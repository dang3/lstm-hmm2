jg
call
in
sub
andl
push
lea
push
add
out
iret
neg
mov
xor
std
jmp
mov
jnp
test
imul
cmpl
insl
and
fnstsw
mov
pop
pushl
std
push
add
sub
add
add
sub
sti
adc
add
daa
sbb
jmp
push
xor
pushl
and
ljmp
cmp
push
pushl
daa
adc
or
pop
imul
add
xchg
pop
leave
ret
fcomip
inc
add
push
jbe
jmp
test
jle
mov
mov
pop
incl
sbb
das
inc
mov
and
jmp
push
push
repnz
add
add
repnz
mov
je
push
ss
pop
sub
dec
add
shr
jne
inc
dec
mov
cld
sub
andl
push
shrb
mov
inc
or
mov
mov
data16
adc
cld
lods
stc
stos
lock
mov
jne
push
lea
fst
push
fdivl
movl
push
dec
in
pop
sbb
and
and
xchg
cmp
ja
loopne
imul
jp
negb
fs
inc
std
push
pop
push
fcomp
inc
push
cltd
cmp
or
push
mov
adcl
cmpl
adc
jne
push
insb
cmp
jmp
adc
mov
and
fwait
dec
sub
xlat
sti
push
push
ret
ds
xor
push
sbb
add
jl
lods
test
sub
mov
test
dec
rcl
lods
into
jno
enter
cmp
into
lock
movsl
inc
dec
lret
mov
mov
push
jbe
xor
xchg
adc
inc
ror
add
cmp
inc
rclb
repnz
pop
inc
rclb
inc
mov
and
repz
or
or
loopne
insw
imul
cld
xchg
test
into
mov
inc
out
stc
inc
or
dec
das
outsb
pop
ja
xchg
pop
mov
and
roll
flds
hlt
lock
add
or
clc
pcmpeqd
xor
loop
mov
cmpsl
shl
lock
hlt
push
clc
or
outsl
addr16
in
lods
sbb
cli
sbb
int
int
clc
hlt
hlt
lock
mov
loopne
add
sub
mov
adc
adc
lock
or
mov
addr16
fsub
out
add
test
pop
adc
pushf
addb
shlb
ficoml
cwtl
int3
jnp
add
in
dec
sti
fiaddl
cli
inc
lock
or
push
data16
out
imul
jle
add
cmp
rcrl
inc
in
imul
in
adc
loopne
and
pop
movsl
in
or
aam
mov
aam
or
jae
mov
mov
add
add
dec
jne
orb
jae
pop
outsl
imul
imul
add
sbb
js
mov
cld
push
cmp
xorl
lcall
call
insl
jg
je
add
movsl
mov
inc
or
in
push
mov
or
xor
cmovns
sbb
pop
pushf
arpl
or
jbe
notb
or
push
adc
jae
cmp
and
sbb
daa
fldl
push
sbb
mov
popf
arpl
jge
xchg
in
inc
sub
xchg
push
jl
data16
or
andb
test
push
ret
push
sbb
xor
push
mov
lock
jae
sub
in
nop
mov
mov
popa
loope
add
cmp
jbe
mov
roll
adc
into
xchg
fsubr
adc
push
push
sar
sub
jmp
push
ss
cmp
fucomi
in
pushf
lea
mov
or
inc
adc
inc
pop
push
je
cmp
std
sbb
iret
xchg
call
and
movzwl
jbe
lea
add
mov
adc
outsl
imul
jge
push
repz
or
aaa
jmp
and
out
xchg
cmp
popa
shrl
push
push
lods
cmp
push
mov
icebp
std
push
pop
lea
std
cmc
scas
clc
mov
add
aam
and
lcall
test
fsubrs
pop
push
mov
inc
and
dec
push
cmp
xchg
stos
jle
fadds
mov
je
dec
pushl
xchg
add
mov
mov
push
sbb
push
dec
inc
popf
aas
mov
sub
or
sahf
jne
push
les
ja
and
xor
and
pop
push
pusha
jns
inc
pop
adc
xchg
add
cmpl
jne
call
fwait
xor
cmpsl
inc
test
adc
repnz
adc
add
adc
scas
fiaddl
mov
and
insb
call
out
lea
push
mov
sbb
sar
call
adc
lock
inc
cmp
test
mov
push
xor
or
pop
sbb
js,pt
adc
dec
inc
inc
shlb
adc
adc
movsl
test
dec
mov
or
adc
push
pop
inc
stos
mov
jge
cmp
nop
pop
lret
shlb
enter
mov
or
xchg
hlt
sarl
call
inc
pop
pop
leave
ret
test
fadds
inc
sti
dec
clc
dec
ret
inc
nop
mov
mov
sarl
jne
and
daa
clc
mov
pop
in
sbb
je
push
pop
fiaddl
clc
orb
js
push
xor
ljmp
add
movl
push
inc
test
fdiv
test
or
cmp
xchg
cmp
rclb
out
pusha
mov
fneni(8087
sbb
and
push
stos
aam
scas
inc
mov
add
cmpsb
sbb
pop
and
jne
inc
mov
push
sbb
daa
lock
nop
pop
or
mov
or
mov
fwait
sbb
pusha
ljmp
sbb
ss
fbstp
out
leave
and
int3
pop
lods
les
pop
add
dec
push
sub
or
mov
jb
and
and
or
andl
pop
std
scas
jns
ja
adc
lea
dec
mov
stos
dec
addb
sub
add
add
nop
lcall
push
pop
jns
push
lahf
and
or
mov
adc
mov
inc
push
shlb
in
pusha
adc
cmpsb
pop
mov
bound
jge
test
jmp
push
mov
lods
add
std
jmp
xor
sahf
xchg
out
pop
dec
mov
sbb
and
dec
mov
jecxz
ss
pop
cld
sbb
loopne
sbb
aad
and
and
jne
push
push
inc
sbb
jmp
dec
in
icebp
aam
mov
or
clc
or
sub
sbb
fdivl
jmp
push
test
or
and
cld
inc
jnp
or
out
mov
push
out
pop
fxch
inc
adcl
mov
pusha
adc
and
xor
testl
sbb
and
xchg
jmp
push
outsb
insb
data16
push
sbb
xchg
aas
in
imul
or
lock
mov
push
jge
icebp
jge
ret
inc
inc
data16
lahf
and
inc
jbe
inc
inc
sbb
imul
je
cmp
mov
jne
adc
inc
adc
cld
andb
pop
shll
add
loope
ret
cmp
and
adc
lea
xlat
mov
jge
loop
inc
cld
into
add
mov
lcall
rclb
hlt
mov
movl
loopne
je
dec
pop
stos
adc
in
mov
lock
dec
repz
lock
in
lock
lahf
in
mov
and
jge
mov
add
adcb
stc
aas
pop
or
sub
jg
orb
in
jns
repnz
cld
inc
and
xor
mov
aaa
imul
roll
leave
sahf
loope
inc
jg
jae
dec
adc
adc
add
push
xor
movsb
sbb
mov
mov
call
or
adc
jbe
hlt
dec
push
cwtl
pop
jae
push
pop
mov
shlb
xchg
mov
aad
mov
lods
jge
insl
mov
cmp
jo
xor
pop
repnz
hlt
push
sbb
push
in
loopne
aas
dec
or
push
daa
in
fcmovu
out
repnz
inc
sub
pushf
mov
out
xor
adc
sbb
fldcw
sti
mov
mov
mov
insl
insl
jae
es
les
in
sbb
mov
add
cmp
cmpsl
push
int3
rcl
xchg
fcom
cmp
ds
nop
mov
add
movsb
cmp
mov
fcomps
mov
mov
clc
and
je
ja
mov
xchg
addr16
inc
jae
lret
ds
hlt
sbb
test
ret
mov
shr
je
ja
add
outsl
cmp
jge
je
je
inc
dec
or
scas
push
push
aaa
jmp
call
lea
mov
push
push
or
push
lea
in
je
jle
mov
xchg
cwtl
lcall
movsb
test
adc
sbb
adc
sub
mov
sti
and
repz
and
mov
push
cmp
sub
jae
fs
sub
mov
aaa
and
add
jbe
add
push
jp
cmpl
pushf
popa
pop
pusha
push
sti
jmp
insl
lods
insb
dec
xor
popa
lock
mov
cmp
pop
mov
fistps
add
pop
stos
lock
in
sub
ja
or
or
xchg
enter
adc
add
mov
xchg
sub
push
addl
bound
gs
lods
lods
ret
pop
lods
mov
cmp
mov
sub
push
jmp
fucom
or
scas
xor
mov
inc
mov
sub
addb
repnz
fstps
push
sub
loopne
xlat
mov
xor
adc
jnp
outsl
push
dec
mov
adc
or
xchg
iret
ds
lock
andl
adc
and
inc
or
adc
mov
or
xchg
into
test
sub
pushf
dec
iret
cmp
adcl
mov
test
je
cwtl
push
cwtl
mov
bound
movsb
adc
bound
xchg
add
jb
je
fsubl
adc
cmp
loopne
add
je
add
or
push
dec
pop
mov
dec
out
xor
cwtl
dec
dec
insb
outsb
rclb
sbb
mov
mov
adc
sbb
rorb
inc
push
mov
mov
push
push
stos
inc
sarl
repnz
jbe
inc
mov
ds
mov
ss
mov
dec
cmpsl
vpmuludq
dec
hlt
insb
jns
enter
sbb
sbb
ficoml
ret
cmpsl
divl
cwtl
in
hlt
xchg
mov
lahf
adc
ss
push
cmp
and
cmp
div
pop
mov
xchg
xor
ds
xor
cmp
gs
out
clc
mov
inc
nop
dec
pusha
push
lret
cmp
push
mov
mov
dec
clc
xchg
push
enter
adc
shl
jne
and
inc
xor
mov
adc
push
or
adc
mov
sub
xor
leave
les
rdpmc
xchg
fildl
push
sub
ljmp
sub
movsb
movsl
sbb
mov
rorb
add
nop
or
sbb
sbb
aam
ljmp
sbb
add
pushl
add
rol
aad
jbe
push
mov
fdivs
add
enter
push
sub
xchg
lock
movsl
push
jns
orl
cld
mov
jbe
or
push
shrl
pushf
dec
adc
add
xlat
add
out
in
adc
inc
mov
cmp
fwait
fiadds
inc
push
mov
jmp
repnz
fsubr
and
orl
leave
rcll
adc
mov
mov
lcall
in
add
cmp
mov
or
pop
sbb
xchg
add
and
mov
or
add
xor
clc
dec
fisttpl
dec
mov
add
sub
pop
call
loop
movsbl
mov
xor
and
sbb
inc
outsb
in
xorl
mov
stos
hlt
push
jo
push
call
sbb
sarb
loopne
jge
adc
add
jl
in
mov
hlt
hlt
inc
xchg
mov
dec
mov
push
stc
sti
pop
dec
mov
dec
push
outsl
add
mov
sbb
and
stos
push
sarl
jns
add
movsl
test
xchg
div
lods
mov
or
mov
in
inc
int3
or
int
into
and
dec
rorb
int
mov
shrl
rorb
and
cmp
fldcw
daa
sub
pop
fsubrs
fstps
ss
insl
mov
sub
sbb
pmaxub
fldcw
loopne
loope
loop
mov
insb
lahf
jecxz
adc
in
out
out
ss
int
call
and
fwait
int
imul
dec
lock
adc
inc
repz
hlt
aaa
cmc
sbb
testb
clc
sub
cli
push
xchg
push
or
sti
pop
and
int3
push
jns
inc
test
cmp
cmp
in
jg
ljmp
lods
std
rolb
sbb
idivb
sub
adc
aam
popa
ja
mov
je
jns
inc
inc
jae
mov
adc
pop
sti
lcall
mov
or
and
or
mov
cmp
inc
dec
insl
jo
mov
dec
or
lcall
xor
test
ror
push
jmp
add
sub
addr16
mov
mov
test
sub
sub
movsl
and
pop
lock
mov
pop
pop
pop
mov
stos
aas
push
or
sbb
xchg
and
repz
outsl
in
outsb
mov
leave
sbb
xor
les
popa
xor
sub
mov
orb
lea
mov
cltd
negl
push
mov
or
adc
daa
dec
xor
sbb
or
daa
jo
in
pop
ljmp
cld
ds
jge
mov
out
cmp
das
add
push
orb
mov
fnstcw
and
loopne
push
clc
sbbl
sbb
js
ret
add
mov
jns
insl
dec
mov
lahf
lock
cmpsl
add
xchg
inc
lods
push
pop
or
pop
push
cs
cmpsb
inc
out
hlt
lock
sub
inc
out
add
push
mov
popa
lods
mov
clc
fsubl
stc
mov
outsl
add
adc
fs
in
mov
and
push
xor
das
sub
cmp
ds
imul
cmp
dec
sbb
push
sub
inc
andl
leave
and
xchg
imul
clc
clc
and
push
and
sub
dec
jle
add
cmpl
xchg
orps
inc
push
repnz
loope
dec
test
lock
fdivl
and
lock
adc
in
push
sub
jl
les
pushf
call
push
das
cmpsb
jg
cs
fsubl
sbb
mov
and
leave
adc
adc
shl
xchg
testb
sbb
dec
inc
fistpll
mov
and
mull
jbe
adc
mov
daa
xor
jns
fdiv
xor
jmp
add
or
pop
cmpsl
js
insl
andb
add
xchg
sbb
repz
rcrb
inc
push
out
and
mov
movzwl
inc
add
cwtl
push
pop
or
loope
mov
fildl
pusha
int
and
idivb
mov
pop
popf
adc
sbb
icebp
fdiv
loopne
or
in
sbb
loopne
sbb
sub
xchg
sub
sbb
movsl
loop
iret
loopne
sub
imul
or
push
movsb
inc
adc
xchg
cmp
loopne
ret
push
enter
sbb
xor
in
outsl
mov
mov
sub
pop
in
or
das
or
dec
cli
add
and
sti
inc
cmp
or
movsb
push
mov
adc
push
in
add
stc
add
jne
inc
loope
in
jo
dec
sbb
popa
cmp
insl
das
xchg
mov
pop
fwait
cltd
mov
or
out
adc
mov
mov
je
jns
inc
ret
jb
push
push
and
pop
cmpsb
add
mov
push
loopne
popa
in
iret
test
adc
or
mov
pop
lock
lahf
ret
xchg
lock
mov
enter
call
xchg
repnz
jg
adc
lds
jg
rcll
push
mov
adc
std
add
stos
adc
mov
xchg
sub
aam
inc
gs
cmp
ljmp
inc
std
js
incb
cmpsb
mov
ret
addb
ja
inc
mov
add
mov
jmp
sub
mov
loope
xor
sub
push
loope
xor
or
xor
add
call
testl
or
adc
xorps
and
cmp
mov
movsl
ljmp
cmp
jnp
lret
push
mov
sbb
push
xor
in
and
es
shl
and
cmp
adc
push
or
adc
jnp
pop
jae
cs
rolb
dec
clc
lret
fdivl
mov
mov
cltd
push
push
test
and
inc
dec
decb
out
and
rorl
stos
pusha
shlb
stos
adc
add
mov
add
movsw
mov
mov
rcrb
rep
stos
mov
cmp
in
xor
cs
push
imul
shl
jl
in
das
loope
lods
push
sbb
fmuls
push
test
cmp
popf
mov
lea
sbb
je
roll
or
lock
je
filds
add
adc
jne
jns
bts
cs
xchg
xchg
push
mov
sbb
inc
mov
call
jmp
and
lods
fsubrl
add
test
and
xor
sbb
mov
sbbl
push
insl
mov
push
call
mov
jb
fbld
test
in
inc
hlt
filds
lods
andb
decb
xor
lcall
mov
dec
jns
test
jbe
testl
pop
jnp
cmp
in
add
pop
jne
sti
mov
mov
mov
je
rorl
sub
idiv
cmp
and
mov
sub
ficoms
or
nop
les
xchg
lahf
push
cmpsb
inc
adc
add
ret
or
add
adc
shrb
aaa
cmp
push
insb
jno
pusha
or
sti
rcrb
add
nop
xchg
loopne
cmp
pop
stos
push
int3
and
loope
xor
arpl
xor
cmp
dec
push
repnz
sub
xor
outsl
pushf
adc
xor
xor
out
fbstp
repz
in
sub
sar
mov
mov
hlt
adc
sti
xchg
insb
cmp
mov
out
or
xchg
inc
or
mov
aaa
adc
fs
adc
jnp
subl
jb
test
mov
leave
add
mov
mov
mov
xor
dec
pop
pop
movsb
mov
test
pop
push
mov
pop
xchg
cmp
fdivl
in
adc
and
cmp
mov
dec
push
adc
std
cmp
xor
add
enter
lock
pop
or
in
in
cmp
push
ja
cmp
adc
mov
pop
lods
push
and
sub
sbb
or
dec
lret
cmc
xor
or
sub
lods
loopne
insb
lret
shll
or
stos
movsb
xchg
stos
mov
js
movsl
sbb
outsl
aaa
xchg
shrb
daa
add
push
mov
mov
push
scas
addb
decl
inc
add
xchg
rclb
sub
clc
rcl
les
iret
outsl
arpl
fiaddl
pop
or
add
enter
jbe
mov
popf
enter
js
stc
push
and
test
ja
push
mov
or
push
mov
rolb
xchg
in
xor
call
fpatan
cs
xchg
sub
pushf
nop
cwtl
dec
push
xchg
cld
mov
movsb
and
adc
filds
adc
clc
sbb
xchg
push
imul
arpl
test
pop
mov
push
lcall
subb
xchg
sbb
mov
scas
test
xchg
jnp
sbb
jle
loopne
std
cmp
jle
icebp
push
jge
adc
and
jg
jno
in
adc
or
popf
adc
push
dec
xchg
in
xchg
std
std
and
bound
lea
push
pop
leave
cmp
sub
jmp
pop
pop
cmp
dec
pop
cmp
clc
adc
hlt
sub
fsub
or
adc
push
lock
repnz
sahf
adc
inc
stos
enter
cmp
aaa
pop
enter
dec
dec
enter
int3
and
xor
push
mov
jecxz
and
in
lock
sub
pop
fdivrs
call
add
mov
scas
hlt
dec
bound
and
insl
xchg
sbb
pop
push
and
xor
sub
mov
jecxz
test
popa
pop
das
pushf
daa
vmwrite
adc
lods
loopne
lods
stc
adc
les
mov
push
jb
loopne
lods
aaa
adc
and
push
adc
cmp
adc
jb
pop
jb
mov
pop
jb
pop
mov
jb
rorb
sub
rcrb
in
iret
or
adc
repz
stos
inc
subb
add
cmp
dec
jae
push
push
mulb
pushf
sub
inc
pop
push
mov
mov
lods
mov
fsubrs
and
add
ret
fsubrs
and
mov
xchg
sbb
push
fsubrs
and
inc
lock
mov
add
movsl
xlat
mov
jg
mov
adcb
jge
fdivl
lret
cmp
hlt
std
sbb
mov
jl
or
lods
movsl
mov
xor
sbb
sti
inc
xchg
xor
pop
adc
push
inc
mov
lock
ficoms
add
or
inc
mov
add
or
aad
hlt
je
shrl
lods
lea
mov
jb
add
enter
cmp
adc
sbbl
addl
call
add
pop
and
push
xor
test
out
ret
test
les
add
lock
sbb
add
xchg
fmuls
fcoms
outsl
repnz
push
cmp
push
or
lea
cmp
add
push
or
or
jmp
xchg
daa
fisubrl
inc
adc
inc
push
or
setns
mov
jg
and
test
jne
mov
je
or
dec
cmpb
and
fmuls
andb
addr16
adc
std
pop
dec
xor
cmpsl
sbb
inc
adc
xchg
xchg
cwtl
mov
loope
les
inc
jo
add
mov
call
inc
mov
shl
adc
lock
cmp
ficomps
fs
arpl
or
int
fsub
mov
pop
ret
subb
testb
clc
adc
or
outsl
fiaddl
cmp
mov
xor
cmp
push
rolb
leave
mov
clc
adc
repz
adc
shlb
xchg
adc
jle
pushl
call
jno
je
iret
sub
lcall
out
xor
pop
les
dec
adc
test
adc
push
push
mov
xchg
mov
jle
sbb
mov
jno
hlt
aas
add
push
mov
test
xor
sub
daa
call
mov
mov
into
or
in
mov
hlt
cmp
push
dec
dec
sbbl
lret
push
sub
dec
mov
cmp
orl
mov
pop
ror
add
mov
jae
aaa
push
pop
jne
lock
and
push
jns
std
push
inc
cmpsl
imul
inc
mov
jl
idivl
rolb
pop
add
sbb
and
std
notl
cmp
push
dec
in
push
loopne
movsl
jno
and
dec
xor
or
shll
cmpl
mov
jge
xchg
jb
ljmp
fsts
rdpmc
pushl
jno
jne
jo
sbb
insl
addr16
aaa
or
hlt
cmp
jbe
outsl
and
add
call
jno
popa
enter
and
mov
sub
add
mov
sti
adc
jns
pop
pop
je
jno
test
cmp
mov
push
adc
lahf
add
movsb
call
cmp
mov
jge
pop
jb
adc
leave
cld
push
xor
and
pop
mov
and
or
dec
sahf
int
sub
pop
mov
rorb
sti
dec
cmp
or
cli
lock
stc
fcom
cli
fildll
les
push
push
fstpl
enter
push
mov
enter
enter
or
nop
sub
jne
push
jne
push
mov
fcmovnb
and
ljmp
or
inc
insb
frstor
pop
sysret
leave
enter
mov
cs
xchg
add
mov
jg
and
and
xor
es
add
adc
mov
jnp
adc
ja
sub
ret
and
nop
loopne
inc
sarb
dec
testl
fisttpll
push
daa
dec
push
test
dec
ret
sbb
imul
test
pop
orb
ljmp
clc
adc
add
add
data16
dec
cld
mov
jmp
call
add
jl
pop
xor
hlt
or
rorl
es
aaa
xor
pushf
push
xchg
mov
push
mov
ret
inc
enter
inc
loopne
or
in
add
adc
ror
ret
in
inc
sbb
mov
stos
xchg
cwtl
push
or
and
jno
dec
les
ret
mov
daa
fmull
jg
jne
mov
dec
es
ficomps
or
dec
enter
adc
jne
add
mov
jbe
jmp
adc
pop
aaa
scas
mov
ljmp
stc
mov
and
je
add
and
lahf
aad
jne
push
je
jmp
mov
jle
jmp
mov
jl
mov
out
xchg
mov
xchg
add
sbbb
dec
lret
lock
aaa
iret
repz
clc
cld
cmp
dec
jns
mov
push
lock
ret
pop
js
add
mov
lahf
xchg
jo
push
pop
enter
jmp
into
add
push
pop
jle
pop
movsl
push
sub
out
dec
mov
and
mov
insb
or
mov
pop
lcall
pushf
insl
repnz
rolb
add
sub
pop
lods
pop
pop
mov
add
and
int3
dec
cmp
cmp
mov
mov
lds
jne
jb
xchg
je
mov
sbb
js
push
outsb
or
arpl
pop
andb
jo
addb
sub
stc
stos
pusha
add
sbb
into
jnp
aam
push
push
lods
sub
sub
not
add
cld
cwtl
pop
mov
adc
cmp
mov
jae
push
pushf
adc
enter
cwtl
addb
or
pop
xchg
mov
push
push
sbb
ret
adc
dec
rorb
inc
das
sbb
push
cld
hlt
sub
push
inc
ds
mov
mov
imul
add
xchg
mov
rcl
movsb
add
cmpsl
pusha
std
inc
cwtl
subb
xor
mov
ret
mov
out
mull
cltd
pop
jne
xor
sbb
int3
push
dec
pop
sti
mov
sub
jb
dec
fs
sbb
int
fnsave
push
fcomps
repnz
jo
cs
xor
ss
rorb
movl
jno
add
adc
fdivrl
decb
sbb
insb
mov
popl
dec
divl
addr16
jne,pn
push
mov
in
popf
in
sub
adc
lcall
inc
mov
movsb
sti
sub
or
outsb
xchg
cmp
lock
xor
fcomps
daa
xchg
jnp
mov
adc
pop
mov
inc
mov
addr16
cltd
cli
lods
in
dec
int
cli
pop
and
pop
jne
push
int3
mov
mov
pop
test
inc
pop
enter
add
mov
adc
or
cli
repz
mov
shl
cmpsb
push
sbb
in
es
fsubs
rcrl
lock
mov
sub
or
rclb
shrb
xor
daa
dec
les
pop
add
test
cmp
add
shlb
mov
movsb
sub
daa
fsubs
jl
jne
push
les
js
fstps
and
enter
jmp
xor
mov
pop
add
mov
cmpl
xchg
sub
aam
push
test
inc
lods
repnz
jnp
adc
pop
jecxz
push
adc
test
test
mov
mov
mov
and
push
adcl
xchg
lods
mov
leave
mov
xor
push
das
nop
dec
pop
fs
call
popf
cmpl
movl
inc
mov
jmp
in
xor
adc
cwtl
adc
cmpsb
negb
in
mov
mov
arpl
jge
imul
pop
xor
add
dec
mov
lock
jge
call
xchg
add
mov
or
add
mov
daa
fsubl
mov
pushl
es
fsubr
faddl
insb
jl
adc
push
and
jp
fsubrs
push
arpl
adc
adc
mov
jl
xchg
test
ja
cmp
fcomi
sahf
push
and
int3
or
xchg
push
enter
ja
sbb
ds
fcompl
pop
leave
push
mov
inc
add
in
dec
lds
insb
test
enter
pop
mov
add
sbb
lret
push
in
cmp
jg
jns
and
sbb
inc
mov
inc
rclb
cmp
ss
mov
jecxz
inc
sbb
and
enter
jecxz
lock
jg
pop
int3
add
sbb
adc
cmp
add
dec
in
popf
adc
push
je
popf
pusha
mov
rcrb
add
les
sbb
xor
xchg
adc
add
ds
cmp
mov
push
fsts
mov
leave
mov
in
mov
scas
enter
in
add
ja
iret
add
insl
pushf
add
or
adc
inc
inc
jle
movsl
cltd
popa
sti
add
cmp
jb
insb
xchg
mov
lds
cmp
dec
mov
xor
mov
std
je
rorl
and
inc
loopne
and
push
fsubrp
fbstp
sar
mov
outsl
idiv
int
cmp
mov
lea
sub
or
inc
xchg
mov
out
fs
jge
sub
loope
fdivrs
shlb
aam
fdivl
orl
mov
sar
adc
sub
xchg
sub
mov
add
imul
mov
out
mov
shrb
jno
jg
push
fwait
xchg
sub
jp
test
lea
rorb
jge
sbb
jmp
or
std
sbb
bound
movzbl
lock
add
repz
mov
movsb
mov
ljmp
xor
test
push
leave
mov
popl
or
cmp
push
add
es
sbb
stos
add
adc
add
nop
dec
mov
mov
cmp
test
lahf
push
cli
xor
cltd
mov
dec
push
in
push
lret
test
sarb
sbb
add
ja
mov
dec
pop
cmp
push
sbb
aad
jns
adc
out
bound
push
mov
clc
shrb
ljmp
add
or
jae
out
mul
mov
sub
xchg
and
in
test
jle
pop
adc
jle
jmp
mov
jl
shlb
ret
sub
jns
test
adc
jmp
dec
pushf
sbb
pop
fildl
dec
push
ljmp
aam
lcall
mov
mov
mov
in
loope
pop
iret
xor
leave
and
pushf
test
inc
jne
addr16
or
je
adc
lods
pop
add
push
push
pushf
add
arpl
xchg
imul
push
in
xor
lahf
arpl
call
or
popf
imul
adc
cmp
loopne
mov
lahf
fisttpl
in
cmovns
test
mov
or
jl
mov
cmp
mov
std
sbb
adc
jne
jl
stc
inc
iret
jne
mov
xchg
and
pusha
repnz
dec
xchg
rol
adcl
mov
popw
add
mov
mov
jne
jae
jmp
leave
aam
add
jmp
and
dec
aas
and
push
dec
and
std
adc
imul
pop
jmp
jmp
cwtl
mov
push
add
jae
sub
mov
sbb
add
in
mov
stc
jl
out
lods
add
mov
in
adc
mov
pop
ffree
ffree
fstl
mov
fldl
xchg
iret
es
out
xchg
sbb
lahf
add
xor
mov
inc
fcom
mov
xor
jl
popa
in
loopne
fdivrs
js
lea
pop
and
pop
movsl
inc
in
lods
jl
push
es
jl
mov
clc
fstpl
stc
add
clc
add
cmpsb
adc
or
mov
add
sub
out
fs
inc
dec
add
mov
xchg
out
lds
rolb
fdivr
fldt
mov
or
adc
cmpsl
imull
in
fisttpll
mov
out
adc
or
fistpll
addr16
rcrb
jbe
repz
cs
add
aam
test
pop
test
pop
fsubr
or
xchg
rclb
cmpsl
in
ds
popf
fmull
and
xchg
xchg
inc
hlt
hlt
hlt
enter
hlt
fdiv
mov
mov
cmc
pop
sbb
and
rcr
xchg
sbb
sub
imul
sbb
lock
lock
or
push
lock
rolb
lock
in
dec
cmp
inc
sub
fmuls
mov
push
or
push
movd
jae
pop
aad
sbb
clc
xchg
push
imul
add
cltd
sbb
cmp
xchg
add
cmp
rcr
repz
out
aas
outsb
mov
test
or
mov
mov
mov
and
or
push
or
lea
mov
add
test
pushf
xorb
push
add
sbb
sbbl
daa
push
enter
in
inc
mov
lds
inc
xorb
nop
lods
add
lock
fstpt
add
cmp
call
jle
rclb
add
test
xchg
jle
xchg
cli
insb
ret
mov
push
mov
sbb
jecxz
popa
or
mov
std
or
fwait
test
fistl
inc
xchg
pop
pusha
rcr
adc
test
push
mov
jns
or
add
rcr
or
call
inc
pop
pop
push
gs
rclb
fdivr
or
push
ljmp
sub
jmp
in
cs
into
and
aam
roll
in
repnz
out
loopne
into
inc
ret
inc
gs
adc
dec
test
or
dec
push
cmp
cmp
aam
cmp
mov
jno
inc
sbb
repz
lcall
or
and
dec
shl
testb
clc
sub
and
outsl
out
iret
cmp
jne
test
fcoml
js
push
stos
nop
das
mov
fmuls
jo
xchg
push
pop
add
inc
in
sub
add
cwtl
scas
and
cli
adc
ljmp
push
ja
data16
sbb
cmp
in
rcrb
cli
leave
hlt
aad
mov
fisubrs
and
ja
mov
inc
mov
inc
inc
inc
out
mov
cmp
jae
xchg
cmp
es
xor
and
xor
ss
pop
xor
out
and
and
das
pop
and
das
sbb
sub
lcall
ja
dec
out
xor
arpl
stos
pushf
insl
add
push
or
aaa
cld
sar
sub
or
movsl
repnz
sub
adc
js
inc
lock
jmp
push
dec
adc
dec
pop
dec
mov
sti
or
aaa
sarb
rcrb
je
std
into
insb
xor
lods
mov
mov
sbb
mov
inc
xchg
stc
sbb
shlb
jmp
adc
push
xor
out
or
mov
add
add
xchg
and
adc
hlt
and
lcall
ja
lcall
fidivl
push
lock
clc
mov
outsl
xchg
add
mov
cs
mov
aad
add
push
or
xor
add
sub
add
pop
jp
xor
das
das
lahf
xor
hlt
xchg
lock
push
stos
les
adc
mov
push
adc
or
jne
xchg
insb
adc
jo
mov
jmp
cmp
jle
jnp
or
jmp
call
ja
sub
cmc
sbb
out
ja
fs
fisubrl
xchg
or
mulb
sbb
sbb
adc
or
xor
ss
rclb
mov
and
xchg
psubsb
out
xchg
mov
sbb
pop
add
sbb
mov
xchg
aad
dec
mov
adc
jo
inc
aam
push
cmp
push
pushf
cmc
ljmp
test
pop
adc
les
stc
mov
mov
jno
outsl
jmp
cld
or
test
loopne
daa
xor
stos
ret
inc
or
push
adc
imul
xor
insl
imul
or
and
sahf
jnp
sbb
rcrl
leave
jnp
dec
jmp
bound
psubsb
adc
pusha
loopne
out
jb
clc
xchg
pop
cmpsl
int
mov
dec
cmp
test
shrl
adc
fldcw
xchg
cltd
sub
pusha
adc
sbb
sbb
ret
jl
fsubrs
pushf
adc
pushf
test
sub
sub
das
or
movsb
sub
and
xchg
popa
inc
aad
scas
ss
pop
ret
mov
jb
sahf
sbb
inc
out
push
lds
add
dec
push
jecxz
imul
cld
scas
dec
add
pushf
cld
bound
sbb
xchg
cmp
jge
test
movsb
push
loop
lods
dec
testb
dec
push
and
int3
push
xor
xor
ss
daa
fadds
lahf
sbb
sub
jo
int
pop
or
into
add
xorl
xchg
dec
pop
mov
cmp
imul
push
call
mov
cwtl
xchg
push
lds
push
and
popa
and
insb
in
loopne
or
add
hlt
adc
add
xor
lods
xchg
dec
jns
push
ret
inc
cmp
in
xchg
lea
out
cmpl
push
fildll
out
cmpsb
fsubp
cmp
mov
mov
ja
add
or
call
sti
push
cmp
mov
sub
cmp
mov
dec
dec
je
xchg
loopne
sbb
movsl
pop
popa
aam
rorb
lahf
sub
jo
sub
or
movb
jmp
adc
test
dec
pop
inc
aas
popa
call
rolb
add
pusha
sti
pop
xchg
mov
sti
mov
fs
insb
xor
fdivs
xchg
in
xchg
imul
sahf
inc
aaa
ret
lock
fdivp
mov
fs
mov
or
add
sub
std
gs
imul
in
std
fstp
insl
dec
rcl
push
sbb
popf
pop
push
pop
pop
dec
inc
and
rcll
call
jae
outsb
popa
repz
push
and
test
add
pushf
ljmp
les
xor
mov
mov
out
pusha
dec
andb
sbb
adc
lea
mov
mov
push
in
popf
jb
push
inc
xchg
sbb
adcb
stos
or
fs
pop
push
movsb
aad
sarl
lods
jge
cld
or
insl
adc
test
and
and
push
or
mov
arpl
sub
or
inc
aas
mov
xchg
scas
movb
mov
push
cli
and
add
cmp
adc
sub
int
mov
add
jle
sub
xlat
or
stos
add
adc
mov
dec
ret
sbb
pop
in
jle
pusha
push
xor
scas
adc
jae
je
cld
or
testb
add
sbb
xchg
adc
jb
rcr
adc
leave
push
inc
jmp
sti
push
push
jno
mov
mov
insl
daa
xlat
mov
and
popa
lds
sbb
inc
ds
rcrb
cld
test
xor
lods
loopne
outsb
push
or
jl
pop
inc
add
mov
cmpsb
pop
mov
add
dec
psubq
insl
sbb
dec
mov
roll
shrl
int
aam
or
or
int3
std
jno
in
cwtl
xchg
into
std
sar
lea
loopne
out
sbb
push
in
xor
ret
mov
or
sbb
xchg
rolb
fcmovb
std
push
mov
es
icebp
sar
or
or
scas
push
clc
movsl
sbbl
dec
sahf
movsl
push
rcrl
sbb
in
dec
insb
insb
sbb
lods
nop
daa
nop
stos
je
test
cmp
ss
cmpsl
pop
in
or
push
nop
dec
shl
cmp
xchg
push
mov
test
repz
loope
or
leave
mov
sub
xchg
orb
or
pushf
cltd
or
jo
adc
rol
std
or
mov
adc
and
out
and
add
sbb
mov
repz
push
sbb
pop
jmp
adc
cmp
mov
loopne
push
adc
out
push
sbb
dec
add
jge
fcoml
push
push
sub
loopne
sub
dec
dec
movsl
test
mov
push
add
sbb
imul
jb
iret
call
inc
in
push
push
cmp
imul
or
xorl
stos
mull
insl
mov
orb
rcrb
mov
cwtl
fnstcw
nop
jecxz
imul
daa
xchg
nop
add
lock
or
jae
int
cmp
or
pusha
mov
sbb
adc
stc
push
and
test
dec
sar
jle
cli
fmuls
or
add
imul
sub
test
in
or
popf
scas
gs
cmp
xchg
or
and
xchg
cmp
or
movsl
xor
jl
jmp
repz
add
mov
div
mov
mov
add
daa
jnp
repnz
add
hlt
cltd
js
pop
jge
xorl
testl
adc
xor
sbb
cmpsl
mov
das
and
rclb
pushf
cs
mov
push
inc
push
jle
push
sub
ds
jle
adc
adc
inc
in
sti
add
push
add
insl
xchg
mov
adc
pusha
xchg
add
and
adcl
mov
adc
dec
movsb
lods
loope
and
pusha
mov
sbb
out
xor
mov
imul
xlat
adc
hlt
stc
lods
add
or
lods
popa
adc
int3
mov
addl
inc
jge
jbe
inc
and
add
adc
jp
jne
jae
sti
jo
inc
outsw
rcrb
das
popa
add
cltd
in
jne
hlt
leave
or
jecxz
xchg
dec
sub
and
ds
mov
fcompl
call
inc
xor
sub
fdivr
and
jo
and
cmp
and
cs
dec
in
sub
sub
stos
sbb
jo
mov
cmp
xor
movsb
xor
xchg
push
adc
and
out
mov
dec
sub
shlb
sbb
push
fisubl
or
rorb
mov
repnz
shlb
mov
scas
shlb
lret
jmp
ds
insb
movsb
fwait
xor
jns
in
lods
repnz
in
cld
lods
sbb
jb
hlt
and
nop
out
lock
xor
pop
repnz
das
sub
sbb
in
inc
movsb
push
push
ret
xchg
cwtl
mov
enter
lock
and
das
movsb
das
cwtl
sbb
fsubs
pusha
out
sbb
and
xor
sub
pop
push
adcb
adc
fcom
sub
inc
and
cmp
clc
push
dec
int3
and
and
push
mov
lods
jb
int3
rol
add
xchg
add
push
in
pop
cs
mov
arpl
leave
mov
or
leave
add
je
pop
mov
sub
and
shll
lahf
pop
push
jbe
icebp
mov
cmp
xchg
inc
nop
out
sub
cmp
js
pop
push
cmp
mov
inc
movsb
test
or
pop
stos
mov
nop
mov
ret
cmp
pop
sbb
movsb
cs
jns
mov
adc
pop
push
ss
leave
cmp
dec
sbb
jb
popf
and
cld
and
xchg
ss
fcomp
add
lret
fdivs
pop
xchg
sub
jno
dec
or
inc
sahf
cs
sub
jo
pop
stos
sbb
js
sbb
fnstcw
add
pushf
jmp
orb
subb
sbb
jns
sbb
xchg
ds
cmp
add
pop
lock
mov
rcrl
and
dec
fdivr
in
mov
and
sub
mov
rorb
and
in
adc
jno
lret
push
fdivrl
jb
xor
push
cmp
mov
adcl
lods
jb
push
jno
pop
and
mov
push
insb
sub
movsb
jb
xchg
jl
cmp
js
in
push
cmp
dec
in
sahf
cs
mov
aam
or
push
movsb
jb
lods
call
add
jle
bnd
int3
and
hlt
das
push
insb
cs
in
in
cld
cld
add
xchg
xchg
xchg
lret
out
mov
shrb
aad
stc
inc
cs
enter
xor
scas
sbb
and
fnstcw
cmpl
loop
pop
lcall
aad
adc
imul
and
inc
dec
push
fs
aam
das
xchg
and
xlat
xchg
xor
sbbl
popf
sub
nop
inc
adcb
loopne
subl
pmulhuw
sbb
dec
int3
cs
out
cmp
and
je
pop
repnz
test
sbb
in
pop
lods
push
rolb
mov
int3
adcl
outsb
jb
ret
rclb
cmp
je
dec
rcll
push
aam
xchg
loop
cs
pop
andl
add
cmp
daa
enter
push
xchg
dec
push
enter
rcrl
je
sbbb
je
inc
sbb
xor
inc
sub
scas
repnz
clc
clc
inc
cmp
cmp
cmp
push
dec
and
push
push
pushf
fs
dec
in
js
and
mov
test
mov
sbb
in
shrb
pusha
aas
xchg
or
or
sub
dec
in
and
xor
dec
sahf
sbb
cs
jl
mov
and
sub
shrb
daa
xchg
aaa
inc
push
sub
fadd
shlb
enter
push
push
push
push
imul
hlt
cmp
cmp
jb
hlt
or
enter
jb
int3
das
enter
nop
lret
pop
pop
pusha
in
lret
cmpsb
in
jl
push
jb
jl
lock
mov
test
xor
adc
lock
andl
fs
sub
and
int3
les
aaa
pop
in
fsubl
std
les
lret
nop
insb
push
mov
das
clc
fistps
fmul
leave
aam
or
and
push
sbb
dec
sub
cmp
insb
dec
jb
mov
mov
nop
xchg
ret
jo
fwait
aam
insb
xchg
and
fs
je
movsl
cltd
in
pop
sub
call
insb
sti
call
inc
ds
fwait
test
fsts
jl
push
and
xor
push
cli
jmp
xor
adc
mov
or
inc
push
in
js
sbb
cltd
or
dec
test
sub
es
sub
xor
or
cmp
inc
dec
gs
inc
and
adc
dec
push
push
cltd
or
dec
test
mov
inc
sub
dec
in
insb
mov
jo
fcoms
push
sbb
lock
mov
and
pop
jecxz
int3
and
pop
adc
dec
sub
lock
add
lock
sbb
mov
and
xchg
repnz
jge
mov
sahf
fwait
imul
pop
and
sub
dec
je
adc
int
push
loop
and
outsb
pop
jb
iret
nop
add
sbb
int
das
in
das
add
ja
hlt
add
fsubrs
rcll
movsb
or
mov
add
nop
mov
mov
loopne
dec
mov
mov
cmp
loopne
and
andl
xchg
rclb
popa
mov
xchg
rclb
addr16
fmuls
andb
leave
movsb
xchg
addb
cltd
movsb
rcll
insl
mov
pusha
lahf
jbe
or
push
lea
xchg
sahf
movsbl
sbb
test
xchg
sahf
adc
inc
dec
lcall
pop
inc
push
ret
aam
xchg
data16
fsts
arpl
test
and
or
cmp
enter
icebp
cmpsb
adc
js
mov
pop
sub
lods
inc
stc
mov
sub
sbb
dec
jbe
mov
js
ficoml
push
jl
mov
lret
add
sub
add
jge
out
pusha
icebp
ja
ret
pop
popf
rep
inc
pop
popf
test
mov
mov
adc
mov
insb
leave
xchg
adc
aaa
sbb
das
jmp
das
jne
loop
rcll
dec
inc
sbb
xchg
mov
dec
lret
sub
pop
pushf
pushf
inc
add
rclb
cmp
int3
adc
pushf
cli
dec
aad
xor
sub
xchg
dec
push
push
mov
push
sarl
xchg
and
jmp
ja
mov
sbb
test
jo
or
gs
in
popa
cmp
pop
or
lods
les
test
data16
pop
les
and
jnp
out
pop
mov
xor
bswap
ret
les
sub
rol
nop
or
call
enter
lock
or
in
lods
mulb
sub
ljmp
push
mov
shlb
shll
fsubr
cmp
pop
xor
out
fsubs
add
lock
sbb
rolb
mov
xor
mov
cld
xor
mov
mov
cmp
inc
xor
xor
jnp
lret
mov
cmp
cmp
in
icebp
in
lret
or
adc
je
rep
mov
daa
sahf
inc
push
add
les
jmp
aad
test
addl
cs
xchg
pop
rol
ss
cmp
fldlg2
adc
pop
mov
add
in
in
xorl
mov
xor
movsl
test
or
xchg
subl
out
adc
pop
roll
mov
outsb
cmp
mov
setae
test
inc
or
pop
or
pop
sub
mov
js
andb
xlat
adc
or
cmp
pop
pop
dec
ret
dec
push
xor
inc
push
jbe
shll
and
cmp
jp
int
pop
mov
sbb
xor
ja
mov
or
dec
sub
jge
test
outsb
daa
mov
mov
jnp
popa
jae
mov
clc
mov
or
sbb
lahf
jge
in
dec
in
inc
movb
je
and
in
and
pop
mov
dec
pop
negb
push
pushl
je
cmpl
inc
sbb
add
add
lea
icebp
add
cmp
adc
cltd
push
dec
hlt
push
pop
mov
fldt
aam
mov
mov
jmp
in
out
mov
cmp
mov
push
dec
imul
test
pop
jmp
pop
insb
mov
rorb
xchg
pusha
mov
mov
xchg
clc
popa
jl
adc
or
pusha
sub
roll
adc
inc
jg
out
pop
test
fstpl
mov
push
mov
and
nop
mov
sbb
xor
clc
dec
cmpl
mov
lcall
or
xor
hlt
cmp
push
xchg
negl
test
shr
lock
xorl
daa
cmp
aam
push
jo
sbb
out
and
sbb
and
jmp
call
daa
dec
sbb
shl
sbb
gs
dec
or
xlat
xor
cli
mov
rcll
cmp
aas
mov
jg
adc
jmp
rcrb
dec
push
lea
or
push
pop
je,pn
adc
fnstcw
stc
repnz
ss
xchg
xor
jo
jl
xlat
xor
mov
inc
and
out
in
mov
pop
call
cmp
jecxz
sub
push
xchg
out
xchg
je
push
add
mov
jno
cmpsb
popf
clc
add
out
pop
cs
xchg
push
loopne
xlat
div
test
inc
imul
enter
lods
aad
leave
pop
popa
cmp
or
xor
popf
hlt
sbb
daa
lahf
push
pop
xor
add
lods
adc
adc
loopne
xchg
or
loopne
sbb
cmpsb
adcl
xlat
adc
mov
xchg
sub
mov
mov
add
xchg
sti
mov
inc
pop
or
call
and
pop
mov
fistl
mov
outsl
push
loope
imul
pop
adc
xchg
nop
ss
or
xchg
push
push
pop
add
or
add
pop
int
dec
pop
push
adc
mov
jp
cmpsb
pop
and
cmpsb
pop
inc
pop
mov
popa
cmpsl
aam
and
andl
std
std
sbb
mov
inc
jno
xchg
mov
mov
in
das
cmpl
fcoml
cmp
pusha
pop
in
cld
jnp
clc
test
mov
enter
xor
dec
aam
dec
xlat
cmpsl
je
shll
push
inc
jp,pt
sub
push
adc
sbb
mov
xorb
lret
jne
pop
push
sbb
subl
das
add
jne
mov
das
cmp
mov
pop
dec
pop
pop
lcall
aaa
out
fcoms
fdivrl
cmc
or
cs
and
hlt
idiv
call
call
cli
xor
xor
ljmp
push
popa
dec
jne
lret
xchg
push
pusha
decl
es
hlt
mov
cmp
dec
or
fwait
sbb
push
imul
les
push
inc
div
or
cwtl
push
cmc
cmpsb
xor
icebp
or
mov
insb
insb
cmp
push
mov
xor
jne
in
mov
jmp
mov
aam
mov
in
out
adcl
sub
in
out
sub
scas
das
int3
sub
or
xchg
sbb
ret
idiv
inc
hlt
mov
pop
push
aaa
sbb
and
std
and
outsb
adc
loopne
sbb
adc
test
or
movsb
das
in
fdivl
dec
ret
lods
enter
sub
lock
xorb
dec
out
daa
mov
test
mov
psrlw
aaa
dec
jb
add
in
sub
jne
iret
in
test
add
add
or
mov
and
mov
and
push
je
ror
add
adc
gs
in
insl
jo
test
push
mov
pushl
mov
or
mov
dec
add
mov
ljmp
push
fidivl
test
pop
lret
mov
in
push
addl
or
or
sbb
fsubs
mov
cltd
mov
les
hlt
mov
and
gs
mov
inc
test
or
jl
sti
aaa
jo
movl
je
jmp
std
mov
pop
push
jle
jmp
mov
roll
or
xchg
jl
jnp
das
movsb
sbb
add
push
inc
fsubrl
adc
cwtl
clc
lea
and
int3
cmp
inc
xchg
sbb
mov
sub
orl
add
ss
push
dec
out
jb
pop
sahf
xchg
mov
mov
fstl
sbb
xchg
pop
lret
or
adc
adc
aam
sub
adc
shrb
movzbl
xchg
sub
scas
or
push
push
nop
mov
push
cmp
enter
add
and
add
or
xchg
push
and
enter
cmp
add
inc
jl
and
nop
add
xor
cmp
push
and
and
or
nop
dec
push
pusha
lahf
sbb
adc
push
imul
nop
xor
scas
shlb
lds
xchg
fcomip
mov
xchg
add
add
add
or
pop
push
or
pop
or
dec
sbb
sbb
mov
pop
out
enter
or
lds
fdiv
push
out
je
xor
lock
aam
lret
adc
adc
jae
in
fs
jo
mov
cld
ja
xchg
mov
lea
cmp
fs
add
repnz
xor
cmpl
jns
add
je
add
add
imul
jle
lods
lods
or
push
mov
nop
cld
pop
cmpsl
subb
dec
leave
push
pop
dec
push
sbb
push
and
push
push
adc
or
pushl
push
pop
jae
and
add
pop
and
mov
ret
loopne
pop
add
lods
pop
inc
loop
sub
popf
add
add
out
sub
push
int3
das
adc
jecxz
xchg
mov
mov
xor
mov
insb
pop
fs
xor
test
jl
fadds
mov
add
sahf
popa
adc
pop
push
sub
ret
push
lcall
dec
ja
sbb
loopne
and
or
jp
and
xor
adc
aad
xor
mov
inc
mov
pop
stos
test
ret
fsubrl
add
jp
dec
mov
sub
mov
adc
or
pop
pop
cmpsl
inc
sub
or
cmp
push
sbb
mov
xor
out
orb
xor
cltd
sbb
mov
fstps
mov
lods
cld
lahf
je
sub
hlt
in
and
push
daa
jnp
add
and
cmp
or
std
cltd
sbb
push
add
call
call
add
mov
fcomps
or
test
jl
popf
movl
std
or
jns
add
and
inc
test
cld
xchg
add
jl
cmp
push
adc
or
xchg
mov
stos
xor
sub
and
xor
inc
mov
popf
test
cmp
pusha
or
repnz
or
cmpsl
jmp
into
jb
in
notb
aad
sbb
adc
xor
add
push
in
gs
sbb
int
call
sub
push
mov
sbb
xor
movsl
inc
aas
add
sbb
fisubl
pop
pop
add
push
mov
mov
add
adc
shlb
cld
jmp
and
cmpsb
jp
add
aam
and
int
loop
xor
mov
bound
jae
sbb
pop
pop
out
mov
or
inc
or
mov
idiv
xor
fldl
adc
je
addl
jae
loopne
cmp
lods
aas
test
xchg
or
sti
cmp
dec
fs
push
enter
test
fdivrl
jnp
or
cltd
cltd
and
rcrl
jmp
fs
mov
test
inc
cmp
push
push
mov
push
in
nop
dec
sbb
inc
ds
sub
insb
xor
in
nop
and
pushf
sub
ds
sub
mov
nop
popl
push
in
push
inc
mov
and
inc
push
mov
add
mov
xchg
lock
in
add
rcr
testl
loopne
fdiv
call
hlt
push
inc
lock
call
ret
fsubr
mov
imul
jo
jne
sahf
jae
and
ds
std
cmp
mov
jae
arpl
push
js
data16
and
dec
fadd
bound
mov
xlat
imul
ret
lock
mov
inc
lods
imul
loopne
push
test
adc
out
in
jl
loope
stc
adc
mov
mov
or
xchg
cltd
out
push
pop
or
sbb
sub
and
jge
or
movsb
sbb
xor
inc
xor
push
add
jl
div
push
cmp
sbb
popa
xchg
xchg
pusha
inc
cmp
inc
ja
adc
lods
sbb
enter
scas
popf
jbe
jl
in
xchg
lret
mov
lret
jb
cmp
sbb
in
push
xlat
div
add
inc
mov
xor
pop
in
xchg
leave
add
sub
inc
add
inc
push
sub
nop
add
push
js
in
cmp
mov
loopne
inc
pop
jb
or
je
and
xorb
pop
push
repnz
push
xor
faddl
mov
adc
mov
sbb
dec
and
loopne
cmc
add
in
cs
loopne
push
xor
jo
stc
adc
mov
add
loope
xor
mov
stc
addl
push
jne
mov
mov
xor
pop
cmpsl
call
icebp
mov
sbb
add
xor
loopne
pusha
and
sbbl
lock
sub
dec
adc
lods
je
push
cmp
dec
adc
loope
add
ja
jbe
imul
inc
mov
adc
sub
sbb
out
andl
adc
movsl
xchg
pop
out
push
add
mov
sub
jl
dec
mov
sbb
cmp
mov
or
or
mov
lret
sar
jnp
inc
js
dec
ds
and
pop
fisubrl
fldcw
pop
popf
pop
insl
or
sbb
jne
pop
mov
xchg
dec
xchg
or
dec
ljmp
inc
stos
mov
xor
popf
lret
loopne
mov
adc
sub
push
jnp
cmp
sub
mov
rorb
dec
ret
dec
or
sbb
xchg
sbb
sbb
lret
aas
hlt
pop
enter
mov
sbb
popf
sub
xchg
clc
mov
xor
jbe
adc
shlb
imul
cmc
mov
pop
cmp
sub
cmp
jmp
inc
iret
lock
adc
and
mov
sbbl
shll
repnz
inc
sub
enter
xor
aas
mov
leave
inc
lcall
bound
adc
sbbb
push
call
sahf
mov
xor
push
fwait
adc
sbbl
fistps
clc
mov
xchg
mov
push
inc
dec
mov
stos
xor
popf
inc
mov
call
add
push
jmp
add
scas
xor
dec
or
push
addb
dec
repnz
cld
cli
push
fdivl
push
insb
cmp
adc
imul
mov
jns
lcall
pop
rcrb
xchg
mov
js
popa
imul
jge
add
mov
clc
mov
mov
cmp
pushl
mov
lret
adc
stc
xchg
stos
or
jmp
out
sbb
or
je
cmp
mov
frstor
stc
push
pushl
push
aad
outsb
dec
movsb
jns
insl
push
pop
call
jp
fisubl
clc
or
ds
pop
outsb
or
pushl
sub
lods
fs
jmp
or
adc
or
shlb
sbb
push
add
nop
cmp
pushl
fisubrl
pop
addl
lods
fnstsw
sub
push
add
or
mov
and
loop
repz
sbb
and
aam
sub
jl
pop
push
stc
fsubrs
inc
stc
inc
fsubrs
cs
je
orl
jle
xor
jle
sub
std
or
jl
sub
push
adc
test
mov
and
xchg
jp
pop
daa
leave
shll
sbb
and
adc
mov
pop
imul
enter
fmull
loop
leave
jo
hlt
lock
or
add
outsl
int3
repz
shlb
mov
lcall
daa
rorl
and
sbb
shlb
or
sbb
fistpl
adc
leave
mov
cmp
cmp
test
and
scas
scas
je
stc
push
sub
pop
push
dec
push
add
adc
test
push
enter
inc
adc
mov
insb
ljmp
in
mov
pop
cmp
jae
cmp
es
sub
add
in
aaa
hlt
or
mov
arpl
test
std
sbb
sbb
ds
mov
inc
movzbl
push
cmp
dec
in
div
insb
push
dec
pusha
cmp
mov
pop
add
jle
ficompl
fiadds
mov
sbb
nop
cmp
mov
outsb
or
fidivrl
xlat
add
dec
mov
shr
mov
jle
sbb
rcll
add
fcomp
mov
hlt
mov
lcall
hlt
lock
pushf
out
push
lock
jne
orl
and
adc
adc
data16
mov
xor
add
xorb
xchg
cmpsb
dec
and
pop
mov
or
sbb
outsb
cld
sbb
mov
push
mov
or
cmpsb
add
inc
inc
xchg
jno
in
cld
xor
adc
and
insb
and
pusha
adc
insl
incb
xor
cmp
je
aad
dec
xchg
adc
add
stos
mov
adc
cmp
sarl
jge
or
inc
jecxz
or
xchg
mov
dec
push
sbb
xor
loopne
inc
lock
mov
movsl
hlt
lcall
test
sbb
stos
or
xor
fdivl
lock
push
push
fnstenv
cmp
nop
adc
cs
std
jae
adc
in
jg
push
or
outsl
in
repnz
aaa
imul
addl
or
or
loopne
mov
ja
lock
sbb
shl
xchg
jno
add
sub
js
or
adc
mov
push
fmuls
push
or
push
jo
or
push
jno
push
into
adc
jmp
cmpl
xchg
cmp
arpl
push
adc
les
push
ljmp
loopne
jbe
adc
push
add
jae
push
rolb
daa
adc
or
sbb
dec
jge
fdivp
pop
and
xor
or
leave
leave
pop
js
add
or
push
mov
mov
mov
mov
inc
mov
add
out
bnd
add
xchg
xor
ret
lock
adc
jecxz
or
pusha
cmpsl
aaa
in
dec
and
pop
lret
cmp
movsl
rcrb
imul
mov
jmp
adc
push
lcall
pop
xchg
push
cmp
lret
fimuls
cmp
cmp
out
cmpsb
clc
and
mov
xor
mov
jge
repz
sbb
insl
mov
orb
cmp
lods
cli
mov
int3
adc
sub
mov
sbb
das
and
jo
ret
enter
inc
sbb
out
jo
add
lret
jmp
mov
sub
lea
cmp
jo
xorb
and
enter
out
jo
jmp
or
xchg
push
push
push
or
push
xor
test
and
sbb
inc
scas
orb
std
adc
or
pop
pop
push
xchg
clc
sub
sub
fs
adc
mov
je
and
pop
test
xchg
inc
mov
fs
sbb
nopl
roll
bswap
cmp
and
dec
test
push
addl
aam
xchg
stos
and
hlt
add
sbb
add
dec
cmp
pusha
push
jl
push
inc
stos
cmp
iret
adc
ret
push
mov
cmp
test
shlb
pushf
or
xchg
fs
lret
std
or
xor
sub
xor
pop
push
add
adc
sub
xlat
rclb
dec
xor
inc
mov
xor
test
xor
inc
or
sub
subl
movzwl
incl
add
call
lds
and
in
add
insb
sti
xor
cld
insb
cli
scas
fsubs
pop
in
std
dec
push
add
pop
and
mov
dec
push
cld
fistpll
mov
add
jl
sbb
dec
shrl
pusha
loopne
mov
scas
loop
clc
fidivs
add
daa
jae
push
mov
jnp
and
popa
popa
mov
dec
push
pop
mov
test
leave
stos
lret
js
roll
xor
jmp
or
pop
mov
pop
mov
sbb
mov
cmp
xchg
adc
int
cmp
or
inc
std
movsb
sub
lods
cmp
std
out
idiv
pop
in
mov
cwtl
idiv
decl
jns
mov
mov
mov
sbb
psubusw
pushf
subb
mov
imul
int3
shlb
insb
or
insl
adc
mov
int3
je
addl
fwait
lea
and
imul
pop
cmp
xor
sbb
or
jle
mov
xchg
test
adc
cmp
mov
mov
mov
jno
sub
pop
and
je
mov
push
or
fisubrl
push
cld
cmp
mov
or
clc
shlb
adcb
das
cltd
pop
enter
lock
add
lea
filds
cmpsl
orl
nop
std
hlt
std
jne
bound
out
jns
add
cmp
icebp
adc
push
les
push
test
adc
cmp
push
lret
cmp
andl
sbbb
subb
mov
and
fs
pusha
adcl
shll
add
rcrb
xchg
inc
je
dec
mov
xor
sbb
andb
push
je
std
in
cvttps2pi
pop
movsbl
jo
les
das
cmp
jl
pusha
or
inc
cmpsl
scas
addb
and
popf
ror
xor
mov
pmulhw
pusha
xor
fbld
xchg
pop
repnz
cwtl
inc
movsb
dec
pushf
and
lods
hlt
out
ret
insb
xor
inc
lahf
js
xchg
sub
shll
int3
mov
mov
les
add
or
psrld
les
dec
dec
inc
or
pusha
push
mov
jns
pusha
push
or
and
mov
ja
sbb
xchg
mov
dec
inc
adc
hlt
lock
sbb
sbb
test
and
cmc
out
movsl
and
sbb
dec
filds
pop
or
fiadds
mov
add
shrb
les
sbb
sbb
outsb
sbb
cmpsb
ror
shrb
fildl
add
movsb
add
stc
call
inc
adc
mov
in
jae
icebp
add
push
dec
incl
insl
or
pusha
push
dec
dec
enter
in
in
shlb
insb
in
sbb
add
push
add
mov
in
leave
sbb
cltd
and
add
xor
mov
cltd
cmovle
sub
mov
sbb
inc
jge
lcall
ret
jne
and
popf
lods
rcll
sti
into
mov
sub
xchg
mov
dec
sbb
push
add
daa
mov
xchg
push
push
push
sbb
cmp
je
jmp
push
subb
mov
dec
push
notl
out
or
sub
js
cltd
add
pop
les
cwtl
testl
pop
movsb
and
faddl
or
add
test
pop
sbb
cmp
stc
mov
arpl
je
xor
jns
sti
clc
add
pop
daa
sahf
fs
divl
pop
xor
cli
nop
dec
jl
stos
jno
or
mov
cli
mov
ja
in
cli
or
or
jge
push
sub
xor
into
jbe
or
int
nopl
jp
and
popa
in
ffree
push
in
pop
dec
add
ficoms
jp
fidivs
xchg
mov
js
and
fnstsw
inc
add
pop
sub
add
inc
add
add
pop
pop
adc
xchg
add
movsb
jmp
jmp
lahf
mov
shrb
jns
push
and
sub
push
mov
sub
pop
ss
push
gs
pop
int3
dec
inc
push
ja
in
incl
adc
jg
dec
ds
in
movsb
sti
or
cltd
and
cmp
cmp
push
mov
adc
shrb
xorl
daa
add
leave
push
mov
fdivrs
mov
inc
std
je
jge
clc
roll
cld
push
xor
cmp
or
xchg
cltd
or
xchg
lock
mov
add
mov
or
jnp
insl
leave
push
sub
addl
sub
inc
dec
add
pop
sub
cmp
call
inc
test
mov
lcall
lret
pop
xor
push
jge
pop
call
mov
cmc
int
push
jne
xor
nop
nop
je
insb
sub
loope
lds
das
addr16
cvtpi2ps
push
mov
adc
pusha
mov
cmp
mov
inc
scas
in
loop
icebp
fnstcw
lret
dec
cs
inc
push
int3
mov
push
jno
add
mov
lcall
xchg
insb
insb
andnps
push
inc
in
jb
dec
xor
or
dec
icebp
test
adc
and
test
popa
shrb
and
int
xchg
int
sbb
fs
mov
mov
loope
std
sbb
pop
sbb
mov
inc
mov
dec
test
xor
and
and
test
sbb
or
incb
lock
jbe
xor
adc
mov
and
imul
out
xor
jmp
sbb
insb
or
leave
or
add
pop
xchg
daa
ja
or
jne
push
cmpsb
adc
sbb
in
inc
cs
jae
pop
inc
and
fiadds
jmp
lock
jo
or
adc
mov
cmp
push
arpl
sbb
lds
adc
and
fdivrl
lea
int3
in
enter
sbb
call
lods
cmp
aam
mov
pop
dec
test
clc
push
jp
in
cmpsb
mov
pop
push
and
adc
adc
xchg
push
xor
pop
aas
jno
out
sub
mov
adc
mov
xor
pop
scas
aad
pushl
cld
mov
push
and
mov
fsubs
mov
pushl
mov
sahf
fildll
push
xor
and
rcll
or
dec
inc
fs
lea
jne
lret
nop
xchg
enter
add
push
nop
jo
stos
in
inc
dec
add
inc
push
pop
add
test
pop
lods
mov
add
push
push
xchg
jl
outsb
test
jae
pop
sub
jo
xor
mov
addr16
cmp
cld
adc
stos
sub
or
pop
push
bound
and
mov
cmpl
or
inc
aaa
and
sub
mov
ret
subb
xchg
rclb
mov
cmp
xchg
test
lea
adc
push
cmp
push
mov
repz
cmc
mov
out
in
cmp
hlt
pop
cmc
pusha
adc
sub
push
or
xchg
pop
repnz
pop
cmc
mov
push
in
pushf
nop
aaa
pop
cmc
pop
cmc
dec
push
and
xor
xchg
push
pop
cmp
dec
jmp
xchg
inc
mov
or
mov
inc
mov
and
ret
shlb
mov
cmp
lds
cmp
xchg
or
mov
pushf
addr16
or
int3
les
jmp
imul
es
jnp
test
pop
adc
inc
adc
pop
add
ret
cmp
int3
push
xchg
in
inc
xchg
jne
cwtl
ds
pop
and
mov
pop
lds
jae
mov
xchg
aam
and
mov
dec
dec
push
mov
add
inc
xchg
dec
push
jo
mov
enter
mov
rorb
leave
fs
sub
bound
ljmp
mov
mov
popa
xchg
fnstsw
js
add
mov
push
stc
subb
and
ret
cld
push
add
inc
xor
mov
dec
sbb
add
pop
or
movq
mov
lods
add
pop
lds
xor
jns
repz
stos
mov
dec
add
jb
rcrl
dec
cs
in
cmpsl
xchg
pop
inc
decl
rcll
xchg
or
adc
inc
fistl
bound
sbb
pop
adc
fldl
xchg
sarl
lret
sbb
es
sub
mov
mov
xchg
arpl
aaa
mov
pop
cld
adc
add
jne
push
push
lret
inc
add
or
mull
aas
push
fcmovne
mov
sti
inc
xchg
or
adc
imul
in
je
inc
shrl
xchg
and
jmp
cld
subl
adc
cmpsl
cli
xorl
mov
mov
lcall
cmpsb
inc
bound
xchg
mov
fisttpl
push
pop
or
sbb
inc
loop
je
pushf
pushf
add
pushf
add
and
sub
sub
push
jmp
pop
cmp
adc
pop
fdivs
jno
push
cmp
adc
scas
int3
and
pusha
and
mov
push
mov
mov
test
sub
addr16
push
dec
xchg
pushf
loop
add
or
add
int
adc
sub
push
push
mov
sbb
lods
pusha
lret
push
insl
mov
ret
pop
push
pop
sbb
cmp
out
sub
cmpsb
add
mov
rolb
sbb
popa
jmp
orl
push
mov
jo
test
mov
jne
nop
addl
aaa
cwtl
gs
pop
fnstsw
jno
push
enter
movsb
push
xchg
addl
sbb
gs
add
dec
lds
or
inc
test
mov
inc
lcall
movsb
push
subb
xchg
aaa
in
outsb
inc
mov
push
cmp
pop
enter
xlat
add
fwait
pop
mov
das
add
inc
add
pop
adc
xor
pop
push
push
inc
add
and
and
mov
dec
pop
jecxz
es
cmp
nop
push
enter
pop
pusha
pop
add
push
cmp
sar
fwait
xor
xchg
mov
push
adc
repz
adc
repz
nop
imul
and
mov
fnstsw
subb
pop
add
mov
mov
add
test
in
repz
cwtl
repz
and
enter
fcompl
in
stos
jmp
sbb
je
cmp
or
int
sti
pop
jmp
inc
xor
div
or
xor
call
sub
jecxz
sub
imul
stos
dec
xor
and
and
push
call
xchg
mov
sub
xchg
cld
popa
push
repnz
repnz
repnz
pop
pusha
pop
pop
mov
push
xor
lock
call
arpl
in
repnz
lods
cmp
repnz
mov
and
repnz
add
adc
mov
inc
pop
cmp
test
adc
mov
cmpsb
in
es
push
clc
add
outsb
outsb
scas
test
add
cmp
pop
test
push
mov
test
jb
push
mov
in
movsb
repnz
int3
fsubr
sub
or
add
stc
adc
push
and
sub
leave
push
dec
cmp
xchg
stos
nop
lret
pop
pusha
push
and
je
xorl
mov
leave
push
dec
in
push
add
cmp
scas
inc
fsubrs
mov
pushf
or
jl
push
sbb
test
and
sbbl
xor
stc
inc
jmp
pop
mov
repz
lcall
mov
fisttpl
aam
and
pop
jns
push
js
aaa
mov
inc
push
xchg
mov
nop
or
aad
enter
or
adc
push
xchg
pop
lds
cmp
repnz
sahf
inc
ja
add
lea
loopne
inc
jb
jl
pop
push
lock
xor
cld
pop
push
addr16
pop
pop
sub
movb
insb
orb
inc
aad
data16
es
push
lods
mov
je
dec
pop
pop
fs
or
inc
or
in
mov
or
nop
pop
aaa
loop
mov
mov
push
stc
inc
dec
aaa
push
mov
jp
pop
fcmovbe
jp
mov
into
cmp
or
je
cwtl
sbb
movsb
adc
cmp
push
in
mov
and
dec
repnz
sub
mov
add
in
hlt
sub
push
prefetchw
maskmovq
testl
pop
mov
pop
jns
call
sub
jne
or
cmp
dec
xchg
or
lds
lock
or
cld
adc
adc
mov
dec
sub
subl
movsb
lock
icebp
mov
pop
leave
mov
lock
daa
stc
cmp
xchg
and
pop
enter
test
mov
adc
icebp
sub
sbbb
pop
mov
sbb
pop
mov
js
inc
mov
test
pop
ret
add
jecxz
jl
scas
xchg
negl
icebp
mov
int
out
mov
inc
rolb
leave
vminpd
inc
xor
daa
push
nop
andl
sub
sbb
sub
call
fcoms
dec
sub
leave
dec
xchg
lock
in
movsl
nop
and
lds
enter
pop
dec
scas
cmpsb
das
aaa
or
test
repnz
or
xchg
adc
lock
test
sub
mov
pop
sbb
cmp
add
arpl
add
and
add
mov
sbb
push
add
jne
dec
sub
jl
out
pop
jp
push
add
sub
xor
dec
xchg
xchg
pop
sbb
mov
or
add
push
or
mov
jo
pop
cltd
inc
and
jmp
pop
cmp
in
int3
add
dec
push
jbe
jmp
aas
or
adc
dec
or
fidivl
repz
pop
pop
cmp
ret
push
pop
mov
inc
dec
dec
or
fs
xor
jnp
mov
push
xor
fdivl
pcmpeqb
adc
arpl
int3
pop
jl
inc
xchg
inc
mov
push
add
push
jno
pop
lds
nop
push
lods
pop
psubb
add
mov
push
stos
push
cmp
dec
mov
add
sub
call
ds
lock
mov
sbb
push
jp
mov
cmp
test
pusha
fwait
popf
nop
setbe
pusha
inc
xor
mov
mov
sub
enter
push
or
or
stc
fcompp
ror
push
push
push
aad
sub
or
push
add
or
aad
pop
and
adc
pusha
std
or
sbbb
dec
in
fcomp
fsubs
enter
adc
in
dec
sub
pop
jbe
xchg
shlb
or
cmpsb
mov
mov
insb
insb
int3
fdivl
nop
xchg
mov
adc
faddl
jne
xchg
in
sbb
movsl
and
sbb
out
hlt
adc
repnz
movsl
dec
loopne
in
xchg
in
push
repnz
sbb
enter
push
loop
pop
in
sbb
popa
scas
icebp
addb
xor
jns
cmp
sub
enter
jb
enter
xor
mov
pop
cld
in
fsts
and
std
sbb
cmpsb
in
pop
sbbb
fcmovu
aad
daa
pop
and
push
fstpt
outsb
leave
inc
pop
imul
clc
in
xor
data16
add
ljmp
or
or
fs
jbe
cltd
lock
in
push
and
dec
add
push
repnz
insb
ljmp
dec
icebp
add
sbb
scas
or
inc
mov
mov
jmp
popa
stc
push
repnz
lcall
or
and
ret
cmp
sbb
test
mov
mov
in
sbb
mov
aaa
xlat
mov
outsb
subps
adc
pop
mov
shl
mov
call
call
or
lea
jmp
fistl
stos
push
outsb
lahf
push
sbb
insl
add
call
test
xchg
pop
pop
lea
call
pop
jmp
or
bound
sahf
stos
sbb
push
nop
imul
in
bound
jp
adc
out
pushf
dec
repnz
out
sbb
mov
jb
ds
in
test
and
jno
xchg
pop
repnz
test
test
add
test
push
xorl
adc
push
inc
daa
stos
fwait
sbb
sub
push
insb
cmp
iret
sbb
inc
fwait
inc
out
dec
dec
xor
add
mov
and
adc
leave
inc
roll
or
or
nop
cmpl
out
mov
sub
inc
push
jo
dec
shrb
aaa
add
mov
arpl
cs
pop
js
lock
ret
jnp
xor
repz
arpl
mov
mov
push
stos
sub
stos
movsb
jae
outsb
cmp
lods
jne
and
shl
sub
cmp
push
xchg
cmp
and
jo
adcb
mov
imul
in
fs
add
xor
in
lods
inc
jge
jge
xor
mov
or
xorb
mov
popa
fidivrs
adc
mov
andl
or
mov
or
test
xchg
add
jecxz
ret
jle
cmpl
add
imul
shrl
add
aad
fs
rorl
int3
fs
insb
gs
mov
mov
cmp
fs
mov
or
test
cld
mov
out
scas
inc
sub
sti
pop
or
gs
sbbb
in
sub
in
gs
or
rcrl
cwtl
cwtl
mov
pop
and
gs
mov
cmp
sbb
int3
or
adc
adc
cmpsb
cmp
dec
or
je
or
ja
fdivrl
sbb
sbb
in
fidivrs
jb
pushl
aad
fadds
jl
jmp
cltd
cmp
sub
inc
aaa
sahf
dec
mov
or
leave
cwtl
xchg
push
inc
fadds
mov
inc
addl
nop
in
add
xlat
mov
add
in
aas
pop
dec
das
add
call
add
sub
add
add
xor
sahf
sub
push
mov
jmp
pop
pop
inc
push
or
push
ret
cmp
or
xor
std
subb
add
mov
gs
cmp
jb
push
mov
xor
sub
insl
call
pop
bnd
jl
adc
imul
in
adc
mov
jp
mov
sub
pusha
in
cmp
pop
xchg
add
jb
jns
iret
adc
fsubl
or
adc
sbb
sbb
push
jne
pop
movsl
leave
cmp
xchg
es
and
inc
jno
xor
xlat
cmp
mov
pushf
add
inc
test
jnp
in
ficompl
pop
push
pop
sub
sub
mov
pop
pop
push
mov
inc
adc
cmp
xchg
mov
push
repnz
out
std
bound
pop
leave
push
in
in
push
pop
test
addr16
pop
dec
or
sbb
mov
loop
dec
enter
cmpb
adc
jo
fisubl
xchg
push
fs
push
fadd
mov
outsb
mov
cmp
or
dec
and
dec
mov
pop
cmp
iret
jmp
xchg
sbb
mov
sbb
loop
pop
xor
sub
pop
push
addr16
es
xchg
pop
push
rorb
shrb
xorb
sub
mov
jo
and
sarb
xchg
cmp
jg
push
push
push
push
and
xchg
and
mov
je
jl
xlat
push
scas
das
jo
dec
push
leave
add
cli
enter
xchg
sbb
sub
rcrb
stos
push
add
gs
lea
or
adcb
cmp
jb
imul
pop
jnp
add
das
mov
cmp
enter
sub
loop
dec
lods
pop
je
add
sub
mov
loop
mov
push
add
cmp
cwtl
mov
sub
or
jmp
cmovne
leave
or
or
inc
subl
gs
push
xor
sub
xchg
inc
xchg
mov
xor
push
shll
in
loop
imul
imul
mov
and
les
cmpsb
push
scas
or
mov
fadds
leave
sbb
jo
mov
jns
sbb
push
mov
mov
mov
fdivl
push
inc
add
js
or
gs
popf
stos
lock
jnp
push
push
and
dec
inc
mov
push
sub
stos
movsl
mov
inc
cwtl
pushf
add
nop
inc
push
nop
lods
add
pop
daa
je
pushf
sub
jp
add
and
out
insl
fstpt
mov
jne
scas
fs
add
inc
inc
inc
cs
adc
add
call
leave
inc
roll
xchg
add
fchs
rolb
mov
imul
jo
inc
mov
dec
mov
ret
bound
sub
and
in
or
adc
leave
les
in
sbb
imul
dec
popf
rclb
test
xor
jne
leave
or
fimull
push
pop
lock
sbb
cmp
push
jl
xchg
imul
and
imul
scas
imul
stos
fld1
and
sub
jae
xchg
sub
jo
cmp
pop
adc
sub
insb
pop
ljmp
jge
mov
jae
loopne
add
movsl
sti
add
inc
sub
dec
inc
cmp
mov
sub
or
lea
faddl
add
inc
aam
mov
lock
fs
inc
mov
mov
je
sbb
leave
xchg
jo
js
lds
sbb
enter
mov
insb
call
sbb
dec
insl
scas
fs
dec
sbb
icebp
frstor
je
push
inc
jb
clc
js
jns
ret
jno
and
imul
addl
test
jns
lea
adc
pop
mov
pop
push
loop
and
dec
ja
in
jmp
xchg
jae
adc
xchg
fs
push
add
xchg
and
push
movsl
daa
jmp
testl
push
add
fidivs
push
xor
or
adc
pusha
outsb
mov
sbb
pop
test
dec
movsl
call
add
outsb
lods
lret
in
loope
sti
and
adc
je
movsb
in
add
mov
sub
and
or
jmp
inc
mov
lds
clc
inc
xor
inc
or
push
sbb
imul
add
insl
add
and
cltd
nop
addl
mov
lret
sbb
adc
fcoms
out
pop
and
leave
sbb
cld
outsb
add
andl
cwtl
add
xor
mov
xor
outsl
lods
push
or
pop
call
test
faddl
rclb
push
adc
xor
dec
outsl
repnz
in
outsl
adc
adc
push
jo
sub
mov
fisubrs
push
outsl
lea
in
pop
jno
jo
lds
dec
push
mov
or
js
orl
test
adc
jno
sbb
mov
add
pushf
fadd
imul
or
or
or
pop
mov
sub
push
jmp
xor
or
and
leave
push
enter
lds
mov
aam
inc
mov
adc
nop
fmull
sbb
add
or
lds
xor
xchg
jo
adc
or
push
repnz
mov
sbb
mov
and
lods
jg
sub
push
jb
xor
jo
nop
push
sbb
inc
jo
add
nop
addl
fimuls
fisttpl
pop
xlat
inc
push
and
or
outsl
add
pusha
jo
dec
push
sub
add
mov
add
xchg
mov
sub
daa
mov
es
pop
leave
mov
add
adc
sti
add
mov
sbb
and
sbb
inc
push
push
sbb
aam
test
test
push
add
scas
jecxz
push
icebp
in
cmp
in
mov
mov
push
cmp
and
jmp
loopne
xchg
and
xchg
jp
push
and
outsl
loopne
add
out
push
out
call
dec
insb
and
mov
add
or
lods
insl
lods
lods
lcall
jo
push
fs
jo
test
or
fldlg2
ficoml
cld
xchg
hlt
inc
pop
fcoms
fdivr
push
cmp
xor
pop
inc
inc
adc
cmp
ficompl
pop
cmpsl
in
cmp
fiaddl
fistl
push
and
dec
dec
adc
les
or
xchg
jno
jle
nop
push
in
clc
pop
inc
js
sbb
dec
out
sub
jae
mov
push
aas
add
leave
test
jb
jp
pop
pop
push
xchg
add
inc
ret
inc
lea
pushf
jno
dec
jp
enter
jno
jno
nop
push
mov
loopne
push
and
sahf
pop
int3
aam
xor
xchg
inc
cmp
cmp
fstps
dec
push
cmp
not
aad
or
xor
dec
aam
and
leave
popa
outsl
fcom
mov
add
jno
adc
cmp
test
iret
dec
aam
arpl
push
and
adc
sbb
mov
jb
adc
jbe
xor
inc
mov
inc
jbe
push
jb
je
cltd
and
jecxz
and
and
push
pusha
inc
xor
xor
data16
inc
rorl
nop
push
dec
sub
xorb
pop
les
pop
shrl
cmp
cmp
mov
nop
jb
or
test
jmp
jns
xchg
sub
sub
inc
aam
xchg
lock
push
sub
pop
icebp
or
jae
push
xor
das
sub
inc
ret
aad
nop
shrl
xchg
xchg
insl
insb
les
pop
jo
rolb
or
das
jo
in
cmpsl
lea
lds
sub
nop
xchg
pop
repnz
rolb
insb
hlt
scas
in
pushf
pushf
rcrb
push
and
mov
nop
jns
mov
and
leave
pushf
test
daa
mov
add
inc
xor
cmp
add
adc
push
outsl
add
rcll
in
sarl
adc
movsb
cmp
add
into
daa
fs
lods
into
mov
mov
enter
mov
cmp
mov
jae
jns
icebp
adc
fbld
je
and
nop
xchg
pushf
int3
sbb
js
sbb
pushf
int
into
cmp
repnz
mov
cwtl
int3
sbb
andl
and
inc
mov
inc
pushf
pushf
or
sbb
into
push
je
sbb
test
add
mov
je
inc
push
xchg
andl
leave
push
and
sub
xchg
movsb
movsb
jl
outsb
add
daa
jo
xchg
mov
fs
je
pushf
inc
dec
mov
pushf
or
int3
lock
leave
stos
call
nop
int3
cmp
mov
xchg
je
and
je
inc
je
cmp
leave
dec
add
scas
in
int3
xchg
int3
mov
clc
je
add
and
xlat
inc
lock
sarb
leave
aad
enter
leave
and
enter
jp
sbb
leave
pop
jnp
scas
add
pop
data16
or
enter
sbb
fmul
pop
inc
push
push
enter
dec
enter
sbb
mov
jne
dec
enter
sub
mov
and
mov
test
sub
and
and
and
xchg
out
enter
or
lahf
mov
in
adc
lods
enter
jb
add
xchg
sbb
enter
in
nop
clc
movsb
orl
add
sbb
sbb
cmp
mov
jb
add
or
and
ja
enter
int3
inc
jb
xchg
out
and
or
xchg
dec
movb
adc
in
mov
jno
popf
jbe
push
add
pop
push
dec
jbe
sub
add
jo
add
sbb
or
sbb
jae
dec
and
lret
mov
inc
and
cmp
xchg
inc
push
add
xchg
xor
add
pusha
mov
mov
stc
fs
push
jo
aas
cmp
mov
cmp
and
pushf
loopne
add
movl
insl
or
jae
orl
cmp
idivb
pop
cmp
xchg
dec
cs
repnz
xchg
jo
dec
scas
in
in
mov
xchg
adc
iret
lret
nop
nop
in
clc
incl
sub
mov
push
dec
cmp
movl
and
cmpb
into
fisubrs
push
loopne
xchg
dec
std
jecxz
loopne
dec
dec
push
lahf
mov
cmc
pop
mov
ret
je
inc
push
cmpsb
add
sbb
jno
push
dec
stos
int
push
and
jo
mov
xor
sub
sar
mov
leave
sub
adc
mov
mov
mov
ret
add
and
mov
push
in
ret
adc
mov
pop
imul
pandn
push
popa
push
push
test
xor
jg
popa
mov
lods
jmp
sub
js
mov
xor
mov
push
dec
cmp
cmp
enter
shlb
mov
push
mov
add
mov
mov
imul
icebp
xchg
shll
jmp
popl
pop
leave
cmp
je
mov
cwtl
jp
sbb
aaa
xor
sbb
pop
pop
lock
sbb
mov
jbe
clc
xchg
out
cmp
repz
loopne
pop
jno
fdivrl
push
nop
mov
fdivs
and
addl
jnp
adc
nop
sbb
jmp
call
cmp
push
fdivrl
push
scas
test
ja
outsb
cmp
inc
sti
mov
inc
jb
add
movb
inc
mov
xchg
adc
add
movb
ltr
ja
test
cmp
and
dec
or
xchg
out
push
cwtl
and
fs
lds
enter
movsb
hlt
daa
mov
inc
sub
inc
pop
and
cmp
les
dec
jb
mov
lds
in
repnz
in
lds
enter
insb
xor
les
dec
lahf
sub
or
lds
rorb
or
or
in
lds
mov
pushf
xchg
pop
bnd
je
add
and
test
lea
das
sbb
faddl
fadd
or
pop
xchg
ret
sbb
sub
in
call
es
jo
pusha
in
dec
les
add
inc
fiadds
xlat
inc
pop
sbb
lret
test
rol
and
les
mov
jo
test
rorb
clc
aad
xorl
test
add
push
or
rol
ror
or
inc
les
cmp
dec
leave
stos
aas
fs
jns
and
das
sarb
or
cwtl
add
cmp
add
jp
mov
inc
xorb
mov
mov
rorb
inc
int3
or
aad
pop
shll
xchg
add
fwait
test
fisttpll
or
mov
out
push
mov
add
inc
adc
mov
imul
mov
aas
mov
sbb
sub
dec
rorb
adc
adc
out
and
rorb
cmp
and
mov
jbe
inc
insb
xor
or
loope
sub
gs
or
jp
cs
add
iret
add
xor
mov
sarl
test
add
dec
jp
cmp
dec
ret
xor
sbb
aam
jo
add
pop
scas
push
jp
pop
add
and
and
push
cltd
mov
lods
push
pop
arpl
out
pop
mov
jns
xor
jp
add
cmpb
mov
mov
sub
sbb
dec
push
rclb
lahf
mov
mov
sbb
pop
pop
arpl
push
cli
jns
xchg
mov
cmp
push
adc
into
icebp
shlb
adc
xor
add
add
sbbl
inc
add
push
lcall
lcall
les
cld
and
adc
adc
cwtl
les
push
sub
arpl
loopne
sbb
add
test
jo
and
test
or
test
ja
adc
xchg
and
cmp
sbb
stos
loopne
ret
les
dec
add
adc
push
add
clc
pop
mov
dec
or
dec
jbe
into
leave
lea
in
add
sarb
inc
inc
jb
add
in
or
xor
adc
sub
add
adc
ja
loopne
jns
add
push
adc
jae
out
int3
in
int3
in
dec
pop
push
add
add
and
in
jno
cs
insl
pusha
lahf
sbb
adc
nop
das
inc
lods
in
lods
in
fsubr
or
scas
sub
out
in
popf
cmp
or
out
aam
jmp
pop
sarb
or
add
mov
test
inc
lock
in
clc
out
and
imul
and
sub
in
lahf
dec
aam
in
es
lods
movsl
daa
scas
in
mov
cmp
in
inc
leave
loopne
roll
enter
dec
sub
cmp
int3
subl
mov
or
sub
cs
sub
add
daa
push
and
pop
in
inc
mov
pop
push
fisttpll
add
popa
pop
inc
cmp
adc
inc
sub
daa
shr
shr
and
dec
jo
call
mov
out
adc
push
jo
ss
or
inc
pop
mov
andl
sub
ficoms
add
xor
in
test
add
nop
pushf
pushf
sarb
mov
sbb
xchg
je
push
movsb
mov
cmpsb
mov
or
ss
inc
sbb
aaa
dec
and
je
sbb
std
add
movsb
mov
pop
push
addb
push
jg
inc
imul
cmp
shll
bound
xchg
movsl
ret
idivb
aaa
lea
out
rorl
push
mov
ss
pop
adc
popa
nop
call
pushf
cmp
cmp
xor
sub
push
enter
push
and
pusha
xor
popf
xor
in
in
dec
mov
and
or
std
mov
into
xor
orl
xor
push
push
xchg
aad
subb
pop
xor
imul
mov
jns
xor
jl
inc
inc
add
mov
into
dec
or
clc
mov
xchg
inc
sbb
test
imul
xchg
cld
sbb
push
pop
mov
jmp
arpl
pusha
inc
adc
mov
movsl
jns
inc
lods
fdivr
add
pop
lcall
movsb
call
lahf
insl
stos
mov
adc
xor
xchg
or
push
xchg
jo
js
leave
in
push
pop
cmp
test
movsb
popf
lret
pop
nop
jp
lock
xchg
mov
fxch
xlat
into
adc
and
mov
cmp
push
lahf
cld
or
push
enter
test
aas
xchg
inc
test
push
pop
repnz
test
sub
repz
jg
jl
movsb
pop
int3
mov
mov
or
out
out
cmp
movl
xor
in
cld
push
inc
adc
adc
mov
or
sbb
pop
xor
jae
clc
mov
aas
mov
pabsw
gs
push
sti
mov
addl
out
pop
jno
cmpl
xor
pop
and
andb
pop
cs
adc
insl
shlb
cmpsl
aad
fdivr
xor
mov
xchg
out
jns
inc
inc
mov
sbb
inc
add
rolb
sub
mov
shlb
add
mov
fsts
shll
cld
and
jo
into
gs
scas
std
dec
mov
push
cld
sub
mov
xor
xor
fadds
dec
xor
cld
mov
or
movsl
cmc
enter
outsl
sbb
adc
jge
bound
lea
push
mov
dec
les
add
add
js
adc
adc
push
pop
xor
mov
arpl
int3
xchg
mov
adc
add
push
dec
jne
ret
mov
pop
mov
sbb
pop
jne
add
outsl
pop
lea
aaa
js
mov
rclb
cld
cmc
sbb
daa
mov
shrb
and
dec
cli
adc
xor
mov
dec
or
add
jle
mov
imul
mov
sub
pop
or
imul
push
jp
mov
pop
lret
shrl
dec
sub
jb
test
flds
push
xchg
mov
arpl
js
shll
movsl
add
popa
xor
xchg
std
cmpsb
les
dec
cli
mov
adc
fs
in
and
rcll
pushf
ds
inc
push
aam
add
movsl
xor
lret
gs
cmp
jno
xchg
scas
or
sarb
pop
jb
call
ja
mov
mov
or
push
inc
in
sbb
out
jb
sbb
or
addb
cmp
dec
jg
icebp
scas
pop
dec
in
xor
jns
scas
sbb
mov
push
sub
mov
add
xchg
popa
add
sub
xchg
test
in
push
xchg
sub
xor
adc
lret
aad
imul
jmp
cs
pop
scas
adc
imul
push
clc
lret
sub
fwait
pop
inc
jge
lret
adc
or
adc
or
clc
lock
pop
mov
int3
stos
shlb
clc
xchg
adc
div
inc
pop
pop
hlt
hlt
inc
pop
fdivrs
data16
pop
jge
lods
push
pop
outsb
insb
cmp
lock
stos
fists
jnp
jmp
clc
call
sub
test
pop
or
cld
ret
push
shll
mov
sub
pop
push
out
mov
adc
lock
outsb
push
and
or
lret
or
push
incl
jne
xchg
adc
push
cmp
add
cs
and
cld
dec
out
mov
adc
xchg
lahf
test
or
cmp
jmp
xchg
lret
xor
lret
add
movsb
jb
add
add
imul
push
xor
loope
xchg
cmp
sub
hlt
inc
sbb
pop
es
jbe
dec
cwtl
in
and
inc
xorb
daa
mov
dec
fcoml
clc
mov
xchg
fwait
mov
leave
or
mov
pop
fistl
frstpm(287
fcoms
arpl
in
loopne
push
sbb
push
daa
xchg
sahf
xchg
mov
add
mov
jae
cmp
sbb
or
add
scas
or
enter
aas
scas
mov
sub
xor
adc
aas
subb
pop
ss
mov
push
fldl
xchg
xchg
and
adc
jmp
popa
fs
es
add
pop
lcall
stc
sbb
call
add
nop
pop
adc
ja
sub
dec
scas
or
push
xchg
addb
mov
mov
stos
lock
jg
js
jno
pop
lods
je
fwait
call
jo
pop
rclb
sub
cld
mov
jns
das
pop
push
sbb
lret
icebp
flds
in
or
cmp
aam
dec
gs
sar
sar
mov
jmp
or
aas
test
stc
mov
cmp
cmp
jecxz
jmp
lret
cmpsb
lret
xchg
enter
xchg
decb
cmpsb
adc
nop
sbb
int
mov
mov
mov
pushl
or
and
jl
scas
pop
pop
sub
and
ret
cmp
fs
das
mov
shll
add
dec
addr16
addl
cmp
push
icebp
sub
loopne
fisttpll
pop
insb
inc
pop
jnp
pop
dec
idivb
push
dec
mov
mov
push
rcrb
fcmovu
pop
lods
cmpsl
enter
test
mov
jge
sbb
je
adc
add
mov
mov
sub
dec
push
dec
cmp
sbb
andb
sbb
hlt
jl
dec
adc
orl
lods
test
add
fsubrl
xorb
dec
xor
scas
mov
fsubr
and
mov
jge
jecxz
cmp
std
addb
xchg
testb
out
in
cmpl
loopne
or
cmpsb
dec
nop
pop
push
imul
or
xchg
jecxz
ss
mov
ja
pop
orb
mov
inc
incb
testb
mov
cmp
add
aaa
push
pop
and
and
adc
or
mov
adc
rol
fstpl
out
pop
mov
out
mov
add
sbbl
add
or
push
fcoms
es
test
mov
sub
test
push
orb
inc
shrl
nop
sub
xchg
push
leave
and
enter
push
subl
movsl
cmp
pop
andl
xchg
subl
repnz
test
or
add
call
mov
test
fldcw
cli
lret
pusha
lods
sbb
jnp
and
mov
test
add
cmpsb
lea
cwtl
test
sbb
hlt
push
or
notl
inc
jmp
mov
sbb
push
mov
call
nop
call
pop
cmpsl
push
xchg
adc
ficomps
inc
je
sbb
loop
add
cmp
cmp
rcl
cs
insl
sbb
insl
sti
xor
sub
push
and
push
add
ret
inc
in
imulb
test
mov
or
sbb
push
and
movsb
pop
mov
add
jo
inc
in
inc
dec
mov
in
mov
cmp
xor
mov
js
je
pop
nop
mov
sub
push
and
movsb
push
xchg
loop
push
imul
cwtl
push
rcr
dec
push
sbbb
scas
cmp
xacquire
xchg
out
clc
shrb
subl
mov
mov
add
iret
nop
fsubr
pop
lods
pop
sbb
add
testb
jmp
cmp
lock
ja
js
mov
inc
xchg
faddl
fisubl
sahf
jne
or
sub
add
or
mov
stos
js
mov
inc
call
inc
add
mov
pop
push
loopne
cld
pop
movsl
mov
and
add
movsb
mov
lds
inc
fists
xchg
sbb
xchg
lret
movsl
mov
roll
adc
ret
aas
dec
movsl
sbb
or
and
test
and
or
rcr
pop
xor
je
jae
mov
cmp
or
movsl
add
mov
cmpsl
bnd
xchg
fdiv
jmp
jmp
mov
mov
lock
mov
pop
lods
test
mov
sahf
test
fidivl
ror
sbb
out
adc
dec
sub
adc
mov
in
sbb
sbb
inc
push
aad
cmc
je
xchg
test
mov
xor
or
fistpl
mov
mov
jecxz
add
cmp
cmp
jo
jmp
scas
insb
outsb
nop
cmpb
inc
sbb
fldcw
xchg
cmp
sbb
movsl
jae
sbb
or
icebp
dec
nop
mov
or
adc
or
inc
inc
xchg
dec
inc
or
in
in
jge
mov
mov
shll
outsb
cmpsl
add
dec
lahf
iret
cmp
add
arpl
mov
cmp
xchg
in
in
add
mov
mov
cmp
pushl
or
mov
xlat
andl
shrl
mov
pop
jbe
adc
jge
sub
cmp
loope
fwait
call
sub
fcmove
inc
cld
sbb
adc
xor
mov
insl
fmuls
adc
movsl
jge
push
mov
cli
pop
jg
insb
ljmp
adc
out
sub
inc
shlb
and
sbb
sub
pop
adc
imul
out
add
std
pusha
mov
xor
fcoms
insb
fstps
movsl
mov
mov
div
mov
or
and
xor
or
add
or
sbb
lds
je
inc
sbb
adc
mov
das
and
adc
inc
or
xor
data16
imul
add
sub
clc
mov
mov
shrl
lret
cld
or
push
xchg
in
fisttps
in
mov
addr16
xchg
push
pop
mov
jle
pusha
clc
mov
inc
js
loopne
and
notl
mov
roll
hlt
movsl
adc
and
and
popa
pop
mull
fildll
pop
sub
and
add
lahf
pop
push
push
sub
sub
je
cmpsl
negb
inc
loopne
sarl
push
push
nop
out
adc
adc
cmp
pop
and
cmp
add
ja
and
lds
adc
sub
xchg
or
imul
std
fsubrs
out
or
popa
dec
pop
mov
push
lods
xchg
shlb
aaa
inc
mov
hlt
stos
add
addb
sub
in
push
imul
and
push
lcall
push
sbb
dec
push
pusha
mov
mov
dec
add
data16
movzwl
je
adc
xor
pop
je
stos
adc
fistl
adc
jbe
push
cmp
push
xor
jo
je
and
jno
hlt
js
pop
push
or
shl
fcoms
inc
insb
adc
mov
dec
call
shr
mov
nop
xor
or
cwtl
das
jo
xchg
mov
scas
ja
aaa
ljmp
xor
adc
dec
jno
add
ss
adc
sub
sub
fwait
and
mov
addr16
pop
push
cmp
mov
in
inc
gs
in
insl
sbb
neg
add
push
or
cmp
adc
das
and
inc
sub
nop
pop
xchg
jo
std
andl
andb
mov
inc
das
pusha
and
jmp
and
and
xlat
imul
push
loope
and
dec
lret
adc
push
and
push
push
aaa
cmp
lea
xor
stos
mov
fsts
xor
xor
pop
sbb
adc
adc
inc
ds
sbb
incl
and
add
dec
je
or
popa
shrb
mov
push
add
test
lods
imul
push
mov
inc
inc
add
lret
xchg
in
xor
incl
xchg
xchg
clc
cli
cli
cli
cli
push
cmp
cli
cli
cld
cmp
mov
gs
clc
pop
inc
lods
mov
cmc
cld
nop
adc
clc
clc
xor
cltd
inc
cmpsb
fs
cli
cli
mov
test
cmp
mov
stos
jg
jo
or
lahf
lods
add
fmul
xor
cmp
popf
mov
shlb
shrb
in
add
pop
mov
cli
ss
jp
or
xor
push
mov
pop
mov
add
and
popfw
dec
repz
ds
push
mov
inc
ret
mov
pop
or
shlb
mov
test
and
icebp
inc
push
add
fsubs
or
inc
push
ss
push
cmp
xor
sub
jb
mov
hlt
hlt
cld
pop
add
insb
mov
inc
loopne
in
aad
sbb
xchg
lock
lock
push
sbb
adc
cltd
lock
cld
sub
sbb
cmp
cmpl
shll
cli
clc
cli
jg
sbb
inc
push
enter
pusha
mov
or
xchg
dec
and
sub
mov
and
or
sbb
les
adc
ror
or
mov
pop
xor
adc
xor
sub
sbb
jmp
inc
xchg
cld
std
in
jns
cltd
and
add
mov
test
in
push
stc
xchg
fmuls
movsl
cmpb
add
pop
mov
cmp
imull
dec
jbe
jl
roll
or
fldenv
in
cmp
push
sub
aam
inc
xor
add
js
mov
and
leave
add
test
pushf
std
adc
or
daa
add
mov
add
lods
add
nop
or
adc
jg
popa
add
adc
outsl
addb
mov
cmpsl
jge
pop
jnp
mov
xor
push
add
adc
pop
pop
mov
std
loope
cli
push
push
pop
dec
aas
sbb
gs
pop
push
inc
les
insb
andl
aaa
dec
jo
mov
xor
add
mov
cmp
dec
jo
jb
pop
xchg
jo
pop
add
imul
imul
add
add
or
ret
data16
ret
mov
ja
das
inc
dec
sub
xor
sub
and
add
dec
repnz
push
clc
push
jno
lds
jle
in
test
fs
roll
dec
call
fisubs
xchg
ja
jb
and
jae
lret
xchg
mov
inc
cs
jb
aaa
xor
and
gs
push
sbb
scas
lds
leave
loopne
mov
ficompl
dec
in
into
adc
mov
pop
xor
sbb
mov
rcrl
sub
inc
push
mov
pop
mov
add
xor
int3
sub
sahf
stc
sub
mov
or
jecxz
xor
and
sbb
cmp
cltd
jns
cmp
inc
and
pop
jne
in
and
cmp
lret
add
xor
test
clc
andl
xorl
fisubrs
pop
mov
push
lea
jns
hlt
sub
cmp
mov
cmp
fistpl
xchg
enter
mov
push
outsw
cmpsb
xchg
mov
ds
out
lods
rcl
je
enter
push
loopne
sub
aad
jge
sub
int3
or
mov
decl
adc
xchg
iret
cmp
sbb
addr16
mov
cmp
xor
and
mov
pop
mov
sbb
mov
xchg
stc
out
outsl
sub
sub
rcll
adc
and
or
and
loope
mov
sarb
lret
movsl
or
jnp
test
mov
add
sub
and
mov
or
mov
sub
arpl
shll
sub
addb
add
or
xor
and
push
mov
cs
es
mov
subl
sarb
leave
push
fwait
xor
and
push
les
fs
out
pop
mov
mov
pop
rdtsc
rcrb
in
lods
pop
leave
push
in
std
sbb
out
sar
sar
mov
movsl
mov
pop
test
or
les
mov
cmp
and
pop
lock
sbbb
popa
cltd
icebp
test
inc
lods
aad
shll
iret
stc
mov
or
push
test
std
push
jnp
movsb
jecxz
push
subb
flds
sti
fdivr
repnz
out
sti
lock
fdivr
int3
sti
arpl
inc
dec
aam
aam
sub
std
lods
ja
rclb
nop
sbb
add
in
std
push
mov
mov
fdivs
lods
xor
or
je
sub
sbb
dec
jae
stos
sub
mov
addr16
add
adc
mov
and
mov
jo
adc
inc
mov
or
mov
rolb
add
jmp
push
cmp
lret
sar
push
jg
adc
test
jmp
les
xchg
sti
lret
lcall
mov
cld
nop
dec
subl
loop
scas
xchg
adc
xor
icebp
hlt
xchg
push
push
mov
mov
or
enter
imul
in
xchg
or
fdivr
add
cs
test
repz
test
push
bound
enter
mov
sti
jo
add
cli
pusha
in
fmulp
sti
leave
push
cmp
adc
or
sti
int3
sti
dec
add
xchg
mov
popa
or
add
pop
mov
add
orb
cmpsl
adc
repnz
in
lret
test
xchg
dec
push
mov
fimuls
pop
xchg
jne
outsb
add
aad
in
add
mov
cli
mov
js
xor
mov
leave
andl
mov
fs
loopne
daa
xor
es
xor
movsb
movsb
or
pop
xchg
cmp
jns
xor
cli
cmpb
xor
and
adc
cli
scas
push
leave
stc
and
ss
pop
repnz
or
dec
inc
mov
push
movsl
push
sub
dec
mov
sbb
cmpl
test
sbb
ret
jnp
and
dec
xchg
pop
or
pushf
stc
nop
loopne
in
das
nop
or
inc
pushf
pushf
stc
nop
stc
mov
cmp
dec
sub
repnz
movsl
mov
or
mov
add
jnp
and
jg
pushf
stc
fsubr
add
and
test
and
cld
lahf
mov
cld
push
testl
or
aam
sbb
movsl
or
xchg
in
cmp
arpl
test
add
cmpl
pop
jo
and
dec
mov
je
testl
pop
sbb
popa
jns
das
and
daa
dec
dec
std
jne
dec
imul
xor
into
adc
fbstp
int
sbb
ret
mov
and
mov
mov
mov
filds
sbb
jnp
push
push
cmp
push
mov
aam
shlb
inc
jno
cmp
lods
xor
push
pop
std
nop
or
das
cmp
rcll
push
cmp
mov
cmp
cmpsl
or
test
cmp
jmp
popf
mov
mov
pop
jne
mov
sub
or
insb
sub
iret
movsl
and
jmp
inc
xor
fdivrs
dec
or
xlat
xchg
xor
lea
jl
push
push
or
inc
mov
rcrl
jns
cmp
jmp
push
or
jnp
add
bswap
out
or
cmpsl
mov
or
fcmovnbe
pusha
inc
mov
mov
jo
adc
inc
cmpsl
add
inc
stos
fisttpl
or
xor
xor
addb
stos
adc
adc
add
push
mov
pop
xor
and
and
pop
imul
in
andb
inc
or
nop
dec
ljmp
dec
or
test
inc
push
pop
test
je
xchg
bound
adcb
mov
orl
jno
inc
push
and
add
adc
push
insb
or
dec
es
popf
ret
jnp
leave
fiaddl
and
xor
pop
add
outsb
insl
in
or
fbld
sbb
mov
push
lods
or
inc
pop
sbb
jb
imul
sbbl
loope
sub
das
dec
sub
jnp
adc
jmp
adc
adc
mov
bound
pop
andb
xor
dec
das
xlat
xor
je
or
or
dec
scas
xchg
mov
in
push
push
mov
out
shr
mov
insl
jge
add
jb
dec
and
addr16
cmp
fmuls
jne
das
mov
jle
inc
aas
xorl
xor
mov
cmpsb
aaa
call
and
sub
xor
stos
mov
adc
popf
imul
mov
mov
and
or
je
mov
xchg
jb
fwait
gs
leave
loope
sub
sub
int3
push
add
xor
lcall
ret
sbb
in
adc
add
aam
outsb
fwait
sbb
adcl
pop
das
inc
push
rcr
mov
aas
sbb
and
inc
lea
jbe
shrl
pushl
xchg
mov
test
and
mov
pusha
int3
int3
dec
ficoml
inc
aam
sbb
mov
lret
mov
sti
mov
or
pop
jno
mov
roll
loop
mov
mov
loopne
loopne
push
dec
and
push
in
mov
repz
sbb
popf
rolb
sub
movsb
adc
and
dec
dec
aam
push
sub
sub
jo,pn
js
mov
adc
sub
xor
pop
mov
adc
and
in
incb
mov
rcrl
movhps
xor
pusha
int3
stc
jmp
or
mov
addr16
pop
out
int
scas
fadds
inc
stc
std
push
xchg
dec
cmpb
je
or
je
in
dec
loopne
ljmp
dec
movsl
add
fidivl
jbe
loope
inc
mov
cmp
fcmovne
dec
jnp
mov
dec
jmp
stc
aam
or
fcmovnbe
shrb
shll
jne
sbb
inc
xor
getsec
jne
jecxz
out
test
jge
sbb
or
add
shlb
jb
mov
mov
pusha
mov
mov
clc
cmpsl
pop
or
pop
jne
sbb
scas
inc
add
jg
jne
sbb
fbld
mov
add
sarl
mov
xchg
sbb
insb
or
lcall
shlb
jl
sub
es
stos
mov
mov
sbb
inc
mov
nop
sub
out
jge
pushf
cld
addr16
push
or
dec
insl
push
mov
mov
push
xor
xlat
aas
je
sub
fcomp
and
cmpsl
or
xor
leave
jne
pusha
jo
es
cmp
mov
inc
sbb
inc
jbe
sub
ds
adc
sub
sbb
je
cmp
andb
aam
movl
or
pop
dec
xchg
rolb
pop
and
adc
push
in
lds
int3
add
test
cmpsl
daa
loope
xor
push
test
mov
inc
test
dec
or
pop
jne
mov
mov
add
xor
xor
add
push
jmp
ljmp
je
mov
dec
pop
test
je
push
cli
lods
mov
cli
or
or
jae
jb
or
jmp
add
je
adc
cltd
incl
shr
jne
lret
test
je
mov
inc
pop
inc
outsb
stos
dec
cmp
out
lret
and
jg
xchg
cmp
add
cvtdq2ps
inc
shll
dec
pop
ret
es
adc
adc
pop
mov
sarb
mov
inc
mov
add
sar
inc
fidivrs
test
je
test
xchg
xor
sbb
dec
jnp
xor
subl
rolb
cmp
dec
aam
sti
add
rcrl
inc
les
pop
push
cmpsl
aaa
push
xchg
inc
or
xor
int3
mov
outsb
push
or
pop
sbb
sbb
insb
icebp
movl
outsb
inc
or
adc
sbb
bound
enter
aam
mov
push
push
add
int3
sti
sub
push
es
movsl
dec
in
incb
and
sti
sub
xor
mov
shlb
out
mov
push
xor
mov
mov
pop
call
cmp
ret
call
fdiv
leave
push
scas
mov
neg
dec
mov
std
adc
pop
jmp
sbb
cld
pop
mov
push
mov
add
adc
mov
outsl
jmp
mov
rolb
and
mov
pop
push
and
inc
push
sub
cmp
dec
add
lds
push
jne
xor
cmp
leave
sbb
arpl
xchg
pushf
or
sbb
in
adc
add
shlb
call
pop
mov
test
pop
push
aas
mov
mov
add
cmp
jbe
cmp
andl
clc
jb
bound
pop
jp
or
mov
inc
dec
icebp
outsb
mov
jb
loopne
add
test
icebp
out
stc
sahf
int
lea
nop
push
pushf
icebp
xor
pop
mov
andb
pop
lock
mov
jl
mov
or
lods
adc
imul
outsl
jbe
movsl
add
inc
repz
fsubrp
push
in
repz
int3
les
mov
sahf
out
sahf
call
hlt
jle
out
hlt
clc
clc
cld
cld
lea
xchg
lock
adc
cmp
out
loope
push
sub
and
lods
sbb
cmp
repz
xor
and
adc
ret
in
popa
push
lea
jl
cld
jmp
stc
or
std
cld
out
mov
fwait
rclb
outsb
pop
sbb
test
pop
nop
mov
push
fiaddl
je
add
dec
inc
fsubrs
aas
inc
dec
cmp
dec
out
add
mov
mov
push
pop
add
pop
sbb
adc
push
or
push
fs
je
iret
repz
test
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
lahf
enter
push
add
pop
pop
daa
xor
add
fucomip
adc
mov
mov
es
subb
sub
rol
es
jmp
push
mov
dec
adc
inc
push
adc
sub
aam
jg
sahf
add
inc
push
movb
dec
dec
mov
shlb
inc
or
sub
lock
mov
lock
sub
stc
lahf
add
shrl
loope
repz
add
inc
test
cmpsb
mov
imul
xchg
stos
sub
dec
std
cld
call
sarl
je
rorb
mov
mov
and
shll
sahf
out
dec
clc
jne
mov
lock
popf
mov
stos
je
inc
dec
js
iret
add
or
push
cmp
xchg
ret
xorl
cmc
sub
jae
call
aaa
fcompl
mov
mov
pop
jp
lds
jl
test
cmp
or
cmp
and
add
adc
inc
add
sub
inc
mov
and
sub
sarb
scas
jle
xchg
sbb
shl
inc
ret
ret
insb
movsl
mov
jmp
add
sahf
into
data16
lret
xchg
mov
aas
adc
add
pop
xchg
cmp
xchg
dec
lods
adc
pusha
inc
add
add
faddl
jp
outsb
or
push
adc
loopne
or
push
shlb
mov
mov
cmp
mov
loope
in
leave
test
pop
push
cmp
inc
mov
repz
pop
das
loope
or
adc
adc
leave
lods
adc
adc
xchg
sbb
aam
out
cmpsb
xor
xchg
inc
fildll
fwait
lock
push
stos
mov
push
je
pop
clc
dec
subl
jmp
push
add
andl
inc
ds
paddusw
repnz
insb
xorl
sub
dec
hlt
lock
sbb
enter
lds
and
pop
cmp
lret
or
adc
cld
push
and
loopne
or
jmp
dec
add
das
sar
nop
clc
imul
cli
push
or
sub
cmpsb
loopne
pop
mov
xchg
std
neg
loopne
push
push
mov
sar
call
lock
in
adc
int
in
in
lock
sbb
hlt
dec
movsl
lods
add
call
loope
movsb
sar
add
hlt
push
rcr
repnz
aam
clc
dec
mov
cltd
add
adc
dec
mov
sti
sbb
xchg
lock
push
inc
cwtl
push
clc
dec
out
fistpl
neg
es
sbb
and
push
push
mov
iret
sub
or
jl
rcrb
sahf
add
aaa
sahf
clc
dec
adc
imul
outsb
dec
test
aas
mov
das
jg
test
mov
mov
mov
push
fiaddl
fs
jg
push
rolb
push
add
in
cmp
loope
add
inc
lock
ja
fldpi
or
or
sbb
popf
rcr
push
mov
lods
mov
pop
cmp
push
sub
and
testb
jg
and
loopne
pop
mov
int
mov
movsb
je
neg
dec
sar
mov
pusha
dec
inc
sbb
lock
lds
jmp
les
push
jo
add
enter
xchg
cmc
jp
or
add
xchg
rol
sbb
pop
jmp
jnp
mov
fldl
cmp
and
jmp
push
je
push
or
fst
pop
out
dec
in
xchg
push
arpl
mov
pextrw
xchg
pop
add
loope
jb
loopne
and
loopne
sub
push
test
fstpt
xor
inc
out
lock
sub
add
add
fisubl
dec
test
mov
loope
shlb
test
dec
mov
loopne
adc
adc
std
mov
inc
or
inc
or
mov
or
cmc
daa
adc
mov
out
out
insb
add
mov
add
dec
or
in
in
jae
or
sbb
push
mov
orl
or
cmp
dec
xchg
adcl
xor
sub
das
pushf
imul
or
xlat
pop
lcall
movsl
lock
cmp
add
adc
jo
push
mov
pop
add
dec
push
or
popa
cmp
cmp
andb
cmp
jo
xor
add
pop
push
add
mov
mov
scas
repz
add
fldcw
lret
adc
jmp
add
add
je
sahf
bound
fsubs
int3
add
hlt
cmp
repz
jae
sub
movb
gs
jmp
repnz
sbbl
addb
vorps
pop
mov
iret
cmp
jo
ljmp
xorl
popa
mov
sarb
inc
add
mov
shlb
sbb
inc
testb
inc
imul
lock
adc
insl
lock
pop
add
add
outsl
adc
add
outsl
addl
test
enter
loopne
inc
fisubrl
mov
cmc
push
and
adc
inc
adc
xor
sbb
cli
add
out
add
mov
jle
xchg
je
outsb
lea
pusha
jns
call
push
xchg
jle
jns
popf
add
xor
cmpl
sar
sbb
js
jmp
jp
shll
mov
roll
jne
lret
fcomps
add
or
mov
lock
std
cmp
aad
add
jns
adc
out
clc
push
dec
imul
xchg
insl
testl
and
ret
dec
push
shl
mov
adc
push
mov
insb
rolb
aaa
mov
insb
fldt
daa
fstpl
adc
rolb
inc
call
pop
or
pop
sahf
hlt
mov
pop
sahf
call
cmp
and
jl
rolb
sub
jmp
cld
add
xorb
arpl
int3
cmp
and
mov
or
push
xor
sbb
sbb
mov
je
pop
addr16
or
push
and
jns
mov
rolb
inc
push
cmp
enter
push
adc
add
jnp
add
and
jmp
mov
mov
add
mov
ret
je
daa
stos
adc
cmpsl
loope
fs
iret
add
adc
push
scas
xor
ret
dec
mov
jecxz
sub
hlt
xor
dec
pop
cmp
int3
mov
inc
dec
sub
add
inc
and
fcomps
inc
inc
aas
idivl
cmp
add
in
or
add
rolb
xorl
add
add
sti
and
mov
mov
and
push
enter
adc
out
rolb
paddb
arpl
adc
inc
mov
and
add
pop
pop
lea
data16
sbb
adc
cmpsl
push
xorl
js
in
mov
cld
jns
lods
push
adcb
xchg
push
sbb
daa
mov
enter
adc
and
sbb
and
aaa
and
push
aam
or
xor
insb
lret
xchg
dec
jo
cld
comiss
inc
loop
rcrb
push
push
movsl
je
in
add
inc
js
das
jmp
orb
popa
cs
dec
out
je
jae
mov
xor
mov
gs
loope
cmp
movsl
cmpl
xor
insb
mov
or
push
mov
or
pop
dec
stc
call
mov
jne
jnp
movsl
sub
sbb
movsb
stos
jo
push
push
xor
or
xchg
mov
insb
mov
insl
addr16
mov
addb
sti
dec
jo
xor
xor
popf
stos
push
addb
or
or
in
loopne
push
and
out
xchg
mov
mov
mov
dec
mov
adc
mov
mov
movsl
pushf
ss
aas
decl
inc
enter
out
lcall
in
or
in
in
sbb
sub
xchg
cmp
xor
cmp
pop
incl
inc
xchg
xor
or
adc
pusha
dec
sbb
add
es
jecxz
jb
outsl
pop
inc
push
call
sbb
jg
mov
mov
and
jmp
nop
xor
lret
dec
loopne,pn
mov
mov
dec
adc
cld
mov
adc
mov
clc
mov
adcb
rcrb
rcrb
js
jmp
ja
loope
call
loopne
xlat
cmpsl
push
in
fisubrs
push
call
cwtl
leave
sub
cmc
xorb
sbb
jo
mov
in
aad
repz
imul
and
push
mov
inc
cmp
out
fsub
or
or
enter
sbb
add
jne
or
fisttpl
inc
push
push
push
pop
adcb
rcrl
fldcw
adcl
sub
add
lods
fmuls
test
loopne
xchg
push
mov
aam
aam
test
add
ds
jne
adc
adc
sub
aam
das
mov
sbb
fimull
fdivs
adc
xor
xor
adc
or
lods
pop
jo
clc
mov
test
lea
cmp
sti
xchg
add
xchg
nop
jns
sbb
push
inc
sbb
pop
push
mov
and
or
bound
lock
rcrb
enter
hlt
mov
cmp
jmp
sti
or
push
pushf
in
add
and
in
push
adcb
icebp
add
adc
loopne
jle
les
jmp
out
stc
jg
jecxz
inc
mov
faddl
mov
andb
adc
xchg
push
add
popa
adc
sbb
in
add
and
shlb
adc
xchg
das
orb
xorb
cmpsb
jae
sbb
mov
mov
mov
sub
jno
mov
xor
mov
add
inc
push
xor
popf
sbb
mov
flds
jne
add
jbe
push
lock
das
xchg
in
dec
push
sbb
push
push
jmp
sahf
adcb
aam
scas
jo
xor
inc
test
jecxz
pop
or
cs
mov
push
xchg
and
push
aas
nop
les
lahf
cmp
xor
jno
es
dec
and
or
or
add
inc
je
loope
push
sub
cmp
jne
jb
cmp
jg
xor
cmp
mov
and
or
inc
cmp
in
or
loopne
setae
outsb
test
xchg
inc
nop
or
push
fists
sub
lahf
cmp
push
enter
pop
jg
mov
jmp
mov
add
jge
or
das
das
loopne
inc
mov
sbb
sti
pop
sarl
inc
fsubp
addb
lahf
pop
dec
aad
mov
int
data16
loopne
lods
or
push
or
add
inc
xchg
add
mov
push
addl
das
mov
and
lret
push
jl
fildl
popf
stc
js
sub
cmc
imul
cmc
pop
push
add
xchg
je
or
add
jo
push
push
stc
and
push
adc
push
add
cmp
mov
cmc
mov
mov
xchg
int3
dec
pop
and
addb
into
inc
sahf
push
nop
sbb
push
mov
cwtl
movsb
pop
cmp
mov
repnz
mov
add
or
sbb
sbbl
sbb
pop
jle
jne
adc
adc
pop
cmc
fcompl
scas
add
hlt
sub
inc
sub
add
in
leave
adc
jle
or
sub
jo
pop
lods
push
pop
mov
lods
ret
imul
inc
pop
lods
sbb
and
and
and
mov
aam
or
add
sub
jbe
or
cmc
push
or
cmp
jecxz
add
cmpl
roll
push
pop
sub
mov
jp
ljmp
pop
fsubr
das
push
daa
or
or
rorl
cwtl
jo
mov
lret
xor
call
sbb
mov
adc
mov
jl
sub
pop
ret
insb
nop
enter
lea
jo
inc
call
push
or
sbb
inc
xchg
mov
pop
in
cmp
inc
jo
pop
aad
xchg
jmp
repnz
int3
lret
pop
add
or
or
stos
movb
mov
out
jo
imul
pop
pop
mov
or
jns
adc
cld
inc
daa
popf
xchg
xchg
lods
fisubrl
popa
mov
dec
lods
or
incl
push
mov
inc
and
push
push
clc
push
mov
xchg
test
dec
mov
loop
mov
in
jno
mov
lcall
inc
movsb
arpl
and
dec
add
cmp
rolb
int3
push
clc
bound
mov
inc
adc
inc
add
movsb
mov
lahf
xor
cmp
pushf
mov
add
aam
sbb
aam
icebp
stos
inc
aaa
movl
jmp
push
pop
sub
lret
icebp
or
int3
or
jbe
mov
scas
push
sub
push
cld
cmp
sub
jge
mov
int
adc
and
int3
inc
mov
push
jne
je
hlt
or
dec
repz
xor
mov
lahf
cmpsl
and
inc
pop
sbb
cmp
add
mov
loop
loop
test
mov
or
mov
push
jne
mov
push
xor
lods
inc
inc
add
ficompl
and
das
push
ja
faddp
es
add
add
mov
stc
push
clc
push
cmpsb
jl
sub
ficoms
repnz
dec
jge
out
and
lods
sbb
loop
adc
enter
or
sbb
add
xchg
rcll
sarb
dec
inc
hlt
addr16
cmp
inc
or
jge
push
hlt
pop
les
mov
shl
rol
cli
add
addb
loopne
dec
rclb
inc
or
fcoms
add
aam
sarb
inc
test
mov
pop
sub
adc
mov
in
out
pop
cld
push
mov
fcompl
mov
ret
add
mov
jmp
outsb
ret
jmp
sar
filds
addr16
adc
mov
les
inc
jo
add
inc
jno
add
pusha
cmp
push
decl
inc
lcall
lea
fmuls
mov
shl
cmp
adc
inc
cmp
je
test
decl
or
push
mov
shl
push
adc
lea
lret
ffreep
sub
stc
xor
add
xor
mov
movb
sbb
ja
mov
mov
int3
les
mov
pop
or
outsb
loop
je
inc
out
cmp
je
out
data16
adc
lahf
push
aam
xchg
pop
arpl
outsb
or
xor
push
inc
imul
mov
mov
test
xor
adc
pop
inc
cmp
movsl
or
cmc
sti
out
push
sbb
lock
lea
mov
fsubrs
pop
push
cmp
inc
mov
lahf
std
adc
data16
shll
fucomip
mov
push
incb
inc
adc
lea
sbb
xor
pushl
loop
cmp
int3
loop
stos
adc
cmp
inc
icebp
test
adc
pop
jae
xor
xor
call
jno
gs
mov
cld
and
les
push
cld
cld
verr
lods
shrd
jne
int
cld
mov
or
and
test
cmp
mov
addr16
or
or
or
push
push
clc
push
push
lock
mov
pop
and
push
and
aam
mov
rolb
addr16
pop
push
jl
xor
add
push
enter
shlb
scas
dec
cmp
ja
outsl
loop
pop
inc
sub
dec
test
xor
push
add
inc
xchg
adc
or
sbb
sub
mov
sbbb
xlat
nop
push
pushf
fs
and
jae
sub
lcall
sbb
enter
into
adc
xor
gs
in
jno
jecxz
in
pop
mov
add
mov
dec
push
push
loop
je
and
imul
add
outsb
cmp
jae
or
xor
cmpb
sbb
push
mov
sbb
mov
sub
and
inc
mov
flds
dec
inc
mov
sbb
xchg
add
lock
or
xor
add
ja
std
adc
cmp
jo
in
sub
mov
jmp
loopne
in
ret
mov
call
icebp
scas
adc
sarl
cmpsl
or
out
mov
inc
sub
jne
loopne
leave
and
jmp
fsub
repz
xchg
outsb
push
or
push
in
jmp
ds
fdivs
mov
mov
jno
push
jmp
jmp
add
adc
sbb
and
push
mov
cmp
out
rcrb
and
cwtl
fwait
fwait
or
jmp
std
jmp
push
test
jbe
or
sbb
push
fisttpll
leave
inc
enter
adc
xor
xor
aad
neg
dec
ret
jo
adc
inc
add
sbb
ud0
xchg
pop
pop
sub
loope
or
mov
jno
nop
push
sbb
lret
loop
das
dec
or
and
dec
xorl
push
loope
imul
xor
pop
lds
xor
dec
and
call
jo
push
push
inc
jecxz
push
out
add
orl
mov
cmpl
jle
adc
ja
jge
fadds
or
and
xchg
sbb
or
xchg
loope
or
sub
push
movsb
ss
ja
sbb
add
loope
push
cmp
mov
xchg
fstl
inc
pop
jge
or
or
adc
insl
sbb
loope
push
or
fistpll
mull
add
loope
rcrl
out
sbb
or
cmp
addb
mov
shrb
pop
lahf
sub
clc
mov
add
rolb
adc
inc
lret
cmpsl
sti
push
ss
lret
add
leave
daa
or
or
arpl
push
jl
jl
add
mov
adc
rolb
push
xorb
dec
or
loope
push
and
fisttpll
inc
rcrl
adc
xchg
pop
cld
sbb
and
es
ret
sbb
icebp
xchg
or
ror
imul
rcrb
cld
lock
out
daa
shr
rcr
shr
rcr
or
jne
div
mov
ficompl
mov
jmp
mul
add
jb
cmp
or
cmp
add
add
or
push
fstl
mov
outsl
mov
idivb
jmp
fnsave
push
sub
out
pop
pop
enter
adc
or
fcmovb
lahf
push
or
sub
and
or
fcoms
lock
jno
push
push
push
xor
pop
jge
inc
shll
stos
dec
push
sbb
es
jo
sbb
sbb
sbb
arpl
dec
sbb
adc
lock
shr
rcr
dec
fnsetpm(287
nop
lret
in
sbb
adc
and
in
dec
jne
gs
pop
imul
dec
clc
hlt
gs
and
xor
rolb
lock
std
sbb
xchg
push
lret
cmp
jl
imull
stc
jp
or
mov
add
add
xor
sub
pop
aaa
push
mov
fimull
push
daa
je
adc
hlt
sti
mov
push
xor
fisttpl
imul
push
inc
jmp
jg
lods
jb
mov
jo
in
cld
in
sbb
enter
sbb
dec
sbb
jo
push
push
or
ret
or
and
pop
push
and
adc
add
shll
mov
push
pop
push
push
xor
sbb
cmp
repz
push
jmp
push
mov
into
cmc
mov
inc
inc
call
addl
arpl
xor
inc
dec
sub
mov
xlat
cmp
test
movsl
adc
cmp
jne
inc
inc
dec
je
adc
jp
out
call
cmp
jne
mov
mov
adc
and
call
ret
orb
rolb
cmpsl
mov
dec
dec
push
cld
dec
adc
cmc
jne
sub
shr
push
je
out
add
je
push
cli
les
lret
sbb
out
jne
or
fstpt
and
dec
mov
call
push
jno
adc
pop
inc
test
adc
pop
xor
push
cmp
push
movl
or
lock
icebp
xchg
lds
rorb
mov
fbld
cmp
in
xor
sbbl
inc
jl
or
or
adc
push
sub
lods
nop
cmpsb
ds
cmp
incl
mov
daa
xor
sarb
jnp
add
imul
lock
add
cli
or
cmp
xor
and
enter
stc
stos
add
std
push
push
lcall
clc
stc
sub
ret
push
hlt
push
ja
loope
mov
ret
aad
es
sahf
dec
pand
ja
push
adc
incl
loope
or
pop
push
es
xor
jmp
jg
call
icebp
xor
mov
leave
sbb
std
pop
pop
xchg
push
fbld
or
dec
jb
xor
clc
push
insl
arpl
mov
xlat
jo
xor
push
enter
push
iret
bound
add
or
fwait
mov
cmp
movzbw
dec
outsl
mov
pop
fbld
shlb
jmp
mov
or
fadds
add
and
rolb
dec
outsl
scas
pop
and
les
or
sub
ds
inc
fcmovnbe
or
inc
dec
test
mov
sbb
xor
bound
in
scas
inc
data16
add
jmp
bound
and
loopne
cmp
adcb
add
cmp
push
sbb
jge
and
aaa
sub
scas
fiaddl
ja
lods
add
ret
inc
cmp
popf
cmp
adc
inc
or
and
daa
push
jecxz
mov
jg
mov
popf
dec
es
aas
add
ret
cmp
or
aas
add
daa
push
xor
imulb
jecxz
push
out
data16
add
adc
or
mov
xchg
sub
sbb
mov
ds
pop
xor
cmp
outsb
adc
mov
and
and
and
mov
jg
cmp
xchg
clc
insb
inc
add
and
xchg
ret
push
enter
adc
lcall
adc
les
lea
fildl
pop
lods
lds
ljmp
jmp
into
add
js
adc
jmp
mov
fbld
sbb
stos
adc
ss
xchg
lock
push
add
mov
cmp
mov
cmp
or
in
xchg
out
inc
add
iret
add
xchg
fcomps
movsb
shll
inc
cmp
loop
js
push
cmp
sub
loop
inc
test
add
add
push
push
das
sub
test
jne
hlt
jmp
sub
jne
inc
inc
mov
xchg
cwtl
popa
push
lret
add
cmp
inc
scas
sub
adcb
xor
mov
in
jne
or
mov
rclb
loope
je
rorl
adc
or
subb
stos
into
ret
xchg
push
lahf
inc
cmc
jae
in
testb
stc
in
sbb
call
push
jmp
out
inc
sub
adc
dec
insb
aaa
in
mov
cld
clc
cmp
punpckldq
adc
xor
or
xor
mov
sub
add
jmp
or
xchg
add
mov
adc
inc
out
adc
sbb
adc
jmp
cld
dec
mov
mov
adc
les
in
push
jg
nop
pop
shrb
sahf
add
dec
pop
adc
push
sub
jge
mov
pop
or
mov
xorb
stos
or
test
test
jbe
sbb
loope
push
mov
dec
inc
jo
stos
adc
jge
sbb
cli
sub
rorl
pop
adc
lods
inc
fmull
sub
int
jl
adc
and
adc
jmp
adc
or
cmp
push
mov
sahf
cmpsl
js
into
test
dec
insl
pop
jne
adc
or
pusha
out
jp
jne
out
dec
xor
xor
js
jne
cmp
mov
sbb
dec
mov
lock
sbbl
pushf
inc
push
sbb
jmp
push
sbb
testb
test
cmp
mov
cmc
jmp
add
sub
sbb
fwait
jo
pop
je
mov
jg
sub
fidivrl
mov
jmp
push
sub
push
and
push
shlb
or
push
lock
ljmp
sbb
cmp
ja
dec
cmc
or
xorb
dec
imul
jmp
jp
adcl
cmc
jmp
ss
jo
push
jo
loope
add
and
out
out
orb
adc
test
and
jbe
cmpsl
rcrb
cltd
and
cmp
xchg
sbb
cwtl
jbe
jae
dec
cmp
pop
mov
dec
cmpsb
neg
shrb
fnstcw
dec
mov
inc
movsb
jl
pop
jno
jne
fld
divl
mov
mov
adc
cmpsb
mov
leave
cmp
and
add
add
dec
not
mov
pop
les
xchg
mov
fbstp
gs
and
add
push
icebp
cs
push
xchg
jo
out
dec
femms
out
scas
push
xor
in
mov
repz
pop
inc
xchg
iret
sbb
lods
push
xchg
repnz
shrb
in
and
lahf
jno
adc
icebp
fimuls
aad
in
rorb
push
pusha
rcll
ja
stos
sub
test
add
fisttpl
loope
leave
or
xor
stos
dec
rcrb
daa
cmp
stos
jne
add
push
push
lcall
nop
xlat
ja
imul
cmp
dec
in
inc
insb
pop
pop
lock
or
movsb
mov
adc
pushf
mov
in
dec
and
mov
test
cmp
adc
jno
mov
xchg
fists
mov
sbb
sbb
xchg
out
cmp
dec
lods
and
xor
in
or
adcb
jmp
fmull
jecxz
bound
mov
shl
dec
movsb
xor
cld
sarb
loop
jbe
movsb
rorb
les
ljmp
or
dec
pop
cmpsl
pop
rcrb
mov
jp
aas
cmp
pushf
mov
add
cwtl
outsl
loopne
les
push
dec
cwtl
mov
dec
pop
aam
mov
xor
fdivr
lock
ss
add
call
aad
xchg
mov
aas
mov
sub
int
clc
je
loopne
mov
mov
or
ret
or
dec
push
mov
cltd
or
pop
mov
jge
ltr
out
sbb
lds
cmpsl
stos
js
or
mov
jmp
and
imul
add
fadd
xchg
sbb
pop
dec
sub
cmp
subl
adc
jne
mov
out
pop
in
or
mov
cmp
fisttps
fs
rorl
test
je
loopne
icebp
sub
jge
cld
pusha
mov
mov
xchg
mov
cmp
jbe
adc
sbb
into
inc
cwtl
clc
pop
jle
inc
ds
loopne
push
fs
jmp
xchg
fadds
inc
lock
rol
cli
dec
lock
pop
inc
xchg
icebp
arpl
and
add
int
mov
fs
add
mov
mov
jmp
mov
pop
mov
jmp
scas
xor
leave
stos
adc
cld
add
jno
pop
sub
rclb
dec
mov
sub
push
in
hlt
push
loopne
xchg
aam
push
out
pushf
shr
or
cmpl
sbb
loope
pusha
stc
and
cmpb
push
lahf
or
outsb
mov
cld
xor
mov
testl
aaa
xor
push
xchg
rorl
shlb
xor
std
xchg
xchg
jnp
or
ja
sbb
mov
inc
inc
loopne
arpl
orl
dec
sub
fs
push
inc
mov
xor
cmp
insl
enter
je
enter
mov
rorl
sub
sub
xchg
test
ror
xchg
rcrb
test
insl
add
or
adcl
or
stos
xor
mov
mov
adc
cmp
add
push
and
stos
cs
sbb
test
stc
cmp
adc
or
or
pop
insb
cmpsl
or
jns
jne
lea
inc
loopne
mov
or
jge
popa
add
and
pop
scas
daa
pop
wrmsr
lods
imul
and
lret
fimuls
lea
xor
lods
stos
xor
imul
out
jl
enter
adc
push
out
mov
dec
pushf
xor
xchg
pusha
pusha
ja,pn
pusha
call
aam
dec
sahf
add
imul
inc
and
rcl
xor
adc
cmp
call
aas
xor
repz
jns
mov
fstl
cmpb
sahf
dec
shr
inc
xchg
xor
out
inc
into
mov
sub
out
or
and
xorl
dec
push
cmp
fsubl
movsl
adc
test
mov
xchg
and
hlt
and
mov
xor
or
xlat
pushw
shr
fisttpl
jns
adc
scas
pop
xchg
sbb
xchg
jg,pt
adc
and
sbb
mov
push
pop
ret
xchg
or
xchg
adc
and
std
int3
dec
jge
mov
fsubs
pop
xchg
test
dec
ret
cmp
sub
out
cmp
jno
arpl
and
jne
pop
jg
shl
in
jne
mov
loop
push
movsb
bnd
mov
shll
je
mov
inc
and
lock
test
mov
loope
mov
cwtl
out
in
sbb
adc
aas
sub
pop
iret
or
jno
mov
xchg
dec
xchg
test
adc
mov
jp
jp
inc
adc
lods
inc
mov
test
cmp
xor
sbb
mov
enter
pop
add
sbb
push
and
cltd
dec
jp
xchg
mov
lcall
mov
push
ret
sub
test
pop
dec
inc
lea
addr16
bound
xchg
xor
jne
mov
cmp
push
addl
xor
loopne
mov
add
lea
pop
jbe
subps
aas
mov
into
sbb
add
inc
mov
mov
push
push
lea
cmc
pushf
xor
push
cmp
lea
push
pusha
and
or
fstl
xchg
or
push
inc
test
xchg
sbb
cld
mov
mov
sub
hlt
adc
shlb
or
rcll
lods
jmp
mov
cmp
sbb
idivl
jmp
mulw
cmpsl
sub
pop
or
daa
sub
push
sahf
dec
adc
push
addr16
push
xor
divl
jge
push
mov
icebp
imul
addb
add
sbb
ds
test
ret
xchg
repz
fsubrs
lea
int3
and
jmp
push
cmp
mov
pop
lret
aas
aas
sbb
and
or
dec
xor
pop
out
inc
repnz
mov
sub
adc
jae
pop
and
push
in
mov
cmc
push
nop
jns
jnp
testb
pop
inc
cmp
mov
mov
das
data16
dec
add
jbe
idivl
add
or
mov
shl
add
adc
pop
loop
repz
imul
subl
mov
dec
ret
push
cmc
pop
mov
pop
dec
clc
ja
sbb
sbbb
jle
cmp
add
mov
mov
add
jmp
add
data16
lock
jle
daa
jns
xor
sub
inc
repnz
dec
sti
lea
movb
push
sub
mov
aam
add
popa
mov
sub
repz
add
xor
xor
add
xor
rcl
or
xchg
pusha
fadds
mov
or
sbb
pop
jns
inc
inc
push
icebp
mov
popf
repnz
dec
enter
add
mov
movsb
xchg
jae
add
das
or
or
js
js
gs
pop
vmread
insl
out
fildl
push
adc
or
mov
mov
cs
cmovnp
add
mov
inc
aaa
lods
je
xor
mov
shll
mov
inc
fnsave
inc
nop
inc
mov
mov
in
ret
ja
sahf
mulb
lea
inc
push
jae
cmp
mov
rorl
sub
mov
jns
mov
aad
add
repz
mov
add
pusha
adc
push
sbb
cmp
and
add
add
ss
in
cmp
arpl
push
xchg
dec
repnz
divl
pop
dec
lods
fcoml
sti
mov
popf
inc
jp
push
orl
add
jl
out
add
push
add
add
add
mov
or
or
or
or
push
inc
or
mov
sbb
or
ret
fidivrl
adc
setno
xor
popf
cld
mov
nop
lcall
sbb
xchg
cmpsl
or
mov
movl
call
pop
fisubrs
call
cmp
cmp
or
adc
cmp
and
pop
sub
xor
cmp
or
add
pop
sub
ss
sub
push
loop
mov
outsl
xchg
hlt
dec
add
sub
cmpl
shlb
or
add
xlat
inc
dec
or
and
inc
lret
sahf
dec
out
xor
inc
xor
int
adc
pop
pop
insl
push
xchg
idivl
add
ret
rcrl
test
mov
cmp
ljmp
mov
add
daa
xor
ret
pop
sahf
xchg
hlt
push
xchg
or
out
and
or
xchg
mov
sub
movb
xchg
mov
xchg
mov
add
cwtl
sbb
lock
andb
dec
inc
vunpckhps
lahf
mov
sbb
dec
mov
adc
jo
sbb
jg
add
aas
inc
push
lods
push
push
mov
into
push
sti
xor
adc
push
jbe
jae
mov
push
clc
fists
loopne
scas
rclb
imul
push
push
push
xchg
mov
push
push
ja
stos
gs
push
adc
cmp
mov
int3
jne
test
and
mov
pop
adc
fwait
sahf
clc
iret
outsl
lea
or
mov
cmc
mov
or
inc
loopne
es
xorb
cld
leave
cmpsl
inc
ret
push
adc
fisttps
xor
or
jbe
push
lods
pop
aad
popa
ret
jns
mov
cmp
mov
jne
xchg
xchg
mov
pavgb
add
inc
ret
cmp
pushl
fwait
pop
les
fsubr
push
adc
or
lods
mov
cmp
outsb
add
xor
xor
mov
insb
and
mov
iret
adc
or
push
inc
in
sbb
push
or
pop
adc
fucomp
adc
gs
cmp
dec
sahf
mov
jae
xor
in
iret
lea
and
mov
or
or
cs
aam
adc
pop
enter
or
jbe
jl
faddl
andl
sarb
rorb
jbe
jo
adc
xor
add
xchg
adc
aaa
cmp
daa
push
mov
mov
mov
insb
ds
pop
iret
pop
test
lods
into
pop
or
push
sbb
call
leave
xor
in
in
iret
jnp
addr16
repnz
mov
cmpsl
jmp
fadd
fdivl
in
cmp
lret
cs
out
xor
cmp
rolb
or
stos
int3
jns
inc
xor
jns
jle
sub
imul
call
and
push
sub
aam
and
and
int3
enter
pop
mov
cmp
aam
jns
and
hlt
out
cmp
out
xchg
mov
and
pusha
mov
hlt
out
popf
or
cld
mov
xor
fisttps
add
push
mov
cmp
xor
sbb
bound
arpl
cmp
push
ljmp
pop
push
push
int
sbb
rcl
faddl
mov
inc
add
es
dec
insb
xor
xlat
add
pop
les
sbbl
push
xor
sub
xor
dec
imul
push
enter
cmp
aas
mov
dec
ds
push
inc
bound
test
arpl
pop
adc
push
mov
xor
xchg
adc
pop
add
lock
inc
pop
fbstp
in
imul
adc
test
xor
cmovge
and
xor
out
sbb
add
xchg
jmp
scas
dec
enter
sub
xor
xchg
xor
cmp
xor
test
inc
sub
cmpl
cmp
fstl
xor
sbb
popf
lahf
in
xchg
popa
cltd
lahf
lods
test
push
ds
sub
les
add
dec
sub
arpl
pop
or
or
shll
shr
fmuls
sbbl
faddl
into
mov
adc
sbb
jmp
cli
jmp
xchg
or
or
sbb
mov
xchg
sbb
add
adc
out
add
clc
mov
xor
add
dec
loope
cmp
cmp
inc
xchg
scas
adc
ret
sub
add
lret
pop
lea
ljmp
add
lock
mov
mov
mov
xlat
lcall
call
enter
popf
or
pop
jg
add
push
push
add
push
faddp
ljmp
and
xchg
nop
pop
lock
and
mov
add
add
mov
inc
pop
adc
dec
loope
in
adc
fmuls
imul
cwtl
inc
add
push
xchg
mov
mov
sub
js
jo
dec
roll
sub
ljmp
sub
fdivl
or
ss
mov
add
shlb
int3
test
mov
pop
push
pop
test
jnp
inc
xor
lods
push
enter
or
dec
mov
rcll
nop
lods
adc
adc
push
ret
add
mul
sbb
and
je
sub
adc
insb
xchg
shll
push
push
adc
add
xchg
divb
push
je
testl
xchg
push
lret
ds
aas
or
push
jnp
mov
loopne
sbb
loop
mov
cmc
lds
roll
pop
cmp
scas
test
sbb
sub
push
sub
cld
mov
arpl
adc
or
add
push
mov
fwait
xchg
xor
jle
mov
icebp
add
cs
popa
push
or
loopne
lock
dec
or
sbb
adcb
or
fisubs
add
sub
adc
sub
cmp
in
push
xchg
jne
loopne
push
fs
das
pop
jne
hlt
pop
mov
insb
jnp
or
and
mov
or
fdivs
pop
adc
sarl
inc
les
xchg
sbb
icebp
mov
lock
pop
in
mov
fdivr
adc
sbb
jg
mov
enter
xor
mov
dec
adc
subl
repnz
cmc
sbb
cmp
fsubr
jp
mov
lock
mov
jmp
mov
inc
pusha
test
fdivrl
lret
gs
push
sub
jg
mov
loop
inc
add
xor
jne
inc
or
ret
push
sbb
das
jle
cmpsl
data16
push
or
les
pop
xchg
int
and
fists
leave
insb
inc
dec
add
inc
adc
movsb
fistps
adc
fcompl
inc
or
test
xor
daa
daa
and
test
inc
xchg
pop
push
fldcw
fwait
into
jbe
test
imul
dec
mov
jne
loopne
dec
cmp
pop
sub
inc
daa
rorb
mov
adc
and
sarb
cwtl
push
cmp
sub
cmp
jmp
sub
outsl
push
push
stmxcsr
jmp
fucomip
xorb
jg
fisttps
mov
test
push
cmp
je
push
jne
pop
movsb
nop
add
add
lods
addl
int3
and
ljmp
shlb
pop
jl
dec
sub
ja
pop
lock
add
add
pmaxsw
loop
cwtl
mov
jmp
mov
sub
or
roll
outsb
shl
cmp
imul
xchg
sub
and
dec
data16
rol
jge
pop
jne
mov
js
jae
clc
dec
ds
xchg
xchg
js
sbb
mov
bound
sti
sbb
add
adc
add
test
ret
test
and
flds
or
clc
std
inc
add
mov
mov
mov
loope
sub
mov
stos
dec
mov
lahf
es
dec
add
dec
sub
add
hlt
sbb
repnz
ret
std
hlt
pop
and
clc
cmpsb
outsl
jne
jno
jge
mov
je
jmp
call
data16
mov
adc
mov
push
mov
mov
arpl
sub
dec
jl
xchg
mov
jo
pop
fisubl
cltd
loop
sbb
adc
adc
dec
fimull
jg
sti
lock
and
daa
shl
jmp
xchg
cwtl
adc
aam
loopne,pt
add
fldenv
push
pushf
iret
adc
pop
pop
fcmovbe
mov
or
hlt
jo
js
pop
fs
lret
lock
out
add
mov
inc
enter
push
push
fmuls
or
fsubrl
in
in
in
shlb
fnstsw
xor
add
add
sub
lea
cmpsb
cmpsb
mov
shlb
or
ljmp
das
or
data16
into
xor
or
loopne
inc
jne
mov
sbb
xchg
or
dec
les
ds
int3
test
sub
enter
scas
or
enter
add
les
or
ror
mov
pop
nop
cmc
mov
imul
stos
pop
bound
ret
mov
sub
xlat
sbb
and
popf
sbb
mov
adc
call
jb
push
push
mov
cmp
xchg
cwtl
or
jnp
add
lock
dec
pop
push
pop
sarl
xor
in
or
lret
jno
and
xchg
pop
and
mov
test
sub
in
and
jb
in
inc
jge
push
js
mov
je
or
or
sub
xor
xor
je
pusha
shufps
xlat
iret
inc
and
lret
lea
sub
xor
add
ret
push
sub
gs
push
loopne
dec
mov
push
mov
rcll
enter
add
inc
mov
jns
icebp
sub
cmc
enter
cmc
cmp
inc
nop
sbb
lods
fdivrl
pop
nop
les
lods
ror
cmp
push
jp
adc
aad
dec
jg
inc
mov
cmp
je
add
fnstsw
jmp
fsubr
or
add
xor
jmp
imul
cmp
sbb
or
repnz
loopne
mov
outsl
cmp
push
aaa
pop
xchg
mov
push
shl
jp
and
jb
or
cmp
or
jb
sub
xor
xor
sub
add
ret
out
dec
rcll
and
push
out
adc
fdivs
mov
repnz
mov
and
stc
sbb
cmp
sti
pusha
inc
add
movsl
pop
pusha
cmpsb
cwtl
popf
cmpsl
sbb
add
les
push
add
add
lods
sarl
add
pushw
xlat
lcall
gs
jno
bound
mov
jnp
push
stos
outsb
ljmp
add
add
or
or
fwait
mov
and
fistpll
das
sub
and
adc
lods
or
clc
jmp
mov
fists
pop
adc
and
dec
out
pop
or
or
mov
pop
mov
pop
sub
jo
clc
inc
ss
pop
dec
lods
push
sbb
add
sbb
aam
adc
add
enter
add
adc
or
pop
sbb
stos
mov
adc
lahf
je
pop
ret
inc
gs
and
inc
mov
mov
sar
push
sbbl
mov
mov
cltd
pusha
dec
clc
mov
hlt
and
dec
and
push
cmp
and
add
push
push
sub
xchg
xor
and
pop
jp
add
mov
mov
inc
jnp
pop
dec
rclb
sbb
imul
or
cld
testl
cli
repnz
lahf
mov
movsb
sbb
xchg
push
shlb
cmp
jnp
add
idivl
add
lea
ds
je
or
xor
or
xchg
adc
adc
adc
jge
or
xchg
inc
in
in
dec
pop
mov
sbb
lahf
push
xchg
inc
loopne
test
push
inc
sbb
adc
pop
or
adc
dec
rorl
popa
ret
jo
xor
icebp
inc
jo
jmp
pushf
xor
jnp
nop
xor
dec
inc
push
dec
mov
or
inc
dec
or
xlat
mov
sub
xlat
mov
add
notl
mov
mov
add
test
xchg
jbe
inc
add
in
test
sub
mov
mov
jp
push
xor
mov
pop
jo
pusha
cmp
rcll
and
sub
mov
jl
jl
je
jg
ficomps
pushw
call
mov
popl
out
adc
ljmp
sar
dec
add
xor
or
push
or
mov
sbb
adc
mov
push
mov
in
add
call
mov
outsl
mov
into
push
push
inc
xor
pop
inc
xor
cmpsl
movzbl
or
testl
mov
dec
xor
lea
jl
jae
or
popa
lea
bound
lea
ja
fildl
push
pop
pop
orb
xor
dec
mov
dec
cmp
mov
jle
lods
pop
or
mov
jmp
mov
lcall
adc
insl
xor
pop
sub
sub
rcr
mov
push
push
sbb
ret
jg
push
or
cmp
pop
or
lahf
loopne
ljmp
nop
rorb
roll
push
stos
das
pop
cld
add
add
push
pop
xor
mov
push
xor
scas
pop
xchg
add
mov
push
push
subb
or
mov
pop
mov
and
leave
fistpll
fs
mov
leave
push
or
shr
add
addl
add
aas
int3
dec
mov
sbb
in
rcll
lods
push
shl
pop
ret
ljmp
popa
mov
ret
mov
xchg
insl
mov
cmp
flds
xor
sub
icebp
dec
lds
add
or
or
xchg
mov
loopne
lods
push
dec
jmp
xor
mov
mov
xor
or
pop
mov
or
mov
or
loope
xor
adc
in
push
roll
outsb
xchg
in
fadds
push
aam
or
dec
rcr
mov
push
ret
inc
adc
adc
pop
mov
dec
repz
mov
addl
in
pop
test
jmp
or
icebp
push
fcom
and
xor
shll
add
test
mov
pusha
enter
insb
inc
int3
jle
adc
sub
xchg
sbbb
mov
adc
jbe
xor
jno
jmp
loopne
mov
leave
fcompl
mov
xchg
mov
loope
lea
xchg
fsubrs
icebp
gs
or
jmp
pop
loopne
lea
iret
push
aam
ljmp
fiadds
lcall
pop
mov
adc
popf
push
insb
cmp
add
dec
shll
pop
add
push
test
mov
xor
arpl
mov
add
xchg
or
and
push
jnp
inc
dec
dec
insb
aam
icebp
insl
pop
enter
rcrl
lahf
fcoml
popa
imul
sub
jb
into
add
ja
icebp
jbe
adc
shll
std
subl
xchg
stos
add
aas
in
cwtl
cmpsb
std
rcrb
rorb
clc
movsb
jecxz
negb
add
add
je
jns
shlb
add
inc
inc
arpl
xchg
inc
mov
sbb
test
cmp
sub
int3
mov
add
or
adc
rcl
dec
enter
mov
jmp
jne
adc
dec
ret
int3
int
jae
enter
mov
and
push
mov
outsb
jmp
pop
daa
insl
xor
pop
ja
xchg
mov
and
adc
adc
or
inc
push
js,pt
pop
ja
jne
jo
xor
xchg
push
dec
adc
cmpsb
push
movsl
jo
fwait
int
sbb
jmp
cmpsb
push
jl
jne
popf
loopne
cld
rcrb
adc
loopne
sub
jo
ss
or
adc
add
adc
out
movsl
popa
test
nop
pusha
sbb
cmp
loop
imul
cmpsl
loopne
pop
push
cld
imul
jmp
xor
cs
pushf
mov
add
mov
sbb
jp
mov
popaw
sub
lods
add
sbb
popf
in
jmp
pop
add
sub
push
sub
xor
ja
add
cltd
cmp
jnp
jae
push
ret
mov
addb
mov
outsl
add
push
fldl
mov
lahf
push
adc
stc
push
jl
adc
into
xor
jmp
add
imul
daa
add
jbe
sub
cmp
add
fmull
pop
push
jo
xchg
cmp
cmp
jo
mov
je
jl
adc
insb
ficoml
or
or
or
pop
mov
leave
cmp
hlt
scas
mov
inc
hlt
jae
inc
inc
and
sub
jg
xchg
cmc
jge
jae
cmp
or
or
rcll
cli
mov
dec
jno
ljmp
call
mov
das
inc
jne
cltd
loopne
dec
push
sbb
sub
sbb
mov
pop
cmp
hlt
and
push
or
rolb
xchg
shr
pop
neg
pop
jno
rolb
imul
nop
cmpxchg
adc
or
fistpl
jp
xor
enter
data16
push
in
repnz
cmp
push
push
sahf
and
clc
in
or
dec
fdivrl
cmpxchg
inc
add
inc
or
cli
add
cmp
jae
mov
idiv
dec
loope
pop
jo
addl
aaa
in
inc
mov
fmull
push
mov
mov
int
in
nop
push
sbb
in
lods
lret
imul
sub
pusha
ds
mov
out
insl
and
inc
mov
jbe
fldenv
mov
sub
sub
sbb
add
call
enter
and
daa
push
push
or
icebp
jo
dec
in
in
stc
add
imul
nop
hlt
push
xchg
jo
push
in
mov
pop
hlt
aam
aam
mov
sbb
mov
cmp
daa
or
cwtl
dec
decb
leave
and
aam
aam
xor
and
lods
or
aam
dec
leave
and
lret
add
sub
cwtl
dec
xor
gs
int3
int3
int3
int3
adc
sub
cmovg
xlat
fsubr
pop
jecxz
stos
adc
test
and
das
mov
push
mov
pop
or
pop
int
and
sub
xchg
fdivs
roll
mov
cwtl
xchg
pop
pop
shlb
fcomps
jle
ja
or
stc
mov
popa
push
inc
jmp
mov
xor
fcompl
jle
xor
in
lock
jnp
adc
cmp
nop
stos
fcoms
jmp
mov
call
sbb
adc
lods
lock
pusha
jne
xchg
inc
mov
loopne
shrl
sub
inc
dec
test
pop
or
shr
test
cmp
or
dec
adc
adc
and
test
xor
xor
pop
xchg
cltd
popa
sbb
sahf
and
inc
adc
add
pop
add
imul
adc
sbb
xchg
add
adc
push
or
cmp
dec
xor
jmp
mov
rcll
push
mov
addr16
fwait
je
or
out
loop
mov
push
cmp
mov
xorb
adc
xchg
xchg
neg
je,pt
sbb
testl
push
push
jmp
fcomps
jne
cmp
mov
sbb
cmp
movsb
inc
adc
das
xchg
inc
push
sar
loop
leave
gs
call
sarl
or
jl
nop
sub
add
sbb
push
jmp
push
cwtl
fstpt
push
sub
mov
xchg
test
xor
mov
stos
test
test
lcall
pop
test
and
mov
jne
xlat
pop
sbb
push
push
int3
mov
fbstp
add
cmp
sub
push
mov
sahf
push
in
jae
movsb
jl
cmpl
dec
adc
or
cmpsl
jg
add
and
cwtl
sbb
jne
mov
push
push
mov
int
test
mov
mov
sbb
xchg
orl
shrb
xchg
outsl
test
popa
dec
enter
push
fldl
movsb
xchg
loopne
sbb
xchg
mov
cmp
mov
aas
jl
pop
jno
lods
stos
in
add
push
jmp
mov
jle
add
mov
mov
shlb
cltd
testl
aas
jle
lods
ss
xchg
aas
cmp
pop
jbe
das
mov
orl
popf
loopne
push
lock
and
add
jecxz
add
inc
loopne
jecxz
mov
adc
adc
xor
loopne
mov
fwait
aaa
movsb
test
test
or
ret
outsb
jl
mov
mov
loopne
sbbl
bnd
pop
cmpsl
call
insb
or
sub
out
add
push
add
xchg
test
sub
lea
lock
pop
fs
mov
lcall
in
pop
insl
pop
sub
inc
in
addr16
mov
add
cwtl
sbb
pushf
adc
cmp
or
or
ret
sahf
or
cmp
data16
xchg
push
sbb
aas
mov
aas
xor
or
push
jmp
pop
sahf
or
pusha
jo
xchg
orl
es
shl
popf
and
inc
push
fmuls
inc
das
mov
cmp
xorl
push
data16
mov
or
add
rclb
scas
pop
imul
test
adcb
jns
inc
xchg
scas
icebp
imul
push
leave
sti
mov
inc
mov
xor
push
ret
add
cld
push
mov
mov
aam
inc
icebp
jp
jns
or
ret
and
mov
stos
lret
or
sahf
and
sub
cmp
out
enter
pushf
jnp
mov
add
into
leave
jno
push
sub
xchg
lret
sar
mov
jbe
loope
fcoms
fsubr
out
aam
aaa
or
hlt
jae
jo
loop
sti
aas
jge
cwtl
cmp
mov
push
in
pop
clc
shr
dec
shll
or
lret
call
pop
adc
es
add
jo
and
ret
lcall
cmp
lahf
inc
cmp
ja
sub
sub
in
sahf
mov
add
sub
imul
into
xchg
fstl
into
push
test
sub
inc
gs
hlt
clc
add
fisttpl
js
xlat
cs
sbb
xlat
in
xchg
pop
xchg
cmp
or
dec
mov
xchg
and
inc
test
or
jo
divb
inc
aam
mov
pop
mov
lret
jo
xchg
test
lea
aas
out
pop
cmp
test
popf
lods
adc
andb
fs
mov
daa
int3
cld
shlb
or
in
adcl
fs
add
je
lock
jle
inc
lock
mov
in
lods
adc
jo
dec
lea
jno
ds
je
pop
loopne
loopne
pop
es
rcl
aad
and
cltd
shrb
pop
es
pop
leave
loopne
cmp
rolb
in
rcl
jne
inc
outsb
xor
sub
movsb
jb
jl
inc
aam
add
push
das
mov
pop
mov
jne
mov
dec
lcall
outsl
or
jo,pn
xchg
call
loopne
outsl
mov
das
or
xor
cwtl
xchg
inc
push
add
es
shlb
nop
loopne
test
sub
mov
lahf
dec
or
sbbl
hlt
inc
add
lret
xchg
in
in
aam
mov
push
in
mov
lea
movsb
stos
in
adc
cld
imull
aad
fmuls
fcoms
scas
mov
icebp
lods
lock
add
ljmp
and
xchg
fdivrl
xchg
jbe
js
call
xor
mov
sbb
push
mov
out
pop
inc
fsubl
pop
and
and
adc
mov
fisubl
es
sbb
mov
mov
jl
inc
pop
insb
out
repnz
or
mov
or
scas
adc
bound
add
sub
add
jge
shll
outsb
add
mov
and
divl
std
sub
push
addr16
push
imul
adc
jo
jno
fwait
ret
push
int
mov
mov
jp
cmc
push
add
in
xchg
dec
sub
es
loopne
mov
or
in
mov
loop
ret
or
mov
pushf
dec
adc
mov
fisubrl
or
fcoms
shll
add
popa
shlb
add
mov
inc
or
adc
add
sbb
in
pop
in
mov
aam
mov
fcoml
xchg
pop
clc
adc
or
adc
adc
push
testb
sub
jno
xor
mov
push
pop
pop
xchg
cld
xor
in
rol
mov
push
push
test
jae
gs
rclb
xchg
enter
insb
iret
cmpl
dec
repnz
jb
jbe
sti
jno
mov
mov
jge
mov
cmp
cmp
mov
push
jle
cli
lea
rcr
mov
dec
and
sbb
sbb
push
sbb
loope
pop
mov
out
mov
sbb
dec
lods
jmp
std
lock
adc
adc
add
outsl
cmp
test
push
rcl
xor
xor
and
or
jbe
inc
clc
add
lea
push
call
scas
dec
aam
call
shlb
in
in
xchg
push
sub
add
ficoml
rolb
lea
jl
pop
mov
cwtl
aaa
in
sub
or
jnp
jb
syscall
leave
cmp
mov
cs
pushf
pushf
test
movl
faddl
sub
je
xchg
lcall
adc
mov
loope
shrl
and
gs
add
nop
cmc
inc
mull
sub
cmp
leave
dec
repz
rep
idivb
fistl
lea
les
cmc
rorb
mov
outsb
push
xor
push
idivb
stos
or
mov
das
mov
por
xchg
ds
cmp
sbb
leave
test
lea
inc
lds
pop
jne
push
mov
inc
xchg
int3
inc
test
dec
repz
or
int3
movsl
or
jae
adc
or
adc
dec
jne
sub
les
cmp
rclb
mov
push
daa
into
or
sub
pop
bound
scas
pop
clc
and
cmp
testb
xchg
test
mov
out
mov
ja
push
ret
sahf
insl
inc
popa
xor
jge
xor
lret
adc
repz
mov
cmp
xor
adc
or
mov
and
mov
add
ret
imul
int3
pusha
imul
imul
ss
sub
clts
imul
and
dec
lret
jge
dec
jmp
movl
sbb
sub
adc
cmp
add
js
sarl
adc
inc
fmull
jg
hlt
add
scas
add
or
cmp
add
mov
fidivrl
loop
jge
in
insl
ja
cld
inc
jl
dec
push
sbbb
sbb
outsl
sub
jnp
cmp
sbb
xchg
mov
movsl
add
lods
sbb
js
cmp
sub
cs
adcb
je
jnp
ret
inc
loopne,pn
das
sub
test
cwtl
rolb
or
inc
mov
outsl
cmpsl
xchg
jno
std
xor
cmp
dec
popa
jns
add
and
cmp
faddl
or
arpl
push
pop
jmp
subl
xor
pop
jmp
cmpsl
out
dec
ret
lods
inc
minps
ret
lea
adc
hlt
add
addr16
aaa
daa
jbe
jne
dec
adc
loop
test
push
test
enter
rorb
call
pop
lds
mov
movlps
cli
or
or
test
shl
cmp
jno
or
and
scas
sahf
push
clc
mov
push
push
inc
sbb
sbb
inc
sbb
pop
sti
xchg
sarl
mov
mov
cmp
cmp
fldenv
xor
in
cmp
add
push
sub
mov
shr
push
jle
js
fidivl
cmp
jbe
inc
adc
adc
push
movsl
inc
xor
mov
bsf
and
es
test
lret
cmp
jb
push
lods
popa
test
and
xlat
cmp
cld
dec
subb
cld
push
or
jmp
int3
movsl
push
mov
clc
xchg
pop
and
and
jae
insl
inc
fcoms
data16
lretw
lds
xor
mov
cmp
cli
adc
dec
icebp
xor
movsl
imul
sub
and
xor
pop
js
loopne
pop
mov
or
insb
xchg
sbb
lock
sub
rol
push
std
lea
loopne
clc
jmp
sub
insb
cli
gs
std
andl
jl
lock
jl
addr16
jbe
sbb
pop
scas
cwtl
lods
daa
out
sbb
aad
sub
cmp
add
jl
sarb
shlb
loopne
or
or
addb
fnstsw
mov
and
call
inc
sub
popf
rcrb
sbb
orl
push
push
addb
xor
sub
adc
sarl
xorb
aad
pop
push
mov
aad
enter
mov
subl
fstps
push
call
push
add
cmpsl
psubsb
enter
add
dec
sbb
outsb
pop
fidivrs
in
adcb
and
lock
cmpsb
iret
loopne
sbb
cmp
sbb
sub
mov
xchg
test
aas
sbb
and
ror
push
fdivp
rclb
in
cld
mov
addr16
mov
inc
sbb
cmp
pop
loopne
adc
cld
or
data16
xchg
jp
push
popf
mov
jp
cmp
out
dec
adc
int
out
out
lods
mov
scas
idiv
inc
rorb
cmpl
ficompl
sub
push
sbb
fwait
push
sbb
aas
mov
mov
or
mov
arpl
fnstenv
add
and
jae
insl
add
insl
cmpsl
sarl
sub
or
and
je
or
or
addb
in
lds
clc
mov
aaa
insb
cmp
rolb
push
add
js
push
add
sub
add
lock
push
ja
add
out
xchg
xchg
adcl
jbe
pop
mov
pop
lock
fsubp
sub
add
mov
jle
jne
adc
pop
add
sbb
inc
dec
ret
or
js
cli
jecxz
je
loopne
jl
pop
adc
or
mov
add
roll
jecxz
sbb
cld
or
adcl
add
and
rol
loop
adc
xchg
inc
out
int
jmp
or
aas
jb
cmpsl
inc
nop
push
in
add
sbb
or
jnp
pop
and
mov
out
rep
mov
pop
inc
adc
pusha
inc
rol
shlb
sti
mov
jbe
and
push
sub
test
add
insl
negl
mov
add
stos
ljmp
cs
sub
xchg
mov
fadds
pusha
sub
aas
or
jo
push
or
arpl
and
mov
sub
sbb
lcall
push
imul
aam
cmp
pop
insb
mov
inc
mov
clc
fisubl
mov
mov
jo
pop
mov
inc
inc
ret
out
sbb
adc
pushf
and
sar
pop
cmp
scas
in
mov
sub
out
push
lods
pusha
pop
fistpl
test
cmp
sti
mov
bound
andb
pusha
mov
sbb
add
arpl
jl
jne
mov
inc
sbb
ret
xchg
cmp
cs
fwait
in
sahf
decl
sbb
cld
mov
add
rol
imul
cmp
ss
fmuls
cltd
adc
adcl
lock
lahf
or
cmp
add
cld
push
mov
jmp
cs
rcl
in
nop
cmc
jecxz
push
lock
dec
rcrb
adc
loope
pop
or
lods
push
enter
pop
mov
jge
sti
popa
movl
arpl
addl
dec
xchg
inc
lret
in
adc
fucomp
lret
mov
int
test
inc
mov
cmp
inc
stc
ss
sbb
sub
mov
push
xchg
mov
mov
dec
clc
notl
push
cmp
lret
or
lea
xor
mov
xor
cmp
or
xor
cmp
mov
mov
adc
sbb
adc
add
in
mov
add
sub
dec
mov
lds
jo
inc
xchg
mov
dec
mov
push
mov
xchg
push
pop
add
xor
adc
cld
sbb
sbb
cld
cld
push
mov
mov
mov
adc
leave
aam
jb
adcb
fwait
lret
adc
in
adc
and
mov
or
insb
cmpsb
or
sub
adc
pop
pop
push
pushf
push
sub
adc
adc
mov
jnp
je
mov
ret
lea
mov
or
aas
lock
fsubrs
xchg
cmpsb
cmp
ret
sub
shlb
iret
out
or
je
adc
je
add
jmp
mov
xor
sbb
nop
lods
testl
fbld
popa
test
cmp
aaa
dec
movsl
fs
shrl
sbb
sbb
and
cmpsl
inc
fs
ficomps
jmp
jp
dec
pop
gs
sbb
xchg
aad
or
lcall
mov
mov
add
sbb
inc
jge
mov
and
and
or
es
or
shlb
or
aam
mov
or
ret
movsl
sbb
sbb
sbb
or
hlt
ljmp
sub
xchg
jecxz
xchg
xchg
dec
pusha
mov
adc
adc
je
mov
jge
adc
addl
lret
xchg
xchg
fadds
sub
sub
mov
nop
aas
cmp
scas
xchg
imul
sbb
popa
push
sbb
lods
mov
mov
adc
roll
cmp
jno
add
jp
jns
dec
and
jge
sar
mov
pop
imul
mov
adc
out
aaa
imul
and
movl
mov
dec
test
mov
add
lahf
inc
add
fadds
jecxz
stc
mov
add
sub
sbb
xor
or
pop
dec
dec
ljmp
mov
or
repnz
test
and
mov
adc
pop
adc
test
mov
or
dec
adc
push
mov
add
aas
ss
sub
adc
movsl
int3
inc
dec
sbb
call
xor
sahf
pop
add
mov
adc
test
or
lods
pop
push
fsubrs
xor
jmp
je
test
test
sarl
inc
mov
fcoml
ljmp
adc
adc
movb
sub
adc
inc
cld
push
cmpsl
mov
outsl
inc
or
xor
shrb
mov
mov
or
and
pop
negl
lea
sub
repz
movsb
outsb
or
aad
inc
add
je
cmp
inc
stos
sub
push
cmpsl
shrb
cmp
or
lahf
jns
inc
rcrb
andl
add
add
cld
adc
or
push
filds
test
in
dec
sbb
and
add
faddl
pop
scas
sub
or
push
or
dec
cmp
fwait
cmpsb
push
dec
or
insl
sub
clc
push
jne
adc
add
in
and
pusha
and
sbbl
or
and
cs
and
lret
sbb
hlt
cmp
sbb
add
add
adc
xlat
lcall
cmp
jno
or
pop
jno
or
out
arpl
adc
adc
dec
push
sub
jne
movsl
cwtl
cs
jp
insb
iret
popa
cmp
pop
lods
std
imul
shrb
and
roll
jae
sbb
sbb
test
sbb
or
mov
dec
pop
test
in
xor
or
and
and
rclb
add
cld
inc
addr16
test
adc
hlt
out
sub
jmp
cmp
fisttpl
push
jmp
push
andb
or
cld
jns
pop
xor
inc
js
imul
dec
inc
or
cmp
test
pusha
sbb
cmp
push
shlb
das
adc
mov
cmp
mov
test
or
or
or
sbb
inc
push
cmpl
adc
add
dec
add
ja
mov
addb
into
add
cmp
and
mov
xchg
aam
push
cmp
add
out
xchg
mov
jl
push
dec
mov
dec
adc
inc
mov
cli
out
pop
test
cmpb
je
or
or
adc
xor
and
push
or
addl
iret
cmpsl
sbb
and
or
push
jge
shll
push
scas
scas
shlb
fsubrs
mov
je
pop
ja
subb
repz
inc
mov
fmull
mov
pop
sub
mov
mov
inc
jecxz
loop
add
adc
cmp
jne
xchg
jle
dec
leave
enter
in
jle
scas
push
cmp
shr
loope
pop
sahf
in
inc
stc
sub
inc
shrb
xchg
fiadds
cmp
xchg
sahf
bound
lods
lahf
in
inc
inc
ret
mov
enter
mov
iret
push
into
fwait
xchg
and
gs
jbe
xor
jl
je
enter
adc
andl
inc
or
pop
and
push
ljmp
sbb
rclb
arpl
push
jnp
cwtl
add
adc
cmc
js
adc
push
stos
sbb
rolb
sbb
ja
mov
push
adc
cmp
pop
or
mov
mov
mov
mov
aam
push
inc
mov
out
push
add
add
pop
rcrl
enter
add
push
pop
pop
sub
jl
or
jno
xlat
mov
pop
test
je
cmp
jne
dec
popa
shrb
xchg
ja
pop
mov
mov
jno
push
pop
push
mov
cmp
inc
aaa
fimuls
xchg
xchg
dec
cmp
and
jbe
in
push
sub
popl
add
mov
jbe
xchg
cmp
or
add
sbb
loope
inc
adc
add
call
pop
xor
inc
mov
cmpsb
xor
sbb
bswap
push
mov
jmp
test
xor
rorb
fnstenv
hlt
nop
jmp
push
push
add
stos
icebp
push
push
dec
jne
inc
add
xchg
je
or
std
mov
sbb
mov
sbb
xor
aam
cltd
adc
cmp
loope
push
sbb
fcmovnbe
or
dec
shlb
fnstsw
add
lock
inc
insl
xchg
outsb
pushf
xchg
clc
push
andl
popf
or
shr
adc
add
mov
dec
loop
mov
inc
or
ret
xchg
jmp
or
mov
add
adc
dec
add
cmp
shr
ss
and
test
or
inc
adc
and
stos
lret
sub
shr
adc
popa
pop
adc
inc
aaa
pop
mov
cld
and
lret
mov
jno
cmp
or
adc
adc
jnp
mov
jl
mov
dec
jae
inc
inc
add
stc
cmp
push
add
or
push
and
add
stos
push
call
inc
adc
push
loopne
ret
in
or
lock
cwtl
xchg
dec
sti
movb
shl
hlt
sub
sub
pop
mov
adc
sub
adc
sub
fbld
dec
pop
inc
in
adc
dec
add
shlb
sahf
sub
mov
ret
add
add
sub
dec
popa
sub
jno
jl
dec
add
mov
jno
xorl
mov
data16
jmp
fsub
mov
stos
dec
and
or
and
mov
jge
hlt
dec
sbb
push
push
jb
push
das
shlb
lods
out
sbb
aas
jmp
xchg
pop
sub
orl
xchg
pop
dec
mov
adc
or
xchg
cmp
lea
cmp
mov
mov
or
push
mov
mov
jmp
cwtl
loopne
cmpsb
adc
js
hlt
rcll
inc
sbb
inc
shll
orl
test
adc
mov
jmp
pusha
pop
and
call
jge
icebp
or
push
rcll
jne
sti
adc
sahf
or
mov
pop
xorb
or
inc
add
movsb
test
jl
add
inc
aad
add
mov
or
jge
push
pop
cmpsb
in
or
xchg
pop
stos
add
add
inc
imul
lcall
ss
sahf
inc
call
inc
sti
out
mov
jle
push
inc
fstp
jne
fmull
std
inc
mov
pop
lock
fcompl
test
jne
je
inc
push
in
addr16
or
lahf
push
pusha
daa
push
iret
pop
push
jecxz
sbb
mov
jo
dec
fcompl
dec
add
ss
xorb
gs
or
xchg
pop
xorb
sbb
or
pop
mov
pop
lret
or
mov
add
push
jo
adc
and
adc
movsb
inc
add
lods
aas
and
jnp
cmpsl
sbb
fidivrl
icebp
fldcw
or
adc
movl
or
xor
inc
sub
aad
push
push
xor
jne
adc
add
adc
popf
loop
jp
call
and
or
subb
and
sarl
mov
xorb
inc
push
xchg
aad
jb
jno
adc
sub
mov
rcr
inc
add
sbb
clts
cmp
mov
sbb
fildll
in
sbb
popa
cmp
test
xchg
pop
sub
sbb
les
and
adc
daa
mov
js
push
cmp
add
setg
xor
adc
enter
push
sub
pop
cmp
mov
addr16
lahf
push
mov
sub
sbb
sbb
sahf
cmp
lret
fmul
mov
mov
and
rorb
ss
lea
js
inc
add
das
sbb
fisubl
scas
sbb
ficompl
rolb
ficoms
fisubs
lods
pop
add
or
jb
xor
fbld
push
jecxz
mov
lods
or
and
pop
sub
clc
fs
cltd
mov
or
cmp
add
mov
data16
sub
mov
arpl
or
add
adc
inc
fistpll
adc
mov
mov
in
mov
push
fistl
js
mov
fbld
sub
mov
sub
adc
data16
jne
mov
dec
lods
jne
xor
adc
mov
or
andb
push
es
jg
push
aad
pop
in
rclb
or
mov
clc
rorl
mov
sbb
xor
mov
or
mov
or
cmp
cmp
add
or
inc
imul
iret
mov
xor
cmp
sub
push
ret
xor
enter
and
adc
test
dec
cld
dec
es
notb
sub
int3
setl
mov
daa
dec
jmp
cmpsb
mov
mov
out
jo
jl
cmp
scas
dec
stos
jmp
adc
xchg
push
and
les
jmp
inc
incb
jg
mov
mov
inc
lea
push
inc
adc
fmuls
jmp
mov
data16
aaa
mov
jns
loope
loope
sub
dec
out
into
and
mov
dec
pop
dec
mov
adc
inc
inc
xchg
or
or
sub
push
stos
cmp
push
lahf
push
xchg
scas
or
adc
out
or
inc
jmp
adc
or
cmpsl
add
sub
into
repz
mov
cmp
sub
sbb
jns
dec
andl
mov
pop
or
es
xchg
push
cmpsl
inc
push
adcb
adcb
pop
add
push
push
cmp
and
pusha
aam
imul
add
les
pusha
or
mov
add
push
adc
add
sbb
mov
lods
mov
iret
sub
push
es
add
enter
inc
adc
pop
cwtl
addb
mov
les
nop
and
daa
sahf
cltd
test
mov
sbb
js
jne
dec
mov
pop
flds
ret
mov
pop
xor
adc
imul
cmc
sub
and
enter
cmp
mov
mov
ret
mov
cmp
inc
xor
sbb
fcoml
xchg
call
or
pop
push
pop
addr16
add
orb
lret
loopne
sub
loopne
rclb
mov
sti
sahf
xor
imul
repz
push
adc
mov
jmp
push
sbb
sbb
xor
aam
arpl
push
cli
inc
cmp
orb
fadds
ffreep
dec
jl
xlat
fisttps
ret
pusha
xorl
test
inc
fcomp
sub
xorl
test
bound
add
cmp
dec
xchg
sub
xor
ret
orb
rclb
mov
sbb
cmpsl
dec
pop
enter
jg
or
mov
mov
daa
mov
mov
in
les
pop
xchg
push
sbb
sub
xor
insl
dec
jle
in
ret
mov
push
or
sbb
in
add
pop
push
push
inc
testl
cmp
add
cld
pop
pusha
jbe
mov
adc
xchg
lret
daa
mov
inc
xchg
fimuls
mov
cmp
lea
adc
adc
out
push
mov
jg
maskmovq
notl
or
push
cmp
inc
jmp
outsl
or
dec
adc
add
pop
ret
test
test
jno
mov
mov
cwtl
test
mov
sbb
idivl
dec
mov
inc
pop
fldcw
scas
pop
into
and
and
andl
loop
aaa
inc
stc
xchg
or
pop
adc
movsb
mov
loopne
and
sbb
xchg
push
cmp
sysret
lea
popf
pop
inc
inc
add
test
nop
adc
movsl
push
mov
lds
and
int
pop
or
push
je
push
inc
mov
add
sbb
sub
inc
mov
push
inc
daa
sub
in
jmp
cmpsl
test
and
dec
movsb
push
mov
sbb
push
sbb
push
dec
pop
test
mov
xor
subb
nop
xor
pop
fs
or
inc
add
enter
nop
call
popa
mov
adc
sbb
sbb
or
movsl
orb
loopne
leave
push
rclb
loope
rcr
sub
mov
jno
pop
cmp
ret
mov
and
xchg
stos
mov
adc
adc
dec
imul
ret
hlt
sub
and
ror
or
stc
ljmp
call
lds
cmp
cmp
or
xor
xor
mov
mov
sub
mov
ret
aas
xchg
rcrl
popa
sbb
push
loope
mov
in
dec
mov
rcr
jge
push
mov
adc
pop
add
ss
cli
jp
mov
mov
sub
pop
xchg
or
lea
sub
lret
jno
out
or
add
int
movsb
inc
fs
mov
mov
test
mov
in
xchg
inc
jne
sub
xor
mov
inc
icebp
out
xchg
mov
inc
fstp
adc
repz
inc
dec
adc
int3
dec
sbb
test
js
icebp
cmp
mov
ss
cmp
jno
jl
xor
in
outsl
pop
icebp
hlt
push
xor
push
pop
loopne
movsb
xchg
add
mov
dec
mov
or
lar
mov
out
adc
xor
fwait
andl
daa
jp
adc
icebp
inc
pop
ret
fstl
add
shll
or
push
bound
cwtl
pop
mov
cmp
push
add
pop
or
cmp
jg
nop
push
jl
xchg
jmp
or
leave
xor
rorb
xchg
addr16
mov
push
loope
add
jne
stc
mov
or
or
ret
add
sahf
push
sbb
enter
test
ds
fsubrl
rclb
hlt
clc
in
xorb
inc
jge
mov
cs
jle
and
push
add
aad
inc
pop
and
pop
je
out
cmp
inc
push
pop
cmp
sub
adc
sub
sbb
mov
sub
pop
data16
adc
push
adc
dec
dec
inc
mov
sahf
int
nop
and
jmp
sbb
loopne
mov
adc
jo
sub
fsubrl
pop
icebp
push
mov
or
in
or
insl
icebp
ret
adc
out
jmp
inc
stos
fistps
adc
add
and
push
mov
je
cmp
andb
or
movb
ret
clc
dec
add
and
xchg
pop
test
addr16
mov
jnp
add
test
inc
jne
dec
stos
and
bnd
or
popf
sti
push
adc
loop
push
addr16
sub
jb
inc
jge
mov
je
jb
dec
lret
shll
int
jno
push
cmp
xor
pop
jecxz
and
lods
cmp
inc
push
add
cmp
invd
pop
fidivs
sbb
aam
lock
pop
es
lret
ret
xor
push
negl
clc
clc
das
aam
arpl
aad
or
xor
lods
inc
adc
add
fadds
pusha
jne
jbe
ss
faddl
xor
xor
addb
cmp
daa
cmp
inc
test
jnp
test
lea
adc
mov
pusha
cmp
inc
stos
sub
push
icebp
out
ja
sub
cmp
ja
rorb
js
out
fstl
sbb
aam
jmp
dec
mov
add
adc
aam
inc
sbb
push
jae
out
fildll
mov
add
testl
xchg
out
movb
add
les
push
jl
cmp
shll
or
rcrl
adc
pop
jg
test
mov
fcomp
fcoms
es
fmul
xchg
fcoms
pop
mov
or
movsl
jns
jbe
dec
add
incl
imul
lret
nop
nop
push
scas
xlat
pop
cmpsl
push
dec
cmp
pop
jl
ror
rorl
push
pop
xchg
rol
inc
mov
mov
xlat
inc
mov
cmp
or
mov
or
sub
lahf
or
daa
jne
pop
add
jge
mov
std
xchg
cld
push
es
cld
jne
ret
pop
xchg
stos
or
inc
or
and
std
rol
xchg
out
ja
cmpsb
icebp
std
and
nop
inc
in
xchg
xor
adc
inc
sbb
mov
adc
or
push
sub
adc
in
jo
mov
add
mov
arpl
cmpl
cmp
nop
mov
push
jge
cld
sub
sbb
adc
and
jns
addr16
cli
repnz
adc
cli
gs
test
cli
pop
hlt
fstpl
mov
mov
xchg
out
cld
xlat
les
push
outsl
movsb
ret
cld
inc
mov
pop
jle
fnstcw
dec
cmp
jg
repnz
lods
fisubl
mov
cmp
jg
cld
std
mov
jmp
or
push
cmpsl
push
dec
cmp
adc
xor
and
push
call
inc
xchg
pop
das
inc
xchg
jmp
test
subl
pop
and
xchg
pop
pop
fbstp
in
outsl
mov
or
mov
mov
mov
in
pop
arpl
outsl
stc
sub
lea
xchg
push
jb
leave
xchg
or
popf
pop
add
mov
lahf
aad
lcall
fs
sub
ja
cmc
and
jg
sbb
sub
mov
popa
jp
xchg
and
and
adc
xchg
fsubs
loop
pop
dec
mov
mov
fildll
mov
std
shrl
and
fstpt
cs
mov
mov
or
lcall
push
push
dec
mov
test
or
or
sarb
jmp
jmp
or
inc
rcrl
adc
pop
push
out
icebp
adc
jne
or
mov
jmp
lret
or
jp
and
faddl
jb
mov
or
sub
dec
dec
or
gs
call
popa
jp
test
cmp
sbb
or
inc
pop
faddl
inc
leave
xchg
add
inc
push
and
faddl
push
xor
mov
in
fmull
imul
mov
dec
xor
mov
adc
cmp
int3
mov
mov
cmp
popa
test
inc
repz
sub
xor
shlb
dec
test
das
and
xchg
adc
mov
xchg
add
outsl
out
es
and
or
sbb
rol
out
cmp
and
loopne
in
jne
pop
add
lret
mov
aas
fiadds
shrl
aad
ficoms
lods
mov
clc
je
mov
sub
fimull
push
cmp
jae
sub
or
mov
add
jb
jle
jmp
sub
rolb
xor
lret
loopne
call
xchg
pop
aam
jne
fildll
cltd
rol
mov
add
add
arpl
int
add
loop
add
pop
push
cmp
into
push
lock
mov
out
xchg
inc
jnp
fnstcw
mov
xor
mov
shrb
and
xchg
or
loop
jmp
dec
fnsave
ret
clc
sbb
mov
or
xor
dec
lahf
das
push
rolb
push
push
sub
insb
leave
pop
ret
dec
jo
mov
inc
ret
dec
call
adc
adc
outsb
inc
in
adc
dec
jns
jl
and
push
addr16
clc
mov
push
xchg
add
mov
lods
sub
pusha
jmp
add
dec
or
lret
lock
jae
nop
push
movl
inc
dec
cld
mov
cmpl
xchg
rcrb
sub
shrl
or
pop
xorl
sub
xchg
dec
inc
pop
test
mov
xchg
sub
mov
push
mov
mov
and
bswap
mov
push
push
rcr
jl
jg
adc
pop
jmp
pop
mov
lock
or
add
mov
les
jne
inc
xchg
xor
loop
sbb
and
mov
pop
add
sbb
daa
ds
pusha
cmc
addb
add
pop
in
adc
loope
mov
aas
nop
sbb
jecxz
adc
push
adc
je
xorb
insb
jg
stos
test
xchg
sarl
and
xor
jle
jmp
xor
and
fiadds
filds
xor
sahf
pop
sub
je
sbbl
or
jbe
lret
push
inc
outsl
std
test
movsb
popf
lods
jmp
jg
dec
cs
icebp
lcall
mov
pop
imul
jmp
push
aad
mov
or
cmp
cmp
adc
sahf
add
adcb
ret
sbb
cmp
pusha
and
adc
jo
add
lcall
pop
test
adc
sub
or
adc
rol
mov
add
inc
adc
adc
pop
push
jle
sbb
mov
push
nop
gs
sbb
xchg
add
inc
clc
sbb
fldenv
gs
mov
stos
pop
sbb
movl
push
jns
sub
mov
add
outsl
and
inc
jno
push
dec
das
je
shll
mov
xchg
mov
ljmp
mov
lods
xor
notb
adc
mov
in
jo
test
jecxz
dec
xchg
mov
in
pop
or
adc
out
mov
das
loop
imul
dec
dec
jecxz
in
cli
mov
out
lret
pop
cmp
or
or
leave
cmp
popf
ljmp
iret
xor
mov
sbb
mov
or
fisttpl
xor
push
out
in
scas
adc
or
rolb
inc
adc
and
call
sub
cmp
leave
dec
shl
pushf
or
mov
mov
sti
xchg
testl
loopne
push
movsb
adc
inc
sbb
and
jo
mov
add
pop
ss
cmp
and
add
imul
pop
xor
outsb
mov
rcrl
push
dec
pop
and
sbb
push
cmc
mov
inc
and
mov
in
je
xor
popa
xor
jmp
mov
je
adc
jecxz
sub
xor
fisttpl
je
push
stos
fxch
cmpsl
push
push
sbb
outsb
insl
inc
aam
std
jmp
aad
lahf
mov
pop
test
push
ljmp
cmpl
das
lcall
hlt
call
inc
xchg
add
mov
lahf
dec
sbb
jbe
push
or
mov
rcrb
lret
subl
or
aam
inc
mov
in
sar
popf
dec
add
and
xor
push
push
sub
loopnew
and
pusha
lock
mov
call
adc
sahf
test
pop
fimull
inc
outsl
jmp
pusha
movsl
cltd
loope
push
mov
test
popa
or
call
pop
xchg
pop
xor
xlat
push
bound
dec
fadds
lcall
push
sbb
xor
push
cmp
gs
call
lahf
xor
inc
sub
or
fnstsw
aas
insb
push
xorb
lcall
push
mov
xchg
in
outsb
sbb
and
or
sbb
mov
and
jo
loop
and
je
fmull
push
inc
add
ret
sti
xchg
pop
dec
movl
and
test
adc
add
mov
mov
jge
popa
lods
mov
in
pop
scas
cwtl
out
and
movsb
sbb
xchg
orb
mov
sti
pushf
or
mov
rclb
lods
jbe
xchg
das
mov
mov
lds
and
inc
dec
adc
adc
adc
cmc
bound
add
test
mov
adc
mov
xor
add
and
pushl
xchg
mov
jne
cmpsl
je
test
test
add
cli
test
xor
shrb
test
adc
mov
jmp
add
in
cmpsl
mov
int3
add
add
lods
mov
ja
imul
and
cmp
inc
add
pop
mov
sar
test
push
ss
in
dec
insb
fcmovu
daa
ret
xchg
xchg
push
lock
mov
cld
add
lods
adc
mov
lods
orb
mov
mov
rorb
mov
push
cmp
adc
dec
xchg
and
and
fildl
mov
rolb
aas
bound
lea
mov
scas
test
inc
jge
adc
or
sbb
mov
test
and
add
fstpt
jae
cmp
adc
mov
lret
call
movsl
sub
or
sbb
out
dec
dec
fcompl
mov
jg
adc
repnz
adc
inc
and
arpl
jne
push
pop
fisubrl
xchg
or
popa
insb
imul
scas
or
mov
jae
std
aaa
test
mov
adc
js
sub
pop
adc
inc
jne
and
sbb
loope
stos
call
jl
adcl
imul
addl
lods
orl
daa
xor
or
daa
push
and
mov
cmp
inc
icebp
in
cwtl
jecxz
repz
lcall
lock
dec
push
xchg
sbb
xor
push
cmp
sub
loopne
add
sub
test
xchg
push
xor
dec
hlt
pop
xchg
js
loope
lock
push
es
xchg
cmpsl
xchg
test
daa
pop
and
pop
add
push
xor
xchg
out
imul
push
sub
aam
jecxz
dec
pop
test
aas
outsl
cld
sbb
cld
rcrl
adc
jg
adc
mov
aad
lfs
bound
inc
or
aad
andb
sarl
leave
or
pop
push
cmp
lret
add
sub
push
testl
push
fadds
clc
rclb
add
mov
or
add
add
cwtd
mov
xchg
repz
mov
mov
cs
shll
sbbb
jns
out
or
adc
sub
loopne
pushf
call
ret
pop
jecxz
mov
or
sub
lea
shlb
mov
fstpt
inc
mov
div
mov
jp
push
das
addb
pusha
fbstp
std
rolb
aam
pop
loope
neg
and
sbb
jle
ss
jbe
push
add
or
push
out
or
mov
adc
xor
ja
add
inc
jns
lock
mov
xor
and
pop
ljmp
cmp
fucomip
test
or
xor
mov
push
xor
rcll
push
xchg
negl
mov
xchg
xor
imul
sbb
orb
jle
fcmovbe
dec
test
adc
rcrl
xchg
xor
lods
in
or
push
push
out
mov
push
dec
or
cmpb
ret
ss
aas
adc
js
adc
ss
or
or
sbb
stc
inc
dec
je
or
insl
add
je
pminsw
pop
cs
pop
cmp
gs
inc
mov
and
nop
or
lock
push
test
dec
mov
mov
mov
xchg
insl
in
fadd
dec
sbb
aad
jmp
hlt
adc
pop
xchg
push
outsl
or
jo
negl
mov
mov
xchg
mov
pop
jmp
mov
testl
in
adc
xchg
mov
or
adc
pop
out
roll
or
add
or
insl
sub
or
subl
jne
push
out
sbb
scas
dec
fsub
cmc
mov
xor
out
dec
adc
push
add
add
xor
cli
dec
arpl
mov
dec
jne
mov
sub
xchg
lcall
jle
xchg
inc
or
add
cmp
sbbl
mov
fcomp
sbb
cmp
sub
push
sub
loop
jmp
adc
or
or
hlt
ret
dec
xor
push
push
sti
shr
das
adc
fcoml
inc
pop
sbb
xchg
cmp
ror
cmp
xchg
inc
push
dec
pop
filds
adc
ss
fwait
loopne
adc
xor
push
adc
xchg
jnp
xor
loopne
push
or
test
call
xorl
cmp
and
add
xor
jmp
andl
lret
push
xchg
cld
xor
sbb
lcall
push
lcall
push
lea
xchg
daa
icebp
add
pop
push
push
aam
stc
jbe
push
add
adc
pop
clc
xchg
adc
in
mov
jo
stos
adc
xchg
adc
cld
inc
sub
sub
dec
js
aas
mov
sbb
lds
cmp
shrb
clc
pop
add
or
cmc
ss
push
ja
mov
rol
rcrl
or
roll
mov
mov
push
or
add
sub
sbb
cmp
add
xlat
pop
and
xor
pop
xor
adc
test
push
pop
pop
mov
dec
mov
xlat
xchg
out
sbbl
hlt
push
mov
lea
insb
push
push
jb
mull
push
clc
push
mov
xor
adc
jbe
dec
push
cs
pusha
sbb
aaa
mov
mull
in
enter
jg
sub
popa
lea
fcompl
fucomip
je
adc
cli
pusha
aad
dec
push
or
sbb
incl
pop
xchg
ljmp
out
jbe
sub
pop
mov
xchg
add
inc
push
push
dec
insl
adc
aaa
nop
cmp
xchg
or
and
push
mov
sub
insl
jb
gs
bound
mov
mov
cmp
rol
jnp
sbb
push
shll
sbb
adc
mov
insl
arpl
push
es
mov
adc
dec
mov
mov
add
sub
add
add
sub
nop
inc
push
addb
jo
repnz
lahf
push
leave
inc
xor
adc
add
and
mov
and
xor
pushl
and
test
and
mov
jl
sub
mov
orl
arpl
iret
pusha
scas
sbb
add
pusha
add
arpl
cmp
jae
or
jae
shld
mov
loopne
mov
xchg
ret
push
pushf
ret
enter
decl
push
and
or
les
pop
mov
push
sbb
fists
adc
pusha
and
add
add
jp
mov
or
std
icebp
add
xchg
in
cld
push
add
lea
mov
sahf
inc
outsl
push
xor
call
sbb
xchg
sbb
dec
pop
adc
mov
shr
outsb
xchg
call
add
outsb
push
inc
arpl
arpl
add
shrl
nop
aas
dec
es
aad
mov
add
int3
or
mov
mov
sbb
inc
pusha
sbb
fsts
sub
add
hlt
scas
into
shlb
addl
mov
push
sub
jb
lret
and
in
sbb
adc
nop
add
sbb
mov
lahf
jae
push
cmp
inc
push
push
and
and
push
fwait
repz
rcrb
mov
shll
dec
sub
sbb
fcomps
and
pop
out
ret
sbb
enter
repnz
inc
jo
negl
push
orb
push
add
dec
popf
rcrb
pop
sbb
sbb
sahf
imull
dec
or
push
xor
and
jne
out
adc
push
aaa
lods
ljmp
repz
lahf
enter
lock
sbb
in
into
pop
clc
sbb
nop
or
sub
push
nop
cmp
enter
sbb
mov
or
push
mov
test
int3
aam
sbb
pop
lahf
aas
add
nop
cmp
imul
push
sbb
adcb
rorb
or
cld
push
add
iret
pop
test
gs
clc
jle
dec
clc
inc
add
je
mov
repnz
sub
jl
and
sbb
mov
pop
or
loopne
inc
out
or
xchg
pop
test
cmp
inc
roll
mov
pusha
aaa
rolb
inc
hlt
or
cmp
pop
fcoml
hlt
jae
or
mov
lcall
cmp
and
jnp
gs
add
mov
adc
fisubrl
dec
out
rol
retw
dec
sbb
cmp
out
or
adc
sar
sahf
push
cltd
mov
icebp
mov
into
cmp
xchg
push
xchg
mov
pushf
aad
adc
pop
lea
repnz
cld
mov
cld
jb
mov
cld
jno
and
or
add
push
sbb
xor
lcall
cmp
jle
jne
xor
pop
xchg
mov
je
mov
jmp
popf
idivb
or
in
cmc
enter
sbb
sbb
bound
shlb
jae
jo
mov
add
sub
adc
lret
add
je
add
jnp
or
adc
jmp
insb
mov
outsl
push
push
cmc
or
shrl
add
add
pusha
mov
pop
pop
and
sbb
cmp
das
sbb
and
aad
fiaddl
sbb
inc
adc
out
add
or
sub
pop
adc
out
push
lret
inc
repnz
imul
movsb
add
stc
cmp
inc
adc
or
inc
push
popf
fincstp
jmp
and
jne
or
sub
dec
popf
sbb
mov
sbb
xor
sbb
sbb
push
xor
lret
ret
push
lods
cmpsb
dec
adc
xchg
push
orb
dec
cmp
mov
xor
ja
arpl
outsb
arpl
imul
mov
dec
pop
push
mov
pcmpgtd
lret
adc
push
data16
jne
sub
push
add
daa
sub
in
adc
add
cld
ret
sbb
lods
into
push
cmp
adc
inc
decl
shlb
loopne
lcall
xchg
adc
or
add
mov
jne
das
or
dec
xor
enter
cmpl
xchg
sub
push
jae
mov
rol
movsl
sub
int3
inc
sahf
jne
out
adc
daa
and
push
inc
ret
inc
pop
es
add
lahf
jge
sub
or
xor
sub
inc
daa
cs
cmp
clc
gs
stos
daa
cmp
mov
adc
pop
mov
aas
and
cmpl
sti
jl
mov
adc
je
sbb
add
jmp
adc
add
adc
mov
fldcw
or
adc
adc
push
jns
leave
jmp
iret
jmp
fsubr
daa
loop
mov
fcomps
dec
add
cld
js
arpl
aam
out
movsl
aam
test
rcll
test
and
inc
inc
push
imul
sarb
mov
fadds
or
inc
rol
sti
test
inc
or
inc
hlt
and
orb
mov
and
sbb
or
fdivs
loopne
rolb
in
cmp
rcrl
shr
mov
clc
rorl
imul
mov
push
sar
cmp
fs
nop
pusha
jg
push
mov
enter
cmp
enter
repnz
push
dec
in
xor
in
sbb
pop
dec
in
enter
daa
insl
loope
adc
mov
imul
std
cmpb
test
xchg
shll
xchg
leave
xchg
les
les
icebp
inc
xor
cmp
outsl
cmpl
movsl
dec
or
cmp
and
std
mov
pop
or
clc
pop
ds
jmp
rol
cmp
dec
mov
xchg
pop
mov
mov
sarl
push
mov
icebp
jo
test
aaa
dec
adcl
movsb
mov
shr
push
mov
and
cmp
jmp
pop
push
and
xor
add
add
fstl
movsl
jne
data16
sbb
fbstp
loop
push
xchg
mov
inc
lock
and
jg
pusha
popf
pusha
clc
and
or
je
outsl
adc
sbb
data16
ffreep
clc
pop
pop
dec
idiv
adc
pop
mov
or
jecxz
jp
inc
mov
dec
mov
adc
sub
andl
jl
test
add
testl
popa
xchg
cmp
or
leave
xor
mov
adc
das
mov
or
sbbb
dec
loope
or
sub
add
xor
test
add
add
pop
icebp
cld
cmpsb
xchg
outsb
rolb
and
sbb
cmpsl
adc
cmp
jg
sbb
adc
mov
adc
jp
push
pop
rolb
xorl
int
or
sbb
movups
outsb
adc
xor
cmpsl
mov
in
dec
enter
add
mov
in
push
add
mov
add
or
or
leave
add
loope
shll
mov
add
pop
xlat
push
fiaddl
jns
mov
jp
adc
lock
add
data16
addl
pop
lcall
lods
je
in
cmp
add
das
lock
jmp
sbb
rcrl
es
js
jmp
int
lret
xchg
lretw
scas
adc
add
xor
or
adc
add
or
xorb
in
data16
sbb
cmpsb
push
pop
pop
cltd
mov
ret
add
add
mov
pop
push
jns
dec
or
inc
mov
cmc
sbb
cli
shl
fisubrs
shlb
push
ret
loopne
and
cmp
and
cmpsl
push
cld
push
pop
jmp
or
jecxz
adc
push
outsl
mov
lock
add
aam
pop
pusha
dec
jl
lock
sbb
cmp
imul
and
sbb
push
addl
lock
sbb
and
imul
sbb
add
mov
cmp
xchg
dec
or
inc
mov
push
xchg
clc
in
js
imul
pop
sbb
push
lods
mov
xor
lods
fistpl
sbb
inc
mov
add
adc
mov
mov
pxor
lahf
cmpsb
test
movl
sub
inc
mov
aas
scas
mov
xchg
mov
adc
pop
mov
repz
mov
fsubs
rcll
ds
sub
pop
adc
pop
in
xor
call
push
mov
dec
out
mov
and
sbb
adc
icebp
fnstsw
xor
and
jmp
xchg
cs
jmp
jl
nop
jge
notb
mov
or
add
pop
pop
test
xor
push
dec
or
jg
insl
test
enter
arpl
xchg
rdmsr
faddl
imul
dec
add
in
xor
shlb
pop
nop
shlb
jo
pop
adc
push
add
xor
movsl
call
sub
inc
push
outsb
dec
or
sub
sti
xchg
stos
gs
jbe
push
add
jge
movsl
lods
dec
jae
mov
mov
dec
cmp
gs
aas
add
xorb
mov
rclb
in
push
inc
ret
ficoms
and
nop
pop
sbb
cmp
mov
jmp
aas
fimuls
jl
mov
cmpsl
inc
jecxz
sbb
fcmovne
xor
stc
sub
outsl
and
jo
push
adc
outsb
mov
mov
insl
dec
and
and
jg
or
dec
mov
movsl
ljmp
popa
std
hlt
loopne
fstps
add
out
sbbb
or
out
mov
lock
sub
and
adc
jmp
or
and
shlb
inc
fcmovne
cmp
xchg
pop
fimuls
sub
inc
roll
sub
enter
and
movl
lock
push
js
mov
dec
cmp
adc
dec
inc
ds
sub
ljmp
cmpb
cmpsb
mov
xor
sbb
push
and
cmp
lret
cli
sub
pop
stc
inc
hlt
push
jl
lods
into
mov
inc
leave
mov
pop
jg
jl
push
dec
and
pop
jge
pop
pop
jg
jg
xor
and
xchg
shlb
jno
inc
xchg
xlat
adc
adc
jmp
lods
dec
lea
xlat
mov
pop
out
ret
adc
mov
pop
add
cmp
stc
nop
cli
ljmp
pop
sbb
sbb
sub
ret
fidivrs
push
cmpsl
insl
aam
adcl
sub
add
outsb
add
adc
and
jle
ret
or
adc
dec
scas
dec
mov
lock
sbb
jp
shr
inc
cmp
xlat
outsb
pusha
cmp
push
cwtl
fsub
flds
lea
push
jb
je
and
lcall
data16
xchg
in
or
push
dec
repz
lock
pop
jb
sahf
adc
or
lcall
pshufw
daa
mov
push
in
pop
inc
andl
dec
ret
mov
mov
push
mull
mov
cmp
add
pop
push
mov
ficoml
rcrb
lods
fadds
lock
cmpsb
ret
sbb
in
sub
cmp
cmpl
inc
cmp
test
testl
adc
dec
sbb
or
and
fildl
inc
cmp
xchg
loopne
cmp
imul
mov
outsl
dec
xor
aas
rclb
cmc
jmp
cmp
roll
jo
mov
mov
add
cmpb
addb
sbb
mov
hlt
test
lods
sbb
xor
cmp
daa
fmull
cmp
jge
push
cmpsl
sti
movsl
push
sbb
std
pusha
mov
outsb
int3
or
and
fldl
jo
lret
arpl
mov
push
sbb
dec
xchg
aas
imul
cld
cmp
mov
push
cmp
addr16
inc
lret
fsubl
ja
mull
cmp
pop
and
rcrb
adc
xor
sbb
je
imul
imul
out
sub
xor
xor
out
imul
cmp
imul
out
dec
dec
dec
nop
out
imul
scas
push
dec
pop
or
nop
dec
pop
dec
imul
out
push
or
jo
out
imul
jl
and
inc
rcl
ds
mov
inc
cs
enter
lret
adc
xchg
test
inc
cwtl
sub
sub
xor
movsb
and
lods
xchg
sub
and
add
aas
add
jne
add
xchg
lods
xor
and
shrb
fs
leave
and
gs
or
nop
xor
nop
or
sbb
cmp
leave
nop
or
inc
dec
nop
or
nop
dec
push
leave
nop
or
push
pop
pop
or
nop
or
fs
insb
jo
nop
or
je
jl
mov
xchg
pop
imul
jno
daa
ja
dec
scas
in
nop
xchg
xchg
pop
leave
sbbb
mov
test
aas
mov
int3
and
testb
cwtl
pop
daa
pop
push
cmp
jge
push
clc
or
push
sahf
movsb
xor
clc
cmp
mov
mov
addl
xchg
jmp
xchg
ficompl
pop
sub
imul
lods
xor
mov
jo
dec
into
jge
je
test
pop
xlat
dec
inc
sbb
jmp
outsl
adc
or
popf
jno
mov
ss
test
add
nop
outsb
test
or
andl
les
and
mov
mov
jnp
jo
dec
add
mov
aaa
cmpl
shlb
add
cmpl
push
fsubrs
mov
add
int
adc
add
add
fisttpl
add
ja
fbld
iret
add
push
pop
aas
dec
xchg
ret
xor
in
xchg
and
jg
aas
fidivl
add
cmp
or
cmp
xor
aam
sub
or
dec
dec
lods
test
mov
or
lock
dec
push
enter
xor
xor
loope
pop
leave
aaa
addr16
lret
mov
sbb
sbb
or
shrb
in
add
je
pop
pusha
mov
js
std
inc
adc
mov
jl
movl
mov
xor
ss
mov
adc
dec
imul
or
fcoms
cmp
nop
out
sbb
dec
fs
and
and
push
jae
pop
fisubrl
cmp
add
test
dec
sbb
push
xor
dec
jae
push
sub
push
dec
jae
sub
test
das
push
stos
cmp
push
jno
jg
adc
cmpl
adc
je
shll
add
aad
ret
fbstp
lret
dec
xlat
data16
fisubrs
sbb
add
push
pushf
cltd
lods
call
mov
push
push
repnz
shrb
xor
push
inc
push
nop
ret
arpl
add
push
push
arpl
inc
xor
ror
aam
xor
jl
add
cmp
ss
inc
sub
and
inc
xchg
push
icebp
popf
push
adc
dec
loopne
or
sbb
popa
xor
cmp
fwait
mov
test
lods
leave
add
push
mov
push
js
dec
daa
or
rorb
mov
cmp
dec
lret
or
call
out
sub
fldt
dec
aam
and
test
cwtl
lods
sub
rcl
xor
add
inc
adcb
shlb
mov
mov
add
cmp
mov
loopne
test
push
fsubr
popl
fxch
pop
add
inc
fsubr
dec
lcall
in
pushf
out
js
jmp
lea
andb
adc
call
mov
aas
test
ret
sbb
and
sub
test
dec
mov
mov
mov
push
setl
dec
fidivrs
and
mov
xchg
inc
aam
ret
xor
and
cmp
dec
push
cmpsl
sbb
test
ret
sub
pop
in
aam
imul
lods
fsub
dec
movl
pop
mov
xor
aam
pop
shlb
fcomps
pop
push
and
dec
outsb
add
or
ja
or
inc
bts
jmp
mov
leave
call
inc
bt
add
aaa
jae
mov
enter
stc
adc
jg
or
lea
jmp
inc
popa
ja
and
sub
push
inc
or
pop
mov
fildll
pusha
push
inc
jnp
filds
mov
inc
pop
scas
cmpsl
mov
cld
dec
push
adc
add
pop
mov
shld
sti
inc
adc
pop
push
push
ds
ss
mov
push
lret
adc
push
push
insb
dec
nop
sbb
lret
and
in
scas
xchg
or
push
fwait
adc
sbb
ja
mov
or
mov
cltd
pusha
fldcw
inc
sbb
call
fnsave
and
test
add
pop
jbe
ret
testb
adc
cmp
xor
cli
mov
es
mov
or
add
dec
hlt
mov
pop
test
ret
pop
nop
add
arpl
add
loopne
adc
aas
cmp
adc
pusha
mov
inc
add
push
inc
sbb
xor
insb
adc
leave
sbb
and
add
inc
or
jecxz
push
pop
mov
mov
arpl
push
ret
lret
das
aaa
xor
pop
adc
scas
push
std
lea
lock
sbb
jge
outsb
jecxz
and
add
jg
cmp
mov
or
cmp
aam
imul
inc
add
xchg
inc
or
das
ds
adc
dec
insb
mov
or
push
dec
pop
popl
sbb
or
addr16
push
lcall
loopne
les
dec
mov
sub
dec
in
roll
cmp
dec
mov
add
pushf
add
adc
xor
test
xchg
jnp
stos
jns
mov
inc
mov
mov
sti
and
add
push
test
adc
xchg
jne
jmp
jns
mov
pop
or
mov
mov
and
and
ja
clc
std
loope
mov
lea
mov
add
mov
adc
add
aam
neg
jmp
cmp
enter
and
adc
movsl
add
push
imul
mov
scas
jecxz
call
adc
mov
sub
or
push
sbb
mov
imul
inc
jl
inc
push
pop
movsb
sbb
bound
lcall
pop
std
dec
or
sub
jno
loopne
or
bound
lds
ljmp
inc
pop
inc
adc
push
xchg
xchg
inc
scas
stos
pop
or
add
out
xor
stos
ds
xchg
push
or
mov
add
arpl
dec
push
push
push
mov
shrl
push
push
sahf
pop
divl
sub
dec
lds
inc
leave
add
sbb
add
es
push
xchg
inc
jle
in
push
adc
xor
loope
nop
add
adc
pop
out
inc
outsb
fsts
imul
push
stos
popa
ret
dec
js
js
pop
xor
fcoml
push
sbb
xchg
imul
adc
or
jne
push
orl
push
jne
xor
and
push
imul
jns
ret
pop
mov
or
adc
xchg
push
iret
mov
test
or
add
and
jae
fmuls
and
and
adc
mov
cmpb
inc
or
adc
bswap
mov
add
stos
push
inc
lea
sti
xchg
dec
test
sub
lock
mov
and
lock
xchg
adc
sub
sub
and
mov
add
lcall
jo
push
dec
push
fistpl
push
jmp
add
or
add
enter
add
pop
add
inc
imul
push
xchg
inc
mov
pop
hlt
pop
sbb
ja
or
and
adc
in
xchg
jle
or
je
pop
je
out
fs
in
mov
and
adc
mov
push
dec
mov
call
sbbb
push
inc
push
inc
leave
and
adcl
mov
ret
hlt
enter
and
sub
arpl
dec
mov
lods
das
adc
jge
mov
int
xor
jg
rol
xor
cmp
inc
adc
scas
std
jp
pushf
les
add
mov
dec
pop
jo,pt
pop
adc
or
ret
ret
je
xchg
arpl
pop
popa
jl
pop
das
cmpb
data16
clc
add
mov
sbb
xchg
addr16
inc
jl
inc
jg
stc
sub
add
adc
outsb
sahf
daa
pusha
leave
repz
clc
add
add
cmp
mov
enter
adc
dec
and
dec
fsubs
loope
aad
mov
inc
or
aad
jmp
rcl
dec
ss
add
pop
add
nop
int3
push
fldt
inc
aas
add
xchg
jl
push
addb
xor
or
push
dec
sbb
and
movsb
add
adc
push
fisttps
adc
outsb
add
stos
int
push
adc
mov
loope
inc
and
adc
pop
orl
mov
call
add
push
mov
loope
xor
and
xchg
rcl
movsb
out
in
xchg
mov
xchg
insb
fdivrl
subl
gs
adc
movsb
jmp
lret
mov
lock
dec
jne
lea
mov
sbb
fsubl
mov
test
sub
jmp
jmp
subl
test
fisubrl
mov
clc
pop
fsubrl
test
jbe
push
sti
lcall
ret
scas
test
add
movsl
sarb
clc
in
xchg
xor
pop
imul
sub
xchg
clc
cmpsb
loope
int3
insl
xorl
push
and
inc
mov
mov
cs
subb
in
sbb
mov
sar
add
les
add
pop
add
stos
fnsave
cmp
jb
mov
das
sub
push
mov
or
jl
dec
arpl
fldt
pop
inc
test
or
popa
xor
in
shlb
or
or
cmpsb
sbb
hlt
add
and
push
push
add
and
bound
cmp
loopne
adc
or
in
mov
ficoml
ret
fwait
leave
and
sti
mov
mov
or
xchg
shll
lcall
jns
mov
sbb
mov
aad
outsb
mov
mov
test
ljmp
and
aas
push
loope
add
sub
pop
adc
xchg
sbb
mov
or
push
enter
xchg
cmp
xor
jmp
push
cmp
jl
ss
push
lods
pop
mov
adc
dec
repz
mov
out
cltd
nop
fwait
jns
in
lods
xor
sbb
sbb
xchg
inc
sbbb
and
mov
loop
out
lods
imul
mov
or
jmp
push
mov
mov
mov
mov
sbb
dec
lock
xlat
jbe
insb
cwtl
or
or
push
push
pop
or
nop
in
mov
in
popf
nop
add
imul
mov
xor
aaa
ret
cmovno
or
aam
push
mov
or
push
mov
je
push
pop
data16
les
push
pop
fwait
mov
addb
ja
add
inc
rcrb
mov
sbb
inc
clc
cmp
and
inc
outsb
add
jne
adc
add
jge
mov
pop
mov
mov
mov
sbb
xor
push
pusha
pushf
daa
pop
add
adc
jnp
fcmovb
jge
pop
sub
in
aas
jbe
lret
add
jg
nop
inc
imul
in
dec
dec
stc
adc
adcl
jo
scas
dec
mov
or
imul
pop
je
decl
ret
adc
jnp
ja
mov
lods
fisubrl
into
ret
es
jno
adc
jns
xor
and
and
sbb
popa
shrl
jb
pop
xor
jb
in
je
or
inc
pushf
inc
jmp
in
or
sbb
inc
inc
xchg
and
jmp
decl
cs
pop
nop
sbb
and
gs
aam
int3
cwtl
sub
movsb
rcrl
add
bound
gs
insb
insb
insb
xor
cs
and
add
das
cmc
dec
stos
leave
sbb
sbb
les
movsb
out
lret
xchg
xchg
jmp
dec
mov
enter
sbb
push
sysret
push
cmpsb
jns
sbb
xchg
inc
call
dec
add
cwtl
cwtl
sbb
mov
xchg
push
insb
out
or
adc
jle
icebp
cmp
insb
inc
popa
shll
pop
arpl
xchg
push
mov
aad
lods
mov
out
in
adc
jg
pushf
jmp
cmpsb
add
imul
nop
or
push
ficoms
sahf
pop
sub
pop
and
jecxz
sbb
or
pop
pop
mov
subb
xlat
stos
fadds
popa
push
data16
jecxz
or
inc
xchg
or
mov
pop
test
inc
adc
test
or
jnp
jae
dec
pop
pop
or
mov
push
hlt
jl
sub
adc
push
inc
sub
test
enter
add
ja
idivb
sbb
test
push
or
push
mov
dec
pop
pop
dec
clc
mov
jge
push
push
and
xchg
mov
ret
jmp
mov
sbb
orl
xchg
dec
sbb
sub
xor
pusha
mov
push
and
sbb
cs
mov
rclb
xor
lret
jae
sub
fbstp
movsb
es
jl
fists
ffreep
nop
sbb
ljmp
xor
loopne
repnz
dec
sti
imul
aad
jmp
lea
lods
nop
push
rol
inc
in
push
cmp
mov
adcb
xchg
pushf
popa
hlt
xor
and
sbb
sbb
push
movsb
loop
dec
sub
dec
cmpsb
in
mov
iret
mov
mov
jge
into
ds
cmp
sbb
loop
fadds
addr16
addr16
mov
sub
stos
jp
mov
stos
inc
mov
mov
sbb
test
lea
inc
mov
and
jp
fisttpl
je
jmp
xlat
and
push
jg
mov
dec
mov
jl
mov
sub
je
stc
pop
add
sub
jecxz
pop
dec
mov
sahf
leave
add
fistl
in
sbb
data16
pop
bound
cli
push
mov
sbb
gs
jl
data16
bound
push
subl
arpl
aam
or
fwait
pop
add
add
add
mov
repnz
add
or
add
push
pop
lods
inc
cmp
add
ja
push
leave
add
ds
xor
ficoml
lea
stos
cmc
sub
sbb
inc
call
shlb
ret
and
push
es
mov
jg
nop
pushf
adc
les
jl
lods
mov
inc
repz
and
lods
scas
scas
iret
repz
mov
mov
mov
mov
sti
mov
sahf
test
cltd
dec
adc
adc
mov
scas
mov
stos
jg
xor
data16
mov
sbb
cmp
mov
std
pop
lcall
inc
add
inc
add
cmp
jne
or
rol
xor
loopne
sub
or
out
add
sub
scas
bound
lea
sbb
movsb
in
test
lods
xchg
mov
mov
and
in
and
dec
cmpsl
aam
in
push
mov
leave
add
and
cs
cwtl
rclb
rcrb
ss
and
mov
in
jmp
addb
roll
and
sbb
jmp
push
out
ret
adc
movsb
mov
xchg
incl
shrb
ds
sbb
rclb
cmp
inc
imul
mov
xchg
and
mov
enter
mov
shrb
sbb
add
movsb
pusha
nop
shr
aad
xor
sbb
lret
push
pop
enter
mov
insb
shl
shl
shlb
jge
mov
rolb
movsb
push
lods
inc
enter
cld
sbb
jg
shlb
sbb
inc
cmpsl
xor
xlat
and
adc
iret
shll
dec
dec
add
out
icebp
lock
add
sub
or
adc
or
mov
sub
mov
mov
jmp
inc
sbb
cli
sahf
or
push
rep
subb
jmp
adc
aam
adc
mov
or
jge
mov
mov
inc
push
cmp
jne
inc
rclb
pusha
call
out
scas
pusha
in
mov
jmp
rolb
cmp
sub
push
addr16
shrl
es
repz
hlt
rorl
jle
cmp
jl
xor
stos
add
inc
sub
jb
test
dec
lock
jmp
test
pop
lret
outsl
add
add
cmp
add
xchg
popa
or
pop
mov
int
jp
jns
or
or
jmp
imul
push
pop
nop
sub
push
mov
lods
dec
add
ret
jo
fs
sbb
test
push
mov
lea
cmpb
jae
pop
or
mov
push
nop
sbb
pop
lahf
rcr
mov
mov
mov
test
test
pop
in
lea
push
loopne
outsl
test
add
fnsave
xor
imull
sub
cmp
xor
mov
cmp
in
sarl
sbb
insl
in
ret
sbb
int
sbb
sub
inc
nop
push
jb
ret
pop
xor
or
xor
cmp
orb
push
adc
mov
push
cmpl
pop
xchg
pop
cmc
lea
rcr
push
xchg
mov
xchg
xchg
addr16
dec
cmpb
inc
insl
mov
es
and
or
mov
or
popf
sbb
add
and
test
add
push
add
add
dec
or
inc
cmp
lea
sbb
or
dec
add
push
inc
mov
or
daa
in
imul
imul
jmp
cmp
mov
cmp
mov
ss
insl
push
mov
push
jnp
or
sub
cmp
or
inc
int
xor
xlat
shll
mov
xor
pusha
pop
add
insb
sbb
pop
jo
pop
mov
push
adc
add
cmpsl
addb
test
in
and
or
xchg
xor
js
cwtl
in
cmpb
les
or
or
scas
rcll
faddl
enter
jne
sub
mov
sub
rcrb
mov
push
dec
cmp
mov
pushf
inc
xchg
scas
sub
jbe
andl
addl
dec
adc
setbe
rol
or
mov
mov
test
adc
bound
and
and
icebp
ja
imul
or
jns
adc
sbb
leave
outsl
or
add
dec
inc
cmpsb
fdivr
inc
adc
xchg
sbb
add
jg
and
lea
outsb
lahf
pop
jno
pop
sbb
adc
sbb
sahf
ror
and
stc
adc
aad
adc
adc
test
jb
push
jmp
jmp
sbb
or
pop
repz
imul
or
jo
fcomi
mov
mov
outsl
insl
xchg
adc
pop
ds
or
and
and
fcmovb
mov
push
or
mov
arpl
mov
add
sbb
jg
std
orl
jmp
rcrl
pusha
fisttpl
loopne
push
sbb
enter
push
add
add
sbb
sub
sbb
or
cmp
ret
and
push
clc
jge
sub
lcall
pop
xor
and
pop
xchg
cs
inc
xor
in
mov
inc
mov
mov
xor
inc
and
pop
cmp
je
sbb
icebp
outsb
inc
mov
or
imul
cmp
mov
sub
sub
inc
clc
push
jmp
adc
lods
jp
test
cmp
inc
pop
or
and
add
jns
dec
mov
push
cmp
jnp
dec
jl
sahf
data16
and
mov
push
rcrl
pop
pop
pop
cmc
and
repz
sti
test
fmuls
sub
push
add
add
push
ds
or
or
or
push
movups
lahf
xor
adc
adc
les
shl
lock
lea
imul
adc
or
mov
cmp
mov
call
pop
cmp
loop
push
loop
ret
ret
or
cmpsl
jg
mov
lods
sbb
cltd
faddl
sub
ss
or
or
and
mov
or
out
scas
dec
mov
xor
mov
inc
add
mov
sbb
adc
add
add
cmpsb
fcomip
arpl
or
shl
mov
in
jle
mov
ja
test
aam
loope
shlb
and
enter
in
adc
mov
cmp
mov
mov
addw
test
or
subb
cld
gs
loop
dec
dec
loope
aam
inc
mov
ret
ja
fiaddl
daa
rolb
mov
ja
mov
xchg
pop
xorb
inc
jo
and
ja
test
inc
sub
inc
or
insl
jp
sahf
fucomip
or
jmp
inc
scas
jne
jnp
mov
xorb
in
pop
xchg
sbb
mov
add
add
and
adc
add
push
movsb
ret
cmp
stos
dec
dec
inc
ss
fmuls
fwait
xchg
dec
fwait
aam
aam
dec
jmp
rorb
push
int
and
or
icebp
add
or
int3
aas
xchg
mov
lock
mov
lea
and
sahf
mov
je
mov
adc
cmp
hlt
inc
cwtl
xchg
pop
jbe
js
mov
shrl
and
lock
push
mov
sbb
mov
mov
mov
imul
lret
call
add
and
inc
pop
je
cs
or
mov
jb
add
jno
pop
movb
push
leave
lods
test
lock
jne
mov
inc
adc
in
and
mov
or
mov
loop
mov
ret
mull
push
jecxz
push
mov
fcoml
mov
cmp
push
cs
and
sbb
inc
aad
int3
sbb
sbb
and
push
lcall
dec
inc
addl
orb
lahf
out
inc
cmpsl
cmc
sbb
mov
imul
test
fiaddl
inc
mov
aas
add
jnp
xchg
lret
pop
or
or
mov
push
iret
repz
aaa
cmp
adc
rorb
lock
mov
mov
aas
add
orb
lcall
xchg
or
pop
pop
out
test
add
xor
js
roll
arpl
ja
imul
rcl
add
loop
xor
dec
adc
adc
push
movsb
test
hlt
and
imul
adc
rcr
dec
ret
xchg
cmp
inc
and
mov
sub
je
es
mov
cmp
mov
xorl
bound
test
adc
lea
ret
or
sub
or
fs
inc
cmp
es
lea
inc
jl
scas
movb
pusha
lcall
pusha
ljmp
mov
cs
xor
mov
ret
roll
adc
mov
pop
cmp
adc
pop
or
dec
jae
xor
js
pop
xchg
or
or
or
or
xchg
sub
loopne
repnz
fcomp
xor
jb
jns
pushl
xor
mov
add
push
pop
test
loope
mov
jae
leave
ret
push
or
inc
adc
sbb
sbb
xor
push
repnz
sbb
stos
or
insl
aam
aam
add
dec
aam
mov
adc
mov
xchg
and
jb
mov
popa
pushf
and
pop
int3
int3
test
or
mov
xor
andb
inc
sbb
iret
dec
push
inc
les
fmuls
adc
sbb
adc
xchg
sbb
imul
inc
incb
dec
stos
in
inc
sub
daa
sbb
cs
dec
insb
cmp
lea
outsl
sub
dec
pop
into
rol
lea
push
sarl
ljmp
ret
fisttps
mov
inc
cmp
je
sub
cmp
sbb
and
add
insb
inc
roll
hlt
dec
call
add
lock
ds
ret
outsb
popf
mov
jmp
es
mov
fistl
dec
in
daa
pop
fcoms
test
fcom
adc
mov
mov
cmp
je
dec
fdivr
sub
cmp
sbb
popf
jmp
dec
mov
fs
sbb
popa
fisttps
leave
popa
hlt
pop
rclb
or
mov
mov
mov
in
push
std
mov
mov
js
sbb
js
pushl
cmp
ja
add
cmp
adc
out
jne
dec
jne
xlat
xor
adc
adcb
fxch
jle
fistpl
sub
dec
mov
fisttps
pusha
adc
scas
xchg
cmp
sarb
and
push
loope
cmp
neg
dec
adc
repnz
je
jmp
add
dec
mov
add
push
mov
mov
add
jle
push
xchg
pop
je
pop
xor
or
test
loope
push
addl
sarl
mov
cmp
icebp
push
hlt
leave
cmp
push
rcrb
movsb
xor
lahf
and
imul
cld
adc
sub
in
adc
data16
or
inc
and
popa
xor
les
push
push
or
je
cmp
loopne
or
imul
push
rolb
dec
stc
jge
stos
and
divps
xor
das
cmp
jecxz
push
add
xchg
flds
fisubl
andl
inc
mov
or
mov
roll
add
adcl
rcrb
jl
dec
xor
jg
jl
popa
pop
inc
pop
push
cs
sub
mov
insl
mov
mov
sbb
pop
and
nop
rcl
inc
iret
out
add
femms
jno
testl
lea
sti
or
movsb
fidivs
movsb
push
in
clc
dec
push
sbb
sahf
mov
shl
je
pusha
and
or
mov
int3
pop
int3
arpl
fadds
xor
jl
lock
mov
push
enter
les
fnstcw
repnz
and
enter
lods
es
out
mov
int3
outsb
insb
push
pusha
imul
mov
aaa
pop
and
lock
xor
inc
or
pusha
cmp
lahf
add
je
test
fcomps
inc
dec
sub
aas
dec
movswl
sbb
dec
dec
push
sbb
sbb
pop
inc
fnsave
in
jmp
pop
dec
leave
jg
sub
jecxz
and
sub
in
adc
push
fadds
invlpg
push
aad
xorb
in
or
push
sub
jg
movsl
add
sub
popa
pusha
out
pushl
out
lcall
repnz
sbbl
adc
imulb
andl
in
or
div
jmp
inc
jbe
repnz
shr
loop
jbe
xchg
shlb
xor
aam
jge,pt
in
and
les
jmp
xchg
xchg
xchg
pop
sub
lock
rclb
and
aam
lea
add
sbb
cmpb
imul
inc
je
adc
jp
ja
enter
push
adc
or
ljmp
ljmp
mov
clc
add
adc
xlat
ds
cld
add
icebp
or
fxtract
and
insb
in
lock
push
call
lea
mov
pop
jmp
incl
outsb
mov
cmp
or
and
js
and
dec
das
sub
insl
pop
rcrb
inc
bound
or
push
or
cmp
xchg
xchg
fists
mov
decl
push
push
call
cmpl
mov
pop
sub
adc
icebp
adc
ret
out
jle
mov
xchg
xor
and
pop
add
inc
fcmovu
pop
dec
add
mov
divl
add
jmp
cmp
lea
add
push
aas
lcall
pop
inc
data16
mov
fsubrl
push
movb
push
cmp
and
repz
mov
or
test
movsl
sti
or
inc
push
enter
xorl
and
pop
mov
mov
jno
in
andb
pop
popa
or
fisubrs
scas
or
aas
mov
aaa
fisubl
cmpsl
outsl
inc
push
movsl
imul
mov
ss
mov
mov
hlt
cltd
mov
adc
and
push
cmp
arpl
cmp
mov
xor
rorl
sub
inc
fidivrl
cmp
cmp
add
jno
aam
cmp
scas
push
xor
fistpl
ja
stos
xlat
stos
xchg
sub
jne
outsl
ret
nop
inc
andl
popf
rorb
sbbb
mov
sub
loopne
outsb
xor
pop
cs
faddl
inc
movsl
push
dec
fbld
jns
std
add
lahf
xchg
sbb
test
ljmp
sbb
mov
push
int
imul
push
inc
mov
or
lahf
jns
cmp
aas
loop
movsb
jl
pop
cmp
xor
jle
int3
movsb
push
jmp
and
fidivs
xchg
out
cli
inc
fimull
jns
jno
xchg
dec
push
cmp
mov
cmp
nop
mov
xchg
add
jb
xchg
lea
fdivs
adc
popa
inc
pop
insl
adc
xor
jl
pop
fists
jmp
outsb
sbb
mov
int
das
in
sub
sbb
jbe
fbld
push
dec
jmp
jns
imul
jns
mov
popa
inc
mov
pop
imul
sbb
push
leave
mov
adc
pushf
jb
push
lcall
int
aaa
mov
push
mov
sbb
push
mov
mov
les
xchg
jo
in
adc
in
dec
loopne
sbb
and
adc
test
inc
dec
add
cs
cmp
dec
adc
add
sub
cmp
repz
test
add
adc
sbb
xchg
imul
add
les
xor
adc
cmp
pop
test
add
fsubrl
loope
push
pushf
pop
addr16
xchg
and
lock
pop
subl
aas
cmp
jle
mov
movsl
xor
out
pop
sbb
xchg
dec
in
push
sub
or
aad
push
and
fstpt
lcall
cmp
cmp
add
sbb
test
adc
fsubr
add
jp
cmp
sbb
cwtl
adc
mov
pop
pusha
imul
shrb
or
lods
jo
rorb
and
xor
gs
sbb
inc
adc
push
inc
jl
xchg
jae
push
or
pop
mov
jno
filds
push
cmp
xchg
fsub
jo
aad
xchg
rorl
cmp
test
fisubrs
lods
xor
inc
lods
jecxz
push
fsubl
imul
mov
cmp
fmuls
dec
mov
or
dec
jmp
push
mull
sbb
decl
jb
add
fcompl
sub
push
js
lret
cs
int3
sub
push
xchg
sub
clc
clc
clc
stos
bound
nop
in
xchg
add
xchg
push
pop
jnp
inc
add
in
mov
and
sub
jp
inc
lds
in
push
sub
push
and
arpl
pop
push
adc
and
pop
lods
mov
mov
cmp
sbb
mov
cmp
add
xchg
xor
sub
adc
mov
xchg
pop
xchg
ds
fsubrs
outsl
dec
fwait
push
jmp
xchg
ret
imul
int
daa
or
xor
jbe
adcb
cmp
les
fdivl
mov
lcall
popf
push
js
or
pop
fildl
and
adc
jle
imul
mov
inc
sub
adc
sbb
xor
cmp
sub
arpl
add
push
jmp
lret
inc
mov
or
mov
pop
pop
arpl
push
jecxz
push
cltd
loop
inc
inc
std
hlt
clc
clc
push
dec
mov
adc
dec
push
sub
aaa
fwait
outsl
add
or
xor
enter
or
push
ja
sbbl
add
cld
das
dec
push
sbb
pusha
pusha
xor
dec
sbb
add
stc
add
push
rcll
xor
cld
and
sti
push
pop
mov
cli
icebp
add
adc
jbe
and
je
int3
loopne
adc
xchg
mov
out
push
jnp
add
add
xor
rcrl
test
jne
jge
sub
sub
inc
mov
fidivs
divb
inc
es
les
jae
stos
sub
enter
rol
push
sarb
xor
xor
cmp
and
cmp
jl
mov
or
cmp
jg
jmp
lds
fs
xchg
lock
push
xor
dec
movsl
push
inc
rorb
xor
and
cmp
push
pusha
outsl
dec
sbb
cmp
lock
lea
enter
dec
sbb
lea
cs
daa
cwtl
push
add
test
xchg
lock
sahf
and
sbb
jns
mov
imul
mov
add
dec
mov
pop
sub
sub
out
xor
xchg
cli
call
movsl
xor
inc
lcall
and
add
les
adcb
or
add
ret
adc
test
ffree
rorb
in
push
dec
mov
cmpsl
sub
cmp
les
ss
cwtl
sbb
inc
and
aaa
push
xchg
sbb
add
and
jle
push
sbb
lods
stos
sub
pop
loopne
dec
cmpsl
fmull
sbb
sub
js
add
jl
loop
push
dec
test
mov
jae
or
popa
popa
adc
and
test
cmp
add
inc
or
push
and
insl
add
hlt
push
sbb
test
fst
xorl
inc
les
test
sub
test
xchg
inc
sbb
mov
mov
push
sub
ja
mov
mov
mov
jg
in
inc
nop
imul
pop
mov
lock
lcall
adc
sbb
add
loopne
cmpsb
addr16
shlb
xor
je
mov
add
lock
enter
call
add
xchg
add
rorl
xlat
inc
dec
jecxz
repz
and
sub
and
cmp
jmp
and
nop
push
lods
xchg
clc
push
jmp
dec
xor
pop
lret
xchg
sbb
ja
scas
lods
and
cmpsb
rcll
push
cmpsb
mov
add
sbb
lock
jmp
push
lock
shll
add
jnp
adc
push
pop
loop
xchg
dec
jo
jo
mov
jno
je
or
push
add
lods
add
clc
jp
and
gs
gs
or
rcll
pushf
xchg
mov
out
xchg
ret
jb
xor
sarl
rorb
adc
outsl
mov
push
or
insb
mov
loop
or
or
adc
dec
icebp
mov
pop
inc
push
imul
xchg
ficoml
jb
inc
lock
and
and
jb
pop
cs
inc
dec
dec
cs
lret
in
push
pop
pop
pusha
in
mov
jo
cs
lret
je
jl
test
in
mov
mov
pushf
mov
in
lods
mov
mov
cs
int3
cs
lret
in
aam
fsub
in
mov
lock
xchg
lret
hlt
clc
cld
add
pop
or
adc
cs
lret
sbb
and
lret
in
mov
mov
inc
inc
dec
dec
xchg
lret
in
push
push
pop
pop
pusha
jb
pop
cs
lret
in
js
addb
nop
xchg
pop
cs
lret
cwtl
pushf
mov
jb
lods
mov
mov
mov
xchg
lret
in
rcl
fcomp
loopne
mov
in
lock
xchg
lret
in
clc
cld
add
or
adc
xchg
lret
in
sbb
and
out
mov
cmp
and
mov
pusha
addl
sbb
add
pop
popf
cwtl
jnp
ret
or
push
and
imul
or
or
test
or
and
mov
mov
mov
xor
cwtl
loop
loopne
ss
les
nop
orb
in
or
ja
mov
push
sbbl
sbb
sar
pop
pop
sbb
jl
rorl
pop
adc
inc
adc
xchg
jae
imul
call
xor
test
or
negl
add
popa
or
mull
loope
adc
mov
sub
inc
inc
shll
lods
bound
or
dec
adc
cld
clc
or
imul
rolb
test
outsb
flds
lock
leave
mov
stc
mov
sbb
rclw
ffreep
cmpsb
mov
push
push
xor
pusha
mov
mov
outsb
test
mov
add
add
fcomp
fadds
add
dec
push
add
cmpsb
push
or
sub
jg
jl
pop
std
mov
push
movsl
mov
inc
imul
out
push
and
dec
xor
enter
in
in
call
out
imul
pop
xchg
ja
cmp
or
rcrl
add
cwtl
mov
xor
aas
jmp
mov
aas
imul
mov
sub
or
inc
cmpsb
cmp
push
push
inc
push
iret
jb
mov
push
cwtl
add
sahf
fdivl
aaa
inc
dec
bound
daa
xor
aas
push
add
xor
sub
aam
movsl
mov
push
inc
dec
or
push
mov
inc
pop
scas
mov
pushf
jbe
sub
scas
xor
pop
mov
pop
mov
dec
loopne
test
mov
imul
push
rolb
stos
stos
or
or
xchg
adc
fiaddl
and
mov
pop
mov
add
incl
add
popa
push
out
mov
push
or
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
incl
test
ficompl
jmp
mov
hlt
movl
imul
std
in
dec
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
stc
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
mov
or
or
and
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
call
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
xchg
push
loope
or
insl
or
pop
arpl
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
idiv
outsl
clc
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
decl
leave
jl
fnstsw
add
daa
adc
or
and
test
or
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
decl
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
jmp
jb
push
add
adc
mov
jnp
sbb
xchg
or
popf
aam
out
fdivrl
fisttpl
aam
roll
clc
mov
or
mov
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
mov
push
pop
or
adc
sahf
gs
clc
sar
jg
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
call
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
or
sahf
mov
inc
jmp
mov
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
call
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
out
inc
outsw
jb
popa
je
and
dec
and
jb
imul
push
je
aaa
jae
popa
outsb
mov
add
inc
insb
imul
popf
mov
scas
gs
push
push
add
insb
push
inc
and
in
out
mov
paddusw
inc
add
jb
cmp
mulb
insl
gs
or
and
outsl
scas
je
outsl
outsb
and
lcall
stos
fs
je
jo
jg,pn
jae
mov
push
imul
inc
lock
push
jns
gs
and
testl
imul
imul
xor
adc
and
outsb
std
xchg
adc
bound
gs
jo
pop
inc
jb
inc
add
inc
sbbl
sub
nop
mov
jo
imul
jnp
or
sbb
dec
popa
xor
add
gs
sub
sbb
movsl
jbe
es
dec
gs
negl
dec
dec
inc
in
ffreep
decb
push
pop
push
inc
sub
sub
jae
sub
mov
jbe
dec
ja
jg
loope
dec
inc
dec
dec
push
inc
loop
dec
inc
icebp
lods
popa
shll
je
mov
xchg
push
add
dec
jae
dec
dec
clc
add
ds
push
outsl
inc
gs
int3
jb
sbb
xlat
inc
fbstp
pusha
aaa
mov
andb
sub
movsb
mov
push
ss
movsl
inc
movsl
push
jl
sub
push
inc
jg
pop
sub
pop
stos
fs
xchg
sub
and
mov
mov
inc
inc
inc
cmp
shll
lods
xchg
dec
sub
aaa
sub
xor
pop
mov
sbb
gs
xor
cmpb
push
pop
push
inc
and
sub
data16
add
pop
or
or
mov
stc
call
push
jg
lret
pop
sub
mov
pop
pop
fcmovnb
lret
arpl
icebp
ficoml
popf
gs
loopne
inc
push
push
stc
loope
push
jno
out
in
push
fdivrs
daa
divl
data16
mov
jge
inc
jbe
pusha
gs
imul
shrb
push
shlb
js
mov
or
pop
and
push
dec
inc
inc
push
inc
inc
inc
push
push
push
mov
int
dec
sahf
inc
dec
inc
push
dec
adc
mov
inc
movsb
mov
add
cmpsb
adc
inc
sti
je
push
mov
in
js
xor
cmp
push
mov
adc
in
xchg
pop
inc
addr16
imul
jbe
arpl
dec
bound
fsubs
push
fmuls
or
out
sbbl
pop
jne
xor
mov
cmp
mov
cmp
insl
push
arpl
and
mov
testl
inc
xlat
or
xor
inc
nop
pusha
mov
daa
subb
lcall
sbb
sub
and
mov
jae
cs
roll
out
pop
sbb
mov
jle
push
outsl
pop
insb
arpl
push
cmp
or
pop
dec
cwtl
xor
aad
jo
out
bound
jae
inc
in
insb
add
in
dec
stc
xor
data16
outsb
fsubp
sub
gs
insl
pop
add
data16
mov
ja
sub
pop
xor
and
imul
push
inc
outsb
jle
push
movl
jb
popw
mov
xor
arpl
inc
popa
imul
push
pop
imul
mov
cmpsb
int
outsb
popa
paddsw
and
imul
or
and
sub
pop
jo
sub
clts
test
sbb
pop
data16
mov
out
push
add
add
add
add
add
sub
mov
cmp
pop
or
aaa
xor
push
push
pop
push
and
add
pusha
push
shr
js
or
sub
ficoms
sbb
sub
jne
insb
popf
inc
loope
add
pop
jo
adc
xchg
shll
je
add
les
inc
jae
mov
mov
inc
jmp
push
inc
movsb
js
outsb
faddp
sub
and
lahf
lret
and
pusha
mov
test
fldenv
movsb
mov
add
push
clc
push
pushf
and
push
xchg
pop
je
dec
outsl
outsb
push
popa
cmpsb
popf
rolb
and
js
in
sbb
in
and
ja
push
repz
rcr
pusha
xor
cs
jb
test
bound
pop
push
insb
jne
inc
sub
lods
loopne
push
jp
jb
jns
adc
int
and
sub
adc
xor
inc
sub
mov
mov
test
sub
je
push
and
shlb
sbbl
lock
hlt
push
popa
adc
pop
out
faddl
pusha
inc
js
xchg
pop
inc
add
push
iret
mov
inc
push
inc
ja
inc
push
sub
add
cmp
jns
jo,pn
faddp
cltd
xor
push
push
and
popa
lea
popa
sbb
or
stos
sub
adc
fbld
mov
push
je
test
mov
out
add
cmp
outsb
push
gs
test
or
das
jb
addr16
nopl
fimull
popa
addr16
add
mov
cmp
cmp
mov
mov
pop
xchg
cmp
mov
jl
xchg
pushf
in
jle
subb
andl
test
inc
dec
inc
inc
push
in
cs
dec
add
push
push
nop
das
push
add
popa
pop
add
adc
call
dec
sub
pop
mov
jae
arpl
ffreep
arpl
cmp
push
cmp
cltd
scas
adc
inc
add
sub
ja
sbb
int3
push
pop
mov
rol
push
dec
inc
dec
dec
inc
cmovle
cld
mov
add
dec
dec
dec
inc
push
inc
push
pop
inc
mov
test
dec
dec
dec
inc
push
inc
inc
add
cmp
cmp
out
mov
mov
adcb
cmp
jae
out
fdivrp
test
fisubs
push
sbb
je,pn
js
sbb
outsb
jbe
push
push
js
jmp
jbe
popa
pop
sub
imul
sbb
je
int
and
dec
push
aad
out
mov
and
inc
ss
sti
imul
push
xor
cmp
sub
in
add
jnp
pop
jp
js
dec
aaa
add
mov
xchg
je
or
cmpsl
push
xchg
loopne
popa
sahf
mov
cmpsl
mov
jno
outsl
ss
or
je
std
inc
jo
jbe
mov
cmp
dec
arpl
shrb
jmp
mov
mov
das
mov
and
shrb
adc
and
push
outsl
sub
or
arpl
xor
jo
xor
inc
aaa
insl
pusha
je
lret
ficomps
xchg
bound
das
imul
add
dec
add
pop
mov
sbb
pop
pop
sbb
and
push
addr16
push
cmp
mov
mov
outsl
fdivl
jne
dec
fs
mov
addb
push
inc
cmp
jbe
xor
and
sbb
flds
sahf
cs
inc
sub
clc
rorb
nop
inc
arpl
push
dec
jne
add
daa
pop
push
push
fs
add
inc
outsl
js
push
add
je
mov
dec
inc
push
push
sahf
inc
pop
jmp
daa
js
cmpsb
and
pop
jnp
pop
aaa
xchg
push
or
push
sahf
data16
inc
mov
icebp
into
jno
pop
jbe
insl
pop
adc
es
push
jp
adc
ficomps
out
pop
sbb
cmpsl
push
adc
arpl
shrl
rolb
inc
into
mov
pushf
fs
clc
outsl
xlat
lods
xor
jle
pop
push
cmp
jne
test
into
cmp
inc
sub
in
bound
jb
addr16
inc
data16
inc
out
adc
jo
testb
xchg
mov
iret
inc
push
cli
jp
sahf
neg
test
es
mov
outsb
push
pop
jae
fs
push
les
fadds
dec
aam
in
shrb
and
push
inc
fsubr
xlat
push
insb
inc
daa
and
push
sub
gs
imul
xchg
push
jae
call
gs
das
dec
lods
shll
setl
pcmpgtw
out
fstl
loop
push
xchg
cmpsb
imul
loopne
push
or
push
ret
ret
push
imul
roll
insl
push
dec
imul
lds
outsl
into
popl
outsb
cmpsl
outsl
out
popa
cmpsl
aaa
and
xchg
dec
and
jbe
mov
outsl
sub
add
inc
sub
pop
sbb
outsb
jp
gs
popa
push
dec
in
out
daa
adc
out
addr16
iret
test
arpl
push
cltd
adc
test
adc
jmp
jae
jo
sbb
iret
sub
fdivrs
into
addr16
mov
adc
daa
sub
pop
xor
pop
mov
daa
lcall
pop
lods
jge
jnp
inc
insl
mov
rol
jns
adc
cs
lods
push
addr16
aam
adc
lcall
pop
cmpsl
imul
into
jb
mull
pop
data16
addr16
call
inc
pop
popa
xchg
sub
test
and
sbb
rolb
sti
sbb
jns
jae
daa
mov
insb
mov
xchg
test
lahf
imul
fiaddl
addr16
cmp
mov
cmc
daa
enter
xor
ror
daa
popa
pop
fcmovbe
mov
pop
xor
daa
arpl
call
in
sub
push
pop
add
sub
xor
jns
dec
popa
mov
push
cmp
push
ret
imul
fisubrl
sub
outsb
movsb
or
test
pop
fs
cmp
pop
xchg
pop
inc
cmpsb
adc
out
test
je
daa
jae
popa
push
fisubrl
imul
daa
or
clts
lcall
jmp
into
sub
inc
or
std
daa
and
out
mov
push
add
mov
cld
mov
ja
jns
fists
xor
push
dec
inc
dec
cmovns
add
jge
in
dec
cmp
cmp
add
dec
mov
mov
add
dec
das
fs
or
push
dec
push
inc
fstp
ret
hlt
inc
lock
test
outsl
jbe
hlt
push
pop
dec
arpl
adc
cli
je
fisttpll
sbb
mov
dec
jne
cmpb
push
outsb
gs
fmull
dec
lods
jmp
inc
test
pushf
mov
adc
iret
cmp
cmpsl
xchg
popl
out
sbb
pushf
ja
inc
dec
fs
jle
lahf
mov
jae
push
negl
sbb
dec
and
pushf
mov
push
jne
xchg
pop
dec
lds
inc
ds
das
jo
or
inc
xor
int
jle
testl
ja
ja
push
outsb
jl
cwtl
cmpsb
mov
or
addl
insb
jp
shll
xchg
movsb
mov
into
xchg
sbb
stc
jae,pt
out
jp
enter
mov
pop
ret
push
pop
pop
mov
fmull
jle
insl
jo
mov
inc
pop
je
cmp
popa
and
pop
enter
xor
out
movsl
cmc
movsl
lea
shll
shrl
jg
dec
test
mov
push
add
sbb
mov
jmp
xchg
jl
mov
outsb
inc
rorl
add
dec
inc
xchg
mov
push
jecxz
inc
ja
jo
cmp
xchg
cmp
dec
push
push
ja
add
xor
xor
add
ja
add
enter
adc
add
adc
fsub
inc
out
rorb
inc
enter
jae
jno
dec
push
push
push
dec
cltd
insl
cmp
fwait
add
inc
pop
cmp
mov
push
add
ja
sub
push
arpl
cmp
pushf
insb
outsl
jecxz
test
jae
arpl
rol
loopne
and
lret
push
leave
sbb
jnp
jbe
inc
dec
js
les
mov
add
push
pushf
subl
pop
jo
jae
pop
leave
push
fidivs
push
inc
push
push
gs
and
movsb
xchg
add
je
push
int3
jns
mov
adc
in
and
jnp,pt
jge
test
xchg
sub
dec
rclb
dec
pop
add
lcall
dec
jo
cmpsb
fcompl
filds
push
test
je
jns
pop
outsl
fwait
sbb
shrl
leave
fs
sbb
out
push
das
cmc
add
push
outsb
sarb
outsb
xchg
sub
cmp
and
or
or
mov
imul
insl
push
xchg
push
scas
sub
lods
pop
sub
lods
std
mov
fwait
jbe
and
sub
mov
pop
pop
add
jae
inc
arpl
andl
and
aad
xchg
inc
xor
mov
xor
imul
movsl
filds
or
xor
adc
jae
push
push
inc
popa
lcall
loop
pop
inc
enter
pop
sub
ja
or
cmp
or
adc
or
xchg
sti
ja
jg
outsl
addr16
decb
push
push
jb
daa
mov
mov
and
outsb
pop
scas
sbb
pusha
add
mov
fimuls
sub
inc
sbb
pop
in
incl
push
dec
inc
pop
add
fstpt
aas
or
inc
add
push
cmp
das
push
repz
enter
xchg
mov
repz
enter
hlt
or
insb
pop
add
and
sub
sahf
or
inc
push
fs
jns
jns
add
or
repnz
fs
cmp
insb
je
repnz
mov
enter
push
jns
clc
in
das
sbb
adc
enter
adc
pop
enter
sbb
sbb
cmp
repnz
cmp
repnz
and
out
test
and
cmp
lods
sub
or
iret
xor
lahf
xor
lock
xor
and
jae
test
lock
enter
icebp
cmp
icebp
xchg
imul
inc
in
repnz
push
mov
dec
in
pop
repnz
js
pop
mov
jae
dec
and
dec
repz
dec
jl
push
and
jae
das
enter
nop
dec
jnp
hlt
mov
sahf
out
sahf
pop
test
out
call
jae
out
pushf
cmp
cs
jae
iret
movsb
lods
int3
in
hlt
fdivs
pop
push
cmp
mov
cs
push
sahf
movsb
test
cld
or
mov
push
inc
das
push
push
js
test
sahf
xchg
out
cwtl
test
aam
loopne
pop
pushf
out
clc
sbb
and
push
inc
in
cmp
push
test
add
pop
push
pusha
rcrb
stos
or
je
add
xor
and
jae
inc
dec
gs
sbbb
mov
sub
bound
popl
xor
push
jns
les
pop
push
addb
fwait
xor
lret
pop
addr16
jne
or
daa
cmp
inc
rcrb
lods
shlb
aaa
nop
sub
lock
push
or
dec
imul
ja
addr16
sbb
push
outsl
outsl
inc
pop
dec
dec
cmp
inc
clc
lods
lods
dec
lcall
imul
push
xor
ss
clc
mov
inc
push
push
xor
xor
xchg
mov
inc
dec
outsl
push
stos
and
add
dec
loop
int
clc
pop
hlt
dec
imul
adc
jg
jp
lock
test
mov
ss
loopne
arpl
insb
andb
lcall
jns
mov
push
mov
dec
mov
inc
pop
push
sub
xchg
adc
or
fcomps
fiadds
arpl
in
in
rcrb
cmp
adc
out
push
outsb
or
xchg
ljmp
jns
and
jo
push
push
xor
xor
dec
into
adcb
mov
sbb
inc
cmpsl
xor
mov
and
test
outsl
sub
cs
lret
and
call
mov
jb
inc
inc
js,pt
jne
faddp
and
pop
xor
mov
inc
and
arpl
addr16
das
fisubl
xchg
inc
inc
dec
inc
push
pop
inc
idivb
ss
and
cmp
je
sbb
add
out
mov
push
insl
dec
ss
dec
push
sub
ret
push
inc
adc
dec
shlb
jecxz
push
dec
dec
xor
push
fninit
fistps
fisubl
or
add
fdivs
jl
add
xor
cmp
mov
xchg
insl
insl
mov
mov
pop
addr16
outsb
pusha
jb
push
pusha
xchg
or
lcall
or
pop
xor
pop
daa
mov
hlt
dec
shr
mov
dec
fstpt
cmp
mov
xchg
stos
add
push
outsl
lahf
mov
test
stos
bound
mov
roll
dec
das
xor
dec
out
test
outsl
or
pop
imul
or
dec
popa
push
pop
insb
cmp
adc
cmpb
mov
test
out
xchg
movb
jo
push
or
jp
dec
add
rolb
sub
testl
mov
adc
push
add
push
mov
or
push
mov
loope
shlb
pop
mov
xchg
inc
mov
push
xchg
popa
daa
mov
insb
pushf
cmpsb
inc
int
imul
inc
mov
adc
test
sub
scas
and
enter
jg
xor
push
testb
dec
std
add
add
bound
xor
imul
popa
arpl
adc
or
nop
sbb
mov
jb
pop
pop
lahf
push
inc
push
inc
dec
push
dec
dec
inc
dec
inc
scas
push
cmp
or
bound
js
dec
add
andb
cmpsl
les
ja
outsl
xor
inc
cmp
bound
or
push
shrl
xchg
push
push
inc
inc
dec
dec
mov
dec
xchg
add
xchg
movsb
fstp
push
dec
dec
pop
xchg
inc
imul
lret
xchg
arpl
add
xchg
fdivs
pop
or
push
mov
mov
mov
inc
and
addr16
dec
pusha
and
ds
clc
dec
popa
sub
aaa
lahf
sbb
arpl
pop
imul
je
cmp
jbe
inc
push
dec
xor
or
js
test
cwtl
inc
shlb
mov
pop
insl
jo
xor
das
insl
je
ja
clc
outsl
add
data16
jo
bound
daa
add
xor
dec
push
dec
pushf
or
mov
int
es
aaa
pop
xor
daa
loopne
ja
arpl
and
cmpsb
inc
sbb
cmp
and
ljmp
cwtl
xchg
fs
mov
fsub
xor
imul
dec
pop
gs
test
xchg
add
ss
xor
pushf
gs
mov
xor
fs
and
cmpsb
push
sub
pusha
addr16
daa
jb
or
mov
mov
cmpb
xor
rolb
jae
mov
enter
pop
testb
inc
push
pop
add
lahf
bound
or
inc
xchg
push
daa
jno
push
ljmp
int3
js
cmp
ss
add
cmpb
pop
movl
push
es
in
xlat
push
adcb
dec
xlat
std
sbb
das
test
xchg
pop
jo
lret
pop
add
mov
pop
mov
sbb
inc
jno
adc
or
xchg
data16
imul
imul
imul
les
sub
xchg
dec
out
fdivs
pusha
pop
and
pusha
add
jmp
add
xchg
dec
add
in
jg
rclb
add
mov
mov
pop
mov
lahf
call
pop
stc
sub
dec
pusha
add
cmp
add
push
inc
sbb
and
std
int3
inc
fs
mov
pusha
pop
or
ja
push
xchg
jl
add
sub
adc
incb
and
scas
inc
push
inc
addr16
fcmovnu
ja
test
or
pusha
fiadds
ds
dec
push
add
fwait
or
ja
add
jmp
sub
add
or
enter
imul
pop
in
xchg
les
int
sub
add
mov
pop
stos
pop
movsl
cmpsb
or
jns
mov
stos
out
push
pop
nop
clc
and
shlb
js
cmpsb
pusha
mov
movsl
subb
and
pop
repnz
xchg
push
or
adc
loopne
pusha
push
vmread
or
enter
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
scas
xor
xor
inc
pop
jno
iret
out
sbb
punpcklbw
out
sarb
jg
add
orb
dec
cltd
cltd
icebp
mov
jb
lock
jp
add
add
and
adc
mov
or
das
or
add
inc
sarl
lock
adc
vpcmov
jp
mov
or
add
mov
or
push
add
xor
mov
add
arpl
and
in
cmp
sub
add
sub
sar
cmpsl
dec
add
pop
out
cmp
int3
loopne
jg
or
ret
or
push
fcompl
add
test
add
xlat
daa
pop
jp
ficomps
imul
jl
add
adc
pusha
push
sbb
xchg
jns
xchg
cmc
sbb
stc
inc
call
inc
cmpl
jecxz
testl
add
add
or
or
or
xchg
aaa
push
xor
xor
adc
jmp
push
fcompl
dec
ret
call
jl
mov
ja
mov
push
inc
add
cld
ja
sub
inc
inc
outsl
dec
xchg
push
jbe
bound
data16
pop
mov
jae
arpl
sbb
fs
pop
jae
push
pop
popa
arpl
dec
jecxz
hlt
xor
add
mov
push
dec
dec
dec
inc
add
testb
les
mov
or
xor
out
add
sbb
adc
int
sub
push
jo
or
mov
xchg
xor
mov
arpl
pop
test
testb
pop
inc
lock
rcll
pop
inc
and
divb
sbb
cltd
push
in
jb
dec
outsb
pop
sub
push
xcrypt-cfb
cmpsl
movsl
mov
repz
pop
cli
rolb
imul
mov
movsl
inc
mov
ss
push
outsb
rorb
inc
dec
push
jno
push
mov
inc
add
pop
inc
cmp
add
mov
push
sub
test
push
stc
jge
jbe
movsbl
xchg
pop
les
inc
jb
pushf
gs
add
pop
je
movsl
je
lds
test
inc
cmp
mov
je
sub
aam
into
nop
movsb
adc
movsb
push
sbb
jbe
je
cmp
xchg
comiss
push
push
fimull
pop
adc
leave
fldt
sub
and
insb
fisttpl
mov
loop
inc
mov
stos
inc
dec
dec
cs
sub
mov
jns
lea
decl
std
sahf
mov
pop
je
inc
jmp
popl
or
aaa
sub
dec
fstpt
jge
cmpsb
pop
shlb
ss
push
mov
or
flds
ds
add
inc
daa
inc
add
dec
add
cmp
mov
push
inc
push
push
sbb
adc
in
add
sub
aaa
sub
lods
and
nop
cltd
sbb
push
adc
push
jno
test
sub
and
int3
repnz
mov
mov
or
in
ret
xor
mov
addr16
cmp
sub
cs
lret
insl
xchg
gs
pop
jb
dec
jno
cs
fwait
mov
loopne
jo
add
ret
xor
das
rorb
stos
int3
xor
pop
lcall
dec
push
inc
inc
cli
fsubrs
sbb
loop
adc
dec
das
inc
fbld
or
ljmp
mov
add
ljmp
mov
push
xchg
lret
adc
aas
ljmp
or
push
sbb
stos
jns
imul
inc
push
and
pop
or
ret
mov
sub
test
xchg
mov
or
fdivs
je
into
xchg
mov
cmpsb
mov
xor
je
mov
jp
sbb
ffreep
mov
out
icebp
pop
in
das
xor
xor
dec
adc
pop
and
and
outsl
nop
inc
popa
pop
data16
sbb
sub
xchg
ror
adc
js
inc
test
sub
sbb
js
jo
jp
hlt
sub
xor
inc
arpl
push
testl
sub
pop
test
inc
dec
push
and
enter
sub
bound
xor
outsl
lods
lcall
adc
jge
cmp
mov
shlb
adc
imul
and
push
rorl
fimull
loopne
inc
fists
dec
push
push
xor
xor
cmp
inc
add
data16
mov
dec
adc
inc
inc
inc
push
dec
push
dec
inc
filds
and
mov
out
ds
gs
dec
inc
pop
push
mov
outsb
xor
mov
and
imul
dec
push
inc
inc
push
cmp
sub
inc
int
cmpl
cmp
xchg
mov
add
adc
and
inc
fisttpl
and
dec
adc
or
ret
ficoms
push
imul
and
aam
ja
push
inc
jbe
outsb
dec
push
push
add
jg
and
test
and
or
pusha
xchg
fbld
inc
or
mov
jne
xchg
and
fidivrs
xchg
cmp
adc
mov
out
sub
cwtl
cmpsb
or
xor
pop
cmp
movsl
pusha
dec
push
das
dec
ja
and
cmp
jl
les
mov
das
push
aas
jae
inc
popa
orl
pop
xlat
mov
adc
push
or
dec
lret
add
inc
bound
rdtsc
inc
pop
add
imul
dec
cs
or
adc
dec
and
or
xor
and
int
gs
add
fldcw
pop
push
nop
dec
subl
or
cmp
mov
mov
sbb
dec
adc
inc
dec
push
xor
das
sub
cmp
add
jo
addb
mov
call
mov
es
inc
ret
outsb
sti
test
and
inc
shlb
push
int
imul
xchg
out
fcmovnu
mov
or
rolb
sub
jne
cmp
push
lcall
jns
mov
lods
and
hlt
inc
adc
pop
and
adc
dec
dec
push
addb
ret
pop
inc
pop
sub
bound
and
iret
fisttpl
push
ret
sbb
inc
push
inc
pop
das
dec
dec
fistpl
pop
xor
es
xchg
xchg
xchg
xor
jb
xor
and
xor
mov
xor
sbb
ss
aaa
gs
ja
cmp
ror
cmp
jns
xor
xchg
xchg
xchg
outsb
daa
jp
xor
lock
orl
rolb
add
pop
es
fidivs
enter
es
mov
repnz
pop
and
cmpl
and
insl
pop
es
aaa
pop
es
jns
and
pop
sub
fidivs
enter
sub
pop
sub
sahf
inc
mov
inc
sahf
mov
lods
call
or
insl
lds
adc
insb
cmp
adc
add
add
dec
ficoml
adc
cli
mov
add
adc
daa
dec
outsl
adc
xchg
jg
daa
fistpl
shlb
and
jne
int
mov
adc
popa
popa
xchg
adc
fdivrp
inc
cmpsb
adc
leave
adc
jbe
xchg
jbe
adc
mov
dec
push
add
xchg
jbe
push
adc
jbe
insb
adc
and
iret
and
daa
and
pop
adc
outsl
jecxz
adc
cmc
insl
stos
mov
add
in
nop
shlb
push
pop
outsb
adc
cmp
adc
xchg
addr16
cmp
cs
leave
xchg
addr16
pop
repnz
and
pop
inc
push
push
dec
pop
insl
pop
mov
pop
or
out
xchg
dec
fidivl
out
sub
push
push
sbb
jg
daa
dec
dec
pop
or
mov
push
pop
or
mov
pop
or
push
pop
or
xlat
sahf
inc
push
or
sbbl
pusha
movsb
jbe
inc
xor
pop
dec
inc
inc
push
pop
or
fcmove
in
arpl
inc
push
inc
dec
or
pop
pop
or
lret
dec
or
mov
or
fs
imul
in
pusha
xor
in
xchg
xor
bound
cmp
xor
fs
xchg
inc
xor
xor
data16
jae
inc
dec
push
xor
inc
dec
cmp
notl
xor
popa
out
fs
int
cmp
mov
dec
inc
pop
std
push
dec
cli
add
inc
push
pop
mov
xor
loopne
mov
ss
cltd
and
xor
dec
jns
inc
dec
je
sarb
add
mov
add
insb
mov
push
push
outsb
popa
jo
andb
sbb
sbb
insl
iret
ds
lock
xchg
in
push
and
mov
inc
js
daa
xor
add
sbb
das
and
inc
insb
dec
test
add
push
jnp
icebp
push
xchg
shll
imul
das
sbbb
jns
xchg
sti
hlt
dec
jl
fistpl
lcall
cmpsb
aas
in
xor
fs
add
imul
adc
mov
icebp
add
and
pop
addb
jbe
ret
or
push
dec
insb
test
mov
xor
int3
addr16
hlt
arpl
fdivrs
es
push
pop
push
mov
aaa
inc
mov
mov
popa
fs
inc
sub
cmp
out
sub
rcrl
popf
and
mov
faddl
movsl
cmp
daa
xor
sbb
sub
jne
cmp
imul
xlat
test
mov
ds
pop
xor
jge
mov
fimull
jae
push
inc
dec
adc
int
mov
jb
inc
test
push
push
lret
shll
push
cmp
iret
sbb
fwait
leave
cmp
or
push
cmc
xchg
scas
mov
xchg
add
or
adc
out
pop
inc
sbb
mov
dec
ret
addr16
pop
inc
lcall
pop
jnp
mov
and
insb
push
lahf
mov
sti
inc
jbe
push
xorb
out
loope
rcl
arpl
sub
je
mov
jbe
test
inc
je
pop
xor
js
push
push
inc
push
notb
sub
jne
inc
pop
scas
mov
push
and
jae
xchg
rcr
or
push
and
pop
sbb
mov
popa
cmpsb
pop
jae
or
jp
popa
pop
outsb
jbe
pop
adc
mov
jae
insb
outsb
push
es
or
jb
shlb
add
pop
lahf
lahf
imul
pop
pop
fimuls
popf
mov
xor
movsb
out
dec
inc
jo
push
push
pop
bound
add
jp
sub
cmp
mov
sbb
lds
shlb
push
inc
imulb
mov
je
cmpsl
out
adc
lahf
daa
xlat
daa
xchg
fdivs
jg
les
jb
outsl
jb
mov
out
sub
mov
lods
lcall
add
imulb
xor
sbb
or
xchg
inc
pop
sbb
dec
push
loopne
pop
xchg
scas
fwait
pop
push
and
arpl
movq
pop
out
addb
pop
xchg
inc
cwtl
aad
pop
aas
dec
testl
outsl
bound
inc
insb
nop
xchg
fwait
jo
mov
imul
pop
popa
mov
jbe
pop
mov
outsl
or
mov
mov
ja
outsb
jae
lea
shll
inc
clc
push
push
and
xlat
or
push
lods
add
lret
inc
scas
mov
mov
into
pop
jmp
imul
mov
and
pop
push
sub
push
mov
inc
daa
or
inc
enter
sbb
das
push
scas
pusha
and
push
and
inc
sti
or
outsl
pop
data16
dec
clc
outsl
bound
push
dec
punpckhbw
pop
daa
push
jne
inc
mov
mov
fwait
push
pop
mov
cmp
pop
jne
cmpsl
mov
xor
xchg
ss
shlb
rcrb
lea
loope
loope
addb
jno
add
jb
mov
push
mov
sbbb
fnsave
icebp
xor
aad
popa
inc
pop
addr16
xor
out
push
push
stos
in
push
xchg
aas
xor
incl
pop
aam
dec
mov
dec
mov
add
stos
popa
test
xchg
nop
pusha
pop
daa
imul
add
jle
push
sbb
adc
and
aad
mov
or
fistps
jo
cltd
std
cmp
adc
test
icebp
xchg
push
sbb
adc
popf
shlb
jnp
icebp
stos
stos
cmpsb
out
ljmp
int
adc
sbb
jne
cwtl
push
int
cwtl
or
mov
mov
add
add
es
icebp
fwait
cltd
popf
dec
adc
mov
lret
sbb
in
shl
cli
hlt
std
cltd
adc
test
movsl
mov
shlb
fs
fnstsw
movsb
adc
mov
adc
out
std
sub
leave
enter
push
out
test
data16
push
lcall
enter
movsl
adc
mov
lcall
lcall
fdivs
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
lods
imul
call
xchg
rclb
test
lcall
lock
filds
add
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
push
push
fbld
inc
nop
insb
xor
pusha
xor
jle
pop
lock
jns
pop
jle
dec
jge
xchg
cwtl
ror
xor
flds
ljmp
xchg
out
bound
xlat
lea
adc
imul
shrb
rol
pop
popf
fdivrl
rol
adc
cmpsb
adc
js
pop
mov
sbb
pop
js
sbb
cltd
adc
arpl
sbb
adc
lcall
sbb
ret
into
repz
and
lods
insl
jo
sti
push
repz
sub
pop
ss
sahf
rep
pop
adc
popf
clc
into
lret
xor
push
jnp
or
leave
popa
mov
fstl
insl
cmp
fwait
neg
rclb
pop
jnp
adc
mov
pop
fbstp
lcall
pop
fisubs
imul
lret
in
lret
mov
push
leave
jge
xor
fwait
or
ret
xchg
ja
mov
lahf
mov
jmp
cli
fdivr
std
jmp
ljmp
cld
and
fcomps
fsub
lock
insb
lods
aad
or
lock
jmp
jmp
mov
loope
cs
fsubs
lret
fucomi
out
cld
in
sti
lock
cltd
clc
cli
jp
mov
aam
cmc
imul
mov
cltd
daa
inc
and
stc
test
push
dec
inc
sbb
jnp
loopne
call
push
inc
and
lock
and
push
dec
and
dec
inc
inc
and
iret
fimuls
cs
inc
dec
dec
add
mov
dec
fcmovu
xor
dec
inc
xor
mov
sbb
push
and
xor
xor
pop
movsb
jae
sarb
xchg
adc
or
inc
add
or
stos
lea
jnp
loope
cld
xchg
push
push
push
add
jge
lcall
in
stos
cmc
loop
jae
call
mov
xor
xor
push
sbb
dec
in
and
push
lahf
mov
sbb
mov
inc
push
add
adc
test
fldl
aas
adc
mov
adc
incl
in
sbb
scas
xor
ret
fisttpl
imul
lcall
push
jp
pop
jecxz
cld
faddp
lcall
out
xor
out
inc
pop
aas
add
fs
add
or
add
add
lea
or
sub
xor
enter
add
pop
insb
mov
push
jmp
xlat
pushf
and
push
mov
fidivrs
push
es
mov
pop
inc
mov
dec
popa
test
xchg
inc
mov
cmpsl
mov
sub
cmp
rclb
fwait
test
rorb
adc
fldcw
cmc
add
hlt
cmp
or
or
jb
pop
mov
add
cmp
or
fmuls
xchg
adc
lahf
jl
inc
mov
rcll
jbe
inc
js
adc
stos
pop
cmpsb
jmp
sub
nop
das
decb
inc
inc
add
or
adc
adc
incb
mov
mov
lods
or
jl
psubusb
add
and
setne
add
jo
insb
minps
test
xchg
pop
popf
lods
rcrb
nop
pop
push
xchg
sbb
and
inc
jae
mov
and
cs
jl
xchg
popf
inc
add
imul
popa
pop
mov
in
ja
adc
mov
pop
push
push
xor
rolb
add
inc
add
data16
and
add
pop
sub
push
scas
sub
jmp
imul
jbe
push
add
xchg
or
mov
mov
pcmpgtw
ss
xchg
mov
gs
push
push
insl
or
fbstp
fs
bound
gs
mov
aas
jae
jl
lcall
xor
adc
sub
push
movsb
rcrw
movsb
outsl
mov
dec
jae
sahf
and
mov
sub
and
arpl
adc
push
pop
shrb
cmc
add
popa
fs
xchg
insb
jnp
loope
add
jnp
sbb
mov
inc
adc
cmc
mov
or
inc
and
adc
cs
repnz
scas
popa
or
daa
fildl
push
daa
add
inc
xchg
cmp
sub
es
and
and
push
pop
pusha
out
cmp
jo
and
sahf
xchg
mov
out
sahf
test
mov
xchg
inc
mov
jle
push
test
aaa
mov
or
and
sub
cmc
lods
jnp
sbb
pop
lods
add
mov
jo
push
xor
cmovle
jmp
dec
xchg
and
xchg
call
cmp
ret
outsl
cmp
jnp
pop
or
aaa
daa
scas
and
jg
add
arpl
aas
and
pop
add
push
push
cmp
fwait
movsb
orl
imul
aaa
push
jbe
imul
or
sub
push
lods
mov
jp
cs
or
daa
arpl
sub
mov
imul
xor
icebp
mov
gs
mov
aad
outsb
jo
xchg
xchg
xchg
push
lret
and
js
out
mov
mov
and
mov
inc
mov
add
and
mov
stos
fidivl
mov
arpl
cwtl
lea
mov
cmp
sub
pop
out
add
cmp
sbb
xor
inc
je
mov
adc
cmp
in
push
pop
fisttps
stos
bound
lcall
or
aaa
lcall
adc
inc
xchg
aas
fbstp
or
xor
push
sbb
jns
popa
pop
mov
lea
dec
pop
cmp
ja
test
jp
mov
outsb
imul
loopne
adc
mov
clc
outsl
cs
insl
pop
outsb
pop
jae
adc
adc
push
fwait
pop
mov
lds
pop
mov
pop
sub
pusha
pop
xchg
shrb
pop
sbb
fs
pop
or
push
fst
js
sbb
movb
jg
roll
lahf
mov
pop
jne
mov
add
movsl
mov
fwait
xchg
add
mov
push
addb
jae
add
ja
cmp
mov
gs
cwtl
xchg
push
sub
icebp
insb
push
imul
cmp
sbb
sbb
adc
inc
xchg
push
outsb
jo
popa
arpl
ficoms
mov
mov
fldcw
int3
mov
sbbl
xchg
push
pop
insb
nop
pop
mov
cmp
sub
sub
dec
pop
xorl
pop
sbb
cmp
jo
aaa
xor
add
add
add
js
mov
test
les
pop
push
mov
outsb
xor
insb
or
jne
xor
and
std
lods
pusha
ret
inc
xchg
icebp
mov
loopne
or
pop
sub
mov
pop
sub
inc
add
test
inc
dec
push
add
mov
loopne
push
lea
pop
inc
rol
outsb
mov
and
sbb
adc
icebp
or
mov
outsl
test
push
and
and
rolb
pop
lods
inc
sub
enter
push
std
int3
test
mov
subl
sti
mov
xchg
sbb
inc
imull
ss
ds
dec
test
adc
negb
dec
ret
and
and
nop
adc
popf
data16
inc
out
dec
lock
in
insl
daa
aad
in
xchg
sub
pop
push
mov
dec
popa
js
aaa
inc
push
cmp
and
dec
push
cmp
cltd
fcmovnb
push
subb
fsub
push
in
rorb
xchg
xchg
orl
pusha
adc
das
cli
cmp
ljmp
mov
out
and
cmpb
stos
inc
ret
jl
ret
and
mov
jo
test
xchg
mov
and
cs
adc
imul
jge
fsubrl
inc
jle
rolb
inc
mov
lods
sub
imul
pop
xchg
pop
push
sbb
xchg
add
cs
aad
rol
mov
call
mov
adc
adc
lcall
outsl
aas
outsl
sbb
push
xor
inc
into
stc
insb
jns
push
shl
arpl
mov
hlt
mov
mov
scas
inc
xor
test
adc
popa
mov
pop
xorl
pop
ss
mov
arpl
lcall
sub
cmpsb
and
lds
inc
push
dec
sub
mov
sbb
xlat
xchg
loopne
jb
push
mov
push
sbb
cs
icebp
ret
stc
push
xor
sub
push
cmpsl
mov
adcl
scas
adc
mov
xchg
test
out
inc
sbb
js
sbb
out
and
shrl
push
or
xor
bound
mov
fiaddl
adc
outsb
add
stos
cli
rclb
daa
sub
or
push
pop
shll
push
xchg
ret
xchg
daa
hlt
inc
nop
out
dec
push
push
dec
cmp
pop
and
test
pop
dec
cmp
int
push
and
or
sbb
pop
mov
les
lock
aas
and
add
dec
addr16
push
add
outsb
mov
pop
mov
daa
pop
push
fsubrl
or
jge
popa
bound
sub
and
xchg
push
push
int
lods
inc
pop
and
pop
mov
mov
dec
sub
dec
inc
test
mov
xchg
add
insb
icebp
stos
add
jns
out
or
pop
add
and
add
pop
push
jb
addr16
sub
mov
js
mov
cs
mov
jo
cmp
xor
push
mov
lds
xor
mov
data16
jl
cmp
push
cs
outsb
jne
and
push
adc
jbe
push
cwtl
arpl
push
add
or
js
mov
cmp
push
mov
mov
popw
jno
add
inc
mov
cwtl
mov
outsb
pop
adc
out
pop
test
push
cmp
xchg
jo
pop
push
and
pop
pop
push
pop
mov
outsl
dec
dec
inc
cs
push
push
sub
inc
fadds
ja
cmp
sub
cli
cmpsb
cwtl
dec
sahf
out
sahf
push
mov
cmp
out
in
hlt
add
adc
cmp
repz
xor
and
add
adcb
push
jo
mov
mov
jns
out
int3
aam
fsub
pop
in
sahf
in
lock
dec
out
sahf
out
adc
sub
cmp
out
sahf
inc
dec
push
pop
fs
jns
out
je
test
out
test
mov
sahf
enter
in
cmp
repz
add
adc
sbb
cmp
repz
cmp
iret
repz
push
pop
pusha
fs
cmp
je
jl
repz
repz
cmp
mov
mov
iret
repz
fsub
in
hlt
jns
out
cld
add
adc
out
sahf
out
xor
inc
dec
sahf
out
sahf
push
pop
pusha
fs
je
sahf
out
jl
cwtl
movsb
lods
out
sahf
out
rcl
in
dec
repz
lock
cld
add
sbb
repz
sub
cmp
cmp
repz
push
push
pop
pusha
iret
repz
push
mov
iret
repz
movsb
lods
mov
add
sub
push
cmc
out
dec
ss
and
popa
mov
xchg
add
inc
in
jns
sub
andl
aas
jle
rcll
pop
fs
jne
sub
xchg
push
call
add
xlat
pop
xchg
inc
jne
ret
lods
loopne
insb
and
jge
add
mov
pop
add
insb
pusha
push
inc
rorb
xchg
mov
in
inc
fs
xor
xor
fcoms
mov
adc
push
mov
xor
ss
cmp
and
fists
cmp
dec
sahf
cmp
aas
push
xor
dec
loope
dec
xor
jbe
add
outsl
outsb
les
repnz
lea
jne
imul
sahf
adc
icebp
xorl
push
pop
bound
cltd
ja
mov
adc
jno
sub
add
iret
cmpsb
pop
pop
inc
insb
rcll
imul
bound
imul
or
push
sub
out
jne
mov
outsl
clc
push
sbb
add
xor
in
out
pop
push
xor
jo
out
mov
mov
jp
jae
sbbb
push
jp
arpl
bound
push
mov
or
test
cmpsl
orb
pop
cmpsl
insl
neg
inc
aas
fidivs
push
insb
jne
cmp
jne
adc
push
adc
aas
push
pop
loope
or
in
and
jmp
and
cmp
push
push
mov
pop
push
imul
jbe
add
xor
xchg
outsb
dec
ret
xchg
data16
and
js
data16
sbb
sbb
pop
cmp
or
sahf
mov
out
adc
leave
xor
mov
pop
ret
test
mov
ficoms
das
push
sbb
xor
xor
sahf
lds
insb
dec
outsl
popa
lret
fnstenv
mov
mov
rorb
mov
mov
js
and
imul
sbb
inc
int
add
bound
cmp
add
sbb
adc
sub
push
adcb
popa
aaa
add
push
cmp
push
dec
faddp
pop
dec
test
add
xchg
adcl
xor
cs
data16
jmp
cwtl
adc
add
dec
dec
inc
dec
pop
and
loop
xor
cmp
push
push
add
pushf
sbb
dec
dec
inc
dec
dec
sub
add
inc
adc
in
fimuls
mov
push
dec
dec
dec
inc
inc
test
mov
xchg
sbbb
fimuls
lods
mov
imul
sbb
loope
outsb
sbb
cmp
incl
mov
push
dec
push
cmp
pop
iret
xor
mov
or
scas
aad
outsb
dec
cs
mov
outsb
daa
add
lea
and
mov
xchg
pop
ret
push
dec
mov
mov
inc
and
inc
cmpsl
adc
and
pop
pop
push
adc
daa
push
cmp
pop
cmc
mov
xchg
call
pop
lds
cmpsl
scas
loopne
lods
fadd
xchg
aad
popa
fcoms
jp
out
les
push
ds
dec
inc
xlat
pop
and
add
aas
jp
cmpb
mov
xchg
cmc
pop
bound
adc
addb
test
jle
and
int3
and
ret
jae
and
pop
adcl
rorl
sub
mov
mov
cmp
cmpsl
pop
and
out
xor
mov
adc
pop
mov
mov
movsl
cwtl
out
mov
cmp
int
mov
clts
insl
or
and
cmp
imul
pop
inc
and
jb
inc
movd
jle
xor
push
lods
stos
pop
add
notl
mov
inc
mov
mov
or
push
and
pop
rclb
call
dec
sbb
nop
jbe
filds
arpl
rcrl
xlat
jbe
push
dec
aaa
in
push
dec
mov
add
mov
mov
and
in
addl
sbb
xor
pop
cmp
mov
mov
cmpb
xor
ljmp
roll
adc
sub
insl
adc
scas
fbstp
arpl
sarl
push
lea
cltd
push
outsb
cmp
iret
and
xor
cmp
pop
outsl
add
pop
add
ja
inc
push
mov
dec
inc
dec
push
inc
push
pop
pop
xchg
lret
xlat
push
aam
sarb
xchg
scas
jg
adc
inc
push
push
xor
push
adcb
aaa
outsb
into
push
sahf
push
push
inc
aad
push
pop
dec
lods
in
push
inc
jg
push
push
sarl
js
jb
aas
data16
xorb
outsb
xchg
iret
pop
pop
xchg
mov
jae
jo
inc
fdivs
fisubrs
sbb
inc
push
xchg
inc
jo
inc
fidivl
and
daa
pop
iret
lea
mov
lea
ret
aaa
popa
push
movd
xchg
or
jb
mov
dec
aad
popa
xor
pushl
shrl
pop
xchg
gs
sub
inc
xor
cmp
mul
pop
push
iret
loopne
mov
jg
sahf
mov
xchg
ja
icebp
mov
daa
or
add
or
into
xchg
fistl
inc
dec
inc
sub
loopne
out
bound
scas
ficoml
jo
xorl
stos
imul
orl
bound
test
test
inc
inc
push
das
push
lods
mov
push
xor
cmp
push
out
mov
insl
xlat
push
add
pop
jge
push
dec
xor
daa
out
cmp
shr
inc
mov
test
outsl
push
mov
in
fs
imul
rolb
pop
repnz
jae
inc
js
shll
mov
jo
mull
adc
shll
fisttps
aam
mov
lock
test
stos
cs
repz
adc
ljmp
pop
or
inc
ficoml
xorb
out
add
add
lahf
cmp
cmp
and
in
ds
loope
jae
das
lock
xor
outsb
push
or
dec
inc
les
add
and
dec
add
mov
lods
jb
cs
mov
fldt
dec
cmp
pop
push
outsl
loope
pusha
lahf
inc
loopne
dec
or
xlat
test
dec
inc
fisttps
fcoml
ret
fxch
push
cs
fnstenv
ficoms
sub
pop
add
sub
mov
int
or
aas
xchg
xchg
lods
fnstsw
pop
mov
mov
push
outsb
jae
mov
adc
sbb
mov
dec
push
rolb
xchg
shlb
xor
or
or
arpl
stos
test
repz
or
out
and
lods
xor
mov
cmc
and
or
inc
pop
mov
and
pop
add
mov
inc
subb
add
push
outsl
pop
ja
pop
mov
bound
inc
xorb
daa
jne
push
pop
shrl
fiadds
addr16
push
or
fs
inc
lea
pop
push
push
fsubl
rcrb
shlb
or
je
out
das
xor
fdivrs
outsl
cmp
iret
mov
and
lods
push
ss
mov
fldenv
mov
sub
mov
xchg
add
mov
test
shrb
stos
imul
test
pop
push
loope
dec
and
ja
pop
arpl
push
sbb
es
pop
add
divl
dec
sub
sbb
outsl
daa
pop
jnp
js
arpl
movhps
sbb
pop
loopne
dec
dec
leave
rcr
in
xlat
aaa
inc
rolb
dec
mov
cmpb
imul
push
dec
lds
xchg
repnz
push
sbb
aas
or
fwait
add
loope
incb
jo
push
mov
sarb
aaa
dec
cmp
inc
enter
addr16
imul
add
iret
movd
xchg
popf
mov
imul
or
push
pop
les
lods
aaa
shrl
cmpsl
fsubrs
xchg
push
out
xor
mov
cli
int3
je
push
dec
push
dec
inc
pop
jnp
xor
jmp
repz
push
test
rolb
cmp
arpl
out
into
fisttpll
add
inc
xor
mov
push
out
test
test
and
and
dec
dec
xchg
filds
push
enter
pushw
and
shrl
fldenv
or
loope
les
xchg
addr16
test
rorb
rclb
mov
push
push
loop
sbb
or
mov
sbb
or
inc
cmp
pop
movsl
mov
push
scas
mov
inc
ljmp
aaa
aas
mov
sbb
ret
push
icebp
mov
lods
or
outsl
and
sbb
ret
inc
xor
pop
ret
push
adc
aas
inc
mov
mov
imul
xor
mov
rclb
ljmp
aas
jnp
subl
cltd
popf
aaa
fiaddl
sub
testl
push
outsl
aad
aas
jge
sbb
mov
push
or
sbb
movsl
adc
inc
push
push
jno
and
mov
je
mov
rcrb
dec
dec
push
mov
int
out
add
ljmp
inc
or
fcmovnu
pop
jbe
out
je
jo
movsl
adc
and
push
sub
sarl
daa
data16
test
push
loop
dec
in
imul
pop
adc
rolb
leave
jbe
outsl
ja
lods
test
inc
insl
iret
and
and
addb
aas
mov
bound
add
push
jl
popl
in
push
cmp
inc
xor
adcb
jo
jmp
push
aam
aad
movl
popa
pop
std
jno
jo
push
push
jo
insl
jae
int
push
mov
inc
cmpsl
jmp
and
push
not
adc
xchg
and
arpl
xor
pop
inc
enter
sahf
xor
insl
xlat
outsl
adc
mov
xor
adc
mov
outsl
pop
xor
mov
pop
xor
push
xchg
mov
addr16
imul
push
aas
loopnew
xor
andb
sbb
das
cmp
cmpsl
sbb
ret
jnp
push
jo
pop
lahf
inc
mov
std
daa
orb
loope
and
inc
fidivrs
aas
popa
jns
xlat
mov
dec
ss
popf
rclb
cwtl
inc
mov
cmp
xor
pop
adc
dec
out
add
insb
push
outsl
icebp
adc
add
inc
and
loope
lret
or
dec
mov
fwait
mov
and
xchg
scas
test
jge
xor
mov
pushf
pop
sarl
mov
lods
jne
cs
imul
test
das
out
testl
fmuls
jbe
push
fdivs
aam
aas
pop
dec
add
jbe
pop
or
and
das
dec
jge
xchg
rol
pop
mov
js
outsl
xchg
dec
dec
inc
add
pop
lahf
inc
loope
push
cmp
jno
push
outsb
xchg
xor
arpl
cli
add
iret
inc
cmc
dec
cmp
outsl
jno
pop
dec
add
loopne
adc
xor
xchg
dec
cld
fsubs
lock
sub
adc
push
fldl
adc
fsubs
lds
mov
orl
dec
jb
lods
sbb
pop
in
fimull
lds
fildl
outsl
pop
dec
push
call
or
adc
mov
out
xor
xchg
mov
or
xchg
jb
pusha
sub
outsl
push
mov
incl
cmp
stos
pop
insl
sbbl
jmp
shrb
ja
cmpl
mov
repz
pop
inc
sub
xchg
rclb
sub
xchg
mov
aad
adc
pop
outsb
adc
cmp
ret
sbb
out
lds
push
jo
pop
sub
lds
ret
xor
popa
std
cmpsb
sub
icebp
setl
fs
sbb
and
orb
stos
or
movhps
in
push
or
rorb
sarl
mov
movsb
mov
inc
add
pop
or
inc
pop
adcb
add
mov
sbb
add
pop
inc
and
das
or
xchg
bnd
mov
orl
sub
jo
jg
jb
ss
or
jbe
mov
pop
fdiv
add
lds
add
pop
ja
les
jno
call
gs
inc
and
add
add
popa
mov
add
or
insb
add
and
std
inc
or
out
mov
push
adc
or
mov
xrelease
adc
addl
mov
add
cmp
imul
mov
cmpb
addr16
jo
or
bound
sub
mov
in
outsl
xlat
mov
add
push
cmc
xor
add
pop
inc
jg
add
lahf
jae
mov
call
arpl
push
testl
shl
aas
addl
in
dec
aaa
adc
adc
xchg
sub
jo
ds
push
les
test
jbe
lods
add
popf
lahf
bound
pop
or
inc
or
push
push
shll
int3
test
or
dec
sbb
inc
mov
sub
sbb
xor
pop
fwait
outsl
or
iret
lods
div
sub
fadd
push
push
lea
cmp
les
adc
call
or
xchg
or
test
dec
clc
mov
sub
ret
mov
lret
xor
or
inc
mov
lret
sub
jo
dec
jg
mov
ret
in
ja
je
jae
push
jne
push
sbb
jae
jge
push
popf
subl
xchg
xor
subl
mov
dec
push
cmpsb
jne
je
add
push
popa
clc
out
daa
xor
add
mov
and
addl
inc
pop
daa
push
jl
cmp
mov
cmp
mov
push
xor
dec
xor
pop
ja
negl
lahf
push
pop
ss
xlat
daa
add
aaa
mov
jne
push
lods
inc
les
add
add
add
out
iret
fcomp
push
loopne
fs
and
push
insb
or
adc
inc
call
inc
push
inc
dec
and
pop
inc
push
pop
inc
inc
dec
dec
xor
jmp
xchg
lea
adc
das
inc
dec
in
mov
iret
and
or
jp
shll
lret
cld
js
jns
aam
pusha
mov
movsl
sbb
adc
imul
stos
fnsave
dec
adc
shl
dec
xchg
addr16
xchg
arpl
xchg
mov
outsl
xor
les
pop
adc
adc
xlat
cmp
push
mov
in
jae
fildl
xor
les
nop
inc
mov
cmp
insl
outsl
and
fsubrs
cli
imul
cmp
jae
lds
pop
xor
hlt
pop
xor
mov
arpl
mov
and
xchg
addl
enter
mov
mov
orb
adc
dec
and
sub
pop
add
jae
test
mov
jae
xor
pusha
mov
stos
insl
cs
jne
mov
add
daa
push
and
jno
or
adc
xchg
sbb
push
jno
and
mov
jmp
dec
outsl
dec
add
or
jae
ljmp
stc
das
mov
or
sub
xor
xor
std
xchg
and
or
inc
xor
inc
jl
mov
add
lret
js
inc
and
xor
xor
push
push
and
mov
clc
or
cmpl
mov
adc
je
lcall
call
ret
add
divb
pushl
repnz
push
call
pop
pop
das
xchg
imul
pop
push
mov
ret
call
inc
add
pop
pop
out
add
push
sub
xchg
cld
lea
mov
rep
mov
stos
push
mov
push
push
or
call
add
mov
clc
push
test
ret
add
imul
xor
mov
or
sbb
inc
pop
lret
imul
pop
pop
mov
dec
sub
mov
mov
adc
fdivrs
dec
movsl
mov
pop
dec
mov
mov
es
push
adc
mov
pop
sbb
test
cmp
cmp
xor
inc
pinsrw
cmc
orl
inc
push
push
xchg
dec
ss
dec
dec
jp
jo
sbb
in
nop
and
pop
add
and
add
xchg
idivl
mov
sbb
imul
cs
inc
jne
mov
inc
iret
add
mov
mov
js
dec
negl
popf
sbb
fcmovnb
xchg
pop
push
imul
mov
lods
dec
mov
sub
add
das
inc
pop
dec
and
dec
divl
imul
inc
lock
es
int3
push
push
push
jne
or
add
addr16
test
aaa
push
loopne
push
xchg
xchg
or
shrb
mov
imul
lods
aaa
pop
xchg
cwtl
and
dec
rcrl
dec
inc
outsl
add
add
inc
adc
popa
inc
add
iret
popa
popl
shll
popa
das
add
mov
in
push
sub
in
xor
dec
xchg
mov
ret
mov
xchg
mov
adc
das
sub
sub
mov
rorb
arpl
loope
orb
sub
addb
dec
les
pop
and
pusha
out
pusha
xchg
add
lahf
mov
add
add
mov
insb
pushl
push
jae
sub
add
imul
add
outsb
movsb
push
scas
pop
add
incl
cmp
fdivp
ds
dec
fsubs
or
or
bound
sub
sub
dec
add
inc
scas
in
test
mov
add
or
push
push
sbb
add
scas
movsb
pop
add
jg
mov
cmpb
pop
add
and
or
jg
inc
outsl
cwtl
mov
pop
inc
lock
sub
inc
enter
cli
adc
add
cmp
aas
add
inc
sidtl
mov
add
test
mov
pop
add
ss
xlat
popa
add
out
outsb
sbb
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
push
hlt
inc
ficoms
sbb
inc
pop
pop
jge
and
mov
cmp
lods
mov
imul
mov
push
mov
das
inc
call
mov
sahf
jl
sti
jle
add
mov
jns
and
into
pop
movsl
sbbl
fildll
mov
daa
mov
cmovo
decl
mov
sbb
in
call
idivl
jle
adc
push
ficompl
mov
xor
fcomp
loopne
jb
jle
rorb
in
fnsave
sbb
cs
nop
mov
xchg
xchg
fwait
cmpsb
adc
iret
js
inc
dec
imul
or
repz
aam
je
or
stc
cmp
or
clc
rcll
jns
jns
enter
xlat
push
sbb
jns
out
sbb
sbb
ror
repz
sbb
cmp
repz
pusha
jp
cld
sbb
iret
repz
cmp
add
scas
push
xchg
cld
xor
add
ljmp
xchg
jg
mov
repz
or
xor
popa
jne
xlat
mov
mov
mul
aaa
add
loopne
dec
bound
xor
mov
dec
xorps
inc
fldt
push
inc
xorps
xlat
lock
sub
push
dec
jbe
lock
push
sbb
es
push
push
fimull
push
inc
adcl
loopne
mov
sbb
push
push
push
or
mov
dec
add
push
dec
inc
pop
push
mov
mov
enter
repnz
inc
inc
pop
or
xor
repnz
or
inc
inc
inc
mov
jl
and
cmp
in
movsb
push
or
and
or
or
xlat
push
nop
push
pop
push
test
shl
adc
xor
inc
add
lret
push
repnz
push
dec
push
scas
push
add
and
xor
mov
or
pusha
push
push
dec
scas
push
push
repnz
dec
add
pop
sbb
cmpb
dec
mov
sbb
xchg
or
sub
ljmp
pop
cmp
pop
inc
inc
add
aaa
push
xchg
jl
xchg
inc
add
inc
dec
repz
pop
push
push
add
cmp
repnz
inc
dec
and
cmp
repnz
add
inc
dec
dec
sub
push
repnz
push
inc
push
sub
cld
and
pop
push
add
aad
push
inc
pusha
and
xchg
xor
repnz
leave
scas
hlt
push
inc
inc
push
xor
dec
leave
iret
add
inc
dec
dec
cmp
iret
add
cmp
in
push
pop
iret
add
dec
cmp
pop
add
push
dec
mov
or
adc
add
pop
stos
mov
or
xor
xor
lock
inc
inc
push
sub
daa
fisubs
sahf
fldt
das
or
add
int
or
es
dec
in
mov
xchg
jg
dec
pop
dec
add
jg
pinsrw
push
cmp
dec
add
dec
mov
add
mov
inc
push
dec
fbld
cmp
pusha
adc
dec
pop
dec
fmul
dec
insb
lret
leave
in
sbb
adc
push
loopne
sbb
add
scas
push
sbb
pop
dec
dec
add
fistpl
hlt
fstpt
jb
int
mov
fldt
int3
pop
mov
insb
xlat
mov
fisttpl
fstpt
in
cmovl
pop
sahf
cmovb
cmp
lret
xchg
das
dec
add
dec
add
add
mov
stc
push
add
ficoml
jle
fisubrl
les
mov
shld
add
dec
add
fsubp
sub
jbe
fstpt
sub
lcall
push
dec
push
or
jge
int3
ds
clc
in
add
push
push
mov
mov
inc
add
pop
sub
dec
add
cmove
inc
in
mov
inc
add
cmova
or
out
add
out
cmovle
aam
jl
repnz
add
inc
add
add
add
push
inc
or
into
push
fsubrs
insl
in
fadds
imul
mov
mov
cmp
repz
movsb
mov
iret
xrelease
pop
pop
sahf
out
sahf
pop
push
push
dec
dec
inc
jns
out
inc
cmp
xor
in
sahf
out
and
adc
out
lcall
in
sahf
out
sahf
rol
sarb
cwtl
cmp
je
mov
add
push
test
mov
fiaddl
sahf
add
jg
addb
fsubrs
adcb
stc
mov
cli
or
in
ds
pushf
or
ret
mov
adc
xchg
cwtl
push
and
cld
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
incl
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
outsl
clc
decl
mov
decl
inc
outsl
loopne
jmp
xchg
ljmp
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
das
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
inc
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
in
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fdivr
jmp
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
lods
int
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
xor
cmp
mov
pop
xchg
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
subl
std
scas
push
xchg
jge
pop
ficomps
frstor
out
jae
lahf
pop
push
js
dec
repz
mov
repz
xor
aaa
in
cmp
cmp
jl
out
xchg
mov
repnz
sub
insb
add
lods
or
test
test
adc
mov
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
push
adc
mov
inc
add
pop
add
inc
pop
dec
sbb
push
and
and
lahf
add
inc
push
mov
iret
xor
orb
fidivrs
dec
or
inc
cmpsb
mov
sbb
sub
test
sbb
dec
dec
int
sbb
jge
and
inc
inc
outsb
fs
sahf
pusha
lahf
adc
dec
sub
dec
outsl
and
addl
push
push
xchg
pop
insb
pushf
imul
adc
cltd
pop
push
sahf
sub
icebp
rolb
loopne
cmp
mov
outsl
push
imul
popa
insb
icebp
popa
inc
mov
jnp
sub
js
sbb
fs
mov
inc
mov
pop
xchg
lock
mov
mov
popf
sbb
sbb
mov
adc
mov
rorl
bound
adc
nop
jnp
mov
sbb
dec
outsl
imul
adc
gs
sub
mov
in
adc
pop
jmp
das
sbb
sahf
inc
popl
aam
push
ficoml
lahf
aas
xchg
xor
xchg
lahf
jnp
mov
add
aaa
popl
stc
pop
inc
popa
je
mov
cmp
push
inc
imul
xchg
outsb
shrb
sbb
push
jo
gs
pop
call
sbb
lock
dec
addr16
lahf
filds
shrb
push
pop
mov
add
sub
fisubrl
imul
or
add
xchg
sbb
movsb
std
inc
push
mov
inc
xchg
sbb
sbb
jns
cmp
mov
lods
and
mov
xor
popa
inc
adcl
insl
cmp
js
outsl
jbe
pop
mov
cmpsb
dec
fs
inc
imul
mov
xchg
es
psubusw
xor
xchg
hlt
and
add
jne
int3
push
xchg
pop
ficompl
sti
out
jmp
dec
add
outsb
fcmove
mov
jbe
adc
inc
dec
mov
das
shll
cmpsl
push
push
sbb
xchg
dec
xor
stc
pushf
xlat
inc
adc
ret
dec
xor
mov
dec
outsb
out
andb
test
aad
mov
lock
das
out
imul
js
movsb
xor
and
xchg
bound
mov
and
cmpsl
push
insb
jae
sbb
push
dec
insl
shrb
xor
sbb
add
push
inc
xor
call
call
negl
add
add
mov
pop
sbb
xor
pop
add
dec
inc
sti
sbb
es
adc
push
jp
mov
dec
adc
push
stos
inc
js
jo
cmpsb
insb
push
cmp
xor
push
lret
inc
shrl
sub
push
filds
mov
push
sbb
bound
jns
ss
insb
cmpl
sub
subb
fiadds
pop
jne,pt
jecxz
mull
fs
mov
iret
push
fs
jo
push
cmc
adc
push
test
cltd
push
arpl
fmuls
and
jnp
dec
das
inc
roll
dec
adc
dec
inc
jbe
pushf
dec
and
pop
sub
loopne
sidtl
add
ds
fbld
add
cmpb
xchg
rcrb
cs
add
and
nop/reserved
mull
pop
cwtl
adc
mov
popa
pop
or
insb
mov
add
out
sbb
adc
iret
xor
pop
add
clc
adc
cmp
cmpsl
add
and
cmp
xlat
add
pop
xchg
rolb
jb,pn
lock
imul
push
lods
add
inc
cs
mov
push
into
ds
int3
shrb
push
cmpsb
or
rorl
mov
xor
iret
mov
dec
out
mov
ret
inc
inc
ss
movsb
push
popf
and
sbb
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
