or
add
add
add
add
add
xchg
rorl
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
int
add
adc
or
and
or
xor
or
inc
rorl
push
rorl
or
add
add
or
add
cld
rorb
pushf
rorb
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
or
add
adc
add
add
add
sbb
add
and
add
sub
push
ficomps
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
mov
mov
add
sub
loopne
mov
cli
mov
xchg
enter
sub
pop
and
pop
ficompl
push
xor
push
fldt
mov
xchg
push
int
dec
lods
lock
jne
push
sbb
fbld
int
fdivl
arpl
pop
je
roll
pop
fnstsw
xchg
xlat
aam
sub
aaa
popa
dec
incb
pop
sub
mov
fdivs
pop
in
sub
sti
and
sbb
test
push
cmpsl
inc
push
adc
int3
push
inc
push
cmpsl
fidivl
or
pop
hlt
xchg
orl
add
out
leave
mov
rol
or
dec
mov
pusha
test
cli
pop
sbb
pusha
push
icebp
mov
push
nop
stc
mov
cmp
dec
cli
fdivl
dec
leave
and
outsb
scas
dec
iret
enter
jbe
mov
mov
or
test
in
add
mov
paddusw
jae
je
push
dec
sbb
inc
out
xor
xchg
sbb
cmp
es
and
sub
adc
mov
out
loopne
jmp
add
jns
mov
pop
mov
push
pushl
adc
xchg
xchg
aam
and
jnp
sbb
pop
pusha
inc
nop
pop
out
mov
xchg
xlat
cld
nop
inc
inc
mov
mov
inc
push
dec
out
ss
sbb
push
jmp
sbb
iret
test
fnsave
adc
or
or
pop
shl
fldt
xchg
push
adc
out
stos
xchg
or
or
fsin
inc
pop
mov
jno
sti
ljmp
fcomi
lds
and
sarl
cmpsl
pop
fwait
test
sarb
leave
jle
dec
xchg
addl
mov
scas
jb
add
pop
dec
pop
sti
mov
loopne
test
js
mov
add
or
mov
cmc
cmp
fimuls
lret
mov
fstp
imul
enter
dec
nop
das
inc
adc
add
xchg
pop
in
or
out
sysret
xchg
push
repnz
sub
mov
loope
xor
xor
ja
popl
lock
testb
lret
shlb
jl
imul
xchg
mov
pop
jno
paddsw
repz
xchg
push
mov
xchg
ret
jne
scas
jne
dec
jno
fs
push
loope
sub
inc
xchg
sub
jnp
cmpsb
push
adc
inc
cmp
out
adc
mov
insl
add
dec
hlt
or
adc
jg
xchg
pop
inc
pop
movsl
nop
inc
add
jne
lods
dec
xor
pop
mov
es
je
push
or
mov
sbb
pusha
sbb
mov
sahf
imul
les
stos
aad
loope
movsl
mov
ror
jo
jmp
rcrl
or
mov
cmc
pop
dec
fucomip
push
popa
mov
aam
xor
xorl
cmp
mov
mov
jno
mov
xchg
push
mov
pusha
mov
bound
adc
test
inc
inc
mov
jle
mov
xchg
mov
out
mov
pop
stos
mov
hlt
stos
lret
jl
push
cmp
popf
inc
push
cmp
fmull
pop
pushf
add
bnd
xchg
xor
mov
pop
push
xchg
fld
test
outsl
pop
fs
shrb
pushf
repz
int3
and
or
pop
arpl
mov
cltd
mov
jnp
cmp
sti
fisttpl
jg
stos
mov
sub
nop
mov
xchg
loope
test
or
pushf
lods
xchg
jle
into
jle
add
call
mov
mov
push
out
sub
cmp
lahf
int
inc
cmp
imul
push
leave
les
dec
mov
popl
xor
imul
fimuls
cld
cmp
pop
jno
and
movsb
pop
inc
cwtl
push
test
adc
sub
jnp
jne
mov
jmp
push
movsl
cwtl
and
pop
xor
cmp
sbb
loope
mov
adc
repz
cmp
inc
movsb
jb
sub
jge
rcl
fsubrs
xorb
orb
cmp
das
dec
mov
call
jmp
xchg
fcmovnbe
add
xor
sub
mov
push
jmp
jb
sti
pushf
ret
daa
fsubrl
sbb
pop
std
sub
jb
or
lcall
dec
adc
jno
shll
fwait
push
repz
push
insl
or
ret
mov
cmp
pop
loopne
shll
int3
jmp
jp
cld
lods
daa
daa
je
cli
ljmp
pop
adc
push
mov
mov
adc
divb
lahf
fwait
and
out
xchg
jbe
add
sbb
cmp
mov
stos
xchg
stc
xchg
xchg
jae
jo
jb
mov
mov
fdiv
or
incb
fiadds
inc
cmpb
out
aad
dec
fidivrs
and
outsb
out
les
ds
popa
xor
and
pop
lods
adc
cmp
lock
pop
adc
mov
xchg
cltd
leave
call
mov
shll
adc
jae
into
pop
rclb
test
dec
bound
jmp
jl
out
dec
push
lret
cmp
mov
repnz
pop
sub
sahf
repz
sbb
leave
push
jge
add
or
inc
jnp
test
call
jle
xchg
stc
gs
adcb
outsb
inc
loop
inc
sub
out
xchg
mov
adc
xchg
mov
and
and
inc
movsl
imul
imul
jg
insl
sbb
stos
scas
data16
fxtract
pop
test
pusha
addr16
sarb
insl
adc
cmp
mov
shll
pop
popa
mov
insb
jg
dec
mov
cli
stc
incl
cmpsb
inc
icebp
and
xchg
dec
mov
add
adc
les
and
jnp
pop
push
cld
xchg
in
mov
mov
test
fsubrs
sti
push
and
std
cltd
das
push
cwtl
clc
xor
out
aam
cmpsl
into
movsl
mov
inc
jne
call
jno
outsb
or
nop
inc
rol
lret
mov
jbe
clc
fsubrl
push
in
in
pop
add
mov
jo
fnstcw
cmpsb
and
or
xchg
pusha
popf
into
or
lahf
insb
mov
xchg
adc
dec
cmp
scas
push
insl
mov
stos
xchg
xor
and
outsb
xor
pop
xor
push
jns
jg
jno
imul
or
imul
cmp
xchg
xor
or
aas
movsl
mov
sub
js
leave
leave
stos
pushf
scas
cmp
enter
pop
das
aad
sub
cmp
mov
mov
mov
push
data16
xchg
cmp
pop
adc
sbbb
mov
das
adc
and
mov
sub
adc
xchg
aad
aaa
jbe
rorb
mov
adc
jge
sub
mov
xchg
mov
sbb
daa
stc
mov
stos
fistl
nop
inc
mov
mov
nop
popa
or
lea
xor
lcall
adc
xor
pop
push
sbb
popf
add
bound
bound
or
jno
pushf
cli
lods
mov
xor
stc
aas
xchg
pop
hlt
test
pop
aas
pop
roll
mov
xor
arpl
into
add
stos
stos
push
ret
jns
mov
lods
popa
push
or
iret
and
mov
and
fildl
mov
ja
mov
ss
movsl
movsl
mov
xchg
cltd
mov
lahf
movsl
jne
cli
popf
pop
std
lcall
mov
sbb
or
adc
adc
mov
stos
jns
inc
or
pop
jl
popf
cmpsb
test
dec
add
rorb
ds
shlb
and
repz
sub
imul
test
popf
mov
cmp
test
pop
sbb
dec
jge
sub
imul
push
cli
pushf
loopne
movsl
push
fdivrl
sbb
sub
flds
and
mov
sbb
cmp
xor
aad
push
pop
xor
mov
repz
sbb
int3
xor
mov
xor
es
orl
dec
add
xor
call
mov
pop
sub
inc
test
test
je
sbb
mov
jle
or
daa
fildl
repnz
push
adc
adc
sub
das
xor
outsb
sub
mov
mov
or
ljmp
aas
divl
lcall
es
push
lret
imul
mov
repnz
mov
cmpsl
push
test
ss
lret
in
and
cs
mov
mov
sbb
loop
xchg
imul
or
sub
nop
imul
lret
jne
mov
push
outsb
daa
jnp
lret
or
fcomi
pusha
movsl
inc
xchg
xor
mov
movsb
addr16
je
mov
xchg
subl
dec
addr16
lea
gs
add
sbb
mov
cs
fdivl
xor
out
mov
cmp
adc
inc
or
jg
repz
inc
cmpsb
jo
inc
inc
daa
lock
rcll
pop
popf
fs
and
je
or
fs
mov
int3
out
pop
loope
push
les
lea
pop
and
xchg
add
hlt
sub
enter
sub
cmp
subb
clc
cs
lcall
inc
andnps
negb
loop
popa
fwait
push
subb
xor
in
sub
xor
fists
lods
pop
mov
fwait
lea
jmp
loopne
push
push
dec
addb
imul
ljmp
shl
adc
pop
jb
adc
sbb
jns
push
cmp
xchg
mov
or
sbb
cwtl
jne
arpl
stos
mov
cmpsb
pinsrw
and
mov
or
xchg
es
dec
xchg
pop
sub
shlb
dec
sbb
daa
jp
lret
int3
push
je
testl
jl
pop
and
jo
ss
cmp
sub
flds
pop
sub
rcrb
lea
lea
adc
sbb
mov
xchg
ret
cmp
mov
jg
movq
icebp
aaa
mov
dec
arpl
pop
fsubl
xor
push
pop
mov
dec
popf
das
mov
fcomps
push
cmpsb
dec
test
cli
push
pusha
stos
sti
sub
cmp
sarb
mov
inc
and
imul
call
mov
mov
divb
loopne
ret
push
xchg
xchg
push
cmc
ficoml
ucomiss
mov
inc
filds
add
sbb
shlb
sub
jno
and
lcall
adc
shrb
mov
pop
shrb
decb
insb
jl
lods
lcall
mov
push
push
adc
in
dec
pusha
enter
outsl
jno
aaa
mov
cmp
out
test
cmp
or
push
adc
inc
mov
mov
mov
or
mov
je
cli
popa
pop
mov
pop
cmp
pop
clc
push
pop
aad
dec
into
nop
mov
cmpl
adc
cli
inc
seta
cmp
and
mov
bound
pop
js
movsl
sbb
xor
cs
jg
xor
scas
test
mov
inc
ret
push
and
xchg
xchg
mov
cwtl
xchg
cwtl
pop
call
outsl
dec
add
or
call
jno
push
push
push
push
insb
push
sub
cmpsl
rcrb
imul
popa
adc
out
daa
mov
inc
divb
inc
mov
cwtl
jo
push
adc
push
sbb
std
add
xchg
popa
sub
ja
clc
repnz
ljmp
dec
jnp
dec
rorb
repz
inc
push
xchg
or
and
jp
xor
sbb
and
and
jne
decl
fcoms
ja
mov
jns
pop
add
cmp
nop
mov
sarb
mov
clc
repz
out
jo
cmc
cltd
jle
add
push
insb
scas
ficomps
mov
sbb
sbb
sbb
aaa
lock
mov
nop
jbe
clc
ja
stos
fmull
cmp
aaa
mov
or
sub
xor
pop
outsb
lds
pop
jge
jb
ljmp
mov
scas
sub
adc
dec
dec
mov
movsl
push
nop
sbb
fcoml
jne
jl
mov
and
add
insb
mov
test
shlb
xchg
sbb
dec
into
lcall
xchg
mov
in
push
inc
jp
dec
cmpsl
loop
sub
pushl
inc
push
jp
das
cmp
pop
fdivl
xlat
or
out
xor
daa
mov
mov
scas
cs
repnz
loopne
inc
xor
mov
scas
xchg
sbb
icebp
lock
push
push
mov
iret
scas
or
inc
imul
mov
cmp
in
or
pop
sbb
test
loop
add
and
mov
mov
mov
pop
xchg
cmp
aam
lcall
xchg
xchg
sub
jl
or
in
jo
and
les
or
and
das
pop
mov
xchg
lds
xchg
jb
lock
cmp
in
shrl
repz
push
mov
inc
xchg
out
pop
out
shlb
inc
fwait
sbb
orl
sbb
push
les
ds
cld
je
xchg
inc
divl
sbb
enter
in
jl
push
dec
outsb
arpl
test
mov
mov
mov
xchg
mov
or
add
std
push
testl
ljmp
add
addr16
xor
push
xchg
addr16
cmp
movsb
and
sbb
mov
add
and
pop
rcrb
mulb
cmp
das
inc
rorb
and
mov
dec
lcall
lods
sbb
loope
incl
jbe
fidivrl
dec
aam
mov
nop
cmp
adc
pop
in
xor
xor
add
les
repnz
lds
push
push
ret
pop
dec
inc
mov
int
push
adc
xchg
lods
sbb
dec
subb
push
jae
std
xchg
xchg
movsb
push
fdivs
adc
push
nop
xchg
push
mov
dec
push
mov
inc
pop
push
sahf
jp
outsb
mov
push
into
mov
inc
sahf
mov
aaa
into
pop
fnstsw
mov
stos
mov
gs
sbb
shll
in
mov
sub
mov
aam
test
or
sub
std
xchg
pop
aad
push
mov
das
rcrl
in
xchg
cltd
add
and
cmp
sti
repnz
pop
jecxz
clc
sbb
pop
inc
push
aad
sbb
push
cli
addb
push
cwtl
and
outsb
or
inc
mov
xchg
and
xchg
sbb
dec
fiaddl
or
pop
std
add
mov
mov
outsl
popa
dec
jo
pop
pop
sbb
xlat
dec
cmp
call
movl
cmp
fs
mov
push
sub
or
repnz
xchg
dec
cwtl
adcb
fdivrl
push
mov
jne
cmpsb
mov
lods
inc
ror
xchg
movsb
mov
dec
rolb
cwtl
sub
pop
or
xchg
mov
pop
xchg
fsubrs
aam
daa
cmp
cmpsb
fcmovnbe
aas
push
fs
or
xchg
mov
xchg
mov
nop
and
pop
adc
out
jmp
jne
sub
insb
ja
xor
xchg
call
repnz
test
add
cs
mov
ds
fsubs
dec
int
and
loop
cwtl
lods
pusha
inc
test
lock
xchg
clc
insb
cmp
cmp
cmp
mov
cltd
and
shll
mov
nop
loope
adc
fs
push
ficomps
stos
mov
pop
push
jne
add
loope
or
lock
clc
adc
pop
vrcpss
enter
sbb
pop
in
mov
sbb
aam
lods
inc
dec
pusha
mov
add
cmp
movsb
std
sbb
or
dec
cltd
mov
fidivrs
pop
iret
pop
fldenv
jnp
mov
mov
pushf
push
dec
bound
add
ja
sbb
fstpl
or
pop
mov
in
stos
jg
pop
je
test
mov
ljmp
xchg
mov
hlt
cmp
adc
cmp
jns
insb
insb
adc
arpl
lcall
leave
outsl
or
in
int
cmp
sbb
mov
jo
pop
xchg
jb
movsl
popw
in
lret
ror
repz
fstl
inc
ds
or
cmp
sub
and
adc
daa
pop
cmpsl
adc
test
add
mov
xchg
hlt
and
mov
cmp
dec
sub
cmp
sahf
inc
aam
mov
jnp
int
test
in
jo
cmp
add
iret
repz
add
cmp
fwait
in
ret
inc
subl
js
mov
fsubrs
cmp
mov
lahf
or
mov
adc
and
xchg
subl
lock
imul
and
filds
xchg
lea
inc
xchg
punpckldq
xchg
adc
pop
sbb
xchg
ds
jb
ss
std
mov
hlt
sbb
rclb
mov
scas
pop
andl
incb
decl
sbb
or
fucom
or
dec
fyl2xp1
inc
push
sbb
xor
jge
scas
out
jecxz
mov
xor
sbb
stos
aaa
repnz
andb
andl
jmp
sub
dec
stc
sbb
jmp
and
js
or
ret
ret
insb
icebp
adc
mov
cmpsb
outsl
push
jnp
add
xor
fadd
inc
jnp
pop
lods
lret
ror
jnp
lock
pop
push
aaa
inc
nop
or
movsb
and
mov
mov
lods
loopne
pusha
in
mov
or
push
stc
imul
hlt
jge,pn
cmpsl
mov
xor
jbe
js
inc
les
cmc
movsl
test
and
pushf
mov
push
bound
cwtl
out
mov
xchg
dec
in
aas
out
mov
cmp
push
shrl
fs
mul
and
push
adc
or
movsb
adc
pop
dec
mov
xor
in
dec
lods
outsb
std
mov
aas
call
dec
mov
xor
sub
mov
js
push
jmp
mov
dec
or
out
or
lret
lock
fisttps
popa
sbb
xlat
jg
mov
jl
stos
mov
mov
inc
iret
sub
punpcklbw
es
aaa
and
xchg
and
inc
in
fnstenv
out
jmp
fadds
pop
int3
pop
xchg
cmp
mov
jae
out
xorl
insl
pop
and
xor
clc
test
hlt
into
sahf
jge
int
fsubs
lods
dec
cmp
cmpsb
loopne
mov
jge
les
pop
rol
sahf
pop
mov
xor
aaa
ficomps
jp
pop
fcmovu
adc
xlat
rcll
mov
fsubl
fidivs
sub
mov
jge
hlt
mov
icebp
inc
das
popa
add
leave
jbe
jle
xchg
mov
call
addr16
mov
xchg
xor
outsl
ret
lret
sbb
cltd
jne
xor
shlb
test
les
push
pop
cmp
sbb
push
hlt
adc
mov
orl
scas
adc
dec
or
imul
clc
rcr
adc
push
mov
sub
adc
push
or
jge
xchg
popa
mov
imul
bound
push
nop
dec
lret
lcall
mov
enter
push
sbb
xor
test
mov
push
jmp
aas
lret
in
movsl
push
fmuls
xor
jmp
std
test
xor
mov
sub
sub
addr16
lcall
or
inc
jb
fs
repnz
scas
mov
data16
mov
inc
divl
xchg
xchg
sub
ret
inc
or
adc
xor
jns
mov
sub
mov
xchg
sahf
mov
sub
and
stc
push
push
inc
sbb
jo
mov
stos
aas
adc
shr
xchg
adc
int3
jle
xor
jns
xchg
addr16
int3
mul
xor
jae
cmp
mov
imul
lahf
insl
gs
mov
dec
out
int
push
and
inc
xchg
jne
mov
rdpmc
pop
out
call
push
flds
push
rcrb
loope
std
out
popf
push
sub
cmp
lcall
ja
jo
ss
xchg
or
cmp
movl
imul
scas
out
aaa
mov
jp
dec
and
xor
pop
mov
sti
mov
sbb
inc
cmp
add
out
lods
daa
mov
popa
mov
xchg
test
ljmp
into
scas
cmp
lds
ljmp
jmp
daa
xor
xchg
insb
mov
sahf
cmpsb
clc
int3
hlt
addr16
or
jne
inc
mov
and
ss
int
or
or
sbb
bound
addl
hlt
or
hlt
stos
and
decl
popa
mov
xor
jle
cmpsb
or
ss
add
shrb
inc
adcb
xor
insl
movsb
xchg
lods
mov
jecxz
jb
push
mov
cmp
add
mov
xor
jo
fnstsw
lret
repnz
ror
cmp
xchg
ret
mov
test
loopne
sbb
xchg
js
cmpsb
jecxz
pop
jecxz
jno
inc
add
sbb
stos
jp
push
pop
ficompl
iret
sbb
insb
push
test
fldenv
aas
fcoms
les
mov
and
adc
push
lods
and
pop
enter
in
ja
into
adc
bound
data16
int3
xchg
cs
into
ficoml
or
adc
pop
jae
push
ret
shlb
xchg
pop
xor
daa
out
ja
mov
add
pushf
pop
or
add
std
pop
mov
mov
xchg
mov
sbb
mov
test
mov
mov
jnp
adc
xchg
mov
aam
sub
pop
mov
sbb
mov
xchg
mov
sbb
push
out
mov
je
lods
sbb
dec
push
adc
fists
imul
mov
push
mov
fisubrs
cli
movsl
jg
bound
jne
aaa
mov
pushf
jmp
insl
mov
daa
je
add
es
adcb
mov
lahf
insb
push
ret
popa
push
fisttpl
sub
sbb
es
jecxz
sub
lahf
push
lds
fisttps
xchg
movsb
or
mov
rolb
test
adc
sub
into
adc
std
inc
push
test
lea
fistpll
push
adc
sub
fists
add
rcll
xchg
mov
pushf
andb
fdivrs
sahf
pop
lods
out
aas
inc
sub
call
ficoml
aad
mov
xchg
ja
add
fwait
leave
cmp
cli
popf
mov
sarl
xor
ljmp
adc
fldenv
ret
stos
out
inc
divb
aas
or
xchg
sub
imul
push
adc
pop
pop
add
or
fwait
or
push
adc
jo
dec
add
dec
icebp
shlb
lods
dec
add
arpl
lcall
push
clc
add
sbbb
pop
cmp
xor
fcompl
sbb
add
clc
jnp
decl
mov
xchg
pop
push
or
sub
fildl
sbb
push
imul
xchg
push
pop
popf
push
xchg
inc
std
das
fcomip
test
popf
fcoml
push
pushf
aaa
enter
jge
mov
fxch
xchg
fiadds
insl
fdiv
inc
add
inc
stc
or
xlat
jne
xlat
testb
jmp
cs
sub
loopne
jecxz
ja
lods
test
xchg
xchg
dec
inc
pop
ret
sub
sub
adc
mov
inc
fmuls
mov
or
shlb
lahf
lods
in
stos
xchg
mov
mov
mov
xchg
lret
repz
aam
or
rcrl
sbb
stos
and
inc
iret
lret
out
pop
add
push
xor
sahf
les
insb
push
xor
inc
mov
mov
dec
cmp
fs
add
mov
ss
dec
leave
mov
fisubl
dec
filds
cmp
rcl
popa
sub
dec
lahf
mov
xchg
inc
test
lret
push
push
pop
adc
das
jp
movsb
add
movsb
inc
inc
fistl
ficoms
pop
xchg
xlat
push
mov
mov
adc
jmp
insb
add
cmp
or
pop
sti
mov
out
push
rorb
rolb
pop
faddl
test
cmpsb
xchg
pop
bound
mov
movsb
dec
push
sub
pushf
or
dec
inc
and
jg
pop
lds
mov
mov
dec
cwtl
mov
pop
lock
call
jp
jmp
je
xorb
iret
cltd
adc
jp
xchg
dec
ss
je
cmp
leave
sub
adc
xchg
das
loopne
mov
pop
pop
rorl
add
mov
pop
or
in
loop
js
dec
mov
sub
fsubrs
xchg
aam
int3
jle
and
fcomps
and
cwtl
jbe
and
jge
in
xchg
ret
sbb
cmp
push
inc
aas
sbb
mov
xor
jnp
xor
inc
imul
xor
sbb
jmp
out
sbb
adc
sbb
ss
insl
cmpsl
xor
jmp
push
jae
insb
or
sti
xor
dec
jmp
inc
jne
dec
mov
in
xchg
adc
cmc
and
or
add
mov
ffree
cmc
mov
lret
sbb
dec
mov
scas
push
shl
rorl
loopne
push
mov
hlt
lcall
xchg
lret
and
imul
sbb
sub
shr
cmp
fdivr
mov
push
or
mov
sbb
inc
insl
push
add
and
movsl
pop
add
mov
jbe
fs
sub
add
and
movsl
shlb
ud1
cmp
pop
pop
icebp
adc
hlt
out
push
dec
mov
or
xchg
jle
jle
pop
imul
insl
lods
xchg
fwait
mov
lcall
lea
cmc
sbbl
jle
push
lret
dec
in
out
pop
stc
push
dec
or
cmp
jecxz
sub
cwtl
adc
dec
cmc
cli
xor
push
nop
loop
mov
xorb
or
mov
xlat
imul
mov
xchg
adc
xor
xchg
test
jecxz,pt
mov
jnp
popa
stos
lea
mov
inc
dec
orb
mov
mov
pop
out
out
dec
divb
jl
mov
pop
scas
jmp
pushf
leave
cli
pushf
sbb
push
fs
sub
je
mov
jno
lahf
nop
pop
into
clc
adc
pop
jmp
adc
loopne
add
push
sub
movsb
or
xchg
jbe
xchg
pop
push
mov
stc
gs
pop
repnz
inc
shlb
sbb
sbb
xchg
cld
sbbl
dec
pop
and
jb
stos
loope
fdivs
rcrl
dec
pop
push
insl
cmp
jns
and
sub
imul
add
lds
popa
inc
mov
mov
xor
dec
fisubs
push
add
pop
dec
add
mov
dec
scas
movsb
data16
mov
adc
lds
call
sarl
inc
out
rcll
jne
and
push
xchg
pop
bound
pop
ja
fwait
xchg
in
xchg
xchg
add
mov
mov
jns
inc
or
sub
jecxz
shll
inc
ds
popf
push
mov
movl
frstor
cmp
xchg
xchg
lcall
add
mov
jnp
xchg
sbb
push
xchg
out
mov
push
daa
test
dec
pop
sahf
lods
cmp
add
es
imul
dec
jae
jmp
repz
pop
pop
shll
mov
sbb
aam
mov
out
pop
xor
jb
out
int
jge
mov
and
push
outsb
lods
cld
sbb
pushf
push
jns
cmp
mov
dec
cmp
andl
xorl
rolb
ss
test
jle
adc
lods
mov
fwait
mov
out
fadds
icebp
fdivrl
mov
pop
xchg
gs
add
and
adc
dec
add
fsubs
test
loopne
cmovb
frstor
xchg
xor
into
xchg
push
or
pop
pop
mov
ljmp
xor
xor
dec
dec
hlt
cmpsl
xor
xchg
jmp
inc
aas
sub
cmpb
and
sub
out
iret
clc
aas
fwait
mov
pop
pushf
add
xchg
lcall
push
add
clc
mov
out
mov
sub
or
xchg
push
and
or
cmp
jae
in
push
int3
pop
add
xorb
and
call
mov
jne
jns
shrb
lock
jge
out
inc
sbb
dec
fwait
insl
cmpsl
mov
push
pop
lds
or
mov
xchg
mov
fmul
jnp
hlt
sub
lea
stos
ror
sub
inc
inc
push
sbb
outsl
xchg
es
loop
inc
lcall
sbb
inc
fs
mov
jno
imulb
mov
subb
mov
jae
and
mov
int3
ds
inc
mov
xchg
movsl
call
fidivl
cmpsb
mov
stos
sarb
hlt
test
push
mov
sbb
fwait
or
jo
cmpsb
jp
sub
ds
cwtl
sub
adc
sbb
out
xchg
loopne
lcall
sahf
sub
sar
push
mov
cmp
stos
inc
mov
aad
imul
cld
sbb
fprem1
dec
js
int
pop
inc
sub
movsb
addb
fs
inc
mov
adc
cmp
popa
fs
lods
push
xor
sbb
fldl
pop
cmp
repz
jbe
enter
push
dec
pop
mov
icebp
xchg
lcall
out
adc
inc
pop
sbb
lea
insl
and
mov
dec
jb
xchg
int
add
cli
aaa
loop
addb
ljmp
push
rorb
mov
bound
cld
sub
stos
movl
arpl
outsb
jle
jmp
lahf
jmp
and
xchg
jmp
push
jae
inc
jns
pop
lret
les
sbb
dec
ds
xchg
push
add
mov
dec
repnz
pop
inc
pop
mov
jbe
vandps
or
inc
add
sahf
inc
xor
out
leave
push
stc
fcompl
lahf
add
popf
pop
scas
add
xchg
ret
rcrb
ljmp
out
jecxz
in
jns
sub
aas
and
fs
scas
mov
xor
inc
sub
rol
sub
sub
inc
cld
lods
mov
mov
addr16
das
inc
fsts
dec
pop
jmp
and
loopne
sbb
dec
sahf
jp
xor
push
das
jle
push
inc
pop
ja
cs
iret
dec
popf
jge
mov
jns
mov
movsb
popa
xlat
xlat
in
fs
dec
mov
push
sbbl
das
cmpsb
fs
mov
xchg
fistpl
lock
lods
jb
xor
push
xlat
inc
or
jge
pop
ljmp
test
pop
xchg
test
fcmovne
mov
jne
or
adc
or
vdivsd
out
repnz
lods
mov
jo
out
jecxz
repz
aas
rcrb
in
mov
test
cwtl
mov
int3
adc
pop
lret
sub
push
dec
jl
jbe
imul
mov
jns
jg
push
arpl
inc
arpl
out
push
add
movd
test
push
jmp
inc
sbb
mov
sbb
jge
mov
jae
fiaddl
es
cmp
xchg
faddl
stos
sbb
cwtl
cmc
cmp
add
mov
push
test
inc
aaa
sub
push
ret
sub
insb
cmp
add
repnz
pop
push
jbe
sub
ret
jmp
inc
movsl
in
adcl
fadds
mov
out
leave
test
xorb
and
dec
fs
cmp
cmpl
aad
pop
xor
xor
aam
mov
jne
pop
cltd
rclb
cld
xchg
call
push
ds
xchg
mov
add
jle
mov
cmpsb
test
inc
lods
ja
and
cwtl
lds
xchg
enter
out
sbb
mov
fs
inc
jb
mov
mov
popf
test
rclb
mov
mov
sub
jecxz
mov
xchg
pop
lea
outsl
jmp
sbb
out
lret
dec
pop
jg
imul
cmp
jge
inc
sbb
in
fisubrs
adc
push
dec
cmpl
test
dec
sbb
push
mov
scas
push
jge
fisttpll
jge
jle
pusha
pop
es
xchg
mov
stos
gs
std
inc
jo
out
mov
out
mov
subb
push
sahf
cmp
fwait
jbe
ds
rolb
jp
pop
orl
arpl
adc
push
jp
ret
movsb
insb
mov
cs
andb
jae
jl
pop
ja
ficomps
ljmp
sbb
neg
std
inc
ud1
subl
cwtl
popf
mov
stos
dec
xchg
adc
xchg
repz
pop
stos
orl
mov
or
push
ja
sti
fidivs
loope
inc
adcb
mov
adc
xor
das
decl
mov
pop
daa
pop
je
xchg
jnp
sub
mov
popf
jbe
jp
sub
xchg
sub
jle
clc
cmpsb
mov
add
add
fs
std
xchg
test
and
fldcw
rcrb
ds
cltd
xchg
mov
lret
xor
leave
jg
sub
xchg
insb
outsb
xchg
cmpsb
and
and
mov
xchg
sar
lds
mov
sahf
inc
imul
pop
insl
lret
mov
xchg
into
loopne
push
inc
xor
out
aas
sub
xor
mov
call
cmpsl
shrl
cs
cmp
in
mov
cltd
fnstenv
lock
dec
pushf
lss
jmp
mov
nop
mov
cmc
xchg
pop
lahf
in
movsb
fidivrs
shl
dec
ja
jne
jp
dec
daa
movsb
push
gs
pop
dec
gs
cld
pop
or
rcrl
mov
test
xchg
xorl
out
sbb
mov
into
and
xchg
das
inc
in
scas
and
les
rcrb
stos
popf
mov
inc
adc
jmp
sbb
inc
jge
gs
xchg
je
lds
add
mov
popf
fmul
mov
pop
jno
adcb
cmp
ja
push
push
sbb
push
cmpsb
push
sub
sbb
fists
add
dec
and
or
outsb
das
mov
sbbl
int3
mov
ret
jle
insl
sarb
stc
mov
push
dec
add
sub
imul
out
or
js
mov
loope
and
inc
jo
dec
sbb
lods
jae
cld
inc
out
scas
mov
and
dec
jb
out
jbe
xlat
or
mov
sbb
xchg
in
pop
lds
inc
and
aas
mov
push
or
into
push
test
out
mov
cli
lods
imul
in
cmp
arpl
jp
shrl
in
and
sub
mulb
add
xor
mov
jae
mov
rorl
call
dec
scas
es
adc
push
and
or
jg
mov
fldlg2
lea
push
ja
jns
add
sub
pop
xor
dec
std
mov
cltd
lods
shlb
stos
sbb
pop
mov
iret
push
cmc
jne
pop
shr
mov
push
test
mov
fnsave
loop
jmp
pop
jl
add
xchg
test
mov
push
jbe
out
adc
nop
adc
test
jbe
into
mov
sbb
pop
pop
add
push
rorl
rcl
ficoml
push
stc
js
fnstsw
ret
mov
lret
xchg
incb
or
hlt
inc
ds
outsl
pop
push
sub
mov
xchg
aam
bound
cmp
movsl
mov
inc
xchg
es
js
insl
inc
popa
out
outsl
movsl
into
hlt
jb
insl
xchg
in
sbb
adc
es
iret
fidivl
test
sub
test
stos
mov
icebp
jnp
sub
dec
loopne
mov
push
pop
hlt
imul
inc
sub
cmpsb
mov
xchg
jno
dec
cli
push
scas
jns
push
jne
sbb
insb
movsb
adc
sahf
mov
out
mov
out
sarl
bound
shll
mov
sub
jb
rep
mov
dec
subb
mov
cmc
ss
loope
outsl
add
inc
clc
mov
les
loope
mov
loop
js
push
jle
pushl
xorl
aas
cmpsb
mov
mov
dec
push
xorb
inc
idivl
push
int3
cwtl
jge
insl
cmp
sbb
fstl
mov
outsl
lcall
icebp
cli
jne
mov
mov
xchg
enter
adc
jae
mov
xchg
jmp
dec
aad
out
push
aaa
pop
ja
mov
fisubrl
pop
xchg
popa
insl
insl
test
jae
scas
cli
mov
out
mov
pop
iret
jae
pop
insl
and
inc
push
sub
fistps
icebp
mov
cmc
and
mov
cmp
add
jmp
test
lahf
sarb
das
ret
or
push
mov
add
pop
inc
adc
inc
or
push
or
xlat
or
xchg
add
and
mov
insl
ret
scas
movsb
lcall
int3
mov
mov
cmp
les
rorl
popa
push
ja
addr16
data16
and
orb
pusha
dec
sahf
and
int3
pop
sub
fs
mov
jne
and
pop
sbb
enter
xor
add
sbb
add
icebp
xor
ds
adc
fs
sub
push
xor
pop
or
enter
fimuls
push
pusha
jmp
pop
insb
inc
mov
addr16
sub
ljmp
xor
xor
jnp
cmp
fxam
idivb
fdivrl
pusha
add
inc
jae
and
sbb
sbb
add
dec
sbb
mov
cmp
inc
loopne
jl
dec
andl
mov
jmp
xchg
mov
jp
mov
mov
mov
xlat
mov
mov
pop
cmp
mov
addl
fidivl
adc
dec
mov
xor
rolb
imulb
jl
ret
sub
pop
in
push
cmp
ror
push
push
pop
insl
mov
jno
add
jb
dec
pop
fs
mov
push
dec
xor
pushf
dec
int
movsl
push
pop
sbb
or
jge
cmpsb
out
fwait
scas
xchg
mov
xchg
fwait
cltd
test
rcll
cmpsb
mov
out
push
rolb
dec
pop
imulb
mov
push
daa
test
cmp
or
lahf
insl
notb
sbb
aaa
loope
cmpsl
or
or
jno
sub
cmp
stos
movsl
lret
cwtl
adc
dec
daa
out
mov
inc
pop
jge
xchg
pop
jg
cmp
daa
out
or
in
and
sub
ss
insl
jmp
jbe
pop
mov
jg
xchg
mov
jno
into
xchg
pop
mov
mov
dec
divb
xor
imul
sub
in
jmp
pop
fimuls
xchg
and
fmull
jne
mov
and
bound
ret
cmp
aad
fnstenv
mov
daa
push
inc
xchg
insl
jle
arpl
xchg
in
or
ret
and
cmc
and
inc
mov
fpatan
mov
xchg
movsl
ja
iret
push
test
add
div
mov
push
cmp
xor
rolb
mov
je
scas
xchg
in
call
lret
adcb
insl
xchg
push
inc
aas
shrb
cld
cwtl
fistpl
and
xchg
cltd
mov
inc
inc
sbbl
dec
mov
pop
inc
ret
popa
cmp
pop
les
repnz
in
xchg
push
or
enter
enter
cmp
sbb
stos
xchg
pop
lret
jb
push
adc
fnsave
pop
push
out
adc
nop
pop
aad
shr
lea
jne,pt
mov
mov
sbb
xchg
fistpll
jg
mov
cmp
or
mov
xchg
flds
adc
es
adc
cmp
push
lcall
in
pusha
xor
fincstp
sbb
xchg
add
add
and
push
mov
cmp
je
xor
or
js
testb
popa
loop
push
movsl
mov
mov
xorb
lret
push
push
int3
std
bound
mov
add
jns
inc
movsl
pop
leave
mov
lds
sub
jg
test
in
dec
or
mov
mov
fisubs
push
add
xlat
mov
imul
push
fcoms
pop
add
or
mov
or
add
ds
icebp
jb
sbb
roll
shll
xor
and
sub
notl
lret
push
sub
xchg
push
out
test
fisubs
adc
push
pop
outsl
jecxz
mov
orb
into
stos
fistl
or
push
add
adc
sub
lds
xor
les
sub
sub
add
arpl
arpl
push
stc
cmpb
pop
xlat
in
test
cmp
ret
jmp
imul
icebp
scas
jb
dec
lcall
or
mov
inc
jge
fiaddl
push
call
repz
ret
pop
sbbb
dec
dec
mov
outsl
jmp
and
fnstcw
imul
shl
cmpsl
mul
addr16
lea
dec
testl
cmp
mov
imul
aaa
push
int
mov
mov
inc
ss
je
ret
push
jecxz
lret
xchg
mov
ret
mov
ja
and
inc
add
cwtl
push
lock
push
mulb
stos
mov
jb
out
nop
cs
daa
jno
int3
push
ret
sub
dec
cmc
or
mov
jp
fs
jle
loope
mov
mov
mov
pop
jbe
xchg
push
leave
fldcw
mov
addr16
cmp
jmp
test
cmp
aad
xor
test
add
cmp
test
mov
stos
xchg
mov
in
mov
push
push
sarb
andl
fidivs
or
imul
sahf
fwait
xor
xchg
nop
out
mov
loopne
leave
repnz
hlt
sub
push
shlb
cmp
xchg
pop
or
or
outsb
pop
pop
push
mov
scas
or
xor
iret
push
add
icebp
sub
out
fwait
mov
jmp
cli
sbb
gs
addr16
mov
pop
xchg
sbb
std
nop
lock
dec
xlat
sbb
mov
lock
xor
mov
mov
dec
pop
xor
dec
and
push
pushf
or
sub
icebp
test
pop
dec
loope
lds
into
ret
rcl
notb
lret
dec
push
push
cmpsb
out
int3
sbb
mov
es
pop
aaa
pop
mov
xchg
push
sub
mov
adc
ret
cmp
xor
xor
cmp
sahf
add
adc
add
lret
or
mov
fimuls
into
jnp
jmp
jb
mov
movsb
stos
or
lods
dec
sbb
mov
insl
push
dec
mov
les
pop
movsl
vptestmd
xchg
xchg
pop
sbb
sahf
test
mov
ret
lea
insl
push
jbe
das
xchg
sub
cmp
dec
rorb
test
adc
stos
sbb
add
mov
mov
test
add
mov
sub
out
adc
inc
shlb
int
push
fbld
cwtl
repnz
out
sub
aaa
sbb
outsl
mov
notl
outsl
jg
mov
nop
jge
xor
or
inc
dec
pushf
xchg
pop
xchg
push
push
lret
xor
pushf
subl
cld
in
cmp
dec
xor
pop
dec
mov
cs
outsb
push
add
sub
mov
dec
add
repz
lock
cmp
mov
cmp
xchg
adcb
lcall
gs
shlb
or
cmp
mov
mov
add
sub
out
js
loopne
ja
pop
out
aad
xchg
ss
fsubrs
or
sbb
flds
aam
mov
scas
sbb
lods
clc
aad
fidivl
test
cmp
or
mov
bswap
adc
mov
jecxz
popf
movsl
push
ja
popf
xor
sbb
mov
jg
cmp
test
adc
adc
push
mov
int
fisttpll
mov
lea
dec
insb
jbe
insb
xchg
mov
out
stos
xor
dec
clc
dec
loope
inc
sahf
sub
adc
pop
shll
fstl
arpl
hlt
loopne
leave
cmp
imul
or
or
sub
addr16
inc
xor
mov
repnz
arpl
roll
xchg
jecxz
xchg
lock
cmp
or
pop
jae
out
xchg
insb
aad
jb
mov
adc
push
xor
mov
ja
imul
stos
cmp
loop
outsl
sbb
mov
and
popa
jno
ljmp
or
movsb
jb
in
cmp
addr16
movsb
push
xchg
stos
sub
cmc
cmp
adc
adc
push
sbb
out
push
xor
pop
pop
jl
movsb
lds
mov
out
adc
mov
jo
adc
mov
jbe
pop
sbb
sti
call
pop
stos
test
xchg
or
jmp
insb
pop
fwait
jg
mov
jg
pushf
mov
rcrl
cmp
fs
pop
int3
cmp
pushf
push
sub
jg
jne
mov
mov
scas
in
mov
push
and
lds
pop
adc
dec
or
hlt
jecxz
lods
adc
jecxz
mov
mov
sub
xchg
test
mov
lods
loope
in
xchg
push
fwait
insl
cmpsb
fbstp
and
movsb
pop
test
and
mov
push
icebp
cli
pop
jae
xchg
fnstenv
push
adc
test
or
cmp
outsl
bnd
test
dec
mov
ss
rcll
jb
je
stc
mov
insb
pop
ret
adc
inc
mov
mov
or
jle
mov
shr
jl
and
or
push
mov
pop
scas
shl
nop
dec
sub
and
shrb
dec
lods
adc
sub
out
mov
push
pop
adc
jp
push
idivl
popa
mov
cmpsl
repz
std
pop
jge
inc
out
sbb
xchg
lock
cmp
pop
sahf
roll
jle
inc
pop
inc
mov
pop
dec
inc
jo
notl
faddl
stos
cmpsb
add
mov
sbb
ss
fmuls
ja
cwtl
jbe
xchg
mov
mov
cwtl
cmp
push
jge
cs
add
fidivs
int
xchg
inc
andb
sbb
pop
outsl
sub
xchg
add
inc
or
ror
sbb
fs
shll
dec
inc
xor
xor
in
push
flds
in
sub
das
pop
cli
mov
sbb
lahf
iret
psraw
sti
xchg
rcr
xchg
mov
mov
aas
cmp
inc
lahf
inc
lret
mov
mov
inc
scas
aam
cs
push
jae
iret
xchg
lcall
xchg
xchg
aas
sub
mov
imul
xchg
xor
ficoml
push
mov
cwtl
push
stc
jecxz
nop
arpl
pop
cmp
outsb
xorl
xchg
scas
adc
scas
jo
pop
test
dec
and
cmc
incb
push
xor
pop
adc
rcll
or
pushf
lods
sbb
sti
ds
pop
fadds
cmp
fscale
aad
movsb
or
cltd
or
insb
cmpsl
addr16
xor
jl
mov
ja
cli
sbb
orl
fs
jg
mov
out
repnz
popf
push
imul
test
or
mov
subb
cmp
in
jb
add
mov
pop
mov
mov
push
fists
out
and
push
and
cmc
outsl
mov
mov
les
rclb
jae
stos
jle
out
sub
fldl
push
out
and
or
jnp
lods
mov
xor
dec
leave
into
cmpsb
cmc
into
mov
dec
dec
ret
out
jo
clc
jmp
mov
sub
test
ret
mov
or
bound
jp
sub
rolb
mov
xchg
mov
shll
ja
shlb
mov
pop
and
mov
inc
call
xchg
subl
add
ds
or
mov
sbb
imul
jmp
insl
adc
xchg
cltd
mov
into
incb
cmp
xor
ret
loope
and
in
jp
inc
in
std
stc
nop
push
xchg
push
ret
gs
in
mov
jo
dec
jmp
sbb
cmpl
and
pushf
adcb
imull
jge
test
inc
mov
cltd
jo
jns
jne
call
cmp
jne
loop
mov
mov
incl
in
stc
mov
push
and
add
pop
loopne
cs
repnz
mov
inc
dec
flds
call
xor
data16
test
pop
rcrb
pop
mov
sub
cmpsb
mov
jmp
in
pop
mov
outsb
add
stos
loope
mov
fstps
and
cmp
mov
xor
loop
lock
xchg
push
leave
outsb
fs
arpl
push
clc
or
icebp
push
lods
mov
sub
jne
addl
xchg
sub
je
jmp
or
ljmp
pop
ja
xor
lea
scas
mov
mov
ds
or
in
loopne
repz
and
xchg
shll
dec
mov
mov
imul
loope
xchg
mov
int3
lds
lret
or
jmp
sahf
clc
fsubs
add
adc
push
out
lods
push
mov
push
test
mov
je
sub
sub
jns
adc
xor
pop
or
push
add
in
insl
xlat
pop
sbb
xlat
jns
lock
dec
adc
pushf
push
insl
jb
scas
inc
sub
mov
xchg
xor
mov
lcall
sbb
jae
in
and
rolb
andl
test
adc
cld
cmp
jne
push
rclb
pop
addr16
jmp
inc
mov
pusha
fcomps
xor
sbb
inc
test
sbb
mov
push
xlat
out
push
insl
repnz
sub
mov
add
and
or
leave
stc
aad
das
sahf
in
jl
mov
pusha
push
dec
faddl
xor
xor
mov
push
out
inc
push
repnz
cmpsb
pop
sbb
test
sub
push
and
sub
inc
cmovbe
sbb
mov
add
sbb
adc
divl
jmp
sbbb
and
testb
jo
sbb
outsl
aad
cmpsb
int
sub
inc
pusha
dec
call
imul
push
shr
out
push
xor
and
out
cmp
xchg
bound
rclb
test
push
rcr
stos
scas
repnz
dec
aad
test
enter
add
aad
movsl
pop
nop
cmp
dec
ret
sbb
xchg
aaa
mov
test
cs
mov
add
imul
push
aad
leave
sbb
outsb
lahf
sbb
ja
jns
lods
sub
mov
es
fstpl
mov
test
insl
dec
into
xchg
mov
std
mov
es
testl
adc
dec
mov
lods
ja
in
pop
enter
dec
pusha
test
sbb
inc
pop
pop
jbe
ss
leave
lcall
adc
sbb
call
stos
stos
mov
xor
xor
pop
xchg
or
pop
lcall
cmpsl
push
sbb
push
mov
sbb
xchg
jb
roll
pop
mov
sbb
cmp
out
mov
and
rcrb
lahf
fdivrl
or
loop
dec
pop
stos
xor
mov
sbb
das
sbb
or
dec
imulb
jo
adc
mov
push
xlat
add
add
pop
fdivrl
test
dec
mov
les
adc
decb
inc
in
jns
pop
dec
and
adc
fistps
jno
clc
adc
or
movsl
xchg
jnp
decl
shlb
and
sbbb
dec
push
cwtl
jae
push
mov
fwait
in
ds
psllw
push
inc
cltd
mov
pop
dec
mov
inc
lcall
xchg
cmp
mov
loope
xor
into
pushf
jp
jmp
adc
dec
sti
outsl
fdivrl
dec
pop
inc
int
push
pusha
jecxz
insl
aam
cmp
lret
inc
mov
cmp
les
fwait
gs
rclb
js
ret
test
sub
mov
sbb
mov
addr16
and
inc
in
fisubrs
lcall
mov
pop
or
in
push
jb
inc
fwait
mov
add
in
lret
stos
sbb
push
jecxz
push
cmpsl
sub
dec
lret
imul
mov
xchg
mov
xlat
cmpsl
jo
add
out
or
inc
sbb
int3
mov
outsw
or
mov
mov
xor
out
in
sub
andl
jb
bound
jno
dec
push
inc
jns
pop
xchg
mov
xor
pop
mov
imul
jmp
movsl
adcl
push
mov
mov
jmp
bnd
push
mov
cltd
mov
enter
mov
and
lock
call
shl
xchg
int3
cmp
and
aad
jbe
clc
push
call
imul
fsubs
jo
xchg
mov
stc
loop
push
mov
jae
mov
mov
mov
adc
aad
jecxz
dec
idivl
adc
xchg
outsb
pop
xor
sar
inc
jle
or
cmc
shrb
pop
js
mov
xchg
stc
mov
int3
ret
mov
lds
test
test
sub
aaa
mov
ret
fcomip
das
push
push
push
aam
enter
lret
xchg
lret
mov
inc
adc
push
leave
in
lahf
add
subb
mov
shrb
xchg
inc
int
cmp
sbb
adc
cs
fisttpl
imul
mov
out
add
movsl
arpl
inc
pop
movsb
scas
mov
push
repnz
dec
out
xchg
pop
int
or
call
pop
push
ret
xlat
sahf
and
aad
ffreep
popa
cmp
lods
lds
sbb
or
loopne
fpatan
pop
dec
and
ja
repz
and
mov
cld
pop
push
insb
aad
jmp
jp
sub
enter
xchg
mov
push
cmp
mov
jl
mov
xchg
xor
jge
xchg
push
imul
add
stos
mov
lods
mov
addr16
xor
sub
mov
dec
mov
add
lods
sub
xor
hlt
or
jb
and
lods
cs
gs
scas
sub
sub
or
inc
pop
iret
dec
xchg
sti
xorl
or
jbe
dec
loope
pop
out
xor
andl
push
notl
jg
sti
xor
xchg
jl
fucomi
test
inc
ja
out
jp
int3
in
push
data16
push
xchg
popa
xor
fsts
sub
jp
fildll
and
xchg
lahf
sbb
cmp
dec
mov
jne
repz
cmp
xchg
pop
loope
addr16
inc
jbe
mov
cmp
or
arpl
call
adc
pushf
pop
push
test
les
mov
shl
pop
or
push
cmpsb
adcl
xchg
fnstsw
mov
jae
dec
mov
mov
xor
mov
dec
and
push
adc
or
or
lock
adc
call
dec
leave
popa
mov
adc
sti
test
fldt
push
test
sub
mov
pusha
rcll
add
push
or
mov
ret
mov
sub
jne
data16
out
sahf
sbb
xchg
push
pop
in
mov
pushf
je
test
test
cmc
fnsave
xor
lret
cmp
cli
js
sahf
cmp
inc
cmp
xor
ret
push
test
mov
imul
in
lahf
pop
lods
test
in
int
xlat
add
dec
adc
or
fidivrl
mov
mov
cmpsb
shll
popf
aad
orl
mov
push
mov
arpl
ss
or
stc
sbb
enter
xchg
hlt
pop
jecxz
cmp
mov
rol
inc
push
push
jg
push
stc
or
inc
or
scas
popa
or
xchg
xor
lahf
mov
subl
out
out
pushf
out
pavgw
iret
test
xor
repz
xchg
cmp
int3
std
lods
leave
adcl
or
inc
call
shlb
pop
inc
in
mov
jecxz
shl
addl
loope
gs
mov
mov
jmp
jb
cmpsl
xor
add
int3
pop
arpl
insb
jne
loopne
mov
pop
fdivrl
jmp
icebp
fiaddl
repnz
ljmp
stos
inc
jp
add
lcall
mov
and
shld
fidivrs
push
adc
out
push
add
lret
fsubl
aam
or
loope
test
cmpsl
addb
pop
out
xchg
jp
arpl
fucomi
scas
push
sub
pushf
stc
xchg
scas
push
push
mov
xchg
in
stos
jo
rcll
sbb
jb
xor
xor
pop
jmp
cltd
sub
ret
jb,pt
pop
js
movsb
xor
and
add
ret
test
xchg
cmpsb
xlat
pusha
in
or
hlt
add
scas
dec
in
repz
dec
sarb
enter
mov
ret
jnp
mov
fxam
and
adc
out
adc
pushf
sti
popf
jge
sarb
je
mov
mov
sbb
mov
out
dec
stc
into
mov
and
mov
lret
add
push
xchg
push
xchg
cmpsl
fists
clc
xchg
or
xor
mov
lds
into
mov
sub
adc
inc
sbbl
cmp
xchg
fldt
fists
rcrl
mov
jg
xchg
jecxz
les
fs
pop
fstl
ss
test
mov
int
inc
loop
jge
fcmovnb
bound
roll
pop
jne
imul
inc
and
and
mov
sbb
jae
xchg
fisttpl
inc
cmp
mov
enter
or
movsl
push
mov
adc
sub
push
mov
jmp
or
fs
sbb
push
das
xchg
inc
xor
mov
adc
jle
xchg
cmp
mov
fld
test
movsl
test
imulb
mov
clc
loope
inc
loope
lea
int
pop
outsl
pop
push
sbb
aaa
pop
pop
sti
inc
js
sbb
and
aaa
stc
fisttps
mov
out
inc
cmpsb
xor
mov
fwait
arpl
inc
insb
mov
push
rclb
and
xchg
mov
jmp
stos
adc
pusha
stos
pop
xor
dec
loope
cmp
xlat
adc
cmp
sub
test
mov
mov
outsl
jae
sbb
out
cmp
xor
aam
aam
subl
inc
or
or
test
push
push
sub
stc
aad
test
sbb
inc
data16
js
dec
adc
dec
add
sub
idivl
mov
add
sbb
adc
xor
push
fmul
scas
cmc
lret
push
loope
iret
cmp
insb
inc
dec
jmp
xchg
add
std
and
pop
add
jns
xor
cld
adc
imul
dec
mov
test
sbb
xor
mov
mov
pop
mov
sub
je
jns
loopne
inc
jg
mov
xchg
or
daa
cmp
and
add
jp
push
add
jge
mov
pop
movl
inc
jle
and
inc
fcompl
mov
push
xchg
outsb
shr
fs
mov
sar
movsb
mov
call
xchg
cmpsl
iret
test
ds
call
notl
movsl
add
adc
cld
fbld
and
inc
add
mov
jecxz
call
testl
and
adc
test
es
in
dec
lahf
mov
sti
ret
jecxz
sbb
push
cmpxchg
aad
xchg
sti
inc
hlt
mov
pavgw
xchg
nop
add
sub
cmpsb
sbb
roll
les
loop
sub
mov
in
lret
mov
test
and
pop
mov
xchg
bound
jno
sarb
stc
adc
insl
aad
cltd
mov
enter
loopne
mov
faddl
xor
mov
mov
int3
and
mov
ss
ds
mov
dec
jp
xchg
mov
icebp
cmc
in
dec
mov
and
testl
mov
repz
in
aas
outsl
jno
pop
sti
stos
dec
scas
test
ss
inc
scas
loop
scas
add
cmc
mov
int
in
inc
or
adc
in
sub
and
mov
stos
inc
mov
mov
iret
fiadds
int3
and
into
orb
sub
inc
sub
cmp
push
inc
ror
int
jle
pop
add
out
inc
jae
jg
dec
scas
ss
outsl
sahf
cli
outsb
data16
xchg
arpl
lahf
inc
push
or
cmp
daa
outsb
push
insb
cmp
stc
decb
or
pushl
push
mov
dec
les
dec
xorl
cmpsb
push
adc
pop
mov
xchg
sub
loopne
inc
mov
sub
jmp
ds
add
push
pop
addr16
adc
add
aas
bound
je
mov
out
push
push
pop
fldenv
aaa
leave
jne
jo
lahf
daa
add
les
and
sbb
and
pusha
daa
fdivrs
sbb
out
rorb
repnz
je
lea
imul
xor
jbe
and
push
cmpsb
mov
leave
add
lods
or
jne
mov
lock
mov
xchg
mov
pop
or
adc
mov
mov
mov
mov
mov
sub
jmp
jo
ds
movsl
xor
icebp
into
lret
movsb
stc
aad
into
mov
std
push
push
idivl
or
cmp
or
mov
cmovne
rcrb
jmp
int
sub
loop
dec
loope
adc
lcall
add
adc
repnz
bswap
push
push
dec
push
shll
mov
cli
mov
sarb
outsl
mov
outsb
xchg
mov
sahf
jnp
jbe
lret
pop
clc
add
cmp
lock
sbbb
movsb
xchg
push
lods
xor
imul
je
cmp
sbb
cltd
inc
es
aad
push
stos
mov
or
mov
adc
out
dec
sarl
loopne
loop
shlb
jmp
xlat
cmp
jmp
sub
mov
push
dec
fsts
shll
iret
pop
dec
dec
mov
in
and
movl
push
das
push
mov
test
jne
subb
cltd
jne
xor
shll
mov
adc
lea
xor
repnz
adc
xchg
lcall
mov
int3
jo
xchg
inc
cmpsb
aad
icebp
and
pop
inc
cs
out
cmp
or
in
mov
imul
sub
inc
add
fldt
lods
sub
jae
std
xor
mov
inc
sbb
add
push
int
jns
pop
daa
dec
adcb
rcll
pop
pushf
sub
cmp
pop
pop
mov
cli
mov
cmp
subl
mov
sbb
neg
pop
daa
inc
mov
and
dec
sti
sbb
mov
lea
aad
xchg
mov
cmp
movl
mov
adc
mov
dec
or
les
lret
cli
dec
mov
jg
test
jbe
xor
int3
xchg
cmp
pushf
push
icebp
out
ficoml
sub
loopne
lock
std
pop
int
xor
into
aas
mov
int
cld
lock
dec
push
and
stos
add
push
jle
popa
jle
mov
sbb
cltd
mov
addr16
gs
sub
pop
jl
scas
add
mov
out
orb
bound
aaa
jg
leave
fldt
sub
imul
insl
or
add
dec
insb
add
fadd
sub
inc
cwtl
test
testl
cmp
dec
pop
daa
js
iret
pop
mov
scas
ss
dec
sub
in
sbb
dec
pop
mov
inc
js
inc
enter
add
and
add
je
sub
popf
aad
xor
pushf
dec
ljmp
in
mov
loope
push
repnz
aad
pop
stos
adc
imul
jp
out
sbb
ret
adc
fisubl
add
push
fdivs
sub
fldenv
int
out
dec
loopne
push
mov
cwtl
cmpsb
test
xchg
sbb
cmp
jne
push
aas
xchg
addr16
clc
or
out
sti
inc
push
imul
xor
cmpsl
shll
push
sbb
mov
cmp
push
mov
jmp
mov
imul
jl
lret
in
bound
int
mov
jb
jp
pop
divl
adc
or
pop
jo
cmp
mov
dec
adc
jmp
jne
xor
mov
push
add
insl
fldlg2
dec
push
mov
int3
push
cmp
add
bound
xchg
stos
pop
outsb
adc
pop
leave
daa
mov
inc
shl
hlt
jne
loope
mov
out
sbb
jge
stc
push
cmp
inc
push
push
es
out
lret
lahf
mov
push
adc
ror
xchg
mov
js
loop
jns
repz
cs
mov
fimuls
cmc
or
stos
or
bound
loop
pushf
xchg
mov
push
mov
aam
lret
mov
in
mov
test
inc
inc
cld
push
mov
popf
pop
rolb
mov
leave
or
fildl
mov
xchg
mov
dec
in
ljmp
hlt
adc
clc
dec
rcl
jecxz
mov
dec
andb
out
test
add
fsubrl
enter
outsl
adc
es
mov
mov
xchg
adc
leave
rdpmc
pcmpeqb
sbb
dec
loope
xchg
cmp
pop
scas
mov
imul
inc
sub
and
repnz
stos
pop
dec
call
ror
xor
push
mov
imull
mov
xchg
pop
pop
sbb
jg
fidivs
jnp
push
sti
xchg
jle
not
dec
stos
add
dec
mov
dec
call
adc
test
enter
cmpb
shl
adc
adc
stc
jb
stos
pop
inc
lea
loopw
adc
fs
stos
lea
or
cmc
push
adc
js
dec
add
sbb
bswap
xor
insl
jle
add
scas
out
arpl
ss
je
and
sub
xor
xlat
mov
sub
pop
cmp
or
jmp
jp
sahf
dec
insl
cmp
sub
aam
movsb
push
xchg
inc
outsb
scas
and
add
cs
push
mov
imul
aam
ret
mov
mov
shl
add
scas
inc
sbb
mov
push
adc
add
mov
fidivrl
outsl
aaa
repz
inc
mov
cld
adc
push
iret
cmpsb
popa
stc
imul
pop
scas
notb
in
lods
inc
shll
hlt
add
jmp
inc
pop
ss
push
iret
ljmp
cld
add
add
icebp
inc
jne
andb
mov
or
std
cltd
add
fstps
jno
out
imul
jl
movsb
fdivs
leave
adc
adc
adc
dec
pop
sbb
push
jp
push
pop
mov
dec
xor
jo
xorb
xor
sub
pop
pushf
mov
mov
shll
mov
insl
call
pushf
fs
xor
out
pop
and
mov
adc
dec
or
rcrb
sti
divb
cmpsl
inc
mov
leave
inc
pop
sbb
cmp
cltd
mov
cwtl
lds
push
sub
sbb
or
fsts
lock
and
stos
sub
jl
add
or
cmp
popa
stos
add
push
outsb
insb
jb
mov
xchg
pop
popf
aad
sub
push
loopne
ja
or
adc
nop
daa
icebp
lret
lret
in
adc
add
dec
aam
mov
fisttps
inc
jmp
sbb
mov
cmp
sub
cmp
mov
aaa
leave
ret
xchg
mov
sub
mov
stos
test
cmovs
insl
testl
jg
adc
out
add
test
insl
xchg
jb
dec
sub
cmp
cltd
adc
sbb
jmp
push
and
cmp
xor
sub
push
mov
and
pop
jns
push
fs
leave
cwtl
mov
mov
cmpsb
sub
dec
or
decl
jp
scas
adc
test
push
test
or
mov
in
xchg
lret
cmpsb
cmp
push
int3
pusha
lret
mov
pop
jmp
adc
and
stos
xor
xor
icebp
pextrw
sub
cmp
std
adc
cmpsb
xor
push
pop
inc
daa
test
cmpsb
test
push
int3
popa
pop
inc
inc
sbb
dec
dec
push
xor
inc
xchg
loopne
rorl
sahf
push
ljmp
call
fucomp
pop
in
aad
test
aam
int
scas
xchg
sbb
shll
xor
leave
nop
lret
mov
ret
mov
adc
mov
push
cmc
cmp
dec
inc
lcall
jp
cmpb
in
cmp
dec
mov
add
fwait
or
pusha
scas
xor
jp
pop
mov
dec
lods
aad
cwtl
adc
add
push
ss
xor
fisubrl
jnp
les
sbb
mov
lea
push
xchg
mov
mov
push
inc
dec
push
pop
cli
stc
and
mov
pop
push
pop
push
pop
sahf
lea
fcoml
add
lret
or
icebp
sahf
or
cltd
sub
dec
and
mov
mov
push
or
mov
add
mov
ds
xor
xor
and
jecxz
cmpsb
repnz
test
mov
pop
mov
pushf
push
mov
xor
adc
xor
loope
cmp
stos
daa
xchg
out
xor
fsub
out
icebp
sub
aam
sub
or
ja
inc
data16
fldcw
nop
lret
or
adc
orl
xor
mov
inc
cmpsb
sbb
pop
and
mov
movsb
xlat
ss
jle,pn
clc
xchg
ss
mov
mulb
sub
fwait
imul
aam
mov
pop
sub
sub
jb
jb
sti
add
je
and
xchg
mov
jno
sub
mov
ds
and
call
lds
mov
xchg
lock
mov
push
into
out
iret
outsl
ret
lods
dec
dec
adc
icebp
and
imul
scas
xchg
jp
mov
sub
sub
xor
inc
xor
outsb
mov
jne
pop
paddd
adc
insb
adc
lcall
cmp
leave
fsubrp
jns
jge
adc
out
mov
pop
xor
push
mov
hlt
aad
push
add
or
or
cli
sub
sub
xchg
fs
ret
pop
call
adc
jb
mov
in
fcmovb
push
jp
mov
es
dec
xchg
xor
dec
cwtl
add
les
sub
cld
lods
es
sbb
lods
or
and
xchg
in
mov
or
movl
push
cmp
icebp
imul
faddp
mov
mov
push
jmp
xorb
ss
mov
inc
out
cmpsb
dec
push
mov
fcomp
or
jmp
aam
mov
pop
jb
fadds
ror
out
sub
xchg
sub
icebp
sub
push
divps
add
dec
lret
pop
mov
pop
jl
loope
movsl
xor
shrl
pushf
inc
mov
lahf
xlat
xor
out
inc
je
push
dec
lds
in
ds
mov
les
adc
cmpsl
mov
arpl
loope
mov
bound
cmp
mov
in
xor
outsl
mov
xor
jle
xchg
pusha
dec
inc
imull
gs
cli
stos
cmp
lock
arpl
jne
aas
lods
pushf
cmpsb
pop
ja
rcrb
sbbb
jo
ds
lret
or
pop
jge
or
aas
outsb
push
mov
inc
repnz
and
notb
jae
dec
dec
dec
add
sub
fists
outsb
imul
das
push
mov
lods
loope
push
sbb
push
inc
in
cmc
inc
mov
addr16
imul
adc
pusha
rorl
jnp
push
loope
dec
sub
and
movsl
arpl
fdivrs
mov
das
lret
push
cmp
adc
scas
shlb
test
cwtl
fcomps
push
add
int3
cmp
stos
cmp
mov
push
int3
daa
mov
clc
add
popa
adc
imul
cmp
and
mov
insl
out
cmp
xor
push
rol
test
dec
xlat
jl
pop
popf
insb
insb
int
pop
add
mov
in
jo
pop
jmp
and
arpl
fs
pop
pop
les
inc
mov
xor
mov
push
lcall
add
aas
jecxz
mov
sbb
ds
outsl
pop
adc
push
cld
int
ja
and
test
test
or
pop
cltd
fwait
add
jge
mov
js
mov
cli
rorl
xchg
aas
xor
cmp
fidivs
movsl
xchg
mov
ror
jp
fbstp
mov
sub
imul
repnz
mov
mov
sar
pop
mov
mov
incl
shrb
jno
out
dec
idivl
push
mov
sti
cmp
js
cli
sub
jns
xlat
aas
xor
xchg
sbb
xchg
outsb
pop
xchg
fdivr
or
sub
lret
cmp
in
inc
in
inc
pop
pop
mov
xchg
jbe
fmul
icebp
ret
fsubl
mov
stos
cmp
mov
shlb
mov
leave
sub
push
aam
jmp
pop
repnz
cld
in
adc
daa
test
or
sbb
mov
fs
ret
push
lcall
cmpsb
jno
popa
mov
in
test
js
lea
fsubs
shl
pop
push
jmp
fs
adc
cmp
aad
movsl
push
or
call
add
sbb
hlt
popa
push
mov
or
dec
sbb
and
test
cmc
ds
or
bound
cli
jecxz
fwait
mov
pushl
and
cli
pop
sbb
fcompl
jnp
insb
xor
cmp
mov
insb
jae
out
inc
mov
mov
xchg
hlt
add
fisttps
in
lcall
les
dec
ljmp
xor
push
adc
fs
and
mov
mov
inc
aaa
jecxz
in
xchg
out
int3
popf
cmp
movhps
mov
ret
out
jne
loop
int3
jb
dec
sub
mov
cltd
xchg
popf
xor
push
mov
mov
icebp
imul
pop
mov
push
pop
aad
push
clc
sub
fisttpll
rsqrtps
pop
pop
xchg
adcl
jae
xor
mov
test
add
adc
or
dec
dec
movsl
ret
out
lods
push
shrb
fbld
out
pop
and
les
inc
xor
loopne
out
dec
std
aas
std
sub
sub
pop
fmuls
inc
jmp
lret
and
je
pop
jge
or
loope
rorl
je
or
aaa
imul
and
test
scas
push
adc
sub
rolb
pop
xchg
adc
data16
pop
add
push
jae
mov
jne
push
pushf
sbb
mov
test
std
loope
test
insb
push
inc
das
daa
pop
rorl
and
icebp
test
cwtl
adc
adc
jmp
pop
pop
das
mov
and
ljmp
add
and
adc
hlt
mov
mov
scas
mov
mov
push
lcall
sub
dec
sub
cmp
dec
push
or
js
adc
mov
xchg
rep
sti
mov
insl
and
dec
xor
add
lahf
int
rorl
xor
cmp
negb
sbbb
sub
pop
adc
cld
movsl
xchg
cltd
cmovg
or
sbb
test
repnz
aam
dec
mov
in
dec
or
fcompl
push
in
rolb
shrl
mov
dec
fnsave
inc
sbb
fildl
mov
pop
stos
push
and
push
push
repnz
ss
mov
bound
push
ja
and
mov
in
cmp
hlt
mov
imul
push
cltd
mov
ljmp
mov
in
push
rcrl
dec
fs
adc
mov
into
fnstsw
lcall
mov
adc
pushf
jle
jno
add
cmpsb
jnp
push
in
mov
imul
mov
call
jl
push
std
mov
hlt
ret
xchg
imul
popa
test
jne
sub
cmp
add
cmp
mov
mov
das
and
xor
sub
inc
mov
scas
mov
incl
dec
inc
push
mov
jecxz
push
cmc
mov
push
or
cmp
outsl
jle
cs
sub
filds
and
lahf
sbb
xchg
mov
jmp
rolb
add
call
cld
fnstcw
jbe
aas
or
cli
mov
aad
iret
ss
fs
test
pop
test
pop
lret
lods
outsl
jo
inc
in
cmp
mov
testl
ljmp
inc
pop
sahf
ret
and
mov
xchg
aaa
xlat
sbb
adc
ja
fs
xchg
and
sub
pop
push
mov
call
add
add
jp
inc
cmpsb
lds
pop
faddl
and
sub
lods
mov
xchg
in
jno
cmp
cmp
scas
jmp
mov
push
jno
repz
insb
sti
into
leave
call
sub
push
add
mov
jg
pop
jne
jae,pt
sub
and
scas
sarb
pop
add
cmp
xlat
dec
adc
fcoms
jecxz
cmpsl
or
shl
dec
mov
dec
inc
dec
mov
jecxz
sub
xor
mov
loopne
das
movsb
jnp
mov
jnp
inc
shl
sbb
or
push
mov
rolb
cs
dec
inc
sub
xchg
push
shrb
aaa
inc
lret
mov
call
mov
cwtl
sub
es
add
xor
cmp
fcmovbe
push
jl
jmp
xchg
pop
lods
add
or
pop
vmwrite
in
xchg
movsb
dec
and
jl
fisubl
lcall
dec
pop
movl
aas
mov
imul
popf
add
mov
ljmp
repnz
shrb
pop
daa
outsl
nop
mov
or
sarb
fs
mov
add
sub
aam
push
pop
add
repnz
mov
mov
cmp
imul
fwait
outsb
inc
mov
jl
sub
scas
adc
ret
sbbl
cld
push
jo
cmp
rcr
adcb
mov
and
mov
inc
mov
jbe
loop
xor
push
subl
adc
cmp
jecxz
adc
mov
stos
xchg
outsl
stos
pop
in
das
gs
data16
mov
stos
and
mov
push
fwait
cmpsl
rcll
jle
cmpsl
ret
cmp
lds
int3
jecxz
sub
mov
out
add
js
test
jnp
mov
popa
cmp
outsb
loopne
lcall
or
pop
stos
mov
push
enter
loop
test
cmp
sbb
xchg
repnz
push
adc
inc
mov
dec
repnz
imul
aam
mov
jmp
hlt
sub
jge
out
dec
mov
insb
idivb
out
fs
popf
push
dec
sbb
cmp
sarb
pop
lds
cmp
je
int
cmp
dec
adc
ljmp
add
popl
push
and
out
testl
leave
mov
sub
xchg
xchg
rorb
aam
push
or
mov
daa
push
pop
lea
sub
dec
inc
push
mov
test
inc
adc
repz
sbb
mov
loope
adc
sbb
lahf
pop
lahf
test
pop
cld
ja
add
jle
lods
addr16
aad
dec
popf
pop
in
sbb
jmp
addr16
jo
je
adc
pop
sbb
movsl
fcomps
insb
mov
and
push
cmc
imul
stos
push
ljmp
scas
inc
jae
mov
out
add
inc
cmpsl
loope
out
daa
dec
pop
jge
add
pop
out
adc
dec
mov
lahf
sub
xor
adc
cmpsb
rcrl
cmpsl
lahf
cwtl
sub
inc
jb
mov
push
sub
xchg
in
fsts
push
test
jns
mov
fwait
hlt
testl
ret
shlb
dec
push
gs
and
fwait
mov
sti
xor
test
aas
jl
sub
adc
cld
out
jb
inc
negl
fisttpll
or
mov
dec
pop
out
mov
cmp
and
push
sub
xlat
ja
test
and
jmp
xor
imul
shll
jns
loope
xor
dec
testb
gs
test
mov
clc
jo
out
movsl
lahf
add
inc
xchg
fucomip
sbb
xchg
fsubrs
cmp
xlat
push
lods
es
jle
enter
mov
outsl
cmp
test
sti
push
push
fmuls
jp
add
popa
jle
cmp
mov
sub
sub
pop
jecxz
fiadds
jae
mov
push
push
push
push
mov
enter
sub
out
data16
xchg
insl
jge
movsl
mov
mov
jle
addr16
loop
mov
stos
xor
into
lcall
push
push
push
xor
add
repz
push
fwait
dec
hlt
or
pop
pusha
add
inc
data16
adc
popa
bnd
sbb
movsl
cmpsb
and
clc
je
push
add
add
inc
das
mov
push
inc
xchg
movsb
addr16
dec
imul
mov
adc
jno
push
or
jne
pop
add
mov
aad
add
sub
push
out
test
bound
cmp
mov
call
cli
xor
imul
push
and
xchg
fwait
push
xchg
mov
add
or
cmp
mov
iret
pop
add
aam
adc
inc
int3
sahf
xchg
mov
adc
sti
jne
andl
ret
pushf
jae
lea
popf
xchg
and
ret
stc
ja
rolb
pushfw
pusha
cmp
inc
mov
pop
fisubs
daa
push
lret
and
mov
cmp
scas
sub
adc
fidivrs
repnz
cmpsb
dec
int
ds
js
hlt
sub
xchg
jb
pop
adc
mov
std
mov
imul
pop
and
cmp
das
push
sub
push
imulb
sbb
xor
inc
mov
mov
ljmp
dec
xor
movsl
mov
stos
out
ret
sbbl
pop
addb
punpckhbw
divb
mov
dec
popa
inc
aad
jno
movsl
mov
ror
sbb
mov
aam
inc
push
and
les
xlat
mov
std
sub
xchg
pop
mov
jno
mov
lcall
push
mov
out
jmp
ficompl
mov
les
lret
add
mov
sti
addr16
adc
mov
inc
ror
dec
inc
mov
cmp
shrb
jae
dec
push
mov
push
test
pusha
sub
insl
les
mov
mov
adc
add
jno
in
mov
push
jmp
mov
xor
mov
mov
bswap
mov
leave
sub
sub
mov
cmc
les
lods
rcll
ret
sub
sub
xor
dec
imul
sub
mov
mov
mov
adc
inc
cmp
pop
and
push
neg
leave
cmpsb
adc
addr16
dec
dec
into
sbb
stc
mov
out
mov
push
call
add
lcall
popf
inc
xor
sbb
lods
mov
push
sbb
pop
lcall
add
fadd
movsl
add
xlat
out
jmp
ret
cmp
dec
inc
xchg
xchg
scas
push
andl
out
mov
add
arpl
or
das
in
or
cwtl
xchg
nop
cwtl
jno
gs
jle
loopne
jle
movb
inc
adc
inc
cmpsb
mov
sbb
dec
pop
dec
inc
jb
sub
mov
negl
jne
jno
mov
mov
mov
jns
sahf
add
rcr
inc
jmp
adc
arpl
jns
mov
dec
sbb
decb
add
js
xchg
in
insb
xchg
and
ret
mov
out
rcrb
mov
mov
add
flds
fcmovu
lahf
mov
add
push
sub
sbb
inc
aas
in
lcall
in
out
push
and
add
sbbl
mov
rolb
aaa
cld
orl
or
pop
fcoms
sub
popa
mov
lock
out
xor
je
pusha
xor
add
jl
stos
lea
shr
and
ret
push
cmp
xor
ret
decb
repnz
pop
cmpsl
sub
dec
inc
lods
js
stos
or
into
adc
push
test
test
pop
cmp
cltd
cmp
cltd
fcoml
mov
mov
loop
add
push
outsl
imul
dec
xchg
subl
movntps
push
lcall
lock
push
outsb
mov
pop
dec
frstor
bnd
subb
pop
cmp
bound
lods
js
shrb
mov
test
inc
mov
pop
fs
mov
jo
or
iret
lcall
test
cld
push
dec
addr16
pop
mov
dec
into
mov
sahf
cmp
push
add
insb
bswap
dec
fisubs
sbb
and
jg
dec
outsb
mov
push
loop
nop
mov
movsb
pop
or
insb
cmp
sub
cmp
mov
out
cmp
mov
push
addr16
mov
iret
int3
sarb
add
test
pop
sub
inc
fstpt
mov
push
repz
sub
stc
int3
pop
andl
repz
add
mov
leave
lock
test
in
jno
xchg
and
xchg
jmp
mov
std
inc
sbb
xor
push
orl
ss
sub
mov
cli
xchg
cmp
outsb
xor
ret
or
push
push
or
xor
sbb
in
daa
lea
xor
xchg
icebp
fdivp
fmulp
sbb
sub
or
enter
xor
imul
popf
insl
mov
sbb
push
lods
loope
pop
jae
test
or
popf
arpl
mull
test
imul
xchg
sub
mov
rcr
jns
scas
sub
imull
leave
loopne
xchg
scas
in
xchg
fidivl
pop
xor
or
out
enter
int3
add
jmp
push
rcrl
push
inc
loop
es
xchg
outsl
push
cmp
dec
mov
aaa
shrb
lea
loop
xchg
add
pop
fdivr
lcall
cmp
loop
les
xor
xorb
mov
call
movsl
mov
shlb
test
insb
dec
pop
add
dec
sub
pusha
sbb
nop
leave
mov
add
and
jle
sub
fs
in
fdivs
cmp
mov
or
lret
movsl
mov
or
mov
mov
in
mov
pop
repz
mov
jecxz
enter
push
stos
cli
lea
enter
push
mov
cld
out
xor
rclb
sub
jmp
sbb
fwait
adc
cld
cli
call
ret
fisttpll
testl
ss
test
fcompl
push
cwtl
sub
popl
popa
xchg
push
add
loopne
pop
xchg
mov
dec
xor
sub
inc
fisubs
cmpsl
mov
xchg
xchg
std
ret
orl
jl
outsl
mov
jle
hlt
outsb
out
push
jle
test
sahf
mov
jae
sub
cld
sub
fistps
push
pop
loop
pop
pop
mov
add
pop
mov
ret
mov
inc
jecxz
xchg
je
inc
inc
cmc
xor
lods
rorl
idiv
or
mov
cld
cmp
push
cmp
cmp
stc
mov
pop
inc
dec
leave
push
dec
add
hlt
pop
dec
ss
and
lods
jmp
rolb
es
pop
push
out
imul
jle
xchg
insl
xchg
jbe
and
jmp
jb
pop
in
push
dec
into
jle
pop
inc
imul
adc
add
push
mov
mov
lock
stos
jo
mov
pop
sbbb
mov
stc
nop
or
sti
push
mov
fisttpll
adc
nop
clc
jno
out
dec
imulb
or
mov
or
pop
in
lea
mov
imul
mov
hlt
clc
aam
jno
popa
cs
jbe
incl
sbb
das
and
imulb
add
cli
mov
and
xchg
aaa
push
and
push
xchg
call
xchg
mov
jae
popf
push
fildl
inc
adc
push
loopne
shlb
stc
mov
or
add
mov
push
sub
mov
sbb
mov
push
cmpsb
mov
dec
mov
push
mov
pusha
popf
xchg
aas
push
cwtl
rcrw
add
fidivrl
repnz
cmpsl
push
cmp
sahf
test
jne
sti
push
popl
push
fcmovu
adc
movsb
sbb
adc
ret
jg
out
push
leave
push
xor
jnp
xchg
mov
in
cltd
jae
mov
xchg
dec
inc
scas
cmp
mov
mov
roll
dec
das
lret
sbb
mov
out
or
fnstsw
adc
test
xchg
rcrl
cltd
gs
aas
jne
aas
lds
adc
pop
cmp
xchg
cmp
fildl
imul
jbe
inc
mov
js
cmc
movsb
xchg
jmp
addr16
push
outsl
sbb
inc
dec
insl
xorb
push
inc
lock
lcall
add
jb
mov
mov
iret
mov
adc
sbb
in
mov
jg
mov
mov
call
jb
jno
pop
mov
int3
leave
fistps
test
ficompl
jmp
cmp
fcmovu
adc
loope
imul
xchg
mov
ja
mov
push
dec
cmp
mov
in
test
stos
pop
fsubs
sub
or
mov
xchg
xchg
mov
mov
jmp
jo
pop
imul
ret
and
je
xor
enter
nop
gs
dec
mov
in
sarl
call
cmp
mov
movsb
je
jecxz
mov
xor
xlat
pop
jl
lods
inc
mov
repnz
inc
adc
sti
sahf
sub
arpl
mov
dec
call
rcrb
xchg
mov
popa
int3
mov
dec
xor
cmpsl
mov
mov
cmpsl
pop
lock
pop
and
adc
insl
mov
add
icebp
inc
mov
fiaddl
add
ja
add
dec
addl
gs
or
dec
xor
rcrl
xchg
add
pop
call
rorl
xchg
dec
jbe
add
sbb
cmpsb
add
sahf
adc
mov
popa
mov
add
pop
in
or
sbb
pop
sub
daa
cmp
mov
rorl
scas
push
jno
adc
shll
cmp
stc
ss
mov
xchg
dec
movsb
dec
add
jg
add
sarb
mov
cmp
dec
xchg
insb
fsubrp
jp
dec
popf
aas
mov
sbb
scas
mov
out
ss
mov
sbb
aas
pop
dec
out
adc
outsb
inc
add
arpl
jmp
jo
sub
insl
inc
int
repz
in
lods
loope
clc
cld
pop
sahf
jl
lods
pop
cmp
dec
push
scas
test
add
pop
dec
daa
cwtl
aaa
loop
or
add
stos
sub
inc
daa
fadd
mov
adc
scas
add
pop
int3
add
mov
cmp
jmp
sub
jns
pop
and
shll
push
in
cmp
ficoms
pop
test
jge
cli
es
pop
jo
sti
mov
lock
push
loope
fyl2xp1
jns
and
add
jmp
xchg
out
xchg
cmp
test
inc
bound
iret
push
mov
divl
and
and
xor
sbb
dec
or
mov
call
inc
shr
fstp
xchg
dec
fwait
lcall
dec
iret
enter
push
adc
int3
sub
or
out
xchg
mov
aaa
inc
stc
lret
fnstcw
das
add
mov
mov
adc
mov
in
insl
clc
into
test
xchg
fwait
push
push
popa
sub
ljmp
loope
inc
pusha
testl
lret
push
mov
in
movsb
shlb
repz
cmp
dec
sbb
sub
incl
iret
pop
fimuls
jne
repz
xchg
aam
jo
jle
adc
pop
xor
stos
mov
mov
rorl
push
imull
data16
rcrl
std
in
mov
flds
leave
dec
dec
add
xorb
insb
in
push
push
test
xor
sti
dec
add
loop
flds
fisttps
and
insl
hlt
sub
repz
sarl
jbe
pop
mov
xor
cmp
pop
std
aam
enter
mov
outsb
mov
push
xchg
mov
mov
pop
stos
sub
repz
bnd
or
test
or
inc
pusha
es
arpl
andb
arpl
jle
sbb
scas
jnp
adc
mull
outsb
inc
clc
mov
nop
xor
pop
ljmp
outsl
inc
xchg
jnp
jmp
fwait
aaa
fiaddl
push
stos
lods
lahf
ss
repnz
js
es
divps
jle
fincstp
cwtl
popa
fdivl
imul
mov
pop
test
mov
xlat
cmp
mov
and
gs
out
xchg
clc
or
mov
xchg
xor
sbb
jo
mov
and
inc
dec
scas
sbb
popf
sub
jnp
xor
dec
mov
sbb
dec
cwtl
leave
fsubs
std
cmp
es
out
fisttps
mov
xchg
daa
mov
or
and
incb
imul
sbb
sub
adc
insb
mov
pop
sbbb
lods
mov
negl
jns
pop
and
int
sub
or
mov
aam
mov
push
icebp
out
and
mov
popf
cld
adc
lea
lods
insb
jo
pop
in
sbb
stc
and
cwtl
lret
jl
rcrb
xchg
fld
fmulp
mov
mov
ds
test
adc
ja
xchg
push
dec
aam
jns
or
out
inc
stos
mov
fdivl
xchg
jnp
xlat
sub
push
mov
insb
repnz
lods
inc
push
dec
inc
outsb
std
inc
bound
xchg
rol
clc
xor
dec
stc
mov
xchg
je
mov
sbb
mov
mov
out
loopne
adc
cmp
in
cmp
gs
xchg
gs
jbe
pop
in
rol
inc
jle
inc
pop
arpl
adc
mov
lods
and
mov
xor
sbb
bound
data16
ret
or
mov
sub
nop
ret
add
sub
aad
mov
mov
push
fadd
mov
cmp
or
leave
lcall
jge
jbe
and
aam
jbe
inc
test
stos
jecxz
jae
dec
lock
repnz
jb
aaa
cmp
dec
dec
out
mov
mov
push
mov
imul
cwtl
push
mov
pop
and
lret
ror
out
adc
ja
jmp
add
test
jo
loope
stc
enter
sti
out
popl
inc
sub
cmpsl
push
xchg
xchg
popf
subb
ffreep
push
pusha
mov
popf
arpl
dec
loopne
out
xor
mov
xchg
out
mov
out
cmc
pop
fwait
push
scas
mov
cmpsb
test
mov
push
sub
pop
sbb
and
fdivrp
sar
pop
lea
xchg
aaa
xlat
adc
mov
xor
test
cli
jb
lret
inc
fisubl
scas
pusha
lods
jmp
cli
mov
xchg
popf
push
jb
push
das
cmp
sbb
clc
dec
test
imul
hlt
ror
or
add
mov
stc
sar
pop
sbb
inc
jns
jnp
into
dec
sub
and
in
mov
cmp
outsb
cmp
ret
sbb
leave
lods
push
dec
inc
sbb
mov
popa
cmp
aad
mov
fwait
aaa
mov
data16
mov
lcall
loope
jg
cmp
mov
int3
lods
lret
int
popa
pop
subl
test
push
cmp
out
js
rcr
dec
rol
jnp
xchg
lea
mov
push
pop
jno
call
jae
roll
scas
in
xchg
mov
cmpsb
inc
stos
div
lret
test
mov
frstor
mov
jle
sub
mov
or
outsb
cmp
and
sub
sbb
fcomps
popa
add
sbb
xchg
fidivrs
inc
cmp
daa
scas
dec
aam
jo
cmpsb
pop
push
iret
mov
pop
cmpl
mov
mov
fs
stos
xchg
jbe
sti
addl
sbb
fbstp
pop
inc
insb
and
xchg
jno
fstpl
and
inc
repnz
sub
push
out
cmp
dec
pop
sub
mov
test
pushf
pop
xchg
sub
mov
cmp
inc
fwait
dec
out
mov
pop
negb
mov
cmc
or
mov
dec
scas
push
sarl
sub
push
int3
sub
cwtl
xlat
xchg
sti
sbb
and
dec
or
dec
mov
jp
adc
xlat
cld
mov
xlat
inc
dec
xlat
and
xchg
pop
sub
fwait
movsl
je
mov
psubsw
inc
loope
or
push
out
jg
enter
sub
lcall
pop
xor
ret
in
aam
dec
add
movl
pop
fwait
stos
push
negb
xor
sub
lss
jnp
lods
scas
xor
fsubs
fmuls
push
test
xor
inc
xchg
push
and
cltd
mov
sbb
jnp
shlb
jp
sbb
or
push
mov
pushf
jb
pop
lea
ss
pop
inc
ret
popf
jne
mov
lret
hlt
pop
inc
mov
pop
dec
ss
mov
arpl
mov
insb
ds
mov
xor
sub
xchg
dec
adc
mov
hlt
mov
in
dec
adc
mov
rcrb
ds
cmp
push
sar
and
sub
cld
xchg
push
imul
xchg
push
cmp
icebp
int
mov
add
add
mov
jne
xor
jb
push
and
adc
add
add
outsl
dec
xor
mov
mov
sub
pop
out
jg
cwtl
aas
add
push
fnsave
popl
int3
mov
xlat
lods
mov
cmp
dec
icebp
jno
scas
push
mov
inc
call
pop
outsb
mov
leave
rcll
leave
push
sarl
push
fiaddl
jmp
xor
and
pushf
sbb
jae
mov
lea
ss
push
fsubrp
dec
imul
dec
mov
inc
out
mov
sti
or
movsb
cmpsb
mov
and
js
insl
jl
xchg
test
xor
and
ljmp
jb,pt
movsl
pop
pop
dec
lea
pushf
dec
mov
dec
icebp
and
inc
inc
je
scas
pop
in
mov
sbb
scas
shll
jmp
in
out
sbb
dec
aas
out
dec
push
inc
loop
inc
shr
mov
mov
test
mov
mov
and
fnsave
ljmp
sub
int3
enter
inc
js
andb
add
xchg
es
lahf
imul
nop
aas
test
jnp
or
aas
popa
lds
inc
rep
inc
mov
jecxz
xor
xchg
movsb
sbb
loop
mov
xchg
adc
icebp
mov
xor
es
loopne
cmpsl
or
test
bound
sbbb
lods
adc
cwtl
sbb
aas
add
fistpll
push
shl
in
lret
dec
insb
jmp
xchg
mov
sub
adc
mov
loopne
in
mov
jnp
out
sbb
sbb
cmp
aas
pop
rolb
mov
dec
insl
mov
push
xor
sbb
call
push
mov
mov
repnz
push
xlat
unpcklps
push
jne
rep
cmc
insb
cmp
cmp
daa
cmpl
push
xor
jecxz
int3
xchg
inc
fldenv
pop
jmp
sbb
das
mov
or
mov
test
push
bnd
mov
jecxz
sub
test
and
flds
mov
popa
mov
mov
sbb
pop
lds
rcr
in
mov
es
shlb
adc
mov
xchg
add
filds
fisubs
out
add
pusha
pop
imul
subb
scas
lea
cmp
int3
dec
xchg
out
adc
aad
pop
xchg
add
das
cmc
xor
xlat
sahf
mov
sbb
pop
lret
bound
out
or
jne
adc
testb
jne
aaa
mov
push
lahf
popf
fistps
xchg
adc
jmp
pop
fsubrs
pop
loopne
or
rolb
mov
push
cmp
js
cmp
adc
pop
shr
dec
jb
mov
popa
mov
push
and
neg
add
movl
pusha
push
sbb
jae
mov
shl
cmpsb
mov
lret
mov
je
mov
dec
cmpsl
lahf
int3
aad
outsl
pop
frstor
movsb
push
and
cmpb
pop
jmp
push
or
fidivl
jae
dec
sti
icebp
mov
ljmp
stos
pop
adc
movsl
jo
cmp
mov
shll
btl
stos
jmp
cmpsb
js
js
jo
mov
enter
leave
inc
sbb
dec
pop
test
dec
xchg
imul
xor
mov
es
fsubl
dec
inc
or
in
pop
insb
mov
dec
movsl
cmp
fst
dec
cmp
rcrb
flds
mov
xor
inc
rol
pop
adc
mov
arpl
xchg
popf
jge
sub
push
mov
cmp
aam
inc
nop
std
arpl
mov
fstpt
adc
adc
fiaddl
mov
pop
xchg
divl
es
xorl
sbb
in
jl
xchg
cmpsl
int
push
sub
leave
add
mov
sub
les
repnz
sti
bound
lock
fs
or
sbb
shrb
sbb
pop
push
fwait
pop
mov
or
pop
mov
test
cmp
sahf
pusha
pop
sbb
and
dec
mov
pop
outsl
imul
outsb
movl
dec
sub
mov
inc
imull
out
sti
fstps
dec
adcl
ss
dec
inc
clc
nop
pop
or
stos
push
movsl
mov
cmp
jae
cwtl
lock
pop
dec
out
shlb
pop
xchg
push
cwtl
insb
xor
lock
lods
ja
mov
jge
gs
push
push
add
mov
addr16
mov
adc
cmp
pop
xor
inc
movsb
jecxz
mov
repz
cmp
fs
cmpsl
push
and
xor
daa
inc
loopne
in
cmpsb
push
fcomps
or
fwait
daa
push
ret
imul
frstor
enter
imul
jmpw
rolb
shlb
dec
push
xor
repnz
and
pop
imulb
aad
or
pop
xor
mov
stos
andl
xchg
cli
or
setbe
jbe
leave
jno
test
emms
mov
leave
call
aad
adc
fwait
xchg
sbb
fidivs
icebp
into
inc
stos
addr16
fidivrs
push
xchg
inc
cmc
push
fstps
das
sbb
andb
push
jmp
sub
xor
push
imulb
ljmp
jno
adc
jb
or
imul
out
dec
rcrl
dec
sub
fsubrl
adc
ss
fs
repz
cli
loopne
xchg
movsb
bound
cltd
push
sub
imul
xor
icebp
pop
xchg
pop
hlt
hlt
ss
mov
out
xchg
jnp
sbb
pop
push
xor
mov
rcrb
sarb
mov
push
pop
add
stos
xor
add
cmp
or
mov
das
mov
iret
push
adc
aam
fcompl
mov
test
and
jo
fsubrs
add
cmp
xor
jo
daa
xor
fwait
insl
ficompl
lret
ss
jno
xchg
or
sub
sbb
into
mov
mov
and
and
cmp
rcl
jb
add
xor
sbb
sub
push
mov
imul
outsb
push
iret
ficoms
pop
xor
mov
addr16
inc
shll
jge
test
je
mov
sti
mov
stc
sbb
pushf
dec
pop
cmpsl
push
dec
and
in
cwtl
shlb
idivb
int3
mov
lcall
or
xchg
iret
sbb
mov
mov
push
cmp
mov
adc
mov
inc
adc
sbb
pop
push
add
mov
or
mov
iret
testl
push
test
cmp
push
mov
adc
pushf
cmp
xchg
add
cmp
add
inc
xor
test
mov
cmpsb
iret
xchg
push
clc
cmp
repnz
dec
enter
jle
std
mov
xor
mov
adc
ror
cmp
loope
mov
ret
sbb
hlt
cld
aas
or
repz
in
lods
jge
pop
sbb
add
iret
or
repz
stos
mov
pop
out
sub
iret
jmp
xchg
aaa
in
adc
iret
mov
stos
cmp
inc
outsb
dec
push
out
sbb
and
mov
pop
push
ds
popa
in
inc
test
xchg
daa
movsb
cld
daa
xlat
xor
xor
add
ret
cmp
data16
push
and
lret
mov
daa
mov
gs
add
in
pop
mov
out
mov
push
cmp
rcll
push
push
movsl
or
jle
lcall
mov
out
sbb
mov
leave
xchg
sub
outsl
jbe
mov
adcl
xor
pop
fiaddl
aas
repnz
iret
cmp
out
mov
mov
add
pop
pop
loop
lods
sti
push
sarl
sub
das
mov
cmpsl
mov
pavgb
mov
inc
fwait
mov
outsb
pop
addl
jg
daa
pop
xchg
xchg
xchg
pop
or
push
mov
dec
pop
mov
push
push
sbb
sarb
clc
inc
fldl
push
dec
rcr
in
out
popa
ja
je
push
xchg
xchg
leave
sbb
lock
je
shl
mov
push
repz
mov
aad
add
jno
dec
lds
cmpsb
ljmp
cmp
arpl
and
inc
jl
mov
inc
rorb
pop
mov
dec
lock
push
mov
cmp
cmpsb
cs
jb
loopne
inc
ficomps
jp
push
shrb
out
cmpl
cmp
fidivl
in
lret
outsb
outsb
std
sbb
xchg
sub
jmp
pop
in
pop
mov
adc
aad
and
and
gs
xchg
jnp
repz
xor
imul
or
push
and
pusha
xchg
mov
push
mov
ss
stos
pop
out
mov
mov
mov
mov
mov
pop
pop
push
dec
test
add
xorb
and
insb
in
mov
add
js
stos
push
xchg
dec
sub
into
cmpsl
js
pop
sbb
sub
out
out
test
mov
pop
push
lea
or
jmp
pop
data16
xlat
and
mov
or
std
jo
push
or
testl
mov
push
lods
fcoml
mov
push
imul
dec
pop
xchg
fucomip
ret
std
fmull
inc
loope
shr
sti
push
in
mov
inc
xor
int
cmp
outsb
or
std
jmp
jne
les
cmp
mov
pusha
into
ja
xor
adc
xchg
popf
imul
movsl
enter
jmp
adc
icebp
lret
push
pop
push
ror
fildl
push
outsl
inc
xlat
pop
out
jns
pop
push
and
xchg
in
and
in
pop
jge
push
adc
dec
imul
jl
mov
ja
jge
sbb
mov
mov
in
fmuls
cli
cmp
pop
cmp
out
pop
ret
jge
mov
mov
in
loope
dec
push
mov
jno
push
mov
mov
mov
sub
xchg
sub
pop
test
lds
shl
roll
inc
adcb
std
dec
scas
mov
mov
lea
mov
pop
jge
test
movsb
xchg
int3
sub
xchg
dec
jl
mov
rcrb
push
push
dec
and
xor
sti
mov
sbb
gs
mov
int3
xchg
imul
stc
or
int3
xor
jae
push
dec
adc
sub
jmp
sub
movsb
xor
push
data16
or
mov
xor
sbb
mov
jge
orb
push
inc
pushf
xor
sub
sbb
inc
fidivrs
inc
mov
bound
push
jae
loopne
add
and
js
xlat
lea
fsub
mov
lret
pop
adc
outsb
loope
stos
paddsw
add
xor
insl
sbb
xor
scas
mov
xor
add
lds
adc
mov
test
jp
ja
sub
adc
lea
mov
sahf
ljmp
mov
outsb
cltd
or
mov
sub
in
arpl
cmc
mov
sbb
lret
les
stos
inc
add
bound
add
jb
inc
jg
ret
out
cmp
pop
mov
and
jae
mov
ss
movsl
pusha
jae
mov
arpl
test
dec
aam
cltd
ljmp
pop
js
and
cmpsb
cmp
out
jne
es
repnz
adc
std
insl
mov
leave
dec
lcall
mov
ljmp
insl
bound
xor
and
pop
push
out
jne
jmp
mov
push
movsl
jecxz
xchg
and
pop
repnz
ds
push
leave
pushf
adc
loope
les
sub
lods
adc
stos
pop
sub
iret
ror
mov
jg
out
push
cmp
xor
sbb
loope
xchg
xor
mov
adc
xchg
ret
or
es
xchg
jl
add
or
push
fidivs
loopne
lods
jne
pop
push
push
mov
add
cmp
stos
gs
jmp
loop
and
aas
mov
fstl
and
int
fisttpl
mov
out
xchg
add
push
mov
xchg
stos
dec
pop
in
inc
dec
add
push
pushf
mov
popf
mov
mov
xchg
sti
jle
test
in
ret
xchg
or
xchg
or
ds
push
int
aad
xor
ret
sbb
stc
out
scas
ret
into
lds
fmuls
incb
ret
jl
js
xchg
push
lods
mov
xchg
rcrl
cwtl
and
shlb
enter
and
jno
stc
leave
lcall
push
dec
xlat
adc
jmp
adc
mov
stc
mov
sahf
ja
dec
negl
sub
sub
cli
nop
push
sub
cld
xor
jbe
sub
imulb
ret
in
out
cmp
pop
mov
fists
mov
jecxz
fldz
and
loope
sbb
lret
add
mov
xchg
shll
dec
pop
inc
push
push
jmp
sub
or
arpl
dec
inc
pop
mov
repnz
cmpsb
ljmp
arpl
imul
push
hlt
xchg
mov
mov
dec
pop
and
push
jp
shlb
mov
cs
cmp
mov
dec
pop
pop
mov
sahf
pop
cmp
or
ja
sti
mov
push
in
xchg
stc
jge
sbb
mov
adc
and
stos
xchg
mov
cltd
mov
xor
pusha
mov
xchg
gs
ret
insb
push
pop
mov
adc
mov
mov
sub
xor
scas
mov
popf
cmp
xchg
jo
ja
push
inc
xor
js
fistpll
test
stos
dec
push
std
jp
xor
stc
fucomi
push
into
cltd
push
xor
push
mov
mov
and
lret
jp
imul
cmp
or
cmpb
pop
ljmp
aam
rorl
scas
fs
mov
daa
add
leave
into
cltd
je
jns
imul
fildll
xchg
mov
sbb
leave
add
fisttpl
cmpl
push
js
xor
rol
pop
mov
mov
pushf
je
cmp
adc
pushf
add
lret
mov
mov
xchg
loop
sti
and
movsb
cmp
mov
adc
push
inc
mov
leave
aad
fldt
mov
dec
inc
mov
sub
nop
add
addr16
das
cld
cmpl
dec
fldcw
les
das
shrb
and
sar
add
adc
jo
cld
pop
inc
xchg
lahf
inc
jle
mov
pushf
aas
push
js
xchg
dec
out
xchg
ss
jbe
ret
jnp
jecxz
jnp
loop
adc
cmp
scas
call
pop
daa
std
scas
mov
mov
popf
push
in
xor
in
push
repnz
mov
cmp
jmp
push
out
push
test
mov
ljmp
in
mov
icebp
or
test
icebp
cmp
in
out
xchg
xchg
loope
loope
fildl
push
bound
ja
mov
lea
dec
scas
inc
cs
cmp
xchg
or
testb
test
xchg
pop
daa
adc
rol
mov
mov
jge
lods
dec
outsb
fimull
jbe
fsubs
fmul
xor
pop
testl
pop
and
ret
push
pop
js
ret
repnz
repz
adc
fs
and
pop
std
ljmp
push
cmp
wbinvd
fs
jp
cmp
xor
cli
loop
outsb
addr16
sti
sti
cmp
pop
pop
roll
jmp
sub
aas
pop
jl
adc
jecxz
add
pop
pop
sbb
xchg
jecxz
lcall
mov
out
popf
stc
adc
jl
cmp
sbb
xor
mov
cmp
pusha
or
outsl
adcb
loope
jle
inc
add
dec
fwait
in
ret
frstor
ss
push
pushl
xchg
sub
cmp
iret
mov
or
adc
imul
mov
or
and
inc
inc
out
icebp
push
mov
mov
rcll
bound
cmp
std
xor
addb
push
popa
and
data16
mov
mov
imul
daa
fidivs
xchg
scas
sub
aad
and
lds
sub
xchg
and
dec
mov
out
fdivrs
adc
xchg
sbb
out
xor
adc
jecxz
pop
xor
js
jb
mov
ljmp
dec
cmp
repz
dec
sarl
call
jnp
mov
fstl
js
xchg
test
mov
mov
jmp
sub
inc
inc
ss
xor
outsb
ret
fldt
hlt
pop
es
mov
aam
xchg
cmp
add
negb
test
or
ss
bound
push
out
aaa
aam
mov
dec
data16
imul
adc
xchg
test
mov
add
in
ret
pop
mov
sub
mov
mov
and
sbb
push
insl
out
sbb
shl
mov
inc
lods
mov
enter
mov
fidivrl
xor
sub
push
dec
cmpsb
and
cmpsl
lds
mov
or
shr
test
or
jb
mov
divb
add
jmp
adc
iret
cmp
fdivs
rcr
test
fadd
loop
test
es
inc
pop
mov
pop
cmp
pop
test
std
jb
lret
and
mov
test
inc
call
push
add
mov
sbb
dec
mov
sahf
test
sub
dec
loop
outsb
aas
xor
in
push
xchg
sahf
pop
inc
sub
lahf
xlat
xchg
jae
insl
mov
mov
loop
and
int3
and
push
mov
fwait
pushf
rcr
pop
xlat
les
pusha
and
insb
inc
cmp
dec
mov
xor
and
cld
movl
pop
dec
sbb
insl
add
insl
loop
sbb
loop
in
negb
loope,pt
bound
sbb
and
jbe
mov
jb
js
mov
in
scas
xor
daa
lea
mov
ret
rcll
pcmpeqd
push
dec
pop
pop
jle
inc
test
mov
cmc
cmpsb
push
movntps
int
es
push
js
mov
cmpl
int3
inc
pop
test
jns
sbb
jne
push
insb
mov
lcall
sub
js
add
int
and
add
orl
mov
sub
pop
dec
scas
lods
jo
popf
jmp
lods
leave
pushf
push
imul
dec
dec
pop
and
push
xor
lock
mov
xlat
sub
cwtl
out
shlb
jae
jae
pop
adc
or
push
fimuls
and
sahf
jo
lds
inc
adc
jne
lcall
fcmovnb
sbb
sbb
pop
jns
imull
lret
lock
out
lds
cmp
xchg
or
or
stc
insb
mov
lahf
cmp
lahf
repnz
arpl
fsubr
mov
xor
add
test
mulb
out
scas
es
nop
out
mov
jo,pt
scas
std
subl
push
ljmp
in
sub
dec
xlat
mov
aad
dec
jno
ljmp
xor
mov
pmullw
mov
test
xchg
inc
xlat
adc
mov
mov
or
jmp
sub
jns
in
scas
mov
gs
je
adc
jl
mov
test
nop
xchg
adcl
sbb
push
jmp
or
out
cli
ret
lods
xlat
sbb
in
push
pop
das
in
inc
adc
push
add
popf
gs
mov
mov
les
push
or
test
push
test
inc
cmp
in
mov
push
pop
inc
jno
dec
data16
push
enter
cmovle
icebp
add
cmc
dec
loop
or
or
push
jns
loope
add
orl
pop
inc
jne
mov
dec
xor
cmpsb
fcompl
sbb
inc
cmp
mov
movsl
movsl
cwtl
das
aam
outsb
in
lea
movsb
sub
inc
inc
in
lods
lods
fcoml
loopne
es
and
imulb
dec
mov
emms
fisubrs
jl
data16
pop
enter
dec
cmp
xor
gs
iret
push
dec
xlat
jle
data16
sub
loopne
adc
das
fidivl
out
scas
call
jae
jg
scas
dec
xlat
into
push
in
dec
ja
mov
nop
pop
sbb
mov
insb
or
xor
ds
call
test
nop
adc
mov
mov
rol
out
js
daa
popa
xor
clc
mov
out
add
pop
roll
test
pop
out
jb
clc
int
ja
xorl
pop
jno
outsb
sub
leave
out
test
add
push
dec
rcrb
scas
add
aad
ret
popf
shlb
test
push
and
icebp
mov
mov
pop
push
std
inc
or
push
pop
push
fs
and
mov
jg
loope
je
and
xchg
push
orb
insl
xchg
test
mov
daa
aas
sbb
ljmp
mov
rcr
xchg
ja
pop
in
pusha
xor
mov
push
push
adc
fnsave
xchg
mov
imul
stc
and
mov
pop
dec
leave
dec
mov
dec
arpl
sub
loopne
roll
in
push
xor
mov
mov
fimull
aaa
sbb
int
cmc
lods
popa
and
cmp
pop
push
inc
inc
dec
ret
push
rcrb
iret
fcmovnu
test
out
jnp
or
out
loopne
sbb
cmp
shrd
mov
add
cmp
lods
loope
push
call
call
and
mov
outsl
neg
insb
addr16
push
jp
insb
jmp
lahf
call
push
or
or
lods
fnstsw
decb
sub
jo
jge
fcmovnb
dec
dec
dec
jge
and
mov
lea
push
sbb
orb
adc
inc
hlt
inc
mov
sbb
sub
mov
orl
push
das
or
cmpsb
push
imul
ja
fists
out
aas
sub
lcall
xorl
mov
loop
ret
mov
popl
and
icebp
xchg
fadd
or
insl
inc
mov
inc
repnz
mov
add
add
in
jecxz
add
push
repnz
dec
and
cld
mov
lret
mov
inc
inc
sbb
dec
cmp
in
pusha
js
mov
imul
adc
xchg
lods
jnp
js
loope
push
rcrl
lock
sub
scas
out
lea
dec
popf
les
vaddsd
daa
out
jb
add
add
ss
mov
and
dec
sub
mov
cmp
and
cmpsl
cwtl
pop
pushf
fsubl
mov
mov
negl
outsl
and
in
dec
pushf
in
mov
or
stos
fimuls
sbb
lods
jecxz
jge
mov
jmp
pop
pop
int
adc
pushf
rcl
aas
push
dec
sub
js
mov
jl
xor
sub
outsl
inc
divb
fildll
xchg
andb
dec
add
and
push
mov
pop
add
vpsubusb
xor
into
mov
push
jp
mov
not
ror
andl
ljmp
sub
js
lds
nop
imul
push
or
pushf
xor
fidivrl
leave
jg
lock
cld
mov
in
push
dec
insl
bound
sbb
mov
rclb
enter
int3
fcomi
jae
lea
jne
and
inc
push
cmp
scas
ror
loope
fmul
neg
adc
rcr
push
sub
add
xchg
test
lock
jl
repz
lahf
mov
in
xchg
imul
mov
jns
popa
inc
push
jns
ja
jbe
outsl
and
jbe
inc
add
cmp
int
ds
movsl
and
pop
lea
cmp
test
mov
fbld
cli
repz
xchg
push
lret
cmp
aas
xchg
sub
imul
sbb
inc
std
test
out
rorb
sbb
mov
gs
or
dec
push
mov
xchg
jg
out
mov
xor
sbb
mov
je
or
nop
loop
in
testl
iret
iret
lret
lea
xor
movsb
pushf
mov
lret
lahf
int
add
or
jns
mov
mov
dec
out
xor
adc
or
addl
stos
ret
andb
cmpsb
inc
push
mov
inc
subl
inc
cmp
or
add
cs
add
jmp
jge
fisttps
adc
jl
ret
aam
mov
jnp
loop
cld
adc
out
lea
push
xor
subl
rcr
mov
cmp
loopne
dec
or
fwait
mov
repnz
loop
pop
in
mov
and
dec
inc
ficoml
nop
push
inc
or
popf
pop
inc
aad
cltd
push
push
cli
adc
mov
fsubl
and
xor
lds
loopne
xchg
mov
into
cmc
jmp
pop
outsl
jg
pushf
jecxz
popa
inc
xor
test
push
imulb
pushf
imul
sbb
or
push
pop
jmp
cmpsl
mov
addl
ret
jae
imulb
xlat
mov
and
cltd
cmp
out
and
shll
lods
std
push
push
je
ret
push
mov
int3
rcll
scas
push
cmp
outsl
dec
mov
in
insb
jb
mov
push
dec
push
addb
negl
cmp
rclb
int
inc
ja
and
jp
push
cltd
xor
xchg
bound
leave
cld
cmp
add
lods
or
adc
test
mov
addb
pusha
xchg
es
lret
test
fs
stc
dec
daa
mov
mov
cmp
sarb
cmp
sub
xchg
push
xor
sub
cli
jecxz
mov
sbb
aas
daa
and
pushf
cmp
test
movsb
shrl
cmp
loope
fsubrs
stc
pop
jmp
int3
fstsw
in
out
aam
push
out
inc
jg
inc
add
or
sahf
pusha
add
sub
mov
ret
inc
es
mov
jae
lret
jb
adc
jbe
rcrb
aaa
dec
cld
dec
xor
mov
pop
out
sti
lea
das
aad
and
add
sbb
mov
or
sub
in
rcll
sub
lahf
and
sub
lcall
shl
pushf
jno
mov
iret
movb
inc
or
or
nop
rcrl
fstpt
mov
jmp
jmp
scas
mov
mov
push
lods
jnp
jns
sub
jmp
push
es
xor
dec
xchg
adc
lods
cld
dec
push
repnz
sub
lret
in
mov
xchg
fcmovb
nop
cmc
pop
cld
divb
rcll
rcll
iret
lret
lds
aaa
sbb
and
sub
xor
sti
adc
cmp
cmp
inc
lds
js
sbb
cmpb
fbld
lea
mov
test
mov
hlt
call
rcl
xor
ljmp
outsl
aaa
lret
xchg
jno
ds
dec
stc
jb
andl
push
jb
sub
xchg
add
ja
adc
je
xor
cld
outsb
in
imul
add
inc
mov
movsl
out
sub
mov
mov
repz
dec
lock
jae
roll
or
inc
push
adc
pusha
cmp
out
fidivl
push
sub
sub
sbb
dec
ret
mov
int
xchg
inc
out
inc
popa
cli
add
xor
lahf
mov
or
pop
inc
push
out
cwtl
mov
cmp
or
shr
cli
jns
or
sbb
shr
dec
adc
pop
sub
mov
stos
repz
mov
mov
lea
fucom
popf
sbb
mov
inc
xchg
fcmovnu
sub
in
sub
jge
sub
dec
jno
cmpsl
rcl
or
fnstcw
stos
ljmp
popa
xchg
xchg
add
aad
push
pop
ret
fistl
out
inc
imulb
loop
xchg
jb
push
lret
lock
xchg
lret
xchg
cmp
stos
lds
sbb
in
cmpsb
lret
jno
cmp
fsin
adc
push
push
and
push
imull
mov
clc
out
mov
in
sbb
cmp
jle,pt
dec
pop
sub
pop
in
in
push
ret
dec
outsl
xchg
into
push
lahf
sub
es
mov
out
mov
into
aam
push
lods
bound
int
jne
jb
cmpl
imul
popf
adc
mov
mov
cmp
aad
jp
mov
test
scas
jge
js
inc
xor
xor
adc
jmp
mov
out
or
cs
jb
push
pushf
jl
mov
adcb
push
and
inc
pop
cmp
adc
mov
fs
mov
rcll
sarb
jns
popa
data16
pop
ljmp
mov
or
in
xor
add
xchg
or
fcompl
shll
lret
inc
andb
ljmp
in
xchg
loopne
pop
pop
jl
pushf
dec
dec
cmp
rorb
mov
les
out
cmp
int3
icebp
dec
pop
add
vpsrld
or
pop
pop
mov
jns
shl
cmp
out
sti
popa
mov
test
sti
repz
scas
adc
add
testl
movsl
inc
bnd
inc
outsl
lock
or
stos
outsl
aad
mov
pop
js
mov
cmpsl
clc
ds
fucom
std
testl
fdivrl
jnp
mov
sub
movsl
dec
dec
mov
sbb
fstp
push
lea
mov
push
pop
in
shrb
jns
or
push
aad
mov
loop
xor
icebp
jne
test
call
movsb
movsb
cmp
mov
add
dec
xor
stc
aam
mov
test
movsl
mov
outsl
fistl
pop
jnp
sbb
adc
mov
or
jmp
outsl
push
pop
pop
cmc
sbb
or
repz
adc
cmc
dec
xor
mov
mov
mov
xchg
mov
jle
add
fwait
ret
in
clc
or
adc
or
leave
jmp
inc
loope
dec
sub
cmp
out
lods
ljmp
pop
xor
and
sub
cmp
movsl
pop
jb
jecxz
popf
mov
mov
add
lods
mov
cwtl
push
adc
push
data16
ret
adc
xchg
push
mov
cmp
pop
xor
xchg
sbb
pusha
mov
pop
xor
rcrb
dec
cmp
andl
movsb
cmp
mov
xchg
subb
mov
jbe
cli
inc
adc
movsb
sub
sbb
test
pop
cltd
sti
les
mov
dec
ret
rcll
rcrb
imul
xchg
mov
cmpsb
mov
and
lods
push
test
pusha
cwtl
int3
add
lea
and
xchg
inc
add
mov
adc
aam
jno
aaa
into
push
lret
mov
dec
lcall
in
push
ss
std
imul
adc
jle
int3
loopne
addl
pop
xor
mov
or
sbb
xchg
or
jb
ja
mov
dec
pop
sub
dec
ljmp
pop
add
push
addl
jae
mov
test
test
lea
cmp
jl
dec
inc
push
jmp
push
xchg
or
sar
pop
xchg
fidivs
shll
jae
leave
in
jge
mov
pop
dec
icebp
sti
mov
loope
mov
repnz
std
in
mov
adc
aad
pop
xor
dec
test
xor
inc
repnz
and
lret
cltd
cltd
xchg
in
or
scas
adc
mov
jp
cmp
shll
fsubl
or
popf
lahf
adc
xor
xchg
or
lods
adc
sub
jmp
xchg
ret
cmp
in
push
int
jno
repz
nop
push
pop
push
mov
jbe
jg
pop
hlt
inc
inc
sbb
push
scas
lods
call
add
xchg
or
data16
mov
xchg
xchg
stos
ds
in
fld
fdivrs
mov
lcall
out
pop
inc
cld
xchg
cmp
aas
dec
dec
test
cli
push
nop
sarl
mov
jmp
icebp
pop
ret
adc
inc
cmp
mov
add
mov
fcompl
mov
xchg
ret
mov
ret
sbb
dec
lahf
dec
mov
cmpsb
test
pop
xchg
jno
mov
insb
pop
dec
push
xchg
clc
insb
andb
or
je
ljmp
add
loop
and
icebp
fmul
or
sti
lds
sbb
push
xlat
jge
out
push
push
ds
out
rcll
mov
fwait
fwait
enter
adc
in
inc
sahf
movsl
jb
pop
stos
std
popa
cmp
pop
hlt
fs
or
push
pop
sbb
mov
inc
push
add
outsb
xor
rcr
movsb
les
adc
lret
mov
dec
cwtl
cltd
dec
mov
dec
dec
test
dec
hlt
cmp
sbb
aam
cmp
test
imul
cmp
push
dec
dec
movsl
in
xor
jno
and
pop
fildll
push
lret
mov
fildl
jle
stos
sub
imul
mov
pop
mov
divb
mov
jmp
into
fnsave
xchg
shl
les
rclb
sub
mov
pop
sub
mov
rorl
push
dec
xor
or
or
sbb
sarb
sti
pop
pop
pushf
lret
les
add
push
stc
icebp
insl
insb
pop
outsb
or
popf
mov
ss
dec
aas
xchg
jne
push
jp
dec
inc
fwait
cmc
lods
arpl
loope
mov
roll
jmp
fstpl
jno
mov
dec
ret
stc
jno
dec
or
daa
pop
pop
out
push
jne
les
xchg
adc
or
icebp
arpl
push
push
insl
dec
jnp
sbb
gs
xor
repz
pushl
add
cltd
jp
fcmovb
mov
pop
push
or
push
xor
or
stos
fabs
inc
pop
test
cmp
rolb
add
test
in
fstpt
sti
inc
mov
mov
test
cwtl
and
xor
and
and
pushf
mov
int3
xchg
xor
stc
lds
imull
es
and
pushf
cwtl
push
adc
enter
push
das
or
lods
inc
pop
pushf
int3
sahf
aas
xchg
dec
add
xchg
mov
cld
and
scas
jnp
mov
lcall
inc
and
push
iret
mov
mov
test
adc
sbb
fnstsw
push
hlt
adc
jns
adc
andb
fldt
xchg
lods
imul
add
mov
clc
xchg
mov
ret
movsl
xchg
sub
mov
inc
movhps
outsl
jge
out
data16
movsl
cmpsb
xchg
cmc
sbb
adcb
and
jo
xor
pop
mov
inc
mov
ret
pop
mov
mov
pop
cltd
cmpsl
ds
inc
cmp
test
icebp
pop
fstps
pop
or
push
mov
mov
add
push
ljmp
movsbl
dec
je
cmp
mov
add
std
cmc
mov
cmpsl
aam
add
movl
inc
hlt
push
sub
xor
and
sbb
or
fcmovnb
xor
jle
mov
jae
insb
and
jp
addr16
push
fstpl
dec
test
sub
in
inc
repnz
sub
xor
cmp
cmc
cmp
inc
mov
fildl
mov
and
int
mov
dec
jbe
sbb
pop
jg
cld
push
jne
mov
jl
sarb
cmp
mov
push
js
jp
push
xchg
jl
xor
xlat
xchg
jp
push
mov
adc
lods
xor
pushf
mov
adc
or
dec
lret
adc
cmp
cwtl
jbe
jp
in
rcrb
cmp
neg
push
loope
sub
ljmp
insl
push
inc
ljmp
or
or
and
or
and
mov
pop
sub
sbb
test
sub
jbe
shr
inc
out
in
adc
pop
sbb
lods
dec
mov
lcall
push
push
sbb
scas
and
or
movsb
lahf
ss
idivl
adc
or
push
xor
jecxz
aas
jl
aas
mov
adc
mov
and
or
jmp
not
scas
mov
jno
and
int3
cmovs
push
repnz
cltd
stc
xchg
lods
jne
push
push
mov
test
outsb
mov
loop
mov
mov
push
cmc
repz
jne
out
sub
ja
lea
mov
jae
mov
pop
adc
fs
pushf
test
test
cs
cmp
sub
loope
fcom
mov
fwait
lret
mov
iret
dec
mov
int
and
push
sub
ret
test
loope
out
mov
sbb
jns
shrb
pushf
push
adc
into
mov
popf
mov
fmulp
jae
sbb
filds
jbe
cmpsl
jbe
adc
and
push
loop
push
repnz
jg
dec
addr16
cmpsl
jecxz
sbb
sub
xchg
outsb
cs
push
push
test
fs
je
test
ds
outsb
dec
sarb
lahf
push
sub
mov
ret
hlt
pop
mov
mov
inc
push
mov
pop
outsl
mov
and
hlt
adc
pushf
pushf
add
push
xor
lods
dec
mov
in
fldcw
cltd
push
das
outsb
inc
cmc
mov
cmp
cmovg
cltd
stos
insl
es
in
loop
lret
jb
out
xchg
mov
ds
adcl
xchg
loopne
pop
int
mov
test
das
jnp
sbb
jmp
xor
lret
add
push
aad
imul
jnp
aad
and
sub
cmp
loop
mov
movsb
mov
icebp
inc
idivb
inc
adc
inc
mov
xchg
loopne
arpl
mov
lock
dec
xchg
inc
push
xor
js
push
ret
mov
xchg
push
mov
sbb
cmp
stos
ja
gs
out
cmp
or
je
lods
xchg
and
pushf
or
stos
lea
jnp
lret
sub
int3
sarb
mov
arpl
and
jp
or
lock
pop
cmp
sbb
enter
test
add
mov
sub
sub
xor
push
ret
cmc
mov
jp
shl
push
aaa
cmpsl
sbb
hlt
mov
stos
loopne
xchg
push
repz
ret
adc
je
cmp
xchg
jge
stos
pop
cmpb
popf
and
xchg
mov
mov
enter
loope
adc
push
test
push
xor
push
adc
and
cmp
and
outsb
mulb
pusha
scas
mov
xchg
popf
rolb
and
sbb
inc
xchg
clc
push
mov
push
or
and
push
xor
or
ror
sarl
gs
clc
lock
jl
in
sub
cmpb
repnz
inc
inc
aas
inc
scas
out
mov
mov
push
aam
and
cmp
pushf
add
cmpsl
xor
dec
xor
clc
fsubr
out
les
lds
pop
ret
mov
jge
jl
sub
fcom
mov
hlt
into
out
sub
xorb
rol
mov
or
mov
adc
dec
jle
inc
jb
pushf
sub
fcompl
loopne
pop
cli
add
push
jno
aaa
insl
mov
jl
sar
ljmp
and
fwait
cmp
sahf
and
sarl
xor
sub
cmpsb
mov
ds
push
pushf
pop
cs
pop
cli
push
pop
mov
lret
push
mov
daa
jle
call
insl
or
pop
call
rol
das
in
and
sub
mov
dec
mov
push
push
sub
jo
sub
fincstp
inc
daa
jb
push
dec
shl
rcl
push
sbb
test
lcall
lahf
push
nop
xlat
xor
loope
pop
out
sub
adc
and
push
or
push
and
es
aam
out
pusha
or
mov
inc
lock
mov
cli
mov
pop
cmpsl
jmp
and
imul
push
mov
inc
lds
xchg
inc
enter
cmpsl
adc
mov
loopne
pushl
sub
inc
or
mov
test
jb
mov
jge
jns
jmp
or
and
push
in
mov
lahf
in
sub
stos
lods
cmp
dec
loope
pop
jmp
lret
fwait
jg
ret
jle
hlt
std
and
fistps
out
xchg
cltd
mov
les
push
cmp
cmpsl
pop
cmpsw
cltd
adc
out
mov
mov
jmp
stos
sub
dec
loope
fstl
pop
add
fstl
sub
pop
sti
fdivs
sub
adc
aam
cs
popa
test
testl
xor
cmp
or
leave
push
mov
and
daa
ret
push
xchg
andl
or
and
and
mov
pop
mov
mov
aaa
out
push
mov
dec
mov
adc
mov
addb
push
or
call
mov
test
mov
mov
cmpb
push
lock
mov
lahf
xchg
inc
add
jl
out
sti
in
fwait
pusha
movsl
dec
test
mov
int3
js
cld
sbb
pop
lret
push
ret
add
mov
pop
mov
je
sar
adc
movsl
dec
push
jb
jne
mov
jnp
stos
pop
push
pop
jae
push
subb
pop
pop
push
adc
repnz
fcoms
mov
push
cli
cs
addb
jnp
jle
test
or
push
dec
movsl
repz
push
jb
test
and
sub
mov
imul
push
addr16
and
mov
and
stos
lods
mov
test
notb
xchg
mov
fnsave
out
adc
aad
mov
rorb
inc
mov
push
and
cwtl
sbb
jno
aam
cli
dec
pop
jge
out
mov
sub
pushf
sbb
push
test
pop
add
sbb
or
xor
and
cmpsb
cwtl
cmpsb
mov
inc
lahf
int3
sub
and
ficoms
fsubs
push
call
push
mov
out
jno
push
mov
sub
pop
xchg
cmp
iret
push
pop
orb
xchg
popa
aam
jno
cltd
or
dec
lcall
dec
je
adc
ljmp
loopne
daa
lret
push
pop
fiadds
jmp
mov
aad
cmp
test
ret
arpl
outsb
cmp
mov
mov
cwtl
dec
out
imul
and
out
sbb
test
std
cld
inc
fsubr
pop
push
inc
scas
lods
idivl
adc
jmp
xchg
call
int3
jne
mov
add
outsb
jno
and
or
mov
and
fsubs
sbbl
popl
ss
pop
dec
enter
inc
clc
add
add
aas
out
lret
push
dec
test
push
rep
and
cmp
jp
and
sub
mov
mov
adc
sub
andl
loope
cmp
mov
stos
mov
push
jmp
mov
xor
pop
pop
mov
dec
nop
in
mov
mov
ret
dec
xchg
ss
ret
lds
mov
dec
lods
gs
cmp
outsb
or
outsb
fidivs
hlt
mov
loop
movsl
sbb
and
icebp
clc
std
insb
inc
xchg
xchg
repz
mov
test
in
inc
pop
sub
aaa
adc
xchg
iret
xor
repnz
jmp
shrl
repnz
scas
hlt
fidivs
add
mov
push
push
jmp
stc
call
adc
adc
hlt
dec
pop
pusha
sub
cmpsb
dec
xor
mov
loope
mov
sub
sti
and
adcb
xor
out
cli
sub
lods
call
sbb
ret
int
sub
hlt
mov
push
ret
scas
outsl
or
push
lods
inc
mov
inc
loopne
mov
push
lret
sub
mov
push
mov
mov
xlat
jnp
pop
je
out
xchg
jp
mov
call
test
negb
in
inc
movb
mov
ficompl
aas
clc
mov
fimuls
adc
popa
dec
scas
and
push
mov
test
sub
in
test
mov
pusha
mov
out
sbbb
out
push
in
int
addr16
fisubs
push
pop
mov
mov
cwtl
sbb
fisubl
pusha
mov
inc
adc
pop
outsb
jmp
sub
mov
loop
inc
push
push
test
iret
dec
jb
inc
clc
fidivrl
push
mov
cmpsb
leave
xchg
movsl
sub
test
imul
ror
lods
and
fstpt
add
add
mov
add
sub
jp
adc
jl
mov
push
jecxz
dec
popa
pop
ficompl
dec
inc
sbb
xchg
clc
rcl
ja
daa
ss
bound
lcall
push
jmp
fs
hlt
aaa
movsl
push
mov
je
push
es
fdivrp
xor
test
fstpt
lahf
adc
sbb
mov
test
pusha
pop
mov
lea
shlb
adc
inc
sub
mov
je
icebp
jmp
jb
test
pop
pop
imul
mov
inc
and
lret
int
mov
stos
xor
addr16
movsl
loope
sub
iret
imul
mov
aam
jl
mov
mov
ljmp
xor
in
js
std
lock
fisubrs
mov
cmp
insl
in
ljmp
je
lods
jp
aaa
ds
push
int3
test
stos
jl
lret
stc
fisubrl
jge
lods
test
loopne
cmp
sub
inc
mov
outsl
xor
imulb
xor
ljmp
cmpsb
jns
dec
jnp
or
aam
lea
or
jp
sbb
xor
dec
adc
into
add
add
in
iret
sbb
inc
mov
lds
aaa
fcmove
out
rolb
mov
and
xchg
push
mov
andb
stc
mov
dec
leave
add
test
data16
dec
mov
push
push
movsb
call
arpl
jbe
pop
into
and
sub
popa
loopne
inc
cmp
cmp
or
dec
and
mov
mov
pop
sub
int3
cmp
fists
jp
cld
lahf
sbb
mov
in
jecxz
push
or
std
pop
xchg
xor
push
cs
push
insl
ja
cld
mov
test
mov
and
cmp
jge
data16
js
mov
sub
fisttpl
add
jle
popa
sbb
lret
clc
scas
mov
in
dec
aad
int
add
out
jbe
xor
cmp
xchg
xchg
inc
shr
cmp
push
dec
sahf
add
imul
out
cmp
les
fistps
xor
fisubs
shrl
xchg
jle
dec
loop
mov
repnz
test
xchg
rorl
leave
jnp
mov
ret
ret
push
ljmp
mov
push
adc
in
pop
lea
cmpl
in
pop
pop
inc
xchg
loope
push
or
cs
psubsw
shrb
dec
fimuls
adc
pop
bound
repnz
fdivrl
pusha
mov
xchg
cmpsb
pop
mov
cmp
cli
or
sub
clc
into
imul
add
fnsave
add
jl
jge
sbb
jb
lahf
mov
lahf
lret
insb
or
stos
or
dec
dec
jns
xchg
and
push
imul
int
imul
push
test
insb
jge
cmc
ljmp
inc
and
cmp
jb
cmp
xchg
lahf
int
nop
cmp
cmp
loop
in
pusha
das
add
pushf
test
in
outsb
outsb
loopne
call
cmp
mov
test
fists
ret
imul
into
rcrl
push
xchg
xor
pushf
cmp
pop
inc
xlat
adc
push
repnz
xchg
subl
clc
jmp
bound
ljmp
int3
ret
push
inc
imul
pop
xor
ss
sti
aad
iret
roll
jge
inc
loope
xor
mov
pop
lret
xchg
pop
mov
and
popfw
push
lea
xor
mov
mov
xchg
mov
add
mov
xor
mov
and
call
mov
push
lods
sbb
mov
sbb
insb
movsl
cmovbe
add
vpunpcklqdq
xchg
inc
sbb
and
mov
or
sub
jle
ja
mov
in
loope
lea
std
mov
leave
stos
mov
popa
stos
stos
mov
jmp
and
jae
filds
sar
bound
clc
jns
dec
test
mov
mov
addr16
pushf
pop
stc
mov
loop
mov
add
pop
and
add
sbb
loope
cld
mov
je
dec
fsubr
out
enter
shlb
ds
adc
stos
and
push
inc
imul
jmp
pushl
jle
cmp
lahf
in
jns
fst
dec
jmp
xor
jecxz
cmp
jmp
jae
mov
cmovbe
lock
pop
push
add
pop
loope
pusha
mov
js
xor
xor
push
pop
in
jno
int3
int3
jmp
rcr
or
mov
xchg
ret
test
jns
cmp
ss
popf
inc
xlat
xor
loope
lahf
iret
inc
aas
leave
repnz
lahf
mov
xor
stc
imulb
icebp
add
dec
inc
div
pop
icebp
rorl
popa
je
adc
sbb
push
ss
mov
gs
out
imul
movsl
stc
ret
xchg
ljmp
sbb
data16
push
jne
push
cs
mov
leave
ljmp
lds
cld
fnstcw
mov
mov
adc
mov
mov
jno
into
clc
mov
xor
inc
mov
test
in
pop
sub
inc
cs
stos
es
fidivrl
mov
adc
test
add
pop
cld
mov
xlat
lret
sub
notl
arpl
sub
pop
adc
inc
mov
cmc
scas
fcompl
mov
idivb
aad
mov
iret
sub
idiv
std
mov
jmp
fwait
ds
cld
addr16
mov
loop
jno
mov
les
rcll
xchg
and
and
movsb
lahf
ljmp
mov
ja
push
stos
add
push
push
jns
push
or
sbb
push
loope
dec
gs
sbb
mov
or
cmp
cmp
mov
inc
and
jae
mov
adc
inc
jmp
xchg
adc
mov
mov
mov
scas
pusha
pop
pushf
push
mov
sub
jecxz
mov
aad
fisubs
mov
push
jle
ljmp
inc
xchg
mov
scas
call
daa
mov
mov
jge
inc
clc
adc
jmp
cmp
ret
push
xor
subl
je
xlat
push
mov
cmp
shll
std
push
stos
cwtl
in
mov
test
outsl
and
repnz
fisubs
mov
xchg
fldcw
sti
lret
sub
and
add
pop
data16
xor
ret
sbb
jle
jecxz
or
jmp
xor
cmc
cmc
cmp
pop
shll
out
imul
cmp
cmp
int3
adc
xchg
sub
scas
cmp
mov
push
jge
lcall
and
loopne
sbb
add
cli
aad
lds
adc
sbb
cmpsb
shlb
pop
pop
out
js
shll
mov
call
call
xor
sub
add
mov
js
imul
movsl
bound
add
mov
xor
xlat
pop
mov
jp
and
adc
xor
es
lds
stos
xchg
xchg
or
add
xchg
test
and
and
call
cmp
or
xor
adc
fists
loop
or
mov
es
add
cwtl
lds
sbb
cs
and
jl
add
xor
mov
xorb
stos
dec
in
pop
inc
fwait
adc
lods
pop
sbb
lcall
xor
test
fcom
mov
sahf
add
mov
dec
ljmp
push
fadds
movsl
xor
sub
scas
inc
fnsave
add
mov
pop
push
push
mov
jb
pop
stos
or
add
and
arpl
mov
push
ja
mov
out
mov
pop
out
negb
stc
sahf
mov
jns
push
mov
rclb
push
sbb
push
jg
pop
ficoml
jns
jle
cmp
cmpsb
inc
cmpsb
shr
and
mov
and
pcmpeqd
pop
jle
ret
loopne
ja
push
mov
fbld
js
hlt
jg
cmp
jg
or
lcall
push
inc
add
std
jg
out
or
or
addr16
fisttpll
popf
mov
mov
icebp
insl
ret
out
jle
dec
pop
push
add
cmp
aam
movsl
arpl
pushf
dec
jecxz
in
add
xor
push
push
mov
xlat
pop
sbb
inc
dec
in
not
mov
jle
pusha
add
jbe
or
cltd
aad
xor
mov
icebp
xchg
test
pop
repnz
rcrb
rcrb
mov
mov
sti
shll
mov
mov
push
jp
add
shl
jo
inc
cmp
mov
cmp
xlat
dec
xchg
lret
lods
mov
les
or
xor
sbb
xchg
lahf
aam
loopne
leave
and
imul
mov
cs
mov
add
andb
mov
cld
fists
adc
and
jo
xchg
and
les
insb
mov
cltd
xor
shrb
nop
push
push
adc
imul
aam
mov
sbb
pop
push
dec
lahf
jl
aad
pop
add
scas
add
inc
sub
mov
lods
stc
insb
insb
xor
mov
add
cmpsb
sarb
stc
or
mov
cs
sahf
mov
das
inc
cmp
adc
or
hlt
lahf
ret
sub
adc
add
xor
movsl
or
add
mov
out
jnp
pop
inc
jle
arpl
repnz
cmp
mov
push
loope
mov
loop
jmp
dec
cltd
mov
dec
addr16
add
mov
lcall
hlt
jmp
int3
push
dec
ds
pop
pusha
mov
push
and
xor
stos
xorl
into
adc
movsb
mov
cmpsl
loope
add
jns
cmpsb
mov
dec
push
push
pop
aad
das
lds
inc
fcoml
mov
push
mov
loopne
sub
hlt
sahf
xchg
lcall
bound
sahf
push
in
lock
mov
es
ret
pushw
loope
fs
adc
les
mov
outsl
xchg
mov
iret
cmp
and
sub
mov
dec
add
xor
lock
rcrb
rcrb
jp
outsl
cwtl
inc
shrl
loopne
sub
dec
add
out
cmp
rcll
jbe
inc
aaa
dec
xor
pop
jp
push
hlt
xor
jmp
shlb
insb
je
push
or
jne
mov
and
xor
mov
and
sub
mov
stos
out
repz
dec
add
jg
stos
ret
push
clc
outsl
pop
jmp
scas
fwait
xchg
pop
lahf
cltd
scas
mov
lcall
cltd
adc
mov
add
nop
xchg
push
sti
loopne
push
push
call
cmp
jne
scas
bound
outsb
cmpl
int
int
fdivs
jg
pop
mov
add
add
ret
hlt
lret
stos
mov
push
jg
aam
mov
ss
ja
or
pop
ficoms
data16
cmp
jp
cmp
cld
mov
fisubrs
sub
sub
outsl
or
mov
add
negl
std
push
data16
mov
cmpb
ds
test
in
mov
xchg
fucomi
adc
mov
push
inc
xor
rclb
gs
dec
push
hlt
add
aad
scas
xor
pop
dec
mov
sahf
cwtl
mov
push
xchg
into
addr16
scas
data16
daa
add
or
test
push
and
pop
push
enter
andb
and
out
sbb
es
in
sbb
aas
inc
adc
xlat
mov
mov
dec
aam
cmpsl
jecxz
add
or
mov
psadbw
loope
fstps
cltd
loop
rcrb
aaa
inc
pop
mov
mov
and
lret
nop
add
jns
jmp
test
mov
js
outsl
mov
mov
add
les
cmp
popa
lock
jp
and
sahf
call
not
repnz
shl
imull
or
fcoms
pop
add
adc
xor
or
ret
lods
outsl
xchg
push
inc
or
sub
dec
lds
loop
jbe
stos
inc
sub
rcrl
push
sahf
xchg
cmp
xor
add
mov
sbb
and
pop
jle
test
dec
ja
pop
out
mov
dec
sti
fimull
lods
lret
loope
cmp
pop
mov
lods
pop
mov
loop
clc
or
jmp
repnz
lcall
sahf
push
hlt
cmpsl
in
mov
mov
popa
inc
dec
test
in
jmp
add
jecxz
cmovl
xchg
test
and
in
ja
inc
jp
add
cmp
cmpl
out
xchg
sub
fisubrs
fstps
jns
pop
or
movsb
cld
nop
aaa
aaa
xor
aas
jno
fs
sbbl
jg
jmp
lcall
pop
fpatan
and
fnsave
jnp
loopne
xor
dec
lea
mov
jno
xchg
outsb
push
cmpsl
insb
mov
int
xchg
inc
pop
sbb
loope
push
and
rorl
push
xor
pop
dec
sbb
in
mov
sti
fwait
insl
int3
popa
sub
and
dec
lret
bound
stos
fimuls
cli
jmp
scas
jg
cmp
push
popa
stos
pop
xor
insl
jp
stos
pop
out
into
lret
mov
into
movsb
clc
pop
sbb
std
stos
mov
outsb
mov
pop
ja
enter
sub
cmp
xor
iret
lea
jmp
scas
lods
int
push
stos
cmp
or
sub
add
lds
xlat
cmp
cltd
or
dec
rcl
xchg
cld
movsl
inc
ficoms
or
outsl
or
pop
mov
pop
and
loop
loope
imul
add
xchg
aam
fistpl
sbb
and
sbb
mov
call
ja
or
mov
imul
jns
pop
inc
jmp
inc
imul
lods
push
sub
decb
dec
mov
push
int
dec
sub
stos
or
stc
xchg
sbb
dec
jmp
fmull
and
iret
std
add
mov
repnz
sub
nop
xchg
sub
inc
push
jl
push
addr16
pop
mov
lods
dec
shlb
aaa
cli
sbb
popa
cmp
mov
inc
pop
test
mov
pop
pop
push
push
scas
lods
out
in
inc
or
mov
aad
push
adc
out
pop
xchg
ret
inc
sub
push
add
or
cmp
pop
or
xchg
test
fistpll
test
push
sbb
fsubrs
pop
fildll
push
fiadds
push
jmp
jecxz
or
mov
push
sbb
js
shrb
mov
dec
lock
pushf
dec
xlat
stc
xlat
mov
and
jnp
pop
test
jecxz
cmp
cmp
fstpt
cmp
mov
push
mov
cmp
xchg
sbb
dec
xchg
and
aaa
jns
dec
mov
rcr
pop
ficomps
pop
inc
scas
fwait
and
negb
sahf
cli
mov
jae
in
pop
adc
cld
arpl
lods
push
sti
push
mov
sbb
in
push
and
std
pop
cs
mov
mov
xchg
or
iret
cmc
push
mov
jns
imulb
sbb
cmp
shl
test
out
xchg
out
pop
rcrl
cmp
test
fs
mov
shl
push
push
mov
jo
inc
icebp
or
lcall
push
pop
popa
loop
cwtl
jo
fsubrs
adc
adc
jp
dec
add
imul
stos
jmp
pop
movsb
or
popa
mov
push
adc
test
mov
pop
mov
or
jne
retw
jg
aad
lcall
test
sahf
fsubs
scas
stos
loope
outsl
pop
jo
out
jo
pop
fildl
out
sbb
xor
mov
pop
push
mov
push
leave
test
in
jg
xchg
sbb
cmp
cmc
cmpsb
lcall
jne
shl
pusha
in
cmp
sahf
iret
outsb
aad
inc
in
out
ljmp
cmc
adc
jnp
inc
adc
idivl
pop
mov
in
fldl
outsb
mov
cmpsl
rcr
inc
mov
dec
int3
in
dec
out
jle
cmp
jge
repnz
into
fcomp
rorb
lcall
gs
not
push
add
pop
xchg
cli
mov
test
shlb
insl
mov
inc
mov
fwait
in
filds
lds
lcall
fnstsw
scas
adc
cmp
mov
insl
add
fcoms
push
mov
mov
mov
mov
rolb
dec
adc
jle
dec
je
cld
sahf
fwait
daa
mov
test
daa
in
cmp
mov
dec
jae
int3
cmp
pop
or
xor
jo
sti
push
xor
jbe
aam
cs
lea
or
pushf
xchg
jg
enter
mov
dec
aam
jno
pop
popa
xchg
pop
push
outsb
adc
je
rcrb
leave
pop
cmp
loopne
mov
adc
mov
daa
cltd
pop
fwait
mov
ret
cmp
sbb
hlt
jmp
cli
lods
xor
push
lock
lock
sarl
test
sub
popa
dec
push
fbstp
addr16
les
ret
js
outsl
repz
movsb
test
out
jle
and
fwait
mov
xor
lret
lcall
int
mov
mov
popa
xor
xchg
test
scas
mov
repnz
and
test
inc
cmc
xchg
out
je
out
mov
or
adc
bound
gs
push
push
test
dec
and
pusha
inc
sub
repnz
mov
inc
jecxz
and
int
or
incl
sub
push
test
jne
dec
push
mov
negl
push
xor
sbb
push
lret
out
cs
sbb
push
subb
insb
test
ds
aaa
ret
in
xchg
arpl
and
imul
fcomps
inc
jb
stos
aam
or
fdivrs
jmp
jne
js
push
cli
cmp
xor
or
cltd
fadd
mov
dec
mov
mov
sti
test
push
loope
lods
adc
or
push
mov
hlt
push
sub
lods
das
cmp
cs
jo
mov
outsl
push
mov
mov
lds
add
pop
and
mov
outsl
or
add
mov
stos
inc
dec
loopne
xchg
jge
and
in
sahf
popa
shl
cmp
in
icebp
mov
and
cs
mov
sbb
add
test
pop
mov
fcmovb
or
sahf
jns
lds
dec
lods
and
add
mov
imul
pop
or
mov
das
or
and
test
in
inc
imul
mov
mov
xor
adc
push
rcrb
lret
in
add
add
data16
jle
xor
cmp
xchg
aam
dec
stc
es
jmp
add
cli
push
xchg
jle
sahf
add
orl
jl
pop
lahf
cmp
pop
cmp
iret
pushf
push
push
stos
imul
sbb
jle
iret
push
fildl
dec
cmp
mov
add
pop
std
sbb
ds
imul
pusha
outsb
hlt
rcrl
mov
lret
jno
jbe
sbb
dec
mov
sbb
dec
cmp
xlat
jne
inc
aaa
xchg
test
mov
call
aam
inc
daa
mov
or
dec
popf
xchg
mov
stos
pop
pop
fistpl
xor
sub
mov
xor
mov
push
mov
sarl
jle
push
dec
shl
adc
dec
sub
cmpsl
cmp
test
das
cmp
cmpsl
pop
xor
mov
ja
les
fucom
lret
jge
mov
lret
ja
push
add
in
pop
sbb
or
jnp
push
xchg
jecxz
dec
mov
fistpll
pop
or
cmpb
xchg
loopne
bound
cmp
mov
mov
xchg
or
mov
ret
adc
push
dec
aam
push
push
lret
push
mov
sbb
jecxz
cmp
cmp
mov
adcl
and
mov
pop
mov
in
das
mov
repz
insb
push
aas
jnp
mov
out
nop
sarl
adc
jl
xlat
fsubrs
mov
jbe
cmp
enter
sub
sarl
mov
mov
popf
sub
rolb
dec
test
push
fwait
lock
imul
jb
sbb
cmpl
add
popf
jg
popf
or
jno
imul
xchg
and
sbb
ja
ljmp
xchg
sbb
lcall
pop
les
xor
in
sub
cmp
cmp
jb
outsl
sbbb
push
repz
add
lret
inc
add
and
das
inc
rcll
dec
out
nop
cmp
xor
jp
mov
inc
fcoml
loopne
loope
pop
mov
rcl
insb
mov
mov
enter
lret
xchg
sbbl
rolb
scas
inc
or
add
sbb
aad
jmp
clc
xor
in
pop
iret
hlt
and
cli
inc
xlat
mov
insl
js
sub
stos
in
inc
setnp
jno
jne
mov
movsl
rcrb
or
pop
inc
lret
movsb
push
pushf
dec
inc
dec
jns
add
cltd
lea
push
pop
pop
mov
std
push
pusha
dec
mov
sub
inc
mov
jno
pop
jecxz
repz
int3
xor
lahf
mov
shll
or
loop
cmp
mov
pop
inc
mov
inc
push
add
outsl
jge
jmp
rclb
ljmp
push
adc
ror
iret
idivl
sbb
adc
outsb
cmpsl
xchg
push
xchg
sahf
out
shll
mov
pusha
fisttps
scas
pop
sbb
cmp
jge
cltd
lods
icebp
and
sbb
adc
rcll
jno
in
aam
stc
sbb
mov
jnp
jnp
push
cs
out
pusha
ret
je
jo
out
aaa
push
aas
hlt
sbb
dec
jp
xor
retw
in
aaa
movsb
dec
rcll
sub
xchg
pusha
jo
js
xchg
shll
in
shrl
lods
mov
daa
mov
jo
lret
pop
loop
adc
jmp
mov
sub
sub
jae
jae
movsl
popl
repz
push
push
sbb
push
lds
cmpsl
in
sub
sub
xchg
into
out
fwait
jg
mov
ret
imul
shl
lea
inc
aas
sahf
into
ret
and
jo
outsb
jns
dec
adc
stos
js
mov
inc
imull
xor
imull
push
mov
pushf
mov
push
push
ficoml
jge
cld
cmp
xor
push
xor
loop
jo
push
xor
xorl
push
xchg
stos
dec
frstor
or
push
sub
aad
add
nop
negl
cmpb
jo
or
add
dec
loopne
sbb
sub
in
roll
imul
sbb
push
xor
outsl
inc
imul
shll
mov
std
filds
add
ds
mov
sbb
add
std
lahf
sub
movsb
stos
sbb
notl
xor
repz
sbb
aam
adcb
and
mov
in
sub
and
add
mov
push
mov
push
cmp
fists
clc
in
mov
mov
les
xchg
jmp
xchg
pop
jb
xor
xor
call
mov
outsl
dec
mov
add
push
ljmp
mov
popa
jg
pop
or
dec
jge
mov
shll
sub
pop
xchg
xchg
push
loop
mov
scas
pop
mov
stc
rcr
into
jge
outsb
sbbl
push
insb
sbb
pop
mov
fisubrs
clc
mov
jge
ucomiss
or
xor
int
pop
pop
push
fsubs
add
sbb
jecxz
pop
popa
cs
fdivrl
movsb
adcl
add
and
xchg
out
rcrb
push
cmp
mov
jnp
push
ja
mulb
mov
sub
ret
mov
inc
stos
jle
xchg
push
xor
iret
aas
push
into
push
lahf
sub
shlb
xor
rcll
xchg
pop
mov
push
lahf
add
lahf
ja
jg
dec
pop
cltd
add
pop
imul
adc
xchg
es
adc
shlb
popa
adc
and
fistps
sub
sbb
out
cs
inc
sahf
ret
push
inc
and
adc
dec
xchg
in
jne
jno
stc
lahf
push
cltd
mov
cmp
rolb
rcrb
fs
mov
mov
mov
popa
or
push
mov
in
scas
stos
call
test
mov
mov
outsb
fiadds
inc
cwtl
lret
addb
mov
jmp
mov
pop
xchg
call
clc
dec
enter
jae
cmpl
lock
adc
pop
sub
in
mov
or
out
mov
mov
add
mov
push
lret
inc
out
mov
pop
loope
movsl
mov
lods
js
xchg
xchg
inc
or
inc
xlat
push
sbb
inc
shll
sbb
and
mov
mov
scas
push
push
aad
lods
dec
add
sub
cs
xlat
add
mov
stc
xchg
xlat
cli
ja
lods
loop
int3
addl
lods
xor
xchg
push
arpl
mov
cltd
lret
pop
jp
fadds
mov
insl
aas
xchg
sti
data16
xchg
repz
das
mov
lret
sbb
jecxz
test
lret
addr16
push
push
jp
adc
shrl
sbb
push
pop
fwait
xor
cmp
add
hlt
xchg
cltd
fxtract
pusha
dec
mov
imul
mov
aaa
dec
push
stos
inc
aas
mov
add
mov
mov
sti
jle
cmp
cli
jmp
sbb
imul
dec
int
popa
fbstp
inc
icebp
sub
or
fwait
push
mov
and
pop
sbbl
lcall
outsb
jns
jb
sbb
dec
fucomp
mov
or
or
stc
xor
jge
mov
ss
js
cmpsl
lock
xchg
sbb
out
movsl
or
movsl
inc
pop
ss
jae
adc
mov
xlat
pop
leave
popf
push
add
cli
popf
mov
jle
mov
call
xor
mov
push
and
into
push
cmc
inc
bound
stos
add
or
push
inc
hlt
xchg
dec
add
iret
mov
mov
sbb
push
movsb
sbb
ret
pop
push
sub
insl
cmpsb
inc
jbe
subl
or
mov
cwtl
xchg
cltd
cmp
orl
popl
and
xor
push
cmp
dec
in
add
stc
sub
push
js
pop
pop
test
fs
adc
adc
out
cmp
push
je
fldcw
mov
ja
shrl
les
mov
push
jp
inc
jb
inc
lcall
xor
jmp
repz
pop
bound
jbe
mov
mov
ja
sub
into
jbe
jno
shl
cmp
and
das
mov
dec
mov
ret
aaa
mull
mov
mov
aaa
mov
das
xchg
cmpsb
and
mov
jns
jle
jecxz
adc
mov
mov
mov
movsb
divb
not
or
int
shrl
push
adc
and
add
push
pop
outsl
gs
rorb
cmp
jmp
or
push
insl
jmp
movsb
adc
bound
mov
movsl
cmp
out
pop
jo
arpl
insb
or
inc
fidivl
lock
imull
lret
insl
arpl
cmpsb
xor
pusha
out
push
stos
lock
fdivs
xchg
daa
pop
mov
or
dec
xchg
dec
add
out
aaa
ljmp
or
arpl
mov
mov
sbb
mov
enter
jl
or
repz
adc
mov
test
cld
xchg
rclb
movsb
sub
inc
mov
pop
shlb
xchg
fstpt
loopne
sub
or
mov
das
pop
movsb
jl
add
test
out
roll
insl
and
cli
data16
inc
add
sub
xor
cmp
inc
pop
cmpsl
jae
scas
divb
pusha
stc
pop
adc
pusha
cmpb
loope
stos
test
sub
dec
stos
cmc
and
out
jns
cmp
xchg
push
jg
mov
and
xor
push
shlb
sbb
fmuls
cmp
sahf
fsubrl
cmp
push
lcall
fadds
jmp
xor
push
ja
out
mov
add
test
mov
push
or
pushf
inc
movsb
sahf
test
cmp
lret
or
aaa
movb
add
ret
clc
fcoms
mov
xchg
jmp
inc
fimull
inc
lcall
mov
movsb
out
movsb
cmpsl
jle
insb
jnp,pt
sub
mov
mov
mov
loopne
nop
xor
js
mov
int3
movsl
scas
insb
loop
int3
cmpsb
fisubrs
repnz
cmc
push
sbb
add
mov
jbe
sub
inc
cmc
hlt
inc
jg
dec
insl
jae
andl
lcall
jo
xchg
ljmp
mov
into
rcl
into
fisubs
jne
cli
cmpsl
enter
push
lret
sbb
insb
cmpsb
or
jb
pop
mov
aam
sbb
lds
mov
jbe
stos
loopne
aad
ss
mov
cmpsb
xchg
sub
mov
adc
imul
ljmp
incw
dec
adc
cmc
dec
call
shlb
jno
ss
ljmp
jg
icebp
adc
or
inc
fsubs
push
and
pop
push
es
imul
xchg
clc
push
mov
popf
mov
push
rcl
test
rcr
cld
outsb
adc
scas
incl
movsl
ljmp
cltd
testl
stos
mov
xor
movsl
jnp
stc
xorb
icebp
or
jg
mov
and
pop
icebp
sbb
notb
dec
aam
push
push
mov
int
in
inc
mov
ss
xor
outsb
stc
aam
cwtl
adc
arpl
dec
lret
dec
mov
dec
loopne
lahf
leave
scas
loop
int
cmpsb
add
xchg
cmp
fsubrp
loopne
mov
call
or
enter
ja
out
ds
push
mov
push
cmp
lds
mov
jnp
mov
lret
mov
adc
fmull
jae
sub
push
aaa
sti
push
inc
mov
add
in
inc
pop
out
dec
pop
add
sar
inc
xchg
pop
xor
fdivs
fucomp
adc
dec
mov
ds
divb
cld
push
xchg
fcmovu
push
sub
out
sbb
cwtl
test
out
ficomps
sahf
inc
loope
sub
mov
pop
cmpsl
xchg
lahf
cmp
dec
gs
aad
adc
ljmp
push
jno
lcall
cmpsl
movsl
leave
xor
sbb
gs
add
outsl
adc
pop
aam
jo
dec
jmp
fs
jnp
test
cli
cli
je
mov
cmp
jp
or
xchg
push
mov
pusha
add
or
icebp
mov
add
or
inc
add
jbe
fs
ret
dec
and
jmp
cmc
adc
xchg
push
mov
adc
jno
gs
sub
inc
lret
hlt
add
dec
fidivs
mov
loope
test
dec
sbb
arpl
xchg
xlat
pushf
push
out
inc
aaa
in
cli
xor
test
imul
daa
scas
and
les
adc
add
xor
push
addb
xor
sub
jl,pt
push
jae
les
cmpsb
cmp
int
xor
inc
and
mov
arpl
add
adc
inc
or
cld
add
sbb
pop
or
outsl
adc
sbb
or
test
mov
push
scas
pop
outsl
pop
cld
jecxz
xlat
daa
enter
sbb
pop
dec
push
dec
add
adc
pusha
call
xchg
fwait
jnp
imul
stc
sub
sub
cmp
adc
xchg
or
lods
jae
iret
mov
sub
jbe
dec
mov
in
xor
data16
bound
stc
mov
insl
orl
movb
imul
xor
divb
pushf
addr16
aad
out
jl
adc
dec
mov
arpl
cmp
adc
loopne
or
in
mov
mov
ret
add
bound
aad
pop
and
idivl
aam
dec
and
repz
pop
xchg
fucomi
cmp
in
push
jns
push
mov
je
xchg
mov
popf
jle,pt
add
insb
mov
push
inc
push
adc
movsl
xor
mov
or
lahf
sub
stc
mov
lds
add
nop
add
jl
lock
mov
aaa
enter
mov
adc
add
push
repz
pop
mov
mov
xchg
inc
es
jns
iretw
add
clc
lahf
test
fldt
push
or
mov
in
mov
mov
adc
out
stc
xor
cmp
mov
leave
pop
fdivl
adc
shl
mov
xchg
lcall
loopne
ud0
shr
add
sahf
lds
sub
in
popf
repnz
nop
aam
pop
jnp
dec
jno
add
mov
xor
scas
xchg
xchg
mov
lea
ret
sub
fdivrs
out
and
lds
outsb
lea
xchg
inc
xchg
adc
repz
mov
filds
inc
sahf
add
jo
int
out
push
add
dec
and
xor
inc
jo
fistpll
aaa
jl
sbb
mov
xchg
imul
jnp
jg
enter
or
loopne
jo
mov
and
sub
fsubr
jns
jne
fwait
test
or
sbb
cmp
adc
mov
dec
jp
imul
sti
cmpl
fs
pop
lds
divb
adc
adc
les
andl
mov
orl
inc
push
sbb
xor
clc
cmp
negl
mov
sahf
sub
xchg
add
bound
std
dec
stos
in
add
outsl
js
sbbb
scas
dec
add
add
cmc
ret
decb
ja
inc
cli
fidivrl
jnp
xchg
sbb
push
ficomps
sbb
icebp
pop
pushf
aad
shlb
stos
aam
insl
mov
lcall
push
mov
mov
xor
rcll
xor
outsb
mov
mov
mov
sub
lods
mov
mov
sub
cmpsl
mov
std
adc
divl
ja
add
lods
pusha
cwtl
jnp
mov
xchg
out
ljmp
aaa
insl
fcmovb
or
or
cltd
sbb
push
dec
std
sbb
mov
jecxz
pop
xchg
or
outsb
sbb
loope
adc
mov
insl
jmp
or
or
mov
inc
xchg
jno
xor
mov
shll
fimuls
mov
sub
sub
jge
fs
and
shl
cld
and
push
fistpll
in
sbb
dec
sbb
in
add
std
vhaddps
addl
mov
and
bound
mov
jge
fistps
call
xor
mov
push
mov
fsubrs
push
aad
xorb
aaa
xor
cld
push
mov
mov
cmp
out
retw
adcb
dec
xchg
shrb
add
jg
stc
push
inc
lret
cltd
cmp
lods
sbb
lret
popf
cmp
xor
xlat
aad
dec
cld
pop
lods
fstps
mov
adc
jns
outsl
jmp
in
inc
sarl
mov
test
adc
mov
jle
leave
or
mov
and
leave
lods
sti
out
xchg
jno
scas
xor
pop
pop
daa
dec
mov
mov
or
iret
in
pop
lods
push
shlb
mov
inc
xchg
icebp
push
mov
je
or
mov
loopne
enter
dec
add
dec
push
mov
js
dec
push
mov
clc
or
jle
fcmovne
in
je
mov
cmp
jae
lcall
push
test
xchg
jge
test
jge
sub
rclb
test
cmp
es
cmc
insb
mov
dec
test
jbe
fnsave
js
push
lock
pop
in
sbb
push
stos
iret
xchg
cs
inc
push
data16
mov
mov
add
outsb
add
xchg
mov
mov
push
andb
nop
xchg
pop
dec
or
aam
and
xor
into
and
test
adc
xchg
je
push
aas
dec
or
jmp
rcr
mull
xor
sarl
mov
xlat
mov
popf
mov
out
dec
dec
cli
cmp
push
add
inc
aaa
inc
jmp
xor
or
in
jecxz
das
mov
bound
pop
jb
xor
dec
test
xchg
aam
fdivrl
enter
adc
sbb
scas
pop
pop
cmp
cmpsb
out
gs
or
pcmpgtd
xchg
stos
lahf
pop
xchg
into
push
mov
repnz
loope
jbe
sbb
and
dec
jns
inc
sbb
in
inc
lret
idiv
mov
ljmp
cwtl
mov
mov
popf
lods
dec
sub
pop
inc
mov
push
inc
repnz
cld
mov
mov
fwait
jne
rdtsc
test
cwtl
adc
mov
adc
add
jb
inc
ret
xor
scas
xor
ljmp
pop
movl
cmpsl
mov
xor
xorb
ds
add
jl
loope
mov
fstpl
ljmp
jmp
push
push
or
imul
adc
loopne
xor
fstpl
call
flds
in
dec
mov
sbb
loope
and
inc
sub
push
xchg
scas
cwtl
adc
data16
xchg
sahf
aad
aas
jge
inc
push
adc
mov
out
mov
inc
je
inc
and
jge
xor
cmp
mov
lcall
pop
jmp
repz
pop
pop
and
or
adc
jp
and
in
fstpt
dec
adc
cmp
loopne
xor
mov
iret
mov
jns
aas
pusha
rcrl
cmpsl
aas
xchg
in
in
mov
mov
in
cs
lcall
shll
fsubs
xchg
in
mov
push
jbe
std
leave
inc
sbb
aas
fstpl
rcll
or
jle
push
cmc
mov
push
fmuls
outsl
scas
aas
xlat
lods
imul
int3
icebp
and
unpckhps
cs
fs
push
add
mov
cmp
add
xor
call
xchg
xchg
and
push
ficompl
or
movb
xorb
das
pop
mov
ja
bound
mov
call
mov
mov
cmp
push
ret
pop
xor
push
sbb
cmp
cltd
jbe
adc
push
in
ljmp
mulb
push
cmpsb
stos
addl
fstl
lret
shr
jo
jle
xchg
ret
rcrb
scas
andb
xor
repnz
adc
rorl
dec
jne
inc
loop
pop
adc
jge
jae
aaa
jmp
popa
push
sub
jle
sbb
xor
arpl
mov
enter
xor
leave
jge
stos
negb
push
push
loop
sub
inc
xor
dec
and
int
and
add
mov
xchg
je
adc
sub
jnp
fistps
sbb
pop
pop
dec
mov
mov
fdivrp
lret
sub
imul
jmp
rcl
inc
jns
es
lcall
ljmp
hlt
pop
jmp
movq
jo
mov
imull
sbb
iret
inc
lret
js
js
clc
and
fwait
adc
pop
out
jnp
arpl
stos
mov
jnp
popaw
xchg
sbb
xchg
inc
xor
fs
idivb
inc
stos
pusha
das
xor
mov
mov
idiv
ja
fidivrl
add
arpl
xor
shl
cmpsl
clc
sub
into
mov
jecxz
movsb
orl
pusha
pop
push
iret
add
push
cli
shrb
fidivrl
adc
dec
pop
bound
lahf
sub
xchg
jnp
cli
popf
sub
mov
inc
mov
mov
enter
pushf
test
dec
inc
jno
adc
insb
cmp
xchg
jge
xlat
xchg
fildl
sub
mov
test
sub
push
int
push
mov
popa
stos
dec
sbbb
jns
mov
stos
mov
daa
scas
lret
leave
mov
mov
dec
stc
nop
iret
not
inc
test
cmp
push
xchg
or
ja
arpl
cld
pop
xor
mov
mov
pop
imul
xor
test
int
popa
dec
stos
int3
jl
popl
and
scas
dec
out
int
insl
pop
test
ret
addr16
loop
shrl
js
push
in
ret
xchg
out
cmpsl
mov
sub
in
in
jno
inc
orb
leave
adc
mov
cld
push
mov
add
xchg
cmp
mov
outsb
pop
and
mov
in
and
or
and
sub
mov
push
dec
cmp
mov
ds
ret
mov
push
dec
out
jecxz
jecxz
loop
rcrl
ficompl
cs
sub
fwait
movsl
and
dec
xchg
aam
sbb
xchg
xchg
lods
mov
push
adc
bound
pop
inc
push
push
mov
cmp
movsb
clc
popf
sbb
cmc
jne
add
sub
out
xor
stc
rorl
dec
mov
je
or
mov
pop
leave
ds
test
sbb
out
test
fsub
dec
fcomip
fadds
mov
loopne
mov
mov
pop
pop
leave
cld
sarb
cmp
lock
filds
sub
movsl
mov
inc
push
popf
inc
dec
add
xchg
add
sub
cmpsl
jns
sub
add
pop
xchg
cmp
jnp
movsb
push
inc
js
shrb
shr
add
lods
lock
push
add
cs
or
or
xchg
cmpsl
mov
sbb
pop
dec
insb
xor
sbb
hlt
test
enter
cld
pop
cwtl
test
icebp
mov
cmc
sahf
lods
push
and
jo
cmp
inc
mov
push
out
mov
push
xor
mov
je
mov
mov
jle
mov
sub
in
or
iret
dec
loop
test
or
mov
es
aas
rcrb
dec
or
lcall
push
mov
and
call
clc
or
sub
mov
fisubrl
jb
sbb
xor
addl
scas
push
hlt
and
int3
and
andb
cmpsb
call
loopne
xchg
pop
adc
mov
repnz
cmp
jle
add
and
je
cmp
dec
ljmp
inc
adc
xor
pop
fistl
test
jnp
sbb
in
cmp
mov
sbb
sbb
push
popf
data16
sub
pop
sub
aam
mov
sbb
or
insb
inc
cmpsl
shr
cld
sub
dec
sbb
pop
aam
in
mov
js
fmuls
cmpsl
mov
cmpsl
mov
ljmp
cmpsb
push
mov
in
sbbl
xchg
incl
xor
imul
inc
xchg
xlat
push
pusha
mov
fdivrl
in
lods
ret
add
pop
icebp
in
push
leave
popa
imul
push
cld
loope
jge
and
mov
je
pop
add
repz
movsb
mov
cmpsb
pop
xor
inc
aaa
jne
jbe
mov
ds
inc
mov
stos
xor
pop
jmp
aas
lock
adc
in
xor
cmc
mov
sbb
cmp
test
test
adc
jmp
mov
xchg
shll
adc
mov
movsl
mov
rcll
pop
ljmp
ja
frstor
jp
std
pop
adc
rsm
stc
aas
daa
jle
insl
lret
insb
mov
cmpl
add
jns
xchg
jl
dec
testb
add
scas
shlb
movb
test
sbb
das
dec
cmp
push
fsts
loopne,pt
mov
mov
lret
icebp
out
pop
jmp
inc
sti
inc
pop
in
outsl
mov
add
mov
push
xchg
jns
nop
add
dec
in
ret
adc
sti
or
push
out
lods
sahf
rcr
mov
das
gs
add
imul
dec
push
mov
out
fisubl
mov
movsl
loopne
cmp
cmpsl
dec
out
in
and
and
inc
adc
push
sub
mov
stc
movsb
xchg
popf
andl
jns
mov
les
sub
lds
in
rcll
test
pop
repz
inc
mov
mov
cmp
gs
out
mov
jl
mov
ljmp
pusha
dec
push
cmp
dec
sahf
or
mov
test
jl
pop
fwait
push
pop
test
xchg
dec
outsb
les
mov
jle
clc
cld
jbe
inc
mov
ds
or
mov
adc
adc
mov
mull
lea
xchg
inc
test
xchg
outsb
lret
mov
jecxz
movsb
mov
sti
repz
jmp
and
int
sub
dec
in
xor
data16
dec
mov
or
cmp
leave
pop
add
mov
je
or
pop
sub
mov
call
or
inc
in
nop
xchg
icebp
and
fsub
mov
add
mov
jp
popf
inc
fs
sbb
out
into
js
in
mov
jne
test
movsl
js
mov
imul
out
mov
cmc
xchg
adc
jne
cld
mov
bound
mov
scas
dec
sub
filds
adc
in
mov
jp
sbb
xchg
jne
sbb
daa
fistpll
fisttps
fsubs
adc
lock
sub
fcmove
test
cmp
add
dec
push
pop
sub
mov
bound
call
pop
push
sbb
shlb
xchg
add
mov
jb
xor
mov
rorb
test
in
in
sahf
jmp
pop
adc
ret
lock
dec
push
pop
inc
lds
jno
push
mov
adc
aas
fisttpll
mov
hlt
or
and
or
mov
jp
inc
jecxz
push
ds
push
das
push
adc
cmp
mov
ror
jge
xor
pop
enter
inc
jb
xchg
hlt
or
mov
mov
push
or
cmp
inc
or
push
in
jnp
stos
adc
mov
jno
push
inc
in
adcb
jae
inc
mov
jbe
mov
iret
mov
dec
xchg
aam
pop
dec
push
xchg
fstps
ret
subb
dec
sbb
push
push
mov
leave
stos
xor
inc
ss
clc
xchg
jb
insb
aam
mov
rcrl
in
fs
mov
fldenv
pop
mov
mov
fwait
or
orl
push
in
jp
mov
xchg
sub
into
popf
dec
xchg
cmc
arpl
pop
and
sub
mov
lods
lods
leave
xlat
jl
pop
or
or
test
sub
add
fstpt
ja
or
lods
scas
push
leave
mov
lret
mov
repnz
lret
jne
cmp
addb
cmp
cmpl
leave
int3
mov
inc
data16
cltd
adcb
cli
add
loope
rcl
and
push
xlat
adc
adc
enter
sub
imul
out
les
fwait
or
or
and
pop
push
mov
adc
mov
push
mov
test
inc
push
jo
movsl
dec
or
sub
adc
push
xchg
fs
icebp
push
and
rcrb
shrl
mov
pusha
xchg
test
or
popf
jg
mov
jg
mov
in
mov
gs
cwtl
inc
lea
fwait
pop
int3
popf
in
je
lods
add
notb
mov
mov
xor
push
and
mov
add
stc
aaa
jecxz
xchg
rorl
aas
dec
fcoml
rclb
pop
cmp
mov
test
add
enter
mov
icebp
sti
jns
mov
leave
inc
push
jl
sub
inc
out
push
xor
sub
add
mov
cmp
pop
jmp
push
lret
mov
dec
repnz
mov
fmull
shl
aam
dec
cmp
fwait
jae
testl
add
and
dec
push
xor
and
scas
scas
push
xchg
or
insb
xchg
imul
pop
sbbb
fsubs
inc
lea
push
xchg
xor
add
aam
mov
insl
test
inc
inc
xchg
mov
push
insl
push
xchg
lods
ljmp
adcl
adc
into
sbb
xor
scas
addl
mov
pop
or
call
jle
sub
push
mov
add
pushf
add
jle
out
cwtl
mov
testl
jno
in
adc
loope
adc
ret
lahf
icebp
inc
jl
rcll
in
xor
test
inc
sbb
adc
mov
adc
mov
fcoms
popa
mov
jo
pop
xlat
sahf
call
cmp
sub
push
icebp
js
js
sahf
ljmp
and
xchg
iret
ret
cmpsl
out
mov
add
stos
idivl
in
cmpl
cmp
dec
cmp
xchg
ss
repz
mov
mov
mov
nop
in
and
faddp
out
or
push
sub
negl
dec
notl
fisubs
movsl
ja
scas
out
adcb
or
xor
pop
xchg
mov
cld
xor
mov
dec
int
dec
add
les
sub
ss
dec
add
daa
mov
xor
scas
popf
jle
pusha
roll
add
in
sub
mov
aas
sti
insl
ffreep
loop
push
pusha
in
fildll
cmp
cmp
push
shlb
jg
sbb
out
push
inc
mov
add
movsl
aad
cmp
out
imul
mov
jnp
mov
mov
add
mov
fcmovbe
ds
mov
xchg
add
or
xor
int
pop
sbb
test
dec
and
mov
outsl
jg,pt
test
push
xchg
xchg
xchg
sub
or
jno
fcomp
movsl
dec
mov
outsl
insl
or
pop
cmp
inc
xchg
pop
dec
ds
repz
stc
cli
outsl
lcall
mov
xchg
or
gs
dec
xchg
or
mov
inc
xor
into
inc
je
inc
lods
cmp
xor
xor
divps
hlt
sub
shrb
out
addr16
test
stos
subl
es
leave
stos
hlt
pushf
dec
data16
push
outsl
outsb
ja
out
in
push
sahf
in
mov
and
adcl
test
cld
pop
fisubs
and
lret
push
aaa
push
lds
enter
xchg
push
mov
and
pop
fs
pop
cmp
xor
cli
push
nop
push
push
sahf
push
mov
pusha
mov
sub
add
jb
jno
in
xchg
lods
inc
stc
jnp
cwtl
pushf
push
not
jp
pop
xchg
outsb
cmpsl
scas
int
cmc
fcomps
clc
push
call
mov
xchg
ja
xchg
sbb
sub
jg
js
pushf
adc
popf
mov
repz
movsb
and
int
xor
add
ds
cmp
add
lahf
cmc
test
cmpsl
cmp
and
lea
cmp
bound
out
cmp
jg
loop
jbe
jmp
adc
mov
xlat
inc
stos
in
xor
lret
dec
xchg
out
rolb
and
stos
mulb
xor
lret
push
into
rolb
fwait
out
cmp
mov
mov
insb
inc
lock
sub
cwtl
stos
or
jae
xor
out
and
or
imul
and
adc
push
or
or
jnp
repnz
clc
jbe
repnz
jbe
loop
cmpsl
mov
push
aam
jno
mov
sti
int
adc
pop
or
mov
pop
mov
repnz
inc
ret
sbb
xchg
stos
icebp
mov
imul
pop
xchg
mov
mov
test
jp
push
mov
jnp
stc
xchg
addr16
testb
jbe
push
imul
xor
gs
adc
sar
sti
scas
je
jb
mov
ljmp
push
inc
rcll
loope
sbb
int
sbb
aaa
mov
imul
and
sub
xchg
xchg
push
ljmp
push
xchg
cmc
gs
or
jle
mov
jle
jae
and
mov
or
inc
inc
cmc
fcoms
inc
aas
cmp
mov
adc
mov
sbb
addb
mov
mov
mov
push
xchg
sbb
pop
es
pop
mov
cmp
ret
popf
push
cmp
cmp
iret
ljmp
xor
xor
sbb
mov
aad
fdiv
sub
xor
mov
dec
lods
cli
sahf
gs
lret
mov
inc
mov
lods
jp
jnp
pop
mov
jecxz
pop
stc
stos
mov
imul
mov
cmp
xchg
inc
mov
pop
xor
pop
jo
fisttpll
stos
inc
insl
adc
les
addr16
mov
push
sbb
push
xchg
xor
imul
repnz
inc
les
add
lock
xchg
jae
or
aas
scas
aas
push
sarb
pop
add
les
lret
je
push
adc
add
lret
push
scas
jle
adc
cld
imul
out
inc
iret
dec
fwait
xor
mov
roll
lret
sahf
imul
aas
push
sbb
push
cwtl
dec
jmp
sub
adc
push
mov
lods
out
jbe
ljmp
rclb
mov
outsb
in
inc
adc
dec
mov
cmp
icebp
outsb
addl
jmp
ds
lcall
mov
jns
ds
add
fcmovnb
fidivrs
cli
dec
and
adc
cmpsl
lods
je
shrb
movsl
jns
iret
push
sti
scas
cltd
dec
in
iret
jmp
out
or
mov
clc
daa
aas
jecxz
pop
ljmp
mov
cmp
insl
lret
stos
push
loope
pusha
and
movl
dec
popf
rorb
or
mov
fwait
sub
push
jg
jne
adc
scas
add
dec
adc
popa
leave
sub
jl
stos
flds
xor
ret
push
sbb
scas
dec
jmp
je
add
in
or
jbe
enter
je
push
insl
adc
ja
imul
roll
iret
push
sti
xchg
mov
scas
mov
ret
or
adcb
pop
out
movsb
das
mov
das
mov
repnz
popa
jbe
cmpsb
rcrl
repz
rcr
add
in
lods
dec
cli
ja
push
pop
sbb
loopne
rorl
adc
jge
sarb
ds
add
pop
dec
leave
adc
cs
loopne
pop
loop,pt
mov
iret
mov
mov
mov
mov
sub
dec
popf
repz
jg
outsl
push
out
pop
std
mov
cmp
push
mov
idiv
test
fildl
js
adc
sub
pop
mov
sbb
movsb
movsl
cs
jmp
xchg
push
dec
xor
push
pop
out
push
xorb
leave
shll
ljmp
or
sti
cmpsl
mov
push
push
sbb
push
push
popw
mov
xchg
fnstcw
pop
hlt
in
cmp
pop
popf
fwait
sbb
fwait
int3
add
add
rol
pop
cwtl
mov
iret
or
sbb
add
je
popf
outsb
dec
pop
xor
nop
scas
neg
insl
lea
push
jb
xor
cmp
and
movsb
rorl
js
sbb
cld
andl
std
jp
push
mov
test
loope
lcall
mov
push
jg
jle
mov
lods
stc
ror
lods
add
cld
jmp
fnsave
rcrl
repz
mov
into
fdivrl
jp
mov
push
lahf
sub
fstps
aam
add
mov
sbb
sti
in
iret
xchg
push
mov
dec
sub
adc
dec
pop
test
leave
dec
inc
nop
addr16
aam
daa
sbb
jb
xor
hlt
xchg
dec
mov
dec
cmc
cmc
les
lds
jne
dec
pushf
aam
call
pop
xlat
subb
in
dec
ret
fstpl
xor
test
push
ljmp
leave
push
mov
cmp
leave
repz
and
adc
pop
mov
mov
sbb
add
popa
sbb
pop
scas
xor
stc
add
and
clc
pusha
adc
out
outsb
jecxz
addb
lret
lea
movsb
push
mov
sub
mov
rclb
jge
push
add
mov
mov
sbb
inc
jmp
inc
mov
push
lret
push
imul
cmp
in
mov
std
aas
roll
aam
repnz
pop
jno
out
fdivrl
loope
push
cmp
pop
fcomps
ds
pushf
or
xor
push
inc
aas
xchg
icebp
test
sbb
mov
xchg
rcrb
out
sbb
shl
pop
adcb
sbb
imul
cmpsb
sti
pop
fiaddl
and
pop
daa
adc
pop
pop
cmc
fcmovne
aaa
dec
mov
shlb
push
pushfw
sub
icebp
jns
insl
mov
arpl
mov
cmp
cmpsb
lret
idiv
aas
pop
std
stc
and
fwait
lods
lcall
icebp
jmp
jecxz
cwtl
in
stc
sbb
xchg
movsl
push
pop
scas
push
call
les
lcall
fldl
inc
or
xchg
addr16
fs
xchg
push
clc
jns
mov
jo
mov
jecxz
hlt
dec
dec
leave
mov
fldenv
mov
xor
push
pusha
mov
int3
dec
mov
sbb
mov
sbb
inc
mov
out
rcrl
jle
jnp
loop
cmpsl
pop
jnp
mov
sub
mov
cwtl
pop
and
icebp
nop
pushf
jp
push
sti
mov
insb
inc
jmp
push
movsb
insl
mov
mov
in
in
loop
mov
pop
add
jb
cltd
add
xchg
sub
stos
repnz
xor
cmc
pop
int
mov
into
cmp
jnp
or
mov
mov
enter
mov
icebp
lret
mov
mov
pop
adc
bound
dec
sahf
inc
clc
sub
lea
das
mov
sub
loopne
loop
aas
pusha
lods
aaa
sub
inc
and
mov
loop
addl
and
mov
bound
sub
push
xchg
ljmp
fsts
mov
and
jp
mov
inc
lea
xor
popa
sub
or
fsubrl
mov
xchg
mov
pop
pop
fwait
jo
pop
adc
xchg
sub
lods
and
and
sub
inc
stos
fsub
shrb
nop
jno
out
cld
sti
ret
inc
jg
popa
les
popa
cmc
sbb
int
push
filds
sub
pop
jns
test
subb
mov
stos
out
jp
popa
and
test
xadd
dec
sub
adc
mov
out
je
add
add
dec
es
movsl
lea
and
in
jecxz
psubusb
sub
cs
lcall
daa
cmp
fxch
lret
gs
adc
out
lock
xor
rorb
xor
cmpb
jecxz
inc
fldcw
pop
or
and
aaa
dec
pop
sbb
cmp
imul
mov
xchg
or
lcall
xor
sub
cmp
movsb
mov
dec
adc
push
xchg
ja
cmp
xor
das
pushf
mov
pop
sub
imul
mov
sbb
push
imul
sbb
pop
sbb
test
or
lret
aas
mov
sbb
cmp
rcll
push
mov
sbb
pop
scas
outsb
lret
popa
mov
mov
hlt
scas
std
or
or
stos
lret
mov
cld
out
cltd
jnp
pop
xchg
lods
scas
push
fs
frstor
push
sbb
adc
inc
pop
mov
push
mov
jnp
push
out
addr16
testb
pusha
loopne
inc
js
icebp
sahf
cwtl
int3
outsl
pop
pushf
cli
dec
jg
pop
add
cmp
pop
sahf
xor
rolb
shll
mov
push
movsb
pop
setl
cmpsl
fcompl
pop
pushf
test
rclb
lahf
mov
mov
imul
aas
inc
push
sbb
into
je
fistpl
xchg
mov
call
cmp
inc
xor
call
repnz
and
mov
mov
daa
leave
cmpsb
rcrl
push
repnz
pop
inc
xor
push
cmp
test
cs
in
or
jg
xchg
loop
fnsave
pop
xlat
mov
dec
shl
jmp
jle
stc
call
mov
imulb
int
mov
mov
and
pop
add
mov
sub
test
or
loope
daa
lock
cmp
push
cld
gs
mov
aad
fldcw
mov
jno
cmp
call
xor
outsl
enter
fwait
cli
mov
adc
mov
mov
jae
jne
sub
or
mov
rcll
xor
rolb
inc
inc
xchg
mov
mov
xor
fs
mov
enter
in
pop
aas
mov
xlat
inc
ss
rol
mov
push
push
out
int3
test
std
xchg
movsb
lahf
hlt
subb
cmpsb
jno
shl
and
loopne
cld
cmp
add
xor
xchg
xchg
pop
sub
adc
xchg
sbb
mov
and
add
lods
in
add
out
lods
dec
dec
or
pop
jo
xor
add
pusha
std
popf
cmp
stos
cltd
fbld
and
push
ja
outsb
scas
xchg
adc
push
aas
imul
dec
mov
rcrb
cmp
pop
adc
out
hlt
mov
lock
clc
xlat
push
fadds
xchg
xchg
lods
andb
push
sbb
test
leave
rorl
mov
outsl
cmc
and
inc
xchg
adc
es
sbb
ds
jnp
mov
jne
cmc
jno
hlt
push
jnp
lock
inc
xchg
push
jb
sbb
and
mov
out
sbb
pop
shrb
daa
sbb
lret
xor
adc
push
aas
ds
jecxz
cli
aad
imul
push
jae
add
stos
mov
mov
add
ret
mov
mov
insl
icebp
and
jmp
cli
aad
movsb
hlt
data16
mov
inc
dec
sbb
jp
or
pop
adc
sahf
push
sbb
push
fsubrp
sbb
jo
int3
repnz
out
adc
aam
adc
bound
pop
jp
aam
jo
inc
popa
dec
push
adc
leave
repz
in
mov
jo
test
inc
sbb
jbe
pop
mov
xchg
xchg
das
jns
out
lret
jns
cmpb
mov
inc
mov
hlt
outsb
mov
inc
sub
dec
mull
or
imul
sbb
rcl
mov
js
fstp
inc
rolb
xchg
jge
jge
clc
out
enter
dec
sarl
inc
addb
andl
jp
sbb
insb
push
mov
adc
lods
jmp
push
test
test
dec
subl
dec
inc
decb
cs
mov
mov
in
sbb
pushf
cmpsb
mov
mov
dec
mov
jl
lret
sub
outsl
je
int
mov
movl
in
out
add
test
lock
pusha
repz
sub
hlt
mov
jmp
jbe
iret
add
sub
stos
sbbb
decl
fiaddl
mov
outsl
sahf
sub
dec
gs
cmpsb
lcall
mov
push
cmp
imul
mov
and
ds
mov
pop
fstps
popl
jne
addr16
pop
popl
dec
mov
ficoml
xchg
jnp
adc
mov
shll
inc
xor
and
jecxz
inc
jmp
jmp
mov
jle
lret
and
add
jno
lods
sti
je
xchg
and
xor
push
adcb
ds
dec
out
lods
pop
sub
adc
cmp
call
data16
jb
movsl
test
cmp
and
decl
xor
or
or
mov
fdivs
sbb
popa
lret
fisubrl
rcll
mov
popa
lgs
sbbb
inc
xorl
mov
rep
lds
movsb
mov
mov
cld
insl
cld
or
rclb
fstpt
notl
inc
shr
mov
dec
xor
inc
jg
xchg
pop
sub
push
in
and
cmc
sub
cmp
push
popa
lods
xor
arpl
pop
mov
in
sahf
rcl
push
iretw
sbb
fmull
xchg
test
and
pop
shll
sub
lret
les
cs
cmp
jle
add
test
rcrb
jp
out
mov
sbb
mov
sbb
jmp
mov
out
push
in
add
xchg
outsb
mov
jb
insb
dec
in
push
mov
into
xor
loope
test
rorb
push
add
les
mov
ljmp
popa
push
push
movsl
xor
movsb
adc
dec
push
cmp
outsl
or
popa
lea
fwait
mov
mov
xchg
mov
add
inc
mov
xchg
ret
xchg
hlt
push
push
ss
xor
inc
and
xchg
testb
xor
addl
fcmovb
mov
pop
and
mov
mov
push
std
sbb
inc
incl
jae
push
lret
aaa
pop
mov
ds
mov
stos
aaa
cli
loope
xchg
xchg
xor
xor
negl
inc
fsubrl
dec
add
jb
imul
sub
clc
mov
add
and
push
or
divl
cmc
inc
add
xchg
inc
test
and
sub
jmp
insb
ds
ud0
push
xchg
jg
cltd
adc
addr16
inc
cmp
xor
cmp
imul
mov
loop
fiaddl
mov
push
cmp
rolb
and
addr16
pop
add
out
mov
or
jo
ds
push
and
push
shrl
aaa
out
mov
pop
rorl
jae
xor
mov
jns
dec
int3
dec
sbb
fistps
fcomps
pop
mov
orl
mov
sub
repnz
adc
imul
jo
sub
or
or
and
add
push
push
mov
jae
test
fwait
sar
imul
insb
pop
pop
fisttps
pop
xchg
pop
dec
mov
pop
imul
sub
loope
rclb
mov
pop
dec
rclb
mull
mov
movsb
movsb
bswap
lcall
fmull
js
lea
out
adc
add
out
fs
xchg
mov
sub
push
bound
dec
dec
add
add
movsb
fldl
xor
js
dec
xchg
and
gs
int3
sbb
jl
add
and
push
je
out
outsb
fstp
ret
xchg
gs
sub
arpl
lret
mov
lret
jmp
lea
sbb
js
xchg
xchg
mov
xchg
outsl
cli
and
inc
or
pop
inc
adc
add
cwtl
mov
inc
inc
or
ret
sbb
mov
add
jmp
call
lcall
shr
xor
dec
enter
gs
jb
shlb
add
sub
xchg
out
mov
cmpsb
in
inc
mov
inc
mov
pop
xor
sbb
pop
sbb
mov
addb
mov
jg
popa
cs
lods
xor
scas
sub
cmp
xor
aam
pop
and
lods
pop
shlb
mov
fsubl
loopne
mov
inc
add
inc
dec
inc
imul
enter
in
fcompl
ret
push
sub
push
cwtl
pop
cwtl
movsl
cmpsw
inc
pushf
int
outsb
imul
cmc
js
mov
push
jecxz
push
in
lods
mov
mov
pop
xchg
jle
or
enter
lods
xor
mov
insb
sub
xor
mov
lcall
adc
out
fwait
and
pop
sub
mov
jo
sbb
fwait
mov
add
xor
cmpsb
and
add
lods
sub
lahf
jmp
sub
jl
pop
inc
out
xlat
add
dec
adc
in
xchg
repnz
fwait
insb
pop
dec
cltd
xchg
rclb
and
sub
repnz
pop
sub
sarl
pop
lcall
subb
sbb
ljmp
iret
xchg
dec
shrl
fbstp
inc
mov
decl
cmpsl
inc
femms
jge
fwait
or
lds
lea
push
add
sbb
ror
testb
xchg
iret
adc
adc
fistpl
adc
cld
add
test
icebp
arpl
je
lahf
leave
repnz
sbb
cmc
adc
sub
popf
cmp
mov
fwait
inc
inc
insb
arpl
push
pusha
iret
sahf
dec
sub
cltd
shr
push
test
and
das
adc
movsl
add
pop
imul
jnp
sub
sbb
mov
call
out
jl
rorb
sbb
repnz
xlat
add
pusha
outsl
mov
inc
nop
or
in
cmp
mov
test
add
push
or
das
bound
insl
outsl
xchg
sbb
lods
adc
scas
lret
dec
in
push
in
sbb
xchg
add
xchg
sbb
push
cs
adc
jae
push
sbb
jno
adc
ret
mov
sub
lret
test
pop
cmp
fisttps
adc
xchg
adc
loope
cmpsl
add
aam
sahf
cmpsb
outsb
jg
addr16
out
repz
loop
sbb
cmp
lock
and
mov
mov
mov
pop
sbb
rcr
sbb
cld
add
and
sbb
lods
cli
in
call
pop
outsb
or
push
test
mov
sbb
push
adcb
or
mov
pushf
sahf
out
aam
fidivrs
les
add
and
not
mov
and
cmp
xchg
mov
jle
mov
xor
data16
mov
fldenv
push
test
adc
aas
enter
xor
inc
scas
sub
xchg
sub
ficomps
mov
pop
cmp
or
sub
into
ja
scas
repnz
pop
sahf
out
lock
mov
les
and
inc
inc
test
das
cmc
mov
pusha
mov
lahf
ljmp
push
pop
jmp
pop
xor
mov
and
xchg
out
sbb
dec
inc
xchg
mov
loopne
xchg
add
mov
mov
stos
or
fnsave
push
std
jp
fucom
popf
stos
mov
pusha
test
fcoms
loope
xchg
xchg
aaa
imul
stos
fwait
or
cld
mov
pop
ds
mov
lds
mov
repz
in
notb
jecxz
mov
jle
pop
repz
mul
lret
pop
mov
outsb
jo
xchg
inc
shll
int3
fists
mov
pop
adc
fimull
rclb
dec
outsb
inc
sbb
pcmpgtd
sarb
jg
xor
inc
stos
cmp
dec
adc
into
sbb
add
mov
mov
divb
jmp
dec
xlat
aas
cli
sbb
jle
lcall
xchg
pop
cmp
notb
pop
pop
mov
shll
rcr
nop
stc
mov
xchg
add
adcb
icebp
jl
cltd
xchg
cmp
clc
adcb
addr16
enter
jmp
pop
out
push
js
sbb
cmc
fpatan
or
pavgw
jnp
adc
push
and
xor
aam
fwait
pop
fdiv
pop
ss
ja
push
jne
out
or
icebp
sub
call
jmp
iret
pop
adc
push
je
sahf
loop
mov
cmc
ljmp
and
and
dec
es
jg
testb
inc
dec
and
ret
push
cs
in
insl
push
cld
inc
add
mov
fiadds
mov
mov
sub
fadd
mov
aam
subb
push
ret
loopne
mov
mov
jb
fildl
andl
xchg
scas
or
outsb
dec
out
out
mov
ljmp
xchg
mov
fcomps
fldl
adc
les
mov
stos
add
pop
jg
pop
mov
idiv
das
sub
jo
add
mov
cmp
jmp
jmp
mov
xor
cmovnp
mov
dec
cmp
dec
ds
lahf
jb
xor
pusha
dec
jbe
cltd
mov
lods
push
xor
out
movsl
ljmp
roll
ss
push
add
pop
jg
push
pop
mov
sbb
fdivrl
pushf
push
pop
cld
inc
inc
pop
jg
cmp
cltd
adc
push
fidivrl
repnz
in
xor
mov
push
stos
ljmp
pusha
jae
inc
xlat
sbb
or
cmp
xchg
or
outsb
scas
jecxz
and
sbb
ljmp
mov
lahf
lret
ss
cmpsl
stos
outsb
push
ficoml
push
xchg
add
fdivrs
and
xor
stos
jg
and
mov
jp
sbb
gs
and
test
outsl
loopne
xchg
rcll
test
add
hlt
sbb
mov
imul
enter
dec
mov
stc
xchg
pop
loope
push
jecxz
rclb
push
xor
out
lock
iret
cwtl
mov
aaa
lock
xchg
mov
mov
into
xor
sti
test
lea
xchg
lea
lea
xlat
ffree
sub
dec
dec
outsl
xchg
insl
rcrb
mov
jae
jae
cmp
fstpl
sub
out
cmp
lock
aaa
sti
add
push
adc
jge
mov
jo
dec
jne
push
pushf
fmuls
jg
pop
test
sub
jp
jg
push
mov
jecxz
add
jecxz
pop
stos
push
pop
mov
outsl
cmpsb
mov
rolb
out
fucom
sub
or
adc
push
push
mov
in
push
hlt
jbe
adc
pusha
fidivl
je
or
xor
add
daa
ret
sub
inc
lahf
push
imul
push
lea
dec
push
pop
pop
mov
xor
fisttps
xor
jo
and
xchg
ljmp
xchg
icebp
mov
add
call
sub
push
inc
rolb
testl
adc
push
or
jp
fldl
cld
pop
lods
xor
add
jg
jne
dec
lods
lds
fptan
nop
popf
movl
xchg
ds
jno
mov
push
movsl
sub
sahf
test
adc
sbbb
add
cli
stos
ret
pop
shrl
repz
xor
test
xchg
jns
lds
into
cltd
jg
leave
les
cmpsb
rcll
shrl
int3
sub
sbb
xchg
loop
addl
mov
xchg
mov
retw
ret
nop
pop
jae
stos
add
mov
xor
clc
xor
lods
rclb
test
pop
ja
pusha
daa
cmc
add
mov
imul
cmp
jl
xor
dec
leave
jmp
jp
faddl
add
cmp
mov
push
in
push
push
orl
in
aaa
kunpckbw
xchg
jae
shlb
cmpsb
mov
insb
pop
sub
test
inc
lret
mov
jae
ljmp
aas
aad
insl
cmpsl
inc
pop
es
and
mov
subl
sbb
inc
movsl
sahf
xor
aad
inc
adc
movsl
cmp
adc
movsl
and
pop
inc
cmpb
stos
aaa
cmpsb
sub
int3
fnstenv
mov
add
ficoml
inc
pop
mov
mov
nop
cmpsb
sbb
out
inc
repz
andb
dec
xor
sub
mov
cmpsl
popa
push
pop
jnp
arpl
pop
jecxz
dec
push
sbb
push
push
aad
rcll
and
mov
jae
test
into
dec
dec
hlt
ja
cmp
add
xchg
fisttps
xor
stc
cmpsl
jle
mov
sub
in
rolb
xor
fst
fwait
push
into
push
icebp
filds
push
repz
jge
push
add
mov
cld
adc
pop
jb
cs
jb
fistps
xchg
and
add
jmp
popa
xorl
cltd
dec
xor
sub
andl
test
jns
xchg
stc
cmpl
sbb
dec
push
pop
pop
or
lods
adc
shll
dec
les
mov
cs
in
in
jp
push
or
daa
es
cs
adc
nop
fs
fdiv
inc
or
mov
jg
cwtl
jb
arpl
mov
mov
mov
mov
in
fcoml
mov
pop
mov
and
add
sub
adc
or
push
mov
add
or
ljmp
lods
test
inc
pop
aad
addr16
outsb
lahf
insl
pop
cltd
and
and
sbbb
mov
jnp
mov
push
outsb
mov
add
sahf
pop
mov
cld
lret
cmp
sbb
ljmp
cld
push
push
mov
mov
outsl
mov
cmp
add
jns
xchg
xchg
pop
lods
popa
inc
ljmp
cmc
mov
scas
loop
jge
cmp
push
gs
sbb
mov
xor
cmc
dec
aaa
adc
mov
into
lock
dec
pop
lods
and
insl
mov
xchg
push
les
add
into
insb
rep
ficomps
loop
insb
int3
and
enter
inc
xchg
mov
cmp
scas
mov
jns
scas
imul
pop
leave
jo
ret
sub
sbb
cs
mov
mov
mov
cld
cld
daa
push
xor
sub
mov
in
stos
jmp
jne
imul
cwtl
mov
cltd
daa
ret
mul
dec
sbb
outsb
or
lahf
inc
popa
loope
imul
bound
popa
mov
jbe
into
rcll
mov
jp
icebp
jp
test
das
xchg
sub
jne
inc
mov
or
xchg
aas
xchg
testb
sbb
cmp
insb
lcall
in
xchg
test
pop
mov
leave
cmpsl
mov
jno
xlat
jbe
lock
cmp
inc
jb
outsb
jle
mov
dec
clc
mov
cltd
aad
lret
sbb
repnz
sbb
dec
popf
mov
cmp
pop
jbe
fstpl
rcll
xchg
add
cltd
mov
inc
mov
push
jbe
push
and
mov
scas
pop
cmp
faddl
adc
aam
push
data16
test
xlat
or
xchg
cmc
mov
jp
popa
out
popf
lea
xor
cltd
add
ljmp
pushf
jg
cmp
scas
push
outsl
adc
mov
iret
mov
or
xor
push
sbb
dec
or
loope
aam
push
pop
add
push
mov
xchg
sub
lods
clc
or
xor
xchg
pop
aad
fnstsw
pop
fnstenv
mov
aad
or
stc
stos
jecxz
pop
pop
mov
cmpb
lahf
dec
clc
mov
push
js
mov
das
les
lods
jp
daa
push
dec
inc
add
fistl
pop
mov
arpl
sbb
sbb
fldl
push
pop
mov
fnstcw
push
xor
jo
lock
add
and
xor
call
je
data16
stos
mov
mov
mov
push
testb
int3
fmul
mov
inc
pop
cmc
mov
mov
lock
and
clc
ja
mov
or
adc
packsswb
mov
hlt
or
pusha
jge
push
sahf
stc
icebp
or
pop
rcrb
mov
call
and
nop
ficomps
push
icebp
push
stos
sub
adc
cs
lds
icebp
mov
dec
cmp
adc
call
ret
into
orb
fnstenv
mov
std
add
push
and
stos
xchg
pop
dec
inc
mov
mov
arpl
addl
xor
mov
sbb
mov
xor
pusha
mov
test
out
dec
cmp
and
decb
lea
xor
lahf
cld
mov
cmp
pop
sbb
sbb
dec
cwtl
lcall
jl
std
movsb
inc
rclb
pop
mov
sub
gs
push
test
mov
push
mov
inc
jb
cmp
lcall
sub
imul
jo
sub
lahf
call
lret
jns
mov
shlb
arpl
cmp
jp
fmuls
pop
dec
adc
cmpsb
imul
cs
push
cld
mov
jns
push
std
into
or
mov
jae
or
jp
cmp
pop
lret
mov
sbb
test
fs
sub
push
out
and
iret
stos
jno
xchg
std
pop
scas
pop
adc
das
fdiv
cmp
sti
push
jo
pop
out
xor
add
sbb
mov
mov
jbe
insl
mov
cmp
cmp
sahf
into
mov
sub
int3
mov
lahf
pop
lds
bound
fwait
cld
lret
outsb
aas
xor
add
adc
cltd
vcvtsd2si
fs
gs
lahf
xor
out
movsl
cmpl
pop
dec
inc
dec
iret
int3
stos
xchg
div
shll
push
jb
pusha
or
sub
or
and
adc
test
cs
gs
pushf
and
or
out
aaa
jp
out
pop
mov
repnz
test
mov
fld
mov
sub
pop
es
mov
adc
rorl
daa
out
scas
ror
adc
cmp
pushf
int3
imul
cmp
xchg
leave
push
inc
xlat
mov
cmp
enter
mov
cld
sbbb
and
adc
and
lahf
aaa
mov
iret
or
jmp
xchg
inc
push
fldl
mov
shll
and
xchg
and
fidivrl
dec
je
xchg
cltd
stc
mov
pop
cltd
lods
lret
mov
movsl
insl
mov
in
mov
push
mov
xor
mov
cwtl
sbb
out
in
jp
cwtl
idivl
jl
push
sub
rcr
hlt
or
xor
loopne
dec
mov
mov
mov
lods
ret
test
movsb
paddsb
pop
test
xor
rcrl
push
cmp
dec
les
outsl
and
popf
dec
outsb
cld
in
jecxz
dec
inc
dec
fs
push
sub
pop
stos
lods
movb
inc
push
jo
rclb
inc
rorl
xchg
das
adc
and
into
test
or
pop
adc
pop
dec
outsb
mov
sub
add
repnz
jae
imul
cs
cmp
jnp
dec
add
mov
xor
xchg
pop
mov
fsincos
js
and
lret
xchg
pop
lock
dec
rclb
sbb
push
data16
fisttpll
fcoml
inc
mov
movsl
inc
jne
mov
xchg
and
cmp
jb
in
sti
mov
sub
hlt
mov
aaa
mov
sub
lds
pop
iret
test
push
enter
cmc
repz
in
fidivl
stc
sarb
sti
js
cmp
out
pop
jge
das
push
inc
add
ljmp
adc
xchg
sarl
cs
mov
adc
mov
cld
sbb
test
lds
loopne
stos
js
movsl
aaa
mov
add
sti
movsb
xor
xchg
push
add
rcll
daa
xorb
aad
sub
lods
sar
xor
fists
popa
insl
loopne
and
pushf
mov
lds
not
xchg
sahf
mov
add
jl
jo
mov
xor
test
daa
jg
or
or
inc
fidivs
push
mov
mov
or
pop
and
sub
test
xchg
and
and
sub
je
sbb
dec
mov
jb
pop
cltd
fildl
xor
pop
push
int3
test
adc
fistl
leave
jmp
and
pop
xlat
add
and
test
mov
jo
sti
xor
mov
test
xchg
cmp
and
xor
inc
in
js
test
dec
or
pop
add
cld
or
lock
jl
ljmp
jne
mov
jl
lahf
xchg
jb
adc
daa
scas
pop
pop
cli
stos
mov
lret
shl
test
xchg
in
int
cmp
mov
mov
mov
out
jbe
inc
mov
mov
push
xor
mov
and
push
pop
loopew
ja
push
inc
in
pop
cmpsb
add
enter
xor
addr16
cmp
jg
fsubs
lret
int
cmp
jbe
roll
sti
push
icebp
les
dec
lret
fsubl
scas
sub
mov
addl
mov
sbb
in
mov
mov
jns
and
test
incl
xchg
ljmp
pushf
xchg
enter
mov
loope
addr16
iret
scas
pop
jns
mov
outsb
mov
enter
push
jecxz
int
clc
add
decl
or
out
push
mov
adc
add
outsl
adc
stos
inc
insl
stc
aam
fisubrl
add
repz
mov
xor
xchg
cmpsb
or
push
and
add
stos
daa
sbb
push
inc
push
or
add
mov
cmovs
cmp
xor
cmc
cmp
dec
inc
cmc
pop
shll
loopne
mov
adc
cmp
mov
mov
sbb
daa
andb
xchg
mov
dec
lahf
imul
ficomps
push
pop
lret
mov
sbb
das
mov
lahf
mov
xchg
sbb
cmp
jle
push
cs
push
jge
in
jmp
xchg
and
test
xor
mov
dec
stos
adc
cmpl
push
lret
mov
cmp
mov
repnz
js
pop
es
push
pop
jae
shrl
jge
jp
lret
ds
aaa
mov
aam
sar
and
xor
popf
les
jne
jae
xrelease
data16
icebp
jl
dec
and
mov
xchg
pop
pusha
xchg
sti
outsl
fwait
cmp
in
sub
jmp
mov
cmp
xchg
out
pushf
dec
aad
fwait
repz
mov
inc
push
iret
out
inc
lret
mul
xor
out
leave
out
cmp
jle
and
bnd
aaa
ja
subb
inc
adc
dec
cmp
jno
pushf
jbe
mov
pop
testl
pop
sbb
lods
inc
std
or
mov
adc
and
push
xchg
std
ffree
imul
rcll
mov
inc
jae
sahf
jnp
dec
pop
movsb
dec
push
mov
dec
addr16
mov
adcl
or
in
out
pop
xchg
mov
lods
dec
sub
fnstcw
loope
xchg
addr16
cmp
lds
aas
dec
aam
adc
lods
or
mov
iret
xchg
mov
jge
push
push
repz
xlat
sub
rolb
scas
jp
leave
mov
inc
or
lock
jl
cmp
mov
lret
stc
adc
lods
je
cmp
loop
sbb
cwtl
das
and
and
or
popf
mov
sub
frndint
andb
push
mov
xor
mov
iret
push
les
and
and
mov
dec
and
fisubl
sbb
cld
cwtl
add
xchg
or
movsl
mov
mov
sti
repnz
mov
inc
mov
xchg
frstor
test
or
cmp
fsubl
mov
adc
inc
in
sub
push
mov
dec
xor
fs
xchg
lea
je
insb
or
loop
mov
xchg
sbb
xorl
push
cmp
daa
ljmp
test
cmp
mov
pop
shll
mov
push
sbb
adc
mov
mov
orb
jge
add
xor
out
xor
repz
outsb
jge
sbb
data16
xlat
xchg
test
shr
dec
dec
xlat
jmp
xchg
dec
sti
ret
mov
sub
or
in
call
fnstcw
dec
mov
and
cmc
adc
and
cwtl
push
jmp
pop
fwait
mov
and
std
loop
push
mov
xor
fisubl
in
or
adc
sub
push
or
xchg
dec
pop
test
aam
mov
adc
sti
movsl
xchg
adc
adc
mov
xchg
pop
cld
popf
jb
xor
sbb
cmp
mov
dec
out
cmpsl
lods
mov
pushf
jmp
stos
push
dec
push
fistpl
sarb
test
mov
sub
int3
popl
cmc
data16
jmp
out
mov
mov
enter
test
pop
rcll
xor
inc
cmp
out
dec
call
and
insl
inc
stc
pop
cmc
xadd
aad
inc
addr16
incb
jle
sbb
pop
fs
add
mov
pop
cmp
inc
adc
hlt
arpl
and
stos
fstpl
mov
addr16
lret
and
stc
stos
jle
lock
test
dec
push
or
repz
movsl
ljmp
push
xor
xchg
inc
cwtl
and
mov
std
vpmovusdb
fs
stos
cld
pop
int
lods
sub
sbbb
pmulhuw
mov
cld
pop
adc
xchg
lods
sub
shlb
ret
and
add
sahf
cmp
loope
push
sbb
lds
push
or
cmpsl
iret
or
sub
mov
pop
cmp
sub
mov
sub
mov
fdivr
cmp
into
lock
jbe
fnstenv
cld
inc
dec
addr16
cmp
enter
sbb
jge
pop
scas
loopne
jg
or
xor
int
fcoml
cmp
dec
add
and
inc
lret
test
ja
mov
inc
leave
push
inc
or
jecxz
icebp
sub
mov
push
stos
inc
add
xchg
scas
push
adc
dec
lret
push
pusha
out
je
cmpsl
add
inc
jge
rorl
adc
test
dec
push
in
cli
leave
pop
adc
and
sub
mov
pop
sti
sub
stos
sar
dec
add
xlat
paddsw
test
xchg
dec
scas
fiaddl
jns
fcompl
lahf
test
dec
xlat
push
or
push
xor
psubb
mov
xchg
stos
js
dec
nop
fdivl
jb
push
push
inc
add
cld
mov
sub
cmpl
imul
or
xchg
inc
add
mov
nop
xor
fists
mov
test
mov
int3
shll
rcl
adc
jle
mov
push
int
pop
aad
push
or
pop
jo
sahf
mov
ret
mov
mov
xchg
and
sbb
adc
adc
lahf
mov
cwtl
push
cltd
into
cmpsl
cmp
scas
jl
xor
pop
dec
mov
fwait
iret
gs
sub
cltd
sbb
mov
insl
icebp
out
sub
jge
pushf
fsubrp
insl
jg
push
mov
push
mov
jne
or
fnop
mov
in
sbb
shll
shrd
lods
pop
mov
stos
lods
xchg
or
and
push
sbbb
xchg
add
insb
sbb
mov
jecxz
push
or
ss
xchg
mov
or
sbb
mov
add
jmp
sbb
fnstenv
mov
ret
pop
shr
xchg
and
xchg
test
jg
jp
negb
in
lret
call
jmp
ficoml
movsl
xor
aaa
push
xor
jp
movsb
jg
std
mov
nop
loope
or
cld
jmp
cmpl
int
push
enter
cmp
lods
add
mov
insl
icebp
ja
jno
push
xchg
fwait
shll
mov
loopne
aam
sub
outsl
inc
push
loopne
mov
push
mov
clc
andl
pop
pop
fists
shlb
xor
dec
add
pop
and
xchg
inc
push
jg
setl
and
es
rorb
pop
mov
and
lret
cmp
sub
push
cmp
pop
cmp
add
fldt
scas
sub
je
sti
mov
xor
adc
cs
dec
lods
lods
fisubl
mov
xor
pop
push
cmp
sbb
cmp
push
pop
call
outsl
cwtl
leave
aad
mov
cmpsl
rol
sbb
les
imul
mov
mov
add
adcb
xchg
iret
loop
mov
popf
add
lods
ljmp
cmpsb
sub
cmp
fucompp
jno
cmp
fstl
jle
inc
movsl
cmp
add
aaa
fildll
pop
dec
jnp
in
pop
pop
popa
fisubrs
push
sti
iret
mov
cs
incb
adcl
call
sub
cmp
enter
dec
dec
xor
pop
mov
insb
orb
or
imulb
mov
and
jmp
xchg
push
dec
jbe
xor
pushf
and
arpl
fcoml
sti
jmp
pusha
jge
cmp
cmp
ljmp
adc
jp
inc
pusha
decl
jns
cmpsl
xchg
and
xor
das
and
ret
dec
add
fwait
xchg
out
adc
pop
imul
cmp
imul
lahf
jmp
ja
add
push
and
inc
xchg
lret
aaa
imul
loopne
inc
lret
mov
popf
pop
insl
adc
scas
sbb
cmp
fistps
jmp
push
lret
enter
dec
mov
jl
dec
pop
mov
shrb
xchg
push
jns
push
pop
insl
sub
dec
xor
test
pop
xor
pop
adc
aas
cmpsl
dec
xlat
push
inc
aas
enter
mov
or
dec
lahf
sbb
push
sbb
rorl
lods
es
addl
rcrl
icebp
in
sbb
mov
adc
pop
jmp
xchg
cld
pop
xor
stos
imul
jns
xchg
mov
xchg
pop
xor
inc
sbb
add
or
fldcw
pop
xlat
jno
adc
mov
pop
jmp
xchg
rcll
inc
aaa
scas
sarl
loope
fnstsw
sbb
stc
cld
push
adc
stos
jnp
test
lret
mov
mov
mov
je
dec
addr16
fcomps
add
mov
mov
cld
insl
out
ss
orb
pop
or
pop
adc
dec
jae
mov
fists
imul
add
lds
cmp
pop
movl
push
mov
and
insl
or
stos
fwait
arpl
or
fcmovb
xor
cltd
adc
xor
loopne
data16
adc
mov
insl
test
adc
sub
lods
inc
sub
dec
daa
adc
ffree
js
fisubrl
jb
pop
xchg
push
mov
jae
movl
pop
icebp
ret
push
ficoms
cwtl
or
or
xor
and
pop
jmp
push
add
jo
hlt
fsubrs
popa
cmpsb
movsb
xchg
push
mov
cmp
add
fidivrs
sbb
sub
push
cld
inc
mov
sti
popf
adcl
je
rcrb
jae
cld
xor
add
pop
mov
or
pop
negl
push
aad
xor
fs
pop
andb
test
cld
mov
jl
xchg
mov
or
fcomps
ja
rcrl
testb
jae
enter
stc
lret
lock
rcrb
xchg
add
inc
cmp
lds
inc
and
pop
sub
cmp
pop
sbb
loopne
push
pop
mov
pop
int
adcb
pop
push
add
daa
scas
mov
test
scas
in
inc
mov
shr
xchg
das
fs
jl
cmpsb
fs
xor
popa
jg
stos
icebp
xor
stos
int3
xor
xor
mov
out
inc
mov
sbb
jb
mov
lcall
ret
into
push
jnp
xchg
adc
movsb
cld
loopne
pop
push
icebp
scas
iret
mov
xchg
or
or
pop
mov
push
push
or
jae
call
sbb
lcall
jae
mov
cmp
je
daa
cmp
mov
inc
or
dec
test
fidivs
lahf
adc
data16
cmpsb
xor
rol
fildll
jecxz
pop
push
mov
push
adc
filds
cmpb
xchg
push
adc
push
fisubrl
inc
xchg
add
pop
clc
pop
inc
xlat
xor
adc
into
xchg
addr16
test
and
xchg
sbb
mov
rolb
lock
jae
popf
mov
xchg
in
dec
mov
or
jnp
test
in
pop
fsubl
out
push
xchg
jp
sbb
adc
pop
arpl
out
inc
pop
or
faddl
inc
mov
ret
mov
pop
mov
mov
cmp
call
popa
fstpl
xchg
ja
dec
pop
ja
dec
xor
dec
mov
cmp
xchg
popa
push
insl
sahf
adcl
cmp
into
lock
sub
jge
daa
nop
sti
or
push
fsubrs
in
push
mov
xchg
jp
sarb
add
cmp
add
aad
out
cs
das
jns
xor
int3
pop
hlt
inc
sarl
leave
jp
rorl
fcomps
data16
pop
jb
mov
imul
push
out
fdivrp
mov
add
inc
dec
ret
or
sbb
into
ja
cmp
icebp
imul
fwait
jne
pop
jns
out
pop
and
dec
mov
mov
imul
pop
pop
fcoms
fcoms
ljmp
cmc
mov
mov
adc
sub
sbbb
push
daa
adc
mov
xlat
dec
into
lcall
call
fsts
cmp
lods
xchg
xlat
imul
mov
hlt
sub
pushf
mov
stos
push
mov
lea
mov
mov
in
loopne
nop
arpl
inc
gs
ret
ficoml
aad
loop
clc
sub
cld
pop
test
mov
into
mov
stos
cld
sub
out
mov
ljmp
add
pop
and
ret
pusha
push
dec
mov
stc
pop
addb
pop
adc
scas
aas
and
outsl
into
inc
dec
xchg
idiv
movsb
pusha
jg
daa
xlat
adc
ja
pop
dec
and
cld
add
ljmp
jne
inc
jns
push
out
imul
int
clc
adc
orb
push
cmpsb
xchg
idivb
or
push
loopne
push
js
jb
mov
arpl
cltd
sub
aad
shlb
pop
ljmp
or
rorb
fists
jp
int
add
rcr
pop
jno
aad
in
inc
in
mov
mov
js
ret
adcl
mov
mov
dec
arpl
push
cwtl
popf
jle
or
leave
leave
dec
jle
add
mov
mov
je
mov
xor
sub
add
dec
mov
sub
aas
sbbb
dec
jno
jmp
inc
jbe
scas
pushf
sbbl
js
inc
imulb
lcall
int3
ficompl
inc
inc
dec
pop
dec
std
or
rclb
mov
aad
and
lock
stc
pop
movsl
test
xchg
push
or
cltd
movsb
int3
sbb
stos
jp
push
mov
xchg
add
and
push
push
ss
xor
mov
adc
stos
inc
test
push
fs
xchg
xchg
out
adc
mov
mov
es
gs
jb
shl
and
and
dec
sbb
pop
adc
jo
leave
pop
in
lods
mov
mov
add
mov
mov
stc
arpl
test
push
sti
xchg
cmpsl
leave
pop
xor
dec
scas
outsl
xchg
and
cmp
rolb
rcrl
sbb
ss
add
es
xchg
jmp
cwtl
leave
test
test
sbb
stos
mov
jb
dec
repz
cmp
xlat
mov
adc
dec
xchg
call
mov
xor
or
clc
adc
mov
fistps
inc
popf
outsb
and
pop
pop
sahf
dec
out
lods
pushf
mov
push
loopne
insb
dec
mov
sub
xor
cs
mov
mov
movsl
mov
andl
jmp
pop
sub
xchg
loope
lock
inc
dec
sbbl
sar
mov
popa
nop
inc
dec
aas
outsl
jo
sbbl
lods
sub
ret
andl
int
jl
bound
scas
cmc
xor
outsb
stc
and
call
roll
xchg
les
pop
lcall
sarb
mov
addr16
cltd
fcomps
push
sbb
add
sub
lock
test
and
into
pushf
in
ja
int3
adc
and
and
pushf
cmp
mov
mov
dec
mov
icebp
nop
cmpsl
stos
mov
in
pop
sub
movswl
js
shr
sbb
push
mov
jo
push
add
jl
xlat
mov
rolb
xchg
pop
pop
jae
hlt
cli
mov
scas
pop
pushf
and
adc
imul
ds
and
mov
aad
gs
push
into
sub
and
xlat
enter
adc
loopne
stos
xchg
daa
cmp
outsl
adc
sub
ja
mov
fmul
and
push
dec
and
jmp
xchg
sub
push
fistl
frndint
jg
aam
ja
adc
call
stos
jp
sub
cmc
in
add
cmp
shlb
jle
pop
imul
adc
mov
add
or
shr
mov
mov
adc
sub
and
sti
or
jno
lods
push
xchg
push
stos
push
insb
mov
cmc
aad
push
repz
sub
adc
dec
dec
rolb
int3
push
pop
jecxz
adc
xchg
jle
or
into
push
test
rolb
push
sub
add
dec
add
and
and
push
int
inc
pushl
out
and
add
stc
or
mov
sbb
pop
rclb
dec
data16
jae
cmpsl
pushw
jmp
outsl
sub
mov
mul
sub
mov
adc
int3
jbe,pn
push
call
and
mov
inc
daa
push
sarl
insl
push
test
push
loope
and
sub
or
mov
sub
push
out
fsub
shll
fs
sub
bound
push
add
or
adc
or
repz
sub
repz
or
inc
xchg
add
fisubs
cmp
mov
lcall
mov
dec
lret
mov
scas
cmp
stc
in
inc
imul
pop
jecxz
test
sbb
jge
loopne
inc
pop
push
aaa
pop
and
xlat
sub
cmp
xchg
pop
outsb
insl
stos
xchg
add
xchg
jge
jl
cmc
jbe
sub
jg
adcl
sbbl
fidivs
mov
mov
inc
ss
mov
pushf
mov
mov
add
test
push
sahf
sahf
ret
arpl
or
mov
mov
dec
jns
push
and
cmp
test
aad
cmp
loop
in
mov
mov
cmp
push
cwtl
add
es
inc
jl
int3
mov
jnp
adc
push
sbb
add
or
insl
jbe
and
jb
mov
or
rcrl
ror
test
and
sbb
mov
inc
adcl
add
mov
fwait
sub
cltd
pop
test
out
xlat
je
andb
xor
fs
jb
inc
movsl
enter
or
outsb
adc
mov
cmp
jo
add
imul
adc
push
leave
popf
cmpsl
cmp
rol
jo
sub
sub
ja
mov
stos
clc
jbe
or
mov
push
cmc
lods
push
mov
mov
push
mov
aad
cmp
pop
lods
xchg
jne
and
lds
cmp
pop
mov
sub
sbb
stc
pop
ret
into
gs
aam
push
sbb
js
leave
sbb
es
movsb
mov
cmp
test
sbb
or
arpl
sbb
in
shlb
push
ljmp
int3
aas
pop
cmc
stos
stc
daa
xor
xchg
push
sub
jg
xor
jns
and
aam
cmc
cli
pop
adc
sub
pop
pop
add
pop
jb
test
ficoml
mov
and
dec
mov
sarb
icebp
inc
xchg
sbb
sbb
stos
pop
iret
sbbb
stos
test
mov
dec
call
sub
dec
mov
add
cs
subb
andnps
lahf
iret
gs
push
sbb
aas
add
ds
dec
xchg
ss
jns
negb
dec
jecxz
stos
mov
aam
xchg
mov
sub
fildll
lods
xchg
add
out
push
mov
movsb
adc
leave
mov
inc
push
mov
outsb
inc
adc
xchg
addr16
lods
ss
cmpsb
adc
clc
sbbb
jno
sub
movsb
fwait
movsl
mov
nop
jecxz
je
ds
xchg
insl
xor
aad
dec
stos
leave
test
sbb
push
or
outsb
nop
aam
cmpsl
pop
lock
or
lock
xchg
add
xchg
mov
cli
push
inc
filds
and
push
add
rolb
pushf
xchg
inc
repz
out
mov
cli
mov
push
push
in
cmpsl
push
inc
aad
rorb
or
xchg
push
cli
push
cmp
adc
dec
mov
or
std
xorl
ja
mov
out
xchg
adc
jae
push
adcl
jecxz
and
sub
mov
xor
int
add
mov
leave
lret
inc
xchg
divb
mov
sbb
sub
dec
jl
dec
call
daa
jg
and
call
fisttpll
outsl
insl
and
sbb
cmc
sbbl
jecxz
xchg
add
dec
ja
mov
sub
and
dec
cmp
mov
fstps
jbe,pt
pusha
adc
sub
call
pop
lea
popf
popf
jb
dec
lcall
add
pop
pop
jmp
shlb
dec
xchg
push
xor
dec
cmp
push
sbbb
movq
and
ljmp
push
pushf
sti
aas
lods
in
sbb
cli
sub
mov
inc
push
inc
and
lods
lods
stc
imul
cmp
cwtl
into
lahf
mov
iret
or
test
inc
out
add
adc
xor
ds
cmpb
out
sti
mov
mov
jae
nop
jbe
das
in
in
lret
out
adc
fwait
movsl
mov
pop
jno
cmp
or
arpl
mov
cltd
and
mov
ret
mov
jo
or
les
mull
xchg
int3
stos
inc
ret
ljmp
call
or
sbb
sub
sub
negb
aas
xchg
xchg
cmp
inc
in
pop
jns
add
addr16
je
add
repz
jp
ja
mov
and
insl
xchg
scas
lds
movsb
xor
loope
xchg
pop
jmp
xchg
mov
xchg
and
push
lock
pop
push
pop
pushf
fs
sbb
mov
loope
xor
shlb
cmp
jmp
add
sub
pop
std
jno
xor
repnz
popf
and
popf
jl
loop
fcoml
fisttpl
push
sbb
repnz
fwait
pop
rcl
insl
mov
aam
iret
jle
gs
xor
and
jp
andl
inc
mov
jle
jle
movsl
push
inc
xor
cmp
pusha
push
sbb
inc
xchg
lds
push
lret
inc
repz
or
inc
test
andb
mov
scas
jne
or
repnz
mov
sete
dec
xor
adc
cmpsb
rcll
fisttpl
repnz
sbb
or
cmc
sbb
dec
xor
subl
xchg
push
jbe
insl
cmpsb
decb
mov
je
lahf
mov
jo
out
mov
add
mov
in
rcr
cmpsb
pop
shrl
out
clc
sbb
rcll
enter
sbb
jns
xchg
mov
ret
sbb
xor
das
das
push
lahf
inc
mov
dec
xlat
cmpsl
mov
jnp
or
inc
in
repnz
lret
pop
rcr
xor
imul
adc
adc
popf
out
mov
scas
ficoms
mov
loope
sub
sbb
rolb
or
adc
pop
popf
sbb
mov
rcrl
cmpsb
inc
xchg
inc
push
addl
mov
fwait
xor
sahf
rolb
sti
mov
cmp
push
pop
push
push
add
shld
pop
mov
bound
push
shl
out
repz
inc
and
add
push
lods
cmp
cmpsl
sbb
pop
mov
push
icebp
inc
sbb
mov
mov
push
je
jmp
sbb
fmul
icebp
jle
in
mov
ret
and
cltd
fs
mov
mov
mov
inc
enter
movb
or
xlat
hlt
lcall
lret
fidivrl
mov
sub
cmp
ret
lret
inc
cmp
add
hlt
clc
pop
repnz
addl
nop
jae
popa
dec
push
or
jae
lods
cwtl
mov
dec
dec
fdivl
mov
and
jns
imul
mov
jg
aas
int3
push
sub
shl
mov
gs
mov
add
and
aam
pop
jge
mov
xor
out
xlat
xor
dec
and
scas
add
test
dec
inc
insl
sarb
cwtl
xchg
mov
imul
mov
mov
std
mov
push
cmpsl
repnz
aam
or
shll
nop
xchg
and
hlt
enter
repnz
shlb
jl
scas
filds
jbe
in
pushf
xor
sbb
fstpl
rcll
rorl
aad
jecxz
leave
pop
jae
insb
repz
repnz
adc
es
lds
push
sub
jle
in
jl
xchg
xchg
scas
jecxz
or
loopne
aad
mov
cmpsl
xor
call
out
movsb
jge
loopne
shrb
dec
aad
dec
int3
mov
rcrl
dec
jne
out
outsb
cmp
mov
in
xchg
mov
es
pop
in
hlt
adc
and
sub
in
jg
ds
mov
test
dec
fcoml
or
rep
xor
cmpsl
dec
push
aad
idivl
scas
jp
pop
push
lahf
mov
daa
ss
adc
mov
das
in
cmpsl
cs
xchg
stos
jp
xchg
push
lods
cmpsl
adc
test
jo
dec
test
dec
lret
and
lock
adc
jns
daa
ja
cltd
cmp
xchg
inc
jns
aad
jbe
or
xchg
inc
cmp
push
push
dec
and
out
mov
pushf
in
xchg
ficoms
loop
stos
pushf
xchg
cli
fdiv
out
and
mov
push
xchg
xor
fwait
pop
inc
mov
cmp
xor
xchg
pop
mov
insl
imul
xchg
sti
rcrb
pop
int
cld
push
cmpsb
mov
ret
push
push
pop
pop
jae
dec
cmpsb
cmp
lods
pop
pop
arpl
jmp
dec
mov
xchg
pop
aas
pop
jecxz
fimull
mov
je
sbb
mov
pop
enter
insb
das
adc
xchg
in
sub
aad
cltd
shll
push
jbe
and
lds
gs
lock
sbb
mov
xchg
jae
push
cmp
pop
aaa
cmp
jl
pop
mov
mov
in
aas
shl
pop
outsl
and
idivl
mov
inc
xchg
pop
pop
lret
int3
cmp
jnp
ret
aad
push
or
inc
sub
push
hlt
not
pushf
rcr
add
gs
xor
adc
mov
arpl
shll
sub
dec
mov
adc
je
fbld
ljmp
shl
dec
lcall
popf
shll
xlat
or
push
ja
outsl
sbb
dec
clc
push
xor
xchg
mov
sub
sub
xor
ss
add
rorl
cltd
add
pop
lock
leave
cmp
addr16
add
addr16
bound
xor
push
nop
mov
cs
jns
mov
ret
cmpsl
fs
and
inc
sbb
cmp
push
and
fs
mov
sub
mov
push
push
orl
jb
cwtl
jo
test
testl
lock
iret
inc
test
ds
or
sub
mov
push
call
fistps
cmp
popa
cltd
xor
add
je
mov
les
fldcw
jno
inc
dec
into
xor
ss
pop
xchg
insb
mov
xor
xor
and
lea
pop
xlat
mov
enter
xor
adc
sub
stos
lret
sub
xor
in
xchg
inc
adc
xlat
adc
cmp
imul
loope
fld
test
ret
xor
pop
prefetch
insl
enter
cltd
adc
sub
movsl
nop
shl
data16
jl,pt
rorl
jge
mov
in
push
jmp
clc
fsubs
fdivrl
ja
cmp
aaa
push
rclb
xor
or
mov
lea
loopne
add
pop
push
mov
imul
push
and
lds
aas
mov
inc
mov
das
jmp
call
push
xchg
sti
pusha
pop
lds
inc
add
jge
adc
ss
add
stos
pushf
xchg
test
and
dec
push
push
sbb
sub
add
xchg
out
repnz
jle
mov
outsb
in
fsts
adc
mov
push
hlt
cmc
mov
rolb
daa
insl
jg
pop
pop
loope
xchg
push
jne
icebp
into
sbb
ficoms
ss
lahf
push
hlt
push
in
jecxz
push
cwtl
fidivs
xor
mov
in
fimuls
add
push
arpl
mov
mov
mov
int3
mov
and
sahf
loope
inc
mov
mov
cmpsl
and
xlat
fsubrl
aam
xchg
xchg
rcrl
mov
jecxz
test
and
popf
sub
ret
lcall
xchg
or
andl
loopne
and
mov
jge
inc
jo
pop
iret
maxps
lods
pop
icebp
lret
jae
or
loope
jae
sti
jmp
rcll
test
rcll
sbb
pop
pop
xchg
jg
sti
lahf
push
or
inc
dec
sbb
push
xchg
es
xor
shll
les
inc
pop
fsubr
cmpsl
pop
jo
xchg
dec
aas
and
xorl
mov
xor
mov
shrl
or
es
mov
push
adc
in
test
fnstenv
push
push
bound
imul
sub
int
faddl
dec
adc
inc
mov
add
cmpsl
int
lret
push
lea
add
nop
scas
push
cmp
cmp
inc
push
xor
and
inc
mov
ljmp
cmp
jno
pop
add
lcall
shl
or
std
daa
fsubrs
pop
or
aaa
loop
je
pop
insl
aas
and
mov
push
js
pop
pop
sub
or
push
mov
ds
cmc
or
xor
jb
test
out
rorl
adcl
insl
insl
mov
sbb
mov
mov
cmp
mov
fs
mov
add
jge
xchg
xchg
cmp
fisttps
lret
sarl
mov
cs
icebp
cld
movsb
roll
rcrl
mov
ljmp
xchg
mov
push
mov
cmpb
stc
or
loop
push
addb
lret
mov
mov
xor
repz
inc
push
pop
mov
rcr
mov
aaa
rol
loope
vpmulhuw
push
jecxz
adc
xchg
into
push
cmp
and
neg
pop
sbb
scas
sub
jl
movsl
xchg
fsubrs
cli
dec
int3
out
popa
movsb
xchg
insl
jae
sbb
inc
or
cli
aam
xchg
sub
xchg
xchg
inc
cmpsb
adc
and
xor
imul
xorl
pop
pop
lcall
out
pop
push
lret
xor
or
mov
pop
dec
xor
clc
insl
fchs
xor
xchg
sbb
clc
lods
lods
addr16
std
cmp
jno
incb
shrb
and
cmpb
xchg
std
lcall
sub
push
scas
sub
pushf
ds
xchg
jb
in
ror
inc
sub
xchg
outsl
ds
dec
out
ret
jp
pop
inc
js
xor
ss
loope
mov
fmull
push
adcb
sarl
sub
js
lahf
jmp
bound
push
out
lret
cmp
fs
fiaddl
mov
lret
fnstcw
aad
insb
aaa
cltd
jle
fcmovu
out
mov
sbb
mov
mov
movsb
jmp
rorl
pop
in
or
inc
jo
jge
test
push
add
mov
inc
sbb
inc
mov
mov
pop
fildll
rcrb
sub
mov
iret
outsb
sbb
in
insb
call
lock
bound
popa
pop
fldcw
mov
jo
scas
inc
or
pop
popfw
popa
lock
jl
in
mov
xchg
clc
xor
pop
push
jnp
jmp
negb
adc
mov
ret
shl
adc
pusha
sub
pop
dec
or
pop
xchg
mov
jno
xor
and
shl
jb
cmp
pop
push
aad
xor
xlat
jne
adc
test
and
sbb
cltd
repz
sbb
dec
mov
adc
mov
adc
xchg
call
ja
scas
add
sbb
pop
push
js
sbbb
clc
fldenv
cld
js
pop
in
adc
nop
ficoml
js
popf
or
jbe
mov
cwtl
xchg
and
je
sub
mov
imul
gs
jge
outsb
sub
call
loopne
adc
gs
iret
sti
adc
jnp
adcl
mov
icebp
fidivl
outsb
jbe
loope
test
pop
fnstcw
stc
insl
xchg
jb
out
add
test
cmp
cmpsl
or
in
mov
roll
int
nop
cmp
sbb
push
mov
mov
mov
sbbb
xor
or
pushf
aam
jno
call
es
cmpsb
nop
mov
out
loop
adc
jl
mov
mov
mov
sub
pop
int
mov
sahf
imul
pop
sub
cmp
cmp
push
icebp
and
bsr
test
outsb
fbstp
int
leave
and
mov
mov
jae
repnz
lcall
imulb
cld
xlat
jbe
clc
sub
inc
xor
loope
aas
inc
inc
adc
pop
inc
xlat
mov
jb
stc
inc
add
loop
inc
jle
pusha
fs
mov
pushf
pop
bound
pusha
inc
inc
test
and
movsb
sub
addl
pop
jl
rorl
push
idiv
push
test
and
imul
lahf
jecxz
lret
mov
sbb
jl
push
fstp
mov
xchg
subl
lret
xchg
ja
mov
in
mov
fisttps
mov
sbb
sub
shlb
mov
es
sti
sub
stos
dec
dec
int
fdivp
idivb
jmp
sub
lds
sub
repnz
adc
and
int3
mov
mov
inc
lds
cmc
dec
or
jp
je
add
into
out
negb
push
hlt
inc
jbe
adc
and
mov
xor
call
mov
pop
imul
xor
subl
inc
outsb
clc
das
push
inc
test
inc
das
imul
push
jle
jne
outsb
mov
das
dec
cmp
mov
mov
sbb
fcomi
xor
push
jecxz
out
jo
jb
pop
add
leave
pop
sub
inc
scas
cmp
iret
jl
xchg
push
cltd
loopne
push
inc
pop
outsb
xor
ljmp
sub
outsl
aad
xor
inc
jns
sbb
fstpt
jmp
inc
sbb
inc
roll
xchg
push
mov
xchg
and
test
fisubrs
push
clc
les
mov
das
xlat
dec
test
xlat
pop
and
out
scas
addr16
or
mov
jnp
pusha
pop
aas
mov
test
xchg
mov
pop
xchg
movsb
mov
xlat
xor
cmp
pop
xor
sbb
stos
ljmp
testl
cmpsl
in
lods
fsts
lret
push
mov
pop
out
loop
mov
mov
push
mov
jo
sar
fisttps
movsb
xchg
popl
cmp
adc
and
sbb
sbb
sub
es
xor
test
dec
mov
mov
xor
cmp
push
sub
pop
xchg
cmp
sub
jp
adc
cld
stos
aas
inc
fwait
dec
push
cmc
dec
shrb
lret
pop
push
or
jle
xchg
aaa
xor
rolb
cltd
out
push
dec
les
cmp
int3
sub
jmp
pop
mov
movl
cmp
aaa
in
mov
sub
daa
scas
mull
sbb
aad
jge,pn
and
insb
fdivl
mov
xchg
lods
and
lret
ss
out
and
mov
add
gs
fisubrs
mov
imul
xlat
push
mov
stc
in
mov
in
mov
hlt
mov
mov
mov
xchg
rclb
pop
faddp
mov
mov
lret
data16
sub
int3
push
lret
mov
dec
cwtl
pop
sbb
mov
dec
stos
test
push
jbe
jp
shlb
add
test
shl
das
jle
out
cmp
jmp
jge
int
jb
repz
int
in
out
insb
add
push
in
push
repz
insl
push
push
cmp
movsb
leave
xor
inc
negb
stos
sbb
sbb
adc
cmp
mov
mov
fimull
and
push
sub
pop
xchg
imul
call
lock
adc
popa
add
mov
cwtl
data16
aad
loope
push
imul
add
mov
or
aaa
mov
jo
divb
std
bsf
lds
pushf
adc
sbb
sub
notb
aad
fistpl
sub
xchg
js
insl
test
and
xchg
or
popa
mov
ja
scas
add
cmp
sub
cltd
popf
jno
das
scas
lds
clc
adc
push
mov
inc
add
fcmovne
das
in
pop
cmp
ljmp
mov
test
add
loop
loope
mov
mov
adcl
xchg
adc
pusha
movsb
out
adc
xor
add
imulb
aam
fsubrs
inc
testl
or
or
or
xchg
push
cli
push
dec
repz
add
push
pop
imul
inc
adc
pop
xchg
sbb
add
or
shlb
pusha
pop
push
mov
fsubs
pop
cmp
mov
pop
sub
movsb
cltd
repnz
out
test
jne
add
imulb
xor
mov
pop
loopne
pushl
je
adc
aam
push
cmp
cmp
xor
sub
sbb
cwtl
pop
and
cmp
fsubrl
jmp
fsubl
inc
mov
ja
xchg
leave
scas
jb
adc
cwtl
add
sahf
pop
in
push
xor
or
adc
ss
cs
mov
pop
inc
or
or
cmp
imul
into
mov
rorl
jp
cs
mov
out
jle
rclb
lcall
arpl
mov
push
mov
test
in
cmp
xchg
into
test
xorb
mov
dec
xchg
pop
mov
fs
pop
push
push
ret
add
ljmp
jmp
sbb
imul
sub
es
shrb
sub
and
rcrl
test
lcall
iret
jbe
cld
fcomps
leave
fadd
jo
enter
cmc
xchg
push
lcall
aam
inc
push
lds
push
mov
cmp
outsl
out
rcrb
push
and
daa
jg
or
add
test
mov
add
stos
cmp
aam
pushw
lock
mov
ret
mov
pop
jne
std
in
mov
add
fs
xor
mov
repnz
cmp
lret
into
int
jne
mov
xor
cmp
mov
or
or
xchg
imul
test
jne
dec
dec
jge
out
fimull
scas
rcrb
add
popa
inc
mov
stos
mov
adc
repnz
in
dec
popa
popa
lret
xor
addb
out
jg
outsb
jbe
pop
sub
add
das
repnz
rorb
addr16
lock
jo
xchg
call
cwtl
adc
outsl
cmpsb
cld
push
lock
pop
add
adc
pop
pop
xor
mov
cmp
fildl
addr16
sub
inc
adc
pop
rcrl
stos
mov
repnz
and
insl
mov
jae
fistl
fdivrs
cmp
outsl
inc
test
repz
inc
aam
cmc
xchg
cmp
dec
sub
je
lods
fidivrl
inc
jno
sarb
dec
in
pop
mov
inc
loop
xchg
xchg
lods
sub
repnz
bound
jo
pop
fimuls
add
in
push
push
jmp
cmpl
rcll
jnp
insb
jl
call
jnp
fcom
loopne
or
push
inc
adcl
gs
icebp
es
mov
inc
adc
mov
les
js
xchg
mov
mov
mov
aam
mov
ror
jnp
mov
inc
dec
xchg
test
pop
mov
push
pop
popa
stos
jle
push
in
insb
into
rorb
daa
xor
filds
add
adc
pop
int
loope
loope
nop
dec
loope
nop
sahf
mov
dec
add
popa
xchg
lods
repz
inc
negb
inc
or
push
fistpl
aam
cmp
push
adc
lods
mov
and
dec
cmp
enter
mov
mov
mov
mov
hlt
fistpll
idiv
jno
pop
lahf
call
mov
jecxz
rorb
adc
mov
xchg
in
mov
nop
mov
mov
sbb
ja
or
in
fidivs
shrl
test
mov
cmp
jo
insl
ret
sbb
gs
mov
fwait
out
int3
mov
out
pop
int
aad
mov
cmp
mov
jge
das
sbbb
div
scas
jl
gs
stos
stc
ljmp
jnp
pushf
mov
mov
in
xchg
fistps
mov
mov
push
mov
lods
in
imul
lret
dec
inc
dec
xchg
int
cmp
push
and
repnz
xchg
mov
in
mov
or
in
out
popf
test
jae
sbb
stos
int3
popf
std
test
push
adcb
movsb
and
pop
push
mov
outsb
dec
lods
adc
lock
inc
pop
cmp
stos
fbstp
cmp
xor
mov
pusha
dec
aam
pushf
lahf
add
pushf
pop
clc
test
and
push
jbe
jmp
and
inc
fistl
sub
cld
push
inc
mov
cmp
push
movsl
cli
xor
push
scas
pop
mov
jno
hlt
gs
ficomps
adc
push
fisubrl
sbb
das
push
fisubs
mov
punpckhdq
and
lds
pop
inc
ja
inc
inc
xchg
shrb
sbb
das
fsubs
call
imul
xchg
fdivrs
sti
lret
mov
daa
jecxz
xchg
or
lods
jmp
sbb
lret
aas
mov
test
fstl
out
inc
loope
movsb
push
sbb
fisubl
mov
js
movsb
mov
ret
adc
mov
mov
sub
xchg
mov
test
aas
in
mov
push
shr
adc
inc
push
jmp
scas
add
cwtl
int3
jg
pop
mov
testb
xor
cmc
xlat
loope
test
cmp
fs
in
shlb
movsl
adc
fadds
pop
les
jle
pushf
jbe
cmp
xor
enter
loop
insl
jbe
xchg
je
xor
repnz
pushf
sub
inc
out
jbe
pop
icebp
push
cli
cmp
xor
nop
mov
jl
jo
imul
leave
int3
mov
stc
or
int3
xchg
xchg
xchg
fiadds
jnp
lahf
mov
cltd
mov
lret
xor
sarb
or
inc
movsl
and
in
xchg
and
out
sahf
and
notb
imul
dec
mov
ljmp
mov
out
mov
mov
jne
sahf
jae
out
popa
fwait
sub
mov
cmp
leave
hlt
test
inc
idivb
lcall
sbb
pop
hlt
xor
lret
mov
mov
mov
xor
stos
stos
andb
ret
ficoml
add
pop
xchg
sub
add
les
inc
xor
adc
or
rorl
popf
fdivs
xchg
pop
aas
push
lahf
mov
frstor
ljmp
rcr
and
dec
fwait
pushf
ret
hlt
test
jo
add
fwait
loop
cmpsl
cmp
or
fldcw
lea
pop
mov
std
fdivl
mov
bound
das
pop
pop
xor
or
fs
push
or
int
pop
pop
imul
rolb
sub
dec
pop
lcall
xchg
and
mov
bsf
in
ja
or
cmp
loop
push
sbb
fcompl
sbb
mov
jmp
hlt
cltd
mov
cltd
pop
xorb
sahf
xor
inc
xchg
and
xchg
lcall
inc
add
and
mov
mov
stos
push
jge
mov
ret
xor
int
or
pop
pop
sub
imul
jne
lret
and
aas
or
push
lcall
push
lahf
xor
fsubs
test
addl
rcrb
add
scas
or
dec
es
pop
pop
jl
popa
and
sub
mov
xor
push
or
mull
jecxz
mov
jb
inc
mov
jns
pusha
ljmp
dec
adc
xchg
pusha
or
xchg
rorl
and
stos
rclb
xor
aas
xchg
mov
scas
std
inc
jmp
jl
pushf
mull
sub
sahf
inc
xchg
aas
out
pop
fidivl
bound
mov
push
lods
jbe
and
jnp
call
xor
mov
mov
xchg
ja
mov
imulb
test
sbb
int3
dec
das
js
pop
inc
daa
push
and
push
in
mov
and
in
ja
dec
and
fdivp
cs
aaa
test
xorl
fstps
xor
cmpb
dec
cwtl
inc
repnz
repz
aas
ds
or
mov
bound
inc
out
add
inc
repz
push
outsl
movsb
cmc
sub
mov
sahf
dec
pop
insl
sarb
clc
sub
ret
fisubs
and
movsb
jg
cmc
pop
out
sbb
jg
imulb
sti
or
mov
cwtl
arpl
stos
lcall
jg
push
and
lods
fdivr
int3
pop
les
nop
cli
adc
jl
negb
fbstp
push
add
outsb
push
cmpsb
out
ss
sbb
push
sub
lea
pusha
pop
std
add
pop
outsb
ds
sahf
inc
or
iret
fbstp
aaa
sub
sbb
pushl
push
inc
pop
sti
push
clc
stos
sti
cmp
popa
add
js
sub
pop
test
pop
aas
pop
xchg
test
sub
dec
and
sti
gs
xor
mov
repz
xchg
aam
inc
mov
or
add
cmpsb
sbb
mov
jg
cmp
into
cmp
hlt
mov
sbb
jp
jmp
inc
inc
out
cmp
test
or
jo
in
insl
push
lcall
shll
call
nop
jae
jno
xchg
mov
pusha
jae
mov
loopne
sbb
and
ficoml
jle
push
fldenv
daa
leave
test
pop
xchg
decl
popa
jae
arpl
mov
ss
fcompl
loope
sarl
pop
jbe
test
xor
push
imul
rcrb
aas
test
mov
sahf
mov
inc
xor
negl
jl
dec
inc
or
sub
call
stos
xor
loop
dec
loopne
sbb
xchg
or
lret
xor
adc
mov
pop
cwtl
into
dec
in
shrl
adc
inc
roll
cld
cmp
jg
xchg
jae
pop
imulb
dec
outsl
mov
test
loop
sbb
mov
adc
loope
and
icebp
cmp
stos
je
jg
int
in
or
cmp
repnz
or
cs
jnp
daa
je,pn
lods
aas
in
scas
jbe
push
jns
jg
stos
push
and
call
cmp
imul
sub
mov
movsb
mov
sahf
add
xor
push
jae
jbe
icebp
movsl
pop
push
mov
adc
stos
daa
scas
push
cltd
inc
sbb
inc
pop
or
lret
arpl
faddl
jo
pushl
add
add
scas
sub
pop
mov
lret
mov
cmp
lcall
and
mov
mov
inc
in
call
jne
push
cmpb
insb
dec
loope
arpl
push
push
push
out
rclb
xor
mov
mov
and
dec
xorl
aas
pop
sub
push
std
fdiv
sub
xlat
pusha
mov
cmpsb
xchg
inc
inc
nop
jne
push
jnp
push
mov
jns
push
jns
pop
enter
int
andb
cltd
shrl
add
fnstcw
sub
dec
pop
aad
sub
lahf
lret
mov
push
cmp
push
and
insb
push
inc
mov
arpl
xchg
data16
push
pop
push
out
jnp
gs
rcll
in
pop
cld
push
dec
gs
mov
or
sub
pop
negb
jno
mov
cmpl
adc
outsl
adc
imul
lret
sahf
or
mov
ss
and
pop
mov
mov
sub
dec
fcmove
inc
lods
pop
js
repnz
aas
and
and
mov
or
jp
lock
pop
xchg
sub
repz
cmpsb
shl
adc
add
adc
mov
sub
lea
imul
fisubrl
cld
icebp
sar
push
jl
or
dec
imul
adc
and
jno
notb
jmp
int
and
mov
xchg
je
and
fcomi
pop
jbe
enter
mov
add
jns
inc
jle
test
out
aas
sub
jecxz
mov
fwait
movsb
add
xor
popf
jbe
or
movsl
jg
lret
xchg
push
pushf
dec
shl
daa
dec
repz
and
xchg
ret
mov
cli
rcrl
sbb
shlb
das
dec
fs
shll
mov
pop
movsb
out
fisttps
or
enter
divl
inc
stos
mov
or
test
fldenv
cmp
imul
rcll
bound
push
mov
adc
cmp
mov
mov
dec
jmp
dec
and
jl
mov
test
xchg
jns
movsl
push
out
adc
in
mov
sub
pop
sub
mov
movsl
or
sub
dec
ss
mov
xor
add
out
cs
mov
das
jo
add
xchg
xor
movsb
pop
cmp
cmp
test
adc
pop
pushl
lret
lds
add
sub
xchg
jmp
mov
xchg
inc
in
dec
mov
xchg
push
xor
jno
ss
rorb
cld
cmp
xchg
jo
ds
sub
dec
mov
jo
clc
cmp
out
lods
xchg
cld
adc
jp
or
and
ss
or
jle
mov
xor
cmpsl
dec
xchg
dec
fldl
push
fnstenv
xchg
mov
pop
cmc
lret
test
sub
lea
fidivrl
mov
das
jg
and
jl
and
in
sbb
test
rorl
and
inc
fisubrs
xorl
std
sub
std
cmpsb
pop
andb
adc
in
mov
jp
or
psubusw
or
fidivl
lret
pop
dec
loope
xchg
pop
and
jb
jle
lcall
adc
pop
test
adcl
pop
jno
lods
pop
ret
aam
pop
pop
jnp
or
mov
out
pop
scas
out
pop
enter
aaa
add
push
je
loope
int
in
test
xchg
sub
call
add
les
je
in
push
pop
cmp
andb
xor
icebp
mov
and
xor
lea
mov
negb
into
jnp
jl
call
aam
stos
ret
jnp
inc
mov
jge
lods
xchg
pop
stos
xlat
add
fwait
ror
rorl
jp
adc
inc
sub
cmp
cmp
addl
movsl
xchg
pop
lods
ret
aaa
pop
stc
adc
and
pop
ljmp
jno
jbe
mov
xchg
push
push
pop
lcall
fsts
das
xor
scas
sub
outsb
push
cs
push
mov
leave
mov
fimuls
data16
add
outsl
sub
cltd
jp
add
add
mov
filds
loop
mov
nop
mov
pop
inc
push
mov
xor
jmp
mov
leave
dec
sub
xchg
pop
mov
push
lahf
push
sub
incb
pop
add
out
insb
xchg
xor
addr16
ficoml
dec
cltd
es
fsubp
sbb
inc
mov
and
sbb
pop
jo
aad
mov
xchg
add
jmp
imul
xlat
test
nop
pop
adc
fidivrl
jae
jmp
es
imul
or
shll
and
dec
sbb
mov
jl
sbb
les
and
xchg
ret
or
sub
add
enter
shrl
loop
inc
mov
fiaddl
adc
sahf
out
imul
int3
push
inc
xchg
lock
test
cmp
cmc
push
sti
pop
sbb
std
int3
xchg
mov
pop
cwtl
jnp
pop
push
cwtl
das
add
adc
push
out
sub
mov
test
rcr
adc
mov
jo
xorl
xchg
pop
rcrl
cld
fcmovbe
in
adc
ja
push
jne
jg
out
sahf
pop
pop
inc
arpl
sarl
aam
daa
xor
jp
mov
nop
add
adc
jle
ja
dec
incl
mov
mov
cli
fwait
lods
push
pop
pop
pop
inc
add
xlat
rcrl
int
mov
xlat
inc
add
test
lods
fsubr
cmp
mov
addr16
xchg
es
insb
lods
std
mov
push
mov
add
or
xorl
popa
pushf
fidivl
cmpsl
cmp
jecxz
add
jmp
hlt
ljmp
mov
mov
rorl
daa
and
mov
jmp
add
ret
push
ret
in
jne
lret
pop
daa
push
rcl
push
mov
out
inc
sbb
je
mov
out
push
jmp
fnstsw
xor
cmp
das
sbb
xchg
out
jno
sarb
cld
mov
mov
xchg
call
lret
cmp
loop
xchg
or
xchg
push
mov
xchg
pop
popl
rolb
jle
dec
ds
push
xchg
pop
in
test
mov
sub
jp
inc
out
out
adc
fisubrs
iret
loop
pop
outsb
lret
dec
movsl
xchg
dec
testl
rcrb
push
mov
aas
jg
clc
inc
sbb
jb
add
es
test
pop
push
push
xchg
lahf
pop
sarl
leave
data16
cld
lret
jns
pop
jbe
mov
or
sub
adc
stos
inc
lea
cmp
sarb
mov
decb
adc
jae
adc
cmp
push
or
add
rcr
movsb
mov
dec
sbb
mov
lods
mov
sbb
inc
in
js
in
mov
movsl
cmovl
repz
inc
xchg
mov
scas
loopne
jae
mov
add
jmp
js
adc
call
push
mov
add
mov
mov
enter
out
jae
mov
stos
dec
pop
mov
addb
and
mov
mov
sahf
aaa
mov
leave
xor
sub
or
and
jp
pop
add
or
mov
dec
jae
mov
or
sti
out
stos
lret
dec
push
lahf
jecxz
pop
xlat
rcrl
inc
pop
add
sahf
fistpl
clc
push
insl
sub
xorb
mov
gs
sti
adc
sub
adc
filds
mov
add
int
stos
jge
or
push
mov
scas
sbb
pop
pop
jecxz
orb
push
dec
and
push
inc
add
pop
adc
mov
sbb
fnsave
cltd
loop
and
cltd
and
push
or
in
pop
nop
xchg
dec
mov
or
loopne
ficoml
lock
xchg
test
push
lods
scas
out
mov
xchg
ss
mov
sub
daa
or
xor
jb
pop
fcompl
fdiv
xor
data16
dec
loopne
inc
jmp
rcll
or
cmp
lods
mov
adc
and
pop
lea
sub
stc
mov
lret
loopne
push
in
push
adc
mov
pop
inc
in
inc
cmpl
decl
mov
cmp
mov
out
sbb
mov
hlt
in
xlat
or
or
ss
imul
data16
stc
ljmp
sbb
or
mov
aas
pop
xchg
xchg
mov
mov
mov
and
pop
in
frstor
in
fistpll
jb
leave
inc
shlb
add
mov
jnp
dec
pop
pop
hlt
inc
pinsrw
mov
movsb
jmp
xor
adc
incl
fwait
data16
pop
add
add
and
test
jae
clc
or
lods
jb
mov
fcmovne
cltd
jecxz
sarl
mov
cmp
jmp
pop
push
jo
inc
inc
loop
gs
imul
cmp
inc
adc
dec
popf
push
fstpl
inc
dec
aad
pop
lcall
jecxz
mov
stc
dec
movb
jae
stos
cmp
xchg
add
lock
lock
stos
push
adc
dec
loope
and
out
xor
in
subl
and
movsb
sbb
pop
scas
pop
inc
mov
test
cmc
sub
popf
orl
icebp
sub
movsl
test
jp
jl
mov
sub
pop
dec
movsb
lock
xchg
dec
cltd
and
push
pop
jns
pusha
out
xor
pushf
jb
int
mov
mov
aam
int
test
jnp
lods
cmp
dec
add
jno
sbb
adc
xor
cmp
push
rcl
addr16
popf
push
push
push
pop
xor
insb
mov
push
test
dec
add
inc
ss
fdiv
movsl
out
pusha
sub
mov
adc
lcall
pop
jecxz
pop
sub
xor
fabs
push
loopne
xchg
mov
sub
rorb
pusha
ja
mov
movsb
popf
xchg
rcll
leave
dec
inc
push
cltd
cmp
xchg
fwait
rclb
out
ret
push
and
fcmovb
repz
pop
int3
fwait
sub
ja
popf
cs
sbb
cmpsl
inc
mov
dec
lcall
push
clc
stos
or
sbb
aad
clc
hlt
in
dec
lret
mov
lds
pop
daa
leave
xchg
clc
push
xorb
mov
ljmp
jecxz
and
mov
fidivrs
lock
aad
aaa
pop
mov
test
xchg
rol
mov
xor
das
pusha
cmpsb
repnz
shrb
jecxz
sbb
cltd
pop
mull
mov
or
jge
repnz
xchg
daa
adcb
and
icebp
xchg
int3
lahf
sub
jecxz
jp
adc
dec
or
movsl
xor
sub
cmc
cmp
scas
xchg
cs
xchg
pop
scas
cmc
jb
shl
cwtl
xchg
add
inc
jae
dec
dec
in
xchg
lock
inc
jnp
inc
shll
mov
push
mov
sub
arpl
pop
add
push
sub
es
loop
lods
jg
in
test
test
mov
xchg
test
xor
iret
add
cmpsl
popf
sub
mov
mov
xor
dec
mov
pop
sti
gs
xchg
cmp
mov
ret
pop
adc
pop
and
fwait
lds
ds
xor
nop
ja
inc
mov
js
sbb
jmp
mov
sub
jp
jl
leave
sub
push
movsl
adc
dec
mov
mov
push
in
mov
pushf
push
xchg
adc
addr16
bnd
pusha
int3
arpl
sbb
dec
mov
in
in
pop
xchg
aam
lods
std
inc
dec
das
repz
adc
ret
test
sub
sub
stc
roll
jne
pop
xor
push
add
pusha
lea
stos
rolb
push
push
test
shr
std
test
and
loope
cmp
cmpsb
add
shll
mov
ja
bound
xlat
outsb
jg
lcall
pop
cmp
xor
fists
sti
add
lods
add
shrl
mov
pop
jno
fmuls
clc
inc
push
aad
sub
call
add
inc
xor
cmp
cmp
and
in
scas
cs
jne
lret
push
out
stc
mov
or
int
dec
loope
out
icebp
inc
xorl
shll
ss
aas
int
push
mov
neg
mov
sbb
and
movsb
mov
lea
pop
fildll
xor
daa
adc
mov
jge
sub
popf
cmp
js
push
mov
sbb
pop
pop
mov
jns
outsl
mov
push
add
add
or
cwtl
cmp
mov
in
jae
sbb
out
lret
insl
dec
sbb
cmp
and
loop
push
push
ret
popf
pushf
pop
movsl
add
mov
imul
int3
mov
int3
push
gs
out
pop
xor
movsl
sub
add
pop
jbe
cmc
ljmp
add
adc
imul
mov
sbb
int
push
cli
pop
movsl
aas
fsubl
dec
hlt
pop
pusha
pop
in
and
xchg
jo
dec
fisttpll
div
pop
and
cmp
in
insb
cltd
jns
cmp
jb
test
mov
cmp
xchg
cmpl
jne
push
sbb
sbb
jno
test
xor
mov
ss
pop
xchg
stos
jae
cltd
jo
movsb
loopne
xchg
jmp
xchg
loop
out
mov
push
nop
and
add
adc
fwait
imul
lods
cmp
aas
push
mov
call
pop
gs
repz
xor
and
or
mov
push
setae
cmp
aas
sub
out
xchg
sbb
pop
sbb
dec
ds
rorb
and
bound
xor
inc
xchg
cmp
divb
jecxz
mov
jmp
pusha
pop
test
lret
lcall
mov
pushl
lcall
mov
jle
push
rcll
loopne
and
outsb
js
insb
daa
stc
adc
and
mov
insl
xchg
jb
mov
scas
jo
pusha
sub
add
xchg
cli
fs
sbb
add
stos
push
lods
loop
hlt
test
iret
xor
or
mov
leave
cld
enter
cmp
lods
xor
cmc
xor
enter
xchg
adc
sbb
rclb
pop
xchg
mov
ret
popf
jl
jne
mov
ja
xchg
cmpsb
ds
lock
out
mov
lock
push
lahf
lea
xchg
jmp
cmp
mov
xor
icebp
je
mov
pop
js
push
fwait
mov
outsb
mov
mov
cld
inc
jmp
shll
icebp
jmp
mov
jo
inc
add
shll
out
fcomps
rcll
cmp
jl
xor
pop
inc
fwait
mov
icebp
rcrb
dec
mov
aad
add
ds
js
stos
rorb
xchg
pop
pop
cmp
imul
loop
cmc
mov
lock
in
sub
or
push
fldcw
xchg
add
push
fcom
popa
std
mov
cmpsb
push
inc
cltd
add
jno
mov
out
icebp
or
adc
xor
xor
fistl
mov
cmp
ja
xor
inc
shll
mov
sahf
ja
mov
xor
out
fld
jmp
xor
sbb
sbb
jl
aas
adc
cmp
push
sti
push
and
cmpb
clc
clc
add
iret
ljmp
xor
pop
lods
sar
ljmp
dec
dec
sub
sahf
push
cmpsb
iret
aas
psubq
and
adc
roll
into
mov
inc
push
xchg
out
leave
int
mov
mov
jbe
xchg
dec
gs
data16
jmp
push
in
inc
mov
jmp
fistps
cltd
out
add
adc
popf
fsubr
mov
int
push
addr16
mov
mov
push
xchg
mov
cltd
in
jns
js
in
dec
in
push
mov
xchg
daa
inc
ja
cmp
sub
jecxz
aas
pop
nop
jo
adc
fwait
jnp
sbb
pop
rclb
cs
add
out
test
xchg
xchg
xlat
test
jmp
jne
lods
and
mov
aaa
in
jg
xor
jecxz
gs
mov
mov
push
sub
jno
dec
imul
ja
mov
mov
lret
dec
inc
scas
outsb
arpl
dec
xchg
stos
xor
and
or
sbb
jmp
sbb
xchg
jne
pop
or
adc
and
hlt
inc
cmp
cltd
ja
and
dec
cmp
xchg
pop
and
lock
pop
sub
or
inc
fsub
cmpsl
pop
xchg
into
rcrl
cmpsl
lock
pop
adc
dec
or
and
inc
in
mov
and
bound
and
jecxz
pop
dec
insl
pop
jle
and
iret
pop
jp
mov
nop
stc
adc
push
imul
negb
mov
pop
popf
or
movsb
fcomps
pop
inc
adc
cmc
xor
fnsave
xor
rclb
cltd
test
fbstp
mov
mov
ret
andb
or
shll
ret
mov
lea
cmp
stc
jo
push
dec
stc
sbb
dec
ficomps
mov
fisttps
sbb
add
sub
cmp
mov
ds
out
dec
sbb
rcl
mov
jo
mov
sbb
xchg
lret
inc
cltd
add
and
pushf
xlat
push
test
pop
adc
xor
dec
xchg
mov
out
lcall
inc
mov
pop
fsubrl
mov
fwait
test
call
cmp
jle
dec
and
xchg
rorl
lret
jmp
nop
repnz
inc
cwtl
arpl
cmpl
arpl
xor
pop
aas
or
fstps
mov
popa
stos
enter
aad
adc
scas
iret
adc
icebp
nop
adc
icebp
and
xlat
loop
adc
popa
out
rorl
mov
mov
pop
das
pop
cwtl
lods
out
les
dec
xchg
les
mov
ret
shrb
push
mov
icebp
or
jnp
movsl
lret
or
in
ss
adc
clc
jo
fdivl
pushf
mov
mov
int3
pop
sbb
out
sbb
push
jge
push
inc
std
enter
add
add
cmpsb
or
ret
mov
dec
repnz
cmpsl
les
pop
mov
notb
pop
mov
adc
xchg
jo
xchg
lahf
sbbb
mov
in
jo
fistps
push
dec
stc
push
fisubl
xchg
popa
cmp
add
stos
pop
into
or
lea
sar
hlt
and
add
or
sub
push
aam
bound
mul
push
cmp
xor
jne
jecxz
insb
jl
iret
adc
insl
xchg
out
jo
out
jp
out
fstps
xchg
or
jbe
adc
sub
jo
imulb
into
mov
add
cmp
es
icebp
and
cmc
stc
cld
loope
xchg
cmc
add
std
in
leave
xor
pushf
pusha
or
sub
sti
icebp
xor
rcrl
scas
xorb
fnstcw
inc
loope
jp
leave
xchg
sub
out
pop
xor
dec
push
pop
mov
cmp
js
push
clc
sub
xchg
fidivrs
jno
dec
inc
jl
pushf
int3
xchg
jl
pop
mov
in
addl
push
insl
ljmp
jns
andb
icebp
fwait
ja
aad
sub
push
mov
xor
adc
out
imul
inc
out
call
rorl
je
jae
add
loop
test
mov
sbb
cmpsb
cmp
addl
pop
fistl
repz
push
inc
fldt
cmp
fisttps
vmwrite
sbb
push
rcll
sbb
std
pusha
cs
push
scas
fldcw
popa
addr16
std
call
scas
cmpsb
fnsave
or
out
in
mov
mov
xor
fcoms
add
jb
push
cmp
pop
dec
pop
inc
push
addb
fcoml
out
int
jecxz
lahf
inc
or
mov
jmp
or
or
imul
jns
std
inc
cld
mov
lods
fmul
lcall
xor
push
adc
sub
pushf
sahf
mov
lods
adc
imul
dec
sbb
adc
sbb
bswap
out
ss
test
sbb
outsb
jnp
xor
pusha
mov
pop
adc
std
xchg
mov
loope
fsubr
and
mov
mov
add
add
mov
loopne
jbe
insb
imul
jp
out
repnz
jmp
clc
xchg
xor
movsb
fdivrs
bound
xor
jns
pop
pop
cwtl
fdivrl
mov
inc
or
inc
leave
and
xor
movb
xorl
add
dec
mov
or
ss
push
add
add
adc
out
bound
outsl
ret
xchg
add
hlt
mov
movsb
data16
jnp
out
outsb
mov
or
add
mov
std
push
stos
scas
frstor
push
or
cmp
pop
movsb
and
mov
dec
shr
mov
int3
push
jb
pop
inc
sbb
adc
sub
pop
xor
dec
jo
push
jecxz
mov
sbb
sub
lcall
pop
dec
rclb
fimull
push
pop
xor
imul
cmc
or
fldenv
lcall
lods
xchg
clc
push
sbbl
sarb
out
pusha
sub
push
mov
push
mov
movsl
jl
inc
xadd
test
or
jne
addr16
pop
and
ja
lret
jg
sahf
pop
pop
jbe
movsl
push
dec
sub
jp
js,pn
push
loop
sbb
enter
loop
xchg
movsl
xor
mov
pushf
lahf
sbb
dec
sbb
movb
jae
mov
mov
loop
sarl
add
xlat
sbb
pop
rcrb
rorl
ret
shll
pop
test
and
stos
pop
sti
enter
push
dec
sbb
and
sbb
mov
pop
jno
inc
mov
repnz
mov
pusha
outsl
fsubs
cmp
pop
dec
adc
aas
and
cltd
pop
dec
or
push
xchg
inc
xorb
cwtl
shr
lods
pop
inc
adc
call
rorb
loopne
popa
loop
sub
dec
xchg
pop
cmp
xor
inc
loopne
pop
inc
mov
xchg
mov
shll
scas
xchg
aaa
fsts
cli
fadd
popf
adc
sub
xchg
lcall
mov
nop
jne
es
jecxz
push
stos
jbe
aam
and
cmpsl
pop
push
outsl
mull
sti
rorl
out
in
cmpsb
sbb
rcrl
pop
mov
gs
dec
pop
xor
adc
hlt
out
mov
mov
or
or
negl
orl
mov
or
lret
push
stos
mov
mov
jp
icebp
stc
stc
pop
arpl
test
insl
loopne
sahf
inc
je
lret
test
xchg
insl
jle
sahf
add
sub
mov
jge
inc
rorl
test
dec
adc
jmp
in
rorb
and
insb
or
outsl
jmp
inc
lea
xor
push
shr
pop
mov
cwtl
jmp
fcomps
adc
out
push
inc
pop
and
into
fnstsw
sbb
lea
push
mov
or
pop
jo
or
pop
jl
pop
mov
les
incb
test
fidivrl
push
jmp
sub
into
xlat
lret
inc
mov
pop
jae
push
or
ja
fstps
xchg
sti
mov
ljmp
push
aaa
sbb
mov
and
jo
adc
mov
mov
cmp
fstp
test
arpl
cmp
ret
outsb
leave
mov
cs
andb
adcl
mov
leave
icebp
jp
into
loopne
fstl
sbb
aam
addb
fldenv
push
mov
insb
out
sti
dec
fcomi
scas
jnp
cmpsb
pop
aam
rcrb
sti
jp
pop
ss
mov
mov
adc
adc
pusha
sbb
bound
icebp
or
outsl
and
jmp
jl
xor
bound
mov
test
scas
sub
xor
test
stos
cmp
imul
push
imul
add
scas
dec
mov
dec
stos
xor
loop
and
fmull
push
inc
cmp
cmp
pop
out
loopne
mov
pop
cs
ss
imul
cmp
inc
push
sub
sub
push
inc
push
mov
sbb
xor
jmp
das
inc
jo
movsl
sbb
daa
mov
iret
adc
jmp
ds
cs
xchg
jg
pop
enter
and
out
push
outsb
or
dec
iret
cli
xor
sbb
icebp
incb
or
xor
push
dec
icebp
cmp
jmp
inc
and
mov
pushf
dec
les
jo
dec
sub
pop
inc
cmp
or
imull
pop
dec
or
test
addb
enter
pop
int
add
inc
shll
mov
push
test
in
cmp
jnp
repz
out
insb
jg
mov
mov
or
xor
shr
inc
stos
push
iret
or
repz
in
jle
jl
and
adc
bound
mov
xchg
mov
dec
jns
push
ss
es
fs
jmp
repz
int
mov
dec
dec
jmp
sahf
push
jns
pusha
sub
ds
xor
xchg
push
insl
push
inc
ds
jne
jno
in
xchg
ret
jp
lods
sti
sbb
addr16
fs
jge
inc
mov
xor
pop
sub
sub
scas
xor
lock
xchg
loop
lea
clc
repz
orb
mov
lds
icebp
push
mov
dec
movsb
aad
in
shll
lds
arpl
movsb
iret
bound
sbb
rcrb
lret
fldl
mov
and
addl
pusha
xchg
loop
in
sbb
mov
les
test
std
xor
xor
loopne
cmp
pop
sbb
cld
xor
push
mov
hlt
jno
sahf
pop
mov
and
lcall
pop
dec
std
lds
xchg
adc
add
std
sbb
and
fldt
xor
popa
add
lock
in
dec
mul
jne
cmp
push
dec
pusha
cmpsl
sub
dec
sbb
mov
mov
xor
push
push
out
daa
add
shl
shr
jb
nop
xchg
fisubs
push
sbb
adc
ss
mov
sbb
mov
push
cmp
imul
cs
fistl
xchg
sbb
insb
or
data16
adc
pop
data16
imul
pop
movsl
rcrl
xchg
stos
xchg
shll
in
popa
xor
in
sub
ljmp
inc
sbb
pop
dec
addl
dec
mov
xchg
adcb
out
mov
pop
mov
cs
je
jp,pt
jl
adc
jb
fisttps
cmp
and
mull
js
mov
ficoms
mov
mov
test
pop
lahf
sub
test
mov
push
leave
jp
into
lret
adc
dec
out
mull
lret
xor
lock
test
mov
clc
push
pop
jbe
idivb
pop
outsl
mov
add
je
adc
sbb
mov
lods
jbe
sbbb
addr16
lock
mov
popa
or
outsl
inc
or
pop
iret
and
push
mov
jp
xchg
sbb
xor
mov
sarl
gs
scas
adc
mov
jnp
lods
push
movsb
outsb
popa
shl
and
les
dec
lahf
push
es
xor
movsl
sti
jp
call
cld
push
in
push
inc
cltd
leave
subl
nop
push
mov
dec
jb
call
aas
or
jle
mov
dec
test
cmpsl
mov
xchg
xchg
aad
jecxz
imul
xor
cmp
xchg
push
jns
mov
add
sahf
repz
add
inc
andb
xor
xchg
dec
mov
xor
pop
mov
push
cmp
inc
les
fidivrs
xor
insb
pop
add
and
sar
mov
fcomps
jmp
fstl
out
and
jno
pushf
sbbl
je
nop
imul
pop
jmp
pushf
pop
sub
dec
orb
lea
add
int3
mov
test
or
pop
sahf
ss
jbe
js
sbb
push
jo
hlt
sti
inc
imul
lahf
and
loop
adc
outsl
imulb
shrl
sbb
lcall
fmuls
nop
pop
pushf
js
xor
outsb
hlt
adc
inc
sbb
sahf
mov
dec
scas
mov
lock
dec
lods
cmc
sahf
inc
andnps
fldenv
dec
mov
push
jmp
das
gs
lods
cmpsb
sbb
addl
cmpsb
fcompl
data16
repz
shr
lahf
jecxz
ret
aaa
mov
cmpsb
fcompl
mov
mov
jecxz
sbb
jbe
fsqrt
or
mov
cmpsl
jp
cld
shll
and
and
push
and
das
dec
test
roll
cmpsb
mov
cmp
loop
jne
push
inc
xchg
or
lock
inc
mov
mov
fsubr
mov
sbb
mov
out
push
sbb
pop
push
rclb
aam
int
icebp
dec
stos
xlat
mov
mov
dec
dec
hlt
repz
enter
push
jno
stc
lea
lea
cs
aad
pop
cmp
fs
dec
or
pop
jb
inc
std
sbb
push
add
outsl
mov
cmp
lods
adc
ss
mov
pop
ficomps
cmp
outsl
std
sub
mov
push
cwtl
pop
mov
in
repz
sbb
fcoms
adc
adc
mov
leave
xor
fwait
dec
fildll
addb
xchg
pop
mov
add
sahf
mov
shrl
cmc
mov
int3
stos
call
sub
outsb
mov
arpl
into
jp
dec
jno
mov
pop
sbb
jmp
ss
repnz
xchg
inc
icebp
push
gs
jmp
dec
cwtl
xchg
mov
cli
pop
clc
dec
add
jae
and
jl
sub
dec
adc
lock
push
cwtl
mov
data16
adc
xchg
std
repz
out
jl
out
lret
in
lret
nop
xor
sbb
popf
sub
pop
add
or
je
push
and
fmuls
adc
sub
inc
cmpsb
ljmp
paddusw
loop
je
jecxz
inc
loop
outsl
cmc
xlat
pop
sub
ret
leave
adcb
cld
repnz
mov
aaa
cmp
cmp
lcall
and
inc
xor
xor
sti
movsl
and
adc
mov
loopne
rol
repnz
lcall
mov
in
xor
pop
xchg
jbe
sti
fbstp
fbld
inc
les
dec
xor
sbb
call
mov
xchg
addr16
rorl
stos
push
cmp
inc
and
popa
jns
push
inc
movsl
adc
xlat
mov
cmp
rorb
test
sbb
sub
inc
or
cmp
lods
push
add
jne
stos
jge
cmc
test
rcl
add
mov
jne
repz
bound
out
sbb
xlat
loope
ljmp
out
and
pop
inc
icebp
movsl
cltd
ja
pop
mov
lock
cmp
sahf
mov
hlt
dec
jp
cs
adc
cld
sbb
popf
aaa
andb
inc
sub
fs
dec
jo
sub
push
push
push
movsl
sbb
clc
ds
xor
std
mov
xchg
int3
out
or
ret
cmp
sbb
adc
ds
js
cmpsl
mov
outsb
pop
loope
lods
pusha
pop
rorl
mov
push
mov
dec
loopne
pop
pop
add
dec
and
sahf
adc
lret
frstor
mov
cmp
lahf
inc
iret
ds
pushf
adc
loope
mov
leave
pop
pop
inc
sbb
popf
neg
jge
mov
adc
bound
or
add
mov
imul
sub
fwait
lods
xor
lock
mov
jo
mov
shr
and
mov
test
push
fdivs
lods
cmp
ficomps
icebp
in
sarb
ja
push
test
xor
cmp
std
out
les
adc
vcvttpd2dqx
push
add
int3
dec
lahf
inc
cmp
cmp
cmp
mov
test
scas
je
inc
jge
dec
ljmp
aaa
push
pop
insl
adc
leave
imul
inc
loop
mov
xchg
xchg
call
jae
dec
call
sbb
and
sbb
sub
xchg
cmc
int3
test
cwtl
aad
and
jg
mov
test
inc
mov
jg
into
sub
shll
sbb
in
stc
xor
jg
mov
cmpsb
adc
xchg
mov
xchg
in
add
cmp
pop
lock
add
arpl
xlat
ret
iret
sub
xchg
adc
xchg
add
call
gs
xchg
cli
ret
lahf
cvttps2pi
shll
mov
dec
daa
inc
xchg
jno
jne
out
mov
int3
add
adc
insl
repz
inc
mov
xchg
inc
daa
dec
or
jmp
cmpb
sbb
into
jecxz
mov
jg
mov
jge
sub
jae
xlat
push
jle
fbld
cmp
jo
jecxz
push
js
ljmp
adc
pop
xor
mov
popa
stc
hlt
adc
pop
cwtl
icebp
lods
rol
je
add
xor
test
or
pop
fsts
mov
aad
insl
and
popa
loop
cmc
and
xchg
loopne
sub
xchg
sbb
shrb
push
ja
adc
inc
jmp
pop
pop
cmpsl
mov
adc
cltd
addb
xor
lods
mov
int
xchg
mov
call
add
stos
mov
call
test
dec
ret
jbe
pop
hlt
xchg
sub
les
xchg
popa
or
stos
test
push
cmp
or
fcompl
jae
test
xor
in
ds
sub
test
sarl
pop
push
lods
cmp
js
xchg
sarb
lea
jo
mov
dec
ja
cmp
and
mov
lea
repnz
fidivl
mov
in
cmp
ds
xlat
and
cwtl
imul
cmpsb
sbb
cmpsb
pop
xchg
mov
rorb
mov
push
pop
sub
cmpsl
test
stos
jno
lock
mov
arpl
mov
insb
ss
add
push
in
jle
push
pop
jecxz
int
jp
in
shll
xchg
jae
pop
mov
lods
test
ss
pop
ja
xchg
ljmp
insl
mov
mov
pop
test
lret
mov
int
dec
ljmp
mov
loopne
cmp
rcr
xchg
pop
or
cmp
adc
call
pop
std
stos
sub
lock
shrb
and
test
inc
les
scas
mov
lcall
hlt
dec
call
push
lret
mov
dec
imul
jae
nop
cmp
or
repz
call
push
mov
jecxz
lds
movsl
dec
mov
sbb
outsb
and
stos
xor
dec
cmp
mov
aad
mov
jb
shrl
push
cmpsl
xor
xor
push
mov
inc
repz
push
adc
push
movb
aad
arpl
gs
cmp
popf
pop
mov
enter
aas
cmp
adcb
stos
pop
imul
mov
lea
jb
adc
fnstenv
jmp
test
fsubrp
shl
jg
pop
push
aad
fwait
out
ret
call
fstps
push
into
push
aaa
arpl
adc
mov
pop
rorl
cmp
xor
es
pop
insb
mov
add
mov
or
pop
mov
pop
dec
dec
sub
divl
imul
and
or
sub
xor
mov
inc
rorb
test
add
gs
push
sbbb
jno
jecxz
dec
xor
sub
loop
in
aas
cmp
dec
xchg
pop
ljmp
sub
jae
cmp
loop
xor
inc
stos
xchg
sub
dec
dec
cmp
faddl
mov
pop
xlat
add
xchg
ljmp
test
ds
mov
test
jne
jbe
cmp
jp
push
mov
js
imul
inc
adc
lcall
test
mov
and
js
iret
mov
xchg
lea
jmp
mulb
sbb
lds
jno
orb
pop
out
push
or
sbb
lods
pop
inc
test
inc
jecxz
icebp
sub
pop
test
mov
sub
sbb
push
mov
cmp
sub
insl
scas
in
scas
mov
aas
xlat
sarb
jb
adc
inc
mov
mov
sub
loopne
xchg
add
rcr
jle
lock
test
aaa
jns
xchg
push
stc
xor
jae
push
push
mov
fisubrl
push
sub
and
jnp
sahf
add
or
or
inc
xor
xchg
xchg
aaa
fsubrs
dec
mov
fldenv
nop
add
xorl
insl
daa
jp
xchg
iret
add
je
std
sub
scas
daa
mov
in
add
ret
leave
push
inc
fs
addb
push
push
xchg
lcall
push
sbb
inc
cmpsb
sub
inc
jns
xor
pusha
sub
mov
shlb
notl
xchg
lock
push
sahf
mov
or
addb
pop
or
xchg
push
jp
inc
or
cs
mov
adc
cld
pop
mov
push
push
outsb
fwait
lods
jmp
lods
xchg
pop
inc
addb
out
outsb
and
dec
or
inc
inc
pusha
test
jmp
jp
or
jns
and
cwtl
stos
add
stos
ret
hlt
in
sub
pushf
sbb
push
data16
or
jl
popa
xor
cld
les
outsl
jle
mov
xor
pop
pop
andb
roll
inc
outsl
push
add
jp
xor
adc
fs
leave
rorl
popa
daa
xor
out
or
xchg
mov
jle
cmpsl
in
pushf
push
out
je
xor
pop
dec
cmp
push
in
or
xchg
nop
dec
les
enter
pop
inc
into
pushf
pop
pusha
pushl
xlat
adc
mov
fwait
int
ror
lods
mov
adc
or
mov
fisubrl
cmp
jno
lret
mov
mov
xor
pop
or
cmpsb
add
daa
push
jb
inc
push
lock
push
out
or
mov
or
mov
add
sbb
stos
inc
jae
jp
jg
mov
sbb
add
sbb
mov
lods
sbb
pop
xchg
mov
xchg
mov
je
inc
std
mov
out
stc
stos
stos
int
mov
rcrb
jle
mov
shrl
mov
push
call
jae
add
arpl
ret
and
cmp
mov
mov
test
cmp
sahf
sbb
mov
adc
adc
pop
push
push
insl
jne
popf
or
sub
or
mov
and
xchg
push
aaa
push
hlt
icebp
and
mov
les
xchg
pop
cwtd
fldenv
mov
dec
lcall
xchg
aam
push
sub
adc
and
lahf
ss
cmp
nop
fdivs
xchg
xchg
dec
addr16
mov
cmpb
hlt
fisubl
jae
jg
push
cmpsb
mov
enter
cmp
mov
adc
jae
add
cmp
fisubrs
add
sbb
dec
in
xchg
jae
es
and
jg
fcmovnbe
inc
sbb
ret
mov
mov
wbinvd
sar
cli
xor
dec
and
jne
ret
lds
fincstp
or
and
adc
test
xchg
leave
mov
jbe
or
push
cltd
dec
sti
incl
daa
pop
or
push
ja
test
lret
cs
in
push
adc
jp
sbb
mov
fadds
fs
mov
sub
sahf
clts
cmp
sbb
notl
xor
fs
push
jne
stc
xchg
dec
sub
lea
cmp
std
push
and
test
cmp
popf
daa
cmpsl
fisubrl
inc
mov
mov
or
lds
xor
mov
repz
sub
ja
loope
inc
scas
test
lock
dec
cmp
bound
add
push
cltd
pusha
test
jnp
lock
ds
mov
jo
std
int3
push
js
cmp
jae
enter
ja
xlat
jmp
js
test
jnp
stos
pop
aam
sti
cmp
sub
dec
cmpl
enter
popf
rcrl
std
lods
xchg
loopne
dec
pop
pop
fimull
ds
pop
xor
adc
lock
mov
rol
mov
mov
ja
outsb
test
mov
sub
sbb
pop
cmp
cld
mov
ja
mov
sahf
mov
repnz
insl
ja
dec
je
stc
enter
push
xchg
cmpsb
adc
xchg
sbb
std
mov
mov
repnz
sarb
push
mov
sbb
mov
push
ret
cmp
xchg
in
xchg
loope
fildl
mov
cs
xchg
push
push
loop
in
adc
scas
cmc
lods
hlt
add
mov
sbb
imul
insl
push
jnp
ljmp
in
push
in
pop
xor
inc
out
addr16
mov
shll
popa
jp
xchg
and
cmp
xlat
push
call
lahf
ret
mov
push
pop
inc
mov
not
xchg
jno
jne
xorl
enter
stc
cmp
xchg
cmp
xor
jns
xchg
fidivrs
jns
lds
leave
adc
and
sbbb
push
add
or
in
repnz
pop
push
dec
sti
jnp
sbb
arpl
lahf
lds
and
aaa
fcoms
mov
inc
scas
lds
and
jge
mov
inc
pusha
push
xchg
fucom
pop
loopne
repnz
out
test
sarb
xchg
mov
jle
xchg
ds
mov
xchg
in
or
cld
mov
push
xchg
adc
les
pop
sahf
ret
jmp
dec
stos
xlat
mov
aaa
jp
lcall
pop
lret
out
jle
pop
movsb
sub
xchg
mov
pop
mov
sbb
ret
pop
cmpsb
xchg
or
mov
daa
adc
outsb
mov
nop
sub
and
xor
daa
dec
sub
adc
push
int3
pop
call
jmp
and
jp
cmp
xchg
scas
and
mov
xor
adc
add
dec
add
mov
adc
stos
xor
mov
pop
mov
repz
lods
and
or
lods
inc
or
jmp
jmp
mov
enter
cmpb
dec
inc
jb
push
std
xor
jg
pop
xchg
pusha
filds
std
fwait
ljmp
cmpsb
shl
mov
and
mov
js
dec
mov
gs
push
dec
icebp
xchg
imull
js
subl
jmp
mov
inc
fstps
or
cmc
push
mov
pop
fisubrs
insl
sbb
es
mov
xor
add
push
bound
in
mov
mov
xchg
cmp
pop
ljmp
ss
enter
int
andb
mov
xor
mov
nop
stos
xchg
lods
sbb
fcmovne
jo
mov
or
mov
jne
stc
xchg
loopne
popl
cli
ljmp
mov
mov
sbb
into
or
cmpsb
dec
add
mov
pushf
rorb
mov
sub
xchg
add
fildll
ljmp
jle
pop
xchg
and
insb
pxor
mov
test
idivl
into
mov
dec
sbb
les
test
cwtl
data16
fcoml
mov
pop
out
dec
sub
sub
ficompl
mov
lahf
lock
sbb
lea
nop
and
and
sbb
jp
jo,pn
sub
test
shr
sar
mov
pop
push
jg
stc
es
ds
and
test
mov
fimull
sahf
push
jmp
in
daa
in
cmpsb
clc
adc
push
xor
inc
sbb
mov
ds
jle
nop
mov
pushf
pop
xlat
inc
test
push
shl
sbb
call
les
jle
or
pop
and
shll
fnsave
enter
or
pop
lock
xor
cmp
ficomps
pop
dec
xchg
popa
pop
lcall
push
js
fs
std
das
mov
sub
sahf
lods
arpl
cltd
out
pusha
and
rcll
and
fstl
push
sbb
jl
xlat
xchg
pop
inc
or
xchg
std
adc
push
jb
xor
sarl
push
leave
or
mov
sbb
xchg
jbe
cmc
mov
imulb
mov
mov
pop
imul
adc
xor
sbb
dec
in
lock
cltd
push
daa
xchg
add
jp
xchg
xor
pusha
sub
pop
and
xchg
ret
and
enter
fcmovnb
ljmp
or
or
pop
add
and
lret
sbb
inc
ljmp
es
rclb
inc
xchg
jnp
mov
nopl
fwait
sbb
push
sbb
push
scas
sub
inc
cmp
jne
sar
mov
stc
cmp
mov
sub
xor
adc
insl
dec
loope
xchg
clc
sub
jno
push
and
je
jae
mov
loope
icebp
lock
lock
mov
out
sub
xchg
imul
and
jnp
jecxz
mov
lahf
sbbl
jbe
repz
imul
or
out
cs
aaa
pop
dec
mov
jae
leave
cmp
scas
mov
mov
lcall
cmp
or
pop
iret
push
push
xor
mov
xlat
push
cs
adc
mov
aad
orl
ret
mov
push
xchg
jecxz
xor
iret
sbb
mov
jnp
cmpsb
inc
pop
lret
push
jge
pop
or
cmp
daa
jp
mov
and
clc
fidivrl
insl
sbb
popf
subb
outsl
mov
mov
fldenv
mov
mov
fildll
and
sub
add
add
mov
inc
ret
push
je
fsts
bound
or
mov
sti
sti
and
sbb
rclb
das
fstps
nop
sbb
popa
mov
addl
adc
jl
pop
push
add
xchg
pop
sbb
adcl
lods
push
sub
sub
imull
sbb
in
cmpsl
jno
jge
stos
popa
jge
add
or
jb
orb
dec
mov
mov
andl
xor
adc
cltd
scas
mov
add
mov
mov
push
fwait
cli
cmp
jp
jae
or
cmpsl
fstl
arpl
mov
mov
mov
xchg
into
movsl
mov
push
popf
nop
adc
push
xchg
lahf
jecxz
push
popa
int3
mov
dec
inc
ficompl
cltd
jae
dec
cwtl
cmp
out
mov
sbb
and
ret
adc
cmp
int3
insl
insl
push
fnstsw
in
pop
cmp
and
sub
pushf
int
stos
imul
enter
mov
jo
inc
sub
lcall
jge
lods
in
xor
xchg
insb
insl
mov
push
popa
push
cld
sbb
and
push
icebp
sbb
mov
stc
pop
fcoml
stos
sub
push
bound
imul
lock
in
inc
lret
cld
and
es
fistl
add
sahf
xchg
popf
xchg
cwtl
pushl
mov
jcxz
mov
xchg
adc
add
loop
mov
jne
xlat
mov
sub
sub
push
or
mov
xchg
loop
inc
mulb
sbb
stos
or
lahf
aas
or
sbb
mov
lds
or
out
je
jb
aam
sbb
popa
push
jmp
cmc
or
pop
push
mov
jmp
add
popf
movl
or
test
repnz
push
sub
and
mov
jne
sub
and
sub
fimull
adcb
enter
stc
and
mov
fldt
gs
mov
mov
out
out
pop
xorb
adc
aad
inc
sti
sbb
ret
xchg
int
lods
mov
and
stc
xchg
pop
in
sbb
pop
les
addb
mov
inc
repnz
loop
sbbl
loop
out
sbb
fildll
test
mov
dec
and
pop
or
repz
sbb
add
pop
xor
roll
jmp
dec
in
rcrb
scas
inc
adc
scas
pop
fdivr
clc
scas
sbb
push
arpl
iret
inc
and
fmuls
or
cli
leave
jbe
test
dec
js
ret
adc
jmp
add
and
add
sarl
shlb
xor
mov
sbb
mov
ja
jecxz
pop
dec
jne
addl
jl
mov
mov
cmp
aad
lea
cmpsl
push
cmpsl
clc
lahf
push
xchg
out
inc
add
cmp
inc
pop
out
jno
lock
inc
cmp
jle
push
daa
test
jp
ja
mov
pop
nop
lret
loope
ret
cmp
gs
iret
add
scas
add
add
das
outsb
lahf
ljmp
push
add
lret
movsl
inc
add
imul
pop
fmull
add
mov
rorb
fcomip
ret
and
and
out
cmp
es
movsb
pop
adc
or
je
mov
aad
ficoms
mov
dec
mov
adc
cmp
jle
leave
fwait
in
out
clc
mov
js
cmc
scas
addr16
rsqrtps
or
add
cmc
jmp
sub
cmp
out
and
push
dec
loopne
cmp
xchg
and
outsl
ret
mov
insb
sub
aas
lahf
add
sahf
mov
push
hlt
sub
pusha
push
or
movsl
imul
insl
push
sub
xchg
pop
sub
mov
test
dec
push
pop
pusha
xchg
xchg
or
flds
addb
xor
out
shrl
in
imul
addr16
adc
shrb
or
loope
mov
push
xchg
lret
fucompp
fsubs
push
jns
xchg
jne,pt
repz
insl
sbb
dec
insl
inc
xchg
push
mov
sbb
repz
pop
mov
fwait
inc
sbb
int
aaa
and
stos
jp
ret
sarb
xor
loopne
ss
cmp
movsl
and
mov
mov
jbe
inc
ja
aaa
push
scas
out
adc
push
dec
cmp
lret
test
cmp
jp
dec
adc
and
mov
repnz
stos
dec
push
jo
in
sub
stos
dec
in
pop
inc
sub
or
push
pop
inc
or
xlat
inc
and
hlt
leave
xor
mov
xchg
ret
fidivl
jle
movsl
out
cmc
lea
andb
xchg
mov
cmp
and
xchg
enter
scas
adc
int
push
xchg
fiaddl
das
xchg
sbbb
out
inc
xchg
movsl
nop
sub
rclb
hlt
sbb
push
lret
outsl
inc
stc
sbb
scas
inc
sbb
and
mov
and
jmp
popf
xchg
jl
out
or
test
je
dec
aaa
ret
mov
insl
mov
mov
push
and
sahf
mov
adc
sbb
cmc
inc
or
fbstp
adcl
aas
add
in
loopne
fstp
push
cmc
mov
mov
adc
xchg
add
popl
fnstenv
or
subl
mov
fidivs
and
pop
gs
dec
lret
adc
pop
xchg
aam
add
scas
xchg
lock
cmp
dec
dec
outsb
mov
nop
cli
popa
pop
dec
daa
jecxz,pn
adcl
or
adc
sti
daa
jae
rcl
dec
mov
ret
lahf
lock
aam
lret
arpl
pop
cld
cltd
dec
int3
lahf
fs
popa
push
cmpsb
push
bound
sub
imul
pusha
aaa
ljmp
pop
arpl
sbb
adc
pop
inc
aaa
inc
cltd
pop
iret
inc
and
sbb
jb
hlt
dec
mov
mov
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
add
sub
cltd
int
pop
repnz
call
int
cltd
jmp
mov
mov
jle
out
cmp
cmc
outsl
inc
out
in
mov
movb
xor
mov
add
push
test
cltd
mov
mov
jg
flds
mov
mov
pop
jle
adc
push
gs
out
fldl
adc
popf
add
test
adc
and
aaa
movsb
cli
push
jl
mov
ror
les
mov
fs
inc
sarl
cmpsl
std
xor
call
adc
jno
cld
loop
insb
lds
mov
icebp
arpl
fst
fists
ljmp
push
imul
xorb
push
out
cld
in
cmp
mov
outsl
cmovo
aaa
rcr
idivb
sub
test
test
addr16
mov
fstps
or
add
fs
andl
popf
adc
pop
es
popa
push
cli
sbb
dec
mov
repnz
popa
sti
jmp
fistps
push
mov
fcoms
add
mov
lock
mov
mov
repnz
push
xchg
and
xchg
shrl
aaa
inc
das
loope
int3
push
mov
lret
mov
popa
mov
xchg
inc
xchg
stc
test
sub
inc
addr16
hlt
and
sbb
xlat
jo
sahf
dec
test
fstpt
aam
cmp
inc
shr
mov
lret
fidivrl
mov
xor
push
fidivl
mov
push
insl
or
xchg
push
cmp
stos
out
lods
xchg
ds
and
mov
jae
or
cmp
and
jmp
xor
xchg
out
sub
fdiv
pop
adc
cltd
jnp
call
cltd
ljmp
adc
sub
insl
cli
push
or
cmp
mov
xor
inc
cld
ljmp
loop
orb
ja
jp
mov
rorb
xchg
mov
push
rclb
cmp
jp
decl
dec
inc
insb
cmp
xorl
lea
dec
mov
fidivs
cmp
jl
pusha
cmpsb
jns
push
dec
in
cmp
mov
sub
imul
inc
in
cmpsl
push
sti
call
cmp
clc
lods
hlt
mov
mov
adc
fdivs
mov
fadd
pop
das
ret
in
jb
mov
inc
jnp
dec
loopne
stos
aas
dec
sbb
popf
lahf
shll
xchg
stc
ret
add
add
lods
ret
sbb
mov
xor
insb
ret
sbb
lds
xchg
xor
mov
mov
add
pop
mov
push
push
imul
stc
xor
mov
jns
pop
sub
lock
fldcw
adc
shll
daa
in
xchg
dec
lock
bnd
lds
scas
push
.byte
inc
