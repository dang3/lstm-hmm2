add
loop
dec
sub
xchg
pop
or
mov
sahf
adc
in
ret
cmp
ljmp
or
movb
mov
jbe
and
loope
push
lods
push
mov
movsb
repnz
jp
mov
inc
leave
loopne
jg
push
adc
jl
lods
push
add
fnstcw
sahf
stos
popa
cmp
dec
imul
adc
inc
push
sbb
jg
pop
pop
jle
test
sbb
fs
stos
in
push
div
push
mov
fnstcw
and
inc
add
inc
jnp
call
dec
sub
je
lock
cmp
push
in
rcll
inc
or
mov
inc
jl
mov
push
mov
es
sub
ja
mov
dec
dec
mov
pop
stc
test
and
stos
push
ret
jg,pn
sahf
fdivr
pop
pop
cmc
inc
and
jo
arpl
jg
sub
out
cmp
call
lock
out
bound
ljmp
or
or
fisttps
movsl
rorl
pop
lods
inc
lahf
adc
ret
aad
popl
cmpsb
sbb
das
es
and
in
mov
std
cmp
cmp
add
imul
xchg
or
cmp
in
mov
outsb
push
sbb
shll
jno
das
jbe
repnz
scas
add
adc
aaa
ljmp
aaa
stos
scas
sbb
mov
lret
or
insl
jl
lods
mov
int
aas
iret
shll
mov
adc
jp
xchg
sbb
mov
or
popa
add
adc
mov
out
mov
aaa
jns
in
enter
jo
inc
adc
mov
push
mov
cltd
xchg
or
xchg
lret
adc
orl
jg
mov
rol
and
icebp
fdivrl
cmc
decl
push
enter
shll
test
pop
out
push
sub
fsubs
jl
popf
mov
xorb
stc
lea
in
mov
jo
xchg
test
xor
call
dec
rol
icebp
mov
mov
push
xor
cld
push
aas
lahf
adc
bound
fsubrl
stos
jmp
in
mov
push
movsb
mov
push
inc
fs
or
stos
divl
mov
mov
and
rcl
ljmp
shll
push
add
push
mov
inc
loopne
hlt
in
gs
mov
sbb
push
xchg
adc
cltd
cmpb
cmp
mov
fs
inc
iret
in
mov
adc
out
int3
sahf
jne
sub
xchg
out
mov
pop
cmp
mov
mov
mov
lock
sbb
adc
mov
mov
and
shrb
add
sbb
cmp
movsb
inc
xchg
fbstp
cmp
add
sbb
cmp
jno
out
pop
mov
or
fwait
jbe
mov
lds
sub
cmc
lock
cwtl
and
xchg
adc
and
insl
cli
mov
addr16
testb
sarb
nop
jge
out
add
mov
scas
sbb
push
xchg
aaa
es
lods
xor
cs
mov
arpl
fstpl
dec
loope
nop
int
jb
xchg
test
shr
adc
xor
push
mov
insb
mov
push
mov
jnp
xchg
and
test
mov
push
xor
mov
lods
mov
add
jge
pop
stos
mov
xlat
cmpsl
xchg
sarb
xchg
push
xchg
sub
jmp
jecxz
ds
xor
inc
xchg
pop
outsb
cmp
dec
loope
dec
shr
jl
jl
inc
jmp
jge
fldl
les
lods
lds
fnsave
aaa
movsl
sub
movsl
test
leave
xor
dec
lret
adc
cmpsb
cld
xlat
jp
rcll
mov
xchg
push
pop
pop
push
mov
shlb
xor
cmp
mov
jnp
shll
xor
out
jecxz
fdiv
xor
data16
dec
in
lods
jo
pop
pusha
pop
rcrb
pop
inc
enter
fdivl
push
jecxz
xor
lock
mov
lds
add
mov
mov
cmp
push
adc
pop
push
scas
sarl
test
inc
dec
cld
sti
xchg
cmp
mov
cs
decb
jmp
nop
mulb
ljmp
mov
push
ja
push
pusha
scas
push
or
shrb
mov
push
cmp
pop
sub
cmp
push
cld
cmp
jnp
xor
decb
jb
add
stos
pop
sbb
jno
into
mov
stos
cmp
jo
xor
rclb
sti
addr16
int3
mov
dec
add
push
push
adc
push
xor
mov
add
push
lock
inc
adc
mov
inc
mov
mov
add
inc
xchg
loopne
push
pushf
fldcw
pop
mov
add
mov
pushf
inc
in
sub
in
sub
inc
add
xchg
push
jp
or
fdivs
mov
xor
mov
and
cmpsb
xchg
and
jmp
xchg
or
or
mov
xchg
mov
pop
aam
cs
hlt
inc
mov
dec
dec
xor
xchg
cmp
ret
adc
lret
push
mov
lock
out
or
xor
scas
pop
stc
clc
call
out
mov
fidivrs
sbb
push
pop
pop
push
std
aas
sub
xchg
cld
adc
xchg
pop
or
push
in
add
sub
imul
inc
ljmp
xchg
outsl
hlt
in
and
mov
add
jl
cmc
sub
or
jno
add
sar
dec
mov
in
add
in
adc
lods
inc
xchg
mov
cmp
mov
push
cs
pop
lods
hlt
dec
hlt
imul
lods
nop
jne
movsl
sbb
or
test
shl
jle
jnp
sbb
stos
lcall
inc
in
push
out
rol
mov
pop
push
repz
jl
ret
cmp
bound
cld
daa
jp
pop
sahf
pop
push
cs
fistpl
pop
ficompl
aad
shl
mov
mov
xor
shrb
or
mov
add
xchg
cld
jl
adc
stos
and
jne
jle
into
cmpsb
mulb
cwtl
jecxz
out
shll
xor
push
test
push
out
lea
jp
nop
int3
jmp
push
pop
cmpsb
loopne
jo
mov
jo
ds
cli
sti
lahf
ja
mov
shll
inc
push
scas
lea
enter
pop
adc
pop
xchg
outsl
mov
ret
inc
jno
cmpsl
ret
mov
sbb
fmuls
int3
repnz
add
icebp
cmp
jns
fnstsw
lods
pop
aad
call
aam
shlb
out
cmpsb
repnz
ficoms
and
clc
jnp
jg
adc
clc
mov
xlat
leave
and
popf
mov
xchg
fld1
jl
in
inc
test
sbb
sub
out
shrl
pop
and
loop
jns
and
cmpsl
mov
sub
xchg
or
rcrb
cmpsb
and
jp
rol
pop
adc
stos
cmp
add
mov
adc
fs
xor
push
jns
jno
push
cltd
in
push
pop
nop
ret
mov
out
roll
jmp
push
not
nop
adc
mov
mov
insl
push
jmp
gs
popa
dec
mov
outsb
xchg
push
jmp
fnstsw
xlat
sbb
adc
jg
rclb
or
inc
lcall
xchg
mov
dec
arpl
pop
mov
xor
ljmp
shlb
aam
dec
mov
loop
adc
test
cli
fsubl
fimuls
cmp
pushl
lds
mov
cs
mov
gs
push
mov
xor
ja
jbe
dec
cmp
adc
jo
mov
jge
push
xchg
inc
sub
jb
cmp
decl
inc
xor
mov
lret
cmp
dec
pop
fisubrl
notb
mov
and
test
cmp
repz
lods
mov
inc
inc
dec
sub
mov
ret
cmp
mov
jb
push
and
cmp
lock
lahf
inc
push
imul
jg
and
inc
test
sub
lahf
stos
das
sti
jge
push
or
jl
cmp
sub
fst
and
fcom
cld
aad
iret
les
and
add
movsb
mov
lods
adc
out
les
int
data16
cli
pop
sbb
jae
push
adc
push
sub
int
jns
jb
jge
fs
fdivrl
outsl
cmc
adc
pop
dec
scas
and
jp
fldt
adc
sub
dec
outsl
fucomp
movsb
adc
loopne
adc
repnz
adc
mov
push
mov
fcomps
and
add
stos
push
mov
mov
pop
pusha
jle
das
ja
ljmp
je
sbb
cltd
imul
mov
xchg
rorl
outsb
mov
in
call
insl
mov
jg
xchg
mov
shlb
cmpb
mov
pushf
fucomp
cld
in
outsb
rclb
int
repnz
daa
pop
outsb
loop
cli
lods
loope
rorl
mov
jecxz
inc
mov
fwait
inc
jno
pop
in
or
jle
pop
stc
lea
stos
mov
bnd
xlat
rol
xchg
inc
cmpsl
jne
mov
jae
repz
xchg
xchg
cltd
ljmp
mov
pop
flds
notl
fidivl
inc
mov
mov
or
pushf
enter
mov
push
pushf
jl
es
or
das
js
inc
cmp
mov
std
lock
jmp
sub
jp
cwtl
decl
jge
lcall
rcl
not
mov
mov
not
push
jnp
fisttps
loop
push
out
pop
sub
sub
xchg
add
dec
dec
std
loop
mov
cmp
pop
mov
pop
mov
lods
out
movsl
fidivrs
lea
decb
fisttpll
pop
daa
iret
hlt
mov
jmp
pop
mov
nop
jmp
push
mov
fucom
in
xorb
jl
cmp
in
lahf
mov
fstl
lds
out
fadd
xor
fstpl
mov
sbb
mov
jle
decb
pop
xor
jo
ret
aam
outsl
adc
xchg
and
mov
inc
icebp
push
push
push
test
sub
ljmp
sub
mov
das
test
cld
xchg
xor
mov
mov
mov
jmp
jno
push
mov
xchg
pop
jle
decl
rcrb
data16
dec
lods
adc
xchg
clc
jb
in
fwait
pop
dec
rep
add
ss
dec
mov
mov
lret
aaa
pop
ja
jecxz
push
mov
sub
loope
jae
lret
push
cmp
push
lret
inc
lea
xchg
js
xor
sbb
add
or
adc
hlt
sbb
ret
les
push
adc
pop
adc
lcall
jbe
sub
cld
cwtl
mov
mov
lret
sub
or
fcom
xor
sbb
nop
xor
and
cmc
loope
pop
mov
push
sarl
jo
or
dec
pop
adc
lret
in
insl
jge
call
int
stos
adc
es
lock
movsb
sbb
fldpi
push
shl
aas
xor
insl
test
ret
and
push
xchg
js
ds
pop
in
frstor
add
das
dec
movsb
xchg
fisttps
xor
push
cs
adc
xchg
mov
icebp
pop
push
push
insb
xchg
in
cmp
xor
jmp
in
int3
xor
jmp
jo
jae
mov
adc
push
lret
or
jne
or
in
cmpsb
cmp
pop
sub
loope
lods
aad
out
bound
lahf
jg
mov
scas
pop
or
sahf
lcall
jmp
lcall
xlat
push
push
mov
fcomp
outsb
int3
pop
lods
testb
push
jo
cmp
sbb
cltd
mov
sar
jecxz
sbb
inc
jle
adc
mov
jne
pop
in
lock
test
cli
adc
test
pusha
ss
or
in
test
dec
cwtl
stos
pop
sti
push
scas
mov
shrl
inc
mov
mov
mov
in
outsl
inc
mov
jecxz
mov
jmp
pop
sbb
push
inc
movsl
sub
int3
push
pushf
out
mov
sbb
icebp
loop
dec
daa
adc
jl
push
fcoms
mov
mov
out
pop
mov
push
inc
stc
ds
fchs
pop
dec
pop
pop
xlat
mov
rcrl
mov
fisttps
mov
cmp
jl
mov
jnp
jle
dec
adc
sbb
inc
sub
xor
push
mov
xor
sub
mov
div
fidivs
mov
icebp
daa
test
or
or
sub
cmp
cmp
repnz
loopne,pn
insl
cmp
jo
inc
mov
sbb
add
sbb
push
in
pop
push
jl
jmp
orl
mov
mov
add
adc
aam
lahf
fimuls
adc
inc
fwait
add
fstps
out
or
inc
jl
fistpl
or
mov
shlb
ret
ds
stc
fcomp
out
fcoml
call
adc
sub
lcall
lret
sbb
out
xchg
cmp
jmp
xor
icebp
nop
mov
lret
loopne
mov
jle
ss
sbb
adc
lock
jp
xchg
lahf
cmp
push
or
out
jbe
add
in
cmp
jb
cmc
or
add
gs
lahf
pushw
xor
push
adc
stos
ss
lahf
pop
sub
mov
adc
out
mov
jo
ljmp
mov
fdivrs
imul
sbb
out
or
jnp
mov
sbbl
mov
cmpsl
lret
loope
lods
std
outsb
push
mov
jmp
sub
sub
dec
gs
shrb
jnp
pusha
mov
ret
add
fnstcw
ret
cmp
adc
aad
fs
lds
add
push
clc
jg
xacquire
loopne
sahf
sub
lcall
scas
jnp
shl
inc
jle
cmpsb
mov
push
in
filds
lods
mov
cmpsb
cmp
test
call
cmp
xor
cwtl
inc
stos
out
dec
xor
nop
ret
pop
inc
sarl
cmp
inc
and
shl
sarl
add
sbb
in
cmp
in
pop
xchg
inc
or
push
fdiv
negb
jge
jmp
cld
stos
out
sbb
or
sub
lret
ljmp
int
rclb
lock
rcl
mov
ret
add
ficoms
mov
push
pop
xor
movsb
push
inc
push
pop
xchg
jae
fisubrl
or
in
inc
in
xchg
insl
jmp
jmp
fsub
mov
loop
pop
xor
loop
inc
dec
cltd
fisttpl
dec
bound
test
inc
dec
lods
jbe
add
adc
inc
push
imul
mov
push
fldt
jbe
call
push
push
xor
outsb
jno
jo
enter
adc
test
mov
cmp
mov
xor
jae
andb
add
cmp
sbb
cmp
out
shl
cmc
fidivrs
fs
xor
push
pop
mov
mov
ja
int
sbb
inc
jns
lods
lcall
and
test
test
cld
pusha
jle
stos
push
inc
sbb
addr16
pop
hlt
inc
mov
or
test
arpl
je
movsb
cld
fdivrs
cli
cmp
dec
pop
adc
adc
hlt
jns
cmp
scas
repz
test
movsl
and
add
lock
xchg
mov
push
fstps
testl
mov
add
data16
pop
ljmp
pop
xor
mov
xor
push
xchg
out
loop
inc
sahf
fldcw
fprem1
ds
leave
sti
inc
or
or
add
mov
sub
mov
xchg
mov
movsb
call
cmp
mov
movsl
sti
les
test
cwtl
stos
loop
mov
cmp
nop
push
ret
inc
or
inc
adc
mov
js
ljmp
and
cmp
icebp
std
cmp
std
subl
inc
or
and
mov
adc
mov
xchg
cmpsb
dec
xchg
std
pop
dec
inc
dec
sbb
mov
jns
jmp
push
cmp
xor
aas
adc
or
mov
push
adc
xchg
lret
mov
sarb
lret
shll
xorb
cld
pusha
mov
les
call
mov
or
inc
and
shll
sub
lods
inc
sbb
push
arpl
ja
jnp
sbb
data16
mov
push
ret
scas
es
push
insl
mov
cmpsl
push
or
mov
inc
jne
rcrl
dec
leave
push
or
dec
and
add
or
adc
enter
xor
adc
mov
jns
and
out
sbb
lods
xchg
jbe
jge,pt
push
fbstp
sar
or
decb
and
push
mul
lods
inc
pop
cld
js
push
push
sarl
xchg
inc
cmp
imul
out
fstl
pop
test
in
aas
mov
loop
lods
leave
into
int3
cld
push
data16
xchg
cmp
in
adc
cmp
adc
imul
mov
sbb
jmp
out
jnp
in
dec
stos
call
cmp
jb
fs
loope,pt
jle
xchg
ljmp
inc
mov
sbb
data16
dec
enter
push
push
push
pop
cwtl
popf
mov
xchg
mov
jns
mov
jb
jle
in
push
in
loope
push
movsb
cmp
shr
jnp
pop
sbb
mov
lea
repz
mov
or
xorl
adc
lret
or
inc
cmp
aas
add
ror
sbb
dec
xor
xor
sbb
loopne
xchg
std
jl
loope
xchg
je
mov
mov
loope
xlat
adc
in
mov
shrl
dec
jle
inc
insl
fcoml
sahf
pop
mov
inc
and
push
fldenv
cmpsb
sbb
xor
clc
or
mull
hlt
add
iret
lds
pop
cmp
lea
and
jmp
insb
pusha
push
jp
xchg
stos
cwtl
dec
mov
dec
push
sbb
xchg
jle
mov
jno
dec
add
and
test
mov
jno
test
xchg
xchg
sbb
mov
mov
loop
cmp
cwtl
cld
xchg
adc
jnp
xor
or
lock
sbb
lahf
cs
les
rcrl
inc
xchg
es
mov
and
test
and
leave
fisttps
incb
sbb
add
lahf
movsb
xchg
fisubs
fldenv
sahf
lret
bsf
fisubrl
or
iret
jno
sarb
or
xchg
and
sbb
jnp
mov
jae
arpl
icebp
imul
subl
cmp
fnsave
xor
push
pop
repnz
pop
outsb
testb
jp
in
movsl
fcoml
cmp
mov
in
adc
push
mov
out
in
jbe
jbe
cld
fnstcw
loopne
dec
inc
cwtl
inc
inc
or
sub
sbb
add
in
inc
scas
aad
pop
movsb
mov
loope
jl
inc
pop
xchg
mov
inc
lea
push
push
outsb
movsl
mov
stos
lods
cmp
sub
inc
pusha
fcoms
cld
nop
pop
dec
xchg
test
xchg
jle
mov
mov
iret
push
ljmp
cmp
xor
jmp
pop
pop
fiadds
sbb
sbb
insb
ljmp
int3
data16
sub
pushf
mov
mov
aas
bound
test
adc
push
test
inc
bound
inc
or
hlt
loope
ljmp
cmp
mov
ret
adc
mov
mov
jp
fidivs
push
mov
pop
push
fwait
dec
mov
rol
lcall
jno
sub
push
icebp
or
jmp
icebp
add
mov
addr16
xor
idivl
nop
into
cmpsl
aam
lret
das
cmpsb
adc
mov
push
jnp
push
adc
orl
cmp
fldenv
mov
jecxz
fcoms
mov
fcoms
or
cs
pop
pop
mov
xchg
stos
mov
jne
push
or
xchg
sbb
les
test
push
xor
repnz
xchg
fwait
jne
std
pop
jne
push
ds
invd
and
test
mov
insb
xor
xor
ret
fcos
fs
call
add
dec
ret
xchg
mov
or
inc
ljmp
push
aas
cmp
rcr
mov
cmp
insl
loope
idiv
and
jnp
jmp
ret
fwait
pop
cmp
pop
pop
fdivrl
stos
imul
mov
sub
or
cmp
in
fdivrl
pop
push
push
out
repnz
mov
mov
call
xchg
imul
es
jg
mov
inc
call
bound
jb
daa
jmp
mov
sbb
mov
call
jle
repz
sarl
nop
cmc
push
fsts
js
jmp
rolb
in
nop
sub
cmp
scas
add
jecxz
jnp
imul
push
xor
inc
rcrl
mov
adc
daa
popl
aas
sbb
sbbl
icebp
fcoml
jl
fcmovu
and
test
adc
rorl
pop
dec
sbb
cmc
loop
nop
adc
insl
xchg
adc
mov
sbb
dec
or
movd
dec
cmp
ret
dec
lds
test
leave
sarl
in
popa
sti
add
out
mov
pop
and
imul
test
out
sub
mov
out
sarb
push
std
cld
insb
xor
or
jns
movsb
pop
imul
aas
dec
and
add
popf
mov
pop
jne
xchg
imul
rol
lods
call
jp
xchg
jge
xchg
jnp
out
push
sahf
pop
mov
ljmp
scas
aaa
mov
out
cld
mov
or
fnsave
in
or
das
and
scas
icebp
and
dec
ljmp
lea
fwait
cmp
jmp
xchg
cmpl
or
jmp
aas
icebp
xchg
out
jecxz
mov
nop
xchg
out
jge
repnz
lea
mov
add
sahf
and
ss
shlb
scas
aad
pop
adc
and
add
ficompl
je
add
scas
xchg
push
iret
fsubs
xor
aas
sub
pushf
test
bound
sub
in
out
inc
xchg
inc
xchg
rcrl
or
les
pop
mov
clc
mov
scas
rolb
insw
sbb
loope
mov
adc
rcrb
mov
mov
sbb
dec
pop
das
lock
xchg
inc
aaa
adc
sbb
out
mov
cmpsl
in
addr16
mov
daa
pop
in
in
mov
adc
imul
lods
jl
fcmovbe
in
out
insb
aaa
fisttpll
sub
popf
add
xchg
mov
aad
test
add
xchg
mov
ja
dec
test
sahf
inc
aas
add
int3
cli
aas
das
cwtl
lods
out
mov
roll
mov
xor
imul
cli
pusha
sub
sbb
push
nop
xchg
xchg
adc
ds
xchg
ficomps
sbb
pop
mov
mov
or
outsl
xchg
inc
bound
mov
repnz
pop
jne
fidivs
mov
add
or
mov
add
cmp
pop
mov
test
dec
or
jecxz
nop
push
xor
mov
dec
mov
movsl
sub
pop
out
jbe
jo
imul
xchg
jbe,pn
xor
cmc
aam
inc
fwait
addr16
loopne
and
inc
jno
fidivl
popf
mov
cmp
jo
sbb
xor
cmpl
and
and
xchg
xor
cmp
xchg
frstor
inc
ffree
or
imul
xchg
and
stos
cli
lahf
je
insl
repnz
push
mov
insb
dec
mov
cmp
push
gs
loope
out
cld
xchg
add
data16
in
mov
mov
aaa
sub
out
mov
outsb
xchg
stos
or
arpl
or
sub
aas
xor
outsb
pop
push
mov
fimull
movsl
ljmp
stc
insl
inc
xchg
pop
push
rcll
sbbb
dec
imul
mov
mov
cmp
xor
out
adc
lahf
or
cwtl
or
in
mov
cmp
sub
or
dec
adc
out
mov
adc
xor
sbb
mov
add
mov
jno
dec
insl
push
xor
inc
and
imul
add
cmc
or
aad
iret
sbb
cmp
dec
inc
sbb
cmpsl
aad
push
subb
cmc
dec
push
sbb
sub
xor
sub
mov
inc
and
comiss
aas
adc
loope
mov
mov
mov
mov
popa
fwait
lds
dec
mov
repnz
mov
shll
fisubrl
push
rcr
push
mov
and
xchg
sbb
mov
in
push
lds
movsb
mov
and
adc
and
in
cmp
ds
adc
sbb
sarb
mov
das
and
push
dec
js
pop
mov
cmp
leave
rol
dec
imul
sbb
fsubs
mov
push
aas
jns
xchg
sahf
inc
bound
mov
out
dec
dec
lds
fiadds
fldt
or
push
dec
js
jb
cmp
enter
pop
roll
mov
push
hlt
xor
ljmp
out
dec
add
cmc
mov
stos
xorl
pop
push
in
movsb
pop
xor
int
mov
jne
inc
jae
jmp
stc
pop
sbb
gs
push
in
std
pop
jns
data16
sbb
lret
cmp
pop
iret
outsl
sarl
xchg
pop
jg
int
aam
cmpl
test
lods
push
fsts
or
cmp
sub
in
insb
adc
cltd
mov
mov
scas
mov
xchg
dec
pop
stc
ja,pt
inc
pop
je
fisubrl
lock
aad
mov
ficoms
lret
mov
into
lret
mov
pushf
xchg
or
je
movsl
clc
cld
movsb
cmpb
rclb
fwait
nop
in
pop
adc
or
pushf
stos
dec
pusha
jns
sbb
lods
and
pop
es
cmp
xor
js
xchg
fnstenv
iret
jp
icebp
mov
fistpl
jge
addr16
pop
cltd
pop
adc
std
sbb
loopne
nop
jle
addb
das
inc
int
add
in
in
or
pushf
mov
out
cld
std
inc
pop
das
jl
push
lahf
int
cmpb
and
inc
js
iret
sahf
mov
stos
add
fnstsw
gs
testl
mov
xor
push
mov
xlat
dec
or
xchg
fildll
adc
add
scas
mov
sub
mov
inc
and
loopne
imul
loopne
pop
pop
lea
cwtl
in
scas
cltd
add
push
mov
cmp
pop
aad
inc
jmp
pusha
iret
loope
pusha
repz
pop
movsl
in
lret
cmp
lods
aad
flds
imul
sbb
xor
js
js
ja
gs
mov
fdivrl
dec
or
stos
outsb
adc
xchg
xchg
or
cmp
fisttpl
in
rol
jno
test
add
out
enter
ret
dec
sub
shrb
ds
add
filds
es
pop
ljmp
mov
mov
hlt
loop
xor
out
in
lea
out
cmp
sarl
jns
std
scas
dec
scas
push
dec
movsb
insb
andl
cli
pop
jle
out
pop
into
jb
push
pop
dec
cmp
loopne
xor
popf
add
xchg
push
mov
test
sbb
dec
and
fdivl
xchg
cld
or
adc
iret
push
cmc
stos
testl
loop
inc
jl
mov
dec
rorb
pop
loope
adc
mov
and
mov
jle
jge
inc
addr16
or
pop
loope
push
xor
sub
cmp
cmpsb
in
hlt
mov
xor
jne
cwtl
xchg
shlb
cmp
xor
hlt
add
repnz
jb
jo
inc
movsb
mov
mov
mov
gs
push
fdiv
idivb
xor
aad
mov
clc
pop
pusha
pop
or
cmp
insl
dec
xlat
aaa
call
pop
call
cmc
or
pop
test
add
mov
pop
jne
nop
test
int
push
pop
lcall
sub
pushf
and
sbb
and
loop
ljmp
mov
push
fisubs
inc
enter
push
mov
jl
inc
repz
mov
mull
jo
addr16
mov
out
adc
fnstsw
or
push
sub
jne
pop
mov
cmpsb
add
sti
fdivs
inc
js
xor
adc
pop
push
pop
jl
xor
jns
inc
inc
cld
jne
ja
pop
adc
lret
cli
mov
push
pop
rorb
sub
shrl
xlat
jo
sysret
jnp
xchg
aaa
ror
push
inc
fwait
shlb
jmp
cmp
push
xchg
push
and
jno
rol
jle
mov
pop
mov
adc
cwtl
bound
int3
dec
aam
das
shlb
jae
insl
lock
outsb
ret
xchg
pusha
or
cmc
insl
inc
xchg
sbb
cltd
sub
arpl
inc
enter
es
cmpsl
scas
pop
push
ljmp
lret
xchg
out
cmp
mov
dec
cmp
insl
sub
fistps
loope
inc
push
push
sbb
into
jbe
sti
adc
ss
mov
push
dec
outsb
insl
nop
and
jae
or
xor
mov
shl
repnz
sbb
push
adc
mov
push
adc
leave
repnz
stos
arpl
adc
fwait
dec
mov
scas
add
lods
xchg
push
aam
adc
or
dec
and
mov
or
mov
ja
cltd
mov
int3
imull
outsl
sahf
cli
mov
inc
lret
pusha
mov
cld
jnp
jmp
jle
insb
fstp
gs
pusha
out
xchg
mov
mov
stc
imull
mov
movups
sub
in
shlb
mov
add
adc
or
movsb
in
jbe
fnsave
insb
xchg
sbb
repz
aam
out
jnp
les
cli
mov
lods
dec
in
xchg
into
pop
jae
in
lret
dec
lock
loop
decb
pop
mov
mov
inc
scas
pop
or
xchg
scas
outsl
fs
jbe
ror
jg
jno
lea
xchg
sbb
mov
test
out
lock
lea
gs
jg
arpl
sahf
mov
inc
cmp
sbb
xchg
lret
cli
adc
or
push
test
sbb
insl
aam
int3
movsb
mov
add
jbe
push
test
and
repz
imul
push
mov
ret
in
pop
mov
mov
stos
jno
shlb
add
outsl
insl
popf
pusha
ja
cmpb
mov
shr
mov
rcl
xor
pop
js
push
lods
aas
sub
mov
out
mov
pop
stos
inc
push
mov
adc
das
mov
xorb
movsl
xchg
fadds
aaa
rcr
scas
lret
insl
mov
or
shlb
outsb
arpl
mov
pop
add
dec
cmpsb
aam
cltd
nop
mov
in
in
mov
inc
sbb
mov
sub
add
enter
fadds
loope
loop
cmp
fsubrs
mov
jmp
mov
in
dec
ds
xchg
popa
lods
pop
cltd
sahf
inc
xchg
in
roll
mov
mov
adc
mov
or
xor
jb
dec
test
adc
mov
sbb
in
jge
cwtl
leave
jl
out
add
xor
inc
lcall
adc
aas
jle
adc
and
cltd
rorl
imul
mov
outsl
das
mov
cmp
mov
mov
out
int
add
shlb
xchg
fsubrl
out
insb
lock
jle
stc
dec
dec
inc
dec
jne
outsl
cmpsl
add
inc
out
ja
adc
xor
gs
dec
and
icebp
cltd
mov
shll
loopne
insb
mov
daa
jnp
dec
mov
mov
and
push
data16
rcrl
movb
dec
enter
ret
je
mov
jle
and
movsl
inc
int3
jb
lods
pop
mov
jl
dec
jge
ret
rcrb
sbb
loopne
push
ret
sub
cmp
in
aas
mov
dec
ret
pop
outsl
sahf
inc
sbb
or
movsb
mov
jns
adc
push
mov
imul
repz
call
fsubrp
xchg
js
es
repnz
mov
and
inc
sbb
and
jmp
and
cwtl
pop
jno
mov
jecxz
das
hlt
mov
stc
inc
loope
test
inc
aad
lods
cmp
push
mov
mov
ret
shl
imul
fiadds
ret
mov
fstps
push
fnstsw
std
mov
mov
loopne
fidivl
pop
push
ja
sbb
dec
pop
xchg
mov
cmpsb
push
jno
add
add
lods
adc
js
xor
xor
cmpl
hlt
aas
mov
pop
fwait
jge
mov
dec
and
aad
sub
adc
dec
dec
adc
ret
nop
xor
push
xchg
rcrb
es
lock
loop
loope
aas
mul
and
pop
mov
cmpsl
xor
mov
add
sub
inc
xchg
inc
xchg
leave
xchg
mov
sbb
adc
or
adc
aad
adc
mov
push
cmc
and
and
imul
in
arpl
nop
mov
dec
pusha
mov
and
jo
jp
fisubrl
sub
mov
ljmp
jne
jae
loopne
nop
xor
or
mov
inc
mulb
or
fistpll
lea
fucom
in
fsubrs
pop
adcl
add
fwait
mov
xor
fwait
cmpsl
xor
cmc
cwtl
jecxz
sahf
push
sbb
or
sub
lods
popf
sub
idivb
dec
fildl
ljmp
inc
pop
fbld
cwtl
xchg
out
add
or
fsubrp
jp
xor
cmp
popa
xchg
jle
push
cmp
xor
scas
xor
idivb
push
cmp
sarl
pop
popf
or
out
fstpl
inc
rcrl
dec
pop
cmp
out
jae
sahf
loop
mov
xchg
adc
out
pop
mov
inc
inc
das
mov
pushf
movsl
fs
out
push
sbb
lcall
pop
popf
pop
ret
nop
pop
movsl
mov
adc
and
xchg
popa
mov
pusha
fistpll
es
or
out
icebp
repnz
lret
leave
cmp
sbb
call
jle
or
fwait
mov
clc
mov
sub
or
into
mov
inc
fadd
add
data16
pop
out
inc
icebp
stos
loope
pop
cli
mov
rclb
stc
pop
add
or
iret
lret
jne
in
pop
push
movsl
push
xorb
add
mov
or
lods
or
xchg
movsl
lock
nopl
sti
cmp
call
adc
test
jb
push
test
dec
cmp
push
mov
jmp
daa
dec
jge
jge
es
test
inc
roll
push
lods
and
in
push
or
nop
arpl
lea
lahf
pusha
xchg
cmp
add
outsl
stos
mov
jnp
sbb
es
jmp
jge
ret
scas
std
mov
mov
jnp
mov
bound
loope
imul
fldcw
cwtl
push
add
xchg
test
pop
in
cmp
jge
loop
outsb
mov
sub
or
jle
int
daa
cmpsl
add
mov
test
mov
inc
inc
sub
stos
inc
or
mov
sbb
push
add
xchg
das
or
in
test
popa
fnsave
test
lret
jg
data16
nop
sbb
pop
dec
test
and
sbbb
ret
dec
add
inc
pop
stos
jnp
inc
add
xchg
cltd
test
xor
xor
add
out
pop
stos
cmpsl
je
ficomps
inc
mov
mov
ret
stos
sub
mov
int
pop
cs
lods
push
sub
lea
call
push
sti
jmp
jne
jbe
dec
movsb
jg
hlt
test
mov
lock
jnp
cli
fsubl
and
pop
jne
ret
jns
inc
idivb
dec
xor
rcl
cmc
cmp
and
and
in
push
cmpsb
test
or
push
fldcw
sbb
mov
xchg
lods
pop
pushf
inc
inc
jecxz
push
mov
aaa
cmc
xlat
mov
mov
xor
ss
mov
mov
bound
cli
jge
popa
ret
jl
mov
ret
push
fistpl
in
sahf
lret
je
rcrl
fisttpll
xchg
and
pop
mov
push
cmpl
fdivp
jp
ret
dec
pushf
inc
dec
xchg
inc
lods
mov
adc
mov
adc
mov
addr16
ret
cmpb
jle
fucomp
push
std
inc
pop
xor
push
fnstsw
push
lcall
lea
inc
push
not
xchg
mov
push
jne
loop
and
lods
pop
and
leave
sbb
in
add
sbb
cld
mov
dec
fldcw
fstpt
mov
ret
or
pop
cld
pop
push
inc
pop
insl
mov
push
jle
cli
lock
xchg
pop
cld
mov
fldcw
fstpt
cmp
xor
ljmp
scas
and
push
adc
mov
int
cmp
stc
rcrb
mov
lea
jecxz
pop
inc
es
xchg
and
sub
fwait
inc
cmp
mov
ret
or
mov
dec
fldl2t
xchg
pushfw
push
pop
mov
pop
cmpsb
aam
ss
jmp
mov
rorl
ss
lds
in
aas
out
and
mov
jge
or
fwait
cs
icebp
jp
test
je
inc
inc
and
lret
in
xor
rcrb
add
ret
loop
mov
sbb
lret
out
out
addl
mov
js
dec
xchg
sbb
cli
mov
dec
das
aas
adc
xchg
inc
sub
aad
lcall
imul
cmp
pop
cmpsl
or
mov
jbe
roll
popa
dec
jp
xchg
movsb
hlt
lock
bound
mov
xchg
xchg
int
pusha
loopne
inc
out
pop
in
jo
push
jl
movsb
aaa
test
sbb
or
add
mov
rcll
push
ljmp
sbb
push
jle
int3
dec
mov
imul
xor
jmp
jo
sub
jbe
fists
mov
movsb
inc
mov
sbb
push
imul
sahf
mov
xchg
jg
aas
adc
or
jp
rclb
jne
imul
jno
nop
and
leave
test
xor
xchg
cmp
cli
mov
add
pop
inc
push
cld
dec
add
mov
push
out
add
mov
cli
aas
ja
inc
insb
imul
out
jl
cmc
rorb
cltd
adc
add
push
repz
pop
adc
sbb
in
push
pop
inc
movsb
loope
jle
xchg
mov
xchg
std
pop
xchg
pop
scas
sbb
xlat
andl
pop
and
fs
xlat
inc
xor
push
jb
jl
dec
push
pop
into
lods
in
or
mov
daa
push
push
and
sbb
ljmp
xor
dec
inc
push
mov
in
add
lods
cmp
and
psubusw
sub
mov
xadd
pop
outsl
mov
scas
jl
inc
push
jp
mov
fsubrs
push
loope
or
mov
or
loope
leave
adc
cmpsb
lret
push
xor
hlt
inc
jmp
add
pop
mov
pop
insl
mov
xchg
popa
popf
push
pop
rclb
add
insl
add
sbb
nop
mov
in
lds
cltd
mov
push
push
fdiv
adc
dec
mov
into
adc
sbb
repnz
fdivs
popf
push
shlb
loopne
outsl
inc
add
popa
or
popf
je
push
mov
insb
das
mov
inc
cld
loope
jnp
sar
pop
aad
lcall
lds
cwtl
jp,pt
or
jp
outsb
sbb
mov
jmp
push
pop
inc
fdivrs
push
adc
rorb
mov
movsl
insl
ds
sbb
mov
sbb
addr16
push
inc
jmp
not
pop
fcoms
cmc
fwait
xchg
testb
adc
and
icebp
mov
shll
cmp
popa
xor
fstpt
xor
mov
sarl
mov
mov
lods
pop
hlt
fbld
ret
bound
shlb
jne
push
or
shll
xchg
subb
movsl
lods
das
repz
mov
mov
fisubl
pop
jp
sbb
mov
fdiv
fbld
hlt
sub
sahf
subb
jbe
sbb
xor
call
int3
aaa
xchg
shrd
add
and
loope
ret
pop
or
arpl
mov
xorl
test
and
sahf
mov
daa
test
cltd
loop
fcmove
pop
xlat
cltd
loopne
jbe
dec
sub
or
enter
int3
cmpsl
repnz
nop
bts
mov
fisubrl
mov
imul
sub
mov
in
jecxz
inc
mov
mov
pop
push
dec
out
movsb
lret
add
icebp
xchg
cmpl
in
mov
xor
es
push
jle
jle
add
leave
mov
cmc
loope
adc
and
xor
pushf
out
dec
sub
js
rol
push
xchg
and
lea
ljmp
and
cmc
shr
movsl
pop
mov
adc
lret
xlat
outsb
sub
jne
and
mov
xor
repz
mov
mov
outsb
stc
mov
dec
mov
std
or
popf
aad
inc
push
add
or
dec
xor
mov
nop
icebp
je
mov
fcompp
mov
push
mov
int3
sub
stos
faddl
lock
nop
dec
sub
js
sbb
scas
fdivl
popf
int
scas
mov
mov
dec
ficoms
ds
and
int
push
shl
out
mov
out
movsl
stos
cmovge
xor
fldl
jp
loopne
ret
and
add
push
in
cwtl
xchg
inc
cmp
xor
repnz
fimull
jno
xor
pop
fldenv
pop
inc
es
lock
jne
inc
push
xchg
adc
in
outsl
mov
sbb
aaa
std
pop
cmp
pop
xor
movsl
int
add
adc
jg
jo
bound
fildll
popf
fsubrl
aad
jge
and
out
pop
loop
movsl
push
sti
fcoms
out
pop
sub
rcrb
add
scas
add
jge
mov
fsubrs
sub
in
inc
sub
push
push
sbb
push
mov
push
inc
dec
es
xor
jge
cmp
icebp
xchg
cmpsb
dec
inc
jecxz
stos
xchg
push
call
test
and
sbb
lods
in
adc
mov
add
call
loope
mov
pop
loope
cmpsl
and
jo
in
sti
sti
call
inc
dec
jnp
das
ja
push
mov
fs
dec
xchg
gs
inc
xchg
push
and
mov
inc
jo
call
or
out
pop
sbb
ret
sti
jae
cmpsb
in
jle
cwtl
sahf
xlat
pop
mov
lock
cmpsb
hlt
out
cmp
ss
cli
or
lds
inc
outsb
shlb
or
cmp
and
xchg
xor
push
add
sub
lods
push
lcall
rcll
rep
lcall
cmp
and
and
in
or
push
lods
cmp
cs
insl
mov
dec
xor
or
ret
or
inc
adc
jle
enter
mov
test
loope
repz
orb
stos
push
xchg
dec
push
adc
loope
jl
ret
xchg
daa
cld
pop
test
aam
push
mov
dec
out
mov
dec
pop
aam
scas
cmpsb
aad
xor
cmp
pop
sahf
enter
push
adc
or
fs
outsl
iret
inc
mov
lock
jmp
enter
jns
lods
cmpsb
mov
sbb
pop
xor
out
mov
lahf
push
inc
pop
and
rolb
xchg
jl
movsl
jae
jbe
mov
insl
addl
insb
cmc
out
popa
js
out
dec
mov
add
cmpsb
pusha
outsl
pop
mov
in
cmpsl
push
out
xchg
pop
inc
adc
dec
mov
push
hlt
pusha
xor
fldenv
mov
xchg
pushf
pop
cmp
movsl
cmp
jb
scas
dec
sbb
ljmp
push
test
lock
dec
push
pop
out
dec
test
lret
jno
cmp
ljmp
and
pushf
xchg
sahf
ret
lret
jge
xchg
mov
out
frstor
dec
xor
and
cwtl
imulb
sahf
cmpb
repz
push
add
icebp
adc
dec
aad
int3
xchg
mov
cld
mov
neg
icebp
movsb
jno
cmpb
cmc
cmp
mov
add
and
dec
mov
test
scas
sbbb
sub
in
dec
jo
ss
js
adc
dec
adc
inc
mov
jg
jg
push
cmp
flds
xchg
inc
fs
fmulp
add
inc
in
mov
jg
test
dec
dec
pop
xor
xor
mov
push
mov
jno
cmpsl
loope
dec
mov
lret
sbbb
filds
add
adc
bound
fst
rclb
or
push
pop
dec
xchg
push
out
adc
out
xchg
push
jl
aad
jge
movsl
jle
dec
push
mov
adc
std
xchg
sbb
lock
jae
dec
fisubrs
mov
nop
ljmp
int3
mov
lcall
cmp
ret
jno
push
sbb
out
filds
or
ret
jmp
jmp
andl
adc
loope
es
push
addr16
popa
outsb
leave
shll
sub
pop
jo
aaa
inc
in
inc
dec
sub
test
fsts
mov
clc
or
stos
sbb
stos
xchg
lds
scas
and
sarl
push
mov
sbb
inc
xorb
dec
cltd
outsl
inc
dec
inc
jl
fidivs
inc
scas
rclb
pop
dec
pop
nop
scas
stc
push
mov
mov
push
cmpsl
sti
ds
inc
clc
stos
jbe
dec
je
dec
inc
repnz
mov
frstor
adc
xor
js
sub
andb
in
cmp
scas
sarl
cmp
push
xor
inc
jle
repz
sbb
mov
jg
fsubl
xor
stos
sub
fwait
imul
cmpsb
jne
push
cmpsl
int
popf
lret
sub
jno
mov
xchg
jno
movsb
push
mov
or
test
int3
shl
fildl
int
shll
nop
push
outsb
fs
or
pushf
lods
stos
fidivs
mov
ljmp
jl
subb
shll
inc
out
mov
xchg
xor
push
dec
aam
fstpl
lcall
xlat
inc
push
mov
adc
leave
shrb
das
outsb
jmp
push
pop
pop
divb
mov
mov
cmpsl
div
push
jge
add
sti
xor
jnp
movsb
out
push
cwtl
enter
push
shll
mov
dec
test
mov
jnp
sbb
sbb
mov
addr16
pop
push
inc
inc
imul
lods
lods
leave
daa
mov
xorb
insl
mov
mov
cmp
int3
fadd
out
ret
fcomps
out
mov
push
jo
mov
pop
and
sub
ret
scas
and
fists
push
xor
cli
sub
cmp
and
mov
lods
divl
mov
lret
not
and
outsl
mov
push
xchg
mov
fdivl
or
sub
jb
jb
push
sub
sub
ffree
enter
and
test
aas
fcomp
push
insl
out
lods
aaa
dec
pop
sti
loope
repz
filds
mov
adc
and
arpl
insb
mov
out
scas
push
push
add
fmuls
xor
retw
std
pusha
add
imul
jo
dec
lods
dec
adc
add
cmp
adc
mov
push
sub
daa
in
jg
repnz
loopne
add
sbb
inc
or
cmp
mov
stos
sub
add
lock
aad
jg
cmpsl
push
roll
addr16
xor
mov
push
pusha
push
inc
adc
mov
pop
mov
sbb
pop
inc
mov
jmp
out
ds
bswap
pcmpgtb
scas
scas
mov
cmpsl
sbb
sbb
das
repnz
aaa
cmp
add
sbb
mov
cmpsl
add
fmull
add
in
mov
cmp
jo
adcb
cmp
push
out
fsubrs
sbb
orl
inc
and
lea
push
mov
stos
add
xchg
pop
dec
push
xchg
mov
inc
loopne
and
mov
jge
in
mov
test
imul
movsb
popa
in
les
or
out
in
xor
mov
xchg
stos
adc
or
jns
sub
dec
mov
cmp
stc
lret
pop
sub
pusha
dec
bound
aas
shlw
push
mov
mov
inc
inc
inc
adc
inc
adc
dec
inc
cmp
sub
sub
in
sub
cld
stos
loope
fnstsw
in
add
and
inc
xchg
outsl
sub
jns
or
ret
push
aas
rclb
jo
hlt
flds
imul
andl
pop
pop
add
mov
pop
jno
pop
pop
ljmp
aas
pop
add
adc
enter
mov
stos
mov
inc
mov
mov
cmp
popa
imul
rcll
mull
mov
movsb
daa
add
insb
dec
fmull
inc
in
mov
mov
mov
pop
out
ja
dec
and
push
push
push
pop
jae
std
mov
xor
out
cmp
jle
enter
leave
out
pop
push
and
in
imul
xor
jne
jmp
push
mov
or
outsb
imul
jno
add
mov
inc
dec
lea
inc
outsb
inc
clc
rcrl
outsb
dec
cmpsl
xchg
das
lahf
std
pop
jge
std
loope
ret
add
jbe
movsb
mov
dec
fimuls
cmp
dec
inc
add
add
jnp
pop
or
sub
mov
ljmp
push
mov
jmp
fsubl
sub
adc
add
push
xchg
dec
pop
sbb
pop
sbb
sub
sbb
in
mov
lods
loopne
rclb
jge
scas
sub
mov
lcall
sarb
xchg
pop
imul
add
add
mov
sbb
popf
inc
jae
push
iret
mov
dec
arpl
cwtl
jl,pt
iret
adc
or
and
shll
xor
mov
pop
add
xor
add
add
add
add
jns
cmpsb
cwtl
hlt
pop
adc
nop
jp
pop
shll
repnz
jg
adc
inc
inc
leave
cmp
je
cmp
inc
jmp
dec
sub
mov
jo
pusha
fisubrl
inc
inc
insb
jle
adc
in
jl
cmp
xor
mov
dec
push
addr16
std
and
xchg
addr16
rcrl
es
sub
adc
jae
jmp
dec
sub
mov
and
stos
add
int
out
popa
xchg
in
fs
ficompl
popf
push
lret
jno
call
xlat
add
fiaddl
or
jmp
lahf
cwtl
and
pop
mov
ret
gs
into
cmp
rorl
stos
inc
or
sbb
pandn
repnz
mov
test
cmp
call
mov
mov
insb
push
in
lods
lea
sti
mov
fcoms
inc
push
xchg
cmp
xor
clc
inc
push
dec
xchg
and
pop
xchg
fnstsw
repz
inc
cmp
dec
loop
pop
xchg
and
out
cmc
xchg
ret
cmp
inc
call
fdivrs
out
movsl
jae
arpl
mov
loopne
repnz
and
out
add
fiaddl
sub
loopne
pop
aam
and
les
inc
cmpsb
and
jb
jno
mov
andl
inc
insb
cmp
ljmp
dec
mov
dec
mov
jns
out
hlt
lret
mov
shl
daa
push
or
add
sub
sahf
test
call
out
ja
stos
test
inc
xorb
inc
cmp
jge
cmp
pop
xor
shlb
pop
cmp
movsl
mov
pop
add
aam
cmp
repz
jo
sbb
mov
fcmovu
pop
cmp
sbb
shll
pop
jae
mov
ss
dec
lea
test
push
adc
jne
adc
push
rcll
mov
adc
push
out
jo
or
pop
pop
cmp
les
mov
dec
nop
cmp
xchg
decl
cmp
inc
adc
mov
sub
cmp
cmp
xchg
sub
in
mov
jg
mov
dec
mov
test
push
push
mov
adc
pop
push
jmp
enter
mov
push
cli
mov
inc
cwtl
lock
outsb
cs
test
in
js
pop
icebp
xchg
pop
mov
sti
lret
push
inc
nop
rolb
add
dec
cld
push
lods
or
clc
scas
imul
addl
mov
mov
and
fdivs
mov
add
lods
mov
push
dec
sahf
add
jecxz
inc
inc
push
push
or
push
xchg
lock
rorb
and
pop
sbb
xor
cmpsl
add
sbb
subl
jle
jnp
in
jb
cwtl
xor
or
fs
in
xor
jnp
jb
sarb
mov
loopne
stos
daa
push
adc
out
dec
mov
push
dec
xor
out
idivl
jae
fdivs
cs
jae
mov
daa
jle
inc
pop
pushf
or
cwtl
inc
out
rcll
mov
xchg
insb
inc
mov
cld
adc
mov
cmp
sub
lret
stos
adc
fdivs
xchg
leave
fwait
xor
and
movzwl
fidivl
cmp
dec
or
push
xlat
aas
int
sbb
mov
data16
xor
sub
lods
mov
add
incl
lds
fiaddl
push
xlat
jne
rcl
sahf
gs
aaa
in
add
and
cmp
push
push
mov
and
inc
jne
fcmovb
sti
sbb
adc
xorb
loopne
scas
rorl
ds
js
or
dec
mov
cwtl
push
aas
imul
inc
dec
add
sbb
or
fstpl
cmp
movl
pop
mov
addb
cmp
dec
loop
test
into
push
imul
ja
lock
sbb
mov
icebp
dec
xchg
mov
enter
mov
dec
outsl
test
pop
sub
fcom
sbb
add
ret
pop
cmp
cmpsl
mov
rdpmc
sahf
and
pop
test
jg
dec
enter
cwtl
or
push
and
inc
adc
adc
jl
in
imulb
scas
jo
or
out
and
out
jnp
inc
sbb
aaa
sub
or
jg
popf
ret
call
insb
cmc
push
mov
xor
imul
mov
pop
imull
push
inc
jle
dec
repz
ljmp
or
inc
js
ds
cmpsl
jb
and
jle
lret
cli
adc
mov
sub
repnz
push
imul
dec
icebp
jmp
adc
cmp
shll
jmp
fmull
mov
out
push
out
cmp
or
pop
hlt
dec
inc
adc
sbb
lds
mov
xor
pop
mov
mov
and
test
xchg
sub
les
in
ljmp
inc
dec
ljmp
xor
jno
push
mov
inc
mov
jl
and
push
lret
cwtl
int
xchg
jae
lret
adc
inc
lods
stc
or
xchg
push
inc
mov
pop
cmc
int
dec
sti
or
cmp
jo
mov
mov
repnz
or
push
mov
or
fcoml
adc
jp
js
lds
mov
mov
mov
adcb
mov
xchg
adc
cmp
ljmp
mov
stos
dec
push
out
or
adc
add
aad
pop
les
in
in
js
mov
mov
mov
xchg
pop
inc
gs
inc
aad
lods
fistpll
sarl
imul
shll
rclb
das
or
insl
pop
fcompl
cmp
dec
jl
pop
sbb
mov
in
in
pop
lret
or
fnsave
dec
pushf
aas
cmp
adc
sbb
adc
push
out
lea
dec
repz
push
lods
and
sbb
aas
orb
sub
movb
mov
jp
xacquire
push
call
outsl
mov
lea
sub
js
xor
sub
cmp
lahf
inc
jle
lock
or
inc
sarl
push
roll
ljmp
sub
loope
xchg
mov
aad
pop
out
enter
cli
loopne
rcrb
fadd
jle
fcomi
fildll
test
int
out
jl
iret
loopne
leave
cld
adc
enter
std
lcall
xor
test
inc
je
rorl
imul
jecxz
xor
fstpt
fldenv
mov
aad
mov
in
mov
push
je
addr16
pop
js
lods
shl
xchg
je
adc
cmpsb
scas
out
cmpsl
xor
shr
ds
fisubrl
mov
jl
test
mov
push
in
mov
or
int
rolb
mov
mov
pop
hlt
cmp
pop
dec
int
sub
cmp
mov
push
and
and
shl
mov
dec
out
jle
cmpsb
mov
add
dec
xchg
pushf
loop
fmull
xchg
push
add
pop
fisubl
imul
dec
hlt
in
cmp
jge
mov
jnp
xor
dec
xchg
fldcw
imul
fimuls
mov
xor
cmp
popf
or
movsl
xor
enter
cmp
in
aam
not
flds
es
jg
gs
mov
xor
imul
cmp
jns
aas
pop
pusha
stos
cmp
add
inc
push
push
out
or
mov
or
jae
cmp
adc
cmp
pusha
pop
fistps
sbb
ljmp
in
mov
push
dec
sub
mov
or
sub
add
pop
lods
cltd
not
int3
clc
dec
jg
dec
pushf
test
or
lods
jns
jmp
out
sub
wbinvd
add
dec
movsb
mov
rcrb
cmp
cmpl
ss
mov
mov
xchg
hlt
or
dec
adc
mov
je
fidivs
fcompl
pop
shl
mov
sub
pop
inc
cmc
pop
addr16
fs
push
dec
stos
push
mov
mov
jl
xorb
test
aam
mov
icebp
adc
sub
lahf
mov
mov
pop
mov
aaa
repnz
in
cmp
js
test
pop
mov
test
mov
xchg
fcmovnb
mov
push
icebp
stc
ds
movsb
fsubrs
push
les
add
ss
fstpt
dec
call
fdivrs
rcr
lahf
aam
add
mov
pusha
cmp
dec
pusha
sbb
xlat
sbb
sub
fs
faddl
les
in
push
jg
faddl
outsb
arpl
test
cmp
xchg
dec
aaa
jbe
inc
notb
push
fildl
fs
ret
pop
ss
sbb
lock
mov
add
jg
xchg
and
sub
repnz
sub
mov
shl
xlat
je
push
std
popf
fmul
call
push
pop
push
and
jbe
jnp
int3
cmpl
cltd
dec
mov
xor
mov
or
adc
sbb
int
pushf
pop
mov
aas
test
dec
inc
jo
dec
mov
js
push
cmp
cmp
dec
dec
fs
fcompl
movsb
dec
inc
mov
imul
fwait
insl
fdivp
test
pop
mov
cmp
stc
lcall
fnstcw
jecxz
lcall
das
popa
mov
mov
sub
in
ljmp
hlt
idiv
dec
dec
xchg
sbb
push
mov
movb
fimull
imul
lock
mov
push
jae
add
mov
mov
std
orb
and
ret
jb
jbe
mov
jnp
fcmovne
fstpt
cmp
sbb
lods
mov
stos
or
jo
xchg
xchg
lahf
jne
add
popa
mov
loope
and
adc
bound
cmp
cmc
cmp
sub
cmp
adc
jo
lods
add
js
cltd
popa
scas
shrb
ret
inc
sub
dec
adc
loope
xchg
xchg
bound
aam
rcrl
shlb
add
or
pop
fisubl
ss
ret
pop
mulb
cmpl
stos
loope
lods
cmp
sbb
xor
dec
push
scas
or
scas
test
pop
mov
adc
mov
sbb
mov
test
or
into
push
cmp
cs
or
sbb
vminpd
fisubs
mov
pop
call
adc
dec
sbb
pop
xor
test
mov
dec
dec
sti
add
and
cmp
xor
inc
outsb
mov
inc
or
bnd
inc
pop
fyl2x
pop
das
lock
popa
inc
icebp
stos
sub
ja
jns
iret
pop
push
cmp
aas
dec
pop
sub
pop
loop
stc
out
repz
dec
outsl
add
mov
jno
dec
imul
ja
cmpsl
ficompl
jle
ds
pop
push
or
or
mov
mov
rcll
loope
push
lea
add
movsb
jmp
push
aad
push
movsb
mov
lret
adc
into
push
mov
dec
test
mov
pop
imul
sti
jge
jp
addr16
ss
sarb
push
lea
cmp
fwait
adc
aad
adc
xchg
adc
push
dec
xor
xchg
loope
popa
jnp
jle
dec
cmp
sbb
lea
dec
movsb
sbb
cld
sbb
cld
xlat
test
movsb
ss
sahf
ret
and
lret
push
out
or
adc
mov
scas
fldt
aas
fsubl
sbb
aam
and
push
mov
sub
or
pop
fwait
jge
in
dec
cmpsl
push
punpckldq
mov
xchg
cmp
pop
clc
cmp
jnp
fstpl
add
sbb
div
cld
mov
loop
or
mov
sahf
add
dec
mov
cmpsl
and
xchg
scas
cld
mov
add
fnsave
pop
scas
xor
in
push
leave
or
xlat
lds
push
enter
imul
popf
pushf
rcrb
orw
sbb
sub
jne
lods
test
rorl
jmp
lods
mov
adc
mov
cmc
jmp
xor
imul
sub
stos
adc
out
pop
movb
inc
ret
xchg
fcoml
leave
icebp
or
shlb
mov
in
mov
cs
add
out
adc
shll
adc
cli
jnp
gs
insb
jp
std
popa
sarl
pop
ret
jns
inc
int
icebp
cltd
or
int3
fs
out
and
mov
jb
push
jge
mov
imul
push
inc
ds
mov
xor
popf
jge
mov
mov
stos
les
and
mov
rclb
imul
in
dec
int
dec
inc
addr16
mov
jb
xchg
fstl
add
nop
mov
xchg
fcmovnb
sbb
xchg
jo
ja
mov
fyl2xp1
mov
and
in
sub
jecxz
jle
out
shlb
push
leave
inc
movsl
mov
sbb
add
add
decb
sub
pushf
cli
scas
xchg
in
das
lret
leave
pop
cmp
fidivrs
xchg
pop
imul
inc
xchg
jnp
imul
sbb
or
loope
cltd
jl
test
inc
or
negl
xor
pop
jmp
xor
pusha
mov
cltd
andl
sub
inc
mov
mov
in
mov
lret
aas
ss
loope
repnz
or
ret
pop
adc
scas
or
sbb
push
nop
addr16
jg
std
jle
pop
inc
xor
inc
add
jp
pop
dec
cmpsb
mov
hlt
lret
add
fwait
jge
cmpl
xchg
inc
add
shll
pop
insb
inc
mov
sbbb
test
fmul
xchg
inc
cltd
dec
int
orl
popa
cmp
jmp
cmp
xchg
out
ja
aam
mov
mov
dec
xlat
mov
mov
sub
jno
insl
push
mov
adc
aas
pop
mov
leave
add
icebp
pop
and
dec
inc
loop
lret
jno
test
jo
mov
inc
imul
enter
adc
mov
cmp
pop
les
inc
movsl
xchg
lods
mov
fmul
inc
and
addr16
in
cltd
pop
loop
js
sbb
insb
pushf
cmpsb
fidivl
pop
je
insb
cmpsb
aad
mov
scas
in
data16
ss
in
dec
aaa
mov
adc
sbb
cld
inc
and
insb
les
push
in
pop
ss
cmp
push
sbb
mov
inc
fisttpl
lea
mov
mov
scas
dec
and
cmp
inc
pushf
xchg
scas
jle
pushf
outsl
fistl
jmp
call
adc
xchg
bound
and
out
xchg
shl
dec
call
jbe
sub
imul
shlb
das
mov
leave
or
pop
fldenv
cmpsl
lock
mov
jl
xchg
stos
aad
inc
outsl
mov
aaa
xor
pop
xchg
scas
xor
addr16
cmp
xorb
movsl
sub
and
lods
outsb
adc
sbb
mov
mov
dec
fwait
ss
sahf
jmp
mov
xchg
mov
movsb
in
enter
cs
loope
call
add
pop
loopne
jb
jo
add
lock
mov
xchg
mov
aam
mov
xorl
push
iret
jnp
cmp
dec
lahf
sub
and
cld
ljmp
fisttps
mov
es
gs
bnd
cmp
int3
xchg
cmpsl
push
inc
call
inc
jb
scas
pop
jo
or
mov
es
pop
nop
cmp
push
fwait
mov
cmpsl
jp
adc
in
or
or
data16
test
fsts
jle
cmp
call
aam
out
mov
pop
push
sub
mov
or
out
mov
int
aad
lret
mov
out
aas
cmp
jae
jmp
es
repnz
std
inc
sbb
test
mov
icebp
push
jp
or
jge
mov
fmull
mov
arpl
and
xor
rorb
scas
inc
gs
aas
mov
push
push
aad
stos
fsub
cmc
xchg
adc
cmp
dec
mov
sub
lds
in
pop
inc
repnz
mov
in
test
jo
cld
std
mov
rol
jne
push
mov
lods
enter
fcompl
out
cmp
xor
into
pop
out
sub
mov
xor
out
and
or
mov
jae
gs
std
fimull
cmp
cltd
mov
cmp
mov
dec
lret
arpl
out
ret
push
loop
data16
add
sbb
sbb
xchg
jo
mov
xor
daa
jns
in
jp
pop
ja
arpl
lods
inc
repnz
mov
cld
les
or
mov
mov
notl
jle
loopne
dec
out
mov
and
daa
inc
gs
dec
jnp
or
xor
sbb
push
sub
call
popa
mov
stc
daa
inc
repz
cli
fdiv
and
cmp
int3
test
pop
stos
inc
gs
sbb
mov
push
ljmp
scas
ret
cmpsl
and
add
adc
inc
pop
lods
andl
lea
add
mov
xor
sub
xor
aad
idivb
and
std
movsl
jl
js
xor
movsl
sbb
scas
mov
test
mov
pop
jnp
ret
sub
ret
xchg
in
movsb
xlat
lods
movsb
dec
xchg
push
jp
dec
add
fsubl
sbb
adc
stos
inc
rorl
repnz
inc
push
sub
stos
sbb
inc
or
jmp
rorl
sub
and
jp
js
cmpsl
scas
pop
dec
adcb
inc
mov
movsl
cmp
push
cltd
jle
insl
push
repz
fldenv
int3
ljmp
pop
cmpsb
icebp
mov
or
cmp
xchg
imulb
push
lock
or
loope
inc
pushf
mov
sbb
pop
cmpsb
je
ss
popf
cs
movsl
hlt
cltd
lea
or
sbb
push
insb
jecxz
adc
int3
fidivrs
mov
or
inc
jae
arpl
out
mov
ret
test
fisubs
popa
test
sti
dec
movsb
dec
mov
lock
mov
rolb
call
mov
inc
imul
std
mov
hlt
dec
inc
sti
gs
nop
stos
lods
pop
xlat
mov
in
xorl
sub
adc
add
adc
hlt
mov
mov
int
xor
test
mov
daa
imul
mov
lret
cmp
xchg
clc
dec
call
jnp
shr
add
test
jecxz
xchg
xor
xchg
jp
inc
jnp
cltd
mov
into
mov
std
mov
lret
mov
inc
inc
push
add
mov
out
sub
movsl
fadd
pop
data16
mov
test
mov
data16
push
mov
jge
ss
das
and
cmpsl
fsubrp
adc
arpl
xchg
stos
mov
shll
push
xchg
mov
mov
add
fwait
mov
loopne
movsl
test
outsl
fs
ret
loop
xchg
xchg
lock
adc
jp
mov
jl
inc
les
pushl
adc
test
test
cmp
inc
add
xlat
inc
insl
xor
idivl
inc
mov
xor
jmp
sub
push
rorl
jge
shlb
fmull
bound
jge
je
out
inc
movsl
or
and
pop
adc
stos
lods
fisubl
xchg
cld
hlt
and
scas
lea
mov
mov
daa
or
ja
fcompl
ds
jle
negl
xor
outsb
das
mov
insb
pop
mov
in
fiaddl
sbb
xchg
xchg
stos
jns
imul
xor
and
jbe
add
jge
dec
cmc
out
mov
and
or
jl
or
adc
addb
shrl
and
pop
sahf
mov
arpl
push
outsb
dec
js
loop
lcall
mov
cmp
bnd
mov
xchg
jnp
push
jg
js
mov
inc
cmp
nop
and
push
in
xchg
mov
addl
das
sub
shlb
aaa
inc
jl
out
test
cmp
call
test
or
lods
jecxz
daa
jmp
fimull
scas
leave
les
jnp
sbb
sbb
lcall
icebp
jo
or
loope
lods
mov
add
mov
fildll
add
mov
mov
jae
jne
outsl
sub
popf
andl
in
add
int
adc
es
incb
jg
decl
iret
and
pop
dec
es
mov
inc
push
inc
std
mov
xchg
mov
mov
rorb
adc
addl
flds
jo
mov
rcl
push
xchg
sub
mov
das
cli
dec
or
jae
subb
cmp
lds
mov
rorl
dec
nop
xchg
or
leave
ficoml
or
movsb
mov
push
fsubs
hlt
stos
pop
mov
sub
pop
nop
mov
mov
je
lock
sbb
scas
mov
insb
jnp
add
push
and
movsb
sbb
arpl
cltd
dec
ljmp
in
adc
and
sbb
and
cmp
cltd
adc
gs
sahf
adc
jo
pop
stos
mov
shl
mov
hlt
out
arpl
imull
repz
lret
jg
ret
icebp
arpl
mov
jg
das
insl
pop
xor
jae
inc
push
shr
imul
leave
and
fwait
rolb
sub
cmp
pop
mov
movsb
outsl
cmp
addr16
mov
movsb
imul
lock
dec
fdivs
jns
dec
pop
xchg
pushf
inc
add
fsubrl
pop
fwait
pop
std
out
adc
sub
mov
lods
stos
xor
daa
add
jl
int
sub
cmp
popf
ret
pop
sbb
es
lahf
stos
sub
mov
fisubl
xor
xchg
push
loope
in
adc
arpl
iret
xchg
js
loopne
aaa
and
es
cmc
leave
dec
push
into
fildll
and
inc
push
xlat
jecxz
mov
pop
lret
sbb
rcll
repnz
mov
mov
mov
push
pusha
or
pop
fs
aam
cmp
sub
jge
outsl
popf
push
rorl
out
dec
je
out
add
mov
addr16
iret
sub
cmc
push
and
outsb
add
test
push
push
sub
lretw
lods
and
rclb
stc
ret
inc
adc
dec
adc
sarl
lods
sahf
cmp
xor
jne
push
pop
addr16
in
sahf
xor
cltd
in
faddl
iret
inc
xchg
int3
idiv
pop
divb
add
xchg
xor
mov
out
mov
int3
cli
pop
pop
inc
pop
or
xchg
adc
mov
and
je
pop
loope
pop
xor
ljmp
and
in
aad
inc
sbb
roll
cmp
out
adc
jmp
pop
fbstp
xchg
pop
inc
add
pusha
shlb
ficompl
out
dec
jns
movsb
inc
pop
out
iret
fsubrp
dec
lds
rcrl
mov
jge
arpl
ret
stos
inc
mov
test
sbb
sub
xor
test
pop
ljmp
sbb
vorps
and
push
cmp
stc
or
mov
mov
enter
sti
outsb
push
cs
sbb
popa
dec
push
movsl
push
adc
and
push
xlat
xchg
in
lds
movsb
inc
icebp
test
stc
popa
mov
outsl
xchg
insl
rolb
jl
es
icebp
shll
mov
mov
rclb
les
mov
cmp
mov
imul
repnz
or
sbb
pop
mov
ljmp
adc
add
daa
fs
cltd
sub
push
sbb
loopne
cmp
test
cmp
push
xor
jae
xor
shrb
mov
inc
mov
ja
mov
or
cltd
add
mulb
jo
or
sub
mov
jne
shlb
into
jns
fistl
sub
or
xchg
fimull
es
and
addr16
pop
jecxz
es
xchg
js
mov
sbb
sarb
fldt
mov
ds
and
cmc
daa
xchg
pop
gs
insb
hlt
das
lret
aam
cmp
sub
data16
outsb
out
xchg
rcr
fstpl
aas
into
jl
jle
lods
leave
pop
in
pop
gs
aas
jne
inc
int3
inc
mov
inc
ss
xor
out
into
mov
iret
mov
adc
int3
jecxz
xchg
sub
inc
stos
xlat
popl
mov
or
xchg
adc
push
insl
sub
and
mov
test
int
xchg
jno
std
test
rol
sub
sti
add
je
xor
mulb
add
adc
fnstcw
push
lods
outsl
and
sarb
dec
jmp
sub
lds
cltd
stc
and
mov
jno
adc
sti
and
jmp
mov
mov
js
jge
jg
pop
add
cmp
ss
loope
lds
je
inc
jns
adc
and
ja
lods
cmp
push
xchg
xor
lea
cmp
andb
pop
xlat
xor
adc
ret
fcomps
mov
repnz
xchg
xor
push
fisttpll
sub
sub
in
test
cmp
pop
add
sub
ljmp
movsb
insl
or
add
push
and
pop
xor
jecxz
js
in
stc
test
push
cmp
int
ss
popa
lahf
mov
add
rcrl
pop
adc
loopne
pop
out
or
shll
sub
and
fwait
adc
xchg
popf
and
lret
xor
cltd
pushf
hlt
jmp
out
rorl
sub
test
or
dec
adc
sahf
ret
lcall
inc
sbb
sbb
addr16
cmp
addr16
push
aaa
fldenv
andb
adc
sbb
sbb
test
in
sub
fcmovbe
popf
mov
add
mov
testl
loopne
lods
jns
cs
jbe
inc
and
popa
pavgw
and
mov
jb
jl
mov
int3
add
cs
loopne
jle
xor
push
ret
pop
xor
popa
fwait
pop
dec
mov
dec
cmp
lods
xor
fdiv
call
test
test
jnp
and
iret
sub
mov
test
decb
push
mov
push
ret
cld
insb
cltd
mov
cli
and
mov
fisubs
in
movl
je
adc
jne
mov
test
mov
xor
testl
jbe
ficoml
cmp
ficoms
fld
push
hlt
in
jae
or
insb
rcrl
orl
cmpsl
movsl
fsubrs
stc
xchg
iret
cmp
and
jle
jae
insl
scas
cmpsl
iret
out
inc
lea
repz
insb
jbe
popf
in
mov
call
jecxz
cmpb
int
push
adc
out
fisttps
xchg
sbb
mov
in
adc
iret
stc
outsb
outsb
ret
std
ds
popa
adc
or
push
mov
cmp
jecxz
fimuls
imul
sarb
in
mov
cmp
sub
clc
jns
add
inc
xlat
push
cmp
sarl
pop
mov
loop
dec
mov
hlt
cmpb
xor
mov
jp
mov
incb
pop
cmp
xor
jge
ljmp
pop
cmp
jne
ret
jl
test
cld
cmp
mov
stos
and
mov
push
sub
test
out
pop
out
pop
and
adc
rcll
dec
xchg
pop
jo
inc
in
pop
jnp
push
lcall
mov
loopne
test
lret
popa
in
dec
cmc
popa
or
mov
cmp
dec
dec
repz
and
push
push
mov
push
xchg
xchg
mov
sarl
push
les
aam
or
xchg
cli
aaa
out
xchg
cmc
mov
add
stos
mov
push
out
push
inc
lock
in
pop
mov
dec
ds
jge
sahf
scas
fisttpl
fucomip
pop
mov
xor
outsl
cmp
xor
lock
icebp
loope
jb
xchg
mov
sub
jne
add
xor
loopne
add
movsb
push
mov
mov
roll
fistps
push
cs
cmp
mov
xchg
dec
cmp
inc
lock
push
insl
stc
and
test
xchg
lods
jns
repnz
cmp
imul
xchg
shl
ja
leave
shlb
cmc
popf
dec
scas
test
call
and
jb
rorb
test
mov
sti
xor
xchg
and
dec
ds
bound
dec
push
lret
lods
xor
fs
fisubrs
cmpsl
sub
test
sub
inc
pop
xlat
call
frstor
into
in
rcrl
popf
add
out
push
aas
outsb
aas
repz
arpl
sbb
and
stc
pop
sbb
imul
sub
aaa
leave
adc
xor
data16
out
cmpsb
movsb
adc
add
adc
mov
inc
push
lds
lods
pop
ret
fmuls
and
add
cmc
outsl
ficoml
pop
fdivp
mov
jae
cld
xor
add
and
or
pushf
fnstsw
mov
cmp
cmp
inc
sbb
aas
negl
cltd
popa
mov
popf
xchg
inc
jp
xchg
popa
out
mov
icebp
adc
or
pop
imul
sub
iret
inc
inc
out
mov
add
jge
lret
or
mov
test
aad
cmp
push
add
in
inc
sbb
dec
movsb
mov
neg
add
or
je
andl
mov
sahf
adc
loop
and
stos
sub
xacquire
cmp
jl
ss
mov
adc
lea
popf
lods
inc
or
cld
mov
outsl
sub
or
xlat
inc
sub
fcoml
daa
sub
pop
loop
das
loop
adc
and
leave
or
arpl
cmp
ljmp
add
add
or
adc
or
pop
push
sbb
lods
icebp
push
pop
out
std
push
ret
pop
xchg
sti
sub
fldl
nop
sbb
inc
push
mov
mov
sub
ret
and
xchg
fidivrs
fs
push
xchg
aaa
lahf
dec
pop
shr
xor
enter
shr
std
aad
push
jge
pop
xchg
aam
push
outsl
in
push
out
lret
cmp
pop
das
inc
aam
and
cwtl
mov
mov
xor
stos
test
push
sarb
cli
jg
ss
xor
repnz
jp
cli
scas
adc
mov
nop
lods
in
inc
sub
aam
add
test
lock
sub
adc
pop
and
mov
shlb
ret
cmp
fwait
and
icebp
xchg
jno
test
scas
adc
stos
in
and
sbb
adc
das
mov
sub
dec
fcoml
cmp
es
mov
addl
add
xor
jbe
ljmp
ja
cmp
mov
mov
sub
iret
lret
test
and
xor
bnd
popf
mov
lret
pop
xor
movntq
insb
lods
mov
push
pop
mov
negb
test
ss
fcoml
xchg
add
hlt
mov
clc
scas
ja
stc
rcll
ret
dec
push
fisttpll
dec
mov
inc
movsl
adc
pop
lods
mov
call
pop
loope
xchg
in
sub
xchg
dec
or
sbb
or
int
inc
pushf
xor
inc
rcrl
test
jle
das
inc
jmp
in
call
test
sbb
cmp
pop
add
je,pn
lar
sub
insl
adc
and
aad
icebp
sti
test
push
mov
hlt
repnz
and
shlb
or
push
sarl
push
jns
and
test
mov
jp
aas
xchg
mov
or
sbb
jmp
decl
or
icebp
xchg
push
inc
popa
add
cmp
sbb
add
or
sub
out
xchg
inc
push
fdivs
leave
fisttpll
mov
dec
rcr
pop
mov
lahf
sbb
inc
inc
pop
sub
cmp
imul
fs
cmp
adc
xchg
xor
out
pop
popa
rcl
jg
adc
sub
loop
inc
pop
popa
cmove
cmp
pop
imull
movsl
pop
std
sub
loope
push
repnz
ret
xchg
insl
mov
hlt
mov
push
xchg
and
and
call
xchg
sub
sub
out
test
out
mov
xor
popa
movsl
insl
xchg
gs
inc
ret
add
sbb
je
mov
iret
cmp
dec
cmp
push
clc
add
cld
and
cmp
xchg
and
xchg
push
aam
lret
add
aad
rol
pop
pushf
mov
dec
aas
out
out
insl
clc
cmp
add
pop
in
outsb
cld
outsl
dec
repnz
leave
jns
arpl
cmpsb
imul
clc
cmp
fldt
in
test
inc
out
aad
push
stos
push
pop
aas
ljmp
insl
jecxz
lea
xchg
cs
pop
cmp
jns,pt
sbb
das
cmc
xchg
popa
in
inc
scas
int
lods
push
jg
and
pop
shrl
mov
mov
cmp
push
xchg
add
push
mov
dec
and
jp
jmp
sbb
decb
xchg
insl
cwtl
stos
add
mov
push
mov
inc
mov
jno
lea
shrb
ss
scas
jle
cli
push
push
aam
xor
in
idivl
push
sarl
lds
repz
xchg
mov
hlt
fst
fsts
shlb
imulb
mov
stos
lcall
das
xchg
call
ds
add
mov
in
in
pop
fldln2
shll
pushf
daa
inc
mov
in
pusha
sub
jo
in
ret
lea
nop
mov
arpl
in
mov
insl
adc
daa
cmc
movsl
inc
pop
js
pop
mov
lret
push
mov
std
mov
or
shrl
dec
in
das
push
cmp
popa
jle
mov
cmp
in
incl
jo
add
test
adc
or
hlt
mov
xchg
gs
pop
rclw
mov
xor
stos
pushf
sub
lods
ret
mov
and
xchg
iret
cmp
pushl
or
and
mov
stos
jl
aad
mov
pop
pushf
jnp
call
dec
lds
mov
mov
scas
mov
insl
jmp
mov
inc
mov
scas
fcoms
cmpsb
pusha
int3
loope
nop
into
loope
test
mov
ret
dec
or
out
in
pop
pop
fidivs
push
push
pop
and
call
dec
aas
fwait
adc
clc
lcall
stos
lock
jo
cmp
jbe
jb
lcall
lcall
clc
adc
lock
outsl
outsb
jnp
int3
push
lcall
fildl
inc
lahf
or
cli
sub
mov
sbb
jl
pop
leave
mov
enter
mov
shrb
or
jmp
jnp
test
ret
cmpsl
jle
loope
aad
inc
scas
ret
jge
gs
pop
popf
int3
rep
stc
cmpsb
fmuls
dec
mov
xor
fiadds
fsubs
test
lret
clc
cwtl
add
xchg
shrl
lea
mov
and
dec
and
dec
ret
outsb
inc
rorb
out
imul
mov
mov
ror
mov
push
pop
out
push
pop
and
jno
jle
lods
adc
gs
andb
mov
jg
xchg
cld
in
test
cmc
or
les
scas
dec
dec
jp
not
dec
xchg
or
and
test
or
aas
sub
add
push
out
dec
mov
push
mov
int
pop
testl
xchg
sub
or
dec
fsts
imul
xlat
shll
les
js
lds
stos
es
into
mov
imul
movsb
jns
mov
cmp
out
shl
push
xor
sbb
pushf
lret
fisubrs
sub
dec
cmpsb
stc
lret
pusha
or
xor
roll
test
fimuls
sub
inc
cltd
adc
dec
outsb
out
mov
addb
das
cmp
jge
mov
or
add
inc
test
iret
scas
dec
repz
cmp
sub
pop
cmpsl
xchg
jb
sbb
in
adc
leave
insl
sub
pusha
aad
xor
in
fidivrs
fiadds
xchg
or
inc
mov
and
push
test
scas
lret
push
xchg
push
jnp
movsb
mov
push
fwait
push
testb
mov
data16
jge
push
mov
fnsave
add
pop
jl
sbb
repz
ficoms
ljmp
sbb
dec
movsb
out
mov
out
ds
sbb
mov
insb
xchg
xchg
out
mov
jne
enter
jb
adc
icebp
mov
pop
outsl
cmc
jmp
xor
sub
mov
add
add
sbb
std
pop
leave
mov
dec
sbb
jnp
call
cs
add
ss
outsb
mov
mov
out
dec
lock
mov
or
xacquire
test
mov
lcall
push
mov
pop
lret
test
ds
mov
xchg
fnsave
inc
in
insl
ljmp
sahf
xchg
int3
into
pop
outsb
icebp
xor
sub
pop
cmpsb
sarl
sbb
cmp
mov
scas
add
outsb
cmc
fnstsw
cli
inc
jg
clc
pop
insb
imulb
push
pop
les
dec
or
dec
push
adc
pop
add
pop
jae
call
jmp
mov
mov
out
fcomps
inc
mov
jg
fsubp
dec
aas
pop
sub
inc
cmp
add
aam
data16
jp
adc
xor
cwtl
push
imul
insl
cwtl
fldcw
cmp
cmp
lds
loop
xor
dec
inc
scas
mov
xor
ljmp
and
repnz
cwtl
push
ss
xchg
mov
xor
xchg
mov
or
inc
inc
sub
test
shll
cmp
cmc
xchg
loope
mov
adc
dec
lds
into
jns
and
sub
adc
xor
push
pop
and
addr16
or
cmpsl
mov
jbe
aad
dec
xor
das
dec
dec
add
nop
iret
in
or
pop
fdivrs
subl
xchg
add
lock
out
or
add
repnz
sahf
cld
pop
jmp
out
bound
mov
inc
enter
push
mov
push
mov
mov
push
test
movsb
push
or
pop
pusha
mov
leave
test
mov
imul
repnz
ljmp
sbb
ds
mov
mov
test
pop
bound
out
jp
cmp
repz
popa
lcall
dec
cmp
adc
add
ret
adc
push
jnp
xlat
outsb
add
cmp
inc
fstl
cmp
dec
std
pop
adc
shrb
dec
out
bnd
or
inc
pop
pop
outsb
and
loopne
rcrl
mov
or
icebp
mulb
pop
dec
adc
dec
sbb
fcmovu
jg
stos
dec
adc
and
out
push
scas
test
jb
fiadds
push
and
push
fsubl
jmp
inc
sbb
mov
out
pop
adc
jns
sbb
pop
stc
ja
xor
pop
or
mov
lds
aas
mov
setne
pop
stos
jle
mov
shrl
fwait
mov
aad
stc
push
push
fisubrs
xchg
lcall
loop
push
dec
enter
out
sbb
ret
dec
mov
xor
or
dec
push
add
mov
mov
pop
movsb
cmp
jg
push
sti
cmpsl
rorb
jo
xor
les
and
shlb
and
xor
lahf
sub
inc
dec
adc
ss
out
lds
fcom
and
ds
sbb
pop
push
push
in
insb
das
fwait
adc
movsl
adc
push
test
jmp
push
rorb
cmp
sbb
lods
or
xorl
sbb
mov
ror
mov
inc
add
cmp
popa
stos
pop
jns
jl
push
adc
sar
insl
pop
roll
mov
adc
or
lods
xchg
dec
pop
xor
add
fnstsw
aad
and
add
in
xchg
pop
xchg
es
mov
and
mov
ljmp
xor
int
loope
sahf
mov
mov
jg
es
dec
in
ds
xchg
in
xchg
adc
xchg
push
adc
repnz
outsl
ja
sbb
shl
fs
test
stos
call
push
mov
int3
in
mov
es
cmp
in
test
cli
pop
shll
pusha
filds
jns
pop
xlat
xchg
or
fs
pop
cwtl
xchg
andb
xchg
shrl
push
jmp
mov
ljmp
cs
inc
mov
add
dec
or
push
sbb
shll
sub
or
push
jo
mov
ja
in
xchg
shlb
leave
xlat
iret
icebp
movsl
negb
sub
pop
mov
and
push
xchg
mov
cmpsb
jecxz
mov
int
dec
fcoml
movsb
jae
mov
cmc
test
arpl
inc
ja
enter
sbb
or
fcom
pop
cmc
adc
in
sbb
push
in
ret
ss
mov
cmp
sbb
stos
or
mov
stos
les
pop
out
xchg
repz
dec
xchg
jo
adc
cmp
shll
and
mov
mov
aam
fld
pop
xchg
int
mov
cld
sub
shll
pop
shrl
leave
jns
sub
aas
test
mov
xchg
sbb
adc
push
lock
ss
icebp
mov
aaa
jb
pushf
sti
pushf
add
or
jae
or
sub
and
jno
lahf
mov
fnstsw
imul
or
nop
ljmp
sbb
add
cmc
adc
scas
nop
push
lds
mov
xchg
aam
mov
pop
cmp
and
push
lahf
mov
jb
leave
loope
js
stc
into
adc
xchg
mov
lcall
or
jmp
cmp
mov
mov
sub
andb
stos
and
stos
imul
repz
jb
sub
lea
lods
and
push
js
or
mov
lcall
imul
out
out
mov
cmc
pop
and
fsubl
and
push
mov
push
les
pop
popa
cmc
inc
shlb
mov
pop
mov
adc
ret
lret
push
cmpsl
or
rol
fstps
sbb
dec
pop
aad
mov
flds
scas
xchg
jnp
push
cmc
ret
icebp
rep
mov
shll
adcb
jnp
lods
inc
dec
cwtl
and
push
cmp
sahf
sahf
push
fiadds
pop
out
mov
imul
mov
jb
push
enter
psubusb
lds
xchg
and
cmp
mov
es
sbb
call
jo
xor
mov
xchg
sub
sarl
adc
mov
and
push
push
cld
push
lret
decb
push
imul
iret
pop
mov
mov
pmullw
push
xchg
cli
mov
pop
push
mov
out
repz
sub
mov
add
popa
push
hlt
fs
mov
fdivrs
cmp
arpl
in
push
int
in
sub
push
out
push
sbb
jns
pop
push
pop
movsl
pushf
xchg
movsb
mov
push
test
adc
inc
and
jne
je
pushl
xchg
cmp
out
subl
cmp
cld
and
push
add
cmp
ljmp
or
push
int
lock
aad
movsb
sbb
fisubs
icebp
inc
push
xchg
sub
xchg
jo
sub
jecxz
ljmp
push
stos
test
std
fbld
lock
push
out
adc
pop
pop
loopne
in
sbb
leave
push
sub
ret
jecxz
mov
in
jne
ficompl
cltd
mov
bound
dec
and
pop
fisttps
ljmp
sahf
and
mov
sbb
jb
aaa
jmp
mov
and
and
inc
pop
stc
loop
adc
fadds
adcb
jbe
fisubrl
stc
aad
mov
push
cmc
jno
mov
pop
mov
mov
lea
ret
arpl
adc
xor
fwait
push
inc
insb
jg
dec
adc
dec
cli
xor
and
in
pop
mov
or
test
jne
int
pop
push
das
leave
xchg
lret
xchg
mov
shll
sarb
mov
lret
mov
adc
lcall
mov
aas
ljmp
insl
pushf
clc
lcall
dec
fldl
jge
fwait
or
lret
mov
sub
dec
sbb
add
movsl
test
sbb
bound
pop
shll
cmpsl
pop
lods
dec
mov
and
aam
test
call
add
das
mov
jecxz
adc
sub
jns
and
faddl
and
adcl
int3
loopne
adc
mov
mov
lret
and
lea
or
mov
pop
mov
sbb
hlt
clc
orb
dec
adc
aad
and
and
insb
ret
call
push
fucompp
cltd
mov
jl
push
lret
movsl
mov
faddl
and
xor
xor
jnp
push
sbb
rcrb
cwtl
pop
xchg
das
pusha
mov
rclb
in
mov
mov
mov
adc
lahf
pop
lret
push
or
js
insl
inc
xor
add
sub
mov
and
jnp
adc
adc
out
lods
sarb
fildll
std
jo
adc
inc
popf
js
stos
cmpsb
push
aaa
in
fsubl
gs
enter
das
mov
pop
lds
insb
inc
push
jno
xor
mov
xor
mov
out
dec
fdivs
cs
or
daa
pop
xlat
xor
jbe
daa
jne
push
mov
and
dec
daa
or
ss
dec
cld
out
or
dec
jo
fcoms
push
repz
xchg
dec
icebp
insl
mov
inc
mov
xchg
jmp
int
rcl
fst
hlt
jns
syscall
mov
jl
and
in
adc
nop
into
call
cld
hlt
repz
lds
jne
std
mov
sub
jmp
hlt
cwtl
adc
mov
xor
sbb
adc
orl
push
pop
rolb
cmp
and
sub
inc
push
cmpsb
dec
lret
mov
out
jmp
pop
das
ret
inc
cli
adc
pop
scas
js
inc
cmc
cmc
sbb
std
testl
fisubrl
fsubl
mov
sub
divb
fidivl
test
push
pushf
lahf
xchg
jp
sub
jle
xlat
iret
cli
xor
xor
mov
sub
sahf
ss
cli
and
pop
ss
jae
lock
cli
mov
fdivrl
mov
andb
es
mov
divl
xlat
pop
inc
jnp
cmp
decb
ficomps
test
push
sub
adc
bound
add
icebp
out
mov
and
cmc
dec
cmp
inc
daa
lsl
repnz
mov
stc
add
out
insl
cmp
fs
xchg
fs
add
xor
add
mov
xchg
adc
push
and
jno
rolb
lods
jge
jns
mov
incl
ds
jmp
lds
and
lock
or
stos
movsl
lahf
jo
mov
xor
cmc
xor
movsb
fcomps
push
lret
sub
lea
bound
notb
push
mov
push
jl
inc
ja
sqrtps
jmp
popf
or
sub
aas
mul
enter
mov
push
movl
lock
repz
aas
lds
fs
lods
jns
pop
into
testl
push
shll
jb
mov
and
shrb
test
lods
cmp
xlat
dec
repz
dec
cmp
mov
mov
mov
lahf
push
popa
repnz
movsb
xchg
mov
mov
subl
pop
xlat
jmp
and
cmpsl
inc
repnz
lret
xchg
adc
outsb
jmp
aad
pop
mov
or
cmp
ret
dec
push
cmp
fwait
lock
mov
inc
jmp
fsubl
inc
mov
push
cmp
mov
outsb
call
inc
test
pop
hlt
lock
scas
mov
add
sbb
jno
mov
cmp
pop
movsb
repz
inc
or
xchg
inc
bound
add
sbb
cmpsb
jno
cmp
adc
shrb
stos
and
test
aam
aam
testb
ds
adc
sub
out
sbb
icebp
out
cmc
scas
jae
pop
ljmp
sahf
jmp
insl
cmpsl
sahf
xlat
insb
xchg
cmp
imul
fmull
outsb
jle
into
jbe
dec
push
ret
cmp
jle
imul
rcrl
cs
pop
repnz
adc
xchg
mov
pop
fnsave
es
or
xchg
imul
out
into
and
sub
or
add
ljmp
push
jl
and
mov
fsubs
and
xor
xchg
call
push
gs
hlt
inc
lods
push
mov
and
movl
mov
mov
xchg
and
adc
sbb
ds
roll
jge
iret
andps
stos
jle
test
popa
loop
or
jb
cmp
xchg
ret
movsl
inc
cmp
aaa
data16
mov
scas
cmc
fisubrl
fdivs
or
inc
fsubl
das
and
int
sub
sbb
jge
add
loop
pop
jne
cmp
ja
push
push
push
data16
aam
push
stos
mov
cmp
rcrl
inc
push
loop
je
test
lahf
out
leave
es
cmpsl
test
lret
push
imul
hlt
xchg
adc
out
jne
mov
cmp
xchg
lcall
and
jae
jecxz
inc
cmp
repz
and
pop
or
xor
and
lods
jg
or
mov
push
add
adc
pushf
insb
cmp
lret
negl
xchg
pop
stos
xchg
hlt
jl
jnp
bound
mov
data16
addr16
nop
add
inc
sbb
int
pop
addr16
loope
or
jns
pop
mov
push
enter
rorb
lods
repz
filds
cltd
aaa
scas
pop
fisubrl
jb
mov
fiadds
icebp
pop
jb
pop
adc
push
mov
sbb
inc
dec
add
lret
adc
out
testl
mov
aaa
or
sti
push
gs
add
mov
pop
jp
jg
hlt
arpl
inc
sbb
push
sub
arpl
add
adc
pop
pop
ds
and
push
les
mov
push
outsl
cmp
repz
xchg
jl
mov
mov
adc
les
xchg
fnstsw
xor
and
aad
ret
cmp
jmp
test
movsb
insb
mov
or
mov
xor
ja
enter
into
outsb
fsubrp
pop
jns
pop
dec
ret
fcomps
and
cli
pushf
cmp
clc
pop
fcmovnbe
rol
sbb
pop
mov
sub
imul
jno
mov
inc
popf
xchg
rcl
loop
jmp
jge
inc
in
xchg
lcall
push
mov
in
movsb
into
je
psllq
dec
sarb
in
xchg
call
enter
adc
or
cmp
les
push
and
cld
stos
sbb
enter
in
xchg
pop
leave
adc
hlt
inc
or
rolb
add
inc
insb
lahf
mov
sti
push
lret
pop
cli
sbb
pop
mov
dec
xor
jns
ficomps
out
repnz
and
adc
adc
out
add
sub
push
sub
ja
out
jmp
mov
pop
cld
andb
cmc
int
movsb
js
and
divl
lock
xor
xor
xchg
data16
push
xchg
pusha
ja
or
iret
shl
mov
fsubp
je
jne
sub
das
fbld
mov
mov
mov
fmull
inc
ret
mov
sub
stos
xchg
fnstsw
ja
mov
ja
mov
pop
dec
mov
pop
xchg
xor
in
sbb
movsb
cmpsl
jae
xchg
aaa
xchg
js
and
adc
inc
pushl
in
inc
ficoms
int3
je
mov
sbb
cmpsb
data16
in
mov
mov
cli
add
je
jae
mov
fs
push
std
mov
stos
add
dec
push
popf
xchg
mov
xchg
pop
es
sarb
add
xor
lea
orb
inc
ret
mov
movl
jb
inc
ficoml
xchg
inc
sbb
fstp
popf
movl
cwtl
jno
fstpt
pop
jae
outsl
ret
cmc
rorl
sub
data16
test
pop
push
xchg
or
lods
int
and
mov
push
and
mov
cmc
xor
out
int
shlb
jns
and
outsl
add
data16
pop
daa
adc
gs
fcomp
ret
add
mov
jo
jne
jbe
pop
push
aam
add
mov
xor
inc
sarl
mov
xchg
cli
cli
xchg
loop
pop
dec
inc
ljmp
in
dec
add
cmp
dec
dec
std
stc
lcall
rcrl
dec
stos
sbb
inc
dec
mov
xchg
sub
out
imul
xor
ljmp
insb
ss
fildll
aas
sti
jg
mov
xchg
mov
mov
repz
and
mov
stos
sub
and
adc
fisttpll
xlat
cmc
jge
dec
lea
out
lods
xchg
xlat
fcompl
out
movb
int
leave
mov
or
adc
repnz
jg
sbb
clc
fmuls
pop
xor
rcr
stc
and
jbe
rcll
pop
jns
or
lret
pushf
xchg
fdivs
into
imul
cltd
xchg
sub
popa
mov
sub
xchg
out
and
rol
dec
xlat
movsb
fcmovb
jmp
mov
adc
leave
jns
lock
xor
iret
jmp
std
stos
rol
push
call
xchg
xlat
out
jmp
dec
test
sarl
xchg
dec
icebp
push
pop
lods
cld
das
imul
jbe
sub
adc
ror
xchg
inc
fimuls
scas
push
xchg
mov
test
mov
lock
and
fistpll
out
pop
cs
std
xor
dec
popf
fbstp
ja
jmp
xchg
sbb
cmpsb
inc
and
fdiv
sbb
aas
stc
dec
and
push
pop
jbe
jmp
or
scas
mov
cmp
or
inc
in
fs
mov
rolb
jg
pop
jmp
jno
movsl
test
fdivl
cli
imul
push
add
inc
xor
pop
add
pushf
sbb
and
or
out
popf
or
out
xchg
adcl
mov
inc
repz
mov
dec
std
and
adc
inc
push
jmp
xchg
lea
shrb
jns
xchg
cmp
stc
pop
ja
mov
and
out
or
cmp
pop
icebp
jo
dec
stos
xor
pop
push
add
xor
fs
cmp
xor
mov
clc
adc
inc
mov
hlt
inc
ljmp
out
cmp
dec
mov
jae
pmaxub
mov
mov
lret
push
mov
xor
aam
outsl
cmp
sbb
dec
xchg
and
movsl
push
add
negb
jb
mov
imul
ficompl
push
dec
and
and
lea
mov
adc
popf
popa
and
mov
fbstp
gs
fistpll
inc
fistps
pop
daa
popf
adc
pop
cmpsb
sbb
dec
sub
shll
xchg
mov
jno
jg
jno
sub
ficoml
fcompl
pop
push
test
jg
cmpsl
jb
jmp
cmp
shrl
cmp
shlb
sub
stc
push
rcrl
fmulp
mov
int3
pop
ret
test
mov
jg
sub
test
stos
mov
pop
adc
push
imul
dec
mov
pushl
divb
out
shl
adc
and
scas
in
push
fdivl
dec
mov
dec
rcr
and
adc
ffree
daa
mov
adc
lahf
adc
aam
out
invd
stc
adc
or
adc
jmp
cld
push
push
lret
jle
mov
in
mov
in
mov
rcrb
mov
jmp
clc
pop
inc
ljmp
mov
in
sbb
idivb
and
cmc
adc
add
test
enter
sub
lds
xor
hlt
adc
xchg
and
aam
call
sub
mov
mov
push
call
enter
ljmp
fcomps
xor
mov
push
outsb
das
jge
push
out
cli
pop
fisttpl
dec
mull
test
stos
icebp
add
xchg
or
xor
outsl
xchg
test
mov
cs
pop
icebp
fwait
cld
bound
loope
and
int3
cmpsb
mov
and
dec
cmp
ret
test
add
push
jb
push
les
mov
sbb
sub
in
test
add
jae
enter
rolb
in
xor
mov
push
mov
push
filds
cmp
out
dec
jne
repz
push
loopne
fistps
adc
js
xor
jns
mov
adc
cld
cmc
xchg
outsb
loop
pop
dec
mov
fwait
pop
push
and
xor
pop
dec
mov
inc
mov
sub
sub
mov
jne
out
inc
xchg
dec
fucomp
int
fistpll
lds
mov
leave
jecxz
mov
add
mov
or
daa
sarl
cmc
cmc
sarb
movsl
mov
xchg
stos
jg
sahf
mov
ret
imul
aam
lods
mov
leave
mov
cld
xlat
inc
shlb
es
dec
add
fsub
add
pop
cmp
or
jno
scas
adc
mov
jo
repz
mov
in
adc
xchg
lock
insb
or
stc
ret
loopne
push
lcall
jle
sti
dec
es
push
or
xchg
cwtl
add
aas
jo
in
mov
dec
pop
outsl
mov
push
jge
xchg
testl
xor
mov
pop
and
dec
cmp
mov
icebp
ds
icebp
shr
adc
out
add
push
loopne
pop
ja
sahf
mov
jno
stos
push
inc
leave
push
push
lret
jns
dec
ds
jp
lcall
fsubrl
mov
rcll
cmc
cmp
xchg
add
and
dec
pop
mov
aaa
or
lock
fiadds
adc
mov
jmp
adc
jl
clts
sbb
lods
pop
pop
lea
not
add
fdivrl
adc
mov
aad
in
cmp
inc
mov
push
adc
leave
sub
inc
movsl
jae
sbb
outsl
pop
push
out
int
pop
mov
addl
data16
xlat
jae
enter
neg
add
pop
and
sub
pop
pop
jg
mov
xlat
sti
sbb
xchg
or
jle
js
call
jle
xchg
fldcw
loopne
push
test
inc
cltd
adc
into
lret
ret
adc
sbb
mov
mov
or
nop
mov
or
stos
add
insb
out
mov
sbb
mov
jnp
adc
adc
pop
lea
lret
jge
push
in
jmp
insl
daa
cmp
push
les
ret
jmp
mov
mov
cmp
jae
and
call
add
and
cwtl
jnp
test
shr
rcll
fldcw
pop
inc
int
lock
in
pop
push
sub
mov
int
imul
outsl
xor
mov
stos
stc
int3
movsl
xor
adc
pop
or
bound
mov
pusha
jns
pop
inc
pop
int
and
ja
arpl
stos
fsubs
xor
or
lret
pop
pop
sysexit
movsb
addr16
loop
sbb
int
test
call
and
sub
ret
sub
cmpsb
inc
push
fiadds
in
pop
ret
cmp
movsl
mov
test
pushf
and
jns
add
xlat
sbb
mov
loope
sub
and
aas
ss
sub
cmpl
int
mov
pop
out
outsb
add
in
lret
es
pop
je
test
inc
ja
repz
arpl
ret
or
dec
mov
mov
xor
mov
dec
mov
adc
cwtl
or
jmp
inc
dec
sbb
rcr
mov
inc
mov
lods
mov
fsubrl
lahf
mov
insl
xchg
icebp
test
sub
repnz
or
shl
gs
and
mov
push
mov
rclb
lea
cmpb
xor
out
jae
fbstp
scas
arpl
rcll
inc
or
in
int3
sar
ds
adc
or
push
mov
push
mov
fnstsw
xor
enter
scas
fidivrl
in
out
jecxz
mov
aas
fcmovu
jle
fmul
test
in
sarb
xor
jge
and
in
dec
sti
jmp
mov
subl
pop
sahf
insb
pop
fisubrs
dec
fndisi(8087
jg
inc
pop
jg
outsl
leave
sbb
mov
out
pop
mov
fcomps
pusha
cwtl
jle
test
fistps
into
sub
xchg
mov
or
push
jno
mov
add
dec
xchg
dec
or
mov
jae
inc
sub
pop
shll
scas
cmp
imul
fidivs
divb
jne
lahf
pop
and
dec
push
hlt
pop
mov
mov
sbb
sarb
aad
int
sar
loopne
pop
or
lret
in
hlt
pop
cmc
add
xchg
aas
jge
inc
popf
je
mov
popf
cmp
fdiv
add
sbb
mov
inc
adc
xor
fwait
aad
xchg
or
nop
adc
outsl
push
repnz
cli
out
in
jb
jo
repnz
and
fmull
sub
ljmpw
jae
popf
mov
xchg
sbb
daa
cmp
cwtl
xor
aad
xor
push
mov
cmp
xor
aam
or
popf
outsl
ret
ds
jb
outsl
sarb
xorb
das
icebp
shl
jecxz
and
dec
cmp
outsl
ljmp
xor
stos
stc
xchg
scas
clc
add
mov
outsl
outsl
mov
nop
aas
insb
stos
pop
xchg
ret
cmp
push
test
pop
stos
pop
mov
flds
cmpsl
or
or
ret
aas
aam
and
adc
adc
or
adc
iret
testb
inc
pop
push
sbb
mov
stos
out
add
sub
into
adc
stos
xor
mov
daa
in
cs
mov
add
les
dec
les
ret
sub
clc
adc
popa
cmpsl
xor
or
mov
jnp
xchg
ret
popf
movsl
inc
loope
ret
cmpsl
cld
in
jle
inc
mov
iret
and
js
ret
sub
xor
cmp
sub
test
int3
in
pop
cli
inc
idivb
jl
mov
shll
push
mov
pop
ja
sbb
push
mov
arpl
imul
push
sub
les
stc
loop
sbb
push
sbb
jne
xor
jge
sbbl
test
and
pop
out
in
xchg
clc
loope,pn
fisttpll
mov
fidivl
dec
dec
and
lock
aam
mov
pushl
inc
rcrl
ljmp
push
jl
orl
jle
adc
and
xor
aad
push
lcall
cmp
rcr
pushf
repnz
stos
cmpsl
stc
repnz
inc
gs
sbb
lds
fidivrs
mov
inc
repnz
push
push
ss
and
inc
mov
arpl
fstl
sub
push
sub
in
popf
shlb
jae
data16
jle,pt
inc
mov
jne
dec
mov
ja
or
mov
mov
push
add
xor
cmp
cmpsl
adc
mov
iret
jo
pusha
lea
add
adc
inc
out
in
fxch
test
push
je
stos
lock
push
jp
insb
icebp
mov
sahf
icebp
cmp
std
xor
ret
pop
sbb
test
jp
add
cmp
push
pop
jns
inc
fsub
dec
test
popa
mov
xchg
push
xlat
xor
lods
inc
outsl
stos
and
xor
xchg
pusha
fisubs
lahf
pop
xchg
and
ljmp
sti
not
dec
adc
fdivrl
jge
mov
cmp
sbb
repz
pop
inc
ror
cmp
pop
iret
add
sub
leave
repnz
in
fistpll
or
xor
mov
sub
xor
pop
pop
mov
mov
adc
xor
ret
pop
shl
scas
sbb
mov
lods
xchg
xchg
dec
inc
dec
mov
mov
shlb
fisubl
add
mov
nop
adc
sub
stos
jp
cmc
pushf
outsl
test
cmp
addl
and
lock
inc
out
jp
mov
mov
pop
xor
in
addr16
dec
fldcw
pop
sbb
xor
fistpll
push
adc
sbb
arpl
adc
cmp
xchg
or
call
adc
mov
movlps
subb
sub
in
cmpsl
outsl
inc
xor
lcall
mov
imul
loope
push
repnz
inc
cmp
movsl
sarb
mov
cld
jg
xchg
mov
iret
stos
loop
jecxz
or
mov
cmpsb
paddusb
pop
jl
jecxz
adc
pop
mov
fsubp
movsb
dec
sahf
jae
aam
rcl
mov
dec
cmp
push
lret
sahf
lods
pop
mov
jnp
pushf
mov
and
popf
dec
ljmp
dec
push
ret
movsb
sbb
pushf
cmp
test
mov
mov
dec
xor
clc
cld
pusha
xor
sub
mov
adc
lret
stc
mov
mov
je
lock
sti
fwait
jns
cli
roll
fcmovnu
rorl
dec
movsl
jne
inc
js
inc
movsb
mov
jecxz
lea
daa
outsb
movsl
cli
in
xchg
ret
orl
shrb
sbb
mov
jns
out
cmc
imul
jo
ljmp
iret
fwait
mov
mov
mov
push
inc
sbb
popf
jb
ficoml
in
in
sub
test
sbb
sub
mov
mov
jmp
int3
sub
inc
jp
rclb
and
in
xchg
adc
adc
adc
pop
mov
scas
imul
push
icebp
out
rorl
test
ret
push
mov
and
xchg
xchg
into
iret
sti
mov
clc
sub
sbb
push
popf
inc
cmp
or
fcoms
sub
testl
outsl
sub
daa
shlb
insl
xor
out
aaa
movb
scas
aam
mov
and
ret
cmpsb
sbb
xor
push
fwait
rclb
mov
adc
cltd
push
sbb
ret
cmp
xor
push
lock
loopne
sbb
idivb
push
fldl
pop
push
pop
mov
adc
outsb
jle
mull
flds
sbb
std
or
stos
aas
ret
std
test
rcr
rcl
cmp
sbbb
add
push
ret
pop
in
pop
add
pop
dec
scas
sub
sub
cmp
and
sti
or
enter
cltd
test
icebp
imul
and
cmc
call
jmp
pop
std
out
mov
arpl
push
mov
mov
mull
or
xchg
lret
pop
and
pop
aas
andl
jl
mov
mov
add
inc
push
jmp
mov
mov
pop
cmp
aam
mov
inc
push
out
daa
sub
push
cmp
sbb
ljmp
inc
cmp
add
stc
jp
arpl
lods
sarb
les
lcall
dec
shrb
mov
pop
add
in
mov
xchg
xlat
ja
call
inc
sbb
enter
lcall
and
lock
fcompl
out
mov
outsb
adc
aas
roll
jnp
fwait
push
mov
fisubs
jmp
pop
cmpsl
imulb
cs
repnz
lahf
loope
out
ret
sbb
fldenv
lahf
and
in
pop
mov
iret
cmp
fsubr
mov
push
out
jg
loopne
adc
jl
arpl
les
icebp
add
mov
fmull
in
and
or
dec
xor
pop
add
cmp
out
movsl
pushf
in
sub
loope
pop
sbb
mov
sti
stmxcsr
mov
aam
test
andl
loopne
ljmp
dec
out
push
adc
bound
push
fadds
mov
mov
xchg
jns
adc
mov
test
sbb
aaa
jns
push
test
sub
and
xor
call
movsb
ret
pop
jno
pop
dec
jno
inc
cmp
or
mov
aaa
aas
push
inc
movsb
stc
or
dec
xor
sbb
xor
add
push
push
push
sbbl
shr
sub
daa
mov
mov
xchg
sub
not
sbb
lret
in
ret
inc
and
jmp
inc
test
add
aaa
repz
jmp
pop
sbb
push
insb
lret
mov
xchg
insl
add
imul
inc
inc
push
dec
repnz
rclb
push
inc
cmpsl
push
mov
xlat
pop
push
sub
mov
mov
mov
xor
add
inc
scas
adc
data16
cmp
dec
add
call
repnz
cmp
add
ljmp
fdivl
gs
mov
dec
sub
cmpsb
mov
cmp
sbb
inc
negb
jnp
insl
stos
sti
mov
mov
popa
int
shrl
and
add
clc
xor
ficoms
xchg
push
aaa
test
inc
test
cltd
test
push
mov
cld
add
add
js
out
xor
es
aaa
and
les
fadds
ja
jle
scas
jmp
push
xlat
stos
xchg
dec
std
or
ja
and
cs
sub
jae
test
call
std
xchg
sub
jns
and
aaa
mov
cmp
loope
mov
rorb
push
jbe
fnsave
pop
and
mov
dec
and
pop
pop
daa
shl
adc
mov
inc
adc
mov
inc
lcall
repnz
inc
pusha
inc
pop
and
repz
mov
jge
lods
nop
loop
idivl
pop
fstl
imul
ljmp
ret
mov
cltd
sahf
xchg
ljmp
mov
xor
mov
mov
out
fadds
inc
movsb
jae
fnstenv
mov
std
mov
ss
xor
xor
out
jle
adc
and
pop
not
outsl
insb
cli
sub
pop
cmp
int
sbb
rcrl
or
aaa
push
sti
pop
ljmp
cmp
out
add
aad
je
enter
and
fsubs
dec
pop
jg
ds
xor
insb
daa
xor
sbb
or
shr
mov
adcl
xor
lahf
repz
icebp
or
push
sbb
push
xchg
lret
lock
lds
insb
mov
jnp
jnp
mov
je
idivb
test
inc
xchg
dec
hlt
aad
xor
aam
int3
jae
xchg
push
adc
call
fidivl
mov
xor
out
dec
dec
into
fbld
push
pavgb
jno
stos
pop
les
jns
aaa
lret
push
lcall
fwait
pop
dec
inc
mov
outsb
mov
ljmp
add
int
inc
int3
cmc
pop
cmpl
iret
ljmp
xchg
lea
or
or
add
xchg
mov
lahf
pop
pop
movsb
fcoml
outsl
jae
dec
ja
inc
sub
cmp
dec
f2xm1
jmp
ret
pusha
push
stos
xor
pop
in
inc
mov
xchg
push
fisttps
ret
fsubs
out
dec
es
lret
ffree
dec
repnz
ror
jg
jge
pop
ret
push
and
test
je
aam
mov
xchg
xchg
lret
mov
sbb
or
push
jae
mov
clc
movsb
repnz
mov
lret
pop
cmp
cmp
jge
mov
test
pop
aam
daa
outsb
shll
xor
in
push
mov
add
out
and
aam
xchg
jb
cli
pop
ret
bound
adc
inc
jne
ss
add
cwtl
in
rorl
les
icebp
xor
push
mov
xchg
add
cmpsl
insl
jmp
cmc
inc
jnp
loopne
adc
cmp
jbe
stos
push
pop
pop
paddsb
xchg
fiaddl
adc
out
andb
or
adc
xor
mov
and
jns
loope
mov
sbb
hlt
std
mov
mov
cmc
inc
repz
jmp
fisttpll
std
outsb
test
push
add
test
pop
ljmp
ss
dec
mov
sti
gs
daa
lods
dec
mov
pusha
fistps
test
lret
in
xor
jp
mov
rcrb
gs
lret
pusha
fs
and
inc
repnz
cli
enter
fidivrs
into
insl
jbe
mov
adc
scas
sub
jns
inc
add
sub
xor
outsb
and
xchg
cmc
aad
mov
mov
ret
ljmp
into
int3
jne
add
jp
sbb
pop
jecxz
imul
rorl
fsubl
adc
pop
faddl
adc
shl
push
jnp
in
out
sbb
pushf
cmp
xor
call
sub
lret
cwtl
mov
inc
jle
std
lret
lds
test
je
mov
push
xchg
fmuls
daa
repz
pushf
fucomip
fwait
std
cld
test
ficompl
pop
mov
or
sub
push
dec
daa
cmc
movsl
out
inc
fmull
and
cmp
pop
jo
out
mov
mov
push
ds
shl
mov
icebp
daa
test
and
push
mov
out
mov
pop
cmp
fimuls
inc
gs
fildll
std
or
gs
xchg
mov
push
sbb
add
test
or
fstl
xlat
cltd
in
imul
insl
ss
add
fs
and
adc
in
mov
idivb
ftst
xor
ja
repz
ret
cmc
fldcw
mov
cli
xchg
call
pop
jns
xor
stc
jl
mov
fmull
pop
add
int
outsb
in
add
cltd
roll
mov
mov
push
arpl
pop
scas
aaa
mov
sar
hlt
ljmp
xor
inc
jnp
rcr
enter
cmpsb
andb
jmp
jne
and
push
lods
push
inc
lods
jne
push
sub
jb
rcrb
hlt
dec
dec
adc
movb
mov
call
jp
pop
stos
xchg
mov
negb
lret
imulb
adc
sahf
pop
loop
bound
jbe
icebp
xchg
pop
shll
mov
jge
cmp
mov
mov
adc
dec
roll
push
pop
mov
mov
std
add
sahf
pop
clc
lods
es
lds
mov
inc
or
inc
outsb
mov
lods
push
xor
jle
jmp
in
jae
fadd
lds
hlt
push
mov
xor
mov
or
pop
cmp
in
jle
sbb
adc
jl
fisubl
in
jne
jo
ljmp
pop
mov
lahf
aam
movsb
jns
mov
jmp
mov
test
pop
push
inc
loopne
cli
inc
cmc
sbb
pop
lret
mov
mov
in
cltd
push
insb
inc
movsl
loopne
icebp
out
push
lahf
mov
ja
pop
popa
adc
push
sahf
and
out
lahf
push
jo
adc
mov
push
mov
lods
dec
divb
xchg
inc
sarl
lods
xchg
dec
js
pusha
pop
push
xchg
pop
rcll
pop
sub
shrl
fcoms
mov
inc
push
les
fisubl
mov
mov
sub
jo
jmp
stos
mov
xlat
add
ljmp
jg
out
pusha
sti
rolb
ljmp
or
add
sahf
js
fistpll
pop
fdivs
sub
mov
out
loopne
xor
fcompp
jne
ja
mov
lahf
pop
dec
sbb
or
xchg
mov
xor
mov
sbbb
jne
sbb
daa
cmp
repnz
pop
shlb
sub
ret
nop
xchg
sub
lea
xor
rcrl
mov
fistpl
xlat
andb
and
mov
jp
dec
dec
fiadds
mov
mov
mov
loop
rcrl
push
pop
adc
loope
push
aam
jno
fisubl
add
leave
pop
mov
lahf
sub
js
arpl
xor
jne
sub
and
clc
lret
and
xor
or
xor
dec
dec
fimull
push
out
jp
dec
arpl
mov
fsubr
inc
stos
xor
mov
lcall
cmp
ret
inc
decb
cmp
sti
mov
hlt
push
fcomps
mov
loopne
sub
push
shll
sub
shl
sbb
xchg
repnz
or
bswap
sti
xchg
and
fbstp
das
sub
or
and
jnp
ret
lds
mov
repz
iret
je
inc
sbb
or
vstmxcsr
xlat
cmp
push
and
jb
xorb
in
xchg
repz
nop
adc
rcrl
imul
inc
gs
mov
je
cwtl
pop
fbld
adc
loopne
jg
incb
and
push
dec
ficoms
sub
mov
bound
lock
fmuls
sub
mov
sub
out
pop
in
lea
or
cmc
ret
or
jns
jno
pop
jb
mov
push
cmc
inc
and
fsubs
pop
enter
mov
mov
daa
lods
mov
leave
cmpsl
push
adcb
or
mov
fistpl
mov
mov
lods
or
mov
imul
rolb
adc
test
or
repnz
clc
insl
ss
ret
inc
cwtl
fs
insb
ja
lahf
int
ljmp
ror
jo
mov
and
mov
pop
pop
movsl
stos
dec
outsl
test
loope
ret
repz
out
mov
inc
sub
inc
push
push
mov
pop
adc
neg
jl
or
faddl
lods
out
stos
popa
mov
in
dec
flds
test
mov
push
scas
arpl
test
popa
js
jne
push
pop
dec
mov
pop
dec
adc
out
mov
lcall
je
or
xlat
in
sub
xchg
ljmp
jns
stc
adc
add
sbbl
pop
lock
shlb
stc
fistpll
inc
out
adc
hlt
xorb
ss
and
orb
mov
pop
cmp
out
and
jnp
sbb
add
mov
iret
mov
mov
xchg
data16
pop
decl
in
sbb
add
loopne
xorb
push
ficompl
push
sbbl
push
sbb
lea
and
mov
inc
aam
xchg
call
cld
cmp
push
inc
or
ds
and
scas
pop
pop
sub
test
ret
xchg
push
pop
push
jno
das
xchg
test
xchg
insb
dec
mov
mov
les
outsl
push
loopne
cltd
pop
popf
loope
lret
xor
push
in
mov
adc
adc
in
cmp
leave
ljmp
xor
jmp
pop
jle
inc
enter
je
or
sub
push
fwait
rorl
sub
inc
data16
adc
adc
mov
sub
clc
push
sar
dec
push
pop
hlt
adc
dec
mul
scas
out
outsl
adc
out
ljmp
in
xor
nopl
fidivl
mov
ss
lock
int3
stos
scas
into
repz
mov
std
push
jg
xlat
fldt
lock
adc
jns
mov
ficompl
lret
cmp
gs
repz
sub
mov
jmp
and
dec
lcall
push
stos
xor
pop
call
shlb
xchg
xchg
inc
jbe
shlb
test
mov
frstor
jb
test
xchg
mov
jo
je
pop
cmp
push
in
mov
loopne
sub
xor
repnz
inc
adc
mov
stos
jge
loopne
ja
repz
mov
lret
sub
add
lds
xor
mov
fiaddl
pop
sub
lret
and
inc
jecxz
sbb
orb
in
push
xor
movsl
aas
mov
lea
adcb
je
shrb
jo
or
inc
mov
cmp
mov
jae
cmp
popa
inc
xor
sbb
cmp
or
out
and
inc
mov
stos
aaa
arpl
jl
lret
inc
pop
xchg
out
fs
or
add
mov
sub
outsb
adc
dec
fisttps
lret
pushf
cmp
jmp
sbb
fwait
mov
pop
or
movsb
dec
mov
xchg
lds
fstl
jmp
dec
sti
fildl
xor
cmp
add
add
loope
roll
push
cmp
or
lea
ds
jg
stos
dec
pop
gs
pop
movsb
cmpsb
pushf
push
lea
ds
ljmp
les
clc
push
push
cmovns
imul
xorl
pushf
cmpsb
pushf
inc
lods
insb
push
pop
jg
inc
and
sub
pop
mov
sub
jecxz
stos
jo
icebp
add
cld
dec
sbb
jmp
push
fs
divb
jae
push
subb
testl
inc
jns
cli
jo
ljmp
and
or
call
fsubrp
add
ret
int
xor
sbbl
inc
in
jae
cmp
outsl
and
daa
jp
push
sbb
shrl
mov
rolb
adc
fsubr
outsl
adcb
xchg
inc
xchg
nop
lea
cs
xchg
push
jb
jge
aam
popf
adc
jmp
imul
fnsave
jno
mov
xchg
dec
in
int
sbb
fidivrs
mov
adc
inc
mov
mov
or
cmpsl
or
rorb
jb
xchg
pusha
sub
icebp
mov
lods
fcoms
test
pop
inc
jl
sub
es
in
lds
imul
jecxz
ss
cli
or
mov
xchg
push
pop
sbb
aad
inc
lock
or
popf
rclb
xor
stc
popa
sbb
into
jp
out
jmp
jo
or
mov
rcr
addr16
dec
inc
or
fs
repz
icebp
xchg
cmp
cmp
or
in
pop
cmp
mov
sbb
jp
cmp
cmc
sub
cmp
xor
jecxz
push
out
mov
test
mov
lock
cs
jle
pop
iret
mov
xchg
fldenv
or
xor
sub
test
pop
and
cmp
cmp
pop
hlt
jne
pop
call
popf
movsl
fisubrl
cmp
adc
test
jmp
xchg
fistpll
pop
mov
scas
ret
std
push
shrb
das
orb
xchg
andb
xchg
pop
lock
aam
cmp
add
lret
sahf
cmp
xor
jge
imul
push
inc
int3
mov
mov
jle
sub
and
mov
push
sarl
mov
cmp
insb
je
int3
jle
jno
adc
loop
gs
fsub
mov
lock
cmp
jmp
xlat
pusha
frstor
dec
cs
fcoms
dec
sti
jno
xor
jns
push
dec
mov
xor
mov
mov
pop
mov
mov
sbb
pushf
scas
xor
mov
test
sti
lock
or
inc
movsb
stos
xor
push
addr16
insb
mov
cwtl
or
call
mov
and
in
pop
cmp
xchg
jno
xor
cmp
inc
fst
ljmp
test
iret
roll
xor
or
pop
int
cmp
sbb
shlb
fiadds
or
push
sbb
fbld
sbb
gs
adc
xchg
and
inc
test
shll
sbb
cmc
and
in
ret
nop
sub
dec
inc
or
ret
cwtl
mov
test
test
mov
call
lock
imul
mov
fdivrp
push
add
mov
mov
add
shll
pop
addr16
shr
outsb
out
icebp
push
jecxz
cmc
lods
mov
mov
xchg
movsb
bound
and
enter
push
cmp
mov
mov
jl
push
int
pop
xchg
push
imul
out
mov
cmp
jg
push
notb
imulb
or
scas
or
mov
jge
test
jecxz
out
popf
xchg
ljmp
jl
cli
and
xor
loopne
lods
test
out
add
out
sarl
add
pop
sub
fcoms
xor
xor
mov
sbb
inc
cltd
rorl
push
push
fbstp
fisubrs
rclb
lods
fldt
fstpt
mov
mov
cld
pusha
jecxz
ret
add
iretw
mov
vcvttpd2dqx
shll
mov
stos
iret
inc
rcrl
sub
cmp
mov
pop
mov
pusha
inc
into
sub
jae
dec
and
fucomp
jo
jmp
jbe
repnz
adc
ret
add
mov
daa
sub
mov
out
je
sub
inc
jmp
add
and
rorb
sub
nop
sub
cmp
lods
imul
pop
cmp
aad
adc
into
add
cmp
sbb
push
or
insb
dec
xchg
notl
mov
ljmp
xor
push
lcall
inc
mov
push
mov
and
inc
add
aas
mov
inc
inc
sbb
repz
cs
cs
jbe
adc
xchg
das
and
fcoms
mov
gs
fnstenv
or
xor
and
cmp
mov
xchg
nop
xor
call
xor
sbb
mov
insb
sbb
dec
jmp
mov
cmp
iret
sarb
or
ret
sub
loopne
cmp
mov
cmp
dec
push
dec
loope
cmp
lds
sub
push
add
push
movsl
test
fs
jno
jmp
push
pop
daa
in
jle
ljmp
dec
jne
pop
pop
ja
out
inc
fisubs
jb
iret
mov
out
mov
push
icebp
rcll
jns
fs
push
push
dec
jmp
cld
cmp
xor
and
aam
add
push
hlt
mov
cmp
test
pop
lcall
inc
mov
push
push
int3
pop
mov
or
mov
push
jl
fdivrl
std
cmpsl
sub
sub
pop
insb
loop
mov
out
in
jns
jl
repz
fcomps
std
or
loopne
arpl
cltd
cmp
and
fsubs
sub
fsubl
nop
in
push
dec
inc
xor
pop
lret
aam
xor
fstpl
jo
cmc
mov
sbb
push
adc
add
ljmp
mov
add
adc
adc
lea
xchg
enter
aas
cmpsl
ss
and
fdivs
jmp
xchg
lcall
imul
imull
sahf
test
cmp
mov
xchg
fldenv
jmp
xlat
shl
imul
pop
imul
inc
jle
cs
push
xchg
sub
jle
jne
jg
fstpl
sub
nop
cmc
shlb
fistpll
scas
loope
xor
pop
negb
push
pop
test
aad
idivl
inc
ljmp
mov
pop
xchg
inc
in
lods
add
jns
addl
sbb
jmp
lcall
fdiv
pop
scas
jmp
and
and
cmp
mov
scas
cltd
jmp
fdivrs
cs
rorb
fldcw
inc
ljmp
mov
xchg
dec
mov
addr16
push
add
xchg
mov
das
repz
loope
adc
hlt
sbb
or
jbe
out
int
adc
sub
and
and
dec
aas
add
pop
xor
adc
fldenv
add
jae
or
add
arpl
jecxz
sbbb
jmp
cmp
push
xchg
dec
inc
dec
mov
aas
out
mov
cmp
inc
push
xchg
mov
pop
or
sbb
shrb
icebp
adc
imulb
icebp
mov
add
fistpl
cmp
mul
ret
insl
inc
lea
and
packssdw
mov
push
pop
or
bswap
sub
movb
aaa
cmp
adc
add
push
adc
out
push
icebp
loop
out
fdivr
add
enter
insl
adc
stc
js
jp
pusha
ret
or
pop
test
cmc
icebp
add
add
insl
popa
rclb
sahf
or
jle
mov
lods
imul
cmp
in
cmp
test
int
data16
cwtl
mov
rcl
test
and
mov
xchg
pop
dec
xchg
sub
outsb
outsl
xor
sarb
xchg
adc
xor
pop
pop
sbb
xchg
mov
or
jno
jo
adc
or
dec
mov
xor
repz
icebp
mov
clc
subb
rcrb
pop
int
sahf
in
ret
push
lahf
and
or
pusha
loopne
lds
mov
test
or
jg
sti
outsl
sub
mov
sahf
mov
sar
push
in
sbb
addb
ljmp
scas
loop
push
push
aas
data16
jae
xor
incb
outsb
sahf
mov
pop
repz
sbb
call
scas
jle
aaa
mov
ffreep
aad
repz
mov
cmc
stos
cld
lea
cmp
fisttps
mov
out
outsb
sub
bound
cli
sbb
mov
adc
push
or
dec
mov
pop
pop
mov
sbb
dec
mov
jp
add
sub
push
adc
add
xchg
cmp
and
sbb
mov
mov
add
inc
movsl
jmp
sbb
ja
lds
cmp
mov
ljmp
jns
cld
addr16
cmp
aam
jb
jl
fsubr
lahf
cmp
ficomps
mov
pop
subps
sbb
mov
sub
bound
mov
or
mov
subl
lods
jno
outsl
adc
jnp
pop
orl
outsl
xor
stos
fs
add
lret
fistl
lods
mov
jmp
inc
lock
imul
dec
cs
mov
insb
and
mov
pop
mov
in
lods
aaa
ss
aas
push
push
in
popf
xchg
mov
fmull
fiaddl
fdivl
gs
cmp
pop
and
or
repnz
inc
push
loopne
insl
pop
mov
jmp
stc
add
adc
pusha
adc
ret
and
mov
mov
mov
fisubl
pop
push
sti
add
mov
adc
lds
dec
adc
clc
iret
mov
lock
cmp
mov
jle
add
repz
pop
jmp
call
cmp
push
xchg
aad
call
xor
jno
pushw
jbe
xor
sti
inc
fisttps
mov
dec
pop
imul
inc
jb
push
ja
jle,pt
cmp
mov
ficoms
dec
mov
mov
cmp
jne
ficomps
mov
mov
pinsrw
xor
andb
cmp
xchg
aas
loope
ret
or
or
cmp
andl
jecxz
enter
int
pop
loopne
xchg
add
cli
int3
adc
lret
xchg
and
lods
lods
popa
stc
xor
mov
jmp
sbb
int3
outsb
lret
scas
dec
cmp
mov
out
jmp
int3
icebp
test
add
jnp
psrad
push
jmp
psubsw
out
mov
push
cmpl
xor
ficoml
pushf
aam
fwait
push
pop
cmp
sbb
repz
cmp
cmpsb
imul
fcoml
ret
lret
add
xor
addr16
or
xor
scas
mov
movsl
imul
insl
dec
xor
pop
negb
xor
iret
adc
icebp
fsubrp
daa
dec
jl
sbb
and
xor
and
out
or
add
cmc
jle
addr16
mov
pop
in
fsubl
enter
push
dec
fadds
rolb
mov
movsl
rorl
inc
or
das
push
xchg
stos
mov
xchg
inc
and
mov
xchg
lods
lea
femms
dec
sub
xor
mov
inc
aam
mov
pop
mov
icebp
dec
retw
inc
lds
ja
or
push
mov
ficompl
or
nopl
aas
arpl
out
pop
lahf
mov
fbld
mov
fwait
imul
xor
fdiv
sub
mov
jbe
cmp
pushf
aas
mov
and
xchg
sbb
cmp
lahf
mov
fstl
imulb
sub
push
pop
pop
mov
and
jno
jb
outsl
xor
dec
out
stos
stc
xor
ja
movsb
pop
jns
inc
std
push
cmp
push
pop
jecxz
dec
ja
inc
mov
mov
adc
es
cmpsb
pop
leave
popf
sbb
jne
sub
cld
loope
or
sub
pop
in
aas
and
mov
mov
or
xchg
push
add
jns
stc
cmp
loope
mov
and
or
jge
mov
cmp
loope
in
fs
pop
push
xor
add
test
cmp
inc
adc
pushf
xchg
roll
es
nop
jno
div
fildll
push
sbbb
clc
sbbl
out
fsubrs
cld
add
cmp
out
and
pop
dec
inc
mov
xchg
fcomi
add
sbb
cmp
movsb
cli
push
call
daa
das
push
sub
or
clc
sbbb
jle
cwtl
jns
add
ja
add
sub
in
mov
and
pop
dec
shr
cmc
cmp
cwtl
mov
sub
xchg
sub
bound
scas
xchg
popa
cmpb
sub
lahf
scas
sub
testb
sub
add
pop
es
das
sbb
inc
flds
and
or
les
aas
dec
add
jecxz
xchg
shrl
idivb
rol
or
adc
data16
xchg
pop
and
in
add
movsb
mov
insb
pop
xor
cli
jo
mulb
pushf
inc
pusha
test
push
or
ja
jno
and
mov
xchg
push
fwait
dec
mov
jmp
xchg
mov
adc
push
xor
das
adc
mov
sbb
test
sub
or
inc
and
icebp
std
and
or
in
mov
mov
pop
cmpsb
fbstp
scas
pop
push
add
push
mov
mov
mov
pop
and
xchg
movsl
adc
adc
aad
push
aaa
or
dec
sahf
xchg
fcoms
pusha
out
movsb
dec
int
and
mov
int
sbb
inc
pop
les
mov
or
ljmp
lret
cmp
push
es
xchg
push
dec
in
shll
sbb
js
loop
mov
push
sub
mov
dec
push
les
mov
mov
enter
das
repz
in
pop
pop
add
in
dec
jo
or
sub
adc
hlt
call
xchg
lcall
testb
outsl
fidivl
pop
dec
fists
mov
rorb
inc
push
inc
add
and
int
lods
mov
lds
cmp
mov
push
cmc
mov
test
and
shl
inc
movsb
clc
jae
mov
sub
xor
imul
pop
cmpsb
pop
les
push
cmc
ret
sbb
je
cmp
fldcw
xor
lea
fldenv
or
cs
sub
jnp
fildll
push
sbb
stos
int
mov
daa
out
xchg
fmull
sub
pop
frstor
add
rcrl
std
in
sub
loop
push
fs
inc
mov
mov
pop
out
les
cli
mov
lods
inc
sbb
sbb
adc
call
mov
xor
js
push
xchg
or
xchg
xor
mov
cmpsl
push
mov
sub
scas
stos
jbe
sahf
push
testb
adc
push
and
test
es
test
mov
or
mov
gs
es
pop
sbb
pop
std
lods
xchg
fstpt
jns
sahf
dec
clc
ljmp
push
int
jle
aad
xor
pushf
mov
sbb
cmp
sbb
push
jno
lock
std
pop
movsb
jmp
das
fwait
sbb
std
dec
popf
xor
mov
fmuls
dec
ja
dec
jb
sub
stc
iret
icebp
mov
push
push
sub
es
adc
fwait
pop
jne
or
xchg
jecxz
add
sahf
movsl
sbb
mov
jp
pop
ds
pusha
shlb
pop
lret
fcompl
lret
bound
add
jmp
mov
imul
popa
test
mov
adc
cmp
push
loope
jno
xor
sub
shl
cltd
cs
add
int3
in
push
adc
adc
mov
inc
ret
in
icebp
mov
xor
cs
push
add
cli
js
lret
mov
hlt
xchg
mov
lea
cmpsb
mov
enter
rorl
mov
xlat
lock
iret
icebp
push
sbb
stos
test
mov
lret
push
dec
arpl
ret
fisubl
cmp
jle
mov
inc
int
mov
pop
fstpt
sbb
jb
in
cmp
fidivrs
es
in
lret
in
jne
fsubl
mov
daa
roll
bswap
jns
enter
mov
daa
add
and
mov
std
and
hlt
mov
jne
and
xor
pushf
fs
test
push
and
clts
ror
or
jno
mov
outsl
adc
rorl
pop
shll
daa
dec
out
sbb
xlat
fadds
push
sbb
fistps
mov
int
and
adc
jg
pop
cmp
inc
mov
and
sbb
aad
cmpb
mov
dec
jo
mov
mov
sub
sar
insb
das
or
fisubrl
xchg
repz
ficoml
rolb
mov
cmp
adc
cmp
pop
mov
popl
inc
sbb
mov
je
inc
cmp
repnz
mov
jb
adc
jne
sub
jp
push
popa
jmp
out
adc
cs
jns
inc
jge
xchg
and
dec
cld
sub
enter
or
fs
cld
loop
js
sub
bound
xor
jo
cmpsb
inc
sub
mov
push
test
sub
inc
imul
mov
out
jbe
push
ret
pop
and
jl
and
xchg
add
loope
pop
push
mov
lods
outsb
std
xlat
xchg
stc
out
lahf
mov
insb
mov
in
popf
sbb
cmc
add
sub
mov
pop
pop
mov
cltd
cmp
push
push
not
pushf
fnstcw
ficomps
fstl
adc
pop
lds
mov
add
fdivrs
push
insl
jne
dec
ficoml
pop
cmp
aad
mov
or
sbb
pop
mov
sub
push
aaa
cmp
lock
push
pop
faddl
mov
adc
inc
cmp
std
insb
jns
mov
fists
negb
inc
sbb
jno
adc
dec
out
mov
movsl
fisttps
or
pusha
ss
notl
lock
and
rolb
mov
mov
lods
or
mov
sahf
cli
outsl
inc
in
lds
test
jg
popf
push
lcall
adc
sub
repnz
ret
mov
lods
jecxz
or
out
cmc
mov
frstor
aad
pop
or
lcall
pop
mov
and
inc
roll
adc
xchg
push
or
std
fcoms
cmp
aas
jae
lret
pushf
lcall
add
mov
cmp
inc
sub
push
inc
jbe
mov
test
add
mov
out
push
and
push
mov
pop
mov
aas
cwtl
ds
ljmp
das
lret
inc
mov
push
xchg
push
aas
idivl
push
ds
adc
pop
test
push
pop
mov
mov
fcoms
pop
add
es
pop
out
lret
sbb
push
prefetcht0
ljmp
and
xor
lret
cli
call
mov
add
fxch
fwait
jg
mov
inc
int3
jg
fldl
cmc
shl
call
hlt
push
jo
fs
pop
cli
xchg
int
insb
lock
mov
in
adc
pop
cld
shr
sub
leave
jb
aas
movsb
imul
movsl
in
ljmp
jae
push
mov
jmp
ljmp
cld
adc
lds
jg
enter
inc
inc
sub
xor
and
es
lock
xor
push
shlb
dec
xchg
stos
scas
mov
push
push
sbb
jg
xchg
pushf
cltd
aam
add
mov
mov
pop
dec
pop
aad
scas
rol
dec
dec
sbb
cmc
mov
mov
sarb
ret
mov
inc
xchg
push
je
arpl
bswap
nop
sub
pusha
jbe
cmp
mov
scas
xchg
lods
test
cmp
int
out
ret
out
sarb
mov
sub
in
scas
add
dec
cmp
cmpl
fdivrs
aam
and
mov
or
int3
pushf
inc
fistpll
imul
sub
xor
rcrl
add
into
lcall
loopne
mov
data16
fmuls
mov
add
jno
sub
sbb
dec
and
fadds
daa
loopne
pop
test
adc
jge
or
adc
cmp
sbb
out
pop
push
insb
jo
enter
add
mov
xchg
cld
outsl
pop
int
arpl
rcll
mov
xor
jl
rol
push
ljmp
add
push
inc
loopne
pop
jb
cmp
lds
mov
lcall
adc
rolb
gs
nop
add
fistpll
inc
out
inc
cmp
jnp
imul
sbb
and
cmc
test
cltd
xchg
lock
adc
sti
sbb
lret
mov
std
std
dec
adc
pavgb
push
enter
inc
call
mov
call
rcrl
xorb
lods
add
sbb
push
jmp
xchg
std
loopne
cmp
fists
or
xlat
or
aad
cmp
lods
sub
sbb
insb
mov
lret
sbb
movsb
lods
das
iret
mov
jle
cli
sub
xchg
xor
jg
mov
inc
addb
fcomi
xchg
push
inc
pushf
cltd
insl
es
dec
mov
ds
mov
jne
daa
mov
inc
adc
cmp
jmp
mov
std
lds
xor
xchg
mov
loope
sbb
add
pop
in
jne
inc
jle
xchg
pop
cmp
jo
lods
mov
and
gs
mov
mull
in
mov
push
fcmovnb
ficoms
mov
lds
dec
pop
ret
cli
std
add
stos
sbb
test
mov
inc
movsb
adc
sbb
in
test
ljmp
xchg
mov
sar
insb
addr16
mov
mov
call
pop
aaa
cld
cmpsb
push
and
shll
popf
jo
jnp
ljmp
outsb
std
or
xchg
mov
push
shrb
into
and
dec
sbb
sbb
aad
fidivrs
in
repz
push
and
lret
out
mov
div
repz
mov
cmp
fistl
notb
addb
mov
cmpsl
cmp
cmp
out
cmp
adcl
pop
stos
les
mov
xchg
mov
push
jno
lock
test
jbe
push
xchg
jno
lcall
jge
adc
cmp
fsubrs
jbe
jns
push
lods
jle
xor
sbbl
aad
adc
or
divl
iret
push
fnstcw
fcoml
push
jb
lds
fwait
dec
and
dec
xor
push
sbb
mov
mov
add
arpl
mov
stos
adc
stc
and
mov
aam
mov
loopne
xlat
jg
insb
sbb
jno
fdivrl
fcom
faddp
adcb
cmpsb
mov
or
popa
inc
adc
cmp
cmc
xor
add
insb
popf
sahf
das
aas
inc
xor
cs
stc
pop
lods
adc
or
stc
shr
fsubrs
pop
mov
sub
fcoms
mov
sbb
and
std
cmp
mov
or
ret
loopne
sbb
inc
sbb
fildll
cmp
rcr
push
or
cmp
fwait
and
xchg
shlb
push
push
dec
adc
adc
mov
mov
iret
xor
loopne
sti
sbb
mov
pop
or
ret
data16
outsl
sub
mov
cmp
add
cmc
pusha
or
add
gs
iret
jno
rcll
in
cmp
fistpll
mov
sub
ljmp
lods
adc
mov
sub
cltd
dec
rorl
lahf
sub
std
mov
cmp
lahf
cmpsb
outsb
push
stos
mov
fstl
cwtl
in
mov
jmp
jge
xchg
add
pop
pusha
add
scas
dec
jo
dec
xchg
fistpll
rorb
mov
sub
cmpsl
rorl
push
mov
aas
push
fldenv
xchg
xor
std
ret
dec
dec
pop
or
out
cmp
mov
adc
sub
fst
shll
mov
push
add
pop
push
push
test
xchg
add
dec
or
add
cltd
cld
push
subl
sub
jbe
pop
mov
xor
sbb
pop
cmp
mov
gs
cli
add
xlat
mov
rorb
outsl
or
aad
cmp
mov
lds
shll
lret
rorb
jns
je
pusha
enter
insl
xor
out
shlb
fs
test
dec
fildll
xchg
xchg
in
daa
ret
cmpsb
jbe
sbb
mov
enter
std
jl
jo
iret
insl
outsb
cltd
xor
and
mov
mov
insl
in
int
jns
repnz
loopne
mov
repz
dec
sbb
testb
sti
cmp
dec
addr16
test
insb
daa
icebp
imul
out
xchg
test
dec
cmp
jno
jmp
movsl
cmp
pop
jne
and
push
mov
dec
int3
lea
loop
push
lret
pop
pop
ljmp
mov
mov
ss
sbb
in
loope
pushf
pop
xchg
mov
cmpb
ljmp
rolb
xchg
jl
cmp
repnz
cmp
jae
push
ret
in
jmp
mov
pop
jne
mov
inc
jnp
mov
fsubs
mov
and
outsl
lcall
in
cmpl
aam
insl
aad
ret
fistpll
mov
sub
mov
lds
rorl
lret
dec
jp
aam
jle
and
call
cmp
xchg
or
aaa
dec
cwtl
push
pop
lock
cmp
mov
in
in
js
loop
push
add
pop
mov
cltd
mov
sahf
pop
dec
mov
sbbl
push
dec
or
js
sbb
out
cs
loope
add
imul
les
sub
cmp
fildl
stos
lock
fisubl
sub
mov
jne
jge
fisubrs
push
xchg
pushf
cmp
out
or
in
pop
es
cmp
cs
shrl
mov
ds
lods
fbld
sbb
mov
push
inc
sti
popf
push
add
add
fcmovnu
test
cmp
fidivrl
lock
imul
cmp
mov
stos
dec
js
fdivl
lahf
xchg
cmp
sti
fcoms
in
rcr
stos
adc
out
or
mov
push
and
mov
push
xchg
ret
cmp
jb
xor
xchg
fdivrs
add
dec
pop
lahf
xor
and
lods
push
jmp
xchg
neg
mov
xchg
gs
rcrl
add
mov
out
aam
jge
jmp
jmp
mov
imul
inc
jle
jmp
sbb
xchg
inc
push
push
fldl
jle
mov
mov
cltd
fdivrs
cmp
adc
push
movsl
sbb
push
pushf
inc
scas
rcll
mov
mov
pop
xor
pop
icebp
and
xor
test
add
fsts
ja,pt
sahf
xor
push
out
sub
pusha
adc
mov
test
sub
lock
add
or
cld
sbb
adc
xchg
into
rcl
push
adc
xchg
lea
cmp
stc
fbld
and
push
lods
aas
test
sub
sbb
loop
dec
sub
sti
stos
and
pop
and
mov
filds
mov
dec
jle
add
movsb
ret
push
sub
repnz
jmp
shrb
popa
mov
pop
cmc
lods
dec
push
mov
push
ss
push
xchg
nop
push
and
adc
pop
je
ret
loope
pop
div
inc
adc
cltd
push
cmp
clc
call
stos
daa
and
shll
jmp
dec
jns
frstor
cmpl
add
imul
shr
xchg
hlt
add
iret
ljmp
pushf
rcrl
pop
lods
stos
jle
inc
pop
xor
mov
mov
adc
push
xchg
out
jge
push
inc
sarl
fbstp
pop
sub
fwait
push
pop
jnp
cmpsb
pusha
add
add
xchg
scas
sub
dec
lea
test
adc
mov
popf
pop
shll
in
or
ss
xlat
movb
ja
pop
pop
sbb
xchg
rol
ret
xchg
shl
adc
fs
mov
dec
adc
jb
out
in
pop
lea
xchg
cmpsl
mov
xor
in
leave
jle
jg
push
roll
call
scas
push
mov
adc
icebp
mov
cld
adc
jns
insl
pop
jne
aas
xor
lds
test
scas
scas
cmp
test
sbb
mov
dec
outsl
ds
jno
mov
inc
je
mov
imulb
mov
mov
pop
dec
test
add
dec
push
daa
aad
mov
jo
imul
sarb
pop
roll
stos
rcrl
push
loope
pop
test
aas
or
fnstcw
test
fdivrs
ret
adc
stos
fwait
cmc
in
rcl
loopne
adc
js
iret
dec
xchg
mov
ss
inc
xor
mov
cmp
popa
scas
test
xor
lahf
inc
dec
inc
mov
add
xchg
loope
mov
cmpsl
cwtl
fcmovne
xchg
push
dec
push
movlps
inc
sbb
aas
fs
lock
add
or
sub
ret
pop
mov
nop
jle
inc
mov
push
imul
jne
jmp
xor
jo
jbe
lea
addl
mov
lock
adc
adc
popf
loop
sbb
xchg
inc
outsl
push
outsb
fidivl
pop
sbb
pop
in
dec
adc
shll
jne
hlt
or
dec
inc
xor
mov
push
stc
mov
ljmp
in
pop
aam
and
imul
das
add
dec
insb
push
xchg
sub
or
push
adc
xchg
mov
in
mov
adc
pop
ljmp
jg
jecxz
movsl
addr16
aam
mov
sbb
call
daa
sub
mov
mov
sub
mov
sbb
sbb
push
fadd
push
mov
es
mov
rcrb
or
cmp
xchg
pop
xchg
aaa
pop
movsb
outsb
cmpsl
fbstp
lahf
jl
aad
cmp
aaa
inc
sub
cmp
cmp
pop
cmp
popf
push
pop
pop
sub
data16
cmp
jns
sbb
sub
sbb
mov
sbb
add
icebp
lods
cmp
sub
pop
pop
scas
lods
int
cwtl
push
nop
scas
pop
fcmovbe
add
sub
push
add
add
jnp
jne
dec
sub
movsb
jmp
stos
call
mov
pusha
jl
xor
aad
ss
pushf
push
or
enter
push
test
xchg
repz
mov
xchg
lods
mov
jmp
in
lret
mov
mov
sbb
xchg
in
leave
jle
jo
mov
add
fwait
lds
aam
add
dec
sub
stos
notb
mov
int3
and
imul
insb
test
arpl
xor
ficoms
push
mov
inc
jnp
push
rolb
xchg
mov
sbb
insl
movsb
add
and
adc
daa
and
cltd
xchg
xchg
enter
adc
sbb
insl
push
push
jns
addr16
mov
cli
mov
aad
push
xor
out
mov
sbb
mov
pop
lret
pushf
gs
fdivp
cltd
adc
pop
mov
inc
pop
loopne
add
popa
xchg
test
mov
mov
add
iret
add
add
test
hlt
test
scas
mov
pop
jmp
pop
ret
cmp
lret
adc
xchg
lods
mov
mov
xlat
and
std
notl
push
in
xchg
cmp
scas
rcrl
stos
arpl
inc
stc
dec
pop
les
inc
pop
lods
ljmp
mov
push
push
push
fisubrs
sahf
lcall
jae
insb
inc
jns
mov
mov
cwtl
or
fdivr
enter
lods
ret
mov
fsubl
xchg
je
mov
xor
ja
cmpl
jmp
rcrl
or
mov
pop
cmp
lods
in
cmp
out
lea
adc
jl
aad
jle
mov
push
mov
enter
sub
mov
lds
sub
inc
mov
shrb
cmp
rcrb
mov
rcrl
faddl
xchg
bound
mov
scas
shlb
mov
jbe
pop
xor
stos
frstor
scas
mov
mov
mov
fldcw
xchg
out
stos
aam
outsl
jo
arpl
jb
cmp
scas
dec
and
cli
pop
daa
or
or
loop
push
mov
fidivl
ljmp
outsl
rcr
dec
cmp
iret
shr
dec
insl
add
leave
cwtl
adc
mov
sbb
stos
mov
jecxz
push
add
imul
or
sbb
cmp
add
inc
or
pushf
push
sub
push
test
xor
cmp
push
es
or
mov
rol
push
call
mov
es
xchg
cmpsl
fwait
jnp
shlb
pop
or
rcll
mov
xchg
insl
insb
fistps
mov
and
ret
ja
rcrb
mov
ret
and
dec
arpl
inc
cli
enter
scas
loope
push
xor
imul
cmp
push
rorl
sub
out
pop
add
sbb
jecxz
out
inc
rclb
inc
movsl
cmc
pop
and
add
mov
mov
or
scas
lock
dec
pop
mov
adc
lcall
repnz
pop
popa
popa
sub
clc
negl
daa
add
sbb
cli
jmp
adc
cltd
mov
sbb
es
push
push
mov
mov
mov
or
es
and
xchg
fisubrs
push
xchg
sbbb
push
and
dec
pop
mov
sbb
fistl
es
scas
lcall
jnp
mov
sbb
add
jp
push
int3
or
add
sub
es
sub
dec
popf
pop
sub
pop
sub
ret
cs
and
inc
xchg
and
xchg
ja
mov
jbe
bound
inc
sbb
and
scas
movsb
push
loopne
rol
std
push
bound
adc
scas
shrb
fisubl
int3
outsl
sub
mov
inc
pop
push
sbb
leave
mov
push
cmp
sahf
popf
shll
sbb
jns
fbld
loop
adcb
imull
fcmovu
dec
lcall
pushf
into
cld
pop
push
andl
shll
or
stc
mov
pop
inc
mov
ret
das
adc
addl
jno
xchg
sub
sub
dec
es
ss
sbb
xchg
hlt
push
xchg
scas
repz
cmp
scas
fwait
mov
ret
add
es
mov
inc
hlt
pop
xchg
ficompl
inc
icebp
inc
mov
xor
adc
jne
test
jb
pop
movsl
inc
in
xchg
inc
xchg
daa
nop
dec
push
push
jl
pop
push
jmp
clc
sub
movsb
xchg
cltd
cmp
aad
cmpsb
mov
sbb
insb
and
repz
shll
bound
shl
rclb
jp
out
jge
pop
pop
stos
cld
pop
call
jno
inc
inc
cmp
xor
mov
inc
test
scas
pop
xchg
cmc
psrad
cld
xchg
daa
push
jno
testb
lahf
jae
addb
test
cmp
xchg
dec
and
or
or
daa
cs
jge
out
in
enter
pop
leave
mov
lcall
int3
ds
hlt
push
jbe
mov
sub
inc
das
adc
add
add
pushf
ret
fwait
mov
hlt
es
stos
dec
mov
or
pop
rep
pop
enter
cltd
and
jo
mov
lret
add
mov
movsb
mov
es
and
enter
sub
pusha
and
xor
test
mov
pop
push
les
mov
nop
or
cwtl
rol
scas
xchg
call
jmp
mov
call
sub
cwtl
xchg
push
mov
dec
popa
push
xchg
mov
pop
movsb
rclb
sub
int
test
pop
das
scas
aaa
cmc
mov
add
dec
dec
mov
imul
les
sub
test
loopne
mov
lods
pop
data16
xor
imul
imul
jb
pop
bnd
or
out
cmp
jbe
push
movsb
adc
pop
pop
popa
xchg
inc
int
xchg
aaa
cmp
in
out
data16
ja
andb
incb
repz
jae,pn
jb
inc
ja
pop
or
inc
mov
in
ret
and
cmp
push
das
sbb
fsubs
stos
jl
lret
lods
or
push
mov
dec
sub
pusha
cmp
mov
pop
jp
int
dec
and
adc
add
sub
add
dec
in
ret
ss
outsb
inc
dec
adc
push
mov
adc
jno
pushf
int3
arpl
push
sub
cmp
jge
bound
sub
mov
jae
inc
gs
mov
mov
pop
inc
cltd
clc
mov
int
push
scas
ja
loop
das
or
xor
and
daa
in
ss
mov
arpl
es
sub
adc
push
cmp
and
daa
cltd
push
mov
stos
es
cmp
push
dec
pop
daa
xchg
xor
xchg
and
cmp
pop
sub
and
test
or
aad
mov
icebp
pop
ds
enter
ficomps
add
add
dec
jle
push
push
add
sahf
push
orb
and
mov
and
lret
dec
push
xor
dec
data16
dec
xor
push
ss
push
rcll
iret
mov
push
cmpsb
repz
dec
in
sbb
dec
and
lods
or
nop
pusha
adc
jno
pop
cs
cltd
scas
cmpsl
out
and
mov
or
dec
or
mov
jb
popa
dec
daa
cmp
dec
xchg
push
push
push
pop
sub
test
sub
movsb
ss
sub
xchg
or
dec
xor
sub
ret
inc
insb
das
cmp
jl
aas
pop
mov
push
sub
mov
je
icebp
mov
xor
push
xchg
sub
xchg
test
inc
xorl
imul
dec
ss
push
das
imul
push
push
cmpsb
push
adc
or
mov
ss
push
mov
lahf
jge
movb
or
xor
mov
fildl
mov
enter
jo,pt
push
pop
outsb
loopne
cmpl
push
xchg
aas
mov
scas
ja
roll
mov
dec
mov
xchg
mov
scas
sbb
jns
jb
iret
mov
xchg
in
into
pop
mov
cmp
inc
xchg
arpl
cltd
into
int
negl
push
adc
inc
sbb
add
adc
dec
movsb
cmp
dec
iret
ds
adc
jne,pt
fwait
mov
ret
add
out
ja
sub
sti
pop
jne
xchg
mov
adc
je
add
data16
mov
push
or
push
cmpsb
or
mov
dec
fsts
xchg
outsb
and
fmull
outsb
out
sbb
or
jo
push
add
add
dec
push
inc
mov
xchg
pop
xchg
or
pusha
mov
inc
rcrb
mov
cmp
jecxz
push
sub
imul
xchg
sub
mov
out
divb
das
or
lret
push
dec
stos
mov
popa
pop
cmp
out
stc
jb
pop
push
dec
xor
xchg
inc
fisubrl
dec
xchg
dec
sbb
inc
adc
into
pop
and
fsubrs
out
aaa
and
add
mov
sbb
ret
push
jg
int3
sub
sub
fsubs
ds
jne
or
xchg
or
ja
xchg
dec
gs
jb
insb
data16
sub
push
jne
mov
xor
cmpsb
movsb
addr16
mov
and
cs
push
inc
fidivs
mov
cmp
ljmp
int3
sub
fbld
cmpsl
sahf
and
notb
lods
lods
sub
arpl
cmpsl
mov
adc
aam
repnz
push
cld
pop
adc
rorl
lret
pop
mov
xchg
popa
xchg
pop
adc
imul
pusha
movsb
scas
jns
shlb
mov
mov
push
and
out
mov
inc
fdivrl
cs
mov
imul
out
gs
shlb
out
jg
jmp
mov
xor
ret
jbe
mov
or
mov
xor
push
cmp
es
mov
mov
mov
adc
mov
push
jae
mov
sub
jbe
push
pop
dec
add
lds
dec
or
mov
mov
inc
xorl
mov
pop
dec
pop
sub
pop
movsl
mov
daa
or
data16
lcall
data16
and
das
in
cltd
sahf
dec
xchg
out
xchg
mov
lcall
imul
xor
sbb
outsl
outsl
shlb
movsl
push
ljmp
cmp
popf
and
inc
pop
jae
icebp
push
adc
loope
aaa
xlat
mov
sbb
mov
dec
sti
sbb
test
mov
xor
adc
sbb
aaa
mov
test
dec
in
adc
neg
jns
xchg
xor
loop
cmpsl
pushf
loopne
or
push
jae
sbb
pop
in
insl
mov
loop
push
sar
sbb
imull
mov
lods
daa
mov
in
inc
push
sahf
in
popf
or
push
xor
dec
push
or
nop
es
movl
aas
aad
cmp
out
jns
aam
push
cmp
outsl
jecxz
dec
leave
mov
cli
adcb
fisttpl
sbb
jae
mov
hlt
insl
inc
xchg
scas
xchg
xor
shl
sub
scas
xchg
popa
ljmp
mov
popf
sbb
in
popf
cs
xor
mov
test
int3
dec
mov
jmp
or
sbb
inc
push
movsl
inc
sub
mov
mov
fldcw
mov
push
and
and
lods
sbb
std
test
js
fldcw
filds
xor
xlat
xchg
sub
insb
jge
out
and
xchg
test
sarl
stos
ficompl
push
adc
in
lea
and
out
popf
insb
cmc
mov
dec
imul
lcall
subl
rorb
add
int3
out
aaa
jge
jne
add
push
repz
sti
lcall
mov
cmp
sub
addr16
scas
sbbl
jo
adc
testl
pop
inc
movsl
add
ret
push
addr16
jge
std
mov
xchg
mov
mov
dec
subl
test
testb
stc
cmp
xor
pop
adc
aad
cmp
add
jo
inc
lea
shr
lods
xchg
call
push
insl
mov
in
insb
sbb
loop
repz
cmp
cwtl
xchg
or
fcompl
aas
add
jnp
cli
push
cmc
dec
sbb
mov
mov
or
jp
mov
or
popa
stos
roll
mov
pop
push
popf
xchg
adc
fwait
cmpsl
mov
lods
push
mov
dec
stos
pop
aad
ja
or
jl
out
mov
jmp
inc
dec
push
mov
jo
mov
mov
adc
push
ss
clc
sahf
sarl
xor
pop
popa
lock
add
xchg
adc
fs
cmp
mov
jge
jl
int
test
and
loopne
jmp
sub
arpl
lock
inc
jno
lea
dec
fcoml
jns
test
sbb
sbb
pop
adc
xchg
adc
xchg
cmc
pop
std
popl
jae
dec
addr16
lea
call
aad
jle
shl
ja
addr16
cld
ficomps
jnp
int3
adc
mov
push
std
out
aaa
mov
lea
sub
sti
cmp
addl
iret
mov
pop
lea
repz
popa
imul
inc
orl
cli
pusha
sub
orb
pop
clc
popf
out
popf
mov
add
inc
adc
cmp
or
out
imul
lods
push
xlat
inc
lock
test
add
mov
adc
loopne
dec
adc
jp
cmp
test
lret
jge
mov
or
pop
pop
cmp
sti
cmp
stc
push
or
cmp
test
dec
or
bound
syscall
aam
push
xchg
lock
pop
adc
and
pop
clc
pop
dec
std
xchg
scas
lcall
push
inc
mov
or
jg
test
push
popf
addr16
adc
rcl
andl
xchg
nop
fwait
lret
stc
jb
jns
push
add
sahf
lret
lods
enter
mov
stos
sbb
jns
imul
imul
repz
dec
out
or
add
daa
mov
fistl
pop
in
jne
xchg
mov
sahf
mov
or
adc
xchg
in
mov
xchg
xchg
push
in
and
mov
adc
dec
inc
sbb
sub
imul
lods
pop
jle
outsb
outsl
pop
in
push
push
dec
cmpsl
jmp
push
dec
test
xlat
push
ds
push
jge
loope
cmp
lods
jns
addb
arpl
fwait
arpl
pop
inc
lea
aam
pop
rol
jmp
add
jae
rorl
nop
enter
mov
jbe
fldt
jmp
adc
mov
pop
dec
jg
das
test
arpl
minps
stos
gs
popf
es
push
add
xor
mov
cli
cmp
inc
sarl
addr16
lods
inc
sbb
xor
xchg
pop
gs
icebp
pop
or
mov
cs
jo
lea
jae
in
shl
ficoms
imul
inc
cmp
xchg
push
imulb
push
dec
pushf
mov
flds
xor
xor
pusha
xchg
xchg
xchg
icebp
or
push
in
sub
or
pop
ret
inc
test
iret
dec
dec
add
cld
mov
cmpsl
movsb
popa
jnp
stos
jge
adc
in
add
fsubl
imul
sbb
hlt
inc
inc
std
push
push
mov
aam
mov
push
cmp
imull
mov
arpl
lea
mov
std
push
lds
addb
or
mov
adc
std
adc
aad
jno
rcrb
in
inc
jge
add
push
popa
or
sbb
popa
rcrl
inc
jnp
and
mov
and
inc
test
imul
dec
lock
xor
imul
lds
jmp
stc
fwait
mov
mov
and
inc
int
pop
mov
mov
lock
xchg
xlat
outsb
std
sbb
pop
xor
or
arpl
dec
adc
pop
std
movsl
sub
popa
lea
mov
inc
fs
add
das
lds
sbb
cmp
dec
repnz
add
outsl
pop
inc
and
mov
addb
adc
mov
imul
rcrl
pop
mov
adc
into
fistps
ja
mov
imul
pop
arpl
arpl
cmp
lea
fildll
sbb
sub
cmpsl
in
sbb
adc
mov
push
stc
popa
leave
mov
cmpsl
cmc
inc
xchg
ja
in
push
mov
xchg
sarl
loope
lea
xchg
push
subb
dec
adc
int
adc
mov
lods
lcall
ffree
cmp
in
test
jmp
mov
adc
dec
loop
xor
cld
adc
pop
icebp
jae
cmpsl
fsubs
inc
jge,pt
lock
pop
inc
adc
aam
sti
fstl
jne
pop
mov
out
rorl
and
movsl
shr
cmc
xchg
xchg
mov
shlb
cwtl
adc
out
mov
inc
mov
adc
push
xchg
pop
fcmovnu
mov
icebp
negb
in
xchg
daa
movsl
mov
les
dec
mov
mov
stos
xchg
sub
sti
stc
jecxz
cld
orl
fwait
add
adc
popa
imul
jecxz
leave
pop
std
leave
roll
mov
jns
test
roll
mov
call
or
jbe
or
xor
test
push
xchg
daa
lds
sub
popf
and
xor
jmp
fldl
jae
cltd
fsubrl
icebp
bound
mov
mov
jmp
push
push
inc
shll
arpl
pop
je
scas
jge
pop
fldl
fnstsw
push
std
mov
test
lea
sub
jg
add
fwait
xchg
scas
loope
subb
xchg
push
cmpl
icebp
mov
sub
decl
scas
push
push
push
mov
mov
out
add
and
push
lea
pop
mov
mov
out
mov
rcl
cmp
mov
jge
xchg
mov
out
xchg
cli
sub
xor
lea
shl
dec
push
dec
lock
hlt
or
imul
jmp
arpl
cmp
fldt
outsl
lea
dec
adc
sub
mov
mov
pop
icebp
xlat
sbb
add
std
mov
xchg
xchg
push
movsl
imul
pushf
out
mov
jno
loope
cmpb
jns
push
insl
hlt
xor
rolb
xchg
lcall
fistl
sbb
std
aas
insl
leave
shl
imul
jge
repz
or
dec
movb
cwtl
stos
pop
testl
pop
add
cmp
fbstp
outsb
adc
out
mov
jne
lcall
and
push
dec
testb
push
incl
aam
mov
xor
jbe
fmulp
adc
rcrb
cmp
cmp
jge
out
dec
adcb
or
inc
stos
sub
push
adc
mov
arpl
pushf
js
pop
aas
jne
std
push
sbb
cmp
pop
insb
lea
push
dec
insl
sub
fisttps
jno
push
mov
repz
lods
shrl
jmp
lret
nop
je
adc
jl
sbb
fidivrs
dec
sub
hlt
pop
jae
fldt
mov
xchg
or
jmp
fisttpl
jo
jge
call
adc
lahf
addr16
mov
jns
push
std
cli
push
xchg
xchg
lret
sahf
sub
add
addr16
xchg
pop
test
stc
push
mov
pop
mov
xchg
test
sub
sahf
mov
stc
lahf
push
xchg
std
add
imul
jns
imul
pop
insb
std
popf
pop
dec
sarl
bound
inc
push
jmp
xor
sbb
cmpsl
fcompl
dec
jg
out
push
inc
repz
pop
sahf
inc
iret
cltd
call
cmp
pop
pop
stos
popa
adc
jmp
scas
popf
imul
in
vmovq
loope
outsl
popa
lods
lea
xor
xor
test
xchg
rcrb
mov
pop
pause
add
or
sbb
int3
pop
push
mov
pop
stos
fistpll
lods
arpl
add
stos
xchg
loopne
roll
ss
xchg
or
or
das
lods
add
dec
stos
mov
out
nop
push
imul
sbb
stos
pop
pop
fisubl
lea
in
add
aas
test
adc
xchg
daa
mov
es
xchg
sbb
and
movsb
push
divl
in
lock
mov
es
push
sbb
leave
jno
mov
shrb
in
mov
stc
jp
add
lret
fcomps
mov
std
pop
ret
aaa
mov
jne
jnp
inc
imul
inc
test
jae
cltd
adc
mov
clc
or
pop
adc
in
or
imul
inc
jbe
dec
add
js
fistpll
mov
lea
adc
cmp
and
roll
cmp
sbb
inc
scas
mov
imul
adc
pop
mov
std
insl
cli
bound
xchg
lcall
movsl
sub
inc
in
pushf
and
lea
sbbl
addl
rclb
repz
push
mov
mov
jmp
lods
out
push
ret
push
pusha
in
decl
add
mov
lcall
andl
inc
cltd
add
pop
outsl
es
addl
negb
add
jmp
jb
push
rorl
push
or
mov
fbstp
int
cmp
jns
cmp
xor
les
mov
es
jge
and
pop
mov
push
xchg
mov
repnz
fnstsw
imul
leave
push
pop
xor
ljmp
adc
xchg
inc
push
rcll
mov
pop
adc
mov
sub
or
or
cltd
shll
or
leave
shrb
imul
add
xchg
cmc
sub
stos
cmp
stos
stc
sti
push
lret
fsubrs
or
lret
daa
in
lea
lahf
jns
sar
sbb
or
iret
inc
cmp
add
sub
or
in
push
aad
rcl
push
mov
fcoml
jle
cmp
scas
imul
jle
push
daa
inc
inc
std
mov
and
pop
lea
int
xor
outsb
adc
and
mov
cmp
lea
pop
outsl
mov
in
ss
out
jmp
cmp
adc
mov
adc
pop
fwait
sbb
push
pop
pop
loopne
out
sub
add
push
jbe
xchg
ret
lea
xor
cwtl
jae
call
xchg
fwait
cmp
sti
std
mull
jne
popf
push
cmc
sbb
into
push
insb
add
cs
and
scas
mov
dec
std
mov
sarl
lea
cmpb
adc
gs
dec
sub
mov
icebp
popl
mov
jne
rcrl
out
mov
lock
pop
lods
mov
fs
rolb
and
dec
mov
dec
mov
and
and
sbbb
adc
push
or
xor
xchg
mov
mov
jmp
rcrl
imul
gs
repnz
cmp
push
inc
bound
out
stos
scas
sub
mov
std
xor
cmp
or
testl
hlt
fwait
lods
test
dec
sahf
xchg
js
push
aas
sbb
add
fstpt
mov
adc
std
sbb
stos
cld
loopne
jmp
adc
sub
xacquire
pop
sub
rcr
sub
push
xor
mov
lods
int
inc
sub
pop
jmp
lret
dec
xchg
inc
lea
mov
dec
adc
mov
xchg
push
imul
pop
mov
test
xor
inc
fistl
mov
push
std
pop
fwait
test
adc
and
xchg
fstpl
cltd
roll
dec
adc
icebp
inc
aad
into
pop
mov
dec
mov
sbb
pop
lea
loop
clc
bound
std
mov
roll
push
mov
jnp
lods
adc
fmul
xor
sbb
push
mov
dec
decb
rcrl
pop
leave
push
dec
adc
movsl
sub
lods
sub
xchg
xor
and
ja
pop
adc
fbstp
imul
out
jbe
mov
std
mov
inc
testb
xorl
fcompl
lea
push
push
daa
add
rorb
hlt
pop
popa
js
fisubs
pusha
loopne
cmp
mov
cmp
or
and
stos
ja
aam
mov
jne
sbbl
and
fwait
cmp
mov
inc
jge
aaa
out
lret
mov
push
std
cwtl
incb
pop
mov
push
mov
sbb
psraw
loope
mov
dec
push
mov
xchg
xor
ret
sbb
lea
rorl
jne
sti
mov
xorb
imul
pop
sub
add
xor
mov
xchg
divb
cmp
mov
xchg
fmuls
dec
pop
int3
test
sbb
scas
popa
das
cld
fidivrl
aam
rcr
popf
jne
js
mov
push
push
inc
adcb
push
add
push
push
dec
cld
imul
mov
mov
pop
test
out
sti
and
pop
ret
loope
or
adc
pop
scas
and
pop
and
imul
mov
mov
inc
push
sbb
sbb
std
scas
pop
xor
push
aad
adcl
repnz
push
ds
fwait
sub
std
pushf
or
mov
jnp
cli
adcb
mov
scas
xchg
imul
inc
aas
mov
leave
jns
cli
int3
in
push
shl
test
push
cli
stos
scas
icebp
aaa
imul
push
and
ret
fs
repnz
rolb
lea
fdiv
sub
xchg
loop
adc
push
lds
ljmp
imul
rcrl
js
or
jl
jnp
pop
icebp
out
std
mov
loop
and
add
push
js
push
jne
and
mov
pop
mov
loopne
inc
int
or
push
mov
popf
or
arpl
pop
dec
dec
aam
sbb
test
mov
jg
fisubrs
mov
and
fcoml
std
add
pop
dec
adc
loope
xlat
jbe
dec
std
dec
movsb
mov
adc
adc
add
lret
cld
jp
jecxz
shrl
add
in
push
jno
loopne
mov
fwait
pusha
enter
imul
adc
and
and
insb
imul
mov
fs
jecxz
leave
jb
jb
pop
mov
jns
jl
pmuludq
mov
adc
call
sarl
imul
adc
jno
arpl
adc
pop
aam
xchg
lock
pusha
jg
aad
jge
push
jae
loop
into
data16
pushf
es
pop
lea
jg
inc
and
std
mov
lret
or
sbb
adc
ret
ficoml
int
pop
pop
add
ja
test
imul
rcrb
mov
call
pop
push
push
jns
pop
call
add
lock
ss
scas
xchg
adc
aas
movsl
xor
xor
and
in
popf
sbb
gs
and
div
pop
lea
push
rorb
mov
push
nop
aad
pop
std
or
lods
cmp
orl
jp
fldcw
rol
insl
leave
lcall
enter
fldcw
mov
mov
pop
imul
shll
fidivrl
stc
cli
xor
lods
aad
lock
shrb
ds
fs
mov
add
in
aam
jl
push
cmp
mov
addr16
push
or
cmp
loopne
pusha
mov
data16
scas
loop
sub
add
sarb
mov
sub
cmp
xor
movsl
jo
jbe
popa
pushf
data16
loopne
repz
dec
dec
add
jno
pop
fucomi
imul
clc
push
imul
mov
push
mov
adc
lea
pop
jl
out
inc
add
xchg
push
adc
fstl
stos
adc
adc
fidivrs
add
dec
hlt
or
xchg
sbb
nop
jge
rcrl
push
int
stc
fs
and
lea
pop
push
push
or
adc
pop
mov
xor
rcrl
xor
xchg
pop
pop
push
push
jo
jbe
push
sub
add
movswl
shrl
push
inc
sbb
dec
stc
xchg
lcall
loope
or
ss
cmp
std
push
gs
dec
or
lret
cmpb
inc
mov
xorl
and
std
xchg
lret
shrl
aaa
inc
pop
int
jg
test
inc
icebp
ffreep
mov
test
jle
dec
dec
xchg
stc
mov
into
add
rcl
or
sub
pop
movb
add
xor
call
lret
jo
je
mov
mov
inc
mov
jge
lds
lea
xchg
std
push
outsb
sbb
mov
into
stc
mov
out
and
mov
push
sub
in
loopne
dec
stc
cmp
scas
adc
jo
sbb
jae
lcall
test
push
js
jmp
es
fisubrl
xor
stc
out
jp
shrb
ficoms
test
jge
imul
das
sbb
or
std
clc
sub
cltd
dec
test
loop
add
adc
cmp
inc
je
popf
mov
cwtl
sbb
xchg
sub
aas
or
fwait
popf
lea
jl
add
in
cmp
jno
jmp
test
xchg
jne
insb
adcb
xchg
inc
pop
scas
add
lcall
jae,pt
pop
cmpsb
orb
popf
jno
loope
fldcw
subb
insl
cltd
inc
imul
add
inc
xor
imul
jmp
inc
pushf
cmp
lds
aam
jge
add
jecxz
test
call
icebp
mov
gs
lods
xor
xchg
lds
lods
rolb
adc
enter
dec
andnps
cli
add
int
dec
adc
xchg
test
xchg
scas
popa
aad
in
jecxz
pop
cmpsl
hlt
cmp
arpl
rorb
repnz
loopne
cmp
repz
xlat
add
bound
lahf
scas
jg
fwait
or
or
outsb
jbe
cmp
insb
enter
sub
lea
test
popa
push
and
repz
cld
imul
es
in
push
rorl
push
adc
js
push
mov
imul
lea
outsl
sbb
inc
rcll
mov
pop
sahf
adc
repnz
xchg
mov
push
pop
cli
bound
fstpt
test
adc
in
or
adc
clc
push
imul
mov
sbb
inc
rorb
out
cmp
dec
repnz
sar
add
cli
loopne
loope
lea
dec
dec
sti
test
test
lock
rcll
jnp
andb
insl
leave
pop
fwait
sti
cltd
mov
imul
int3
fstps
cmp
xchg
dec
leave
and
xchg
push
dec
adc
cld
icebp
addr16
cmp
les
sub
push
add
and
jp
mov
mov
xchg
push
loop
adc
push
test
sbb
or
out
xor
and
add
xchg
mov
mov
push
inc
mov
shl
xor
mov
lahf
fs
test
insl
rolb
in
or
fdivrp
push
add
xor
adc
pushf
rcrl
add
xor
out
repnz
cmp
fbld
lret
inc
mov
outsb
cmp
incl
outsl
xchg
fsts
sarb
pop
or
faddl
xor
mov
inc
xor
imul
shrl
jp
scas
mov
mov
pop
mov
sti
js
adc
jne
jecxz
sbb
adc
imul
jns
sbb
adc
xchg
and
lds
test
std
ret
loopne
jo
mov
int3
mov
mov
fstl
imul
and
add
mov
mov
jne
add
jmp
clc
adc
dec
add
dec
test
jmp
pop
jbe
imul
pop
mov
cmp
jp
jb
pop
call
adc
jmp
mov
adc
xchg
dec
cmc
push
shrb
lea
int3
or
dec
fprem
ds
std
xor
push
iret
xchg
scas
push
or
sbb
aaa
std
mov
popf
xchg
xor
add
call
jnp
cwtl
jp
lcall
xchg
push
mov
imul
repz
sbb
xchg
stos
fisubl
inc
xorb
jge
vucomisd
fisubrl
pop
aam
insl
int3
push
les
sbb
aam
das
lods
cld
rcll
std
xchg
daa
mov
sbb
fs
adc
xchg
xor
pop
pop
sbb
fistpll
push
lods
pop
ret
in
imul
ljmp
in
mov
dec
and
js
imul
jnp
sbb
add
enter
mov
ret
pop
xchg
es
mov
lcall
or
sub
movsl
imul
dec
jno
call
push
cld
cmpsb
jo
frstor
pop
push
jp
fs
inc
test
decl
jns
push
mov
cmpb
xchg
jl
xorb
ds
stc
aaa
testb
ficoms
mov
cmpsl
je
pop
inc
dec
mov
jne
sbb
pop
sub
imul
in
add
adc
jno
xor
or
les
add
hlt
fidivrs
lret
mov
rolb
mov
mov
sub
orl
push
adc
mov
xchg
ficoml
sti
nop
scas
cmc
sbbl
data16
outsb
and
ror
jmp
popf
add
gs
je
pop
outsl
test
pop
sbb
clc
rep
lea
in
xchg
cmp
mov
lret
filds
adc
es
sub
sbb
insb
lods
or
pop
sub
std
cli
imul
shlb
in
dec
jl
out
je
or
out
lret
inc
ljmp
lea
ret
fdivr
or
xor
insb
clc
xor
mov
cli
lods
lods
jge
es
xor
dec
push
je
jnp
insb
xor
mov
ret
roll
inc
add
mov
sbb
and
ljmp
inc
fcmovne
sti
leave
daa
idivb
adc
pop
mov
insb
xchg
ljmp
or
jns
std
insb
or
jb
lea
ffreep
popf
test
jmp
ljmp
out
push
lods
pop
adc
add
nop
add
fsub
dec
cmp
adc
std
movsb
fs
or
mov
js
jbe
outsl
stc
insl
scas
jnp
cld
xorb
fisubrl
adc
mov
testl
cmc
insb
es
jno
in
sarl
sub
outsb
dec
ret
adc
mov
or
hlt
mov
sbb
push
fcompl
std
xchg
mov
adc
stos
test
mov
dec
mov
shrl
inc
dec
bound
xor
fbstp
fwait
mov
fildll
mov
jne
ja
inc
hlt
imul
shlb
sbb
push
lds
push
xchg
jge
and
add
dec
scas
lods
das
test
xchg
mov
dec
sub
push
dec
cmp
jle
or
enter
mov
insb
mov
std
and
fstl
adc
dec
das
arpl
out
imul
adc
xor
in
ss
xlat
sbb
push
imul
loopne
jg
shrl
inc
dec
xchg
repnz
negl
enter
xor
mov
std
lock
and
in
test
addl
sub
pop
std
sahf
inc
cmp
loopne
int3
mov
inc
movsb
xor
pop
out
xchg
test
jbe
push
arpl
add
sub
mov
or
xchg
dec
inc
repnz
sti
push
pop
fwait
jbe
das
adc
lea
jmp
xchg
dec
ja
mov
mov
and
dec
std
shrb
xor
imul
mov
loopne
out
add
pusha
stos
mov
insb
dec
shll
cmp
mov
imul
dec
xchg
mov
int
stos
or
cmp
pop
inc
adc
pop
sbb
repnz
lret
jo
mov
push
cli
mov
gs
dec
push
movsb
inc
push
jge
cli
dec
fnstenv
repz
daa
mov
int3
test
add
scas
push
scas
movsb
mov
mov
xchg
dec
inc
aas
jl
mov
or
stos
insl
cmp
push
shl
add
push
sbb
int
out
dec
loopne
jnp
adc
ljmp
call
orb
add
adc
rcll
push
lds
adc
gs
std
xor
fwait
ljmp
imul
xorl
push
mov
pop
mov
xchg
and
mov
lods
push
test
int3
out
push
dec
test
into
stos
mov
movsb
jge
push
addr16
or
lods
sarl
cmc
xor
push
push
cmp
leave
cmc
in
xchg
pop
leave
les
jmp
aaa
out
imul
cmp
xor
push
insb
outsb
mov
add
mov
into
jno
lods
bound
or
adc
addl
push
loop
roll
jmp
popf
out
cmc
mov
lahf
lea
xchg
stc
ss
fcoml
cmp
lock
jnp
add
xchg
rolb
lahf
and
jecxz
std
xor
and
mov
fsubl
mov
mov
jg
mov
arpl
pop
addr16
sbb
jne
jnp
sarl
mov
loopne
xor
imul
sub
orl
mov
lock
mov
adc
xor
cmpsl
adc
inc
pushf
imul
pop
repnz
push
std
or
out
push
cmpsb
jmp
push
or
adc
adc
mov
inc
and
mov
int
mov
cmp
xchg
jns
imul
inc
outsl
les
std
adcb
jg
xchg
pop
popf
frstor
and
clc
xor
xchg
fldln2
mov
icebp
data16
pop
mov
out
xchg
or
call
rorb
sar
loop
stos
sbb
outsl
std
dec
mov
mov
enter
mov
fnsave
cmp
lcall
xchg
add
add
sbb
fildll
addr16
movsl
adc
lret
sub
and
mov
xor
or
mov
xor
rcl
mov
cmp
adc
mov
inc
in
cmc
ja
mov
inc
mov
jnp
push
ffree
decb
imul
adc
sub
out
pop
in
mov
fildll
out
iret
push
jbe
fisttps
mov
push
push
or
xor
xchg
cli
shlb
imul
pop
cmp
cmpsb
pop
std
mov
into
jno
imul
stos
mov
test
sbb
ljmp
sahf
xlat
cmpsb
adc
idivb
movsl
int
out
sub
rcrb
scas
xchg
ljmp
xchg
insb
push
dec
imul
movsl
jg
ja,pn
mov
daa
shr
adcl
cltd
push
popa
out
test
add
lret
aad
and
jl
xor
rcl
or
or
insb
stos
cltd
jb
jecxz
add
add
and
xchg
popf
pop
lods
inc
and
lds
adc
dec
sub
or
jb
push
mov
sub
pop
jnp
imul
lods
jbe
pop
dec
xchg
adc
int
add
in
imul
fcoms
pop
std
lahf
jbe
cwtl
stos
push
add
push
rcll
or
mov
fwait
add
sub
fldl
push
xchg
or
stos
inc
shll
push
xor
call
mov
repz
mov
xchg
mov
scas
iret
lea
int3
int3
sbb
adc
jl
lahf
mov
mov
out
rcll
mov
xchg
adcb
jnp
xchg
gs
and
xchg
loope
aam
or
icebp
sahf
ja
sub
jo
out
shll
shll
mov
bound
fnsave
aaa
out
imul
mov
mov
shll
inc
stc
push
pop
pop
push
inc
dec
pop
loopne
sub
dec
jbe
loopne
fmull
daa
add
stc
dec
xchg
fisubrl
add
adc
cmpsb
pop
add
imul
jge
lock
cmp
mov
sub
jns
stos
pop
insb
addb
push
ror
enter
pop
or
pusha
mov
addr16
mov
icebp
jnp
aam
sahf
cmc
mov
dec
push
leave
in
mov
xchg
lods
testl
adc
adc
lret
or
pusha
mov
push
add
adc
push
cmpsl
cli
adc
je
add
and
sti
inc
xchg
or
xor
out
inc
int3
sbb
xorb
cmc
aam
mov
mov
dec
xchg
push
pop
push
adc
jb
imul
xchg
lret
outsb
fucomp
xchg
jecxz
fs
mov
pop
adc
or
push
std
jg
sbb
pop
and
popa
mov
rolb
mov
xchg
adcb
fs
cmp
or
out
jo
shll
xchg
jne
imul
lock
jmp
xorb
ret
cmpsb
shrl
stos
cmpsl
nop
and
adc
and
push
repz
xchg
je
add
popa
push
or
add
push
or
add
lea
mov
or
into
push
sub
inc
std
ds
pop
mov
imul
push
jge
insb
sahf
fcomi
shl
sub
lea
dec
insl
dec
scas
lcall
and
push
mov
lods
push
insl
or
cli
jno
ret
add
in
push
mov
icebp
pop
lea
and
dec
sbb
and
mov
lahf
mov
mov
aaa
aaa
add
xchg
push
je
lret
scas
push
cmp
mov
cmpsl
lea
jge
adc
test
orl
jecxz
ja
rorb
jg
adc
or
or
xor
call
or
imul
aad
lcall
jo
jbe
sub
imul
inc
push
ljmp
frstor
push
or
mov
stos
stos
adcl
inc
xor
imul
mov
rcl
aam
out
cmp
jmp
int3
mov
rcrb
xor
inc
call
cwtl
lea
xchg
inc
cmpsl
repnz
loope
adcb
outsl
push
sbb
shlb
std
dec
lods
jge
mov
loop
mov
cmp
sbbb
sbb
outsl
sti
cld
push
insb
jno
push
and
cwtl
imul
xor
nop
test
pop
sti
add
adc
pop
aad
sbb
fwait
jge
shrl
and
loop
and
imul
adc
mov
cld
dec
dec
addl
add
imul
sahf
mov
or
xor
cmp
incb
sub
adc
sbb
adc
sbbl
fidivs
pop
std
xor
popa
in
cmp
xor
lea
xor
arpl
cmp
pop
subb
sbb
mov
xchg
loopne
sbb
and
js
adc
mov
scas
imul
jge
mov
andb
cmc
push
jo
icebp
xchg
or
cmpsb
bound
stc
push
cmp
in
fldl
mov
mov
and
mov
inc
mov
popa
dec
fnstsw
ret
in
jmp
sarl
or
lods
fsubl
xchg
ja
pop
lods
or
jnp
xor
mov
sub
je
lcall
popa
or
mov
sub
xchg
sbb
dec
addr16
je
mov
mov
lds
data16
orb
cmp
ss
imul
sub
in
add
js
jne
mov
test
loop
aad
daa
ljmp
push
pop
dec
add
sbb
clc
fdivrl
sahf
lcall
arpl
xchg
sub
jle
push
sub
sub
mov
cli
lcall
std
lret
rolb
lock
push
push
adc
or
sti
mov
lods
stc
cli
mov
popf
push
adc
cmp
ret
or
ret
dec
std
cltd
and
adc
lea
mov
adc
push
lods
sub
xor
xlat
jb
xchg
cmpsl
sbb
jecxz
imul
inc
cmp
cmp
sbb
cmpsb
fchs
cmp
or
out
gs
dec
ljmp
hlt
sub
adc
aaa
push
int
push
push
std
insl
lahf
cmp
movd
jb
fnstenv
pop
imul
test
pop
cli
rcrl
outsb
lds
dec
std
mov
push
mov
lea
negl
adc
fldenv
xchg
jge
sahf
jge
stc
call
push
mov
pop
push
dec
mov
test
sti
in
call
jo
pop
xor
test
std
dec
sub
sahf
scas
xchg
pushf
lea
clc
jnp
scas
xchg
adc
jle
xor
xor
stos
or
std
mov
or
mov
sub
sbb
iret
sub
lret
iret
fisubrl
stos
out
jecxz
adc
lods
push
sub
and
push
daa
sbb
adc
mov
sbb
stos
into
popf
loope
mov
or
sub
lea
or
sti
dec
mov
js
adc
subb
imul
adcl
xor
push
icebp
imul
mov
rclb
or
pop
push
notl
fwait
adc
mov
push
jecxz
sub
xor
out
xchg
mov
cli
mov
add
insl
mov
addb
test
sysret
adc
sub
stc
add
icebp
arpl
ret
push
andnps
and
popf
mov
mov
xchg
push
movl
lock
inc
add
enter
push
test
movsb
dec
sub
addr16
mov
adc
lahf
dec
and
rclb
enter
mov
jno
jb
cld
mov
pop
pop
leave
outsl
fnstenv
xchg
leave
jae
inc
jmp
sub
and
pop
lods
pusha
adc
sbb
movsl
out
add
js
jae
xchg
mov
dec
in
vpandn
sub
and
mov
xor
subb
mov
insb
or
jne
mov
jg
std
and
push
push
sbb
call
push
fs
cmpsb
jns
loopne
and
dec
dec
gs
popf
xor
xlat
push
cmc
dec
adcl
adc
jmp
pop
push
sub
mov
leave
adcb
ret
pop
or
mov
jne
xchg
repnz
and
push
cmp
xchg
mov
or
int
xor
mov
ss
dec
push
les
movsl
jns
mov
and
insl
adc
test
xchg
adcl
sbb
lea
cmp
pop
scas
decl
lret
or
sub
mov
dec
fs
rcrb
jmp
adcl
imul
sarl
gs
fs
stos
adc
popf
lcall
jno
test
adc
pop
xchg
lcall
imul
popf
push
cwtl
push
push
or
loopne
loop
pop
fldt
jne
adc
je
inc
ret
jge
mov
imul
inc
jmp
mov
jb
in
add
or
test
adc
pop
xor
cmp
cmp
pop
sub
pop
imul
push
hlt
push
jg
xlat
ret
cmp
push
outsl
dec
shl
push
dec
adc
rclb
xchg
out
dec
ljmp
rclb
jnp
xor
rcll
arpl
cltd
imul
aaa
cmp
cld
scas
push
loop
jne
xor
stos
int3
pop
enter
mov
daa
nop
jge
stc
imul
sti
mov
std
repz
inc
rcll
cmp
inc
pop
cld
imulb
mov
lods
and
in
jns
pop
cmc
lea
imul
adc
repz
pop
mov
adc
sarl
popa
adc
hlt
mov
mov
xor
out
je
ja
or
rcll
shlb
loope
sbb
in
sub
mov
jb
mov
adc
es
lret
jmp
xor
and
lock
std
inc
ret
test
jo
mov
jae
in
cmp
test
pop
push
dec
pop
sub
stc
stc
packssdw
sbb
and
pop
sbb
or
sbb
add
fnsave
and
sbb
xor
popa
jbe
adcb
mov
sub
pushf
jmp
mov
les
ljmp
adc
in
push
mov
and
adc
jne
lds
dec
int3
adc
test
adc
pop
subb
loope
dec
lea
data16
int3
outsb
testl
mov
or
jmp
mov
add
jmp
enter
pop
sbb
mov
icebp
mov
js
or
xor
pop
enter
mov
aam
pop
pop
fcoms
xchg
into
and
imul
das
and
aas
lcall
push
push
xchg
lock
mov
imul
in
pop
pusha
inc
std
dec
pop
dec
into
jnp
and
int
cmpsb
jl
test
push
out
arpl
inc
xor
or
push
xor
xchg
call
int
sub
repz
bound
jno
imul
fs
std
rcl
aam
lds
jle
push
lea
add
out
loope
std
mov
loope
ret
xchg
daa
pop
jnp
cmp
aad
add
cmpsl
imul
push
cmp
jb
insb
std
adc
movsb
mov
cwtl
jbe
lea
loopne
sti
push
dec
mov
jne
sti
mov
das
in
lea
loopne
xchg
add
lret
std
adc
aaa
icebp
movsl
adc
outsb
loope
sbb
int
xchg
adc
and
adc
negb
dec
int3
mov
push
pop
mov
popa
pop
push
push
push
adc
out
dec
xor
mov
mov
int
xchg
pop
repnz
nop
or
inc
add
cmp
adc
adc
jge
push
or
les
cmpsb
xor
xorl
std
je
add
shrl
mov
call
cli
pop
std
mov
adc
imul
jge
repnz
mov
std
aam
das
jmp
adcl
pop
xchg
sbb
std
push
mov
ljmp
orl
insl
mov
shrl
and
mov
scas
call
test
cmp
sub
aaa
push
mov
pop
push
xchg
jge
push
or
xor
inc
pop
cli
mov
sub
movsb
adc
pop
pop
xchg
std
jmp
shrb
mov
fldl
xor
add
iret
pushf
adc
insl
fs
nop
repnz
iret
sbb
and
push
mov
dec
sbb
lea
gs
mov
push
adc
cs
mov
imul
sti
int3
fidivrl
jmp
dec
add
mov
pop
in
lea
sbbb
and
xchg
shll
xlat
add
jo
sbb
popf
pusha
repnz
push
loope
xlat
out
sbb
popa
mov
test
icebp
sbb
cmp
xor
stc
xchg
mov
mov
loope
jb
scas
jg
xor
mov
icebp
cmp
sub
sbb
sbb
pop
push
sbb
mov
add
cmpsl
out
adcl
pusha
clc
ret
cwtl
inc
sti
cs
shll
cmp
push
jl
lea
jge
or
pop
inc
pop
ret
cmpsl
push
jo
adc
jb
aad
ja
sbb
mov
mov
xchg
jecxz
sahf
sub
sub
xor
addr16
mov
jns
adc
pop
adc
lea
movsl
jge
add
sti
pop
jl
dec
xchg
lcall
push
insb
insl
pop
jne
add
in
mov
push
psllq
push
out
inc
or
lret
jbe
lret
push
movsb
xor
add
adc
mov
xor
ret
fstp
test
xlat
sbb
in
in
imul
dec
roll
mov
adcl
jbe
lcall
mov
ficoms
popf
ja
jns
out
imul
aad
loope
andl
jmp
add
insb
mov
dec
jl
ljmp
sub
sbb
mov
mov
lea
insb
stc
fildl
movsb
stos
xchg
pop
inc
mov
gs
cmp
mov
adc
repz
adc
cmp
out
or
ljmp
daa
xor
repz
fs
add
adc
adc
insl
mov
addr16
lods
gs
aas
push
add
roll
das
inc
push
xor
push
shl
add
repz
stc
pop
outsl
push
mov
mov
push
sub
sbb
dec
pop
test
or
inc
mov
fnsave
fisubrs
jmp
and
inc
ret
mov
out
mov
ds
jnp
mov
adc
or
leave
adc
cli
call
imul
xchg
push
pop
jecxz
dec
cli
jge
jl
dec
popa
aad
dec
dec
jbe
out
sub
sbb
sub
xchg
jb
push
sbb
leave
and
dec
cld
cltd
adc
loop
popa
add
inc
push
jge
pop
rcr
sub
hlt
mov
in
jecxz
push
std
lahf
or
loopne
fwait
imul
add
inc
mov
cmp
shrl
adc
clc
lret
adc
std
mov
lods
out
aaa
or
adc
ja
std
xor
std
inc
movsl
jmp
mov
cltd
loope
cmp
xchg
inc
out
test
jge
pusha
nop
jg
or
cmpsb
jle
imul
sti
std
sbb
sub
jmp
sub
xorb
stos
sub
mov
jecxz
mov
adc
jmp
test
jns
inc
mov
lcall
fnstcw
sbb
je
jge
in
mov
insl
cwtl
dec
pushf
rcr
loop
mov
adc
cmpl
or
incl
pop
sbb
lods
mov
push
lahf
or
cltd
xor
cmc
cld
jbe
dec
scas
push
bound
push
test
add
push
fldcw
clc
adc
rol
cmp
mov
xor
hlt
gs
flds
test
leave
push
loope
movhps
mov
cmp
jmp
imul
scas
std
inc
adc
aad
jbe
lock
pusha
pmulhw
sti
flds
push
lret
xchg
pusha
rorb
cmp
iret
cmp
cmp
test
xor
push
and
sub
inc
and
sarl
icebp
dec
jbe
xchg
je
xchg
cmp
jbe
stc
pop
inc
xorb
or
imul
mov
std
mov
xlat
or
lcall
and
jl
subb
and
and
enter
mov
xor
std
jle
aam
mov
sbb
mov
out
fwait
sub
mov
faddp
aam
lods
das
sub
sbb
jg
sahf
cld
sbb
orl
jno
fnstcw
pop
std
jae
aad
cltd
xchg
push
or
dec
into
mov
repnz
xor
jo
xlat
or
mov
mov
cmp
add
ffreep
imul
mov
loop
mov
cmp
cmc
in
xchg
pop
mov
mov
or
push
ss
push
dec
jbe
push
mov
sbb
bound
mov
jmp
movsl
pop
mov
jecxz
xchg
jmp
imul
mov
rcr
mov
stc
pop
scas
out
cs
pop
jp
fstl
mov
sub
jle
and
imul
push
gs
or
add
inc
adc
push
push
test
mov
ljmp
pop
fsubrl
inc
lret
cmp
imul
mov
inc
sbb
sub
push
mov
into
inc
imul
insl
or
loope
cli
dec
bound
push
addb
lret
movsb
jbe
cmp
repz
push
hlt
imull
pop
sarl
lods
std
xchg
push
out
gs
jne
lea
push
xlat
mov
cmp
into
imul
jne
adc
cmp
fidivrl
je
lods
cltd
jo
sub
xor
mov
insb
fcompl
popf
jecxz
mov
adc
cli
or
lret
xchg
cli
ficomps
cmp
mov
push
cli
stc
or
mov
push
sti
ret
popa
lods
scas
negl
dec
cmp
or
ret
jbe
adc
stos
rorl
xchg
sub
mov
imul
mov
loopne
push
adc
gs
stos
xor
fstpt
mov
rcll
mov
or
imul
sub
xor
inc
stc
or
pop
adc
lahf
add
popf
lret
movsb
into
and
imul
cmp
cmpsl
and
stc
xor
pop
push
mov
fildl
movsl
sub
outsl
xchg
hlt
mov
data16
es
aaa
sbb
std
push
cmp
mov
push
andl
push
rclb
ja
in
icebp
cmc
sbb
insl
imul
pop
jno
sub
pop
adc
jo
int
cmp
sbb
rorb
cld
movlps
push
and
imul
xchg
push
and
xlat
out
push
imul
arpl
jae
add
dec
out
loope
addb
lods
inc
add
enter
xchg
repnz
sub
jecxz
mov
mov
sahf
rorl
mov
pusha
cwtl
stc
data16
clc
int3
ret
ja
pop
out
sub
mov
cmp
xor
lods
adc
or
imul
and
clc
xor
add
xchg
insb
mov
pushf
gs
dec
pop
xor
and
push
sbbb
subl
std
insb
ja
mov
add
mov
mov
pop
cld
lods
push
mov
in
daa
jg
inc
pop
sub
mov
add
mov
sbb
sbb
loopne
jbe
loope
shl
sbb
pushf
outsl
orb
stc
jo
mov
push
mov
jnp
sub
or
mov
imul
push
outsb
imull
call
cli
test
lods
inc
shrb
push
in
sbb
mov
push
lods
mov
inc
xchg
aaa
xor
add
add
mov
add
push
xor
inc
aad
leave
mov
shlb
lea
jecxz
in
cmc
orb
arpl
mov
xor
mov
sub
mov
data16
imul
and
xor
stc
loopne
das
xchg
sti
cmp
sub
inc
and
cmc
clc
adc
push
or
gs
xlat
jmp
and
ss
out
and
xor
mov
jecxz
jge
sub
std
cmp
mov
mov
sub
sbb
imul
shr
add
mov
movsl
xor
mov
inc
or
jb
std
or
aaa
jle
push
cmp
cli
xor
sbb
jmp
mov
ret
std
sub
pushw
jg
clc
sbb
les
jne
jmp
xchg
adc
push
xchg
sub
xchg
or
adc
cmpb
loop
data16
dec
repz
sub
jmp
imul
cs
fs
std
adc
aad
xor
js
sub
jb
jne
jns
add
cld
mov
or
test
push
jmp
sub
and
outsb
dec
cmp
or
sbb
jmp
insb
fstpl
xchg
xchg
imul
pop
jmp
cmpsb
loopne
push
out
into
xchg
sub
lds
cld
sub
push
nop
daa
sbb
jge
and
pop
sub
icebp
pop
imul
fidivs
insl
stc
dec
pop
mov
mov
rol
dec
adc
call
adc
jle
mov
leave
cmpsb
sub
and
in
xchg
sbb
jne
mulb
rol
inc
mov
push
loopne
or
and
lea
mov
int
shrb
push
and
rcll
fstpt
out
mov
mov
stos
vpshaw
mov
test
lods
subl
test
dec
mov
fwait
dec
out
into
mov
insb
js,pn
insl
lds
std
jns
clc
adc
pop
jg
iret
pop
jno
inc
jmp
mov
mov
push
in
add
xchg
stc
jge
mov
lret
std
pop
and
jae
xchg
sahf
lock
sahf
sub
mov
xchg
int
dec
addr16
xor
lea
popa
mov
mov
xchg
cmp
dec
sbb
imul
sti
test
std
je
std
or
movsl
mull
mov
inc
jmp
or
jmp
push
dec
cltd
arpl
inc
pushf
repnz
pop
ljmp
setnp
lea
inc
mov
xchg
inc
cmp
pop
inc
ret
popa
mov
lea
lds
into
jnp
mov
arpl
lock
leave
fnstcw
mov
dec
repnz
outsl
cld
scas
decl
xchg
mov
sub
dec
fs
rolb
and
bound
repnz
mov
dec
pushf
es
inc
imul
and
inc
sbb
std
cli
int3
enter
lea
stos
sub
arpl
int
cmp
lea
sbb
imull
mov
push
dec
outsb
stc
scas
cli
mov
mov
test
cld
adc
xchg
outsl
jg
dec
movsb
stos
lret
sbb
jl
fs
push
sub
dec
adc
jmp
sub
imul
cmc
cmp
add
xchg
adc
inc
push
sbb
or
incb
sub
repz
insl
pop
pop
dec
nop
bnd
mov
mov
adc
add
cmp
sub
xchg
dec
adc
xor
pop
cmp
cmpsl
pop
gs
adc
sub
iret
xchg
aaa
sti
mov
add
pushf
leave
adc
cmp
add
in
repz
loop
adc
mov
leave
lahf
shlb
adc
cld
std
sbb
xchg
jmp
test
push
or
sbb
xor
xchg
jb
loop
sbb
sti
daa
popf
movsl
imul
ljmp
dec
mov
leave
jg
add
sbb
jg
negl
test
adc
xor
push
pushf
and
pushf
dec
imul
sub
insl
push
push
cld
xchg
lret
add
mov
and
pop
shll
mov
mov
adc
andl
mov
inc
xor
xor
cmpsb
cld
and
xchg
out
adc
mov
sub
fmull
xor
add
sub
arpl
mov
jbe
ret
mov
sub
dec
call
mov
push
push
xchg
push
dec
std
xlat
jp
stc
loop
pusha
loopne
shll
ret
cmp
push
and
push
mov
pop
fsub
jno
call
pop
popf
into
dec
mov
dec
imul
push
andl
gs
popa
sbb
lahf
jb
dec
mov
imul
pop
sub
or
arpl
jbe
mov
or
mov
xchg
addr16
orb
into
es
mov
cmpl
fcmovnb
and
jle
out
insl
bound
fs
cmp
in
shlb
jmp
jecxz
popa
test
std
xchg
sbb
out
or
jno
imul
adc
enter
testb
adc
pop
xchg
jo
ret
pop
push
mov
mov
jmp
or
push
loope
push
push
inc
inc
lea
imul
push
or
fbstp
mov
mov
jns
mov
pusha
imul
sbb
or
xchg
repnz
std
cltd
dec
rclb
loop
cmc
rorl
xchg
ds
mov
pushf
xchg
sub
lea
jae
loope
xor
cmc
pop
orl
imul
mov
dec
popf
shll
xchg
lea
rolb
call
mov
imul
pop
xlat
sbb
inc
push
and
jbe
iret
jp
stos
in
jb
xor
outsb
xor
loop
sbb
mov
shl
sti
out
jge
lret
xlat
clc
adc
xchg
fxch
xchg
or
sub
shll
push
mov
mov
lods
cld
adc
add
adc
cmc
and
stc
pop
mov
push
test
sbb
dec
adc
stos
fsubl
stc
shr
aam
xor
jno
jmp
arpl
fstpl
mov
imul
sub
dec
addr16
std
icebp
loopne
out
decl
xchg
mov
adcb
jbe
in
push
cmp
outsb
adc
dec
sbb
dec
aaa
xlat
rcll
gs
inc
data16
arpl
jge
lcall
dec
test
pop
in
mov
sbb
mov
dec
cmp
push
ja
dec
clc
pop
in
xor
push
adc
loopne
mov
sub
sbb
addr16
orl
outsl
lea
mov
aam
add
xchg
add
push
rclb
imul
sbb
stc
sbb
inc
cs
add
jmp
rcll
lods
push
gs
bnd
imull
cmp
imul
repnz
push
cmp
push
push
std
aas
jb
stos
xorb
sub
inc
cld
pop
jno
push
adc
addr16
jmp
gs
lods
aas
cmp
push
icebp
cmpsb
std
insb
or
jbe
push
icebp
lea
lret
dec
pop
mov
adc
adc
out
cwtl
jns
xchg
outsl
shlb
rolb
jle,pt
jo
adc
dec
imul
adc
fiaddl
sbb
imul
test
jmp
xchg
out
adc
iret
adc
mov
adc
aad
xor
inc
xchg
sbb
lea
jl
fisttpl
ficompl
insb
or
jmp
cmpsb
xchg
aaa
in
xchg
inc
repz
push
insl
add
insb
adc
dec
insb
mov
mov
dec
leave
repnz
inc
ja
sub
push
imul
inc
fwait
cli
dec
inc
dec
cmc
aas
loope
adc
gs
mov
cmp
dec
gs
mov
and
aaa
xchg
cmp
xchg
cmp
bound
and
adc
shrb
adc
inc
mov
lcall
sbb
pop
pusha
pop
sbb
enter
aas
push
ret
jae
and
in
or
imul
xor
test
jbe
int
sbb
xchg
xchg
imul
imul
and
sahf
mov
cmp
mov
push
movsl
loop
mov
pop
pop
repnz
add
repz
jns
in
mov
push
leave
mov
in
std
aad
cmp
dec
in
std
jge
mov
xorl
sub
push
hlt
cld
or
popa
cwtl
or
bound
sbb
push
std
fcoms
mov
movsb
dec
mov
ljmp
subl
xchg
sub
shr
insb
je
shll
pop
sbb
outsl
and
sub
popl
sbb
mov
arpl
add
sbb
fsubr
movsb
ret
stc
jmp
xchg
imul
sbbb
mov
shll
icebp
stc
sahf
sub
test
insb
jne
cli
sub
ret
or
rcll
add
xor
xchg
dec
movsl
xchg
inc
xchg
push
add
int
jno
fdivrp
add
mov
imul
jmp
mov
pop
mov
mov
mov
ja
push
xchg
fcmovnb
mov
fnstsw
jnp
imul
test
jmp
jle
sbb
stc
push
or
in
push
adc
push
xchg
xchg
cli
cs
repnz
cmp
lea
mov
cld
push
nop
lret
les
mov
jnp
insb
outsl
jno
jmp
or
pop
out
lea
jne
push
mov
lods
and
inc
inc
xlat
arpl
or
xor
mov
in
xchg
jp
out
adc
insb
cld
insb
push
clc
sbb
jecxz
popf
repnz
jns
imul
repz
push
aam
shll
push
xchg
dec
lret
cmp
jae
sub
loop
cltd
push
test
std
sub
pop
cli
mov
ficomps
fistpll
lods
xor
loop
hlt
or
test
nop
add
add
sbbl
cwtl
lds
inc
sar
add
loope
xchg
jp
or
sbb
cmc
je
xor
jae
dec
xor
xlat
stc
xchg
loop
cmc
jns
xchg
idiv
add
dec
inc
cli
repnz
mov
ljmp
pusha
dec
sbb
sub
or
adc
lcall
add
jns
mov
cmp
dec
push
sbbl
std
inc
fs
add
jg
mov
or
xor
imul
cmpsb
push
pushf
jns
loop
dec
repz
ret
adc
jne
es
push
cmp
mov
insl
popf
mov
ret
cltd
and
sub
sbb
mov
shrd
push
dec
and
cmp
jmp
mov
shlb
jne
cmpsb
lds
sahf
sbb
adcb
mov
mov
adc
jns
test
mov
dec
add
pop
mov
push
popa
jmp
out
int
dec
ja
xor
adc
jae
inc
mov
std
lods
std
adc
rol
adc
push
mov
out
cmp
lret
sub
test
add
rorl
cwtl
sbb
adc
ret
les
sbb
das
decl
stos
lea
or
add
add
shl
mov
mov
hlt
adc
subl
adc
out
adc
lea
dec
fisttpl
add
jl
out
std
dec
jp
push
in
repz
cmc
js
cmp
icebp
ds
imul
jnp
out
fsts
adc
pop
add
adc
inc
int
aad
std
int3
cwtl
gs
cmpsb
mov
and
or
std
or
in
out
xchg
in
addb
dec
notb
pop
loopne
loope
fisttpll
out
test
test
xchg
xor
adc
add
cmp
xchg
imul
cmp
mov
call
icebp
aas
adc
pushf
cli
push
mov
orb
inc
loop
inc
cmp
call
mov
sbb
aam
jns
push
ds
xlat
cmp
xor
movsb
jge
mov
add
popa
cli
data16
aas
sbb
lahf
mov
ljmp
push
mov
mov
out
push
and
stos
and
mov
gs
bound
mov
adc
jmp
mov
fidivrs
imul
adc
jg
inc
int3
pop
std
fwait
mov
movsl
js
sbb
mov
jo
xchg
test
inc
mov
jle
mov
xchg
shl
xor
cmp
adc
rorl
insl
test
xchg
sub
mov
sbb
sti
xchg
add
sarb
sbb
pop
mov
icebp
dec
fwait
in
inc
inc
imul
out
xchg
adc
mov
add
jne
sahf
dec
clc
or
pop
rolb
mov
aas
or
daa
std
insl
sbb
enter
negb
lahf
xor
push
sbb
mov
xcrypt-ctr
cmpsl
pop
pop
leave
test
stos
or
repz
adc
imul
pop
or
pushf
sub
dec
dec
outsb
cld
popf
xor
fildl
sbb
push
das
fcmovb
jmp
popa
loope
lcall
or
testl
cmp
icebp
ja
icebp
dec
int
dec
imul
insl
jle
push
sbb
imul
adc
std
insl
in
push
or
or
lea
cmp
xchg
imul
jbe
test
or
out
xchg
jle
xor
mov
divl
out
adc
ficoml
push
push
sarl
mov
cli
cwtl
imul
punpcklwd
xlat
imul
mov
jb
fstpt
std
pop
adc
in
aas
adc
add
repz
bound
xorl
push
dec
test
and
xor
cld
icebp
push
add
mov
shlb
lea
adc
sub
test
ficomps
pop
inc
in
lea
ja
pop
adc
jae
pop
ret
nop
imul
add
mov
das
adc
sarb
orl
scas
cmp
adc
inc
push
cld
jnp
dec
std
sbb
dec
sub
xor
mov
mov
inc
out
xchg
stos
fdivp
and
jne
push
sbb
mov
dec
ljmp
dec
jns
repz
cmpb
sub
cmp
insb
mov
and
orb
sub
push
add
popf
and
fimuls
cld
fstl
or
insb
or
dec
cli
int
push
mov
call
xor
mov
jecxz
jg
scas
or
dec
mov
jo
arpl
iret
imul
divb
sub
cmp
jp
push
push
or
std
xchg
int
push
mov
jl
sti
cmp
int
pop
imul
or
jg
jnp
loope
int
jns
add
adc
lret
popl
int3
adc
push
mov
push
xchg
stos
lea
and
inc
rcr
adcl
orl
or
mov
mov
lds
gs
xchg
sub
frstpm(287
cmpsb
sbb
jmp
push
std
lods
leave
je
push
inc
mov
cmovbe
mov
inc
lret
sub
fwait
dec
push
cmc
loope
cs
loop
adc
ljmp
or
xor
addl
inc
jge
mov
mov
adc
test
rcrl
into
aad
inc
out
or
repz
movsl
test
imul
xor
cmp
mov
pop
and
and
mov
jno
jns
fdivrs
xor
mov
push
test
leave
je
dec
xchg
imul
xor
out
adc
sub
pop
test
sbb
push
in
jle
dec
jmp
mov
mov
decb
hlt
stos
sbb
xchg
sbbl
xchg
andl
std
mov
jecxz
jbe
aas
cmp
insb
dec
mov
mov
outsb
sbb
jns
out
cmp
rcll
std
push
cli
repnz
cmpl
rol
mov
pop
mov
dec
xor
cwtl
sub
cs
rcll
std
shll
xchg
sar
push
mov
add
and
cld
pop
adc
das
pop
repz
pop
push
and
cli
mov
mov
xchg
js
rcl
sti
or
ja
add
mov
jne
add
out
fiadds
push
cmp
adc
cltd
mov
or
sbb
out
out
rorb
inc
shl
push
inc
imul
call
jns
cmp
xchg
loope
mov
jmp
add
addr16
cmp
jl
cli
push
sub
sub
cmpsl
push
imul
lcall
mov
jo
cmpsb
je
mov
adc
mov
aas
mov
cmpb
test
jl
adc
dec
jmp
ret
test
or
cmp
cmpsb
je
gs
or
leave
xchg
mov
adc
mov
add
push
xchg
cmpsl
pop
dec
jg
stc
pop
adc
jmp
fildll
adcl
mov
sub
stos
xchg
sbb
jae
js
fs
dec
arpl
lea
add
push
pushf
adc
dec
popa
add
push
imul
push
push
std
xchg
mov
es
and
mov
fsub
mov
ficoms
push
out
loop
inc
cmp
sub
into
cmp
pop
jae
imul
pop
mov
std
adc
outsl
push
xchg
jno
cmp
int
cs
push
and
lret
xor
jmp
pop
fimuls
xchg
jne
xchg
leave
add
es
movsb
jge
in
repz
cld
or
lea
cltd
test
xchg
lds
adc
jle
fdiv
les
sub
push
or
add
in
sti
sub
cmp
imul
push
push
xchg
push
test
push
rclb
test
insb
lods
mov
mov
and
and
sbb
mov
jg
jns
mov
xchg
testb
xor
push
ror
int
sub
icebp
repnz
imul
cmp
in
or
ja
mov
in
loop
lret
cmp
pop
push
idivl
imul
stos
sub
mov
imul
test
addb
push
imul
fstpl
nop
fxch
stos
subb
testb
lock
std
pop
cwtl
dec
int
adc
sbb
mov
pop
mov
lods
push
pop
in
and
dec
push
jno
mov
popa
popa
lea
cmovnp
stc
xchg
pop
call
xor
or
adc
jae
or
dec
xrelease
sbb
mov
pop
inc
aaa
sbb
adc
sarl
or
jb
adc
mov
gs
iret
jnp
data16
in
push
pop
loope
adc
in
dec
sbb
repnz
mov
dec
call
setg
daa
orl
subb
sbb
lea
mov
cmp
cmp
popa
xchg
pop
fildl
or
stos
or
mov
and
dec
dec
icebp
cld
pop
repnz
lcall
cmp
mov
shl
and
jle
xor
and
rol
dec
mov
mov
dec
addr16
cmp
adc
int
imul
or
test
lahf
std
ss
mov
mov
xchg
repz
iret
mov
std
mov
popa
jg
xchg
cwtl
mov
mov
or
sbb
push
imul
mov
paddd
sbb
mov
das
cld
mov
iret
jge
inc
movsb
in
rorb
lret
or
cwtl
imul
mov
cli
push
lahf
jnp
add
mov
jp
imul
fsubr
adc
dec
mov
sub
inc
lret
jl
dec
imul
xor
adc
nop
je
imul
dec
dec
xchg
fs
int
pop
pop
ss
movsb
shlb
pop
jno
fsubl
lea
inc
popf
xchg
dec
nop
pop
dec
mov
cmp
push
sahf
in
popf
fdivrs
sub
ja
jae
push
aas
imul
mov
ja
out
nop
ljmp
lahf
out
jmp
stos
std
jbe
mov
dec
xchg
ljmp
std
xorb
outsb
lea
dec
mov
or
cmp
xchg
sub
icebp
cmp
lcall
movsb
add
xchg
cmp
lea
xor
cltd
sti
mov
inc
rol
mov
fmull
fwait
imul
lods
icebp
mov
pop
or
icebp
mov
lods
push
int3
inc
inc
xor
xchg
scas
adc
mov
push
std
fcmovbe
in
mov
dec
arpl
mov
dec
std
xchg
rol
fst
jg
test
mov
cmp
lahf
jae
jae
jl
aad
mov
js
push
sbb
stc
daa
cld
jmp
out
mov
and
pop
stos
dec
jp
orl
aaa
xchg
mov
push
js
or
add
cmp
mov
call
push
jne
cwtl
dec
stc
cltd
arpl
cmc
and
push
xor
dec
scas
je
jno
inc
adcl
and
lea
call
clc
call
imul
or
mov
rcrl
lods
pop
and
testb
mov
jg
ds
testl
addr16
pop
cmp
mov
cmp
xchg
cmpsl
imul
je
mov
rcrb
outsl
dec
insl
mov
loope
cmp
mov
push
cmp
push
std
nop
out
mov
xor
idivl
cmovle
adc
int
imul
mov
jle
ja
adc
dec
cmc
clc
call
imul
xlat
jnp
fimuls
xor
push
fbstp
test
ficompl
xor
jbe
cmp
or
adc
push
lea
add
jne
mov
adc
decl
stc
out
jge
adc
sti
test
movsb
clc
ret
loope
inc
repnz
mov
scas
leave
es
fistl
lea
ficoml
push
adc
jge
sbb
jmp
inc
xor
fsubs
push
cmp
shr
adc
insl
pushl
lret
mov
lods
pop
cmp
in
cmp
xchg
or
imul
insb
push
sub
mov
xchg
sub
test
adc
cwtl
scas
scas
push
repz
imul
inc
push
adc
icebp
jp
shll
pop
fidivs
and
std
mov
adcl
or
in
loope
rep
push
std
dec
push
shlb
pop
mov
mov
std
mov
sub
lods
jns
decl
inc
lret
adc
test
jno
xchg
lock
sub
jmp
sub
psrad
int3
sub
insl
sar
mov
push
lcall
cmc
idiv
add
mov
gs
lea
daa
lods
mov
sbb
jo
xchg
test
mov
scas
ret
mov
loop
insb
repz
mov
cmpsb
lea
scas
xor
es
imul
and
add
xchg
adc
out
and
imul
std
adc
cmpsb
imul
sub
dec
add
xchg
adc
sub
xchg
popf
xor
push
xorb
dec
mov
out
fsubrs
lret
pushf
adc
inc
ret
repnz
ja
movsb
hlt
xchg
push
adc
inc
out
pop
mov
popf
sbb
in
adc
push
mov
push
cmpsl
sti
dec
push
or
mov
push
aaa
push
mov
mov
sbbl
ja
xchg
repnz
mov
xor
push
aam
repz
pop
subl
inc
jne
lock
sbb
aas
mov
jmp
mov
sti
notl
jo
jge
outsb
dec
idivl
adc
jmp
mov
sar
aad
std
mov
fnstcw
jmp
fisttpll
outsb
std
scas
and
fldl
adc
out
xor
ficoml
inc
jb
xor
out
lea
dec
jle
shrb
int3
or
stc
mov
std
imul
out
call
test
adc
jnp
sbb
dec
xchg
mov
mov
movl
movsl
mov
nop
push
aam
jmp
pop
icebp
pop
mov
pop
jb
xor
stos
xchg
outsl
outsl
fs
pop
xchg
fwait
std
mov
or
push
in
imul
jns
cmc
loopew
xchg
pop
test
adc
data16
int
mov
xchg
in
cmp
andb
popa
cmp
mov
stos
movsl
mov
jbe
enter
mov
dec
stc
xchg
cmp
rorl
outsl
fs
add
into
xchg
pop
jmp
mov
lret
push
mov
test
ret
fistpll
jo
xorb
cmc
mov
adc
fisttps
xchg
scas
jns
lock
mov
cs
lret
adc
xlat
mov
imul
test
loop
jnp
hlt
or
pusha
scas
fsubrl
clc
mov
push
push
sahf
add
push
in
push
cmp
mov
rolb
adcb
inc
mov
outsl
addl
fisttps
ret
pushf
or
adc
pop
cli
sub
xchg
imul
rcll
out
mov
stos
rolb
push
sbb
push
lret
jne
pop
mov
std
std
mov
sbb
mov
sbb
mov
cli
stos
sti
adc
aas
inc
imul
into
ja
push
mov
xchg
lods
loopne
xchg
test
cld
xor
jnp
cmpsb
icebp
mov
xor
push
push
pop
cmpsl
sti
aaa
inc
stos
in
or
cmp
imul
push
xchg
xchg
cld
cmp
xor
sub
jae
mov
out
xchg
std
push
jmp
mov
gs
push
mov
and
mov
xchg
or
jmp
es
and
xor
sahf
scas
jns
dec
pusha
cmp
xchg
jnp
std
inc
jle
pop
fisttps
xchg
add
sub
inc
mov
outsb
cmp
xchg
mov
xchg
push
sarl
jecxz
insl
mov
js
push
or
lret
sbb
xchg
js
shlb
jl
fwait
scas
rorl
mov
mov
out
lds
xchg
or
dec
xchg
test
lahf
imul
xchg
std
ficoms
xchg
frstor
imul
nop
xchg
push
les
out
rcl
push
std
mulb
stos
mov
test
scas
pushf
addr16
adc
test
sub
mov
sbb
rorl
pusha
cmp
add
popa
fdivs
std
aam
shlb
lea
stos
decb
aas
in
clc
nop
call
xor
xchg
rorl
jne
push
clc
adc
les
inc
pop
lds
add
sbb
sbb
int3
imul
out
fcompl
dec
mov
xchg
es
roll
iret
scas
xchg
sbb
dec
cmpsb
fldenv
sbb
sahf
call
in
push
loop
bound
and
insl
push
adc
mov
fnstsw
jmp
outsb
or
adc
lret
sbb
out
outsb
push
adc
mov
jge
inc
fs
xchg
cmp
and
jle
setle
or
adc
add
mov
cs
cli
pusha
call
add
xchg
lcall
cmp
jmp
sar
xchg
jmp
out
stos
mov
lea
sub
or
ret
adc
inc
mov
jp
pushw
jmp
mov
xchg
xchg
jge
aaa
arpl
or
int
sbb
movl
xchg
jmp
orl
sbb
loope
jge
ljmp
mov
adc
les
mov
addr16
mov
pushf
les
pop
iret
aaa
lds
jns
lea
pop
data16
jmp
mov
fldt
inc
int
mov
decb
cmp
outsb
cli
popf
adc
subb
int
daa
lret
lock
pushf
rclb
dec
and
push
mov
push
jecxz
adc
cmp
adc
and
scas
lods
enter
and
push
loopne
loop
lahf
jg
push
mov
mov
sbb
or
out
loope
xor
dec
xchg
mov
mov
mov
jmp
or
cmpsb
cmp
orb
addr16
leavew
push
shr
xchg
cmp
sub
call
xorl
xor
xor
insl
xchg
mov
adc
int
xchg
call
lea
mov
adc
pop
sub
out
popa
add
in
cmc
mov
pop
adc
lds
inc
imul
mov
pop
adc
jmp
leave
outsb
dec
ljmp
cmp
out
aad
push
cmc
in
xchg
adc
rcr
imul
mov
mov
jne
adc
movsl
xchg
adc
lahf
jecxz
scas
lea
rclb
divl
lahf
and
insl
les
lods
mov
fistl
stos
imul
pusha
push
int
jb
mov
jmp
sbb
mov
fwait
inc
mov
cwtl
push
xor
lea
lret
xchg
lods
add
push
or
cmp
ja
or
jl
lds
dec
insl
std
es
xor
lahf
push
repz
sub
lcall
sub
aam
pop
push
cmp
je
dec
dec
jnp
sbb
stc
jno
scas
xchg
adc
and
stos
mov
arpl
std
xchg
mov
lea
add
fists
sub
jns
imul
sbb
loopne
cmp
cld
sbb
es
sbb
outsl
dec
xchg
mov
sti
lds
dec
test
mov
pop
test
or
or
rcrl
lret
rcll
js
jmp
push
xor
out
adc
pop
xchg
mov
fidivs
xor
xchg
sub
dec
sti
dec
test
cmp
lds
pop
cltd
rcrb
aas
lea
lcall
loopne
outsl
fs
negl
dec
push
pushf
popf
xor
sbb
adc
hlt
inc
push
dec
gs
and
mov
jp
stos
and
pop
popf
fwait
mov
ljmp
test
xchg
sarl
and
in
std
pop
adc
jne
push
push
insl
aaa
mul
sub
adc
push
mov
push
xor
pop
pop
mov
mov
jno
pop
push
repnz
xchg
and
push
imul
sbb
mov
xor
xchg
data16
sti
lret
mov
mov
clc
cli
adc
stos
out
pop
jl
adc
mov
leave
mov
jmp
mov
lahf
in
paddd
lret
out
cli
xor
mov
dec
inc
mov
cmp
mov
pop
jmp
stc
sub
push
xchg
mov
mov
cmc
adc
sbb
call
and
sub
sbb
addl
jnp
jno
pop
out
mov
stos
xchg
add
aam
mov
or
adcl
lret
xchg
hlt
stos
or
adc
cmp
or
push
subl
andb
xchg
out
sbb
shrl
mov
inc
sbbl
or
loope
outsl
imul
pushf
and
ficompl
jbe
lea
jno
sub
cli
adc
cmp
add
out
sub
loope
and
inc
std
js
cwtl
jo
adc
cld
shll
jne
imul
mov
cmp
int3
push
jmp
sarb
lret
imul
xchg
jle
add
lret
xchg
lea
jb
pushf
adc
aad
cltd
jl
dec
ljmp
mov
pop
push
pushf
adc
cmp
sub
arpl
ficompl
mov
or
ja
dec
fsub
cmpsb
cltd
imul
mov
repnz
add
push
sbb
stc
push
mov
in
or
push
out
jmp
insl
std
nop
lret
je
sbb
lea
out
xchg
sub
out
cli
fistpll
std
scas
outsl
icebp
lahf
cwtl
dec
cmpsl
lea
jb
pop
fs
addl
mov
sub
mov
call
or
adc
add
inc
adcl
jb
insb
in
cwtl
iret
test
mov
jo
and
bound
xchg
push
inc
imul
shr
add
add
push
call
sbb
mov
je
mov
fwait
xor
addr16
jecxz
pop
push
scas
loope
ret
jge
xchg
lock
movsb
out
xor
ljmp
mov
arpl
imul
add
fldcw
shrb
clc
popf
cmp
push
or
adc
out
xchg
pusha
jne
and
imul
cmp
lds
repz
mov
mov
popf
hlt
jmp
sti
iret
cmp
adc
or
jns
jno
hlt
insb
clc
lea
cld
dec
push
pop
std
lods
aaa
outsl
ror
notb
pushf
out
shll
xchg
fcoml
rcr
fdiv
cltd
push
jmp
push
sub
imul
lods
inc
adc
xchg
jl
es
push
push
dec
mov
stos
iret
sub
push
or
sub
or
add
fdivrs
insb
ret
mov
and
sbb
rcrl
data16
or
sub
lock
xchg
add
aas
or
mov
fmull
add
pop
pop
clc
cmpsl
rclb
rolb
lods
in
sub
sbb
mov
jo
sub
aaa
xchg
dec
lods
or
ret
xchg
dec
stc
sti
out
pop
lds
fdivr
mov
pop
std
jns
bound
addr16
jle
mov
pop
xchg
add
cmp
push
in
pop
daa
lea
mov
movsb
mov
das
mov
xor
cmpsb
leave
outsb
mov
ja
mov
movsb
mov
lods
out
jnp
and
stc
push
xchg
repz
xchg
testb
xchg
cmp
mov
fs
imul
push
inc
pusha
ret
push
jecxz
and
mov
shll
cmp
inc
mov
mov
out
jns
pop
das
dec
test
jp
add
ljmp
or
cmp
adc
sbb
cmp
and
and
ror
jecxz
lds
imul
xchg
call
mov
fwait
daa
gs
push
std
inc
cltd
addr16
stc
sbb
mov
ja
ds
icebp
cli
pop
insl
and
push
std
test
mov
sbb
push
jne
insb
push
movlps
sub
jp
mov
mov
cmc
ficompl
data16
mov
int3
and
out
and
jnp
int
and
clc
out
rorb
pop
sub
jmp
gs
sub
add
and
push
inc
mov
adc
popf
sbb
xchg
subl
cmpl
scas
or
fisubl
mov
js
pop
mov
cmp
mov
cwtl
xor
ss
cmpsl
repz
das
inc
loop
repz
lahf
or
stos
inc
mov
pop
xchg
jle
in
jbe
push
adc
out
jae
lret
xchg
aaa
stos
pop
adc
shr
lods
mov
xor
insb
jno
out
stc
or
scas
or
jb
test
js
pop
cmp
std
mov
sbb
hlt
fsts
loop
insb
daa
test
gs
sti
jecxz
pushf
xor
decb
repz
int
mov
rclb
sbb
mov
ja
daa
iret
call
gs
sbb
std
roll
add
xchg
lret
insl
pop
adc
ds
das
test
out
inc
add
ret
jo
pushf
jl
cmp
inc
mov
pop
sub
lea
inc
xor
adc
fldcw
imul
mov
inc
std
fnsave
pop
and
incl
mov
dec
jmp
pop
xorl
int3
insb
pop
pop
push
adc
in
ss
int
gs
andl
xor
lret
jmp
call
mov
scas
push
push
mov
stos
mov
int
imul
sub
mov
jno
adc
iret
jns
sub
ljmp
std
std
xchg
movsl
cmp
sbb
and
jae
imul
sbb
or
adc
jmp
shrl
adc
pop
das
mov
inc
dec
std
stos
and
push
imul
mov
mov
loop
push
nop
jae
rcll
in
mov
xchg
imul
xchg
add
jecxz
std
mov
lea
addr16
add
adc
add
js
pop
mov
adc
popa
mov
push
jae
push
insl
fidivs
les
sbb
out
leave
add
xor
dec
in
call
daa
dec
xchg
std
jmp
imul
shlb
aam
and
mov
xchg
ret
insl
ret
js
dec
in
sbb
jbe
lods
push
mov
sbb
mov
pop
inc
xchg
int
mov
xor
stc
cmp
xor
xlat
and
sbb
scas
and
pop
sub
dec
pop
loop
arpl
loopne
jmp
add
xchg
pop
mov
adc
mov
or
in
lods
mov
push
cmp
insb
test
fwait
enter
ret
icebp
test
and
dec
mov
mov
mov
ret
cld
int
cmp
loopne
stos
adc
add
cmc
pop
pop
test
push
loope
mov
aad
movb
dec
push
add
push
fwait
dec
add
mov
dec
cli
mov
mov
push
std
fwait
xchg
out
ja
std
andb
pop
mov
in
xchg
cld
cmpsb
xchg
and
shll
orb
push
insl
mov
call
cmp
xchg
sbb
fistl
int
out
and
enter
xchg
ret
pop
insb
jecxz
add
mov
push
push
cmp
push
movsb
sub
mov
push
add
inc
cli
xchg
jae
stos
mov
pop
and
mov
adc
mov
test
ret
mov
cmpsb
popf
imul
adc
decl
mov
jbe
cltd
xchg
mov
dec
aad
test
fcomip
sbb
add
in
sub
in
or
addr16
or
sbb
hlt
jae
xchg
cwtl
sbb
lods
sbbb
adc
int3
lahf
fs
repnz
mov
inc
jne
pop
sahf
xor
clc
pushf
das
inc
dec
cmp
out
pop
iret
insl
dec
lock
sub
adc
pop
push
je
or
push
and
push
sbb
adc
addr16
mov
dec
jbe
das
pop
push
std
dec
add
xchg
lea
scas
mov
mov
test
sbb
clc
popa
cmp
or
test
dec
out
addl
popa
rorl
sub
mov
pop
or
lock
mov
cmpsl
mov
or
cmpsl
bnd
xchg
test
add
pop
lods
jle
test
sub
aaa
data16
add
ss
jmp
adc
call
stos
push
xchg
xchg
lea
repz
dec
push
mov
leave
aad
out
subl
mov
adc
sbb
mov
adc
lret
fmull
mov
mov
jo
ret
mov
xchg
xchg
fdivrl
out
popf
add
decl
cmc
loope
stc
xor
call
push
and
adc
insl
lcall
out
push
xlat
test
mov
pop
pushf
xchg
pop
mov
jb
sub
push
aaa
enter
adc
sbb
inc
xlat
repz
nop
sub
stc
das
dec
idiv
push
je
mov
lock
mov
cltd
sub
adc
add
pop
aam
inc
nop
or
mov
push
std
cwtl
or
out
scas
cmp
or
addr16
ljmp
sub
xor
adcb
aas
int
jmp
cmpsl
inc
imul
jmp
mov
mov
mov
pushf
dec
pop
imul
popf
rorl
sub
push
sti
adc
inc
lds
cmp
adc
outsb
sub
imul
cmp
std
pop
rorl
shlb
popa
div
cltd
inc
xor
xlat
in
mov
popf
popa
xchg
mov
and
int
lret
sbb
loopne
mov
out
shlb
sbb
mov
outsl
fisttpll
xchg
mov
or
adc
andnps
push
lcall
std
pop
test
jnp
and
in
xor
aam
push
push
fcompl
lret
cmp
lds
lea
test
mov
fcmovnbe
adc
add
gs
dec
add
push
add
shl
or
loopne
std
lret
imul
fwait
jp
or
jae
pop
cld
adc
add
xchg
std
cltd
dec
xchg
pop
test
and
cwtl
jo
inc
cmpsl
push
and
mov
imul
cmp
fadds
cwtl
lds
adc
lahf
add
mov
call
jb
aaa
sbb
jge
adc
cmp
and
out
xorb
cmp
jno
inc
ret
cltd
xchg
roll
into
pushf
rep
popa
imul
sbb
pop
aam
enter
mov
jge
cltd
jns
lret
leave
insl
mov
sbb
jmp
cmp
inc
loop
sub
cmc
jbe
jne
addl
sub
sub
inc
mov
fisttpll
movsl
jp
cmp
mov
out
inc
cmp
mov
jno
lods
in
inc
std
xchg
in
sahf
mov
rcrl
repnz
pop
outsb
mov
adc
jge
stc
outsl
sti
xchg
sbb
inc
ss
add
and
and
adc
jge
pushf
mov
imul
nop
push
lds
mov
arpl
xor
ret
push
lea
xchg
mov
adc
sbbl
jg
jmp
mov
imul
pop
inc
fistpll
cwtl
lea
data16
jae
arpl
jmp
jns
cltd
adc
sub
gs
jle
sub
pop
push
xchg
xchg
clc
shll
lea
pop
out
cmp
mov
adc
fcmovnbe
sub
mov
int3
adc
leave
sbb
mov
sbb
jno
repnz
psubd
jo
hlt
mov
cmp
adc
cmpsb
push
stos
movsb
cli
popf
fwait
imul
jecxz
lods
cld
ja
mov
ret
push
cmp
pop
sub
cmc
push
out
add
adc
jo
inc
imul
xchg
repz
subb
add
inc
lea
cli
pop
test
adc
insl
mov
lea
inc
rcr
cmc
xchg
inc
adc
xchg
jo
mov
push
hlt
dec
ret
loope
adc
sbb
out
rorb
data16
addr16
mov
imul
aas
sbb
lds
sub
inc
nop
std
adc
adc
jnp
inc
pushf
stos
cli
mov
sub
test
xor
call
std
mov
jg
mov
lock
mov
mov
adc
and
leave
jl
fwait
cmp
arpl
add
insb
repz
in
xchg
lret
mov
ss
jecxz
jns
aas
push
dec
call
push
pop
imul
xchg
sahf
mov
std
push
push
xchg
xchg
sub
push
inc
std
aaa
pop
xchg
pushf
movsb
test
ret
ss
push
pop
gs
pop
add
sub
insb
pop
adc
adc
xor
jb
leave
and
adc
fcmove
pop
es
fsubrs
dec
adc
lea
adc
sbb
push
sbb
mov
pop
inc
fucompp
ja
lods
pop
push
loope
jns
lcall
jl
pop
push
inc
push
and
leave
lea
fs
xchg
or
xchg
enter
or
loop
in
cwtl
push
add
jle
push
sub
insl
ljmp
add
dec
loop
xchg
cwtl
pushl
nop
cmp
dec
test
lea
or
xlat
mul
jecxz
int
xor
mov
test
xor
std
mov
cmp
jae
jo
xchg
stc
into
adc
add
push
bound
out
je
lea
outsb
lret
fcom
aaa
rol
xchg
xor
in
jb
std
jmp
mov
jo
pop
xchg
shll
sti
sbb
out
orl
and
gs
push
clc
pop
cmp
jge
ja
sahf
test
xor
in
inc
aam
jne
imul
aas
cwtl
cmc
test
imul
and
bound
cwtl
sarl
repnz
mov
cmovge
cmp
mov
sub
adc
adc
push
pop
nop
or
in
pop
adc
mov
rcl
inc
cmp
jo
and
push
sub
cmp
adc
addr16
test
xchg
shlb
imul
sub
std
fstps
insl
arpl
or
push
jbe
lods
mov
push
and
call
rcr
icebp
mov
add
dec
stos
jmp
bound
ja
ds
fildll
daa
jge
arpl
and
push
hlt
pop
popa
cmpsl
mov
push
js
lods
xor
push
mov
pop
jecxz
movsb
movsl
jns
adc
dec
pop
xor
out
cmpsb
xchg
aaa
leave
ret
xchg
mov
xchg
pop
std
xor
mov
sbb
das
flds
loopne
cmp
int
addr16
lods
xchg
mov
imul
je
notl
punpcklwd
je
in
in
lods
lret
jmp
adc
dec
mov
mov
test
popa
daa
shrl
je
jmp
mov
imulb
cltd
adcl
hlt
sar
shlb
addr16
jb
cmp
sti
js
mov
out
mov
xor
push
mov
jle
ljmp
aaa
rcll
in
cmp
add
mov
jmp
sti
in
push
push
into
jle
jb
mov
mov
mov
lock
or
divb
cld
jb
mov
dec
stc
or
or
or
fwait
imul
jns
repnz
ss
dec
jb
fwait
jne
xchg
mov
inc
not
in
cmpsl
mov
icebp
ljmp
push
push
repz
add
or
add
push
rorb
frstor
adc
jmp
jmp
ljmp
jns
loope
push
sub
fsubrs
sub
ja
mov
add
out
xchg
cwtl
dec
gs
lcall
data16
icebp
and
cli
sbb
inc
inc
mov
jbe
push
and
ret
sbb
fimuls
fmuls
mov
rcr
xchg
sub
sub
icebp
es
out
gs
or
lds
mov
in
and
and
or
lods
pand
xor
sbb
scas
adc
imul
aaa
push
shll
jne
mov
mov
and
decb
std
xchg
xor
xchg
out
mov
jecxz
pop
jmp
aad
std
orl
movsb
dec
mov
hlt
jmp
imul
stos
dec
stc
push
push
lods
mov
pushw
xchg
addr16
lahf
testb
es
pushf
call
popl
add
jmp
std
dec
sbb
ret
notl
cmpb
add
mov
dec
insb
jg
mov
dec
sar
push
pop
rcll
pop
loop
dec
scas
mov
imul
roll
mov
fists
sub
cmp
inc
xchg
in
and
rorl
push
push
cmpsl
inc
sbb
push
xchg
xor
mov
out
scas
sub
stos
inc
adc
stc
cmp
enter
dec
mov
mov
add
add
fs
push
pushl
call
pop
cs
xor
out
loop
data16
adc
and
lods
orb
cmp
adc
mov
xlat
aas
imul
shl
adc
adc
xchg
mov
xorl
mov
jb
scas
outsb
jge
mulb
inc
aad
call
negl
mov
add
repz
addl
cmp
mov
scas
insb
ljmp
ret
cli
jne
mov
imul
sbb
into
popa
pop
std
scas
test
add
insl
ss
mov
loopne
outsb
jb
lahf
sahf
adc
repnz
mov
imul
sbb
std
sti
sahf
int3
mov
push
jns
mov
sbb
dec
repz
jmp
or
fs
sbb
pop
fists
clc
fcoms
cs
mov
stos
fadds
mov
jmp
push
pop
xchg
cwtl
and
pop
add
mov
out
inc
adc
xchg
cmp
inc
aas
sub
push
sbb
mov
or
dec
lods
pop
pop
or
dec
or
add
call
int
jle
jmp
jecxz
xchg
popf
aad
ss
sbb
lret
pop
iret
sbb
mov
pop
xchg
push
adc
add
push
adc
loopne
push
ljmp
int3
scas
sub
imul
push
andb
sbb
test
fs
inc
push
push
cmp
jmp
push
decl
cmp
sub
addr16
and
mov
mov
rep
in
xor
out
xchg
xor
and
mov
and
mov
shlb
or
imul
pop
or
lcall
push
test
orb
xchg
push
call
mov
cmc
andl
lahf
in
or
push
aam
cmp
push
jnp
fmuls
pop
stc
mov
fs
lods
pop
jl
fmul
data16
nop
std
jo
lahf
lea
adc
xlat
sbb
fstl
pop
push
clc
and
lock
out
mov
sub
push
push
std
popf
jbe
sti
cmpb
inc
ret
and
push
pop
xchg
sbbl
mov
repz
cs
xchg
dec
out
adc
inc
mov
xchg
cvtps2pd
insb
add
icebp
sti
lret
and
add
or
leave
xlat
hlt
push
or
repnz
aaa
jne
or
sbb
add
fistl
lods
mov
lret
add
mov
ss
out
push
cmp
mov
imul
jnp
dec
jb
add
xchg
xor
aaa
cmp
pop
push
mov
icebp
mov
cld
nop
fs
cmpsl
xor
or
fs
std
out
xchg
mov
les
mov
imul
fidivl
and
shrl
loope
mov
test
cmp
mov
lds
mov
shll
lahf
in
popa
js
xchg
xchg
test
hlt
jle
push
mov
stos
jle
push
sbb
fildll
imul
imul
cmp
or
xchg
add
lea
out
cmp
aas
adc
mov
pushf
lods
jne
out
in
ret
stos
push
cmp
adc
add
outsl
loop
pop
rcrb
loopne
or
mov
fwait
sbb
std
adc
lea
jmp
popa
xchg
xchg
and
add
dec
or
std
and
fcompl
std
hlt
cmp
sub
nop
shll
add
mov
mov
xchg
cmpsl
iret
sbb
shrl
sti
je
fisttpll
vmwrite
aad
dec
insl
pushf
sar
sub
loopne
jbe
jmp
xchg
lea
js
icebp
sbb
cmp
test
bsr
adc
rorb
jmp
and
test
test
stos
push
xchg
movups
xchg
push
dec
mov
lea
add
stos
daa
test
repz
std
mov
je
lcall
sub
loope
mov
fucomip
sub
xlat
and
fs
dec
aas
sub
dec
ret
stc
std
mov
add
negl
push
jmp
cltd
hlt
nop
js
mov
and
mov
mov
mov
stos
outsb
inc
daa
out
mov
mov
in
xchg
adc
sti
jb
ds
lea
loope
jg
sub
push
pop
pop
loopne
fs
lret
push
cmp
pop
push
call
subl
pop
adc
sbb
int3
push
shlb
cmp
std
insb
adc
mov
sbb
xchg
cmpb
scas
xor
fmull
pop
out
jns
shlb
adc
cmp
mov
sbb
sbb
mov
cld
ljmp
int
sarb
lret
sub
cld
sbb
arpl
add
xor
std
cmp
hlt
xchg
add
lret
scas
push
rorb
loope
or
xchg
int
and
in
test
lods
sub
add
lret
jne
inc
sbb
leave
or
fidivrs
ljmp
push
add
xor
fimull
std
insl
dec
mov
std
mov
mov
jmp
lock
ret
dec
and
fimuls
cmp
repz
in
mov
pushf
add
daa
mov
or
xchg
popf
adc
push
fadd
mov
fwait
jno
cli
fmuls
adc
or
lea
lahf
lods
in
xchg
loope
fwait
movsl
mov
cld
fidivl
mov
cmpsl
popf
push
or
sahf
jmp
adcb
fidivs
out
popfw
pusha
cmovp
jp
sahf
stos
cmp
jg
lahf
inc
jb
inc
inc
sbb
sub
or
pushf
js
dec
lods
data16
out
lock
jg
lahf
bnd
fstps
mov
adc
flds
gs
test
je
fs
push
hlt
mov
sub
add
mov
cmpsl
sub
aaa
cmpsb
sbb
add
dec
mov
push
push
xchg
call
xchg
in
add
lea
push
mov
and
mov
adc
rol
sub
mov
jge
mov
imul
data16
pop
jge
in
nop
and
aam
jbe
adc
mov
popa
adc
das
xor
adc
xchg
pop
int3
ret
fwait
adc
mov
xchg
sbb
and
adc
lcall
rcrb
push
vpsubsb
stc
outsl
xchg
or
inc
sub
jmp
and
xchg
lods
jo
pop
adc
mov
nop
or
dec
bound
cmpl
addl
pop
dec
cli
mov
pushf
sbb
push
imul
push
sbb
cmc
lret
jecxz
call
and
lret
std
inc
sbb
stos
repnz
out
jbe
pop
in
mov
cmc
sbbb
ss
cs
test
mov
in
pushf
lea
adc
bound
adc
loope
int
or
add
jbe
adc
mov
push
cmpsb
cltd
xchg
call
lcall
lahf
jge
ds
faddl
pop
sarl
pusha
or
mov
test
cmp
gs
js
mov
into
xchg
sbb
mov
movsl
jg
cli
cmc
mov
pop
mov
jmp
adcl
xchg
sub
inc
cltd
mov
cld
jne
aas
std
adc
fs
dec
add
jns
ss
icebp
and
adc
xor
jne
mov
mov
adc
mov
push
and
xor
hlt
pop
out
dec
sub
sbb
sbb
dec
jne
inc
jp
xchg
sbb
mov
rol
imul
jge
xor
nop
lea
imul
jno
mov
cmc
mov
cmp
divps
dec
lcall
xchg
dec
sbb
jmp
mov
sub
or
adc
xchg
mov
dec
stc
jne
pop
fnstenv
and
in
cmp
push
cmp
lds
mov
or
test
popa
imul
xlat
adc
in
sbb
pop
decb
push
rorb
popa
aaa
sub
lahf
push
adc
mov
cs
dec
or
cmp
insb
popf
adc
lods
std
adc
arpl
jg
rol
mov
mov
insb
inc
sbb
mov
lea
xor
popa
xor
movl
lds
std
rclb
lcall
aad
into
lcall
xchg
adc
test
mov
imul
lret
xor
stc
sbb
dec
cmc
mov
insb
xchg
cmp
push
decl
mov
adc
adcb
add
or
cmp
mov
sub
insl
xchg
imul
mull
lret
dec
lret
repnz
pop
and
jecxz
pop
sub
pop
jns
popl
mul
ret
and
adc
mov
cmp
cli
mov
fdivr
cld
push
mov
stc
std
gs
add
inc
mov
push
subb
or
jle
rol
and
ja
cmc
dec
pop
lds
inc
xor
leave
push
adc
enter
ret
pop
lret
mov
sbb
fcomi
sub
cmpsl
mov
push
rep
xchg
pop
std
movsb
mov
xchg
repz
shlb
sub
push
inc
cmpsb
nop
mov
push
addb
decl
adc
in
inc
data16
outsb
push
movsb
pop
and
out
jns
fistps
fists
sahf
gs
pop
jb
jle
xchg
jb
cwtl
and
mov
pandn
lahf
xchg
push
stos
dec
inc
jl
ret
in
adc
popf
jge
in
push
gs
dec
pop
std
nop
xadd
mov
push
xchg
data16
int3
scas
inc
enter
xchg
ficoms
cltd
add
adc
sbb
mov
insl
pop
lods
jbe
cli
or
std
es
add
insl
pop
push
or
jmp
jge
std
pop
jecxz
inc
pop
aaa
push
pop
sub
push
ja
lea
mov
nop
add
insl
ret
xchg
push
cmovnp
mov
roll
fwait
adc
imul
cltd
mov
lds
jg
stc
andl
mov
popa
push
rorb
std
or
cld
aas
xor
leave
mov
movsl
enter
fisubl
aam
aad
push
aas
mov
mov
inc
inc
or
aaa
shrb
popa
fidivl
cmp
dec
adc
cmp
cmp
rcl
xor
ja
mov
adc
xchg
movsl
popa
push
mov
add
mov
cld
cli
pop
push
jo
mov
sbb
or
leave
push
mov
xchg
pop
ret
jae
push
out
lods
mov
insl
icebp
into
sti
adc
int
inc
inc
lret
gs
push
icebp
out
mov
inc
ficomps
pop
sahf
insb
fwait
stos
jno
xor
lea
je
adc
sub
and
sbbl
insb
cmp
jge
push
or
outsl
cmp
mov
call
pop
inc
jge
lea
addr16
sbb
ljmp
mov
push
loop
idivl
stos
gs
subb
in
stos
add
adc
mov
aaa
ds
enter
mov
fnsave
pop
ficoms
fs
xor
push
or
sub
std
std
shlb
sti
test
jge
pop
stos
mov
push
jmp
loop
adc
mov
mov
push
movsl
sbb
test
imul
hlt
push
push
lret
or
mov
out
add
and
pop
mov
sar
mov
fwait
orl
mov
xor
std
adc
cli
jg
imul
inc
ret
lods
xor
vmulss
or
jns
popa
nop
push
cld
shr
sbb
lea
jmp
lods
adc
inc
fadd
repz
scas
jl
int
dec
popf
es
and
xor
imul
dec
adc
arpl
call
jo
sbb
dec
ja
mov
and
xorb
pop
push
or
ret
mov
mov
push
push
mov
nop
jge
pop
gs
loope
dec
xchg
jmp
pop
sbb
xchg
lcall
xchg
lods
pop
jns
xchg
cmc
je
pop
fldenv
mov
subl
insl
cmpsb
jo
jge
gs
and
xchg
mov
sub
pop
inc
adc
std
pop
xor
cmp
cmovp
pop
cmp
adc
orb
imul
pop
jb
dec
lcall
std
xlat
imul
sbb
jp
nop
and
lcall
fisttps
insl
test
add
mov
roll
or
mov
fdivr
mov
insb
pop
mov
or
orb
push
lret
in
inc
jg
hlt
sbb
or
dec
mov
lea
push
cmp
push
fisubs
int3
pop
fldl
mov
popa
xchg
or
jmp
push
and
or
lret
sbb
push
scas
xor
out
pop
cs
adc
outsl
and
imul
sub
jg
mov
movsb
pushf
push
outsb
dec
scas
xchg
ja
jmp
lcall
imul
push
xor
fstl
and
jo
ljmp
cmp
dec
insb
jae
sbb
add
pop
pop
sbb
add
add
scas
rclb
inc
mov
mov
dec
mov
shrb
dec
jmp
int
in
or
out
je
sti
add
inc
out
out
jmp
dec
out
or
loop
sub
cmpsb
mov
jge
mov
repz
push
lods
adc
pop
push
movsb
shlb
xchg
adc
mov
nop
test
roll
in
mov
movsb
inc
inc
sbb
xchg
movsl
jb
inc
push
jbe
popf
rcll
movntps
fdivrs
xchg
rcrb
repnz
hlt
dec
sbb
xchg
lret
push
mov
push
outsl
lcall
inc
xchg
sub
jp
jno
popa
or
sub
or
ja
mov
cmpl
adc
sbbl
insl
mov
xchg
lods
popa
sbb
std
popf
jno
out
inc
mov
mov
in
push
popf
std
adc
mov
jne
pop
outsl
dec
fs
bound
sub
add
in
push
lea
loop
dec
sti
loope
pop
jo
mov
cld
repnz
cmp
xchg
sbb
mov
pushf
jmp
mov
or
stc
or
jecxz
rorb
fcoml
push
xchg
mov
sbb
xorl
pop
jge
or
icebp
in
fs
subl
lods
xchg
pop
int3
popf
jecxz
out
bound
lds
mov
lods
ds
push
mov
mov
dec
lds
jns
sti
and
lret
dec
imul
mov
push
mov
jmp
mov
pop
gs
push
mov
pop
pop
adc
mov
loopne
mov
xor
jge
aam
frstor
movsl
adc
jmp
push
lret
mov
sub
jae
dec
mov
jne
or
jg
mov
dec
cmp
pop
movsl
jmp
pop
pop
das
fistpl
mov
sbb
out
subb
sub
dec
adc
and
mov
jge
fs
or
subb
pop
repnz
icebp
adc
shlb
mov
lds
call
sub
out
pusha
xorb
pushl
insl
loopne
data16
std
into
int
sub
cmp
std
scas
jnp
and
xor
mov
stc
stc
push
jne
insl
cmc
push
test
mov
sub
adc
xchg
cmpl
je
mov
lea
cmp
out
stc
push
push
sahf
mov
popa
mov
mov
out
std
jb
xor
icebp
pop
add
lea
dec
mov
lea
into
mov
bound
xor
and
stos
ja
mov
popf
push
daa
jecxz
jmp
loopne
dec
push
icebp
gs
imul
adc
imul
ljmp
mov
test
call
pusha
push
out
stos
xchg
push
or
fcoms
fistps
sub
test
mov
pop
nop
dec
or
popf
pop
or
cmp
sbb
into
fnsave
mov
test
adc
lods
dec
mov
pop
cmp
sub
mov
mov
popa
adc
repnz
and
cmpsl
stc
neg
cld
lds
mov
loop
repz
or
cmp
mov
stos
sbb
mov
xor
adc
cmp
pop
xchg
stc
icebp
je
inc
fldpi
fwait
push
ja,pt
pop
jmp
pop
xor
jmp
int
sbb
lea
ret
dec
sub
cmp
sbb
xchg
stc
aaa
add
xchg
test
movsb
stos
insb
mov
mov
call
cmpsb
cltd
arpl
push
lcall
popl
icebp
mov
lds
or
adcl
and
gs
jbe
xor
mov
or
icebp
rcll
pushl
jbe
mov
adc
js
lds
scas
mov
out
cld
cmp
adc
pop
or
ljmp
cmp
mov
xor
cmpsl
repz
push
jge
sbb
std
push
adc
sub
subb
mov
dec
js
ja
push
repnz
ret
mov
sub
cli
xlat
imul
xchg
mov
xchg
loopne
dec
repz
dec
rclb
mov
cmp
lods
in
daa
fwait
and
imul
stos
push
sti
int
das
std
mov
mov
leave
lea
pop
out
adc
adc
aas
add
xorb
add
adc
mov
dec
add
dec
jne
pop
popa
sub
loop
jae
dec
sbb
cmc
mov
std
inc
push
jb
mov
bound
cmpsb
jae
test
pop
int
mov
rsm
or
int3
xor
mov
stc
xchg
adc
lea
sbb
cltd
ss
lock
xchg
mov
xor
xchg
subl
movsl
jnp
pop
xchg
ja
lret
icebp
loopne
leave
xchg
push
daa
mov
cmp
mov
fbstp
cli
lret
lock
cld
pop
mov
adc
adc
rcrb
or
mov
fisttpll
insb
in
ret
xor
mov
andb
stos
inc
or
lea
dec
fs
outsl
test
adc
jo
jo,pn
and
dec
sub
mov
mov
imul
loop
mov
add
jge
jbe
adc
clc
xchg
sti
shrl
movsl
push
fldcw
mov
sarl
repz
imul
inc
mov
cmp
stc
mov
xchg
fxch
dec
push
imul
adc
xchg
mov
pushf
clc
or
push
lahf
test
ret
cmp
lret
mov
out
adc
mov
in
mov
push
adc
inc
push
ror
mov
inc
dec
in
mov
inc
pop
popf
mov
arpl
push
subb
in
xor
fidivrs
push
push
mov
push
cld
sub
out
nop
sbb
sbb
mov
fwait
mov
cmc
iret
fcomps
aam
nop
out
pop
frstor
in
das
bound
movsl
mov
xor
push
inc
test
mov
aad
add
leave
adc
ljmp
fnstsw
push
popf
push
mov
pop
cmp
mov
sahf
jae
xor
dec
adcl
and
mov
lcall
sarb
rcrl
or
out
stc
or
push
jo
cmp
xor
pop
dec
push
dec
sbb
shrb
sub
lods
imul
leave
out
jecxz
inc
mov
push
mov
sbb
xchg
mov
or
ror
pop
push
and
shll
mov
stos
sbb
cld
push
movsl
lods
push
sti
push
es
int
cmpsl
dec
into
shrb
cmp
sahf
pop
repnz
xchg
push
sub
mov
fcmovnb
xor
aad
test
lea
pop
mov
or
cmp
lahf
mov
std
dec
pop
fwait
stos
cltd
cmc
imul
pop
dec
sbbb
repnz
aas
sub
xor
in
stc
and
addr16
in
adc
inc
xchg
or
insb
adc
dec
pop
in
lret
adc
cmpsb
jno
sub
dec
nop
mov
ja
dec
add
imul
loop
xor
daa
jno
aad
mov
stos
sti
adc
jl
cwtl
mov
ja
lea
sub
cli
sti
adc
dec
xor
sbb
and
sub
mov
push
stos
fidivrl
std
cwtl
mov
push
push
scas
mov
jnp
shrl
lods
shrb
or
xor
lock
or
or
push
cmpsl
cmp
xchg
adc
mov
enter
cmp
xchg
insb
sub
add
int
test
std
mov
cwtl
or
icebp
nop
imul
adc
jge
ja
lret
std
frstor
imul
fwait
jbe
jl
std
je
adc
lcall
jl
adc
dec
pop
inc
iret
sub
jmp
push
mov
pushf
repnz
std
out
dec
into
and
mov
ja
fstl
mov
xor
stos
mov
fcompl
jne
mov
ucomiss
fs
xor
nop
add
aas
fimuls
fistps
push
lea
fidivrs
or
jecxz
xchg
das
lods
rolb
mov
adc
fxch
nop
push
push
int
test
int
xchg
pop
fsubl
pop
ret
in
int
aam
leave
sbb
in
mov
inc
push
push
push
xchg
push
incb
scas
fstpl
pop
xchg
aas
mov
ret
cld
idivb
insl
cmpl
sbb
neg
testl
xchg
add
jne
jno
hlt
lea
sub
and
adcl
cli
jbe
cs
pop
sbb
push
fcoml
sbbl
lea
roll
jno
add
cli
or
repz
jecxz
adc
fdivl
cmpsb
dec
pop
lahf
out
mov
xchg
jp
lcall
pusha
mov
inc
insl
mov
mov
lret
push
push
mov
pop
rorl
mov
pop
wrmsr
fisttpll
push
fiadds
push
mov
or
mov
push
lea
in
in
aas
pop
adc
or
sbb
lods
hlt
shrl
jge
int3
inc
mov
gs
or
push
pop
adc
imul
cmp
jo
or
clc
cmp
xchg
cld
sbb
lods
pop
es
push
mov
and
sti
iret
imul
dec
cmp
test
adc
jno
rcl
push
mov
adc
pop
mov
jb
imul
jae
in
sbb
cld
shll
mov
rorl
jg
jo
cmp
adc
jno
jne
clc
or
sbb
test
cmp
pop
mov
cmp
pop
cmp
popf
sar
adc
sbb
push
pop
jnp
std
adc
ss
mov
stos
test
cli
insl
pop
adc
out
out
sub
xorl
ja
test
push
jmp
dec
mov
mov
aad
xor
aas
add
adc
sbb
mov
out
mov
push
sbb
mov
repnz
outsl
mov
lods
cwtl
popa
push
lret
movl
adc
or
or
imul
jo
mov
aaa
lea
inc
es
aas
test
push
mov
icebp
lea
inc
lds
xchg
in
adc
repnz
add
cs
fstpt
inc
subl
add
pop
mov
adc
gs
fimuls
mov
xlat
inc
popa
sbb
sbb
sbb
lret
mov
movb
sarl
and
inc
mov
add
call
mov
js
nop
mov
push
jno
xor
cmpl
adc
adc
pop
pushf
mov
pop
loope
fcmovnb
or
xchg
sbb
cmp
xor
fisttpll
mov
xor
mov
inc
out
repz
test
jge
dec
popa
adc
lea
subl
push
pop
adc
mov
pushf
sub
mov
sti
jnp
test
hlt
std
std
add
int
cmp
cld
clc
sarl
xchg
jecxz
pop
push
imul
push
sbb
jbe
js
addr16
pop
push
xchg
inc
stc
jecxz
std
fs
fldl
pop
jno
imul
aad
movsl
arpl
in
xchg
sarl
jle
push
jmp
lea
or
lret
pop
insl
jo
lea
xor
pop
sbb
pop
out
jne
add
test
mov
lret
orl
ja
xchg
adc
fldcw
lds
push
imul
cmp
sbbl
cmc
orb
lock
pop
sub
loope
sub
movsb
xor
push
repz
cmp
mov
jbe
cs
das
fwait
loop
ret
xchg
out
mov
cmp
test
in
dec
sbb
lar
cmpsb
pusha
jmp
addr16
ss
test
sbbl
pop
add
pop
imul
sub
mov
in
repnz
or
loop
leave
jo
pop
xchg
ss
mov
mov
sub
adcl
lds
cmpsl
mov
adc
pop
imul
cmp
rorb
push
push
mov
mov
pop
arpl
pop
push
xchg
mov
lds
jno
gs
inc
rcr
dec
sti
lea
add
sub
sub
sbb
pop
inc
mov
cli
mov
clc
hlt
icebp
insl
outsl
popf
test
jbe
mov
lea
test
push
les
sub
jge
nop
mov
out
lods
into
cli
or
xchg
mov
xor
testl
imul
pop
and
cli
push
out
loope
nop
jb
inc
adc
cmp
mov
lea
pop
cwtl
aas
jae
mov
insb
aaa
jae
or
xchg
pop
ret
outsl
pop
cmp
and
cli
add
push
lods
dec
les
cmpsl
and
sahf
pop
into
pop
lea
test
jno
lods
lea
insl
cmp
aam
std
sbb
std
cwtl
adc
xchg
lea
addr16
in
pushf
jmp
jb
sbb
sbb
loop
in
imul
cmpsl
shll
mov
test
and
inc
lock
out
mov
aam
sbb
jnp
mov
adc
fstpl
jnp
adc
or
lods
adc
shlb
imulb
adc
jmp
dec
imul
ds
dec
popf
cwtl
inc
fs
shlb
pop
adc
or
popf
inc
push
or
hlt
bound
push
lods
fst
mov
loopew
add
mov
and
imul
sahf
jle
inc
std
popf
mov
iret
xor
adc
xor
test
mov
cld
cltd
ror
repnz
push
iret
test
and
fildl
xor
xor
xor
xchg
push
pop
idivl
jl
adc
subl
mov
repnz
inc
in
jp
cwtl
xchg
jne
adc
adc
les
adc
pop
mov
in
sbb
mov
aaa
gs
xor
xor
xchg
iret
lahf
cmp
sub
imul
test
out
cmp
movsb
and
mov
sbb
cmp
mov
icebp
repz
in
enter
cmp
xchg
lods
pop
or
mov
sti
shlb
add
mov
and
in
cmp
hlt
stos
mov
mov
pop
and
shl
inc
mov
aam
xrelease
into
rol
rorb
mov
push
cmp
mov
inc
push
in
in
jo
cmp
hlt
ljmp
mov
in
inc
inc
sti
and
shlb
add
inc
iret
rcll
sbb
je
xor
nop
mov
mov
dec
in
jge
mov
test
adc
push
pop
sub
or
mov
pop
pop
jae
xor
inc
cs
nop
and
push
dec
idivl
repnz
sbb
xlat
xor
pop
jns
jo
mov
outsl
fcomps
mov
push
sbb
call
popa
pop
xchg
jae
iret
xor
mov
or
cmp
jg
call
ficoms
aaa
repz
jle
insl
or
dec
sahf
aam
push
mov
mov
inc
adc
je
je
sbb
lods
xchg
push
pop
js
stos
adc
pop
leave
mov
imul
jg
sbb
loope
mov
shr
fldl
fdivrs
gs
jl
adc
cmpsl
call
jl
iret
xlat
mov
cmpb
outsl
dec
rolb
adc
movsl
nop
xchg
sbb
das
push
mov
mov
or
repz
in
lcall
movsl
movsl
push
icebp
fsubl
inc
and
xor
pop
ret
mov
dec
mov
imul
cmp
pop
lea
daa
fldt
push
pop
cltd
sub
pop
imul
daa
cltd
cld
je
es
ljmp
rcl
jbe
mov
adc
pushf
adc
rorl
sub
and
pop
stc
xchg
jne
cmp
lds
or
sub
sbb
jmp
add
inc
cmp
shrb
sub
dec
and
add
mov
mov
mov
mov
std
test
xor
sbb
jnp
gs
push
test
jle
insb
in
mov
sbb
ja
sub
and
movsb
jo
and
popf
jae
jmp
sbbl
sti
rclb
ljmp
nop
xchg
flds
cmp
pop
cli
or
rol
mov
outsl
push
pop
mov
sub
jge
test
mov
mov
mov
inc
pop
test
lcall
push
test
hlt
imul
icebp
and
push
sbbl
dec
mov
pushf
push
inc
je
jno
xor
pop
aaa
movsb
ss
mov
adc
adcb
mov
mov
cmp
jmp
je
inc
imul
add
loope
cmpl
nop
jmp
filds
je
call
jns
push
inc
mov
aaa
sbb
lods
imul
jmp
jbe
sbb
push
pop
add
insl
push
inc
and
pop
adc
fadd
push
pop
mov
icebp
insl
arpl
jmp
push
xchg
adc
or
sbb
mov
jne
jg
mov
icebp
dec
pop
in
xor
sahf
std
mov
mov
jecxz
jne
pop
mov
push
movsb
cmc
repnz
adc
ljmp
cmc
hlt
mov
jl
jno
jp
or
fcmovnbe
push
adc
dec
int
mov
mov
or
fdivs
or
stos
lods
xchg
dec
pushf
xchg
pop
loop
loope
xor
outsl
adc
subb
cmp
aas
jbe
pushf
pop
pop
fstpt
or
mov
pop
iret
jl
adc
push
roll
aas
unpcklps
mov
test
or
add
sbb
stos
in
call
jp
test
lods
addr16
jp
out
cmp
das
mov
incb
dec
out
test
icebp
mov
adc
dec
sbb
orl
iret
pushf
lret
dec
in
je
scas
daa
mov
mov
push
dec
popf
and
or
push
imul
jns
jne
mulb
into
ret
enter
fwait
adc
push
sub
adc
cli
xor
orl
push
aad
movsl
mov
dec
sti
or
inc
rcl
add
jecxz
jbe
in
pop
xchg
add
inc
mov
sub
std
lds
shr
mov
call
inc
std
sub
insb
stos
mov
and
inc
fucomp
test
push
cltd
outsl
sahf
xor
xchg
sbb
pop
xor
shrl
lahf
std
aas
mov
dec
out
imul
mov
sub
mov
pop
add
andl
fisubrl
dec
popf
inc
mov
and
push
dec
test
jns
dec
cmp
dec
xlat
lods
xchg
xchg
sub
addb
and
and
sahf
shll
lds
subl
roll
add
cmp
push
push
cld
sahf
sub
andb
pmuludq
mov
mov
adc
addb
and
das
aad
sub
cmpsb
mov
iret
mov
adc
and
insl
jle
adc
cmp
clc
inc
imul
adc
adc
es
xchg
sahf
and
jecxz
jl
out
loope
sbb
adc
inc
les
sbb
lsl
clc
test
js
hlt
add
fstpt
or
or
and
aad
mov
std
sbb
decb
mov
bound
outsl
pusha
jne
imul
xor
and
xchg
outsl
add
icebp
test
mov
hlt
out
jb
sub
lock
mov
lods
incl
cmp
popf
stc
xchg
movsb
jg
push
jmp
or
aad
push
cmp
mov
sbb
add
in
mov
push
pop
inc
in
push
add
adc
cltd
xor
scas
push
push
adc
imul
fisubrl
jno
jae
mov
call
xor
int3
ret
mov
imul
icebp
mov
or
or
sarl
pop
in
jne
je
sbb
out
outsl
test
or
imul
je
mov
pushf
or
adc
inc
icebp
nop
iret
or
pop
xchg
orl
push
sbb
sarb
inc
or
inc
fwait
imul
sbb
xchg
and
mov
or
int
das
clc
mov
jno
fdivrl
mov
add
jo
and
les
sti
fld
addb
mov
and
mov
ljmp
iret
mov
add
mov
push
xor
stc
jg
stc
cmp
adc
push
mov
cmp
xchg
mov
or
clc
pop
adc
jne
lds
jl
dec
adc
xor
or
inc
lods
jno
repnz
js
outsl
jge
mov
sti
lock
into
mov
aaa
rcll
mov
inc
push
ror
pushf
xchg
int
pop
test
add
filds
inc
pop
outsb
jl
mov
dec
inc
scas
jnp
in
lea
lods
arpl
loope
call
imul
cmp
pusha
jle
sbb
arpl
push
leave
jl
mov
pop
pop
stos
mov
push
movsb
cmpb
adcl
stos
fsts
imull
inc
dec
adc
mov
jo
jmp
add
or
js
stc
icebp
in
jecxz
shrl
push
push
and
adc
rdtsc
std
int3
sbb
adc
cwtl
les
add
mov
repnz
sub
jg
add
mov
push
insl
dec
sbb
adc
mov
pop
lahf
rcll
nop
push
mov
jne
cmp
mov
push
inc
inc
mov
arpl
imul
imul
in
aaa
adc
pop
mov
in
lods
xor
jbe
and
ss
arpl
and
inc
rclb
icebp
sbb
in
xchg
test
sub
xor
out
sti
outsl
inc
and
mov
dec
push
mov
stos
jns
and
sbb
jmp
inc
call
std
xorb
lock
dec
sub
cmp
xor
sbbl
gs
cltd
enter
jecxz
daa
pop
add
dec
test
mov
outsb
fimull
pop
cltd
sbb
insl
std
mov
xor
pop
daa
test
mov
arpl
sbbb
sub
push
sub
inc
cmp
gs
bound
aam
cld
fisttpl
sub
sub
std
and
cmp
fisttpl
imul
stos
sub
std
mov
rorb
fdivs
add
jbe
add
cs
dec
adc
mov
or
movb
loop
mov
or
insl
add
scas
or
in
shll
shl
mov
stc
popa
mov
mov
es
xchg
inc
popf
cwtl
cltd
insl
push
mov
adc
mov
xchg
jl
cmp
iret
jp
decb
push
pop
aad
repz
add
lret
adc
scas
inc
add
sub
mov
push
sbb
jnp
imul
cmp
in
out
div
pop
out
sbb
cmp
aad
insb
xchg
out
das
imul
pop
sub
arpl
sbb
repnz
lret
cltd
rorb
call
add
fisttpl
cld
sbb
in
lea
cli
adc
jg
adc
fwait
jb
js
in
cmp
mov
shl
stos
mov
or
fsts
jbe
add
inc
pop
mov
push
sub
adc
sub
aas
and
test
inc
popf
lds
fstpt
scas
pushf
lods
in
xchg
cld
inc
mul
adc
sub
imul
cmp
in
dec
pop
aaa
mov
popf
fwait
mov
ret
pop
and
fwait
and
xchg
mov
jnp
sub
nop
rcr
or
cmp
jo
std
push
dec
push
movsl
mov
dec
cltd
push
cmpsb
pushf
inc
sbb
adc
mov
stos
jne
enter
test
inc
std
dec
adc
orl
les
test
mov
imul
adc
push
or
pop
pcmpgtb
sub
repnz
aas
ss
addr16
repnz
test
push
lahf
getsec
scas
mov
xor
add
adc
imul
pop
sarb
jnp
push
stc
nop
clc
pop
dec
shll
mov
nop
lret
sub
shrb
pop
scas
in
lea
sahf
imul
pop
cmp
std
scas
loope
scas
sub
mov
lret
add
mov
repz
loopne
xor
sub
jnp
or
nop
ja
hlt
push
cmp
std
pop
fstl
adc
out
std
rclb
dec
test
dec
pop
fstl
loop
les
enter
icebp
lea
ret
xchg
faddl
test
in
sarl
pmulhuw
xlat
call
ret
test
or
xor
xchg
mov
in
and
jae
or
in
sub
lea
gs
adc
and
negb
add
sbb
push
xchg
scas
sub
jb
cmpl
imul
setns
movsb
lds
pop
arpl
mov
or
jb
jns
ret
popf
js
sbb
add
mov
jae
in
cmc
ss
and
lods
test
pop
push
repnz
hlt
ret
test
pop
mov
insb
clc
xchg
add
sbb
sub
in
ljmp
sub
lea
hlt
or
addr16
pop
dec
sbb
dec
data16
in
push
xchg
mov
push
mov
jge
xor
ret
xlat
and
mov
or
flds
ss
or
insl
ret
jb
xchg
xchg
mov
aad
les
cmc
scas
add
test
es
test
ds
mov
cmp
xor
stc
sahf
mov
push
jge
in
jmp
imul
mov
into
pushf
imul
xchg
scas
xchg
iret
jbe
clc
in
call
inc
in
fsincos
repnz
push
xor
leave
fstpt
sbb
aas
sub
repnz
push
fs
mov
xchg
mov
mov
and
add
lcall
xor
jge
sbb
inc
cmc
popf
and
popw
and
sti
inc
mov
dec
cmp
xchg
xor
mov
adc
out
sahf
xor
xor
cmp
push
es
sbb
xchg
sbb
push
stc
shl
inc
out
mov
adc
ljmp
scas
push
movsb
inc
or
jns
cmpsb
sub
enter
cltd
xor
stc
dec
out
out
adc
sahf
add
std
lods
adc
ror
jo
mov
fldcw
in
popa
mov
movsl
push
pushf
add
jmp
xchg
pop
ss
sbb
stc
fstps
push
data16
rcll
outsb
sub
cmc
mov
js
leave
lock
int
insl
stos
jmp
dec
lret
add
pop
add
push
jmp
andb
adc
scas
jne
xchg
pop
iret
cmp
fwait
sti
ss
repz
imul
xorb
dec
clc
call
jmp
jmp
mov
xchg
push
or
mov
add
mov
mov
add
inc
dec
dec
ljmp
add
nop
push
mov
pop
and
jg
ror
dec
insl
testb
push
push
arpl
mov
in
push
xchg
ret
call
std
mov
push
lock
mov
cli
mov
xor
pop
test
sub
iret
testl
addr16
dec
or
sbb
lret
xor
sysret
cld
popa
xor
push
dec
pushf
mov
testb
mov
shrb
inc
push
imul
sbb
pop
sarl
push
lods
push
adc
push
adc
shlb
xor
popa
and
inc
loope
jo
pop
xor
icebp
xor
fucomi
pop
inc
aaa
mov
adc
shr
fnstcw
and
xchg
push
cld
addb
sub
mov
rorl
inc
lds
inc
xchg
push
dec
sti
repnz
push
dec
xor
inc
aam
xor
sbb
sti
mov
xchg
std
int
movsb
inc
test
mov
add
fstps
jne
out
push
rclb
cwtl
insl
jg
mov
push
fwait
adc
pusha
adc
add
ss
cmp
lds
or
and
jg
loope
daa
inc
jno
sahf
aas
xchg
mov
ja
call
mov
fbstp
inc
mov
and
out
cmpsb
mov
ror
dec
sbb
in
addr16
sub
jnp
mov
inc
dec
subb
test
fwait
shrl
rcll
jne
jge
inc
push
fstps
xchg
add
mov
lea
dec
sar
mov
sbb
lahf
out
bound
dec
leave
popa
popf
inc
jg
xchg
mov
add
mov
lcall
pop
dec
insl
dec
sub
bound
lds
mov
negb
mov
int
fwait
cltd
xlat
das
stos
nop
sub
ljmp
pop
pop
pop
mov
imul
loope
sub
xchg
pushf
xchg
outsb
adc
pop
push
push
mov
imul
daa
sahf
sti
cmp
mov
jns
aam
mov
lods
loope
inc
jnp
je
outsb
cld
loopne
mov
and
flds
mov
fdivrl
mov
inc
popf
lock
js
mov
imul
xchg
jno
jmp
mov
lret
pop
cltd
daa
mov
mov
push
jmp
lret
adc
jge
dec
mov
xchg
nop
dec
inc
addr16
inc
popf
test
adc
cld
int
ja
std
mov
push
mov
test
lret
fstp
imul
out
test
dec
sbb
dec
push
fcmove
jbe
jo
sub
ret
inc
mov
cltd
jecxz
test
cmp
jl
enter
sbb
mov
xor
adcb
jecxz
mov
in
cld
adc
std
adc
rorb
test
mov
jne
imul
psllw
jmp
jno
jne
pop
inc
std
mov
push
ljmp
mov
mov
xchg
sbb
xchg
fstp
cmp
loopne
stos
pop
or
mov
push
inc
push
adc
int
mov
xchg
repnz
mov
push
insl
mov
loope
stos
inc
dec
arpl
or
cmc
lret
aad
jmp
fidivl
stc
vpunpcklbw
sbbb
bound
inc
fdivrl
pop
imul
jge
icebp
ror
std
sarl
inc
mov
fwait
das
fwait
add
xchg
daa
icebp
enter
out
xchg
bound
mov
push
push
test
xchg
pop
fidivl
mov
adc
test
or
pop
aaa
xor
mov
and
lret
xchg
mov
and
mov
mov
mov
mov
jns
inc
sub
iret
test
add
out
frstor
cmpsl
mov
adc
jo
sbbl
pop
out
and
gs
xchg
fdivrp
filds
mov
lods
fmul
adc
dec
add
adcl
inc
shl
insb
ljmp
pusha
adc
das
mov
inc
jne
cwtl
xor
dec
mov
sbb
jbe
add
imul
push
add
std
dec
add
dec
and
jmp
daa
lret
clc
mov
test
rorb
push
sahf
clc
das
add
mov
push
pop
ljmp
or
cmpsb
in
or
push
imul
scas
std
cmp
add
nop
cwtl
std
testb
lds
sub
setbe
sbb
mov
sub
adc
cmp
jl
popf
inc
in
aas
cmc
jmp
test
in
daa
fistl
or
dec
jge
std
and
leave
iret
mov
fwait
mov
stc
cli
jl
xlat
xchg
ljmp
fwait
mov
imul
cmpsb
push
xchg
nop
inc
repz
cmc
pop
lea
xchg
pop
orb
adc
or
fadd
jmp
add
or
pop
jno
ret
clc
jo
mov
cmp
std
lret
rcrb
push
leave
outsl
jg
push
sbb
rolb
gs
ret
test
jae
adc
ljmp
imull
push
loope
dec
dec
cmpsb
stos
push
ljmp
mov
dec
sbb
rcrl
cmp
dec
push
mov
fstp
fiaddl
ss
out
sbb
or
inc
fs
mov
jge
cltd
push
mov
push
adc
popa
pop
stos
into
mov
xchg
mov
fisubl
scas
repz
jmp
jge
mov
mov
in
loope
lods
pushw
cld
cmpsb
adc
out
enter
aas
insb
adcl
popf
cmp
das
sbb
pop
add
cwtl
sub
pop
cmp
data16
shll
movsl
adc
push
pushf
ret
xchg
or
jns
mov
mov
mov
int
pop
stos
mov
imul
jp
add
pop
xchg
or
arpl
fisubl
daa
popa
xor
mov
sub
push
fisttpll
mov
push
aam
inc
xchg
cmp
pushl
fldt
icebp
jle
cmp
imul
popa
add
out
sbb
movb
shrl
mov
fsubl
std
test
fwait
mov
lds
push
arpl
sbb
cli
cli
sub
xor
in
mov
inc
xchg
jbe
fwait
adc
mov
imul
adc
push
addr16
push
cmpsb
fnsave
sub
gs
jge
data16
fnsave
xor
pop
adc
sub
cltd
fldcw
cs
movsl
mov
sbb
loope
adc
jbe
sub
cmc
divb
jg
sub
or
mov
cmp
cmc
enter
lea
ljmp
push
out
mov
mov
jne
nop
xor
adc
mov
addr16
stos
mov
and
or
mov
or
jnp
xchg
add
cltd
pop
sbb
inc
add
lea
push
jg
mov
pop
jae
pop
or
mov
pop
stos
lea
pop
add
jl
xchg
jp
out
popa
lds
std
fidivrl
in
jecxz
das
imul
movsb
lods
dec
movsl
sub
rcll
data16
lock
imul
sbb
cmc
nop
je
mov
mov
mov
xchg
cmp
pop
jmp
push
jmp
jmp
cmc
push
inc
scas
lods
cmp
popf
adc
sub
dec
add
lret
int
out
xchg
xor
testl
mov
stos
pop
rcll
or
push
inc
mul
test
in
mov
mov
adc
ljmp
jno
dec
ss
cmpsl
lret
pop
pop
xor
roll
imul
je
lods
subb
adc
sbb
loopne
leave
cmp
xchg
sahf
insl
mov
or
inc
push
gs
sub
std
pop
outsb
repz
in
shlb
jle
mov
dec
xchg
imul
sub
inc
jbe
loop
stos
out
xor
jae
adc
mov
imul
aas
jne
out
imul
and
iret
cld
cmpsb
loopne
popl
inc
xor
ret
in
insb
sub
xchg
ds
lcall
leave
xor
test
mov
or
mov
push
dec
ret
jmp
test
xlat
xor
outsl
ret
add
jmp
mov
into
push
lods
adc
mov
idiv
push
scas
xchg
dec
cmpsl
jne
dec
jno
fildll
neg
rcr
jns
or
out
lret
push
rorb
mov
scas
sti
mov
les
push
stc
adc
push
sbb
ret
mov
int
ss
pop
push
enter
mov
rclb
jne
mov
mov
imul
add
std
sub
popa
loop
mov
nop
xchg
inc
jns
pop
outsb
shll
pushf
loop
test
daa
jb
cmpsl
scas
fdivrl
and
mov
int3
jbe
cmp
xor
ficoml
fwait
ja
dec
push
into
dec
push
mov
xchg
mov
scas
push
repnz
and
std
mov
push
sbb
mov
std
push
rorl
cmp
cmp
xor
sbb
outsb
cmp
xor
adc
cmc
pop
jmp
test
in
mov
push
imul
stc
lcall
mov
mov
inc
je
cwtl
sub
inc
jne
push
sarl
xchg
jg
test
out
fiaddl
lea
addl
js
xchg
or
outsb
xor
out
ficoml
xor
outsl
or
jns
xchg
or
jae
adc
jbe
pop
pop
cli
and
jp
mov
int
dec
imul
adcb
insl
sbb
mov
into
pop
das
sub
dec
rolb
xchg
add
adc
xchg
jnp
std
or
icebp
scas
int
leave
mov
and
and
push
test
sti
add
shld
or
leave
sub
xchg
es
mul
push
sbb
outsb
mov
movsl
stos
push
rorl
push
and
imul
pop
push
popf
cltd
stos
lret
jb
lea
cmp
add
in
sub
inc
cld
mov
mov
or
into
pop
or
pop
stos
mov
stos
lea
test
add
ret
jecxz
inc
hlt
inc
mov
xchg
mov
ret
mov
lahf
incl
out
mov
add
dec
decl
inc
cmp
fs
xchg
inc
aam
adc
jno
std
sbb
sbb
in
aaa
mov
push
dec
mov
xchg
scas
stc
mov
sbb
addr16
cmpsl
adc
ret
jne
clc
sti
jmp
mov
sub
sub
es
or
lea
pop
fisttps
inc
jp
imul
movsb
mov
jg
mov
xor
mov
add
mov
push
sbb
ret
ljmp
mov
testb
inc
cmp
fcmovb
in
aad
pop
cld
jo,pn
dec
mov
mov
push
data16
mov
in
jp
addr16
bound
push
clc
jecxz
std
add
push
jge
lods
add
jnp
imul
jno
std
repz
neg
add
cltd
outsb
inc
lock
add
push
ficoml
push
fcmovnb
sar
std
dec
and
dec
scas
mov
nop
lods
jnp,pn
das
add
push
inc
mov
cmp
cmc
inc
jbe
mov
sbb
js
repz
jp
lcall
fxch
int3
ja
sub
enter
out
mov
sti
ss
lea
xchg
inc
ret
xchg
sub
mov
int3
sti
stc
jns
mov
adc
xchg
cmp
inc
mov
xchg
dec
imul
pushf
cmp
cli
sub
mov
cmpsl
test
adc
push
imul
push
daa
fsts
mov
adc
cs
xchg
or
lea
decb
aas
mov
dec
fcoml
lock
fnstcw
jbe
leave
fstpt
lret
insb
xchg
test
inc
std
sbb
data16
jl
movsl
stc
mov
cmp
lock
and
mov
sbb
pushf
lea
out
adc
cmpsl
fidivl
mov
xor
xchg
and
dec
and
ficomps
fs
sub
js
push
push
aam
lret
xor
pop
xchg
fnsave
xchg
lea
mov
popa
dec
xlat
mov
adc
and
mov
call
leave
or
sub
push
or
pop
pop
or
mov
fsubl
aad
sbb
pop
aam
xchg
int
mov
lock
mov
add
pushf
sub
jmp
dec
stos
push
imul
cld
xchg
sub
adc
mov
lea
dec
lahf
call
ds
push
and
or
xlat
orl
popa
inc
dec
adc
pushf
xchg
jl
ret
popf
xchg
mov
movl
xor
imul
push
lods
cmp
stos
sahf
sub
adc
xlat
lret
mov
stos
je
adc
add
push
aam
xor
xchg
adc
xor
mov
push
mov
das
nop
mov
std
mov
scas
stos
or
dec
fmull
or
lret
dec
shrb
mov
xor
xchg
mov
inc
and
fiadds
shlb
cld
jp
cwtl
movb
ds
imul
jnp
insb
hlt
mov
jnp
mov
sarb
pop
jne
fwait
mov
add
jecxz
pop
sbb
adc
call
addr16
outsb
inc
mov
push
inc
std
adc
icebp
inc
ljmp
into
inc
pushf
or
lea
dec
xchg
xchg
adc
stos
xchg
xchg
imul
xor
jb
jmp
mov
adc
and
movsl
jg
rcll
scas
or
js
pop
std
outsl
shll
movb
and
cmp
lea
add
xchg
xor
clc
lea
iret
adc
fwait
aam
adc
lret
mov
mov
int
jbe
aas
sbb
push
mov
pop
xor
insl
jge
out
sbb
aad
mov
icebp
nop
add
xchg
cmpsb
pop
add
push
mov
add
lret
push
adc
adc
pusha
outsl
shrl
in
add
xlat
or
les
or
and
nop
cli
cmp
sbbb
or
icebp
arpl
int
std
stc
fs
push
xchg
int3
lea
xor
and
loopne
cmc
add
add
cmpsl
in
pop
and
mov
pop
adc
push
and
clc
out
lret
loopne
push
push
xorb
mov
jl
movsb
and
nop
inc
mov
negl
ja
in
add
adc
or
lcall
dec
stc
arpl
movsb
jmp
push
mov
outsb
jne
repz
lods
repnz
jnp
pop
bound
jne
pop
in
lds
jle
call
add
sub
adc
imul
push
popf
mov
insb
je
xchg
adc
mov
xor
push
sub
push
insl
mov
imul
jmp
dec
cld
xchg
xchg
dec
addb
jo
cmp
or
xor
push
cmp
jmp
adc
fiaddl
mov
inc
sbb
in
les
sub
or
push
mov
bound
shl
pop
jae
aam
imul
sbb
xchg
inc
mov
fcmovbe
jnp
fucomip
jns
jecxz
mov
repz
mov
fs
mov
or
mov
rcrl
loope
and
inc
arpl
mov
push
loop
jne
dec
movsl
sbb
pop
repz
add
jecxz
or
adc
pop
out
movsb
push
loope
and
adc
cmp
hlt
mov
pop
lahf
adcb
in
and
mov
daa
outsb
cwtl
in
popf
or
movsb
jns
fsin
or
jg
cmp
jo
add
flds
mov
sbb
in
movsl
mov
push
mov
test
xchg
mov
and
xor
dec
inc
push
bound
jb
xor
js
icebp
sarl
enter
inc
and
push
sbb
or
mov
push
push
loop
dec
popa
hlt
inc
push
xlat
unpcklps
popf
fiadds
aam
dec
push
int3
ret
popf
pop
idivl
cmp
mov
sti
popf
mov
rcrb
mov
inc
push
insl
cmp
push
cmpsl
push
inc
pop
adc
xor
jg
and
add
adc
and
mov
jbe
call
bound
cmc
enter
imul
test
pop
out
cli
ret
incb
out
mov
shrl
addr16
xor
cmpsb
aas
mov
lods
jne
lods
mov
xchg
pushf
xchg
add
cmp
inc
push
cltd
jmp
cmp
lods
and
clc
aaa
push
mov
cmp
pop
test
cmp
int
add
lods
pop
cmp
cltd
xor
pop
xchg
push
fsubrs
cmp
xor
mov
xor
xchg
in
out
negl
jne
fists
xor
ljmp
loop
adc
mov
inc
fldenv
mov
arpl
xor
and
cli
xchg
cmpsb
mov
in
outsl
mov
xchg
jne
mov
test
jg
cwtl
mov
cmpsl
roll
mov
xchg
imul
hlt
push
ja
sub
pop
or
fnstenv
xor
ljmp
sahf
sub
cs
inc
dec
scas
nop
or
mov
inc
add
pop
or
lcall
add
in
gs
fidivrl
sbb
clc
add
xor
pop
cmp
inc
in
push
push
push
inc
mov
nop
movsl
cmp
movsl
jnp
sbb
fstpl
jnp
aas
dec
sub
xor
jnp
mov
inc
mov
pop
adc
jmp
xor
ret
inc
cmp
mov
jmp
xchg
je
jo
inc
ja
mov
daa
hlt
in
or
lds
cs
cmp
pop
addl
sbb
mov
stos
bound
btc
lods
mov
testb
mov
inc
insl
xchg
insl
xchg
movsl
or
andl
dec
sarl
ja
add
fdivrs
sbb
popf
pop
sarl
sbb
hlt
mov
je
stc
mov
call
int3
mov
mov
nop
ja
add
and
loop
push
mov
or
or
inc
loop
testl
pop
sub
and
dec
addr16
push
inc
cwtl
pop
jno
xchg
cli
out
push
mov
subl
add
test
fwait
add
outsb
inc
cmp
pop
sub
push
or
sub
push
fisubrs
push
pop
movsl
mov
negb
imul
ja
js
lods
ja
lock
arpl
std
pop
jne
mov
pop
and
aad
fsubrl
sbb
xchg
lods
and
int
jmp
jne
bound
push
sbb
jp
pop
lds
mov
push
and
jbe
hlt
in
push
imull
jg
fdivr
mov
push
fwait
jle
pop
and
pop
cmc
test
cmp
inc
imul
jne
std
jmp
add
jg
cld
arpl
div
push
pop
leave
mov
sub
add
fwait
movsl
nop
xchg
cwtl
lea
in
jns
pop
jb
or
lret
jmp
out
inc
aaa
pop
repz
sbbl
sub
data16
lret
jge
xchg
sub
push
divb
test
std
jle
xor
ficoms
xchg
out
sbb
scas
loop
dec
xor
jno
fimuls
sbb
call
mov
out
iret
cltd
and
jg
adc
xor
movsl
iret
jmp
dec
cmp
test
pop
into
cwtl
push
stc
or
mov
popf
jne
or
shrl
movl
lods
test
das
or
or
stc
jae
push
push
jne
xchg
rcl
adc
clc
inc
xchg
or
mov
xlat
jae
jo
add
mov
jecxz
fbstp
xlat
gs
mov
mov
lcall
repnz
lods
icebp
sbbb
sub
les
out
out
jno
cmp
sub
push
and
subl
sbb
cmp
inc
xorl
pushf
dec
push
push
outsl
jae
add
push
popf
rol
mov
and
sub
in
jns
test
insl
insl
and
or
pop
or
movsl
mov
nop
scas
test
mov
test
adc
dec
jmp
pop
nop
mov
jle
fdivs
adc
out
jo
mov
das
jae
enter
fistps
mov
sbb
xor
mov
xor
test
es
adc
mov
int3
out
sbb
insl
aam
leave
sub
xchg
aad
push
mov
lds
fcomps
pop
test
xor
sub
fimuls
nop
and
in
test
ret
xchg
aaa
jg
ja
sti
xchg
jmp
mov
aad
test
test
pushf
jmp
push
scas
dec
insb
dec
ds
or
fidivl
mov
dec
inc
stc
xchg
xchg
jle
ljmp
scas
sarl
xor
mov
lds
imul
cmp
pop
lds
mov
loope
sub
cltd
cmp
adc
inc
cmp
pusha
pusha
inc
loope
jle
ljmpw
fs
pusha
jge
lock
ja
pop
sti
hlt
dec
pop
ret
inc
mov
cli
imul
ja
fs
lds
lea
sub
test
pop
mov
out
arpl
inc
fdivs
or
mov
mov
and
movb
sub
int3
mov
pop
das
in
inc
ds
mov
ret
dec
pop
fidivs
imul
inc
cs
into
movlhps
clc
add
mov
iret
pextrw
mov
loop
adc
mov
mov
push
adc
jbe
add
insb
add
stos
int3
mov
iret
push
lret
shrl
and
out
pop
popa
fstl
test
ret
pop
push
mov
test
mov
int
gs
call
push
jecxz
aas
xor
insl
sub
sbb
adc
cmp
fsts
hlt
push
and
and
add
jg
fisttps
cmp
lret
sbbb
mov
jbe
and
aad
adc
in
adc
cmc
inc
dec
es
std
cmp
mov
fbld
testl
inc
stos
int
pusha
mov
dec
ljmp
into
call
pop
loopne
fcmovbe
cli
scas
cvtps2pd
push
cmp
out
sub
ja
or
orl
xor
jb
cmp
cmpsb
and
shl
fsts
clc
cs
cld
int
out
fs
fs
or
into
xor
repz
shll
arpl
xchg
and
dec
fwait
push
push
bound
sub
mov
jno
test
fnstcw
and
cmp
xor
sbb
icebp
popf
test
pop
inc
cs
cmp
lods
aaa
fs
inc
ret
call
stc
mov
mov
lea
dec
imul
filds
fisubs
andb
fdivrl
outsb
je
mov
call
repz
and
addr16
mov
add
sbb
add
pop
std
adc
jne
pop
pop
gs
stos
mov
cmp
js
and
add
lods
subb
inc
inc
xchg
sbb
int
and
lret
lock
sbb
mov
jo
in
clc
xchg
push
sub
mov
out
jne
push
push
call
adc
jg
in
mov
movl
sub
jae
clc
dec
loop
jnp
xchg
pop
lock
subl
ret
addb
inc
mov
stos
subb
sub
movsb
jae
jne
cld
mov
pop
mov
adc
cmc
sbb
mov
stos
cld
lea
mov
xchg
pop
jo
sbb
repnz
in
and
es
pop
xchg
add
pop
mov
insl
js
mov
lret
xchg
mov
in
pop
and
push
je
and
adc
sub
testb
pop
mov
mov
inc
and
mov
stc
mov
push
inc
mov
div
and
pop
mov
iret
xchg
mov
es
add
clc
adc
xor
jno
pop
ja
test
xchg
aam
mov
pop
add
sub
and
repnz
sahf
fmuls
cld
dec
cmp
xor
int3
xchg
fwait
mov
ret
mov
push
sti
mov
jo
call
icebp
cmp
mov
lret
and
push
stos
push
push
sti
jbe
mov
fs
pop
insl
ret
adc
inc
xor
mov
mov
fwait
jg
jp
sub
out
and
and
in
jg
or
int
push
enter
sub
lahf
and
sbb
push
and
mulb
pop
and
lret
leave
add
sbb
enter
cmp
push
iret
sub
pop
out
lcall
and
cwtl
mov
faddl
hlt
pushf
cs
mov
mov
xlat
mov
mov
sub
in
xchg
js
jns
fbstp
pusha
fistpll
gs
int3
jbe
nop
mov
mov
rclb
lods
sub
repz
adc
gs
or
nop
imul
xchg
add
repz
cmp
aam
pop
add
mov
jb
and
movsl
popf
mov
stc
jp
loope
bound
push
and
arpl
scas
or
cmp
xchg
das
add
mov
dec
cmp
lret
xchg
mov
out
mov
cs
fsubrl
dec
inc
jmp
xor
push
push
adc
jae
push
in
pop
outsb
ljmp
and
ljmp
push
bswap
mov
pop
ret
lret
ja
fmull
fwait
out
adc
jmp
sub
stos
push
stos
mov
push
push
shlb
fisttpl
add
cmc
pop
rcll
in
xor
les
mov
or
pop
enter
fsubp
jle
and
jne
aam
dec
movsb
andl
xchg
cmp
mov
lea
fadd
mov
dec
dec
movsl
adc
pop
and
add
add
jbe
stos
adc
sahf
es
cld
add
push
mov
insb
loop
inc
arpl
or
psrad
int3
imul
add
lds
mov
call
fldpi
movsb
or
push
jle
cmpsb
in
sti
lcall
inc
cmp
adc
and
clc
ret
pop
cmc
ss
notb
inc
lock
mov
call
aas
scas
bound
imul
test
sub
push
sub
stc
sub
pusha
fcompl
movsb
push
mov
add
pop
adc
shll
orl
xchg
cmpsb
push
push
das
dec
addl
jno
cmp
mov
ss
mov
pop
imul
out
add
mov
jno
dec
mov
stc
test
pop
test
and
adc
and
inc
xchg
lahf
aam
pop
mov
or
sti
add
sahf
adc
xchg
icebp
cli
lds
outsl
sub
cmp
jbe
cmpsb
push
icebp
push
lods
gs
loope
rep
adc
push
inc
jbe
jne
push
repnz
fldl2t
hlt
rorb
mov
push
xchg
into
ljmp
mov
ds
lods
cmp
negl
or
hlt
push
iret
inc
lea
pop
aad
outsl
cmpsl
aas
xchg
xchg
mov
loope
adc
test
icebp
push
pop
in
aad
adc
repz
xchg
ja
shr
xchg
pusha
aad
into
out
mov
mov
stos
adc
lret
mov
aad
lods
fwait
adc
inc
xchg
aad
sbb
adc
pop
mov
lock
ret
test
and
cmc
inc
mov
lahf
jmp
fadd
pop
mov
mov
sub
popa
frstor
xchg
ret
xchg
loop
pop
test
ljmp
mov
push
add
mov
mov
mov
outsl
cmp
cli
gs
int
jle
xchg
out
pop
sbb
mov
popa
mov
les
push
mov
pop
or
faddl
mov
or
jb
dec
push
cmp
std
inc
adc
fildll
fwait
in
and
add
subl
inc
cmp
push
inc
pop
sbb
mov
xchg
movsl
jbe
cmp
mov
fs
sub
and
xchg
negl
fnstsw
mov
pop
insb
push
fsubrl
mov
aam
sub
or
xchg
mov
pop
jns
mov
shrb
xchg
enter
in
sbb
xor
jge
in
dec
dec
xor
leave
pop
xchg
mov
pop
and
fcompl
stos
cli
aad
les
sahf
sub
iret
in
sar
pop
and
xchg
into
sbb
sbb
lret
jp
sahf
les
adc
cld
pop
sbb
xrelease
in
inc
inc
dec
fcomps
test
or
mov
imul
outsl
scas
hlt
mov
pop
test
nop
out
dec
pop
in
or
and
or
pop
pop
loop
xchg
ljmp
scas
sub
mov
gs
mov
aaa
and
add
popa
lods
in
imul
mov
xor
sbb
test
adc
xchg
idivb
mov
in
dec
sahf
loopne
fistps
xchg
jmp
iret
mov
jns
lea
pop
sti
push
cmp
sbb
jne
scas
out
fs
fldt
push
cmp
xor
cmpsl
mov
xor
aad
jmp
push
aaa
or
inc
icebp
mov
jmp
or
sbb
adc
and
mov
aad
fdivs
push
jle
adc
aad
mov
dec
cmp
and
cli
cmp
sub
clc
jae
imul
outsb
fdivrl
xchg
das
jb
mov
jbe
sub
sub
jo
inc
inc
lcall
sbb
mov
pop
call
xor
mov
rclb
push
sub
cmp
cli
rcrb
sbb
iret
push
aas
xchg
icebp
clc
pop
cs
push
sub
ret
dec
shl
adc
icebp
je
cmp
mov
lcall
jmp
push
mov
mov
and
mov
pop
and
cmpsl
js
pop
iret
icebp
dec
cltd
sbb
xchg
je
in
add
add
test
mov
lahf
int
and
scas
fldcw
cmp
sub
jecxz
icebp
push
pop
xchg
push
lea
popf
sbb
dec
test
int
push
fnstcw
xor
adcl
mov
cmpb
add
jns
test
test
leave
xchg
adc
add
in
pop
xor
daa
mov
lahf
and
lds
cli
in
sbb
imul
sbb
dec
sub
fldenv
pop
iret
insb
adc
mov
cwtl
sbb
mov
add
repnz
in
cs
sbb
xor
lcall
clc
mov
push
movsl
sbb
xor
xor
cld
mov
jnp
test
out
push
out
dec
arpl
in
out
pushf
push
dec
jne
mov
adc
and
xor
sbb
jnp
imul
repz
iret
popf
jae
scas
push
add
xchg
mov
mov
hlt
loopne
cld
ror
add
loope
push
daa
fiaddl
pop
sahf
inc
add
pop
in
push
and
pop
popa
mov
ret
shrb
mov
lcall
loope
and
popa
sbb
fwait
in
sbb
test
js
out
stos
test
sbb
lret
loop
pop
andl
adc
iret
or
fdivrs
arpl
mov
mov
dec
hlt
xlat
push
scas
sbb
sbb
test
fwait
movsb
iret
mov
aad
shl
out
aam
mov
loopne
leave
test
stc
adc
mov
pop
fsubrs
jp
mov
lcall
cmp
fcomps
mov
mov
popa
lods
pushf
lea
lret
jl
in
sbb
pop
cld
push
cmp
cwtl
add
in
xor
hlt
cmp
inc
les
ret
in
mov
lds
fidivrl
jne
mov
dec
popf
das
jne
xor
xchg
ja
lret
and
nop
pop
or
adc
test
inc
ljmp
arpl
loope
fcoms
xchg
sub
push
inc
push
mov
inc
inc
fdivr
stos
push
cmp
test
scas
adc
mov
sub
jle
mov
aad
fwait
mov
fisttps
or
or
dec
fstpt
mov
or
popf
repnz
xor
cmp
fstp
push
push
mov
lcall
idiv
adc
adc
add
xor
mov
cltd
mov
leave
inc
cld
mov
jne
inc
fld
dec
lds
adc
in
xchg
cs
out
xor
xchg
sub
sbb
call
out
pop
fs
outsb
add
arpl
mov
xchg
and
mov
cmp
cld
pop
dec
scas
mov
rcll
mov
sbb
push
rolb
outsb
lret
dec
scas
pop
mov
xlat
ja
dec
sbb
push
lds
enter
push
decb
push
das
pop
sbb
rorb
imul
push
int
std
int
xor
sarb
and
out
mov
xchg
sbb
inc
ja
repz
push
mov
clc
in
fcompl
out
nop
and
or
xor
test
jbe
mov
or
imul
testb
and
dec
mov
jmp
test
xchg
push
lret
sbb
inc
arpl
push
push
lret
fbstp
inc
pop
xchg
mov
pop
pusha
cmp
push
sbb
xor
adc
aas
pop
jo
xor
jbe
add
fucomi
cmp
fiaddl
divl
shrl
adc
push
jle
push
stos
mov
xchg
in
push
inc
pop
popf
loop
mov
movl
mov
flds
or
les
jbe
cmp
negb
arpl
in
loop
es
xorl
nop
stos
test
pop
pop
sbb
and
test
push
adc
or
jo
mov
pop
lods
rolb
add
push
out
std
inc
das
insb
inc
pop
mov
push
dec
jb
cmpl
andl
das
psubb
adc
sbb
xchg
xchg
mov
pop
cmp
movsb
cwtl
jg
lcall
push
cmp
pop
add
mov
mov
cmpsb
jp
pop
lods
or
or
cmpsb
dec
or
mov
or
xor
xor
or
add
cmpsb
cmp
pop
add
add
sarl
sbb
movsl
push
les
aas
sbb
mov
cmp
cmp
in
push
add
in
jns
xchg
xchg
or
popa
fdivrl
xchg
popf
cmp
icebp
out
imul
mov
scas
sub
aaa
and
dec
cmp
sub
test
pop
fildl
aam
jns
pop
sbb
pop
aas
mov
xor
add
call
cmp
test
popa
mov
shrl
vandnps
mov
lcall
sahf
cmp
outsb
cmp
xchg
lea
sbb
bsr
adc
in
sub
add
pop
xor
int3
fs
jge
jmp
out
addb
jnp
pop
lea
and
enter
lods
ljmp
rcr
push
icebp
aam
push
outsl
js
mov
mov
mov
test
movsl
sarl
pop
mov
loop
jae
dec
dec
into
les
mov
aaa
lds
dec
test
jmp
sbb
push
fmuls
push
repnz
dec
out
ja
push
popa
inc
movsb
sbb
fidivrl
in
cmpsb
xor
mov
sub
movsl
cmp
lods
sub
adc
sbb
pop
cld
lahf
test
fimuls
mov
aad
mov
arpl
fcompl
mov
int3
pop
cs
inc
pop
pop
in
and
ret
pop
in
jl
pop
idiv
jge
mov
out
arpl
jo
jnp
mov
lods
rcrb
mov
mov
inc
or
jecxz
jle
ja
sub
hlt
cmp
bound
pop
mov
xchg
notb
adc
mov
push
shrb
call
sbb
adc
lods
lods
outsb
sti
loope
nop
je
dec
mov
loopne
outsl
add
xchg
insl
jb
jmp
adc
call
popa
insb
dec
xor
hlt
cmp
and
shll
inc
fld
insb
pop
jno
hlt
push
cmp
adc
pop
lret
insl
pop
pop
mov
imul
sbb
into
sub
pop
mov
leave
push
push
cmp
data16
int3
lock
adc
cli
mov
sub
test
and
cmp
pop
pop
ss
inc
push
add
sub
ds
shll
popf
sbbb
stc
std
nop
dec
movsl
cltd
and
stc
insb
adc
mov
and
stc
mov
dec
mov
mov
outsl
lds
adc
sbb
push
adc
inc
lds
arpl
mov
push
stc
adc
lods
inc
hlt
mov
cltd
shrb
inc
lods
test
xor
mov
int
push
leave
dec
imul
push
lods
arpl
cmp
fsts
aas
cmpw
pop
sbb
pop
xchg
les
add
insb
adc
xchg
pusha
xchg
mov
add
lea
fisubrs
jnp
orl
ret
mov
cltd
xchg
imul
pop
push
popf
cmp
test
repnz
jnp
neg
adc
aaa
test
scas
and
mov
push
mov
pusha
aad
mov
stos
or
fwait
dec
push
in
mov
sub
xchg
test
push
mov
lock
sub
aam
mov
xchg
xchg
imul
sub
inc
cmp
or
mov
mov
shrl
pop
mov
into
inc
cmp
jge
cmp
les
cli
call
cmp
cmp
rcrl
pop
cli
inc
adc
jmp
jnp
insb
xor
ljmp
jl
in
mov
pop
cs
mov
fdivrs
insb
stos
popa
insb
inc
mov
ss
push
add
pop
nop
mov
out
xchg
stos
mov
into
pop
cs
push
cmp
scas
cmp
clc
lcall
cmp
mov
ljmp
testl
insb
movsb
aad
pop
sbb
add
jne
jl
popf
cli
xchg
jl
mov
sbb
bound
dec
pushf
fwait
jne
imull
ja
xchg
rdpmc
jge
push
loope
sbb
inc
loope
lcall
fwait
pop
in
test
stos
jg
mov
cmp
std
push
xor
xor
jecxz
sbbl
push
fwait
inc
fisttpl
jmp
jg
subl
push
out
pusha
or
fwait
pop
mov
add
or
mov
pop
and
push
call
je
dec
stos
fimull
cmp
leave
outsl
add
xchg
add
xchg
jp
in
jb
and
int
add
subl
jnp
int
aam
inc
add
mov
rep
jecxz
mov
rdmsr
je
xor
fidivrs
add
cmp
lret
cmpsb
in
out
sub
sahf
pushf
and
fistpl
cmp
mov
or
mov
lcall
scas
xchg
push
mov
mov
in
ds
lds
push
mov
inc
mov
mov
pop
int3
add
xchg
into
lahf
cltd
inc
sbb
arpl
inc
ret
pop
jg
sbb
pop
out
mov
and
fld
mov
lea
inc
jg
mov
cmp
sub
jbe
xchg
jo
mov
cld
jmp
xchg
sub
rcrl
adc
movsl
dec
dec
xchg
lret
nop
jl
nop
in
add
test
add
jecxz
add
shll
jbe
lea
lods
stc
jmp
fistpll
xor
mov
out
testb
je
xor
xor
jne
push
jne
add
test
pop
mov
loopne
xchg
rolb
popf
inc
mov
icebp
pop
inc
dec
movsl
inc
das
daa
cmpsl
call
and
sub
inc
xor
int
popa
shl
xor
or
xchg
mov
xor
jbe
push
pop
push
push
or
mov
add
push
push
neg
xchg
inc
mov
rclb
or
test
mov
lds
push
lret
cmp
pop
or
lods
mov
push
add
movl
in
ffreep
dec
fsubrs
cmpsb
jno
clc
and
or
ss
xchg
add
inc
test
dec
cs
inc
in
loope
in
pop
adc
jo
loopne
fbld
inc
mov
fwait
inc
mov
cmpsl
iret
pop
dec
cld
and
mov
add
mov
subl
jg
addl
ja
jge
jmp
xchg
cmp
pusha
mov
jmp
mov
aaa
push
xlat
inc
stos
adc
mov
pop
mov
jno
add
filds
or
pop
pop
add
gs
xlat
cli
dec
aam
push
and
in
mov
pusha
mov
push
push
adc
stos
lods
mov
lods
fiadds
add
je
mov
out
jb
mov
pusha
pop
dec
popa
int3
inc
sub
sbb
popa
cltd
mov
arpl
sahf
rcrl
ret
or
dec
push
adc
loop
push
cli
ror
inc
mov
mov
adc
imul
xor
decl
sarl
sarb
add
es
roll
lds
mov
push
sub
int
daa
pop
mov
push
fnstcw
cmp
mov
jb
clc
mov
mov
and
xchg
hlt
mov
shrb
jge
mov
sbb
lds
xor
push
lods
mov
pop
dec
addr16
sub
fnstcw
mov
mov
fcomi
sub
loopne
add
movsl
mov
jo
int3
sbb
mov
xchg
sbb
inc
push
imul
fcoms
push
cltd
call
adc
into
mov
inc
pushf
cwtl
jne
movl
arpl
mov
pop
jne
fcoms
shlb
inc
xor
xor
dec
andb
jl
xchg
shlb
ds
cmp
jns
dec
push
test
mov
xchg
sub
mov
mov
pop
sbb
mov
cmp
dec
test
push
hlt
mov
mov
cld
adc
pop
lds
sbb
iret
pushf
or
lret
cwtl
adc
mov
lods
cmpl
mov
dec
test
fisubs
ficomps
xchg
jmp
pop
push
inc
xor
cltd
nop
push
test
pop
mov
js
hlt
mov
pop
xchg
xchg
push
xchg
xlat
stos
mov
int
jge
fidivrs
sbb
xchg
mov
xor
repnz
jge
cmpsl
popf
shrb
cmpsb
pop
xlat
neg
and
inc
clc
sbb
jnp
mov
xchg
pushf
sbb
shrl
cmp
pop
out
test
ret
mov
aad
and
push
and
addr16
clc
inc
cld
stc
mov
or
pop
in
out
incb
push
adc
das
in
cmp
call
mov
cmp
fisttps
xor
testw
sbb
cmpl
stc
clc
jp
pop
aam
test
into
test
and
stos
pop
jne
clc
sub
push
mov
aas
js
das
jno
mov
pop
lahf
std
sub
dec
sub
or
hlt
fcmovu
push
cmc
lods
loopne
daa
dec
test
xor
sub
roll
mov
lcall
cltd
jl
loopne
xchg
cmp
pop
push
loop
fsubrp
dec
icebp
inc
push
rcll
fisttps
mov
sbb
inc
test
lods
mov
aaa
mov
inc
jnp
mov
xor
lahf
or
ja
ljmp
mov
roll
or
mov
dec
lock
dec
inc
cmp
aam
adc
push
iret
xlat
xchg
jne
int3
test
add
das
fadds
sub
mov
ror
cli
mov
dec
testl
loopne
sahf
push
aad
jbe
test
dec
stos
jne
and
repz
adcb
jp
in
push
push
xchg
jmp
jmp
push
sub
std
push
fimull
xchg
mov
fidivs
push
xchg
fnstenv
xlat
pop
loope
sub
cmp
mov
adcl
test
out
push
mov
pop
cmc
je
push
mov
in
clc
inc
cmp
push
jg
dec
out
pop
dec
inc
dec
aad
lock
fldt
in
jmp
jno
shlb
cmp
outsl
dec
insl
and
mov
bound
imul
rorb
sub
ljmp
jbe
out
pushf
mov
cwtl
mov
xor
ret
test
add
sub
push
test
divps
frstor
mov
test
into
aaa
xchg
xor
jbe
pop
mov
aad
fcompl
fsubrs
nop
lods
mov
fildl
push
mov
dec
and
sahf
cmpsl
mov
es
pop
mov
pop
fwait
sub
cmp
lea
cmp
mov
xchg
out
test
into
shll
pop
scas
xlat
mov
pop
ds
pop
inc
test
and
dec
arpl
xor
add
dec
imul
sahf
pop
popa
cmp
xchg
sbb
clc
outsl
daa
mov
pop
lods
mov
ja
pop
pop
and
pop
jle
jge
sbb
xchg
xor
inc
adc
ja
loopne
or
repnz
out
inc
lahf
mov
xchg
inc
jns
jnp
dec
ja
popa
and
out
jbe
cmp
and
xor
sarl
dec
add
xor
cmp
and
int3
pop
divb
inc
inc
xor
cmpsb
pushf
xchg
add
stc
aad
ja
adc
push
movsb
xchg
and
ret
inc
scas
ret
mov
test
xor
mov
pop
das
pop
sbb
loopne
sub
clc
mov
adc
cmc
int
or
fidivs
push
shrb
sbb
xor
int3
mov
enter
leave
out
pop
fsubl
pop
clc
inc
jecxz
stos
push
es
and
pop
cs
cmp
pop
fidivrs
push
pop
push
add
lds
lds
outsl
cmpsb
fstps
repz
jp
inc
cmpsb
bound
js
lock
out
push
fisttpl
cmp
push
aas
sub
lahf
pop
xchg
sbb
call
scas
loope
push
xor
push
mov
pushf
fisttpll
mov
jg
lods
jg
movsb
mov
jl
jnp
inc
shl
arpl
jecxz
mov
loopne
sbb
fldcw
in
push
and
fcmovnbe
cltd
ss
stos
add
aas
mov
lret
andb
fstps
push
or
fiaddl
insl
in
adc
lcall
pop
mov
xor
dec
int3
sub
or
add
xor
inc
xor
xchg
scas
in
jnp
push
adc
sub
xchg
scas
jl
mov
stos
fisttpll
add
push
enter
inc
mov
push
ret
cmp
out
jle
and
inc
inc
nop
movsl
inc
dec
fsubs
je
push
dec
push
inc
mov
sbb
add
push
mov
mov
push
mov
add
imul
out
mov
mov
cmp
xor
add
aad
cld
sbb
arpl
sti
dec
push
repz
scas
fnstenv
mov
and
or
fcmovu
in
mov
pop
mov
pop
mov
and
enter
add
adcb
xchg
lea
hlt
jecxz
lods
inc
pop
cltd
pop
pop
aaa
mov
inc
cs
and
push
and
hlt
mov
pop
incb
std
xorl
scas
pop
mov
pushf
dec
fstpl
lahf
mov
mov
xor
mov
mov
imul
xchg
in
mov
mov
push
jo
js
cmpsl
test
jle
mov
xor
jns
or
repz
loope
lods
icebp
les
rcrl
jge
ret
push
cmp
imull
sahf
and
cmp
add
push
or
bound
mov
imul
add
inc
mov
js
pop
pop
insl
insl
or
sbb
test
and
add
icebp
test
push
lcall
js
xlat
dec
int
sub
or
fnsave
sbb
mov
or
scas
icebp
push
mov
lret
cmpsl
or
leave
dec
aas
ja
mov
push
data16
pop
xor
add
fisubs
setl
push
pop
data16
xlat
mov
or
add
bound
scas
aad
inc
cmp
divl
or
jne
mov
inc
dec
sub
push
gs
nopl
add
cltd
sub
xorl
out
ret
sbb
nop
lret
xchg
cmp
xor
jbe
cmp
frstor
std
cltd
pop
cmp
sahf
inc
test
adc
inc
out
and
xchg
pop
stos
fstpt
adcl
js
gs
push
sbb
and
lcall
mov
insl
pop
clc
lods
or
pop
add
in
push
add
cmp
lahf
lods
shrl
dec
sub
std
fbstp
xchg
addr16
jg
stos
push
cmpb
jmp
scas
mov
fisubl
ja
fcoms
imulb
push
adc
stos
xchg
xchg
jmp
dec
lcall
sub
mov
inc
cmp
in
add
iret
sub
cmp
lds
push
mov
shl
iret
in
popa
push
aad
xor
cltd
mov
or
pop
aas
mov
pushf
jae
mov
leave
fstp
and
ficomps
shlb
dec
in
dec
imul
xchg
xchg
cli
fwait
mov
daa
iret
lods
test
inc
movsb
push
xchg
lret
mov
mov
jns
pop
sub
jbe
pushf
push
in
push
ja
rcrb
mov
cmp
xor
sbb
pop
dec
dec
sti
fwait
imul
xlat
mov
out
lcall
aaa
dec
fldt
sbb
jae
out
sub
fisttpl
inc
and
mov
cs
sarb
scas
dec
repnz
sarb
xchg
bound
push
pop
push
cmp
cmp
lds
jnp
or
ljmp
jmp
pop
mov
dec
testl
jae
test
push
adc
and
jno
imul
js
add
jns
test
sbb
dec
leave
push
ja
dec
iret
in
leave
adc
je
add
fstps
xor
mov
lahf
xchg
dec
call
std
cwtl
jb
in
jp
in
xorb
push
jge
add
jns
test
xor
leave
xor
fwait
subb
inc
add
repnz
sbb
xchg
or
popf
push
dec
fsts
std
loop
sub
cli
popa
xchg
rcll
lock
push
outsl
fldl
icebp
mov
ja
sbb
adc
test
jns
fbstp
sub
and
push
pop
arpl
and
jo
cmc
int
jmp
and
aaa
xlat
sub
sbb
mov
cmpsl
stc
cmpsb
cmp
subl
lods
mov
mov
rol
stos
adc
inc
int
scas
xor
aam
cmp
scas
or
sbb
out
test
jecxz
sahf
mov
fcompl
cmc
clc
rcr
outsl
cli
fs
out
test
jecxz
icebp
popa
sub
stc
adc
fnsave
repz
mov
in
sahf
jb
in
leave
adcl
imul
cmp
or
aam
in
loopne
loope
daa
ret
in
jns
dec
test
cmc
jp
scas
lds
xchg
xchg
out
dec
xor
icebp
adc
out
mov
imul
xor
dec
js
in
mov
mov
xor
mov
sbb
or
inc
lahf
mov
xor
movsb
adc
mov
mov
add
fstpl
es
mov
adc
ja
fwait
sub
xor
fiadds
outsl
fmuls
and
in
int3
lahf
sub
movsb
inc
pop
imul
je
iret
in
dec
repnz
std
das
lea
pop
int
ficoml
jg
fld1
sbb
and
insb
test
je
sbb
or
movsl
add
leave
cmp
lret
dec
sbb
xchg
mov
orl
fnstcw
jg
or
xor
fidivs
or
xor
jo
mov
frstor
sbb
cmp
push
and
notb
xor
out
pop
jb
xchg
imul
fs
mov
lret
mov
add
jmp
sub
ficoms
dec
jle
sbb
inc
push
shrl
push
imul
fidivl
pop
mov
je
imul
outsl
shrl
cmpsl
shld
jl
aaa
das
aad
push
roll
aad
cld
data16
push
jp
mov
enter
sbb
gs
and
push
lock
mov
xchg
pop
mov
std
aad
pop
push
sub
subb
sbb
sub
bound
cmc
outsl
xlat
xchg
std
sub
lret
inc
into
jno
or
lcall
add
mov
daa
test
pop
inc
mov
jge
pop
mov
ja
inc
or
xor
and
mov
ret
popa
negl
sbb
xchg
jmp
mov
add
cld
xchg
lahf
xchg
sahf
cmp
mov
mov
jge
fs
xchg
sub
int3
mov
sub
cmpsl
add
or
std
mov
hlt
mov
sbb
jo
in
cli
push
cmpsl
push
imul
cmp
fsubrs
leave
cmpsb
jmp
push
jbe
imul
dec
cmp
xchg
mov
sub
aam
adc
out
ss
imul
ds
xor
stc
js
ljmp
mov
dec
pop
repnz
lret
lods
jno
lea
or
cli
push
call
int
sub
lea
mov
lods
adc
sub
xchg
sub
xor
sub
dec
gs
mov
adc
cmp
push
sub
lea
inc
mov
xor
arpl
cmpsl
lea
int
xor
cmp
sub
std
das
movsb
pop
pop
in
jp
lea
mov
test
and
mov
mov
in
mov
push
push
xlat
jne
push
imul
xchg
dec
xchg
pop
and
and
jae
lock
and
adc
pop
push
jp
fisttpll
xchg
sbb
fstps
cmp
fstl
mov
jmp
lds
mov
sub
xchg
xor
adc
fcompp
pop
pop
cwtl
push
test
nop
and
dec
mov
std
jmp
je
sbb
je
ret
add
add
add
add
and
add
inc
add
addb
add
add
add
pop
add
addb
add
jo
add
add
add
rolb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
jecxz
add
add
add
add
or
add
pop
add
inc
add
dec
add
push
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
pop
add
add
pushl
add
or
ja
ja
ja
ja
ja
jo
add
pushl
add
or
pushl
add
or
ja
jo
ja
ja
ja
jo
add
pushl
ud0
pushl
add
or
push
lock
pushl
add
or
ja
ja
cmp
add
pop
jo
add
or
push
sti
divl
xor
add
or
aas
mov
add
or
ja
ja
ja
mov
add
or
aas
mov
add
push
sti
testl
ja
ja
ja
ja
ja
mov
add
or
push
add
add
add
decl
add
or
ja
ja
ja
ja
add
int3
inc
or
push
or
dec
rorb
decl
rorb
ja
ja
ja
ja
ja
dec
iret
int3
inc
or
pushl
rorb
pushl
lret
rorb
ja
ja
ja
ja
ja
jo
int3
lock
pushl
dec
rorb
pushl
add
or
pushl
add
lock
lock
lock
lock
lock
lock
lock
lock
vpmacssdqh
mov
add
add
add
aas
rolb
pop
addb
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
or
addb
xadd
add
in
dec
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xchg
ja
ja
add
testl
add
testl
jae
add
add
repz
push
mov
ja
ja
xor
push
add
push
add
xchg
ja
ja
cld
push
add
push
add
sldt
clc
clc
clc
clc
lock
orb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
orb
add
pop
add
add
and
adc
add
add
lock
add
add
adc
add
add
xor
add
add
mov
es
icebp
es
icebp
es
icebp
es
icebp
add
repnz
add
add
repnz
add
add
repnz
add
add
add
add
add
add
add
add
add
add
pop
repnz
add
add
add
add
add
add
inc
icebp
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
lock
add
add
lock
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
outsb
imul
insb
add
jb
fs
insb
add
arpl
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
push
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
jmp
fs
outsl
push
je
imul
or
daa
repz
or
in
add
push
fildll
push
pop
mov
or
testl
fistl
js
dec
mov
mov
in
mov
and
push
pop
cli
add
jge
add
subl
iret
cmp
gs
mov
add
mov
add
jnp
mov
jle
mov
cwtl
and
out
aam
cmp
icebp
xor
push
mov
sbb
and
mov
and
or
sub
adcl
mov
mov
push
mov
cmc
jge
push
or
arpl
les
pusha
or
pop
addr16
or
add
pop
push
add
xchg
jo
outsb
dec
inc
mov
or
and
lds
or
and
adc
or
cmpb
inc
adc
ds
rcrb
jmp
dec
scas
stos
rol
pop
add
pop
push
lock
xor
or
add
add
xchg
mov
popl
xchg
add
xchg
add
xchg
add
xchg
add
cwtl
add
lcall
add
sahf
add
mov
or
cli
mov
mov
shll
add
lret
rcll
pop
enter
or
jno
inc
xchg
jns
add
inc
fsubrl
mov
insb
inc
or
pusha
or
inc
addl
xor
fsub
add
mov
push
mov
cmp
xor
pop
ds
cltd
int
add
ljmp
jne
mov
xchg
mov
lea
and
dec
adc
vmovaps
daa
inc
insb
fadds
adc
cmpsl
loope
stos
test
mov
arpl
xchg
inc
add
fsubl
push
or
mov
int3
cmpl
arpl
and
insl
xor
push
dec
insb
add
arpl
inc
jmp
jnp
mov
sub
add
inc
push
jae
and
and
imul
adc
repnz
mov
add
push
xorl
lcall
clts
or
xchg
rorb
add
ljmp
push
and
pop
inc
ss
inc
je
inc
xchg
inc
loopne
xchg
push
inc
xchg
pop
fs
mov
add
pushf
or
mov
and
and
and
mov
data16
inc
sbb
mov
xor
or
inc
add
mov
or
subb
pop
add
rorb
mov
movsb
xorb
jbe
mov
or
mov
xchg
cmp
sbb
nop
fcompl
and
dec
push
in
adc
popf
and
rcrb
push
or
push
mov
xor
out
xor
fistpll
inc
or
inc
or
dec
or
or
sbb
mov
enter
lcall
adc
in
jo
adc
mov
inc
mov
cmp
mov
add
sbb
mov
jmp
dec
cmc
outsb
lcall
inc
jg
dec
add
xor
mov
pop
push
mov
push
jb
inc
or
mov
inc
push
pop
inc
jae
inc
test
mov
mov
xor
add
mov
es
sbb
out
cld
fadds
into
test
sarl
mov
xor
pop
rolb
insb
cmp
loope
data16
jl
inc
push
cmc
out
and
pop
lret
incb
rclb
addb
aas
and
adc
adc
add
sbb
std
aas
pop
or
stos
nop
mov
ret
xor
add
das
cmp
mov
sbb
inc
mov
lods
add
sub
in
flds
sahf
ror
inc
xchg
movsl
jbe
adcb
sbb
pop
add
pusha
xchg
imull
jo
cmp
inc
inc
dec
adc
fmul
fstpl
push
sub
sbb
mov
data16
out
mov
fcmovne
push
test
pushf
adc
xor
push
jg
cmp
scas
xor
jmp
sbb
int
add
adc
jns
dec
js
out
mov
rolb
xor
int3
dec
xchg
enter
or
orb
cli
fbld
pusha
dec
sub
add
or
and
and
inc
jno
cmpsb
rolb
in
pop
pop
or
add
pop
test
stos
xor
pop
jecxz
mov
pop
jmp
sbb
lahf
into
cmc
mov
sbbb
shlb
stos
inc
sbb
xor
lahf
dec
jp
jbe
add
fldt
les
xchg
mov
or
jecxz
les
cwtl
sub
push
lock
pusha
adcb
pusha
add
add
loopne
or
mov
xor
mov
xchg
add
cmp
adc
cmp
rorb
xor
mov
pusha
mov
movl
push
or
popf
xor
roll
lea
adc
ds
push
fsubrs
dec
mov
es
stc
pop
test
adc
je
lret
andb
add
stos
or
movsl
sbb
call
sti
push
mov
jne
xor
push
into
cmpsl
fs
mov
jp
add
in
adc
scas
mov
fisttpl
stos
mov
ja
inc
and
dec
pop
push
test
stos
mov
xor
adc
push
dec
push
adc
xchg
or
mov
xor
lods
xchg
jae
or
pcmpeqd
add
sarl
add
ja
int3
in
jo
cwtl
dec
xor
adc
clc
and
and
mov
sub
test
lds
and
out
add
inc
pop
adc
sbb
cs
or
add
mov
jae
adc
ljmp
cs
stos
add
add
fbstp
das
mov
pop
or
lods
xchg
or
push
sub
sbb
inc
pop
rolb
push
cmpsb
sti
adcb
mov
push
add
jbe
sbbb
sub
lods
and
in
and
add
jns
out
xorl
aas
add
mov
push
add
jg
insb
cmp
mov
dec
adc
add
mov
test
push
sbb
ds
and
push
push
ja
cmp
jns
or
test
popf
call
popa
dec
mov
pop
mov
fmulp
and
dec
repz
pop
or
out
sahf
add
push
rcrl
imul
adc
sbb
out
pop
push
dec
add
xor
jl
mov
push
adc
jl
fs
and
add
fcomps
xor
adc
or
cmp
pop
add
and
test
push
xchg
rolb
sbb
pop
pop
subb
je
pusha
es
mov
mov
int3
pop
mov
xor
les
push
and
lea
outsl
dec
repz
subl
or
sub
stos
push
hlt
or
dec
sub
pop
stc
sbb
push
cmpsl
dec
cmp
movsl
and
pop
and
sub
and
pop
pop
bound
dec
sub
pushf
mov
aas
in
xor
data16
sahf
and
push
movsb
mov
pushf
ljmp
outsl
fcoms
cmc
jbe
jl
inc
sub
add
adc
aad
rcrb
bound
mov
inc
add
rolb
lret
jmp
mov
loopne
ffreep
or
push
and
adc
mov
add
movsb
xchg
addb
xor
mov
mov
jl
cmp
adc
mov
rcrl
std
xchg
jp
xchg
push
jmp
jle
imul
test
xor
fbld
or
pop
scas
andl
rolb
add
loope
pop
out
mov
add
insl
or
pop
aaa
test
and
xor
jne
push
imul
sbbb
jp
jl
add
lods
jle
fwait
stos
cmc
add
lret
in
inc
adcb
lods
shrl
shll
add
pop
xchg
sub
add
mov
mov
mov
hlt
and
xor
loopne
cmp
jbe
sbb
addr16
or
enter
dec
and
dec
inc
push
leave
jae
jle
cs
mov
pop
pop
stc
lock
sbb
cld
sub
cmp
mov
in
xchg
pop
outsl
shr
mov
outsb
stc
xchg
add
ret
push
into
xor
jbe
jo
testb
add
adc
push
mov
sbb
mov
or
lea
rcl
sahf
fstps
jecxz
mov
sub
shr
lret
ret
popf
add
es
stos
adc
aad
push
add
or
inc
adc
shll
fisubrs
adc
xor
js
mov
cmp
stos
jg
adc
arpl
stos
and
sub
add
push
cmp
clc
loop
mov
push
pop
das
dec
mov
dec
les
pop
outsl
adc
inc
xchg
or
and
add
subl
dec
pop
and
or
push
js
and
dec
dec
or
lcall
sbb
and
add
bound
xchg
mov
shlb
call
push
or
insb
jp
or
call
fdivrl
in
add
data16
int3
push
and
sub
mov
push
lds
push
pop
push
test
and
pop
or
ja
pop
xchg
cwtl
loop
sub
mov
in
pusha
punpckldq
scas
xor
out
pop
lret
fildll
sbb
lock
int
cmc
push
loope
insb
xchg
xor
inc
inc
movntq
out
dec
scas
jp
add
add
jl
push
sub
or
inc
push
jp
call
movsb
adc
xchg
and
and
enter
jmp
dec
cmp
or
cmp
adc
sbb
sar
int3
inc
jge
fildll
int
push
or
add
add
push
mov
cld
cmp
or
lods
loop
and
mov
mov
scas
shll
popa
mov
nop
aas
or
jecxz
sbb
jl
in
pop
inc
dec
and
pop
jns
mov
and
aaa
nop
call
into
xor
and
outsl
xor
dec
or
jge
sarb
sub
sbb
mov
add
cmp
arpl
dec
out
mov
add
pop
or
popa
mov
adcb
or
test
pop
add
loop
cs
add
fcom
mov
jb
xor
jp
adc
add
jmp
cmpl
lcall
mov
enter
adc
lods
pushf
add
sarl
testl
mov
push
xor
or
mov
adc
adc
fnsave
add
xchg
loope
aad
xor
adc
popf
inc
adc
dec
addb
mov
add
sbb
adc
iret
inc
dec
or
enter
inc
jno
sbb
jns
sub
or
add
jge
mov
in
push
mov
inc
mov
sub
std
lahf
setp
sbbb
push
in
mov
and
cmc
lahf
clc
jae
je
frstor
aas
cmp
xor
pop
loopne
test
or
inc
leave
push
or
in
or
add
jnp
outsb
pop
movsl
sbb
adc
xor
shrb
inc
adc
cmpsb
cmpsl
cmp
lret
jae
xchg
std
or
or
repz
pop
je
inc
and
or
adc
mov
lahf
xchg
insl
cmp
inc
mov
rcrl
lock
or
inc
filds
inc
inc
mov
out
retw
adc
xor
cmp
pusha
xor
or
adc
stc
jl
or
clc
test
xchg
sub
add
ljmp
mov
mov
enter
push
test
test
and
sbb
inc
out
inc
jmp
add
clc
pop
xchg
adc
int3
rcrb
lods
lea
and
cli
cwtl
mov
pop
ret
and
xchg
pop
jp
loop
enter
inc
xlat
leave
arpl
fs
push
ja
jno
sub
roll
xchg
data16
pop
into
call
cld
sub
aam
add
add
push
or
ret
sbb
xor
or
add
push
push
scas
daa
sbb
add
call
adc
xchg
add
das
in
push
fwait
xchg
or
add
mov
xchg
daa
icebp
or
sbb
sbb
rcl
dec
je
add
std
jnp
cltd
clc
or
ljmp
push
rolb
aam
sbbl
repz
push
mov
rclb
jecxz
stos
dec
add
pop
xor
pop
lods
or
andb
adc
mov
add
or
popf
mov
and
add
jnp
xor
add
push
sub
adc
cmp
repnz
incl
add
jo
rolb
mov
pop
aad
xlat
xchg
push
packsswb
jmp
push
sub
roll
je
call
jb
in
cld
sarl
pop
mov
sbb
fcom
xor
pop
add
neg
das
sub
das
pop
aam
and
pusha
pop
sbb
sbb
fidivs
call
fcmovnb
cmp
dec
fcmovb
pop
pop
cmp
pop
shr
xor
add
mov
sub
inc
push
pop
mov
out
sub
in
sbb
sbb
out
dec
pop
jb
jg
pop
sti
cmpsl
mov
pop
pop
push
pop
scas
push
cmp
mov
neg
pusha
ror
push
addr16
and
je
mov
dec
scas
xchg
sub
das
incl
cmp
mov
bound
sti
jmp
xchg
aad
pop
add
sbb
aam
cmpb
lock
push
addr16
lret
add
jo
or
push
cmp
pop
aam
cld
push
gs
loop
xchg
lods
add
ret
daa
mov
push
add
dec
sub
dec
call
inc
dec
lahf
adc
mov
and
faddp
loop
xor
jp
pop
adc
and
call
sub
dec
add
adc
xor
xorb
xchg
jmp
push
pop
jecxz
and
add
nop
jmp
popa
push
ds
jle
dec
roll
das
cs
xor
mov
cs
lret
cmc
fmuls
and
lock
add
sub
ja
loope
push
pop
pop
and
lods
lds
mov
or
add
test
mov
and
add
in
xlat
out
push
int
mov
sub
dec
sbb
inc
enter
xchg
or
jb
push
inc
pusha
adc
ret
gs
movb
cmp
inc
jae
push
adc
sbb
shrl
not
out
jno
sbb
mov
pop
add
pop
leave
and
outsb
push
pop
jecxz
scas
test
xchg
sub
fcomp
xchg
movsl
xor
xchg
fcompl
jnp
shll
mov
mov
push
dec
xchg
dec
and
das
add
dec
rorb
ret
cmpsl
andb
inc
pop
ret
out
add
jb
fdivrs
repnz
ret
ljmp
and
jb
sub
mov
add
pop
mov
mov
xor
adc
or
jns
dec
cwtl
cmpsb
and
adc
ljmp
or
neg
push
fcomp
mov
aas
xor
push
or
loope
xor
pusha
pop
mov
jmp
or
lcall
adc
mov
les
pop
jg
movsl
mov
push
xchg
jns
loop
pop
cwtl
popf
dec
pop
or
push
push
ljmp
adc
outsb
mov
mov
sub
int3
pushf
sbbb
add
lret
cmp
rcll
adc
popa
fldenv
mov
imul
scas
push
cs
dec
shr
inc
nop
inc
inc
push
clc
jo
out
add
xor
shl
pop
arpl
add
hlt
sbb
lods
mov
push
xchg
mov
pop
leave
faddl
sub
adc
aam
push
testb
or
popa
nop
mov
sti
aas
add
cmp
or
shlb
inc
jmp
mov
std
sub
push
add
mov
pop
ret
stos
hlt
movsb
fldl
push
jmp
mov
or
mov
jo
or
testl
mov
pop
xchg
fwait
cmp
add
push
sub
insb
push
out
or
jmp
sub
sbb
add
xchg
daa
cmp
jbe
ficoms
push
and
dec
mov
inc
push
or
dec
push
in
cmp
addr16
adc
aam
ret
aaa
cmp
cmp
cmpsb
ret
outsl
loopne
es
out
shrb
adc
fidivs
mov
add
ljmp
xchg
jl
adc
xor
sub
dec
add
outsl
mov
mov
fs
stos
cwtl
inc
mov
inc
jg
push
xchg
mov
pop
cltd
iret
inc
mov
inc
sbb
xchg
inc
sbb
xchg
fadd
push
nop
out
neg
imul
std
es
xlat
ret
or
fnsave
out
sbbl
gs
ljmp
or
mov
lods
ffree
setae
cmpsb
mov
xlat
mov
sahf
and
lock
es
scas
pusha
jne
add
test
xchg
add
int
sub
in
sbb
mov
shll
pop
or
sbb
push
dec
pop
addl
aas
xchg
pop
push
xchg
ds
int3
and
int
xchg
leave
mov
pop
pop
cwtl
push
lock
call
push
mov
mov
pusha
and
xor
and
cmp
nop
push
and
rolb
mov
inc
mov
sbb
add
jmp
xor
or
out
test
xchg
mov
notb
push
pop
ds
out
inc
add
jb
es
inc
fsubs
mov
add
lock
xor
and
dec
add
stc
addr16
out
or
add
push
or
test
cmp
or
xor
lds
cmc
push
cmp
stos
out
repz
stc
cmp
aaa
imul
jge
push
adc
ret
add
mov
or
insb
call
lock
pushf
push
or
test
sti
sub
rol
std
pop
lds
test
adc
sbb
popa
ret
sbb
add
mov
pop
shll
jne
xchg
test
sarb
sbb
mov
ja
push
test
addr16
js
popa
dec
dec
enter
sbb
or
mov
lods
mov
dec
mov
adc
push
andb
repnz
nop
gs
jne
fldcw
insb
test
das
push
sbb
and
leave
add
cmp
add
not
xor
jae
push
dec
xor
adc
push
xchg
xor
xor
leave
add
mov
test
sbb
or
repz
hlt
ds
mov
pop
or
rol
dec
cmp
repnz
cwtl
hlt
add
cmp
adc
add
adc
lret
push
add
and
jle
push
flds
add
pusha
nop
jb
test
or
ret
add
jo
inc
or
andb
sub
or
xor
negl
cwtl
and
nop
les
filds
jo
pop
mov
xor
arpl
and
add
std
xor
xchg
push
outsl
add
inc
push
fiadds
adc
push
pop
jp
bnd
xchg
aad
xor
mov
xor
fisubl
or
sbb
push
push
inc
imul
xor
xor
sub
aad
push
in
push
gs
push
cmc
inc
jecxz
xchg
lods
xlat
mov
mov
inc
jle
jno
adc
and
add
call
nop
pop
push
aad
xchg
mov
iret
dec
loop
xor
mov
insb
jo
rclb
push
dec
sbb
pop
imul
mov
cmpsb
mov
push
inc
pop
push
int3
add
mov
test
insl
pop
mov
jecxz
push
push
push
pop
sub
jg
mov
xorb
fbld
rcl
or
xchg
jno
sub
push
es
and
inc
cwtl
jbe
sbb
cmp
or
fwait
xchg
test
lcall
dec
cmp
xchg
mov
fsubrs
dec
xor
shrl
rcr
pop
inc
pop
push
jb
shl
mov
leave
adc
rcll
add
sub
test
scas
stc
sbb
and
push
out
pushf
or
lret
sbb
lods
mov
adcb
mov
stc
sbbb
lret
and
and
fdivrs
xchg
int3
sbb
inc
insb
iret
mov
flds
add
mov
and
cmpl
popf
cmpsb
ret
enter
add
inc
sub
test
bswap
sbb
test
sbb
decl
and
mov
inc
popa
nop
fwait
push
repnz
int
insb
test
or
dec
out
cmp
mov
mov
or
add
jmp
pop
in
aad
xor
nop
pop
xor
subb
mov
add
call
mov
mov
pop
pushf
stc
xorb
movb
jne
inc
enter
add
dec
fnstcw
mov
or
inc
xor
fwait
cmpsb
add
push
dec
jne
inc
dec
test
inc
and
aaa
inc
xor
fisubl
punpckhbw
mov
addl
jg
xor
dec
decl
add
in
icebp
mov
test
pushf
add
cli
sub
push
sub
loop
test
jno
mov
rorb
int
pop
mov
insb
in
push
lds
lock
test
in
int
sub
xor
and
pop
into
sub
inc
mov
xchg
loope
mov
cs
cltd
sbb
ret
dec
cmp
xchg
adcl
rclb
jnp
std
cmpsb
incb
ss
add
adc
nop
mov
mulb
es
push
add
rol
dec
xor
cwtl
jnp
add
or
push
xchg
das
movl
xor
inc
inc
rclb
xchg
clc
btc
xor
lret
cwtl
lock
add
add
mov
adc
adc
js
adc
xor
dec
rclb
mov
movsb
jle
dec
push
lods
dec
mov
pop
test
outsl
inc
mov
xchg
test
add
fs
adc
mov
adc
je
and
in
mov
das
xor
push
daa
loope
adcb
jmp
scas
xor
lret
fadds
or
test
ret
or
dec
xchg
shrb
cmp
std
pusha
mov
sub
mov
adc
and
sbb
aam
lret
add
ffreep
std
fnstcw
hlt
add
jbe
mov
in
rolb
add
dec
dec
sub
dec
jmp
or
inc
mov
xchg
call
shlb
pushf
add
mov
pusha
cmp
insl
sub
test
js
nop
add
movb
add
imul
sahf
xor
adc
add
mov
fisttpll
add
push
seto
cwtl
add
popf
out
fisttpll
mov
mov
jmp
int3
jbe
push
ja
and
mov
and
sbbb
mov
fistl
in
sbb
mov
inc
add
lock
cmc
push
add
adc
inc
repz
adc
dec
adc
dec
sahf
repnz
mov
ret
mov
and
push
add
mov
dec
jge
std
mov
not
cmpsb
xchg
jno
sub
push
insb
or
addb
xchg
enter
sarl
movsl
les
push
xchg
xor
pusha
sbb
pop
and
repz
ret
add
repz
push
xchg
cld
pop
jnp
pop
cs
sub
cmpsl
sub
push
xchg
or
les
and
mov
pop
std
je
push
leave
add
insb
inc
negl
movsb
dec
add
mov
test
iret
add
out
ds
movb
int
pop
inc
pop
xor
not
xor
push
adc
sub
cld
sahf
add
lods
xchg
rorl
js
rclb
in
test
jp
je
push
orl
rcll
lea
mov
inc
leave
push
shr
cmpsb
scas
adc
into
cmp
add
sub
imul
mov
pop
mov
push
pop
out
shl
in
and
iret
push
mov
and
sbb
popa
popa
add
inc
les
jp
cmp
cwtl
xchg
lea
add
les
dec
ja
add
jns
push
enter
dec
jge
cmpsl
sbb
sahf
and
jl
lea
inc
hlt
jno
xor
add
pop
pop
dec
daa
sub
adc
dec
pop
jl
cld
testb
mov
adc
jg
int
and
dec
clc
dec
cltd
push
xorl
insl
test
enter
imul
ret
cmpsl
in
or
lret
dec
xchg
pop
fistps
rol
add
jno
jnp
test
mov
cmpsl
dec
add
lcall
push
add
in
test
cli
add
add
mov
inc
cmp
test
pop
sub
xchg
roll
pop
lods
popf
nop
push
insb
dec
inc
xchg
mov
hlt
sbb
inc
inc
inc
outsl
ds
test
dec
cmpb
inc
mov
shl
dec
mov
push
testb
and
icebp
sub
bound
push
pop
test
dec
push
icebp
add
cltd
pop
cmp
cmpb
xchg
inc
mov
in
neg
dec
mov
in
and
inc
sub
outsl
add
iret
imul
fdiv
sbb
pop
sbb
mov
mov
fisubs
adc
inc
inc
insl
mov
or
aaa
pushl
dec
adc
icebp
test
mov
sbb
pop
xchg
jecxz
cmc
daa
add
scas
dec
icebp
push
pop
pop
mov
stos
rorl
mov
cs
or
dec
jns
xor
insb
push
pop
loop
pushf
loop
jns
and
sub
mov
or
ds
cmc
out
and
movsb
sub
xchg
sub
loopne
add
and
cmc
scas
in
sarl
push
mov
jno
leave
and
cmp
repnz
rclb
jle
push
ret
ror
mov
mov
repz
push
scas
fildll
pop
pop
or
iret
and
jg
jo
lret
inc
xor
lea
lods
bswap
sub
dec
out
cmp
cmp
and
inc
and
cmc
sbb
jbe
add
mov
xchg
aam
mov
lods
inc
sub
loope
mov
stc
bswap
dec
sbb
jmp
adc
outsb
mov
inc
outsl
lret
movsb
inc
dec
mov
sub
add
xor
mov
shrl
outsl
push
shlb
mov
je
inc
mov
enter
das
ret
mov
jb
mov
les
inc
pop
and
adc
rcr
or
imul
xchg
mov
add
push
cmp
mov
dec
pop
out
or
mov
cmp
enter
leave
adc
sbb
scas
and
rcll
and
cmp
push
das
pop
cwtl
jp
and
addr16
xlat
sti
fs
lock
sub
push
mov
jne
sub
mov
stos
add
pusha
andl
add
loopne
dec
adc
lahf
sub
inc
inc
call
xchg
in
cltd
pop
dec
xchg
addl
rcl
adc
rcl
and
ljmp
sbb
mov
xchg
sar
testl
jno
test
sub
stos
das
xor
into
outsl
fcomps
mov
lods
les
mov
outsb
cmp
cmpsl
sub
not
push
or
cwtl
aam
rcll
jmp
cwtl
xchg
add
jge
aaa
test
scas
mov
add
mov
cwtl
xor
add
icebp
arpl
movsl
fcomps
or
lods
pop
push
adc
inc
jb
lea
adc
dec
icebp
adc
inc
and
sub
add
jl
in
loope
or
std
adc
xor
adc
inc
test
and
mov
fstl
lret
cvtpi2ps
xchg
jns
pop
sbbb
movswl
cli
lret
pop
subb
pop
jnp
and
addr16
scas
dec
pop
in
add
fmull
xadd
pop
mov
fcoms
daa
mov
repz
xlat
push
inc
andb
adcb
out
add
imul
dec
call
imul
xchg
cwtl
ret
mov
subl
and
mov
push
jnp
jp
in
sub
sahf
adc
aad
jle
or
mov
or
add
or
addr16
mul
fstl
or
xchg
cmp
jg
test
nop
mov
shrb
leave
test
mov
push
test
dec
push
inc
or
sbb
inc
sbbl
cwtl
fwait
cmp
pop
push
popf
imul
mov
pusha
pop
mov
xchg
xor
jecxz
out
adc
divb
sarl
push
loop
shll
cmpb
stc
inc
jmp
adc
test
jge
adc
test
pop
sarl
je
sbb
stos
sbb
mov
xor
jo
out
mov
lcall
xchg
insb
xor
aad
jecxz
add
jp
push
roll
and
cmp
icebp
adc
mov
adcl
add
push
addb
xor
inc
cmpsb
lret
fildll
loope
sub
shlb
arpl
fsubrl
int3
or
inc
lret
dec
sbbb
pop
push
pop
pop
add
inc
movsb
adc
dec
xchg
add
aas
dec
scas
xor
les
xor
push
push
dec
jbe
and
sub
ss
xor
pushf
adc
aaa
pop
je
test
cmpsb
xor
adc
les
jnp
pop
testb
ja
test
and
cmpsb
xchg
ret
lods
dec
lahf
xchg
fcoml
enter
arpl
loop
popa
mov
xchg
loope
and
pop
lods
adcl
mov
int3
enter
cmp
shll
jb
pop
mov
outsl
pop
mulb
push
cmp
sbb
ja
out
lods
add
adc
fwait
xchg
adc
or
popa
rolb
out
fwait
or
pop
pop
add
enter
cwtl
xchg
xor
add
iret
or
and
dec
push
cwtl
add
inc
rolb
jle
cmp
inc
pop
pop
inc
leave
pop
and
push
xchg
test
ds
sub
inc
out
mov
shrb
inc
dec
xor
mov
mov
add
cmp
lods
push
test
add
push
push
xchg
mov
addb
jo
popa
inc
mov
cmpsb
mov
fdivs
stos
movsbl
bound
cmp
inc
xchg
add
aam
outsb
movsb
or
cmpsl
les
imul
mov
out
push
clc
cmc
inc
xchg
fistl
jae
mov
test
ret
xchg
add
into
xor
bound
pop
ljmp
cmp
dec
std
dec
shlb
pop
mov
test
leave
fdivs
or
fdivl
cwtl
cmp
mov
outsl
mov
pop
sub
fstpl
push
dec
xor
in
dec
in
pusha
pop
movsb
lea
and
mov
pop
inc
mov
loope
xlat
mov
test
icebp
mov
in
xor
js
push
lock
adc
xchg
pop
inc
mov
jge
sub
lods
xchg
scas
rcl
sub
shrl
adc
fiaddl
pop
outsb
loop
push
push
lods
aaa
pop
pop
dec
inc
scas
xlat
outsl
sbb
roll
repnz
cmpsl
jbe
jb
add
inc
addb
or
add
mov
neg
or
and
gs
das
das
push
xor
leave
movsl
xchg
pop
addl
or
cld
push
cltd
cmpsb
mov
xchg
xchg
mov
mov
and
cmp
and
xor
out
or
test
xchg
or
pop
sub
pop
gs
pusha
mov
mov
pop
call
push
push
push
sub
roll
roll
nop
dec
das
jecxz
idivl
cmp
fs
out
and
mov
and
cwtl
xlat
xor
fldl
aaa
push
fwait
mov
mov
and
jb
cmp
and
shll
imul
xlat
inc
fwait
mov
test
inc
mov
jle
push
lock
fisubrs
xchg
sub
mov
mov
cmp
insb
push
es
jg
hlt
sub
cmp
fcompl
inc
or
and
pop
outsb
aas
or
jo
sbb
jno
cli
push
and
pop
pop
sub
sbb
adc
mov
dec
jb
xchg
add
incb
cld
in
das
push
push
dec
cmp
mov
sbb
or
pushf
aas
adc
or
or
cltd
outsl
sbb
cmp
mov
lods
sbb
lcall
mov
sbb
mov
inc
cmp
mov
daa
das
or
dec
sub
pop
sti
dec
js
sub
mov
adc
push
or
sub
cmp
push
push
shll
pop
ret
js
jne
jle
add
push
cmp
xor
test
orb
les
popa
dec
mov
outsl
cmp
pusha
jge
pop
push
or
rcr
hlt
xlat
inc
cmpsb
test
xor
shll
aaa
mov
xchg
je
inc
ja
repnz
sti
jp
lea
pop
push
push
cmp
in
xor
xor
and
daa
or
and
sbb
push
inc
or
ss
xor
xchg
mov
pop
mov
push
add
add
aad
imul
andb
or
push
push
fnsave
dec
jle
fs
xchg
insb
sbb
sti
inc
js
outsb
push
cmpsl
push
jo
add
push
xor
mov
mov
xorb
es
pop
ss
fs
int
dec
xchg
ffree
pop
sub
add
lret
mov
xchg
mov
popf
insb
mov
or
testl
out
loope
imul
jns
call
jle
and
sub
push
xchg
adc
mov
ret
movsl
notl
pop
lods
pop
sahf
mov
mov
pop
mov
xchg
fmull
sbb
pop
ds
out
jno
sbb
fistps
sbb
imul
pop
rcll
adc
rcll
ficompl
cmp
sbb
das
jge
fdivrl
in
add
mov
push
shll
popa
add
lret
int3
int
fcoms
sbb
mov
push
in
xlat
cmp
aaa
pop
xchg
xchg
and
clc
cltd
rclb
xchg
shlb
stc
shlb
pop
add
sbb
loop
mov
repz
roll
pusha
gs
jp
mov
rorb
xchg
lds
test
pop
outsb
dec
subb
add
pop
psllw
and
jp
sbb
sbb
das
pushf
jle
sbb
jp
aad
inc
pusha
fidivs
push
bound
jns
add
lret
loope
fdivr
push
jecxz
xchg
xchg
inc
push
ss
int
mov
insb
cmp
fwait
sbb
cs
test
pusha
xchg
lods
or
sbb
and
pop
pop
pop
push
andl
jo
sub
xor
in
jno
xchg
addr16
mov
adc
jp
push
push
mov
fistps
lahf
add
dec
add
fldt
mov
and
pop
cmpsb
ja
pushf
je
ret
xor
into
xchg
dec
sbb
jecxz
aas
or
mov
fisubrl
and
outsb
pop
outsl
jns
lock
pushf
subb
jne
nop
pop
ror
popa
div
xor
dec
bound
sbb
dec
scas
pop
rorl
les
das
mov
nop
mov
mov
mov
mov
outsl
or
jb
rolb
mov
arpl
mov
push
push
addr16
out
jo
xchg
push
pop
fmulp
dec
enter
into
jg
insb
sbb
in
and
xchg
outsl
xor
lret
push
jo
in
dec
sub
enter
mov
mov
and
push
jl
cwtl
es
fildl
sub
fldenv
xchg
mov
fnstsw
mov
cmp
xlat
inc
loop
push
lret
inc
jnp
decb
cltd
sub
mov
mov
outsl
add
repnz
fucomp
daa
stos
iret
loop
and
and
push
push
bound
inc
mov
pushf
and
jle
jnp
dec
sahf
or
ret
das
push
or
rcrb
movsl
pop
enter
push
mov
push
fdivs
dec
outsb
bswap
pop
pop
enter
fstp
sub
bound
inc
mov
lods
negl
scas
out
adc
lcall
xor
xlat
sbb
jns
add
pop
push
sub
sub
test
in
push
sbb
imul
and
pop
aaa
enter
add
imul
adc
rorl
fs
cs
mov
fdivl
in
add
sub
insb
fcoml
pop
aas
push
cli
xchg
cmc
popf
shl
cltd
inc
inc
test
inc
push
inc
enter
gs
pop
rep
pop
mov
adc
fs
or
pop
ret
mov
je
jg
testb
xor
cmp
push
jo
movsl
dec
mov
push
mov
scas
leave
or
add
adc
cmpl
mov
jge
cmp
mov
inc
jo
lea
out
das
stos
pop
push
fisttps
push
push
mov
jge
cmp
or
mov
push
orl
fsubr
adc
jns
fidivl
sbb
mov
ror
cmpsl
and
out
ja
adc
push
inc
movsb
jno
int
lock
stc
cwtl
mov
adc
insb
jecxz
cmp
adc
xor
mov
mov
out
call
addr16
jg
add
mov
xchg
mov
mov
mov
sub
cmc
sbb
push
push
or
in
xchg
and
or
push
je,pn
cmp
add
dec
jecxz
hlt
out
pop
stc
lea
cwtl
or
sbb
mov
mov
lret
test
iret
mov
in
inc
or
cmpsl
nop
and
fwait
xor
push
or
xchg
ja
xchg
je
mov
xor
mov
xchg
inc
mov
pop
mov
jae
xor
test
push
test
data16
into
sbb
mov
std
and
insl
loop,pt
xchg
outsl
dec
test
inc
inc
push
push
repnz
in
shll
cmp
mov
xorl
mov
outsb
push
test
xor
decl
cwtl
fldcw
lcall
and
inc
xchg
mov
sbb
gs
mov
or
dec
pop
xchg
sahf
hlt
in
iret
adc
mov
scas
adc
into
fisubrl
stos
and
jmp
andl
je
aaa
sahf
push
xchg
jo
aam
out
nop
adc
mov
or
sbb
imul
push
push
and
mov
inc
lret
xor
xor
das
pop
sub
push
pop
add
sbb
pop
cmp
fs
nop
ss
ljmp
jp
popf
pop
adc
jno
inc
lahf
xchg
mov
adc
sub
movsb
pop
sub
adc
adc
dec
shrl
lahf
pop
in
xor
xor
sub
jmp
dec
xchg
fldenv
sbb
pop
outsb
jb
sbb
test
mov
dec
add
pop
push
mov
or
sub
xor
imul
inc
adc
jns
mov
cmp
outsb
dec
not
ds
int3
adc
sbb
xor
mov
enter
pop
pop
outsb
pop
xor
xor
pop
jns
xchg
xlat
jns
xor
fmull
inc
fucomi
in
in
lahf
in
pop
aaa
daa
test
mov
es
xor
nop
enter
cltd
in
sub
dec
fs
nop
js
into
xchg
adcl
mov
cwtl
sub
repz
push
adc
in
loopne
pop
iret
mov
rcl
loopne
push
and
shll
push
test
push
lret
or
mov
pop
mov
mov
pop
shl
loope
cmc
or
mov
ror
or
xchg
mov
loopne
pop
xor
cltd
cmp
mov
in
push
adc
or
sub
call
inc
insl
mov
add
push
test
adc
cmpsb
lock
daa
psubusw
lret
sub
andb
hlt
in
push
sahf
cmpl
inc
lods
pop
mov
lods
addl
or
pop
mov
ret
imul
fstpl
daa
cmp
in
pop
adc
or
sti
movsb
sub
inc
lea
pop
mov
pop
push
mov
hlt
je
movsb
outsb
cltd
test
sbb
in
mov
lea
pusha
lret
cmp
push
fbstp
xor
sbb
lret
jp
jge
cmc
or
nop
test
mov
pop
xchg
jle
cltd
pop
mov
rcrl
in
or
adc
mov
in
dec
sub
leave
or
cs
je
aaa
loop
cltd
cs
xchg
sub
ficomps
add
sbb
and
sub
aam
xor
sbb
xor
cmpsb
xor
xor
and
outsb
adc
cmp
rclb
mov
lahf
push
stos
inc
push
mov
jo
inc
push
inc
mov
jmp
pop
cmc
xor
jg
sub
enter
mov
stos
fbstp
mov
mov
lock
es
cwtl
scas
outsb
shll
pop
pop
mov
cmp
test
daa
or
das
cwtl
lret
js
add
inc
mov
xor
mov
inc
add
add
mov
and
push
loope
dec
scas
das
fcompl
aaa
adc
push
mov
mov
scas
aas
filds
enter
pop
push
mov
das
mov
pushf
or
lcall
pushf
push
popf
addr16
aad
iret
push
lret
sbb
fldt
mov
or
mov
repz
test
stos
ds
mov
or
cltd
xchg
inc
sbb
add
movsl
dec
mov
xchg
pop
push
xchg
bound
aad
test
enter
pop
add
inc
subb
lret
add
add
add
andl
and
and
xor
je
and
das
xchg
cmp
adc
shrb
or
pushf
inc
xchg
adc
sub
and
push
nop
push
pop
shl
rcrb
lea
jbe
sahf
jns
notl
scas
sub
popa
inc
add
aas
dec
jge
add
and
sbb
dec
fsts
lret
dec
dec
test
or
lcall
dec
ret
nop
dec
loopew
pop
in
cmpl
pop
cmpsb
xor
or
sbb
pop
pop
or
mov
xor
cmovns
mov
xor
xor
push
cld
sbb
pop
xchg
mov
test
cmp
test
jg
jle
test
and
sbb
in
push
jne
add
int
dec
adc
rep
mov
or
test
adc
andl
les
sub
cmovl
add
mov
inc
test
and
jne
ja
outsl
nop
mov
cmp
mov
nop
xchg
pop
xchg
mov
dec
adc
movsb
test
lret
fmull
test
loopne
mov
dec
nop
jl
jae
test
add
jnp
and
cmp
adc
push
mov
sub
bound
push
dec
mov
mov
push
dec
push
and
push
repnz
stc
addb
or
mov
aas
cld
inc
fdivrl
adc
icebp
mov
ja
and
jb
stc
je
mov
pop
add
rcr
adc
dec
das
fwait
push
adc
pop
jbe
or
test
fidivl
into
cltd
loope
inc
pusha
insl
xchg
dec
mov
xchg
xchg
insb
stc
pop
push
dec
pop
adc
jbe
sub
jne
ret
daa
xchg
sbb
jle
xor
pop
mov
mov
cmp
dec
cmp
and
lea
mov
push
pop
push
movsl
add
mov
pop
cmpsl
jle
lahf
ret
repz
sbb
mov
bound
test
clc
mov
mov
stos
rcll
cwtl
inc
add
js
jecxz
mov
push
lock
ret
and
or
mov
xchg
mov
movsb
rorb
in
add
mov
and
pop
jo
inc
push
jb
mov
inc
arpl
rcrb
push
pop
das
sbb
cmp
shll
push
sbb
jmp
adc
push
and
mov
dec
or
mov
fldcw
cmpsl
fsubs
imul
cmpxchg
add
ja
jbe
stos
mov
jl
loopne
frstor
sub
int3
mov
adcb
cld
pop
add
bound
sbb
in
sub
mov
or
xchg
in
sbb
leave
jp
inc
and
mov
push
stc
stc
mov
add
test
dec
shll
mov
dec
out
push
jnp
dec
adc
pop
sub
mov
sti
push
imul
sarl
call
leave
inc
pop
and
arpl
and
pop
cwtl
dec
mov
pop
push
xlat
fcompl
add
enter
repnz
and
int
add
shrl
mov
mov
stos
jmp
cmp
out
push
arpl
cmp
jne
imul
stos
jecxz
and
ds
jae
push
test
das
in
dec
inc
jnp
xor
sub
jle
push
add
push
arpl
andl
push
sub
xchg
divb
out
push
fwait
jno
jge
pop
repnz
sub
icebp
addl
dec
cmp
mov
xor
pop
adc
adc
push
mov
mov
xlat
roll
ss
repnz
push
out
sbb
cmp
cmp
imul
mov
addl
push
add
jbe
push
or
xchg
mov
pop
sbb
pop
jp
daa
test
fsubrs
jg
sbb
push
mov
pop
cmp
les
inc
mov
enter
aam
sub
arpl
lret
lods
adc
lahf
rclb
in
pop
push
push
mov
inc
imul
fcoml
lret
adc
cltd
fwait
xchg
dec
xchg
jp
mov
shl
lret
mov
sub
adc
adc
in
mov
adc
mov
aas
mov
imul
push
adc
into
insl
and
loope
mov
dec
or
push
sub
dec
add
pop
sahf
push
pop
jnp
repnz
or
sbb
or
mov
mul
adc
sbb
add
adc
mov
data16
imul
dec
dec
jb
xchg
jmp
push
fidivl
mov
jns
arpl
push
pop
int
sbb
sahf
ret
cmpl
dec
pop
mov
movsl
inc
mov
or
jg
mov
mov
pop
fwait
popa
lods
sbb
add
dec
xor
iret
mov
jge
jo
cmpsl
mov
sub
scas
ja
and
push
daa
movsb
push
pop
cmp
out
add
pusha
cli
sub
lret
xchg
lret
js
in
sbb
pop
push
enter
and
dec
inc
sti
pop
pop
add
pushf
sbb
xchg
sbb
cmp
sti
jl
sbb
mov
enter
lahf
dec
inc
inc
dec
sub
push
dec
pop
pop
xchg
lret
je
les
sbb
push
call
adc
imul
cli
je
mov
aad
jl
test
inc
pop
inc
pop
ljmp
adc
es
fildll
xchg
mov
mov
or
jb
inc
test
movsl
fdivrs
out
and
icebp
and
hlt
addr16
xchg
mov
lret
adc
sub
std
and
daa
xor
les
arpl
imul
and
movsl
pop
jno
mov
or
sbb
sbb
cmp
jl
cwtl
lret
sub
out
and
mov
addr16
push
add
sbb
mov
jecxz
aas
xor
lahf
push
fxch
add
cwtl
xchg
test
iretw
pop
aam
mov
gs
outsb
clc
xchg
and
subb
mov
mov
dec
lahf
das
outsb
fistl
inc
insl
xchg
fldcw
pop
ss
popa
movsb
fwait
test
pop
lods
out
cmp
mov
jmp
mov
dec
lcall
push
and
xchg
jle
mov
mov
movsb
clc
pop
jecxz
mov
sbb
icebp
out
das
popa
sbb
nop
inc
or
jmp
aas
and
pop
add
fldcw
outsb
inc
pusha
and
mov
in
imul
cmp
sbb
pop
jecxz
xor
add
push
jp
stos
pop
mov
rorl
mov
call
jle
outsb
sub
les
ja
sbb
push
stos
cmp
dec
inc
ret
rcrl
repz
xchg
or
mov
cmpb
xor
xor
cwtl
mov
jecxz
or
cmp
push
and
int
je
sahf
dec
jp
cmc
and
aas
loopne
jae
dec
jno
sub
and
les
sub
jne
ss
jle
dec
rolb
cltd
sbb
pop
loope
sub
bound
mov
je
clc
popf
ja
cmc
sbb
adc
mov
push
lret
xor
frstor
sahf
adcl
cmp
pop
xor
ds
outsl
cmp
das
jnp
dec
cmp
ljmp
pop
and
outsb
jb
or
mov
mov
sub
scas
dec
call
roll
stc
xchg
mov
jb
add
call
mov
sbb
stos
mov
call
inc
fadds
xor
out
sbb
pop
mov
pop
adc
sbb
cmc
push
shrl
sub
orb
sbb
pop
cmp
lret
xor
inc
cs
pop
popa
push
and
mov
or
adc
lret
sbb
cwtl
pop
push
and
cmp
loope
add
jo
lea
or
stos
in
out
es
test
pop
push
and
or
mov
jge
pusha
push
mov
inc
pop
or
call
mov
jb
in
or
lret
call
call
jo
cmp
rcll
and
jb
pop
cmpsl
pop
sbb
stos
and
dec
cmc
test
shl
cmp
xor
or
pop
insl
subb
fiaddl
sarb
pop
jbe
arpl
cs
aas
add
mov
loopne
inc
ds
cmc
test
dec
outsb
jno
dec
pop
adcb
stc
push
mov
push
pop
sbb
aam
fldcw
mov
insl
bound
cld
loope
lahf
fdivrl
test
jp
pop
and
sti
and
mov
cltd
jnp
dec
lds
add
jnp
pop
shll
mov
jle
cmp
rcl
and
lcall
fs
sbb
or
add
push
add
cmpsb
xchg
sarl
push
xor
mov
or
inc
orl
call
xor
sub
dec
push
fcomps
rol
cmp
xor
or
pop
push
dec
lock
push
adc
repz
je
addr16
xchg
mov
adc
pop
xor
sti
jle
sub
test
insb
orb
or
nop
xchg
mov
mov
mov
rcll
pusha
nop
test
lock
mull
into
cmp
add
bound
push
shrl
or
add
mov
std
mov
dec
xor
add
cmc
sbb
mov
xchg
test
cmp
jl
arpl
scas
mov
add
shl
dec
mov
rcrl
add
dec
sbb
repnz
cmp
inc
push
push
push
add
fstpt
sub
fbstp
cltd
cltd
out
xor
cmp
and
dec
test
mov
jecxz
add
sub
jo
sbb
dec
pop
jmp
or
fldt
movsl
pop
in
movb
roll
mov
pop
adc
add
or
mov
xor
adcl
xchg
cmp
add
insb
in
fwait
ret
inc
mov
xchg
sahf
mov
lcall
pop
pop
sub
mov
pop
lods
mov
mov
int
xchg
push
lods
ss
or
out
lods
mov
push
push
pop
jnp
loopne
loope
adc
loope
out
adc
dec
int3
mov
mov
jo
or
imul
push
mov
add
pop
jo
ljmp
in
jl
mov
pop
xor
pop
adc
pop
adc
pop
adc
pop
nop
insl
dec
push
imul
inc
lea
pop
mov
ret
sub
outsl
mov
or
fsubr
push
insb
adc
mov
fmull
test
pop
inc
in
andb
stos
ret
cmp
inc
aad
mov
pop
mov
xlat
jle
push
sbb
cli
mov
shlb
fdivrp
lret
mov
in
scas
rolb
je
je
lds
movsl
jnp
mov
mov
cwtl
fcompl
shrl
rorb
add
pop
sbb
adc
in
inc
sbb
das
fs
cmp
inc
xchg
jg
std
xor
sub
imul
cmpsl
imul
push
mov
jae
orl
push
shlb
jne
jp
mov
jge
add
pop
mov
andb
push
push
xor
iret
add
and
ds
addr16
pusha
cmova
or
lea
or
popf
sub
pop
fists
repz
roll
push
push
adc
ss
ja
outsb
fbstp
adc
data16
inc
and
mov
dec
shll
xchg
js
pop
push
mov
pop
jle
and
popf
mov
inc
call
test
data16
pop
outsb
aaa
lcall
outsl
push
mov
xor
in
and
ficompl
adc
shll
shrl
or
xchg
xor
cwtl
je
push
jne
pop
push
test
inc
sbb
cld
mov
xchg
pop
cwtl
stc
xrelease
outsb
dec
jp
inc
mov
xchg
out
in
cmp
xchg
iret
or
loopne
jg
pop
xchg
inc
mov
jae
cltd
ficomps
dec
adc
sub
test
out
sbb
fdivrl
mov
pop
sti
xchg
xorb
in
pushw
rolb
cmpsl
or
cmp
ret
cmp
and
mov
adcl
ja
sub
push
sbb
dec
shld
inc
pop
pop
mov
sub
adc
inc
xchg
repz
dec
lcall
jge
cmp
adc
push
es
sub
or
push
ljmp
jae
or
out
mov
mov
movsb
pop
mov
push
mov
adc
jmp
loopne
lcall
cs
ss
adc
repz
cmc
inc
adc
inc
push
jg
cmp
sub
movsb
push
sarl
insl
dec
adc
cli
orb
pop
pop
mov
lret
mov
das
jle
mov
mov
imul
or
addr16
or
xchg
push
adc
sbb
push
or
xor
imul
dec
shl
add
jbe
mov
pop
in
xor
fmuls
inc
sub
and
cs
in
cltd
mov
xor
jle
stos
sbb
sar
orb
mov
push
cmp
xor
aam
jns
add
pop
out
js
lret
shrl
pop
popf
aad
jecxz
xchg
fistl
adc
dec
popa
sbb
inc
js
jnp
push
dec
cmp
roll
and
push
hlt
sub
and
push
cmpsb
dec
out
int3
lret
fstps
rcrb
je
pop
mov
ljmp
lods
lret
nop
lock
hlt
pop
jne
fwait
pop
movlhps
mov
cltd
pop
mov
pop
lret
iret
lcall
jbe
jno
in
rcr
jns
cmp
addr16
add
dec
cmpsb
push
fsub
add
push
push
dec
add
sbb
sbb
jno
mov
mov
xor
stos
sbb
jb
mov
or
sub
or
fistpl
lea
jae
movups
mov
cmpsb
in
and
pop
in
fidivrl
xchg
xor
mov
mov
mov
loopne
add
mov
punpcklbw
pop
mul
mov
fmul
pop
lret
dec
xchg
mov
mov
inc
fimuls
push
repnz
testb
push
pop
sbb
cmp
mov
sbb
stc
jecxz
or
dec
jg
loopne
adc
adc
xacquire
push
xchg
adcl
xchg
imul
sub
lock
dec
pop
roll
push
push
ret
inc
and
lret
cmp
pop
pop
push
jp
adc
and
jo
pop
daa
fcomps
sub
int3
lret
jmp
add
cmp
cmp
push
shrb
stos
and
gs
mov
push
adc
test
push
push
and
arpl
nop
mov
and
dec
mov
mov
gs
sahf
cmpsb
faddl
cli
test
lock
pop
es
or
sub
and
add
ss
dec
stos
imul
dec
mov
ret
rcr
inc
cmp
data16
ret
add
add
sub
sub
jmp
adc
inc
repz
movsl
roll
outsl
push
test
sub
mov
xor
xchg
aaa
pop
dec
push
sub
jp
sbb
das
mov
cmpsl
icebp
jge
mov
imul
js
lods
sti
in
xchg
push
jae
sub
push
stos
mov
lea
pop
sbb
adc
fucomp
inc
pop
iret
mov
jns
leave
leave
scas
aas
into
outsb
insb
sti
roll
popa
arpl
repz
leave
sbb
inc
dec
xchg
cmp
icebp
arpl
je
jae
push
sbb
jno
fwait
jnp
add
dec
sub
outsb
add
aad
sti
jl
ja
cmc
cmp
shr
fcoml
mov
pop
loop
inc
lods
mov
sbb
sbb
sbb
loop
loopne
mov
fwait
and
mov
inc
mov
pop
test
cmp
clc
fs
fs
pop
enter
push
jae
sbb
stos
int
mov
pop
dec
mov
insb
mov
adc
insb
in
and
jno
or
mov
inc
sbb
aad
jg
test
mov
xor
mov
movl
fistpl
arpl
or
lock
push
out
xor
xchg
insb
sub
in
sbb
mov
dec
or
and
inc
iret
std
call
sub
insl
insl
addr16
mov
and
or
jnp
cli
sbb
shll
loop
arpl
lret
dec
clc
push
out
dec
adc
loop
adc
rcrb
sahf
jns
pop
fcmovbe
in
ret
mov
xor
mov
jp
pop
ja
out
dec
insb
xor
cmp
push
dec
pop
ja
arpl
mov
mov
subl
mov
es
xor
pop
or
fimull
imul
sbb
aaa
lock
scas
jmp
xor
or
pusha
xchg
sub
cmpb
dec
shlb
mov
push
pop
repz
vmread
faddl
jb
ja
or
cmc
scas
xchg
mov
ficomps
lret
push
js
sub
inc
mov
push
jle
cs
imul
add
test
dec
popa
sub
mov
mov
jmp
push
mov
cmp
push
sbb
push
adc
sbb
dec
and
inc
cmpsb
xchg
dec
cmpsl
mov
push
dec
lods
push
add
xlat
mov
xchg
int
sti
out
shlb
adc
adc
pop
cs
fmull
sbb
add
adc
xor
jae
sti
lret
mov
and
sub
jns
dec
mov
or
or
add
pop
adc
pop
scas
repnz
jp
adc
lock
mov
adc
cmp
mov
sbb
dec
xor
fcos
popa
das
jns
adc
mov
pusha
sbb
lods
imul
mov
push
sub
ss
adcl
dec
test
call
push
jecxz
sbb
and
insl
lret
in
adc
xchg
or
and
lcall
cmc
cmp
test
sub
fwait
add
addr16
bound
adc
push
or
imul
loope
mov
xchg
or
stos
dec
fdivl
aaa
push
push
jg
lea
fisttps
mov
xor
sbb
xchg
imul
push
das
pop
cwtl
mov
adc
mov
pop
outsb
leave
or
popa
mov
sub
stos
lret
test
mov
push
pop
dec
roll
mov
pop
fsubrl
dec
pop
cmp
jnp
or
mov
push
scas
in
or
xchg
xchg
push
data16
push
ret
cmpsl
pop
cmp
mov
or
pop
or
mov
lea
xchg
je
pusha
enter
jo
pop
mov
xor
sbb
enter
arpl
sub
sub
jecxz
jle
ror
sahf
push
lea
mov
and
ja
and
and
and
ss
das
or
or
cmpsb
mov
ljmp
sbb
sbb
push
fwait
cmp
cmc
movsl
pop
pop
test
sar
jmp
mov
ds
outsb
push
pop
jns
push
js
movsb
or
mov
xlat
cmpsl
or
sub
out
mov
add
and
sbb
inc
cltd
sub
and
adc
mov
sub
or
ret
out
test
inc
lock
rcl
and
pushf
outsb
pop
pop
or
movsl
sbb
push
xchg
in
aaa
jns
addr16
cwtl
sbb
mov
adc
aas
push
add
jmp
xchg
and
sbb
jecxz
rcl
inc
test
push
mov
cmc
pop
lcall
shlb
mov
mov
add
movsl
lcall
dec
popa
scas
add
cmpsl
sub
mov
jmp
ret
cmp
inc
jge
xor
cmp
lock
or
hlt
mov
lahf
sbb
loopne
pop
nop
cmpsl
xchg
aad
dec
and
xor
popa
and
mov
push
adc
push
icebp
mov
gs
xor
pop
outsb
sub
nop
sbb
dec
pop
push
xchg
in
cltd
xchg
xchg
faddl
dec
mov
outsb
loopne
adc
sbb
inc
test
mov
add
push
mov
fcoml
in
xor
fnstenv
dec
rcrl
and
mov
clc
in
fidivl
cmp
jge
jle
mov
dec
mov
jae
loop
rcrl
mov
add
leave
xor
negb
fsqrt
call
test
jae
js
xchg
mov
mov
scas
push
xchg
bound
sbb
dec
xchg
stc
in
popa
insb
jbe
push
add
test
push
lret
lds
jo
inc
adc
cltd
arpl
push
push
mov
and
idivb
or
shlb
xchg
pop
fisubrl
outsb
mov
orl
imul
push
push
stc
pop
pop
cmpb
add
add
jnp
cmp
mov
push
jne
idivb
add
push
dec
or
lret
or
aad
cltd
pop
sbb
ret
sbb
rolb
fs
scas
fisttps
subb
popf
in
cmp
fildl
pusha
dec
pop
int3
outsb
jae
cmc
fisttpl
test
bound
sbb
and
sbb
jno
std
popf
sub
lds
arpl
or
adc
inc
daa
imul
adc
cmp
jmp
sbb
aaa
dec
ret
cwtl
rcrl
fwait
adc
jbe
faddp
sub
rcrl
fnsave
push
nop
das
arpl
shll
fs
jne
lret
dec
les
pop
cmp
or
jo
jecxz
xlat
mov
pop
xlat
ficompl
fs
cmp
stc
insl
add
lds
adc
out
movsb
mov
scas
sbb
mov
pusha
mov
pop
mov
cmp
xor
pop
cli
mov
int
enter
sbb
lods
test
dec
sub
xchg
aas
lss
sahf
clc
sub
stos
jnp
popa
rcrl
sbb
mov
xor
out
jns
insb
cmp
stc
xchg
mov
out
jl
sub
pop
sti
femms
add
jmp
push
xor
lods
test
in
pop
mov
adc
fisubrl
cmp
in
rclb
das
fwait
das
cmc
xchg
mov
mov
cmpb
leave
ret
sub
sbb
adc
xor
mov
push
dec
stos
fwait
inc
ja
ja
push
or
push
test
sahf
aam
jbe
xchg
xchg
push
das
add
inc
add
test
adc
mov
or
dec
xor
lock
jle
dec
jno
or
cld
aam
loop
mov
jae
dec
or
xor
outsb
sub
jg
mov
push
sbb
jle
jg
adc
sbb
xor
imulb
adc
rcll
fldt
adcb
push
dec
xchg
cmp
or
fadds
fcmovb
lods
pop
and
and
das
shrb
lock
xor
or
push
adc
decl
ss
jnp
rcrl
scas
pop
sbb
inc
addr16
mov
lock
js
jnp
push
push
and
std
or
out
or
mov
cmpsb
fwait
in
es
ljmp
xor
mov
fwait
inc
insb
and
inc
or
and
in
negl
sbb
jecxz
movsb
lret
cmp
or
int3
xor
and
pop
sbb
out
or
daa
push
dec
dec
xchg
push
popa
xor
jecxz
mov
loope
scas
nop
dec
ljmp
push
loop
or
xor
push
mov
test
fmuls
mov
notb
mov
jo
pop
and
fwait
push
push
and
test
push
add
xchg
add
inc
or
jnp
mov
shlb
push
jo
dec
lds
pop
enter
popf
dec
divb
loop
cmovb
stos
test
xlat
imull
or
in
add
adc
inc
movsl
cmp
sbb
pop
pop
push
pop
hlt
xchg
dec
mov
repz
xchg
mov
ds
and
push
ds
mov
dec
in
or
outsb
cmp
adc
pop
sub
pop
inc
loop
daa
or
mov
xor
jbe
dec
and
blcic
clc
inc
fiadds
jns
and
or
xlat
fwait
sub
in
sub
inc
outsl
insb
adc
push
into
xchg
cmp
adc
in
mov
imul
jo
or
add
hlt
hlt
cmp
cmpb
add
mov
ja
imul
sub
add
ss
adc
xchg
mov
pusha
iret
leave
push
adc
aam
cmp
xor
push
daa
ja
fisubs
cmp
jl
jmp
xor
daa
cltd
cltd
iret
pop
jo
xchg
sbb
cmpl
cltd
pop
add
sbb
mov
addb
outsb
je
push
inc
mov
lret
popf
sub
sbb
add
outsl
cmc
out
jecxz
es
adc
cmpsl
sahf
pop
test
lods
pop
pop
mov
faddl
jae
mov
jp
inc
mov
inc
sub
popl
cltd
jmp
mov
test
push
xchg
or
xor
jne
sub
xlat
inc
push
mov
ljmp
rcl
les
stos
mov
aas
ds
pop
mov
test
repnz
add
mov
xor
add
xchg
mov
or
dec
adc
lods
pop
dec
mov
mov
dec
and
mov
or
mov
sbb
and
mov
add
subl
aas
js
push
out
jne
dec
aad
sub
sub
mov
rclb
aas
add
cmp
pop
sbb
cltd
decl
rclb
in
sbb
pop
cmp
sbb
inc
lods
pop
scas
mov
mov
jecxz
and
insb
add
loope
add
lret
jo
stc
mov
je
std
aam
les
mov
gs
and
icebp
push
mov
mov
mov
int
mov
repz
inc
mov
xchg
inc
mov
inc
dec
lods
pop
xchg
cld
lcall
loopne
sbb
push
jmp
mov
pop
aas
rcl
out
cmp
jne
imul
pop
fs
jns
lcall
sub
mov
inc
sub
pop
in
pushf
mov
fsub
ret
xlat
cltd
mov
or
rorl
and
arpl
loope
rolb
decl
inc
das
inc
mov
cmp
push
outsl
xor
dec
inc
adc
mov
add
js
jo
xor
pop
or
jecxz
adc
inc
imul
or
inc
inc
out
jnp
jecxz
pop
ficoms
cs
inc
push
aas
cld
dec
imul
les
icebp
rcrl
cmp
lcall
sub
fwait
ja
leave
mov
lock
rclb
daa
pop
sub
cmp
sub
sahf
leave
aad
sahf
lods
add
jne
pop
dec
inc
sbb
jne
sbb
inc
jne
sbb
adc
add
incl
fwait
pop
xor
cwtl
push
xor
mov
dec
sbb
sbb
hlt
movsl
cmp
rorb
xchg
iret
sarl
insb
insl
cmc
xchg
inc
ja
out
outsl
ror
jg
shlb
jno
cmp
pop
push
fmul
push
or
mov
jmp
scas
popa
fisubs
inc
push
push
loope
and
leave
xlat
cmp
fiaddl
flds
in
add
out
push
mov
add
mov
jnp
ljmp
add
iret
dec
sbb
repz
fldcw
jg
enter
enter
sub
mov
inc
dec
cs
sarb
or
push
cmpsl
xlat
daa
push
mov
shl
push
mov
sarl
xchg
dec
pushf
cs
sbb
cltd
pop
ljmp
mov
cs
or
rolb
shl
rorl
or
cmpsl
iret
and
jb
push
or
jecxz
bound
hlt
mov
mov
shrl
inc
sbb
xchg
add
inc
js
pop
mov
divl
adc
xchg
push
mov
imul
mov
ja
leave
aad
lcall
or
aas
push
mov
int
dec
sbb
xchg
daa
lret
mov
xor
jnp
gs
incb
xchg
pop
jnp
in
ss
test
cli
imul
add
inc
orl
mov
divl
push
push
pop
inc
and
pop
inc
cmpsb
lds
jo
cmp
inc
ljmp
mov
das
pop
clc
je
adc
push
jl
xlat
dec
inc
pop
or
push
add
mov
decl
push
jecxz
cwtl
push
and
dec
not
call
pushf
nop
and
pop
xor
shr
push
lret
sub
cld
jns
gs
or
insb
daa
jae
push
jb
push
fildl
cmp
imul
and
stos
insl
mov
test
pop
shll
push
pop
rorl
cwtl
jecxz
push
data16
repz
jno
ljmp
fsub
dec
andl
fcomip
inc
sub
loope
jecxz
pop
dec
xchg
stos
or
add
or
jp
push
or
repnz
push
cmc
lock
sbb
sub
push
loope
adc
sub
stos
aam
jp
mov
imul
aas
aas
fld
les
mov
mov
ss
xchg
push
jne
mov
daa
cld
ljmp
fwait
sahf
aaa
lret
insb
dec
jns
mov
sbb
fcomi
push
jne
pop
jae
or
sub
test
or
and
daa
jne
fists
dec
ljmp
sbb
cmp
movsb
mov
pop
mov
cld
sti
notb
loopne
cwtl
test
push
lcall
pop
xchg
lods
call
jp,pt
stos
std
jmp
mov
cli
sbb
adc
arpl
dec
stos
xor
push
xchg
outsl
dec
daa
xchg
imul
mov
addl
sbb
and
pop
fistpl
inc
push
arpl
mov
mov
cmc
lock
ret
sbb
and
jg
movsl
data16
and
lahf
jns
dec
popa
mov
adc
imul
and
shlb
push
jl
fimull
dec
imul
mov
cmp
test
loop
cmpsl
add
pushf
and
mov
mov
cld
iret
sub
push
outsl
lret
ljmp
pop
leave
xor
out
sbb
xor
jl
insl
jmp
fnstsw
inc
icebp
ret
mov
inc
adc
pusha
in
movaps
cmp
loopne
mov
xchg
das
std
gs
push
shll
sub
lahf
mov
mov
aas
sbb
add
rcr
pop
mov
addr16
pop
insb
dec
xchg
mov
lock
mov
imul
sub
cmp
xor
sub
push
outsl
cmpsl
xor
addr16
data16
or
inc
or
mov
scas
dec
stos
ret
mov
scas
mov
push
cmpsb
jno
jo
shrl
inc
mov
sahf
mov
xchg
xlat
or
inc
mov
xor
popf
cmpsl
ljmp
cmp
rcrl
xor
cwtl
mov
sub
daa
pop
cmp
pop
aad
daa
sahf
lcall
vpcmpeqb
push
loop
lret
xchg
cmpsb
mov
jb
dec
enter
jle
popf
xchg
pop
jbe
jnp
sub
repz
and
aad
jbe
sub
push
loop
fwait
stos
jae
fsubs
std
mov
fisttpll
jae
push
push
std
or
sbb
mov
fstps
lcall
sub
sbb
mov
aaa
pop
xlat
cli
xor
jae
sub
adc
push
adc
sub
xor
or
add
mov
sub
repz
repz
lret
mov
lcall
push
push
lret
adc
inc
cmp
lods
inc
imul
cmp
loopne
addb
inc
inc
pop
cmp
jp
push
shl
jb
sbb
mov
xor
xor
ret
jmp
adc
in
pop
rcl
sbb
arpl
dec
jp
sti
xchg
sbb
insl
fstp
push
and
imul
mov
inc
inc
inc
or
in
inc
dec
pop
incb
xor
push
push
jno
add
pop
xchg
pop
sub
xor
shrb
rcrl
and
das
jno
lcall
in
sbb
dec
loop
xlat
cli
add
sahf
push
adc
jnp
cli
dec
xchg
dec
daa
imul
outsl
push
scas
in
sub
mov
adc
rclb
cltd
mov
js
jne
shll
pop
xchg
in
jns
xchg
xchg
push
mulb
inc
lock
loop
push
or
out
jns
aaa
sti
mov
mov
pop
aad
dec
inc
outsb
add
out
inc
enter
fldcw
pop
loop
sub
pop
sub
fsts
ffree
cli
pop
inc
and
lock
test
dec
adc
test
cmpsb
sarb
jp
inc
bswap
add
subb
push
push
pushf
arpl
add
mov
mov
add
shll
xor
mov
and
aaa
pop
or
loope
fdivrs
in
sahf
nop
dec
mov
mov
popa
jbe
dec
push
adc
xlat
movsl
std
negl
dec
pop
mov
mov
hlt
mov
ds
sub
xchg
cwtl
sbb
in
mov
cmp
hlt
in
jnp
pop
adc
xor
mov
repz
ds
mov
popf
scas
outsb
in
mov
adc
imul
iret
mov
lret
adc
push
icebp
push
cld
mov
dec
dec
sbb
test
push
std
or
xor
rorb
mov
jp
inc
push
mov
mov
fldcw
enter
pushf
mov
enter
ljmp
cmp
push
movsl
and
sbb
xchg
outsb
cmpsb
flds
cmp
out
jbe
inc
or
jmp
in
out
sub
jo
pop
cmpsb
mov
lcall
mov
mov
mov
sbb
add
into
add
fucomi
incl
inc
sub
push
es
pop
or
out
pop
cs
cld
in
out
insb
and
or
fcmovnu
cld
cmp
and
mov
ja
loope
jg
mov
jmp
push
add
pop
ss
xor
jns
fdivs
push
cwtl
mov
sahf
xor
rclb
shll
pop
xchg
xor
movsb
push
sahf
fisubl
jb
mov
add
lret
call
popf
fwait
js
imul
mov
in
add
dec
jns
cltd
es
nop
pushf
int3
mov
je
movsl
mov
loope
pop
bound
shll
fcmovnb
xchg
lahf
lret
xchg
movsb
lret
js
cmp
or
mov
and
sub
cli
inc
xchg
loop
lods
add
jae
xchg
fisttps
inc
and
dec
jp,pn
pop
jl
adcl
in
pusha
lock
mov
inc
push
ja
dec
pop
ja
stos
dec
cmp
in
int
xchg
xorl
lahf
scas
mov
stc
cmpsb
lret
xor
push
lods
jo
scas
push
xor
lock
fisttpll
dec
insl
cmp
pop
and
in
andb
and
mov
sbb
xchg
push
push
adc
pop
repnz
jbe
sbb
test
cltd
mov
push
divl
in
shll
stos
push
cltd
repnz
fnstcw
cli
lds
mov
arpl
mov
push
mov
dec
mov
inc
sti
je
lcall
push
shr
sbb
out
aas
lods
mov
daa
xorl
mov
div
leave
into
jae
daa
insl
sub
in
mov
in
lods
test
sbb
das
jle
shrl
fstpl
sub
loop
add
int3
pop
mov
and
lcall
cmp
cmpsl
inc
inc
or
cmp
lock
add
lcall
sbb
lret
pop
scas
sub
sti
sub
aad
push
arpl
and
orl
push
mov
outsl
aad
push
mov
out
inc
lods
pop
inc
popa
cs
loop
in
cmp
mov
push
jle
test
ret
sti
lock
and
sbbl
push
or
jae
jecxz
adcb
sahf
rolb
sbb
or
cmpsb
ret
cmp
adc
hlt
insb
push
push
or
xchg
xor
mov
pop
rorl
ljmp
dec
push
inc
imul
sbb
lahf
xor
sub
loopne
jp
xor
stos
rcll
push
mov
clc
sbb
mov
outsb
or
loope
push
dec
mulb
and
outsb
inc
mov
clc
push
ljmp
mov
data16
jle
shrb
mov
adc
rcll
xchg
or
xchg
jl
and
jns
cmp
gs
add
jle
mov
dec
fwait
scas
adc
cmp
sub
lahf
std
cmp
sub
stc
fists
jne
icebp
gs
out
cmp
jo
and
xchg
xchg
jb
or
push
mov
es
cmpl
adc
pusha
mov
xor
dec
xor
ja
adcl
outsb
outsl
sub
cmp
mov
insl
push
repnz
or
test
adc
sbb
ds
xor
js
inc
in
sbb
inc
out
jmp
or
inc
test
sbb
sbb
dec
fcom
cmp
ja
bound
push
xor
popf
loop
xchg
rcrl
jl
dec
fstpt
adc
sub
dec
iret
leave
nop
cmc
aad
sahf
adcb
mov
aam
jecxz
cwtl
xadd
or
add
cld
outsb
mov
clc
sbb
cwtl
jecxz
rcrl
xor
jns
sti
mov
mov
das
lock
loop
or
and
adc
mov
adc
subl
adc
inc
movsb
in
pushf
aad
sti
adc
andb
dec
mov
jmp
adc
test
inc
mov
sub
pusha
fisttps
cltd
jle
xchg
push
leave
shrl
push
or
xchg
loopne
adc
sarl
sub
push
insl
pop
ljmp
lods
jne
cmc
mov
adcb
les
cmpsb
sbb
cwtl
fcoml
mov
pop
add
orl
mov
pop
jno
push
push
inc
pop
pushf
jle
inc
dec
mov
imul
lret
scas
fnsave
sub
cmp
add
mov
push
push
mov
sahf
xor
fistl
mov
push
jp
jg
xchg
out
data16
jno
mov
sub
pop
xchg
scas
push
dec
xchg
or
pushf
shll
rcrl
cmp
push
popa
adc
push
repz
jge
fst
std
mov
fnstenv
addl
add
loopne
nop
imull
enter
sub
add
roll
jg
out
or
cwtl
mov
mov
ret
popf
pop
sbb
cmpsb
push
movsl
mov
mov
stos
xchg
push
mov
stos
daa
dec
dec
mov
push
test
into
and
repz
repz
jge
out
scas
and
movsl
das
lahf
dec
mov
and
and
nop
sub
fsubr
xchg
je
xchg
sub
nop
push
arpl
das
hlt
pop
push
add
insl
in
popa
int
add
mov
push
loop
sbb
jg
movsb
shrb
mov
orps
test
ret
xor
jbe
scas
test
mov
adc
inc
arpl
jmp
or
xlat
cmp
lcall
clc
iret
lods
mov
push
xchg
test
fstps
cmpl
sbb
push
clc
in
lretw
jns
xchg
push
adc
imul
aas
add
rclb
jno
sbb
mov
lcall
int3
das
adc
or
pop
sbb
roll
iret
inc
fistpll
aas
test
frstor
cltd
xlat
popf
xchg
fwait
and
or
mov
xor
push
incl
aaa
mov
jmp
and
or
xchg
push
sbb
sbbb
push
sarl
popa
inc
sbb
cmp
mov
std
stos
mov
lods
pusha
mov
inc
sub
or
jo
xchg
add
and
mov
fwait
jno
inc
inc
fldenv
ja
rorb
int3
jg
jle
dec
lock
testl
inc
negl
clc
fldcw
or
mov
pop
mov
dec
jecxz
adc
or
dec
outsb
das
xchg
inc
popf
fistpl
dec
aam
ret
cwtl
iret
xchg
add
subl
xchg
sub
outsl
jae
scas
outsb
inc
fwait
add
mov
jb
jp
mov
push
cmp
dec
fwait
movsb
push
xchg
aas
ljmp
adc
pop
outsb
push
mov
in
iret
xchg
inc
xchg
jae
add
and
adc
adc
ljmp
arpl
mov
jno
addb
jnp
jo
xchg
jno
stos
stos
sub
pop
and
xchg
dec
inc
mov
xlat
xor
push
or
loopne
sub
pop
imul
loop
pusha
jmp
cmp
divl
sbb
push
lret
push
push
mov
add
cwtl
cmp
xchg
mov
notl
push
les
das
mov
mov
aaa
imul
aas
aad
out
pcmpgtw
push
mov
stos
xchg
scas
nop/reserved
add
fldenv
into
push
adc
das
aas
xchg
es
cmp
lcall
mov
xchg
iret
adc
pop
xchg
fsts
adc
cwtl
push
fidivl
mov
dec
popa
rclb
ja
jae
push
std
push
cli
push
in
and
mov
sub
jb
nop
mov
xchg
add
aas
sub
pop
sbb
mov
lea
imul
add
xchg
cltd
sbb
ljmp
ffreep
call
jp
adc
xchg
push
mov
test
push
cmc
push
mov
xchg
pop
cmp
or
xor
out
xchg
pop
dec
divl
xor
cmp
mov
test
xchg
shll
mov
mov
pop
dec
pop
jno
popa
sub
stc
mov
dec
adc
dec
sub
mov
xchg
imul
jae
xor
cmp
loope
pop
jns
jecxz
int
lds
pop
or
push
pushf
gs
int
fwait
imul
push
jg
mov
push
adc
sbb
insb
fdiv
addr16
rorl
push
mov
pop
ja
and
add
and
push
add
mov
or
inc
push
pop
lcall
ss
mov
out
icebp
repnz
aad
fsubr
cmp
push
rorl
jecxz
adc
xchg
das
mov
ds
xchg
das
lods
dec
xor
addl
stc
pop
cmpsb
js
lcall
test
aaa
cwtl
lret
adc
pusha
sub
push
sub
mov
adc
and
aaa
insl
jl
daa
bound
xor
adc
pop
jp
hlt
inc
gs
idivl
push
shrl
inc
inc
cs
and
add
clc
jp
sbb
sahf
lods
pop
jg
add
sahf
dec
push
cmp
imul
testb
sub
add
xchg
ret
push
cs
aas
xchg
loope
jbe
push
iret
cld
mov
imul
xchg
stos
or
jg
push
fistl
loopne
out
cmp
adc
mov
shrl
mov
ret
iret
inc
mov
cmp
mov
push
adc
in
pop
sahf
xor
movsl
adc
dec
or
mov
cmp
jg
imul
mov
stos
cmp
nop
xor
cwtl
xorb
pop
fndisi(8087
stos
dec
idivl
in
or
arpl
cmp
sbbb
cmp
pop
dec
lret
mov
cs
aas
or
mov
or
mov
cld
mov
scas
mov
mov
fcompl
xlat
negb
stos
ds
add
mov
push
stos
sbb
sbb
xchg
adc
movsl
push
repz
push
jne
idivb
sub
xchg
lods
mov
mov
jne
xchg
aas
adc
mov
orb
shll
push
popf
dec
inc
mov
inc
aam
imul
inc
pop
or
fisttpll
in
inc
nop
rclb
fcmovne
call
inc
push
enter
sbb
mov
pop
scas
push
adc
addl
push
sub
mov
scas
test
xlat
movsb
aad
insl
or
daa
xchg
dec
fistpl
sbb
mov
hlt
pop
popa
cmp
push
les
add
push
jbe
push
loopne
imul
mov
pop
jo
test
das
xlat
mov
push
cmpsl
mov
popf
shrl
les
negb
sarb
push
jecxz
xchg
lcall
or
mov
jbe
scas
adc
pop
cwtl
jno
cmp
lds
mov
and
stos
jp
pop
mov
stos
xor
xchg
xchg
das
pusha
arpl
mov
pop
ja
cli
std
sub
inc
sbb
popa
negl
dec
cmpsl
xchg
test
push
xor
xchg
xchg
sub
jmp
or
loopne
lcall
fst
inc
pop
sub
adc
xor
jbe
fmuls
jno
mov
jns
stos
jg
cwtl
daa
fimuls
test
rcll
outsl
mov
imul
js
xchg
adc
lods
pop
add
or
xor
add
xchg
popf
push
sub
or
jno
enter
cmp
jmp
lahf
ljmp
push
fldcw
imul
daa
rcl
jmp
push
pop
jne
dec
or
aam
and
or
cmp
fwait
cs
pusha
jge
adc
add
pop
mov
lahf
xchg
jo
mov
mov
enter
mov
lret
fnstcw
push
bound
mov
push
push
and
shlb
popf
xchg
jbe
lea
imul
xchg
sbb
out
pop
push
stos
mov
sbb
push
inc
pop
pop
xchg
sub
sbb
cs
push
lahf
xor
nop
pop
loope
push
xchg
add
add
xchg
lret
in
cmp
cmpsb
adc
popf
xchg
sub
mov
orb
mov
cmpsb
adc
ret
adc
sbb
idiv
rcll
add
mov
in
push
xor
mov
xchg
xchg
daa
popa
dec
mov
adc
test
mov
jp
mov
adc
inc
out
ret
movsb
iret
xor
mov
outsl
sub
das
push
sub
in
jecxz
push
push
sub
dec
shr
data16
repz
or
dec
ds
es
mov
xlat
sbb
cmp
bswap
repnz
add
mov
pop
sbb
mov
and
pop
mov
ret
add
cmp
shrl
and
sbb
ret
clc
pop
adc
out
and
jno
cwtl
cwtl
insb
vpacksswb
imul
loopne
xor
xlat
test
inc
mov
mov
push
popa
mov
psubb
test
aam
and
pop
mov
dec
mov
xlat
cld
divb
daa
push
push
mov
cmc
adc
and
imul
gs
js
fwait
std
mov
loop
loopne
aad
or
daa
xchg
and
mov
in
push
push
push
lcall
dec
xlat
inc
jns
and
scas
xor
cmpsl
stc
xorl
mov
lods
push
mov
pop
pop
cmp
dec
mov
aam
sub
stos
xchg
das
xor
mov
cltd
adc
sub
pop
aad
xor
adc
decl
std
fcompl
icebp
cwtl
fs
mov
outsl
lock
cmpb
lods
mov
push
sub
shrb
mov
ds
xlat
mov
mov
xlat
pusha
sub
aaa
mov
or
xor
ljmp
icebp
dec
icebp
leave
pop
out
test
rclb
lcall
cmc
out
inc
sahf
lods
in
xor
mov
jecxz
xchg
inc
aad
aad
nop
and
fstps
pop
mov
jnp
call
sbb
adc
adc
push
cld
stos
or
movups
fsubrl
std
add
pop
mov
cltd
test
sbb
test
xchg
jno
cmp
push
jns
mov
add
repnz
mov
xchg
add
or
scas
cmp
push
sbb
push
imul
dec
seta
add
jno
or
cmc
sub
movb
in
scas
leave
ret
add
xchg
loopne
jecxz
mov
push
ja
gs
aaa
pop
jecxz
outsl
jnp
cli
pop
popf
mov
fdivrl
in
inc
inc
jge
mov
and
xchg
mov
loop
add
scas
ds
bound
xlat
sub
rolb
jne
adc
leave
stos
mov
sub
mov
adc
mov
addr16
mov
imul
and
mov
test
inc
mov
cmp
aam
call
out
xchg
xchg
xchg
in
dec
push
sub
fwait
ds
xchg
cmp
leave
jmp
out
mov
sbb
pusha
es
or
pop
mov
insb
adc
shrl
xor
js
loopne
stos
mov
inc
push
inc
mov
jmp
adc
or
mov
lret
fs
aam
add
jmp
mov
call
push
mov
and
into
repz
cmp
inc
xchg
lahf
imul
pop
mov
bound
mov
jb
gs
inc
xchg
sub
cltd
sbb
xchg
jge
fsts
sub
adc
stos
cmpsb
xchg
iret
sbb
pop
addr16
arpl
sbb
mov
xchg
xchg
imul
stc
sbb
mov
pop
sub
sbb
mov
push
push
add
shrb
adc
or
dec
pop
stos
inc
pusha
stc
dec
test
mov
mov
jno
orb
add
nop
pop
outsl
incb
mov
push
aaa
aas
mov
aas
mov
jnp
mov
enter
jmp
in
cltd
push
dec
jb
push
xchg
or
stos
sub
adc
repz
and
mov
mov
enter
xor
call
inc
push
mov
push
rcll
out
sbb
sahf
ds
inc
sbb
xor
repz
push
xor
scas
or
mov
mov
xchg
dec
xor
movsb
outsl
add
icebp
daa
dec
sub
cmp
inc
iret
add
fsts
stos
or
push
mov
fwait
cmp
out
sbb
aad
daa
jne
and
push
pop
jmp
mov
or
or
les
ds
xor
mov
and
mov
fists
lock
mov
pop
dec
pop
jecxz
and
pop
xchg
fcomi
mov
rcl
xchg
sbb
xor
add
scas
mov
cmp
mov
stos
or
and
push
push
in
pusha
loop
xor
mov
mov
insl
mov
push
cld
or
or
push
dec
add
loopne
jp
ja
js
dec
push
push
dec
push
stc
xchg
in
scas
pop
pop
mov
pop
pop
rcrl
jp
pop
frstor
xchg
inc
xorl
push
xor
sbb
subl
outsl
jecxz
movsb
or
mov
mov
popa
and
popf
add
cmp
mov
sahf
sbb
fwait
dec
cmp
xor
mov
insl
push
int
pop
xor
dec
pop
sub
dec
sub
inc
icebp
pop
ficomps
incl
loope
rolb
sti
pop
aam
imul
pop
dec
rorl
repz
sub
add
and
arpl
xor
sarb
repnz
push
add
push
adc
add
dec
adc
inc
or
xorb
add
push
push
loope
pop
stos
sub
pop
xor
mov
loop
sub
or
insl
mov
insl
cmp
adc
roll
dec
or
sahf
jmp
or
sahf
xor
rep
jecxz,pn
sbb
push
sti
or
stos
jecxz
mov
xchg
mov
das
iret
shl
outsl
aas
mov
xchg
push
pop
push
out
mov
aas
out
jecxz
ds
jecxz
fstpt
adc
out
ljmp
jle
push
dec
push
jecxz
xor
into
cltd
pop
shl
add
cmp
scas
cmp
ret
js
lret
sbb
lret
push
cmp
stos
xchg
add
dec
lahf
shll
xchg
push
jle
stos
movhps
imul
outsl
sub
sbb
ret
push
mov
xchg
cli
jg
lods
outsl
aas
cmp
push
push
int
outsl
push
mov
mov
movsb
das
cmc
cmp
xchg
push
ljmp
pushf
sub
addr16
sub
jp
mov
jecxz
push
jmp
jmp
inc
sahf
dec
insl
mov
or
sbb
mov
dec
jbe
adcl
js
ja
dec
fldenv
and
mov
push
rclb
fs
xchg
xor
mov
hlt
fwait
popa
adcl
stos
jg
mov
out
imul
or
mov
push
fcmovb
scas
sahf
push
adc
pop
pop
loop
pop
xlat
pop
testb
mov
sbb
out
pop
pop
cmp
dec
push
cmpsb
lret
dec
sbb
in
pop
add
sub
xchg
sbb
test
loop
xlat
sbb
push
std
cmp
aad
xor
into
jae
add
pusha
cmpsb
or
jecxz
pop
dec
push
cmc
mov
shrb
mov
jmp
or
bound
jo
mov
and
lods
arpl
repz
hlt
xor
push
pop
cmpsl
sub
je
lock
lods
adc
jb
out
inc
mov
push
mov
adc
and
adc
add
outsl
xor
jmp
mov
or
sbb
insb
pop
pop
push
push
jle
xlat
inc
test
dec
imul
cmpb
outsb
cmp
out
jo
xchg
fisubrl
jae
jge
mov
aad
push
mov
and
cmp
das
or
jle
push
add
cltd
andl
cmp
js
xor
mov
xorl
xchg
or
in
dec
popa
push
mov
out
rcll
jle
sub
movsl
repz
imul
sarl
pop
jmp
pop
rcr
jle
scas
jmp
inc
int
xlat
cld
daa
xor
sarl
push
outsb
push
incl
xchg
jno
icebp
inc
lds
cli
jl
or
jmp
mov
es
idivl
mov
fldenv
cmc
sti
int3
push
sub
pop
lock
and
inc
jae
rorb
ja
fs
sbb
fdivs
testb
xor
int
push
sbb
jo
int3
jne
mov
xlat
dec
aad
cmp
xor
lea
sahf
mov
fisttpll
push
in
mov
adc
mov
shlb
push
lods
cmp
mov
inc
adc
mov
jne
mov
add
mov
lahf
inc
xchg
add
sub
roll
adc
cmp
lea
sub
add
dec
popf
addr16
jns
cmpxchg
cmc
adc
xor
in
jle
ret
mov
push
fldcw
push
xor
sbb
jns
xchg
mov
jmp
add
cmp
popf
push
inc
add
inc
data16
push
mov
dec
or
jbe
call
xchg
test
pop
outsb
scas
daa
and
mov
pop
add
loop
or
test
mov
push
add
inc
maxps
mov
aaa
cmp
in
dec
subb
xor
scas
add
inc
xchg
xor
jecxz
mov
xor
scas
dec
and
test
jns
adc
insl
or
ret
xor
test
or
jle
fcoml
add
push
adcb
cmp
push
xchg
dec
rcl
dec
movsb
lret
loopne
and
jb
inc
sub
xchg
popa
adcl
mov
rcll
sbb
ljmp
loope
push
repnz
or
or
xor
gs
xor
cmp
push
mov
xlat
std
dec
dec
xchg
lds
jp
or
inc
cmp
jle
sbb
add
scas
subps
outsb
enter
sub
aas
add
push
cmpsb
xor
push
pop
outsl
add
cmp
fnstcw
sub
hlt
mov
ffreep
add
jmp
push
push
fs
push
add
jo
sbb
mov
jl
dec
sbb
jle
mov
pusha
ret
mov
pop
xchg
mov
ds
mov
movsl
push
enter
mov
imul
and
cmpsl
xlat
xchg
jmp
adc
sbb
jno
push
mov
notl
pop
jnp
xchg
add
push
adc
mov
inc
mov
stos
punpcklwd
fbstp
popa
sbb
mov
popa
fidivl
adc
lea
push
shl
in
dec
rorb
or
push
or
sub
mov
cmp
dec
push
inc
bound
adc
stos
icebp
push
xchg
xor
pop
adc
dec
sub
les
xor
mov
data16
sbb
push
bound
repnz
dec
dec
stos
lret
sbb
pop
pop
sub
sub
repz
pop
subl
imull
sti
cmp
mov
repnz
imul
sbb
leave
lods
pop
or
sbb
push
or
jp
cmp
push
rcll
lret
dec
jmp
mov
sub
insb
out
push
push
mov
xlat
mov
lods
jns
jecxz
stos
out
inc
jle
lds
fs
push
cli
cmp
in
mov
xchg
stc
jnp
leave
sbb
fldcw
mov
or
jp
test
fnstenv
and
or
addr16
bnd
xchg
adc
inc
rolb
movsl
aam
cmpsb
incl
hlt
cmpsb
push
pop
sarl
pop
insl
rorb
and
xor
xorl
imul
in
inc
jb
lret
xor
sar
sbb
mov
mov
xor
iret
es
adc
sarl
lret
mov
stos
mov
stos
out
scas
push
into
test
notl
call
add
clc
movsb
xchg
popa
fstps
test
jp
mov
xor
adc
push
sub
mov
sarb
push
or
adc
xor
insb
dec
arpl
mov
scas
je
scas
push
es
dec
jns
add
sub
pop
or
xlat
pop
in
mov
rolb
dec
push
or
push
xor
sub
int
in
insb
imul
fldenv
stos
and
out
mov
push
das
jle
xchg
adc
imul
inc
rorb
inc
sti
cmpb
sub
pop
push
push
out
sbb
xchg
gs
and
push
add
mov
in
jbe
pop
std
mov
lahf
loopne
xor
pop
into
lret
and
or
cmp
aam
popa
repz
or
jle
push
in
imul
xchg
in
stos
pop
test
hlt
or
and
mov
lret
out
pop
jp
daa
mov
add
imul
mov
adc
xchg
inc
add
outsl
mov
cmp
aas
cmc
push
repz
idiv
fwait
lret
cmp
and
push
ror
clc
jae
sub
pop
imul
sbbb
xchg
pop
mov
add
movsb
xchg
rorl
scas
loopne
popf
pop
repz
push
js
mov
and
push
ficoms
das
sbb
adc
sbb
mov
inc
pop
sysexit
xchg
push
hlt
push
shrl
push
adc
cmc
jns
sub
lcall
xor
push
adc
ret
jmp
leave
pop
call
sub
xchg
xchg
jmp
or
mov
push
imul
lods
cmp
loop
rcll
andps
arpl
pushf
shll
imul
push
xorb
jne
rcll
sbb
lods
cmp
mov
pop
pop
jp
loopne
push
inc
sub
xchg
cmp
jg
sbb
sbb
dec
push
cmpsb
pop
bound
dec
cmp
push
in
bound
ret
shll
cltd
dec
push
test
mov
push
sbb
pop
xchg
sbb
add
jne
inc
mov
mov
ja
adc
sbb
jecxz
sbb
das
movsl
jp
les
lcall
outsl
inc
inc
xor
jmp
sub
sbb
stc
push
mov
mov
in
xor
xor
pop
mov
or
sub
cs
lds
adc
adc
jne
repnz
jno
xor
int
xlat
movsl
mov
lret
pop
jns
fiaddl
cmp
sub
mov
mov
in
xchg
cmpsb
je
test
orl
repz
inc
sahf
adc
mov
sub
insl
mov
in
imul
test
sti
push
outsl
dec
sbb
cltd
pop
pop
xor
dec
pop
jmp
dec
sbb
adc
ss
in
cs
and
pop
das
popf
sbb
adc
test
cmp
mov
xor
enter
mov
xchg
push
xchg
mov
sbb
lods
xor
xchg
loop
jae
mov
dec
mov
add
jge
cmp
xchg
rorb
sbb
jbe
sbb
sub
rolb
fimull
divl
mov
lods
add
mov
shr
pop
xchg
idivl
lods
xor
jnp
incb
or
cld
inc
push
outsl
xor
nop
xchg
sti
enter
sbb
ficompl
mov
dec
xchg
cltd
sub
out
aad
lods
mov
cmp
out
insl
mov
inc
dec
adc
add
test
pop
fsts
jns
test
push
mov
pop
std
es
sti
hlt
int3
dec
add
clc
enter
pushf
inc
add
imul
adc
sbb
pop
repz
jge
jmp
mov
clc
and
mov
mov
xchg
jne
movsl
jns
loope
pushf
shlb
push
mov
sub
popf
sbb
ficoms
push
cmc
sahf
pop
pop
scas
popa
cmp
jo
movsb
or
movsl
and
pop
andb
cmpsb
mov
pop
cmpsl
sbb
cmp
mov
xor
rcl
adc
mov
in
cmpsb
mov
inc
rcrl
das
pop
mov
cmp
cli
pop
and
mov
ret
xchg
inc
mov
pop
mov
pop
mov
scas
adc
loopne
mov
inc
ds
addr16
scas
aaa
adc
cmpsb
mov
sbb
sub
loopne
cmpsl
lret
dec
int3
inc
das
pushf
push
imul
add
or
push
push
push
ret
loop
out
in
js
outsb
hlt
adc
xor
jne
cmpsl
popa
sbb
jo
mov
mov
pop
adc
mov
sub
cltd
cmpsb
xor
out
cli
jnp
cmpsl
push
xor
cmpsl
cli
inc
iret
sub
lods
xchg
movsb
push
gs
lahf
push
loop
testb
je
fxch
push
js
mov
and
hlt
cmpsb
cmpsl
or
xor
add
outsl
xor
fisubl
xchg
sbb
daa
cltd
decb
cwtl
adc
push
push
cltd
adc
xor
sub
daa
jp
cld
cltd
or
scas
leave
pop
shrl
and
in
lock
rclb
push
cwtl
xchg
mov
test
dec
rclb
icebp
push
sbbl
push
cmpsl
in
pop
gs
gs
or
icebp
loope
jge
xor
shll
adc
mov
xchg
pop
mov
in
fnstcw
test
xor
and
xorb
addr16
add
sub
mov
push
inc
push
or
out
ljmp
outsl
mov
sbb
js
sub
sbb
outsl
sbb
mov
push
mov
and
imul
pop
add
fisubs
mov
mov
ss
mov
shrb
js
jp
pop
das
xchg
cmc
adc
cld
data16
jle
inc
fiadds
inc
mov
cmpsl
sahf
add
pop
mov
lret
pop
clc
ret
std
jbe
jge
dec
mov
fidivl
pop
pop
movl
push
fisubs
clc
fsubr
jo
lods
adc
shll
or
inc
arpl
loope
or
jo
pop
jnp
add
xor
jp
cli
pop
mov
daa
bound
mov
test
add
push
or
sbb
addr16
mov
and
inc
mov
jl
test
sbb
jmp
push
mov
xlat
lock
xor
adc
push
xchg
std
rclb
lods
jge
jnp
push
in
mov
dec
mov
pop
nop
pop
and
push
sub
aad
inc
sbb
xor
mov
cmpsl
mov
cmp
fwait
mov
rcl
xor
mov
enter
jl
iret
nop
das
push
sub
pop
repz
push
adc
pusha
fsubs
movsb
mov
incl
xor
xchg
test
inc
mov
mov
test
fistps
clc
cmp
addr16
mov
fists
maskmovq
testl
jg
imulb
stos
mov
in
pop
and
adc
jecxz
jne
mov
inc
inc
test
add
sahf
andb
nop
jp
xchg
and
dec
dec
popf
inc
inc
test
test
xchg
pushf
call
sub
inc
iret
inc
cmp
sbb
ljmp
push
cwtl
stos
sub
sbb
movsb
enter
popa
ja
xor
and
or
in
pop
xchg
clc
and
movsl
leave
cwtl
testl
fidivrl
sub
push
loopne
inc
rorb
rol
out
lea
rcrl
mov
push
aad
jmp
das
mov
sub
mov
pop
xor
movsb
lock
push
mov
sub
pop
cs
cmpsb
sbb
sbb
and
aam
pop
adc
push
dec
or
jo
or
flds
enter
mov
sti
inc
xchg
mov
nop
push
mov
pop
shll
push
ds
and
inc
pushf
es
mov
je
cmp
ret
aam
icebp
mov
sbb
dec
aaa
adc
test
pop
sbb
sbb
mov
iret
aaa
xchg
pop
stos
sti
adc
out
add
or
mov
repz
inc
mov
dec
xor
fstps
ja
sarl
in
xchg
addr16
add
xor
or
add
lds
sbb
lds
daa
les
adc
ret
mov
mov
and
ja
push
mov
add
pop
sub
lock
sub
loop
adc
inc
or
mov
icebp
push
sbb
sub
inc
cmp
fidivs
mov
add
mov
pop
es
push
xchg
in
adc
das
jecxz
cmc
cmp
dec
es
lock
cmc
loopne
jge
adc
imul
fdivrl
int3
xor
nop
lea
sub
cmp
and
push
ret
mov
js
xor
xlat
or
cmp
or
loop
inc
mov
mov
xor
inc
push
xchg
push
dec
jp
mov
add
movsb
fnclex
in
sub
inc
inc
adc
mov
sub
jmp
and
push
fisubl
fstl
jo
pop
test
sub
cwtl
pushf
gs
and
mov
jnp
rclb
or
pop
lock
test
cwtl
or
icebp
jp
sti
scas
mov
pop
fsubl
adc
pop
imul
push
sub
adc
loop
cwtl
dec
call
push
orl
mov
jle
xor
insl
loop
pop
jmp
xchg
adc
scas
dec
movsb
cld
mov
sbb
bound
fsubrl
test
mov
fsubrl
push
enter
or
adc
pop
outsl
xchg
out
jb
jg
jle
or
pop
xchg
addr16
inc
inc
sub
es
mov
movsl
scas
stos
imul
sbbl
rclb
cmc
pop
inc
popa
sbb
aam
add
jns
mov
and
cld
add
iret
xchg
jne
aas
frstor
sbb
cwtl
xchg
add
xchg
aaa
push
mov
call
jecxz
inc
xor
nop
loop
scas
pop
mov
or
push
mov
xchg
cmp
inc
jecxz
insb
inc
rolb
ret
roll
lds
add
mov
lret
sbb
aam
call
add
loop
enter
mov
pop
lret
sub
push
mov
jg
cld
lds
push
push
enter
test
test
fsubrs
xor
movsb
or
aaa
orl
push
mov
push
jns
add
popa
push
sbb
mov
push
mov
mov
fnsave
adc
inc
fists
insl
cs
popf
aam
sbb
insl
xchg
adc
adc
push
push
sub
add
cli
fstps
xor
inc
sbb
and
out
sub
addl
push
pop
mov
adc
imul
mov
add
xor
sub
mov
jmp
jmp
xchg
popa
mov
enter
test
das
xor
sbb
mov
xchg
inc
pop
mov
and
mov
pop
mov
or
and
xchg
mov
pop
stos
mov
jnp
mov
insl
inc
dec
mov
inc
inc
adc
arpl
mov
sub
xor
clc
pop
cmpb
out
cmp
xchg
sarb
cltd
arpl
push
shlb
inc
fadds
loopne
cmp
in
mov
push
push
push
mov
adc
filds
push
pop
int3
divl
fs
test
lea
cld
xor
decb
lret
out
sbb
icebp
sub
push
cwtl
cmp
imul
lret
cwtl
and
mov
lret
and
push
outsb
mov
scas
or
sub
xchg
lret
mov
or
xor
pop
dec
aaa
aas
out
inc
loopne
dec
and
xchg
xor
mov
pop
add
fcmovnu
in
adc
sub
lcall
mov
jmp
push
push
and
and
pop
mov
insl
push
cmpsl
pop
test
fcoms
push
adc
sqrtps
xlat
lea
sbb
jge
sbb
repz
push
xlat
pop
shl
adcb
data16
clc
mov
fcomip
mov
jns
mov
lret
ss
mov
lock
arpl
and
cmp
testb
mov
pop
dec
adcb
into
mov
push
aam
scas
xchg
add
scas
cmp
adc
repnz
pop
cmp
mov
mov
mov
test
sbb
cmp
cli
ret
scas
or
pop
xchg
dec
in
lea
cltd
sub
mov
cmp
jg
push
ja
sbb
cmp
mov
push
cmp
adc
mov
dec
int
add
and
icebp
and
mov
push
cmp
xchg
ds
daa
sub
jecxz
adc
add
mov
fistpll
icebp
fldenv
adc
xor
push
stos
frstor
das
adc
push
mov
dec
mov
push
lret
test
sbb
jg
test
insl
into
out
mov
ret
xlat
xchg
fildl
or
outsl
xchg
or
dec
jecxz
mov
mov
mulb
jnp
mov
dec
fcomps
cmpsb
lret
fstl
or
cs
ja
mov
add
icebp
scas
add
pop
xchg
lret
sbb
insb
dec
call
cltd
daa
negb
push
jae
js
mov
mov
xchg
ret
scas
or
fucompp
push
dec
out
mov
mov
cmp
push
dec
mov
push
rolb
imul
lods
or
push
inc
stos
or
or
scas
dec
adc
and
inc
movsl
lahf
xchg
pop
jmp
adc
gs
into
or
orl
fidivs
daa
testb
out
loopne
or
orb
jnp
mov
outsb
xchg
into
or
dec
mov
test
mov
pop
mov
jae
jmp
xor
mov
and
adc
pop
xchg
lret
pop
add
mov
mov
daa
adc
lret
pop
fisubs
cmp
mov
jnp
dec
cmp
xchg
js
in
push
sub
mov
mov
xor
jmp
jge
enter
movsl
pop
sub
adcl
cmp
mov
xor
cmp
hlt
fdivrl
adcb
test
adc
add
xchg
into
call
lret
into
scas
mov
out
out
daa
adc
push
scas
pop
jp
xchg
loop
sbb
movsl
cmpsl
inc
lods
mov
cmp
push
jb
pop
jl
dec
sbb
das
cmp
xchg
dec
sub
mov
aad
and
sahf
cmp
or
cltd
and
push
xchg
scas
mov
adc
add
loop
icebp
cltd
in
lea
shr
icebp
arpl
fidivrl
loop
outsb
mov
sbb
lret
out
push
push
xchg
push
inc
push
insb
xchg
aas
push
xchg
cmpsb
and
mov
mov
mov
jb
shrl
sahf
mov
add
adc
and
rcrb
inc
in
sbb
xorl
sbb
push
jmp
fcomp
in
jae
std
sub
lret
int3
test
sti
or
inc
cmp
dec
push
shll
jne
cltd
dec
repz
fisttpll
fistpll
xor
movsl
jmp
mov
pusha
pop
jno
xor
cmc
ja
cmp
aad
daa
lea
push
or
dec
gs
enter
add
jae
in
insl
dec
xchg
sub
push
pop
jo
fcoms
fisttps
cmp
ja
xor
dec
sub
stos
xor
and
dec
mov
jae
gs
dec
fiadds
jno
push
divb
out
insb
rcll
xor
jecxz
push
xor
dec
fwait
dec
adc
mov
ret
aas
out
outsl
test
push
cltd
push
pop
jge
divb
addr16
rcr
or
jne
iret
push
subb
subl
add
pop
push
mov
pop
aaa
add
dec
or
jge
mov
lret
and
cmpsb
or
xor
pop
push
cmp
xlat
sub
pop
inc
outsl
push
pop
xchg
mov
add
cli
pop
dec
aas
jmp
fisttps
adc
stos
addr16
imul
imul
in
scas
jb
fldl
outsb
xor
test
inc
push
cmp
lahf
or
cmp
popa
int3
rolb
mov
fdivr
cmp
shrb
sahf
jns
lcall
xchg
jg
mov
shlb
xchg
add
lock
js
mov
cmp
push
xchg
sbb
mov
mov
ss
mov
xor
jbe
or
xlat
adc
sub
and
sub
lds
sarb
aaa
push
jecxz
scas
sub
out
lcall
sub
push
jle
stos
pop
push
repz
ficomps
push
jb
lahf
insl
fsub
lahf
dec
subb
pushl
mov
nop
or
mov
sub
jae
popa
mov
or
push
lods
mov
pop
repnz
or
xlat
add
mov
aaa
cltd
fildll
xor
xchg
dec
dec
cmp
stos
pop
sub
mov
test
push
dec
pop
sub
iret
imul
push
jo
push
sbb
les
cmove
mov
out
loop
gs
lds
add
cs
jne
sbb
out
outsb
sub
loopne
pop
ds
xchg
fcompl
in
imul
mov
xor
stc
pop
mov
mov
mov
inc
in
push
mov
push
mov
sub
mov
jmp
ja
into
out
mov
sub
dec
xor
jae
cli
adc
sbbl
push
sti
add
xor
mov
xchg
push
outsl
jne
jnp
popa
lock
cld
mov
test
pop
in
sbb
dec
xor
outsb
loopne
mov
cwtl
hlt
popf
adc
sub
sub
rolb
cmp
in
mov
lahf
insb
cmp
adc
popf
mov
dec
mov
sub
aas
and
mov
mov
pop
mov
mov
push
mov
rcrb
loopne
and
in
ror
in
xor
sar
in
in
lea
test
cwtl
out
in
mov
mov
mov
or
jecxz
enter
mov
into
subl
mov
dec
lret
jns
xchg
mov
in
adc
sub
cwtl
cltd
lret
jge
das
dec
loope
mov
mov
fstpl
sahf
clc
fwait
jl
mov
les
or
xchg
push
cmp
mov
mov
cs
fwait
inc
sbb
inc
cmp
subb
mov
or
in
out
stos
xchg
ret
push
mov
cmp
aaa
push
dec
push
xchg
sub
fsts
out
pop
jmp
lods
ror
sub
adc
jl
rorb
fstps
add
inc
xor
lock
fidivrl
cmpsb
pop
cmpl
icebp
pop
pop
call
push
push
jae
adc
and
pop
or
aas
call
outsl
xchg
ljmp
cltd
mov
fbld
popf
aam
repz
dec
jns
popa
jp
push
jge
movsb
xor
fldt
mov
add
lods
xchg
jp
sub
cmc
iret
pop
xchg
mov
xor
adc
mov
aaa
repnz
lret
xchg
or
sub
cwtl
add
ret
nop
clc
lahf
sbbb
add
inc
mov
xlat
cmp
rcrb
stos
test
leave
jbe
clc
sub
fstl
scas
cmp
fsubrp
jecxz
leave
stos
into
mov
dec
add
nop
push
dec
jae
cmp
mov
xor
stos
mov
sbb
and
adc
pop
add
jns
mov
or
div
bound
sbb
adc
xchg
mov
add
inc
loope
out
je
pop
pop
or
pop
rcrl
and
dec
loop
mov
addr16
mov
mov
adcl
out
les
lods
push
mov
js
cltd
ljmp
mov
mov
xor
int
mov
fstpt
daa
mov
pop
mov
mov
pop
lds
jle
push
das
mov
ficomps
sub
xlat
xor
push
dec
cltd
mov
add
pop
fisttps
add
jbe
or
xlat
xor
push
js
inc
loopne
mov
ficompl
out
jns
sub
sbb
push
imul
add
repz
push
jmp
pop
or
clc
outsl
notl
bound
sbb
cltd
loop
arpl
or
ss
jp
jno
push
lea
and
pusha
jo
cmp
fld
into
das
ret
test
pop
jg
insb
jno
or
xchg
notb
dec
push
lret
in
out
mov
jne
jge
pusha
adc
add
aaa
push
dec
push
push
inc
movsb
add
mov
and
xchg
pop
stos
or
fidivl
push
and
mov
sub
daa
out
shll
jbe
xchg
and
pushf
aad
in
rclb
push
mov
sahf
adc
xlat
movsl
rcll
xor
add
fnstsw
ret
sbb
add
bound
xor
repz
push
sub
xor
jbe
push
fs
ret
add
cmp
es
xor
and
inc
cmp
pop
lret
lock
clc
hlt
add
xchg
xor
repz
lea
fidivrs
add
xlat
aad
push
dec
popa
adc
test
sbb
push
jg
jecxz
mov
fcompp
push
adc
dec
mov
inc
add
sbb
ficomps
and
cltd
pop
shl
loopne
jge
mov
sub
sbb
stos
out
imul
or
testb
out
xchg
aam
fcmovb
in
stc
xor
mov
lock
xor
inc
fidivrs
leave
pop
or
mov
xor
jnp
pop
add
xor
iret
mov
or
jne
inc
test
sub
jbe
movsl
ret
xchg
fxch
nop
lret
pusha
pushl
into
into
push
repz
mov
xchg
sbb
rcl
stc
jmp
jmp
repnz
pushf
out
mov
jns
dec
lahf
sbb
cmp
mov
fsubs
xchg
jnp
out
cmp
mov
mov
sub
mov
ret
adc
jle
cmp
xchg
fs
cmpsb
in
sbb
imul
sbb
add
xlat
pushf
mov
mov
xor
mov
pop
inc
mov
sbb
adc
sbb
imul
hlt
repz
lahf
lods
iret
pusha
cmpsl
push
and
lock
sbb
mov
mov
test
mov
push
mov
or
mov
or
dec
pusha
enter
daa
mov
pop
sub
lcall
test
add
arpl
shlb
jbe
inc
cmpsb
in
inc
pop
iret
pop
lahf
xor
cwtl
fnstcw
popa
jno
mov
pop
sub
ja
adc
or
jnp
add
or
dec
ud2
insb
out
push
adc
ds
nop
ja
mov
push
popa
xchg
testl
cltd
sub
sahf
sbb
das
ficompl
stos
mov
pop
mov
adc
rcll
test
aam
js
popf
sbb
jo
mov
cmp
mov
enter
pusha
mov
sub
repnz
pop
clc
test
cs
aad
cmp
js
jae
fwait
sub
lahf
arpl
outsb
xlat
movsl
sbb
cs
test
rcl
vmovntpd
hlt
jbe
lock
mov
shrl
add
pop
xchg
sarb
sbb
inc
addr16
xchg
cmp
shll
lahf
call
add
adc
fmull
push
dec
dec
sbb
sbb
fwait
xor
lahf
imul
adc
pop
xlat
lret
pop
xlat
cld
sbb
mov
pop
sbb
dec
pop
push
clc
or
ss
jp
sub
outsl
pop
inc
inc
or
in
fldl
adc
les
or
pusha
mov
insl
sbb
jnp
mov
insl
ss
sub
pop
push
das
jg
jno
adc
cltd
push
cmp
cmp
int
mov
xchg
push
sahf
cli
sub
pop
popa
add
lods
and
lods
sbb
outsl
cmp
push
cmp
popf
jnp
lds
popf
dec
inc
test
push
pop
dec
into
fwait
rorl
sub
mov
ljmp
aaa
mov
xchg
dec
orb
adc
xchg
iret
push
pop
push
lds
inc
les
adc
rcl
loop
pop
add
mov
outsb
stos
pop
test
xchg
mov
imul
cli
jns
mov
daa
pop
sti
sbb
and
adc
lahf
mov
xchg
cmp
pop
mov
cmp
xchg
pusha
xchg
fldt
mov
shlb
and
dec
pushf
adc
xor
mov
jp
fsubrl
mov
jae
xchg
mov
mov
cs
lret
xor
imul
pop
repz
enter
arpl
jge
xor
jne
sarb
nop
sbb
xorb
das
jbe
sbbl
jp
ja
jecxz
dec
pop
mov
mov
push
mov
cmpsb
push
pop
inc
insl
dec
xchg
in
adc
dec
pop
push
jns
xchg
int3
mov
push
jno
jo
insb
adc
clc
mov
xor
orb
and
pop
adcb
xchg
sbbl
ror
jmp
pop
lret
adc
jno
sbb
adc
stc
jbe
inc
xchg
cltd
adc
dec
dec
ja
add
dec
lock
dec
test
std
stos
test
push
ret
pop
or
mov
sub
and
int
shll
push
mov
add
push
out
imul
pop
inc
xchg
and
scas
push
mov
ror
adc
data16
mov
int
mov
sub
push
movsb
mov
xchg
or
sub
xor
loop
lds
fwait
loope
call
ret
mov
pushf
add
xchg
xor
jl
sbb
fcompl
pop
sub
pop
lcall
push
popf
xor
test
clc
das
jmp
or
cwtl
cmp
ds
out
cmpsb
leave
fs
pop
lret
push
xchg
test
es
iretw
mov
or
test
sbb
daa
jecxz
mov
inc
mov
xchg
push
jecxz
add
jge
lahf
mov
mov
pop
sub
dec
popa
pop
push
das
adc
out
add
xor
pop
dec
je
pop
out
or
frstor
je
popa
add
adc
stos
and
out
xor
sbb
and
push
clc
push
cmp
fimuls
pop
xor
jne
cmp
push
fwait
jmp
sub
cmp
sbb
mov
add
jg
sub
test
imul
mov
inc
ret
or
sub
pop
ljmp
and
sub
push
std
adc
lcall
lahf
es
mov
sbb
mov
ja
lret
cmp
mov
loop
jae
lret
add
jb
mov
pop
pop
inc
xor
sub
bound
jns
push
inc
mov
mov
mov
cmpl
adc
loop
fnsave
jle
rclb
push
sarb
push
mov
ds
movsb
xchg
sub
mov
out
outsb
cmp
dec
aas
loope
and
dec
mov
leave
or
icebp
xchg
dec
add
outsl
mov
cwtl
lahf
pop
enter
pop
mov
movntq
out
lahf
test
add
inc
scas
push
mov
js
push
add
ss
add
xor
lahf
cmpsb
and
divb
shlb
pop
loope
mov
pop
sub
push
and
je
ss
sub
sarb
push
stos
into
dec
ja
loop
and
movsl
mov
dec
fs
sbbl
scas
inc
push
push
push
sub
pop
das
stos
clc
mov
movsl
sub
pop
cltd
les
cs
xor
mov
outsl
pop
mov
mov
sub
sti
push
sbb
js
push
jp
lret
aas
lahf
sub
dec
xchg
mov
mulb
arpl
clc
inc
jo
xchg
mov
int3
iret
xlat
mov
mov
push
mov
lret
sub
repz
lahf
shrl
stos
fwait
sbb
inc
dec
mov
adc
gs
adc
mov
clc
popa
sbb
movsl
jo
push
pop
add
jl
xor
imul
mov
xor
or
aaa
and
arpl
cmp
push
jne
int3
arpl
mov
push
mov
xorb
dec
cld
in
dec
jle
mov
mov
mov
or
sti
test
push
jbe
adc
pop
bound
dec
sbb
lods
push
aas
cmc
xlat
ja
mov
addr16
sbb
push
sarb
nop
pushf
mov
sbb
or
repnz
nop
repz
pop
mov
sti
outsl
icebp
xlat
pop
mov
sarl
stos
sbb
push
cld
andb
xchg
insl
mov
fst
data16
sbb
push
xor
mov
sub
pop
push
gs
jl
cmp
push
addr16
adc
jns
shll
sbb
gs
mov
mov
or
or
cli
fsubs
imul
pop
in
and
jno
and
ds
stos
jle
pusha
or
outsl
and
or
pop
mov
in
imul
pop
faddp
sbb
lcall
dec
imul
mov
xchg
clc
adc
pop
in
mov
cmpsb
into
jno
rcr
inc
int3
pushf
dec
push
cli
jmp
out
fists
dec
aad
andl
mov
mov
and
scas
cmpsb
bound
add
jge
adc
pop
je
fisubs
mov
dec
sub
jbe
xlat
popf
int
ds
in
mov
fistpl
pop
jecxz
mov
add
cld
das
push
fiaddl
stos
ss
je
arpl
pop
js
push
or
adc
dec
xchg
adc
push
pushf
pusha
inc
inc
jg
jecxz
push
popa
adc
and
jnp
add
sbb
fists
sub
dec
icebp
adc
pop
jp
in
testl
xchg
mov
cmp
mov
inc
xchg
imul
fwait
xchg
scas
push
sbb
lock
mov
mov
add
leave
loopne
pop
leave
movsb
stos
lret
pusha
sbb
jno
xor
and
mov
popf
test
mov
icebp
push
adc
adc
inc
adc
fsubrl
xchg
cmp
cmp
in
jecxz
pop
xor
cwtl
inc
fs
xchg
xchg
addps
cmp
movsl
mov
sub
rcr
sbb
mov
sbb
fisubs
stos
in
adc
cmpsb
mov
fstpl
xchg
cltd
push
xor
push
mov
or
xchg
icebp
insl
loop
xor
and
test
and
out
lock
dec
jno
rorl
xor
jae
jne
and
fldenv
jns
shrb
inc
js
mov
lds
sub
test
rclb
call
cmp
test
iret
call
dec
nop
in
fs
or
into
imul
adc
in
jecxz
pop
mov
push
sub
sbb
xchg
or
inc
test
pop
adc
mov
sub
out
and
cmpsl
stos
mov
add
dec
fsubr
push
push
sbbl
pop
fildll
jl
add
mov
fbld
js
ret
popf
inc
ljmp
gs
sub
sbb
stc
leave
shr
pop
mov
orb
shlb
jmp
lahf
jmp
mov
cmp
or
orl
push
sub
dec
fstpt
pop
sarl
jns
and
push
sbb
xor
sub
outsb
push
adc
pop
pop
mov
enter
sub
xor
js
xor
dec
fnstcw
mov
jo
ds
cli
bndldx
mov
push
mov
sbb
test
or
xor
dec
mov
sti
or
and
lock
sub
lds
pop
or
repnz
cmc
jmp
mov
ret
mov
sbb
int
dec
cwtl
addr16
push
lea
or
pop
sub
int
jae
in
repnz
adc
rcl
test
js
xlat
sbbb
or
xorl
adc
or
add
dec
jp
out
or
cwtl
jne
cmp
mov
xchg
lret
or
mov
pushf
out
xchg
mov
lret
nop
rcll
push
xchg
jecxz
roll
imul
mov
addr16
adc
inc
mov
in
stos
cwtl
dec
sbb
mov
or
mov
sbb
mov
pop
adc
sbbb
imulb
xchg
add
push
aad
sbb
sbb
add
pop
cmp
aad
mov
jg
adc
or
dec
jns
cmp
int3
jg
cwtl
ficomps
arpl
adc
addl
push
mov
xchg
je
push
aas
fldenvs
adc
stos
jge
cld
pop
outsl
adc
mov
js
addr16
sbb
xlat
jnp
sub
jle
imul
inc
add
push
jne
nop
mov
push
lahf
ss
inc
addl
jne
sbb
stos
jbe
std
pop
mov
add
adc
xor
inc
iret
cmpl
push
and
or
pop
sarb
push
xorb
and
ret
pusha
xchg
sbb
xchg
es
ror
repz
mov
dec
int
not
hlt
xor
insl
jg
dec
lods
add
in
jg
dec
lods
cmp
xchg
or
sub
lret
lret
test
inc
cld
or
aaa
mov
das
movsl
adc
rcrl
cmc
mov
pop
mov
mov
xchg
cld
aas
xchg
inc
add
mov
mov
pop
movsb
xor
jl
mov
sahf
cmpsl
mov
cwtl
nop
mov
outsl
and
mov
adc
push
or
movsl
mov
push
scas
sub
imul
add
testb
xchg
daa
out
xor
loope
mov
scas
pop
push
xchg
xchg
arpl
dec
push
jg
sub
mov
mov
jmp
pusha
add
xor
mov
cmp
imul
xchg
or
lahf
sub
rcll
icebp
bound
rcl
pop
in
mov
scas
add
xor
pop
mov
mov
aam
sbb
add
push
rcl
dec
fisttps
and
inc
std
or
sarb
sbb
push
cmp
sbbb
outsl
adc
mov
xor
jae
lock
jg
or
cs
or
jo
inc
ss
vpunpckldq
mulb
xor
aad
xlat
lea
std
bound
lcall
mov
lds
xchg
mov
inc
rclb
mov
cmp
cmp
mov
mov
loop
sub
int3
stc
js
inc
sbb
pop
bound
ss
adc
and
push
jp
js
rcll
mov
aad
xlat
pop
idivl
sbb
dec
jp
jae
push
dec
popa
cltd
movsb
je
sub
aas
inc
push
out
xor
pop
push
xor
sbb
xorl
jge
inc
dec
mov
into
mov
and
sub
dec
push
ficoml
loope
jle
test
mov
push
pushf
sbb
test
out
aad
jnp
sbb
jns
lods
jae
divb
or
ljmp
xchg
out
insb
enter
loopne
cltd
imul
out
dec
dec
gs
not
or
imul
push
ret
push
and
out
or
shll
sbb
xor
adc
and
pop
mov
adc
cmpl
add
popf
xor
sub
pusha
pop
mov
cmp
dec
xor
dec
cmp
or
xor
dec
ss
or
mov
jno
adc
test
pop
pop
gs
test
popf
in
xlat
rorl
fwait
jno
sbb
jp
xor
mov
faddp
subl
dec
cmp
mov
xchg
das
cmp
fiadds
sub
pop
mov
or
sti
cltd
fldenv
test
icebp
lahf
fs
xor
jne
clc
arpl
fs
dec
inc
neg
sbb
jae
scas
scas
test
out
icebp
or
pop
mov
shrl
mov
pushf
inc
data16
shll
sbb
mov
push
fcmovbe
sub
mov
or
dec
push
xorl
aam
push
frstor
add
mov
jbe
pop
inc
or
outsb
xchg
insb
sti
inc
mov
jge
fsubr
stc
jecxz
jnp
xchg
nop
mov
and
xor
fdivrl
mov
sbb
ret
sub
pop
xchg
es
jge
sub
stc
cltd
or
mov
fcoml
and
jo
xchg
lret
shll
ds
mov
das
pop
xlat
fdivs
int3
xchg
mov
lds
add
mov
testb
aad
in
and
fsubs
cmpsl
xlat
lahf
scas
insl
sbb
mov
daa
lret
jle
push
xor
das
cmp
sbb
pop
stos
add
lahf
das
test
jns
imul
jno
arpl
out
cmp
in
outsl
test
jnp
cs
mov
mov
jg
push
mov
adc
pop
movsl
mov
enter
xor
pop
cmpsl
push
mov
and
xor
push
scas
idivb
pop
popa
arpl
loope
sub
jg
xchg
pop
sub
lcall
xchg
push
mov
push
es
adc
fbld
add
dec
mov
fistpl
std
imul
in
popa
adcl
push
aad
sbb
cs
add
or
bound
fnsave
adc
repz
ja
push
push
add
popa
dec
sbb
mov
and
enter
int3
cmp
cwtl
dec
pop
movsl
outsb
popf
out
adc
fstpt
cmp
iret
lods
out
lds
jne
add
mov
sub
adc
rorl
divb
mov
orb
cmc
add
pop
xor
xor
push
sub
pop
jp
or
outsb
jle
fcomi
aaa
jmp
outsb
cwtl
stos
loop
jge
lods
insl
gs
xor
sbb
ja
inc
cmp
faddl
sbb
push
inc
xchg
xchg
mov
or
fsubl
fistpl
xor
jg
or
push
fld1
das
je
cld
scas
push
inc
stos
xor
mov
adc
mov
sub
push
add
mov
jmp
adc
lret
sub
push
stc
adc
outsb
gs
and
or
int
mov
sti
sbb
mov
je
jne
cwtl
imul
adc
add
push
mov
xchg
or
dec
mov
pop
dec
lcall
mov
stos
movsl
xchg
jp
movsb
jne
mov
push
pushfw
push
inc
sbb
dec
roll
int3
xor
pusha
lock
in
mov
pop
cmpl
sub
xchg
cltd
sub
cmpsl
imul
mov
ja
pop
fdivrl
das
jecxz
jle
in
mov
pop
jo
ror
shrl
inc
icebp
sub
add
push
es
push
jge
inc
arpl
pop
pop
sar
pop
pop
les
jge
jo
xlat
movsb
xchg
movsb
cmp
or
nop
popf
filds
jbe
sub
into
int3
fwait
dec
push
sarl
or
js
ss
in
ljmp
mov
rcrb
inc
sbb
aad
mov
outsb
xor
inc
lcall
push
sarb
mov
fs
adc
mov
inc
andl
adc
mov
fsubrs
test
insl
sub
sub
mov
fstpl
xchg
adc
xchg
mov
mov
sub
mov
icebp
adc
add
orl
push
jge
mov
imul
and
js
loop
loope
jmp
pop
subb
inc
pop
das
inc
aas
xchg
cli
aas
ret
xor
sbb
iret
pop
fistps
aaa
lret
and
and
inc
xorl
mov
imul
push
xor
mov
cltd
fdivr
fs
aas
or
lcall
pop
aad
arpl
cli
lods
int3
repz
push
push
sahf
aam
inc
fisubrs
jmp
or
stos
xchg
repz
mov
test
stos
es
ss
lods
data16
in
ja
imulb
test
fidivrl
mov
aam
push
push
mov
push
stc
adc
ljmp
fadds
lret
or
clc
sub
pop
mov
xor
and
roll
loop
insb
fsubs
add
jnp
dec
lahf
push
test
andl
pushf
lea
aad
shll
test
pop
pop
push
and
loop
push
bsf
mov
add
movsl
imul
push
jg
push
dec
xor
out
fnstcw
out
popf
aaa
mov
outsl
mov
lahf
aas
cmp
and
mov
jmp
shrl
aas
xchg
out
mov
nop
push
xor
adc
sbb
das
bnd
push
pop
adc
sbb
or
das
lcall
add
mov
in
lods
sarl
pop
sahf
in
mov
and
setns
cmp
mov
int3
mov
aas
push
push
mov
sub
sub
repz
cwtl
loope
dec
cmp
mov
or
out
das
or
das
addl
mov
pop
pop
sub
je
adc
js
movb
xlat
flds
ja
cmpsb
aad
dec
in
cli
xor
sahf
enter
rcll
subps
out
add
jnp
call
imul
ret
mov
ja
pushf
mov
and
sub
xchg
sbb
scas
leave
loopne
lret
insl
stos
lahf
scas
outsb
dec
jmp
adc
leave
jo
pop
push
jno
and
cli
scas
scas
pop
mov
push
jns
cmpsb
sbbl
push
orl
mov
aam
mov
add
cmp
rolb
roll
out
idiv
adc
xchg
mov
dec
js
cwtl
push
test
out
stc
fwait
or
push
out
loop
and
sahf
xchg
dec
push
add
call
subl
xor
ss
mov
cmp
add
xchg
cwtl
or
pop
xchg
cs
add
sbb
push
push
test
pop
pop
shl
dec
cmp
cli
adc
sar
adc
fisttpl
fs
sbb
in
pop
sti
fisubrl
pushf
xor
jo
jmp
pusha
adc
xchg
lcall
outsl
pop
dec
adc
les
into
aas
addb
xlat
adc
movsl
movsl
cmc
scas
fisttpl
stos
jne
outsl
rcl
sub
mov
inc
jg
out
stos
dec
cltd
fistps
cltd
test
dec
gs
adc
jmp
add
test
mov
addr16
addb
mov
push
push
cmp
pop
xor
es
adc
dec
add
popf
dec
jb
mov
jl
cs
mov
xor
lcall
test
mov
xchg
insb
dec
rcl
add
adc
push
sub
ljmp
sbb
cmp
sbb
or
inc
or
aas
push
popf
or
pop
andl
push
mov
xchg
rcr
mov
push
inc
cwtl
adc
sbb
lock
push
aaa
fisttpll
sbb
bound
addr16
rcl
lock
xchg
mov
mov
ret
add
je
mov
fnstenv
pop
mov
pop
arpl
mov
inc
cmp
cmp
pop
cmp
fidivs
mov
jne
cs
mov
mov
dec
lahf
bound
jge
add
adc
lock
popa
fbstp
adc
add
inc
das
lds
push
into
adc
lods
add
adc
dec
or
subb
mov
and
mov
popa
lahf
push
stc
inc
or
hlt
jne
jae
sub
xor
and
pop
scas
adc
lret
or
add
jg
xchg
jne
jmp
or
loopne
test
jnp
mov
xor
aad
jb
fdivl
pusha
fwait
mov
or
sub
scas
roll
stos
push
adc
mov
aas
andb
xchg
int
dec
mov
dec
jne
outsl
lods
das
sub
mov
dec
mov
mov
imul
ret
movsl
ss
mov
lcall
push
das
mov
inc
ret
jne
pop
jg
clc
pop
das
push
cltd
sbb
mov
ds
subl
pop
out
hlt
mov
push
adc
mov
pop
cmp
sub
fsubs
adc
mov
adc
aas
jp
rcll
cmc
push
inc
push
lds
adc
insw
push
pusha
fs
stc
inc
js
xor
dec
loope
pop
in
imul
lods
push
and
pop
mov
pop
pop
test
push
or
pop
push
xchg
xor
inc
mov
punpckldq
xchg
popl
sub
add
popf
xor
aas
loop
xor
push
xor
fcompl
test
or
test
stos
lret
cmp
and
jno
xorb
mov
ficomps
bound
cmpsl
mov
xor
add
xor
xor
divb
js
ret
pop
aad
cmp
or
mov
jne
imul
adc
ds
dec
mov
clc
nop
add
cwtl
xchg
xor
push
push
push
fimull
or
add
std
dec
js
je
mov
out
pextrw
stos
xor
into
inc
mov
xchg
push
or
sbb
out
outsb
sub
xchg
sub
add
les
push
into
xorl
cmp
dec
shlb
pop
nop
cmp
stc
xchg
and
push
push
or
roll
sub
mov
rorb
mov
std
dec
add
push
sbb
xor
lahf
xchg
and
inc
cwtl
int
mov
and
sub
cmp
sub
cmpsl
push
push
in
and
sti
cmp
outsl
push
inc
xor
pushf
test
cmpsb
loop
mov
pusha
sbb
xor
jb
adc
xchg
fisubrs
repz
clc
sub
add
sub
imulb
mov
scas
or
je
arpl
scas
test
xor
pop
shl
lahf
pop
roll
or
inc
lods
or
push
add
ds
dec
cltd
and
aaa
adc
push
inc
jno
cmp
es
xor
cmp
repnz
ss
jae
sbb
lock
push
sub
mov
xchg
mov
or
mov
popf
and
mov
lret
popa
or
scas
andl
adc
push
daa
mov
outsb
pop
pop
pop
pop
dec
insb
jns
and
push
cltd
ja
jle
jbe
push
testl
mov
push
mov
pop
ja
jo
mov
xchg
sarb
inc
shll
ja
cmp
jg
xchg
ret
mov
mov
int
out
mov
popf
adc
adc
mov
sub
fdivrs
xchg
mov
mov
sbb
in
filds
xor
xlat
adc
sahf
ds
jno
mov
iret
popf
sub
xchg
dec
test
cmp
in
pushf
les
fwait
imul
lock
mov
pop
jecxz
test
lods
stos
xor
adc
mov
sahf
sub
call
out
sahf
inc
push
lods
lret
cpuid
or
pop
sbb
fidivl
push
cmpsl
adc
sbb
adc
sbb
rol
inc
stos
sbb
mov
pop
gs
and
aas
sti
jl
mov
xchg
xor
xlat
dec
sbb
lcall
mov
and
jl
add
pmulhw
push
inc
in
push
lock
sbb
cwtl
imul
push
outsl
add
mov
push
push
jo
mov
xor
add
adc
divl
jne
pop
inc
xor
add
imulb
dec
in
xchg
lret
mov
or
add
mov
mov
sbb
leave
inc
jnp
sbb
dec
out
or
mov
loopne
dec
leave
jno
punpckldq
das
add
adc
ja
jp
aas
outsb
addr16
out
inc
aad
add
lret
arpl
cmc
pop
sub
test
cs
sbb
push
and
popl
loopne
pop
xor
pushf
jae
pop
dec
bound
xchg
enter
cmp
fisubrs
jg
loopne
pop
test
lock
cs
nop
lock
jo
jnp
inc
nop
adc
dec
push
int
mov
jns
sub
hlt
xor
xchg
add
ds
addr16
pusha
mov
lret
xor
push
lcall
push
inc
jae
outsb
add
inc
xchg
jp
jge
sbb
mov
loopne
pushf
andb
add
sbb
jnp
adcb
dec
cltd
lcall
xchg
cmp
adc
bound
inc
xor
mov
pusha
pop
add
xor
sbb
mov
mov
and
push
mov
jb
cmp
jg
push
or
inc
xor
negl
popf
in
out
int
xor
shlb
in
js
cmc
inc
jmp
enter
mov
sbb
jp
scas
xor
mov
mov
mov
orb
inc
in
mov
lahf
pop
or
push
cs
inc
insb
cmp
mov
sbb
xor
inc
jp
jnp
outsl
sbb
xor
lcall
test
sub
add
xor
sbb
aas
mov
jno
call
and
pusha
mov
xchg
ds
push
lock
and
xchg
mov
pusha
das
sbb
cmpl
jl
iret
add
add
ljmp
outsb
ret
jl
sarl
mov
mov
cmpsb
pop
mov
jle
aas
or
stos
cmpsl
out
mov
imul
cmpsl
and
out
mov
xor
repnz
adc
and
jecxz
mov
scas
cli
cmp
ljmp
mov
das
push
push
pop
mov
dec
movsl
icebp
mov
dec
cwtl
popa
pop
push
cli
out
pop
xor
lods
adc
sbb
cmp
aaa
mov
xchg
xor
cmpsb
scas
adc
mov
or
test
xchg
mov
cmpsb
stos
and
das
push
daa
mov
sbb
adc
inc
pop
push
lcall
dec
sbb
jg
mov
movsl
pop
jp
pop
or
jmp
ds
test
repz
pusha
sub
arpl
cmpsb
rcr
cmp
test
movsl
pop
xchg
sbb
jg
mov
in
pushf
dec
gs
fldl
inc
inc
sub
rorl
push
iret
sub
leave
mov
fstpt
push
pop
add
push
out
pop
dec
jnp
add
mov
jne
jae
std
scas
dec
mov
jno
imul
inc
movl
pop
shll
push
sti
sub
mov
rolb
int3
bound
pop
shlb
sti
push
popf
mov
sbb
add
lret
xlat
inc
or
xchg
shr
cmp
mov
rcl
inc
mov
cmp
lcall
or
mov
lret
inc
test
mov
cmpsl
mov
mov
mov
insl
insb
notl
push
daa
lea
mov
xor
sub
loop
dec
ficoms
dec
aas
stc
mov
lret
push
pop
sub
out
mov
into
in
movsb
das
shrb
fisubl
imul
je
aas
divb
ret
xchg
lds
add
or
shll
movsl
lock
shll
loopne
adc
mov
push
fcoms
sub
bound
mov
jae
loope
sbb
stos
mov
dec
in
xorb
and
sahf
cmpsb
add
mov
or
gs
cmp
mov
jbe
das
mov
or
std
sbb
cmpb
mov
jecxz
push
loopne
cli
lods
fiaddl
or
js
jno
ds
fsubrs
test
arpl
adc
pop
fiadds
fucompp
and
cmpb
pushf
xlat
fmul
sub
ja
dec
mov
je
cmp
cmc
mov
pop
jnp
jg
stc
xor
jns
mov
adc
jmp
mov
fildll
pop
and
in
scas
movsb
sbb
or
sub
push
aaa
xchg
pop
dec
ficomps
jo
mov
dec
dec
inc
jl
pop
inc
iret
loopne
pop
add
sbb
lahf
pop
inc
enter
jp
push
nop
jns
ja
xchg
pop
dec
xlat
cmc
jmp
push
and
pop
mov
pushf
mov
std
clc
divb
ret
fisubrl
sahf
scas
sti
in
test
cmp
or
shlb
loopne
loopne
xchg
fnstcw
adc
fbstp
in
xchg
popa
or
outsb
pop
roll
push
outsb
outsb
sti
js
mov
pop
xchg
mov
pop
call
mov
pop
rorl
sbb
bound
or
and
sbb
add
add
pop
adc
mov
xchg
pushf
dec
mov
pop
cmp
add
xchg
dec
push
aas
push
pop
sub
fs
and
add
sysret
aad
comiss
xor
fstl
testb
mov
push
or
aaa
xchg
ss
pushf
mov
adc
push
orl
dec
mov
jmp
and
add
lds
mov
cmp
cltd
fidivl
sbb
daa
dec
and
int
mov
inc
mov
fs
popf
lret
adc
dec
sub
mov
push
add
lea
inc
fildll
imul
ficoml
out
dec
sub
dec
pop
subl
jg
mov
pop
adc
mov
jb
je
loopne
adc
int3
jae
das
jmp
xchg
push
fwait
xor
jp
data16
pop
mov
mov
daa
out
mov
nop
cmp
fwait
and
aad
jb
in
sbb
std
outsb
je
hlt
cld
arpl
sub
fnstcw
mov
pushl
inc
jl
mov
and
ja
aaa
nop
push
jp
loope
ds
stos
stos
stos
adc
dec
dec
sub
lods
dec
mov
pop
inc
cmp
lock
dec
xor
inc
mov
or
sbb
jae
mov
sub
sbb
mov
sbb
vdivss
das
roll
ja
sbb
test
out
adc
add
punpckhdq
add
inc
je
aad
imul
imull
inc
sub
cmpsl
add
test
adc
adc
into
jg
push
push
mov
xlat
jo
xchg
jl
push
or
imull
inc
enter
cmpsl
cs
ret
fwait
jb
outsb
in
psadbw
mov
cli
addr16
xor
mov
pop
stos
push
xor
sub
mov
inc
cmp
fbstp
fs
jnp
aaa
incb
xor
lahf
xchg
xchg
popf
push
adc
cmp
fldcw
rol
sbb
inc
cmc
push
jne
leave
dec
lock
lahf
push
icebp
mov
pusha
mov
hlt
dec
add
addb
and
add
adc
int3
imul
mov
fs
push
fimuls
nop
adc
mov
xor
xor
test
jno
dec
push
jl
mov
pop
loop
push
and
sub
push
dec
sub
or
or
inc
dec
jbe
xor
mov
push
jb
mov
pop
mov
dec
js
mov
sub
mov
xchg
bound
insb
mov
cmp
and
lds
pop
ret
subb
add
mov
cwtl
sub
adc
mov
xor
or
dec
and
bound
loope
and
arpl
arpl
mov
sahf
add
and
fnstcw
sub
lcall
cli
test
inc
xor
out
setb
mov
sbb
ficomps
jg
mov
das
iret
xor
xchg
shlb
ljmp
rcll
dec
dec
sub
sbbb
je
aam
pop
iret
rcll
xchg
add
or
je
aas
cld
mov
f2xm1
jge
mov
add
adc
add
dec
pop
outsb
jmp
lods
sub
mov
fdivrl
adc
fldl
das
dec
adc
out
dec
cwtl
cltd
inc
dec
push
xchg
outsb
and
xchg
xor
xchg
jb
insb
lods
jae
and
lods
outsb
repnz
fildl
daa
icebp
inc
xchg
cmpsb
in
xlat
sbb
das
movsb
rol
stos
scas
imul
mov
inc
mov
lods
adc
add
ja
ja
std
rcll
and
push
insl
mov
int3
loopne
pop
fcmovb
call
or
and
mov
aaa
insl
mov
bnd
movsb
sar
jge
xor
push
xor
lcall
xchg
push
or
xor
add
aaa
outsl
call
xchg
inc
frstor
pop
mov
idiv
sarl
pushf
jo
xor
rorl
pop
pusha
fnstenv
pop
jle
add
std
and
aaa
add
push
lds
push
adc
pop
push
xorl
jae
pop
inc
mov
das
es
fdivrs
and
aas
xchg
and
lret
aam
adc
shll
outsl
xchg
mov
jns
shll
call
push
adcb
rcll
into
mov
rcrl
cmpsb
shlb
sarb
sbb
inc
or
lods
push
sbb
cmp
cmp
lods
pop
pop
lret
stc
ret
es
push
vmovhps
andb
in
data16
and
or
cs
inc
mov
and
rorb
loope
ficoml
mov
lds
addr16
lret
popa
lcall
adc
arpl
shll
arpl
je
dec
push
cmp
add
adc
xor
cld
mov
inc
sbb
xchg
mov
andl
add
mov
fs
and
and
xchg
adc
and
outsb
add
pusha
dec
enter
or
cs
shll
fdivl
mov
inc
aas
or
mov
mov
xchg
cmc
dec
push
sbb
outsb
cs
push
out
xlat
mov
cmc
inc
repz
or
stos
xor
data16
mov
pop
lret
lds
js
cmp
push
sbb
pop
adc
fists
adc
cmpsb
mov
push
pop
repz
sbb
sub
arpl
cmp
jle
sbb
test
addr16
sbb
gs
sarb
inc
mov
adc
nop
imul
mov
or
jg
js
shrl
sub
into
sbb
icebp
jp
in
cmp
mov
xor
ds
in
jo
stos
repnz
repnz
ret
mov
into
push
popa
push
rcrb
xchg
or
push
push
jbe
adc
js
xchg
adc
movl
cli
ds
or
pushf
jne
and
insl
pop
mov
xor
cli
or
xchg
cwtl
mov
sbb
jns
cmp
push
jle
xor
jge
ljmp
xor
mov
mov
sahf
out
mov
pop
mov
push
mov
and
xlat
mov
or
add
sub
ret
dec
inc
pop
pop
push
popa
cltd
pop
pop
push
or
pop
mov
outsl
aaa
loope
xchg
fldpi
jl
lods
mov
lahf
lahf
addr16
fld
aad
out
push
xchg
fwait
jno
cmp
fcomps
dec
cwtl
out
dec
pop
stos
pop
push
out
sub
insb
ret
fdivrp
push
aas
mov
pop
aaa
lea
leave
jge
hlt
ror
clc
sbb
bound
or
add
shll
leave
jns
inc
lock
insb
jb,pn
add
cmp
cmp
rcl
push
fisubl
inc
out
rcl
lcall
dec
lcall
push
in
pushl
dec
push
inc
xor
xchg
dec
dec
mov
push
sbb
adc
xchg
jp
nop
cmpsl
gs
fidivl
push
push
mov
sub
sbb
adc
aam
mov
jecxz
add
cmp
dec
xor
jb
fwait
pop
es
mov
sub
cmp
jae
xlat
lcall
test
insw
xor
push
inc
pop
and
xor
jl
inc
push
pop
stc
mov
xchg
push
mov
xorb
test
cmp
scas
xchg
inc
push
shrl
pmuludq
and
and
xlat
lret
push
push
cmp
jecxz
popf
js
aam
inc
loop
xlat
sbb
jbe
gs
lahf
seto
loope
sti
pushf
sub
outsl
xor
out
cmc
popa
xor
adc
into
mov
repnz
push
lds
repz
jo
test
out
jle
push
and
add
mov
push
lock
scas
mov
lcall
pop
inc
aaa
cmp
adc
dec
adc
fstpl
mov
or
sbb
pushl
fcomp
push
lret
test
aam
sbb
pop
mov
or
jbe
int3
into
and
mov
mov
dec
repnz
jno
jne
lods
pop
sbb
sub
xchg
sahf
int3
mov
cmc
fwait
or
and
mov
mov
jns
popa
sub
sbb
popf
clc
xchg
out
sub
and
lods
scas
jle
cltd
push
pop
xor
pop
sub
mov
dec
shrb
or
out
sbb
cmc
dec
cmp
mov
rcll
xor
ficomps
inc
add
pusha
sti
xor
inc
das
jbe
add
pop
xchg
mov
test
int3
sub
scas
int
cmp
shrl
xor
test
pop
jno
pop
or
ret
call
in
leave
mov
shll
lea
stos
out
addr16
push
add
xor
jns
in
out
popa
popa
inc
sbb
leave
imul
xchg
cmp
pop
mov
cmp
test
enter
in
inc
dec
mov
loope
outsb
or
inc
push
ror
daa
std
lods
or
pop
sbb
cwtl
cmc
sub
adc
pop
fucom
outsb
push
into
sbb
lcall
sti
je
leave
mov
fwait
jnp
or
adc
pop
lret
out
pushf
ljmp
lcall
sbb
cwtl
lock
icebp
subl
pop
push
xorl
mov
mov
es
mov
fwait
mov
cltd
xor
adc
add
scas
and
addr16
sbb
enter
pop
aad
sbb
ud2
mov
call
dec
outsb
xor
sub
call
insl
sahf
xchg
xchg
sbb
mov
pop
vpsllvw
sbb
roll
jle
sub
cmp
rclb
pushf
ds
dec
mov
pop
fwait
nop
cmp
ficompl
push
outsb
popf
ffreep
ret
pop
in
inc
in
xchg
push
adc
sbb
lcall
das
orb
mull
imul
ja
dec
add
pop
sahf
sub
pop
push
add
scas
loopne
cmpsl
mov
add
sub
or
push
and
inc
add
xor
inc
fdivrl
push
fistpll
add
in
insb
mov
dec
adc
in
enter
add
ja,pn
mov
test
fs
push
xor
test
fimull
ret
aaa
mov
inc
pop
lahf
int3
in
data16
fucom
das
pop
mov
fsts
lods
mov
xor
divl
and
mov
pushf
xchg
pop
fcompl
out
mov
mov
pop
and
push
rcrl
mov
adc
addl
outsb
add
mov
lods
jne
movsl
mov
out
pushf
mov
ficompl
fwait
xor
cmpsb
cmpsb
xorl
imul
ret
outsl
pop
daa
mov
js
repz
xchg
fnstcw
push
mov
sbb
jg
in
out
lret
das
sbbl
add
push
cmp
stc
pop
loopne
pop
push
mov
aas
mov
icebp
xor
mov
into
inc
mov
cmpl
aam
xor
or
aaa
repz
addl
mov
xchg
int3
inc
add
enter
sub
dec
imul
adc
pop
xchg
in
clc
dec
fldenv
or
aad
outsb
aaa
xor
dec
adc
iret
cmp
shrl
popf
xchg
mov
cwtl
xorl
or
dec
sub
push
mov
jp
mov
pushf
loope
pop
mov
scas
adc
mov
pop
push
fsubrs
jle
loope
lcall
imul
cmp
sbb
outsb
cmp
pop
jp
cmpsb
mov
pop
ds
jle
cmp
mov
es
fbstp
adc
adc
test
lods
sbb
clc
inc
adc
iret
mov
jle
xchg
add
sub
mov
es
jecxz
pop
ret
pop
dec
cmp
mov
pop
add
dec
mov
sub
adc
jl
mov
fsubrs
xor
pop
arpl
add
add
pop
jb
sub
call
mov
and
clts
push
mov
cmp
mov
xor
inc
int3
mov
jle
cmc
popa
mov
jb
cmp
popf
mov
movsb
sub
pop
jb
xchg
adc
sahf
add
repz
arpl
push
sub
mov
jnp
jae
mov
mov
sbb
mov
test
fldl
push
adc
xchg
pop
outsl
dec
sar
xchg
or
mov
jns
jle
std
flds
fnsave
and
cmp
test
mov
out
data16
push
cmp
or
rcrl
mov
pop
inc
add
loopne
test
sbb
rcrl
sbb
xor
push
leave
xchg
sub
gs
ret
add
lret
or
insl
inc
and
cli
mov
push
mov
cmp
push
test
inc
cmp
dec
loopne
test
mov
and
mov
add
xchg
cld
scas
es
cmp
pusha
push
adc
mov
xchg
shrb
mov
test
ret
add
test
xor
push
enter
aaa
inc
jae
cltd
imul
lock
pop
pop
cmp
xor
mov
repz
jp
jp
mov
jb
cmp
inc
jnp
push
fwait
lret
pushl
push
add
cmpsl
xchg
aad
cmp
mov
popa
mov
xor
cmpsb
sub
test
in
mov
pop
pop
mov
xor
loop
jns
fistpll
cmp
xchg
jno
mov
out
mov
mov
adc
mov
filds
mov
mov
cmp
inc
cmp
sahf
popa
popa
and
mov
add
dec
adc
adc
mov
pop
xor
loop
lods
bound
push
sbb
lahf
inc
xchg
adc
inc
adcb
stc
rorl
stc
out
sbb
push
dec
dec
push
pusha
adc
mov
pusha
fildll
aad
mov
mov
cmp
sub
rorl
push
data16
sbb
stc
jnp
push
push
popa
push
or
add
mov
pop
and
xchg
or
popa
push
fimuls
and
rol
fstps
sahf
xor
or
loopne
push
xor
stc
inc
add
mov
push
ja
xlat
or
or
or
jl
nop
mov
mov
loope
addb
and
push
mov
pop
xlat
bts
mov
pusha
or
inc
scas
sbb
and
shlb
ret
pop
aam
adcb
scas
mov
popa
loope,pt
aad
scas
jg
ds
icebp
or
xchg
dec
xor
repz
lret
inc
sbb
ret
xchg
cmp
mov
mov
nop
cmp
pop
mov
mov
add
dec
and
mov
pop
push
add
jno
mov
dec
icebp
mov
das
jns
add
push
shrb
jno
loope
lods
cmp
rolb
mov
popf
push
inc
push
xchg
in
mov
and
jg
je
in
cltd
jne
or
je
cmp
cmp
mov
push
mov
inc
and
dec
jp
cli
es
mov
pop
adc
dec
push
adcb
mov
mov
push
jb
mov
adc
call
push
mov
xor
imul
adc
push
xor
or
xchg
or
test
fmul
sbb
outsb
sbb
mov
add
inc
jg
aad
sub
fnstsw
shrb
lret
inc
cmc
outsb
pushf
lods
daa
sbb
shrl
dec
subl
dec
cld
outsl
stos
and
sahf
ja
mov
cli
push
mov
xor
cmc
push
fldl
xchg
xchg
leave
mov
mov
xchg
addl
xor
inc
push
push
mov
movsb
adc
fdivr
cmp
faddl
mov
jae
fwait
sub
inc
cmp
js
rorl
push
xor
cmc
inc
xchg
sbb
pushf
adc
daa
cmp
push
fwait
mov
pop
xchg
imul
lret
pop
and
inc
imul
add
pop
cmpsb
shrl
jge
add
nop
divb
mov
arpl
inc
push
test
pop
adc
into
xor
std
add
cmp
test
in
dec
fwait
pop
repz
icebp
fisubrl
jge
jle
cmp
ss
mov
outsb
xchg
dec
out
das
dec
int
out
cwtl
adc
push
icebp
movsb
into
sub
and
stos
roll
stos
cmp
or
fldl
and
sbb
jg
in
dec
pop
pop
ret
nop
test
jnp
testb
dec
test
cmp
dec
xor
ja
mov
jbe
addl
mov
mov
push
adcb
mov
jge
insb
mov
push
adc
cmp
js
jnp
jae
out
lret
sahf
sbb
fisttps
ret
jecxz
mov
ljmp
cltd
rcll
lret
pop
pusha
cmp
cwtl
lret
out
or
lret
lret
inc
rolb
mov
sbb
add
cmp
push
jmp
push
lods
pop
fcomp
sbb
dec
add
cli
mov
movsl
pop
cmp
fisttps
and
ljmp
nop
jle
ljmp
aas
pop
mov
pop
test
gs
movsb
test
popa
mov
out
scas
icebp
push
int
jno
xchg
sub
iret
stos
or
int3
cmc
ret
fxch
xor
cltd
mov
add
dec
jns
dec
jne
cmpb
insl
cwtl
push
rolb
sbb
dec
fisubs
daa
pop
aad
mov
ret
add
les
sbb
jmp
jo
jmp
ja
fidivs
inc
or
sub
jl
ss
pusha
inc
sub
fbld
iret
push
or
jns
xor
not
jne
jmp
inc
cmpsl
loop
out
inc
fists
inc
inc
jb
sub
adc
dec
and
rcrb
rolb
scas
jbe
rol
cmp
adc
adcl
add
pop
jbe
cli
lock
sbb
cmp
xorl
sbb
sbb
stc
mov
ss
pop
cmp
popa
dec
sahf
addl
addl
sbb
jmp
insl
dec
xor
pushf
push
clc
jne
jns
jne
xlat
hlt
cmp
test
stos
loope
jae
js
call
inc
sbbl
or
push
sub
dec
dec
add
jp
push
sbb
orb
in
fbstp
mov
sbb
sbb
out
cmp
xchg
dec
jae
subb
in
pop
repnz
lcall
pushf
jnp
cwtl
mov
inc
adc
dec
add
cmp
inc
inc
insb
mov
jns
data16
xchg
pop
mov
mov
xor
scas
inc
or
sub
jne
ret
lcall
push
call
inc
loope
loope
cmp
gs
es
inc
sbb
faddl
shrl
push
enter
loop
xlat
je
xchg
sub
sub
fidivrl
addr16
cmp
mov
lds
jp
mov
bound
scas
jae
sahf
pop
inc
and
hlt
pop
cli
mov
ret
lcall
xor
lcall
sub
mov
jno
mov
mov
lock
or
cmpsl
lock
xchg
scas
aas
pushf
cld
cmpsl
ja
call
dec
int
mov
dec
pop
sbb
repz
dec
ljmp
jnp
inc
out
adc
cmp
test
xchg
jecxz
hlt
lods
cmp
shrl
push
adc
mov
imul
jae
dec
jecxz
aas
pop
std
jge
or
xchg
or
mov
sbb
inc
aas
pop
xlat
cmp
inc
add
leave
mov
inc
sub
dec
pushf
lds
inc
cmp
int3
fs
mov
loope
pop
int3
adc
jle
cmp
jle
dec
pop
js
popf
sti
not
xlat
add
pop
or
arpl
stc
cmpsb
mov
xor
bound
iret
adc
fiadds
dec
sub
sub
nop
jle
test
pop
jae
sbb
shll
cmp
sub
popf
scas
sbbb
xor
jae
test
sub
jl
std
pop
xor
ds
pop
mul
fisubs
xchg
push
sti
bnd
dec
in
dec
mov
aad
sahf
sbb
ret
lahf
xor
inc
aam
jo
pushf
push
mov
mov
pushf
add
cmp
ja
sbb
pop
clc
adc
xor
lret
mov
adc
fists
cld
loopnew
mov
or
mov
jp
int
inc
xchg
jp
cmpl
jo
pushf
shl
pusha
sub
push
in
pop
sbb
mov
and
loope
mov
jg
inc
cmpxchg
inc
insb
ret
mov
cmp
mov
je
fistpll
xor
enter
inc
sub
aas
cmp
loope
xor
pop
adc
inc
sahf
inc
in
xchg
jo
inc
sub
popa
insb
cmp
lods
add
imul
add
pop
jp
jae
xchg
call
inc
cs
inc
das
shrb
ds
das
lcall
jae
push
addl
jae
adc
lods
jns
sbb
jmp
sahf
cmp
xor
push
fs
and
and
push
pusha
adc
test
les
out
mov
xor
sbb
jns
lcall
sub
addl
inc
cmpb
sub
in
sub
test
push
ror
xor
cli
hlt
mov
jle
insb
fisttpll
dec
idivl
cmp
les
or
fldl
xor
xor
outsl
jl
sti
jno
adc
xchg
cmp
out
sub
xchg
bound
mov
popf
jge
bound
jge
sbb
xor
ret
xchg
insl
pop
cmp
loopne
outsl
stos
insl
sbb
pop
pusha
imul
push
sub
add
outsb
jg
std
ja
sbb
push
add
jmp
fistps
add
lahf
nop
add
popf
sub
scas
push
cmp
arpl
mov
or
mov
outsb
pop
mov
sub
aam
mov
mov
xchg
lds
je
in
mov
jbe,pn
ret
shlb
cmp
xchg
mov
cmp
pop
jb
push
mov
add
push
cs
mov
mov
dec
lods
mov
push
add
xchg
rol
push
jne
jo
dec
push
mov
jns
inc
xchg
ret
jg
cmp
fstpl
push
into
leave
adc
jns
inc
pop
cmp
xor
outsl
mov
and
xchg
test
or
cmp
add
loope
mov
jo
mov
insb
les
inc
insb
ret
aam
push
lret
cwtl
jb
or
mov
xchg
sbb
push
inc
dec
ret
xor
in
xor
push
ret
rolb
dec
test
je
scas
dec
outsb
ja
leave
push
ja
push
scas
push
sbb
scas
mov
adc
sbb
xchg
rcl
push
jne
jo
push
push
mov
jns
je
ret
fs
aaa
adc
cmp
dec
cltd
sbb
sub
push
mov
xchg
repz
sub
out
cmpsb
mov
fs
insb
sarb
dec
addr16
cmp
mov
icebp
mov
cld
std
outsl
xorb
jecxz
jmp
dec
jp
xchg
cmp
shrb
stos
pop
xor
pop
rcll
push
stos
cmp
aas
outsl
pushl
push
or
jmp
dec
xor
test
push
push
dec
ret
sub
std
cmp
fldcw
adc
xor
sbb
ret
or
add
inc
cmp
daa
sub
lods
mov
push
jns
je
pushf
repz
repz
pusha
inc
outsl
push
pushf
push
lcall
and
add
sub
jge
iret
scas
aas
sarl
ficoml
dec
jns
push
push
int
mov
in
cs
lret
mov
jl
stc
adc
xor
dec
and
popa
push
cmpsb
or
add
dec
cmc
lea
or
or
mov
cmpsb
fsts
ljmp
mov
xlat
addr16
cli
xchg
push
xor
lods
xchg
xor
shrl
int
ret
es
mov
cmc
xchg
pop
xchg
dec
dec
das
cmp
test
sbb
mov
pusha
or
cmp
roll
mov
xorb
sub
xor
and
iret
stos
repz
leave
push
or
push
jb
jmp
rcrb
or
ret
sahf
sbb
push
xor
lea
cmp
out
sub
or
jae
cmp
dec
sub
les
repnz
gs
fisttps
push
adcb
pop
push
outsb
fnsave
outsl
dec
ljmp
jnp
pop
xor
insl
cmp
cmc
jbe
movl
lods
in
cs
loope
test
mov
xor
push
mov
push
stos
add
jmp
mov
lahf
into
adc
dec
sbb
enter
roll
int3
mov
xchg
addr16
lcall
ret
lcall
fsubs
inc
adc
pop
cltd
stos
loop
adc
clc
out
fucomip
out
lahf
dec
adc
push
int
sbb
repz
jbe
pop
pop
mov
xchg
ja
test
in
mov
fwait
dec
xor
add
xor
add
sub
mov
jecxz
xchg
aaa
mov
dec
mov
adc
testl
xor
mov
and
aad
jg
dec
jp
mov
lds
inc
mov
push
call
inc
int3
push
lcall
or
pop
lcall
int3
inc
fsubrl
jg
ja
out
ss
jns
subb
sbbb
sbb
fucomip
xchg
sahf
stc
icebp
xchg
dec
lea
outsl
sub
push
idiv
dec
or
in
fcoml
arpl
scas
negb
or
inc
or
dec
stos
xor
sahf
mov
mov
enter
or
mov
xor
nop
xor
in
out
lahf
shlb
adc
mov
imul
fistps
push
cs
data16
hlt
imul
nop
pop
jecxz
bound
clc
aas
and
and
cmpsl
imul
out
fildll
loopne
inc
fmuls
sub
push
sbb
mov
adc
icebp
popa
xor
int
sarl
fstps
xlat
mov
pop
fistps
push
addl
mov
xorl
rolb
popa
and
mov
sahf
into
adc
jns
inc
cmpb
xor
sahf
fs
pushf
xchg
jnp
pop
jmp
in
mov
jns
push
xchg
or
aad
shlb
leave
dec
fs
lret
sbb
aas
cmp
in
sarl
arpl
xchg
emms
or
or
les
fs
jae
outsl
pop
movsb
ret
xchg
test
in
sub
jle
mov
sbb
jae
mov
inc
test
pop
ret
and
movsb
adc
in
std
cmp
in
push
cmp
out
stos
outsb
inc
mov
adc
cwtl
lcall
aam
push
rorl
dec
aaa
gs
shlb
jne
dec
add
mov
add
imul
xchg
push
xor
mov
fisttps
bnd
or
jno
pop
iret
movsl
jl
mov
in
jg
inc
das
mov
and
push
inc
dec
cmp
sti
add
aam
push
imul
push
mull
push
jnp
aam
rolb
hlt
bound
es
dec
test
dec
inc
pop
and
lcall
mov
push
mov
shrl
jnp
imul
inc
or
sti
or
xchg
or
ret
js
scas
sbb
sbb
jmp
xchg
jecxz
jbe
or
sbb
cmp
jns
pop
lcall
adc
xor
inc
sbb
fcmovnbe
jecxz
sub
ljmp
mov
dec
cwtl
repz
dec
sub
xchg
xchg
aas
cmp
pop
mov
out
adc
pop
mov
mov
inc
cmpsb
nop
dec
in
test
ret
cwtl
sti
pop
dec
cmp
or
ret
or
mov
adc
gs
add
pop
jnp
imul
addr16
fnstsw
pop
inc
jns
sahf
fwait
nop
xchg
das
dec
repnz
adc
shll
aad
pop
push
and
inc
imulb
xor
xor
sbb
mov
mov
push
push
push
in
xchg
dec
inc
sbb
inc
jnp
mov
sbb
xchg
xchg
out
aad
dec
stc
ret
inc
test
cli
mov
fs
sub
in
lock
sub
cwtl
pop
lock
subl
mov
scas
into
bswap
nop
fwait
mov
fstl
fwait
shlb
and
inc
mov
adc
adc
cmp
nop
sub
add
sub
lcall
xlat
push
mov
sbb
mov
in
or
imul
add
loope
xchg
fiaddl
mov
pop
ljmp
lret
adc
sti
pop
jns
fistps
adc
mov
cltd
mov
js
cmp
adc
bound
jae
shl
xor
xchg
push
lret
pop
or
pop
inc
xchg
lods
pop
ds
mov
push
pop
dec
sbb
je
mov
add
out
aam
or
lds
adc
jg
aaa
sub
xor
xor
xchg
push
pop
xchg
inc
int
fisttps
mov
pop
inc
pop
push
cmp
and
fisttpl
mov
aas
stos
ret
sbbb
mov
sti
mov
sahf
push
or
mov
xor
inc
mov
push
jb
adc
bound
jle
imul
add
loope
xchg
fiaddl
rcrl
stos
stos
dec
sub
fistl
dec
mov
push
jns
or
or
sub
je
push
nop
dec
add
dec
fstps
outsl
shll
imul
sbb
adc
mov
xor
dec
out
shll
outsb
and
and
pop
xchg
es
pop
cwtl
sub
push
pushf
sub
push
dec
xorb
dec
xchg
inc
mov
inc
mov
movsb
xor
orl
mov
add
dec
lcall
sbb
lahf
int
or
dec
fwait
aad
dec
imul
sbb
mov
xchg
insb
sti
test
xor
daa
sub
pop
mov
pushf
adc
lcall
push
std
pop
in
pop
sbb
dec
dec
dec
and
out
popf
adc
cwtl
or
dec
sbb
mov
jmp
jns
insb
iret
sarb
sbb
xchg
aaa
ret
inc
or
fldz
pop
pushf
sub
add
xor
jne
jnp
jecxz
push
xor
cmp
fs
pop
xchg
push
jo
fwait
ds
or
mov
divb
ret
pop
mov
in
push
mov
mov
pusha
lahf
std
dec
fcmovbe
hlt
rorl
sbb
and
scas
jnp
out
pop
mov
mov
pop
xchg
or
rclb
fnstsw
adc
rcll
outsl
jae
cmp
push
cmp
ss
mov
sbb
sbb
pop
mov
xorl
hlt
shrl
xchg
lods
pop
xor
movsb
pop
push
adc
loop
fimull
stos
pop
das
stos
sub
repnz
mov
ret
mov
ja
dec
adc
xchg
dec
jg
nop
jg
mov
dec
ficompl
sti
sub
adc
fmuls
xchg
and
nop
cmp
scas
cltd
mov
out
pushf
dec
xchg
jle
ror
jp
movsl
rcll
cld
push
xchg
and
ja
ss
push
nop
mul
add
xchg
push
xchg
mov
and
in
cmpsl
stc
jae
mov
test
hlt
mov
xor
dec
sbb
call
pop
pop
sbb
sub
sub
sbb
and
cmp
addr16
dec
pop
add
sbb
popf
popf
pop
mov
sarb
dec
dec
jmp
cwtl
idivl
push
jp
pop
sub
rolb
inc
xchg
scas
repnz
in
pop
lods
nop
inc
fistpl
sbb
cmp
mov
pop
jl
test
or
stc
adcl
and
jne
push
pop
mov
pop
flds
sub
adc
and
aaa
pushf
mov
jmp
aam
jne
sbb
cwtl
mov
hlt
xchg
sub
push
xchg
sub
mov
sub
outsl
loope
xor
and
call
adc
std
cmp
mov
inc
and
mov
jmp
sbb
imul
sub
hlt
in
pusha
js
xchg
stos
ljmp
gs
inc
sbb
push
and
or
push
stos
negb
sbb
dec
and
test
push
dec
outsl
add
mov
adc
fsubrs
sbb
jl
dec
sub
das
dec
sbb
mov
leave
xor
xchg
jno
sub
lcall
jne
sbb
das
sbb
call
mov
test
movsl
inc
loope
xchg
inc
xchg
nop
pop
psubd
inc
aas
std
inc
ljmp
js
or
sub
push
addr16
insb
lahf
enter
push
or
and
fcomp
pushf
mov
fwait
sbb
test
mov
movsl
xchg
lods
mov
pop
cmp
push
lock
sbb
ljmp
mov
movsl
pop
adc
jecxz
ret
loop
pop
sbb
push
pop
imul
and
nop
stos
and
bound
mov
jns
inc
shll
lock
xchg
push
xor
sbb
xchg
insl
fstps
and
cmp
xor
jb
dec
and
imul
inc
cli
jge
dec
arpl
push
stos
sti
sub
push
lahf
mov
sets
test
in
test
push
mov
test
sbb
and
stc
and
repz
xchg
hlt
jae
std
dec
in
inc
ret
pop
jge
sub
push
cmp
add
int3
mov
jno
or
lcall
lcall
inc
ja
iret
cmp
add
test
push
jg
mov
icebp
je
mull
test
ret
jnp
pushf
pop
rcll
popa
xchg
push
popa
jmp
add
mov
idivl
cmp
sub
inc
add
adc
cmpsb
xchg
test
cmpsl
and
sub
cmpsl
arpl
sti
cmpsl
pop
push
mov
rclb
jecxz
in
stos
push
in
pop
sub
push
cmp
and
pop
jb
dec
cwtl
pop
mov
jns
adc
movsb
xor
shlb
adc
icebp
add
inc
mov
mov
sti
es
xlat
ss
out
or
mov
dec
mov
pop
inc
in
icebp
sub
out
push
lea
out
cmp
sbb
ret
idivl
icebp
cmpsl
repz
fwait
xor
jnp
fisubl
adc
push
call
xor
sub
sub
sbb
fsubrs
mov
fdivrl
mov
out
clc
fistl
cmpb
imul
mov
loop
sbb
mov
add
xor
jae
sbb
sub
sbb
stc
xor
test
add
fsubl
dec
mov
push
test
push
xchg
mov
adc
xchg
jno
jecxz
pop
rcll
mov
jb
test
xor
mov
adcb
jo
sbbb
dec
test
fwait
inc
inc
test
ret
aam
mov
sub
mov
adc
xor
iret
and
mov
dec
or
push
jge
jp
addb
jbe
and
dec
xor
ret
push
sar
push
push
fldt
js
repz
inc
pop
lock
xor
or
stc
dec
inc
pop
repz
pop
mov
mov
aaa
test
add
into
dec
sbb
cltd
mov
and
cmpsb
pop
inc
xchg
push
jne
iret
test
mov
test
mov
je
xchg
outsb
andl
fnstcw
and
stos
movsl
dec
pop
pop
adc
cmp
xor
icebp
imul
add
cwtl
sub
mov
subb
jo
and
cmpb
aaa
xor
add
in
mov
sub
js
jo
inc
lea
repz
push
mov
pop
add
xor
mov
jo
nop
cmp
xchg
repnz
xchg
sbb
daa
sbb
arpl
dec
jns
jmp
sbb
or
xor
and
test
ret
adc
or
add
mov
mov
pop
xor
test
outsl
fcompl
mov
cld
mov
push
xchg
add
cmp
or
push
flds
cs
pop
ret
sahf
pop
push
adc
mov
xchg
iret
ljmp
xor
sti
imul
add
xchg
xor
mov
mov
pop
push
in
cmp
or
mov
push
adc
mov
push
in
add
cmp
jg
xchg
fcoml
das
cmp
aad
addr16
cwtl
lods
mov
mov
pop
loopne
stos
stc
dec
add
mov
aaa
push
jle
adc
ja
adc
jle
imul
imul
cmp
dec
ret
js
addr16
pop
sub
push
inc
xchg
test
daa
ljmp
mov
js
outsl
ficomps
mov
push
sahf
add
adc
movsb
xorb
test
mov
shll
pop
xchg
rolb
fwait
mov
cld
popf
mov
shrb
pop
pusha
je
mov
js
addr16
mov
jp
fstpl
sub
pop
jmp
xor
push
xorl
rolb
push
out
lahf
push
pop
inc
xor
sbb
cli
fdivrl
xor
dec
mov
cltd
je
adc
dec
js
jl
subl
sbb
scas
dec
xor
jae
or
stc
jecxz
push
outsb
outsb
or
mov
imul
popf
sub
call
cltd
pop
xor
push
jnp
test
sbb
xchg
xor
xor
jo
mov
movsb
test
hlt
push
mov
insl
repnz
sub
jge
cld
mov
and
xchg
ret
jns
pop
ret
paddb
dec
rcr
push
mov
push
mov
aam
mov
pusha
and
pop
jmp
js
movsl
aaa
xor
arpl
fs
pop
cmp
inc
jle
mov
or
call
push
sub
in
popf
arpl
mov
cmp
jbe
aad
inc
test
inc
push
fmull
pop
xor
push
insl
movsl
and
mov
xor
xchg
fidivs
scas
repnz
sub
push
out
xor
test
add
cmp
in
push
sbb
add
and
xor
xlat
fnsave
pop
mov
jecxz
adc
out
test
lods
out
mov
fldcw
pop
add
fcmovnbe
and
lds
push
movsl
or
lahf
test
pop
sub
out
jne
or
cs
sbb
jbe
push
out
add
push
xor
out
jge
jmp
mov
cld
ss
nop
fnstsw
outsb
dec
xchg
inc
inc
jl
xor
out
push
addl
mov
xor
je
or
enter
addr16
in
lahf
int
fcoms
loopne
pushf
nop
sbb
dec
mov
sub
mov
push
xor
inc
bound
or
dec
jbe
push
outsl
cmc
mov
mov
lea
movsl
mov
imul
or
bound
adc
xor
adc
xchg
xlat
bound
mov
jmp
ja
dec
imul
mov
cmpb
cmp
or
lods
fstl
rcll
xchg
adc
insl
sahf
das
notb
jb
sub
icebp
inc
fcoms
dec
sub
push
ja
mov
dec
mov
call
add
sarl
imul
dec
pop
xor
aaa
orl
mov
mov
ret
inc
enter
dec
fistpll
push
lahf
ret
adc
xor
jecxz
dec
adc
or
cld
pop
pop
push
fadds
in
int
push
mov
pop
mov
repnz
gs
sub
aaa
loope
bound
loop
int3
inc
dec
inc
outsl
cmp
xchg
mov
xor
mov
push
push
mov
push
push
jbe
xchg
ds
fwait
mov
cmc
add
or
ds
ret
pop
push
and
or
dec
dec
xor
add
push
lcall
ret
jle
aam
sahf
sub
mov
popf
lods
int3
mov
int
cld
int3
mov
mov
pop
dec
adc
cli
mov
push
jge
inc
jno
std
arpl
es
fs
mov
or
cmc
or
arpl
fdivs
push
jno
sub
jo
adc
scas
xchg
sub
dec
or
aaa
mov
or
push
ds
jge
xchg
cmpb
sbb
call
sub
adc
andl
lahf
jmp
mov
dec
push
add
mov
add
mov
into
pop
ret
mov
sti
rorb
vmovq
stos
push
add
les
adc
inc
mov
inc
ss
or
or
int
push
test
mov
popf
adc
adc
and
sbb
push
stos
dec
jae
cmc
push
sub
push
arpl
clc
sub
mov
push
ret
cwtl
repz
jns
enter
mov
mov
dec
sahf
aas
testb
movsl
jbe
pop
pop
jnp
popa
add
sub
sarb
add
nop
bound
add
popf
xor
mov
dec
push
mov
mov
inc
andl
xchg
or
jnp
push
or
dec
xchg
or
test
xchg
or
cltd
xchg
or
leave
xchg
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
xor
imulb
cmp
mov
cmp
mov
push
shrb
dec
aas
dec
outsl
or
add
in
dec
test
pop
fbstp
dec
jne
push
jne
lcall
lahf
sarl
popf
mov
leave
mov
sub
shlb
jnp
divl
mov
or
mov
leave
jno
std
leave
jg
jecxz
sahf
sbb
mov
jecxz
xchg
mov
jns
xor
mov
mov
lods
xor
inc
jne
pushl
sbb
sbb
jmp
jne
call
test
jl
std
sbb
dec
sbb
arpl
out
rcrl
adc
insl
pushf
adc
insl
adcb
jecxz
mov
dec
sbb
or
pop
imul
fadds
arpl
sbb
out
add
sub
jmp
addr16
adc
mov
push
or
addl
xchg
popf
adc
dec
push
imul
repnz
mov
lahf
pop
sub
pop
xchg
or
mov
sti
push
imul
mov
cmp
mov
cmp
mov
cs
pop
or
adc
pop
mov
loopne
in
rolb
cmpsl
push
shrl
inc
push
lds
adc
incl
ret
add
and
pop
decl
jne
mov
cmpsb
sbb
stos
cs
inc
mov
cmp
mov
cmp
mov
cmp
test
and
inc
mov
test
and
test
and
or
pop
outsb
or
sbb
push
mov
jl
loop
mov
lret
aas
mov
cli
mov
push
movsl
imul
sti
push
imul
push
pusha
sub
push
xchg
sub
push
test
xor
push
cmpsl
sub
ljmp
mov
mov
bound
adc
test
jge
add
jge
add
jge
add
jge
add
jge
add
xchg
repz
bound
mov
push
shll
xchg
sub
jge
add
insl
scas
jmp
test
push
jne
sbb
repz
rcrl
xchg
adc
insl
lods
adc
push
jns
lret
adc
and
rolb
aas
sarb
or
ja
rorb
pop
jp
aas
pop
dec
ror
pop
mov
out
in
sbb
pop
aad
inc
lods
push
push
sub
push
jbe
jmp
fwait
and
test
and
filds
push
filds
fbld
push
icebp
fistps
push
sbb
push
mov
rcll
shlb
and
inc
add
mov
adc
adc
jno
add
inc
mov
clc
inc
popa
xchg
adc
xchg
nop
push
incl
jge
add
jge
add
jge
add
jge
pop
icebp
leave
xor
mov
sub
dec
jne
js
or
push
add
imul
jecxz
imul
sub
pop
test
nop
or
roll
mov
dec
push
sbb
adc
push
and
add
add
and
sbb
push
lret
xbegin
mov
cmp
mov
sbb
fstps
dec
arpl
sbb
stc
sbb
jmp
sbb
arpl
sbb
sub
lret
sub
sti
pop
jns
mov
dec
jne
jp
or
sbb
imul
jnp
cmp
dec
cmc
arpl
sbb
arpl
sbb
arpl
sbb
arpl
lret
arpl
sti
pop
jns
mov
imul
mov
leave
test
mov
cmp
push
jae
out
cwtl
push
imul
mov
and
add
jge
add
jge
add
jp
rolb
movsb
in
mov
test
insl
pop
or
or
xchg
add
mov
ret
aas
cli
inc
stos
mov
cmp
mov
iret
push
and
repz
insl
fwait
pop
outsl
xchg
mov
or
mov
pop
fnstcw
xchg
inc
leave
mov
jg
cmp
add
jge
add
jge
add
jge
add
jge
add
jge
or
adc
add
jge
add
jge
push
cmp
in
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
or
pop
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jg
mov
push
test
aas
jp
pop
pushl
ud0
and
push
jne
pushl
jne
ljmp
jne
jmp
jne
fidivs
call
jne
jmp
jne
call
jne
incl
jne
ljmp
mov
cmp
mov
cmp
mov
enter
daa
mov
push
shlb
pop
pop
rcr
pop
cmpsl
rcl
pop
scas
ror
pop
mov
ret
rclb
pop
pushl
add
andl
and
mov
or
bound
cmp
call
jne
decl
jne
call
jne
dec
jne
inc
jne
jne
push
jne
lcall
lahf
test
adc
insl
out
lahf
sbb
adc
addr16
mov
push
push
fistpll
push
filds
fists
into
fistpll
mov
cmp
ljmp
or
aas
daa
pop
or
xor
push
jae
add
inc
xchg
or
push
push
ljmp
cmpsl
call
pop
push
xlat
sub
iret
lret
cmpsb
sbbl
pop
jle
sub
add
clc
test
imul
add
fildl
jecxz
mov
xchg
push
adc
pushf
adc
add
add
sub
movsb
callw
jne
decl
jne
incl
jne
cmp
pushl
jne
ljmp
jne
jmp
jne
enter
add
sbb
mov
js
cld
stos
jne
fidivl
ja
ljmp
rcll
lods
push
lret
push
out
inc
cli
sbb
repz
sbb
imul
imul
mov
jo
fildll
push
imul
or
mov
sbb
mov
into
push
jecxz
adc
insl
pop
adc
insl
je
sbb
int
push
int3
sub
decl
adc
adc
push
mov
fbstp
mov
cmp
inc
mov
insl
pop
mov
or
sub
push
scas
rclb
lar
repnz
mov
xchg
and
sub
sub
adc
fwait
adc
push
mov
hlt
ja
out
pusha
mov
sbb
movl
loopne
push
ficompl
push
sbb
arpl
out
jnp
xor
pop
sbb
xor
movsb
outsl
ss
sti
pusha
adc
mov
mov
jmp
bound
xor
rorb
mov
add
pop
pop
sbb
xor
imul
fiaddl
fcoms
insl
sbb
mov
xchg
jns
shlb
movsb
push
push
sub
push
jl
adc
loop
push
cmpsb
sub
icebp
inc
xchg
adc
ss
shlb
mov
leave
dec
imul
mov
pop
adc
push
pop
adc
insl
dec
adc
insl
jnp
xor
adc
insl
mov
and
adc
push
push
lcall
and
jecxz
sti
arpl
daa
add
mov
bound
push
add
push
pop
dec
dec
xchg
leave
ljmp
cmp
es
gs
push
and
xchg
jmp
jne
call
iret
aas
stos
popa
shl
inc
sbb
addl
enter
nop
pop
in
sub
push
inc
add
mov
sub
mov
dec
ret
mov
sub
jnp
clc
adc
pop
sbb
jecxz
push
dec
mov
aas
enter
enter
sbb
push
jb
sbb
arpl
enter
cld
arpl
fs
and
dec
mov
cmp
mov
aaa
pop
xlat
mov
jge
or
lods
push
ret
les
mov
nop
add
mov
jecxz
pop
inc
mov
aas
xchg
movb
mov
cmp
add
popf
cmpsl
lock
add
xchg
or
xchg
xchg
or
icebp
xchg
or
and
push
mov
add
jo
jmp
adc
ja
test
and
test
sub
jg
jge
add
jge
add
jge
add
jge
add
jge
add
jge
push
stc
leave
mov
mov
jne
incl
add
jo
dec
pop
pusha
or
jno
add
jno
jecxz
popa
leave
adc
imul
and
sub
shrl
inc
jp
add
leave
and
stos
sub
fists
push
adc
add
popa
fsubr
dec
xchg
int3
ljmp
outsb
ljmp
pop
xor
cmp
fs
adc
jnp
push
or
das
addr16
sahf
movntps
add
ljmp
jne
mov
sbb
cli
lds
jge
ljmp
cltd
mov
lret
pusha
jns
mov
mov
pusha
and
sbb
mov
in
sti
sub
mov
popa
in
lods
loopne
mov
lods
testl
leave
dec
mov
orb
ljmp
mov
and
cmpsb
mov
movsb
pop
aaa
shrl
add
lcall
sbb
sub
push
int3
ljmp
fistpl
lret
pushf
mull
pop
inc
add
shl
add
jg
ret
cmc
shll
dec
daa
cmp
cli
or
out
mov
jle
loopne
sbb
imulb
mov
and
test
and
pop
cmp
int
mov
sub
int
rcr
pop
lods
jg
ds
fidivrs
test
pop
xor
pop
push
stos
cmp
xchg
push
ljmp
mov
imul
cmc
pop
ljmp
or
aas
mov
lods
pop
lret
xchg
lret
mov
pcmpgtb
mov
mov
jns
dec
or
loope
scas
pop
lret
cmp
in
imul
pop
mov
dec
stc
jae
xor
aam
je
mov
sbb
and
pop
add
sarl
ret
jmp
imul
stos
imul
jecxz
imul
jnp
jmp
xchg
pop
cmp
sub
push
int
mov
mov
js
rclb
push
imul
insl
hlt
adc
aaa
adc
jno
dec
inc
pop
mov
push
or
imul
imul
ffreep
sub
push
fsubrl
jo
testb
push
leave
mov
mov
cwtl
pop
push
jle
pop
and
pop
das
and
xchg
test
adc
sbb
adc
lret
pop
cli
and
xchg
mov
xchg
push
cs
ret
lea
pop
adc
cmpsb
mov
add
xchg
repnz
add
pop
stos
jmp
push
sub
aas
mov
int
mov
icebp
mov
xor
xchg
and
push
mulb
adc
adcb
xor
mov
cmc
call
shll
jle
pop
in
and
inc
test
add
fsubr
mov
sub
push
xchg
adc
je
fcompl
pop
pop
subl
dec
push
cmp
shrl
inc
pop
add
es
push
fdiv
and
aad
jns
psraw
push
pop
out
push
mov
xlat
arpl
push
pop
cmpsl
mov
enter
stos
and
ret
jb
sbb
arpl
repz
cmp
jecxz
aaa
ret
sub
mov
imul
addr16
mov
pop
inc
sarb
pop
dec
xor
test
aaa
cs
mov
adc
cmpsl
push
rcl
mov
jb
fwait
mov
inc
jge
adc
imul
sbb
arpl
shr
mov
cmc
mov
lcall
adc
insl
sub
rol
mov
jmp
jmp
mov
jmp
bound
call
pop
pusha
lahf
sbb
xor
test
jmp
jne
pop
mov
xchg
daa
push
add
push
insb
lahf
outsl
jbe
jmp
addr16
mov
inc
sub
mov
addr16
insl
daa
lock
xor
fwait
mov
or
stc
arpl
sbb
push
cmp
and
fidivl
push
sbb
push
stos
pop
push
scas
xor
jnp
or
arpl
push
or
xor
mov
andl
xchg
adc
adc
xchg
leave
jo
or
mov
int
push
mov
sub
adc
repnz
xchg
or
fcomp
call
insb
loop
sbb
loope
pop
rcll
movl
fldt
push
lods
shrb
sub
jmp
fdivrs
mov
leave
stos
mov
enter
out
lods
mov
arpl
mov
jecxz
ljmp
fsubrp
js
mov
adc
pop
xchg
jg
push
mov
stos
sub
push
and
dec
and
push
jl
outsl
mull
add
stos
mov
or
fbld
inc
iret
push
pop
mov
xor
sbb
test
and
mov
jg
jecxz
pop
pop
scas
or
popa
adc
inc
lea
push
loopne
ret
jne
and
sbb
arpl
aas
cmp
or
mov
ljmp
lods
lret
rclb
fsts
xor
popa
mov
adc
sub
cmp
or
sbb
mov
sub
push
cmp
dec
arpl
pop
fsubs
sbb
mov
enter
inc
cmpsl
mov
jp
divl
mov
jb
sub
cmp
add
aas
rcr
sub
dec
push
jno
adc
insl
pop
adc
imul
push
shlb
out
cmp
bound
mov
sbb
fucom
inc
sub
pop
int
jbe
sbb
sub
jg
pusha
imul
ljmp
call
add
adc
loopne
lods
lock
pop
hlt
stc
jnp
mov
add
stc
pop
fisttps
ret
or
jbe
jmp
or
push
jno
add
fs
mov
enter
push
pop
jne
xor
mov
cli
stos
mov
cmpsb
pop
mov
ja
push
daa
pop
pop
mov
mov
adc
cmp
dec
lcall
sbb
ljmp
addb
stos
push
test
sub
push
test
pop
push
incb
adc
add
mov
sbb
iret
sbb
xor
xchg
dec
mov
andb
add
or
and
pop
iret
jge
mov
rcrb
mov
pop
mov
sbb
push
push
add
xor
cmp
mov
enter
dec
data16
mov
xchg
sbb
test
mov
push
sbb
jne
ljmp
jecxz
jo
out
in
adc
jnp
cld
test
and
push
pop
insb
jecxz
imul
subb
lcall
push
jmp
and
fstl
imul
xchg
lock
icebp
sub
inc
jmp
sbb
pop
out
enter
xor
ret
push
push
cltd
aad
or
add
in
xor
adc
jecxz
push
rcrl
es
flds
or
mov
jge
add
jge
push
hlt
fists
lds
fisttps
or
cmp
shrl
repnz
and
mov
hlt
ret
push
xchg
arpl
jnp
and
xchg
pop
xchg
mov
xor
pop
xor
pushf
leave
sbb
mov
ss
leave
push
aas
mov
mov
imul
cli
mov
xchg
arpl
jmp
sub
imul
cmc
jmp
insb
jmp
outsb
jbe
adc
sub
jmp
fcomps
cld
pusha
cwtl
adc
aas
aaa
sub
xchg
ds
jo
stc
xchg
imul
dec
lods
dec
adc
insl
data16
insl
mov
sbb
arpl
test
aas
dec
cmc
ja
movsb
jmp
mov
and
in
pop
ss
inc
sbb
pusha
mov
popa
mov
mov
mov
sbb
sub
aam
sub
jecxz
push
sbb
popa
ja
insl
daa
daa
adc
sub
mov
arpl
subb
dec
push
jns
in
xchg
cltd
pop
lea
inc
xchg
sbb
jl
add
sub
mov
cmp
stc
sbb
mov
pop
insl
cmp
fcoms
mov
loopne
popf
insb
ljmp
dec
ljmp
in
mov
loop
mov
cs
add
sbb
jno
addl
xor
jnp
sub
push
imul
lret
mov
jb
or
mov
or
mov
call
sub
js
push
cmpsl
loopne
push
js
cmp
popa
fisubl
mov
push
mov
mov
fs
test
add
xchg
lods
xor
xchg
mov
adc
and
movzbl
sub
xchg
mov
jo
xor
or
imul
cwtl
ds
mov
insl
fdivr
ficoms
or
xor
sbb
sub
je
inc
pop
outsb
lea
sub
jo
aaa
or
and
das
mov
mov
fnstenv
mov
pop
mov
sub
inc
mov
aas
push
imul
repnz
ljmp
xchg
add
lahf
adc
rcrl
test
add
stos
movswl
enter
dec
leave
mov
data16
imul
adc
pop
mov
and
insl
lret
adc
xchg
jg
lock
pop
bound
mov
mov
imul
cwtl
or
adc
adc
mov
jle
mov
insl
mov
pusha
mov
pop
sub
lds
jbe
sub
popa
fisubs
and
mov
sti
sarb
cwtl
sbb
scas
push
xchg
add
ds
roll
lods
mov
add
stc
or
psubq
fld
push
mov
push
cld
mov
cmpsb
sbb
mov
or
lretw
add
push
mov
cmpsl
sub
add
jle
ret
cmpsl
aam
mov
int3
jne
lcall
adc
mov
je
call
fcmovbe
imul
pop
imul
inc
imul
sub
arpl
mov
daa
and
pop
push
fcmovu
cmpsl
fidivl
jmp
outsl
iret
cmp
call
xor
and
add
or
cmp
adc
or
jl
push
inc
xlat
push
push
or
xchg
adc
pop
test
fs
pushf
les
pop
cmpsb
ljmp
fcmovbe
nop
sbb
adc
loop
sub
jmp
cmp
cli
mov
ljmp
xchg
cmp
jnp
lds
xchg
std
popa
jge
add
jg
cmpl
jne
les
fs
cs
shr
mov
lock
insl
in
ficompl
mov
and
sub
fs
lret
std
jle
inc
arpl
push
cmp
mov
jnp
jmp
fcmovbe
push
into
adc
fstpt
mov
lcall
lret
gs
adc
imul
rol
jmp
jmp
mov
std
push
outsl
mov
stos
jmp
insl
sbb
jle
xchg
mov
sbb
xchg
inc
in
sbb
pop
or
aas
ja
bound
jns
in
mov
xor
mov
lcall
jecxz,pt
push
sbb
pop
insl
enter
dec
pop
sbbl
and
cld
mov
xor
push
adc
in
insb
movsb
add
test
pop
jle
xchg
push
cmp
mov
mov
sarl
pop
cmp
fcoms
sbb
jg
movsb
dec
inc
mov
enter
mov
cwtl
inc
imul
sbb
lret
cmp
jl
push
sub
mov
xchg
fsubrp
inc
xchg
hlt
pop
mov
and
adc
call
daa
inc
cmp
popa
xor
push
cmp
sbb
cwtl
sahf
inc
jg
pop
mov
sti
dec
inc
add
je
push
repnz
push
in
inc
sahf
cwtl
std
icebp
inc
cs
fisttps
es
lahf
and
mov
ss
pop
insl
add
das
or
int
pop
xlat
mov
imul
push
lret
dec
push
test
sub
pop
mov
dec
int
xchg
cmc
jne
and
fidivs
mov
aas
out
sub
mov
xchg
imul
pop
test
aas
lods
fistps
psubd
dec
adc
pop
or
push
dec
cmp
push
popa
and
jg
mov
ljmp
jne
test
sbbl
adc
shll
or
adc
scas
jg
mov
lcall
in
push
push
push
lods
adc
insl
jecxz
insl
jno
dec
xchg
insl
adc
popf
bound
pop
cmp
inc
mov
or
loope
rcrb
add
sbb
dec
enter
push
pop
inc
outsl
cs
mov
dec
loope
add
add
loop
jg
jle
mov
out
js
mov
jg
jl
ljmp
add
sbb
fistpl
int
pop
addl
jecxz
imul
cli
lock
gs
aaa
jg
pop
jmp
lods
sahf
push
jbe
lret
xor
xchg
lret
das
arpl
push
stos
imull
mov
into
shlb
xchg
adc
sbb
movsl
sub
and
xor
xlat
and
add
lea
ss
xor
jle
imul
outsb
add
iret
js
jecxz
rcll
sbb
sbb
adc
je
sub
push
shlb
cmp
movsb
dec
scas
add
sub
das
lret
ffree
pop
push
adcl
xorb
fwait
add
aas
stos
mov
subl
xchg
mov
mov
ffree
pop
xchg
cwtl
sub
or
and
test
ret
push
sbb
dec
mov
in
imul
in
js
and
pop
hlt
push
ja
or
insl
sar
jg
push
pop
xor
enter
pop
dec
and
add
add
or
orl
pop
clc
xor
xchg
test
testb
sbb
aad
push
into
pushl
test
push
andl
fistps
imul
rorb
jl
and
imul
das
lds
int3
push
mov
pop
push
outsb
push
jecxz
xchg
cmp
add
rcrl
or
xchg
leave
dec
add
cmp
popl
sbb
sub
ss
push
xor
stc
gs
test
jo
notb
pop
ds
xor
jge
adc
add
adc
dec
ret
jno
das
or
jge
dec
sarb
cmc
push
add
shll
sub
dec
xchg
add
pop
dec
ds
adc
dec
decb
addr16
add
pop
mov
divl
mov
dec
mov
inc
mov
inc
sub
and
decl
cmp
pop
push
outsb
inc
imul
rolb
add
cwtl
lret
jp
add
jbe
stos
js
pop
dec
xchg
cs
sub
psrlw
sub
imul
repnz
js
dec
dec
ds
or
aas
mov
inc
mov
roll
fsts
jns
xchg
or
sub
mov
or
push
mov
shl
insb
xchg
cmp
lods
pop
daa
imul
mov
inc
jbe
and
or
sbb
xor
shrb
jmp
mov
inc
cmp
jl
mulb
cmp
cmc
shll
fcoml
mov
mov
jl
imul
fucomi
or
popl
mov
inc
mov
arpl
addl
dec
imul
out
pop
pushf
ss
jl
cmp
cmp
stc
mov
jge,pn
dec
add
push
movl
sbb
xor
or
sahf
inc
jecxz
jl
mov
movsb
sti
int
test
or
dec
cmpsb
daa
xor
inc
cmp
imul
push
cld
outsb
push
push
cmp
dec
push
icebp
push
mov
jae
xlat
mov
mov
lea
or
jo
call
pop
cltd
and
inc
xchg
push
pop
ret
xor
or
add
icebp
adc
push
xor
jnp
sbb
or
mov
inc
cltd
mov
push
mov
insb
lods
push
add
out
jecxz
sub
sbb
fwait
adc
lret
out
call
pop
inc
xor
cmp
ja
cmp
bound
push
je
xor
dec
stc
inc
jp
fisttpl
jg
fisttpl
mov
cmpsl
cmp
sbbb
addr16
mov
or
sbb
insb
aad
xchg
push
cli
aaa
outsb
lret
ja
push
out
cmp
push
push
fstl
mov
mov
sti
push
negb
sub
jns
push
pop
mov
test
sti
mov
jae
stc
lret
or
pop
test
int3
inc
nop
in
mov
push
mov
addr16
rolb
out
and
dec
mov
jae
ja
jl
insb
and
bound
pop
pop
xchg
mov
push
push
imul
inc
shlb
push
add
lcall
pushf
push
inc
add
cmp
in
add
and
in
inc
maskmovq
testl
push
frstor
xor
mov
mov
dec
and
jae
imul
cmc
inc
xor
iret
test
scas
outsl
orl
lds
or
adc
mov
int3
outsl
add
hlt
xchg
adc
mov
popl
mov
les
jle
imul
clc
outsb
pop
outsl
fstpl
iret
in
pop
pop
xchg
dec
fnstsw
adc
jo
arpl
mov
or
aad
dec
aaa
push
push
push
repnz
add
mov
xor
sbb
int
add
add
cli
arpl
jns
pop
inc
sub
jae
out
cli
cmp
orl
test
inc
fimuls
loopne
mov
mov
push
push
push
lods
xchg
jne
dec
sbb
in
lret
pop
dec
push
sti
cmp
xor
shll
es
addb
test
orb
sbb
lret
inc
rolb
call
pop
sub
sub
mov
adc
xor
not
and
bsf
bsf
and
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
dec
shl
cmp
shr
add
xor
shl
bts
jmp
lcall
ret
or
movzwl
not
shl
adc
test
and
mov
bts
sub
jmp
lcall
xor
add
add
pop
xor
xchg
push
test
test
or
adc
bt
or
bts
call
lcall
incl
ret
neg
sub
cmp
adc
cmp
and
add
test
bsf
jmp
lcall
and
or
xor
and
not
test
bts
mov
mov
xchg
push
push
xchg
dec
add
add
call
mov
not
xor
xor
btc
shr
not
xor
add
mov
cmp
shr
btr
bsf
btc
or
and
inc
mov
shl
sub
xchg
mov
cmp
dec
cmp
shl
bts
bt
adc
sub
add
jmp
lcall
ret
or
btc
shl
bts
cmp
mov
cmp
or
test
call
lcall
add
xorl
pop
xor
xchg
push
btc
test
add
cmp
bts
xor
bts
shr
shl
jmp
lcall
stc
add
xchg
ret
neg
sub
cmp
or
add
shr
and
not
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
bsf
neg
test
add
test
and
bsf
jmp
lcall
es
adc
ljmp
imul
test
sub
movsbl
btc
inc
add
mov
adc
xor
adc
mov
test
adc
call
lcall
add
xor
adc
cmp
and
bt
and
not
call
lcall
daa
add
ret
mov
btc
xor
sub
btc
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
and
cmp
and
bts
neg
adc
bts
call
lcall
sbb
shlb
lock
mov
ret
or
roll
loope
frstor
out
and
push
dec
jmp
lcall
inc
cmp
cmp
add
xor
bsf
neg
mov
test
btr
cmp
sub
sub
mov
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
shr
shr
sub
inc
movzwl
cmp
or
bts
shl
push
mov
mov
inc
bt
add
or
test
btc
add
add
or
mov
and
adc
cmp
dec
add
mov
mov
not
btc
cmp
and
bsf
shr
and
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
shr
and
mov
cmp
or
and
bswap
add
call
lcall
add
xor
btr
shl
sub
sub
bsf
cmp
neg
mov
add
sub
test
and
test
add
test
movswl
xor
bswap
sub
mov
shr
xor
shr
adc
and
btr
neg
call
lcall
mov
shr
mov
mov
add
mov
mov
shr
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
shl
shl
btc
shl
bts
xor
shr
bsf
adc
adc
btr
cmp
bts
mov
dec
jmp
lcall
sub
and
neg
sub
mov
add
add
neg
or
mov
add
shr
movswl
shr
dec
mov
not
not
shl
btr
test
call
lcall
add
test
xor
adc
bts
test
test
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
shr
sub
shl
bsf
cmp
xor
sub
mov
xor
bt
mov
cmp
neg
adc
sub
adc
movswl
cmp
adc
or
and
xor
bt
xor
mov
add
bsf
bts
and
mov
dec
bsf
or
cmp
lea
inc
cmp
jne
sub
btc
xor
or
btc
add
add
inc
bsf
test
bts
bts
or
xor
btc
call
lcall
je
cmp
shr
adc
sub
movzbl
adc
mov
inc
sub
mov
dec
bsf
sub
shl
bts
shr
cmp
inc
and
call
lcall
mov
mov
btc
not
cmp
cmp
add
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
bsf
mov
or
neg
xor
mov
and
shl
call
lcall
movsbl
bsf
cmp
add
adc
sub
dec
add
inc
xor
test
bts
add
neg
and
inc
jmp
lcall
rclb
insl
test
bts
sub
bts
and
inc
mov
add
cmp
cmp
xor
shl
adc
neg
and
call
lcall
add
bts
bswap
btr
adc
add
shl
xor
test
push
pop
inc
add
loop
mov
inc
cmp
sub
mov
cmp
sub
push
decl
mov
add
btc
mov
movzbl
adc
xor
xor
test
call
lcall
incl
scas
or
sub
or
mov
shr
movswl
mov
push
shll
or
test
cmp
and
shr
inc
xor
adc
push
dec
and
or
adc
inc
not
mov
sub
sub
mov
adc
neg
bt
btc
neg
add
inc
neg
and
sub
push
push
pop
add
add
call
bts
dec
sub
xor
add
xor
add
xchg
mov
add
sub
bts
mov
mov
dec
btc
mov
mov
mov
bsf
or
cmp
mov
xor
call
lcall
mov
mov
sub
enter
lret
shlb
call
bsf
or
add
cmp
bsf
bts
sub
dec
shl
cmp
btc
dec
call
lcall
shlb
addl
lock
inc
lds
btc
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
cmp
xor
movswl
cmp
sub
xor
cmp
bts
inc
mov
bt
adc
not
shr
cmp
btc
bts
shr
call
lcall
inc
dec
sub
xor
cmp
shr
mov
mov
mov
adc
mov
not
cmp
and
bts
xor
add
cmp
je
or
cmp
dec
and
bt
add
bt
shl
dec
add
dec
test
mov
and
sub
cmp
shr
xor
call
lcall
and
xor
test
not
shl
add
test
sub
adc
dec
bts
test
test
neg
movsbl
shl
movzbl
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
bts
bt
btc
test
test
cmp
btr
push
decl
mov
add
bsf
shr
mov
add
adc
cmp
and
mov
push
decl
mov
add
shr
cmp
movsbl
btr
xor
shr
mov
bt
add
or
mov
bt
cmp
btc
test
test
sub
xor
bts
jmp
test
add
cmp
shl
bsf
test
dec
mov
inc
add
shl
sub
shl
sub
sub
mov
mov
cmp
adc
add
dec
not
cmp
test
mov
and
add
adc
dec
and
btc
or
bts
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
add
test
mov
movzbl
mov
bswap
dec
sub
sub
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
bt
xor
mov
sub
not
sub
xor
neg
push
push
and
adc
adc
shr
sub
btc
push
sub
mov
or
shl
mov
bsf
add
xor
and
inc
mov
xor
add
xor
cmp
cmp
cmp
dec
mov
call
lcall
js
lret
cmp
mov
shl
cmp
movswl
shr
bts
shl
lea
add
neg
adc
inc
sub
xor
add
not
adc
inc
mov
cmp
and
not
and
add
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
out
mov
pop
and
btc
sub
shl
test
bsf
sub
mov
shr
bswap
btr
bt
sub
movzbl
add
add
push
adc
bsf
or
btc
or
sub
push
test
btr
btc
and
cmp
not
cmp
adc
movzwl
push
shr
or
test
mov
not
btr
cmp
and
call
lcall
mov
test
not
btr
adc
and
dec
xor
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
mov
not
bts
btr
cmp
bt
bt
xor
call
lcall
sub
pop
and
or
cmp
test
mov
add
btr
shl
test
sub
xor
cmp
shl
call
lcall
mov
adc
neg
neg
and
test
btc
cmp
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
les
adc
clc
pushf
jnp
fidivrl
jmp
add
lcall
fsubs
jae
inc
pop
stos
dec
popl
add
popa
stos
or
data16
jo
add
shrl
pop
into
lea
pop
pop
sti
je
add
add
jo
test
test
sbb
pusha
nop
or
lea
add
insl
sbb
cmp
test
adc
fisttpll
dec
inc
or
imul
or
add
rcr
add
jns
jge
cs
gs
lods
inc
fimuls
scas
and
orb
or
clc
inc
jle
les
inc
sbb
daa
and
xor
dec
push
fdivrl
stc
mov
cmp
cs
add
scas
adc
popa
or
push
add
adc
arpl
dec
sbb
mov
mov
aam
sbb
fsubrl
xor
fcompl
iret
sbb
inc
fbstp
inc
push
add
adc
sbb
or
push
mov
add
lahf
jmp
and
aad
jp
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
aam
add
clc
cmp
inc
insb
outsl
jae
and
jne
addr16
je
in
je
xlat
fwait
cs
push
test
insl
shlb
jecxz
outsb
icebp
je
bound
cmp
or
push
inc
jo
and
icebp
inc
sti
or
div
push
push
push
push
jae
je
lock
es
dec
stc
pop
push
gs
je
jo
icebp
arpl
out
outsl
outsb
out
pop
push
jne
out
xchg
mov
pop
jb
mov
jns
dec
out
outsb
cs
sbb
or
ja
adc
repnz
std
pop
addb
dec
imul
push
outsl
dec
fs
popf
lcall
jmp
jmp
pushw
aam
jmp
cld
fwait
push
shll
adc
inc
fiaddl
stos
and
add
mov
dec
xchg
add
inc
push
push
and
or
std
jb
jmp
add
call
mov
fcoms
push
sub
int3
jne
stos
xlat
mov
outsl
add
test
in
nop
or
imul
or
test
je
daa
jae
data16
sti
jl
cltd
das
inc
sub
mov
insb
fs
mov
dec
popa
jns
mov
movsl
pop
jecxz
mov
dec
cs
add
dec
rcr
add
push
push
inc
adc
pop
inc
mov
cmc
lret
pop
or
dec
inc
add
mov
