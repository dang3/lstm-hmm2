push
call
ret
ret
orb
sub
movd
popa
adc
scas
adc
scas
fdivp
fidivs
add
out
xchg
in
fimuls
xor
mov
mov
sub
pop
push
out
cmpsl
xor
and
out
lahf
adc
pop
xchg
imul
jne
push
fadds
cs
add
adc
cmp
mov
dec
or
dec
and
adc
push
sahf
mov
mov
jecxz
decb
xchg
into
mov
inc
daa
jns
das
aaa
jl
xor
xor
lds
xor
lods
fs
xchg
incl
xlat
mov
push
hlt
lahf
popa
cmpsb
lods
xchg
sti
dec
out
mov
in
shlb
popf
pop
push
push
add
jmp
push
int
cs
push
pop
sbb
jns
xchg
in
sbb
pop
mov
popa
xchg
push
or
dec
cmp
jnp
push
and
inc
rolb
mov
and
xor
jge,pn
sbb
aaa
lcall
mov
pushf
pop
pusha
or
jp
fnstsw
add
adc
fldenv
or
push
fldenv
add
fdivs
ja
or
pop
imul
shlb
inc
or
jg
or
mulb
jb
adc
xor
or
or
stos
imul
dec
add
jo
das
xchg
cwtl
sbb
inc
xor
dec
mov
mov
fmul
fcos
jb
cmc
fst
stos
xchg
jl
fmull
int
adc
lcall
pushf
aaa
in
cld
push
mov
test
out
dec
jbe
lods
cld
xor
mov
loope
hlt
scas
inc
lcall
dec
cltd
mov
pop
push
je
xlat
and
xchg
push
sub
lods
jo
add
xlat
sub
cmc
xor
dec
jnp
test
push
push
pop
adc
lock
sbb
notl
shll
cmp
outsb
int
shrb
or
std
test
shll
sub
mov
pop
outsl
cmp
in
movsl
pusha
in
outsl
mov
test
js
lret
add
cmpsl
dec
notb
add
inc
sub
add
shll
mov
fsubl
mov
in
lret
mov
jo
xchg
xchg
inc
rcrl
pop
mov
xchg
lods
aaa
pop
fists
hlt
outsb
dec
dec
test
gs
jmp
in
sbb
inc
xchg
aad
push
pop
sbb
inc
jnp
xlat
push
out
lahf
subb
insl
es
dec
sbb
add
xchg
mov
cs
cmp
xchg
dec
lret
mov
insl
stc
into
hlt
fdivl
negb
jns
pusha
mov
ljmp
out
loope
sub
jae
push
jnp
pop
inc
fsts
or
call
jnp,pn
sub
xor
mov
fs
and
mov
in
imul
dec
sub
or
enter
xor
dec
push
and
mov
inc
mov
dec
jmp
mov
stc
movsb
jg
jg
sti
cld
loope
mov
pop
fwait
cmpsb
inc
cmpb
inc
or
addr16
mov
mov
dec
les
lds
add
cli
mov
insb
add
fcmovne
sar
xorb
mov
call
js
data16
cwtl
mov
adc
lea
push
int
dec
test
mov
fxch
movsb
jae
pop
sbbl
add
mov
lret
or
js
xchg
add
adc
popf
push
dec
pop
jge
xor
jp
push
xchg
pop
ss
mov
adc
jno
movsl
outsl
int3
mov
and
roll
add
push
sub
clc
repnz
mov
mov
mov
leave
nop
adc
push
out
lcall
jo
pop
xchg
cmp
fcomps
ja
jae
imul
fstpt
jo
and
ljmp
pop
sub
push
or
leave
push
mov
nop
jp
pop
outsl
push
sub
jb
repnz
jp
mov
inc
hlt
call
scas
outsb
xchg
ja
inc
adc
rcr
fbld
popf
jp
lods
add
sbb
scas
lods
cmpsl
stos
int3
jl
mov
jns
lret
push
in
add
jne
jl
ret
pop
sti
icebp
into
lods
mov
sub
std
in
adcl
cmpsl
mov
jmp
je
cli
ret
loop
daa
jns
push
xchg
cmp
pop
rcll
enter
mov
mov
das
insb
pop
sbb
js
mov
fnsave
filds
outsb
and
fsubl
movsl
loop
rcll
scas
nop
and
rol
sbb
lret
and
scas
adc
data16
or
push
nop
fwait
hlt
sti
mov
fs
int3
jmp
cmp
jnp
test
mov
adc
add
rorb
ljmp
dec
jecxz
mov
cltd
cs
mov
shrl
int
fildl
mov
stos
cmp
push
cli
ficoml
dec
xchg
xor
loopne
pushl
jmp
shrb
mov
adc
popf
pop
cmpsb
nop
movsl
rorb
stos
adc
js
lret
ficomps
dec
pop
mov
or
or
dec
cmpsl
sbb
adc
rclb
sbb
inc
xchg
lret
mov
cs
adcl
cmp
out
and
cmp
cmp
sub
int
lret
sbb
mov
std
mov
cmp
cmp
das
pop
imul
fistpl
test
mov
xchg
push
ss
arpl
cli
adc
jo
ljmp
cmp
sbb
and
test
cmp
push
in
push
aas
mov
mov
add
pop
push
push
aam
or
dec
ljmp
inc
mov
cld
jae
mov
mov
icebp
nop
jge
ret
jmp
cs
sti
shlb
repz
mov
sub
daa
mov
jge
sahf
mov
mov
mov
stos
sub
sub
imul
inc
lret
mov
int
cmp
and
sti
dec
sub
fsubp
int3
sub
test
mov
mov
lods
jne
dec
rolb
xchg
test
pop
xchg
add
orl
mov
xor
xchg
xor
add
scas
jl
push
cmp
inc
testb
ret
push
fnstcw
lods
add
inc
popf
cmp
mov
imul
jbe
jecxz
repnz
add
push
inc
xor
jmp
cmp
lret
cmpsb
jno
inc
test
sbbl
pop
std
es
clc
fcmovb
lods
and
or
or
jmp
repnz
sub
cmc
push
jle
push
pop
xor
adc
sub
iret
sub
test
pop
call
dec
loop
xor
mov
inc
add
add
xor
xorb
stos
clc
sub
shll
in
gs
sub
and
cmp
mov
addb
insl
pop
orb
decb
xlat
rcll
or
stc
int
or
pusha
jmp
mov
insl
push
fdivrl
fmuls
int3
xlat
sbb
dec
stc
nop
out
dec
mov
sub
mov
les
testl
mov
mov
mov
cltd
jae
cmp
xorl
inc
decl
pop
insl
mov
sub
pop
test
xchg
popa
inc
mov
jg
cmp
xchg
dec
inc
mov
cld
je
and
mov
cli
inc
add
sbb
mov
mov
pop
outsb
addr16
push
mov
pop
sub
mov
lahf
push
fidivrs
xchg
sbb
add
ret
mov
jl
push
stos
imul
and
jns
or
cld
lcall
stos
and
divb
adc
jg
mov
popa
add
xor
cmc
lret
dec
ret
mov
jae
insl
out
xchg
push
shl
inc
js
dec
hlt
inc
push
iret
icebp
jno
or
out
adc
ror
cmp
sub
daa
cmp
and
cltd
pop
cltd
pop
rcrl
inc
jg
pop
clc
sub
imul
inc
dec
xchg
pop
cwtl
lret
andl
inc
aaa
jmp
test
ss
nop
orb
add
sub
or
stos
adc
xchg
xor
pop
cmc
fsubrl
sub
mov
int
xchg
shl
xchg
sbbb
fmuls
xor
pusha
repz
push
repz
jb
in
hlt
cmp
cmp
shrl
test
jmp
repnz
arpl
mov
mov
mov
adcl
xchg
cmpb
stc
hlt
mov
es
pop
or
cwtl
aas
mov
in
mov
sub
call
adc
int3
xlat
lcall
fs
jecxz
or
xchg
scas
mov
mov
lret
and
push
adc
cmp
or
test
sub
in
xchg
mov
fldt
popl
ja
jmp
fisttps
cmc
cmc
imul
mov
push
cltd
xchg
js
mov
outsl
xorb
test
push
sub
mov
push
xchg
mov
mov
fldl
push
adc
push
adc
pop
mov
inc
push
push
or
daa
mov
mov
cmp
fdivr
test
and
pop
loopne
jno
bound
or
mov
sbbl
xor
xchg
call
les
test
cmc
pop
xchg
dec
outsb
fcomps
je
pop
in
and
je
sbb
scas
test
jno
xor
movsb
jae
mov
aam
xor
in
push
inc
fsubp
pop
cwtl
mov
cmp
cmp
push
push
and
adc
mov
or
notl
pop
enter
or
sbb
add
out
mov
js
cmp
mov
sub
and
xor
sub
ret
insb
push
mov
pop
out
cli
stos
xchg
jg
cmp
lahf
scas
inc
dec
mov
pop
sub
xchg
mov
icebp
inc
movsl
mov
jle
int3
sbb
inc
rorb
sub
mov
mov
mov
jae
adc
sub
pop
jnp
mov
test
lock
notl
sub
push
loope
lcall
dec
dec
or
add
cli
pop
movsb
jp
lods
hlt
loop
andl
pop
mov
xchg
push
lods
testb
mov
cwtl
dec
dec
xchg
add
and
fidivrl
push
imul
js
scas
aas
push
loope
loopne
push
scas
mov
jl
push
xchg
add
or
sbb
sub
pop
stos
jo
sub
pop
or
aas
jns
fdivr
mov
iret
mov
dec
cmpsl
lods
aaa
cwtl
xchg
add
fs
xor
ljmp
cmp
mov
icebp
mov
xor
mov
testl
data16
jmp
xor
jl
xchg
loop
cld
mov
or
and
cli
and
mov
out
pusha
imul
call
mov
enter
dec
sbbl
lcall
mov
fwait
jge
mov
or
enter
adc
jle
ljmp
jb
scas
lcall
push
pop
aad
out
xchg
cltd
scas
nop
jnp
ficoms
jecxz
inc
cmp
adc
mov
out
inc
jno
lret
ret
into
dec
sti
and
inc
popa
int
inc
dec
fiaddl
mov
mov
xchg
pop
dec
loop
stos
xor
inc
dec
xor
cwtl
mov
jg
movsb
mov
ret
cs
sbb
aaa
adc
lods
test
rcrb
cmp
mov
iret
mul
movsb
adc
lret
cli
jb
inc
stos
insl
fwait
aam
movsb
imul
sub
jl
add
mov
subb
jno
add
ss
xor
or
add
ja
xchg
or
in
push
fbstp
mov
scas
xchg
jbe
daa
sbb
add
push
xor
jbe
pop
push
jb,pn
push
dec
cli
js
cmp
fcom
xchg
push
push
inc
clc
addr16
cmp
and
sub
or
mov
sub
and
cs
or
sbb
scas
and
cmp
pop
mov
xchg
scas
mov
sbb
cmpsb
cltd
enter
lcall
add
fldl
sub
or
clc
in
cmp
add
and
adc
mov
sahf
mov
xchg
jmp
and
mov
imul
inc
and
cld
inc
sub
daa
aas
gs
mov
push
test
push
and
or
in
push
mov
mov
dec
loopne
pusha
scas
xor
ds
xchg
div
cs
jg
shrl
cmp
mov
shlb
adc
or
loope
xor
push
xor
out
push
into
cmp
pop
dec
pop
mov
dec
and
xor
mov
xchg
xor
ds
sub
inc
ret
mov
adc
loop
and
bound
inc
cmp
js
outsl
adc
push
cmp
and
lcall
xor
xlat
ja
mov
mov
pusha
bound
movsb
cwtl
mov
pusha
jmp
in
pop
xchg
repnz
inc
popf
xchg
gs
mov
mov
clc
daa
adc
xchg
nop
cmp
nop
mov
mov
push
mov
fidivrl
mov
adc
lret
adc
test
push
stc
cmp
stc
enter
imul
push
sub
das
or
cmp
testl
add
cmp
aad
pushf
fnstenv
aas
lods
aad
out
pop
int
in
imul
push
icebp
pop
and
popf
push
pop
xor
jb
mov
cwtl
pushf
jnp
cmp
lea
mov
shlb
cmp
pop
cwtl
cmp
stos
je
mov
adc
int3
sbb
jg
push
and
iret
notb
je
cmpsl
inc
cmpsl
out
test
aam
dec
addl
aad
add
or
push
in
insl
andl
xor
push
gs
std
cmp
outsl
dec
loopne
in
push
cmc
push
lahf
sub
sub
xor
bound
je
lcall
jp
mov
or
xorb
repz
jge
mov
leave
daa
test
pop
out
fildl
xchg
aad
jno
xor
shll
rcrl
and
mov
pop
jge
mov
push
jecxz
out
adc
stc
push
pop
dec
scas
lods
cmpsl
cwtl
repz
push
pushf
out
iret
adc
mov
testl
fwait
or
loope
and
rolb
cmp
fadds
pop
add
dec
int
aad
dec
out
fisubs
jo
jmp
sahf
icebp
cmpsl
icebp
cli
mov
or
pop
push
aam
jnp
cmp
jb
xchg
bound
and
rorb
or
add
pop
shll
push
xchg
jmp
cmp
push
shrb
and
push
repnz
call
out
inc
aaa
ret
inc
js
fidivl
fistl
adc
pop
ja
mov
lds
orb
sbb
mov
jne
pop
leave
pop
xor
push
push
sbb
or
sbb
jne
push
adc
ret
cmp
fisubl
dec
xchg
in
and
fcom
mov
pop
into
pusha
push
cmp
push
or
mov
cmpsb
push
inc
jmp
shrl
sbb
mov
cmp
je
idiv
sub
add
data16
hlt
mov
fsubr
add
rclb
das
dec
jb
xchg
jp
sahf
cmp
mov
lcall
dec
push
movsb
fildl
xchg
lahf
add
inc
cmc
xchg
sbb
call
iret
mov
lods
stc
fisubs
fstps
sbb
cmp
sub
sbb
inc
imul
pop
ret
out
aas
add
jae
mov
stos
xchg
out
sub
push
push
ds
nop
push
gs
in
xchg
stc
pop
sub
inc
fldpi
dec
pushf
pop
enter
lret
pop
sub
sub
mov
jg
push
push
into
aam
xchg
stos
xor
jae
aam
pop
test
iret
adc
and
js
mov
sbbl
sbb
loope
mov
add
sahf
popf
and
addb
xor
xor
std
aas
data16
sbb
es
xlat
mov
hlt
or
clc
ljmp
loope
xor
faddl
xor
push
lods
mov
scas
movsl
popa
mov
jecxz
cmpsb
dec
pop
lds
nop
mov
pop
mov
mov
fisttpll
dec
push
or
xchg
shll
cmp
imul
jnp
xchg
testb
shr
pop
and
mov
add
mov
push
jbe
jo
lret
or
dec
mov
pop
lods
aam
ja
lret
or
lods
jo
shlb
mov
xor
cmp
mov
fnsave
sbb
mov
negb
mov
dec
add
pop
pop
sub
cmp
push
fstl
jne
xchg
dec
shll
mov
and
in
push
push
into
pop
or
ret
adc
pop
int3
dec
adc
mov
mov
lret
hlt
mov
sub
adc
jno
insb
mov
pop
repnz
call
jl
scas
dec
pop
cmp
jmp
outsb
loop
shr
and
test
negl
mov
cmp
xchg
add
mov
ret
ja
mov
leave
xchg
sahf
cmp
adc
adc
add
sbb
push
mov
dec
add
cmp
cmp
es
imul
pop
or
or
aaa
mov
pop
push
xor
fidivs
add
pop
inc
sub
sar
loope
push
imul
nop
icebp
inc
shlb
lock
popa
add
int
lret
adc
ret
mov
sbb
aaa
mov
xor
imul
inc
lret
pop
adc
aam
cli
leave
movsb
mov
jae
sbb
shll
fnstcw
adc
call
iret
aas
jbe
sbb
fisubl
inc
push
int3
push
dec
xchg
inc
adc
mov
xor
ret
adc
in
xchg
movnti
sbb
movsl
cmp
icebp
jbe
mov
and
fwait
aaa
inc
jne
repz
xchg
xchg
pop
pusha
inc
lret
dec
ficoms
flds
popf
movsb
or
cltd
mov
xchg
ficoml
clc
sbb
fwait
out
and
inc
cmp
sub
mov
das
cmp
xor
lret
pop
dec
adc
dec
mov
notb
push
lret
mov
jns
xchg
adc
xchg
ret
push
or
jecxz
sub
sbb
fisttpl
inc
sbb
out
pop
stc
in
dec
sbb
sbb
lret
test
xchg
out
icebp
call
jns
shrl
mov
sub
mov
or
lahf
fcompl
inc
test
mov
or
loopne
cld
push
inc
test
lods
xchg
jg
mov
cmp
arpl
mov
sub
jbe
fildl
jecxz
add
jle
inc
mov
jle
andl
idivb
inc
or
push
mov
js
js
sub
pop
jne
dec
or
jge
pop
mov
orl
js
sbb
sub
mov
or
inc
sub
dec
sub
adc
addl
cmpsl
insb
pushf
or
fs
rclb
lds
fldenv
cmp
jns
mov
mov
mov
dec
push
add
pushf
aam
adc
sarl
andb
fisubs
pop
fisubl
xor
xchg
icebp
lahf
outsl
mov
push
subb
mov
jecxz
sti
pop
pushl
into
mov
outsb
or
rolb
lock
mov
rcl
roll
movsb
test
insb
cmc
jns
mov
or
adc
cmp
repz
in
xchg
es
stos
cmp
int3
inc
movsb
stos
push
dec
cmp
ljmp
sbb
shlb
aas
xor
mov
push
pushf
or
sbbb
test
push
scas
cmpl
aam
jecxz
sbb
icebp
xor
and
cmp
sbb
mov
cmp
popw
cmpb
dec
scas
cmp
jb
jo
xor
insl
pusha
movsb
xor
add
sti
arpl
xchg
fs
stos
pop
xchg
push
aad
add
dec
pop
xor
adc
or
sbb
or
popa
push
test
mov
je
adc
jmp
cmpsl
fwait
dec
xlat
mov
xor
pop
into
mov
out
pusha
sub
out
add
mov
add
cmp
xor
sbb
shll
pop
inc
cmc
jbe
cmp
pop
clc
imul
jmp
pop
in
fisubs
es
clc
int3
pop
jno
pop
in
adc
imul
in
jp
in
inc
cmp
andb
pop
xchg
sarl
push
out
faddp
push
mov
or
ficomps
mov
out
adc
mov
mov
sub
cmpsl
movsb
and
dec
jle
cmp
rcll
mov
sub
mov
add
mov
inc
jle
insl
add
mov
loop
dec
call
addr16
scas
or
rolb
lret
pop
addl
inc
push
repz
cmp
dec
leave
jae
popf
insl
sbb
push
call
jns
lods
notb
insl
push
sahf
je
cmc
jnp
push
test
pop
mov
cmc
fnsave
dec
lea
js
shlb
ret
mov
mov
rcrb
push
jmp
and
sbb
cltd
popl
xchg
sbb
iret
mov
jb
dec
cmpsb
mov
xor
and
adc
inc
xchg
test
adc
dec
outsb
sti
lods
push
mulb
add
cmp
adc
mov
xchg
popa
cwtl
hlt
inc
dec
mov
dec
lret
fmuls
mov
and
pusha
mov
xchg
rorl
addr16
adc
mov
cltd
add
add
enter
mov
jecxz
dec
jnp
sbb
cwtl
jae
fnstsw
mov
inc
enter
cmp
sbb
popa
cwtl
mov
pop
inc
dec
dec
pushf
out
std
data16
popl
jb
shr
sahf
out
movsb
sbb
dec
mov
rep
jmp
cmc
sbb
lea
add
pop
cmp
lea
cld
adc
fisttpll
jge
xchg
push
xor
adc
shrb
test
sub
popa
inc
sub
loop
add
shll
movsl
or
jbe
dec
loop
clc
or
in
fcompl
movsb
into
push
out
add
mov
xchg
aas
jge
icebp
pop
lret
cwtl
push
idivb
cmp
lds
dec
and
lea
xchg
aad
or
stos
test
adc
inc
dec
jne
sub
mov
jne
push
pop
pop
mov
push
fistpll
pop
mov
push
and
sbb
test
mov
out
sub
into
pop
sub
cwtl
push
insl
or
addr16
xchg
fisubl
daa
fwait
data16
jo
lea
mov
mov
sub
jno
dec
sub
pop
or
cmp
test
push
outsb
adc
jl
shrb
cmp
addl
and
lret
dec
mov
inc
ret
sti
xlat
cmp
outsl
mov
shrb
mulb
sarb
xor
inc
mov
lret
test
jns
dec
push
mov
fsub
out
jnp
pop
clc
fcomps
jno
dec
imul
or
jmp
adc
mov
out
in
cmp
or
enter
mov
push
push
cmp
pushf
push
bound
stc
push
loopne
push
dec
jge
stos
fcmove
xchg
push
dec
rolb
fs
movsb
mov
jge
jg
push
mov
ss
sbb
jnp
and
int3
jnp
aaa
shrb
test
pop
repnz
popf
pop
jmp
mov
mov
and
stc
jbe
arpl
adc
test
gs
jne
daa
and
cli
fcomp
and
mov
jmp
lea
imul
jmp
dec
aas
or
out
pop
test
mov
fwait
arpl
daa
inc
dec
mov
push
popf
cmpl
fnstcw
jg
xor
cmc
notl
es
mov
pop
andl
mov
pop
add
adc
dec
mov
mov
xchg
lods
call
cmp
gs
xor
add
repnz
dec
inc
mov
or
aaa
mov
aaa
into
add
std
push
stos
rcll
addb
iret
das
add
test
mov
scas
sbb
stos
f2xm1
pop
add
mov
mov
in
mov
dec
and
or
cld
mov
or
jns
xor
jl
stos
pop
out
or
cmpsb
sahf
add
std
stos
lods
test
out
pop
add
pop
jnp
sub
nop
ss
xchg
insb
dec
fldl
xchg
add
cmpsb
out
lods
and
inc
xor
out
imul
in
dec
bound
pop
jb
jbe
push
lods
je
cmp
push
cld
adc
sahf
adc
scas
loopne
in
fldl
fstpt
fldt
push
setle
movsb
adc
jnp
out
scas
lods
push
sbb
push
stc
push
push
div
aas
adc
shlb
addb
rclb
pop
nop
xchg
mov
xchg
fidivrl
sbb
call
rcll
mov
shll
std
movsl
sbb
or
fnstcw
sub
push
xor
mov
xlat
aam
daa
mov
mov
fsubs
rclb
in
xchg
cmp
out
pop
std
push
stos
lcall
or
aam
fs
and
mov
xchg
push
jge
mov
sarl
sub
loope
add
inc
jb
test
cli
cmpsb
xlat
jno
xchg
insl
mov
das
cmp
popf
lock
loopne
leave
mul
mov
pushf
jnp
lret
mov
cmp
push
test
pushf
icebp
adc
push
jnp
fdivl
sub
shrb
fmuls
and
adcl
dec
stos
fs
pop
dec
jae
or
or
xchg
push
scas
dec
sbb
xchg
pop
xor
or
push
push
jmp
xor
scas
mov
je
jno
adc
ret
cli
clc
fwait
rol
mov
fbld
pushl
push
sbb
ss
out
pop
jbe
xchg
sbb
arpl
mov
je
mov
fs
mov
into
sbb
test
pop
pop
subb
negb
mov
push
adc
es
outsb
stos
and
mov
rclb
jo
pop
cs
cmp
lret
and
imul
cmp
enter
jge
mov
repnz
fcoms
fisttpl
aas
loope
xchg
int
dec
inc
fcmovb
jno
mov
call
stos
adc
movsl
or
cmp
rorb
add
adc
imul
or
or
lcall
mov
add
adc
jo
adc
adc
adc
sbb
add
orl
adc
pusha
jo
sub
inc
nop
sbb
out
and
fwait
jecxz
mov
jns
dec
imulb
hlt
add
pop
inc
es
out
pop
notl
bound
adc
mov
in
push
pop
mov
jle
adc
test
mov
loop
adc
popf
std
cmp
mov
jo
inc
ret
or
cmpsb
dec
mov
xor
adc
mov
loop
jg
mov
pop
and
sub
testl
mov
xor
in
mov
sbb
cmp
xchg
sub
int3
out
repnz
hlt
mov
vsubps
push
imul
std
inc
and
or
cmp
out
movb
push
dec
outsb
repz
daa
je
add
setp
hlt
into
xchg
dec
fisubs
pop
movsb
stc
mov
inc
repz
movsl
pop
shll
xchg
adc
gs
jl
sbb
addr16
lods
sub
mov
jae
push
sbb
pop
sbbl
mov
outsl
lods
mov
dec
or
cltd
dec
and
sbb
test
test
and
movsb
and
xor
sbb
jne
lcall
dec
sub
add
nop
pop
js
ljmp
and
mov
rorl
sbb
xlat
shll
pop
inc
insb
pop
cwtl
mov
pop
mov
inc
outsb
push
cltd
pusha
gs
movsl
cs
clc
xor
aaa
adc
orl
iret
mov
push
pop
jbe
lret
cmp
insl
imul
push
cmpsl
scas
jge
test
divb
test
cltd
push
mov
ljmp
lahf
js
fstpl
aam
adc
pop
pop
and
mov
cwtl
sub
xchg
mov
push
inc
int3
lret
iret
ljmp
lret
loopne
fisubrs
fildl
pushf
pop
dec
cwtl
aas
leave
pop
fwait
cltd
jne
icebp
inc
push
or
mov
aam
sbbb
cmp
mov
in
call
add
adc
pop
dec
sub
hlt
cs
add
push
jne
js
daa
push
dec
mov
movsb
rcll
push
pop
test
cmp
js
scas
xor
mov
sahf
inc
jnp
shlb
adc
rclb
mov
mov
add
cmp
int
clc
into
inc
pop
jge
je
lods
dec
repnz
xlat
lods
pop
inc
mov
lods
push
inc
stc
sbb
jmp
repnz
in
outsl
push
icebp
fcomps
xor
sbb
outsb
cmc
cmp
mov
rcl
add
cs
daa
testb
or
leave
and
inc
adc
pop
pop
inc
pushf
inc
jmp
cltd
sub
clc
sbb
ds
in
dec
pop
xor
test
and
inc
ljmp
addr16
bound
scas
nop
push
mov
pushf
dec
xchg
outsl
lret
mov
push
sbb
xor
pop
add
arpl
xchg
pop
lahf
mov
pop
jp
mov
xor
inc
add
out
add
jp
aaa
xor
push
mov
xor
lret
sub
add
push
cmpsb
inc
mov
sub
or
leave
ss
in
jo
mov
loope
pushf
stc
jge
push
xor
lea
lock
mov
aad
cltd
adc
shll
test
push
add
sub
dec
inc
push
or
movsl
xor
in
push
xchg
lahf
dec
int
add
add
add
add
add
add
sub
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
dec
add
sbbb
add
outsb
add
or
add
add
add
add
add
add
add
xchg
add
add
add
add
add
sbb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
in
add
add
add
push
add
add
dec
add
dec
add
add
dec
add
push
add
dec
add
add
inc
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
add
or
or
or
or
or
add
add
add
or
or
or
or
or
or
add
add
or
or
or
or
or
or
or
or
or
or
or
or
mov
add
or
or
add
push
xor
xchg
xor
xor
and
psrad
and
loop
and
loop
and
loopne
push
pop
out
data16
ud0
jmp
cmp
aaa
mov
pop
fwait
cmp
shr
jne
inc
aad
imul
inc
mov
jnp
divb
adc
popw
jnp
repz
cmc
fistpl
fisttps
mov
ljmp
lcall
mov
add
lea
enter
stos
sbb
rolb
popa
mov
cmp
in
subl
pop
stos
inc
mov
fld
mov
cltd
mov
and
sub
push
sub
fisttpl
lret
ficoml
mov
movsl
cmp
scas
cltd
pop
sub
fs
push
xchg
popa
shll
adc
fiadds
lret
mov
sbb
cli
jmp
xchg
es
das
jle
sub
pop
lahf
xchg
xchg
loop
mov
mov
arpl
xchg
out
fwait
xchg
addb
mov
les
pop
dec
insl
jmp
lods
in
leave
add
test
addr16
in
nop
adc
add
dec
adcb
arpl
push
je
call
cwtl
cwtl
sbb
out
push
mov
jecxz
jl
push
in
loop
mov
mov
dec
xchg
aas
jecxz
inc
popa
push
out
xchg
mov
xchg
cmc
out
pusha
cmp
jp
test
out
data16
shll
and
pop
mov
in
xchg
adcl
dec
mov
iret
xor
cmp
fcmovnbe
add
add
and
add
inc
mov
mov
cmpsl
cwtl
icebp
adc
xchg
dec
jmp
sub
and
sahf
jbe
enter
subl
movsl
add
mov
test
mov
jp
test
out
fisttps
cmp
mov
hlt
repnz
stos
sbb
and
repz
mov
or
sub
aas
mov
inc
sbb
add
jle
cli
mov
xlat
mov
clc
addr16
pop
xor
dec
cmpsw
movsl
push
push
inc
dec
fcmovu
add
loopne
fists
mov
in
stos
addr16
or
pop
lea
dec
out
mov
stos
cli
xchg
fstpt
movsl
mov
in
sbb
xor
ret
pusha
hlt
jns
mov
outsl
and
bound
mov
push
dec
mov
or
mov
imul
ljmp
add
scas
adcl
adc
jno
mov
cmp
cld
leave
pop
jp
out
xchg
lahf
das
iret
repz
insb
iret
cmovbe
pop
jge
or
inc
leave
xor
push
lea
pop
inc
test
and
or
jp
add
adc
std
fsubs
mov
addr16
sub
add
add
xlat
sahf
sbb
sub
rclb
and
loope
test
dec
lods
inc
mov
add
stos
xchg
imul
outsl
idivb
ja
add
xchg
fidivl
loope
sub
xor
pop
and
mov
mov
adc
stc
ljmp
ss
push
sub
bound
cmp
test
mov
push
pushf
ret
cmc
add
sub
dec
mov
lret
aas
adc
jge
fstl
add
shrb
mov
jmp
test
cmp
lock
lds
sub
xorb
imul
je
das
sahf
test
mov
repnz
jne
mov
inc
xor
mov
outsl
pusha
int3
dec
adcl
cmp
mov
js
das
call
mov
jo
popf
inc
repnz
sbb
inc
cmpsl
cmp
cmc
xor
imul
out
stc
add
push
ret
adc
add
jne
lret
jbe
sar
mov
mov
jns
popf
pop
jbe
fsubr
cmp
xorb
in
cmp
mov
push
and
test
scas
fdiv
rol
mov
arpl
dec
dec
cmpsb
jle
adc
xor
stc
in
jno
xchg
sbb
add
lea
adc
in
scas
cmp
pop
adc
jno
adc
mov
jl
cltd
iret
popf
adc
mov
fwait
enter
iret
xchg
nop
cwtl
sub
sub
icebp
mov
adc
sub
loop
pand
xchg
jbe
scas
test
sub
xchg
iret
add
testb
mov
ficompl
fidivs
arpl
out
jne
inc
aad
js
push
fcmovbe
mov
mov
pop
xchg
aad
jg
insl
addr16
mov
pop
push
fs
popa
xor
push
addb
shrl
mov
push
push
inc
xchg
add
mov
test
jge
subl
loopne
bound
add
mov
mov
add
mov
add
enter
es
test
or
mov
mov
ret
dec
push
push
std
jmp
lods
int
imull
push
push
neg
pop
gs
shll
lock
out
jbe
pop
cmp
dec
xchg
adc
and
adc
pop
cmp
xchg
push
xchg
sti
out
xchg
jns
subb
adc
daa
add
mov
cmpxchg
sahf
mov
mov
inc
inc
inc
test
test
mov
jle
mov
jp
sub
mov
add
push
xor
cmp
xchg
mov
push
ret
xchg
stc
test
stos
stc
mov
loope
mov
dec
jmp
inc
pop
push
add
dec
sti
mov
repz
popf
mov
mov
pop
aam
pusha
xor
or
mov
add
ret
inc
out
movsb
movsb
repnz
mov
add
pusha
popf
xchg
cmp
sbb
mov
pop
in
xchg
shll
fisttpll
ret
cmp
push
add
add
fnstcw
aas
dec
fistps
pushl
psubb
aas
aaa
imul
mov
daa
add
xchg
sahf
mov
in
sub
cli
sub
xor
push
push
out
xchg
test
sbb
or
sub
sahf
pop
xchg
repz
cmpsb
cs
xchg
imul
jne
bound
ds
data16
xor
bound
pop
mov
mov
inc
lods
xchg
dec
insl
and
add
imul
outsl
cli
adc
in
js
mov
enter
jle
jle
popf
jo
dec
pop
xchg
iret
lods
mov
dec
mov
push
loopne
and
stos
pop
mov
lcall
cld
call
adc
inc
popa
mov
mov
xchg
push
mov
add
mov
inc
inc
inc
jo
add
lds
push
lahf
xchg
andl
enter
inc
fildll
mov
pusha
subl
subb
mov
jp
cmp
or
hlt
inc
dec
add
adc
cmp
scas
push
rcrb
dec
fiaddl
lods
xchg
push
mov
inc
and
out
repz
stc
push
adc
and
push
inc
push
mov
mov
leave
fnstenv
loopne
popf
imul
out
ja
cmpsb
mov
addr16
push
pop
jmp
mov
std
push
sbb
aad
es
mov
into
pop
test
and
or
out
arpl
into
sti
mov
xchg
sub
lcall
hlt
and
and
stos
dec
xchg
out
pop
xor
dec
imul
fildll
pop
cli
mov
mov
lods
dec
incl
add
push
mulb
aad
test
jns
pop
push
pop
loop
js
pop
cs
mov
adc
pop
aas
int
imul
cmp
pop
js
sahf
mov
jl
sub
sub
xor
pop
pop
xchg
mov
pop
xor
loop
outsb
push
lea
dec
jle
ret
jp
dec
shrl
jne
div
jp
or
cmpsl
mulb
cmpsl
inc
cmpsl
sub
or
and
in
enter
test
enter
xor
ret
mov
out
add
int
fwait
pop
push
sbb
mov
push
or
mov
insl
sub
je
ss
xor
adc
lock
pop
test
cld
push
pushf
push
pop
mov
aaa
or
incb
xor
jae
outsb
sbb
ret
sbb
insl
xor
mov
stc
mov
mov
jnp
push
dec
xchg
iret
push
jb
sbb
andb
mov
inc
shl
and
jl
pop
fistpll
int3
in
mov
push
sub
push
cmp
inc
dec
sbb
mov
ds
and
mov
mov
sub
in
test
inc
ret
insl
jo
bound
mov
pop
push
push
sub
lock
inc
mov
cmpsb
mov
bound
mov
ja
adc
pop
fstpl
xlat
jnp
addb
pusha
adc
xchg
push
addl
dec
or
jp
loopne
jp
xor
lret
adc
mov
pop
push
stos
aaa
cli
addr16
xorl
test
push
clc
pop
dec
cmp
adc
rcrb
jno
in
xchg
pop
cmpsl
lret
push
pop
or
add
ds
nop
push
insb
mov
xor
movsl
dec
dec
dec
and
or
test
stos
mov
xor
lods
iret
dec
aam
pushl
dec
pop
mov
mov
mov
jl
push
jp
es
xor
ret
push
dec
ret
jb
addr16
mov
mov
fbstp
pusha
out
jb
pop
inc
roll
add
or
mov
rorb
aad
mov
outsb
in
add
aaa
jae
cli
cld
inc
movsl
sub
or
lds
push
pop
sbb
mov
dec
in
mov
jb
inc
jbe
scas
in
test
and
pop
sbb
and
sbb
lahf
popa
hlt
data16
movsb
mov
fprem
cmp
jno
lock
dec
sbb
push
pusha
push
gs
scas
jbe
mov
ja
lret
pop
sub
push
dec
scas
in
adc
insw
ret
aam
sub
das
lret
or
adc
dec
lret
outsl
retw
mov
fnstsw
mov
jo
or
popf
adc
push
or
loope
adc
push
gs
pop
add
xchg
xchg
lcall
pop
dec
add
mov
pop
mov
xchg
lods
imul
sub
xchg
cwtl
shr
mov
mov
fs
cs
daa
mov
mov
lret
aam
aam
icebp
add
add
mov
or
push
pushf
cld
lds
je
add
mov
in
jg
loop
call
adc
inc
pop
pushf
xchg
mov
sbb
mov
rolb
sti
push
ret
pop
fcmovnu
sub
bound
enter
insl
je
dec
mov
repz
sbb
lret
movsl
arpl
mov
stos
adc
mov
cmp
ret
mov
xchg
add
fcomi
scas
sub
pop
sub
jne
pop
fsubrl
fstpt
jl
test
cmc
mov
jp
es
fmuls
dec
int
insb
xchg
inc
movsl
pop
jle
loopne
push
fiadds
mov
xchg
and
sub
sub
mov
mov
dec
into
mov
imul
xlat
mov
mov
sub
rcrl
icebp
mov
mov
adc
adc
cmp
jae
cmpsl
or
frstor
ret
and
mov
sub
clc
xor
lcall
inc
jge
mov
adcb
xor
lcall
pop
jnp
sbb
cmp
pop
filds
fs
fcomip
pop
ret
xchg
pop
dec
scas
jmp
or
xor
dec
fstl
int3
loop
adc
repnz
bound
in
aaa
outsl
push
mov
add
push
xchg
pop
data16
imul
cwtl
xchg
cld
cs
ret
pop
mov
xchg
push
jg
sarl
push
cmp
aaa
or
mov
arpl
xchg
mov
and
inc
loop
jmp
cmpsl
dec
xchg
je
and
iret
sbbb
jp
stos
jg
or
ret
mov
and
daa
sub
push
mov
and
cmpsl
test
and
push
mov
lds
mov
jecxz
scas
dec
pop
mov
mov
dec
rcrl
cmp
push
out
push
scas
xor
jmp
pushf
pusha
std
adc
ja
dec
fcoms
pop
sbb
mov
pop
jmp
mov
ljmp
mov
jecxz
les
shll
sahf
hlt
stos
dec
and
fdivs
mov
fdiv
lahf
and
cmpsb
test
push
xlat
xor
mov
ror
fwait
in
mov
cwtl
xchg
cmpsb
mov
mov
daa
les
jp
jmp
jb
test
add
fs
push
mov
aad
shl
ljmp
ljmp
pop
push
sbb
mov
mov
push
gs
pop
push
xlat
xor
cmp
dec
dec
pop
lahf
pop
fnsave
mov
shll
clc
frstor
adcl
lcall
push
cmp
sbb
cmc
ss
lea
gs
mov
rclb
mov
mov
cmp
roll
sbb
inc
testl
jecxz
adc
xchg
push
add
js
nop
sbb
out
adc
mov
sub
sub
lea
xorb
ficoms
sub
push
pop
dec
mov
movsb
adcb
jmp
mov
int
clc
mov
outsl
xor
xchg
test
out
pop
test
fidivl
inc
dec
sbb
icebp
dec
iret
js
add
mov
pop
add
add
mov
xchg
pcmpgtw
out
scas
adc
jmp
or
sub
adc
adc
outsl
push
sub
xor
insl
mov
and
jle
jnp
dec
xlat
sbb
movsb
rcl
or
cmp
outsl
mov
jmp
push
out
clc
clc
sarb
mov
outsl
fimuls
or
sub
pop
loop
sub
ds
mov
add
in
jnp
ss
push
jae
imul
dec
jbe
dec
xchg
imul
xlat
sub
cmp
loopne
fstpt
bound
out
mov
pusha
aaa
add
cmp
cli
fisubl
mov
outsb
inc
cmpsl
daa
into
xchg
xchg
lds
sbb
add
test
jae
pop
or
add
cmp
sti
xchg
inc
clc
aas
daa
rcrb
inc
orl
dec
mov
cwtl
push
jge
movhps
int
pop
jl
stos
sub
xchg
mov
in
xchg
adc
mov
jne
mov
stos
mov
leave
xchg
test
movsl
sbb
shrl
aas
loopne
or
scas
jnp
js
dec
pop
push
ret
cmp
aas
jle
mov
xor
cmpsb
ds
or
and
dec
shll
adc
mov
jbe
xchg
into
mov
fists
sbb
sub
and
mov
fimuls
mov
mov
pushf
inc
pop
shl
xchg
int3
movsl
xchg
insb
push
add
test
or
out
sub
add
add
xor
repnz
in
mov
imul
push
or
testb
shld
shrl
andb
jns
xor
or
jmp
pop
sub
lret
mov
nop
fidivrl
mov
jl
dec
aas
and
xchg
bnd
cwtl
inc
or
out
cmp
sbb
pushf
stc
stc
ret
xor
sub
stc
dec
cmp
sahf
sub
push
outsb
cltd
mov
jmp
rcll
inc
in
xor
insl
imull
sbb
iret
rcrb
movsb
rcll
cmp
fldcw
add
fildll
int
popf
jbe
loop
mov
adc
cmp
cmp
sub
and
dec
cli
push
lcall
inc
pop
mov
xor
inc
sbb
jnp
in
cmp
cmp
push
sbb
cwtl
and
movsl
cmpsl
cmp
fistl
and
cmpb
hlt
mov
mov
push
loop
cld
or
cltd
lea
push
mov
jecxz
addr16
or
shl
xchg
inc
int
lods
movsl
mov
int3
nop
mov
and
or
das
pop
clc
int3
push
push
adc
cmp
or
or
jmp
imul
and
sti
pop
fldcw
cmpb
dec
les
mov
mov
jecxz
hlt
add
or
jo
or
repz
mov
cmpsl
popa
jle
icebp
test
pop
pusha
mov
jnp
xor
aaa
cmc
adc
xchg
add
shlb
xchg
mov
js
pop
mov
test
test
roll
ret
sti
push
test
ds
lcall
lahf
shlb
mov
jecxz
js
pop
pop
ret
add
xchg
cmpsb
imul
stos
aam
add
xlat
cmp
jecxz
int
or
cmpsl
cmp
inc
or
mov
sbb
add
out
ret
and
sub
add
rcll
xchg
test
fnstcw
adc
leave
out
icebp
or
dec
imul
ficompl
push
lahf
ja
enter
into
xchg
mov
pop
mov
shrl
push
pop
insb
adc
gs
mov
mov
cltd
shll
sti
push
lods
xchg
jecxz
nop
push
inc
mov
pop
outsb
test
cmpsl
lds
fsub
jecxz
xchg
xchg
jo
test
add
adc
sarl
add
pop
cmpsl
xchg
cwtl
fwait
nop
popa
cmpsl
lock
cmp
pop
loope
ja
mov
cltd
sbb
push
sub
mov
sub
cmp
dec
ja
pop
lahf
mov
adc
sub
test
mov
xchg
xchg
push
xor
push
lret
jbe
in
and
mov
jg
int
mov
test
mov
sahf
cltd
adc
lds
add
cltd
bound
push
mov
sub
outsb
aaa
loopne
pop
loope
or
sub
lret
or
cs
sub
push
movsl
cli
fs
cmp
mov
bound
ja
cmpsl
fidivs
addr16
push
std
icebp
or
cld
xchg
mov
sbb
call
aad
lds
cmp
add
das
sub
jl
push
sub
mov
sub
xchg
insl
pop
dec
xor
jo
xor
fdiv
jae
cwtl
mov
xor
jno
call
lcall
adc
dec
mov
out
mov
lcall
pop
pusha
xchg
and
pop
jae
xor
pushf
cmpsb
loop
push
mov
fildll
shll
xor
cmp
insl
mov
cli
push
mov
cld
pushfw
push
adc
in
mov
add
fisubrs
movl
jae
dec
push
jno
adc
ret
out
hlt
xchg
popa
icebp
or
jbe
lret
sbb
dec
sbb
loope
or
addb
inc
add
inc
xchg
push
add
repnz
push
test
inc
orl
or
insl
jno
pushf
mov
cmp
sbb
xchg
inc
pop
cltd
xor
aas
ficoml
lret
sahf
cmp
xchg
pop
out
ret
jbe
arpl
es
sub
adc
xchg
lock
sti
sbb
pop
test
mov
stc
lods
cltd
imul
sahf
in
in
sub
into
mov
test
gs
cmp
daa
push
movsl
arpl
ffree
sbb
dec
sbb
dec
jo
xor
pushf
lahf
jp
mov
stos
dec
ret
lods
test
clc
adc
cmp
or
inc
ja
rorb
adcl
jge
inc
sbb
in
lret
cmp
sbb
and
bound
lea
push
pop
pop
outsl
fstpt
mov
int
sub
cmpsb
dec
aas
adc
or
xchg
lods
in
sahf
mov
lods
dec
mov
sub
popa
inc
adc
push
or
fstpt
stos
adc
jecxz
cmpsb
les
das
push
push
js
jnp
loope
push
mov
repnz
ja
mov
cld
loope
jae
js
sahf
popa
jl
push
fmuls
push
or
enter
dec
fdivl
mov
push
push
jbe
call
ret
push
stc
adc
loopne
imul
inc
xor
sti
in
jbe
out
repnz
daa
jmp
aas
xchg
aad
shl
repz
and
mov
xor
fmull
add
dec
xchg
sti
test
pop
pusha
ss
mov
lods
xor
hlt
cs
enter
pop
enter
pop
add
adc
mov
inc
add
ret
fwait
jmp
add
mov
pusha
dec
or
addl
ss
ret
inc
pusha
outsb
add
lcall
pop
repnz
aam
ss
dec
push
xor
sti
js
ljmp
in
inc
cmp
push
cmpsl
insl
cld
popa
jmp
cmp
sub
call
and
push
aaa
arpl
sub
xlat
addl
adc
aaa
pop
fwait
nop
lcall
mov
xor
sbb
jae
push
sub
daa
hlt
gs
test
into
leave
cmpsb
loopne
test
insb
iret
outsb
fucomi
cltd
sahf
and
dec
je
cmp
pop
mov
les
sbb
repz
outsl
pop
in
adcl
pop
fcoms
mov
push
or
js
js
add
jns
mov
rcr
xchg
call
scas
les
push
subb
paddsw
dec
andb
mov
fnsave
imul
popa
jns
orl
inc
jbe
test
xor
repnz
xchg
xlat
insb
popa
xchg
stos
pop
aad
jns
and
jle
pushf
jo
daa
mov
cmp
roll
jns
push
cmc
leave
and
addb
mov
adc
call
adcb
addr16
mov
and
push
mov
or
and
scas
pop
cmp
icebp
adc
ret
mov
sub
shll
fdivrl
mov
jl
shll
inc
mov
jns
sti
adc
cld
cmp
inc
ucomiss
push
jle
daa
adc
xchg
pop
mov
in
xchg
pop
jp
dec
adc
pop
pop
lret
push
fisubs
data16
xchg
xchg
bound
mov
mov
push
out
cld
rcr
ret
int3
fisubrl
dec
cwtl
stc
lahf
push
dec
das
sub
dec
scas
mov
jge
push
test
push
mov
cmp
rcrl
popa
cmovs
adc
mov
push
cltd
mov
or
or
jp
xchg
sub
sti
loopne
cmpsl
mov
mov
pop
mov
mov
dec
cld
mov
xor
scas
addr16
js
sbb
popa
repz
or
in
mov
and
lahf
mov
mov
mov
sub
lcall
ret
scas
inc
in
rcrl
add
ret
mov
sbb
mov
pop
sahf
roll
mov
pop
inc
pop
pusha
sub
xor
mov
mov
xor
out
das
sub
jmp
mov
int3
das
and
int
shll
inc
jnp
mov
out
lret
rclb
loope
lods
lahf
sbb
xchg
inc
sub
sub
xor
orb
lret
mov
das
push
xor
pop
int3
repnz
fisubs
enter
or
ret
xor
jp
mov
aaa
sbb
mov
push
and
cmc
int3
push
jle
insb
arpl
push
sbb
addr16
cmp
gs
pop
fidivs
and
mov
jp
pop
adc
and
xor
fiadds
jae
jne
inc
push
mov
dec
scas
add
jmp
adcl
sub
xor
popa
mov
mov
in
test
push
mov
mov
cmp
jns
cmp
push
xchg
ficompl
hlt
fs
push
push
addl
inc
wbinvd
xchg
inc
std
imul
cmp
scas
popa
mov
inc
mov
and
or
test
cld
add
call
mov
pop
push
push
loop
push
push
movsb
incb
mov
addr16
pop
aad
or
movsl
cld
insl
loop
icebp
xor
js
popf
aam
cmpsl
andl
in
cli
addr16
jmp
cmp
jg
sub
mov
xor
mov
jg
pop
loopne
push
push
imul
js
adc
mov
fdivrl
test
hlt
inc
arpl
sbb
add
gs
mov
sub
shll
daa
jl
repz
adc
pop
aam
mov
inc
jne
fs
fucomip
sub
ret
jmp
daa
xchg
or
data16
aad
adc
iret
cs
loop
dec
xchg
fcoms
jle
add
push
lods
lahf
icebp
cmp
ljmp
test
test
cmp
mov
adc
push
repz
push
or
jecxz
int3
dec
push
shlb
repz
stos
lss
ret
mov
aad
mov
shl
lods
testb
mov
dec
mov
pop
mov
in
mov
cmp
cs
sub
pop
dec
iret
pop
cltd
adc
pop
fiaddl
enter
push
je
dec
sbb
fsub
fisttpl
adc
xorl
lods
and
insl
shrl
je
jne
xchg
adc
andl
test
fdiv
clc
or
xchg
dec
stos
or
fwait
push
or
out
test
jg
pop
pop
and
inc
xchg
add
test
inc
cmpsl
sub
daa
lret
pop
push
data16
push
sbb
icebp
xchg
sub
sbb
into
in
jo
pop
pop
fisttps
clc
lea
callw
push
fdivr
cld
inc
mov
pop
mov
pop
fcmovnb
shlb
punpckldq
jne
call
sub
push
jmp
lahf
or
sbb
adc
test
int
and
mov
xor
mov
cmp
pop
out
test
jno
ljmp
fisubrl
test
mov
in
xchg
decb
cmpb
jne
jo
and
mov
popl
sub
scas
test
xor
mov
loopne
dec
fucomip
rolb
dec
cmp
push
push
sbb
lods
cmp
xchg
cmp
add
mov
push
shl
cmp
shll
out
call
mov
neg
std
imul
dec
push
lret
outsb
scas
jns
cmpsl
push
and
pop
cltd
and
adc
dec
aaa
rcrl
push
lcall
shrl
xor
jnp
in
jns
push
and
je
fisttps
and
lock
stos
mov
xchg
scas
loope
jl
scas
jg
insb
movsb
nop
insl
jbe
mov
jge
fildl
cli
add
mov
addb
inc
xor
scas
lea
or
cmp
int3
out
mov
and
loopne
jge
sbb
sbb
pop
fdivs
insb
push
std
in
pop
add
jg
jns
push
std
add
xchg
bnd
xchg
data16
jecxz
mov
sahf
addr16
addr16
dec
cmp
or
sbb
idivl
inc
popf
push
cmp
xchg
push
lea
sub
ret
std
inc
push
inc
pop
adc
mov
jecxz
adc
fisubrl
fs
xchg
xor
test
and
sub
lcall
push
lds
mov
mov
cmp
or
add
pop
mov
out
sbb
xchg
pusha
das
mov
dec
out
cmp
ror
scas
mov
sub
lock
movsb
pop
out
imul
push
dec
fmull
lods
rolb
fistps
xor
ds
pop
in
sbb
imul
ror
shrl
xor
shrb
bound
adc
fldl
lds
sub
inc
das
pop
sbb
movsb
into
push
add
jae
jbe
adc
add
jge
sbb
lods
fwait
repnz
in
out
loopne
push
ss
loope
dec
sar
popf
mov
xchg
cld
mov
clc
cmpsl
add
adc
mov
pop
xchg
loopne
imul
cmp
pop
add
or
mov
inc
push
sbb
sbbb
into
mov
outsl
pop
sarb
imul
add
sarb
sbb
xlat
clc
popf
das
mov
jge
cli
andl
adc
outsl
sbbb
out
pop
loop
mov
ret
mov
lods
xchg
mov
pop
fwait
xlat
cmp
xorb
dec
mov
mov
aas
xlat
xor
push
inc
or
pop
jg
stc
inc
jo
mov
sub
mov
xchg
xchg
loop
adc
adc
out
lcall
and
test
cmpsl
lahf
pop
adc
jno
scas
fidivrs
fildl
sbb
inc
inc
movsb
insb
out
adc
mov
cmp
test
je
xchg
imull
orb
lods
in
and
xor
nop
and
loope
mov
mov
arpl
or
sbb
add
mov
mov
dec
push
sarb
push
inc
inc
jb
and
and
je
cld
jp
jp
arpl
rolb
mov
imul
inc
stc
inc
rorb
xchg
jle
mov
or
mov
and
push
cmp
mov
test
inc
push
lods
push
test
cld
insb
jb
or
push
adc
fs
adcl
lea
or
leave
idivl
mov
mov
jae
loope
mov
and
xchg
rol
lods
xor
in
mov
sub
pop
loopne
pop
mov
dec
add
lahf
scas
push
dec
fnstenv
pop
dec
pop
mull
sbb
mov
sub
clc
popa
push
lock
int
or
sub
into
roll
call
cmc
xor
push
insl
dec
int
repz
push
fldt
cmp
inc
push
adc
aam
xchg
or
mov
mov
or
cmp
scas
lods
cmp
xchg
inc
or
mov
cmp
inc
mov
repz
out
test
dec
test
enter
sub
adcb
xchg
mov
jno
push
stos
mov
orl
dec
cmp
pop
stos
sub
mov
jno
out
mov
int3
adcb
push
dec
xor
cld
int
mov
push
insb
add
jmp
pop
lds
push
mov
aaa
call
inc
divl
loop
jl
or
dec
add
das
dec
lret
aas
ss
mov
sti
das
aam
cmp
xchg
mov
jge
mov
cld
arpl
shl
lods
aam
and
sub
adc
dec
mov
imul
mov
jbe
dec
and
mov
mov
pop
inc
dec
mov
out
sarl
jae
pop
push
inc
imul
lock
push
sbb
pop
dec
lds
xor
add
clc
inc
insl
mov
jecxz
lahf
int3
mov
and
push
add
rcll
xchg
imul
jmp
and
shlb
pop
dec
mov
xchg
lcall
fisttpll
std
pop
mov
fadd
fnsave
push
push
adcl
notb
popf
lea
sti
dec
add
pop
mov
jne
test
xchg
sbb
arpl
outsl
addr16
add
je
push
adc
mov
js
mov
aad
fxch
xchg
sub
pop
out
mov
mov
and
aas
iret
sub
or
mov
pusha
lds
sub
push
mov
push
cmp
jae
jb
aam
xor
stos
cmp
scas
bound
gs
lcall
pop
sub
aam
push
xlat
scas
scas
dec
arpl
cmp
sti
stos
jmp
test
dec
mov
push
jae
xor
frstor
lods
out
mov
sub
in
ja
lahf
fstpl
sub
cmp
xor
mov
pop
lock
jmp
dec
mov
mov
adc
cmp
pop
jo
out
das
jb
lret
xchg
cmp
lcall
mov
push
ja
arpl
imull
fimuls
lds
cs
out
outsb
push
cltd
shll
out
das
popf
pop
sub
dec
out
repnz
movl
ljmp
in
in
in
aad
add
jo
and
cmp
adcb
xchg
push
scas
pop
daa
int
mov
popf
enter
cmp
cs
mov
fildl
cli
pop
sub
int3
sub
push
negl
frstor
movsb
jo
ret
xor
std
inc
stc
rorl
pop
shrl
dec
mov
push
sub
and
mov
push
shll
adc
ret
lahf
int3
outsl
stos
test
dec
sub
xchg
clc
pop
loopne
inc
lods
pop
ror
jecxz
or
push
add
xor
and
add
pop
jg
cld
in
push
adc
lods
sub
pop
inc
test
les
outsb
inc
mov
or
mov
xchg
sbb
lcall
fistps
dec
ljmp
mov
inc
xlat
xchg
leave
jne
jmp
jge
lea
cmpl
jmp
in
pop
jb
mov
hlt
add
insl
bound
fdivs
dec
or
bound
insb
movsb
ret
cmpsb
mov
ja
fdivs
xchg
and
sbb
andl
lret
cmp
inc
into
pop
into
or
sbb
push
cmp
mov
imul
andb
cmp
aad
mov
and
loopne
pop
xor
jne
fisubs
xchg
adc
mov
lret
add
add
push
div
fucom
or
mov
adc
pop
mov
mov
cmp
jns
test
push
push
dec
adc
sbb
inc
cmpsl
movl
jmp
inc
mov
cmp
adc
pop
jne
movsl
and
add
jae
push
adc
dec
mov
jo
icebp
leave
cs
and
aaa
adc
sbb
mov
mov
push
sahf
mov
pop
cltd
add
xchg
fcoml
cwtl
popa
or
rcll
popa
lods
dec
jmp
mov
xchg
fcompl
xchg
sub
xor
xchg
mov
push
sub
adc
lea
ffree
subb
inc
out
add
add
lods
daa
int
rep
std
imul
jno
dec
dec
stc
cmp
adc
pop
adc
or
jne
push
and
pop
cmp
dec
cmp
jl
jecxz
lcall
fs
xchg
shlb
js
addb
cmp
or
into
fwait
bound
pop
lods
mov
lock
or
popf
in
sbb
push
jmp
jle
daa
lea
mov
and
es
fneni(8087
lahf
enter
and
xchg
in
pop
sub
psrlq
inc
mov
outsl
outsl
in
mov
xchg
ljmp
jmp
mov
fmuls
loop
pop
aaa
pop
inc
inc
fistps
out
fadd
xorps
ljmp
mov
test
dec
dec
movsb
pop
adc
mov
mov
xchg
or
xor
jns
pop
mov
or
xchg
push
dec
roll
xchg
push
daa
pushf
mov
xor
mov
stc
add
js
jb
loopne
lret
inc
fadds
xchg
out
cmp
movsb
fidivl
rorb
dec
in
inc
icebp
add
out
jmp
push
data16
lret
pop
rclb
mov
addl
inc
sub
out
mov
xchg
xor
pop
dec
and
rorb
out
addb
hlt
dec
cmp
mov
xchg
mov
adc
cld
add
inc
push
mov
in
add
mov
int3
js
inc
in
xchg
hlt
in
xchg
push
add
ret
bound
mov
mov
mov
jp
imul
repnz
out
fwait
or
pop
inc
fbld
inc
mov
inc
add
pop
cmp
dec
mov
daa
sbbb
outsl
dec
fbstp
dec
push
and
fstl
xlat
push
or
pop
sub
and
imul
pop
pop
cmpl
sbb
sub
fadds
dec
adc
cli
cmp
notl
imul
ljmp
hlt
add
push
sbb
sub
mov
sbbb
cli
push
adc
in
push
sub
pop
cld
popf
negb
pop
sub
cmp
test
lock
inc
ficoms
addr16
sbb
std
mov
bnd
dec
test
addr16
je
xorb
repz
into
lds
jnp
pop
in
add
lods
jns
inc
sarl
aaa
cmp
xchg
cli
push
les
mov
ret
jo
ror
dec
cmp
jmp
xchg
neg
es
push
imul
out
mov
jmp
fsts
or
mov
xlat
pop
xor
in
insl
scas
mov
jno
inc
addl
cwtl
adc
sbb
fsubrs
je
pop
cmp
dec
call
imul
sbb
test
bound
mov
sahf
dec
xor
sbb
dec
in
jmp
ss
pop
inc
nop
sub
repz
inc
dec
das
pusha
movsb
pushf
xor
lock
mov
and
jecxz
aad
cwtl
mov
push
lea
fildl
mov
sub
mov
cmpsb
stc
dec
adc
adc
jl
je
dec
cmp
aam
xchg
das
pop
stos
lret
outsb
add
or
div
adc
push
aaa
pop
xchg
xor
mov
or
divl
dec
out
xchg
xor
loope
ds
cld
popf
dec
loope
add
pop
bound
call
js
rcr
push
inc
fs
orl
jp
xor
adc
sub
xchg
sub
adc
or
in
test
pop
sahf
mov
cwtl
lock
add
sub
leave
clc
jbe
je
jl
sahf
test
lret
xor
lock
and
out
adc
cmp
insl
xlat
jne
ljmp
mov
out
mov
out
mov
pop
push
sti
iret
dec
fsub
cs
scas
mov
std
add
loopne
rclb
push
sarb
movsl
xor
push
mov
pusha
movsl
cld
mov
sar
cmp
cmp
ss
jae
mov
mov
mov
jns
test
pop
outsb
bound
scas
sbb
jnp
push
lds
outsl
adc
ret
xlat
push
adc
xchg
ds
gs
test
push
xor
js
or
xchg
xchg
mov
mov
test
pushw
sub
sub
cmp
xchg
scas
sbb
ret
inc
jns
lret
pushf
mov
inc
adc
jmp
popa
int3
sbb
push
fbld
shr
in
out
push
rcll
xor
fiaddl
leave
shl
adc
add
pushf
in
mov
mov
mov
and
movsl
sti
lds
push
pop
jb
cwtl
in
shrl
stos
push
add
mov
repnz
dec
sbb
inc
orb
imul
cld
push
jge
push
pusha
xlat
sahf
lahf
mov
and
adc
mov
xor
or
into
mov
scas
aas
mov
sahf
dec
xlat
inc
decb
fbld
jns
xchg
push
sub
adc
sub
jmp
xlat
pop
std
aas
sub
mov
ljmp
or
loopne
rcl
push
xchg
mov
sub
jg
and
or
pop
ds
fsubl
pop
jae
mov
bound
mov
jecxz
jo
test
ss
push
mov
mov
jle
cmp
outsb
mov
mov
pop
adc
or
dec
aad
and
in
gs
mov
add
lods
into
inc
mov
mov
adc
cli
mov
mov
in
lcall
push
out
dec
lret
aam
ja
jp
fwait
pushf
or
sub
jbe
in
cmp
sarb
cmp
inc
adc
loopne
js
jb
pop
pop
jecxz
mov
stos
dec
pop
cmp
fxam
mov
iret
aaa
mov
add
and
aaa
pop
or
pop
or
pop
rcrl
cmp
jmp
or
push
lret
pop
mov
neg
sub
int
shlb
out
into
insl
fsubrp
mov
test
mov
inc
repnz
pop
les
pop
jle
mov
movsl
int3
inc
or
or
insl
push
jb
ss
icebp
mov
decl
mov
das
add
push
xchg
push
negb
cmp
cmp
and
cmpsl
scas
repnz
pop
or
int3
cmpsb
push
cwtl
push
xlat
lock
adc
mov
out
push
push
fcompl
int
sbb
pushf
fnsave
popf
repnz
mov
in
int3
push
cwtl
sbb
lea
push
sbb
inc
mov
or
shrb
cmp
mov
jbe
xor
call
lea
sub
lds
jb
insb
push
dec
out
sbb
insb
sahf
and
test
out
cli
pop
xchg
inc
sub
lods
add
data16
out
add
lds
mov
hlt
lcall
push
std
push
in
mov
push
pop
sbb
sub
sub
lock
bound
sub
sti
jno
pop
or
jg
outsl
repz
dec
repnz
test
push
pop
fisubrl
ljmp
add
fwait
sub
inc
and
ds
out
out
add
mov
ss
imul
scas
imulb
and
in
lods
sahf
jecxz,pt
and
stos
jg
popf
sub
and
push
inc
mov
or
xor
cmp
or
out
out
jne
daa
xchg
cmp
cmp
mov
push
ret
xchg
dec
not
cmp
jae
or
adc
pop
sbb
test
mov
cmpsl
aad
jg
sub
dec
fsubrp
jae
cli
cld
adc
mov
aad
in
cmp
int
sbb
imul
xchg
push
popf
dec
js
or
mov
insl
pop
ds
xchg
stc
xchg
or
ljmp
or
pmulhuw
pop
dec
mov
dec
jg
mov
pusha
and
or
sti
add
add
xor
mov
je
or
mov
sbbb
and
imul
aas
dec
xchg
cld
jmp
jmp
int3
xor
bound
pop
fisubs
notb
clc
cli
stos
xchg
sub
pop
cmp
andl
shlb
pop
and
xchg
sbb
mov
testb
pusha
cmc
into
movsb
aaa
mov
xchg
push
and
repnz
inc
and
xchg
dec
ss
int
sbb
inc
push
pop
ret
inc
or
scas
icebp
adc
inc
cmpsl
enter
cmp
inc
or
and
sbb
fcmovu
push
push
popa
in
roll
bound
xor
dec
cmp
jle
in
fiaddl
lcall
popa
jmp
pop
in
xchg
inc
nop
pop
inc
sub
ljmp
jge
dec
fwait
pop
je
xchg
mov
out
jae
sub
test
cmc
xchg
stos
push
push
div
out
out
and
lods
pop
call
and
scas
aas
pop
in
sbb
std
xlat
jecxz
adc
and
push
push
add
mov
mov
enter
dec
jnp
and
mov
push
xchg
lcall
push
jecxz
rcl
xchg
pop
in
out
ss
add
jl
and
mov
pop
cmp
pop
jne
outsb
pop
mov
test
jl
mov
mov
loop
pop
sbb
jno
adc
dec
outsb
xor
test
mov
das
cli
lods
inc
lret
and
out
and
add
clc
push
stos
mov
test
add
in
cmpsl
sub
or
and
cld
js
and
test
clc
xchg
ja
pop
jle
movsl
pop
negb
cld
adc
and
cltd
inc
cwtl
push
cltd
daa
inc
loopne
in
pop
mov
insl
mov
push
imul
rcll
lret
inc
fwait
cmc
xchg
jmp
popa
sub
push
xlat
repz
sbb
xor
mov
add
lret
lahf
mov
mov
sbb
int
and
stos
repnz
sub
push
cmp
sub
sub
xchg
shll
or
and
subl
mov
push
out
pop
cmpsl
out
fcmovu
and
outsb
icebp
and
inc
sbb
jns
aam
inc
cwtl
dec
mov
jno
dec
mov
mov
imul
cltd
inc
mov
out
call
cmp
out
push
mov
lea
lea
xchg
xchg
scas
mov
cmpsl
ret
fmul
dec
inc
xor
lods
dec
xchg
shl
push
pop
and
fcmovnu
iret
lods
imul
iret
jge
in
js
mov
jl
add
and
adc
xchg
mov
mov
scas
pushf
arpl
filds
fsub
mov
jl
decl
pushf
jae
xor
cmpl
and
jb
enter
mov
jmp
push
test
dec
data16
into
add
mov
rorb
jecxz
shrl
and
bound
fcoms
cmp
xor
aaa
subb
leave
roll
std
mov
push
mov
test
std
inc
bound
inc
jle
push
xlat
loope
sbb
adc
adc
push
xor
out
inc
pop
insl
jae
add
jne
push
mov
xchg
mov
xor
inc
es
rcr
bswap
lock
inc
imul
adc
sub
nop
or
loope
into
movsb
cmp
sub
mov
cs
mov
xchg
push
test
push
mov
mov
jg
jbe
or
sti
sub
sub
mov
mov
and
jl
and
or
xor
fs
or
push
gs
jae
xchg
test
std
mov
dec
test
cmpsl
mov
aam
mov
and
cmp
imul
or
cmpsl
rcll
movsl
shr
insl
mov
pop
stc
push
and
xor
adc
mov
mov
mov
outsl
xorb
imul
popa
aaa
dec
lret
sbb
fidivs
cmp
mov
inc
sti
xchg
mull
ret
push
cmp
int3
jbe
pushf
out
ret
lods
push
cmp
popa
pushf
sbb
sub
aam
cmp
cmp
fucomi
mov
add
mov
popa
push
movsb
les
aaa
test
xor
adc
movsl
add
stos
inc
imul
sbb
inc
mov
in
xor
sbb
xor
xlat
add
in
xchg
and
subb
dec
cltd
or
in
xchg
mov
jo
push
sub
jns
inc
pop
js
mov
les
xchg
je
mov
lahf
test
loop
lods
add
inc
test
daa
les
jnp
adc
push
mov
rclb
addr16
rcrb
sub
add
andl
cmp
cmp
lcall
sub
lahf
add
repz
cmp
iret
leave
or
xchg
sbb
jno
inc
push
mov
cmpl
rorb
mov
jle
or
sbb
fbld
test
shlb
push
leave
dec
pop
andl
push
insl
and
sub
fisubrs
cld
pop
call
icebp
sbbl
popl
loope
dec
insb
xchg
adc
xlat
pop
aam
jmp
inc
cld
sbbb
hlt
xor
sbb
mov
nop
push
or
pusha
addl
mov
inc
xchg
inc
inc
ja
inc
ret
mov
mov
aaa
inc
xor
mov
decl
das
and
mov
pusha
lahf
xchg
lcall
mov
xchg
adc
jge
insl
dec
fadds
lods
pop
stos
jge
into
mov
mov
mov
aaa
out
mov
in
jecxz
or
je
stc
dec
mov
xchg
jg
fcmovnu
fcompl
call
inc
push
jo
xor
xorb
lods
pop
mov
outsb
xchg
test
jbe
nop
or
dec
xor
loopne
test
pop
data16
push
mov
mov
fldenv
fistl
push
ja
mov
inc
mov
nop
or
or
sarb
or
outsl
outsl
shrl
mov
push
js
outsl
mov
jle
nop
cltd
pop
sbb
xor
mov
mov
adc
mov
xchg
add
ret
aam
xor
xor
es
movsb
cltd
jp
inc
rcrl
mov
ret
repnz
adc
xor
stos
cwtl
sbb
jg
pop
adc
add
arpl
cmp
andb
dec
mov
sbb
xchg
pop
cmp
mov
or
cmp
bound
cli
add
fistps
push
dec
addr16
mov
jns,pt
mov
gs
and
mov
mov
cmpsb
push
cmpsb
mov
fldl
and
lods
inc
shlb
jns
ret
cmp
cltd
lahf
insl
dec
xor
pop
aam
imul
push
mov
inc
sbb
mov
leave
setns
fldl2e
js
or
test
cs
jp
iret
subb
testb
sub
imul
fcom
jg
push
push
insb
pop
icebp
push
adc
fcomi
scas
xchg
fldl
test
dec
xor
outsb
cmpl
aam
pop
mov
outsb
sahf
add
cmp
test
inc
mov
push
lods
push
sub
cltd
lahf
jo
mov
adc
leave
lea
mov
add
es
data16
cmp
leave
sahf
das
sbb
pop
lods
cld
pop
mov
inc
lods
push
int
xorb
mov
shlb
fisubrs
push
aad
or
mov
and
jmp
daa
cmpsl
add
and
std
out
fsts
xchg
jns
out
add
mov
cli
shl
pop
mov
fwait
out
cmp
loop
aad
xorb
lret
in
or
cmpsl
add
mov
pop
jno
push
add
enter
push
lcall
rcrl
cs
push
xchg
push
gs
scas
test
out
add
and
jbe
mov
ss
lret
dec
test
adc
mov
adc
pusha
incl
jnp
dec
jmp
es
or
inc
mov
add
loopne
ret
sub
dec
push
sub
call
cld
into
js
xor
xchg
push
mov
into
lret
dec
dec
inc
shlb
mov
jmp
and
jge
and
test
addb
push
jmp
cmp
dec
mov
and
mov
pop
jne
jae
nop
add
add
jp
aad
fstl
jns
pop
xchg
inc
adc
adc
mov
fildl
lret
int3
xchg
adcl
mov
mov
jmp
pop
and
xor
mov
cmp
pop
outsl
push
cld
imul
es
lods
lods
nop
icebp
out
popa
xor
dec
bnd
int
sbb
fsubp
cmp
jno
adc
sbbb
inc
in
adcb
jecxz
lods
out
push
mov
repz
xchg
push
cmp
movsb
dec
and
pop
mov
sub
xorb
aad
dec
pushf
xor
xor
fwait
daa
mov
mov
dec
icebp
ljmp
mov
and
sbb
shlb
mov
flds
push
fdivrl
pop
enter
xorb
dec
and
jle
lds
in
inc
push
cli
sbb
mov
jp
mov
xchg
push
dec
ds
mov
xor
gs
sbb
and
out
fisubrl
repz
test
inc
test
add
push
cmp
xor
leave
mov
pop
mov
jecxz
xor
cltd
sbb
loopnew
sub
mov
xor
cli
rorb
push
rolb
movsl
mov
je
rcrb
pop
mov
mov
mov
add
and
jg
iret
push
mov
rorb
out
filds
scas
jne
cmpsb
mov
cmp
dec
xorl
pop
in
cmc
fdivr
jne
mov
mov
push
pop
nopl
pop
lods
pop
add
pop
jo
int3
jb
stos
rorb
push
loope
mov
bound
add
pop
cmp
jmp
mov
hlt
stos
out
jg
int
gs
lods
push
add
lcall
mov
add
enter
sub
jmp
scas
adc
add
mov
jg
mov
je
xchg
lock
push
and
cmp
push
pop
dec
push
inc
xchg
or
insb
aam
insb
xchg
stos
push
cmp
push
adc
test
loopne
push
jns
fsts
jecxz
pop
adc
dec
jmp
xor
and
mov
jmp
je
lea
sbb
stc
mov
incb
imul
adc
jae
and
and
bswap
cld
inc
cmpsl
in
int3
push
dec
icebp
xchg
mov
push
push
xor
mov
add
aad
adc
testb
in
inc
test
js
lods
scas
xchg
push
test
jp
into
iret
hlt
les
cmp
or
sub
mov
xor
push
or
fs
idivb
jle
cld
cltd
cmpsl
pop
push
or
loopne
mov
pop
pusha
adc
call
movsb
push
imul
mov
adc
insl
mov
or
out
aaa
sbb
lods
cmpsl
addr16
data16
push
aam
adc
adc
add
xchg
mov
push
repz
sub
cs
aad
outsl
jnp
jg
cmpsl
xchg
les
jle
push
or
cmp
push
out
mov
mov
xchg
andb
fsubr
andb
xchg
out
psubusb
popa
sub
mov
inc
movsl
je
lcall
mov
adc
nop
enter
jge
add
imul
add
jmp
iret
popf
std
sbb
fdivrp
movsl
jmp
ret
and
out
lock
insl
pop
push
ja
cmp
jno
mov
pop
addb
push
mov
or
fildl
popf
lret
repz
loop
dec
mov
inc
cwtl
mov
cmp
jl
or
mov
outsl
enter
mov
sub
fistpl
test
jbe
sub
fcomp
andl
cltd
aaa
xchg
sti
pop
cltd
rorl
pop
fnstsw
mov
mov
sti
shlb
add
jmp
pushw
pushf
bnd
push
or
adc
cmovs
add
mov
mov
mov
pop
push
in
cld
pop
in
xorl
pop
jmp
ss
fisubrl
fimuls
jb
imul
repnz
aam
out
mov
mov
push
idiv
outsl
pop
stos
dec
xchg
jmp
aas
mov
lcall
hlt
rcrb
outsb
repz
leave
imul
mov
out
cmp
fistl
std
leave
outsb
push
pop
cmp
cltd
ljmp
pop
jmp
push
dec
fists
cmpsl
mov
fnstenv
pop
mov
fdivr
adc
xchg
xor
cmp
xchg
notb
or
push
fsubrs
aas
scas
frstor
dec
or
ljmp
inc
mov
movsb
aad
nop
aaa
into
jnp
fcom
ror
cmc
sub
cwtl
in
mov
pop
fistl
jo
and
movsb
sbb
in
out
in
push
loopne
sti
rcll
pop
arpl
mov
adc
in
flds
adc
sbb
gs
pushf
cld
ljmp
and
nop
aad
xchg
out
dec
pop
inc
sub
and
daa
fnsave
add
add
push
xchg
testl
jp
push
add
addr16
sbb
rcl
xor
outsb
lea
adc
or
ret
jno
xor
jnp
insl
pop
inc
cld
push
loope
sub
and
mov
mov
cs
jp
inc
cmpsl
sub
mov
aam
xor
loope
ljmp
mov
mov
jae
fadd
stos
repz
shll
xchg
push
cmp
out
pop
xor
loopne
push
xor
pop
pop
sbb
lds
fadd
push
shl
fisttps
loopne
mov
cmp
xchg
xor
shl
or
pop
filds
cmp
dec
jmp
movsb
mov
imul
iret
and
out
mov
add
pop
and
outsb
popf
lret
jmp
push
ret
pop
cmpsb
add
or
pop
adc
movsl
push
xchg
xorb
roll
and
push
and
je
aam
mov
sbb
cld
cli
push
stos
xchg
mov
call
incb
popa
xchg
out
xorb
xor
mov
outsb
xor
int3
out
fdivp
mov
in
push
outsb
pop
arpl
arpl
mov
sub
and
push
add
outsl
imul
in
and
test
add
into
adc
ljmp
or
in
aaa
out
xchg
sbb
xor
sbb
arpl
push
xchg
cwtl
jb
sbb
jne
and
cmp
fwait
mov
fldt
insb
out
inc
mov
popa
and
xchg
add
jnp
add
sbb
loop
in
lds
xchg
sbb
dec
cmp
lods
jmp
or
fwait
jg
mov
dec
fwait
lcall
cmc
lods
nop
lret
or
dec
add
xchg
jle
and
sbb
jge
inc
mov
aad
pop
cmp
cmp
mov
dec
rcrb
lock
add
cld
dec
jo
popf
pop
lret
add
jp
add
add
jne
xor
push
in
adc
inc
int
loop
mov
jecxz
out
insl
mov
fdivrs
add
clc
ror
fcompl
jbe
cmpsb
sub
mov
jp
xor
repnz
push
lret
ret
add
sahf
lods
add
cmp
add
adc
movsl
cmp
daa
cld
fsubr
int3
push
mov
aad
adc
loopne
out
cmp
jmp
nop
sbb
es
daa
data16
adc
dec
lahf
data16
mov
stos
jnp
cmpsb
dec
fstpt
dec
loopne
dec
jno
mull
push
aad
xchg
sbb
xlat
mov
lcall
jae
popf
xchg
in
pop
and
pop
cld
sub
nop
mov
divb
test
cmp
push
lahf
jmp
int3
int3
scas
sbb
cld
jae
add
aas
push
ja
mov
fs
mov
jnp
inc
lea
xchg
jge
or
imul
out
cmp
in
lret
das
xchg
or
mov
mov
bound
gs
enter
jecxz
mov
add
repnz
jl
dec
clc
fs
mov
shlb
mov
xor
out
dec
inc
and
mov
daa
insb
and
or
fadds
sbb
mov
sbb
pop
sbb
cmp
jl
insb
pop
cwtl
sub
lret
hlt
aam
sub
in
sub
mov
mov
rclb
jle
scas
scas
xchg
jmp
das
outsl
and
nop
arpl
mov
dec
cmp
stos
push
inc
dec
cmpsb
cli
push
outsl
xor
inc
inc
sub
std
xchg
inc
mov
jmp
mov
mov
xorb
pop
add
xchg
push
scas
in
js
outsb
orb
repnz
or
xor
push
daa
daa
jecxz
cmpsl
pop
mov
jl
dec
addr16
cwtl
loop
and
or
rcll
mov
bound
addl
push
and
pop
cwtl
mov
shlb
xlat
imul
ds
mul
pop
dec
std
cli
mov
cmc
xchg
xchg
xchg
cmp
ss
cmc
lret
shlb
xlat
xchg
inc
rcll
xchg
xlat
hlt
adc
loop
cli
add
out
push
add
dec
out
dec
out
and
cld
into
jbe
mov
pop
mov
push
jo
push
dec
xchg
or
pusha
or
xor
xchg
jns
pusha
jno
jo
jno
cltd
js
outsl
mov
call
sarb
cwtl
divb
shr
xor
inc
insb
out
fcmovnu
lcall
cmp
in
add
mov
cwtl
jns
int3
add
adc
pusha
jl
daa
mov
cwtl
hlt
pop
jb
imul
addr16
dec
cmpsb
and
add
outsb
fsubr
in
mov
push
pop
mov
mov
pop
leave
stos
and
add
sub
sbb
pop
jge
inc
push
cmp
ret
jns
neg
lret
jecxz
add
hlt
ja
xchg
lcall
jae
add
fs
add
sub
outsl
js
ss
jnp
cmpsb
and
jo
ffreep
inc
mov
mov
std
push
repnz
cltd
sbb
or
mov
push
dec
push
xor
dec
daa
data16
pusha
inc
add
cmpsl
mov
push
jl
sub
iret
lock
mov
jl
sub
mov
int
mov
arpl
pop
xchg
loop
push
mov
add
jae
jl
sub
out
mov
out
mov
ret
es
lods
insl
out
or
sbb
sub
mov
stos
push
sbb
mov
in
lret
ljmp
int
or
out
cmp
test
in
jecxz
fcompl
xchg
lods
mov
sbb
xchg
pop
pop
arpl
fimull
dec
sub
inc
xchg
sbb
leave
dec
data16
loope
ret
cli
cmp
mov
xor
sbb
int3
nop
inc
in
mov
adc
test
dec
nop
into
loop
gs
pop
imul
jp
iret
inc
aaa
pop
popa
int
imul
add
and
or
xor
pop
lods
dec
ror
pop
jl
jmp
loopne
push
mov
cmp
mov
sub
shll
divb
stc
std
es
sti
gs
jne
jo
cmp
cmpsl
imull
mov
push
es
inc
scas
pop
repnz
aad
mov
jbe
icebp
pop
push
shll
sbb
xor
mov
or
cli
cli
inc
pop
push
sbb
cltd
sbb
fsubp
jle
ret
push
dec
stos
mov
and
repnz
sub
out
fadds
fmuls
sbb
fldcw
aas
adc
pop
adc
lock
xchg
lret
xor
cwtl
psraw
and
in
jge
add
xchg
cs
push
xchg
sti
clc
mov
test
imul
mov
adc
idivb
pop
xor
or
movsl
ljmp
cmp
adc
cmp
xchg
loop
push
push
fptan
cmp
push
les
mov
xchg
adc
or
or
popa
adc
repnz
cmp
jo
sbb
jl
sub
out
fisubrl
fwait
cmp
out
push
push
enter
inc
mov
mov
jmp
inc
aaa
fldt
ss
out
push
or
xchg
adc
shrl
and
inc
xchg
out
test
cmp
stos
fcoml
push
dec
lahf
jecxz
push
loope
mov
sbb
or
and
pusha
shl
sbb
test
scas
in
mov
and
add
test
xchg
xchg
test
out
out
jmp
push
fmul
sub
push
and
mov
decl
sbb
dec
out
int
mov
push
add
lcall
movsb
cli
inc
inc
cld
cmp
and
inc
mov
cmp
cli
mov
pushl
imul
scas
push
jmp
push
mov
inc
mov
stc
das
ds
mov
in
or
fucomp
xchg
testb
sub
xchg
into
imull
cld
std
loopne
out
mov
and
sbbl
insb
ss
scas
into
jbe
loope
nop
cmp
xchg
cld
jl
ret
repnz
pop
adc
sub
imul
call
mov
gs
rclb
repnz
repnz
in
mov
sub
mov
int
mov
push
and
sarb
cli
in
rsqrtps
cli
sahf
xchg
xlat
sub
mov
addb
into
and
sahf
xor
dec
sub
int3
lret
pop
iret
xor
mov
mov
cmp
rcr
sub
imul
arpl
push
jb
xchg
adc
leave
insl
or
sti
sahf
ret
in
cmp
jl
push
movsb
pop
in
jo
xchg
sti
cltd
lret
loop
and
cmc
xorl
ret
mov
and
shrb
dec
mov
cmp
movsl
cmpsl
push
popf
mov
lret
pop
data16
andb
mov
fsubl
loop
jb
push
lds
mov
xlat
jmp
ljmp
sbb
adc
push
les
xchg
sub
pop
mov
xor
scas
pop
loope
mov
sahf
mov
jo
mov
add
paddsb
gs
loop
xchg
test
cmp
out
adc
dec
test
add
loopne
movsb
sarl
mov
xchg
cmp
or
sub
push
add
add
cltd
mov
lcall
pushf
out
pusha
mov
std
fdivrs
mov
stos
push
pop
push
mov
cld
pop
test
stos
adc
out
sbb
fidivrl
ljmp
pop
mov
insl
pop
push
stos
je
in
push
xor
sahf
push
or
sub
adc
jno
outsb
sbb
int3
std
out
xorl
divb
mov
fwait
xchg
imul
iret
adc
sbb
sbb
pusha
lods
adc
push
adc
mov
cmpsl
fsub
into
add
les
xchg
jg
repnz
inc
push
xchg
cs
lock
sub
cmp
xchg
adc
aam
aam
loopne
adc
jp
hlt
aam
xchg
inc
addl
xlat
je
xor
sub
jae
mov
inc
sub
mov
dec
dec
xlat
dec
dec
in
fimull
subl
push
cmp
mov
pushf
bound
in
mov
sub
push
fcmovnu
pop
jnp
pusha
mov
aaa
in
add
pop
loope
jae
sbb
jb
adc
mov
sbb
scas
mov
cld
or
sbb
add
cld
mov
cltd
out
inc
ficoml
rcrb
push
adc
jl
call
cli
push
push
jmp
outsb
and
dec
pop
shlb
push
fldt
cmpsb
aaa
dec
push
jo
adc
push
mov
pop
aas
mov
push
add
xchg
xchg
xchg
or
and
lret
pop
rorl
test
add
ret
lods
add
das
jbe
push
jno
ljmp
add
push
sbbb
fadds
in
nop
mov
fwait
or
cltd
and
jo
pop
xorb
lods
repnz
xor
mov
out
mov
jnp
adc
adc
jecxz
inc
xor
and
pop
xor
mov
lea
mov
outsl
aad
incb
pop
push
mov
orl
iret
call
call
xchg
mov
sub
and
dec
xor
aam
cmp
add
outsl
add
lea
testl
xchg
hlt
jp
ret
je
jmp
jmp
enter
pusha
aaa
and
xor
ljmp
lret
adc
xchg
outsb
outsb
fsubs
popa
loope
push
xor
pop
push
rcl
sub
sbb
add
mov
fsubrl
pop
mov
fwait
jnp
adc
xor
adc
jo
or
sub
cltd
outsb
jge
sub
movsb
push
pushf
mov
js
loop
jp
loopne
cld
scas
stos
mov
add
ss
lret
lret
rcrl
scas
fmull
mov
inc
repz
cmpsl
sbb
or
int
pop
sub
add
adc
fimuls
outsb
pop
std
fidivl
push
mov
fidivl
test
mov
add
in
xor
pushf
lea
and
js
lds
mov
add
xchg
mov
je
sbb
mov
xchg
lahf
stos
xor
cmp
popa
inc
inc
dec
repz
fisubrl
jns
scas
mov
or
cmp
jecxz
divl
loopne
pusha
hlt
push
add
fcom
add
in
or
push
decl
rolb
out
push
or
and
or
test
jo,pt
jne
lahf
aad
pop
fistpl
sub
pop
pop
int3
and
lods
fs
pop
dec
jnp
leave
imul
xor
pminsw
movsl
out
fidivl
push
cs
adc
xor
cmp
pop
enter
lret
arpl
cltd
test
push
daa
mov
mov
cld
pop
loopne
sub
lret
fnstcw
push
std
sub
dec
out
push
cli
cmp
loope
scas
adc
test
incl
std
mov
or
addr16
xchg
aad
cli
adc
cmp
dec
add
add
push
jae
stc
loop
push
jge
xchg
sub
fidivl
add
mov
adc
inc
mov
lcall
mov
xchg
xor
inc
insb
mov
testb
lods
out
icebp
jmp
mov
inc
xor
shlb
fdivrl
insl
sbb
or
lock
rclb
dec
faddl
push
roll
sbb
test
push
mov
dec
jl
xchg
mov
sbb
or
movsl
mov
in
lret
cld
mov
dec
cwtl
push
fs
cmp
mov
mov
jo
adc
jecxz
xchg
and
rcr
gs
inc
push
adc
test
sahf
inc
aaa
pop
lods
push
add
sarl
xor
push
insb
cmp
pop
push
out
aad
std
push
push
shrl
imul
xchg
or
jae
stc
shll
sub
cld
or
fidivrl
xchg
inc
pop
movsb
adc
push
or
or
jmp
enter
iret
out
add
or
dec
push
cmp
shlb
and
pop
jae
movsl
cmp
xchg
dec
repz
ds
shll
jne
sbb
enter
fistpll
lds
ja
push
push
mov
mov
repz
cmp
or
cmp
fisttps
mov
lret
int3
outsb
sub
ja
bound
ss
fistps
jno
inc
xor
push
clc
adc
or
jge
outsb
es
cli
adc
dec
movsb
xchg
repnz
test
pop
dec
ds
adc
int
movsl
in
jae
loope
repz
cwtl
xchg
ja
scas
in
add
jbe
sbb
lahf
add
clc
lret
into
jbe
dec
inc
mov
mov
and
lret
lea
div
in
push
sahf
push
add
xchg
or
popa
loop
ficoml
jmp
dec
xor
sbb
inc
sahf
mov
cmp
incb
in
inc
adc
pop
enter
push
jnp
in
mov
cmp
jb
xor
leave
sbb
mov
push
shlb
adc
stos
mov
fs
fucom
adc
out
insb
or
hlt
mov
ja
mov
add
icebp
xchg
xchg
sbb
jmp
or
pop
rorl
sub
push
xor
lods
cwtl
cmp
cmp
pusha
xchg
aas
mov
pop
rcrb
movsl
loope
outsb
jns
outsl
addr16
and
adc
lret
out
inc
subb
pushf
cmovp
ret
clc
lods
dec
mov
hlt
jle
scas
bound
in
or
inc
fistl
mov
imul
xchg
pop
sbb
js
in
jle
lret
popf
imul
cmp
xchg
cmpsb
jae
outsl
push
nop
jns
mov
lds
mov
imul
push
testl
mov
mov
xor
mov
sarb
and
xlat
dec
incl
lock
mov
jbe
lahf
and
stc
pop
ljmp
adc
mov
or
mov
iret
adc
jbe
mov
incl
lcall
adc
sub
mov
in
jbe
adc
loopne
mov
lea
dec
jb
sub
aas
fdivr
rcrl
adc
xor
sbb
pop
mov
addr16
dec
cmpsb
out
repz
or
aam
push
call
inc
aam
mov
mov
test
xchg
test
add
adc
je
pop
mov
inc
adc
aad
sub
xchg
add
decl
xchg
push
mov
rorb
pop
xor
cltd
daa
xchg
xchg
lods
in
shl
xor
jp
mov
cmp
or
inc
push
hlt
sbb
xor
mov
ficomps
notb
sbb
aas
dec
mov
scas
cmp
imul
lea
je
lock
in
addr16
mov
rcr
pop
fnsave
pop
xchg
or
pop
test
add
dec
mov
add
test
mov
push
stos
fisttpl
push
inc
fcmovnu
sarb
inc
adc
mov
cmc
ds
adc
scas
fsubp
pop
and
dec
mov
dec
push
imul
xchg
scas
cmp
das
mov
maxps
js
pop
xchg
sbb
mov
add
cmp
gs
inc
cmpb
iret
jne
test
xor
jecxz
push
ret
mov
fcmovnb
pushl
test
pushf
push
push
fcoml
jl
mov
mov
sub
jg
and
or
imull
dec
sub
fidivrl
test
dec
xchg
fisubrl
or
enter
testb
fcompl
insb
dec
sub
push
cltd
mov
jle
pusha
ss
lods
mov
fcompl
ret
dec
xchg
shll
push
xchg
xor
sub
shll
sub
pop
push
adc
dec
push
fildll
or
dec
push
pop
or
sub
mov
addr16
mov
icebp
dec
in
sbb
es
adc
push
or
push
sbb
lock
movsb
stc
push
sbb
idivl
daa
nop
fwait
ds
xchg
mov
jne
xchg
sbbb
in
xchg
push
jo
xor
insb
call
movsb
lea
into
jmp
popa
pop
cltd
add
or
testb
xchg
or
push
das
cmp
cmp
xlat
adc
jg
sbb
clc
mov
mov
xchg
aaa
test
mov
jp
addr16
xor
in
rorl
je
cmp
mov
push
aaa
outsl
testl
xchg
nop
and
adc
idivl
sub
in
roll
cmpsb
lret
loop
sub
xchg
mov
mov
mov
cmpb
je
mov
jmp
adc
loop
mov
add
pusha
in
popa
fisttpll
jmp
mov
insl
adc
add
push
sbb
dec
mov
adc
pop
lret
pop
push
or
push
std
scas
sbb
sbb
sbb
stos
pop
pop
movsb
inc
jmp
or
or
into
out
shll
test
sub
sub
cmp
repnz
sub
add
out
lods
mov
mov
fldt
xlat
into
imul
cmp
xchg
mov
xchg
jl
inc
mov
or
push
or
leave
push
scas
fs
pop
iret
xchg
out
sbb
adc
and
adc
cmp
data16
xor
out
push
or
dec
shufps
sub
xchg
mov
dec
les
mov
in
aam
stos
xorb
inc
inc
and
shll
in
addl
ret
enter
out
push
cmp
call
sbb
call
rorb
out
jne
cwtl
and
scas
mov
ja
cli
and
mov
jecxz
add
and
mov
and
mov
test
iret
push
add
fisubl
lcall
and
pop
test
inc
sysexit
lock
repnz
dec
cmp
int3
dec
cld
dec
jle
cmc
jo
push
xchg
inc
subb
enter
pop
mov
out
inc
lds
fwait
in
pop
fsubs
sbb
mov
mov
insb
mov
dec
xor
add
test
jmp
inc
xchg
xlat
inc
or
repnz
pop
imul
out
sub
enter
sbb
les
xchg
in
lcall
sbb
dec
roll
pop
cmp
xchg
mov
xchg
test
es
jp
mov
jbe
sub
cltd
pop
dec
inc
or
inc
fwait
out
cli
or
fwait
xchg
daa
xor
jge
jb,pt
dec
sub
cmc
push
mov
adc
xor
xchg
push
dec
xchg
and
push
je
jbe
rol
dec
in
cltd
jecxz
dec
xchg
sub
shll
loopne
movsb
mov
adcb
mov
mov
sbb
add
xchg
and
stos
sti
test
mov
mov
loope
int3
or
sub
pop
push
incl
xlat
leave
mov
or
mov
push
enter
jnp
sub
sbb
fnstsw
mov
adc
dec
mov
push
cmp
xor
popa
inc
sbb
repz
push
int3
lea
insl
xchg
mov
inc
fwait
or
jo
movsb
rol
or
inc
lret
in
cmp
or
xchg
mov
imul
inc
cmp
xchg
sub
das
popf
rep
inc
mov
stos
movsb
inc
test
mov
and
rorl
idivl
aas
js
adc
std
hlt
repz
aad
push
adc
dec
or
scas
sbb
fwait
add
lds
cli
fwait
stc
bound
or
stc
jp
pop
and
inc
aas
ja
cmp
std
in
adc
push
sub
ljmp
sbb
mov
pop
hlt
shrb
lret
mov
js
enter
mov
leave
xchg
xchg
xor
out
sarb
pop
xor
adc
mov
add
ds
lods
jle
sti
cmp
outsb
sbb
dec
movl
cmc
mov
pop
hlt
fsubl
pop
sub
sub
cmp
lock
cli
adc
push
cmpsb
jbe
jp
outsl
fstp
or
les
ret
jg,pt
jae
scas
fists
jecxz
push
ret
ret
out
mov
imul
mov
in
sbb
jno
xor
mov
jne
out
enter
repz
push
mov
pop
sbb
cmpsb
rol
out
pop
push
xlat
lret
repz
pop
stc
rcll
enter
lret
repz
adc
pop
shrl
sbb
imul
testb
jno
in
sti
jno
ss
shrl
xchg
orb
loopne
push
mov
push
pop
in
leave
adc
cmp
mov
pop
sbb
nop
pop
aaa
push
mov
xchg
repnz
inc
ja
lea
add
add
add
into
fnstsw
ffreep
insb
lods
push
fwait
mov
pop
nop
sti
mov
ljmp
test
ljmp
mov
inc
and
mov
in
adc
ss
inc
gs
dec
or
pop
rcll
sub
repz
mov
roll
je
test
iret
in
inc
pusha
pusha
scas
pop
rcl
dec
pop
lahf
frstor
jecxz
cmp
test
jg
inc
popa
dec
or
cld
jns
adc
mov
mov
out
rol
into
test
inc
int
jno
aam
inc
addr16
roll
sarb
adc
mov
int
or
or
pop
div
sbb
testl
sub
je
rcr
sub
cmpsl
cmp
jge
mov
int3
es
aad
in
lods
push
add
push
cltd
in
adc
sbb
lcall
push
or
loope
lahf
cmpsl
sbb
jno
adc
insb
mov
or
shll
lea
test
ja
sbb
mov
xor
jno
insb
inc
xor
arpl
int3
lock
mov
into
scas
xor
pushf
mov
mov
leave
lret
fnstcw
out
and
jge
pushf
test
jae
fsubs
mov
pushf
adc
lock
jo
dec
mov
dec
and
add
ds
dec
xor
cmp
insl
dec
jle
insl
push
xor
mov
scas
popa
cmp
xor
sub
inc
jbe
sar
push
mov
jle
out
add
clc
mov
lods
ret
insb
mov
orb
adc
push
scas
sub
fadds
jb
cmp
mov
cld
sub
and
orb
jmp
into
dec
ds
rcll
dec
mov
mov
rcrl
imul
xchg
sub
adc
sub
cmp
roll
nop
fwait
jno
pusha
rorl
cmp
sahf
mov
out
pop
jo
pushf
ret
xchg
or
dec
xchg
cld
or
pusha
dec
fnsave
xchg
mov
fsubs
stos
cmp
cltd
xor
cmp
das
std
or
push
out
mov
cmpsl
mov
xchg
jp
pushf
xor
sahf
inc
mov
or
jnp
repnz
push
pop
inc
add
paddq
push
mov
int3
add
or
lcall
andb
fiaddl
stos
in
xlat
ret
xchg
leave
js
mov
mov
ljmp
pusha
mov
push
cmp
imul
roll
inc
pop
mov
mov
aad
iret
fildl
mov
xchg
mov
dec
sub
mov
mov
jo
jl
pusha
xlat
call
push
scas
jns
jmp
mov
mov
add
ja
lea
mov
repnz
mov
xchg
lahf
inc
ljmp
std
xor
xorl
cmp
inc
xor
sbb
xor
out
lods
lea
adc
push
stc
and
or
dec
cld
stc
pusha
les
movsl
lret
test
lret
iret
dec
imul
in
sbb
push
fnstsw
jl
sub
pop
cs
daa
lock
mov
xchg
xchg
push
add
mov
mov
cmp
ret
xor
loopne,pt
dec
xor
xchg
test
sbb
push
push
adc
aaa
insl
inc
adc
iret
hlt
or
mov
stos
mov
sub
in
push
insl
jmp
xchg
pusha
gs
push
mov
lds
jo
dec
push
xor
inc
jb
jae
dec
jne
into
mov
pop
push
cmp
cmp
pushf
jge
mov
ret
sub
dec
xor
repz
cli
out
adc
sub
add
push
lds
iret
movsb
sbb
imul
iret
xchg
test
add
sti
outsb
popa
test
push
mov
aad
xor
xor
scas
in
jle
mov
sahf
jns
mov
mov
je
sbb
jmp
lea
sahf
mov
dec
adcb
pop
xchg
bound
movsb
in
jno
mov
pop
sarl
sub
daa
mov
aas
cltd
jae
test
inc
inc
sbb
push
mov
jmp
jbe
or
pop
orb
je
mov
adcl
pusha
mov
xor
sub
sbb
loop
shll
add
sub
sub
pop
fdiv
les
or
or
stc
cmc
ret
dec
sbb
les
repnz
jmp
int
insb
je
sub
pop
sub
mov
mov
fnsave
cmp
push
mov
and
xor
lret
mov
cltd
and
jns
pop
mov
fwait
add
les
shll
jp
iret
jmp
mov
aam
inc
cmpsb
push
imul
outsb
pop
fs
jbe
les
cwtl
push
sbb
enter
cmp
fiaddl
iret
inc
pusha
repnz
dec
add
mov
adc
mov
pop
repz
loop
ret
je,pn
adc
pop
cmpsb
xor
incl
mov
cmpsl
and
sbb
mov
dec
in
ds
mov
add
jg
popa
adc
or
std
out
sub
shrl
leave
pop
scas
ljmp
jnp
hlt
sbb
jbe
lods
inc
enter
and
xchg
lock
iret
sbb
dec
add
scas
jp
in
aas
adc
in
cli
xchg
jl
xchg
mov
ret
sub
vandps
push
jne
cmp
or
ss
push
push
cmpsl
movsl
stc
dec
or
incb
jae
sbb
mov
repz
imul
push
scas
negb
and
test
xor
stc
cltd
cmp
mov
outsl
pop
jb
cmpsl
les
daa
mov
cltd
dec
popa
mov
inc
mov
jg
repz
das
pop
fdiv
ja
pop
jecxz
shr
inc
test
and
push
mov
xor
lock
cmp
stos
dec
mov
push
mov
jmp
imul
scas
fiaddl
popa
push
push
stos
xor
cmp
sbb
sti
add
and
imul
jnp
arpl
add
xchg
or
mov
mov
add
movsl
jecxz
repnz
data16
bound
cwtl
inc
xchg
insl
lcall
xchg
sbb
sbb
pop
das
push
loopne
mov
rorl
mov
mov
sbb
fwait
cmp
jbe
inc
clc
mov
or
jp
pop
or
scas
dec
fcoml
out
cmp
push
xchg
dec
cmp
ficoml
sbb
push
sub
cmp
push
je
mov
shl
push
jnp
insb
inc
xor
sahf
push
test
sub
shlb
push
jle
and
dec
add
pop
outsb
enter
inc
xor
pop
arpl
fstps
enter
xor
gs
in
icebp
sahf
push
lods
mov
mov
xor
xchg
xor
push
or
jo
mov
add
clc
shlb
cmp
pop
pop
pop
xchg
int
inc
add
mov
jle
cmpsb
xchg
push
and
das
jp
sub
push
lret
cwtl
cmp
sbb
sbb
aam
vpsrlq
sub
mov
jnp
idiv
add
rcr
cld
xchg
aas
sub
ss
in
add
add
fimuls
dec
ja
mov
sbb
xchg
or
popa
pop
imul
movsb
jb
push
nop
push
cld
push
insl
leave
arpl
test
and
adc
in
push
stc
insb
mov
jmp
jle
lods
fistl
fidivrl
mov
insl
xor
fmuls
stos
aad
push
out
dec
scas
push
and
inc
int
outsl
sarl
push
xchg
loope
or
adc
cmpsb
mov
or
add
rcrl
test
sub
into
daa
sbb
ja
imul
and
cmp
xchg
ljmp
xor
es
pop
repz
jp
aas
pop
lock
inc
mov
sub
fsubr
in
inc
push
xor
in
dec
mov
sti
loope
test
mov
jecxz
mov
rcll
push
mov
pop
outsb
cmp
test
adc
int
mov
fwait
or
pop
lock
mov
cwtl
inc
inc
xor
or
das
imul
xor
stos
scas
jl
inc
out
push
push
mov
pop
cmp
mov
push
dec
int3
push
ret
cmc
and
inc
stos
aas
popl
loop
mov
mov
pusha
mov
ds
mov
fisttps
sub
or
repnz
xor
cs
mov
pop
sub
shl
testb
repnz
mov
push
pusha
js
add
push
mov
pop
aaa
daa
and
and
add
jmp
dec
mov
cmc
adc
pop
in
int3
jne
xor
lcall
adc
and
mov
loop
jp
inc
scas
mov
mov
fstps
ja
nop
dec
fiadds
int
cmpsb
dec
xor
jecxz
flds
push
shll
imul
loopne
in
lea
xchg
mov
ss
jecxz
inc
ret
jb
xchg
inc
fnstenv
sarl
sub
daa
mov
mov
stos
push
cld
add
push
inc
scas
or
in
je
inc
icebp
imul
xchg
cmpsl
bnd
into
outsl
fnstenv
aaa
cld
divl
pop
inc
mov
lods
lret
xchg
mov
movsl
loope
push
pop
inc
inc
orb
out
mov
lods
cmpsl
sub
dec
jbe
insl
movsb
out
dec
xchg
stc
mov
sub
repnz
ret
pushf
and
sbbl
cmp
flds
inc
jo
loopne
popa
xor
in
sub
lcall
loopne
aad
mov
and
je
into
ret
jg
push
sbb
adcl
fs
test
les
call
rol
es
pop
pusha
lret
out
insl
shll
ret
inc
outsb
cld
cmp
inc
sbbb
ret
sbb
xor
sar
mov
fwait
xchg
lret
sub
jne
fs
icebp
int3
sub
and
pop
sti
xchg
pop
hlt
mov
test
std
call
adc
sub
ss
lock
pop
fstpl
cmp
arpl
loopne
outsl
xchg
mov
pushf
adc
push
sbb
jge
lock
jb
jne
cmp
adc
pop
pop
out
movsl
cmp
jmp
sbb
mov
pop
scas
ljmp
sub
les
jg
cmp
repz
sbbl
test
add
adc
push
cmp
clc
fwait
insl
xchg
int3
and
mov
dec
xor
pusha
xor
stc
cmp
test
mov
notl
imul
das
das
jnp
insb
jmp
data16
or
xor
inc
cmpsb
sti
jns
add
sahf
pop
out
rcrl
xor
ret
xchg
stc
adc
aas
xor
jecxz
sub
mov
adc
lods
cmp
pop
cltd
xlat
pop
xlat
iret
mov
mov
scas
jb
outsb
dec
jp
push
dec
insb
and
in
sub
pop
inc
xor
jecxz
inc
rclb
lods
int3
shll
insb
pop
mov
roll
popa
scas
jne
cmc
pop
pop
jns
dec
das
cmp
inc
shll
xchg
jecxz
dec
bound
les
push
sub
in
mov
xorl
andb
mov
cmp
pop
xchg
movsl
jno
cmp
jp
das
cmp
dec
xor
clc
inc
in
push
cmc
test
or
add
aam
sbb
clc
das
jae
sub
xchg
pop
mov
pop
mov
jb
cmc
rorl
adcl
fsubl
and
jns
das
jno
test
cmpsl
add
mov
push
sbb
mov
cld
repnz
inc
scas
popf
imul
jge
addl
or
imul
sub
push
ljmp
dec
lcall
jno
inc
xchg
mov
adc
cltd
xor
mov
xchg
xchg
gs
jns
jle
ficomps
js
sbb
adc
ja
imul
int
hlt
out
jecxz
jne
sub
xorb
and
cltd
cmp
lock
add
jbe
pusha
mov
cmp
jo
mov
out
incl
sbb
shll
cltd
inc
enter
or
jnp
subl
pop
nop
sub
inc
jl
pop
push
dec
jmp
mov
inc
aaa
adc
inc
sahf
mov
xor
mov
xorb
inc
hlt
push
fsubs
push
lret
mov
lods
mov
add
lea
mov
inc
shll
inc
imul
pushf
push
shl
rorl
push
ror
pop
pop
mov
cmp
addr16
outsb
push
rcrl
pushf
inc
sub
int3
popf
lret
je
and
mov
insl
enter
ret
jno
xor
push
lcall
or
add
dec
fs
mov
sub
nop
cli
imul
lcall
jb
rcrl
xor
pop
scas
scas
lret
ret
pop
jg
pusha
idiv
xchg
pop
int3
inc
std
jbe
cs
andl
fsubr
xor
pop
pop
fidivrl
scas
xchg
pop
into
stos
inc
das
mov
xchg
cmp
push
pop
mov
adc
int3
push
dec
push
insl
enter
mov
bound
arpl
push
in
aam
jge
cmpsb
aaa
jbe
jle
negl
mov
lods
pop
pop
decb
xchg
cwtd
mov
mov
repz
cltd
jle
test
cwtl
ret
jb
sahf
adcl
adc
test
mov
ficoms
jecxz
adc
fildl
lahf
loope
xor
jb
bnd
in
addr16
aad
mov
fistl
sub
in
cmp
sahf
icebp
xchg
out
stos
in
cmpsl
xchg
jp
mov
sbb
out
fidivl
insl
dec
mulb
nop
pushf
fucomp
inc
test
xor
cmpl
cmp
mov
xor
jmp
fists
pop
aam
psubusw
fwait
xor
popa
stos
test
xor
fisubs
jmp
fbld
add
push
mov
xchg
sub
sub
jae
push
movsb
sbb
sar
xchg
adc
inc
ror
lods
arpl
out
jle
ds
lcall
in
mov
inc
mov
cmp
lods
push
jg
xchg
test
outsb
jnp
cmp
cs
cmpsb
gs
int
mov
inc
ljmp
cmovb
jl
outsb
mov
mov
inc
test
xchg
leave
sbb
mov
and
or
movsb
pop
iret
pusha
andb
push
mov
sub
ds
push
nop
hlt
repz
inc
xchg
xor
popa
sahf
rorl
addl
out
test
or
mov
push
gs
sbb
mov
and
psllw
add
divl
dec
testl
sbb
or
aas
cmp
cmpl
jge
sbb
iret
cmpsb
push
and
sar
into
jg
push
or
push
ds
je
mov
mov
lods
mov
push
push
inc
mov
fsubr
hlt
adc
test
call
leave
xor
bnd
push
adc
mov
loope
add
sub
movsb
ret
sbb
out
dec
xchg
scas
pop
adc
jmp
and
jecxz
and
mov
nop
mov
notl
cld
jle
mov
mov
push
popf
jnp
aas
mov
adcb
and
cmpsb
mov
jne
xchg
repnz
fucom
xchg
loop
clc
lret
imul
cltd
fs
daa
pop
dec
jns
out
push
imulb
int
jg
ja
outsb
ljmpw
imul
xchg
shll
and
mov
add
push
push
adcl
dec
jg
loopne
adc
in
stos
push
les
loope
inc
roll
jns
scas
jb
sbb
outsl
ja
pop
push
in
jno
fdivrl
ljmp
jmp
mov
push
mov
cmc
sarb
ret
push
stos
mov
and
lcall
pushf
iret
mov
test
scas
or
jp
jbe
sar
adcl
scas
clc
out
call
dec
cltd
test
ljmp
cmp
stos
mov
fwait
aas
dec
and
cmp
or
inc
mov
fidivrs
clc
jecxz
lods
ret
jle
jecxz
sub
sub
lcall
enter
push
daa
pop
xchg
imul
pop
dec
cmp
cmpsl
test
xorb
sub
test
mov
mov
ret
push
push
movsl
pop
xchg
mov
int
fldt
daa
je
and
cmp
push
test
push
and
dec
rcl
mov
rcl
or
sbb
addr16
pop
out
sub
faddl
nop
push
pop
adc
rcrb
in
pop
mov
lock
in
out
or
jnp
movsl
arpl
sub
add
add
sti
test
cmp
pop
daa
nop
xor
insb
shl
scas
jg
fcompl
mov
call
mov
cs
inc
sbb
stos
das
lret
aad
testl
sbb
push
daa
shlb
cmpsb
orl
jbe
ret
dec
or
xor
mov
movsl
fbstp
push
or
mov
js
dec
into
push
jb
dec
fwait
out
stos
aaa
lds
mov
jb
stc
mov
inc
push
test
dec
fisubs
data16
insb
add
xchg
mov
inc
dec
out
cmp
popf
xchg
mov
lock
xor
lahf
out
mov
mov
hlt
addr16
mov
shlb
xor
adc
daa
daa
adc
inc
sahf
icebp
ret
clc
sbb
int
mov
mov
out
adc
xchg
repz
dec
pop
xchg
sti
adc
jnp
gs
sahf
popf
stos
jo
adc
jae
xor
sub
sbb
setl
cmpsl
jp
repz
xchg
push
add
std
divl
mov
adc
sub
push
sub
xchg
cmp
fsubr
or
ja
stos
loop
mov
fsubrl
insl
mov
aam
lcall
popf
scas
dec
dec
fmull
int
int3
mov
sahf
test
inc
out
jg
xor
and
out
orl
xchg
in
dec
sbb
inc
mov
add
cmpsl
dec
into
stos
mov
test
xor
ret
pop
and
push
movsl
xchg
push
ja
push
add
or
popa
mov
fimuls
loope
dec
inc
lock
rcr
jnp
sub
or
ss
data16
mov
jno
movsl
inc
mov
dec
loope
jecxz
cmp
out
xor
push
xchg
fildll
ret
dec
xor
add
mov
push
push
push
push
les
out
sub
nop
mov
shl
or
sbb
mov
cld
popa
mov
div
mov
mov
sbbl
loopne
dec
les
orb
push
sub
addr16
int3
cmp
push
dec
mov
xor
push
inc
push
in
push
gs
imul
test
cmp
sbb
sub
shrb
fucomp
hlt
fmulp
negb
das
cs
iret
cltd
push
pop
xor
adc
rclb
sbb
cmpl
mov
jecxz
mov
outsb
push
insl
adc
aam
insl
cwtl
negb
leave
jb
xor
sbb
cmp
dec
popf
sbbb
dec
push
das
or
sub
in
in
out
mov
int
cmpsb
loopne
jnp
pop
dec
cmp
mov
sti
or
sbb
int3
jo
loope
in
push
jecxz
lock
in
mov
shr
out
and
cmp
and
add
cmpsb
mov
stc
cmp
shl
sub
pop
push
dec
or
jle
aad
or
dec
cmp
mov
int3
test
in
mov
push
xchg
jae
sahf
jp
in
dec
shrb
mov
pop
cmp
xchg
lds
cmp
adc
sahf
pop
add
mov
fldt
in
cmp
or
ret
cmp
repz
sahf
imul
jb
mov
iret
jo
sti
mov
xor
sbb
mov
mov
cltd
stos
jge
in
stos
call
sbb
adcl
push
nop
sbb
popf
mov
adc
fwait
mull
loope
and
lahf
mov
mov
adc
pushf
or
mov
mov
dec
fldl
or
imul
test
stos
sbb
pusha
ret
push
jne
roll
mov
je
xorl
xchg
jae,pn
outsb
sub
cmp
lcall
lds
pushf
cmpb
pushf
jmp
in
aas
repz
sbb
push
outsb
pop
leave
and
ret
pop
pop
mov
mov
add
retw
xchg
dec
push
arpl
sbb
dec
lret
lods
dec
fsubl
or
jl
mov
inc
dec
rcll
mov
inc
xchg
js
lret
jmp
iret
xchg
loopne
push
sbb
and
dec
inc
inc
test
sub
movl
pop
movsb
fucomi
dec
adc
testb
addb
xchg
mov
sub
mov
out
cwtl
fisubs
pop
lahf
not
popf
mov
pop
sbbb
roll
mov
jmp
mov
popf
jecxz
sbb
mov
inc
int
rorb
mov
dec
dec
sahf
lea
inc
adc
stos
bound
jg
mov
mov
mov
inc
mov
xchg
jecxz
in
scas
mov
nop
fldenv
push
clc
loopne
test
cmp
sbb
push
push
fsubs
dec
jno
out
inc
nop
add
cltd
mov
outsb
pop
lds
fisttps
push
div
test
sub
test
xchg
popf
movsl
xlat
mov
xor
push
data16
mov
add
test
bound
and
sbb
cs
mov
out
ja
fucompp
jmp
dec
cmp
push
push
push
xor
sbb
adc
sbb
and
mov
xchg
add
mov
rolb
xchg
adc
in
mov
xchg
ret
ss
mov
push
mov
aaa
aas
dec
mov
sbbb
xor
popa
iret
sub
inc
jns,pt
ds
sub
xor
fs
inc
mov
repnz
pusha
fs
out
sbbl
iret
xor
pop
lock
jle
jno
imul
rolb
jb
orl
and
movsb
or
jmp
adc
sahf
js
imulb
xchg
arpl
orl
loopne
push
pop
and
inc
sti
sbb
adc
add
addr16
add
out
sub
jle
stc
sub
cmpb
sub
xchg
scas
cmp
ret
fsubl
push
cmpsl
sbb
fs
lret
ffree
fsubrs
andl
in
scas
nop
add
lret
ss
mov
outsl
push
mull
loop
hlt
and
dec
push
icebp
cmp
xor
and
adc
inc
test
add
adc
leave
pop
adc
ss
aaa
cs
test
pop
lds
into
test
sub
xchg
jmp
adc
mov
sub
test
insl
fsubs
mov
popw
lock
popf
call
and
pusha
es
dec
inc
pop
test
xchg
js
inc
push
adc
ret
adc
jmp
push
push
add
movsb
ret
mov
lret
xchg
xorl
es
ret
or
mov
mov
sub
pop
imul
mov
mov
lds
aam
adc
or
fisubl
xchg
bound
mov
push
leave
sub
out
icebp
jge
or
cmp
cltd
lock
jnp
mov
mov
int
sub
inc
adc
jecxz
lret
ljmp
mov
testb
leave
add
push
push
cwtl
iret
and
sub
xchg
out
or
in
pusha
incb
leave
ds
icebp
sub
cmpsb
test
and
push
cmp
xor
dec
shll
addr16
mov
push
sbb
jmp
cmp
jne
test
sarl
cld
adcb
outsb
and
fs
adc
dec
stos
jnp
rclb
push
pusha
inc
fildll
lock
pushf
fldl
fdivl
mov
je
fstpt
add
es
scas
dec
ljmp
mov
loopne
pop
addb
mov
mov
daa
sbb
pop
adc
sbb
cmp
inc
and
jne
xor
lds
pop
imul
adcb
jo
in
test
xchg
flds
cltd
repnz
pop
push
dec
add
adc
sbb
mov
shll
leave
cmp
int3
jnp
mov
add
test
loopne
xlat
xchg
imul
fldcw
inc
int
fists
loop
cmpl
adc
sti
mov
inc
or
adc
push
loope
mov
push
std
pop
and
xchg
dec
dec
stos
adc
out
jmp
sti
mov
dec
out
addb
jmp
xor
mov
lret
mov
arpl
test
rcr
mov
fidivs
in
mov
cmp
std
cld
popf
ljmp
xor
dec
imul
adc
out
or
sbbl
adc
in
fimull
add
dec
push
xchg
mov
scas
pop
sub
cmpsb
leavew
arpl
into
rcl
into
fistl
or
rorb
out
sarb
test
iret
push
ds
mov
push
xor
out
lahf
sub
cmpsl
cmp
addb
subb
cmc
sbb
into
inc
es
ror
and
aas
xchg
in
pop
stos
test
jle
dec
jl
and
mov
inc
jecxz
lahf
cs
push
inc
out
jecxz
and
jge
push
loop
and
pop
test
fdivrl
aam
out
mov
scas
enter
sub
xchg
aaa
xchg
jg
stos
movsl
push
aad
push
xchg
mov
cmp
inc
mov
imul
stos
ds
xor
push
mov
mov
mov
xor
fnstenv
nop
jo
mov
sub
je
mov
in
ds
out
nop
mov
cmc
incb
scas
and
jb
insl
sub
movsl
cmc
mov
das
xor
dec
bound
sahf
inc
pop
add
fcoml
and
pop
jmp
sub
out
lock
into
stos
out
cmc
sbb
adc
sahf
in
fs
lret
cli
out
imul
adc
inc
fsub
xchg
jno
lds
xor
imul
mov
jp
adc
xor
outsb
lock
jl
andl
jle
fs
push
sub
mov
jmp
dec
icebp
jp
incl
lds
inc
sub
in
xor
xchg
lods
jno
xlat
jmp
pop
adc
out
fs
lret
mov
push
sbb
adc
sahf
nop
icebp
mov
mov
sbb
sbb
enter
mov
loop
jns
sti
cmpsb
ljmp
mov
fcomps
xchg
add
dec
out
sbb
lcall
hlt
and
sbb
loopne
jo
subl
lods
mov
enter
xor
dec
mov
das
aad
adc
mov
daa
in
daa
stc
sbbl
mov
xchg
mov
mov
jp
xor
jno
insb
repnz
xor
cmp
mov
inc
pop
add
popf
arpl
jg
jno
sub
mov
ret
jb
sbb
dec
lock
insl
lret
out
clc
lahf
and
adc
xor
mov
dec
jb
mov
lcall
pop
dec
enter
jp
cmp
xchg
pusha
sbb
mov
adc
sbb
out
mov
mov
add
pop
imul
cmp
sub
in
xchg
out
cmp
rcrl
ret
push
cmp
in
fidivrl
mov
jne
ret
scas
test
lods
push
dec
fsubrl
movsl
xchg
pusha
outsb
push
and
fisttps
idivb
sub
addr16
pop
xchg
clc
lods
and
lret
lea
arpl
loop
cmpsl
pop
aas
and
mov
push
and
xchg
aad
inc
xor
xchg
mov
jp
sbb
clc
dec
dec
sub
pop
fs
cmc
test
insl
cmpsb
dec
bound
iret
mov
dec
mov
sub
xchg
int3
jne
mov
pushf
test
loope
ss
add
xchg
mov
mov
jl
or
pmaddwd
adc
ficompl
dec
pop
in
jp
mov
repz
sbb
push
aad
lret
sub
inc
fbstp
add
pusha
mov
insb
cmp
fbstp
outsb
jp
mov
sbb
call
push
and
xchg
xchg
sbb
mov
shrl
decb
clc
fstl
dec
mov
jl
cmp
es
out
aad
cs
inc
mov
dec
mov
out
add
xor
mov
inc
xor
scas
stos
sti
scas
roll
scas
fistl
mov
fstp
std
pop
in
mov
fwait
iret
cmp
mov
mov
enter
cs
dec
lret
push
std
in
adc
je
daa
jo
sub
lahf
out
inc
sti
imul
pop
mov
mov
xlat
inc
and
xacquire
pop
cmp
ret
xchg
bound
les
pusha
cwtl
mov
gs
in
mov
loop
arpl
add
popf
inc
sub
xchg
nop
mov
loop
pop
xchg
in
add
stc
loopne
fnsave
out
inc
cmp
ret
adc
sbb
repnz
pop
or
nop
cmc
or
dec
or
por
xchg
pop
xchg
repnz
cld
icebp
xor
lcall
dec
out
jne
sbb
sbb
cwtl
dec
lea
inc
cmc
test
imul
or
shlb
push
ret
int3
dec
fwait
sbb
pop
data16
or
loope
insb
out
outsb
mov
jae
fsubs
lock
rorl
fdivp
aam
loop
testl
sti
mov
rorb
add
daa
loope
not
push
jnp
gs
sub
icebp
pop
cs
mov
nop
jmp
mov
arpl
xchg
adc
sbb
shrb
lods
rcl
xor
test
or
cmpsl
mov
xor
xor
push
test
pop
insl
and
cmp
cmc
je
pop
mov
es
loope
cli
or
or
repnz
mov
mov
mov
cltd
repnz
js
mov
xchg
and
pop
ja
push
scas
jno
pop
push
xor
lods
and
pop
popf
push
out
or
mov
enter
stos
pop
out
xchg
pop
loop
and
dec
out
arpl
and
jne
hlt
mov
dec
push
addr16
std
insb
rclb
adc
clc
add
inc
add
nop
fwait
mov
mov
add
or
cmp
sub
fiaddl
femms
xchg
imul
xchg
ja
mov
lret
xchg
xor
int3
sub
adc
cmpsb
in
fildl
popa
jmp
repz
lea
notl
test
in
xchg
sbb
loop
in
lea
fs
ret
les
mov
cltd
outsb
call
xchg
sbb
dec
loope
inc
popf
sbb
mov
mov
mov
fists
mov
pop
xchg
notb
pop
push
loopne
filds
sahf
xchg
arpl
sbb
sbb
mov
pop
pop
jle
mov
push
jecxz
pushf
push
xchg
fcomps
xor
rorb
or
xlat
pop
mov
test
mov
fs
lds
cmovle
hlt
jns
jecxz
jmp
mov
push
cwtl
inc
adc
popa
lahf
and
pop
sbb
mov
sub
int
icebp
mov
inc
lret
adc
dec
dec
pop
push
add
notl
jmp
in
ret
push
mov
aaa
xlat
fstpl
sbb
movsb
test
popa
fs
jnp
jns
sbb
mov
mov
ljmp
mov
xor
in
in
sbbb
cmpsl
mov
int3
jl
xchg
fdivrl
ljmp
call
mov
xchg
or
or
pop
in
enter
hlt
jmp
cmpsb
mov
jnp
divl
dec
icebp
aam
sub
aas
sbb
xor
movsl
adc
test
aad
in
jg
mov
lcall
or
jmp
repz
dec
mov
adc
inc
out
dec
pop
call
stos
pop
cmc
push
out
test
xor
push
cmp
jns
arpl
or
and
lret
or
es
int3
hlt
push
inc
cltd
pop
imul
scas
lret
popa
push
ret
jmp
bound
add
cs
sub
and
pop
jmp
pop
hlt
push
jl
mov
outsl
or
cmp
mov
nop
fadd
adc
iret
ffree
dec
mov
imulb
fwait
and
inc
or
lret
test
outsl
in
inc
jmp
jmp
xor
xorb
outsl
cmp
inc
test
sub
enter
cmp
loop
jns
jmp
and
in
push
xchg
incb
data16
loope
or
addb
adc
sub
push
push
jae
push
adc
adc
daa
cs
addr16
inc
shlb
cwtl
cmpsl
mov
push
inc
mov
adc
movsl
push
fwait
adc
pop
call
mov
sub
lret
xchg
or
pop
stc
daa
pop
cli
xchg
adc
fldl
inc
imul
push
mov
jmp
sbb
insb
std
xchg
sub
mov
jns
adc
pop
add
mov
insl
fidivrl
push
shll
out
lods
or
loop
push
imul
and
test
fsts
insl
testl
fistps
pusha
out
jl
icebp
stos
pop
cwtl
add
fisttpll
and
mov
test
out
cmp
out
scas
insb
mov
or
pop
aam
cmpsl
xor
lahf
lods
adcl
or
mov
inc
push
cmp
std
testl
gs
adc
mov
add
ret
std
and
or
into
pop
std
mov
mov
mov
cltd
jle
xor
xor
test
pop
clc
imul
ljmp
sbb
push
mov
ficompl
rclb
jno
shll
js
scas
xchg
in
mov
test
clc
ljmp
out
hlt
mov
repz
mov
jo
dec
stc
lods
mov
and
popf
inc
clc
mov
sbb
adc
push
or
repnz
cmp
dec
test
enter
popf
mov
inc
sub
dec
fwait
pop
sbb
and
lds
sbb
pushf
fsts
adc
dec
popa
outsb
xchg
sbb
xchg
in
adc
and
imul
out
dec
std
ret
add
xchg
fmull
jl
testl
ja
mov
dec
std
push
roll
int3
hlt
xchg
roll
cmp
mov
iret
repz
gs
xor
xor
push
adc
mov
mov
xor
out
inc
aas
into
cs
daa
mov
jecxz
and
lahf
add
pop
jb
dec
lods
add
push
mulb
cmp
sbb
cs
lock
shll
stc
lretw
push
loope
test
loope
out
add
mov
cmp
sbb
stc
stos
idivl
sub
ret
pop
out
jno
ja
cld
add
cmp
nop
adc
xor
mov
cld
mov
and
pop
imul
sbbl
and
mov
lods
pop
jne
test
sub
jle
jmp
mov
sub
jae
rcrl
xchg
mov
das
fistl
fwait
pop
mov
repz
addr16
shll
stos
sbb
cmpsl
inc
or
mov
jg
sbb
mov
sub
mov
stos
dec
mov
fldenv
dec
repnz
push
push
scas
pop
ret
xchg
stos
or
push
es
cmc
je
xor
ljmp
xor
aaa
in
mov
je
push
adcb
fidivl
mov
gs
or
fldenv
jp
ret
adc
sub
cmp
popa
pop
outsl
jle
fisttps
add
fists
or
inc
cwtl
outsl
out
scas
add
dec
mov
jmp
out
push
add
cs
in
mov
or
repz
xlat
push
dec
sub
add
fwait
lcall
mov
mov
and
jno
daa
imul
in
push
sarb
sbb
jns
xor
mov
mov
ret
xchg
sub
jp
jb
test
cs
ljmp
xor
sub
sub
or
push
xchg
push
ja
pop
pop
cltd
imul
dec
sbb
enter
and
fimuls
imul
push
mov
ret
jg
mov
mov
adc
ss
xor
bnd
xorl
pusha
cli
jo
push
and
movsb
jge
int3
inc
test
data16
xlat
jp
mov
and
pop
lods
push
insl
jge
into
rol
push
lods
nop
mov
fsubrp
mov
pop
cs
jmp
mov
pop
popa
sarb
aad
mov
std
and
jae
dec
xchg
in
xchg
sub
xchg
mov
dec
cmpsl
xchg
fcoms
sahf
dec
and
popf
xorb
out
sub
mov
xor
and
or
fisttps
dec
cmp
xlat
mov
popf
out
gs
sub
je
lret
inc
dec
xchg
movsl
jb
xlat
dec
mov
ret
insl
scas
fmul
lret
and
xor
dec
mov
int
out
pop
jae
loope
call
nop
arpl
xchg
fcomps
jl
rorl
lret
pop
icebp
cmp
in
sub
adc
or
movsb
dec
and
aaa
inc
imul
sbb
sbb
ja
out
push
dec
sbb
lret
fadd
pop
adc
mov
jne
jo
ja
in
cmp
pop
rcll
ds
dec
icebp
add
jmp
add
jg
dec
adc
dec
adc
je
lods
adcb
adc
je
bound
xor
insb
xchg
pop
and
in
mov
mov
and
dec
jb
aas
and
or
xor
jne
push
or
mov
xchg
in
dec
loope
loop
popa
out
pushf
add
shld
or
xor
sbb
add
pop
mov
or
mov
sbb
sbb
aam
loopne
mov
gs
cmpsb
jecxz
cmpsl
arpl
ret
out
xchg
outsl
stos
call
jb
inc
jle
mov
xchg
out
adcl
jno
subl
les
lock
mov
or
or
pop
pop
enter
inc
in
mov
data16
push
es
inc
cs
sub
clc
lea
popa
addr16
fsub
jle
jnp
pop
and
jge
jg
xchg
adc
dec
jns
sbbb
mov
add
lea
pop
adc
or
sub
adc
adc
jbe
or
movsb
or
pop
js
push
push
mov
pop
and
or
mov
shr
icebp
inc
jnp
jnp
aas
mov
cmp
test
icebp
or
inc
mov
fcmovu
mov
fdivs
sbb
stos
and
sbb
pcmpgtw
or
add
jne
dec
sbb
mov
sub
push
push
push
cmpsb
mov
add
in
inc
es
lods
adc
aad
mov
cwtl
mov
nop
mov
mov
ss
sti
cmp
gs
mov
xor
fisttps
je
gs
cmp
lcall
add
dec
dec
cwtl
and
test
jecxz
out
cmp
jp
jge
pusha
bound
pusha
loop
incl
int
test
into
inc
ljmp
push
xlat
push
mov
sbb
int
jecxz
nop
pusha
jmp
cld
push
mov
dec
sarl
scas
pop
jge
jmp
out
xchg
pop
sbb
shll
aaa
mov
in
les
sub
mov
fwait
enter
jg
sub
cltd
mov
sub
lahf
adc
rcrl
pop
lret
sub
stos
sbb
scas
cltd
xchg
push
sub
rcr
mov
xchg
fists
xchg
dec
cmp
xchg
pop
pop
enter
out
mov
mov
jmp
mov
adc
xlat
add
fcmove
inc
or
or
jns
sarl
mov
mov
fisubrl
sarb
sti
pusha
and
ret
inc
fistpl
roll
jle
pop
out
mov
scas
and
xlat
popa
dec
cmp
add
dec
and
sbb
pop
inc
push
ds
xor
outsb
popa
lods
sbb
mov
and
pop
loop
scas
push
xchg
mov
test
jae
lock
mov
lret
mov
jbe
xchg
fwait
push
mov
dec
negl
lods
scas
movsb
pop
lds
pusha
inc
mov
ds
dec
aad
jp
dec
pop
jno
dec
popa
pushf
sub
add
dec
jo
pop
lods
lods
jnp
xor
mov
pop
sub
add
xor
aad
sub
adc
fcom
jae
ds
or
std
mov
mov
pop
aas
mov
push
xchg
lcall
sahf
lea
lcall
mov
stos
dec
sub
out
push
cltd
les
lds
mov
push
shl
nop
xor
pop
mov
ret
mov
mov
ret
fdivr
test
xor
dec
cmp
dec
or
sbb
aam
outsb
lods
and
mov
test
add
sbb
mov
out
ror
push
dec
pop
mov
sbb
test
outsb
data16
jmp
cmp
push
aad
xchg
pop
dec
xchg
leave
mov
mov
icebp
stos
dec
fs
popa
scas
inc
insl
mov
pop
int3
and
pop
mov
mov
pop
xchg
inc
adc
mov
mov
xchg
nop
lret
fwait
gs
call
push
adc
mov
mov
inc
dec
mov
inc
inc
dec
push
mov
mov
out
adc
push
adc
cmp
pusha
add
stos
lret
inc
inc
push
out
lahf
and
scas
dec
not
ss
lock
roll
stos
pushf
push
jae
adc
je
cwtl
jle
testl
inc
xchg
fsubrl
in
jbe
lods
in
sbb
test
inc
icebp
push
je
xlat
pop
mov
sub
shl
mov
mov
jp
aad
xor
nop
push
inc
cmp
xchg
test
es
mov
mov
jne
incb
sub
or
inc
rorl
xchg
push
push
sti
xor
dec
call
fdivrs
push
pop
pop
jb
cltd
and
push
mov
or
cmc
out
aad
inc
ret
int
ljmp
add
or
shrl
mov
stc
daa
imul
jp
sub
adc
and
andl
dec
std
fnstenv
idivb
inc
dec
mov
shr
mov
jno
ficoms
dec
mov
not
mov
sub
add
push
scas
sbb
test
mov
or
xchg
and
mov
mov
xchg
loop
fildll
lods
xchg
fisubrl
push
aas
iret
jbe
lock
movsb
aaa
mov
pop
xlat
addb
xlat
adc
andb
sub
lods
cmp
int
inc
push
rcrb
cmovne
in
cs
scas
fisubl
std
sub
sbb
and
ss
xchg
xor
add
in
push
sbb
pop
leave
xchg
and
lods
fwait
jae
pop
fisubs
test
in
in
mov
adc
jp
xchg
jecxz
mov
xchg
lock
repz
out
in
dec
imul
mov
pop
aam
iret
push
sbb
hlt
push
or
push
mov
insb
push
pop
or
xchg
push
test
cld
and
mov
add
in
mov
pusha
cmp
mov
xor
stos
cmpsb
pop
mov
call
pushf
and
sub
dec
stos
loop
push
mov
xor
jnp
mov
les
inc
or
add
clc
inc
inc
adc
mov
cmc
aam
dec
cmpsl
jl
das
loopne
mov
push
mov
cmp
mov
movsl
xchg
adcl
cmp
fists
and
push
fistpl
ficompl
push
xchg
jns
and
mov
in
aam
jbe
push
fidivl
shl
outsb
stc
jecxz
test
testl
js
adcb
jp
xchg
das
icebp
or
inc
popf
pop
sbb
ja
dec
xor
movsb
loop
mov
arpl
mov
lret
dec
xchg
gs
js
mov
jno
movl
sub
push
sbb
jl
xchg
or
mov
ss
daa
test
das
mov
cmpsb
or
pusha
mov
dec
ja
in
int3
pop
cmp
jne
push
fimull
mov
xchg
stc
mov
pop
in
add
mov
cmpsl
jns
rclb
fcmovnb
lods
dec
cltd
add
das
cmp
movsl
inc
xor
stos
movsb
sub
int
lahf
jmp
inc
loopne
cmp
push
adc
and
loope
xchg
mov
gs
gs
cli
sub
sarb
movsl
jge
outsl
stos
mov
sub
jne
mov
pop
faddl
jmp
sbb
out
mov
loope
fxch
fcomi
pushf
int
push
fsubrl
shll
pop
xchg
ret
loope
mov
jbe
or
inc
mov
sub
dec
cmp
shl
mov
hlt
js
jnp
fidivs
cmpsb
adc
xlat
mov
mov
mov
jne
sbb
adc
mov
xor
lahf
insl
cmpsl
mov
lahf
int
xchg
loope
xor
cmp
mov
sbb
jb
pop
dec
and
scas
je
jge
out
push
int
mov
add
je
fstl
insl
jmp
sub
push
jb
insb
xchg
and
dec
cmpb
push
mov
jle
and
out
inc
icebp
les
imul
ss
aam
and
push
inc
das
pop
push
mov
int3
pusha
pop
shlb
aas
mov
daa
out
pop
dec
cmp
jp
fcmove
mov
mov
jmp
divl
loope
dec
int
sub
sub
mov
sbb
xchg
jne
test
leave
out
mov
sbb
icebp
mov
fdivrp
sub
pop
ljmp
leave
adc
cmpl
imul
enter
sub
stos
xor
rol
xchg
mov
dec
mov
dec
and
movsl
clc
inc
mov
xor
add
xchg
xchg
sub
or
shlb
test
shrd
rorl
lret
jnp
mov
lcall
sbb
scas
mov
push
ljmp
push
cmpsb
mov
loop
fcomp
dec
or
into
jno
adcl
jg
fdivrp
inc
sahf
rcll
data16
xchg
cmp
add
stos
pop
insl
lods
imul
jmp
les
movb
shlb
mov
ret
int
aaa
adc
and
cltd
xlat
leave
into
fucomip
rclb
add
mov
sbb
pusha
inc
pop
test
lret
sbb
mov
mov
dec
pmulhw
and
cmp
cmpsb
jbe
loop
jmp
ret
into
push
mov
test
jl
movsl
sahf
pop
mov
ss
pop
pop
cmp
cmpsl
fimull
adc
sbb
lods
jp
cli
mov
fucomp
inc
push
in
rorb
xchg
fisttps
sub
cmp
xlat
sub
xor
add
dec
dec
push
pop
lret
mov
push
xlat
ret
lea
test
sahf
imul
scas
not
loope
pop
icebp
test
jmp
movsl
addb
xchg
jp
aam
push
jne
fistl
out
mov
fidivrs
fs
dec
ret
mov
decl
sbb
jmp
outsl
loopne
xchg
adc
stos
lret
mov
imul
test
pop
imul
or
push
hlt
into
rcl
lret
cmpsl
push
in
loopne
lcall
scas
sub
add
ret
sbb
pop
mov
fcmovne
es
jp
push
into
sbb
int3
into
jge
jmp
jno
nop
inc
push
sbb
push
fisubl
or
mov
mov
shrl
mov
enter
push
jnp
jmp
mov
jmp
inc
jmp
xchg
aaa
or
outsb
icebp
or
sar
mov
insl
pop
call
ljmp
or
loop
icebp
inc
stos
cwtl
test
xor
mov
inc
sbb
xchg
repnz
add
jns
leave
mov
jg
push
popf
imul
sar
inc
push
call
imul
inc
inc
into
aam
xchg
data16
stos
pop
pop
push
inc
and
mov
sbb
jnp
aas
adc
adc
xchg
and
decl
xchg
loope
adcl
sbb
or
cmpsl
loopne
test
sub
inc
sahf
xchg
aad
mov
mov
insl
jno
sbb
jmp
inc
mov
icebp
insl
xchg
lds
inc
ljmp
movsl
roll
or
popf
pop
xchg
push
shrl
lahf
cmp
mov
es
add
sub
test
sub
xchg
jp
call
fmuls
ret
mov
add
jle
xchg
pushf
push
fistps
mov
aam
jg
xor
or
lods
in
mov
in
adc
fwait
adc
iret
imul
push
ret
xor
aam
fmull
insl
mov
fildll
jnp
or
xchg
cmp
lret
push
dec
mov
cwtl
repz
ljmp
push
out
xlat
jmp
pusha
push
jmp
push
mov
in
mov
adc
hlt
cld
mov
xlat
mov
hlt
sbb
push
mov
lods
cmp
xchg
add
mov
mov
cmpb
push
outsl
push
mov
insb
iret
mov
out
sub
mov
test
mov
mov
cmc
test
jmp
jecxz
mov
push
adc
lods
mull
inc
pop
or
sbb
add
push
xchg
fcompl
push
cmp
jbe
adc
out
push
or
mov
jp
mov
shrb
movsl
cli
inc
jg
inc
clc
sbb
nop
lods
sub
aad
mov
cmp
gs
inc
rclb
mov
loop
adc
aaa
je
sti
imul
sbb
icebp
pop
fistl
sarb
xor
hlt
inc
mov
push
jno
sti
aas
inc
inc
out
mov
inc
pushf
in
and
andb
sbb
fcoml
push
rcll
in
fldt
movsl
pop
rcll
inc
loopne
jg
jns
mov
std
dec
lods
jb
and
cmc
xor
and
sar
pushl
leave
xchg
mov
mov
pop
dec
mov
xor
jle
out
out
loopne
inc
fwait
push
out
mov
les
shr
fldenv
jae
sbb
outsl
shrl
inc
push
mov
sbb
jmp
and
push
or
and
ds
xchg
mov
sub
mov
or
cli
jb
cli
pop
inc
int3
bound
inc
outsb
subl
push
movsl
out
and
out
mov
imul
repz
push
mov
mov
imul
js
into
mov
mov
jbe
cli
cwtl
sbb
cld
imulb
fsubp
insl
inc
fst
pop
xor
push
pop
inc
mov
test
or
fcmove
inc
sbb
das
cltd
gs
or
push
das
mov
std
jne
mov
lret
cli
sbb
xor
sbb
sub
mov
jno
hlt
sub
mov
push
sub
inc
xorb
int
jnp
inc
mov
cli
int
fcmovb
mov
jmp
dec
loope
dec
mov
jg
push
jnp
mov
adc
mov
in
or
loope
lea
popf
adcl
scas
push
test
cmpb
ficompl
in
jae
insl
push
outsb
jno
xchg
cmpsb
adc
in
jb
inc
fcomi
xor
and
test
and
test
gs
or
push
pop
aaa
fwait
aam
inc
and
or
xchg
inc
lock
xchg
outsl
stos
sub
xor
movsb
mov
clc
jp
mov
bound
mov
jno
xchg
lock
das
inc
push
mov
or
pusha
mov
push
and
sub
repnz
mov
testl
aas
lret
nop
push
lret
in
adcb
fiaddl
outsl
lods
loope
popa
cs
test
mov
pop
jecxz
fwait
push
ret
es
mov
add
cltd
cmpsb
push
pop
sbb
out
pop
jl
jg
dec
mov
dec
and
daa
pop
or
adc
in
out
ret
aas
out
cld
pop
jnp
es
adc
push
clc
loope
fucomi
and
mov
xlat
mov
pop
lret
stc
enter
jae
cmp
lret
out
aam
mov
cmpsb
repnz
pop
add
jp
pusha
sarb
mov
xchg
mov
pop
push
dec
cs
add
pop
hlt
pop
mov
loope
or
gs
addr16
js
repz
mov
jnp
fisubrl
fsubs
adc
ret
lahf
pop
sub
and
inc
dec
test
nop
dec
iret
adcl
ret
cmc
mov
addr16
or
bound
push
jne
push
negb
cmpl
push
mov
inc
dec
gs
filds
or
mov
adc
arpl
cmp
iret
enter
mov
mov
pop
loope
push
jae
or
mov
jnp
mov
add
push
push
movsl
cmp
data16
icebp
mov
mov
fists
hlt
ss
enter
sbb
pusha
mov
imul
mov
lret
xchg
fsubl
jno
pop
ja
add
adc
xlat
mov
jl
cs
leave
cs
adc
pop
leave
test
stos
jl
hlt
and
movsb
cmpsb
cmp
lock
push
or
or
rorb
daa
jp
out
sub
cmp
pusha
or
mov
jecxz
and
outsb
imul
or
dec
leave
xor
insb
jno
push
scas
and
imul
pushf
cmp
jo
push
inc
fs
push
stos
xchg
stos
mov
mov
sahf
mov
mov
push
sarl
cwtl
dec
jl
fwait
mov
cmpsb
dec
fistpl
frstor
imul
clc
es
lock
imul
inc
push
mov
push
leave
mov
sbb
and
sub
pop
push
xchg
call
pop
bound
inc
mov
pop
out
push
daa
cmp
cs
adc
mov
ljmp
cmp
cmp
jl
dec
fimull
aaa
push
dec
or
jno
arpl
xor
into
aad
imul
adc
or
pop
mov
movsb
inc
mov
pusha
enter
mov
push
fsubs
jae
iret
mov
movsl
lcall
xor
mov
test
stos
xchg
xchg
push
pop
mov
mov
mov
les
adc
inc
lods
add
out
ljmp
cmp
sub
xchg
ja
in
mov
jbe
or
sub
int3
jnp
xchg
ljmp
ret
push
or
pushf
xchg
mov
pop
mov
add
push
mov
sbb
inc
sub
data16
sub
pop
xchg
dec
pop
jecxz
je
xlat
aam
and
mov
lds
mov
sbb
mov
popl
jnp
pop
pop
mov
shlb
push
mov
clc
repz
inc
xor
fucomp
jnp
pop
mov
pop
repz
out
ljmp
sbb
divl
dec
cmp
pop
mov
lods
fst
aaa
xchg
cmp
adc
cld
adc
pusha
cmp
pop
xchg
or
jmp
inc
adc
lock
lock
pop
sub
add
push
into
xor
jle
bound
lods
pop
adc
mov
lcall
stos
inc
js
push
insb
fisubrs
pop
pushl
cwtl
jg
mov
lar
shll
aam
ljmp
pop
fisttps
mov
cld
xchg
cmpsl
aas
repnz
mov
fisttpl
stos
adc
push
mov
mov
out
push
cmp
pop
leave
je
xchg
mov
sbb
ret
mov
inc
lock
insl
jns
jne
scas
lea
loop
mov
cmpsb
das
sbb
inc
sub
mov
or
cld
add
pop
in
add
cmp
movsb
lds
xchg
ret
arpl
xchg
push
dec
ret
andb
or
jecxz
xor
xchg
xchg
jmp
lds
jmp
mov
mov
aaa
fcmovne
mov
test
loopne
bound
loopne
stos
push
addl
inc
jo
xchg
add
or
repz
fcmovnbe
pop
stc
out
in
mov
push
pop
inc
cld
sti
lds
gs
lcall
test
ja
jmp
inc
inc
rcrb
dec
lock
enter
xor
mov
gs
and
or
mov
imull
addr16
xorl
pop
sbb
inc
cltd
iret
push
xor
mov
inc
adc
inc
cmc
mov
adc
bound
fistl
arpl
xchg
es
scas
test
mov
sahf
add
dec
mulb
mov
jbe
shlb
sub
xor
scas
addl
xchg
cmp
add
dec
push
pop
addb
cmpsb
pop
decl
movsb
push
out
aaa
imul
aas
test
sbb
sbb
aaa
push
push
or
daa
sbb
jbe
fwait
inc
scas
xchg
xchg
fsubrl
mov
or
test
dec
mov
mov
and
das
mov
pop
mov
cmp
mov
or
inc
or
cmp
stos
cs
jb
mov
push
cli
sbb
push
jae
sbb
jp
sbb
stos
dec
sub
mov
inc
adc
adc
mov
imul
jb
jp
xor
scas
rcrl
dec
dec
jbe
shrl
lea
dec
int
mov
add
adc
cwtl
pop
inc
popa
das
mov
add
add
pop
sbb
cmp
aas
addr16
lock
and
fsts
shlb
movsl
adc
mov
adc
scas
jbe
or
mov
mov
xor
mov
ja
lock
pusha
push
int
and
js
xchg
adc
decb
and
dec
mov
idiv
aas
clc
cs
push
xchg
sub
cmp
jns
divb
adc
hlt
mov
xchg
xchg
and
xchg
pop
xlat
stc
sub
les
xchg
enter
lods
aam
cltd
add
cld
cmpsb
mov
push
loopne
out
cmp
sbb
outsl
mov
pop
mov
sub
cld
arpl
ljmp
movsb
sub
lods
sub
ds
cwtl
add
mov
lret
mov
cmp
push
lds
sbb
imul
push
leave
iret
and
adc
bound
push
rep
mov
lea
ds
push
sub
jp
cmp
insb
das
inc
adc
or
and
popl
adc
stos
sub
les
pop
mov
setge
adc
fisttpll
lock
mov
enter
add
rcr
test
pusha
or
imull
inc
mov
jg
mov
movsb
cmp
and
inc
ss
mov
popf
fisttpl
bound
cs
mov
out
mov
js
push
notb
pop
ss
mov
rcrl
sbb
jns
mov
mov
lcall
rcl
push
ds
insb
cmp
add
mov
loop
jae
ja
arpl
and
and
sub
xchg
push
jbe
cld
aaa
mov
fstl
lret
fildll
xor
jnp
and
and
jno
cmpsl
cwtl
int
and
jg
xor
frstor
sbb
pop
pop
jg
inc
cld
sub
push
stos
out
sbb
jmp
dec
xchg
adc
pop
mov
mov
or
aaa
out
pop
mov
jp
xchg
gs
jno
xor
fcoms
adc
cmp
jae
shlb
pop
add
xor
imul
cmp
jbe
mov
daa
jmp
scas
cmp
sbb
popl
fsubrs
push
xor
xchg
add
mov
xchg
mov
xchg
adc
and
adc
jb
and
push
push
pop
lock
lret
sbb
push
das
pop
jbe
out
and
cli
hlt
xor
xchg
and
mov
mov
shlb
inc
adc
mov
sti
ja
mov
mov
mov
push
in
inc
aad
lcall
xchg
mov
test
cmp
fucomi
addr16
lret
lret
mov
js
insb
mov
or
lcall
movsb
xchg
sbb
mov
inc
cli
adc
lahf
xchg
dec
xchg
sub
outsl
insl
out
imull
pop
pop
insl
scas
stos
pushf
jae,pt
jg
xor
lahf
ret
cmp
mov
add
cli
inc
roll
xchg
adcl
mov
data16
dec
lcall
xor
pop
leave
jp
xchg
movsb
pop
cmp
or
les
fdivrs
pushf
fwait
dec
cli
mov
fidivl
iret
inc
cli
fs
mov
ret
jecxz
imul
push
sarl
mov
hlt
aas
inc
leave
ret
out
mov
jne
sub
mov
mov
ja
and
or
insl
dec
mov
push
adc
fldcw
dec
testl
fsts
push
and
and
enter
movsb
and
mov
jae
orl
xchg
test
inc
push
sub
push
cmpsb
test
lea
pop
outsl
pop
loope
ret
xchg
test
push
jl
dec
fstl
and
or
add
xor
aaa
inc
test
lods
inc
in
adc
shll
push
and
pop
lret
push
push
int3
push
mov
push
jecxz
lret
or
daa
mov
je
bound
pop
lahf
iret
gs
sub
inc
dec
imulb
adc
sbb
jns
xor
jg
xchg
andb
pop
ljmp
inc
xchg
mov
push
notb
js
mov
inc
fisubrl
call
adc
xor
addr16
inc
lret
out
mov
ret
fadds
in
dec
mov
push
shll
add
fucomip
ds
mov
mov
adc
cmpl
sbb
mov
and
sbb
adc
mull
mov
nop
enter
sub
mov
mov
push
jnp
lods
lret
stc
fcmovb
pop
xchg
mov
rclb
mov
test
sbb
push
dec
mov
mov
nop
push
addr16
sub
or
fildll
pop
sbb
push
jbe
dec
out
xor
lea
xchg
sbb
insl
popf
in
push
add
js
mov
test
fbstp
inc
sub
jns
xorl
shlb
shrl
inc
push
fs
mov
push
push
mov
out
push
xor
pop
xchg
sub
sarb
or
sub
jl
add
sbb
jne
dec
push
push
mov
loope
mov
stos
xor
adc
scas
mov
stc
out
jns
xchg
jbe
pop
mov
adcb
popa
push
outsl
mov
dec
mov
xorb
in
out
push
adc
lea
dec
faddl
add
popf
sub
xchg
je
sub
sbb
pop
sbb
jl
test
popf
shll
outsl
cmp
lea
mov
fildll
sti
shrl
or
and
mov
sti
mov
xor
lret
ja
jmp
mov
cmp
fimull
je
dec
xchg
arpl
sub
les
push
arpl
adc
ret
mov
cmp
nop
push
ret
mov
sbb
fisttpl
stc
andb
mov
imul
jno
imul
sub
data16
mov
lret
inc
dec
mov
mov
scas
cmp
shll
call
jno
icebp
test
es
jl
jecxz
lret
addr16
mov
mov
mov
mov
outsb
adc
mov
pop
sub
mov
push
lock
add
cmp
je
js
shl
mov
mov
cmp
xor
movsl
cmp
sub
mov
jle
orb
sbb
nop
inc
jl
cmp
push
arpl
push
push
in
and
adc
ja
adc
cli
sub
mov
sub
xor
adc
cmc
fcmovnb
sub
adc
dec
das
addl
jle
js
rcll
cmpsb
fs
pop
mov
push
and
rol
lds
sbb
bound
push
sti
jno
lods
cmp
pop
sbb
sbb
jp,pt
dec
push
cld
mov
outsb
addr16
cld
dec
mov
pop
push
addr16
xlat
arpl
negl
mov
and
out
fs
push
int
jecxz
and
push
stc
inc
push
mul
stos
mov
xchg
insl
pop
mov
subb
jb
lea
and
mov
inc
imulb
gs
push
insb
push
cmp
adc
mul
push
push
test
fstpt
aas
out
xor
inc
push
cmp
xchg
adc
jmp
mov
fistps
push
nop
cmp
int3
dec
xchg
cmpl
or
cmp
test
aam
pop
cld
les
in
loope
dec
adcb
pop
aad
out
outsb
xor
inc
lods
out
fisttps
movsl
mov
mov
xchg
or
mov
mov
cld
sub
sub
or
jle
add
ja,pn
cmpsb
loope
sub
aaa
dec
xor
jnp
mov
xchg
push
lods
sbb
lret
mov
sti
add
in
sarl
aas
lret
insb
cmpl
jns
fidivs
lods
lds
jb
inc
lret
inc
lcall
or
mov
sbb
out
jp
mov
ror
mov
xlat
lock
clc
dec
imul
or
in
pop
enter
fs
in
push
out
mov
mov
push
lahf
inc
shlb
lcall
rcll
cmc
fnsave
test
push
pop
test
sbb
pushf
int
pop
dec
adc
mov
fidivl
les
inc
inc
fdivr
cmpsb
adc
stos
cmp
pop
fldcw
jne
mov
f2xm1
dec
xchg
dec
xchg
sbb
outsb
and
or
add
and
dec
lock
mov
shlb
ljmp
and
js
sbb
mov
inc
adc
xchg
mov
sbbb
imul
xchg
mov
or
cs
loopne
rolb
shll
pop
push
sbb
adc
jbe
andb
loop
scas
adc
add
fstpl
jne
orl
cmp
inc
insb
pop
lea
js
aad
pop
xor
xor
adc
sbb
xchg
cmpb
xchg
in
jecxz
cmp
sbbl
adc
sbb
and
cwtl
cmp
inc
push
adc
stos
adc
and
sbb
pushf
jg
dec
mov
inc
data16
cmp
sbb
pop
mov
aad
inc
jno
lahf
and
pop
mov
mov
xchg
setnp
inc
bound
sarl
insb
ret
sub
mov
adc
xchg
icebp
mov
cmc
sub
jo
roll
popf
or
out
lods
sti
rcl
jg
sub
pop
push
adc
jne
out
je
push
inc
sub
frndint
shrb
jo
or
insl
and
sbb
mov
lock
shll
paddd
or
mov
mov
or
inc
fs
test
dec
jecxz
fwait
sahf
push
sbbb
decb
and
sbb
jae
imulb
sub
xchg
xchg
pop
fcoml
or
mov
int
pop
pop
mov
enter
icebp
jl
mov
andb
mov
fisubrs
cmpsl
out
loop
add
jb
mov
int
jmp
aaa
adc
inc
jno
stos
add
lahf
push
out
icebp
enter
mov
jg
mov
arpl
push
pop
jb,pt
lea
fcmovnbe
add
popa
jne
sbb
fwait
data16
imul
mov
insb
stc
inc
mov
or
dec
dec
pop
jecxz
sub
cmpsl
call
imul
xor
sbb
dec
xchg
xorl
arpl
or
xor
movsl
rcr
test
dec
push
dec
addl
or
inc
jb
jo
lcall
rcl
pop
nop
in
test
sahf
push
call
add
out
mov
insb
dec
mov
xlat
add
dec
jecxz
repnz
cwtl
mov
daa
push
xor
or
test
or
adc
in
xor
jno
scas
xchg
es
push
fldcw
add
sahf
std
add
dec
arpl
and
fdivr
lds
lahf
dec
mov
arpl
orb
push
dec
in
mov
subl
mov
sbb
mov
gs
int3
imul
adc
push
adc
jecxz
lret
pop
clc
test
stos
ja
int
inc
movsb
mov
sti
push
mov
cmp
sub
push
or
mov
cld
inc
repnz
test
sub
mov
out
insb
ljmp
mov
cmpsb
jb
cmp
js
sub
movsb
mov
cmp
stos
push
cmp
in
aas
dec
ds
cld
push
js
aaa
insb
stos
mov
add
fldcw
adc
mulb
shll
xor
shlb
cwtl
sub
inc
pop
shl
inc
or
push
or
fimull
push
jge
mov
jnp
js
repnz
sahf
mov
out
repnz
sbb
dec
cmp
pop
rorb
jmp
dec
fadds
lcall
loope
nop
outsl
sub
pop
inc
andl
daa
lret
out
xor
loopne
mov
push
mov
mov
cmp
mov
and
es
ds
mov
in
pop
mov
int3
mov
and
mov
lret
inc
scas
or
xor
sbb
jecxz
lods
inc
mov
sbb
aas
les
or
add
pop
lods
icebp
icebp
aas
pusha
xor
sub
roll
pop
or
xchg
pop
rolb
cmp
sub
in
xchg
ljmp
or
shrl
sbb
add
or
test
add
outsb
sbb
push
shrb
bound
fidivs
mov
mov
in
mov
std
in
and
scas
insl
aam
jne
test
pop
lock
das
jmp
js
mov
sub
pop
pop
stc
mov
fcoml
out
sub
aaa
pop
ljmp
jae
int
xlat
mov
mov
add
push
and
xchg
les
pop
int3
jecxz
test
fwait
leave
push
arpl
hlt
jp
ficoms
inc
xchg
test
mov
inc
or
in
movl
xchg
pop
mov
cltd
jnp
stos
in
sbb
stos
mov
or
sbb
push
sub
jge
xor
mov
movsl
push
iret
fs
cmp
call
mov
aam
cld
push
pop
pop
mov
xlat
jnp
scas
inc
inc
xchg
fisttps
cwtl
stos
test
sbb
add
cmp
mov
cmp
es
stc
xor
mov
jns
push
and
inc
movsb
psrlq
push
mov
sub
pop
adc
les
data16
loope
inc
jg
imul
ljmp
bound
and
pop
iret
xor
or
cltd
push
push
orl
adcb
loopne
fwait
movb
inc
movsb
dec
mov
popf
sub
popa
in
nop
out
lds
fcomps
mov
jecxz
add
pop
or
dec
push
adc
js
ds
clc
mov
sbb
fcom
cmp
test
cmpsb
mov
and
roll
xchg
lcall
out
inc
and
out
loop
andb
fiadds
mov
es
dec
aaa
into
dec
test
fistl
jbe
insb
xorb
jno
xchg
adc
pop
xchg
push
and
sub
inc
push
mov
jge
xor
jg
push
out
test
mov
pusha
cmpsl
stc
dec
ljmp
dec
xchg
pushf
xor
movsb
sbb
test
mov
test
ret
xchg
xchg
and
xchg
or
lret
pop
out
sbb
sub
lahf
or
in
xchg
ret
int
movsb
push
rcrl
dec
or
sub
jecxz
push
mov
pushf
inc
icebp
in
jecxz
xchg
fsubrs
xor
jbe
jl
push
cmp
inc
cs
pop
cmc
out
sbb
test
enter
push
jmp
mov
cmp
rclb
mov
or
lock
dec
shlb
mov
sbb
stos
mull
cmp
mov
ret
push
popa
int
pop
in
pop
pop
test
pop
cmpsl
jns
add
fisubl
and
mov
mov
jb
repnz
or
mov
jbe
push
push
ret
or
inc
xor
pop
xchg
pop
push
stos
loope
pop
add
popa
test
out
xchg
das
testl
xor
pop
xchg
xchg
sbbl
pop
lods
stos
push
mov
xchg
in
push
out
cmp
cmp
mov
mov
lret
cmp
das
adc
lock
push
fcoml
aaa
rcr
mov
daa
dec
xor
push
adc
fnstcw
dec
push
fisttps
fwait
shr
dec
xchg
jle
imul
fs
test
leave
adc
sub
push
pop
daa
fsubl
jecxz
or
jno
aaa
jmp
xor
mov
cmp
cmp
inc
fsubrs
xchg
hlt
lea
jno
inc
xlat
inc
mov
outsl
enter
fmuls
cmp
xchg
pop
jo
xchg
or
enter
sub
adc
mov
add
pop
js
notl
into
out
xchg
ljmp
sub
pop
cld
hlt
jg
fxch
std
jmp
repnz
addr16
mov
ja
cwtl
addr16
gs
dec
or
mov
leave
rcrb
sub
ss
jo
mov
adc
dec
gs
cmp
ds
mov
and
sbb
ds
jnp
rcll
or
jl
arpl
and
jns
pop
ss
pop
pusha
or
pop
mov
xor
push
and
add
imul
je
push
rclb
add
cmp
inc
dec
je
dec
pop
xchg
call
test
mov
in
in
xor
xchg
dec
pop
jmp
pop
sub
out
ds
sbb
fsts
xor
test
fcoms
aad
ret
jg
lea
pop
in
jg
push
jae
pop
mov
rorb
xor
das
cmp
or
bound
xor
pop
out
into
outsb
leave
in
aaa
xor
rcr
add
or
lds
mov
mov
jecxz
cmp
icebp
jno
jo
sbb
cmp
sbb
je
lret
lods
jns
add
adc
or
in
adc
loope
and
cs
rcll
ljmp
xor
mov
cmp
bound
mov
decb
xchg
xor
mov
bound
xor
ds
aam
fwait
test
pusha
lret
mov
cmpsb
push
pop
pop
mov
sub
dec
inc
movsl
mov
in
call
jb
jns
jae
mov
aad
insl
sahf
jbe
iret
jnp
mov
push
push
clc
jae
dec
mov
xchg
mov
push
iret
les
insl
ret
mov
dec
push
cmp
jle
int3
rclb
push
lods
je
jle
mov
rcr
add
xor
xchg
dec
mov
xor
jecxz
mov
mov
jmp
pop
ja
imul
ja
mov
repnz
mov
add
lret
enter
aam
decl
dec
ja
fstpl
jbe
push
aam
sahf
push
push
sbb
sbb
lods
in
je
mov
jne
loop
xor
jg
imul
mov
shlb
hlt
mov
sbb
das
jmp
mov
jp
in
ficoml
lods
sar
adc
int
or
xlat
cpuid
add
ret
pop
sbb
les
sbb
and
pushf
loope
xor
fsubl
out
add
jns
xchg
data16
andb
sbb
or
pop
test
pop
cld
int
mov
iret
dec
mov
lds
push
es
xor
and
push
pop
jbe
xor
hlt
xor
arpl
inc
inc
dec
mov
filds
jecxz
lcall
xor
in
inc
rol
push
sbbl
add
mov
or
jg
fs
test
and
pop
test
pop
jge
in
in
mov
stos
sub
pop
pop
int3
lods
imul
mov
dec
jb
dec
pop
std
scas
xchg
push
sub
les
daa
iret
xchg
dec
ljmp
add
into
imul
push
inc
mov
je
jl
icebp
jns
inc
mov
bound
cmp
rcrb
lods
aam
fsubs
ret
ds
in
dec
scas
sub
jo
shl
xchg
lods
leave
jno
neg
jbe
mov
cld
sbb
xchg
add
mov
push
mov
jmp
imul
pushf
sub
mov
ljmp
jae
jecxz
sbb
xchg
inc
ja
loop
cmpsb
test
movsl
dec
data16
xchg
jo
dec
add
jbe
stos
jmp
pushf
dec
add
push
ret
shlb
xchg
push
hlt
roll
dec
lcall
jbe
lds
ja
scas
push
xlat
iret
aam
cmp
aaa
clc
inc
jecxz
arpl
insl
inc
imul
enter
mov
les
scas
add
mov
mov
std
in
jecxz
inc
iret
cltd
dec
mov
and
jle
ss
in
pop
mov
negl
scas
mov
mov
push
arpl
jae
mov
lcall
arpl
jle
xchg
and
pop
pop
movsl
jae
leave
test
jge
jge
pop
jno
iret
pop
bound
pop
pop
fistps
add
jns
mov
shll
clc
cld
mov
mov
cmpsl
arpl
mov
into
inc
lock
and
add
pop
inc
sbb
js
sarb
rol
jmp
cmp
inc
repz
xchg
dec
lahf
scas
xor
xor
sub
sahf
testb
lds
iret
mov
push
bound
pop
inc
jg
imul
shlb
sbb
dec
enter
fstpt
in
pop
add
fldcw
outsb
fdivs
push
mov
adc
stos
ja
pop
mov
stos
in
inc
or
cmp
mov
or
in
sbbb
dec
lret
cli
mov
xchg
sbb
xor
cmp
bound
std
inc
into
mov
mov
stos
mov
scas
nop
es
sahf
mov
add
sahf
push
sub
sbb
jns
cmp
inc
xchg
mov
xlat
push
push
imul
sar
imul
jae
mov
or
daa
sbb
inc
insb
setp
add
call
jle
pop
in
dec
adc
in
cmp
push
lods
xchg
shr
jae
lods
movsl
je
rol
dec
data16
sbb
call
out
gs
xchg
mov
bound
mov
test
push
daa
stos
fwait
lds
push
mov
cld
in
sub
cmp
aam
fstpt
outsl
test
cli
jne
jecxz
inc
mov
insl
mov
dec
repnz
mov
xlat
nop
or
push
cmc
outsb
scas
imul
mov
dec
jae
cmc
or
push
push
mov
into
mov
int3
and
je
cmpsl
test
adc
xchg
add
pop
add
cmp
stos
loopne
mov
dec
popa
sar
cmp
jbe
xor
bound
js
push
pop
cld
addr16
push
dec
xor
sub
adc
mov
mov
and
sub
stos
bound
sbb
dec
push
addr16
scas
lret
dec
cmpsb
add
dec
mov
push
xor
stos
or
movsl
mov
mov
jecxz
and
pop
cmp
lahf
xlat
add
stos
daa
fsubl
xor
push
in
js
sarl
repz
in
stos
testb
hlt
pop
and
stc
sahf
sbb
cwtl
pushl
xchg
gs
xchg
jne
arpl
jbe
mov
call
mov
pusha
mov
in
xchg
gs
inc
jbe
mov
sub
mov
cmpsb
sub
mov
in
inc
jmp
loope
jmp
sub
inc
data16
sub
jl
fwait
push
xchg
paddd
divl
push
mov
mov
in
mov
dec
lret
jp
jb
jae
pushf
jnp
adc
aad
test
mov
and
mov
xchg
out
into
pop
mov
mov
mov
imul
cmp
scas
inc
sbb
adc
pop
fcomps
dec
mov
sbb
push
pop
sub
orl
and
or
nop
inc
push
test
in
and
jb
aam
enter
pop
lods
dec
cmp
xorb
adc
popf
or
xchg
sahf
inc
inc
gs
stc
or
loop
add
mov
sub
mov
lods
stos
push
cmp
jns
xor
cmp
cmp
jge
xorl
ror
lret
sub
mov
add
aad
sub
scas
inc
pop
mov
addr16
popa
lcall
dec
pop
mov
dec
cmp
inc
stos
dec
sbb
mov
mov
enter
pop
jnp
pop
dec
cmp
mov
mov
jb
daa
fcmovb
movsl
ret
mov
insb
or
fcoms
push
xor
push
sbb
sub
pop
pop
mov
lods
xchg
test
push
dec
or
mov
mov
xchg
ja
gs
bound
push
mov
in
pop
mov
sbb
icebp
jmp
int
scas
scas
sahf
lods
mov
imul
or
lret
mov
stos
flds
mov
mov
insb
popf
cmpl
xchg
outsl
shlb
rorl
aad
or
jge
or
sub
lock
je
lods
mov
dec
cmc
sub
nop
cmpsl
pop
arpl
mov
aad
cmp
inc
xchg
inc
es
mov
and
call
pop
repnz
dec
mov
loope
addb
and
cwtl
and
sbb
mov
push
sub
arpl
in
push
xor
daa
cs
mov
out
dec
add
cwtl
ret
iret
test
mov
inc
call
ret
ficoml
mov
hlt
gs
stos
and
jg
shll
test
pop
in
mov
rorl
cltd
js
lcall
popf
ret
test
dec
fmull
imul
popa
jb
sbb
dec
adc
jns
jae
adc
pop
fwait
insb
adc
xchg
mov
pop
pop
cmp
jmp
imul
inc
fistpl
or
adc
test
cmp
cmp
pusha
popf
xchg
arpl
mov
outsb
stc
fadd
mov
out
mov
mov
lods
pop
mov
xchg
adc
mov
pop
push
gs
cmp
pop
imul
imul
addr16
std
push
ja
clc
xor
call
sbb
or
push
das
mov
repz
addr16
fwait
push
adc
jae
push
and
mov
les
push
ret
cmp
mov
xor
add
or
movsl
outsl
push
push
ljmp
jbe
mov
xchg
mov
loope
int
jb
or
je
sub
jnp
sbb
jo
rol
fucom
mov
xlat
pop
sbb
std
sbb
pop
mov
in
out
das
and
loop
xchg
outsl
cld
mov
mov
jmp
pop
mov
push
xchg
xorb
add
rolb
push
jl
int
imul
add
pop
ja
pop
inc
pop
shlb
test
jns
dec
mov
xchg
ljmp
inc
sbb
sub
popf
push
xor
iret
pop
xor
das
lock
ds
testb
ret
jbe
add
dec
es
push
xor
inc
or
test
mov
push
fsts
js
enter
les
xlat
aam
sub
add
ja
mov
popf
out
inc
pop
cmp
imul
xchg
push
je
mov
mov
outsb
and
jl
jp
lret
ror
dec
mov
popa
stc
lcall
adc
adc
cmp
imul
xchg
xor
sub
inc
cli
mov
ret
movsl
push
adc
inc
clc
adcl
lods
inc
lret
and
xchg
es
fwait
and
das
int3
or
xchg
call
dec
push
xchg
pushf
loop
insb
sbbb
xlat
cs
push
lock
pop
dec
or
sub
pop
fisubrs
dec
lock
jl
repz
jno
sub
dec
pop
mov
test
push
jnp
negl
or
inc
test
rcrb
xchg
pushl
xor
jg
push
add
insl
push
adc
pop
lahf
insl
data16
rcl
loopne
jns
jb
sub
add
xor
call
aas
loope
cmp
jl
shr
mov
push
lods
cltd
sarb
mov
inc
fsts
and
imul
mov
sub
mov
xlat
inc
shll
out
pop
sub
int3
sahf
inc
cmp
mov
or
push
out
outsb
divb
mov
inc
push
fsubp
mov
mov
stc
inc
push
pop
mov
stc
repnz
test
sbb
mov
xchg
push
push
js
stc
rclb
push
aad
jle
dec
xchg
fs
in
adcb
and
xchg
cld
and
jb
test
jns
dec
in
push
pop
insl
aaa
dec
cmpsl
xor
and
outsb
nop
dec
inc
test
or
xchg
push
lcall
jmp
sub
mov
mov
xor
lea
ljmp
shll
shrb
mov
jl
popa
rcr
int
popa
movsl
scas
or
das
jmp
add
aad
jo
sub
and
bound
sbb
adc
add
iret
xchg
push
shl
adc
adc
push
je
pop
lock
nop
shl
imul
jo
mov
into
or
pop
inc
ret
and
inc
sti
ss
jg
pop
sbb
lea
mov
and
sbb
push
mov
repz
jp
adc
xlat
rcll
es
into
lods
sbb
outsl
addl
daa
cs
fildll
fidivs
jg
mov
push
push
and
push
fcoms
or
dec
movsl
out
jns
lds
pop
imul
push
xor
push
mov
xlat
in
xor
js
adc
xor
jl
and
sbb
pushf
rclb
sbb
inc
xor
add
js
xorl
lret
xor
fbstp
sub
iretw
in
arpl
out
shl
jbe
cmpsb
dec
repnz
push
push
ljmp
jg
mov
insl
sahf
jge
xor
mov
imul
fildll
cs
aas
sbb
nop
sub
cld
inc
pop
movb
add
pusha
test
sbb
dec
push
xor
mov
jo
xchg
lcall
xor
imul
jmp
cmp
stos
bound
js
add
out
test
sbb
fbld
mov
sti
dec
loop
mov
fs
xorb
jbe
push
std
enter
iret
and
scas
mov
xchg
and
xor
fsts
mov
push
cmp
mov
cmp
sub
push
rorl
cmp
pop
and
jp
les
mov
dec
add
inc
mov
jae
xchg
push
sbb
inc
lea
xchg
in
xchg
adc
adcl
pop
mov
aas
lcall
pusha
ret
sar
and
int3
mov
shll
insb
in
cmpb
add
pop
mov
lahf
in
mov
imul
pop
dec
ss
int
pop
xor
mov
lods
sub
mov
jne
xchg
lcall
jl
push
push
jns
mov
mov
mov
adc
inc
mov
sub
les
jmp
in
mov
xchg
int3
lods
cmp
fs
ret
popf
imul
adcb
leave
js
jbe
test
push
cmp
and
xor
mov
push
ljmp
lods
scas
xchg
clc
push
or
outsl
es
aad
push
stc
ficompl
sub
or
jae
icebp
add
aad
lret
cld
pop
sub
push
lahf
or
jnp
add
xor
jnp
roll
cwtl
aas
ds
pop
pop
stos
mov
das
pusha
ds
les
push
daa
stos
sub
stos
jle
inc
jbe
xor
les
daa
inc
sub
adc
cmp
lods
jl
scas
adc
push
outsb
push
outsl
sub
mov
aam
insl
push
int
push
or
sti
imul
sbb
addb
pop
xchg
fmuls
or
xchg
sar
push
jecxz
lds
mov
mov
jno
dec
adc
addr16
and
xchg
or
in
test
jg
mov
test
pop
jns
orl
scas
outsb
repnz
fstps
xor
in
mov
fdivs
inc
roll
pop
jge
sahf
mov
addr16
inc
ficoms
jnp
jne
cmpl
lret
xchg
pop
std
and
les
inc
daa
loopne
out
mov
lods
pop
daa
sbbb
cmp
pop
mov
data16
orl
xchg
sarb
pop
jbe
push
fwait
sub
getsec
sbb
fwait
in
push
outsl
insl
dec
cmc
jg
xor
aaa
subl
mov
jg
ss
aaa
data16
in
cmp
outsl
scas
into
test
mov
lcall
sbb
ficoml
jns
push
in
push
into
ja
fwait
xchg
out
out
mov
std
hlt
pop
repz
mov
mov
dec
gs
jecxz
pop
in
adc
pop
fimull
popf
xchg
rcrb
mov
pop
mov
push
aam
xchg
mov
sti
xor
cmp
jae
ss
inc
out
ret
xchg
mov
or
pop
outsl
lods
xor
ret
lock
bound
test
xchg
out
adcl
jnp
push
incl
inc
lea
je
ret
push
call
rol
sbb
xorb
fmuls
adc
les
jo
mov
sbb
dec
shrb
push
add
movsb
adc
pop
pop
and
mov
and
pop
shrl
jbe
outsb
loope
rcll
mov
adc
or
mov
jg
fistps
stos
shl
xor
sub
outsb
sub
push
aam
jo
outsb
sbb
aad
outsb
add
test
xor
jb
cmp
push
push
mov
push
int3
jo
xchg
pushf
and
jl
iret
adc
loop
jmp
xchg
mov
mov
or
push
loop
inc
lock
rcll
into
dec
jp
push
cli
pop
add
dec
rcrl
push
mov
xchg
xchg
or
push
jnp
xchg
mov
cltd
test
jne
iret
mov
subb
in
je
add
fcmovnu
int
lods
mov
xchg
fidivrl
testb
cs
adc
xor
add
dec
hlt
sub
xor
mov
dec
enter
xchg
int
mov
insb
add
push
jbe
push
adc
jle
sar
fstl
rcll
sbb
ret
xor
test
mov
shrl
jne
push
adc
cwtl
gs
jl
lds
sub
or
sbb
shrl
outsl
sub
adc
icebp
stos
movsbl
imul
ss
adc
add
pop
out
pop
insl
mov
add
jno
dec
aaa
adc
sbb
push
add
jb
inc
pushf
jp
call
pusha
cmp
mov
jg
push
sbb
cmp
jl
int3
sbb
arpl
or
cmp
jmp
sahf
in
or
xor
imul
lret
sub
and
fistps
xchg
inc
add
xchg
fsts
dec
mov
lods
popa
int3
adc
repz
cltd
adc
jne
stc
mov
sti
or
incb
loopne
rorl
andb
mov
inc
int3
pop
dec
push
mov
je
mov
push
push
and
jmp
fisubl
fmull
add
cmpb
fs
fisubl
and
jl
cltd
mov
addr16
shl
xor
rcrl
cmp
mov
ja
adc
int3
ds
jno
jb
and
mov
sahf
cli
fsubl
jecxz
js
push
adc
orb
inc
or
mov
sbbl
aas
inc
fsubs
repnz
and
xor
xchg
dec
cwtl
mov
scas
movsb
pop
mov
lret
addb
scas
lret
outsl
outsl
inc
xor
sbb
scas
fistps
xchg
jmp
mov
inc
scas
mov
idivl
ret
inc
daa
xor
lock
jb
lret
mov
inc
and
push
xchg
das
sub
xor
jnp
sub
sub
out
repz
jne
xor
cmpsb
adc
sbb
bound
mov
loop
test
mov
dec
add
fwait
aaa
adc
jb
dec
mov
mov
cld
loop
or
cwtl
xchg
pop
in
add
dec
cmc
insb
int
jnp
xchg
scas
and
ret
mov
jecxz
and
sbbl
xlat
add
inc
jg
mov
push
cmp
mov
jmp
sub
dec
push
adc
fists
test
sar
mov
nop
jnp
std
outsb
inc
jbe
cmp
and
jbe
xor
pop
or
sub
leave
lds
mov
roll
cmp
mov
jl
pop
inc
pop
sbb
fs
rcrl
ljmp
js
xor
popa
cwtl
imul
out
pop
sub
lods
movsl
call
ficoms
out
hlt
jp
fucomi
mov
les
pop
clc
jo
insb
test
mov
frstor
jmp
and
push
jle
lods
sarl
arpl
dec
inc
in
cld
jne
fmuls
mov
cmp
pop
pop
clc
imul
mov
push
loopne
inc
adc
nop
xor
dec
mov
out
movsb
shrl
lgs
sub
mov
pop
pop
jl
jg
jne
jbe
add
mov
out
pop
push
hlt
and
iret
pop
insl
add
out
and
into
mov
jno
sti
subb
sbb
sub
mov
cmpsb
repnz
push
pop
push
test
mov
jecxz
pushf
fwait
inc
mov
nop
rclb
outsb
pusha
xor
cmp
add
ds
cmpsb
sti
lock
orl
xchg
out
pop
out
jl
add
adc
xchg
inc
push
jle
int3
add
jne
jl
test
loopne
addl
repnz
aam
push
test
lret
inc
push
rolb
ret
sub
pop
or
xchg
add
aaa
arpl
dec
or
popf
pop
mov
lods
sbb
cltd
mov
mov
popa
jg
movsl
push
push
je
inc
push
pop
adc
sbb
mov
repnz
xchg
orb
jno
xchg
xor
int3
js
mov
xchg
jle
sbb
in
inc
jno
jecxz
inc
inc
into
dec
fnstcw
out
sub
loope
and
mov
mov
test
movsl
insb
sub
cmpsb
jo
push
and
iret
pop
or
icebp
pusha
pop
sti
mov
mov
lock
dec
test
xchg
int3
shlb
mov
cltd
jns
push
mov
lahf
inc
cmpsl
xor
popl
sbb
stos
rolb
sbb
js
or
xor
pop
push
xchg
mov
xchg
add
lods
jo
das
sahf
push
sub
fsub
sub
leave
addr16
jl
adc
les
jae
fisubs
add
ss
jne
push
xchg
leave
push
out
loopne
and
call
cmc
outsl
insb
inc
js
ret
mov
lods
mov
and
andl
loop,pn
sub
sub
insl
jae
lret
sub
divb
mov
push
mov
push
dec
mov
cmpb
sbb
in
lcall
xchg
daa
push
rolb
jmp
arpl
loop
cmp
xor
pop
push
jbe
cmp
pusha
xchg
fst
dec
sbb
jnp
pusha
mov
mov
sub
loope
test
nop
fidivrl
pusha
fstpl
scas
cmpsb
cmpl
bound
inc
outsl
fldt
xchg
rcrb
movsb
scas
jne
xchg
push
lret
and
fnstenvs
push
arpl
fstl
call
mov
sbb
popf
cmc
mov
xor
sbb
hlt
lds
ja
pop
mov
xchg
clc
int
inc
mov
push
mov
mull
roll
scas
clc
mov
or
mov
shrb
lahf
ljmp
dec
mov
xchg
stc
sarl
test
push
in
test
xor
or
dec
inc
mov
scas
gs
inc
js
call
pop
scas
movsl
push
loop
inc
je
jb
cmp
adc
mov
imul
jle
enter
cbtw
data16
outsb
and
jge
mov
push
cmp
je
inc
xor
lods
repz
and
jb
into
lods
pop
js
jecxz
add
mov
mov
cmp
sub
mov
sbbb
or
mov
inc
dec
call
gs
adc
inc
ficoms
add
stos
inc
icebp
sti
out
push
cwtl
mov
pop
leave
add
xchg
inc
mov
xor
pop
cmpsl
icebp
cmpsb
xor
ljmp
sarb
mov
call
sysenter
and
pop
popa
jmp
lret
stos
jb
mov
pop
jnp
sbb
stc
test
dec
stos
clc
xchg
in
ss
xchg
jle
sti
iret
ret
sub
es
adc
add
rcrl
jae
jle
jg
lcall
cmp
cld
test
orl
daa
mov
push
sub
dec
rclb
cmp
rclb
outsl
lds
dec
pop
mov
adcl
jle
test
and
shl
and
fcmovb
in
std
popf
mov
and
xor
pop
adc
fldl
or
in
orl
push
cmp
xchg
and
lret
push
adc
push
jp
mov
lea
dec
movsl
mov
pop
rcrl
imull
xchg
imul
sbb
mov
adc
movsl
xor
mov
inc
jecxz
pop
gs
cmp
in
inc
xchg
sahf
cli
xchg
dec
mov
and
mov
xchg
dec
push
mov
push
fistps
cmp
sub
add
add
cli
or
scas
adc
rolb
mov
or
cs
jnp
mov
xchg
xchg
aam
pop
mov
mov
mov
fucomip
cmp
adc
xor
lret
dec
cmp
push
mov
sub
arpl
mov
push
sahf
sbb
xor
jb
mov
cmp
cmp
fnstsw
ret
mov
pop
call
mov
xchg
pusha
test
dec
sar
jns
cmpsb
rolb
jb
mov
mov
mov
divl
pushl
leave
fistpl
test
adc
arpl
fisttps
cmp
jnp
stc
jl
sbb
addr16
mov
roll
pop
push
push
inc
dec
popf
cmpsl
inc
mov
mov
aas
scas
mov
sbb
loop
adc
sub
sub
inc
xor
repnz
push
andl
cmp
cli
mov
cmp
imul
mov
cli
in
roll
aam
scas
fldcw
sar
xchg
jne
pop
stos
push
int
fistpl
push
mov
lods
subl
jl
in
jae
and
shr
sbb
mov
jb
dec
mov
clc
scas
cld
push
hlt
sub
cltd
xchg
push
test
xchg
jbe
in
fbstp
jle
ret
lock
sbb
and
mov
stc
pop
nopl
sbb
push
sub
aaa
add
mulb
cwtl
hlt
xchg
scas
ret
movb
xchg
mov
pop
loop
and
dec
mov
insl
cmp
cmp
dec
pop
loop
lods
cmp
add
cli
cs
adc
dec
stos
mov
test
in
ds
loopne
pop
lods
jb
aas
mov
mull
push
pop
push
jbe
sbb
push
pop
lea
scas
cld
outsl
scas
or
xchg
rcll
dec
jb
in
mov
loopne
mov
scas
xchg
je
mov
shlb
add
popa
push
inc
test
ljmp
and
mov
test
fnstenv
jg
jl
or
cmpsb
outsl
mov
into
leave
xchg
ljmp
or
dec
rclb
mov
sti
xchg
mov
inc
sbb
bound
fwait
cmp
sbb
das
icebp
or
jb
test
into
sub
test
dec
jp
adc
lods
pop
mov
push
and
mov
imull
xor
push
jl
js
jle
and
inc
sub
aas
sub
gs
lcall
push
xchg
leave
add
jns
jl
mov
mov
popa
loope
insl
mov
lret
shlb
jmp
shld
mov
sbb
int3
push
or
add
mov
leave
push
adc
sti
xor
les
jle
push
pop
and
mov
mov
into
cwtl
stc
and
cmp
mov
insl
movsl
or
lds
push
inc
and
adcl
jle
dec
push
adc
xchg
jb
mov
xor
fs
mov
and
aas
dec
into
dec
rcrb
push
test
sub
aad
cs
xchg
jl
mov
or
pop
pusha
mov
or
in
fsubrs
adc
test
stos
fcmovb
sarb
or
inc
call
and
stos
xchg
aas
mov
outsl
adc
leave
push
mov
inc
jno
rcr
sahf
in
mov
pushf
cltd
mov
and
cmp
repz
pop
mov
idiv
push
lcall
and
jo
dec
xor
xchg
sub
pop
cmp
pop
aaa
push
cwtl
cmp
xchg
je
adc
ljmp
subb
inc
mov
mov
push
cmp
loop
and
xor
inc
in
push
pushf
pop
xor
lods
jno
pusha
cmpsl
pop
jb
fwait
cld
jbe
xchg
xchg
test
add
in
sbb
xor
int
cmp
cmp
xor
data16
sub
pop
subl
cli
mov
jno
imul
add
outsl
in
ror
pusha
cmp
dec
and
mov
in
mov
arpl
rcrb
fstp
jae
push
sbb
in
xor
call
pusha
js
cmc
pop
xor
les
aad
mov
or
loop
or
fdivl
add
jnp
lods
mov
daa
xor
xor
sahf
fs
pop
lea
inc
push
enter
lea
pop
mov
dec
jle
adc
fnstcw
push
mov
dec
push
leave
lock
add
sahf
cmc
mov
cltd
gs
sahf
outsb
les
fbstp
pop
fldcw
dec
outsl
push
cld
outsb
pop
add
add
movsb
dec
adc
sub
outsb
sbb
jns
fdivr
pop
movsl
cmp
out
fnstsw
jb
sbb
int
xchg
jno
mov
jl
fstpt
inc
push
cmp
mov
loopne
sub
cwtl
and
out
mov
ss
int
fisubs
mov
push
inc
push
cmp
addb
shlb
adc
pop
push
mov
daa
dec
dec
scas
into
sarb
sub
je
and
jb
xchg
movsb
push
pop
and
mov
jp
xchg
sbb
cmovno
xorl
push
js
xchg
sbb
push
xchg
add
ss
ret
into
rclb
in
adc
ret
cwtl
cltd
fwait
clc
sub
addr16
aaa
ljmp
cltd
push
les
push
pop
and
jbe
in
inc
pop
pop
filds
xchg
fildl
pop
mov
bound
and
fimuls
lods
jg
inc
jbe
push
mov
pop
xor
sbbb
cmp
cs
js
jmp
mov
cltd
loopne
pop
dec
test
stc
aaa
mov
popf
push
out
add
jno
xor
mov
or
cli
leave
std
fisttpl
push
jmp
mov
pop
imul
shl
fistl
push
sub
nop
nop
adc
mov
loope
add
xor
mov
fdivl
fcoms
jl
out
mov
sub
fs
ret
adc
inc
dec
lds
fwait
cmpsb
xchg
adc
or
xchg
js
add
sarl
lret
add
lret
jnp
mov
mov
cmp
mov
ret
cmp
push
adc
mov
scas
jo
push
lock
pushf
push
leave
fs
jbe
arpl
pushf
in
push
lods
inc
xchg
es
pop
dec
rcll
xchg
push
test
in
rcrl
jle
push
xchg
pusha
xchg
repnz
stc
mov
add
fistpll
xor
xchg
and
arpl
jnp
pop
lods
mov
movsl
push
out
fisttpl
das
add
mov
and
stc
imul
or
pop
es
pop
lcall
pop
lahf
test
xchg
lods
rol
call
jp
cld
int3
fldenv
jo,pt
iret
leave
and
movsb
adc
cmp
pop
repnz
rorl
xchg
popf
ja
jmp
xor
dec
test
and
in
imull
jb
sbb
dec
jno
stc
xchg
andb
testb
mov
subl
outsb
push
insl
push
pop
je
mov
inc
jg
gs
popa
sbb
scas
mulb
jmp
repnz
dec
out
sbb
mov
iret
mov
mov
cmpsl
mov
cwtl
sub
lods
jnp
cs
pop
fs
add
inc
mov
loope
dec
fnstenv
or
xchg
rcrl
out
inc
or
push
adc
bound
outsb
push
push
outsl
mov
bound
cwtl
sbb
btr
pop
in
cmc
cmp
mov
xlat
clc
aad
push
jecxz
jp
xorb
cmp
aad
mov
out
mov
in
sbbl
add
inc
das
xchg
shll
or
and
pushf
out
cltd
stos
mov
aad
or
ret
jecxz
or
mov
pop
sub
sub
std
cmc
ss
jl
sbb
andb
shr
mov
das
loop
push
fisubs
ja
cltd
addr16
mov
test
lea
sub
and
sub
stc
mov
outsl
and
fimull
xor
xchg
fdivrl
mov
loopne
pop
faddl
push
out
mov
lea
popa
or
rorb
inc
fwait
xchg
mov
cmp
dec
adc
popa
jmp
sub
push
mov
mov
pop
cwtl
cmp
test
xorb
adc
xor
movsb
pop
sarl
mov
and
jmp
aas
stc
xor
ret
inc
je
lret
jo
ljmp
mov
mov
mov
cmpsb
xchg
sahf
sbb
ljmp
adc
xlat
xchg
inc
mov
mov
andb
pop
rorb
notb
out
mov
inc
mov
ficomps
xchg
inc
jne
xor
or
pop
decb
test
inc
shr
in
gs
sbb
push
sub
mov
daa
inc
pop
push
fwait
adc
dec
ds
dec
mov
push
pop
mov
idivb
clc
mov
shlb
jns
sarb
es
cmpb
pop
test
mov
loopne
inc
xlat
lahf
cmpsl
mov
push
into
sub
push
mov
pusha
outsl
sbb
mov
aas
fwait
ds
adc
and
imul
sbb
push
or
into
mov
shll
dec
ret
or
push
cld
inc
arpl
push
cmp
fwait
jl
stos
add
sbb
xchg
add
inc
lahf
push
xchg
mov
aas
hlt
push
int3
or
push
pop
je
outsb
cli
shlb
jb
mov
cltd
xchg
outsl
bound
xchg
test
xchg
test
mov
or
add
stc
dec
fldcw
xchg
push
jb
inc
xor
mov
mov
and
jp
mov
addr16
inc
cmp
mov
bound
cli
fimuls
push
pop
xor
test
in
push
sub
mov
mov
out
inc
mov
je
inc
scas
pusha
loope
loop
aad
adc
push
mov
adc
cmp
cwtl
in
call
add
clc
and
dec
fdivs
dec
pop
mov
sub
push
stos
leave
test
inc
mov
cli
jbe
les
adc
xchg
jle
shll
sub
lcall
lock
das
inc
mov
test
mov
push
clc
dec
push
out
mov
push
clc
pop
into
test
and
lock
add
roll
pop
push
clc
xor
stos
insl
loope
or
sbb
and
les
insl
add
adc
push
mov
jno
stc
cmc
jl
pop
pop
push
clc
inc
shrl
inc
and
xor
hlt
insl
enter
jo
lock
test
push
jge
mov
push
dec
stos
fidivrs
mov
jne
lahf
mov
and
adc
clc
xor
cmovl
repz
sbb
dec
in
fwait
pop
jns
pop
inc
mov
ja
cmpsb
daa
mov
in
inc
arpl
jno
leave
dec
sub
pop
ljmp
mov
add
mov
in
sub
in
ret
cmp
push
push
inc
addr16
test
xor
adc
out
lret
jae
scas
xchg
loope
shrb
push
jbe
ds
or
and
inc
push
stos
scas
sti
mov
ret
or
xchg
xchg
arpl
xor
sbb
call
divb
jns
das
scas
push
jp
mov
cmp
std
aaa
push
add
rclb
pop
xor
mov
mov
sbb
push
mov
data16
mov
popf
mov
mov
dec
inc
sbb
mov
andb
cmpsb
movsl
fs
ret
jne
sub
cwtl
jge
cmpsl
pop
sub
cmp
push
sahf
sub
mov
clc
fisubrl
mov
imul
lock
loop
in
ss
cmpsb
mov
movb
sub
mov
inc
dec
movb
popf
jge
mov
hlt
mov
lds
inc
outsl
fwait
popf
jecxz
mov
ret
loope
dec
lahf
pop
pop
stos
cmpsb
in
push
imul
into
and
data16
repnz
in
sub
aad
xor
mov
ret
mov
inc
push
lret
ret
mov
jae
inc
cmc
les
mov
sbb
sub
inc
int3
out
jg
inc
pop
inc
out
or
xorb
push
lds
jne
push
push
add
insl
in
xchg
imul
icebp
pop
mov
imul
lret
mov
mov
adc
push
cmp
dec
or
jmp
js
cwtl
rorb
jp
imul
cmpb
dec
jno
sub
arpl
jns
stos
pop
in
lods
add
or
fisubrs
loopne
imul
push
pop
dec
stos
sbb
pushl
inc
cmp
sbb
mov
push
or
sarb
mov
xchg
xchg
fildl
faddl
push
push
or
mov
es
pop
sbb
sub
push
rcl
les
mov
add
mov
call
sub
es
mov
stc
adc
fisttpl
aam
jp
stos
clc
pusha
mov
aam
ret
sbb
fmull
mov
cmp
jb
lods
cmp
scas
insb
jg
add
adcb
int3
push
in
mov
push
xchg
movsl
sbb
cld
les
push
sbb
inc
sub
cmp
xchg
jp
sub
xchg
cmp
lahf
test
jb
outsb
imul
jmp
push
das
cmp
xor
mov
aam
mov
pop
in
insl
jg
stc
jmp
lods
mov
xchg
push
fmull
lahf
sub
lret
jnp
popa
push
jo
stos
xor
shlb
fists
adc
cmp
ja
lods
or
lcall
mov
dec
sbb
repnz
push
rorl
std
cs
push
dec
sbb
fucomi
mov
cltd
add
push
pop
in
mov
scas
lahf
or
fs
or
hlt
cs
push
shlb
cmpsb
rol
lods
jae
mov
je
dec
in
nop
push
imul
stos
inc
jae
enter
mov
leave
divb
jp
push
enter
xlat
rcr
dec
fidivl
mov
adc
push
stos
inc
out
orb
mov
pop
sbb
jp
xchg
ja
cmp
push
stos
lock
xchg
out
aaa
data16
outsl
xor
pop
mov
jne
and
xlat
inc
pop
pop
or
hlt
cmp
xlat
test
in
jae
popf
xor
adc
jecxz
cmpsb
mov
je
das
fstps
inc
outsl
push
dec
in
inc
add
push
arpl
and
xor
add
aas
cmpsb
in
adcl
pop
popa
lret
cmp
add
mov
fsub
filds
fistpl
dec
pop
data16
bound
mov
sbb
icebp
rcrl
sbb
and
xchg
dec
push
clc
gs
cmp
gs
jne
scas
les
mov
popf
cmp
mov
xor
lcall
test
and
pop
adc
fiadds
mov
das
or
dec
cmp
push
jno
mov
dec
pop
jl
shrb
mov
pop
in
fsubrs
imul
cmp
cmp
ret
loope
addr16
adc
sbb
pop
mov
rorl
sbb
mov
sbb
jnp
loop
mov
int
cwtl
pop
rep
dec
out
jg
pop
scas
sub
sbb
xchg
cs
in
xor
xchg
ds
popf
jle
ret
pop
sub
mov
fisubs
xchg
outsl
mov
mov
out
stos
ja
dec
fwait
lea
sbb
mov
dec
cmpsb
movsl
push
lcall
mov
mov
push
shll
cmpb
jno
cmp
mov
std
mov
cld
cmp
cltd
and
xor
sub
cli
and
popf
sub
xchg
js
imul
dec
xor
pop
add
cmpsl
adc
ljmp
insl
imul
outsb
movsl
loopne
mov
push
or
ret
mov
xchg
dec
cmp
push
stos
btl
js
jb
inc
cmpsb
lret
push
jo
imul
mov
cmpsl
cli
cmpsl
stc
orb
insl
inc
idiv
mov
cmp
xlat
xor
dec
xchg
push
cmp
movsb
cwtl
cld
or
pop
jge
divb
add
xchg
divb
imul
and
push
aad
in
dec
pop
outsb
dec
mov
cmp
cmp
je
dec
xchg
mov
popl
or
fisttpll
lods
adc
imul
pop
into
imul
rcr
pushf
jno
gs
sti
pushl
hlt
jbe
push
stos
sarb
movsl
push
xor
insl
data16
inc
adc
mov
mov
adc
loope
mov
fwait
imul
mov
out
les
into
in
mov
sbb
aad
cmp
js
lea
mov
test
adc
add
inc
push
jge
int
xor
cmp
mov
pushf
sti
sahf
jne
pop
jg
jne
mov
shlb
fdivr
mov
and
jnp
cmp
cmp
out
mov
jecxz
lret
jno
cmp
cmp
ret
push
test
adc
mov
dec
inc
add
or
jge
and
inc
pop
lods
arpl
arpl
sbb
dec
inc
fcoms
pop
ljmp
popa
in
into
xchg
ja
xchg
mov
loop
pusha
in
rolb
cmpsb
insb
push
sarl
ljmp
pop
mov
mov
cmp
nop
mov
mov
sub
inc
ds
xchg
cld
lret
loopne
xor
inc
mov
lcall
insl
fdiv
into
inc
popf
jns
bound
mov
pop
and
mov
or
repz
rclb
jo
mov
lret
sti
aad
cmp
cmpsl
pop
pop
dec
mov
adc
and
addr16
pop
sbb
xor
in
or
xchg
popa
cmpsb
vpand
lea
fdivr
xor
imul
fxam
mov
mov
xchg
push
filds
jp
cmp
cmc
xchg
mov
test
scas
cmpsb
mov
mov
test
sbb
in
mov
fistpll
fstpl
mov
pop
pop
cmc
cmp
xor
add
jmp
lds
pop
shrl
mov
and
xchg
pop
filds
movsb
push
xchg
movsl
je
jmp
jg
add
iret
fildl
mov
test
gs
adc
test
cmp
sbb
xchg
jbe
js
stos
inc
in
stos
add
movsb
jbe
pop
pop
dec
jp
fldcw
aas
inc
cmp
repz
or
jg
cltd
mov
sti
or
add
push
and
or
mov
lea
xchg
cmpsl
or
iret
and
fs
ljmp
mov
shll
and
sub
je
cltd
stos
pop
rcr
pop
je
mov
sahf
adc
lret
popf
cmc
sub
mov
cmp
psubsw
lcall
xacquire
inc
outsb
xchg
dec
cld
jnp
pop
xor
sbb
jbe
xlat
shr
jno
mov
pushf
push
push
mov
dec
int
adc
lret
xchg
add
adc
daa
fisttpl
cmp
xchg
dec
lods
adc
jmp
sub
adc
movsb
iret
jge
test
ljmp
cmp
jle
cmp
out
dec
clc
and
js
imul
leave
cld
fs
cld
mov
fdivp
mov
call
shrb
push
pusha
das
cmc
in
dec
imulb
push
cmp
push
push
call
ret
add
sbb
cmp
fincstp
in
aad
sub
and
adc
scas
mov
fldcw
mov
fdivrl
xchg
loope
std
mov
adc
dec
das
xorl
cmpsb
mov
pop
cmpsl
or
sub
mov
xchg
in
sti
sub
and
inc
mov
fildll
lret
and
mov
cli
mov
rcl
mov
or
imul
rclb
idivb
sbb
and
ljmp
xchg
adcb
xor
pop
cmp
mov
aam
sbb
and
sti
sbb
int
and
je
icebp
jle
data16
adcb
sub
or
movsl
lods
lret
or
cld
or
mov
xor
outsb
imul
popf
in
mov
add
ret
mov
repnz
dec
shr
insb
sbb
push
pushf
test
adc
jg
jle
cmp
mov
xlat
pushf
imul
mov
push
movsl
cmp
cmpl
iret
mov
repz
push
outsb
cmp
lds
out
nop
cli
mov
dec
jns
mov
and
dec
and
cld
arpl
idivb
lods
xor
adc
or
cmc
ret
mov
jno,pn
push
fyl2x
inc
ja
sti
dec
mov
fiaddl
fmuls
mov
mov
push
loope
cmc
cmp
dec
into
sarb
inc
inc
test
push
lret
dec
mov
imul
xchg
aaa
out
dec
arpl
jecxz
shrb
mov
in
pusha
cmpsb
mov
fs
push
mov
fimull
mov
mov
adc
insl
sub
into
outsb
aaa
jbe
fldt
jnp
push
iret
pop
mov
xor
jp
jecxz
rcr
ds
insl
cmp
fucomip
push
adc
sub
sti
inc
jno
int3
loop
sbb
mov
xchg
mov
dec
sahf
data16
cwtl
mov
outsl
outsl
and
movsb
stc
sub
shrb
nop
lea
mull
insl
sarl
mov
push
pop
jmp
push
ja
or
lods
jl
push
insb
ficoms
mov
ja
into
aaa
xor
pop
jg
das
or
stos
and
aas
jmp
addl
xor
or
push
adc
js
inc
es
cmpsl
adc
push
xor
mov
js
xchg
inc
outsb
inc
dec
stc
pop
inc
mov
cwtl
adc
data16
mov
in
rcll
sub
lods
push
imul
and
in
lock
dec
push
mov
push
stos
push
dec
pushf
xchg
inc
in
pop
frstor
leave
in
jmp
lods
pop
fbstp
into
xchg
stos
das
inc
mov
roll
ret
dec
insb
add
lods
pop
lods
cmp
mov
dec
sub
sbb
lahf
stos
lret
ja
adc
in
or
jmp
orl
pop
bound
movsb
sub
aad
add
aad
add
inc
clc
popa
jge
insb
pop
int3
mov
test
ja
insl
add
dec
sbb
adc
in
ss
add
sub
in
cmp
add
sbb
inc
insb
stc
testb
lahf
mov
jo
jmp
test
sbb
push
fmull
pop
imul
push
clc
shll
mov
or
punpckhbw
addr16
and
data16
and
dec
bound
cmc
outsb
add
inc
mov
rcrb
sbb
clc
rorl
ds
sub
mov
mov
imul
dec
xlat
jge
sbb
sub
in
fwait
test
add
stc
scas
pop
inc
pushf
scas
lods
pop
outsb
scas
push
jno
mov
pop
andb
mov
mov
imul
int
and
adc
lds
jle
je
icebp
cld
stc
out
add
aam
jbe
mov
clc
xor
cmp
in
jmp
and
test
mov
mov
ficompl
cwtl
jo
rorl
enter
pusha
or
cmp
add
and
mov
dec
xchg
imul
mov
xchg
dec
lahf
pop
pop
rclb
pushl
leave
arpl
dec
cmp
repnz
and
negl
or
ja
xor
pop
mov
fucomi
ror
push
pop
aam
fmuls
push
loop
shll
xor
sbb
xchg
adc
push
jb
outsb
scas
sahf
outsb
or
sahf
iret
jmp
xor
xchg
leave
or
mov
mov
test
adc
fcoms
jle
mov
xor
ficompl
jmp
and
push
imull
in
add
scas
jo
test
jmp
jmp
or
clc
repnz
pop
je
sub
or
or
jno
mov
dec
ja
cld
xchg
and
mov
in
xchg
mov
out
decb
jno
aam
jns
add
test
xor
das
btc
push
and
cmpl
or
cltd
cld
or
xchg
lcall
inc
jb
mov
mov
xor
push
adc
jbe
inc
add
add
add
int3
jb
mov
push
bound
fcomps
mov
imul
fimull
xor
loope
mov
and
xchg
int
movsl
out
sub
sbb
sbb
jb
push
pop
call
clc
push
inc
cld
or
das
shlb
push
push
popa
sbb
mov
push
mov
pop
push
ss
adcb
adc
mov
daa
pop
xor
aad
mov
imul
mov
xchg
adc
jae
or
or
lods
sbb
cmp
data16
jae
sahf
outsb
orb
add
clc
test
cmp
inc
out
into
repnz
andl
jo
fisubrl
sub
mov
mov
bswap
call
xor
jmp
xor
jecxz
test
popa
pop
and
in
sub
pop
fadd
add
dec
insl
aas
and
and
xchg
fld
dec
mov
aam
iret
mov
xchg
fwait
ja
mov
daa
sar
push
xchg
test
jns
adc
lea
movsb
icebp
push
sub
mov
out
in
fmull
cmp
cmp
mov
icebp
fistl
fs
sbb
fsubr
fildll
rcrl
jge
and
fnstcw
cmc
pop
clc
and
lods
or
cmp
dec
and
add
push
jmp
push
fmull
and
xchg
mov
or
data16
rcl
jne
lds
addb
or
data16
pop
push
lahf
push
push
outsb
shl
push
popf
out
pop
rcr
mov
cmp
push
adc
insl
stos
les
cmp
and
mov
div
stos
adc
xchg
outsl
cmpl
rcl
popa
scas
sbb
lds
push
loop
iret
jl
movsb
fs
xchg
dec
rol
cwtl
mov
adc
call
js
mov
xchg
adc
in
fwait
out
enter
push
clc
imul
jnp
jmp
jae
mov
jg
test
jmp
mov
clc
xorb
mov
xchg
dec
pusha
dec
mov
ficomps
nop
loop
jle
cld
xlat
jmp
bound
mov
jmp
scas
mov
inc
std
mov
xchg
xchg
push
mov
lea
or
and
loopne
stc
test
out
or
mov
xchg
sub
pushf
fisttps
popf
jno
fildl
xor
push
adcl
mov
imul
pop
mov
add
mov
les
shll
nop
cmp
pusha
jl
sub
inc
and
cmp
jb
les
add
cmp
dec
jno
sub
mov
sub
adc
sbb
loop
es
mov
movsb
les
cmp
fs
shrb
inc
nop
pop
loopne
js
test
jg
nop
test
in
add
cmp
fsub
stos
ds
push
fucom
leave
mov
adc
pop
jp
idivl
adc
mov
jl
sahf
lea
dec
or
mov
test
cld
pushf
jnp
mov
sbb
in
mov
jge
inc
pop
fsubl
lret
pop
repz
jmp
sbb
push
cli
xor
aad
fdiv
pop
fcmovbe
cmp
push
in
cmp
std
push
cmpb
pop
jb
enter
lods
mov
pop
icebp
dec
loopne
pop
pop
sub
je
pop
cmp
sti
sbb
inc
jmp
fcmovnb
push
push
dec
and
dec
pop
add
pop
sbb
xor
enter
data16
call
shll
pop
mov
dec
loopne
dec
cmpsb
insl
shll
jns
xchg
mov
and
add
jne
xor
push
std
ret
out
mov
cmp
jecxz
negb
jge
mov
cmpsb
and
or
in
je
inc
ficompl
inc
aad
cmp
dec
push
pop
popa
imul
push
inc
inc
mov
jge
adcl
out
inc
push
cwtl
cwtl
jnp
arpl
lret
inc
cmpsb
stos
mov
add
mov
in
fimuls
mov
dec
cmpsl
fsubl
and
mov
adc
mov
adc
jnp
lret
shll
insl
dec
insl
xchg
add
hlt
add
inc
adc
gs
subb
call
lods
mov
xor
pop
and
mov
mov
mov
lcall
jnp
push
jo
in
adc
lcall
sub
sbb
dec
or
pop
sbb
stc
jne
call
into
sub
ret
inc
sahf
popa
sbb
xchg
cmp
popa
xchg
sub
ljmp
sbb
int
mov
in
jae
jb
mov
sbb
dec
jae
mov
icebp
xor
sbb
out
test
push
cwtl
jae,pn
pop
leave
mov
adc
f2xm1
mov
inc
push
pop
inc
aad
cmp
repz
jge
xchg
sbb
or
sbb
pop
fldcw
je
sub
dec
orl
sti
xchg
movsb
mov
out
mov
in
shlb
outsl
fiadds
dec
push
daa
jbe
or
hlt
add
aaa
test
ja
in
pop
je
xchg
in
outsl
mov
pop
je
pop
das
mov
andl
repz
stos
pop
adc
push
pop
inc
rolb
ja
jg
dec
xchg
or
jns
inc
sbb
push
mov
aad
mov
test
mov
iret
stc
pushf
push
jbe
add
xchg
mov
daa
in
add
adc
inc
stc
das
or
jns
sub
lds
xchg
mov
nop
sbb
jg
and
mov
add
in
unpckhps
jl
sub
out
or
jo
movsb
icebp
lods
in
cli
stos
push
xchg
and
adc
xor
push
aad
mov
stc
rcrl
sub
insb
and
jge
or
adc
loop
insl
fnstsw
pop
leave
jecxz
ss
clc
xchg
xorb
pop
imul
mov
or
pop
imul
sti
fwait
sub
or
shlb
xor
cmpsl
outsl
data16
in
cltd
mov
sub
hlt
push
dec
mov
imul
jae
adc
fwait
ja
loopne
push
xchg
sbb
or
xor
andl
xlat
jno
sbb
pop
in
add
dec
push
lret
inc
mov
mov
adc
dec
xor
sub
andl
jnp
pop
pop
lods
rcrl
insb
or
pop
push
mov
iret
imul
nop
rclb
sub
and
fildll
cmc
or
xchg
sbb
inc
mov
xorb
jle
push
shlb
adc
inc
mov
mov
pop
pop
insl
ret
xor
add
mov
iret
scas
rcll
pop
and
daa
mov
out
sbb
stc
pop
cmp
pop
add
push
insl
pop
pop
mov
sub
das
test
aaa
arpl
out
mov
js
mov
push
jecxz
jg
cmp
mov
je
sbb
xchg
or
gs
jo
fcomp
push
mov
out
and
pusha
icebp
inc
push
pop
outsl
add
call
lock
mov
dec
jnp
sbb
cmpsl
jns
inc
cmpsb
xchg
mov
mov
gs
scas
orps
or
add
popf
popf
das
hlt
fcompl
rcl
sub
add
outsb
inc
leave
mov
ss
pop
inc
daa
mov
xorl
inc
inc
pop
xchg
arpl
pop
add
push
cmp
xor
pop
mov
fwait
push
cmpsl
and
and
push
xor
pop
and
nop
imull
sar
sahf
mov
jo
sub
in
xchg
add
test
mov
cmp
or
idiv
lods
sbb
arpl
dec
cld
xchg
cmp
aam
aaa
loope
sub
mov
pop
adc
dec
or
or
dec
nop
jge
test
xlat
rorl
lahf
mov
into
cltd
loop
lds
fs
loop
enter
cltd
int
mov
mov
fdiv
or
out
fisttps
push
xchg
add
mov
in
sbbb
mov
push
mov
lds
je
push
shlb
negb
xor
xchg
add
lea
pop
bound
mov
dec
cmp
jbe
cmp
push
xor
imul
loop
int
cmovp
inc
xor
sbb
sti
sahf
cmp
adc
cmp
js
pop
aam
adc
and
mov
adc
jae
mov
unpcklps
mov
jo
in
js
xlat
jo
in
stos
mov
dec
and
jle
mov
xor
lret
pushf
add
enter
in
jb
nop
add
sub
mov
pop
pushw
xchg
popf
repnz
xchg
mov
or
adc
mov
out
pop
jecxz
pop
movsb
loopne
push
mov
sub
xchg
mov
rcrl
jno
stc
add
js
add
bound
push
loop
push
and
negl
popa
sbb
add
xchg
xor
or
push
push
fistpl
movups
filds
in
jl
and
addl
xor
loopne
sbb
push
push
xchg
lods
or
or
pop
gs
push
insb
lcall
subb
gs
sbb
push
adc
xchg
pop
sbb
mov
inc
xor
int
xlat
pushf
xor
add
sbb
jne
sbb
mov
inc
pop
shrl
inc
mov
xchg
xorl
pop
sti
scas
inc
push
cltd
add
ret
push
cmp
xor
jl
ss
mov
mov
xchg
and
out
insb
dec
imul
les
movsl
dec
and
aas
lea
sbbb
xchg
push
scas
jecxz
jne
jmp
mov
jl
and
adc
out
data16
pop
loopne
add
cmp
out
sub
push
movsl
pop
inc
or
or
xchg
pop
mov
mov
scas
cmpl
lea
lret
popa
in
add
cwtl
out
jp
add
shlb
shlb
movsl
mov
fcomps
and
sub
cmp
jp
lret
cld
push
inc
sbb
mov
imul
fwait
sarl
xchg
popa
nop
stc
stos
pop
xchg
mov
ret
imul
mov
pop
push
mov
xchg
push
movsl
dec
mov
fsts
pop
lods
fstl
mov
cmpsb
mov
mov
out
mov
jne
jne
enter
and
inc
iret
pop
outsl
fwait
mov
dec
shrl
fdivrs
push
mov
xchg
fisubl
outsb
aad
or
stos
out
jno
xchg
lcall
into
cmp
sbb
ret
bnd
int3
cmpsl
gs
imul
add
cmp
cmp
add
pusha
push
mov
cli
imul
pushf
inc
mov
mov
fmuls
in
les
mov
jecxz
into
pushl
pop
adc
sub
and
pop
fisubl
xor
push
cmpb
sbb
fldl
stos
jle
xor
insl
sbb
sar
mov
cmpsb
movsb
fldpi
pop
jl
fwait
mov
push
es
dec
xor
cmp
nop
fists
adc
xor
cmp
push
ljmp
and
xchg
and
sbb
cmpsb
mov
lcall
or
icebp
inc
mov
imul
aad
popf
dec
out
sbb
mov
dec
leave
inc
fildl
mov
sub
inc
ja
outsl
popf
lods
jge
add
mov
pop
and
mov
in
mov
push
ret
inc
pop
fbstp
sub
xlat
in
mov
mov
dec
and
cmpsl
mov
xchg
jns
or
adc
je
pop
lahf
sub
gs
stos
jl
pusha
inc
stos
mov
es
push
insl
jecxz
add
lea
addr16
jl
fscale
sub
popf
push
adc
mov
mov
push
loopne
scas
lods
mov
cmpsl
test
ss
mov
push
imulb
leave
jno
mov
jle
test
lret
out
and
insb
pushf
popf
lcall
sbb
mov
dec
sbb
lods
cli
xor
aas
sbb
xchg
mov
loope
sub
sbb
push
test
pop
rcrb
mov
pop
inc
cmp
insb
rorl
cmp
xlat
sbb
or
sbb
sbb
and
inc
hlt
push
add
fstpl
push
xlat
mov
xor
ret
lret
out
ljmp
outsl
mov
dec
lds
mov
xchg
xor
add
adc
lds
aam
das
clc
pop
mov
pop
xor
add
xor
xor
pop
and
arpl
sbb
mov
shll
gs
xor
or
dec
dec
es
jle
and
mov
repnz
mov
sbb
fcoms
pop
pop
test
ret
ss
or
sub
jle
repnz
gs
iret
jmp
ss
xor
mov
mov
rorl
cmp
das
je
shlb
fidivl
mov
mov
data16
or
cmp
mov
loopne
jo
popf
fnstenv
mov
or
test
test
sub
loope
add
dec
movsb
loope
add
mov
fsubs
mov
insb
lret
push
cmp
push
out
push
push
sbb
inc
into
out
mov
mov
andb
shl
stc
xchg
rcrb
frstor
lds
out
aas
ss
data16
sub
fidivl
out
push
lods
in
adcb
imul
int
sahf
jl
bnd
movsb
mov
dec
push
xlat
aas
mov
scas
xchg
pushw
dec
mov
call
dec
cmc
in
xlat
sbb
adc
les
mov
sub
mov
movsb
icebp
inc
mov
aaa
xchg
xchg
addr16
sbb
fisttps
fiadds
pop
xchg
idivl
movsl
adc
and
out
repnz
inc
add
and
leave
jle
jg
sahf
les
dec
clc
dec
or
cmp
xor
and
sbb
add
ja
fs
adc
rclb
lds
inc
or
jnp
fwait
cmp
pop
arpl
test
xchg
xchg
pop
jnp
filds
test
pop
mov
or
pop
subb
inc
mov
or
lahf
loope
pop
cmp
mov
add
adc
xor
dec
rorl
mov
pop
xchg
loop
sub
testb
xchg
repnz
aas
dec
out
cmp
movsl
cmp
stos
shlb
icebp
orb
mov
xchg
out
xor
sbbl
cmp
jo
pop
mov
mov
xchg
push
or
push
pop
int3
xchg
iret
cltd
pop
in
push
push
ror
je
shlb
arpl
inc
jmp
xor
test
stos
jbe
int3
dec
mov
adc
movsb
ljmp
and
xchg
jae
into
loopne
inc
jae
dec
add
add
rorb
lret
or
push
sbbb
dec
mov
mov
or
jae
sbb
or
repz
push
hlt
andb
push
adc
mov
daa
loopne
sbb
imulb
pop
outsb
cmp
cmp
push
jle
test
pushf
nop
jo
iret
shlb
mov
push
mov
fbstp
lret
in
and
insb
pop
and
insl
mov
inc
xchg
mov
sub
aas
and
test
pusha
icebp
lahf
pusha
xor
ficoml
insl
dec
xchg
in
jne
or
mov
sti
sub
adc
out
add
mov
jo
dec
fisttpll
mov
mov
rcrb
repnz
xor
out
jmp
testl
mov
clc
pop
inc
cmp
dec
pusha
jns
outsl
mov
int
mov
stos
sub
shll
push
int3
lods
add
mov
mov
fmuls
sbb
sbb
xchg
fisubrs
pop
arpl
test
pop
pop
pushf
sbb
and
push
push
lds
fs
pop
jmp
jg
pop
lret
adc
es
mov
arpl
mov
or
jne
lahf
imul
mov
jae
loopne
jno
ds
out
mov
data16
or
jge
insb
pop
sbb
or
mov
ret
ret
iret
mov
cs
add
inc
rcrl
mov
add
push
pop
sub
scas
dec
xor
sbb
ss
and
adc
ret
sbb
mov
fstpt
repz
dec
ljmp
std
mov
push
sub
les
add
mov
icebp
dec
xchg
jl
call
in
outsb
adc
dec
or
loopne
mov
inc
sbb
out
pop
mov
hlt
jbe
or
jno
int3
sub
lea
fs
lret
pop
sub
pop
mov
add
cli
xor
pop
cmp
ficoms
cmp
aad
out
jge
mov
ja
out
enter
hlt
xor
sub
mov
bnd
jne
hlt
aad
cmp
dec
xor
sub
sbb
lea
push
push
pop
aam
push
cmp
push
out
in
popa
jmp
inc
call
adc
cmpsb
or
outsl
nop
mov
jecxz
dec
jmp
mov
mov
push
scas
add
jecxz
jmp
pusha
js
xor
push
sub
les
mov
mov
fcoms
pop
xchg
add
inc
adc
cwtl
inc
pop
bound
outsl
cmpsl
sub
jae
cmpsl
mov
iret
ss
push
jg
pop
adc
loop
jle
js
pop
mov
lret
push
mov
shll
fisubrl
cld
push
call
insb
fcmovbe
mov
adc
mov
rclb
stos
or
call
movsb
xchg
mov
pop
addr16
xor
xchg
adc
gs
test
xchg
shrl
movsl
and
lret
and
dec
push
jle
mov
jl
cmc
and
fcomi
dec
adc
mov
loop
jecxz
push
xchg
inc
int3
notl
mov
js
mov
inc
ret
ljmp
inc
daa
ret
mov
pop
mov
out
xchg
push
add
pop
insb
xor
rcl
sub
pop
dec
cmpsl
test
les
cmp
and
jp
f2xm1
test
aas
fldt
out
inc
jb
js
bound
pop
add
add
adc
push
arpl
bound
shll
call
popf
mov
pop
ret
dec
pop
arpl
pop
arpl
daa
stos
hlt
cmp
sub
lods
sub
mov
pushf
addr16
mov
add
out
xchg
pop
out
or
push
mov
and
testl
inc
mov
add
add
mov
mov
aaa
adc
sahf
and
adc
dec
hlt
pop
xor
xchg
adc
iret
inc
lock
loop
aam
sarl
ret
xchg
mov
imul
cmpsb
mov
push
sbb
pop
gs
jb
outsb
outsl
jo
mov
dec
push
adc
and
out
in
xor
jnp
and
jp
inc
das
icebp
pop
out
arpl
jg
divb
loope
bound
mov
ss
cmpl
in
lock
jne
mov
sbb
rorb
jb
and
addr16
mov
decb
loopne
dec
scas
icebp
aaa
outsb
push
popa
or
add
or
stos
stc
mov
xor
psubsw
popa
mov
stos
xor
push
cmc
lcall
mov
addr16
je
in
test
inc
sarl
lcall
fwait
jmp
jae
subl
xor
adc
divb
mov
add
out
pop
addr16
lods
and
jmp
push
dec
int3
xor
in
fidivs
jle
imul
lods
mov
lret
push
data16
pop
out
addb
xlat
movsb
xchg
dec
sbb
scas
aam
outsl
cmp
mov
push
cmp
mov
sbb
or
data16
sar
shrb
test
mov
mov
lcall
jg
ret
cmp
xchg
push
dec
sbb
push
dec
add
sbb
rcrb
outsb
outsb
ss
jecxz
mov
mov
sub
adc
lcall
jg
cs
aas
mov
inc
push
mov
adc
mov
mov
mov
mov
arpl
cld
outsb
push
cmp
out
cmc
lret
bound
jbe
jle
and
in
je
dec
push
hlt
cmpsl
mul
je
fwait
stos
pushw
ljmp
mov
push
scas
notb
sti
daa
sub
aad
orb
out
js
xor
jae
aas
fiadds
mulb
dec
xor
stc
adc
mov
add
ret
call
jae
nop
subb
mov
test
popf
mov
adc
scas
xchg
adc
cmp
clc
xor
arpl
cld
fnstsw
outsl
jb
loopne
jecxz
mov
sub
int3
cmpsb
inc
test
mov
sbb
xchg
in
pop
popf
orb
cld
or
popf
sub
mov
inc
pop
daa
xchg
xchg
mov
test
fmul
mov
mov
daa
arpl
sbb
adcl
push
inc
sub
popf
or
es
call
inc
imul
pusha
dec
pop
and
mov
or
sub
add
add
mov
jae
scas
fst
cld
adc
outsb
repnz
mov
add
mulb
add
pop
xor
lahf
xor
sub
mov
fstpl
popa
pushf
rcr
in
loopne
cmp
or
push
call
pusha
mov
sahf
push
decb
out
pop
loopne
lea
push
enter
cmp
fnstenv
lods
fimuls
mov
push
pop
add
xchg
lock
popf
cmp
dec
shll
ret
add
hlt
push
ret
pop
push
ret
xchg
test
or
shlb
pop
fiaddl
sub
loopne
imul
fdivrp
xchg
push
pop
push
xchg
sbb
pop
xchg
fdivs
push
in
mov
xchg
cltd
mov
mov
dec
or
lods
loope
pop
cmp
aam
mov
fisubs
shrl
jecxz
std
xor
add
mov
mov
fcomps
outsb
int3
push
push
cwtl
xchg
cmp
int3
aaa
and
sub
outsl
fdivrp
rorl
cli
out
dec
rol
lret
pop
mov
sysenter
xor
rcll
rorb
push
clc
dec
adc
add
sarl
repz
xchg
xchg
int3
idivl
mov
xchg
jns
pusha
das
shlb
lock
sbb
and
sbb
outsb
sbb
xchg
sbb
test
scas
mov
adc
fsts
outsb
mov
sbbl
cmp
in
repz
fists
sbb
xor
pop
cltd
push
in
and
dec
loope
pop
fstps
dec
clc
xlat
push
xor
ljmp
mov
outsl
repnz
pop
mov
shlb
inc
jo
hlt
cmpsb
sub
lret
stos
mov
sbb
fimuls
stos
and
pop
movsl
pop
repz
cmp
sub
ljmp
mov
push
mov
shll
ret
push
cli
mov
fmuls
sub
pop
sbb
lahf
push
jl
lret
cmp
lret
mov
lret
neg
and
icebp
pop
xchg
cmp
cmp
outsl
push
lock
lahf
mov
dec
imull
sub
cmpsl
inc
pop
pop
loopne
mov
aaa
test
xchg
xchg
lds
mov
in
stos
inc
lahf
nop
in
lods
inc
fisubrs
cmpsb
outsb
jge
movsl
stos
xchg
cmpb
insl
fwait
out
lock
xchg
out
add
add
cs
dec
mov
ljmp
call
mov
movsb
out
dec
xchg
push
xchg
es
insl
xchg
push
jno
fidivrs
fistpll
mov
shl
mov
mov
and
mov
xlat
pop
ljmp
push
ljmp
lock
loope
pop
xor
push
inc
fcmovu
jmp
cltd
mov
fwait
push
data16
fildll
cmp
test
mov
cmpsb
cmp
mov
cmp
lret
fisubrs
xor
cmp
in
adc
cmpl
xor
lock
cs
popa
ljmp
adc
cmp
cmp
sub
sub
in
das
mov
xchg
inc
movsl
mov
inc
jmp
dec
adc
pop
pop
or
cmp
hlt
rorb
insl
test
jbe
push
ljmp
shrl
inc
mov
pop
sub
or
push
xor
mov
jp
clc
pop
shrb
stc
imul
xchg
pcmpeqw
and
mov
inc
andb
into
add
shlb
ja
loop
pop
out
pop
repnz
fldl
loopne
arpl
add
fwait
push
mov
mov
jb
adc
jg
push
or
push
adc
mov
mov
jno
das
push
jae
arpl
out
jecxz
in
mov
push
pop
adcl
roll
or
jns
inc
in
pop
pushf
mov
mov
jb
pop
out
push
out
xor
sub
dec
cmpsb
jae
xchg
mov
mov
and
xlat
fidivl
xor
pop
pop
shll
adc
push
jne
xchg
and
inc
pop
sbb
or
and
and
je
push
popf
lods
clc
popa
push
inc
stc
call
xchg
push
sub
mov
mov
packuswb
out
push
mov
jp
mov
aaa
and
idivb
int
xchg
pop
shl
lret
cltd
sbb
jns
adc
mov
push
mov
incl
mov
sub
cmpsl
and
aas
cmc
mov
daa
js
xor
and
cmpsb
mov
shrd
imul
push
pop
add
mov
and
pop
and
sub
push
jnp
sub
mov
mov
lea
out
pop
jb
cmpsb
cmp
mov
out
mov
out
imul
xchg
pop
iret
push
xchg
sahf
mov
leave
mov
rorl
dec
mov
dec
or
pop
xor
adc
add
insl
pop
fistps
mov
jbe
adcb
nop
icebp
mov
in
mov
jge
jl
imul
int
sub
jp
mov
xchg
mov
pushf
mov
rclb
pop
test
xchg
pop
inc
int
jle
scas
mov
sbb
jmp
out
scas
addr16
scas
mov
sbb
pop
fmuls
mov
mov
mov
cmp
or
add
push
gs
cwtl
jmp
sub
xor
push
jmp
xchg
dec
jbe,pt
fldcw
pop
or
add
push
inc
mov
mov
push
dec
std
pop
jmp
add
scas
xchg
ss
xchg
popa
outsl
pop
dec
scas
sub
xchg
xchg
add
add
out
hlt
push
roll
rclb
scas
jge
and
loopne
pop
pop
movsb
loope
cwtl
cld
cs
lock
xchg
dec
dec
dec
adc
xor
xchg
xor
pop
imul
mov
xchg
sarl
jno
and
mov
cmpsb
pop
pop
fisubl
test
lea
shrb
arpl
fistpl
add
dec
arpl
into
mov
push
xchg
add
fs
out
out
int3
into
push
or
in
pop
mov
dec
imul
xor
lret
cmp
pop
and
mov
mov
cmp
orb
stc
jnp
fnstcw
int3
pop
lahf
mov
mov
dec
xor
inc
test
mov
loope
lcall
mov
fdivs
mov
sbb
inc
inc
stos
sahf
pop
xchg
xchg
pop
dec
dec
adc
xor
ljmp
add
jecxz
mov
popf
out
xchg
jle
scas
addr16
inc
pop
cmpsb
mov
std
cmp
push
jns
hlt
loop
cwtl
pop
jmp
sbb
sub
jbe
or
stc
mov
pop
push
or
leave
sbbl
ret
fmull
and
cmpsl
xor
das
jecxz
cmc
and
add
iret
mov
xchg
adc
pop
outsl
cmovl
in
out
jbe
addr16
in
ss
push
repz
and
cwtl
ljmp
and
sub
sarl
dec
dec
cs
mov
jmp
icebp
and
cmp
push
xorl
mov
sub
ret
subl
pusha
xor
push
gs
add
fdivs
pop
xchg
cwtl
xchg
push
arpl
dec
pop
aas
add
mov
inc
pop
push
adc
lds
mov
cld
ficoml
adc
dec
aaa
cmp
mov
stos
js
and
outsl
mov
stos
add
cmpsl
mov
cmpsl
fstps
mov
fnstcw
cs
mov
mov
pop
iret
xacquire
fstl
push
inc
lds
es
std
pop
arpl
pop
pop
push
dec
lods
jg
or
fdivrl
xchg
subps
leave
push
cmp
or
pop
cld
inc
xor
dec
pop
out
sti
and
mov
nop
push
es
ret
mov
shll
pop
and
test
fs
dec
test
loope
xor
in
mov
xor
push
iret
loopne
add
mov
mov
sbb
push
sbb
dec
sbb
lock
mov
jmp
ret
pop
imul
inc
xor
popa
and
idiv
dec
scas
mov
inc
mov
add
std
sbb
mov
enter
fistl
adc
rcrl
bswap
dec
mov
sbb
aaa
and
mov
jae
push
les
or
sbb
shrl
xchg
sbb
jo
xor
cwtl
cwtl
or
pushf
iret
push
push
jge
js
test
ret
or
cmpsl
mov
xor
leave
out
mov
or
sbb
jno
xlat
js
xchg
addl
cmp
insb
adc
push
push
pop
int3
mov
mov
test
add
andb
pop
and
fimuls
mov
call
pop
dec
sub
scas
sub
cmp
xor
loop
mov
dec
neg
adc
incl
mov
aaa
imul
mov
lret
lret
lods
sub
inc
mov
mov
add
sub
cmp
aam
testb
pop
popl
lahf
adc
leave
add
inc
add
movb
nop
dec
ret
icebp
into
push
in
dec
jmp
add
xor
ret
xor
mov
sub
fcmovnb
adc
das
add
test
sahf
cmp
mov
imul
jno
xchg
or
gs
fst
push
push
out
add
add
inc
sbb
jne
pushf
mov
ret
inc
scas
push
and
push
jno
lods
fisubl
push
fs
add
xchg
fwait
pop
into
sbb
fiaddl
mov
pop
stos
aas
inc
jo
lahf
fimull
pop
add
prefetchw
repnz
call
pop
jmp
mov
add
inc
xor
cli
cmp
sub
jl
data16
dec
pop
mov
aam
pusha
sbb
rorl
jne
ss
add
mov
aaa
outsb
fidivl
push
jg
bound
scas
pop
stos
icebp
xchg
insb
mov
outsb
insl
pop
and
jbe
mov
repnz
or
xor
hlt
std
fwait
dec
add
push
jmp
mov
pop
fcompl
iret
cwtl
xlat
stos
mov
testb
jl
jl
int3
loop
fdivrl
rol
aam
push
pop
mov
pop
cld
cwtl
cmp
repz
loopne
adc
add
mov
xorl
ja
insl
scas
fstp
into
js
mov
mov
or
dec
adc
iret
inc
sub
in
pop
mov
out
jmp
lea
cwtl
pushf
cmp
cmc
push
sub
pop
xor
out
aad
psadbw
xlat
jbe
jl
add
push
scas
je
adc
ljmp
aaa
adc
fisubrl
mov
mov
int
out
fimuls
mov
pop
fstpt
xchg
lds
mov
adc
and
mov
scas
or
outsb
mov
ljmp
adc
cmp
int3
cmc
xchg
cmpsl
mov
iret
sub
cmp
sub
inc
iret
lret
push
out
mov
test
xor
jecxz
push
gs
adc
adc
xor
fimull
dec
lods
arpl
add
mov
push
dec
dec
lds
addl
add
lahf
xchg
call
jb
rcr
sti
stos
jle
sbb
mov
xchg
dec
adc
xlat
adc
add
xchg
sub
in
xor
jge
sahf
and
xchg
sbb
xchg
dec
jmp
movl
mov
rcrb
cmp
stos
in
jg
rcll
aas
push
cwtl
popf
pop
mov
pop
out
in
popa
and
sub
push
inc
ds
mov
sbb
push
cmpsb
adcl
into
jno
xor
cld
pop
clc
jecxz
out
or
inc
or
stos
adc
lea
nop
repnz
inc
data16
adc
and
mov
jne
add
push
mov
mov
inc
mov
cld
mov
outsb
movsb
sbb
sbb
xchg
inc
out
filds
leave
fdivl
popf
cwtl
pop
adc
call
jecxz
imul
adc
pusha
xchg
aad
and
cmp
pop
xchg
mov
dec
jbe
cmp
adc
test
test
dec
sub
cmp
cmp
jg
sbb
scas
push
cmp
loop
mov
adc
fcomi
xchg
jno
or
leave
iret
adc
addr16
lds
fld
mov
out
insb
test
sbb
push
dec
sbbl
repnz
fnstsw
test
loopne
cmp
mov
cmp
cmp
movntps
cli
test
mov
inc
mov
outsl
sub
aad
lahf
cmc
les
xchg
jle
lds
popa
pusha
inc
fdivs
rcrb
sub
test
mov
pop
xor
cmpsb
jae
xchg
mov
xchg
jl
cmc
pop
xchg
jo
or
adc
outsb
outsl
ljmp
stc
lahf
test
pop
popf
insb
aad
push
pop
rclb
jnp
pop
dec
rorb
popf
ljmp
out
push
inc
lret
mov
fisubl
adc
stc
mov
rorb
add
xor
andb
add
movsl
fistps
and
stos
outsb
mov
push
cli
scas
push
xchg
in
add
outsb
scas
mov
in
adc
call
test
xchg
push
xchg
test
mov
lret
cli
adc
out
test
adc
insb
test
mov
adc
das
xchg
or
sub
or
lds
pop
or
push
pop
icebp
xchg
popa
aas
call
cmpsl
arpl
push
fsts
loopne
sub
jle
push
icebp
sub
push
gs
stos
sbb
cmp
xchg
mov
dec
clc
fdivs
mov
sbb
dec
or
and
jp
test
sbb
inc
js
push
vmread
ss
int3
xchg
xchg
mov
dec
repz
add
or
xchg
hlt
ds
push
add
push
movsb
jg
add
and
fistps
aam
jmp
cmp
dec
icebp
xor
aas
inc
and
push
pop
aas
stos
mov
add
mov
fcmovb
dec
popa
dec
fsub
push
adc
lds
lea
sub
sub
imul
imul
sub
out
cmpsl
mov
cmp
jl
dec
xor
lahf
ljmp
repnz
jmp
mov
outsl
dec
gs
sub
ds
push
add
lods
bound
or
lahf
xchg
cld
mov
mov
mov
pop
add
enter
cmpsl
shlb
mov
or
dec
adc
cli
dec
jnp
jnp
cmpsb
jns
je
aas
mov
mov
inc
scas
fisubrs
xchg
pop
aas
dec
pop
xchg
mov
mov
int
cltd
jno
pop
in
xchg
aaa
arpl
mov
out
movsb
inc
lods
test
testb
cmc
mov
lods
add
mov
sarb
cmove
orl
adc
add
bound
jge
mov
dec
adc
xchg
loopne
incl
pop
xor
sub
mov
dec
jmp
mov
push
push
xlat
and
int
push
sub
and
jle
leave
shr
xchg
jmp
pop
jl
stc
jecxz
xor
sbb
call
das
jg
fs
rcrb
mov
scas
lret
adc
std
movsb
outsl
xchg
mov
xchg
push
adc
push
fldl
add
xchg
mov
aaa
aad
dec
movsl
iret
into
mov
bound
aaa
pop
insl
outsb
sbb
leave
xor
inc
ljmp
ss
rorb
jmp
adc
sbbl
pop
pop
inc
lock
arpl
cmc
aam
shlb
loope
xor
call
xchg
xor
add
mov
pop
adc
mov
enter
sahf
shll
int
fnstcw
jge
pushf
rcrb
js
adc
int3
lret
xchg
mov
and
mov
dec
cs
sbb
fisubrs
pop
repz
test
push
push
push
call
sub
mov
sub
cmp
cmp
leave
xchg
pop
fs
sub
mov
xor
mov
push
lahf
mov
cmpsl
sbb
roll
pop
fiaddl
lods
adc
xlat
sub
xchg
push
inc
int
addb
call
loopne
cmp
inc
pop
subl
ss
das
xor
test
fwait
dec
sub
and
repz
pop
sbb
inc
call
out
push
arpl
call
fisubrl
shrl
sbbl
xor
cmc
jae
loop
xchg
repnz
out
mov
cmp
fnstsw
push
cli
cmp
add
and
cmpsb
cli
sbb
cli
jecxz
pop
icebp
mov
mov
daa
pop
adc
daa
jae
jae
addl
lcall
push
mov
sub
cmpsb
and
popa
dec
inc
clc
pop
adc
loopne
std
xor
sub
js
sbb
daa
adc
in
dec
mov
arpl
inc
insb
repnz
xchg
mov
push
mov
mov
adc
xchg
xor
jb
fwait
cmpsb
and
pop
push
in
testl
in
xorb
clc
inc
cli
adcl
fwait
mov
out
shrb
mov
nop
xchg
ffreep
xchg
scas
jnp
mov
adc
cmp
mov
add
pinsrw
test
loop
and
dec
fisubl
xor
sub
frndint
xchg
pop
sub
in
ljmp
add
lods
dec
add
outsl
addl
insl
lds
mov
sub
and
shr
pop
hlt
insl
inc
inc
test
lods
scas
cmp
dec
pop
in
or
jl
add
dec
ss
icebp
or
lods
dec
movsb
xchg
lcall
jo
fcomps
mov
repz
mov
or
adc
xchg
xchg
or
popf
xchg
jo
xchg
cmpsw
sub
xor
das
inc
mov
cmc
cmpsb
mov
cmpsb
das
or
sbb
dec
xchg
sti
adc
push
out
into
icebp
shrb
push
fidivrl
adc
push
xor
sub
mov
mov
and
sub
dec
int
and
es
pop
mov
pop
mov
cmpsb
sbb
jmp
daa
ret
pop
cmpsl
sbb
push
orb
iret
mov
mov
push
mov
addr16
imul
sbb
js
mov
insl
xchg
adcl
jno
cmp
adc
test
add
sbb
xchg
adc
nop
inc
fst
or
mov
data16
jo
and
and
fs
xchg
mov
sbb
jle
mov
dec
pop
leave
sub
repnz
pop
cmp
dec
inc
repnz
jmp
imul
mov
adc
pop
dec
ret
pop
sbb
sub
inc
fsubr
mov
xorb
mov
push
movsb
repnz
outsb
inc
jp,pn
cmp
popa
fwait
nop
scas
mov
sti
cmp
cmp
lock
xchg
out
pop
jb
xchg
aas
insb
lea
mov
ficoml
out
sub
or
jp
mov
lds
fcmovne
mov
sub
mov
mov
outsl
pushf
sahf
and
jns
pop
mov
sti
aam
imull
cmp
add
movb
xchg
mov
std
pop
mov
mov
pop
repnz
mov
addb
mov
cmc
push
pop
mov
xlat
daa
fistpl
jno
xlat
sbb
enter
cld
mov
xchg
fisttps
les
daa
hlt
ret
jle
idivb
imul
inc
cmp
sub
outsl
mov
mov
push
jnp
jne
cwtl
loopne
mov
loopne,pt
fcomi
cmpsb
mov
cmpl
cmp
std
outsb
stc
dec
xchg
aam
add
jle
push
sbb
xchg
cmpsl
mov
jp
cmovno
or
and
stos
adc
or
decb
xchg
cmpsb
adc
xlat
shlb
sub
sub
lock
push
xor
or
lret
jl
dec
push
in
and
fs
fwait
adc
in
sbb
add
out
or
push
cld
jb
data16
mov
cmp
mov
outsl
pop
xlat
and
js
mov
mov
cmpsl
lea
aad
mov
mull
loop
mov
sti
cmpsb
add
inc
pop
leave
push
xor
ljmp
ja
jmp
push
hlt
aam
pop
incb
sub
iret
aas
test
data16
lcall
inc
or
add
popa
add
sub
inc
cmpsl
std
cmp
dec
iret
xchg
and
inc
les
or
push
cmp
stos
or
aaa
inc
repz
lahf
dec
jmp
stc
pop
dec
or
pop
and
mov
xchg
pop
imul
fsts
in
push
into
sarb
nop
and
testb
rorb
cmc
fists
mov
mov
mov
out
lret
and
repz
cld
fdivp
outsl
rorb
mov
lds
hlt
js
out
lret
int3
gs
mov
loope
insb
leave
pop
mov
decl
xor
adcb
inc
lock
sbb
fcompl
repnz
push
cli
sub
push
mov
idivl
sarb
leave
xor
dec
mov
sbb
adc
scas
das
xchg
insl
or
adc
mov
jecxz
sti
inc
les
pop
adc
xchg
mov
adc
nop
into
js
mov
lods
and
test
adc
add
lods
scas
inc
jae
pop
cmp
movsl
mov
and
push
cmp
push
mov
popf
xchg
rol
lcall
inc
adc
fwait
jnp
test
cmp
add
cs
xchg
int3
xchg
jp
out
test
andl
dec
mov
sub
sbb
pop
dec
pushf
int
sahf
sub
sbb
iret
imul
scas
andl
fimull
pop
pop
pop
dec
jg
jge
fisubs
or
and
popf
je
iret
jns
mov
scas
ror
mov
cmp
cwtl
rol
xchg
inc
shl
or
nop
mov
and
imul
je
xchg
test
rolb
dec
arpl
mov
pusha
test
pop
dec
sti
test
lods
jp
push
imul
sub
pusha
movsl
pop
ss
cwtl
pop
adc
or
fwait
inc
dec
and
xor
ret
cmpb
jo
xorb
mov
stos
cmc
adc
sbb
enter
xchg
in
mov
fdivr
push
push
xchg
jle
loope
rolb
mov
cmc
fisubs
bnd
dec
xor
add
adc
push
test
jb
pop
fsub
mov
cmp
cmc
lds
lods
je
je
repz
pop
and
lcall
push
arpl
push
and
and
pop
push
add
ds
out
cwtl
loope
fmuls
jg
lret
nop
out
add
outsb
jb
xor
arpl
xor
sub
orb
inc
cmp
mov
les
cmpsl
cld
jge
shrl
incb
push
test
lods
into
mov
gs
cli
lcall
cmp
inc
jp
addr16
sti
movsb
ds
mov
test
popa
je
lret
sub
xchg
fdivl
xchg
ja
fcomps
fs
or
inc
cmpsb
cld
lds
pushf
ret
lcall
xchg
das
mov
add
mov
frstor
mov
mov
xor
sub
int
push
mov
pop
call
mov
sbb
jl
pop
jo
loop
dec
add
daa
adc
cs
inc
paddusb
xor
sub
jns
jns
repnz
shll
ret
cmpsl
stos
cli
dec
fcompl
push
shrb
add
push
loop
adc
cmp
pop
or
xchg
jne
mov
scas
aad
xor
adc
inc
sub
scas
lds
mov
mov
inc
call
push
repnz
cmp
push
js
and
jle
ret
lret
lods
stc
gs
loop
aad
jle
add
test
mov
out
mov
pushf
mov
loopne
test
push
testl
add
rcrl
lret
or
ja
xlat
pop
pushf
mov
cmc
js
inc
jnp
popl
push
test
pop
pop
fldl
adc
mov
test
es
xchg
fstps
icebp
test
push
cwtl
imul
sti
pop
mov
xchg
or
lock
out
inc
fs
addr16
imul
stos
je
or
call
imul
jns
cmpb
xchg
mov
orb
pusha
xchg
stos
xchg
xor
adc
dec
adc
hlt
dec
shrl
mov
cltd
popl
lahf
insl
and
pop
add
mov
xchg
lcall
xor
xchg
add
or
mov
andb
pop
push
pop
cmovns
sbb
daa
mov
mov
mov
pop
xor
push
out
shr
inc
call
dec
inc
lea
adcl
es
imul
pop
mov
and
addr16
sbb
imul
dec
ficoms
adc
pop
xor
mov
mov
cmovge
shr
cmc
lea
xor
negl
or
iret
insb
mov
add
in
popf
lret
or
jge
mov
sub
inc
test
sub
ss
mov
sub
inc
xor
jp
and
mov
sbbb
les
push
int3
insl
mov
enter
imul
lcall
sbb
addr16
repnz
inc
into
cwtl
lock
jo
enter
aaa
add
dec
pop
icebp
cld
inc
mov
mov
out
divl
pop
test
push
inc
inc
xor
pop
test
push
jbe
pop
mov
dec
in
push
pop
xorl
cli
push
pop
filds
in
xchg
pop
sti
cwtl
mov
mov
aas
int3
rorb
mov
adc
testb
into
xor
int
rclb
push
mov
jb
push
cli
pop
dec
sbb
mov
push
pop
jp
adc
cmc
dec
pop
sbb
and
roll
adc
inc
mov
adc
insb
sub
iret
xchg
stos
aas
cmp
push
xor
jl
insb
fs
test
push
sub
enter
jl
xchg
sbb
pop
sub
mov
imul
and
aad
es
cwtl
mov
pop
fsubrs
pop
dec
mov
cmpsb
imul
dec
lods
jle
addl
test
xor
mov
mov
fcomip
outsl
mov
movsb
aam
test
imul
mov
cltd
in
mov
pop
and
xor
push
in
test
push
and
out
rclb
mov
lcall
into
cmovb
mov
add
jl
bt
mov
jno
sub
cmp
sahf
nop
mulb
xchg
shrl
icebp
fxam
pop
cli
outsb
xor
pop
ret
int
scas
arpl
push
dec
fsts
lods
xchg
mov
cmp
ret
or
xorl
add
sbb
lods
mov
xchg
popa
mov
xchg
pop
js
lds
out
push
pop
ljmp
push
cli
jbe
popa
insl
or
mov
ja
enter
xor
ficompl
out
push
lods
mov
or
add
arpl
jecxz
aam
pop
dec
pop
pop
repnz
mov
mov
lret
push
cmp
mov
out
imul
push
stos
mov
xor
cwtl
push
sar
pop
xor
cld
xchg
andb
jbe
sti
aad
inc
leave
sub
sub
inc
inc
lret
jecxz
push
adc
icebp
out
popf
jmp
ss
ret
insb
mov
shlb
inc
inc
cmp
pop
add
sub
test
test
adcl
pushf
pop
outsb
sti
in
jl
pop
repnz
nop
shll
lret
shlb
dec
sbb
pop
loopne
adc
and
push
push
fidivl
sub
push
iret
or
lock
lea
test
mov
loope
xchg
adc
popl
stos
pop
loope
lods
sub
pop
mov
adcb
sbb
mov
loop
xchg
orb
sub
out
pop
push
scas
push
ss
lret
sbbl
add
pop
xchg
aas
dec
arpl
or
in
outsl
pop
mov
push
movsl
or
mov
imul
and
push
mov
xchg
add
scas
adc
xchg
lcall
pop
inc
in
ss
adcb
fistps
out
add
jae
sbb
inc
lds
cld
push
xchg
rcr
lock
mov
ss
rcl
fcmove
jo
push
and
push
xor
imul
iret
in
iret
test
or
and
inc
or
dec
stos
pusha
jg
popfw
sbb
popa
int3
jb
push
pop
xchg
inc
or
in
jmp
sbb
mov
mov
popf
lcall
push
hlt
js
adc
sbb
add
or
shlb
mov
repnz
cld
inc
mov
sbb
push
popa
jg
xchg
sub
imul
sbb
lea
pop
pop
les
mov
add
inc
pushf
stc
mov
xchg
dec
xor
pusha
fs
rclb
dec
sub
repnz
mov
xchg
inc
sub
sbb
jmp
cld
jnp
mov
lock
lahf
add
push
sub
push
add
outsb
push
push
or
cs
sbb
cmp
push
and
sub
pop
jg
cmc
outsl
push
cmp
and
and
push
jmp
fiaddl
subl
fdivr
cwtl
iret
fisttpll
bnd
sbb
femms
pop
rcll
popf
sti
imul
popa
fdivl
pop
jnp
mov
pusha
cmp
and
adc
fists
and
inc
mov
pusha
hlt
stc
icebp
mov
insl
push
sub
out
push
dec
es
aad
rorl
push
mov
cld
in
push
and
das
sub
add
stc
mov
dec
or
loop
es
in
imul
pusha
xchg
clc
cmp
or
addl
aas
in
inc
xor
divl
mov
or
xor
sub
push
sbb
dec
loope
sub
fadds
and
push
ja
cmp
shll
mov
movsl
scas
mov
or
incl
xchg
movsl
insb
xor
adc
cmp
ds
and
xor
jecxz
mov
insb
clc
pusha
mov
cmp
cli
add
mov
roll
xor
in
mov
fimull
xchg
lea
cltd
jp
inc
xchg
stos
cld
mov
ret
mov
ja
push
je
in
adc
lea
nop
ds
in
ja
sbb
dec
mov
lea
xor
rolb
push
push
xchg
iret
pusha
inc
cmp
or
xchg
xchg
adc
cs
adc
sar
and
adc
add
hlt
lods
add
dec
sub
mov
cs
loopne
xor
addr16
cmp
pusha
popf
push
mov
push
push
out
push
movsb
adc
scas
push
mov
repnz
popf
inc
enter
pop
ret
and
rorb
lods
test
inc
ljmp
imul
sahf
push
jg
popf
fistl
mov
enter
bound
xchg
pushf
sub
xchg
mov
or
int
xor
mov
sbb
pusha
shlb
sbb
jae
sahf
gs
les
cmpsl
shl
sarl
xchg
mov
das
sbb
std
xchg
pop
cmp
dec
mov
mov
enter
push
outsb
push
push
std
ja
pop
into
test
sbb
pop
mov
xor
repz
lahf
movsl
jae
pop
jbe
std
dec
ja
push
mov
cltd
rolb
cmpsl
push
ret
jg
dec
sbb
sti
sub
or
inc
in
clc
xor
or
and
mov
lds
cmp
xor
es
dec
and
jbe
and
addb
mov
inc
repz
aas
stos
push
cs
sub
xor
fisubs
imul
daa
adc
mov
xchg
sti
sub
daa
cld
aam
pop
and
fldt
mov
push
aas
mov
lcall
jecxz
inc
sbb
scas
in
js
cmp
icebp
arpl
inc
jns
jbe
outsl
xor
cmpsb
sub
ljmp
cmp
divl
rorb
sub
or
jge
lahf
lahf
mov
and
mov
fistl
ljmp
sbb
pop
loop
mov
or
jmp
arpl
dec
inc
decl
mov
add
pop
in
fidivrs
dec
mov
ficoml
xchg
fisubrs
not
and
adc
loope
add
rcrb
fmul
shlb
cmp
xor
lods
sub
pop
lds
fcmovu
js
mov
test
cmp
adc
mov
cmp
rclb
les
js
ljmp
jle
push
sbb
push
or
dec
fsubrl
int3
ret
incl
sub
pop
jnp
test
int3
ret
gs
jae
scas
xchg
xchg
fisubs
lea
push
dec
call
test
cmp
fcos
testb
add
cwtl
add
lret
mov
icebp
mov
or
je
dec
test
clc
fildll
xchg
mov
or
loop
mov
inc
cmp
cltd
pop
xchg
and
mov
in
add
scas
cld
mov
mov
push
and
je
or
jnp
pop
or
cs
pop
test
jmp
pushf
pop
mov
xchg
ss
sub
add
bnd
and
sub
aam
mov
and
sarb
cli
jb
sub
repnz
and
jo
call
es
adc
cmp
dec
lods
pop
loopne
mov
push
adc
xlat
stos
add
clc
mov
pop
sbb
dec
push
jo
lret
in
cmc
sub
sub
test
sub
push
add
jno
xchg
pop
cmp
ret
je
popf
mov
push
fs
stos
dec
and
out
popf
and
push
push
pushf
mov
insb
fnstcw
mov
aad
mulps
rorl
adc
test
bound
push
je
push
add
repz
jg
mov
mov
arpl
jb
popf
ret
test
insb
pop
adc
cmp
out
cltd
dec
icebp
push
sahf
outsb
js
out
pop
stos
jl
push
mov
sbb
cmp
fbstp
jle
xchg
dec
sbb
push
adc
mov
out
pop
popa
scas
or
cmpsb
dec
xor
adc
jp
stos
dec
fistpll
cmp
adc
or
lcall
aaa
inc
fucomi
and
mov
into
jne
push
sub
inc
cs
and
dec
jbe
mov
insl
test
push
rolb
mov
jp
xchg
mov
add
jns
aas
mov
xor
negb
push
lds
push
mov
adc
ret
adc
push
lock
jne
mov
mov
cmp
lahf
aad
lcall
insb
orl
and
dec
shll
pop
test
dec
out
jno
sub
mov
fs
stc
lret
jb
push
idivb
mov
cmp
lahf
inc
loopne
gs
loopne
loope
push
movsl
test
jl
into
cmc
mov
adc
loop
xor
lock
mov
jne
stc
cmp
outsb
xchg
jae
data16
cmp
mov
test
int
pop
out
xchg
and
fwait
sub
aad
jo
lods
and
cld
das
xor
lret
loope
cmp
ret
clc
mov
jge
into
mov
jmp
hlt
adc
xor
sbb
jecxz
das
jne
lcall
fmull
lods
mov
test
mov
inc
push
jecxz
xor
adc
adc
lds
stc
xchg
jne
popf
lods
cmp
out
arpl
sti
into
push
and
dec
mov
mov
mov
sbb
lcall
aaa
and
fisubrs
repz
push
scas
in
mov
push
in
fisttpll
adc
rcrb
lds
mov
jl
stos
jp
xchg
dec
and
in
push
or
or
aaa
dec
sub
mov
xchg
hlt
rorl
sub
popa
lcall
fcmovnbe
mov
js
add
add
into
add
xor
aaa
popf
test
out
xchg
stos
in
mov
jmp
xchg
mov
jo
sbb
rol
shlb
push
lods
and
aaa
add
mov
mov
iret
xchg
fldcw
jns
fsubrl
jne
mov
movsl
inc
jle
pusha
mov
pop
mov
ss
inc
jg
pushf
lret
jecxz
mov
scas
xor
aas
push
inc
rcll
insb
mov
scas
sub
mov
jl
inc
pop
push
push
cltd
notl
mov
jne
out
lods
mov
jmp
iret
rcrb
jo
push
xchg
add
mov
cmp
adc
ss
push
mov
add
ret
and
jo
insl
or
jb
mov
dec
and
imul
mov
pop
adc
popf
xor
mov
cwtl
or
lods
stos
icebp
dec
and
sbb
std
pop
adc
dec
push
notb
mov
pop
sbb
pop
test
pop
stos
adc
daa
cwtl
jecxz
insb
xorb
ja
add
inc
xchg
jb
push
ds
jp
cli
pusha
mov
jo
adc
push
aad
pop
sbb
pop
xchg
cmp
mov
push
inc
arpl
sub
fsubrl
fidivs
sbb
push
push
loop
dec
pop
adc
movsb
pop
loopne
cmp
into
inc
push
ret
xor
xor
xorb
lcall
dec
lea
push
lock
push
es
lret
stos
adc
call
jo
ja
fwait
xchg
mov
ficoml
add
mov
xlat
repz
pop
mov
cmc
push
and
or
push
mov
cmpl
dec
xor
in
xor
loope
add
dec
inc
aaa
mov
mov
mov
cmc
sbb
sbb
ljmp
pminsw
push
loop
out
out
test
in
lahf
aaa
fucom
xchg
lret
stos
mov
mov
test
out
cmp
adc
or
insl
int3
mov
xor
and
jp
push
in
sbb
cmp
sub
inc
push
ret
cmp
fildl
and
mov
loopne
jp
adc
or
shlb
sahf
fmulp
pop
xor
pusha
xor
add
cmc
bound
or
mov
aam
data16
xor
bound
add
xor
dec
mov
cltd
lcall
ret
sarl
js
int
imull
sbb
rcll
int
insl
jmp
std
jecxz
sbb
pushf
xor
ljmp
mov
and
arpl
inc
dec
ss
push
sbb
cmpsl
inc
cmp
mov
or
mov
add
out
inc
in
call
outsb
fs
inc
mov
push
jl
adc
cli
adc
xchg
data16
jmp
imul
cmp
js
adcb
adc
dec
jmp
sub
push
inc
fwait
mov
mov
jge
test
lods
dec
std
xlat
push
pop
adc
dec
shr
adc
lcall
sub
sub
dec
stc
nop
xchg
mov
scas
sti
cmp
jne
xor
xor
iret
sbb
test
andb
clc
mov
lods
negl
cmp
and
jecxz
pop
test
mov
xchg
test
cmp
pushf
jbe
fdivrp
mov
cmpsb
arpl
aas
out
clc
xchg
jns
mov
jb
inc
repz
mov
add
ds
sti
hlt
jp
cwtl
add
sub
ficoms
out
cld
aas
add
push
and
mov
push
push
sub
in
jg
testb
decb
mov
gs
inc
mov
les
ljmp
mov
into
movb
movsl
ds
stos
cli
adc
and
and
out
inc
shlb
movsl
pop
adcb
add
jo
fwait
add
push
lds
jae
frstor
xor
jp
dec
scas
fdiv
push
add
popa
lcall
in
push
shlb
xor
mov
pop
pop
cmp
xchg
jp
rep
xorb
shll
leave
call
mov
cmpsb
cmpsl
jp
jge
xchg
loop
fisubrs
aaa
enter
pop
and
mov
inc
cmpsl
pop
add
test
shrl
pop
outsl
gs
mov
inc
mov
dec
dec
mov
loope
inc
lahf
ret
mov
sbb
adc
lods
push
fs
jno
pop
popf
xchg
int
dec
push
sbb
pop
and
subb
pop
stos
sbb
jno
dec
mov
cmp
add
sub
or
mov
mov
push
sub
test
pushf
in
aaa
or
jnp
or
leave
push
cmp
aam
sbb
imulb
push
or
mov
dec
cmp
icebp
imul
pop
adc
in
lock
out
jecxz
imul
sbb
cld
mov
je
mov
push
movsb
xchg
sar
sbb
mov
mov
in
sbb
out
mov
repz
mov
fidivl
or
xchg
inc
jp
mov
ja
sub
cmp
mov
mov
lret
sbb
iret
xor
out
test
inc
adc
push
sahf
pop
les
mov
test
imul
in
lods
dec
xor
jae
pop
push
jne
test
cli
pusha
out
sub
faddp
pop
hlt
daa
cltd
jp
sub
out
popf
xchg
mov
fcoms
mov
popa
xchg
mov
jg
lret
mov
enter
xor
fisubs
mov
dec
fldenv
jns
jmp
xlat
push
mov
imul
xchg
and
and
mov
lea
std
adc
test
dec
aas
pop
pop
imul
adc
sub
in
adc
jp
movsb
movsl
lcall
cmp
test
pop
sub
adc
jae
test
stos
mov
aaa
push
push
jmp
test
jg
push
outsl
push
xor
out
jbe
sub
jecxz,pn
jle
les
js
popf
jle
nop
add
jmp
inc
lock
enter
jo
dec
or
add
in
inc
adc
loopne
cltd
sub
mov
stos
les
xor
shll
fbstp
cmp
cmp
sbb
mov
popf
inc
jbe
call
cld
outsl
frstor
add
push
fistpll
cmpsb
loope
outsb
sbb
add
roll
aas
pop
dec
mov
xor
repnz
fdivl
mov
loope
jb
roll
inc
aam
push
data16
push
cmpsb
inc
jbe
dec
mov
mov
rcrl
inc
mov
sbb
sbb
xchg
xchg
lcall
cmp
xor
jo
push
adc
pop
bound
loop
mov
mov
sub
dec
lret
mov
call
or
mov
lcall
shl
add
mov
pop
inc
lret
cmp
fwait
and
jg
les
out
ds
into
dec
iret
dec
xor
cmpsb
addr16
dec
bound
sub
dec
js
lods
out
push
movsb
push
loop
inc
mov
mov
pop
out
data16
data16
pop
mov
push
xor
out
sbb
cltd
sbb
xchg
mov
fstl
hlt
and
pop
pop
mov
cltd
aad
bnd
xor
sbb
mov
push
pop
cld
pop
daa
popa
arpl
pop
sub
rolb
daa
out
rol
or
sbb
sbb
xchg
push
jae
out
pop
leave
jp
icebp
jge
in
shl
fimuls
xchg
and
je
mov
and
loopne
arpl
lret
mov
dec
clc
sbb
shrl
inc
xor
out
repnz
lock
mov
loopne
pop
mov
mov
arpl
loope
mov
fmul
ljmp
xor
mov
arpl
xchg
ffree
dec
out
dec
cmp
rcrl
dec
push
inc
sub
mov
outsl
aad
rol
mov
cmp
push
les
sbb
mov
ret
xor
and
scas
loopne
fisubrs
out
call
jne
shll
cmc
dec
sbb
inc
sbb
ret
cmc
adc
scas
add
add
lret
out
out
lods
fldt
dec
test
sub
and
mov
add
lea
bound
jns
cmp
fcoml
movsl
imul
xor
ficoms
mov
pop
mov
dec
les
cmp
jg
outsl
push
add
sub
jmp
pushf
popf
pop
scas
ds
and
push
call
adc
movsl
data16
mov
xchg
test
add
xchg
sbb
cmp
push
mov
push
fs
ljmp
je
fnstenv
jecxz
xor
leave
test
xchg
adc
pop
fs
pop
inc
shl
lea
mov
movsl
lock
push
aad
pop
pop
int3
sub
incb
outsb
or
mov
adc
cmp
outsb
dec
cmp
inc
hlt
mov
ljmp
sarl
insl
cmp
sub
sbb
pop
xor
cmp
sub
mov
into
mov
adc
cmp
pusha
pop
inc
xchg
out
insb
mov
mov
lcall
mov
les
mov
push
hlt
add
mov
mov
add
sub
and
cmp
cltd
test
lods
fdivl
leave
pop
pop
fbld
adc
cmp
test
out
sbb
sub
xor
jl
fistpll
shl
sbb
mov
pop
lret
sub
fcomps
arpl
mov
cmpsl
je
bound
mov
jae
mov
adcb
xchg
add
fldcw
adc
adc
sub
sub
or
sub
insl
add
fbld
jp
fistl
sbb
aad
mov
or
or
popf
daa
cld
push
cmp
add
lret
jo,pn
xchg
cwtl
mov
jl
sarl
sub
jbe
sbb
neg
popa
sub
xchg
cmp
adc
push
jle
pop
mov
nop
push
mov
aaa
rorl
icebp
mulb
jae
in
stc
xchg
jno
xchg
jne
cwtl
jb
cmp
insl
popa
sarb
xchg
repz
in
xor
or
outsb
dec
xor
xchg
jge
icebp
xlat
divl
adc
cmpb
jecxz
leave
and
arpl
fcoml
adc
add
int
sahf
mov
pop
xchg
aad
inc
testl
mov
stos
or
xor
push
mov
add
shrl
pop
arpl
sub
insb
add
lds
loop
movsb
adcl
ljmp
ret
and
in
popf
lds
stc
pop
sbb
xchg
cwtl
add
cmpsl
pop
sbb
lea
mov
add
cwtl
xchg
xchg
ret
xchg
scas
leave
faddl
sahf
adc
mov
pusha
mov
lock
or
call
push
xchg
in
adc
and
loopne
outsl
jno
ljmp
xor
sbb
jae
cmp
add
xchg
repz
inc
or
or
pushf
mov
pop
loop
mov
je
mov
inc
jno
push
inc
in
shll
mov
xchg
jmp
pop
mov
aas
sub
or
frstor
adc
loop
mov
mov
mov
mov
sub
pop
aas
test
jbe
cwtl
mov
and
mov
and
mov
fmuls
cwtl
addr16
sbb
add
xchg
into
mov
add
cmp
sub
push
dec
adc
out
add
gs
fstl
enter
and
push
dec
daa
aam
dec
sub
inc
ljmp
sahf
nop
dec
pop
mov
icebp
loopne
xor
and
and
mov
xchg
xor
cmp
sbb
popf
inc
and
pop
mov
pop
xchg
mov
push
dec
fs
push
mov
push
stc
fs
clc
clc
mov
or
xor
subl
fidivl
push
sub
push
roll
xor
sub
lcall
adc
lods
pop
sub
into
test
add
rcrl
mov
mov
push
cwtl
mov
jp
mov
xchg
add
jae
fisubrs
push
add
cwtl
push
pop
cmp
mov
incl
lret
rolb
in
sti
fs
add
das
cmp
sbb
lret
push
dec
or
mov
push
add
fbld
adc
jp
ds
lret
gs
push
orl
mov
mov
sub
mov
adc
xor
mov
xor
imul
jae
xchg
xor
push
xchg
bound
stos
xor
ja
jns
ret
movsl
pop
insb
sub
cmp
push
mov
sub
mov
test
pop
cmp
ljmp
sbb
ds
mov
mov
fdivs
xlat
hlt
sub
lock
dec
loopne
mov
and
ja
loop
rcl
add
jnp
xorl
xor
push
xchg
mov
mov
xor
mov
xchg
mov
dec
jle
cli
pop
jle
push
push
adc
bound
gs
pop
add
test
insl
mov
lods
cld
rcrb
or
sbb
sub
push
or
sub
scas
or
mov
xor
rol
cmpsl
pop
pop
pop
sti
mov
mov
lods
push
mov
outsb
cmp
sbb
inc
or
jl
mov
jns
daa
data16
daa
addr16
adcl
fidivl
fstpl
test
testb
lds
int
mov
pop
push
inc
fbstp
mov
repz
jge
sub
pop
jnp
les
add
cmp
xor
or
mov
mov
sbb
js
xchg
xchg
pop
dec
mov
lcall
add
add
sahf
pop
ficoml
leave
lret
shlb
leave
leave
push
imul
mov
test
fs
push
fsubl
in
sti
inc
add
xchg
sbb
insl
cmp
mov
fwait
add
add
dec
pcmpeqd
inc
mov
xchg
inc
adc
sub
and
jns
cmpsb
ja
and
pusha
push
outsl
lcall
mov
fiadds
cld
adc
fstpt
or
push
and
mov
mov
cmpsb
fildll
pop
int
jnp
ljmp
jbe
push
and
icebp
cmp
mov
jecxz
arpl
xchg
inc
sbb
fstl
icebp
mov
lcall
push
xchg
adc
in
lock
sub
push
sahf
leave
sbb
mov
lret
out
pop
add
inc
push
mov
jg
repz
xchg
repnz
pop
aaa
ja
in
ficoms
push
loopw
adc
xor
sub
mov
cld
pop
mov
mov
in
mov
add
dec
aam
pop
cmp
in
cmpsl
cmp
lea
test
sti
add
sti
roll
sbb
and
jo
jmp
mov
mov
test
mov
mov
jae
mov
xchg
gs
push
mov
xchg
test
jmp
out
push
andl
xchg
jl
cmpsl
xor
pop
jecxz
fwait
movsl
mov
jne
add
push
inc
dec
adc
cs
test
popa
fidivl
dec
jg
and
fdivl
das
jbe
jmp
dec
idivb
xchg
push
and
sti
aad
rorb
clc
icebp
andb
xorl
pop
scas
pop
seta
daa
push
jno
jb
push
fldt
in
xchg
sarl
imul
test
fistps
and
jne
arpl
lods
sub
mov
sti
addb
jns
xchg
xchg
pop
aaa
sub
addr16
jg
js
cmp
mov
ret
xchg
mov
outsl
adc
dec
mov
mov
adc
pop
push
pop
ret
fldt
cmp
lcall
and
enter
lret
es
stos
dec
sti
leave
sub
add
mov
aad
cltd
jge
test
adc
test
dec
sbb
add
jmp
lea
adc
xor
sub
dec
inc
cli
push
test
add
test
xchg
ret
and
sbb
or
inc
sbb
inc
imul
dec
stc
pop
daa
jmp
push
mov
mov
xchg
xor
sbb
push
pop
xchg
adc
add
adc
subb
xorl
sti
sub
dec
repz
sbb
lahf
jae
scas
enter
jge
lods
mov
cltd
std
test
pop
mov
xor
sbb
xchg
sub
lods
sub
popa
mov
mov
xchg
imul
xor
dec
dec
mov
data16
outsb
adc
shlb
in
cmc
clc
sub
inc
and
ret
xor
mov
ret
scas
orb
sbb
inc
cmp
repnz
imul
xor
push
jg
in
js
adc
xchg
push
cmp
cmp
pop
ds
sbb
inc
pop
ret
rcrb
jl
ljmp
ss
call
pop
cmp
lock
mov
ficomps
push
mov
cmc
push
leave
mov
scas
jno
in
clc
pop
notb
shll
push
das
push
sbb
data16
std
mov
insl
lods
lret
mov
lret
arpl
or
faddl
aam
or
inc
jae
faddl
or
aad
dec
mov
in
pop
pop
and
or
xor
mov
mov
mulb
ret
fidivrs
push
adc
movsl
xchg
pop
push
pop
roll
push
mov
lea
movsl
push
loop
sahf
mov
into
jecxz
cmp
shrl
mov
in
lea
in
mov
data16
xchg
and
xchg
addb
xorl
sbb
in
mov
repz
sarl
sti
sbb
xchg
out
ja
or
mov
mov
or
mov
pushf
adc
mov
sti
test
das
mov
kandnb
xchg
pop
pop
insl
ljmp
add
or
lret
xchg
jns
jle
ja
dec
repz
add
cmp
ret
or
notb
mov
fcoms
add
out
adc
jp
cs
scas
mov
pop
dec
in
ss
jmp
lds
aaa
mov
das
mov
ret
lock
nop
push
fsts
push
inc
mov
lahf
fmull
cmpsl
cld
fucomip
test
lret
call
sti
imul
add
insb
loopne
arpl
dec
repz
dec
shrl
daa
xchg
insl
movsb
or
lsl
xchg
out
into
int
jns
stos
or
mov
push
or
dec
bound
sub
push
iret
push
sub
scas
aas
mov
fnsave
push
in
cltd
cli
cltd
pop
iret
mov
in
test
loop
mov
or
mov
or
xlat
adc
and
xor
push
mov
jae
mov
pop
jmp
les
lods
jne
mov
adc
repz
loop
push
and
push
xchg
fnstcw
das
loop,pn
push
mov
mov
js
sbb
inc
lcall
pop
testb
fidivrl
repz
inc
daa
hlt
mov
test
mov
aad
mov
push
mov
dec
sti
xchg
cmp
lret
pop
int3
loopne
loop
adc
movsb
inc
and
push
pop
push
es
loop
movsl
popl
out
shlb
testl
data16
jecxz
jg
addr16
inc
ja
test
rorl
push
or
insl
popf
and
cltd
xchg
ljmp
cmpsb
or
mov
jo
pop
inc
inc
movsl
test
ret
sub
push
arpl
jge
mov
test
cli
pop
lahf
icebp
mov
test
jbe
add
cltd
aad
push
dec
mov
pop
rcll
push
je
outsl
mov
mov
cmp
xor
ds
dec
pop
jge
mov
pop
dec
adc
fxam
decl
fs
mov
aas
pop
int3
push
push
fs
sbb
in
es
cltd
xor
mov
popf
fs
inc
fs
dec
push
sbb
sbb
cltd
adc
aas
les
jge
cltd
sti
sbb
les
jns
mov
addr16
gs
lods
add
or
and
push
push
jl
cltd
lds
and
push
fstpl
leave
lcall
add
es
loope
dec
outsb
gs
imul
mov
loop
jle
cld
addr16
leave
std
mov
out
pop
ja
pop
ret
mov
enter
push
push
push
into
fstl
out
sub
cmc
pop
or
roll
cmpsl
aaa
test
test
lds
scas
inc
pop
dec
push
insb
ficoml
divb
add
dec
cmp
cmpsl
test
mov
pop
inc
xchg
jg
fimull
or
jb
scas
xchg
xchg
cld
xchg
hlt
pop
aad
arpl
lds
lods
dec
jno
test
sub
imul
cmp
daa
fcom
jl
pop
imul
ja
imul
notl
jb
xor
mov
notb
pop
clc
dec
loopne
loope
hlt
push
in
jae
lcall
mov
add
bound
call
int
jmp
popl
das
pop
jbe
dec
popa
and
or
pop
rolb
icebp
xor
cmpb
and
sbb
shrl
andb
nop
mov
cmp
ja
movsl
in
scas
fwait
clc
test
pop
mov
cli
add
jg
arpl
fidivl
mov
mov
xor
js
cmp
icebp
lea
xor
mov
xchg
inc
pop
jbe
adc
notl
mov
bound
xor
movsl
out
aaa
pop
sbbl
filds
in
sarl
jbe
adc
gs
push
popa
xchg
out
push
push
insl
and
mov
adc
push
bnd
push
js
cmp
hlt
add
loope
stc
add
mov
and
xor
xchg
add
mov
into
out
cmp
pop
or
jo
sbb
jl
cmp
cs
mov
mov
das
xchg
jbe
out
jns
mov
ret
fldenv
xchg
mov
jg
aad
xor
in
xor
mov
xor
push
les
les
xor
aas
mov
stos
fwait
dec
fldl
fs
pop
pop
aam
adc
jbe
sbb
dec
inc
xchg
leave
cltd
lcall
jbe
cmpsb
adc
in
outsl
jbe
sub
ret
mov
mov
hlt
mov
stos
loopne
cmp
rol
out
pushf
mov
dec
mov
out
mov
insl
cmpsb
out
sub
scas
push
fildll
or
mov
aam
push
push
mov
inc
push
mov
mov
mov
xchg
shl
dec
int
xor
mov
icebp
iret
mov
sub
mov
pop
sbb
mov
movsl
fisubl
lds
loop
hlt
in
rclb
mov
sub
outsb
xchg
out
jmp
inc
loope
int
jle
das
arpl
and
xor
fsubs
cld
loopne
mov
loope
pmullw
gs
push
pop
push
xor
push
push
out
lock
lock
fwait
nop
add
daa
inc
mov
and
and
pop
and
push
xchg
test
std
aam
add
pop
ffreep
jbe
movsb
mov
add
push
aaa
lcall
icebp
lret
movsl
int3
jle
mov
inc
sbb
and
and
mov
cmp
repnz
sub
aaa
pop
repnz
push
loope
xchg
movsl
xor
inc
out
sub
inc
fcomps
out
leave
mov
sub
jb
movsb
inc
fsubrl
jl
pop
popf
loope
test
dec
cmpsb
inc
pop
pusha
stc
add
xor
mov
or
sub
rolb
push
add
pop
jl
cwtl
lods
cli
dec
ss
loopne
sub
adc
int
inc
test
ss
mov
notl
test
cs
cmp
mov
outsl
test
xchg
test
out
std
in
push
sbb
xchg
inc
pop
iret
ljmp
xor
and
xchg
push
shl
fnstsw
ljmp
inc
rolb
js
jne
ds
int3
ja
cmp
jl
adc
xchg
out
out
mov
xchg
xchg
xchg
mov
push
imul
inc
dec
mov
xchg
repz
ror
test
mov
iret
nop
loop
rolb
jbe
or
js
mov
js
jno
lahf
push
or
out
inc
ret
xchg
jle
adc
mov
popa
jb
pop
scas
mov
or
scas
out
frstor
fwait
jle
sti
dec
xchg
movsb
icebp
cmpsl
adc
dec
scas
stos
dec
mov
dec
mov
adc
pop
fs
cltd
dec
inc
pop
out
call
aaa
mov
jecxz
mov
dec
into
sti
fistpll
hlt
jb
mov
test
out
lock
sub
out
fists
cmove
pop
jge
or
out
in
sbb
mov
add
and
jl
pop
fistl
cli
jno
jge
cmp
xor
pushf
out
cmpsl
lret
stc
fs
cmp
mov
es
jns
push
push
push
cmp
fiadds
add
fldt
mov
sbb
mov
push
lds
and
in
or
das
xchg
out
add
xor
add
loope
fistps
imul
sub
daa
push
and
jo
mov
test
xlat
mov
or
add
mov
push
leave
sub
test
leave
ja
mov
scas
fs
add
xor
jge
push
inc
stc
push
fnstcw
jne
rcll
or
sub
std
mov
push
pop
xchg
fmull
inc
shll
ror
mov
sbb
sbb
lret
sbb
jns
or
mov
js
and
jae
ljmp
outsb
test
and
inc
mov
addb
mov
mov
adc
push
out
cltd
cld
xor
mov
iret
arpl
sbb
rcl
repz
test
or
outsl
sub
sub
cld
xchg
adc
jns
out
aaa
fucomp
dec
xor
or
sahf
imul
sbb
push
and
pop
push
mov
sub
pop
adc
jnp
pop
jne
cmc
or
jns
int3
lahf
xor
aaa
xchg
test
scas
jb
test
or
fnsave
scas
mov
and
pop
inc
sub
into
jo
scas
dec
push
or
repz
call
jg
jecxz
inc
sbb
jbe
mov
lock
mov
jl
loopne
pusha
cld
iret
insb
lcall
mov
test
mov
mov
lods
cmpl
das
inc
adc
lret
sub
push
mov
outsb
fs
mov
pop
mov
aas
cmp
test
popl
fisttps
movsl
into
pop
icebp
repz
adc
mov
mov
out
cs
shll
enter
repnz
inc
push
push
arpl
sarb
jle
add
sub
mov
inc
or
rcr
pop
cs
dec
fstpt
popfw
pop
cmpsl
out
iret
add
mov
movsl
jp
push
jnp
lahf
jno
in
mov
and
popf
xor
loop
mov
mov
mov
xchg
jmp
fcomps
and
mov
sbb
dec
pop
cmp
mov
movsb
sarb
xchg
leave
push
dec
lret
cmp
mov
sub
jge
push
jne
adc
mov
push
pop
xchg
std
push
dec
repz
inc
xor
enter
call
hlt
inc
mov
cmpsb
push
jne
xchg
imul
in
cs
fimuls
fildll
gs
cmpb
enter
mov
xchg
dec
push
mov
sub
shrb
dec
std
mov
jecxz
subb
aad
stc
mov
es
mov
pop
inc
test
pop
mov
add
cmpsl
mov
shll
mov
int
mov
aas
nop
in
dec
inc
test
mov
mov
push
out
mov
stos
mov
and
push
hlt
mov
xchg
outsl
mov
sbb
leave
fwait
xor
shrl
dec
aam
out
xchg
xchg
cs
scas
les
es
sti
push
imul
pop
or
adc
add
aaa
pushf
mov
call
dec
push
jo
pop
into
and
mov
mov
inc
scas
dec
into
fmull
cmpl
adc
sarb
xchg
loope
cmp
dec
aas
imul
inc
pop
push
outsb
rcr
xchg
incl
fstpl
push
roll
push
mov
pop
or
ja
repnz
cmp
pop
mov
lea
jae
scas
mov
lods
adc
xor
movsb
jmp
jmp
add
xchg
sub
pop
push
pop
and
or
insb
enter
mov
sahf
adc
jb
out
or
movsb
mov
xor
test
std
aaa
shlb
test
push
or
push
shrl
xchg
jnp
jne
fidivrs
jl
lcall
or
into
dec
sub
adc
mov
in
dec
shl
pushf
insl
adc
cmp
mov
sub
hlt
push
sub
xchg
xor
jp
push
mov
xchg
push
xchg
or
xor
sbb
jmp
addr16
loopne,pn
xchg
in
and
inc
hlt
loopne
mov
stc
mov
dec
lcall
lea
push
mov
pusha
loop
test
popf
ja
mov
sti
mov
mov
bound
sarb
popf
mov
pop
aad
int
xchg
fcmovb
and
xor
lahf
rep
fwait
push
scas
shlb
mov
fnstenv
jne
xchg
inc
and
inc
scas
mov
dec
pushf
in
clc
sbb
mov
ds
dec
vmread
dec
or
fwait
bsr
loop
scas
inc
jnp
or
mov
sub
repz
imul
lahf
shlb
xchg
jno
in
and
das
add
sub
stos
jns
scas
add
push
add
hlt
int3
shl
sahf
jmp
pop
stos
sti
sbb
xor
mov
je
sahf
jmp
xchg
ret
sbb
push
imul
mov
bound
aas
loope
jl
gs
jns
popf
loope
pop
lahf
lahf
dec
loopne
lcall
enter
dec
test
int
dec
insl
test
inc
mov
mov
lret
cmpb
jne
add
femms
mov
xchg
xlat
ficoms
dec
jb
or
pop
sbb
sbb
in
or
cmp
lahf
cmp
fwait
xchg
stc
repnz
mov
ret
jle
clc
jl
ffree
dec
xor
test
jae
mov
jg
pop
popa
dec
insl
sbb
sti
inc
push
push
xchg
jg
dec
ljmp
test
out
mov
xchg
movsl
addb
scas
int3
stos
lret
sub
inc
mov
pop
mov
repnz
test
pop
push
sbb
dec
xchg
mov
cmp
dec
andb
int
add
bound
cltd
sub
hlt
sub
jae
mov
and
popa
push
lahf
push
inc
adc
stc
push
in
fwait
adc
arpl
cmp
mov
push
out
push
mov
adc
push
xor
std
int
or
pop
jmp
cmc
push
mov
cmpsb
and
dec
jb
lods
xchg
mov
mov
mov
cs
pushf
dec
inc
push
adcb
xor
loope
mov
dec
popa
xor
dec
dec
sub
dec
cmp
mov
add
jl
xlat
add
jo
inc
sbb
push
mov
inc
cmpsb
lock
rcrl
addr16
sub
pop
mov
es
std
cmpxchg
into
mov
jmp
ja
xchg
icebp
sbb
xor
or
jno
inc
push
mov
stos
or
jns
in
mov
data16
lods
pop
and
es
xchg
insb
icebp
push
adc
sbb
or
jo
mov
push
icebp
addr16
add
xchg
mov
sbb
mov
pop
push
push
jge
jg
ss
out
cs
popa
and
mov
stc
dec
push
pop
add
sub
subl
lea
rcll
cltd
subb
push
in
add
mov
add
add
pop
sbb
sbb
jmp
mov
rcrl
data16
mov
test
call
mov
mov
jno
incl
fdivs
push
dec
jo
fnstenv
push
or
push
shrl
test
js
cmpsb
decb
in
mov
clc
lret
jp
aaa
test
xchg
mov
pop
jl
push
jg
mov
mov
mov
sbbl
jno
insl
pop
mov
stos
das
fidivl
pop
addl
push
cmp
test
lods
jmp
xchg
jg
fadds
xor
push
aas
fbstp
faddl
inc
jg
inc
mov
xor
mov
and
mov
xchg
xor
inc
inc
jle
and
pop
mov
mov
jo
das
or
adc
pop
scas
push
outsb
repz
cwtl
cmp
cmc
or
mov
leave
sar
movb
pop
add
ret
mov
add
add
ffree
mov
in
fnsave
out
mov
int
test
mov
push
inc
fcmovnu
sahf
push
insb
test
cwtl
fcomps
loop
stc
stos
ror
ds
mov
push
cmp
fs
sahf
cli
xchg
push
push
adc
inc
jae
cmpps
daa
push
xchg
mov
jbe
mov
cmp
add
xor
jmp
xchg
mov
xlat
daa
adc
or
mov
aas
aas
idivl
push
push
lret
test
jge
fwait
push
dec
sub
xor
pop
pop
xchg
mov
out
sarl
jg
roll
mov
rcrl
mov
or
ljmp
ret
or
dec
repz
mov
fs
cmpsl
pop
cmp
sarb
popf
psrlq
dec
or
push
pop
pop
jp
jb
repz
inc
loope
cmp
aad
jmp
inc
and
insb
adc
add
mov
icebp
sbbl
test
lret
mov
sbb
sbb
push
mov
pop
andb
adc
jns
dec
jp
push
push
out
push
ds
sti
lret
inc
nop
pop
mov
cmpsb
dec
xchg
repz
jg
iret
aas
roll
jmp
sub
or
push
lock
call
dec
scas
pop
aas
das
cmpsl
jb
sub
xor
sahf
push
jle
mov
push
fsts
sarb
pop
out
mov
lds
aas
pop
xor
mov
add
cmpb
insb
wrmsr
pop
mov
mov
jecxz
mov
ja
std
jp
push
jmp
fsubrs
push
jge
enter
push
jl
inc
test
lret
andl
test
adc
cmp
fdivr
dec
jge
xchg
es
ja
lcall
sbb
sub
popa
add
add
mov
mov
test
xchg
pop
push
jb
dec
fwait
pop
shll
mov
adc
push
jecxz
sub
aad
bound
xchg
fsub
inc
in
fwait
dec
fisttpll
jg
cld
pinsrw
test
mov
pop
mov
xor
sbb
shlb
jg
subl
icebp
ret
mov
or
mov
fmulp
test
mov
ds
dec
jne
or
movsl
cmp
ss
inc
pusha
mov
sub
cmc
jno
mov
imul
pop
cs
mov
add
gs
out
scas
fsubs
mov
stc
add
mov
cltd
mov
ss
scas
sub
xor
scas
cmp
cmp
xchg
xchg
bound
in
outsl
jb
xor
cltd
jecxz
jl
repnz
jl
popf
inc
push
mov
fadds
inc
pop
in
es
test
jl
or
mov
jge
fwait
shll
addr16
dec
fistl
and
mov
and
cmc
lea
add
js
pop
add
je
jp
xacquire
sbb
push
sub
inc
iret
xorb
dec
xchg
inc
sbb
jecxz
pop
int
mov
daa
xchg
fcmovnbe
inc
inc
das
shr
mov
repnz
sub
pop
lods
nop
pop
out
loop
pop
or
add
and
repnz
ret
test
cld
xor
int3
xor
xchg
and
jns
jns
pop
vmread
arpl
cld
sub
pusha
roll
lahf
dec
adc
fstps
leave
cmp
push
sub
out
dec
dec
cmp
cmp
xlat
push
sti
repnz
xlat
das
push
cmpsl
add
push
or
xor
push
idivb
or
es
push
testb
push
add
or
aam
adc
ret
cwtl
out
pop
sbb
mov
pop
fcmovb
mov
int3
sbb
cltd
test
pop
test
mov
movl
xchg
sub
repnz
adc
aas
xchg
cs
fstp
and
inc
xchg
inc
push
lcall
pushf
nop
orl
pop
or
sub
divb
lret
aas
push
in
and
jecxz
or
adc
test
int
into
sub
or
xchg
mov
dec
or
fs
xor
fnstcw
dec
pop
loop
add
inc
call
push
idiv
sbb
cmp
fistps
adc
xchg
dec
dec
adc
sub
movsl
addr16
stos
cmpsb
inc
cmp
test
sub
dec
mov
loopne
sub
inc
push
xchg
dec
pushf
inc
adc
sub
xor
lahf
outsb
mov
dec
into
mov
mov
sbb
and
dec
jae
jecxz
leave
mov
sbb
dec
lock
add
faddl
and
daa
inc
cmp
pop
sahf
fisttpl
out
mov
ljmp
ret
cwtl
ret
leave
in
cld
sub
pop
add
dec
push
sbb
mov
xor
out
jge
jmp
xor
adc
dec
ljmp
cwtl
mov
ss
jecxz
int3
into
fstpt
scas
sbb
outsl
pop
push
or
mov
xor
inc
imul
enter
cmp
adc
cwtl
jg
pop
bound
xor
leave
adc
outsl
sub
sbb
push
ret
push
dec
inc
xchg
mov
dec
adc
sbb
jo
mov
push
push
and
les
adc
movl
inc
test
sahf
roll
push
sbb
or
dec
pop
call
or
repz
cmp
cmpsl
and
push
icebp
cmp
xchg
popf
in
push
lret
and
lds
dec
or
fsubp
sub
and
pusha
aas
hlt
es
pop
push
fisubrl
xchg
or
dec
add
lea
mov
push
jns
arpl
mov
jno
dec
push
mov
rorl
clc
dec
mov
mov
mov
stos
iret
iret
lcall
sti
jmp
loope
daa
pusha
inc
dec
aas
loope
push
sbb
jb
pop
jno
stos
mov
aad
xor
sbb
xor
push
jne
ja
push
push
lret
stos
mov
xchg
push
push
push
xchg
and
mov
iret
int
push
jge
dec
stc
inc
mov
outsl
and
pop
jge
roll
xor
mov
pop
leave
outsb
add
mov
xchg
leave
mov
xchg
mov
mov
fs
push
addr16
fcmove
test
and
sbb
loope
add
in
cmpl
cltd
enter
movb
ficomps
into
repz
mov
push
shrb
push
fbstp
cmp
mov
test
and
push
fs
enter
ficompl
stos
jmp
push
or
xor
xchg
cltd
test
pop
lcall
insb
mov
or
lods
pop
push
subb
ljmp
mov
ret
mov
fs
and
jg
ds
insb
leave
fdivrs
es
int3
inc
mov
aad
xchg
and
lahf
fstp
mov
lock
cmp
fcoms
lea
in
mov
nop
into
jo
adc
add
sub
cwtl
dec
in
aad
add
sub
mov
rclb
cmp
pop
cli
lea
aas
xor
out
ret
jl
push
push
lds
pop
fcomp
sub
sbb
push
lds
xchg
adc
loopne
pop
stos
dec
scas
sub
sti
ret
icebp
dec
repnz
pop
stos
fwait
pop
loope
xor
pop
push
jne
cwtl
int3
inc
nop
je
insl
mov
mov
xchg
stc
mov
test
nop
movsb
popf
cmp
mov
lods
in
es
mov
push
popa
das
clc
outsl
xchg
mov
or
xor
push
adc
pop
or
xchg
jns
cmp
daa
out
js
andl
push
insl
cmp
cmp
xlat
push
imul
fldl
cwtl
push
in
xor
mov
inc
inc
jnp
sub
inc
into
enter
or
adc
xor
sbb
xorl
jmp
xor
sahf
dec
jle
mov
mov
cld
imul
loope
and
dec
sahf
imull
mov
cld
sbbl
push
mov
jmp
xchg
xor
add
dec
jnp
mov
mov
inc
adc
dec
cld
sbb
dec
shlb
testb
dec
mov
les
outsb
pop
mov
jl
scas
addb
xchg
push
push
cmpsb
mov
leave
mov
adc
addr16
lret
xchg
mov
stc
jl
arpl
outsl
xchg
aaa
mov
xor
leave
scas
das
fstpt
test
and
sbb
sub
arpl
out
jecxz
push
adc
lret
rcll
lods
dec
sti
aam
fwait
jge
pop
call
mov
lahf
or
repz
jno
mov
imul
lds
dec
mov
scas
add
push
pop
fidivs
pop
push
enter
test
adc
je
mov
jecxz
push
mov
xchg
cmp
loop
lds
cmc
and
or
jbe
push
xor
adc
rcr
jecxz
mov
fcmovnbe
mov
mov
addl
sub
push
js
push
fmul
pxor
test
xchg
movsl
imul
ljmp
lods
sbb
popa
add
mov
xlat
filds
insl
lahf
repz
repz
fimuls
pusha
mov
fucom
aam
sbb
jl
shl
mov
sbb
adc
dec
or
movsb
dec
jp
cmp
mov
mov
mov
sbb
repnz
dec
bound
pop
movsb
push
sub
xchg
xlat
add
repnz
and
outsb
add
adc
punpckhdq
sub
int3
add
jl
or
cmp
sbb
jecxz
out
fisubs
das
cmp
mov
cmpsl
pushf
push
jns
dec
xchg
jne
pushf
fbstp
enter
xchg
jnp
mov
insl
fisubl
out
mov
mov
int
mov
mov
xchg
in
fsubl
into
adc
push
inc
xchg
clc
push
mov
mov
add
daa
in
sub
mov
or
out
popf
sbb
out
les
mov
jle
popa
mov
mov
add
and
fcom
sbb
xchg
adc
jge
lret
imul
adc
test
xchg
xor
mov
sbb
in
int3
lods
push
imul
xorb
and
std
jo
adc
hlt
aaa
rcll
jae
jge
les
loopne
xor
xor
sbb
out
adc
inc
sub
jmp
rcrb
fdivrs
fwait
or
arpl
mov
cmpsl
jecxz
push
adc
xchg
push
or
leave
arpl
mov
filds
jo
mov
rcll
sbb
outsl
filds
ja
outsl
data16
xchg
jo
xorl
std
fbstp
cmp
jg
xchg
outsb
in
xchg
fcmovne
mov
sbb
movsb
rorl
mov
adc
insl
sbb
push
lea
pop
int
add
incl
push
not
xor
pop
jp
in
mov
lcall
mov
fmull
orl
cs
out
sbb
mov
movsl
and
xchg
out
lahf
or
fistpll
fs
repz
add
mov
mov
xor
lds
iret
jbe
scas
ret
dec
lcall
fmuls
lret
sbb
sbb
push
xor
bound
push
inc
je
adc
xchg
xor
push
push
fwait
mov
jb
out
mov
adc
popf
inc
jno
add
xor
data16
push
fldt
fmull
or
mov
popa
iret
orl
mov
sub
add
in
mov
ss
mov
out
ss
jecxz
mov
xchg
scas
jne
push
sbb
test
mov
sbb
daa
push
icebp
sub
push
dec
in
loop
xchg
cmpl
jp
sub
mov
inc
pop
adc
add
mov
cmp
addr16
divb
fcomp
inc
cli
jmp
adc
je
ja
loope
popa
pushf
cltd
lods
jnp
loop
fwait
mov
cmp
inc
inc
sti
sub
addr16
ss
movsb
dec
and
sbb
pusha
adc
mov
test
cltd
jnp
pop
adc
lods
adc
mov
insb
sub
aad
adc
stc
leave
mov
jmp
fdivs
mov
gs
addr16
inc
lods
cmp
dec
and
push
mov
xor
fdivl
insb
adc
push
aas
insl
mov
mov
mov
cmp
stos
shrl
add
mov
mov
mov
jnp
xchg
lea
cmpl
lods
fcoml
jg
fcomps
cld
jne
pminub
cltd
rdtsc
in
xor
imul
pop
or
addr16
test
shlb
add
mov
jl
mov
xchg
addr16
adc
jnp
dec
mov
aam
pushf
fldl
push
or
sbb
lea
outsb
std
cmpsl
pop
in
inc
icebp
sub
add
loope
dec
inc
stos
jp
cmp
or
mov
ret
insb
push
and
cs
sahf
mov
ja
cmc
outsb
adc
pop
sti
and
mov
add
mov
shlb
lods
dec
int
lahf
test
adc
jmp
lods
jecxz
out
stc
adc
fldt
out
in
mov
stos
lods
shll
popf
ds
out
or
jbe
out
pop
mov
add
aad
fcmovbe
lcall
pop
ret
push
xchg
lods
mov
subl
pop
fwait
mov
add
xlat
ret
add
scas
aaa
cli
adc
hlt
sub
fadd
out
jmp
push
ljmp
sbb
sahf
sbb
xor
icebp
nop
arpl
aad
clc
or
ret
movsb
bound
into
aas
fdecstp
add
outsl
mov
test
cld
mov
data16
sub
loopne
and
push
mov
nop
jl
jle
jne
lcall
jnp
fsubr
mov
fsubs
sub
dec
jo
std
and
xchg
mov
std
mov
mov
rolb
add
insl
xchg
and
aam
adc
enter
xlat
push
jae
mov
fdivl
xor
outsl
stos
push
jns
and
dec
push
shl
mov
add
pop
xor
fisubrl
pop
push
pop
frstor
sub
lcall
loope
imul
cmp
add
sub
lcall
popf
or
out
mov
cwtl
sub
inc
das
rcl
mov
mov
les
mov
fiadds
enter
mov
lock
xor
pusha
add
stos
out
jmp
movsb
pop
xchg
or
fpatan
cmpsb
jnp
sub
push
sub
scas
arpl
cld
cmc
and
xchg
out
scas
addr16
lret
popl
movsl
add
dec
mov
or
cld
lret
cmp
mov
enter
inc
fwait
mov
pop
and
and
sbb
mov
pushf
or
xor
in
out
or
andb
dec
mov
mov
rcr
pop
mov
fisttpll
call
imul
sub
ljmp
fmulp
mov
outsb
mov
jo
popf
fisttpll
outsl
aad
into
mov
cmpsb
movsl
sahf
xchg
movsb
jg
out
stc
sbb
jmp
mov
and
push
inc
es
in
icebp
lret
or
pop
sub
xor
aaa
fidivs
add
test
in
std
push
cmp
popa
cmp
mov
aas
unpcklps
and
cmp
push
xchg
outsl
shlb
lods
pop
imul
faddl
cmpsl
js
jl
in
ljmp
sar
nopl
loop
in
sbb
lock
inc
int
adc
pusha
pop
pop
lock
jo
pop
lock
stos
mov
dec
insb
cld
mov
lret
dec
shlb
cmpsb
pop
sbb
sbb
xorb
int
icebp
or
jmp
pop
mov
xchg
jo
dec
push
movsl
jmp
std
outsl
or
repnz
push
cli
cmp
mov
mov
sub
adc
push
and
sub
es
aaa
sbb
out
stos
dec
pop
int
jnp
stos
enter
scas
mov
dec
push
mov
mov
dec
jae
xchg
jmp
cmp
mov
and
lahf
and
int
setnp
data16
fistpll
xchg
adc
imul
and
or
inc
or
sub
fwait
cmovo
mov
repz
jecxz
mov
add
sub
add
pop
push
inc
push
mov
sti
dec
cmc
fwait
push
ret
sbbl
xor
enter
shrl
cmp
repz
icebp
cmp
add
mov
das
int
lods
adc
inc
in
fistpll
sti
aad
out
lret
push
xor
shlb
rcll
push
in
xor
cmp
arpl
shl
xchg
xchg
push
sub
sti
pop
out
mov
rol
add
daa
das
pushl
test
adc
jle
adc
pushf
inc
aad
hlt
fnstcw
xchg
mov
repnz
aam
cmp
push
out
insl
bound
sub
cmp
cmp
jp
insl
mov
mov
cmp
xor
imul
es
pop
or
outsl
jge
iret
push
jns
movsl
es
mov
addr16
xor
fistps
lea
loopne
outsb
arpl
mov
lea
mov
pop
dec
jo
xchg
sub
aas
mov
mov
pop
jo
and
inc
xchg
pusha
sbb
mov
mov
cld
and
mov
xlat
mov
lret
cli
mov
inc
pusha
mov
xor
testb
roll
test
mov
fiadds
scas
ficompl
hlt
stos
cmp
inc
add
out
mov
dec
cmp
lret
cmc
enter
inc
cmp
mov
xchg
sub
mov
lods
mov
icebp
pop
inc
add
iret
jge
shrb
jp
lock
cltd
scas
add
rcll
insl
jl
jecxz
lds
out
mov
dec
and
push
sub
test
pop
inc
inc
leave
mov
push
jle
sbb
mov
or
push
adc
int3
outsb
nop
bswap
pop
mov
inc
push
or
or
push
push
mov
sub
adc
push
mov
sbb
fistl
insl
cmpsl
xchg
outsb
sbb
cmpsl
orl
ds
jne
cld
mov
jge
push
cltd
insl
clc
out
xor
outsl
xchg
add
lahf
dec
out
jno
mov
cli
inc
shlb
cmp
push
cmp
popa
jne
loope
mov
jp
sub
dec
loop
sbb
cmpsl
fsubr
push
lock
push
pop
insb
push
cmp
dec
pop
mov
mov
imull
xor
inc
jnp
sub
mov
mov
aam
mov
jg
popf
lret
mov
adc
fsubp
pop
icebp
loope
or
js
cli
inc
test
ja
daa
filds
mov
daa
decb
clc
shll
movsb
cmc
xchg
jae
fidivrs
fldt
inc
lods
mov
sti
mov
imul
cmp
jb
ficoml
mov
mov
sub
jle
lock
jns
and
adc
out
out
daa
fcomps
xor
jge
cmp
bound
out
push
andb
jmp
fwait
sub
jge
pop
pusha
lcall
sub
dec
outsb
push
inc
outsl
lret
lods
jo
icebp
push
sbb
adc
pop
lock
daa
test
cmp
popf
fstl
out
mov
icebp
cmpsl
sbbl
popa
dec
push
cmc
sarl
test
jnp
test
mov
popf
dec
js
inc
push
jl
and
repnz
mov
xchg
add
pop
lods
inc
push
push
dec
fsubs
xlat
add
xchg
inc
push
mov
xlat
scas
add
mov
sbb
push
inc
loop
maxps
push
inc
xor
jge
cmc
xchg
adc
xor
and
lret
adc
mov
insb
fadds
aad
jl
inc
sbb
add
cwtl
lds
sbb
std
stc
mov
xchg
jnp
jb
out
sub
rep
stc
pop
mov
mov
cld
inc
les
gs
xlat
sbb
pop
jb
jge
push
ficomps
stos
mov
mov
leave
ret
loop
out
repz
push
and
hlt
int3
inc
rcll
aas
mov
or
sub
inc
ret
push
xchg
mov
out
stos
sbb
inc
fimull
ret
add
dec
aad
lods
aas
pop
pop
js
les
jns
jmp
pop
iret
imul
pop
dec
sbb
lahf
loopne
into
mov
mov
shlb
adc
and
add
adc
jp
sub
addr16
pop
pusha
lods
push
sbb
and
test
sub
xor
ja
xchg
push
sub
ss
outsl
aad
pusha
mov
data16
out
popf
jecxz
mov
push
std
pop
xchg
js
mul
into
add
movsb
in
fistl
fistps
fildl
insl
jns
push
lods
lods
pusha
stos
nop
add
cmpsl
pushf
xlat
ds
cmp
fidivs
es
mov
pop
dec
aam
and
movsb
int
jnp
jne
stc
outsb
cwtl
lret
push
inc
inc
cmp
int3
nop
rolb
xor
xchg
xor
lock
xchg
cmp
data16
push
js
insl
int3
dec
orb
cmovs
pop
iret
jb
aad
xchg
rolb
jmp
iret
ljmp
sub
xchg
ljmp
fdivp
imul
sarb
pop
fcomi
sarb
shlb
jnp
scas
test
cmpsl
int
repz
pusha
and
adc
xchg
push
in
aaa
mov
add
mov
add
mov
ja
les
repz
aaa
xchg
outsb
adc
jp
jle
cmp
push
shll
movsb
add
movsb
xchg
ds
mov
mov
outsl
xor
cmpsb
imul
push
jmp
out
jge
lods
andb
pusha
adcl
pusha
gs
jle
push
cs
push
popf
dec
js
movsl
aam
or
cmpsl
xchg
je
shr
cmp
leave
fcom
stos
rcll
stos
jmp
icebp
aas
mov
adc
jnp
mov
xlat
cmp
adc
mov
scas
inc
icebp
mov
add
xchg
imulb
sbbl
mov
sbb
pop
push
adc
pushf
lea
fnsave
mov
in
lock
sbb
pop
mov
xchg
inc
sarl
cmp
inc
or
xor
pop
dec
imul
pop
loop
jmp
in
cmp
stos
jecxz
adc
mov
xchg
jb
sahf
arpl
and
inc
rclb
andl
std
sbb
mov
cwtl
sub
iret
lret
push
lahf
loop
mov
jb
add
pop
sub
roll
cwtl
popf
es
arpl
outsl
push
outsl
dec
mov
jmp
lcall
loopne
inc
je
xchg
xor
movsl
and
cmp
add
ret
xchg
mov
jb
xchg
std
inc
stc
mov
outsb
ds
mov
jbe
sub
imul
add
into
mulb
sub
rolb
cmp
sbb
and
pop
fisubs
mov
stos
push
jbe
jo
js
in
sti
xchg
sub
sub
enter
or
fimuls
push
ljmp
pop
enter
xchg
sarb
mov
mov
cmp
adc
jmp
ret
jb
inc
lcall
jne
incl
pop
fnstcw
fcoml
sbb
into
mov
loop
add
dec
jns
imul
hlt
or
popa
and
rcrb
or
mov
cmp
push
or
mov
jae
dec
out
fnstsw
push
mov
add
shlb
or
inc
mov
sbb
dec
adc
in
xchg
out
xchg
push
test
das
subl
add
xchg
xchg
push
mov
mov
je
cltd
data16
gs
inc
lret
lods
or
sbb
int3
insl
adc
mov
repz
fsubrs
stos
push
sub
sub
fst
stos
cmp
mov
sbb
decb
or
jmp
cltd
pop
ficoml
pop
jns
cmp
sub
shll
jb
mov
adc
jne
rorb
mov
push
mov
cmp
adc
imul
bound
fnstsw
insb
mov
push
mov
test
cmp
mov
adc
push
scas
sub
cwtl
stos
hlt
jg
inc
and
stos
sti
gs
cmp
loop
push
outsb
jne
jo
addr16
pop
xchg
or
add
lods
dec
add
xchg
aam
mov
mov
dec
test
xchg
sti
adc
jnp
cmc
jg
and
lds
push
pop
dec
daa
push
cmp
dec
jmp
cmpsl
jl
inc
push
or
mov
or
in
repz
push
jnp
cmp
cli
ficoms
pop
adc
jle
xchg
fs
sub
out
jo
xor
sbb
xor
imul
ror
sbb
adc
hlt
sub
pop
push
or
not
sbb
test
dec
outsb
dec
or
imul
in
lock
push
jl
push
pop
mov
movsl
sbb
mov
or
arpl
push
sbb
in
xchg
cmpsb
sub
mov
loop
push
sbb
mov
jg
dec
int3
gs
rclb
inc
rclb
pop
out
mov
push
enter
sbb
mov
jle
filds
adc
jo
lret
pop
add
jmp
clc
or
mov
push
xchg
adc
outsb
pop
std
sub
fstpt
movsb
leave
fiaddl
xor
hlt
jmp
ljmp
dec
add
lock
sub
cmpsb
jno
data16
lock
pop
inc
fdiv
mov
inc
add
pop
and
ret
mov
pop
int
ret
lds
sub
inc
insl
or
mov
add
ficoml
sbb
insb
fstps
xor
push
faddl
sub
sarb
es
loope
adc
out
and
pusha
xchg
pushaw
cmp
jns
das
das
push
cmp
inc
adc
mov
xchg
mov
pop
out
addr16
call
rcrl
inc
sub
xchg
push
aad
rorb
in
push
jae
shl
push
xor
pop
movsl
inc
or
sbb
add
ds
mov
push
test
js
mov
cmp
lret
adc
call
and
jb
test
mov
inc
mov
test
ficomps
xchg
push
inc
fstl
sahf
mov
push
repnz
sub
fxtract
add
xchg
ficoms
dec
push
scas
push
jl
push
and
cmp
lods
push
lds
outsl
popa
stc
pop
jns
cmpsb
xchg
call
pop
xchg
push
pop
cmpsl
aad
and
clc
mov
pop
pop
pop
cmp
test
arpl
sbb
enter
fmul
pusha
jmp
sub
push
shrb
popa
cmp
sbb
jmp
xchg
and
orps
mov
or
sti
std
inc
data16
mov
and
or
mov
push
and
repnz
data16
popf
mov
sub
lret
xchg
fsubrl
xor
adc
gs
mov
jp
pop
mov
mov
or
scas
xlat
data16
push
push
dec
enter
stos
call
enter
test
jae
sbb
sub
mov
das
and
jb
cmp
enter
pop
mov
imul
jae
hlt
lahf
mov
inc
ret
repnz
push
mov
mov
and
cld
outsl
jo
push
and
add
cmc
test
roll
dec
pop
test
mov
roll
out
mov
mov
idivl
clc
push
dec
sub
xchg
cwtl
mov
fldcw
fstsw
mov
mov
dec
xchg
cmpl
jl
mov
ja
and
ret
sub
push
mov
push
mov
sbb
adc
int
mov
insl
push
mov
or
adc
negl
push
sbb
lahf
push
push
aad
loop
out
push
jl
test
xchg
adc
loope
push
addb
adc
lock
mov
adc
lahf
loopne
and
je
lock
sbb
shlb
out
push
mov
mov
stc
xchg
sbb
inc
dec
cmp
mov
outsl
iret
xor
daa
or
pop
test
pop
lods
jmp
leave
inc
js,pt
jae
test
cmp
fdivl
testl
bound
cmp
mov
aaa
add
icebp
cmc
aad
ljmp
loopne
aad
xlat
push
cmc
aas
scas
mov
in
jmp
dec
push
fsincos
hlt
jecxz
subl
inc
sub
push
mov
bound
mov
mov
or
cmp
inc
fcomps
pop
xchg
adc
es
mov
pop
bound
inc
aad
mov
cmp
dec
cli
in
jbe
popf
mov
and
jne
aas
and
out
mov
popa
mov
mov
adc
push
sti
push
dec
test
aaa
pusha
in
sarb
sarb
inc
nop
adc
or
jnp
push
nop
out
jb
sbb
imul
stc
add
cld
test
sahf
cmp
loope
jnp
jb
adc
shr
imul
dec
test
clc
jmp
ja
scas
idivb
aad
mov
jp
movsl
pop
add
cmpsb
in
daa
mov
mov
loop
stos
cmp
out
test
mov
pop
add
push
leave
cmp
add
inc
test
gs
sbb
cmp
mov
daa
test
mov
mov
jnp
sub
pushf
test
stos
xchg
xor
fnstcw
lret
add
cmpsb
dec
inc
cmp
das
out
fstl
and
mov
aaa
dec
xchg
adc
pop
jnp
insb
call
jecxz
dec
push
push
fnstenv
into
icebp
insl
cmp
sbb
je
cmp
jp
jb
sub
pop
icebp
testl
into
push
xor
xchg
sahf
ret
aas
xor
mov
mov
sbb
dec
je
scas
frstor
sahf
push
stos
mov
xchg
sub
aad
mov
dec
out
jge
int
insb
icebp
stos
pop
push
push
or
push
lds
cli
or
movsb
jbe
mov
fidivl
es
idivl
jp
mov
enter
xor
notl
add
call
pusha
in
out
cmp
addl
js
int
cmp
or
sub
mov
loope
sbb
jle
inc
mov
xor
out
push
in
std
testl
xchg
lds
cmp
std
xor
sahf
or
pop
das
jmp
imul
sbb
xchg
xor
das
shrl
addr16
ss
movsb
cs
test
sarl
jno
leave
fwait
add
clc
pop
jbe
push
add
js
mov
fsub
enter
divl
xchg
rolb
jl
xchg
xchg
movsb
fisubrs
ss
mov
add
std
imul
fdivr
dec
xor
adc
push
bound
ret
add
jp
mov
test
sub
loope
mov
inc
imul
jb
xchg
mov
test
mov
push
pop
sbb
mov
sbb
das
in
inc
lcall
mov
push
sub
clc
sub
sub
adc
lods
sub
pop
cltd
sub
pop
stos
ds
adc
testb
stc
mov
push
add
bound
scas
push
insb
dec
xchg
cli
imul
stos
mov
inc
dec
shll
and
mov
jno
xchg
add
cmp
xchg
arpl
les
outsb
adcb
and
adc
cld
pushf
jno
cld
adc
jbe
push
aam
out
lods
scas
stos
xor
cltd
mov
fmuls
popa
push
push
test
and
cltd
cltd
fimull
sub
test
out
je
push
loop
gs
cmpsb
sahf
xchg
cmp
and
push
fdivs
pop
enter
xchg
les
inc
pop
jg
cli
jns
stos
adc
cmp
sub
inc
pop
xchg
es
cmp
pop
aam
outsb
fcmovbe
data16
jnp
fwait
sub
or
sbb
or
sub
out
jo
push
xchg
mov
outsl
mov
lahf
mov
mov
add
sbb
iret
insl
adc
lcall
scas
dec
and
or
adc
loopne
insl
das
in
lea
aam
js
mov
jmp
pop
mov
movaps
sahf
sbb
cmp
jle
pop
enter
adc
fs
int
mov
lret
jmp
mov
dec
adc
adc
repnz
in
xchg
mov
xor
cmp
outsl
sub
repz
xor
repnz
mov
lret
push
stos
xchg
mov
cmp
pop
scas
faddl
movsl
insl
xorb
mov
or
and
xlat
mov
adc
xchg
mov
dec
cmp
mov
psrld
flds
mov
jo
mov
idivl
pop
pop
push
test
inc
jle
push
mov
sub
shrb
dec
outsl
les
jmp
shl
jge
shl
cli
fdiv
add
push
xchg
out
fsts
loope
shll
mov
call
jbe
outsl
aad
mov
or
into
add
test
pop
pop
xchg
es
and
adc
ljmp
and
push
jb
js
insl
sti
loope
dec
push
cwtl
inc
lcall
add
movsl
mov
test
adc
notb
push
cmpsb
fdivp
jp
mov
add
sub
mov
ret
rolb
mov
adc
xlat
pop
xchg
xchg
pop
pop
out
fstpl
clc
ja
sbb
stos
outsb
pop
cmp
pop
movsb
shll
adc
test
xor
inc
movsb
iret
adcl
ret
adc
xchg
pop
inc
jae
popf
xchg
push
into
jl
sub
das
or
sbb
scas
cmpsl
xchg
push
sahf
std
and
cmp
jb
sub
push
mov
mov
pop
call
mov
xor
out
xchg
shll
push
or
lock
cltd
aad
repnz
outsb
flds
insl
lahf
mov
adc
push
adc
movsl
aaa
sub
adc
xor
mov
pop
pop
and
mov
popa
arpl
outsl
push
pop
ja
add
xorl
inc
movsb
mov
mov
push
inc
sahf
dec
fiaddl
pushf
adcl
fs
xor
adc
mov
push
stc
cld
lods
jne
fstp
pop
and
add
xchg
xchg
or
lea
add
iret
mov
push
cmp
je
mov
loope
daa
mov
add
lods
xchg
cmpl
test
dec
inc
push
loope
pop
inc
insl
call
dec
insb
out
add
mov
jg
xchg
or
vmovaps
leave
repz
pop
gs
adc
insb
or
pop
fwait
jmp
xlat
out
leave
dec
int3
xchg
xchg
add
mov
xchg
cmpsb
cmc
dec
add
push
jg
ja
mov
je
mov
mov
xchg
nop
loope
add
loopne
cmp
dec
jb
and
mov
sub
into
xchg
dec
add
idivb
mov
push
out
testl
mov
add
fisubs
push
jno
insb
sub
push
or
adc
xor
xorl
push
and
cmp
iret
mov
insl
jae
cmp
or
sti
xchg
pop
mov
adc
loopne
test
sub
jne
insl
call
mov
imul
in
xchg
sbb
in
pop
dec
add
iret
cmp
mov
jnp
cmc
aad
inc
add
mov
adc
mov
sbb
data16
mulb
mov
sbbl
xchg
and
or
mov
push
test
jno
into
xchg
mov
outsl
out
fidivl
aas
cmc
test
push
xchg
pop
inc
test
jge
cld
dec
add
loop
xchg
test
pop
xchg
daa
or
scas
sub
inc
jg
adc
adc
cmpsb
add
ja
or
out
lock
sbb
inc
xor
jmp
xchg
or
movsl
dec
cmp
rcll
fmuls
cwtl
and
stos
aaa
rcll
pop
add
sbb
adc
push
cld
test
jmp
sub
and
es
outsb
mov
sbbl
mov
cmpsb
fistpl
or
sub
mov
stc
sbb
and
rcll
or
and
jge
xor
fldenv
dec
add
add
add
add
or
add
add
jae
add
or
gs
bound
add
sbb
gs
jbe
or
push
imul
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
imul
add
addr16
addr16
add
ja
arpl
add
add
add
add
and
adc
add
add
call
add
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
pop
xor
add
call
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
push
add
add
sub
mov
sbb
xlat
les
push
jmp
pop
gs
dec
loope
hlt
sbb
fidivrs
xor
mov
add
jmp
nop
mov
lret
sub
mov
jmp
sar
lahf
in
mov
mov
add
push
clc
decl
test
mov
fldl
push
mov
xchg
sbb
mov
mov
mov
pop
mov
cltd
lock
inc
inc
fisttpl
mov
es
adcb
mov
jnp
out
and
icebp
jmp
in
test
sbb
sbb
mov
cwtl
icebp
cmp
pop
push
popa
or
adc
and
xchg
mov
cmpsl
scas
sbb
sbb
ss
arpl
jle
sbb
add
ja
or
sbb
test
out
call
arpl
je
mov
xor
stos
mov
fildl
into
scas
int3
mov
dec
push
and
daa
xor
sub
and
pushl
daa
je
adc
and
call
mov
mov
adc
add
pop
dec
ljmp
and
mov
dec
pop
and
mulb
mov
imull
fidivs
mull
fidivl
mov
jl
sbb
and
mov
pop
mov
orb
mov
pusha
fadd
add
jp
dec
dec
daa
loope
pop
fcompl
xchg
call
mov
xlat
hlt
mov
stos
add
aam
addl
insl
dec
pop
jp
iret
div
ret
jl
punpckhwd
lahf
mov
pop
mov
aas
xchg
pop
and
aad
loope
ds
bound
ds
mov
and
xchg
pusha
sbb
sbb
or
cld
sub
cmp
jle
les
xchg
mov
pushf
adc
xchg
xchg
xchg
imul
sbb
outsl
flds
clc
pop
mov
inc
cld
xchg
sarl
or
std
and
addr16
mov
fwait
jno,pt
fwait
ds
push
fcompl
les
xor
enter
pop
ret
pop
das
dec
icebp
lds
sbb
adc
sub
std
mov
out
std
inc
xchg
add
add
std
jmp
notl
test
enter
jecxz
les
jnp
and
lahf
add
shlb
mov
addb
mov
sub
and
mov
and
je
aam
lcall
les
push
les
outsb
test
sti
add
dec
jb
pushf
ret
adcb
pop
jb
mov
mov
jb
mov
xor
dec
jb
push
arpl
imul
push
jecxz
jb
sahf
adc
adc
pop
adc
push
push
inc
push
jecxz
jb
sahf
adc
jb
adc
push
adc
fmull
mov
jb
pop
dec
jb
pop
shrb
dec
jb
outsb
push
and
divb
cmp
dec
jb
jo
test
push
xor
xor
jb
pop
mov
mov
fs
adc
push
jp
jge
adc
push
jp
mov
mov
mul
jb
adc
stos
dec
pop
jb
and
push
sbb
jb
fsubl
jne
je
jb
xchg
dec
jne
or
jb
hlt
dec
adc
mov
mov
pop
dec
adc
sti
adc
mov
push
stc
mov
hlt
dec
stc
mov
hlt
jle
xchg
call
mov
cmc
jp
xchg
sub
mov
push
adc
mov
or
sbb
jb
fs
jb
idiv
je
jbe
cs
jbe
and
push
add
adc
fcmovnb
imul
je
pop
jno
xor
mov
and
or
sbb
jb
out
adc
out
ficompl
push
neg
lcall
pop
dec
jb
xlat
inc
adc
dec
push
sti
negb
jb
and
mov
hlt
popl
push
adc
push
xchg
dec
add
and
adc
push
and
fistps
jb
xchg
dec
enter
jno
adc
xor
dec
jb
adc
inc
out
sub
jp
stc
dec
jbe
fwait
js
hlt
inc
mov
mov
mov
orb
rcrl
xor
clc
jnp
bound
dec
dec
adc
sti
orb
rcrl
dec
iret
adc
mov
faddl
cmp
imul
lods
clc
jnp
bound
and
dec
mov
push
push
sbb
fsubrl
cmp
imul
lods
clc
jnp
bound
lock
push
lret
fiaddl
sbb
imul
lods
clc
jnp
bound
lret
mov
jo
xchg
dec
jne
pop
das
jge
adc
jb
adc
adc
mov
faddl
cmp
imul
sbb
jb
mov
jb
dec
jb
and
xchg
jp
jne
fs
sub
outsl
out
jo
daa
pop
sti
adc
inc
jne
negb
bound
sbb
lcall
sti
adc
inc
jne
cltd
jb
xor
ret
cltd
or
jb
notb
jb
adc
push
sbb
jecxz
adc
fistps
dec
adc
adc
inc
mov
push
push
sub
adc
push
cli
push
dec
jb
mov
inc
ret
jno
adc
js
adc
aad
pop
icebp
mov
test
scas
stc
mov
dec
jb
testb
or
dec
xor
add
jnp
pop
pop
cltd
push
iret
xchg
lcall
jno
bound
pushw
cmp
dec
and
jne
and
or
push
lock
sbb
and
int
bound
lods
and
hlt
and
jge
push
out
push
xor
sub
sbbb
pop
add
lds
dec
jb
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
inc
dec
jb
daa
dec
jb
test
adc
push
adc
push
adc
cmp
mov
push
sbb
jb
adc
jb
adc
push
adc
push
adc
push
adc
jb
adc
push
sub
dec
xor
mov
daa
subl
push
sub
pusha
sarb
mov
dec
popa
cmp
je
lahf
mov
insl
mov
xchg
out
test
data16
push
jbe
leave
lock
lcall
cmp
xchg
jb
pop
mov
push
jno
in
mov
mov
pop
mov
jge
imul
mov
mov
jnp
pop
ficomps
mov
jle
test
lret
movsl
adc
sub
aad
adc
pop
adc
add
jbe
shlb
scas
or
in
adc
aas
cmpsl
add
jb
outsl
fldenv
lds
sbb
insl
or
hlt
cmp
cmp
ss
jo
mov
outsb
mov
int3
iret
mov
add
add
or
add
add
adc
jo
adc
adc
adc
add
add
add
sbb
cmp
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cmp
add
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
add
popa
jb
gs
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
loopne
mov
out
or
jo
xchg
adc
mov
inc
adc
inc
and
and
sub
sub
adc
add
sbb
push
hlt
inc
nop
push
sub
mov
fiadds
mov
adc
or
sub
ss
adc
or
add
jb
outsb
xor
add
push
and
xor
or
test
sbbl
add
arpl
and
xor
cmp
xchg
and
in
test
cmp
xchg
je
mov
in
jb
cmp
pusha
add
xchg
push
enter
dec
jb
cmp
add
cmp
xor
xor
cmp
cmp
sub
clc
and
push
xchg
fmul
fsub
aam
rcrb
push
add
or
subb
add
or
add
fdivl
mov
push
xor
pop
jmp
sub
xor
and
xor
sbb
sbb
adc
movups
or
add
push
mov
adc
push
int3
push
call
add
test
jne
xor
rolb
lret
mov
add
or
mov
add
jge
rcrb
sbb
add
fs
sahf
aas
mov
xor
add
mov
cmp
shll
cmp
fadds
xchg
test
add
dec
mov
mov
push
or
cltd
push
add
aas
adcb
xor
adc
inc
cmp
add
mov
stc
push
xchg
push
adc
mov
nop
push
jg
add
aam
pop
pusha
xchg
add
inc
push
jmp
add
mov
jns
adc
jne
push
add
call
xchg
pusha
jg
add
inc
add
jmp
dec
add
dec
cmp
aam
sbb
fildll
pop
add
loope
call
test
pop
pop
pop
movsb
add
je
in
mov
xor
mov
jge
sbb
add
call
fmul
ja
and
jne
mov
ss
or
arpl
stos
cmpl
inc
add
jmp
xchg
or
push
jb
ja
into
je
fbstp
push
iret
incb
sbb
sub
and
stc
push
jl
pop
xchg
adc
sar
loopne
jbe
xor
sub
or
add
jle
gs
sbb
pop
bound
fisubrl
into
dec
adc
pushf
or
jmp
add
adc
mov
jae
push
push
sbb
nop
out
cmp
or
test
cmp
or
sarl
fs
adc
and
mov
cli
call
clc
jp
adc
pop
flds
cmp
add
popa
push
mov
push
push
push
lds
jns
lret
and
cmp
movl
lahf
in
add
dec
adc
dec
in
adcl
or
pop
push
data16
push
nop
sbb
clc
lds
jns
adc
addb
push
and
repz
inc
push
out
ja
dec
cmp
mov
je
add
mov
adc
packssdw
dec
xchg
or
movl
filds
xor
xor
jle
add
sub
jmp
and
xchg
sbb
adc
je
add
jb
ljmp
aaa
add
xchg
ret
setae
loop
clc
mov
mov
dec
sbb
or
dec
inc
cmc
xor
pop
je
adc
add
xchg
nop
jbe
add
fstp
add
call
cmpb
add
adc
sub
add
cmpsb
jmp
nop
xor
mov
mov
or
xchg
imul
xor
mov
repz
push
es
flds
add
pop
leave
clc
divl
add
cmovno
sbb
jae
fisttpll
loope
jge
add
addl
add
xchg
enter
add
pusha
shll
movl
out
shlb
cmc
pop
aam
cmp
jg
pop
sub
jl
xlat
push
push
add
push
add
push
add
inc
arpl
test
leave
or
fiadds
call
and
int3
sbb
cmpsl
int
add
cmp
lahf
add
pop
fisubrs
adc
fs
mov
sub
cmpb
xchg
add
bound
jne
test
push
add
jle
add
sub
pushf
es
imul
mov
xor
add
enter
add
mov
or
rorb
leave
mov
mov
orb
pop
pushw
lahf
dec
jo
dec
sub
sbbl
mov
cmpsb
jp
inc
inc
and
sub
imul
adc
inc
adc
movl
es
lds
sbb
or
jnp
push
out
cmp
fiadds
jae
ror
push
je
roll
mov
jmp
int3
inc
mov
mov
test
fcmovne
pop
mov
ret
nop
mov
cmp
mov
adc
mov
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
add
gs
jle
and
pop
add
popa
mov
sahf
jb
mov
adc
push
sbb
mov
push
push
sbb
popf
adc
leave
add
hlt
inc
sub
add
jo
sub
add
bound
add
mov
mov
adc
pop
xchg
sub
jmp
adc
in
cs
pop
les
add
out
xchg
test
add
movsb
shlb
dec
sbb
loopne
lock
adc
add
ja
and
add
push
cmp
in
out
add
std
pop
add
xor
adc
add
lret
xchg
sbb
pop
push
or
and
fistpl
loopne
push
sbb
jl
orb
subl
or
fists
add
cmp
jg
add
test
jns
sbb
add
xchg
inc
add
rclb
jmp
dec
pop
push
fimull
inc
sbb
pusha
cmc
mov
adcb
popfw
mov
sub
shll
out
or
sysret
push
ret
cli
lock
sahf
add
mov
push
mov
sub
xchg
sbb
add
cli
adc
jl
movl
add
and
mov
repz
leave
enter
mov
or
sbb
xchg
sub
lock
loop
xchg
in
pop
adc
adc
add
lods
cmp
or
jl
add
sub
or
push
dec
or
cmpsl
ret
add
mov
dec
dec
nop
xor
add
je
sub
add
mov
mov
add
xor
test
lods
and
inc
testb
cli
mov
jb
or
cmp
pop
push
add
mov
dec
mov
or
add
or
fs
pop
mov
and
and
clc
mov
and
add
jbe
js
push
xor
add
mov
incb
dec
sub
clc
xchg
or
pop
dec
cwtl
aas
pop
fdivrl
add
push
repz
xchg
scas
pushf
les
cli
jmp
cmp
push
xchg
xchg
les
inc
psubb
inc
out
adc
sub
add
in
jns
push
xor
aad
sub
mov
jecxz
stos
adc
pop
jo
cmp
adc
mov
or
pusha
add
dec
jmp
fisttps
sub
roll
rcll
cltd
dec
cwtl
aaa
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
cs
push
add
pop
adcb
ljmp
bound
sub
xor
push
mov
adc
pop
scas
push
xchg
imul
inc
lea
pop
cld
ret
or
mov
inc
addb
sbb
fadds
es
sub
add
and
add
and
aas
movb
xor
test
mulb
ffree
xor
insl
fistps
outsl
cmc
xor
dec
add
adc
iret
aam
icebp
or
add
xor
les
and
pop
nop
cmp
or
mov
loope
push
cs
sti
ret
pusha
dec
or
mov
cmp
xchg
pop
add
push
addb
add
ljmp
mov
mov
jne
pop
ja
add
insb
add
jnp
xchg
sbb
xor
jg
mov
jmp
pop
sub
add
in
shll
push
add
fmuls
dec
xchg
sbb
add
jp
idivb
jmp
sbb
sub
cmpl
cwtl
test
cmp
mov
les
xor
fnstcw
add
repz
into
xor
push
dec
sbb
mov
gs
pop
add
xchg
xor
jmp
adc
inc
mov
add
imul
dec
jle
pop
fs
xchg
push
lea
add
mov
dec
call
cli
aad
leave
bound
sub
xor
and
mov
push
add
sti
shrb
add
xor
add
test
xor
jge
jns
and
add
cmpsl
add
jne
imull
and
aas
add
popf
add
sahf
dec
lret
cmp
inc
jbe
mov
test
subb
or
push
imul
nop
add
and
adc
sarb
loope
sub
jo
push
push
inc
or
in
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
jnp
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
in
add
mov
add
cmc
test
push
test
jne
movsb
inc
dec
inc
inc
add
jns
cwtl
fs
roll
ror
pop
push
add
inc
mov
stos
pushf
push
add
pop
addr16
notl
loopne
xchg
int3
xor
or
dec
pop
sub
cmp
push
adc
mov
or
cmpsb
movsl
lcall
and
cmp
out
aas
dec
push
addb
mov
test
faddl
orb
dec
cmp
cmp
jb
mov
inc
add
orl
ljmp
js
mov
mov
push
lds
push
or
add
push
mov
xor
mov
imul
pop
pop
sub
xor
out
dec
adc
jo
cmc
xlat
shl
mov
and
enter
add
mov
popf
mov
add
sar
push
jne
shl
sub
xchg
in
jge
jge
js
pop
enter
imul
pop
testb
add
stos
add
push
sahf
aam
test
mov
fldl
imul
add
dec
jne,pt
and
subb
add
daa
fsubl
jl
add
ret
adc
repnz
push
xor
mov
sub
sbb
shll
dec
add
xlat
jmp
add
and
js
xchg
ret
cmc
in
push
adc
sbbl
cwtl
add
jmp
xchg
sahf
sub
rorl
dec
inc
ret
movl
cmp
xor
loop
imulb
add
notl
and
add
scas
stos
mov
add
add
arpl
fs
cli
jmp
sbb
adc
pop
repnz
mov
les
pop
and
adcl
adc
add
dec
ss
pop
sbb
xor
rolb
ret
push
hlt
dec
lock
add
xchg
test
adc
xchg
call
inc
pop
cld
or
mov
xchg
and
and
mov
adc
xlat
mov
cmp
mov
push
shlb
xchg
jne
add
leave
je
xchg
jl
add
push
mov
and
add
sbb
and
fdivr
jle
push
cmp
adc
rcl
cmpsb
faddl
add
or
scas
add
add
sub
mov
ja
orl
add
int3
enter
iret
ror
into
sbb
lret
fcmovu
fstp
push
fnstsw
add
jecxz
in
nop
pop
push
add
test
cmpl
add
shlb
add
popl
push
adc
psubb
mov
mov
adc
rclb
fcom
push
cmp
or
ja
je
pusha
sub
add
rep
clc
sbb
shlb
xor
cmp
push
sbb
push
std
sbb
add
movl
or
les
or
jmp
decl
mov
inc
shl
cmp
jbe
pop
add
push
jnp
loop
pop
add
out
pop
and
sbb
inc
adcb
add
bound
adc
lock
cs
shrb
pop
cmp
jl
popa
pop
into
and
add
adc
out
add
lret
sbb
ret
js
loopne
push
push
add
and
mov
cmp
repz
push
add
push
push
cmovnp
jmp
aad
and
loopne
scas
sbb
jb
inc
jae
pavgb
sarb
out
repnz
hlt
add
imul
pop
fs
loopne
add
add
pop
cmpb
or
ffreep
mov
insb
push
add
fstps
mov
std
fistps
push
sub
adc
sbb
xor
pop
psubusw
mov
add
jb
cmp
enter
pusha
shrl
add
jp
addl
addb
dec
leave
mov
push
test
pop
loopne
and
push
daa
and
push
hlt
or
imul
adc
mov
sbb
addb
cmp
jne
dec
clc
adc
loope
pop
lret
sbb
ret
dec
inc
loop
push
out
push
cmp
lock
je
mov
cmp
jne
xor
xchg
dec
add
add
mov
push
inc
or
js
add
mov
adc
mov
sbb
add
mov
push
xchg
adc
data16
mov
sbb
add
xor
add
cmovno
mov
mov
cmp
dec
push
adc
inc
es
outsl
add
xchg
mov
fistl
xchg
dec
add
clc
pop
sbb
movl
jge
movb
cli
mov
pop
pop
inc
mov
stc
adc
out
test
push
mov
xchg
jnp
add
mov
adc
dec
jne
inc
lods
add
and
jmp
xor
xchg
jae
arpl
mov
mov
push
inc
cmp
xlat
clc
int3
mov
add
sub
shlb
and
or
popa
rcrb
add
psrad
lods
sub
dec
test
dec
int3
and
add
jmp
or
shlb
sub
clc
call
add
add
fcoms
xor
jne
dec
xchg
aam
jl
add
xor
dec
add
jle
js
fldcw
fidivs
add
outsb
lds
mov
mov
xor
je
xchg
popa
jb
add
mov
or
adc
adc
add
or
mov
add
rcl
jge
add
cli
sub
shr
add
inc
mov
dec
adc
repnz
push
cmp
add
add
add
je
nop
xor
push
clc
in
ss
add
mov
or
dec
mov
adc
add
dec
sbb
pop
cld
or
mov
lock
add
push
rolb
xor
sub
add
sbb
nop
jmp
mov
fneni(8087
push
arpl
je
add
sub
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
jo
dec
pusha
inc
mov
cld
push
bound
push
cmp
inc
call
add
adc
popa
mov
xor
mov
sbb
inc
hlt
add
lret
or
add
lods
and
add
ljmp
push
cwtl
loopne
sub
jno
in
and
lahf
clc
add
or
sti
push
mov
add
inc
push
push
inc
loopne
add
inc
outsl
jb
popa
cmp
outsb
cmp
inc
gs
jo
imul
rolb
push
add
jae
push
mov
xchg
add
cmp
lods
xlat
pusha
jo
xor
and
inc
scas
cli
in
cmp
fadds
call
pop
adc
ljmp
push
jne
ss
dec
faddl
push
pop
call
inc
pushf
inc
divb
push
mov
push
pop
imul
add
sbb
or
sets
add
add
loopne,pt
add
and
add
mov
xorb
cld
dec
add
xlat
stos
mov
and
fisttpl
pop
call
dec
loop
mov
push
add
jo
sbb
jmp
cmp
cs
add
jae
testb
push
sub
orb
jg
add
dec
jne
inc
jecxz
push
add
leave
adc
cmpl
hlt
js
inc
add
ret
dec
mov
test
xchg
add
dec
push
sbb
sarl
add
movl
clc
or
mov
ret
pop
add
sub
lock
add
notl
adc
adc
add
sbb
call
add
faddp
xchg
inc
out
adc
add
loope
push
lahf
or
add
push
mov
popl
adc
pop
adc
jle
add
xchg
imul
add
or
add
or
pop
inc
lock
push
or
adc
je
add
sbb
pop
and
xor
inc
and
adc
push
clc
xchg
sub
add
in
lods
mov
out
stos
push
push
call
adc
add
adc
imul
add
pushf
xor
sub
push
cmc
add
push
cmp
or
or
jbe
add
or
mov
jae
jmp
mov
movsb
adc
add
cmp
cmp
jmp
or
mov
cmpsb
cmp
push
mov
adc
xor
mov
pop
or
push
adc
and
inc
loop
ret
jbe
loopne
mov
dec
inc
sbb
andl
in
cmp
add
inc
inc
sbbl
dec
adc
je
cld
push
call
dec
or
mov
add
cs
call
mov
out
and
add
orb
push
je
pop
lods
movsl
loopne
or
cmp
ja
add
scas
adc
and
add
stos
sub
xor
lret
loop
mov
sbb
adc
or
out
pop
cmp
add
dec
add
add
fildl
loop
popa
sbb
out
inc
movsl
pusha
mov
push
shrl
fwait
nop
call
out
pushl
mov
aad
add
movl
stc
pusha
push
cmpsl
mov
jecxz
mov
adcb
mov
nop
test
inc
inc
sub
jmp
pop
add
enter
je
xchg
es
xorb
sbb
jmp
add
inc
sub
or
addr16
add
in
lds
inc
push
out
dec
pop
add
and
clc
test
add
fdivrs
dec
out
addr16
fs
mov
shrb
or
popa
into
je
les
pop
imul
or
add
xacquire
es
clc
xchg
jmp
and
sub
and
inc
push
icebp
insb
mov
cwtl
push
inc
mov
mov
lcall
lea
call
or
loopne
loope
or
mov
inc
add
fisttps
test
rorl
sub
add
push
mov
pop
xchg
add
inc
das
imul
push
mov
push
xchg
mov
sub
inc
or
jns
pusha
add
std
cmp
or
add
xor
mov
sbb
pop
fcoms
mov
add
outsl
lea
add
fs
mov
xchg
les
cs
add
movl
pop
dec
pop
int
adc
add
mov
add
push
cmp
pusha
adcl
sub
pop
xchg
mov
wbinvd
adc
enter
xchg
orb
pusha
xor
aas
pop
addl
sub
add
adc
sub
cs
adc
push
and
sbb
sbb
push
mov
sub
enter
leave
cmp
popf
and
iret
and
movl
cmpsl
push
or
fchs
push
lret
daa
push
ss
mov
pop
ret
addr16
repz
sub
cli
icebp
nop
es
mov
lret
cltd
ss
add
push
divb
cmpl
xor
sbb
mov
mov
out
add
pop
dec
pop
add
aaa
pop
xchg
jne
push
adc
xchg
adc
or
ja
in
xchg
add
imulb
clc
add
fmuls
lods
or
mov
add
cmp
shrb
pop
pushl
add
cmc
popf
and
mov
add
dec
loope
add
jo
xchg
cmpsl
jmp
test
sbb
lock
aam
xchg
add
shlb
out
cmp
adc
mov
add
stc
dec
or
pop
cmp
pusha
test
dec
add
xor
xor
adc
cmp
jle
sbb
ffreep
ds
out
sub
jg
dec
pusha
jecxz
adc
lea
mov
rep
popl
fwait
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
mov
jns
add
sub
cli
inc
or
inc
mov
pop
inc
mov
jmp
xchg
das
push
popa
addl
sbb
and
jne
or
adc
fstps
and
and
xor
rcll
inc
je
sbb
lahf
cmp
mov
push
push
js
and
cmp
and
dec
add
test
push
in
lods
adc
rol
mov
out
mov
add
dec
adcl
call
or
add
pop
pop
lcall
mov
push
pop
rclb
call
and
ljmp
or
ja
push
and
add
xchg
movsb
push
es
adc
neg
sbb
pop
leave
test
test
mov
xor
and
nopl
cmpl
loopne
pop
mov
rolb
ret
adc
jne
or
cmp
je
adcl
and
test
add
adc
mov
subb
or
pusha
and
jo
outsb
dec
add
push
ds
adc
lods
sub
add
jne
mov
pop
mov
inc
or
lock
and
mov
push
pop
add
stos
shr
insl
aaa
pop
cs
jns
cmp
add
pop
push
jg
and
ljmp
ret
sub
adc
cmp
pusha
lret
mov
add
push
jnp
insb
sti
cmp
jp
add
mov
jns
cmp
add
pop
sub
xorl
sub
scas
lret
int3
add
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
push
daa
add
enter
in
add
mov
and
inc
jg
mov
add
inc
add
scas
pcmpgtb
dec
adc
add
jmp
mov
jl
dec
dec
xchg
add
adc
cmp
push
add
jne
pop
or
add
adc
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
nop
jecxz
and
pop
in
incb
mov
jp
add
xchg
pop
in
xor
add
cmp
in
xchg
test
add
shl
fptan
ljmp
dec
and
sti
push
js
jge
add
or
push
sub
adc
inc
jnp
xchg
test
inc
add
add
into
cmp
push
xor
in
jnp
cwtl
pusha
add
cwtl
push
and
pusha
xor
add
inc
lret
mov
adc
loop
rcll
push
and
cmp
adc
loop
add
or
add
bound
pop
imul
xor
sbb
rcrl
in
adc
add
xor
or
and
xor
or
sub
jmp
xchg
push
jbe
xlat
and
pop
nop
cmp
ret
push
inc
dec
add
push
push
push
sbb
repnz
scas
mov
not
pop
add
rcrl
mov
add
popa
jo
ljmp
ja
jnp
leave
xor
add
test
std
xor
mov
add
test
cli
push
cmp
add
ja
sub
jp
push
dec
add
movsb
cmc
add
stos
adc
cmp
xchg
inc
mov
je
add
mov
stc
rolb
jmp
pop
cmp
rcll
into
push
add
add
inc
outsb
jne
fisttps
fadds
mov
ja
cli
mov
xchg
addps
divl
dec
clc
decb
lret
push
push
scas
add
push
cmpsb
inc
in
mov
dec
xchg
dec
adc
das
adc
cld
dec
jno
push
pop
xor
add
mov
outsl
shl
add
into
push
rolb
jne
sub
out
enter
les
pop
lea
add
loopne
fldcw
icebp
add
rorb
jg,pt
add
fcoml
sarb
add
adc
add
mov
push
in
mov
dec
mov
sub
mov
out
xchg
pop
add
push
and
cmp
xor
push
cmp
adc
lret
add
jae
add
sub
and
cli
aam
pop
adc
add
shlb
push
clc
add
js
inc
xchg
adc
fildl
cmpb
addb
dec
mov
cmp
and
adc
fcomps
int3
sbbb
ss
mov
jle
and
es
jne
add
fidivrl
sub
push
sahf
jg
push
hlt
leave
xchg
arpl
and
or
mov
fsts
adc
aad
mov
rolb
add
adc
add
jle
sub
jmp
mov
repnz
dec
jg
pop
sti
push
mov
inc
dec
filds
test
xor
add
orl
js
mov
inc
rcr
adc
aad
add
mov
cmp
repz
adc
mov
in
pop
sbb
pop
inc
shlb
daa
add
push
inc
xor
sub
fwait
dec
cld
ret
cmpl
outsl
jne
in
call
mov
clc
movsl
cmp
jne
out
inc
sbb
nop
pop
scas
push
xor
sub
fwait
xchg
stos
pop
xor
sar
and
add
push
add
jne
mov
lret
inc
sbb
repz
push
mov
add
inc
adc
ss
aas
mov
loopne
mov
add
nop
sbb
repz
or
pushl
inc
fninit
push
adc
sbb
les
leave
clc
stos
and
dec
push
pop
xor
roll
dec
push
sti
xchg
push
inc
into
pusha
dec
pop
adc
xlat
or
and
adc
adc
in
add
mov
mov
popa
push
bound
sbb
test
incl
cs
adc
jg
sahf
add
jl
stc
loopne
fisttpll
mov
add
jnp
or
test
inc
push
or
pop
aas
or
push
inc
jnp
enter
mov
add
mov
pop
outsl
mulb
iret
sub
sarb
jmp
adc
repz
js
xchg
sbb
xor
int3
sbb
inc
sub
lock
in
add
xchg
repz
push
shlb
or
add
or
arpl
sub
sbb
jno
std
aaa
push
push
lock
jmp
push
inc
add
call
ja
xchg
repnz
push
icebp
dec
add
mov
dec
cwtl
test
mov
mov
dec
fiaddl
movb
popa
ja
stc
push
push
pop
pop
mov
sub
cmp
cmc
and
push
sbb
ja
jle
sub
filds
and
xchg
inc
int3
fwait
add
or
push
add
push
mov
fdivs
sub
dec
sub
fwait
add
mov
xor
sub
pop
mov
test
test
sbb
std
sub
test
add
mov
test
cmp
mov
mov
adc
xchg
jns
cmp
gs
jne
cmp
jb
loopne
cltd
mov
adc
cmp
loopne
sbb
daa
add
dec
loopne
mov
aam
movsb
popf
nop
mov
andw
shlb
lea
test
and
jmp
adc
push
adc
mov
pusha
cmp
add
adc
xchg
jp
inc
or
ret
cltd
jo
jg
adc
movd
jns
xor
add
xchg
adc
or
in
mov
jp
push
ret
xchg
fs
rorb
sbb
cmp
lock
add
jge
push
sub
add
xor
adc
push
xor
push
pusha
sub
jbe
cwtl
dec
ds
xchg
xchg
pushf
icebp
add
mov
cmp
and
push
jo
mov
imul
jnp
pop
add
bound
es
and
pop
jno
xor
daa
incl
enter
xor
roll
iret
call
loopne
lret
rolb
push
sub
std
add
das
cwtl
sbb
pop
mov
xor
inc
fs
or
add
xor
dec
popl
jge
daa
push
rcrl
pop
push
add
dec
sub
pushf
xchg
inc
add
xchg
mov
std
cmp
jecxz
pop
insb
in
shlb
lock
xchg
ret
loopne
fmuls
push
call
pop
lcall
jbe
out
add
pushf
fimuls
xor
fadds
jne
filds
pop
loop
xor
adc
add
and
shll
or
aad
add
and
add
xchg
xchg
ret
add
fwait
das
xchg
rcrb
adc
clc
ja
add
adc
jns
push
mov
into
add
pop
scas
gs
jb
push
inc
cltd
mov
movsl
rclb
out
add
sub
fdivrs
js
add
or
repz
daa
movntps
loopne
and
push
pop
add
mov
pushl
or
les
add
mov
cmp
sub
push
adc
jp
push
roll
add
and
mov
push
mov
cmp
add
cmpsb
je
addl
test
test
in
sbb
xchg
rclb
jl
adc
movsl
add
jmp
add
inc
sbb
cld
adc
int
add
ja
pop
add
or
or
loopne
test
ss
hlt
out
jmp
add
xchg
adc
ret
out
inc
clc
mov
fs
dec
leave
xor
xor
subb
add
xchg
ret
rolb
lock
hlt
cmpl
rcrb
mov
ja
insl
sarl
movsb
adc
inc
add
ss
cmpb
cmp
vmread
std
in
out
loopne
adc
adc
xlat
xor
adc
lea
lds
pop
push
add
psllq
jne
jge
push
add
cmp
clc
dec
movl
add
nop
movsb
jg
inc
add
add
xor
loope
pop
jecxz
inc
je
fidivs
addr16
mov
iret
aam
cmp
add
inc
cmp
dec
movb
inc
inc
dec
lods
inc
nop
lock
aaa
jbe
add
test
and
test
call
add
sub
pop
or
rorl
gs
shrb
cs
jnp
cmc
setb
outsl
jae
push
popa
out
push
add
adc
test
loopne
setb
jno
jecxz
inc
stos
pusha
pop
inc
out
add
jnp
fldcw
loopne
and
faddl
adc
add
jo
jne
les
and
add
push
sbb
pusha
ret
movsl
mov
aam
nop
outsl
cmp
add
jp
push
jae
pop
aaa
sbb
push
push
cmp
inc
xsha256
cmpsb
push
mov
xor
xchg
call
add
add
sub
sbb
adc
testb
mov
scas
mov
or
mov
into
loopne
adc
dec
mov
cmp
add
sub
add
adc
leave
add
insl
inc
mov
cmp
sub
add
stos
inc
xchg
xor
inc
imul
and
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
dec
fidivrs
arpl
jae
cmp
sti
cmp
and
pop
mov
mov
add
and
pop
daa
and
push
cmpsb
and
loop
mov
outsl
add
pop
cmp
mov
add
push
ja
mov
fsts
std
sbb
add
lods
mov
shr
dec
pop
aaa
shll
push
add
and
mov
jae
mov
or
mov
in
or
cs
mov
loopne
cli
ljmp
shlb
jecxz
cmp
addb
mov
mov
or
add
mov
jnp
push
add
repz
xchg
sub
jecxz
inc
enter
adcb
adc
loopne
sub
push
lea
mov
sub
jb
mov
adc
pop
clc
insl
pop
repz
sbb
push
mov
add
jge
scas
jmp
inc
mov
and
xor
imull
jg
jbe
dec
pop
je
jne
dec
sbb
jbe
add
dec
mov
lret
push
and
pop
add
or
jge
cld
cs
sarb
bound
repnz
inc
rol
inc
sbb
call
daa
or
cli
les
in
mov
js
dec
mull
add
cmpb
and
scas
mov
sti
cltd
sqrtps
or
pusha
jo
and
cmp
and
sub
mov
pop
decl
push
add
ss
jnp
enter
mov
push
sub
inc
push
cmp
stos
sub
aad
popa
adc
jl
pushl
inc
add
andb
outsb
fmul
add
push
or
test
add
dec
sbb
inc
adc
or
and
xchg
adc
push
xchg
mov
inc
pop
push
jle
divps
call
push
cmp
pop
leave
outsl
imul
pusha
shlb
add
dec
cli
loopne
in
ret
jl
add
and
add
jmp
mov
lock
nop
iret
dec
adc
add
mov
push
ljmp
adc
sbb
pop
mov
adc
nop
adc
dec
add
jp
push
adc
mov
xorb
sbb
clc
adc
int
movsb
add
ret
sub
xchg
mov
mov
out
rcrl
out
push
ret
and
cmpsb
scas
sbb
mov
and
in
xchg
xorb
sub
push
mov
cmp
mov
sbb
and
push
loope
and
dec
jmp
add
femms
dec
cld
out
adc
rcrb
js
or
movsb
mov
jae
clc
push
cmp
cmp
addl
hlt
loope
pushl
or
test
mov
les
pushf
xor
inc
xorl
jbe
push
add
adc
add
add
sbb
incl
push
xorw
adc
dec
cmp
cli
pop
aad
cmp
jb
fildl
pop
mov
icebp
call
lods
xchg
dec
dec
ret
hlt
add
orl
lret
les
andb
adc
cs
stos
pusha
add
jmp
xor
adc
mov
add
cmpsl
into
fs
push
pop
aam
rorb
pop
jmp
lods
push
ret
inc
or
loopne
xor
je
xchg
pop
cld
adc
jo
icebp
sbb
mov
dec
add
mov
cwtl
add
and
mov
inc
or
loop
pop
xorb
pop
add
sbb
xchg
and
icebp
mov
jne
mov
pop
mov
mov
mov
cmc
lds
inc
xor
nop
jle
add
mov
inc
add
sarl
add
mov
sbb
movsb
dec
pop
add
push
pop
test
add
bound
xchg
push
cmp
jne
add
cmp
add
pop
cmpsb
dec
es
add
sub
pop
js
push
mov
cmp
jle
and
pop
jmp
lcall
push
xor
pop
add
jle
add
pusha
jmp
ret
sbb
jno
aas
and
cmp
or
or
inc
or
icebp
cmc
add
add
jmp
fisttpl
repz
pop
jge
adc
adc
test
adc
pop
sub
lret
add
lret
leave
mov
imul
call
shll
shrb
add
test
loopne
jnp
add
inc
hlt
repnz
shll
in
and
add
xlat
nop
aaa
cmpsb
stos
lahf
and
loopne
dec
je
lret
push
adc
mov
shrb
loop
add
xchg
fldt
sbb
fmulp
shr
add
bound
push
mov
add
inc
add
test
ljmp
add
mov
push
or
pop
addr16
loopne
mov
gs
add
adc
enter
mov
inc
add
ja
pushf
or
push
ret
inc
jp
add
adc
adcb
and
out
sbb
push
jp
xchg
subb
inc
mov
add
aam
or
out
je
mov
out
sub
xor
cmp
or
leave
sbb
mov
aaa
cli
jbe
cmp
cmp
xchg
ds
mov
mov
lods
add
jmp
lods
inc
rolb
adc
fadds
lods
add
js
xchg
xor
push
push
in
int3
add
into
sbb
rorl
mov
popa
push
jbe
jp
pop
add
movsl
sbb
push
mov
hlt
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
ret
add
sub
inc
add
mov
dec
or
mov
stos
and
out
push
mov
xorb
cmp
lea
divl
xchg
inc
xor
cmp
jecxz
adcl
sti
jmp
add
inc
mov
push
sbb
paddb
sarb
int3
repnz
inc
sbb
or
lahf
outsl
inc
pop
stos
clc
add
cli
in
pop
pushf
sbb
jmp
repnz
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
rclb
or
cmp
xchg
add
dec
dec
in
xchg
loope
cmp
push
in
pop
cmp
mov
lock
movsl
mov
aaa
popa
sti
in
popf
and
fildl
addr16
repz
mov
lret
fwait
xchg
and
mov
add
les
aad
bound
add
aas
cli
dec
adc
jge
cmp
fs
cmpb
rcrl
pop
ret
movsl
and
sub
xchg
inc
xchg
dec
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
xorb
add
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
repz
jmp
rcrb
lock
cwtl
and
or
cmp
jne
add
lret
repnz
add
ret
add
pushl
addb
clc
xor
sub
stos
test
in
andl
inc
mov
sahf
jnp
add
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
int3
inc
add
inc
xor
orb
rsqrtps
stos
cmovo
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
out
cltd
xor
clc
cmp
pop
aas
xor
fs
cmp
scas
add
inc
push
popf
add
and
rcll
sub
lods
pop
push
or
jg
outsl
or
or
adc
stc
cmpl
in
movsl
xor
push
fcoml
add
clc
push
pop
push
addl
and
psraw
mov
cltd
and
cmp
add
add
inc
inc
clc
inc
add
add
call
cmpsl
xor
sub
or
adc
add
andb
aas
imul
nop
or
pop
imul
repz
jns
fwait
adc
add
stos
popf
stc
add
cmp
dec
cvtps2pd
sub
loopne
add
fstpt
dec
and
repnz
ja
xor
repz
pusha
xchg
add
mov
xchg
mov
clc
in
jb
cmp
or
push
das
mov
subl
add
xlat
loopne
sbb
lock
call
push
jne
add
cwtl
add
add
xor
add
adc
add
xchg
sub
mov
push
out
mov
movsl
loopne
push
ja
lds
dec
dec
sarb
or
add
sub
pop
sbb
test
adc
sub
dec
mov
add
inc
adc
add
sub
imul
add
lods
outsb
pop
xor
pop
push
mov
and
pop
jp
out
mov
mov
mov
imul
or
mov
mov
or
add
or
jnp
xchg
add
stc
jne
out
and
sahf
leave
mov
add
aad
daa
out
rcrl
in
dec
and
add
xor
mov
and
int3
push
cltd
int3
or
push
add
and
cmpsb
push
pusha
jmp
iret
sahf
movsb
rclb
jb
and
cltd
or
or
sbb
or
test
mov
pop
mov
cmp
jg
jo
add
in
jb
cmp
push
and
sbb
add
inc
jb
cmp
pusha
cmp
xor
xor
in
jb
cmp
adcb
cmpsb
add
inc
hlt
and
xchg
in
iret
add
lahf
mov
loopne
or
fdivrs
inc
inc
rolb
xchg
fiadds
loope
movzwl
rolb
roll
adc
ret
call
xchg
das
mov
add
jg
aad
sbb
or
adc
fs
xchg
nop
jg
sbb
xchg
jl
add
jo
adcb
cmp
inc
mov
push
cwtl
or
icebp
ds
jb
cmp
sbb
ror
and
xchg
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
in
out
cmp
sbb
and
dec
mov
jmp
sbb
and
in
xor
add
shlb
jne
call
sbb
sub
add
fsts
inc
rcr
fisubs
sbb
add
and
xchg
ret
in
les
cmp
sbb
mov
xchg
lret
in
jb
int
into
sbb
add
and
mov
xorl
mov
mov
cmp
adc
mov
pop
jo
and
inc
popl
inc
add
pop
out
sbb
sub
cmp
dec
jg
pop
stos
sub
inc
push
add
sub
inc
js
gs
shll
cmpsl
xor
sbb
pop
push
addl
add
push
in
mov
adcb
inc
dec
jne
je
data16
insl
outsl
jb
cmp
and
inc
mov
or
dec
outsb
fnstsw
cwtl
mov
sub
xchg
or
je
inc
sub
mov
mov
xor
test
adc
push
pop
jle
and
lock
adc
add
sarb
jns
testb
inc
inc
imul
outsl
add
pushf
adc
out
dec
add
add
outsb
addr16
popf
and
add
or
or
jbe
scas
data16
outsl
dec
hlt
je
sbb
pop
fld
sbb
or
mov
arpl
repz
or
imul
icebp
pop
mov
shlb
dec
insb
icebp
popa
movsb
rcl
bound
pop
lcall
or
pop
cmp
sub
mov
mov
xchg
outsl
dec
ss
test
or
sbb
or
inc
mov
add
inc
jne
add
outsl
aam
add
mov
int3
ljmp
ret
mov
mov
mov
mov
sub
sub
es
push
xor
mov
in
cmp
lret
or
orb
push
add
arpl
push
nop
addr16
mov
or
add
and
out
cmpsl
xor
scas
pop
fs
test
xchg
or
cld
aam
pop
ljmp
rcrb
inc
popa
and
outsl
lea
pusha
mov
sbb
bound
mov
pushf
orl
dec
inc
lods
shlb
je
pusha
in
mov
push
sub
fsub
jo
incl
imul
in
cmpsl
fimull
add
ret
adc
repz
hlt
pop
or
stc
rclb
fadds
mov
add
iret
insb
pop
push
sub
add
imul
insl
and
push
cmpsb
sub
popf
inc
sbb
add
dec
cmc
pop
or
add
cmp
clc
dec
loope
jmp
fisubrl
dec
mov
nop
push
leave
mov
mov
or
rorb
push
fmull
shll
inc
ds
repz
je
add
js
jo
jp
ja
dec
jge
jg
and
cmc
cmp
add
xor
sub
imul
ljmp
in
add
outsb
out
inc
cmp
jl
pop
jae
push
pop
jmp
jbe
hlt
push
or
mov
xchg
popa
jmp
pop
dec
xchg
sub
xor
insb
add
sub
jne
shll
xor
xchg
add
pop
cmpsb
push
or
mov
mov
dec
pusha
add
inc
push
dec
notl
add
add
mov
test
psubw
add
loop
sbb
xor
clc
loop
add
push
sub
push
add
or
adc
add
jne
xchg
cmp
add
cmc
and
add
cs
loop
repnz
xchg
aas
cmp
xchg
cs
sbb
lock
add
in
pop
inc
dec
in
push
movsl
decb
lock
add
gs
int3
or
add
mov
aam
scas
add
inc
bound
dec
pop
add
aam
aaa
xor
pop
outsb
popf
pop
xor
imul
popf
ret
out
mov
je
adc
ljmp
imul
test
pop
jbe
inc
push
out
dec
mov
inc
add
push
dec
mov
test
jg
popf
fxch
add
lods
cli
lahf
rcll
add
out
lock
int
mov
aam
xorb
adc
stos
push
rcll
xchg
lods
iret
xor
push
or
and
add
jo
inc
shld
das
add
insl
shlb
shlb
cmp
scas
add
mov
cmp
cli
add
fstpl
or
add
or
sub
cmp
ret
adc
add
pop
daa
popa
fimuls
nop
pop
add
adc
xchg
xchg
push
and
mov
cwtl
jecxz
add
cmp
xor
lret
xorb
jmp
rcl
mov
lock
outsb
std
and
out
ficomps
add
dec
inc
ss
lds
pop
push
push
mov
pop
inc
idivl
out
popf
fwait
lret
mov
imul
dec
dec
add
jne
inc
js
add
pop
test
cmp
or
rolb
lahf
lds
push
sub
jp
and
hlt
sub
xor
decl
shlb
sahf
and
add
clc
adc
push
mov
adc
ljmp
pop
cwtl
test
cwtl
lret
out
adc
xor
cmpsl
inc
fs
push
cmp
adc
cmp
pop
mov
xchg
arpl
cwtl
add
add
clc
dec
inc
mov
cwtl
sub
ljmp
stos
mov
jb
add
stc
imul
adc
lahf
ja
js
jo
fnstcw
repnz
push
pop
jbe
add
mov
add
lahf
dec
filds
les
sti
pop
repnz
add
sbb
jmp
mov
stos
push
lret
and
lock
push
lock
mov
add
popl
out
neg
stos
lea
loop
push
pusha
xchg
add
add
push
mov
add
cld
nop
sub
hlt
adc
int3
push
push
cmp
mov
dec
and
inc
sub
aas
dec
sub
or
mov
call
or
in
add
sbb
xor
xor
fisubrl
sarb
add
xor
and
filds
adc
mov
les
sub
mov
es
add
ret
jne
push
pop
push
cmpsb
add
sti
pop
out
orb
xor
cmpb
jl
or
lret
add
inc
lods
movsb
pop
xchg
pop
or
jp
xchg
push
lcall
cmp
inc
add
add
sbb
mov
sbb
clc
sub
je
or
jb
cmp
cmp
aaa
imul
shl
add
sub
ret
adcb
xchg
or
pop
jmp
inc
add
cmpsl
ja
call
ja
cmp
xorb
xchg
pop
dec
fsubrl
sar
add
push
jo
pop
add
or
xor
fadds
cmovp
mov
inc
and
popf
insw
inc
hlt
add
or
add
icebp
adc
inc
lret
dec
add
add
fs
shlb
rcrb
mov
call
push
mov
sub
aad
xor
adc
cltd
adc
push
or
enter
pusha
sub
pop
fiadds
mov
sub
add
inc
push
push
push
xorb
sbb
stc
add
cli
and
mov
sub
push
shl
fisttpl
icebp
add
mov
popf
dec
pop
js
inc
sbbb
loop
pusha
add
cmp
ret
pop
sub
push
push
inc
cmp
daa
mov
lret
dec
scas
sub
mov
push
push
jbe
cmp
ljmp
mov
lgs
adc
inc
test
loopne
add
sarb
fsubr
sub
sbbl
gs
jnp
nop
pminsw
into
adc
mov
add
and
rol
test
in
clc
std
or
out
pop
and
cmp
jmp
add
leave
and
mov
add
shrd
mov
pop
fldl
jns
add
mov
push
pop
pop
lret
pop
xchg
jl
xor
or
je
ljmp
ja
sbb
pusha
or
xchg
sbb
jecxz
orb
xchg
push
orb
sbb
xor
xchg
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
out
inc
inc
add
dec
enter
rcrb
add
cld
jae
xchg
in
cmp
ret
mov
jne
add
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
sarl
bound
push
stos
flds
lock
adc
out
cli
icebp
add
jecxz
jge
adc
or
or
cs
xor
xlat
call
addr16
add
incb
jl
imul
xchg
cmp
xchg
test
vpinsrw
fiaddl
xchg
lock
inc
aam
jge
add
jl
pop
loopne
sub
cmp
pusha
sbb
jecxz
add
out
add
push
cwtl
jnp
push
inc
pop
rolb
cmp
add
add
add
fnsave
das
jb
cmpsl
dec
imul
add
cmp
in
xor
ds
sub
loopne
and
pop
mov
add
fcoml
jp
or
call
sti
jns
sub
add
sbb
dec
fadd
push
jmp
movsb
or
add
mov
out
add
cs
add
test
inc
mov
add
or
cli
cmp
inc
add
inc
clc
addl
cmp
add
shl
xchg
push
pusha
aad
push
inc
ret
rcll
call
or
js
scas
enter
push
xchg
sbb
inc
fwait
cmpsl
add
dec
push
cmpb
xchg
push
xchg
rorb
jb
movsw
jns
sysret
dec
or
aad
rclb
test
add
cmpl
shl
pop
xor
xchg
push
add
mov
fidivrl
clc
pop
xchg
sub
loope
hlt
cmpsb
add
and
add
and
adc
mov
fs
sbb
jbe
mov
and
pop
mov
inc
lea
mov
adc
adc
cli
out
fadds
jo
stos
cmpsl
inc
sbb
bound
lcall
in
xor
vucomiss
and
jge
or
mov
cmp
ja
and
add
lock
sbb
cld
movl
adc
push
pop
xor
add
incb
jne
add
dec
or
shll
imul
add
cmp
lock
insb
add
std
repz
add
sub
test
std
lds
push
inc
test
lock
ja
jnp
bound
mov
shrb
cmp
adcb
adc
sub
push
pop
or
jne
mov
or
pop
call
rolb
jg
sub
pop
pop
fildll
or
mov
mov
shrb
adc
pop
dec
cmpl
loopne
adcl
pcmpgtd
add
rcrl
std
adc
adc
jge
mov
add
xorb
add
add
or
or
imul
pop
inc
je
push
sub
nop
inc
mov
pop
mov
add
lock
loopne
pop
add
dec
mov
out
lret
add
bound
insl
push
adc
xchg
xchg
inc
enter
lods
add
cmp
add
fs
pop
jmp
jg
mov
sbb
or
jge
add
fs
hlt
dec
pop
mov
dec
push
rolb
and
or
addr16
and
add
jmp
jle
adcb
dec
xchg
add
or
arpl
cld
inc
pop
rcpps
pop
cmpsb
out
mov
push
fdivr
or
add
adc
and
popa
pusha
adc
mov
mov
mov
xchg
add
push
lea
das
int
lcall
xchg
cmp
add
dec
ret
repz
and
xlat
enter
mov
bound
cmc
cltd
xchg
add
inc
add
idiv
add
mov
xor
mov
add
or
adc
mov
xor
cmpsl
add
push
xchg
pop
or
jbe
dec
rorl
dec
add
int3
dec
push
push
out
cmpsb
jle
add
ja
jecxz
dec
fucomi
dec
add
lret
mov
pop
inc
push
sbb
push
shlb
cmp
add
dec
call
repnz
and
inc
lock
xorb
xchg
add
push
pop
hlt
adc
enter
scas
popa
mov
inc
push
add
adc
pop
clc
cwtl
push
add
add
in
sbb
xorl
leave
jne
add
sahf
add
add
jne
mov
xchg
ja
push
loope
imul
lret
repz
movsl
data16
mov
pop
add
je
xchg
cmp
mov
loop
add
mov
or
aas
xor
rclb
mov
loop
dec
les
pop
inc
in
inc
repnz
rclb
add
sub
movsb
dec
leave
and
sbb
add
mov
cmp
pop
filds
mov
mov
jl
movhps
dec
ror
mov
mov
pop
push
jge
mov
popl
std
into
jmp
push
push
push
xor
push
push
and
mov
aam
nop
lods
hlt
pop
cwtl
push
add
cli
imul
stos
xchg
inc
js
xchg
add
push
dec
fsubrl
xor
cmpsb
dec
mov
add
das
movsl
pop
lret
lret
jnp
add
rol
cmpb
mov
pop
pop
or
add
fisttpll
push
add
fld
das
ret
push
xor
inc
nop
sub
inc
dec
sbb
psubb
push
repnz
scas
add
cli
pop
dec
inc
fcoms
je
jle,pt
add
and
add
adc
and
bt
add
jae
xor
and
push
into
dec
ja
push
add
dec
hlt
mov
cmp
insl
mov
ja
add
call
mov
add
jmp
add
mov
adc
pop
movsb
adc
mov
lods
lahf
add
mov
pop
je
mov
pop
fs
aaa
les
mov
stc
lock
je
add
les
jp
lock
dec
fcompl
fs
lds
add
sbb
loopne
into
adc
aaa
add
mov
call
cltd
and
sbb
call
addb
les
cmc
nop
ficompl
push
add
clc
mov
or
inc
das
jne
sbb
cwtl
pop
out
inc
std
mov
aam
mov
inc
inc
jne
and
lock
mov
popa
dec
push
mov
or
popf
xor
int3
and
daa
mov
call
pop
rolb
add
and
adc
add
pop
adc
add
adc
call
inc
and
mov
xor
mov
jecxz
dec
into
sub
insl
add
ljmp
adc
pop
dec
add
es
aas
mov
and
repz
or
inc
dec
inc
xchg
movsb
hlt
mov
pop
or
shrb
insb
mov
shufps
lret
xchg
int3
es
xchg
mov
mov
add
mov
cld
push
ljmp
lea
push
mov
mov
pusha
cmp
mov
push
cmpsb
add
add
nop
test
outsl
mov
add
inc
jns
push
add
jg
sub
sbb
setg
enter
add
out
daa
jg
add
mov
add
and
add
adc
inc
outsb
inc
ljmp
pop
shrb
inc
add
xchg
cmpsb
mov
fstl
inc
ficoms
add
jge
sub
add
or
cmp
mov
ret
iret
fistl
pop
jno
add
mov
xor
add
mov
shl
insb
ds
pop
pop
les
jle
and
mov
mov
cmpsl
or
stos
add
xor
lea
push
or
add
push
arpl
mov
repz
xor
or
push
enter
pop
aas
cmp
jg
cmp
or
adc
call
pushf
jo
pop
cmp
fimull
add
add
mov
ja
in
orb
xchg
mov
add
sub
mov
dec
je
add
push
punpcklbw
add
jmp
mov
and
cld
add
ja
vpunpckldq
xor
dec
icebp
iret
push
jge
push
fsubrl
mov
xor
int3
cmp
push
cld
add
iret
les
add
shr
add
aam
or
scas
lock
cmp
jge
pop
imul
or
shl
jl
pusha
sub
add
push
push
ljmp
into
xchg
mov
bound
aad
or
lock
adcb
dec
mov
int3
outsl
mov
stos
jb
mov
cmp
add
ror
sub
add
rcrb
xor
sbb
popa
subps
addb
xchg
sti
add
fcoms
push
add
cmp
jl
mov
inc
add
xor
xor
adc
add
sbb
add
ss
in
xchg
add
lret
or
or
add
jne
out
xchg
cmpxchg
test
out
push
xorb
inc
mov
dec
sub
test
mov
test
cmpl
jg
and
dec
mov
pushf
pop
add
xchg
es
das
js
xorb
jge
lock
and
pop
dec
popa
or
inc
push
cmpsb
jno
jo
cld
test
data16
mov
add
xchg
or
add
sub
push
fs
and
push
xor
mov
les
or
adc
jge
mov
or
push
jg
xor
add
mov
call
xchg
dec
sub
pop
aam
xchg
push
enter
into
pushf
shlb
xor
or
sbbl
test
loopne
outsb
pusha
outsb
mov
mov
mov
mov
jmp
add
jp
daa
mov
pop
inc
orl
mov
lret
or
je
xor
add
ret
pop
test
cmp
hlt
cmpsl
int3
imul
in
std
add
loopne
add
jbe
add
jge
movsb
pop
test
dec
cmp
inc
add
lock
xchg
leave
fcmovne
testl
add
and
aam
test
cmp
lret
mov
fsubs
bound
and
inc
cld
add
cmpsl
jg
rcl
pop
add
push
or
and
ds
cmp
cmp
call
add
mov
and
loopne
fisttpll
sbb
xor
add
or
or
jb
mov
mov
sbb
call
xor
test
push
jge
add
cwtl
inc
fsubrs
call
sub
rcr
or
adcb
xor
push
xor
pop
sub
add
pusha
inc
adc
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
ja
pusha
fs
add
mov
inc
add
testl
add
mov
and
inc
add
jmp
es
add
or
add
mov
add
mov
add
adc
jp
and
das
pop
add
les
push
or
je
psadbw
loop
dec
incb
xlat
mov
leave
push
add
pop
push
adc
int3
das
shl
add
mov
lock
mov
mov
inc
adc
mov
add
sbb
scas
xor
and
push
pop
stos
mov
add
jb
adc
inc
cmp
or
jne
cli
cmp
add
sub
mov
add
lods
jne
movl
push
aas
inc
clc
mov
notl
jecxz
lea
mov
pop
xchg
cmp
and
out
test
mov
jmp
add
mov
adc
mov
or
sub
add
stc
pop
or
inc
push
sbb
inc
xor
imul
and
push
rcrl
add
add
jb
inc
mov
es
or
int3
lret
add
out
add
pop
and
sub
lock
int3
stos
add
pop
pop
sub
adc
imul
inc
cwtl
jl
adc
call
mov
pop
adc
add
xchg
jmp
pop
push
inc
jns
mov
ret
mov
add
mov
adc
jns
add
fwait
mov
mov
mov
push
add
dec
add
xor
pop
adcb
jmp
mov
adc
mov
mov
repnz
adc
rorb
repz
outsb
sbb
and
movsl
aaa
nop
cmc
enter
mov
pop
roll
cmp
jnp
mov
sub
or
mov
and
enter
add
cld
pusha
sub
mov
jne
rcr
int3
aas
sti
cmp
push
xor
in
iret
sub
or
aas
cmp
add
cmp
gs
and
popf
inc
sbb
add
mov
lock
add
aas
and
xchg
fdivl
lock
pop
in
cmp
hlt
nop
mov
repnz
cmp
and
push
jl
add
and
adc
mov
iretw
sub
sub
add
dec
stc
or
push
add
jne
jge
shrb
sub
mov
dec
lret
and
push
insl
cmp
jge
paddusw
inc
pop
and
add
shrb
jecxz
data16
jo
sbb
and
mulb
fsubs
inc
dec
jb
push
loope
add
inc
mov
push
into
test
sbb
add
adc
push
mov
adc
jg
inc
adc
lahf
test
shl
push
add
xchg
inc
or
dec
jne
mov
xchg
cwtl
and
push
add
inc
and
cmp
or
adc
test
ds
pop
add
inc
jb
call
arpl
inc
js
inc
mov
mov
pop
add
cwtl
out
enter
movl
outsb
in
mov
ficoml
loopne
dec
mov
xchg
sbb
push
mov
test
es
xor
cld
enter
sbb
sahf
inc
adc
and
dec
mov
sarb
adc
inc
jl
cmp
adc
inc
sub
shlb
dec
sbb
cltd
mov
pop
mov
push
xor
cmpl
aam
mov
fildll
and
pusha
data16
fadds
bound
add
xor
shrb
and
xorb
pusha
pop
les
dec
cmp
lods
test
push
adc
cmp
int3
jmp
cmc
test
lock
movsb
cld
ror
sbb
iret
xor
pushf
iret
enter
in
sete
les
mov
call
and
lods
loopne
cmp
pop
jl
sbb
js
sub
pcmpeqb
scas
fs
push
cli
clc
pop
pusha
repz
dec
clc
loop
je
enter
mov
iret
adc
inc
pusha
cmp
dec
xchg
xor
inc
clc
adc
std
out
repz
cld
or
call
mov
andb
loopne
jb
je
inc
mov
cli
mov
cmp
repz
dec
pop
push
or
add
sarb
dec
mov
or
in
addb
adc
add
mov
sub
pop
sbbl
clc
sub
xor
add
enter
jle
lea
inc
cld
shlw
out
movzbl
add
add
add
repz
jle
add
popf
dec
jle
inc
mov
push
xor
fcoms
loopne
popl
mov
loopne
sub
inc
out
adcb
paddb
in
test
jg
pop
add
or
add
dec
stos
cmpb
daa
pop
inc
mov
fldenv
repz
jmp
mov
xchg
add
loop
add
adc
and
xchg
mov
jg
addl
repnz
xchg
bound
hlt
sub
mov
sbb
or
xor
pop
out
mov
clc
mov
shr
nop
jge
addl
neg
xlat
outsl
push
mov
mov
les
fdivl
add
xor
mov
add
inc
dec
or
adc
mov
pop
add
cmp
clc
adc
jae
cwtl
femms
cmp
sbb
push
loop
outsl
dec
mov
add
sub
add
mov
rorb
add
repz
inc
lods
mov
sub
hlt
mov
lds
jmp
dec
test
inc
pop
jecxz
cmp
addb
sub
iret
es
mov
push
or
icebp
sbb
add
fnstenv
add
add
fisttpll
nop
pop
and
add
shlb
jbe
jle
cmp
jp
sub
or
int3
idivl
pop
pop
adc
loop
jmp
lods
xor
add
add
add
inc
mov
fwait
add
pop
negl
sub
lods
std
sub
aam
jle
mov
dec
jmp
stc
push
sbb
sti
jg
adc
cmc
sbb
adc
push
std
add
addr16
xor
popf
sub
ja
pop
cltd
rolb
outsb
push
or
flds
imul
add
nop
or
dec
ljmp
adc
ja
add
dec
fisubrs
sbb
push
dec
call
and
adc
pop
add
testl
cltd
cmc
scas
jecxz
out
inc
cmp
pop
or
stc
adc
add
jne
push
push
sub
add
pop
adc
dec
setns
mov
xor
push
ret
push
mov
rolb
je
add
div
push
add
and
sbb
sti
jmp
or
sbb
je
cmp
adc
push
out
loop
mov
jg
pop
or
or
mov
mov
adc
jmp
add
gs
mov
mov
mov
clc
push
popa
add
xor
and
sub
xchg
xor
inc
cs
cmp
add
fists
add
cmp
fmuls
add
fistpl
fidivrl
lret
addl
call
push
in
add
pusha
mov
add
scas
sub
mov
cli
setl
add
xchg
pop
add
imul
clc
add
mov
shl
mov
xchg
dec
push
out
pop
ret
and
sub
pusha
sub
popa
adc
pop
ret
and
push
jecxz
or
faddl
roll
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
push
and
inc
inc
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
inc
andl
add
mov
sub
iret
lea
lods
stos
lock
jmp
int3
add
mov
add
pop
cmc
add
dec
and
add
xor
les
in
adc
inc
xchg
pop
or
jno
stc
xor
fiadds
mov
xchg
insb
cs
push
sahf
and
inc
add
loopne
jle
pop
mov
sbb
repnz
lcall
inc
sbb
add
jp
add
insl
jae
xor
leave
or
cmpsl
lea
inc
shlb
add
pop
or
lahf
adc
cmpl
inc
adc
add
inc
fmull
imul
aas
add
and
insb
pop
add
andl
fabs
aaa
call
cld
fildl
sub
repnz
dec
cmp
addl
test
jo
inc
cld
or
add
fbstp
pop
bnd
add
adc
inc
adc
call
pcmpgtd
loop
jmp
add
mov
das
or
add
or
cmp
or
jae
cmpb
and
loopne
sbb
adc
adcb
ja
jmp
pop
cwtl
das
add
pop
push
xor
sbb
nop
mov
xorl
xor
ljmp
push
add
subb
add
into
cs
enter
je
cld
jns
popf
sub
popa
addl
repz
push
roll
jp
testb
mov
push
sub
sbb
or
add
daa
js
cwtl
cwtl
adc
filds
insl
adc
mov
add
jns
xor
rcrl
inc
popa
add
mov
or
stc
push
add
pop
dec
int3
in
jmp
cmp
or
add
stos
and
add
xor
cwtl
add
lea
add
movb
adc
aas
test
testl
daa
jmp
loopne
rorb
jmp
lock
jge
push
es
daa
add
call
adc
cmp
pop
xor
add
cld
lock
xchg
cmp
sub
pop
cmp
into
fmuls
and
mov
mov
cmp
subb
sub
rolb
add
and
mov
adc
xor
sbb
push
loopne,pt
fistpll
add
outsb
fisttpl
add
mov
rcll
add
insl
nop
fwait
test
ret
lods
add
dec
frstor
add
repz
lock
add
fimull
into
add
mov
adc
mov
popa
sub
imul
inc
nop
addl
or
cmp
mov
lds
xchg
push
and
jne
push
jbe
adc
jp
aas
and
add
cmp
cmp
mov
fbstp
inc
pop
mov
pop
push
cmp
sub
aas
scas
push
inc
add
or
push
nop
dec
adc
inc
inc
and
adc
jns
mov
or
cld
je
and
fs
sub
sub
pusha
daa
add
adc
xchg
xchg
pop
xchg
icebp
or
cld
bound
jae
inc
mov
xlat
and
lea
inc
addb
leave
dec
lret
adc
xor
mov
lea
add
les
mov
inc
xchg
je
cmpb
repnz
push
outsl
add
js
in
jle
push
sbb
add
out
inc
orl
add
sub
and
mov
cmpsl
pusha
clc
dec
fsubs
add
jecxz
not
pop
mov
inc
xchg
jns
push
fdivs
jae
xor
fistpl
out
add
ret
test
add
sbb
xor
repnz
or
out
fistpl
jl
adc
mov
shl
std
dec
xlat
add
pop
add
add
fs
loopne
add
jmp
pop
add
call
and
es
into
add
cmp
ja
rcrb
lahf
push
adc
cli
jae
loopne
and
mov
mov
inc
cmp
mov
jmp
add
jb
nop
in
int3
loopne
add
popf
mov
test
cwtl
in
jp,pt
cmp
cmp
pop
dec
adc
dec
in
add
dec
jge
mov
ret
or
cmpsl
jno
into
and
cmp
lea
ret
add
xor
lret
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
cmp
xchg
xor
or
mov
mov
add
mov
movsl
inc
adc
ja
or
js
add
cmp
mov
mov
sub
mov
or
sar
add
bnd
xchg
or
add
cli
mov
jg
push
push
add
daa
lret
loope
pop
fimull
add
dec
outsl
pop
repnz
enter
and
mov
lahf
jne
stos
xor
lea
mov
inc
pop
test
add
daa
inc
inc
add
xor
sub
cmpb
add
ds
or
pop
out
xor
cmp
sbb
aaa
fcoml
push
add
inc
inc
dec
jne
flds
icebp
out
sub
cmp
call
dec
iret
in
and
push
mov
mov
mov
xchg
add
adc
sub
fstpt
jbe
pop
xlat
lahf
jns
add
add
loope
incl
cmp
flds
push
or
add
mov
and
pop
add
ret
sub
add
cs
adc
jle
jne
add
cld
push
add
xor
mov
jo
dec
pop
sub
jae
jge
bound
mov
in
mov
xchg
mov
fstpl
adc
popf
test
xchg
add
jecxz
dec
std
call
jle
mov
inc
loopne
jge
adc
dec
scas
and
xchg
add
mov
add
pop
sbb
leave
pop
jne
cld
lods
xor
jl
lea
inc
or
adc
mov
addb
pop
inc
inc
inc
dec
dec
add
dec
dec
add
push
push
or
push
cmp
add
pop
popa
bound
fs
push
insb
insl
outsb
pop
outsl
jo
jb
add
ja
js
jp
add
xor
xor
sbb
aaa
cmp
cmp
das
cmp
popf
add
jnp
sub
cmp
add
sub
daa
or
or
in
addr16
xchg
and
lds
ljmp
es
and
add
out
mov
and
pusha
jmp
or
cld
add
sbb
pop
imul
add
sub
ret
and
add
data16
in
pop
sbb
jmp
xchg
jo
push
or
pop
iret
aam
adc
daa
push
mov
add
pop
dec
or
add
mov
movsl
push
xor
flds
data16
lock
add
insb
loope
add
sub
xor
push
call
add
adc
clc
add
std
mov
in
push
mov
dec
inc
add
add
jbe
into
mov
push
sbb
out
and
movb
lods
add
cli
inc
mov
adc
mov
push
insl
and
or
out
jnp
dec
push
push
dec
jp
add
mov
sbb
push
sarb
cmpsl
ret
sub
dec
lahf
push
pop
fldlg2
and
add
ss
loope
mov
aam
pop
lods
inc
mov
jg
add
mov
movsb
pop
insl
test
incb
aas
enter
sub
add
jl
sub
sbb
loopne
dec
in
xchg
add
lahf
xorl
pop
push
push
mov
jno
bound
jae
push
lret
add
test
mov
pop
mov
mov
cld
adc
clc
and
mov
push
add
imul
add
lock
inc
mov
scas
dec
ret
xorl
xchg
sbb
or
inc
or
je
js
add
dec
inc
mov
or
inc
push
ror
loope
add
insb
xchg
and
cli
ljmp
aam
lods
lahf
pop
jg
mov
leave
xchg
or
add
subb
sub
mov
mov
stos
pop
inc
mov
add
or
str
and
push
test
add
mov
cmp
out
loopne
shlb
xor
xchg
testb
add
inc
loop
add
xchg
pop
clc
addl
pop
mov
or
xchg
adc
push
sbb
leave
mov
add
add
fcompl
mov
mov
add
dec
jne
xor
jge
je
adc
mov
or
cmp
sarb
cmpsb
add
rcll
dec
add
nopl
testl
std
in
add
cmp
pop
add
sub
adc
sbb
mov
fcom
mov
mov
sbb
int
inc
mov
call
notb
out
test
lock
ret
in
pushf
jle
gs
in
in
push
add
idivl
bound
mov
daa
enter
adc
shrl
cs
mov
scas
push
in
lret
frstor
mov
shlb
fisttps
xchg
js
add
fsubrs
sub
or
cmpb
loop
decb
fidivs
mov
adc
ja
xchg
add
mov
or
pop
add
hlt
cmp
movsl
xchg
lock
add
pop
dec
repnz
daa
add
movsb
inc
dec
push
jmp
add
inc
xorl
jp
add
popf
jno
mov
add
pop
xchg
pop
fstpl
lock
rcll
adc
add
push
rcll
push
mov
jae
popf
jns
add
xchg
in
xor
scas
fs
xchg
les
mov
mov
pop
testl
ret
aas
add
cmpsb
pop
dec
or
mov
int
mov
stos
out
add
xchg
xchg
sbb
gs
mov
repnz
sub
mov
out
add
push
add
mov
fisttpll
xchg
dec
pop
mov
cmpb
pop
jle
mov
add
ret
add
dec
pop
push
mov
in
rolb
outsl
dec
pop
jne
cmp
inc
lahf
mov
popa
inc
flds
sub
jbe
add
xor
xchg
add
je
xor
filds
and
dec
add
sbb
and
dec
mov
cwtl
or
orl
dec
add
add
mov
arpl
mov
sbb
rcll
les
dec
adc
or
inc
sub
cmp
stos
rclb
xchg
xchg
cld
jge
testb
lea
bnd
add
lock
shl
adc
adc
sub
movsl
fs
pusha
imul
push
adc
pop
call
xchg
out
lock
push
sub
in
pop
cmc
add
pop
pop
hlt
andb
les
inc
test
fsub
push
pop
add
xchg
cld
push
xor
dec
add
inc
subb
jmp
mov
jl
add
jmp
fdivs
lock
add
into
add
jmp
rorl
pop
not
insb
out
ds
movsl
rclb
test
popa
aam
les
mov
fiaddl
loopne
lock
pop
cld
mov
arpl
test
pop
sbb
add
push
xchg
fistps
sahf
cmp
aam
pop
push
add
cmp
mov
mov
pop
out
dec
add
sub
push
adc
and
add
dec
fucomp
mov
jno
xchg
inc
and
push
rclb
repz
lods
dec
int3
pmulhw
sub
adc
add
pop
sarl
push
lock
push
mov
dec
jns
into
jmp
inc
mov
cmp
in
icebp
in
rcrl
fsubl
rcll
jne
mov
call
clc
dec
xorl
add
movl
mov
test
cwtl
xchg
cmp
dec
adc
add
push
adc
shl
ss
mov
inc
pop
jno
sub
sub
sbb
push
in
sub
or
bound
enter
push
pusha
xchg
clc
pop
stos
adc
mov
mov
inc
or
js
pusha
test
or
push
lods
inc
mov
fcoml
jnp
add
iret
dec
inc
and
add
inc
cwtl
stos
add
mov
addr16
repz
sub
lahf
call
lret
movsb
inc
pushl
add
ret
call
sub
or
lods
lret
sbb
xchg
out
in
into
ja
cmpsb
sub
push
stos
xchg
inc
andl
add
pop
dec
sub
fmull
loop
mov
sbb
xchg
in
inc
cmp
jne
pop
lcall
mov
push
and
test
ficomps
add
mov
cmp
add
mov
js
scas
or
push
inc
mov
incb
lea
rep
add
push
pop
sub
dec
jae
lret
mov
loopne
or
ja
cmc
add
sub
daa
jl
addl
mov
push
cmpl
mov
mov
or
add
stos
and
leave
ret
nop
pop
xchg
ljmp
pop
cmpb
outsb
adc
test
add
sub
or
enter
leave
or
out
add
or
adc
xor
add
and
xor
lods
loopne
add
lret
stos
sub
bound
call
mov
add
xor
add
jmp
and
xor
outsl
push
repnz
enter
or
and
mov
rolb
dec
and
fimull
cwtl
ja
daa
or
lods
mov
add
ret
xor
aam
cli
fiadds
xchg
call
jle
add
jmp
verr
mov
popa
add
xchg
jecxz
and
lahf
jo
and
xorl
jb
and
jae
pop
and
lods
movsb
sbbb
sbb
fmull
push
sub
add
xchg
inc
iret
jno
lods
sub
dec
jo
cs
mov
pop
xchg
add
push
sub
add
fcoms
loopne
test
add
or
sbb
repnz
mov
rorb
std
add
enter
add
je
pop
dec
dec
or
sbb
pushf
call
in
add
pop
sbb
arpl
hlt
add
dec
push
scas
add
adc
xor
mov
jne
jne
jl
add
cmp
inc
push
sbb
mov
sub
or
sbb
scas
and
leave
jae
xlat
into
test
nop
mov
xchg
or
jge
cmp
ja
adc
push
mov
repz
fcmovne
add
iret
mov
mov
mov
or
out
fists
sbb
add
pop
icebp
hlt
ret
push
add
lret
push
sub
adc
ret
inc
sahf
adc
aas
jo
xchg
xchg
cmc
add
clts
adc
jecxz
or
adcb
inc
clc
mov
jmp
cmp
imul
out
mov
pushf
inc
push
pop
add
add
dec
imul
insl
jae
or
repz
xchg
and
sbb
fnstcw
je
push
sti
out
jne
popa
add
push
in
mov
rorl
jmp
repz
out
add
pop
adcb
mov
call
add
jmp
add
xchg
adc
and
add
xchg
adc
fistl
adc
shrl
add
mov
sub
pop
dec
dec
xchg
push
mov
out
xchg
js
nop
xlat
add
add
jne
push
inc
adc
cld
in
jmp
pop
add
fisttps
or
in
cmp
add
rcrl
jmp
add
push
mov
sub
stos
popf
mov
xor
lds
out
push
adc
call
mov
adc
mov
add
cmp
mov
adc
add
cmp
jbe
add
dec
call
add
or
adc
jle
add
mov
xchg
lret
xchg
add
jb
mov
mov
lock
and
cmpl
je
sub
cmpb
and
cwtl
dec
xchg
test
cmp
dec
adc
mov
jl
sub
in
add
test
movsb
mov
mov
adc
add
cwtl
mov
nop
test
add
mov
push
dec
dec
fimuls
sub
xchg
sti
call
push
mov
mov
inc
xor
les
sub
or
push
cs
insb
clc
and
dec
sarl
orl
sbb
sbb
inc
jae
nop
mov
add
sarl
push
pop
push
lock
mov
loopne
dec
cs
adc
data16
mov
sub
rcll
and
mov
pushf
jne
dec
adc
test
lods
add
or
je
inc
jl
push
and
aaa
cmpsl
or
mov
repnz
sub
das
jbe
iret
mov
mov
push
mov
add
arpl
cld
in
lea
xchg
push
hlt
sub
jg
add
shlb
or
adc
pop
add
add
mov
mov
outsl
lcall
ret
popf
push
jge
sahf
fiadds
enter
inc
and
xorl
and
add
incb
sbb
test
xor
adc
es
out
addb
jge
push
push
xchg
ret
std
push
inc
inc
inc
dec
repz
cmp
dec
add
mov
mov
sahf
add
push
dec
inc
clc
dec
add
mov
or
xchg
add
movsl
mov
cld
mov
add
lods
imul
sub
sub
mov
aas
push
cmpb
mov
int3
pop
es
xor
pop
out
inc
adcb
and
je
inc
mov
lock
add
dec
inc
mov
xchg
js
add
rcr
add
mov
dec
imul
add
jns
mov
mov
sub
add
jb
je
outsb
xchg
jge
jmp
push
adc
xor
or
mov
dec
mov
cmpl
push
cmp
and
inc
sbb
dec
cmp
sbb
out
std
hlt
in
pop
cli
xchg
push
lock
nop
das
mov
sub
addl
sbb
inc
sti
or
adc
leave
shl
mov
pop
cli
pop
es
jl
out
inc
pop
call
loopne
add
mov
xchg
push
add
pop
enter
popl
das
jle
psraw
add
outsb
or
add
sub
add
cmp
jle
cld
cwtl
or
or
lock
js
cli
add
cmp
sub
aam
clc
and
sbb
in
add
sub
push
dec
shrd
push
add
ss
dec
xor
out
xlat
push
dec
push
add
popa
jae
mov
add
fsts
or
jge
loop
mov
inc
cpuid
mov
movsb
push
jb
add
add
cs
ret
pushl
loop
loopne
imul
jl
and
cmpsl
dec
add
cltd
les
in
mov
hlt
movb
lret
xor
call
cld
pusha
fsubrl
inc
sub
or
xor
and
in
dec
roll
fistpl
test
adc
add
dec
faddl
and
rclb
in
cmp
call
test
cmc
mov
mov
add
push
xchg
clc
enter
lea
sarb
xchg
jmp
lret
dec
add
jae
xchg
dec
or
push
jnp
add
mov
popf
imul
mov
jnp
add
lods
fsubrs
bound
add
fisubrl
test
and
movsl
mov
push
dec
das
ja
scas
cmp
cmp
jmp
out
xor
dec
pop
sub
test
xor
xchg
mov
test
xor
in
add
repnz
mov
mov
imul
dec
jnp
mov
add
pop
xchg
dec
sub
push
sub
xchg
ret
in
sti
into
add
jnp
or
inc
push
arpl
push
cmp
scas
adc
fdivl
pop
pop
sbb
add
add
mov
adc
int3
mov
mov
push
es
sbb
ret
mov
shrl
push
movsb
adc
and
jns
mov
lds
lods
cmp
jmp
dec
fisubl
popf
adc
add
mov
mov
in
fldcw
pop
jo
in
xor
lock
mov
pushf
int3
iret
shlb
jae
add
adc
push
add
adc
fbld
hlt
in
rep
xchg
xchg
fs
cmc
aaa
jbe
add
je
mov
add
pop
enter
add
add
jns
xchg
pop
push
cmp
lret
loopne
cltd
adc
mov
pop
jmp
pop
jecxz
fists
fiaddl
popa
and
and
dec
js
ret
mov
and
mov
xor
lea
sbbl
and
jl
ror
mull
testb
mov
add
in
scas
dec
fists
mov
out
mov
hlt
in
sahf
inc
xor
add
dec
sub
or
adc
inc
adc
adc
cmp
or
add
test
inc
push
xor
outsb
add
orl
jne
sub
jno
mov
cld
sub
ja
dec
or
pushf
add
inc
jne
je
fdivrl
ret
imul
mov
dec
push
sbb
push
call
sbbb
fldl
add
pop
pop
push
push
lods
loop
or
cmp
fiaddl
jae
jnp
lds
and
test
aam
dec
mov
xchg
divl
and
add
add
mov
mov
ljmp
mov
inc
add
hlt
fstpt
faddl
push
mov
or
add
lock
xchg
repz
hlt
sub
mov
test
call
add
enter
test
popa
adc
jbe
adc
and
rcll
pop
loopne
inc
add
scas
jno
fcompl
mov
add
mov
cmp
add
dec
inc
inc
and
mov
fdivr
and
testl
dec
xor
sub
pop
add
cld
xchg
mov
add
inc
cmp
adc
jg
cmp
add
inc
cmp
jb
or
loopne
adc
popa
add
mov
sub
rcrb
bound
jae
rcrb
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
cmp
in
je
cwtl
or
je
add
sbb
add
add
xor
or
add
dec
adc
mov
sub
cmp
sub
inc
sbb
add
in
dec
add
imulb
pop
pop
push
push
and
imul
cmpsb
add
ljmp
jne
sbb
je
sub
cmp
mov
jp
and
sbb
sbb
scas
inc
jne
leave
into
stc
ret
fcmovb
andl
nop
xor
je
push
add
jbe
rorb
add
cmpsb
sbb
dec
add
ret
test
enter
std
call
scas
sbb
cmpsb
add
xorl
or
add
add
inc
adc
movsb
push
loope
les
jne
mov
dec
cli
mov
add
add
repnz
sbb
and
add
sbb
pop
ss
push
add
inc
nop
subl
mov
sub
add
adc
xlat
stc
or
outsb
mov
pop
jne
mov
addr16
repz
push
dec
in
add
push
out
jg
adc
and
xor
faddp
push
jno
ja
pop
nop
mov
mov
loope
adc
push
clc
or
rcl
je
xor
adc
sbb
aas
jmp
mov
mov
xor
xor
adc
in
fld
cli
call
faddl
xor
adc
movsb
jnp
add
stc
push
enter
add
mov
shl
xor
or
xchg
adc
jo
enter
dec
push
shlb
xchg
mov
out
add
icebp
push
or
adc
sbb
push
mov
sub
add
push
and
ret
ret
lsl
scas
cmp
stc
cmp
jmp
add
dec
shrl
add
loopne
dec
cmp
inc
adc
lret
pop
and
cmc
popf
inc
je
cli
inc
and
pop
add
std
add
adc
add
je
cld
shlb
or
add
jnp
addr16
add
fistpl
dec
test
jle
add
and
pushf
pop
enter
add
mov
sub
xchg
mov
push
pop
jnp
add
jo
cmovo
add
sti
call
aad
pusha
pop
add
cmp
iret
loopne
shl
int3
jmp
cmc
lea
sti
and
sbb
or
jp
add
cmc
clc
pushf
cmp
fsubr
loopne
ret
pop
sbb
and
push
fxch
mov
idivl
xchg
add
xor
adc
rep
inc
push
add
add
mov
cmp
adc
fisubrl
jae
pop
sbb
mov
les
and
push
xchg
sub
inc
call
jb
scas
sbb
clc
call
and
pop
enter
xchg
sub
sbb
clc
lds
les
cmp
scas
iret
and
sbb
scas
adc
je
mov
movsl
or
adcl
lds
cltd
jns
pop
jp
scas
jg
inc
mov
ss
mov
sub
push
mov
add
push
sbb
push
add
int3
adc
aam
enter
mov
add
or
mov
out
and
inc
adc
subb
add
movsb
add
mov
lods
insl
inc
xchg
push
and
sub
cmpsl
subb
rolb
pop
ljmp
sub
ret
xor
mov
sub
and
dec
stos
or
inc
testl
jl
daa
add
loop
mov
mov
xor
shlb
mov
icebp
sbb
xor
addl
add
popf
xor
loopne
cltd
daa
add
pop
mov
pusha
cmp
jmp
popl
xchg
and
pop
sbb
pop
jmp
mov
adc
roll
ds
xchg
mov
jo
add
les
pop
cmp
fidivrs
enter
lods
xchg
mov
pop
leave
verr
inc
inc
test
pop
and
cmpsb
shll
in
sbbl
jp
mov
sub
insl
ret
inc
mov
sbb
adc
loopne
push
inc
jmp
clc
xor
nop
stc
add
xlat
in
add
dec
jl
add
dec
add
pop
inc
dec
adc
test
andb
push
fidivrl
cs
sti
rcrl
shl
mov
xchg
fadds
lock
add
add
addr16
dec
mov
push
or
fdivrl
jbe
xor
add
loope
ret
add
rorb
add
fs
int
add
and
shrb
sub
loope
add
outsb
pop
jl
cmp
aas
add
inc
add
and
clc
cmp
jle
test
sub
imul
fistl
hlt
sub
sbb
push
adc
xchg
push
xor
add
cli
jg
das
fdivrs
mov
sbb
insb
adc
lods
lcall
xchg
sbb
add
sub
push
jnp
ja
in
outsb
test
jbe
cli
xlat
and
std
pop
cmp
jge
lea
cmp
lret
andb
scas
sub
test
add
lea
cld
cmp
sbb
out
add
add
fnstcw
ret
sbb
add
popf
push
sti
mov
dec
add
push
outsl
push
imul
mov
jo
push
or
call
inc
mov
add
lret
xorb
loope
push
mov
call
shrl
or
cmp
lret
jl
repz
mov
and
imul
mov
adc
movd
inc
stos
jge
into
mov
test
add
mov
or
pop
lsl
lahf
scas
mov
scas
sarb
mov
adc
rcll
js
add
sub
xchg
icebp
push
add
nop
sbb
add
inc
xor
inc
sbb
adc
nop
add
cwtl
invd
imul
sub
scas
add
jp
mov
mov
popf
in
mov
fildl
sub
mov
push
rclb
mov
add
adc
or
inc
cld
jg
int
xor
xchg
jno
std
mov
scas
mov
inc
jns
pop
cmpsb
and
stc
cmp
add
mov
dec
call
ret
add
push
imulb
inc
mov
mov
mov
inc
jb
push
shrb
inc
mov
js
sub
sbb
mov
add
pop
es
cmp
xorl
pusha
lock
adc
dec
cwtl
stos
inc
mov
dec
rcl
add
add
add
adc
or
mov
rcrb
das
call
push
sub
push
adc
inc
add
mov
les
out
fdiv
in
add
cwtl
enter
inc
out
adc
fiadds
mov
loope
pop
ret
push
jns
addb
adc
aaa
ret
js
cld
insb
adc
iret
add
or
lods
inc
pop
pop
adc
add
adc
inc
cld
xchg
xor
sbb
add
mov
mov
add
add
mov
adc
mov
outsl
addr16
in
sbb
and
mov
testb
add
cmp
jnp
add
mov
mov
jno
loopne
data16
push
dec
rolb
sub
and
mov
mov
add
push
jo
cmp
or
add
mov
sub
push
pop
orl
ljmp
xchg
mov
jb
cs
adc
flds
pusha
mov
scas
and
mov
mov
inc
movsb
add
jle
fwait
sub
ret
or
inc
rcll
daa
orb
push
pop
cld
into
sbb
add
xor
aam
mov
add
and
aam
flds
je
add
in
cltd
test
icebp
roll
loopne
and
jl
mov
scas
cmp
add
lods
inc
les
inc
jno
add
inc
and
hlt
xchg
adc
pop
out
add
push
add
and
test
add
inc
add
or
js
dec
xchg
add
cs
and
xchg
nop
lds
inc
pop
rclb
adc
adc
xchg
xor
add
push
shl
add
nop
add
fcomps
push
add
ret
pop
pop
inc
mov
aad
or
xchg
int3
ljmp
in
mov
out
mov
xor
int
and
sahf
adc
je
mov
aas
and
cmp
fs
sub
inc
decb
nop
inc
andb
add
mov
xor
mov
add
xor
sbbb
push
testl
add
mov
mov
aam
adc
or
mov
add
mov
sub
fwait
mov
in
mov
hlt
mov
das
push
in
dec
cmpsl
shl
inc
cs
sbb
add
inc
push
push
pop
std
jl
mov
cli
add
mov
adc
or
mov
movsb
mov
xchg
clc
test
jg
dec
push
cmc
test
jno
add
stos
cld
jb
out
add
sub
adc
icebp
les
jae
mov
push
jg
add
and
enter
dec
aaa
dec
pop
clc
adc
cli
sub
xlat
mov
adc
push
add
pop
mov
sti
sub
jmp
fisttps
mov
xchg
aad
pop
xlat
jnp
int3
mov
pop
add
insb
fldl
enter
repnz
pop
jbe
xchg
out
cmpsl
xlat
into
xchg
push
loop
add
push
push
sub
data16
mov
adc
fisttps
into
mov
pop
inc
push
sbb
xor
int
sbb
sbb
lea
or
inc
cmp
repnz
loop
adc
adc
mov
cmp
add
insb
outsl
insl
mov
in
jb
add
and
leave
mov
test
lods
dec
out
add
mov
mov
aaa
fs
or
sbb
sti
daa
inc
insb
sahf
decl
add
mov
inc
or
pop
mov
pop
add
das
insb
int
or
dec
mov
movsb
roll
inc
fadd
popf
lret
mov
cltd
shl
add
xchg
adc
sahf
lret
or
push
mov
clc
sub
mov
fistpll
popa
add
pop
les
mov
mov
xchg
out
leave
or
mov
ds
inc
adc
inc
inc
cmp
pop
icebp
or
les
and
adc
mov
dec
loop
add
mov
in
sti
shlb
or
cmpxchg
repnz
shll
sub
mov
int3
les
popf
cmp
pusha
add
fistpl
cmpsl
into
sbb
call
push
cwtl
and
daa
outsb
ja
call
add
pop
leave
pop
mov
cmp
mov
inc
int
add
lods
icebp
dec
fldt
adc
inc
scas
jae
les
add
inc
fdivrl
and
inc
mov
pusha
pop
xchg
sbb
cmpsl
jb
or
sbbl
mov
and
leave
stc
fildll
add
imulb
push
and
add
cs
mov
in
stc
adc
or
jge
movsb
mov
mov
pop
mov
pushl
iret
mov
ljmp
jmp
add
fisubrl
sarb
stc
pop
mov
mov
aaa
das
jno
scas
dec
fisubs
pop
out
and
clc
out
pop
out
or
xor
aaa
lret
sbb
stc
add
call
dec
push
push
mov
fimuls
xchg
jnp
mov
and
inc
mov
and
movsb
push
add
or
flds
out
push
and
test
or
stc
and
mov
cmp
inc
fistpll
adc
shrl
jmp
pop
inc
test
sahf
mov
adc
stos
loop
aas
nop
mov
stos
sbb
xchg
add
pushf
push
push
cmpb
and
pop
jbe
add
or
xchg
shl
pop
fsubrl
add
les
loope
adc
push
mov
repnz
loopne
shlb
test
and
pop
test
ds
aas
xor
scas
outsb
lret
add
sarl
or
xor
call
add
push
add
negb
mov
xor
call
jb
dec
sti
xor
sbb
xor
push
pop
add
dec
outsl
jnp
out
xor
and
add
lods
pop
call
xchg
aam
nop
out
jge
add
sub
pop
mov
cmp
inc
ljmp
sub
movsl
idivb
scas
imul
pop
adc
jg
add
decl
sbb
scas
add
sub
add
insb
aas
hlt
inc
add
sbb
scas
lea
adc
lock
daa
in
inc
cmp
sbb
add
pmuludq
cmp
dec
mov
addb
dec
and
hlt
ret
add
jl
dec
adc
and
add
push
es
inc
out
add
call
aas
xorb
xchg
out
mov
enter
in
cs
and
mov
add
shll
pop
in
adc
or
jmp
mov
xor
int3
lods
pop
dec
mov
xlat
sub
fnstsw
das
jl
adc
mov
clc
inc
add
mov
bound
push
xor
incl
nop
sub
shl
pop
add
out
pop
push
cmp
ret
or
pop
shlb
and
data16
mov
lods
sub
and
mov
rolb
pop
out
arpl
rcr
mov
sub
or
pusha
jmp
xor
ret
mov
cmp
mov
sbb
add
daa
dec
pop
mov
sbb
push
mov
push
sub
pop
cmp
insl
adc
xor
aas
or
adc
hlt
push
sbb
andb
mov
push
xor
repz
cmp
call
fildl
and
lock
jmp
mov
xor
pop
cmp
adc
call
lret
lds
sbb
jmp
or
inc
ljmp
daa
adc
push
adc
and
mov
xor
sub
mov
andb
mov
repnz
pop
cwtl
stc
xchg
jp
and
psubb
adc
scas
jae
orb
sub
cmpsb
or
movsl
add
les
mov
jo,pt
insl
push
inc
mov
adc
cld
xchg
jo
lret
add
cwtl
subb
out
dec
or
sub
or
enter
sub
pusha
or
in
jae
mov
pop
mov
jp
push
pop
cld
sub
push
in
pop
push
inc
test
cld
shrl
mov
mov
xchg
les
dec
mov
inc
and
or
in
pop
insl
cmp
ret
xor
or
pop
jecxz
mov
adcl
fists
in
cli
pop
add
push
xor
data16
test
sub
dec
in
les
jo
into
test
jl
out
cld
in
loopne
sbb
mov
mov
mov
popa
inc
loopne
loopne
push
add
rorl
jnp
hlt
mov
addb
lahf
loop
mov
outsl
inc
jbe
jno
es
ds
add
mov
xchg
mov
mov
mov
gs
or
cmp
out
pusha
fisubs
sbb
sahf
dec
and
clc
pop
cmp
jmp
add
xchg
cli
mov
add
test
lock
cmp
add
push
test
dec
lock
xchg
inc
notl
sub
or
mov
loop
mov
jnp
jle
add
lods
xor
testb
icebp
cld
or
mov
or
shl
pop
inc
cld
mov
or
push
cltd
mov
daa
xchg
jecxz
cld
dec
add
add
cmpsb
aam
push
icebp
adc
add
or
pop
cltd
pop
jle
mov
repnz
rcrb
pushf
lcall
xorb
sahf
xor
das
lock
pop
lahf
roll
sarl
mov
test
ret
push
adc
sub
not
push
and
sub
shrl
into
mov
inc
loopne
rorl
dec
cmp
lods
ds
jnp
inc
rclb
or
or
cmp
sub
xor
nop
and
and
dec
repz
or
dec
aam
repnz
add
adc
rcrb
inc
hlt
enter
pop
shll
cli
push
outsl
pusha
movsl
mov
out
pop
stos
and
add
add
hlt
xor
add
add
bound
xchg
or
mov
adc
xlat
adc
pop
push
push
movsl
jecxz
xor
dec
push
adc
and
inc
add
xchg
mov
lock
ljmp
mov
jo
add
mov
xor
leave
addl
cmp
inc
push
add
pop
add
mov
add
mov
add
inc
cmp
pop
clc
das
adcb
mov
cli
xchg
add
sbb
hlt
xor
loopne
push
enter
lret
add
ss
dec
sbb
add
in
cmp
cmpb
mov
jo
adc
or
mov
into
inc
out
add
sbb
pop
fsubs
xor
add
inc
sub
add
add
push
in
pop
add
xor
inc
dec
sete
xor
add
or
and
pop
addb
loop
add
jecxz
out
mov
nop
xor
xor
jo
xchg
or
sbb
outsl
add
push
in
out
add
xor
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
xor
push
mov
mov
push
call
cli
cmp
push
and
sbb
icebp
mov
inc
sbb
mov
outsl
enter
nop
sub
and
pop
inc
xor
add
stc
cmp
mov
pop
add
enter
dec
and
and
push
clc
jb
pop
or
or
cwtl
pop
stos
testb
in
and
mov
pusha
cs
xchg
dec
ret
ss
stc
dec
mov
add
call
movzwl
sub
nop
js
jl
pop
add
repz
and
test
negb
bound
hlt
jb
ds
xor
rcll
inc
pushf
jp
mov
mov
enter
push
test
test
std
jnp
add
jge
add
call
add
daa
or
outsl
mov
fstpl
xchg
out
sub
pusha
pop
lock
inc
add
jb
sbb
faddl
dec
test
add
movsb
pop
and
push
add
test
fmul
rolb
mov
in
jp
add
xor
push
sbb
inc
fiadds
xorb
aas
les
jb
fdivrs
fmull
add
out
or
loopne
int
shlb
push
pop
fbstp
aas
negb
pop
bound
mov
repz
or
or
arpl
xchg
mov
clc
xchg
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
sbb
aas
enter
xor
and
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
pop
add
sbb
fadds
jns
lret
cld
enter
sbb
add
fldl
mov
aas
xorb
mov
push
or
roll
shll
dec
and
add
in
add
adc
jp
pop
je
adc
test
mov
add
adc
ljmp
loopne
add
add
dec
jne
idivb
sbb
icebp
xor
rcl
es
add
and
xor
mov
das
xor
aam
add
jo
scas
add
pop
pop
sub
pop
xor
add
jle
in
mov
cmp
ret
mov
add
or
jle
add
int3
rolb
xadd
iret
push
or
xchg
nop
lret
orb
add
rcr
or
neg
negl
inc
sbb
add
rcr
sub
jmp
push
add
inc
filds
pop
add
rcrb
cmp
add
aam
aad
rclb
adcb
js
in
call
jo
add
rcl
rorb
loopne
lock
xor
shl
repnz
xor
push
ss
cmp
add
add
shlb
cmp
adc
cmp
rolb
cmp
cmp
add
jo
add
sar
cmp
sbb
sub
jmp
pop
sub
out
scas
nopl
pxor
sub
arpl
js
in
and
lcall
test
and
xor
or
jecxz
and
cmp
shlb
and
xlat
mov
xlat
mov
mov
ja
add
cmpsb
xchg
andl
push
insb
shrl
scas
add
outsl
sbbb
inc
scas
shrl
sbb
stos
add
test
push
inc
mov
rclb
jp
aas
mov
push
jg
mov
cmpl
jne
cmp
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
adc
nop
add
rclb
inc
je
jbe
js
sbb
sbb
add
xchg
adcl
pop
inc
jo
in
roll
sbbl
loopne
pop
mov
pop
pop
inc
cwtl
fisttps
lahf
mov
sbb
dec
xchg
add
dec
out
dec
cmp
or
or
rolb
inc
inc
xchg
addr16
addb
cmp
data16
cmp
test
jl
push
mov
adc
cld
pushf
mov
pop
rcrl
popf
mov
xor
ret
inc
and
and
push
sbb
cpuid
sub
loopne
sbb
add
fcompl
pop
outsb
jecxz
andb
xor
lods
push
ds
out
add
jae
call
mov
pop
fnstcw
jbe
in
xor
out
ret
and
and
cwtl
mov
push
add
in
lock
adc
add
add
push
mov
cmp
sub
arpl
xorl
push
add
shrd
jmp
sub
jmp
push
pop
out
pusha
rclb
add
cld
mov
add
pop
dec
or
lods
xor
ret
orb
lcall
add
dec
or
xlat
lcall
add
pop
sbb
pop
pop
adc
adc
pop
lods
add
jle
and
mov
outsl
enter
cld
dec
bnd
aad
ror
push
lods
cmp
cmpsb
jmp
add
call
inc
leave
clc
or
add
jb
xchg
outsl
pop
inc
ljmp
test
cld
jbe
adc
cmp
je
shrb
ja
add
push
lea
add
jmp
mov
xchg
add
jp
mov
pop
scas
js
add
add
push
and
addr16
push
mov
shr
cmp
add
mov
mov
sub
or
subb
push
clc
aad
add
lcall
add
ljmp
mov
insb
add
inc
jno
sub
fiadds
add
not
and
pop
daa
add
or
pop
add
ret
inc
incl
ret
jb
sbb
clc
cmp
rol
jne
jg
add
dec
or
bnd
dec
rep
xchg
mov
into
roll
adc
addl
gs
cmp
push
mov
stc
iret
fsubp
icebp
push
push
and
rorl
inc
adc
lret
lock
add
scas
and
and
and
xchg
jno
sub
add
add
mov
fwait
enter
xor
addb
cmp
cmp
push
adc
loopne
cmp
dec
mov
add
add
push
xchg
cli
fisubs
sbb
movsl
stc
or
sub
xchg
mov
sar
pop
call
sbb
movsb
ret
addr16
adc
ljmp
and
inc
inc
popa
adc
cmp
xchg
mov
xor
mov
and
add
xor
mov
ja
lods
inc
mov
sbb
push
adc
add
leave
or
nop
testl
push
repz
mov
outsb
sub
dec
lock
or
pop
leave
loope
adc
add
adc
cmp
add
adc
jle
lock
xchg
mov
mov
sub
add
pop
fnstenv
xchg
nop
sub
sbb
aas
jno
addb
and
enter
or
push
sbb
and
lret
or
pop
icebp
shll
cmp
add
pop
push
or
stos
enter
orb
xor
sbb
rcl
repnz
out
xchg
pushf
sbb
or
or
add
out
idivl
jmp
sub
les
stos
and
inc
aad
xor
and
pop
sub
ret
dec
cld
icebp
or
mov
test
cld
xchg
loopne
popf
sahf
push
lret
mov
or
push
or
pop
je
hlt
add
inc
pop
mov
rclb
test
add
fadd
and
leave
je
jl
cs
ljmp
int
pop
dec
mov
xor
xor
psubw
daa
call
add
or
add
dec
sbb
push
dec
lahf
mov
data16
and
jmp
inc
push
mov
cltd
add
imul
cmp
andb
in
push
add
jae
mov
add
add
mov
in
int3
inc
lds
pop
test
pop
lea
mov
mov
adc
adcl
add
push
push
add
adc
or
lret
adc
sub
adc
adcb
push
mov
je
add
push
pop
mov
das
pop
mov
inc
mov
dec
subb
or
in
pop
add
mov
adc
lret
add
movsb
adc
pop
sbb
add
enter
jae
jns
shlb
sub
rcl
in
push
xchg
add
jbe
test
clc
jle
mov
push
push
mov
sbb
pop
add
jb
loop
std
in
pop
lods
adcl
enter
and
ss
push
insl
cmc
and
rcll
hlt
in
repnz
data16
test
mov
xchg
push
ljmp
sub
fwait
jnp
lsl
sbb
jne
push
int3
sub
add
dec
xor
repz
inc
jecxz
jecxz
hlt
mov
jmp
xor
add
nop
adc
sub
xchg
sbb
rolb
shll
inc
add
nop
jl
mov
cld
sbb
sar
rol
pop
jl
add
dec
gs
hlt
cld
lret
fisttps
test
inc
dec
jmp
mov
push
imul
hlt
fcompl
xchg
mov
or
and
inc
rcrb
adc
jl
add
dec
cmp
xchg
push
inc
fs
jo
aas
shr
addb
mov
js
jne
sbb
mov
add
dec
loopne
out
xchg
add
mov
rclb
fwait
aam
and
shl
inc
adc
cmp
fistps
movsl
xor
shrl
fcoms
rcrb
mov
nop
lods
jns
add
mov
lahf
add
adc
or
pop
aad
inc
popf
std
insb
sbb
add
push
out
add
pushl
fs
push
push
mov
add
or
mov
cmpl
or
out
sbb
xor
lahf
inc
xchg
adc
mov
loop
fs
add
mov
add
add
sbb
shll
inc
mov
imul
jb
push
or
das
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
and
xor
mov
pop
cltd
sub
aam
or
pop
rolb
push
shl
cmp
divb
and
test
sbb
pop
movsb
in
jmp
addl
loope
std
sbb
jbe
inc
and
mov
add
push
push
icebp
mov
cmp
sti
pop
jmp
xchg
into
push
mov
lock
adc
cmp
aam
call
rclb
int
mov
add
es
stos
dec
push
dec
fsubr
arpl
push
sub
rorl
pusha
mov
add
aaa
shll
dec
das
fstpl
jns
adc
pop
mov
cwtl
push
arpl
imul
pop
inc
mov
dec
loope
sub
and
inc
inc
add
scas
push
push
cli
add
fdivs
push
push
jge
adc
add
mov
pop
inc
inc
lock
imul
sub
js
pop
jb
push
decl
lcall
pop
pop
dec
jns
outsl
in
call
adc
add
lock
test
loope
adc
push
jge
es
rclb
ljmp
movsl
cmp
add
dec
pop
leave
repz
mov
aad
or
push
inc
into
inc
mov
repz
mov
fs
pop
jo
rolb
dec
push
in
shrb
cld
enter
out
jb
ret
call
mov
movw
add
push
inc
or
adc
or
lods
cs
adc
add
push
sub
xor
sub
sbb
sbb
or
mov
mov
add
imul
verr
outsb
sub
push
les
xchg
sbb
addb
lea
adc
add
bound
ret
xchg
xchg
mov
jns
add
and
test
lods
hlt
inc
movsl
push
ds
ficomps
xor
jns
sbb
dec
test
push
aam
outsl
mov
and
xchg
dec
iret
cli
cmp
daa
add
inc
mov
mov
mov
arpl
cmp
xor
inc
cmp
adc
jl
or
pop
or
add
xchg
movb
or
adc
dec
inc
arpl
push
pop
mov
add
sti
ret
je
or
jmp
adc
repnz
dec
xorb
pop
jne
out
and
push
add
repz
inc
outsl
xor
cs
add
aas
loopne
fdiv
inc
pop
add
and
pop
sub
or
scas
jne
lret
add
ds
push
in
push
lds
mov
jl
fsts
in
or
sub
inc
jno
sub
sarl
push
js
adc
add
outsb
mov
or
jb
sbb
repnz
cmp
jne
inc
pop
add
push
jmp
add
dec
and
mov
xor
adc
loopne
sub
gs
add
mov
add
mov
jb
pop
insl
pop
std
stos
mov
jo
mov
xor
aas
arpl
xlat
imulb
rclb
cli
xchg
lea
pop
mov
mov
dec
or
jge
mov
add
lds
and
jo
mov
adcb
sub
sub
cmp
sbb
pushf
lret
repz
sub
jl
mov
or
jmp
cmpsb
hlt
call
jns
mov
fistpl
inc
rcr
add
je
rcrl
or
test
cld
enter
lret
add
push
push
js
add
or
adc
add
std
repz
cld
mov
movsb
sbb
mov
xorl
inc
add
test
cmc
and
cli
clc
add
pusha
add
mov
mov
fistpl
out
mov
lea
addl
scas
sbb
sbb
cmp
mov
push
add
imul
add
sub
out
cmp
pop
jmp
jb
mov
sub
cmp
movl
inc
ds
mov
jne
push
cwtl
xchg
mov
add
push
out
ja
sbb
test
jmp
inc
adc
nop
pop
fldl
xor
sbb
test
dec
adc
push
mov
rorb
mov
pop
pop
orb
adcb
xor
dec
inc
dec
scas
dec
or
xchg
ja
adc
xorl
pop
leave
sbb
flds
jle
and
inc
add
ret
fistps
inc
xor
xlat
loop
inc
pop
sub
adc
cmp
cmp
cltd
inc
push
mov
mull
ret
adc
and
enter
loopne
add
add
mov
loop
faddl
sbb
sbb
add
xchg
xchg
addr16
or
xchg
pushl
push
push
cmp
pop
dec
jge
sub
mov
cmp
jb
add
dec
xchg
fnsave
add
cmpsb
jge
adc
push
loope
dec
mov
sbb
ljmp
xor
rolb
pop
ret
test
cmp
hlt
inc
testb
cmp
roll
mov
or
idivb
and
cmp
xchg
add
or
rcl
push
jmp
inc
roll
out
fadds
push
or
fstpl
dec
add
ret
sub
pop
mov
mov
add
test
cld
rcl
je
add
dec
mov
cmp
mov
add
pop
pop
xor
add
rcll
cmp
inc
sbb
out
fsubrl
adc
inc
jne
aas
mov
xchg
add
adc
cmc
les
testb
stc
adc
repnz
adc
jmp
xor
add
sti
rorb
xor
xchg
mov
gs
notl
rclb
pop
cmp
mov
add
popa
xorl
or
xor
mov
add
mov
outsl
repnz
pushf
ds
adc
xchg
sbbb
rolb
es
cmpsl
fisttps
and
inc
adc
mov
sbb
pop
add
sub
rcr
jb
dec
adc
adc
ja
or
lods
sub
sbb
pop
repz
frstor
pop
inc
mov
add
dec
scas
xor
add
dec
rcr
add
mov
or
push
cld
pop
shll
out
cmp
andb
pop
add
mov
out
or
adc
jmp
push
add
add
push
inc
or
sbb
inc
or
ljmp
sub
ds
add
test
lock
sbb
add
out
sub
fwait
dec
xor
in
sub
mov
add
inc
mov
add
les
xchg
mov
add
inc
mov
sbb
fisubs
ja
add
sbb
and
sbb
mov
and
lret
inc
lock
cwtl
add
orb
mov
outsl
call
sbb
dec
mov
mov
or
cs
repnz
push
movb
sub
dec
jmp
andb
adc
test
rol
mov
cli
sbbb
getsec
test
notl
mov
adc
jne
jns
push
rclb
xchg
sbb
adc
push
push
rclb
mov
push
inc
stos
rolb
mov
sahf
push
out
cld
call
cmp
inc
jg
or
push
addb
add
push
pusha
data16
dec
add
daa
dec
cmp
sub
mov
add
inc
jnp
push
sub
push
sub
test
xchg
mov
or
push
aam
push
xchg
cmp
rolb
push
jg
add
sub
push
lock
adc
rcrl
xchg
xor
cmc
and
or
cmp
lods
nop
in
add
pop
dec
push
xor
sbb
pop
sbb
inc
movsb
xchg
pop
mov
sub
push
cs
mov
insb
imul
ret
cltd
xor
stos
call
xchg
dec
push
mov
xchg
or
xchg
rcll
and
dec
inc
std
and
add
push
aam
adc
inc
lret
add
stos
cwtl
fnstcw
add
add
or
add
cltd
add
fisubrs
mov
cmpsb
mov
adc
es
add
stc
ds
call
test
lea
xor
call
rolb
sbb
mov
inc
dec
sub
testb
inc
add
push
dec
out
xchg
lea
mov
gs
mov
cmp
xor
push
inc
jo
scas
pop
nop
cli
pop
aas
lock
or
mov
in
jle
mov
adc
ds
mov
cmp
push
add
sub
test
lahf
hlt
or
add
push
cs
das
pop
jbe
jo
push
add
xor
add
add
clc
pop
jg
push
mov
jbe
pusha
sub
pop
and
add
push
mov
xor
lret
xchg
add
jge
mov
das
push
adc
or
inc
or
push
push
gs
xchg
out
add
fs
add
mov
pop
push
add
xchg
pop
adc
clc
or
divl
add
mov
jae
aam
or
lahf
inc
xchg
add
mov
pop
mov
or
hlt
cmp
out
aad
outsl
xor
or
xchg
ljmp
fistpl
fsubs
cmp
add
enter
icebp
insb
mov
fadds
add
jge
push
jg
mov
add
call
enter
loop
adc
getsec
pop
dec
dec
and
mov
fsubs
lea
rolb
stos
and
xchg
push
adc
scas
jne
cwtl
and
jo
fdivrs
add
fs
add
mov
add
rcr
sbb
aas
add
loope
xor
inc
fdivs
pop
mov
jle
jo
pop
add
dec
xor
push
or
pop
das
es
sbb
push
xor
mov
cs
hlt
in
adc
pop
ds
add
outsl
cltd
and
jae
cli
add
jl
orb
pop
es
leave
lret
sub
inc
jo
and
mov
add
in
mov
imul
call
dec
daa
add
fisubs
mov
jge
fs
push
shrl
pop
pop
test
push
pop
push
jp
and
test
inc
sub
inc
jns
or
mov
bound
nop
add
mov
xor
in
and
and
adc
pusha
add
add
xor
sub
sub
sbb
add
adc
mov
sbb
add
add
adc
add
insl
mov
xor
orb
out
mov
movb
cmpb
add
or
add
sub
add
cli
add
push
push
mov
add
add
test
or
xor
add
pop
push
xor
sub
add
cmpsb
push
mov
adc
js
cld
inc
push
push
pop
fucom
scas
sbb
cli
sub
push
add
and
pusha
pmuludq
mov
add
sarb
sbbb
dec
scas
add
call
add
cld
lea
add
inc
das
lds
xorb
rcll
fnstcw
add
popa
or
add
add
push
inc
push
stos
ret
xor
jmp
cltd
sub
pop
int
sbb
add
into
mov
fadd
push
push
inc
mov
push
add
out
fimuls
leave
add
pop
jecxz
add
sbb
fcomps
fwait
mov
in
enter
sub
mov
push
inc
dec
xchg
dec
inc
push
pop
mov
lock
xchg
add
xor
push
fstpt
ds
gs
adc
clc
shl
add
ljmp
add
push
pop
sbb
jle
xchg
test
jo
push
nop
addb
and
cmp
sub
popa
inc
movsl
mov
sub
pop
jno
inc
xchg
add
xchg
movsl
mov
mov
dec
add
add
iret
int3
xchg
ret
pop
add
adcl
int
jge
mov
repnz
call
repz
jnp
andb
ds
push
add
insl
orl
adc
popf
adc
cmpsb
adc
xchg
lcall
and
aas
shlb
and
mov
cmovb
add
repnz
add
std
in
ret
pop
mov
add
xchg
xor
jns
pop
sarl
sbb
add
rcrb
add
test
fldcw
push
shlb
call
push
iret
add
inc
sub
add
mov
rol
rorb
fadds
xchg
inc
dec
stos
jp
add
je
flds
add
cld
int3
test
pop
es
cmp
mov
in
mov
andl
hlt
test
jp
add
aas
daa
cmp
mov
mov
mov
add
push
mov
rcrb
enter
xorl
subb
cmp
add
adc
or
sub
add
dec
mov
add
add
scas
lds
ds
add
xor
sub
sub
mov
add
repz
push
cmp
add
add
sbb
sbb
push
loopew
sub
add
xor
add
stos
inc
rcr
in
push
add
xchg
push
mov
xor
dec
cmpsb
push
std
add
add
daa
or
adc
loope
sub
or
mov
aad
xchg
sbb
cmp
jnp
xor
loope
xor
pop
cwtl
pop
icebp
int
push
decb
lcall
in
add
gs
cmp
outsb
jl
adc
add
test
add
sub
inc
cli
add
xor
fs
and
push
sbb
fwait
add
jecxz
sbb
push
add
push
dec
add
in
arpl
lds
mov
dec
add
mov
aas
ret
sbb
or
xor
aaa
lock
arpl
jb
imul
push
stos
inc
insl
add
sahf
add
ret
and
stos
xor
mov
icebp
add
movsl
ret
sub
test
mov
pusha
xchg
insb
xor
jne
push
data16
sarb
aam
push
pop
into
test
mov
out
add
lret
add
adc
push
stos
sub
icebp
add
dec
pop
in
xor
pop
les
jecxz
jns
ss
add
pop
mov
or
add
inc
or
lds
push
ret
add
cltd
fnstsw
sub
js
pusha
adc
add
push
pop
fsubrs
xchg
mov
push
ds
cmp
push
sub
jecxz
jo
subl
nop
out
sbb
mov
or
fs
je
ret
adc
xor
jb
sub
sbb
cmp
or
fs
rolb
test
leave
cmp
lods
pop
adcb
jmp
adcl
movsb
push
and
sub
clc
pop
lcall
in
scas
add
test
repnz
repnz
imul
stos
mov
nop
je
cmpsl
sbb
add
cmp
or
or
clc
dec
int
mov
add
sbb
hlt
scas
xorb
adc
outsl
andb
push
test
mov
push
lock
inc
fildll
dec
ja
cmp
aas
xor
pushf
and
lds
call
gs
sbb
sti
lcall
in
addr16
pop
shlb
lea
xchg
adc
adc
add
cmp
xor
inc
test
mov
mov
add
xchg
stc
sbb
xor
mov
cmp
add
and
movsl
cld
add
xor
or
enter
scas
xchg
and
loopne
jmp
adc
or
xchg
stos
scas
adc
ret
jns
repnz
sub
inc
cmc
or
icebp
push
sbb
jle
and
loop
sbb
sub
mov
add
dec
xor
dec
mov
add
sub
add
pop
hlt
pop
pop
xchg
add
lret
clc
lcall
add
mov
pushf
ret
and
sub
or
or
lea
aam
mov
pop
fstl
and
jno
fisttpl
cmc
push
mov
cwtl
add
lret
mov
add
stos
xchg
iret
test
popl
int
or
add
les
dec
fistl
cmp
mov
push
jg
call
and
mov
stc
nop
mov
inc
xor
add
inc
add
xor
add
xlat
mov
aas
cld
mov
or
lods
fisubrl
ror
add
push
not
movsl
cmpsl
sbb
add
test
fists
cmp
pop
add
cmpb
and
xor
sarb
dec
imul
iret
inc
shlb
jmp
pop
add
xor
sub
inc
sbb
add
int3
and
dec
out
or
add
mov
subl
sbb
push
das
xchg
pop
movsb
rorb
out
setno
and
xor
add
push
loope
and
or
test
add
and
dec
lods
sti
cmpxchg
scas
dec
inc
ficoml
shrb
mov
sahf
test
jns
mov
or
cmp
fdivrs
lea
add
test
into
sbb
mov
push
inc
add
add
mov
call
cmp
lock
jne
cwtl
daa
out
add
xchg
lahf
cld
movsb
adc
mov
sarb
xorb
loop
dec
ds
repnz
and
addr16
shlb
and
mov
mov
div
add
xchg
rcrb
cmp
dec
or
mov
imul
lock
add
lock
je
adc
mov
xchg
les
jl
dec
add
sti
pop
sub
dec
movl
xor
sbbb
loope
lret
pop
das
xchg
sahf
adc
jle
aaa
mov
call
cmp
cmp
js
in
clc
or
cmp
dec
mov
or
scas
add
mov
je
pusha
adc
sbb
das
add
mov
lret
push
add
mov
and
gs
sahf
hlt
xor
cmp
lahf
push
adc
call
add
repnz
add
ja
cmpsl
aad
inc
jg
sub
aas
mov
push
add
or
int
inc
pop
xchg
out
adc
ret
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
gs
dec
mov
enter
data16
pop
leave
mov
daa
iret
add
sub
add
pushf
cmp
add
cmp
sbb
pop
cmp
das
dec
mov
fdivs
movl
cmp
pop
cmpsl
fcoms
xchg
jecxz
xchg
mov
add
mov
pop
add
inc
jge
pop
movsb
pop
push
sub
push
sbb
jns
push
enter
inc
dec
jno
xchg
fs
jge,pn
fidivl
out
les
add
sbb
mov
fbld
push
pusha
sub
cmp
jno
add
jne
xchg
add
push
jns
or
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
add
lock
loope
scas
add
xchg
sub
add
sub
mov
pushf
hlt
mov
add
fildll
aas
lcall
inc
inc
mov
std
lret
push
pop
sbb
mov
rcrb
popf
mov
in
sbb
cmp
les
push
test
sub
jb
inc
dec
or
lret
pop
xor
jo
pop
std
add
popf
or
adc
mov
lods
sub
add
scas
jecxz
imulb
mov
dec
xor
cwtl
adc
or
dec
sbb
jne
stos
movsb
adc
mov
and
stos
inc
repnz
push
add
push
fucom
inc
fdivrl
xchg
into
sbbb
les
out
mov
add
lea
mov
repnz
mov
adc
push
out
xchg
inc
daa
push
inc
push
xchg
jne
add
mov
je
add
adc
imul
add
inc
push
aad
mov
fiaddl
add
xor
imul
lods
fisttpl
test
xchg
mov
out
cmc
cwtl
hlt
jne
or
std
push
add
dec
push
push
ret
jmp
and
jae
adc
mov
sub
push
or
and
cld
rcll
mov
in
mov
and
ljmp
xor
or
test
and
xor
sub
inc
sbb
push
cltd
jl
add
sub
adc
movsb
push
jns
jge
je
add
neg
add
pop
and
out
or
xorl
add
jne
incl
jle
mov
aad
add
loopne
bound
call
and
jmp
roll
repnz
jnp
or
in
adc
out
pop
sub
addb
ljmp
js
sar
cli
add
insb
xlat
cmovg
cmpb
xor
mov
je
bound
push
pusha
push
sbb
rol
jnp
or
cmove
add
and
jmp
inc
sbb
dec
jne
addl
jg
pop
sub
sbb
aas
aaa
pop
sbb
and
cltd
in
pop
test
add
dec
es
scas
sub
loopne
cwtl
sbb
mov
add
and
cwtl
push
add
pop
jp
mov
pop
push
rolb
ss
add
jle
ret
sbb
and
inc
dec
cmpsb
out
push
add
sbb
push
and
add
inc
jo
mov
xor
cmp
pop
je
add
xor
cmp
loop
add
idivb
add
sbb
add
movsl
inc
lea
add
ret
sti
mov
ja
add
or
mov
xlat
movl
mov
add
xchg
mov
add
push
call
prefetch
pusha
leave
mov
or
add
push
sbb
push
mov
dec
or
jbe
sub
ret
js
xor
pop
inc
lret
mov
sbb
dec
mov
sahf
pop
jae
jb
cmp
mov
mov
xchg
mov
dec
inc
subb
lret
adc
xchg
inc
push
jo
aaa
push
jle
shll
add
jl
cmc
jp
insl
clc
dec
pop
pusha
add
icebp
shlb
sub
mov
xchg
mov
or
dec
pop
pushf
loop
sbb
decb
dec
add
inc
jb
out
and
nop
pop
cmc
decb
mov
stos
jo
add
dec
sbb
pop
mov
setno
pop
xlat
add
stos
cmp
testl
mov
pop
add
lret
adc
daa
add
and
in
fisubrl
push
jo
add
inc
ljmp
ret
movb
cmp
push
add
aaa
out
sub
les
pop
mov
xchg
push
xor
inc
add
in
or
sbb
cli
jns
xchg
add
push
movsl
cmp
xchg
mov
add
nop
push
dec
ljmp
mov
inc
insl
ja,pn
bound
pusha
fistps
adc
arpl
jge
push
jbe
outsb
pusha
addr16
sbb
push
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
or
inc
push
popa
add
jge
jl
inc
nop
add
outsb
loope
addr16
clc
stc
push
jo
inc
pop
sbb
pop
outsl
insb
andb
pusha
ror
jae
jge
pop
inc
mov
and
inc
adc
xorb
push
fwait
or
jno
jp
out
fimuls
adc
arpl
push
insl
ja
add
mov
fs
add
xchg
or
jbe
sbb
mov
ret
je
loopne
outsb
lods
sbb
icebp
dec
push
jbe
fs
jg
mov
or
push
jae,pn
add
inc
outsl
ljmp
sbb
push
xchg
imul
arpl
inc
jno
je
jns
pop
addr16
popa
andb
xchg
je
sysret
mov
dec
sahf
loop
outsb
imul
sarl
sahf
inc
decb
add
push
push
imul
sti
and
xchg
pusha
clc
lahf
add
push
push
xor
xchg
sbb
inc
adc
adc
add
jbe
mov
push
mov
insl
data16
jp
lock
call
xor
outsl
sub
loopne
push
push
ljmp
adc
pusha
movsl
xor
inc
ja
dec
arpl
mov
je
cmp
imul
lret
insl
jnp
add
fcoml
or
loopne
add
mov
mov
les
pop
movsb
add
test
inc
cmpsb
xchg
cltd
add
sub
add
dec
sub
or
pop
push
mov
inc
push
cmp
adc
cmp
sub
add
rolb
push
cmp
ret
inc
pop
subb
and
cmpsl
sbb
lcall
popa
divl
sbb
xor
xchg
lods
loopne
pop
jecxz
sbb
push
inc
jns
sbb
cmp
sti
loopne
adc
jl
and
fldl
xchg
hlt
mov
or
adc
js
pop
cmpb
sbb
sub
inc
gs
into
dec
xorl
and
inc
inc
add
xor
adc
das
es
rorl
call
add
push
sbb
and
inc
push
adc
xor
xor
sbb
add
shrb
add
test
mov
in
push
adc
icebp
in
out
or
pop
push
es
mov
sarl
add
pop
ret
push
add
popf
pop
xchg
cmp
repnz
mov
pop
or
push
subl
sarb
mov
sub
mov
pop
cld
mov
xor
cmp
jne
mov
add
jmp
test
pop
clc
sbb
xor
xor
in
push
movsl
stos
mov
xchg
scas
add
enter
ljmp
push
add
das
test
fildl
cld
lock
add
nop
enter
lea
lock
push
mov
mov
decb
insb
ds
mov
andl
int3
add
fisttpl
je
pop
mov
pop
mov
jbe
filds
por
add
test
aaa
push
mov
pop
cmp
stc
jmp
push
add
mov
fldcw
push
push
inc
dec
addr16
add
js
mov
fcoms
lahf
scas
pop
mov
mov
iret
inc
les
ret
int
cmp
inc
adc
add
pop
jg
les
test
xchg
les
jbe
aaa
xor
hlt
push
add
mov
jg
sbb
cmp
rolb
push
push
add
out
and
adc
add
repz
sub
add
in
das
mov
sbb
out
add
movb
fisubrs
mov
cltd
push
xor
jle
add
adc
pop
add
mov
mov
movsl
add
aas
cmc
dec
jl
add
jp
inc
add
and
pop
push
jo
dec
dec
pop
add
mov
fcoms
cmp
push
sbbb
add
add
dec
jmp
mov
fisubrl
jmp
pop
add
cmp
adc
ret
sub
adc
add
adc
mov
add
jmp
xchg
mov
add
je
add
das
push
dec
pop
jmp
jp
add
mov
stos
xchg
sbb
or
scas
into
pop
push
rcll
add
scas
push
or
mov
in
fadds
or
mov
rolb
dec
cmp
or
imul
mov
sbb
add
and
pop
addb
xor
add
incb
mov
imul
jae
add
jecxz
add
fsubr
push
add
and
pop
nop
ret
daa
xchg
jmp
inc
dec
sbb
cmc
sarl
fstpt
mov
jmp
outsb
add
jb
loopne
add
test
scas
adc
dec
xchg
add
cmp
lahf
daa
push
pop
ja
mov
jmp
icebp
bound
fldenv
and
add
cli
into
and
mov
jbe
mov
add
cmpsl
push
and
out
xchg
inc
inc
jmp
or
add
or
lret
and
add
or
add
or
xor
jmp
cltd
push
add
xchg
subb
push
jne
sub
and
ret
fst
mov
pop
cmpb
sbb
loopne
inc
add
xchg
lods
cmc
cmp
shll
push
ret
jg
add
test
testl
stos
shll
mov
addr16
adc
adc
pop
pop
bound
inc
cwtl
or
push
xchg
cli
cmpsb
in
hlt
xor
sbb
cwtl
test
adc
xchg
adc
adc
sub
aas
js
and
test
rorb
pop
lds
xlat
mov
dec
sub
rolb
jge
icebp
jl
loopne
cwtl
pusha
das
andb
outsb
add
sti
cmp
push
fcomi
scas
out
inc
or
subb
add
aad
push
pop
add
dec
loope
jnp
add
xchg
mov
lock
sub
or
cmp
add
movl
sbb
or
ret
pop
lret
leave
sbb
sbb
sbb
cmp
push
adc
add
jne
lods
lahf
hlt
mov
push
pop
inc
inc
or
lret
xchg
sbb
inc
scas
add
mov
call
mov
cmp
jle
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
add
loop
fs
and
jnp
jns
adc
and
add
insb
pop
fsubrl
xchg
adc
dec
push
pop
cli
mov
pop
jle
or
pop
jmp
loop
xlat
nop
jno
fistl
pop
inc
push
add
or
repnz
in
ds
mov
push
xor
jmp
repz
rolb
call
cmp
inc
jae
mov
sti
neg
pop
sub
pusha
inc
inc
mov
rorb
jmp
push
push
sub
test
ljmp
dec
js
mov
cmpb
and
rorl
add
add
in
add
cs
add
out
jmp
out
inc
jne
add
add
jb
xorl
nop
add
cld
and
int3
setb
add
ljmp
cmp
aaa
mov
in
lea
mov
push
cmp
sbb
push
sarl
add
pop
mov
xor
cld
add
mov
add
mov
jb
fadds
repz
mov
cmp
adc
ds
dec
add
aaa
xchg
loopne
add
cmp
shlb
enter
dec
mov
out
push
scas
stos
ffreep
jle
call
aam
cmpb
shll
add
add
aaa
adc
out
adc
and
cvttps2pi
add
cli
or
xchg
mov
rcrb
addl
loopne
iret
mov
in
data16
push
sbb
cmp
sbb
adc
add
sbb
fimuls
clc
jge
add
rolb
add
loopne
jle
out
lods
fadds
add
add
cmc
add
xlat
iret
test
mov
inc
inc
shr
and
mov
fstl
push
mov
sti
lret
jne
rorb
jg
xchg
and
add
adc
dec
ficoms
push
adc
or
push
jmp
xchg
or
mov
out
push
test
add
dec
mov
addb
inc
cltd
sbb
or
rorl
adc
mov
insb
fadds
xchg
adc
clc
inc
sbb
scas
add
dec
inc
push
lret
mov
jno
and
mov
aaa
mov
sarl
testl
adc
icebp
jp
jbe
pushf
enter
ljmp
mov
xor
add
hlt
xlat
clc
lahf
xchg
add
scas
cmp
add
inc
movsb
test
sbb
in
add
jmp
call
add
xor
cmpsl
loopne
xchg
lcall
les
stos
pop
insb
hlt
and
inc
sbb
lahf
sub
sbb
call
pop
scas
loopne
add
int3
add
add
aam
inc
in
mov
ficompl
inc
nop
scas
je
pop
mov
jl
pop
cld
lret
add
outsb
lods
jecxz
adc
inc
mov
icebp
inc
mov
cmp
inc
fadds
push
push
add
dec
lock
pop
test
shlb
sbb
mov
mov
push
lcall
fcomip
pop
jnp
jp
js
and
dec
aas
cmovb
mov
push
xor
add
mov
inc
gs
sbb
in
insb
mov
xor
pop
rsqrtps
imul
add
or
sub
fstpt
add
jmp
hlt
adc
test
xchg
addr16
insb
sbb
inc
cmp
add
clc
push
sbbb
add
std
or
aam
pop
test
mov
push
sahf
adc
fists
ficoms
outsb
add
inc
jo
add
sub
pop
or
mov
pop
bound
enter
dec
leave
jo,pn
js
mov
and
dec
xchg
les
dec
rcrl
push
std
mov
push
mov
push
mov
pop
or
pop
mov
add
fwait
dec
sub
popa
add
jnp
mov
sete
inc
mov
enter
or
outsl
add
ret
sub
lret
add
add
insl
in
cmp
inc
subb
add
jp
dec
add
sarb
adc
mov
add
jne
pop
pushl
fildl
out
add
push
cs
and
pop
xchg
mov
jae
add
or
shlb
test
in
aad
sbb
enter
sbb
pop
lret
push
sub
ljmp
icebp
xor
pop
pop
xchg
add
int3
or
mov
mov
push
jno
push
adc
mov
das
icebp
mov
or
cmp
inc
pop
and
in
psubsb
rcrl
add
pusha
mov
xor
add
add
test
aam
jg
in
aas
adcl
mov
or
sarb
or
add
xchg
add
push
cmc
xor
xorb
adc
sbb
add
jbe
cli
xchg
sbb
iret
pusha
mov
jb
cld
push
mov
cmp
in
mov
lea
add
testb
stc
push
lods
sbb
add
push
cld
add
jnp
faddl
dec
test
cmpsl
aam
sub
jne
call
adc
hlt
aas
addb
and
xor
xorb
loop
mulb
ret
or
jne
jge
add
push
mov
push
dec
sarl
ljmp
jg
and
mov
inc
adc
push
xor
clc
inc
cmp
sub
and
inc
add
sub
or
mov
dec
pop
sub
add
push
jo
or
es
cmpsb
dec
aas
add
ds
fadds
push
or
xchg
cmp
je
mov
dec
subb
rolb
add
adc
testb
jo
repnz
cmp
cmp
jbe
js
add
jnp
cmp
inc
inc
add
jae
push
cmp
inc
ja
out
psrlq
inc
pop
mov
sub
inc
jp
loop
push
in
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
neg
push
adc
mov
jmp
jge
add
and
and
icebp
mov
mov
movsb
push
or
cmp
xchg
jae
cmp
les
and
bound
add
das
lock
add
lods
push
cmp
and
ret
xor
sub
jp
cmp
add
je
pop
pop
fnstcw
jmp
adc
fsubrs
and
enter
add
jo
loopne
mov
daa
sub
mov
add
rorl
mov
ror
mov
push
les
add
je
push
sbb
aaa
lea
inc
jecxz
xchg
call
je
shr
sub
call
dec
rcrb
mov
test
xor
aaa
aam
mov
in
add
sbb
adc
cmp
add
mov
mov
add
mov
adc
hlt
pshufw
lods
add
mov
enter
cmp
sbb
push
add
xchg
or
adc
adc
ret
push
pop
sub
add
fidivl
xor
lock
and
sbb
xorb
jl
adc
stc
scas
push
or
sbb
clc
daa
lret
cmc
push
test
mov
cmp
push
jnp
inc
mov
dec
jmp
add
mov
test
adcl
jmp
ret
jne
add
dec
fs
sbb
mov
sbb
pop
cwtl
clc
sub
push
lcall
jmp
int
mov
push
sub
xlat
mov
test
mov
cmpl
call
imul
je
addl
or
rorb
add
add
pop
ret
push
push
push
data16
pop
mov
dec
sub
shlb
fbld
add
jae
sahf
inc
imul
lea
add
jg
arpl
push
out
xlat
mov
add
pop
andl
xchg
add
or
xorb
js
shrb
ret
in
add
inc
inc
add
ret
les
mov
add
add
xor
test
repnz
inc
add
or
sub
call
scas
xchg
push
test
shlb
pop
add
sub
jno
add
and
shlb
push
lret
xor
xchg
orb
je
call
mov
pop
repnz
add
push
adc
xchg
sbb
mov
push
pop
and
push
jae
lret
sbb
jmp
lahf
cmp
mov
add
cmpsb
push
xorb
mov
xchg
ret
pop
sub
popa
push
hlt
cmp
add
pop
jg
shll
addb
dec
sti
shlb
xchg
xchg
in
xchg
add
add
push
cmc
pop
hlt
add
push
cld
lcall
sbb
or
stos
pop
cs
lea
add
loop
adc
xor
lods
shl
sbb
pushl
dec
addl
or
pop
cs
xchg
jno
mov
pop
and
dec
mov
pusha
cmp
ret
jo
icebp
clc
push
adc
adc
js
pop
add
sarb
add
xchg
or
out
add
cmp
inc
dec
adc
adc
add
push
pop
add
jg
test
add
add
imul
adc
fnstsw
xchg
test
in
inc
movups
adcb
push
mov
inc
inc
outsl
jne
add
mov
daa
or
cmp
pusha
adc
mov
std
mov
add
add
xchg
add
mov
add
ljmp
pop
mov
or
push
xor
mov
sub
push
push
push
push
push
inc
jle
mov
xchg
xor
push
push
add
je
push
or
add
jp,pn
dec
push
test
inc
push
xlat
test
in
popa
addr16
and
lods
gs
lock
push
mov
add
push
enter
inc
mov
mov
inc
sub
jae
iret
xchg
or
lock
or
sub
sbb
adcb
nop
fs
mov
jno
pop
aam
add
sub
add
nop
xor
test
jb
clc
pushf
js
daa
in
adc
adc
mov
lock
sbb
inc
push
mov
sub
xchg
add
int3
nop
or
push
add
jno
aaa
sti
cmpb
cs
comiss
stos
cmp
push
nop
cmp
loopne
mov
sbb
dec
add
inc
add
xchg
lods
jmp
xor
adc
sub
movsb
pop
rep
cmp
and
nop
add
add
push
xor
mov
cld
movb
sti
and
rolb
or
cmpsl
pop
cmp
or
jo
sbb
lret
sti
cmp
mov
shrb
jns
loop
add
cwtl
push
into
jmp
call
dec
cmp
add
mov
add
cmpsb
inc
push
mov
add
add
lock
iret
add
sub
push
pop
xorb
add
shl
xlat
addl
scas
sub
mov
je
sub
add
pop
xorl
xor
stc
std
jle
add
pop
mov
mov
sub
repnz
adc
add
push
push
inc
lds
add
and
fs
adc
dec
dec
add
test
mov
sahf
sbb
xchg
enter
pop
push
sbb
sbb
fsubs
sub
movsb
push
add
jge
mov
mov
in
add
lea
subl
scas
lods
adc
dec
mov
add
jnp
lods
and
ds
test
adc
andl
or
lock
cltd
add
dec
pop
rorb
cmpsb
jae
or
andb
sub
clc
mul
cmp
testb
xor
mov
pusha
pop
jl
and
or
addb
dec
cld
sub
xchg
shlb
xor
or
je
cmpb
add
adc
inc
cwtl
incb
shr
pop
jo
inc
dec
jmp
out
push
aad
mov
cmp
cmc
jne
cli
loopne
push
popa
pop
add
or
mov
pop
pop
add
or
pop
mov
ficoms
add
shll
stc
cld
add
into
pushl
mov
daa
or
aam
add
or
inc
and
je
sar
add
cmp
test
test
fidivrs
or
xor
mov
sbb
mov
and
sub
iret
add
mov
and
js
jmp
add
call
repnz
and
shlb
jge
add
pop
inc
leave
xchg
sbb
dec
sbb
rol
push
inc
clc
int
add
xor
sub
hlt
aam
dec
leave
jecxz
data16
loop
stc
inc
nop
mov
add
fwait
xor
lret
test
xchg
jne
movsl
cli
add
and
mov
pop
xor
inc
fdivrs
mov
repnz
out
xorb
add
inc
out
and
mov
cwtl
cmpsl
fdivrs
ds
aas
cmc
push
adcb
pop
test
xlat
add
movsb
pushf
cmpsl
outsb
mov
filds
pop
inc
mov
adc
adc
cli
add
sub
add
sub
ds
cmp
mov
push
push
ljmp
pusha
test
xor
les
adc
clc
test
lods
cli
and
sarl
sbb
add
stos
mov
push
rorb
dec
sarb
or
adc
adc
ret
pop
sub
fadds
in
xchg
inc
add
xor
inc
iret
pop
jmp
popf
andb
ljmp
dec
add
stc
cli
or
aas
push
lahf
jnp
mov
add
cmpsl
xor
pop
inc
xchg
jne
fwait
pop
add
test
xchg
adc
ss
push
ret
ljmp
cli
rclb
repz
add
call
movb
jns
cmpsl
lock
sti
add
ja
sub
jge
pop
and
clc
shrb
or
addb
mov
inc
or
add
jo
xchg
or
cltd
add
out
jg
add
add
mov
in
push
insb
test
mov
dec
adcb
rcr
les
cmp
daa
add
ja
mov
inc
adc
dec
mov
bnd
xchg
and
push
imul
and
push
inc
pop
js
add
not
or
fwait
aam
arpl
add
imul
test
pop
xchg
push
adc
push
mov
adc
je
dec
mov
pop
sub
inc
add
aaa
test
js
add
push
je
or
pop
lcall
inc
mov
lret
lds
add
push
inc
fs
stos
xor
iret
mov
jbe
adc
ret
or
pushf
sbb
cwtl
jnp
pop
push
out
lds
cmp
xor
push
and
pop
add
je
jp
arpl
ja
add
mov
or
add
shlb
insb
cmp
test
loop
imul
and
cli
into
je
lcall
add
pop
movlps
dec
xchg
rcrb
mov
subb
and
inc
pop
js
movsl
sti
xchg
add
pop
rcrb
adc
mov
lds
mov
inc
jmp
or
push
sub
adc
loop
fsubl
mov
jne
add
sub
subl
push
add
cmp
mov
inc
roll
pushf
sbb
lea
sbb
aam
dec
test
scas
pop
loopne
mov
jo
mov
xchg
xor
outsl
and
sub
add
push
outsb
add
mov
add
popa
cmp
or
add
push
push
pop
pop
mov
sahf
cmp
out
adc
add
push
adc
xor
push
dec
sub
sub
push
in
adc
hlt
add
mov
pusha
and
fwait
add
push
mov
add
jge
cmc
bound
loopne
notl
popf
fdivr
inc
aad
mov
sbb
inc
adc
add
mov
xor
sub
push
xor
loopne
pop
adc
mov
or
rorb
add
mov
test
cwtl
testl
xchg
push
jmp
add
add
movsl
push
popa
out
sbb
push
cmp
and
clc
and
pushf
fistl
push
popa
mov
aaa
adc
stos
cmp
pop
add
add
push
jg
cwtl
flds
aas
fdivr
add
enter
movsb
mov
jbe
cmp
inc
roll
inc
add
and
dec
mov
pop
mov
shlb
add
imul
dec
outsb
mov
test
pop
add
xor
cmp
fstpt
or
push
das
adc
mov
sahf
insl
add
or
outsl
loopne
push
dec
add
xor
movsb
jo
in
loopne
mov
sysenter
test
add
jecxz
pop
mov
sbb
in
and
shr
add
test
add
repnz
dec
push
hlt
jmp
enter
or
pop
std
in
pop
aad
out
dec
test
sub
jo
or
pop
sub
sbb
mov
push
inc
sbb
xchg
add
add
or
xchg
or
mov
cmp
clc
push
jmp
cmc
add
xor
add
and
lock
or
decl
add
call
or
cs
jnp
mov
mov
and
jo
inc
push
mov
sbb
mov
mov
into
lcall
push
mov
test
or
call
add
scas
sarb
inc
push
push
add
in
mov
xchg
mov
int3
jne
add
pop
pop
adc
nop
scas
pop
xchg
cmp
cli
jp
out
xor
push
mov
adc
sub
pop
and
sti
lock
dec
imulb
cmpb
sbb
mov
pop
call
andl
mov
cmp
jno
mov
ds
or
push
push
pop
pop
dec
inc
adc
pop
adc
inc
loope
mov
mov
add
xchg
dec
arpl
ja
adcb
jmp
dec
adc
sub
ret
loope
add
call
cmp
sub
popl
mov
movsb
add
fldcw
dec
test
mov
pop
mov
add
movl
sbb
jno
rorl
dec
test
ret
push
aaa
add
dec
es
in
sub
push
add
mov
dec
push
xlat
mov
add
mov
mov
sub
mov
cltd
dec
sub
imul
cmp
cmp
cltd
insl
or
dec
xchg
sbb
sub
push
and
and
xchg
push
add
aas
mov
enter
notb
lret
mov
xor
inc
mov
add
pop
mov
mov
pop
mov
add
pushf
jmp
jp
add
mov
jg
ret
jo
lret
rcrb
sahf
lods
mov
add
mov
in
cwtl
cmc
jns
pop
mov
or
mov
sub
cld
pop
into
arpl
mov
ret
and
and
ljmp
leave
out
or
andl
int3
add
xor
jg
add
mov
ja
add
sahf
lods
scas
dec
in
add
push
enter
out
xlat
andb
jno
add
xor
pop
xlat
fmul
ljmp
adc
lret
es
std
xchg
shrl
mov
pop
cld
fdivp
data16
xchg
mov
dec
dec
stc
ret
pop
pop
mov
lret
in
mov
imul
xor
test
movsb
lods
pop
mov
lea
add
sub
mov
dec
sbb
iret
cmpsl
xor
jnp
movb
add
cmovp
push
mov
mov
add
imul
sbb
jle
xorb
in
push
jle
add
adc
adc
or
add
aas
loop
xchg
adc
sub
stc
push
add
subl
inc
mov
sub
ret
cmpsl
xchg
adc
add
sub
lock
or
add
add
mov
pop
xor
pushf
int3
jnp
cmp
adc
pop
add
clc
sbb
lock
rol
add
sbb
sub
jae
jmp
add
dec
movsl
or
jne
add
pop
adc
sub
fcomps
pop
cmp
adc
add
inc
call
and
fwait
ljmp
adc
jne
out
pop
xor
mov
adc
mov
pop
jns
xor
add
xor
shrl
jg
add
mov
cmc
cmp
adc
add
repnz
push
cmp
dec
cli
adc
push
aam
scas
clc
inc
add
adc
add
mov
imul
add
add
pop
sbb
faddl
les
mov
push
jne
inc
adc
dec
xlat
xchg
loop
clc
adc
xchg
add
jb
dec
aam
mov
jno
add
and
div
mov
test
cmp
adc
sbb
mov
out
mov
sarl
insl
cmp
jbe
push
add
mov
push
or
cmp
adcb
jnp
inc
add
lcall
pusha
iret
mov
cwtl
clc
add
jne
jb
in
into
sub
add
mov
add
jg
cwtl
aam
add
insb
shlb
add
cltd
xor
aas
pop
mov
add
jmp
add
in
jmp
adc
add
or
outsl
cmp
mov
add
lods
in
mov
lock
add
cwtl
inc
int
popf
lcall
inc
rcrb
or
xchg
add
aam
ret
loopne
insl
mov
es
cmp
pop
shlb
aaa
hlt
add
cltd
in
enter
incb
jo
dec
andb
add
xorl
add
daa
lahf
sub
or
cmp
add
sub
push
add
pusha
pop
or
push
pop
fadds
add
push
loopne
fildl
jnp
das
fidivrl
push
dec
pop
pushf
enter
pop
pusha
push
cmp
or
and
inc
mov
adc
rcll
sub
stos
sbb
sahf
or
sub
inc
test
lcall
sbb
aam
xor
or
add
adc
in
sub
or
ja
add
sub
add
push
xor
sahf
add
je
mov
inc
sbb
pop
add
push
leave
pop
sarb
add
mov
fs
add
xchg
cmpsl
xchg
push
jb
xchg
cmpb
cmp
movsb
push
or
or
mov
inc
push
xor
sbb
cld
lret
filds
inc
jmp
mov
sahf
or
test
pop
add
add
adc
sbb
outsl
hlt
cld
sti
add
jbe
fiaddl
js
mov
adc
add
dec
scas
mov
sbb
int3
aas
orb
and
lcall
clc
lock
dec
lds
inc
orb
jp
add
mov
pop
lds
cmc
add
aaa
adc
and
mov
mov
pop
icebp
pop
dec
xchg
pusha
loopne
cmp
add
inc
iret
pop
ljmp
bound
and
scas
jae
les
sbb
sahf
inc
push
xchg
das
mov
shl
add
add
bnd
sbb
in
das
fs
fadds
mov
dec
xor
push
sbb
lds
sbb
popf
adc
sbb
add
test
dec
xchg
xadd
cmpl
add
pop
sbb
enter
inc
cmp
pop
inc
xor
or
and
push
mov
lahf
mov
xchg
lock
mov
push
mov
add
call
lea
mov
pop
adc
sub
popa
pop
push
dec
or
mov
xchg
xor
movsb
sahf
xchg
popfw
jae
and
sub
cmp
mov
mov
push
xchg
cwtl
cmp
add
jb
pushf
pop
jmp
ja
add
fnsave
stos
inc
cmp
shll
jb
cld
jle
inc
xor
adc
fisubl
clc
mull
stos
ja
lcall
stos
sub
add
inc
and
aam
and
sub
in
nop
push
lock
adc
push
add
ljmp
cld
ret
adc
mov
mov
call
pop
into
adc
insb
lods
add
nop
push
mov
movsb
mov
movsl
pop
setb
frstor
adc
sbb
and
xor
pusha
fnsave
fnstsw
cwtl
mov
push
rorb
xorb
and
pop
out
mov
sbb
push
cwtl
dec
dec
fsubrp
add
xchg
iret
add
adc
dec
inc
out
mov
cli
lret
push
loopne
add
fldcw
test
nop
les
mov
and
add
pop
ror
stos
add
movsl
decl
push
jnp
inc
fdivp
shrb
push
push
enter
sbb
mov
es
orl
add
xor
ficomps
test
add
jb
pop
adc
enter
inc
loop
dec
pusha
adc
dec
push
das
or
dec
fs
push
pop
xor
add
xor
jmp
jae
fiadds
and
add
add
or
aad
pop
in
inc
add
jns
cmc
fld
cmp
xchg
insb
jmp
xor
add
and
push
pop
jns
push
mov
addb
gs
lcall
insl
sbb
pop
ja
mov
ret
add
addl
adc
in
pop
push
xchg
scas
ljmp
add
and
sqrtps
xor
mov
popa
xchg
outsb
or
ret
dec
pusha
adc
push
and
mov
cmp
scas
std
sbb
mov
pop
or
or
adc
and
jo
lahf
loopne
pusha
jo
addb
shl
add
add
add
add
loop
add
push
addb
mov
ret
or
repz
adc
push
mov
push
push
mov
add
xor
popf
mov
inc
sub
stos
or
pop
lret
mov
out
pop
xorl
cld
jp
add
add
mov
xlat
pop
adc
cmp
rorb
lcall
sub
shr
aam
movsb
add
jns
iret
and
mov
ds
pop
mov
pop
fdivl
pop
lods
sarb
mov
pop
mov
push
mov
add
sub
push
push
push
cwtl
push
and
mov
cs
loopne
popf
mov
rep
mov
cmp
hlt
lock
add
mov
cmp
add
inc
inc
cmp
mov
call
add
cwtl
push
inc
pop
adc
rcrb
dec
enter
addb
sbb
adc
xchg
push
xor
shl
add
add
les
add
xor
jo
add
add
cmp
mov
add
inc
shlb
dec
mov
movsb
leave
insl
shl
in
mov
add
sbb
and
add
sti
sub
add
mov
mov
sti
mov
and
jge
dec
jnp
fcomip
ljmp
sbb
cld
add
jle
test
add
lea
inc
add
rorb
jae
add
adc
and
push
cmp
mov
andb
enter
and
inc
xchg
mov
insb
mov
mov
or
loop
pop
or
inc
addr16
dec
pop
inc
xchg
enter
lods
mov
sbb
add
lcall
add
or
out
mov
mov
sti
fmull
add
or
push
adc
or
mov
scas
pop
js
stc
xor
shlb
cld
cs
loop
pop
sub
addb
and
pop
add
movsb
adc
addb
in
fcompl
mov
add
inc
sub
cmp
ret
add
sbb
js
push
add
adc
scas
pop
xlat
das
mov
xor
pop
or
adc
add
add
mov
leave
jns
test
add
or
xchg
mov
ret
and
call
add
pop
rorl
shlb
adc
shrb
mov
mov
push
mov
jnp
sbb
jp
jecxz
add
inc
cmp
jb
xchg
rcrb
cmp
pop
add
int3
testl
mov
in
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
or
rcrl
add
lea
pushf
add
call
idivl
inc
mov
push
add
push
jle
add
add
pop
add
call
pop
pop
xor
ret
add
mov
enter
add
rcl
jno
push
add
sub
sub
stos
xor
roll
mov
rorl
addl
adc
lea
repz
push
xchg
dec
pop
cltd
xchg
or
pop
ret
add
xor
or
adc
adc
mov
mov
jo
add
inc
jmp
jne
sub
cmpsb
pop
sbb
jle
adc
rorb
and
add
ljmp
adcb
testb
pop
push
cltd
or
sbb
pop
push
mov
cmovs
and
jl
mov
xchg
cmp
add
stos
or
add
and
mov
add
inc
xor
movb
cmpb
cs
fiaddl
and
sbb
cmp
add
gs
push
mov
mov
add
divl
call
fwait
pop
lock
mov
loope
in
ljmp
mov
add
adc
fcompl
pop
add
adc
xchg
push
dec
xor
push
add
fistpl
mov
mov
lds
and
adc
add
xor
sti
leave
add
push
pushf
adc
roll
lea
cs
mov
pop
adc
and
cli
mov
add
dec
or
nop
or
and
jo
add
lea
pushf
sbb
cmp
jnp
testl
sub
ror
rcl
ljmp
pop
in
xchg
ficoml
hlt
add
adc
lret
ja
adc
xchg
scas
push
xchg
sbb
insb
nop
mov
addl
add
jno
add
inc
add
push
add
cs
loop
and
es
or
add
out
push
or
push
mov
mov
jns
xchg
sub
or
sbb
inc
or
inc
out
lahf
mov
xlat
call
jmp
pop
adc
insb
test
or
lods
adc
xlat
pop
add
sbb
add
add
add
mov
mov
or
repnz
sbb
sbb
add
dec
mov
aam
push
jg
fisttpll
push
mov
adc
inc
lea
pop
xchg
fisubs
shrb
roll
mov
add
lock
add
mov
cmp
mov
movsl
and
cmp
sub
add
inc
adc
cli
add
pop
ret
int
sub
add
mov
cmp
les
adc
mov
sbb
std
pop
out
ret
nop
roll
xchg
push
stc
jecxz
mov
mov
jne
add
andl
inc
adcb
cld
cmpsl
loope
out
xchg
scas
dec
rclb
mov
aaa
call
cmp
pop
add
push
jl
push
jle
into
jg
or
inc
push
andb
xor
pop
mov
push
add
pop
mov
bound
inc
ja
xor
add
push
add
jmp
add
rolb
aas
cmpsb
or
stc
out
or
inc
add
or
mov
sarl
je,pt
xchg
das
addb
add
inc
in
shll
pop
add
add
lret
rcrb
cli
pop
push
xchg
mov
rolb
sbb
or
dec
sub
cmp
mov
mov
orb
xchg
add
mov
and
xchg
in
pop
sbb
push
lret
js
and
push
pop
inc
fwait
push
test
dec
jb
jg
sbb
xchg
and
add
and
cmp
add
lods
xchg
jb
imul
sbb
mov
movsl
pop
pop
pusha
test
add
addb
jmp
sbb
add
inc
aam
xchg
dec
and
add
or
sub
stos
xchg
jp
mov
dec
je
aam
add
and
decl
in
xor
jg
lea
pop
sub
ror
sbb
fsubrl
mov
lock
je
hlt
aas
lret
xor
lea
ret
rclb
test
aad
popf
push
add
jbe
jmp
sub
mov
in
gs
aaa
aad
mov
out
pop
les
mov
cmpsb
addb
fs
outsl
add
push
push
add
or
inc
dec
mov
cwtl
fs
jne
or
lea
mov
adc
lods
pop
add
test
or
lods
pop
fcoms
jne
ror
pop
adc
sub
push
sub
add
stc
into
xor
cmpsb
add
and
cmp
test
cmp
je
jne
mov
mov
rcrb
or
adc
scas
lahf
xor
and
test
lcall
adcb
outsl
add
faddl
add
in
sbb
dec
jle
scas
lds
and
mov
jle
dec
inc
xor
lahf
dec
imul
xor
and
dec
xor
jns
or
push
add
jo
push
andb
lret
jle
leave
jg
shl
add
jp
hlt
hlt
add
fistpll
jb
ds
add
lock
xchg
jg
add
es
add
int
push
push
dec
inc
paddsb
mov
mov
add
jg
jge
xor
adc
jnp
pop
in
popf
push
add
cli
stos
fs
mov
add
lods
imul
out
mov
pop
mov
add
adc
repnz
xchg
or
dec
push
cld
cs
fcoms
stos
mov
inc
sub
xchg
clc
testb
cmpb
jp
dec
aam
add
cld
push
jnp
push
imul
jle
dec
sbb
lods
lock
aam
push
mov
jae
js
stos
inc
inc
add
cld
pushf
pop
cltd
pop
pop
popf
icebp
rcl
les
outsb
stos
mov
add
loop
dec
sub
popa
and
xchg
ja
adc
push
stos
mov
push
int3
push
and
lock
xor
mov
rorl
or
verw
test
pushf
je
add
addr16
push
add
out
xor
dec
lea
dec
adc
push
add
mov
add
mov
pop
and
sub
cmp
sbb
or
add
jns
mov
inc
and
add
push
or
jle
inc
adc
movl
jmp
add
sub
or
mov
push
mov
jb
sbb
jecxz
orb
push
xchg
mov
push
je
shlb
add
xchg
and
lods
push
dec
stc
dec
add
movsl
or
inc
add
adc
adc
pop
test
pop
pushf
stos
jne
push
adc
dec
or
add
call
push
jl
das
add
bound
cwtl
xchg
or
xchg
scas
je
add
inc
add
ljmp
inc
pop
xor
je
add
push
jne
add
outsb
dec
mov
xchg
inc
cli
and
dec
fadds
clc
and
sbb
xchg
sbb
cmp
mov
and
xor
mov
jl
test
cli
add
or
dec
ljmp
fimuls
cld
ja
add
icebp
mov
cmp
roll
push
lcall
int3
cmc
paddw
mov
popl
mov
xchg
js
ja
add
mov
pushf
add
xlat
ds
dec
xchg
testl
inc
clc
fs
cmp
jg
pushf
nop
das
ds
add
pop
inc
jne
jb
mov
lods
bswap
push
jle
loopne
fisubrs
xor
in
jae
mov
push
dec
add
dec
push
cmp
push
sbb
inc
push
push
push
inc
es
dec
call
add
scas
sub
loop
add
cwtl
xorb
inc
cmp
or
ja
inc
jbe
xchg
aas
loope
and
rcll
add
inc
add
sbb
xor
jnp
js
js
cmp
mov
daa
or
adc
jmp
sbb
add
in
xor
push
lock
mov
pop
xchg
jo
jnp
clc
je
add
sub
out
repnz
imul
lds
cwtl
xchg
popf
fs
pop
lock
push
inc
push
loop
mov
gs
jmp
mov
add
aaa
mov
xchg
add
sub
pop
mov
pushf
daa
test
ja
addb
push
imul
push
jge
mov
mov
add
in
lahf
pop
add
sbb
loopne
add
clc
cmpsl
sbb
mov
mov
jno
sbb
inc
dec
add
push
adc
jb
add
mov
je
sbbl
or
inc
add
outsb
cmp
sub
and
cmpsl
fidivrs
outsl
insl
jmp
adc
cmp
rolb
shll
jae
mov
les
dec
inc
into
lret
add
mov
xchg
mov
es
jecxz
fs
icebp
or
loop
int
pop
jbe
mov
mov
pop
pop
xchg
cmp
cmpsl
mov
sbb
push
push
xchg
lea
dec
mov
pop
pop
add
xchg
rol
fs
add
sub
sbb
repz
sahf
or
cmp
mov
dec
add
dec
pop
cmp
and
jbe
cmc
add
out
pop
add
ret
mov
out
sbb
mov
push
push
mov
daa
xor
fadds
cwtl
lcall
jns
repnz
rorl
dec
xchg
aad
jge
fs
jnp
push
sti
loopne
mov
xchg
popf
sbbb
cmp
jnp
pop
fidivs
rcll
jae
je
lea
mov
mov
dec
orb
cwtl
add
xchg
rorb
shll
scas
add
stos
xor
or
push
sbb
mov
xor
jge
hlt
ret
pop
hlt
lret
or
adc
fsubp
sub
push
outsl
test
pop
add
xchg
inc
inc
mov
ret
stc
sbb
adc
and
rcl
push
cmp
mov
nop
pop
rorl
rdtsc
aam
les
add
push
out
mov
push
fxch
inc
faddl
mov
shlb
daa
scas
add
call
adc
and
push
xlat
add
sbb
nop
fcomps
rolb
test
adc
jbe
or
jmp
xor
sbb
xchg
pop
pop
rolb
mov
mov
or
sbb
dec
push
lods
cmpl
std
add
mov
or
adc
jmp
mov
mov
pushf
out
rcrb
add
pop
cli
cmpsl
and
icebp
jnp
add
jb
pop
cmp
test
hlt
sub
sbb
aam
cmp
add
gs
jg
or
addl
and
int3
cmp
sbb
jmp
adc
repnz
mov
cld
loope
add
sbb
jp
add
add
xor
mov
int3
in
shlb
mov
rolb
sbb
push
dec
cmp
mov
inc
mov
sub
and
add
in
shlb
fildl
pcmpeqb
cmp
add
sub
cltd
xor
jne
in
cmc
xor
popl
xchg
xchg
enterw
cmpl
nop
test
add
lret
ljmp
mov
scas
addl
ja
add
in
add
int
andb
jne
xor
push
jle
pop
insl
out
inc
add
lea
add
or
sbb
mov
jno
sub
incl
bound
push
test
movsb
or
or
dec
add
call
mov
add
lret
les
inc
and
xchg
cmp
testb
mov
add
addl
adc
inc
xor
data16
mov
incb
fiadds
add
mov
push
aad
pop
insl
lea
dec
cmp
push
cmp
ja
cld
cli
dec
cli
fiaddl
adc
shrb
xor
mov
jmp
sub
sbb
cmpb
and
or
nop
sbb
adc
add
pop
andb
into
sbb
jne
inc
ds
add
orl
push
invd
cli
mov
mov
jmp
mov
clc
sldt
sbb
add
lods
adc
enter
mov
push
inc
add
xor
cli
and
and
ss
mov
jmp
add
pop
inc
mov
in
mov
mov
je
test
add
and
mov
jbe
andl
cmpsb
aaa
cwtl
mov
ss
mov
inc
pop
inc
pop
aam
cmc
add
cwtl
int3
pop
call
rclb
ja
xchg
test
cmp
add
xor
or
pop
clc
push
pusha
or
mov
jg
add
xor
dec
dec
cmpsl
lds
add
pop
push
xchg
dec
xchg
or
pop
adc
add
push
je
push
add
inc
push
mov
jmp
add
mov
cmp
imull
mov
arpl
fdivrl
mov
pop
sub
pop
jg
pop
or
inc
pop
nop
push
andl
adc
pop
adc
and
dec
adc
cmp
sbb
enter
mov
movsb
mov
pusha
inc
mov
lahf
or
mov
add
add
add
xor
ss
jbe
mov
adc
arpl
ret
sub
adc
push
cli
in
cmp
ucomiss
pusha
movntq
out
mov
jb
loopne
add
arpl
inc
outsb
pop
add
push
jp
push
sbb
add
jbe
push
add
add
test
add
add
inc
add
mov
outsb
mov
insl
cwtl
jb
pop
out
push
jo
lods
dec
xor
movsl
sub
scas
fcompl
sub
dec
outsl
fs
mov
dec
xor
fdivr
lcall
lods
jo
fidivs
add
pop
shrb
mov
orl
inc
or
sbb
jl
dec
jo
testb
dec
cmp
pop
int3
jge
mov
pop
les
jecxz
es
pop
add
mov
add
inc
aam
push
add
jge
push
pop
add
mov
xchg
dec
adc
loopne
in
add
rorb
sub
pop
dec
mov
mov
mov
mov
gs
add
inc
jns
xor
dec
cwtl
out
and
xor
popa
inc
out
add
cmp
fmul
push
sbb
movsl
add
dec
pop
add
or
xchg
jp
add
inc
mov
js
pop
inc
xchg
dec
mov
test
and
push
push
pop
test
dec
pusha
shr
adc
jns
add
js
jp
inc
ds
mov
cwtl
and
dec
or
cmp
add
xchg
aas
mov
cmpsb
fists
pop
sbb
ljmp
add
mov
les
sub
jne
pop
xchg
nop
mov
adc
in
mov
ret
add
inc
dec
cmp
jns
push
jl
sbb
dec
dec
adcb
inc
mov
push
push
sub
call
xor
mov
aam
sub
shrl
cld
xor
xchg
xor
in
icebp
lret
add
xor
cmpsl
cwtl
jnp
rcrl
test
xor
push
cmp
outsb
imul
add
jne
lret
push
jg
pop
inc
in
ret
call
adc
nop
mov
fs
repnz
adc
popa
outsb
jae
insl
gs
sbb
jb
pop
outsl
xchg
xor
popf
inc
int3
push
inc
aad
mov
xchg
or
or
sbb
jmp
movsl
bound
mov
daa
movb
jo
add
jb
je
jne
repnz
add
sub
push
addb
test
fmull
add
push
jae
xor
jbe
add
mov
fldt
and
jp
cmp
sbb
mov
movsb
pop
cmp
mov
add
outsb
jno
jne
sbb
out
imul
test
xchg
scas
lea
pop
xor
imul
or
and
arpl
jmp
push
xchg
add
cmp
dec
js
subps
mov
sub
and
add
push
adc
andb
clc
xchg
push
push
or
jmp
and
ret
add
sub
mov
xchg
add
js
lods
mov
jbe
repnz
pop
call
imul
xchg
ss
ds
sarb
test
and
dec
mov
push
aad
fxch
cmp
sbb
fwait
in
and
repz
sub
add
or
mov
inc
pop
sbb
mov
rcrl
mov
push
mov
mov
push
jne
add
xor
loopnew
add
jmp
jle
movsb
fldt
add
or
fisubl
stc
push
adc
aad
jo
sbb
pushf
pop
push
xchg
sub
add
test
push
add
test
scas
sub
sub
stos
mov
mov
cmp
add
lret
loopne
xchg
push
xor
add
shr
cmovle
sbb
mov
inc
mov
mov
loope
out
or
mov
pusha
pop
ljmp
adc
adcb
shrb
pop
add
pop
jp
test
int
add
push
mov
add
mov
or
dec
mov
lea
je
fsubs
adc
and
je
add
adc
mov
jbe
out
mov
dec
inc
mov
gs
pop
sbb
and
movsb
lods
cmpsl
add
insb
dec
adc
inc
xor
mov
add
adc
cmp
mov
clc
mov
addr16
rclb
and
dec
leave
ror
dec
or
fdivl
inc
sub
xchg
jle
sbb
add
inc
xchg
mov
pop
adc
outsb
or
xorb
cmp
xor
or
sub
movsb
push
push
les
push
add
mov
iret
pop
push
rorb
mov
aam
jno
hlt
test
add
fcompl
lahf
push
mov
add
sbb
fmul
or
add
pop
loope
mov
movsb
add
adc
add
or
leave
push
das
add
enter
mov
movsl
rcrb
pop
call
icebp
outsb
cli
mov
and
mov
jmp
sbb
add
in
test
inc
test
pop
shrl
dec
inc
add
adc
pop
add
or
test
adc
int3
and
add
les
add
dec
stos
fimuls
fmull
mov
jmp
add
in
subb
jno
cld
fs
jle
push
hlt
sub
jbe
in
mov
cmp
filds
inc
ds
add
in
adc
fldl
adc
int3
xor
subl
pop
sub
inc
loopne
outsb
mov
lds
push
in
xor
movsl
lea
xor
add
into
fisttpll
cltd
loopne
jp
sub
scas
dec
sub
push
add
rclb
cmp
ja
add
mov
mov
stc
add
std
orb
sub
gs
movb
ud2
out
rorb
add
fs
add
pop
or
inc
shll
xchg
dec
jg
jl
dec
jp
push
add
ss
fadds
add
outsb
sub
xor
xchg
ret
inc
push
push
jns
push
call
mov
jg
add
lock
imul
sbb
push
adc
jle
gs
and
dec
pop
dec
pop
lock
push
popa
add
clc
lods
dec
jnp
sub
dec
sti
aam
xlat
ds
nop
pop
push
clc
outsb
in
mov
add
test
out
outsl
jg
adc
into
fbld
pop
jae
pop
push
and
jb
jo
pop
shlb
mov
scas
or
add
and
dec
and
and
in
subb
sub
out
lret
fsubl
xor
mov
insb
sbb
ja
push
pop
sub
sbb
mov
or
mov
shr
add
cmp
clc
add
cld
rclb
inc
pop
in
in
rcrb
pop
push
in
add
test
xchg
adc
or
pop
push
je
adcb
stos
movsl
daa
add
in
sbb
mov
shrb
dec
add
inc
outsl
insl
add
xor
or
in
cmp
mov
les
or
sarl
push
addb
or
jnp
dec
jo
push
sarl
insb
xchg
sbb
arpl
mov
dec
enter
lods
les
xor
das
add
imul
cwtl
and
or
mov
insb
push
lods
push
fmull
inc
push
dec
xor
or
jo
pop
leave
push
sub
loopne
stos
fsubs
sbb
xchg
lds
sub
enter
mov
es
mov
push
nop
add
les
pop
inc
adc
add
mov
add
fs
push
dec
jecxz
add
fmull
inc
jl
pop
mov
inc
inc
jne
adc
fs
orb
xor
mov
and
or
les
pop
packssdw
pop
push
clc
xlat
data16
add
inc
adc
sbb
sbb
add
cs
cmp
sbb
jl
add
stos
adc
add
adc
daa
lock
lods
rolb
mov
mov
fists
pop
popf
ja
xor
pop
loope
sub
sarb
sub
in
and
mov
inc
add
cmpsl
mov
aad
addl
sti
dec
cmp
add
jb
loop
mov
leave
add
mov
mov
push
add
inc
add
sbb
inc
push
push
push
sub
in
imul
pop
ljmp
pop
jae
cmp
jmp
push
pop
adc
mov
movntps
mov
add
dec
daa
std
adc
ljmp
add
je
cmp
jbe
push
andl
pop
cmpb
add
cmp
mov
mov
jne
imul
push
ss
add
lahf
inc
aam
jbe
add
loop
shl
nop
sbb
inc
orb
sub
sbb
in
into
lock
inc
add
or
inc
and
aam
or
push
cmpsb
aad
fidivs
movsl
fldenv
add
cmpsl
fistl
pop
push
push
je
or
add
cmpsb
sub
push
jecxz
fisttps
and
sub
push
dec
ret
push
or
pushf
or
into
or
mov
push
mov
xlat
test
incl
jb
sbb
into
jmp
insb
add
pop
pop
in
push
mov
ja
mov
sub
sti
mov
pop
pop
xorl
pusha
out
pop
int3
add
incb
pop
xor
loope
sub
cmc
shll
imul
icebp
mov
add
fsub
sbb
pop
inc
add
add
addb
add
xor
inc
scas
sub
sbb
inc
daa
pusha
push
cmp
mov
add
addb
inc
iret
rclb
pop
dec
flds
stos
fnstenv
jecxz
test
xor
cmp
xchg
add
mov
cmp
jb
mov
adc
nop
mov
cmp
add
cwtl
out
hlt
insb
adc
add
dec
pop
add
push
cmp
lods
cld
loopne
add
xor
add
pop
add
out
cmp
sahf
sbb
sbb
stos
fstpt
dec
pop
inc
lahf
push
mov
adc
cmpsl
mov
sahf
mov
adc
sub
lds
add
in
call
mov
add
mov
sub
add
xchg
add
cwtl
sbb
add
sub
loop
dec
pushf
ds
inc
lret
xor
xor
mov
push
gs
add
add
add
and
sbb
scas
add
std
adc
pop
add
push
bound
pop
mov
pop
mov
movsb
mov
adc
jg
out
mov
adc
and
inc
pop
outsl
dec
and
add
inc
cmp
xchg
out
add
mov
movsl
sbb
aam
aas
iret
repz
fdiv
mov
decl
push
pmaxsw
and
add
in
inc
fwait
mov
aas
lods
aam
outsb
xor
add
ljmp
xlat
add
and
ss
cs
inc
jno
ljmp
loopne
xor
repz
mov
push
add
pop
outsl
pusha
push
loop
and
and
adc
push
loopne
rorb
jae
push
mov
call
jbe
pop
cmc
sbb
xlat
mov
test
sar
sbb
dec
mov
shll
inc
mov
mov
push
and
lea
jecxz
call
mov
pop
mov
nop
mov
enter
cwtl
inc
out
xchg
adc
add
neg
add
test
out
adc
aad
pop
lods
test
mov
inc
imul
gs
cmp
add
addr16
lods
push
sahf
sub
mov
push
inc
ret
add
and
int3
aad
sbb
mov
dec
push
or
or
add
add
pop
inc
add
jecxz
sub
loop
bound
pushf
push
mov
lods
add
repnz
adc
add
dec
mov
fimull
test
sbbl
pop
out
loopne
pop
push
cmp
loope
aam
adc
and
mov
fidivl
faddl
shrb
popl
cmp
stos
cmpsl
jmp
cwtl
shll
pop
cmp
push
jo
dec
loope
or
mov
cmp
hlt
mov
in
and
icebp
fstpt
inc
mov
push
std
pop
inc
xchg
add
jmp
xchg
pusha
scas
shrb
ss
add
mov
clc
sbb
adc
les
sub
pop
hlt
inc
jp
pop
in
push
or
dec
mov
mov
mov
lret
mov
mov
imul
fsubrl
dec
sti
xchg
add
or
jno
imul
gs
jecxz
jmp
jmp
clc
push
jmp
cltd
adc
cmp
mov
and
xor
add
sub
cmp
sbb
mov
aas
add
sub
adc
add
dec
mov
add
shlb
mov
add
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
add
movzbl
sub
jne
cmp
dec
xchg
push
and
add
sub
call
or
js
or
fcmovb
scas
stc
and
mov
frstor
outsb
testb
push
xchg
loop
push
mov
fisubrs
les
int3
mov
sbb
lods
aam
addb
mov
sbb
mov
ficomps
and
dec
sbb
and
shr
add
ljmp
cmpsb
sub
add
add
push
flds
movsb
sbb
or
rorb
and
lds
xor
add
or
add
push
push
aad
add
outsb
fbld
or
add
test
nop
jp
fildll
mov
add
and
jle
aad
out
jl
pop
fmuls
jo
pop
xor
loopne
lods
push
and
sti
test
xchg
test
jne
roll
mov
mov
pop
add
pop
inc
lock
enter
mov
add
aaa
stos
pop
mov
sbb
sbb
cmpsb
xor
mov
js
add
mov
push
jne
lods
movsb
ret
jp
pop
dec
daa
adcl
add
xlat
ja
adc
enter
and
sub
ret
pop
int
loopne
push
add
in
subb
add
inc
stos
fmuls
xchg
aam
adc
push
add
add
out
inc
scas
add
jg
or
push
push
comiss
mov
lret
cmp
addb
push
or
pop
cltd
cmp
rcrb
pushf
or
je
roll
cmp
add
and
add
jp
fists
in
xor
jge
pushf
add
mov
call
add
cmp
cmp
adcb
decb
xor
add
xchg
imul
mov
sbb
test
and
addb
adc
je
adc
jecxz
mov
xlat
and
cmpsl
pop
or
xor
cmp
sbbb
xchg
jns
movsl
inc
jg
add
cmp
mov
dec
add
and
or
add
scas
and
sub
aam
iret
add
mov
xor
sub
add
das
fiadds
sbbb
mov
push
loop
add
mov
mov
add
xchg
loope
pop
pop
pop
push
dec
xor
pop
andb
shl
jmp
sbb
jmp
out
add
test
rclb
pop
inc
sar
rcll
add
test
cli
ds
mov
stos
iret
pop
and
mov
add
sbb
or
add
inc
mov
mov
sbbb
sbb
add
ss
sbb
jno
mov
popa
fcomip
das
incb
push
xchg
jns
pop
movsb
shll
jne
and
sbb
inc
mov
rcll
adc
dec
add
dec
and
push
jae
add
push
imul
mov
xchg
scas
aad
xchg
sti
add
sub
mov
out
cmp
add
xchg
das
add
nop
dec
jmp
add
mov
enter
mov
jae
and
inc
test
sub
add
shlb
xchg
inc
movsl
add
mov
dec
jo
clc
cmp
cld
or
test
dec
adc
xor
rorb
add
mull
js
in
add
dec
imul
ds
shrl
repnz
mov
add
and
dec
lock
fiadds
loop
or
ficoms
and
dec
pop
add
lret
call
mov
push
xor
scas
add
lahf
rorb
rcl
movsb
fsts
gs
dec
or
mov
pop
lock
fs
add
sub
sbb
lock
add
aaa
mov
loope
pop
add
shll
cmp
inc
add
inc
inc
cmp
faddl
cmpsl
repz
push
fcoms
inc
or
cmpsb
fadds
enter
xchg
sti
hlt
sub
or
lods
lea
sub
mov
sub
sub
add
js
das
enter
add
outsb
cmp
add
and
cmp
add
loop
jne
push
xor
and
lret
jp
inc
in
in
hlt
cmp
andb
sub
bound
push
daa
testb
in
jle
xorl
and
pop
mov
aam
adc
dec
in
mov
and
iret
out
xor
rolb
add
imul
push
add
idivl
xchg
xchg
cmpb
cmp
cmp
add
insb
rolb
mov
add
dec
js
add
pusha
adc
add
adc
clc
or
ss
or
imul
sub
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
mov
ret
push
add
jmp
mov
push
orl
pop
inc
push
push
cmc
jmp
dec
adc
lcall
pop
outsl
enter
jns
inc
push
js
pop
or
test
ficoml
pop
xchg
testl
in
sub
fs
add
jo
jb
cmp
cmp
cmp
mov
rclb
dec
jne
stc
mov
out
je
clc
incb
or
add
gs
sbb
xchg
xchg
sub
sub
add
add
addb
push
add
push
lea
mov
add
das
dec
pop
pop
sub
xchg
rcrb
dec
sub
and
nop
add
xorb
sbb
addr16
inc
loopne
jmp
mov
sub
cmp
sub
dec
add
lea
cmc
add
push
lahf
xorb
clc
ljmp
sbb
nop
stos
cmp
sarb
mov
push
loopne
xchg
xchg
ret
lret
addb
or
mov
in
and
sub
add
dec
shlb
inc
cmp
sbb
and
sub
sbbb
add
jmp
mov
cmpb
cli
aas
and
dec
and
or
loope
jae
add
xor
sub
imul
call
mov
add
push
fiaddl
inc
xchg
mov
ljmp
cmpsl
push
inc
lods
cwtl
add
repnz
dec
into
and
sub
sbb
sbb
sar
enter
cli
call
add
popf
push
inc
nop
int3
add
inc
in
enter
pop
dec
jp
psubusw
jmp
out
sub
mov
adc
in
mov
mov
or
in
aas
add
push
inc
add
idivb
adc
int3
in
add
adc
mov
inc
fsubs
push
jns
add
mov
arpl
xchg
mov
add
jnp
xlat
repz
mov
ja
imul
in
inc
jns
and
xchg
dec
add
push
dec
jo
add
mov
add
push
data16
insl
mov
add
clc
and
leave
jns
addr16
mov
fimuls
and
aad
iret
in
cmpsl
scas
test
cmpl
mov
sub
mov
pusha
cld
push
add
pop
inc
movb
adc
adc
shlb
dec
les
xor
and
add
xchg
fmuls
and
shr
add
test
xor
insb
fmuls
mov
stos
mov
add
cs
clc
enter
push
jne
jo
add
and
popa
lods
xor
arpl
adc
mov
jae
mov
mov
or
sti
or
imul
out
test
movsb
cmp
dec
add
dec
xor
iret
cmp
add
stos
int3
or
pop
lar
clc
sbb
jl
pop
sbb
dec
repz
pop
bound
pshufw
mov
dec
scas
das
add
aam
add
adc
rcrb
dec
jl
scas
add
cmp
insl
mov
adc
pushf
mov
inc
or
add
inc
imul
aas
xor
cmp
or
mov
add
xchg
js
mov
push
js
add
ja
or
dec
and
mov
adc
add
es
xor
add
mov
iret
and
ljmp
mov
cwtl
dec
mov
push
xchg
adc
push
in
jno
adc
cmc
out
add
loopne
add
dec
jbe
nop
fiaddl
imul
push
sbbl
sub
cwtl
mov
xor
test
arpl
ja
pushf
or
or
dec
repz
adc
lret
rclb
add
adc
adc
mov
add
dec
cmp
pusha
add
aaa
add
mov
je
jbe
and
xchg
sub
xchg
mov
sbb
or
test
aaa
and
or
daa
daa
mov
cld
movsb
into
sbb
add
and
cmp
lods
enter
inc
xor
xchg
jle
cmpsb
xchg
push
les
enter
and
xchg
rorb
sub
xchg
insl
or
cmp
fildll
lods
xlat
cmp
pop
jno
in
cmp
mov
push
sub
inc
add
or
in
add
adc
xlat
and
out
rorb
xor
push
fs
cmp
dec
add
jmp
and
loop
dec
hlt
arpl
gs
lcall
loopne
andb
inc
pop
and
mov
cli
adc
adc
dec
js
dec
orb
jae
insl
repnz
add
and
mov
hlt
push
jns
jns
jbe
psubb
jns
addb
push
in
fimull
xchg
mov
daa
dec
mov
jl
prefetch
int
incl
xor
xchg
imul
ds
or
ja
xbegin
test
add
js
loopne
dec
add
pop
cli
mov
inc
mov
add
adc
popa
mov
sub
cmp
stos
fisttps
xchg
push
push
and
stc
xor
in
xchg
add
push
pop
adc
adc
nop
inc
sub
int3
jns
add
jl
enter
and
jne
lods
and
sub
mulb
jo
insb
add
lods
test
arpl
sub
xchg
fcom
add
cmc
inc
mov
fistl
sub
xor
pop
jl
mov
imul
hlt
mov
add
into
sub
adc
mov
in
movsl
add
sbb
aad
mov
data16
hlt
in
mov
frstor
cmp
add
lods
jb
add
mov
or
pop
dec
mov
loopne
jno
pop
and
add
or
add
mov
or
in
mov
shll
sub
popf
add
ss
cmp
cmp
jb
jo
inc
bound
ret
fs
sub
sbb
mov
test
adc
pop
inc
pop
add
outsb
push
gs
popl
mov
js
add
sub
repz
mov
cmp
mov
call
daa
and
int3
dec
ficoml
add
out
dec
adc
and
fisubrs
hlt
and
sub
ljmp
divb
xchg
or
inc
mov
arpl
adc
fs
and
ja
jae
jo
es
sbb
jl
sub
nop
stc
adc
pop
jg
jg
add
jnp
add
push
xchg
add
mov
mov
jmp
out
mov
dec
dec
add
sbb
les
push
add
and
xlat
fs
out
push
jecxz
push
add
fsubrs
ret
pop
in
daa
or
and
pop
lcall
pop
test
jmp
dec
sbb
add
lahf
add
push
inc
or
sbb
clc
push
xchg
pop
adc
cmpsb
add
outsb
dec
pop
inc
inc
add
push
adcw
adc
add
push
pop
ret
jg
jmp
orl
adc
mov
or
aam
les
add
inc
push
ret
fsub
cs
and
xchg
sbb
inc
or
sub
xor
ljmp
sub
out
pop
jo
or
mov
inc
adc
shrb
push
xchg
add
xchg
add
loop
push
enter
mov
pop
xchg
lods
dec
adc
mov
adc
or
or
in
dec
adc
test
pushl
cmp
pop
cmp
in
flds
xor
add
inc
or
inc
and
ja
pavgb
sub
mov
push
add
push
loope
test
pop
movsb
adc
push
aad
sahf
pop
dec
lret
divps
push
add
mov
pop
add
mov
les
cld
cmp
movsl
add
repz
push
dec
add
pop
add
dec
je
cwtl
push
adc
adc
jmp
shr
and
das
mov
add
sbb
push
mov
outsb
loop
jl
push
xor
jno
push
xor
enter
sub
add
sbb
xor
and
add
cli
out
gs
sub
les
aaa
pusha
call
cs
popa
outsb
daa
je
and
insb
outsl
fisubl
sbb
aas
pop
push
jae
ret
and
pop
test
sbb
sbb
add
adc
add
cli
or
mov
sahf
insb
add
mov
repz
and
add
adc
or
add
adc
sub
add
sbb
pop
adc
push
aad
mov
hlt
repnz
mov
mull
and
push
lret
dec
mov
jnp
sub
sbb
xor
inc
push
add
sbb
cmpl
das
dec
add
ficomps
push
movsb
inc
and
cmp
mov
xor
jp
jbe
leave
ja
sti
cmp
aam
inc
mov
and
adc
or
aaa
lahf
ljmp
lds
jb
ret
stos
mov
mov
jl
add
cmp
flds
mov
adc
faddl
xchg
out
test
ret
add
test
xor
sbb
jbe
dec
jns
cmp
xchg
out
add
addb
xor
and
adc
cld
sub
int
push
in
and
and
xor
and
jmp
xchg
jle
les
lock
mov
stos
ret
mov
sub
push
xchg
ret
add
ret
add
cld
leave
mov
sbb
push
popf
fmuls
mov
lock
push
popf
jp
adcb
das
sbb
cmpsb
jnp
adc
and
mov
pop
orl
dec
cld
inc
add
push
negl
pushl
mov
adc
jp
add
mov
call
add
push
jle
loopne
lea
xchg
cmp
add
sub
push
pop
aad
push
add
add
clc
js
fdivs
and
pop
ja
in
xor
sub
lods
adc
mov
xchg
pop
mov
add
jmp
add
dec
stos
xchg
fidivs
xorb
fsubrl
sub
es
cli
cmpsb
imul
jge
out
cltd
jmp
pop
mov
rolb
pop
pop
enter
jl
arpl
add
fwait
add
push
adc
inc
data16
mov
dec
adc
push
lea
mov
ss
push
hlt
adc
aad
loopne
aas
add
rsm
int
nop
stos
inc
sub
in
add
cmp
in
inc
test
stos
loopne
daa
lcall
inc
test
repz
lock
clc
notb
js
jb
dec
add
inc
test
xor
mov
push
ljmp
aam
cwtl
jno
lock
inc
jns
pop
and
enter
int3
push
jo
filds
sub
fwait
and
pop
sti
mov
or
jae
addl
jp
mov
pushf
xor
das
sub
jle
add
out
jo
mov
imul
int3
jno
ljmp
mov
cltd
mov
sti
imul
adc
inc
popf
mov
ret
in
sbb
add
jb
pop
add
pop
xor
adc
cmc
inc
adc
add
xchg
and
ljmp
scas
mov
push
and
test
loopne
test
or
push
test
jo
lods
popf
add
add
jbe
adc
rolb
add
and
or
mov
cmpsl
cmc
lea
push
push
push
jne
xchg
push
jmp
adc
cmpsl
aad
add
or
inc
pop
mov
andb
lds
xchg
cs
push
cmp
sub
nop
cltd
rcrb
sub
add
dec
push
xor
add
cmp
cmp
push
mov
pop
in
mov
popa
push
jb
cmpsb
push
push
and
cmp
and
call
cld
ret
add
repnz
push
dec
add
das
ds
adc
pop
cmp
clc
mov
data16
xchg
add
in
pop
adc
aad
cli
push
test
js
add
mov
mov
adc
add
in
mov
lock
mov
into
adc
mov
lods
sub
adc
push
out
cmpsb
pop
inc
xlat
movsb
sub
sub
or
in
call
loopne
fs
pop
xchg
or
int
mov
sti
iret
stc
add
xchg
fidivrl
xchg
rcrb
add
aas
aad
mov
stos
andb
pop
pop
mov
test
imul
ret
mov
je
add
repz
add
ret
and
mov
add
pushf
sbb
xchg
mov
jl
push
clc
out
and
inc
pop
pop
loopne
add
rolb
mov
orl
mov
lea
inc
add
aad
add
std
loopne
add
or
mov
sahf
std
fld
ja
add
in
xchg
push
cld
inc
mov
sbb
sbb
popa
xchg
lea
push
mov
insb
cmp
push
adc
cli
icebp
add
dec
pop
pop
stc
jg
mov
adc
je
push
jne
inc
xchg
dec
add
sbb
std
fwait
jle
bound
inc
add
mov
add
or
sbb
mov
adc
in
inc
jmp
add
xchg
mov
inc
icebp
cld
adc
xchg
sbb
hlt
test
sub
das
inc
jbe
mov
jp
mov
cmp
add
mov
jge
ja
push
out
cli
mov
sub
adc
sub
mov
push
mov
and
mov
in
ja
jnp
or
sub
clc
push
loopne
enter
add
sub
add
jns
hlt
inc
mov
or
and
xor
or
adc
mov
jmp
addb
cwtl
dec
adc
pop
jg
loopne
mov
clc
nop
sbb
lcall
xchg
inc
adc
loopne
rorl
addb
and
aas
add
dec
and
and
sbb
and
add
mov
xlat
out
imul
pop
pop
bound
fmull
push
cmp
sarb
in
ret
push
nop
and
add
repnz
adc
aad
inc
ljmp
ja
add
clc
cld
movsl
flds
or
shrb
call
add
adc
clc
and
add
mov
push
call
dec
jp
add
andl
lock
ret
add
mov
ja
add
mov
or
add
jecxz
jae
adc
add
and
aam
sub
xchg
test
push
roll
inc
cmp
pop
sub
adc
adc
add
icebp
cmp
adcb
jo
outsl
cmp
sbb
add
xor
inc
or
fninit
add
not
jne
test
repnz
fsubs
or
pop
push
lret
inc
xchg
loop
ljmp
clc
jb
pop
les
mov
sarb
je
xorb
movb
lret
dec
cmpsl
jp
add
sub
addl
mov
xor
pop
jo
hlt
adc
mulb
sub
xchg
outsl
addb
jmp
cli
pop
rcrb
fnstcw
ret
ja
xchg
aas
repnz
repz
jae
nop
negl
gs
adc
popa
cmp
add
and
jb
push
dec
jp,pt
pop
clc
push
and
lock
out
push
add
test
jne
push
push
nop
add
mov
fmul
fimuls
mov
inc
pop
or
test
and
sub
dec
add
xchg
lock
xor
pop
cmpsl
push
dec
cmp
jmp
decl
pop
invd
cs
notb
mov
call
inc
outsl
lcall
lea
push
dec
inc
jmp
and
ret
movl
loope
lea
ficoml
and
pop
test
mov
xor
cs
add
lret
pop
mov
mov
movsl
mov
pop
test
test
dec
daa
mov
pop
in
dec
cs
and
les
lcall
cmp
xchg
ret
daa
add
icebp
and
aaa
xchg
mov
je
dec
pop
cmp
mov
xchg
push
add
mov
adc
push
sbb
push
mov
mov
movsb
sub
adc
shr
add
addl
loop
dec
imul
push
stc
jl
add
push
lea
inc
jmp
insl
call
pushf
adc
add
call
outsl
mov
andl
scas
ret
leave
out
cli
enter
stos
loopne
or
mov
and
or
loop
push
test
push
or
repnz
out
movsl
pop
daa
add
jge
add
in
repz
add
clc
cmp
add
test
pmuludq
adc
cmp
ret
pop
sbb
inc
into
and
call
adc
pusha
add
enter
and
inc
add
pop
mov
mov
ljmp
sub
jge
add
jnp
push
and
fs
lock
jno
mov
rorb
or
add
mov
inc
add
mov
ficoml
cmp
xor
cltd
jle
aam
pop
add
and
cmp
inc
mov
mov
add
mov
rep
xor
scas
mov
or
mov
ret
push
call
loopne
adc
add
mov
rolb
dec
ja
pushl
inc
add
mov
add
pop
sub
stos
pop
pop
xchg
xchg
push
mov
sub
jno
pop
dec
sbb
js
shll
sbb
mov
xlat
dec
fs
add
push
cld
adc
hlt
xchg
es
stos
out
pop
cmp
jae
sbbb
adc
testl
dec
pop
out
push
or
js
bound
inc
jecxz
sbb
dec
lret
enter
pop
push
dec
jl
add
jl
sbbb
add
inc
mov
lods
add
cmp
add
jle
out
jmp
fidivrl
dec
scas
dec
push
add
call
sub
mov
frstor
mov
push
lcall
ror
std
dec
jo
and
maskmovq
notl
mov
dec
adc
and
dec
add
add
cmp
cmpb
cmpl
pop
cli
jns
and
data16
dec
xlat
test
add
inc
cmp
mov
xor
inc
push
push
ds
push
js
cmp
rorb
add
lcall
inc
mov
es
xor
or
out
faddl
mov
dec
pop
fs
adc
cmp
test
clc
mov
sub
dec
in
add
lock
into
push
fdivl
jnp
pop
lcall
push
subb
fadd
fadds
in
shll
jmp
ret
dec
and
jle
dec
mov
pop
sbb
shr
mov
divb
cmpsb
add
stos
hlt
scas
insl
mov
jns
add
std
xor
ja
xorps
rcrb
dec
rcrb
add
scas
sbb
add
add
call
cmp
ficoml
push
add
lea
xchg
std
adc
sarb
sbb
add
pop
push
dec
add
xchg
mov
jae
sbb
adc
mov
ret
add
test
les
pusha
call
sahf
jae
jge
js
jo
cli
pop
mov
xchg
rcrl
hlt
das
xchg
dec
or
adc
mov
arpl
xchg
xor
adc
sbb
xchg
cs
or
sbb
shl
jp
pusha
push
or
out
adc
lock
push
add
and
mov
mov
add
pop
cmp
je
test
or
dec
jae,pt
cmp
pop
outsb
in
sbb
add
and
rcll
cld
xchg
fadd
sub
push
add
lcall
add
sbb
dec
jne
outsl
xchg
addr16
xchg
imul
jl
jmp
mov
and
push
dec
xchg
fistl
add
ret
push
adc
inc
addr16
add
aad
add
fimull
addb
ja
push
jne
aam
sbb
enter
sbb
ljmp
xchg
push
imul
add
enter
in
ja
add
pop
je
add
jmp
cld
push
nop
jno
add
cs
sbb
dec
aad
push
adc
scas
sub
std
rolb
xrelease
scas
mov
jne
addr16
pop
lret
cltd
xor
ret
dec
adcb
inc
add
insb
push
pop
dec
and
das
mov
fiaddl
int
xchg
inc
cwtl
add
push
cltd
ret
pop
jl
nop
add
imul
inc
push
outsl
dec
jne
pop
add
mov
mov
xchg
lcall
dec
stos
data16
xchg
nop
aad
add
call
into
cmovs
loopne
jge
rcll
cmp
or
cmp
or
add
ret
inc
and
into
rorb
add
lock
movsl
adcb
loopne
cmp
and
dec
mov
pop
inc
cmp
inc
fs
les
test
pusha
add
jo
popf
add
into
ljmp
decl
jle
or
pop
add
mov
ficoms
js
or
es
mov
cmp
and
pop
ret
rcr
and
mov
add
pop
push
inc
mov
add
movzwl
add
xor
add
pusha
or
cmp
push
je
push
add
push
or
es
add
mov
add
repnz
push
cli
xor
inc
or
pop
test
rorb
repnz
sub
repz
daa
imul
sbb
cltd
sbb
in
add
sti
or
and
incl
and
jmp
or
push
mov
pop
add
call
subb
es
or
je
out
mov
push
jmp
push
cmp
push
adc
push
inc
stos
and
cmp
add
mov
and
call
add
idivb
push
out
pop
mov
and
lcall
adc
adc
iret
inc
bound
mov
mov
inc
popf
mov
movsb
cmp
mov
aad
add
push
in
push
clc
add
xchg
dec
add
sub
dec
xchg
dec
adc
xor
test
mov
jae
inc
add
fiaddl
loope
cmp
fmul
add
fadds
cmp
xor
sbb
push
or
fwait
xchg
dec
xchg
xchg
rolb
add
cmc
push
stos
in
inc
dec
add
inc
xchg
add
xchg
adc
mov
add
xchg
ja
cmc
fcmovnb
push
clc
and
fildll
addb
mov
into
add
sbb
pop
jle
pop
inc
sbb
cmp
push
and
pop
xor
sbb
push
test
pusha
aam
xor
sbb
xchg
adc
push
in
pop
adc
mov
jmp
aaa
push
aas
push
movsl
addb
or
jg
mov
inc
adc
mov
loopne
dec
fiadds
push
sbb
mov
sti
jmp
insb
ret
cmp
aam
dec
push
js
adc
repz
testl
and
push
and
add
dec
aam
cmpsl
and
loop
jg
je
loopne
mov
loopne
sbb
xchg
repnz
push
mov
push
cli
rorl
xchg
aas
ret
lea
test
inc
mov
sub
cmp
jle
xor
sub
add
lret
in
pop
loopne
cmp
add
jae
add
push
call
divb
pop
dec
add
mov
add
pop
sub
and
push
push
adc
xchg
and
out
inc
pop
pop
push
mov
roll
addr16
dec
jb
and
cmp
mull
dec
add
sbb
lahf
movb
inc
mov
gs
shr
add
add
add
cmp
adc
mov
shlb
dec
push
add
adcl
ja
ds
inc
cmpsl
clc
jne
or
cld
push
or
filds
ret
or
insb
and
iret
hlt
lahf
add
dec
test
in
je
orb
cmp
dec
pop
mov
stos
loope
popa
cmp
or
vpmadcsswd
loope
aaa
pop
xchg
push
in
inc
mov
dec
in
lea
mov
jge
mov
ret
pop
jno
out
lret
pusha
lcall
mov
jbe
push
ljmp
xchg
cld
pop
pop
sbbb
add
sbb
loopne
sbb
jl
pop
aam
fmul
orb
hlt
je
add
movsl
and
fcoms
in
mov
push
in
mov
pop
and
sub
les
dec
fcoml
add
push
outsb
stos
xor
push
lret
fcomp
mov
add
add
push
add
or
bnd
adc
pop
out
loope
in
or
add
testb
jb
add
leave
aas
push
add
adc
inc
adc
xchg
xchg
cmp
imul
std
jle
leave
nop
add
repz
je
add
ss
xchg
xchg
test
add
popl
sub
dec
inc
inc
push
roll
mov
xchg
mov
cld
aas
add
lahf
enter
dec
lcall
mov
pusha
jmp
inc
sub
add
std
mov
and
cmpsb
inc
adc
push
sarl
lock
jmp
cld
paddusb
inc
jmp
rorb
test
ss
in
sub
nop
xorl
push
mov
inc
fadds
cmp
lea
fucomi
push
lcall
mov
jnp
jecxz
cmp
xchg
daa
push
pop
jno
iret
add
sbb
dec
add
rcrl
inc
bound
inc
into
pop
data16
xchg
and
inc
pop
dec
and
add
or
stc
mov
jo
sbb
sub
aaa
sbb
sbb
cmp
pop
es
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
loope
call
adc
xchg
sub
addl
add
fisubrs
xorb
push
mov
or
add
fiadds
ja
sbb
xor
inc
rorl
push
adc
push
lods
mov
sub
sti
cmp
mov
ret
cltd
mov
pop
add
popa
xor
add
xchg
inc
sub
sbb
das
or
nop
es
jecxz
aas
add
mov
and
int
and
roll
add
daa
add
rcrb
push
pop
les
mov
add
xchg
add
pop
add
inc
frstor
add
jge
add
push
clc
in
jg
add
adcl
add
inc
xor
push
add
inc
mov
add
pop
cld
or
jp
pop
push
leave
and
sarl
mov
in
cld
enter
add
rcrl
sub
add
pop
mov
rcrl
cmp
scas
dec
std
sti
cmpsb
add
and
inc
sbb
mov
movsb
or
xchg
inc
xchg
pushl
and
das
icebp
fwait
mov
shll
push
mov
add
popa
sub
addb
mov
jge
pusha
leave
inc
aam
mov
add
and
cmpsl
shll
insb
jno
add
jmp
ss
push
add
mov
idivl
inc
push
dec
outsl
jne
mov
sti
pop
aad
and
jle
xor
test
dec
push
xchg
jne
and
and
and
ljmp
jae
mov
add
dec
hlt
lock
lret
lds
rcrl
xchg
adc
loope
xor
pop
sbb
xlat
das
jb
jecxz
cmp
ror
in
jmp
or
clc
ret
xchg
out
mov
adc
sub
inc
push
ret
out
mov
sub
dec
lods
dec
shr
mov
mov
ds
fisttpll
push
mov
out
sub
in
movsl
shlb
push
pusha
adc
adc
lahf
cmp
jo
add
sub
mov
sbb
push
fmuls
xchg
jne
add
cli
inc
xorb
push
sbb
jne
nop
or
jno
pop
add
js
loopne
je
push
addb
cld
adc
cmpl
adc
add
idivb
cld
imul
and
mov
je
sbb
sbbl
add
pop
je
adc
bound
jmp
idivb
js
mov
and
inc
ds
xchg
je
pop
push
and
aad
jg
mov
push
pop
ja
add
jae
lea
fldl
shll
iret
test
cmp
in
push
dec
or
insb
add
adc
add
inc
stos
push
dec
seto
mov
ja
nop
lods
mov
push
add
xor
dec
iret
lret
shlb
mov
sbb
mov
mov
daa
sbb
mov
xor
inc
jne
sbb
cmpb
fwait
rcrl
shl
add
and
in
enter
les
dec
inc
inc
aad
jmp
push
add
loope
cs
ja
push
xor
ret
mov
push
pop
add
pop
adc
add
push
scas
xor
punpckhbw
pop
mov
pop
xchg
push
mov
test
mov
add
or
pop
lock
add
mov
sub
stc
pop
pop
repz
pop
je
in
jb
sub
enter
cld
xlat
sbb
cwtl
dec
cs
js
pop
add
mov
incb
mov
or
jecxz
sub
dec
pop
mov
aas
jae
add
cmp
xchg
scas
jne
sbb
add
add
adc
add
fcom
mov
cmp
sbb
out
add
and
repnz
pop
sbb
xorb
mov
dec
stos
cmp
adc
loop
sub
mov
mov
mov
mov
inc
out
mov
or
ds
cmp
das
daa
jle
idivl
hlt
cmp
xor
and
add
call
int
cmp
jae
lcall
mov
mov
adc
or
sbb
sub
bound
pop
sub
clc
add
out
dec
xchg
jmp
mov
xchg
mov
pusha
jl
push
scas
inc
xchg
loopne
lods
add
xchg
push
movb
add
jmp
or
and
push
adc
sub
jns
push
sub
mov
jae
movb
lea
lods
mov
add
mov
pop
and
mov
sub
mov
pop
sti
shlb
push
shll
imul
jne
cmp
push
sub
mov
jle
std
add
call
push
add
loopne
faddl
pop
fcom
push
repz
xor
sti
scas
mov
or
gs
pop
andb
pop
js
push
mov
loopne
sub
add
cmc
mov
pusha
xchg
mov
inc
push
addl
inc
sbb
mov
jg
lsl
push
movsb
loopne
clc
leave
add
push
lock
mov
add
jbe
insl
inc
mov
add
popf
subb
pop
xchg
inc
dec
ljmp
add
ja
sbb
mov
add
sbb
addb
lds
jbe
mov
lret
movsb
fsts
or
xchg
movl
mov
cmpb
mov
int
lea
das
arpl
adc
mov
addb
mov
ljmp
je
mov
shrb
jns
addr16
sbb
loop
repz
add
imul
add
fmuls
pop
adc
icebp
aam
in
jge
pop
cmp
repnz
je
int3
bound
xchg
or
or
add
mov
pop
add
ret
rolb
stos
or
cmp
shll
mov
test
add
adc
sti
pusha
sub
loope
cs
adc
xchg
aas
add
inc
jo
mov
add
ja
xchg
nop
pop
subl
dec
shlb
adc
hlt
add
and
mov
add
and
jb
fcomps
mov
push
add
jb
add
and
dec
xor
adc
je
add
xchg
add
hlt
loopne
incl
pop
and
addr16
adc
add
mov
push
mov
and
or
and
loopne
or
loop
in
sub
je
push
negb
push
sbb
shll
dec
in
sub
add
nop
movsb
mov
cmpb
daa
ja
xor
inc
jno
mov
sbb
add
pop
add
mov
add
fcom
pop
or
inc
test
dec
int
mov
lret
jg
out
add
sbb
cmp
add
ss
xor
movsl
adc
mov
push
popf
in
jmp
cltd
or
mov
jne
add
cmpsl
lret
adc
mov
xlat
ljmp
mov
jbe,pt
or
add
out
add
out
mov
fildll
aam
mov
add
lock
mov
add
pop
clc
push
push
loop
add
xor
cmpsb
bswap
sub
mov
mov
inc
push
les
xor
repnz
rcrb
add
clc
jne
push
mov
pushf
inc
clc
int3
pop
mov
inc
insb
and
cmp
in
pop
adc
aad
cmp
lock
fstpt
out
sbb
push
in
xor
adc
fs
push
cmp
popa
cmp
inc
clc
mov
cli
or
mov
sub
and
xchg
jg
shrb
dec
cmp
jb
and
pop
repz
inc
inc
pop
sbb
add
sub
mov
mov
aaa
call
bound
mov
dec
add
inc
in
or
cmc
push
test
fcoml
sbb
dec
sbb
inc
gs
je
popa
icebp
cld
fs
jp
jae
and
imul
shll
add
stc
sbb
insl
adc
and
mov
bound
add
loope
fnstsw
lods
add
jge
pushf
add
cs
bound
lret
ds
addl
out
js
mov
cmp
test
sahf
sub
loop
movsl
add
call
add
rorb
je
and
jle
add
out
stc
fs
inc
add
sub
adc
lret
add
aas
jmp
call
add
xchg
cmp
les
stos
sbb
pop
call
out
push
add
adc
dec
push
dec
add
mov
jp
leave
lret
jne
push
cli
ret
add
add
push
pop
clc
repz
into
adcb
movsb
add
imul
or
es
push
lret
cmp
sub
cmp
inc
sub
enter
mov
mov
je
mov
ljmp
pop
mov
push
in
arpl
js
sub
sbb
inc
add
in
call
add
mov
in
outsb
push
mov
sub
in
sti
adc
add
xchg
push
add
in
add
loopne
andl
add
sub
sahf
pop
shl
jge
push
lock
push
mov
ss
cmp
add
shlb
imul
jge
push
cmp
je
add
pop
pop
pop
nop
repnz
xlat
add
wbinvd
in
shrb
pop
dec
ret
cld
lock
push
pop
in
xor
inc
inc
cmp
mov
mov
cld
mov
sbb
xchg
notl
sbb
in
add
add
jo
cmp
adc
push
hlt
fmull
add
loop
arpl
jnp
add
jl
js
add
sbb
add
testb
or
pop
dec
add
xchg
cmp
and
sbb
lock
mov
xchg
lods
sbb
add
xchg
mov
jae
jg
add
les
jmp
push
jge
xor
jle
xor
loopne
outsl
push
jp
pop
das
add
jmp
lret
push
xor
and
push
mov
rcrb
push
mov
mov
fs
sub
cmp
cld
out
add
pop
bound
sti
std
popa
add
mov
clc
arpl
sbb
fldcw
and
testl
dec
jecxz
jns
into
fldl
cmp
lods
fcoms
add
jo
mov
jne
adc
lahf
push
push
iret
pop
sar
dec
in
mov
push
mov
adc
add
mov
dec
add
sub
cmp
and
aad
mov
inc
sub
rorb
insl
out
sub
data16
lcall
xchg
inc
cld
push
setae
and
icebp
or
addr16
push
add
iret
into
sbb
mov
adc
add
adc
popf
dec
pop
mov
add
lods
push
lret
adc
xchg
add
dec
or
adc
xchg
sub
xor
inc
or
and
fnstenv
rcll
jmp
ds
add
in
mov
jne
push
sub
data16
inc
cmp
jmp
test
cmp
stos
clc
jo
xchg
orb
xor
pop
das
je
fcomip
cmp
mov
sbb
push
cmp
pop
inc
xor
add
mov
dec
adc
and
imul
enter
subps
sahf
pop
push
jae
addl
lea
clc
je
mov
adc
add
enter
cs
add
stc
mov
inc
js
pop
xor
xchg
jo
push
mov
xchg
lock
ds
iret
pmulhw
jmp
insb
inc
push
rorb
mov
pop
lods
inc
clc
add
mov
pop
jns
movsl
add
dec
rolb
inc
dec
add
or
or
lock
and
call
pop
mov
add
inc
dec
in
inc
add
push
pusha
add
pop
sbb
jne
movsb
add
mov
sub
and
fadds
jmp
enter
jl
and
push
sbb
incb
jb
xchg
mov
xor
add
mov
dec
shlb
and
gs
outsb
jecxz
test
orb
aas
inc
pop
sets
cmp
mov
sbb
dec
nop
mov
out
rclb
adcb
mov
test
das
push
ds
dec
jb
xchg
cli
jmp
out
add
cld
and
adc
jne
add
mov
nop
cmc
inc
fbstp
pop
pop
xor
ficoms
add
and
jp
mov
stos
lcall
jg
cmc
mov
xchg
jns
pop
ret
jbe
lahf
push
loopne
fdiv
mov
out
orb
test
mov
inc
add
mov
shrb
addl
jge
and
add
dec
test
adc
mov
stos
lcall
pop
push
movl
fistps
call
add
jle
sbb
push
jmp
in
in
test
add
dec
sbb
add
mov
outsl
cmp
adc
and
or
mov
incb
push
xor
add
gs
sbb
and
pop
add
les
add
ja
clc
sti
sub
jecxz
pop
adc
inc
and
dec
sub
insl
and
add
sbb
addl
jns
dec
cmp
xchg
mov
xchg
add
pusha
inc
sub
add
push
subb
stc
sub
pop
gs
add
pop
out
sbb
mov
call
inc
das
pushf
mov
or
and
add
enter
jb
je
inc
mov
add
orb
xor
in
ret
fcoml
mov
pop
testl
push
and
add
push
or
dec
add
aad
and
adc
cmp
test
push
adc
push
sbb
push
push
xor
pop
repnz
aas
inc
xor
push
add
add
add
mov
stos
cmp
lcall
adc
push
add
pusha
and
dec
inc
xchg
cmp
xorl
leave
test
xor
into
push
idiv
pop
mov
add
inc
movsl
addb
adc
cltd
or
dec
adc
arpl
dec
lods
push
les
mov
adc
stos
inc
out
mov
orb
and
add
leave
mov
js
add
test
cmp
and
and
fiaddl
push
cmc
adc
daa
scas
movsl
add
jmp
pop
pop
aas
pop
std
shlb
in
scas
icebp
push
mov
mov
or
add
inc
popa
sub
mov
add
and
out
dec
or
cmp
jg
xlat
adc
loopne
dec
std
add
jle
cwtl
or
xchg
loopne
mov
test
out
dec
addb
fidivrl
lds
imul
sbb
or
jle
faddp
xchg
daa
sub
pop
mov
jp
xchg
in
inc
into
jle
xchg
jl
mov
in
add
fstl
push
pop
dec
adc
sti
xorb
cmp
sub
hlt
das
mov
test
je
cvtps2pd
dec
imul
and
in
jg
sub
pop
or
iret
aas
sbb
cmp
cli
mov
adc
xchg
cmp
sbb
add
xchg
ds
add
cld
add
or
jo
xor
push
push
ds
sbbb
cmp
inc
sti
pop
inc
adc
dec
push
sarb
jbe
gs
test
dec
into
repz
andl
add
ja
push
cmc
out
mov
daa
adc
and
add
dec
mov
enter
add
push
and
fmuls
inc
pop
ja
push
mov
je
add
pop
and
adc
push
sbb
add
or
inc
mov
and
adc
stc
loopne
addb
push
testb
cld
or
test
xchg
sahf
xchg
rcrl
fists
push
pusha
add
call
movsb
push
add
mov
add
nop
repz
and
sbb
xchg
sub
jns
pushf
sub
jo
jae,pn
xchg
add
push
imul
and
cmpsl
je
jmp
cmp
jbe
add
xchg
test
xchg
out
add
inc
js
rolb
mov
clc
les
dec
cmp
dec
out
repz
and
imul
inc
add
in
insb
inc
test
test
push
movsb
sbb
add
and
fsubl
js
int3
pop
or
xchg
addb
mov
add
lcall
add
mov
mov
lcall
clc
ret
push
nop
push
adc
or
or
add
sbb
pop
call
or
mov
faddl
sbb
mov
and
movsb
add
pop
and
lock
andl
das
call
xor
add
cmp
movsb
and
add
sub
mov
add
mov
lods
add
adc
loopne
xor
pop
xor
scas
add
or
and
pusha
hlt
and
or
int3
push
mov
lret
mov
push
enter
loopne
fcoml
dec
sbb
xchg
adc
stc
and
sbb
test
sub
or
and
je
xor
mov
jne
fs
adc
lods
dec
aas
add
lods
pop
arpl
add
test
cmp
cmpsl
or
add
rclb
pop
mov
mov
cmp
jo
pushf
inc
shrl
jle
pop
and
dec
pop
icebp
insb
jbe
subb
fcoml
lods
adc
cld
insl
add
and
fs
push
jne
mov
pop
mov
add
adc
dec
push
inc
sahf
mov
movsb
or
push
sub
and
testl
sbb
mov
push
lea
adc
test
sbb
or
and
andb
out
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
sbb
cmpb
inc
mov
pop
adcb
in
or
dec
rol
push
or
xor
aam
adc
stc
rcrl
sbb
repz
fmuls
loop
add
jl
movsb
add
pop
adc
pop
or
pop
es
dec
je
add
mov
xchg
and
pushf
dec
movsb
xchg
xchg
repz
aam
fdivr
in
in
sti
hlt
clc
cld
add
add
adc
sbb
les
pop
xchg
xor
cmp
pop
dec
icebp
push
pop
clc
in
fs
insb
jo
jl
test
dec
cmpb
cmp
inc
and
ds
add
or
rorb
fs
mov
mov
addb
and
mov
in
pop
loop
gs
add
and
adc
add
xchg
sub
inc
dec
dec
dec
add
incl
push
pop
pop
add
in
add
inc
dec
push
dec
adc
addr16
insl
pop
outsb
scas
add
add
add
and
imul
fcoml
mov
cmpsl
add
call
je
push
xor
inc
cwtl
mov
pushl
adc
or
xchg
xor
and
inc
xor
cmp
inc
add
imul
lock
nop
sub
sbb
inc
cmp
and
je
mov
mov
add
sbbl
and
and
pop
add
lea
cmp
add
push
scas
mov
sbb
hlt
add
sbb
js
add
push
xchg
divl
test
mov
or
cmc
add
jecxz
mov
pusha
insb
add
clc
daa
push
and
cwtl
gs
popl
xchg
psubsb
test
cltd
pop
jo
or
jg
add
add
mov
jne
adc
movsb
or
jle
add
xor
loopne
in
jo
inc
cmpsl
or
int3
dec
clc
xchg
or
movsl
pusha
cmp
jecxz
adc
dec
nop
test
mov
shlb
xor
cmp
inc
inc
push
add
and
rcl
mov
ds
cwtl
push
add
add
add
add
pop
pusha
or
push
or
femms
inc
adc
add
cltd
or
and
sarb
and
xor
add
push
fwait
loopne
rolb
xchg
adc
nop
jbe
add
sbb
pushf
sbbb
test
and
adc
xlat
mov
mov
and
daa
jp
sub
and
push
mov
xor
cmp
add
push
aas
add
adc
loopne
xor
mov
ds
xor
push
ss
cltd
add
xor
les
cmp
dec
xchg
add
inc
pop
mov
adc
add
arpl
xor
xor
sbb
jo
fstps
sahf
call
scas
and
mov
adc
pushf
cmp
pop
cltd
jns
insb
ret
shll
loopne
add
les
jne
add
sub
fsubl
andb
loopne
and
mov
sbbb
or
and
pusha
adc
mov
add
aam
test
pop
sbb
or
inc
add
push
dec
cltd
mov
mov
fldenv
inc
xor
gs
or
pushf
mov
sbb
add
sub
inc
notl
lea
sub
flds
pop
adc
mov
mov
xor
xor
test
je
hlt
outsl
pop
inc
cmp
rcll
xchg
jnp
ret
movsb
or
sbb
pushf
adc
add
movsl
lods
dec
pop
sbb
imul
xor
add
movsb
fcomp
test
popa
dec
or
dec
repnz
jns
inc
and
jp
data16
cmp
enter
hlt
jne
mov
add
adc
xchg
pusha
push
lcall
mov
popa
insb
in
adc
xor
add
pop
mov
test
jo
mov
and
lods
xchg
or
pushf
xor
mov
inc
mov
nop
add
push
inc
push
add
jl
mov
push
lods
mov
xchg
nop
xchg
push
jo
xchg
sbb
enter
add
jl
lea
add
or
loope
cwtl
add
and
inc
mov
pushf
sarb
fwait
add
sub
push
xchg
aas
xchg
adc
push
lods
xchg
cli
mov
pop
cltd
xor
or
dec
aam
loop
and
inc
decb
pusha
push
xor
and
lahf
jle
nop
mov
fdivrp
lock
mov
iret
cmp
iret
dec
rcrb
and
std
sarb
mov
sub
xchg
rclb
ss
sub
push
adc
adcb
add
aam
in
hlt
add
xchg
sbb
adc
daa
jle
add
inc
fs
and
test
xor
mov
sbb
sub
cmp
add
mov
cmp
xchg
aam
loop
lock
adc
cmc
pop
add
cwtl
stos
mov
push
lret
decb
or
and
lods
sbbb
xchg
mov
shl
loopne
and
cmp
xchg
jg
add
orb
push
add
sub
or
xor
scas
movsb
in
fs
je
jle
lcall
xor
add
outsb
pop
insb
xor
add
adc
inc
xchg
leave
add
into
outsb
out
push
fs
add
insl
inc
inc
xor
add
jne
in
jnp
add
jmp
adc
xor
dec
lret
pop
push
loopne
fidivrl
mov
sbb
add
jp
xor
in
jne
incb
xor
mov
outsl
arpl
call
sbb
sbb
cmpsb
sub
in
adc
push
push
imul
push
shl
add
inc
jns
xor
add
lock
je
mov
dec
or
add
jo
std
xchg
push
je
imul
popa
mov
jmp
mov
and
push
xchg
add
or
jl
add
jb
jno,pt
into
add
xor
dec
outsl
cli
add
outsb
stc
or
inc
dec
adc
inc
imul
insl
push
push
pop
push
dec
push
adc
mov
fsubl
insl
add
push
xor
add
push
sub
mov
sbb
inc
pushf
inc
xor
jae
sub
rcrl
push
mov
push
outsb
push
inc
cmp
push
inc
cltd
fidivl
shlb
push
outsl
xchg
add
add
cmp
addb
aam
or
pop
push
sbb
rep
lock
shlb
fs
mov
and
sub
xchg
add
imul
jo
and
jp
cmp
xchg
jno
add
jne
jb
lret
dec
xor
inc
mov
jge
add
addr16
dec
incl
sahf
popa
mov
dec
add
mov
or
jnp
sub
jo
movsb
dec
repnz
pop
push
inc
xchg
add
add
sub
cmpsb
cmp
add
aam
mov
and
popa
jne
sub
mov
in
mov
hlt
pushw
sub
outsl
cwtl
mov
sub
lcall
lods
or
mov
mov
aam
movsl
add
test
call
inc
sbb
ficoml
stos
dec
pop
sub
mov
lahf
sub
and
aas
dec
fiadds
adc
in
xchg
inc
xchg
pusha
add
loop
insl
inc
jo
add
push
mov
lds
jp
adc
or
push
inc
or
mov
es
lds
movsl
sbb
add
sub
inc
out
and
mov
in
lods
repnz
xor
imul
dec
sbb
div
push
test
int3
push
insl
repnz
xor
xor
mov
add
cmp
add
mov
add
mov
sub
jbe
or
movsb
cld
add
aas
pop
popa
arpl
repnz
push
add
ja
xchg
and
inc
hlt
out
fwait
and
addb
imul
mov
jne
jle
add
sub
xor
pop
cmovne
cmpsl
mov
filds
add
pop
pop
cmpsl
adc
cmp
add
add
in
and
jo
adcb
pop
or
pop
out
fcom
js
sub
xchg
inc
xor
inc
ret
in
add
movsb
out
shll
add
loopne
test
cmp
and
add
mov
pushf
add
sub
aam
sbb
cmp
adc
xchg
test
ljmp
push
xor
and
mov
sub
mov
cmp
repz
adc
dec
cmp
test
in
repz
xchg
aaa
add
sub
push
add
sub
inc
stos
inc
insb
in
add
and
sbb
popa
mov
gs
or
mov
add
jge
or
cwtl
movsl
mov
or
mov
pop
jle
push
and
js
push
sbb
xchg
outsb
fiadds
into
push
sarb
cmp
aad
pop
movsl
add
hlt
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
decb
lods
xchg
add
je
jbe
js
add
jl
jle
nop
mov
cmp
es
pushf
inc
loopne
popa
and
push
leave
push
sarl
add
sbb
cmp
ret
push
aad
fistps
je
add
xchg
cmp
daa
sbb
cmp
pop
sub
js
jp
jl
jle
jle
jle
jle
push
pop
cmp
add
inc
sub
xchg
or
popf
adcl
push
movb
sbb
xor
jg
add
cmp
faddl
sbb
cmp
aaa
add
push
pop
pop
call
xchg
hlt
in
clc
hlt
or
andb
add
sub
jmp
stc
mov
sti
andl
pop
add
or
pushf
xor
popf
add
test
cmp
xchg
mov
out
out
ret
sbb
push
xchg
mov
push
subps
and
xchg
les
lret
push
jle
sbb
xor
popf
pop
sbb
mov
lahf
xchg
pop
out
cmp
add
or
daa
sbb
addr16
lock
mov
xchg
out
leave
mov
xchg
add
fnstcw
jb
je
jbe
add
dec
xorl
mov
leave
rcl
push
add
cmp
push
test
iret
lock
hlt
add
loope
icebp
imul
dec
cmp
scas
add
loop
or
sub
mov
ret
rorl
aas
cmp
enter
int3
sbb
pop
pop
out
xchg
xor
push
enter
iret
je
xor
inc
fmuls
add
jp
jl
jle
repnz
xor
popf
dec
sbb
push
pop
lahf
fs
nop
sub
js
push
xchg
hlt
mov
mov
sbb
inc
cmp
cmpsl
imul
mov
jmp
cld
call
ss
pop
sarl
sti
cmp
addb
insb
adc
xchg
dec
xchg
cmpsl
add
xor
in
mov
mov
loopne
in
std
call
sub
jbe
sbb
cmp
popf
add
sbb
loop
add
inc
lds
test
mov
mov
add
add
push
leave
loopne
sar
and
cmp
add
push
icebp
cwtl
lret
push
push
adc
xor
mov
rcrb
jecxz
repnz
mov
pusha
sbb
repz
fcompl
in
in
pop
testl
call
sub
sbb
aas
push
dec
pop
mov
orb
dec
xchg
lcall
iret
shl
add
je
cmp
js
jp
jl
jle
test
ja
jns
jnp
jge
jg
add
sbb
aaa
sbb
sahf
dec
push
test
xchg
xchg
lahf
scas
pop
mov
mov
lahf
lahf
ficomps
testb
daa
pop
push
inc
push
addr16
ss
push
out
inc
iret
dec
inc
push
bndldx
outsb
hlt
jbe
jle
lret
aas
cs
outsb
sahf
scas
cmpsb
out
scas
das
mov
mov
iret
iret
fmulp
out
out
iret
test
push
push
cmp
dec
push
add
cs
add
cmp
adc
in
hlt
add
jle
cs
hlt
enter
sub
call
fcoml
cld
inc
dec
dec
mov
pcmpgtb
je
jl
and
cld
xchg
cld
pushf
cld
movsb
cld
lods
cld
mov
mov
int3
aas
aam
fdivrl
in
in
ds
pusha
add
cmp
cmp
sbb
and
sub
xor
aas
in
call
pop
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
mov
aam
fsubl
stos
xchg
cld
xchg
mov
add
sbb
and
sub
xchg
int3
push
add
jl
test
inc
mov
mov
loopne
hlt
pop
cli
cmpb
or
js
dec
mov
cmp
cmp
pop
cmp
insb
aas
jo
je
js
sub
xchg
jl
jmp
stc
enter
rcrb
pop
loopne
push
adc
ds
and
cmpsl
add
les
pop
out
je
insb
in
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cld
movsb
cld
cld
int3
cld
sar
aam
in
xorl
call
add
push
sub
xor
xor
loope
xchg
pop
inc
dec
xor
dec
test
sub
aas
mov
adc
dec
sub
and
lock
xor
div
cltd
mov
pusha
aam
and
push
pause
push
xor
mov
je
jbe
add
call
mov
ret
clc
sar
jo
add
add
or
cmp
cmp
lahf
dec
xchg
add
insb
pop
cmpsl
outsb
pusha
out
jo
cwtl
in
pushf
lock
lods
stc
mov
sbb
jle
add
addb
mov
and
inc
add
dec
dec
or
add
pusha
xchg
subb
leave
pushf
shll
mov
cmp
rolb
and
loopne
pop
add
lods
xlat
add
cs
lahf
sbb
xchg
and
dec
and
pop
iret
pusha
leave
shrl
insb
loope
jno
lock
pop
jl
xor
dec
and
es
jle
add
out
je
xor
cmp
adc
and
sub
std
lahf
add
mov
in
js
jl
sbb
test
mov
adc
iret
enter
rol
aam
fmuls
loopne
jb
dec
call
add
sub
hlt
cmp
mov
fidivrl
js
jp
jl
mov
push
mov
leave
fsubs
pop
in
dec
pop
mov
shlb
adc
xor
cmp
jo
or
clc
add
push
rorb
dec
lcall
stc
clc
int
add
push
pop
jno
cld
cmp
inc
inc
push
outsb
mov
jp
jle
popf
xchg
and
sub
push
pusha
into
cmpsb
cmp
add
or
xorl
test
add
es
nop
dec
shrl
or
lahf
add
push
sbb
addl
xor
ss
daa
dec
add
rcrl
stos
shlb
out
pop
and
cmp
mov
cmpsl
add
repnz
xor
out
xor
faddl
loope
cmp
pushf
shll
scas
ljmp
pop
add
sub
imul
js
iret
mov
jno
popa
jg
movsl
fsubrs
xor
pop
add
ljmp
ret
int
xchg
es
push
or
test
rclb
das
pop
add
js
xchg
cwtl
scas
adc
mov
or
or
add
fsub
mov
mov
sbb
sub
mov
in
dec
sti
orl
es
add
insl
dec
movb
sub
sub
mov
ret
iret
popf
aad
ficompl
jmp
lock
add
and
sub
push
push
clc
push
add
into
jns
jb
je
add
inc
movb
xor
and
int3
and
or
cmp
sbb
xor
cmp
imul
aas
xchg
pop
or
out
loope
cmp
leave
sub
popa
pop
inc
jmp
mov
and
sub
mul
adc
cmp
cmp
andb
sbb
xor
add
jnp
hlt
cmp
mov
mov
fmuls
add
movsl
cmpsb
call
add
jecxz
xchg
jp
add
mov
mov
sub
cmp
movsl
mov
jmp
ret
les
add
xchg
jo
lret
add
adc
mov
shlb
fcompl
mov
mov
stc
shlb
aas
add
cs
or
cmp
ficoms
fstps
jae
sub
add
loop,pn
inc
in
int3
dec
in
or
out
test
push
mov
nop
ljmp
in
call
shl
stc
jle
add
in
popf
cs
jne
stos
add
cltd
clc
and
and
sub
and
stc
cmp
sahf
add
pop
pop
xchg
pusha
mov
sub
add
and
adc
push
dec
jo
or
jp
dec
pop
or
cli
mov
mov
xchg
xor
movb
fidivl
or
nop
pusha
mov
ud2
xor
xor
add
ljmp
notb
pop
cmpsl
test
inc
jb
xchg
add
lds
in
push
shlb
dec
push
add
add
dec
out
dec
pop
mov
jae
test
fwait
ror
adc
int3
mov
shl
sbb
daa
or
mov
cmp
add
cmp
daa
add
inc
ljmp
push
jb,pt
je
push
aaa
add
jo
pop
add
xor
adc
adc
mov
jbe
push
sub
add
ss
mov
fcomp
ljmp
xor
in
pusha
sub
pushf
rcrb
lahf
and
les
push
lock
addl
and
sbb
addb
rolb
jl
loopne
dec
sbb
out
dec
iret
icebp
or
add
push
inc
mov
leave
loopne
sbb
orb
sub
jecxz
push
pop
xor
dec
das
inc
dec
add
scas
xchg
mov
add
mov
in
loop
lock
hlt
and
xor
cmp
cmpb
cmp
cmp
xor
dec
dec
loope
xchg
out
add
xlat
icebp
ljmp
jge
add
or
lea
xchg
aaa
lahf
dec
mov
lock
add
inc
sbb
mov
jo
jb
int3
inc
jbe
cwtl
js
hlt
pop
cmpb
xchg
cmpb
push
cmp
aam
jle
sbb
popa
fs
fcos
jecxz
rcr
xchg
and
or
xor
call
sbb
sub
clc
pop
mov
dec
jae
cs
loop
mov
lret
aad
out
cli
sti
xorl
dec
push
or
fs
and
sbb
leave
mov
sub
add
and
jb
mov
jbe
dec
add
rdmsr
sbb
popf
dec
sub
pop
enter
fs
js
jle
jne
rorb
jb
je
jbe
js
roll
call
xchg
mov
cmp
pop
adc
out
in
cld
roll
xchg
sub
xor
add
sarb
stc
inc
push
push
cs
adc
pop
nop
lock
hlt
pushf
xchg
push
pop
movsb
lahf
test
lods
test
mov
enter
leave
lock
sbb
add
cmp
test
roll
add
subb
imul
into
icebp
sarb
jle
mov
addb
inc
xor
data16
push
sti
fidivs
jb
sbb
jl
test
mov
jp
sti
jmp
js
add
jo
dec
sub
stos
inc
mov
cwtl
jecxz
out
sub
popa
pop
mov
pop
cmp
pop
pop
pop
jle
fldl
stos
add
lret
loop
add
xchg
push
addr16
xchg
movsl
mov
or
out
loopne
xor
dec
add
push
dec
arpl
shll
hlt
pop
xor
push
dec
xlat
sbbl
push
xchg
jae
jp
add
out
sti
add
or
in
sbb
in
sub
stos
pop
add
insb
sbb
repz
subb
jge
ds
mov
in
push
shlb
add
je
jbe
pusha
je
and
iret
sbb
rolb
daa
negb
out
add
jle
clc
mov
repnz
and
mov
adc
fldl
dec
aam
cmp
push
cmp
lahf
arpl
psubsw
jg
xchg
cmpsl
xchg
mov
int3
add
popa
mov
stc
xlat
xchg
frstor
sarb
add
cmpsb
loop
push
pop
fmull
add
subb
push
clc
push
or
cmp
outsb
les
in
add
xchg
or
mov
iret
in
add
ss
add
cmp
push
cmp
loopne
jle
add
pushf
pand
orb
pop
inc
dec
adc
loope
cmp
push
push
sbb
mov
adc
add
dec
in
pop
xchg
popa
push
fsubrs
jb
scas
into
push
test
cmp
ds
loopne
add
mov
or
ljmp
jmp
pop
nop
lods
in
call
add
mov
and
sbb
xor
popf
add
pop
mov
das
rclb
cmp
pop
inc
or
add
into
or
cld
xchg
xor
xor
cmp
pop
inc
or
add
loope
enter
jbe
leave
jp
bound
roll
aas
je
cmp
mov
add
bound
in
jge
pop
cmp
mov
ret
xor
add
lahf
in
add
sbb
inc
daa
lods
cli
jno
in
and
sbb
out
mov
cmp
mov
mov
xor
pushf
jnp
xchg
add
fcomps
fiadds
cmc
xchg
or
mov
cmp
ds
aas
out
add
add
and
add
lock
cmp
push
xchg
cwtl
clc
adc
aaa
add
fmull
aas
and
add
js
cld
test
cmp
daa
inc
loope
fs
inc
push
or
sbb
add
push
jl
cmp
and
or
dec
sub
loopne
pop
repnz
dec
roll
mov
ds
dec
xlat
add
push
testb
sub
mov
xor
xchg
xchg
fadd
pusha
mov
dec
xchg
fadds
add
sahf
pop
add
fiaddl
lcall
clc
pusha
nop
pop
cld
jb
pop
mov
rep
nop
and
into
jbe
adc
addb
and
mov
lock
cwtl
mov
loopne
dec
and
add
mov
xchg
push
cmp
dec
and
xor
mov
into
pushf
sahf
pop
add
adc
sub
cli
inc
add
lock
outsb
clc
jnp
add
pushf
jl
push
pop
mov
add
out
cli
jo
push
adc
add
setbe
cld
add
mov
orl
or
sbb
rorb
pop
xor
add
sarb
cld
aas
cltd
in
add
out
enter
aad
mov
add
push
js,pt
dec
push
add
in
add
xchg
testb
in
cmc
lock
xor
iret
insl
sub
or
pop
stos
cmp
inc
jg
shrb
mov
mov
jl
dec
fldcw
xchg
leave
cmpsb
mov
mov
adc
js
sub
add
push
sahf
loopne
and
adc
ljmp
je
add
repnz
jo
mov
and
leave
unpcklps
and
inc
loope
jmp
sub
insb
pop
mov
mov
add
popf
pop
mov
out
in
add
mov
orb
mov
sarb
test
fcomps
je
jbe
pop
lret
or
or
push
mov
sti
cmp
cmp
daa
push
xchg
push
data16
ret
lock
mov
loopnew
jnp
dec
pop
sbb
lahf
out
repz
std
mov
add
ror
mov
insb
add
aas
push
xor
scas
hlt
orb
enter
mov
xor
and
mov
inc
mov
scas
push
dec
mov
mov
xor
nop
pop
add
dec
cmpb
dec
add
pop
or
lods
adc
daa
sbbb
cli
add
pop
cmp
aas
insl
leave
js
or
lea
adc
aas
repnz
pop
in
cmp
cmp
sub
inc
dec
add
add
xorl
cmp
ds
ja
stos
xchg
jo
jle
stos
add
ret
xor
repnz
fsubs
scas
add
mov
inc
shlb
add
pop
push
fs
mov
inc
add
jmp
jmp
mov
shll
addl
mov
xor
clc
pop
push
pavgb
xchg
leave
stos
punpcklwd
mov
hlt
cld
or
cmp
adc
sub
dec
and
nop
lahf
insb
xchg
je
ret
add
adc
loop
in
cmp
jo
add
ficoml
pusha
insb
add
adc
or
repz
add
repnz
shlb
inc
je
rorb
data16
jle
andb
stc
cmpsb
inc
mov
push
fld
add
push
ljmp
shrb
add
push
popa
cli
test
xchg
rolb
in
xchg
add
mov
and
inc
add
push
and
outsl
xchg
les
popf
ret
inc
fcmove
subb
mov
mov
shll
stc
popf
fstpt
cmp
jb,pt
je
add
mov
jo
pop
add
jl
dec
test
add
fmull
nop
add
cmovle
mov
loopne
ret
push
jbe
xrelease
sbbb
mov
or
jb
push
dec
and
loop
add
data16
insl
in
pop
clc
cltd
shlb
pusha
into
xchg
inc
push
add
adc
pop
sub
mov
jecxz
repnz
fcomps
outsb
dec
cli
jo
pop
nop
jl
lock
xchg
add
divps
int3
faddp
jb
sub
cli
scas
push
pop
jbe
lea
daa
roll
stc
jmp
add
cld
in
pop
jle
test
add
cld
icebp
xchg
jp
add
ss
xor
andb
arpl
dec
jl
testb
lret
test
and
xchg
cmp
cmp
push
add
shl
loop
icebp
add
pop
ret
daa
filds
clc
loop
adc
pop
ret
fs
shrl
mov
nop
stc
xlat
and
in
lahf
test
pop
cmp
cmpsb
clc
stos
xchg
lcall
cmp
ja
pop
push
ds
in
rolb
xor
or
or
loopne
adc
jbe
in
test
cwtl
aas
pushl
imul
adc
add
daa
jl
aam
insb
adc
add
clc
xchg
lahf
bound
or
dec
cmp
subb
mov
out
inc
push
add
push
clc
sbb
std
add
sub
dec
cltd
xchg
pop
cmp
addl
push
lods
jnp
add
insb
shrb
fidivs
fs
add
dec
sub
js
push
lock
ret
bound
mov
cmp
push
push
push
jle
inc
icebp
pop
or
and
scas
arpl
movsb
adc
lods
cmp
cmp
add
mov
subb
pop
fcomip
jecxz
and
stc
repz
sar
insb
add
or
iret
aaa
dec
sahf
push
push
subb
pop
rorb
adcl
enter
jmp
cli
testl
icebp
les
sbb
push
cmp
push
cmp
arpl
xchg
imul
subb
mov
push
xor
idivb
jbe
daa
loopne
add
fdivrl
jb
pop
sbb
test
xor
mov
cmp
aaa
add
add
or
enter
add
stc
popf
push
add
movsl
repnz
add
in
lock
test
clc
mov
sahf
rorl
mov
xchg
dec
in
inc
jl
cmp
add
ret
jl
adc
adc
orb
fcomps
jle
pop
jmp
and
dec
cmp
cmp
sahf
sub
jo
mov
insb
add
add
push
test
rorb
test
ds
mov
mov
mov
ret
or
cmp
negl
xor
sbb
sub
dec
jno
sub
mov
mov
fmuls
dec
cmp
loope
ljmp
sar
fiaddl
xor
dec
lahf
je
add
ret
or
xchg
sbb
in
mov
scas
cld
add
push
mov
mov
mov
dec
repz
add
inc
andl
and
pop
xor
jnp
ja
add
xor
pusha
sub
fisubrs
clts
rclb
pop
add
je
dec
cmp
testb
clc
push
sub
cli
sti
push
movsb
ss
inc
push
cmp
jo
faddl
je
dec
aad
int3
loopne
sbb
push
sub
lock
loop
rorb
xor
sahf
mov
notl
xor
ret
imul
or
test
test
dec
jle
into
and
cs
scas
push
mov
inc
add
inc
imul
rcl
test
dec
add
xor
mov
jmp
out
jae
jle
fiaddl
stos
ret
mov
xchg
or
loope
pop
loopne
jp
pop
xchg
leave
sahf
repnz
pop
mov
aas
or
add
cmp
das
add
jo
aas
sub
cmp
dec
scas
stos
add
pop
add
cmp
cmp
jbe
xchg
fcompl
add
dec
inc
or
lock
push
xlat
add
xchg
test
mov
cmc
cld
sbb
ds
push
cmp
adc
adcb
lock
pop
add
adc
fsubrs
inc
cmp
jp
jl
dec
fmull
dec
add
mov
shlb
dec
sbb
ljmp
cmp
xchg
fldl
dec
in
lock
pushf
sahf
add
insb
adc
add
lcall
add
movl
dec
int3
adc
enter
jge
mov
leave
mov
jmp
mov
push
cmp
sbb
aas
adc
sub
incb
lahf
mov
roll
es
sarl
sub
popa
jo
aas
or
cwtl
cmpb
rcrl
lret
xor
mov
xchg
jbe
scas
add
add
add
dec
leave
cmpb
add
test
sbb
mulb
mov
outsb
push
or
ficompl
pushf
mov
movsl
xchg
add
inc
popf
dec
sbb
push
xorl
jb
je
jbe
add
pop
cmp
es
call
icebp
mov
lret
add
add
mov
ret
push
jle
add
pcmpgtd
mov
ss
fs
fldpi
add
int3
or
out
inc
add
dec
adc
sub
cld
call
sub
mov
dec
roll
cli
xor
fldl
xor
xor
jbe
or
sbb
stos
inc
out
add
leave
pop
and
mov
or
mov
shrb
jo
and
cwtl
in
xchg
xor
jb
sbb
les
clc
and
or
pushw
add
fadds
lock
sbb
cmp
loop
shrb
mov
push
es
and
xor
xor
call
xchg
sub
bound
popf
movsb
sbb
cmp
dec
cli
enter
sbb
aas
jno
jns
mov
pusha
and
cld
dec
fstpl
add
rol
sbb
test
add
and
hlt
add
push
cmp
je
dec
jo
add
repz
push
shl
jmp
cmp
dec
repnz
cmp
fdivs
dec
retw
add
mov
xchg
fsubrl
pushf
daa
sbbl
dec
pop
pop
mov
test
or
xchg
and
popf
mov
jo
jl
jle
mov
mov
inc
pop
xor
ja
add
loope
jmp
add
in
cmp
xchg
ds
pop
xorl
icebp
add
pop
shr
test
js
daa
rolb
mov
mov
into
mov
pop
or
mov
mov
orl
popa
mov
mov
mov
xchg
xchg
aad
loop
mov
pop
or
xchg
daa
push
push
pop
mov
xchg
aas
xor
jo
mov
add
imul
movsl
add
lock
insb
test
mov
aam
enter
rclb
add
or
aas
daa
mov
mov
pop
dec
je
add
jl
shlb
lock
add
jl
add
push
stc
std
mov
popa
or
add
push
loopne
in
sub
sub
push
aas
xor
inc
pop
mov
and
and
popa
xchg
gs
add
loopne
lcall
in
pop
fimuls
testl
pop
push
jbe
xorl
add
lods
aam
adc
mov
push
jbe
pop
enter
lock
lret
xchg
add
in
aam
ret
es
dec
and
notb
hlt
xchg
loop
sub
fs
dec
fidivs
loopne
xchg
mov
add
sbb
add
loopne
int3
cld
sarb
lret
mov
lock
or
loopne
sub
dec
adc
adc
rcrl
jecxz
repnz
xchg
pop
sub
sar
jns
jno
pop
stc
pop
cli
inc
dec
in
add
mov
call
adc
loopne
leave
pusha
fmuls
lahf
mov
enter
leave
add
push
dec
cmp
shr
stc
or
js
out
mov
xchg
jp
pop
push
ret
cmc
shl
loop
jbe
sub
fcompl
lret
sbb
stos
pop
sub
or
cmp
jl
xchg
add
stc
je
das
and
add
les
pop
fs
or
sbb
rolb
or
cld
push
jo
mov
test
sub
outsl
or
mov
sbb
cmp
mov
add
setp
insb
jnp
lock
jns
arpl
clc
xor
ds
fs
jmp
or
js
test
cmpb
enter
hlt
fs
cli
add
icebp
rcr
pop
xor
or
jl
add
dec
cwtl
and
hlt
add
test
stos
mov
mov
add
lahf
notb
xchg
test
and
or
add
je
test
das
cmpxchg
dec
xchg
ficomps
push
ror
aam
push
jle
nop
loopne
in
or
hlt
jbe
orb
add
or
dec
dec
jae
lock
sbb
hlt
pop
mov
add
xchg
sub
scas
mov
fadds
cmp
loopne
inc
mov
pop
clc
jne
in
mov
pusha
add
mov
test
add
add
adc
addb
loopne
dec
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
out
pop
rol
add
add
or
push
adc
adc
inc
int3
and
push
and
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
or
popf
add
lcall
jo
sub
test
jnp
push
decl
aaa
movb
ret
cmpsl
xlat
iret
mov
add
mov
aas
pop
xor
or
push
add
sbb
cli
jmp
add
jmp
sub
add
add
repz
cli
loopne
pop
pop
pop
pop
pop
bound
dec
adc
rorl
add
movsl
loope
add
movsb
pop
push
mov
addb
mov
jp
push
rol
ljmp
sub
loope
push
dec
xchg
rcrb
shr
inc
mov
add
dec
pushl
mov
or
add
pop
roll
or
sti
add
pop
add
cmp
sub
adcl
jns
add
aam
sbb
cmp
add
mov
or
adc
loop
pusha
or
rolb
push
add
mov
add
jne
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
shl
add
aas
jnp
pop
and
add
pop
mov
fisubs
push
pop
push
and
pop
orl
add
xor
xchg
call
adc
shl
and
add
cmp
add
adc
add
or
mov
dec
cmc
sub
ret
add
mov
push
add
fiadds
and
in
or
xor
add
cmp
add
adc
xor
inc
loope
xor
leave
add
inc
sub
xchg
cmp
pop
cwtl
je
sub
inc
out
lahf
xchg
adc
into
ret
sbb
hlt
aam
stos
add
dec
lods
outsb
sbb
push
mov
fwait
in
cwtl
lds
enter
adc
mov
out
xor
pop
pop
cmp
mov
pusha
out
cmp
loop
jb
xchg
add
dec
mov
add
cmp
int
and
enter
jns
icebp
mov
pop
loopne
stos
ljmp
push
inc
shrb
add
mov
sub
sarl
sbb
pop
add
xor
add
xchg
fists
jns
add
aad
push
sub
add
int
cmpb
mov
xchg
mov
mov
and
jmp
jbe
aad
inc
push
mov
daa
add
mov
sub
outsb
add
xor
std
add
mov
or
les
mov
and
inc
pop
fstpl
fiadds
sbb
aas
cmp
mov
add
shrb
pop
ret
and
iret
inc
mov
sub
mov
or
pop
in
cld
mov
lock
fwait
xlat
inc
sbb
stos
pusha
add
add
je
popa
int3
push
lock
dec
cmpl
mov
xor
pop
aad
add
mov
add
sbb
cmc
xchg
pusha
das
mov
push
push
cs
imul
cmovle
cli
pusha
test
mov
mov
xchg
fildl
or
lcall
mov
ljmp
add
fucomip
mov
jbe
pop
xor
cltd
push
cmp
sbb
sub
fs
push
mov
lock
hlt
add
scas
sbb
sub
add
and
gs
jae
inc
inc
xlat
push
sbb
push
in
imul
aaa
popf
jnp
mov
add
inc
push
jmp
or
xor
ret
sub
scas
mov
adc
mov
fnstenv
call
dec
in
pushf
rolb
pop
aam
inc
addr16
fs
dec
or
rcr
outsb
ret
mov
mov
stos
add
rorb
add
rcrb
and
enter
insl
test
cmp
push
mov
loopne
in
add
lods
lds
and
push
add
adc
mov
in
sbb
cmpsl
jbe
jmp
adc
into
rolb
test
aam
add
addb
jbe
push
stos
insb
pop
dec
aam
jl
ja
or
jle
cmpsl
pop
xchg
daa
fdivrl
add
loop
test
add
insl
ret
push
lods
js
repz
testl
mov
fwait
test
sub
fs
add
loopne
add
in
mov
push
xor
xor
jge
cld
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
dec
shll
call
pop
and
leave
loopne
mov
sub
cmc
rep
pop
jmp
dec
shl
mov
xor
sbb
push
add
inc
and
adc
add
test
imulb
xor
leave
shr
je
adc
add
pop
pop
mov
xchg
ret
jns
pop
mov
jl
cmp
push
cmp
orps
je
popa
repz
adc
mov
gs
outsl
lcall
js
icebp
jp
jae
push
inc
jne
mov
popa
addr16
decl
lock
emms
pusha
jo
imul
dec
lock
inc
push
outsb
and
sahf
jnp
cwtl
in
gs
jo
outsl
jne
pop
aaa
inc
jns
mov
fisubs
pop
shrl
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
and
rol
xor
or
sub
std
xor
inc
idiv
aad
lcall
mov
cmpsb
jge
arpl
dec
outsl
fildll
mov
addr16
movsb
dec
xchg
filds
ljmp
add
aas
shr
and
jne,pn
cmp
cs
mov
inc
mov
fs
add
rcll
sbb
sbb
adc
ljmp
mov
out
adc
xchg
inc
adc
inc
sub
fmulp
pop
jmp
aas
aad
loopne
movsl
push
cs
and
icebp
dec
jge
shrl
les
or
stos
mov
push
push
scas
push
xchg
fwait
mov
inc
loop
inc
add
push
jg
push
xchg
dec
mov
ret
fincstp
mov
add
add
adc
imul
jbe
add
jge
mov
shl
cmpsb
and
mov
sbb
sbb
sub
stc
xor
les
adc
ja
or
mov
jns
jbe
aam
scas
jl
in
xchg
jbe
js
mov
popf
mov
xchg
cmpsl
outsl
push
jge
jg
sbb
sub
cld
stos
scas
repz
dec
add
jns
pop
bound
out
push
sbb
stos
pop
fisttpl
das
cmp
xchg
stos
test
pusha
cmp
lea
mov
fwait
lahf
in
stc
movb
nop
lods
ret
mov
add
sbb
push
stc
loope
cmpsb
add
jno
je
loope
pop
popa
mov
sbb
xor
lea
adc
push
lods
pop
xchg
ds
iret
pushf
xchg
cmc
bound
or
lods
cli
sub
xchg
in
pop
clc
sbb
xor
scas
xor
dec
lret
dec
shll
add
xor
insl
jno
loopne
int3
push
test
add
cld
cmpsb
push
pusha
inc
ja
pop
xchg
jbe
sbb
and
ret
or
push
or
in
xlat
out
mov
mov
cmp
adc
into
add
adc
xchg
stc
or
push
fadds
out
clc
out
dec
lds
cmpsl
lret
mov
and
and
jle
xchg
add
andb
cmp
icebp
mov
mov
aaa
imul
add
inc
cli
ret
arpl
xor
inc
add
or
movl
add
sub
push
fstpl
outsb
push
jo
shll
jns
dec
mov
mov
mov
adc
and
or
mov
out
sbb
xchg
adc
jno
movsl
pop
push
pushf
xchg
mov
sti
movsl
test
mov
test
test
icebp
aaa
popa
cli
dec
add
jl
mov
adc
push
mov
mov
insb
push
out
cltd
andb
pop
imul
daa
bound
jb
sub
scas
daa
push
xor
xchg
xchg
mov
std
cmpsb
jmp
push
cli
leave
mov
cmp
cmpsl
ja
fldenv
repz
imul
and
adc
inc
inc
xchg
jns
cwtl
call
push
fsubrs
popa
push
rcrb
cltd
dec
mov
test
aam
xchg
rcr
in
subl
and
push
adc
xor
les
pop
lret
jns
jbe
add
mov
hlt
sahf
rcrb
jle
mov
pop
xchg
mov
sbb
int
dec
adcl
dec
dec
mov
es
add
gs
xor
ret
xchg
jge
mov
mov
fidivl
addr16
std
mov
aad
call
repz
jecxz
add
xor
mov
in
cmpsb
imul
jbe
mov
mov
ljmp
lret
subl
dec
add
scas
push
sub
hlt
mov
lahf
mov
jecxz
repnz
out
test
insl
popf
fs
xchg
pop
inc
leave
pop
fs
or
loope
stc
rdpmc
inc
inc
jbe
testl
sti
xlat
push
pop
and
loop
xlat
pop
adc
mov
sub
dec
lea
addr16
mov
jle
popa
mov
in
push
jo
xchg
popa
or
jp
sbb
add
pop
bound
into
push
out
das
std
test
push
sub
es
pushl
faddl
and
cmp
es
addl
sbb
xchg
test
mov
aad
xchg
aam
xor
pop
adc
inc
mov
cmpsb
xchg
test
test
adcb
xchg
adc
adc
add
mov
ss
lea
pop
aas
jnp
in
mov
das
jmp
loop
add
add
cmpsl
pop
popa
bound
insl
out
pop
addb
shll
dec
or
arpl
clc
sbb
loopne
call
mov
jecxz
sti
pop
cs
dec
xchg
pusha
xlat
cmp
xor
or
idivb
fldl
pop
pop
jo
xlat
push
leave
xor
and
mov
fisttpll
dec
mov
outsl
jle
test
jae
or
adc
pop
sbb
stos
mov
cmp
jle
rcll
mov
cvtps2pi
inc
rorb
pop
mov
out
pop
sqrtps
push
cmpxchg
js
pop
popa
xchg
test
add
repz
hlt
jmp
mov
pusha
inc
dec
mov
or
jp
adc
mov
and
add
mov
add
mov
xchg
pop
mov
xorl
mov
mov
sarb
cmp
imul
cmpsl
bound
mov
lahf
sbb
shrl
jmp
cmp
pop
adc
shlb
xor
sub
pop
and
jne
int3
jle
scas
clc
pushf
lret
jnp
add
dec
xor
fnstenv
inc
xchg
repz
popf
mov
cmpsl
out
in
shr
pop
idiv
stos
mov
int
mov
enter
lahf
xor
inc
xor
mov
xor
popl
or
test
cld
pop
aaa
cmc
mov
hlt
pop
lock
or
jnp
dec
mov
add
pop
out
inc
push
insb
dec
int
and
in
sub
scas
mov
sbb
sbb
cmpsl
cld
imul
add
pop
cmpsl
or
aad
in
push
adc
or
push
mov
insl
enter
jbe
and
fwait
xchg
adc
jo
lea
hlt
fstp
dec
mov
mov
and
push
lock
jae
sbb
xchg
adc
bound
jbe
or
push
addr16
out
js
test
outsb
and
cmpsb
mov
xlat
clc
xor
fisubrs
mov
jp
push
mov
out
pusha
cmpsl
lds
andl
sbb
cwtl
loope
dec
lods
push
icebp
les
stos
call
gs
jno
cmp
lcall
sbb
jne
jae
mov
rcll
out
xchg
sbbb
test
ret
mov
pusha
mov
mov
sar
inc
pop
ljmp
inc
imul
push
stos
out
or
scas
mulb
lods
xor
xor
cmp
push
mov
mov
pop
xor
mov
push
sbb
xchg
sub
cmp
lcall
add
aaa
push
in
cli
push
push
and
cmp
add
pop
popf
jge
test
sahf
inc
cmp
je
xchg
and
in
std
lock
jle
andl
dec
stos
cmp
fmuls
divps
int
sbb
sti
test
push
xabort
push
outsl
aaa
arpl
jg
loop
sbb
rcrb
test
pop
mov
cld
xchg
bound
stos
push
mov
fucom
push
cli
xor
out
or
mov
xchg
mov
fdivrl
adc
in
mov
iret
cwtl
cmp
sub
std
pop
pop
js
outsb
xor
ror
push
cmp
ja
jmp
mov
jae
cwtl
sub
mov
imul
cmp
test
mov
popa
add
add
xchg
in
xchg
jmp
aad
add
jno
and
enter
ds
test
inc
push
xor
pop
loopne
filds
aaa
aad
in
cmp
idivl
push
mov
sub
je
xchg
jne
dec
cwtl
xchg
cltd
fldcw
das
jae
cmp
mov
xchg
shrb
sub
jmp
or
frstor
jbe
dec
test
mov
out
test
and
mov
out
inc
adc
jo
fbld
jb
adc
movl
adc
pop
mov
dec
sbb
and
mov
xor
repz
bound
jmp
push
outsl
orb
mov
pop
cmp
xchg
xlat
divb
push
jb
mov
nop
sahf
add
xor
lods
je
mov
popf
ja
add
inc
and
jb
movsl
or
mov
popa
pusha
jo
sbb
data16
es
or
xchg
mov
jns
xor
lahf
mov
imul
mov
jmp
scas
sub
push
adc
ds
pop
out
loope
arpl
fwait
adc
pop
in
out
push
cmp
push
mull
cmp
and
jno
cmp
xchg
cmp
adc
mov
mov
jb
sti
fnsave
shll
mov
loopne
minps
dec
add
loopne
jecxz
push
jp
mov
push
jns
sub
sbb
dec
cmp
or
test
jb
cmp
rcr
out
fucomp
or
cmp
mov
loop,pn
out
add
adc
xor
inc
and
stos
jmp
dec
cmp
sub
ja
jno
fcmovnb
inc
scas
or
and
push
push
bound
les
in
push
adc
mov
and
adcb
hlt
xor
out
jbe
out
stos
lds
cmp
mov
outsb
jo
inc
mov
hlt
add
cli
mull
push
ret
cmc
hlt
mov
out
lods
xchg
jmp
outsl
xchg
sbb
jp
lret
cmp
push
mov
inc
js
jbe
add
jg
and
aad
dec
cmp
xchg
inc
outsb
scas
mov
dec
lods
adc
movsl
cltd
dec
or
push
or
cltd
pop
xchg
in
jo
jecxz
xor
lret
cmp
sub
ret
fcompl
xchg
cmp
data16
xor
jmp
lds
inc
sub
testb
or
js
cmp
pop
jns
mov
mulb
loop
aad
push
mov
loop
mov
jns
xor
flds
std
out
or
xor
in
mov
pop
jmp
movsl
js
lahf
fs
aas
jns
mov
lock
cltd
push
mov
xchg
xchg
sub
test
gs
push
jae
lods
inc
pop
mov
cmpsl
add
add
popa
push
mov
loope
pop
cmp
rclb
out
pop
lods
jp
dec
jg
adc
cltd
sub
xchg
mov
jne
enter
inc
push
xchg
inc
pop
sbb
sbb
mov
pop
imul
outsl
mov
imul
mov
and
scas
sahf
mov
and
stos
mov
lods
loop
cmpsb
xchg
nop
cmc
inc
vpshufd
nop
mov
out
mov
and
mov
mul
inc
enter
mov
jo
lods
je
sti
push
xchg
pop
mov
push
adc
mov
gs
insb
mov
movsb
arpl
xor
mov
jne
imul
and
mov
fnstenv
jno
fnstenv
pop
pop
xchg
sbb
repnz
hlt
movsl
and
add
daa
mov
negl
test
out
jle
mov
bound
mov
push
mov
popa
cli
add
sbbb
adc
xchg
pop
cltd
lods
outsb
cltd
pop
call
stos
popf
stos
das
stos
imul
xor
xor
call
sbb
push
test
sub
jge
jmp
loope
mov
and
jmp
fsubrl
fisubrl
add
repnz
fistpl
mov
sbb
lret
mov
pop
ret
iret
add
rcr
mov
jno
xor
cwtl
repnz
push
inc
insb
loopne
cli
daa
sbb
adc
iret
bound
lds
fs
sbb
add
leave
xchg
cmp
arpl
adc
decl
call
out
adc
movsl
mov
pop
mov
and
add
imul
fcomp
jnp
daa
movsl
jno
dec
fisttps
cmpsl
imulb
std
dec
arpl
jmp
mov
jno
mov
insb
adc
fdivrs
push
xlat
adc
imul
mov
pop
mov
shl
jne
aaa
jae
addr16
mov
in
and
stos
mov
add
or
stos
jecxz
pushf
dec
push
imul
std
adc
mov
je
js
icebp
popf
div
cmp
pop
and
dec
cmp
ljmp
dec
mov
iret
in
xchg
sub
mov
lea
pop
test
mov
mov
lcall
jbe
jbe
jbe
nop
negb
pop
mov
sbb
popf
adc
add
incb
inc
outsb
movsb
outsl
mov
sbb
jo
pop
jle
cmp
jp
xchg
jnp
lret
popa
cmpsl
xor
inc
stos
xchg
popa
and
push
inc
fs
in
aam
sub
push
clc
or
mov
stos
jmp
dec
inc
add
mov
divb
push
add
push
int3
andb
push
loope
mov
cmp
daa
cltd
out
imul
imul
aam
push
repnz
jle
out
mov
xlat
ds
lods
push
clc
mov
call
mov
arpl
xchg
loope
pop
imul
dec
pop
lods
cmpsl
or
mov
movsl
pop
push
mov
mov
fwait
pop
sti
stos
pop
mov
ja
mov
add
testb
and
divl
add
xchg
repnz
jle
int3
jb
mov
xor
out
or
cmp
or
out
ficoml
ret
inc
add
add
push
pop
push
push
ljmp
scas
xor
push
adc
fdivl
sub
sbb
out
ret
repz
cwtl
push
jns
daa
sahf
subl
or
int
ret
cmp
inc
ret
jns
and
pop
pop
pop
mov
test
mov
mov
fisubs
jnp
lods
nop
lods
stos
ds
inc
jno
jnp
in
or
add
movsb
test
pop
ja
mov
cmpsb
mov
lds
dec
loope
push
dec
int3
pop
outsl
xor
xor
mov
dec
outsl
test
jae
jae
sbb
aas
fbld
jo
cli
dec
push
push
sti
sub
push
daa
rcrb
arpl
mov
or
or
pop
add
cwtl
and
adc
add
push
pop
pop
test
ret
adc
lea
sub
xchg
lock
pop
jne
pop
stc
cmp
stos
xchg
jl
pushf
and
arpl
scas
mov
sti
xchg
and
dec
sub
and
pop
iret
movsb
jle
je
xor
xchg
ror
lcall
ror
cmp
movsl
or
sub
js
push
in
xchg
sbb
ss
repnz
mov
mov
dec
test
mov
cld
pop
sbb
inc
add
jp
cmpsb
ret
fcoms
imul
push
cmp
dec
dec
xchg
mov
lds
mov
sti
pusha
fnsave
dec
lretw
ljmp
push
xchg
faddp
adc
sbb
cs
or
adcl
sbb
mov
outsl
je
sahf
jg
cmp
popa
sbb
and
idivl
repz
sub
xchg
int3
sbbb
sbb
not
fisttps
aaa
pop
clc
adc
stc
sbb
xchg
jp
out
dec
mov
or
inc
sbb
xchg
jp
mov
push
mov
fucomip
jecxz
or
and
fdivrl
les
push
push
in
scas
dec
test
inc
sub
out
jle
cs
cwtl
daa
sti
adc
fs
mov
mov
cltd
jne
jl
in
sbb
push
lret
nop
fwait
mov
push
add
pop
cmp
xor
pop
xchg
fsubrl
ror
inc
xorb
imull
mov
and
pop
loop
cwtl
adc
insl
outsl
std
dec
mov
inc
lock
insb
and
roll
inc
add
sbb
lods
xchg
jg
adc
jo
inc
jecxz
mov
stos
je
das
mov
sub
dec
dec
faddp
pop
movsl
or
mov
lock
adc
pop
cmp
pop
xchg
xchg
or
int3
jmp
jge
push
stos
push
dec
sub
mov
fcoml
mov
hlt
push
lahf
cmp
mov
fwait
pushf
stos
bound
inc
mov
cmp
out
dec
jns
jno
nop
inc
pop
pop
and
icebp
sbb
outsl
hlt
ljmp
imul
loop
shr
data16
bound
xchg
test
mov
shr
ret
mov
cmp
jne
sbb
dec
popf
popl
insb
leave
add
push
mov
stos
cmpsb
add
lods
cmp
je
out
mov
push
aad
mov
inc
insl
ret
and
jb
sbbb
pop
pop
jno
cld
adc
inc
xchg
jp,pt
in
or
add
push
add
cmp
add
lea
mov
pcmpeqd
rcll
cmp
lret
lods
adc
push
mov
fwait
xor
mov
pop
lahf
mov
arpl
add
hlt
or
pushw
jl
scas
dec
and
xor
out
lock
stos
pop
sbb
jmp
dec
call
pop
mov
in
in
cmp
sahf
mov
shrl
jge
popa
adc
sub
mov
pop
cmp
or
sub
aas
mov
popa
cld
loopne
adc
pop
dec
jge
dec
and
jbe
adc
icebp
test
stc
mov
dec
add
cmp
mov
lret
pusha
je
arpl
cmpsl
scas
scas
jmp
adc
sub
jecxz
cmp
xor
mov
fbld
xchg
test
mov
adc
outsb
fsubl
jns
loop
movsl
adc
jnp
inc
xor
lods
mov
shll
lret
mov
push
ljmp
push
cltd
andl
mov
push
xchg
jecxz
mov
fs
mov
enter
pop
and
cwtl
jle
push
out
lea
call
dec
cmp
shlb
je
ret
sub
out
addb
xor
xchg
xchg
pusha
fmulp
outsb
add
std
fstps
imul
add
pushf
add
and
inc
shlb
and
sbb
adc
jnp
cwtl
mov
cmpsl
inc
mov
xchg
adc
mov
fwait
xor
iret
rclb
dec
dec
scas
outsl
int3
lea
xchg
sbb
lcall
in
test
outsl
or
sti
ds
int3
cltd
aam
cltd
xor
mov
xchg
out
pusha
pop
aam
mov
stos
xchg
or
xchg
int
insl
pop
orl
or
inc
add
push
daa
in
icebp
dec
orb
pop
cmc
cmp
mov
movsb
orb
jbe
cld
jae
dec
cmpsl
push
add
arpl
cli
xor
test
mov
jecxz
push
imul
cmpsl
adc
lds
ss
push
shlb
lret
cmpsb
aam
mov
cmpsl
int3
jbe
movsl
inc
xchg
pusha
ljmp
fiaddl
add
out
mov
movsb
jecxz
cmpsb
loop
xlat
mov
mov
pop
cmp
fsubrl
ja
pusha
out
mov
xor
sub
fldl
or
mov
or
sbb
dec
iret
pop
sub
int
popf
inc
aas
stc
sbb
or
jge
imul
xchg
movsb
add
jl
mov
sahf
jo
and
mov
repz
insl
add
insl
ret
daa
xchg
gs
adc
je
xchg
movsl
cmp
fdivrs
divb
xchg
inc
sahf
cs
test
sub
aam
test
jl
push
call
push
in
inc
sub
je
adc
pushw
adc
je
movsl
xchg
jmp
cltd
jb
call
pop
sti
and
imul
lds
aas
add
xchg
and
mov
and
lods
sub
or
in
rclb
aad
or
bound
dec
inc
inc
fcmovu
fildl
stc
add
jecxz
xchg
xchg
fcmovu
push
push
cmpsb
mov
stos
loopne
cmpsl
fistl
mov
ljmp
push
push
es
jp
outsb
mov
push
dec
sub
les
mov
and
mov
rol
out
sahf
sub
test
fcomps
mov
or
jmp
cmp
mov
xchg
test
fdivl
adc
das
loopne
inc
clc
cmpsb
je
imul
jle
xchg
jle
sti
stos
out
sbb
adc
js
pop
mov
pop
add
je
push
rcrb
test
shlb
sub
ret
lret
les
adc
sahf
fnstcw
push
in
mov
pop
jmp
or
mov
in
cmc
cmp
into
dec
cld
add
mov
test
hlt
cltd
int
sbb
sarl
das
mov
mov
lock
rcll
in
cs
xchg
cld
dec
lea
call
cmpsb
out
inc
insb
mov
shlb
push
mov
push
imul
push
adc
movsb
dec
sub
cmp
lret
mov
mov
sub
pop
mov
cmp
cmpsb
mov
mov
xlat
lret
mov
shlb
lock
lret
clc
in
outsb
pop
push
push
add
pop
mov
mov
sub
push
dec
mov
scas
and
and
sbb
in
dec
ds
mov
push
push
mov
cmp
aad
cmp
dec
sbb
pop
jnp
fwait
pop
sub
fistpl
ljmp
fidivrs
push
shll
inc
pop
lea
std
xor
popf
jle
aas
mov
xor
out
and
icebp
sub
or
scas
pop
ljmp
mov
dec
jns
test
add
mov
inc
dec
nop
and
pop
dec
stos
adc
push
sub
cwtl
das
push
sub
stos
jae
ret
lcall
mov
ss
cmc
js
lret
mov
aaa
or
lods
jl
repz
loope
rcr
cli
add
test
cli
or
dec
sbb
popa
xorb
imul
xor
pop
stc
lret
addr16
xor
push
push
int3
add
or
xchg
sub
pop
ds
insb
pextrw
jo
inc
stc
movb
mov
mull
inc
jmp
xchg
cli
push
cmpsb
insb
push
dec
daa
loope
dec
pop
pop
add
jp
add
push
test
lar
popa
cmp
insb
or
mov
aaa
imul
in
aam
lret
xor
sbb
sub
jnp
dec
aam
mov
dec
pushf
in
mov
jo
std
sub
mov
push
xchg
pushf
cs
ja
ss
repnz
cmpsb
jb
jno
in
pop
mov
or
xor
sub
sbb
ljmp
pop
in
cmp
addl
and
test
mov
push
adc
stc
adc
dec
mov
inc
psubb
cmp
jl
filds
fidivl
ja
ja
aam
inc
inc
loope
cmp
mov
push
ds
jmp
dec
mov
mov
clc
div
rolb
call
pop
test
lcall
mov
and
fnstenv
sahf
cmp
inc
xor
jl
ss
std
lods
jno
xlat
or
repnz
or
lret
ja
rorl
dec
inc
jb
pop
stc
aam
movsb
arpl
lret
mov
js
xchg
pop
es
mov
test
cs
cmc
push
stos
test
in
pop
fwait
lods
jecxz
pop
sub
fdivl
sbb
movsb
xchg
sbb
jge
enter
push
lret
inc
popf
cmp
mov
mov
popf
inc
or
insl
bswap
jno
xor
inc
cmp
add
lods
jge
lahf
jecxz
mov
loop
fldenv
jp
xor
mov
pop
mov
pop
mov
mov
jbe
xchg
adc
dec
push
and
inc
jnp
sti
pop
and
mov
and
lcall
sahf
fs
mov
pop
jg
addr16
lea
fistpl
mov
jne,pn
sub
fnstenv
insb
mov
loop
mov
out
cmpsb
outsl
mov
or
push
adc
sti
mov
and
xchg
push
lods
cmpsb
fildll
fs
add
sahf
call
sbb
into
xchg
fs
or
pop
rorb
jmp
out
sbb
ds
pop
pop
in
clc
xchg
mov
dec
ja
pop
loopne
stc
xorb
cli
enter
inc
int3
mov
lock
sbb
dec
cmp
mov
mov
xchg
mov
push
and
or
imul
shlb
add
lock
cmpsl
scas
lds
stc
inc
call
sub
xor
fcomps
enter
cmc
fistps
stos
stos
sub
stc
int3
fldenv
pop
push
and
xlat
clc
shrl
adc
cltd
mull
mov
or
arpl
outsb
les
es
stos
push
enter
mov
test
mov
idivb
std
mov
stos
movsb
pop
inc
or
mov
pusha
inc
hlt
dec
inc
jae
lret
add
dec
cmpsb
insb
test
jnp
pop
cmp
mov
lret
xchg
dec
mov
sbb
mov
lret
push
ljmp
out
fmull
lods
jl
cmp
add
cmovno
scas
sub
or
sbb
or
jns
andl
shl
jbe
subl
mov
mov
or
call
cmc
addr16
add
xchg
mov
jno
jbe
jl
jb
movhps
inc
add
pop
cmpsl
push
pop
cmpsl
sbb
jl
pop
mov
inc
push
xchg
roll
enter
cmp
or
add
arpl
inc
jnp
imul
imul
sahf
push
ljmp
xchg
cwtl
dec
pop
dec
movsl
mov
inc
push
cli
dec
repnz
mov
popf
rorb
pop
popa
fidivrs
inc
lock
in
push
or
mov
in
dec
add
jbe
jge
sbb
in
inc
pushw
inc
or
fucomip
add
test
mov
lcall
cmpsb
and
and
mov
xor
mov
scas
movsl
sbb
stos
lahf
mov
sub
inc
pop
movsl
repz
mov
push
clc
push
cli
fdivp
shll
hlt
cwtl
add
mov
pop
xchg
aaa
jae
mov
dec
inc
xchg
inc
inc
jmp
lea
xor
aam
add
shlb
daa
lret
dec
mov
jg
mov
jne
sub
in
xchg
xchg
cmp
or
ds
push
jmp
test
dec
je
nop
in
out
inc
jbe
out
popf
xchg
aad
les
mov
ja
xchg
in
mov
cmpsb
xchg
jg
js
mov
sbb
sbbb
outsb
insb
cmc
cli
push
mov
cmpsb
pop
cmpsl
jbe
imul
cmpl
stc
clc
scas
outsl
in
loop
ss
mov
xor
xchg
and
mov
sbb
lret
test
mov
repz
cmp
or
dec
das
jle
scas
fchs
xchg
out
fnstcw
push
addl
ds
mov
sti
fcoms
test
pop
mov
mov
gs
jecxz
xchg
mov
cld
mov
lret
and
int
or
mov
aad
mov
or
pop
ja
pop
test
enter
xchg
mov
lods
pusha
inc
imul
fimuls
add
mov
dec
aam
sbb
lahf
dec
std
push
sub
rclb
xchg
dec
dec
mov
cmp
push
test
stos
fildll
pop
mov
loop
out
rcr
inc
sub
gs
lret
outsb
mov
adc
mov
sub
into
cmp
pop
jmp
shll
cltd
jns
inc
insb
repz
jns
cmpsl
push
cmp
inc
test
mov
adc
daa
inc
int
movsb
test
movsl
xchg
cmp
push
leave
icebp
pop
loopne
popf
ljmp
sub
lds
fstpl
mov
call
xchg
xchg
loop
clc
cltd
cmp
rcl
xchg
jb
or
dec
xor
aaa
mov
cmp
test
aaa
dec
jecxz
and
inc
mov
adc
jecxz
test
and
es
mov
je
pop
cld
pusha
inc
or
xchg
popa
sbb
mov
push
loopne
push
jl
add
mov
sub
or
js
jo
mov
dec
iret
inc
xchg
adcl
jnp
insl
je
cwtl
mov
pop
mov
jp
xor
xchg
push
mov
les
jmp
outsb
xlat
xor
jno
aad
test
clc
pop
pop
into
jp
fs
ret
mov
push
xor
sarl
cmpsb
orl
xchg
repz
jo
xor
jl
mov
mov
or
mov
push
cmpsb
cmp
mov
stos
cmpsb
cmp
and
xor
jg
sub
xchg
xor
xchg
movsb
pushf
lahf
pop
pop
add
sbbb
fucomi
test
ja
dec
repz
fadd
daa
add
sbb
and
addl
and
pop
mov
pusha
push
negl
cld
mov
push
cmp
loop
aas
ds
sub
cmp
stc
addb
xchg
jno
lods
sbb
mov
xlat
xor
rolb
mov
addl
dec
js
sbb
pop
inc
inc
add
inc
clc
cmp
sub
jmp
adc
inc
push
dec
inc
repz
jb
and
jne
push
pushl
pop
dec
mov
data16
mov
and
sub
sbb
sbb
and
in
stos
fcoml
out
jge
lcall
adc
mov
in
aas
inc
cli
sbb
sub
dec
fcoms
mov
jae
lods
mov
xor
shll
shrl
adc
or
add
data16
adc
push
xchg
push
daa
jg
adc
and
pop
stos
stos
addr16
test
cld
and
mov
cmpsl
xor
jp
inc
sub
aas
inc
addr16
xorb
cmpsb
inc
mov
lret
jg
inc
es
mov
push
repnz
addr16
loop
fisubrs
inc
push
inc
enter
mov
sub
push
inc
mov
push
pop
and
dec
jbe
mov
sahf
lret
xor
fisttpl
adc
inc
iret
repnz
jbe
xchg
call
daa
xchg
inc
push
jp
lahf
dec
jge
add
add
cmpsb
dec
out
push
pop
aaa
dec
insl
inc
cmpsl
add
bt
mov
repnz
movsb
sbb
mov
iret
jnp
fdivrl
mov
adc
lahf
mov
lea
cmp
popf
add
push
add
ljmp
sub
and
jbe
int
add
dec
insb
cmp
and
test
rclb
in
mov
loopne
popa
push
pop
mov
test
aas
xor
mov
arpl
adc
daa
fnsave
jecxz
cmpb
xchg
movl
gs
jge
adc
sub
pop
shr
mov
mov
mov
inc
xchg
xchg
dec
insb
inc
scas
xchg
movsl
aaa
sub
int3
push
sbb
push
pop
insb
add
lahf
test
jp
adc
in
sbbl
push
in
mov
xor
push
outsb
sub
or
fistpll
inc
shl
mov
mov
add
mov
push
xor
push
out
sub
movsl
addr16
mov
ret
popa
mov
cmp
jns
mov
cld
out
stos
mov
fcomps
or
jmp
fidivs
adc
fldl
xlat
adc
mov
lret
sbb
pushf
aam
jne
lea
jle
pop
jb
scas
jns
fistpl
xchg
and
jb
sbb
push
or
jecxz
jmp
dec
neg
rolb
inc
fcmovu
in
jg
adc
dec
test
dec
hlt
or
mov
daa
push
shlb
mov
sti
pop
cli
out
jg
sub
sub
test
outsl
pop
and
adcb
verw
and
and
xor
xchg
jge
jbe
shlb
out
ljmp
ljmp
pop
out
rcrb
lock
push
ret
subl
jns
jl
sti
loopne
fdivrs
xlat
mov
pushf
jl
jb
mov
out
cmpsl
ljmp
int
cmp
cmp
repz
jo
in
dec
orl
or
jne
push
test
lea
ret
inc
int
mov
movsb
cmp
push
popf
mov
popa
out
xchg
jns
cmp
je
mov
jge
xor
mov
add
and
enter
jmp
movsb
xchg
test
cltd
jmp
dec
sahf
lods
ret
cmp
daa
iret
loopne
imul
js
jge
cmpl
xor
je
push
ja
nop
mov
movsb
call
push
ret
lds
cmpsb
mov
in
pusha
cmpsl
outsb
sti
insb
lret
sbb
and
in
clc
pop
sbb
divb
imulb
mov
pop
es
cmp
mov
insl
adc
mov
sub
mov
repnz
mov
xchg
push
clc
mov
ds
and
add
sbb
push
mov
jmp
daa
out
lods
pop
cltd
lock
mov
dec
push
aam
arpl
push
dec
repz
inc
outsl
outsb
fcoml
fidivrs
pop
xchg
or
je
std
dec
sbb
test
rorl
lahf
xor
xchg
mov
stos
xchg
mov
mov
mov
cmpsb
insl
repnz
mov
push
test
adc
in
and
or
cmp
push
ret
push
js
sbb
mov
push
adc
addr16
rorl
movsl
mov
js
dec
lods
das
dec
out
fstl
mov
stos
test
aam
xor
add
mov
rorl
stos
push
popf
sub
or
mov
out
ljmp
mov
stc
sarl
xchg
lea
mov
subb
popf
push
lret
ret
push
dec
test
loope
xchg
ljmp
add
out
aam
xchg
imul
rclb
lcall
mov
shll
lret
dec
pushf
xchg
std
xchg
mov
mov
or
lods
rorb
call
xchg
or
int
jno
cmp
mov
lods
push
sbb
inc
test
mov
jnp
jg
daa
jns
pusha
xor
inc
jecxz
lcall
pop
pop
std
loop
fmul
shlb
add
mov
sbb
outsb
data16
xchg
iret
pop
mov
stc
push
fisubrl
ljmp
popf
adc
xchg
pop
repz
iret
rclb
mov
test
mov
je
test
pop
cltd
inc
dec
cld
outsb
shrl
repnz
repz
popa
stos
scas
repz
add
cmpsl
cs
mov
push
testb
xor
arpl
or
inc
sub
sti
test
sub
insl
aad
lcall
cmp
rcll
cmp
ud2
push
lahf
mov
cmp
bound
sbb
sub
repnz
stos
sbb
sti
lods
icebp
lcall
xchg
mov
popa
jnp
loop
fwait
notl
aas
jnp
xchg
ss
jno
sub
and
pop
aad
push
add
xchg
mov
outsb
in
adc
sub
loop
lods
cs
xchg
fdivl
or
push
push
ljmp
lds
cli
or
jge
sub
test
xor
pop
outsb
push
xchg
dec
insb
xor
mov
mov
lret
xchg
push
hlt
test
inc
sbb
inc
cmpb
mov
lock
pop
icebp
xor
xchg
addr16
push
cld
mov
push
mov
in
rol
iret
addr16
jge
mov
xchg
out
xor
lahf
xorl
push
insl
sbb
stc
sub
lret
cmpsl
add
or
lahf
cmp
dec
lret
lods
jecxz
jae
mulb
push
scas
mov
fistl
adc
xor
push
xchg
das
mov
fwait
aas
cmp
xor
xor
leave
mov
sub
xchg
out
leave
add
xchg
repnz
mov
mov
dec
iret
jne
clc
aas
push
sti
hlt
xor
pop
lock
sti
stos
fcoml
add
lods
imul
inc
and
std
xor
push
and
sub
dec
mov
lods
sti
scas
dec
mov
xchg
lret
fisubs
dec
loop
in
fdivl
dec
repnz
notl
adc
bound
sbb
xchg
das
repz
push
and
arpl
mov
js
or
fwait
sub
aad
sub
or
inc
cmp
test
pop
ficompl
push
imulb
ucomiss
push
lea
cmpsl
lods
scas
jns
push
pop
fcmove
dec
addb
roll
sbb
jl
iret
rclb
sub
ret
fmull
push
cli
sbbb
inc
fsts
cli
cli
jge
mov
cmpsl
in
mov
or
cltd
mov
sbb
pop
in
and
int
loop
cmp
into
and
fcmove
sbb
filds
inc
loopne
cmp
fists
nop
pop
push
pusha
outsl
or
aaa
pop
push
adc
sub
mov
mov
dec
insb
jmp
or
hlt
jns
ljmp
push
push
jg
insl
sbb
inc
stos
push
cld
jecxz
pop
addr16
xor
add
scas
mov
xor
mov
aam
mull
lods
sahf
push
cmp
sub
mov
add
push
outsb
mov
dec
push
mov
cmc
mov
outsb
pop
add
add
scas
jge
jnp
scas
lret
sbb
add
clc
xchg
outsb
aam
xchg
inc
leave
stc
cmp
dec
xor
and
mov
xchg
pop
push
int
pop
popa
push
in
pop
and
or
stc
xor
mov
xor
sbb
mov
sbb
and
inc
xor
cli
out
out
mov
inc
xchg
mov
mulb
or
cmpsl
stos
inc
pushf
sbb
stos
pop
out
bound
lods
iret
mov
lds
push
ss
adc
out
ret
and
xchg
mov
test
jge
add
or
scas
pusha
rorl
clc
or
in
rcl
xlat
inc
xchg
add
jne
dec
loope
sub
add
testl
imull
cmp
add
ret
sarb
cmpsl
xchg
jmp
icebp
push
mov
push
fldenv
lds
das
ret
scas
mov
pop
lcall
jae
lret
test
repz
js
sub
pop
mov
fs
pusha
out
int3
aaa
jbe
sub
xor
cs
dec
mov
in
loop
mov
dec
stos
or
jg
sbb
stc
mov
dec
xchg
mov
mov
pop
lcall
icebp
and
aam
mov
xor
adc
outsl
inc
test
test
sub
data16
xor
inc
dec
test
cmp
push
inc
out
sbb
adc
sbb
ljmp
insl
int
into
fldl
mov
jl
dec
mov
out
rcrl
dec
jle
aaa
sub
jge
lds
incb
sub
ds
lds
xchg
mov
cmp
pushf
xor
ret
adcl
sbb
inc
clc
pop
std
aaa
int
mov
stc
inc
lcall
add
icebp
push
or
mov
into
push
dec
icebp
cwtl
dec
dec
rorb
aas
data16
push
cwtl
lds
cmp
push
notl
cmp
cmp
inc
pop
mov
hlt
xor
test
cld
in
enter
cmp
clc
pop
stos
ret
push
js
xor
inc
or
rolb
adc
mov
adc
dec
sub
or
adc
gs
jg
outsb
mov
movb
mov
andb
mov
popa
sub
pop
inc
ja
dec
leave
cmp
add
add
and
xor
out
jp
insb
clc
mov
cmp
mov
or
idivl
repz
lret
repnz
in
sub
push
pop
outsb
into
divb
pop
mov
icebp
pop
aam
add
jno
shll
push
mov
jae
repz
fwait
pop
cmc
les
sbb
pop
add
loopne
jge
cli
xchg
add
fnstenv
cmc
gs
lea
aaa
std
and
or
jo
test
imul
push
movsl
add
imul
sub
sub
inc
les
sti
int3
mov
pop
sub
ror
and
xchg
fsubs
adc
mov
mov
sarl
gs
sbb
add
inc
mov
push
lods
jmp
adc
mov
fcompl
scas
loope
mov
mov
add
sub
repz
test
add
add
mov
rclb
dec
xchg
mov
mov
stos
aas
inc
inc
stos
cmp
or
fbld
outsb
cmp
mov
clc
stos
fisttps
cmpsb
xor
push
les
adc
lahf
xchg
mov
or
ret
pop
outsb
mov
dec
jmp
mov
or
sbb
inc
jbe
sahf
pop
jae
fs
push
cwtl
jne
daa
sbb
loopne
or
adc
push
xchg
repz
mov
outsb
in
pusha
pop
data16
mov
shrl
imul
push
out
sahf
jg
arpl
sbb
xchg
push
bound
std
js
dec
xor
das
insl
popa
cmp
stc
loopne
je
and
xchg
aaa
fnstenv
pop
fidivs
fidivs
and
aad
imul
imul
cld
inc
jo
les
and
mov
decb
subl
outsl
ss
xchg
imul
test
sbb
rorb
sub
inc
js
lcall
cltd
popa
or
pop
aam
push
fsts
cmpsl
push
mov
loope
push
dec
es
filds
sti
dec
mov
dec
fistpl
lock
jb
shrb
or
js
sarl
outsl
ficoml
mov
sub
ss
jmp
movl
push
je
push
sti
movsb
xor
test
lea
lahf
or
scas
dec
mov
jnp
mov
jle
jle
jmp
rcll
jecxz
scas
adc
inc
fsubs
pop
xchg
mov
jp
lods
loopne
stos
ror
fidivs
in
insb
sub
adc
xor
sbb
shr
push
and
jecxz
or
fisubl
cli
hlt
mov
hlt
fidivrl
mov
or
iret
aas
les
push
andl
add
mov
mov
jb
jo
push
and
mov
pop
dec
mov
inc
pop
mov
enter
loop
test
lods
into
loop
arpl
or
out
std
dec
or
xchg
lods
jg
xor
push
insl
lahf
loope
imul
pop
in
stc
lds
clc
rol
cmp
mov
add
dec
adc
and
pop
mov
loopne
add
push
sbb
in
mov
xlat
add
dec
fbld
push
scas
pop
dec
stc
mov
pushl
fmuls
pop
sti
push
sub
cmp
inc
push
mov
cmp
scas
add
sub
das
outsl
inc
inc
mov
in
fildll
push
jbe
mov
mov
cs
mov
sbb
cmpl
aas
in
jbe
movsl
in
cmp
xor
ljmp
icebp
lds
mov
lret
cld
or
fidivl
mov
cld
mov
enter
jle
sbb
sub
rcrb
push
jle
cmp
dec
xlat
jmp
arpl
pop
test
push
cmp
fsubs
adc
adc
or
fsubrl
push
testb
xchg
add
inc
sbb
and
push
adc
xchg
pusha
movups
call
or
and
rcrb
dec
daa
jl
or
dec
stc
or
adc
cmp
mov
push
xchg
ja
repz
mov
repz
inc
shlb
inc
adc
jmp
iret
out
push
jmp
cmp
mov
mov
test
cmpsl
pop
cmpsb
rcrb
insl
add
adc
add
xor
or
or
add
or
stc
call
sti
inc
aad
and
pop
inc
call
push
xchg
mov
sub
mov
ljmp
pop
xchg
shl
insb
or
jmp
and
nop
das
faddp
push
mov
call
mov
xor
pushf
mov
mov
sub
adc
pop
es
pop
mov
sub
push
xchg
sahf
add
cli
sub
inc
push
idivb
or
dec
mov
mov
sahf
adc
mov
dec
aas
out
sahf
mov
or
gs
loop
cmp
sbb
inc
dec
and
dec
cmc
add
cmp
push
out
inc
xor
cmp
call
xlat
shl
mov
push
lcall
popa
or
ret
aaa
ret
addr16
sbb
sub
addb
pop
hlt
add
sbb
gs
shll
jo
xchg
sbb
jne
loopne
xor
gs
push
xchg
xchg
cmc
add
es
jne
lahf
lods
movsl
daa
or
aad
and
cmp
sbb
mov
dec
mov
aas
imul
test
pusha
push
test
push
orb
fsub
test
test
mov
sub
dec
mov
and
fnsave
aas
out
notb
adc
sbbb
jno
sarl
cs
mov
int
jge
ljmp
push
cmp
xor
or
aam
xor
mov
lds
pop
mov
push
fildl
xchg
popf
pushf
shl
push
and
enter
push
stos
repz
pushf
sbb
adc
lds
rcrl
insl
and
jle
es
lcall
mov
mov
xlat
repz
mov
int
stos
mov
outsl
xchg
stc
inc
adc
mov
js
push
cli
fiaddl
sbb
xchg
jb
sub
test
lret
fistpl
rcll
pop
in
cs
lcall
or
fs
test
push
fldenv
shrl
jmp
les
call
mov
fstpt
decb
xlat
push
jbe
jp
ret
pop
idivb
mov
lret
in
das
pop
sbb
test
shll
shrb
test
add
cmp
in
pusha
in
xchg
xchg
inc
notb
ss
call
orb
fisttpl
push
insb
sti
jne
pushf
das
add
cmp
xor
repnz
cmove
pop
sbb
push
xchg
xor
inc
js
adc
mov
jno
sbb
mov
push
and
cwtl
sbb
lahf
mov
call
mov
dec
mov
push
xlat
icebp
scas
cmpsb
push
mov
andb
mov
jle
rcl
jmp
lods
xor
movsl
sub
das
aad
clc
xorb
bound
push
xor
rcrb
aad
outsb
push
das
push
mov
push
push
jle
pusha
xor
mov
push
ficoms
sub
fiadds
cmc
inc
pop
inc
jp
pusha
ja
mov
shll
pop
cs
leave
icebp
jbe
fadd
lret
push
cmp
cmp
pop
dec
mov
lds
sub
scas
enter
xchg
arpl
inc
or
or
clc
sbb
pop
aad
sub
pushf
inc
stos
cwtl
into
lds
outsl
adc
mov
fs
js
ret
adc
pusha
inc
fstps
notb
scas
stos
add
pop
inc
dec
jge
pop
mov
imul
sbb
in
pop
pushf
repnz
scas
mov
insl
sti
mov
jecxz
cli
cmp
js
out
cltd
rcr
xchg
cmp
push
lds
cs
mov
test
push
sbb
inc
sahf
push
jecxz
fcoms
push
adc
adc
out
ficompl
dec
and
pop
push
dec
and
adc
test
ret
insl
mov
add
push
mov
subb
mov
pop
popa
pop
jmp
cmovbe
in
bound
xor
dec
rcrb
into
aam
insl
in
add
mov
xor
fcmovb
dec
in
pop
mov
xor
aam
sbb
mov
out
push
adc
pop
mov
inc
enter
adc
mov
fwait
aam
stos
pop
xchg
arpl
rcll
push
int3
mov
clc
inc
mov
aaa
pusha
xor
mov
jge
jne
add
mov
movsl
mov
fstp
out
mov
cmp
sbb
mov
jbe
test
and
mov
icebp
out
gs
push
add
and
and
xor
mov
out
sbb
imul
mov
add
lret
insb
fidivrl
stos
push
push
movsl
arpl
pop
inc
mov
adc
pop
in
inc
add
and
sbb
sbb
cmc
inc
or
pop
insb
pusha
fisubrs
lret
lods
cmp
decl
aam
rcll
or
shll
sub
es
scas
clc
xchg
push
dec
mov
push
pop
mov
aas
test
bound
adc
je
stos
push
inc
xchg
and
mov
inc
sbb
and
test
xor
xor
add
idivl
and
mov
push
fmull
inc
outsb
push
jg
adc
adc
lock
inc
xor
int3
xchg
scas
scas
push
mov
dec
mov
pop
outsb
and
cmp
adc
les
int3
ret
cs
jb
cmpsl
cld
mov
add
outsl
dec
cli
mov
xor
push
mov
mov
pop
mov
ficomps
cmp
jp
insb
xor
adc
ljmp
lcall
js
cltd
mov
inc
push
mov
les
add
push
aad
shrb
sub
mov
xchg
das
mov
addl
cmp
in
addr16
sub
or
sub
pop
in
cmp
call
outsl
jecxz
jno
jb
cmp
icebp
jns
je
add
or
pusha
mov
repnz
clc
pushf
adc
and
not
mov
adc
adc
pop
vmread
push
hlt
mov
fwait
jecxz
jb
push
test
add
dec
sar
mov
jnp
sub
fwait
into
add
adc
push
pop
or
dec
and
dec
push
dec
sbb
or
test
jo
jp
je
call
in
les
std
and
mov
rolb
scas
mov
or
repz
dec
or
mov
imul
scas
div
je
outsb
notb
xchg
cli
pop
cmp
mov
scas
inc
test
ss
push
nop
pop
and
loope
int3
popf
or
insl
lock
je
leave
and
cld
stos
and
mov
fimuls
sub
lea
shll
add
inc
cmpsl
sub
mov
psubq
add
shll
push
test
lds
push
inc
mulb
jmp
out
hlt
pop
jnp
fs
rcrb
insl
int3
ljmp
sahf
outsl
cmp
push
inc
loope
movsl
cmp
mov
cmp
roll
jbe
cmp
enter
lcall
ret
or
xchg
stc
mov
fcoms
and
mov
mov
xor
dec
pop
xorb
pop
iret
mov
jne
fdivl
adc
mov
stos
das
outsb
stos
add
or
rcr
xchg
or
clc
sbb
out
pop
xchg
mov
xchg
or
push
aas
scas
xchg
xchg
dec
mov
cmp
cmpsb
adcb
mov
fsubrs
or
jnp
sti
ret
mov
mul
and
mov
adc
cmp
push
fnsave
xor
pop
pop
hlt
testb
xor
fs
aaa
sbb
inc
shlb
arpl
cmp
jb
xchg
and
inc
daa
pop
popf
add
nop
mov
dec
mov
test
sar
lcall
xor
sbb
mov
pushf
rcrb
xchg
cld
pop
xor
mov
popf
gs
push
cmp
into
test
dec
mov
adc
mov
sub
jecxz
fiaddl
xor
mov
int
gs
inc
call
mov
xlat
sbb
pop
cmpsl
mov
mov
cmp
jge
sub
push
stc
out
mov
aad
pop
mov
adc
stos
xor
repnz
dec
test
iret
mov
jns
ficompl
dec
mov
int
jg
mov
mov
mov
lcall
leave
push
jnp
cs
gs
mov
andl
cmp
dec
cmp
dec
sti
xor
test
sub
adc
dec
sub
and
mov
lret
insl
scas
sbb
xchg
movsl
test
cli
mulb
fmulp
cmp
push
mov
jecxz
or
loop
xlat
loope
aad
dec
outsb
mov
cltd
ret
enter
ret
jbe
jnp
cmp
dec
mov
stos
dec
sub
bnd
lea
xor
test
lret
es
mov
es
mov
sub
call
mov
cwtl
sub
push
std
push
shrl
cmpsl
mov
lods
aad
xor
dec
jae
sub
or
mov
aaa
sti
stos
xchg
pop
or
clc
inc
stos
pushf
push
pop
ret
xor
xor
sub
pop
lock
test
out
fwait
inc
in
push
decb
push
outsb
xor
mov
test
mov
jecxz
bnd
xor
adc
jno
fdivrl
inc
repz
push
lods
cli
cmp
lcall
inc
jno
fwait
xor
adcl
idivb
sete
add
mov
cmpsw
pop
or
daa
push
jne
push
fsubp
faddp
loopne
inc
dec
push
out
fnstcw
lahf
xor
inc
insb
push
mov
cwtl
mov
push
adc
fdivrl
shll
leavew
push
or
push
or
push
xor
das
fwait
adc
xchg
psubsb
shlb
shl
stos
repnz
mov
xchg
push
xor
testb
mov
sbb
call
out
mov
xor
mov
push
mov
fdiv
pop
sar
je
aad
push
push
inc
fidivs
pop
faddp
sub
in
sub
fiadds
cmp
add
cmp
cs
and
das
sub
scas
das
out
inc
adc
notl
popa
les
xchg
aad
stc
and
mov
addr16
es
loopne
sbb
es
addr16
arpl
xor
cmp
pop
sbb
dec
cmp
xchg
movsl
popf
jge
sub
mov
cmp
inc
sbb
shrb
out
popa
and
dec
shll
dec
stc
jl
cmpsb
mov
mov
movsb
push
push
pop
mov
mov
insl
sub
sahf
jle
adc
sbb
mov
dec
push
test
ds
arpl
xchg
hlt
arpl
test
jmp
dec
dec
sub
add
lods
loope
outsb
or
pop
test
xchg
pop
mov
and
fnstenv
inc
loopne
mov
mov
ffree
xor
out
or
mov
and
notb
repnz
cs
ret
lds
push
adc
and
push
adc
mov
xchg
addr16
mov
mov
aaa
sarl
add
mov
adc
jnp
pushf
imul
jb
inc
jne
xchg
pushf
sbb
xchg
lea
sub
in
mov
adc
inc
and
mov
jg
or
jl
ja
ds
sbb
ror
sbb
repnz
xorl
shl
xor
pop
in
call
xorb
repz
clc
sub
pop
or
sub
int
fstps
rcrl
xor
cli
ret
jno
shr
bound
mov
test
imul
imul
sbb
or
fimuls
pop
mov
jns
ficoms
jg
jecxz
jg
cmp
cmp
fnsave
mov
popa
fnstsw
and
mov
fs
sub
ljmp
out
fs
roll
mov
fs
and
mov
mov
or
aaa
inc
aad
cmp
and
push
iret
xor
mov
adc
loope
lds
or
cmp
and
xchg
pop
fldt
mov
stos
adc
mov
bound
shlb
and
cs
adc
cld
mov
xchg
mov
pop
subl
ficomps
gs
mov
inc
push
inc
inc
push
outsb
dec
jmp
dec
xchg
pop
cwtl
cmpsb
xor
out
ja
sbb
orb
fwait
sbbl
aad
fstl
add
mov
jg
sub
adc
and
fs
push
dec
fisubl
jecxz
push
cpuid
mov
lods
mov
mov
in
out
push
clc
mov
and
bound
push
inc
repz
push
es
or
xor
xchg
fsub
or
xchg
out
in
enter
int
lods
mov
cld
pop
cmp
xchg
inc
clc
fsub
xor
pusha
xor
mov
jle
push
dec
inc
add
in
call
arpl
mov
movsl
mov
stos
imul
mov
iret
aaa
insl
sahf
pop
push
outsl
sbb
stos
sub
aas
movsl
pop
test
stos
repnz
sbb
imul
mov
mov
sub
jbe
and
pop
aam
dec
testb
inc
jg
cmp
mov
mov
jns
das
inc
nop
cli
inc
dec
sahf
pop
test
in
bound
jg
daa
and
fwait
int
add
jge
or
mov
leave
fidivl
fmuls
insl
push
mov
xor
jge
mov
in
mov
dec
popf
mov
inc
pop
js
cli
cmpb
mov
fstpt
push
mov
jle
aaa
movsb
pop
daa
out
das
push
xchg
es
xor
and
movsl
repz
dec
xlat
mov
mov
mov
push
mov
or
dec
clc
mov
das
sub
and
mov
mov
inc
ljmp
loope
mov
fs
flds
push
add
mov
jne
mov
loopne
out
push
push
and
ja
sbb
jnp
in
out
psrlq
repnz
out
mov
add
jecxz
cwtl
or
das
mov
dec
xlat
cmc
addb
test
mov
mov
data16
mov
shl
push
or
stos
mov
ret
sub
ds
mov
pop
lret
movsl
push
ds
add
and
push
xlat
pop
sarb
fidivrs
push
mov
fwait
mov
mov
aas
popa
sbb
cmp
jne
mov
cwtl
test
repnz
xchg
push
bound
pop
push
pushf
and
mov
mov
pop
and
cld
mov
sar
jle
mov
and
cmpsb
cld
lret
data16
ficoms
cmp
xor
sarl
push
addr16
fcomip
mov
pop
jne
cmpsb
fs
mov
xchg
es
cmpsl
pop
mov
shl
push
jp
orl
mov
popf
icebp
out
mov
ret
sbb
xchg
push
mov
jp
mov
imul
xchg
pop
mov
in
int3
clc
cmpsl
add
cltd
push
sub
jno
ds
add
dec
fiaddl
push
mov
xchg
das
fsubrl
jns
or
mov
rorb
mov
gs
jbe
add
fists
jg
lret
call
cmp
les
adc
out
mov
aaa
fsts
cmc
mov
es
fdiv
mov
adc
inc
hlt
lods
adcb
orl
jne
or
test
xor
and
cmpsl
and
insl
out
inc
decl
outsb
sbb
mov
jg
ret
adc
popa
sub
not
mov
lret
rorb
sbb
xlat
mov
fwait
pop
sbb
xchg
gs
andb
or
push
mov
cli
push
cmp
pushf
mov
rorl
stos
xchg
pop
pop
xchg
xchg
pop
sbb
dec
ret
in
andl
into
cmp
icebp
xor
out
adc
cmp
pop
mov
cs
aad
les
add
loopne
and
js
lock
or
stc
xchg
or
dec
xor
sbb
xchg
fcomps
cmpsb
ljmp
cmp
cmp
and
sub
push
scas
cmp
push
mov
cs
popf
xor
pop
cwtl
popa
sbb
lds
adc
mov
pop
jp
enter
ljmp
decl
in
sti
push
or
out
xor
and
jle
sub
sbb
pop
cmp
sbb
dec
push
xchg
mov
lahf
test
pop
movsb
push
mov
inc
sbb
inc
jbe
fdivrl
xor
xor
xor
adcl
sbb
add
notl
cld
xor
leave
ljmp
int3
jl
pop
pop
cmp
lret
lahf
psraw
lret
pop
sahf
cld
cmpsb
scas
mov
inc
out
repz
mov
push
addr16
mov
inc
mov
pop
jnp
cmp
mov
movsl
arpl
out
add
leave
or
cmp
daa
xor
dec
and
dec
sti
shlb
fwait
or
push
iret
lock
aaa
js
mov
dec
dec
fisubrl
js
inc
xchg
xor
bound
push
data16
xchg
xchg
jne
inc
std
adc
push
cmc
scas
xchg
cwtl
outsl
cmpsl
xchg
movsl
mov
xchg
push
rcl
jp
xchg
adc
xor
adc
fnstsw
or
jo
in
lds
jg
out
dec
mov
rolb
test
jno
clc
aas
inc
int3
fld
mov
xchg
push
mov
push
mov
sub
mov
popa
sbb
pop
xchg
imul
jg
lret
es
insb
lret
adc
dec
insb
mov
arpl
add
or
inc
cmp
test
sbb
push
jmp
mov
cmpsb
sub
push
xchg
cmpsb
sbb
repz
adc
pop
mov
test
lock
lds
das
dec
cli
dec
xor
shlb
mov
sbb
aas
mov
sub
inc
dec
shrl
mov
outsb
scas
mov
mov
ljmp
add
jl
push
mov
mov
push
lahf
or
aam
mov
mov
mov
imul
pop
inc
mov
lret
mov
cld
mov
or
hlt
fwait
imul
push
fistpll
shufps
push
fwait
sbb
ss
ret
fwait
cmc
dec
shll
xlat
daa
or
addr16
mov
nop
mov
cs
sub
or
sti
fnstcw
pusha
adc
daa
clc
std
rol
shlb
fistl
pop
lods
mov
adc
ljmp
in
loope
jg
push
int3
sbb
aas
pop
adc
test
cwtl
push
and
mov
pop
jb
dec
mov
aad
stos
and
adc
sahf
push
pop
dec
outsb
mov
fs
jmp
mov
inc
scas
cs
outsb
cmp
and
enter
lods
mov
jbe
dec
sti
aad
loopne
int3
jp
push
pop
stos
or
aam
loop
cltd
push
in
idiv
aas
pushf
cld
or
lret
repnz
jge
pop
lcall
lret
or
sti
sbb
mov
jp
or
or
inc
inc
and
add
dec
and
push
rol
sbb
addr16
idiv
lods
fsubr
into
sti
cld
fstl
jbe
xchg
cwtl
stos
cmp
sub
addb
dec
xor
std
cmp
div
add
or
push
pop
fwait
cmp
sti
push
pop
sbb
notl
out
lret
mov
cmp
jno
std
jbe
or
and
push
sub
ja
rolb
xlat
imul
cmc
ja
out
cmp
mov
imull
adc
in
lret
repnz
inc
mov
push
cmp
sbb
fsubrs
scas
mov
loop
adc
test
mov
xchg
dec
sub
enter
mov
jecxz
mov
sbb
arpl
scas
xlat
cmp
mov
daa
xor
sti
mov
arpl
mov
jg
in
push
jo
dec
scas
jge
arpl
or
outsb
sub
pop
out
mov
mov
scas
lods
inc
jp
pop
subl
stos
jno
aam
movsb
popa
and
in
loope
dec
adc
lahf
rolb
imul
mov
and
stos
sarl
dec
dec
test
int3
ror
jg
dec
xchg
hlt
push
shrd
sub
mov
outsb
lcall
test
std
imul
push
out
repnz
ficoml
xchg
lret
in
sahf
cmp
outsl
or
inc
xchg
pop
or
mov
jns
dec
jns
aaa
movsb
fstpl
xor
cmpsl
adc
imul
dec
sub
xchg
test
mov
outsb
add
or
imul
test
inc
sub
cmpsl
les
cmp
and
sarl
sub
js
mov
pushf
xor
fcmovu
sub
or
pop
out
adc
aad
insb
adc
add
dec
fwait
in
outsl
sbb
xor
sub
push
adc
pop
xor
nop
push
popf
mov
leave
bound
push
inc
sarl
mov
xchg
pop
enter
popf
out
inc
adc
outsl
xchg
jmp
mov
divb
mov
sbb
shlb
lods
dec
jne
lds
push
cmp
xor
and
dec
mov
add
cli
scas
ljmp
movsl
mov
mov
or
cmpsb
xchg
mov
outsl
cmpsb
ja
mov
xchg
xor
call
mov
mov
ficompl
cs
fists
jmp
rorl
jnp
mov
add
push
mov
cli
dec
mov
lods
xlat
orl
push
mov
test
es
leave
js
hlt
or
mov
test
sahf
cmpsl
jle
and
loopne
push
lret
push
and
ficoml
cmp
imul
addr16
hlt
ss
push
jb
std
sub
inc
loopne
cmp
push
cmpb
sub
dec
sub
add
out
insl
xchg
repz
add
jmp
scas
dec
xor
jae
add
push
fwait
popa
mov
xchg
dec
mov
bound
fcoml
outsb
cmp
hlt
icebp
cmp
add
mov
cld
xorb
ljmp
test
test
jl
inc
adc
shlb
daa
shlb
lods
xchg
jl
rcrb
push
push
mov
mov
fbstp
xor
pop
add
push
test
fbld
repnz
mov
add
mov
push
jle
loopne
cmp
jmp
or
fisubrl
mov
jmp
loopne
lds
jo
adc
mov
or
js
fisubrs
les
add
sbb
sub
hlt
imulb
mov
repz
push
pop
lods
pop
cmp
stos
mov
push
gs
adc
aaa
jge
lds
out
mov
xchg
ss
shrb
inc
fidivs
mov
lods
test
add
iret
ss
aam
std
movsl
jb
sub
adc
popa
xchg
gs
stos
xchg
cmpsl
cmpsl
stc
fs
jb
popf
adc
sub
stos
jecxz,pt
ds
je
inc
stos
test
out
mov
pop
jle
pop
aaa
fwait
xchg
arpl
xchg
sub
bnd
jne
lock
iret
and
xchg
push
and
cmp
xorl
lds
sub
push
fsubrl
and
dec
outsb
xchg
pop
xchg
mov
insb
pop
adc
fiadds
out
push
mov
sti
and
mov
fs
jp
jae
sub
xor
jl
jae
pushf
addr16
mov
sbb
pop
xchg
loope
inc
dec
dec
mov
xchg
jmp
adc
sbb
jl
xlat
cmp
int
sbbb
mov
loopne
les
adc
sbb
dec
js
fwait
into
jbe
test
clc
bswap
and
and
xchg
neg
jg
jbe
repz
push
fdivrs
loope
inc
ljmp
push
out
sbb
dec
clc
fs
ret
cmp
lret
sbb
add
ja
fcompl
sub
mov
mov
jp
cmp
loope
sti
fwait
xchg
inc
push
data16
rol
push
pop
adc
push
test
sbb
push
sbb
pop
sar
push
fmull
test
sub
out
pop
xlat
and
pop
jo
mov
shlb
pop
insl
xor
push
xor
pop
stc
mov
lods
xor
dec
lret
out
cltd
test
mov
fwait
adc
inc
inc
ljmp
push
lods
iret
outsl
repz
sub
in
test
lods
stc
xchg
imul
sub
mov
ja
cmp
je
lds
movsl
dec
stos
mov
js
adc
fdivrl
jl
decl
sahf
js
aad
cmp
int
ja
cmp
stos
jg
mov
jecxz
rcll
int3
movsl
stos
mov
sbb
les
rcrl
loop
and
jecxz
ret
jb
aas
mov
shrb
mov
leave
pushf
iret
inc
pop
xchg
sub
dec
mov
lods
cmp
pop
ret
lds
negl
inc
es
fwait
pop
into
cmpsb
dec
and
mov
or
cli
insl
push
lea
dec
inc
loope
das
jno
jns
cmp
gs
add
cmp
daa
addr16
cltd
out
cwtl
xchg
sti
inc
xchg
push
nop
inc
fidivrs
hlt
sbb
pop
cwtl
push
mov
sub
add
mov
out
mov
and
adc
sbb
popw
fwait
pop
pop
fistl
lods
sub
out
sub
stos
icebp
or
mov
ja
test
xor
dec
ds
xor
xchg
stc
stos
cli
das
fldt
in
mov
dec
xor
lcall
and
inc
je
cwtl
sub
stos
mov
ret
and
or
repnz
outsb
lds
inc
subl
and
sub
sub
adc
loopne
xchg
xchg
cli
std
arpl
test
fcmovnu
add
pop
mov
js
jp
lcall
cmp
jae
test
in
cmp
cmpsl
fldt
pop
jnp
sbb
xor
inc
and
lods
insb
jp
dec
enter
popf
icebp
lret
sarb
stos
lret
leave
jmp
ds
pop
andl
cmc
mov
cmp
and
mov
cmp
dec
insb
scas
test
push
inc
cs
insb
cmp
cli
push
push
das
in
imul
dec
lods
lcall
and
loopne
pop
xchg
shlb
jnp
loopne
cmp
sbb
stos
jg
out
lret
sub
in
pop
shll
out
jbe
cmp
shlb
inc
adc
cwtl
push
xor
inc
or
stos
pop
xchg
jmp
sbb
ljmp
push
rclb
jnp
xchg
out
xor
pop
add
sti
jno
daa
sub
lock
fldt
push
mov
testb
jl
cs
mov
jae
xor
popa
cmc
dec
std
xchg
mov
orb
xlat
popa
fsubl
sbb
dec
aad
loope
test
cmp
push
rclb
xor
jle
and
xchg
inc
ss
inc
nop
jle
mov
xor
inc
lret
divb
popa
nop
enter
adc
mov
xchg
lds
add
dec
mov
dec
repnz
bound
xor
fmull
xchg
outsl
mov
sbb
jp
mov
and
test
sbb
jle
xchg
scas
or
cmp
push
gs
pop
mov
jnp
aaa
or
sbb
icebp
inc
sbb
or
dec
jne
push
push
lret
mov
dec
sub
jns
push
or
repz
pop
jns
cmp
dec
sbb
pusha
repnz
pop
jns
xchg
mov
pop
ret
or
jo
out
xlat
mov
in
cwtl
rclb
xor
lahf
insl
daa
jae
xchg
cmp
movsb
jecxz
mov
dec
mov
rorb
mov
sub
xchg
jge
push
jg
jl
and
dec
xor
sub
jnp
xchg
shll
jl
je
pop
and
filds
negl
adc
inc
subl
gs
lea
dec
jne
fcmovnbe
jno
pop
add
lret
int3
in
jp
andb
add
pusha
jecxz
xchg
and
aam
xchg
mov
adc
rcll
clc
mov
push
xorb
mov
pop
cmp
mov
pop
out
imull
push
or
aas
pushf
cmp
add
jle
clc
in
add
fiadds
pusha
inc
test
andb
out
cmp
pop
aad
or
jo
mov
int
fcompl
bound
nop
ucomiss
js
jge
pop
gs
push
popf
jbe
andl
sub
testb
rcrl
xchg
loop
sahf
mov
jg
hlt
push
mov
clc
mov
movsl
mov
mov
pop
add
jne
pop
adc
dec
push
add
mov
out
cmp
push
adc
push
js
scas
pop
lahf
or
jb
outsb
leave
rcr
lods
mov
rorl
imul
sbb
nop
test
rorl
and
mov
jae
xchg
mov
icebp
adc
dec
test
pop
lcall
push
add
cmp
test
mov
test
inc
mov
pop
pusha
testl
in
and
popl
adc
push
cmp
push
ja
sahf
add
xchg
push
mov
pop
sbb
push
ficomps
push
add
ret
ja
iretw
mov
ret
inc
and
mov
arpl
popa
movsb
ljmp
iret
sbb
mov
lcall
lcall
es
out
lret
push
jae
out
mov
jmp
aas
lret
enter
stos
stos
enter
mov
dec
mov
xchg
push
popa
mov
push
jl
cmp
xchg
data16
sub
std
jle
jne
push
xor
imul
push
inc
stos
cmpsl
daa
mov
das
jo
std
jle
mov
add
xor
cs
mov
aas
xor
mov
loopne
inc
xlat
xchg
cmc
call
lods
inc
scas
cmpsb
pusha
pop
push
mov
xor
cmp
imul
xor
ljmp
adc
mov
inc
push
into
mov
jo
push
jnp
fbld
les
fs
dec
jae
hlt
xor
pop
xchg
lahf
int
testl
xchg
and
clc
lahf
xchg
jg
cs
aaa
fsubrs
cmp
fs
iret
inc
mov
push
out
fucom
frstor
push
lret
sub
fnsave
add
push
repz
ds
jmp
fldl
jp
jecxz
rolb
mov
aas
repz
sbb
cmc
ret
inc
clc
sbb
or
imul
aaa
cltd
mov
xor
arpl
xlat
inc
push
sbb
inc
cli
dec
movsl
dec
mov
ds
mulb
inc
add
out
imul
add
mov
popf
mov
and
les
or
std
outsl
out
jecxz
xchg
cmp
cmp
pop
jno
add
cmp
pop
iret
bound
mov
iret
fnstenv
jae
lret
mov
mov
lods
ficoml
xor
cmp
gs
push
sub
dec
in
sub
push
cwtl
mov
adc
sbb
push
insl
fmull
xchg
loopne
inc
cmp
and
cmc
out
mov
testb
outsl
arpl
xlat
xor
push
out
insl
popf
mov
or
jae
rolb
inc
int3
sbb
jmp
pusha
push
test
js
int3
dec
dec
das
test
stc
pop
xor
ss
xchg
jecxz
pop
adc
xor
mov
cltd
jns
cmc
pop
repnz
lahf
sti
jnp
add
icebp
movsb
pop
test
mov
xchg
xor
scas
insb
mov
ljmp
xlat
mov
imul
push
fisubl
sub
into
inc
dec
sub
sbb
dec
add
ret
inc
mov
mov
inc
or
lds
lea
out
flds
jecxz
or
shll
out
xchg
cwtl
mov
lea
loopne
iret
xchg
lea
dec
inc
adc
adc
adc
arpl
ret
shl
sub
fwait
jmp
fcomps
jle
xor
dec
push
or
pop
pop
cld
mov
cwtl
out
rclb
mov
outsl
push
gs
sub
pop
pop
icebp
mov
das
data16
xchg
sahf
push
or
jmp
inc
cmp
push
jg
push
mov
outsb
