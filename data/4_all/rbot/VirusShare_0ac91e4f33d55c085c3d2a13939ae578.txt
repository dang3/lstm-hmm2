jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
jmp
xchg
pop
dec
pushf
pop
jle
pop
mov
mov
pop
add
insl
sbb
and
mov
push
pop
sbb
inc
add
dec
dec
push
push
pop
pop
es
jle
push
mov
xchg
shrb
aam
sbb
call
jo
dec
movl
mov
inc
xchg
pop
cmp
mov
mov
inc
cmp
pop
andb
add
adc
lahf
add
and
in
fxsave
repz
lcall
xchg
jae
jo
adc
cmp
mov
andl
mov
push
arpl
jl
sbb
movsb
insl
mov
inc
cmp
sbb
sub
cwtl
arpl
popf
mov
ret
jg
gs
add
scas
or
imul
lret
or
sar
add
xor
das
inc
xrelease
cmp
jne
gs
xchg
cltd
popa
popa
jge
dec
mov
je
dec
xchg
test
pop
dec
xchg
nop
je
jnp
orl
in
je
imul
dec
lcall
pusha
popa
insl
sbb
divl
xchg
mov
popa
push
add
inc
push
pop
insl
cmpsl
mov
push
mov
filds
pop
jno
stos
scas
aam
jno
mov
scas
cld
pop
lahf
js
movsl
jg
inc
push
addr16
pop
fwait
jbe
mov
addr16
pop
xchg
insl
stos
lods
jbe
xor
sbb
or
scas
mov
aam
les
nop
mov
js
stos
pop
jae
inc
popa
mov
in
lods
adc
shrb
xchg
adc
add
fwait
js
inc
sbb
sbb
and
mov
cmp
pushf
js
cmp
inc
shll
dec
testl
cmp
push
lea
jmp
xchg
adc
xchg
or
cmp
das
mov
loop
adc
fwait
and
out
cmpsl
aad
cmp
adc
pushf
ret
xor
fsubr
inc
mov
ja
ja
sbb
inc
inc
shrb
mov
and
cmp
mov
stos
sub
in
sub
movsl
fisubs
mulps
xchg
dec
lock
xor
pop
outsb
sbb
mov
dec
popa
adc
xchg
xorl
pop
movsb
movsb
inc
test
aad
pop
and
xchg
xchg
adc
fstl
jb
push
and
jo
dec
ret
pop
pop
cs
push
mov
xor
out
jbe
mov
pop
movsl
popf
adc
repz
xchg
lds
jne
cmp
cmp
icebp
dec
jbe
jb
imul
sub
sbb
in
in
dec
inc
fistps
nop
mov
fisubl
inc
test
xor
rorb
and
scas
jb
idivl
xor
in
sub
jnp
pop
cltd
sbb
arpl
adc
sti
cwtl
mov
add
mov
mov
inc
ret
rol
out
and
fsubl
pusha
hlt
xchg
decl
push
inc
addr16
push
xlat
inc
loopne
mov
adc
xlat
add
push
add
shrl
stos
sti
faddl
xlat
mov
mov
xchg
mov
es
sub
hlt
adc
hlt
stc
sub
fcoml
or
jnp
mov
test
std
jmp
xor
clc
mov
pop
jnp
xlat
outsb
xlat
mov
cmpl
cltd
lods
jne
jmp
jg
inc
fsub
test
pusha
daa
dec
dec
nop
das
jae
lds
sbb
int
mov
cmp
hlt
je
inc
push
jno
stos
push
in
into
rcrb
cmp
cs
or
pop
mov
idivl
or
push
push
inc
jo
xchg
pop
xor
lahf
idivl
adc
outsb
test
sub
divl
push
and
pusha
das
jne
fisttpll
mov
divl
in
mov
dec
cmp
or
mov
pop
sbb
mov
push
out
mov
ds
in
mov
popf
movsb
push
in
push
pop
leave
out
rcrl
push
inc
mov
shll
pop
pop
out
popf
xor
jae
int
and
xchg
cld
jne
inc
dec
mov
push
push
inc
test
jle
and
incl
es
and
pushf
pop
and
ss
leave
adc
outsb
stos
int3
arpl
aas
pop
ret
push
jg
jns
bound
xor
bound
clc
addr16
mov
jmp
xchg
pop
roll
xlat
inc
jg
xchg
pop
add
mov
xchg
mov
xchg
jnp
mov
movsl
jge
fstpl
adc
lahf
xor
add
sbb
int
and
scas
lret
out
pop
cmp
shrl
jbe
stos
jmp
push
jmp
dec
int
aam
dec
cld
inc
loopne
mov
mov
into
and
sbb
test
mov
shlb
mov
popf
ret
mov
pop
fucomp
pop
dec
sarb
mov
mov
popa
xor
hlt
sub
pop
sbbb
cmp
out
outsb
lds
mov
repnz
mov
pop
iret
dec
mov
jge
dec
push
cmp
bound
addr16
ret
fiaddl
sahf
andb
pop
mov
insl
xor
aas
shll
fmuls
jge
xchg
repz
pop
sarb
aad
pusha
out
js
dec
addr16
lahf
outsl
xor
sbb
fstps
and
or
pop
dec
pusha
test
fdivrs
push
mov
ja
push
xchg
sahf
cmpsl
sub
jl
dec
jae
pop
jno
inc
aas
dec
mov
add
xor
in
test
xchg
bound
inc
or
lahf
in
cmp
push
ret
push
adc
pop
adc
push
decl
addb
sub
outsb
inc
xchg
add
mov
dec
jmp
mov
inc
pop
push
pop
lahf
call
sbb
adc
adc
jno
pop
dec
call
xor
pop
sub
xchg
sar
popa
jne
xor
fiadds
and
inc
ffreep
repz
stos
out
scas
fisubl
inc
jno
sub
jge
aaa
ret
test
dec
pop
pop
jecxz
inc
repz
dec
pop
pop
andl
dec
mov
pop
xchg
outsl
mov
or
xchg
lahf
push
lock
sbb
sub
xorl
das
adc
dec
dec
lret
xor
fmull
adc
pop
loop
sbb
add
sbb
fldcw
lahf
ficompl
mov
xchg
push
mov
repz
hlt
rclb
fsubr
lods
out
or
mov
push
push
stos
mov
or
addl
fistl
sbb
frstor
scas
mov
cmc
xchg
or
mov
jg
jno
jl
icebp
movsb
ret
jecxz
jp
aas
pushf
out
xor
jg
xor
jae
neg
repnz
pop
or
pop
mov
lock
inc
cmovl
ss
outsl
stos
sub
aas
pop
out
roll
dec
nop
lret
jae
lcall
jnp
decl
cmp
jg
cmp
addr16
pushf
in
scas
imul
pop
pop
rol
insb
mov
dec
fs
dec
sub
fistps
pop
and
lea
scas
addr16
pop
inc
shlb
cmc
pushf
andb
les
fnstenv
inc
xchg
insl
stc
je
pop
andl
test
inc
fucomip
pop
shrb
adc
shrb
into
add
dec
mov
sub
ret
repnz
repz
lock
insb
cltd
jb
jle
pusha
pop
jecxz
loopne
push
add
leave
mov
mov
mov
xchg
test
mov
addb
lods
jmp
xchg
jle
dec
xchg
or
xchg
pushf
jnp
andl
int
addr16
out
adcl
cmc
movsb
inc
rorl
adc
lock
insb
mov
pop
punpckhbw
add
and
js
xorb
mov
add
scas
dec
in
cltd
js
popa
and
in
adc
js
mov
mov
dec
lds
dec
adc
inc
push
push
xchg
pop
es
ja
pop
add
push
pop
and
fcmovnu
sub
cmp
cmp
mov
addr16
cmp
push
lods
ss
addr16
dec
stos
sub
xchg
fsubrs
movsl
daa
insb
push
fnsave
cmp
nop
hlt
jmp
push
cmp
sbb
ret
pop
icebp
fadd
icebp
cmp
add
jnp
sbb
cltd
fsubrl
jle
jb
mov
insl
sbb
or
stos
push
aad
dec
not
sbb
fldl
xlat
mov
sub
cvtdq2ps
int3
push
out
add
mov
rcrl
stos
and
sub
cltd
xchg
and
mov
or
fwait
scas
add
mov
and
mov
pop
sub
add
popa
scas
xlat
xchg
dec
je
dec
rcl
cmpsb
cmp
test
pop
mov
sub
dec
mov
ljmp
addr16
sub
push
ljmp
dec
std
dec
leave
mov
jmp
dec
in
mov
lret
and
mov
and
bound
cmp
ljmp
and
pop
inc
cmp
adc
cmpsl
frstor
jnp
mov
ret
dec
aam
pop
pop
cmp
dec
not
js
fistpl
mov
mov
and
mov
xchg
hlt
mov
add
pop
imul
dec
mov
mov
xchg
adc
test
data16
cmc
ss
dec
dec
mov
add
mov
sub
lea
dec
xor
bnd
hlt
xlat
lods
inc
stos
outsl
push
xor
mov
pop
flds
adc
or
push
cli
jl
subl
mov
je
dec
add
pushf
pop
push
mov
pop
lahf
loopne
mov
ja
test
lahf
mov
push
or
pop
out
in
mov
jb
jge
cmp
imul
outsl
dec
add
insb
xchg
push
insb
or
mov
dec
dec
adc
xor
mov
gs
xchg
cltd
push
xor
sbbl
js
add
lret
loop
mov
imul
fstpl
mov
push
popf
cmp
fwait
jg
adc
mov
in
cmp
aam
jne
insb
mov
jle
cmpsl
loop
xchg
push
dec
xor
in
inc
mov
ret
jecxz
orl
pop
mov
inc
push
sahf
lret
jg
xchg
inc
cmp
sub
sub
xor
cmp
push
and
mov
push
add
mov
push
jae
or
sub
sub
push
pop
push
add
add
push
inc
idivb
mov
pop
adc
jmp
pop
popa
aad
cmp
sbb
inc
jo
mov
cmp
mov
and
adc
ljmp
js
cmp
in
xchg
popa
int
aas
inc
pop
push
dec
pop
push
push
addb
data16
pushf
in
mov
sbb
ljmp
and
pop
push
cmpsb
jg
dec
push
sub
mov
dec
sbb
fcmovnu
mov
pop
dec
mov
loopne
insb
jne
movsl
rcl
and
push
mov
dec
daa
jge
push
fildll
lds
ja
pop
or
aad
xlat
shlb
xor
sbb
adc
mov
pop
and
gs
pop
loope
push
inc
mov
dec
pop
lcall
inc
or
fs
cmp
add
les
inc
xchg
push
inc
bound
dec
mov
test
insb
in
push
adc
ds
dec
cmp
pop
out
mov
daa
stc
ret
scas
mov
sbb
sbb
sbb
dec
xlat
adc
inc
pinsrw
adc
or
iret
stos
xchg
cmp
sbb
pop
xor
out
add
aaa
jae
insl
pop
test
jo
xchg
ret
sbb
add
shl
add
cld
mov
mov
aam
push
adc
rolb
sbb
pop
in
leave
pop
and
xor
sti
sub
out
ret
sub
subl
mov
or
jnp
mov
jmp
jae
test
out
dec
pop
je
test
insl
push
cmpsb
mov
int3
xor
nop
data16
imul
or
jp
out
push
movsb
inc
das
movsl
adc
xchg
insb
fnstsw
jno
cmp
mov
dec
jae
adc
sbb
xchg
ss
push
push
inc
xchg
pop
leave
pop
pop
mov
gs
pop
sti
xchg
test
mov
insl
imul
xorl
iret
mov
pop
gs
mov
mov
enter
jne
test
ficomps
pusha
jno
mov
push
xchg
cmpsl
test
cmp
inc
xor
jnp
arpl
pop
cmp
xchg
cs
inc
add
fisttpl
pop
mov
mov
daa
mov
fstpl
xor
lret
push
mov
pushf
lods
jo
add
lahf
in
and
bound
inc
clc
fs
mov
ja
ja
mov
mov
mov
ficoms
push
lcall
shrb
jnp
aas
and
dec
stos
jg
loop
addr16
xchg
xchg
mov
jge
popa
add
dec
dec
jp
lods
pop
fstpt
inc
lods
cmp
sahf
test
and
and
sub
push
pop
inc
ljmp
cwtl
or
ficoml
pop
add
maxps
je
incl
movsl
in
pusha
daa
insl
aas
cmp
mov
jle
push
xor
ds
dec
pop
inc
cmp
mov
test
cmp
movsl
cmp
subl
in
in
mov
adc
fs
push
lea
mov
jno
push
add
push
arpl
pop
into
cmp
adc
sbb
xchg
add
mov
aaa
dec
dec
rcr
xor
ffreep
dec
or
dec
mov
mov
imul
sbb
xor
sub
lods
mov
bound
pop
and
movsb
les
mov
fistps
subb
lods
imul
jl
xor
inc
dec
les
lds
rolb
ja
fs
fisubl
sub
xor
dec
pop
dec
lcall
add
aad
test
or
call
sbb
sbb
incl
inc
cmp
xchg
nop
sub
push
pop
std
push
dec
xor
in
mov
clc
and
cmp
negb
dec
push
cmp
push
sti
jns
and
bnd
popf
ljmp
lcall
in
lods
ficoms
mov
mov
xchg
inc
dec
adc
mov
jl
dec
push
nop
or
in
and
loope
mov
sub
dec
inc
push
dec
adc
push
xor
sub
fcmovnbe
push
les
test
je
jns
dec
lahf
outsb
adc
add
int3
cmp
faddl
addb
pop
nop
lods
cs
mov
and
pop
adcb
mov
pop
lahf
mov
js,pt
xor
aam
in
mov
aam
sub
jecxz
lahf
inc
xchg
sub
inc
xchg
iret
sbb
in
or
xlat
mov
outsl
jae
addr16
push
push
test
pop
movsl
in
arpl
insl
mov
out
pop
mov
scas
mov
pop
fstps
cmp
or
insb
test
icebp
inc
inc
mov
pop
imull
add
sub
jg
cmp
xor
adc
ret
cltd
xchg
pop
out
shr
iret
aad
inc
mov
pop
pop
outsl
xchg
loope
in
movsb
int
mov
dec
out
or
inc
enter
fwait
popf
mov
xor
hlt
aam
xor
in
mov
aam
cs
pop
outsb
lds
ret
les
add
push
xchg
dec
push
outsb
ror
addr16
test
in
popa
popf
ss
cmp
mov
jge
mov
xchg
outsb
pop
lret
dec
js
frstor
ficoms
xor
pop
sub
addr16
insl
xchg
inc
inc
lods
xchg
jl
push
adc
nop
or
ljmp
fwait
cmp
pop
pop
leave
mov
add
push
or
movsb
movsb
fwait
sti
fisttpll
inc
in
sti
adc
mov
dec
adc
dec
loop
mov
data16
sbb
inc
adc
cmpsl
sbb
stos
xchg
cmp
aam
dec
xor
popa
ljmp
push
test
insl
sti
mov
bound
jne
test
xor
gs
dec
les
jp
sub
test
sbb
mov
fucom
stos
sub
leave
out
inc
and
addr16
add
test
out
fnsave
mov
leave
aaa
xchg
test
movsb
mov
test
pop
pop
out
pushf
xchg
enter
aad
cmpsl
push
mov
and
movsl
xchg
lcall
xchg
mov
enter
inc
and
leave
dec
hlt
adc
jo
std
test
jp
loope,pt
add
dec
xor
xlat
jl
adc
xlat
test
stos
cmp
sub
jge
int3
jle
in
js,pn
pop
jb
pop
dec
push
mov
push
cmp
adc
mov
lret
int3
xor
sahf
and
jmp
dec
fstpt
jbe
aaa
popa
int3
jno
jo
xchg
push
outsl
or
mov
mov
cli
nop
xchg
std
xchg
xor
xchg
push
sub
scas
jno
lea
je
divb
out
bound
stc
cltd
inc
mov
stos
mov
xchg
leave
jnp
fldenv
sub
cld
cmp
je
inc
or
pop
ja
ss
ljmp
mov
add
inc
sarb
aaa
cmp
shrb
int
and
and
cmp
dec
jmp
icebp
sub
pop
push
std
push
lcall
aaa
daa
mov
or
lret
push
mov
dec
in
cmpsb
mov
xchg
or
xchg
push
xor
mov
or
jbe
inc
adc
and
ljmp
and
lcall
inc
add
insb
jno
push
inc
cmp
sbb
xchg
jae
or
movsb
shll
and
into
jge
push
mov
jno
sub
sbb
mov
cwtl
mov
mov
idiv
add
cmpb
and
jbe
push
xchg
push
stc
mov
cmp
ds
pop
or
adc
loopne
cmc
repnz
movsb
or
lret
push
push
icebp
ds
cmp
push
outsl
ret
dec
ja
ja
sbb
adc
call
mov
rdtsc
gs
shl
sbb
xabort
fldt
push
and
jno
cltd
insl
mov
fldl
pop
fcomi
xchg
dec
cmpsl
divb
ljmp
xor
fldt
mov
test
stc
bound
cmp
push
xchg
lods
loope
clc
lods
push
inc
inc
lret
push
inc
outsl
pop
adc
int
je
arpl
call
mov
jns
in
push
call
xor
pop
jo
sub
ss
mov
jno
fs
cmpsl
daa
out
mov
mov
and
lahf
jns
jle
out
xchg
adc
or
je
jns
xchg
adc
test
int3
lcall
push
jbe
aam
pop
out
mov
or
jg
into
or
in
mov
fs
xor
imul
lret
adc
push
ss
or
divb
addl
mov
pop
test
push
jmp
sarl
inc
xor
jbe
jge
xor
mov
in
std
add
cwtl
add
imul
mov
add
add
xchg
mov
xor
adc
mov
pop
or
push
loope
and
or
pop
and
out
movsl
call
adc
shrb
xor
pop
rorl
xchg
push
mov
pop
jge
push
es
mov
mov
test
push
mov
lods
sbb
xchg
sbb
sbb
sub
dec
sbb
divl
dec
xchg
cs
sub
or
arpl
pop
pushf
cmp
data16
outsb
or
sub
xchg
ds
lock
fldenv
mov
jmp
call
dec
lods
cmc
dec
lock
fxam
push
jg
inc
enter
sahf
sbb
push
fsubp
imul
arpl
rorb
stc
xor
mov
dec
or
pop
dec
inc
mov
stos
test
push
mov
push
inc
call
xchg
dec
sahf
out
gs
shlb
stc
ja
xor
dec
pop
repz
push
sub
pop
lods
mov
xor
jae
nop
push
add
aaa
push
sbb
push
rcl
jbe
out
sub
scas
sub
fiaddl
imul
push
negb
adc
enter
imul
sub
je
dec
std
jae
adc
and
mov
mov
xchg
test
xchg
aam
xchg
scas
sub
dec
mov
inc
je
xchg
xchg
cmpsl
mov
nop
adc
add
jp
movl
les
or
sbb
cmp
scas
call
shr
sti
push
in
mov
sti
cwtl
gs
adc
imul
fildll
enter
push
aaa
int3
sbb
subl
add
inc
jno
and
push
mov
xchg
or
mov
dec
inc
push
mov
jmp
sub
jl
dec
daa
mov
jp
xor
das
adc
js
sahf
mov
adc
sub
adc
add
in
or
push
lret
adcb
mov
pusha
push
mov
loop
mov
sbb
and
popa
fbld
pop
jae
dec
mov
cwtl
xlat
pusha
arpl
mov
and
insl
outsl
jp
rol
repz
addr16
mov
nop
jbe
test
mov
sub
adc
adc
aam
push
jge
xchg
mov
je
cmp
mov
fdivr
jl
sub
push
ljmp
lock
call
mov
stos
cltd
cmp
jbe
mov
sub
leave
adc
push
int3
out
andb
andl
ljmp
iret
add
sub
cmp
icebp
xor
aam
inc
mov
adc
pop
andl
notb
outsb
push
sbb
adc
ficompl
sub
pop
cwtl
cmp
push
xor
stc
shl
loop
jmp
mov
jmp
pop
imul
fs
outsl
inc
push
icebp
call
aas
cld
cmpsl
fs
cmp
int
add
pusha
es
out
aaa
jg
push
neg
adc
xchg
leave
nop
idivl
imull
push
xchg
fdivr
push
loope
daa
xchg
cmp
fxch
imul
ret
xchg
adc
scas
or
lods
mov
cmp
jo
rcll
sbb
or
lret
in
clc
mov
xchg
jne
test
pop
aaa
cmp
add
iret
int
mov
imul
dec
mov
pop
jae
stos
mov
dec
mov
aaa
xchg
jl
dec
xor
in
pop
in
outsb
outsl
xchg
push
jbe
xchg
jle
dec
lahf
push
mov
loope
xchg
pop
dec
push
xlat
mov
pop
fisttps
lods
fcompl
mov
pop
jg
lock
and
hlt
js
pop
xlat
insb
pop
inc
xor
dec
dec
mov
dec
xchg
rcrb
int3
and
cmpsl
dec
inc
clc
pop
push
pop
pop
bound
xchg
cmp
lock
repz
lret
and
inc
xchg
add
jb
ljmp
aam
jg
push
pusha
xchg
out
add
jbe
cmc
cmpsb
pop
push
sbb
jbe
icebp
call
sti
or
cmp
dec
xchg
push
xchg
lret
sub
bound
lcall
adc
pusha
pop
pop
inc
pop
inc
mov
fs
iret
cmpsb
pop
add
jne
test
push
dec
fldt
lds
ror
dec
lcall
dec
scas
jge
lea
jo
mov
push
sub
aaa
pop
sub
inc
sahf
je
rol
sbb
mov
inc
jp
sub
data16
fisttps
push
adcl
pop
out
and
les
inc
sbb
mov
jns
xor
pop
mov
xchg
pop
jle
pop
mov
jle
pop
pop
xchg
divl
btc
ror
mov
enter
int3
loopne
pop
jl
fstl
or
inc
or
sti
sub
adc
pop
inc
std
jge
fstpl
cmp
lcall
sub
loope
inc
frstor
imul
aam
jns
hlt
pusha
out
xlat
or
lret
or
lds
jecxz
into
jo
mov
sub
cmp
inc
xor
lcall
rorl
test
or
les
or
sub
hlt
dec
out
xlat
je
adc
xor
mov
scas
jnp
jecxz
sub
nop
or
add
ja
test
data16
lock
dec
mov
xor
pop
add
ja
test
push
jge
adc
jge
jg
sbb
sbb
shrb
sub
xor
push
popf
xlat
ds
xlat
int3
push
mov
adc
adc
sub
mov
push
cwtl
in
add
test
not
scas
mov
pop
mov
aas
mov
pop
sti
into
mov
jb
in
dec
mov
subl
mov
pop
xchg
dec
xlat
xor
xchg
push
inc
mov
xchg
aam
std
push
aas
jbe
lods
inc
mov
shlb
jnp
std
jle
leave
stos
inc
xor
push
push
adc
lods
jne
rclb
js
push
je
xchg
push
inc
jnp
pop
cmp
jecxz
add
push
sti
in
mov
js
or
pusha
arpl
fnsave
sbb
test
push
jp
add
add
xchg
jle
std
jno
lea
sub
mov
out
cmp
pop
aas
dec
xchg
adc
cltd
mov
inc
in
push
xchg
push
mov
arpl
js
mov
cmc
pop
push
mov
lock
rolb
jge
xlat
jbe
fstpl
pop
mov
and
push
and
jl
lahf
xor
shl
dec
and
gs
xchg
inc
int
stos
or
cmp
pop
dec
and
pop
loopne
jnp
adc
pusha
cwtl
lds
mov
mov
movsl
fisttpl
mov
xchg
cmp
push
lret
add
mov
lock
jg
loope
sbb
jge,pn
loope
xchg
rorl
insb
hlt
xchg
cmp
scas
enter
jmp
in
inc
imul
pushf
dec
jmp
les
dec
clc
jns
enter
or
dec
std
jle
xor
push
cmp
aad
in
pop
movsb
pushf
or
movsl
mov
xchg
lods
pop
mov
addr16
pusha
add
xchg
jp
add
in
xchg
jb
gs
sahf
imul
inc
outsb
jg
inc
rclb
adc
aad
adc
xor
xchg
pushf
add
loopew
mov
addr16
push
pop
stos
and
inc
cmp
dec
sub
pushf
xlat
movsb
jecxz
divb
jb
aaa
scas
cmpsb
sub
popf
xor
xor
adc
inc
loop
dec
addl
fs
mov
in
dec
inc
and
jg
xchg
add
xor
or
mov
pushf
sbb
pop
rolb
adc
pop
stc
and
mov
sti
addr16
sbb
dec
negl
loopne
pop
mov
push
push
stos
add
jne
or
test
enter
out
mov
and
cmp
xchg
push
inc
jmp
push
out
loop
jp
mov
into
les
pop
pop
orl
adc
lret
jb
std
stos
out
mov
leave
out
jnp
arpl
pop
popa
pop
jne
pop
pop
decb
pop
jg
inc
pusha
fists
jbe
jb
push
mov
outsb
filds
lds
cwtl
sbb
jbe
xchg
push
addr16
push
mov
push
mov
fadds
dec
enter
xor
je
rcl
pop
mov
lods
push
out
cs
loope
xlat
xchg
loope
or
gs
jg
push
jecxz
pushf
ja
add
pop
pop
inc
ds
xlat
mov
dec
cmp
dec
idivl
orl
inc
mov
sub
mov
push
jns
or
mov
push
adc
xchg
or
adc
test
sbb
push
dec
jnp
pusha
rorb
std
ret
jno
shrb
push
mov
sub
pop
ds
mov
je
pop
xchg
add
cmp
add
cmpsl
repz
loopne
jge
cmp
and
ret
pop
repz
out
test
xor
sbb
int3
mov
xcrypt-ofb
cmpsl
sub
pop
xor
pop
ja
xor
icebp
adc
icebp
popa
rcr
int
adc
in
loop
test
jmp
xchg
mov
xlat
xchg
mov
fsubrs
dec
aaa
mov
add
enter
cld
leave
scas
lods
mov
push
inc
loopne
mov
addr16
js
add
sti
dec
or
adc
push
and
cmpsl
or
aam
sbb
dec
dec
repz
shr
jae
cmp
ja
mov
or
cmpl
roll
je
ljmp
fldl
jo
dec
and
and
das
cli
test
or
jne
imul
dec
lds
lret
push
cmp
cmp
cmpsl
inc
loop
outsb
add
jg
jbe
mov
repnz
mov
push
xchg
pop
imul
push
pop
addr16
aas
mov
imul
dec
loope
xchg
sbb
sub
fsubl
pop
andb
sub
lahf
jo
adc
mov
xchg
shll
popa
stos
jne
cmpsb
fwait
or
and
aad
adc
mov
mov
mov
push
fdivrl
test
sub
cmp
divl
test
cmp
sahf
mov
ljmp
push
sub
das
icebp
pop
and
adc
pop
out
xor
and
push
pop
sar
dec
test
mov
dec
adcb
test
and
mov
les
jns
xchg
jo
cmp
jmp
test
fdivs
pop
sbb
push
pop
icebp
test
hlt
lret
stc
ficoms
lea
adc
push
push
mov
repz
xchg
jl
movsl
lcall
ret
fiaddl
pop
dec
adc
add
into
aaa
aad
and
hlt
aam
mov
outsl
test
mov
out
xchg
jae
mov
mov
repnz
cwtl
leave
push
dec
fists
cmp
xchg
and
nop
jae
xlat
fwait
gs
outsb
repz
xor
pop
in
mov
jg
stos
adc
add
inc
sbbb
adc
jnp
js
inc
dec
cmp
jecxz
clc
mov
lds
mov
mov
out
dec
arpl
dec
adc
aaa
and
fidivs
negl
mov
xor
pop
dec
roll
enter
ffree
outsb
or
fs
inc
es
addr16
lcall
insb
cwtl
das
pop
inc
xchg
or
xlat
xor
in
test
dec
mov
and
fdiv
sub
je
fs
test
aas
xchg
adc
pop
jge
lcall
sub
cmp
or
aad
and
stos
jg
push
mov
test
xor
jno
stc
push
mov
mov
sub
sbb
dec
pop
mov
fs
sbb
cwtd
ljmp
and
push
es
jns
nop
pushf
pop
xchg
jp
jo
aaa
sahf
lahf
sbb
cmp
mov
inc
xchg
std
icebp
in
and
or
inc
jge
push
fwait
leave
mov
jg
inc
mov
cld
push
insb
mov
xchg
clc
jae
and
lret
test
xor
xorb
push
out
xchg
jo
sbb
push
add
mov
clc
icebp
mov
mov
jge
mov
imul
cli
ljmp
mov
xchg
sub
test
mov
stc
dec
test
movsl
cmp
pusha
repz
mov
cli
leave
adc
sbb
fldt
or
and
inc
inc
scas
dec
jp
inc
jmp
sub
fsts
stos
outsl
in
jecxz
ds
nop
or
in
cmp
jge
jae
rorl
mov
mov
adcb
jecxz
sub
testl
les
pop
pusha
scas
mov
xchg
xor
sbb
inc
mov
xor
dec
fisttps
pop
and
jmp
pop
jmp
pop
test
mov
xor
pop
fsubrs
les
incb
mov
add
les
adcl
cmpsl
mov
pop
sub
mov
push
pusha
test
jl
xchg
sbb
push
dec
xchg
movsl
add
mov
pop
rcl
fbld
pop
movb
add
jb
mov
and
mov
jl
divb
pop
or
mov
lods
inc
pop
push
sub
inc
add
dec
aaa
test
pusha
and
in
adc
shrl
inc
or
ret
bts
sub
and
jnp
mov
add
out
xor
cmp
into
outsb
in
xchg
int3
cmpsl
adcb
jns
inc
loop
sub
jo
aaa
adc
mov
sub
iret
arpl
pop
mov
jno
add
in
push
ja
or
mov
xor
jns
inc
sub
je
push
push
adc
lea
ret
add
jge
ficoms
cltd
push
fcoms
aaa
je
addr16
mov
add
popa
xchg
sub
outsb
xchg
jge
stc
sbb
dec
dec
mov
call
call
pop
sti
mov
inc
cmpsl
push
scas
mov
pusha
fwait
test
jbe
js
icebp
sti
add
xchg
je
jg
add
pusha
adc
sbb
push
scas
cmp
mov
cmp
lret
je
mov
outsl
cmpsl
pop
add
jle
jge
xchg
cli
pop
sar
xorb
out
popa
mov
mov
bound
add
cmovs
insb
int
dec
mov
test
jecxz
andb
repz
push
stos
adc
sub
movsl
movsl
push
shl
pop
pop
and
pop
pop
push
jbe
jb
adc
push
lret
mov
mov
js
arpl
loop
jle
stos
gs
loop
mov
cmp
cmp
xchg
push
fldl
popa
out
xor
aaa
or
inc
dec
lret
rorb
aas
movsl
insb
mov
sbb
pop
mov
sahf
cmp
sub
ret
and
and
arpl
in
jecxz
in
rcll
jns
sbb
ret
pop
mov
pop
int3
ljmp
jnp
scas
popf
icebp
nop
dec
mov
inc
fistpl
cmpsb
jp
jg
int3
ja
dec
test
cmpsl
in
sbb
jnp
sub
mov
repnz
fcomps
jp
mov
fnstcw
inc
ljmp
imul
jns
gs
or
inc
test
sar
notl
fstl
and
jmp
xchg
jecxz
pop
mov
pusha
dec
inc
lods
jmp
mov
inc
js
jmp
pop
ds
mov
and
jno
and
aad
jnp
repnz
shll
mov
sahf
cld
cmc
jg
dec
jo
pop
je
sbb
jmp
add
std
leave
fnstenv
cmp
scas
shrb
das
cmp
and
pop
and
jnp
or
add
xchg
pop
aaa
xor
jmp
pop
aam
int3
jge
fscale
cmpsb
add
loopne
inc
jecxz
lahf
mov
scas
cmc
frstor
dec
pop
movsb
add
xchg
lcall
mov
movsl
cmpsl
daa
fwait
in
popf
popf
xchg
jbe
pop
imul
and
lods
mov
cmpsl
mov
adc
testb
pop
xor
sub
gs
je
sbb
xor
adc
jno
ret
xchg
das
out
cmpsb
mov
mov
xor
adc
ret
stos
sub
push
les
mov
int3
call
pmaxub
push
push
add
jno
push
popa
dec
dec
jnp
jno
stos
lock
pop
addr16
lock
pop
xchg
dec
ss
dec
sti
das
test
ret
cs
and
js
dec
imul
negb
jne
and
test
xchg
enter
nop
out
ret
outsb
xor
cmpsl
pop
mov
xchg
test
inc
pop
lcall
fildll
stos
push
xchg
mov
xchg
add
sbb
ret
xor
call
add
lcall
mov
dec
mov
mov
divb
cmc
push
cmpsl
xor
pop
sbb
mov
cmp
push
bound
xchg
mov
jno
jns
pop
sbb
jae
cmp
int3
jge
add
ret
jno
ffreep
sbb
nop
jge
jmp
stos
in
pop
bound
stc
nop
or
aam
pop
push
push
int
pop
orl
jns
ja
rclb
mov
js
dec
dec
leave
cmp
cwtl
movsl
dec
arpl
mov
sub
iret
hlt
cmp
fcoml
pop
in
insb
dec
fnsave
push
inc
in
dec
dec
sbb
mov
repnz
jno
jle
int
pop
lock
rclb
cmp
mov
cmp
ss
loopne
test
test
fdivrs
pop
and
dec
cmpsb
lahf
pop
lcall
in
movsl
lea
add
movsl
fdivr
test
int3
js
scas
dec
shll
xor
out
js
add
imul
xchg
movsl
mov
or
mov
outsb
xchg
adc
jae
cmp
push
imul
lds
dec
test
xor
mov
les
mov
push
push
nop
pop
cwtl
pop
xchg
and
jae
or
icebp
pinsrw
aas
ljmp
roll
push
inc
mov
fldl2e
hlt
sbbl
outsb
jg
sar
dec
cmp
lahf
adc
fldenv
inc
and
inc
pop
repz
nop
dec
and
cmp
rolb
and
adc
ljmp
jo
inc
cli
sub
lcall
jp
sbb
js
or
subl
ja
and
jo
inc
lods
jne
push
out
cld
push
cmp
xchg
xor
jns
and
or
dec
or
test
inc
xor
inc
adc
sub
ss
in
cltd
xor
in
pop
lahf
mov
arpl
lock
cmp
sti
in
sub
in
inc
shrl
bound
pushf
dec
mov
sub
dec
imul
jne
jne
bound
add
xchg
and
test
push
and
pusha
xor
mov
js
lret
inc
or
mov
xor
cmp
or
sbb
sbb
es
xor
sub
fucom
push
jmp
clc
aaa
mov
jb
xchg
les
pop
lcall
out
sarb
mov
and
mov
dec
push
mov
mov
lahf
loopw
jae
xor
dec
and
xlat
js
int3
daa
and
mov
cmp
jnp
pop
inc
leave
popa
addr16
stos
dec
inc
jge
pop
ja
loopne
mov
adc
sub
mov
addb
jb
mov
and
imul
jecxz
aaa
adc
xchg
int3
dec
jne
pop
in
scas
shll
jg
enter
dec
add
sub
mov
pop
stc
pop
jo
mov
mov
cmp
or
es
jecxz
pushf
lds
pop
sbb
cltd
and
sub
and
fcompl
jbe
pop
push
test
dec
rcl
ss
imul
jnp
add
gs
dec
out
mov
inc
repz
js
sbb
inc
pop
pushf
push
mov
dec
xor
mov
sub
iret
hlt
fsub
js
les
arpl
jae
test
nop
push
xor
lds
adc
jns
inc
in
shll
bound
mull
nop
imul
push
mov
imul
test
sahf
imul
sub
sbb
bound
aam
bound
inc
push
mov
aaa
push
add
mov
or
lret
push
lods
in
fistps
xor
aas
adc
leave
jle
mov
cmp
cld
test
adc
lds
cmp
xchg
out
push
mov
outsl
mov
or
lds
clc
stos
xchg
pop
sub
std
pop
sar
push
push
enter
xlat
and
and
pop
popa
std
push
pushf
ljmp
adcl
xchg
dec
sbb
dec
mov
xchg
xor
and
xchg
test
out
cmp
hlt
xor
jmp
inc
movq
jle
lods
es
sub
adc
mov
mov
movsl
push
lea
loop
xor
push
bound
jae
ds
adc
jp
jge
out
fcompl
sbb
adc
and
inc
cwtl
into
dec
or
xor
and
adc
or
outsl
out
int3
or
insb
mov
add
out
lahf
mov
sarb
and
push
into
xchg
or
cmpsl
xchg
mov
lods
lods
inc
insb
push
cmp
sub
subb
ja
xchg
mov
cmc
cmpsl
loop
sub
notb
into
mov
and
pop
dec
dec
and
inc
enter
fcompl
stc
dec
dec
xchg
repnz
inc
jle
outsl
add
ja
cmp
js
arpl
add
cmc
push
dec
popf
ja
sbb
jnp
adc
jge
add
or
stos
or
dec
dec
push
stos
and
mov
push
dec
shlb
rcrb
nop
push
mov
xchg
xor
push
out
jno
xor
pop
out
lahf
pop
cmp
ljmp
or
or
push
dec
mov
ljmp
test
sub
adc
cwtl
lock
jecxz
inc
xchg
or
or
dec
outsl
pushf
daa
fsubl
ljmp
stc
sub
mov
mov
push
and
loop
and
push
sub
cmpl
test
aam
call
inc
sahf
cltd
add
insb
dec
sarl
pop
xlat
shrl
xchg
jl
or
pusha
or
adc
imul
shl
ljmp
aad
adc
sub
push
stc
aad
out
lcall
lea
jecxz
lods
inc
int
mov
push
pop
lods
push
cmpsb
insl
test
jae
and
mov
jne
test
pop
sbb
jle
dec
adc
lock
mov
test
clc
ret
popa
lahf
fnstcw
dec
xor
mov
addb
outsl
or
xor
jl
ss
pop
add
je
imul
push
scas
push
cltd
in
jae
cs
dec
sbb
nop
pop
insl
std
and
test
lcall
jl
pop
pushf
or
imul
lds
and
jmp
int3
ret
or
fmull
add
inc
mov
mov
mov
add
xor
and
mov
addr16
push
mov
lret
jno
mov
inc
mov
into
mov
sub
sbb
inc
inc
rcll
pop
leave
jmp
pop
mov
inc
jb
pop
and
xorl
mov
and
jle
lret
mov
and
and
inc
lods
cs
jecxz
das
mov
cmp
and
shrl
pop
orl
aas
lret
ds
xchg
or
pop
into
nop
jb
lods
shll
jl
pop
xor
nop
shrb
push
adc
dec
adc
fxch
sarb
adc
inc
ljmp
and
and
divl
aaa
rcrb
cmp
subl
xor
test
xchg
add
cmpsb
push
dec
test
sub
out
sbb
rorb
push
mov
push
push
daa
cmpsl
into
roll
pop
out
push
mov
mov
dec
insl
movsb
dec
push
and
pop
sbb
cli
cmp
int
pushf
jne
or
movsb
ret
xchg
in
pop
mov
fs
idiv
xor
mov
push
nop
jp
and
mov
or
cmpl
jg
push
pop
rolb
mov
std
xchg
and
pop
push
push
or
addr16
xor
adc
lock
pop
sub
insb
dec
push
jle
stos
incl
cmp
push
cmp
cmp
mov
fildl
or
jg
std
mov
jnp
loopne
pop
mov
add
inc
pop
xchg
ljmp
sub
scas
jns
mov
adc
scas
jne
lcall
aam
iret
push
mov
test
jl
mov
rcl
or
rcrb
loope
fs
push
xchg
pop
and
imul
and
jge
dec
je
addr16
mov
in
out
inc
and
mov
xlat
scas
xchg
sbb
or
add
mov
jb
mov
adc
negb
bnd
push
sbb
or
xchg
aas
inc
sbb
out
sahf
daa
add
sub
or
outsb
dec
fs
jle
addl
out
dec
lret
add
pushf
push
xor
sbb
rcll
pop
mov
dec
or
mov
xchg
pop
or
mov
mov
test
lret
jp
cmp
imul
sbb
out
mov
lcall
xchg
add
xchg
dec
cmp
xor
aaa
and
add
out
clc
adc
inc
leave
pop
xlat
out
mov
nop
aad
out
sbb
mov
cmp
inc
test
ss
sub
mov
xor
insb
dec
xor
add
sahf
or
jo
xchg
imul
movlhps
pop
sub
negb
scas
flds
addb
jmp
scas
xor
test
repz
pop
push
push
sete
test
xchg
inc
xor
ljmp
icebp
icebp
dec
int
ljmp
dec
insb
and
mov
hlt
mov
pop
inc
and
andb
imul
popa
aaa
int
or
ds
scas
pop
push
jl
jg
dec
mov
inc
test
sahf
insl
rorb
jmp
insb
test
ret
movsl
lods
cmp
arpl
mov
push
in
lahf
mov
pop
inc
sub
in
dec
icebp
shrl
xchg
aas
cmp
dec
das
imul
dec
dec
cmp
outsl
xchg
int3
mov
add
adc
or
and
dec
out
stc
ret
xor
rcrb
xor
enter
mov
std
cmp
pop
xchg
dec
jge
in
dec
mov
sub
dec
xor
lods
sub
push
pop
in
shrb
mov
in
pop
inc
out
mov
push
leave
mov
pop
loopne
push
ss
out
hlt
sub
add
push
arpl
mov
out
rcr
mov
jns
cmp
dec
cmp
pop
les
test
es
clc
push
mov
dec
arpl
shll
mov
mov
jmp
aad
arpl
cmpsl
or
lahf
inc
and
jbe
sti
sti
movsl
sbb
adc
addr16
mov
adc
add
sbbl
ljmp
outsl
mov
leave
xor
mov
dec
mov
sub
cmp
test
mov
push
flds
mov
xchg
inc
lea
fldcw
adcl
pop
in
scas
ds
inc
jns
inc
mov
push
mov
mov
mov
lret
cwtl
add
ljmp
in
jb
fwait
push
out
fwait
push
sub
mov
fdivl
fbstp
pop
lcall
xlat
push
mov
mov
push
aaa
and
cmp
jne
cltd
push
cmp
adc
ret
inc
add
ret
cltd
aas
sub
fcoms
pop
mov
jb
fcompl
lret
int3
mov
mov
test
dec
stos
test
loope
and
cs
pop
pusha
push
sub
movsb
pop
jmp
notl
sub
pushf
test
scas
xchg
pop
xchg
jmp
ja
repz
ja
add
push
mov
cmp
dec
xchg
pop
lea
inc
adc
or
dec
lods
pop
and
fwait
add
xchg
out
mov
aaa
aam
mov
call
aaa
mov
pushf
ds
mov
xchg
and
mov
sbbl
mov
std
fbld
and
cli
pop
ljmp
sbb
sbb
adc
inc
mov
pusha
lds
daa
adc
fstpt
fbld
pop
inc
lods
stos
pop
xor
das
inc
xchg
cwtl
lea
mov
xchg
cld
fisttps
mov
push
inc
jg
cmp
sahf
in
leave
iret
lret
sub
sbb
fiaddl
push
sti
mov
ja
and
push
push
hlt
push
clc
lea
jp
stc
fdivp
xchg
jl
sbb
xchg
aas
mov
jns
xchg
add
enter
dec
pop
sub
jg
mov
push
add
pop
xchg
mov
aam
jbe
iret
ja
xchg
orl
mov
mov
jecxz
push
push
jle
cmc
ds
mov
test
sub
ss
pop
jbe
inc
popf
std
add
arpl
mov
push
jge
fistpll
adc
pusha
mov
sub
iret
lock
sub
test
xor
jp
inc
sbb
sbb
push
push
negb
cmp
sbbl
pop
jnp
cmp
lods
nop
mov
and
cmpsl
mov
mov
and
aas
cmp
mov
fsubrl
movsl
aam
ja
lahf
aad
int3
adc
pop
lcall
mov
out
sub
pop
mov
sbb
xor
idivb
ja
and
mov
jne
pop
movsb
data16
mov
cmpsb
push
fdiv
les
jns
pop
popf
dec
xor
jp
xorb
sub
pop
xor
and
inc
sub
pop
loopne
push
jnp
and
xchg
xor
nop
aas
test
lret
lods
cmp
mov
pop
lea
pusha
orl
add
fsubs
push
jecxz
cmp
ss
xchg
sub
jmp
sub
test
adc
bound
ds
in
pop
push
inc
push
aas
shrl
dec
mov
in
mov
jnp
push
or
mov
add
sub
aaa
ss
inc
fiaddl
pop
push
add
inc
lcall
pop
and
push
or
cmp
out
push
enter
pushf
jbe
test
cmp
xchg
insb
jmp
call
push
push
inc
jg
orl
cmp
insw
ret
rcll
nop
pop
sahf
xchg
cmp
and
mov
mov
jg
adc
addr16
popa
sbb
movb
mov
jg
xchg
add
dec
adc
pop
pop
stc
cmp
dec
inc
aaa
popf
add
lock
mov
push
push
cmpsl
pop
jne
fnstsw
push
dec
inc
mov
push
inc
dec
add
daa
xor
lods
jne
pushf
arpl
call
repz
push
jae
movl
mov
jo
jns
mov
rorb
adc
mov
pop
loope
rorl
sub
sbb
pop
xchg
pop
mov
pop
mov
fadd
sub
jmp
pop
cmp
xchg
jmp
lock
fists
in
add
pusha
push
push
mov
ror
dec
cltd
inc
loopne
cmp
call
leave
outsl
rdtsc
int3
inc
jle
ret
lods
ret
jb
xchg
cmp
push
push
gs
daa
arpl
dec
jnp
lcall
mov
fldl
movsb
mov
jne
fs
rolb
inc
aas
in
aas
lock
and
cmp
or
mov
push
jg
dec
daa
xor
mov
je
push
mov
jl
aad
sub
cmp
faddp
xor
cli
mov
dec
bound
or
out
call
daa
jecxz
xchg
shll
and
dec
mov
or
out
aad
or
icebp
sub
inc
int3
dec
sar
adc
sbb
add
scas
add
cmp
or
cmp
aam
inc
pop
das
push
ret
es
sub
mulb
xchg
sub
push
addr16
mov
mov
add
fnstenv
pop
adc
lods
in
mov
ficompl
pop
test
xchg
cli
and
and
xor
or
adc
sub
pusha
jo
std
inc
sbb
dec
pop
fldt
and
sub
sbb
dec
adc
insb
daa
pop
jp
ljmp
push
test
lret
divb
aam
fisubrl
mov
push
js
fisubs
daa
loopne
push
aad
sub
push
cmp
cmp
aam
add
imul
rcll
sbb
or
in
inc
mov
xchg
arpl
divl
lods
xor
dec
lret
lahf
cmpsb
shll
sbb
shl
sahf
and
and
in
js
push
inc
pop
in
stc
add
fistps
jo
dec
mov
popf
push
cwtl
mov
inc
ret
mov
jb
cmpsb
jbe
add
jns
ja
ljmp
js
sahf
dec
pop
pop
movsl
xchg
clc
inc
popf
inc
mov
jb
test
shl
cmpsl
push
ret
mov
push
dec
in
loop
mov
xor
jg
mov
call
int
iret
cmp
push
or
xchg
jmp
in
into
cld
imul
sub
and
jae
in
or
jge
or
mov
pushf
mov
xchg
jno
lea
insb
push
andl
hlt
dec
push
pop
sahf
out
sub
inc
xor
pop
sub
sahf
rorb
mov
and
mov
push
xor
mov
cmp
repnz
pusha
push
test
aaa
jne
lcall
dec
in
les
push
pop
xchg
push
xor
or
cmp
dec
pop
or
imul
testb
sbb
lea
fwait
jecxz
inc
jo
movsl
mov
xor
ja
adc
pop
mov
pop
or
test
std
xchg
inc
out
jnp
add
daa
jg
mov
int3
mov
pushf
and
pop
mov
jecxz
mov
mov
adc
loope
jp
mov
negb
xchg
xchg
aad
jne
cmp
mov
mov
aaa
imul
fsubrs
les
dec
sub
stc
out
out
rcl
addr16
mov
xor
in
jmp
xchg
mov
dec
jl
fs
cwtl
lahf
out
jnp
lock
cli
jae
push
clc
or
daa
out
dec
test
mov
dec
pop
fwait
rcrb
out
insb
ja
testl
int
in
std
loope
ror
outsl
pop
scas
lret
mov
adc
jmp
call
mov
dec
jb
jmp
in
call
int
sub
test
adc
dec
mov
mov
cmp
sub
scas
fwait
inc
or
fucomip
xchg
push
sbb
sbb
lahf
in
scas
jmp
sbb
les
mov
leave
sub
lods
shr
pusha
mov
lret
daa
loope
mov
aad
push
mov
ss
mov
inc
scas
aas
xchg
ds
and
jnp
pop
jbe
xor
jmp
push
out
icebp
sub
movsb
inc
sbbl
xor
movl
pop
inc
sbb
les
cmp
sahf
xchg
mov
aas
shr
loop
dec
sqrtps
push
xor
daa
push
sahf
loope
xor
pop
mov
stc
pop
jns
pop
pop
jp
test
mov
jns
dec
fcmovnb
adc
insl
in
ja
sarl
in
mov
pop
aam
pop
orl
jle
push
pop
add
jecxz
or
pushf
add
mov
test
scas
repnz
call
scas
push
adcl
repnz
pop
rclb
mov
sbb
jecxz
sbb
movsl
das
cltd
mov
aas
or
shlb
cld
ret
cmp
push
pop
pop
in
pop
fs
aam
mov
push
pop
js
jl
popa
cmp
xchg
jl
fdivl
dec
xchg
add
pop
outsl
dec
test
mov
xlat
cmp
xchg
mov
out
xor
iret
mov
pop
xchg
pop
xor
mov
adc
pop
lea
xor
push
jns
and
fwait
mov
xchg
sub
in
dec
in
ds
mov
mov
mov
out
ss
xchg
fnstcw
jle
mov
and
fwait
jmp
pop
dec
cmp
dec
pop
and
in
sbb
int
in
sbb
sbb
ljmp
in
stos
cmp
xchg
pop
mov
fdiv
inc
xchg
aaa
mov
mov
ror
mov
xchg
xor
sub
sub
inc
int3
mov
lds
mov
jle
adc
mov
pop
inc
xchg
fcomps
xor
pusha
pop
pop
outsb
sbb
mov
in
xchg
pusha
imul
inc
pop
inc
fs
xlat
push
mov
aas
sub
enter
push
or
daa
dec
jns
cmpsl
pop
push
jns
cmp
lods
adc
cli
je
mov
xor
icebp
or
or
loope
scas
inc
push
lret
pop
sub
mov
and
mov
das
pusha
inc
mov
int3
ja
push
loop
mov
cmp
stos
pop
outsl
test
shll
iret
sbb
pop
inc
movsb
repnz
sub
sarb
out
inc
je
xor
out
xchg
orl
or
xchg
jb
out
addr16
push
mov
pop
les
lds
pop
fisttpll
or
inc
out
push
sbb
adc
pop
or
mov
into
sbbb
int
pop
push
adc
mov
shrb
inc
xchg
cmp
je
pop
dec
pop
dec
das
dec
cmp
push
loopne
jb
and
pop
xchg
jecxz
jg
jp
sbb
push
push
jae
xchg
pop
mov
orb
mov
jge
iret
outsl
les
push
mov
add
mov
roll
andl
icebp
rcll
std
dec
cs
or
pop
push
out
roll
fisubs
sbbl
sbb
pusha
in
push
leave
push
subb
jns
pusha
dec
inc
adc
xor
mov
cwtl
jmp
mov
ror
loop
inc
cmp
data16
addr16
inc
call
int
cmp
mov
rcll
mov
insl
mov
icebp
jns
mov
test
xlat
cmp
mov
jo
dec
jp
mov
sub
and
inc
out
bnd
insb
inc
and
insb
ljmp
outsb
pop
mov
mov
or
icebp
add
cmp
sub
sbb
xor
xchg
pop
aad
xchg
repz
inc
cmp
cmp
jnp
push
sub
cmp
pop
outsb
repnz
loop
js
imul
or
movsl
cltd
sub
dec
sub
inc
in
pop
jno
repnz
add
cmp
cmp
arpl
clc
loop,pt
roll
fwait
pop
mov
in
in
or
pop
sub
mov
daa
arpl
mov
mov
sbb
inc
jne
xchg
ljmp
fsubrl
mov
mov
nop
push
jg
leave
mov
sti
cli
popf
jbe
sti
pop
sub
inc
pop
dec
mov
loop
cmpl
in
stos
jle
mov
sbb
ret
shlb
lret
dec
and
inc
pop
pop
mov
lcall
out
cmpsb
jle,pt
notb
packsswb
or
push
frstor
lods
cmp
ljmp
dec
inc
into
cmp
mov
jge
jne
ljmp
daa
mov
jne
sti
mov
outsb
sbb
lret
scas
push
fwait
push
into
insl
test
mov
pushf
pop
and
wrmsr
fildll
add
shrb
or
sbb
jmp
popf
arpl
call
push
mov
mov
gs
mov
movsl
mov
adc
loop
mov
fsubp
fdivrs
pop
les
lahf
stos
mov
mov
sub
pop
xor
mov
and
dec
jg
inc
pop
dec
push
icebp
mov
and
pop
js
sbb
mov
cwtl
cs
push
gs
into
lods
aaa
jp
insl
xor
mov
mov
insb
insl
cmp
mov
sahf
sbb
adc
pop
sahf
filds
repnz
jae
lea
inc
lods
push
sarl
inc
in
mov
outsb
mov
movsb
xlat
mov
mov
or
clc
dec
aam
push
stos
insl
ret
mov
xor
cmpsb
jecxz
fadds
jb
push
pop
xchg
jp
nop
push
adc
addr16
test
jne
or
jbe
test
imul
dec
jecxz
jg
cmpsb
loopne
enter
pop
pop
mov
adc
inc
inc
lods
mov
mov
lahf
push
mov
pop
add
pop
and
and
push
mov
cmp
mov
fidivrs
pusha
xor
clc
pop
mov
jle
jp
adcl
or
add
pop
xchg
dec
cltd
in
sahf
in
pop
push
cld
sbbl
or
push
adc
or
and
pop
or
aam
aaa
pushf
push
mov
push
outsb
sub
daa
sub
ds
pop
jle
add
call
xchg
divb
lods
sub
es
jle
hlt
cltd
lock
mov
push
negb
lahf
jbe
mov
cmp
mov
pop
inc
xchg
and
mov
adc
dec
sub
jns
or
movsl
pop
pop
clc
aas
xor
adc
outsl
jge
lods
xchg
inc
movntq
out
push
in
adc
shlb
outsl
stos
imul
adc
sarb
jnp
xor
movsb
in
sahf
sbb
push
dec
sbb
jmp
cmp
adc
shll
adc
daa
xchg
xlat
mov
mov
inc
das
push
and
mov
loop
jg
addr16
xorb
jo
std
fiaddl
push
jbe
adc
addl
adcb
xchg
test
jg
ja
ss
mov
imul
cmpsl
jae
pop
and
mov
mov
xor
fcoms
test
es
and
jge
cmpsl
pop
pop
cmp
cmp
aas
mov
adc
and
pop
mov
enter
push
pop
pushf
jge
aad
dec
add
insb
push
scas
call
ja
pop
add
dec
scas
inc
fidivl
xchg
mov
adc
pop
bound
xor
push
add
or
pop
pushf
sti
ds
push
adc
scas
push
add
sbb
out
fisttps
stc
stos
pop
fs
out
dec
dec
cmp
dec
jbe
ds
push
push
incl
les
or
ja
fwait
push
insl
push
ss
inc
aad
mov
ja
in
sbb
sub
in
push
int
inc
test
push
push
or
push
push
inc
in
int3
mov
scas
lods
bound
arpl
pop
inc
push
outsl
mov
in
sbb
xor
sub
loopne,pn
iret
adc
sub
mov
sbb
and
push
adc
xchg
inc
test
add
test
std
mov
cmp
sti
rorl
add
cwtl
xchg
mov
xchg
in
divl
in
shrb
sbb
or
cltd
test
inc
loopne
pop
loop
daa
das
adc
xchg
jae
push
pop
loopew
arpl
repz
pop
pop
mov
gs
iret
or
xchg
das
jo
pop
adc
jne
inc
jb
js
dec
mov
or
pop
in
aam
fistpll
shrl
loope
or
and
lods
aad
dec
push
mov
push
std
mov
jp
add
mov
inc
movsl
rolb
loop
clc
loopne
lea
into
outsl
test
sbb
jp
popa
sti
dec
ds
loope
rclb
dec
int3
or
mov
sbb
push
adc
ja
lock
mov
xchg
shll
js
ja
push
add
mov
xor
inc
jbe
mov
stos
or
push
les
adc
jne
cmp
loop
orl
dec
or
pop
mov
adc
dec
mov
add
sti
sti
jnp
xor
loope
idivl
jne
mov
sub
pop
loopne
arpl
lret
sbb
jp
pop
fnstcw
loop
lea
je
mov
adc
jb
ret
outsb
mov
mov
xlat
xchg
repnz
sub
icebp
jb
mov
push
xchg
add
pop
push
xor
out
xor
negl
pop
xchg
push
inc
or
sub
or
stos
insl
mov
test
loop
pusha
mov
aas
pusha
dec
cmp
mov
pop
lret
test
pop
insb
incb
fwait
dec
dec
imull
scas
int3
into
push
or
jl
in
addr16
xchg
pop
insl
dec
or
cmpl
xlat
xchg
rolb
inc
jmp
jns
lea
push
out
sub
cmc
imul
popa
inc
repz
jbe
fsubrs
out
dec
xchg
xor
test
nop
fstp
movsl
lds
cld
mov
shrb
in
jmp
outsb
pusha
fisubrs
mov
outsl
dec
push
mov
stc
das
dec
int
test
mov
adc
or
mov
mov
cld
fisubl
pop
stos
adc
pop
push
into
dec
pop
lds
xchg
movsb
cmp
xlat
fistpl
insb
dec
int
mov
pop
sub
cli
lock
movsl
repz
mov
cli
neg
ja
xor
pop
lds
cmp
jnp
in
test
mov
shlb
imul
sahf
fisttpl
xchg
pop
pop
sub
pop
pop
stc
lock
inc
and
aas
adc
cmp
dec
pop
arpl
sub
jbe
js
jns
add
imul
negb
cmpsl
mov
in
push
inc
stos
loop
jge
gs
mov
mov
ja
ds
das
mulb
push
into
pop
mov
sti
sub
and
lcall
cld
movsl
arpl
inc
dec
jno
and
mov
dec
push
pop
xchg
sub
jecxz
daa
sbb
cmp
sti
cmp
mov
mov
sbb
jge
mov
fimull
mov
push
sbb
inc
lret
and
xchg
rolb
movsl
or
ficoml
or
jmp
out
and
push
sbb
jbe
mov
flds
pop
jnp
pop
lcall
or
push
lock
pop
push
pop
and
dec
mov
rcl
push
fistl
pop
outsb
ret
out
inc
add
xlat
inc
subl
out
mov
mov
out
sub
mov
mov
push
leave
adc
pop
cmp
adc
dec
push
stos
xor
inc
sub
cmc
mov
jno
add
mov
cmpsb
jbe
fld
jnp
add
icebp
inc
les
popf
loope
jns
jle
inc
std
cmp
xor
lods
in
xor
sbb
and
cmpsb
fldt
jl
fistl
js
js
xor
addl
movsb
rcrl
xchg
and
fildll
jecxz
inc
inc
cmpb
loope
mov
xor
test
in
pop
leave
fcmovnb
icebp
fcomp
cs
hlt
ljmp
in
test
pusha
xchg
jecxz
or
js
std
pop
stos
mov
enter
or
jns
jbe
sar
sahf
fistl
xor
xor
ljmp
stos
les
daa
rcrb
cli
mov
aad
lds
dec
std
sub
in
jp
test
mov
dec
xor
sub
mov
and
je
jg
sahf
adc
pop
jmp
add
fmulp
je
aas
xchg
jecxz
jmp
cli
rorb
jecxz
ficompl
call
cmp
out
fnstcw
push
cmc
imul
orl
push
shll
mov
hlt
xor
lods
and
adc
and
jns
pop
cmp
push
mov
mov
push
cmp
movsb
rcrb
xor
mov
cmpsb
sbb
sub
jo
gs
jmp
pop
sub
pop
or
sbb
push
push
cmp
jae
sbb
or
or
mov
jl
popa
xchg
lret
jnp
add
sbb
in
in
cwtl
lock
test
repnz
mov
push
rcrl
movsl
push
lea
in
dec
push
xchg
shr
lret
in
lret
cmp
jmp
je
or
sub
mov
inc
add
mov
and
mov
fbld
mov
loopne
push
push
or
push
jmp
pop
testl
mov
scas
jge
sar
mov
lea
push
dec
mov
pop
xchg
jp
jg
jns
inc
xchg
or
lret
mov
ficomps
add
push
push
insl
sti
inc
and
fdiv
jo
jge
jl
adc
or
fldcw
rorl
pop
scas
push
push
rcr
icebp
inc
rclb
out
mov
and
fistpl
mov
dec
add
shll
sub
mov
sahf
ds
fdivrs
pop
int
aaa
clc
xchg
pusha
mov
mov
in
test
inc
jge
sbb
inc
jnp
jnp
pop
mov
adc
cmpsl
arpl
insb
pop
jl
pop
push
jo
dec
sahf
test
push
xchg
add
pop
dec
in
jb
mov
lock
push
adc
aad
orb
mov
icebp
mov
std
test
in
repnz
fnstenv
subl
sub
mov
les
popa
popf
pop
xor
test
adc
fcompl
mov
lock
flds
cmp
xchg
push
fisttpl
pop
adc
inc
sub
push
lds
enter
xchg
int
loope
xlat
xchg
dec
and
jns
cwtl
or
movl
aad
jge
push
cmp
inc
xor
in
aas
jo
push
lahf
xor
jle
add
adc
fimull
lds
lss
pushf
call
lods
mov
sub
pushl
add
push
add
push
inc
pop
cmp
leave
add
pop
fcomps
clc
cmovge
fucom
outsb
adc
push
andl
dec
leave
shrb
lds
or
sahf
mov
jmp
leave
aas
movsl
mov
cwtl
loope
ret
adc
cltd
in
mov
rol
and
aam
jge
jge
addr16
out
fs
movsl
test
and
int
aad
imul
int3
cs
sbb
pop
sbb
push
mov
js
lods
cmpsl
pusha
jp
in
mov
pop
adc
dec
adc
imul
add
sub
loopne
in
dec
ret
lret
pop
mov
faddl
jnp
pop
jnp
cwtl
subl
mov
inc
fmuls
pushf
dec
les
loope
and
push
sub
mov
adc
pop
stos
adc
dec
cmc
push
and
aam
inc
shlb
ja
idivl
cmp
inc
ret
nop
fadd
jno
jp
lds
xlat
mov
aas
loope
leave
imul
ds
add
repz
jno
push
inc
dec
adc
dec
insb
xor
in
mov
xchg
shl
fs
and
lahf
adc
cwtl
nop
outsw
pop
jno
dec
inc
ficoml
bound
inc
insl
stc
ret
inc
jne
loopne
and
or
mov
pop
sub
sarl
orb
stos
push
sbb
or
inc
test
pop
xchg
icebp
pushf
addl
lgs
dec
loope
jbe
ja
fwait
cld
inc
pop
cli
inc
inc
enter
lret
pop
add
enter
out
cmpsb
in
ss
fcomp
rep
cmpl
int3
mov
push
dec
aam
jno
cld
imul
add
out
adc
aad
pop
cs
inc
mov
cmc
mov
bound
sub
nop
pop
addr16
scas
lcall
outsb
lret
jmp
pop
cmp
cmpsl
stos
and
inc
cmp
ret
cmpl
pop
dec
bound
cmp
scas
adc
rcl
jp
mov
repz
adc
mov
mov
xchg
std
loop
mov
daa
shl
stos
sbb
lret
daa
adc
cld
add
mov
dec
inc
in
lods
lret
stc
jecxz
and
stos
es
sub
pop
out
dec
cmpsb
mov
scas
test
jo
imul
movsb
push
repnz
jae
inc
int3
pop
in
cmpsl
sbb
ljmp
out
out
daa
roll
testb
sti
inc
int
or
scas
ss
lds
fadds
popa
dec
sarb
sub
cmp
dec
lret
jmp
sbb
and
gs
dec
cmp
cmp
jmp
ret
ficompl
fimuls
stos
mov
pop
lods
inc
inc
mov
lret
mov
or
aad
xchg
mov
lods
lret
cmc
mov
add
lcall
sbb
sub
lret
cmp
mov
cmp
rclb
in
shll
add
bnd
mov
xchg
les
sub
jo
sub
subb
std
arpl
int
popf
sti
stc
mov
nop
push
cltd
xor
push
jo
xor
xchg
pop
cmc
and
jne
dec
cmp
clc
adc
rorb
jp
outsl
enter
daa
cld
and
pop
sub
fidivrl
mov
insb
mov
ret
lock
pop
orb
xchg
pop
jne
push
adc
or
imulb
stos
mov
in
fildl
and
dec
ret
mov
sbb
mov
stos
inc
out
inc
xor
mov
je
addr16
dec
fistpl
ret
add
sbb
aad
int
loopne
dec
pop
das
mov
outsb
dec
pop
rcrl
xlat
cmp
imul
adc
rcrb
xchg
js
imull
sbb
push
mov
mov
sbb
subl
adc
pusha
loope
mov
arpl
push
jae
lahf
xchg
mov
insb
stos
dec
ljmp
jne
test
leave
daa
ljmp
dec
or
xchg
jle
cmp
scas
stos
xchg
divb
push
sti
jbe
gs
cmp
xchg
inc
sbb
cltd
popf
cmp
mov
in
pop
ret
push
sbb
mov
and
mov
pop
lea
stc
xchg
push
lea
cmpsl
mov
xor
jge
rorl
or
and
lds
outsl
and
and
dec
pop
aad
or
cwtl
push
sti
mov
mov
in
scas
lods
ret
sti
cmpsb
cmp
push
and
je
mov
cmp
mov
sbb
pop
mov
ss
lahf
lods
fcoml
lahf
out
xchg
push
out
orl
in
lods
pusha
loop
dec
jle
mov
adc
sub
pop
jle
push
lods
daa
les
aad
sbb
jns
adc
mov
fwait
push
jge
sbb
lods
mov
fbstp
aas
push
inc
sti
xchg
repz
aad
xchg
mov
imul
mov
sub
pop
cmc
xchg
dec
mov
dec
add
xchg
test
mov
fcoml
mov
push
mov
nop
inc
pop
ret
dec
ja
mov
imul
mov
ret
mov
aad
add
mov
xor
inc
sbb
fdivrl
lcall
cmc
push
xchg
jno
mov
dec
dec
xor
fs
ljmp
adc
adc
mov
imul
mov
or
dec
or
outsl
data16
icebp
aaa
mov
cmp
iret
xor
cmpsb
insb
xchg
push
hlt
xor
fldl
mov
in
and
pcmpeqb
or
repz
adc
popa
leave
jecxz
cmpl
xor
or
mov
mov
jecxz
cld
ja
or
insl
out
add
mov
xor
mov
mov
out
dec
and
push
outsl
push
xchg
std
bound
hlt
dec
or
dec
insb
push
mov
xchg
cmp
into
mov
mov
or
sub
adc
in
std
dec
scas
jmp
pop
mov
pop
les
test
adc
aam
push
xchg
push
arpl
xchg
lret
rcll
popa
or
jg
das
movsl
es
cmp
jo
popf
lret
xchg
out
cmp
ret
insl
xchg
enter
xor
xor
pop
addb
dec
aam
je
pusha
sub
in
ret
push
xchg
or
xchg
lods
xchg
push
xor
and
cmp
jg
in
add
call
and
xchg
in
dec
test
adc
js,pn
push
jg
cmp
insb
loopne
mov
add
rorl
in
and
pop
add
xorl
scas
push
daa
pushf
mov
mov
xchg
mov
mov
mov
fwait
dec
push
pop
addr16
push
mov
mov
cld
cwtl
gs
push
xchg
mov
fwait
dec
xor
bound
xchg
mov
adc
shll
mov
js
mov
pop
mov
add
cmp
sub
add
pop
cmp
push
adc
out
test
ret
xor
inc
es
ret
adc
add
sub
pop
ds
dec
lods
pop
mov
clc
sbb
pop
js
lcall
xchg
xor
test
pop
test
inc
lods
mov
arpl
pop
dec
ljmp
mov
es
jne
in
div
lods
inc
ss
les
inc
dec
arpl
loopne
sub
jnp
sub
dec
jae
mov
pop
imul
out
fwait
mov
and
movsb
sahf
mov
or
mov
hlt
pop
and
dec
imul
or
jecxz
pop
mov
add
sub
add
add
dec
dec
xchg
call
dec
inc
pop
scas
xchg
sub
stc
push
in
sbb
das
cmpsb
push
js
enter
or
add
push
or
push
cmp
cmp
pushf
adc
test
movsl
std
push
push
pop
imul
inc
sub
pop
std
mov
mov
dec
sub
je
pop
dec
ja
inc
insl
xchg
xor
lret
mov
inc
jo
scas
sbb
outsb
jg
dec
mov
sti
jecxz
loopne
jg
inc
sub
imul
push
xchg
xor
xchg
mov
enter
mov
js
ds
cltd
pop
in
adc
xor
in
inc
sub
imul
inc
sub
rcr
xchg
loope
gs
and
jne
daa
cmp
xor
sub
xor
loope
dec
dec
mov
mov
leave
push
ficoml
pop
rcll
test
and
add
mov
mov
fstl
push
cmp
fisubrs
int3
aam
jle
pop
mov
pop
inc
push
add
mov
imulb
fistl
dec
jo
test
xchg
imul
pop
xor
add
ret
fsubs
xchg
sbb
les
outsl
loop
or
sbb
ret
jb
insb
mov
xor
insl
mov
ja
cmpsb
and
pop
jae
pop
mov
sbb
push
push
pushf
out
lcall
arpl
std
ret
pop
mov
push
or
ds
fidivrl
std
sbb
cltd
sahf
xor
push
inc
inc
and
je
inc
scas
es
mov
test
sbb
add
fwait
mov
scas
cmp
shrl
xor
nop
sub
mov
add
aas
lcall
xchg
rcrl
sbbb
cmp
mov
mov
lock
scas
jnp
adc
xchg
xchg
inc
xor
out
pop
cwtl
dec
mov
push
out
dec
mov
xor
mov
inc
jns
sahf
rcrl
push
sub
fdivr
jnp
mull
pop
loopne
xchg
dec
scas
lds
insb
add
mov
loopne
mov
jg
and
and
mov
pop
push
test
mov
sti
pop
inc
push
mov
mov
imul
vmwrite
call
ret
and
enter
test
mov
and
sub
xchg
bound
and
xchg
and
mov
dec
stos
ds
inc
cmp
and
div
mov
jle
ror
push
xchg
loopne
pop
cmpsb
out
stos
and
in
int3
dec
test
fldt
sub
add
jp
push
ds
mov
add
das
cwtl
aas
add
arpl
bound
in
mov
nop
mov
xchg
cmpsb
add
inc
and
push
push
ljmp
xor
cltd
inc
dec
inc
cmc
hlt
in
add
jns
mov
fcmovnu
rclb
hlt
dec
sub
or
insl
les
stc
arpl
leave
mov
pop
or
fcmovnbe
dec
dec
xor
in
jae
rol
jg
or
sbb
dec
out
cmp
sahf
andb
lods
fnsave
mov
add
test
movsl
add
inc
mov
pop
pop
mov
dec
inc
dec
push
leave
in
pushf
cmpl
push
sbb
cmp
sti
jmp
push
inc
popf
outsl
cmp
inc
mov
jecxz
inc
mov
xchg
dec
jge
cwtl
out
pop
das
pop
inc
nop
mov
xlat
push
xchg
rclb
test
pop
lret
popa
sbb
or
incb
push
test
loop
fimuls
stos
lcall
mov
xor
pop
mov
jnp
incl
mov
xchg
mov
jge
call
lahf
popa
pop
cmp
inc
inc
adc
inc
or
lock
ret
stos
pop
shrl
inc
lret
mov
push
stos
jle
dec
lods
sysenter
and
lea
stos
clc
icebp
ja
add
jae
insb
jne
dec
push
inc
test
movsb
cmp
cmp
call
in
cmp
pop
cmpb
roll
divb
pop
ds
jmp
xor
add
ret
mov
xchg
pop
dec
sbb
lods
lret
shlb
cs
ret
imul
in
aad
or
fsubrs
insl
jno
shl
adc
xor
fisubs
or
xor
fildl
jecxz
sti
lock
mov
repnz
fisttpl
fs
mov
dec
daa
jne
pop
xor
mov
repnz
push
outsb
lods
movsb
jnp
jg
inc
aad
insb
mov
xchg
icebp
jle
lods
or
xchg
rcrl
outsb
inc
cli
dec
test
jg
and
add
mov
fwait
sbb
or
out
jns
stos
sbb
inc
dec
ret
or
pop
jmp
jns
and
lret
fiaddl
test
mov
mov
push
or
sbb
inc
sub
loopne
arpl
lahf
insb
push
lcall
inc
pop
or
mov
dec
jmp
push
xor
repz
out
cmp
test
inc
ds
pushf
cmp
into
ljmp
out
pop
pop
sahf
test
jne
jo
cli
daa
jge
psubd
inc
pop
mov
or
outsl
xchg
xor
jl
mov
push
adc
jbe
xor
xor
push
insl
xor
jmp
adc
xor
inc
mov
pop
les
pop
and
rsm
mov
adc
std
lds
mov
lahf
pop
stos
sub
lret
pop
jl
sarb
sub
mov
fsubrl
cmc
test
lea
aas
pushf
xchg
or
int
popf
out
dec
mov
mov
or
out
cmpsl
lds
pop
ret
loopne
int3
sti
movsb
movsl
stc
xor
in
mov
jge
add
sbb
mov
addr16
push
jg
xchg
daa
adc
xchg
push
nop
in
lcall
cmp
cmp
push
stc
pop
dec
sbb
movsl
lahf
or
or
je
xor
pop
push
cmc
sbb
mov
mov
inc
or
jns
dec
inc
stos
mov
rcrb
xor
xlat
mov
push
fidivs
jecxz
push
loop
mov
mov
inc
inc
mov
adcl
pop
in
arpl
pop
or
add
sarl
or
pop
push
and
add
rcll
add
shrb
xchg
test
popa
and
je
shrl
les
mov
mov
icebp
test
lock
movsb
xchg
inc
insl
test
mov
mov
pop
jno
mov
inc
lret
aas
mov
adc
stc
push
add
mov
cmp
jno
or
sti
push
adc
fmulp
adc
lods
inc
inc
push
adcl
xor
aam
dec
mov
hlt
push
pusha
xor
cmp
xchg
nop
mov
add
stos
movsb
jo
adc
xchg
mov
cmp
insb
mov
shll
lret
shrl
xchg
out
xor
sub
and
add
dec
movsb
lret
inc
add
jg
mov
sar
outsb
sbb
not
fnstcw
stc
xchg
jo
mov
in
sbb
push
jecxz
adc
es
leave
bound
sub
jno
mov
xchg
or
int
mov
xchg
in
jecxz
push
sub
dec
ret
xchg
call
jae
lods
movsl
leave
xchg
faddl
push
sbb
jg
adc
xchg
icebp
or
xchg
cmp
test
pop
inc
cmc
jb
pop
fdivr
punpckldq
mov
pusha
jns
or
arpl
mov
or
push
lcall
jle
mov
or
push
cmpsl
xor
mov
roll
push
jg
sub
rcll
mov
mov
lcall
xchg
aas
adcl
and
shl
inc
pop
adc
pusha
movsl
mov
loope
jmp
cmp
inc
sarl
mov
mov
xchg
pop
inc
lods
sbb
aam
pushf
rclb
mov
fldcw
sbb
ret
pop
iret
jl
mov
pushf
sub
mov
pop
sbbl
xor
and
add
movsl
nop
icebp
aas
adc
pop
lahf
add
fcompl
mov
loopne
fisubs
lods
lods
xchg
sahf
sbb
das
cltd
shrb
movsl
jl
iret
fiadds
fxch
and
push
call
cmp
jne
shrb
lds
clc
add
inc
push
daa
and
outsl
xchg
imul
push
lea
inc
and
mov
push
packuswb
sub
and
adc
jb
imul
test
sbb
je
sub
jg
js
fildl
jg
mov
or
sub
hlt
aaa
sbb
inc
mov
sub
enter
pop
mov
push
mov
pop
add
cmp
in
jno
push
sbb
scas
or
sar
rdtsc
dec
lds
sub
add
jns
mov
paddd
jo
in
fsubl
stc
dec
inc
shl
dec
hlt
or
dec
stos
call
lea
cmp
mov
and
ffreep
cmpsl
xchg
clc
push
inc
jae
test
add
mov
xchg
jmp
mov
fistpll
lret
sub
cwtl
ds
mov
fildll
or
ret
cmp
pop
mov
mov
adc
lods
add
mov
push
or
ss
stos
outsl
mov
ret
push
xchg
negl
mov
add
dec
mov
sar
cmc
lret
nop
jg
in
xchg
in
pop
loope
aas
rcr
inc
jp
mov
cmp
mov
fiadds
sub
lea
sub
cmp
mov
ret
jnp
scas
pop
jo
out
mov
xchg
lret
je
shlb
pop
in
and
movb
push
mov
dec
in
dec
ds
push
in
ss
jg
inc
inc
cmp
adc
das
into
inc
movsl
sbbb
sub
sahf
cmp
ja
mov
pop
mov
adc
and
test
loopne
lea
insl
lods
push
pushf
xchg
arpl
bound
sub
xor
jecxz
pop
cwtl
mov
ljmp
jo
inc
mov
adc
add
scas
push
out
rorb
dec
je
xor
add
pop
sub
jl
xchg
cmpsb
sti
inc
sub
jnp
test
push
popf
rol
adc
outsl
xorl
int
movl
insl
arpl
mov
mov
xchg
test
stc
push
lahf
cld
pcmpeqb
lahf
xor
pop
jo
in
mov
push
ja
jle
test
or
jg
mov
je,pt
enter
inc
pop
inc
popa
push
or
rcrb
add
fldl2t
lods
adc
jecxz
aas
push
stos
xlat
add
in
jp
mov
xchg
jae
and
fisttpl
adc
repnz
js
mov
jmp
jecxz
bound
dec
xchg
scas
stos
xor
fsubrs
lods
mov
push
out
lcall
jge
mov
adc
pop
inc
leave
xor
movsb
sbb
mov
test
test
ljmp
lock
divl
pop
dec
xchg
or
xor
cmpb
pop
pop
imul
call
mov
or
inc
sub
fs
outsl
cs
testb
test
aaa
cld
sahf
jnp
mov
cs
js
xor
outsb
pop
rorb
inc
jg
adc
sub
fildll
bound
cmp
imul
lock
cmp
ror
sahf
outsl
and
jp
or
jp
push
pop
ljmp
dec
les
sub
inc
cmp
pop
loopne
test
loope
clc
xchg
xchg
pusha
sub
iret
lret
xor
movsb
clc
arpl
jne
jbe
cli
xor
imul
hlt
je
inc
xor
and
loope
dec
pop
rol
loopne
sub
sbb
stos
mov
mov
and
xchg
cwtl
cmp
push
pop
xor
push
aas
push
inc
xlat
fstps
int
xor
lds
xor
cmp
push
in
push
push
dec
sub
adc
dec
sahf
pop
int
xor
shlb
adc
mov
sahf
inc
out
ljmp
pushf
dec
push
cltd
jl
mov
and
mov
movsb
enter
inc
cmp
movsb
jmp
repz
fwait
lret
cmp
jne
ud0
cs
and
cmpsl
not
cli
cmp
xor
add
xchg
xlat
in
shrb
roll
ret
pop
pop
xchg
inc
lods
add
add
and
jo
mov
inc
mov
std
mov
mov
sbb
testb
jecxz
into
in
cmp
pop
jns
add
push
movb
sahf
jns
pop
push
stc
bound
mov
lea
fcmovnbe
mov
test
cmpsb
dec
cltd
push
push
insb
clc
add
mov
pop
dec
mov
mov
pop
mov
dec
pusha
mov
aas
repz
inc
test
sbb
mov
mov
data16
and
push
push
push
fstl
addr16
and
inc
into
sbb
inc
adc
sbb
hlt
xchg
push
ret
mov
xchg
cmp
fsubrl
stos
push
mov
push
jg
and
mov
pushf
mov
cmp
mov
jno
cmp
enter
adc
push
mov
jb
js
xchg
sub
stos
pop
pop
daa
mov
cmp
fcomip
and
movsb
ss
cmc
pusha
sub
xchg
inc
inc
sub
adc
mov
lret
mov
test
xlat
pop
popl
into
cld
add
sahf
mov
fwait
mov
dec
jmp
scas
dec
mov
or
xor
push
test
je
or
inc
jle
xchg
in
das
and
stos
push
xor
in
rol
pop
inc
dec
jge
push
jle
insl
xchg
fsubr
outsb
insb
and
mov
aas
or
test
je
jnp
cwtl
fldcw
and
pop
pop
xchg
call
mov
pop
jo
jnp
mov
xchg
insl
jl
add
or
idivl
add
cmpsb
stos
jmp
jne
repz
adc
mov
sahf
push
pop
pushf
loop
fildll
pop
xorb
inc
sti
pop
scas
les
dec
cmpsl
in
cmp
and
jge
loop
jo
repz
cld
lods
sbb
add
mov
mov
aas
jge
arpl
xchg
frstor
cmc
pop
adc
and
scas
aas
ja
cmp
js
lret
aaa
add
or
aad
fcmovnu
push
test
inc
dec
daa
testl
std
add
int
mov
outsb
addl
lahf
sbb
fildl
push
jecxz
jne
in
or
pop
or
add
arpl
sti
fsubrl
pop
add
xchg
adc
push
pop
jl
adc
popf
rcr
jae
lock
jmp
mov
out
test
push
cltd
adcb
cwtl
inc
fldt
add
lahf
xchg
daa
inc
pop
out
pop
rep
loope
push
scas
jle
mov
mov
dec
fs
and
and
xchg
call
fmull
pusha
js
or
movsb
in
test
mov
sub
test
mov
and
outsb
add
into
ljmp
push
fs
sub
cli
mov
jecxz
mov
push
movl
xor
xor
ja
xchg
cmc
add
das
jp
pop
sub
dec
dec
xor
fst
dec
adc
aad
fisttps
imul
add
shl
add
fidivs
xchg
mov
adc
not
lret
popf
das
filds
mov
addr16
cmc
mov
push
mov
jb
jl
sbb
xchg
lods
fsubrl
ds
nop
mov
sarl
sub
mov
rolb
and
lods
out
mov
xor
push
cmpsl
push
rclb
gs
and
jmp
mov
std
xor
hlt
shlb
sti
xlat
xor
hlt
insl
pusha
and
popf
jbe
ja
xchg
mov
cli
push
add
pop
cmpsb
push
pop
test
add
lcall
dec
mov
mov
lods
imulb
mov
jns
push
outsl
sub
adc
push
es
cmpsl
cltd
xor
push
out
or
imull
leave
add
and
in
sub
lret
add
inc
push
and
in
fwait
arpl
imul
cmpsl
ds
sbb
dec
mov
in
aas
mov
adc
loope
or
and
test
ds
jmp
xchg
add
jl
mov
xchg
popf
pop
and
out
lds
jp
mov
cmp
inc
inc
les
add
add
testl
pop
sbb
rol
jae
sbb
xlat
jo
mov
xchg
es
dec
mov
jns
push
inc
das
xor
jl
jmp
push
sub
movsb
in
insl
lret
mov
xchg
pop
decl
in
fistl
jbe
pop
stos
sub
adcb
aaa
mov
das
sub
insb
sbb
xchg
insb
mov
mov
popa
xor
add
add
pop
pop
jge
mov
dec
adc
sbb
popa
cmp
leave
lea
sti
pop
xor
fildll
shrl
xlat
cmpl
sub
dec
movsl
pop
xchg
es
fisttpl
xchg
fs
fldt
sti
push
adc
cmp
dec
add
in
sub
sub
cmp
sbb
sarl
inc
pop
aad
cld
jo
add
fcmovne
and
in
jae
push
imul
and
mov
jmp
std
notb
inc
or
stos
jmp
aad
orb
pop
test
bnd
xchg
pusha
xor
in
gs
lahf
test
sub
aas
adc
loop
sbb
addl
pop
jle
sbb
and
jg
loope
and
cmpsb
lret
cld
das
xchg
js
and
in
mov
ss
or
jmp
das
stos
dec
push
loop
xor
fwait
pop
lahf
jo
cmpb
and
xchg
jns
push
cmpsb
fisubl
cmc
adc
ret
xchg
mov
mov
dec
ja
pop
std
imul
lret
in
popa
dec
js
divb
adc
aam
pusha
les
sbb
xchg
loope
and
mov
or
dec
sub
in
xchg
or
mov
cmc
and
les
repnz
sbb
loope
mov
ss
scas
fisubrl
popf
rcll
hlt
cld
add
dec
mov
jmp
ret
iret
push
push
inc
pusha
sub
pop
dec
dec
rcrb
fwait
stos
pop
imul
jns
mov
pop
bound
cmp
inc
insl
and
jae
mov
movsb
shlb
push
jnp
pop
pop
sbb
cltd
rcl
sub
inc
sbb
jmp
pop
pushf
push
in
sbb
popf
jmp
repz
insb
aas
jns
sub
movsl
int
mov
mov
mov
repnz
sbb
mov
sbb
pop
and
rcll
clc
insb
mov
les
add
push
mov
sahf
jns
sbb
mov
ljmp
rorl
rorb
adc
mov
sahf
sub
jno
dec
inc
push
cmp
mov
jle
rclb
push
imul
cs
iret
xchg
pop
hlt
xor
dec
mov
adc
pop
das
sti
es
lahf
out
pop
cmovg
gs
imul
jno
cmc
js
push
dec
in
sbb
push
push
dec
stc
inc
push
xor
pop
mov
jo
mov
js
fwait
dec
dec
cltd
mov
ss
gs
cmp
or
sar
push
shlb
jmp
and
push
scas
out
push
xchg
mov
mov
xchg
lods
sub
or
lods
out
call
addb
sbb
mov
jb
pop
xor
aas
add
rclb
orl
cs
incl
jns
test
sub
pop
out
jb
imul
nop
test
cwtl
aad
jae
pop
mov
fmuls
lret
aaa
push
das
pop
pop
out
xchg
stc
mov
std
sbb
and
jne
and
adc
mov
fstpt
adc
cmpsl
sbb
pop
stc
sti
mov
lcall
mov
or
ja
and
lock
xor
nop
in
jnp
aas
pop
adc
or
xchg
shlb
sub
and
imul
test
mov
mov
rorl
cmpsl
hlt
test
jb
nop
fdivrs
mov
or
mov
pop
fdivrp
jae
dec
xlat
and
xchg
push
jbe
mov
mov
stos
fbld
ret
add
inc
insb
xchg
ljmp
mov
arpl
pop
add
push
jnp
pop
pop
dec
fists
sahf
push
cld
mov
jg
dec
idivb
fnsave
xor
rcl
cmp
daa
jp
je
xor
outsl
sub
icebp
dec
mov
jmp
pop
lods
jl
sti
daa
jg
sub
xchg
insb
addr16
addr16
adc
stos
cmp
xor
fdecstp
ljmp
divb
xchg
ret
fcomp
dec
inc
mov
ja
inc
xor
daa
mov
xor
push
and
sbb
mov
mov
fsubl
jne
adc
pop
mov
fwait
inc
push
mov
popf
mov
loope
xor
xchg
xchg
incl
outsb
xchg
cmpsb
and
addr16
in
test
cwtl
mov
js
fwait
je
push
mov
adc
ret
gs
in
mov
ds
call
aam
outsb
and
jg
and
mov
cmp
stos
cmp
jp
addr16
inc
aas
mov
xor
stos
out
cwtl
out
push
mov
call
sbb
inc
lcall
cs
inc
mov
ja
popa
js
js
pop
dec
jp
popf
inc
push
outsb
dec
pop
add
jae
es
push
sub
je
pop
and
mov
repz
pop
xchg
adc
mov
arpl
mov
inc
adc
cmpsl
mov
xor
xchg
jb
dec
mov
test
sahf
cld
hlt
jb
mov
and
aad
pop
bnd
inc
push
cld
pop
shlb
xor
cmpsl
and
sbb
sub
movsl
leave
cmp
mov
ljmp
lea
test
imull
mov
mov
daa
adc
and
cmc
es
or
outsl
sub
inc
jno
or
sub
pop
inc
mov
stc
mov
sbb
repz
int3
mov
int
xor
roll
icebp
push
pop
mov
push
mov
inc
repz
in
add
xchg
sbb
insb
adc
sbb
ds
push
mov
xlat
arpl
xchg
push
mov
leave
rcrl
inc
aad
int3
repnz
cmp
cmc
jb
bnd
addr16
popf
cli
push
mov
sbb
nop
and
int
and
out
flds
adc
mov
xchg
add
sub
xor
jg
out
out
insb
nop
ja
cmp
sbb
insb
lret
inc
jns
mov
xchg
ds
pop
outsb
cmp
adc
hlt
inc
int
cltd
dec
lret
inc
stc
les
mov
add
or
dec
adc
cmp
orb
sbb
and
push
dec
ds
and
xor
cmp
insl
push
aad
sbb
and
mov
lods
fwait
gs
mov
cmp
les
push
mov
rcrl
adcl
outsl
dec
push
data16
in
cmp
inc
dec
dec
cltd
js
divl
xchg
cmc
cmpsl
xor
rolb
push
adc
shlb
sub
and
push
int3
pusha
jp
sub
pop
push
push
clc
stos
and
push
ss
jae
xor
add
push
popf
fcmovu
dec
add
mov
jmp
adc
stos
sub
inc
cltd
xchg
jg
mov
dec
push
lds
jae
sub
bnd
dec
xlat
mov
out
divb
into
jp
mov
cmp
sbb
addb
dec
lock
and
js
xor
jecxz
adc
inc
xor
or
cmp
shl
jp
mov
push
stc
xchg
dec
ss
pop
sbb
fsub
jns
jge
rorl
clc
ds
inc
cmp
loope
inc
outsb
lahf
adc
mov
or
fidivrs
sub
out
pop
jns
cmp
insb
push
or
lock
imull
dec
stos
jb
or
dec
cvtps2pi
adc
cmp
dec
aad
dec
fisttpl
and
notl
mov
jg
es
scas
mov
je
out
push
and
push
xchg
popf
or
add
inc
shlb
mov
push
mov
cltd
gs
adc
mulb
add
daa
ljmp
dec
mov
xchg
sbb
jp
pop
aam
pop
push
xor
ret
dec
cmp
pop
daa
push
cltd
fs
icebp
ret
ret
push
andb
jb
aam
adc
ficoml
std
xor
mov
in
push
cmp
or
sub
jbe
adc
pop
in
adc
mov
ret
lods
adc
movsb
dec
pop
in
cmpsl
inc
push
inc
inc
xchg
pusha
or
and
sti
adc
jns
negb
inc
out
insb
scas
xchg
aam
pushf
add
add
push
test
je
push
jmp
push
jns
lock
mov
or
mov
pop
sub
jnp
dec
test
lret
pusha
fs
movsb
pop
push
fwait
hlt
xor
mov
cmp
shll
inc
movsb
push
mov
jo
inc
xchg
cmp
push
test
cmp
push
lods
xchg
stc
push
popf
cmp
cli
jno
ret
push
push
or
mov
push
push
repz
pop
mov
push
cli
inc
add
shrl
fcmovu
jg
cltd
or
pop
push
xchg
push
inc
dec
ja
mov
add
cmpsl
xor
xchg
dec
mov
int
add
lock
int3
ja
xchg
add
cmpsb
inc
pop
inc
aas
out
mov
mov
jne
mov
shlb
loop
icebp
xor
fucompp
or
std
jns
xchg
pushf
xchg
test
rdtsc
mov
sub
mov
hlt
jo
xchg
pushf
or
lds
out
in
sbb
adc
jne
push
lret
and
dec
jp
xchg
add
icebp
mov
sub
and
shl
int
sub
jg
int
cmp
stc
add
adc
dec
fistpll
je
and
int3
std
jo
mov
jge
pminsw
lock
jp
xchg
sbb
sub
ss
in
jae
mov
pop
jp
inc
pop
inc
shlb
jmp
in
inc
jl
movsl
pop
mov
gs
adc
push
pmaxub
sbb
test
imul
jmp
arpl
mov
push
fistpll
xchg
inc
aad
cmpsl
add
test
add
jae
loope
pop
inc
jbe
xor
sub
enter
stos
xor
jl
addr16
rorb
repz
icebp
mov
mov
sti
add
hlt
rcrl
push
and
cmpsl
mov
out
stc
aam
out
dec
std
dec
imul
out
mov
rcrl
ljmp
sbb
xchg
es
out
cs
test
ret
xchg
mov
pop
shll
inc
xor
push
repnz
mov
dec
jnp
mov
xchg
inc
jp
jne
shrl
mov
adc
shr
add
xchg
and
sub
pop
sbb
iret
sti
call
mov
pop
test
jg
loop
iret
stos
inc
mov
mov
loope
lea
dec
data16
adc
dec
incb
icebp
push
and
sub
sahf
cli
aaa
mov
cli
bswap
div
aam
jl
in
std
leave
fistpll
js
add
push
stos
mov
mov
mov
add
mov
fwait
inc
pop
repnz
mov
push
rcrl
iret
jo
mov
mov
rcll
cltd
pop
lret
pop
aam
inc
fnstsw
es
cmc
pop
clc
jb
xchg
add
push
adc
std
lods
push
jle
cld
dec
fistpll
cmp
out
loopw
icebp
ss
mov
sbb
outsl
leave
xor
daa
dec
fdivrl
mull
or
fst
fs
aam
pop
dec
clc
ja
enter
cmp
test
mov
or
sahf
nop
jne
ja
inc
dec
push
call
jg
or
int3
stc
mov
sbb
idivl
dec
out
inc
pop
loope
out
ss
sahf
test
push
or
mov
add
inc
adc
jle
push
js
and
push
fidivrl
call
and
je
push
push
jo
mov
xor
rclb
loopne
in
jl
js
or
add
inc
push
or
dec
lea
pop
push
rcr
sbb
xor
in
ljmp
enter
mov
adc
adc
jne
jae
push
dec
js
adc
mov
rcll
cmp
leave
mov
imul
les
mov
mov
mov
push
orl
sub
and
mov
pop
ja
rclb
xor
out
sbb
inc
and
mov
xor
or
mov
pop
or
adc
inc
sbb
pop
lcall
stos
clc
test
pop
sahf
adc
pop
push
pop
xchg
mov
test
es
cmp
call
scas
jle
mov
mov
movsl
inc
loopne
push
mov
xchg
push
mov
xor
or
dec
push
into
push
filds
stc
xchg
xchg
movsb
arpl
outsb
and
push
gs
lahf
daa
jg
repz
sarb
bound
mov
out
lretw
in
test
loopne
mov
out
mov
mov
stos
es
dec
mov
in
ljmp
mov
add
mov
jl
pop
nop
movsl
inc
push
repz
lods
pop
popf
mov
push
and
adc
add
add
rcr
call
scas
lret
cmp
sub
dec
sbb
inc
push
test
jmp
lea
mov
cmp
das
jnp
jo
mov
shr
dec
dec
and
inc
add
xor
or
pop
mov
or
jp
xchg
push
push
dec
ss
stc
pop
ret
cmp
nop
sti
pop
and
xchg
inc
and
addr16
push
int3
out
shrb
ljmp
cmpsb
pop
sbb
pop
arpl
fnstsw
insb
adc
inc
add
pop
or
imul
or
inc
push
xlat
andl
mov
imul
outsb
shlb
pusha
dec
and
loop
sti
dec
test
inc
pop
pop
cld
and
jno
sahf
stos
mov
dec
mov
inc
aaa
aad
loopne
push
xchg
jp
lret
dec
in
push
in
in
jns
ja
jecxz
into
push
lahf
jmp
mov
test
push
test
mov
imul
test
adc
inc
gs
clc
sahf
insb
pop
jp
xchg
std
lods
sub
lods
je
setb
shlb
call
adc
pop
cli
add
push
rol
fldenv
push
xchg
dec
xchg
mov
dec
jne
inc
jecxz
jl
mov
add
inc
cmp
in
jne
out
cmp
sub
scas
leave
dec
aas
in
jbe
sarb
jge
fsub
std
xchg
clc
repnz
or
cmpsl
inc
ja
scas
popa
xlat
daa
ljmp
pop
addr16
and
pop
scas
inc
lods
pop
ffree
nop
in
or
out
gs
mulb
and
inc
movsl
out
add
and
popf
mov
mov
sbb
cld
test
sarl
mov
jge
sarb
pop
sbb
mov
pop
xchg
icebp
push
xchg
add
cmp
dec
inc
xor
xchg
dec
pop
xchg
push
aas
mov
aas
jmp
cmc
fidivrs
xor
ds
and
sbb
mov
adc
xor
stos
sub
pop
or
cmp
mov
sti
movsb
cmpsl
loopne
loope
mov
pop
out
sarl
or
jecxz
outsb
in
loopne
and
push
aaa
xchg
mov
mov
icebp
pop
rorl
sahf
or
pop
pop
test
movl
cs
pop
add
fbld
test
dec
dec
or
mov
mov
push
test
adc
sub
push
sbb
jge
mov
push
test
cmpsl
sbb
xchg
je
mov
or
cld
dec
cmp
or
or
leave
cmp
mov
pop
shrb
pop
clc
or
test
sbb
pop
xchg
inc
and
testb
inc
pop
andl
pusha
or
call
add
sub
test
cmp
sbb
add
add
movsb
mov
loopne
dec
pusha
cs
lcall
inc
fisubrl
adc
incb
leave
repz
pop
cli
and
es
dec
aam
test
call
sub
in
mov
mov
loopne
subl
add
jmp
ljmp
mov
fisubs
xchg
fmull
sub
jge
pushf
ljmp
das
cmp
push
xchg
arpl
add
nop
pushf
lahf
xchg
pop
xor
fwait
in
jl
xchg
mov
push
lahf
sbb
push
and
insl
xchg
cmp
ss
lods
add
inc
ret
out
xchg
das
in
pushf
pop
roll
sbbl
sbb
xchg
jmp
push
adc
inc
pop
out
in
movsl
push
xlat
adc
cmpsl
aam
jno
push
and
or
notl
push
push
sbb
and
iret
cmp
and
rolb
sub
stc
add
push
fcmovne
cs
cmp
push
add
dec
or
jae
add
pop
in
cli
iret
lds
in
push
or
ss
jl
int3
xlat
dec
pop
pop
xlat
ja
ljmp
adc
and
decl
mov
imul
xor
cmpsl
sub
bound
add
orb
lock
nop
pop
and
adc
mov
imul
aam
jge
mov
and
or
mov
test
mov
sub
xchg
fnstsw
and
push
xchg
mov
mov
jmp
andb
sbb
stos
lcall
mov
mov
je
push
icebp
daa
adc
jmp
cmp
and
dec
push
and
jg
and
test
cmp
lret
and
cmc
xchg
fsubrs
inc
dec
push
imul
add
mov
aaa
in
mov
popf
dec
aas
test
adc
or
xchg
cmpsl
xchg
pop
inc
repz
iret
cld
enter
fcmovnb
inc
mov
fwait
cwtl
shll
mov
xchg
dec
xchg
mov
in
stos
jle
dec
cmc
out
mov
adc
push
notb
add
sub
xchg
jbe
les
jg
sub
xor
or
xchg
aam
roll
push
sub
ss
sbb
mov
es
sbb
mov
test
sub
push
pushf
in
jle
popa
and
mov
repz
cmp
sub
xor
addr16
in
aad
repz
push
mull
mov
enter
mov
rolb
hlt
or
ljmp
pusha
iret
mov
into
loope
sub
push
cmp
fwait
pop
aad
jle
adc
xor
scas
nop
mov
push
out
inc
mov
dec
ret
cmp
or
fwait
insb
repnz
stc
xchg
pop
adc
xor
jae
rcrb
and
jmp
jl
jp
push
movsl
js
dec
arpl
push
mov
scas
test
mov
repz
or
mov
fwait
adc
cmc
incb
in
aaa
dec
mov
add
rorl
flds
jb
mov
jp
xor
mov
jge
jae
cmpsb
popa
loop
leave
nop
neg
test
stos
scas
push
jnp
cs
add
mov
notl
jg
xchg
pusha
repz
xchg
jnp
dec
in
dec
shll
in
and
into
lcall
jg
sbb
fdivrl
cmpl
push
out
mov
add
mov
push
dec
nop
push
dec
inc
inc
pop
in
sbb
or
mov
jmp
or
xor
or
lcall
iret
int
mov
leave
int3
jge
or
mov
inc
dec
mov
int3
inc
xchg
hlt
pop
cmp
ss
in
test
add
push
dec
push
dec
mov
mull
cmp
pop
sbb
pusha
lcall
mov
push
jbe
sub
inc
es
ja
inc
inc
sti
loop
outsb
jnp
sbb
xchg
xor
stc
pop
push
arpl
lret
roll
cs
and
dec
mov
jno
sbb
dec
inc
adc
mov
xchg
mov
or
push
sbb
jecxz
adc
jne
pop
cwtl
pop
sbb
out
push
test
jle
ret
xchg
sarl
sti
push
data16
xchg
dec
jge
sbb
mov
mov
mov
xor
cmp
stos
xchg
cltd
cmove
clc
add
jae
and
pop
shlb
dec
in
and
xor
adc
cmpsl
jbe
daa
jmp
and
mov
adc
fisubrl
in
cmpsb
pop
xor
into
inc
test
mov
bnd
js
pop
jo
adc
sbb
shll
inc
dec
lret
loop
sub
pusha
movsb
test
jg
jne
nop
js
add
push
xchg
ss
inc
jecxz
or
call
sub
adc
xlat
sahf
loopne
and
fldcw
add
fs
pop
push
das
and
jnp
mov
push
aas
inc
mov
cld
std
inc
in
cld
xor
cli
or
jnp
mov
jecxz
lcall
cmp
lods
iret
adc
clc
sub
inc
mov
fdivrl
aaa
in
mov
test
aad
repz
movsl
lods
lahf
push
xor
ret
in
mov
aam
cmpsl
cmp
push
cmp
inc
jl
jno
xor
rcr
pop
data16
insl
adc
dec
mov
push
cwtl
shll
out
xlat
sbb
inc
inc
iret
pop
decl
rcrl
fmul
ss
push
mov
and
pop
cmp
in
rcrb
orps
out
sub
sub
inc
jae
pop
cmp
jmp
clc
nop
iret
jl
cmp
cmp
cpuid
dec
aam
scas
ret
inc
out
cld
roll
pop
inc
xchg
in
ss
pop
idivb
push
inc
sbb
sbb
xchg
cmp
push
fldt
fdivr
inc
jmp
mov
in
subb
enter
data16
jbe
dec
hlt
into
rorb
adc
jae
sbb
pop
xor
dec
and
xchg
add
xchg
pushf
hlt
movsb
push
adc
xor
pusha
add
lret
test
imul
and
cltd
and
xor
mov
out
loopne
aaa
lods
xchg
xor
loopne
lods
pop
xchg
fwait
in
push
out
loopne
fistpl
fsubr
les
jo
cmpsl
js
inc
sbb
cmp
addr16
and
ret
jp
xor
sub
loopne
dec
cld
imul
sahf
arpl
in
pop
push
cmpsl
lret
cmovne
fdivrl
jle
add
cmp
sub
repz
xor
pop
push
push
pushl
clc
mov
xor
scas
fwait
xchg
xchg
xor
and
int
shl
push
hlt
repnz
mov
adc
sub
shll
xchg
out
mov
jo
adc
sub
in
test
jae
dec
fs
out
icebp
ror
inc
cmp
jae
add
mov
add
sbb
shl
fdivr
or
cmp
mov
sahf
mov
imul
std
test
shll
addr16
rorb
mov
cmp
ret
or
or
fcoml
in
pop
xchg
push
pop
stos
out
lahf
sbb
test
xor
sti
pushf
and
jns
mov
xchg
ret
js
mov
sbb
adc
ds
sahf
sbb
or
cmp
aaa
inc
cmp
cld
movsb
jecxz
xor
ds
mov
lret
pop
cld
and
pushf
pop
stc
dec
js
dec
add
fiaddl
sbb
mov
cmp
stos
sub
gs
sub
and
cli
adc
adc
fldenv
mov
inc
fwait
and
mov
push
sub
enter
inc
rcll
inc
adc
int3
out
addr16
push
test
dec
test
repnz
adc
cld
xchg
dec
aaa
leave
inc
and
jl
cltd
jno
and
rclb
sub
in
cmpsb
pop
adc
dec
pop
mov
inc
mov
mov
je
fiadds
inc
pop
jecxz
inc
mov
jo
les
mov
rolb
jbe
jge
dec
xchg
jl
je
jg
roll
inc
xlat
addr16
add
mov
xchg
or
je
xchg
or
shlb
inc
enter
push
cmpb
test
cli
aaa
test
cmp
pop
pop
adcb
push
cld
ja
dec
sub
jbe
push
xchg
aad
dec
fists
xchg
fs
sub
push
adc
adc
add
push
pusha
test
rcl
insl
dec
xor
nop
test
aas
and
xor
and
dec
inc
out
iret
test
add
adc
sub
or
daa
cmp
push
popa
movsl
and
mull
xorl
hlt
mov
jg
xchg
xlat
outsb
int3
adc
and
aad
out
std
test
sbb
sti
mov
jge
dec
cmp
xor
mov
popf
aas
popf
inc
push
scas
pop
popf
loop
cmp
sbb
call
push
je
lret
add
js
sbbl
lahf
push
cmp
xchg
jbe
mov
fwait
jmp
out
adc
dec
sub
dec
adc
inc
xchg
sti
icebp
push
out
inc
lds
mov
xchg
mov
out
pop
ret
repz
dec
push
aas
in
jp
cmp
in
xor
mov
inc
jne
jb
std
lea
fdivrs
push
jp
scas
push
pop
inc
flds
push
out
push
ret
movsl
mov
test
sub
call
mov
imul
lret
mov
pop
fs
dec
and
push
or
mov
test
mov
in
jecxz
out
iret
loop
push
ljmp
faddl
cmovle
jmp
in
xchg
inc
cmp
pop
stos
shlb
cmc
cwtl
inc
jne
xor
jo
bound
out
push
inc
mov
notb
enter
cmp
sbb
sti
sahf
scas
inc
pop
jne
mov
push
rclb
daa
outsl
pop
jecxz
test
cmp
test
xor
arpl
xor
int
xchg
dec
push
call
fbstp
divl
push
stos
pop
mov
into
cmc
mov
xor
test
xor
popa
adc
fldpi
jae
push
xor
imul
pushf
je
or
clc
pop
or
js
sbb
dec
mov
insb
lret
int3
divb
sub
sub
pop
sbb
lcall
sub
xor
pop
addr16
xor
pop
mov
notl
mov
push
cli
dec
sub
in
dec
mov
mov
pop
cmp
and
scas
cmp
jns
movsl
xchg
inc
fistps
adc
out
push
and
out
pop
add
movsb
push
in
xor
mov
push
shll
insl
pop
pop
mov
stos
nop
sbb
addr16
dec
inc
aam
xchg
mov
inc
jae
inc
xchg
push
sbb
les
xchg
cld
jb
adc
inc
lahf
sbb
leave
xor
inc
pop
mov
and
jge
scas
mov
mov
dec
arpl
call
icebp
mov
daa
divl
pop
notb
mov
xor
cmp
jge
inc
xlat
cmpb
pop
call
test
and
imull
test
dec
cwtl
imul
std
nop
sti
popa
stos
and
js
lods
mov
adc
xchg
jae
mov
add
sub
cli
xor
stos
cli
bound
sarl
pop
scas
outsb
sbb
loop
in
aam
lahf
es
pop
mov
scas
add
movsl
sbb
xor
jmp
rcll
rcl
das
movsl
jge
and
pusha
popf
scas
cmp
mov
sub
push
jns
loopne
aad
jg
sub
testl
std
or
fistpl
mov
icebp
push
stos
dec
adc
sub
xlat
and
dec
add
add
sub
mov
jg
andb
insb
mov
test
test
ljmp
xor
pusha
pop
sarb
cmp
cmp
mov
hlt
in
pop
cmp
jle
mov
mov
in
in
and
xchg
arpl
mov
push
ret
sbb
jecxz
lea
pop
lahf
add
mov
je
popf
mov
dec
adc
and
les
pop
repnz
inc
rolb
js
sti
pop
cld
nop
add
push
push
jge
sbb
xchg
inc
or
cmp
jnp
nop
out
ds
add
inc
cmp
push
and
xchg
mov
das
sbb
dec
in
jecxz
jp
add
xchg
cwtl
xchg
xchg
cld
sub
aad
pop
je
push
add
and
push
lcall
test
mov
cmc
icebp
jns
hlt
lea
arpl
push
cmp
push
pop
sub
adc
sbb
data16
cltd
inc
jecxz
test
push
sub
or
lret
mov
push
lahf
xchg
push
cmp
mov
cli
xchg
out
int
stc
nop
dec
scas
sub
adc
mov
loope
mov
fbld
or
sbb
xor
cwtl
out
data16
pusha
and
xchg
mov
movb
std
push
bound
arpl
mov
in
pop
xchg
popa
push
mov
pop
arpl
or
add
lods
int
cmpsl
inc
lahf
pop
loopne
inc
hlt
jmp
in
fidivrl
xorb
fldt
notl
mov
out
sarb
leave
je
test
pushf
ljmp
adc
scas
imul
adc
pop
inc
repz
les
push
pop
inc
test
jl
and
imul
dec
push
or
sub
dec
lahf
push
lods
inc
test
inc
jge
movsl
pop
xchg
lret
sbb
stc
cld
clc
outsl
mov
jmp
cmc
test
adc
lea
push
inc
mov
in
pop
jl
int
or
in
mov
inc
dec
lahf
shlb
mov
jnp
xchg
arpl
jne
or
je
into
ja
push
mov
ss
jmp
ljmp
sti
cld
jbe
jg
ja
xchg
test
fildll
adc
stc
cld
int3
mov
inc
dec
incb
das
mov
inc
jns
dec
stc
sahf
sub
dec
cld
mull
ljmp
std
and
dec
xchg
out
jbe
mov
negl
mov
fsts
jbe
sbb
ret
fs
addb
push
test
les
daa
inc
jmp
fstpl
roll
ljmp
or
popf
call
scas
iret
repnz
je
jg
mov
cmp
jle
ret
flds
dec
loop
sub
cwtl
push
inc
mov
xor
fprem
xor
push
jnp
mov
mov
cld
pusha
push
jl
gs
repnz
rcrl
push
mov
pop
fisttpl
jno
mov
call
push
inc
push
bound
out
mov
fisttps
lahf
repz
mov
lea
pop
xlat
cmp
icebp
jne
test
sbb
mov
stc
imul
mov
fnstsw
rcr
fwait
cmp
xchg
fcom
insl
pop
cmpsl
movsl
lcall
lds
cmp
mov
pop
adc
pop
mov
sub
mov
xchg
jecxz
and
movsl
xor
lahf
add
popf
shlb
mov
lcall
popf
out
cmp
cltd
sbb
cmp
sub
xor
inc
mov
shrl
or
sbbb
push
aad
scas
mov
sub
sbb
xchg
xchg
push
out
stos
int
xchg
xchg
or
push
in
inc
xchg
jne
call
adc
inc
and
jbe
leave
xor
cwtl
mov
xor
outsb
pop
jnp
add
aad
dec
cmp
fcomps
push
lcall
jmp
push
add
clc
jbe
repnz
dec
xchg
fs
mov
lahf
xchg
aam
out
jp
xor
inc
xchg
mov
push
lret
stos
cld
ret
push
or
leave
sahf
jbe
fcoml
movsl
movb
mov
out
pop
insb
push
stos
push
je
lods
dec
xchg
mov
ljmp
add
xchg
int
jg
int
insl
stos
out
je
loopne
inc
test
ja
mov
pop
or
mov
arpl
int
dec
jbe
scas
mov
iret
dec
pop
lock
icebp
push
test
sub
push
or
jp
out
pop
adc
leave
dec
dec
mov
and
mov
leave
ret
and
mov
add
nop
ret
pop
sldt
inc
jnp
cltd
mov
adc
orl
pushf
mov
xlat
cwtl
popf
test
inc
lret
mov
xchg
shrl
jae
insl
shrb
out
and
and
mov
andb
cltd
push
fsubrs
loopne
push
mov
out
or
popf
pop
ja
mov
or
cli
lods
das
in
inc
test
inc
bound
lods
aad
lcall
or
pop
inc
pop
mov
jae
xchg
fstps
mov
or
sbb
call
out
or
xor
sarb
cmp
andl
or
xchg
aas
test
fnstsw
icebp
leave
dec
fldl
fildl
xchg
lea
mov
cmc
sub
inc
sub
pushf
mov
or
mov
inc
adc
mov
out
inc
pop
dec
icebp
mov
insl
sub
mov
fldl
pusha
js
out
mov
loop
std
pop
jle
cmpl
shlb
cmc
in
pop
imul
xchg
jl
fsubs
pop
jecxz
out
xchg
into
sub
call
scas
fsubrl
pop
cmp
out
loop
sti
mov
pusha
outsb
xlat
in
imul
fidivrl
mov
dec
sbb
fdiv
es
pop
test
mov
adc
pop
out
dec
jp
out
leave
sbb
in
fimuls
mov
std
repnz
push
rcrb
xor
std
frstor
mov
dec
xchg
loope
sahf
or
loopne
cmp
and
insl
inc
inc
icebp
dec
fsts
jg
push
pop
pop
movsb
xchg
xlat
inc
jne
mov
rorb
push
add
nop
out
and
pushf
inc
jl
push
das
movsb
addb
fnstenv
clc
mov
scas
add
clc
aas
mov
inc
or
mov
fs
icebp
cmp
das
ljmp
jnp
pop
inc
lock
fstpl
int3
mov
adc
add
sbb
jno
ja
lret
pop
cmpsl
add
sbb
lret
es
movsl
nop
loop
push
fstpl
xchg
mov
mov
stc
xor
or
aaa
ss
rorl
popf
sbb
push
push
sar
ljmp
shrl
xchg
pop
aas
arpl
mov
cmp
pop
or
jnp
sub
pop
cmp
mov
and
jno
clc
sbb
in
adc
movsl
daa
mov
repnz
push
dec
push
xorl
out
dec
lcall
push
js
push
push
rcrl
xchg
pop
push
fiadds
cmpsb
movsb
cmp
popa
jne
repnz
int
pop
in
cld
shl
add
jp
popa
addr16
or
jle
mov
push
pop
jge
mov
cmp
cmp
push
pop
inc
into
cmpsl
pop
pusha
lds
mov
hlt
or
xor
shrb
mov
sbb
or
repz
cmp
inc
roll
cmp
movsb
xchg
mov
icebp
inc
pop
push
ds
mov
xor
dec
push
movsb
xchg
sbb
add
mov
xlat
inc
cmp
mov
xchg
mov
imul
jbe
lds
mov
rcrb
pushf
stos
ja
xchg
or
repz
filds
xchg
dec
push
scas
popf
and
ljmp
shlb
in
push
rcrl
mov
scas
add
jle
mov
pop
inc
and
ss
out
xorl
lds
daa
aam
push
xchg
loop
and
jg
cmpsl
mov
mov
popl
cmpb
out
jmp
and
icebp
sarb
inc
or
scas
test
enter
fldenvs
lds
inc
test
xchg
js
or
jno
adc
inc
sub
out
push
int
nop
call
add
dec
sub
add
and
lret
mov
clc
in
add
pop
cmc
or
pusha
or
repz
mov
push
jg
outsl
sarb
or
lea
jg
mov
bound
fdivrl
pop
jne
outsl
jne
pop
mov
decl
rcrl
pop
fchs
cld
arpl
mov
mov
rcr
roll
and
pop
fadds
lods
or
jne
xor
adc
pusha
push
sbb
xchg
imul
insl
pusha
push
mov
mov
push
jge
aaa
pop
dec
sbb
or
cmp
and
lea
repz
mov
int
cld
cltd
aas
aaa
jne
push
lahf
pushl
push
mov
inc
jne
lahf
and
test
pmulhw
out
dec
or
push
jg
aaa
dec
adc
out
adc
mov
fs
iret
xchg
arpl
add
adc
cld
in
daa
adc
and
dec
jmp
arpl
lcall
dec
or
aas
jl
dec
add
lcall
add
aaa
and
add
mov
ficomps
mov
xor
inc
pop
add
or
adc
or
inc
addr16
imul
dec
aad
or
aad
pop
push
int
vmovsd
in
jne
int3
shll
jno
gs
pop
lea
adc
or
and
in
xchg
arpl
xor
leave
out
and
test
lods
or
mov
lock
fistpl
ljmp
inc
rcl
ja
xor
mov
jecxz
cmc
pop
es
pusha
xchg
push
xchg
out
mov
jae
pop
sub
sub
mov
cmp
roll
mov
ljmp
xor
popf
push
inc
in
es
jecxz
lret
or
or
fsubrp
adc
roll
xchg
push
xor
xchg
gs
adc
and
inc
sar
push
mov
jno
jbe
nop
insl
sahf
pop
mov
dec
and
or
inc
mov
icebp
xchg
xchg
adc
mov
scas
sbb
jle
xchg
push
add
js
mov
lock
mov
jmp
dec
adc
inc
push
mov
cmc
jge
push
dec
sub
orl
adc
out
data16
and
pop
add
xlat
dec
lret
xor
insb
xlat
pop
loope
inc
test
add
or
psubd
fisubs
cld
push
int
fcompl
jnp
mov
push
loope
rol
mov
jnp
mov
xlat
idivl
push
in
clc
xchg
cmp
jnp,pt
xlat
xor
nop
or
adc
ds
loopne
mov
jbe
cmp
imul
leave
mov
cmp
scas
repnz
lret
sbb
cmpb
subb
into
push
push
pop
jns
insl
ror
cmc
dec
rcl
int
daa
sbb
lret
in
mov
jecxz
push
push
or
pusha
adc
shll
testl
xor
rorl
sti
icebp
adc
cmp
xchg
cld
mov
pop
and
jg
addl
mov
inc
add
ja
xlat
out
or
movsl
jmp
pop
xor
add
fmuls
inc
rcr
pop
jno
xor
loopne
jmp
sarl
dec
mov
xchg
loope
int
data16
sbb
jns
sub
dec
jl
sarb
ja
dec
xchg
add
imul
push
adc
sub
mov
shrl
mov
jg
sub
ss
ljmp
pop
test
aad
mov
or
lcall
or
jecxz
cmp
cwtl
jp
jmp
icebp
out
jp
and
in
mov
cmp
xchg
hlt
popf
dec
inc
das
ljmp
xor
mov
cmpsl
inc
add
sub
mov
dec
movsl
xchg
outsl
test
loop
ret
aaa
mov
stc
xor
jmp
imul
adc
cld
fimull
dec
rclb
jbe
lahf
add
and
inc
and
dec
sub
rcr
xor
out
outsl
mov
popa
pop
mov
pop
outsl
or
fwait
cwtl
mov
cltd
or
xchg
mov
jnp
outsl
cmc
push
push
jle
mov
pop
pop
ret
jnp
pop
dec
pop
daa
pop
setae
lret
adc
sbb
fwait
mov
xchg
addb
mov
int3
out
jae
xor
dec
cwtl
roll
or
aad
mov
fnstcw
mov
xchg
cld
cld
xchg
bound
ret
roll
xlat
sti
jnp
scas
mov
popf
mov
dec
xor
lods
in
ds
arpl
popa
cwtl
jecxz
pushf
out
std
cmpsl
add
stos
lock
jne
mov
scas
ja
dec
mov
jge
outsl
in
xchg
inc
fimull
mov
xchg
cmp
pop
mov
test
sti
lods
and
xlat
dec
jne
repz
mov
push
sub
cmp
out
leave
mov
push
push
out
mov
and
lock
mov
aas
mov
cmp
inc
cmpsl
inc
dec
mov
pusha
xor
pop
in
jno
arpl
add
insl
and
lock
or
stos
je
inc
shl
push
dec
or
inc
sbbb
loopne
inc
lods
sbb
adc
in
mov
xor
cmp
mov
or
mov
sbb
stos
mov
movsb
ds
xchg
fsts
dec
xlat
mov
std
daa
imul
dec
ljmp
inc
imul
cmp
inc
inc
lcall
insb
mov
and
and
push
adc
dec
popf
push
rcrl
sub
repz
hlt
std
push
and
aaa
inc
stos
mov
mov
mov
jo
push
add
scas
add
lret
rcr
imulb
fs
inc
pushf
insl
lcall
ljmp
arpl
cmpsl
push
jnp
adc
daa
push
xchg
push
jmp
add
cmp
stos
pop
lcall
add
xor
sub
cltd
stos
xor
imul
push
popf
mov
subb
enter
addr16
mov
ret
xor
mov
dec
jge
stc
adc
out
pop
loopne
lcall
or
movsb
insb
pop
mov
add
addr16
pusha
fs
or
fidivl
mov
rcrl
jmp
cli
mov
shlb
cld
cmp
mull
push
mov
std
sbb
dec
cmp
stos
pop
movq
mov
out
sub
mulb
add
sub
jb
push
xor
sub
xchg
fldcw
push
xchg
and
stos
mov
imul
andl
bound
mov
movsl
cmp
scas
nop
addr16
cmp
stos
sbb
mov
and
das
in
jmp
push
xchg
loope
or
jl
push
jnp
mov
int
loop
roll
ja
in
repnz
cmpsl
imul
jp
ds
and
mov
mov
cmp
mov
xchg
lock
and
and
cmp
cmp
adc
xor
mov
fistl
push
mov
mov
xchg
xlat
lods
cmp
loopne
insl
push
cmp
in
ss
ja
ljmp
mov
mov
mov
test
out
iret
mov
dec
insb
loop
loope,pn
outsl
xchg
inc
in
cmp
insb
lret
sahf
mulb
int3
xor
push
inc
mov
xchg
sub
in
pop
mov
dec
loop
cmp
push
push
xor
fdivs
aad
lret
sub
sub
out
xorb
test
xchg
jno
lods
scas
std
cmpsl
popl
push
adc
andb
add
cmpsl
mov
test
ja
data16
es
cmpsl
cld
lret
into
sub
mov
jl
add
push
test
pop
out
loope
ja
das
sarb
mov
xor
dec
xchg
call
out
adc
insb
fsubrs
in
dec
fdiv
imul
or
movsb
cld
dec
xchg
je
stos
cwtl
mov
push
add
lds
dec
cs
mov
sbb
mov
cmp
mov
mov
xchg
dec
xor
adc
addr16
inc
aam
pop
xchg
lret
imul
jmp
imul
add
fnsave
test
mov
push
mov
outsl
or
daa
fldl
fsubrl
sub
xchg
adc
addr16
cmp
adc
in
test
daa
cmp
sub
xlat
dec
or
pop
xchg
cs
mov
xor
jl
js
cmpsb
adc
rorb
leave
ret
outsl
test
mov
ret
jp
push
xor
inc
inc
xchg
cmpsl
cwtl
or
push
ds
mov
dec
xor
sub
jp
test
in
imulb
in
fs
out
pop
add
clc
out
dec
cmc
fs
jge
lods
sub
inc
lret
mov
sub
xor
jmp
pop
into
jmp
cmp
pop
inc
stos
clc
dec
fildl
inc
sub
add
and
divb
jo
or
je
hlt
ss
pop
pop
std
push
and
sub
adc
hlt
aam
pop
mov
mov
sti
sub
xchg
sbb
sti
cli
sbb
push
lods
cmpsl
push
andl
cmp
insl
mov
popa
pop
iret
mov
sbb
pop
xor
adc
and
data16
test
add
push
mov
pop
jl
xlat
push
mov
mov
scas
cwtl
movsl
movb
insb
test
mov
push
xchg
lea
std
out
insb
lods
and
test
fs
sub
sti
into
stos
in
ja
shrb
rolb
sub
mov
aad
pop
int3
xadd
fmull
push
test
es
psrld
das
out
jmp
iret
cmp
pop
test
mov
xor
in
jmp
outsb
imul
adc
xorl
out
mov
aaa
repnz
or
das
test
mov
leave
ss
inc
push
push
jmp
or
jne
and
ss
cld
lock
xchg
popa
daa
cs
call
mov
inc
adc
lcall
push
xchg
xor
jbe
ss
xchg
add
repnz
push
leave
jg
dec
lcall
xchg
in
pop
xchg
push
ds
or
mov
call
sub
or
inc
addr16
mov
push
fwait
aas
lret
jg
sbb
loope
sub
adcl
dec
inc
into
cmp
jb
xchg
xor
xchg
pop
fisttps
shll
dec
xchg
fidivrl
mov
push
push
xor
and
lret
jge
pop
and
cmp
les
jne
cmp
dec
mov
adc
push
mov
mov
call
cli
jecxz
add
js
sbb
cmp
movsb
das
sbb
sbb
sbb
insb
cmp
xor
and
int3
stos
inc
movsl
xor
test
add
jnp
shl
shr
mov
repnz
ror
lret
add
push
pop
jbe
lret
ret
fidivs
mov
jnp
and
xor
and
ljmp
nop
sub
jmp
mov
scas
jo
adc
bound
adc
mov
or
ds
in
cli
test
push
xor
arpl
cltd
mov
repz
push
add
test
and
fwait
lods
pushf
cld
data16
jbe
aam
movsl
or
xor
adc
mov
mov
dec
or
pushf
loope
mov
inc
sbb
imul
imul
aas
mov
add
rolb
insl
dec
inc
mov
pop
les
sbb
xchg
and
inc
repnz
leave
mov
dec
int
in
int3
xchg
hlt
jno
dec
outsb
add
adcb
adc
xchg
es
sbb
jns
inc
aas
jecxz
dec
pop
push
push
enter
mov
leave
and
inc
aas
dec
xor
mov
ja
adc
or
inc
repz
lods
enter
xor
or
sbb
xchg
inc
jne
inc
pop
pop
xchg
and
cmp
out
mov
popa
leave
cmp
subb
xchg
and
jnp
xchg
add
nop
dec
inc
jg
dec
xchg
les
xchg
pop
jge
or
scas
inc
or
cmpsl
loope
int3
dec
jb
dec
cmc
mov
cmp
adc
mov
push
fwait
push
dec
pop
xchg
loopne
mov
mov
ljmp
enter
arpl
mov
sbb
push
data16
clc
gs
xchg
xor
sbb
lret
into
adc
ret
jmp
push
stos
leave
cld
fcmovnbe
lock
dec
adc
inc
push
xchg
pop
cmp
push
lods
xchg
out
or
lret
xchg
or
add
movsl
mov
pop
sarb
insl
clc
cmpl
jb
cmp
je
push
dec
ficomps
stos
loope
or
enter
or
pop
and
jle
outsl
ja
push
fistl
dec
prefetchnta
dec
mov
inc
jnp
fldl
jo
dec
adc
loopne
btc
bound
sub
cmpl
or
mov
loopne
xchg
lret
divl
or
jo
jecxz
movsb
insl
xor
ljmp
bound
jge
rorl
flds
xor
jbe
mov
pop
out
mov
mov
adc
icebp
cmp
into
pop
ds
es
mov
xchg
mov
and
lret
ffree
cmpsb
xor
push
mov
push
sbb
mov
and
sub
repz
movsb
pop
inc
enter
arpl
ljmp
pop
pop
dec
xor
andl
aas
inc
add
dec
and
pop
shrl
and
lock
arpl
mov
gs
clc
dec
sub
jle
or
nopl
mov
and
cmpsl
or
inc
out
mov
mov
mov
mov
push
mov
mov
add
sbb
mov
cltd
daa
cltd
push
lret
sbb
jmp
jge
mov
adc
pop
imul
push
mov
xor
mov
jle
fsubrp
int3
pop
inc
stc
aam
jae
pushf
pop
xor
and
subl
into
adc
stc
cli
mov
repnz
ret
in
adc
jl
in
xchg
pop
loopne
cmp
fimuls
lock
pusha
mov
lock
push
adc
and
ja
dec
fsubs
pop
fidivrl
xchg
jp
dec
jns
insl
mov
mov
into
aad
push
cmp
xchg
call
out
pop
ss
loopne
fs
pop
leave
out
cmp
xor
inc
mov
pop
pop
pop
in
sbb
mov
mov
int3
cmp
lock
testl
pop
pop
outsb
and
dec
pop
fwait
in
mov
cmp
pop
push
aas
pop
aam
ret
fldcw
push
mov
test
and
cltd
aam
test
mov
pop
push
cltd
leave
adc
sub
and
sbb
rclb
les
xchg
sub
push
clc
into
cmp
xor
fisubrl
pop
test
jge
dec
xchg
or
mov
push
lods
mov
adc
sbb
imull
std
in
fsubrs
adc
sbb
push
pop
xchg
add
cltd
loopne
push
int3
jnp
cmp
pusha
das
mov
mov
stc
jl
jnp
test
lock
shll
test
in
dec
and
fistps
inc
dec
shr
mov
jnp
sti
mov
lret
push
fsub
pop
xchg
fiadds
and
outsb
int3
pushl
enter
adc
fs
ljmp
in
xchg
xchg
xchg
and
push
sbb
or
xlat
adc
mov
aas
repz
jp
push
rorb
loopne
mov
mov
push
pushl
addr16
adc
call
pop
sub
dec
pop
sub
ret
lret
dec
sub
mov
mov
stc
adc
sbb
clc
lods
push
dec
or
iret
or
lds
ss
mov
dec
xchg
or
dec
idivl
pop
iret
pop
push
or
shrb
popa
sar
mov
xlat
xor
add
mov
and
jmp
add
jmp
shlb
jp
ljmp
fstpl
test
jne
loope
lods
cld
clc
xchg
out
cmp
sub
dec
xlat
mov
repz
xchg
ds
cmpsb
add
sahf
ror
mov
mov
jae
push
mov
stos
dec
push
push
fidivs
das
cmp
mov
test
pop
ja
jp
xchg
cmpsb
lahf
xor
add
push
adc
and
loop
xchg
xor
mov
add
jmp
or
xlat
mov
jb
and
fisubrs
cli
pop
andb
lds
lea
mov
outsb
fnstsw
out
xor
bound
leave
movsb
xor
ret
mov
idivb
dec
push
cmp
subb
jge
daa
xor
int3
imul
xlat
sub
mov
inc
push
inc
das
pop
dec
sbb
aaa
insb
pop
jle
aad
inc
xor
add
imul
xchg
inc
movsb
mov
or
adc
push
sbb
cltd
lock
ds
in
sub
es
adc
dec
orl
imul
cmp
pop
push
dec
cmpsl
and
lret
fistpll
test
rcl
or
ja
jp
and
sub
dec
addb
filds
mov
xlat
or
push
and
icebp
inc
jae
fwait
dec
add
xchg
cmp
and
add
in
xchg
push
mov
xchg
insb
xor
daa
push
loope
or
sbb
repz
cltd
shlb
xorb
rolb
push
in
or
xchg
mov
xchg
add
stc
sub
aaa
sbb
enter
cmc
cmp
xor
notl
scas
stc
loop
int3
faddl
hlt
or
mov
dec
lahf
push
std
inc
jp
nop
je
xor
insb
gs
jge
daa
mov
loopne
jmp
push
lods
and
pop
lea
pop
loop
xchg
xchg
rcrl
fbld
adc
cmpl
rorb
mov
cli
lods
or
in
dec
shr
cmp
cmp
test
cwtl
and
ret
inc
icebp
lret
lods
pop
int
popa
cmp
xor
wrmsr
out
push
cmp
xchg
xchg
fdivrl
scas
popf
mov
pusha
lods
dec
or
sti
mov
add
stos
adc
adc
cs
loopne
scas
js
cmp
inc
xchg
and
pop
pop
dec
jne
jnp
or
subb
push
mov
cli
ljmp
mov
out
jbe
cmp
out
push
sub
mov
mov
cli
enter
xlat
adc
lea
push
inc
xchg
adc
shll
adc
lods
mov
xchg
mov
sbb
and
fcmovne
mov
scas
lea
mov
fsts
lcall
popf
int3
pop
out
fnstcw
adc
fwait
sbb
repnz
xor
cwtl
sbb
cli
lods
jmp
pop
mov
xor
cmp
shll
cmp
pop
into
or
xor
mov
leave
stc
insb
mov
xchg
jl
inc
mov
xlat
dec
repz
dec
adc
push
fisubl
xor
xor
int3
jo
dec
loop
loopne
ss
pop
iret
fs
mov
push
xor
mov
push
dec
mov
fisubs
push
pop
adc
pop
pop
lea
inc
or
pop
fxam
xor
mov
push
nop
repnz
push
in
pop
xchg
adc
xchg
es
cmp
push
dec
pop
pop
mov
scas
pop
jns
mov
loopew
pop
push
insl
and
ds
insl
in
mov
sub
pop
dec
mov
rcr
enter
push
aaa
lahf
xchg
dec
andl
add
movl
sub
int3
sub
lds
sub
inc
mov
xchg
aas
xor
pop
pop
push
sbb
jl
pushf
cmpsl
scas
mov
nop
jo
push
in
xchg
dec
cmp
stc
lods
jo
orl
shlb
cld
cs
roll
inc
mov
and
shr
mov
jg
sub
stc
out
push
test
and
or
dec
xorl
sub
scas
call
lret
mov
jmp
mov
cmp
push
inc
xchg
jne
cwtl
xchg
mov
jns
pushf
into
lret
ja
imul
loop
dec
pop
sarb
sahf
inc
insb
cmp
xchg
inc
pop
sbb
and
lods
mov
add
les
shll
pusha
popa
mov
fimuls
repnz
sub
adc
out
cmp
fimuls
push
popf
in
xchg
inc
pop
cwtl
xor
scas
inc
dec
mov
xor
jae
fsubrp
pusha
or
insb
sub
hlt
push
cltd
cwtl
inc
mov
dec
negl
ljmp
adc
into
daa
mov
add
icebp
push
mov
sub
mov
in
xchg
push
xchg
xor
adc
mov
inc
nop
jbe
mov
mov
mov
movsl
test
cmpsl
icebp
jecxz
cs
cltd
pushf
out
mov
sub
loopne
jge
lret
mov
in
aas
jns
les
add
mov
cmpsl
jp
cmp
and
mov
and
out
jmp
inc
mov
push
dec
cmp
and
out
jge
dec
cmpsb
jb
in
or
gs
push
mov
cmp
dec
lcall
mov
push
and
insl
in
sti
int3
out
xor
push
mov
in
lea
xor
aaa
sahf
jle
dec
push
adc
inc
add
ds
lock
pop
out
lods
sbb
sub
sub
jo
outsb
stos
shrb
lret
fists
pop
sti
add
hlt
cmp
shrl
and
mov
es
out
pop
addr16
test
jge
sbb
xor
push
inc
movsb
test
jp
lea
ficoms
mov
stc
cli
add
in
dec
jp
sub
lret
cli
pop
mov
pop
fwait
xchg
mov
jle
mov
pop
popa
mov
dec
or
pop
fbstp
shlb
push
cmpsb
pop
dec
xor
cmp
xor
sbb
push
insb
and
xor
adc
pop
icebp
xchg
mov
pop
aas
push
add
xor
repnz
dec
pusha
cld
rclb
mov
dec
push
lret
mov
pop
xchg
xor
pop
jnp
fs
decl
dec
loope
fsubr
aam
and
push
pop
adc
push
int3
add
pushl
scas
hlt
fnstenv
xchg
xchg
fsubrl
dec
dec
inc
and
add
adc
shl
popa
add
orl
jp
jg
xchg
test
push
sbb
push
jecxz
out
push
cld
adc
cld
cltd
sbb
pop
or
arpl
adc
ds
jge
fs
out
js
and
add
out
mov
sbb
testb
lret
mov
pop
rorl
inc
ss
bound
dec
cmp
mov
push
imul
push
push
xor
jae
and
iret
aaa
std
int3
call
xor
arpl
pusha
add
xchg
imul
test
outsl
sub
dec
cmpsb
or
push
xor
in
xchg
leave
mov
loop
pop
movsl
cld
jmp
fsubl
jnp
notl
add
jmp
adc
shll
lret
jg
fwait
push
imul
ljmp
pop
xor
out
xchg
int
xor
stc
jno
xlat
xchg
push
ja
cmp
rorb
cmp
mov
jmp
mov
stos
idiv
mov
add
push
arpl
mov
enter
or
push
lea
in
fbld
mov
call
sbb
imul
pop
mov
xchg
mov
icebp
hlt
jo
push
add
sarl
inc
and
aas
mov
scas
inc
dec
push
adc
ds
or
test
pop
ret
fnstsw
mov
incb
scas
xor
in
addps
call
outsb
mov
sbb
fstl
pop
push
sub
jns
mov
lds
cmp
mov
pusha
and
fisubs
dec
dec
jo
mov
data16
push
das
add
bound
xchg
rcrl
popf
and
pushf
xor
lcall
imul
dec
lds
mov
scas
repz
cmpsl
sbb
inc
sbb
xor
movsl
js
mov
xchg
imul
dec
lods
insb
jo
sub
out
daa
cmpb
or
xor
sbb
pop
pop
jp
fdivs
mov
cmp
pop
aaa
rorl
jae
mov
xchg
sub
cmp
cmpsl
or
cltd
inc
fstps
mov
ss
inc
imul
jb
pextrw
es
aam
repz
sbb
adc
dec
fdivr
loope
push
clc
inc
xchg
loopne
or
and
jmp
shr
addr16
mov
inc
adc
sbb
cmp
dec
jp
add
push
stc
add
mov
jo
push
rcr
adcl
sub
xchg
jnp
push
loope
xor
dec
imul
lret
sub
cwtl
movsl
jle
neg
mov
pushf
clc
mov
jl
mov
pop
nop
adc
lahf
gs
cmpl
push
jmp
imul
mov
push
call
sbb
sbb
cmp
jbe
push
imull
out
mov
jno
lea
lods
and
and
popf
shl
inc
or
sub
mov
mov
inc
hlt
testl
xlat
fldl
mov
shl
cmp
stos
leave
mov
cmp
stos
ljmp
adc
or
sar
inc
in
mov
cmpl
mov
lahf
dec
fstps
mov
xlat
fsubs
enter
push
cmp
lret
clc
in
lret
imul
ds
cwtl
out
lods
jns
or
repz
enter
popa
push
pusha
xchg
cmpsb
xchg
pop
hlt
sahf
jne
mov
loope
fistpll
mov
pop
pusha
mov
test
es
out
shr
cld
iret
ja
inc
movb
xchg
push
gs
es
jl
cltd
push
lock
pop
mov
xlat
lahf
dec
fcom
das
push
dec
stos
mov
or
js
sti
rcr
dec
push
mov
dec
xor
dec
and
jg
mov
push
cmp
aaa
push
data16
dec
aaa
mov
jl
lock
lds
xchg
pop
cld
scas
jae
cmp
in
adc
pop
add
push
sub
sbb
fidivl
outsl
jge
lahf
adc
repnz
sbb
mov
dec
cmp
adc
pop
add
lahf
push
or
mov
cmpl
xchg
fnsave
xchg
push
sbb
sbb
inc
pop
aad
call
jbe,pt
movsl
adc
mov
adc
rorb
clc
cmp
sbb
jb
adc
das
mov
mov
cmc
or
sarl
xor
in
mov
adc
call
setge
in
cmp
int3
ja
dec
push
pop
mov
rorl
out
inc
xor
hlt
out
enter
ret
in
mov
jne
pushf
scas
cmpsl
rcll
neg
std
mov
adc
call
or
or
cmp
mov
lds
push
adc
sub
cmpsb
fldcw
stos
push
lods
std
roll
sub
dec
fisttpll
shll
pop
loopne
call
stc
pop
fucom
popf
inc
xchg
sbb
xchg
pusha
cltd
pop
and
or
aam
test
xor
inc
je
or
push
imul
int
popa
inc
int3
push
pop
in
mov
inc
and
inc
faddl
in
sahf
cmc
movsl
mov
sbb
add
std
or
clc
inc
sub
jb
call
enter
rcll
cmpsl
mov
mov
mov
aad
dec
pop
iret
loopne
push
mov
xchg
and
inc
or
push
icebp
stos
jmp
dec
jl
out
lods
add
cwtl
enter
aad
mov
fdivrs
xchg
cli
je
mov
add
cmp
cmpsl
push
cmp
push
jb
jnp
nop
pushf
xor
add
outsb
cmp
jle
rcrl
enter
add
dec
dec
int3
lret
pop
mov
scas
stos
test
pop
jp
mov
repz
mov
dec
add
outsl
jne
push
inc
jl
pop
aaa
push
dec
sbb
xchg
inc
jl
push
aad
sub
adc
inc
mov
dec
jo
mov
jnp
push
shl
jbe
add
mov
push
inc
mov
enter
pop
inc
mov
push
and
push
xor
addr16
dec
data16
dec
mov
sbb
pushf
and
or
inc
pusha
ret
xor
pop
and
pop
and
sarl
or
fdivr
inc
dec
mov
into
andl
movsb
cmp
sbb
add
push
push
popa
pushf
adc
pop
xor
inc
fneni(8087
mov
pop
push
dec
repz
insb
pushl
aaa
and
scas
mov
cmp
adc
cld
popa
mov
sbb
cmpsl
sbb
jae
rcrb
dec
fwait
sbb
fwait
adc
xchg
fmuls
jl
mov
xchg
movsl
cmp
mov
outsl
js
mov
pop
ffree
outsb
or
sbb
mov
and
ret
dec
fwait
std
sti
cmc
cmp
adc
stos
push
fnstenvs
jns
jle
jmp
sbb
lock
insl
add
xor
dec
movsb
mov
ja
loope
leave
or
fidivs
pop
cld
mov
lea
je
out
lods
or
out
jnp
imul
je
out
xchg
inc
jae
loop
xor
pushf
jle
out
cmpsl
push
cmp
stc
sbb
or
xlat
into
fldenv
mov
cltd
inc
add
insl
mov
xchg
mov
cwtl
inc
loop
in
xor
stos
pop
loop
add
push
in
or
xor
mov
lods
dec
mov
out
adc
push
sbb
push
in
test
pop
dec
push
inc
stos
mov
shl
mov
das
orl
add
lods
fsts
adc
fcoms
cmp
mov
test
mov
into
aas
or
push
mov
dec
adc
or
les
mov
std
jmp
push
pop
jno
sub
push
mov
sub
jbe
or
jge
or
out
xor
mov
jb
dec
or
fsubrs
sub
mov
dec
popf
adc
xchg
shrb
mov
xchg
ffree
pusha
dec
xchg
loope
dec
jne
jo
jns
pop
cmp
push
rorl
lcall
and
xor
jb
mov
add
push
test
stc
inc
pop
pop
sub
inc
lret
js
push
xor
push
pop
and
stos
cld
ljmp
xchg
sbb
cmp
mov
movsb
mov
or
insl
and
push
jae
shrl
jp
stos
and
xchg
ja
adc
fistpll
mov
cmpsl
outsb
movsb
insl
out
xor
xchg
lahf
xor
aas
jg
repz
lret
cs
xchg
pusha
xchg
adc
in
outsb
pop
lahf
adc
or
dec
imul
pop
shlb
dec
test
addr16
inc
nop
pusha
cltd
or
das
xchg
jmp
rcrb
xchg
addr16
inc
andl
les
mov
andl
mov
sub
cmp
bt
add
aam
rorb
fstps
dec
inc
jnp
pop
in
lcall
xchg
or
push
and
in
jno
clc
popf
lahf
mov
fidivl
push
inc
sub
pop
xchg
add
dec
mov
xor
and
fadds
mov
mov
add
decl
adc
paddd
outsl
sbb
pop
scas
ret
or
insl
push
mov
pop
stos
cld
mov
movsb
mov
cwtl
cmpsl
dec
in
and
mov
cwtl
cli
adc
dec
sbb
mov
jle
ja
insb
aas
nop
jo
popa
mov
imul
das
sbb
dec
insb
jb
cmpsb
nop
and
iret
imul
xchg
les
push
divl
xor
pop
cs
inc
adc
xor
and
ljmp
addr16
pop
jp
or
clc
push
adc
or
int3
cmpsb
sub
pop
jb
fs
flds
and
mov
adc
mov
lods
mov
std
mov
idivb
xchg
jns
aas
sub
imul
insl
ret
cmp
inc
and
jo
jmp
ss
sub
lods
and
xchg
cmp
inc
xchg
xchg
jbe
mov
je
fwait
lds
lods
jae
jle
dec
xor
push
dec
into
sub
call
enter
jnp
pop
mov
push
push
adc
mov
mov
and
aaa
repz
adcb
push
aaa
dec
xor
aad
push
xchg
cmp
bndstx
mov
repnz
addr16
push
pop
adc
mov
xchg
ja
fneni(8087
mov
add
add
cmp
xor
cwtl
loop
cltd
jns
or
bound
idivl
loope
int
out
outsb
and
xor
xchg
hlt
out
dec
sbb
jns
push
rolb
jb
inc
imul
in
jae
mov
mov
mov
lods
fdivs
push
pop
insb
jns
inc
push
mov
fldcw
mov
inc
push
shll
jne
inc
sub
pusha
sbbb
adc
jle
js
dec
pop
jmp
mov
cmp
enter
fwait
mov
jmp
or
xlat
xchg
in
decb
shl
push
jg
and
dec
sbb
pop
mov
push
fldenv
pop
das
jae
leave
fwait
lahf
idiv
pushf
ja
inc
rcr
mov
insl
cld
xchg
jb
inc
int3
je
cmp
push
pusha
and
roll
sbb
jle
push
cmpsl
fildll
jecxz
ds
cmp
mov
insl
jg
jo
scas
xchg
pop
and
mov
mov
ret
dec
inc
pop
cmpsb
ss
add
xchg
icebp
push
and
inc
addl
mov
sub
les
scas
in
int3
xchg
jmp
mov
leave
add
dec
icebp
dec
pop
ret
lods
mov
mov
xchg
repz
mov
mov
clc
shlb
vmptrst
xchg
imul
sbb
jl
xchg
lea
dec
ret
imul
or
sbb
lods
loope
adc
shl
nop
mov
mov
scas
mov
xchg
iret
xor
mov
sahf
inc
iret
mov
mov
cmp
aam
std
sbb
aas
inc
std
int
sub
mov
sahf
or
lret
mov
pop
addr16
outsl
dec
in
cmp
popa
push
jl
dec
sbb
fxch
dec
loop
enter
inc
adc
stc
sbb
insl
stos
xchg
out
ret
shll
xchg
jb
push
sarl
in
add
jne
mov
sahf
test
cmpsl
mov
fisttpl
sub
daa
pop
add
stos
and
filds
rcrl
in
fst
ds
scas
dec
sbb
test
data16
xchg
add
ja
mov
movsl
ljmp
cli
xor
stc
fisubrl
push
or
pop
mov
cmp
js
loope
mov
inc
dec
push
pop
jns
movsb
cmpsb
movsl
movsl
les
adc
dec
insb
out
scas
psrlw
push
ficoms
lods
or
mov
dec
pop
pop
mov
sub
lock
movsl
dec
pop
lahf
inc
data16
mov
sbb
add
mov
push
test
jl
mov
pushf
sbbl
mov
loope
mov
cld
lea
nop
jle
ljmp
imul
pop
ss
cltd
filds
jae
xchg
sbb
lock
ds
in
inc
mov
imul
sbb
out
xor
xor
mov
inc
push
scas
fldl
mov
lret
fbld
cli
popf
inc
mov
cmp
shrb
out
sbb
imul
std
into
repz
mov
push
inc
aas
outsb
aas
ss
adc
jg
or
shlb
sub
jp
or
or
insb
lods
insb
inc
mov
adc
aad
jbe
sbb
inc
bound
rep
jl
shll
addr16
xchg
in
cli
adc
addr16
adcl
test
stos
mov
dec
rcrb
shrb
jne
pop
and
or
lret
inc
aad
jl
push
mov
inc
pop
inc
sti
add
sub
mov
push
aaa
jne
add
push
push
xchg
movsb
xchg
lret
cmpsl
cmp
std
addl
std
sub
mov
adc
sub
cmpsl
inc
in
jl
add
clc
or
xchg
ljmp
nop
cmc
ret
mov
sbb
jge
scas
jnp
mov
fstpl
test
popf
mov
pop
dec
data16
or
rcll
sbb
repz
jbe
fs
mov
lret
imul
repz
pop
push
xchg
in
cmp
popa
add
xor
popf
xchg
cli
sub
lock
fwait
popf
dec
pop
fadds
sahf
arpl
pushf
cld
dec
rcll
loopne
lds
xor
or
and
shr
test
jle
dec
pop
fisttps
mov
or
xlat
data16
test
nop
lock
jle
sub
sbb
xchg
cmp
add
mov
insl
adc
ret
push
test
ljmp
aaa
icebp
aaa
jno
outsb
cmpsl
fidivrs
pop
or
fwait
pop
rcrb
cmp
mov
add
or
dec
or
decl
dec
gs
or
pushf
scas
call
movsl
push
stos
pop
pop
cmp
xor
dec
lods
idiv
test
imul
mov
aaa
rcrl
aam
clc
not
dec
and
loope
sbb
mov
cmpsb
pop
dec
jp
xchg
lret
xchg
and
aaa
jmp
jmp
add
jl
cs
fsubrs
jae
add
inc
and
cmp
pop
fcoml
std
adc
jnp
push
sbb
inc
bound
cmp
push
mov
sub
iret
int
mov
mov
in
rcrl
daa
xor
sub
xlat
dec
xchg
push
jge
sub
pop
in
test
das
orb
pushf
je
mov
push
aaa
int
xor
repnz
push
sbb
mov
repnz
and
sbb
push
adc
stos
add
xor
test
pop
insl
xchg
lods
jp
adc
bound
int3
bound
lock
addr16
push
push
pop
shll
jnp
pop
push
mov
repz
fwait
pop
add
scas
popa
adc
popf
ss
ss
je
fucom
push
test
dec
inc
rol
add
pusha
mov
jb
aas
push
and
xchg
dec
in
shrl
add
dec
xchg
mov
inc
popl
out
dec
out
mov
pop
ljmp
lahf
loopne
sub
shrb
ljmp
adc
sti
fstps
fwait
mov
mov
aam
xchg
mov
cmpsl
rsm
jnp
bound
pop
or
push
ret
test
hlt
fbld
and
out
out
xor
inc
xchg
fildll
loop
aam
inc
or
call
cltd
mov
jp
hlt
xor
or
push
aad
jge
adc
bound
push
imul
es
inc
lock
rorl
mov
dec
mov
ds
test
subl
mov
xchg
xchg
inc
xlat
dec
bound
dec
pop
dec
add
or
stos
nop
push
mov
mov
mov
maxps
sbb
pop
push
addr16
or
icebp
adc
movsb
cwtd
dec
pop
pop
xorl
and
inc
mov
mov
enter
cwtl
pushf
push
mov
daa
arpl
inc
lret
mov
sbb
fimull
lret
dec
mov
addr16
pop
movsb
pop
mov
xchg
punpckhbw
adc
cwtl
out
ds
xor
mov
mov
xor
push
fwait
xor
xor
loope
adc
cmp
imul
mov
test
sbb
stos
insl
shlb
mov
outsb
dec
ja
jg
negl
xchg
lock
xchg
ret
nop
mov
orb
push
daa
in
gs
mov
lock
test
test
in
add
icebp
xchg
rorb
sbb
add
call
jmp
test
pop
hlt
int
inc
in
inc
inc
xchg
ja
jg
xchg
ss
stc
pop
mov
stc
jge
rcrl
stc
pop
das
inc
ds
pop
nop
pop
jmp
insl
popa
gs
jne
lock
fists
mov
pusha
push
arpl
sub
fwait
mov
hlt
xchg
and
push
std
outsb
dec
dec
mov
cmp
aas
fwait
mov
adc
pop
sbbb
inc
in
int
inc
popf
jb
pop
cld
or
pop
xchg
inc
mov
or
xchg
testl
cmp
shrl
shr
andl
mov
push
repz
pop
mov
mov
loop
out
pop
cmp
add
int3
mov
dec
scas
mov
dec
popf
jb
mov
sbb
cmpsl
mov
inc
pop
aas
xor
mov
fdiv
cmpsl
and
repz
incb
pop
pushf
mov
int
jbe
lret
lock
rcr
lods
ss
or
hlt
mov
xchg
xchg
or
js
adc
pop
pop
adc
cmpsb
and
mov
push
xchg
and
adc
push
lock
in
and
add
pop
pusha
pop
mov
mov
mov
lods
add
sti
xchg
and
xchg
adc
add
or
push
lahf
push
jne
xor
incl
inc
jae
inc
push
icebp
sbb
nopl
xchg
adc
test
jg
hlt
push
jecxz
mov
pop
xorl
push
test
jno
stos
fsubl
daa
cmp
jle
inc
inc
jne
mov
cmp
in
test
in
int3
jp
in
dec
push
dec
sbb
lret
cld
sbb
ds
mov
insl
repnz
pushw
push
mov
in
int
add
stos
xlat
and
jge
xor
xchg
add
adc
roll
lock
xor
push
xor
inc
outsb
push
xchg
xor
push
aas
push
dec
and
fisttps
xor
insb
les
and
sbb
mov
or
push
ljmp
pop
cmpb
jg
ror
push
nop
inc
sub
bound
mov
and
dec
sbb
cmpsl
adc
clc
test
push
add
xor
cmp
mov
sar
push
mov
sub
fs
aad
pop
push
lods
fisubs
lock
xchg
ljmp
inc
mov
mov
mov
sub
ret
ja
jno
loopne
aad
xor
inc
dec
std
shll
cmp
xor
cwtl
jne
mov
sub
mov
xlat
mov
jmp
xor
dec
xchg
mov
outsl
xchg
and
shrb
js
add
test
xor
push
mov
xchg
inc
lahf
stc
insl
pop
mov
sub
add
inc
pop
xor
adc
or
mov
push
inc
mov
aas
cmp
cmp
fucomp
xor
std
inc
pop
xchg
mov
fdivrl
sbb
inc
es
fst
cmp
outsl
and
fcmovne
dec
int3
sub
xor
jno
lods
lcall
add
inc
clc
push
xchg
add
lods
xchg
dec
mov
lds
push
outsl
scas
insl
in
sbbb
leave
ss
mov
data16
and
cmp
and
fcmovb
lahf
in
add
pop
xchg
mov
pop
pushf
cmp
mov
mov
xor
xlat
push
in
push
xchg
mov
and
and
cmpsl
inc
push
push
xchg
stc
mov
sbb
sarb
lret
mov
pop
mov
sbb
bnd
xchg
subl
pop
sub
mov
aad
dec
sbb
adc
jge
test
xchg
sbb
dec
inc
mov
loopne
dec
outsl
fsts
in
mov
ret
cmp
add
cmpsl
sbb
stos
xchg
std
mov
outsl
mov
and
mov
mov
inc
dec
or
add
jg
push
lock
dec
popa
fisubrl
or
mov
push
test
xchg
mov
or
stos
xor
jno
xchg
push
orl
add
fs
mov
ljmp
xor
inc
mov
jg
adc
cmp
jnp
cmp
mov
mov
sahf
inc
mov
insb
nop
mov
xor
inc
sti
std
xchg
xor
push
xchg
jnp
push
movsl
test
std
jle
jl
or
pop
cltd
loop
push
push
cmp
xchg
dec
push
dec
xor
lea
add
xor
loop
ret
popf
jg
cmp
push
mov
stos
jnp
movsb
out
dec
mov
imul
cmp
inc
les
xchg
std
das
gs
insb
aam
adc
xchg
mov
test
sbb
dec
ret
addb
inc
je
movsb
shlb
xchg
repnz
cltd
loopne
dec
rclb
sbb
inc
inc
cmpsb
pop
push
pushf
xchg
xchg
xor
pop
stos
dec
shrl
setbe
and
scas
loope
addb
lcall
jg
sbb
out
sub
xchg
inc
adc
add
jae
inc
or
test
icebp
jnp
ftst
mov
inc
sub
push
outsb
loopne
cmpsb
xchg
or
outsl
jnp
ljmp
lret
and
jg
jecxz
push
mov
add
pop
xchg
jg
and
ja
jg
aas
cmp
clc
dec
pop
je
pushf
flds
mov
aam
movsl
idivb
sub
popf
shll
in
mov
rolb
nop
jg
inc
adc
adc
xor
imul
enter
imul
fwait
test
scas
xchg
cmp
ror
fnsave
orl
push
inc
imul
jl
xchg
or
leave
adc
mov
ja
dec
mov
cs
ss
call
imulb
scas
dec
mov
stos
test
pop
fxtract
sti
aam
inc
ja
push
mov
stos
xchg
jno
mov
adc
jae
inc
into
and
adc
adcl
and
push
mov
mov
xor
mov
lods
imul
outsb
and
cmpb
push
pop
fdivrl
ret
cmp
clc
mov
mov
mov
jns
daa
mov
push
sbb
addl
dec
sti
sub
push
sbb
pop
mov
inc
jge
mov
dec
adc
push
addr16
cmp
mov
enter
push
cmpsl
push
fidivs
pop
xchg
sahf
xor
sbbl
jmp
popa
fwait
mull
cmp
aaa
mov
xor
fstps
dec
xchg
insb
dec
xor
adc
pop
shl
push
mov
or
test
ja
in
loope
push
mov
jg
or
adc
pop
cmp
es
aam
xchg
cmp
call
popf
inc
jae
xlat
xor
data16
xor
int3
incl
ljmp
loope
imul
test
daa
mov
jae
push
mov
shrb
shlb
add
inc
pop
scas
pop
jg
cmpl
xor
push
jl
rolb
dec
sarb
sbb
xchg
movsb
mov
inc
pop
jne
dec
loopne
push
aam
movsb
mov
loop
or
ljmp
push
and
shlb
pop
cmc
loopne
and
pop
call
and
dec
xor
loope
jmp
mov
sub
push
js
adc
aaa
mov
or
pop
cmp
sbb
movsb
sbb
pop
add
mov
sub
mov
jmp
or
je
mov
push
jmp
xchg
adc
cltd
daa
sbb
xor
lahf
jl
xchg
xor
stc
mov
in
dec
or
pop
xchg
sbb
jp
pop
xchg
pop
aam
je
push
in
rcrl
mov
jae
pop
sub
mov
inc
push
lret
push
cmp
data16
xlat
pop
pop
add
std
jne
add
adc
insb
in
xchg
inc
movb
cmpsl
jns
push
insb
incb
jmp
pushf
mov
adcb
in
loope
add
dec
icebp
pop
push
push
mov
jl
or
nop
test
ret
in
adcl
push
or
jp
icebp
shl
shlw
mov
sub
mov
iret
add
lods
or
add
jo
mov
push
sub
loop
pop
cmp
jge
orl
adc
xchg
jge
in
and
dec
mov
add
dec
cli
mov
pop
out
iret
imul
inc
push
mov
sbb
sub
sub
and
out
pop
xor
sar
push
sbb
popa
shrb
test
mov
and
push
push
adc
mov
sub
adc
add
cltd
adc
push
mov
and
xchg
sub
jnp
in
insl
enter
loopne
in
cmp
xchg
ljmp
aad
xlat
fstpt
pop
pusha
lods
adc
pop
jne
sbb
pop
cmp
xchg
ret
cltd
stos
std
outsl
push
popf
sbb
in
lods
je
sbb
aad
popf
or
jns
sub
and
ja,pt
fs
out
cmc
mov
xchg
outsl
push
fldt
jecxz
sub
jg
xor
out
fldl
mov
mov
fadds
or
mov
push
add
xor
es
inc
loopne
push
cltd
dec
insb
fcmovnbe
jne
mov
enter
jae
xchg
jecxz
ss
jno
iret
hlt
mov
je
fst
and
ret
daa
push
aam
lock
ds
dec
loope
pop
mov
mov
enter
sqrtps
cmp
repz
mov
add
push
cmpsl
dec
mov
cli
fistl
and
pop
out
push
push
mov
fcoms
sbb
pop
shll
dec
cmc
shrl
sahf
movsl
je
je
and
int3
pop
push
push
push
add
mov
adc
sub
shr
fiadds
repnz
adc
cwtl
ja
ds
ljmp
cs
repnz
aaa
inc
mov
outsb
stos
mov
ja
ss
sub
sbb
arpl
xor
sbb
fs
das
mov
add
jge
mov
mov
dec
push
xor
lret
adc
out
sub
mov
jp
pop
cmp
sub
jmp
jmp
inc
push
xchg
and
ret
jbe
orl
add
adc
cmp
clc
sub
mov
xchg
psubd
daa
xchg
test
and
adc
test
dec
push
mov
outsb
and
mov
repz
jmp
sbb
dec
sti
mov
lret
mov
pusha
or
add
adc
inc
repnz
xlat
mov
icebp
mov
inc
sub
inc
jae
je
fidivl
jmp
pop
in
and
pop
xchg
enter
jecxz
jle
xchg
dec
cmp
outsl
jg
lcall
push
dec
sbb
in
popf
mov
cld
in
in
insb
dec
xor
and
xor
mov
insb
cmpsb
mov
jg
cwtl
xchg
lods
clc
popf
movsl
lcall
cmpsb
cmp
ljmp
and
xor
add
xchg
dec
xchg
cs
cmp
repnz
push
mov
sbb
sbb
lods
sbb
stc
jne
popa
xor
insb
dec
es
pop
mov
add
and
jae
das
mov
mov
pop
pop
and
fwait
jo
add
or
test
and
fisubrl
xchg
mov
and
ljmp
push
loop
jp
bswap
mov
outsb
addr16
cmpsb
data16
mov
ljmp
stc
mov
iret
cmp
ja
jge
popf
popf
jecxz
inc
cmp
mov
iret
cltd
fcompl
cmp
mov
or
cs
mov
je
inc
mov
arpl
jnp
mov
int3
dec
xchg
cmpsl
fxch
jge
in
xorl
dec
sub
jmp
xor
inc
and
pop
adc
test
arpl
mov
mov
push
scas
daa
loop
incb
sbb
jb
fnsave
jp
and
lds
mov
xor
rcrl
jp
sar
sbb
or
mov
push
daa
sahf
mov
or
or
adc
dec
pcmpgtd
xor
xchg
xchg
dec
icebp
jmp
cmp
inc
out
or
push
insl
and
loopne
dec
mov
mov
xor
testl
sbb
mov
xchg
sarl
inc
pop
push
xor
testb
outsl
lahf
stos
xor
outsl
pop
xor
aam
pop
js
cmp
mov
frstor
and
jle
xlat
pop
dec
pop
test
pop
dec
mov
or
pop
lods
cld
adcl
lcall
cmp
test
cmp
xor
lret
ret
mov
xchg
push
inc
adc
mov
mov
lods
cmpsl
or
sahf
xchg
jg
add
jl
jl
or
ss
faddp
inc
mov
dec
sub
adc
imul
je
mov
sub
push
and
lcall
push
repnz
cmpsl
enter
sbb
aaa
mov
adc
sbb
xor
push
adc
or
movsb
fnstsw
mov
adc
dec
jp
sub
xlat
xor
dec
xchg
push
stos
sub
mov
pop
push
mov
cmp
imul
dec
inc
push
cmp
cmp
cmp
inc
stos
test
cmp
or
sub
insl
xchg
ret
or
inc
insl
xor
lahf
jl
adc
cmp
cltd
lea
psubw
js
add
push
sub
inc
rcll
stc
movsb
lea
mov
jno
and
imul
test
stos
mov
xor
pop
mov
cli
fimull
jno
add
bound
inc
and
js
inc
imul
inc
xchg
std
and
dec
or
and
imul
mov
mov
lds
pop
jnp
sub
xor
push
ja
cwtl
bound
test
test
cmpsb
push
fsts
inc
ds
push
mov
test
mov
pop
fwait
cmp
lcall
cmp
jl
push
movsb
rcr
cmc
leave
jg
push
push
std
adc
imul
pop
js
mov
dec
pop
mov
fsubs
mov
add
test
mov
push
jmp
scas
sbb
insl
xor
push
push
mov
divb
jp
call
push
and
mov
dec
jne
or
mov
lahf
lret
icebp
je
gs
or
dec
mov
mov
jae
in
ljmp
aam
hlt
adcl
outsl
push
push
into
in
dec
sub
aam
fcomip
jl
add
sbb
lea
bound
insl
in
outsb
into
popa
fwait
push
lret
push
out
mov
sbb
adc
inc
repz
jnp
mov
movzwl
test
std
push
push
mov
inc
mov
xor
push
sub
adc
xor
dec
sarb
jmp
mov
test
mov
test
lahf
aas
mov
adcb
shr
out
sbb
adc
testl
es
lea
mov
push
cmp
mov
add
jo
in
push
mov
and
and
xchg
mov
lock
in
cs
stc
jo
fdivs
out
in
cmp
inc
mov
fmull
dec
fsubp
pop
inc
movsl
fistpll
aaa
js
jne
jge
lahf
sub
adc
sub
push
xlat
dec
mov
push
data16
xchg
xor
add
add
stos
dec
fistpll
pop
sbb
int
mov
mov
mov
int
in
test
mov
inc
outsb
int
aas
inc
cmpsb
inc
inc
push
adc
push
inc
lea
push
arpl
aaa
outsl
xlat
dec
pop
or
insl
inc
mov
fcoms
mov
into
pop
xchg
jp
lock
and
xchg
outsl
mov
mov
or
lds
sub
cmp
cmpl
inc
jo
sub
movsl
push
pop
fnsave
adc
lahf
push
lret
ficomps
inc
loopne
or
popa
ss
test
jecxz
xlat
lods
outsb
mov
loop
lret
imulb
mov
mov
adc
lods
in
movsb
fsubr
xchg
cmp
repnz
xchg
and
jmp
push
push
rcrl
and
mov
sub
in
je
sub
dec
or
mov
ja
xchg
mov
sbb
ljmp
add
mov
xchg
pop
incl
and
pop
jbe
jae
xor
ja
jge
rclb
push
push
sarb
arpl
les
into
in
stos
mov
dec
mov
sub
movsl
lret
in
push
dec
lods
repz
mov
inc
mov
mov
inc
stos
inc
inc
fsubrl
cli
and
enter
push
mov
mov
pushf
ljmp
adc
jo
bound
xor
insl
cli
fsin
mov
jmp
adc
aas
inc
sbb
jne
mov
mov
shr
xchg
push
mov
loope
popa
fldl
lret
inc
cs
mov
inc
mov
movsb
imul
add
mov
or
iret
jbe
dec
mov
int
cmp
push
or
prefetch
adc
lods
push
int
cwtl
xor
test
cmc
jae
daa
jno
jecxz
sar
orb
or
outsl
xor
and
pop
out
fnstcw
repnz
cs
cli
mov
sbb
aam
cmp
shll
imul
sbb
repz
dec
mov
loopne
lock
mov
popf
loop
and
xorb
imul
loopne
adc
adc
xchg
scas
sahf
add
or
test
add
mov
push
jl
outsl
in
js
fstps
mov
pop
lahf
stos
stos
scas
xchg
sarb
inc
cs
rcll
mov
out
pop
out
jl
add
out
jp
pop
mov
inc
insb
loope
subl
jl
push
xor
faddl
imul
jnp
jg
call
adc
push
push
fcoms
xchg
pop
inc
fiadds
testb
push
in
lds
and
fdivrl
test
xor
loop
adc
inc
mov
jp
cld
push
test
inc
in
test
mov
mov
leave
adc
push
mov
xchg
cmp
push
inc
jno
cs
and
aad
push
dec
mov
jl
nop
xchg
inc
lods
dec
xor
jecxz
pop
xor
add
out
pop
in
lods
sbb
inc
push
lds
pop
inc
xchg
xchg
adc
jg
mov
arpl
cmp
test
ret
pop
ja
mov
or
decl
xchg
inc
jb
mov
fucomi
adc
xlat
fcom
aam
pop
lock
push
int
fcompl
stos
clc
bound
hlt
xor
cmpsl
test
xor
pop
movsl
jle
cmp
cmc
shll
and
adc
jnp
leave
mov
repz
mov
in
sub
addr16
mov
ret
cmp
iret
int
mov
arpl
lock
adc
int3
cmc
jnp
jne
enter
leave
lea
and
imul
aaa
sarb
out
xchg
push
dec
aad
in
mov
xchg
xor
outsb
clc
and
in
or
mov
lahf
call
mov
add
orb
xchg
in
pop
enter
push
xlat
pushf
sarb
lea
movsl
mov
jnp
xchg
mov
xchg
inc
negb
dec
mov
mov
jp
incl
adc
mov
xor
cmp
out
mov
sbb
addr16
sub
mov
inc
add
add
lods
and
aam
sbbb
add
inc
pop
cmp
mov
xchg
add
xchg
lods
rol
dec
jb
push
adc
pop
cmp
outsb
mov
dec
insl
add
mov
pop
mov
aad
out
inc
mov
jne
ret
aas
mov
jmp
sti
inc
repnz
test
fiaddl
mov
jb
icebp
addr16
xor
enter
pop
repz
enter
outsb
shll
xchg
test
int3
mov
shl
pusha
lret
nop
out
js
mov
lret
pop
cmp
cmp
movsl
nop
gs
fwait
and
pop
in
scas
or
addr16
mov
sti
dec
mov
push
gs
pop
mov
lahf
cmp
stos
mov
jne
jb
inc
pop
add
cmp
pushf
js
or
mov
push
push
mov
iret
je
arpl
jge
cwtl
adc
movsl
addr16
adc
repz
mov
add
loopne
mov
adc
sub
dec
fs
push
lcall
xchg
jno
rol
inc
xchg
inc
fiaddl
add
jns
sub
popa
daa
cs
mov
jmp
adc
jle
pop
shll
je
repz
test
aad
dec
sub
je
aam
ret
daa
insb
push
mov
ret
inc
add
adc
pop
mov
fsubrl
dec
inc
test
fs
xchg
negl
enter
mov
stos
xchg
ret
jbe
push
mov
jecxz
mov
dec
loop
mov
fdivrl
fcomp
xor
movsl
pop
into
leave
pop
push
mov
xchg
jg
test
push
aas
jnp
arpl
rclb
ret
adc
stos
jge
scas
fsubrl
pop
mov
push
xor
in
jle
mov
cmp
fcmovu
push
inc
adc
and
mov
jp
mov
pop
gs
mov
push
popf
sub
outsl
sub
adc
jb
push
or
xor
dec
insb
mov
in
pop
add
sub
je
lock
repz
int3
adc
xchg
lcall
pop
imul
push
xor
loope
jp
ds
xchg
imul
mov
cwtl
test
pushf
push
jns
and
sbb
ficompl
test
js
jno
imul
std
add
jbe
mov
lcall
outsb
in
jns
arpl
cs
inc
aaa
push
popf
jbe
inc
es
fstps
jbe
adc
mov
add
and
mov
xor
inc
pushf
fwait
stc
out
ss
mov
std
push
mov
add
push
inc
xchg
inc
jmp
cmc
test
sbb
iret
vmovupd
jp
shr
aad
movsl
out
xchg
xchg
js
xchg
je
dec
call
dec
pushf
sub
inc
or
or
inc
fs
aaa
sbb
push
push
repz
xchg
cmc
ja
cli
fwait
jg
cmpsl
aad
or
mov
xchg
stos
rdpmc
and
bound
xor
ja
and
cld
inc
stos
out
lret
inc
and
dec
sbb
fstl
lods
jbe
and
mov
jo
ja
push
cld
loop
dec
xchg
xor
jnp
pop
jmp
jle
ss
ja
sarb
pop
clc
mov
mov
leave
stos
inc
mov
cmp
xor
outsl
adc
sbb
mov
popl
dec
iret
int3
and
leave
mov
int
adc
nop
scas
sub
adc
test
xchg
out
xor
mov
pop
mov
sahf
push
mov
pop
rorl
scas
aaa
pop
lods
push
mov
dec
in
lods
stos
lcall
jg
negl
fcomi
xlat
lods
inc
cmpsl
xchg
stos
dec
out
adc
pop
aaa
lea
jp
push
xor
movsb
shrl
jnp
out
setne
testl
stc
xor
fdivrl
into
xor
mov
mov
xlat
mov
lret
xchg
out
out
xor
ljmp
insb
dec
pop
js
out
jle
in
and
test
jg
push
repz
push
cmp
enter
jp
popa
movsl
push
fwait
and
and
jns
adc
movl
dec
loopne
cld
outsl
dec
sub
outsl
test
xor
dec
jecxz
aam
jmp
call
push
xchg
fs
in
cltd
or
and
xor
outsl
shrl
out
or
mov
rolb
icebp
shlb
pop
pop
and
test
movsb
xor
je
jmp
lret
push
icebp
xor
pop
jge
adc
pop
test
ljmp
and
inc
and
imul
pop
aam
dec
mov
lea
test
cmpsb
mov
or
shlb
xor
dec
out
hlt
out
mov
dec
push
lea
dec
jg
cmpsl
pop
or
sbb
loope
push
mov
xorl
mov
cmpsb
mov
mov
test
scas
mov
xchg
xor
and
jp
xor
cs
mov
push
jno
jge
push
in
sbb
push
in
push
out
xor
out
xor
jl
mov
cs
sbb
aaa
mov
lcall
sub
mov
xchg
push
lods
dec
in
testl
orl
and
and
scas
inc
inc
lods
xchg
mov
js
std
cmpsl
bt
cmpsl
popf
arpl
out
push
or
push
popf
loope
cmpsb
lods
insl
mov
cmp
enter
ret
or
scas
enter
jp
movsb
rorb
mov
mov
cmc
sbbb
fistpl
dec
gs
lahf
xor
fwait
mov
mov
outsw
data16
mov
mov
xchg
sbb
xchg
in
mov
out
repnz
in
cmp
arpl
and
lcall
push
sub
xor
cmp
stos
cli
and
cmpsl
leave
cmp
aam
jp
sub
les
sar
cwtl
nop
cmp
inc
push
adc
test
lock
xchg
ja
or
pop
push
dec
cs
nop
inc
jne
mov
xor
dec
rorb
test
lods
dec
shll
jbe
adcl
rclb
add
outsb
dec
cwtl
inc
add
push
xor
dec
neg
cltd
mov
mov
pop
sub
sti
mov
fldcw
scas
pop
xor
add
add
leave
push
and
dec
sub
lds
ds
sub
orb
inc
xorb
push
in
scas
dec
or
int
sti
cmp
xor
dec
xchg
into
jnp
push
clc
clc
dec
test
and
dec
push
cmpsl
ds
test
sub
pop
xchg
in
dec
insb
mov
bound
pop
inc
mov
cli
push
xor
out
jae
jae
pusha
addr16
push
hlt
dec
and
inc
dec
nop
xchg
gs
and
push
dec
sar
bound
jp
and
lret
push
stos
mov
inc
scas
test
das
int
xor
lret
jo
sbb
out
sub
mov
sahf
movsl
pushf
pop
push
ss
and
les
dec
sbb
dec
pop
pushf
xchg
ss
lret
or
and
push
lcall
frstor
and
xchg
inc
cmc
je
sub
push
vpunpckhqdq
adc
insl
and
dec
and
adc
int
mov
jae
push
daa
and
push
negb
xchg
cmp
fisttpl
push
pop
hlt
sub
pop
inc
xorl
adc
sti
imull
movsl
add
dec
pop
enter
pop
dec
imull
dec
jns
stos
inc
sbb
xchg
adc
arpl
sarl
xor
mov
aam
stos
pop
aas
mov
inc
inc
dec
lds
or
outsb
pusha
lahf
lret
and
inc
rcrl
icebp
lods
jge
inc
inc
out
sub
dec
jecxz
mov
mov
add
sti
push
push
lret
add
je
pop
pop
in
pop
imul
ljmpw
in
pop
sub
in
int3
sub
jmp
lock
dec
pop
pop
sbb
sarb
mov
pop
cmp
jle
stos
xchg
out
jbe
push
popa
jo
sbb
adc
xchg
push
xor
cmpsb
and
mov
ja
lahf
inc
in
loop
cmp
cmp
cmp
sar
push
push
iret
xlat
sbb
testb
sahf
push
pop
ljmp
ljmp
cltd
lcall
nop
push
push
sbb
sahf
sbb
aad
jle
xchg
jne
les
mov
or
jo
xchg
pop
xlat
push
loop
mov
fmuls
test
adc
pminsw
add
loope
mov
xor
xchg
jp
pop
push
push
pop
pop
jecxz
and
popa
pop
dec
mov
push
xchg
or
idivb
xchg
push
sbb
mov
cs
fists
add
push
sbb
mov
sbb
mov
sub
imul
rclb
pop
scas
repz
sbb
inc
clc
fnsave
jae
lcall
add
shl
lcall
mov
mov
movl
add
lea
push
or
mov
popa
ret
jo
pop
inc
not
lea
adc
test
test
ljmp
ret
sbb
les
dec
mov
dec
sub
push
test
jmp
das
cmp
nop
pop
add
xor
xor
sub
test
mov
and
inc
add
cmovne
cmc
push
pop
jns
mov
jns
js
push
fisubrl
xchg
pop
aad
test
mov
add
insb
sub
or
sub
sub
sti
loope
ret
sbb
push
jp
jmp
into
testl
xchg
and
mov
int3
faddl
out
adc
adc
mov
or
ss
mov
jne
sub
movsb
arpl
loopne
jnp
mov
icebp
pop
add
lea
inc
clc
and
jle
lock
sbb
mov
mov
and
fdivs
sbb
jge
popf
idivl
mov
dec
xchg
cmp
daa
pop
cli
shll
ror
sti
pop
and
sti
test
ja
add
dec
inc
xchg
jne
aam
jge
sub
and
jbe
inc
jno
lahf
jns
nop
or
divb
xchg
or
xorb
das
push
pushf
add
pop
sub
pusha
sub
out
push
mov
mov
jns,pn
mov
jl
pop
or
lea
test
clc
xchg
addr16
les
mov
icebp
outsl
test
dec
xchg
adc
dec
movsl
cld
dec
out
pop
add
mov
push
adc
test
das
and
and
cwtl
add
rcl
add
out
sub
dec
mov
js
inc
cmp
outsl
in
push
adc
mov
push
js
daa
stos
xchg
mov
mov
cmp
jg
pop
repnz
aad
fs
sub
xchg
jo
verw
mov
cmpsl
in
add
sbb
test
dec
push
lret
std
gs
cmp
mov
dec
push
adc
mov
and
aas
push
popa
dec
jle
sbb
adc
or
mov
mov
popf
loop
inc
inc
std
mov
jp
sub
or
xlat
sub
mov
jg
cmpsl
loop
inc
and
cli
into
push
push
shll
adc
xchg
pop
daa
in
dec
test
and
sbb
cmp
enter
jp
pop
sbb
jge
aaa
stc
loop
loop
jecxz
mov
lret
xchg
outsl
aaa
dec
xor
pop
icebp
jnp
inc
jmp
out
mov
xor
mov
into
xor
mov
in
fisttpl
jo
movsb
xchg
xchg
push
inc
sub
rol
xor
enter
add
cmc
aad
popf
outsl
mov
int3
xchg
cmc
inc
push
mov
jno
inc
pop
inc
jne
inc
push
pop
xchg
or
and
pop
cld
jg
shlb
inc
les
cmp
ret
clc
loope
push
jmp
pusha
inc
fstpl
fistps
movsl
pop
pop
pop
dec
jnp
and
mov
imul
sbb
int3
enter
in
inc
iret
inc
dec
adc
fnstcw
jecxz
mov
pop
mov
aam
and
dec
jle
lods
fstl
add
and
push
xlat
movsb
pop
daa
pop
arpl
idivb
js
dec
xchg
jbe
add
mov
in
adc
sbb
and
add
xor
push
mov
std
pop
mov
mov
pop
inc
ds
int
dec
mov
mov
ja
push
icebp
mov
push
mov
mov
mov
int3
loop
out
xor
dec
xlat
enter
clc
cmc
xchg
call
xchg
mov
lock
mov
pop
cltd
dec
xchg
pop
dec
add
sub
mov
dec
pusha
movsb
lods
inc
aam
insb
hlt
test
fidivl
cs
fidivl
out
jne
mov
dec
int
push
xor
jmp
xchg
into
lahf
pop
mov
add
xchg
es
outsb
call
add
mov
adc
fdivs
lods
jg
enter
xor
cmp
push
jle
testl
or
cmp
mov
ret
jmp
bound
inc
sub
scas
mov
jae
int3
enter
stos
cmp
stc
fsubs
pushf
sti
mov
cld
das
cld
decl
xor
daa
cmpsb
or
sub
test
mov
adc
sbb
dec
xchg
xchg
sub
jns
pop
xchg
sub
ffree
out
ss
cwtl
jo
mov
popa
addr16
xchg
pop
mov
push
mov
sbb
in
lret
inc
add
push
xchg
std
loop
cmpsb
push
cmpsb
lods
jg
xchg
push
in
in
dec
mov
adc
mov
pop
mov
pop
cs
mov
cmp
inc
pop
jg
sub
cmp
push
js
outsl
fsubr
sub
mov
insb
das
inc
ljmp
repnz
scas
repz
jne
fldcw
xor
daa
ds
pushf
cltd
mov
fcompl
cmp
and
dec
addl
ret
cmp
mov
test
inc
xchg
mov
pop
lods
int3
jp
xor
sub
dec
mov
mov
pop
add
sti
test
push
mov
mov
sbbb
cmp
cmpsb
stos
xchg
dec
fisttps
jg
jp
jne
cmp
xchg
dec
repnz
mov
push
mov
daa
inc
lods
jbe
imul
mov
push
push
mov
and
add
mov
mov
outsb
or
push
dec
mov
iret
xor
imul
loop
leave
xor
imul
out
lds
cmp
dec
dec
push
icebp
icebp
nop
sbb
jns
cmc
imul
into
dec
cmpsb
mov
jae
inc
mov
xchg
movsb
sti
sub
or
jns
shll
int3
test
or
ljmp
pop
cmp
pop
push
pop
and
adc
daa
mov
mov
mov
jp
shlb
jb
out
or
cmp
cltd
add
sub
std
xlat
mov
push
cmpsl
addb
leave
fstps
push
inc
lea
pop
leave
rcrl
or
jmp
mov
cwtl
arpl
jae
add
or
mov
xchg
inc
xchg
mov
push
cwtl
mov
movsb
mov
je
hlt
mov
es
dec
mov
mov
outsb
movaps
dec
test
add
loop
add
stos
mov
out
mov
pushf
out
and
arpl
xchg
mov
rcrl
jo
push
push
add
insl
imul
ds
or
dec
shl
cmp
adc
ret
out
stc
mov
pop
rorl
pop
testb
jbe,pn
push
jnp
adc
jo
add
test
push
dec
jmp
movsl
mov
rcr
in
or
ficoms
mov
push
cmp
dec
aaa
push
arpl
rcll
mov
gs
jae
cmpsl
mov
adc
mov
cmp
pop
cs
cmp
mov
pop
popf
adc
repz
js
xor
ja
inc
sbb
pushf
add
flds
or
mov
test
cmp
inc
stos
mov
adc
xor
ds
data16
leave
pop
stos
sbb
out
push
cs
mov
imul
out
movd
idivl
fs
cmc
movsl
jnp
arpl
sbb
ljmp
mov
xchg
adc
les
ds
mov
dec
in
add
addr16
xor
movsb
mov
cmp
shll
inc
pop
or
mov
add
xchg
xchg
sub
add
push
fstps
and
push
add
repz
ja
adc
pop
and
shll
addr16
shrb
push
arpl
push
inc
pushf
iret
push
mov
inc
inc
enter
test
inc
out
cmp
jno
in
sti
inc
fiaddl
test
lea
or
dec
lcall
pushf
scas
adc
sbb
sti
and
roll
mov
push
mov
adcl
adc
pop
pop
push
dec
pop
cmp
pop
movsl
pushf
js
into
test
add
sbb
jne
jp
pop
xor
ja
in
mov
mov
xchg
insl
test
rolb
mov
add
add
mov
pop
inc
or
orl
add
push
xor
lret
imul
and
pop
xor
mov
xor
mov
jle
insb
aam
dec
aas
adc
and
pop
mov
test
movsl
cs
pop
daa
cmp
mov
mov
fistpll
sub
cwtl
jne
es
sub
pop
shll
rorb
idivb
pop
test
sbb
sub
mov
scas
inc
and
pop
mov
outsl
adc
scas
mov
sbb
rorw
pop
arpl
jae
leave
push
mov
test
shlb
lods
push
xchg
jb
mov
push
loop
and
mov
dec
outsb
push
mov
movsb
push
rcl
cmp
jns
jns
jl
pop
mov
or
jnp
movsl
pushf
mov
or
ja
cwtl
adc
mov
push
mov
and
and
jnp
sbb
mov
out
adc
dec
pop
lea
sbb
cmp
jno
mov
cmpsl
xchg
mov
in
or
sub
push
xchg
mov
daa
mov
pop
fiadds
inc
adc
ds
testl
cmp
scas
pop
test
jo
nop
jp
push
bound
xor
aaa
lcall
pop
mov
adc
inc
scas
shr
adc
pop
cli
ds
jae
pop
outsb
mov
cmp
test
ja
mov
ljmp
jno
stos
cmp
stc
adc
lret
into
fwait
ds
adc
and
faddl
or
push
roll
fwait
imul
inc
cli
lea
test
shll
stc
sbb
mov
xor
xor
roll
dec
test
rorl
mov
shrb
lcall
stos
mov
inc
mov
cmp
xchg
outsl
adc
lcall
inc
jb
push
or
adc
xor
int
mov
movsl
add
mov
mov
inc
inc
pop
dec
enter
js
aam
imul
ficoml
add
hlt
bnd
sub
or
inc
daa
push
mov
aas
push
mov
ds
adc
leave
test
stos
imul
pusha
arpl
dec
pop
add
fwait
sbb
xorb
mov
or
mov
gs
mov
shrl
sbb
ret
test
adc
xor
cli
or
pop
fldenv
mov
jg
xchg
fisubs
aas
cmc
sar
outsl
scas
mov
frstor
sahf
ret
jbe
xlat
sti
nop
sahf
push
sub
aas
sti
pusha
mov
dec
add
movsb
pop
idivb
mov
loopne
fsubl
movq
test
jl
cmpsb
inc
jnp
mov
xlat
sub
and
stos
repz
adc
pop
iret
sbb
jne
rolb
pusha
dec
push
ja
and
lret
pushl
xor
and
loop
inc
mov
xchg
push
mov
pusha
mov
rorl
mov
pop
mov
scas
mov
mov
fbstp
mov
dec
orl
xchg
out
or
nop
inc
pop
push
enter
pop
outsb
movsb
jmp
sub
mov
mov
test
adc
arpl
call
mov
push
add
int3
pop
pop
adc
mov
cmc
xor
popa
add
lods
cli
push
lahf
fsubl
and
lea
inc
jle
push
pushl
xor
adc
xchg
aam
sbb
lcall
pop
ljmp
jne
lret
jle
std
and
jno
mov
int
pop
jbe
inc
xor
push
es
cmp
and
push
mov
push
data16
jbe
jnp
jnp
ds
shlb
pushf
lcall
mov
xchg
dec
pop
test
dec
je
scas
fwait
iret
testl
and
es
rcll
jbe
and
pop
or
das
dec
or
cmp
movsl
dec
push
jne
shll
nop
xchg
aas
dec
rcrb
sahf
fisubrs
jo
adc
out
add
fucomp
mov
pop
es
adc
jecxz
jecxz
hlt
pop
adc
cli
push
mov
ds
jl
jns
jg
fildl
lock
fwait
mov
jmp
dec
sub
pop
ds
out
sub
push
out
fcmovne
xlat
sti
fstpt
nop
ja
pop
push
cwtl
nop
jg
es
jg
mov
lds
push
pop
scas
sahf
xchg
std
pop
pop
push
arpl
or
cmp
dec
dec
ja
lret
mov
xchg
lods
stos
cld
stos
or
pop
std
jo
mov
pop
pop
iret
jae
mov
data16
das
sarl
cltd
sbb
pop
dec
dec
daa
jle
jl
add
lahf
cltd
insb
movsl
push
dec
pminsw
cmp
cli
dec
adc
jne
rcrl
add
in
xor
pop
pusha
aas
xor
ds
adc
mov
mov
jns
aas
stos
movsl
repnz
xor
push
mov
sbb
push
gs
add
in
test
pop
or
cmp
out
js
insb
jae
or
lea
cltd
gs
sbb
mov
aaa
add
cmp
xchg
arpl
jl
add
out
mull
cmp
cmp
das
inc
jne
pop
fstps
popf
loopne
aad
xor
xor
stos
roll
xchg
xchg
jle
dec
adc
push
int
testb
xor
inc
mov
mov
gs
push
push
pusha
xor
stc
mov
roll
cmp
mov
sub
mov
sbb
gs
out
mov
jge
repnz
xchg
push
or
movsl
sbb
rorb
or
cli
sbb
pop
jl
add
lds
sub
incb
mov
test
lret
mov
cltd
push
add
ja
sbbb
pop
cmp
mov
inc
aas
out
loope
pop
jmp
jns
sbb
je
xchg
push
lcall
xor
pusha
lcall
icebp
in
push
xchg
mov
push
outsb
enter
adc
hlt
cwtl
adc
mov
adc
mov
adc
adc
imul
push
js
vmovsd
pop
mov
mov
gs
fsubrs
imul
shlb
pop
lods
cli
push
sub
and
mov
mov
vmovss
insl
mov
shlb
adc
insl
hlt
mov
gs
mov
scas
ret
push
inc
mov
mov
jmp
mov
pushf
add
add
movb
movsl
mov
cs
xlat
imul
inc
pop
mov
xchg
lss
loope
daa
cmp
push
insb
mov
inc
mov
mov
mov
or
jge
sbb
lret
mov
lret
add
dec
aas
lcall
inc
es
scas
ljmp
fisubs
mov
jg
out
notb
fldt
int
mov
jae
mov
adc
push
ss
add
dec
and
push
jecxz
xor
imul
and
jl
rcrb
aad
ret
mov
dec
test
fcoml
cmp
and
and
mov
aas
lea
fbstp
arpl
repnz
aas
and
ret
sub
or
jne
into
shlb
es
ja
lahf
pop
sbb
aad
inc
mov
fmul
pushw
push
push
jg
stc
scas
popf
imul
inc
dec
dec
push
or
je
enter
icebp
cmp
scas
xlat
pop
mov
inc
gs
cwtl
sbb
incl
cwtl
push
or
bound
and
cltd
fwait
inc
or
dec
mov
es
cmpsb
pop
xchg
or
sbb
xor
xchg
fiaddl
rorb
sub
push
aaa
push
adc
lahf
shr
xor
adc
fdivrl
push
rcll
push
hlt
clc
pop
inc
pop
dec
jg
cmpsb
mov
pop
call
dec
nop
cmp
cmpsl
mov
shrl
mov
cmp
and
lret
or
jge
popa
sti
ja
jecxz
adc
fisubl
or
adc
cmp
sbb
pop
inc
pop
push
fstps
loopne
loop
dec
popf
mov
adc
out
sbb
in
inc
mov
fldenv
pop
jae
enter
push
pop
sbb
fldt
inc
cmc
inc
gs
or
or
mov
je
les
imul
xchg
into
movsl
movsb
or
ret
mov
cvtdq2ps
cmp
int3
push
sbbb
subb
add
mov
adc
data16
in
jnp
jb
cmp
cmp
lods
push
pop
cmc
jp
nop
or
out
pop
cli
gs
pop
daa
adc
idivl
xor
mov
inc
adc
into
clc
pushf
dec
stos
add
mov
cmpsb
out
jnp
sub
and
mov
inc
mov
insl
jle
dec
loope
test
fisubrs
dec
call
stc
jecxz
repz
push
pusha
cwtl
cmp
cld
sbb
pop
xchg
push
jo
cmpsl
pop
sub
aaa
cmp
add
mov
xchg
repz
push
and
sbb
mov
sub
jmp
and
lahf
dec
or
dec
push
outsb
clc
setg
shlb
aad
cmpsl
daa
cmpsb
mov
inc
pop
std
jl
and
pusha
mov
addr16
xchg
mov
jle
aaa
mov
add
pop
xlat
cmp
dec
xor
pop
fldl
adc
jns
popf
cmp
or
test
adc
xor
push
dec
insl
cmp
call
pop
xchg
je
cmp
xchg
and
int3
loope
insb
pop
addr16
bound
mov
push
inc
sti
movsl
add
in
ret
lcall
mov
call
clc
and
adc
xor
sahf
cltd
test
mov
imul
mov
xor
lea
or
push
sbb
xor
repz
adc
jg
xchg
add
std
in
pop
xor
insl
mov
shl
mov
lods
and
or
sbb
mov
adc
data16
lret
push
es
cmp
adc
popa
xor
lahf
push
push
ficoms
jbe
gs
inc
xchg
mov
mov
push
jmp
testb
std
jae
js
jnp
or
clc
bound
pusha
ds
les
inc
orl
and
xor
jo
movsb
push
add
sbb
pop
cltd
stos
mov
fldcw
adc
popa
imul
mov
jp
mov
negl
gs
sbb
and
pop
es
shrb
inc
and
xchg
int3
stc
repz
das
inc
mov
cmp
rcrl
inc
push
test
dec
dec
cmpsl
and
arpl
sbb
dec
jecxz
jnp
push
dec
dec
cmp
or
mov
push
dec
fwait
pop
repnz
ret
xor
sub
mov
xor
dec
ja
inc
dec
xchg
adc
dec
icebp
inc
mov
cmp
outsb
sbb
bound
shrb
jns
lds
inc
jno
pop
push
repnz
jae
sub
sub
mov
xchg
xchg
call
shlb
xor
inc
adc
push
add
ror
ss
sub
cmpb
lret
testl
adc
sbbb
stc
loope
out
or
xchg
dec
hlt
ja
in
je
or
xchg
cmpsl
movsl
or
adc
mov
adc
xchg
ljmp
cmp
sub
xor
xchg
je
icebp
ret
fiaddl
stos
int3
aas
inc
add
inc
fs
pop
inc
jb
xchg
and
mov
rcrl
mov
test
sub
push
mov
jb
imul
sbb
and
arpl
aad
and
add
jp
xor
xchg
adc
push
xchg
daa
xor
pop
in
imul
and
divl
mov
mov
pop
cmp
jbe
and
fidivrs
inc
xor
shll
hlt
out
pop
inc
pop
dec
or
shrb
lahf
inc
into
test
jne
cmp
sub
fdivrs
sbb
insl
inc
xacquire
gs
xor
and
pusha
adc
das
wbinvd
arpl
cmp
pop
jp
arpl
mov
dec
cmp
mov
movsl
xlat
pop
cld
inc
loop
mov
or
cmpsb
cmp
arpl
stos
scas
sbb
testb
mov
push
imul
xor
mov
jo
jg
mov
xor
aaa
xor
adcb
fdivs
icebp
das
ficomps
pop
loope
cmp
lds
iret
iret
andb
jl
push
pop
mull
out
shrb
data16
xchg
cmc
dec
dec
aad
push
shll
dec
and
nop
gs
xor
jge
jp
sbb
rclb
xchg
stos
aam
inc
out
lds
movsb
scas
adc
jns
xor
push
jae
mov
inc
pop
addr16
cli
or
subl
dec
xor
xor
stc
popa
add
jp
mov
cmp
rcll
or
lods
loop
cmpsl
xchg
out
push
dec
and
pop
fldenv
inc
in
cmc
push
xorb
sti
pop
addr16
out
jnp
lock
dec
cltd
loopne
fdivrl
aaa
repnz
andb
leave
loope
dec
push
cmpl
test
xor
test
mov
xor
sbb
dec
lret
rclb
mov
mov
and
iret
cmp
adc
mov
repz
ds
add
in
xlat
cltd
and
fcoml
das
mov
jl
adc
out
imul
adc
insl
stos
or
push
lds
jecxz,pt
push
xchg
push
jge
ljmp
mov
dec
mulb
adc
or
jle
push
aad
dec
loope
xchg
jmp
and
es
ljmp
dec
cmp
jp
nop
and
into
fnstsw
mov
les
sbb
xor
test
cmp
icebp
jo
enter
xchg
sti
shrl
or
lods
cwtl
mov
out
sub
fsubp
out
pusha
sti
insb
insl
test
cwtl
pusha
enter
jp
jle
aaa
sub
and
enter
add
loop,pt
sub
inc
rcrb
adc
testl
outsl
lea
dec
out
xchg
xchg
and
mov
or
mov
test
jo
pop
rcrl
add
cltd
enter
adc
inc
addr16
dec
mov
nop
ds
sbb
sbb
data16
and
pop
test
out
jbe
mov
fsubs
and
idivl
std
sar
call
mov
or
sub
ds
jno
scas
jo
or
movsb
pop
xor
movsl
ficoml
test
pop
push
aas
adc
rcl
cmc
xchg
rolb
ss
pushl
jae
adc
sbb
gs
jae
or
xchg
jne
into
movb
cli
push
out
jne
xchg
test
pusha
push
add
xlat
add
sahf
cmpsl
imul
cs
mov
jge
mov
push
dec
cmp
jb
pop
call
push
dec
ja
fbld
fisttpl
stos
jge
and
mov
jo
jg
in
xchg
pop
hlt
stc
popa
mov
lea
dec
adc
cltd
mov
mov
int
lret
test
lock
and
daa
sbb
adc
mov
outsl
and
aas
dec
dec
push
popa
xor
test
out
jle
mov
fstl
sahf
pop
mov
or
jecxz
inc
mov
jb
testl
mov
push
adc
outsl
mov
mov
insl
mov
addr16
cwtl
enter
xor
jge
push
pushl
aas
mov
push
jge
fwait
in
and
je
jmp
adc
adc
orb
push
stos
lret
enter
push
xor
xor
cmp
xchg
lret
repnz
pop
cmp
cli
imul
xor
fidivl
int3
mov
ljmp
pushf
mov
and
push
aaa
sbb
data16
loopne
fs
mov
pop
push
lret
dec
xchg
outsb
or
inc
repnz
dec
push
pop
mov
dec
and
jmp
or
fnstsw
push
in
xor
dec
mov
sub
pop
inc
stc
stos
out
xor
int
pop
cmp
insl
and
mov
inc
mov
loope
dec
jg
movsl
pop
gs
xchg
sub
jl
sub
nop
jg
das
xchg
cwtl
push
xchg
lret
stos
or
movsl
pusha
std
in
xor
xchg
movsl
cmp
adc
bound
mov
xor
orl
inc
cmp
in
and
jp
movsl
sbb
xor
ds
out
mov
in
insl
cmp
push
add
inc
lds
shlb
add
or
stc
mov
dec
cs
sti
and
fldenv
or
dec
data16
pop
sub
mov
enter
rorl
rorl
out
cmp
mov
test
dec
add
out
xor
xchg
mov
addr16
out
aam
cmp
clc
std
inc
inc
sbb
lds
ret
es
leave
addr16
movsl
and
repz
je
or
jns
fs
loop
repz
mov
pop
pop
es
pop
out
mov
mov
and
push
enter
xchg
sbb
insl
xor
xor
cltd
stos
scas
gs
lret
insb
icebp
aad
enter
lds
xor
mov
mov
aad
in
das
imul
lahf
insb
adc
orl
xchg
test
xchg
jne
ss
dec
and
add
das
outsl
xlat
repnz
cmpl
subl
pop
inc
pop
and
pop
xchg
ss
or
sti
adc
mov
sub
xor
je
lret
jg
sub
aaa
cmp
rclb
movsl
xor
dec
pop
inc
xor
loopne
push
adc
mov
scas
in
ret
mov
push
ret
and
jnp
adc
pop
dec
mov
cmp
adc
add
xor
push
mov
test
inc
subl
mov
cmp
mov
inc
xchg
mov
pop
push
or
loope
in
xchg
xchg
adc
cltd
aam
push
js
mov
test
jbe
adc
insl
icebp
in
icebp
mov
push
add
cmp
clc
jmp
mov
mov
mov
dec
cmp
ret
mov
xchg
mov
xlat
mov
stos
xor
mov
pop
adc
push
mov
pshufw
and
mov
cmc
mov
cld
repnz
or
ljmp
inc
sbb
cmpsl
mov
xor
mov
xchg
stos
lea
enter
pop
jmp
cld
das
ja
inc
sbb
dec
pop
ret
scas
in
cmp
push
std
enter
lret
jo
jle
ja
inc
iret
pushf
xchg
test
and
les
pop
pushf
rolb
jnp
mov
lods
cmpsl
push
push
pushf
sbb
mov
pop
sti
xor
fstps
xchg
fistpll
repnz
xchg
jne
test
cltd
test
testb
and
ja
lcall
lds
jae
nop
mov
mov
pop
lcall
dec
push
xor
add
push
dec
ret
push
xchg
push
in
mov
fucomip
sub
and
mov
fs
pop
jo
out
or
xchg
sub
and
iret
sub
push
stos
mov
push
jnp
mov
out
or
push
mov
push
cmpsb
pop
push
jl
rorb
pop
pop
pushl
jbe
pop
movsl
mov
ss
pop
push
add
pushf
addr16
mov
pop
pop
or
es
add
stos
icebp
cmp
outsb
pop
sbb
scas
test
push
repz
adc
cli
cmpsl
and
sti
xchg
insb
jp
int
sub
sub
xor
aas
cwtl
jle
adc
adc
fisubrs
push
xchg
push
in
mov
inc
jae
cmp
sahf
aas
sbb
add
icebp
ret
icebp
shlb
push
push
out
ja
cmpsb
outsl
push
inc
popf
mov
mov
sub
or
push
faddl
lret
inc
add
iret
push
jno
or
mov
repnz
add
jle
shlb
inc
pop
incl
pusha
in
rcl
sbb
les
push
sti
mov
scas
mov
inc
movsl
add
jnp
subb
pop
insb
mov
ret
and
add
fisttps
dec
mov
shlb
adcl
jo
sahf
aas
push
mov
pop
lret
add
xchg
jae
daa
pop
icebp
and
hlt
mov
pusha
cmp
bound
loopne
addl
mov
xchg
xlat
pop
out
rorl
int3
mov
mov
movsb
in
insl
sbb
loop
jne
in
sbb
cmpsl
jne
pop
ljmp
call
inc
jno
mov
test
cmpb
icebp
ror
data16
fs
sub
pushf
leave
dec
mov
cmp
cs
push
mov
mov
jmp
stos
aad
leave
push
pop
lret
ds
movsb
jmp
aad
xchg
mov
sbbl
sarl
stc
jle
dec
pop
addr16
jp
xchg
pusha
ret
inc
adc
lret
pushf
jp
testb
test
add
aad
jle
mov
mov
dec
pop
jb
cwtl
jnp
or
adc
insl
dec
sub
cmpsl
popf
jg
out
arpl
insb
mov
loop
cmp
leave
add
es
outsb
es
push
outsb
push
mov
jmp
sbb
push
imul
pop
pop
or
push
mov
dec
sbb
adc
mov
sahf
fnstsw
jns
pop
push
xor
mov
sub
push
jecxz
sbb
lods
dec
stos
jmp
xor
mov
push
aaa
mov
mov
xor
mov
xchg
lods
mov
mov
mull
lods
arpl
pusha
inc
ds
jae
shlb
test
in
jmp
add
cmp
lods
enter
xor
dec
cs
pop
bound
ja
jge
ret
pop
negb
sub
sub
cmp
pop
out
movb
sar
aaa
inc
xchg
dec
popf
les
jo
fsubl
stos
int3
jg
mov
jmp
adc
or
lcall
daa
jp
adc
pop
cmp
add
sbb
out
rclb
mov
lods
push
jnp
xchg
pop
or
xchg
test
add
or
popa
jle
testl
pop
pop
jns
notl
imul
lds
addr16
cmp
mov
sbb
mov
mov
fs
xchg
mov
leave
repz
fdivl
cmp
push
xor
or
out
enter
jle
insl
mov
lods
inc
cmpb
ftst
lret
cwtl
push
adc
push
aam
fs
adc
push
xor
lea
loope
insb
and
test
cmc
arpl
fwait
fwait
sti
cmp
clc
mov
adc
fwait
or
shlb
popf
cmp
inc
dec
inc
push
mov
push
stos
jg
mov
test
sarb
stos
jmp
xor
pop
sarb
inc
push
xor
les
xor
jge
in
push
xchg
add
ss
popf
push
rcr
lcall
or
movsb
adc
dec
mov
mov
std
jl
movsl
pusha
ss
insb
push
movsl
inc
sti
mov
sti
dec
and
cmp
pop
sbb
inc
out
mov
je
sbb
out
cmp
jnp
negl
fwait
int3
data16
fyl2xp1
gs
inc
adc
push
lret
pop
bound
add
cmpsl
cwtl
fdivr
xchg
mov
incb
js
jp
lea
lret
pop
inc
les
push
xorl
dec
ret
push
into
dec
xchg
rorl
pop
test
sbb
movsl
cwtl
and
mov
push
sarl
cmp
inc
pusha
jne
shl
xchg
jle
sarb
inc
mov
daa
sar
and
pop
and
sub
pop
and
fdiv
mov
push
mov
jle
mov
xchg
jno
fcoml
cmp
push
dec
cmpb
decb
sbb
xchg
lods
mov
pop
aas
jp
in
jmp
stos
sbb
or
dec
jp
sahf
adc
das
repnz
sub
adc
sti
push
and
insb
adc
es
sti
std
pop
sbb
dec
jno
stos
jnp
sub
loop
lret
push
cmp
push
cmp
jp
in
cmp
leave
call
call
cmp
jo
cmpsb
scas
cmp
faddl
rcrl
jle
sbb
jne
dec
in
dec
pop
in
sbb
ret
fidivl
in
mov
repz
sbb
inc
jl
icebp
pop
out
mov
xchg
out
mov
rcr
pop
lock
es
xchg
mov
ljmp
mov
pop
loop
dec
insl
in
rclb
and
push
sub
dec
inc
inc
cmp
xchg
addr16
std
mov
outsl
jmp
push
loope
and
inc
sbb
mov
xor
out
or
pop
jne
inc
sub
rolb
xchg
cmp
decl
xorb
ss
test
xchg
mov
dec
pop
sbb
mov
inc
dec
jbe
dec
mov
jg
adcb
js
imul
cmove
popa
cwtl
mov
lea
inc
jo
xchg
mov
pop
mov
in
lret
mov
mov
icebp
ror
ja
pop
sti
sbb
mov
adc
jns
pop
sarb
aam
shlb
or
or
and
je
xor
mov
cmpxchg
cmpsl
gs
fsubl
and
dec
mov
cmpsl
inc
subb
mov
mov
jecxz
add
lea
int
shll
lods
into
jae
pop
xor
pop
in
scas
or
pop
call
inc
das
fsubrp
and
mov
rorl
loopne,pt
sub
jge
mov
mov
outsb
movsb
push
pop
jns
notl
stc
pop
loope
and
fldl
pushf
cmp
in
mov
mov
gs
dec
push
or
cmp
add
lock
loope
mov
jb
mov
js
xor
in
xchg
inc
mov
das
sti
adc
enter
fwait
mov
dec
sub
ja
dec
arpl
repnz
and
push
mov
test
idiv
adc
testl
repz
sub
movsb
mov
flds
in
js
movsb
sbb
xchg
mov
shl
icebp
mov
push
clc
sbb
fs
dec
sbb
pop
test
push
arpl
pop
mov
and
lds
dec
inc
fcoms
fbstp
add
repz
jnp
cmp
xchg
daa
push
jge
dec
xlat
inc
jbe
out
cmpb
iret
inc
mov
xchg
push
imul
push
in
movsb
pop
push
scas
aas
jne
mov
ljmp
loope
xchg
sub
xchg
test
cli
sbb
jno
lahf
pop
push
pop
filds
std
push
sbb
adc
dec
sub
pop
cmpsb
jns
mov
mov
add
mov
push
jae
shlb
jns
hlt
addr16
xchg
adcb
out
jno
or
in
leave
aad
jnp
stos
cmpsl
dec
fildll
out
scas
push
jae
mov
pop
fldt
out
xchg
in
cmc
mov
mov
inc
mov
mov
ds
xorl
push
add
shlb
mov
inc
fmul
into
mov
pop
inc
and
adc
in
js
aas
clc
pop
push
pop
pop
push
nop
dec
dec
std
mov
pop
add
lods
and
shlb
ret
aas
and
lret
fcompl
push
or
aas
sub
mov
in
add
aaa
sbb
push
sti
jb
jmp
xchg
cmp
push
mov
cld
adc
mov
pop
insb
and
lret
incb
or
dec
into
cli
sbb
jecxz
xor
jb
stos
pop
test
mov
repz
mov
xor
push
push
pop
sbb
lock
add
inc
pop
push
insb
mov
test
shll
movsb
ret
aam
pop
inc
add
aaa
cmp
std
and
aas
pop
rcrb
inc
pop
sbb
int3
and
jne
inc
xchg
popf
push
mov
popf
cmp
outsl
pop
js
jae
ds
xor
shrl
cmp
test
and
cmp
pop
xchg
push
adc
jge
arpl
inc
mov
outsl
inc
fsubs
or
lods
filds
into
adc
inc
sub
mov
sub
mov
rcr
cli
add
pop
push
dec
jb
fdivrl
cli
sbb
jns
imul
dec
mov
dec
lret
shrb
loop
mov
lds
mov
loop
pop
jno
insb
jns
es
test
mov
cmp
test
add
lea
pusha
xchg
xor
enter
xchg
out
loop
inc
test
pop
jmp
fidivrs
mov
shrl
jge
sar
xchg
roll
sbb
push
out
movsl
inc
cwtl
test
add
clc
cmpsl
cmp
imul
inc
rolb
inc
sbb
cmp
jno
stos
sar
mov
inc
fwait
lds
test
lds
cmc
or
jnp
ljmp
add
outsb
stos
sbb
je
imul
inc
stos
vcvtss2sd
test
loop
aad
push
icebp
imul
stos
fdivrl
dec
out
mov
add
mov
jbe
sbbl
pop
sbbl
mov
js
lret
fmul
xchg
inc
cmpsb
popa
out
sub
outsb
xor
shll
pop
pop
es
addl
cmp
subb
xchg
inc
jns
ds
sub
jmp
iret
pusha
xor
pop
fs
push
pop
inc
inc
push
xor
repz
xchg
mov
or
add
cltd
addr16
sahf
mov
loope
xlat
xchg
call
or
mov
dec
jno
fimuls
int3
aaa
xchg
repz
add
adc
fs
adc
xor
cwtl
and
scas
subl
mov
add
push
cmc
adc
xchg
mov
lret
ds
imul
dec
jl
or
mov
sbb
cmc
outsb
cmc
jge
mov
sub
jp
cmp
inc
lds
out
stos
and
nop
add
or
or
mov
jae
dec
stos
lea
sbb
inc
adc
or
fs
dec
xchg
dec
repnz
loopne
push
out
ja
lods
js
adc
or
adc
pushf
repz
sahf
sbb
es
mov
mov
cmpsl
in
adcl
jmp
xor
or
cmp
sbb
lods
imul
sbb
aam
inc
test
bound
xchg
mov
add
js
add
es
or
xor
setae
inc
cmp
fstps
sti
pop
jmp
mov
popf
jno
cwtl
mov
sub
jge
jmp
inc
dec
dec
mov
test
jbe
fnstcw
fadds
out
xchg
and
push
out
adcl
pop
sti
adc
jo
cmc
cmc
pop
pop
inc
call
and
push
pop
fisttpl
ja
xchg
repnz
ret
fwait
jbe
xchg
ret
stc
adc
sub
icebp
hlt
and
adc
add
push
sbb
sub
loopne
rcll
inc
jae
xor
jmp
jbe
cwtl
jg
push
out
cmp
insb
movb
mov
sub
jno
movsb
lea
jge
mov
jg
cmpsl
add
ret
push
lret
daa
inc
cmpsb
mov
sbb
lret
pop
pop
arpl
xchg
inc
leave
insl
std
inc
pop
xchg
pop
sub
add
pushf
fs
sti
dec
jno
cmp
scas
jo
movsb
insl
push
pop
je
sub
jmp
or
ja
jno
mov
stc
add
pushf
dec
loop
push
mov
dec
leave
and
sub
pop
jnp
xor
sbb
push
jnp
cli
pop
sbbb
xchg
mov
scas
fmuls
pop
lret
rorl
in
daa
pop
test
adc
int3
mov
push
xchg
shlb
xchg
push
cmp
jp
cltd
filds
inc
and
mov
mov
aad
imul
add
dec
dec
imul
cmp
pop
or
jns
mov
or
sub
add
inc
js
pop
pop
or
sbb
cld
push
rcrb
js
add
push
dec
adc
cli
pop
xchg
js
cmp
sub
aas
sub
jmp
adc
call
lods
jno
jge
pop
dec
aad
mov
push
mov
and
jp
aas
jbe
es
into
push
fcomi
test
lods
int3
mov
push
ja
addb
test
lcall
or
mov
mov
test
jle
je
pop
rolb
jge
sbb
mov
jg
data16
lea
cmp
jg
adc
mov
popa
pop
divl
aad
fistps
sbb
movsl
jno
pop
push
xor
data16
xor
sub
sahf
jg
shrl
sub
jno
jnp
mov
pusha
mov
pop
dec
jmp
ror
cwtl
ss
iret
sub
cmc
xchg
cmp
cmc
cmp
ss
jb
push
push
daa
call
and
out
les
push
xor
loop
push
mov
add
jne
ljmp
inc
insl
stos
xchg
neg
xor
fs
jg
test
sti
jnp
in
and
sbb
push
pop
mov
jne
and
pop
or
mov
inc
adc
xchg
jbe
popa
mov
or
lcall
out
mov
jp
adc
mov
imul
aaa
xchg
add
lret
cmpsl
mov
imul
data16
dec
mov
pusha
jo
push
mov
out
inc
js
dec
adc
addr16
les
jne
jb
cmpsl
jle
stos
jne
ret
fs
outsb
xchg
mov
int3
inc
daa
sbb
add
popa
pushf
lret
jb
pop
gs
and
dec
or
test
pop
das
sub
dec
stos
and
sbb
aad
adc
dec
cmp
adc
fs
outsb
jns
aad
push
dec
repz
test
fbld
hlt
jb
inc
shrl
mov
mov
int
ror
lods
jnp
jnp
mov
adc
jae
cs
pop
jne
stos
out
ret
out
loop
stc
pop
movsb
decl
mov
sbb
mov
adc
enter
cltd
outsl
mov
ds
out
xchg
enter
inc
add
in
addl
jbe
add
push
nop
imul
xor
xor
push
movl
loopne
inc
and
dec
cmp
stos
addr16
fldpi
dec
lret
ja
insb
xchg
cmp
mov
jbe
movups
xor
mov
jmp
movl
cmc
cmp
insb
das
xchg
clc
adc
dec
aas
cltd
lods
mov
jnp
add
aaa
psraw
mov
stc
mov
cmpsb
outsl
jnp
push
cmc
sbb
scas
xor
mov
xor
pop
mov
fildll
cs
cmp
sub
ljmp
out
popf
fcmovb
pop
imul
push
mov
adc
mov
aad
sarb
pushl
icebp
mov
jle
push
or
loope
sar
and
push
repnz
pop
jae
insl
xchg
fwait
jbe,pt
fisubrs
jmp
mov
push
popa
or
movsb
xchg
into
push
add
movsb
je
stos
sbb
mov
adc
fcoms
testl
xor
fstl
pop
xor
aam
pop
cld
push
mov
andb
mov
xchg
jmp
xchg
mov
xchg
loop
clc
adc
mov
add
and
loope
cmpsl
and
ss
jns
xchg
cmpsb
fstpt
sub
scas
jmp
pop
and
dec
and
mov
dec
scas
mov
xlat
cmp
sub
push
pop
push
add
mov
hlt
mov
aad
mov
xchg
lds
and
fsubrs
popf
setg
mov
mov
jae
cwtl
cmp
pusha
dec
mov
add
push
xchg
adc
shl
ja
repz
neg
hlt
xchg
outsl
mov
cltd
dec
xchg
xor
mov
cltd
add
rclb
push
and
or
jp
jmp
and
xchg
and
mov
mov
in
sbb
dec
and
test
or
adc
cmp
fs
or
popf
pusha
push
rclb
dec
add
jp
jle
inc
stos
jp
dec
mov
push
inc
hlt
mov
sub
mov
xchg
xor
lds
cmpsl
leave
lea
test
dec
mov
lea
mov
xor
fcompl
jmp
jge
popf
jge
pusha
iret
mov
int
stos
pop
xlat
push
out
mov
lea
mov
cmp
cmp
adc
dec
pop
adcl
xchg
sbb
mov
insb
enter
mov
xor
fcomip
ds
dec
adc
gs
or
sbb
cmp
fcmovu
mov
jae
mov
ljmp
inc
aaa
inc
inc
inc
insl
push
shll
xchg
mov
data16
je
mov
fsubp
int3
mov
out
mov
pushl
test
pop
roll
mov
lea
xchg
std
add
sub
cmp
dec
in
mov
inc
scas
xchg
inc
sbb
cmpsb
in
leave
xchg
insb
mov
test
data16
cmc
push
cmp
xor
aam
sti
adc
pop
inc
mov
lods
sub
adc
iret
cs
movsl
popa
shlb
jnp
jbe
cli
insb
fmuls
jb
in
ljmp
xchg
gs
inc
jl
pop
mov
push
dec
or
push
sarl
bound
movsb
les
push
or
in
negb
lret
inc
pop
jg
fsubrp
pusha
mov
add
or
and
pop
test
mov
pop
out
test
in
dec
sbb
push
push
inc
cs
jmp
mov
push
pop
adc
aam
dec
dec
lahf
jmp
xor
arpl
inc
hlt
pop
xchg
je
ret
ret
dec
and
in
movsb
stc
jl
or
inc
adc
lahf
in
popf
jecxz
cmp
inc
aam
mov
cmc
jnp
inc
mov
loope
and
add
push
stos
mov
loopne
pop
js
pop
cld
jns
jnp
aaa
pusha
lds
loopne
or
jb
mov
orl
xor
mov
sub
mov
inc
sub
pop
test
stos
ficoml
xchg
stos
lcall
loopne
push
push
les
popf
pop
js
push
pop
fs
cwtl
scas
jp
or
jae
sub
push
sahf
fucom
jg
mov
xchg
insl
push
pop
sahf
in
fs
inc
sahf
xor
daa
inc
push
inc
and
mov
jns
gs
adc
cmpsl
pop
dec
jbe
xor
jecxz
jo
andl
scas
mov
jo
dec
inc
xchg
sbb
jle
addr16
jl
movsl
jo
adc
mov
push
mov
negl
dec
popf
ss
xchg
xor
lcall
xchg
je
sub
subl
bound
out
pop
int
pop
dec
xchg
adc
push
insl
in
mov
out
mov
xchg
outsb
and
shll
rclb
ret
mov
sub
sarl
jmp
and
dec
cmp
pop
fnstsw
pop
stos
push
into
cli
dec
jecxz
and
push
jmp
sti
sahf
loope
test
dec
stos
stos
cltd
lods
ja
add
shll
cs
ja
cmpsl
stc
cltd
ret
lahf
aaa
add
or
dec
insl
mov
loop
adc
leave
out
jl
aaa
xchg
mov
das
and
lock
mov
xchg
xlat
jle
movsl
add
push
or
and
rol
and
mov
test
pop
ds
lods
gs
dec
mov
jp
mov
pop
pop
sub
je
aaa
hlt
push
into
pop
xor
ds
mul
aas
daa
pop
xor
jne
mov
dec
addb
push
adc
roll
jns
inc
pushl
test
outsb
xchg
xchg
imul
lea
mov
imul
sub
mov
add
dec
xchg
sub
adc
or
pop
es
sub
insb
push
fcoml
sbb
adc
iret
repz
cli
or
sub
jl
mov
ss
enter
jno
les
inc
fcmovne
jae
into
test
js
aam
adc
adc
push
not
push
outsb
lahf
cmp
int3
sbb
and
test
fisttpll
push
test
xchg
jecxz
lret
addr16
ss
adc
popa
add
pop
sarl
roll
inc
out
lea
out
jnp
lods
sub
in
data16
ja
mov
out
pop
fnstcw
inc
out
xchg
push
and
arpl
movsl
dec
mov
or
pop
dec
push
cmp
cld
mov
and
or
daa
movsl
fwait
jmp
jmp
mov
sbb
pop
aam
test
inc
aas
test
or
cmp
adc
push
call
into
pusha
and
rcl
mov
lods
out
or
testb
test
sbbb
cmpsl
pushf
out
sti
xchg
arpl
sub
mov
jge
dec
fdiv
mov
pop
fs
push
mov
pop
inc
mov
mov
sbb
into
inc
stos
cltd
outsb
xor
stos
xchg
add
xchg
jnp
sub
les
scas
mov
or
cmp
jge
xchg
out
dec
frstor
push
dec
sarb
ja
mov
loop
sub
pop
sbb
test
cmc
mov
clc
fldl
xor
sbb
pop
daa
pop
test
int3
dec
and
push
stos
rolb
daa
pop
cmp
dec
out
inc
nop
mov
les
andb
and
jmp
jo
lods
mov
dec
push
cwtl
dec
add
les
lds
pop
leave
stc
add
es
stos
pop
dec
xchg
xchg
rcrb
jge
add
lds
pop
out
sbb
adc
cltd
inc
loope
and
xchg
lock
shrb
dec
xor
sub
clc
sub
adc
sbb
mov
dec
sbb
sti
les
xchg
lds
dec
sbb
cmpsb
enter
in
cmpsl
les
lds
ret
pop
dec
mov
jp
cli
subl
imul
test
and
push
inc
pop
mov
cmp
inc
cli
cmp
xlat
pop
dec
insl
adc
cmpsl
mov
pop
xchg
adc
push
sub
out
inc
adc
jecxz
dec
lret
xchg
adc
jno
ljmp
hlt
test
or
jge
mov
jne
dec
xchg
pop
xor
jns
mov
lds
jge
cs
mov
inc
fmul
dec
mov
mov
or
enter
add
aad
icebp
push
dec
xor
pop
xchg
and
aad
ja
sub
in
pop
mov
pop
and
shlb
cmp
cmp
mov
mov
in
cmp
aad
leave
mov
cmp
or
fs
mov
rorl
fsubl
mov
pop
sub
jne
jnp
out
add
pop
inc
sub
pop
dec
dec
cs
pop
dec
das
xor
ja
jecxz
leave
jmp
out
cmp
iret
jecxz
inc
jp
sbb
shrl
aaa
out
aaa
or
cli
pop
inc
je
mov
xchg
mov
stos
aad
xchg
xchg
cmp
in
mov
inc
insb
inc
frstor
fincstp
or
cbtw
sub
jmp
lahf
jmpw
mov
rcr
inc
mov
dec
std
sub
jno
rcrl
jne
das
jl
in
es
xchg
leave
loope
insl
mov
push
cmovne
imull
and
fldcw
mov
dec
popa
mov
jno
jae
push
lods
dec
dec
push
imul
scas
mov
cltd
push
pusha
add
lcall
xchg
push
mov
orl
dec
mov
rolb
fnstenv
jns
int
jns
inc
int3
fs
cli
mov
push
clc
movsl
xchg
or
jl
insb
pop
lds
mov
dec
add
pop
pop
xor
or
dec
inc
fidivrl
je
xchg
test
push
jb
imul
aam
pop
ja
inc
mov
sbb
inc
in
sahf
iret
lea
daa
in
cli
cli
clc
inc
faddl
insb
mov
ret
jno
add
inc
inc
jmp
jne
dec
adc
sarb
flds
shr
or
loop
lcall
shrb
sub
popa
sbb
mov
mov
push
pop
mov
loopne
mov
out
andb
dec
ret
and
test
cmp
mov
rcrl
pop
xor
adc
dec
mov
icebp
je
gs
jmp
lds
sub
movsl
sub
mov
arpl
jnp
arpl
aad
inc
arpl
test
faddl
mov
lahf
dec
mov
ss
mov
fsubr
push
in
add
lret
loopne
add
and
pop
push
pusha
cld
dec
into
aad
inc
cmpsl
and
push
dec
sbb
jg
push
lea
aaa
fcmovu
jo
out
nop
test
xchg
popf
and
inc
imul
and
or
enter
pop
sub
roll
add
cmpsb
and
sub
mov
mov
jecxz
daa
adc
jg
xor
aas
sub
jl
mov
rcrl
xchg
xor
push
lret
adc
rorb
sti
sbb
xor
dec
mov
call
mov
sbb
xchg
paddd
sbb
sarl
gs
dec
stos
lods
gs
dec
cmp
dec
cmp
add
test
cmpsl
movsl
fldl
dec
sbb
iret
pushf
call
xor
dec
sti
pop
sub
mov
outsb
fsubp
pop
dec
repz
out
iret
jne
or
ds
outsb
ret
push
sbb
cmp
dec
gs
pop
cmp
out
jl
test
cmpsb
rcr
xor
sar
xor
mov
std
scas
pop
push
es
and
test
or
xor
imul
and
jmp
pop
jbe
mov
sub
push
cmp
sbb
mov
mov
iret
jns
daa
repz
inc
arpl
pop
and
xor
and
sub
jge
mov
mov
xor
pop
dec
and
inc
and
inc
jl
rorl
sub
jns
lock
pop
adc
mov
mov
mov
stos
jp
inc
ret
leave
add
or
jno
aam
scas
loope
cmp
push
mov
and
and
dec
sub
stos
addl
je
dec
sub
or
push
inc
cmp
push
adc
and
push
jg
sbbb
shll
pop
es
mov
test
xchg
push
pop
sub
sub
push
iret
jo
or
push
inc
repz
insb
xchg
mov
pop
push
jecxz
les
sub
mov
mov
lock
pusha
inc
cwtl
pop
mov
cltd
aaa
lods
mov
jae
mov
xor
mov
daa
jae
inc
addr16
lret
stc
mov
cli
movsl
and
mov
data16
fs
and
dec
add
jmp
push
mov
pusha
adc
sub
inc
inc
dec
sbb
cmp
stc
cmp
test
loop
and
sahf
orb
aam
sbb
loop
pop
cld
call
inc
mov
loop
inc
in
dec
mov
add
xchg
imul
fwait
scas
loope
mov
and
fisubl
enter
test
sub
test
mov
adc
push
test
das
insl
scas
push
aas
cli
push
shlb
add
ret
mov
aas
je
ljmp
lret
aas
loop
lea
outsl
jo
enter
xor
xchg
andb
inc
xor
cmp
js
and
loop
jno
arpl
cmp
faddl
pop
lahf
lahf
nopl
xor
je
push
addr16
es
out
and
add
scas
aam
jbe
add
push
lret
and
stos
pop
out
lds
arpl
sbb
xchg
fwait
jo
in
jl
sti
popf
inc
add
popf
push
je
xchg
push
cmp
dec
jge
out
cmpsl
xchg
mov
mov
cmp
sbb
ret
push
repnz
addr16
push
imul
andb
jne
into
jle
pop
or
mov
rclb
mov
jg
inc
pop
out
mov
leave
test
inc
add
jb
mov
pop
or
mov
add
mov
sbb
cwtl
dec
pop
sahf
dec
sub
jne
mov
dec
je
repnz
or
push
jo
scas
fs
aas
push
mov
ds
pop
xchg
je
es
inc
test
pushf
adc
dec
out
xchg
mov
sub
or
icebp
pop
xor
fiadds
xchg
xchg
cltd
cmp
das
jge
push
jg
mov
push
outsb
aam
insb
dec
xor
inc
lret
leave
cmp
and
mov
lea
add
sub
cld
repz
jns
in
mov
daa
dec
lods
nop
outsb
and
dec
repz
cmp
inc
pop
insl
imul
pop
aad
mov
mov
inc
cmpsb
mov
fs
data16
jp
sahf
outsl
xchg
ret
xchg
dec
dec
fadds
sbb
je
mov
jle
adc
lock
icebp
notb
xor
ds
nop
aaa
dec
adc
push
push
out
in
call
fiaddl
dec
sti
adc
jecxz
es
inc
mov
stos
mov
mov
out
fisubl
xchg
scas
test
jno
movsl
mov
jae
add
and
xchg
mov
sub
in
nop
pop
xor
movb
inc
adc
jmp
push
ror
pop
mov
or
loope
pop
mov
aam
movsl
inc
call
out
or
mov
jo
pop
cmp
lock
mov
jnp
enter
jbe
mov
repnz
int
mov
vpshab
add
mov
in
mov
cmpsb
jg
das
mov
push
add
das
out
out
cmp
cmp
sub
and
push
pusha
or
or
out
adc
pop
repz
pop
xchg
mov
pop
imul
sub
dec
lea
mov
insb
inc
sarl
cmp
inc
mov
pop
xchg
sbb
xchg
cmp
lods
xchg
cmc
pusha
inc
mov
shrl
mov
jmp
mov
inc
outsb
pushf
mov
jb
bound
lods
push
dec
cmp
fs
stos
dec
mov
ss
pop
movsb
pop
rcrl
pop
mov
mov
or
mov
in
fstl
cmp
adc
mov
lock
lea
adc
add
push
add
imulb
push
xor
mov
out
xor
push
adc
xchg
loop
and
nop
mulb
lret
xor
sub
call
mov
pusha
les
loop
adc
ret
jb
inc
loope
outsb
jle
in
lds
push
pop
sbb
aam
mov
push
imul
mov
mov
pop
outsb
adc
add
les
xchg
mov
shrl
mov
not
pop
mov
jno
adcb
sti
jae
fidivrs
pop
inc
popa
out
jnp
in
arpl
stos
xchg
mov
sub
inc
mov
xchg
lcall
pop
and
jb
xchg
frstor
jnp
xor
icebp
or
sub
pop
ss
movsl
jns
add
imul
nop
rorl
lret
mov
fidivl
and
jmp
subb
jl
fnstenv
scas
mov
seta
clc
mov
repnz
sahf
mov
or
loope
mov
ds
movsl
dec
shll
fdivs
pop
dec
mov
vpshaq
shll
ljmp
mov
or
cmp
stc
inc
adc
movsb
add
and
add
in
stos
stos
loop
xor
sbb
add
mov
dec
inc
and
outsl
in
push
cli
adc
mov
sub
mov
rcrb
out
sbb
add
sbbl
shlb
mov
inc
adc
dec
jmp
ds
inc
mov
push
jns
xor
inc
out
orl
in
test
popa
lahf
es
int
mov
xchg
loopne
mov
addl
ja
adc
dec
cmpsb
add
dec
xor
scas
lret
mov
or
pushf
xchg
jle
dec
stos
mov
and
rcll
mov
out
xor
sub
adc
dec
arpl
ljmp
xor
cmp
add
mov
pushf
stos
sub
loope
jns
dec
xor
clc
ret
dec
imul
push
cmp
fists
pushf
or
push
pop
jns
jmp
movl
jo
inc
mov
jl
jl
test
mov
inc
xchg
out
mov
rsqrtps
jne
adc
jno
loope
and
inc
mov
js
and
fs
bound
jg
clc
aam
aam
pop
pop
stc
icebp
mov
xor
mov
xlat
call
loopne
dec
pushf
mov
roll
jo
stos
xor
inc
fwait
out
inc
outsb
mov
sti
insl
xchg
fs
imulb
push
test
mov
xchg
aam
jae
test
in
movsb
iret
mov
inc
icebp
inc
bound
and
daa
cwtl
xchg
push
sahf
or
lods
cwtl
sbb
sub
push
mov
jl
pushf
adc
movsb
pop
call
cld
xchg
inc
movsl
sbb
inc
add
dec
push
sub
add
adc
test
nop
xorl
lret
mov
xchg
mov
in
addr16
dec
pop
and
or
push
repnz
xor
inc
jecxz
das
pop
outsl
and
cmp
popf
mov
lea
flds
cmpsl
test
popa
decl
movsl
pop
and
leave
bound
in
sub
frstor
xchg
movsl
xlat
filds
ds
test
xchg
ds
xor
arpl
je
push
aad
and
adc
test
les
into
imul
sbb
or
cltd
ljmp
aad
out
pop
out
hlt
xlat
leave
and
mull
inc
sbb
sub
push
repz
psubb
xchg
pop
xor
imul
in
iret
pop
adc
mov
scas
xor
pop
mov
mov
pop
les
sti
lods
cmp
push
scas
sub
inc
pop
out
insl
lea
jnp
aad
jno
pop
xor
mov
jp
ja
sbb
cmpsb
imul
mov
and
add
scas
in
jge
js
cmc
cmp
sbb
out
pop
push
pop
mov
and
cmpsb
das
dec
inc
xchg
dec
stos
ret
flds
icebp
test
mov
fs
sub
loop
xor
cmp
push
mov
fdecstp
add
je
femms
inc
cmp
pop
push
insb
pop
sub
pushf
jns
sbb
movsl
stc
les
stc
pop
out
leave
test
insl
lret
out
push
sbb
int
jno
out
fists
cmc
push
cli
jno
ljmp
mov
shl
dec
jae
sti
in
lods
xor
bndldx
popa
mov
pop
mov
call
aam
add
or
lea
aad
imull
inc
enter
fistpl
adc
xchg
aad
jge
scas
jge
sub
push
movsl
sub
sub
push
xchg
or
shrb
sbb
scas
mov
dec
xor
fs
cmc
idiv
inc
ficomps
mov
lret
mov
repnz
cmp
fisubl
lods
push
dec
xchg
sub
fildl
idivb
sub
ficoml
jnp
xchg
fs
xchg
mov
ret
rcl
insb
nop
loope
xchg
mov
out
or
popf
jmp
jbe
js
inc
inc
in
std
inc
pop
negl
jne
push
cmp
and
out
add
jbe
adc
xchg
test
dec
mov
xchg
mov
dec
add
jbe
sbb
leave
orl
imul
loope
inc
push
adc
sti
inc
je
xchg
or
mov
push
inc
into
or
add
xor
mov
jmp
xor
inc
orb
out
dec
loop
pop
cmp
mov
dec
jle
data16
mov
cmpsl
cmp
push
inc
in
xor
lods
fnstenv
ljmp
call
movsb
repz
pusha
fnsave
and
sbb
or
sub
push
loop
xchg
jae
scas
lds
push
nop
cmpsb
stc
xor
push
and
mov
aam
jo
xor
push
cs
nop
arpl
jp
mov
pop
bound
and
shl
fbld
mov
and
scas
nop
movsb
lock
xchg
inc
sbb
adc
bound
test
ja
mov
add
and
loope
js
mov
push
ja
mov
inc
and
xchg
jmp
xchg
xchg
mov
push
dec
inc
mov
adc
dec
mov
roll
pop
dec
sub
inc
xor
fstpl
lret
ds
push
out
jnp
daa
add
push
jnp
fisubs
das
adc
dec
hlt
add
mov
jae
jo
add
daa
leave
mov
cmp
and
pop
loop
inc
adc
mov
add
fimull
and
scas
ds
and
nop
dec
cld
push
imul
and
pop
or
sub
cmp
aad
rorl
lcall
leave
mov
jns
lock
jl
mov
cltd
repz
in
add
mov
rcl
inc
icebp
inc
in
fbld
xor
ljmp
cli
add
fsubrs
sbb
in
mov
lock
adc
sub
xlat
mov
mov
cli
or
mov
int3
bound
xorb
adc
pusha
and
sub
jne
je
pop
mov
arpl
mov
or
sbb
pop
fwait
dec
sbb
insl
movsb
mov
adc
jecxz
clc
outsl
adc
nop
lahf
xor
sbb
movsl
xchg
jnp
pop
sub
out
add
add
test
adc
push
in
rcrb
stos
stc
pop
pop
cmp
jno
pop
pusha
or
les
mov
imul
stc
popa
mov
int
push
call
or
rcrl
pusha
imul
inc
mov
mov
mov
nop
jl
iret
sub
and
and
sti
cmpsl
loop
dec
repz
into
or
ja
enter
pop
push
ret
inc
dec
fdiv
das
and
stos
loop
ljmp
movsl
push
sbb
push
repz
arpl
mov
or
xchg
xchg
dec
mov
jae
pushf
xchg
paddusw
xchg
and
push
nop
xchg
adc
xor
rcl
les
in
scas
inc
addr16
cmpsl
in
data16
arpl
push
jbe
rcll
sub
scas
imul
pop
lock
notl
mov
fwait
sti
sub
add
sbb
mov
dec
cmp
mov
xchg
push
subps
les
or
push
adc
stos
sbb
out
int
call
mov
xor
jb
xlat
out
xchg
jno
lahf
sahf
inc
add
xor
leave
fwait
push
pusha
add
ds
push
xchg
sbb
and
pushf
lret
add
xchg
jg
lcall
jae
nop
sub
bnd
adc
fisttpll
push
sbbb
or
das
jnp
pop
xor
jnp
aaa
mov
nop
aas
lcall
rcrb
mov
aas
pop
and
shrb
pop
and
sbb
inc
std
jae
cmp
je
nop
xchg
push
aas
xchg
sbb
cwtl
lods
orb
sub
aaa
imul
dec
push
out
pushl
fs
out
adc
test
push
fnop
add
sbb
adc
mov
popf
pop
pop
or
popa
xchg
movsb
push
repnz
xchg
movl
pop
add
popa
in
dec
movsb
fists
jmp
push
insl
lds
dec
stos
mov
pusha
mov
or
or
mov
add
push
mov
adc
inc
leave
mov
pop
pop
mov
psrlq
fimull
sti
sarb
pop
mov
rolb
int
inc
insl
pop
sub
arpl
nop
je
adc
jl
ret
movsl
mov
mov
cmp
inc
shlb
jmp
fisttpll
pop
aam
and
lcall
add
pop
add
cld
fld
mov
dec
stos
fdivrl
test
in
sti
jmp
jns
xchg
aad
mov
mov
cmpb
dec
xchg
ja
pop
daa
xchg
icebp
pop
jge
es
aas
shr
icebp
pop
adc
addr16
or
add
jb
mov
aas
mov
outsb
sbb
pop
xchg
clc
incb
imulb
hlt
cmp
jmp
popa
imul
insb
push
jle
or
in
sbb
insb
inc
insl
mov
adc
loop
mov
movsl
insl
push
push
fldt
xchg
ljmp
cmpsl
loope
xchg
cmc
sbb
and
popf
sub
jnp
or
stos
pushf
pop
scas
jae
push
add
imul
enter
or
push
cwtl
inc
rolb
inc
mov
test
into
and
fdivs
push
rorb
out
push
movsb
push
xchg
in
jg
loope
xchg
loope
jmp
dec
in
dec
out
add
jg
ret
loope
mov
loopne
fnclex
ret
xor
fstpt
sbb
adc
in
pop
cmp
loopne
jbe
imul
and
xor
mov
and
push
ja
inc
pop
jae
push
jp
cmp
mov
sbb
push
xchg
ds
imul
orl
push
jg
inc
sbb
jle
adc
mov
push
pop
cld
test
push
and
mov
or
cmp
addr16
iret
push
mov
dec
mov
or
sub
outsb
rorl
xor
push
xchg
or
pushf
movsb
pop
imulb
mov
out
xor
clc
inc
sub
pop
xlat
dec
fwait
mov
mov
fisttps
inc
pop
pop
jno
mov
or
shll
cmpsb
jns
pop
daa
jno
jl
lret
das
push
cltd
outsb
movsl
sub
and
cmc
jge
jecxz
inc
inc
jp
jns
loope
pop
sbb
mov
push
lds
jg
pop
push
or
stos
xchg
jecxz
fldl
mov
and
xlat
push
rcrl
or
xchg
and
jg
pop
inc
adc
add
mov
push
xchg
xchg
dec
and
xor
call
xchg
jge
rcrb
add
sahf
mov
test
fists
add
addr16
repnz
shrl
sbb
xchg
in
jo
push
lods
jno
shll
int3
and
mov
test
test
xchg
pop
mov
hlt
lret
aaa
loopne
xchg
adc
mov
mov
xchg
lahf
fs
out
dec
push
push
inc
scas
in
adc
jg
pop
mov
inc
jbe
mov
fcmove
or
test
pusha
pop
fmull
push
and
call
movsl
out
mov
mov
mov
in
jecxz
mov
out
sub
scas
mov
int
xchg
pop
lods
sub
dec
imul
cmp
cmpsb
arpl
sub
mov
pushf
ficoms
hlt
and
pop
inc
dec
nop
pop
jmp
xor
fdiv
js
lcall
inc
cld
sbb
cmpsl
and
ljmp
push
adc
mov
xor
jecxz
test
cmp
dec
xor
or
cmp
mov
adc
jge
fs
adc
dec
loop
inc
jno
lret
sub
push
emms
mov
dec
icebp
aad
jae
sti
jo
cmpsl
adc
scas
movsl
fcoml
mov
rorl
mov
nop
lds
push
rcrb
out
pop
dec
xor
dec
std
ffree
aad
mov
sbb
cwtl
repz
mov
imulb
fnstsw
push
mov
fnsave
aaa
insl
test
addl
xchg
jo
ss
lock
push
arpl
aad
arpl
inc
adc
pop
andb
popl
add
pop
int3
es
jle
sub
xor
cld
pop
jno
test
addl
sarl
adc
out
mov
jnp
cmp
mov
xor
jecxz
inc
mov
mov
adc
inc
push
loop
test
add
js
and
movsl
jae
push
inc
loopne
inc
in
sub
pushf
mov
add
xlat
lods
push
fistps
xchg
mov
jg
sarl
add
addr16
decl
ss
dec
jne
les
jl
xor
js
push
mov
mov
push
push
icebp
inc
dec
cmp
lock
aaa
pop
popa
cwtl
ret
ds
sbb
xchg
dec
lds
xchg
aam
arpl
outsl
dec
addr16
sahf
xchg
lea
test
cmp
add
icebp
push
cltd
pop
jne
inc
pop
push
push
stos
sub
pushf
jl
and
addb
es
out
lcall
adc
imul
movsb
cltd
cltd
scas
mov
jl
jae
bound
mov
inc
cmp
idiv
inc
ds
ss
push
fcomps
in
aas
or
pop
stc
in
pushf
xchg
fistps
xchg
jmp
xor
gs
inc
ds
adc
je
movsl
jo
jnp
mov
dec
xchg
test
xchg
dec
mov
mov
jl
xor
inc
mov
jmp
lret
xchg
test
outsl
xchg
add
push
jae
ds
push
sub
add
ret
divb
inc
sbb
push
movsb
mov
and
add
arpl
mov
jbe
push
outsl
fdivp
or
icebp
sbb
out
and
xchg
dec
jge
stos
cpuid
sub
inc
pop
lret
aas
jge
test
lods
and
cwtl
mov
xchg
push
in
leave
mov
test
ret
outsl
or
dec
popa
mov
inc
test
in
pop
iret
mov
pop
js
fs
imul
cmpl
iret
xor
fiadds
lods
xor
adc
ret
inc
pop
fidivrs
or
jmp
fisttpl
leave
inc
lcall
ret
mov
icebp
mov
add
cmpsb
in
push
shl
mov
pop
adc
js
cmp
ds
mov
jmp
fcomps
adc
sbb
inc
das
pop
lahf
cmp
ljmp
nop
push
and
aad
cmpsl
scas
enter
mov
adc
in
or
jecxz
or
mov
inc
xorl
and
jns
pop
add
jmp
add
je
in
ljmp
and
lods
loop
mov
pop
ljmp
jl
adc
loope
cmp
jp
cmp
cmp
inc
jbe
add
mov
stos
icebp
xor
dec
mov
push
lret
shlb
int3
sbb
pusha
out
outsl
mov
jae
les
add
nop
jmp
pop
xchg
jae
xchg
xchg
mov
sub
pushf
loop
lcall
orb
subl
test
push
jmp
cmc
cmpsb
pop
in
lcall
sub
sbb
and
push
jb
aaa
push
out
ror
shlb
shrb
and
dec
jns
adc
push
sub
sub
pop
dec
mov
lods
fcmovnbe
adc
sbb
stos
pop
sub
pop
xchg
fisttpl
add
pop
aam
addr16
adc
push
mov
icebp
lcall
sub
popf
jbe
xor
pusha
push
mov
inc
pop
dec
call
cli
add
or
fdivrs
sbb
movsb
dec
dec
int
cmp
push
sbb
inc
das
repz
jecxz
ss
adc
mov
sub
bound
push
jb
cmpsl
cs
xacquire
dec
popf
jbe
movsb
pop
ss
sub
int
mov
nop
mov
or
sbb
mov
push
xlat
jle
or
xlat
push
push
jo
pop
sbb
push
cmpsl
jecxz
xor
pop
mov
lds
shrb
add
and
mov
push
lods
pop
fcomps
jnp
xchg
out
or
mov
xlat
add
or
ja
jae
push
or
jne
mov
push
loope
push
mov
cmp
xor
add
sbb
lods
or
mov
jl
adc
push
bound
pop
out
jns
mov
mov
les
pop
mov
stc
jae
jnp
mov
inc
xchg
sahf
ja
fldenv
pop
or
fildl
mov
rcrl
shr
aam
adc
sahf
add
into
pusha
adc
push
gs
and
inc
addr16
sub
repnz
shll
outsl
aas
sub
addl
push
pop
fsts
cmp
mov
inc
cmp
and
lahf
ds
cmp
ret
push
xchg
cmpsb
xchg
fnstcw
shl
fcompl
cmc
lahf
sub
out
ljmp
subb
jp
adc
sahf
sub
loope
rcrb
pop
xor
mov
out
add
jl
push
icebp
push
add
sbb
pop
push
mov
imul
sbb
test
dec
jbe
and
pop
push
ficoms
pop
lret
push
pop
add
push
lods
adc
scas
pop
popf
push
inc
pushf
es
ljmp
pop
add
or
and
inc
xchg
and
sub
lret
js
insl
stos
mov
repnz
or
mov
add
stos
push
pop
or
add
mov
mov
daa
inc
sar
les
mov
subl
cltd
push
adc
cs
in
or
int
pusha
add
in
shrb
jecxz
inc
mov
xchg
xchg
call
push
aas
outsl
sbb
decb
aaa
jmp
mov
and
sti
jge
pop
xchg
es
in
imul
push
and
mov
idiv
les
mov
insb
filds
cmp
es
imul
lods
jmp
xchg
xor
mov
daa
add
fwait
jg
arpl
push
xchg
and
fiadds
mov
xor
jns
xchg
jne
dec
popa
call
fsubrp
andb
adc
scas
out
lcall
mov
push
cmp
dec
sbb
dec
adc
mov
push
daa
repnz
mov
les
pop
push
js
xchg
int
out
pop
and
push
xor
pop
aam
xor
mov
incb
hlt
mov
popf
idivb
ss
js
test
lret
out
aam
jae
push
xchg
inc
xchg
pop
push
fadds
pushf
add
cmp
sub
jb
mov
addr16
cs
pop
mov
lahf
daa
movsb
clc
sbb
mov
inc
aas
popa
test
lods
out
ret
cmpsb
cmc
jnp
push
loopne
mov
cwtl
jmp
mov
in
adc
jecxz
mov
inc
std
xor
repnz
jl
xlat
sub
mov
into
pop
mov
or
stos
out
scas
movsl
mov
lret
push
repz
pusha
jmp
jp
sti
jge
push
cltd
sbb
les
sub
ds
ret
cmp
into
shr
add
ret
aam
loop
aam
loope
outsb
ss
add
test
or
xchg
loop
dec
cld
inc
push
cmp
cld
sti
push
add
mov
movsl
push
cmp
push
xchg
mov
cld
daa
fucomip
adc
jnp
mov
dec
push
lcall
loop
push
adc
adc
push
mov
jb
outsb
push
dec
xor
scas
loopne
loopne
js
cltd
ljmp
cmpsl
mov
repz
dec
xchg
mov
movsb
js
pusha
int
test
icebp
fs
push
cwtl
fnstsw
cmp
lea
in
jno
cmp
mov
mov
mov
mov
push
call
pop
sahf
add
sbb
lods
loop
sbb
inc
adc
or
int3
cmpsb
aam
cli
inc
and
push
mov
xor
cmp
movsb
movsb
xchg
sbb
jmp
ficoml
iret
and
sbb
mov
sub
lret
push
fistpll
sub
xor
cmp
add
lret
cmp
inc
nop
dec
test
lcall
mov
dec
mov
jae
cmp
je
mov
jg
jecxz
mov
and
sub
jno,pn
outsl
ret
inc
ja
js
dec
or
idivb
push
xchg
mov
mov
mov
inc
je
cmp
push
loopne
lahf
scas
pop
jecxz
pop
mov
call
push
pop
lret
testb
and
imul
fdivrs
mov
push
cmp
fwait
lret
insl
inc
xor
jge
out
pop
xchg
enter
sub
adc
or
push
sub
out
add
mov
aad
sub
insb
in
xor
lret
stos
jo
cmp
pop
jbe
and
fidivrs
movsl
sbb
mov
aam
fucomi
adc
adc
fs
and
sbb
inc
adc
ret
cli
cmpsb
mov
int
lcall
in
ficomps
dec
shlb
sbb
lock
sub
push
insb
out
mov
sub
outsb
pushf
sbb
cmp
mov
pop
popf
dec
sbb
push
fisttpl
daa
cmp
jbe
sbb
aam
inc
dec
aad
push
lcall
jne
aas
in
je
imul
fiadds
cmpsl
dec
jns
mov
nop
test
movsl
sub
int3
cld
fbstp
cmpsl
sub
inc
mov
fldl
sub
movb
push
cmp
gs
mov
xor
xchg
daa
mov
push
fldl
mov
or
stc
je
aaa
movsl
adc
inc
ret
std
mov
xchg
or
and
fdivl
ds
cwtl
or
scas
sub
xor
or
es
aam
xchg
jo
lea
pusha
out
iret
xchg
push
pop
mov
mov
sbb
ds
push
lcall
loope
fldt
or
sub
fildll
int
cmp
lret
inc
loopne
es
fidivl
mov
or
sbb
inc
pushf
cmpsl
scas
sahf
popa
stos
xchg
inc
lret
in
dec
nop
xchg
jnp
push
fs
inc
inc
pop
push
stos
jp
sbbb
inc
and
nop
xchg
les
jo
jl
pop
jns
imul
lods
ds
rorb
mov
push
adc
inc
xchg
mov
jne
insb
scas
rclb
sub
in
fcompl
dec
jmp
mov
lods
bound
dec
fidivs
inc
lods
jecxz
lock
inc
test
sub
pop
call
mov
lods
addr16
jle
in
cmp
cltd
test
add
lret
inc
lret
hlt
and
jo
stos
nop
hlt
into
fsincos
push
cmp
shrb
push
mov
pop
rorl
daa
pop
mov
and
pop
imul
ss
mov
mov
xor
enter
pusha
repz
push
dec
fxch
add
pop
into
loope
mov
out
cmp
dec
add
lea
je
lret
mov
in
push
xchg
fstpl
jmp
adc
and
xchg
xchg
add
xor
or
inc
aad
lret
js
daa
mov
les
jnp
loop
into
test
xchg
pop
dec
adc
xchg
outsl
push
adc
adc
out
sbb
out
xchg
das
hlt
test
adc
popa
test
cmpsl
jecxz
pop
xchg
loop
or
ret
push
push
test
sub
add
in
jnp
sbb
in
sub
inc
imul
hlt
iret
ror
jmp
lea
dec
jle
or
lock
jl
xor
xlat
jno
push
pusha
int3
and
cltd
push
add
xchg
js
das
popa
test
mov
adc
dec
shl
je
ret
xcrypt-ctr
cmpsl
fldenv
dec
jmp
xchg
dec
mov
outsb
bound
fmul
or
out
scas
cmp
xor
mov
xor
mov
fmull
stc
jbe
mov
or
jle
add
movsb
adc
cmc
adcb
popf
loope
adc
mov
movsl
mov
mov
adc
clc
xor
aas
or
insb
nop
ret
mov
push
cs
xor
fidivl
ds
sti
mov
and
pop
mov
sti
adc
or
scas
xchg
mov
pop
daa
into
nop
jmp
sbb
addr16
pop
sbb
out
xor
pop
sti
mov
in
push
js
jmp
or
data16
repz
xorb
insb
imul
push
or
sbb
or
jle
repz
scas
adc
mov
mov
paddd
ljmp
add
in
push
ret
movsl
jbe
es
std
inc
cmpps
call
dec
adcb
jb
xchg
daa
ja
lret
out
dec
xor
dec
cmpsl
icebp
push
pop
lahf
out
jge
pop
in
pop
in
hlt
outsb
test
sbb
add
arpl
sbb
jbe
mov
mov
ret
popf
jo
test
je
lods
lock
sub
mov
mov
sbb
fildll
adc
aas
jg
out
pop
sbb
shll
addr16
and
mov
cmp
or
mov
cmp
mov
fwait
pushf
ficompl
pop
push
mov
sub
in
jecxz
scas
mov
xor
stos
das
aam
inc
xor
movsl
imul
lcall
or
dec
icebp
cmp
pop
xor
push
divb
push
out
loopew
lahf
and
cmpsb
sbb
dec
les
pop
push
dec
outsl
cld
cmp
out
in
lock
push
in
push
xor
cltd
out
movsb
into
int
xchg
mov
test
xlat
out
mov
mov
xchg
aas
jno
adc
mov
scas
in
icebp
sarl
pop
mov
pop
addr16
ret
jecxz
cmp
pop
mov
xchg
push
ret
aas
pushf
pop
jmp
sub
lahf
scas
sbb
mov
add
es
mov
pop
ljmp
lds
insl
push
xor
or
and
inc
and
jle
out
es
xchg
cmp
mov
rorb
and
adc
dec
pop
jbe
je
adc
pop
xor
fadds
imul
mov
in
cmp
dec
lret
sbb
mulb
xor
stos
lret
test
aad
cli
leave
xchg
xchg
sub
test
das
pop
rcll
jl
add
jmp
rolb
xor
jnp
mov
aad
push
xlat
inc
adcl
sbb
push
push
inc
out
xor
lcall
ja
and
ret
jg
stos
scas
leave
lods
jno
test
in
sub
ja
fwait
pop
sbb
jg
mov
mov
mov
out
dec
mov
divl
pop
cli
mov
pop
sbb
mov
out
inc
pop
movsl
push
movsl
lds
xchg
call
test
pop
test
daa
in
mov
mov
sub
add
mov
jle
fwait
popa
cmp
enter
lahf
repz
pusha
and
lods
bnd
je
add
push
fs
jnp
adc
nop
dec
mov
iret
fcompl
out
inc
test
lcall
jbe
call
pop
cmpsb
pop
dec
xor
cmpsl
cmpsb
adc
js
stos
repnz
add
sub
adc
add
mov
std
sbb
xor
mov
rclb
cs
cmpsl
pop
sbb
mov
jo
stos
enter
in
jbe
push
bound
push
jo
inc
ja
call
cmpsb
lds
pop
pop
out
ja
mov
imull
fdivrs
test
push
xor
inc
push
leave
adc
jge
mov
dec
mov
xchg
add
dec
sbb
lock
jmp
mov
sbb
inc
sbbl
and
adc
popa
cli
or
ret
gs
push
test
sub
dec
adc
dec
dec
inc
inc
dec
xor
aam
push
out
in
out
adc
xor
jge
lds
mov
es
inc
sbb
test
dec
push
stc
in
mov
xor
push
aad
or
addr16
add
mov
mov
inc
bound
aaa
jb
xchg
push
xchg
sub
jecxz
xor
jae
jb
lods
add
scas
cmp
shr
jle
jecxz
pushf
testb
mov
mov
jnp
mov
gs
in
cli
shrb
mov
xor
ret
adc
daa
adc
es
xchg
jp
mov
cmc
dec
ja
inc
or
in
add
push
in
dec
lret
jae
pop
sbb
jmp
push
pop
inc
addr16
and
rep
sub
ds
jo
rol
or
add
roll
pop
xchg
xor
outsl
jge
jle
je
jg
inc
test
inc
rorb
insb
leave
aas
push
inc
mov
push
xchg
inc
into
insl
adc
dec
cltd
rol
pop
inc
cmp
push
mov
test
and
inc
aas
add
test
add
nop
cmpsl
addr16
mov
test
ja
jle
xorl
push
mov
pop
xlat
clc
lds
mov
xor
fwait
inc
and
pusha
mov
pop
sbb
sbb
jns
movsl
mov
cmpsb
shrb
dec
jne
and
sbb
out
mov
xchg
sub
dec
xlat
inc
jbe
repnz
imul
mov
mov
xor
into
sahf
cmp
lret
inc
push
hlt
and
cld
mov
mov
cmpsl
test
arpl
add
pop
xchg
xchg
or
add
jge
rolb
icebp
jmp
mov
callw
dec
into
sti
mov
pop
imul
insb
inc
fisttpll
imul
inc
jmp
icebp
and
dec
inc
xchg
pop
loope
lcall
mov
les
push
jecxz
loopne
mov
test
pop
push
addb
mov
cmp
pop
call
insb
jno
mulb
inc
pop
lods
data16
std
pop
jnp
daa
popa
sub
imul
inc
dec
jno
bound
cli
xor
in
pop
testl
rcrl
xchg
ret
sub
add
les
and
lds
inc
mov
push
bound
pusha
ret
jecxz
mov
cmpb
jnp
push
hlt
in
sbb
pop
movsl
or
mov
sti
icebp
mov
and
shll
and
and
push
pop
mov
ficoml
js
inc
mov
cwtl
jmp
or
stos
aad
inc
lods
test
sbb
sub
ret
das
imul
xchg
or
xor
jecxz
pusha
add
mov
sub
xchg
sbb
xchg
sbb
sbb
dec
cmp
stc
ss
std
sti
xchg
daa
push
push
lods
xor
repz
pusha
xor
ds
mov
mov
and
js
push
lret
lahf
mov
and
fdivrs
add
aas
jmp
mov
ds
popa
sahf
scas
inc
fistpll
inc
outsb
fisttpl
cmpsl
sbb
lds
sbb
cmp
popa
inc
loop,pt
dec
and
push
or
push
mov
push
jb
test
xchg
stc
movsl
or
pop
ja
push
stc
ds
xchg
imul
xchg
sti
mov
pop
mov
add
dec
sub
push
push
outsb
hlt
ret
sti
push
add
pop
test
out
aas
dec
or
xor
bnd
push
movl
out
add
in
in
inc
push
cmp
xchg
mov
pop
add
loop
aas
test
int
fs
mov
dec
xlat
adc
stos
mov
jbe
dec
nop
mov
jnp
add
rolb
stos
mov
xchg
shrb
loopne
push
add
cmc
jnp
outsb
leave
add
jae
out
iret
stc
inc
ss
and
arpl
aam
shll
out
loope
mov
movsl
enter
fidivs
movb
ljmp
enter
mov
add
jne
outsb
xlat
mov
hlt
aaa
mov
popf
flds
pop
shll
popf
mov
lock
xchg
xor
stos
movsl
subl
inc
or
hlt
pop
movsb
fimull
xor
pop
hlt
pop
xchg
xor
ret
int3
fcom
ret
mov
jp
xorb
xchg
push
pushf
mov
popf
cmp
or
inc
adc
in
mov
xlat
test
jmp
push
data16
das
mov
popa
in
mov
dec
ffreep
call
mov
aaa
scas
es
sbb
mov
sbb
in
xchg
in
rorb
sub
lret
pushf
add
fs
repz
mov
fs
adc
sahf
notb
out
pushf
fisubrl
jbe
inc
rolb
mov
rclb
ds
out
subb
mov
leave
sbb
std
in
dec
xchg
nop
push
stos
xchg
mov
imul
sbb
repnz
addl
push
es
and
xor
jne
dec
xchg
dec
mov
fcoms
ds
pop
xchg
jl
outsl
in
sbbl
ds
sbb
mov
cld
jecxz
jl
pop
pop
shlb
dec
cli
or
and
sbb
dec
cmpsb
aad
dec
cmp
pop
or
andb
xor
mov
push
loopne
push
mov
mov
out
movsb
sbbl
inc
jae
rcrl
jno
and
add
pop
insb
dec
inc
inc
leave
jle
cli
jne
xchg
add
jecxz
arpl
mov
jbe
insl
inc
mov
popf
jp
repnz
xchg
nop
dec
mov
ljmp
movsb
into
lcall
mov
lret
adc
pop
sbb
aaa
pop
outsb
pop
stc
mov
push
add
push
jle
fwait
jb
add
inc
inc
dec
pop
ljmp
jnp
push
sarl
pop
shrl
dec
rcll
fstpt
lods
lahf
leave
mov
push
addl
pop
das
arpl
jmp
jb
inc
bound
cmc
mov
lahf
bound
or
sbbl
popf
dec
enter
xchg
lods
sub
sti
xor
pop
mull
cli
aam
inc
xchg
lock
rclb
inc
testb
add
push
jae
mov
cmp
lret
ja
jae
cmc
dec
fidivl
pop
cltd
es
jg
jnp
popf
inc
int
lea
add
nop
dec
pop
lret
adc
cmpsl
jle
daa
mov
daa
inc
adc
xor
test
add
das
bound
xlat
addr16
and
ja
pushf
data16
inc
jecxz
mov
dec
fwait
cwtl
mov
and
scas
lea
and
rol
hlt
rcll
mov
jecxz
xor
push
lret
out
incl
sbb
js
test
or
add
xchg
in
out
repnz
pop
and
dec
xchg
xchg
lods
nop
lcall
xor
and
add
xor
stc
mul
pop
mov
dec
xor
repnz
push
sub
lret
pusha
sti
movsl
cmp
stc
mov
mov
mov
stc
dec
sub
pop
lods
movsb
jbe
popa
idivl
lret
fldl
insb
outsb
inc
push
dec
inc
inc
fs
stos
pop
sbb
pop
mov
pop
push
and
icebp
jno
xor
fmuls
lret
jns
sub
fdivrs
and
xchg
aas
jmp
sarb
jb
adc
or
cmp
out
push
idivl
dec
sbb
pop
cmp
jb
cmp
cs
fbld
sti
push
cmp
add
rclb
in
mov
xchg
add
push
call
inc
and
sti
pop
insl
test
mov
loop
add
sub
imul
pop
cmp
adc
fs
pop
push
or
js,pn
sbb
mov
ret
fimull
test
aas
test
push
iret
js
lea
mov
jmp
mov
xor
fstps
or
faddl
adc
jge
addr16
cmp
mov
sbb
push
xchg
ficoms
mov
mov
icebp
lods
xchg
push
xchg
inc
lret
xchg
mov
push
test
cmp
pop
pusha
push
dec
sub
sbb
stc
push
lods
pop
jmp
das
and
and
xchg
inc
nop
xor
mov
pop
fs
cmp
sarb
fsubl
sub
rcrb
dec
loopne
movsb
and
je
inc
mov
ds
aaa
jg
je
imul
adc
xor
pop
cwtl
call
pop
adc
jb
cmp
test
in
pop
xchg
pop
fidivs
inc
sub
cmpsl
and
dec
scas
sub
cld
xor
pop
into
out
push
cmpsb
mov
push
roll
mov
int3
mov
call
arpl
xchg
loope
movsb
sub
mov
data16
data16
into
adc
fisubrs
push
cmp
sub
test
scas
rcrl
fwait
xor
mov
sub
mov
mov
xchg
mov
fnstenv
jne
mov
dec
jb
adc
xor
adc
stc
adc
pop
and
clc
mov
push
prefetcht1
in
sub
push
sbb
fldl
jnp
arpl
aad
cwtl
shl
and
dec
mov
out
jge
je
inc
inc
push
pop
fdivrs
and
xor
enter
push
adc
pop
sbb
xlat
mov
icebp
pop
imul
pop
add
mov
fsubrs
cmp
xlat
cwtl
outsb
stos
add
in
sub
in
mov
or
push
mov
jbe
rorb
dec
shll
push
mov
lcall
outsl
jecxz
arpl
xchg
ror
inc
fs
sub
cmpsb
inc
leave
into
cmpsb
pushf
stos
push
arpl
fsubs
sti
mov
jns
fidivrl
adc
mov
dec
mov
push
adc
dec
inc
xlat
push
int
les
dec
jb
and
pop
outsb
jle
mov
mov
shll
repnz
stos
mov
adc
daa
ja
dec
pop
xor
pusha
mov
jnp
add
insl
pop
icebp
xor
jg
pop
jp
out
or
icebp
out
pushf
and
or
outsl
or
notb
je
test
jnp
xorl
fs
out
cmp
in
mov
das
clc
stos
push
inc
fcoml
xchg
jp
mov
inc
cmp
pop
dec
lock
jo
inc
mov
inc
jle
add
pop
xor
pop
roll
xchg
mov
jecxz
mov
push
or
sub
stc
les
int3
mov
dec
dec
mov
jl
imul
and
lock
outsl
inc
adc
lcall
sub
adc
add
mov
pop
xchg
dec
and
daa
mov
or
out
mov
incl
add
sahf
movsb
sbbl
pop
xchg
mov
inc
jae
popl
and
mov
mov
lea
aas
adc
add
mov
sbb
js
stos
inc
lock
mov
xor
pop
jmp
xchg
mov
sbb
xor
lret
dec
inc
jl
cmp
add
adc
xchg
enter
xchg
cs
insl
dec
sbb
xor
mov
jnp
in
inc
fildl
add
jae
ja
lret
add
pusha
out
iret
mov
pop
mov
or
andl
in
pusha
adc
mov
inc
test
dec
sub
sti
loop
in
out
sub
test
jnp
insl
sbb
dec
fdivr
lds
dec
pop
push
inc
iret
dec
sbb
xor
add
or
cwtl
into
xlat
cmp
cmp
or
lods
pop
call
loope
xor
sbb
dec
mov
push
dec
jmp
pop
adc
add
cmpsl
loop
popl
cmp
or
aad
ja
test
jg
outsl
mov
and
mov
lods
mov
push
push
and
mov
xchg
jbe
cwtl
push
jne
push
inc
test
xchg
add
xor
lds
movsl
or
jecxz
gs
jno
xlat
popa
inc
out
sub
push
rol
or
dec
in
jb
jge
mov
roll
mov
fldt
movntq
out
xor
sbb
inc
shll
cwtl
in
into
arpl
addr16
scas
push
sub
rorl
pop
adc
mov
shll
stos
dec
mov
jge
xor
mov
and
lods
push
jp
jb,pt
sbb
dec
rsqrtps
mov
in
les
push
aas
push
cwtl
cmpsl
sbb
gs
std
sarb
pusha
out
xor
ljmp
popa
inc
lret
xlat
jbe
fistpll
pop
inc
mov
lods
sbb
sub
dec
orb
test
ret
enter
xchg
sar
out
push
insl
stos
mov
sbb
out
mov
sahf
pop
mov
inc
mov
sbb
aaa
scas
inc
mov
cmp
pop
xchg
ret
pop
mov
cmp
xor
cmp
mov
cwtl
cld
mov
xchg
sub
fnstenv
ss
jge
push
inc
enter
cld
and
mov
out
enter
pop
lcall
jns
repz
scas
xchg
jmp
fs
sbb
xor
popf
leave
push
in
int
xchg
in
mov
jae
bound
jg
mov
mov
out
inc
push
hlt
in
jno
cmp
pop
fidivrl
inc
push
or
lret
add
or
insl
xchg
inc
cmp
lcall
mov
pop
and
rcrb
inc
test
or
mov
pop
adc
push
je
pushw
loope
and
mov
jle
and
lret
push
hlt
aaa
push
xor
rcr
pop
inc
fcomps
dec
into
pop
adc
rclb
cwtl
jno
pop
jb
pop
mov
or
mov
sbb
imul
xchg
imul
jecxz
fnsave
pop
lock
fnstcw
sbb
xchg
jecxz
inc
pop
adc
sub
jnp
dec
push
sub
sbb
popf
popf
decb
dec
jge
push
add
push
ffree
add
or
repz
aad
mov
xchg
xchg
or
pop
dec
mov
xor
imul
xchg
or
movsb
cmp
xor
mov
push
and
xor
mov
and
pusha
or
fisubrl
out
ljmp
mov
push
push
or
movsb
ret
xchg
dec
arpl
pop
pusha
repz
jl
jge
ret
sbb
fldln2
lods
cli
pop
push
xor
pop
sub
sub
std
pop
cmp
mov
sbb
pop
xor
shrl
testb
rcrl
dec
lcall
fidivl
movsb
stos
stos
mov
fs
and
int3
lahf
repnz
dec
xchg
mov
fcoml
enter
outsl
xor
decb
xlat
aas
cmp
push
xchg
repz
stc
rcl
push
loope
fmull
sub
adc
mov
inc
test
push
outsl
jmp
adc
fwait
jmp
int3
dec
data16
jno
rorl
and
xchg
sub
xchg
cli
test
test
and
nop
mov
out
rcll
jae
sub
add
pop
shlb
xchg
cwtl
adc
jl
mov
sbb
push
iret
cwtl
inc
in
pusha
dec
rcr
push
xchg
jno
jne
cmp
mov
inc
jbe
leave
xchg
inc
xchg
mov
dec
jmp
mov
push
lahf
loop
test
aaa
aaa
int3
cltd
fwait
in
dec
cli
lock
lahf
fidivrs
sahf
or
jle
mov
inc
xchg
stc
adc
ret
repz
push
rclb
mov
push
fstl
mov
push
jb
adc
mov
dec
gs
insb
cmc
movsl
xchg
popa
cmp
std
sahf
sti
push
xchg
sub
or
outsl
push
pop
andl
cmpsl
push
mov
bound
mov
jp
je
imul
imul
inc
inc
std
xchg
inc
pop
jnp
jle
out
add
imul
das
shl
cmpsl
add
xor
add
adc
mov
push
and
or
imul
pushf
movmskps
call
cmpsl
sub
insl
je
ret
inc
push
std
aad
pop
jnp
jle
movaps
jl
xchg
xchg
pushf
jmp
mov
dec
leave
and
int
adc
mov
dec
sub
add
jne
rcrb
jge
loope
dec
insl
mov
xchg
mov
shl
ret
dec
out
out
inc
iret
aam
rep
xchg
xchg
sub
sbb
repnz
jmp
pop
flds
jne
adc
inc
dec
jmp
fwait
addr16
insl
mov
pusha
int
cmpsb
inc
push
jmp
cltd
jne
adc
jle
or
out
sub
push
sar
or
idivl
dec
cmp
cmp
lret
notb
jg
test
out
adc
push
xlat
xor
cmp
jnp
aad
int3
mov
or
rcrb
icebp
ljmp
hlt
mov
xor
sub
nop
cmp
cmp
push
adcb
push
fs
je
mov
mov
inc
xchg
fmuls
test
pop
out
jp
lods
aad
ficoml
cmp
jmp
jne
outsb
loop
sub
and
cmp
fisubl
pop
fiaddl
pop
int3
jo
scas
push
and
xor
push
dec
gs
dec
inc
inc
les
inc
leave
jns
inc
sbb
loope
pop
adc
sub
cmp
in
adc
scas
dec
stc
push
loop
sbb
cmpsl
pop
cwtl
sbb
loop
and
xchg
push
xchg
push
inc
sub
inc
fstpl
pop
jnp
and
xchg
push
jae
or
cmp
in
mov
jno
push
into
lret
sub
iret
mov
test
push
mov
inc
out
sub
aad
push
pop
in
cmp
pop
dec
jne
aas
sub
aad
mov
sbbl
leave
and
mov
cmpsl
inc
push
ds
je
sbbb
sbb
push
sbb
sti
inc
xor
paddsb
xor
mov
scas
stos
les
outsl
sbb
aaa
pop
or
cmp
inc
jnp
hlt
push
pop
sub
cwtl
inc
gs
adc
xlat
pusha
movsl
pop
cmpsl
fnstsw
push
mov
dec
dec
push
inc
int3
sub
push
push
mov
mov
pop
gs
inc
push
fldenv
cmp
pop
loop
inc
ljmp
jecxz
mov
rol
mov
adc
inc
push
lcall
and
mov
push
push
dec
or
inc
mov
scas
dec
loop
ja
cmp
inc
pop
lds
adc
mov
push
ds
jl
pop
ret
rorl
push
repz
int3
push
jg
mov
test
inc
in
inc
inc
fwait
mov
outsb
loopne
mov
dec
das
lock
dec
cli
pop
mov
icebp
mov
inc
ret
out
cmp
and
jecxz
mov
test
lea
ljmp
push
bound
fistpl
mov
sbb
mov
pushf
insl
int3
sarl
sub
cmp
fsubrl
scas
pop
xchg
flds
xor
mov
and
dec
outsb
and
addb
shll
add
movsl
das
push
or
imul
mov
mov
push
movsb
push
pop
inc
in
adc
scas
xchg
inc
pop
xchg
sub
mov
pop
push
pop
icebp
ficoms
push
idivb
stos
jne
sbb
insl
aaa
test
in
jo
stos
ret
int3
imul
andb
lods
xor
pop
outsl
leave
push
xchg
outsl
xchg
push
mov
xorl
shrb
xchg
js
js
dec
mov
insb
addr16
pop
fidivs
add
dec
ds
mov
shl
mov
fnstsw
mov
pop
imul
dec
bound
popf
aad
and
cld
jmp
mov
outsl
sbb
or
daa
aas
inc
pop
push
and
xor
loop
inc
sbb
jmp
jns
cltd
dec
loopne
adc
jle
mov
mov
cmpl
push
pop
lahf
lcall
jle
pop
shrl
ds
push
out
test
mov
fwait
loop
xchg
jno
std
sub
add
mov
jmp
in
loop
inc
sub
setnp
jl
cmp
xchg
ss
xor
push
lock
into
aad
movsl
movsl
subb
mov
xchg
and
mov
imull
jnp
scas
fistpll
ljmp
ds
sahf
test
mov
repz
mov
push
sub
gs
cmpsl
in
push
popf
nop
dec
and
sub
push
sbb
cmp
cmpsb
andb
jp
xchg
jno
ds
nop
jge
mov
jp
cmpsb
ja
cmp
mov
inc
ss
jg
cli
pop
std
push
or
mov
test
pushf
lret
std
xor
fcomps
imul
pop
add
add
cmpsl
les
cmpsl
sub
loope
sub
sub
xor
sub
test
sbb
pop
and
dec
or
in
stc
int
inc
mov
push
jo
sub
xchg
clc
dec
adc
jmp
and
out
jne
movsl
xchg
iret
hlt
popa
xchg
jg
cmpsl
ror
mov
stc
jae
jge
add
lods
cmp
mov
fmul
movsb
xor
gs
icebp
in
adc
sti
fimuls
mov
iret
rcrb
sub
sbb
pop
adc
icebp
jp
outsb
ret
pop
data16
push
aas
aas
imul
inc
shl
ds
sub
sti
push
enter
add
in
jmp
test
fsubs
ud1
pop
cmp
add
sub
cmp
comiss
cwtl
xchg
mov
std
out
movsw
fisubs
cmp
inc
jle
cmp
int3
out
scas
inc
inc
stos
test
and
aad
mov
mov
mov
insl
mov
mov
xchg
lods
aas
inc
jb
lret
cmp
int3
xor
gs
or
jecxz
mov
push
push
pop
jmp
inc
mov
mov
scas
cmp
push
push
xchg
insl
push
jb
arpl
repz
in
mov
mov
mov
in
loope
add
xor
add
leave
loop
xchg
or
lret
inc
stos
or
mov
shrb
xchg
cmpsl
inc
cmp
push
xchg
jg
xchg
push
pop
dec
sbb
mov
add
add
lret
xlat
sub
jb
fildll
out
cmp
inc
popa
aam
jmp
sahf
fisubl
into
out
mov
or
mov
repz
repz
cmp
pop
into
loopne
add
std
xchg
das
inc
das
out
mov
adc
or
add
push
pop
add
in
add
pop
in
ret
pop
test
leave
cwtl
fdivrs
daa
lahf
pop
jno
jns
inc
cmp
adc
jmp
mov
scas
jmp
mov
test
std
xor
pop
add
xor
push
xchg
lret
stos
sarl
insl
icebp
mov
test
jo
or
mov
and
jno
xor
mov
and
lahf
orl
jo
lds
aaa
sbb
xchg
es
iret
or
sub
jmp
insl
cmpb
mov
loope
mov
divb
dec
inc
scas
xchg
loopne
jmp
jg
xchg
xchg
icebp
mov
sub
ja
mov
add
mov
in
and
lds
mov
mov
inc
call
clc
hlt
adc
cli
push
sub
lret
ds
icebp
or
lret
cmp
movb
jo
push
push
pop
or
xchg
test
rolb
jle
push
rcrl
xchg
dec
sbb
and
pop
pop
inc
jmp
mov
int3
rcl
cli
jno
divb
sbb
inc
test
add
mov
pop
cmpsl
fmul
scas
sbb
inc
pop
jno
pop
cmp
aam
sahf
jl
and
imul
cmc
cli
xchg
sbb
popa
jno
aas
insl
mov
fwait
adc
push
jbe
mov
shl
int3
gs
mov
or
enter
daa
xchg
push
and
add
out
dec
xchg
push
iret
lret
mov
adc
push
or
mov
and
mov
insb
js
dec
add
sbb
aaa
pop
ss
rcrb
outsl
divl
imul
movsb
enter
cmp
iret
fs
movsb
fcoms
xchg
xchg
cmp
mov
loopne
sub
cmp
ja
cmc
or
sub
mov
jle
cmp
push
sub
repz
pop
push
xchg
jnp
cmp
arpl
pop
incl
ss
mov
ss
lahf
sbb
jp
jae
pusha
xor
dec
in
and
inc
ss
push
cli
sbb
inc
sbb
inc
pop
xor
pusha
outsb
cltd
jne
jnp
pop
push
jno
add
dec
pop
stos
pop
or
jb
roll
loope
pop
out
or
iret
mov
inc
pop
mov
add
jle
jnp
movsb
inc
sub
xchg
lret
pop
fnstenv
scas
insl
mov
es
pop
std
mov
loop
cpuid
push
decl
xlat
add
dec
ror
fcmovnb
mov
data16
pop
xorb
inc
stos
adc
shl
mov
cmp
ss
inc
outsl
popf
addl
push
sub
inc
jmp
fsubs
jl
sub
ds
pop
in
scas
push
mov
leave
lcall
mov
pop
dec
mov
adc
cmp
xchg
cmpsl
stos
sub
mov
test
push
cmp
and
hlt
stc
mov
sub
addl
int3
dec
test
jp
mov
jae
into
pop
and
jg
dec
jl
or
popa
nop
push
xchg
inc
popf
incb
in
ja
popa
nop
push
mov
fistl
js
in
loope
inc
fldl
xchg
cli
dec
xchg
mov
nop
inc
jp
mov
insb
push
cmpb
hlt
xchg
ret
movb
fnstcw
sub
out
fs
int
push
lea
dec
pop
adc
cmpsb
cwtl
mov
rcrl
or
dec
lret
aas
out
cs
push
and
sub
imul
or
push
mov
jle
test
cmp
dec
call
out
test
les
repnz
je
mov
push
shll
pushf
int3
push
mov
mov
pop
adc
fldpi
xor
fwait
lret
loope
xchg
and
sub
jo
inc
out
sub
add
pop
arpl
inc
jb
xor
lods
ljmp
push
into
pop
ds
in
jp
fildl
xor
aas
pop
or
das
and
cmp
jl
jbe
aas
ljmp
mov
out
insl
rclb
test
lret
pop
imul
insl
add
movsb
cmc
xorl
cmp
sti
cmp
call
mov
adc
xor
sub
enter
xchg
popa
xchg
test
or
cli
inc
cmpl
mov
fnop
add
mov
cmc
orl
test
add
pop
or
jg
fistpll
adc
dec
or
add
cmpsl
mov
jne
into
xor
shlb
ret
adc
jmp
pop
jle
loope
test
add
pop
sbb
outsb
test
orl
cmc
and
add
jmp
cwtl
sbb
jecxz
clc
jmp
xor
leave
cmpsl
std
out
dec
dec
mov
sub
call
pop
jb
xchg
leave
xchg
pop
sbb
sbb
inc
dec
es
stos
pop
lods
mov
cmpl
push
mov
mov
divb
xchg
xor
xor
inc
fiaddl
push
aam
mov
push
enter
pop
pop
pop
lods
adc
scas
cmp
push
sbb
mov
repz
sub
iret
xorb
jl
insb
sbb
pop
inc
xchg
lfs
outsl
mov
sbb
cs
and
sti
inc
cmp
inc
pushf
adc
ret
dec
mov
inc
call
in
fldenv
es
pop
inc
push
push
pop
inc
pop
subb
sub
sti
cmp
dec
adc
std
sub
inc
pop
lret
sti
dec
imul
ja
loopne
or
sbb
jg
pop
loopne
inc
adc
testl
dec
lods
and
adcb
sub
daa
dec
aam
repz
enter
push
sub
aad
test
and
aas
sbb
in
jnp
ret
mov
nop
jae
inc
dec
addr16
bound
shrb
push
iret
stc
testb
rclb
jecxz
push
and
jecxz
frstor
push
das
jmp
pop
xchg
lds
fistpl
ja
int
lret
icebp
xchg
fs
xor
jle
pop
stos
dec
dec
ds
xor
stos
sub
test
pop
cmp
mov
incl
sub
stos
jmp
jo
dec
mov
cmp
add
mov
out
lret
shll
data16
testl
or
popf
sub
imul
bound
ss
imul
push
sub
cmpsb
push
jno
lods
out
push
mov
adc
pushfw
in
addr16
sbb
enter
stc
imulb
push
mov
shl
mov
sbb
fbstp
dec
xchg
imul
pop
dec
jnp
pop
leave
cwtl
lds
push
inc
push
cmp
daa
lcall
and
inc
mov
mov
lods
les
cmp
or
jne
stos
mov
mov
fldl
ss
clc
dec
arpl
fmul
dec
insl
imul
mov
xchg
les
sbbl
cmpsl
mov
xor
sub
xor
inc
addb
mov
or
lret
test
test
shlb
aad
xchg
inc
into
mov
ds
cmp
fs
mov
jmp
call
rcrl
imul
xchg
nop
sbb
ds
cmp
into
nop
inc
push
fldt
and
andl
cmc
jg
xchg
xchg
pop
jmp
loop
test
push
mov
jl
das
ret
je
pop
push
cld
cli
mov
stos
insl
mov
jg
pop
xchg
lcall
test
cmp
shld
mov
xor
pop
add
enter
pop
into
xor
cmp
ss
aam
fnstenv
push
and
insb
inc
mov
push
push
fwait
mull
xchg
sbb
repnz
inc
leave
push
adc
and
pusha
mov
xchg
shll
pop
adc
add
push
jl
clc
imul
je
jb
sub
or
fwait
lods
adc
insl
lods
ret
pop
shlb
stc
decl
fmuls
pop
mov
push
add
mov
leave
mov
cmp
outsb
jne
imul
scas
lock
xor
or
cmpsl
cmp
aas
adc
xchg
stc
enter
mov
dec
adc
pop
sub
push
jp
cmp
jmp
xlat
out
mov
sub
jg
addr16
and
dec
xchg
mov
adc
inc
mov
lds
shll
sbb
sbb
or
ljmp
leave
cmp
shll
mov
pop
cmp
mov
or
xcrypt-ctr
cmpsl
pop
rorl
stos
repnz
pop
push
push
push
test
cmpl
push
cs
jle
inc
adc
inc
mov
mov
iret
adc
or
icebp
ja
insb
adc
mov
idivb
add
rclb
xchg
jb
out
inc
sbb
push
mov
inc
fldt
cmpb
lahf
push
jecxz
xchg
in
pusha
xchg
dec
fs
pop
stos
jp
adc
inc
xchg
cmp
jnp
fs
nop
pop
leave
jae
movsb
inc
jmp
sub
outsb
inc
xlat
enter
or
or
pushf
gs
adc
xchg
or
loop
xor
push
cmp
sbb
xchg
jge
push
int3
repnz
adc
leave
cmpl
xor
fldl2e
xor
popf
push
in
xchg
out
stc
adc
mov
or
mov
push
pop
out
in
test
mov
and
add
inc
mov
add
lret
cmp
fs
sbb
jle
cmp
xchg
fsubr
mov
mov
pop
xor
je
inc
outsl
mov
outsb
jmp
add
jae
daa
iretw
cwtl
lods
movsb
clc
push
mov
imul
shll
mov
jnp
adc
andl
insb
pushf
lea
out
imul
xor
mov
rol
pop
cmpsb
frstor
movsb
out
sub
test
add
lds
xchg
cli
sub
add
ficoms
jo
or
vsqrtss
cmp
inc
and
test
mov
mov
fmul
jge
shlb
rcrb
into
je
and
test
dec
jge
daa
sub
dec
pushf
movsb
pop
jne
das
inc
sahf
mov
mov
shlb
pop
sbb
or
stos
xchg
in
dec
xchg
fisubs
jl
dec
jb
outsb
adc
cltd
sbb
cmp
mov
rcll
mov
shl
pusha
daa
rcrb
xor
jnp
das
sti
lods
inc
dec
sub
cmpsb
adc
jl
das
jbe
mov
mov
stos
and
inc
aam
je
add
jge
sbb
pop
push
cmp
es
negl
insl
xorb
pop
push
xchg
cmp
gs
scas
inc
icebp
add
mov
pop
scas
inc
orb
in
fdivs
mov
xchg
xchg
add
addl
out
sub
daa
xchg
cmpsl
inc
bound
loope
xchg
push
push
add
daa
xchg
push
aam
pop
cmp
shll
pop
stc
fwait
sahf
push
and
mov
in
mov
and
lock
iret
dec
cmpsb
rclb
faddl
push
and
inc
mov
add
push
stos
mov
inc
pop
adc
popa
lea
jp
pop
addr16
es
ss
or
pusha
inc
dec
push
jno
sub
inc
nop
pop
jno
or
mov
sahf
stos
push
rclb
cmp
adc
roll
sub
xor
ret
mov
addb
ss
int
iretw
ret
mov
pop
jns
push
icebp
mov
pop
jmp
push
movsl
dec
or
jmp
or
push
adc
ret
fucompp
pusha
jo
lods
mov
sbb
ja
negb
popf
xor
xchg
sbb
dec
sti
sub
aaa
test
testl
mov
adc
push
or
mov
lcall
push
out
jl
stos
mov
push
data16
jp
xlat
inc
test
push
aam
out
divl
sbb
adc
xor
push
enter
into
and
out
inc
iret
insl
in
addr16
out
cwtl
pushf
cmp
xor
out
sti
mov
push
inc
cld
fcom
add
pop
adc
cmpsb
mov
push
clc
adc
xor
fwait
cmpsl
mov
out
fldenv
inc
pop
inc
aas
fnstcw
jno
push
mov
sub
cld
dec
mov
dec
cmp
lods
sub
pop
jg
add
mov
and
fnsave
xor
lods
mov
pushf
cmc
sti
int3
inc
jnp
inc
fwait
ljmp
mov
push
ljmp
cltd
mov
aas
call
iret
lds
mov
pop
jae
scas
gs
pop
jmp
or
dec
sbb
fisttpl
shr
mov
xor
pop
cli
lahf
lea
and
jns
sbb
add
sub
push
in
lret
dec
enter
frstor
adc
dec
scas
adc
fcoms
and
cmc
in
fmul
addr16
lahf
xor
mov
pop
js
push
test
push
lods
push
mov
xchg
divl
fcmovnu
addr16
in
and
mov
lods
add
xchg
mov
arpl
pop
add
popa
stc
shlb
out
jae
imul
fmul
pop
pop
dec
pop
ret
xchg
hlt
dec
jmp
ds
or
cltd
cmp
cmp
arpl
out
mov
divl
sub
sub
jg
cmc
push
daa
mov
test
cmp
addr16
in
adc
gs
adc
xor
fmul
adc
out
idiv
pop
roll
inc
jmp
jno
das
xor
push
jle
push
aam
mov
js
rcl
mov
jb
ja
inc
cmpsl
mov
rorb
lea
out
test
addr16
xchg
in
stos
in
inc
xchg
hlt
test
inc
jns
push
pop
add
inc
bnd
push
sti
inc
outsb
lds
xchg
fisubrs
nop
or
sub
adc
xchg
lods
inc
adc
push
sbb
sub
leave
dec
cmp
leave
cmp
lcall
add
lods
adc
cmp
adc
call
cmp
pop
mov
push
xor
pop
call
sbb
popa
jg
ret
dec
leave
mov
fnstsw
ja
adc
cmp
or
mov
mov
mov
xor
dec
pop
or
into
cmpsl
minps
pop
sub
out
jl
push
pushf
mov
dec
lcall
dec
push
dec
xor
leave
testl
aam
pop
daa
and
jns
sbb
sbb
out
inc
add
mov
xchg
arpl
jl
push
in
ds
test
push
sbb
adc
jp
in
and
add
fistpll
in
sub
pushf
xlat
pop
sub
jecxz
jge
dec
cmp
hlt
imul
cmpsb
cmp
fsubr
arpl
push
pop
dec
push
and
aam
xchg
push
insl
xor
xchg
and
movsb
lea
add
push
push
xlat
cmp
inc
xchg
popa
loop
xchg
push
sbb
mov
out
adc
push
je
pop
mov
inc
jae
out
callw
outsl
leave
enter
shlb
or
jp
addr16
pop
cltd
repz
or
xchg
out
cmp
mov
push
movups
jbe
mov
add
jnp
mov
or
mov
jne
pop
sbb
or
adcb
cld
je
push
iret
mov
sub
jne
bound
xor
dec
jge
xor
sub
dec
cmp
fnsave
popa
cwtl
cmp
adc
xor
out
mov
xor
shll
or
pop
stc
cwtl
inc
outsb
adc
push
out
loopne
imul
mov
pop
bound
sbb
mov
out
push
sti
inc
jl
cmpsl
inc
fs
mov
sbb
cltd
icebp
insl
jnp
pop
sbb
mov
les
addr16
push
jae
add
add
aas
in
inc
push
mov
sti
in
mov
int3
jns
jp
pop
sbb
loope
cmpsb
mov
xchg
sti
cmp
jmp
dec
or
pop
stc
fmul
popf
dec
ss
push
mov
jbe
lea
lock
out
cmp
dec
frstor
dec
jg
dec
ja
test
and
push
pop
pusha
in
sarl
sbb
cmp
cmp
aaa
mov
pinsrw
add
and
jae
lods
sbb
icebp
pop
xchg
pop
add
add
movsl
lods
or
pop
aam
xchg
out
mov
push
or
add
jno
mov
adc
popa
lea
dec
xchg
xor
fdivr
ljmp
and
jno
je
outsl
lcall
xchg
cmovs
adc
shll
shlb
pop
dec
rorl
sub
test
pop
adc
pop
fidivl
and
jp
adc
test
pop
or
test
xor
out
int
mov
ss
ss
pop
mov
ds
cmpsl
and
adc
test
add
or
xchg
mov
dec
sub
add
add
or
mov
jnp
ret
dec
jae
les
inc
xor
xlat
repz
or
mov
and
cmp
and
mov
jno
and
dec
outsb
dec
dec
rorb
jnp
xchg
sub
fldt
pop
inc
aad
aad
in
mov
scas
call
push
stos
sbb
jmp
mov
xchg
cmp
insl
mov
loopne
push
loop
rclb
xchg
push
fnstenv
out
mov
add
daa
adc
hlt
pushf
xchg
pusha
pop
fsubr
and
icebp
inc
add
xlat
outsl
cmpsb
ja
aad
sarl
shr
sbb
insl
push
jmp
sub
lods
xchg
imull
andb
fcmovb
push
push
hlt
adc
mov
jmp
xchg
and
fwait
inc
xchg
sub
cmp
mov
out
pop
mov
push
xor
jmp
mov
mov
dec
mov
nop
cli
mov
inc
mov
test
aad
int3
jmp
push
jo
cmpsb
mov
insb
adc
pop
sti
xchg
adc
out
hlt
loopne
xor
fildl
xchg
es
pop
jb
sbb
inc
mov
xor
adc
repz
enter
and
fdivrs
xchg
mov
dec
adc
test
fwait
xor
daa
push
dec
test
mov
dec
inc
mov
cmc
cmpsl
dec
adc
ret
adc
call
std
ret
aas
push
xor
push
repz
loop
xor
fistps
rcrl
inc
pop
jg
inc
and
lret
xor
fisttpl
sbb
cmpb
adc
mov
aaa
sub
jp
stos
mov
push
sbb
fldl
pushf
or
or
repnz
pop
inc
xor
clc
add
xchg
xor
xor
sar
cmp
lret
xor
adc
pop
in
and
ljmp
lcall
push
lea
divl
outsl
shlb
jmp
jp
mov
jp
jge
mov
sub
popf
cltd
popa
arpl
jne
inc
fistpl
push
hlt
dec
push
loopne
shr
add
insb
test
scas
into
inc
mov
push
add
lret
ret
int3
xor
push
or
in
mov
cmc
push
cmp
hlt
pushf
inc
test
fucomi
aaa
pop
pop
dec
mov
xor
sbb
add
in
lea
cmp
sbb
js
or
adc
idivb
and
sti
std
je
pop
mov
mov
pop
lods
mov
push
inc
jns
and
aad
sbb
jo
inc
mov
popf
and
dec
arpl
sbb
fstps
and
incl
imul
dec
inc
fs
addr16
fisubl
inc
and
icebp
xor
inc
mov
ds
ss
jmp
cmp
push
les
mov
add
aaa
xchg
aad
decb
ror
xchg
pop
lret
cld
or
push
cs
xor
mov
dec
dec
cwtl
push
test
cmp
hlt
sub
dec
in
mov
mov
cs
lcall
push
fsubrs
add
scas
gs
cmpsw
mov
sub
sbb
xchg
mov
sbb
dec
ds
and
adc
xlat
dec
mov
idivl
in
stc
inc
popf
fisubrs
xorl
ja
popf
dec
lahf
adc
out
mov
ja
push
mov
xchg
scas
jle
mov
pop
js
add
adc
xor
push
and
push
jecxz
inc
xchg
jo
add
fsubl
nop
xchg
inc
jo
imul
les
cmp
aad
mov
scas
jmp
cld
pop
jnp
cld
nop
test
mov
test
xchg
jmp
xor
inc
dec
mov
xor
lcall
xor
leave
xchg
pop
mov
mov
shl
xor
dec
dec
test
inc
xor
fdivrl
jne
sbb
sbb
jge
das
iret
shll
and
xor
js
inc
lea
outsb
pop
ja
lret
cmp
inc
adc
stos
imul
mov
inc
add
adcb
xchg
aam
sbb
inc
push
setb
push
mov
mov
mov
sub
outsl
cmpsb
adc
push
lea
sbb
popa
pop
mov
mov
out
fnstcw
pop
out
pop
aaa
mov
cld
lods
and
mov
daa
cmpsb
jmp
push
addr16
outsb
out
mov
ds
add
out
imulb
xchg
pusha
arpl
dec
outsb
adc
xchg
mov
push
or
int
pop
mov
inc
and
mov
jae
xchg
adc
mov
cld
lret
jns
add
xor
test
dec
and
xchg
aad
xchg
ret
pop
adc
adc
inc
out
test
mov
jmp
addr16
pop
mov
jb
sbb
repnz
pop
lods
test
and
in
test
push
or
outsb
ds
add
loope
push
lret
lcall
iret
ret
or
outsb
sub
and
mov
pop
ja
in
cmp
outsb
xor
faddp
pop
mov
jno
mov
data16
out
lods
pop
xchg
lret
cld
sti
out
daa
rorb
mov
push
inc
test
iret
and
mov
iret
ret
and
cmp
shrb
inc
mov
inc
mov
mov
jg
inc
and
mov
loop
std
in
test
test
lods
mov
push
iret
cmpsb
adc
dec
inc
sub
int3
out
or
insl
inc
rolb
sbb
lcall
adc
cs
jge
jnp
imul
cmpsb
movsb
push
test
stos
mov
in
repz
movsb
mov
mov
jo
xchg
or
mov
aad
mov
inc
mov
rolb
sbb
dec
mov
add
jne
jne
sbb
pop
test
pop
pop
cmpsb
ds
add
mov
addr16
jno
imul
sub
pop
xor
test
mov
cmp
mov
sub
loopne
xchg
sbb
xor
rcrb
pop
inc
push
push
pop
pop
xchg
stos
mov
mov
ret
inc
std
add
dec
dec
mov
pushl
or
test
jne
or
es
lods
je
and
mov
ja
sbb
inc
xor
es
ja
cmp
xchg
data16
test
add
lds
not
inc
sbb
mov
ljmp
inc
shrl
dec
xor
out
xchg
repnz
mov
or
mov
lahf
mov
pop
orl
imul
xchg
cmp
mov
call
movsb
pushl
nop
stos
daa
and
dec
leave
xchg
stc
and
add
xor
jl
mov
pushf
ds
xor
push
rolb
ljmp
out
loop
pop
and
adc
arpl
outsl
pop
jne
adc
xchg
test
xchg
outsl
sbb
push
jne
loope
testl
sahf
lock
xchg
push
repnz
rorl
xchg
inc
ret
dec
popf
sbbl
jle
mov
xchg
mov
fcomps
inc
std
inc
aaa
jp
call
cmc
adc
xchg
push
lret
cmpsl
in
lds
xchg
xchg
ret
flds
jge
cwtl
xchg
mov
jo
je
and
mov
adc
imul
mov
in
dec
fbld
jge
push
adc
cmp
xchg
imul
xchg
in
insb
cmp
pop
packsswb
push
out
or
or
mov
adc
ljmp
adc
fdivs
insl
xchg
sub
cli
roll
pop
push
pop
in
nop
sub
sbb
xor
test
add
adc
negb
fucomi
jecxz,pt
into
cmp
add
sti
pusha
inc
push
int
std
popa
cli
clc
pmaddwd
adc
imul
lods
addb
jmp
pop
fs
andl
les
ret
inc
xchg
sbb
lahf
sahf
dec
adc
mov
xorb
mov
pop
fmul
sub
loope
les
call
popa
mov
sahf
push
dec
cli
sahf
movsl
push
xor
inc
incb
cwtl
push
inc
mov
sbb
enter
in
mov
mov
testb
mov
add
xor
test
scas
adc
sub
pop
adc
iret
bound
push
pushf
in
sbb
dec
pop
pop
out
into
pusha
push
mov
add
imul
in
sti
inc
push
dec
add
sti
cs
mov
adc
inc
and
test
dec
xchg
mov
xor
ss
cmp
dec
mov
add
add
and
pop
aam
dec
xchg
cld
into
inc
inc
stos
dec
pop
xor
mov
sub
fucomp
xchg
inc
aad
into
inc
aad
std
jb
jmp
sub
aaa
les
mov
jnp
pushf
xor
mov
cmp
loopne
sub
pop
inc
insl
inc
fmuls
cmp
cmpsb
mov
outsb
sub
popf
sub
iret
inc
bound
jne
pop
inc
jl
imul
sbb
int
xor
jbe
dec
ss
imul
lock
and
jl
ds
imul
stc
stos
std
add
lcall
sbb
movsl
sub
xor
out
mov
rcll
xchg
or
xchg
fcompl
adc
xor
and
arpl
adc
cmp
or
sbb
mov
fnstsw
pop
sbb
cmpsl
int3
repz
inc
xor
into
adc
jb
arpl
and
pop
out
mov
push
push
sub
and
mov
cmc
xchg
xchg
cmpxchg
jns
xchg
loope
rorb
pop
ss
sbb
ja
mov
insb
jne
push
adc
cmpsl
in
push
testb
js
subl
mov
and
gs
incl
cmp
mov
sub
or
fsubrs
data16
add
ror
aas
fmuls
cld
repz
adcl
stos
enter
mov
movsl
insl
outsb
cmpsb
fcoml
inc
cmp
jo
les
insl
mov
xchg
adc
pop
push
pop
add
mov
inc
xchg
dec
adc
jnp
dec
stos
inc
int3
jl
cs
xchg
push
sbb
push
mov
push
inc
sti
in
bound
jae
rcll
int
into
es
mov
js
add
dec
sub
sahf
pop
cmp
sbb
inc
add
jge
sbb
scas
sub
inc
mov
inc
lods
xchg
xorb
lock
sbb
test
mov
xchg
shlb
addr16
push
arpl
mov
xchg
push
out
fstpt
int3
repnz
or
sbb
movsb
popf
repnz
iret
adc
cltd
mov
mov
ret
out
xchg
mov
mov
arpl
adc
jmp
inc
add
inc
insl
pop
stos
stos
sub
adc
pop
loop
cltd
push
mov
jle
mov
test
pop
pop
jg
pushf
subl
int
xchg
mov
mov
nop
mov
std
xor
push
scas
hlt
sbb
or
addr16
cmc
mov
lods
inc
rol
adc
lds
mov
xor
ljmp
in
dec
mov
stos
xchg
orl
sbb
xchg
aam
dec
and
pop
mov
jge
or
jl
fstpt
xor
cltd
in
jp
dec
leave
lahf
fdivrl
dec
xchg
push
sarb
lods
jle
imul
ret
sahf
pop
mov
add
test
int
jns
add
rolb
pop
aam
js
arpl
inc
mov
and
andl
ret
inc
dec
out
and
jnp
dec
in
inc
jmp
imul
aaa
outsb
and
jge
sbb
dec
jb
xchg
push
pop
push
inc
lcall
jl
push
add
inc
dec
pop
lret
cmp
pusha
jg
sbb
mov
sbb
outsl
rol
push
jge
out
xchg
push
pop
sub
push
sbb
dec
cli
stos
out
and
shll
lcall
cwtl
fldl
or
insb
ss
and
xor
in
bound
leave
jno
pop
mov
and
test
ss
inc
jecxz
into
popa
clc
fwait
xorb
ror
cmpsl
stos
fld
xor
loop
subl
pop
shll
int
ja
dec
jmp
and
pop
stc
js
mov
sub
inc
xor
iret
and
add
push
std
insl
lds
enter
sub
mov
jl
jae
nop
pushf
popa
int3
xor
ljmp
sbb
arpl
insb
xor
bound
mov
sbb
ja
mov
cli
call
xchg
bnd
jge
push
push
inc
daa
dec
push
in
fs
iret
dec
sub
pop
enter
gs
mov
rclb
push
ljmp
sahf
popa
xchg
out
jle
push
and
jne
lods
mov
out
enter
popf
mov
popf
out
pop
nop
cmpsb
stos
adc
cmpsl
std
aaa
outsb
mov
mov
dec
leave
mov
enter
movsl
filds
sahf
pushf
incb
jns
mov
fbld
out
push
adcl
lcall
inc
cltd
push
iret
xchg
push
xchg
jo
cli
pushf
mov
push
sub
or
jp
add
stos
mov
or
out
pop
jo
lahf
les
fldenv
inc
pop
cmpl
and
cli
and
push
jecxz
out
sbb
in
adc
insl
xchg
lcall
cmpsl
mull
pop
fwait
jle
mov
imul
lahf
dec
sbb
jae
insb
pop
jo
movl
sti
sub
jecxz
inc
leave
jle
and
xor
mov
movzwl
cmp
rcrb
pushf
aam
arpl
sub
arpl
mov
cmpb
dec
movsl
xchg
fiaddl
mov
int
fistl
jle
jns
cmp
icebp
sahf
lret
cltd
cld
ret
cmp
shll
fwait
jnp
and
stos
inc
push
sti
jne
mov
lret
mov
and
and
mov
lock
lods
jecxz
pop
add
sti
mov
pushf
mull
mov
pop
ret
or
pop
xor
roll
aad
push
cmc
mov
cmp
out
in
pop
ds
ret
push
inc
mov
or
arpl
cmp
xchg
iret
adc
mov
int3
cmp
in
push
push
sub
adc
out
inc
pop
mov
rclb
lds
mov
rclb
outsl
pop
push
clc
jmp
pushf
mov
dec
ja
in
jp
jge
pop
or
or
push
ret
inc
test
jnp
pop
xchg
loop
daa
and
dec
insb
cld
mov
jle
push
imul
push
add
xchg
and
icebp
cmpsl
pop
cmpsb
or
xchg
xchg
pop
mov
jg
pop
inc
mov
aad
leave
loope
sti
mov
fadds
sbb
ds
push
aam
fwait
clc
std
sbbb
and
stos
push
cmp
pop
and
cmpsb
inc
mov
and
das
out
sub
or
pop
cmc
sbb
add
and
xor
cld
icebp
sub
fmul
xchg
push
add
je
cmpsl
and
scas
pop
mov
scas
cmp
mov
adc
xchg
dec
sbb
rorb
push
mov
sbb
repz
adc
jge
int3
aad
cltd
orb
in
xor
and
ljmp
data16
push
clc
cmc
xchg
mov
xchg
pop
mov
xor
jge
cli
subb
jo
insl
test
jp
arpl
dec
call
dec
jno
pop
mov
mov
loop
inc
push
repz
sub
fcomi
cli
ss
push
push
test
loop
lea
pushf
pop
dec
push
push
cs
inc
inc
push
fldl
incl
adc
sti
psrld
pop
dec
jmp
loop
lds
lea
jle
mov
dec
cmp
test
or
jmp
mov
adc
popf
mov
movsb
sbb
xchg
arpl
call
jne
mov
decl
in
jne
adc
pop
movb
jmp
test
push
cld
mov
sub
jbe
es
test
inc
and
dec
pop
pushf
pop
push
es
popa
jmp
rcrb
in
or
inc
jg
mov
cmpsl
pop
sbb
pop
xchg
daa
mov
addr16
aad
jge
jge
xchg
bnd
mov
xchg
xchg
insl
jmp
movsb
sahf
hlt
sub
mov
lods
jb
cmp
aad
out
adc
je
cli
and
in
test
subl
lahf
aad
push
jle
xchg
mov
dec
mov
adc
roll
jnp
and
lret
lret
repz
xchg
shrb
mov
cmp
or
test
cld
cld
aam
in
sub
das
repnz
adc
lret
push
ret
hlt
adc
mov
pop
in
adc
mov
lds
fs
sub
imull
jecxz
dec
mov
lret
pop
ja
xchg
sarl
dec
inc
mov
pop
xchg
les
jae
dec
xlat
dec
add
sub
xchg
hlt
fnstcw
or
adc
pop
inc
data16
adc
sub
out
xchg
jno
mov
mov
les
jae
dec
fisttpl
shrb
jnp
or
subl
jmp
shl
pushf
and
in
push
mov
pop
ss
les
jnp
es
sbb
push
jb
xlat
js
shll
xorb
jae
cmp
and
xchg
fists
push
xchg
push
lods
out
jbe
pop
push
mov
lods
popf
stos
push
fistpl
enter
insl
push
mov
dec
test
int3
insb
and
jge
sbb
test
jp
fistpll
and
lcall
pop
xchg
nop
or
mov
jmp
sbb
ret
push
mov
inc
xor
es
push
sub
icebp
fdivs
pop
stos
push
cmp
push
mov
sar
mov
inc
xchg
dec
mov
push
xchg
cltd
call
jmp
sub
mov
xlat
in
adc
lock
test
fnsave
popa
cmc
and
ficompl
push
and
repz
dec
idivl
mov
repnz
repz
call
add
mov
imul
mov
or
jle
add
mov
shrl
outsb
movsl
mov
hlt
and
stos
stos
mov
or
sbb
push
push
enter
push
mov
mov
and
adc
fs
push
and
sahf
lock
mov
pop
xor
mov
outsl
adc
mov
pusha
cli
xchg
jmp
cmp
mov
add
arpl
cmp
in
std
iret
add
cmp
fsubrs
sti
sub
mov
rcrl
pop
outsl
adc
ficoml
dec
sub
in
test
jno
pop
dec
out
flds
aaa
pop
inc
fldenv
add
clc
shrl
lcall
cmpsl
xor
or
jle
adc
add
inc
or
pop
repnz
cmpsb
adc
jle
aad
dec
test
leave
shl
insl
fstpl
jbe
inc
xor
cmp
pusha
and
pop
mov
sbb
sti
jl
mov
fistl
mov
aad
or
jnp
push
mov
mov
out
pop
sahf
dec
jns
cmp
or
pop
cmp
sub
mov
inc
jno
arpl
addr16
or
push
test
in
mov
popf
lret
insl
adc
icebp
mov
movsl
mov
jnp
mov
push
mov
xor
test
repz
and
jl
ret
cmp
ljmp
pusha
les
lea
push
cs
test
push
inc
faddp
add
cmp
inc
div
inc
dec
popf
mov
xor
add
cli
add
cmp
add
scas
sbb
mov
lret
aaa
add
mov
xor
add
stos
ds
push
xchg
push
mov
jbe
push
hlt
cmp
fdivr
dec
hlt
mov
add
dec
mov
pop
jo
inc
aaa
out
daa
push
mov
cmp
cmpsl
stos
mov
shrl
lahf
daa
ror
dec
repnz
pop
test
sbbl
adc
call
mov
sbbl
mov
or
notb
adc
mov
es
dec
or
push
sbb
mov
sbb
pusha
in
dec
sub
sbb
mov
fidivrs
pop
adc
add
aas
jb
call
cmp
cmp
repnz
xchg
cli
jns
push
in
arpl
sahf
out
out
jg
repz
inc
mov
fiadds
pop
insb
xor
mov
xchg
xlat
insl
push
mov
jl
pushw
aas
jnp
mov
in
jg
test
pop
test
cmpsl
mov
sbb
push
aaa
add
add
jo
pop
pushf
fbstp
adc
movsl
addr16
les
ja
fldl
cmpsl
mov
sbb
pop
push
stos
cmpsb
xor
mov
adc
jmp
mov
push
pop
inc
jno
push
mov
push
push
imul
push
int
adc
sarb
push
sbb
dec
jle
pop
mov
ja
aas
negb
mov
mov
loopne
cmp
roll
ds
das
sbb
es
and
sub
dec
push
xor
or
cmpsb
lock
dec
or
daa
ss
cmp
jg
in
pushf
out
adc
adc
pcmpeqb
or
stos
dec
sbb
out
mov
mov
shlb
sub
xor
cltd
sbb
sub
add
mov
cmp
imull
dec
rorb
and
cmp
cmp
dec
cwtl
es
mov
je
aaa
in
imul
and
and
sbb
xchg
arpl
repnz
mov
das
les
and
movsb
mov
cmp
jecxz
and
or
lcall
push
int3
clc
repnz
data16
lcall
cmp
add
insb
and
rol
jns
dec
cmp
push
push
pmullw
and
ret
mov
adc
std
fistpl
stos
push
and
ds
sbb
fnstcw
inc
stos
in
adc
ss
into
ret
dec
frstor
into
and
enter
shrb
sbb
into
dec
int
mov
das
cs
xchg
xor
dec
shll
mov
cmp
cs
repz
push
lock
pushf
roll
lret
inc
arpl
push
and
dec
xor
cs
mov
xor
outsl
add
sub
pop
mov
sub
cmp
jne
ds
sbb
sti
inc
int
or
dec
shrb
and
xlat
xlat
sbb
stc
nop
push
dec
enter
bound
repz
push
push
call
shlb
adc
aaa
sbb
or
xor
adc
outsb
clc
pop
cs
pop
cmpsb
arpl
int
roll
adc
sbb
cwtl
jecxz
adc
mov
ss
int
pop
xlat
mov
int3
jbe
add
pop
push
in
adc
es
cli
xchg
rolb
pop
loopne
int3
je
sub
push
or
sbb
ror
test
add
dec
in
ss
xchg
rcrl
pop
jle
jb
push
mov
jge
push
int
ret
push
out
lret
sbb
push
or
mov
sbb
add
iret
push
inc
fdivrs
notl
mov
and
or
addr16
test
push
hlt
paddsw
pop
loopne
add
cmp
pop
leave
cwtl
fidivs
adc
pop
jae
not
pop
stc
in
adc
idivl
dec
jne
mov
cmp
addr16
shr
pop
push
rcll
fucomi
jnp
cmp
push
lahf
lcall
xchg
add
pushf
add
aam
xor
jo
sarl
rcl
pop
push
out
pop
loop
addr16
push
ss
fisttpll
out
adc
mov
int
xlat
add
mov
dec
mov
lea
push
fmul
mov
daa
testl
xor
arpl
jmp
mov
mov
idivl
sbb
mov
pop
or
popa
je
fs
out
out
es
ss
fsubrs
stc
int
dec
adcb
rorb
jnp
cmpsl
adc
dec
add
xchg
lret
outsl
in
push
xlat
popf
subb
cs
out
icebp
icebp
ret
lar
inc
test
loop
ljmp
jae
aaa
jmp
loop
xlat
xor
xor
ss
and
push
shrl
sbb
aam
push
loop
cmp
jl
push
adc
fcoms
push
in
loopne
mov
push
pushf
xor
xchg
insb
pop
xchg
in
mov
hlt
sub
mov
fwait
std
push
std
sub
data16
ss
add
xchg
test
test
push
mov
xchg
pop
fldl
mov
jno
mov
pop
mov
xchg
mov
inc
not
icebp
sbb
into
bound
jno
ljmp
imul
testb
dec
adc
pop
xor
sahf
cmp
nop
fcoms
fndisi(8087
or
xor
mov
mov
cmp
out
pop
mov
lea
add
adc
imul
push
sarb
lds
sbb
add
push
adc
or
push
dec
jbe
pop
insb
sbb
insl
sub
lret
out
mov
adc
cli
jle
iret
dec
lods
mov
cmp
mov
and
adc
pop
or
xor
inc
and
or
adc
jno
cmp
iret
add
adc
or
dec
mov
inc
or
lret
aas
je
mov
int
mov
into
push
inc
mov
xchg
pop
jmp
xor
push
enter
push
mov
xorb
aaa
push
repz
cmp
pop
rorb
pop
xor
loop
hlt
and
add
or
ljmp
imul
jbe
sub
mov
mov
fs
sub
sub
push
fisubrs
std
cmp
outsl
and
mov
add
das
ds
sub
in
add
insl
aaa
xlat
test
sbbb
inc
xor
mov
les
inc
ret
test
shrl
mov
les
jb
fldt
xchg
xlat
nop
add
dec
lret
push
mov
jl
jmp
sarl
jb
repnz
imul
shrb
dec
cmpl
push
lods
mov
xchg
push
dec
adc
imul
mov
emms
fcmovb
inc
rcrl
gs
jle
aas
in
lret
inc
push
popf
push
push
scas
fdivrl
fbld
sbb
outsb
rorl
enter
in
cmp
ficoml
jmp
repnz
adc
inc
cltd
dec
push
push
mov
push
pop
rcll
aas
popa
lret
les
push
rclb
fdivl
xchg
fcmove
inc
lret
adc
sub
in
cmp
xchg
adc
lea
xor
fistl
gs
les
push
fcoml
fsubrl
xchg
or
int3
out
ret
adc
sub
loope
inc
push
cltd
adc
mov
insb
xor
pop
mov
dec
lret
movsb
push
jge
mov
fmulp
int3
cmp
push
cmpsb
sub
xor
sub
push
lds
sbb
icebp
js
xor
out
mov
xchg
mov
lahf
ja
rorb
xchg
mov
inc
ja
shlb
rcl
gs
lret
lock
sub
add
fmul
xchg
jmp
dec
fcmovnb
out
cmpsb
lret
adc
pop
push
mov
sub
bound
xchg
gs
jle
aas
gs
mov
das
fdivrl
xchg
pop
jno
int3
repz
into
cmpsb
jmp
sub
in
dec
inc
push
popf
adc
mov
xor
fisttpl
aas
jge
mov
insl
push
les
faddl
xchg
pop
jno
int3
add
fisubl
stc
dec
cmp
xchg
adc
js
xor
pop
xchg
lds
mov
xor
mov
sub
rcrb
roll
leave
lret
and
push
cmp
fcoml
int3
xchg
les
shrb
pushf
test
jns
mov
imul
fdivl
xchg
pop
jno
int3
test
xor
in
dec
inc
push
cltd
adc
js
xor
lret
loopne
jne
lods
out
js
xchg
inc
push
mov
pop
ja
shl
rcll
gs
jle
aas
stc
lret
xor
push
inc
mov
jno
int3
xchg
mov
or
push
sbb
popaw
sbb
aas
xor
push
add
fmul
xchg
jmp
dec
fcmovnb
out
cmpsb
lret
adc
fs
mov
dec
subb
imul
gs
jle
sub
push
enter
xchg
pop
jno
int3
or
shlb
stc
dec
xor
adc
cmpl
popl
pop
scas
pop
dec
xchg
dec
les
pop
adc
incb
adc
out
js
xor
ret
inc
mulb
mov
mov
js
push
dec
int3
outsl
les
pop
adc
cld
rcll
out
js
xor
ss
lcall
cli
rcr
roll
jle
aas
mov
pusha
push
movsl
push
js
adc
dec
lods
push
adc
cmp
mov
pop
ja
shl
rcrl
gs
jle
aas
in
lret
inc
push
popf
push
push
stos
fdivl
sarb
xchg
out
js
xor
or
and
sub
psrlw
or
jle
aas
stc
lret
xor
push
inc
cmpsl
faddl
int3
add
xchg
jae
js
xor
mov
dec
ja
sarb
rcr
gs
lret
cld
push
aad
add
fadd
xchg
shll
int3
iret
les
pusha
movsl
dec
js
push
jnp
xchg
pop
dec
fistl
imul
xor
ds
negl
ret
std
shll
test
pop
push
mov
push
jae
adc
jns
pavgw
cmp
pop
and
jle
aas
int
sbb
push
sub
fsub
xchg
mov
xchg
int3
mov
adc
adcb
arpl
outsb
shlb
rcl
gs
lret
add
fstpl
adc
fdivr
xchg
fbstp
int3
lret
les
pusha
mov
sbb
push
mov
mov
xor
or
sub
and
neg
rcll
gs
jle
aas
stc
lret
xor
push
dec
cmpsl
faddl
int3
add
lahf
jae
stos
and
pop
jp
push
jno
int3
inc
les
sbb
push
xor
js
xor
lret
inc
cli
mov
mov
xchg
shlb
jle
aas
test
mov
gs
aas
adc
push
loopne
fsubl
xchg
repz
int3
jecxz
cmpsb
rcll
out
cmp
popf
dec
push
push
lea
fs
js
xchg
jb
mov
jle
aas
jge
mov
imul
xchg
pop
jno
int3
pinsrw
out
ret
icebp
dec
sub
adc
js
xor
call
xchg
aas
out
mov
insl
adc
out
js
xor
xor
repz
cli
rcr
sarl
gs
jle
aas
lret
fs
mov
push
lods
stos
mov
jle
lret
mov
insl
push
les
fmull
xchg
pop
jno
int3
add
cmpsb
call
lret
icebp
dec
sub
adc
js
xor
stos
mov
jg
lret
pushf
push
jne
lods
inc
fsubl
aaa
jno
int3
daa
les
cmpsb
pop
adc
in
and
push
fsts
sbb
cmc
js
xor
loop
lret
inc
sahf
mov
stos
ja
rolb
push
xchg
arpl
int3
push
les
dec
mov
enter
fsub
cmp
xor
rorb
fistps
xchg
shrb
jns
pop
xor
adc
dec
lahf
jle
aas
or
loopne
cmp
lock
ficoms
jmp
repnz
adc
dec
incb
adc
js
xchg
js
mov
jle
aas
jno
test
popa
pop
mov
and
push
cmpsb
adc
ss
sub
push
lds
sbb
stc
js
xor
sahf
or
stos
sbb
mov
lea
inc
mov
dec
ja
shlb
shl
gs
lret
add
push
adc
fdivr
xchg
int3
mov
xchg
cmpsb
cmpsl
adc
insb
push
movsl
adc
pop
jne
out
dec
cmpsb
push
adc
insl
dec
les
adc
out
js
xor
shlb
fbstp
ror
rorl
lea
aas
mov
push
jnp
inc
mov
push
adc
js
xor
ss
repz
mov
stc
shll
gs
lret
pop
push
mov
push
jg
pop
nop
push
jne
lods
out
js
xor
add
emms
faddp
sti
rcl
gs
jle
aas
loope
cmp
push
dec
scas
fdivrl
int3
mov
push
mov
inc
js
xor
or
es
shrb
shr
gs
lret
adc
push
sub
fsub
xchg
mov
les
xorb
dec
or
inc
sbb
add
pop
cmp
jle
aas
adc
push
sub
fsubr
xchg
mov
xchg
int3
mov
adc
mov
dec
mov
pop
sarl
push
or
and
jecxz
cmpsb
rcll
divb
xchg
dec
dec
push
adcl
push
jae
fisttpl
aas
jge
mov
imul
cmpsb
add
es
push
leave
adc
out
js
xor
xchg
mov
mov
icebp
pop
cmpsb
sahf
inc
push
rolb
int3
gs
lret
cld
push
rcrl
or
fdivr
xchg
int3
mov
mov
mov
insl
andb
adc
inc
insl
rcll
aas
sbb
rclb
push
in
pop
fsubl
xchg
divl
int3
out
ret
adc
cmp
xchg
dec
dec
push
adcl
je
mov
fistl
aas
jns
mov
imul
cmpsb
sbb
cs
rorl
push
lds
sbb
icebp
js
xor
out
mov
xchg
mov
iret
and
das
adc
insl
dec
test
add
mov
fdivrs
xor
movsl
jp
popf
sti
dec
imul
xor
insb
cmp
mov
arpl
imul
fs
ja
xor
ds
addb
cmp
testb
push
mov
cmp
push
adc
lret
ss
jg
add
bnd
jge
sub
pavgb
cmp
push
nop
dec
cs
push
jmp
sub
push
and
mov
xchg
addr16
add
or
jg
inc
pushf
dec
test
out
std
sub
and
into
cld
out
xchg
lds
shlb
sbb
rcll
mov
cmp
and
fcmove
jbe
icebp
adc
and
rcrl
cld
popa
rolb
data16
or
outsb
lret
aas
jmp
sbb
mov
dec
addl
icebp
sbb
or
xor
mov
ds
into
xor
and
cmp
mov
push
xchg
ja
out
fldenv
or
loope
inc
das
pop
repz
mov
insl
cltd
arpl
sarb
adc
or
lods
ss
gs
pop
add
pop
mov
mov
mov
ss
fwait
inc
inc
paddusb
sub
adc
xor
cmp
movsl
out
push
aad
pop
repnz
nop
mov
adc
xchg
sub
pushf
sbb
xor
pusha
into
adc
les
lock
repz
and
inc
std
mov
cmp
test
clc
add
pop
ss
xor
or
pop
inc
ds
and
dec
sub
cmp
in
jl
idivb
pushf
sbb
aaa
and
sbb
cmp
mov
cmp
add
roll
cmp
cld
mov
adc
lods
sti
mov
sub
fdivrs
mov
mov
pop
pop
mov
icebp
add
shll
decb
in
adc
add
fmul
and
daa
aaa
addr16
std
pop
xor
and
lcall
mov
sub
testb
and
dec
inc
ret
inc
cmp
in
loope
add
pushf
stc
xor
out
fnsave
scas
mov
jg
arpl
mov
and
inc
shlb
mov
rclb
jae
jnp
sahf
cmp
dec
addr16
stos
sbb
xchg
push
and
lods
xlat
jno
jmp
jg
adc
stos
dec
out
sti
shr
addr16
shr
adc
jle
mov
and
and
arpl
roll
out
pop
jo
or
cmp
paddsb
addr16
cltd
in
outsl
std
leave
sbb
adcb
inc
imul
mov
pushf
loopne
mov
mov
sub
and
xor
pop
lods
aas
add
adc
sbb
or
jo
into
call
adc
inc
pop
sbb
mov
testb
xor
test
pop
testb
push
fcompl
xor
jecxz
cld
xor
and
jbe
les
push
sbb
ds
decb
xlat
pop
in
jno
mov
sub
test
sbb
sahf
cmp
push
xchg
mov
aas
out
adc
ja
pop
lock
in
xorl
data16
stos
mov
sbb
mov
push
sbb
adc
xchg
pop
cmp
mov
nop
cltd
cltd
loop
xor
dec
hlt
push
inc
or
jg
push
lcall
adc
negl
jnp
sub
adc
in
outsb
xrelease
call
arpl
inc
rcr
add
xchg
push
stos
jg
shlb
arpl
mov
icebp
ljmp
incl
sub
faddl
es
push
mov
call
inc
xor
pop
adc
xchg
insb
adc
iret
in
jae
pushf
xchg
leave
cld
mov
add
add
hlt
xchg
out
leave
cmp
ret
mov
pushf
jg
mov
jmp
mov
stc
push
ja
pop
mov
in
sar
and
push
mov
stc
push
pop
sarb
adc
loopne
push
outsl
xchg
mov
icebp
jae
incb
pop
cmp
adc
xchg
insl
cmp
ret
andb
mov
lods
push
pop
mov
dec
dec
cld
sub
sub
mov
cmp
movl
or
jg
decl
xor
jg
movsb
mov
stos
mov
arpl
jo
xor
lods
fnsave
leave
push
xor
ss
and
addr16
popf
sub
mov
mov
inc
ret
sub
sub
jle
faddl
mov
je
jg
cmpsl
ljmp
mov
or
shll
scas
add
or
lods
movsl
pop
into
xlat
jle
aam
jns
sub
pop
mov
dec
outsb
insl
out
jbe
sbb
adc
ret
js
cs
push
jo
jge
sarl
lret
stos
dec
pop
es
adcb
inc
jmp
fildl
and
dec
dec
aas
ret
int3
xchg
xor
dec
daa
add
pop
inc
inc
mov
ja
adc
cmpb
neg
push
bound
and
sub
add
cwtl
pop
add
lods
mov
xor
sbb
sub
xchg
in
neg
jg
lcall
add
dec
and
fildl
test
outsb
andl
jg
jbe
imul
xchg
aam
xor
jnp
cmp
adc
pop
jne
cmp
adc
inc
orb
cmp
adc
lods
addr16
xchg
jg
xchg
ljmp
int
add
das
mov
adc
pop
jecxz
push
aad
mov
pop
outsb
inc
test
inc
loope
push
inc
cmp
add
cwtl
lock
gs
jecxz
inc
sub
and
cs
and
pop
dec
add
into
dec
int3
pop
or
cmp
and
test
mov
cmpsl
bound
push
fldenv
shrl
and
xor
dec
mov
jb
push
and
aam
jl
lea
xchg
leave
outsl
adc
loope
sub
repnz
pop
outsl
pushf
aam
and
movsl
les
sub
enter
fdivl
cld
push
jmp
gs
ss
push
repnz
rcrl
lock
call
mov
mov
xchg
adc
push
clc
enter
xor
push
or
jb
sbb
daa
int
jl
xor
call
jg
movsb
in
or
cmp
cmpsb
popl
jmp
sbb
and
movsb
xor
sub
out
sbb
jnp
setle
das
mov
shlb
daa
das
sub
lret
sbb
lods
popl
in
xchg
popf
xor
xchg
into
jecxz
sub
push
jmp
dec
outsb
ss
and
mov
fwait
mov
cmp
and
xchg
cli
jnp
loope
jo
data16
data16
pop
ja
rorb
adc
or
sub
rclb
ds
jg
xlat
cltd
adc
adc
lods
jg
ret
imul
ret
call
dec
imul
mov
xor
xchg
jne
out
add
ds
mov
jnp
divl
xor
fs
js
call
jl
push
repz
jl
addr16
pop
adc
push
sbb
test
stos
call
rorl
mov
inc
movsb
outsb
outsl
push
testb
or
push
es
imul
adc
push
cli
sub
mov
mov
bound
or
inc
cmp
pop
push
fdivrl
in
aaa
or
push
loope
mov
cmp
ja
pop
and
jg
shr
data16
bound
inc
out
sub
jb
jnp
add
dec
xor
mov
idivl
cmp
xchg
jnp
cwtl
stc
mov
mov
xchg
stc
add
addr16
sub
pushf
xchg
jle
sbb
pop
imul
decb
pop
jnp
out
gs
push
data16
loop
outsb
cmp
in
or
or
test
adc
test
or
xchg
xor
adc
ds
stos
inc
and
in
outsb
popf
xchg
out
mov
adcl
mov
into
mov
jl
lods
stc
loope
inc
iret
inc
mov
repz
cs
rorl
adc
mov
ret
add
jecxz
les
sbb
xchg
push
bound
jge
sub
pop
inc
and
cmp
cmp
and
sub
iret
jb
pop
pop
and
lock
fsubl
jle,pt
fcomps
mov
fidivrl
mov
pop
out
push
sti
mov
push
into
fistpll
dec
gs
push
outsb
fidivrl
cmp
or
jge
push
scas
repz
repz
jae
out
dec
adc
push
lea
pop
jae
xchg
out
push
loop
daa
xor
lock
ss
xchg
push
sub
mov
out
jmp
mov
xorl
repnz
scas
inc
rdpmc
ret
pushf
pop
xchg
enter
sbb
fdivl
and
pop
xor
in
lock
bound
mov
jnp
push
pop
mov
adc
or
inc
push
stos
std
mov
sub
push
push
int3
adc
mov
dec
fs
cmp
mov
es
loope
rol
iret
inc
mov
aad
cmp
int
sub
mov
pop
outsl
push
mov
adc
out
in
bound
jg
cmp
cmp
aaa
cmp
test
insl
hlt
inc
outsl
data16
push
and
jmp
cmp
fwait
dec
data16
rcrl
movsb
movsb
dec
insb
sbb
jg
cmp
dec
das
out
ds
sbb
xchg
jg
aas
cmpb
mov
inc
mov
outsl
xor
loopne
daa
dec
cmpsl
sbb
movsb
in
xchg
or
jnp
push
push
aad
sub
jnp
je
cmpl
not
pop
sub
xchg
jns
aam
into
fisttpl
shrb
jae
fadds
or
xor
ret
clc
sub
pusha
dec
inc
xor
lock
cmc
clc
mov
and
xchg
pop
xor
out
data16
pop
cmp
outsl
mov
pop
or
pop
sub
push
sbb
push
mov
jg
popa
xor
mov
fldl
movsb
movsl
add
and
loop
arpl
rclb
int3
mov
les
pop
into
jnp
dec
mov
popa
cmp
or
sbb
outsl
cmp
repnz
xor
sub
dec
ja
stos
in
into
into
mov
rcrb
das
and
and
push
add
scas
or
stos
xlat
lds
loop
fiadds
mov
rorl
jne
in
xor
or
mov
dec
add
stos
lcall
das
sbb
cs
dec
loop
popa
pop
xchg
movsl
std
xchg
jnp
aas
lock
jns
inc
xor
xor
xchg
jp
pop
xchg
call
pop
or
adc
xchg
imul
dec
ja
mov
cwtl
and
ds
cmp
jb
xchg
popf
insl
inc
ds
sbb
push
xchg
adc
xlat
cmpsl
jnp
xor
loopne
addr16
hlt
sub
xchg
std
or
dec
xor
aad
xorb
inc
iret
or
inc
add
cwtl
test
jge
pop
fwait
and
sbb
jb
sbb
push
movsl
dec
dec
lret
stos
insb
iret
pushf
add
les
addr16
push
sarl
add
push
jmp
enter
pushf
xchg
or
add
adc
inc
xor
imul
cs
data16
pop
dec
and
repnz
ret
xchg
mov
cmpsl
push
add
pop
and
xor
ljmp
out
pushf
in
mov
adc
push
cmpsl
jnp
jg
sahf
and
setae
inc
shll
inc
and
pop
adc
jo
popf
aaa
xchg
out
test
fidivrl
inc
ret
dec
rclb
dec
pop
mov
xor
xchg
ficoml
cmp
fbstp
mov
add
loop
js
add
push
jecxz
fisubrs
lods
movsb
lods
pop
lods
add
notl
push
je
hlt
sar
inc
hlt
sub
out
or
pop
cmp
cmc
insb
or
in
in
and
scas
mov
push
and
mov
pop
sub
fwait
jecxz
push
daa
fisttpll
mov
test
lods
pop
ss
adc
dec
inc
mov
jo
pop
dec
sub
fstpl
mov
cmp
cmp
js
pop
cmp
or
pop
sahf
out
ffreep
sbbl
cmp
js
loopne
xchg
lret
gs
jmp
imul
data16
int
cmp
xchg
jecxz
and
fcoms
call
inc
or
mov
fldpi
adc
jle
cld
jb
jg
add
daa
inc
leave
hlt
xchg
insl
push
sbb
fwait
loope
mov
mov
loope
xor
mov
rorl
push
add
inc
ljmp
ss
jmp
lcall
loop
nop
push
fcoml
movsl
cmpsb
lret
jb
addb
mov
jecxz
cmp
fwait
loope
xor
fcom
cmc
inc
jg,pn
push
add
jb
lahf
add
pop
jnp
mov
jo
jg,pn
xchg
xchg
xchg
and
jnp
and
sub
loope
fildll
dec
mov
int
incl
inc
pop
repz
add
andb
mov
adc
adc
sarb
xchg
xchg
mov
sub
sbb
pop
adc
out
jecxz
sarb
mov
xchg
ljmp
dec
std
adc
int
cli
fwait
pop
ss
xor
sub
scas
jg
cwtl
in
ret
sub
dec
pusha
mov
cmp
outsb
mov
mov
xchg
mov
adc
and
dec
repz
outsb
mov
or
push
lret
adc
subb
mov
movsb
loopne
dec
jb
or
inc
inc
dec
sbb
das
push
add
scas
mov
dec
in
aas
push
enter
sbb
pushf
push
jne
mov
inc
cs
dec
mov
xchg
hlt
xor
jbe
sahf
sbb
mov
fwait
sub
or
dec
push
dec
imul
shll
dec
jg
jb
sub
and
aad
pop
ljmp
pop
cs
sbb
push
fnstcw
mov
xor
movsb
mov
popl
insl
decl
fistpl
inc
movsl
fstpt
dec
or
nop
rolb
cmp
xchg
add
hlt
add
or
dec
and
shrl
std
mov
aaa
div
es
scas
call
aas
xor
popa
int3
ljmp
arpl
sbb
ds
jg,pn
jo
jg
lods
and
xor
jmp
add
mov
arpl
push
in
cld
mov
es
iret
out
cmp
in
xor
mov
ret
push
mov
sub
pop
pushf
dec
jmp
mov
push
and
daa
rorb
imul
test
cld
xor
pop
fistps
dec
push
jb
cmp
sbb
sbb
mov
jge
adc
les
and
inc
iret
sbb
push
lds
shll
add
lods
push
aam
sub
xor
loop
jp
xor
orl
adc
push
gs
push
into
jg
dec
int
add
push
add
mov
mov
xchg
and
test
mov
call
dec
js
stos
sbb
xchg
movsb
fnstenv
mov
mov
xor
adc
jp
inc
pop
clc
push
sbb
cmp
fdivrs
dec
cmp
dec
hlt
test
cmp
add
clc
xchg
test
imul
movlps
xor
push
add
jne
lods
inc
cmp
mov
add
rorl
jg,pn
aas
mov
or
sub
leave
das
adcb
ds
adc
xchg
and
out
pop
lea
and
xor
fisubs
fdiv
sbb
nop
popf
adc
push
xor
aaa
shrb
or
jg
aaa
push
rolb
or
add
xchg
sbb
xchg
loopne
lods
mov
or
push
sbb
pop
orb
ss
lods
jne
mov
pusha
mov
ljmp
enterw
mov
xor
pop
iret
in
or
sti
mov
lahf
call
aaa
out
inc
lock
notl
and
stos
fistpll
sub
rorb
fdivl
scas
cwtl
stos
sub
xlat
call
mov
adc
addr16
cmp
out
dec
out
adc
add
sub
dec
ljmp
jle
mov
xor
push
adc
sub
mov
sahf
xchg
aam
mov
lods
les
pop
jae
sbb
jge
lods
add
test
or
push
lock
out
aaa
xor
flds
mov
incb
cmp
pop
jne
and
push
out
and
fldln2
lret
jge
mov
mov
jmp
repz
pop
adc
xor
sti
cmovnp
mov
in
sub
push
cld
jecxz
inc
rcrl
xor
mov
jmp
cmp
xor
sbb
adc
in
in
sbb
push
dec
push
dec
push
mov
leave
jmp
inc
fisubrs
daa
sub
outsb
mov
fnstsw
xchg
mov
pop
add
call
inc
xchg
pop
icebp
dec
cmp
xor
inc
jl
adc
mov
cwtl
jg
cwtl
ffreep
sub
faddl
out
cmp
ret
dec
pop
adc
xor
push
shlb
cmovs
outsl
aam
pop
aaa
and
xor
popa
xor
stos
int
jo
int
adc
sub
mov
adc
push
push
xor
out
incl
dec
or
dec
rcrl
fwait
insb
dec
push
pushf
push
popf
sbb
mov
cmp
pop
push
jo
pop
jae
cmp
inc
xor
adc
sti
pushf
jo
push
clc
roll
add
mov
or
out
pushf
xchg
shrb
mov
sbb
xor
cmp
icebp
cs
pop
pop
testl
cld
rolb
add
rorb
sbb
fisttpl
inc
inc
xchg
xor
and
add
inc
stos
std
lds
push
cmp
xchg
and
je
scas
push
mov
xchg
or
mov
xchg
xor
in
adc
add
and
push
cmp
addr16
incl
cmp
ds
and
cmc
inc
jno
jbe
pop
mov
add
mov
mov
ljmp
aaa
lods
test
push
sub
out
dec
iret
insb
and
xchg
inc
mov
cmc
cs
xchg
lock
lahf
xorb
call
test
push
cmp
and
jnp
jg
sub
and
cmp
xchg
push
je
icebp
add
ficoml
iret
xor
push
addr16
xor
dec
daa
mov
and
ret
stos
jl
sbb
cwtl
add
pop
aas
out
fiadds
mov
outsl
sub
push
jmp
psubsb
mov
in
sub
adc
not
stos
pop
jecxz
or
inc
cltd
cvtps2pi
dec
xchg
andl
add
inc
cs
out
xchg
repnz
lret
pop
clc
call
inc
jno
or
push
lret
jg
lods
in
dec
or
pop
jg
mov
mov
cmp
pop
into
inc
cmp
xor
mov
js
dec
pushw
pop
and
rcrl
ljmp
sbb
push
shlb
xchg
pop
lret
xchg
cwtl
and
fdivrl
ret
sub
ror
ljmp
mov
aam
cmp
sbb
sbb
cwtl
in
or
fisubs
xchg
pushf
sbb
mov
push
fildll
jno
push
mov
fmull
xor
cmp
adc
dec
rolb
cmp
push
arpl
dec
in
mov
inc
repnz
in
or
lcall
jl
sbb
ret
sub
scas
cmp
mov
cmp
dec
add
and
and
in
lods
insl
push
push
loopne
pop
adc
clc
jl
or
cmp
dec
lock
jno
fstp
into
sub
jg
fucom
jg
push
cmp
sbb
rcll
rcll
rorl
test
orl
and
popf
and
inc
negb
clc
sbb
fcmovnbe
sub
sub
std
push
sbb
fwait
mov
aas
imul
xchg
xchg
add
inc
xor
ficomps
mov
adc
and
shr
and
jmp
lods
daa
push
pop
into
push
add
insb
outsl
popf
cmp
dec
mov
inc
push
pop
fsubl
pop
imul
pop
sub
ds
sbb
push
pop
jecxz
insb
fldcw
inc
jo
push
cmp
pop
call
push
sbb
xchg
sarl
stos
push
push
lock
cmp
mov
out
ret
int3
aaa
imul
jne
sub
sbb
sbb
hlt
repz
pop
dec
push
jns
aam
dec
insl
add
sahf
mov
xor
loope
push
mov
xlat
cmp
jp
add
push
cmp
sub
inc
or
or
test
das
mov
popa
mov
xor
ds
mov
sub
and
cmp
sub
notb
stos
jp
stos
mov
arpl
iret
into
inc
mov
add
and
pop
ss
or
cmc
sbb
ret
sub
popf
push
inc
out
or
jg
dec
lea
cmp
call
or
pop
stos
sarb
inc
mov
mov
push
and
lcall
cmp
mov
popa
inc
pop
xchg
cmpsl
aad
add
lods
inc
xchg
stos
push
mov
ret
xor
js
cmp
sbb
lea
mov
loop
jns
jno
jg
mov
fcoms
jnp
idivb
and
pop
cltd
add
and
ret
push
out
rol
nop
add
jle
loop
ds
cmp
or
ficomps
rcll
fst
stos
mov
lock
lds
or
or
das
and
jmp
je
cmp
jl
roll
pusha
mov
sbb
stc
dec
js
jge
adc
xor
cmp
and
or
mov
cmp
leave
sbb
push
outsl
je
aam
jg
ret
aaa
aas
adc
dec
pop
incb
dec
insl
push
inc
pop
lahf
lds
adc
mov
cmp
cmp
mov
hlt
adc
std
adc
popf
fcompl
inc
and
lods
mov
fimuls
loopne
mov
pusha
lock
aam
and
stos
iret
pop
fbld
test
outsb
sub
pop
imul
adc
rol
outsl
sbb
ljmp
arpl
dec
jno
pop
jns
mov
push
mov
pusha
cwtl
inc
push
mov
sbb
sbb
fs
push
xor
into
or
push
aad
fidivs
push
das
xchg
out
cli
rcl
stc
jne
push
insl
xor
fdiv
clc
jge
nop
repz
lret
push
or
add
pushf
dec
gs
insl
adc
xor
cmp
lret
and
loope
fists
jno
notl
into
lret
pushf
sbb
shl
fldt
adc
fidivrl
adc
or
aam
sub
jle
mov
pop
rolb
adc
jle
sub
sub
in
std
sub
imul
movsl
jno
jae
mov
push
sub
pop
insb
jmp
push
aaa
or
push
in
fldl
shrl
sub
stc
mov
loop
icebp
data16
fidivrl
lahf
xchg
sbb
jl
dec
gs
cmpsb
insb
inc
pmulhw
stc
sbb
sbb
mov
jg
aas
xchg
add
popa
std
sbb
mov
and
fsubs
imul
int3
fstps
lods
jle
imul
xor
sbb
sarl
xor
xor
jno
int
es
imul
loope
add
fdivs
pusha
dec
dec
mov
sbb
adc
xchg
xchg
cwtl
pushf
icebp
popf
cwtl
and
adc
add
jbe
pop
js
shrl
loop
push
test
jge
in
daa
rorb
js
jb
push
and
xor
xorl
vmread
movsl
cmp
dec
add
mulb
xchg
pusha
lods
fldl
fwait
sub
push
fwait
stos
push
daa
cmp
jl
adc
sub
movb
in
adc
ss
bswap
push
dec
mov
leave
mov
sbb
lods
or
adc
dec
pop
jnp
testb
lods
pop
repnz
sbb
sub
int
nop
sbb
mov
push
sub
fidivs
fimuls
jmp
mov
es
push
cmp
sti
or
pop
icebp
push
gs
ret
and
add
addr16
fwait
loopne
fmuls
xchg
iret
std
inc
aas
incb
xchg
out
and
cmp
dec
push
jmp
in
stos
mov
and
jbe
nop
xor
jae
outsw
and
movsl
push
jo,pt
es
popa
or
shll
sti
adc
gs
insl
iret
sbb
daa
sbb
testb
ds
pop
sti
test
push
std
inc
rcll
mov
fistl
xchg
push
cmpsl
sub
push
inc
ja
imulb
or
or
shrl
push
mov
or
push
pushf
aaa
jecxz
jge
es
push
mov
and
dec
fwait
and
mov
int3
outsl
jb
pop
pop
add
pop
adc
test
add
pop
jl
lods
pop
inc
sub
aad
incb
cmp
and
add
repnz
or
mov
xchg
aam
les
sub
lea
ds
xor
mov
enter
add
jo
ss
push
jg
nop
rorl
mov
push
hlt
cmpsl
push
cmp
xor
ja
lock
sbb
and
or
cli
and
fld
loopne
stc
stc
icebp
mov
repnz
mov
and
jg
loop,pn
mov
or
or
imul
data16
loop
insl
mov
pop
xor
aad
enter
in
loopne
ljmp
lahf
add
sbb
lods
jecxz
rcrb
popa
cli
and
sarl
rclb
push
push
dec
dec
dec
movsl
dec
outsl
inc
push
jne
xchg
jle
test
rcrl
lcall
ds
jmp
adcl
in
cmp
dec
sbb
fs
test
jge
pusha
xchg
sahf
ja
mov
ss
and
jb
lock
es
fbstp
push
push
pop
int
iret
roll
mov
out
jnp
and
in
daa
inc
lret
hlt
add
pusha
shr
xchg
movsb
stos
sub
rcrl
jecxz
sbb
xlat
jg
xor
jnp
test
call
push
sbb
pop
pop
adc
js
cld
mov
scas
icebp
adc
mov
int3
movsb
loope
mov
fisubrs
cmovnp
xlat
in
push
inc
aaa
in
sub
ret
push
push
mov
outsl
rcr
fiadds
jbe
in
add
ret
mov
daa
cmp
push
lds
jge
mov
adc
push
dec
and
sub
pusha
and
sbb
jae
mov
push
pop
xchg
lds
dec
lret
enter
xchg
dec
popf
divb
test
dec
shrb
and
jns
xor
xchg
in
test
or
fisubrs
inc
jg
push
mov
imul
lret
mov
sub
jo
clc
add
and
cwtl
mov
push
insl
popf
leave
inc
lea
sbb
test
push
frstor
dec
cmpsb
pop
into
add
aad
sub
push
pop
jecxz
pop
or
aaa
sbb
sbb
cmp
add
shlb
xchg
sub
mov
xlat
int
inc
sahf
mov
dec
and
jl
movsl
data16
sbb
mov
sbb
stc
xchg
add
paddusb
add
outsb
bound
xor
adc
fld
xchg
cs
mov
insb
pop
jno
jecxz
jg
and
ds
xchg
loopne
pop
sarb
xor
out
xor
mov
inc
test
sub
add
xor
mov
fnstsw
sti
add
dec
mov
lret
out
stos
adc
daa
aaa
je
and
sbb
push
xor
scas
dec
ds
mov
stc
std
push
push
jnp
scas
std
cld
fs
xor
std
jb
push
stos
push
imul
loop
mov
adc
cli
lret
push
pop
or
movsb
mov
data16
mov
mov
jg
insb
test
rcll
add
mov
or
inc
lahf
fmuls
cs
inc
xchg
or
add
and
jmp
dec
and
push
adc
shr
aaa
mov
loopne
jp
ret
add
push
xchg
or
jne
cmc
add
mov
fnstcw
sub
dec
jl
in
mov
xchg
pushf
cmp
enter
sub
sub
js
fxam
add
cmp
lret
mov
and
in
adc
push
lock
xchg
or
push
leave
xor
popa
aaa
clc
push
jle
ljmp
and
dec
xor
jecxz
scas
pop
jge
adc
into
ljmp
mov
jecxz
jb
pusha
jl
icebp
jge
cs
pop
cmp
jnp
aam
jns
push
bound
std
mov
ror
and
mov
aad
xchg
in
rcrb
data16
int3
gs
pop
mov
jmp
pop
cmp
lret
fidivl
cmc
mov
ljmp
sbb
gs
aaa
adc
cld
loope
enter
or
lock
pop
lahf
adc
mov
jne
repnz
lret
and
adc
mov
rorb
aaa
imul
pop
fucomip
das
shlb
cmc
jbe
cmp
jle
cmp
jl
lret
mov
sarl
lock
lcall
or
or
sub
adc
aas
std
movsl
aad
sbb
pop
mov
pop
ljmpw
or
or
jmp
in
je
lcall
dec
leave
mov
loop
out
push
sub
mov
sbb
dec
repz
sbb
push
dec
pop
daa
iret
nop
mov
popa
call
fbld
loopne
xchg
rep
mov
sub
in
xor
scas
lds
shl
leave
hlt
popf
inc
cmpsb
pop
adc
scas
jge
cwtl
pop
inc
mov
xor
clc
mov
mov
xchg
pushf
sub
mov
jnp
xor
fsubl
xor
cld
jmp
mov
pop
xor
xchg
or
fwait
and
iret
js
cmp
cltd
imul
fistpll
fisubrs
faddl
pusha
adc
int3
lcall
mov
mov
ret
stos
imul
pxor
cmp
enter
mov
das
sub
das
and
pop
outsb
ror
sti
clc
out
and
mov
movups
movb
pop
sbb
adc
jb
cmp
mov
dec
loopne
push
jle
out
or
sbb
daa
jb,pt
push
aas
push
stos
jae
pop
xchg
push
aaa
and
icebp
sub
scas
outsl
sub
inc
cli
push
nop
jnp
test
sub
adc
outsb
jg
fistl
sar
xor
cmpsb
repnz
in
outsb
dec
adc
fimuls
pop
fstps
push
jo
aas
or
inc
sarl
lret
xchg
imulb
into
ret
leave
dec
stos
in
jno
dec
inc
xor
pop
jnp
lret
out
mov
mov
cli
adc
int
jge
out
cmpl
jne
mov
inc
outsb
jb
jmp
jp
xor
adc
cmpsb
gs
mul
adc
inc
test
jbe
jge
je
jmp
jge
out
dec
add
mov
sub
outsl
std
jg
sub
sete
cmp
nop
xor
adcl
gs
stos
out
pop
xchg
mov
pop
or
pop
dec
cmpsb
pop
jmp
fbstp
sub
pop
sbb
in
adc
or
aas
shll
cli
ret
xchg
push
pushf
and
out
xlat
pushf
pusha
inc
xor
and
testb
jns
mov
sub
insb
dec
cmp
sbb
pop
repnz
jo
addr16
repnz
cmp
loopne
repz
inc
push
lahf
bound
data16
sahf
xchg
in
lret
pop
pushf
sub
loop
je
pop
push
fisttpll
shrb
mov
outsb
sti
shll
add
dec
or
jp
daa
add
cld
das
fcmovne
xchg
mov
nop
mov
aaa
sbb
mov
insb
dec
shll
in
xchg
pop
jne
push
aas
or
jle
pop
and
xor
adc
bound
mov
in
push
xchg
jle
test
pop
shlb
sarb
iret
arpl
pushf
inc
in
adc
lods
xor
jmp
mov
mov
imul
push
inc
jecxz
mov
jmp
lea
stos
fidivl
aaa
sub
sub
jae
jnp
shrb
in
das
jns
dec
in
sbb
pop
gs
mov
movsb
mov
rorl
in
jne
and
push
sahf
or
into
and
loop
sarb
push
mov
push
repnz
ljmp
cmpsb
dec
jmp
call
lahf
mov
lcall
test
push
push
add
outsb
pushf
cli
inc
or
adc
sub
ds
ret
sbb
aas
popf
jmp
push
popa
fbstp
fwait
shrl
mov
or
idivl
sahf
mov
push
xor
and
inc
div
pop
adc
jl
sub
xor
push
pop
gs
roll
inc
jmp
mov
jnp
shl
fwait
mov
xor
jb
adc
sub
add
adc
jp
jge
fmul
mov
sub
mov
rcrb
in
stc
add
xchg
dec
xor
cwtl
and
or
scas
add
inc
lret
mov
js
jp
push
lock
scas
pop
cs
outsl
stos
push
pusha
je
das
xchg
and
ret
les
xchg
or
cmp
dec
jmp
mov
mov
mov
and
rcrl
cmp
loope
cmc
inc
jbe
jge
and
jle
inc
sbb
mov
std
and
inc
pop
insl
adc
mov
leave
jmp
xchg
adc
int
xor
repz
sub
push
and
pop
add
lea
ds
xchg
adc
fnstsw
xlat
cmp
inc
aas
les
pop
imulb
scas
aaa
xchg
push
push
xchg
lods
dec
roll
and
and
jne
outsl
jmp
mov
push
lret
mov
jns
sbb
sbb
mov
aam
xor
test
loopne
mov
clc
pop
sub
lods
or
jae
sub
stc
lret
hlt
pop
and
xchg
mov
das
and
sub
test
fstl
xchg
mov
or
jo
ljmp
sub
add
test
xchg
and
scas
xor
negb
imul
xchg
das
into
test
jp
pop
inc
imul
sub
mov
sub
push
out
xor
dec
ds
push
montmul
cmpsb
add
std
cmp
and
inc
enter
test
ja
jp
jb
jnp
adc
stc
adc
lods
popa
sub
jne
pop
scas
test
leave
inc
xchg
shlb
ret
jg
xchg
testw
add
add
lods
sbb
mov
add
cli
inc
popa
ja
push
aaa
add
aaa
das
popa
dec
jns
jno
sbb
add
outsb
mov
inc
dec
test
xor
gs
jmp
jle
enter
insl
inc
or
dec
or
push
nop
xchg
add
mov
cmpsl
inc
and
outsb
xchg
mov
add
jg
cmp
cs
and
sahf
mov
mov
and
fbld
mov
mov
add
sub
xchg
pop
lahf
cltd
gs
add
sub
orb
icebp
mov
adc
push
cmc
or
ret
push
xor
cmp
faddl
cmp
cmc
mov
dec
jnp
fcomps
lods
jnp
dec
lods
dec
mov
out
pop
mov
cwtl
cpuid
gs
push
fdivrl
aaa
cs
mov
int
in
and
imul
ja
sub
mov
or
adc
inc
shlb
cltd
inc
into
dec
mov
push
inc
fdivrs
pop
pop
jnp
fdivrs
ss
dec
pusha
sbb
mov
stos
dec
js
inc
jg
mov
cli
push
mov
decb
scas
bswap
push
fldpi
cmc
jl
int3
pop
mov
pop
loopne
fcompl
nop
push
in
into
cmp
in
inc
decb
pop
mov
outsb
sub
daa
aas
scas
sbb
pop
rcrb
add
jg
mov
pop
xchg
sbb
sbb
push
dec
mov
dec
push
mov
add
insl
sarb
lods
jbe
insb
ljmp
mov
add
mov
ja
inc
insl
push
mov
cwtl
punpckhwd
popa
push
sahf
ret
std
call
aaa
or
aaa
dec
add
lock
cs
xor
loopne
mov
cmp
mov
stos
push
adc
mov
jne
rolb
sub
imul
ds
push
mov
call
push
ja
in
fcmovbe
pusha
outsl
add
daa
enter
lret
inc
repnz
add
repz
jmp
adc
pushf
loop
cmpb
cmpsl
mov
iret
or
mov
adc
outsb
jb
insl
negl
push
sub
dec
outsl
out
lock
pop
pop
pop
por
inc
pop
or
jge
div
xchg
push
and
jg
fs
adc
xchg
addl
jl
movsl
xor
mov
std
testb
pop
xor
add
push
das
out
adc
js
xor
mov
push
push
punpckhbw
lds
mov
pop
enter
nop
adc
lds
es
jecxz
dec
repnz
andb
ret
mov
fistpl
push
xor
or
xchg
sub
mov
mov
mov
xor
mov
sub
jmp
pop
insb
xchg
lcall
fimuls
sub
imul
outsb
or
cltd
mov
add
addb
mov
push
xchg
imulb
adc
adc
xchg
and
add
inc
push
mov
mov
fbstp
mov
testb
test
mov
xor
and
hlt
pop
aas
push
pusha
data16
test
cltd
cmpl
add
push
pop
aam
jge
shr
push
sarl
sbb
lock
adc
shll
pop
test
or
sahf
shlb
lcall
aam
js
pop
xchg
mov
inc
addr16
fdivs
jl
or
jecxz
imul
jle
mov
loopne
push
mov
add
inc
fcoml
mov
pop
or
pop
mov
sub
enter
add
and
add
xor
push
jno
push
ds
add
sbb
mov
sbb
sbb
sbb
bound
imul
aaa
cwtl
nop
popf
sbb
mov
xor
add
or
push
fadds
dec
push
push
repnz
jne
pop
shlb
add
sbb
scas
push
and
dec
test
sbb
jbe
fwait
mov
imul
cmp
ficomps
imul
inc
pop
ret
data16
out
arpl
sbb
inc
cltd
movsl
loop
inc
loopne
inc
arpl
scas
les
push
mov
mov
xchg
pop
mov
push
cli
call
mov
dec
xor
dec
mov
pop
mov
hlt
addr16
popf
xchg
and
test
in
setns
xlat
or
test
in
rolb
xchg
into
inc
pop
filds
out
cmp
add
fs
pop
lcall
rcll
mov
test
dec
test
inc
sbb
into
jbe
clc
jg
sbb
cmp
jno
test
call
scas
adc
insl
push
das
pop
gs
jbe
lcall
mov
dec
jno
push
pop
sub
out
sbb
cltd
dec
pop
pushf
xchg
jmp
sub
cmpsl
mov
mov
cmp
sbb
xor
jle
mov
push
cmc
adc
push
cmpsb
imul
mov
push
jl
and
push
stos
pop
xchg
movsl
mov
cmp
mov
mov
popf
pushf
or
data16
jno
jg
mov
out
add
jle
mov
jbe
pushf
sub
iret
sub
adc
jns
pop
popf
outsl
add
imul
cwtl
aad
push
lock
adc
fs
sbb
and
push
into
cmp
adc
sbb
mov
mov
jl
xor
pop
ljmp
jl
fiaddl
push
in
sbb
mov
int
sub
mov
pop
jne,pn
jge
lret
pop
out
daa
adc
push
cs
sti
nop
push
es
jle
lods
fistpl
push
fs
decb
lahf
clc
pop
pop
dec
add
and
neg
pushf
xchg
push
jecxz
mov
aas
and
dec
mov
gs
and
and
and
dec
sub
icebp
mov
jge
jae
push
mov
ret
and
mov
in
xchg
xor
jg
cmp
add
inc
add
lea
iret
cmp
repnz
and
leave
push
pop
xchg
or
adc
jnp
shrb
or
inc
jae,pt
sub
push
inc
jmp
pop
add
test
jecxz
lret
sub
scas
cmp
out
icebp
dec
ffreep
sti
cmp
xor
jo
cmp
loop
mov
clc
push
jl
sub
call
call
add
ret
cmpsl
notb
je
xchg
xchg
aas
pop
and
cmp
ds
or
notl
or
mov
lds
jno
aas
jb
xchg
sbb
and
add
push
imul
jge
mov
jno
jns
adc
int
push
sub
and
movsl
xor
shl
rcll
clc
addr16
ss
jne
jg
mov
jne
ljmp
sbb
xor
jge
jg,pt
bnd
pop
cmp
xor
or
cmp
addr16
pop
int
test
mov
push
xchg
lods
xor
xlat
scas
cmp
nop
test
bound
lods
jg
jp
into
cmp
das
fiaddl
and
popf
idivl
dec
or
pop
popf
push
fsub
lds
cmp
xchg
into
scas
mov
les
jecxz
movsb
mov
cmp
aaa
mov
into
xchg
pop
mov
mov
dec
push
and
int3
inc
les
ret
sbb
data16
cmp
out
movsl
inc
inc
imul
aad
insb
rclb
xor
push
rcll
pop
push
jbe
pusha
dec
outsl
pop
fs
lahf
xchg
je
push
mov
or
pop
mov
inc
jbe
scas
sbb
pop
lods
pop
jle
push
jp
cmp
adc
cld
add
jnp
sub
fcoml
icebp
fwait
xchg
pop
fwait
pop
jne
loop
push
mov
mov
jmp
inc
mov
pusha
inc
mov
loop
xor
and
push
int3
ret
fisttpll
scas
mov
jge
pushf
cld
imul
and
add
and
in
negb
pop
mov
pop
icebp
movsb
aam
xchg
ss
imul
ljmp
mov
jno
cli
and
pushf
test
fidivl
or
xorl
cmpb
out
xchg
adc
pcmpgtd
push
dec
inc
lret
loop
add
cmp
lcall
adc
or
movsb
aaa
pop
pop
icebp
xlat
aam
sbb
les
jge
js
adc
out
jbe
mov
cli
dec
sahf
int
add
push
push
or
ja
rol
push
dec
les
dec
mov
xor
orl
sbb
imul
lock
inc
and
nop
push
mov
xchg
sti
inc
pop
push
xchg
cltd
jns
jno
cld
lahf
popa
mov
sahf
in
in
pop
orl
fistpll
pop
and
shrb
aad
cs
es
add
sahf
jne
push
sbb
scas
ja
test
scas
cmp
push
xor
dec
mov
add
fs
pop
and
iret
xchg
arpl
add
imul
sbbb
push
push
dec
es
cltd
mov
daa
pushf
hlt
jbe
jg
or
pop
js
mov
aaa
lds
imul
or
rcrl
push
aam
pop
jo
push
cld
jno
enter
inc
int
add
or
pop
cmp
loope
lahf
xchg
sbb
mov
xchg
jl
es
xchg
cmpsl
mov
cld
push
xchg
scas
ror
test
and
xchg
cmp
stc
out
addr16
xchg
xchg
loop
inc
or
outsb
dec
fcoml
cmp
cmp
incb
lds
scas
push
pop
xchg
cli
inc
sbb
outsl
jb
int
inc
sbb
emms
popf
nop
push
pop
aam
xlat
movsb
pop
stos
adc
inc
movsl
sub
arpl
out
sti
rcrb
or
add
dec
inc
xor
nop
pop
cwtl
cmp
jne
test
sub
loop
cli
sub
movl
stc
inc
xchg
pop
cwtl
jmp
in
sbb
test
decl
push
scas
popa
xchg
stos
pop
int3
test
stc
lret
lcall
scas
daa
xor
icebp
mov
fs
adc
add
sti
movb
inc
sub
push
dec
push
loopne
mov
pop
sbb
mov
or
add
and
dec
lds
or
xor
add
stc
dec
pop
iret
int
mov
lcall
lea
lcall
cwtl
push
xor
sub
fstl
dec
dec
jo
arpl
scas
stos
mov
shl
daa
stos
dec
jne
xchg
sahf
xor
cld
lret
or
jb
xor
jae
xchg
jb
push
mov
mov
jnp
clc
imul
stos
jnp
mov
cmp
add
push
sarl
pop
loop
lea
sub
dec
adc
mov
push
cmp
push
sbb
enter
fnstcw
push
inc
mov
fs
push
sbb
mov
gs
and
data16
stos
int3
inc
inc
rclb
mov
dec
stos
cld
cmc
and
lds
addr16
imul
push
andb
sbb
pop
add
mov
push
out
push
rcl
outsb
pop
adc
pop
mov
inc
push
pop
xor
std
and
mov
push
push
lods
cli
and
lods
mov
push
popl
mov
jp
lods
dec
sbb
mov
inc
rol
push
xor
hlt
jno
push
ret
mov
add
aas
xchg
adc
popf
sbb
sbb
lods
fsubs
mov
pop
mov
fsub
mov
sahf
scas
add
xchg
or
xchg
leave
fs
les
insl
dec
mov
insl
loopne
pcmpgtw
out
cmpsb
push
test
mov
imull
xchg
jg
pop
aam
dec
xchg
dec
test
int
sbb
clc
pop
je
outsb
getsec
cltd
outsb
lods
je
xchg
sbb
hlt
pop
ss
jmp
mov
or
xchg
pop
xchg
push
pushf
add
xor
or
pop
lret
mov
jbe
mov
cld
negl
lods
outsb
insb
push
xor
fists
lret
scas
jnp
cmp
mov
push
and
or
push
pop
and
dec
or
bound
fwait
jecxz
dec
jg
iret
nop
aaa
jbe
popf
or
mov
xor
and
fs
icebp
fistps
mov
jle
mov
inc
mov
jmp
pop
mov
jg
aad
jno
pop
xor
pop
jp
ja
testl
iret
dec
sbb
js
adc
aad
xchg
jbe
mov
jns
jbe
shrb
sub
nop
nop
sub
mov
negb
loop
ret
icebp
and
filds
mov
xchg
cwtl
imul
fdivrl
push
mov
outsb
mov
sub
sbb
fdivl
push
xchg
bound
xchg
sbb
and
sbb
fbstp
outsb
call
mov
das
sarb
mov
inc
orl
sub
into
notl
jno
add
mov
js
jg
stos
clc
or
dec
jmp
jecxz
xor
fucomp
and
rcll
ja
jp
cmp
mov
aam
in
nop
xchg
pop
ret
push
inc
sbb
ficoml
xchg
add
mov
sbb
iret
jmp
add
xlat
ja
psrld
or
cmp
adc
cmp
pop
cmp
out
sbb
aaa
sub
das
bnd
and
or
popa
outsl
mov
pop
bound
pop
leave
and
fdivrl
inc
cmp
mov
ret
clc
add
and
sbb
mov
dec
pop
jns
scas
int
push
out
mov
sub
jnp
fcompl
repnz
xchg
jecxz
je
fiaddl
or
pop
psubsw
and
jnp
cmp
roll
sub
push
pop
add
add
push
fadds
jno
inc
arpl
mov
nop
imul
insb
sbb
add
sbb
cli
xchg
mov
or
loopne
xchg
add
mov
in
push
dec
rcrl
xchg
lods
hlt
lods
arpl
pushf
lods
scas
jle
pop
imul
mov
inc
xor
cmp
inc
adc
xor
cmpsb
push
mov
jle
lahf
adc
mov
popf
in
pushf
mov
dec
mov
cmp
imul
cmpsb
sub
mov
xorl
mov
dec
sub
add
mov
push
dec
cwtl
arpl
cmp
lahf
pop
adc
cwtl
mov
mov
push
jbe
lea
fnstenv
sub
mov
push
inc
out
stc
ficomps
push
add
add
mov
sbb
shl
sub
fisubs
xor
mov
sarb
js
fiadds
pop
pop
mov
clc
or
mov
imul
imul
rolb
lahf
mov
add
cmp
ja
je
adc
mov
fdivs
push
pop
or
jmp
aaa
hlt
ss
dec
adc
stos
jmp
pop
ret
mov
frstor
mov
adc
gs
repz
inc
add
add
loop
mov
insb
out
lret
cwtl
cli
mov
sbb
imul
xor
xchg
fstpl
mov
mov
jg
add
inc
ljmp
mov
nop
pop
push
xor
cs
jg
int
pushl
pop
rcrl
subl
aam
mov
mov
sti
push
xor
je
cld
and
fists
movb
jno
push
xchg
ficompl
sub
shr
or
jmp
jns
adc
incb
roll
jns
inc
pusha
sti
xchg
stos
iret
out
sbb
lahf
mov
rcrl
aad
jnp
xchg
cld
test
mov
shl
inc
fs
pop
push
mov
ss
ja
sub
adc
push
ja
cwtl
adc
or
daa
orl
adc
add
dec
fidivl
dec
xchg
fldl
add
ret
jo
pop
cmp
mov
push
jmp
mov
push
mov
popa
jnp
pop
stos
ljmp
cmpsl
jo
mov
mov
mov
push
notb
popf
sbb
xchg
out
add
aas
je
mov
dec
and
mov
cmpsl
push
mov
cmpl
xchg
mov
push
enter
inc
sbb
gs
sbb
aas
mov
je
dec
lcall
fcompl
aaa
push
push
jecxz
jle
jg
pushf
xchg
jns
push
adc
dec
jno
mov
pop
cmpsl
push
xor
add
push
xor
gs
int3
or
cmp
or
xor
inc
or
mov
sbb
enter
jge
daa
jne
aas
scas
or
push
aaa
cli
bts
insb
repz
sbb
xchg
dec
push
dec
lret
jb
inc
and
out
dec
insl
push
lods
sbb
sub
ss
nop
cmp
popa
repnz
int
adc
fwait
sub
push
xchg
sub
sub
pop
push
es
add
cmpl
pusha
es
ja
andl
imul
loope
push
mov
fs
xor
pop
popa
sub
lds
hlt
loopne
jmp
lods
sub
xor
dec
cmp
dec
pusha
ljmp
mov
push
xor
and
enter
and
and
pop
shl
sbbb
lahf
sub
pop
inc
jge
mov
inc
sbb
jp
dec
jno
sub
lcall
ljmp
sub
int3
lret
mov
out
fldt
inc
add
add
lahf
push
pop
xchg
xlat
ret
and
imul
sbb
ljmp
pop
addl
inc
pusha
sub
enter
jae
jno
or
mov
ja
scas
xchg
sub
andl
aad
fadds
shrb
cmp
pop
adc
pop
push
popf
adc
xor
cmp
inc
outsb
sub
mov
mov
int3
sub
cmp
pop
ret
cmp
dec
std
arpl
xchg
aas
ljmp
and
sbb
jbe
and
mov
add
ss
cs
pop
sub
sbb
xchg
mov
jnp
inc
and
mov
sbb
sub
sbb
cmp
cs
or
mov
and
lods
popf
ja
xor
rcll
pop
cwtl
xor
dec
push
push
push
in
mov
and
mov
in
std
frstor
xor
int
aaa
pop
int
cmp
mov
or
ja
adc
out
push
rcrl
jg
and
dec
leave
arpl
push
xchg
and
dec
leave
das
pop
ret
aas
mov
jns
lcall
mov
xor
out
insb
jne
stos
popa
negb
insl
xlat
fs
push
xor
push
push
std
sub
int3
aas
outsl
mul
and
in
mov
xchg
jp
fidivrs
iret
hlt
rolb
xchg
aaa
std
lret
lret
adc
jns
jne
push
dec
test
inc
nop
pop
mov
andl
xchg
imul
pop
outsl
or
hlt
xchg
dec
fstp
vcvttss2si
mov
mov
adc
push
movsb
aad
inc
leave
and
aam
or
imul
xchg
or
arpl
pusha
std
fucom
jl
fmuls
push
mov
shll
lods
and
jp
inc
mov
mov
pop
iret
jb
scas
cmp
scas
sub
mov
jmp
cmpsb
jo
inc
fdivrl
push
add
adc
in
pop
or
dec
aad
leave
cmp
xchg
adc
xor
ljmp
dec
cmp
dec
into
dec
jp
pop
dec
cmpb
xor
test
mov
fs
test
ss
imul
js
xchg
add
mov
cs
sbb
push
ds
pop
outsb
cld
and
imul
jne
sub
cmp
lret
sub
adc
mov
push
xor
mov
adc
sbb
inc
nop
sub
and
sbb
and
into
in
daa
xor
cmc
cmp
cmc
out
in
in
jae
ds
jg
sbb
loopne
pop
mov
jne
into
jl
pop
and
mov
sbb
jae
js
mov
and
jmp
repz
inc
in
stos
sar
gs
insb
sub
pop
cld
mov
jmp
int
out
mov
fwait
clc
mov
fildl
jl
cmpsb
jg
cwtl
mov
pushw
jo
fildll
jg
jle
sbb
sub
inc
cmpsb
xchg
xor
loop
jge
add
jnp
jle
mov
pop
cmp
pop
inc
mov
jge
dec
int3
movsb
cmpsl
fiadds
lcall
add
pop
add
aad
pop
adc
pop
rcr
mov
cltd
cmp
mov
in
jae
scas
arpl
and
outsb
adc
das
mov
push
xor
mov
inc
xchg
push
xchg
jmp
mov
mov
mov
dec
mov
aam
cmc
rcrb
enter
mov
stos
fistl
in
es
jb
test
aam
cmp
in
mov
shl
jge
sbb
xchg
mov
dec
cmp
mov
or
push
pop
test
call
sahf
daa
sti
sarb
inc
ss
ret
stc
and
es
inc
out
or
add
or
xor
clc
fldenv
in
jo
test
insl
pop
pushf
in
jbe
test
xchg
or
inc
out
aas
push
frstor
cld
add
daa
lods
inc
adc
leave
inc
int
insl
es
mov
mov
pop
mov
jecxz
dec
xor
dec
test
pop
and
out
or
pop
adc
cs
pop
icebp
sbb
int
ds
sbb
and
es
mov
mov
sub
pop
adc
sarb
leave
ret
call
clc
out
cmc
or
mov
fisubrs
add
lcall
sti
rolb
sub
popl
or
leave
mov
sub
cmp
push
js
loope
lret
cmp
push
addr16
movsl
mov
cld
cmp
sbb
pushl
sbb
and
int
notb
add
xchg
push
es
pop
sub
xchg
push
adc
push
and
in
push
into
cmpl
repz
jo
pop
lahf
jle
add
and
pop
repz
cmpsb
mov
repnz
mov
and
stc
inc
lock
mov
inc
loope
and
sub
adc
lret
jp
out
adc
push
icebp
jp
mov
repnz
xor
pop
rolb
pop
bound
push
adc
mov
jne
negl
jne
leave
nop
sti
xor
or
push
jb
cltd
pop
cli
xchg
dec
imul
fwait
pop
movsl
data16
push
div
rolw
popa
pop
aaa
je
fdivp
inc
into
pop
mov
inc
push
jmp
mov
push
bound
jae
xchg
lret
ficoms
jae
pop
lods
push
shrl
push
jae
dec
call
cmp
lea
inc
dec
lea
fbld
and
ds
push
jl
cmpsb
sbb
and
shr
lods
fsubl
shll
push
outsb
jl
pop
push
cs
mov
sbb
ror
jne
repz
dec
push
pop
or
jbe
push
sbb
test
lcall
mov
xorb
jo
pop
mov
sbb
jbe
outsb
mov
xchg
xchg
mov
jl
pop
ror
into
mov
rcll
lock
jecxz
in
cmpb
xor
jle
xor
jle
into
ficoms
jle
push
and
push
loopne
dec
icebp
push
rorb
js
xor
cmpsb
xor
xchg
cmp
test
fwait
push
and
mov
cmp
mov
push
sbb
cs
mov
sbb
jl
pop
sbb
jl
pop
cmp
imul
out
inc
push
cmp
jns
dec
les
cmpsl
out
pop
fbstp
or
sub
sarl
sbb
shlb
ret
into
pop
popf
jbe
in
or
jns
pop
xchg
les
popa
sbb
xor
cmp
popa
add
jne
adcb
ss
ret
and
xor
xor
not
jo
sbb
or
jns
push
leave
inc
inc
test
push
je
mov
add
fsubp
pop
int
push
mov
xor
cmp
xchg
pusha
adc
popl
cmc
adc
shlb
add
or
movb
xor
arpl
add
leave
mov
push
xor
loopne
pop
jnp
mov
mov
stos
adc
mov
xchg
je
xor
jge
xor
divl
cwtl
cwtl
pop
jl
fbld
out
xor
cmp
and
add
or
adc
mov
iret
xchg
xchg
adc
dec
and
xor
sbb
sub
dec
aad
in
hlt
cld
loope
iret
out
dec
jnp
loope
cmp
and
inc
ss
dec
lret
jno
pusha
push
push
fimull
sub
test
pop
test
movsl
dec
lods
jge
mov
cmpsl
jp
loopne
mov
fcmovbe
dec
movsl
dec
je
jge
pop
xchg
mov
push
dec
lret
js
pusha
pop
push
stos
mov
push
dec
dec
sub
mov
pop
test
mov
ds
push
sub
mov
cmpsl
jle
out
cmpsb
mov
mov
js
jno
xor
test
push
sarb
jge
pop
xchg
movsb
or
je
hlt
es
add
lds
push
sarb
rclb
roll
and
pushf
out
cmpsb
mov
push
sarb
fldenv
lds
push
rcrb
and
inc
lret
fcmovne
shlb
jle
mov
arpl
lret
addr16
out
and
mov
or
adc
dec
add
adc
jne
or
add
xor
and
mov
cmpb
inc
into
inc
sbb
out
ret
pop
push
adc
fsts
in
aam
sub
mov
and
popl
fisubrl
sbb
stos
fisubrs
jns
addr16
mov
and
push
das
enter
ja
outsl
cmp
pop
std
add
xor
pop
mov
add
lods
out
cmp
pop
pop
outsb
stc
xchg
mov
xchg
jl
jne
pop
and
inc
addr16
cld
push
arpl
mov
popf
dec
enter
out
aam
and
push
pop
push
add
pop
ficoms
in
push
in
repnz
popf
loope
mov
sbb
shll
add
xchg
lret
xchg
ret
xor
fistps
and
pop
aaa
lock
int
jmp
cmp
call
cmp
mov
insb
adc
arpl
movsb
loopne
movsb
icebp
insb
fs
sub
inc
ficomps
xorb
sbb
das
mov
js
pop
push
jbe
bnd
lret
or
pop
ret
rcr
repz
inc
daa
pop
mov
ljmp
aam
es
repnz
ljmp
or
pop
xor
jge
stc
or
imull
loopne
adc
and
sub
aas
push
clc
popa
movl
mov
pop
mov
sbb
or
rorl
les
movb
cmp
and
mov
jb
cltd
jl
lret
loope
cmp
mov
xlat
and
push
icebp
push
pop
push
mov
dec
push
pop
mov
mov
je
pop
enter
dec
outsb
test
cmp
mov
popa
xor
sub
bound
sbb
mov
sub
jno
lock
and
mov
rorb
in
imul
and
pop
mov
out
sahf
mov
push
mov
mov
xorl
lret
push
cmpsl
or
push
xor
repz
xor
sbb
push
fimuls
jnp
cmp
mov
jae
dec
or
jle
or
mov
lret
test
in
pop
pop
aas
push
bound
pop
adc
jo
test
adc
fstpt
jns
sbb
push
jnp
xorb
mov
and
and
dec
mov
es
and
xor
in
push
in
or
xor
jb,pt
pop
push
jne
and
movsb
in
daa
addr16
xor
pushf
imul
bound
in
call
cmc
icebp
arpl
out
movsb
sbb
mov
xchg
adc
pusha
int3
jae
dec
aam
loopne
sbb
push
scas
dec
push
int
dec
jmp
push
es
add
xchg
xor
nop
loopne
and
and
fmuls
ja
std
inc
test
sbb
aam
adc
inc
test
outsl
scas
jg
ljmp
add
rolb
aad
dec
push
sbb
lret
loopne
rcrl
inc
push
xchg
mov
js
inc
mov
rorb
aam
rcrl
mov
mov
mov
nop
scas
outsl
and
xchg
out
ret
fcompl
xchg
fwait
jno
clc
jnp
dec
push
fists
dec
add
das
les
int3
cmpsl
les
push
push
pop
inc
and
inc
movsl
aaa
rclb
out
mov
outsl
popf
out
scas
inc
push
push
xchg
insl
push
mov
mov
js
xor
push
movsl
lahf
popf
imul
std
dec
push
push
movsl
push
mov
sub
imul
ljmp
popa
jnp
mov
fsubrl
xor
cld
xor
and
mov
jno
addr16
addr16
inc
sub
inc
sarl
push
test
dec
pushf
dec
imul
int3
push
les
shlb
lods
mov
clc
inc
adc
rcrl
mov
jnp
pop
test
adc
cmpsl
mov
loop
and
std
mov
insb
or
out
push
int3
push
and
into
mov
scas
jbe
adc
inc
jne
enter
pushf
inc
xor
push
pop
into
shlb
lods
mov
aaa
and
jb
cmp
in
lcall
aam
adc
call
je
and
enter
or
adc
xor
es
loopne
inc
add
int3
xor
gs
aas
aaa
cmp
cmp
sub
mov
fstps
xlat
repnz
pop
daa
pusha
cmp
pop
ss
xchg
push
in
pop
cmp
cmp
fbstp
sbb
cmp
adc
adc
xchg
jmp
mov
sub
add
xor
insl
ds
or
rcr
lock
gs
mov
or
leave
sbb
sub
xchg
dec
push
loopne
fdivrl
idivl
fs
mov
in
iret
lock
sub
push
push
cmp
jle
adc
cmp
mov
sbb
inc
cwtl
push
jne
lret
pop
adc
scas
add
push
in
into
into
pop
xchg
daa
pop
mov
fldcw
jne
stc
movsb
pop
lcall
pminsw
imul
push
pop
push
dec
sbb
mov
jle
sub
xchg
or
pop
push
js
and
lret
je
addr16
xor
aad
mov
das
inc
or
or
cltd
sahf
sub
in
sahf
jae
sbb
jmp
and
cmp
rcrl
addr16
out
xor
inc
rcl
in
aaa
adc
andl
adc
fists
popa
push
adc
add
sbb
fdivs
aad
mov
popa
push
mov
ds
pop
enter
int3
ss
shll
or
mov
mov
enter
cwtl
movsl
pop
inc
rolb
mov
loopne
ljmp
xor
scas
pop
xchg
sub
pop
jge
mov
sbb
jae
icebp
or
fcmovb
xchg
out
push
sbb
not
and
jae
fildl
test
sub
sahf
or
sbb
fyl2x
enter
int3
and
xchg
in
imulb
pop
andb
push
lds
sbb
into
stos
fldt
stos
bound
push
pop
inc
ror
cmp
into
notl
dec
and
add
outsl
inc
loop
mov
and
cld
or
iret
cld
jg
push
mov
fcoml
out
cli
inc
sub
push
xor
mov
add
stos
ja
gs
fadd
jae
mov
aas
or
add
mov
add
outsb
pop
pop
mov
sub
aam
add
jle
sub
adc
add
bound
fbstp
mov
nop
pop
cli
jl
pop
adc
sbb
jecxz
movsl
push
lret
fdivrl
jbe
in
xor
and
mov
popa
dec
xor
icebp
mulb
xor
xchg
in
cmp
pop
push
lods
aaa
jmp
or
lods
pop
cld
jo
dec
jle
ds
cmpsl
adc
shr
sbb
sub
inc
adc
jno
iret
push
sbb
inc
rcrb
mov
arpl
cmp
push
adc
cmp
les
push
or
and
dec
jno
pop
and
loope
and
or
data16
or
add
pop
pop
sbb
popl
dec
or
ds
push
shlb
ret
ss
and
cli
sbb
push
fsubl
push
out
or
or
or
jo
in
xchg
xor
or
or
iret
scas
aad
clc
cmp
add
jle
enter
cmc
cmp
sbb
xchg
aaa
cld
adc
mov
jl
fdivl
cmp
push
or
popf
sbb
mov
sub
lods
and
call
call
lahf
add
out
mov
mov
sbb
sti
mov
sub
and
in
add
out
mov
cwtl
lret
enter
lods
push
sub
scas
inc
jle
jne
call
cmp
dec
fimuls
mov
cs
es
pop
add
mov
mov
std
adc
pop
aam
and
lret
push
pop
gs
in
push
and
or
repz
push
mov
sbb
imul
cmp
adc
in
dec
pop
push
sub
dec
push
push
negl
rcrl
or
std
inc
pop
repnz
jecxz
gs
add
xor
pop
jecxz
loope
mov
cmpxchg
int
arpl
push
push
push
dec
cmp
cwtl
adc
aas
shrb
xchg
and
adc
mov
or
sub
stos
inc
push
outsb
and
and
icebp
stc
jp
mov
push
add
stc
cmp
shlb
add
mov
repnz
cmpsb
je
les
cld
inc
dec
stos
mov
scas
add
enter
xor
loop
mov
xor
imul
shlb
fldt
dec
sti
hlt
push
loopne
jmp
cmp
inc
jl
test
int3
subl
cld
sub
dec
fisubs
mov
sub
ss
test
fistps
stos
or
pop
dec
cmp
add
mov
iret
jbe
jl
mov
mov
imul
loope
sub
aaa
je
xchg
push
adc
lahf
sbb
loope
and
jge
and
push
fisubs
jns
iret
leave
pusha
mov
push
fmulp
mov
xchg
mov
and
adc
add
fnstcw
ds
shrl
inc
sti
add
xor
fs
ds
and
ret
das
jg
ret
pop
decl
mov
dec
int
jno
cli
sbb
or
test
loopne
or
or
adc
mov
insl
aas
push
jle
test
fmuls
stos
nop
sub
insb
lret
iret
cmc
das
in
xchg
out
fnsave
bound
bound
rorb
loope
jb
jno
scas
lods
fs
or
stos
daa
pop
push
lock
xor
popf
and
cmc
or
sub
jno
jbe
int3
fldenv
mov
cli
outsb
setns
cmc
lds
bound
aad
jl
and
and
daa
cmp
xlat
pop
and
les
adc
pxor
jl
cmp
push
mov
out
int
sbb
mov
sbb
scas
std
or
loope
jle
xchg
pop
jbe
les
xchg
jp
jbe
pop
lock
pop
mov
push
jo
jb
xchg
cmp
jecxz
enter
jns
fmulp
inc
mov
shl
and
mov
xor
adc
adc
inc
es
cmp
sub
jmp
adc
mov
or
ret
xchg
jbe
icebp
mov
pop
xlat
outsb
ja
jle
push
jae
daa
call
jae
rcrl
imul
lcall
test
push
lea
pop
out
js
xor
scas
mov
push
pop
push
cmpb
xchg
addr16
int3
outsl
les
push
adc
jns
mov
popa
adc
inc
adc
and
shrb
shl
gs
lret
lock
sub
xchg
jecxz
int3
ffreep
ljmp
test
push
mov
insb
into
xchg
mov
cmpb
lret
nop
push
dec
push
mov
aaa
jno
int3
daa
les
cmpsb
pop
adc
cld
aad
or
lds
sbb
std
js
xor
sahf
or
xchg
sbb
sbb
fmull
outsl
jno
int3
pop
les
aaa
adc
sar
or
push
cmp
lock
js
xor
or
iret
sbb
mov
stos
mov
insb
movsl
jle
xor
gs
ja
rorb
enter
in
cmp
lock
sub
or
fadd
xchg
shll
int3
ret
les
pusha
movsl
dec
jl
fisttps
int
lret
lea
jle
pop
insl
rol
sbb
aas
xor
push
cld
or
rclb
xlat
repnz
adc
inc
cltd
dec
push
push
mov
pusha
out
sub
lds
test
popa
js
xchg
inc
or
add
sar
rcrl
std
lret
sub
push
cmp
fcoml
int3
xchg
les
xorb
push
or
imul
rcrb
mov
insl
jle
aas
adc
push
xchg
daa
jno
int3
das
les
cmpsb
pop
adc
in
cmp
push
and
cld
out
js
xor
or
out
sbb
test
jmp
jle
aas
cltd
lret
push
jp
pop
lret
inc
rcll
xor
jle
xchg
push
decb
mov
int3
int3
mov
push
pop
push
roll
dec
mov
insb
fs
push
mov
dec
daa
ror
add
aas
xor
push
cld
neg
rclb
mov
repz
push
pop
mov
adc
out
and
gs
lret
loopne
xor
jecxz
fdivl
xchg
sbb
ss
or
adc
cmp
push
add
shl
adc
xor
add
cmp
or
xor
rol
gs
lret
enter
fdivl
or
xor
ret
or
loopne
or
ret
adc
and
repz
xor
lds
push
aas
jmp
mov
xor
outsl
xor
bound
add
in
jae
xor
lcall
add
dec
minps
push
adc
sub
inc
xchg
pop
cmp
push
dec
out
and
jb
pop
inc
orl
mov
mov
aad
jg
lret
aas
jge,pt
test
mov
lahf
imul
jmp
aaa
lret
sbb
xor
push
mov
out
jmp
adc
mov
aas
pop
outsb
lock
and
ds
xlat
cmp
and
mov
dec
sahf
inc
insl
mov
outsb
loop
cwtl
cmc
insl
and
sub
jns
ds
into
mov
dec
outsb
or
mov
nop
shl
xor
mov
stc
adc
popa
push
adc
dec
xlat
cmp
stc
jns
iret
cltd
sbb
adc
imul
jle
pop
daa
pop
mulb
sbb
out
dec
repnz
ds
lcall
lret
and
ret
test
in
mov
cmp
cmp
inc
mov
rcrl
aam
mov
push
and
and
sbb
sahf
push
imul
ret
xor
ret
sub
xchg
cmpsb
xor
mov
test
je
aaa
test
rclb
je
sub
sbb
hlt
pusha
adc
fnstsw
cld
ja
jge
pop
mov
cmp
xor
add
sbb
add
pop
xchg
jmp
xor
jmp
xchg
adc
aad
and
daa
sbb
out
out
ret
xor
mov
mov
popf
push
xor
xlat
fbstp
mov
dec
lds
mov
int
jae
pop
fcomip
das
enter
sub
pop
test
lret
adc
pop
push
cmc
bound
or
adc
bound
xchg
xor
inc
push
enter
in
push
test
adc
lcall
xor
inc
das
lock
adc
pop
aas
pop
in
jle
jge
push
adc
test
dec
add
jno
ljmp
ret
fstpl
rcr
mulb
and
test
sbb
jbe
or
jo
adc
xlat
daa
adc
shr
xor
xor
ljmp
sub
sbb
popf
imull
and
and
fiaddl
ret
adc
insl
push
sbb
jns
xor
in
arpl
inc
push
adc
add
call
jle
mov
in
pop
ds
add
sbb
sbb
pop
xor
sub
pop
push
leave
inc
test
movsl
dec
arpl
xchg
mov
mov
push
pop
mov
inc
aaa
arpl
cmp
sbb
cs
out
adc
cmp
push
popf
outsb
call
inc
divl
in
and
cmp
adc
stc
or
mov
mov
fs
gs
sub
jns
cmp
adc
pop
lods
cmp
aad
and
imul
les
inc
shlb
or
cmc
inc
adc
add
das
in
mov
insl
pop
jno
fadds
adc
lret
and
pop
call
negl
push
xchg
jns
lods
sub
clc
mov
inc
sub
mov
ja
adc
faddl
insl
or
aaa
daa
cld
ss
pop
xor
testb
ja
dec
xchg
leave
adc
dec
movsl
ss
stc
cmp
bound
and
push
push
mov
rcl
jg
lret
adc
in
sub
push
jne
js
or
push
jp
js
push
ret
out
cld
loope
sahf
and
push
cwtl
jnp
sub
shrb
notl
inc
xor
mov
or
push
icebp
adc
xor
pop
cld
sarb
insb
jle
sbb
xchg
xchg
inc
out
stc
cmp
ret
push
stos
and
lret
push
fimull
cmp
xchg
jno
loope
lahf
cmc
out
adc
fistpll
inc
sub
add
sbb
inc
inc
daa
paddusb
pop
mov
cli
call
add
inc
pop
xor
in
rolb
sbb
lods
ret
jno
mov
pop
adc
pop
das
mov
clc
push
adc
addr16
stos
or
sahf
aas
push
sti
lods
and
lahf
push
test
mov
imul
stos
xchg
js
dec
or
xchg
xchg
lods
lods
sbb
imul
addr16
mov
pop
or
incl
pop
jnp
fistpll
fldcw
jle
ja
repnz
sub
cmp
inc
sbbb
mov
or
mov
cmpb
es
pop
mov
mov
lahf
ret
cmp
pop
cmp
sti
xor
xor
das
out
add
dec
int3
cmp
int
jg
cmpsl
mov
mov
in
stc
and
pop
push
divb
xor
shlb
xchg
adc
mov
mov
cmpl
mov
imul
in
adc
test
mov
lret
cli
addr16
add
sub
xchg
and
subb
dec
mov
inc
push
xchg
ljmp
pop
add
fisubl
in
ret
imul
ds
js
sahf
pop
fwait
and
psubb
iret
fchs
icebp
shll
lea
repnz
pop
inc
xchg
mov
test
out
jns
out
js
xor
je
push
lea
imul
jae
cmpsl
shrb
lcall
lods
xchg
sub
hlt
jnp
pop
in
add
xor
call
mov
xor
ret
sbb
or
movsb
sbb
stc
jb
push
sub
insl
mov
cwtl
in
jle
sbb
xor
aas
loop
xor
xor
xchg
leave
leave
insb
aaa
pop
push
push
iret
out
popa
inc
jle
insb
rcrl
jb
cli
cmp
cwtl
push
jne
iret
ja
movsl
dec
mov
jno
imul
je
sub
mov
nop
repz
xchg
push
ret
mov
sub
adc
in
lds
add
stos
mov
jb
mov
imulb
mov
pop
lret
sub
iret
xor
imul
orl
add
idivl
lcall
inc
xchg
orl
cmp
and
fdivl
xor
sub
test
mov
mov
cmp
sbb
push
rcll
sub
subb
mov
mov
fcomip
pop
movsl
repnz
or
inc
cmp
mov
outsb
pop
pushf
leave
pop
test
fldcw
adc
add
in
pusha
xor
fidivrl
fwait
popa
pop
sub
mov
lock
pop
cmp
or
es
pusha
cmp
push
jmp
ret
test
jne
or
mov
in
out
xor
dec
loop
into
inc
sub
inc
xor
sti
inc
sub
or
pusha
dec
xchg
stos
lods
sub
sub
ret
std
pop
aas
jns
lret
test
decl
mov
out
iret
push
cmp
je
xchg
jl
mov
mov
ret
mov
unpcklps
pop
movsl
xchg
lds
daa
out
mov
lret
mov
adc
scas
adc
add
push
test
push
and
nop
pushf
mov
xchg
adc
int
mov
call
in
jg
jae
cmp
js
notl
scas
nopl
rolb
and
icebp
push
push
ds
lret
push
xchg
int3
mov
enter
repz
ljmp
push
add
sarb
jg
add
gs
jmp
jo
mov
push
in
inc
std
pop
mov
mov
add
mov
scas
fdivrs
adc
add
mov
mov
test
push
lds
jae
adc
add
and
xlat
int
fiadds
cmp
adc
leave
lock
pop
in
je
xchg
sbb
das
cmp
aaa
pop
roll
jp
call
lahf
add
int3
sbb
jne
movsl
sbb
adc
aad
adc
or
sub
rol
popa
xor
mov
lods
sti
inc
shll
xor
das
add
stos
int3
jbe
pop
dec
shll
cmp
data16
and
add
andl
lahf
aas
pop
mov
arpl
ret
adc
jmp
push
mov
cmp
and
ret
sahf
stos
mov
and
cmp
or
test
push
fwait
movsb
and
movsb
add
in
cwtl
dec
inc
pop
outsb
es
add
insl
add
mov
int
sbb
mov
scas
mov
adc
jno
movsb
jno
xchg
adc
jae
lock
arpl
and
lds
aaa
gs
xlat
cmp
sahf
xchg
and
fwait
ds
int
ret
push
mov
and
ljmp
dec
mov
cmp
std
xchg
int
jmp
out
in
xchg
pop
in
out
gs
data16
mov
test
jnp
adc
aaa
lcall
sub
mov
mov
cmp
mov
imul
sbb
cmpsl
lock
cmpl
stos
sbb
inc
xlat
loop
pop
xor
cmp
mov
out
xchg
xor
adc
ret
lret
mov
cwtl
push
mov
push
lock
aas
sub
jne
and
xchg
add
enter
jb
lcall
sbb
or
std
pop
ret
pop
jl
setnp
loop
or
lods
ss
out
ret
ror
icebp
aas
xor
push
test
int
xor
cmc
jnp
push
in
in
xor
leave
push
pop
cmp
sbb
add
and
push
xchg
sub
and
xchg
adc
leave
mov
mov
stos
insb
jo
mov
mov
lret
cwtl
push
jge
mov
fmull
xchg
sbb
int3
sti
adc
cmp
popf
dec
pop
push
mov
je
test
shll
loope
int
pop
cmp
push
and
enter
xor
imul
lock
inc
jae
sarl
repnz
pop
jp
inc
mov
mov
inc
in
daa
aaa
and
inc
adcl
inc
negl
sbb
insl
add
aam
movsl
sarb
outsb
pop
cmp
inc
ret
lock
aaa
or
mov
loopne
or
stos
sub
cmp
arpl
push
fwait
cmp
xor
adc
fwait
jae
daa
rcll
rorb
inc
dec
in
adc
add
bound
mov
dec
xchg
push
xchg
or
test
lock
pusha
and
mov
sub
push
sbb
aad
push
pusha
movsb
cmp
dec
or
scas
iret
jle
jmp
push
jnp
leave
lcall
sbb
push
push
and
std
sbb
mov
push
daa
sbb
push
in
mov
out
and
mov
adc
inc
pop
or
pop
xor
add
or
lret
lret
leave
cmpsb
mov
jne
push
xor
xchg
out
push
mov
lret
cmpsl
into
lcall
push
add
push
jg
icebp
or
rcrb
negl
adc
jne
inc
inc
iret
int3
jl
fists
arpl
insl
mov
mov
les
jne
cmp
fimuls
add
adc
sbb
add
push
pushf
mov
sub
cmp
loopne
popa
stc
ret
add
aas
hlt
cmc
out
push
iret
incl
movsb
stos
jmp
or
jb
mov
cwtl
and
out
out
jns
pop
jl
cmp
mov
mov
out
hlt
sub
push
sub
bound
xor
xor
adc
adc
jecxz
mov
pop
scas
aaa
sahf
scas
pop
push
cmp
and
or
mov
xchg
int3
sahf
repz
lods
mov
mov
and
mov
xor
daa
and
sbb
mov
push
push
xor
pop
xchg
ss
xchg
out
sub
or
out
cmp
push
jne
jmp
xor
mov
mov
cmp
sbb
popa
or
xchg
xor
ss
add
jl
jge
and
sub
mov
insl
xor
jl
lock
add
push
push
shr
cs
hlt
aad
ljmp
inc
xchg
dec
mov
jb
sub
repz
xchg
aaa
das
neg
xor
add
jae
sub
shll
sti
movsb
sbb
out
lods
inc
addr16
xor
addr16
adc
testl
xchg
icebp
mov
dec
xor
adc
icebp
xor
adc
shr
jo
adc
iret
data16
dec
insb
clc
in
movsl
imul
std
sub
test
push
int3
add
mov
shrl
add
pop
es
and
notl
lods
sbb
bound
test
cmp
shlb
push
cwtl
lock
bnd
in
and
loopne
push
sub
fistpl
xchg
out
adc
dec
arpl
or
clc
aad
mov
and
sahf
aas
das
je
and
xchg
push
movsl
mov
popf
mov
xor
xchg
into
mov
mov
cwtl
int3
or
jnp
xorb
das
xor
icebp
mov
out
loop
lds
cmc
test
scas
test
and
std
sbb
mov
add
jmp
add
xchg
les
adcb
dec
test
sbb
pop
sbbb
ja
or
inc
adc
and
std
aam
jg
stos
call
in
mov
sub
movsl
fdivl
rorb
add
jbe
xchg
lret
inc
xor
add
mov
fidivrs
out
enter
push
inc
es
inc
imul
cmp
jae
movsl
xchg
popa
lahf
outsb
jns
lods
gs
pushf
and
pusha
fstl
out
inc
sub
pusha
icebp
pop
mov
dec
jp
jb
inc
inc
rcll
pop
call
lret
imul
lret
xchg
hlt
addr16
pop
and
jge
insl
insb
sbbl
inc
inc
pop
subb
cmp
les
daa
push
mov
loope
shrb
xchg
insb
testl
adc
and
mov
shll
loopne
popa
push
test
popa
lods
push
ja
xlat
dec
mov
push
jl
xchg
push
jne
aaa
mov
adc
pop
jns
imul
movsb
gs
push
rorl
jae
pop
xchg
jp
rcll
in
sub
movsl
inc
gs
pop
aas
pop
sti
ret
fistpl
xchg
test
fsub
fbstp
daa
lods
lahf
pop
fdivs
sbb
shlb
lds
rorb
daa
mov
negb
sti
add
lea
or
out
aas
addr16
andb
cli
add
dec
shlb
push
je
ds
rolb
out
push
mov
push
mov
lock
jae
das
rorl
inc
into
xchg
jae
inc
cmpsl
push
shrl
adc
movl
pop
or
pop
jl
clc
jecxz
inc
dec
sbb
inc
adc
testb
aas
add
loope
sbb
hlt
fisttpl
add
ja
rcrb
xchg
and
lret
and
cli
popa
mov
dec
pop
pop
jnp
jp
pop
pop
pop
xchg
ds
rclb
test
inc
inc
mov
out
inc
sar
roll
pop
lret
hlt
daa
and
push
addr16
mov
cmp
addr16
ljmp
jno
int3
aas
les
xor
push
mov
push
inc
adc
xor
sbb
outsl
ja
shlb
xchg
test
push
jno
int3
push
les
int
mov
movsl
or
and
cld
push
inc
push
adc
jge
jae
jp
rcl
cwtl
xor
pop
cmp
sahf
daa
push
das
mov
xchg
add
stc
inc
add
push
and
cli
and
fidivrl
inc
jbe
or
addr16
add
and
or
jae
int3
mov
sbb
or
fstl
cmpsl
enter
xchg
xchg
adc
insb
push
shlb
sub
cs
aas
inc
push
or
popl
insb
push
dec
leave
add
sbb
mov
inc
mov
adc
out
inc
adc
lahf
sbb
add
xchg
xor
or
mov
dec
sub
into
mov
jbe
xchg
stos
inc
inc
mov
dec
jbe
shrl
pop
and
cmc
inc
popa
adc
jnp
push
pop
adc
daa
repz
xchg
dec
pusha
push
imul
pop
aaa
fisubs
sbb
jg
jbe
jnp
cmp
popa
jae
fdivrl
mov
sbb
enter
mov
jns
cltd
test
ds
or
jge
mov
add
push
js
inc
push
loope
shll
xchg
jge
push
mov
mov
inc
mov
das
push
xchg
pop
roll
popw
pop
xor
push
push
xchg
adc
insl
xchg
jecxz
push
rcll
pop
data16
rcrb
push
pushf
dec
rcrl
add
adc
or
jge
ret
xor
pop
adc
stos
xor
pop
push
dec
adc
sti
inc
inc
mov
pop
push
ret
mov
dec
push
shlb
test
cmc
or
dec
cmpsl
inc
sbb
cmc
jns
int
les
das
loope
fcompl
dec
int3
and
loop
push
dec
inc
mov
lds
push
add
inc
lods
inc
xor
add
xor
mov
clc
add
mov
xchg
adc
movsb
test
xchg
and
ffree
rcll
jno
mov
std
fsubrp
or
xor
subl
cs
ljmp
pop
sbb
xor
lds
mov
in
outsb
psrlq
sub
ljmp
popa
sub
xor
paddb
in
fisubs
loope
inc
insl
lds
inc
or
insl
xchg
fs
push
outsb
pop
mov
sbb
add
insl
sti
dec
or
scas
jo
fdivrp
and
push
ljmp
xchg
xchg
aas
push
lret
xchg
dec
xchg
out
jg
rolb
aaa
icebp
push
push
jmp
adc
negl
jb
add
jecxz
ds
mov
add
jne
adc
xchg
mov
xchg
jp
mov
int
jl
fstps
push
aad
mov
mov
dec
fidivrs
dec
and
mov
inc
dec
and
mov
pushf
adc
push
cld
jp
push
in
rcrl
aam
dec
pop
sbb
cmp
aaa
fidivrl
rcll
repnz
adcb
in
jg,pn
sbb
xchg
les
sbb
pop
rorb
and
xor
popf
sar
in
rclb
iret
mov
aas
les
push
les
mov
mov
dec
out
pop
loop
mov
add
sti
sbb
movsb
sbb
and
or
or
inc
cmp
pop
nop
ret
movsb
insb
insb
pop
push
push
push
push
or
push
aas
test
mov
out
jg
repnz
lret
ss
add
xor
scas
pop
pop
sti
jl
mov
insb
punpckhwd
jl
jns
jecxz
test
scas
xchg
jp
inc
gs
inc
dec
push
mov
dec
pop
push
repz
rorb
shl
cmp
aas
or
aam
adc
mov
pop
jno
int3
push
les
outsl
adc
pop
dec
mov
push
cmpsb
push
lods
xchg
fwait
mov
pop
bound
push
cwtd
xchg
lea
adc
sbb
rorl
fstl
lock
xor
out
lcall
sub
test
je
aad
inc
decl
jne
adc
xlat
and
jo
mov
cwtl
add
adc
enter
pusha
mov
mov
pop
ja
jmp
filds
daa
xchg
push
test
je
xchg
aaa
aad
sbb
rcrb
lret
jmp
mov
ljmp
mov
fs
cmp
je
loopne
scas
fistps
inc
ljmp
popa
je
aam
outsb
mov
lea
jl
sbb
adc
push
into
lods
mov
mov
sbb
cld
or
pop
jmp
mov
insl
negl
vaddsubps
shll
arpl
andb
test
mov
ja,pn
sbb
test
stos
repz
rcrb
xchg
sahf
jle
mov
lods
les
adc
mov
sti
cli
subl
ret
dec
mov
aam
add
xchg
int3
cmp
leave
mov
lcall
mov
jmp
rep
and
rcr
insl
in
test
cvtps2pi
mov
adc
adc
popf
mov
enter
movsb
std
push
pop
pop
xchg
jg
outsl
rcll
test
stc
hlt
push
mov
mov
sbb
clc
adcb
pop
xor
das
inc
inc
xor
jbe
ret
insb
mov
fwait
mov
mov
aaa
repz
in
sbb
pop
or
data16
push
and
shl
nop
movsl
cwtl
jns
fwait
pop
in
inc
sub
stos
cmp
cmp
es
xrstors
dec
and
dec
arpl
test
shll
dec
jmp
cwtl
movsl
jle
push
outsb
imul
das
test
test
in
clc
gs
add
stos
cli
push
in
repnz
mov
and
sub
pop
push
daa
sub
mov
loopne
push
sbb
stos
add
push
pop
dec
push
add
testl
cmp
fldt
or
xor
loop
mov
pop
mov
addr16
repz
jl
push
faddp
xor
bound
pop
outsl
imul
inc
push
mov
out
arpl
lock
inc
and
out
mov
push
xor
data16
xor
xor
jg
xchg
js
xchg
or
mov
push
pop
and
mov
mov
mov
push
dec
adc
adc
jns
and
dec
add
mov
dec
movsl
popf
pop
lea
cltd
inc
xchg
dec
jo
jb
ja
loopne
pop
mov
test
dec
test
js
xor
add
add
sbb
adc
cmpsl
push
xchg
out
add
lea
inc
and
aam
lds
xor
out
mov
adc
push
inc
adc
in
jae
sub
sbb
cmp
mov
mov
loop
stos
jns
jne
outsl
jl
add
fsubs
add
add
add
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
mov
add
addb
add
or
add
add
add
add
add
mov
add
mov
add
add
add
push
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
pop
add
add
pushl
add
or
ja
ja
ja
ja
ja
jo
add
pushl
add
or
pushl
add
or
ja
jo
ja
ja
ja
jo
add
pushl
ud0
pushl
add
or
push
lock
pushl
add
or
ja
ja
cmp
add
pop
jo
add
or
push
sti
divl
xor
add
or
aas
mov
add
or
ja
ja
ja
mov
add
or
aas
mov
add
push
sti
testl
ja
ja
ja
ja
ja
mov
add
or
push
add
add
add
decl
add
or
ja
ja
ja
ja
add
int3
inc
or
push
or
dec
rorb
decl
rorb
ja
ja
ja
ja
ja
dec
iret
int3
inc
or
pushl
rorb
pushl
lret
rorb
ja
ja
ja
ja
ja
jo
int3
lock
pushl
dec
rorb
pushl
add
or
pushl
add
lock
lock
lock
lock
lock
lock
lock
lock
vpmacssdqh
mov
add
add
add
aas
rolb
pop
addb
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
or
addb
xadd
add
in
dec
jg
add
add
add
and
add
add
lock
add
or
sldt
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
clc
mov
add
sldt
mov
add
jb
sldt
mov
add
sldt
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
fs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
add
add
loopne
inc
out
insl
lds
adc
iret
jae
add
mov
mov
push
add
mov
add
jo
sbb
fnsave
add
add
aas
or
adc
inc
dec
add
and
add
andb
or
pop
or
jmp
or
dec
or
dec
add
pop
push
bound
mov
inc
cmp
lret
pop
adc
in
add
adc
xchg
adc
das
nop
cmp
add
out
sub
xor
adc
dec
push
push
sub
inc
and
bound
add
and
jle
mov
js
inc
adc
jnp
jb
loop
push
and
push
cmpsl
ror
or
xchg
insb
pop
and
arpl
in
sub
out
pushf
push
out
mov
enter
adc
or
divl
adc
or
inc
xchg
add
movsl
xchg
mov
or
adc
pop
push
daa
int
xlat
decb
mov
pusha
or
pushf
testb
mov
loope
rolb
lods
pop
es
repz
xlat
and
xor
iret
sbb
push
xchg
sarb
mov
push
movsl
add
pop
inc
imul
testl
xchg
pop
cmp
negl
dec
push
shlb
cld
test
push
push
adc
and
xor
mov
and
push
jge
or
and
adc
mov
sbb
xor
xor
xchg
out
in
adc
dec
pop
leave
popl
or
or
xchg
shlb
movsb
sbbl
xor
icebp
cli
add
push
cmpsb
pop
pop
call
sbbb
add
add
insb
scas
adcb
fisttps
lcall
mov
adc
clc
mov
ja
incb
push
dec
and
in
and
cmpsb
mov
daa
xchg
lods
add
sub
mov
sub
sbb
mov
mov
clc
inc
adc
sub
movlps
pop
shll
jo
outsb
mov
mov
xor
adc
rolb
mov
lock
pop
jnp
sbb
scas
add
popa
sub
js
push
aaa
add
add
and
cltd
inc
add
jl
mov
rorl
and
xchg
int3
mov
test
test
mov
or
or
and
add
pop
iret
xchg
mov
inc
or
inc
or
repz
pushf
sub
fwait
or
jo
rclb
test
cld
or
push
xchg
sub
std
ficompl
pop
int3
mov
clc
in
mov
or
add
pop
or
mov
pushf
or
push
or
add
and
dec
out
mov
pop
or
loopne
jo
cltd
add
adc
jbe
ja
pop
adc
fimull
or
aaa
adc
dec
das
jns
add
push
sbb
cmp
sbb
add
fstpt
pop
mov
add
mov
popa
adc
cltd
dec
mov
adc
ret
loopne
jae
xor
jno
add
mov
daa
cmp
dec
ret
repnz
jb
add
xchg
push
ljmp
fcmove
or
pop
mov
ljmp
mov
push
bound
jnp
add
shr
add
movsb
push
mov
cmp
gs
or
sub
ds
insb
les
push
mov
dec
inc
add
in
in
insl
push
add
pop
push
dec
out
pusha
inc
and
nop
jp
add
insl
sub
or
or
clc
mov
int
cmp
inc
arpl
mov
les
les
push
inc
push
int3
mov
sti
sub
and
jns
and
rcrl
or
into
or
iret
or
aad
pop
adc
adc
xchg
ret
sbb
or
js
adc
xor
xchg
ja
flds
sbb
repnz
adc
xchg
adc
cmpsb
and
in
mov
inc
mov
ret
inc
xchg
dec
inc
adc
movsb
xchg
add
sahf
pop
shlb
mov
add
mov
mov
add
cmpsb
cmpb
cmpsw
or
lods
movsb
fadds
ds
shrl
pop
inc
inc
fimull
add
xchg
or
mov
add
or
iret
les
test
out
cmp
or
add
orb
xor
dec
cltd
push
cmp
pop
mov
stos
lea
push
cmp
repz
shl
mov
cmpsl
jecxz
pop
insb
dec
sub
ficoml
shrb
or
sbb
xor
xchg
xorb
pusha
cmp
mov
sbbl
add
push
add
add
nop
lret
pop
sbb
pop
or
pusha
adc
or
cmpb
cld
dec
lds
or
adc
mov
xor
mov
add
dec
rorl
ja
jp
jno
sbbb
cltd
mov
or
xchg
add
xchg
add
xchg
add
cwtl
add
cltd
push
icebp
or
ljmp
pushf
and
sahf
and
and
mov
mov
mov
cmpb
pop
mov
daa
ret
ret
subb
xchg
lret
cmp
gs
or
rorl
mov
or
or
or
or
stc
add
bound
or
and
or
or
sub
inc
cmp
pop
cmp
movsb
push
andl
dec
jg
mov
stc
mov
rorb
pop
ficoms
or
rolb
and
out
into
xor
sbb
xor
sbbb
push
dec
stos
shll
std
add
sub
fsubrl
and
and
sub
add
sbb
mov
sbb
movb
inc
push
inc
inc
pop
xchg
mov
adc
add
addl
cmp
add
cmp
outsb
push
push
and
push
push
inc
push
jo
pop
jno
pop
sub
sub
rolb
fadds
inc
fs
push
outsl
js
inc
jp
inc
andb
int
mov
inc
lea
xchg
sbb
hlt
inc
xchg
out
inc
xchg
sub
adc
stc
les
repnz
inc
inc
sahf
push
inc
mov
inc
mov
sti
add
ret
int3
add
les
lds
int3
add
cld
or
xchg
or
add
daa
add
add
pop
sbb
pusha
or
movsb
and
xor
nop
xor
push
xor
icebp
movsb
add
add
inc
sbb
aas
ret
add
or
mov
jmp
or
or
insl
or
jo
cmp
pop
fnstenv
mov
ret
adc
rorl
or
adc
add
or
shlb
testb
add
jg
gs
mov
add
fisubrl
or
adc
pop
xchg
aam
movsl
mov
fs
cld
inc
ds
lahf
add
pop
addr16
jmp
imul
repnz
imul
xorl
and
push
mov
mov
clc
add
out
and
jp
pop
int3
or
sub
rcll
mov
mov
pop
dec
data16
or
or
or
dec
mov
cmp
add
add
out
push
shrb
std
outsb
adc
adc
sub
aam
pop
lret
and
int
or
cwtl
adc
jo
mov
fidivrl
stos
add
xor
xchg
dec
ret
pop
adcb
lcall
or
cmp
add
pushf
loope
xchg
sub
ds
push
dec
or
push
push
andl
or
adc
or
push
mov
std
movsl
or
inc
lret
leave
jae
and
pop
into
add
iret
push
pushf
dec
pop
dec
sbb
faddl
cmpsb
push
pusha
lods
arpl
mov
cmp
cmp
nop
cmp
and
and
push
and
pop
and
pop
and
pop
and
pop
and
and
sbb
in
jns
inc
adc
dec
fwait
mov
mov
loop
or
xchg
adc
and
cwtl
inc
mov
xchg
adc
and
xchg
xchg
and
dec
and
inc
outsb
fiaddl
lret
imul
pop
adcb
jns
sbbb
inc
xor
inc
pushf
das
inc
ret
and
adc
fdivr
xchg
add
and
push
sti
aad
stos
cld
xchg
and
cmc
mov
loope
lret
add
ja
xor
add
sub
sub
and
sub
mov
pop
lods
int3
popf
pushf
add
lods
push
add
arpl
add
das
in
stc
pop
add
fisubl
jae
sub
jl
or
and
adc
in
adc
push
sarb
jg
jle,pn
adc
ja
sub
fwait
xor
ds
mov
add
aad
or
pop
sarb
inc
push
and
sbb
push
ljmp
es
pop
fwait
dec
icebp
rcrl
jne
dec
loop
sbb
arpl
shrb
out
mov
dec
adc
mov
mov
cmp
push
sbb
mov
imul
push
imulb
xor
add
cs
inc
push
ljmp
aam
inc
lret
add
and
lahf
dec
stos
or
pop
sbb
outsb
jmp
je
aam
mov
shll
out
add
or
fstps
cmc
xor
sub
push
sbb
fidivl
es
add
add
gs
mov
jo
or
rclb
test
or
or
sub
mov
mov
sahf
lds
adc
sub
push
xor
ss
inc
and
or
xchg
jae
cmp
inc
cmp
inc
cmp
inc
inc
stos
inc
inc
xor
or
inc
jge
dec
add
add
dec
ss
push
lods
mov
cmp
addb
push
push
sub
mov
sub
hlt
pop
and
or
arpl
outsl
add
add
add
inc
jg
addb
addl
or
pop
test
data16
jmp
xchg
adc
arpl
mov
or
aaa
aad
push
sub
mov
mov
or
into
inc
mov
and
es
cmp
sbb
or
inc
orb
aam
push
cmp
sbb
insb
mov
inc
mov
and
in
leave
jns
imul
enter
je
and
cld
sub
cwtl
insl
mov
mov
push
pop
outsb
test
mov
mov
lock
xlat
shl
xor
adc
mov
adc
xchg
pop
xchg
cli
cwtl
pop
dec
add
clc
xor
pusha
jp
nop
xchg
xchg
dec
pop
inc
cs
aam
push
or
imul
sbb
es
add
ret
aam
rolb
pop
jle
push
cmp
cmpsb
and
mov
cld
add
in
xchg
mov
roll
test
xor
fildl
loop
inc
test
xor
or
add
xchg
or
push
cwtl
and
sbb
fisttpl
add
push
lcall
mov
push
rorl
rcl
mov
jnp
and
rorl
push
sbb
push
pushl
add
test
ret
adc
insb
imul
mov
xorl
jnp
xor
dec
ja
pusha
and
jl
mov
inc
xchg
inc
test
inc
mov
das
loopne
cltd
fimuls
adc
sub
jle
pop
in
xor
add
add
enter
lret
or
aam
and
out
add
mov
mov
fidivl
scas
push
data16
and
testl
xor
jmp
test
inc
xchg
addr16
pop
and
cmpsl
in
mulb
je
movsl
and
inc
stos
xor
dec
clc
mov
or
notb
dec
mov
or
mov
pop
push
fstpl
repnz
mov
outsb
js
test
or
push
or
or
lea
xchg
scas
mov
mov
addb
mov
pusha
outsl
inc
icebp
or
sti
clc
mov
jl
and
mov
cmp
stos
cwtl
mov
arpl
orb
dec
cwtl
imul
xor
popf
xor
inc
ret
dec
and
and
out
cltd
div
add
out
lret
sub
stos
or
arpl
mov
or
and
sub
adc
adc
shll
add
sub
add
sbb
adcb
roll
ret
sub
adcb
xchg
pop
mov
shll
xor
dec
vpandn
cs
test
mov
mov
adc
and
cmp
or
filds
or
sahf
mov
and
jo
add
and
outsb
add
xor
in
add
sub
jbe
nop
sub
sbb
xchg
xchg
sbb
push
mov
call
cmp
cmp
jge
dec
divl
push
inc
and
mov
add
lret
shr
into
or
pop
cmp
test
icebp
inc
gs
lret
fisubs
and
rcrb
fs
dec
cli
jno
xor
fmull
sub
sbb
jb
stos
jecxz
add
and
data16
mov
sbb
aas
sbb
mov
xor
or
ret
add
pop
or
or
add
sub
push
push
int
pusha
add
cli
adc
pop
dec
ss
insb
pop
lahf
fsubs
imul
in
imul
mov
mov
mov
jne
mov
rdmsr
addb
pop
loope
push
hlt
ret
inc
adc
mov
cmp
roll
and
sub
mov
cmp
je
mov
xor
xchg
cltd
adc
dec
add
dec
add
add
xor
es
adc
mov
insb
fidivrl
adc
stos
sub
add
or
dec
repz
pop
outsl
cmp
or
push
mov
rolb
test
or
mov
sti
insl
hlt
pop
gs
pop
xchg
xor
or
xchg
add
xchg
add
xchg
add
cwtl
add
inc
dec
xlat
les
xchg
push
add
pop
add
arpl
sub
mov
out
lods
and
notl
test
andl
or
sbb
dec
or
dec
or
subl
rcr
imul
cmp
lahf
adc
inc
dec
notb
xor
cmp
mov
add
push
test
add
xchg
pop
pop
sub
and
adc
push
or
xor
cmp
push
xchg
ret
dec
lcall
nop
inc
mov
andb
jecxz
dec
and
xchg
and
dec
inc
push
push
dec
dec
add
data16
xor
xchg
stos
and
js
orl
ljmp
adc
mov
xchg
nop
push
orb
jbe
mov
dec
std
push
xchg
sbb
addb
dec
xchg
int3
adc
jge
jae
jg
fdivrl
cmpsb
or
pusha
sub
ljmp
aas
outsl
cmp
push
sbb
adc
or
pushf
test
fiadds
in
inc
mov
dec
and
mov
and
mov
jno
jo
outsb
ficompl
pop
loope
or
push
mov
orb
roll
dec
jbe
sbb
pop
add
sub
push
jns
scas
roll
rorl
cmpsb
add
icebp
nop
sub
test
jl
or
movsb
aaa
add
or
inc
mov
jl
cld
int3
shlb
mov
outsl
insb
add
dec
scas
fstpt
inc
rorb
fwait
addl
dec
mov
mov
adc
xor
adcb
or
idiv
and
fcmove
add
sbb
das
xor
ds
dec
add
cmp
roll
std
jmp
add
dec
imul
dec
sbb
in
leave
cmp
and
fs
add
mov
pop
inc
sbb
cltd
or
hlt
in
add
sub
cmpsb
xor
inc
fiadds
outsb
notb
lods
push
or
xor
lods
inc
pop
add
dec
add
push
lret
sbb
add
test
out
push
add
jns
mov
or
sub
xor
xor
xor
decl
cmp
jl
adc
cwtl
xor
adc
add
push
jmp
push
mov
or
nop
cmp
ja
mov
adc
scas
xor
out
add
push
mull
orl
popf
adc
xchg
cmp
ds
scas
test
mov
lods
xchg
xor
inc
push
aas
add
push
fs
mov
xor
fadd
adcb
xchg
push
sbb
xor
sub
mov
mov
add
or
leave
lods
pop
jno
jg
push
scas
aad
enter
xor
fistpll
cmp
fcomps
add
and
mov
pop
xchg
aam
out
cs
hlt
mov
lret
cmc
add
stc
add
int3
push
testl
mov
idivb
add
leave
loope
lods
mov
adc
adc
pusha
sbbb
xor
clc
sub
mov
shlb
add
aaa
subl
jge
enter
inc
xor
or
and
inc
xlat
inc
add
jne
dec
pusha
js
or
xlat
sti
dec
or
xor
cmp
mov
inc
add
and
inc
loopne
push
add
pop
jecxz
push
mov
lods
lret
inc
dec
ret
and
push
hlt
and
add
mov
ret
cmp
xchg
sub
or
and
pop
cmp
push
and
mov
push
xor
rcrl
insb
clc
lock
dec
cli
ss
xor
fistl
js
adc
sub
sub
or
icebp
lods
dec
cli
repz
add
sbb
gs
mov
or
add
stc
test
xchg
imul
jbe
pop
insl
fwait
push
sahf
pop
inc
outsb
movsl
push
mov
imul
adc
xor
or
pop
push
sub
sbb
adc
test
or
inc
mov
push
mov
pop
inc
push
sbbb
jne
in
or
inc
stc
dec
and
or
mov
packsswb
repz
pop
jne
mov
in
jg
add
push
call
inc
aaa
out
or
pop
adc
popf
sub
add
mov
clc
pop
les
aas
push
cmc
mov
test
or
aas
out
je
cs
imull
ret
push
mov
cmp
push
inc
xchg
dec
iret
bound
cmp
xchg
test
cmp
rcl
and
dec
add
adc
out
popf
lods
add
hlt
push
stos
lods
xchg
and
mov
or
addr16
jb
cmp
adc
sbb
fiaddl
js
xor
scas
add
fcomps
inc
mov
add
and
in
xor
xor
push
or
adc
imul
rolb
cmp
add
add
inc
test
cld
cmp
mov
cmp
pusha
sbb
enter
out
cld
test
jmp
ret
flds
jb
jmp
xlat
divb
or
setns
inc
cwtl
mov
pop
rclb
cld
lcall
inc
jmp
int3
aad
xor
sub
xchg
bnd
out
adcl
neg
push
jmp
lds
push
cmpsl
lret
data16
pop
xchg
lds
add
mov
pop
add
setge
adc
push
and
add
bswap
cmp
mov
movsb
je
or
in
and
mov
aam
sub
xchg
add
jae
adc
or
sub
dec
mov
adc
pop
out
iret
insl
mov
mov
mov
lea
push
sbb
das
ss
sbb
ds
push
cmp
outsl
lret
xor
icebp
push
pop
add
cwtl
not
sub
cmc
ss
iret
dec
loop
dec
call
mul
std
add
jno
leave
sub
adc
xchg
add
xor
jne
sysenter
xor
adc
pop
add
aad
push
fistpll
repnz
es
push
xor
in
inc
pushf
not
nop
sahf
and
mov
bound
sub
or
push
outsl
pusha
mov
shll
fadd
jp
cmp
fdiv
fisttpl
push
add
jne
dec
xlat
push
add
add
test
xor
add
sub
inc
int3
fidivrs
sbb
push
push
push
sub
inc
rol
movsb
outsb
dec
nop
outsl
leave
and
ss
not
or
push
pop
inc
mov
stc
xchg
adc
dec
jns
or
add
pop
pop
bswap
mov
scas
fs
pop
lret
or
cli
pop
sti
inc
mov
cmp
adc
hlt
call
jo
dec
out
sbb
push
pushf
dec
xchg
inc
sbb
dec
mov
jecxz
add
aam
cmp
sub
pusha
add
sbb
xchg
es
cmp
test
xchg
ljmp
rorb
and
test
add
int3
inc
popa
dec
adc
aaa
cld
ret
jne
jae
xor
and
pop
neg
or
pop
xor
push
inc
push
pop
dec
push
stos
inc
dec
mov
out
out
imull
push
mov
dec
icebp
aad
jae
adc
not
rol
xlat
xor
mov
loop
mov
andl
neg
dec
push
dec
leave
repnz
adc
lds
addl
cmp
xor
movzwl
xor
inc
mov
bound
dec
fadd
out
mov
addr16
fwait
in
aad
adc
push
add
not
dec
out
incb
cmp
orb
sbb
xor
insl
jb
inc
mov
jne
xor
test
xor
push
inc
lds
bswap
xchg
rclb
dec
dec
add
aad
dec
mov
das
out
pop
int3
mov
mov
push
jne
mov
mov
adc
ss
loopne
incl
or
mov
inc
testl
and
cmc
dec
mov
nop
inc
ja
cmp
pop
mov
mov
test
jp
sbb
xor
sub
enter
ds
inc
inc
pop
sub
push
mov
mov
pop
enter
xor
sahf
mov
and
test
and
lret
xchg
addr16
arpl
push
add
sete
pusha
loop
addr16
rol
sbb
std
xor
mov
push
pop
pop
dec
push
push
dec
sub
rorl
lret
out
inc
incl
loope
loopne
ret
pop
addr16
xlat
cmp
outsl
mov
inc
push
pop
neg
or
or
sbb
in
add
adc
xor
shlb
cmp
test
call
add
dec
in
decl
sbb
add
iret
xor
lods
popa
aad
mov
xor
add
mov
and
or
dec
in
out
addr16
int3
pop
add
stos
xchg
pop
sbb
test
inc
xor
cmp
arpl
repz
mov
iret
xchg
dec
lahf
mov
pop
int
dec
inc
bound
or
daa
mov
add
lcall
xchg
les
js
pusha
int
or
es
and
daa
imul
je
adc
sub
pop
mov
xchg
sub
out
mov
mulb
inc
shrl
mov
add
pop
dec
popl
lahf
lahf
xor
inc
lods
negl
push
pop
in
scas
arpl
jae,pt
or
out
xchg
pusha
xlat
jge
and
call
mov
sub
mov
and
or
out
test
test
outsl
sub
fcmovnu
adc
dec
mov
add
sbb
into
mov
cmc
loop
pushf
fsubl
bound
or
ret
arpl
add
add
arpl
add
xlat
adc
fcmovbe
adc
ret
and
out
out
sbb
addb
push
and
out
aas
sub
imul
in
in
push
negl
roll
fnstcw
sub
mov
loopne
repnz
sarb
cmp
and
push
push
sti
sub
popf
orl
push
pop
lods
jmp
loop
mov
dec
clc
add
dec
sub
inc
or
int3
data16
dec
pop
das
dec
test
out
add
inc
add
mov
rclb
sub
out
add
icebp
cwtl
and
popa
push
cmp
mov
ffree
pushf
sti
xchg
ss
fwait
add
and
int
pop
add
pop
shlb
or
mov
add
insb
cmp
cmpsl
mov
xchg
arpl
je
cltd
or
mov
popa
fstl
les
leave
add
xchg
arpl
inc
push
icebp
incb
dec
int
xchg
pop
popl
fdivr
sub
fimull
not
and
xchg
das
subb
dec
or
mov
jno
scas
inc
xlat
xor
mov
inc
fildl
mov
mov
mov
not
in
jmp
sub
nop
hlt
not
xchg
mov
lcall
lods
and
xchg
jge
outsb
sub
push
notl
sahf
jo
push
pop
pop
dec
adc
adc
test
add
icebp
ss
or
dec
push
adc
fisttpll
rcrl
jmp
adc
pop
movsb
xchg
shrb
bts
or
unpcklps
jge
jmp
rolb
je
aas
sub
into
push
mov
lea
inc
loop
cltd
xchg
ret
push
int3
mov
inc
cmpsb
xchg
add
xor
jbe
fadd
lcall
mov
mov
in
gs
cmc
inc
jle
in
push
dec
add
out
test
fdivs
jle
or
repnz
call
cltd
dec
and
lock
adc
stos
and
xchg
lea
sub
divb
pop
data16
cmp
sti
cltd
mov
inc
add
jl
fbld
mov
je
aaa
adc
xor
mov
repz
pop
test
jno
ret
call
pop
mov
xchg
inc
and
mov
sbb
test
rcrl
push
jnp
pusha
cmp
dec
sbb
jl
std
cli
fisubrs
lret
int
incb
xor
pusha
sub
adc
sti
fwait
adc
sbb
cmp
xor
repnz
lahf
cmpsl
adc
adc
rolb
bt
subb
enter
mov
jne
add
shr
inc
lea
scas
mov
sub
pushl
fstl
push
lret
or
push
fists
pop
xor
lcall
pop
cmp
cs
sub
mov
movsl
call
repz
sarl
push
inc
add
xchg
mov
push
or
rolb
push
cli
mov
xchg
lcall
push
jmp
dec
mov
jecxz
push
sub
fidivs
add
pop
imull
les
adc
cwtl
xor
add
mov
xor
sub
or
test
sbb
not
mov
loope
testl
call
sbb
cli
sbb
dec
mov
rcl
xor
imul
test
neg
addl
fld
xchg
daa
rcrl
or
pusha
mov
aad
popa
addb
cwtl
adc
inc
gs
imul
pop
adc
rorb
movsb
sub
pop
add
dec
ljmp
xlat
pop
and
sbb
pop
xchg
dec
add
fsincos
leave
sarl
jne
or
mov
push
jno
rcrl
aam
inc
jecxz
enter
pop
jle
inc
or
xor
add
ficomps
in
or
andl
nop
icebp
sahf
mov
neg
xor
addb
jg
add
pop
push
pop
test
ds
add
adc
ljmp
sbb
dec
dec
cld
dec
pop
xchg
daa
xchg
and
lea
not
cltd
fisttps
adc
and
xchg
icebp
ja
add
push
pop
pop
dec
dec
arpl
push
js
dec
aad
or
lock
xor
out
cmpb
not
bound
outsl
jb
pop
jge
fst
ss
push
pop
jns
shlb
cmpsb
xchg
add
mov
je
add
call
jb
or
add
add
int
or
xchg
and
int
adc
cltd
and
mov
fmull
xlat
or
inc
adc
rorl
js
xor
add
xchg
popa
add
enter
mov
inc
fidivs
cmp
mov
ret
and
mov
xlat
pop
and
and
dec
rolb
loope
cmp
test
cmc
or
sbb
pop
and
add
inc
pop
xor
mov
pop
push
mov
or
inc
xchg
and
push
push
sub
add
and
add
cwtl
mov
repz
push
sub
jl
pop
aam
and
mov
dec
mov
shl
shlb
repnz
inc
xchg
push
xor
adc
repnz
ss
push
sbbb
mov
jecxz
mov
pusha
xchg
adc
mov
sub
ljmp
jne
pop
aad
inc
add
sbb
test
addl
mov
inc
or
pop
inc
test
jo
add
stc
pop
sub
and
or
scas
add
xchg
sub
dec
mov
xor
testb
mov
xlat
sbb
xchg
push
nop
pop
sbb
dec
movsb
jecxz
jle
push
call
mov
inc
push
or
mov
pushf
test
inc
ret
cli
imul
xor
xor
and
pop
push
inc
cwtl
inc
mov
xchg
adc
in
inc
cmp
xor
push
not
adc
inc
add
xor
sub
adc
dec
rorl
sub
ffreep
xchg
cltd
mov
lahf
push
xor
inc
stos
ficoml
fildl
mov
dec
add
imul
xor
scas
add
cmp
cmp
mov
daa
mov
push
in
pop
popa
sub
test
shlb
notl
mov
subl
cltd
mov
mov
push
push
and
pop
push
scas
jno
xor
daa
nop
aam
js
scas
test
clc
cwtl
in
arpl
xchg
int3
adc
dec
inc
push
pop
cwtl
sbb
xchg
aaa
mov
mov
mov
cwtl
adc
xchg
adc
sub
or
cs
push
ret
inc
sub
in
mov
icebp
nop
scas
mov
mov
sbb
inc
pop
pop
popf
bound
jmp
pop
and
mov
jo
mov
or
test
addr16
stc
outsb
lods
pushf
dec
shufps
adc
mov
lea
pop
sarl
inc
aaa
mov
neg
push
andb
or
push
pop
filds
push
jb
or
repz
bound
mov
pop
clc
nop
adc
add
cmp
test
dec
popf
ja
add
xchg
and
and
dec
in
and
dec
jno
daa
sub
mov
and
fiaddl
sub
pop
jp
and
movl
adc
xchg
pop
out
dec
inc
rclb
xchg
xor
push
push
nop
scas
push
ret
push
sub
xchg
jg
xchg
inc
xor
lahf
sub
jmp
ror
xor
pop
mov
xchg
xchg
xor
mov
and
and
aad
in
push
inc
icebp
cmp
inc
push
xor
dec
mov
dec
dec
dec
jecxz
cmp
cld
xor
inc
xchg
jmp
push
in
and
aaa
adc
repnz
push
inc
subl
cs
ret
xchg
leave
and
pusha
hlt
push
sbb
push
mov
or
pop
dec
xchg
cmp
inc
jo
add
stos
pusha
and
in
es
sbb
repz
push
pop
pop
fdivr
nop
js
cmpsb
in
mov
mov
or
cs
jae
dec
test
or
add
cmp
test
jmp
neg
out
adc
mov
push
dec
out
cmp
mov
sbb
mov
movb
or
leave
xor
cmpsb
ret
add
or
das
xor
inc
mov
dec
js
push
lret
cmp
pop
and
fwait
andl
add
mov
sarb
push
adc
imul
jp
cs
push
int3
ret
push
add
bsf
mov
add
sti
stos
sub
xor
pop
xchg
cmpsl
mov
mov
or
adc
repz
or
leave
sbb
add
push
repnz
or
shrl
cli
dec
orb
test
sub
xor
scas
mov
pop
int
shrb
add
inc
lock
shll
adc
jl
pop
and
nop
jl
pusha
add
in
lock
add
xor
aad
mov
test
loop
jae
bnd
adc
adc
add
xchg
lea
lret
mov
int
add
cltd
inc
call
sti
test
pop
or
sahf
mov
shlb
mov
and
js
push
test
or
and
xchg
xor
out
mov
mov
inc
push
pop
leave
sub
rolb
out
sbb
cmpsb
sbb
xor
repz
adc
and
ds
and
mov
mov
das
pop
test
xchg
mov
in
sbb
cmp
adc
push
add
xor
inc
rolb
cmp
add
call
pop
inc
imul
inc
jecxz
bound
out
push
std
push
mov
jp
push
inc
fcmovnbe
xor
mov
adc
add
addl
movsb
dec
in
ficomps
test
mov
xchg
pop
mulb
shl
dec
and
pop
shl
sti
dec
mov
xchg
sub
dec
and
dec
and
dec
xchg
mov
or
aam
jae
mov
add
mov
xor
movsb
iret
lds
out
and
fimuls
movnti
pop
and
dec
movsb
cld
dec
outsb
add
outsb
repz
nop
cwtl
lahf
subb
add
dec
mov
add
pusha
mov
mov
xor
fsubl
into
dec
xor
das
data16
jae
xorb
or
out
jnp
xadd
mov
imul
in
ja
push
jae
cmc
je
inc
icebp
call
add
xor
xchg
or
insl
inc
and
push
leave
add
mov
xchg
xchg
cmpl
xor
je
pusha
cmp
xor
adcb
and
push
adc
sbb
pop
jns
sti
nop
and
xchg
lods
mov
outsl
out
mov
das
jbe
jbe
out
sbb
sbb
push
xchg
push
ret
sub
jbe
mov
sub
push
shrb
into
or
in
fistpl
jbe
mov
mov
js
insl
loope
in
xchg
gs
sbb
mov
int3
imul
mov
and
sbb
jp
or
fstpl
xor
shll
mov
cmpsb
popl
hlt
push
aas
imul
and
std
xchg
push
or
aad
sbb
and
xchg
mov
push
inc
adc
rcr
aad
cwtl
sub
adc
nop
lret
adc
xchg
mov
cmpsb
jecxz
out
sub
inc
jbe
push
push
xor
mov
stc
inc
mov
lods
add
sub
or
loopne
add
mov
stos
not
test
mov
mov
or
and
inc
test
adc
mov
mov
dec
or
js
xchg
mov
sbb
setns
inc
xchg
cwtl
xor
jb
sbb
addr16
cmp
dec
add
cmp
mov
add
xor
test
fcmovb
je
cmpsl
cmp
xchg
add
repnz
inc
sub
jns
in
cmpl
add
inc
addr16
push
inc
cmpsl
aad
enter
sarl
rclb
sarb
adc
stos
cli
ret
inc
mov
imulb
je
xchg
add
push
sub
out
mov
pop
cmp
lret
int3
stos
pop
add
test
rolb
jle
int
daa
in
int3
sbb
dec
mov
out
into
inc
test
int3
scas
sub
lcall
dec
push
cmc
dec
or
or
sbb
stc
mov
inc
dec
rclb
mov
inc
in
adc
and
cmp
add
mull
sub
addb
in
lret
test
ds
mov
movsb
faddl
cltd
mov
cmp
inc
es
push
les
push
ljmp
and
sub
adc
cmpsl
xchg
cmp
test
sub
test
gs
es
je
mov
mov
cli
inc
fs
push
orb
mov
outsb
xchg
inc
jns
incl
sti
jo
dec
cmp
and
push
or
add
mov
mov
add
jne
sub
xchg
ds
sbb
jno
pop
cmp
outsb
add
dec
xor
adc
movl
xchg
les
xchg
mov
push
mov
push
cmp
add
adc
rcrb
cmpsb
decb
adc
adc
push
adc
test
int3
sbb
dec
cmpsb
shrl
adc
mov
xor
jp
enter
das
outsb
sbb
test
loope
add
inc
test
outsb
mov
pop
xchg
xor
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
sbb
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
add
outsl
fistpll
cmp
aad
mov
call
add
fdivrs
push
add
fisttps
addr16
cmpsb
fldl
push
mov
dec
ss
fiaddl
sub
scas
idivb
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
sbb
shrb
ss
push
xchg
add
int3
add
mov
and
es
mov
mov
pop
mov
sub
mov
cmpsl
call
add
xor
shlb
sub
scas
ficomps
lock
es
arpl
pushf
mov
xchg
insl
add
ss
add
test
jb
push
rolb
adc
mov
mov
cmp
mov
fwait
add
aad
mov
out
fdivrl
fisttpl
aam
rcrl
icebp
clc
mov
push
pop
int
mov
mov
outsl
int3
inc
mov
sbb
pop
add
push
dec
add
push
pop
or
adc
sahf
add
ror
imul
insb
add
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
pusha
add
dec
inc
imul
dec
push
scas
fcompl
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
mov
lret
mov
cmpsb
add
shr
mov
xlat
int
add
push
mov
add
mov
dec
popa
les
add
push
sub
add
or
cld
filds
add
xor
adc
inc
push
and
in
jmp
push
fdivs
cs
xor
je
and
jne
push
popa
fbld
dec
gs
ss
out
push
sbb
sbb
jno
mov
push
push
add
cmpsb
or
outsb
incl
adc
and
loope
xor
adc
sbb
mov
sbbb
xor
xor
bound
adc
or
or
insb
mov
gs
push
mov
insl
and
cmp
xor
inc
insb
imul
addr16
cmp
push
rorl
insl
sbb
sbb
and
inc
inc
icebp
push
and
insl
sti
lret
cmp
jns
xor
arpl
fs
sahf
repz
jo
ljmp
imul
dec
gs
xor
jns
xor
dec
not
test
and
mov
sub
in
lock
movsb
dec
scas
and
es
test
cmpsb
push
outsb
adc
jno
addr16
add
je
sbb
mov
sub
jo
imul
mov
dec
jno
push
or
cmp
jo
push
gs
and
sub
jae
mov
adc
xor
pop
insb
lahf
dec
into
inc
dec
rclb
sub
outsb
or
pushf
and
xor
sarb
aas
inc
pop
clc
out
mov
pop
mov
nop
jno
andb
es
push
push
adc
dec
jae
xchg
cwtl
adc
sbb
cwtl
nop
mov
mov
cmp
inc
xchg
pusha
into
mov
jb
fsubp
cmp
fsubrp
xor
pushf
cli
inc
mov
and
ret
std
and
pop
pushf
test
and
push
or
inc
push
pop
dec
inc
mov
pop
sbb
add
popa
push
aaa
lods
shll
sub
inc
scas
sub
int3
cmp
sbb
xchg
pop
jp
dec
stc
notl
push
cltd
push
inc
inc
xchg
inc
sub
mov
cmp
pop
pushfw
pop
movsl
pushf
xchg
push
dec
fs
lret
xor
sub
test
jp
sub
xchg
cmpsb
adc
xchg
inc
gs
xor
pop
sbb
sub
xchg
cs
mov
inc
xchg
clc
cltd
inc
cltd
jo
data16
in
scas
cld
xchg
and
sub
rclb
add
shrb
ljmp
jno
jmp
mov
loop
push
scas
dec
lcall
dec
inc
inc
push
inc
out
call
and
in
dec
out
mov
hlt
dec
push
cs
mov
jmp
loop
add
or
mov
gs
ja
jg
jne
cmp
repz
int
pop
sub
jmpw
ljmp
bound
or
fs
punpcklwd
mulb
stc
movsb
jle
push
xchg
repnz
pop
lahf
js
shlb
in
xchg
aaa
test
jl
pop
ja
jnp
xchg
aaa
push
jp
cmp
and
xor
mov
fmull
push
fsubrs
idivb
in
cmp
and
cs
lods
fidivrl
lods
in
dec
into
inc
jne
lcall
push
fistps
pushf
push
pop
jae
imul
stos
pop
dec
leave
xchg
dec
aad
fsubs
mov
and
add
push
sbb
in
arpl
in
cmp
pop
stos
pop
sub
pop
xor
dec
xor
dec
xchg
adc
xor
and
outsb
xchg
xchg
xchg
jl
je
mov
jb
xor
push
in
and
sub
test
lret
mov
jae
clc
in
or
icebp
lock
cmp
mov
xor
jp
js
push
and
cmp
nop
inc
or
je
aam
adc
sbb
sbb
sbb
mov
jp
enter
inc
sbb
pop
dec
rcrl
push
push
rclb
inc
jnp
sub
adc
js
leave
mov
jo
xchg
dec
sbb
sub
adc
pop
bound
inc
enter
jo
leave
cmp
sbb
lahf
cmp
jae
cmpsb
jno
push
push
imul
popa
xchg
inc
jp
push
sarl
jg
test
lods
dec
data16
mov
pop
xchg
cmp
xor
fs
rolb
sbb
arpl
mov
xor
inc
jno
cwtl
cwtl
cmp
jge
jb
fidivrl
sub
xor
movl
xchg
add
bound
mov
rcll
cmp
push
cmp
dec
lahf
pop
pusha
dec
mov
dec
ret
mov
mov
or
mov
or
inc
dec
mov
xor
or
mov
xchg
repnz
push
nop
xor
jo
fwait
and
stos
in
adc
and
mov
jmp
lock
lcall
pop
sti
push
push
push
aaa
dec
sbb
jnp
cmpb
outsb
xchg
or
mov
mov
inc
jb
outsb
insb
daa
jae
movsl
bound
mov
addr16
add
imul
pop
sbb
idivb
aam
pusha
sub
and
xchg
notb
movsb
ret
pop
xchg
cwtl
cmc
jg
push
and
dec
sub
pop
mov
bt
xchg
add
sub
sub
add
or
push
add
in
out
add
inc
add
push
ret
sub
loopne
pop
jo
cmp
xor
push
pop
aam
push
mov
inc
ret
jne
jecxz
pminsw
xchg
push
insb
add
jnp
movsb
pop
mov
ja
push
push
and
jnp
bound
mov
or
xor
push
or
or
dec
pop
jns
and
xor
xor
pushf
pop
push
int3
adc
jae
and
and
push
pop
gs
outsl
les
imul
test
push
or
incl
popa
sub
xor
stos
adc
inc
cmp
in
test
fcomp
lods
or
push
or
or
sub
jae
dec
jbe
jecxz
addb
lcall
orb
jae
sub
jo
xor
aaa
jno
or
add
movsb
sbb
adc
adc
int3
adc
aad
sbb
pop
rclb
ficomps
in
dec
cmp
push
rorb
mov
mov
jecxz
ja
push
sub
movsb
xor
pushf
fcoml
mov
add
dec
dec
inc
mov
mov
adc
jecxz
push
or
dec
lret
inc
xchg
pop
or
mov
mov
pop
sbb
push
stos
or
xor
sub
int3
xor
addb
pop
jecxz
jae
adc
sub
cmp
sub
imul
lock
mov
imulb
inc
or
inc
xchg
add
jb
stos
scas
xchg
push
push
fldcw
movsl
and
push
dec
cmp
rclb
push
loopne
dec
inc
xchg
inc
movsl
adc
push
xor
cmp
and
popa
sub
popa
jp
sbb
cmp
aaa
xchg
or
or
es
jae
popa
mov
iret
adc
imul
cmp
push
stos
cmp
or
pop
mov
mov
cmpsb
arpl
les
sub
das
data16
mov
pop
std
lea
cmp
xchg
daa
stos
pop
xchg
test
call
fs
repz
pop
inc
and
ds
insl
sbb
leave
push
sub
dec
sbb
xor
pop
push
push
mov
stos
mov
push
test
sahf
xor
cmp
sarl
jne
xchg
add
dec
dec
sub
lcall
pusha
dec
popa
push
sub
dec
mov
outsb
les
and
pushf
push
rorl
leave
jmp
jno
xor
pop
jmp
and
dec
and
mov
push
nop
fwait
jb
stos
adc
adc
push
fs
jo
mov
js
inc
leave
clc
lretw
cmp
rol
or
popf
lcall
insl
ss
mov
dec
inc
pusha
mov
inc
dec
pop
and
movsl
sbbb
lcall
movsb
dec
mov
insb
test
sbb
outsl
mov
fidivrs
sub
mov
fwait
dec
or
cmp
inc
push
inc
arpl
inc
fmul
xchg
push
out
cmp
sub
inc
sbb
test
push
imul
pop
jp
adc
or
pushf
cld
lods
add
jne
mov
leave
push
xchg
jne
mov
sbb
insl
adc
mov
jp
test
ss
mov
pop
jne
push
pop
cltd
inc
jno
adc
movsb
adc
icebp
mov
xchg
and
jne
mov
insb
cmpsb
xchg
dec
inc
adc
aam
adc
and
sub
jg
nop
adc
xchg
gs
outsl
jbe
xor
pop
mov
jl
mov
sbb
lds
iret
in
lods
pop
push
icebp
or
push
push
dec
mov
mov
pop
test
push
fs
add
dec
jne
les
push
adc
imul
insl
js
cmc
fs
es
dec
bound
and
inc
andb
or
inc
push
stos
adc
sbb
and
pop
stos
jbe
fmuls
nop
mov
cmp
stc
fcmovnb
adc
and
cwtl
jp
gs
sub
push
or
xchg
sbb
ror
mov
call
sbb
push
dec
adc
test
mov
stos
mov
xchg
popa
push
jnp
xor
sub
adc
aaa
mov
and
stos
adc
mov
loopne
adc
or
leave
stos
mov
dec
and
insl
xor
adc
xor
scas
adc
repz
pop
addr16
lods
ljmp
and
dec
scas
adc
pop
cmpsl
adc
push
lods
sbb
arpl
and
adc
sbb
scas
adc
mov
adc
bound
adcl
jmp
fisttpl
js
aam
ret
ss
push
dec
outsb
cltd
mov
sbb
jns
jae
imul
imul
sub
sbb
and
popf
xchg
jb
jbe
add
in
adc
pop
mov
adc
stos
adc
in
push
sahf
mov
pushf
in
mov
insb
test
dec
jp
adc
leave
daa
dec
xor
bound
insb
lods
sub
movsl
or
inc
mov
lds
sbb
pusha
xchg
sbb
push
bound
push
imul
cmpsb
pop
stos
cmp
mov
aad
sbb
sub
xchg
mov
adcl
je
jb
adc
or
addr16
stc
cmc
dec
sub
rcl
jmp
adc
adc
into
out
lods
adc
or
addb
add
cmp
testl
pop
mov
push
insl
inc
or
outsb
push
mov
inc
imul
and
dec
inc
push
or
inc
loope
inc
xchg
dec
cmp
insl
repz
dec
pop
pop
or
jns
xchg
adcl
inc
inc
inc
mov
lcall
outsl
jbe
loope
arpl
or
jle
adc
jae
test
dec
pop
insb
cmp
adc
orl
mov
cwtl
in
inc
gs
dec
jne
xor
mov
or
push
push
inc
dec
adc
inc
gs
adc
inc
push
cmp
xor
mov
movsb
inc
push
mov
es
adc
inc
mov
push
jne
or
push
adc
jne
push
cmp
cmp
sub
nop
jo
das
jo
mov
cmp
cld
dec
push
int3
add
jl
jmp
jge
dec
nop
insl
imul
scas
mov
mov
stos
iret
stos
test
xchg
sarb
sti
push
pop
stc
test
lea
jno
das
xchg
add
push
lret
int
jl
jne
jo
xchg
sbbb
fiaddl
je
cmp
push
adc
xor
jl
lods
pusha
and
fsubs
pop
cwtl
push
or
cmpsl
dec
fnstcw
lock
enter
pusha
jo
loope
push
mov
das
imul
arpl
pop
outsb
push
mov
and
test
mov
pop
gs
arpl
cs
add
inc
xor
jae
loopne
sub
mov
rorl
add
loopne
scas
pop
gs
enter
push
or
out
dec
inc
fiaddl
or
enter
xchg
js
xor
add
or
mov
sbb
push
repnz
inc
lock
adc
cmpsl
push
inc
sbb
aaa
or
loope
addb
rclb
add
xor
sub
dec
adc
dec
cs
cwtl
aad
dec
repnz
mov
and
movsl
add
pop
or
mov
inc
adc
scas
xor
repnz
inc
mov
inc
add
loop
test
mov
ret
inc
inc
adc
rorb
adc
rcrb
inc
mov
stc
mov
loop
mov
lods
fadds
dec
jecxz
mov
lahf
and
adc
and
insb
inc
add
push
jecxz
mov
enter
shlb
andb
mov
sbb
lcall
loopne
imul
or
mov
insl
adc
fwait
and
mov
sbbl
push
jmp
shr
adc
or
lock
cmpsl
mov
or
mov
repz
adc
and
sahf
cmp
mov
std
and
test
cli
adc
mov
jns
xchg
dec
mov
sti
stos
or
leave
inc
iret
aad
add
and
add
inc
fmuls
xor
mov
mov
insb
faddl
js
fstpl
and
add
xchg
mov
ret
inc
adc
or
xchg
js
test
out
inc
repz
inc
loopne
mov
loop
sbb
xchg
arpl
cltd
inc
movsl
sti
mov
jecxz
jmp
in
and
adc
pop
inc
out
mov
insb
and
dec
into
lea
out
xchg
or
and
and
inc
adc
jo
xchg
xchg
cwtl
and
call
mov
jae
mov
out
and
jge
andb
push
nop
and
add
dec
stos
xchg
stc
adc
roll
hlt
lock
mov
sbb
add
dec
outsb
mov
clc
adc
and
inc
negl
inc
stc
and
or
jo
jns
dec
sti
inc
push
jbe
jg
dec
cld
mov
or
or
nop
mov
dec
das
mov
inc
push
pop
mov
jne
xchg
and
inc
dec
push
add
sbb
and
mov
stc
adc
and
dec
and
push
mov
sub
cmp
add
push
xor
adc
negl
cmp
mov
shll
inc
adc
sub
shlb
out
adcl
adc
and
pop
and
dec
xchg
rorl
adc
in
inc
add
inc
xchg
inc
add
push
imul
lcall
inc
jbe
les
xchg
ja
lahf
mov
jns
inc
and
inc
shll
pop
inc
mov
inc
xchg
stc
mov
fnstcw
and
cwtl
add
inc
or
and
clc
mov
mov
cmpsb
and
mov
pop
mov
mov
or
rorb
lret
int3
or
into
or
and
orb
push
xchg
or
and
and
inc
xchg
mov
je
sub
subb
adc
and
add
inc
dec
jmp
rorl
or
repz
hlt
adc
and
adc
xor
jecxz
or
sub
inc
and
add
xchg
mov
or
and
inc
sub
push
testl
shlb
sub
ss
cmp
or
pop
dec
add
inc
in
dec
or
lea
or
adc
adc
jns
repnz
inc
jnp
mov
adc
xchg
add
xchg
add
mov
or
xchg
add
and
dec
inc
mov
pusha
adc
cltd
sbb
lcall
nop
xor
pushf
pop
popf
and
sahf
bound
jbe
mov
cmp
inc
int3
testb
enter
or
stc
xchg
or
pop
test
stos
inc
frndint
mov
orl
and
inc
xor
and
mov
and
adc
inc
in
shlb
pop
and
sbb
mov
lock
fstl
and
shlb
pop
and
shrb
jno
mov
pop
dec
xchg
call
dec
mov
loope
or
xor
xchg
and
jmp
and
adc
and
nop
cs
and
xchg
and
jmp
adc
loop
or
push
pop
and
pop
dec
xchg
cld
je
inc
movsl
outsl
adc
or
adc
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
movsb
pop
and
pop
dec
mov
pop
add
inc
in
lock
pop
sbb
sbb
inc
inc
sbb
and
insb
mov
and
dec
mov
movsb
lods
mov
int3
xchg
aam
faddl
mov
adc
and
add
dec
adc
nop
pop
mov
inc
ror
mov
ffree
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
and
jmp
je
cwtl
adc
xchg
lock
and
inc
and
mov
je
jl
mov
inc
aam
mov
pop
fs
or
push
xchg
pop
and
test
mov
aam
fcompl
and
or
mov
pusha
and
dec
mov
fsub
mov
and
and
dec
pusha
xchg
push
mov
and
inc
sbb
or
xchg
sub
xor
mov
push
and
dec
pusha
xchg
push
orb
dec
mov
inc
mov
shlb
dec
loopne
call
shll
or
dec
sbb
xor
mov
dec
and
dec
pop
xchg
pusha
and
jo
mov
dec
cwtl
xchg
mov
mov
and
dec
fcoms
lock
mov
adc
xchg
je
movsb
pop
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
loopne
in
call
xchg
hlt
and
inc
cld
shrl
add
or
xchg
adc
adc
sbb
and
and
sub
xchg
xor
xor
cmp
inc
adc
dec
dec
xchg
push
and
pop
mov
fs
dec
insb
xchg
jo
je
js
mov
inc
mov
or
xchg
call
push
or
addb
cmp
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
int3
mov
sbb
js
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
sbb
inc
dec
inc
inc
or
in
fsub
movsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
shrb
fs
je
test
adc
inc
adc
push
cmp
movsl
push
shrb
rclb
gs
and
nop
and
sub
and
push
shrb
jecxz
xchg
arpl
and
push
lock
sub
lret
cmc
aas
add
add
xchg
adc
add
nop
sbb
or
push
xor
addr16
sbb
adc
cmp
cmp
sbb
or
inc
inc
call
sub
pop
push
dec
bound
arpl
je
and
mov
xchg
adc
pushf
cmp
mov
and
enter
jb
cmp
mov
and
cmp
sbb
mov
and
or
cld
cld
inc
adc
hlt
or
push
add
and
or
test
nop
cmp
inc
and
sub
je
movzwl
mov
cmp
pop
mov
sub
xor
aam
enter
jb
cmp
add
mov
cmpl
jne
cmp
push
int3
push
mov
jecxz
mov
test
jne
xor
pop
lret
inc
cmp
add
rorb
inc
cmp
add
push
mov
inc
push
inc
cmp
jne,pt
js
adc
push
into
pop
nop
fcoms
out
inc
pop
inc
repnz
call
imul
or
push
add
or
into
adc
inc
push
add
iret
mov
push
push
adc
mov
push
push
pop
push
mov
into
adc
mov
xchg
add
push
pop
pop
nop
fnstcw
xchg
push
or
aaa
or
ret
and
call
inc
mov
sub
or
inc
add
jmp
add
cmp
ljmp
jne
jb
sbb
call
lahf
add
push
mov
inc
mov
cltd
push
cmp
jb
jecxz
add
insb
call
ja
and
sbb
mov
or
into
inc
cmp
dec
jmp
aas
pop
inc
jp
add
nop
pop
cmp
sub
or
sti
inc
scas
and
in
lock
jae
or
jb
js
or
or
cmp
out
sbb
pop
xchg
sub
or
cmp
push
mov
cs
out
adc
dec
lea
shlb
test
je
loopne
mov
xor
dec
addb
add
scas
dec
stos
stc
aad
fs
mov
xchg
mov
call
sbb
inc
or
xchg
push
sub
jns
push
xchg
and
loope
ja
sub
decb
xchg
in
jecxz
or
scas
push
push
add
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
mov
out
xor
push
push
or
sti
imul
mov
pop
lea
rorl
filds
cmpsl
cmc
cwtl
pusha
add
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
dec
lock
or
outsb
ljmp
cmp
jle
add
adcl
clc
incl
lea
and
adc
and
push
pop
sub
test
dec
rcpps
or
pop
je
sub
or
fs
xor
sahf
jmp
cmp
aas
ret
clc
sub
push
sbb
outsl
or
out
hlt
lea
std
xor
addl
xchg
andl
cwtl
inc
call
add
out
rcrb
cwtl
cld
sub
sub
xchg
xlat
inc
pop
call
ja
jge
pop
inc
dec
frstor
mov
jg
pop
leave
stos
add
and
and
int3
mov
cmp
pop
movsl
pop
and
adc
push
or
pop
fwait
or
push
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
push
lods
rcll
fisttps
gs
xorb
aaa
or
leave
push
xchg
inc
push
mov
cmpsb
mov
jmp
lds
inc
jne
dec
mov
test
rcrb
sbb
jp
dec
mov
test
adc
lea
or
pop
xor
aad
mov
stc
inc
lds
xchg
test
or
cmp
jae
testl
adc
mov
inc
dec
cmpsb
mov
test
je
dec
mov
ret
mov
cmp
movsl
adc
imulb
adc
sub
out
jmp
jnp
push
mov
pushf
cmp
dec
pushl
int3
mov
test
sub
ss
loopne
jle
or
and
push
or
and
cmp
dec
movaps
mov
cmp
pop
mov
add
rolb
xacquire
mov
jae
bound
xchg
add
mov
mov
push
xchg
pop
and
cs
les
inc
je
adc
sbb
jo
mov
lahf
inc
push
cmpsb
mov
hlt
xchg
adc
cmp
mov
dec
add
les
pop
push
xor
pop
or
or
sub
jbe
or
in
fistpl
loopne
cmp
or
adc
stc
lods
test
loopne
pop
add
rcrl
push
int
mov
jmp
pop
push
mov
sbb
sub
hlt
sub
mov
scas
or
and
cwtl
mov
dec
in
pop
shll
jbe
movd
adc
cmp
push
adc
test
mov
lcall
test
sbb
mov
adc
movl
shr
outsl
stos
xchg
popa
mov
xchg
leave
add
or
incl
rolb
loop
ret
in
or
add
adc
mov
or
jl
xchg
lret
sub
push
lret
cmc
sub
or
ret
and
lds
ss
xor
dec
or
je
sub
add
fcmovb
push
xchg
add
xor
test
and
and
cmpsl
add
sub
cmp
bound
push
and
pop
push
stc
add
adc
fs
fdivs
mov
addr16
and
pusha
fsubs
add
in
repz
stos
xor
andl
hlt
xchg
mov
push
or
jo
dec
imul
mov
stos
pop
mov
call
aaa
sub
dec
jg
push
clc
jae
mov
jge
xchg
fiadds
ljmp
and
sub
adc
push
call
mov
and
aad
fs
fwait
lods
mov
pop
add
lea
mov
xor
out
stos
xchg
fimull
xchg
dec
jo
repnz
fisttps
add
sub
cltd
inc
sbb
aaa
mov
test
dec
dec
ret
gs
xor
adc
mov
jmp
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
daa
mov
mov
cltd
lret
test
test
adc
jle
and
xchg
sub
fwait
pop
adc
sub
cwtl
shll
adc
pop
xor
test
aam
es
xor
sbb
lea
movsl
jo
call
inc
or
cmp
sbb
pop
push
add
cmp
xorl
sub
add
int3
and
or
ljmp
pop
or
pop
insb
xchg
and
and
lods
lret
xchg
jno
js
outsl
imull
andl
and
adc
fxam
sahf
aam
icebp
adc
and
lea
dec
mov
sub
inc
add
pop
and
jecxz
bound
lea
nop
mov
mov
in
pusha
test
dec
add
pop
jg
push
aaa
je
push
addb
jne
or
ljmp
dec
mov
int3
stc
or
or
test
mov
jnp
xchg
sbb
xor
mov
jmp
pop
sub
je
hlt
es
push
in
shll
adc
aad
jne
sbb
pop
lcall
push
cmp
cmpl
arpl
loope
mov
add
icebp
cs
das
out
cmp
in
sub
dec
cmc
mov
es
sub
mov
xchg
cltd
gs
std
repnz
xor
pop
cltd
lods
scas
sbb
pop
mov
dec
push
into
xchg
das
shlb
arpl
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
popf
xor
ficompl
lea
jg
mov
lcall
movb
xchg
scas
inc
and
sub
sub
or
jl
pop
hlt
jmp
xchg
lret
mov
sbb
mov
fimull
or
pop
notl
mov
sbb
inc
cwtl
sarb
sbb
dec
sub
sub
add
sbb
xchg
lcall
call
pop
adc
inc
mov
mov
push
pop
mov
xor
sbb
loopne
sub
mov
adc
jp
jb
or
js
xor
or
test
jne
cmovae
or
jmp
sub
mov
inc
les
add
je
inc
mov
addb
ljmp
aas
nop
or
cmp
sbb
les
daa
loop
clc
cmp
sub
jno
push
adc
sbb
jle
xor
int
and
add
test
je
jae
or
add
cld
inc
or
aaa
orl
push
sub
sub
push
sub
or
loop
mov
mov
sub
mov
and
mov
scas
mov
or
nop
mov
add
scas
fcmovnb
fcomps
enter
pop
stc
add
insl
ffree
dec
adcl
sub
pop
call
cmp
or
sub
repz
add
xchg
push
cltd
pop
sub
cmp
add
ljmp
fists
mov
add
movsl
pop
xchg
mov
xor
mov
lret
test
inc
lahf
jno
jl
jns
push
push
sbb
sub
movsb
adc
add
add
aaa
and
shll
mov
stc
jmp
fbld
mov
dec
add
stos
dec
xchg
clts
pop
cmp
jl
in
sub
test
rcr
in
lods
shlb
clc
xor
dec
loop
push
jl
jb,pn
and
inc
or
lret
mov
dec
sti
and
or
jmp
or
sbb
mov
inc
repnz
xor
xor
and
add
adcl
lock
jmp
ss
dec
adc
clc
add
ret
push
fcoms
jge
cmp
inc
add
xchg
call
inc
fists
mov
lahf
or
test
jle
jb
jbe
dec
inc
xor
lods
jmp
add
out
pop
sub
je
cmp
rorb
test
leave
je
sbbb
push
cmp
pop
or
sbb
add
push
jmp
enter
jne
enter
adc
xchg
out
nop
fcoms
and
xor
cmp
sub
or
or
cmp
cmp
ja
jne
ret
xchg
cwtl
inc
test
or
pop
call
lods
andl
jg
jmp
push
push
push
cmp
pop
pop
jne
clc
xor
cwtl
imul
mov
imul
jns
add
mov
add
divl
je
pop
insl
vmread
rep
incb
and
je
xchg
sbb
jl
xchg
sbb
std
sbb
sbb
push
lcall
xor
add
xor
mov
pop
push
fsubrs
lods
or
sbb
fistl
fldcw
push
cmpsb
repnz
sub
or
outsb
jl
add
or
movups
and
in
aam
pop
pop
pop
mov
cmp
enter
cmovns
addl
mov
inc
jmp
fsubs
sbb
cmp
mov
loop
je
lret
loopne
es
and
loope
icebp
dec
add
in
mov
and
sub
push
jle
xor
mov
add
das
or
arpl
mov
mov
data16
jne
sbb
lock
and
and
je
in
test
jmp
or
sti
dec
loopne
or
push
fs
xchg
lods
movsb
dec
add
mov
add
loopne
mov
sarl
inc
or
stos
movsb
adc
stos
pop
rcr
or
fldt
adc
add
mov
dec
popf
xor
lea
dec
insb
nop
rol
dec
mov
mov
inc
sbbb
popf
push
sub
aad
add
js
pop
add
push
add
sub
or
pusha
call
or
and
or
cmp
inc
and
in
rcll
and
int
xor
aam
push
jmp
stc
addb
fdivrs
js
push
pop
sub
movb
inc
out
pushf
dec
mov
sub
test
add
or
adc
add
or
mov
jmp
add
mov
cmp
add
mov
sbb
pusha
js
loope
ljmp
adc
cmpsb
es
sub
jmp
dec
or
cmpl
test
or
lea
and
cmc
cld
xchg
fisttpl
push
fwait
sub
rol
pop
xchg
jns
push
pcmpeqb
sbb
shrl
add
fsubs
inc
addr16
sub
jmp
cld
mov
inc
inc
stc
pop
and
jae
sbb
pop
stc
jmp
push
fstp
dec
stos
xchg
imul
mov
out
enter
pop
or
or
aas
test
add
pushf
or
push
ret
nopl
hlt
adc
adcb
and
out
sbb
pusha
cmp
mov
mov
movsl
aam
xchg
pop
and
out
je
notl
xor
adc
mov
andb
xor
add
leave
sbb
cs
shll
or
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
into
push
ror
sbb
push
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
push
jl
cld
mov
test
lods
lds
iret
decl
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
add
mov
pop
mov
inc
aam
imul
loope
push
jp
iret
mov
mov
mov
xchg
push
cmpsb
scas
mov
adcl
int3
jbe
add
in
xchg
cmp
xor
push
in
cmp
sahf
add
and
push
shld
add
addr16
repz
mov
subb
xchg
and
pop
and
loopne
adc
cmp
das
and
jl
push
cwtl
dec
sbbl
clc
pop
jne,pt
sub
or
and
or
mov
aas
cs
scas
inc
nop
repnz
hlt
movzwl
inc
clc
int
push
push
xchg
sub
dec
or
repz
dec
xor
push
push
pushl
xor
hlt
xchg
sbb
push
aaa
or
push
mov
adc
push
jl
daa
and
pusha
adc
mov
call
mov
clc
mov
je
and
mov
or
push
cmovg
push
adcb
inc
outsl
pop
jb
popa
outsb
addl
push
push
dec
add
push
dec
popa
jae
je
adc
sbb
fwait
push
out
and
or
xor
mov
adc
movsb
xchg
les
inc
sbbl
mov
sbb
sub
sbb
sub
je
ret
mov
bswap
lret
or
popl
sub
sbb
sub
pop
mov
push
or
push
cld
sub
mov
fdivs
rclb
pop
insl
push
adc
popf
mov
fs
mov
push
and
add
sbb
in
cmp
jle
repnz
add
jae
sub
cmp
cmpl
xor
or
cmp
jecxz
jbe
scas
js
jb
icebp
out
fwait
jbe
jp
pop
mov
fadds
jge
adc
jmp
movsb
mov
add
add
test
mov
in
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
xor
or
mov
push
outsb
call
mov
add
pop
jmp
pushf
xchg
sbb
test
push
push
xorl
hlt
ja
popf
add
adc
cmp
movl
mov
or
shr
fistpl
and
xor
mov
push
xchg
pop
dec
pop
jno
dec
addr16
adc
push
clc
mov
push
or
and
jg
js
mov
jnp
cmpb
jbe
push
scas
pusha
in
push
adc
adc
sbb
pop
pop
push
xchg
push
cmp
in
or
push
dec
sbb
add
pop
add
push
push
jmp
xchg
filds
sbb
jmp
jmp
or
outsb
mov
push
add
push
pushf
bound
imul
mov
pop
pop
lds
sub
adc
and
loop
pop
push
fistpl
mov
mov
jecxz
mov
enter
jae
lahf
mov
jl
or
cmp
inc
mov
push
sbb
cld
inc
inc
and
mov
adc
or
test
push
lcall
mov
dec
cmpl
push
je
call
inc
and
jbe
xchg
das
popf
ja
jmp
mov
xchg
js
adc
ret
lret
xor
dec
cmp
push
mov
adc
or
ja
cmp
lock
cli
add
push
sbb
dec
sbb
fldt
adc
jle
fstpl
adc
xchg
fs
mov
or
push
or
add
inc
out
push
push
or
stos
outsl
insb
xchg
sub
mov
jmp
add
sub
xlat
or
xor
je
pop
dec
lcall
push
push
and
call
mov
pop
mov
fcomps
das
call
push
push
push
es
push
inc
inc
pop
stos
adc
and
lret
xchg
mov
or
xchg
add
andl
mov
or
popf
cmp
pop
test
or
mov
jnp
lea
movsb
cmp
pop
fs
push
lahf
mov
loop
or
das
fs
int3
sub
lret
or
lea
cmp
sub
jns
push
mov
adc
add
mov
cmp
push
pusha
add
sub
cwtl
ss
xor
push
fstl
cmp
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
cmp
ror
rcrl
popf
and
sbb
into
sbb
push
sbb
fstps
imul
push
movsb
leave
das
push
or
cltd
pop
ret
fwait
enter
es
push
repz
mov
jno
sub
and
out
xor
pop
imul
push
adc
inc
sbb
sti
push
cli
loopne
mov
std
out
sbb
jl
or
xchg
sub
or
inc
push
adc
outsb
adc
and
xor
cs
mov
add
or
test
jmp
push
pop
xchg
and
sbb
dec
cmp
jne
insb
sbb
jp
sbbl
pushl
add
cmp
mov
xor
xor
dec
mov
add
popa
inc
test
jle
ja
ret
xor
push
dec
lcall
outsb
adc
adc
xor
and
enter
ss
ret
nop
movsb
pusha
sub
xchg
xor
ss
add
repz
sbb
sbb
shrl
push
in
pusha
mov
xor
jge
mov
movsl
popl
dec
adc
sbb
jnp
adc
les
leave
cmpl
sbb
mov
and
inc
xlat
push
daa
int
mov
or
lods
aad
out
mov
mov
pop
enter
rclb
in
adc
push
and
xchg
mov
dec
xor
adc
cmp
cmpl
movb
cmp
dec
orps
outsb
mov
sbbb
mov
lea
in
inc
push
push
in
enter
sarl
dec
jne
pop
pop
pop
lea
iret
add
jbe
sbb
or
dec
and
fs
loope
outsl
ret
mov
idiv
add
xor
fs
sub
dec
das
sbb
xorb
shl
inc
mov
test
xchg
push
shr
jb
and
or
cmpb
adcl
aaa
sbb
sbb
outsl
adc
ja
sahf
push
and
jbe
pop
pop
leave
call
inc
loopne
add
adc
int
popa
adcl
jbe
mov
sbb
or
out
push
push
push
call
xor
add
and
inc
ret
pop
ret
adc
sub
sbb
dec
push
xchg
or
push
cmpsl
pop
pop
and
out
sub
mov
ret
push
cwtl
cmpb
jbe
cmpl
mov
shl
inc
mov
call
and
cmpsb
adc
popa
xor
pop
sub
stos
imul
or
jne
jle
cmpsl
and
lcall
int3
push
inc
dec
adc
add
mov
out
out
xor
push
test
xor
jne
mov
je
sbb
ret
cmpl
test
repnz
loopne
push
sbb
or
mov
stc
lock
sti
cmp
jmp
int3
add
ja
test
mov
mov
shrb
clc
dec
add
dec
jl
lock
mov
pop
and
or
mov
push
sbb
inc
add
push
or
mov
dec
cld
fcmove
xlat
nop
push
and
inc
inc
jg
js
pop
inc
stc
adc
sub
jnp
and
dec
popf
cmpsl
negb
jmp
gs
xchg
jl
dec
pop
test
scas
sub
call
and
andl
testl
xchg
push
rorb
mov
ret
pop
fwait
and
add
cmp
sub
cwtl
sbb
xchg
mov
dec
lock
outsb
in
fmuls
sub
imul
mov
and
xchg
add
les
cld
jne
cmp
mov
dec
sub
lea
subl
jge
dec
push
push
pop
xchg
mov
pop
and
call
cmp
xchg
nop
lret
call
xchg
lock
fcmovne
pop
sar
adc
dec
shrl
pop
xor
sbb
ret
xor
in
mov
loop
jmp
pop
nop
mov
push
cmp
push
pop
inc
dec
add
cmp
add
sub
test
inc
mov
pop
jae
imul
xor
bound
or
xchg
push
xchg
or
jmp
or
movsb
add
sub
orb
fiaddl
mov
nop
insl
daa
repnz
inc
or
shrl
add
lret
repnz
mov
std
nop
push
je
cmpsb
mov
ret
cmp
mov
mov
adc
pop
testb
mov
inc
jl
cmp
jecxz
mov
add
imul
sub
rorl
int
inc
cld
add
cltd
xchg
sti
adc
mov
fwait
movsl
cli
inc
arpl
push
and
pop
pop
and
mov
mov
jno
lret
or
push
sub
sbb
test
incl
xchg
adc
cli
je
cmp
xor
cld
adc
add
push
or
and
cmp
jne
arpl
call
cld
arpl
add
dec
sub
or
inc
cmp
or
add
xor
xchg
or
sub
xchg
dec
lds
xchg
pop
lea
decl
popf
inc
and
dec
rolb
daa
xlat
push
ljmp
ja
add
push
and
ljmp
pop
cmp
jne
dec
notb
lahf
sbb
inc
int
into
andl
pop
divl
sub
mov
pop
pop
ja
jbe
push
sbb
and
loope
push
jae
or
shr
popa
mov
pop
adc
pop
or
jmp
nop
sbb
aam
push
clc
inc
fdivs
add
cmpb
sub
out
ret
xor
std
into
cmp
pop
adc
ds
xlat
adc
js
inc
rclb
rcrb
mov
mov
in
cld
lods
jb
es
jl
cmp
jge
pop
sub
push
mov
add
std
or
jge
xor
push
in
fstps
pop
xchg
insb
lret
sub
call
lcall
sub
push
jle
sub
and
flds
mov
repnz
outsb
xor
adc
push
and
std
and
ss
push
dec
dec
stc
bound
xchg
test
cmpl
jne
fsubr
out
adc
loopne
arpl
jmp
fldl
out
cld
fmuls
jmp
int3
fwait
pushf
stos
xor
push
std
cmp
icebp
jl
dec
popf
movsb
sub
adc
mov
push
or
mov
xor
dec
or
shrb
mov
lret
mov
mov
sub
popa
mov
mov
push
push
dec
inc
mov
jge
cltd
and
rclb
dec
xchg
rorl
jl
push
sahf
pop
daa
jo
mov
imul
leave
or
shlb
sub
push
lret
jmp
cs
cmp
sbb
push
sbb
or
sbb
je
adc
sbb
imul
inc
jb
jp
enter
or
adc
out
jmp
jl
add
mov
orl
popa
rolb
cmpb
pushf
xor
sbb
push
lock
subb
mov
mov
inc
je
call
fld1
and
cmp
loope
loopne
movsl
loop
loopne
and
pop
mov
pop
jecxz
sbb
adc
rcl
sbb
iret
jmp
icebp
mov
dec
sbb
shr
lret
or
outsb
sub
sub
pop
repz
or
mov
inc
xor
push
xor
jmp
inc
add
cmp
cmp
adc
or
mov
cmp
sbb
add
loope
mov
add
outsl
cld
call
push
or
sarl
sbb
add
xchg
fisubl
or
sahf
add
and
movsb
or
sbb
popf
or
xor
or
adc
push
xchg
pop
mov
xor
cld
adc
jge
test
sub
adc
pop
les
xor
or
or
ret
inc
xor
sub
cmp
shll
push
mov
dec
sbb
pop
mov
movsb
adc
fbstp
movsl
lock
das
add
test
sbb
ljmp
inc
ds
adc
xchg
cld
test
adc
maskmovq
negl
or
inc
popa
and
xchg
mov
push
push
testb
add
scas
push
xor
icebp
jmp
and
push
decl
outsb
sub
data16
dec
inc
cltd
cmp
adc
ja
dec
incb
jb
gs
inc
ljmp
stc
rolb
add
sub
mov
cmp
loop
mov
push
adc
movsb
arpl
sub
inc
in
and
movsb
aaa
nop
cs
mov
inc
xor
mov
ds
sarl
add
fisubl
ret
dec
cmp
shlb
jne
xchg
pop
bound
mov
imul
add
and
mov
inc
cld
pop
pop
push
sbb
jae
cmp
or
mov
cltd
mov
and
aaa
push
cltd
pusha
lock
stc
call
sbb
sub
jmp
push
adc
push
call
xor
pop
adc
insl
call
mov
inc
or
fndisi(8087
std
cmp
and
xchg
add
jne
mov
mov
cmp
sbb
mov
scas
xchg
mov
sub
push
cmp
loopne
push
dec
in
fstpl
scas
ret
jmp
decl
pop
lods
mov
fmul
adc
lea
in
mov
outsb
sub
inc
sbb
mov
sbb
sbb
push
cs
adc
arpl
call
push
enter
scas
and
test
out
cmp
movl
mov
or
pop
push
aam
cmp
ret
push
pusha
cmpl
sub
int
or
or
add
jl
inc
outsb
sbb
and
lea
ret
or
inc
and
out
lret
mov
pop
fists
in
popf
push
andl
lret
or
push
inc
inc
xor
dec
clc
jne
sub
dec
cwtl
push
push
dec
adc
push
arpl
out
popa
loope
imul
and
pop
inc
and
xchg
pop
adc
adc
push
push
push
mov
and
pop
pop
pop
adc
lods
or
andl
adc
push
jmp
sbb
call
add
cmp
adc
push
mov
jne
jp
out
jae
int
or
clc
jge
adc
je
sbb
or
and
call
inc
adc
cld
jecxz
jmp
add
fwait
inc
mov
mov
cli
pop
jne
xor
xchg
jge
clc
adcl
in
or
add
push
push
clc
push
xchg
das
pop
lods
jmp
cmpsl
fs
repz
call
es
cmp
mov
jo
or
incl
call
orb
jb
xchg
lea
adc
in
mov
movb
fisubrs
mov
adc
push
push
cmp
mov
inc
sub
adc
cmp
lahf
or
dec
mov
xor
jle
dec
push
mov
je
or
mov
xor
in
and
test
sarb
jg
adc
test
sub
dec
xchg
movsl
dec
xor
inc
dec
inc
mov
mull
mov
mov
ret
imul
outsb
pop
insb
xor
cs
xor
addb
dec
outsl
push
outsb
addr16
popa
out
dec
inc
insl
aad
adc
mov
mov
lea
jecxz
jo
cltd
cmp
iret
push
jns
clc
sti
jne
add
pop
dec
rcll
enter
sbb
xchg
cmp
stc
adc
xchg
test
ret
insb
and
inc
push
enter
lods
jne
and
call
bound
push
jno
dec
lds
lds
and
fdiv
adc
bound
popa
inc
dec
je
int3
mov
scas
add
rcll
xor
adcb
xor
jge
xorl
or
and
sub
les
push
adc
push
xchg
add
cmp
push
push
adc
fdivs
or
mov
sub
fmuls
ret
movsl
rclb
test
xchg
jb
add
push
movsl
jne
add
sbb
repz
or
test
ss
xchg
push
sbb
push
outsl
data16
popa
jb
mov
ja
repz
jae
xor
pop
cld
clc
lret
test
sub
mov
sub
enter
or
dec
push
mov
clc
mov
add
mov
and
cmp
jne
fidivs
ret
in
ror
mov
push
iret
push
and
lods
rolb
into
out
add
mov
push
inc
jmp
pop
mov
push
mov
adc
push
cld
jne
pop
outsb
sub
shr
jb
ret
sti
pop
dec
leave
add
aas
fnstcw
sbb
je
and
jb
popl
leave
jne
mov
mov
je
movaps
jo
cld
jg
or
inc
mov
repz
out
add
ror
or
sbb
mov
mov
sub
aaa
test
mov
je
stos
or
push
lock
cmc
fiaddl
xchg
dec
inc
push
cld
cmc
push
adc
adc
fbstp
or
lds
mov
push
cld
shl
xchg
jo
inc
jae
test
popf
dec
push
gs
jmp
int3
int
movsb
jmp
adc
add
and
mov
sbb
loopne
ja
daa
or
dec
sub
clc
cmpsb
nop
adcl
add
push
lds
sahf
mov
divb
adc
adc
or
add
iret
pop
jmp
adcl
dec
sbb
mov
in
push
call
cmp
xchg
adc
pop
and
je
dec
adc
rcrb
cmp
jbe
or
mov
and
pop
out
jns,pt
adc
jmp
sub
das
fldlg2
mov
aas
fsts
int3
lods
mov
cli
add
cmpl
fstl
loop
scas
or
mov
movsl
adc
mov
out
cmp
xchg
call
sbb
pop
test
bt
js
pop
push
push
insl
jns
adc
cmp
sbb
jnp
xchg
sub
push
add
mov
sub
sbb
es
adcb
lcall
pop
adc
lret
stos
inc
test
or
lea
sub
sub
testb
xlat
cmc
sbb
ret
and
or
call
pushl
xor
inc
inc
dec
sub
shll
mov
inc
out
xchg
les
adc
imul
xchg
cmp
mov
push
inc
jo
fsubl
in
pop
xor
push
cmp
inc
mov
and
mov
push
mov
test
sbb
jo
push
xor
mov
sbb
adc
or
loop
adc
lock
or
mov
and
xchg
push
stos
js,pt
test
jg
xchg
repnz
pop
insl
cltd
adc
lahf
int3
insb
push
mov
std
addps
and
jno
or
adc
adc
sbb
xchg
and
and
sub
call
daa
inc
adc
cmp
cld
add
and
nop
outsb
nop
and
les
inc
push
mov
pop
lock
icebp
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
ja
in
jb
cmp
sbb
mov
and
mov
call
sub
ljmp
in
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
rorb
adc
or
push
gs
mov
jle
or
and
icebp
sub
or
or
pop
xor
or
js
gs
imul
mulb
lds
push
js
inc
dec
gs
jo
pop
nop
sub
push
pop
shlb
push
mov
cmpsl
xchg
mov
push
inc
dec
jne
pusha
dec
gs
outsl
daa
jb
add
and
xchg
and
inc
dec
outsb
fnstsw
in
pop
nop
in
adc
mov
data16
les
popa
insb
add
cmp
mov
ret
pop
nop
pop
loop
push
xchg
insb
lds
push
mov
gs
or
cmp
inc
icebp
adc
or
or
imul
outsl
adc
call
insb
sbb
rolb
outsb
xor
nop
movsb
stos
and
les
or
jbe
data16
outsl
ja
mov
scas
pop
dec
inc
daa
fs
and
js
cmpsb
mov
nop
pop
pop
fstps
mov
push
bnd
mov
imul
mov
inc
rclb
xchg
shlb
or
les
mov
insb
dec
popa
movsb
ret
mov
and
outsb
fs
pop
nop
push
mov
in
mov
mov
dec
punpcklbw
xchg
test
pop
pop
xchg
and
or
hlt
es
jo
cmpsl
pop
inc
push
jae
imul
push
adc
push
mov
int3
pop
pop
enter
notb
pop
adcl
mov
push
mov
mov
mov
cld
aad
pusha
in
cmc
mov
int3
les
sarl
gs
in
push
test
test
add
je
arpl
orl
inc
loopne
rorl
je
imul
cmp
xor
lahf
enter
cmp
dec
popa
or
xchg
pop
pop
enter
mov
xchg
enter
or
ret
popa
outsl
and
enter
in
hlt
test
nop
xchg
jo
inc
bound
jb
jae
mov
pop
rclb
in
imul
test
lods
test
push
adc
add
data16
add
cmp
rolb
pop
add
push
dec
cwtl
or
push
sbb
push
inc
insb
neg
aas
sub
lcall
dec
lcall
mov
adc
repz
pop
jbe
clc
add
push
adc
xchg
pop
mov
lret
jg
sub
and
xchg
imul
pop
and
loopne
lahf
sub
adc
insb
xlat
repnz
xchg
movsl
xchg
ds
out
test
xchg
std
pop
mov
jno
mov
add
jb
inc
pop
ja
add
mov
inc
xor
sub
dec
cmp
cwtl
cmp
lahf
loope
loop
movsb
test
add
repz
jne
mov
fldenv
inc
ret
or
rclb
rolb
push
neg
call
mov
inc
dec
adc
push
push
xor
div
ja
insb
popa
cli
cmp
xchg
pop
mov
push
add
pop
pop
sub
nop
lret
xsetbv
mov
add
jmp
mov
insb
inc
dec
xor
mov
jns
xor
xorl
sub
pop
or
inc
pusha
push
movb
sub
cmp
push
xchg
in
add
pop
pop
loopne
data16
fs
mov
inc
mov
arpl
adc
inc
fildll
cmpsb
pop
or
ret
xchg
adc
jmp
cmp
aaa
add
dec
aaa
clc
mov
fdivl
stc
mov
and
cmp
mov
cs
add
loope
sub
pop
add
ffree
cmp
cmp
adc
push
lret
inc
iret
cmp
clc
and
adc
mov
movsb
jp
mov
fmull
scas
ret
pop
cld
out
cwtl
cwtl
and
loopne
or
shll
arpl
add
ret
push
inc
daa
and
scas
cmpsl
jns
inc
sub
xchg
aad
clc
pusha
enter
add
push
jg
mov
pushl
lahf
push
popf
xchg
push
adc
jne
dec
sbb
jg
or
cmp
mov
add
jnp
cmp
sub
je
mov
mov
ficoms
push
pop
jne
push
rorl
mov
sti
jl
push
and
inc
addl
mov
cwtl
cs
clc
add
xor
dec
sub
into
push
in
push
lods
movsl
xchg
dec
mov
mov
cmp
add
push
lea
mov
mov
pop
cmp
fsts
fists
imul
add
lea
push
or
mov
adc
mov
out
clc
imull
shr
stos
data16
sbb
push
popf
jmp
jmp
je
pop
and
les
jne
ds
lock
sbb
xchg
pop
enter
rcll
xchg
mov
ja
adc
push
adc
enter
or
stos
dec
lea
outsl
adc
aam
push
push
mov
sub
jge
out
popa
pop
enter
jmp
inc
pusha
movsb
pop
pop
ret
lret
push
push
sbb
movsl
dec
push
pop
imul
aam
mov
filds
aad
bound
pop
xchg
xor
add
das
cmp
fs
subb
push
sti
popa
nop
fwait
sbb
or
xchg
add
and
shlb
inc
push
mov
or
inc
das
xchg
jecxz
inc
mov
mov
mov
add
xchg
mov
cmp
jmp
nop
daa
fcoms
inc
clc
nop
sti
pop
jbe
je
xchg
testb
dec
movsb
nop
xlat
and
xchg
dec
shrb
movb
cmp
pop
sarl
fmull
inc
push
lea
add
mov
pop
or
push
xor
or
in
subl
ficompl
call
pop
fnstsw
popf
inc
repz
xor
das
xchg
pop
cmpsb
sub
popf
loope
into
inc
ljmp
jge
or
in
mov
or
je
ja
nop
loop
cmp
shll
pusha
shl
nop
lahf
cmp
inc
jmp
das
repnz
inc
dec
mov
mov
call
sub
fsubrl
xor
or
hlt
andl
lods
jmp
adc
mov
mov
daa
mov
fcompl
pop
cltd
sbb
rorb
push
cmpb
xchg
or
dec
and
fstps
mov
and
push
cwtl
xor
jge
lock
shll
pop
mov
mov
sub
cmp
imul
gs
incl
add
cmpsb
push
in
xchg
cmp
push
jg
jmp
decb
nop
ret
add
es
je
push
lret
and
mov
mov
cmp
jne
lea
mov
pop
pushf
push
add
and
lds
push
or
or
mov
iret
or
nop
loop
and
dec
push
xor
mov
call
push
jo
movsl
fsubrs
gs
cld
sub
mov
add
jbe
xchg
add
addr16
dec
stc
dec
dec
and
bswap
into
push
adc
enter
sbb
mov
cmpsl
push
pop
enter
insb
stos
sbbl
inc
jmp
jle
test
cmp
dec
ret
setno
cmpw
jbe
movsl
mov
imul
inc
add
push
leave
and
inc
mov
dec
lods
adc
enter
js
inc
int3
ja
jbe
unpckhps
jne
and
and
lds
pop
jp
jle
or
mov
sti
add
jle
push
or
pop
jmp
mov
mov
jecxz
std
jle
or
sub
pop
inc
push
or
stos
test
push
mov
ret
and
jmp
int
inc
je
jmp
push
inc
ja
je
push
inc
out
adc
add
push
mov
mov
mov
cmp
ret
mov
jne
int3
adc
cwtl
and
cmp
xorl
xor
movsl
and
pop
cli
rol
xchg
ret
xor
pop
pop
dec
ret
rcl
push
mov
lcall
int
outsl
daa
movsl
or
and
sti
lret
push
or
adc
das
into
jo
or
call
add
aam
mov
sbb
push
mov
shr
and
xor
clc
sarb
mov
movsl
xchg
jno
imul
cltd
sar
dec
insb
dec
push
cld
lea
sbb
mov
notl
enter
ret
inc
jmp
push
mov
push
shll
test
pop
push
inc
push
cmp
loope
xchg
push
sub
xchg
push
in
and
mov
xor
stos
or
xchg
negb
jge
mov
idivl
in
or
movsl
add
mov
xor
mov
stos
repz
aas
mov
sub
in
inc
leave
jg
addb
add
pop
pop
jg
inc
aam
mov
xchg
jp
xchg
mov
mov
push
orb
and
mov
push
orl
dec
enter
repnz
js
xchg
sbbl
sbb
cwtl
or
daa
dec
jge
adc
jb
ljmp
pop
test
jge
xor
mov
sub
inc
jae
pusha
pop
call
add
dec
xor
enter
mov
jmp
ret
pusha
das
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
gs
or
lret
dec
aaa
test
dec
imul
inc
and
js
mov
cmp
xor
stos
ljmp
xor
jg
cmp
jl
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
push
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
les
xchg
lods
xor
dec
loope
dec
push
push
jns
mov
xchg
mov
add
imul
adc
mov
add
sti
xor
incl
add
mov
jmp
sub
add
or
add
repz
inc
nop
push
dec
je
cmovnp
mov
cli
test
aas
in
pusha
ss
xor
sub
sahf
shll
stos
jecxz
sahf
jnp
inc
or
jne
xchg
das
out
test
lea
adc
or
icebp
add
lret
inc
cwtl
mov
and
imul
mov
push
push
gs
in
ret
orb
lods
ja
pusha
loopne
pop
pop
inc
loop
xchg
sub
cmpsb
xchg
add
icebp
and
inc
mov
sbb
pop
lahf
pop
cltd
sub
sub
sub
add
dec
sub
shll
mov
adc
adc
xor
popf
sub
pop
mov
insb
aam
loopne
mov
test
bound
adc
ss
and
inc
push
pop
or
push
xchg
add
ret
mov
cmp
divw
inc
push
fs
adc
jle
add
add
sbb
inc
mov
jmp
sub
rclb
dec
or
clc
mov
pop
or
and
call
repz
xlat
ljmp
lock
imul
popf
mov
je
fidivl
pop
fbstp
push
call
jnp
mov
cwtl
dec
add
call
add
cwtl
sub
sahf
or
xor
stos
mov
jae
adc
jns
add
mov
dec
or
daa
cmpb
icebp
and
push
dec
js
adc
in
jmp
data16
or
adc
sahf
xchg
and
xor
cld
push
or
test
ljmp
add
rorb
pop
fisubrl
or
adc
mov
sub
add
add
rorl
test
mov
xorl
or
rcl
mov
pop
mov
sub
add
repnz
add
and
cwtl
push
in
bound
cli
mov
or
fimull
mov
push
imul
add
dec
mov
sub
aam
jo
and
pcmpeqw
dec
adcl
xor
and
xor
add
lea
sub
push
pop
call
imull
jmp
cmp
call
mov
pop
loope
inc
loop
pop
loop
dec
xchg
sub
fistps
pop
call
mov
xor
or
add
mov
xchg
movsb
add
pop
dec
lods
mov
enter
and
clc
sub
and
bnd
mov
shl
testb
nop
add
icebp
add
stos
fcmovne
dec
test
mov
push
cli
popf
inc
cmp
cmpsb
std
xchg
mov
call
cmpsb
jg
add
cwtl
xor
fsubl
in
data16
incb
getsec
addb
daa
xor
incl
jb
js
or
lock
sbb
movl
dec
nop
pop
jle
xor
incb
or
sub
lock
sub
mov
aas
mov
mov
sub
test
stc
test
sub
fistl
fstpl
push
fwait
cmpsl
add
or
xchg
clc
repz
cmp
fsubrp
inc
mov
das
mov
sub
pusha
fldl
xchg
sarl
mov
lahf
dec
sub
pop
or
jne
push
dec
or
mov
enter
cs
test
sbb
cld
xor
ds
or
or
mov
xor
rolb
les
in
cmp
mov
mov
add
jl
add
pushf
dec
adc
gs
and
jge
xchg
ret
mov
mov
mov
pop
pop
xchg
add
ja
decl
subl
fs
xor
sub
pop
mov
dec
sub
loopne
mov
dec
int
xchg
push
pop
lods
xchg
dec
int
rcl
cld
push
and
sarb
push
int3
jp
mov
mov
arpl
cwtl
xchg
cmp
jb
fsts
jmp
aam
lcall
mov
or
add
insb
mull
push
hlt
mov
xchg
bound
and
cmp
push
or
jno
mov
es
pop
sahf
dec
clc
adc
push
cmpsl
and
push
mov
inc
dec
rorb
or
sub
push
fstpl
icebp
dec
fwait
daa
push
sbb
les
insl
add
cmp
and
or
xor
adc
int
adc
add
mov
mov
and
push
push
mov
and
add
add
popf
jnp
and
testb
xor
cmpsl
das
dec
arpl
xchg
or
mov
mov
push
fnsave
nop
jns
push
push
add
pop
jno
or
mov
movsb
push
push
cwtl
aam
push
push
or
testb
pop
rcll
dec
call
rcll
lcall
or
test
inc
xor
aad
xorb
scas
movsb
popa
clc
out
and
ss
es
fdivl
or
mov
in
mov
and
fptan
sub
jae
sub
sar
adc
jne
push
adc
push
push
out
lea
imul
xorl
and
or
mulb
jle
je
xchg
cmp
popf
dec
stos
nop
pop
dec
lock
push
or
mov
xchg
les
jns
xchg
pop
inc
leave
aam
repnz
fs
sub
movsb
dec
leave
sub
push
add
mov
pushf
rcll
mov
cld
jae
insl
in
jb
dec
aam
lock
leave
popa
push
sbb
mov
or
cmpsl
xor
outsl
xlat
mov
push
outsb
testl
dec
add
cmp
add
mov
mov
mov
push
lock
jne
push
lods
sub
xchg
stos
mov
jb
xchg
push
pop
mov
je,pt
clc
dec
jo
mov
push
sub
mov
sbb
std
xor
jg
push
loop
je
or
clc
xchg
ret
and
addb
inc
scas
popa
sbb
fimull
sub
adc
fdivrs
xor
inc
push
ljmp
rcrl
mov
fdivr
push
adc
call
into
loop
out
adc
cmp
jle
jmp
lods
aad
push
inc
and
adc
jae
out
mov
pop
or
mov
sub
push
imul
cmpl
call
jne
sbb
xor
subb
nop
mov
jmp
test
push
sub
cmc
test
add
jne
aaa
inc
mov
jmp
add
cmp
mov
jmp
ficomps
je
in
mov
in
addr16
dec
hlt
push
add
sbb
test
cmp
mov
cld
dec
mov
cltd
sub
sbb
inc
mov
ja
pusha
add
fdivr
fiaddl
test
mov
push
push
and
xor
xorl
popa
cwtl
out
std
adc
call
jne
sbb
mov
sbb
pusha
pushf
jmp
sub
popf
xor
pop
testl
dec
je
shlb
and
decb
add
add
test
push
add
jp
adc
iret
and
aaa
popf
scas
jo
mov
and
mov
sar
adc
ljmp
aad
mov
mov
and
dec
inc
add
xchg
popa
test
xchg
hlt
xchg
mov
iret
push
and
or
data16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
lea
outsb
mov
jbe
mov
fldenv
or
mov
dec
and
mov
testl
addb
aam
mov
pop
sbb
or
int
sub
push
sub
dec
pop
mov
hlt
pop
jae
popf
popf
jmp
pop
jae
or
mov
leave
cmp
add
aam
sub
push
je
adc
xchg
arpl
mov
stos
lods
test
xchg
shl
jmp
inc
out
inc
add
in
lods
or
test
jge
add
rclb
enter
ja
test
push
mov
or
push
daa
pop
jge
insl
cld
mov
ja
xchg
jle
cmp
push
mov
rcll
mov
je
imul
push
lret
push
leave
mov
js
clc
cs
into
jmp
js
mov
push
lea
or
enter
arpl
test
enter
call
pop
jmp
inc
sar
jg
cmp
jne
orl
clc
adc
push
adc
imul
sbb
test
jo
ljmp
mov
or
pop
xor
sub
push
orb
stc
jns
cmpl
dec
lret
xor
adc
add
push
jb
jmp
sar
sub
js
sub
xchg
and
aad
in
add
lds
dec
test
xchg
pop
xchg
ret
insb
or
ret
push
imul
jb
sub
dec
popl
leave
or
xor
and
sub
pop
mov
sahf
scas
push
cmp
in
std
or
divb
push
lock
and
dec
clc
nop
sub
dec
mov
loopne
cltd
mov
cli
dec
pop
and
inc
rorl
js
xchg
mov
leave
xor
in
mov
scas
xchg
mov
push
mov
xchg
shll
lcall
pop
int3
lret
push
pop
push
inc
jnp
insb
xchg
jnp
nop
pop
mov
cmp
xchg
jmp
jo
loopne
cld
aaa
cld
inc
test
xor
jmp
sbb
sbb
ret
insb
add
add
add
or
adc
and
or
nop
outsl
xor
repnz
test
nop
decb
jnp
out
mov
or
xchg
and
inc
fistpll
dec
xor
cld
adc
movups
mov
pop
jae
xchg
mov
pusha
sub
xchg
mov
jge
pop
scas
adc
dec
popa
xchg
push
cmpsb
dec
in
mov
test
cld
mov
and
xchg
or
popf
jns
push
mov
call
mov
les
or
dec
dec
enter
lahf
dec
mov
or
fs
icebp
mov
mov
mov
and
sbbb
mov
pop
xchg
fs
xor
xor
mov
and
inc
nop
and
nop
sub
out
adc
mov
xchg
dec
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
shlb
cld
push
rolb
ljmp
adc
or
cmp
push
push
das
outsl
lods
fs
xor
cmp
pop
fs
loope
lock
call
icebp
adc
mov
dec
subl
mov
insl
inc
push
idivb
or
ret
cmp
sbb
sbb
adc
pop
dec
pop
xchg
or
mov
mov
cmpb
mov
and
push
cwtl
or
inc
jl
pop
pop
adc
xor
je
and
aam
push
mov
sbb
sub
or
cmpsb
nop
enter
adc
mov
cmpsl
pushf
and
test
std
pop
or
adc
aad
adc
add
add
xchg
xchg
pop
push
push
call
push
inc
and
enter
jns
int3
or
mov
sbb
jne
mov
mov
or
push
or
adc
pop
xor
push
pusha
and
cli
clc
adc
cmp
ljmp
fwait
inc
das
mov
outsb
loopne
divl
out
int3
test
add
or
and
add
push
inc
sub
and
add
cmpb
or
inc
mov
push
add
adc
add
mov
cmp
or
leave
divps
dec
sarl
jg
mov
push
leave
push
sub
adc
inc
faddp
sub
mov
lock
add
ret
cmpsb
pop
dec
outsb
hlt
pop
movsl
push
adc
andb
push
xor
sub
aad
addl
dec
ret
xchg
cmp
sub
das
jae
sbb
loopne
adc
cmpsb
adc
sbb
mov
cmc
mov
mov
rcll
clc
inc
cmp
lret
push
mov
sub
adc
je
add
inc
jb
push
xor
mov
enter
mov
sbb
mov
inc
sbb
and
hlt
xor
push
or
pop
pop
out
mov
sub
dec
enter
mov
inc
out
push
je
sbb
sub
pop
mov
jb
inc
mov
out
js
xchg
movsb
push
stos
xor
jae
pop
lret
jne
cld
cmp
loopne
or
jmp
add
jg
addr16
cwtl
movsb
clc
pop
and
pop
icebp
mov
ret
xchg
shl
dec
jo
push
push
add
xor
adc
call
push
mov
sbb
cmp
mov
add
adc
rorl
sbb
mov
mov
iret
push
rep
pusha
or
jne
pop
jne
les
mov
pop
loope
push
dec
sub
jbe
or
adc
jne
mov
mov
and
sbb
setne
mov
or
pop
xor
xchg
adc
cmp
lea
push
and
add
mov
cmpl
cwtl
xchg
rorl
pop
inc
sbb
jmp
lock
adc
xchg
int
inc
sbb
dec
lea
pop
mov
pop
in
adc
stc
and
inc
adc
sub
mov
sti
pop
arpl
loop
popa
mov
daa
orb
lock
das
and
stos
or
sbb
fwait
mov
sub
sub
ljmp
loopne
dec
jmp
pop
mov
mov
fwait
sub
mov
dec
in
outsb
sbb
in
test
xchg
aaa
inc
test
fsubl
add
inc
pop
mov
bound
shl
mov
sub
adc
xlat
or
sub
push
movsl
insl
nop
nop
enter
mov
js
shrb
mov
or
inc
sub
and
hlt
or
enter
push
adc
xor
cmp
sub
rol
push
and
jmp
and
bound
mov
call
out
push
sbb
push
hlt
mov
inc
sub
enter
stc
or
push
dec
out
leave
loop
stos
nop
cltd
sahf
mov
stc
leave
enter
insl
das
fs
jne
or
insl
add
cmp
pushf
and
sub
or
jo
or
pop
out
les
push
lret
test
adc
and
into
test
sbb
push
mov
push
and
pop
or
aad
repnz
mov
pop
push
lods
imul
icebp
or
xchg
jns
xor
jl
push
xor
mov
adc
pop
cltd
xchg
jns
jo
imul
sbb
push
jo
arpl
pop
mov
lods
call
push
lock
adc
xchg
adc
int3
aam
enter
adc
xor
and
dec
jo
test
les
shll
cwtl
fsubl
nop
dec
hlt
adc
and
dec
js
nop
xorl
repnz
and
inc
pop
or
push
adc
and
dec
mov
inc
xor
xor
xor
dec
cmp
sbb
xor
or
imul
lcall
sbb
adc
push
call
sbb
ret
xchg
sbb
xchg
inc
enter
fucom
inc
mov
rclb
dec
and
inc
dec
and
loope
sbb
mov
or
mov
mov
mov
dec
or
mov
rorl
inc
test
and
xchg
mov
pushf
sub
xor
xchg
xchg
sub
cmpsb
pusha
inc
mov
cmpsb
sbb
cmpsb
cmp
test
cld
cltd
and
adc
or
adc
je
dec
xor
in
fs
dec
and
fs
fs
mov
pusha
dec
clc
in
dec
rcrb
inc
pop
and
scas
jae
sbb
hlt
adc
mov
pop
jnp
mov
dec
bound
sub
add
adc
mov
mov
push
adc
xor
add
sbb
sub
push
mov
and
pop
adc
sub
mov
insb
aas
and
adc
out
or
movsb
cmp
mov
or
cwtl
fs
sub
test
and
rolb
xor
lcall
mov
imul
subl
sbb
xchg
mov
pop
pop
loope
fidivl
inc
mov
xor
lods
push
icebp
or
jno
cwtl
lret
jb
stos
jp
adc
jae
add
add
in
outsl
int3
adc
mov
push
inc
push
inc
push
pop
cld
test
icebp
test
jbe
mov
add
sbb
clc
loopne
dec
xor
inc
adc
out
cld
inc
mov
jns
add
push
and
pop
xchg
mov
xchg
mov
ret
into
addl
mov
jg
loopne
dec
outsb
push
js
add
sbb
dec
daa
movsl
push
sub
scas
or
dec
ljmp
push
cli
sub
or
testl
scas
push
cs
mov
stos
test
push
aas
orb
scas
push
sub
xchg
clc
xchg
out
out
or
jne
sarl
je
daa
and
sub
and
sbb
popf
mov
in
pushf
xchg
stc
aam
inc
sbb
lods
mov
jge
imul
push
outsb
or
dec
push
adc
shl
movsl
jge
sub
mov
xchg
gs
mov
jbe
xlat
xlat
xor
clc
aam
test
enter
scas
pop
jo
pop
add
cs
lods
insl
imul
mov
pop
or
xchg
jne
sub
xchg
loopne
jmp
pop
jle
int3
roll
dec
mov
sbb
lret
scas
xor
dec
add
or
sbbl
jmp
xchg
dec
rorl
aas
notb
or
pop
cmc
inc
add
popa
mov
pop
cld
sub
cli
xor
shr
cwtl
mov
test
into
lea
outsb
in
inc
pusha
jae
rol
loop
xchg
adc
jmp
push
andb
cmp
jne
xchg
insb
or
shl
push
dec
cmp
push
sbb
or
loope
loopne
pop
and
fsubrs
mov
sbb
xchg
sbb
push
adc
enter
or
inc
push
mov
inc
push
jb
sbb
sbb
and
and
xchg
and
mov
sub
or
mov
push
jne
mov
mov
push
add
mov
fs
mov
das
rorl
sbb
imul
mov
and
and
mull
loopne
push
xor
sbb
sub
fsubl
mov
lea
mov
movl
mov
mov
xchg
cmp
sub
sub
push
dec
sub
cltd
and
fimull
sub
jb
and
sub
dec
sbb
pop
inc
jns
jb
push
xchg
jp
scas
jbe
adc
int
adcb
pop
je
sub
mov
cmp
fcomps
seta
fisubl
lret
cmp
xchg
rorb
fwait
push
lret
xchg
cmc
lret
jmp
adc
lret
xor
adc
jg
or
push
push
inc
lock
clc
adc
add
mov
inc
jp
mov
pushf
xchg
cwtl
push
int
shlb
dec
test
or
out
add
sub
sub
outsb
and
xlat
inc
in
mov
inc
add
sbbl
ret
pop
dec
and
add
dec
sbb
add
sti
push
cs
dec
dec
push
pop
mov
pop
adc
push
pop
and
dec
popa
xchg
mov
mov
and
push
mov
mov
cmp
js
or
popf
jno
arpl
test
pop
adc
cmpsb
mov
pop
gs
and
outsl
sub
xchg
cmp
arpl
std
pop
jo
adc
or
push
dec
jo
nop
push
in
cmp
mov
cltd
js
std
lahf
xchg
es
dec
aaa
xchg
xor
sbb
pop
and
movsb
pushf
fstl
int3
xchg
scas
sub
loopne
dec
outsl
xchg
mov
and
out
js
out
xchg
out
sbb
sub
mov
cmp
insb
dec
xchg
in
pop
icebp
pushf
out
jg
leave
inc
aas
xor
push
xor
and
xchg
pop
jo
adc
icebp
sbb
mov
adc
and
loop
les
out
adc
and
and
adc
lock
jb
cmp
cs
mov
cs
mov
enter
mov
sbb
mov
and
in
jb
cmp
pop
mov
and
inc
enter
jb
sbb
int3
mov
mov
das
ljmp
das
or
xchg
int3
sbb
pop
ret
push
xchg
xchg
scas
fsubl
jne
mov
push
inc
cltd
test
and
cmp
shl
fistl
test
cmpsb
pop
push
mov
mov
inc
sbb
sub
xor
cli
xor
fbld
call
lock
mov
and
cmp
daa
mov
dec
xchg
sbb
repz
loop
and
add
cmp
push
in
imul
repnz
adc
pop
int3
jne
or
inc
rclb
mov
mov
test
or
mov
test
inc
push
outsb
imul
jae
xchg
jo
pop
jae
fildll
test
mov
xchg
adc
shll
pop
cs
push
aam
in
ret
out
mov
cltd
push
and
cld
sub
out
add
inc
xor
jge
jge
cmp
clc
mov
add
jne
out
loopne
inc
lcall
lcall
dec
cmpb
je
sbb
cld
cmp
aas
add
or
mov
dec
push
clc
jbe
push
dec
call
jge
mov
ds
xlat
insb
repnz
scas
pushf
cwtl
mov
call
jge
ret
int
mov
icebp
gs
lea
or
fs
lret
sbb
xchg
inc
xchg
mov
fwait
inc
lahf
pop
mov
call
adc
adc
pusha
cs
jge
xor
dec
rolb
shlb
sbb
push
ds
movsl
sahf
or
stos
jle
jbe
mov
add
jmp
sub
mov
dec
out
pop
dec
jp
pop
push
sbb
sbb
int3
ljmp
popa
jno
push
pusha
aas
push
push
sbb
ja
push
inc
xor
scas
dec
nop
mov
lcall
orb
inc
psrld
adc
jae
sub
dec
sub
rorb
lods
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
add
jbe
jb
mov
push
sub
mov
push
or
xchg
jmp
rorb
inc
mov
lds
cmp
sbb
push
inc
inc
inc
movb
mov
mov
subb
pop
or
mov
sbb
pop
sub
mov
sbb
cmp
mov
psubusw
aas
lret
xchg
xchg
adc
dec
inc
xor
push
add
addr16
adc
adc
cmp
adc
sub
cmpsl
dec
shl
bound
pop
sub
cmp
add
repz
nop
mov
sub
shlb
pop
mov
movsb
fcmovu
fcmovnu
loopne
adc
fs
dec
mov
dec
sarl
lcall
out
fistpll
pusha
and
inc
cmp
xchg
inc
lahf
xor
adc
out
inc
fwait
lock
sub
sub
dec
mov
xor
push
clc
xor
add
in
or
insl
dec
sub
cmp
cltd
dec
and
xorl
cmp
dec
adc
cmp
inc
or
inc
adcb
jb
mov
test
xchg
dec
loope
arpl
out
clc
data16
mov
leave
adc
or
xchg
int3
and
and
add
mov
inc
sub
adc
jl
xor
mov
pop
lahf
insl
mov
adc
inc
add
and
pop
push
inc
or
test
test
test
test
and
addl
and
jo
and
sbb
inc
sub
arpl
clc
jecxz
jl
mov
inc
jp
push
cmp
fs
addr16
xchg
xchg
xchg
sub
iret
jmp
dec
push
es
in
inc
shll
pop
mov
pop
push
adc
call
cmp
imul
cmpsb
push
pop
mov
fcoms
stos
inc
push
clc
mov
stos
orb
push
or
jae
adc
popf
jnp
mov
jl
jl
es
jmp
outsb
in
jns
lock
push
arpl
lret
mulb
and
sub
dec
incb
dec
xchg
loopne
dec
or
pop
jge
imul
sub
sbb
add
insb
jmp
sahf
call
and
mov
cmp
xchg
dec
add
popa
xor
dec
popa
std
pop
test
popa
push
mov
sub
sub
sub
test
lea
add
loope
mov
sbbb
ret
data16
or
mov
or
cmpsl
sti
insb
int3
mov
outsb
sub
jns
filds
adc
or
dec
add
jl
push
xchg
repz
lock
cltd
dec
mov
adc
pop
pop
sub
cmp
ret
nop
dec
or
push
adc
jg
jne
loopne
push
faddl
bound
push
test
add
loopne
mov
xor
and
push
and
sbb
push
fisubl
adc
add
jno
cmp
in
jae
outsb
popa
cmp
xchg
mov
cmp
lods
inc
pop
lcall
jb
lds
sbb
clc
ss
in
push
or
pop
fidivs
test
dec
or
adc
xchg
pop
pushf
shlb
mov
inc
test
loop
fwait
mov
gs
incl
popf
icebp
aas
andb
jmp
stc
or
dec
push
lahf
iret
mov
jmp
mov
cltd
out
inc
jmp
mov
xchg
loope
sbb
data16
sbb
repnz
xchg
leave
cmpsb
sahf
repnz
cmp
ds
bound
mov
jp
mov
aaa
jp
pop
add
add
out
lret
adc
mov
in
xor
inc
popa
and
add
out
jne
frstor
push
push
add
sub
jmp
inc
les
data16
and
jns
and
xchg
and
shlb
push
and
xor
adc
cltd
adc
dec
and
sbb
ljmp
fadd
and
mov
cld
inc
std
or
nop
sbb
add
jb
dec
cmp
pop
test
inc
scas
mov
mov
xchg
xchg
scas
mov
pop
inc
fsubs
test
jns
dec
or
orl
es
divb
fs
ss
lock
outsl
mov
mov
jns
pop
or
adc
loopne
jp
push
push
xchg
pushf
movsl
push
push
xor
sbb
je
or
jne
pusha
adc
push
add
aaa
push
mov
or
and
and
or
sub
and
sub
fisttps
cmpl
push
xchg
cmp
xchg
adc
jo
lods
xchg
mov
enter
das
or
push
mov
ret
or
sbb
int3
call
jnp
or
pusha
jb
sub
orb
cmpsl
sub
lret
lods
call
nop
add
sbb
lret
add
enter
and
sbb
sub
imul
mov
inc
repz
andb
ljmp
or
mov
mov
jbe
mov
add
les
mov
repnz
and
inc
mov
adc
sbb
orl
sbb
pop
sub
jbe
dec
push
ja
xor
cmpsb
dec
or
popa
outsb
jge
jbe
cmp
jne
push
nop
add
or
and
adc
jmp
mov
loop
pop
scas
add
clc
lods
or
jne
xor
es
cs
mov
sub
lret
aam
sub
cli
or
ja
mov
or
jmp
pop
sub
ja
mov
cmp
fadds
mov
cmp
xlat
out
xchg
sub
rcl
jbe
in
push
or
movb
pusha
ja
mov
orb
sbb
or
ret
mov
fwait
or
movsb
jne
and
push
cmp
adc
test
and
pop
test
push
les
fs
or
cmp
ja
sub
loope
add
pushf
xor
sub
mov
shr
sbb
loop
fisttps
sahf
xor
inc
nop
jge
cwtl
lcall
and
sub
insl
or
or
adc
sub
sub
or
mov
jae
sub
popf
sbb
jmp
xor
int3
jae
pop
inc
mov
adc
mov
xor
jg
and
mov
mov
and
dec
jbe
imul
cmp
sbb
or
and
cmp
adc
jmp
orl
test
dec
faddl
cwtl
imul
and
sub
push
jb
mov
in
cmpsb
call
lock
lretw
clc
enter
lcall
dec
scas
xor
or
ja
fldl
je
mov
inc
pushf
push
inc
adc
mov
ret
adc
insl
fistpl
fisttps
dec
mov
scas
insb
sub
inc
sub
jne
mov
add
inc
cld
jne
jmp
jno
xor
xlat
cld
sub
dec
xor
pop
sub
xor
insl
fs
add
enter
inc
sahf
fldl
lock
sbbl
cs
xor
pop
movb
sbb
xor
hlt
loop
fwait
or
lock
xor
popa
test
jne
mov
adc
xor
or
xor
push
and
sub
pusha
mov
xor
push
dec
adc
push
mov
pop
adc
mov
xor
sub
dec
xlat
sbb
adcb
dec
movsb
notb
sub
jecxz
sbb
xchg
adc
jl
fs
add
or
xor
xor
xchg
jmp
cmp
je
cmpsb
xor
xchg
adc
sbb
xchg
into
or
rcll
je
jl
jb
sbb
mov
jbe
nop
inc
mov
adc
sub
xor
mov
sub
aad
mov
hlt
sbb
sub
mov
mov
dec
and
push
popf
inc
jmp
inc
jb
xchg
xor
es
and
pop
sub
leave
cmp
or
add
xchg
xchg
sahf
cmp
gs
inc
inc
out
jo
cmp
lds
add
add
mov
or
or
int
cmpl
xor
fcomip
loop
and
or
lds
pop
inc
dec
cmp
sbb
mov
cmpxchg
fisttpl
test
or
mov
dec
roll
call
cmpsl
cli
loope
xchg
cmpsb
cmpsl
in
stc
adc
dec
xor
xor
ficomps
or
std
fbld
adc
adc
xor
mov
push
fwait
and
test
mov
xchg
jmp
mov
cmp
cmp
cmp
notb
and
add
adc
sub
sub
rolb
js
call
xlat
xchg
hlt
or
pop
dec
leave
adc
or
xorb
mov
ret
adc
mov
pop
sub
push
pushf
cmp
and
sahf
add
es
mov
sub
inc
fistl
mov
jmp
out
jae
cmp
push
fisttps
and
inc
call
adcl
xchg
dec
or
shrl
std
pop
add
pop
dec
test
sbb
sbb
dec
adc
int3
jb
sbbl
int
into
cmp
pop
orb
sbb
cli
push
cld
out
pop
push
dec
inc
lock
imul
add
test
int
add
cmp
add
js
xchg
push
mov
push
cmp
inc
and
pop
inc
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
repz
int
cs
inc
movsl
imul
insb
cmp
pop
pop
sahf
jge
mov
pop
push
xchg
test
push
test
add
mov
inc
add
call
inc
add
xchg
mov
jle
je
xchg
xor
inc
dec
add
nop
push
push
sti
cli
mov
add
mov
jbe
aam
mov
cmp
xlat
cmp
and
inc
adc
and
je
mov
sub
jb
lds
dec
push
inc
jnp
mov
std
xchg
fcmovb
sbb
pop
mov
nop
sub
adc
xor
cmp
push
xor
sahf
mov
sti
inc
adc
sar
adc
mov
out
fldcw
mov
adc
push
punpcklbw
sarb
aam
inc
pop
push
repnz
inc
stos
adc
flds
repz
pusha
push
lea
push
sarb
shlb
popa
daa
cmp
nop
add
je
or
out
add
jo
adc
cmp
adc
and
jne
mov
jmp
jo
push
repnz
adc
or
adc
adc
cmp
cmp
clc
ja
pop
adc
jne
or
out
and
pop
sahf
mov
fbld
inc
clc
nop
sub
jmp
lods
movsb
mov
and
inc
mov
push
cld
inc
sbb
fdivs
dec
call
stos
cmp
and
adc
push
or
out
push
test
das
mov
or
dec
mov
push
shl
cmp
insb
icebp
mov
and
fsubs
xchg
addl
or
subl
adc
xchg
les
mov
and
nop
cs
cmp
jmp
shlb
sub
pop
outsl
lret
stos
sub
inc
add
sub
cs
xor
mov
inc
fisubrl
fiadds
pop
inc
and
nop
fmulp
loop
inc
out
jmp
dec
nop
jno
lcall
rorb
popa
stos
or
mov
mov
stc
aas
sub
pop
jmp
loope
mov
rclb
test
test
aas
fidivs
and
pusha
sti
jo
enter
or
insl
fs
enter
jecxz
and
out
enter
daa
mov
pop
les
adc
xchg
in
mov
adc
mov
and
pop
push
adc
jo
adc
js
xchg
xor
xor
and
add
pusha
inc
insb
add
xlat
mov
lods
sbb
aam
xor
and
fisttps
lds
add
unpckhps
xorb
and
mov
xor
inc
or
fstpt
jo
adc
imul
and
add
sarl
lock
adc
scas
inc
cmc
repnz
call
or
xchg
adc
test
sbb
adc
inc
xor
add
add
fcomps
sub
test
sbb
pop
jmp
xor
mov
add
aaa
cmpb
xchg
jno
std
js
add
cmpsb
fiadds
inc
add
mov
inc
out
pop
bound
test
xchg
test
imul
adc
mov
mov
out
push
pop
pop
es
out
ret
xchg
xor
call
les
das
push
test
subl
test
bound
add
and
roll
jae
sti
shl
mov
add
out
loope
pop
test
add
pop
aaa
std
js
out
testl
mov
cmpsb
jae
in
adc
inc
mov
movsb
out
cmp
outsb
test
add
js
push
je
add
flds
outsl
addr16
test
add
dec
sub
xchg
orb
push
add
movsb
fstl
jno
xchg
sub
popa
or
fwait
mov
ret
popf
jl
mov
or
mov
ret
iret
fimuls
shlb
test
mov
inc
or
mov
jp
jle
fwait
sub
ret
sub
cmp
cli
test
out
aam
std
popa
inc
les
hlt
sarb
aam
fnstcw
mov
cltd
fistl
jl
pop
jbe
xor
clc
adc
mov
xor
push
lods
les
not
es
je
fstpt
adc
sub
mov
mov
mov
decl
sub
or
inc
lds
nop
xlat
add
pxor
cwtl
push
adc
mov
test
mov
lods
test
add
int3
or
scas
test
bound
inc
fistpll
sub
incl
sub
dec
jle
test
test
imul
test
out
and
adc
inc
add
mov
test
jle
testl
loope
jnp
dec
out
add
outsl
test
xchg
roll
daa
and
xchg
cmp
cli
inc
outsb
push
or
push
test
xchg
les
shr
and
mov
movl
addr16
adc
mov
fdivrl
push
sub
adc
xchg
divb
or
or
je
negb
inc
adc
adc
sti
dec
cwtl
icebp
rol
sbb
fbstp
add
jl
iret
push
jbe
jmp
cli
mov
inc
mov
cmp
ja
mov
mov
fmuls
inc
lock
stos
xchg
repz
adc
xchg
in
loope
add
xor
lds
mov
movb
cmpl
jb
cmp
push
pop
xchg
push
int
inc
pop
add
fwait
pop
mov
sub
movsl
jo
mov
icebp
jnp
push
adc
inc
xchg
test
push
pop
pop
imul
cli
rorl
xor
push
fdivrl
mov
jl
xchg
stc
pop
adc
adcl
clc
inc
leave
inc
and
mov
pop
xor
mov
inc
bt
outsb
xchg
out
cli
inc
add
bnd
ljmp
dec
and
mov
movsl
icebp
repz
pop
in
inc
aad
in
jnp
jge
test
jl
inc
mov
dec
xor
cmp
js
jae
pop
jl
mov
xchg
call
testb
cmp
jl
cmp
mov
or
fdivrs
add
pop
xor
ret
mov
jo
add
xlat
mov
inc
incl
adc
mov
repnz
pop
add
sbb
pop
fnstenv
jl
shr
sub
mov
add
add
inc
inc
inc
add
inc
dec
dec
dec
dec
add
push
push
push
push
push
push
mov
pop
inc
pop
jo
loopne
add
mov
sbb
push
fwait
jecxz
fs
cmp
jae
mov
movsb
add
testl
fisttpl
jl
xchg
sbb
adc
xor
pop
cmp
or
and
or
dec
insb
ret
sbb
call
adc
movsb
ret
sahf
mov
push
xchg
lock
jl
mov
nop
jmp
fiadds
mov
mov
scas
int
ds
aam
push
mov
ret
orl
inc
nop
lret
xchg
xchg
push
push
pop
hlt
jns
pop
xchg
mov
xchg
mov
jo
shr
jb
stc
dec
test
lods
shrb
dec
call
jne
inc
inc
xchg
sbb
test
dec
and
fistps
xor
jl
jecxz
sbbl
test
jae
movsl
jbe
outsw
out
insl
jnp
dec
loop,pn
test
lds
pop
mov
inc
rol
adc
push
push
mov
daa
pop
adc
add
call
mov
push
and
je
xor
or
call
int3
push
adc
mov
push
dec
add
jae
pop
test
dec
xor
sub
xor
xor
pop
pop
dec
pop
lock
shlb
shrb
mov
bswap
arpl
or
rolb
repnz
or
or
pop
loope
xor
lods
xchg
dec
stos
ljmp
push
inc
or
pop
push
push
inc
xchg
xor
popa
push
ror
mull
xchg
mov
cmp
jae
inc
leave
push
stc
int3
or
loope
push
xorl
inc
jo
icebp
xor
jge
rcrl
cmp
mov
fstl
fists
or
adc
rep
mov
sbb
mov
xor
mov
leave
jl
sub
sub
or
les
movsl
adc
mov
add
and
push
mov
sub
jge
push
cmp
fiaddl
or
add
daa
sti
pop
jg
push
adc
cltd
sbb
adc
jbe
mov
inc
out
mov
leave
and
xrelease
jb
adc
jmp
lret
push
lea
clc
nop
rcll
mov
lret
mov
and
add
loopne
loopne
add
pop
jb
ja
push
inc
xchg
movl
cmp
repz
cld
pop
and
ja
ja
push
and
lret
dec
mov
xor
sbb
cmp
stos
repz
nop
cmp
jb
out
repz
ds
je
and
push
dec
dec
dec
adc
mov
xchg
sbb
and
mov
sub
or
push
push
fstl
loopne
jg,pt
dec
add
adc
or
out
dec
mov
scas
ret
jb
add
nop
jg
or
je
or
and
lea
jmp
and
movb
push
dec
sbb
cmpl
in
in
dec
nop
loop
aas
xor
mov
inc
int
and
iret
add
and
xor
push
hlt
or
add
push
orb
add
mov
xor
nop
je
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
dec
data16
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
idiv
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
xchg
mov
add
std
sbb
xchg
xchg
mov
imul
inc
jae
inc
sbb
loop
dec
decb
adc
xlat
rorb
pop
adc
jge
testb
xor
pop
xlat
xor
add
jmp
jmp
or
insb
lea
clc
shl
xor
int3
lret
cli
pop
je
jle
inc
in
mov
dec
ds
inc
fisttps
sub
or
mov
or
pop
nop
inc
ljmp
iret
loop
pop
adc
jmp
sti
out
adc
xlat
xchg
nop
call
jmp
ljmp
or
loopne
stc
stc
cli
add
adc
inc
stos
les
jb
or
xchg
bnd
call
mov
mov
cltd
loop
adc
sbb
push
lcall
and
adc
loop
adc
and
push
sahf
mov
adc
sub
push
mov
insb
and
and
push
lods
dec
jmp
xor
inc
stos
les
jb
or
cmpsb
mov
inc
mov
test
mov
lahf
mov
stos
cs
mov
mov
pop
lods
rolb
fildl
outsl
shlb
incb
mov
inc
imul
or
cmp
rorb
popa
and
and
cmpb
mov
ret
lods
xor
popa
jne
fisubrl
mov
or
in
mov
inc
mov
mov
mov
dec
mov
push
jle
sub
cmp
test
stos
sbb
aad
add
sbb
and
sbb
adc
aad
and
daa
push
pop
pop
adc
mov
into
and
popf
stos
rorl
add
inc
ret
adc
jle
mov
cmp
mov
push
mov
out
nop
inc
xor
push
leave
mov
jbe
movsb
sbb
xor
pushf
mov
iret
push
sarb
push
iret
mov
and
dec
adc
push
mov
scas
mov
adc
bound
rorl
cltd
dec
lods
sub
mov
aad
or
adc
fstpt
and
cli
loop
adc
sub
push
fildl
xor
stos
fldl
shlb
push
jbe
test
je
or
push
loopne
adc
mov
rcrb
xorb
adcl
in
and
jbe
test
inc
mov
iret
jbe
test
cmp
jbe
test
and
mov
in
sub
xorb
test
and
pop
stos
out
jmp
or
int3
jmp
inc
push
cmp
and
sub
and
pop
push
leave
hlt
in
in
push
test
aam
xor
insb
lcall
adc
stos
out
stos
sbb
ret
lcall
popf
stos
icebp
mov
push
and
inc
or
mov
inc
mov
aad
sub
nop
add
aad
pop
mov
stc
push
mov
shlb
cmp
stos
sti
mov
inc
popf
aam
sbb
push
std
mov
popl
mov
inc
mov
daa
lret
mov
mov
push
sub
stc
add
int
or
in
dec
mov
add
mov
rcrl
jbe
nop
dec
xchg
pop
mov
stc
xor
das
add
mov
icebp
int3
sbb
adc
push
in
push
jmp
addb
or
jae
or
ret
inc
test
mov
out
fdivrs
loopne
dec
ret
push
xchg
jp
add
test
jbe
or
mov
aas
adc
loopne
xlat
ror
adc
jbe
dec
jne
jb
pop
ljmp
mov
in
mov
stc
dec
push
pop
jmp
mov
push
adc
push
adc
fst
or
rorb
stos
je
daa
mov
int
push
sti
leave
jae
jp
sbb
add
xor
lret
notl
mov
mov
mov
xlat
xchg
jae
xor
push
xor
inc
movsb
jne
mov
aam
add
aad
inc
fs
mov
frstor
bound
or
and
out
sub
mov
hlt
push
aam
inc
and
mov
dec
inc
mov
mov
adc
or
adc
out
std
fidivrl
adc
dec
mov
push
add
out
adc
push
push
push
push
xchg
xor
mov
ret
loopne
rol
sub
ficoml
or
adc
and
test
movb
cmpl
jne
scas
lahf
adc
push
movsl
test
pushf
inc
xor
pop
inc
xor
and
lret
pmullw
mov
add
sbb
lock
hlt
sub
mov
rorb
dec
sub
jb
jecxz
or
and
jae
cmpsb
push
push
mov
inc
sbb
iret
mov
jnp
or
xchg
pop
dec
lea
mov
clc
pusha
aad
fs
xor
cmp
pusha
jmp
jle
iret
xor
xor
pop
and
call
add
andb
sub
outsl
test
sub
push
mov
lock
or
int
daa
sub
and
imul
cmp
stc
push
adc
mov
sbbb
xorps
push
and
or
insl
pop
pop
cmp
jbe
jae
pop
cmp
sets
inc
mov
add
and
imul
pushl
lret
cmpsb
pop
sub
push
jle
jbe
into
push
adc
mov
sub
mov
sub
adc
sub
cmp
or
test
adc
enter
cli
push
push
loope
jmp
mov
jmp
mov
mov
sub
ret
movsb
test
adc
or
ret
add
mov
les
push
xor
cmp
jl
incl
xlat
pop
xor
inc
cwtl
fsts
test
push
fisttpl
sbb
and
fiaddl
add
hlt
lea
xor
decb
pop
dec
adc
xor
test
mov
xchg
or
push
sbb
mov
push
xchg
stc
lods
mov
movsb
shll
and
xchg
mov
mov
and
ljmp
movsb
push
sbb
call
test
jmp
fbstp
stos
aad
sbb
and
mov
adcb
mov
dec
and
and
or
test
inc
call
or
adc
rclb
jnp
adc
shl
mov
sarb
or
adc
xor
loop
or
js
or
push
xchg
scas
push
ljmp
loopne
lahf
cltd
repnz
js
mov
outsb
mov
fs
mov
ret
push
inc
jns
fists
adc
cmpsl
and
lcall
movsl
out
loopne
xchg
or
test
jo
loopne
mov
adc
push
mov
pop
test
mov
add
sub
adc
or
jmp
mov
pushf
je
and
shrl
jne
scas
ret
sbb
enter
cmp
into
jne
or
test
push
cmpb
je
add
ffree
adc
inc
ds
sbb
add
pop
adc
push
mov
fistl
sub
jbe
adc
cmp
mov
and
sbb
and
inc
xchg
cltd
and
and
or
repz
shl
mov
push
or
imul
aas
push
movhps
mov
sbb
inc
fs
pushf
cs
dec
push
stos
inc
shl
fnstsw
pop
adc
jno
push
push
push
pop
ret
adcl
dec
adc
mov
cmp
dec
out
adc
dec
sub
mov
movl
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
pop
xor
sbb
ret
adc
mov
add
mov
mov
pop
mov
mov
push
add
ja
pop
pop
xlat
adc
xchg
push
inc
dec
filds
push
mov
adc
mulb
pop
sbb
mov
jle
pop
pushf
pop
inc
mov
push
loope
loopne
and
cmp
add
lock
pushfw
push
cltd
and
mov
cmp
fistpl
push
mov
sarl
ror
ret
mov
jge
or
dec
in
or
daa
shll
fsubrl
xlat
xchg
in
ret
pushf
jl
cwtl
jb
adc
mov
lods
or
xchg
lret
xor
ljmp
cwtl
incb
pop
loope
arpl
mov
jb
mov
arpl
lea
adc
sub
jmp
movsl
jnp
ret
icebp
inc
repnz
push
mov
mov
add
dec
add
mov
aam
cmp
mov
cmp
mov
cmp
cmpsl
sbb
adc
dec
outsb
xchg
inc
inc
and
cs
pop
outsl
jp
enter
inc
jmp
gs
push
cmp
fwait
jne
dec
xor
or
push
dec
outsl
popa
fs
push
inc
cwtl
sub
rcrb
movsl
sahf
call
mov
jecxz
jmp
jns
add
jo
clc
inc
or
bound
and
xor
push
add
jns
adc
pop
xchg
dec
test
jo
mov
ss
flds
hlt
dec
call
stos
scas
cmp
xchg
jg
or
mov
adc
and
mov
inc
ret
ja
movl
pusha
pop
xor
inc
and
ds
jle
and
fs
jne
aas
cs
push
hlt
and
xchg
mov
mov
enter
inc
loope
in
test
pushl
jecxz
lods
sub
out
gs
add
ret
xchg
je
sub
jmp
mov
call
xor
push
mov
movsb
push
pop
fbld
call
mov
fisubrl
inc
int
mov
movsl
fwait
xchg
jge
adc
push
add
xchg
push
pop
mov
test
test
and
call
out
inc
fmul
jmp
and
fsub
mov
fimull
iret
ret
iret
ds
mov
nop
jae
cmp
movsl
nop
fsub
lcall
xchg
idivb
sub
ret
aas
mov
rorl
adc
jle
jo
fildl
mov
in
inc
stos
test
lea
lods
inc
fldenv
shlb
adc
adc
fsub
push
in
add
call
jno
aas
mov
mov
and
mov
rorb
dec
fmuls
adc
mov
inc
sub
loopne
and
in
jne
test
leave
or
fcoml
inc
int3
adc
ds
jmp
or
int3
movsl
ljmp
pop
in
xchg
adc
icebp
adc
jmp
jne
inc
add
and
jl
ljmp
lahf
aam
fs
sbb
jmp
ret
rcrl
mov
ficomps
stc
add
loop
adc
add
sbb
in
mov
or
shll
addl
mov
repz
ud0
addb
ljmp
adc
mov
xchg
in
ljmp
jns
mov
push
mov
pop
orl
xchg
enter
mov
or
lea
pop
add
test
jne
leave
push
repnz
data16
or
ret
sti
or
adc
sub
push
pusha
loope
ret
and
in
leave
jge
inc
sbb
jo
test
inc
jmp
add
lock
loop
std
pusha
mov
adc
clc
data16
push
mov
mov
and
cli
lret
push
adc
push
fsubl
cli
mov
loop
jno
and
inc
call
add
add
cwtl
push
add
adc
cmp
push
lret
add
adc
mov
sbb
pop
dec
adc
stos
sub
and
sbb
pop
jecxz
and
lret
xor
jmp
mov
shlb
xor
shrb
loopne
ret
jno
mov
sbb
mov
inc
cwtl
xchg
in
mov
in
imul
and
and
push
xlat
lock
jb
xchg
mov
mov
push
or
and
cs
ds
xchg
leave
mov
call
adc
xchg
cmp
pop
jmp
pop
sbb
cmp
mov
imul
sub
mov
push
movsl
sbb
iret
neg
dec
les
loop
xor
outsl
jmp
pop
ja
pusha
push
push
mov
fldl
mov
mov
movsb
aaa
dec
std
mov
push
test
scas
loopne
iret
push
cmpsb
jo
test
cld
clc
push
xchg
push
xchg
clc
mov
xchg
dec
sub
jmp
aad
dec
dec
test
push
and
adc
out
test
outsb
test
sub
fiaddl
sub
dec
fdiv
sbb
jg
adc
pop
in
daa
loop
adc
adc
loope
shlb
iret
test
xor
or
repz
fiadds
sarb
inc
mov
mov
jo
sub
aaa
xchg
adc
sub
mov
or
push
jae
or
jecxz
push
inc
inc
mov
dec
pop
push
inc
loop
adc
mov
aad
fadds
or
push
jmp
imul
adc
lret
addb
jne
data16
push
dec
enter
scas
sub
push
and
lods
cmp
sub
ja
cmp
mov
or
fisttps
mov
lret
pop
mov
mov
pop
jg
clc
and
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
out
jns
mov
sbb
inc
pop
out
pop
mov
fsubs
bound
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
fistpll
cmpsb
add
movsl
push
adc
or
mov
fimuls
lods
es
pop
add
dec
cltd
cld
popf
pop
es
imul
ficoms
out
lahf
mov
ret
test
or
and
into
mov
or
sbbl
cmp
int3
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
ljmp
sub
add
ja
jmp
in
or
mov
hlt
orl
dec
loopne
mov
orb
push
inc
adc
xchg
push
xor
adc
or
adc
fnsetpm(287
xchg
inc
jecxz
and
inc
hlt
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
data16
dec
cmp
jo
ja
sbb
nop
mov
push
xorb
mov
adc
int3
dec
push
or
movsb
das
mov
imul
cmc
dec
xorb
mov
loop
shr
add
adc
xor
jne
inc
pushf
lcall
dec
pop
mov
jle
mov
in
popa
add
nop
adc
test
push
dec
call
jmp
int3
clc
lahf
je
imul
pusha
add
inc
lds
sbb
and
pop
jmp
adc
inc
sti
dec
in
push
or
xchg
sbb
xchg
xor
mov
mov
sbb
jp
push
ds
cmp
xor
les
loop
cmp
lcall
mov
orb
sar
mov
inc
dec
call
inc
lea
lahf
adc
sbb
mov
jmp
addr16
daa
or
je
add
mov
incl
or
adc
je
rorb
xor
mov
and
or
leave
push
mov
cmc
bound
push
dec
call
sbb
sub
jmp
and
jg
jp
mov
mov
xchg
dec
lret
icebp
pushf
push
aas
data16
or
shr
jne
inc
movzwl
push
mov
add
filds
jl
push
inc
rolb
jge
lret
push
sbbb
pusha
sbb
push
jne
inc
add
cmp
jne
iret
ljmp
flds
inc
clc
mov
stos
mov
mov
scas
and
adc
jb
add
mov
shl
add
inc
xchg
add
cmp
jne
lahf
or
dec
or
call
ret
inc
test
xlat
enter
jle
and
ss
jge
or
push
sub
mov
pop
jae
push
lcall
jmp
push
push
pushl
and
cmpsl
mov
fcoml
and
mov
push
or
je
aad
orb
sub
dec
ds
xchg
and
jnp
or
jb
aas
and
sti
inc
inc
adc
loopne
push
scas
pop
mov
mov
adcb
jmp
inc
push
pop
mov
enter
jne
mov
lret
jge
in
or
mov
std
pop
sub
nop
testl
jne
and
cld
lcallw
pop
je
xchg
scas
mov
or
add
add
jne
cmp
data16
inc
jmp
mov
lret
outsl
test
sbb
jns
fcmovbe
loop
cmp
movswl
es
aaa
adc
sbb
sbb
adc
shrl
addr16
sti
push
push
and
sub
scas
inc
inc
mov
pop
gs
test
fucom
and
in
cmp
hlt
mov
hlt
repnz
fmuls
cmp
xor
xlat
or
lods
je
rorl
mov
inc
lcall
push
jae
jg
or
ds
add
push
enter
mov
pop
dec
gs
add
stc
xchg
and
or
xor
out
popa
add
mov
les
inc
mov
arpl
pop
push
push
push
pop
pusha
pusha
rorb
shlb
and
or
or
ds
add
add
xchg
pop
lret
push
mov
lahf
xor
cs
mov
xchg
jns
jge
fmuls
inc
dec
add
inc
decl
mov
ffreep
hlt
sub
add
test
jb
cmp
lret
and
das
or
push
pushl
cmpsl
or
insb
mov
mov
pop
mov
mov
sbb
leave
sti
sub
pop
pop
testl
mov
mov
jns
inc
cmp
std
inc
mov
call
sbb
add
addb
pushf
adc
mov
cmc
ds
movsl
and
cmp
out
push
xchg
clc
xor
sbb
push
sub
lock
and
xor
inc
pop
lds
repnz
xchg
orb
xchg
mov
mov
rep
stos
or
pop
and
rorl
sub
xor
lock
movsl
cli
jno
pop
icebp
pop
and
repnz
pop
ja
ss
sar
adc
adcl
inc
data16
xor
je
push
andl
mov
cmp
repnz
mov
mov
repnz
pop
inc
lret
jns
dec
push
sub
pop
insb
imul
mov
push
mov
lret
icebp
stos
pop
pop
jmp
scas
and
mov
inc
ja
and
and
jmp
or
inc
sbb
mov
sub
ret
into
outsl
gs
imul
or
outsl
icebp
pop
nop
dec
sti
xorb
jne
push
popf
in
lahf
popa
push
ret
cmp
lret
iret
fistl
hlt
mov
jae
xor
or
jno
xchg
fcomp
and
andb
xchg
mov
dec
js
xchg
cmp
xchg
xor
call
adc
repz
cmc
push
mov
js,pn
hlt
cmpsl
push
adc
sub
inc
push
repnz
mov
mov
lods
ja
xor
aas
sub
ret
lea
push
out
lret
jns
mov
and
cmc
aaa
push
push
pop
or
scas
and
imul
add
fcom
push
add
aad
jecxz
icebp
dec
out
inc
and
jne
arpl
jae
les
fs
imul
insb
cmpsb
das
cmp
ljmp
ret
stos
push
les
add
shl
fimull
mov
push
mov
mov
xlat
mov
sub
out
jb
push
push
sbb
ljmp
ret
add
mov
test
add
adc
lods
push
mov
jl
mov
cmp
jle
jns
mov
mov
adc
stos
out
mov
test
ret
call
xor
repz
mov
jecxz
jmp
adc
loopne
inc
jmp
or
test
pop
or
test
xor
jne
lea
add
fs
dec
xor
lock
sub
adcl
enter
loopne
xorb
call
das
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
fistl
sbb
xchg
or
xor
aas
ret
jne
mov
sbb
sbb
call
fsubrl
sub
popf
add
add
stc
dec
pop
je
jne
dec
mov
xor
sarl
sub
add
dec
outsl
nop
rolb
pcmpeqw
and
xchg
insb
add
push
xchg
das
stc
or
push
jne
mov
cld
daa
lea
jo
dec
inc
fidivs
fsubp
jno
and
orl
pop
test
clc
stos
fldl
cmpsl
mov
cmpl
xchg
inc
jbe
sub
enter
pop
test
fnstsw
and
xchg
js
cli
lahf
mov
mov
cli
xor
jns
fistps
fbstp
jp
movsb
fistpll
jnp
out
dec
fistpll
pop
mov
jl
mov
daa
xor
jl
dec
pop
adc
clc
outsl
xchg
mov
outsl
lea
jle
xchg
xchg
inc
adc
mov
xchg
xchg
adc
mov
popl
pop
or
sbb
cmp
sub
popf
add
or
imul
pop
cmpl
add
lcall
cmp
cmpsl
dec
into
cmp
add
push
aaa
add
test
arpl
cmp
or
push
or
add
inc
ret
and
dec
fbstp
add
dec
jne
jne
js
lds
cmp
das
dec
test
or
xchg
rorl
fwait
cs
adc
stos
int3
bound
sbb
repnz
xorb
jl
mov
jne
outsb
aaa
inc
cmp
ret
xor
mov
js
nop
adc
mov
or
inc
hlt
xchg
sbb
add
sub
cmp
push
and
jne
push
sbb
cmp
cmp
mov
mov
and
jns
je
insl
add
sbb
fs
jb
jae
add
js
jo
out
mov
inc
or
xchg
or
adc
es
xor
call
test
cmp
repnz
scas
or
aam
adc
inc
ret
xor
lock
test
xlat
push
or
cmpsl
arpl
call
lock
movsl
aam
inc
clc
sub
out
into
sub
adc
mov
mov
fists
mov
loopne
and
pcmpeqw
push
jmp
into
hlt
or
pop
sbb
xor
adc
jae
add
push
and
xchg
mov
adc
inc
and
add
jne
mov
movsl
xor
cld
sbb
jae
xchg
repnz
in
adc
pop
rorl
or
mov
mov
push
clc
sbbl
sbb
ret
ljmp
fs
lods
sub
cmp
or
ja
jne
mov
sub
sbb
dec
je
add
dec
fs
sbb
adc
movsl
pop
jae
ljmp
jnp
adc
lret
jbe
dec
add
push
ficomps
fiadds
or
arpl
test
mov
mov
mov
leave
dec
mov
or
and
or
or
rclb
xchg
je
hlt
test
subb
dec
ret
scas
pop
and
push
nop
add
cli
dec
dec
push
daa
pop
and
out
xchg
and
dec
in
and
push
push
inc
or
xchg
dec
fs
adc
clc
adc
xchg
xchg
icebp
sbb
mov
and
mov
and
add
lds
leave
ja
dec
pop
jb
shll
fmull
and
aas
mov
and
mov
add
ret
adc
inc
add
loop
jb
fwait
cld
or
inc
mov
and
sbb
js
adc
xor
or
sub
or
test
sbb
jb
pop
sub
or
pop
shrl
xchg
lahf
add
gs
add
or
adc
inc
cmp
push
ret
xchg
js
xor
inc
push
mov
test
rcll
and
je
roll
cmp
aaa
or
and
sbb
adc
inc
ljmp
adc
sbb
sub
xor
inc
xchg
dec
sub
cltd
pop
adc
or
jle
mov
and
adc
and
mov
adc
and
adc
sbb
and
adc
or
and
dec
dec
xchg
push
sub
xchg
and
test
mov
dec
mov
inc
loope
nop
inc
push
add
out
mov
adc
and
push
or
inc
adc
mov
adc
and
dec
xor
inc
dec
push
mov
pop
and
dec
insl
xchg
je
jnp
orb
sahf
dec
movsl
xchg
lods
and
enter
dec
fisttpll
or
sub
or
sub
or
jg
and
sub
dec
aaa
mov
sbb
sbb
outsb
xchg
or
xchg
mov
dec
into
xchg
fisubrl
out
xchg
repnz
decb
or
sub
inc
adc
push
dec
push
xchg
pop
and
insb
jae
jp
andl
and
mov
mov
test
fs
fmull
xchg
ljmp
push
sbb
sbb
xchg
sub
xor
mov
dec
and
dec
fs
imul
inc
jle
mov
adc
mov
jecxz
cmp
inc
mov
int3
sub
shll
pop
ficoml
call
xchg
sub
xor
add
or
jmp
or
mov
and
add
fisubs
jg
fisubs
pop
mov
mov
dec
jp
lahf
in
sbb
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
in
add
je
fadd
nop
rcll
xchg
xchg
cmp
fs
orb
mov
mov
mov
jg
je
jae
jns
ds
int
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
fildl
cmp
inc
push
xorb
inc
inc
dec
aaa
push
or
jae
mov
mov
add
hlt
xor
popf
bound
inc
mov
push
gs
mov
mov
pop
sti
lock
shlb
addr16
jbe
xor
sbb
je
insb
inc
jo
sahf
outsb
imul
cmp
cmp
mov
das
ret
jne
cmpsb
ret
xor
repz
imul
jmp
jecxz
lret
aas
mov
iret
mov
sbb
in
test
push
rol
loopne
test
addb
jns,pt
ret
and
cmp
cmp
lock
cmpsb
inc
adc
or
sub
cmpsl
inc
test
mov
test
or
mov
sub
lds
inc
add
push
and
mov
test
push
cmp
pop
adc
adc
pcmpeqw
das
adc
jg
xchg
mov
pop
or
rcr
out
les
adc
loope
sub
inc
test
push
cmp
cli
or
ds
cmp
cltd
sub
fildl
ret
cmpsb
rolb
js
data16
popf
inc
dec
test
aas
shrl
inc
adc
cmpb
ds
mov
pop
and
or
or
push
and
or
inc
adc
cmp
and
adc
jae
inc
adc
bound
adc
outsb
repnz
cmp
outsb
repnz
cmp
outsb
repnz
cmp
ret
sbb
mov
push
cld
ret
jp
push
inc
push
add
pop
adc
and
sub
nop
or
push
cli
adc
pop
cmp
hlt
and
push
jo
lods
pop
cltd
and
sahf
push
cmp
daa
lds
daa
int3
cmpb
hlt
cmp
inc
cmpsl
jns
jo
and
and
les
and
out
pop
sbb
lods
pop
sbb
mov
pusha
cmp
mov
xchg
dec
adc
jne
lods
adc
mov
bound
test
stc
enter
sub
xchg
and
inc
or
adc
or
stos
or
pop
push
or
cld
dec
clc
test
mov
lcall
add
das
cmp
or
in
xchg
imul
mov
xchg
or
or
testl
ss
push
mov
pusha
mov
popa
xchg
push
sub
notl
pop
pop
pop
mov
or
out
aaa
and
loopne
movsb
std
cmp
stc
aaa
dec
je
add
call
and
les
cmp
dec
mov
jb
sbb
aam
in
repnz
push
sub
mov
xchg
xor
xor
push
jge
or
int3
in
pop
push
xchg
hlt
cmp
cmp
or
adc
cmpsb
pop
sub
mov
pop
aad
jg
or
mov
hlt
jbe
xchg
mov
xchg
mov
stos
lret
mov
mov
nop
and
je
push
scas
pop
scas
stos
mov
sub
enter
add
repnz
push
lock
push
jp
push
je
mov
stos
outsb
test
adc
xchg
arpl
add
adc
push
loop
push
mov
add
addr16
mov
or
fmuls
mov
inc
and
popa
and
add
pop
add
std
cli
cmp
adc
loop,pn
sahf
push
inc
xor
fistl
mov
jns
dec
push
sub
call
push
lret
jns
or
sahf
push
push
lret
sub
movsl
sbb
push
jno
dec
and
or
push
loop
sub
jns
pop
pop
jmp
scas
and
cmp
or
pop
lcall
in
dec
dec
shrl
pushf
mov
jnp
cmp
test
rcr
push
adc
cmpsl
shl
es
mov
imul
mov
mov
and
movsb
es
dec
fisttps
lea
movsw
and
cmp
fsubrs
rol
lds
adc
xchg
inc
dec
aas
push
pop
mov
jmp
pushf
pop
inc
or
inc
inc
dec
sbb
fnstcw
imul
xchg
lret
inc
por
mull
inc
lret
inc
and
mov
les
jle
pop
cwtl
mov
cmp
jae
movsb
xor
adc
add
sub
cmpsl
and
cmp
sbb
pop
mov
pmaxsw
inc
faddp
mov
push
fldcw
add
inc
jne
push
cmp
cmpsb
jp
mov
fstpl
inc
mov
dec
js
sbb
push
inc
pop
cmp
inc
repz
xchg
or
and
add
adc
cs
sbb
xor
jne
sub
cs
out
xchg
mov
andl
or
mov
movb
mov
rcrb
xchg
jnp
scas
fbld
or
leave
xor
jecxz
mov
int
in
cmp
rolb
xor
outsb
sbb
rorb
jns
cwtl
and
push
lea
add
push
or
dec
sbb
dec
sub
pusha
cmp
sete
push
js
adc
hlt
jmp
fisubrs
cltd
mov
push
mov
or
adc
push
sub
out
mov
adc
inc
das
fisttpll
add
mov
mov
push
adc
or
or
nop
cvtdq2ps
iret
mov
das
scas
mov
mov
jnp
icebp
mov
xchg
dec
sti
imul
inc
adc
pxor
and
stos
jne
inc
data16
xchg
or
and
je
sub
mov
arpl
nop
push
inc
dec
push
pop
inc
jne
and
je
jno
sahf
push
sti
aaa
pop
or
jae
mov
sbb
fisubl
dec
sbb
fistpl
dec
leave
cld
data16
jne
imul
fmuls
in
or
jmp
sub
and
xchg
mov
xchg
and
adc
adc
sbb
sbb
mov
add
add
mov
jl
or
sub
fwait
sub
lret
dec
cmpb
add
mov
mov
mov
call
loopne
ja
out
sahf
cmpb
jbe
push
jne
call
add
inc
or
jnp
out
mov
addl
push
sbb
inc
mov
int3
cmp
xchg
adc
mov
inc
sahf
pop
fs
scas
xor
fsts
mov
inc
sarl
sbb
sub
les
mov
ret
inc
push
pop
pop
mov
mov
mov
sti
aas
cli
xor
mov
popa
push
mov
mov
dec
push
dec
and
or
pop
ret
and
aas
aas
inc
dec
push
call
insl
push
repz
testb
sub
cmpsl
push
lret
fsubr
dec
and
dec
sub
xor
ljmp
and
push
pop
mov
enter
dec
inc
dec
cmp
push
cmpsl
push
xchg
push
pop
rolb
and
dec
dec
sbb
and
es
sub
sub
outsl
adc
xor
jmp
mov
sbb
add
and
popf
push
push
scas
ficomps
cs
inc
leave
xorb
or
xchg
xchg
nop
mov
mov
adc
sti
and
jne
out
fisubrs
outsb
or
fldl
or
pop
or
sub
push
jnp
gs
clc
clc
fwait
nop
inc
mov
aaa
adc
daa
push
ret
push
jns
adc
dec
inc
das
mov
inc
cwtl
xor
iret
and
loop
in
and
leavew
xor
jnp
push
sbb
pop
dec
cmp
test
repnz
js
aad
imulb
je
int
cmp
cmp
adc
xchg
xor
adc
adc
add
pop
push
repnz
rorb
call
call
and
movsl
or
add
call
or
stos
and
xchg
lahf
push
lock
cmp
in
or
dec
jae
jl
adc
ljmp
adc
mov
lods
js
sti
xor
push
sub
push
xchg
push
ja
push
mov
lret
dec
mov
sub
out
stc
mov
dec
out
mov
adc
movsb
out
addb
pop
inc
imul
es
and
mov
ja
test
fs
movsb
out
jmp
imul
jmp
add
pop
add
xor
icebp
pop
jmp
push
je
pop
movsb
xor
or
negl
xor
mov
popf
or
ja
xor
dec
or
add
adc
inc
leave
mov
out
call
sub
or
and
xorb
mov
or
pop
punpckhbw
cwtl
cmc
push
mov
popf
lret
xor
push
sbb
sbb
or
pushf
fisttps
inc
jecxz
and
rclb
je
sub
inc
push
or
pop
push
sub
test
mov
divl
push
mov
stos
push
xorl
fwait
cmp
je
add
nop
adc
call
sahf
scas
push
mov
jp
push
inc
or
or
popf
aam
mov
push
pop
mov
adc
xor
stos
shrb
inc
sti
fstl
pusha
mov
sbb
pop
inc
fildll
sub
hlt
or
mov
or
or
add
in
sub
popf
rcll
cmp
leave
sbb
xchg
sbb
push
andl
add
mov
and
movsb
das
inc
add
sub
out
xor
mov
add
or
sub
fs
adc
add
and
test
in
sbb
mov
and
ret
movsl
or
sti
lret
pop
or
pop
pop
and
aaa
pop
les
xchg
and
es
gs
sub
cltd
bound
xor
dec
stos
adc
cmp
cwtl
adc
push
adc
jae
pop
dec
push
insl
sub
push
mov
xchg
add
ror
xchg
mov
cmp
nop
dec
add
sbb
jne
mov
mov
scas
sub
adcl
lods
mov
mov
xor
sub
iret
sub
mov
cmp
xor
mov
aaa
jo
les
push
or
xchg
aaa
imul
mov
sti
pop
fs
aas
sub
inc
push
movsl
mov
cmp
int
aaa
mov
inc
test
push
lods
lea
or
push
inc
lods
xchg
push
adc
pop
pop
or
mov
sub
add
push
xchg
mov
add
push
adc
in
das
call
add
sub
pop
and
push
test
mov
push
gs
pop
mov
les
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
sub
inc
push
push
loope
inc
jle
jl
test
ret
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
bnd
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
sbb
and
lret
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
sub
int3
jnp
movl
dec
fs
xor
add
sub
mov
push
sbb
or
mov
pop
push
mov
push
nop
mov
push
inc
enter
popf
or
loopne
shll
or
jmp
or
mov
fwait
lcall
push
in
and
lahf
rclb
push
push
fs
and
jp
dec
cmp
cmp
fs
mov
cmpsl
fistpll
aad
mov
sahf
cs
and
add
xor
pop
cld
push
jo
sbb
dec
push
cmp
inc
ja
mov
loope
pop
or
pop
sbb
push
lock
mov
mov
int
sub
fildll
mov
cmc
push
test
push
xchg
sub
lcall
dec
push
sub
popa
call
scas
sub
and
jns
pop
sub
jmp
dec
and
add
sub
jns
pop
pop
jmp
scas
and
into
xor
fadds
aas
lcall
or
pop
inc
sbb
repnz
and
bound
lret
xchg
scas
inc
ljmp
das
or
dec
add
dec
lock
inc
push
repnz
mov
adc
xor
lock
in
sub
xchg
dec
lret
jns
pop
sub
jmp
and
cmc
sahf
push
sub
xor
bound
inc
aaa
adc
and
lock
mov
mov
rclb
cmp
add
ja
clc
push
dec
outsb
arpl
loop
ljmp
rcll
aas
cmp
inc
xchg
mov
xor
mov
cmp
test
inc
cmp
dec
test
mov
inc
sub
xor
or
push
and
pop
outsl
test
out
xor
adc
mov
and
push
mov
or
jne
fcoms
or
sub
xor
popf
in
pop
imul
cmp
je
mov
mov
xchg
sub
cmpsl
rol
push
xchg
call
nop
inc
mov
sub
rorb
add
shr
inc
loop
inc
sarb
push
pop
mov
push
add
dec
or
add
inc
ret
and
stos
inc
mul
sub
sub
or
mov
sbb
mov
xchg
lds
arpl
jecxz
out
sub
pop
lods
cmp
movsl
or
ret
push
mov
jmp
inc
stos
mov
sub
cmc
pop
mov
mov
cli
rorb
pop
add
mov
add
push
cwtl
lea
cmpsb
shlb
pop
sub
cmp
cmp
add
push
dec
in
jmp
add
adc
les
enter
scas
xor
and
movb
push
pop
xor
or
je
pop
push
fcoml
incl
and
roll
jne
push
arpl
icebp
mov
test
inc
push
dec
sub
mov
sub
hlt
mov
shll
js
xor
xchg
and
inc
adc
das
and
push
sbb
add
add
sub
cmp
cmp
in
lods
inc
add
inc
pop
sub
pop
dec
or
mov
enter
add
scas
mov
ret
fucom
pop
test
inc
dec
push
xor
adc
jecxz
jo
and
dec
mov
push
inc
or
xor
jmp
xchg
mov
pop
js
repnz
jns
add
shll
pop
fs
int3
adc
repnz
test
cmp
lods
xor
stos
aam
aaa
mov
xor
mov
shlb
inc
add
mov
lock
xor
mov
data16
adc
cmp
xchg
rcrl
jmp
cmp
clc
xchg
movsb
and
gs
pop
xchg
in
jp
and
stos
inc
pop
sbb
mov
and
adc
lret
inc
dec
dec
or
jecxz
push
or
pop
or
mov
xchg
ret
inc
or
mov
clc
mov
xor
data16
sbb
dec
rcl
xchg
mov
cs
jae
sahf
adc
rcl
ja
add
sub
sbb
push
push
inc
leave
jne
outsb
xor
lcall
xchg
ds
imul
xchg
insb
gs
cld
stc
xchg
aas
adc
divb
in
jo
push
ljmp
and
cltd
push
or
xor
outsb
icebp
push
mov
inc
push
inc
mov
xor
and
mov
leave
dec
push
mov
sub
cmp
push
or
data16
adc
jb
test
mov
adc
stc
inc
lcall
shll
sub
aas
repz
mull
popa
or
mov
push
fs
mov
lods
je
jl
popa
add
mov
js
push
daa
fcmovu
inc
pop
add
add
xor
into
xor
std
mov
push
push
push
bound
mov
cs
push
les
or
inc
adc
loopne
push
cmp
ret
movl
cwtl
mov
xor
mov
adc
and
cmp
xorb
je
lahf
xor
push
lods
ss
inc
test
inc
adc
inc
add
push
int
imul
cmp
call
cmpsb
int3
sbb
pop
movsb
addl
adc
push
icebp
je
dec
and
call
aaa
pop
xor
pop
mov
in
mov
cmp
jno
lret
mov
or
or
fcoml
shlb
sbb
jae
les
and
sub
sub
jo
mov
call
test
xor
xor
or
cld
std
adc
push
push
and
cmp
cmp
clc
xor
sbb
clc
and
inc
mov
fs
cmp
xchg
and
enter
or
xchg
and
nop
shl
in
sbb
pop
mov
and
add
shlb
and
pusha
and
mov
roll
fs
loopne
and
cmp
xchg
and
enter
or
xchg
and
nop
loop
sbb
aam
xlat
aam
mov
mov
rolb
fs
xor
adc
enter
enter
and
nop
mov
xor
sbb
les
test
lods
xchg
and
or
leave
iret
xor
subb
pop
push
cmp
pop
mov
cmpsl
cs
cli
loopne
pushf
mov
and
cmc
sbb
xchg
sbb
push
mov
mov
pop
cmpb
pop
adc
xchg
test
xchg
push
sbb
xchg
js
pop
lret
pop
or
xor
fildl
xor
xchg
stos
std
sub
ficoml
cltd
add
and
push
ds
adc
xchg
lods
pop
pop
in
stos
adc
push
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
mov
adc
add
incb
test
mov
sub
mov
sbb
in
mov
inc
mov
nop
lcall
and
inc
mov
cwtl
xchg
pushf
xchg
xor
push
lret
jno
movd
pop
dec
add
sbb
mov
dec
subb
pop
test
cmpb
fsubs
sub
mov
dec
ljmp
enterw
sub
movzwl
ret
inc
push
inc
insb
and
call
js
lahf
push
das
sub
out
mov
lea
aam
lock
popa
sbb
in
mov
xchg
xchg
enter
test
in
out
jno
pcmpgtb
cwtl
cmp
xchg
les
jb
dec
cmp
pop
xchg
xchg
jns
add
cmp
mov
xchg
mov
xor
push
addr16
or
adc
push
cmpsl
imul
sbb
inc
lret
mov
pop
data16
shlb
mov
push
outsb
add
dec
or
mov
mov
movsb
cmp
jne
push
add
je
mov
dec
loopne
es
sub
inc
mov
inc
inc
mov
pop
or
ficompl
push
pop
and
cmp
cmp
in
bound
xor
enter
push
and
or
sub
inc
sub
loop
pop
xchg
or
and
pop
or
test
or
add
sbb
movsl
pop
push
sbb
adc
and
adc
fs
stos
cmp
fucomi
fs
sub
or
testb
inc
je
mov
mov
mov
adc
inc
or
fwait
pop
adc
push
stos
add
sub
pop
fstps
je
ss
into
enter
or
and
jbe
or
mov
pop
mov
jnp
ljmp
jle
leave
jno
inc
out
sub
xchg
jmp
add
mov
insb
adc
test
mov
inc
xor
leave
mov
cmp
pop
mov
add
or
jne
pop
jbe
dec
cs
pop
imul
inc
iret
mov
mov
inc
push
imul
dec
outsl
fs
pop
test
sarl
dec
and
lock
mov
add
addr16
imul
adc
sbb
inc
outsl
jne
movsl
mov
sub
test
push
jo
arpl
callw
fwait
out
push
push
xchg
and
or
cmpsl
push
mov
push
inc
dec
push
pop
orb
inc
cmp
dec
inc
dec
cmp
in
sub
adc
xchg
adc
adc
hlt
dec
adc
imul
mov
scas
stos
data16
cwtl
jmp
push
pop
inc
inc
dec
sbb
dec
push
xor
xchg
out
ret
dec
inc
xor
imul
push
rcrb
divl
repnz
jp
and
mov
jmp
pop
fisttpll
lods
mov
dec
mov
jne
pop
hlt
insb
in
push
mov
and
and
out
lret
and
js
jnp
push
and
mov
jle,pt
mov
inc
imul
cmpsl
inc
movsl
ret
into
push
lret
pop
dec
push
cli
adc
fs
iret
pop
push
in
sub
mov
insl
xor
fsubs
stos
cmp
adc
dec
push
dec
andb
out
adc
gs
adcb
sub
stos
push
inc
fs
icebp
dec
arpl
sub
adc
mov
push
and
dec
or
lods
sbb
add
js
sub
sub
cltd
orb
pop
push
mov
sub
push
sub
mov
xchg
adc
sub
adc
and
cltd
fsubs
xor
xor
cmp
notb
inc
test
pop
sub
xor
loop
jnp
xor
push
pop
js
inc
test
xchg
adc
cltd
push
push
jg
loopne
adc
pusha
mov
mov
imul
sbb
sbb
daa
jne
nop
add
popf
leave
mov
loopne
push
jne
cld
adc
mov
js
dec
loopne
xor
cmp
jge
fcoms
add
mov
cmp
loopne
jnp
or
pop
sbbl
sahf
push
subl
mov
lea
fstpl
cmc
outsb
dec
jb
cmp
std
cmpsb
movsl
arpl
adc
cmpsb
sbb
add
mov
or
and
mov
dec
dec
or
pop
push
inc
mov
and
ffree
jnp
mov
or
fcom
je
test
sarb
data16
shr
adc
push
xor
test
and
xor
fisttpl
mov
push
sub
add
je
mov
roll
jne
dec
mov
pop
dec
adcb
cmpsb
jmp
adc
mov
inc
jne
out
gs
adc
push
push
sbb
mov
subl
ja
ja
pop
push
icebp
test
jns
or
ret
je
mov
pop
sti
sub
pop
or
jmp
scas
shll
mov
test
adc
mov
bound
sbb
insl
sub
repnz
xor
popf
push
xor
and
pop
cltd
xchg
arpl
cmp
cltd
xchg
and
mov
dec
cmp
scas
sbb
push
sub
mov
jle
mov
inc
push
adc
cmpsb
sbb
and
adc
shll
int3
push
cmp
pushf
push
xchg
lds
or
mov
mov
push
sbb
mov
inc
das
push
add
inc
adc
out
inc
ret
jb
ljmp
jne
inc
sub
jl
push
out
and
mov
push
sbbb
ret
nop
jl
inc
jmp
adc
mov
insb
sbb
mov
sbb
jmp
push
lods
lock
hlt
pop
rcl
scas
gs
add
or
pop
mov
repnz
add
mov
jns
aam
scas
into
xor
adc
loop
xor
push
bound
sub
mov
adc
or
aam
jno
sub
push
mov
leave
pop
push
gs
mov
pusha
adc
call
adc
cmpsb
push
cmp
and
jmp
and
add
insl
mov
mov
dec
xor
jmp
outsb
js
imul
sub
cmp
or
iret
adc
adc
call
aaa
clc
pop
movsl
xor
daa
push
and
cli
xor
ret
call
dec
cmp
movsl
or
lods
sbb
aad
inc
ret
fs
sub
hlt
mov
lret
push
or
clc
pop
mov
or
push
stc
xchg
add
cltd
xor
adc
mov
xchg
sbb
cmp
xlat
push
fistpll
push
lods
adc
rorl
popf
add
sub
xchg
pushf
sbb
and
add
xorb
dec
lret
jmp
mov
dec
add
cmp
xchg
sbb
and
xchg
mov
push
mov
jne
or
je
push
xlat
sbb
adc
pop
pop
mov
pop
inc
and
mov
fs
or
push
push
adc
sub
lock
xor
cmp
sbb
and
test
jecxz
aaa
jns
or
pop
lods
jl
aaa
mov
call
les
adc
xchg
cmp
xchg
or
test
and
icebp
mov
inc
clc
int3
outsl
call
rcrb
ljmp
sub
ja
adc
add
dec
pop
into
mov
sbb
test
xchg
push
push
or
mov
scas
mov
mov
pop
pop
sbb
push
loop
stos
mov
push
push
int3
test
sbb
pop
call
push
inc
adc
push
in
and
enter
in
cmp
pop
call
mov
jmp
push
lods
sub
mov
adc
test
xor
and
add
push
or
sub
inc
mov
mov
xlat
xchg
int3
mov
dec
sbb
adc
out
dec
in
push
lret
inc
mov
push
pop
movsl
sub
test
ffree
sbb
call
inc
xchg
push
mov
aaa
roll
popf
pushf
and
adc
xor
mov
mov
add
aad
xchg
xchg
or
jbe
push
push
int3
sub
mov
movsl
ret
rolb
cmp
stos
movsl
cmp
add
push
push
popa
cmp
lea
sub
push
test
and
imul
pop
dec
or
call
push
icebp
mov
mov
fbld
sbb
movsb
mov
pop
mov
rol
cwtl
stos
or
movb
call
bound
and
push
and
imul
nop
cs
cmp
popf
push
push
push
pop
sub
inc
push
sub
jb
xchg
es
dec
cmp
mov
push
bound
mov
push
pushf
push
push
mov
mov
loop
pop
and
sarl
adc
in
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
lahf
movsb
sbb
cmc
inc
jne
dec
jmp
jae
sub
add
std
lret
adc
adc
add
rorb
add
jae
pop
shll
and
in
push
push
test
pop
sub
xchg
xor
add
imul
jno
filds
sub
lea
cs
xor
push
bound
nopl
fsubr
mov
xchg
jecxz
mov
fwait
insl
add
les
add
clc
fs
push
xor
andl
mov
cltd
sbb
xchg
mov
fcompl
movsb
cmp
cmc
lcall
push
fidivrl
add
out
mov
xchg
leave
pop
cmp
and
insb
andb
jb
mov
enter
push
lods
fwait
push
add
rolb
ds
cmp
dec
filds
push
adc
xor
push
mov
dec
ss
aaa
sbb
jnp
and
mov
daa
hlt
inc
jae
in
adc
xlat
sub
mov
pop
lock
dec
in
adc
mov
decb
xchg
jmp
rcll
test
xor
cmp
and
add
ret
jb
sbb
inc
fidivrl
dec
lcall
sub
pusha
push
cmp
out
popa
jae
pushf
jnp
add
push
lret
gs
sbb
adc
pop
jl
adc
mov
dec
jno
sbb
adc
pop
add
jb
aam
movl
aad
jno
cmp
ds
add
movsb
mov
xor
jmp
mov
push
add
dec
loop
add
mov
jle
add
lcall
jle
add
xchg
daa
out
jge
add
dec
outsb
in
insb
out
inc
pop
arpl
subb
mov
gs
push
xchg
add
out
lcall
in
cld
sbb
fs
pop
in
adc
pop
push
ja
stos
pop
inc
sbb
xor
inc
add
outsl
fsubs
add
test
and
adc
mov
xchg
or
pop
add
clc
cld
shr
lods
pop
sbb
loopne
je
or
loopne
adcb
idivb
add
das
jne
push
cmp
ja
fisubl
inc
mov
add
mov
aaa
cmp
in
subb
jbe
or
movsb
les
push
push
movl
add
xor
cmp
jge
movsb
fistl
jno
add
sbb
sbb
push
add
inc
jge
shlw
add
dec
ja
cmp
es
leave
mov
sti
imul
jg
gs
push
daa
fildll
repnz
cld
das
add
and
jno
test
and
mov
xchg
add
pop
sahf
push
xchg
mov
add
int
lock
inc
cmp
rcrl
mov
add
pusha
add
lock
popa
addb
test
add
sbb
repnz
push
aam
xlat
xchg
inc
jb
je
add
ss
push
push
and
test
add
cmp
cmp
add
jecxz
icebp
add
stc
jge
inc
sub
and
and
out
jb
mov
shrl
imul
aam
mov
push
clc
cmp
insl
xchg
push
pop
jmp
mov
xor
xchg
add
mov
cmp
addr16
or
sbb
leave
iret
sahf
push
mov
ret
pop
add
adc
lret
fsubs
pop
out
lahf
ss
in
ljmp
fwait
push
fdiv
pop
fstps
jbe
pop
jecxz
loop
call
icebp
cli
sub
outsb
mov
shrb
jne
movsl
into
mov
cwtl
in
jae
popa
jge
or
mov
mov
cmp
aaa
aas
fdiv
mov
cmc
mov
cmp
push
add
stc
sahf
pop
aam
sbb
fs
cltd
pop
add
adc
push
push
testb
shlb
adc
add
dec
sbb
shr
add
repz
inc
aas
or
sub
mov
adc
pop
add
jae
into
ja
dec
and
dec
test
std
leave
pusha
pop
sbb
inc
out
mov
fdivl
loop
jbe
add
xlat
adc
add
loope
mov
int
xor
pop
in
loop
sbb
movsl
lea
subb
add
lcall
loopne
mov
or
add
ds
roll
in
xchg
sbb
jg
add
push
cmp
dec
adc
enter
pop
and
ja
xchg
lcall
cmc
sub
mov
add
lods
addb
mull
in
loopne
mov
daa
mov
adc
out
fisubl
aad
add
arpl
sub
add
mov
jne
sub
mov
adc
movsl
adc
into
sbb
pop
inc
out
push
mov
mov
cmc
push
fucomi
xchg
cld
stos
or
mov
aad
lods
jne
ds
fdivrs
loopne
add
mov
adc
out
add
pop
xor
inc
std
imul
repnz
push
jle
arpl
call
mov
mov
add
push
inc
cmp
sti
cmp
idivb
sub
add
inc
shll
enter
subb
sahf
mov
inc
jecxz
mov
xor
add
leave
pop
pop
cmp
jne
jo
cwtl
sub
fistps
sbbb
fnstsw
popf
push
mov
lahf
daa
repz
and
mov
add
popf
push
ja
dec
test
jnp
pcmpgtd
add
dec
xchg
jecxz
mov
fisubrs
cmpsl
mov
mov
clc
mov
scas
xlat
aas
inc
int3
xchg
add
neg
and
sbb
jp
add
push
fildl
cmp
sarb
mov
mov
mov
scas
push
and
fmuls
and
cltd
add
dec
mov
int
flds
imul
xchg
jns
orb
xor
mov
femms
stos
cwtl
fbld
pminub
xchg
cmp
add
adc
stos
mov
sub
push
cmp
rclb
stc
pushf
push
sbb
in
pusha
add
cmc
xor
add
fmuls
push
jge
cltd
add
add
push
lret
add
push
arpl
jmp
add
aas
jbe
inc
in
aaa
push
cmpsb
orb
mov
xlat
insl
sub
std
out
add
test
dec
fwait
lahf
mov
add
mov
xchg
ds
xchg
or
push
scas
add
xchg
lcall
cwtl
rorl
xchg
add
ljmp
inc
add
cmp
lock
dec
dec
xchg
xorb
add
mov
push
das
mov
adc
popa
pushf
add
push
adc
adc
xchg
int
push
icebp
fdivs
jae
jbe
add
dec
hlt
pop
add
scas
stos
pop
add
stos
jnp
cmpl
add
imul
push
imul
clc
cli
mov
xchg
mov
adc
add
out
scas
lea
mov
rol
mov
and
cld
mov
adc
ret
cli
cmp
and
sahf
mov
shll
cmpsl
pminsw
inc
out
mov
mov
popf
push
add
jns
mov
aaa
add
mov
lea
xchg
sub
adc
push
mov
rorb
add
jne
push
lret
cld
in
ud2
xchg
push
mov
orb
lcall
out
mov
add
scas
push
popf
mov
mov
jns
shll
pop
or
inc
inc
and
jg
mov
push
into
pop
mov
and
add
outsl
adcl
jecxz
loopne
scas
icebp
push
add
xchg
sbb
xor
jnp
cmc
add
and
icebp
daa
add
adc
das
push
adc
dec
rorl
and
pop
rolb
push
out
in
cmp
add
in
xor
push
push
adc
pop
mov
xchg
mov
mov
add
lods
sbb
xlat
clc
sub
and
adc
testl
lock
imul
jecxz
cld
je
add
lea
andb
mov
je
lahf
aam
sbb
std
test
es
add
add
jae
fbld
fwait
mov
fildl
mov
mov
jbe
pop
jp
mov
cmp
loop
and
jge
out
add
and
iret
repnz
xchg
call
add
cltd
mov
dec
pop
add
pop
insb
filds
sbb
mov
insl
mov
daa
in
jg
inc
fadds
and
xor
insb
inc
jo
add
lock
shlb
add
jecxz
mov
rolb
addb
add
push
push
jp
lret
stos
movsb
les
and
or
add
fbld
mov
and
loopne
xchg
add
xchg
scas
fisubrl
int3
out
mov
dec
add
leave
ret
sbb
cmp
pop
mov
mov
sub
out
or
dec
imul
stos
push
fs
add
pop
jle
call
bound
mov
mov
je
jge
push
sahf
test
fldenv
xor
add
int
add
cmp
sub
in
xor
insl
ret
mov
and
add
testl
inc
dec
loopne
and
or
xor
fwait
lock
mov
ret
bswap
add
push
push
sbb
push
mov
shrl
pusha
movsl
decb
sbb
push
jecxz
loopne
add
divl
scas
add
add
faddl
add
add
outsb
in
lahf
and
dec
sub
stc
cmp
sbb
jge
pop
push
xchg
test
jne
xor
xchg
xor
pusha
mov
sbb
push
jle
add
idiv
mov
xor
adc
test
add
in
lahf
mov
cld
add
int3
mov
in
shlb
jo
push
clc
push
adc
cmp
add
ret
idiv
jne
xlat
gs
sbb
loope
mov
push
pop
in
ja
add
call
es
push
imul
add
mov
in
add
jl
add
dec
inc
and
cmp
jecxz
jb
cmp
das
movl
loope
fildl
add
punpcklbw
fsubrl
aas
mov
test
int
add
inc
add
cmp
outsb
push
cli
pop
loopne
or
xor
add
push
and
imul
sbb
inc
add
ja
in
dec
mov
nop
fisttpll
lea
mov
push
test
inc
push
mov
sub
outsb
js
mov
js
fisubrs
jmp
ja
push
sub
mov
inc
pop
xchg
out
les
jle
mov
repz
inc
dec
nop
mov
imul
loop
js
and
insb
aam
push
js
xor
insb
xor
jl
inc
xchg
xchg
out
adc
mov
js
mov
cmp
jns
sbb
ja
inc
sub
dec
mull
add
or
pop
out
fwait
mov
mov
cmp
test
insl
mov
pushf
js
outsb
lea
jns
and
ret
push
icebp
mulb
imul
mov
xchg
xchg
lods
dec
push
pushf
inc
mov
outsb
aaa
adc
jnp
lcall
nop
call
pushf
mov
adc
jnp
inc
inc
outsl
mov
outsb
ret
mov
jns
xchg
xor
xchg
iret
mov
test
mov
jns
in
outsl
loop
mov
shll
jnp
es
jmp
and
or
jo
dec
jle
bound
jle
push
jo
or
xchg
xchg
fwait
xchg
inc
and
cli
jl
fwait
or
jo
and
jge
push
jno
lds
inc
push
test
inc
fwait
sbb
arpl
test
xchg
out
jge
lret
jno
and
jno
rclb
sbbl
divps
imul
mov
jno
sbb
fwait
mov
jb
fbld
xchg
mov
jno
cmp
loopne
push
lahf
jno
test
hlt
ljmp
sidtl
scas
call
add
mov
or
sahf
inc
add
stc
inc
jg
inc
jae
push
inc
jae
imul
adc
jg
or
dec
mov
aam
fdivs
es
lods
dec
lea
jae
push
sti
xor
je
cmp
inc
test
je
adc
in
mov
inc
sbb
rolb
xchg
push
xchg
cwtl
xchg
aad
ljmp
les
adc
ja
or
push
scas
adc
sti
mov
jge,pn
clc
push
and
jne
inc
pop
push
and
andl
jne
mov
xchg
jno
stc
jle
sbb
push
cmp
sub
out
loop
jne
or
sbbb
jno
dec
inc
and
in
mov
hlt
and
sbb
ret
jbe
mov
jbe
or
orl
ja
pop
arpl
jne
xchg
dec
cmp
pushf
dec
pushf
clc
and
sub
push
fwait
in
pop
jno
pop
push
cmp
mov
add
mov
cmpsl
iret
ret
aad
and
cmp
pop
add
pop
mov
adc
adc
jne
fisubrs
cmp
mov
out
add
fs
xchg
imul
mov
adc
push
jno
pushf
push
jmp
inc
pop
mov
mov
push
or
cs
lock
adc
xchg
lds
pop
mov
push
sub
test
inc
jne
inc
jns
lock
fisubs
fwait
xchg
or
mov
subl
call
fisubs
pop
jp
es
pop
mov
jp
cmpsl
test
pop
jp
xchg
clc
addr16
js
ja
sbb
test
pop
mov
pop
rolb
or
jp
lock
push
out
jnp
mov
xchg
xor
test
test
or
nop
push
inc
jbe
jo
jge
mov
mov
mov
aam
icebp
in
pop
sbb
cmp
call
and
sbb
and
sbb
pop
xchg
lock
jns
sbb
rcl
leave
sbb
mov
inc
push
adc
pop
lahf
and
sub
jl
pop
loopne
mov
cltd
enter
or
and
xchg
mov
ret
mov
push
pop
jge
mov
arpl
or
loopne
loope
jge
adc
mov
hlt
in
inc
cwtl
jge
into
decl
out
or
mov
nop
ficoml
jge
repz
jge
hlt
jle
std
inc
mov
loopne
adc
mov
dec
jle
std
inc
mov
nop
jle
fwait
testl
roll
ret
int
mov
inc
jo
mov
cmp
adc
mov
sbb
dec
xor
or
test
jl
inc
jg
jb
inc
mov
cmp
out
mov
mov
in
or
sub
in
sti
or
mov
clc
jg
cmp
xorb
in
or
sbb
mov
and
bound
das
or
or
subb
mov
ret
mov
mov
movb
adc
in
cli
cmp
lock
mov
adc
loope
mov
loopne,pt
test
pushf
jg
cmp
ret
sbb
and
subl
jmp
xor
in
js
mov
jmp
in
adc
call
xchg
cmpsb
mov
test
xor
enter
insb
cmpsb
mov
cmp
int3
inc
mov
std
cmp
jmp
adc
sub
movsb
or
les
es
mov
test
data16
ja
inc
jge
mov
nop
adcl
call
hlt
and
andl
push
and
sbb
lea
mov
addr16
pop
pop
pop
sbb
adc
mov
push
mov
adc
nop
call
fisubs
push
cmc
test
rolb
jp
cmp
arpl
loope
or
movsl
xor
jbe
pop
sbb
and
popf
mov
mov
mov
test
loope
movb
popa
cwtl
pop
out
fwait
sub
xor
xchg
repz
and
inc
and
arpl
xchg
jg
test
xchg
push
mulb
cmc
xchg
sub
adc
inc
sub
xchg
adc
xchg
aam
mov
mov
and
xchg
bound
xchg
fmul
xchg
jnp
xchg
pop
xchg
pop
and
xchg
mov
mov
out
sbb
adc
push
test
mov
outsb
mov
xchg
and
xchg
pop
and
mov
fnstcw
fildl
addb
pop
test
popw
fwait
and
mov
adc
and
xchg
add
inc
call
hlt
and
pop
aaa
xchg
xchg
rorl
dec
lret
mov
and
mov
mov
xchg
test
mov
adc
xchg
aam
mov
cli
fisubs
sbb
and
leave
mov
jnp
xchg
adc
mov
mov
out
sbb
or
dec
test
mov
push
sbb
cmp
adc
sbb
movsb
adc
shlb
jbe
in
jmp
jl
add
pushl
loope
pop
push
pop
lret
ljmp
dec
cwtl
pop
out
fwait
fs
xchg
frstor
out
inc
stc
or
call
pop
inc
fwait
mov
jg
test
mov
cmp
and
mov
adc
xchg
sti
sbb
and
lock
lea
cmp
sbb
cwtl
mov
fisubs
or
jl
xchg
lea
loop
sbb
cwtl
test
or
sahf
adc
ret
pop
adc
xor
or
cwtl
loop
mov
adc
push
fucomp
aam
xlat
inc
sti
cmp
je
or
cwtl
xor
enter
cmp
incl
push
jns
cltd
lods
in
or
adc
es
fs
or
dec
loop
call
call
xor
inc
cmp
fwait
cmp
sti
adc
ret
cmp
ret
sbb
stc
and
fcoms
out
stos
adc
nop
mov
sbb
daa
das
mov
inc
nop
mov
imul
xchg
nop
jp
scas
nop
mov
fdivrl
fpatan
or
xor
mov
xchg
jo
fnstenv
adc
cmp
xchg
xchg
dec
xchg
aam
jp
mov
mov
rclb
je
cwtl
aam
mov
mov
mov
movsl
cmp
movl
stos
xchg
push
and
sahf
sahf
sub
mov
popf
sbb
or
pop
or
mov
fadds
roll
in
cmpsb
mov
pop
in
jp
xchg
iret
mov
mov
sahf
push
adc
sbb
mov
popf
xor
mov
mov
notb
aaa
or
test
push
sahf
and
js
popf
test
mov
cmp
shr
and
popf
jo
popf
xchg
dec
xor
repz
xor
inc
loopne
sbb
les
xchg
sub
cmp
stos
pop
std
test
push
adc
icebp
mov
fldl
dec
adc
sub
mov
xchg
xlat
dec
mov
test
inc
add
std
es
pop
aam
clc
pop
mov
and
cli
aam
push
dec
xchg
lea
xchg
out
sub
outsb
jb
pushf
push
or
sbb
test
data16
out
inc
in
repnz
lret
and
push
xchg
sub
mov
jnp
or
clc
mov
adc
mov
mov
sub
inc
mov
int3
sbb
repnz
xchg
lods
or
loope
xchg
or
adc
inc
cmp
outsl
adc
mov
adc
xchg
mov
mov
test
mov
lret
push
in
and
xchg
jo
shlb
or
mov
jo
mov
lock
cwtl
mov
add
mov
pop
call
xor
out
and
inc
movsb
push
push
out
fwait
fs
dec
into
mov
cmpsb
inc
mov
es
cwtl
fcompl
dec
cltd
ss
test
cltd
xchg
fsubs
cmp
mov
enter
cltd
push
into
movsb
test
cltd
adc
push
add
inc
icebp
cmpsb
adc
movsb
mov
lcall
inc
lcall
jecxz
test
push
js
xchg
scas
movsb
pop
and
mov
and
scas
sbb
fmull
aam
out
dec
fwait
jl
sbb
mov
test
push
sbb
adc
lods
push
inc
test
shrb
repnz
xchg
sbb
sbb
lret
js
ja
cmc
fwait
aas
or
test
and
and
mov
call
sbb
adc
test
cmc
inc
pushf
test
mov
loop
popf
jne
sbb
push
xchg
mov
popf
gs
xchg
hlt
sub
cwtl
hlt
mov
mov
jne
push
inc
cwtl
imul
nop
ret
jmp
test
sub
mov
cltd
test
in
popf
xchg
mov
jmp
sbb
xor
push
icebp
or
int
sub
push
ss
add
mov
push
addl
ds
test
sahf
test
lcall
addr16
mov
jb
les
sbb
xchg
cmp
xorb
decl
xchg
or
out
add
cmp
sub
xlat
cmp
cmp
add
add
shll
dec
call
sub
nop
mov
test
cmp
add
int3
xchg
xchg
cmp
incl
ret
jne
dec
adc
andb
push
ljmp
lods
sbb
repz
or
inc
mov
xlat
mov
rorl
mov
cld
jns
mov
add
mov
ds
mov
stos
xor
mov
inc
decl
xor
inc
mov
loope
mov
pushf
push
lods
adc
mov
jno
insb
and
mov
mov
sub
inc
stos
loope
stos
or
movsl
xor
repnz
jo
and
or
mov
lods
loop
mov
ror
loop
scas
adc
adc
lea
inc
insl
inc
scas
test
mov
sbb
adc
adc
scas
test
inc
scas
adc
mov
lahf
imul
scas
lret
push
dec
adc
inc
mov
scas
sbb
inc
mov
xchg
xchg
inc
ljmp
cmpsb
mov
xor
push
les
sub
mov
add
push
jecxz
dec
sbb
cs
inc
sub
popf
jae
iret
aam
sub
xor
cmpsb
add
mov
mov
into
or
and
xor
call
mov
jne
pop
fadds
jge
arpl
push
outsb
mov
popa
cltd
adc
mov
add
fisttpll
jmp
dec
aam
add
xor
rcrb
push
movsl
push
mov
push
into
xor
jno
dec
and
sub
or
lcall
js
lahf
fld
imul
cwtl
adc
inc
dec
add
dec
inc
and
dec
jnp
jae
jmp
shrl
fadds
push
fldenv
push
inc
idivl
in
push
test
pop
dec
sbb
inc
and
inc
push
push
and
pop
xlat
mov
aas
mov
and
pushf
dec
inc
inc
push
pushf
adcb
mov
push
dec
sub
push
dec
xor
test
push
cmp
xor
dec
push
push
add
ss
inc
movsl
insl
test
jae
loop
cmp
das
mov
add
xchg
pop
mov
inc
fstl
jnp
mov
cmp
mov
les
jmp
adc
sub
insb
push
and
pusha
or
inc
dec
movsb
mov
cwtl
sbb
sub
sbb
call
insb
mov
in
mov
or
sbb
and
cltd
inc
rclb
and
adc
mov
lods
and
and
adc
and
in
mov
insb
push
ret
aad
adc
pushf
flds
pop
sbb
loope
out
add
mov
movsl
nop
movaps
dec
or
adc
out
or
clc
out
or
lea
and
or
sbb
add
and
inc
pop
test
es
cli
sub
lock
add
sub
inc
cmp
or
xchg
jo
inc
inc
test
mov
and
fdivs
mov
or
cmp
mov
or
dec
mov
test
push
inc
mov
sub
or
adc
pop
sbb
push
bound
cmp
das
jle
outsb
es
adc
push
ja
sbb
lea
add
sub
xor
mov
push
inc
or
sbb
arpl
or
sub
int3
enter
ror
into
add
fcomp
fxch
fimuls
loopne
jecxz
in
pusha
sti
data16
mov
imul
sbb
je
xor
inc
mov
dec
push
int3
test
dec
lock
adc
pop
add
push
mov
mov
pop
and
pop
xor
push
inc
cmp
imul
cmpsl
jp
sbb
sbb
dec
push
pop
es
or
dec
rclb
call
adc
cmp
enter
adc
sbb
mov
adc
cs
and
push
pop
mov
push
xchg
andb
inc
nop
cwtl
mov
dec
mov
inc
rcr
mov
adc
mov
add
inc
add
enter
push
inc
or
inc
push
and
jno
pop
sbb
and
adc
les
loopne
test
inc
pop
clc
xchg
mov
cmp
or
les
and
rcrl
and
mov
cwtl
or
dec
mov
inc
rcr
mov
adc
leave
jmp
shl
or
rclb
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
or
dec
rclb
call
pop
and
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
or
gs
sbb
mov
inc
fsub
mov
lret
mov
xor
inc
push
in
dec
add
pop
test
dec
jne
insb
and
cmp
test
add
push
into
push
jle
or
pop
punpcklbw
or
or
or
push
mov
adc
adc
adc
sbb
sbb
add
xchg
movsl
adc
adc
aad
jmp
mov
aad
stos
cmpsb
add
xchg
xor
ja
popa
push
out
add
les
hlt
add
xor
inc
add
xor
pop
fdivrl
xorb
xchg
add
dec
mov
mov
pop
sub
mov
mov
repnz
mov
test
add
sbb
in
insl
push
mov
hlt
add
test
adcl
adc
shrb
std
add
leave
mov
add
fldcw
and
add
enter
pop
adc
imul
push
addr16
add
aam
dec
add
test
movsl
cmp
test
xor
leave
add
lods
jecxz
fdivs
add
filds
or
cmp
fldenv
jo
sbb
push
addb
mov
and
les
mov
mov
sub
mov
or
and
jo
mov
das
adc
stos
sbb
sub
fdivl
push
jno
add
adc
out
mov
add
lahf
xor
add
js
stc
loopne
cmp
test
xchg
sbb
add
insl
shl
fs
add
pop
arpl
hlt
push
imul
rcl
fmuls
xor
dec
push
xor
xchg
push
call
sbb
hlt
or
cmc
fnstenv
add
jmp
mov
add
fistps
fidivrl
adc
gs
aam
pop
or
dec
into
add
mov
aam
movsl
fisttps
xor
movsb
add
hlt
shrl
sbb
flds
outsb
xor
mov
sarb
sub
add
xor
or
fnstsw
add
daa
jno
add
mov
and
mov
outsl
mov
add
stc
ficomps
cwtl
leave
fldcw
and
mov
test
xlat
pop
cmp
hlt
add
pop
mov
rolb
cmpl
cmp
cmp
adc
je
inc
aad
cmp
ja
popf
adc
push
add
jae
or
test
add
push
or
dec
add
in
decl
xchg
daa
scas
loopne
pop
mov
pop
jge
mov
add
xchg
add
inc
add
imul
add
jno
insb
sbb
cld
imul
sbb
loopne
rorl
adc
dec
frstor
outsl
fistpll
mov
mov
jbe
add
fdivrs
push
shll
push
repnz
icebp
addr16
cmpsb
fldl
mov
add
mov
fisubrl
or
or
pusha
jp
add
ret
out
fists
addr16
mov
add
imul
sbb
outsl
and
push
xchg
ja
int3
add
inc
or
add
es
lds
add
sub
add
ret
add
mov
sahf
fldcw
mov
fs
es
add
insl
add
test
ss
jmp
addr16
pop
jb
push
add
add
mov
jnp
cmp
mov
fwait
mov
xchg
add
out
fdivrl
or
lock
add
mov
push
add
push
mov
testb
ja
outsl
pusha
inc
mov
out
cwtl
jle
jo
ud0
cmp
subpd
add
and
push
clc
rorl
popa
add
push
js
add
mov
push
addl
dec
ret
cmp
add
notl
pusha
rorb
add
ds
push
shrl
or
filds
cmp
aaa
push
clc
mov
mov
inc
add
xor
sbb
mov
mov
push
cmpsb
mov
ss
pusha
push
xlat
int
push
add
push
mov
jp
data16
dec
popa
les
sbb
push
sub
mov
mov
clc
filds
add
mov
xor
jle
jbe
mov
mov
pop
movsb
sti
or
fisttpl
sub
mov
fiadds
adc
filds
pusha
and
inc
or
or
xchg
mov
cmp
and
and
aam
or
call
fcompl
push
test
cwtl
stos
test
imul
call
cld
outsl
in
icebp
nop
or
test
jle
sbb
or
adc
dec
pusha
xchg
insb
jo
int
lret
test
daa
and
enter
sub
dec
js
popf
cltd
and
mov
in
xchg
mov
push
mov
mov
sbb
mov
in
jl
rcrb
sub
loop
in
test
icebp
sub
inc
js
cmp
shr
cmp
mov
fs
ss
stc
xchg
gs
sub
adc
adc
mov
xchg
or
or
inc
sbb
xchg
sahf
popa
shlb
xorb
cmp
xchg
adc
mov
and
xchg
and
push
out
xchg
jp
inc
fsubrs
cwtl
stc
call
lret
dec
fisubrs
imul
cmp
clc
mov
pop
xor
nop
xor
mov
sbb
leave
pop
int3
cwtl
gs
pop
mov
and
mov
or
sbb
int3
cltd
mov
xchg
jle
cltd
orb
or
dec
stc
sbb
add
inc
test
enter
cld
cmp
std
xor
test
fcomps
shlb
and
lock
cwtl
xor
movsb
sub
je
add
fs
cmpl
movsl
cmp
mov
push
les
loop
pop
add
pop
roll
adc
hlt
sub
adc
push
sub
mov
lods
repnz
and
jl
inc
sbb
adc
in
dec
ds
push
inc
mov
icebp
insb
and
pop
adc
push
add
jb
mov
or
in
hlt
or
inc
cmp
pop
adc
jle
mov
rcl
out
cld
and
push
add
dec
cs
inc
and
mov
push
add
mov
fcoml
adc
add
xor
or
sub
sbb
dec
or
mov
sahf
inc
stos
mov
sbb
shl
mov
adc
sbb
add
inc
adc
or
je
adcb
mov
and
and
inc
sbb
inc
adc
bound
xchg
mov
sahf
inc
scas
mov
movsl
ret
xor
cld
adc
sbb
xor
test
push
pop
or
js
mov
sahf
dec
lods
xchg
mov
lock
sbb
cs
cmp
outsb
orb
dec
enter
loop
add
adc
sbb
orl
push
inc
sahf
mov
xchg
enter
or
lock
sbb
dec
ss
inc
and
data16
mov
pushf
and
dec
mov
inc
repnz
push
sbb
push
dec
fs
jp
nop
inc
mov
or
ficoml
ljmp
push
or
cmp
insb
jl
mov
pushf
and
dec
mov
inc
testb
sbb
xor
ds
dec
pop
xchg
push
addb
mov
dec
repnz
and
adc
and
mov
lea
out
lret
stc
cmp
jb
mov
push
pop
fistps
jbe
pop
movsl
cmc
adc
xchg
sbb
dec
sbb
jmp
loopne
push
mov
or
cmp
dec
push
mov
lret
sbb
jle
repnz
adc
idivb
or
mov
outsl
fmull
int
das
ljmp
dec
push
push
dec
test
cmp
out
push
dec
sub
lcall
std
inc
repnz
push
jo
cmpsb
or
arpl
or
sbb
jb
jns
sub
mov
test
cmp
test
jle
dec
jl
jnp
jae
xor
dec
fstpl
dec
dec
mov
jp
into
xor
lods
dec
cmpsb
enter
jmp
mov
xchg
aam
data16
or
pop
test
dec
inc
ds
jae
inc
jge
cmpsb
lea
jo
push
fbstp
data16
mov
xchg
and
movsl
repnz
jne
cmp
scas
mov
jns
cmpl
std
daa
inc
insb
pop
repnz
push
addr16
sub
jp
ljmp
mov
mov
sbb
dec
jbe
jo
sub
icebp
xor
jmp
push
popf
jl
sub
outsb
movsb
rorb
and
mov
push
je
adcb
inc
daa
movsb
jns
adc
pop
xor
pop
nop
push
lods
push
nop
sti
cwtl
scas
push
je
dec
push
inc
lea
mov
dec
into
fidivl
ljmp
lock
imul
add
dec
into
xchg
imul
ret
lcall
sahf
push
scas
hlt
lods
imul
xor
cmp
inc
fldt
lret
push
mov
jne
jmp
push
inc
insl
les
mov
xchg
cmp
rcll
mov
stos
adc
ret
pop
dec
cli
ret
fistl
pop
out
enter
mov
pop
lea
in
out
aam
sub
movsb
or
inc
sbb
sub
jle
outsb
dec
sub
insb
adc
test
adc
lea
lret
in
inc
ds
and
lds
shll
pop
sub
dec
cmp
sub
xlat
lcall
mov
mov
fwait
inc
push
es
cmpsb
cmp
xchg
or
popa
sub
mov
adc
mov
mov
arpl
push
aam
lret
or
jns
insl
xchg
mov
push
xchg
test
ret
pushf
insl
loope
mov
push
sbb
outsl
jns
mov
push
data16
pop
shlb
dec
pop
fsubp
and
stc
ds
sbb
push
sub
rcrb
jae
dec
in
mov
stos
adc
movsb
daa
in
jae
sub
test
push
insl
dec
inc
mov
dec
negb
xlat
and
pop
lret
and
and
fcmovbe
push
mov
inc
andb
and
es
dec
push
js
xor
in
enter
fucompp
adc
push
and
mov
shlb
out
cltd
lock
adc
in
loopne
insl
sbb
push
dec
mov
push
xor
es
dec
insl
push
jb
jbe
jne
push
push
cmc
insl
sub
jmp
fs
insb
push
mov
jmp
dec
cmc
lretw
push
push
adc
inc
gs
imul
push
shl
mov
aam
dec
jp
pop
das
fimull
fidivl
clc
int
cmp
test
push
lods
cmp
xor
cmp
sub
mov
push
xor
movsl
xchg
and
mov
pop
lret
popf
adc
push
pushf
sahf
negb
push
les
daa
push
pop
dec
scas
xor
xlat
dec
mov
adc
mov
push
xchg
adcl
adc
xchg
sub
push
jno
cmp
fs
push
xchg
jae
mov
cltd
jno
push
sbb
ret
enter
sahf
inc
xchg
ficomps
sbb
pop
addr16
add
loope
xor
das
xchg
int3
jae
sub
and
cmp
adc
divl
dec
leave
push
inc
pop
iret
and
out
mov
in
inc
xor
xchg
and
inc
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
pusha
xchg
fs
push
xchg
adcb
xchg
mov
xchg
mov
xchg
rclb
ljmp
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
addr16
jo
ja
mov
test
dec
fiadds
xor
or
jb
sbb
cmp
outsl
pushf
jp
test
pushf
stos
pushf
rcrl
les
clc
fadds
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
pushf
cmp
pushf
xchg
pushf
rolb
push
cmp
sbb
cmp
pushf
fistps
cmp
and
sub
cmp
inc
daa
arpl
mov
ds
insb
leave
jb
fmulp
in
hlt
leave
std
enter
dec
jb
jb
jb
jb
jb
jb
loope
ret
push
add
xor
inc
xchg
push
xchg
pop
xchg
arpl
jae
js
jle
xchg
adc
xchg
lock
notb
sub
xor
dec
xchg
adc
mov
fimull
or
inc
dec
pop
dec
fs
insb
dec
rorl
dec
in
jmp
sti
inc
add
push
xchg
pop
xchg
ret
and
xchg
jl
test
xchg
xchg
mov
in
in
in
in
in
cmp
dec
cmp
nop
cmp
cmp
cmp
push
mov
dec
fiadds
aaa
add
jb
jb
sbb
cmp
pushf
xor
push
xchg
push
into
cmp
in
in
in
in
in
or
repnz
aas
push
leave
and
fbld
dec
daa
jle
lcall
daa
xlat
sub
sysret
ret
xor
cmp
lods
daa
mov
and
xor
jae
mov
ljmp
pushf
pusha
xchg
imul
or
push
enter
push
jo
jbe
jnp
orl
dec
movsb
dec
test
dec
dec
icebp
dec
cli
subl
xchg
jo
pushf
xchg
cmpsl
xchg
les
std
nop
pop
pmulhuw
in
in
in
in
in
in
in
in
in
cmp
das
cmp
bound
popf
cmp
cmp
sub
lahf
pushf
adc
sbb
xor
mov
in
in
in
cmp
aas
push
lds
inc
push
cmp
push
daa
bound
imul
stos
leave
mov
mov
jmp
push
cmp
dec
adc
dec
sbb
and
dec
sub
dec
pop
dec
gs
outsl
dec
xchg
dec
stos
dec
mov
sub
dec
fimuls
dec
out
dec
testb
dec
xchg
arpl
mov
mov
leave
ror
in
leave
cld
enter
sbb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
or
pushf
sub
pushf
dec
pushf
push
pushf
pop
pushf
bound
dec
orb
fdivrl
lcall
cmp
cmp
cmp
cmp
and
mov
aas
or
adc
sbb
and
sub
xor
cmp
xchg
lods
push
xchg
pop
xchg
bound
jp
adcb
mov
lret
adcb
add
das
xor
leave
dec
leave
pop
les
jo
mov
jb
jb
jb
jb
dec
mov
cmp
cmp
cmp
cmp
cmp
add
cs
xor
mov
xor
test
xchg
sbb
sub
out
daa
cmp
inc
daa
dec
daa
push
daa
pop
daa
pusha
daa
push
daa
andb
daa
nop
daa
cwtl
daa
mov
and
enter
fmuls
inc
call
mov
pushf
adc
sub
pushf
cmp
pushf
pop
pushf
pusha
xchg
push
orb
nop
dec
cwtl
dec
mov
dec
mov
dec
rorb
dec
loopne
out
mov
leave
and
sub
inc
xor
leave
dec
leave
push
leave
push
xor
pop
lcall
cmp
cmp
sarb
cmp
cmp
cmp
cmp
push
add
or
adc
dec
sbb
dec
and
dec
sub
dec
inc
dec
pusha
dec
push
je
js
jl
andb
daa
mov
cwtl
daa
mov
daa
enter
shlb
aam
fsubs
fsubl
loopne
lock
xor
and
and
sub
sub
xor
xor
cmp
push
sahf
pushf
js
jl
sbbb
fs
cmpsl
pushf
test
enter
aam
fcoms
nop
call
lock
and
sub
je
mov
cmp
pushf
dec
pushf
pop
pushf
js
sbbb
nop
pushf
xchg
pushf
cwtl
pushf
pushf
pushf
mov
pushf
fcompl
cmpsb
ret
cmp
fxtract
leave
clc
leave
cld
enter
sub
xor
leave
cmp
inc
leave
inc
leave
dec
leave
dec
leave
push
leave
push
leave
fs
test
mov
nop
leave
xchg
leave
cwtl
leave
pushf
leave
mov
leave
lods
leave
mov
enter
ret
cmp
pushf
hlt
pushf
clc
pushf
cld
mov
adc
xor
cmp
inc
pushf
inc
pushf
dec
pushf
dec
pushf
push
pushf
push
pushf
pop
pushf
pop
pushf
insb
pushf
mov
pushf
mov
pushf
lods
pushf
mov
mov
enter
pop
or
addr16
daa
cld
cs
cmp
or
in
in
mov
pop
dec
pop
or
cmpsl
xor
daa
mov
daa
mov
mov
push
mov
adc
jo
cmp
cmp
adc
adc
sbb
sbb
and
and
sub
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
les
pushf
rcrb
cwtl
in
jl
adc
sbbb
sub
test
pushf
push
pushf
js
jl
sbbb
nop
pushf
test
enter
aam
fcomps
test
sbb
add
and
sub
xor
add
inc
leave
movsb
dec
leave
pusha
leave
or
leave
mov
nop
leave
xchg
leave
cwtl
leave
pushf
leave
mov
gs
call
icebp
in
pop
cmp
adc
movsl
mov
push
nop
shll
in
in
in
in
in
in
in
in
in
push
inc
xor
stc
dec
std
inc
add
lcall
pop
pushf
popa
pushf
imul
daa
sub
sub
xor
insl
cmp
lret
cmp
daa
jne
jmp
test
jo
enter
push
xor
aam
cmp
cmp
cmp
add
cmp
mov
stos
cmp
sub
cmp
dec
dec
mov
mov
lock
leave
leave
leave
out
sub
push
pop
xor
fs
mov
mov
leave
mov
int3
leave
aad
push
jb
mov
mov
in
in
cmp
adc
cmp
cmp
mov
aad
pushf
setl
pushf
jbe
jge
push
dec
call
xor
xchg
mov
cmp
mov
jb
jb
jb
jb
jb
jb
jb
sbb
ds
pushf
or
adc
pushf
sub
and
arpl
xchg
xchg
xchg
dec
mov
jb
jb
jb
jb
sbb
aas
adc
xchg
pop
ret
push
test
ret
xchg
stc
push
mov
adcb
add
mov
mov
cmp
xchg
mov
add
cmpsl
dec
in
sub
xor
leave
and
leave
inc
leave
push
leave
pop
leave
xchg
leave
mov
into
jne
jo
inc
xchg
data16
pushf
xchg
xchg
popf
dec
push
lret
dec
fimuls
inc
add
inc
dec
and
xchg
push
xchg
ffreep
pusha
adc
xchg
inc
xchg
arpl
mov
roll
ret
daa
shll
aaa
and
cmp
jl
xor
pop
in
in
mov
jb
jb
jb
jb
jb
jb
pop
adcb
mov
mov
mov
les
enter
sarb
aam
fsubrs
pop
sbb
or
adc
sbb
sbb
xor
mov
pusha
sub
mov
jo
js
jl
test
xor
mov
in
in
in
in
in
mov
and
lret
mov
mov
pushf
adc
sbb
dec
xor
dec
cmp
into
dec
xor
je
js
into
jb
jb
jb
jb
pop
pushf
or
sbb
aam
shlb
jb
pop
fcomp
cmp
cmp
cmp
or
cmp
sub
in
cmp
daa
addr16
insl
and
sarb
xchg
cmp
pushf
jb
pop
mov
cmp
cmp
cmp
cmp
cmp
cmp
daa
add
dec
sbb
xchg
inc
xchg
dec
xchg
pop
xchg
jae
jg
xchg
movsb
xchg
test
nop
or
adc
sbb
sbb
and
fcompl
cmp
push
in
xchg
stos
jb
mov
jb
jb
dec
mov
rol
dec
lret
dec
fimull
dec
ljmp
or
and
cmp
push
xchg
pop
js
jb
jb
jb
jb
jb
nop
fidivs
jb
dec
stos
in
mov
rcrb
pushf
repnz
cli
xchg
aaa
or
adc
sbb
and
sub
xor
cmp
inc
daa
dec
daa
push
and
icebp
pop
pusha
inc
jb
jp
and
in
in
in
in
in
in
in
in
in
in
in
in
in
cmp
adc
mov
pop
sarb
daa
jno
add
rcll
dec
es
leave
push
je
mov
pop
sub
xor
mov
out
jb
jb
jno
jb
mov
and
xchg
test
lods
xchg
mov
es
in
in
in
in
test
leave
les
in
xchg
and
clc
pushf
xchg
add
sub
scas
cwtl
xchg
dec
push
nop
dec
mov
jge
xchg
popl
push
jbe
cmp
push
pop
cmp
dec
sub
pop
cld
push
and
fdivrl
mov
nop
xchg
cli
jae
shlb
xor
xorl
in
in
in
inc
mov
in
or
mov
mov
sbb
cmp
xchg
cmp
pop
and
rolb
lods
sysret
pop
xor
xor
push
xchg
sub
xchg
inc
subb
dec
sahf
xor
mov
in
in
in
xchg
push
adc
ret
add
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
popa
xchg
dec
sbb
leave
cltd
leave
movsl
leave
stos
leave
scas
leave
mov
cmpsb
adc
roll
or
mov
ret
dec
loopne
repnz
or
leave
test
movsb
and
sub
cs
mov
jnp
xchg
add
pop
aas
daa
xchg
push
xchg
outsl
dec
jg
mov
popa
movsb
in
icebp
lret
loopne
shrl
cmp
das
sti
xchg
lret
jbe
pop
xchg
fs
insb
jnp
xchg
dec
test
push
xor
dec
jbe
cmp
cmp
daa
and
je
loopne
pushf
in
in
fdivrs
dec
ret
or
loop
sahf
ss
dec
std
dec
add
inc
dec
test
iret
enter
adc
jb
jb
dec
in
pop
les
cmp
je
jle
xchg
xchg
dec
outsb
stos
dec
mov
movsb
daa
jmp
xchg
push
mov
loopne
aas
jb
adc
mov
andl
fsubl
loopne
enter
ss
pop
or
leave
mov
stos
cmp
cmp
cmp
jo
nop
sbb
pushf
inc
xchg
push
xorl
xchg
jp
push
scas
leave
dec
daa
xor
inc
in
mov
int3
add
hlt
out
cmp
imul
in
in
mov
cli
pop
or
pop
cmp
mov
stos
xor
cmp
cwtl
sbb
pushf
xrelease
cmp
daa
lea
cmp
dec
enter
mov
xchg
loopne
dec
lret
or
xor
dec
cmp
lret
in
xchg
shlb
daa
cmp
pushf
sti
xchg
sub
cmp
aas
fidivrs
loop
out
ljmp
cmp
sub
dec
inc
adc
add
xor
in
in
in
in
in
in
in
in
in
pushf
adc
xor
pushf
inc
pushf
inc
pushf
dec
pushf
dec
pushf
push
xchg
push
ret
dec
ret
push
outsb
leave
jb
jbe
or
pop
jp
xchg
jl
push
jle
xchg
mov
andb
xchg
pop
mov
ret
push
mov
mov
ficoms
xchg
and
sub
cwtl
movsb
or
lods
pushf
and
sub
mov
es
push
cmpsb
adc
mov
ds
test
dec
popa
scas
push
sub
mov
data16
pushf
jp
jle
adcb
xchg
in
in
xchg
test
mov
popa
into
mov
or
mov
or
rol
fadd
pop
ficoms
ljmp
or
popa
rolb
leave
or
push
leave
adc
push
leave
sbb
push
leave
and
es
sub
cs
daa
add
pop
idivb
daa
inc
daa
inc
and
lods
push
cmp
push
and
cmp
cmp
outsb
es
pushf
jp
jle
sbbb
xchg
pushf
xchg
pushf
lcall
xchg
stos
dec
mov
mov
movsb
enter
shl
in
in
in
in
xchg
pop
lcall
cli
and
test
cmp
cmp
cmp
cmp
das
push
pop
fs
daa
and
es
sub
out
and
scas
loopne
inc
in
in
in
in
in
in
in
in
in
in
in
mov
jle
adcb
xchg
in
in
in
in
in
in
sahf
sahf
sbb
pushf
mov
mov
xchg
dec
cmp
dec
shl
scas
fcmove
xor
push
cmp
push
adc
dec
xchg
push
xchg
push
xchg
out
push
lret
cmpl
sbb
cmp
dec
and
insb
jb
dec
jbe
sub
and
mov
and
fisttps
cmp
cmp
dec
xchg
fs
fdivs
jb
pop
ret
cmp
out
hlt
inc
and
mov
xor
lcall
imul
xchg
leave
stos
leave
mov
in
pushf
and
dec
test
in
jb
sbb
xor
cmp
insb
dec
jl
cmpsl
daa
shlb
and
mov
sbb
or
addr16
mov
je
leave
lods
leave
mov
aam
xchg
jnp
decb
push
mov
and
insb
jg
add
rorb
fistl
jb
sbb
aaa
or
sbb
jne
adcl
lahf
or
mull
adc
and
mov
mov
das
push
sahf
jbe
movsl
dec
fcompl
add
int3
in
in
cmp
das
cmp
and
leave
mov
mov
outsb
jmp
cmc
dec
std
inc
adc
push
xchg
rcll
stc
inc
sbb
pop
cmp
jbe
dec
pusha
pop
sub
jg
mov
shlb
aas
aaa
in
in
xchg
mov
add
mov
add
add
cmp
mov
cmp
adc
cltd
dec
mov
xor
xchg
sub
inc
scas
leave
ret
sub
jle
dec
repz
add
pop
xchg
adc
daa
leave
inc
leave
pop
and
outsb
in
xchg
fdivs
jb
jb
dec
or
jmp
inc
push
cwtl
leave
dec
in
sysexit
adc
xor
xchg
sbb
cmc
leave
dec
leave
pusha
leave
imul
push
mov
dec
scas
dec
mov
add
mov
cmp
aaa
cs
push
and
out
repz
adc
sbb
xchg
popa
leave
mov
sub
xchg
mov
dec
hlt
push
pop
dec
cmovns
rolb
cmp
pop
cmp
jecxz
call
mov
cmp
in
in
mov
adcw
jb
inc
movsl
mov
lcall
pushf
cmpsl
cmpsl
mov
test
xchg
xchg
jb
push
das
pop
xchg
pop
and
inc
add
or
cmp
dec
popa
repnz
jne
jo
mov
cs
cmc
xchg
pop
and
aam
xchg
pop
inc
sub
jo
cwtl
and
and
jmp
pop
xor
daa
adc
mull
inc
daa
inc
daa
push
and
mov
mov
pushf
mov
mov
ljmp
sbb
pushf
sub
pushf
dec
pushf
push
pushf
popa
pushf
imul
aam
mov
mov
ss
loopne
pop
sahf
out
cmp
test
sbb
xchg
or
xchg
cmp
xor
mov
adc
and
shlb
call
test
or
lock
enter
loop
in
in
daa
cmp
daa
dec
daa
push
daa
jo
andl
dec
lcall
daa
jl
pop
ror
js
es
lret
mov
push
jo
inc
nop
pop
xor
push
rcll
xchg
mov
pusha
pop
cmc
cmp
pop
loopne
push
xchg
add
mov
xchg
or
cmp
mov
mov
xor
loopne
insl
in
xchg
add
fnstcw
pop
xor
and
pop
daa
ret
and
shr
aam
out
add
xchg
jb
jb
jb
jb
sbb
aas
setl
cs
addr16
xchg
sahf
xchg
pusha
nop
cmp
shrb
test
dec
mov
jb
jnp
xchg
mov
jo
jb
jb
dec
arpl
stos
adcb
mov
in
icebp
sbb
xor
pushf
aaa
xchg
inc
dec
cld
insl
dec
jae
jnp
clc
mov
or
cs
ficoms
daa
ret
daa
daa
sub
fdivs
fadds
xor
push
or
dec
icebp
mov
in
sbb
pushf
xchg
pushf
mov
pushf
jecxz
sbb
and
test
cmp
cld
mov
aad
test
js
cmp
aam
push
xchg
dec
or
and
mov
rolb
cmp
dec
cmpsl
ret
jmp
je
ret
mov
push
xchg
fs
and
in
xchg
add
jge
fwait
in
popf
xchg
and
ds
cmpsl
push
pushf
daa
aad
sbb
mov
jmp
fucomp
and
push
aam
dec
fsubrl
mov
out
pop
xchg
dec
or
pop
insb
popa
dec
test
hlt
cmp
je
popa
add
subb
push
mov
add
ret
je
sbb
xchg
in
add
xor
in
es
xchg
mov
out
cwtl
sahf
mov
stos
jb
sbb
cmp
ret
rolb
mov
cli
lock
xorl
inc
movsl
out
xchg
sahf
jnp
push
jmp
icebp
dec
adc
push
stos
out
in
cmp
cmp
add
cli
mov
test
in
cmp
push
ds
pop
dec
pop
out
subb
xchg
adc
inc
jo
leave
lods
leave
mov
sub
cmp
and
daa
mov
shrb
adc
cmp
xorl
push
push
rorb
movsb
fcompl
xchg
cmp
mov
mov
inc
nop
rcrb
js
pop
dec
scas
add
ret
or
add
dec
pop
ret
shlb
mov
mov
mov
xor
push
lret
imul
dec
loope
add
test
scas
lock
cwtl
aaa
xchg
add
xchg
push
mov
lock
jle
leave
mov
dec
sbb
nop
and
jb
dec
mov
pop
test
push
hlt
cs
test
mov
out
fcompl
cs
jp
or
js
cmp
das
faddl
sbb
daa
call
cmp
xchg
in
in
mov
xchg
inc
loopne
cmpsb
xchg
pop
jp
daa
repz
aas
inc
leave
leave
xchg
leave
xchg
and
popf
in
in
in
test
cmp
push
push
cmp
rcrl
dec
xor
pushf
jmp
hlt
xchg
inc
daa
dec
daa
dec
daa
push
daa
push
and
mov
xchg
out
ret
js
pop
jne
dec
cmp
dec
xor
xchg
mov
out
in
mov
loop
pop
mov
ret
jl
add
and
fcoms
jb
pop
jne
cmp
inc
movb
lret
mull
cmpsl
and
mov
aad
ficomps
das
xor
daa
inc
and
lods
in
int3
and
cmp
js
jb
dec
xchg
cmp
aas
add
leave
mov
lods
cmp
xor
dec
rcpps
push
pop
dec
sbb
fsubs
movsb
push
faddp
dec
and
aaa
cmp
leave
pop
leave
jns
vpsubusw
test
push
leave
pop
leave
imul
leave
mov
mov
push
mov
push
mov
orl
xchg
mov
xchg
jecxz
sbb
daa
int3
and
mov
xor
pop
daa
xchg
pop
dec
mov
daa
repz
xor
leave
cmp
pop
insb
or
scas
daa
cld
loope
add
or
or
cld
dec
adc
incb
dec
mov
xor
pop
push
sbb
cld
lods
pop
cmp
pop
in
lahf
cltd
jle
enter
xlat
ss
fs
xor
xchg
adcl
or
ljmp
scas
xchg
cli
sbb
xchg
sti
loopne
xor
push
mov
jb
jb
jb
jb
adc
pop
mov
xchg
or
cmp
leave
and
push
test
pop
in
add
pop
clc
xchg
jo
jle
cmp
lcall
sub
leave
jecxz
mov
pushf
sbb
or
xor
inc
xchg
push
xchg
pop
xchg
jmp
sub
mov
dec
adc
jb
jb
jb
dec
stos
or
lock
loop
dec
push
inc
gs
jg
lret
popa
cmp
leave
adc
mov
sti
sbb
aas
and
xchg
jns
js
daa
ds
lock
std
or
push
xchg
cmp
xchg
and
dec
roll
cmpsb
pop
addl
scas
cmp
sarl
xor
xor
add
jo
je
cmp
jl
cmp
mov
mov
pushf
imul
movsb
movsb
ret
jp
mov
dec
mov
dec
adc
sbb
push
adc
mov
in
call
dec
out
dec
cld
pop
and
cmp
or
adc
adc
sbb
and
mov
cmp
aam
inc
gs
insb
loopne
je
js
add
mov
mov
cli
pushf
in
in
mov
push
lods
mov
mov
dec
rcll
jns
hlt
pop
into
push
mov
or
mov
cmp
cmp
add
cmp
xchg
sub
outsb
or
jo
pop
xchg
sbbb
push
movsb
ret
leave
xchg
mov
or
pop
les
adc
loopne
fcoml
push
popa
sub
xor
cmp
fisubs
dec
loope
pop
jnp
inc
je
sub
dec
movsb
push
and
sbb
cmp
add
jb
xchg
xchg
add
fidivl
clc
xchg
cld
xchg
add
fsubrl
add
jl
js
leave
mov
push
fcoms
pushf
leave
mov
cmp
dec
mov
mov
scas
mov
sarb
stos
fs
in
sub
adc
cmp
aam
sbb
xchg
dec
ret
into
push
xchg
pop
xchg
pop
pop
call
mov
cmp
call
mov
and
mov
insb
inc
fstpt
clc
and
leave
or
sub
sub
cmp
inc
mov
cld
push
mov
into
pusha
test
cmp
insb
loope
je
outsb
sub
mov
lods
in
in
in
in
in
xchg
pop
sbb
xchg
int3
testb
mov
test
add
filds
push
and
adc
cwtl
inc
std
mov
adc
and
dec
loopne
pop
pop
push
clc
inc
lret
add
daa
adcb
or
xchg
sub
mov
push
movsl
sub
inc
push
repnz
pop
nop
jo
addb
stc
mov
call
xchg
dec
loope
bound
shr
adc
or
shl
fadds
cmp
adc
imul
insb
pop
adc
jno
pushf
and
pop
xchg
inc
pop
push
push
inc
sub
inc
into
or
or
dec
cmp
inc
cmp
dec
cmp
dec
mov
cmp
popa
cmp
cmp
fs
pop
cltd
jne
imul
jno
popf
and
jbe
insl
adc
inc
adc
adc
enter
dec
or
push
and
lret
adc
inc
pop
imul
stos
pushf
aas
push
ds
push
sub
inc
xchg
jae
lret
outsb
sub
or
sub
bound
dec
pop
mov
inc
dec
addr16
jo
adc
mov
add
jae
pop
xor
jno
sub
xor
in
adc
pop
push
ss
lds
jp
gs
insb
mov
jae
jmp
cmp
sub
push
jbe
imul
mov
stos
push
in
adcb
push
js
jne
xor
mov
je
xor
imul
mov
popf
jo
pop
test
outsl
pop
sub
xchg
imul
outsl
jb,pt
adc
inc
xor
test
inc
mov
sub
and
xchg
arpl
es
sub
pushf
pushf
inc
sub
sbb
popa
inc
xchg
cltd
push
adc
and
arpl
and
je
int
test
inc
xor
cld
insb
mov
push
insb
sub
stos
cwtl
cmpsb
mov
dec
push
and
cltd
sub
insb
push
cmp
lods
dec
inc
ret
scas
dec
bound
lret
outsl
adc
aas
cmp
test
mov
mov
sub
mov
movsb
gs
xor
aad
dec
js
mov
aad
sahf
rcll
in
add
fisubs
call
and
test
movsb
shll
fs
push
xchg
jne
sahf
xchg
xchg
dec
sub
dec
test
dec
mov
adc
push
sarb
arpl
pop
std
movsb
inc
pop
adc
loopne
mov
imul
add
or
push
push
cmp
sub
jns
dec
in
push
sbb
aaa
fdivrs
addr16
lods
dec
hlt
shll
jne
xchg
push
push
sarb
push
pop
mov
test
or
int
lret
dec
arpl
into
sarb
sub
push
insl
dec
dec
jl
jmp
mov
sub
push
xchg
bound
push
inc
scas
movsl
sbb
hlt
push
outsl
adc
in
and
sub
jae
sbb
add
push
movsb
adc
addr16
sbb
add
mov
push
mov
dec
jbe
mov
xchg
cmp
es
movsb
and
xor
data16
jo
rorl
movsl
sbb
clc
or
mov
into
in
mov
jbe
sbb
data16
movsb
mov
cs
mov
lret
push
jo
popa
sub
push
rorb
adc
push
lret
xchg
imul
jns
pop
push
ljmp
or
imul
out
adc
inc
xchg
jb
loopne
pushf
jo
sub
loopne
inc
js
jae
hlt
push
les
jp
into
and
or
fs
cmp
mov
movsb
dec
jno
sub
mov
icebp
and
dec
hlt
cmpsb
inc
hlt
mov
jbe
fs
enter
mulb
add
cmp
add
mov
pop
fwait
das
cmp
sbb
icebp
dec
aas
lret
js
sub
push
inc
push
dec
xor
repz
in
popa
dec
fwait
das
dec
pop
add
inc
pop
push
test
xor
mov
push
daa
pop
inc
xor
cltd
imul
inc
outsl
insl
outsb
sbbb
add
pop
lods
pop
push
push
dec
pop
push
fcomi
aam
loop
ficompl
imul
mov
bound
mov
cltd
adc
pop
sbb
sbb
mov
loopne
jns
dec
inc
and
in
xor
jo
bound
iret
inc
push
add
jecxz
sbb
call
enter
mov
push
add
cs
push
push
gs
adc
sub
inc
jno
aad
loop
sub
lock
xor
xchg
xor
js
dec
jp
enter
inc
fwait
or
inc
xor
push
xor
jle
aad
mov
adc
inc
mov
adcl
insl
loope
add
cmp
sub
insl
leave
adc
leave
sbb
inc
call
inc
and
jo
lods
jge
daa
sub
xchg
and
dec
outsb
ja
push
jo
lret
jb
sbb
dec
shlb
sub
mov
ret
dec
pop
dec
stos
sub
xchg
arpl
sub
push
nop
pop
repnz
bound
cltd
sbb
daa
nop
xchg
in
jl
popf
mov
jp
jae
sub
stos
add
add
or
add
add
hlt
pop
jmp
fucomp
mull
in
or
add
mov
or
cmp
bts
test
not
not
shl
or
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
rcll
jmp
iret
les
add
add
mov
cmp
adc
inc
call
lcall
mov
inc
xor
add
cmp
sub
movzwl
call
lcall
add
sub
test
sub
neg
test
adc
mov
cmp
bsf
neg
call
lcall
add
and
or
bsf
cmp
bsf
add
shl
bsf
call
lcall
jne
xor
add
test
mov
or
cmp
call
lcall
out
mov
xor
bt
btr
btr
btr
btr
call
lcall
jecxz
into
cmp
shr
cmp
bts
adc
inc
call
lcall
mov
xor
and
xor
shr
bt
btc
call
lcall
mov
xchg
add
addl
push
fwait
mov
add
push
push
xorl
insb
push
loope
inc
inc
fadds
repz
jno
xorl
jns
push
inc
inc
gs
jo
loope
imul
arpl
add
mov
popf
add
jae
mov
ja
xchg
roll
mov
xchg
je
gs
loope
cmp
inc
loopne
das
sahf
jno
loope
fs
loope
fs
loope
cmp
popa
mov
lods
fldcw
xchg
cmpl
js
js
jle
mov
inc
push
jg
pop
add
xchg
push
push
and
loope
jno
test
popa
loope
push
inc
and
mov
ja
push
imul
add
jnp
andl
popa
push
cmp
loope
push
out
scas
mov
push
loope
outsb
rorb
imul
add
rolb
xchg
mov
addl
js
xchg
movb
rorb
loope
inc
dec
loop
dec
loope
cmp
push
imul
ss
jnp
andl
ret
mov
lods
push
push
ja
iret
or
push
idivb
inc
or
loope
data16
sarl
xchg
test
addl
push
fwait
mov
loope
inc
iret
in
mov
jne
jl
push
movb
lret
cld
mov
inc
fadd
insb
xchg
inc
push
inc
inc
gs
mov
inc
pop
mov
dec
inc
lods
js
push
jne
mov
xor
stos
int
jne
xchg
inc
sub
movl
faddl
je
movl
xor
cmp
inc
imul
loope
inc
repz
xor
inc
pusha
call
js
js
add
xchg
jo
add
xchg
jnp
xchg
loope
or
mov
dec
jns
cmp
sub
xchg
loope
loope
mov
js
out
mov
xchg
test
or
mov
xchg
inc
add
insb
test
push
inc
out
test
andl
inc
insb
xchg
jecxz
mov
xchg
push
cmpsl
insb
test
push
xchg
xchg
pop
insb
xchg
andl
scas
popa
mov
testb
inc
imul
addr16
loope
push
rol
insb
xchg
xor
mov
push
push
outsb
mov
mov
mov
push
loope
popa
pop
loope
imul
jnp
andl
test
dec
jne
mov
or
push
dec
or
pop
sbb
outsl
xchg
inc
sub
jne
xchg
inc
filds
jno
out
cwtl
mov
insl
clc
push
inc
jg
mov
dec
loope
inc
stos
sub
push
inc
pop
aam
xchg
inc
sub
jo
xchg
push
insl
mov
inc
popa
mov
inc
pop
jecxz
mov
pop
push
push
sahf
imul
test
out
mov
xchg
test
or
mov
xchg
inc
add
insb
test
push
inc
out
test
andl
inc
insb
xchg
jecxz
mov
xchg
push
cmpsl
insb
test
push
xchg
xchg
pop
insb
xchg
jg
inc
cmpsl
mov
pop
pop
jl
push
xlat
sub
push
pusha
jnp
mov
xchg
inc
sub
xchg
push
push
repz
and
pop
xchg
push
inc
jne
pushf
lcall
leave
insb
xchg
xchg
push
loopne
jp
loope
inc
or
pop
gs
loope
gs
outsl
jecxz
cmp
jno
insb
pushf
rorb
bound
or
mov
xchg
inc
outsb
test
into
bnd
inc
mov
push
imul
dec
and
inc
stc
mov
push
dec
or
clc
lock
jne
push
dec
fdivrs
push
insb
test
out
mov
xchg
test
or
mov
xchg
inc
add
insb
test
push
inc
out
test
andl
inc
insb
xchg
jecxz
mov
xchg
push
cmpsl
insb
test
push
xchg
xchg
pop
insb
xchg
xchg
outsl
dec
mov
bound
dec
loope
jo
sti
pop
xchg
test
cmp
push
push
mov
mov
mov
cmp
jno
loope
popa
mov
push
jl
jb
jmp
dec
aad
js
jno
mov
loope
mov
add
push
push
and
lea
inc
jnp
mov
mov
inc
in
outsl
rolb
jns
je
jno
push
push
sbb
jae
xchg
out
mov
xchg
test
or
mov
xchg
inc
add
insb
test
push
inc
out
test
andl
inc
insb
xchg
jecxz
mov
xchg
push
cmpsl
insb
test
push
xchg
xchg
pop
insb
xchg
xchg
sbb
jo
movsb
je
data16
push
inc
sub
test
push
dec
cmp
out
push
xchg
outsb
or
bound
mov
outsl
roll
mov
mov
add
or
mov
mov
or
mov
jl
xrelease
jl
repz
loope
jl
mov
fs
lret
mov
outsl
subl
mov
insl
addl
insb
dec
fiaddl
xchg
or
mov
scas
jnp
pop
or
rolb
rcll
repnz
int
inc
xchg
orb
add
xchg
orb
inc
xchg
orb
inc
xchg
orb
inc
xchg
orb
inc
repz
fmuls
add
daa
aas
xchg
repnz
inc
xchg
orb
insl
add
test
scas
xchg
repnz
dec
xchg
orb
insl
rorl
jns
imul
js
inc
addr16
or
xchg
repnz
dec
xchg
orb
insl
mov
hlt
popf
mov
cmc
mov
rorl
jns
inc
je
fldcw
js
js
jg
lock
test
push
jns
inc
je
fldcw
js
js
add
repz
add
test
inc
rorl
jns
inc
je
fldcw
jns
js
jg
ret
mov
fwait
out
popl
inc
addl
ret
out
or
inc
cmc
mov
cmpsl
fbld
loope
push
sub
xor
loope
push
icebp
inc
or
mov
push
dec
lret
mov
inc
push
jnp
xchg
js
push
ja
hlt
es
imul
imul
outsb
xchg
xchg
push
jle
int
jb
jns
push
gs
jno
insl
mov
push
dec
pop
dec
xchg
inc
addl
pushf
loope
jg
cmpsl
or
mov
push
jne
out
out
insb
jo
jmp
cmp
xchg
addl
shll
ud1
ret
out
mov
push
jno
fcomps
dec
lods
xchg
outsl
xchg
inc
cmpl
xchg
xchg
lcall
loope
jne
inc
mov
push
std
loope
inc
loop
mov
push
outsl
xchg
inc
cmpl
cmp
pop
loope
jge
push
add
push
jge
fcmovnu
mov
insb
push
sub
pop
outsl
xchg
inc
xorl
dec
push
out
loope
jp
push
jo
pop
je
loope
dec
push
lcall
mov
outsl
xchg
inc
add
pop
loope
inc
add
mov
cmp
mov
mov
dec
outsl
xchg
inc
or
sub
mov
dec
mov
lods
inc
push
jl
hlt
and
loope
pop
loope
cmp
xchg
subl
ret
aaa
fists
mov
aam
add
xor
roll
test
and
aam
adc
fcmovu
fcmovnu
inc
pop
pop
fistps
fists
ljmp
or
imul
sbb
sbb
sub
pop
xor
mov
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
fcmovu
fistpl
cltd
je
and
je
gs
pusha
sbb
loopne
fistl
sub
sbb
fldcw
pop
or
pop
adc
mov
adc
mov
mov
popa
and
sub
sub
outsb
imul
sbb
mov
or
sbb
call
les
dec
popa
push
gs
pop
pop
fistpll
mov
adc
adc
pop
adc
lret
aam
and
cmp
fcmovnu
inc
pop
pop
fists
lcall
fistpll
mov
sub
pop
sub
jno
popa
cmp
es
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
out
xor
cmp
pop
xor
clc
aam
or
gs
loopne
aam
sbb
pop
aaa
fists
clc
sbb
and
and
cmp
pop
sbb
sarb
pop
sbb
lret
fwait
aam
xchg
fnstsw
mov
mov
sub
xchg
dec
nop
sbb
and
mov
lcall
fistpll
sub
mov
aam
sub
sub
ss
and
xlat
push
pop
and
fcmovnu
cltd
loop
scas
and
lock
aam
sbb
xor
insl
sbb
pop
sub
mov
mov
popa
xor
pop
adc
dec
push
jecxz
pop
or
rcrl
adc
and
test
leave
das
mov
pushf
xor
fcmovnu
fildl
pop
fistps
fcmovnbe
pop
lret
fcmovnbe
popa
xor
pop
adc
into
aam
pop
pop
and
lea
xor
sbb
mov
fists
mov
pop
sbb
sbb
jnp
cmp
xor
mov
pusha
xor
fcmovu
fcmovnu
inc
pop
pop
fistps
fists
lcall
mov
cmp
push
scas
fs
adc
aam
sbb
pop
adc
aam
and
xor
and
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
lret
aam
xor
les
and
call
aam
cmp
xor
fcmovnu
fildl
pop
mov
addr16
sbb
sbb
sbb
cmp
aam
and
mov
fsubrs
push
mov
xor
rorl
pop
das
cmp
xor
inc
sub
or
mov
pop
or
out
in
hlt
aaa
add
mov
pop
cmp
lcall
fildll
sbb
pop
pop
adc
mov
mov
aam
cmp
fcmovu
fcmovnu
inc
pop
pop
fists
lcall
fistps
xor
mov
mov
addr16
jmp
sbb
sbb
cmp
aam
sbb
pop
sub
xor
mov
mov
sub
mov
mov
call
lcall
popa
ds
or
popa
and
fwait
mov
pop
cmp
pop
mov
mov
xor
fcmovnu
fildl
pop
fbstp
push
es
aam
lock
cmp
scas
mov
pop
dec
pop
jne
sub
jle
loopne
mov
mov
lret
fcmovnu
sbb
fstps
pop
pop
jle
sub
leave
mov
mov
aam
xor
cmova
fistpl
es
call
nop
or
pop
or
mov
pop
or
mov
aaa
fists
mov
mov
adc
mov
stos
or
jae
sbb
cmpsb
mov
imul
mov
pop
fbld
sbb
jecxz
popa
xor
push
pop
xor
cmpsb
fimull
sub
pop
sbb
je
pop
sub
pop
sub
sub
mov
mov
bound
pop
xor
aam
adc
test
xor
movsl
out
sbb
pop
sub
cwtl
sub
sub
cmp
popa
cmp
add
fcmovu
fcmovnu
inc
pop
pop
fists
in
fcmovnu
fstpt
sub
repnz
or
adcl
pop
cmp
push
mov
fisubrl
js
mov
mov
mov
sbb
jno
nop
aam
cmp
mov
fcmovu
fcmovnu
inc
pop
pop
fists
aam
xor
pop
xor
mov
mov
and
loopne
pop
cmp
sbb
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
fcmovnu
feni(8087
adc
sbb
arpl
popf
sarl
mov
mov
aam
sbb
mov
pop
or
sti
inc
adc
sbb
adc
sub
adc
fcmovu
fcmovnu
inc
pop
pop
fists
mov
fs
aam
cmp
sbb
pop
and
pop
and
sub
fs
popa
xor
push
xchg
fildll
xchg
rcl
lret
pop
or
sbb
movsl
pop
sub
cvtdq2ps
mov
pop
or
fcmovnu
pop
cmp
sbb
insb
mov
pop
sbb
pop
pop
and
xor
fisubrl
mov
rcrb
loope
sbb
push
aam
cmp
sub
pop
xor
cmp
xor
fcmovnu
fildl
pop
fistps
sarl
mov
mov
xchg
mov
ss
sbb
and
rcrl
lock
cmp
xchg
lret
push
mov
or
popa
xor
popa
xor
add
fcmovu
fcmovnu
inc
pop
pop
fistps
fcmovnbe
pop
ss
fdivl
fcmovu
fcmovnu
inc
pop
pop
fistps
daa
push
xlat
jmp
fcmovnu
fisttpl
xor
daa
push
xlat
lcall
fbstp
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
aam
fcmovu
fcmovnu
inc
pop
pop
fistps
fsubrs
and
fcmovnu
xor
fcmovnu
fildl
pop
lret
arpl
or
pop
out
arpl
imul
pop
cmp
lret
cmp
mov
call
lcall
js
mov
pop
or
cmp
fs
push
pop
sub
mov
mov
mov
call
lcall
fistpll
aam
and
pop
xor
xchg
pushf
pushf
das
xor
pop
sbb
mov
aam
and
aam
sbb
pop
sub
aam
push
mov
mov
xor
and
sub
cmp
enter
rcrb
aam
sbb
pop
and
push
mov
sub
int3
adc
fs
lret
fistpl
ss
popa
and
out
lock
mov
sub
xor
fcmovnu
fildl
pop
xor
pop
adc
pop
or
ds
adc
lret
lock
mov
and
xor
fcmovnu
fildl
pop
jle
fcmovnu
aam
and
pop
cmp
cs
outsb
mov
mov
mov
xor
xor
fcmovnu
fildl
pop
fbld
fcmovnbe
popa
xor
mov
mov
enter
imul
mov
pop
and
push
fcmovu
fcmovnu
inc
pop
pop
fbld
ja
loopne
popa
sub
sub
aam
ds
sbb
sbb
pop
cs
or
xchg
mov
or
test
xlat
nop
xor
fcmovnu
fildl
pop
fucomip
lret
sub
add
pusha
and
andb
popf
and
push
gs
fcmovnu
fildl
pop
fistps
pusha
jge
aam
and
cs
daa
mov
push
pop
xor
aam
and
fcmovu
fcmovnu
inc
pop
pop
fists
rcrb
sub
arpl
imul
mov
mov
and
xor
fcmovnu
fildl
pop
fbstp
fistps
mov
mov
xor
push
clc
jge
iret
cmpsl
mov
filds
sub
mov
jo
mov
sub
mov
vpshufhw
dec
dec
mov
hlt
test
pop
insl
sub
repz
xor
stc
mov
mov
lock
sahf
mov
scas
in
jnp
iret
scas
adc
push
inc
popl
mov
jnp
cmpsb
push
dec
dec
dec
dec
mov
dec
subl
push
int
testb
dec
jg
int
inc
movsl
dec
mov
mov
movsl
pusha
movsb
movsl
gs
push
movsl
dec
dec
jg
movsl
dec
lret
sub
sub
outsb
movsl
dec
subl
aam
rorl
dec
dec
movsl
dec
ficoms
das
movsl
dec
jo
xor
inc
lret
dec
dec
cmpsb
dec
dec
dec
dec
aam
mov
or
mov
dec
push
dec
aam
fcomi
incb
int
dec
cmp
dec
dec
dec
dec
aam
mov
or
mov
dec
aam
fildl
dec
dec
dec
dec
aam
mov
jno
cmp
movsl
dec
mov
cmpsb
push
dec
dec
dec
dec
mov
dec
subl
push
int
testb
dec
jg
int
inc
movsl
dec
mov
mov
movsl
pusha
movsb
movsl
gs
push
movsl
dec
dec
jg
movsl
dec
lret
sub
sub
outsb
movsl
dec
subl
aam
rorl
dec
dec
movsl
dec
ficoms
das
movsl
dec
jo
xor
inc
lret
dec
dec
int
mov
bound
adc
cmp
dec
mov
dec
aam
mov
xor
inc
lret
dec
dec
lds
dec
int
mov
dec
push
mov
xchg
aam
mov
inc
int
dec
movl
inc
dec
cmpsb
dec
dec
dec
dec
aam
mov
mov
int
dec
dec
push
dec
aam
fmull
pop
push
mov
or
mov
or
cmc
mov
scas
int
mov
sub
scas
insl
arpl
notb
or
lds
int
dec
int
dec
movsl
dec
mov
cmpsb
push
dec
dec
dec
dec
mov
dec
subl
push
int
testb
dec
jg
int
inc
movsl
dec
mov
mov
movsl
pusha
movsb
movsl
gs
push
movsl
dec
dec
jg
movsl
dec
lret
sub
sub
outsb
movsl
dec
subl
aam
rorl
dec
dec
movsl
dec
ficoms
das
movsl
dec
jo
outsb
mov
mov
bound
mov
dec
dec
dec
dec
aam
mov
mov
ja
mov
iret
mov
sub
movsl
mov
sub
test
pushf
cld
mov
mov
dec
dec
dec
dec
and
dec
iret
mov
sub
lahf
jg
insl
cwtl
inc
hlt
mov
test
inc
hlt
scas
xor
mov
sub
mov
mov
iret
mov
mov
iret
mov
iret
test
sub
mov
jb
cltd
lahf
sub
sub
mov
popf
sub
in
mov
movsl
into
mov
sub
sub
dec
dec
dec
aam
mov
or
mov
inc
in
mov
mov
inc
clc
mov
xchg
inc
hlt
cmpsl
shll
mov
dec
iretw
mov
je
sub
inc
iret
fsubrp
mov
sub
test
popl
xchg
stc
push
sub
stos
sti
adc
inc
hlt
mov
sub
insl
pop
sub
movsl
movsl
dec
mov
cmpsb
push
dec
dec
dec
dec
mov
dec
subl
push
int
testb
dec
jg
int
inc
movsl
dec
mov
mov
movsl
pusha
movsb
movsl
gs
push
movsl
dec
dec
jg
movsl
dec
lret
sub
sub
outsb
movsl
dec
subl
aam
rorl
dec
dec
movsl
dec
ficoms
das
movsl
dec
jo
dec
dec
dec
dec
aam
mov
mov
iret
pushf
jmp
movsb
jge
out
lds
mov
out
or
jp
sub
in
sbb
iret
fwait
shll
sub
stos
popf
sub
movsl
test
sub
fwait
test
imul
jge
iret
mov
repz
add
sub
inc
repnz
stos
sub
mov
in
mov
repz
or
and
iret
addl
xchg
inc
repnz
mov
sub
cmpsl
adc
mov
xchg
cmpsb
dec
dec
dec
dec
aam
mov
mov
into
mov
sub
adc
into
stos
jo
sahf
sub
adc
iret
lahf
les
in
movsl
dec
mov
cmpsb
push
dec
dec
dec
dec
mov
dec
subl
push
int
testb
dec
jg
int
inc
movsl
dec
mov
mov
movsl
pusha
movsb
movsl
gs
push
movsl
dec
dec
jg
movsl
dec
lret
sub
sub
outsb
movsl
dec
subl
aam
rorl
dec
dec
movsl
dec
ficoms
das
movsl
dec
jo
or
xchg
inc
mov
inc
repnz
icebp
call
push
dec
lea
hlt
pop
xchg
sub
mov
frstor
cmpsb
dec
dec
dec
dec
aam
mov
or
sub
mov
sbb
pushf
mov
out
test
sub
lods
sub
dec
mov
mov
dec
iret
mov
sub
sub
cmpsb
iret
mov
out
add
dec
dec
dec
aam
mov
mov
into
mov
test
iret
add
iret
mov
sbb
stos
sub
push
cmpsl
inc
inc
icebp
andl
addb
adc
add
loope
add
push
adc
cmp
addl
insb
lahf
in
mov
adc
sub
xor
push
cmp
rcll
sub
inc
mov
outsl
and
fldl2e
xchg
addl
xor
shl
addr16
sbb
arpl
icebp
outsl
scas
aas
mov
push
xlat
xchg
xorl
ret
es
or
jb
mov
and
jge
jle
xor
cmpsl
add
sbb
mov
add
orb
in
clc
inc
jle
xor
nop
add
pop
test
outsl
sahf
cmp
test
clc
xlat
pushf
pop
sbb
jo
aaa
jnp
add
push
add
stc
test
xchg
xor
cs
loopne
addr16
adc
pop
jno
dec
push
add
add
shrl
lea
fdivs
add
xor
push
icebp
xor
sub
mov
add
jo
add
outsb
adc
leave
ds
pop
adc
test
mov
inc
test
push
add
adc
inc
push
add
sbb
sbb
test
add
sub
mov
push
add
inc
sub
inc
or
repnz
jnp
jo
add
push
stc
push
and
adc
push
sar
and
xor
xchg
int
adc
push
decl
andb
jmp
mov
mov
fadd
lret
add
add
and
xor
cmp
pop
dec
aam
dec
call
dec
js
jno
je
dec
inc
or
push
jnp
xor
jl
dec
jns
out
roll
aaa
inc
push
inc
dec
inc
xor
xor
jmp
sbb
ds
addr16
dec
addr16
pushf
sub
cmp
or
push
aas
cmp
xor
xor
inc
out
push
push
push
dec
inc
inc
dec
dec
inc
pop
leave
ss
in
push
xor
push
pop
xor
add
andb
push
pop
cmp
jbe
cmp
push
cmp
imul
mov
dec
pop
int
jbe
pop
ja
nop
push
push
dec
stc
push
push
dec
aad
jae
in
inc
adc
cmp
sub
js
xor
inc
dec
xor
xor
inc
repz
xor
xlat
fimuls
xor
inc
inc
addl
pop
sar
cli
xlat
adc
add
bound
push
jb
shll
mov
outsb
negl
stc
sbb
jne
jb
hlt
or
add
popa
jns
mulb
jne
jne
divb
insb
js
in
je
mov
dec
jl
push
repz
cld
gs
jg
xor
adc
dec
jno
or
inc
bound
push
nop
push
int
jb
leave
js
mov
adc
xor
and
mul
lock
aam
jnp
aas
inc
jae
dec
je
jecxz
sbb
push
addr16
js
aaa
ja
cmpsb
push
outsb
int3
dec
bound
xor
ja
subl
jo
add
jnp
push
mov
jbe
cwtl
jne
outsw
ljmp
arpl
sbb
ds
sbb
push
fiadds
dec
mov
mov
dec
jge
xlat
sahf
fs
and
add
pop
stos
jb
inc
jno
out
jns
cmpsl
jae
imul
movsb
std
std
repz
jno
sbb
push
jns
stos
adc
mov
xor
fucomp
jb
and
fldcw
in
sub
fdivs
and
push
js
and
push
xor
xor
shll
aad
pushf
mov
stc
cmp
das
enter
iret
add
push
loop
add
pop
mov
sub
pop
repnz
push
in
movsb
pop
fistl
insl
or
fs
ds
cmp
enter
je
jns
cmp
movsb
sub
dec
sti
outsb
add
cmp
lea
dec
and
fmul
sbb
adc
fiadds
jmp
xchg
inc
and
and
insl
nop
mov
insb
mov
sub
es
dec
push
lock
out
scas
or
incl
repz
mov
inc
and
and
das
pop
mov
adc
jns
pop
inc
arpl
insl
scas
xorl
adc
push
sub
leave
jmp
mov
movsb
call
push
dec
inc
push
push
or
inc
pop
mov
xchg
fs
or
dec
inc
add
pop
