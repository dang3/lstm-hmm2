lahf
jo
xchg
adc
lahf
cmp
or
pusha
aam
ffree
jmp
in
xor
or
cs
aam
loopne
gs
imul
mov
std
jae
fadds
outsb
add
xor
enter
cmp
addr16
mov
mov
inc
pop
jne
jp
jge
mov
cltd
or
push
dec
popa
pop
cli
in
sbb
or
es
jmp
mov
push
in
movsb
insb
mov
push
cmc
add
stc
add
lret
nop
pusha
lret
jp
push
pop
mov
cmp
pop
or
fistl
push
sbb
adc
push
imul
sbb
push
mov
cs
movsb
loop
out
sti
add
gs
inc
popf
xchg
mov
daa
pop
out
xchg
push
xor
das
lret
mov
and
push
aaa
cld
cmpsl
sbb
cwtl
test
icebp
pop
xlat
fmull
cmp
push
insl
hlt
out
cmp
push
aad
sub
xor
stos
sbb
sub
dec
sbb
dec
popa
add
jne
and
cld
xchg
cwtl
iret
or
inc
das
mov
jecxz
loope
push
in
inc
xchg
hlt
sbb
in
xchg
movsb
or
adc
cmp
sub
mov
pop
jae
fldt
rcr
loop
pop
out
mov
xor
add
xchg
jne
stos
jne
jne
push
push
lods
push
outsb
inc
xor
leave
popw
dec
fbstp
pop
or
jb
inc
lahf
pushf
mov
leave
cmp
pusha
repz
jmp
out
popw
shrb
cwtl
stos
clc
outsl
divb
mov
loope
inc
xchg
cmp
shrb
in
shl
jp
inc
mov
mov
add
push
mov
outsl
gs
in
xor
cltd
out
aam
inc
and
xchg
ss
movsl
inc
dec
mov
out
imul
or
cld
pop
repnz
jne
bound
sub
pop
pusha
cmpl
jmp
ds
mov
sbb
fistl
sbb
mov
jp
xchg
xchg
mov
cmpsb
out
cmpsl
pop
repnz
in
imul
xchg
in
in
jge
mov
adc
xchg
mov
mov
lret
push
jl
mov
adc
mov
gs
fucomp
jg
stos
cmp
mov
mov
jp
stos
sar
push
ljmp
out
push
aad
jmp
pop
or
adc
enter
or
jmp
ljmp
arpl
jbe
pop
lock
pop
pop
fstpl
push
adc
out
cmp
rolb
test
fbld
push
in
cmpb
or
bound
testb
imul
outsb
loope
sub
inc
iret
sbb
rol
pop
pop
sti
mov
arpl
jle
xchg
pop
jo
and
mov
imul
and
data16
stos
push
sahf
nop
lods
push
jle
cwtl
int3
cmp
adc
push
and
xor
add
in
mov
sahf
cltd
int
sbb
int
rdtsc
lock
and
or
xchg
sbb
sub
stos
pop
gs
sub
xor
sub
inc
outsb
hlt
inc
pop
inc
push
aad
cld
rcrb
cwtl
mov
pusha
aam
or
dec
bound
rolb
ffree
jmp
adc
sub
pusha
jmp
and
jno
nop
mov
inc
subl
mov
adc
sti
xchg
out
jo
pop
or
bound
or
repz
shrb
punpckhbw
pop
add
fistl
and
adc
xchg
stos
and
fistps
push
movsb
clc
call
xor
es
iret
or
out
and
sbb
add
add
repnz
in
sbb
pop
dec
or
in
popa
movb
jl
cmp
adc
inc
cltd
xor
pop
jne
insb
mov
mov
mov
mov
add
pusha
adc
aam
add
sbb
mov
insl
mov
stos
arpl
lcall
cltd
adc
cld
dec
and
lcall
jmp
add
mov
iret
mov
pop
dec
shrl
out
xchg
xchg
ret
xor
das
mov
pop
adc
inc
in
repnz
mov
xchg
fidivl
dec
or
mov
xchg
lock
and
stos
mov
and
mov
pop
push
push
inc
sbb
inc
jo
js
dec
lret
mov
push
lcall
jb
pop
arpl
inc
stc
mov
jp
loope
arpl
fildl
add
push
sub
xlat
push
aas
scas
dec
lea
je
push
mov
mov
push
or
mov
and
mov
rclb
xchg
movd
popf
mov
lahf
push
push
test
pop
pop
push
test
pop
nop
or
jl
push
cmp
pop
cmp
test
jg
test
lea
shl
jl
rol
sub
nop
cld
nop
test
push
pop
ror
jbe
jge
push
mov
pop
jl
jns
rol
xchg
test
ror
clc
call
xor
mov
ror
cmc
pop
push
push
or
pop
pop
push
test
pop
push
cmp
pop
js
test
jb
cld
push
jae
xor
pop
nop
cmc
add
loop
jecxz
and
jo
dec
dec
fwait
mov
xor
or
xor
add
nop
jns
and
push
dec
pop
shr
clc
stc
xchg
mov
xchg
jb
sub
loop
jecxz
push
into
mov
jbe
xor
pop
fnop
jge
cmp
dec
inc
jle
push
rol
pop
cmc
stc
add
jbe
and
jmp
loopne
mov
dec
lret
cmc
dec
mov
xchg
es
clc
stc
test
fsub
dec
je
mov
jb
push
jns
sar
pop
jmp
mov
das
das
leave
xlat
inc
push
stc
cmc
fdivl
mov
shrb
pushf
mov
stc
lcall
and
mov
shr
test
jne
jmp
push
jae
push
mov
pop
pop
rol
sub
push
pop
cmp
jb
je
and
test
shl
stc
cld
add
jmp
push
ficomps
ss
je
inc
sub
mov
jp
mov
testl
xor
out
push
xor
push
call
sbb
pop
mov
mov
ret
outsl
ja
or
mov
aam
mov
cmp
push
xchg
push
sbb
clc
pop
mov
dec
shll
push
mov
push
xchg
movsl
xchg
mov
pop
loop
jecxz
dec
pop
jno
mov
lods
inc
push
push
mov
pop
pop
push
or
pop
ja
nop
jg
push
push
test
pop
pop
nop
test
add
push
call
pop
add
adc
sub
outsb
mov
jmp
movsl
sti
pushf
loope
xor
jb
rcll
sub
adc
aas
sub
add
rclb
leave
dec
mov
inc
inc
adc
cmp
sub
loope
cmpsb
dec
test
popa
das
sbb
pop
mov
jge
je
pop
aas
push
pop
pop
dec
jne
ja
cmc
jb
je
push
mov
pop
push
pop
push
shl
pop
je
rol
cld
cmc
and
inc
dec
clc
rol
push
call
test
and
scas
xchg
jmp
sub
mov
mov
xor
pop
pop
jmp
jmp
rorl
outsl
mov
pop
pushf
push
popf
lock
jno
xor
pusha
inc
adc
mov
in
lods
sti
addl
mov
and
mov
xchg
xchg
into
or
push
cmp
mov
les
sbb
sbb
xor
fucomip
sub
faddl
inc
out
cmp
mov
cmp
int3
nop
sub
mov
cmpsl
and
cmpsl
fs
pop
pop
shll
adc
rorb
mov
outsb
cmpsb
inc
imul
stos
mov
hlt
and
pop
jo
je
mov
cmp
nop
xchg
mov
ja
dec
xor
sub
push
sahf
pop
idivb
cwtl
ret
push
andb
push
scas
xor
gs
dec
pop
dec
movsb
jo
nop
sbb
clc
lcall
repz
mov
jno
ret
lcall
enter
clc
mov
sbb
fwait
lret
or
nop
ret
sub
and
sbb
jae
adc
lret
fwait
dec
inc
leavew
sarl
add
push
imul
mov
sub
push
fdivrl
mov
in
nop
mov
mov
inc
sub
jle
fisubs
pushf
jns
pop
aad
jo
mov
dec
loopne
jne
dec
xchg
push
mov
cltd
cli
cld
mov
sub
fucomi
inc
pop
push
imul
inc
stos
insb
and
lds
fisubrs
adc
and
mov
push
imul
cwtl
clc
jecxz
dec
sbb
movsl
cli
jae
in
scas
into
scas
mov
push
mov
fimuls
jge
pop
sub
mov
mov
sub
jecxz
mov
in
sub
push
cli
ljmp
hlt
sarb
fimull
nop
xchg
in
xchg
xchg
pop
cmpl
jg
mov
push
and
repnz
pop
fstl
mov
dec
and
mov
sbbl
faddl
mov
xor
gs
mov
inc
jge
jmp
lret
in
pop
nop
imul
push
push
xchg
and
popf
lock
mov
jle
mov
add
or
cmp
xchg
or
mov
jno
xor
xchg
adc
shlb
or
ss
lods
ret
cmpsb
call
jns
mov
mov
xor
xor
sbb
xor
sbb
add
mov
dec
outsl
loop
jle
loope
push
jg
xor
xchg
call
inc
rcrb
in
sbb
fwait
addb
ss
xor
and
pop
sub
push
push
cmp
xchg
xchg
insb
lock
das
out
lods
adc
cli
loopne
pop
inc
popf
lock
js
xor
pop
ret
mov
jbe
rcrl
mov
stos
fidivrs
sub
push
mov
cmp
out
xchg
push
sbb
shll
dec
inc
sub
mov
jb
dec
lahf
sub
add
push
mov
mov
cmp
jp
jne
movsb
pop
insb
fisttpll
shl
cltd
mov
in
imul
pushf
add
sub
sub
pop
push
pop
pop
movsb
mov
pushf
jns
cld
sbb
push
cwtl
mov
adc
out
cmp
mov
ss
popf
scas
jp
mov
mov
mov
lods
in
es
push
mov
cld
insb
imul
jg
ja
dec
push
push
stos
decl
mov
out
jmpw
or
pushf
loopne
rorb
sub
lock
imul
and
test
pop
ss
push
or
add
dec
lcall
fcomps
sarb
cs
dec
aaa
sbb
sbb
mov
aaa
cmpsb
and
movsl
sbb
pop
fs
mov
jae
and
xchg
test
in
scas
rcrb
sar
dec
mov
mov
push
xchg
insb
nop
mov
sti
adc
sbb
cmp
add
and
mov
mov
pop
push
sub
ret
xchg
aaa
sub
mov
sbb
adc
data16
mov
sub
xchg
in
add
inc
cmp
jo
imul
fildll
pushf
cwtl
push
cmp
cwtl
mov
xchg
jne
sbb
lods
lods
push
dec
dec
inc
sbb
out
lods
ss
inc
mov
sbb
lcall
bound
ret
fdivrs
addr16
push
sbb
xor
add
in
leave
out
cmp
xor
adc
add
rcrl
xor
sbb
icebp
mov
ret
jae
push
or
jge
inc
shrb
inc
gs
push
ret
sarl
divb
bnd
cmp
cmp
jno
cmpsl
cltd
fsub
out
lea
pushf
mov
mov
push
dec
cwtl
out
or
jnp
in
sbb
push
fs
or
aam
cmp
in
xchg
pusha
push
ret
data16
out
jnp
pop
cmp
stos
cmp
sbb
mov
inc
stos
test
insl
cmc
xor
sub
add
stos
jbe
ljmp
out
xchg
xor
fisubrs
out
std
and
fwait
xor
fstpl
and
mov
stos
push
push
mov
xchg
or
data16
in
lods
push
mov
jl
pop
adc
inc
iret
sbb
sbb
fisttps
cmp
lea
int
movsl
sub
or
mov
shl
mov
push
sub
fucomip
xchg
dec
fstps
movsb
ret
in
push
cmc
in
insb
adc
andl
rorl
mov
mov
jp
out
addb
or
outsb
iret
insl
loop
sti
xchg
je
push
je
inc
lods
sarl
inc
cli
mov
arpl
cmc
push
loop
outsb
jae
pop
mov
fidivrl
xor
xchg
pop
leave
cmp
call
pop
add
dec
adc
xor
pushf
jmp
adc
push
mov
out
dec
lds
into
or
iret
xchg
mov
dec
xchg
xchg
shrl
js
push
lret
mov
sub
lcall
xor
dec
sub
notl
cmp
aaa
fisubrs
stc
jmp
out
xchg
mul
fs
bndldx
int3
mov
inc
jp
push
sti
cmp
xchg
jo
mov
lock
cwtl
dec
fstpt
orb
mov
lret
neg
xor
lea
dec
mov
out
xorl
cmp
sub
cltd
push
xchg
ljmp
mov
mov
into
cmp
inc
sbb
pop
nop
es
dec
inc
lahf
jge
icebp
pop
std
mov
sub
cmpsl
out
stos
popa
or
fadd
arpl
adc
in
test
mov
xchg
mov
or
cmp
insb
lahf
movsb
and
mov
xchg
dec
sub
nop
mov
hlt
cmp
push
adc
pop
clc
aad
jb
xchg
out
jle
loope
push
push
in
movsb
sbb
push
pop
mul
push
hlt
fsts
fildll
sysret
std
je
add
sbbl
xchg
gs
xor
in
ja
xchg
and
neg
dec
dec
scas
int3
xor
hlt
ret
or
jp
sub
not
sbb
cmpsl
aad
std
divps
ret
cli
daa
mov
mov
dec
pushw
jae
flds
add
jae
insb
loopne
lods
imul
jae
adc
pop
enter
fucomp
shrb
les
cmp
and
add
das
ret
into
repnz
sbb
out
sbb
add
mov
push
xchg
fisttps
lods
or
adc
xchg
imul
in
sub
out
sub
push
and
pop
cltd
das
sub
pusha
jp
les
cmp
xchg
push
jnp
leavew
pop
cltd
and
push
jle
fnsave
lds
rorb
mov
jo
out
cld
cmp
jns
icebp
or
dec
xor
aaa
scas
jo
adcb
xchg
sbb
or
and
mov
xchg
aaa
adc
jmp
sarb
cmp
inc
out
loop
stos
leave
test
fsubrs
test
and
cmp
cmpb
pop
xchg
sub
push
add
mov
jns
mov
or
clc
subl
adc
ficoms
dec
mov
mov
dec
mov
inc
ja
fcompl
int3
es
and
mov
or
dec
mov
popf
std
js
push
xor
mov
xlat
or
push
mov
xchg
lret
mov
sti
loopne
addb
dec
in
out
sbb
lcall
push
out
jg
push
and
cmpsl
sub
mov
and
pop
ret
xchg
jbe
inc
sbb
je
push
pop
cld
or
jecxz
and
bound
arpl
out
or
addr16
mov
out
jns
inc
xor
lea
xchg
xchg
icebp
push
fadds
dec
lcall
divb
loopne
add
dec
inc
stos
xor
jo
icebp
xchg
cmp
pop
sbb
inc
scas
pop
lret
aam
xor
jl
ss
dec
xor
mov
sbbb
decb
js
xor
dec
insb
push
or
or
mov
push
subb
out
stos
lahf
les
xorb
in
jbe
xor
adc
inc
xor
leave
cmp
loope
out
jo
aam
cmp
fstps
cmp
xlat
dec
pop
mov
in
mov
xor
jne
pop
aas
out
insb
call
lock
lds
xlat
or
repnz
iret
lea
push
int3
inc
jo
lds
adc
inc
dec
xor
jmp
mov
ja
pop
xor
ljmp
pop
cmpsb
cwtl
test
lock
xchg
add
jne
stc
xchg
test
xlat
push
je
sbb
mov
sbb
icebp
adc
inc
in
bound
movsb
mov
bound
xchg
mov
cmc
aaa
sti
notb
lods
xor
enter
xor
inc
pop
dec
fimuls
sub
mov
loope
jae
int
mov
jle
ret
or
mov
cli
out
or
sbb
repnz
leave
cmpsb
ret
mov
jle
lret
or
xorb
sbb
shl
jle
insb
cmp
and
pusha
test
jnp
scas
sti
insb
pop
mov
pop
inc
inc
outsb
add
cmp
xchg
and
popf
movb
leave
jbe
or
stc
testb
add
std
pop
scas
fwait
in
xor
or
in
mull
std
jecxz
aam
loopne
int3
cmp
test
insb
inc
hlt
lret
out
vpunpckhdq
mov
push
cmc
mov
loop
jmp
dec
mov
dec
or
and
ljmp
insl
mov
adcb
int
ficomps
and
dec
popa
inc
push
lret
cmpsb
ds
in
pop
add
mov
mov
sbb
jbe
lret
test
mov
xor
bound
xor
lods
inc
shrb
cmp
dec
adc
loop
inc
out
scas
out
push
and
aam
inc
maxps
repnz
jb
arpl
mov
into
cmpsl
stos
inc
push
fdivl
dec
mov
add
ds
loope
repnz
jecxz
jne
lret
xchg
testb
jb
xor
cmp
mov
mov
mov
pop
sbb
jns
mov
shlb
imul
adc
arpl
aas
lahf
or
xor
dec
pop
add
aam
cs
fnstenv
testb
xor
or
dec
inc
cwtl
outsl
xlat
xchg
out
mov
nop
int3
add
test
nop
cli
xlat
dec
ret
shll
mov
or
int3
xlat
fnstcw
cli
and
aas
or
jae
call
jns
pop
bnd
in
jmp
aad
testb
inc
push
mov
cmpsb
adc
xor
js
out
mov
lock
mov
sbb
sahf
mov
sub
jecxz
and
sbb
dec
lret
add
xchg
or
push
adc
jne
imul
shr
and
inc
leave
daa
jmp
push
mov
leave
add
or
xchg
in
mov
movsl
or
cmp
test
push
pop
cmp
fildll
cltd
mov
dec
insb
mov
dec
cwtl
cld
mov
xchg
mov
add
jle
rcrb
ficoml
cmpsb
rorb
movsl
jnp
push
insl
imul
jne
pop
cmpsb
adc
mov
mov
sbb
cltd
nop
movsb
mov
cmp
leave
cmp
and
xchg
dec
lcall
mov
ljmp
stos
enter
push
cmp
aaa
sbb
shlb
jbe
int3
fisttpll
pushf
sarb
jns
pop
mov
mov
popf
pop
ljmp
push
int3
add
aaa
es
inc
mov
gs
adcl
in
movsb
lods
dec
sahf
frstor
rcl
pushw
jmp
and
insb
mov
xchg
dec
dec
leave
rcr
inc
shrl
or
in
jp
lock
stos
cmp
pop
xorb
mov
mov
pop
push
dec
in
pop
xchg
aaa
std
adc
pop
and
mov
rcrl
arpl
xor
adc
and
inc
xor
movsb
adc
sub
call
fs
and
stos
repz
out
sub
dec
dec
cwtl
mov
pushf
popa
adc
adc
cmp
ss
int
cmpsb
and
mov
xor
push
mov
inc
xchg
insl
cld
sbb
push
inc
push
xchg
xchg
ret
and
insb
insl
out
adc
ret
fs
lret
fyl2x
xchg
shlb
outsb
sbb
cmp
adcl
xlat
outsb
adc
xchg
sbb
fucomi
out
dec
insl
nop/reserved
repz
or
repnz
lods
xor
imul
ja
or
sbb
sub
mov
popa
jbe
jp
leave
stos
cmp
stc
pop
inc
add
jmp
xlat
inc
imul
dec
test
adc
orb
and
enter
cmp
mov
mov
jb
test
lods
pause
mov
mov
fcompl
sbb
xchg
mov
mov
dec
xor
jle
push
int
out
addr16
xor
xor
insl
xor
call
aas
mov
pop
adc
push
adc
hlt
xchg
adc
stc
and
mov
inc
pop
repnz
dec
pop
xchg
scas
loopne
divl
lea
push
push
rcr
sub
cmp
xchg
add
rclb
cltd
sbb
test
xchg
inc
add
adc
jo
or
sub
push
in
and
fwait
dec
fdivrp
stos
mov
mov
leave
ret
xor
pop
xor
add
pop
mov
adc
jp
hlt
dec
sbb
mov
push
pusha
cmc
lds
sub
inc
dec
aaa
cmpsl
scas
push
imul
push
je
dec
sub
mov
lea
mov
push
lods
mov
mov
inc
cmpb
cmc
adc
cmpsb
jne
mov
cs
jns
pop
in
or
jnp
gs
loopne
adc
mov
and
mov
mov
enter
out
pmulhuw
shlb
nop
xchg
cmp
insb
push
jbe
xor
dec
aas
jl
out
repnz
das
push
and
std
in
pop
call
enter
orb
inc
or
sub
dec
lret
pop
inc
jns
stos
and
mov
mov
insl
daa
rol
push
jo
insb
inc
pop
push
mov
pop
xor
test
sti
jge
movsb
test
sarb
cmp
int3
sti
mov
fiadds
mov
mov
aaa
inc
into
cli
sahf
addr16
leave
mov
repnz
adc
decl
push
xlat
jns
mov
mov
cltd
ds
jmp
in
js
push
es
jge
call
ljmp
pop
inc
mov
sub
lret
mov
fcmovnu
cmpsb
test
repnz
inc
mov
stos
mov
cmp
decb
jl
out
aas
push
out
int
imul
into
pushf
in
fidivs
aam
and
xchg
lret
jge
sub
out
loop
repz
mov
insl
cmp
sub
je
mov
pushf
fidivl
jecxz
mov
mov
jne
sub
or
gs
lods
and
outsb
adc
repnz
js
movsl
xchg
popf
pushf
pop
sti
and
andb
xor
push
sbb
stos
mov
int
xor
xchg
out
mov
test
dec
pop
jbe
das
icebp
inc
mov
sbb
cmp
sbb
push
lret
imul
xor
xor
jg
xlat
pop
arpl
pop
jecxz
stc
push
ficomps
orb
clc
mov
imul
rorb
dec
mov
repnz
xchg
pop
sbbl
dec
sub
je
lock
cmp
sbb
stos
fs
mov
cmp
pop
xchg
push
push
mov
mov
icebp
lcall
sbb
stos
les
mov
xor
in
dec
sbb
inc
ds
add
adc
jecxz
cmpl
fsts
psadbw
in
and
addr16
inc
and
xchg
jne
cld
xchg
pop
rcrb
cmc
xor
stos
push
push
sbb
cmpsl
pop
fmull
mov
xlat
pop
add
sub
push
in
or
mov
push
inc
loope
test
xor
jnp
lea
xchg
push
cmp
mov
xor
sbb
sbbb
int
stc
js
jl
in
dec
fsubs
lret
xchg
jno
sub
cs
gs
int3
pusha
cmpsb
mov
pop
push
insl
add
jg
or
add
inc
ficompl
es
mov
mov
popf
stos
shlb
ret
scas
loopne
aad
sbb
movb
sbb
repz
sahf
dec
sbb
jae
fisubrs
sub
push
outsb
in
lea
adc
xchg
push
xor
inc
dec
and
push
pop
xor
jns
daa
sub
scas
fcompl
arpl
or
cmpb
dec
leave
mov
int3
scas
pop
out
jge
and
xchg
pop
dec
aad
loope
xorb
mov
loopne
xor
out
push
sub
mov
pop
daa
push
inc
sub
add
sub
mov
xchg
repnz
frstor
cmp
and
pop
dec
rclb
fists
fsin
mov
ljmp
push
pushf
ljmp
lods
mov
mov
sarb
pushf
xor
fwait
add
pop
test
outsl
int3
mov
add
sbb
mov
popa
movsl
cmp
mov
inc
push
shl
dec
cmp
aam
fnstenv
sbb
gs
cmp
dec
jnp
xchg
and
mov
out
addr16
cmpl
pop
sti
loope
xchg
push
pushf
mov
aam
sbb
imul
mov
lcall
cmc
jo
fidivrs
mov
pop
lods
hlt
push
dec
lods
or
sub
jecxz
cld
ret
add
out
add
dec
inc
mov
cld
ret
xchg
fnstenv
pop
pop
mov
add
sti
dec
fildl
mov
idivb
mov
xchg
adc
cmp
pop
or
jnp
push
lahf
fldt
into
shlb
dec
cmp
adc
addr16
sahf
mov
jae
mov
imul
fsubl
push
cmp
arpl
push
mov
mov
lods
xchg
outsl
push
test
gs
in
ja
or
js,pt
jmp
loope
mov
ret
pop
fistpl
and
iret
push
into
push
sbb
inc
cmpb
push
inc
daa
test
cli
xchg
ret
adc
sbb
repnz
in
jmp
jnp
mov
mov
test
sbb
std
popa
sbbb
xor
dec
jle
out
cs
ss
cmpl
lret
in
stc
rcrl
jmp
test
leave
dec
mov
push
cmpsb
add
inc
mov
push
mov
cmpsl
lods
dec
scas
insb
mov
std
fisttps
cmpsl
xchg
loope
leave
in
nop
enter
addl
icebp
sbb
int
adc
pop
xchg
pusha
xchg
js
movsb
movsl
xor
in
stos
mov
mov
xchg
out
outsb
dec
dec
mov
xor
jmp
out
loopne
push
add
mov
je
cmc
jle
jp
push
fsub
push
push
jbe
push
mov
movsl
sub
inc
cld
clc
gs
shlb
stc
and
pop
aam
fidivrl
add
push
orl
push
mov
cltd
pop
sbb
sub
cmp
sub
dec
jl
add
arpl
mov
or
repnz
cmpsl
cld
add
jnp
frstor
repnz
fstps
test
in
sarl
adc
mov
jbe
popf
jbe
hlt
clc
xchg
daa
cmp
in
stc
lret
mov
mov
insb
pop
pop
inc
shrb
sbb
mov
je
adc
stos
jnp
in
mov
addr16
and
inc
mov
pop
mulb
and
lahf
cmp
int
mov
jno
hlt
pop
icebp
mov
mov
jge
jbe
repz
repnz
shlb
ficoml
mov
cmp
shl
sbb
push
mov
movb
xchg
mov
cmp
add
enter
pop
pop
pop
addr16
inc
sub
or
mov
push
ljmp
sbb
pusha
xchg
push
out
add
mov
add
jge
mov
dec
gs
addb
or
loopne
push
xor
lahf
xor
xlat
push
out
cmpsb
popa
hlt
inc
mov
cltd
jle
outsb
mov
out
aad
sbb
lds
gs
xchg
cmp
mov
call
adc
xor
inc
and
xchg
out
mov
inc
cmp
xchg
lea
jg
jg
jl
or
icebp
sarb
pop
movsb
and
pop
xor
cwtl
movsl
push
fs
lods
stc
insl
inc
rorb
insl
lcall
jp
and
push
lock
imulb
daa
push
js
dec
xchg
push
insb
sub
arpl
inc
iret
lods
scas
lahf
adc
xor
pop
push
xchg
sub
ret
iret
shrb
jo
and
sahf
mov
stos
mov
cmp
addr16
loope
popf
sbb
arpl
outsl
rorl
js
sti
decb
das
outsb
dec
pop
fcoml
dec
addb
pop
popa
push
sbb
push
and
shl
add
lods
in
add
and
les
test
mov
sbb
es
xchg
mov
mov
test
aaa
lods
das
mov
mov
popa
sti
cld
lods
nop
lods
pop
dec
pop
sbb
repnz
or
in
shlb
pop
test
lea
xor
jl
sbb
mov
je
pushf
xor
testb
sub
add
pop
xchg
rclb
idivb
enter
dec
push
fwait
inc
push
lds
adc
push
mov
jge
arpl
in
mov
movsl
adc
mov
mov
icebp
jne
jae
jecxz
jnp
out
push
mov
jmp
xor
push
xchg
arpl
sbb
adc
fists
pop
lods
lcall
inc
scas
mov
pop
add
lods
fsubrp
push
dec
xor
mov
mov
and
jge
xor
mov
fucomip
mov
add
arpl
int
bound
sbbl
xchg
dec
sarl
stos
cmp
add
mov
inc
add
mov
in
jae
test
outsb
in
jmp
fcomip
mov
xor
movsb
lds
pop
cmp
bnd
xchg
fcmovnbe
xchg
pop
xchg
adc
mov
cmp
sbb
loopne
ds
cmp
dec
add
cs
loope
movsl
mov
sbb
jp
pushf
mov
iret
bound
add
syscall
bswap
mov
mov
xchg
mov
mov
fcoml
scas
call
movl
xor
cmpsl
mov
movsb
sbb
ds
dec
das
in
andb
roll
push
jne
dec
mov
cmp
xlat
bound
insb
sbb
sub
jno
and
add
mov
insl
cwtl
sbb
adc
mov
pop
pop
push
fwait
int3
xchg
movsb
or
mov
mov
adc
clc
out
sbb
hlt
call
es
mov
cmp
cmpsl
das
bound
call
cmp
leave
mov
ret
pop
inc
add
mov
cwtl
aaa
mov
std
push
scas
ljmp
aam
xor
loop
adc
push
lahf
lret
mov
js
nop
cmp
fs
pop
and
jnp
icebp
push
test
xor
push
dec
xor
mov
into
pop
mov
nop
push
push
mov
dec
push
adc
jmp
outsb
add
subb
fidivrs
xchg
out
cmp
loopne
neg
popa
mov
imul
inc
cmp
add
xchg
fldt
jb
xor
or
dec
dec
leave
stc
cs
pop
xchg
arpl
jmp
adc
jecxz
push
and
jl
int
aas
outsb
nop
mov
push
mov
leave
inc
popa
imul
dec
std
in
out
mov
mov
outsb
add
cmp
insl
dec
pop
pop
cmp
dec
mov
jp
adc
jg
push
jecxz
cmpsl
push
stos
sbb
outsb
pusha
stos
rol
xchg
leave
aas
insb
pushf
jo
rol
out
mov
lret
stc
inc
dec
dec
jmp
in
int
into
xor
cmp
adc
xor
les
push
cmp
mov
leave
sub
mov
cmpsb
cmp
mov
addr16
jae
jl
rcr
push
inc
mov
fsubrs
int3
repz
in
mov
cli
mov
scas
mov
push
push
cmpsb
rorl
iret
inc
push
mov
sub
jbe
jne
sbb
pop
add
pop
je
jns
fildll
ficoms
mov
into
pop
inc
out
pop
dec
dec
dec
jl
sbb
jb
ss
mov
push
sub
cmpsl
sub
and
das
mov
lret
cmp
mov
gs
andl
lret
push
leave
mov
or
notb
je
enter
add
aas
adc
mov
test
pop
sub
inc
pusha
xchg
cmpsw
jbe
lcall
lret
jl
push
std
mov
scas
aaa
inc
pop
mov
xchg
sbb
mov
push
inc
and
dec
or
incl
jecxz
mov
cmp
or
or
or
call
cwtl
pop
nop
inc
gs
push
bnd
mov
mov
js
mov
xorb
scas
or
mov
lcall
inc
out
mov
cwtl
and
xchg
or
adc
or
clc
ficomps
xor
call
repz
enter
aad
lret
hlt
cmc
dec
inc
lea
sub
mov
inc
inc
sbb
xlat
and
mov
adc
cmp
test
nop
cltd
xchg
lret
sar
test
fiadds
aas
sub
pop
push
mov
mov
jg
xchg
sbb
stos
ljmp
arpl
push
cwtl
pop
push
push
mov
jge
push
mov
addr16
hlt
lds
push
xor
jg
lret
fisubs
xor
inc
mov
mov
adc
xchg
inc
add
arpl
and
pop
xchg
js
ret
inc
leave
stos
mov
jbe
test
xchg
fimull
xor
mov
push
inc
rorl
out
gs
orl
pop
pop
ljmp
cmpb
clc
data16
mov
cmp
push
jecxz
popa
fs
arpl
xchg
push
inc
mov
movmskps
fcom
sti
sub
ljmp
aam
mov
adc
cmp
fldt
in
cmc
aas
xor
jge
and
mov
cmp
lock
ljmp
mov
adc
push
mov
cmp
nop
jle
aam
push
rorb
inc
fs
cwtl
les
mov
shlb
ret
push
cwtl
and
out
and
ss
fsub
xchg
and
hlt
clc
rcrl
xorl
dec
inc
xchg
jecxz
sub
pop
cmp
popf
xchg
push
xor
aam
push
mov
fprem1
cmpsl
lds
add
mov
pop
sub
push
shll
arpl
dec
daa
shr
add
push
out
jne
pop
cltd
es
pop
and
cmpsb
lods
dec
mov
add
mov
adc
sub
cmp
adc
into
jl
xor
push
add
sbb
bound
or
xor
loope
mov
push
mov
and
mov
test
or
cli
movsb
xchg
sbb
ds
outsb
push
js
cmp
pop
xchg
out
ljmp
daa
dec
pop
lahf
roll
cwtl
std
sbb
and
jg
lret
repz
and
inc
sub
cmc
inc
scas
adc
inc
arpl
jmp
out
adc
inc
ret
lret
insb
ja
inc
leave
cmp
inc
inc
pop
and
xchg
dec
das
inc
mov
lea
data16
xchg
pop
pop
jo
lock
mov
xorb
adc
sub
cmp
xchg
jp
aam
add
test
shr
lcall
jp
mov
ds
and
dec
int3
lods
aad
adcb
add
pop
sub
scas
ror
loop
gs
stc
add
popf
int
mov
shlb
push
lahf
pop
rol
cmp
cmp
xchg
popa
sub
jp
insl
jnp
sub
and
cmp
sbb
ja
push
roll
cld
jbe
pop
scas
ficomps
stos
hlt
or
sbb
and
xchg
flds
outsl
dec
lods
mov
rorb
lds
bound
pop
orb
addb
mov
jp
pop
divb
jl
pushf
mov
fildll
fs
int3
mov
add
inc
arpl
sahf
adc
mov
outsb
lcall
sub
jae
idivb
pop
cli
test
lret
adc
or
xchg
add
fadds
out
jg
in
aam
mov
bound
rolb
mov
mov
imul
lahf
es
stc
dec
push
shr
mov
jbe
or
popf
insb
andb
mov
inc
sarb
decb
xchg
mov
push
cmc
int3
ds
pushf
adc
add
jmp
inc
mov
lds
mov
stc
and
jg
cmp
cmp
mov
in
bound
mov
stos
mov
mov
lret
or
mov
xchg
sti
fidivrl
ljmp
ljmp
xor
fistpll
in
gs
xchg
jge
push
stos
fnsave
mov
add
cmp
fbstp
jno
call
mov
out
pop
aas
xchg
rcrb
push
mov
jmp
pusha
pusha
lds
inc
iret
iret
jmp
sbb
mov
repnz
scas
cltd
cld
cltd
lret
cmc
aas
hlt
notb
loop
imul
pop
mov
add
ja
xchg
xchg
jle
xlat
pop
addl
rol
pop
mov
sbb
roll
fidivrl
mov
sbb
push
sbb
lods
lock
pop
outsb
mov
out
and
xchg
pusha
or
add
shll
sub
lods
icebp
roll
jecxz
or
daa
test
adc
xchg
push
cwtl
outsl
sub
add
xchg
ss
outsb
jp
popa
lret
add
jns
mov
jge
fs
jb
jl
test
jns
xchg
stos
inc
insl
pop
mov
sti
arpl
or
mov
jp
arpl
je
cmp
test
push
xor
and
daa
in
loope
mov
adc
or
dec
inc
lahf
je
outsb
jb
pop
fists
adc
in
adc
scas
test
inc
xor
jne
inc
mov
ds
test
idiv
add
lea
adc
cwtl
fnsave
ss
cmp
adc
ja
dec
and
stc
sbb
fldl
movl
stc
mov
cli
mov
mov
pop
fdivr
inc
xor
sub
aad
jle
outsl
inc
std
fistl
movsb
inc
fs
adc
xchg
iret
or
daa
mov
repz
insl
push
iret
loop
cmpsb
inc
leave
movsb
imul
in
rorb
lods
int3
push
mov
sub
sbb
mov
pusha
adc
testl
jmp
test
jmp
bound
mov
inc
mulb
lahf
pop
pop
sti
pop
data16
lock
add
mov
mov
addb
gs
hlt
das
dec
cwtl
push
aaa
dec
xor
inc
sub
addl
nop
loop
cmpsl
nop
or
lahf
and
sub
out
pop
out
ss
mov
mov
test
iret
lds
into
test
add
push
mov
jns
ja
sub
int
dec
insb
cwtl
jmp
jns
xchg
inc
fistpl
imul
fwait
xchg
push
pop
pushf
adc
fbstp
push
ljmp
adc
ds
sub
aas
jno
fisubrs
add
cmp
mov
clc
mov
jnp
cmp
ret
dec
outsl
divl
lods
push
xor
or
leave
ret
cmp
push
add
xchg
and
dec
or
adc
cs
aad
stos
adc
jbe
xchg
jnp
icebp
pop
popa
jb
adc
jno
call
adc
push
fldcw
push
cs
push
lods
add
push
fidivrs
xchg
shrl
je
mov
sub
mov
jg
push
adc
out
loopne
cmp
iret
or
pop
stos
addr16
pushf
jne
fwait
imul
push
jge
ss
idiv
xchg
push
and
fsubrs
aam
pop
lds
inc
mov
dec
aad
jg
out
sar
or
rcrl
jo
adc
lret
adc
dec
add
test
push
or
and
imul
sub
cli
dec
loope
mov
xor
popf
inc
std
sti
sti
xorl
mov
sub
icebp
push
iret
add
sbb
repnz
jnp
cmpb
pop
mov
push
scas
push
or
out
inc
loopne
inc
pop
imul
lock
test
mov
and
loop
into
stos
sub
int3
fs
inc
in
ljmp
and
mov
push
stc
cmp
movsl
sti
cwtl
out
cmc
xor
xchg
enter
icebp
leave
int3
push
sub
sub
hlt
lock
stos
sbbl
out
dec
icebp
rcl
jo
mov
inc
in
lods
rcrb
pop
dec
and
and
adc
mov
mov
xor
nop
xor
cld
cmp
leave
push
mov
mov
lock
je
adc
jns
outsl
ret
jle
lahf
jnp
jno
hlt
mov
cmp
aam
jb
push
sti
xchg
mov
les
ja
and
cwtl
das
jno
push
je
jl
fisubs
and
mov
add
sub
call
push
jp
xor
and
shr
lock
and
push
jecxz
out
jle
movsl
add
rol
int
jb
insl
or
lea
stos
xchg
test
mov
pop
or
and
rorb
mov
leave
aaa
add
loop
rolb
and
repz
inc
adc
dec
sbb
inc
dec
mov
sub
imul
ljmp
ss
mov
mov
imul
pop
and
mov
leave
aam
insl
lods
sub
in
out
out
cvtps2pi
sbb
add
popa
aas
xor
repz
mov
fs
int3
jo
mov
test
fs
cltd
sub
adc
jp
aaa
out
outsl
aas
mov
and
xor
mov
sbb
leave
clc
test
cmp
bound
lret
pop
or
add
pop
add
jbe
xchg
xchg
decl
mov
pop
sub
mov
add
popa
adc
inc
jecxz
cli
in
imul
jae
add
push
lds
sbb
mov
inc
daa
testb
sbb
mov
popf
xor
lret
jmp
mov
cmpsl
fwait
inc
loope
es
arpl
cld
notb
mov
test
cmp
fildll
rdtsc
in
cli
sub
test
sbb
cmpsl
insl
cli
out
pop
push
andl
add
xorps
mov
ja
arpl
or
push
or
push
inc
fcomps
pop
cmp
cltd
sub
iret
vsqrtsd
xor
mov
adc
push
aaa
fisubrl
cmc
ret
sbb
xchg
scas
mov
xor
cmp
jmp
loop
int3
push
icebp
or
rorl
push
stos
jge
ja
dec
mov
add
cmp
ljmp
mov
sbb
in
ret
jg
fwait
dec
pop
jno
mov
push
fs
mov
ljmp
mov
or
mov
mov
adc
add
cmp
add
dec
add
pop
dec
out
stos
dec
dec
fsubrs
shll
inc
jnp
mov
loope
fstpl
jp
xchg
fsubrs
daa
clc
out
out
jae
imul
mov
or
fsubrs
xchg
mov
dec
arpl
das
mov
push
std
fdivs
incl
fisubrl
movsl
repz
aad
xor
mov
test
bound
sbb
test
or
adc
add
lahf
aaa
jg
jno
jle
dec
pop
sbb
in
or
jno
enter
jns
insl
mov
rcrb
loopne
add
mov
stos
adcb
cmpsl
jns
pop
adc
inc
gs
ret
adc
inc
das
aad
jnp
mov
scas
daa
pop
cld
sbb
addr16
cmp
or
mov
and
decl
sub
loopne
sbb
jmp
mov
mov
mov
cld
pop
add
out
hlt
xor
adc
cltd
pushf
xchg
rcrl
mov
dec
lods
sbb
stc
insb
adc
jno
repz
add
sbb
mov
dec
cld
jg
lcall
test
scas
adc
mov
adc
popa
jae
and
mov
out
scas
js
or
std
ljmp
pop
outsb
cwtl
outsl
repz
nop
dec
leave
mov
xchg
mov
es
je
shlb
repz
dec
movsl
sub
lret
daa
jp
sbb
sub
test
scas
rcrl
push
pop
pop
idivl
xor
adc
mov
pusha
and
int
pop
shlb
xlat
bound
inc
add
aaa
orl
or
dec
neg
cwtl
gs
or
jne
cwtl
popf
mov
mov
out
cli
mov
jb
mov
sbb
sub
jmp
lods
xchg
xchg
out
js
jnp
cmp
mov
lods
sub
test
leave
out
cmc
stos
int
pop
lods
cwtl
fisubs
adc
cli
jecxz
inc
inc
rcr
out
pop
fxch
outsb
out
cmp
push
push
jns
sbb
dec
jle
and
stc
les
inc
cmp
cli
xor
scas
movsl
ret
shll
xor
negb
xor
enter
mov
fsts
lcall
scas
stos
jns
sub
out
xor
insl
das
dec
push
popf
xchg
cld
test
and
mov
or
inc
jo
shlb
sbb
mov
pushf
shll
add
jp
jmp
iret
loope
imul
std
cmp
stc
in
icebp
jae
js
or
arpl
push
fisttpl
adc
ret
lds
fcompl
cmpsl
mov
out
js
ret
shlb
add
leave
shlb
ficoml
lock
loop
sbb
addr16
jne
into
out
adc
mov
bound
sub
subl
xor
out
cmpsl
data16
jns
cmp
dec
pop
les
loop
or
xor
fists
sti
aas
clc
jl
inc
cmp
mov
icebp
iret
xor
out
pop
out
cmpsb
or
int
jmp
daa
arpl
lea
mov
sbb
movsb
dec
push
test
xchg
xorl
pop
in
scas
je
mov
out
sbb
push
leave
popa
ficoms
shr
ljmp
and
sbb
sahf
scas
stos
cmp
icebp
jp
cmpsb
jne
icebp
mov
jecxz
jbe
cld
xor
enter
jno
outsl
test
roll
repnz
adc
push
or
daa
and
jle
pop
dec
jns
movsl
aad
popa
shlb
cld
mov
pop
mov
leave
cmp
cmc
cwtl
ljmp
add
shll
fs
jne
jmp
pop
enter
into
xlat
add
mov
adc
repnz
fdivl
std
or
ret
xchg
fs
xor
mov
ljmp
dec
lods
int3
ljmp
xchg
xchg
mov
cmp
ljmp
jns
mov
pop
and
daa
pop
rorl
push
xchg
cmpsl
cld
lods
imul
call
cmpsl
mov
dec
xchg
xchg
out
cmp
jo
out
xchg
lods
pop
in
mov
sub
push
jle
sbb
or
jnp
and
movsl
push
dec
cmp
xchg
dec
mov
or
iret
cli
addr16
shr
iret
inc
lods
or
testl
adc
lea
into
arpl
cmc
xor
pop
out
test
lea
jbe
mov
cmpsl
xchg
and
test
inc
out
sbb
loopne
nop
int3
mov
dec
add
lock
mov
sbb
mov
lock
pop
inc
jl
arpl
adc
inc
mov
pop
xor
rcrb
jo
jge
scas
ja
outsb
int
data16
dec
mov
jno
inc
cmp
xor
rcll
dec
xor
call
es
outsb
int3
stos
out
roll
sbb
mov
dec
sbb
add
ds
xorl
jne,pn
mov
lret
jecxz
adc
mov
scas
imul
mov
cli
sarb
shrl
flds
sbb
xchg
lcall
outsl
into
aaa
push
xchg
int
jmp
mul
pop
into
aaa
stos
jnp
cmp
mov
sub
mov
cmpb
mov
stos
movsl
fists
or
sbb
sahf
or
movsb
pop
pop
pop
pop
jg
dec
push
xchg
cmp
jg
push
mov
gs
pop
ret
mov
rclb
jle
or
adc
lret
and
or
add
sub
xlat
and
jl
or
push
in
pop
jno
clc
iret
scas
mov
jl
ds
mov
jg
push
call
cmp
inc
test
jl
inc
jle
movsl
test
addr16
std
and
or
sbb
sub
lock
pop
ja
dec
mov
mov
lcall
imul
fstpl
int3
inc
cmp
adc
fisttps
cmp
sarb
inc
xor
ja
int
stos
xor
call
loope
test
fucom
enter
mov
les
mov
cs
bound
std
adc
mov
jne
mov
inc
pop
fists
dec
pop
es
insb
adc
ljmp
xchg
xchg
fdivl
lret
test
inc
xchg
lret
xchg
xchg
push
jae
loop
jle
iret
repz
and
cmpsb
push
jo
mov
mov
lret
out
jl
jle
and
fs
mov
aam
mov
ret
sub
xchg
jne
in
adc
sbb
jne
jg
jnp
pop
in
jb
mov
mov
cmp
pusha
lahf
and
push
jl
or
inc
or
sahf
popa
push
push
fsincos
scas
pop
sarb
xchg
in
lret
xor
mov
xor
jne
pop
xor
xchg
xor
xchg
jne
inc
sbb
xchg
pop
enter
xchg
in
add
jg
movl
lea
fwait
push
pop
dec
pop
or
mov
pusha
sarl
pusha
push
mov
add
jecxz
shrb
push
inc
sub
cmpb
sahf
dec
dec
out
inc
or
icebp
mov
imul
mov
dec
sbb
cld
cmp
sbb
sbb
movsb
fiadds
cmp
cmc
aam
mov
mov
jl
sbb
sbb
mov
cmp
mov
addr16
mov
pop
jmp
in
shrl
inc
dec
sti
dec
pop
dec
xchg
inc
mov
pop
fldcw
adc
pop
loop
lret
add
inc
outsb
in
cmp
cs
xchg
in
add
mov
int3
push
ret
adc
sbb
jmp
cmp
stos
out
ret
jecxz
adc
lds
inc
pop
subl
in
pop
inc
outsl
mov
sub
rcrb
add
dec
xor
scas
out
mov
lea
inc
inc
lods
testl
or
jecxz
push
add
roll
inc
cmc
rcrl
pop
fs
test
fdivl
fwait
les
out
loop
sbb
fwait
stc
push
cs
xor
stc
ret
and
jg
pushf
sub
mov
and
outsb
and
or
push
bound
xchg
mov
push
adc
jno
jecxz
fisttps
pop
xor
pushw
test
mov
jae
testb
std
mov
push
insl
out
inc
ds
inc
cmp
mov
mov
loopne
rorl
sbb
cmp
xor
dec
sar
and
ror
xchg
jne
sub
and
gs
jo
test
mov
xor
icebp
pushf
push
scas
pop
fs
jle
rcl
test
in
stos
int
lds
xlat
daa
daa
adc
ljmp
loope
outsl
test
inc
cmp
xchg
fwait
sub
bound
sub
pop
sbb
in
and
sub
enter
sub
xchg
push
xchg
stos
cmpsb
push
pop
hlt
jmpw
push
sub
mov
fmuls
or
aam
test
push
mov
xor
jmp
lods
jmp
and
pop
xchg
or
jge
mov
jge
pop
icebp
adc
inc
aas
lret
push
lret
inc
cmp
sahf
clc
loope
jle
ds
repnz
sbb
sub
jge
in
clc
popf
adc
dec
and
sub
inc
aam
cmpsl
cs
lcall
cmp
push
mov
inc
frstor
into
mov
cmpsb
inc
daa
ds
xor
movsl
loope
dec
dec
iret
sub
sbb
lahf
lea
testb
lods
cmp
xlat
xor
xchg
in
fs
fwait
andl
daa
add
shlb
pushf
int3
push
and
imul
xlat
in
or
incl
addr16
loope
ja
insl
bnd
cmp
fisubrl
mov
fstl
sbb
mov
push
jp
insl
imul
pop
mov
push
sti
xor
ja
cs
mov
bound
add
jg
xchg
stc
icebp
rclb
push
push
mov
mov
dec
std
je
iret
popa
clc
pusha
lcall
mov
test
scas
out
fisubrs
push
or
test
pop
cld
dec
xchg
xchg
xchg
insb
sahf
fwait
inc
inc
and
jg
sbb
mov
mov
lods
int
mov
sbb
jmp
ljmp
add
mov
call
adc
stos
fmull
jbe
test
test
pushw
fdivs
dec
stc
out
hlt
int3
pop
ret
xchg
fsubr
js
sbb
test
cmp
lods
mov
xchg
dec
mov
in
out
out
cltd
shl
push
add
sub
xlat
pop
xchg
mov
enter
or
pop
daa
cltd
ret
scas
jns
outsb
lds
das
outsl
in
outsb
gs
cwtl
movl
or
or
scas
lret
scas
inc
pop
jecxz
mov
fstpt
mov
js
sarb
mov
inc
fistps
rolb
outsb
daa
test
rorb
jne
push
jb
fs
sete
sar
xchg
inc
mov
or
cmp
jg
bound
lea
xor
cmc
xor
jne
bound
adc
movsb
lea
and
iret
add
adc
flds
xor
loop
nop
mov
es
cmp
cmp
push
in
cmpsl
add
mov
icebp
inc
jno
sti
fbld
fisttpll
stos
aaa
inc
or
in
mov
sbb
push
mov
pushf
mov
cmpsb
inc
add
add
xchg
jnp
sub
das
cmp
call
xchg
and
rorl
arpl
jl
mov
cmp
pop
add
sub
pop
xchg
push
repz
leave
xchg
int3
cli
jae
loope
dec
push
insl
test
xchg
jl
fwait
lock
jae
xor
std
sub
cmp
out
jbe
jg
sbb
out
rorl
cld
out
or
sti
fisubrl
add
rcll
dec
outsb
aam
inc
xchg
fidivrs
mov
push
in
or
test
enter
mov
xor
rol
jge
cmp
mov
fnsave
jg
stos
hlt
add
out
mov
xchg
das
mov
xchg
popa
xor
flds
cmp
pop
rcl
pop
sub
and
jno
aas
into
cwtl
movsb
test
cmp
pop
mov
ss
push
pop
sub
loop
popa
loope
cltd
xchg
xor
jle
ds
and
rcrb
sub
and
mov
xor
jns
lods
imul
test
cwtl
sbb
jne
lret
rcrb
loopne
jp
sub
pop
push
dec
imul
xchg
in
repnz
outsl
push
pop
mov
cmpsl
std
cmpsb
je
sub
call
sub
push
add
rorb
pushf
pop
pop
inc
xor
sub
sarb
decl
fisttps
lods
mov
lcall
mov
lret
lods
rolb
jl
test
insb
mov
cmp
mov
orb
xchg
dec
jne
das
sub
mov
dec
test
push
jle
pop
lret
inc
inc
adc
inc
icebp
or
inc
adc
fiadds
jge
pop
arpl
mov
sub
sbb
push
lret
dec
pop
shll
pop
in
cmpsl
jne
push
and
addr16
ret
pop
lods
aas
and
mov
fsub
ss
mov
and
icebp
mov
adc
pop
push
and
mov
into
jecxz
mov
fsubl
jp
aam
das
push
data16
pop
and
pusha
and
ja
sahf
pop
dec
scas
and
sub
cmp
xchg
pushf
dec
or
push
inc
inc
stc
xor
das
pop
jo
in
xchg
lds
adc
dec
add
adc
imul
test
and
inc
dec
ds
rcrl
outsl
and
aas
pop
enter
mov
or
xchg
mov
pop
jp
jle
inc
pop
fiadds
inc
rcrl
cmp
push
fsubrl
mov
lahf
xlat
fmul
enter
xchg
and
jb
inc
rorl
xchg
mov
mov
lret
mov
lods
ror
mov
mov
negl
nop
in
call
setl
cltd
cmp
jmp
jo
dec
icebp
je
xor
sbb
add
mov
fiadds
fwait
dec
test
in
mov
adc
imul
xor
hlt
stos
dec
or
pop
push
add
inc
popf
addr16
mov
sbb
scas
ds
xor
inc
push
cmc
mov
mov
lret
dec
cmp
dec
sub
mov
iret
aad
mov
dec
add
xchg
sti
push
ss
aas
inc
cli
and
shrd
daa
or
mov
mov
xor
add
sbb
cmp
into
mov
cmp
cmp
cmpsl
gs
adc
enter
cmc
mov
xchg
and
inc
gs
push
cltd
int
push
jle
sub
or
fcompl
dec
sarb
xchg
stos
sbb
ss
adc
push
lock
in
mov
imul
test
call
mov
out
jo
cwtl
push
xor
cmp
sub
mov
mov
lcall
cmp
mov
std
xor
jo
loope
fcmovnu
push
arpl
addr16
and
pop
pop
mov
stos
mov
adc
pop
inc
test
ds
bound
scas
icebp
add
sar
dec
jnp
xlat
jmp
scas
lcall
lahf
cmp
leave
mov
sub
repz
outsb
fwait
mov
mov
movsl
sub
and
enter
dec
mov
dec
push
sbb
pusha
insb
rolb
cmp
cwtl
jno
lcall
pushf
mov
mov
dec
nop
cmp
cmpsl
aam
jge
in
ljmp
sub
or
movsl
mov
lods
shll
movl
shlb
push
idiv
enter
lods
pop
push
aas
sbb
data16
mov
das
insb
mov
sbb
mov
int3
repz
pop
jno
loop
int3
dec
inc
adc
cwtl
cmpb
mov
int3
in
ljmp
ds
adc
mov
int
jae
lea
out
xlat
adcb
insb
mulb
xor
jbe
inc
fcmovnbe
add
je
loop
cltd
in
pop
dec
out
push
fwait
dec
xor
xchg
xchg
inc
cmp
cmp
add
mov
pusha
fmull
test
sbb
icebp
mov
mov
sbb
sub
sbb
add
leave
daa
rcrb
push
enter
aas
mov
mov
push
dec
push
pusha
inc
in
repnz
test
in
adc
cmp
and
cltd
pop
add
inc
push
push
sbb
sbb
ltr
push
dec
test
inc
xchg
js
subb
lods
cmc
push
push
xchg
jo
lret
xor
into
sub
int
int
int
stos
ljmp
sbb
mov
cmp
mov
mov
mov
gs
and
jno
mov
jne
pushf
mov
addr16
or
mov
inc
mov
inc
push
mov
lock
popf
mov
mov
jae
pop
pop
mov
lret
mov
cmp
push
dec
dec
dec
cs
out
xchg
pop
lds
add
addb
mov
fldenv
push
pop
nop
lods
and
imul
incb
mov
insl
mov
ja
sahf
jae
or
adc
jne
or
dec
mov
and
ret
xchg
das
out
push
push
add
sbb
sub
jb
insb
lods
cmp
movsl
mov
sub
aaa
xchg
sub
scas
ret
push
das
sbb
lahf
xchg
xor
or
push
or
adc
dec
jg
ds
xchg
pop
xchg
push
inc
push
inc
fldt
mov
xchg
mull
repz
sub
mov
mov
out
xor
dec
loope
das
cld
lods
iret
and
out
lea
mov
jae
rorl
fs
je
mov
jbe
call
or
mov
mov
test
cltd
js
aas
call
sti
or
mov
dec
sub
lret
andb
test
int
xchg
add
fsubrp
add
push
dec
sub
js
jp
popa
mov
daa
aam
or
jmp
imul
sahf
jl
xor
push
decb
push
mov
testb
mov
lret
lahf
cmp
test
mov
add
cmp
push
cli
dec
fimull
ja
xchg
dec
insl
lods
repnz
or
mov
inc
scas
jb
mov
js
pop
pop
dec
lods
push
add
arpl
mull
mov
mov
gs
adc
shufps
push
add
sti
or
iret
adc
call
popf
pop
int
jl
scas
fcmovnu
rcrl
jecxz
push
lret
mov
pop
or
sub
hlt
mov
mov
sti
mov
frstor
dec
sbb
and
mov
call
scas
inc
ja
jmp
inc
xor
sbb
pop
call
ja
fstpt
jle
pusha
push
or
iret
psllq
add
int3
mov
mov
lea
sub
xchg
jle
sbbb
jbe
ror
sarb
sbb
pusha
lods
or
sbbb
fcmovu
cmpsb
iret
movsl
cmp
orl
movsb
and
cmp
xor
data16
pop
scas
or
outsb
scas
xchg
scas
notb
or
cmc
scas
xchg
lahf
sub
mov
cmp
mov
es
js
sbb
roll
or
mov
fsubp
fiadds
pop
dec
and
cld
dec
ss
lods
mov
or
ret
mov
fildll
jmp
int
and
lret
sbb
sub
dec
fisttpl
adc
aam
lock
in
lock
inc
lods
push
ljmp
jmp
xchg
push
jbe
lods
cmpsb
int3
cmc
mov
push
add
jle
mov
mov
test
or
xchg
mov
test
jge
or
lcall
outsl
mov
or
sbb
rcll
ds
add
sub
into
sbb
mov
push
or
rcll
mov
fmul
adc
scas
lea
fbstp
loop
mov
push
xchg
rcrl
mov
clc
aaa
dec
stc
xchg
popa
mov
cld
cmp
mov
mov
sbb
cli
adc
std
lods
bound
add
ret
cmpsl
lar
mov
mov
sbb
or
jle
sbb
or
cmp
push
push
movsl
mov
push
dec
sub
or
lods
clc
mov
and
xchg
int
dec
push
sbb
cmp
and
leave
push
loop
push
movsb
test
pop
popa
add
pop
xlat
cmp
pop
or
mov
in
pop
mov
dec
and
stos
adc
mov
xchg
mov
mov
int3
cmp
repnz
inc
mov
sub
dec
and
mov
xchg
cmpsl
and
add
test
mov
incb
fmulp
or
xor
jb,pt
movsl
ljmp
stos
js,pt
adc
mov
icebp
iret
std
cmp
divl
jb
lods
and
aad
cltd
data16
orb
fs
pusha
ds
mov
push
shl
clc
cmc
adc
sbb
ret
mov
mov
pop
call
sarl
adc
pop
in
shlb
xchg
lcall
lret
mov
lcall
mov
mov
lods
fwait
inc
ljmp
test
xor
or
xchg
and
call
rcrb
lods
xlat
out
mov
mov
jb
lahf
pop
pop
inc
loope
roll
pusha
sub
lahf
mov
enter
xor
aam
add
lock
mov
into
inc
pop
add
fcompl
cmpsl
xchg
mov
push
mov
push
mov
movsb
xchg
add
jecxz
popf
cwtl
push
lock
xor
sti
jae
into
add
repz
nop
fdivs
mov
pop
aad
xchg
test
imul
sbb
ljmp
shlb
in
test
js
push
add
jbe
jle
pop
lea
xchg
mov
rclb
test
add
enter
shrl
pop
xchg
sbb
pand
test
rcr
mov
sub
inc
and
sbb
mov
mov
mov
inc
adc
outsb
fisubl
push
loope
mov
sub
aad
inc
xlat
sub
lds
inc
inc
repnz
push
or
dec
sbb
and
lcall
out
mov
and
xor
pop
sub
call
sbb
and
pushf
enter
cmp
in
lret
in
testl
pushf
mov
mov
negl
daa
loope
clc
sarl
enter
mov
adc
arpl
test
neg
cmc
cmp
mov
xor
jmp
jae
cmpsl
ljmp
shlb
xor
dec
fmull
sbb
add
add
and
xchg
clc
stos
jno
insb
jo
adc
decl
jge
push
sbb
mov
fisttps
outsl
std
jnp
cmp
sub
pop
mov
ret
daa
fldt
mov
pop
cmp
dec
in
imul
push
mov
and
addr16
test
push
mov
push
in
mov
stc
xchg
loop
sbb
mov
cmc
imul
cmp
jns
and
ffreep
and
sbb
rcr
nop
fcompl
das
cld
repnz
repz
pop
fcoms
mov
mov
pop
xlat
cld
imul
xor
bound
out
inc
or
sub
push
push
mov
mov
int
sub
stos
pop
ret
mov
pop
cmp
and
lock
add
xor
nop
dec
mov
jnp
fucomi
mov
inc
dec
ds
enter
pop
jno
cli
and
or
stos
aas
int3
dec
insb
pop
add
cmp
ret
mov
jle
xchg
xchg
push
mov
shl
daa
add
fucomip
divl
imul
jl
pop
and
daa
andb
push
mov
jge
adc
aaa
jge
mov
scas
jle
aad
inc
aaa
jb
js
mov
xor
test
sub
dec
jg
inc
pusha
xchg
or
mov
pushl
stc
fpatan
cmp
xchg
sbb
push
je
jge
pop
jle
in
add
cmp
mov
fidivrl
xchg
sbb
lea
or
fisubl
mov
push
outsl
xor
imul
jnp
fnsave
hlt
loopne
cmp
adc
dec
hlt
adc
es
stos
add
fistps
pop
pop
ror
jp
mov
test
mov
cmpsl
sub
div
insb
das
push
aaa
scas
jmp
mov
fs
imul
xor
mov
fnstcw
xchg
in
xor
pushl
bound
loopne
fisubrl
popa
push
std
ss
add
push
fdivr
inc
cmp
mov
mov
mov
lret
jecxz
mov
scas
std
nop
pushf
jecxz
add
cmp
and
test
in
xchg
das
das
decb
mov
mov
loope
adc
push
dec
adc
xchg
jno
jo
repz
cli
out
xchg
mov
shrb
sub
mov
bound
mov
lea
add
push
push
movswl
rorb
xchg
xor
shl
add
cmp
jmp
ljmp
les
xlat
jle
pop
div
icebp
movsb
enter
lds
push
andl
mov
stc
or
adc
push
sub
call
add
xchg
mov
sub
fwait
jle
rcrb
sbb
push
adc
mov
popa
lret
fdivl
cmpsl
fsubrl
jecxz
es
cld
lds
imull
adc
dec
sti
repz
out
orb
fs
lret
aaa
jp
test
hlt
mov
stos
mov
or
sbb
dec
push
hlt
jp
stc
shrb
inc
imul
mov
and
or
jle
lock
mov
das
mov
outsb
movsb
add
rorb
bound
sub
loop
movsb
ret
sbb
loop
lock
test
mov
test
jg
inc
filds
notl
and
cmpsb
ja
mov
inc
pop
lahf
push
push
outsl
or
jg
push
iret
int
jp
cmp
dec
sub
fdivs
ficoml
inc
imul
add
cmc
loopne
pop
ret
outsb
int3
scas
push
add
loopne
or
out
pop
cmp
adc
jno
pop
mov
int3
dec
mov
popa
ficompl
xor
xchg
scas
jmp
idivb
dec
nop
fnstenv
mov
mov
xchg
sti
inc
dec
push
shrb
das
call
dec
cmpb
daa
movd
pop
jb
mov
xor
enter
adc
pop
jecxz
jle
sbb
in
jmp
dec
test
int3
xor
add
sahf
jo
sub
adc
daa
xchg
jbe
xchg
mov
dec
jmp
cs
loop
repnz
inc
loope
and
push
jle
lret
add
mov
mov
cs
stos
mov
jb
mov
cmp
xchg
mov
pop
leave
movsl
inc
adc
andb
xor
or
outsl
pusha
lret
inc
cmp
mov
hlt
shlb
outsl
rcrl
xchg
and
test
cmpsl
rclb
js
pop
sbb
aaa
xor
in
adc
dec
call
inc
aad
add
test
in
sbb
add
jno
cmp
inc
dec
cmp
movsl
stc
lock
lds
addr16
enter
rep
aas
ja
pop
adcl
inc
fnstcw
movsl
jg
sub
scas
xor
loop
daa
in
aad
shlb
gs
out
dec
sahf
insb
enter
cli
fisttpll
shl
fdivr
rclb
lods
dec
mov
shlb
xchg
arpl
rcll
xor
sub
lahf
adc
jmp
push
int
sbb
test
push
dec
cmp
pop
or
push
sbb
jle
push
cmp
outsl
in
inc
sbb
fisubl
incl
shl
adc
lds
xchg
test
adc
dec
cwtl
xor
mov
mov
sbb
inc
push
es
adc
ss
pop
adc
std
out
inc
mov
or
stc
push
xchg
push
je
cmpl
into
xchg
ret
imul
mov
pop
rorb
pop
mov
scas
fs
or
movsb
repz
outsb
mov
fnstenv
repnz
lcall
jns
mov
push
gs
cmc
std
test
addl
xchg
lods
cmp
jecxz
inc
sbb
jno
xchg
je
js
scas
neg
fdivrl
mov
jmp
ret
add
ljmp
ljmp
les
sbbb
pop
mov
mov
lds
dec
mov
fstps
out
loopne
mov
lret
jno
dec
in
mov
cmp
push
leave
loopne
mov
lret
ds
insb
mov
shl
fucom
adc
aam
jbe
push
and
add
into
inc
pop
daa
cs
stc
jg
push
hlt
loop
push
cmp
or
scas
out
inc
or
fmul
lcall
test
mov
outsl
push
outsl
pushf
cmpsl
push
arpl
mov
mov
jge
xchg
std
cmp
fiaddl
sbb
xchg
push
push
je
stos
xchg
jae
push
arpl
or
movsl
push
popa
xlat
movsl
cmpsl
inc
add
or
mov
or
sbb
insb
pop
daa
cwtl
inc
add
sbb
sbb
movsb
ret
pop
into
add
inc
cld
dec
rcrb
movsl
lock
xchg
out
inc
les
lds
mov
xor
cwtl
in
xchg
adc
ss
push
mov
xor
xchg
pop
cmp
add
jb
mov
test
mov
xchg
in
popf
scas
pop
out
push
aad
mov
cwtl
cmp
add
scas
adc
pop
stos
popa
imul
xchg
jno
popf
lret
dec
test
pusha
sub
sahf
inc
dec
push
push
mov
scas
jns
xor
or
repz
lcall
imul
insb
into
and
incl
fmuls
cmp
xor
imul
es
xor
std
andl
insl
dec
rorl
mov
sbb
sub
mov
xor
xor
jbe
sbb
adc
or
outsl
fwait
inc
test
jge
pop
sub
sub
mov
sub
fisubs
repnz
cli
aad
scas
mov
pop
xor
mull
js
mov
into
lock
or
das
fcoml
cmc
pop
cltd
enter
and
pushf
pop
xchg
and
add
xchg
cmp
je
pop
lds
jp
call
mov
jecxz
fdiv
ret
sbb
xor
xchg
pop
jo
inc
mov
cmp
inc
lahf
les
std
fwait
jl
inc
aas
pop
scas
mov
push
movsb
stos
andl
xor
cmpsl
ficoml
sbb
inc
andb
jb
stc
in
test
dec
cmp
ja
imul
ja
scas
dec
push
mov
negl
mov
inc
push
in
mov
ljmp
adc
js
push
repnz
lock
fdivrl
cmpsb
xlat
movsb
adc
add
rorb
shlb
dec
dec
loopne
cmpl
cli
insb
out
into
jp
cwtl
les
gs
jmp
hlt
push
pop
aad
insb
xchg
dec
push
mov
xchg
inc
psadbw
out
decl
ret
ret
xchg
rcll
bound
negl
cli
pop
lahf
dec
xchg
mov
lret
loope
or
pop
mov
push
jecxz
jecxz
xor
mov
lock
ret
mov
or
push
fst
inc
rol
dec
ret
sbb
adc
in
movsb
inc
mov
icebp
xchg
mov
fsubrs
aas
in
mov
cmpsb
iret
fs
sbb
cmc
sahf
std
inc
imul
cld
inc
lods
test
inc
nop
dec
popa
and
xchg
inc
in
imul
lret
adc
hlt
and
or
lods
arpl
mov
stc
jge
out
xchg
push
rorl
ja
imul
mov
movsl
adcl
loop
sub
add
ret
xchg
jle
or
or
sbb
adc
mov
dec
sbb
in
dec
adc
push
mov
jb
push
xchg
mov
pop
ret
test
sbb
lea
or
sub
jne
leave
dec
imul
mov
push
sub
dec
es
mov
aad
push
pushf
enter
lret
shl
mov
hlt
dec
repnz
scas
pop
xchg
mov
cmpsb
les
mov
dec
mov
dec
xor
mov
cmp
inc
test
or
pop
or
push
mov
popf
js
cmc
inc
add
mov
jnp
mov
dec
cltd
xor
jg
mov
mov
ss
pop
xor
out
adc
jmp
pusha
fs
mov
repnz
loopne
test
dec
mov
adc
movsl
in
lret
jns
aad
or
mov
cmp
sti
inc
jecxz
lret
mov
outsl
xlat
and
adc
test
and
jmp
test
lea
addr16
stos
call
mov
iret
fstpl
and
xor
xorl
cmc
sbb
cmpsl
push
sub
adc
add
push
iret
and
repnz
lock
add
std
jle
rol
push
push
adc
lods
sahf
test
loopne
xchg
inc
insb
lds
push
xlat
ja
inc
scas
and
sbb
sub
ja
cmpsl
xor
pusha
mov
test
cli
lcall
mov
add
mov
ljmp
add
les
data16
shlb
mov
jne
or
sahf
sti
dec
mov
push
lds
clc
mov
icebp
cmc
ss
ss
cmpsl
mov
push
fs
dec
aas
lds
push
cltd
nop
push
xlat
pusha
add
and
adcb
sbb
xor
dec
push
inc
push
into
and
xor
push
mov
jge
mov
leave
sub
mov
dec
out
dec
xchg
iret
and
dec
es
mov
adc
mov
adc
insb
push
mov
bound
lea
push
aas
inc
ret
sahf
outsl
ds
dec
shlb
sub
cmp
sub
rcll
lods
xchg
adc
fwait
js
xchg
xchg
adc
imul
xor
push
icebp
insl
mov
xchg
fimuls
je
jge
jl
mov
mov
mov
aaa
or
popa
jns
fsubp
repnz
outsb
or
mov
cmp
std
jo
cmp
in
es
pop
push
test
fucom
aad
or
mov
jle
movsb
arpl
lcall
insb
inc
dec
movsb
sub
addl
mov
call
scas
adc
lret
cmp
mov
ljmp
inc
jnp
xchg
ds
aaa
addr16
flds
jnp
sub
movsb
or
pop
decb
aaa
in
xchg
scas
stc
pop
fs
mov
dec
andb
daa
cmp
and
inc
sahf
jmp
pop
int
and
cwtl
fs
fcompl
sti
push
int3
iret
nop
out
cmp
and
incb
out
mov
adc
cmp
jne
sub
test
jl
bound
add
jbe
fmulp
out
ss
or
lahf
inc
inc
sub
cmc
lock
je
sbb
fnstenv
cmpsb
imul
mov
add
test
push
pop
scas
or
add
jecxz
loopne
jb
lret
or
out
mov
jnp
stos
add
das
xor
xchg
popa
stos
xchg
jp
insb
das
fucom
cmc
inc
insl
jnp
and
mov
flds
in
jo
push
lret
imul
or
les
jnp
mov
xlat
ja
dec
sub
lcall
js
ja
or
call
xchg
loope
arpl
or
xor
jo
int
or
dec
cmp
lds
sahf
push
pop
adcb
pop
mov
cwtl
fldt
sbbl
je
subb
cmp
hlt
cltd
aas
dec
out
mov
jg
and
add
mov
adc
pop
sub
mov
cmpsl
pop
negb
mov
ja
std
sbb
sub
sub
mov
xchg
cmp
add
cmp
inc
ja
cmp
fsubrl
jle
test
lahf
jg
popa
adc
nop
int
xor
pop
lds
xor
and
sub
das
mov
daa
hlt
cli
or
sbb
jl
inc
push
xchg
les
lret
fwait
sbb
cltd
enter
cmp
mov
mov
das
pop
jge
mov
xor
je
pop
arpl
and
loopne
inc
xchg
jmp
dec
jne
xchg
in
push
cmp
push
cmp
mov
mov
sahf
out
imul
pop
xor
in
push
arpl
imulb
pop
shrl
popa
jae
jecxz
aas
mov
jmp
mov
pushf
sbb
idivl
ret
mov
lea
xchg
stos
mov
in
pushf
xor
fcompl
out
push
add
dec
mov
jnp
pop
adc
test
fcomp
lahf
adc
jecxz
std
aad
sbb
jecxz
sbb
xor
xchg
jmp
xor
add
fs
mov
fwait
das
cmp
mov
sub
mov
scas
notl
aas
outsl
cmpsl
movsb
jg
mov
mov
cmpsb
adc
mov
xchg
mov
lret
mov
enter
rorb
inc
outsl
sub
mov
xchg
stos
jbe
in
out
out
in
clc
fmull
push
mov
xor
add
lret
sbb
dec
mov
xor
mov
cmp
xor
xor
xor
adc
pop
loopne
fimull
mov
mov
cmp
mov
psubd
jno
hlt
jo
and
or
imul
jmp
test
fsubl
frstor
sbb
gs
jmp
ss
enter
adc
std
stos
cltd
inc
arpl
mov
in
cmp
push
push
inc
cltd
cltd
xchg
or
cmc
in
int
iret
ret
jb
push
daa
xor
cmp
jmp
and
and
cmp
mov
push
lcall
fnsave
mov
xchg
stos
hlt
or
push
aam
mov
adc
and
stos
or
mov
inc
pop
mov
push
and
loopne
int3
xor
push
xor
xchg
rcll
loop
add
loop
sub
pop
xor
sub
rcll
pop
xchg
orl
popf
sbb
add
hlt
pop
jb
mov
cmp
mov
jnp
mov
in
jp
cmpsb
adc
movsl
pusha
dec
stos
es
add
pop
int3
add
and
test
push
in
aaa
jns
mov
jns
int
mov
imull
fiadds
sar
inc
adc
mov
sub
mov
xchg
mov
xchg
cmp
es
arpl
into
cmc
cmc
out
mov
sub
test
imul
and
fnstcw
inc
xor
pop
ss
imul
insl
cmp
jmp
imul
cmpsb
or
sbb
adc
arpl
pop
cs
mov
mov
repz
pop
loopne
aad
les
gs
xor
mov
dec
stos
cmp
jge
adc
adc
jle
std
jmp
xchg
imul
mov
imul
icebp
sub
sbb
mov
pop
adc
in
lods
sti
push
xchg
jo
cmp
push
xchg
cmpsl
sub
inc
mov
xor
loope
pusha
aaa
inc
sti
adc
clc
imul
add
cwtl
dec
out
xor
dec
dec
sub
pop
lods
adcl
push
push
ja
and
xchg
push
dec
xor
icebp
mov
xchg
fisubrl
loop
xor
movsb
jl
and
jg
dec
push
dec
hlt
jb
cmpl
mov
daa
sbb
in
lahf
aad
push
negl
adcb
fldl
fmul
popf
gs
imul
inc
cs
jne
loop
lods
js
push
jge
xor
mov
stos
add
cmp
cld
movsl
dec
mov
jns
test
lret
mov
cld
dec
mov
push
aad
in
and
xchg
in
or
in
pop
ret
push
adc
add
ret
sarb
sarl
push
movsl
mov
xchg
or
and
js
and
clc
aas
push
add
fistpl
jns
fldcw
push
cmpsb
ss
jo
push
xchg
add
mov
and
adc
out
xor
adc
mov
iret
mov
sti
cmp
cltd
dec
sti
sbb
stos
xor
push
ljmp
jne
xchg
aam
fsubs
or
das
xor
ret
cld
les
mov
fs
scas
pop
xchg
sub
lret
insl
pusha
push
movsl
jge
push
sbb
mov
add
insb
push
es
stos
xchg
insl
sub
push
push
push
dec
das
shll
lds
rol
push
jmp
daa
jge
and
sbb
push
jmp
mov
aas
dec
in
cli
or
xor
jle
xor
lahf
mov
aas
adc
dec
into
leave
push
je
out
mov
xchg
mov
inc
popa
popa
iret
inc
fsts
mov
ds
fs
or
push
add
clc
pop
and
xchg
pop
jge
subl
push
movsb
pop
sti
xchg
mov
pop
mov
inc
ds
mov
loope,pn
adcb
pop
dec
sbb
lods
movsb
fisttpl
sbb
push
add
lea
leave
xadd
dec
aas
and
jnp
iret
imul
and
jle
ds
loopne
dec
xorl
pop
insb
test
mov
add
addl
imul
xchg
loopne
mov
dec
int3
idivb
cmp
in
xor
sti
enter
mov
fs
fmull
xor
neg
jp
or
loopne
mov
jbe
add
dec
xchg
inc
mov
sub
cli
iret
into
out
mov
sbb
sub
ret
jmp
cld
iret
hlt
lods
cld
xlat
dec
xchg
insl
subb
or
into
inc
pop
push
dec
jge
sti
add
aad
mov
clc
dec
pop
rorb
and
dec
mov
jge
stos
mov
xor
lcall
ret
mov
jp
xor
mov
or
jmp
pop
mov
sub
cmp
pop
aaa
std
cld
pop
daa
mov
hlt
hlt
mulb
insb
push
out
loop
popf
icebp
mov
inc
dec
push
xchg
hlt
xlat
in
popf
icebp
inc
es
mov
push
xlat
adc
call
aam
xor
sarl
add
aad
sub
inc
mov
lcall
sbb
mov
test
cwtl
mov
testb
stos
popa
adc
lock
push
lods
je
roll
inc
aad
adc
inc
xchg
cmp
sbb
pop
add
into
and
and
ss
mov
jns
imul
sahf
repnz
test
xchg
jns,pn
mov
push
xor
add
jo
repnz
ret
jge
cs
outsb
test
scas
cmp
jne
clts
test
or
imull
ss
cld
or
movsb
lret
add
push
mov
mov
xor
sbb
or
roll
rcl
inc
in
adc
sbbl
sbb
cmp
cmp
jb
jne
xchg
add
sbb
mov
push
outsb
xchg
in
inc
movsl
pop
insb
inc
jno
je
stc
hlt
xchg
mov
adc
das
jno
jg
outsb
sbb
repz
cmp
imul
cmp
loopne
dec
mov
jae
cmpsb
and
mov
scas
test
enter
inc
or
push
popa
jbe
cmp
add
adc
mov
xchg
shll
mov
add
ret
mov
pop
xor
mov
pop
push
mov
movsl
pop
inc
les
es
test
fdivrl
shll
xor
jae
adc
enter
xchg
pop
in
in
pop
push
pop
leave
sbb
cmp
jnp
loope
pop
fistpll
pop
jle
fwait
stc
cmp
stc
lea
loope
cli
mov
outsb
int3
add
or
sbb
jge
cs
xchg
loope
push
sub
andb
add
mov
loop
bound
test
out
aam
or
pop
dec
loopne
xor
or
je
aaa
test
push
fidivrs
push
mov
pop
sbb
pop
cli
cmp
ja
or
orb
ljmp
sarb
mov
sub
adc
pop
mull
push
jnp
ret
adc
xor
add
add
cmc
ljmp
test
dec
xor
dec
retw
nop
xchg
mov
loopne
or
mov
mov
dec
ret
and
sub
bound
jbe
sbb
in
inc
insl
cmp
jne
jb
xchg
push
mov
mov
push
xlat
xorps
pop
fisttpll
pop
outsl
js
sbb
xchg
cs
cmp
ja
push
and
hlt
sbb
mov
push
aad
adc
int3
mov
ret
inc
sbb
faddl
mov
jmp
and
test
std
fsub
int3
mov
popf
jecxz
adc
ret
mov
and
sbb
shl
xchg
mov
daa
mov
pop
iret
jmp
mov
mov
out
sbb
lods
sbb
insl
or
mov
mov
in
aam
imul
test
mov
xor
arpl
mov
mov
lods
push
int3
fiaddl
outsb
mov
xor
xor
aas
and
inc
add
pop
push
fcompl
loopne
fwait
inc
jnp
jne
rep
cld
cmp
inc
sbb
fnstcw
rolb
clc
fs
test
pop
cmp
push
std
insb
pop
xchg
in
push
mov
in
insb
mov
test
test
orb
and
pusha
stc
out
sbb
shlb
sbb
les
jno
cmc
nop
lcall
adc
rcl
mov
cmp
nop
cmp
xchg
out
mov
cmpsb
jo
sub
inc
and
scas
adc
repnz
xor
rcr
cmpsl
push
mov
xor
and
pop
mull
shlb
cmp
scas
sub
and
or
outsb
movb
mov
jp
outsb
int3
push
incb
cmp
pop
repnz
lahf
shll
jecxz
mov
or
mov
jl
pop
fwait
xchg
icebp
in
out
into
pop
jbe
mov
mov
adc
inc
pop
mov
push
cmp
mov
cmp
gs
pop
iret
fisubrs
mov
jp
out
or
int3
sbb
sbb
push
mov
ret
xor
pop
in
xchg
aad
pop
inc
pop
ds
mov
cs
imul
mov
and
popf
xor
mov
mov
xchg
xor
jp
jno
and
add
out
jl
rorl
and
xchg
sti
push
inc
push
nop
insl
mov
ds
add
and
mov
insl
cmpsl
push
xchg
cmp
out
sub
dec
fucomp
outsl
shlb
popf
pop
sbb
jb
mov
mov
or
xchg
jecxz
les
pop
xlat
and
cmp
lahf
movsb
jl
mov
mov
and
popa
xor
fisttps
out
xchg
arpl
mov
out
jecxz
xor
stos
lock
pop
push
and
int3
dec
xor
sbb
jno
insb
adc
outsb
mov
insb
ss
popa
dec
or
sub
cmp
addl
and
or
or
jno
mov
test
cmpsb
in
rol
sbb
arpl
dec
adc
xlat
sbb
mov
cmp
roll
dec
lahf
lcall
fwait
adc
sub
test
lock
das
pushf
mov
mov
inc
xchg
test
and
mov
lret
xchg
int3
out
mov
push
fs
xor
pop
pop
mov
dec
in
pop
inc
into
mov
cli
sarb
adcl
xor
test
je
push
jge
aaa
xor
xor
mov
cmp
lcall
out
aad
xor
jnp
mov
push
cli
jecxz
cmp
cmpsl
xchg
adc
push
shl
iret
loop
cmovbe
sbb
inc
in
jnp
cmc
cmp
cli
or
mov
ja
mov
push
and
add
bound
lret
mov
pop
cmp
out
jb
jl
js
pop
into
xor
or
in
enter
mov
xchg
les
sbb
orb
je
rcl
in
push
mov
or
outsb
lods
popf
cli
adc
test
adc
fdivrl
xchg
stos
push
pop
mov
jl
mov
sub
cld
fiadds
in
test
xchg
jge
cmp
adc
xchg
aad
pop
jg
test
mov
xor
aam
lods
dec
test
arpl
mov
mov
jae
lock
mov
data16
outsl
lcall
fdivr
lds
repnz
in
sub
mov
jl
icebp
movsb
jp
mov
pop
int3
jp
mov
nop
or
or
repz
mov
mov
push
add
pop
clc
mov
fidivrl
lods
sub
jae
dec
and
or
cmpsb
call
fcomip
xchg
sub
sub
aad
aam
adc
add
mov
pusha
sahf
insl
jp
xor
jns
rcl
xchg
sti
dec
icebp
pop
xchg
jge
cltd
pop
mov
dec
xchg
or
std
jno
pusha
inc
lods
cld
rorb
movsb
xchg
in
cmp
std
push
xor
jl
je
jns
adc
jmp
int3
out
in
ds
insl
push
cmp
pop
xchg
push
repnz
rcrl
test
mov
sbb
insb
inc
mov
test
test
xlat
push
lock
inc
fdivs
out
dec
cmc
iret
ftst
cltd
in
sti
lock
xchg
mov
in
sub
stos
sahf
dec
xor
repnz
test
loopne
es
xor
and
xchg
inc
cmp
sub
stc
rclb
bound
mov
add
lea
mov
inc
inc
aad
add
jbe
xor
fwait
xorb
inc
push
ret
mov
push
notl
inc
jle
jle
in
xor
adc
pop
fiaddl
outsl
cmp
and
dec
and
mov
je
or
fldenv
stc
lods
lret
dec
in
fs
lds
mov
xchg
fstpt
popa
sbb
xor
loope
pop
sbb
jno
pop
add
dec
adc
shll
dec
sub
xor
out
mov
repz
je
and
pop
xchg
cs
popa
mov
mov
scas
mov
cltd
aad
and
repnz
fcomip
in
jnp
push
in
imul
je
dec
fstl
mov
lock
jb
lahf
jecxz
aas
negl
lods
mov
add
pusha
loop
mov
adc
inc
jns
nop
mov
fwait
pop
lds
mov
sti
jecxz
popf
jle
jbe
ja
cmpsl
repz
call
push
addr16
cmp
inc
ret
sbb
subl
push
cmp
jmp
mull
imul
inc
fstps
outsl
push
xchg
cs
sub
mov
mov
aad
mov
adc
sbb
jecxz
xchg
sahf
jo
pusha
push
fs
xchg
lods
lea
mov
mov
xchg
dec
cld
xchg
pop
cwtl
cld
inc
mov
or
jae
jmp
test
popf
sarb
lret
stc
cltd
movsb
hlt
xchg
push
pop
jno
shll
sub
cmp
dec
out
xchg
mov
xor
scas
pusha
sub
lock
sti
test
sti
jg
pop
xchg
jb
push
movsl
mov
xchg
cmp
fwait
cmc
xchg
xor
push
lock
sahf
out
mov
aas
test
inc
int
jge
jmp
in
xchg
out
or
stos
call
and
push
mov
xrelease
mov
in
nop
push
addr16
cmp
push
addb
mov
aad
add
mull
loop
nop
xchg
in
mov
stos
paddusw
jl
stos
add
rolb
sub
cmpsb
bound
outsl
pop
fldcw
cltd
dec
sbb
jmp
xchg
in
mov
dec
outsb
imul
mov
cmp
mov
pop
test
adc
lret
shrb
mov
incl
mov
xor
jp
or
gs
pusha
dec
sti
cmp
or
sbbl
pusha
aaa
push
inc
inc
into
mov
sbb
push
in
test
pop
loope
aaa
dec
adc
idiv
xchg
xor
sbb
mov
add
test
imul
fcomps
mov
sub
std
test
into
or
aaa
xchg
sbb
or
or
pop
mov
imul
add
inc
mov
push
mov
lods
loope
xor
popf
in
push
jge
mov
data16
stos
xchg
ss
js
clc
out
imul
inc
cltd
add
dec
push
xor
jmp
sbb
ljmp
inc
mov
mov
enter
into
call
jno
xchg
arpl
cltd
jb
jno
lods
dec
jnp
xor
mov
jge
in
imul
fwait
push
xor
fisubs
push
xchg
ds
fmull
out
fcoml
jne
fcmovnb
push
mov
and
xor
sub
mov
cmp
dec
and
jmp
stos
sti
jnp
repnz
jo
mov
js
dec
ljmp
mov
mov
push
faddl
mov
pop
daa
mov
push
jne
popf
or
in
xor
fsubp
in
test
cmp
mov
sti
adc
pushf
imul
test
xlat
out
push
hlt
push
inc
sub
cmc
aas
mov
mov
push
mov
cmp
jnp
adcl
lcall
pop
jl
jnp
or
in
pop
dec
jmp
adc
std
jae
adc
nop
xchg
ljmp
mov
sbb
or
mov
add
pop
enter
xor
loop
ret
pop
repz
les
xlat
xchg
xor
loope
adc
dec
add
sub
stos
out
dec
sti
addr16
xchg
or
adc
and
bsr
xor
out
or
outsb
loope
repnz
shr
cmp
ret
pop
scas
mov
ja
repz
jecxz
jmp
pop
mov
xor
and
fstpt
ds
adc
adc
cmp
test
pavgb
pop
inc
mov
dec
imul
xchg
pushf
ret
inc
gs
movb
cld
push
and
data16
mov
or
push
or
inc
mov
mov
sub
gs
push
adc
jg
mov
mull
adc
sub
mov
cmp
psubusb
add
imul
aas
loope
gs
ss
call
out
mov
in
fisubl
xchg
das
imul
les
out
and
pop
lea
test
movsb
push
inc
call
push
xor
inc
dec
add
add
hlt
fistpl
push
jno
lret
xor
ljmp
lret
roll
sbb
ffree
mov
dec
imul
decl
mov
mov
pop
ss
in
push
js
je
inc
sub
ficoml
push
jae
shl
jle
outsl
mov
sbb
cmp
idivb
xor
add
sbb
pop
pop
out
frstor
call
jbe,pt
mov
rcrl
in
sbb
addr16
add
xor
test
sahf
lods
jo
movb
xchg
push
mov
xchg
cmp
jns
jge
in
into
mov
dec
pop
push
mov
ljmp
xchg
dec
dec
or
subl
jmp
jne
sub
imul
es
and
iret
or
xchg
dec
sti
cmp
imul
mov
outsb
adc
rcrl
imul
add
mov
cmp
inc
push
jne
lcall
gs
xchg
nop
xchg
jp
add
mov
mov
push
adc
xor
xor
lahf
jge
add
pop
xlat
mov
dec
pop
jno
into
sub
sub
inc
jnp
mov
fwait
iret
sub
lea
push
sbb
int3
sti
xor
mov
das
test
jb
jne
scas
test
sub
push
or
mov
jno
test
ss
jae
dec
adc
lret
push
xor
jg
add
sub
loopne
mov
xchg
adc
sbb
hlt
dec
es
out
sub
jp
lods
dec
cmp
loopne
inc
jecxz
push
stc
sbb
xchg
mov
hlt
push
inc
mov
ret
sub
negb
pusha
movsl
ret
fldenv
int3
fwait
das
test
pop
mov
xchg
add
mov
shlb
push
xor
dec
incb
insb
mov
and
rorl
and
test
fdivs
xchg
push
pop
lods
jmp
fsubrl
push
sbb
mov
pop
rcll
outsb
je
aaa
or
push
mov
sub
cmp
mov
mov
inc
std
cmp
jmp
xor
popf
popa
nop
lea
push
pop
sahf
cld
sbb
out
push
mov
in
decb
push
dec
push
rcll
fidivs
push
and
hlt
mov
cmpsb
data16
shr
lret
mov
fcom
roll
aaa
mov
cmc
data16
into
inc
fcomip
inc
and
stc
cmp
jns
xchg
jl
test
icebp
pushf
js
or
dec
movsb
mov
inc
addl
jns
jo
dec
test
sti
push
inc
cmp
mov
mov
mov
inc
aas
cmp
lock
dec
in
push
outsb
push
inc
cmp
mov
push
arpl
push
adc
popf
sub
jp
lret
in
fildll
repnz
rclb
ret
sub
jge
movsl
pushf
or
pop
ret
adc
mov
je
xchg
mov
in
and
push
in
push
es
fisubrs
addr16
icebp
arpl
mov
call
mov
cmpsl
pop
adc
push
test
out
lods
out
lea
in
pop
movsb
mov
arpl
cmpsb
pop
cmc
mov
push
add
cmc
fdivrp
jg
imul
aaa
or
fmuls
jg
sahf
sahf
bound
xchg
mov
pop
push
stc
hlt
push
cmpsb
andb
adcl
mov
fdiv
loopne
inc
call
sub
movsl
lea
inc
out
mov
push
test
dec
and
out
add
push
inc
add
repz
mov
sub
fs
cmp
lcall
les
nop
push
adc
xchg
es
xor
inc
addl
jl
xchg
cs
cli
xlat
or
or
hlt
dec
jmp
stc
insl
and
mov
bound
aad
mov
jne
and
stos
sbb
es
mov
cld
dec
stc
sbb
inc
xorl
gs
jle
andb
sub
jl
nop
dec
mov
xchg
and
add
hlt
mov
dec
dec
dec
sbb
sbb
fidivrl
imul
dec
loopne
jnp
jnp
ljmp
jl
clc
push
testl
cmp
les
sub
fnstsw
sub
ficoms
jle
iret
movsb
adc
stos
inc
icebp
or
mov
test
xchg
add
les
call
leave
mov
xor
test
sbb
orl
or
testb
aaa
sub
andb
cli
jl
xchg
pusha
jecxz
and
and
mov
jo
cmp
xchg
pop
stos
push
xchg
lds
mov
push
pop
int
incb
xor
sub
jmp
add
rol
mov
push
sub
dec
stc
or
mov
scas
imul
and
sbb
fistpll
mov
add
es
mov
push
push
xchg
aaa
mov
inc
in
icebp
xchg
push
cmp
and
xor
inc
sti
adc
fildl
push
leave
pusha
push
push
xor
loope
repz
and
call
add
dec
mul
adcb
fstl
repnz
mov
jl
test
ja
ror
and
popf
and
xchg
repz
repz
cs
daa
push
dec
pop
mov
hlt
pop
jns
gs
mov
cmc
test
mov
ljmp
cs
and
sbb
inc
leave
jb
mov
mov
cld
mov
jecxz
and
push
and
enter
mov
shll
push
xor
cmp
xorb
mov
and
xlat
fisttps
jmp
and
adc
fstpt
sbb
out
inc
lcall
xchg
pop
ds
cmp
dec
fld
ljmp
mov
std
jno
rclb
sub
test
add
dec
add
repnz
aad
aaa
lea
packuswb
rcr
pop
out
xchg
or
mov
push
inc
or
mov
shll
dec
lret
sbb
cld
mov
vmaxps
addr16
or
jbe
sbb
add
mov
lods
sti
sar
fldt
xor
inc
add
dec
xor
fistpl
dec
popa
mov
lcall
aas
shrl
mov
ja
lahf
not
scas
out
fcomps
pop
lret
push
popf
mov
jg
rorb
mov
inc
mov
push
jo
or
xor
xchg
insl
fldl
pop
cmp
movsl
pop
test
test
xchg
into
sub
cli
cmp
inc
sbb
es
xchg
sarl
pop
add
lock
int
jb
js
movsl
xchg
sub
jbe
dec
fildl
imul
insl
sahf
sub
lahf
sbb
sbb
push
and
jne
enter
add
cs
sub
cmp
ds
cmp
rolb
test
lods
movsb
jnp
andb
and
mov
push
mov
cmp
ficoml
adc
das
sarl
or
insl
jns
int3
std
push
mov
adc
xchg
mov
gs
movsb
push
pusha
mov
sub
xor
je
mov
pop
xor
mov
pop
pop
or
fs
ja
inc
cli
loopne
repz
pop
pusha
ds
push
push
push
out
or
dec
mov
and
daa
pusha
enter
aas
push
iret
inc
inc
sbb
pop
loop
mov
jae
xor
dec
lea
test
fwait
add
sub
xor
add
fcompl
lods
int
movsl
lahf
and
call
sbb
popf
stos
outsb
sbb
cmp
mov
aaa
std
pop
sbb
and
xor
mov
mull
out
inc
push
enter
mull
xor
dec
xlat
lahf
xchg
jns
adc
mov
repz
jle
mov
in
call
xchg
jnp
jne
cli
loop
push
cld
mov
rep
je
ficoml
xchg
mov
imul
popf
xor
xor
outsl
mov
flds
in
lods
or
push
scas
addl
xor
ret
je
cmp
sbb
dec
int
push
xchg
or
mov
xchg
push
push
in
hlt
stc
xchg
jmp
clc
pop
jns
cs
pusha
fcmovnb
inc
into
sbb
cwtl
adc
jge
pop
mov
mov
rep
or
jle
add
lret
and
add
mov
sub
mov
or
mov
imul
push
push
lcall
mov
fstl
in
adc
cltd
push
xchg
imul
inc
lods
pushf
xor
jmp
popa
cmp
js
add
aaa
test
lahf
push
lret
lea
add
int
xor
hlt
dec
mov
xchg
call
mov
xchg
jmp
ds
rclb
mov
xchg
pop
lret
loopne
daa
xchg
adc
push
aad
xlat
movsb
pop
sub
jge
ja
cs
xchg
lods
jbe
fstpl
lock
or
out
or
ss
mov
ss
pop
movb
pop
sub
push
rcrb
das
mov
js
mov
fistpl
mov
std
in
test
add
mov
xchg
clc
sub
enter
xchg
shl
jp
daa
jo
pushf
lret
push
pop
push
leave
in
adcb
int
pop
jne
add
addr16
dec
cmp
fiaddl
mov
and
jno
lcall
mov
cmp
fcmovnbe
hlt
data16
xor
push
lods
jmp
cmc
sbb
jmp
dec
insb
push
cmpb
lret
sbb
push
cmp
lea
dec
outsl
sbb
or
push
add
fidivl
and
cmp
in
idivl
je
out
push
clc
pop
adc
or
add
push
cld
dec
mov
mov
xor
or
arpl
call
cltd
fldt
pop
sbb
mov
mov
dec
cmpsb
repz
add
push
add
mov
in
imul
mov
negl
mov
fldl
lret
test
adc
ds
push
sahf
xlat
aaa
jbe
mov
xchg
fisubrs
adc
negb
hlt
das
out
lret
sahf
sbbl
out
sub
js
in
cmp
mov
mov
push
xor
shr
mov
stos
xor
rcrl
xlat
mov
imul
in
stos
cltd
xor
mov
fisubs
and
les
stos
ljmp
jo
lret
sbb
mov
pushf
and
xor
inc
dec
push
sarb
push
inc
pop
lds
push
in
jbe
fmull
outsl
out
cmp
pop
mov
fbstp
test
sub
cmp
mov
cmpsb
out
mov
jbe
sub
xchg
jecxz
std
xor
fildl
mov
addr16
cltd
fbstp
loope
push
movhps
dec
loope
decl
and
lret
inc
mov
sbb
sub
jp,pn
rorb
sarb
sub
mov
adc
mov
push
mov
das
outsl
sbb
sbb
lret
inc
xlat
xor
cmp
push
fistl
imul
iret
mov
data16
cs
cmp
or
xchg
jmp
pushf
das
into
mov
mov
dec
das
pop
fldcw
mov
ss
nop
push
xor
aas
rcll
pop
mul
std
and
sbb
insb
sti
push
lcall
adc
xor
sub
dec
push
imul
push
push
test
jbe
add
loopne
add
push
scas
lods
aaa
inc
and
mov
xlat
pop
mov
adc
mov
cli
mov
fsubrl
mov
sbbb
dec
cmp
xchg
mov
out
and
out
push
je
ret
das
jns
jbe
lret
sub
sbb
mov
out
xchg
adc
fisttpl
sub
lea
xlat
sub
cmc
fxch
loop
scas
push
xor
sahf
imul
pop
leave
mov
dec
sbb
gs
lret
mov
in
popa
push
out
sbb
dec
popa
mov
das
leave
arpl
pop
mov
adc
loope
mov
divb
mov
ss
aam
pop
js
and
mov
loop
inc
sub
sbb
cmpsb
lods
mov
lock
call
xor
lret
and
mov
push
fs
cmp
mov
xor
sarb
adc
ljmp
inc
mov
in
and
jl
add
add
mov
fs
sbb
jmp
pop
cmp
add
mov
adc
arpl
push
les
ss
stc
add
arpl
pop
xor
push
dec
cmpsb
add
and
xchg
int3
pop
pusha
scas
in
mov
xchg
adc
push
dec
std
out
mov
sub
sub
sbb
pop
sbb
inc
mov
inc
jnp
adc
mov
mov
in
jg
mov
xlat
arpl
in
add
or
ja
test
enter
daa
andl
in
push
lahf
shrb
xchg
jbe
loope
jnp
jle
cmp
subl
lea
lock
mov
sbb
push
jns
mov
dec
mov
adc
clc
push
insb
mov
repz
pusha
xor
lock
or
jle
sbb
sbb
movsb
pop
lret
lea
push
push
adc
sub
pushf
add
inc
test
sbb
cs
lock
fnstcw
adc
xor
mov
pop
sti
jge
adc
cmp
js
rorb
and
cltd
cs
mov
mov
rorl
mov
cmp
add
test
sbb
inc
mov
cli
ret
mov
lds
adc
bound
leave
sbb
lods
mov
cmp
inc
mov
push
notl
pushf
insl
and
xchg
push
dec
add
pop
lret
xlat
jmp
mov
jmp
sahf
pop
mov
in
adc
pop
jno
adc
add
mov
fisttpll
mov
push
cmp
das
add
popf
cld
sar
add
sbb
in
push
pop
test
xchg
mov
pusha
mov
pop
or
pop
sbb
cmp
inc
mov
sub
push
outsl
loope
xor
push
push
inc
ja
cltd
add
insb
adc
loope
adc
mov
in
cmpsb
mov
mov
lret
gs
lods
call
xor
push
into
in
adcl
and
andb
fwait
iret
inc
mov
xor
mov
dec
test
shll
mov
xchg
out
int
or
mov
ret
xchg
push
inc
subl
stos
enter
jge
lret
outsb
jne
fdivr
mov
test
shll
mov
pop
mov
ret
add
cli
fldl
mov
or
test
data16
stos
sub
mov
repz
in
loope
pop
scas
push
fstpl
hlt
int
mov
out
push
shll
cwtl
pop
jnp
jmp
and
cmp
fmuls
adc
add
test
ss
fstl
push
lea
nop
testb
add
pop
shrb
pop
xchg
add
mov
sbb
in
lock
mov
xor
sbb
add
subb
sub
arpl
lds
mov
adc
fwait
lea
jmp
data16
mov
cmp
or
jbe
sub
fisttps
data16
adc
push
out
stos
lods
or
into
lock
iret
sbb
test
xchg
jne
xchg
aam
xchg
mov
in
repnz
lcall
mulb
push
jg
and
lds
dec
add
inc
jmp
stos
add
xchg
fildll
jno
mov
shrb
out
lea
in
movsl
adc
pop
or
lods
aad
sti
adc
mov
sbb
push
mov
or
xchg
scas
cmp
lcall
mov
repnz
jnp
ret
repnz
dec
lret
aaa
int
js
push
es
add
pop
je
addb
in
push
ret
mov
call
fpatan
ret
pop
les
andl
pop
ljmp
mov
movsb
xchg
mov
sti
cmc
ficomps
cmpsl
jbe,pn
cmp
and
cmp
lcall
sbb
mov
sahf
int
sub
negb
ds
and
mov
subl
xchg
scas
mov
popa
gs
pop
mov
mov
fimull
cmpsb
adc
jno
jne
cmp
cs
and
inc
aad
lahf
mov
adc
sbb
inc
mov
fxch
jnp
test
xor
xchg
aas
jno
lret
movsb
in
jmp
loopne
pop
xor
lock
or
faddp
and
dec
inc
inc
pop
mov
fcompl
sahf
sub
xchg
cmp
sub
test
imul
sbb
mov
das
scas
scas
aad
rorl
fsubr
sbb
imul
out
and
push
fsubrp
adc
push
addb
stc
sbb
test
sahf
sbb
xor
adc
test
js
and
or
adc
cmp
mov
cmp
push
dec
lea
sbb
lock
enter
mov
movsl
dec
popa
and
rorb
rclb
idiv
in
mov
sub
in
adc
dec
push
nop
jae
push
jb
out
push
cmp
cmp
cmpsb
fs
cmc
jl
adc
pop
sti
cmp
mov
jp
ret
mov
movsl
mov
push
aad
out
pop
std
xor
jl
ljmp
enter
mov
push
mov
adc
fs
add
sbb
xchg
scas
daa
sub
pusha
push
movsb
rorl
aas
jl
mov
shrb
mov
sub
or
inc
fwait
orl
adc
test
jo
aaa
sbb
pop
sub
mov
push
pop
pop
cmpl
popa
sub
not
andb
ljmp
push
jns
add
imul
loope
pop
jae
gs
data16
and
sti
repz
jnp
enter
dec
pusha
fildll
mov
jbe
iret
lret
sbb
mov
in
fcmovne
jle
lcall
fidivs
in
add
stc
pop
sub
inc
pop
stos
mov
aad
mov
js
or
push
xor
and
cmp
push
test
sahf
test
cmp
repnz
repz
mov
mov
mov
aad
test
aam
pop
jne
int3
mov
mov
movsb
add
xor
sti
loope
jmp
jmp
xor
sbb
xor
push
mov
pushw
add
ljmp
xchg
adcb
xor
push
lods
sbb
mov
adc
push
mov
push
repz
movsl
push
notl
inc
lock
int
popa
jnp
xor
dec
iret
inc
xchg
push
outsb
int3
int3
push
arpl
insb
fcmovnu
addl
cmpsb
jne
movsl
sub
sbb
das
sbb
stc
mov
pop
and
lret
dec
test
sbb
insb
stos
xor
fadds
adc
mov
push
mov
push
dec
xor
pop
pop
lods
xor
or
mov
shrb
inc
xchg
dec
bound
push
xchg
sub
jmp
rolb
xor
pop
mov
sub
inc
fdivrp
add
sbb
idivl
loop
jl
push
push
fst
inc
mov
mov
dec
xchg
xchg
ja
push
sahf
std
xorb
inc
xchg
loope
cmpsl
imul
enter
dec
jl
int3
fcmovnbe
pop
mov
pop
and
icebp
cmp
test
mov
push
jno
int
pusha
ljmp
sbbl
sbb
sbb
in
aad
adc
popl
adc
dec
lret
cmp
shlb
dec
mov
rcr
les
mov
add
es
das
jbe
mov
xor
and
stc
jo
int
scas
in
or
leave
clc
sbb
push
jnp
cmp
sub
jg
push
or
outsb
pop
sti
mov
out
and
rorb
in
out
mov
and
sbb
imul
pop
and
push
adc
mov
jns
mov
outsl
dec
in
js
test
xor
adc
mov
sbb
inc
repz
mov
cmc
stc
jbe
dec
roll
daa
fistps
cmpsl
lea
dec
dec
inc
pop
xorl
add
outsl
adc
push
sbb
sbb
and
lcall
sahf
test
xlat
push
adc
inc
and
add
fbstp
add
data16
cld
aam
int3
fidivl
jae
ret
cmp
hlt
pop
sbb
push
mov
and
scas
nop
mov
mov
loop
push
movsl
imul
or
inc
jnp
mov
subb
fstpt
inc
sub
out
movsl
mov
sub
jle
jns
pushf
out
push
xchg
hlt
dec
pop
hlt
bound
data16
ss
or
push
fcoml
sti
movsb
fcom
call
test
lods
shrb
or
call
xchg
ja
sarb
xchg
xor
movsb
or
adc
pop
loop
mov
cwtl
lds
sub
push
movl
loop
arpl
add
es
lahf
and
mov
jbe
or
test
cmp
js
sub
mov
ret
out
mov
enter
cmp
ret
popf
mov
xchg
inc
popa
fs
pop
sarb
fdivrs
mov
scas
xchg
push
jmp
in
out
aas
stc
mov
xorl
sahf
das
dec
xor
xor
in
mov
sub
sub
push
repz
adc
lods
sub
add
repnz
dec
out
mov
adc
roll
push
das
repz
lret
aam
in
out
xchg
pushf
lcallw
pushf
cmpsb
icebp
add
xor
or
push
pop
xor
mov
pop
mov
aam
cld
add
out
jae
push
jo
xchg
fstl
mov
inc
loopne
pop
pop
jbe
xlat
inc
loop
xchg
pop
or
das
mov
mov
jns
leave
ret
jb
scas
mov
dec
push
iret
mov
ret
mov
sarl
insl
pop
and
div
mov
adc
push
movsl
icebp
ljmp
je
or
cltd
dec
sbb
xchg
lret
pushf
in
or
or
adc
jae
mov
jp
xchg
fcmove
divl
push
inc
loop
mov
inc
inc
xor
mov
out
mov
jne
arpl
subl
xchg
jo
add
inc
sbb
pop
mov
xlat
push
dec
dec
adc
jae
push
xor
jge
pop
add
lret
cmp
dec
adc
add
inc
stos
jne
ja
or
adc
cwtl
mov
gs
jge
cmpl
xor
mov
aas
pop
add
xor
or
sub
push
and
add
lock
shlw
adc
rcl
or
add
imul
das
mov
insl
inc
lret
xchg
rclb
inc
inc
leave
fisubrl
clc
out
idiv
out
clc
daa
pop
push
sub
and
bnd
jo
test
jmp
lock
icebp
daa
icebp
arpl
lret
out
scas
aaa
push
imul
jl
es
dec
shlb
mov
lea
pop
popa
and
je
je
mov
inc
jecxz
js
movsb
jle
xchg
cmp
sub
push
lods
add
cld
cmp
xchg
sub
jno
pop
pop
comiss
add
in
fwait
aaa
mov
inc
pop
out
lea
xchg
cmp
mov
sub
fwait
add
fdivrl
push
cltd
lock
or
in
outsl
jmp
orb
repz
in
insb
ljmp
mov
shr
xchg
jnp
or
insl
mov
ss
lds
scas
pop
inc
popf
xchg
push
clc
inc
loopne
ds
sub
xor
mov
adc
outsl
push
int
dec
jno
jns
rcll
lds
incl
sub
add
fimull
xchg
cmp
adc
outsl
inc
jg
arpl
inc
leave
icebp
pop
inc
jl
jb
imul
fistps
dec
xadd
das
sbb
sub
adc
adc
push
leave
scas
insl
outsl
xor
xor
cmpsl
mov
mov
jecxz
sbb
mov
inc
mov
aas
dec
cs
mov
jge
dec
imull
cmp
sub
add
xor
jb
mov
loopne
jnp
mov
ret
sbb
in
sti
lret
mov
xchg
jge
fs
and
mov
inc
scas
cmp
repz
xor
iret
sub
push
cmp
inc
xchg
stc
mul
and
decl
pop
inc
lcall
xor
shrb
les
pop
jnp
dec
pop
sbb
leave
or
add
or
and
stc
sti
jo
lahf
or
adc
sbbb
fwait
dec
add
es
mov
jae
out
frstor
sub
shl
mov
data16
jle
mov
push
mov
push
fwait
push
rorl
xchg
cmp
cwtl
sbb
nop
insl
xor
icebp
popf
lret
jnp
push
fcmovbe
cmpsb
lahf
mov
dec
popl
or
mov
cmp
adc
mov
outsl
inc
std
mov
rorl
clc
insb
mov
sti
cmp
or
cmpsl
jae
or
lods
iret
pop
jecxz
jge
pop
dec
gs
arpl
shrb
sar
and
mov
jbe
mov
and
push
mov
and
pop
mov
xlat
shrl
inc
mov
and
mov
insl
push
invd
mov
movsl
jno
pop
clc
dec
pop
xchg
mov
add
out
js
imul
xchg
fsubrp
mov
imul
fnstsw
negb
fadds
xor
jg
xor
xorb
stos
inc
and
inc
outsl
mov
xor
xchg
mov
or
loope
cltd
cs
mov
add
scas
add
mov
inc
out
aad
test
mov
pop
mov
cmp
mov
pop
xchg
dec
cmpsb
roll
and
pop
pop
out
dec
mov
out
dec
pop
ret
xlat
insb
pop
cltd
add
rorb
jmp
imul
add
pop
fsubrl
stc
push
andl
xchg
repnz
push
shr
sub
cmp
or
arpl
rcl
loop
xor
imul
js
xchg
inc
ja
jo
push
jecxz
data16
fmuls
popa
inc
fcmovnb
flds
push
mov
repz
jg
jb
aad
and
or
lret
push
jmp
jnp
aam
test
jae
mov
fwait
ja
or
ljmp
in
mov
inc
stos
or
pop
popf
negl
push
or
ror
cmp
sub
imul
mulb
popa
adc
adc
and
inc
clc
adc
cmp
pop
xor
jmp
sub
adc
pop
xor
daa
je
cltd
mov
mov
mov
scas
es
out
mov
add
sub
jge
insb
adc
ffreep
xor
add
push
mov
dec
pusha
inc
int
data16
stos
ja
lret
call
lret
mov
and
add
dec
xlat
les
jae
pop
sub
sbb
lock
cmp
add
cld
pop
xchg
popa
sbb
mov
mov
or
pushf
xor
pop
orl
push
pop
in
mov
push
lahf
jb
xchg
cwtl
and
pop
movsb
dec
pop
mov
or
xchg
pop
stos
sub
mov
adc
jle
inc
mov
ja
outsl
in
bound
fldcw
jns
popa
jae
cmpsl
movhps
add
pop
sbb
xchg
xchg
stc
jp
mov
or
sbb
add
mov
inc
xchg
fld
adc
push
leave
loopne
dec
mov
outsl
in
ja
lods
add
mov
loopne
mov
rcl
push
xchg
mov
dec
xchg
loope
dec
xchg
js
scas
push
fildl
mov
adc
sbb
push
jae
adc
sub
aaa
mov
and
or
les
or
dec
icebp
daa
cmpsb
pop
or
dec
dec
aad
clc
aaa
dec
jl
cmp
mov
pop
jbe
sarb
jg,pt
sbb
xchg
leave
daa
mov
xor
xor
mov
pop
sub
lods
push
mov
cmp
outsl
stc
sub
in
sbb
lods
popf
aad
xlat
jle
rol
push
or
arpl
out
xchg
sbb
xchg
fsubs
movsl
xlat
cmp
rorb
add
jmp
xchg
xlat
mov
inc
clc
adc
icebp
inc
pop
clc
pop
adcb
in
fprem1
pop
push
or
mov
outsb
mov
rcll
jno
sub
dec
and
repnz
sarb
or
ret
shl
ljmp
xchg
cmp
pop
sub
gs
xchg
arpl
js
xor
out
arpl
int3
rorb
fisubl
or
scas
xor
dec
adc
cld
loop
dec
jns
bound
mov
jg
xchg
clc
and
and
push
pop
jp
cmpb
loopne
mov
in
addb
xor
mov
outsl
mov
in
lahf
dec
mov
inc
jmp
adc
mov
pop
mov
jl
push
or
out
and
dec
xchg
fsubl
clc
insl
ret
adc
inc
pop
ds
mov
sub
mov
jbe
out
xchg
or
rdpmc
push
mov
inc
sbbb
repnz
xchg
inc
pop
xor
lcall
rolb
fwait
js
cmp
repnz
push
ljmp
in
pop
jle
repz
cmpsl
in
lods
inc
cmp
dec
adc
push
pop
inc
jg
rcl
push
fisubrs
insl
cmpb
repz
js
adc
push
xchg
ret
mov
and
cltd
ja
xor
sbb
pop
gs
outsl
mov
lahf
shll
pop
fimull
xchg
rclb
add
xchg
ret
icebp
push
js
xchg
push
mov
das
mov
insl
stc
pop
and
clc
das
es
shl
dec
mov
push
lcall
jno
test
adcl
stos
or
cltd
jecxz
xlat
cmp
mov
out
movsb
pop
add
ja
mov
andl
mov
out
loope
dec
inc
push
das
xor
mov
push
inc
repnz
cmc
repz
bound
dec
cmp
inc
mov
lahf
xchg
loopne
hlt
mov
iret
or
les
adc
bound
mov
das
enter
push
push
out
sbb
bound
xchg
xor
or
div
push
pop
scas
ljmp
ljmp
or
fstps
stos
shlb
inc
aaa
add
sub
lock
fldl
dec
mov
and
mov
fcmovu
dec
pop
jg
sbbl
mov
mov
jno
out
cmp
dec
mov
test
add
inc
stc
xorb
sub
pop
cmp
jnp
out
inc
stos
loopne
imul
rcrb
lret
push
ds
clc
xchg
jg
std
mov
decl
sbb
rorb
cmp
mov
xor
and
lods
data16
jp
sub
popa
add
into
fcompl
sub
rolb
xlat
or
and
sub
enter
xor
pop
cmp
pop
and
jmp
cmp
xchg
sbb
in
in
or
stc
cmp
sbb
mov
inc
sbb
xor
mov
pop
push
add
out
push
dec
push
addr16
divb
out
int
push
das
ds
mov
mov
mov
xchg
cli
push
fcmovnu
cltd
fnstcw
out
or
push
pop
lock
sbb
cli
lret
jno
addr16
inc
scas
mov
and
cmp
imul
movsb
cmp
popf
pop
js
xchg
xor
pop
add
sub
sbb
lods
movsb
dec
push
mov
mov
push
aad
or
inc
pop
outsl
and
shll
je
inc
dec
and
stc
lcall
pop
dec
or
lret
popa
sahf
outsb
std
in
push
or
aad
outsb
push
mov
fiaddl
push
push
pop
dec
out
cmp
mov
add
les
push
xchg
in
inc
push
mov
inc
push
inc
cli
adcb
outsb
cmc
push
repnz
call
xchg
cmpsb
ret
mov
out
add
mov
enter
push
jle
cmp
pop
pop
adc
stos
inc
adc
dec
loope
add
or
pop
xlat
adc
pop
push
daa
push
mov
push
cmp
popf
cmp
sbb
fsubs
arpl
std
xchg
sub
xlat
xor
fbld
and
jo
aaa
rcr
andl
jb
sub
lcall
sub
xor
stos
jp
push
pop
ret
lret
xor
lods
sub
leave
sub
insb
dec
divb
int
jae
push
fcomps
ds
cmp
insb
in
xlat
sub
fstl
outsb
and
xchg
sub
cmpb
cmpsl
decl
adc
pop
repnz
mov
repnz
mov
jp
mov
sub
pop
cli
xchg
call
mov
dec
lods
xchg
mov
or
xchg
aas
mov
shrl
enter
addb
pop
mov
inc
insb
es
nop
cmp
push
aam
push
dec
dec
test
inc
mov
fldcw
sahf
jne
cmpsl
jle
je
out
lcall
insl
add
cltd
pop
mov
mov
sahf
or
sahf
inc
je
and
test
sbb
push
fcmovnb
pop
in
daa
and
mov
sbb
cmpsl
push
roll
add
sub
add
jo
sti
cmp
scas
adc
xor
adc
pusha
mov
and
inc
les
xchg
xchg
jne
shl
push
add
and
popa
clc
xchg
cli
mov
sub
push
cmp
inc
push
fwait
add
fsub
in
out
stos
dec
cmpsl
in
adc
fdivr
sub
push
pop
xor
mov
fcmovbe
pusha
cmp
call
cld
shll
std
ja
fistpl
cmp
int3
push
push
ret
lods
ss
jl
pop
mov
out
or
xor
lcall
inc
xor
in
aam
clc
mov
inc
ret
cmp
popa
lods
and
mov
jne
inc
push
inc
js
imul
icebp
pop
xchg
xchg
enter
xchg
jbe
aas
add
push
insb
popf
sub
std
push
xchg
cwtl
insl
sbb
and
jb
ljmp
dec
pop
enter
xchg
mov
fcomp
call
in
test
lods
in
mov
sub
mov
outsw
les
inc
call
and
shrl
cmpsb
push
jl
mov
jmp
dec
xchg
mov
sub
sbb
data16
mov
stos
and
xchg
fisubrl
fprem1
movsl
stos
jne
mov
or
push
jns
je
ror
jb
push
inc
dec
cmp
lcall
fcoml
sub
fdivrs
xor
out
xchg
push
rcll
div
dec
dec
mov
mov
scas
mov
nop
shll
pop
pop
je
xlat
popf
inc
and
xor
ja
sub
or
mov
in
pop
inc
call
in
aas
rcl
int
adc
mov
fidivrl
dec
adc
push
cmpsb
pop
and
jb
mov
lods
or
cmp
fcoml
xchg
adc
dec
mov
out
iret
notl
fs
fidivl
clc
mov
or
mov
dec
mov
mov
out
aaa
fdivl
in
outsl
negl
jge
sbb
jg
popa
pop
adc
js
dec
aas
mov
cltd
test
xchg
cmp
movsb
cltd
add
ret
in
in
mov
push
pop
adc
and
add
xchg
pop
lods
dec
lock
dec
sub
pop
xor
stc
loop
pop
xchg
arpl
pop
and
xor
or
cmp
stos
push
arpl
push
cmc
popl
enter
adc
or
outsb
xchg
lea
add
rcll
mov
xchg
pop
rclb
aad
jbe
push
pop
and
push
mov
movb
jecxz
sub
lahf
in
cmpl
int
mov
dec
mov
sahf
and
add
jns
icebp
jo
cmpsb
push
adc
adc
jge
cmp
mov
jb
fistpl
xor
jo
jns
stos
or
loopne
mov
xor
mov
sub
inc
jne
sub
test
pop
lea
mov
pop
adc
testb
das
movsl
mov
les
push
and
push
js
mov
into
imul
dec
xor
jbe
adc
xchg
daa
pop
sbb
leave
js
repnz
lea
es
sbb
fs
in
in
hlt
sub
dec
cmc
cltd
arpl
ror
negb
xor
incl
lret
repz
les
fcomps
mov
ds
sbb
or
sbb
aad
addb
cmovae
loop
mov
das
bound
add
aad
xchg
pop
push
push
loope
pop
sub
mov
cli
andl
int
popf
mov
mov
add
add
sub
push
pop
in
sub
push
ljmp
sti
je
add
fmull
and
xchg
int
sub
dec
lret
inc
mov
outsl
lret
cltd
orl
icebp
hlt
outsl
push
and
test
and
pop
push
jecxz
ljmpw
add
dec
mov
pop
imul
dec
mov
lods
dec
jl
push
sbb
inc
push
push
xor
and
ljmp
mov
scas
sub
pop
xchg
sbb
pop
or
ljmp
mov
dec
loop
out
pop
fcoms
inc
dec
mov
loop
pusha
insb
xor
and
jmp
and
mov
adc
stc
hlt
addr16
pop
out
popa
and
inc
fisubs
imul
aas
pop
push
scas
mov
mov
pop
or
mov
inc
adc
pop
inc
pushf
outsl
jb
push
xchg
test
sbb
into
std
aam
mov
jno
repnz
fwait
loope
push
clc
inc
in
cmp
and
fnsave
sbb
inc
and
shrb
sbb
loopne
inc
lret
js
mov
sti
rcr
and
xchg
loope
pop
jg
sbb
fldcw
jmp
int3
mov
jno
mov
pop
mov
lods
jae
insl
popa
dec
xor
xor
xchg
outsb
pop
and
mov
outsl
fxch
testl
lret
mov
cs
dec
xchg
inc
gs
adcl
inc
sub
cld
xchg
in
lret
cwtl
arpl
xor
arpl
test
push
sbb
call
out
fsubr
add
sbb
std
orl
lcall
hlt
in
adc
sti
fnstsw
xchg
enter
mov
pop
outsb
sub
xor
adcl
es
mull
lahf
xor
fistpl
push
std
inc
scas
popa
in
data16
dec
mov
test
pop
sarb
lods
pop
shl
jmp
jae
stos
lahf
stc
xor
jmp
cmp
push
dec
outsl
jecxz
loope
or
xlat
out
iret
xor
sbb
imul
mov
prefetcht0
lret
nop
call
icebp
xlat
adc
push
nop
lcall
test
leave
inc
jg
dec
pop
stos
jns
jg
xor
cli
jge
fbstp
shrl
push
xor
sbb
add
test
jge
dec
call
mov
dec
bound
fsub
mov
xchg
mull
aaa
test
lret
sub
or
popl
ds
std
out
mov
outsl
jns
xchg
mov
mov
loop
call
cs
or
adc
sbb
stos
adc
jae
cmp
sbb
rcl
aaa
xchg
jge
adcl
daa
xchg
fsubrp
mov
xor
mov
lods
and
mov
inc
inc
mov
in
cmp
mov
sti
push
pop
adcb
test
lds
movsl
xor
jle
dec
ret
test
mov
xchg
jbe
mov
lahf
test
pop
add
add
pop
cltd
roll
sub
sub
xchg
xor
outsb
sub
or
loope
push
push
cmpsb
clc
and
loopne
mov
pusha
out
ljmp
xchg
dec
daa
xor
lods
jne
leave
arpl
inc
push
outsl
adc
pop
jmp
or
leave
js
pop
iret
xchg
inc
scas
inc
dec
arpl
jp
arpl
repnz
cmp
int3
jae
inc
fiadds
outsb
jmp
sbb
and
or
or
or
mov
aam
movsb
lcall
nop
ret
mov
xor
nop
mov
or
loope
push
mov
pop
sbb
mov
inc
test
xlat
jae
jbe
ljmp
loopne
mov
push
test
inc
movsl
inc
push
stos
pop
mov
ljmp
loopne
cwtl
xlat
mov
cs
call
hlt
add
cs
and
out
lock
sbb
add
inc
call
andl
pop
insb
mov
stos
push
les
push
push
mov
cmp
mov
inc
rcrl
in
bound
pushf
push
dec
scas
dec
or
lods
and
xchg
dec
aaa
jo
stc
add
nop
cmp
xchg
adc
or
in
cmp
rcrl
popa
jo
popf
mov
cmp
cmpsl
in
aad
sub
mov
scas
dec
or
fmull
mov
outsb
test
out
adc
and
sbb
xchg
sub
testl
lahf
mov
cmp
sbb
dec
xchg
es
push
outsb
pop
and
xrelease
je
or
dec
nop
sti
in
jb
aam
mov
or
adc
or
rorl
push
sub
push
sub
cmp
sub
sbb
cmpsl
ret
mov
sub
ss
xor
or
out
loope
lret
sarl
mov
mov
dec
fisttpl
sub
lret
cmpsl
push
and
ljmp
dec
mov
or
inc
xor
js
sub
add
sub
mov
loop
bound
mov
add
jae
mov
push
xchg
and
enter
inc
cltd
pop
pop
in
sti
pop
cmp
cmc
idivl
test
push
icebp
test
push
lds
movsl
sahf
aaa
cld
into
sbb
clc
pushf
adc
add
movsl
mov
jne
dec
dec
push
or
inc
fbld
bound
rorb
sub
sbb
pushf
xchg
jp
inc
imul
xchg
pop
push
ss
or
shll
xor
fbstp
test
mov
jl
jp
std
scas
cmpsl
sub
pusha
xchg
adc
movsb
dec
fcomps
inc
sub
push
jp
outsl
inc
ret
aaa
sbb
lret
xlat
arpl
and
hlt
ds
repz
ret
add
inc
xor
mov
inc
push
xchg
icebp
rolb
mov
dec
icebp
pushf
jg
sbb
lcall
movsl
jmp
mov
lods
sbb
pop
inc
or
leave
inc
or
stc
testb
jmp
out
dec
ret
mov
mov
cs
ss
bound
adc
or
gs
push
sbb
add
daa
sub
add
add
jae
mov
and
cld
mov
mov
dec
in
pop
test
mov
arpl
or
adc
add
cmpsl
repnz
cli
out
int
sub
cltd
push
leave
pushf
xchg
adc
xor
add
shrl
stc
mov
xchg
adc
inc
aam
xchg
enter
add
mov
mov
loop
das
shr
mov
and
in
jmp
aaa
pop
sbb
pop
dec
xor
ret
popa
lret
test
add
cmp
pop
ret
add
imul
clc
or
push
cmpsl
xchg
filds
sbb
pop
into
bound
sti
jge
nop
and
lds
out
inc
cmpsl
fdivrl
adc
add
in
xor
and
das
lock
adc
scas
gs
fs
adc
jmp
pop
rcrb
jl
and
inc
push
mov
push
cwtl
repz
nop
mov
pop
pushf
jno
mov
xchg
sbb
sub
fidivrs
or
insb
mov
inc
loop
repz
in
mov
popf
cmp
add
cmp
push
mov
fsubr
xchg
les
adc
pop
sti
mov
push
pop
adc
adc
mov
jo
lods
xlat
xchg
inc
in
mov
jl
andb
dec
xorl
das
jnp
xlat
imul
sub
dec
in
jl
lock
pop
cltd
pop
push
dec
ret
and
pop
repnz
jl
pop
add
call
lods
ret
cld
push
adc
push
jae
leave
push
subl
cltd
and
jp
popf
push
mov
jno
shrb
test
lcall
lods
or
lret
sub
rcl
call
mov
cmp
adc
or
mov
mov
jl
call
or
pop
lock
std
push
pop
or
add
pushf
shll
std
outsb
or
bound
aad
jns
insl
and
inc
out
fidivs
roll
jne
jno
dec
pop
push
push
xor
into
inc
sarb
fimuls
aam
shll
scas
ss
push
pop
push
call
int
fidivrs
icebp
fisttps
fisubs
jge
inc
call
or
xlat
sub
mov
mov
and
fildll
xor
push
or
mov
loope
jno
ja
ret
je
movsl
test
xchg
mov
andb
lea
mov
push
jno
and
popf
repnz
jecxz
rolb
sub
or
test
out
add
jecxz
and
or
sbb
push
xchg
cli
inc
test
iret
or
aam
aaa
icebp
int
or
lock
sbbb
rep
popf
xchg
outsl
test
inc
mov
xor
mov
aad
cs
jnp
adc
pusha
lods
std
hlt
aad
in
in
push
mov
mov
sub
xchg
fwait
pop
xorl
mov
subl
or
out
jo
sbb
or
cmpsb
and
jbe
jg
add
mov
mov
in
dec
cmpsb
leave
pushl
adc
into
jge
sub
ret
and
adc
scas
and
mov
sbb
mov
imul
dec
and
mov
pop
iret
aaa
jp
test
test
adc
jns
andl
or
jge
mov
out
mov
inc
fistps
mov
orb
test
js,pn
mulps
hlt
xchg
std
cwtl
popa
clc
jle
mov
std
mov
mov
pop
add
add
daa
jne
adc
and
xchg
loopne
and
enter
test
cmpsl
pusha
sbb
cmp
dec
fidivrl
jo
pop
lea
dec
lret
xchg
shl
dec
addr16
test
out
aaa
pop
out
xor
adc
iret
inc
enter
stos
bound
test
stos
test
xlat
sarl
mov
cmp
insl
xchg
inc
insl
jno
xchg
into
mov
fcmovnbe
in
roll
ret
xor
or
inc
je
mov
repz
dec
sub
pop
ss
sbbl
inc
inc
shll
pop
xchg
xor
sub
stos
jbe
push
arpl
sub
imul
add
jo
lret
mov
mov
xor
lods
test
mov
mov
ss
mov
add
mov
js
mov
mov
lahf
std
xchg
pop
push
adc
add
pop
xor
mov
sbb
jnp
push
movsl
adc
pop
icebp
je
dec
and
shll
icebp
imul
call
out
pushf
push
adcl
pop
addr16
mov
push
push
sub
fcoml
sub
iret
cmp
lods
mov
push
mov
mov
bound
or
xchg
ljmp
pop
xor
out
lcall
add
sub
aad
xor
pop
push
out
push
insb
cld
cwtl
imul
and
cli
mov
lcall
push
sbb
cs
and
pop
repnz
outsl
mov
icebp
pop
fs
dec
cmpsb
fwait
imul
push
clc
adc
test
mov
push
add
adc
lret
sub
push
testl
push
icebp
sahf
cmp
sbb
xlat
pop
es
aam
test
dec
xor
fcmove
decl
ficompl
lcall
cwtl
mov
shll
pop
shl
nop
lods
dec
mov
dec
bound
xchg
je
cmp
test
popa
out
dec
cmpsl
in
hlt
iret
cmp
out
mov
or
jp
cs
fcoml
sub
mov
pop
jge
out
pushf
xlat
dec
jo
add
cmpsl
push
add
pop
cli
mov
xchg
pushf
das
adc
dec
jo
mov
mov
mov
cmp
and
push
jecxz
dec
dec
xchg
adc
shr
fdivs
cltd
sub
push
clc
jno
adc
negl
lahf
loop
dec
scas
bound
imul
cmpsl
and
ja
inc
cmp
ret
jae
add
lcall
and
fnsave
mov
fistl
fmull
pusha
fsubrs
sub
push
pop
xchg
fisttpl
sbb
das
sub
repnz
pop
hlt
dec
inc
add
jne
sti
arpl
int
mov
fbstp
in
push
inc
and
stc
jg
cmp
leave
loopne
mov
imul
das
rcrb
outsl
fidivrl
sbb
scas
loope
in
insl
mov
add
cld
pop
fisubrl
fistpl
imul
aaa
mov
mov
nop
jns
inc
add
xor
cmpsl
pushl
cmpsl
loopne
imul
jge
add
cmpsl
push
mov
in
testl
mov
mov
jo
push
xchg
fisubs
push
pop
sbb
add
lods
and
xor
mov
test
icebp
scas
lea
in
rorb
das
sub
out
int3
jmp
roll
mov
insb
ret
cld
imulb
lods
stc
mov
xchg
xchg
outsb
push
aad
sbb
lret
outsl
sbb
lods
xchg
ret
sbb
sub
outsl
outsb
lret
mov
pushf
ja
aam
scas
out
inc
shlb
lock
pop
xor
jae
xchg
outsb
pop
mov
pop
push
cmc
or
jmp
cmpsl
push
mov
stc
movsl
push
push
jns
xchg
ljmp
dec
jbe
xchg
popa
jbe
xorb
dec
sti
js
stc
push
add
shrb
xchg
fidivrs
enter
rol
in
xor
sub
mov
mov
mov
adc
scas
push
in
or
adc
dec
push
fstl
xlat
xor
fld1
test
cli
negb
mov
movl
repnz
add
movsb
or
aam
lea
xchg
push
test
mov
ljmp
js
sbb
jnp
dec
clc
cmp
int3
or
mov
dec
inc
and
ret
fs
sub
nop
mov
jno
add
xor
jecxz
push
pop
xchg
sbb
xor
je
popf
jae
xchg
popa
fisttpll
pop
cltd
mov
push
mov
dec
cmp
lock
push
imul
jle
jecxz
repz
pop
out
out
jno
aad
inc
mov
inc
loop
sub
out
push
sbb
jns
out
popa
stos
lds
fsts
pop
arpl
push
adc
dec
ret
fimull
inc
leave
ficompl
lret
mov
pop
sub
pop
ror
dec
stos
fisubs
pop
jg
add
mov
addr16
cs
sarl
adc
daa
out
push
in
jmp
in
cmp
or
mov
jb
jo
out
add
je
aam
mov
mov
add
and
dec
test
ret
rcpps
pop
mov
xor
fidivrl
js
pop
add
fld
jl
pop
dec
sub
and
nop
pop
jbe
outsb
add
dec
cli
fwait
insl
enter
pusha
rcl
and
jbe
mov
jnp
icebp
cwtl
lcall
sub
loope
mov
sub
xchg
or
mov
mov
pop
popa
cli
std
lcall
cmp
add
loope
imulw
scas
orl
push
xorb
fwait
push
lds
adc
dec
pop
out
mov
lret
push
jmp
frstor
cmp
mov
and
aad
imul
jl
js
movsl
xor
fsubs
movsl
fists
jmp
ffree
bound
call
in
out
adc
mov
test
mov
xchg
add
push
mov
ss
cmpsl
cmp
and
mov
jb
mov
test
clc
sahf
fisubrs
inc
push
cmp
dec
push
xor
and
add
pop
inc
mov
insl
lds
sub
jl
insb
es
aam
shlb
clc
lea
xchg
idivb
mov
inc
and
or
jns
dec
scas
or
icebp
cli
cmp
add
js
out
insb
movsb
stos
cmp
cmp
xchg
ss
mov
mov
push
ljmp
test
shrl
aam
mov
mov
pop
hlt
in
int
or
pop
scas
or
cs
push
out
stc
adc
dec
je
sbb
fbstp
popf
mov
mov
ret
sub
adc
dec
dec
pop
mov
xchg
xchg
andl
lods
xchg
inc
cltd
cmc
cmp
out
ss
out
jl
shll
mov
mov
test
in
negl
pop
xchg
push
pop
leave
loope
das
and
jp
repz
fidivrs
xchg
jne
dec
cmp
out
lods
mov
cli
and
lcall
sbb
bound
cltd
sub
jg
add
inc
or
ja
sub
dec
sbb
repnz
fsub
mov
fidivrs
sub
mov
xchg
jg
mov
test
mov
mov
ret
incl
inc
xor
test
xlat
mov
fmuls
sahf
test
jnp
dec
lds
sbb
push
cmp
ret
in
dec
insb
xchg
dec
lret
mov
adc
push
test
sub
pop
jl
lods
jns
mov
loopne
dec
mov
sti
jno
call
pop
add
clc
pop
pop
pusha
call
xchg
enter
std
mov
inc
popf
xchg
lcall
stos
fucomp
xchg
cmp
dec
dec
push
hlt
leave
mov
xchg
test
int
mov
sbb
pop
jno
cmpsb
jns
lret
pop
ja
mov
pop
sub
mov
sub
mov
sahf
mov
stos
mov
xchg
idiv
enter
add
rcl
fsubrl
sub
clc
ror
push
mov
push
push
mov
xor
sbb
in
stc
std
add
lods
lods
ret
mov
mov
sub
mov
fdivr
test
aam
jno
sarb
xlat
xchg
icebp
shrb
jl
and
jg
outsb
popa
inc
push
pushl
mov
in
push
xchg
dec
shlb
push
sbb
in
push
call
imul
mov
pop
and
test
push
flds
add
add
sbb
testb
jmp
fldt
xor
or
push
stos
add
cltd
pop
mov
scas
shlb
mov
cli
lret
pop
mov
fisttpl
pop
int
ret
fisubs
aam
out
sub
jae
mov
mov
in
movsl
sub
jecxz
adc
cmp
pop
xor
inc
fcompl
dec
stos
jne
enter
movsb
dec
push
xchg
jge
packsswb
add
mov
mov
cmp
popf
pop
insb
xchg
fisubrl
cmp
faddl
pop
shr
popa
shlb
lcall
lret
cmpsb
xor
insl
in
and
jg
jns
dec
in
clc
and
popa
push
movsb
dec
cmc
cmpsl
fidivs
mov
movsb
shrb
enter
pushf
roll
cmpsl
mov
je
repz
jp
add
movsb
sbb
iret
pop
and
lock
divb
shll
rclb
cmp
inc
test
add
out
adc
clc
js
js
test
outsl
pop
cmpsl
or
movsb
gs
jecxz
cmpsl
push
je
ja
andb
nop
mov
test
sbb
sub
push
xchg
sbb
pushf
mov
loopne
push
pop
mov
or
dec
adcl
cmpsl
pop
sub
mov
arpl
sub
popa
mov
fidivs
mov
mov
cmp
and
insl
imul
nop
int
repnz
dec
mov
inc
inc
cmp
fiaddl
dec
arpl
mov
daa
sbb
cmpsl
dec
outsb
push
jne
mov
xchg
sbb
inc
hlt
lea
xchg
xchg
inc
cli
bound
cmp
das
xor
out
js
jb
mov
mov
push
adc
inc
pop
je
in
push
jg
inc
or
mov
sbb
fdivp
pop
and
xor
xchg
int
call
outsb
jne
lret
aam
mov
xor
js
pushf
jbe
out
paddd
jmp
in
sbb
jo
imul
cmp
xor
pusha
pop
xchg
int3
inc
jae
cmp
dec
xor
repz
and
rcrb
jecxz
sti
xlat
and
jno
sub
jae
xchg
les
cmp
or
subb
dec
mov
pop
inc
sub
roll
cmp
sahf
adc
dec
xor
mov
pop
cmpsl
lret
add
setns
mov
lcall
push
xor
dec
sahf
adc
jno
mov
movsl
cmovge
jp
cmp
es
mov
jae
xor
sahf
movsl
and
fwait
mov
dec
das
jne
int3
jns
loopne
into
pop
bound
xor
popf
dec
pop
pop
cld
nop
into
ret
push
nop
fs
jne
cmp
add
int
inc
roll
xor
push
sub
sub
mov
sti
mov
push
aaa
test
in
dec
into
addb
rorl
ljmp
mov
out
fnstcw
ljmp
jmp
dec
sub
ljmp
xchg
adc
or
mov
sub
shll
xchg
cmpsb
loop
clc
and
jbe
movsb
adc
xchg
xor
xor
or
xchg
adc
xor
mov
mov
jb
scas
sahf
lcall
add
add
pushf
call
into
cmc
cmpsl
je
dec
push
fwait
mov
jne
mov
rclb
lahf
movsb
lcall
cmovo
cmpsb
mov
adc
and
jl
sbb
sbb
fs
dec
push
shll
lea
es
mov
pop
push
pop
movsl
pop
adcl
lock
push
enter
sub
xor
jmp
add
shlb
add
xor
scas
push
repz
push
jae
lret
xchg
push
jb
push
lea
xchg
mov
iret
int3
movsl
pop
iret
out
or
mov
jmp
outsl
fdivp
add
decb
xor
mov
xlat
popf
sub
fdivr
int3
dec
das
fstpt
dec
sbb
pop
leave
fwait
sbb
flds
out
push
mov
das
cmc
jb
ljmp
or
mov
imul
scas
lahf
lret
jmp
pop
add
push
push
cmp
or
addl
imul
adc
fwait
lds
inc
hlt
jl
mov
xchg
inc
dec
or
mov
rcrb
inc
repnz
or
sbb
sbb
add
xchg
jbe
nop
mov
push
mov
xor
mov
pop
pop
dec
in
jecxz
sub
lds
sbb
sub
stos
pushf
pop
movsl
stos
add
lds
data16
int3
pop
enter
hlt
cmp
pop
cmp
int3
push
insl
hlt
notb
sub
mov
mov
loop
and
or
daa
or
mov
push
sbb
jmp
lret
popa
ror
movsb
xor
xchg
out
cs
test
std
out
and
and
and
lea
repnz
out
inc
cmp
fistps
cmp
push
lock
add
enter
dec
jge
xor
testl
inc
dec
in
push
rcrb
pop
add
int3
repnz
cmp
js
repnz
cmc
in
insl
mov
inc
bswap
cmp
mov
dec
adc
sbb
push
pop
adc
sub
push
jmp
lds
insb
sbbb
imul
repnz
cmc
mov
out
outsl
pop
lds
xchg
addl
sub
pop
push
xor
mov
scas
jp
pushf
mov
repnz
std
push
das
push
inc
push
inc
lahf
das
imul
xor
test
xor
loopne
jne
pushf
lods
ret
mov
fdivs
cld
fnstenv
adc
mov
stos
mov
ret
fnstsw
ficoms
jns
es
popf
sub
jecxz
dec
popa
stos
mov
mov
mov
jle
ret
and
imul
in
aas
lock
int
pop
add
xor
xchg
xor
cmp
shrb
loopne
sti
test
rep
adc
push
jp
les
rep
xchg
mov
test
xor
xchg
add
enter
jmp
sahf
gs
hlt
aad
js
aad
cmp
je
push
mov
jecxz
sti
cs
cmpsl
daa
fxch
push
push
adc
daa
loopne
mov
or
mov
pop
scas
mov
or
inc
push
lds
pop
mov
cmc
jecxz
jo
add
push
and
out
jo
dec
push
data16
xchg
push
or
push
sbb
loopne
and
pop
setne
fisttps
push
fwait
xchg
cmp
adc
sbb
xor
cmp
dec
fcomps
fwait
mov
sbb
mov
or
cmp
sub
cmp
lahf
call
sbb
outsb
mov
test
imul
out
dec
mov
ljmp
add
cli
out
mov
mov
outsb
or
jnp
out
fldcw
pop
insl
sub
mov
insb
mov
jno
inc
fldcw
adcb
int
xchg
and
jecxz
sub
mov
mov
repz
sbb
mov
lret
xor
and
cli
jge
mov
cltd
pop
mov
xor
ds
mov
xchg
call
scas
lock
push
jae
mov
jb
jmp
add
xor
ljmp
push
out
cmpsl
mov
cltd
mov
pop
add
push
outsb
inc
hlt
inc
inc
xor
pop
neg
pushf
sbb
aas
add
and
test
sbb
xchg
jb
xchg
xor
dec
loopne
stos
cld
call
or
xor
push
add
movsb
out
mov
jp
mov
test
lahf
push
dec
mov
loopne
cmc
cmp
popf
js,pt
mov
inc
sub
lock
sub
test
jns
xchg
cld
cmc
lret
or
addr16
xchg
push
in
das
cmp
pop
mov
xor
repz
xorb
mov
lahf
and
sub
nop
js
xchg
out
fdivs
test
out
mov
scas
out
jg
inc
adc
call
out
xchg
jnp
push
push
dec
adc
arpl
pop
jecxz
mov
loop
clc
ds
lahf
fisubl
cld
and
xor
xchg
xchg
jl
sbb
mov
cwtl
dec
ror
std
xchg
or
mov
jmp
xor
fdivrl
sub
jle
xchg
sub
ficoms
pop
mov
push
dec
movsb
mov
cld
cmp
sbb
add
xchg
sub
xor
in
dec
scas
jp
aas
add
testl
fmull
and
pop
cltd
movsb
jb
push
cmc
notb
push
fndisi(8087
aam
push
and
push
ret
aad
insl
outsb
mov
jns
sub
mov
in
cmpl
rol
ja
jl
addb
adcl
stc
aad
and
inc
mov
insb
addr16
sbb
mov
in
ret
movhps
push
repz
paddusb
cmp
sbb
sti
jge
pop
fcoml
pop
mov
jno
jmp
les
std
arpl
popa
rorb
jbe
div
mov
pop
sub
in
or
lock
mov
mov
andl
cs
cmp
stos
and
pop
ret
dec
push
xchg
insb
imulb
inc
mov
subb
js
andl
cmp
adc
cmp
jno
adc
mov
orb
mov
sub
movsb
xchg
aaa
sbb
xorb
in
lock
dec
ds
mov
fxch
aam
ja
push
int3
jp
cmc
xchg
imul
adc
add
adc
pusha
cmpsb
fists
bswap
cltd
shrl
and
dec
push
pop
dec
dec
dec
scas
leave
or
shlb
or
pop
and
mov
dec
orb
jnp
inc
sub
push
push
imull
or
and
cli
ljmp
jle
lods
xor
shrb
stos
jecxz
popa
frstor
fs
xor
lods
out
push
vandps
in
hlt
push
decl
jp
jle
pop
sub
iret
mov
dec
ds
imul
mov
popf
jb
mov
and
inc
in
add
int3
mov
mov
negl
aam
jge
stc
lret
pushf
insb
jne
pop
push
mov
testb
nop
nop
fiaddl
imul
dec
fidivl
stos
xorb
push
imul
fiadds
xchg
xor
mov
scas
cmp
cmp
xchg
xlat
inc
xchg
js
sub
and
dec
fwait
scas
cmp
fisubs
outsl
jnp
stos
mov
loop
testl
nop
jbe
mov
lret
rorl
pop
jnp
hlt
ja
and
sub
sbb
test
roll
fmuls
mov
int3
mov
or
and
push
adc
cmpsl
cmc
sub
jns
adc
loop
jns
sbb
add
add
insb
andl
xor
jb
xchg
aad
push
xchg
clc
xchg
gs
mov
mov
loope
pop
dec
test
clc
add
inc
int3
ret
xchg
mov
into
jmp
lods
shl
jno
xor
aas
cmc
shl
mov
inc
lcallw
int
pop
sub
bound
lock
jo
das
mov
dec
jle
or
lock
cwtl
jo
ss
pop
jecxz
mov
das
out
sub
mov
in
das
xchg
out
xchg
rcrl
lds
jno
sub
xor
jle
mov
pop
ss
push
mov
test
dec
cltd
inc
mov
lock
xchg
xchg
pop
jecxz
adc
cmp
jg
test
cs
mov
lahf
cmp
and
mov
shll
jmp
scas
leave
cmp
out
cs
faddp
icebp
or
or
dec
cwtl
mov
inc
dec
xchg
jbe
xchg
mov
in
nop
mov
or
ss
in
mov
push
dec
mov
clc
addl
jns
cmc
jne
jne
inc
adc
jno
push
adc
aaa
arpl
and
push
lret
mov
mov
fldl
and
les
insb
test
dec
out
js
jnp
adc
into
fwait
repz
mov
repz
mov
jmp
bound
in
in
lret
sar
dec
movsb
mov
cmp
icebp
pop
push
stos
pop
or
xor
movsl
mov
scas
aad
std
push
data16
inc
lds
sahf
xchg
pushf
xor
adcl
pop
mov
pop
dec
pop
out
or
in
and
mov
pop
cwtl
dec
lea
sub
hlt
add
xchg
and
adc
outsb
shl
and
sbb
out
enter
ret
pushf
xchg
ja
mov
call
fsubrl
push
jle
dec
sahf
inc
jbe
cli
insl
sti
addr16
lcall
dec
xor
inc
pop
mov
lock
or
jbe
push
adc
int
mov
xchg
jmp
xor
push
xor
xchg
ja
popf
push
ret
stc
add
cmp
fisubl
mov
lock
mov
test
jg
fstpt
adc
loopne
push
mov
ss
xor
and
dec
adc
lret
mov
fwait
jp
rorb
jmp
cmpl
mov
dec
loope
dec
mov
xchg
pop
dec
mov
mov
lods
outsb
gs
aam
jno
outsb
xchg
gs
jg
fstpt
shlb
xchg
fcmovbe
orb
mov
std
jmp
sub
push
mov
mov
or
jns
call
stos
or
mov
std
out
or
stc
xlat
adc
sub
sarb
outsl
cwtl
inc
inc
sahf
sahf
ds
fisttpl
scas
ds
jo
scas
rcrl
arpl
insb
adc
mov
push
mov
xor
aad
ss
xchg
jno
clc
push
fiaddl
icebp
or
std
sub
mov
pop
ficomps
push
pop
es
adc
addl
pop
pop
paddusw
cmp
sub
pop
decl
mov
cmp
pop
xor
xlat
clc
repz
shr
jecxz
push
adc
mov
xor
fldt
in
jno
mov
nop
popa
scas
jmp
orb
lods
adc
adc
xor
push
inc
andb
push
mov
and
sub
daa
dec
data16
jb
in
sti
push
cltd
mov
out
push
cmp
push
and
stos
call
push
cmp
mov
je
mov
fcmovnu
push
es
jle
fwait
mov
add
fisubrs
cltd
loop
pop
in
push
repz
mov
sbb
pop
mul
mov
add
sgdtl
cmpsl
jl
int
xchg
jle
jmp
jne
xor
cmc
cmc
fsub
sub
std
loopne
cmp
pop
jae
out
inc
pop
movsl
out
or
push
fcompl
mov
xor
mov
pop
jns
aaa
mov
cwtl
pop
outsb
and
jae
loope
dec
popa
xchg
stos
sbb
pop
cmp
jmp
inc
into
ljmp
cmp
icebp
or
push
insb
insl
lahf
xor
andps
fstpl
std
push
testl
ja,pn
data16
andl
mov
jp
jns
jo
scas
dec
pop
lret
add
xchg
jb
bound
inc
push
ret
jge
mov
xor
testl
sbb
mov
cmpsb
and
sbb
push
sbb
jo
dec
inc
cld
jge
xor
mov
movb
adc
out
stos
mov
cmp
dec
sbb
mov
mov
xor
and
inc
ret
aam
not
mov
stos
icebp
xchg
mov
xchg
mov
sub
mov
jg
or
jecxz
dec
xor
insb
cmp
mov
imul
push
or
subb
push
cmc
mov
outsb
cli
enter
cmpsl
inc
inc
add
pusha
adc
push
fldenv
por
push
xlat
and
inc
sbb
test
add
sti
movsl
fwait
loopne
xchg
push
mov
lret
gs
pop
sbb
int
add
push
movsl
scas
loop
mov
mov
push
cmp
sti
sbb
icebp
lds
shll
push
sti
add
lret
pop
or
scas
jl
add
mov
shlb
lahf
out
adcb
cmp
dec
outsl
mov
mov
pop
mov
xchg
dec
mov
adc
xchg
add
sub
testb
or
adc
pushf
or
out
jne
mov
repnz
xor
inc
cmp
xlat
push
jo
stos
les
adc
cmpsl
dec
stos
ret
xchg
inc
cmp
adc
adc
pop
jl
cmpsb
lea
lea
in
subl
ljmp
push
cmpb
sub
inc
es
push
dec
adc
xor
add
ja
mov
xchg
notl
pusha
inc
aad
fwait
pop
xlat
loope
cmp
insl
lods
mov
in
test
jno
dec
lret
and
faddl
es
jmp
jg
maskmovq
testl
cld
out
adc
icebp
or
sbb
cmp
sbb
jp
mov
icebp
call
test
fwait
xor
and
push
cmp
adc
es
out
cltd
mov
daa
pop
fs
sub
ds
mov
cmpsb
xchg
push
add
mov
add
xor
lea
cmp
ljmp
jbe
lret
rcll
test
sbb
pop
repz
cmpsl
insb
pop
sbb
ljmp
mov
out
mov
dec
test
and
pusha
sbb
loopne
inc
inc
stc
inc
pop
inc
hlt
ret
jp
andl
pop
roll
mov
jmp
sbb
nop
loop
idivb
push
xor
inc
outsb
in
aad
jmp
cmc
pusha
jg
out
sbb
cli
fnstenv
int
fs
jo
mov
dec
out
xchg
pop
mov
sti
add
fstpl
aad
pop
outsb
test
sub
push
loop
and
sbb
mov
cmpsl
adc
sub
mov
inc
pop
inc
fwait
jbe
aam
sti
negl
lods
xor
mov
cmpsl
aad
daa
add
jp
xchg
push
push
xorb
push
clc
in
add
or
shll
lock
push
jb
call
cmp
das
inc
div
sub
jo
test
xor
mov
shr
movsl
ret
aaa
shrd
cmp
jbe
test
and
mov
pop
xchg
movsb
sub
cltd
imul
or
mov
mov
ljmp
mov
pusha
popa
mov
and
je
stos
add
enter
jo
jbe
dec
jne
inc
scas
xchg
cvtps2pd
out
adc
lods
loope
cmc
push
addr16
xchg
stc
jo
mov
call
les
jp
cmpsb
call
bound
adc
pop
mov
inc
dec
ret
pop
repnz
out
adc
imul
gs
or
xor
pop
lods
cmpsl
jp
cmp
inc
popa
jg
jae
mov
mov
mov
stc
jne
sub
mov
bnd
xor
popa
int3
cli
or
pop
int3
int
inc
xor
push
loopne
bound
inc
ljmp
and
mov
enter
pop
loope
push
sahf
repz
add
xor
mov
cmp
xchg
inc
hlt
push
lock
scas
dec
or
stos
out
xchg
daa
jmp
loope
sub
js
jge
mov
push
les
inc
test
in
shl
out
stos
scas
dec
push
sahf
out
imul
add
in
ljmp
inc
movsl
pop
fdivp
rolb
andl
push
inc
jb
fcoml
mulb
push
inc
setp
dec
add
push
ror
mov
push
mov
jae
das
xor
push
inc
add
sub
aaa
adc
inc
clc
xor
xor
jae
shll
leave
subl
jmp
sub
xchg
dec
fisubrl
mov
or
lahf
mov
lea
insl
adc
ja
scas
mov
scas
push
out
sub
xorb
sbb
mov
test
xor
test
sbb
aas
jne
inc
sub
inc
scas
jns
ds
mov
pop
pusha
push
jmp
sub
pop
pop
adc
mov
xchg
test
pop
lret
pop
dec
test
jbe
fidivrs
pop
fldenv
js
xchg
int
cmpsb
and
jb
sti
or
inc
xchg
jae
dec
addr16
xor
and
inc
lret
and
out
rorl
adc
fwait
test
and
mov
jnp
ret
iret
cmc
mov
pop
pop
adc
filds
gs
push
adc
mov
pusha
sar
into
jno
pop
js
push
cmp
dec
cmc
movsl
pop
adc
repnz
fucom
mov
ja
je
inc
rcl
subl
mov
push
inc
pop
mov
mov
sub
decb
ss
and
mov
adc
dec
imul
mov
mov
daa
jo
add
mov
sub
jb
inc
movsl
pop
mov
jo
in
lods
xor
rol
sbb
and
clc
jle
pop
pop
pop
daa
stos
out
add
xchg
cs
push
jmp
sub
mov
xchg
sub
sub
xor
shll
dec
pop
mov
mov
sbb
mov
insl
mov
sub
adc
jnp
inc
push
pop
int
scas
cltd
loope
push
mov
fldenv
xchg
push
scas
mov
add
mov
pop
out
subl
dec
inc
pop
arpl
inc
shll
cmp
jnp
push
lods
pop
dec
addl
and
cmp
jl
cmpsl
sub
push
sub
adc
or
or
or
test
xchg
fisubl
mov
test
aas
jo
sub
push
leave
shlb
xchg
das
loopne
xchg
dec
sahf
mov
mov
into
data16
mov
data16
mov
ja
or
add
loope
das
fildll
sub
or
xor
inc
cmp
rcr
sti
cmp
sub
or
cmp
mov
fdivs
jg
js
in
xlat
jbe
ret
test
cmp
xchg
cltd
jne
jb
mov
cmpsl
sbb
scas
bound
add
aad
mov
mov
xor
add
shl
cmpb
or
adc
icebp
pop
mov
cmpsl
std
and
pop
xor
jae
fldl
ret
cli
mov
sbb
xor
aas
daa
sbb
push
add
pusha
popl
cmp
faddp
mov
sub
sti
jge
mov
or
ret
xor
sub
pop
fnstsw
mov
js
jg
cmpsl
les
mov
dec
xchg
scas
insl
dec
jne
xchg
pop
lret
mov
insl
xchg
nop
pop
jge
jne
jns
popa
jnp
mov
jo
mov
mov
repnz
dec
lret
pop
int
movsb
iret
sahf
mov
fisttpll
mov
imulb
and
push
addr16
push
jl
in
repz
mov
jne
fsubr
dec
popf
call
stc
xor
mov
arpl
insl
cs
ja,pn
xor
test
mov
pop
int3
mov
mov
sub
fdivrs
adc
xchg
pop
stos
nop
xchg
mov
mov
adc
inc
push
xchg
movsb
mov
subl
jnp
xor
fs
sub
pop
pop
hlt
movsl
ds
xchg
pop
mov
push
sarl
sbb
fisttpl
js
cltd
lcall
cmp
enter
dec
xor
in
cmp
or
sbb
lds
inc
inc
nop
adc
icebp
push
in
sub
mov
cld
jbe
mov
or
imul
ja
scas
lret
jle
and
out
mov
cmp
xor
xor
mov
es
lret
pop
sbb
aas
loopne
aas
mov
mov
in
sub
iret
pop
push
pop
xchg
adc
mov
mov
inc
add
sub
movsb
pop
and
aad
in
les
das
adc
adc
jecxz
push
add
and
pop
scas
fnstenv
arpl
sbb
lods
add
sbb
enter
jbe
dec
cmp
ss
inc
js
pop
mov
loopne
aaa
sti
in
jge
dec
pop
repz
into
push
xchg
or
sub
sub
mov
ja
outsb
jecxz
push
fldenv
lret
sarb
dec
inc
xchg
jne
cs
imul
dec
xor
add
iret
insl
into
sub
pop
or
pop
out
jmp
inc
popa
xchg
jo
mov
jb
sbb
pop
xor
out
pop
inc
and
ds
push
je
into
outsb
mov
fcmovnb
inc
sahf
addb
in
out
cmpb
mov
jbe
repnz
xor
mov
mov
cltd
mov
mov
sub
cmp
and
popa
ret
popf
aaa
sub
and
push
fstpl
mov
aad
iret
mov
cmp
je
xchg
int
dec
loope
out
test
mov
mov
dec
sub
int3
jo
inc
jnp
push
xchg
aas
daa
sub
inc
dec
push
jnp
mov
sub
mov
adc
lret
mov
cmp
loop
lods
xor
pop
mov
mov
repnz
xor
sbb
mov
sub
imul
and
ss
mov
inc
add
mov
shrl
add
push
sbb
cmp
jno
push
xor
push
out
inc
xchg
push
inc
and
movsb
js
lret
add
fisttpl
jmp
lcall
test
in
cmp
pop
nop
or
stos
and
lretw
mov
mov
xchg
mov
mov
xchg
push
and
and
fists
pop
jnp
jns
je
cmp
scas
je
std
fdivrs
mov
jp
jg
sbb
xchg
aas
out
mov
clc
pop
into
xchg
sbb
and
or
cmp
clc
and
mov
cmp
mov
xlat
inc
adc
stos
xchg
mov
stc
mov
sbb
in
cmpsb
jns
sbb
lcall
fsubrs
in
adc
out
lea
mov
rcrl
pop
mov
mov
stos
mov
xor
int
popf
push
dec
add
cmpsb
dec
rorb
sub
pushf
js
adc
aam
out
mov
arpl
mov
adc
push
or
repz
rcrb
enter
dec
cmp
lcall
inc
mov
adc
cmp
push
fwait
repz
adc
mov
pop
aas
cmp
mov
jne
mov
xor
or
mov
out
or
mov
cmp
and
sti
sbb
cmp
fs
fcmovne
hlt
clc
inc
push
pop
push
fdivp
sbb
sbb
stc
fbld
cmp
ret
mov
in
out
inc
or
stos
xchg
inc
in
jge
push
xor
sub
mov
ds
incl
dec
adc
jo
and
in
stc
or
pop
movsb
ja
movsb
cld
push
sub
pop
aad
addb
movsb
rcll
rcl
mov
lret
sti
rol
jbe
xor
cmp
cmp
inc
pop
cmpl
xchg
js
and
jae
sbb
cmpsb
movsb
cmpsl
in
stc
ret
jl
insl
fstl
cltd
sbb
mov
insl
adc
or
xlat
push
lods
cwtl
dec
je
jb
imul
out
test
dec
xchg
jge
xchg
scas
hlt
iret
jbe
mov
mov
imulb
insb
push
cmpsb
sbbl
in
mov
lea
mov
enter
outsb
xlat
sbb
sub
pusha
xor
jmp
bound
popa
jnp
mov
lret
sub
push
fildl
lret
xlat
jmp
add
push
pop
lods
cli
out
sarl
dec
roll
cmc
xorl
cmp
add
int
in
hlt
push
add
jle
shrb
adc
mov
and
aad
bound
jle
fsubr
inc
rcl
lcall
pop
pushl
subb
nop
push
or
add
xor
mov
enter
adc
cmp
mov
aas
lret
mov
mov
cmp
sub
jo
out
or
rcr
pop
xor
inc
adc
in
mov
adcb
or
jo
bnd
js
and
ja
cli
jne
fldt
adc
dec
outsl
jg
test
out
les
push
add
jmp
jns
mov
jne
adc
incb
imul
loop
scas
dec
inc
daa
push
ret
or
xorb
data16
or
aaa
push
inc
xchg
dec
push
das
cmp
fcomps
call
test
adc
stos
sub
or
movb
pushf
mov
xor
sti
rorl
jge
or
outsb
add
mov
push
push
or
fcmovnbe
push
and
ja
popf
pop
jns
xchg
fisttpll
roll
xor
and
push
pop
cmp
add
cmpsb
inc
cltd
cmp
push
pushf
adc
sub
jne
push
xor
lods
cwtl
imul
pop
or
test
imul
lods
jo
inc
push
pop
iret
ja
mov
ret
add
imul
xchg
xchg
mov
dec
arpl
and
xor
out
mov
mov
hlt
mov
cmp
in
leave
into
repnz
sub
int3
test
pop
bound
fwait
xchg
out
scas
jmp
loop
lcall
dec
movsl
ret
jae
daa
icebp
aas
sbb
mov
daa
sub
and
popa
movsb
sub
dec
movl
enter
cmp
popf
daa
in
repnz
dec
pop
dec
xorl
aas
xchg
out
adc
js
xchg
test
ljmp
inc
sti
or
es
out
call
stos
jno,pn
sar
mov
cmp
and
test
imul
push
cs
pop
lods
out
popa
lods
xchg
pop
insb
movsl
fs
sbb
notl
inc
xlat
in
repnz
repz
jmp
mov
sbb
push
mov
jb
push
adc
xchg
xchg
cwtl
mov
xchg
insb
mov
xchg
fstpt
pop
pop
mov
adc
leave
sub
or
stc
ret
movsb
pop
or
arpl
stos
jne
int3
ret
aad
sub
das
rcll
addr16
pop
movsb
sub
cmp
push
into
repnz
xlat
jb
mov
das
inc
cmc
roll
push
insl
scas
dec
jmp
push
inc
and
xor
push
mov
and
imul
mov
jl
ljmp
shrl
out
outsb
fsubr
sub
out
rclb
inc
pop
idivl
mov
daa
dec
gs
push
sti
sbb
adc
filds
xchg
and
negl
stc
fxch
push
mov
scas
adc
mov
and
push
ret
fsubp
inc
je
ljmp
inc
rcrl
jno
dec
mov
notb
js
lea
or
mov
jno
and
mov
push
ss
out
jmp
mov
xor
mov
sahf
jge
cmc
xor
jnp
mov
call
xor
mov
jno
jbe
aad
inc
fsubl
jl
test
ds
jg
dec
cltd
add
xor
rolb
stos
jp
xchg
and
pop
inc
incl
ljmp
mov
cmc
sbb
mov
sub
jns
and
xchg
lods
mov
xor
pop
mov
das
dec
lret
push
and
dec
push
enter
sar
xchg
sti
loopne
pushf
iret
clc
int
or
sbb
ret
data16
dec
inc
repnz
jge
dec
ss
enter
pop
inc
stos
pushl
mov
out
push
mov
outsl
mov
call
jbe
and
xchg
mov
gs
push
add
mov
mov
int
lret
fs
xor
andb
dec
and
movq
push
das
ss
add
mov
fiadds
test
je
outsl
or
lods
xor
or
rclb
aad
jns
ret
and
enter
push
adc
adc
js
mov
ror
mov
scas
adc
push
lea
or
cwtl
pushf
sbb
fcomps
dec
jae
lcall
shll
and
fnstcw
mov
test
sbb
fists
or
mov
adc
or
hlt
xlat
xchg
inc
loope
add
xchg
loopne
cmp
scas
sub
xor
jl
push
pusha
in
andl
xor
dec
dec
pusha
push
inc
xchg
push
xor
push
sbb
rclb
pop
and
inc
cmp
mov
and
daa
shl
cmp
mov
rorb
sahf
xchg
adc
cwtl
jmp
sbb
arpl
out
add
gs
daa
pop
mov
cli
inc
fildll
lahf
mov
push
xchg
add
sub
jle
stos
call
inc
popa
insl
or
adc
popa
cmp
adc
sbb
jae
dec
and
cs
lahf
movsl
pusha
ss
rorl
cmpsl
les
cld
insl
ja
cli
cmp
pushf
out
or
pop
sbb
or
test
inc
lcall
dec
adc
sub
pushf
inc
aas
add
inc
xorl
aaa
mov
jbe
test
and
mov
ficoms
and
adcb
jnp
mov
ss
lret
and
jnp
mov
xchg
popa
orb
mov
int
push
pop
cmp
mov
fcoml
adcb
add
pop
pop
mov
out
pop
mov
adc
outsl
pop
sbb
sub
sarl
rcl
mov
sub
jp,pt
jmp
je
sub
call
dec
fwait
push
push
cmp
dec
push
mov
leave
rorb
xchg
jb
sti
mov
cmc
pop
lret
jbe
push
inc
daa
ret
adc
cs
mov
cmp
pop
fldcw
cld
cmp
loopne
sub
sbb
mov
sbb
mov
decl
in
in
mov
or
cmp
jp
xchg
popf
mov
aam
dec
add
leave
imul
popw
popf
flds
faddl
repz
push
lock
mov
int3
addr16
cmpl
lret
or
sbb
pop
dec
idivl
xchg
inc
test
movsb
mov
out
mov
popf
cmp
jae
dec
lea
subb
jp
push
cmp
jb
shrl
xor
or
cmp
movl
sub
icebp
in
into
xchg
mov
loopne
push
rcll
test
ss
aam
call
push
inc
dec
pushf
cltd
xchg
pop
push
jno
scas
mov
mov
mov
xor
into
je
xlat
mov
nop
aad
sub
jnp
movsb
sbb
mov
popf
movsb
repnz
push
ljmp
sbb
leave
sbb
data16
push
cld
iret
mov
lret
and
cmp
loop
movsl
inc
or
sbbb
mov
aam
pop
into
jb
fwait
jae
push
xor
push
sahf
lret
int3
sbb
stos
push
xchg
lret
or
push
mov
jnp
lock
sub
mov
jle
mov
pop
push
mov
in
cld
dec
jge
adc
cltd
push
xor
jnp
lret
movsb
fstps
adcl
repz
pop
xchg
sub
lock
fucom
pushf
mov
push
jne
lret
aaa
mov
adc
mov
mov
push
or
sub
and
cltd
sbb
cli
lods
push
push
test
fbstp
arpl
jns
inc
sbb
cmpsb
arpl
outsb
xor
xchg
aas
out
xorb
leave
out
popl
scas
sub
mov
mov
pop
repnz
adc
jns
jge
pushw
sub
push
test
adc
or
adc
aaa
and
jo
push
cmp
push
and
push
inc
push
arpl
in
cmp
and
insb
jno
adc
leave
xchg
adc
inc
xchg
popl
ret
dec
mov
dec
loop
or
setle
push
adc
and
mov
sub
lods
aaa
cmp
add
jb
outsl
leave
cwtl
aad
inc
mov
jb
xchg
stc
jns
rol
jb
lods
mov
popf
fxch
fists
xor
pop
js
pop
sbb
and
fisttpl
fdivrl
jmp
cltd
jne
xor
out
mov
rcrb
gs
gs
or
shlb
mov
aad
jne
fwait
cwtl
push
xchg
in
fisubs
mov
les
mov
jns
push
nop
cs
fldenv
imul
mov
popf
addr16
xlat
xchg
pop
xchg
test
mov
pop
iret
xor
adc
fidivl
sahf
fldlg2
dec
stos
and
popa
roll
mov
mov
stos
ja
inc
mov
lret
xchg
and
repz
in
dec
or
mov
pushf
imul
dec
outsb
int
insb
sbb
sub
nop
je
cmpsb
mov
push
sub
cmp
sbbb
lods
sbb
cld
fwait
dec
loop
add
mov
push
cwtl
je
inc
dec
sahf
lcall
push
fucomp
sbb
adc
sub
arpl
mov
jne
sbb
pop
imul
popa
js
and
mov
mov
push
std
adc
test
mov
addl
stos
pop
push
ja
add
mov
add
out
pop
idivl
and
cmc
cmpsb
cwtl
sub
shl
sub
sti
mov
inc
mov
mov
add
jb
iret
into
rcrb
fstpl
jne
mov
cmp
insl
dec
mov
mov
lods
sti
cld
aam
add
dec
in
imul
inc
mov
outsb
cmpsb
pop
shl
adc
lock
mov
int
imul
adc
or
push
and
loopne
push
mov
cmc
inc
or
or
fucomi
xlat
lret
mov
lahf
scas
stos
fldcw
dec
and
orb
aam
jnp
stc
or
xor
lahf
pop
fwait
lcall
and
inc
mov
fildl
jg
scas
jle
push
jns
jns
lods
sub
mov
out
stos
lret
mov
mov
push
loope
jb
dec
mov
mov
lret
sbb
xlat
test
mov
sbb
mov
adc
cmpl
cltd
push
xchg
inc
mov
push
imull
iret
movsb
in
and
and
mov
lret
fimuls
loop
jmp
add
cld
ds
mov
addr16
sbb
xlat
and
cmp
fldt
jge
pop
inc
movsb
jle
mov
sub
lcall
xchg
jle
cltd
push
test
xor
xchg
cmp
push
mov
sbb
das
sbb
sti
fistpll
pop
jmp
lock
shl
orb
jnp
sbb
incl
mov
insb
lahf
sub
pop
out
pop
stc
jno
pop
pop
push
ljmp
jbe
xor
add
jbe
rcrb
or
sbb
outsb
cltd
dec
loopne
fwait
or
or
or
and
push
mov
test
mov
inc
xchg
jno
push
fisttpll
gs
icebp
test
cmp
cli
xchg
push
out
xlat
add
xor
xchg
cmp
mov
lcall
stos
or
push
nop
insb
xchg
sbb
mov
jmp
shlb
fldcw
lock
in
rclb
or
mov
cmp
fisubrl
lds
arpl
int
aaa
stos
clc
test
mov
out
cmp
xor
cmp
jge
aaa
popf
sbb
adc
mov
out
int3
xchg
inc
cld
int
mov
xchg
and
sbb
lcall
ss
mov
mov
pusha
lahf
push
adc
pop
outsl
aas
xlat
sbb
add
jb
lods
or
shll
shlb
cmp
mov
mov
test
daa
rcll
jo
and
cld
push
rorb
add
xchg
stos
out
xorb
pusha
adc
nop
push
imul
lea
jmp
and
fstpl
xchg
aas
call
pusha
xchg
cmp
xchg
xlat
lds
jecxz
xchg
test
fdivs
cmpsb
or
ja
mov
loope
test
cld
jecxz
mov
jb
lret
pop
out
add
loope
loope
push
inc
sbb
adc
outsb
rcrb
divl
outsb
daa
pop
sbb
jne
mov
pop
adc
cmpsb
mov
divb
push
sbb
add
call
add
inc
dec
mov
shlb
push
and
cmpl
mov
mov
cmpsl
int3
mov
xchg
jmp
cltd
mov
fdivr
jns
leave
mov
inc
cmc
xchg
dec
into
into
cld
movzbl
push
or
in
push
dec
inc
mov
push
test
xor
loope
lcall
fbstp
push
dec
repnz
loopne
movsl
cwtl
push
aas
call
mov
cwtl
adc
in
in
mov
lret
sbb
jl
cli
adc
jo
mov
clc
scas
out
int3
lea
push
nop
adc
mov
inc
ret
or
test
fcomps
iret
xchg
jle
jl
xchg
les
mov
pop
hlt
push
imul
cltd
cltd
dec
out
jns
aas
pop
mov
jns
pop
aas
test
xchg
fisubs
dec
dec
test
sahf
inc
add
lods
aad
jl
std
adc
testl
lret
mulb
sub
dec
outsl
in
or
shr
fsqrt
inc
call
aaa
cmp
jg
mov
cs
mull
pop
mov
shrb
out
cmp
adc
scas
fmuls
scas
fs
dec
jb
dec
rol
inc
pop
cli
in
fldl2t
inc
pushf
push
dec
and
sbb
test
xor
or
push
sub
mov
rorl
xlat
jnp
aas
movsl
out
mov
scas
inc
xchg
jo
mov
lret
or
xchg
or
popa
mov
shrb
or
xor
inc
test
lock
loopne
mov
mov
mov
jns
or
mov
mov
stos
and
ret
fwait
add
and
push
push
not
adc
cmp
test
dec
mov
adc
mov
mov
adc
and
dec
mov
je
loope
add
shld
lods
mov
inc
lds
orps
rcrl
cmpsl
addb
popa
pushf
mov
cmp
sub
dec
sbb
sub
jmp
out
cwtl
adc
out
dec
adc
jmp
jns
jle
dec
cld
dec
cmp
mov
std
cs
add
cld
out
int3
push
jge
mov
push
cmp
jmp
insl
mov
imul
dec
sahf
popf
sub
es
adcb
icebp
cld
mov
push
sbb
roll
and
sub
fsubrl
lock
inc
and
ds
mov
fwait
cwtl
xchg
push
scas
jl
xorb
dec
popa
mov
or
add
hlt
test
in
inc
sahf
push
fistl
into
sub
xor
inc
gs
pop
hlt
or
arpl
mov
jge
xchg
test
sbb
xor
adc
push
jae
dec
fcmovu
test
adc
dec
pushf
sti
dec
divb
pusha
cltd
cmp
jle
pop
xchg
pop
push
repnz
aam
scas
out
add
aaa
xchg
add
adc
in
sbb
lods
lret
clc
mov
mov
jbe
mov
je
or
mov
pop
xor
out
mull
sbb
ret
sub
pop
cwtl
add
pop
shrl
jns
mov
mov
lods
das
pop
xchg
data16
push
lret
outsl
loope
idiv
mov
xchg
xor
ja
push
or
xchg
adc
cwtl
lret
add
insl
nop
movsl
push
adc
je
mov
call
inc
lds
inc
cmc
push
das
aad
pop
movsb
aam
popa
push
mov
repnz
in
ja
in
into
lcall
jnp
push
dec
push
xchg
mov
rcrl
pusha
testl
mov
adc
mov
daa
pop
add
and
xchg
pop
or
stos
pop
push
push
cmp
aas
in
add
cmp
sarb
add
xchg
xor
jae
cmp
jae
ret
jb
dec
mov
movsb
ljmp
sti
xchg
pop
mov
cwtl
shrb
fistpl
test
incl
fdivl
jl
xchg
pop
sbb
ds
inc
add
mov
jnp
sub
test
jle
mov
mov
sbbl
mov
adc
adc
popa
sbb
hlt
add
roll
mov
and
mov
in
xchg
jmp
lods
scas
jl
inc
jmp
push
mov
jns
leave
addb
mov
js
in
push
sub
jne
out
int3
or
cmc
or
xor
je
out
adcl
cmpl
mov
ja
mov
push
push
mov
out
es
pusha
aad
test
cmpsl
fadds
icebp
sub
test
inc
cmpsl
lods
imul
ret
add
es
sub
ret
into
es
test
mov
cmpsb
leave
pop
add
push
test
shlb
jno
call
arpl
lock
pop
or
shlb
lds
cltd
jp
adc
mov
mov
or
sbb
insl
inc
jp
sub
iret
je
jb
and
dec
int3
daa
test
loope
inc
or
in
bound
cmp
das
fwait
outsb
stos
lahf
jecxz
mov
mov
pop
lret
dec
insb
daa
lods
push
into
dec
std
cmovno
fdivr
inc
pushf
add
and
pop
push
pop
fdivr
scas
inc
outsb
ja
lock
jp
aas
movsb
lds
xchg
cmp
dec
test
push
add
push
out
dec
push
pop
shlb
push
xchg
pushf
out
push
gs
lods
xor
pop
icebp
mov
sub
or
inc
in
dec
jnp
jno
loopne
jnp
jb
ret
dec
jns
xor
push
mov
dec
mov
ret
jbe
sbb
xchg
icebp
movsl
test
inc
subl
inc
dec
and
out
dec
decl
addb
mov
and
leave
xor
pop
sbb
icebp
sub
cmp
adc
hlt
stos
cmc
mov
lea
xchg
fstps
test
sub
xchg
fwait
ret
int
xor
xchg
sub
add
xchg
jp
sbb
negl
add
add
dec
insb
or
vmovaps
push
jns
out
and
adc
loopne
mov
or
sbb
lcall
jle
enter
xchg
jns
pop
into
repz
mov
or
aaa
pushf
cmp
fimull
pop
int
pop
stos
ss
test
in
data16
fldcw
outsb
xor
xchg
jge
pushf
bound
faddl
push
rclb
xor
ret
out
push
mov
mov
arpl
pop
arpl
mull
stos
pop
xchg
sbb
repz
mov
push
add
pop
add
sbb
cwtl
dec
add
or
cmc
aad
out
call
nop
add
inc
mulb
icebp
cli
adc
in
push
adc
cmp
js
fsubrl
inc
popf
and
sub
xchg
cmc
and
fcoms
into
push
push
cmpsl
and
dec
sarb
repnz
lods
popf
pop
ficoml
addr16
mov
sbb
loop
jmp
outsb
out
sub
lcall
pop
adc
sub
clc
add
scas
adc
xchg
fmull
iret
lea
and
int3
sub
jae
sbb
sub
jp
rcrl
adc
flds
ja
xchg
mov
scas
mov
mov
dec
xchg
scas
push
pop
jl
xchg
inc
dec
lcall
xor
jg
mov
and
mov
nop
mov
je
pushf
mov
pop
mov
sub
inc
das
or
push
pop
loopne
or
jl
lret
push
mov
loope
inc
sti
jmp
lret
xchg
enter
cmc
lahf
mov
out
leave
rolb
dec
and
adc
inc
je
cmc
js
push
sahf
imul
inc
ja
jne
inc
mov
lret
mov
pop
fadds
int
lock
or
dec
sti
mov
xor
pushf
and
repnz
ljmp
xchg
scas
push
xor
cmp
dec
pop
xlat
or
iret
fsubl
lret
test
or
inc
pop
sti
ret
sub
int3
pop
iret
stc
in
call
or
sbb
jo
sar
dec
popf
inc
cmp
hlt
dec
jecxz
mov
lods
lock
int3
fisttps
cmpsb
mov
fistps
int
inc
and
mov
pop
addr16
mov
aad
addl
clc
lock
fildl
flds
lret
fmull
xor
xor
outsb
ror
xor
je
out
inc
jnp
es
cmpsl
rcrb
popf
jno
or
dec
pushf
cmpsl
mov
mov
sarl
rcr
into
imul
dec
aad
adc
pop
orl
add
sub
aas
or
push
xchg
add
sahf
add
lock
int3
jb
dec
add
in
xchg
adc
sub
and
in
inc
xor
sti
fcmove
sahf
int
rcr
sbb
je
ffree
scas
in
subb
mov
dec
mov
add
dec
or
push
add
push
pop
lods
push
cmpsl
jae
lret
lahf
test
mov
sbb
shr
cli
jle
imul
aad
jno
stos
lods
push
mov
pop
xor
mov
jno
mov
sbb
mov
imulb
cmp
stos
add
nop
cmpsl
and
push
mov
jecxz
stos
lret
pop
sahf
jo
push
push
mov
out
mov
sub
mov
inc
repz
test
xchg
sbb
stos
xor
xchg
jmp
dec
mov
sub
das
push
aaa
call
hlt
clc
leave
xor
ljmp
outsl
sbbl
dec
push
insb
sahf
ljmp
push
lret
push
xchg
icebp
dec
inc
iret
inc
jb
add
fcomi
sbb
test
stc
pop
addr16
loope
rcr
add
out
mov
dec
ret
dec
movb
cmc
test
mov
inc
cld
test
mov
call
test
push
imul
jno
sbb
icebp
inc
movd
sarl
and
cld
int
adc
cmc
dec
sbb
and
mov
in
int
scas
aas
loopne
in
scas
imul
and
adc
dec
lods
push
xchg
enter
and
ljmp
adc
lcall
push
cmp
jecxz
cli
stc
ret
inc
mov
mov
or
cld
mov
jmp
pop
into
adc
sub
arpl
imul
mov
cmpsl
inc
ds
lret
fcoms
pop
sarl
dec
add
pop
dec
jl
mov
jae
aad
inc
push
pop
mov
or
pop
mov
sbb
roll
mov
out
cmp
jg
lds
int
jo
or
jbe
or
pusha
sub
out
mov
adc
ret
mov
jp
sub
pop
in
out
mov
scas
test
mov
push
sbb
pop
scas
mov
xchg
jmp
mov
in
mov
jno
mov
loop
sarb
icebp
and
bound
cmpsb
out
sub
in
push
mov
addl
ds
fsubrp
sub
sbb
jnp
inc
add
xchg
imul
inc
mov
loop
outsb
adc
push
ret
aas
fiadds
lret
mov
xchg
or
xor
jl
cs
add
jne
cltd
inc
mov
imul
jae
test
pushf
or
fwait
xchg
lods
shr
mov
or
out
lds
adc
inc
mov
ret
jae
sub
jae
test
sub
jge
dec
mov
das
fiadds
loop
fs
push
popf
xor
add
daa
cmp
jbe
in
orb
xor
mull
fsubl
mov
mov
stos
or
pop
dec
jp
sub
push
fisubs
test
pop
outsl
cmpsl
pop
adc
js
out
cmp
push
bnd
cmp
inc
cli
xchg
lea
cs
cmp
inc
ret
das
cmp
fisttps
sar
xor
in
cwtl
jmp
lock
shll
inc
outsl
sti
sbb
xor
ss
adc
mov
xor
lds
mov
test
or
mov
or
or
add
test
or
jmp
dec
fistps
ja
jno
push
sbb
bound
mov
or
xor
insb
push
push
push
sarl
loope
loop
popa
pop
inc
mov
jne
push
cli
test
or
cmpl
call
jns
out
dec
int
pushw
mov
jns
outsb
and
fs
dec
mov
xchg
xchg
pop
out
adc
cmp
loopne
xchg
xor
insl
bound
shl
push
lock
lock
xchg
add
out
popf
rcl
js
mov
test
mov
jnp
mov
pop
cmp
or
imul
cmpsb
loope
loop
push
ficomps
xchg
jl
imulb
xor
xchg
jae
jge
mov
fmul
movl
shlb
sub
cmpsl
sbb
aad
mov
or
push
call
clc
or
jno
pusha
roll
cli
out
and
fimuls
rcl
mov
out
decl
cmp
addr16
lcall
movsl
push
adc
subl
addr16
pop
add
xor
cmpsb
outsb
clc
adc
movl
jb
sbb
rcr
xor
int
ds
mov
fists
test
jp
insb
adc
cmc
es
mov
or
lret
mov
jbe
push
xor
push
sub
xchg
test
push
push
jg
je
ret
mov
subb
pop
push
scas
mov
adc
shrb
and
xor
pop
outsl
add
adc
sarl
and
adc
loope
outsb
sti
dec
cltd
and
data16
in
data16
fildl
jo
mov
notl
add
inc
mov
aad
pop
test
pop
dec
xorb
gs
pop
pushf
pop
scas
lock
push
ljmp
test
jle
stc
repnz
inc
jnp
cmp
dec
xchg
and
lods
xchg
movsb
arpl
cli
push
std
sbb
mov
mov
les
jno
dec
stos
sbb
mov
ficoms
dec
push
fsubs
ja
ljmp
sub
aaa
scas
ret
and
mov
stc
test
cmp
cs
cmp
mov
dec
pop
mov
call
aas
pop
push
shl
jns
push
fsubs
cmp
fwait
sbb
test
loopne
cmpsl
push
fldcw
cwtl
and
out
test
mov
andb
jmp
outsl
mov
cmpsb
cmpsb
arpl
xor
push
sub
adc
idiv
mov
mov
mov
ror
xchg
xor
xor
ja
inc
inc
and
or
dec
mov
jmp
add
add
and
dec
mov
xchg
xchg
pop
aam
arpl
and
std
mov
or
pusha
or
cmpsb
dec
push
daa
jbe
scas
enter
add
mov
ret
adc
popa
je
push
sbb
pop
adc
fistps
cmpsl
loopne
les
inc
out
lods
imul
lods
jno
xchg
jbe
mov
cmp
mov
mov
xchg
sub
jno
in
cltd
stc
mov
cwtl
lret
add
sbb
xor
ds
pop
dec
sbb
inc
call
mov
push
and
rorb
negb
add
movsb
lds
out
jno
lret
test
lods
sahf
mov
mov
je
ljmp
pop
rol
xor
and
sub
or
mov
or
push
and
mov
add
mov
add
daa
sbb
call
imul
jmp
int
rep
adc
push
dec
xor
or
bound
push
or
popf
les
adc
popf
je
lcall
outsb
jne
test
cmp
cmp
outsb
mov
arpl
mov
mov
rolb
push
insb
pop
jmp
mov
jg
mov
sti
jae
fs
mov
dec
xor
sbb
inc
push
lds
lds
fdiv
fldz
fwait
sahf
and
fstps
imul
aaa
mov
mov
dec
dec
rorb
pop
imul
inc
jge
jmp
mov
push
push
insl
das
sahf
stc
push
jmp
movb
jp
in
dec
std
push
inc
inc
ret
cmp
pushf
xchg
int
aam
pusha
daa
in
xor
pop
fcmovu
fstl
lret
ljmp
lretw
xchg
and
gs
repz
mov
in
pop
dec
xorl
stos
dec
imul
iret
pop
jge
mov
xor
add
jmp
imul
pop
mov
scas
faddp
dec
ds
std
sub
leave
out
movsb
cltd
lods
in
adc
cmpsl
mov
shrb
sbb
in
idivb
orb
loope
mov
lods
cmp
xchg
xchg
cltd
fnstenv
mov
jo
and
imul
in
stos
xor
lret
inc
mov
hlt
and
in
pushf
lds
inc
sbb
pop
push
mov
rol
xchg
and
inc
inc
shll
push
movsb
jne
dec
pop
inc
jmp
push
dec
popf
push
pcmpgtd
pop
iret
mov
cmc
mov
mov
jnp
loopne
push
xor
pushf
dec
adc
jecxz
ds
or
ret
test
lret
push
in
mov
cmpsb
fwait
push
fcompl
imul
adc
inc
fs
fnstcw
dec
outsb
imul
push
push
sub
sub
aad
jl
xchg
mov
dec
or
movsb
jne
iret
dec
cmpsl
dec
roll
movl
in
cs
repz
add
cmpsb
xor
xchg
gs
subl
mov
out
je
imul
frstor
scas
pop
jbe
stos
push
inc
not
dec
mov
mov
mov
mov
sarb
scas
aas
pop
or
dec
cld
mov
pop
test
loopne
lods
jge
cmp
add
popf
rorb
or
mov
cmpl
in
imul
movsb
adc
xchg
sub
dec
scas
mov
pop
and
dec
dec
lods
add
xor
sub
bound
out
cltd
jae
mov
imul
faddl
and
dec
in
lcall
adc
in
adc
aad
sub
gs
mov
pop
outsl
out
stc
jle
pop
hlt
mov
cmp
mov
mov
out
subb
mov
sbb
pushf
ret
and
loop
jl
adc
ds
ds
out
cmp
jns
dec
xchg
add
push
sub
inc
mov
lahf
dec
sub
rclb
ljmp
sahf
shl
add
ja
aaa
neg
fsubrl
mov
ds
dec
pop
mov
cmp
add
fnstcw
fwait
ss
push
test
outsl
hlt
stos
adc
aad
outsb
pop
dec
adc
dec
adc
jo
xor
sub
imul
lea
mov
movsl
in
ja
push
popa
inc
ror
lock
sub
xchg
ret
jne
cmp
and
je
test
js
dec
dec
out
int
mov
loopne
sbb
pop
sti
push
push
and
std
xlat
sahf
add
mov
fiadds
jle
aam
dec
or
out
jge
cmc
pop
or
jle
push
sbb
test
inc
cld
icebp
add
add
push
arpl
add
mov
jb
jbe
mov
js
cmpsb
movsb
mov
sbb
aad
add
adc
or
add
lods
mov
in
jge
nop
int3
sbb
or
fnstenv
inc
mov
inc
aas
and
fistps
xchg
xchg
imul
dec
inc
push
arpl
lea
jnp
push
orb
sub
add
push
sar
arpl
iret
and
pop
dec
mov
shll
cmp
mov
sahf
mov
dec
xor
mov
cld
mov
xor
cld
dec
pusha
stos
push
inc
icebp
outsb
repnz
andl
int3
sbb
jne
scas
mov
cli
loopne
inc
std
mov
sub
pop
rol
and
addl
les
fdivr
add
xor
or
jns
adc
dec
jmp
fdivrl
mov
adc
fistpll
and
aas
mov
lock
cmp
nop
loope
cwtl
jae
adc
outsl
dec
xor
push
mov
fdivp
mov
mov
pusha
xor
loop
dec
add
dec
and
es
mov
das
jle
sub
jne
dec
cltd
cmp
movsb
jae
mov
xchg
imul
or
push
xor
mov
or
popa
mov
jb
xor
mov
add
movsb
dec
mov
jmp
fwait
pop
outsl
in
dec
repnz
sub
fsubp
mov
inc
leave
xchg
fiaddl
xlat
loope
lret
jle
push
sub
out
xor
xchg
jae
lret
ja
cli
fldt
lcall
icebp
or
sbb
rolb
cmp
push
shlb
jbe
sbb
cli
repnz
std
push
test
adc
hlt
jb
and
cmp
loopne
jecxz
popf
mov
inc
adc
or
cltd
push
and
cvttps2pi
jg
pop
insl
dec
testl
mov
lods
push
stos
lock
pop
cmp
rclb
hlt
inc
push
jmp
fcoms
cmp
lock
push
fistpl
pop
loopne
adc
adc
lret
sub
fs
imul
cmp
pushf
icebp
sti
popf
sub
les
lods
jae
pushf
inc
or
cwtl
ja
ds
jmp
xchg
push
int3
sti
loope
imul
das
and
dec
and
aaa
mov
xchg
add
loopne
xchg
mov
pusha
mov
mov
test
orb
mov
dec
xor
push
push
mov
notb
add
adc
cmp
aas
dec
in
sub
ja
mov
sbb
lfs
lcall
test
setp
ret
push
call
sbb
pusha
inc
sarl
in
xchg
aam
cmp
ss
push
push
sub
repnz
adcl
adc
add
insb
pop
xchg
fs
adc
mov
aad
inc
pop
aas
xchg
adc
adc
out
cwtl
inc
mov
dec
mov
sti
icebp
mov
sub
inc
or
dec
mov
lods
push
fucomi
mov
dec
out
cmpsl
xor
fisubrl
pop
leave
loop
jb
out
cld
xlat
or
xchg
adc
jns
repnz
jno
sub
les
test
cmp
subl
mov
mov
popf
stc
lcall
inc
ds
mov
pop
mov
scas
xlat
ret
aad
lret
fcompp
movsb
addr16
mov
daa
sbb
sbb
movsl
ret
xor
jo
stos
mov
gs
push
add
jecxz
xchg
jo
mov
mov
inc
insl
mov
adc
jmp
arpl
jbe
cmp
push
test
insl
test
test
mov
imul
movsl
push
xchg
jbe
imul
jo
adc
sub
and
and
xchg
jle
shrb
jg
aad
fbstp
dec
or
dec
push
pop
decl
sbb
test
in
cld
test
jl
jns
cld
cmp
fwait
jae
ja
test
sub
paddusb
jmp
imul
pop
mov
dec
add
shl
add
stc
xchg
adc
stos
add
ja
xor
ljmp
ret
adc
shll
cltd
jg
jl
add
inc
xchg
mov
xlat
and
enter
aas
jns
mov
adc
jecxz
inc
sahf
mov
push
jl
or
add
add
repz
inc
dec
xchg
inc
mov
test
jle
and
and
ror
test
cmp
addr16
xchg
mov
sbb
cs
mov
sub
jb
or
mov
sub
inc
sub
mov
cld
sub
mov
in
jns
test
jae
in
stos
icebp
xlat
daa
lock
call
je
sub
add
push
and
and
fnsave
test
sub
in
sub
jbe
enter
and
ja
sub
pop
iret
adc
ud0
inc
cmp
jecxz
rcrl
push
mov
and
aad
sarl
pop
in
popf
pop
mov
sub
pop
dec
cld
cmpsb
mov
sbbl
jecxz
jmp
and
es
mov
stc
enter
fs
mov
jmp
mov
push
inc
cld
xchg
cli
pushf
mov
and
lods
inc
rorl
cmp
movsb
and
mov
out
cmp
sub
xor
pop
les
loop
sbb
pop
out
push
cmp
xchg
push
cmp
lahf
and
inc
jmp
cld
cmpsb
pusha
icebp
inc
call
outsb
ljmp
mov
adc
lods
add
mov
mov
push
add
stos
rorb
adc
test
cmp
sbb
lock
icebp
ljmp
das
or
and
test
cmpsl
imul
out
int3
pop
and
add
mov
sbb
inc
dec
cwtl
dec
rol
push
out
pop
fldenv
cltd
dec
push
mov
dec
out
xor
test
or
psubusw
push
test
lds
sub
push
lods
jmp
in
clc
data16
ret
xchg
xchg
fisttpl
adc
outsl
and
subl
addr16
mov
nop
fs
mov
pop
loop
loop
enter
lret
std
and
cwtl
mov
test
push
loop
cmp
fdivr
mov
clc
cmp
mov
dec
ds
cmpsl
xor
in
inc
in
lods
out
int
cmpb
jno
pop
adc
dec
les
mov
rcr
ss
ss
lcall
test
in
mov
ljmp
sbb
out
enter
jmp
mov
sbbb
ja
push
pusha
xchg
push
hlt
pop
aas
fidivrs
or
add
add
rorb
mov
in
fsubrl
aaa
pop
mov
fnsave
ffreep
cltd
inc
mov
xor
cmp
subb
jl
test
jp
insl
insb
mov
imul
xchg
cmp
inc
sbb
jle
test
mov
addl
andl
outsb
or
in
pop
lcall
add
xor
inc
in
mov
jecxz
add
cmp
lds
in
xchg
inc
inc
dec
mov
mov
sbb
out
cmc
cmp
sub
iret
int
cmp
add
inc
adc
mov
lahf
and
cmp
adc
pop
mov
fists
adc
jne
push
mov
mov
push
add
add
mov
push
add
mov
cmp
mov
mov
or
cmovl
or
lods
imul
mov
sbb
ret
xchg
dec
pop
popf
add
xchg
jb
ret
popf
adc
in
daa
loopne
and
dec
jecxz
add
inc
bnd
fsub
in
ret
push
test
imul
inc
pop
pop
int3
aad
ret
sbbl
mov
das
push
push
loopne
inc
xchg
daa
int3
adc
cmp
xchg
nop
adc
je
stc
inc
loop
sbb
push
jne
sub
rolb
or
sub
adc
das
jae
mov
jp
rcrl
cmp
jecxz
sti
testl
push
aad
popa
movsb
or
or
sub
pop
jno
sbb
push
mov
jmp
dec
and
outsb
leave
repnz
dec
gs
or
sub
sub
sub
idivb
clc
inc
cmp
imul
in
les
js
int3
popa
test
stos
jno
or
adc
shrl
gs
fucomi
cld
enter
inc
dec
dec
jg
cmp
ret
int
jae
sarb
add
pop
push
mov
pop
pop
fbstp
push
pop
pop
dec
or
push
xor
jb
arpl
lods
xor
imul
xor
add
push
xchg
leave
push
nop
sarl
jns
push
pop
mov
push
repz
repz
mov
test
dec
rclb
clc
inc
push
cmpsb
arpl
jp
in
xor
sbb
push
mov
cltd
mov
arpl
into
and
popa
in
lret
imul
sbb
in
imul
out
jne
icebp
jle
jb
jno
mov
cmp
xchg
mov
nop
or
push
pushf
mov
mov
push
arpl
cmp
imul
mov
dec
sti
dec
outsb
in
shlb
lods
test
loopne
mov
int3
incb
inc
mov
add
push
push
jg
inc
bound
inc
imul
ss
mov
add
mov
dec
stc
nop
pop
jge
dec
into
out
mov
mov
rclb
test
cs
sbb
pop
dec
das
scas
sub
and
ret
clc
push
sub
push
pop
xor
leave
adc
repz
lahf
inc
push
outsl
push
xchg
jns
out
and
inc
out
es
inc
jmp
das
aaa
loop
xor
cmp
xchg
lds
inc
and
xor
call
test
hlt
inc
lds
dec
fs
pushf
pop
mov
outsl
or
mov
gs
cltd
je
pop
or
fs
fxch
sub
les
push
scas
mov
pop
fcmove
dec
xor
and
lahf
pop
int
xlat
rclb
enter
jl
mov
inc
loope
dec
ja
jo
xchg
filds
shll
sbb
sahf
out
aas
pop
and
outsb
std
push
out
insl
mov
neg
sbb
xor
push
or
cmp
outsb
inc
jae
push
aam
rorl
jnp,pn
aad
cmpb
jbe
inc
outsl
cmc
adc
xchg
push
mov
aaa
outsb
dec
xchg
shl
xchg
out
imul
insl
jbe
inc
loop
inc
jmp
xor
outsb
push
ret
jne
xor
adc
clc
outsb
cmpsb
out
fnstcw
ret
inc
daa
xor
fildl
cmp
lahf
lds
sbb
negl
bound
cmp
divb
sub
bound
int
inc
fwait
mov
in
add
mov
ret
mov
std
rorl
loop
jae
nop
mov
push
fs
add
fisttpl
icebp
sub
hlt
adc
jp
or
lahf
or
jle
sub
jge
icebp
dec
gs
lods
add
sbb
lods
cmp
lds
inc
cli
jecxz
stos
rclb
enter
pusha
push
push
xchg
shlb
pusha
or
ja
lahf
mov
jmp
xlat
ret
sbbb
pop
scas
cmp
icebp
jns
xor
fcoml
cltd
xor
sub
outsl
inc
in
adc
xor
jns
ret
mov
add
fstpl
push
out
jb
sub
add
negb
enter
sbb
incl
shlb
fs
push
push
std
gs
xor
into
popa
cmpb
test
addr16
idivb
je
loop
pop
push
and
jb
int
daa
inc
jp
in
cmpsl
sbb
dec
in
loopne
and
loope
fimuls
icebp
jno
movsl
int3
mov
mov
ss
cmp
cmp
shrb
test
dec
movsb
lret
adc
pop
add
push
fisttpl
rol
popf
fsubs
or
sahf
push
jl
sbb
jecxz
adc
cltd
mov
adc
pop
repz
aas
mov
rorl
test
lahf
hlt
or
xchg
hlt
ss
fs
and
rcrb
mov
mov
pop
fists
jmp
addb
cmp
xor
xchg
mov
dec
arpl
lcall
insl
jns
dec
pusha
lea
mov
lcall
out
adc
enter
lret
std
iret
pop
and
xchg
add
iret
stos
dec
into
out
das
dec
lahf
in
inc
and
sub
mov
decl
icebp
mov
test
test
jl
mov
sbb
dec
dec
ficoms
mov
jo
ds
xor
jae
xor
pop
dec
outsl
xor
stos
stos
or
fildl
add
pop
test
aas
sbb
push
insl
and
dec
cmp
and
or
mov
pushf
jmp
mov
call
rol
dec
jb
sbb
and
dec
and
mov
ds
jbe
int
mov
add
pop
mov
addr16
or
add
mov
xchg
ds
les
lcall
nop
js
outsl
fstps
fs
fisubs
shll
jge
and
cli
mov
mov
daa
cltd
xchg
cmc
popf
scas
mov
xchg
adc
or
repz
or
jl
fsubr
or
adc
dec
leave
inc
aad
pop
jecxz
pusha
xor
sub
inc
in
sbb
out
dec
xor
jns
fildll
dec
xor
in
pop
dec
pop
pop
gs
in
pusha
loope
test
loopne
pushf
loopne
dec
rorl
or
xchg
mov
or
lahf
shlb
clc
push
adc
in
enter
into
in
xchg
addl
pop
mov
add
inc
stos
das
inc
mov
xor
add
jmp
cmp
mov
enter
mov
fmull
cltd
xchg
push
lods
mov
out
add
jnp
fidivl
cmp
lea
and
add
ret
bound
fwait
inc
sbb
xchg
daa
jg
aas
inc
add
dec
jbe
mov
cmp
xchg
mov
or
fidivl
lahf
imul
lock
call
xor
push
jge
pop
adc
xor
ret
ret
enter
add
sti
cmp
imul
jo
mov
xchg
arpl
xor
in
mov
daa
movnti
lea
scas
push
pushf
cmp
and
and
aaa
push
in
sub
js
jp
pop
jmp
adc
jns
push
push
xor
hlt
shrl
addr16
shlb
push
pop
pop
pop
push
int3
dec
sbb
sbb
adc
addr16
je
sbb
pop
ljmp
and
sbb
dec
xor
jle
jns
clc
push
push
cmp
pop
sbb
outsl
push
add
iret
xchg
outsb
testl
pop
cmp
call
mov
sub
dec
xchg
test
shll
cmp
out
xlat
push
aad
or
xor
jnp
mov
lods
notl
fisttpl
push
leave
dec
fwait
inc
ja
mov
cltd
loope
mov
xchg
in
or
out
cs
mov
les
sahf
pushl
mov
inc
or
jecxz
xchg
cmpsl
in
sbb
mov
xlat
subl
leave
fisubl
pop
fiaddl
cmc
xor
xchg
stos
into
inc
xchg
adc
jae
inc
lods
daa
mov
cwtl
sbb
aas
sbb
cli
lcall
mov
or
or
push
rcll
or
sbb
jmp
loop
les
scas
sub
dec
cmp
jnp
mov
sbbb
jo
sub
dec
mov
mov
popf
xor
mov
mov
jmp
ret
movsb
shrb
add
sub
cmpb
clc
fsts
stos
cmp
mov
jmp
rorb
jae
mov
repz
inc
pop
mov
out
in
gs
lret
pop
jge
pop
insl
jb
arpl
fidivrl
int3
ljmp
add
test
push
mov
enter
mov
mov
sbb
fmull
imul
xchg
jge
sub
lea
mull
mov
adc
pop
add
shr
sub
mov
mov
add
jae
imul
pop
out
out
icebp
loop
push
jl
pop
filds
imul
inc
out
mov
fsubrl
icebp
out
das
lods
gs
lret
rcrb
in
aas
movb
mov
fmul
loop
jp
sub
rorl
or
xor
dec
jbe
inc
sub
idivb
cmpsl
jnp
pop
jns
push
imul
hlt
cmp
aad
mov
inc
cmp
mov
cli
cmc
jmp
ss
and
cmp
mov
das
and
clc
add
loope
enter
scas
test
add
xchg
ds
in
pop
insb
or
push
mov
push
popl
cli
lods
fs
xchg
pop
push
sbb
fiaddl
pop
sbb
adc
inc
enter
push
jle
sub
je
xor
addr16
mov
ljmp
add
cmp
les
xchg
loop
js
mov
dec
push
repz
push
sti
add
iretw
xor
mov
fimull
xchg
icebp
mov
and
inc
mov
jmp
lret
rorb
aaa
dec
sub
cld
jle
sbb
rclb
stos
sarl
sti
ret
cwtl
mov
mov
xor
add
xor
arpl
jg
das
xchg
adc
out
stc
lret
sbb
pop
out
push
or
lea
fldenv
xchg
push
push
jl
mov
and
ret
mov
rorb
jecxz
inc
add
lret
sub
dec
jp
out
push
arpl
xchg
inc
sbb
aaa
sti
rcrl
pop
fwait
pop
push
xchg
mov
mov
sbb
out
movsb
dec
gs
or
enter
sub
test
dec
sbb
mov
clc
pop
jmp
and
fs
dec
push
movsb
cmp
pop
mov
adc
paddw
idivl
jle
xchg
int
sbb
xor
pop
mov
dec
daa
xchg
imul
inc
adc
lods
jmp
aam
cmp
loopne
xor
mov
sti
mov
fimull
xor
pop
repz
sbb
mov
and
test
xlat
sub
cmc
pop
mov
pop
cmp
mov
pop
adc
inc
sbb
loop
insl
mov
dec
or
and
cmpsl
jo
push
sbb
mov
sub
mov
lds
loope
mov
sub
fwait
into
pusha
lea
jno
sbb
ljmp
mov
repz
loope
add
fcomp
ret
jns
hlt
xor
ja
push
pop
stos
ret
fwait
xchg
outsl
bound
xor
jno
dec
lods
aas
popa
lds
dec
mov
outsl
mov
and
fldcw
jns
iret
in
jns
adc
cmpsl
movsl
cmp
xchg
adcb
aas
jmp
add
ret
pop
repz
adc
in
mov
cli
lret
in
das
jne
sbb
jp
std
adc
test
lods
and
out
fcoms
test
lret
or
movsb
adc
repz
adc
lret
cwtl
mov
mov
rcll
sbb
mov
and
push
fnstsw
dec
decl
movl
push
cld
xor
or
in
clc
lods
sahf
inc
sahf
push
xor
lret
mov
aad
dec
mov
xchg
mov
movsb
add
int
sub
in
adc
or
cmovbe
jp
fsubr
lock
xchg
iret
jo
popa
stc
enter
int3
pop
pop
cmp
ret
dec
mov
add
push
je
pop
mov
test
push
in
cli
mov
adc
cs
add
lods
jmp
mov
test
mov
sub
js
fcmovb
sub
movsl
pop
arpl
and
fistpll
test
push
and
call
inc
add
rcl
pushf
movsl
pushf
cmpsb
sub
inc
jnp
cwtl
sarl
add
shll
mov
cmpsl
push
int3
mov
cltd
inc
or
push
lds
aaa
jns
sub
imul
and
mov
and
inc
dec
pop
cwtl
jecxz
pop
inc
sub
ja
iret
mov
out
mov
inc
push
sbb
pop
mov
mov
sub
mov
cmpsl
xchg
aas
enter
push
icebp
scas
xor
or
xchg
enter
sbb
jae
lock
mov
lea
add
test
add
push
imull
imul
bound
mov
sub
mov
popa
xor
dec
jns
ljmp
test
pop
xchg
push
xor
jl
jle
roll
loope
aad
movsl
mov
loopne
fidivrs
push
addr16
and
mov
cmc
push
push
fwait
repz
cmc
sbbl
mov
xchg
cmp
sbb
mov
js
inc
or
xchg
jmp
inc
fcoms
mov
cmp
aas
cmp
insl
fisttps
add
mov
dec
lcall
cmpsl
inc
test
and
adc
pop
adc
inc
xchg
movsl
mov
into
fs
mov
scas
pop
test
lahf
ret
ljmp
pop
mov
aam
mov
jno
add
pop
or
notl
jne
ds
cmp
mov
cmp
add
lods
cmp
jge
and
leave
rorb
jp
push
lods
xor
adc
rclb
loope
sub
mov
push
xor
push
dec
sub
xchg
mov
shrb
adc
ds
js
lods
and
pop
popa
ret
sub
out
push
ret
pop
sbb
aam
add
inc
in
push
adc
and
adc
inc
jo
lods
jl
jl
push
add
mov
sub
imul
xor
into
cmpsl
cwtl
jnp
pushf
pop
lea
loope
lods
loopew
inc
test
inc
xor
inc
loope
aas
shll
push
sbb
inc
ljmp
adc
roll
push
sti
inc
jl
aad
mov
jo
popa
pop
rorb
and
aas
daa
mov
mov
mov
and
int
mov
dec
inc
push
loop
int
adc
roll
sbb
lods
dec
add
pop
fistpl
cwtl
adc
outsb
mov
dec
mov
sub
dec
scas
stos
addr16
scas
aaa
mov
pop
test
aas
hlt
cvtps2pi
mov
pop
mov
scas
mov
arpl
mov
mov
ds
test
push
fcmovb
sub
push
and
cli
pop
roll
repz
rol
decl
mov
mov
roll
sub
gs
pop
scas
in
mov
outsb
pop
outsb
sbb
inc
pop
add
stc
cmp
xchg
ret
les
int
cmpsb
cmp
jecxz
test
xor
cmp
mov
inc
inc
pop
push
push
cmp
mov
dec
and
aaa
and
fcomps
jnp
lods
push
arpl
movsb
mov
jno
dec
loope
push
aam
pop
loop
mov
mov
enter
xchg
std
fistpll
out
mov
jle
or
out
dec
jmp
lods
xchg
or
shlb
cmc
inc
sub
cmpb
mov
ss
out
pop
xor
ret
lret
scas
cmp
mov
xchg
ja
pop
je
push
stos
aad
mov
sub
jge
subl
xchg
jne
cmpb
insb
into
cli
popa
orb
mov
movsl
push
pop
pop
lods
dec
xchg
lds
xchg
sbb
inc
sbbb
cmp
xchg
dec
or
or
pop
xchg
jo
adcl
xor
mov
mov
jbe
mov
lods
fidivrs
bound
pop
dec
orl
or
sub
inc
in
dec
fsts
lret
jno
test
stc
les
sub
shlb
xor
imul
jmp
xchg
mov
or
jg
xor
fwait
xor
orb
or
movsb
in
adc
jl
mov
adc
pop
xchg
in
bound
ret
bound
add
ret
mov
cmp
sub
push
or
call
jge
stos
pop
add
mov
inc
sti
aas
dec
cmp
shr
dec
xor
xchg
push
mov
inc
xor
sti
insb
or
test
xchg
push
sbb
sbb
sub
jp
lods
xlat
sarl
test
cmp
mov
xor
mov
pop
sti
stos
les
ja
mov
popa
sbb
loopne
in
sub
sbb
out
rorl
ja
stos
pop
sbb
pop
inc
stc
mov
pop
scas
mov
mov
sub
jg
sbb
jle
cwtl
insl
stc
std
push
pop
adc
add
shll
inc
xchg
notb
mov
insl
clc
hlt
test
dec
jl
lret
mov
xor
icebp
or
mov
jno
outsl
cs
popf
lods
push
fldcw
cmpl
stos
jne
lea
xchg
xchg
test
adc
xchg
rclb
subb
cmp
gs
xchg
std
jnp
aaa
fldcw
mov
popa
or
imul
xchg
shlb
inc
lret
sahf
mov
loop
or
lret
pop
or
mov
or
movsl
rclb
sti
mov
in
mov
stos
cwtl
add
cmp
scas
out
les
or
mov
mov
loopne
lcall
adc
xor
mov
filds
decl
mov
mov
add
test
cld
mov
stos
mov
jmp
sti
mov
in
dec
cltd
sbb
les
dec
dec
inc
in
mov
std
roll
in
dec
pop
out
mov
loopne
hlt
es
lods
stos
fcoml
mov
je
stos
adc
or
mov
shrl
pop
xchg
mov
sbb
leave
outsb
sub
xchg
adc
adc
push
js
add
and
aam
mov
out
dec
add
cmp
out
mov
sbb
add
rorl
ret
addl
fistps
inc
in
ds
test
push
jl
cmp
fidivrs
pushf
add
mov
cmpsb
aas
push
cli
sub
pop
lret
sbbl
sub
in
leave
jo
imul
mov
out
into
sub
ret
xchg
adc
iret
mov
or
out
dec
sub
lahf
nop
int3
xchg
movsb
mov
push
mov
cmpb
cmp
sub
add
into
aaa
adc
adc
push
ljmp
out
cmp
xor
dec
push
ljmp
dec
ret
popf
call
adc
mov
pop
and
inc
xor
xor
mov
pop
mov
into
mov
and
jmp
insl
jp
lds
out
cmpb
cmp
sti
fldt
les
cli
std
inc
int
adc
add
adc
add
test
add
inc
mov
popf
cmp
and
and
cs
xchg
stos
popl
xlat
jb
pop
lods
daa
lods
mov
ss
insb
stos
sarl
out
pop
sbb
push
insb
and
sub
out
pop
inc
cmp
xor
mov
pop
pop
mov
ja
dec
cmp
cmp
cmp
add
sbb
fwait
adc
inc
push
push
jp
cld
bound
add
xor
stc
js
cli
mov
arpl
sub
and
xchg
shrl
cmp
xor
popf
inc
xchg
out
cld
adc
dec
sub
jo
mov
sub
popa
sub
popl
xchg
rorb
xchg
out
in
jns
xchg
mov
and
pusha
idiv
xchg
insb
mov
push
and
data16
xchg
mov
mov
or
ror
cli
adc
aam
xor
test
pop
enter
addb
mov
mov
inc
lods
pusha
int3
xor
shll
imul
mov
xor
xchg
fdivrp
sub
scas
dec
ret
jmp
pop
mov
xchg
inc
ret
ja
sub
jae
and
xrelease
mov
fldenv
inc
fsubl
mov
add
aam
jge
cltd
cmp
xchg
shlb
out
xor
gs
push
sbb
rol
sbb
ja
dec
jns
lds
ret
jg
sbb
pop
imul
push
les
lock
nop
mov
dec
sarb
add
ss
sub
jnp
mov
pop
stos
fpatan
fdivr
mov
sub
sarl
dec
sbb
push
mov
stos
push
inc
out
cs
sbb
pop
xchg
mov
jg
fnstenv
iret
dec
inc
nop
adc
xor
sub
pop
jecxz
jg
xchg
jge
or
test
push
lahf
sti
adc
mov
mov
insl
lret
in
out
loope
movsb
fistpl
cmp
out
add
mov
fwait
mov
mov
cmc
or
add
leave
nop
push
push
add
push
lods
inc
cmp
jge
jae
popa
xchg
xchg
aas
aad
mov
gs
adc
pop
add
ficoms
orb
stc
xor
mov
movsw
bound
popa
pop
xchg
xchg
int3
ret
cmpsl
mov
add
test
pusha
xorl
loop
in
inc
outsb
jno
mov
out
xlat
repnz
scas
stos
and
in
ljmp
je
xorl
jl
xor
mov
test
dec
xchg
xor
or
clc
adc
xor
hlt
test
call
loopne
sub
sub
out
and
pop
addl
aaa
loop
adc
out
pop
cltd
and
std
stc
inc
mov
mov
xor
mov
cmc
jl
xor
out
cmpsb
pop
ss
mov
insb
cmp
test
lods
lret
sub
out
test
push
bound
sub
test
xor
push
mov
pop
xchg
addb
xor
jo
outsl
jge
dec
dec
adcb
enter
push
aas
push
mov
rolb
int3
jne
pop
mov
mov
data16
addl
int3
jmp
pushf
cmp
sarb
jg
in
mov
cwtl
outsl
sub
cmc
pop
or
cmc
inc
rcll
sbb
push
push
imul
int
push
stos
push
in
sbb
xchg
ret
mov
lret
js
dec
mov
cmp
push
mov
loopne
mov
jns
cmp
dec
sti
test
fs
inc
cli
pop
pop
add
dec
test
out
xchg
test
inc
xor
fwait
pop
ss
movsb
shrb
fisttpll
lcall
fidivrs
ja
jno
call
out
push
test
sub
imul
sti
fistpl
fucomp
or
mov
dec
sub
adc
push
push
lret
incb
imul
sub
test
or
out
dec
jno
add
fnstenv
and
cli
push
pop
ret
sbb
stos
sbb
inc
mov
insl
in
xchg
push
in
sbb
jp
and
dec
test
sub
xchg
test
test
adc
pop
mov
lock
addr16
mov
daa
das
lcall
shr
outsl
jnp
rcrl
arpl
push
push
cltd
xor
mov
in
std
divb
and
mov
ja
jl
test
push
inc
cld
bound
sahf
aas
fstps
ds
lahf
mov
ja
mov
push
out
cmp
and
aaa
out
fsubl
shrl
sub
les
mov
push
sbbb
call
loope
sub
fiaddl
enter
andb
cmpl
sahf
fiaddl
pop
outsb
adc
js
nop
outsl
std
mov
sbb
sarb
adc
mov
or
inc
xchg
out
lock
out
adc
notb
stos
jnp
popa
mov
mov
loopne
jle
lea
cmp
add
test
cwtl
jo
jo
movsb
stc
push
scas
mov
cwtl
dec
cmp
int
subl
mov
add
movsl
leave
lret
in
xor
xchg
jno
mov
sub
test
jge
inc
shlb
mov
adc
mov
ja
outsb
inc
dec
into
out
jecxz
lods
das
dec
lds
movsl
cld
stc
jecxz
std
inc
sbb
pop
nop
sbb
aad
stc
mov
out
mov
aad
xchg
push
sub
jae
mov
sub
icebp
sbb
jbe
push
push
gs
aad
or
repnz
xchg
std
mov
out
pop
pop
pop
pop
popf
cmpsl
or
jns
leave
mov
or
lods
pop
and
xchg
cmp
xchg
daa
data16
ss
aam
lock
xlat
xor
arpl
test
and
sub
shrb
sahf
stos
jmp
sahf
sbb
sub
iret
int3
out
popf
mov
je
rorl
in
add
xor
sub
mov
inc
ss
mov
add
iret
mov
fdivrl
xor
outsb
pop
pop
jbe
add
mov
in
push
inc
adc
push
jle
cmpsl
stos
sub
push
out
aas
mov
and
hlt
mov
xor
mov
frstor
pop
cltd
jae
add
inc
inc
mull
cmp
add
mov
call
pop
shlb
out
filds
cld
push
pop
mov
xor
mov
addr16
push
sbb
testb
xor
push
dec
cmp
pop
shll
pop
repz
icebp
imulb
add
xchg
jmp
dec
frstpm(287
inc
push
dec
call
ret
addb
dec
aas
sahf
sbb
pop
mov
mov
or
adc
dec
inc
cmc
xor
xor
imul
pop
push
add
adc
iret
push
add
daa
imulb
test
add
mov
std
subl
adc
sub
sub
dec
xchg
outsl
in
mov
sub
sub
bswap
and
add
dec
mov
xchg
push
inc
enter
xorl
out
mov
and
jge
fistl
cwtl
call
ret
fcoms
in
shrb
and
outsl
int3
test
cltd
stc
add
sbb
mov
mov
cmp
das
jle
in
pushf
xchg
arpl
repz
imul
stc
scas
mov
and
or
int3
and
imul
out
fistpl
cld
int
jns
mov
pushf
imull
mov
in
adc
cmpsb
sub
subl
in
push
dec
clc
jb
xchg
pushf
not
jae
sarl
repz
gs
or
pop
and
mov
adc
clc
fadds
mov
js
fcmovnb
inc
or
xchg
dec
push
jo
insb
add
mov
add
pop
xor
push
xchg
lret
mov
rorl
inc
cmpl
sahf
icebp
les
or
push
xor
push
sub
sub
mov
aaa
sbb
lds
add
adc
sbb
mov
push
xchg
fistpll
mov
scas
sbb
out
mov
sahf
xchg
add
xlat
aad
adc
jmp
mov
rolb
rcrl
sub
leave
jmp
test
pushf
pop
lea
inc
jbe
ss
mov
and
cmp
inc
stc
jmp
add
in
jo
ja
imul
inc
ljmp
ljmp
sbb
lds
bound
cmp
add
xor
loopne
roll
inc
or
icebp
out
sub
add
mov
fmulp
jmp
call
repz
xor
inc
mov
out
sbb
insb
xchg
fldt
bound
ljmp
cmc
int3
push
adc
xchg
daa
aad
mov
int
data16
jae
sbb
out
les
push
cmp
lahf
scas
mov
or
lcall
test
push
test
add
cwtl
dec
push
repz
and
ljmp
scas
popf
or
xchg
aad
sahf
pop
cmc
aas
push
test
in
ds
sub
sbb
clc
pop
pop
bound
dec
pop
push
jbe
push
xor
pop
rcr
icebp
cmp
pop
or
popa
fsubr
sub
insb
and
iret
jl
sbb
push
jg
test
pop
mov
sbb
test
hlt
int3
inc
test
into
iret
sbb
out
xorl
push
aam
ss
mov
pop
add
dec
pop
jmp
inc
stos
push
xchg
andb
jo
aaa
sub
mov
mov
pop
call
std
inc
xor
lret
adc
add
insl
inc
xchg
cwtl
or
cmpb
rorb
ror
data16
scas
or
sbb
fsubrl
mov
scas
pop
pop
outsl
test
pop
fsubs
arpl
lock
mov
in
rcll
movsb
arpl
mov
dec
add
mov
jns
mov
push
jl
adc
inc
push
sti
jae
jecxz
leave
xchg
xchg
mov
aam
and
data16
sub
push
mov
and
mov
mov
xor
adc
push
out
stos
jo
adc
fxch
jmp
cmpsl
push
sbb
fcoml
xor
jg
negb
mov
mov
cmp
or
scas
push
sub
adc
fcmovu
ja
dec
mov
mov
cs
movsl
adc
pop
sub
push
inc
lock
xchg
cmpsb
fs
insb
scas
pushf
pop
xchg
ror
out
in
aaa
mov
inc
cmp
push
outsl
imul
jne
aad
mov
adc
add
mov
xchg
js
mov
or
pushf
cmpsl
clc
enter
mov
daa
test
or
mov
leave
daa
mov
push
pusha
repnz
mov
mov
lock
sub
mov
lock
test
push
cmp
lods
xor
setne
shll
into
pop
icebp
dec
sub
or
nop
inc
outsb
bound
data16
test
sbb
leave
sub
adc
sub
or
inc
ds
or
xchg
cmpsb
xchg
sbb
or
outsb
dec
movsl
lret
xchg
fimull
or
mov
add
addr16
cmp
inc
and
and
inc
sbb
lods
xor
push
jne
out
sub
inc
lahf
pop
adc
pop
orb
add
daa
cmp
cmc
les
dec
and
or
xor
popa
mov
scas
xchg
fsts
mov
call
and
and
pushf
addr16
clc
dec
fcmovnbe
fsubrs
lods
fmuls
jne
mov
out
mov
and
lcall
jne
push
or
rol
jb
mov
dec
xchg
or
out
lret
mov
inc
ja
xchg
dec
arpl
xchg
inc
je
mov
rcr
mov
jbe
repnz
stc
dec
gs
sbb
fstps
sub
jge
insb
popa
dec
sbb
sub
sub
repz
shrb
or
pop
inc
sub
mov
cmc
mov
dec
das
add
ret
stos
pop
cmp
insl
in
cmc
xor
jle
daa
fiadds
loop
es
jnp
xorb
inc
xor
mov
jge
frstor
mov
or
push
test
xchg
nop
xor
jle
hlt
sbb
sub
mov
push
mov
insl
mov
xchg
jp
loopne
cmp
das
icebp
pop
and
adc
and
test
scas
push
jmp
scas
pop
loope
xchg
js
inc
bound
mov
inc
dec
movsl
gs
shl
mov
pop
mov
xor
fistl
inc
inc
imul
mov
dec
icebp
dec
lods
aad
fdivrp
push
insb
dec
push
inc
mov
ret
or
xor
and
mov
fstpt
add
sti
test
loop
sbb
jmp
adc
das
fnsave
dec
out
or
xor
mov
cmp
lahf
and
adcl
cmc
into
ret
andb
cwtl
lahf
roll
push
divb
fstps
pushf
mov
dec
cmpl
int
push
pop
push
lods
jecxz
lret
xchg
jnp
xchg
push
inc
sbb
aam
test
call
loopne
xor
jne
stos
xchg
inc
or
pop
inc
lcall
inc
and
repnz
inc
loop
adc
sbb
jne
push
jp
int3
clc
xlat
sbb
insb
mov
lods
sub
jbe
leave
xchg
pop
xor
cmp
gs
jae
fimull
jno
push
or
jmp
imul
inc
mov
shrb
mov
lds
aaa
push
sbb
and
in
rcl
mov
bound
adc
ja
cs
sahf
mov
xor
aaa
cltd
test
mov
push
test
inc
and
jl
lods
and
stos
xchg
cmp
and
pop
jmp
jae
call
xchg
push
ret
flds
mov
xor
shl
int
inc
data16
inc
js
lock
xor
xchg
xor
pop
mov
icebp
add
test
rcl
out
mov
add
movsb
ja
jae
sub
sahf
shr
or
and
in
mov
mov
sbb
sti
mov
ss
imul
ja
imul
adc
pop
pop
cmc
cmp
jbe,pn
push
pop
push
rcl
sbb
imul
or
cmpsb
pushl
out
int
jae
int3
add
xchg
data16
push
pop
add
popa
mov
fiadds
fwait
dec
or
cmp
sbb
xor
mov
stos
pushf
and
cmp
and
xor
fwait
scas
pusha
jl
xor
mov
mov
loope
mov
xchg
ljmp
test
pop
jne
ljmp
loopne
mov
sub
and
cli
xchg
lods
shrb
mov
dec
adc
add
int3
rcrl
sbb
aam
mov
sub
jae
js
push
pushf
in
cwtl
and
sbb
mov
scas
shrb
lcall
inc
mov
sbb
cmp
jns
jp
sbb
movb
popa
pop
add
pop
push
dec
iret
frstor
jecxz
and
cmp
cmpsb
aam
sub
scas
xchg
push
add
cmc
pushl
lds
cmp
pop
addr16
scas
adc
xor
mov
and
cmpsb
cmp
and
push
imul
repnz
pop
mov
pusha
out
les
lcall
sub
imul
adc
incb
pusha
stos
sbb
inc
mov
mov
lock
push
xchg
mov
mov
lcall
out
adc
sub
pushf
cmp
sub
xor
cmp
icebp
bound
push
dec
movsl
adc
mov
cmc
sbb
inc
daa
add
inc
sub
lds
xchg
pusha
mov
xchg
arpl
sbb
lret
pop
mov
mov
push
cmp
jmp
scas
das
xlat
inc
loope
sahf
loop
je
repz
rcrl
jb
lret
jmp
adc
inc
jp
push
mov
ret
cmp
jg
jmp
jb
inc
sub
mov
cwtl
jl
movsb
mov
std
lcall
aas
inc
xor
sub
pop
fdivrl
cmp
mov
adc
bound
or
jno
xor
adc
xor
test
dec
jo
pop
jbe
bound
pop
pop
xchg
aad
test
xor
add
and
orl
jecxz
pop
lret
popf
jmp
fwait
dec
clc
in
shll
xchg
and
dec
inc
jl
leave
sub
movsb
call
sub
mov
imul
push
adc
mov
hlt
jnp
scas
xchg
out
stc
inc
cmp
lret
subl
movsb
sub
cmp
insb
iret
pushf
mov
push
and
xor
or
fidivs
or
push
and
push
pushf
sbb
or
das
lea
outsb
sbb
mov
aad
inc
xchg
cwtl
pop
enter
sahf
adc
mov
ret
repz
insl
and
and
iret
lods
out
mov
push
outsl
hlt
lea
push
or
inc
movsb
adc
das
out
pop
cmc
sub
shlb
shrl
pop
cli
pop
sahf
pop
sbb
data16
pminub
loopne
push
cmp
mov
sub
adc
ljmp
xorl
lock
cld
dec
inc
pop
loope
insl
mov
jle
push
mov
mov
es
lret
inc
jno
jae
fdivrp
jo
nop
jae
push
rcrl
lahf
and
jmp
int
imul
fldt
mov
and
lock
pop
xor
pshufw
cli
dec
lret
imul
xor
addl
ljmp
fwait
mov
mov
mov
mov
add
jl
cmp
bound
lret
pop
xchg
hlt
mov
jb
sahf
je
int3
add
cld
cmpsl
sub
mov
mov
add
pop
into
xchg
mov
cmc
xor
pop
fs
rcll
xchg
or
inc
lret
pop
sub
test
mov
sub
aaa
jp
and
adcl
inc
test
test
fsubr
hlt
jo
xor
popf
mov
daa
shrl
in
aaa
and
outsb
pop
jg
pop
mov
leave
lcall
sbb
mov
jge
pop
xchg
and
aaa
push
dec
push
jge
ret
cmpsb
aad
jb
ss
inc
xor
sbb
sbb
jp
dec
xchg
push
sub
adcb
rol
mov
push
pop
mov
cmp
dec
inc
or
adc
mov
and
and
xor
push
ss
inc
mov
dec
xor
mov
clc
add
adc
pop
das
dec
pusha
cmp
xor
sahf
cli
or
mov
pop
lds
shll
ror
xor
push
shl
icebp
icebp
and
leave
shrb
jbe
mov
mov
dec
dec
jo
xchg
pop
stos
pop
xchg
inc
adc
iret
jp
fucomip
inc
push
ss
dec
adc
inc
mov
add
sti
lock
push
ja
mov
icebp
test
test
faddl
mov
into
mov
data16
dec
call
and
or
sub
push
sub
insl
dec
dec
jnp
testl
push
pop
pop
mov
enter
lods
jb
dec
pop
cmc
pop
testb
pop
aas
jmp
jge
int3
jae
dec
mov
mov
add
cs
stos
lcall
push
std
pop
outsl
and
xlat
cs
pop
inc
adc
or
adc
adc
jns
pop
or
daa
xchg
clc
adc
in
loopne
sub
sub
cmp
cmp
add
aad
lcall
test
cltd
adc
ds
dec
out
test
push
in
jecxz
and
imul
inc
fisttpll
dec
pop
ficomps
loope
add
sbb
lds
repnz
mov
sbb
pop
fisubrs
xor
adc
xor
cli
push
add
dec
pop
addl
shr
jb
jbe
cld
dec
incl
add
or
ret
lock
inc
hlt
cmpsb
call
iret
push
nop
subl
xchg
mov
push
pop
aam
cmp
jle
stc
outsb
cwtl
adc
add
lock
stos
adcb
loop
mov
or
adcb
ret
in
or
push
mov
call
xor
dec
sub
sbb
notl
dec
mov
inc
sub
sbb
stc
pop
call
pop
adc
shll
scas
lds
aaa
jmp
andb
inc
sbbb
fstpt
xchg
mov
int
or
mov
push
or
shlb
in
jnp
or
test
mov
lret
dec
or
sahf
imul
or
in
jae
push
loope
scas
dec
dec
cs
pop
push
in
cltd
scas
adc
push
and
or
jb
in
mov
and
fs
movsl
popf
shll
mov
pop
outsl
dec
cs
outsl
loop
movsl
cltd
movsl
xchg
iret
adc
cmp
imul
shll
aad
stos
in
movsb
sub
cmp
xor
test
and
mulb
lcall
mov
cld
mov
fnstcw
lods
cmp
loop
mov
test
out
into
inc
push
xor
addl
call
lret
inc
adc
inc
lods
das
xchg
xchg
cltd
subl
mov
rcl
inc
mov
cmp
xchg
xor
std
push
cmc
ret
cmp
ljmp
xor
and
int
int3
lock
dec
imul
movsl
xor
test
aaa
and
insl
scas
dec
aad
mov
std
loop
xor
inc
out
leave
pop
mov
add
gs
mov
mov
mov
mov
xchg
cmp
mov
or
sub
lods
jge
mov
or
sub
jbe
add
xor
jecxz
cmp
stos
mov
xchg
popa
mov
jge
jno
add
icebp
adc
push
bound
ret
stc
xorb
pop
popf
pop
inc
add
bound
out
mov
nop
sbb
rorl
bound
call
insb
fiadds
pusha
sbb
data16
subb
add
xchg
dec
inc
jg
lcall
pushl
add
push
fmul
mov
jne
iret
dec
mov
addr16
pop
or
insl
or
das
lods
in
imul
or
jecxz
sbb
add
aam
add
out
loope
sbb
or
mov
jge
repz
cmc
xor
out
push
pushf
mov
divb
mov
lea
dec
outsl
sbb
sbb
mov
sbb
data16
lret
sbb
lock
lock
mov
aaa
push
fcmovbe
push
jno
xchg
add
popa
repz
fnsave
xor
jl
ja
fiadds
test
push
arpl
cwtl
mov
dec
mov
bound
pop
cld
rcrb
jno
and
mov
iret
mov
cmp
out
inc
repnz
frstor
pop
shll
mov
inc
xor
mov
dec
fmul
out
or
jg
mov
out
sub
inc
subb
out
arpl
iret
sbb
fsub
or
inc
sarb
push
dec
jmp
int3
mov
inc
xorl
mov
cmp
jns
xchg
add
fnstsw
jmp
inc
lahf
call
mov
stos
add
sub
movsb
mov
cmp
or
jnp
dec
push
or
push
sbb
aad
movsb
mov
mov
sbb
test
cltd
inc
mov
dec
mov
xor
movsb
ds
sbb
dec
mov
lea
mov
or
jae
fdivr
pop
testl
mov
addr16
nop
push
ds
jl
insl
inc
mov
and
push
xor
jge
shlb
mov
shll
dec
clc
cmpsl
sbb
sbbb
adc
pusha
xchg
ja
scas
and
adc
xlat
mov
sbb
push
iret
pop
xlat
cs
ds
jb
cmp
dec
test
dec
xlat
jge
rolb
imul
jle
cmc
mov
inc
dec
shll
and
cmp
lods
fildl
les
out
imul
and
andl
or
push
lcall
xlat
int3
mov
in
push
dec
out
fdiv
xlat
int3
mov
mov
mov
add
or
ds
and
xchg
pop
fwait
and
pusha
jbe
or
lods
mov
lods
add
loope
pop
int
adc
xorb
xor
ret
lcall
pop
aas
dec
inc
sarb
mov
mov
test
pop
push
lods
push
insl
sub
jbe
daa
cmp
rcll
aam
mov
fildll
leave
sub
mov
test
dec
push
xchg
mov
mov
sub
addl
dec
mov
out
inc
sahf
sub
jg
cwtl
out
push
jb
ret
pop
mov
add
add
sti
lods
fiadds
imul
lea
pop
ljmp
enter
pop
ror
mov
adc
xor
or
mov
test
shr
xorb
sub
or
scas
arpl
test
fldl
or
aas
cmp
sbb
insl
ficomps
mov
cltd
movsl
gs
sub
movsb
inc
xlat
out
cltd
sbb
pushf
inc
leave
mov
push
shrl
mov
jge
pop
sub
mov
xor
sub
mov
dec
sbb
aam
mov
add
mov
out
loopne
mov
je
cmpsl
cmpsb
mov
fidivrs
sbb
mov
and
adc
data16
sbb
negl
insb
pushf
jecxz
adc
jge
mov
outsb
push
sub
jmp
sbb
pop
xchg
adc
aaa
push
push
lcall
ds
js
cli
inc
ss
lea
mov
mov
leave
arpl
and
sbb
lods
jge
mov
adc
push
jl
jns
lret
xchg
cmp
jae
cmp
inc
testl
xlat
dec
jle
add
mov
cmp
push
fcomps
adc
in
fucom
stc
aad
loopne
pop
and
movl
or
cmp
xor
adc
mov
ret
jl
push
lahf
cs
aaa
lahf
cld
andl
cmp
mov
cmpsl
gs
sub
rclb
mov
push
in
adc
leave
inc
cli
bound
mov
insl
in
out
pusha
mov
and
mov
pop
pop
jae
sbb
cmp
sub
sahf
imul
shlb
out
sub
mov
stos
xor
mov
inc
mov
fdiv
push
leave
add
and
add
data16
jg
inc
pushf
xchg
dec
inc
or
test
or
fs
mov
sub
mov
movsl
in
adc
xchg
inc
insb
or
ds
xchg
cs
out
pop
out
xor
mov
lock
sub
inc
pop
int3
sub
push
lea
and
cmp
fisubrs
xor
inc
inc
scas
outsb
jecxz
stos
loope
mov
fsubrl
inc
enter
cmp
and
and
lcall
jns
cmp
loopne
aas
fcomps
pop
fsubl
repz
inc
out
popf
nop
fildl
nop
or
mov
popa
or
or
pop
pop
mov
push
in
pushf
imul
or
ret
push
push
inc
mov
adc
sub
add
mov
sarb
pop
fbld
add
lret
push
mov
fadds
push
mov
fwait
outsl
or
pushf
cmp
daa
jb
rcrb
push
pop
add
mov
ljmp
arpl
mov
and
xorb
xor
push
mov
in
add
push
test
stc
pop
gs
adc
loop
mov
arpl
mov
jp
fcomip
cmpsl
hlt
dec
mul
inc
aam
mov
push
in
loop
imul
cmpsb
pop
pop
aas
mov
iret
add
js
jg
jbe
add
cwtl
addb
call
repz
mov
jg
adc
out
xchg
cld
push
mov
call
es
jnp
adcl
stos
rorb
and
daa
dec
push
inc
adc
mov
jo
out
sbb
loop
clc
and
lds
sub
cltd
faddl
aad
stos
cmp
roll
nop
idivb
cmp
mov
dec
mov
imul
ret
cmp
movsl
sub
cmc
add
push
and
fidivs
add
fisubl
push
or
fs
jbe
outsl
loopne
lock
test
stos
sub
mov
sub
push
icebp
loope
iret
mov
aam
andl
jns
lret
mov
cld
dec
lahf
stos
mov
cmp
std
arpl
push
pop
dec
xchg
insb
mov
lock
mov
add
sete
pop
dec
out
mov
push
out
mov
in
pop
lcall
cmovge
jne
and
push
loop
cwtl
xorl
inc
xchg
or
test
fcmovnu
adcb
fsubl
ficomps
lret
andb
pop
aas
xorl
dec
fistps
repz
mov
mov
inc
test
mov
mov
jle
mov
into
push
scas
adc
pop
cltd
lea
lahf
jno
sbb
mov
xchg
stos
pusha
js
mov
jle
into
cmp
xor
outsl
icebp
scas
push
sub
stos
pop
mov
mov
xchg
fmulp
push
push
sbb
fnsave
sbb
test
mov
push
aaa
das
daa
add
or
outsl
mov
cli
dec
jmp
jnp
mov
pop
or
jnp
and
enter
pushf
in
pop
and
jg
into
loope
mov
and
cld
lock
roll
loope
inc
push
addl
punpckldq
std
loopne
or
xchg
xlat
dec
popa
mov
sbb
fiadds
cmpsb
pop
mov
iret
arpl
outsl
mov
rcll
orb
stos
xor
pop
adc
cli
outsb
int
pop
inc
cwtl
clc
test
xchg
ror
shrl
sbbl
test
sbb
lock
jg
push
jo
push
ljmp
or
adc
jno
inc
dec
lock
inc
jmp
mov
sub
mov
mov
cwtl
jmp
idivl
pop
sub
sbb
hlt
xchg
jecxz
or
int3
rcrl
das
inc
sarb
call
imul
jb
mov
cmp
or
test
cs
lahf
mov
sub
or
push
aad
sbb
repnz
daa
xchg
xor
cmp
outsl
rcrl
or
dec
mov
push
xchg
mov
mov
aaa
push
addr16
sti
or
push
fcompl
loopne
sbb
mov
push
pop
lret
pop
fsubp
jg
or
imul
and
dec
cmp
cld
repnz
xor
and
mov
jge
maxps
sbb
xchg
loop
xchg
xchg
and
imul
jecxz
xlat
test
push
fbld
aam
push
shrl
adc
into
test
jnp
in
movb
je
xor
inc
in
jmp
subl
dec
imul
and
cmp
aas
call
lock
xor
mov
shl
sub
pop
push
pop
push
or
adc
imul
ret
and
ror
popa
push
out
cmp
fwait
jo
inc
movsl
test
pop
into
setle
xlat
inc
outsb
pop
fisubrl
mov
cmp
jl,pn
sub
push
add
dec
mov
jecxz
scas
js
aaa
inc
aaa
stos
push
cmp
pop
loope
aam
arpl
xlat
push
mov
jle
cmp
pop
jne
inc
jne
lret
mov
mov
and
and
in
pop
call
dec
in
icebp
outsl
or
outsb
fildl
xor
mov
xchg
insl
dec
rcrl
stos
stos
mov
fs
pop
sub
insb
xchg
mov
movsb
insl
imul
les
test
cs
push
lret
cmp
or
xor
mov
test
call
push
mov
shrl
push
inc
lcall
mov
fmuls
jp
jg
mov
xor
jp
leave
movl
mov
cmp
mov
push
fisubrl
xchg
jb
gs
pop
test
dec
add
aam
xchg
frstor
addr16
and
sbb
sbb
mov
jp
mov
pop
imul
into
mov
add
mov
mov
shrl
jnp
fisttps
jne
orb
movsl
adc
dec
sub
jg
cmp
insl
iret
sbb
mov
or
dec
xchg
xlat
cwtl
nop
jae
filds
and
ds
aaa
int3
popf
lea
add
xchg
mov
xlat
xor
ret
lcall
cmpsl
cmpsb
xchg
repnz
inc
mov
lcall
and
pop
stc
das
mov
aam
imul
sbb
aas
inc
mov
mov
fsubl
stos
loopne
fcomps
cmc
and
xor
sub
andb
sbb
push
inc
stos
cmp
into
adc
mov
sbb
popf
jbe
or
rolb
dec
rorl
daa
inc
fildll
enter
orb
loope
xchg
mov
dec
dec
or
fildl
pop
ljmp
int3
out
push
lds
movsl
mov
jmp
sub
jno
adc
imul
xchg
jno
outsb
sub
push
mov
mov
and
mov
push
stc
and
test
jnp
lahf
adc
insl
jne
pop
idivb
adc
aas
fbstp
lea
and
pop
and
test
pop
mov
mov
inc
xchg
inc
aaa
out
lods
movsl
ja
add
sub
dec
and
leave
and
insb
movq
jg
or
mov
dec
adc
sbb
loop
dec
aam
or
repz
push
xchg
dec
adc
cmp
jno
rorl
xchg
in
fcom
or
or
sub
aam
shrl
pop
addb
cld
fdivrp
mov
mov
js
jg
dec
es
rorl
mulb
repz
out
inc
mov
fiadds
lcall
pop
jmp
xor
rclb
mov
js
jne
sub
xchg
mov
mov
mov
sbb
scas
and
rorb
mov
les
es
mov
push
repz
mov
add
shrb
cld
or
popa
or
int
movntps
es
insb
into
jne
mov
cmpsl
pop
lahf
adc
xchg
sti
imul
add
sti
jl
mov
push
stos
mov
inc
or
pusha
lcall
or
mov
pop
add
jbe
mov
lcall
sahf
adc
xchg
fs
lods
sbb
push
pop
testb
adc
jmp
lock
fildll
push
popf
bound
jnp
int
pop
xor
xchg
fmuls
test
mov
and
fwait
mov
dec
pop
call
dec
jp
dec
sti
ja
aam
mov
ja
push
imul
ljmp
add
ljmp
and
das
sub
rolb
xor
mov
cmpsl
and
cmp
cmp
mov
cmp
rcl
inc
sahf
jl
sub
cmc
mov
inc
adc
inc
mov
nop
inc
pop
inc
push
inc
fidivrl
xchg
loop
cmp
insl
jmp
dec
imulb
out
rolb
pop
jg
mov
jne
adcb
out
ds
mov
dec
dec
jo
movsl
scas
rcr
fmulp
add
negb
inc
sbb
fs
aam
push
call
int3
mov
add
ret
cli
inc
dec
or
imul
insb
or
jge
xchg
addr16
mov
xor
push
inc
imul
mov
sub
push
stos
cmp
test
push
sub
mov
rorb
sub
mov
and
insl
in
adc
push
cmpsl
jl
or
and
insb
mov
in
movsb
mov
pop
mov
lods
loop
or
jecxz
jns
inc
push
or
inc
enter
in
test
xchg
and
subb
jnp
xchg
jp
mov
mov
mov
fwait
inc
lods
jne
jae
dec
stos
rcrl
or
test
es
into
pop
and
or
lcall
inc
adc
insl
mov
mov
add
jno
inc
ret
stc
jp
outsb
or
inc
sti
std
inc
test
lret
dec
jne
lcall
mov
sbb
adc
repnz
dec
inc
lret
cmpsb
test
outsb
add
push
stc
dec
subl
repz
std
repz
addr16
nop
or
pop
inc
sub
in
adc
pop
mov
insb
mov
push
aam
mov
mov
adc
leave
cmp
cmpsb
pop
inc
out
mov
ret
cmpsl
mov
dec
arpl
imul
xchg
sub
dec
mull
xchg
adc
scas
int3
or
lcall
rolb
add
dec
lods
push
dec
out
inc
adc
cmp
stos
sub
add
sbb
data16
pop
lods
mov
jo
rclb
out
xchg
fcompl
jge
adc
or
test
cmp
stos
fldt
out
jl
fs
roll
xor
cwtl
jge
jmp
int3
leave
jp
test
aas
add
mov
push
pop
cltd
mov
data16
jmp
shrb
add
cmp
inc
shrl
pop
in
mov
sbb
cmp
dec
dec
jge
aam
mov
wrmsr
insb
lea
outsl
and
xor
push
insb
imul
imul
mov
pop
imul
jg
shrl
testl
lods
sbb
jo
pop
out
icebp
push
xchg
shrl
and
pop
lret
xchg
xor
movsl
or
aad
push
sbb
lock
sub
lret
jecxz
jno
scas
addr16
daa
pop
xlat
scas
and
mov
xchg
fwait
xchg
ja
movsl
mov
cmp
int
test
cwtl
inc
jnp
ds
in
int3
xchg
adc
and
scas
mov
rorb
jne
fwait
cmp
pop
fs
xor
out
in
lock
inc
mov
notb
and
inc
aam
inc
fbstp
loop
push
sti
cmpsl
cmp
or
scas
push
cwtl
iret
jg
iret
sub
mov
push
jmp
fbstp
dec
out
adc
fwait
js
inc
cld
push
lods
or
sbbl
int3
aas
dec
xchg
mov
cmp
push
adc
jp
inc
push
stos
add
sbb
push
jle
xor
rol
jecxz
dec
je
sahf
rcr
or
dec
sbb
sarl
xorb
jl
cli
cmpsb
out
sarb
fnstcw
pop
adc
xchg
xchg
ror
mov
jl
subl
movsl
cltd
add
test
cmpl
mov
lds
lret
mov
shll
sub
test
stos
xchg
icebp
std
mov
push
xchg
xor
stc
in
mov
fildll
jno
xor
xchg
in
dec
xor
adc
jnp
leave
jno
test
dec
mov
cmp
and
xchg
push
test
push
loope
sahf
mov
lret
cmp
jmp
sbb
add
mov
pop
jno
test
adc
or
cwtl
mov
out
shll
sbb
outsb
shlb
fildl
lret
cwtl
ds
inc
jae
inc
orb
cmp
or
or
je
sti
add
jecxz
xchg
jge
outsb
push
aam
sub
inc
pop
pop
out
xor
adc
popa
out
cmp
lcall
cmp
mov
jg
jo
daa
mov
sbb
scas
dec
fisubl
mov
bound
fucom
dec
aaa
inc
cltd
adc
test
jmp
cwtl
jo
cld
je
icebp
xor
jo
add
repz
addr16
insl
cmp
loopne
pop
push
inc
jno
loop
les
cmpsl
push
xchg
lea
cmc
push
xchg
data16
ss
or
ds
fsubrp
int
dec
out
or
jle
mov
sahf
xchg
jge
fcoms
push
push
ss
mov
jne
fs
inc
int3
addr16
ret
jb
and
dec
xchg
push
or
and
stc
cmp
cmp
and
mov
xchg
push
jo
adc
notl
inc
pop
in
mov
jmp
rorl
mov
push
rorb
icebp
mov
push
test
cmp
enter
je
push
cmp
stc
ja
cmp
enter
ljmp
fcmovu
sti
xchg
cli
sub
cmp
movsl
sbb
push
xchg
jno
jbe
dec
aad
cs
cmpsw
xchg
xchg
or
cmp
sbb
xchg
in
jbe
add
sub
clc
mov
sahf
pop
mov
inc
lds
cmp
xor
aam
inc
jo
cld
jecxz
ss
xor
test
dec
mov
pop
movsb
stos
add
test
scas
stos
scas
and
arpl
inc
pushf
fwait
jae
xchg
scas
add
sub
mov
inc
insl
mov
aad
jmp
jno
out
inc
lock
sub
popf
loopne
sarb
xchg
pop
mov
ljmp
cmp
xchg
js
mov
sbb
fs
insb
fcompl
sarb
imul
lock
mov
mov
in
lds
mov
mov
mov
push
pop
negb
into
inc
cmp
popf
bound
jo
pop
sub
out
movb
notb
push
fcmove
push
mov
jo
fmul
orl
mov
daa
fwait
cmc
cmp
shl
mull
adc
push
mov
mov
adc
cmp
mov
cltd
adc
lock
add
in
mov
das
push
shl
xchg
or
mov
lods
ret
or
mov
push
jle
ds
popf
xor
jge
inc
jno
push
push
test
xor
dec
mov
cmp
pop
mov
aas
ffree
loop
pop
add
and
dec
cltd
stos
sbb
aam
stos
or
push
push
enter
mov
rclb
pop
movsl
mov
jle
stos
push
into
sbb
xor
insl
fsts
test
aad
insb
mov
pop
clc
xor
sbb
jns
scas
sub
bswap
pusha
sbb
lock
sbb
push
push
xchg
xor
in
clc
cmc
inc
push
stos
fcoml
mov
xor
fildll
pusha
std
or
sbb
inc
fsubrl
dec
insb
xor
ss
dec
or
cmp
ja
enter
cld
sbb
pusha
fstp
mov
pop
stc
xor
pop
ret
sbb
pop
cmp
mov
jno
xchg
lods
divb
sbb
pop
shll
fadd
jns
popf
or
mov
popf
cmp
leave
adc
bound
inc
loopne
inc
pusha
int
mov
insl
adc
mov
testb
cmc
imul
mov
adc
and
sbb
scas
arpl
pop
shll
xchg
add
cld
xorb
test
push
scas
insl
add
xchg
push
popa
sub
arpl
jae
movsl
and
mov
jl
adc
std
mov
add
mov
lock
mov
or
pop
mov
dec
pop
lds
out
adc
jle
cs
mov
addl
or
xor
dec
test
popa
divb
inc
push
loopne
xchg
out
adc
fwait
shlb
jnp
das
push
inc
xor
test
xchg
testb
jmp
lds
setae
xchg
mov
push
or
push
xor
lret
fcmovb
les
or
cmp
mov
aad
das
mull
test
xchg
jmp
adc
negb
bound
jge
and
xorb
adc
adc
lcall
and
fistps
push
clc
sub
and
out
movsb
inc
mov
push
lods
cmp
add
jmp
pushf
push
fmuls
and
in
dec
and
add
and
mov
lock
repz
sub
cmp
add
orl
mov
in
or
push
xor
dec
inc
es
push
addb
lock
adc
cmp
mov
movsb
jg
pop
sahf
or
andl
cmp
mov
in
jno,pn
lods
push
sub
lods
stos
or
mov
pop
mov
fisubs
xchg
ss
xchg
out
dec
mov
mov
ljmp
ss
repnz
xor
lcall
das
arpl
negl
mov
jp
ficompl
mov
mov
cmpsl
dec
sub
jo
outsl
cmpsl
jg
jnp
sbb
inc
fidivrl
jbe
bound
test
lods
adc
add
dec
cmp
popf
inc
push
sub
mov
push
adc
sub
imul
lea
fwait
mov
cmpsb
pop
xchg
fmul
adc
add
push
xor
or
addr16
sahf
jp
aas
mov
pop
frstor
fsubrs
adc
movsl
arpl
sete
lds
mov
movsl
orl
inc
popf
sbb
or
in
inc
xchg
sbb
inc
or
xchg
cld
fsts
lds
pusha
jne
mov
or
mov
pop
imul
loope
gs
jle
mov
loopne
push
mov
sbb
sub
sub
mov
sbb
lock
lcall
mov
xchg
xor
inc
ja
adc
rorl
sub
ret
push
scas
cs
popa
lods
jnp
add
int
xor
std
loopne
mov
pop
xchg
add
jbe
adc
lock
inc
mov
push
rclb
or
jns
inc
inc
call
lock
iret
mov
testl
sub
in
std
lahf
out
lock
shll
dec
push
scas
add
xchg
negl
sarb
pop
cmp
popf
cld
movsb
pushf
sti
add
xor
out
loop
adc
xor
daa
dec
das
movsb
pusha
lods
xchg
push
push
scas
cmp
lods
xor
ljmp
decl
mov
lret
pop
xchg
stc
bound
fcoml
in
jbe
or
mov
fimuls
clc
sbb
xor
jae
adc
xor
mov
fistpll
xorb
dec
mov
lods
add
pop
outsb
lret
lods
mov
jns
push
jle
push
sub
mov
fbld
xchg
pop
mov
inc
add
je
xchg
inc
outsl
std
leave
pop
xchg
out
lods
and
ficoms
pop
inc
xorb
incb
andl
sti
or
inc
ja
lea
xor
xor
adc
mov
loop
push
push
mov
jg
xchg
adc
out
in
xchg
pop
in
sbb
arpl
push
fcmovne
or
dec
movsb
and
repnz
add
ja
fmull
inc
pushf
push
xor
lea
cmp
push
jo
or
shr
fwait
aas
xchg
and
pusha
adc
mov
inc
inc
sub
xor
fwait
pusha
mov
and
out
or
and
jo
lods
lock
inc
mov
fcoms
scas
hlt
jbe
and
shrb
inc
cs
cmp
aaa
pop
out
or
inc
xor
les
shll
leave
popf
pushl
sbb
push
cmpsb
cmp
push
out
mov
xor
or
push
sti
cmp
jmp
aas
xchg
xchg
outsb
xor
jle
push
test
jp
cmpsb
dec
nop
xor
inc
cmpsb
flds
stos
jnp
pop
imul
xlat
mov
ret
push
jae
jmp
repz
inc
mov
call
inc
or
lods
shll
pop
roll
jp
dec
popf
pop
movsl
mov
in
lea
test
adc
cmc
addr16
iret
jns
js
jbe
ret
gs
sub
repnz
daa
cmp
enter
cld
inc
mov
jl
mov
inc
add
jnp
push
push
sub
mov
and
fucom
dec
call
cmp
jecxz
bound
adc
add
dec
enter
sarb
scas
jle
mov
cld
popf
inc
or
mov
mov
cltd
dec
fnstcw
stos
xor
sbb
cs
or
mov
enter
sub
pop
cmp
adc
jnp
pusha
mov
cmpsb
fidivrl
hlt
cmp
loop
dec
movsl
sub
mov
aam
fnstsw
aam
mov
xchg
int3
nop
pop
xchg
add
je
movsl
sub
insb
inc
pop
cmp
call
push
gs
pop
movsl
jl
dec
mov
popf
leave
push
outsb
dec
negb
push
inc
std
stos
stos
cmpsb
inc
mov
fistl
adc
hlt
sbb
lret
sbb
xchg
cmp
jp
push
outsl
std
stos
ja
push
rcr
add
adc
lret
cmpsb
push
dec
outsl
movsl
mov
jno
push
lret
in
ds
popa
pop
dec
mov
jo
pop
insl
mov
ds
mov
rolb
pop
or
pop
adc
mov
sub
repnz
call
lahf
xchg
cmpsb
ret
mov
lea
jo
addl
mov
mov
xor
mov
bound
test
arpl
lods
cmp
pop
mov
aad
jo
ds
in
outsl
in
shll
in
lcall
pop
inc
repz
mov
cmp
pop
daa
mov
push
repz
test
rclb
and
dec
jne
loope
sub
push
out
sub
cmp
dec
jl
and
cs
outsl
mov
adc
xor
sub
or
gs
testb
repz
bsr
cmp
js
jo
mov
imul
js
jmp
lret
adc
cltd
ficomps
mov
mov
sbb
add
adcb
pop
push
xor
cwtl
test
bswap
jle
movsb
dec
ljmp
rorl
sbb
out
push
or
inc
inc
test
lret
jge
adc
xchg
lock
cwtl
cmc
sub
and
pop
inc
into
mov
sub
pop
adc
push
push
mov
scas
sub
mov
adc
lret
lods
push
fiaddl
std
dec
jg
cmp
push
xchg
cmpsl
mov
jo
sbb
cli
mov
dec
or
clc
pop
icebp
cmp
in
jne
mov
imul
insb
push
fs
add
or
jo
inc
cmp
fsubr
cmc
in
fidivrl
mov
push
pop
sbb
mov
pslld
pop
push
jno
sub
push
in
jb
sbb
nop
pop
xor
add
mov
lcall
clc
fildl
push
in
lods
add
or
dec
mov
mov
testb
jbe
lock
add
rolb
push
inc
lret
or
imul
mov
push
pop
or
nop
fadds
popa
shlb
sbb
icebp
mov
pop
bound
sub
fwait
xor
cli
add
aas
call
add
or
lds
push
adc
mov
imul
and
jmp
jo
lcall
sub
clc
es
push
sbb
gs
dec
mov
psrad
std
pop
dec
stc
mov
daa
in
sbb
clc
inc
ljmp
sub
out
mov
and
or
xchg
mov
aaa
mov
fmuls
add
add
ss
int
dec
mov
repz
or
pop
je
push
lret
and
mov
lcall
scas
jns
sbb
mov
aaa
pop
inc
movsl
xchg
imul
jno
add
hlt
lahf
outsl
pop
les
push
dec
repnz
mov
idiv
es
clc
ljmp
in
pop
mov
mov
cltd
and
movsb
mov
inc
push
fcom
shl
cmpsl
xchg
inc
in
fs
out
js
int
popf
or
cmp
pop
mov
and
stos
je
push
cwtl
bound
xchg
jo
loop
sbb
adc
sbbl
daa
jecxz
loopne
scas
jg
fcomip
inc
adc
and
mov
mov
dec
add
ret
test
orl
adc
mov
lods
enter
jbe
in
adc
sbb
inc
jecxz
pop
mov
push
pop
scas
lds
mov
jg
cmp
push
out
jnp
add
sub
mov
push
and
mov
or
xor
sti
ja
jl
dec
repnz
repnz
les
mov
cs
or
add
adc
pop
fisubrs
lret
add
push
mov
ja
test
xlat
jg
fs
add
bound
jle
push
movsb
push
lods
mov
sar
nop
shl
push
xchg
cmp
insb
fimuls
inc
cld
pop
loop
jecxz
inc
arpl
les
inc
fcompl
outsl
fldl
inc
mov
or
mov
add
mov
test
scas
dec
sbb
sub
pushf
test
sahf
addr16
fsubrl
sub
lret
mov
repz
sub
pop
push
push
sub
mov
int3
adc
mov
repz
mov
push
xchg
add
inc
cli
clc
or
jecxz
mov
xchg
popf
jl
mov
jb
addr16
loopne
jbe
imulb
lret
cmp
add
jns
mov
daa
jnp
mov
cltd
lret
push
mov
rcrl
cltd
mov
cli
fstpt
les
jp
fwait
lret
shl
mov
out
pop
cmp
mov
inc
cmp
xor
decl
rcrl
lret
add
or
gs
jns
sbb
jbe
mov
jo
shlb
addb
fsubrp
sub
sbb
fwait
mov
arpl
pop
push
dec
in
adc
ficoms
or
dec
loopne
pop
fsubrs
in
out
test
and
loop
or
xchg
mov
insl
add
dec
push
dec
or
shrl
int3
ja
fcom
test
push
hlt
std
mov
cmpsb
shl
popf
addr16
adc
rcrb
loop
stos
mov
push
mov
addr16
jecxz
and
mov
dec
cmp
mov
xchg
pop
loope
enter
sbb
int3
mov
adc
or
test
sbb
or
xchg
cmp
cld
scas
repz
xchg
pop
popf
testb
in
leave
out
xchg
push
pop
es
mov
dec
daa
shlb
sbb
int3
inc
xor
mov
fsubp
push
out
push
dec
push
dec
out
call
mov
repnz
dec
pop
lcall
push
inc
stos
inc
sub
mov
mov
ret
push
fldt
dec
push
lret
cmpb
mov
mov
xchg
jnp
out
stos
xor
mov
sub
add
test
fs
pop
imul
push
sub
enter
add
cmp
mov
pop
les
xor
pop
xor
out
xor
insl
lods
nop
outsl
mov
sbb
stos
mov
sub
jg
cltd
mov
jmp
push
cmp
sub
ljmp
mov
push
scas
inc
mov
sbb
xchg
fsub
icebp
aas
mov
cmp
into
push
cmpsb
sti
call
fidivrl
cmpsl
addr16
add
jo
sbb
mov
in
mov
lea
pop
call
jmp
movsl
pop
loope
and
popf
int3
jno
add
xchg
and
mov
insl
mov
mov
sbb
and
lods
mov
pusha
test
ss
stos
and
xlat
repnz
daa
and
je
fdivrl
mov
mov
mov
dec
dec
add
xor
es
pop
outsb
cmp
js
jno
pop
daa
filds
lcall
dec
jg
sub
inc
movsl
fstl
mov
ljmp
add
mov
in
jp
popf
loopne
jbe
mov
shrb
mov
lock
lds
dec
add
rcrl
dec
cmpsl
mov
sub
mov
mov
fs
in
or
aas
mov
andb
xchg
or
pusha
repnz
pop
mov
loope
data16
mov
outsl
xlat
popa
outsl
inc
inc
ret
in
fwait
add
push
addr16
lea
movsl
push
test
dec
sub
push
leave
inc
daa
rcl
scas
xchg
sbb
mov
movsl
add
ret
xor
in
dec
je
push
jae
add
insb
mov
lods
xor
and
lahf
dec
mov
add
mov
aaa
and
lcall
pushf
repnz
inc
fnsetpm(287
rorb
test
fldcw
lea
sbb
addr16
sub
jecxz
aaa
pop
gs
and
xchg
xchg
xor
jge
jno
add
arpl
stos
addr16
jp
out
push
loope
pop
mov
stc
push
outsb
jg
push
adc
lods
out
cmc
sarl
outsb
push
fsubs
into
in
aas
push
hlt
lcall
mov
outsl
mov
jbe
cltd
rorb
cs
dec
cmp
subl
mov
pusha
mov
popa
pop
les
ret
dec
push
fldenv
aaa
xor
or
dec
das
jno
inc
dec
rol
push
inc
push
lods
sub
add
xor
in
fdivr
and
cmp
shlb
mov
aaa
mov
sbb
sub
adc
mov
inc
shll
pushf
pop
pop
sbb
or
cmp
je
pop
xchg
arpl
icebp
and
cwtl
ds
inc
shll
mov
nop
sbb
xchg
and
sbb
arpl
fsubs
std
imul
sbb
cwtl
lods
lods
cli
xchg
int
inc
inc
cmpsl
bound
cltd
pop
aam
pop
mov
inc
add
into
sub
mov
lods
push
or
bound
divl
cmp
push
jge
sub
andb
mov
mov
outsb
inc
sbb
lahf
xchg
out
dec
inc
insl
mov
enter
adc
pop
in
push
xchg
roll
push
add
sbb
ret
xor
jns
pop
and
mov
push
outsl
clc
das
stos
icebp
ret
aaa
fcomp
call
mov
jbe
pop
int3
ja
rcrl
rorb
loope
lcall
iret
jmp
inc
bnd
mov
add
dec
xchg
es
sub
or
popa
xchg
imul
or
outsl
icebp
jle
xchg
dec
xchg
xchg
out
test
scas
xlat
push
test
xchg
mov
cmp
clc
cmp
sub
or
push
leave
idivl
and
loop
xor
cmpsb
lock
push
xchg
push
ret
mov
dec
cwtl
inc
push
in
and
adc
popa
or
pop
add
xchg
adcl
sti
int3
stos
jae
shl
pop
je
das
lret
cli
sub
inc
das
in
shl
das
mov
xor
add
mov
adc
cld
mov
adc
lahf
push
cmp
pop
adc
jbe
hlt
andb
es
jg
ret
out
inc
adc
bound
sbb
fldenv
mov
xor
add
push
adc
xor
mov
mov
push
insb
jle
mov
sub
clc
aas
or
adc
cmp
aaa
test
dec
arpl
fcompl
and
movsl
pop
add
out
rcr
pushf
lock
fxch
fmull
ljmp
shrl
nop
and
pop
mov
jbe
cld
jnp
popa
lds
push
and
dec
add
mov
jns
pop
cs
mov
push
cld
jns
sub
mov
xor
pop
out
sbb
repnz
sahf
or
pop
fstl
sub
test
push
les
cmp
cmp
push
jl
stc
mov
in
push
ret
mov
and
xlat
in
test
push
scas
push
sub
sub
inc
dec
addr16
xor
sbb
cmp
jle
push
js
xchg
xchg
imul
test
loopne
movsb
shll
por
mov
sti
idivb
pushf
jmp
insl
popa
cmp
mov
pop
sub
out
inc
lock
xchg
ret
or
adcl
dec
lea
push
insb
xchg
nop
adc
js
cs
and
cld
icebp
loopne
mov
mov
inc
daa
fbstp
dec
out
jmp
dec
int3
add
aaa
lret
aad
and
call
inc
movsl
add
jo
xlat
in
stos
loop
add
mov
and
mov
lods
xchg
stos
xor
jg
cmp
pop
mulb
sbb
inc
mov
xor
ds
addr16
dec
movsl
ret
pop
sub
xchg
fisttpll
mov
cs
and
mov
cmp
cmp
imul
mov
jp
add
push
inc
mov
mov
into
pushf
lock
popf
cli
mov
ss
xchg
loope
test
dec
cltd
sbb
push
jl
fs
cmpsl
gs
cs
dec
jl
mov
enter
sub
outsl
push
dec
sbb
int
outsb
xchg
adc
shll
andb
scas
scas
sub
xchg
inc
fwait
das
fstpt
mov
in
adc
sbb
test
inc
mov
outsl
and
loopne
fs
jl
inc
into
xlat
xchg
js
add
mov
call
std
xchg
clc
int3
mov
out
mov
out
out
sub
aaa
cli
fldenv
inc
lret
test
das
lods
daa
xchg
push
mov
pop
in
xor
mov
imul
sbb
adc
hlt
fwait
imul
icebp
sbb
loopne
hlt
fmulp
cmpsb
icebp
shlb
and
cmp
out
sub
jmp
jb
push
fidivl
mov
jl,pt
cs
push
xor
enter
push
lahf
inc
int
or
mov
out
push
jns
sub
hlt
mov
daa
push
aam
clts
cmp
loopne
cld
mov
push
daa
xchg
dec
push
das
cmp
fwait
scas
aas
fisttps
pop
mov
dec
add
sub
mov
daa
adc
xchg
in
arpl
and
daa
pusha
or
aam
xor
lods
push
imul
out
and
lock
aas
cmp
js
xchg
dec
mov
lods
mov
notb
out
insb
sti
mov
ds
cmp
cmp
xor
sbb
cmpl
pop
mov
mov
jge
das
pop
push
in
add
movsl
adc
mov
xor
xchg
ret
notb
or
and
or
dec
inc
test
jno
addr16
cli
popa
push
cltd
loopne
icebp
sar
out
cmp
outsb
in
stos
xchg
push
jae
shll
mov
popf
and
stc
icebp
xchg
inc
push
stos
test
mov
jmp
mov
cmp
shll
test
mov
outsl
ret
das
sub
push
add
mov
push
jb
cmpsl
in
mov
pop
jg
jmp
inc
in
and
nop
sbb
mov
cltd
mov
dec
gs
xchg
shll
movsl
lds
xor
out
andl
cwtl
jle
xchg
shl
push
cmp
adc
pop
adc
je
adc
ss
sbb
call
test
and
aam
xchg
mov
fwait
and
lret
lahf
sub
sub
add
test
loopne
cwtl
das
rorl
push
ljmp
cmp
mov
jp
adcl
sbb
je
hlt
cmpl
pusha
cmp
jmp
es
pop
insb
add
sub
leave
divl
out
adc
or
pushf
xor
inc
push
sub
out
imul
stos
sbb
out
add
sub
fsubrl
loope
or
ljmp
clc
jo
push
cmp
cld
out
mov
daa
scas
or
test
pop
push
int
dec
sub
movsb
adc
adc
cs
test
cli
or
add
xchg
cmp
jge
cli
inc
outsb
popf
cmpsb
das
mov
cli
push
and
ss
rclb
gs
pop
outsb
test
mov
test
je
leave
cmc
cmp
push
lea
xor
cwtl
es
push
js
push
je
std
jmp
dec
xlat
fisubrs
out
int3
icebp
or
and
cwtl
insl
inc
push
push
lret
dec
mov
fidivl
mov
push
mov
mov
xor
out
and
clc
sarb
leave
sub
pop
insl
pop
mov
add
lods
jge
fs
popa
inc
jle
add
and
xchg
pop
cld
shll
sub
test
adc
cmc
pop
mov
sub
lds
cwtl
shrb
pop
pusha
js
rcrb
or
idivb
js
jg
dec
mov
call
or
cwtl
adc
and
jo
sub
and
sbb
push
push
mov
push
test
and
dec
adc
pushf
int
pop
pop
out
xor
mov
and
cmp
or
mov
loop
ret
add
lahf
mov
adc
lods
push
lcall
cli
dec
lcall
push
fstps
stos
xor
ficomps
lds
idivb
mov
mov
fistpll
jno
jae
mov
rcr
out
in
mov
sti
sub
aad
sub
test
popf
jno
xchg
rcl
ret
mov
mov
out
or
jo
nop
dec
cmpsl
test
jle
and
mov
scas
popa
bound
fimull
rcrl
dec
pop
sarl
xchg
sbbl
outsl
pop
sahf
loop
ret
push
lock
jae
dec
sub
fstp
jbe
mov
stos
rclb
add
mov
dec
dec
je
test
jnp
iret
pusha
cmc
fs
sbb
push
mov
repnz
cltd
dec
movsl
pop
cmpsl
mov
sub
jmp
and
push
popf
xchg
lds
xor
repnz
or
cltd
or
mov
rorb
pop
push
adc
bound
inc
mov
neg
pop
mov
mov
call
or
loop
sti
out
out
xchg
lods
jmp
cmp
lcall
push
mov
aam
and
or
mov
adc
pop
adcl
ljmp
push
mov
loopne
and
ss
add
ret
mulb
cmp
movsl
inc
shlb
push
cmc
mov
inc
cmp
ja
rcrl
jno
mov
out
cmp
xor
loopne
ljmp
loopne
lods
cmp
adc
scas
outsl
fwait
and
rclb
lea
pop
scas
and
lods
mov
pop
jmp
mov
movsl
or
lret
ja
mov
jl
mov
aas
adc
cmc
fsts
jbe
out
mov
xor
pop
call
lret
lret
mov
mov
sbb
xlat
int
jbe
and
xor
das
insb
int3
aam
cmpsl
ja
sbb
orl
test
inc
aas
xor
gs
outsl
adc
jne
inc
jge
leave
xchg
enter
stc
and
sbb
loopne
dec
pop
pusha
loopne
test
jecxz
pop
in
fmul
mov
push
mov
scas
lret
pusha
bswap
out
sarl
xchg
add
mov
adcl
fsubl
roll
loop
fiadds
stos
aam
test
pop
repz
cmp
sarl
xchg
loope
fs
aam
into
clc
jns
movsl
adc
pop
push
adc
insl
pop
inc
stc
and
mov
mov
push
loope
mov
les
or
icebp
push
sbb
jge
aad
das
sarl
push
sub
pop
cmp
leave
fwait
sub
scas
dec
cmp
dec
mov
cmp
cs
jl
dec
mov
sbb
loop
adc
std
sub
bound
inc
icebp
int
or
sahf
mov
outsl
fnsave
pushf
outsl
add
cld
and
and
xor
push
push
or
xchg
pop
ret
mov
daa
nop
jecxz
inc
repz
lret
sub
je
ja
mov
insb
insl
into
fs
xor
mov
mov
gs
les
loope
push
cltd
es
jno
push
and
sbb
push
mov
jbe
pop
pusha
xchg
dec
call
cmp
cld
fstpl
or
in
sbb
leave
jbe
push
out
loope
in
dec
push
imul
sarb
jle
loopne
xchg
jecxz
push
inc
push
pop
fwait
imul
rorl
test
mov
fsubl
fstps
icebp
movsl
insb
adc
pushf
pop
cmpsb
stc
cltd
test
jne
sub
mov
das
popf
in
pop
mov
insb
movsl
and
lcall
movl
pop
inc
mov
adcl
and
in
loope
cwtl
xor
mov
outsl
pushf
xchg
jb
iret
insl
jbe
pop
inc
mov
pop
jp
xchg
adc
push
loopne
xchg
and
fisubl
imul
or
jmp
les
mov
xlat
negb
dec
dec
iret
imull
adc
mov
dec
and
lcall
mov
cmp
adc
gs
mov
push
mov
test
adc
rcl
xchg
ljmp
and
xor
mov
sbb
mov
sub
adc
mov
ret
cmp
mov
fwait
sub
and
mov
inc
jp
pusha
dec
mov
jnp
outsl
push
out
dec
adcl
xor
jnp
in
cmp
aam
jge
loope
inc
pop
shl
in
cmp
push
push
imulb
mov
cmp
and
or
jo
mov
or
mov
shrl
jp
fs
jno
lods
pop
push
ret
jno
aam
lahf
inc
into
fcoml
dec
and
pop
push
sub
inc
jp
or
jmp
push
roll
cli
jle
out
mov
fnsave
pop
outsb
mov
push
outsl
repz
jl
out
xchg
sbb
add
lods
adc
fwait
les
sbb
and
adc
pop
inc
lds
mov
push
jge
mov
mov
imul
mov
mov
dec
mov
stos
sub
pusha
xor
add
mov
lahf
or
jbe
mov
pop
minsd
inc
aas
push
pop
aas
int3
mov
pop
loop
inc
in
mov
hlt
dec
ss
jns
mov
push
cmp
jae
sub
sbb
movl
cld
rorl
pop
pusha
xchg
mov
aas
lret
and
pop
mov
rcrb
cs
icebp
sbb
mov
mov
stos
jae
lea
sbb
pop
int3
add
imul
arpl
and
xchg
xchg
mov
jns
cmp
fnstcw
jecxz
in
adcb
mov
push
mov
jge
and
mov
test
adc
ret
push
mov
xor
jg
add
dec
jg
loop
adc
sub
mov
adc
inc
pusha
mov
faddl
xorl
sbb
mov
xor
fs
in
xlat
inc
push
fistpll
xchg
jae
ds
jg
pushf
add
aas
rol
inc
add
xlat
add
out
mov
push
loope
loopne
jg
pop
ret
pop
lea
mov
popa
mov
sbb
and
xor
push
cwtl
rorl
mov
mov
addb
inc
pop
dec
outsb
sub
xchg
out
lret
gs
mov
outsb
jno
jbe
es
sub
add
bound
xor
rcr
and
sbb
sub
loop,pn
xor
bound
xchg
in
jmp
cmpsb
and
xchg
pusha
sti
pop
push
dec
in
out
pop
outsl
sub
xorb
pushf
jp
shlb
lahf
lods
add
sbb
lcall
sbb
add
lea
movsl
inc
in
mov
repz
sub
insb
stc
mov
mov
lret
xor
lcall
xor
cli
xchg
jge
pop
sub
in
adc
sub
mov
notb
xchg
jle,pn
lret
sub
push
sbb
inc
push
or
inc
mov
das
jg
jl
sbb
inc
test
sbb
sbb
or
dec
jmp
test
pop
int
cmpsl
orb
dec
mov
mov
jb
and
mov
push
out
fdivl
push
xor
push
adc
data16
jb
jmp
push
inc
mov
xchg
pop
mov
mov
sahf
stc
xchg
scas
xchg
push
aad
shll
pop
movsl
or
ss
sti
mov
pop
add
jns
pop
test
fidivl
inc
push
fstps
cmp
scas
pop
push
mov
icebp
cmpsb
stos
xchg
fucomip
aad
mov
inc
pop
rorl
lods
cmp
push
adc
pop
add
mov
sbb
dec
cmp
xor
jo
movsl
mov
imul
outsb
jae
mov
aaa
adc
or
jl
xchg
ljmp
mov
mov
or
popf
pop
inc
bound
fisttpll
sbb
jge
pop
cmp
ja
xchg
xlat
mov
sbb
shll
push
xchg
push
out
push
push
rclb
xchg
call
dec
cmp
pop
je
sbb
imul
fptan
xor
or
sub
divb
insl
fcomps
loope
arpl
ja
push
ret
xchg
adc
dec
nop
jmp
adc
ficoml
popf
nop
jmp
mov
or
lret
or
loopne
jae
clc
xchg
shll
mov
or
cmp
ss
ret
sti
js
das
fdivrl
lods
pop
xchg
jnp
lods
sbb
test
mov
jl,pt
jnp
inc
lahf
or
mov
pop
or
push
or
aad
lock
rclb
ja
mov
jb
fwait
pop
test
xchg
lcall
xlat
sub
or
dec
or
jno
psrlq
mov
mov
stos
push
clc
bound
sbbl
ds
mov
add
addr16
sti
movsl
popf
xchg
aad
mov
popa
dec
mov
dec
mov
out
mov
addr16
adc
cmc
pop
mov
fsubl
inc
mov
lods
jle
dec
lods
cmp
jno
sub
shl
mov
scas
icebp
pop
jp
dec
sbb
jg
in
add
fisubrl
aad
fptan
xlat
lods
mov
sahf
add
xchg
into
mov
dec
sbb
fcoms
loop
cmp
in
popa
scas
in
xchg
add
cmp
mov
ds
dec
cmp
mov
lret
and
data16
cmpsb
sti
push
jno
lcall
data16
fwait
enter
js
out
ja
cmp
aas
xor
pop
push
shlb
loope
adc
sbb
sahf
push
popf
repz
jne
add
dec
aas
adc
pop
mov
xor
sub
mov
sub
inc
scas
pusha
ds
enter
shlb
in
sti
lds
sub
mov
ret
and
jmp
ljmp
mov
xor
je
push
repz
imul
mov
fsts
lret
notb
cmp
pushf
mov
data16
jle
push
ds
jbe
lret
jge
xchg
enter
sbb
stos
mov
out
xchg
leave
cmp
in
sub
dec
ds
add
idivb
in
mov
addr16
cmp
jnp
adc
sbb
jo
mov
lret
jns
popf
cmp
insl
inc
mov
mov
negb
ss
xchg
cs
xlat
xchg
loope
sbb
lods
lock
addr16
into
xor
cld
js
repnz
pop
push
sbb
cltd
mov
mov
js
stos
cld
je
out
aam
aas
inc
xor
cld
pushf
cli
cmp
daa
cmp
imulb
arpl
mov
jnp
add
or
inc
inc
int
leave
outsl
dec
jbe
test
add
rorl
imul
fistl
jno
scas
sub
push
lcall
mov
xor
add
mov
pop
cs
adc
cmp
push
repnz
push
js
and
adc
in
pop
adc
gs
int
pop
mov
outsl
dec
add
mov
fisttps
or
data16
mov
and
xchg
insb
add
add
xor
sub
dec
sbb
mov
mov
adc
and
jns
sbb
mov
cwtl
and
mov
ja
loop
rclb
data16
cmp
sub
jb
cmp
xor
jnp
clc
mov
faddl
mulb
adc
and
push
add
lds
icebp
repnz
push
and
inc
dec
js
sub
daa
pop
mov
out
push
dec
sbb
jmp
sahf
xchg
out
shrb
cmp
mov
inc
test
push
mov
aaa
sti
mov
dec
inc
out
mov
add
adc
sbb
test
and
jmp
cmp
sbbb
sti
pop
mov
ja
mov
lods
lods
pop
inc
fstpt
cmp
cwtl
xchg
fsts
sarb
cmpsb
mov
push
cwtl
lds
out
xchg
adc
push
and
jbe
shl
dec
jle
pop
cmp
pusha
lds
lret
sub
and
pop
xor
mov
lret
push
sub
call
addr16
int
icebp
cmc
popa
xchg
mov
sub
xchg
subl
loopne
pop
xchg
sti
out
pop
or
add
jne
mov
fwait
mov
lahf
mov
stos
out
push
decb
ret
mov
hlt
stos
push
xlat
in
xchg
jge
aad
sub
ret
call
mov
fistl
sbb
jp
ficoms
test
js
pop
sar
dec
mov
inc
pop
push
xor
push
mov
add
mov
repz
out
in
out
mov
pop
jg
mov
aaa
inc
icebp
mov
inc
addr16
test
jbe
pop
xor
hlt
daa
mov
into
jo
dec
in
push
dec
adc
jge
iret
pop
mov
sbb
and
cltd
and
push
bound
jae
orb
imul
jmp
rcrl
mov
push
andl
xchg
sbb
outsb
ja
popa
rcr
fwait
jmp
xchg
dec
popa
test
in
mov
test
daa
int
outsl
adc
push
stc
adc
aas
cld
test
mov
push
inc
xor
mov
add
pop
push
jp
inc
add
xor
push
mov
pop
outsb
cwtl
pop
dec
push
pop
or
dec
leave
cmc
mov
add
and
or
ljmp
and
aad
dec
lea
or
pushf
cmp
leave
fstp
and
jbe
mov
bound
push
adc
inc
enter
push
loop
cmpsb
in
cwtl
and
pop
jbe
mov
jnp
jbe
popa
xchg
aad
lret
mov
loopne
sbb
sti
test
and
pop
pushl
and
inc
scas
and
pop
je
cmp
and
adc
jg
xor
jo
fcoms
loopne
insl
imul
mov
cmpsb
mov
bound
faddp
adc
dec
fiaddl
aaa
jl
xor
pop
shrb
jg
xor
icebp
fidivrs
dec
jle
sub
xchg
pushf
fnstenv
mov
dec
and
or
or
test
pop
in
std
mov
dec
mov
lock
call
mov
mov
pop
hlt
and
jmp
aam
inc
xor
adc
cmp
pop
or
xchg
xor
sahf
lods
mov
mov
pop
xlat
mov
ret
je
ret
in
cmp
sub
push
ljmp
push
sub
hlt
xor
dec
cmc
adc
inc
dec
lahf
inc
mov
mov
ljmp
das
push
xchg
scas
ds
adc
insl
outsl
mov
xorb
loop
pushf
pop
pushl
sbb
or
sub
mov
idivl
leave
hlt
cmp
xor
push
dec
xor
dec
adc
pop
xlat
addb
in
icebp
add
out
push
test
pusha
xor
adc
mov
sub
xchg
dec
gs
adcl
not
cmpsl
lock
mov
inc
mov
stos
sahf
sub
add
in
fildll
dec
cwtl
clc
fisttpll
jmp
mov
movsl
add
in
cmpsb
gs
mov
loope
roll
push
mov
or
or
adcb
push
inc
test
dec
sti
arpl
repnz
push
pop
cwtl
mov
loopne
loopne
mov
mov
cs
js
adc
mov
mov
js
sbb
psllq
cmp
lea
sub
scas
xor
test
mov
and
dec
ja
lcall
dec
xchg
mov
inc
divb
int
inc
xchg
outsl
jle
push
repz
int3
movsb
test
pop
cmc
jge
xor
mov
inc
dec
icebp
add
and
pop
daa
cmpl
ljmp
push
jae
push
lock
dec
sar
ljmp
sbb
mov
push
xor
and
jmp
and
lcall
jnp
push
clc
mov
pop
jnp
pop
scas
out
test
and
or
sbb
scas
std
inc
mov
mov
lret
lahf
hlt
in
mov
clc
jbe
jns
hlt
push
cmp
xchg
mov
aad
lret
icebp
in
adc
ss
pop
pushf
adc
adc
push
xchg
push
dec
scas
cmp
shrb
push
ret
pop
xchg
arpl
push
push
sbb
movsb
arpl
mov
dec
imul
aaa
dec
mov
push
dec
xchg
cmp
jno
rcrl
or
inc
lock
inc
iret
cld
sbb
mov
iret
cltd
add
or
sub
mov
jmp
dec
insb
subl
icebp
add
cmp
sub
mov
jmp
sbb
mov
scas
mov
jbe
sbb
ror
cmpsb
movsb
popf
cmp
in
dec
sti
clc
sub
mov
pusha
adc
cmp
or
lods
ja
push
mov
out
mov
jne
or
insb
dec
and
testl
into
xchg
sub
inc
push
fnstsw
mov
shll
lcall
or
cli
cmp
repz
pop
imul
sbb
out
mov
push
pop
out
jecxz
xchg
daa
xor
or
lock
and
mov
enter
sti
mov
adc
or
aas
push
inc
inc
scas
fwait
mov
and
scas
push
sbb
iret
gs
out
ja
inc
jle
fadd
push
xor
push
test
sub
mov
clc
xor
cmp
popf
das
cmc
jo
sbb
shll
push
xchg
out
dec
fisubrs
mov
pop
pop
sbb
xchg
cli
stc
adc
je
mov
fidivrl
fsubs
repz
xchg
mov
jmp
adcl
pop
pushf
mov
mov
ja
lds
daa
mov
es
xchg
imulb
add
xchg
cltd
stos
les
cmpsb
movsb
data16
xchg
mov
and
add
loope
dec
loope
cmp
out
sti
in
mov
ja
addr16
xor
or
add
addr16
shlb
insl
adc
test
hlt
sub
pop
push
in
loopne
call
lock
movsb
adc
bound
ljmp
push
add
inc
cmp
add
jmp
xchg
xor
cld
clc
push
xor
hlt
mov
fucom
test
dec
jb
in
mov
repnz
out
pop
rcrb
pop
cwtl
lahf
leave
or
pop
jnp
addl
push
out
dec
xor
push
int
ret
and
push
mov
ret
mull
mov
or
mov
das
xor
pop
push
jp
dec
insl
leave
test
out
outsb
divb
cmpsl
daa
mov
xor
loope
and
out
adc
out
add
shll
sahf
sti
or
or
and
inc
or
push
addb
icebp
or
push
push
dec
pop
cmp
cmp
outsl
ljmp
popf
ret
addr16
push
xor
mov
pop
lcall
lds
sahf
cmc
push
out
lods
fidivl
cwtl
out
insb
outsb
pop
inc
ja
push
fldenv
outsb
sbb
iret
mov
jp
xlat
add
clc
push
add
sarl
mov
mov
pusha
repnz
sbb
lods
fwait
addl
jno
es
sbb
jecxz
mov
in
int3
gs
mov
sahf
jnp
test
sahf
sahf
cwtl
sub
mov
in
arpl
popf
popf
cmp
jmp
outsb
sub
insl
rorb
call
cmpl
test
pusha
cmp
adc
mov
xor
sbb
cmc
rorb
int
push
mov
fsts
cmp
xor
adc
push
ja
hlt
gs
test
fsincos
xor
push
int
pop
stos
daa
add
dec
loopne
jle
inc
cmp
jno
das
sarl
add
pop
add
sbb
divl
les
push
test
jo
xor
dec
roll
jge,pn
inc
mov
and
in
clc
mov
hlt
cmpsb
adc
cmc
sub
inc
dec
scas
cmpb
shr
aas
dec
and
sbb
xor
adc
jg
mov
aam
dec
add
test
shll
outsl
mov
inc
sub
out
xor
sub
dec
mov
jl
lods
je
out
dec
sub
mov
push
push
out
imul
cmp
fwait
mov
push
and
cmp
movsl
les
iret
cmpsb
lock
stos
fadds
imul
mov
or
shlb
push
xchg
das
mov
les
adc
adc
mov
mov
scas
addr16
add
addr16
or
cmp
fimull
in
mov
scas
addr16
mov
cmp
les
mov
stos
dec
dec
popf
or
inc
pop
pop
das
fwait
push
sbb
lock
xchg
add
dec
jno
cmpb
or
xchg
movsb
push
add
cmp
imul
or
mov
adc
or
fdivrl
test
and
sbb
orb
popa
xchg
inc
ss
xchg
adc
adc
pop
jo
push
xlat
cld
mov
fsubr
or
xor
mov
xor
or
iret
adc
mov
aad
pop
sbb
or
out
mov
inc
jmp
push
rcrl
add
xchg
sub
mov
sbb
int
push
arpl
mov
insb
sbb
les
or
pop
dec
andb
imul
mov
repz
imul
mov
arpl
sbb
add
lods
fnstcw
imul
sbb
std
mov
xchg
push
xlat
dec
push
push
fwait
fwait
jae
sub
dec
pop
mov
xor
lea
fdivrl
andl
cmp
cmp
aas
adc
loope
popa
sub
imul
lahf
mov
fstps
adc
lods
xchg
mov
adc
les
mov
lea
xchg
sub
and
jno
inc
mov
sbb
es
mov
mov
daa
fdivrl
icebp
jae
jo
test
clc
add
sub
es
xor
daa
aas
aas
xchg
sarl
push
jg
jnp
lret
push
inc
lods
pop
jne
jg
in
dec
in
mov
xor
dec
inc
jno
xor
into
stos
adc
mov
sbb
add
push
fmulp
dec
cmc
jne
sbb
les
jbe
pop
repnz
aad
fisubrs
pop
mov
jnp
add
mov
add
and
popf
or
nop
adc
aas
ret
lods
je
fcoms
jne
and
cmp
gs
fwait
xchg
jmp
out
xchg
and
adc
add
sbb
aaa
stos
xor
mov
test
push
pop
int3
sub
dec
stos
and
push
popa
mov
dec
lahf
xchg
mov
xor
repnz
je
insl
js
pop
test
sub
adc
cmpsl
xchg
jmp
fildl
dec
mov
jg
stc
dec
push
jne
mov
dec
test
mov
mov
jl
lds
ret
cmpsb
orb
xor
dec
pop
loopne
stos
je
push
decb
xor
lods
jg
fsubrl
pop
pop
test
fbld
push
adc
clc
ret
or
rorl
gs
movsb
push
cld
mov
pushf
jl
sbb
hlt
sbb
aam
shlb
pop
jne
sub
dec
lods
sbb
jnp
xchg
sar
inc
pop
jg
or
mov
test
sub
sub
lods
cs
adc
fsubl
mov
push
loopne
mov
lock
int
push
pop
ficoml
inc
mov
scas
jbe
nop
gs
jno
inc
xor
jne
aam
in
je
push
dec
inc
int3
sub
push
inc
inc
xor
icebp
pop
mov
aam
cmp
std
scas
dec
jb
clc
and
mov
dec
cld
pusha
cmp
fstpl
add
aaa
mov
jle
in
incl
pop
popa
sbbl
lds
add
xchg
push
sarl
divl
popf
mov
dec
loop
lods
mov
test
insb
mov
add
cmp
add
aaa
jmp
lret
mov
mov
jb
leave
push
mov
in
ljmp
adcl
sub
xchg
xchg
sub
insl
repnz
cld
jns
or
int3
aad
mov
imul
jb
es
xor
cltd
xor
pop
mov
adc
push
pop
test
in
imul
popa
dec
cmc
cmpsb
cmp
xchg
repnz
lahf
icebp
push
sub
shll
out
ja
mov
dec
jge
loop
int3
inc
in
mov
xchg
out
or
sub
fxch
frstor
cmpsl
jno
push
xchg
test
push
and
ret
dec
sbb
jmp
shll
lods
fimull
arpl
fld
psadbw
les
mov
dec
push
mov
adc
sbb
nop
xchg
cltd
subb
jbe
or
cld
sub
les
add
rolb
pusha
mov
lods
lret
jae
addr16
jl
imul
lods
or
test
dec
test
cmc
imul
dec
cltd
jne
dec
mov
lret
in
mov
or
xchg
adc
daa
and
jp
in
shl
cmp
mov
repz
dec
popa
cmp
sbb
ljmp
sarb
pop
mov
outsb
fistpll
pop
sub
lret
cmp
call
push
mov
xchg
aas
movsl
push
inc
leave
add
fsubl
in
sub
iret
repnz
mov
in
mov
and
cwtl
rclb
sbb
ljmp
dec
sbb
xchg
test
dec
scas
and
popa
cmp
or
test
fisubs
pop
sub
stos
inc
mov
inc
cmp
adc
mov
add
xlat
cmp
fwait
xchg
es
leave
jbe
or
popa
jb
add
sub
jno
les
shrl
pushw
mov
arpl
repnz
jecxz
into
push
arpl
filds
and
nop
or
sete
rcll
das
jne
pushf
mov
nop
sahf
cmp
and
out
jmp
mov
rclb
pushf
bound
mov
pop
and
scas
mov
fmull
ljmp
mov
push
mov
sub
pushf
adc
clts
xor
xchg
in
sub
dec
mov
popa
push
push
push
ficoml
or
insl
jae
in
jmp
sub
or
mov
outsb
mov
in
jnp
add
mov
mov
push
repz
cmp
jne
clc
out
xchg
movsl
mov
idiv
stos
push
push
or
pop
movsb
lahf
lock
push
cmpsl
shr
jp
mov
cmpl
cld
xchg
movsb
in
push
out
jle
call
cmp
pushf
lret
rclb
stc
add
xchg
aam
test
sbb
dec
and
push
jo
add
xchg
imul
fildl
nop
xchg
mov
mov
push
xchg
and
cwtl
mov
xor
jp
pop
mov
fistpl
sub
mov
xchg
sbb
js
jg
and
sub
sbb
cwtl
inc
hlt
jp
shlb
mov
es
mov
sahf
arpl
and
popa
lcall
in
addr16
nop
or
outsb
popf
or
arpl
jecxz
in
push
pop
sub
les
shlb
ds
cmc
jp
pop
add
mov
stos
push
cld
or
mov
push
push
mov
lods
aad
push
xchg
jnp
sti
scas
add
push
sub
cli
mov
out
mov
inc
lret
rcrl
cmp
aam
sar
xlat
xlat
push
lods
xchg
sbb
pop
sub
mov
and
push
mov
test
xchg
and
xor
out
pop
ret
add
ret
loop
adcl
push
mov
imul
lods
and
cmpb
inc
push
repz
lcall
mov
movsb
inc
push
ljmp
mov
lret
rcrb
dec
push
mov
jbe
pop
mov
je
out
xor
cmp
sub
or
mov
rclb
mov
inc
pop
int
sub
cmpsb
cltd
mov
imul
pop
in
vucomisd
cmp
in
out
and
enter
ljmp
dec
test
lock
sti
bound
pop
cmc
outsl
std
es
push
sbb
jl
dec
les
fcmovnb
mov
cs
lds
mov
sub
pop
mov
push
add
roll
lods
pop
cwtl
inc
call
fwait
inc
mov
data16
repnz
sbb
ss
shll
cmpsl
pop
movsl
mov
add
cmp
aam
and
xlat
arpl
jl
into
mulb
dec
cli
fs
sbb
movsl
stos
stos
sbb
mov
jae
mov
and
shrb
mov
js
fdivr
or
lahf
mov
jns
or
mov
out
negl
jns
sub
mov
shrb
push
movsb
sti
loopne
xor
lods
mov
and
daa
mov
shrl
push
scas
and
jae
into
adc
fimull
fcomp
outsb
mov
inc
mov
lret
inc
mov
mov
test
lret
out
push
fldl
movsb
or
psadbw
sub
pusha
fcoml
stc
idivl
sub
pop
sub
insl
pop
xlat
aad
jmp
dec
loop
pop
inc
mov
mov
std
sbb
popa
jb
rcrb
xchg
les
xor
dec
outsl
out
and
add
mov
xchg
pop
das
mov
insb
iret
and
addl
shlb
daa
test
je
jo
mov
scas
sbb
sub
sbb
cmp
sub
mov
push
fnstenv
cwtl
xor
push
pop
dec
cmc
jecxz
into
push
stos
aaa
inc
inc
icebp
or
clc
xchg
push
push
xor
fcomp
rclb
cmp
pop
mov
or
xor
mov
ret
mov
pop
mov
inc
arpl
inc
scas
mov
int
repz
dec
xchg
and
test
pushf
sbb
inc
xchg
jne
out
xor
xchg
popa
cmp
pop
sub
jae
daa
rcrb
jnp
in
pop
in
or
call
cmp
je
in
addr16
mov
xchg
adc
or
hlt
and
ja
jp
lods
mov
xchg
loope
andl
jbe
test
insb
sub
scas
movsl
js
pinsrw
cmp
pop
xor
or
jae
jb
sbb
mov
lahf
push
out
add
dec
stos
inc
divl
adc
dec
std
push
pop
insl
lds
in
and
int3
cmp
pop
xchg
mov
popa
mov
push
fldcw
jns
mov
push
xor
adc
imul
mov
pop
aas
push
pop
add
rolb
je
xchg
xlat
shll
out
into
call
in
add
sbb
testl
sbb
rcrb
inc
es
ss
leave
xchg
loope
movb
cmpsl
cwtl
mov
arpl
vaddsd
iret
jle
dec
mov
mov
cpuid
popa
push
loope
jno
scas
aaa
push
xchg
dec
cld
add
mov
mov
lods
fldt
fsub
dec
mov
sti
push
mov
int
frstor
shll
mov
iret
mov
js
out
mov
sti
ret
cmovge
nop
jns
mov
pushf
inc
daa
call
push
xchg
adc
sbb
ret
pop
icebp
push
mov
adc
jmp
lahf
test
sub
mov
push
je
adc
cmpsb
push
lcall
cmp
out
mov
leave
push
fdivrs
loopne
addr16
mov
sbb
or
filds
cmp
mov
lds
out
adc
repz
push
xorb
dec
movsb
insl
ss
adc
jge
mov
cmp
fnstenv
ss
xchg
lds
jbe
jmp
sub
sub
mov
jecxz
fisttpll
add
jge
jle
jo
mov
sarb
shl
adcl
shll
pop
mov
fpatan
or
push
sbb
movsb
arpl
pop
xchg
mov
mov
inc
cmpsb
ss
xlat
pusha
xchg
mov
adc
int
and
inc
inc
dec
or
sti
push
sbb
rolb
inc
nop
and
push
add
add
adc
xchg
clc
stos
dec
pushf
add
mov
scas
sbbl
mov
nop
lea
fiaddl
pop
shll
cmpsl
adc
jl
mov
insl
jle
pop
out
adc
dec
xor
mov
lods
mov
xor
in
cmp
pop
mov
and
out
jp
push
xchg
hlt
mov
or
lods
sub
daa
inc
mov
call
or
xor
jmp
mov
pusha
mov
xor
out
outsb
mov
inc
imul
and
icebp
mov
mov
lds
cld
adc
mov
cmp
jnp
xchg
rcll
clc
enter
pop
testl
repz
rep
pop
push
iret
jmp
push
xlat
fs
in
and
mov
repz
jl
inc
hlt
and
pop
lock
jbe
loop
out
and
sti
ficompl
xchg
mov
fidivrl
mov
jae
repz
push
or
aad
sub
xor
arpl
jp
cli
je
dec
xor
fmull
sbb
adc
inc
stc
add
jae
pop
dec
xchg
push
mov
sbb
int
insl
pop
dec
inc
xchg
insb
add
outsb
mov
dec
test
adc
iret
lcall
sbb
lods
or
ss
adc
ret
and
jo
jmp
into
out
mov
arpl
inc
jnp
fnsave
push
mov
xor
push
rcr
repz
mov
sbb
std
sub
loopne
stos
adc
adc
mov
out
sub
out
popf
fsubrl
cltd
lds
sbb
jmp
lcall
pushf
jecxz
and
cmp
stc
push
lock
test
xor
sarb
int3
push
test
cltd
add
add
js
or
ljmp
add
gs
es
or
xchg
insb
dec
out
call
inc
fsubrl
inc
insb
pop
or
inc
cmp
shrb
or
jecxz
lahf
stos
fwait
in
subl
inc
imul
jne
mov
aaa
lods
mov
cmpsl
pop
ljmp
sbb
sbbb
aas
mov
pop
mov
mov
andl
jnp
mov
pop
xchg
dec
mov
xor
sahf
jl
les
cmpb
scas
pop
hlt
rol
sbb
mov
js
pop
and
push
dec
push
or
jne
mov
ret
or
jno
pop
xchg
fstpt
imul
mov
cltd
into
addb
int
or
es
pop
scas
mov
cmpsl
adc
inc
or
push
test
dec
and
fldcw
mov
daa
fbld
icebp
mov
xor
mov
and
adc
testl
ffreep
push
sti
fwait
out
pop
div
mov
cmp
sub
add
stos
xchg
jp
mov
add
mov
in
mov
jle
xchg
jbe
pushf
movsb
xor
sbb
xchg
jae
adc
nop
sahf
push
popa
dec
add
sbb
or
ja
push
add
fsts
pop
dec
fmuls
pop
or
enter
push
pop
sub
xlat
ficompl
icebp
test
loop
sbb
stc
push
or
cmp
push
in
xchg
fsubl
push
xor
and
outsb
ficoml
ljmp
xchg
enter
mov
pop
jmp
dec
xchg
dec
xor
mov
sub
xchg
shll
xor
jno
jle
inc
xchg
push
pop
cmpsl
add
jno
push
mov
addb
test
shlb
fdivr
pop
lods
xor
mov
jge
mov
adc
push
or
sahf
flds
ret
cmp
stc
cmp
sub
sub
aaa
push
pushf
ljmp
aad
cmc
xchg
rolb
in
out
add
loop
pop
ss
mov
adc
push
sbb
cs
rclb
call
mov
ret
filds
movsl
test
lahf
vpaddd
jno
push
jne
adc
inc
pop
mov
lea
fwait
push
test
push
lods
adc
fists
scas
pop
or
sarl
sbb
or
push
lea
pop
outsb
sub
imul
jnp
scas
xor
mov
ret
mov
xor
cmpb
cld
loope
mov
sub
shrb
aaa
lcall
iret
int
mov
insb
sub
sti
mov
mov
std
xchg
popa
insl
push
or
frndint
cmp
dec
jge
adc
pop
outsb
xor
fs
sbb
in
dec
repnz
mov
shlb
cwtl
outsb
rorb
xchg
mov
jmp
ret
adc
int
repnz
xor
movsl
imul
mov
je
iret
bound
push
cmpsb
mov
jae
divl
mov
test
aam
pop
call
adc
aam
dec
push
dec
jbe
fiadds
dec
jmp
lret
out
pop
push
xchg
push
add
insb
inc
pop
and
xor
popl
fmuls
fsubl
enter
xchg
dec
movsb
add
push
cmpsl
sbb
xorl
cmp
xor
xor
mov
push
jo
pop
mov
mov
pop
and
pop
sbb
int
xchg
cmp
imul
pop
jp
push
jb
inc
rcr
jge
xor
jns
popa
jb
dec
jecxz
pop
mov
fisttpll
inc
mov
out
pop
lods
xchg
pop
jmp
std
mov
lock
and
add
jo
jl
push
insb
repz
push
repz
jae
fmull
jmp
jb
imul
hlt
adc
cmp
cmovb
push
pop
sub
pop
nop
lcall
int3
pop
jbe
lods
test
push
ljmp
pop
in
and
add
rclb
xchg
nop
in
dec
pop
mov
es
lcall
or
out
push
int
mov
jg
sbb
and
push
icebp
xor
mov
add
inc
pop
or
scas
mulb
out
repz
hlt
cltd
imul
xchg
adc
imul
pop
data16
pop
inc
pop
dec
add
cmp
push
divl
or
and
sub
adc
mov
jbe
cmp
fs
cmp
push
shrl
dec
adc
pop
dec
js
lret
jns
dec
dec
push
mov
fldenv
jns
jmp
repz
mov
adc
jge
sahf
fcomip
mov
data16
mov
mov
imul
int
jb
jle
aam
fidivrl
add
pop
stc
imul
inc
fstpl
daa
sahf
push
inc
push
xchg
sbb
scas
in
ljmp
in
popa
jne
xorl
cmpb
mov
xchg
icebp
mov
repz
lock
fistpl
push
xor
ficoml
dec
ja
repz
jns
pop
push
and
movsl
sbb
mov
mov
loop
sub
inc
or
popa
loope
mov
xchg
lahf
jno
sahf
adc
push
or
andl
sbb
out
push
ljmp
mov
nop
stos
jge
scas
jmp
int3
rorb
push
rcll
mov
dec
bound
xchg
std
sub
xor
sub
cmpsl
fdivr
mov
hlt
and
imul
loopne
xchg
inc
sbb
dec
lods
setp
rorb
or
xchg
in
xchg
daa
jl
orb
add
push
and
xor
fistpl
mov
xchg
cmpsb
mov
fisttpl
sbb
push
adc
lcall
mov
fbstp
inc
mov
or
pop
xor
cmpsl
out
add
insb
bound
ud2
inc
xor
push
cmp
inc
push
jle
cmp
xchg
pop
jnp
test
xchg
rcr
mov
lea
repnz
or
add
sbb
call
in
in
inc
adc
and
ret
shl
or
cmp
cli
sbb
dec
push
cmp
bound
or
jns
sbb
add
lahf
hlt
insl
lcall
xor
pop
sub
fmull
ljmp
sbbl
lcall
pop
mov
shll
hlt
pop
push
xchg
jae
std
push
and
add
mov
push
lcall
movsb
sbb
rcll
adc
fiadds
pop
adc
jno
iret
add
int
mov
and
inc
sahf
cwtl
out
insb
and
iretw
lret
mov
les
adc
fnstsw
xchg
dec
push
mov
popa
enter
cmpsl
imul
lret
test
push
xor
and
loope
jmp
les
and
or
repnz
popf
add
sub
enter
aam
aas
pop
daa
fwait
sub
add
or
mov
rcl
popf
push
fistps
inc
cmp
insb
mov
mov
cwtl
xchg
jae
jg
fstpl
push
bound
sarl
mov
je
rcll
adc
out
lretw
clc
sbb
pop
or
push
out
mov
xlat
push
pushf
adc
push
out
cmc
cli
dec
push
sbb
inc
sbb
jecxz
add
daa
in
mov
imul
jge
mul
jnp
mov
enter
mov
dec
push
and
push
pop
lea
inc
addl
lahf
fistpll
ret
or
inc
push
cwtl
loopne
jb
cli
xchg
push
ret
insb
fdivl
cltd
xor
scas
icebp
cmp
dec
pop
int
adc
mov
mov
or
je
xchg
sbb
rolb
add
pop
xchg
adc
xor
test
jns
xchg
pop
shrb
and
jl
les
popa
mul
and
dec
xor
cld
push
dec
xchg
je
lahf
lock
add
push
xor
int
push
or
dec
push
dec
mov
cmp
xchg
mov
or
out
xlat
pop
loop
outsl
mov
iret
rorb
mov
aas
and
lds
aam
push
xchg
jbe
ljmp
cmpsl
xchg
mov
inc
cwtl
pop
adc
sub
mov
jg
negl
mov
add
pop
cmp
pop
iret
xchg
icebp
es
dec
je
mov
xchg
clc
into
add
cmp
pop
ljmp
push
sub
mov
xchg
mull
xchg
sub
cltd
gs
das
dec
mov
sub
sub
rcrl
data16
cmc
dec
inc
sbb
mov
adc
dec
xorl
clc
rolb
iret
pusha
frstor
lock
dec
inc
push
jge
scas
insl
inc
test
pop
and
add
pop
scas
mov
mov
mulb
add
in
cmpsb
push
sbb
andl
sbb
pop
jae
add
dec
mov
stc
jl
pop
dec
jns
dec
loop
insb
stos
scas
arpl
inc
mov
cmp
xchg
dec
mov
hlt
pop
push
sub
sbb
pop
xchg
inc
push
aas
push
lahf
daa
bswap
icebp
lcall
scas
lret
ja
stos
mov
dec
aad
cli
sbb
jns
push
out
mov
and
sub
xchg
push
bound
jl
cmp
pop
or
call
push
cld
sub
movsb
pop
imul
and
out
inc
mov
add
inc
mov
shll
xor
adc
call
xchg
mov
nop
inc
in
inc
mov
mov
es
dec
pop
scas
popl
cli
push
sub
jge
sub
mov
cmp
dec
xchg
xchg
mov
loope
jb
inc
lcall
push
gs
xchg
in
sub
cmp
or
or
mov
loopne
xor
inc
cmp
pop
arpl
fisubs
cmp
push
fmull
mov
pop
or
nop
test
sub
add
pop
gs
repz
stos
stos
rcrb
xor
push
loope
fwait
addl
repnz
adc
std
shlb
out
lcall
mov
cmp
jne
daa
out
xchg
add
rorb
scas
xchg
push
add
movsl
int3
mov
sbbb
cld
into
xchg
inc
mov
mov
int
mov
in
mov
push
cmp
xchg
stos
cmp
in
sbbl
xlat
outsl
jo
pop
xchg
add
xchg
nop
sub
sahf
sbb
cwtl
mov
xchg
xchg
addr16
lahf
push
adc
mov
sbb
enter
mov
jmp
lods
dec
ds
push
push
xlat
mov
insb
or
jnp
and
pop
inc
xchg
mov
stc
mov
xor
dec
push
daa
adc
lods
das
loopne
mov
jbe
icebp
cmpsb
cltd
add
sub
mov
imul
enter
xlat
arpl
mov
lret
call
int3
mov
mov
out
scas
pop
addr16
in
fs
push
jmp
popa
ret
das
pop
aas
cli
dec
movsb
rcr
and
adc
push
pop
xchg
jmp
repz
leave
stc
ficoms
popf
pushf
ret
pop
add
push
dec
pushf
lods
or
cmpsl
jnp
arpl
popa
aas
push
fs
jp
inc
sbb
cmp
push
adc
test
xor
add
mov
orl
xchg
shll
fdivl
or
fistl
xchg
pop
cmp
pop
mov
sub
mov
xchg
daa
ljmp
je
pop
pop
jecxz
inc
fstps
popa
push
inc
mov
xor
cltd
push
xor
jle
daa
shrl
hlt
adc
pop
push
aas
dec
in
aad
sbb
adc
or
jbe
sub
imul
xor
cld
in
int3
shrl
fmull
inc
xchg
push
dec
in
les
xchg
shll
mov
mov
fisubs
adcl
loope
jno
pop
sahf
inc
fs
dec
data16
loopne
adc
cmp
and
inc
add
xorb
xchg
push
shrl
add
add
imulb
jge
jne
inc
push
sbb
shlb
loopne,pt
clc
jnp
mov
jns
pop
leave
xchg
bound
sub
fs
ja
push
mov
cmpsl
stos
ds
nop
push
mov
mov
aad
gs
faddl
sbb
negb
ret
mov
outsb
lea
cmp
hlt
iret
inc
and
push
js
jp
scas
push
stos
sub
dec
push
mov
dec
xor
xor
mov
lmsw
jo
fwait
push
mov
iret
cld
out
mov
adc
add
cmp
xor
clc
xchg
out
jle
ljmp
jecxz
pop
jge
test
xchg
cmc
sbb
movsl
sbb
mov
add
ret
fstl
sub
mov
sub
mov
lds
cltd
ja
mov
jbe
add
dec
xor
roll
or
pop
test
cmp
cltd
fwait
call
inc
mov
sar
sarl
sub
stos
mov
out
jp
data16
popa
ficomps
mov
stos
adc
pop
inc
cmp
mov
adc
cmpsb
pusha
mov
jecxz
xchg
cmp
add
loop
push
inc
addl
add
out
pop
fadds
ss
push
dec
loop
les
mov
fldl
cs
cmpsl
popa
loop
lock
pop
xor
arpl
mov
add
clc
scas
push
int
ficompl
sbb
das
pop
xor
ret
aad
loope
inc
mov
jae
ret
dec
adc
cmpsl
push
dec
int
out
lret
div
mov
pop
jb
pop
aad
int
std
test
cmp
frstor
and
cmp
mov
xchg
and
sbb
push
loope
jns
sub
push
sub
jle
stos
jle
xlat
or
mov
xchg
jmp
xchg
test
aam
out
fidivs
int
test
sub
clc
cmp
dec
xchg
and
jp
or
pop
dec
out
fmul
enter
sahf
mov
loop,pt
mov
addb
int
notb
emms
daa
dec
imul
sar
lret
lret
cmc
or
mov
mov
icebp
cmp
xchg
sbb
xchg
pushf
outsb
stos
sti
pop
dec
adc
decb
adc
mov
fmull
scas
int
rcrb
sti
in
mov
clc
mov
dec
push
xor
mov
rclb
add
xor
icebp
popf
cld
dec
decl
mov
inc
mov
sbb
mov
dec
shr
into
xchg
and
pop
fdivrl
sub
sbb
inc
mov
nop
or
mull
push
jecxz
rorb
popa
jp
mov
push
pop
mov
mov
jle
repz
mov
mov
filds
clc
lods
dec
cmp
push
pop
push
adc
ret
mov
sub
push
mov
xor
ja
decb
jmp
std
mov
loope
jmp
hlt
lods
pop
subb
cwtl
aad
ds
stos
xchg
xchg
int3
imul
mov
xor
dec
mov
mov
xchg
inc
cli
roll
call
push
add
push
icebp
enter
aam
jg
mov
scas
adc
mov
int
xor
mov
jae
lods
sahf
push
fcoms
xchg
jg
xchg
hlt
dec
testb
in
xchg
scas
fnstenv
cli
loopne
jbe
insb
dec
enter
and
jmp
scas
xor
push
inc
mov
sbb
ret
test
fs
int
xor
xchg
fisttpl
mov
ja
insl
jne
add
gs
jl
adc
stos
insb
bound
sar
sub
pop
sbb
lods
pushf
idiv
add
xor
xor
stos
int3
test
pop
lods
scas
xchg
sub
ljmp
and
jl
cmp
hlt
inc
xor
pop
ret
clc
lret
test
lds
sub
mov
nop
add
mov
sahf
shrb
xchg
push
subl
lret
dec
cmpsb
repz
dec
sbb
mov
push
scas
leave
cld
fwait
dec
lods
sub
add
mov
jo
in
mov
sbb
mov
mov
mov
mov
mov
subl
outsb
and
repz
push
jg
xchg
sarl
mov
or
or
je
push
dec
iret
push
iret
pmullw
ds
movl
repnz
imul
fcmovnb
add
xor
sbb
lcall
lods
sar
lods
or
icebp
enter
add
add
or
push
pop
leave
mov
stc
or
adc
cmp
fwait
hlt
mov
int3
lods
int3
mov
cmp
xor
mov
shlb
xor
mov
fnstsw
jb
mov
roll
push
dec
add
popa
pop
nop
pop
out
inc
and
loope
addr16
push
inc
push
sbbl
pop
or
lcall
sbbb
push
jb
add
loop
iret
sub
lret
fsubrs
int3
sub
and
mov
jno
mov
test
std
pop
xchg
xchg
pushf
in
dec
adc
xchg
sbb
jne
in
jo
je
es
jecxz,pn
fistl
cmp
add
mov
repz
mov
in
jo
je
dec
inc
daa
inc
lret
movsb
sub
mov
dec
mov
and
xor
pop
sarl
mov
push
and
mov
jo
out
subb
jmp
test
in
inc
fwait
cmpsl
inc
mov
sub
push
inc
dec
jae
add
lcall
enter
rcll
cs
imul
sbb
cmc
sti
add
cmp
xchg
and
adc
cmp
lahf
or
and
test
pushf
inc
cmc
scas
mov
adc
mov
dec
and
lret
std
pop
mov
movsb
js
pop
add
lahf
iret
pop
mov
sub
and
dec
mov
pop
pop
dec
cmpsb
mov
scas
push
hlt
out
std
test
push
push
out
gs
nop
loop
cmpl
xchg
daa
hlt
ret
jb
iret
sbb
hlt
jno
sbb
out
adc
sub
stc
in
xchg
sti
fisttps
mov
jnp
jae
imul
in
stos
out
push
dec
inc
sahf
repnz
adc
out
pop
push
test
jno
into
and
add
ja
jp
aam
xor
push
in
test
out
mulb
adc
mov
pop
loope
xchg
xchg
jmp
push
mov
xchg
mov
loop
pop
test
sub
inc
and
jp
mov
std
andb
je
insb
mov
cmp
addl
out
push
inc
adc
scas
in
scas
dec
jg
pusha
nop
data16
enter
repnz
cmp
sbb
and
mov
loop
xor
cltd
sbb
rol
imull
sar
in
sbb
int3
pop
dec
mov
add
test
int3
push
jae
push
movsl
mov
pop
stos
movsl
into
ljmpw
adc
and
fcmovbe
ret
repz
lahf
pop
and
mov
cs
sti
clc
and
in
pushf
out
int3
stos
mov
sarb
lds
xchg
cmp
setl
mov
cmpb
jbe
pop
push
hlt
pop
pop
fsubr
push
ret
test
fcoms
sbb
pop
icebp
pop
adc
mov
clc
xor
negb
xchg
mov
mov
adc
or
mov
in
dec
mov
inc
mov
pop
mov
fistpll
cmp
pop
lock
repnz
push
mov
sbb
sub
sub
mov
paddd
cs
mov
popa
andb
or
shlb
pop
je
push
ljmp
orl
add
ds
dec
xchg
pop
aam
test
arpl
inc
jnp
xchg
jae
out
sbb
cmp
pop
pop
push
jle
mov
notb
iret
jne
js
add
mov
nop
mov
mov
stos
repz
lret
das
test
in
loope
xchg
fdecstp
or
cltd
test
outsb
adc
cmp
sbb
inc
dec
in
mov
clc
jmp
aas
adc
cwtl
ljmp
mov
cmp
repnz
sarl
dec
jae
aas
xor
hlt
jl
in
jnp
jae
or
fadd
sub
addr16
jmp
jnp
pop
jmp
cltd
enter
lock
repnz
mov
jecxz
dec
push
lock
jg
clc
rorb
jmp
fwait
pop
inc
in
or
or
aas
push
mov
mov
mov
adc
cmp
cmp
sub
jno
sarl
mov
jbe
pop
lret
and
jp
inc
ds
push
and
addr16
xchg
add
xor
add
or
stos
outsb
hlt
sbb
dec
sub
mov
push
sbb
cmp
sub
pop
ljmp
ja
adc
call
and
sub
mov
jmp
je
or
xor
cs
pop
in
mov
popf
xchg
hlt
ljmp
inc
jmp
movl
daa
movsl
clc
adc
movsb
jl
fcoml
idivl
sahf
stos
fs
clc
push
pop
sbb
faddl
rcll
mov
jb
sub
gs
call
jae
cs
cmpsl
repz
pop
dec
cmpsl
inc
lret
decb
add
js
inc
test
adc
daa
sub
ljmp
inc
scas
lods
add
mov
sbb
andb
dec
addr16
scas
fucom
scas
dec
adcl
xchg
dec
sarb
dec
repz
xchg
xchg
push
cmpl
dec
dec
test
scas
fwait
andl
mov
cli
imul
mov
xchg
scas
mov
and
lahf
sahf
fcompl
loopne
cmp
adc
and
fwait
js
xor
cmp
loopne
jb
into
cwtl
and
insl
jecxz
outsb
and
mov
jg
jl
mov
sahf
ss
jnp
inc
or
adc
add
lcall
sahf
xlat
mov
jp
bound
jge
sub
cmp
jp
inc
popa
out
mov
and
lods
cmpsl
leave
andl
lods
push
sub
mov
dec
rorl
jl
push
push
mov
push
and
xchg
je
shll
shll
xchg
cmp
ror
cmpl
loop
nop
sar
test
jno
cmp
jg
dec
insl
mov
test
xor
ror
dec
cmpsl
shrb
jne
or
sub
lods
loopne
shrb
jmp
shl
xchg
dec
fbld
fwait
mov
push
lock
cmp
jg
pushf
push
out
fcompl
dec
popa
outsb
inc
insb
mov
ds
jmp
lods
mov
pushf
insl
hlt
mov
xchg
adc
jae
fisubrl
pushf
lock
xchg
test
fdecstp
push
pop
adc
fildll
pop
xor
cwtl
subb
xor
pop
fcomi
mov
xchg
jno
ljmp
insb
cmp
cmc
fnstenv
inc
stos
mov
out
sbb
cs
inc
test
ret
or
repz
sbb
stos
adc
daa
adc
mov
xchg
sub
cmp
jb,pn
dec
leave
dec
fadds
fisttpll
jp
mov
fimuls
lahf
cmp
mov
cmp
std
int3
outsl
fs
cmc
lock
adc
mov
sub
fidivrl
sub
jecxz
es
pop
or
sbbl
adc
mov
and
fwait
lret
mov
repnz
ret
pop
dec
push
js
lods
pop
cmp
push
sbb
adc
mov
sbb
movsl
imul
cmp
and
shll
push
jp
lods
in
push
adc
inc
adcl
mov
rcrb
lahf
sub
ljmp
mov
add
or
jmp
insb
xchg
or
insl
push
and
rcrl
outsl
leave
aaa
lea
pop
and
loope
dec
pop
adc
xchg
adc
mov
pop
lret
dec
pop
movsb
andb
mov
sbb
pop
mov
sub
xchg
mov
les
lds
aas
mov
xchg
add
ja
insl
or
iret
cbtw
ljmp
and
iret
sub
out
cmp
cmpsb
pop
pop
xor
inc
mov
insb
xchg
sbb
jmp
loopw
fbstp
scas
xor
sub
in
in
mov
sbb
notl
xchg
rolb
xor
aad
scas
mov
xchg
jl
xor
pop
ss
mov
jbe
mov
inc
loop
repz
jb
adc
push
push
popw
push
xchg
mov
fldl
movsl
ds
rolb
rcr
adc
xchg
imul
scas
daa
jns
pop
test
mov
sbb
xchg
cmp
adc
test
ss
and
mov
dec
sbb
and
loopne
pop
push
or
loop
loope
stc
inc
lods
ss
stos
push
inc
andl
push
daa
arpl
jmp
dec
test
ss
xchg
cmpsl
aaa
cli
cmp
inc
inc
addr16
inc
push
push
sbb
push
xchg
rcrl
add
jecxz
sti
insb
pop
sbb
mov
cmpsb
aad
jbe
les
test
std
loopne
pusha
jl
pusha
pop
into
iret
daa
lret
cmp
popa
pop
sti
mov
sahf
or
cmp
mov
iret
data16
sti
aas
inc
jge
cmpb
fidivrs
shl
loop
push
sarl
bound
mov
push
in
xor
xchg
decl
movsb
jns
loope
inc
mov
test
dec
imul
mov
je
adc
mov
adc
pop
adcb
add
mov
push
sub
jecxz
fldcw
jns
dec
inc
dec
xchg
in
cs
in
sub
orl
sub
or
inc
and
add
or
dec
and
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
