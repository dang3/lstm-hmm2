call
in
push
push
push
push
xor
xor
mov
push
lea
push
push
push
mov
pushl
adc
or
pushl
call
pop
push
adc
push
push
or
into
int3
insl
jmp
pop
in
mov
add
cmp
sbb
pop
pop
pop
leave
ret
mov
mov
or
test
je
push
movsbl
xor
and
incl
add
call
nop
push
inc
add
aaa
jne
pop
not
ret
out
mov
mov
push
aaa
pushl
mov
and
mov
pop
pop
test
jne
xor
jmp
push
icebp
pusha
pop
jmp
inc
push
push
cmp
inc
out
std
loopne
mov
divb
inc
lea
or
sub
outsl
dec
add
test
je
dec
push
icebp
insl
push
mov
cmp
cli
sbb
pop
ds
adc
sub
add
nop
in
xor
mov
mov
cmpl
xchg
decb
inc
mov
mov
mov
clc
pop
pop
push
call
push
orl
xchg
mov
push
pop
push
and
in
mov
mov
hlt
int3
adc
or
notb
enter
int
enter
clc
push
sbb
fwait
lret
push
mov
jp
push
inc
pop
add
or
sbb
push
loopne
mov
add
call
sbb
mov
push
mov
add
pushw
push
dec
or
jnp
gs
lea
or
cld
jp
cltd
or
push
sahf
hlt
enter
push
push
outsb
pop
jl
inc
nop
aaa
jl
dec
cld
xor
pop
push
leave
jmp
add
lock
add
mov
inc
clc
sti
jo
fidivs
lods
push
jne
mov
mov
fnsave
push
sub
sbb
lock
xor
sbb
cmc
bound
adc
lret
leave
inc
dec
xchg
push
inc
in
lds
sbb
sbb
xor
rolb
or
or
adc
push
jns
and
xor
pop
xor
mov
pop
insb
ret
incl
fstpt
sti
je
xor
popf
mov
push
sbb
leave
enter
xor
inc
inc
leave
enter
mov
in
add
sti
clc
pop
sbb
xchg
xchg
fchs
sbb
in
idivl
cmp
nop
cmp
sahf
in
sahf
hlt
xor
sub
and
iret
rcrb
sbb
adc
call
in
add
ret
jne
movl
push
xor
loope
xor
jmp
arpl
or
cltd
sbbl
xor
dec
sub
insb
inc
dec
data16
js
add
cli
and
and
pop
cwtl
inc
cmp
dec
data16
xor
fsubl
jns
xchg
xchg
and
add
and
pop
cmp
cli
cmp
push
in
fdivr
and
movsb
popf
adc
add
hlt
pop
iret
xchg
out
int3
loopne
push
pusha
cli
inc
jns
addr16
and
sbb
sbbl
leave
out
rcrb
dec
test
pop
xchg
mov
fnstenv
lock
xchg
xchg
xchg
xchg
mov
xchg
jo
push
pusha
mov
xor
push
call
xchg
imul
sbb
xchg
addr16
in
xorb
imul
and
mov
enter
xchg
rcll
mov
pop
dec
data16
iret
in
pop
push
dec
inc
dec
inc
jo
mov
xchg
cli
xchg
aam
fs
js
sbb
in
mov
or
xchg
sbbb
cwtl
jbe
push
push
xor
sbb
pop
movsb
loopne
mov
lock
enter
sbb
enter
pop
pusha
fs
scas
xchg
in
sub
xor
mov
rcl
cli
out
lock
sahf
testl
in
pop
sahf
sbb
pusha
sub
loopne
push
sbb
shlb
andps
cltd
rcrl
cmpsb
int
pop
ror
and
lods
dec
inc
xor
xor
inc
inc
into
xor
cmp
popf
int3
dec
inc
andb
pushf
mov
mov
fwait
sbb
xor
sub
sub
cmp
sbb
add
sbb
adc
fs
sbb
jl
iret
fxch
jae
inc
sti
clc
pop
insb
in
sbb
in
xchg
sub
in
xor
and
mov
test
sbb
ror
dec
inc
outsb
fwait
rcrb
cmp
cltd
popf
test
or
sbb
mov
or
or
add
xor
stc
add
sbb
aad
xor
sbb
cli
leave
xor
fs
dec
mov
cmpsl
movsl
enter
sbb
add
lea
loopne
cmovo
out
jno
cli
imul
cmp
push
mov
rcrb
cli
or
jb
xchg
daa
sar
pushf
sti
jns
push
push
sub
fs
mov
lea
add
sbb
cld
es
cmpsb
and
lock
clc
dec
inc
inc
into
sbb
cli
int3
cmp
test
adc
mov
or
pop
push
sub
xchg
cmp
int3
lahf
sub
fdivrl
lret
push
sbb
add
push
fs
sub
xor
push
mov
shll
mov
push
xchg
pop
mov
pop
aas
push
pop
push
xor
push
orb
sub
ret
popf
sbb
xchg
xor
sub
xchg
leave
enter
sbb
adc
add
movsb
in
pop
lods
sti
leave
enter
dec
cli
enter
leave
enter
push
xchg
movsb
je
sbb
xchg
jl
insb
mov
scas
idivl
pop
shld
imull
inc
pavgb
dec
or
push
jnp
and
mov
xchg
inc
cmp
xchg
dec
ret
pusha
pop
cmc
sub
pop
sub
push
ret
enter
nop
lret
dec
cmp
sbb
inc
inc
ds
hlt
push
lods
cli
adc
cli
push
xor
and
xor
dec
push
push
sbb
cltd
frstor
js
aad
outsb
xchg
dec
inc
loopne
inc
scas
ss
pop
push
into
push
stc
xchg
mov
push
sti
sbb
inc
inc
jo
xchg
pusha
in
push
sbb
push
sbb
popa
cwtl
sub
pop
test
xor
xchg
enter
pop
roll
insb
into
xchg
stos
loop
enter
push
fs
and
iret
mov
fdivrs
xchg
pop
lcall
jg
pop
jmp
add
mov
push
icebp
push
shlb
imul
cmp
xor
js
sbb
push
out
rolb
pushf
sarb
add
faddp
and
adc
fs
mov
xchg
or
xchg
sbb
shlb
sub
and
mov
push
jb
xor
or
xchg
pop
test
sbbl
inc
leave
and
jb
push
xor
jb
pop
xor
pop
sbb
xchg
or
add
and
and
int3
in
lahf
fmuls
pop
pop
cmp
jne
pop
sub
es
adc
test
pop
out
pop
movsl
dec
je
pop
cmc
das
add
pop
xchg
dec
mov
sbb
fldl
mov
mov
add
or
add
test
je
jmp
in
lea
or
mov
je
decl
rcr
add
add
lock
in
enter
push
sub
je
or
and
mov
push
push
hlt
push
mov
mov
jmp
xor
in
jle
ljmp
repz
idivb
lods
cmp
jne
cmp
jbe
lea
push
jle
scas
shlb
inc
add
cmp
jb
jmp
push
cmp
fcompl
int3
or
push
adc
lock
orb
jge
das
add
movsb
sub
scas
and
adc
inc
call
mov
and
call
out
pop
inc
movzbl
push
or
icebp
lock
push
pop
push
mov
or
mov
jns
adc
incl
cmp
jle
lea
shr
inc
mov
neg
lea
fildll
mov
add
inc
inc
dec
jne
pop
jmp
and
push
stos
or
mov
add
xor
mov
shr
add
mov
shr
mov
dec
icebp
shl
pop
cmp
cli
dec
iret
cli
pop
push
test
push
mov
mov
enter
mov
sbb
test
int3
ja
mov
or
mov
and
test
call
cmp
or
cwtl
push
cmpsl
int
xor
jl
pop
xor
add
inc
push
mov
jle
inc
mov
adc
push
stc
mov
bound
push
jl
inc
aad
push
sbb
mov
mov
sar
sub
loop
popf
push
fistl
sahf
sbb
mov
inc
mov
cmp
mov
outsl
cwtl
arpl
ret
sub
popf
inc
movsl
jl
shll
and
jns
mov
xorb
into
decl
xchg
nop
push
js
xorb
sbb
dec
cmc
cmp
jle
repnz
scas
pop
insl
jmp
cmp
je
or
je
shll
pop
inc
incl
movl
aas
jl
mov
push
movb
out
pop
cmp
adc
jg
inc
pop
pop
jle
inc
jmp
jg
pop
cmp
xchg
cltd
push
pop
leave
fisttpl
xor
jl
push
add
in
inc
fneni(8087
rep
movl
sbb
push
push
push
mov
std
jmp
mov
and
daa
cld
mov
clc
lea
shlb
addb
push
add
iret
aad
mov
push
push
sbb
sbb
imul
xor
pop
or
push
pop
ret
jecxz
cmpsl
adc
pop
fistpl
pop
out
push
outsb
pop
sbb
pop
fdivrs
daa
xchg
adc
adc
cmpsl
loop
push
inc
fs
daa
add
test
test
adc
push
movsl
pop
add
or
adc
push
call
sub
adc
loope
filds
inc
sbb
cmc
shrl
or
cmp
cmpsl
xor
pop
testl
add
lods
and
mov
jmp
test
and
adc
cltd
daa
orb
adc
sub
enter
and
mov
test
adc
mov
xchg
gs
dec
sub
add
pusha
xchg
add
fcompl
cmp
xchg
mov
pop
push
add
push
mov
pop
jl
xchg
dec
push
push
jmp
push
cwtl
rclb
and
cmp
test
dec
sbb
sbb
push
mov
mov
inc
sahf
in
mov
jge
fsts
xor
inc
xor
enter
std
mov
pop
pop
and
jl
cmp
sbb
add
int3
fwait
push
das
xchg
cmp
add
jl
cmp
pop
incl
sbb
lea
add
jne
fdivrp
icebp
push
cmp
imul
test
pop
popa
sti
sti
ja
sub
in
cmp
add
cmp
sbb
adc
outsl
jg
cmp
cmpb
je
push
dec
fcompl
push
lea
outsb
enter
fcompl
aam
dec
adc
push
push
popa
mov
clc
sub
lret
pop
jne
movb
push
fadd
mov
pusha
insb
cmp
jne
sub
je
mov
in
enter
sbb
mov
scas
jl
cmpsl
jl
test
mov
add
test
fnsave
sub
in
repnz
mov
dec
dec
lds
xchg
outsl
pushf
outsb
aad
adc
push
movsl
lahf
push
jo
insb
stos
mov
sbb
out
pop
dec
sbb
mov
jns
mov
or
decl
jne
stos
mov
jle
test
pop
cmp
je
or
adc
aam
pop
sahf
adc
mov
push
mov
cmp
inc
sbbl
pop
sub
xchg
add
inc
mov
pusha
mov
and
pop
mov
pop
lds
lods
jp
add
or
or
rcll
add
sbb
and
push
adc
call
andb
lea
lea
movb
xor
add
dec
and
pop
adc
add
movhps
bound
leave
xor
push
adc
call
arpl
fidivrs
jge
xor
cmp
je
daa
sbb
push
inc
sub
cmp
jl
and
cmp
repz
out
insb
dec
test
mov
clc
cmp
test
cmp
out
cmp
out
test
cmp
push
push
jecxz
subl
push
ret
das
jp
setno
inc
je
xor
and
enter
enter
fwait
jmp
xor
mov
fsub
mov
or
shlb
push
fisubs
outsb
aas
inc
pop
jp
sbb
adc
mov
loope
popf
pop
andb
jo
loop
pop
fmuls
out
cltd
in
inc
inc
xchg
enter
mov
pop
mov
sbb
mov
and
mov
popf
pop
rep
adc
jbe
jo
push
les
stos
inc
push
aaa
hlt
mov
adc
inc
fdivrs
push
inc
out
add
dec
mov
jl
int
lock
mov
das
in
push
add
test
pop
mov
incl
mov
loope
and
and
lock
adc
ljmp
cmpsb
mov
cld
and
jg
sbb
or
and
movsb
sbb
ret
adc
cmp
mov
scas
or
mov
movsb
inc
inc
insl
mov
xor
lods
movsl
inc
add
cmp
inc
jl
rorb
sbbl
inc
pop
js
mov
jo
stos
lds
arpl
into
jl
adc
call
add
push
cld
sub
jle
aaa
jl
or
pop
cwtl
in
call
dec
adc
sbb
sub
jne
aam
ret
add
neg
sbb
add
jmp
rcll
mov
jmp
push
mov
cmpb
pop
comiss
je
mov
outsl
jno
cmp
das
inc
lcall
je
push
push
push
cmp
outsl
test
std
out
repz
push
inc
rolb
xchg
and
push
and
adc
outsb
push
mov
popf
lods
je
jmp
mov
cmp
pushf
pop
mov
dec
adc
push
pop
mov
nop
adc
pushf
sub
std
add
cmp
push
ljmp
mov
scas
jb
pop
jb
pop
call
insb
nop
adc
sbb
je
mov
inc
ds
mov
int3
lahf
mov
or
sbbb
and
movsl
push
push
dec
std
push
mov
sbb
lea
mov
xor
test
cmp
repnz
jge
shr
jb
push
or
test
jb
pop
xchg
out
mov
xor
pop
movsl
mov
xorl
jle
clc
or
add
or
sbb
inc
cmp
jl
pop
and
arpl
jo
push
jl
dec
clc
pop
mov
fstpt
mov
sbb
sbb
jp
push
int3
filds
popa
add
loop
push
minps
xor
push
daa
push
hlt
pop
adc
mov
and
mov
pop
jmp
cmp
pop
lea
insb
pop
je
jbe
icebp
outsb
xor
jo
pop
insb
inc
inc
push
xchg
adc
mov
dec
das
popa
sub
mov
xor
xor
pop
cld
loopne
pop
mov
popa
sbb
lea
subl
or
daa
cmp
mov
adc
daa
xchg
or
sbb
cmp
push
sbb
inc
xlat
out
aad
test
inc
les
pop
je
inc
rol
imul
icebp
enter
push
mov
push
mov
add
pusha
push
push
imul
jle
in
jmp
push
push
fdivrl
es
jno
outsl
les
cmp
hlt
fcomps
popa
jg
xor
cmp
push
dec
aam
push
les
daa
or
adc
lock
mov
sub
idiv
push
cltd
pop
idiv
add
mov
inc
pop
shrl
or
mov
and
lds
mov
cmpsl
loop
test
sbb
fnsave
test
sarb
xor
ja
leave
aad
push
sub
mov
push
mov
push
sbb
fcomip
out
hlt
jae
cmp
jl
xchg
enter
lret
pop
movsl
pop
test
add
leave
das
pop
int3
fwait
xchg
outsb
enter
flds
sbb
dec
repnz
test
and
xor
jb
pushf
sti
push
cwtl
cs
out
mov
mov
das
xchg
sbb
pop
enter
jns
enter
ds
cmp
xchg
or
dec
jne
xor
and
sub
bound
jno
lds
in
aas
cmpsb
mov
mov
cmp
int
jae
xor
sbb
xchg
inc
clc
cmp
cmp
xor
add
ss
pop
dec
faddl
stc
add
int3
les
add
push
in
jo
push
in
push
push
push
in
sub
push
in
add
push
daa
fchs
cltd
aam
adc
xor
lea
pop
insb
out
and
mov
sub
push
leave
push
jnp
pop
mov
push
dec
ss
cltd
push
push
push
pop
inc
add
or
punpckhbw
add
inc
adc
inc
addr16
pop
ret
sarl
sbb
push
xchg
add
hlt
cwtl
dec
sbb
sbb
in
jg
mov
lods
fs
dec
in
add
aam
inc
cwtl
jb
push
xor
cwtl
push
pop
or
sub
stc
push
mov
iret
cwtl
mov
stc
add
push
dec
jb
repz
push
leave
repz
push
fmul
inc
or
and
or
or
adc
jb
lock
popf
or
mov
sbb
dec
enter
or
cli
adc
and
repnz
xor
lods
dec
test
xor
xor
inc
sahf
adc
adcl
mov
sub
shlb
or
mov
in
push
jne
sbb
sbb
repz
fiadds
int
sbb
cmp
iret
or
mov
sub
xor
mov
inc
sahf
adc
sbb
inc
inc
jne,pn
pusha
inc
inc
cs
or
mov
xchg
cs
mov
inc
inc
lock
enter
adc
jns
enter
aam
mov
adc
jb
iret
or
or
iret
and
pop
xor
xor
test
mov
testb
loope
test
sbb
push
lcall
sub
sbb
inc
aas
jmp
add
rcrl
cli
pop
xchg
inc
jmp
push
xchg
and
pop
test
sub
inc
cltd
insl
pop
cmpb
mov
ljmp
cmpl
xchg
inc
pop
mov
pop
mov
nop
dec
mov
add
rcrb
orps
mov
sbb
dec
andl
nop
pop
fwait
adc
mov
in
xchg
dec
or
and
mov
xor
inc
cs
repz
fmulp
cs
cltd
rolb
mov
inc
inc
and
pop
enter
sbb
test
js
and
or
add
mov
push
or
jne
fildll
add
pop
scas
mov
pop
fsubrl
and
mov
inc
xor
pop
cmp
sbb
push
shlb
adc
fiadds
jns
cs
pop
or
add
cmpsl
jno
test
jne
mov
fsubrl
gs
test
cmp
push
mov
cmp
xchg
inc
sub
xor
xlat
mov
and
and
test
xor
dec
push
cmp
sub
ljmp
idivl
je
inc
xor
mov
or
call
cmpsb
cmp
add
cmp
jne
and
mov
mov
aad
push
sbb
mov
mov
cmp
cmp
push
add
adcb
notb
xchg
jb
aaa
scas
orl
movl
adc
add
clc
add
xchg
mov
add
mov
hlt
or
orb
push
std
jns
push
dec
adc
mov
jne
jmp
mov
mov
mov
ja
push
addl
pop
shrl
repz
push
push
mov
fcomip
xchg
push
mov
cmp
xchg
rorb
out
ffree
add
sbb
pop
push
pop
dec
dec
int3
or
mov
arpl
push
setne
inc
inc
mov
cmp
mov
cmp
mov
jle
imul
add
pop
fucomip
cmp
incb
fwait
movsbl
cmp
jl
pusha
push
or
fwait
jle
or
lock
cs
cmp
lods
cltd
pop
xchg
push
or
dec
imul
lods
push
out
push
push
mov
jnp
cs
jp
mov
jl,pn
jno
test
dec
xchg
and
lea
xor
sbb
adc
and
or
push
adc
xchg
dec
jb
mov
aaa
cld
xor
lock
aaa
andb
mov
inc
pop
pop
pop
sbbl
add
pusha
cmp
push
inc
push
xor
inc
aaa
lods
push
sbbb
inc
bound
lods
cmp
gs
jmp
idivb
fcompp
dec
adc
xorps
cli
lock
cmp
fwait
mov
daa
f2xm1
dec
adc
and
sbb
adc
adc
jl
pop
cmpsl
or
push
or
fcoml
loopne
rcll
nop
mov
add
push
adc
mov
adc
push
jne,pt
dec
in
bound
and
adc
iret
je
js
roll
int3
or
aam
fs
dec
sbb
loopne
and
and
xor
je
pop
rclb
sbb
xchg
jmp
push
sbb
adc
sub
fidivrs
sti
adc
cmpb
cmp
jne
pop
mov
lock
pop
pop
mov
xchg
push
mov
jge
mov
imul
in
shrb
adc
arpl
or
bound
fucom
nop
and
mov
out
mov
pop
dec
ds
dec
push
fmull
ds
push
add
scas
repz
mov
pushf
arpl
out
je
sub
lods
test
shr
pop
or
shll
inc
xchg
out
jnp
cmp
dec
adc
repnz
nop
and
insb
out
xchg
sbb
mov
mov
loope
fs
mov
xor
add
pushf
mov
lret
xchg
push
enter
xchg
cmp
mov
sub
pusha
and
jmp
lds
push
inc
push
rcrl
lods
cmpsl
ret
push
inc
outsl
insb
inc
lret
mov
rol
ja
jmp
pop
je
enter
pushf
or
push
outsb
out
push
adc
xor
add
rorl
or
xor
sar
inc
orb
push
jae
cmpsl
mov
rclb
sbb
pusha
and
cwtl
nop
js
in
arpl
adc
decl
rorb
das
out
add
xor
xchg
cmp
icebp
or
int3
sarb
push
cmpl
pop
cmpsl
or
pop
dec
test
adcb
jae
subl
xor
pop
inc
loop
push
fistl
or
xorb
mov
inc
enter
rorb
jno
jo
sub
nop
aas
icebp
inc
add
sub
xor
sahf
pusha
and
xchg
in
xlat
jns
xor
mov
or
sbb
sbb
xchg
ret
movsb
ret
pop
cld
and
daa
adc
xor
and
arpl
mov
nop
inc
jb
rorb
sarl
movsb
sbb
mov
mov
mov
push
shl
xchg
or
mov
xor
ret
lock
out
pop
arpl
dec
xchg
sbb
add
sub
xor
push
sub
sbb
and
push
nop
xlat
sbb
fdivr
sub
adc
push
cld
sub
sub
and
push
and
jae
sub
sub
xchg
clc
sub
pop
and
adc
mov
add
xchg
adc
xor
xor
daa
push
jo
and
sbb
mov
hlt
pop
inc
pop
aaa
sbb
xchg
inc
je
push
xchg
push
push
loopne
fcoms
fsubs
jbe
cmp
add
inc
iret
movsb
mov
inc
clc
es
jae
sub
divl
mov
loope
xor
xchg
jb
and
sub
fidivs
iret
sub
cmp
cmp
mov
dec
mov
push
push
pop
loopne
sub
cmpsb
loop
xor
mov
jbe
dec
clc
fmull
xor
inc
arpl
sbb
inc
jno
stos
ja
repnz
int3
cmp
es
lea
mov
imul
mov
iret
add
setge
test
pop
js
jo
call
push
icebp
ljmp
cwtl
cmp
aaa
hlt
push
jns
inc
mov
xchg
rol
js
leave
in
mov
cmp
pmulhuw
ljmp
pop
cmp
pushf
cmp
test
arpl
mov
addl
mov
nop
pop
iret
leavew
loopne
lock
pusha
xor
xor
push
movzwl
flds
lds
in
adc
jl
jb
xor
dec
leave
sub
in
rorb
dec
dec
je
pusha
pop
addl
dec
push
jns
enter
xor
xor
add
rcll
lahf
int
popf
push
xor
xor
xor
xor
adc
dec
stc
les
nop
sbb
pop
out
dec
pusha
or
xchg
jp
lods
adc
das
or
loopne
dec
clc
push
mov
sbb
xor
shll
pushf
xor
addr16
jnp
in
fucomp
aas
xor
inc
xor
ja
mov
sahf
mov
inc
enter
lea
fstps
ds
xor
ret
mov
jmp
js
ss
clc
jmp
cmove
mov
xchg
into
or
les
lcall
pop
addb
leave
mov
movsl
cmp
sbbb
jmp
outsl
fsubrs
cmp
mov
popf
pusha
cld
je
fcoms
lock
or
push
jecxz
fiaddl
mov
lea
das
das
mov
test
es
rcll
cmpsb
xor
push
pop
insb
mov
lea
and
push
push
dec
jo
push
push
or
outsb
pusha
loop
shll
lcall
add
cmpsl
push
mov
pop
add
cmp
out
and
loope
sub
sub
pop
cmp
imul
and
cwtl
sub
sub
sbb
enter
or
push
loope
or
sbb
fs
sbb
test
pop
inc
ss
test
sub
cmp
leave
and
and
xor
and
inc
notl
push
dec
xor
scas
sub
cmp
and
adcl
mov
and
sub
or
out
sti
lods
mov
add
push
add
cmp
je
xchg
mov
adc
loope
mov
es
and
push
xchg
mov
stc
mov
mov
push
jle
lods
out
dec
push
adc
les
sbb
xchg
mov
popf
xchg
pop
andl
mov
nop
dec
mov
dec
dec
sub
xchg
or
nop
dec
dec
fs
inc
xchg
and
xchg
sbb
xchg
dec
inc
cmp
imul
and
xchg
and
mov
pop
je
std
pop
decb
mov
mov
idiv
inc
movsb
pop
mov
sti
sub
push
aad
inc
enter
pop
push
lret
sbb
ljmp
jns
or
push
rorl
outsl
ss
xchg
stc
arpl
mov
add
fs
adc
mov
enter
and
dec
add
push
fs
pop
dec
mov
stc
mov
fmull
pop
sub
jecxz
add
cmpl
arpl
jge
adc
cmp
push
sub
adc
add
inc
mov
stc
int3
cmpl
xchg
movb
mov
push
movsb
in
add
inc
nop
or
test
and
jb
mov
in
jmp
and
rcll
out
addr16
sbb
adc
xor
pusha
cli
mov
and
fsubrs
jno
and
jne
xor
xor
push
test
int3
ret
sbb
xor
add
or
loopne
pop
push
inc
add
popl
cmp
or
add
lock
nop
mov
mov
push
pop
in
jl
mov
outsl
test
or
cltd
nop
xchg
dec
fs
iret
loop
clc
int
hlt
fs
into
jl,pn
les
fs
repnz
mov
and
cmpsl
int3
adc
sahf
pop
xor
cmp
mov
in
jo
cmpsl
pop
nop
xchg
mov
iret
or
mov
mov
sub
nop
or
pop
xchg
cmp
jl
sub
repnz
nop
and
sbb
je
inc
popw
add
insb
lret
mov
mov
sbb
pop
cmpsl
push
sub
xchg
or
dec
sti
sub
jns
enter
inc
repnz
fdivs
cmp
and
ret
sub
cmp
rol
xchg
notb
add
and
or
add
xor
fnstenv
aaa
arpl
jmp
pusha
xchg
js
sbb
sbb
pop
scas
roll
leave
lea
adc
subl
cmpb
and
cmp
cmp
inc
push
insl
pushf
xchg
xchg
les
jle
sbb
pusha
mov
push
nop
adcl
cmp
xor
xor
stos
in
aam
dec
xor
cmp
pop
repnz
int3
xor
ljmp
xor
enter
in
and
sub
and
pop
sbb
xor
cltd
mov
addl
enter
lock
push
push
mov
xchg
inc
jns
pop
loop
fbld
push
mov
add
jb
insb
test
xchg
dec
enter
add
test
mov
cmp
enter
aam
inc
fcoms
jb
divl
cld
sti
add
push
adc
push
jmp
push
xor
inc
sub
xor
push
and
nop
jo
xor
dec
and
lods
sbb
out
xor
pop
cmp
and
inc
inc
push
adcl
push
andl
push
into
cmp
aaa
sbb
aas
add
jle
je
pop
lods
mov
push
orl
cmp
push
cmpsl
add
xor
addl
nop
dec
rolb
add
pop
imul
in
and
mov
test
adc
std
push
pop
mov
mov
add
jmp
pop
jl
and
push
lret
ret
rcll
xor
ret
dec
inc
cmpsl
lods
test
cli
add
xor
je
push
push
mov
push
cmp
fcoml
lret
mov
and
int
nop
dec
xor
test
mov
push
fs
es
dec
lahf
or
add
aam
push
sub
add
add
sbb
xor
test
inc
or
xchg
cmp
cmp
ret
enter
sbb
ds
adc
in
adc
enter
fildll
sub
inc
inc
cs
sub
leave
pop
enter
jnp
adc
je
inc
pop
enter
sub
bound
and
in
test
sub
inc
mov
cs
inc
les
sub
mov
xchg
pop
das
nop
or
enter
mov
mov
in
and
nop
push
js
and
and
inc
cs
fsubs
roll
nop
pusha
bound
sbb
dec
push
adc
daa
das
fs
sti
and
or
jns
and
daa
das
fs
and
in
or
fdivs
jmp
nop
inc
cs
call
mov
leave
or
sbb
enter
inc
es
adc
inc
dec
or
add
in
or
push
mov
lock
jb
inc
in
sbb
xchg
mov
mov
or
inc
das
mov
dec
aam
scas
sbb
das
fs
mov
or
and
mov
enter
cmpb
fcompl
jg
push
std
clc
mov
test
fcmove
sbb
clc
les
data16
rolb
pop
test
push
sar
mul
or
mov
pusha
inc
push
mov
clc
or
int
and
hlt
or
lea
cmp
orb
imul
sbbl
push
sub
pop
or
in
xor
or
and
mov
xor
ret
jo
mov
pop
cmp
daa
push
mov
cmp
add
pusha
fwait
insl
mov
xorb
cmp
stc
adc
pop
or
test
xor
inc
jns
pop
and
xor
jg
and
adc
xor
bound
enter
adc
leave
or
in
mov
pop
enter
nop
or
jns
adc
mov
test
jp
dec
seto
in
xor
pushf
mov
or
pop
fcomps
leave
mov
enter
sub
mov
int
pop
test
and
in
push
dec
inc
push
mov
and
jb
sbb
pop
enter
sub
and
and
das
fs
add
orl
lret
or
push
pop
inc
push
test
adc
cwtl
push
adc
outsl
cltd
das
dec
push
and
add
repnz
pop
xchg
mov
rcrl
dec
test
add
adc
rclb
cmpsl
dec
mov
dec
in
jno
or
cmp
mov
sbb
sub
sahf
leave
adc
inc
xor
imul
pop
sarb
ret
imul
mov
leave
lock
push
sub
pop
xchg
outsb
imul
bound
xor
inc
xor
inc
dec
cmp
and
dec
jle
roll
cwtl
pushf
jle
jo
enter
jle
xchg
mov
mov
add
sub
mov
cmp
test
xchg
sub
sbb
mov
cmp
in
inc
jo
sbb
sub
daa
or
jle
sub
and
sub
in
adc
repz
sbb
lea
xchg
xchg
xchg
mov
aas
gs
push
push
pop
les
mov
fnstenv
jbe
jne
into
pop
in
sub
sub
or
nop
lcall
adc
adc
hlt
or
pop
and
fs
imul
shrb
loope
push
jo
roll
rcrl
jl
or
cltd
push
pop
out
xor
and
xor
xor
pop
add
and
mov
mov
movsl
xlat
pop
mov
rcrb
pushf
aaa
pop
jge
cs
xor
das
dec
adc
test
iret
cld
adc
lock
push
jb
sbb
incl
loop
xor
add
xor
dec
pop
mov
jnp
cli
push
insb
push
and
mov
orb
lea
cmpsb
in
cmp
and
add
xor
mov
inc
add
push
jnp
xchg
inc
and
stos
push
cmc
inc
cli
ffreep
fnstsw
hlt
add
mov
xor
xchg
sub
add
mov
jl
jmp
enter
mov
jl
push
pop
adc
pop
mov
adc
scas
sub
jae
jmp
jae
xor
xor
jb
stc
pusha
xor
xor
aam
arpl
push
pop
inc
mov
inc
nopl
jns
ret
in
xor
mov
mov
xor
xor
in
sbb
outsl
loopne
and
lahf
jnp
xor
repz
xchg
pop
lock
xor
pop
shlb
test
sbb
repnz
cld
xor
dec
shlb
add
pop
or
arpl
imul
nop
les
pushf
or
lods
test
push
jnp
mov
push
shll
or
cmc
push
mov
in
sbb
or
arpl
add
inc
or
push
push
pusha
push
inc
xor
sub
pop
addb
or
sub
adc
cld
jl
jmp
add
dec
add
loopne
jne
jmp
bnd
sahf
add
push
jb
repz
int3
fwait
push
stos
cmpsl
sarb
push
or
mov
cmp
inc
or
sbb
fildll
out
xor
adc
sbb
daa
jmp
sbb
clc
add
pop
push
pop
cmp
jbe
inc
test
jns
sbb
insb
int3
mov
push
mov
inc
psadbw
orb
add
sar
sbb
shl
adc
sbbb
cmp
jno
mov
aas
mov
push
inc
xor
adc
jl
push
cmp
sbb
loop
pop
movb
xor
repz
nop
je
push
jne
enter
pmaxub
push
mov
imul
outsl
imul
adc
adc
leave
push
dec
or
nop
cmp
movsl
hlt
pop
xorl
mov
scas
add
mov
mov
or
cmp
punpckhbw
loopne
jns
or
mov
fsubs
jne
push
adc
xor
adc
cmp
cmp
xor
or
arpl
jns
repnz
add
push
cmp
and
cmp
cwtl
jns
rolb
cmp
push
fs
push
cmp
sub
pop
and
jge
fwait
ja
xor
test
bound
das
std
mov
insb
jnp
or
sub
mov
setae
dec
and
cmp
out
lret
cmp
and
in
or
cmp
adc
cmp
rolb
fcomps
pop
loop
cmp
or
pop
jne
lock
in
jo
movb
stos
es
or
js
add
lcall
mov
scas
lea
inc
addb
aam
xor
mov
sub
testb
or
jne
pusha
mov
jge
scas
push
in
inc
push
ja
in
push
inc
and
jecxz
repz
loopne
jl
push
out
push
sbb
xor
or
jp
fwait
xor
aaa
sbb
cmp
aas
aam
dec
aaa
dec
aaa
cmp
aaa
in
test
in
mov
mov
repnz
and
in
dec
aaa
loopne
fdivs
add
xchg
pop
cwtl
in
aaa
jp
and
fsubrl
pop
in
repz
inc
fiadds
pop
cs
repnz
cs
sub
lock
xchg
dec
lret
in
cs
rcrl
inc
xchg
loope
and
aam
pop
mov
mull
js
cwtl
in
hlt
cs
xchg
and
mov
mov
add
push
adc
xchg
mov
cltd
adc
adc
ret
xor
push
push
or
sub
push
pop
dec
das
std
loope
lret
mov
aaa
fwait
xchg
xor
mov
mov
lods
xlat
cmp
ret
outsl
mov
push
xor
imul
pop
in
insb
push
pushf
pop
adc
leave
sub
xor
mov
test
adc
push
and
sub
js
int
dec
leave
sbb
adc
or
dec
enter
wrmsr
xchg
adc
sub
and
and
or
mov
or
mov
adc
repnz
adcl
or
push
or
or
in
jge
cmovle
cmpsl
in
jbe
add
inc
jb
cmp
xchg
je
and
cmp
cmp
cmp
xchg
test
mov
push
or
mov
mov
sbb
adc
jo
inc
inc
pop
inc
pop
notl
sub
sbb
sub
aad
xor
push
shl
adc
pop
adc
push
sub
andb
push
movsl
in
rcll
sub
icebp
xchg
addl
pop
in
sub
enter
nop
sub
cmp
cltd
and
dec
push
lock
lock
test
mov
lods
and
rcr
dec
dec
int3
out
and
lods
and
and
jns
dec
lret
fdivs
xchg
pop
mov
adc
test
pop
inc
sahf
and
cmp
dec
push
leave
and
ret
push
test
sub
pop
add
jmp
cmp
lret
mov
rorb
xor
mov
pop
and
push
push
jle
test
add
sub
mov
adc
leave
adc
jne
arpl
je
xorl
add
je
xor
xchg
lods
add
je
mov
js
clc
xchg
mov
xor
mov
jne
pop
movsl
inc
add
xchg
pop
adc
negl
mov
jne
adc
push
lds
imul
dec
mov
dec
sti
sub
and
xor
clc
ds
push
push
or
and
test
and
ret
adc
lock
push
ja
and
call
jg,pt
pop
enter
stc
adcb
pop
add
adc
inc
ret
mov
cltd
int3
sbb
popf
rorb
cmp
in
add
aam
aam
and
int
fcompl
sbb
xchg
ret
test
in
loopne
xlat
mov
jns
je
mov
test
inc
sbb
push
xor
sbb
jne
mov
call
push
or
push
aas
sub
in
cwtl
cmpsl
std
in
aaa
fs
sbb
test
mov
mov
mov
mov
sbb
call
mov
aas
push
xchg
inc
or
inc
stc
adc
popa
push
xor
adc
add
cli
sub
inc
push
cmp
or
loope
inc
je
or
push
enter
jae
cmp
dec
adc
orb
jno
pop
xchg
xchg
cmp
cmp
and
pop
and
dec
push
sbb
and
and
and
jae
and
push
loope
pop
comiss
test
xchg
ret
and
jb
and
jns
mov
sbb
lock
xor
dec
shlb
adc
pushf
cmpsb
add
push
in
sbb
addb
xor
xchg
jb
dec
shll
push
pop
cmp
push
fcoml
jb
or
jmp
sbb
int
adc
cmc
add
adc
sti
push
sbb
je
mov
outsl
sub
mov
pop
push
jg
movsl
out
xor
push
inc
xchg
mov
pushf
pop
test
enter
and
xchg
into
les
mov
rorl
or
push
push
push
push
leave
cld
or
mov
rorb
mov
pushf
nop
or
or
jne
jae
add
pop
or
and
jno
and
xchg
nop
fsubs
add
xchg
or
jb
or
mov
add
add
jno
test
add
or
movsl
jle
jb
mov
inc
insb
dec
inc
xor
test
mov
or
mov
test
insb
sub
adc
jnp
push
cmp
lret
pop
pop
jb
mov
test
pop
or
int
jbe
out
adc
and
call
cs
mov
dec
mov
pop
nop
or
sarb
cmp
sub
push
orb
cmp
dec
js
xor
push
shrb
test
and
sbbl
or
pop
sbb
in
cs
les
lahf
inc
imul
sub
and
ret
adc
add
xchg
cmovl
or
jo
testb
sbbl
xor
sbb
inc
pop
add
lcall
sti
inc
cmp
push
mov
xor
jne
pop
jb
jo
sub
or
outsl
inc
pop
psrld
push
pusha
or
clc
inc
push
paddusb
mov
movsl
hlt
sub
push
cltd
and
arpl
cmp
clc
inc
enter
outsl
pop
outsl
inc
sbb
sub
or
cld
gs
mov
cmp
mov
imul
pusha
push
fcompl
loopne
jnp
insb
push
push
push
jne
adc
xchg
add
imul
sbb
outsl
lds
push
adc
aad
cmp
je
pop
mov
add
push
aam
sahf
ja
jmp
xorl
outsb
add
mov
inc
sub
or
daa
cwtl
adc
or
mov
jmp
pop
repnz
js
push
or
mov
stos
repnz
adc
xor
addr16
pop
dec
jnp
fnstsw
or
insl
mov
jl
sub
insl
jmp
pop
mov
cmp
or
lea
nop
pop
inc
test
and
dec
arpl
repnz
or
adc
xor
push
shrb
and
sbbb
clc
jge
nop
add
insl
inc
xchg
loope
push
popa
inc
adc
push
xchg
je
setge
mov
push
or
push
push
lret
movb
ss
sbb
dec
sub
scas
jno
arpl
sbb
lock
hlt
adc
xor
inc
push
lcall
insl
pop
in
and
enter
dec
and
pushf
inc
jo
clc
and
or
push
sbb
das
insl
in
mov
xchg
popf
jmp
inc
sub
filds
xor
pop
inc
pop
sub
aaa
mov
rcll
and
mov
xchg
loopne
popa
cwtl
aas
push
cmp
std
dec
dec
jne
sub
push
mov
sub
adc
nop
adc
in
or
and
aas
movsb
ret
je
push
push
lea
xchg
mov
add
pushf
mov
pushl
jmp
dec
or
sub
daa
leave
sub
fs
xor
xor
cmp
imul
imul
push
fs
jecxz
mov
enter
add
hlt
imul
cmp
mov
mov
mov
sub
jbe
sbb
add
lea
push
push
add
cmpb
fwait
xor
test
std
je
or
mov
and
movsl
inc
inc
cltd
adc
jo
testb
dec
lea
aaa
not
inc
xchg
xor
pop
mov
xchg
lods
add
cmp
jmp
dec
jl
or
push
lock
adc
jmp
mov
test
mov
mov
xor
rorl
jns
add
add
and
jne
xchg
add
dec
jae
jns
push
fmuls
add
gs
push
les
mov
in
or
mov
add
jl
nop
outsl
inc
xor
notb
inc
pop
pop
push
jmp
test
nop
mov
stc
imul
inc
orb
inc
enter
push
flds
ds
movl
push
jmp
push
das
mov
mov
sbb
fstps
scas
xchg
int
pop
outsl
enter
add
add
fadds
or
jge
adcb
dec
and
filds
ja
jns
shrl
loopne
cs
mov
roll
test
jmp
pop
sub
pop
dec
push
mov
sub
inc
cmp
add
jge
and
sti
pop
jb
mull
dec
xchg
scas
lods
imul
call
sbb
leave
jae
insl
dec
adc
jl
or
lea
xchg
add
bound
loopne
sub
pop
xor
adc
push
in
data16
push
sbb
mov
mov
aam
movsl
sub
push
cmp
mov
aam
and
xor
push
push
fwait
mov
add
ret
or
movl
mov
fs
add
or
mov
cmp
mov
test
aas
add
dec
cmp
adc
adc
pop
cmp
pop
or
cmp
adc
fs
fmul
cmpsl
add
xchg
jl
testb
add
sbb
add
cmpsb
adc
add
sbb
cmpsl
jo
in
movsb
xchg
inc
jg
std
aam
or
fmul
daa
loopne
sti
push
jo
inc
push
ret
bound
pop
mov
les
inc
insb
and
inc
sub
add
jg
xchg
pop
stc
jo
dec
push
xor
cmp
call
fwait
or
add
mov
mov
inc
cmp
jb
push
mov
test
mov
inc
daa
xchg
test
sub
lahf
mov
cmovs
jmp
and
adc
sti
jne
push
and
xlat
bsr
cmp
inc
mov
pop
leavew
and
imul
pop
push
mov
pushf
mov
mov
js
inc
sbb
jecxz
and
int3
jae
subb
cmp
or
inc
mov
mov
inc
lea
jmp
sbb
inc
or
add
jno
imull
mov
add
rcrb
mov
sti
rcr
add
loope
das
jle
mov
add
cmp
test
aas
cmp
or
aas
cmp
je
sahf
sbb
call
clc
cmp
jl
cmp
sbb
js
hlt
fs
movsb
mov
jmp
jno
xor
test
mov
sbb
jne
xor
in
xor
ja
cmp
or
imul
jne
iret
clc
jnp
jecxz
xlat
sub
insb
rorb
push
rol
or
sbb
outsl
add
cmc
dec
mov
adc
loopne
test
jg
loopne
push
rorb
mov
mov
fcomp
es
push
inc
cwtl
dec
or
int
aaa
sub
mov
push
int
sbb
shlb
xchg
daa
js
add
in
aam
rolb
rorl
daa
je
decl
rcr
nop
std
cmpl
sub
mov
aaa
shrl
add
mov
pushf
xchg
sbb
pop
shlb
test
xor
test
xor
jo
lahf
fimull
fldl
jp
movsb
mov
jnp
adc
das
add
inc
dec
popl
and
pushl
adc
add
jae
fistpl
adc
loop
es
pop
sahf
mov
pop
cltd
push
and
adc
dec
inc
cmp
fidivl
ret
xlat
mov
jo
mov
leave
adc
add
or
fptan
add
idivb
out
outsl
movsl
jg
in
adc
inc
cmp
jl
in
xchg
mov
push
lahf
movl
xor
ljmp
jge
push
jne
push
and
or
jl
lds
mov
fwait
int3
sar
xchg
icebp
lock
push
push
negb
leave
jb
cmp
scas
push
push
inc
cmp
and
push
cwtl
add
out
fdivrl
cmp
mov
add
add
jne
or
or
fbld
out
fstpt
adc
jne
mov
or
mov
outsb
iret
aaa
pop
jne
mov
jne
jp
adc
sahf
cmpsb
cmp
adc
mov
xlat
adc
lods
or
imul
mov
loopne
shrb
repz
xchg
aaa
sub
add
push
sbb
mov
lock
and
lock
fs
js
ret
stc
leave
xor
inc
xchg
sub
inc
jnp
mov
jmp
dec
xorb
ds
and
imul
test
jl
adc
lret
dec
and
push
addr16
popa
pop
mov
sub
adc
and
xchg
xlat
adc
pop
add
pop
nop
jmp
mov
push
out
cmp
cmp
insb
add
jne
jb
jmp
mov
imul
call
adc
or
mov
mov
or
inc
cmp
je
std
adc
jne
mov
lds
inc
rcrl
scas
sbb
xor
add
out
push
out
sbb
inc
or
add
leave
xor
fs
cmp
inc
jns
pop
or
inc
aaa
adc
mov
mov
adc
mov
jg
push
sub
push
or
mov
mov
push
sbb
mov
push
push
pop
inc
adc
neg
orl
mov
in
adc
push
push
and
cmp
jo
hlt
ja
push
inc
mov
cld
lahf
adc
loopne
add
add
in
std
mov
cmp
je
or
pop
shlb
inc
mov
xor
sub
jbe
mov
sbb
or
jp
loope
inc
cmove
add
mov
push
pop
mov
mov
cmp
inc
aas
lock
mov
push
adc
add
xor
sub
mov
xchg
fwait
or
inc
cmp
sti
cmp
jb
mov
ja
push
add
mov
cmp
adc
inc
roll
push
inc
and
sysret
add
pop
cmp
jbe
push
or
add
mov
lret
mov
inc
cmp
jb
cmp
pop
or
push
jecxz
popl
loope
jbe
addb
push
push
sbb
pop
fsubr
add
push
add
jecxz
mov
add
addl
into
push
in
sbb
shll
mov
or
clc
mov
push
mov
cmp
syscall
stos
inc
cmp
xchg
jl
jmp
pop
not
rcrb
push
mov
adc
andl
jb
mov
and
daa
nop
inc
cwtl
fmulp
xchg
movb
inc
or
push
xor
sub
cmp
insl
push
lret
add
mov
movsl
test
in
mov
jo
sbb
jge
js,pt
mov
and
jle
cmp
cmpsl
mov
push
clc
pop
pop
adcl
inc
add
xor
cmp
cs
mov
aas
cmpsl
ja
pop
je
inc
mov
sub
xchg
jns
sahf
loop
mov
mov
inc
xchg
imul
mov
mov
push
ss
mov
or
mov
push
lds
mov
cmp
lea
addb
inc
addl
mov
push
cld
scas
pop
cld
mov
or
test
jle
cmp
cmp
lahf
and
fbstp
push
xchg
add
lea
mov
iret
or
stos
mov
push
cmpb
rorl
dec
jmp
mov
inc
push
xor
pop
je
inc
loop
xorb
inc
rol
cmpb
test
push
sbb
xorl
jge
cs
sbb
testb
or
lret
push
das
js
add
push
add
fucomp
pop
stos
push
mov
rorb
mov
xchg
cwtl
cmp
ret
add
js
es
rep
mov
xorb
add
push
jecxz
in
or
pop
adc
sbb
scas
or
push
push
dec
mov
adc
jge
ja
xlat
adc
cmpb
jp
push
inc
or
mov
iret
xor
pop
jne
cmp
dec
test
cmp
sub
add
cmp
mov
pop
incl
cmp
fimuls
fnstcw
inc
dec
std
cmp
jg
mov
and
fdivr
idivl
sbb
mov
gs
add
jmp
cmc
popf
jnp
cmpb
cmp
add
das
mov
sub
adc
mov
lret
decl
adc
sub
aas
je
pop
loope
dec
clc
dec
cmp
pop
pushl
sub
pop
and
adc
sub
cs
filds
mov
inc
testl
mov
add
adc
jne
inc
ffreep
rclb
push
add
pop
pop
in
adc
ljmp
add
and
xor
adc
add
pop
inc
mov
mov
imul
xchg
sub
mov
stos
ret
divb
pop
cmp
jne
mov
cmp
je
ja
sub
mov
push
xlat
and
lds
or
jmp
ret
sbb
and
out
aas
sti
xchg
or
mov
cmp
jne
aas
and
outsl
popf
push
xor
sub
sbb
mov
xor
repz
jno
mov
or
popa
push
add
test
or
outsb
das
loop
adc
add
les
add
add
adc
in
xchg
sbb
mov
jbe
add
push
lea
dec
aaa
testb
push
mov
cmp
pop
andl
pop
jb
adcb
adc
dec
dec
ficoms
xchg
adc
shlb
pop
insl
loopne
in
mov
jno
xchg
ret
movsb
stc
stc
or
adcb
out
push
popf
or
pop
dec
push
rolb
push
movups
add
xor
add
cld
ss
clc
in
call
mov
fcomps
lret
xlat
sub
mov
mov
cld
out
mov
out
outsl
mull
mov
or
inc
lea
int
arpl
push
push
and
xchg
roll
ret
lret
push
jb
int
test
dec
and
and
add
pusha
int
mov
jb
pop
scas
pop
adc
daa
std
adc
add
mov
inc
or
mov
push
dec
xchg
xorb
out
xchg
or
in
std
pop
adc
push
add
mov
daa
xchg
lock
lea
movsl
mov
sbb
je
cmpsb
lock
jl
js
add
es
cli
imull
mov
lahf
push
mov
add
and
add
pop
fidivrl
add
xchg
fnstsw
jo
mov
mov
cmpsl
call
adc
sbb
xchg
push
push
and
jne
cmp
popf
add
xor
sbb
inc
xor
adc
add
add
add
lods
dec
sti
adc
testb
cmp
popf
add
sub
sbb
or
js
cmc
mov
lahf
iret
xor
cld
std
dec
or
or
in
stc
and
add
dec
clc
std
dec
xchg
and
adc
inc
and
jb
add
outsl
sbb
inc
add
xchg
inc
adc
and
jns
xchg
add
mov
add
pop
jb
add
and
jns
pop
inc
adc
add
jecxz
cltd
xchg
sahf
pop
pop
sbb
and
ret
mov
scas
push
repz
out
add
cli
add
mulb
and
sbb
call
repnz
dec
cwtl
add
cmp
scas
mov
mov
dec
inc
faddl
or
xchg
mov
shll
stc
fsubl
in
add
lret
in
loope
xchg
inc
cmp
mov
cld
stos
loope
sar
push
push
fmuls
imul
lods
popa
rorl
ret
jl
test
ss
mov
inc
enter
mov
inc
repnz
rolb
shl
xor
nop
add
loope
sbb
dec
ds
jne
or
nop
mov
mov
or
pop
adcl
xor
lock
dec
mov
sub
inc
sbb
in
addb
out
adc
pop
cmp
mov
inc
mov
or
lret
adc
sub
popa
push
imul
out
or
mov
add
gs
lock
xor
xor
bound
pop
cld
clc
hlt
cmp
cwtl
or
test
sbb
shl
sbb
adc
inc
addr16
lock
sub
out
cltd
fisttpll
add
or
shll
mov
mov
pop
pop
pop
push
fistl
rorl
push
push
pop
xchg
jo
or
dec
jge
pop
in
pop
or
lret
shll
test
imul
loopne
add
arpl
test
in
pop
adc
mov
and
inc
mov
negl
in
cmpsb
mov
push
xorl
fnstenv
lahf
shlb
nop
and
ret
add
mov
lea
pop
les
dec
xchg
int3
loopne
insb
rcl
std
test
or
outsb
in
js
ficomps
fstpt
push
push
fucom
push
je
inc
mov
mov
push
cmp
jbe
pop
or
cmp
mov
pop
mov
jo
sbb
or
cmp
push
mov
xor
mov
ja
add
inc
mov
jb
mov
pop
jo
inc
xchg
hlt
int3
xchg
sub
loopne
jne
cmpb
jae
int
test
jne
pop
mov
mov
or
or
out
ret
insb
les
jl
in
std
mov
aam
add
cmp
rclb
or
js
mov
lret
xor
lods
call
loopne
in
dec
adc
lahf
mov
push
pop
jmp
nop
int
lea
nop
xor
mov
push
add
adc
sub
cmp
mov
mov
dec
jecxz
jp
das
repnz
dec
cmp
add
call
aas
pop
mov
cwtl
inc
dec
shll
les
inc
in
push
aaa
inc
into
ds
cmp
xor
test
je
push
insl
mov
add
push
loope
mov
bound
add
aas
cmp
mov
jnp
imul
sbb
jo
push
adc
mov
mov
adc
sbb
mov
test
lock
orb
pop
popf
xchg
jae
das
int3
or
jno
xor
and
and
push
push
or
rorb
lret
ret
inc
dec
enter
incl
xchg
adc
inc
push
call
inc
cmp
pop
orb
jbe
je
jne
ja
ffreep
frstor
fs
jmp
inc
sub
in
je
jmp
rcl
mov
add
in
jg
push
mov
je
push
sub
fmuls
push
lahf
lcall
mov
scas
fs
adc
or
js
jecxz
arpl
cmpsl
push
movsl
mov
out
mov
add
and
mov
mov
stc
dec
movsb
xchg
andb
mov
scas
lds
subl
addb
jp
sbb
fwait
jg
jmp
push
xchg
test
mov
nop
jecxz
add
jne
inc
nop
imul
ds
cmp
fcoms
pop
mov
sub
lret
enter
in
adc
lret
inc
mov
or
fs
test
mov
lea
cld
cmpsb
xchg
aas
jl
fwait
incl
sbb
inc
mov
push
lea
cmp
pcmpeqd
dec
lret
xor
in
aam
sub
and
pop
sub
mov
ss
cmp
test
lret
shrb
bound
cmp
cwtl
mov
push
push
pop
dec
push
adc
and
je
fisubl
pop
imul
bound
dec
mov
push
add
dec
inc
mov
imul
cs
xor
pop
outsl
and
cltd
or
xor
lds
xlat
sbb
andl
jne
fnsave
adc
inc
rcrb
fwait
popf
lret
movsb
cmp
pop
jle
add
push
push
pop
sbb
cmp
je
jmp
movsl
lret
jge
sub
ret
mov
sbb
mov
out
pop
fcoms
inc
mov
and
cmp
outsb
mov
pop
push
xchg
adc
leave
adc
cmp
sbb
add
pusha
sar
ret
enter
je
decl
sahf
mov
mov
jmp
jp
lahf
lret
xchg
jmp
pop
push
pop
sbb
xor
enter
int3
das
fadds
jns
sub
xor
je
jl
inc
sarb
inc
sub
inc
nop
add
test
cmp
ss
imul
add
sbb
xchg
sbb
mov
push
inc
je
movsl
push
push
enter
xor
fisubrl
pushf
pop
push
outsb
aas
push
outsl
pop
nop
dec
cmp
out
pop
inc
xor
sub
xor
push
filds
sub
push
fdivs
xor
stos
mov
xchg
push
loopne
pop
ja
adc
incl
fiadds
push
add
nop
cmp
andl
rclb
dec
and
lds
sub
push
xchg
pop
adc
inc
xor
sti
and
neg
add
mov
ds
mov
mov
mov
iret
dec
push
sbb
and
xchg
adc
and
jo
pop
xchg
loope
jl
rolb
jae
pop
bound
sbb
movsb
test
std
pop
adc
sbb
add
or
lds
add
pop
add
lock
cld
pop
mov
lock
add
leave
push
loopne
sub
int3
test
popa
sti
scas
push
mov
push
fsin
and
test
push
add
inc
es
push
mov
push
cltd
xchg
mov
lods
lods
jp
ret
sub
outsl
inc
leave
sbb
mov
std
push
push
push
mov
add
mov
lods
add
or
cmpsl
sarb
and
push
in
add
adc
xor
add
sub
add
mov
cmp
push
jmp
popa
pop
mov
cmp
add
and
scas
inc
pop
dec
dec
leave
shlb
mov
mov
fistpll
hlt
mov
sub
fimuls
pop
mov
inc
cmp
mov
lea
inc
jns
test
lea
andb
pop
mov
or
inc
push
or
scas
cmpl
xchg
jne
int
add
adc
sub
repz
jmp
xor
daa
push
loopne
push
adc
cs
rclb
imul
mov
cmp
push
cmpl
xchg
nop
in
daa
xor
pop
repz
lea
add
mov
pop
xor
mov
push
or
and
xchg
or
jl
xor
leave
addb
mov
enter
inc
and
adc
and
inc
push
adc
fsubrs
sbb
or
pop
jo
jne
mov
pop
pusha
xor
add
xor
out
inc
in
pop
clc
adc
jmp
adc
mov
clc
push
das
addb
push
fldcw
test
imul
add
xchg
lret
arpl
in
add
push
in
push
adc
dec
les
fidivs
test
cmc
jmp
sub
aaa
lock
mov
xor
sbb
mov
sub
xchg
lods
icebp
clc
inc
mov
or
or
or
adc
push
add
addl
jns
fwait
push
rcll
sbb
push
sub
test
cmpb
je
adc
mov
cltd
sbb
shll
cs
cltd
cwtl
push
test
xchg
lea
int3
int3
daa
cmpb
test
faddl
cmp
dec
cmpsl
sbb
les
outsl
in
incb
and
push
xchg
pusha
adc
fsubl
dec
sub
fs
popa
mov
ret
loope
jne
adc
mov
aad
rorl
pop
cmc
lods
push
jmp
outsl
sub
xchg
sub
test
loop
mov
ret
adc
add
jmp
push
dec
and
das
aad
addb
adc
xchg
pop
addl
dec
or
cmp
ja
inc
lahf
xor
aas
cmp
add
xor
mov
inc
add
movsb
sub
fs
mov
int
inc
loopw
lods
sbb
bextr
add
cmp
lea
add
mov
adc
addb
add
lock
mov
sahf
pop
push
xor
sub
daa
shl
call
pop
add
mov
lcall
lock
divl
fbld
adc
pusha
mov
jecxz
insl
es
movsb
inc
lock
stos
dec
dec
stos
and
mov
dec
pushf
mov
sub
adc
jns
jno
sub
faddl
xor
mov
mov
pop
cmp
invd
lea
les
stc
add
aad
push
test
orb
push
cmp
push
inc
aaa
jno
psubq
jno
xchg
cmp
or
js
sub
cmp
add
inc
dec
inc
std
cld
test
and
add
ret
adc
xor
test
inc
add
pop
clc
or
add
out
mov
lock
jne
inc
fmuls
add
push
mov
dec
jns
subb
push
add
pop
push
xor
fidivs
push
xchg
xor
je
movswl
mov
or
xor
jmp
mov
data16
icebp
aas
or
pusha
mov
mov
sbb
dec
xchg
leave
xchg
pop
mov
xorb
sub
out
int
xor
and
mov
dec
ja
cltd
add
mov
enter
pushf
pusha
adc
hlt
not
imul
in
ret
add
push
or
adc
ja
xor
adc
add
pop
push
push
dec
scas
sbb
roll
xor
push
sbb
push
and
addb
call
test
pop
jne
xchg
dec
scas
ficoml
mov
cmp
cmp
inc
xor
push
enter
es
pop
jb
dec
jb
sbb
dec
jb
dec
adc
or
lock
out
sbb
push
push
out
add
cmpl
sbb
push
cmpl
arpl
xchg
stos
in
pop
repnz
stos
pusha
fsubrs
and
adc
push
sub
enter
stos
xor
rclb
jb
cmpb
adc
jmp
pop
sti
les
insl
jne
push
and
push
or
stos
cmp
rclb
stc
and
mov
ss
add
insb
popa
xor
orb
das
jge
mov
adcb
pop
push
push
jo
jle
push
and
push
mov
test
and
mov
outsb
xor
test
mov
or
jl
adc
jo
mov
and
pop
sbb
mov
cs
push
xor
xor
mov
mov
add
add
add
sti
mov
mov
enter
cltd
and
mov
pop
int
inc
je,pt
xor
mov
daa
sar
hlt
mov
out
or
enter
push
and
pop
outsb
or
jg
mov
mov
add
add
call
dec
gs
imul
xchg
xchg
add
jnp
fidivrs
bound
paddsw
fcmovnb
pop
stos
lea
jae
sbb
sub
mov
xchg
push
xchg
in
cmp
rolb
stc
adc
in
js
inc
mov
cltd
cltd
pop
xor
sbb
lret
pop
testb
push
je
cmp
sub
push
test
mov
pusha
shrl
fsubl
pop
add
add
cmpb
std
nop
pop
inc
inc
fstpt
insl
sbb
jbe
fnsetpm(287
mov
xor
lahf
js
js
and
outsb
jg
xor
jnp
clc
add
fisubs
sbb
xor
push
push
jbe
jbe
loopne
jno
out
push
sbb
mov
out
ds
lods
xchg
adc
lods
jae
stos
sub
xor
xchg
sbb
repnz
clc
hlt
lock
adc
sub
adc
stos
adc
imul
fisubrl
adc
fisttpll
mov
les
fsubrl
rorb
mov
dec
cmp
das
rolb
xor
inc
push
dec
clc
and
mov
lahf
repz
sbb
push
xor
fs
ljmp
mov
push
mov
dec
nop
mov
mov
leave
xchg
iret
pop
or
xchg
xchg
test
xor
pop
lock
or
addl
in
add
push
popf
xchg
pop
fcoml
mov
sub
xor
pop
cltd
jl
push
aad
inc
pop
test
setne
jl
dec
push
sub
mov
dec
mov
mov
jmp
jo
and
leave
pop
out
call
clc
or
test
insb
stc
repnz
sbb
mov
scas
and
push
std
xor
inc
push
out
icebp
inc
and
and
pop
mov
idivl
inc
in
cmp
je
fadds
into
cltd
push
push
fdivrs
jp
jge
out
mov
cmpb
jnp
push
int
iret
cmp
pop
push
add
test
sub
test
and
lret
int
subl
dec
test
mov
dec
jne
in
scas
dec
xchg
test
add
test
sbb
inc
lods
or
jmp
fnstcw
adc
jae
cs
enter
sub
push
xchg
dec
cs
xchg
push
cmp
js
jns
andb
mov
lock
out
rclb
fwait
add
adc
inc
call
inc
pop
int3
scas
add
pushf
inc
add
push
jle
mov
mov
add
cmp
aam
test
inc
mov
in
push
or
out
mov
xchg
xchg
jge
inc
mov
sub
mov
xchg
mov
xor
xchg
into
inc
fwait
out
lcall
out
repz
popf
les
xchg
inc
insl
add
les
xor
shrb
in
js
xor
in
xorb
add
pop
sub
pop
insb
ljmp
pop
or
push
stc
shl
and
add
shrb
jns
pop
and
fs
pop
xor
xorb
sub
dec
inc
xchg
lock
lock
mov
fsubl
in
js
push
fcomps
iret
mov
and
leave
jne
fildl
pop
jne
inc
inc
out
jbe
sub
int
cmp
out
push
cmp
mov
dec
sbb
mov
in
pop
loope
or
add
cmp
jo
loope
xchg
sbb
pop
inc
loopne
fildl
mov
insl
clc
mov
push
mov
xchg
add
dec
fcomps
add
nop
test
mov
add
stc
push
push
add
inc
push
push
fstl
mov
out
out
sub
out
loopne
lcall
in
lea
movsb
mov
movsw
mov
into
sub
pop
mov
dec
mov
enter
mov
adc
push
ficomps
sbb
dec
stos
daa
push
xor
lea
movsl
enter
ss
inc
add
push
jp
xchg
es
inc
daa
pop
cmovle
sub
sbb
and
push
add
imul
popa
cmp
jge
jge
xor
insb
push
dec
or
je
or
ds
adc
movsl
and
sbb
lcall
add
dec
int
xchg
movsb
pop
or
ja
sarb
sbb
adc
or
mov
std
outsb
stc
fs
pop
testb
fisttpl
push
dec
test
ret
rorl
mov
std
xchg
pop
rolb
add
lret
out
and
lret
jecxz
stos
cli
aaa
fisubs
sub
stos
inc
push
and
mov
int
inc
mov
mov
sub
sti
lahf
xchg
mov
lea
or
cs
cmp
xchg
pop
fbld
stos
inc
jne
mov
jns
repz
lods
and
sub
inc
ret
mov
stos
stos
inc
inc
fidivrs
out
ja
fs
outsl
dec
jge
inc
or
adc
mov
mov
in
ja
or
jns
mov
add
xchg
aam
sbb
or
jmp
std
sarb
pop
mov
ljmp
loope
pop
orb
out
xor
jge
add
push
mov
es
imul
jnp
pusha
push
and
clc
rorb
add
add
sub
push
es
fcoms
loope
gs
cs
and
push
push
in
or
out
test
std
inc
cmp
jne
dec
mov
sub
push
push
out
loopne
ret
iret
movsb
and
add
cltd
es
div
iret
sti
aaa
icebp
movl
and
add
push
sbb
add
in
insl
adcl
movsl
mov
ret
aaa
rcrb
pusha
enter
cltd
or
adc
or
sub
pusha
je
cmp
ret
push
fisttps
pop
addl
add
mov
mov
push
insb
and
mov
mov
aam
or
pop
ret
xchg
mov
adc
in
ret
adc
cmp
push
xor
je
push
dec
movb
pop
pusha
orb
repz
xlat
sarb
jnp
xor
pop
or
mov
test
pop
cmp
jmp
dec
es
fisttps
xor
and
sti
lds
push
jg
popf
ret
cmc
mov
or
pop
sbb
add
push
jg
inc
jmp
pop
sub
xor
xchg
and
jmp
sub
movb
mov
popa
mov
sub
sub
lcall
mov
or
adc
cmp
pop
out
mov
pop
pop
ja
or
push
lea
inc
sbb
mov
loope
add
push
loop
mov
inc
push
and
adc
or
add
add
sbb
jmp
in
out
loopne
and
loopne
lret
popa
imul
xchg
adc
addr16
leave
cmp
pop
jecxz
mov
jnp
push
loop
int
push
rcrb
or
add
mov
ficompl
pop
aad
adc
repnz
jecxz,pt
adcb
outsb
xor
ja
xorl
lcall
or
jns
orl
pop
loopne
cli
fiadds
aam
mov
les
mov
adc
rorb
adc
mov
enter
push
andb
cwtl
mov
aaa
sub
xor
mov
xor
popa
or
divb
xor
push
decl
push
jo
test
mov
sbb
ficoml
idiv
xchg
sub
and
sub
push
xor
sub
iret
rorl
jb
rcrb
fdivrs
sbb
fs
jbe
insb
jmp
mov
or
mov
fsubl
mov
push
push
inc
psubusb
or
mov
push
jb
subl
packuswb
inc
sbb
pop
fs
cwtl
test
push
mov
mov
and
or
push
push
sub
cwtl
mov
mov
cwtl
rclb
es
aam
push
and
mov
loope
sbb
add
push
fwait
int3
adc
mov
jb
shrb
xchg
and
sbb
cltd
sub
adc
shll
mov
or
adc
dec
dec
into
push
push
test
rorb
jb
xchg
dec
popf
add
mov
or
repz
add
mov
mov
jnp
mov
push
or
adc
shr
or
add
ss
xor
pop
pop
jmp
les
insl
iret
dec
push
sub
jecxz
ljmp
add
clc
add
xor
jns
jno
inc
lahf
push
jmp
add
push
fnsave
sbb
add
push
inc
cmc
es
add
adc
jne
das
roll
push
cmp
and
cmp
int
push
add
or
mov
test
xor
jo
out
push
mov
sbb
mov
stos
xchg
xchg
xor
push
cld
dec
jbe
in
popa
imul
xor
sbbl
pop
mov
jmp
push
xorl
call
push
sbb
add
sbb
pusha
xchg
dec
jmp
xor
cld
test
or
faddl
mov
mov
movsl
push
push
imul
add
fildl
add
push
xor
pop
clc
push
fldl
pop
mov
sbb
clc
rcrb
pmaxub
rorl
xchg
leave
ja
xor
push
sub
cmp
push
div
push
jae
inc
or
das
xchg
xchg
push
and
add
mov
mov
les
test
inc
mov
cmpl
jne
cmpl
jb
mov
jmp
lds
mov
pushf
mov
mov
and
pusha
xchg
sbb
enter
fcmove
sarb
dec
push
inc
adc
pushl
jecxz
cld
movb
mov
cli
and
add
popf
mov
jnp
pop
add
push
and
add
cmpsl
inc
fmull
out
cmp
cmp
push
or
imul
or
pop
cmc
into
xchg
xlat
sbb
mov
jbe
aam
pushf
addb
loope
pusha
push
adcl
movl
add
rorl
push
lcall
jle
jae
add
push
icebp
inc
std
mov
imul
fisttps
add
mov
push
lea
stc
sbb
incl
cmpsl
ja
or
add
push
push
sub
push
mov
jbe
add
push
ljmp
rcrl
clc
movsl
adc
pop
push
mov
sbb
inc
pop
rorb
unpcklps
add
jbe
out
pop
cld
lcall
push
push
pop
div
mov
mov
shrl
push
in
cmp
decl
ret
ja
ret
ja
lea
test
mov
jmp
std
fsubr
sub
lock
test
lods
add
or
or
clc
sti
inc
or
fldcw
sub
pop
cmpl
lea
sbb
rolb
roll
mov
jp
adc
js
ja
fwait
jp
cwtl
fxch
cmp
call
movsl
pusha
xor
ret
xor
fcomps
popa
in
fildl
out
sbb
js
je
fxch
push
jmp
jmp
lock
inc
adc
inc
or
fcoml
push
sbb
jmp
xor
mov
pop
pop
and
sbb
fwait
sbb
pop
mov
ret
int3
cmp
and
cmpsb
jnp
mov
push
sub
lea
adc
test
jbe
and
fs
pop
ret
lcall
mov
or
sbb
add
push
dec
adc
mov
mov
rcll
lret
push
rcrl
and
sub
xadd
inc
addl
cltd
cli
popa
pop
ja
sub
ja
push
inc
mov
push
div
pop
cld
and
out
iret
push
pushl
mov
xor
cs
leave
or
sub
push
ja
cmp
je
xchg
leave
shll
jge
pop
filds
test
addl
adc
mov
dec
inc
inc
sub
push
push
imul
and
push
lods
pop
inc
out
shll
fisttpl
sti
int
sub
xchg
xor
add
das
fdivrl
xor
jnp
cmp
jo
and
cs
cmp
std
inc
stos
loope
mov
lret
aas
sbb
add
push
jo
js
ds
lret
add
and
mov
aaa
dec
jg
iret
jae
stc
inc
inc
push
push
add
push
adc
fwait
scas
push
push
push
lea
mov
pop
out
xchg
jmp
sti
fistpl
and
sub
pop
sbb
add
push
or
ss
jge
movsb
push
ret
ds
push
adc
in
stc
cmp
daa
scas
and
addb
mov
sbb
adc
into
jo
loopne
mov
push
sbb
adc
das
aad
add
ret
ja
mov
jge
jbe
and
and
popa
add
arpl
or
loop
fcoml
add
jge
adc
fistps
mov
fcomp
ret
jo
repz
mov
inc
je
cmp
mov
lcall
rol
pop
mov
sar
and
add
scas
jne
inc
call
and
and
shl
add
inc
gs
fdivp
sub
repnz
and
prefetch
xchg
add
cmp
jmp
jmp
jecxz
jns
dec
clc
scas
jge
call
test
in
ds
incb
cmp
jb
iret
dec
jb
loopne
divb
mov
pop
mov
inc
sub
adc
imull
push
pop
dec
jne
pop
inc
push
pop
push
ja
ret
pop
pop
and
mov
xchg
lea
push
adc
sbb
cmp
stc
cs
insl
lea
push
inc
add
or
xchg
movsl
mov
or
leave
adc
inc
xor
movsb
pushf
ret
xchg
adc
jnp
mov
pop
sub
stos
loope
cltd
sbb
popf
push
ret
leave
xor
lret
mov
cmp
je
mov
push
das
shr
testl
std
shl
inc
hlt
or
fsub
and
sti
loopne
pop
add
lods
ficomps
push
ret
inc
pop
push
and
xor
mov
push
les
ljmp
icebp
xchg
sbb
push
lock
data16
jmp
add
xchg
adc
jnp
mov
shrb
movsb
mov
mov
jl
mov
repz
test
testb
shll
sub
notb
mov
cmp
test
mov
dec
stos
add
jno
xor
or
mov
xorb
dec
adc
push
jne
shll
dec
mov
orb
sbb
fiaddl
push
mov
pop
sub
das
orl
cld
jmp
sub
mov
sub
add
xchg
xor
lock
sbb
or
add
sub
in
add
mov
jge
cwtl
push
add
inc
mov
sub
sub
inc
jmp
and
adc
mov
out
pusha
sarl
int3
xor
fisttpl
and
pushf
adc
push
mov
data16
pop
loopne
pop
xadd
clc
outsl
dec
dec
pop
mov
push
push
fwait
xchg
loope
cld
mov
lea
sbb
jle
pop
hlt
fdivr
mov
jo
pop
add
clc
cmp
cltd
pusha
fdivrp
push
loopne
inc
or
push
fwait
call
dec
push
lahf
jo
shr
inc
mov
aad
inc
cmp
jl
cmp
jg
fcmovnb
xlat
jmp
test
mov
cmp
push
or
sarl
lea
jmp
adc
fnstenv
inc
mov
mov
adc
mov
jo
push
pop
decl
aas
or
mov
inc
dec
cmp
jb
mov
dec
pop
arpl
dec
popa
push
pop
push
orb
sti
cmp
inc
or
hlt
adc
hlt
jbe
dec
add
je
subb
hlt
add
cld
mov
mov
xor
and
xor
pop
adc
daa
pop
mov
jl
add
gs
cmp
jb
jl
xor
mov
in
add
mov
xor
push
adc
cmp
adc
or
xchg
sub
mov
ret
add
sub
jl
aaa
imul
inc
inc
jnp
inc
push
xor
ljmp
mov
lahf
rolb
push
imul
ds
xor
adc
push
inc
push
test
addl
push
imul
in
inc
movb
pop
paddq
iret
or
inc
daa
add
testl
lea
dec
or
jmp
pop
add
pusha
cld
repnz
add
add
movl
cs
inc
mov
inc
jmp
in
insb
sub
and
sahf
cmp
add
adc
fisttpl
inc
xchg
mov
mov
sbb
in
repz
dec
mov
pop
stos
sub
jmp
push
xchg
mov
and
sbb
push
xor
inc
mov
sbb
inc
jl
sbb
rcl
mov
push
cmpsl
icebp
ljmp
subl
out
sbbb
cmp
cltd
push
mov
xor
repz
sub
dec
adc
mov
adc
mov
stos
inc
and
jle
lock
jg
sbb
push
rdtsc
add
sbb
dec
xor
sub
push
lock
push
sub
lea
dec
push
insb
inc
and
mov
sbbl
push
mull
stos
adc
mov
jle
pop
nop
fld
xchg
or
add
insb
mov
mov
movsl
incl
push
mov
jmp
decl
cmp
push
mov
test
jle
add
cs
add
ret
cs
jne,pn
and
scas
lea
cmp
push
and
test
xor
or
xchg
jl
xorb
dec
mov
dec
pop
xor
test
loopne
addr16
rclb
mov
or
push
pop
inc
and
test
push
or
pop
rolb
fldt
std
icebp
jne
scas
pop
nop
add
movsb
adc
sub
xchg
push
push
mov
js
cmp
inc
pop
push
xlat
shl
test
cli
out
xchg
fstl
xorl
and
rcrb
aam
divb
mov
ja
or
sub
mov
push
aad
cmp
or
test
cmp
pop
test
sbb
aam
imul
xlat
cmp
xchg
inc
lea
out
fmuls
lret
push
xchg
mov
adc
ret
jnp
push
jecxz
inc
jecxz
lea
ja
lea
jmp
ret
jne
jge
std
and
andb
jne
pop
jb
and
push
roll
xorl
pop
or
mov
div
jnp
hlt
mov
sbb
div
fs
sub
push
imul
push
in
or
mov
mov
dec
inc
inc
shlb
shlb
clc
and
sub
lock
arpl
add
push
adc
clts
mov
add
mov
test
bound
call
fimull
xor
fists
shl
xchg
inc
sbb
or
sti
aaa
cmp
nop
aaa
sub
and
shl
in
adc
pop
lea
fs
andb
xor
or
cmpsl
or
dec
mov
xor
add
pop
test
jb
cmp
xchg
pop
pop
out
aad
add
je
in
shlb
aam
mov
aad
push
dec
cs
xor
xchg
in
push
push
loope
push
int3
repz
mov
push
push
mov
push
mov
lods
movsb
mov
stc
and
or
or
sbb
out
add
test
lock
cmp
xchg
push
inc
cmc
andb
push
sub
pop
inc
jne
or
repz
sbb
movsb
lods
in
xchg
mov
add
cmp
mov
je
cmpl
mov
test
shr
shll
cmp
mov
sbb
push
adc
loopne
sti
xor
sub
scas
dec
xor
and
mov
cld
pop
les
sbbl
jnp
mov
xor
ja
je
mov
rorb
and
rdmsr
mov
or
rcl
xorl
and
aas
mov
or
push
push
aas
repz
divl
mov
inc
cs
mov
cmpsl
adc
inc
jl
cmp
pop
pop
test
jbe
jnp
pop
add
lds
inc
jl
pop
les
sub
jb
inc
pop
pop
icebp
dec
lcall
das
adc
xlat
lea
push
inc
xchg
inc
clc
hlt
call
es
inc
sbb
adc
js
sbb
and
les
dec
dec
flds
and
and
and
and
lcall
pop
pop
mov
jle
mov
lea
jle
stos
lea
cli
lahf
pop
fs
xchg
jg
mov
add
jnp
pop
fimull
cmp
pop
inc
in
int
scas
movl
lock
xchg
in
pusha
dec
inc
and
fs
cmp
imul
aas
mov
add
jb
das
cmp
and
and
or
cmovg
pop
dec
shrb
loop
or
test
or
jae
out
lret
shrb
dec
add
push
sub
and
mov
iret
or
xor
dec
sarb
dec
mov
data16
xchg
fildl
adc
inc
lods
push
mov
loop
xor
jl
jns
pop
fdivr
or
fnstcw
cmpsl
and
cmp
xor
push
xchg
mov
mov
es
sub
add
dec
push
jne
in
adc
call
mov
sub
adcb
aam
mov
pop
fwait
adc
jnp
cmc
mov
jmp
push
repnz
popa
je
jl
inc
cmp
imul
push
add
hlt
xorl
lods
pusha
add
push
es
mov
mov
xchg
jo
inc
mov
pop
adc
push
jb
jb
or
loopne
xor
mov
lret
mov
sub
mov
push
mov
lods
test
mov
mov
dec
mov
dec
cmp
cmp
test
sub
out
inc
mov
xchg
jne
loopne
je
dec
inc
pop
or
mov
cmc
adc
divl
dec
mov
dec
icebp
pop
in
xchg
cmc
adcl
lea
ficomps
and
push
jl
mov
push
lock
add
lock
mov
or
sbb
cltd
jae
fildl
fisttpl
hlt
add
dec
ret
mov
xor
mov
adc
cmpsl
in
fsubr
inc
or
mov
sub
repnz
cmp
xor
cmp
gs
mov
in
arpl
nop
push
int
ds
push
adc
and
ret
or
je
aad
xor
and
adc
and
add
test
mov
fnstcw
test
lea
mov
or
mov
lea
data16
push
add
cwtl
mov
xor
adcb
clc
out
fisttpl
and
jne
pop
add
dec
push
test
or
adc
adc
pop
insb
outsb
xor
cli
add
add
cmpb
push
in
cmc
je
mov
sbb
push
ret
std
sub
mov
pop
fnstcw
xchg
pusha
mov
dec
mov
inc
xchg
or
mov
dec
add
sub
dec
mov
mov
call
mov
stos
cltd
jne
movsb
into
orl
pop
repnz
lods
lods
aam
push
pop
mov
cmp
xor
dec
jle
lcall
push
jne
and
and
inc
xchg
and
rcrb
sbb
lea
add
cmc
sbb
mov
popf
mov
dec
xchg
inc
nop
movsl
push
dec
shlb
lods
xchg
loop,pn
cmpl
dec
and
push
add
test
loopne
adc
nop
mov
es
and
pop
xchg
mov
je
dec
clc
lcall
push
in
push
pop
jmp
pop
rolb
mov
or
movsb
push
sbb
add
mov
sahf
mov
xor
pop
gs
push
aas
add
inc
fcmovnbe
inc
loopne
dec
add
add
or
push
jns
insb
js
mov
rol
std
mov
sub
aas
aaa
out
jmp
std
and
std
mov
pop
ljmp
jge,pt
into
das
lea
into
and
imul
cmpsb
lahf
push
aaa
rolb
cmovb
mov
mov
insl
xor
adc
sbb
insb
dec
pusha
dec
xor
sbb
dec
hlt
jp
jmp
mov
shrl
cli
adc
mov
push
mov
inc
lea
outsl
cmp
jb
mov
mov
jl
push
and
cwtl
ja
sbb
and
jbe
loope
push
aaa
sub
sbb
push
push
jns
mov
push
xor
xor
aad
loope
mov
sub
inc
ror
pop
push
sbb
fld
lods
jp
lds
out
movsb
and
negl
cmp
into
dec
cs
inc
cmp
in
int3
sarb
pop
dec
jmp
mov
xchg
movb
ljmp
pop
xchg
pushf
sub
cmp
out
dec
scas
orb
sbbb
inc
sub
cmp
inc
rolb
and
sbb
sbb
pop
stos
mov
mov
shr
push
add
add
mov
mov
fisttps
adcl
jb
sub
add
cmpb
je
xchg
call
loop
jmp
pop
mov
mov
sub
push
sbb
out
aas
cmp
ja
lea
scas
dec
adc
pop
sbb
movb
jle
mov
sbb
pop
or
std
and
mov
xchg
movzwl
repnz
mov
mov
jmp
pop
stos
je
cmp
ret
sbbl
rol
xchg
sub
dec
jno
sub
test
jl
sbb
mov
cmovg
pop
roll
les
test
sub
fcoms
negb
cmc
mov
cmp
cmp
add
int
fisttps
jb
int3
mov
hlt
in
xchg
int3
mov
cs
add
test
or
jae
int3
mov
repnz
mov
add
sbb
xchg
pop
sti
int3
mov
in
mov
movsb
shl
mov
mov
or
test
repnz
and
add
aas
and
push
mov
mov
out
pop
sbb
lret
shrb
jnp
jno
sbb
movb
pop
fisttpl
mov
xchg
push
add
jb
lcall
int3
andb
sub
and
xor
cmp
daa
xchg
nop
xchg
mov
daa
inc
lea
xor
and
mov
xchg
filds
test
push
push
add
inc
or
loopne
add
inc
sbb
inc
push
rcrb
leave
test
xor
pop
or
or
push
mov
push
repz
sub
addr16
xchg
push
adc
mov
fcompl
push
lea
test
xchg
testb
dec
push
pop
cmp
xchg
fldlg2
sti
jne
xchg
sbb
adc
adc
push
in
inc
jp
mov
add
and
test
xchg
push
cld
jne
dec
xchg
cmpsl
push
mov
test
sbb
stos
pop
pusha
mov
sahf
ror
icebp
jmp
jmp
inc
test
jne
mov
imul
mov
test
fcomps
dec
add
and
inc
loop
xchg
movsl
mov
je
repnz
add
or
out
out
add
in
inc
mov
add
subl
dec
and
imul
add
aaa
dec
inc
repz
std
hlt
hlt
mov
std
push
mov
daa
xor
sbb
jo
dec
add
roll
mov
add
add
mov
push
or
mov
push
add
push
mov
mov
pop
out
add
loope
add
lea
loopne
xchg
mov
jmp
sbb
loop
xor
push
popa
pop
push
daa
sub
xlat
jg,pt
inc
pop
sub
pop
cmp
mov
test
inc
mov
xchg
lock
mov
add
sbb
fmuls
mov
ss
leave
jb
movsb
jecxz
and
cwtl
in
and
ds
sub
inc
inc
jmp
fmuls
fildll
sti
subb
or
mov
and
mov
or
dec
inc
dec
add
push
push
test
add
pushl
mov
adc
loop
leave
clc
sti
inc
dec
test
cmp
fcom
jae
lea
or
int3
mov
into
ret
mov
sbb
pop
cmp
and
xor
arpl
les
dec
add
enter
cmp
xlat
nop
shr
xor
add
or
adc
mov
add
cmp
shrb
adc
loope
mov
lock
mov
mov
mov
push
jo
outsl
popa
fmull
data16
mov
inc
in
shrl
shrl
iret
fwait
push
outsb
mov
orb
sarl
mov
jo
adcb
pusha
out
cmpsb
add
pushf
inc
push
sub
cwtl
in
add
aam
push
cmpsb
add
mov
pop
loopne
push
xchg
lea
mov
movsb
cmp
cmpl
cmp
xor
or
daa
in
push
pop
push
push
sbb
sub
sbb
rclb
leave
and
fsub
jne
or
adc
sarb
enter
xor
or
daa
mov
lods
out
cs
xchg
xor
scas
fsubr
shll
mov
pop
mov
clc
into
cmp
jne
fs
add
dec
xor
add
cmp
sbb
cmp
mov
sub
cmp
pushf
test
dec
rclb
lds
mov
push
mov
lods
mov
lock
jne
inc
nop
in
pop
cltd
je
or
pusha
lds
jne
adc
mov
ljmp
add
xchg
je
pop
or
mov
or
bound
iret
push
jo
ret
jge
loopne
das
and
adc
in
adc
push
xchg
int3
cltd
pop
xchg
adcb
loopne
adc
lea
jmp
jg
inc
sub
adc
add
pop
jb
push
daa
xchg
sbbb
fildl
pop
insl
xor
jle
jl
fisubl
xchg
negl
scas
xor
in
add
add
imul
push
movb
mov
rcrl
or
sti
push
inc
jecxz
mov
or
and
cmp
inc
popa
popf
das
pop
and
fnsave
sub
push
push
and
or
sbb
add
test
pop
mov
push
pop
lds
inc
adc
or
mov
lods
ljmp
push
lods
xchg
dec
or
cmp
pop
cli
fildl
sub
push
and
dec
xchg
dec
outsb
or
movsl
xorl
jo
andb
insl
pop
push
jb
and
or
fldl
cmp
test
sub
scas
sbb
inc
push
push
push
mov
arpl
or
or
and
add
cld
cmc
adc
cld
jge
cwtl
icebp
xor
lea
push
mov
and
push
icebp
cmp
add
mov
fnsave
cmpsl
mov
or
and
lds
sub
jl
stos
mov
jns
popa
inc
add
jp
mov
ficoml
or
inc
cmp
pop
insl
push
and
inc
movsl
push
or
sbb
pop
push
mov
into
or
testl
cltd
lea
mov
mov
mov
sbb
inc
mov
ljmp
ja
sbb
cld
mov
sub
test
roll
lahf
mov
cmp
popl
or
test
push
push
fld
daa
clc
or
and
cmp
leave
icebp
or
cmp
push
cmp
repnz
incl
jne
cmp
jae
mov
test
adc
in
jle
mov
push
jae
jecxz
sbbb
inc
push
jae
iret
bnd
jg
mov
jbe
cmp
sbb
cmp
jmp
mov
mov
dec
ss
pop
mov
xchg
into
push
mov
lret
mov
hlt
scas
sub
sbb
sbb
jbe
inc
fs
sub
int3
xchg
js
adc
inc
cmp
cmpl
adc
or
xor
pop
in
in
loop
loop
add
push
loop
adc
push
add
enter
pusha
inc
inc
and
pop
mov
shrd
mov
jmp
repnz
add
shl
mov
mov
ds
mov
lds
test
mov
mov
in
mov
push
sbb
or
adc
lds
loop
add
inc
stos
fnstsw
xor
repnz
push
lock
adc
sub
ficomps
inc
mov
pusha
lahf
sub
cltd
adc
push
cld
popa
and
sbb
loope
stc
cltd
mov
jecxz
sub
addl
mov
shlb
mov
mov
dec
mov
movsb
loope
mov
es
push
jne
pop
mov
pop
adc
fdivr
fsts
sbb
mov
mov
pop
push
test
ss
jmp
lds
push
xor
aas
push
cmp
xor
lcall
inc
cmp
mov
loop
roll
or
and
mov
andb
cli
outsl
ss
pop
xchg
movsb
add
mov
das
dec
and
add
mov
cwtl
and
pusha
or
popfw
icebp
fldcw
sub
sbb
mov
out
rolb
or
sbb
cmp
aad
adc
adc
popf
mov
fstpl
pop
cmp
arpl
rolb
insb
pop
mov
cwtl
ss
xor
adc
jne
std
cmp
stos
push
movsl
xchg
mov
cmp
cltd
sbb
inc
push
add
fdivs
aas
mov
je
ja
inc
call
sub
pop
je
test
cmp
das
je
dec
jne
sub
push
mov
pop
pop
nop
mov
cmp
add
dec
lods
inc
cwtl
imull
mov
dec
daa
cmp
int3
sbb
xlat
sbb
enter
out
xchg
popa
inc
addr16
or
cmpsl
dec
sarl
cmpsl
lods
sbb
ds
nop
mov
pop
and
and
xchg
mov
clc
jns,pn
pop
dec
xchg
sbb
pusha
or
es
sahf
mov
sbb
loopne
out
jg
aad
inc
sti
or
pop
inc
in
movsb
je
fcomps
jb
loop
and
add
push
inc
ret
jbe
jg
das
mov
push
arpl
mov
inc
push
cmc
or
and
or
in
les
sub
loopne
jnp
pop
orb
push
pop
adc
pushw
inc
jbe
in
loopne
sub
aaa
test
adc
pop
and
jo
out
push
jns
repz
lods
lock
mov
popf
inc
inc
or
mov
roll
and
and
mull
push
and
aam
pop
pop
test
call
xchg
and
call
in
xchg
dec
add
scas
lods
sbb
dec
push
dec
jno
cmp
cmp
movsb
push
stos
cwtl
mov
cmp
sbb
test
movsb
pop
inc
mov
push
xor
push
lcall
and
xchg
lock
ucomiss
mov
ja
dec
pand
lock
pushf
add
movsb
sub
add
loope
or
inc
cmpb
dec
mov
add
add
cwtl
mov
mov
cwtl
test
aad
addb
std
imul
add
pusha
shl
add
add
pop
add
push
and
sbb
test
and
jne
imul
sbb
movsl
jae
or
pop
mov
push
cmpb
jne
loopne
cld
idivb
das
push
inc
sub
lock
jbe
or
inc
bound
fs
adc
pop
sbb
sbb
sbb
ret
push
xor
xchg
sub
dec
orl
pop
sbb
lock
pop
test
mov
in
pop
sbb
push
call
push
sbb
xchg
fildl
mov
sbb
mov
or
add
xor
aaa
dec
mov
loop
push
lea
push
jl
call
rcr
dec
sbb
addl
push
push
ja
dec
lea
cld
add
adc
cld
adc
cmp
push
jno
add
test
xchg
inc
subl
lods
mov
cmc
enter
lods
add
mulb
dec
popf
outsl
and
and
in
jae
cli
and
push
ljmp
mov
push
mov
push
inc
mov
sbb
push
add
mov
pushl
outsb
subl
pop
add
inc
jmp
jge
je
mov
call
enter
int3
in
sbb
in
dec
sbb
cmp
push
xor
in
sub
loopne
mov
mov
js
int3
push
inc
push
mov
fs
lds
or
or
fwait
jae
lea
and
cmp
adc
int3
aam
movb
inc
dec
dec
fnstenv
add
push
stos
aaa
rorl
add
cmpb
and
xor
dec
xor
sbb
mov
movb
test
jmp
mov
call
mov
ljmp
aad
pop
nop
xor
push
loope
lods
leave
xor
push
push
shlb
sbb
xchg
cld
nop
inc
sbb
mov
pop
or
mov
pop
cmp
sbb
inc
mov
insl
xor
popf
inc
mov
cmp
cmp
fldt
addr16
lahf
fs
aad
ljmp
nop
adc
mov
push
sub
and
push
mov
stos
test
or
push
push
push
add
test
add
or
cltd
xorb
or
lret
mov
xor
movsl
rolb
invd
cltd
or
push
mov
and
ret
mov
imul
mov
fists
adc
in
nop
in
inc
dec
daa
hlt
test
add
jne
mov
or
adc
xchg
and
mov
mov
or
add
xchg
add
add
mulb
inc
int
daa
fs
add
fisttpl
add
jecxz
lods
add
jo
mov
sub
inc
loopne
cmpl
add
sub
icebp
es
mov
pusha
out
sub
sbb
jno
test
enter
push
imul
sub
xor
fidivs
push
add
cltd
sbb
loopne
addl
insb
or
test
je
movl
xor
faddl
rcll
jl
mov
cld
mov
pushf
add
jne
adc
add
jmp
shlb
sbb
add
cmp
add
shrl
loope
rep
call
inc
je
xchg
or
in
xor
pop
je
and
mov
adc
repnz
dec
xchg
sbb
inc
cwtl
xchg
je
dec
add
push
adc
xchg
cmp
dec
mov
mov
inc
cmp
jb
jecxz
outsl
movl
mov
add
xchg
movsb
and
jmp
mov
mov
fnstcw
pop
mull
xor
cmp
pop
or
mov
loop
mov
inc
in
mov
add
pop
orl
orl
xchg
es
pop
arpl
lcall
or
adc
inc
addr16
and
adc
pop
loopne
cmpb
addr16
lret
jbe
mov
sbb
loope
jmp
jns
inc
jns
imul
adc
sbb
add
pop
jle
cmp
or
test
cltd
test
loope
xchg
cmpsl
push
or
sub
arpl
mov
adc
inc
arpl
mov
mov
or
dec
mov
add
sub
popf
sbb
jns
and
jne
push
mull
inc
je
scas
rep
mov
push
iret
pusha
and
jmp
ljmp
fnstcw
mov
inc
js
adc
or
and
call
test
daa
jae
testl
push
popf
sub
jmp
pop
lcall
cmpsb
lret
add
rorb
sbb
shl
add
dec
or
xor
ret
or
sbb
in
mov
push
insb
and
add
jns
mov
add
add
mov
cli
mov
and
push
push
sbb
inc
data16
insl
xor
imul
movsl
pusha
adc
dec
add
jnp
inc
bound
and
imul
fildl
mov
push
sub
jae
ljmp
mov
movl
out
cld
out
mov
call
sub
pop
shl
lods
mov
mov
push
cltd
push
les
push
push
cwtl
cmp
adc
stc
or
aad
mov
inc
mov
dec
adc
adc
aam
or
and
dec
loop
inc
inc
notb
cwtl
mov
mov
sbb
and
lahf
js
mov
add
pop
repnz
add
lret
inc
movsl
jo
fsubs
or
push
dec
or
shll
test
dec
aam
add
adc
scas
int3
mov
jbe
mov
mov
pop
out
imul
enter
lds
jno
adc
sub
cld
mov
out
xchg
mov
mov
cwtl
lahf
push
in
inc
loop
inc
add
inc
mov
imul
mov
mov
mov
jl
or
jg
pop
dec
es
sub
sbb
pop
dec
aaa
jno
pop
ss
iret
add
cmp
sub
pop
add
add
and
xor
pop
sbb
aam
pop
mov
div
les
leave
add
push
int3
pop
shll
sbb
cmp
roll
shlb
mov
roll
hlt
sbb
or
test
orb
shlb
xlat
cld
and
xchg
pop
scas
inc
shlb
arpl
push
pushf
push
cmp
mov
and
cmp
push
aam
in
xor
lods
ret
and
dec
repnz
mov
stc
cmp
das
mov
inc
push
push
cmp
and
mov
in
mov
mov
pusha
dec
scas
dec
cmp
xor
mov
dec
push
push
pop
add
imul
mov
xchg
add
mov
mov
inc
decl
je
fst
xchg
lock
movsl
pop
jmp
mov
in
stc
push
imul
mov
cmp
pop
sub
in
jo
pop
imul
arpl
ret
loopne
pop
inc
push
faddl
js
xchg
sarl
inc
mov
mov
adc
add
adc
std
adc
icebp
clc
mov
xchg
pushf
fsts
std
cwtl
sbb
and
and
adc
mov
pop
das
in
fimull
push
pop
ljmp
sbb
cwtl
cmp
sub
leave
inc
inc
pushf
in
mov
pop
cli
movsb
sub
aaa
and
arpl
call
stos
pop
loopne
in
sbb
out
add
push
mov
push
xor
cmpl
sbb
cmp
xchg
pop
dec
aam
clc
cmp
pop
stos
sub
add
jbe
and
cmp
and
insl
adc
sub
data16
inc
jb
inc
test
adc
sbb
mov
leave
mov
in
in
dec
xor
cmp
inc
shlb
sub
sub
outsl
shrb
cmc
mov
test
xchg
xor
dec
repnz
sbb
ftst
out
sti
popa
sbb
push
push
rcr
inc
enter
mov
dec
cmpl
jl
or
adc
jns
rorb
lock
test
push
add
and
sbb
cwtl
mov
and
pusha
mov
xchg
scas
add
push
xchg
aaa
add
mov
rcll
and
fs
ret
and
outsb
or
jecxz
lods
popa
ret
movsb
cmp
ss
push
or
shlb
inc
mov
or
les
push
or
xlat
fs
dec
sbb
and
sub
push
cmpb
sbb
or
add
add
push
addl
in
inc
push
sti
clc
add
imul
arpl
push
or
push
in
mov
xchg
jp
pop
lret
and
mov
mov
add
mov
add
stc
mov
add
enter
cmpsb
fistps
dec
cmpb
or
nop
jle
inc
pop
push
push
les
les
gs
xchg
test
fisubrl
loopne
xchg
clc
mov
cmp
pop
fisubrs
mov
mov
mov
in
xlat
xlat
loope
jle
fucomi
push
ficoml
add
faddl
or
and
loope
fmuls
inc
in
mov
iret
adc
leave
arpl
adc
push
or
add
lods
sbbb
cs
movsb
pop
in
mov
add
shl
imul
dec
faddp
xor
lahf
cmp
cmp
jne
lea
fsts
fsubrs
inc
mov
cmp
inc
out
push
add
cmpsb
insl
or
inc
in
adc
jle
shll
push
mov
jp
clc
insl
je
or
lea
enter
sbb
add
jae
dec
lahf
jl
addr16
cmp
pcmpeqd
decl
cmp
inc
lahf
movsbl
test
ret
cwtl
cmp
je
cmp
je
cmp
jne
cli
mov
data16
jne
mov
inc
fnstenv
ja
pop
imul
call
insl
or
xor
leave
mov
inc
inc
mov
cmp
jne
sbb
push
or
adc
xor
cmp
jbe
dec
jp
and
add
push
or
jns
lea
sbb
and
sarl
jbe
in
ja
adc
das
sbb
aaa
test
jmp
jg
pop
add
cld
or
xchg
or
fstpl
sbb
mov
bound
adc
add
jmp
ret
sub
mov
sbb
jge
pop
adc
clc
mov
or
shlb
dec
cmp
in
scas
int3
xorl
arpl
jl
add
adc
clc
loop
mov
mov
push
cmp
push
mov
sub
mov
aad
pop
inc
cld
insb
dec
xchg
adc
sbb
ljmp
jle
test
pusha
mov
pusha
ja
gs
cmp
adc
adc
add
inc
add
cmp
bound
xor
jmp
test
stc
mov
jl
sahf
jbe
inc
arpl
jne
out
cmp
adc
mov
hlt
xor
loop
andl
pop
push
insb
dec
pop
pushf
add
jo
ret
into
lock
mov
imul
movsb
sbb
cmpsb
loope
adc
sub
or
mov
mov
icebp
push
imul
out
or
dec
shrb
ret
je
dec
je
dec
jb
lock
das
ja
mov
lahf
cwtl
lods
xlat
or
jmp
push
cwtl
xchg
add
inc
and
insb
popa
test
lahf
dec
gs
je
pop
xor
adc
push
mov
mov
mov
movsb
dec
bound
fadd
pop
xor
inc
mov
mov
jno
xchg
cmp
mov
xchg
add
test
and
int3
cmpsl
lods
test
add
sub
sbb
push
jae
outsb
jnp
or
in
fistpl
or
add
dec
jnp
repz
jbe
cmpsb
push
pusha
xchg
mov
sub
es
xchg
and
adc
faddl
sub
mov
dec
sbb
and
sti
xor
pop
repnz
pushf
int3
inc
push
inc
push
rcrl
in
data16
mov
cmc
cmp
je
mov
jecxz
test
inc
jbe
or
mov
cmpb
test
pop
jns
jecxz
je
lods
jae
enter
push
push
sub
cmp
or
dec
and
iret
fs
movb
addb
or
loopne
jns
xor
mov
cmpsb
lock
lods
cs
inc
cmp
cld
lock
inc
add
in
sbb
xchg
mov
jmp
mov
pop
and
int3
inc
mov
in
sbb
lret
push
movsb
std
daa
fwait
add
fcompl
add
mov
sbb
mov
inc
sbb
movsl
test
mov
jae
lds
pop
ss
lock
mov
aas
pusha
add
xor
outsb
bound
icebp
out
test
add
int3
cmpsb
sbb
icebp
shrb
pop
mov
mov
stos
jne
jne
mov
sub
xor
add
dec
cmp
xchg
outsl
int
cmp
xor
pop
mov
icebp
negl
sbb
and
jp
aaa
inc
orb
and
fwait
pop
dec
repz
push
sub
movsb
in
rorl
add
add
jl
push
movsl
dec
cmpb
mov
pop
adc
pop
or
repnz
xor
mov
test
fbstp
and
xchg
add
gs
or
stc
or
lret
add
cmp
xchg
inc
fmuls
xor
jle
loop
and
jl
and
adc
sti
mov
mov
subb
test
push
sbb
add
and
lcall
sbb
xchg
enter
and
xchg
les
cmp
adc
pop
loope
add
rcrl
iret
push
jmp
movsl
dec
popf
popf
ret
sbb
dec
iret
bound
sbb
addr16
xchg
loope
push
add
adc
leave
xor
dec
popa
mov
ret
test
dec
inc
dec
cmc
mov
add
sbb
sub
cmp
les
subl
hlt
clc
xchg
adc
mov
sbb
and
lock
or
xor
adc
xchg
loope
mov
add
in
xor
scas
fsts
or
roll
xor
mov
test
inc
das
clc
jp
pop
fsubl
and
jge
add
add
inc
cmp
sbb
test
and
xor
add
adc
sar
dec
enter
push
or
fidivrl
sbb
fildl
outsl
and
xor
loopne
lea
push
add
jg
push
add
pusha
inc
test
arpl
sbbb
movsl
mov
mov
pop
xorb
incb
xor
sub
jmp
inc
mov
fildll
loop
mov
inc
or
add
wbinvd
push
or
mov
or
sbb
aaa
pop
andb
push
and
sarl
or
adc
mov
and
aas
push
aaa
cltd
outsl
lret
mov
fistpl
mov
shll
clc
pushf
jbe
popf
add
sbb
dec
jle
dec
lods
add
clc
andl
jg
lea
xchg
push
shlb
add
cmp
stos
jge
add
lods
pop
roll
jo
mov
hlt
sbb
and
addl
and
cmp
ds
push
or
add
sub
call
or
outsl
fs
dec
pop
add
nop
imul
cmp
sbb
pop
popf
mov
out
pop
xor
adcl
test
shlb
mov
dec
sub
and
pop
es
fists
cli
push
dec
mov
push
mov
push
push
cmp
jnp
inc
add
ss
and
inc
rep
or
insb
and
inc
xor
mov
shr
outsb
jp
add
jo
bound
jmp
clc
icebp
mov
jl
pop
adc
add
mov
jo
mov
inc
mov
je
push
and
jb
cmc
sbb
inc
jle
inc
mov
adc
test
mov
push
push
enter
jge
push
nop
arpl
add
daa
add
add
mov
or
mov
pop
add
lods
cmp
decb
jge
or
mov
push
jbe
and
xor
lock
jb
or
test
and
pop
and
add
je
or
mov
adc
cmpl
mov
or
jmp
dec
imul
jbe
imul
sti
das
adc
mov
mov
push
repz
or
push
xchg
inc
aaa
or
lret
pop
repnz
xchg
enter
mov
add
inc
push
ret
or
xor
inc
cwtl
cs
jecxz
mov
nop
cmp
dec
and
rorl
test
test
mov
xchg
sub
mov
sub
jg
call
test
cmp
xchg
mov
sub
fs
xchg
adc
adc
in
dec
sbb
dec
and
push
insb
and
call
xor
pop
enter
cwtl
repnz
repz
test
xchg
push
mov
cmpsl
test
sbb
inc
rcrl
int3
outsl
mov
fldl
mov
or
and
pushf
lock
cs
jbe
clc
shl
xor
mov
roll
mov
inc
mov
ds
aas
sub
sbb
xorl
jbe
or
fdivl
inc
push
push
add
sbbl
cmp
xor
xchg
outsb
or
push
sbb
cmp
mov
movsb
push
adc
fisubrl
jg
negl
xchg
adc
add
add
add
hlt
arpl
addl
sbb
sub
xchg
jge
mov
push
pop
enter
mov
enter
mov
and
push
xchg
push
inc
test
inc
jo
inc
cmp
sub
repnz
roll
sbb
js
sub
jmp
in
sbb
cld
jmp
add
and
or
and
in
dec
xchg
jmp
and
loopne
je
leave
push
and
enter
push
mov
leave
cmp
adc
adc
or
adc
cwtl
push
lods
daa
call
mov
popa
daa
nop
mov
adc
and
sub
test
add
inc
imul
pop
stos
rcrb
mov
dec
or
cld
mov
nop
push
mov
fsubrl
ret
lea
or
dec
jb
les
pop
and
testl
and
cmp
pushf
cwtl
or
sub
fwait
push
cwtl
push
push
rolb
and
test
not
or
lcall
inc
movsb
lea
sbb
inc
push
inc
imul
mov
sub
out
test
mov
notl
scas
cmp
mov
mov
pop
pushf
push
xlat
add
movsb
icebp
sarb
inc
pop
loopne
dec
dec
adc
add
cmp
push
cmp
jle
dec
cli
or
lea
or
and
xor
jns
or
sub
push
cmp
add
fistps
mov
push
push
frstor
push
dec
je
cmp
sar
out
rcrb
xchg
movsb
mov
mov
jnp
inc
mov
clc
div
pop
xor
std
mov
mov
jnp
push
jae
test
push
dec
push
push
out
push
mov
push
int3
push
xorl
push
push
in
mov
jmp
mov
test
mov
pop
mov
pop
jbe
pushf
jecxz
pop
mov
add
and
mov
push
or
and
or
inc
xor
mov
mov
push
cmpsl
xchg
inc
rolb
jp
ds
sbb
inc
mov
test
or
pop
mov
mov
jmp
leave
inc
mov
push
in
add
ret
mov
push
sbb
jmp
cmp
xor
push
xor
cmp
adc
sbb
sbb
lods
jns
sbb
or
subb
inc
and
and
push
jp
push
push
scas
cltd
mov
jg
int3
cmp
push
xor
inc
sub
test
movsb
add
out
rclb
mov
mov
ds
xor
cmp
jmp
push
insl
push
dec
adc
inc
push
sbb
jno
mov
pop
and
jmp
incl
fcomps
shlb
add
sub
xor
cmp
test
add
in
dec
out
rolb
xchg
fcomps
inc
sbb
and
sti
adc
add
add
ficoml
popf
adc
mov
push
loop
cmpsl
cmp
and
fucomip
jns
mov
jmp
pusha
cmp
or
dec
repnz
xor
pop
jmp
add
daa
mov
rcrb
pop
or
jae
roll
out
mov
and
and
icebp
imul
or
in
cmpsl
sbb
xchg
dec
pop
test
or
out
inc
lock
mov
push
add
arpl
enter
cmp
mov
inc
xchg
inc
xor
cmc
outsb
and
aam
push
sub
jae
xchg
dec
bswap
jbe
dec
repnz
mov
push
stos
mov
xor
outsl
aaa
test
hlt
test
or
push
call
sbb
mov
mov
pop
adc
inc
lock
addr16
mov
popa
incl
pop
dec
or
xchg
xor
sub
test
sbb
insb
jecxz
push
and
add
push
cmp
or
sub
mov
add
popa
aam
jle
push
or
shlb
in
pop
or
lock
sbb
push
outsl
aad
mov
push
add
mov
movsl
and
test
dec
and
in
pop
adcb
xor
mov
out
mov
enter
sub
loopne
cmp
fbld
and
inc
or
adc
imul
je
mov
aam
adc
dec
dec
fcoms
jge
mov
xchg
xchg
sbb
push
jb
push
leave
push
dec
sbbb
xor
mov
push
and
clc
pop
stc
mov
sbb
in
adc
clc
leave
rol
inc
lods
add
in
rclb
ss
mov
fwait
jg
call
pop
mov
out
or
xor
sub
sub
mov
movb
in
lahf
mov
in
icebp
adc
push
inc
pusha
pop
repz
adc
bound
and
xor
shll
fsts
or
sbb
je
ret
jmp
lret
ret
mov
es
fs
mov
jmp
cmpsl
add
inc
lock
xor
and
sub
and
xlat
scas
fs
and
push
xlat
and
push
xor
ret
mov
mov
popa
mov
bound
pusha
cmp
xchg
cwtl
pop
aaa
sti
push
shlb
mov
sbb
mov
mov
jmp
pop
sbb
fcom
sbb
jnp
inc
fisubl
mov
push
xchg
imul
dec
push
pop
sub
movsb
push
inc
sahf
lret
dec
movsb
xor
rcll
mov
jne
lock
or
push
sub
test
in
push
cmpl
pop
out
movsb
nop
rorb
push
les
or
sahf
fwait
movsb
sub
xchg
add
or
sub
pushf
jmp
pushf
dec
inc
cwtl
push
xchg
icebp
fnstcw
lods
mov
push
or
mov
test
das
leave
push
orb
push
out
and
and
mov
inc
cmp
sub
lods
mov
pop
rorl
xchg
mov
test
pop
mov
adc
mov
mov
dec
pop
inc
loop
mov
test
xor
jb
stc
adc
dec
mov
stos
or
xchg
and
and
enter
push
pushf
xchg
and
xchg
mov
xor
sub
cltd
or
xchg
lods
adc
fdivr
inc
push
jmp
jge
fsts
cltd
cmp
subb
sbb
push
pusha
mov
mov
loop
cltd
out
push
mov
and
jb
xchg
test
mov
jne
clc
loop
xor
push
fildll
stc
adc
pop
sub
out
scas
sbb
dec
sbb
jne
mov
and
inc
in
mov
into
jg
hlt
clc
pusha
and
cmpsl
lods
add
mov
push
adc
std
xor
and
add
movl
in
jbe
inc
sbb
test
cmpsb
xor
sbb
mov
aaa
popf
or
dec
in
lret
idivl
ss
gs
xor
loope
call
aaa
test
out
decl
jne
sar
mov
jo
jno
push
into
pop
cmp
and
mov
mov
add
sub
rcll
lcall
iret
push
sbb
mov
test
pusha
adc
sub
adc
add
add
cli
jo
dec
stc
mov
sbb
rclb
sahf
and
mov
xchg
add
xorb
cmp
mov
fs
popa
pop
fldcw
sub
sub
dec
leave
and
xor
or
lds
fs
shrb
inc
repnz
xorl
jne
movb
and
cmp
ds
jle
or
mov
sbb
inc
push
mov
es
dec
inc
sahf
sub
xor
out
push
sbb
in
inc
xor
repz
adc
inc
cmpsb
inc
pop
fsubrs
cltd
je
pop
insb
pop
add
pop
roll
scas
adc
sahf
xchg
aaa
jg
pop
sbb
adc
out
test
cmc
mov
rclb
mov
xor
cmp
in
in
sub
dec
sub
cmp
cmp
push
call
mov
mov
test
push
mov
inc
es
sub
je
call
push
ret
push
mov
dec
and
push
movsb
imul
pop
inc
adcb
rcrl
sub
xchg
nop
xchg
xor
andl
pop
add
add
ds
mov
mov
decb
in
or
ss
jge
jne
adc
sbb
or
clc
sub
cmp
add
adc
lret
repnz
add
sbb
mov
aas
stos
lea
push
cmp
das
ljmp
popa
lcall
and
popf
push
mov
mov
dec
popa
and
ret
dec
add
or
xchg
adc
les
data16
pusha
pop
push
or
jne
pop
pop
test
adc
repnz
or
push
xor
or
out
sti
jae
pop
movb
pop
cmp
xor
or
cwtl
cmp
mov
daa
imul
mov
stos
or
mov
mov
push
aam
popa
push
in
mov
hlt
push
inc
or
mov
inc
inc
inc
sbb
inc
lea
sub
sbb
dec
insb
shrl
sbb
testl
dec
les
cltd
pop
mov
dec
rorb
call
mov
je
es
gs
inc
xchg
add
mov
sahf
outsb
xchg
mov
enter
adc
dec
sahf
mov
adc
add
dec
push
in
add
pop
repnz
dec
add
aam
ret
fsubl
enter
jmp
add
add
push
push
test
sbb
inc
mov
mov
cmp
je
push
and
xchg
push
loopne
dec
jb
and
pusha
push
inc
add
xchg
mov
test
addr16
mov
movsl
push
fisubs
adcl
cmp
or
xor
jl
dec
sub
jle
pop
cmpb
movsb
movsb
push
push
add
push
xor
adc
stos
push
movsl
push
jecxz
iret
lods
scas
xor
or
inc
test
mov
insb
aas
fadd
fsubrs
fcomps
das
clc
push
push
fdivrl
mov
inc
inc
mov
sbb
std
cmpsb
loopne
sbb
sub
aas
cmp
popa
xchg
ret
shrb
add
nop
out
pop
pinsrw
mov
inc
sahf
movups
subb
add
es
mov
mov
cmpl
into
push
int3
rolb
or
push
mov
movl
mov
aas
adc
mov
and
shrl
inc
test
mov
mov
cwtl
mov
sub
push
xor
push
movsb
pop
test
aam
push
push
icebp
pusha
cmp
sub
xor
jb
mov
insl
dec
mov
loopne
push
test
outsl
pusha
mov
or
push
cmc
dec
sub
jg
jne
jle
sti
sub
jg
jnp
sub
fists
push
out
cmp
or
add
mov
into
stc
adc
into
arpl
push
add
clc
pop
call
pusha
andl
mov
add
in
lds
push
pop
inc
and
insb
pusha
add
imul
adc
xchg
xchg
sub
xor
jne
mov
bound
aam
sub
test
pop
mov
push
mov
invd
add
jmp
shl
cmp
mov
pushf
sbb
ljmp
push
outsb
inc
push
stos
fadds
mov
mov
and
lea
mov
xchg
arpl
xor
mov
jnp
int3
aad
jecxz
pop
movsl
push
out
push
loope
jbe
lods
mov
mov
pop
aas
xlat
mov
jnp
mov
stos
orl
jge
shlb
push
jmp
scas
pop
mov
jp
ja
icebp
jl
mov
push
mov
add
or
test
push
jae
jns
dec
mov
dec
push
pop
inc
dec
dec
ss
ss
sub
inc
xor
ljmp
push
xor
aaa
inc
push
js
jl
rcrb
movsb
or
lcall
mov
gs
leave
inc
inc
adc
xor
jne
mov
rcrl
add
inc
jo
adc
dec
mov
movsb
sbb
push
xor
cwtl
fiadds
lea
insb
clc
cld
xor
cmp
push
aaa
pop
mov
fistl
mov
inc
dec
adc
mov
push
jnp
ficompl
add
iret
adc
movsb
scas
test
push
aaa
inc
mov
mov
repnz
into
sub
movsb
daa
and
or
push
mov
nop
xchg
add
add
mov
mov
mov
mov
iret
stos
sbb
sbb
or
pop
push
pop
xchg
mull
imul
ret
shr
or
shrb
scas
insl
adc
insl
push
movb
inc
sbb
adc
psllq
cltd
or
jnp
popa
cmp
cmp
lahf
cmp
subb
mov
jno
fs
sbb
or
add
mov
cmp
inc
dec
cmp
push
inc
cltd
inc
xor
das
add
dec
lret
dec
adc
adc
aas
ror
gs
and
push
dec
or
int3
aad
cmp
leave
pop
jbe
loop
dec
int
inc
imul
cltd
lock
mov
xchg
shr
arpl
jmp
dec
test
sti
sbb
pusha
push
cltd
inc
xchg
mov
add
or
and
cmp
mov
inc
mov
sub
adc
dec
out
and
movsl
cmpsl
mov
adcl
imul
and
and
dec
xlat
arpl
jecxz
mov
imul
xchg
mov
shl
or
mov
adc
add
adc
adc
or
rolb
lret
add
cmpl
inc
push
sub
sub
push
push
add
mov
hlt
lock
nop
inc
xor
cli
dec
ret
nop
pop
or
and
mov
sbb
mov
lcall
add
clc
add
mov
inc
stos
add
jmp
mov
dec
sub
je
cltd
xchg
sub
and
mov
add
jns
pop
add
xor
inc
lock
push
add
lock
mov
push
and
xor
aam
dec
int3
cmp
rclb
enter
pop
fcompl
loopne
mov
sarb
in
fdivrs
pop
sbb
jb
outsb
or
cld
xchg
mov
or
or
add
mov
cltd
add
sbb
and
sub
stc
sub
adc
or
xor
pop
cmp
push
mov
popl
icebp
push
xor
jne
dec
inc
aam
push
shrb
jge
xchg
pop
lea
popf
push
fwait
pop
and
xor
pop
or
xor
xchg
cli
pop
cmp
pop
xor
jnp
jge
sbb
sub
cmp
xchg
push
hlt
rol
pop
mov
daa
push
mov
jl
dec
ss
ret
mov
ljmp
xchg
fwait
rclb
push
sub
js
inc
in
cmp
rcrl
imul
push
cmp
and
jmp
imul
insl
inc
jns
sbb
mov
lock
and
repz
rol
add
push
jno
int3
xchg
xor
ja
adc
add
mov
in
shlb
xor
js
das
fs
mov
jmp
or
adcb
mov
sbbb
sbb
lea
dec
add
gs
or
sbb
out
je
or
or
mov
out
subl
dec
mov
xchg
push
add
and
mov
daa
out
test
push
shlb
outsl
js
data16
or
add
outsl
xor
sub
not
int3
push
xchg
mov
imul
sbb
loop
bt
jo
xchg
add
xchg
pop
adc
data16
mov
call
mov
adc
inc
dec
push
and
push
xchg
cmp
xor
shrl
pop
std
add
jo
rol
jl
jmp
sbb
rcl
out
push
add
icebp
insb
leave
xchg
mov
popa
sbb
test
loopne
mov
insb
std
adc
cmpsb
push
xchg
push
or
cmp
mov
negb
mov
inc
aaa
adc
test
add
cmp
cmp
out
scas
inc
inc
cld
imul
test
pop
jo
push
stos
int3
dec
sti
lahf
repnz
cwtl
sub
mov
cmp
aam
pop
pop
leave
faddl
push
jns
std
fsubs
stos
pop
inc
xor
inc
sbb
xchg
adc
cmc
rcll
insl
sub
inc
movsl
shlb
mov
mov
enter
adc
mov
jmp
sbb
cmp
pop
adc
fistpll
imul
jecxz
mov
or
cmpb
clc
lock
mov
cwtl
flds
jb
movsl
sub
add
add
mov
sub
xchg
ret
xchg
add
and
jo
jae
pop
aam
mov
jl
gs
cmp
cmp
orb
jne
push
pop
mov
mov
jo
adc
xchg
push
xchg
sarb
mov
andb
cltd
out
inc
mov
test
repz
adcb
mov
lock
dec
sbb
nop
inc
add
and
mov
sub
sti
popa
xchg
loopne
push
push
xchg
mov
pop
std
dec
inc
jnp
xor
out
adc
repnz
push
pop
mov
push
ss
out
or
pop
mov
cs
test
jnp
insl
xchg
mov
mov
insb
insb
stos
and
mov
stos
and
push
sub
cmpb
inc
int3
scas
lret
add
xchg
mov
stos
xorl
or
xchg
data16
or
sbb
aas
jmp
clc
or
sbb
push
cli
dec
jmp
push
and
in
sti
push
jmp
mov
jo
or
and
pop
insl
pop
adc
xchg
push
jae
cld
mov
sub
adc
mov
ficoms
mov
icebp
rorb
cli
and
or
push
and
jnp
pusha
fistpl
jne
add
xchg
cwtl
push
xor
and
movsl
push
cmp
sarb
jne
imul
or
icebp
mov
push
pop
loopne
inc
xchg
or
push
xor
add
pop
mov
cmp
push
inc
inc
add
in
cmp
sub
push
dec
push
dec
sbb
sbb
and
sub
out
add
mov
inc
sbb
xor
pop
jo
daa
pop
sbb
add
pop
je
scas
xor
push
or
pop
mov
or
push
mov
sbb
push
loopne
rcrb
pop
mov
ss
popf
adc
or
sub
push
adc
sub
pusha
mov
sbb
cwtl
sbb
sub
sti
js
xchg
or
jae
xor
fcmovnu
jnp
fwait
jmp
aad
fwait
push
in
and
push
lcall
lods
insl
ficoms
jmp
push
ss
mov
push
fidivl
adc
sub
pop
jne
and
pop
cld
arpl
jbe
and
add
mov
xor
jecxz
push
or
push
fbstp
cmp
adc
pop
or
sub
dec
adc
pop
sub
lret
jg
mov
pop
push
imul
xchg
xchg
cmp
mov
nop
push
mov
pop
adc
lret
jnp
xchg
adc
and
or
pop
sub
cmpsl
sub
fisubrl
inc
mov
jns
adc
sbb
jb
jge
adc
adc
pop
pop
rolb
jp
jecxz
or
add
insb
sbb
sahf
add
adc
mov
shll
mov
mov
pop
pop
inc
test
std
pusha
pop
pop
or
push
push
mov
add
mov
jnp
pop
jne
jno
adc
ds
xchg
push
and
mov
std
pop
or
jns
add
jmp
frndint
mov
mov
cmpsb
insb
or
adc
fidivl
cmpsb
idivl
mov
inc
stc
js
jmp
outsl
jecxz
fwait
push
sbb
faddl
jb
jb
inc
loope
repz
pop
xor
pop
cmp
insb
or
fisubl
pop
xchg
cld
and
xchg
cmp
push
jo
repz
outsb
push
add
sbb
fs
add
sub
sub
xchg
mov
sbb
popl
cmp
ficomps
das
push
dec
and
aad
dec
lahf
pop
test
ss
xor
test
ret
mov
pop
popa
das
mov
adc
xor
pusha
xorl
jmp
cli
lahf
cltd
mov
sub
inc
jl
jb
mov
imul
inc
cmp
pop
push
sbb
dec
sub
push
dec
lcall
jns
pop
inc
adc
insl
fsts
es
xorb
dec
stos
inc
add
lea
cmp
outsb
mov
dec
popf
enter
inc
dec
int
fs
sbb
and
fcmovbe
dec
add
jns
flds
vpor
outsb
xchg
icebp
xlat
enter
sti
mov
xor
pop
outsb
xchg
dec
arpl
ficompl
daa
push
inc
sub
and
xor
dec
mov
xchg
dec
and
and
push
rorl
xchg
test
pop
adc
bound
dec
cli
testb
xor
pop
repnz
push
clc
mov
fmull
je
js
in
jmp
jns
pop
pop
loopne
add
push
rol
inc
dec
aad
stos
orb
dec
sbb
test
mov
cmp
mov
mov
aad
add
fcomps
push
jmp
jle
movsb
aad
aam
jl
fsubl
lds
pop
mov
xor
jne
pop
aas
das
jns
pop
dec
inc
dec
lea
test
push
nop
call
or
pushf
xchg
push
hlt
loop
jl
adc
push
insb
or
xor
test
push
and
fstl
push
or
mov
out
test
sub
insb
std
cmpb
pop
cmp
pop
mov
imul
shrb
push
xchg
cmp
ret
popf
pop
mov
popa
mov
xchg
pop
nop
rorb
sbb
mov
xchg
int
or
fwait
dec
inc
add
sbb
and
jge
sbb
pop
pop
add
dec
loopne
cmp
repnz
sbb
insb
sbb
ror
das
andb
or
sub
je
adc
adc
push
js
mov
mov
lods
sub
mov
adc
xchg
test
stc
or
pop
sbb
stos
sub
xchg
int3
xor
stos
dec
sbb
push
aaa
adc
cmp
jbe
jno
add
inc
pop
subl
sbb
inc
stos
mov
lods
xchg
push
pop
push
xchg
test
sbb
add
mov
roll
dec
adc
adc
stos
push
nop
test
push
jg
sub
addb
mov
and
ret
xchg
adc
movsl
or
pop
insb
fcmovb
push
jp
inc
aas
or
in
jp
inc
push
push
inc
adc
shrb
cld
dec
lret
push
sbb
mov
xchg
cmp
mov
add
inc
xlat
inc
adc
sbb
inc
mov
popf
or
xor
add
add
bound
jge
cmp
cmp
fsubs
mov
loopne
mov
cwtl
mov
in
pop
and
inc
adc
nop
sub
fidivs
out
inc
cmp
or
xor
xchg
cmp
je
sbb
jmp
sub
mov
push
nop
or
pop
test
sbb
je
adc
mov
sbb
out
xor
das
xchg
pop
xor
jge
movsl
lcall
jle
mov
inc
cmp
push
nop
mov
mov
dec
add
cwtl
add
movsb
add
xor
cmp
mov
andl
hlt
sti
inc
test
fdivrs
into
or
fwait
push
sbb
or
fdivrl
test
mov
mov
add
mov
movsl
adcl
nop
pushf
in
cwtl
add
clc
adc
add
pop
or
and
add
loopne
test
mov
xor
add
push
mov
je
pop
sti
add
in
out
into
in
imul
sbb
and
pop
dec
dec
lods
inc
adc
faddp
gs
orb
mov
push
ja
mov
add
repz
mov
or
loopne
mov
cmove
sub
dec
sbb
clc
in
ja
pop
std
into
mov
or
je
jne
mov
nop
jnp
and
dec
call
adc
mov
inc
insl
and
push
loopne
fcomps
loopne
and
sbb
test
orb
pop
pop
pushf
pop
cmp
sarl
orb
ret
aaa
cmp
inc
and
sbb
scas
call
lock
mov
fmul
push
fxch
xchg
cmp
pop
in
repz
dec
aas
fiadds
call
inc
unpckhps
icebp
sbb
sbb
cmpsl
jo
mov
add
sbb
mov
rorb
adc
jo
loopne
popa
stos
es
call
or
adcb
inc
or
mov
adc
pop
inc
test
sub
aaa
cmp
and
and
mov
sub
add
add
scas
inc
cmc
push
or
cltd
lods
or
xlat
add
adc
lret
dec
jne
fldl
mov
fnstsw
les
leave
outsb
xchg
rorl
mov
les
pusha
xor
mov
pop
mov
push
mov
enter
popa
sbb
or
xor
push
inc
or
ret
or
push
jmp
and
orl
into
movb
inc
jmp
mov
lock
icebp
push
mov
inc
lea
dec
cmp
jae
and
lods
pop
sub
or
adc
call
dec
pop
and
adcb
mov
je
sbb
cltd
or
push
testl
inc
add
dec
adc
mov
push
add
adc
mov
push
push
push
pop
call
xchg
mov
or
rcrb
push
imul
call
push
loope
inc
in
fimull
lock
xchg
clc
or
xor
xchg
xchg
and
pop
in
call
sbb
mov
sub
lods
aam
nop
nop
in
sbb
hlt
lock
sbb
dec
or
add
adc
sub
mov
jl
movsl
xchg
xchg
mov
push
push
sub
pop
orb
cmp
sti
aas
cmp
int3
add
pusha
cmc
rorb
jl
rorb
imul
cmp
or
or
data16
sub
sub
pop
aaa
xchg
scas
mov
push
jno
push
sbbl
bound
mov
add
jg
pop
push
pop
pop
pop
ds
cmp
dec
jbe
add
cltd
mov
mov
cwtl
cli
mov
pop
xor
adc
adc
data16
mov
ficomps
lea
mov
pop
add
push
sti
in
repnz
outsb
cmc
lret
inc
sub
mov
add
in
xchg
lock
iret
pop
ret
in
push
sbb
add
mov
cmp
sbb
xor
sar
ljmp
push
cmpb
cmp
mov
push
lcall
dec
mov
add
and
repz
call
mov
xor
dec
in
adc
mov
ret
int3
movsb
jb
lds
lods
dec
lods
inc
xorl
and
bound
orb
ret
mov
or
push
sub
jno
push
sbb
or
mov
pop
mov
jne
jnp
add
inc
mov
mov
or
or
cwtl
mov
and
inc
enter
jae
pop
add
sub
adc
xchg
adc
test
fimull
popf
adc
movb
mov
lods
popa
adc
inc
push
push
scas
mov
inc
mov
les
adc
fisttpl
mov
push
add
andl
or
add
xor
or
jge
jle,pt
call
icebp
in
call
mov
push
push
inc
or
bound
adc
cmp
xor
sbb
push
mov
in
aaa
lea
push
push
pop
mov
xor
and
imul
pop
push
ret
pop
and
repz
sbb
filds
out
jbe
and
jge
jo
mov
std
outsl
ret
jns
stc
into
push
inc
jne
add
adc
mov
adc
inc
jnp
jns
cld
and
mov
mov
pop
popa
sub
mov
or
out
mov
fwait
xor
adc
imul
aaa
mov
jbe
xor
or
sbb
and
jbe
mov
mov
addl
xchg
pop
mov
cmp
std
xor
jo
ficoml
mov
ljmp
cmp
mov
ret
dec
mov
and
mov
xor
xchg
sub
adc
or
lcall
scas
push
jle
hlt
pushf
push
hlt
xchg
lock
lock
pop
ret
hlt
push
inc
and
adc
cmpl
std
inc
loopne
cmp
pop
jmp
jle
push
sub
icebp
fnsave
mov
popa
in
inc
sahf
dec
sbb
inc
int3
or
icebp
sub
jp
ror
enter
sub
xchg
enter
inc
sarb
fidivrl
mov
add
push
add
push
in
cltd
push
and
out
sub
je
jge
dec
lock
inc
add
adc
pop
xlat
lret
outsb
insb
jp
fisubl
xchg
jmp
and
jns
test
xor
test
movzwl
enter
and
mov
popa
and
add
mov
mov
scas
adc
mov
sbb
inc
lock
jnp
cmp
add
cmp
sub
xor
pop
mov
movsl
outsb
cmp
cmp
mov
das
andl
xor
fidivrs
fmuls
andl
adc
sbb
push
lds
repz
jbe
in
lock
sbb
fs
mov
pushf
sbb
pop
movsb
andl
lds
xchg
fneni(8087
push
jg
sub
xorl
dec
shrl
push
mov
jmp
fstpl
dec
mov
pop
clc
cmp
jb
clc
jmp
add
loope
dec
mov
cmp
push
and
jg
cmp
je
inc
inc
inc
sahf
clc
xor
dec
out
mov
inc
xchg
popa
inc
jnp
xchg
mov
push
add
sbb
sbb
push
scas
mov
push
leave
dec
xor
dec
mov
sbb
ret
js
cwtl
aam
sbb
xchg
push
cmpb
mov
xlat
aam
dec
xchg
cmpsb
xchg
shlb
cmpsl
pusha
push
xor
and
and
inc
fnsave
inc
divl
ss
add
push
in
push
fldl
dec
dec
inc
inc
add
in
xorl
fistps
decb
adc
cmpb
pavgw
mov
jae
push
xor
adc
decl
out
imul
sbb
test
adc
xchg
sbb
sbb
pop
stos
sbbl
cmp
xchg
xor
inc
adc
movsl
and
pop
vcvtdq2ps
add
mov
mov
sub
add
adc
jns
popf
or
jge
adc
fmulp
nop
or
es
sbb
push
adc
fisttpll
cmp
or
adc
xchg
clc
push
cld
jbe
mov
lret
ja
mov
les
cld
add
cld
pop
push
mov
push
mov
mov
pop
enter
push
push
xlat
jne
mov
pushf
push
aas
xorl
mov
inc
jnp
push
mov
inc
dec
jmp
mov
jg
mov
cmpsl
test
pop
push
jmp
push
cltd
cmp
mov
add
inc
xor
mov
push
mov
dec
add
adc
mov
mov
mov
nop
lcall
mov
lds
push
sbb
mov
lock
gs
movsb
fmuls
push
in
pop
enter
inc
ret
xchg
lock
testl
stc
jmp
sub
pop
out
clc
add
push
mov
je
cld
add
add
pop
or
adcb
add
xor
je
rcl
jb
add
ja
das
addb
nop
sbb
add
or
sbb
data16
leave
scas
mov
outsb
xor
lret
loope
xor
pop
inc
call
push
sbbb
jbe
add
adc
test
out
and
fs
rol
out
or
dec
les
push
or
xor
jle
adc
gs
add
test
imul
test
aam
fbstp
sahf
lea
inc
mov
pop
int3
jo
ds
pop
and
pop
movsl
dec
dec
ret
push
imul
push
or
loopne
sbb
and
mov
mov
mov
xchg
jl
adc
pop
push
adc
lods
mov
and
lock
or
dec
add
lea
arpl
fs
jo
arpl
pop
das
cltd
inc
push
add
fs
jmp
incl
mov
sub
mov
xor
inc
enter
inc
negb
push
pop
adc
shlb
jl
sub
cmp
add
and
dec
movsl
cmpsl
and
inc
cmp
sbb
push
jge
inc
mov
add
pop
push
and
and
and
dec
imul
and
sub
cmpl
jae
and
inc
imul
xchg
mov
mov
cmp
jge
xchg
ret
push
pop
jmp
cmpsb
mov
popa
jo
add
insb
outsl
pop
cld
and
mov
push
dec
cmp
loopne
inc
pop
adc
roll
jecxz
or
jne
pcmpeqw
or
mov
sbb
push
inc
loopne
push
sub
add
test
jmp
push
mov
jne
lahf
sub
mov
daa
fildl
sbb
or
pop
rclb
movsb
mov
push
leave
gs
adc
aas
addb
sbb
cwtl
push
imul
lcall
add
out
xchg
cmova
mov
ds
mov
aas
xor
shll
mov
sbb
movsl
and
adc
adcb
push
or
loopne
out
cmp
fsubrl
loope
das
mov
mov
das
sbb
xchg
dec
cmc
mov
sub
sahf
adc
add
push
je
sbb
sbb
ds
cld
je
lea
insl
ja
jmp
in
je
leave
mov
das
shrl
popf
mov
je
sub
shll
fmull
jae
in
test
jne
adc
outsl
mov
pop
jle
shlb
cmp
pop
add
adc
cmp
nop
aas
add
mov
lock
jmp
cmp
orl
xor
bound
test
mov
mov
pop
pop
mov
lea
inc
mov
lods
movl
mov
repz
rol
add
sub
repnz
or
add
or
jecxz
in
ret
xchg
lret
and
sub
and
jmp
add
mov
dec
mov
add
or
mov
cmp
lahf
add
jb
sub
ret
xor
loop
mov
jmp
jnp
push
sbb
je
push
jp
or
das
push
ret
xor
sbb
xchg
inc
jle
inc
stos
or
fistps
jecxz
jns
inc
imul
xlat
and
sub
pop
cmp
clc
inc
sahf
addr16
xchg
add
leave
cmpb
jne
pusha
pop
rcl
sbb
mov
fistpl
xor
test
je
pop
add
int3
mov
cmp
mov
xchg
test
aaa
push
movsl
sub
popf
lea
dec
pushf
fcoms
mov
xor
push
sub
mov
mov
dec
xor
loope
jno
ja
movsb
inc
movsl
movsl
jno
insb
lahf
pusha
jl
js
fistl
add
inc
or
or
ja
ret
push
xchg
movsb
mov
mov
mov
dec
lret
push
mov
push
subl
sbb
ret
and
pop
lods
xchg
jo
scas
push
mov
clc
adc
ss
or
sub
xlat
hlt
addr16
cwtl
mov
jle
mov
incl
push
add
xor
enter
idivl
rolb
and
sbb
jne
xor
cmp
je
cmp
push
mov
sarb
rcll
repz
xchg
or
lea
jecxz
cs
add
cmp
sub
cmp
ja
mov
lock
and
rcrl
mov
test
sub
add
out
mov
xor
pop
jg
or
jmp
insl
and
icebp
sub
lea
test
pop
aas
or
je,pn
and
xchg
jne
sahf
dec
lods
sbb
push
adc
inc
jns
test
pushf
les
fdivr
or
je
push
lcall
add
push
and
xor
repnz
cltd
inc
sbb
or
call
outsb
ja
jmp
and
add
inc
fwait
or
push
adc
fcoms
and
inc
mov
or
pop
repnz
push
gs
jno
cs
stc
inc
xor
dec
adc
jo
add
dec
inc
jmp
insb
or
daa
pop
jbe
sbb
jp
inc
or
pop
sub
push
cmp
dec
cmp
add
or
adc
sbb
push
shrl
jp
pusha
dec
sbbb
push
push
imul
xchg
jbe
pop
cmp
pmulhuw
or
add
jno
push
add
inc
mov
inc
in
ret
js
cmpsl
pop
dec
sbb
in
repz
test
iret
push
cmp
ljmp
or
or
and
addb
faddl
jl
dec
sbb
pusha
icebp
faddl
popa
inc
sbb
testb
lock
lods
sub
mov
aas
adc
orl
ret
or
leave
pop
mov
add
push
add
mov
lods
jne
push
aam
repz
insl
fsubrs
mov
andl
pusha
mov
fadds
xor
push
int
sbb
sbb
aaa
jae
test
mov
xor
sbb
leave
stos
add
rorl
adc
dec
loopne
adcb
aaa
and
inc
std
and
adc
imul
push
stc
rol
add
das
mov
ret
add
mov
or
mov
sbb
push
fs
repnz
xchg
or
inc
loop
rcll
sbb
leave
cmpsl
dec
ret
fs
mov
or
popf
lahf
push
xor
pop
and
cmpsl
mov
mov
push
or
mov
adc
add
mov
or
iret
dec
in
push
add
add
aad
jns
gs
cmp
xor
push
add
xor
pop
push
pop
add
and
push
push
pop
sub
push
push
loopne
mov
sysenter
sbb
sbb
sbb
and
cmpsl
cwtl
ret
add
jae
int3
add
popa
jbe
cmp
pop
add
pop
test
sbb
mov
daa
cmp
nop
dec
cmp
and
and
add
pop
je
dec
subl
xor
xchg
adc
sbb
push
adc
sbb
sub
jbe
and
pop
xor
add
add
mov
or
adc
daa
sub
test
and
test
fisttpl
jge
fcmovb
pmulhw
dec
or
sbb
lock
xchg
dec
pop
loopne
and
sub
inc
cmp
or
and
sbb
fimull
mov
push
push
outsl
sbb
adc
inc
mov
dec
cmp
jle
stos
sbb
sub
inc
push
add
js
push
insl
hlt
out
stos
jmp
sub
sub
xchg
pop
outsb
rcrl
mov
jmp
cmp
mov
stos
sub
or
mov
icebp
popa
sbb
pop
fs
add
mov
mov
mov
sti
cmp
jle
mov
add
cmp
jge
xchg
lea
fwait
adc
sub
or
push
cmp
idiv
dec
shll
dec
test
jg
into
add
pushf
aad
jp
loopne
test
sbb
cmpsb
xlat
ffree
mov
sti
and
insl
arpl
jne
aas
dec
mov
aas
jbe
in
lock
inc
sbb
and
sub
ja
mov
dec
pop
jle
or
lds
mov
cmp
push
mov
jb
jmp
popl
fstpl
or
sbb
dec
mov
pop
jge
xchg
std
ffreep
sti
and
je
mov
sub
xor
dec
je
add
add
push
je
or
fisttpl
push
adc
jg
iret
int
push
lock
les
jo
sti
fiadds
xchg
adcl
push
dec
xchg
push
cmp
or
push
jg
lahf
lahf
js
push
cmp
lea
fisubs
adc
insl
mov
adc
and
outsb
or
and
fdiv
lods
xchg
cli
ficoms
pop
aas
mov
in
pop
lahf
lahf
fwait
aas
push
lods
enter
push
sub
push
sbb
or
and
sub
dec
shll
xor
out
pop
shll
push
add
add
or
repnz
or
pop
or
nop
add
mov
pushf
inc
mov
andl
mov
dec
xor
fcomps
ret
push
or
xor
stc
xchg
addb
js
adc
pusha
cmp
ljmp
loop
jle
dec
ret
dec
je
add
mov
sub
adc
popf
repz
loop
dec
lock
sub
repz
sbb
adc
or
test
lret
add
orl
sbb
jbe
call
cltd
nop
pop
call
jae
mov
and
inc
mov
add
pushf
andl
mov
xchg
scas
sarb
bound
jne
sbb
neg
mov
insb
add
pop
ret
sysenter
or
xorl
jno
mov
xor
push
pop
fsubrs
aas
pop
mul
seto
neg
or
push
das
xchg
enter
sbb
ret
push
dec
jg
mov
add
iret
xchg
rorb
cmp
xor
lret
divl
int3
cmp
cmp
sub
jecxz
sbb
cwtl
ljmp
sub
cmp
jnp
or
xchg
imul
cmp
fidivs
jns
mov
jae
out
mov
sub
cs
inc
ret
sbb
push
jo
mov
push
pop
movb
adc
mov
dec
and
sarb
sbb
xor
xchg
andb
gs
leave
push
jns
mov
mov
push
movsb
mov
or
andl
in
jo
les
push
sbb
filds
jae
faddl
push
in
pop
cmpb
loope
mov
je
outsb
je
jns
stc
or
mov
and
mov
test
xor
mov
mov
addb
mov
lcall
inc
mov
les
xchg
movsb
les
ds
mov
xchg
push
fidivs
pop
mov
or
rcl
or
inc
add
mov
xchg
icebp
scas
mov
adc
pop
or
mov
and
and
mov
adc
inc
xacquire
repnz
iret
and
sbb
xor
addr16
call
jae
cmp
sub
xor
cmp
leave
mov
mov
cmp
nop
inc
fs
and
push
jmp
push
xor
fld1
lea
cwtl
cmp
and
push
ror
test
jo
cmp
inc
mov
and
pop
or
xchg
pop
jnp
pop
je
test
in
xor
or
je
xor
imul
jne
scas
push
fs
inc
xor
or
call
je
sub
je
cmc
or
dec
fbld
in
int3
adc
ja
adc
lahf
pop
jo
lds
xor
lods
out
cmp
adc
lahf
xchg
mov
push
and
divl
sub
pop
aas
call
jo
sub
and
mov
out
and
pop
mov
mov
pop
sub
sahf
or
repz
lret
loopne
xor
fcmovne
movsb
out
mov
inc
scas
or
xor
sbb
cmpsl
jae
push
fdivl
test
fld
jmp
lea
pop
push
or
sub
xchg
adc
insl
jo
test
inc
imul
testb
shlb
insb
mov
cwtl
ljmp
jge
mov
pop
xor
cmp
mov
mov
xor
popa
mov
mov
jecxz
push
add
inc
mov
stos
gs
xor
cmpsl
pop
mov
imul
jne
push
or
cld
sub
sub
pop
ret
pusha
push
pop
mov
or
jmp
out
sub
jle
dec
lcall
jl
add
jb
cmpsb
jno
cmp
nop
insb
pop
sub
fs
push
in
cwtl
mov
sub
push
shrb
adc
or
icebp
push
mov
popf
jb
orb
lods
mov
xchg
pop
cmpb
dec
lahf
lods
adc
rclb
imul
dec
cmp
push
fiaddl
add
jmp
fnstsw
jge
jb
sub
imul
sub
mov
fmull
inc
xor
iret
sub
shl
bound
cmp
jecxz
scas
pause
cmpl
repz
pop
aaa
jne
pop
pop
xchg
add
pushf
sarl
fbld
jecxz
jl
mov
je
cmpsb
lods
cmp
sbb
push
push
mov
pop
mull
push
inc
call
inc
aaa
jo
fsubs
inc
sub
push
shlb
fistps
dec
rorb
insb
adc
arpl
inc
filds
xchg
add
mov
jo
adc
mov
mov
xchg
inc
pushf
aaa
xor
ret
sub
push
jne
xor
mov
xchg
addb
jmp
xor
pop
cmp
push
and
int
fiadds
jle
jp
pushf
cmp
pushf
lock
fcomi
nop
cmp
jbe
dec
and
fdivrs
push
sub
xchg
aaa
mov
xor
add
nop
mov
inc
jb
jmp
push
push
lds
je
outsl
data16
jecxz
mov
jns
cmp
push
nop
pop
sub
aam
fbld
cmp
movsb
xchg
or
lcall
adc
sbb
push
jns
bound
sub
cmp
sbb
lock
rorl
adc
dec
clc
add
sar
xchg
pop
outsb
push
fists
push
and
xchg
and
cltd
leave
cmp
fsubr
xchg
hlt
sbb
addb
add
dec
lock
push
push
pusha
imul
nop
enter
sahf
cld
pop
hlt
ret
enter
and
adc
jno
push
push
push
or
mov
mov
rcrb
push
adc
xchg
test
dec
hlt
xor
daa
and
lds
loope
scas
jne
sbb
jp
lcall
dec
dec
mov
aam
fdivrs
fsub
ja
and
inc
or
xor
inc
lods
or
pusha
jb
jmp
sub
test
pop
and
test
adc
push
xchg
push
inc
popa
xchg
add
popa
adc
xor
mov
fcoml
xlat
cmp
sbb
out
nop
jno
push
push
pop
xchg
nop
bound
adc
nop
je
cmp
sub
sub
or
and
shrl
sub
and
inc
faddl
popf
and
lods
fbstp
jbe
sub
std
adc
fcompl
shlb
inc
add
xor
or
fs
leave
cmpsl
fwait
cmp
data16
in
add
into
enter
mov
inc
xchg
add
mov
push
or
jne
test
ret
scas
cmp
and
add
sub
gs
push
int
ret
int3
nop
mov
sub
push
sub
or
add
or
data16
movsl
xor
and
xchg
cmp
or
andl
xor
xor
mov
loope
cltd
cmpsb
fldcw
xor
or
sbb
push
inc
lret
stc
cmp
test
testb
scas
scas
add
test
test
push
mov
xchg
push
sbb
out
push
push
stos
xor
jnp
loopne
adc
jmp
push
mov
mov
push
sbb
inc
dec
aam
dec
insb
adc
and
adcb
lds
adc
push
test
add
cmpsb
mov
fs
aad
mov
test
sub
or
lcall
mov
sub
adc
jno
clc
lcall
out
jbe
mov
push
repz
cltd
and
shl
daa
xchg
repnz
out
cs
xor
shr
shrl
and
xor
mov
inc
xchg
cmp
lret
and
lods
in
scas
push
jmp
push
push
add
add
cld
or
lret
into
xlat
add
hlt
lahf
rcrl
clc
aad
outsl
adc
or
inc
loop
sub
or
xlat
sub
cwtl
push
stc
fdivrs
push
inc
pushf
call
movsb
push
pop
mov
mov
xlat
push
sbb
xor
jno
sahf
sub
inc
mov
jne
xchg
xlat
bound
dec
cmp
popa
ljmp
lret
rol
xchg
add
inc
ja
iret
add
enter
adc
push
movsl
push
dec
and
adc
push
movb
mov
aam
aaa
outsl
adc
adc
mov
mulb
or
enter
pop
or
ljmp
filds
inc
hlt
jmp
push
push
arpl
or
in
ds
test
imul
nop
xchg
test
outsb
dec
les
push
dec
push
dec
mov
or
push
or
addr16
cmp
add
push
bound
das
pusha
outsb
dec
fstpl
pushf
adc
iret
cmp
ret
xchg
mov
dec
mov
fbstp
das
mov
lods
jb
outsb
mov
loopne
push
fcoml
icebp
jne
push
lds
add
das
adc
scas
add
test
adc
das
clc
cmp
in
and
inc
jmp
inc
clc
test
mov
cmp
test
pushf
pushaw
xor
dec
pop
subl
test
inc
push
adc
hlt
jns,pn
xchg
sub
xor
sbbb
pop
push
push
adc
out
lods
cmp
js
inc
push
out
sbb
push
mov
cld
xor
xchg
push
xchg
mov
je
push
lds
lea
mov
push
mov
sbb
cwtl
and
enter
inc
or
pusha
push
add
call
imul
stos
scas
hlt
ljmp
ds
repnz
paddd
and
jne
adc
out
mov
sub
dec
dec
js
sbb
bound
and
imul
cmp
jbe
sbb
push
mov
adc
mov
outsl
or
sub
add
stc
mov
add
inc
inc
push
push
sub
push
mov
outsl
pop
enter
mov
rcrb
mov
xchg
or
nop
shlb
mov
test
mov
popf
sarb
xor
mov
xor
nop
inc
mov
daa
pop
rcrl
sub
dec
and
xor
and
nop
cmp
imul
mov
je
push
addr16
cmc
lcall
push
jb
push
push
or
xor
jb
sub
push
mov
test
pop
hlt
sahf
push
rolb
cmp
adc
mov
lea
xchg
mov
daa
lods
nop
rorb
sub
aam
in
addb
and
inc
inc
pop
loopne
and
out
mov
shrl
xchg
pop
push
movsl
mov
orps
push
xchg
and
sbb
mov
test
mov
push
lods
rcl
roll
orb
cltd
fcomp
test
push
je
xlat
fstp
adc
mov
scas
sub
out
divl
xchg
sub
cmp
xor
pop
cmp
roll
mov
icebp
and
subl
pop
rcrb
mov
lock
aad
push
add
out
add
xor
sub
bound
mov
xchg
addl
and
sub
popa
cli
js
jbe
add
cmpsl
repnz
insb
fmuls
push
dec
or
push
xchg
xchg
jp
sbb
loopne
add
shl
push
das
pop
aam
add
int
push
dec
in
out
sub
and
call
daa
inc
mov
and
std
mov
test
mov
sub
add
shrl
xchg
std
cmp
jae
in
pop
xchg
pop
adc
fwait
ss
fcoms
pop
mov
jno
inc
loopne
leave
popf
sub
sbbb
clc
mov
imull
out
fmuls
fnstsw
test
jp
fld1
and
mov
mov
test
std
pop
sub
mov
pop
or
add
pop
dec
dec
mov
mov
out
jmp
imul
je
add
out
andl
cmp
repnz
inc
add
inc
mov
clc
xor
call
in
xchg
and
cwtl
mov
jb
mov
pop
enter
pushf
dec
mov
cmp
in
adc
add
lock
fsubs
inc
mov
enter
lods
in
test
cwtl
cwtl
je
mov
xor
xlat
lahf
cmp
and
inc
clts
lea
roll
mov
fdivrs
or
orb
mov
lock
push
in
push
rcrb
cmpl
iret
enter
sub
sti
and
inc
ret
inc
pop
mov
or
dec
test
adc
es
xchg
cs
mull
sbb
cmp
mov
movsl
add
outsb
sub
in
cld
int
pusha
frstor
aaa
lock
and
bound
pop
hlt
add
mov
pop
inc
or
js
cmp
sub
sub
push
jo
imulb
idivb
sub
xor
movsb
cmp
and
rolb
pusha
sbb
movsl
loopne
xor
xchg
add
sar
or
cmp
jne
adc
divb
inc
or
jne
scas
sahf
je
or
and
adc
add
rol
and
ja
stos
call
rorb
pop
out
je
inc
pusha
ror
mov
movups
imul
xor
insb
movsb
mov
outsl
sub
push
sbb
push
cli
popa
icebp
mov
mov
ja
jb
add
enter
lahf
fs
or
test
adc
or
and
shr
scas
push
adc
pop
and
jae
cmp
cmp
xor
sarb
int
and
push
sbb
loope
or
jae
sbb
dec
es
incb
ret
pop
adc
pop
pop
insl
lock
jle
mov
sti
imul
and
inc
mov
cld
jo
cmp
push
push
outsb
in
orb
and
and
in
sub
fbstp
mov
aaa
insb
or
das
sbb
sub
push
dec
mov
roll
jns
arpl
add
adc
bnd
sbb
je
mov
xchg
or
add
popf
push
adc
push
push
xchg
inc
mov
inc
sbb
push
xor
loope
and
subl
push
and
mov
incb
sub
adcl
add
and
inc
pop
mov
js
pop
shrl
inc
xor
pop
push
call
sub
mov
add
enter
maxps
hlt
cmpsb
nop
mov
sub
test
sti
cltd
cld
push
ret
sbb
test
push
push
push
icebp
ret
xor
les
xchg
ss
mov
sbb
xchg
lods
mov
fistpl
lds
test
pop
adc
icebp
mov
mov
jecxz
or
fistpl
adc
rorl
lcall
arpl
test
mov
or
xor
or
sar
sbb
mov
or
push
scas
and
test
cwtl
xor
int
pop
mov
mov
inc
arpl
and
in
push
mov
add
jmp
pop
inc
mov
mov
adc
add
mov
xor
push
sub
sbb
and
xor
xlat
clc
push
outsb
idivb
cmp
movsb
xor
rcrb
mov
xorb
fadd
sbb
addr16
stos
xchg
mov
loope
push
inc
loop
jp
add
pop
mov
pusha
push
faddl
and
repz
arpl
arpl
sub
into
add
xor
mov
pop
add
fisubl
add
cmpsb
jecxz
es
cmp
xor
es
add
mov
mov
int3
xchg
sbb
push
or
repz
sbb
add
sbb
mov
cwtl
xchg
mov
mov
mov
test
xor
mov
lods
inc
jge
lds
pop
shll
ss
in
mov
xor
aas
inc
xor
mov
cwtl
arpl
fmul
inc
sbb
cltd
push
adc
push
add
dec
cmp
cmp
mov
sti
adc
sub
cmpsb
sarl
jns
jo
push
sbb
les
mov
sub
xchg
dec
add
or
lods
stos
test
or
push
out
add
and
cld
idiv
pop
mov
movsb
and
mov
mov
add
xor
xor
pop
out
outsb
inc
add
sti
add
cld
jb
test
lea
mov
out
jecxz
adc
add
int
inc
jmp
cltd
in
lret
ret
adc
std
cld
xchg
xor
inc
mov
and
jle
and
shll
push
add
add
mov
js
jp
ret
jmp
jno
je
aam
cmp
imul
jo
ds
inc
jno
add
and
dec
std
inc
inc
sbb
or
aam
cli
jge
jle
add
cld
xor
hlt
inc
sbb
dec
in
or
cli
adc
push
imul
sti
adc
sub
inc
je
cwtl
inc
in
std
push
jl
popa
ret
add
lds
push
fadds
jle
loop
xor
aad
inc
fmulp
mov
testb
pop
jne
jl
xlat
jne
push
das
add
pop
push
adc
xchg
fdivl
add
jl
jp
scas
in
push
pop
aaa
add
or
ficompl
loopne
js
xor
add
pusha
push
fwait
outsl
mov
sbb
add
scas
or
mov
push
andb
enter
adc
mov
jne
test
and
daa
push
or
pushl
jbe
or
pop
insl
fimuls
push
push
push
mov
add
dec
mov
scas
rcrb
loope
negl
fbstp
dec
rorb
test
add
inc
hlt
xchg
cmp
inc
ja
adcb
cmp
cmp
push
sbb
pop
out
xchg
cmp
fdivl
jmp
sub
add
add
sub
sub
inc
loope
clc
mov
cmp
jb
ja
and
loop
pop
mov
cmp
fnstenv
mov
xor
or
inc
adc
fdivrp
ret
sub
jmp
mov
cmp
rolb
in
xchg
pop
cwtl
push
and
js
mov
inc
int3
in
idivl
fsubrs
gs
push
push
stos
pop
xor
out
cld
dec
fstpl
inc
mov
gs
decl
in
fisttpl
test
ljmp
mov
pusha
sbb
leave
test
sub
push
cltd
cs
les
xor
adc
adc
push
push
mov
sbb
push
dec
cld
mov
fsubrs
add
or
mov
sub
push
je
push
adc
and
jmp
mov
pusha
in
dec
pop
push
bound
or
xor
or
pop
adc
jecxz
das
mov
dec
aaa
sub
xor
dec
adc
cmc
mov
imul
insl
pop
aas
test
push
jno
xchg
pop
dec
pop
es
xchg
adc
pop
fldt
es
es
mov
xor
je
mov
xor
and
xchg
ljmp
loopne
xchg
sti
mov
loopne
pop
mov
dec
sub
xor
movsl
xchg
aad
push
push
adc
add
movsl
jmp
push
push
loopne
mov
dec
cmp
inc
mov
stos
fidivl
test
lahf
pushf
push
pop
fcoml
dec
repz
pop
push
ss
inc
into
inc
add
and
mov
push
add
in
fcoms
in
pop
cltd
sbb
lods
popa
adc
test
xor
loope
push
xchg
jmp
je
push
jmp
cmp
push
mov
in
pop
fildll
popa
test
je
scas
pop
fwait
ret
movsb
or
mov
pop
mov
jne
cltd
icebp
push
jmp
jbe
sbb
dec
je
sub
add
jno
add
push
mov
fnstcw
add
jno
pop
fdivs
pop
xchg
lea
and
mov
jno
test
shrb
xlat
nop
mov
or
dec
sbb
mov
inc
cmpsl
clc
xorb
insb
mov
dec
roll
ja
mov
mov
jnp
sti
sub
jne
mov
frstor
push
outsb
fistps
sbb
push
adc
fimull
xchg
lret
orb
sub
lds
pop
jne
test
push
cmpsb
jbe
cmp
shrb
bound
xchg
jns
lds
pop
push
repnz
sahf
inc
test
pop
or
mov
hlt
push
mov
mov
lcall
and
cmp
mov
and
sub
lret
sub
cmp
movb
into
push
or
and
mov
enter
cld
inc
push
dec
inc
and
lods
or
push
jmp
cmp
js
pop
adc
xchg
or
movsl
pop
push
daa
dec
xlat
xchg
leave
cs
pop
out
pop
xor
adc
into
rorb
and
sbb
mov
or
insb
jmp
movsl
pushf
or
mov
mov
sub
pop
test
cmp
int
push
mov
jmp
cld
stc
cmp
jb
neg
and
je
sub
mov
add
sub
testb
xchg
or
lret
or
jmp
stos
mov
dec
ljmp
xchg
ret
cmp
ret
mov
test
sbb
cmp
imul
mov
and
xlat
or
ficompl
lcall
dec
in
pop
or
push
sbb
sbb
inc
lret
cltd
imul
loopne
addr16
xor
push
js
cmp
cli
mov
mov
jmp
push
rorb
lods
mov
insl
mov
dec
mov
cmp
aas
hlt
adc
shlb
pop
lret
add
adc
addr16
in
js
sbb
push
cmp
pusha
repz
stc
adc
cmp
leave
inc
push
push
adc
and
in
inc
xchg
xchg
jns
cmp
or
or
fldt
lret
lahf
sub
or
add
nop
pop
add
push
or
cwtl
jmp
pop
in
pop
mov
mov
and
mov
lods
jg
clc
shl
shr
fmull
sbb
loopne
mov
in
push
aam
or
lea
sbb
add
out
sti
imul
pop
out
add
cmc
in
test
imul
xor
roll
xchg
inc
shl
rcll
cmp
or
add
add
inc
cwtl
xchg
lahf
es
andb
and
icebp
js
mov
leave
stos
or
int
push
and
add
xchg
dec
das
aaa
loope
clc
or
sub
jmp
mov
pop
add
mov
mov
push
test
xchg
scas
fimuls
popa
and
adc
inc
dec
pop
ljmp
outsl
in
inc
lahf
shl
rclb
mov
cwtl
push
popf
mov
sub
sahf
imull
pop
out
lahf
mov
mov
std
mov
roll
add
add
push
test
cmpsb
xor
ja
and
inc
lcall
and
loopne
or
jbe
and
or
dec
pop
and
dec
jo
dec
mov
cmp
or
loop
psrlw
cmp
or
je
mov
inc
dec
cmp
sbb
jmp
add
jne
jnp
jl
mov
rolb
ret
xlat
push
push
xlat
cmp
push
mov
add
mov
loopne
mov
pop
lea
pop
ret
inc
push
fdivl
fs
add
or
jmp
or
push
jns
pop
sbb
or
cmp
adc
mov
mov
mov
mov
xor
add
add
xor
iret
xor
jo
pop
push
jbe
loope
jne
and
mov
and
loope
jl
lods
mov
cmp
out
cmp
je
test
out
adc
xchg
data16
mov
outsb
or
mov
sbb
shl
sub
and
mov
stc
inc
or
repnz
cmp
push
adc
add
push
cmp
repz
pop
push
outsl
mov
or
pop
add
pop
adc
ret
ds
add
or
scas
int
and
jmp
popa
add
sub
les
mov
push
mov
fcmovnb
xadd
je
jmp
arpl
pusha
or
add
rcrb
ja
or
push
lea
dec
mov
and
mov
push
lock
ret
iret
dec
enter
pop
xchg
outsl
inc
cmp
ret
sub
inc
mov
push
mov
loopne
loopne
in
and
test
sub
jbe
add
scas
or
aad
fsubl
test
adc
jp
les
mov
mov
fwait
dec
jne
push
cs
or
xchg
sar
lcall
pop
jge
or
pusha
in
dec
fidivrs
clc
push
or
testb
jne
push
sbb
out
dec
js
xchg
stc
add
add
and
and
popf
push
je
sub
jno
stos
ret
ja
clc
dec
jge
cmp
decl
js
lods
sarb
rorb
add
push
jmp
and
sbb
icebp
and
repnz
fs
mov
inc
mov
jne
mov
std
adc
mov
mov
dec
push
push
push
mov
jg
fisttpll
int
push
or
pop
and
mov
jo
rclb
inc
and
mov
xchg
cmp
in
pusha
cmp
jge
inc
pop
mov
sub
inc
jo
jne
addl
add
in
cwtl
or
mov
add
xorl
add
daa
adc
sub
pop
mov
in
mov
add
adc
add
out
hlt
andl
lds
jno
or
or
jl
or
mov
lods
push
mov
daa
pop
jo
mov
add
pop
jp
adc
ret
cli
add
xor
xchg
enter
mov
inc
add
aaa
call
pop
inc
jmp
out
jmp
adc
sub
mov
and
jne
sub
insl
mov
pusha
ds
and
cmp
sbb
xlat
mov
add
addr16
push
xor
cmp
lahf
cmp
and
mov
adc
or
jne
pop
jne
dec
add
xor
jne
inc
les
subl
adc
lret
or
test
je
mov
xchg
jmp
out
outsl
lret
inc
fnsave
ja,pn
xor
jle
clc
push
add
cmp
jae
push
daa
mov
xchg
movsl
cmp
stos
sbb
rol
and
test
and
push
mov
add
jmp
pop
cmpsb
decl
imul
add
add
mov
filds
jne
test
add
daa
add
cld
mov
cltd
push
shll
sub
xor
dec
inc
mulb
pusha
out
cmp
jmp
and
lds
insb
les
fidivrs
pop
cmp
in
roll
fstpl
inc
xor
sub
shr
mov
add
adc
add
cld
inc
rcrb
pop
cmp
mov
push
cmp
xchg
add
adcl
mov
push
and
mov
inc
push
xchg
pop
or
fisubrs
jmp
fs
sbb
add
dec
sbb
je
mov
jecxz
xor
inc
ja
sbb
js
inc
xor
sbb
testb
daa
xchg
push
push
add
test
dec
xchg
and
add
push
xchg
pushl
ret
imul
dec
mov
std
inc
add
add
xor
add
cmp
adc
jg
insl
pop
clc
cmp
mov
sbb
jmp
int
mov
jno
or
push
adc
sbb
std
cld
sub
sbb
and
and
movsl
gs
or
cmp
mov
inc
adc
cmp
jne
mov
shlb
cmp
loopne
xorb
xchg
push
add
push
add
xchg
or
fistl
jmp
jp
adc
add
mov
push
push
ret
sub
add
cmp
mov
mov
cs
nop
jmp
inc
push
jne
test
fiaddl
std
and
jne
arpl
sbb
push
in
mov
icebp
xor
fnstenv
pop
adc
iret
push
subb
pop
jb
shlb
pusha
enter
jecxz
fwait
shl
jecxz
sub
push
or
dec
dec
inc
and
add
sarl
and
mov
out
lods
jbe
call
in
daa
daa
and
jae
xor
push
push
pop
pop
inc
dec
mov
sub
pop
shrb
mov
add
push
xor
mov
cltd
mov
rcrb
loopne
cld
adc
mov
dec
and
push
mov
inc
cwtl
ljmp
stos
xchg
pop
push
xchg
decb
and
and
loope
xor
ljmp
add
cmp
jb
lea
call
outsb
sahf
clc
adc
sahf
pop
rorb
call
push
cld
jne
mov
push
cmp
jne
insb
fwait
in
es
jne
call
cmp
or
and
jb
jmp
movzbl
out
sbb
inc
adc
jmp
add
fwait
std
std
jmp
cld
imul
pandn
inc
inc
xor
in
add
lock
dec
int
sub
int3
int3
adc
dec
or
pop
cs
xor
rcll
pop
nop
inc
cmp
push
lahf
and
push
in
ja
jns
or
std
jmp
loopne
dec
mov
mov
dec
ret
scas
icebp
push
data16
or
xor
sub
ret
push
jge
xor
or
adc
jno
imul
or
sbb
mov
jae
mov
cli
push
cmc
or
xchg
fisubs
add
push
sub
add
pop
roll
rclb
dec
xor
pushf
cmp
inc
call
ss
dec
xchg
push
test
push
push
dec
mov
popf
and
pop
call
dec
mov
lock
mov
movb
movsl
mov
or
adc
jmp
mov
test
inc
sarl
mov
and
push
sbb
sbb
mov
repz
es
dec
push
or
add
sti
sti
inc
push
mov
push
pop
inc
clc
fiadds
repnz
mov
rcrl
push
adc
outsb
xlat
mov
jbe
push
add
jp
lock
movsl
lds
test
mov
mov
add
sti
xor
add
loopne
neg
addr16
repnz
pop
js
test
mov
pop
sbb
sub
out
add
outsb
lcall
inc
xor
cmp
je
sbb
ss
push
mov
push
jnp
stos
xlat
or
imul
mov
in
loopne
mov
fstl
mov
loopne
push
pop
pop
push
cmpsl
or
push
iret
adc
dec
lock
mov
movsl
in
push
cmp
xor
testb
xlat
daa
xchg
mov
add
and
add
push
pop
sbb
push
mov
ja
xchg
or
stc
push
inc
xor
or
insl
add
iret
sub
mov
push
push
fcom
jno
push
mov
mov
lahf
dec
out
or
push
je
mov
cmp
pop
pop
push
dec
lcall
or
xlat
inc
inc
jne
jae
or
jmp
rolb
das
add
add
xlat
dec
pop
jmp
and
mov
scas
fisubs
jp
mov
ret
dec
pop
pop
pop
or
pop
in
mov
dec
adc
test
pop
pop
enter
sbb
sub
mov
sti
in
sbb
xor
sbb
cmc
pop
test
ljmp
insl
jge
add
ud2
xlat
push
sub
pop
cmp
sbb
jb
ja
jl
push
pop
and
cmovns
mov
jno
jmp
xchg
jge
add
lds
lds
and
cmp
loope
sti
nop
mov
mov
or
add
mov
scas
cld
xor
inc
push
enter
rcrl
or
push
mov
mov
sub
add
imul
mov
dec
add
movl
mov
add
imul
adc
add
sbb
call
in
inc
in
lcall
lock
outsl
lcall
cld
lea
nop
and
f2xm1
lcall
pop
insb
and
push
sbb
mov
ret
nop
inc
pop
sti
nop
sbb
and
mov
push
lea
jl
cld
or
jbe
xchg
and
std
cld
out
rcrb
divl
mov
lea
pop
in
sub
sbb
in
js
js
adc
push
fildl
jge
mov
je
sub
stos
sbb
push
add
nop
dec
dec
addr16
add
mov
cmpsb
imul
mov
xchg
pushf
dec
mov
lcall
sbb
xor
rcrl
sbb
dec
shll
or
sbb
shlb
add
pop
lds
push
clc
or
aaa
lds
add
mov
push
daa
ja
add
jge
xor
and
pop
xchg
sbb
xor
jge
je
mov
or
sahf
movsl
push
add
ljmp
push
mov
mov
mov
inc
mov
push
mov
adc
sub
adc
mov
dec
dec
and
mov
pop
rclb
pop
mov
cmp
je
movzbl
add
addb
xor
dec
mov
clc
pop
lahf
and
repz
imul
jo
pop
pop
add
add
add
daa
add
push
inc
lcall
std
or
add
jno
je
lcall
flds
add
add
dec
es
pop
push
pop
int
repnz
jb
or
or
rcrb
and
leave
add
or
adc
pushf
dec
pop
or
rolb
out
add
or
or
insl
in
mov
add
pushf
dec
cwtl
push
push
push
dec
ror
nopl
push
pop
sti
sub
adc
pop
adc
fwait
add
dec
sub
adc
dec
ret
leave
or
ds
pushf
inc
lcall
inc
fcmove
repnz
adc
adc
dec
cmp
js
and
push
enter
pop
pop
xor
imul
lcall
sbb
call
inc
sbb
iret
sub
add
movsb
imul
sbb
inc
lcall
sbb
pusha
push
push
inc
jg
imul
and
ret
and
sub
cmp
jae
add
cmp
xchg
sbb
ja
add
mov
decl
adc
cmp
je
repnz
sub
shrb
lea
aad
cmp
dec
rcrl
mov
xor
fwait
out
cmp
sbb
dec
add
jns
je
call
nop
int3
dec
cwtl
jmp
add
ljmp
jmp
jmp
in
pushf
pusha
xchg
in
cltd
mov
in
inc
in
sahf
cmp
jge
gs
sbb
pop
lock
or
nop
lock
cltd
inc
lcall
or
imul
hlt
daa
adc
fwait
mov
xor
sbb
nop
negb
cmp
enter
cmp
clc
clc
mov
or
cltd
adc
inc
stc
movsb
sbb
xor
adcb
popf
mov
cld
cld
je
cld
mulb
add
push
mov
std
sbb
adc
rclb
inc
ret
xchg
or
cmpsl
insl
sub
add
test
rorl
or
ret
jne
pop
sbb
cmp
cmpsb
and
rolb
adc
in
stos
into
add
icebp
inc
bound
mov
jb
cmp
sti
out
out
mov
sbbb
push
jb
sti
sub
enter
sbb
enter
cltd
in
add
mov
popf
cli
lret
jae
pusha
sbb
dec
fsubs
out
cltd
push
lock
and
cli
push
cli
sahf
push
add
sbb
rorl
repz
sar
adc
push
stc
sub
jnp
sub
pop
stc
div
negl
fwait
adc
leave
add
clc
add
mov
clc
and
jae
cmp
rorb
fdivr
cltd
mov
mov
sbb
pusha
decb
cmpsb
imul
dec
dec
and
adc
sub
mov
lds
mul
pop
pop
jb
cmp
imull
bound
mul
sbb
sbb
in
jb
pop
inc
mull
mul
cmp
sbb
mov
xchg
ljmp
imul
xor
in
negb
xor
out
jno
les
and
and
sub
negb
repnz
xlat
in
mov
pop
imul
in
cmc
jae
and
jae
pop
dec
cmc
div
imulb
fwait
and
addl
clc
cmp
hlt
stc
pusha
cmp
mov
imul
xchg
hlt
pop
mov
push
bnd
push
hlt
loopne
xor
das
popw
dec
repz
xlat
and
hlt
idivl
fnstsw
inc
stc
pop
sti
lahf
popa
adc
push
push
or
sbb
loope
in
stos
sbb
loope
repz
jb
imul
scas
repz
mov
mov
test
xchg
in
in
repnz
inc
repz
inc
mov
push
push
sbb
jmp
mov
mov
xchg
repnz
test
jo
sbb
dec
in
in
jp
sbb
cmc
and
add
or
icebp
sbb
mov
dec
dec
and
divl
icebp
dec
push
jne
jb
test
pop
sahf
push
or
sub
cmc
cmc
and
mov
ljmp
cmp
pop
jb
lock
enter
cmc
scas
pop
leave
gs
push
lock
sbb
push
lock
test
ss
or
push
les
mov
add
push
push
cltd
out
ret
in
test
aaa
inc
ds
add
leave
add
pushf
add
stos
outsb
inc
mov
add
jp
roll
jnp
adc
cmp
adc
or
loopne
cmp
dec
add
sahf
jo
cmp
ljmp
subl
pop
mov
add
push
sub
pop
imul
inc
and
xor
and
lcall
adc
lret
in
cwtl
and
test
movsl
or
cmc
push
push
xchg
pop
out
adc
data16
cmpw
fwait
mov
or
adc
clc
push
and
jg
mov
push
mov
and
test
jne
pop
mov
jbe
out
push
cmp
add
pusha
pop
cmp
mov
mov
pop
mov
loopne
cmp
insl
push
mov
cld
dec
add
ja
add
cld
call
push
jge
cli
pop
jl
jg
cmp
jbe
sbb
or
add
xorb
sub
sahf
sub
pop
and
mov
jge
loope
pop
lea
mov
out
test
dec
push
and
mov
add
cmp
loope
mov
or
add
mov
aaa
adc
stc
xor
sub
pop
inc
sarb
dec
inc
adc
addr16
fistpl
adcl
sti
out
shl
sbb
fisubl
cmp
xor
and
push
or
stos
into
insb
inc
inc
sub
cmp
mov
shrl
add
mov
mov
cmp
ja
mov
sub
adc
add
dec
add
xchg
add
and
sbb
movsb
and
adc
push
add
push
pop
sbb
pop
addr16
sbb
arpl
and
jecxz
call
andl
pop
xlat
rclb
and
ja
dec
adc
jge
imul
pop
inc
fisubrl
mov
mov
or
mov
movl
xchg
sbbb
mov
mov
mov
or
mov
addr16
lods
or
icebp
movl
inc
dec
cmp
sub
xor
or
mov
into
fisttps
cmp
fistpll
push
je
hlt
daa
mov
cmp
clc
inc
push
inc
sbb
jae
testl
ss
scas
jns
lock
push
mov
inc
push
add
lret
push
fcomip
inc
inc
pop
nop
sub
jnp
enter
test
sub
mov
push
ffreep
or
add
or
adc
pop
jmp
icebp
pop
sbbb
mulb
adc
adc
ds
mov
out
adc
inc
and
repz
jb
jne
jb
sbb
push
and
jae
popf
adc
cli
jle
icebp
jmp
scas
pop
pop
das
inc
in
cltd
cmp
inc
icebp
sub
dec
jle
loopne
inc
xlat
push
or
cwtl
lods
push
dec
cmpl
adc
subl
pop
and
fisubs
std
mull
cmp
cmp
dec
pop
and
in
test
jmp
data16
testb
movd
movaps
push
clc
in
idivl
jle
xor
ss
rcr
inc
sti
ror
test
cmp
pinsrw
repz
add
jg
adc
imulb
mov
inc
push
add
mov
fwait
adc
or
add
adc
cmpsl
adc
outsb
inc
push
pop
add
scas
ret
add
mov
mov
clts
loopne
subsd
int
out
shrb
push
jo
sbb
push
push
sbb
fimuls
dec
pop
ret
mov
push
test
fwait
repnz
rorb
adc
add
insb
and
inc
mov
xor
les
mov
jnp
inc
fldcw
or
out
add
mov
daa
iret
mov
fnclex
push
add
popa
or
loop
in
addl
cmp
aaa
adc
add
pop
pop
jl
xor
rcrl
lock
flds
sti
gs
fildll
push
loop
mov
fsubrp
test
jns
fstps
icebp
fistl
sarl
add
daa
mov
mov
fldcw
das
fcomp
jo
imull
sub
fstps
inc
movsl
add
cld
xchg
jne
push
loope
popa
sbb
xor
sbb
out
imulb
pop
jbe
add
mov
test
into
shlb
xor
ds
jne
aas
pop
push
insb
add
pop
inc
push
pop
inc
mov
sub
mov
mov
loopne
add
jmp
dec
nop
mov
mov
imulb
je
adc
cltd
add
add
lea
sbb
cmp
dec
out
add
pop
adc
mov
test
cld
dec
push
insl
cld
mov
jmp
pop
bound
xchg
pop
repz
clc
dec
cmp
gs
cmp
xchg
mov
jl
loop
fcoms
jmp
cmp
popa
inc
xchg
in
addr16
mov
inc
add
fs
in
inc
aad
fs
imul
pop
adc
jp
nop
or
call
xor
pop
in
cld
add
call
xor
shrb
mov
jbe
jns
hlt
fistl
cmp
or
xorb
out
mov
das
add
add
sub
andl
add
fisubrl
xor
je
inc
inc
andb
in
push
scas
sbb
rolb
and
adc
adc
pop
mov
jecxz
aam
cmp
lea
pop
mov
or
push
dec
test
and
mov
sbb
pop
cmpsl
enter
movsb
bound
sub
push
xchg
lret
andl
cwtl
adc
xor
fwait
pop
sahf
std
add
fldt
jg
movl
xor
and
cltd
cmp
pop
andl
gs
inc
mov
and
or
jno
sbb
add
xchg
cs
cmp
jo
or
and
cmp
mov
lds
mov
sub
or
jmp
imul
js
bound
adc
dec
add
add
inc
or
push
ret
clc
add
jnp
mov
fistl
ret
sbb
pop
or
add
mov
insl
xorl
push
fistpl
out
pushf
sbb
fisubrs
adc
cmp
or
adc
loope
or
jg
adc
dec
add
mov
scas
pop
xchg
cmp
adc
push
int
dec
out
inc
jmp
out
pop
xor
mov
call
mov
shl
hlt
fadds
cmpsl
fs
and
rcl
xor
fwait
call
ret
push
xor
sub
push
xlat
aam
and
fldt
inc
pop
or
mov
repnz
pushf
push
mov
int
sbb
gs
cmp
leave
imul
mov
sbb
es
pop
test
movsl
push
das
mov
jb
lahf
outsl
xchg
ds
and
enter
nop
add
leave
xor
out
adc
in
push
pop
and
push
sahf
pusha
ss
lret
adc
mov
add
push
gs
add
xor
add
cmp
mov
lock
cmp
movsl
cwtl
mov
push
jecxz
loope
add
icebp
mov
pop
adc
dec
out
fidivs
mov
adc
mov
inc
inc
adc
push
adc
fprem
jb
cmp
pop
sahf
gs
fisubl
push
test
dec
pop
jl
or
scas
ret
xor
jp
adc
rorb
jbe
mov
call
xor
cs
push
bound
mov
std
std
mov
lea
and
jne
xor
out
subl
xchg
jne
movl
int
and
or
lock
or
jmp
dec
imul
mov
adc
xchg
in
addl
dec
and
arpl
sbb
mov
jge
xor
call
imul
cmp
insb
adc
add
cwtl
lods
gs
jmp
or
push
pop
push
outsb
sub
cmp
adc
inc
orb
jecxz
shrl
inc
out
xor
inc
sub
jmp
test
pop
iret
rol
mov
push
jne
pop
inc
xchg
mov
mov
ffreep
pop
cmc
and
add
loope
popa
repnz
add
xor
jge
sub
push
sbb
mov
testb
adc
cmp
gs
sbb
ret
lcall
int3
popf
add
adc
inc
inc
fnstcw
dec
cld
inc
jmp
mov
xor
push
adc
push
mov
cmp
lret
shll
or
sbb
xchg
pop
xorb
repnz
inc
sbbw
mov
or
xchg
and
shl
mov
add
shrb
sbb
pavgw
jle
inc
or
push
mov
enter
or
jns
mul
fstpt
or
and
add
imul
push
dec
mov
inc
push
mov
imul
cld
filds
or
inc
adc
mov
adc
inc
in
or
jge
mov
xor
mov
loope
xchg
pop
jmp
jl
push
bound
ss
leave
jp
js
push
dec
cmp
jb
or
sbb
or
je
sbb
js
sub
jl
aad
jns
jle
pushl
iret
cmp
popf
enter
fnstenv
jb
outsl
hlt
jmp
pop
movsbl
push
sub
push
fistpll
js
mov
cli
ret
jg
movsl
dec
inc
sub
xor
inc
cltd
or
sub
xchg
push
sbb
movsl
mov
fwait
mov
xor
push
push
or
xorb
xlat
cmp
ss
cmp
push
xor
or
in
jo
push
sahf
xor
loope,pn
xchg
decb
add
jmp
push
pop
push
push
inc
shr
rcr
shr
imul
repz
cwtl
inc
inc
div
in
ja
out
jb
cmp
or
cmp
or
xor
dec
sti
mov
adc
or
fisubrl
cmpsl
inc
pop
test
fxch
pop
add
pop
xor
flds
inc
jge
imul
idiv
push
mov
sbb
sbb
and
sbb
jo
or
xchg
addr16
push
scas
adc
jmp
push
xor
loopne
es
fs
adc
cmp
loopne
jecxz
add
dec
and
mov
add
mov
or
or
push
lds
mov
inc
ljmp
mov
dec
cwtl
repnz
dec
rolb
loopne
insb
add
pop
jmp
jns
add
icebp
sbbb
popf
iret
cmp
add
filds
nop
cmp
jl
cmp
jg
sub
mov
inc
or
sarb
ds
mov
push
insl
xchg
lcall
pop
adcl
jnp
cmp
and
jmp
outsl
cmp
jle
push
stc
pop
clc
inc
add
mov
lea
enter
add
ds
insb
mov
mov
push
cwtl
mov
test
and
push
add
dec
hlt
arpl
clc
jmp
add
lcall
arpl
clc
pop
negl
mov
dec
cmc
adc
push
pop
rcrb
pop
or
arpl
cltd
in
sub
cmp
jmp
cmc
les
popa
std
add
js
mov
lock
and
xor
jnp
cmp
popa
cmpsb
or
clc
imul
adc
push
mov
mov
xorb
mov
loop
add
or
call
sub
or
sbb
or
push
mov
add
cmp
xchg
test
adcb
jp
xsha256
cmpsb
nop
ds
mov
add
push
dec
outsl
imul
or
add
loopne
jo
or
xor
test
push
sbb
arpl
loope
mov
or
cmp
std
push
inc
lock
jo
add
dec
enter
pop
andl
or
lods
xchg
in
or
scas
sbb
std
cmp
and
aas
mov
fs
fidivs
sub
adc
pop
fidivrl
mov
dec
loopne
faddl
inc
fnsave
testb
loopne
ret
cmp
or
call
or
sbb
adc
lea
cld
mov
or
insl
fwait
add
leave
sub
mov
and
push
or
stos
lea
stos
sub
daa
lods
mov
aaa
into
ret
stc
cmovne
shl
or
xor
mov
xor
test
dec
mov
sbb
push
xchg
push
jb
push
sbb
ret
push
jg
xor
jns
mov
loope
or
jo
les
in
in
icebp
adc
or
inc
lods
roll
cmp
sbbl
leave
leave
adc
inc
or
inc
add
adc
cmp
pop
push
leave
cwtl
addr16
cld
pop
sub
dec
pop
pop
data16
mov
cmp
sbb
out
daa
mov
repz
sbb
popa
je
push
jbe
leave
cmp
mov
adc
xchg
in
ret
cmp
inc
in
inc
or
daa
cltd
insl
ds
ds
and
mov
xor
jge
daa
mov
js
je
sub
fs
add
jp
int3
mov
clc
es
and
inc
or
add
or
push
inc
call
cmc
pop
les
enter
mov
push
rcrb
inc
pushf
add
kmovw
push
insb
pop
mov
jmp
or
sbb
lahf
fcoml
jle
or
gs
fsubl
gs
dec
test
or
imul
xchg
push
and
pop
add
dec
les
aaa
cmp
fisttpll
dec
or
xor
jne
inc
test
incb
jne
testb
pop
push
and
push
sbb
addr16
daa
xchg
jmp
adc
jb
dec
scas
xor
fmull
dec
and
shl
pop
movb
out
push
pop
inc
popa
mov
ret
mov
stos
rcll
xrelease
andl
mov
insl
fisttps
sub
inc
cs
or
add
adc
insb
or
dec
movsl
rolb
lea
das
sbb
or
mov
loope
ds
bswap
mov
mov
mulb
call
xchg
aas
aad
xchg
add
lgs
in
inc
xor
gs
ret
adc
sub
jo
add
pop
outsl
inc
rolb
sbb
jge
jmp
andl
sub
xchg
add
popa
cmp
arpl
shll
pop
testl
xchg
arpl
sub
testb
push
xlat
mov
outsb
test
cld
inc
rorl
and
pop
xor
mov
das
pop
jo
push
xor
and
xchg
imul
inc
push
lahf
int3
mov
sbb
push
adc
into
pop
sub
jmp
mov
jno
and
fcmovu
pop
and
loopne
pop
aas
test
fmull
lea
push
incl
lea
cmp
je
daa
js
xor
jecxz
pop
xchg
fisttps
sti
out
xchg
mov
cmp
jne
hlt
inc
or
or
pushf
mov
pushl
jl
aas
mov
je
xor
jmp
repz
jmp
iret
out
mov
mov
stos
xor
inc
and
adc
inc
add
mov
loope
ja
flds
adc
mov
mov
inc
fcoms
add
dec
test
fnstsw
cld
aas
ret
pop
sbb
pop
repz
mov
dec
sbb
cmp
loopne
fcoml
fstps
int3
data16
sbb
jb
popf
enter
shrb
pushf
mov
mov
repz
call
adc
cmpsb
popf
aas
cmp
rol
add
push
mov
push
cmc
adc
pop
sbb
push
or
or
or
mov
push
or
xchg
or
pop
sub
pushl
fmul
in
pop
jmp
jge
inc
mov
mov
out
lock
adc
stc
sub
in
cmp
or
test
push
pop
out
jl
add
lock
push
addr16
movsb
in
and
in
mov
pop
lock
mov
call
inc
daa
add
or
mov
mov
mov
test
lods
mov
imul
aas
inc
add
mov
sub
pop
ds
aad
rcll
call
sbb
adc
mov
lock
adc
shl
stos
cmp
xor
inc
jae
mov
jnp
and
dec
add
xor
xchg
dec
xchg
pop
jno
pushf
jge
lods
test
fs
push
call
add
cmpsb
fbld
and
dec
lret
xchg
inc
xchg
push
movsb
leave
in
ret
adc
and
inc
test
add
push
xor
inc
mov
and
sbb
hlt
mov
pop
add
leave
lods
cmpl
repnz
jmp
aas
pop
and
aas
jp
pusha
push
jecxz
xchg
scas
sahf
add
push
and
outsl
or
cmp
add
rcl
sub
or
loopne
adc
lock
ss
dec
add
xor
push
ss
movsb
or
lods
lret
test
ds
and
cmp
pop
ret
mov
sub
fimuls
mov
in
hlt
inc
mov
jl
jmp
out
mov
hlt
stos
add
shl
add
push
outsb
adc
cmp
jno
lcall
mov
lods
or
notb
rolb
add
js
push
cmc
js
ret
je
es
jae
addl
pop
dec
fcmovnb
push
inc
add
scas
arpl
pop
cmp
cmc
ljmp
rcrb
or
add
inc
or
cmp
loope
push
mov
inc
add
sub
dec
xor
xor
add
push
je
outsb
push
mov
inc
or
clc
pop
orl
fstpl
pop
jne
and
sbb
jne
pop
pop
subl
inc
fsubr
pop
xor
or
stos
or
loop
adc
mov
jne
push
loope
mov
adc
ss
das
outsb
pop
or
or
fdiv
inc
add
push
or
push
sbb
ret
fdivl
shlb
sbb
jmp
add
sub
sbb
inc
add
dec
sub
cld
shr
pop
adc
imul
add
jmp
enter
aad
roll
clc
pop
sbb
lea
mov
mov
fsubr
jle
push
cld
or
ret
call
dec
je
cli
add
cmp
jbe
push
pop
mov
cmp
jne
mov
cmpsb
sub
jae
mov
shr
lea
shll
pop
mov
inc
decb
jne
add
sbb
dec
loopne
shr
imul
cmp
pop
add
mov
dec
pop
adc
add
pop
and
push
or
sub
pop
clc
and
pop
hlt
fsubr
mov
push
sar
xor
aas
dec
pop
cmp
jbe
mov
clc
imul
or
cmp
aas
mov
jno
jno
mov
sti
pop
mov
out
not
and
add
add
and
xor
sbb
pop
aas
enter
push
jg
pop
dec
add
dec
pop
inc
pop
outsb
pop
add
ds
and
or
decl
mov
push
jp
lock
mov
pop
or
or
xchg
outsb
mov
mov
mov
sbb
adc
and
loope
push
xchg
lods
imul
sbb
pop
xor
inc
dec
or
jmp
dec
shrb
xor
adc
inc
adc
lea
add
sbb
pushf
call
inc
data16
and
or
adc
add
shl
add
jp
push
call
enter
aas
gs
push
or
and
andl
inc
mov
dec
adc
add
xor
js
xchg
add
outsb
jo
mov
adc
aad
in
and
adc
fisubrs
enter
push
lea
insb
dec
mov
push
ror
and
cmp
adc
orl
mov
mov
pop
outsb
mov
jno
jno
push
add
ds
push
ljmp
mov
mov
mov
cltd
jmp
addl
pusha
or
pop
pop
push
in
or
mov
in
mov
jno
mov
xor
or
orl
jmp
ja
jle
incl
and
lds
add
inc
jno
incb
xor
add
rolb
mov
imul
mov
mov
add
add
dec
jne
or
sarl
jns
push
hlt
int3
inc
dec
loopne
xchg
add
or
cltd
cmp
ja
add
iret
shr
lea
inc
orl
orl
or
mull
fimull
inc
cld
lock
add
sub
fdivs
into
dec
jne
jne
clc
add
enter
xor
jae
adc
call
mov
inc
mov
arpl
test
push
mov
fnstcw
lds
js
sub
not
and
xor
add
fwait
or
daa
or
sub
fs
ljmp
dec
cld
in
cmp
bound
mov
cmp
push
sub
mov
test
inc
adc
flds
incb
call
pop
fcoms
int
pop
adc
pop
mov
sub
mov
jns
push
lock
clc
roll
movsb
add
pop
add
cmp
nop
cmp
imul
add
inc
loopne
push
adc
into
jnp
mov
jo
sub
ror
js
incl
mov
das
fstpl
frstor
in
sbb
add
adc
pop
xchg
in
jg
mov
pop
pop
gs
gs
pop
adc
lcall
jns
sbb
iret
jns
pop
testl
sub
test
iret
adc
jmp
adc
inc
insl
xor
sbb
ja
mov
jl
mov
mov
das
mov
jnp
mov
dec
inc
dec
insl
pop
xor
push
sar
dec
adc
mov
dec
add
and
add
cmp
cmp
cmp
dec
mov
dec
je
fisttps
and
push
mov
pop
cmp
fcmovnu
ja
ja
dec
jnp
adc
fdivp
fisttpl
mov
dec
lea
mov
mov
or
or
dec
add
mov
shrl
addr16
stc
into
mov
add
pushf
rdpmc
cmp
mov
insb
add
sbb
cwtl
rcll
imul
clc
add
ret
and
inc
cmp
adc
mov
jge
dec
shr
arpl
and
fadds
loopne
adc
das
push
or
push
xchg
cmp
and
decb
xlat
jne
add
addr16
divl
pop
call
sbb
mov
pop
jmp
jnp
add
insb
nop
lock
aaa
arpl
add
lock
dec
sub
jl
xchg
repz
cmpsb
push
sub
pop
fwait
adc
add
fldl
mov
cmp
scas
insl
lock
adc
cmp
roll
mov
dec
push
ret
xchg
jo
iret
jecxz
mov
inc
lock
mov
pop
dec
push
lcall
ja
mov
leave
and
sub
mov
push
pop
outsl
leave
inc
test
push
icebp
inc
sub
mov
sub
icebp
loopne
push
cmp
test
mov
dec
pop
cmpsl
stos
mov
jge
iret
push
aas
jo
push
fnstcw
out
in
and
sub
fldl
sub
jne
in
icebp
jbe
int
and
jmp
jp
mov
shrl
popa
dec
bound
dec
push
and
gs
mov
jp
loop
lret
jns
jp
jns
pop
sub
inc
mov
mov
das
pop
xor
adc
popl
jge
inc
or
pop
mov
push
or
dec
xor
or
inc
or
inc
or
push
mov
or
out
or
nop
pop
pushf
stos
adc
adc
mov
add
scas
and
sbb
mov
lea
clc
dec
pop
cmpsl
sbb
sbb
sbb
xlat
push
add
or
andl
add
mov
pusha
inc
js
inc
mov
mov
xchg
test
pop
in
add
or
and
adc
mov
por
and
or
xor
mov
sub
mov
add
pop
jmp
dec
sahf
je
cmp
cmp
add
jnp
pop
scas
pop
or
sub
mov
pop
test
mov
and
cmp
pop
addb
xchg
lock
jle
sub
daa
fisttpll
loopne
bound
mov
adc
or
les
mov
sbb
adc
push
push
fcompl
loop
arpl
pop
out
popl
daa
sbb
ret
xchg
imul
ret
add
mov
icebp
pop
jne
mov
aad
inc
xor
pop
in
rcll
add
dec
sub
xorb
aas
cli
pop
and
clc
mov
mov
vmread
dec
sbb
insl
ret
es
xchg
push
sbb
sub
push
inc
xor
and
jmp
push
rorl
mov
punpcklbw
popf
mov
push
mov
fstps
and
cmp
xchg
jns
push
pop
dec
ret
pop
inc
push
sub
clc
push
and
fisttps
sub
add
testb
je
mov
cli
pop
add
or
mov
xor
dec
icebp
xlat
pop
sbb
lock
addr16
mov
sub
inc
ds
movsb
jge
ret
incb
pop
add
and
fwait
push
movsb
sbb
sub
jl
or
out
push
sub
xchg
pushl
add
test
push
scas
xor
insl
mov
cmp
xchg
pop
add
ljmp
pop
dec
out
das
popf
jns
out
add
test
pop
lods
out
cmp
notl
sti
mov
ficoml
xchg
int3
jne
mov
lds
pop
les
sbb
add
or
add
add
sbb
dec
jmp
inc
add
inc
xor
add
jmp
out
jmp
decl
push
js
sbb
movsb
outsl
or
adc
and
lods
out
add
adcb
cmpsl
pop
pop
loopne
push
ud1
ljmp
jmp
lods
mov
xor
push
incl
inc
xor
popl
push
cmp
dec
or
inc
or
add
pop
mov
or
jbe
lahf
and
fisttps
aad
xchg
dec
mov
test
js
inc
mov
mov
out
jmp
mov
add
adc
jb
int
subps
or
mov
adc
or
pushf
mov
int
jp
jne
add
jg
jecxz
inc
popa
and
xchg
add
jno
mov
jecxz
mov
sbb
inc
sub
lock
dec
push
mov
inc
mull
mov
call
and
andb
or
test
cmp
xor
mov
decb
test
jle
dec
adc
flds
rcrb
dec
push
xor
sub
subw
int3
mov
popa
cmpsb
jecxz
stc
xor
adc
pcmpgtd
sahf
loop
inc
inc
clc
int3
sub
sar
pop
add
jae
in
or
lret
ds
lea
andl
push
add
and
clc
pop
push
add
aaa
repz
ja
ficoms
add
adc
and
outsl
push
jmp
js
pop
faddl
xor
test
mov
stc
iret
je
inc
test
sbb
jbe
xchg
addr16
push
inc
add
inc
add
stos
push
in
xor
sub
add
inc
pop
call
sub
jmp
nop
or
imul
lock
push
push
pop
xor
pop
test
idivb
xor
pushf
rcrb
clc
jmp
dec
cmp
scas
xchg
adc
inc
add
push
sbbl
jne
push
jo
loop
sub
jmp
pushf
cmp
mov
das
pusha
add
lahf
xorb
packsswb
out
adc
sub
mov
add
lds
add
popl
cld
xlat
and
popa
je
cmp
je
cmp
je
movsb
sub
xchg
and
cmpb
lock
test
imul
adc
xchg
and
ret
inc
fwait
push
test
ja
ljmp
pop
pop
aam
dec
cwtl
cs
push
jg
push
and
or
jl
out
call
inc
nop/reserved
int
or
add
test
dec
clc
repz
mov
push
test
or
psubusw
jnp
mov
and
sarl
cwtl
adc
cmp
xchg
mov
or
mov
and
and
ja
and
loopne
sub
add
das
push
je
push
or
pusha
xor
pop
or
daa
jl
xchg
inc
out
add
pop
inc
or
fcomip
cmp
dec
push
ficomps
jns
lea
aaa
sub
cmp
and
adc
push
xor
jns
adc
ss
mov
sub
jl
test
sub
loope
sbb
lock
xchg
jbe
add
mov
push
out
out
mov
mov
xchg
inc
or
in
popa
pop
add
pop
in
sub
les
cwtl
add
enter
xchg
mov
or
repnz
add
push
push
mov
add
lahf
sbb
mov
push
push
add
pop
push
ss
int3
ljmp
lcall
lahf
push
mov
cmp
mov
sbb
test
jecxz
or
clc
jo
push
mov
inc
fisttpl
test
cmp
hlt
or
mov
and
out
inc
lea
jecxz
fimuls
ja
movups
enter
outsb
loopne
lods
or
adcl
scas
mov
push
inc
jmp
inc
xchg
push
repz
in
in
in
xor
add
imul
mov
mov
xlat
cmp
loope
and
dec
call
jecxz
inc
inc
xor
push
pop
pop
cmp
mov
addr16
add
fistps
or
dec
adc
les
or
lahf
ret
fstl
clc
push
adc
push
push
push
push
push
push
inc
mov
jl
or
xor
outsb
xchg
sbb
ljmp
mov
cmp
add
bnd
movsl
mov
std
lea
lea
or
jnp
in
add
push
loope
push
cmp
xor
pop
adc
inc
xlat
push
fldenv
mov
rclb
ss
sbb
arpl
pushl
jo
lods
pop
aaa
sbb
pop
inc
mov
mov
enter
pushl
roll
sbb
push
js
dec
adcb
mov
sbb
call
rcrl
xchg
subb
scas
roll
jo
inc
cmp
xor
out
push
sbb
push
bound
jno
push
test
pop
inc
ds
xor
lcall
inc
sub
aas
push
std
mov
cld
cmp
inc
or
sbbl
jb
or
xorl
std
xchg
cmc
add
xchg
push
test
or
cmpl
cmpsb
xor
cmp
test
aaa
mov
das
mov
mov
mov
inc
adc
jnp
inc
pusha
adc
lods
jnp
xor
mov
fldt
popf
shlb
push
mov
mov
imul
psllw
insb
xchg
pop
inc
cmp
cmp
sub
outsb
pop
shrb
push
out
dec
mov
enter
es
jp
loopne
insl
mov
push
or
pop
push
icebp
insb
out
mov
add
push
dec
push
iret
mov
lock
xor
movsb
dec
sbb
or
push
int
test
outsl
inc
sbbl
push
xor
sahf
pushl
push
fimuls
jge
push
pop
ret
scas
inc
fnsave
je
add
sbb
pop
mov
push
js
dec
add
ljmp
pop
pxor
loopne
cltd
xchg
nop
out
fsubrp
sbb
jg
adc
and
inc
ds
jl
push
pusha
jo
hlt
dec
outsb
fcmovnb
add
adc
cltd
gs
sub
imul
imul
das
push
outsb
roll
lret
and
arpl
push
incb
out
inc
add
sub
icebp
xor
clc
add
fisubrl
jmp
neg
add
lock
lock
dec
fadds
sub
push
pop
push
xchg
pop
or
and
rcrb
daa
lea
inc
or
dec
sub
and
js
mov
sbb
movsl
xor
pop
fistps
sbb
ret
dec
je
test
das
pop
pop
loopne
pushf
pop
mov
aam
add
pushf
pop
sub
jno
popf
lods
jne
jge
cpuid
cmp
aad
sbb
out
jb
and
data16
pop
divl
add
push
pushf
ret
pusha
in
mov
sub
hlt
sbb
shll
fisttps
sbb
dec
inc
mov
or
add
and
popl
push
lods
lods
fs
mov
hlt
pop
add
loopne
add
xor
test
xchg
daa
pop
or
cmp
aaa
and
mov
sub
adc
push
inc
popa
add
inc
add
cmc
test
add
adc
xchg
inc
mov
or
test
and
mov
cwtl
lret
inc
cmp
test
je
and
iret
rclb
test
mov
jmp
jns
cmp
cltd
imul
adc
inc
mulb
subb
lock
pop
rorl
sbb
or
push
iret
loopne
xchg
dec
add
push
mov
push
dec
mov
ds
mov
sbb
clc
dec
cmp
cmc
jle
push
js
push
or
push
ljmp
sarb
lcall
stc
rcll
adc
clc
cmpl
adc
add
push
pop
push
push
hlt
frstor
ret
cmpsl
cmpsl
jbe
ljmp
push
fstl
js
sahf
dec
shl
sbb
es
push
jp
mov
jp
loop
fwait
in
dec
add
or
mov
sbb
or
push
inc
or
and
push
xchg
loopne
je
adc
in
test
jne
notrack
pop
jg
xor
inc
mov
jg
cld
fnstenv
jg
mov
add
jmp
mov
incl
outsw
inc
jo
jae
std
adc
xor
out
aas
add
xchg
or
pop
sbb
enter
add
out
pop
or
lahf
out
pop
sbb
faddl
and
int3
call
and
enter
les
and
push
xchg
ja
and
jbe
test
pop
add
out
jae
repnz
mov
pop
sbb
and
dec
loopne
stc
mov
sar
mov
mov
or
add
adc
inc
add
dec
ret
jne
or
test
fldenv
fidivrs
leave
pop
adc
or
mov
jnp
adc
pop
jnp
mov
mov
in
cmp
es
sub
cmp
ja
stos
ret
mov
movsl
mov
add
divb
fstps
test
test
push
sar
pop
push
sub
cmp
xchg
xor
loopne
and
ret
addl
int
xchg
mov
imul
cltd
or
shl
enter
andl
out
pop
je
or
inc
mov
dec
fsts
cmpb
jb
ficomps
add
sbbl
xchg
add
adc
add
mov
cmp
outsl
psubusw
xchg
mov
or
js
mov
imul
das
lret
sbb
imul
lods
es
mov
call
mov
push
or
inc
insb
je
add
pop
ja
arpl
ss
out
dec
cmp
sub
popa
inc
pop
aad
pop
jg
or
outsl
cmp
jne
cmpb
jne
inc
xor
and
jne
cmp
inc
xor
sub
lods
add
jns
imul
mov
js
pop
lods
imul
xchg
enter
ret
xchg
ret
clc
test
and
push
cmp
bnd
inc
adc
dec
inc
push
mov
push
clc
xchg
push
push
daa
jns
out
lds
repnz
jns
je
pop
loope
mov
push
or
or
movl
inc
cmp
hlt
sub
adc
sbb
icebp
cmp
jae
push
mov
shl
cs
mov
and
dec
insb
ret
cmp
jne
xor
out
ljmp
loop
cs
mov
pop
pop
dec
inc
jne
mov
fs
cmp
fldenv
pusha
dec
jno
xlat
ljmp
jns
daa
mov
sbb
fstps
movzwl
or
adc
in
add
pop
loopne
jecxz
mull
outsl
pop
leave
shr
mov
push
repnz
or
xor
hlt
popa
mov
pop
add
jnp
mov
xor
add
out
in
loopne
xlat
inc
mov
adc
sub
loopne
mov
loope
sti
jecxz
or
add
addr16
sti
adc
jno
outsb
je
aas
rolb
std
subb
dec
lods
push
push
mov
and
adcb
repz
cli
cmp
add
adc
or
cmp
fdivs
pop
adc
dec
test
add
sahf
and
fsubrp
test
pop
mov
roll
jo
jne
mov
jne
mov
call
jbe
out
push
cmpl
pop
push
cmovs
movsb
push
mov
mov
adc
and
addr16
or
jl
mulb
or
xor
adc
aad
sub
mov
pop
or
mov
sub
xor
dec
or
call
mov
aaa
in
dec
lahf
ret
imul
push
pop
nop
push
pop
pop
cmpb
orl
cmp
daa
enter
mov
insl
adcb
int
jmp
aad
mov
es
mov
test
into
jo
inc
daa
add
adc
pop
fwait
and
mov
push
push
xor
lahf
aad
test
or
push
arpl
mov
inc
add
xchg
jmp
push
sahf
sahf
js
daa
mov
add
sbb
dec
sbb
jg
jl
jae
cmpsb
adc
add
fidivrl
sbb
push
cmp
jge
sbb
xchg
add
orl
lock
or
cmp
lea
popf
mov
sti
test
push
cmp
sub
int
lods
ss
add
jecxz
ret
mov
clc
repz
add
mov
dec
jmp
lea
sub
inc
xor
or
push
in
loopne
popa
test
sti
pop
test
cmp
je
or
add
inc
jmp
dec
cs
inc
inc
int
hlt
sub
and
loopne
test
repnz
add
subl
rorb
xchg
dec
jo
pop
xor
lds
sub
push
sub
sub
or
jge
lret
mov
popf
loopne
sub
or
pop
cmpsl
mov
push
rcrl
dec
dec
test
cmp
jns
in
dec
rcll
add
adc
xor
cmp
arpl
sbb
jle
pop
insl
imul
mov
movsl
adc
ror
push
mov
inc
push
cmpsl
in
imul
xchg
sbb
lods
test
push
mov
dec
ret
pop
jne
icebp
adc
in
lea
dec
pop
jno
push
mov
dec
sahf
je
pop
int
fdivrl
movsl
mov
daa
pushf
daa
pop
mov
mov
and
push
out
xchg
aaa
fsubrl
rolb
push
xor
xor
in
xchg
and
inc
xchg
lret
cmpsb
jns
or
push
jp
xchg
sbb
xor
popf
ss
or
fwait
icebp
and
rolb
pop
push
cmp
cmpb
daa
mov
lock
pop
xor
aas
xor
sbb
cmp
call
sbb
ret
cmc
cld
jns
sub
gs
lods
out
call
lret
and
xchg
out
adc
push
sub
lods
mov
or
ds
inc
push
das
sbbl
xor
jge
inc
cld
adcl
dec
sbb
jno
adc
and
sbb
test
lret
xor
adc
push
cld
push
jo
xchg
inc
or
dec
add
or
fcos
jbe
in
push
pushf
or
jne
sub
pop
ljmp
movsl
mov
cmp
test
arpl
lea
fimull
scas
mov
add
fs
push
arpl
jne
push
push
add
push
movsl
test
js
dec
popf
int3
push
scas
lock
add
jmp
jns
gs
sbb
ror
cs
sbb
outsb
into
test
mov
xchg
fcoms
and
dec
jne
fstl
jo
int3
and
adc
and
sub
cmp
adc
and
imul
sbb
adc
mov
jno
push
mov
jno
push
pushf
cmp
inc
pop
lcall
test
cmp
icebp
add
std
gs
add
add
xchg
jg
shll
addl
mov
cltd
adc
pop
fcoms
add
or
push
adc
and
and
sbb
inc
test
cmp
or
out
dec
xchg
daa
push
adc
mov
and
test
mov
add
dec
sub
xchg
mov
jb
int3
adcl
mov
inc
pop
jl
or
xchg
out
mov
sbb
pop
mov
fnstenv
cmp
push
mov
mov
mov
hlt
mov
jle
pop
adc
and
push
push
out
inc
pushf
mov
push
or
andb
or
push
mov
fstpt
jmp
in
fwait
js
rorl
or
scas
jns
and
pop
and
cmp
pop
mov
add
cmp
mov
or
mov
sbb
dec
bound
lea
cmp
mov
pop
mov
mov
or
loopne
xchg
jmp
push
sbb
clc
dec
sub
push
mov
or
sbb
pop
or
and
mov
pusha
and
and
pop
cmp
daa
adc
cmp
jb
mov
cmp
lock
loopne
jle
mov
dec
mov
outsl
or
push
push
mov
push
dec
leave
or
adc
cs
adc
xor
dec
xchg
repnz
mov
jo
or
ret
inc
add
lea
jge
rorb
loope
or
sbb
mov
sub
addl
testb
cmpb
jb
xchg
add
add
ret
dec
mov
cmc
push
inc
shrl
aas
push
aaa
cmp
pop
dec
xor
ds
mov
jne
lods
push
clc
add
cmpsb
add
or
push
fisttps
pop
je
and
movsl
call
add
mov
or
scas
sarb
push
pusha
lods
test
dec
sbb
add
addb
dec
mov
cmp
adc
adc
push
cltd
inc
mov
pushf
xchg
or
adc
ja
mov
outsl
inc
cmp
mov
xor
dec
mov
add
mov
pop
sub
mov
mov
inc
dec
jne
int3
push
div
lea
or
mov
sbb
or
mov
jns
pop
pop
jae
or
test
sti
pminsw
imul
and
and
div
mov
and
gs
adc
mov
jmp
push
sub
inc
push
lea
or
mov
jns
imul
ficoml
and
loop
nop
ficomps
aam
int
cmp
push
add
jbe
jg
inc
cld
jge
fmuls
dec
and
mov
adc
int3
fstpt
dec
push
sbb
pop
daa
mov
sbb
and
nop
push
inc
fmull
test
add
mov
in
lahf
fucomip
in
pop
lods
sub
mov
cmp
rclb
sti
jecxz
pop
and
sbb
lret
push
shl
jns
fisttpl
cli
and
and
add
add
push
inc
cmp
jb
jo
xchg
outsl
pop
and
test
mov
pop
push
stos
jg
mov
jns
ja
and
lret
inc
loopne,pt
ret
fs
sbb
mov
xor
dec
mov
mov
push
pop
nop
and
movd
jmp
mov
insl
bound
cmpsl
test
cmp
xchg
rcr
loope
and
adc
xchg
mov
je
por
cmp
sub
mov
lock
les
cmp
shlb
clc
dec
inc
rcrb
xchg
push
int
push
ss
jle
push
or
fucomi
inc
std
push
or
push
adc
inc
andb
mov
and
jmp
movsb
sbb
inc
xor
or
inc
jo
pop
jmp
mov
jae
and
fisubs
and
sbb
lea
mov
jae
cmp
jbe
pop
mov
movsb
iret
push
movsl
daa
add
push
lcall
or
icebp
mov
in
leave
xor
into
push
pop
aaa
jmp
out
into
sub
push
pop
lock
addb
cld
testb
cmp
clc
jbe
fldl
push
insb
test
outsb
push
xorb
or
xorb
xor
inc
cli
cmp
rorb
inc
push
cltd
out
and
js
adc
mov
adc
pop
mov
repz
ret
cli
push
mov
cmp
divb
adc
aas
clc
jno
mov
inc
dec
jne
movsl
pop
fstps
test
add
or
jl
icebp
out
jmp
cmp
adc
aam
jns
adc
pop
roll
orl
adc
mov
xchg
mov
daa
mov
inc
pop
jecxz
push
ds
or
ss
pusha
popa
repz
mov
adc
jmp
and
jo
push
lea
pushf
loopne
cld
inc
faddl
adc
and
mov
pop
jno
add
pop
jmp
jl
mov
repnz
xor
fisttpll
push
and
std
and
popa
push
stc
invd
mov
mov
jno
mov
clc
mov
leave
dec
loope
or
nop
sub
jmp
xor
jmp
add
mov
mov
jmp
add
ret
out
push
push
jge
jmp
adc
push
nop
xchg
jno
es
fwait
adc
testb
sti
imul
inc
les
mov
cmp
xor
push
and
push
jge
inc
sub
push
mov
outsl
jge
mov
sub
int
pop
in
sbb
or
pop
pushl
push
idivb
in
test
sahf
das
adc
xlat
pushf
cmp
rolb
sub
inc
xchg
fs
mov
push
sub
and
dec
inc
inc
in
mov
and
pop
cmp
cwtl
sub
push
sti
xchg
jl
jecxz
aaa
out
jle
int
setnp
push
push
cmpl
add
push
add
pop
cmp
sub
mov
pop
inc
add
inc
bound
add
and
mov
xor
push
sub
fdivrl
nop
ja
nop
sbb
add
lea
jnp
jp
daa
or
cld
mov
mov
adc
lods
shrb
jae
xchg
add
push
xor
xchg
subb
dec
mov
les
sbb
cmp
call
sbb
test
and
pop
in
icebp
add
dec
mov
dec
dec
adc
pusha
lock
jo
pusha
ret
and
loope
shlb
cmp
call
cltd
roll
push
or
popf
test
nop
cmp
inc
add
ja
imul
jmp
or
rclb
mov
or
mov
clc
and
ja
inc
stc
adc
inc
mov
ss
mov
mov
cmp
push
shlb
inc
adc
sbb
inc
or
pushf
push
jo
stos
repnz
push
or
pop
jl
mov
icebp
pusha
test
loop
xchg
fldl2e
inc
mov
or
pop
aas
mov
adc
add
gs
pop
mov
push
mov
pop
clc
movsb
push
sub
add
aas
xor
mov
mov
cmc
roll
add
ficomps
sbb
xor
out
andps
ljmp
adc
sub
or
aam
or
or
adc
jb
push
adc
push
add
jne
push
adc
mov
cmovae
inc
xor
out
test
push
add
and
aad
mov
or
add
adc
neg
add
adcb
xor
mov
pop
adc
pop
fadd
lret
setnp
fisttps
dec
in
ja
stc
jmp
push
aas
sbb
cli
clc
jae
mov
icebp
xor
fwait
setbe
hlt
jl
cld
test
sti
add
cmpl
or
dec
ret
aaa
push
push
xor
and
test
pop
xor
push
fsubs
and
pop
les
pop
mov
xorb
push
adc
stc
mov
ret
add
or
into
fs
popa
addr16
dec
add
in
cmpsl
mov
dec
js
adc
shll
jns
jb
push
dec
test
push
or
pop
icebp
mov
repnz
cmp
xor
or
sub
inc
fisttps
mov
pop
mov
cmp
roll
sub
rolb
ret
add
jno
arpl
sti
xchg
jecxz,pt
push
or
addr16
mov
ret
aaa
icebp
scas
and
sbb
dec
or
stc
jb
rcrl
sti
jb
inc
fldcw
popa
lock
adc
xorb
push
push
adc
stos
pop
inc
inc
clc
sbb
inc
cmp
mov
sub
cs
adc
insb
or
mov
inc
and
call
push
stos
movsl
adc
push
adc
add
jl
push
add
arpl
mov
inc
js
push
cmp
sbb
inc
cli
xchg
adcb
xchg
add
aaa
xchg
loopne
insb
pushf
jp
sub
iret
insl
push
push
pop
in
add
push
pop
mov
icebp
or
push
cmp
pop
fsubrs
or
decl
addr16
cmp
jb
imul
ret
out
fcmovu
or
xor
xchg
std
push
inc
lahf
mov
sti
add
xchg
xor
and
add
adc
psraw
stc
adc
cwtl
test
iret
ja
or
cmp
jge
imul
jle
aas
xor
pop
andl
cmp
and
mov
not
jl
mov
xchg
jle
cmp
arpl
inc
sbbl
pop
cld
sbb
jae
dec
cmp
xchg
iret
and
xchg
push
int
jae
cmp
xchg
pop
mov
xchg
mov
call
jne
ja
mov
sbb
sbb
mov
jle
pop
imul
in
cmp
fsubl
cmpl
push
add
icebp
adc
xlat
ret
lea
hlt
add
pop
in
hlt
sahf
outsl
add
loopne
pminsw
adc
sti
or
je
imul
pop
jns
push
or
movsl
fs
flds
pop
add
mov
inc
mov
or
pusha
pushl
mov
mov
fisttpll
sub
je
inc
lds
add
ds
mov
mov
mov
in
add
sbb
movsl
cwtl
cmp
fdivrs
pop
lds
bound
pop
in
xor
add
fnstsw
scas
or
sti
or
mov
dec
mov
das
outsl
jnp
mov
jne,pn
sbb
inc
mov
cs
out
sti
std
out
adc
and
mov
mov
ret
push
pop
mov
fsubr
fstpt
mov
mov
pop
sbb
push
sub
dec
jmp
sbb
or
jmp
pop
out
adc
aaa
xor
mov
sub
sub
adc
shlb
jae
outsl
sbb
aad
mov
lods
cs
cmp
stos
movsl
push
adc
inc
fsubrs
test
rcrb
adc
mov
fstpl
push
pop
inc
add
les
ret
int3
add
adc
outsb
or
adc
push
lea
es
pop
outsl
push
push
dec
adc
push
and
in
movsl
imul
outsl
inc
or
es
push
jbe
jle
push
addr16
fwait
cmpsb
outsl
ja
jo
mov
dec
fsub
arpl
xchg
in
pop
or
mov
mov
es
and
or
mov
js
and
dec
and
aas
jg
aas
or
sub
outsb
aaa
jno
inc
or
sub
sub
sub
shrl
xlat
les
rcrl
add
sub
xor
in
lock
rep
mov
and
xor
rcll
adc
xorl
jp
or
daa
out
and
ret
inc
popa
nop
xchg
insl
and
inc
push
jns
movsl
mov
test
jae
hlt
fimull
jl
test
jne
adc
mov
bound
je
dec
loopne
aaa
rorl
ljmp
aad
shll
rcrl
in
mov
mov
pop
mov
mov
loopne
push
pop
push
dec
add
or
inc
js
ret
push
add
jecxz
ret
dec
inc
sub
shl
add
in
imul
push
divl
mov
les
mov
data16
add
push
dec
ret
lea
bnd
pop
test
lea
or
insb
mov
or
js
adc
cltd
dec
pop
sbb
les
inc
push
jne
push
mov
jp
sti
or
sbb
popf
es
dec
sbb
or
mov
mov
movb
dec
inc
sbb
dec
imul
xchg
rclb
jo
xor
nopl
xchg
add
clc
fisubs
cmp
testb
inc
aas
sbb
pushf
cmp
push
leave
int
repz
pop
mov
or
or
pushf
push
bound
adc
imul
sti
shlb
pop
push
mov
out
incl
sbb
clc
cmp
insb
xchg
push
inc
dec
jg
or
sti
sub
inc
sbb
dec
je
dec
jne
arpl
mov
add
add
mov
jb
mov
cmp
ret
jmp
inc
xor
xor
jns
std
and
or
push
outsl
je
js
dec
jle
idivl
jne
jmp
mov
push
je
repnz
negl
adc
div
push
mov
jae
decb
lea
test
sbb
xor
push
mov
mov
xorl
add
and
cmp
fbstp
ja
popf
mov
dec
push
je
stos
cmp
pop
sbb
add
and
pop
mov
arpl
inc
mov
jnp
cmp
aad
jnp
ret
xchg
incl
cmp
js
mov
pusha
jno
mov
mov
pop
cmp
mov
xlat
outsl
or
jb
add
ljmp
pop
cmp
adc
inc
fdivl
mov
sarb
push
jnp
movsl
enter
or
or
or
cmp
mov
lcall
stos
pop
test
fstpt
inc
jmp
sub
lea
dec
ret
mov
cmpsl
or
push
mov
pop
add
mov
mov
add
imul
xchg
push
sbb
ret
mov
jbe
sub
xchg
mov
lods
mov
in
shlb
lret
fisttpl
mov
mov
mov
loopne
call
out
mov
orb
test
lret
pop
loope
or
ret
mov
inc
and
sub
mov
pop
add
cmp
dec
add
es
add
and
inc
sub
cmc
or
and
mov
or
jne
and
jmp
rcl
mov
or
cmp
stos
out
push
add
pop
aaa
pop
outsb
ret
adc
out
and
push
testb
rolb
push
adc
xor
sub
push
stos
cmp
jno
mov
jno
mov
dec
outsb
mov
rolb
sub
aad
in
popa
imul
xor
iret
mov
mov
or
jno
adc
dec
adc
adc
pop
cmp
sub
add
jne
aaa
jnp
jns
pop
xlat
and
dec
inc
shrb
loop
add
repnz
jg
fdivl
lret
test
cmp
inc
sbb
jle
and
ret
les
and
and
cld
sbb
lds
cli
xchg
xor
lahf
sbb
fwait
inc
inc
jmp
out
pop
dec
cwtl
test
lock
js
jnp
cli
shlb
mov
int3
jmp
lea
into
test
out
push
movsb
enter
aas
inc
clc
cwtl
jp
andb
jne
and
or
mov
inc
lods
addl
mov
inc
movb
jmp
mov
cmp
inc
nop
shlb
ds
jg
jg
pop
je
inc
cmp
jae
mov
jmp
ret
cmp
ja
sub
and
cld
pop
mov
iret
fmull
add
inc
dec
jne
xor
xchg
popf
popf
jns
xor
inc
inc
mov
jmp
mov
pop
sub
push
cmp
daa
pop
push
popf
adc
das
adc
das
lcall
cmp
and
and
mov
imul
je
and
loope
inc
cmp
dec
outsl
inc
popf
aaa
notl
sub
pop
in
repz
or
pop
pop
lods
scas
add
inc
cmpsb
mov
add
fwait
dec
xchg
inc
adc
lret
mov
cwtl
push
fsts
sbb
imul
cmp
add
push
lea
mov
adc
xor
cmp
or
pop
sub
xor
je
adc
pop
mov
fwait
cmp
cmp
js
icebp
jge
cmp
movsb
testl
pop
out
jmp
pop
rcl
push
notb
cmp
pop
jae
jmp
mov
inc
test
fiadds
lods
subl
add
mov
xchg
js
mov
mov
cltd
add
adc
cmpl
jo
mov
je
add
or
dec
dec
inc
inc
xor
xor
test
adc
mov
inc
outsl
roll
neg
mov
mov
roll
add
xchg
orb
jg
and
shl
sub
decl
jmp
dec
imul
sub
mov
or
jl
push
repnz
ret
clc
je
neg
inc
inc
movsl
movsl
push
hlt
mov
add
mov
cmp
xchg
cmp
out
adc
popa
imul
ror
mov
or
decb
clc
aam
clc
inc
popa
jmp
cmp
pop
js
cmp
sub
adc
xchg
aam
js
popf
push
pop
std
insb
mov
mov
frstor
and
push
popa
das
xor
push
inc
sbb
aad
dec
cmpb
add
ret
inc
cmp
subb
sub
mov
loop
or
push
sub
xor
adc
jge
push
rcll
arpl
ficoms
inc
adcl
push
inc
cmp
or
adc
adc
sub
pop
sbb
shl
xchg
jae
and
sub
add
cmpsl
daa
inc
ljmp
push
imul
add
lret
mov
mov
xchg
sub
pop
rclw
es
inc
sub
orb
xchg
shrb
adc
add
xor
push
ret
loopne
into
shrb
push
mov
pop
xchg
subb
inc
mov
adc
dec
gs
push
inc
cwtl
dec
call
sub
and
sub
js
add
lcall
inc
cmp
push
xor
gs
rol
pop
aam
or
test
addr16
jbe
add
sbb
adcb
out
push
xchg
add
repz
rol
loope
aad
xor
test
mov
cmp
ret
pop
adc
mov
dec
xor
cmp
outsl
dec
mov
cmp
adcl
js
lods
mov
lds
push
xor
mov
fistps
mov
mov
lcall
or
mov
mov
mov
push
dec
push
and
xchg
or
mov
pop
or
add
mov
call
fdivs
and
call
mov
add
out
cmp
push
jo
les
insb
xchg
push
push
and
das
shlb
mov
push
test
cmpsb
imul
sbbb
inc
shlb
mov
or
push
call
pop
dec
add
aad
sbbb
sti
adc
or
stc
cli
sti
cld
std
aas
mov
lret
cmp
stos
in
dec
add
dec
push
rorb
mov
pop
lret
je
mov
add
pop
xor
mov
sub
and
sbb
dec
fsubp
imul
add
add
sub
je
wbinvd
nopl
and
fcoms
sbb
add
fldl
sub
fldl
mov
call
xor
pop
mov
leave
out
clc
test
pop
dec
mov
add
dec
sti
shlb
cltd
jo
fucomi
or
mov
lret
in
cmpsl
ret
xchg
inc
xlat
das
push
das
lret
sti
pop
out
mov
xchg
je
add
fistpll
sbb
mov
in
mov
cwtl
xchg
insl
ljmp
test
cmp
xor
add
sbb
mov
fld1
bound
nop
jle
rcrl
sbb
fwait
pusha
xchg
mov
inc
test
xchg
dec
jnp
cmpsl
adc
test
insb
cmp
nop
cmpsb
push
fs
push
adc
inc
lcall
clc
fstl
inc
xorb
push
shl
push
cmp
bound
das
and
pop
repnz
lock
pop
repz
cmp
mov
sbb
cmpsb
xor
xor
inc
fdivs
sub
xchg
pushf
adcl
inc
xor
test
in
push
enter
loop
shr
mov
clc
arpl
and
test
xchg
icebp
push
cmp
outsl
jle
mov
mov
bound
pop
push
inc
push
ds
xchg
test
lock
xchg
jmp
push
add
fs
faddl
jge
add
lahf
and
or
aas
sarb
loopne
dec
sti
clc
push
fmull
jae
push
cmp
test
jne
push
lods
mov
adc
test
xor
sub
adc
add
outsl
xlat
mov
mov
jmp
pop
add
pop
jne
push
decb
imul
inc
inc
sub
add
push
mov
repnz
adc
mov
clc
push
cmp
inc
mov
jo
sti
or
lock
lahf
xchg
xchg
outsl
scas
adc
inc
das
xchg
or
ss
orb
ret
out
mov
incl
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
imul
pop
add
out
call
jp
or
bound
lea
je
sub
push
push
add
mov
adc
or
arpl
xor
mov
add
push
or
or
pushf
aam
push
push
push
add
push
xor
pop
jno
pop
fwait
in
lods
stos
stos
and
es
movl
fidivs
mov
jo
sub
xor
dec
lods
mov
cmpsb
jmp
cmp
jle
mov
mov
lods
ja
or
jmp
xchg
mov
mov
inc
adc
sub
cmp
lret
mov
dec
add
paddq
mov
jne
movb
jge
jae
sub
sub
xchg
add
ss
add
or
cld
insl
cmp
rolb
mov
jne
sbb
jg
add
jne
push
adc
cltd
ret
xor
stos
loopne
sub
pop
mov
movb
mov
out
cs
fistpll
inc
dec
jns
neg
daa
sub
pop
mov
or
inc
push
mov
push
or
cli
push
nop
or
mov
shl
lea
add
push
clc
mov
inc
add
leave
pop
inc
and
dec
xor
xor
sarb
xchg
notl
pop
fcoms
loope
push
test
push
or
insl
fst
dec
bound
ret
sbb
push
ret
jo
or
aad
sbb
pop
ss
add
jge
mov
sarl
cmp
div
aad
lods
fwait
sub
add
shlb
enter
or
je
sbb
inc
aam
sbb
xchg
pop
pop
shlb
out
push
xor
lods
lret
or
xor
jmp
add
aaa
int3
mov
es
xor
cmpsl
lea
out
je
enter
pop
push
add
enter
jmp
repnz
mov
cmp
xchg
jl
sub
rorb
add
adc
cwtl
jp
out
mov
add
jmp
pop
loope
test
lret
test
inc
outsl
and
xor
adc
xchg
and
fwait
pop
mov
leave
daa
xchg
push
inc
pop
xchg
add
or
imul
xchg
jbe
pop
pop
xor
std
xchg
push
mov
add
pop
and
inc
adc
adc
dec
and
add
mov
and
in
mov
or
je
mov
mov
fwait
iret
inc
neg
sbb
pop
icebp
std
sub
loopne
loope
lock
ret
daa
xor
or
jne
pop
inc
dec
ffree
cmp
xor
shlb
insb
imul
cld
mov
adc
adc
xadd
loopne
mov
add
mov
aad
or
daa
test
stos
hlt
mov
jb
inc
and
inc
add
mov
sbb
xchg
test
jmp
xor
ret
ss
cld
add
cld
incl
dec
shrd
shr
inc
decl
ror
test
ss
jl
cmpsl
or
cmc
jne
mov
or
mov
je
or
add
dec
jmp
xor
jne
push
adc
mov
sbb
iret
pop
or
icebp
incb
push
adc
or
push
mov
jbe
in
dec
and
mov
mov
lcall
and
sub
ret
clc
pop
jnp
pop
sbb
js
jg
jb
push
ret
ljmp
sub
or
adc
neg
cmp
mov
lock
insl
arpl
inc
shll
push
push
push
ds
clc
mov
xor
insb
in
cli
mov
push
jg
lods
jb
add
sub
test
or
loop
pop
sbb
in
daa
addl
cs
mov
cmpsl
stc
mov
mov
daa
sub
xchg
adc
mov
je
int
rol
hlt
sbb
ror
loope
jae
mov
dec
or
and
rol
pop
add
push
dec
adc
push
lock
inc
add
xchg
rorl
jge
mov
jno
xlat
addl
adc
push
mov
pop
xor
or
loopne
mov
stc
roll
jne
in
aaa
addb
push
add
pusha
and
xchg
or
push
repz
cmp
sbb
push
mov
add
mov
fisubrs
pusha
inc
rorb
pop
pop
mov
add
adc
push
dec
push
push
insl
push
jmp
insb
cmp
cmpsl
divps
pushf
sar
jl
int
jge
incl
mov
inc
jno
mov
and
clc
add
push
into
mov
mov
sbb
js
ds
shlb
je
mov
pop
jle
inc
je
data16
and
into
add
popa
je
fadds
mov
loopne
xor
adc
enter
jmp
dec
test
sbb
in
jo
mov
inc
sbb
or
or
xor
or
push
cwtl
lods
sbb
mov
jecxz
rcl
pop
adc
inc
or
jnp
divl
fmull
insl
call
les
leave
pop
push
mov
xchg
and
fdivrs
dec
or
mov
or
jne
mov
xchg
movl
movl
sbb
pop
dec
aas
rol
mov
mov
mov
inc
lea
adc
leave
arpl
sbb
inc
add
mov
mov
add
and
mov
add
testb
je
pusha
fwait
test
inc
loopne
fistps
or
test
or
mov
dec
loop
jne
jl
clc
jp
dec
inc
loopne
cmp
clc
dec
pop
andl
pop
call
sbb
mov
les
or
pop
or
js
int3
ja
inc
ja
jae
mov
aad
push
adc
fdivrs
lods
test
add
outsl
jle
cmp
jl
clc
push
and
dec
or
xor
or
sbb
roll
sbb
push
pushl
mov
or
sbb
or
shll
inc
pop
or
jbe
pop
push
mov
ljmp
insl
push
in
adc
add
js
fcmovb
dec
ret
sahf
ja
hlt
sbb
or
jne
inc
sbb
and
or
or
sbb
into
inc
sarl
add
sbb
pop
shll
mov
loopne
mov
aas
add
jle
jno
rorl
or
xor
or
mov
or
ja
add
add
push
jl
push
sbb
pusha
xchg
mov
or
add
add
or
or
add
aas
add
jle
mov
sbb
sbb
ds
pop
add
mov
and
xchg
jmp
fstps
mov
dec
add
jg
lahf
xchg
std
pop
sti
cmp
jl
pop
pop
mov
jns
mov
mov
and
xchg
or
adc
push
loopne
cmp
js
sub
rolb
sbb
cli
dec
fwait
or
xchg
movsb
inc
sbb
sub
setg
xchg
popa
xchg
mov
mov
aaa
mov
out
xchg
cmp
cld
or
test
rcr
hlt
cs
inc
popa
pop
cld
push
shr
mov
sbb
rorl
cmpl
dec
or
mov
cmp
jae
fdivl
cvttps2pi
xor
push
jg
add
lahf
dec
sub
or
jns
es
adc
adc
mov
xchg
cmpsl
jmp
and
clc
inc
rcrb
inc
outsb
clc
cs
pop
mov
xor
xchg
aam
shlb
ds
cmpl
adc
cmpsl
movsl
mov
push
cmp
and
daa
test
jmp
push
pop
sbb
lods
adc
or
dec
dec
push
sbb
push
cs
pop
in
inc
mov
lret
out
mov
adc
or
andb
mov
or
adc
addl
ja
stos
jbe
cmpsb
inc
xchg
shlb
add
sbb
dec
adc
mov
enterw
cld
jo
ljmp
dec
push
sub
lret
popa
or
jg
or
cmp
push
test
jmp
pop
gs
jmp
cmp
or
addr16
jbe
popa
xchg
je
mov
mov
push
mov
icebp
xchg
addb
iret
sbb
testb
movsb
xor
nop
insl
inc
cmp
cmpsb
rcr
jmp
push
jmp
ret
popa
enter
pop
repz
rcll
or
mov
pop
adc
adc
fwait
push
dec
shl
enter
out
adc
pop
dec
jne
test
add
add
add
jmp
xor
imul
jp
cmp
adc
roll
xchg
jge
loopne
add
cmpsb
ret
add
push
push
sbbb
inc
pop
and
lcall
mov
mov
mov
add
push
cmpsl
add
sub
sbb
daa
pop
je
pop
mov
and
adc
push
and
cmpsl
pop
stc
or
and
aaa
or
jb
sub
inc
sahf
adc
jae
push
cmp
jl
loopne
test
mov
inc
xchg
std
adc
cmp
icebp
xor
sti
push
cmpb
sub
inc
jne
clc
add
xor
inc
and
and
mov
mov
jb
movsb
or
stos
sub
push
mov
pop
arpl
leave
cmp
das
add
lock
sub
enter
cwtl
lds
push
add
cld
cli
mov
lock
jge
out
adc
or
mov
xor
adc
lods
mov
int3
xor
mov
mov
or
lods
or
and
jns
jne
ffree
mov
jmp
rcr
push
push
test
jl
sbb
cmpsb
mov
icebp
mov
xor
jle
loopne
jle
enter
repnz
shlb
and
shll
mov
sub
inc
xchg
adc
adc
adc
add
mov
subl
aam
mov
cmp
and
push
jle
add
and
jo
xchg
cmp
mov
dec
test
cmova
cmp
jae
movsl
mov
jg
jb
jg
lret
sbbb
push
push
push
inc
test
aad
pop
outsb
fisubrs
adc
in
and
jbe
test
stos
lock
hlt
xchg
sbb
test
add
dec
jg
adc
shll
call
lret
sub
loopne
mov
or
shrb
loope
or
cmpb
sub
push
pop
xchg
cmp
std
jb
and
mov
or
sbbb
push
pop
or
mov
es
and
cmc
push
jmp
pusha
in
repnz
mov
test
mov
dec
or
jns
jl
lock
sub
add
jbe
inc
lret
sub
mov
push
mov
popa
mov
dec
push
repnz
test
nop
in
pop
sbb
addr16
mov
adc
xlat
je
cmp
mov
and
cmp
jb
testb
xchg
test
and
add
and
mov
jb
insl
xor
mov
out
push
movb
shl
jb
je
dec
xor
sub
pop
adc
daa
mov
push
or
add
cmp
movzbl
push
out
sbb
insl
inc
xchg
sahf
push
call
int3
pop
das
sbb
mov
mov
or
add
cmp
aam
fcoms
insl
sti
sbb
fmuls
pop
mov
jmp
pusha
mov
cmp
inc
pop
pop
das
dec
push
rorb
inc
mov
and
or
fstps
sub
or
lcall
and
ret
mov
and
cmovae
push
push
or
inc
movsb
je
cmp
cmp
cmp
jo
push
xchg
mov
and
and
lock
insb
jl
jle
mov
pop
inc
cmp
mov
pop
call
rorl
mov
out
pop
pop
lods
mov
lods
movsb
mov
test
or
xor
movsb
aaa
push
push
xor
lahf
jno
dec
and
insb
or
xchg
add
fwait
ret
aam
adc
mov
dec
popa
jle
adc
mov
aas
mov
js
inc
pop
nop
add
hlt
hlt
mov
xchg
push
hlt
mov
xchg
jecxz
mov
push
and
mov
enter
mov
add
xchg
out
xchg
lret
dec
adc
sbb
jg
or
inc
push
hlt
cmp
je
movl
mov
xor
push
inc
rcll
movl
or
mov
rclb
sbb
ret
add
xchg
adc
add
or
lock
cltd
inc
and
or
in
jne
or
ret
mov
xor
xor
std
adc
push
lock
adc
xchg
push
sub
sahf
mov
mov
ja
in
sbb
sub
cmp
je
movl
or
push
leave
mov
push
mov
js
inc
rcr
and
sbb
push
inc
and
pusha
pop
shrb
push
lock
ficomps
mulb
jl
aam
fistl
imul
les
lock
mov
sbb
pop
clc
popa
das
loopne
xor
lods
push
dec
das
adc
add
fstpt
les
adc
jmp
hlt
or
int3
cmp
push
xlat
push
int
xor
nop
xor
mov
aaa
add
movl
call
dec
inc
sahf
dec
and
or
insb
loopne
sbb
push
mov
ja
mov
imul
inc
ljmp
rolb
add
jo
pushf
and
jmp
sbb
inc
mov
push
mov
es
inc
cmp
push
test
push
cwtl
inc
mov
push
cmp
sub
lds
jo
cmp
add
xor
push
in
sub
sub
and
enter
cli
movsb
nop
aaa
rcrb
clc
mov
cs
jo
pop
leave
xchg
adc
mov
pop
cmp
aam
or
inc
imul
icebp
add
add
mov
add
stos
push
dec
lret
add
and
dec
pop
add
mov
push
add
cmp
daa
and
inc
pop
mov
cld
push
icebp
loop
fists
or
and
push
insl
xchg
cmp
mov
dec
inc
mov
jb
mov
sbbb
roll
lretw
jecxz
aam
or
jl
dec
loopne
jno
je
inc
mov
imul
xor
dec
push
xchg
push
sahf
test
push
and
push
xchg
lcall
jo
jle
xor
and
nop
inc
and
loopne
int3
lea
cmp
inc
enter
int3
xchg
xchg
inc
or
adc
ljmp
std
mov
push
adc
pop
outsb
and
pop
test
inc
adc
hlt
stos
adc
mov
xorl
lock
inc
add
pop
push
outsl
sbb
outsl
lds
nop
lock
das
xor
test
imul
mov
testb
mov
shlb
pop
cmpb
shlb
cmp
icebp
jmp
or
movsb
xor
add
xor
int
mov
outsl
fcoml
cmp
fistps
cltd
pop
ljmp
rcl
add
pop
aam
popf
xor
inc
add
add
xor
sarl
and
inc
popa
ja
add
lret
jmp
and
arpl
pop
dec
add
repz
jmp
clc
imul
mov
cli
cmpsb
xor
mov
cmc
mov
test
or
sarl
fcomip
ljmp
mov
jno
mov
add
push
in
call
mov
xchg
mov
xor
shrb
daa
loope
lea
mov
lea
push
popa
mov
mov
pop
and
fcmovnbe
sti
mov
or
pop
xor
mov
test
aad
mov
dec
into
dec
nop
adc
sbb
fadd
add
adc
push
loop
sbb
popf
add
mov
nop
pop
inc
insb
fsubl
std
ja
or
mov
pushl
mov
xchg
sbb
fs
js
dec
mov
xlat
test
and
push
xor
pop
addl
cmp
xchg
sub
add
ss
insl
adc
mov
pop
js
inc
or
incb
outsb
sub
xor
push
hlt
mov
add
adc
lock
cmp
dec
outsl
rol
shl
idivl
mov
push
jg
enter
in
fldenv
imul
mov
dec
add
push
inc
call
and
mov
lea
push
add
lea
sbb
movsl
sbb
push
mov
push
inc
xchg
loope
popa
orl
mov
xor
shl
lea
mov
testb
adc
push
es
pop
or
andb
pop
or
jno
insl
mov
mov
inc
std
clc
shll
jne
movzwl
jne
xor
aam
adc
mov
out
add
inc
int
or
test
push
jmp
popa
mov
cmp
xor
test
adc
push
jle
sbb
cmp
sbb
cmp
jb
push
cmp
fnsave
inc
mov
sub
push
sysenter
sbb
dec
add
jne
mov
lret
adc
dec
and
xchg
push
mov
cmp
add
aaa
jnp
fimull
push
cmp
mov
lods
inc
cmp
fwait
push
jnp
das
aas
movb
inc
mov
adc
cmpl
fcom
negb
sub
sub
and
or
inc
add
sub
fidivrl
daa
call
sub
repnz
cmp
inc
test
nop
xchg
add
stc
bound
cmp
call
inc
lods
push
orl
pop
mov
inc
inc
push
pop
fdivrs
cmp
and
jae
cmp
mov
pop
repnz
inc
aas
or
and
push
jp
dec
dec
stc
adcl
adc
into
xchg
shll
push
xchg
movb
or
add
test
mov
mov
push
fimuls
ffreep
push
scas
sub
xchg
adc
mov
adc
nop
jnp
dec
incl
push
lea
js
pushf
add
push
jno
lret
stos
push
inc
pop
repz
lods
push
rorb
adc
lea
adc
mov
imulb
sub
cmpsl
lds
jne
arpl
and
inc
sub
stos
cmp
and
test
jmp
xor
dec
sbb
je
fdivs
jg
fidivs
jb
and
mov
fs
pop
and
cmp
cmp
into
cmp
aas
fsubl
orb
outsl
cld
movb
cmp
inc
sub
hlt
das
or
lods
hlt
pop
dec
arpl
add
sbb
or
pushl
nop
imul
dec
dec
xchg
mov
cmp
and
mov
cmp
push
ret
and
add
rcl
mov
push
add
cmp
enter
ret
mov
push
adc
test
rcl
and
shlb
icebp
out
and
and
sbb
mov
push
add
inc
inc
jmp
push
pop
inc
arpl
push
add
xorl
inc
int3
loope
insl
loopne
mov
popf
fmuls
cmp
ja
and
fnstcw
push
es
inc
push
fwait
jno
cmp
int
dec
adcl
mov
pop
je
inc
mov
je
imul
iret
mov
shlb
add
pop
mov
add
repz
add
or
pop
je
mov
mov
movsl
in
imul
mov
mov
or
aam
fadd
add
je
shl
dec
cld
mov
stc
fnstenv
xorb
and
incl
call
or
mov
mov
add
aaa
push
jmp
js
ret
mov
rcr
jbe
mov
sti
and
movb
pop
inc
in
jbe
cmp
jmp
push
sahf
xchg
cltd
xor
jo
inc
jno
sbb
flds
and
add
je
pop
es
xchg
ret
pop
int3
je
mov
and
or
data16
js
xlat
adc
add
es
xor
xchg
xchg
or
dec
je
popa
cmp
push
adc
leave
or
inc
mov
sti
js
roll
xor
inc
pop
lock
cltd
pop
push
pop
lcall
xlat
adc
bound
mov
dec
or
dec
or
test
ljmp
inc
ret
pop
mov
mov
cs
sbb
cld
fbstp
xchg
aad
icebp
jge
fsubs
adc
aas
jae
xchg
stc
pushl
cmc
sbb
lea
lds
push
mov
in
xchg
add
push
push
add
sti
lds
loop
outsl
push
or
sbb
xor
push
push
add
xchg
sub
jg
inc
inc
jno
adc
jns
jmp
dec
cmpl
mov
cmp
dec
inc
inc
or
lock
adc
fistpl
sar
jp
imul
aad
je
mov
dec
or
stos
sbb
ret
dec
sbb
add
push
xchg
pop
push
ds
adc
xor
test
cmc
mov
push
pop
or
cmp
jno
mov
aam
or
sub
out
int
addr16
push
pusha
xor
push
data16
lret
inc
push
sub
test
cmp
fsts
mov
aas
arpl
test
add
mov
push
lds
gs
outsl
xor
fbstp
lock
push
cmp
dec
mov
push
add
frstor
dec
add
test
adc
fbld
div
xadd
cmp
ds
test
jae
adc
adc
adc
cmp
vmread
icebp
or
cmpl
pusha
adcb
enter
movsl
and
std
test
jmp
or
jmp
testb
imul
xor
adc
lock
mov
lea
jle
jl
cmp
icebp
mov
or
loope
je
movsb
xor
sbb
dec
adc
adcb
xor
or
and
dec
push
ret
lock
and
nop
pop
shlb
mov
ret
cmp
and
cwtl
xchg
les
xorb
pop
scas
pop
mov
in
mov
mov
stos
add
add
sub
sub
outsl
inc
or
sub
push
je
pop
lcall
add
lea
loopne
test
das
iret
add
popa
aad
xor
pop
ja
insb
sbbl
aas
sbb
push
sub
jbe
mov
mov
pop
sbb
cmp
jge
enter
mov
or
add
ss
and
cmp
pop
cmp
xchg
sarb
movntps
shlb
adc
sbb
add
fcoml
sbb
ffreep
add
push
pop
lea
icebp
jp
shrl
sbb
cmpl
shll
addr16
popa
out
dec
cmp
push
ret
loope
incb
lcall
jb
call
faddp
and
adc
dec
pusha
xchg
fisttpl
jecxz
adc
pop
add
sub
jmp
add
cmp
fldl
cmpsl
push
mov
call
lock
sbb
mov
xchg
imul
popa
loopne
xor
cmp
les
push
sbb
es
cmp
add
and
adc
adc
sbb
xor
arpl
scas
push
jno
sbb
in
xchg
xchg
loopne
andl
mov
mov
les
lret
inc
or
fbld
xor
adc
add
inc
adc
and
icebp
cmp
mov
dec
popa
xor
jmp
push
mov
push
mov
push
jne
les
add
jne
dec
push
mov
jmp
rolb
out
cld
es
cmp
rolb
iret
adc
sbb
fcoms
adc
mov
add
cmpsb
mov
mov
mov
xrelease
loop
enter
pop
add
add
adc
xlat
loope
add
cmp
mov
sbb
nop
mov
fdivr
xlat
loopne
roll
imul
pop
mov
xor
das
sbb
xchg
push
sbb
mov
jne
sbb
les
pop
aam
std
sub
fdivrs
lret
jae
incl
dec
mov
call
inc
add
fwait
test
orb
cli
mov
and
orb
outsb
ret
mov
inc
dec
je
add
xor
es
jo
xor
movsl
aaa
jmp
fldcw
add
mov
pop
jne
frstor
lock
adc
fwait
cmpsb
adc
sub
mov
call
cmp
jmp
push
js
sbb
adc
mov
cmp
cmp
mov
jg
xor
je
add
pop
cmp
inc
or
adc
data16
and
adc
iret
sbb
dec
add
pusha
push
or
psubsb
lahf
stc
sbb
xorb
mov
and
iret
pop
xor
push
add
adc
faddl
nop
lock
inc
rolb
add
jge
test
aas
mov
aas
in
or
adc
add
pop
sub
fdivs
mov
push
cs
xchg
sub
sbb
nop
les
dec
sub
cmp
xor
pop
in
jnp
pop
iret
lock
clc
xlat
enter
loope
adc
mov
sbb
inc
mov
jbe
and
int3
scas
cmpb
jbe
xor
cmp
push
pop
jnp
push
je
xor
out
in
mov
and
lahf
inc
sbbl
repz
add
ficomps
jb
pop
dec
call
loope
fmuls
inc
loope
sub
pop
mov
leave
add
sub
add
and
mov
andb
or
incl
add
inc
add
add
add
pop
push
int
call
test
insl
orl
and
insb
cld
push
punpckldq
and
and
sbb
mov
shrb
cltd
push
cmp
mov
ret
arpl
push
ja
adc
xor
jge
pop
sub
mov
and
or
or
gs
aaa
aaa
sbb
pushf
mov
std
mov
and
add
and
mov
add
or
movsb
daa
sub
add
jmp
ss
wbinvd
add
pushf
pop
stos
divl
sbb
jmp
mov
mov
mov
ja
inc
test
lret
in
daa
xchg
jbe
cltd
ret
or
xor
inc
fistps
add
push
adc
decb
xorb
mov
inc
or
pop
or
je
push
and
mov
xchg
add
mov
lds
cmp
or
lods
cmp
adc
push
call
pop
pop
cmp
jmp
adc
jg
push
enter
xchg
pusha
mov
inc
movsl
inc
sub
adc
add
xchg
sub
lcall
adc
sub
dec
imul
cmp
sub
sar
shll
pop
inc
adc
adc
data16
rcl
sarb
push
aad
jg
add
mov
fwait
std
jg
enter
jg
push
fmull
mov
xor
and
xor
adcb
inc
in
sar
call
pop
adc
loope
and
or
mov
cmp
jne
add
sbb
je
push
jae
jmp
mov
mov
test
sub
lods
pop
cmp
js
stos
and
push
fistpl
int
sub
push
iret
dec
lret
lods
jne
cmp
pop
ret
lcall
fwait
popf
dec
call
test
adc
sbb
popf
or
or
pop
mov
lods
jecxz
aas
inc
das
pop
orl
fwait
mov
adc
out
and
jg
aas
je
dec
bound
test
jae
loop
loopne
imul
mov
stos
mov
testb
push
lcall
pop
push
test
or
xchg
sub
outsb
call
mov
add
push
add
jnp
cmp
add
in
adc
xchg
jne
jge
ljmp
lea
rorb
add
enter
xchg
gs
les
ret
cmp
push
mov
mov
inc
sbb
push
addl
icebp
fbstp
inc
add
enter
cwtl
sbb
lidtl
xor
mov
jl
jmp
jge
cs
adc
ror
clc
jmp
shl
shlb
lret
outsl
out
dec
icebp
mov
jo
jb
or
ja
add
jmp
fstp
fsubl
push
jb
sbb
sbb
and
push
clc
lea
divb
insl
sti
inc
sbb
mov
lret
xor
add
inc
inc
or
je
clc
cld
jmp
mov
xchg
fimull
push
adc
inc
dec
fs
dec
dec
dec
dec
and
cld
dec
loop
xchg
cld
mov
sub
sbb
fmuls
inc
sub
mov
dec
ret
lock
aad
pop
jmp
jmp
jecxz
in
out
xor
pop
pop
inc
mov
mov
test
repnz
out
xor
pop
nop
sahf
in
cld
clc
jmp
push
sbb
cmp
fs
lds
add
shll
je
lahf
movsl
addl
xchg
xor
and
push
sbb
jnp
or
add
xor
fs
ror
out
fstps
push
popa
inc
movsl
cmp
inc
loopne
and
mov
mov
mov
mov
and
pop
fadd
inc
push
sub
jne
lret
je
pusha
lock
push
add
mov
clc
mov
add
loop
push
sub
cwtl
push
add
int3
int3
ret
xor
xor
movsb
push
stc
pop
mov
push
in
notl
mov
adc
mov
scas
out
xor
adc
ret
push
push
icebp
lock
inc
xchg
test
scas
push
lea
mov
sub
cld
mov
sub
push
cmp
pop
pop
cmp
pop
mov
xchg
test
or
jl
pop
cmp
cmpsl
pop
inc
mov
pop
fdivs
test
adc
insb
jns
flds
mov
cmpl
push
movsl
push
or
push
or
push
pop
das
sbb
xor
sub
sub
mov
xor
cmpsl
inc
loope
or
push
push
pop
pop
mov
sbb
add
loopne
je
sub
and
bound
test
adc
dec
jmp
push
xchg
mov
mov
sub
in
add
mov
cmp
out
in
addb
out
push
lcall
dec
rcll
filds
sbbl
adc
mov
je
jno
push
xchg
sub
aaa
or
push
push
inc
mov
jl
and
not
or
push
or
pop
sub
scas
xor
add
mov
fdivrl
adc
repz
adc
lods
xchg
inc
xchg
inc
ja
jb
fs
ret
rol
xor
cmp
rolb
ja
inc
dec
jne
out
xor
xchg
jne
or
sbb
cmp
mov
cmp
dec
and
xchg
lahf
or
xor
or
inc
pop
nop
outsb
add
imul
push
adc
rorl
cmp
cmpb
or
inc
or
mov
push
push
jmp
sbb
imull
cmp
imul
mov
or
push
mov
pop
xor
faddl
std
cltd
ja
idivl
xor
dec
into
jl
cmp
jle
or
pusha
cmp
mov
mov
cmp
and
sbb
adc
adc
adc
inc
lods
adc
add
mov
loope
dec
movsbl
sub
jecxz
lock
neg
add
pop
adcb
daa
cmp
rcl
xchg
je
sub
std
shl
or
pop
add
adc
jbe
mov
xchg
jne
je
cmp
movsl
dec
lods
data16
andb
push
sub
jl
xchg
jbe
shll
push
push
dec
lds
inc
mov
push
pop
inc
push
adc
jmp
sub
and
fadds
sarl
jbe
scas
mov
cltd
rolb
and
jle
or
movsl
jnp
ret
adc
gs
mov
mov
ds
jecxz
mov
int3
xor
xor
scas
adc
xchg
xor
js
adcb
repz
mov
push
dec
cmc
and
or
sbb
enter
sbb
orl
sub
orl
xor
out
xor
enter
inc
inc
xchg
cmovs
sbb
push
push
pop
push
sbb
pop
pusha
sbb
push
inc
push
je
jl
mulb
nop
cld
sbb
dec
mov
xchg
cwtl
pushf
xchg
dec
cs
and
imulb
sub
insl
pusha
cmc
mov
jns
and
xchg
sbb
jbe
cmp
enter
addr16
or
and
sub
mov
adc
sbb
pop
enter
sbb
nop
sub
mov
and
fs
test
int3
sbb
add
mov
add
ss
sub
bts
jmp
push
int3
push
ret
cs
xor
mov
jae
subb
jne
in
adc
xchg
or
sbb
mov
push
rcrb
push
sti
adc
mov
into
cmc
stc
out
je
ja
jecxz
inc
subl
xor
fimuls
in
or
pop
or
out
loopne
out
mov
loopne
adc
or
stc
shrb
sbb
xchg
push
insb
sbb
sbb
pop
lahf
inc
popa
test
rcrb
out
sub
fistpll
jne
lea
jb
push
sub
or
dec
test
or
sub
dec
popa
adc
jae
jbe
test
and
cs
pop
setle
lea
cltd
xchg
xchg
out
adc
adc
loope
pop
data16
iret
sub
and
imul
and
sti
push
pop
mov
and
xchg
inc
and
pop
mov
inc
xor
into
ret
jl
lea
and
sub
adc
sub
add
lcall
enter
sar
enter
sub
pop
push
sbb
xor
sar
sbbb
cld
sub
sbb
lds
std
mov
rclb
test
pushf
test
movsl
inc
sbb
int
loope
sbb
xor
dec
add
cmpsl
faddp
dec
dec
testb
mov
fcoms
or
outsl
unpcklps
pop
inc
mov
and
xor
mov
mov
test
xlat
or
mov
xor
sub
jmp
mov
sub
icebp
cmp
sub
pop
pop
jg
sub
pusha
xor
add
int3
loope
add
jns
icebp
sub
clc
sar
push
xchg
out
aas
lds
test
cmp
inc
add
insl
jns
test
jne
lds
add
sbb
scas
inc
cmp
inc
outsl
lods
and
push
mov
sbb
ud0
xchg
push
stos
mov
xchg
js
incl
out
sub
ret
sbb
loope
sbb
fcompl
aam
adc
adc
xorb
ret
mov
movsb
shll
je,pt
xor
pop
dec
pop
fisttpl
dec
dec
sub
xchg
inc
jmp
in
xor
jge
popa
xchg
popf
jp
lods
mov
add
jmp
out
ret
cmpsb
jge
jbe
or
mov
lahf
gs
cmp
xchg
lret
cmp
pop
and
sbb
sub
rclb
mov
mov
add
push
test
cmp
ds
in
lahf
push
or
sub
dec
lods
xor
jae
in
xchg
xchg
or
push
mov
and
insl
gs
fwait
mov
adc
xlat
push
or
mov
xor
scas
movsl
scas
add
leave
inc
insb
lea
les
fisttpl
xchg
test
sbb
push
das
jecxz
iret
xor
or
or
mov
inc
push
inc
dec
add
and
jns
fwait
xchg
test
and
add
sbb
rcrb
mov
adc
mov
and
mov
sti
std
add
shll
dec
xor
and
push
jns
or
jmp
in
shr
and
or
enterw
test
push
notl
test
adc
jo
xchg
adc
inc
jo
and
push
xlat
pop
mov
out
shll
add
pop
or
out
sub
shr
adc
incb
adc
out
sti
popa
sbb
lock
and
mov
and
int
jns
add
aaa
jecxz
sub
pop
outsb
jge
add
or
xchg
push
or
or
pusha
xor
sub
ss
je
testb
pusha
and
and
add
fstps
aas
xchg
in
fbld
pusha
pusha
loope
pop
sub
mov
and
adc
fucomp
and
and
pusha
pusha
or
js
insb
mov
xchg
mov
imul
adc
es
adc
sti
imul
xor
jecxz
cmp
mov
orl
das
adc
clc
pop
les
dec
jne
orl
cli
scas
push
arpl
xor
xor
cmp
and
subl
addl
fsubrp
daa
jmp
push
and
inc
add
adc
inc
dec
push
pop
flds
fstps
jmp
fisttpll
dec
lea
sbb
loope
inc
rclb
or
test
add
pop
sub
or
or
or
add
sti
or
push
lret
dec
pop
mov
mov
sbb
xor
push
push
fstpl
out
neg
sbb
jnp
std
loopne
add
les
sub
sub
fs
pop
jnp
xor
jp
push
outsl
fcomps
or
psubusw
pop
inc
test
int3
adc
inc
daa
nop
aaa
xor
hlt
add
pop
add
fcompl
xor
mov
adc
and
inc
rorb
jl
clc
fstpl
clc
or
cmp
scas
jbe
or
fmull
faddl
ret
xchg
shl
adc
addl
sub
popf
adc
repnz
adcb
xchg
test
add
push
cmp
in
cmp
lock
clc
mov
cmp
lahf
jmp
sbb
mov
test
and
aaa
inc
mov
adc
and
and
xchg
test
es
sbb
data16
push
add
ret
mov
in
mov
sbb
pop
mov
and
jne
or
jne
mov
or
out
or
push
xchg
sub
mov
aam
and
inc
or
dec
xchg
or
mov
xor
dec
sarb
jl
daa
cltd
pop
call
repnz
add
les
clc
adc
dec
and
and
pop
inc
sub
je
in
cmp
stc
and
jl
decb
dec
jp
dec
xchg
das
pop
dec
sub
fucomi
pop
add
dec
fsubrp
fwait
jno
dec
xor
fnstsw
push
lods
addr16
inc
or
or
mov
sbb
popa
dec
inc
cltd
dec
rorl
mov
and
pop
mov
pop
scas
adc
mov
and
cmp
test
imul
and
roll
adcb
mov
lea
push
or
and
mov
sub
adc
test
loopne
sub
or
in
gs
add
sub
sub
lods
sahf
fnstsw
adc
jns
add
sub
add
sbb
das
mov
jae
sbb
clc
add
pop
mov
out
pop
cld
adc
nop
cs
clc
pop
data16
leave
sub
cs
mov
sarl
lods
adc
cmpl
jne
rcrb
ds
gs
sahf
shlb
mov
adc
fmuls
lock
fiadds
sbb
push
pop
add
jno
push
pop
fadds
into
push
cmp
cmp
daa
in
sti
das
lahf
imul
shr
mov
leave
test
popf
pop
sub
or
mov
push
adc
jmp
sbbl
out
shll
push
or
orl
push
out
mov
mov
push
pop
mov
and
imull
or
idivl
fsubrs
sub
ljmp
dec
push
mov
aam
push
popl
mov
or
mov
loop
inc
fstps
pop
sbb
and
cltd
ret
or
insl
or
adcb
push
mov
or
sub
push
mov
leave
fwait
sahf
adc
fsubs
dec
fwait
sbb
fs
pop
or
or
jg
call
mov
fldpi
xor
leave
push
je
mov
push
mov
jo
je
lcall
imul
xlat
or
pop
add
shrl
jmp
and
sub
sub
mov
push
add
pop
and
dec
dec
cmp
imul
enter
sbb
inc
or
dec
xorb
cmp
call
icebp
cmp
das
mov
les
outsb
sbb
lahf
call
in
ljmp
adc
mov
jb
test
mov
add
jns
push
push
fwait
inc
dec
sub
lds
hlt
adc
ja
frstor
mov
jle
adc
call
ja
add
xor
ljmp
ja
lret
lahf
pop
mov
int
cmp
fdivrl
xchg
jl
cmpb
jl
xor
push
cmpb
je
dec
xor
pop
inc
xchg
adc
adcb
xor
add
loopne
and
inc
push
push
mov
push
push
pop
orb
and
mov
inc
inc
adc
fsts
stos
and
push
and
cmp
jno
add
cmp
pop
add
and
adc
push
sub
xor
xor
add
add
lret
xchg
or
enter
ss
pop
loop
fs
ja
rolb
fcmovnu
add
shr
or
getsec
mov
add
add
add
loope
or
jno
pop
or
or
inc
dec
adc
sbb
and
out
data16
or
pop
pop
int
pop
ret
cmp
pop
cld
mov
xor
call
mov
add
or
mov
fcmovbe
ss
sbb
xchg
pop
push
test
dec
outsb
dec
and
jmp
test
mov
or
push
clc
push
pop
std
in
and
push
sbb
sbb
add
inc
mov
adc
sbb
and
icebp
dec
jns
fcmovnu
jg
fimull
inc
jae
or
jae
mov
inc
sbb
push
sub
icebp
jno
bound
push
push
idiv
and
jg
cld
lock
je
stos
or
xchg
adc
cmp
sbb
mov
sub
test
jb
cmp
cltd
and
test
push
push
jge
dec
push
gs
and
and
add
push
js
push
and
pop
sbb
mov
push
pop
xor
mov
push
xchg
and
xor
pop
add
inc
inc
fs
xchg
hlt
icebp
and
aaa
or
insl
cmp
fldt
adc
test
ss
mov
or
leave
mov
popa
notb
inc
xchg
xor
cmp
fcom
xchg
test
fcoml
cld
int3
lahf
add
cmpb
test
adc
xor
cmc
les
ljmp
and
pop
xchg
add
and
pop
and
dec
fs
push
fiadds
inc
push
fadds
dec
mov
pop
cmp
in
lea
je
sub
mov
xchg
add
ds
prefetch
push
fld
cld
and
outsl
or
in
fmuls
into
in
lea
push
mov
push
nop
pop
jg
int3
cld
sbb
fcompl
inc
mov
pop
pop
adc
fwait
sbb
sbb
aam
add
dec
loopne
pop
je
mov
mov
xor
sbb
inc
push
dec
add
jo
ret
push
sbb
test
or
pop
jl
dec
mov
jne
rolb
js
test
pop
xor
cmp
or
xchg
pop
mov
adc
jo
sbb
mov
or
shr
inc
imul
dec
sub
iret
mov
mov
jb
in
inc
push
add
inc
out
or
stos
and
lods
push
lock
push
push
sbb
pushw
imul
movl
mov
jmp
mull
ret
mov
mov
mov
adc
xor
inc
mov
sub
sbb
js
das
loopne
ret
push
add
test
popf
leave
ffree
xchg
push
pop
out
or
sbb
and
lcall
fwait
outsb
cmp
ret
jl
jg
movsl
mov
xor
mov
repnz
xor
cltd
cli
js
jg
divb
mov
pop
cmp
int3
xchg
shll
fucomi
xor
int
daa
xor
cmp
cmp
fucomip
mov
jl
mov
fucomp
jae
push
movsl
pop
mov
add
push
sub
cmp
mov
mov
sub
pop
and
mov
repnz
aam
call
fnstcw
mov
adc
add
data16
std
xchg
incl
inc
dec
push
movzbl
mov
mov
sar
cmp
inc
push
push
addb
es
push
jecxz
iret
xor
cmovns
mov
pop
and
adc
add
pop
testb
add
call
jmp
xor
sub
pop
andb
pop
mov
les
jecxz
pop
ret
sbb
add
lea
inc
jo
and
or
adc
xchg
mov
cmp
stos
mov
push
fdivs
or
adc
push
sti
mov
or
jge
shlb
xchg
mov
sbb
lods
pusha
nop
add
and
lods
xchg
or
aam
imul
and
cmpsb
add
je
rolb
inc
aaa
lock
mov
cmpsl
sub
lock
pop
popa
mov
daa
inc
fildll
mov
adcl
adc
sub
nop
rorb
cmp
sub
rcll
call
add
or
inc
and
ficompl
rcll
sub
or
mov
jmp
xor
adc
shrd
jmp
push
shl
sbb
jb
or
ret
xlat
xor
and
add
les
xor
mov
cld
adc
shrl
dec
or
cmp
hlt
mov
push
jns
loopne
add
outsl
test
jmp
aas
lock
xor
xchg
add
mov
scas
das
xor
test
jecxz
add
jne
hlt
add
inc
and
fldenv
sbb
pop
sar
shll
sub
movsl
add
and
inc
call
out
mov
cltd
and
add
mov
adcl
jns
dec
adc
jmp
lea
pop
lds
lret
les
jne
mov
inc
or
shl
not
test
cmpl
fs
xchg
or
jmp
jg
idivb
cltd
insl
pop
and
mov
out
mov
cmp
sub
sbb
push
jg
sbb
repnz
xchg
ret
pop
pop
sub
adc
sbb
out
inc
jb
incb
jae
js
lahf
les
mov
imul
cmp
cmp
or
loopne
push
lock
pop
add
or
jns
sub
rep
xchg
add
cmp
roll
cmp
dec
nop
mov
sbb
inc
sbb
loope
add
cmpl
out
push
aam
xor
cmp
or
movsl
xor
lods
cmp
dec
shll
out
and
push
cld
not
inc
sbb
popf
jne
loopne
insb
mov
das
jo
mov
xchg
shl
icebp
add
jl
inc
pop
or
inc
fisttpll
push
xchg
xor
pop
stc
jo
iret
adc
xchg
aad
mov
out
xchg
dec
mov
imul
lcall
and
adc
push
aaa
mov
cmp
mov
roll
inc
cli
push
int
loopne
push
mov
mov
pop
push
mov
lcall
dec
jle,pn
outsb
xor
inc
lock
or
ret
sbbb
ret
jecxz
adc
jae
cmp
cmp
jl
push
imul
adc
dec
dec
cmp
fimull
push
add
lock
xorb
iret
into
out
cs
xor
xor
loopne
into
push
out
or
movsb
shlb
or
sub
orl
mov
jge
test
aam
ret
pop
scas
shl
mov
cmp
adc
and
mov
imul
cs
pop
cmp
and
jne
movsb
adc
pusha
sbbl
daa
in
test
test
daa
pop
push
push
pop
xchg
mov
cmp
and
add
sub
in
pop
test
sbb
repnz
pop
test
pop
pop
pusha
popa
add
sbb
sub
rclb
mov
mov
inc
jge
nop
mov
mov
mov
add
fwait
xor
shrb
es
pop
mov
mov
cmp
or
or
pop
out
das
pop
inc
jmp
mov
sub
xchg
add
jg
ficoml
mov
stc
or
into
dec
jmp
gs
or
cmp
lock
adc
jmp
out
fcmovb
pop
sub
or
sub
sub
xor
dec
test
in
mov
push
iret
andb
cmpsl
inc
fistl
lea
sub
xchg
sub
hlt
pop
cltd
mov
ds
jle
cmp
sarb
shl
xor
sub
push
jmp
dec
push
mov
test
xchg
cmp
inc
lods
jg
xchg
mov
cmp
fwait
adc
insb
and
jmp
pop
cld
push
aam
pop
mov
jae
sti
mov
ret
iret
lock
rorb
pop
jge
add
mov
pop
cmp
test
and
movsb
jne
xorb
jge
jae
sbb
rcrb
mov
or
fcomps
and
js
add
or
lea
aaa
lods
out
push
lea
nop
sub
sahf
loopne
or
orl
pop
pop
push
dec
psubb
mov
xor
push
mov
sub
mov
divb
jmp
cmp
xor
add
ja
xor
jns
pop
xor
jl
incb
dec
mov
ljmp
add
mov
shll
cld
lods
sbb
test
imul
mov
stc
push
adc
inc
pop
lock
std
jecxz
push
xchg
add
iret
push
out
pushf
jmp
push
iret
fcmovnb
lds
push
mov
dec
subb
cmpl
jg
test
xor
lcall
jge
neg
add
mov
orl
movsb
mov
js
sub
cmp
cmp
imul
cs
fadds
jmp
inc
sbb
jge
jg
cmp
sub
pusha
jbe
es
push
or
sbb
lods
inc
mov
dec
test
sarl
mov
mov
sbbb
rorl
dec
cmp
jb
mov
dec
mov
jae
movzwl
lock
push
fs
cmp
mov
sarb
mov
lret
jl
clc
xchg
enter
inc
nop
shlb
sidtl
mov
pop
sub
mov
ja
mov
ja
mov
pop
mov
loopne
sub
inc
les
and
jne
rcrb
les
test
push
stc
dec
addb
pop
cmp
ja
lahf
ja
xor
cmc
int3
add
pop
scas
pop
mov
lock
add
add
fbld
test
test
jle
xor
ja
mov
aaa
mov
incl
add
sub
xor
cmp
xor
mov
ja
mov
add
jns
subl
lcall
sub
xor
clc
mov
xchg
add
sarb
mov
test
js
adc
push
inc
iret
aam
gs
cld
pop
arpl
lock
ret
xor
lods
or
push
jne,pn
sbb
divb
dec
sub
daa
mov
negb
je
test
jg
dec
fcom
insl
fadd
loopne
shr
or
mov
lahf
dec
cli
ret
inc
mov
insl
mov
add
ja
imul
push
aam
add
lea
mov
and
cmp
add
fcmovu
out
mov
sbb
sar
pop
fidivs
jmp
xorl
fiadds
push
jmp
fimull
fimull
shlb
xor
dec
outsl
xchg
rcll
out
nop
dec
ja
pop
rcrb
dec
mov
cmp
sarl
aaa
or
sub
out
or
pop
push
into
jmp
scas
outsl
and
dec
and
mov
movsb
int3
and
cmp
int3
or
cmp
xorl
out
push
dec
in
test
sbb
mov
adc
jge
aad
lcall
syscall
inc
or
xchg
xchg
add
xchg
in
push
data16
push
adc
inc
mov
sub
cmpsb
rcl
xor
cltd
ja
xor
cmp
jl
sbb
push
ds
outsb
pusha
jge
xor
lret
lock
and
and
shlb
rcl
rcl
aad
xor
rcl
xlat
fcomp
orl
fstpt
add
std
inc
add
movb
jmp
or
push
cmp
xchg
iret
dec
jne
lea
or
adc
adc
pop
push
inc
mov
add
fistl
movups
mov
add
mov
ret
sub
add
mov
lahf
mov
push
add
mov
jl
sub
inc
push
call
sub
lock
cmp
cs
xlat
or
push
push
rol
popa
pop
and
or
add
jmp
push
and
pop
and
inc
jge
fldcw
adc
jmp
lock
rcl
sbb
jne
lea
mov
inc
adc
mov
add
popa
push
neg
push
mov
sahf
sahf
cmp
ljmp
add
add
pushf
outsb
mov
push
call
push
outsl
lock
loopne
sar
fbld
addr16
xorl
pushf
mov
jnp
mov
dec
or
cmp
les
mov
push
or
or
inc
hlt
lcall
sti
cli
ret
stos
mov
into
and
mov
pop
add
sbb
dec
dec
repnz
in
andl
ja
mov
mov
out
int3
and
or
jne
inc
testl
in
ljmp
jne
inc
inc
or
cmp
mov
push
clc
add
loopne
inc
or
sarb
push
cmp
insl
dec
rolb
push
mov
rcr
or
push
lea
nop
dec
xchg
mov
or
aad
test
movsb
xor
clc
cwtl
cmp
cmp
movsb
das
lret
lahf
movsb
add
xchg
cwtl
mov
jge
fwait
ret
jge
add
lret
sti
imul
aas
jle
jg
jne
add
imul
lock
mov
add
sti
pop
xor
cmp
pop
pop
mov
sub
or
jge
push
lret
gs
inc
inc
rolb
xor
repz
testb
adc
insl
clc
jecxz
mov
icebp
mov
or
dec
cmp
mov
inc
lods
lock
nop
xor
lock
sbb
sub
idiv
cli
inc
jl
lcall
jb
mov
mov
loopne
adc
call
movsl
cmp
mov
xor
sub
dec
add
dec
inc
mov
fisttpll
xlat
xor
mov
rolb
sbb
js
scas
xor
clc
dec
mov
rolb
lock
or
lock
mov
push
fcomps
sub
jge
pushw
sub
mov
loop
out
jge
mov
test
xchg
mulb
sub
add
imul
sbb
pop
adc
inc
push
cmp
sub
inc
out
xor
rolb
jne
fdivrs
aam
inc
mov
test
aaa
adc
imul
lods
dec
xchg
adc
jge
sub
sub
gs
cld
lea
cmp
flds
mov
mov
and
cmpsb
jg
push
js
push
pusha
and
and
int
clc
sbb
push
sbb
test
push
adc
test
iret
and
lock
jb
cmpl
xor
mov
test
movsb
adc
sub
mov
add
jne
movsb
or
popa
fnsetpm(287
loopne
xchg
sub
aad
mov
jge
add
sub
inc
xorb
movb
out
mov
inc
add
add
pop
xchg
jp
call
cmp
xchg
adc
mov
pmaxsw
sub
xor
sub
pop
jno
int
jmp
rol
xchg
jmp
cmpsl
mov
lods
xor
sbb
neg
jno
popf
ret
sub
call
push
push
imul
inc
push
sub
mov
xor
dec
and
call
mov
push
adc
outsb
les
out
insb
lret
cli
and
ucomiss
push
xchg
mov
out
add
or
sahf
loopne
mov
add
sub
adc
mov
into
or
lea
sbb
pop
dec
or
flds
cmp
shlb
ljmp
enter
mov
cmp
push
mov
jae
add
add
lds
pusha
jp
mov
add
dec
or
jp
dec
dec
mov
fisttpll
in
inc
jmp
dec
nop
dec
mov
dec
cmp
jge
lock
ljmp
cmp
xor
clc
js
jae
out
add
dec
add
add
shlb
dec
ret
mov
push
and
fisubrs
out
lcall
mov
jb
int
ljmp
das
popf
adc
lret
nop
mov
loop
add
push
add
inc
ja
ret
adc
repz
enter
or
adc
daa
call
das
mov
adc
mov
mov
mov
sbb
shlb
xor
add
mov
or
adc
in
or
jmp
lcall
imul
lods
mov
jmp
pop
pop
scas
add
shrb
ret
ja
ret
and
testl
xor
iret
add
add
lock
test
lret
in
or
and
cmp
xor
into
pusha
and
lock
push
test
pop
and
pop
pop
rorb
lret
movnti
jne
sub
out
ret
or
inc
dec
bound
push
xlat
inc
push
pop
jae
or
xchg
out
or
add
xor
loopne
add
add
lock
out
inc
or
mov
push
je
pop
pop
or
fs
pop
rcll
or
dec
pop
dec
or
leave
xchg
insb
or
fwait
jl
adc
jne
add
and
or
dec
pop
lcall
jo
cmp
lcall
das
in
fldcw
adcl
sbbl
ja
or
inc
xor
sub
stos
jg
sub
sub
and
add
sbb
jl
faddl
scas
bound
cwtl
leave
jb
push
ss
or
add
or
daa
lret
add
add
jbe
mov
mov
mov
lcall
jg
jecxz
fs
into
into
into
mov
push
and
jnp
sub
push
jecxz
idivl
pop
jb
cwtl
pop
jmp
aam
orb
clc
dec
pop
loop
or
xlat
pop
sub
pop
add
adc
arpl
pop
dec
pop
lcall
add
test
mov
adc
add
add
adc
lret
adc
into
and
je
and
enter
ret
jne
or
imul
mov
iret
adc
mov
xor
ret
jo
and
andl
daa
imul
adc
cmp
mov
repnz
add
push
mov
add
aaa
es
lock
and
mov
imul
dec
jecxz
or
pop
ret
dec
ret
push
leave
je
es
hlt
lahf
pop
mov
mov
mov
cs
mov
je
mov
arpl
ljmp
out
push
cmp
ja
add
cmp
adc
cmp
pop
cmp
leave
adc
js
imul
pop
fwait
push
pop
negl
push
bound
pop
sti
xchg
dec
aam
xor
clc
dec
mov
adc
xchg
lock
mov
cmp
lea
or
mov
inc
and
and
or
sahf
sarl
sbb
shr
inc
js
adc
scas
roll
pop
xlat
das
loopne
jnp
push
scas
push
arpl
sti
dec
jno
call
sbb
cmp
cltd
xchg
fildl
inc
out
in
xor
int
push
mov
mov
ret
adc
js
inc
testb
in
xchg
pop
div
inc
or
dec
mul
andl
lea
mov
pop
cmp
cli
mov
cli
daa
fdivl
or
fimuls
fcoml
ja
xor
xchg
addb
div
adc
in
clc
and
in
adc
add
add
inc
jbe
mov
xor
xchg
imul
sbb
negb
mov
push
cli
scas
das
push
sqrtps
jge
shl
lock
xchg
bt
lcall
out
insb
std
mov
lea
loopne
jae
sbb
jmp
test
sub
idiv
push
push
sbb
sahf
pop
imul
shlb
inc
popa
jl
sub
inc
les
or
mov
scas
and
mov
xor
test
mov
test
test
xchg
xorl
pusha
cmp
cmpb
xor
push
cld
dec
shld
cltd
lret
out
cmpsb
test
and
inc
adc
lea
xor
icebp
push
mov
pop
inc
or
push
ljmp
jbe
jb
jae
push
ret
in
xor
mov
sbb
jbe
aas
sbb
inc
insb
popf
adc
loope
leave
xchg
adc
inc
mov
popl
sbb
gs
sbb
dec
mov
adc
push
in
enter
cmp
push
sub
inc
icebp
jmp
sbb
or
sub
mov
cmp
cmp
std
and
and
test
add
inc
mov
in
ljmp
das
mov
dec
pop
cmp
filds
lds
pusha
jo
jne
cmove
nop
ret
mov
pop
sub
adc
mov
sub
mov
inc
inc
call
ret
je
jmp
jb
popf
out
inc
neg
imul
mov
dec
cmp
bound
and
add
push
loop
lret
outsl
cmpsl
or
adc
pop
insl
mov
jle
cmp
je
pop
roll
sub
cmp
sbb
push
cmp
enter
pop
scas
inc
rolb
adc
sub
inc
add
jmp
cltd
sub
dec
or
mov
push
fstl
bound
mov
shr
popa
push
dec
mov
jnp
pop
jae
enter
dec
xchg
or
insl
sbb
cmp
cli
and
add
mov
fnsave
test
jb
xor
mov
cmp
add
and
mov
cmp
fisttpll
mov
sbb
mov
and
dec
xchg
sub
jne
call
xor
in
mov
test
nop
call
sub
sti
or
jbe
xchg
das
add
outsl
addr16
xchg
imul
inc
pop
nop
int3
imul
adc
mov
push
nop
inc
fidivs
cmp
jb
ficompl
stos
sbb
or
aaa
cmp
dec
fsubs
lods
inc
dec
push
mov
or
fcompl
lock
sub
inc
or
jecxz
sub
fsubr
mov
add
add
adc
arpl
sbb
add
xor
xchg
out
push
je
push
xchg
xor
lds
xchg
jg
lret
addb
xor
xchg
xor
ja
ljmp
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
lcall
jmp
rclb
mov
sub
mov
sbb
decl
mov
test
ficompl
jmp
mov
hlt
movl
imul
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
stc
call
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
jg
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
mov
or
add
and
or
adc
jg
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pushl
mov
call
xor
push
ljmp
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
fdivs
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
push
jg
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
cmp
pushl
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
incl
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
decl
arpl
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
call
or
inc
push
imul
xorb
sbb
push
imul
lcall
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
cmp
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
addb
lret
incw
lcall
adc
sahf
gs
clc
sar
imul
push
js
or
call
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
lcall
sbb
fldenv
filds
aaa
push
scas
mov
fidivrs
ljmp
jmp
mov
xor
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
aas
sti
fidivl
add
pop
or
push
dec
push
dec
push
inc
add
push
jg
jmp
dec
inc
inc
arpl
inc
gs
jb
jbe
jb
gs
adc
imul
inc
xor
inc
jb
popa
je
inc
adc
push
imul
icebp
xor
xor
fs
insb
dec
push
push
sti
out
dec
inc
imul
pop
inc
pop
gs
popa
pop
insl
arpl
in
insb
gs
inc
push
outsl
arpl
push
inc
js
call
ficoms
jb
push
gs
outsb
jbe
je
jb
jle
add
outsl
bound
push
mov
out
dec
inc
push
push
data16
push
out
sub
jae
pop
pop
fldt
je
arpl
cltd
mov
push
imull
inc
inc
fs
push
pop
daa
push
insl
jo
mov
addr16
jo
add
ret
loopne
jns
mov
lcall
fwait
and
js
imul
jne
push
into
push
fildll
int3
popa
arpl
pop
inc
dec
sub
mov
imul
outsb
outsw
push
dec
pop
aas
sub
push
xchg
inc
jne
addr16
cs
in
sbb
mov
pop
xor
pusha
test
int3
pop
jbe
lock
insl
mov
xchg
scas
pusha
shll
fs
sub
outsl
bound
inc
mov
pop
rclb
outsb
lahf
popa
add
sub
arpl
mov
inc
pop
jae
mov
pop
fstpl
adc
mov
hlt
jg
dec
outsl
jp
insb
popa
das
xor
xor
sub
lock
imul
testl
lcall
shrl
jb
inc
daa
fsubs
loopne
jo
and
ret
inc
insl
icebp
and
jno
pop
daa
imul
ja
jge
inc
orb
push
je
aaa
dec
pusha
push
insl
outsb
ja
imul
pop
add
ret
sub
mov
popa
insl
gs
xchg
iret
bound
mov
imul
data16
adcb
outsl
jo
mov
xor
outsb
in
js
xor
scas
out
push
push
je
data16
pop
push
inc
insb
je
sti
aaa
je
nopl
icebp
pshufw
jae
push
insl
pop
jo
pop
inc
pop
push
popa
push
test
popf
xchg
rorl
insb
mov
or
ja
roll
dec
popa
inc
inc
jb
adc
negb
sbb
dec
jae
push
add
jae
arpl
push
push
hlt
mull
movsl
inc
pop
mov
jae
pop
mov
stos
inc
xor
pop
insl
mov
les
imul
sub
pusha
cwtl
dec
inc
insl
xor
push
std
daa
mov
mov
test
pop
mov
outsb
ljmp
addr16
inc
pop
fbld
xchg
jae
popa
dec
sbb
sbb
jb
jb
jns
outsl
cmc
js
jne
push
xor
jae
xor
out
lods
gs
sub
mov
imulb
mov
imul
mov
sahf
sbb
sub
rcrb
aad
push
outsl
loopne
or
das
lods
and
div
dec
outsl
and
lahf
add
sub
xchg
ja
lds
je
addr16
daa
mov
add
xchg
dec
gs
push
test
jns
popf
jmp
sbb
jbe
ja
jle
andb
les
dec
add
adc
fs
push
pop
ja
out
inc
test
push
fildll
adc
adc
xchg
lret
popa
stos
int3
push
jle
push
out
stos
xchg
popa
jae
add
jno
pop
or
cmc
jb
jg
xchg
sub
mov
lds
mov
jae
jns
incl
cmp
dec
fadds
jne
adcb
push
ret
test
adc
cmc
das
imul
pop
shrw
add
fildll
ret
aaa
jl
mov
test
das
arpl
out
loope
sbb
push
jns
call
push
pop
pop
insb
sub
ud2
outsb
addr16
add
daa
add
sub
or
roll
jb
cwtl
sub
xchg
and
pop
inc
adc
pop
dec
loope
pusha
jp
pop
push
outsb
mov
rcll
out
imul
mov
sub
xorl
sub
and
call
jle
jae
frstor
push
sub
and
add
push
gs
fadds
dec
aaa
rcrl
xor
popf
xor
rcr
addl
outsl
xor
ss
lds
leave
mov
inc
add
and
xor
xor
pop
addr16
popw
pop
inc
or
leave
outsb
lea
clc
or
cmp
bound
mov
pop
and
xor
pop
adc
dec
mov
icebp
outsl
and
and
push
mov
je
cmp
lods
loope
push
movsl
jo
jns
andb
pop
adc
cmp
insl
add
ja,pn
ficomps
pop
iret
insb
adc
scas
add
and
sub
cmp
xor
mov
out
js
js
aaa
outsl
imul
jae
loop
ja
adc
pop
mov
lods
loope
fistps
or
cmc
and
out
xor
insb
mov
mulb
mov
xor
xor
pop
pop
scas
out
jne
bound
pop
ja
test
insl
insl
xchg
fsubr
aaa
pop
bound
push
scas
lret
test
push
test
aas
pop
pop
jne
push
push
sahf
ljmp
sbb
negl
js
scas
jg,pt
push
add
arpl
xor
arpl
mov
push
ja
outsb
fs
jno
test
rcr
testb
jg
sub
xchg
outsl
jns
sub
das
fmull
fsubl
js
aas
jge
jb
jo
mov
push
aad
daa
adc
in
loopne
inc
imul
fnsave
outsl
push
jbe
neg
loope
out
xchg
sub
cmpl
jno
jp
in
push
xor
push
ja
divb
xor
push
fsts
cwtl
mov
imul
cmp
scas
gs
push
xchg
adc
push
add
sahf
mov
gs
push
add
pop
xchg
fisubs
pop
gs
loopne
popf
lock
ss
pop
ret
pop
jb
outsb
jne
adc
sub
fstl
loope
push
dec
push
mov
pop
adc
insl
les
aas
enter
jbe
loopne
rdpmc
cmp
xor
xor
xor
das
popa
popa
popa
addl
popaw
aas
push
push
push
stos
dec
jo
xor
and
out
xchg
dec
xlat
push
movsb
dec
pop
pop
imul
loop
call
xor
xor
pop
popa
daa
xlat
lea
push
add
mov
jb
fs
mov
imul
mov
jno
outsb
inc
jle
sub
popa
mov
iret
pop
mov
fsubrl
sti
fistpll
jae
cmpl
xlat
jb
mov
cwtl
aas
add
dec
push
inc
and
xor
and
and
mov
inc
xchg
sub
jb
aas
xor
add
inc
xor
push
icebp
out
inc
jns
jp
sub
xor
cmp
imul
sub
cs
cs
cs
push
popa
adc
jg
adc
xlat
dec
inc
dec
and
movsl
pop
lret
inc
push
in
add
or
stc
sub
push
inc
push
push
out
addr16
mov
sti
or
inc
dec
dec
dec
jl
push
dec
dec
inc
inc
xor
add
sahf
pop
loopne
idivb
pop
push
stos
sub
push
or
out
and
add
inc
test
cmp
push
out
lahf
sub
addr16
into
cmp
dec
inc
inc
xchg
or
sub
out
pop
outsl
jmp
mov
pop
push
gs
in
pusha
pop
adcb
xor
mov
jle
push
shlb
sbb
imul
inc
cmp
inc
gs
mov
enter
dec
pop
sbb
stos
insl
jae
dec
sarl
xor
mov
fldenv
dec
daa
xlat
dec
outsl
mov
mov
and
clc
inc
mov
mov
xchg
lods
jno
xor
sti
fistl
scas
mov
out
insl
pop
push
dec
imul
mov
or
cs
adc
out
ja
jecxz
jo
mov
pusha
ret
aaa
imul
or
mov
pop
jne
outsb
daa
xor
sub
mov
pusha
xchg
cmp
dec
xchg
push
xlat
jae
lcall
imul
cltd
xor
jo
inc
ret
inc
dec
sti
sbb
xor
jo
sub
push
mov
sub
lahf
movb
adc
inc
cwtl
dec
ja
inc
addb
mov
cmp
mov
mov
dec
cwtl
dec
pop
xchg
jbe
inc
je
loopne
je
inc
mov
jnp
sub
push
xor
mov
addb
pop
or
pushf
test
loope
insb
imul
in
or
cmc
aad
sub
cmpsb
cmp
addb
add
sbb
iret
jbe
arpl
add
xlat
inc
xor
divl
push
shlb
outsb
jbe
mov
cmp
shrb
or
and
pop
test
das
xchg
ja
fsubrs
mov
push
jg,pn
push
jae
jbe
flds
add
add
mov
adc
adc
ss
test
aaa
aam
addr16
inc
jo
adc
push
test
xor
pop
test
sti
xor
adc
arpl
sbb
mov
hlt
out
fildl
lods
cmc
imull
push
rcr
push
mov
fsubrs
inc
scas
dec
mov
in
sbb
aas
xchg
xlat
je
dec
mov
outsb
mov
xchg
mov
lds
mov
out
shrb
addr16
mov
cmp
aas
jns
jle,pn
or
nop
push
mov
fiaddl
mov
roll
arpl
fimull
mov
xchg
mov
movsb
adc
inc
pusha
rolb
xor
adc
insb
cli
mov
and
inc
and
jae
sbb
push
adc
ja
adc
and
fcompp
sub
mov
mov
push
icebp
les
aam
and
mov
data16
jmp
add
and
fwait
loop
pop
jne
sbb
inc
fadd
loop
je
inc
and
pop
or
popa
rol
fs
inc
sbb
outsb
mov
cs
push
and
push
sbb
outsb
pop
popa
jbe
pop
or
push
ret
adc
or
lea
mov
dec
insl
je
aaa
fldcw
call
imul
fsubrl
imul
mov
addr16
mov
pop
aas
mov
sub
push
push
or
pop
data16
and
and
jno
add
adc
pop
rclb
inc
addr16
inc
adc
adc
stos
imul
sub
pop
insb
stos
push
push
xor
lret
mov
lret
push
xor
ja
and
js
xchg
in
cmp
or
jge
lahf
adc
shrl
movsl
inc
aad
enter
daa
or
outsb
int
ja
add
imul
cmc
sahf
push
popa
jae
fs
push
sub
insb
mov
out
cmpsb
stos
add
mov
shl
push
push
push
jg
mov
addr16
add
adc
jne
xlat
pusha
test
xchg
icebp
dec
sti
push
inc
push
outsl
cmp
fistpl
daa
push
adc
jae
into
retw
das
outsl
loopne
imull
sbb
mov
ja
cmc
dec
or
in
mov
out
pop
cmp
jae
fnstenv
rcrb
sub
pop
add
aaa
mov
inc
push
dec
dec
sbb
pop
mov
xlat
iret
roll
push
cmp
add
cmp
imul
sub
jb
sub
inc
rcll
loopne
mov
add
mov
pop
popa
mov
data16
inc
ss
or
sbb
sub
and
push
aas
xor
dec
or
push
mov
xor
cmpb
add
je
sbb
dec
mov
sbb
jbe
cwtl
in
movsl
pop
pop
dec
inc
daa
fldl2e
add
sub
xor
subb
mov
bound
jp
imul
imul
ret
sarb
or
daa
fsub
loope
insb
mov
and
xchg
imul
jns
pop
imul
add
sbb
lret
add
push
test
pop
lahf
aaa
lcall
inc
cltd
mov
xchg
cmp
xor
or
inc
ljmp
outsl
test
fsubl
leave
test
or
adc
imul
pop
pop
pop
mov
push
inc
xlat
pop
imul
fisttpll
jae
xlat
sub
imull
adc
mov
cmpsb
push
pushf
cmp
xor
push
cmpsl
push
sub
icebp
and
pusha
push
or
jo
xor
inc
jmp
loope
arpl
dec
insb
add
pop
outsl
mov
dec
xor
mov
jge
popf
test
shll
xor
into
mov
push
in
sbb
push
add
adc
clc
sub
testl
pop
and
mov
mov
push
push
or
out
or
and
push
or
inc
cmp
or
or
insb
aad
adc
rcl
sbb
push
negb
fcmovnb
rolb
rdtsc
mov
xchg
push
out
push
loope
in
dec
into
push
outsl
aaa
arpl
in
push
dec
push
outsl
push
aas
or
sbb
into
pop
popa
push
mov
fcomp
jo
jo
psubd
adcb
imul
add
push
and
loope
xchg
xchg
aas
mov
jge
je
out
jns
inc
or
or
mov
push
outsl
or
mov
aas
imul
fcoml
adc
mov
pop
fisttpl
pop
push
popa
das
lock
push
push
insb
lds
push
incb
movaps
jbe
test
mov
dec
mov
mov
sub
sbb
jo
in
in
shlb
jae
pop
rdpmc
push
adc
push
jg
scas
push
je
add
push
imul
push
out
popf
je
dec
push
insl
push
mov
jb
popa
pop
jmp
push
arpl
mov
sbb
jle
inc
sub
jge,pn
sub
test
imul
aaa
addr16
dec
punpcklwd
aaa
adc
jno
outsb
jp
aaa
test
adc
pop
inc
cmpsl
push
rcr
mov
test
aas
cmpl
mov
sub
int3
inc
fcoml
xor
je
jnp
adc
out
mov
xorb
mov
outsb
inc
sarl
push
and
lods
pop
in
add
or
adc
sahf
flds
jns
frstor
xchg
adc
cmp
ja
mov
pop
inc
test
stos
adc
mov
push
lods
imul
add
inc
inc
gs
jo
loop
xor
and
shlb
jg
sub
fcmovbe
stos
fs
fnstcw
pop
insb
add
iret
outsl
lods
xchg
stos
mov
xlat
roll
xor
xor
push
lahf
aam
and
daa
outsb
loope
inc
jo
rcll
push
popa
jnp
sub
pop
popa
sti
jg
pop
sub
stc
icebp
cltd
jnp
les
in
jne
push
adc
ret
mov
xor
xchg
outsl
jb
mov
fmuls
push
and
insl
push
in
ja
adc
and
arpl
add
push
aas
pop
push
lcall
insl
push
add
fmull
push
shlb
rcrb
push
das
pop
test
push
ljmp
pushf
pop
jo
inc
push
imul
out
fs
mov
outsl
dec
cs
cmpl
xchg
pop
jno
or
clc
push
cmpsb
push
cwtl
test
out
ja
push
mov
gs
push
je
popa
cs
mov
sbb
xchg
push
xor
js
add
mov
jbe
mov
jo
push
mov
arpl
add
outsb
gs
arpl
sti
les
inc
inc
inc
or
xor
and
test
add
insb
xor
and
ss
mov
pop
mov
cmpsb
das
divps
fmull
push
shrb
and
ljmp
push
pop
sub
push
mov
pop
out
outsl
rorl
sub
pop
dec
push
ret
bound
dec
or
or
outsb
push
int3
xchg
push
aaa
repz
push
sbb
add
xor
sub
addl
sbbl
add
jae
lea
fdivl
jp
mov
and
pushf
sub
jbe
sub
sbb
int3
pop
sub
es
adc
dec
push
or
imulb
fisubrs
and
mov
out
ret
ja
or
call
cmp
cmc
and
xor
gs
loope
cs
daa
push
mov
mov
push
mov
and
lock
jl
imul
or
insb
repnz
insl
push
push
inc
dec
das
je
sub
mov
clc
and
inc
jno
and
jae
jae
jno
add
adc
aad
shrb
aas
sub
movsl
dec
loope
pop
jecxz
jge
xchg
or
enter
je
xor
and
xchg
out
push
outsb
xor
push
adc
popa
and
ficoms
pop
popa
mov
dec
in
fimuls
jbe
jge
mov
dec
mov
outsl
daa
xor
pusha
rcl
push
ja
jmp
sub
das
push
push
mov
sahf
pcmpeqd
iret
scas
mov
push
push
dec
push
fwait
push
adc
mov
sub
addr16
imul
push
xor
xor
jo
mov
cmp
jns
mov
mov
jae
les
jae
fdivs
mov
sub
xor
lahf
ja
lock
lods
push
jg
in
push
test
movsb
out
adc
mov
in
cs
fimuls
lea
xchg
xchg
inc
add
aas
push
lods
mov
int
ret
pop
loope
mov
lods
and
xchg
nop
mov
jnp
adc
sbb
test
xchg
data16
jae
divl
sub
ja
xlat
sub
push
jne
add
lcall
mov
rorl
popa
push
push
movb
and
gs
push
pop
and
inc
mov
push
pop
lds
inc
xchg
xor
cs
push
mov
lahf
stos
dec
and
mov
pop
or
inc
dec
push
aaa
imull
add
jb
fs
push
or
pop
ja
cmp
dec
shlb
add
out
xor
cmpsb
jmp
fisubl
add
dec
or
pop
out
je
or
fmull
lea
adc
inc
fldcw
addr16
add
inc
lods
sahf
add
rolb
add
sub
sbb
adc
pusha
gs
push
or
cmc
dec
test
mov
rcll
jbe
mov
mov
mov
idiv
das
outsb
push
dec
dec
dec
dec
dec
inc
and
loopne
jl
and
pop
into
addb
lcall
popa
jae
fnstsw
push
ds
push
jbe
add
add
sbb
fistl
pushf
fldcw
push
cmpsl
adc
notl
jecxz
mov
int
daa
pop
arpl
push
sbb
xlat
or
cld
outsl
mov
inc
ja
jne
orl
mov
cmp
ss
adc
push
lahf
loopne
andl
lret
cs
imul
fists
ret
xchg
and
out
cmp
pop
outsb
add
pop
push
mov
push
xlat
sub
push
xchg
add
cmp
test
adcb
jbe
adc
nop
lods
xchg
pop
dec
addr16
pop
inc
addr16
or
or
mov
je
lock
xor
add
aas
aaa
cmc
mov
mov
mov
cmp
lret
inc
arpl
push
ficoms
xadd
ss
pop
jno
push
lods
fs
or
test
or
test
popf
pop
arpl
xchg
dec
adc
mov
inc
imul
mov
lahf
js
add
push
jb
push
inc
cmovp
adc
inc
adc
loop
daa
inc
adc
in
daa
data16
rclb
jo
push
mov
xor
jne
sub
imull
xchg
or
jb
jbe
stc
push
orb
xor
shll
sub
js
adc
cmp
jno
outsb
pusha
movsl
push
dec
add
adc
outsl
or
inc
push
pop
daa
cwtl
fisttpll
xchg
push
dec
sbb
frstor
inc
aas
push
push
add
push
pop
popf
outsl
pop
sub
loopne
out
pop
pop
fcmovnbe
lret
aaa
push
push
imul
sbb
xchg
sub
inc
inc
outsl
push
push
orb
das
add
or
mov
lea
fs
iret
push
lods
or
rorb
ss
xchg
sub
cmp
push
inc
arpl
pop
lods
rorb
aaa
out
push
pusha
xchg
daa
mov
jne
and
and
or
jecxz
dec
mov
mov
push
xchg
dec
xchg
out
in
popf
scas
push
add
test
ss
sbbl
jge
adc
mov
outsb
add
sbb
pushf
out
insl
gs
and
add
adc
ss
mov
sbb
dec
outsl
jb
jp
addb
mov
mov
pop
ss
popa
pop
inc
repnz
mov
add
push
iret
adc
in
dec
inc
push
dec
add
inc
mov
and
js
pop
pop
jb
add
aaa
or
shlb
sbb
push
inc
push
push
push
mov
cwtl
inc
add
insl
inc
ret
test
xchg
add
jo
loopne
fmull
negb
adc
aas
push
xor
xor
shrb
mov
shrb
mov
xor
outsb
movsl
push
xchg
fldl
jnp
xor
ja
adc
inc
fcmovnbe
inc
in
dec
outsl
sar
xorb
xor
add
mov
xor
bound
push
dec
push
sbb
and
pushf
rcl
and
ja
add
and
pop
mov
inc
mov
push
mov
jg
and
das
and
add
mov
das
adc
and
dec
aaa
push
adc
pop
jns
pop
cmpsl
in
dec
std
pop
repz
xchg
aad
jne
push
stc
hlt
jns
outsl
mov
popa
imul
imul
or
sbb
mov
jg
push
or
xchg
orl
sub
push
rorb
ficoms
lahf
push
gs
fnstsw
notl
popa
punpckldq
imull
sbb
pop
jecxz
popf
adc
push
outsb
imul
paddusb
dec
push
outsl
rorl
bound
jnp
push
jnp
in
repz
pop
setns
sbb
outsb
push
outsb
dec
or
lods
jo
out
push
insb
mov
push
jg
ret
das
imul
inc
inc
mov
ds
insb
mov
and
dec
gs
das
fsubrs
mov
inc
pop
ltr
sbb
divl
addr16
dec
xor
cs
sbb
insl
ss
lods
lss
aaa
popa
inc
push
pop
dec
repz
jl
gs
insb
je
outsb
popa
insb
pop
ret
jns
gs
add
imul
lret
test
out
push
packuswb
je
sarb
inc
ds
fsubs
mov
sub
pop
insl
sbb
bound
jb
outsb
leave
das
lret
int3
fld
xchg
mov
das
aas
not
mov
pop
ficomps
aaa
mov
popa
cmp
push
fs
mov
pop
bound
adc
or
xchg
mov
push
insb
dec
cmp
or
and
js
out
pusha
mov
cmp
inc
push
jg
jl
clc
xor
jne
cmpsl
fs
lods
fst
int
addr16
push
bound
shll
jge
jo
je
into
insl
sbb
addr16
sbb
jb
push
xor
mov
jne
bound
sar
push
xchg
call
pop
orb
fs
fs
sahf
scas
imul
pop
repnz
adc
je
jae
call
mov
inc
pop
sbb
push
fisubs
es
xchg
mov
es
popa
gs
je
insl
gs
cmp
jb
int
mov
jo,pt
insb
outsl
jae
push
jbe
xchg
insl
insl
leave
fs
push
push
fneni(8087
push
lods
unpcklps
lock
pop
ljmpw
insl
xchg
fs
int3
outsl
outsb
out
sbb
ja
pop
jns
imul
xlat
rorl
clc
fs
psubsw
enter
cmpsl
js
or
or
test
push
mov
insl
leave
jl
aaa
dec
push
popa
das
popa
addr16
leave
jbe
and
gs
jle
ja
daa
or
call
push
adc
movsb
push
and
insl
bound
push
sub
outsl
lods
imul
rcpps
push
bound
gs
mov
cld
pop
adc
push
outsl
push
insl
cmpsb
push
cmp
in
push
xchg
outsl
push
sbb
mov
xlat
pop
fmul
sub
push
cmp
repz
xchg
jp
mov
js
push
popa
mov
dec
xchg
lea
aas
cmc
mov
and
jo
push
aaa
stos
xchg
adc
dec
popa
xor
dec
gs
push
aam
das
imul
push
mov
sbb
pop
clc
push
pop
inc
not
mov
xchg
jl
repz
aaa
add
jns
in
rolb
push
daa
dec
cmpsl
push
fld1
loope
daa
outsl
mov
ds
arpl
mov
rcll
fmuls
adc
imul
mov
inc
push
mov
jo
outsl
cwtl
xchg
insb
xlat
sbb
push
imul
push
cmp
popa
mov
inc
or
punpckhdq
jnp
pop
arpl
aad
inc
add
pop
andb
in
outsb
cmc
cmp
xor
or
push
push
xor
out
hlt
push
imul
frstor
sub
fldcw
fadds
inc
xor
push
scas
dec
xor
push
rorb
popa
psubb
adc
cld
push
popa
insb
outsl
je
push
xchg
punpckldq
mov
imul
stos
push
jo
pop
push
movsl
xor
pop
pop
enter
mov
je
push
cmpsb
insl
shll
push
imul
sub
push
imul
in
mov
rorb
pop
jbe
sbb
xchg
out
jno
and
xchg
out
inc
gs
jle
arpl
clc
movq
sbb
adc
push
push
mov
subl
xchg
pop
sbb
mov
in
hlt
gs
mov
je
fimull
push
push
xchg
push
data16
jae
mov
adc
push
xchg
gs
outsb
pop
data16
pop
fndisi(8087
es
inc
outsl
ja
cli
push
cmp
arpl
ja
add
pop
push
pop
sub
ja
push
popa
mov
imul
popa
mov
push
das
jo
loopne
xchg
cs
sub
stc
push
cwtl
mov
out
push
push
cmp
push
movsb
push
test
inc
xchg
sub
push
jns
push
jne
mov
insb
mov
adc
pop
fs
push
movhps
popa
insb
xlat
adc
outsb
mov
int3
jo
jg
nop/reserved
bound
push
imul
jbe
mov
push
les
cmp
jns
adc
out
loope
xchg
inc
testb
xchg
imul
push
fs
sbb
call
jne
xchg
xchg
imull
jecxz
jecxz
and
int
push
outsb
sub
add
pop
jns
push
cmc
insl
mov
jo
cmpsb
push
push
addr16
inc
xchg
popa
lcall
fwait
push
imul
dec
sbb
push
faddl
daa
push
jns
push
push
pop
push
rolb
cmp
jno
push
imul
mov
adc
xchg
jmp
gs
cmp
fimuls
add
jae
pop
rorl
jne
cltd
jmp
sbb
gs
sub
packssdw
mov
sbb
sub
sysexit
fistl
dec
negl
jns
movsl
jg
pop
loopne
push
and
add
fstl
push
addr16
loopew
cltd
popa
cmpsb
int3
pop
inc
insl
xor
fs
push
data16
nop
xor
bound
loope
scas
push
pop
jp
add
mov
push
addr16
xor
inc
ja
pop
push
push
xchg
push
fcompl
outsl
mov
jo
outsb
outsb
jns
push
lea
or
loopne
mov
pop
add
popa
jns
mov
push
pop
iret
push
mov
jbe
push
push
push
or
jnp
dec
or
sub
rclb
and
jb
ss
xlat
add
xchg
cwtl
push
insl
cmp
jno
xchg
loope
insb
enter
in
imul
or
mov
inc
testl
cmpsb
lods
sbb
pop
inc
outsl
dec
push
pop
push
mulb
push
inc
gs
cmp
dec
jbe
add
dec
les
push
popa
and
popf
pusha
sub
sbb
sbb
lret
paddusb
es
scas
insb
ret
xor
push
sbb
addb
mov
insb
jae
lahf
pop
call
gs
dec
lock
roll
adc
mov
mov
rolb
push
mov
dec
addr16
push
push
rolb
mov
fwait
mov
adc
pop
rcll
push
addr16
mov
rorb
pcmpgtd
add
fiadds
inc
push
push
cs
ds
dec
dec
lds
inc
and
mov
clc
push
pop
setp
cmp
pop
push
push
dec
or
xorb
xor
adc
fstps
insl
out
insb
lret
fstl
imul
mov
mov
fldenv
shr
xchg
jno
in
cli
push
push
lea
dec
punpckhwd
pop
cwtl
cmp
push
cwtl
push
shl
xor
add
cs
mov
cs
outsl
push
mov
sub
push
pushf
push
push
lret
xchg
sarb
sub
xchg
arpl
dec
loop
xlat
sbb
xchg
jp
inc
daa
insb
mov
mov
cwtl
mov
push
rorb
gs
add
arpl
cmp
cmp
sub
pop
popa
inc
pushf
pop
xchg
daa
fisubrl
rclb
imul
xchg
mov
insl
cmp
insb
jne
ja
inc
jo
jb
arpl
jns
xchg
popf
jmp
addr16
push
out
js
imul
pop
add
data16
arpl
push
addr16
or
push
jg
inc
cs
dec
gs
subb
mov
or
push
adc
push
repnz
jle
jb
test
popa
jp
mov
fldcw
xchg
or
fld
xchg
dec
fmull
lret
int3
gs
push
push
cld
bound
cmc
cmp
push
jb
mov
pop
cmp
dec
rclb
stos
jg
cmpsb
mov
add
push
push
xor
je
arpl
mov
and
punpckhbw
flds
sbb
pushf
addr16
jns
iret
adc
mov
pop
mov
push
adc
out
cs
inc
dec
data16
push
pop
out
push
roll
testl
mov
cmp
and
xorb
jns
pop
inc
xchg
and
jmp
inc
fs
lods
sub
das
arpl
data16
fucomp
push
add
adc
push
mov
fs
orb
popa
out
jecxz
leave
push
enter
pushl
push
push
mov
out
push
mov
add
push
ja
dec
ss
sahf
cmp
jbe
ss
and
arpl
into
push
fildl
fildll
imul
jae
mov
or
push
sbb
je
not
sbb
push
jo
dec
popa
xchg
insl
fstl
into
pop
aaa
gs
shlb
cmp
das
int
int
in
popa
pop
out
jae
xchg
ret
push
iret
je
sbb
insl
jo
insb
pcmpeqw
fmull
popa
outsl
imul
cld
dec
add
sahf
insb
mov
cmc
daa
inc
outsb
arpl
cmpsb
fs
fdivrs
dec
mov
test
lods
jo
mov
daa
inc
push
xadd
cwtl
test
mov
push
push
mov
push
je
cmp
jbe
fisubrs
mov
mov
data16
push
out
pop
jne
cmp
dec
jne
lahf
lret
mov
lea
push
lea
mov
stos
push
cli
dec
inc
jae
push
outsl
lods
mov
mov
jae
pop
enter
sbbl
mov
push
pop
aaa
rclb
bound
push
mov
je
stc
pop
xor
insl
test
add
push
dec
hlt
cld
mov
data16
mov
into
adc
es
dec
sbb
jmp
mov
sbb
rorb
xchg
outsb
or
add
push
sbb
push
add
lds
xchg
push
inc
imul
push
xor
adc
in
in
add
jge
sub
inc
pop
lock
jl
outsl
xor
sub
jo
mov
and
inc
flds
push
fmull
iret
and
cs
pop
daa
jmp
add
les
scas
push
test
pop
stc
aas
jl
add
icebp
xorl
mov
enter
sub
aaa
fnstsw
data16
cmp
bound
leave
adc
pop
mov
inc
push
out
push
fildl
fimull
and
mov
cmp
dec
imul
mov
pop
cmp
cs
sub
push
popa
xchg
add
dec
gs
push
outsb
fsubrl
mov
jae
push
push
pop
loope
jo
lahf
sub
das
je
mov
movsl
push
outsb
push
push
cmp
addr16
daa
mov
lds
decb
pop
jbe
fiaddl
jae
pusha
imul
push
push
loopne
inc
das
or
or
arpl
test
js
subl
popa
dec
push
xchg
cmp
push
pop
call
stos
dec
pop
dec
jns
ret
add
scas
es
mov
int
lods
lods
insl
xchg
pop
in
xor
adc
pushf
push
mov
push
daa
dec
push
sub
gs
mov
xlat
aas
outsl
daa
adc
test
fistps
das
jb
dec
jo
pushf
xchg
sbb
sbb
aam
cmpl
lret
das
sub
add
les
push
popa
out
push
push
rorl
xor
mov
imul
push
xchg
push
jbe
stos
cmpl
bound
adc
fldl
js
jne
cmove
jb
popa
fs
inc
mov
gs
test
jge
push
js
mov
rcr
fsubs
pop
push
jno
sbb
cmp
clc
mov
dec
xchg
sub
int
dec
sbb
insb
xchg
mov
sub
jns
push
ja
mov
ret
mov
push
je
daa
je
lock
push
pop
push
jb
jnp
lea
jbe
lea
mov
repnz
subb
push
sti
movb
adc
push
pop
push
loope
xor
xlat
pop
test
cmp
imul
cmp
daa
pop
cwtl
fbstp
pop
pop
inc
jne
addr16
mov
leave
inc
int3
nop
fisttpll
sub
or
mov
mov
pop
stc
pop
jae
inc
arpl
sbb
pop
mov
ss
inc
outsl
mov
popf
dec
popa
or
cmpsb
fucom
dec
fistl
pmullw
add
xchg
inc
push
jo
push
out
jne
mov
popa
jae
add
pop
push
dec
or
in
jno
push
daa
fmull
scas
push
bound
jl
fs
pop
outsb
jae
fisubrs
push
data16
into
test
pop
addr16
gs
dec
mov
sbb
sbb
pcmpeqw
outsl
xchg
out
jo
test
in
insl
jbe
fstl
les
xchg
push
ja
insb
ja
lahf
notl
push
mov
les
ja
inc
jne
mov
mov
push
into
push
loope
je
imul
loop
or
shrl
test
push
gs
jmp
xchg
shrl
mov
dec
pop
imul
pop
shrl
outsb
jp
imul
sbb
pop
das
and
adc
outsl
push
gs
push
xchg
inc
data16
or
scas
insb
jne
in
out
sub
push
push
aaa
mov
push
gs
jae
push
inc
outsb
roll
addr16
add
push
popa
mov
sub
dec
insl
or
rcrl
outsl
lods
cmpsl
and
inc
inc
es
push
lret
fldt
xchg
cld
pop
jp
pop
pop
inc
test
push
jbe
xor
insl
push
and
xchg
push
fcoml
xchg
push
into
push
push
sbb
movsl
xor
or
lea
pop
pop
cs
idivl
push
scas
lahf
inc
in
jbe
add
adc
fwait
loope
jbe
pop
mov
lods
xchg
or
aad
mov
push
fs
roll
ljmp
cmp
jl
insb
xchg
bswap
mov
in
sbb
push
adc
push
ds
pop
shll
loopne
jle
push
push
jecxz
pop
mov
push
push
inc
inc
insb
push
retw
fcmovnu
dec
xor
inc
sarl
push
sbb
paddb
inc
daa
rorl
sbb
mov
inc
mov
insb
rol
sub
sbb
leave
xchg
jns
imul
xor
xchg
shl
push
jne
nop
jns
push
psubsb
or
push
bndstx
cmp
mov
push
data16
ret
or
sub
gs
add
xchg
inc
jl
push
inc
scas
je
shld
shll
bound
pop
push
jbe
in
lods
push
ss
hlt
aam
dec
leave
push
iret
pop
push
jo
cltd
lret
inc
notl
push
inc
daa
ret
jno
jmp
fnstenv
pop
pusha
push
pop
mov
push
jnp
xorl
mov
and
ds
sbb
mov
or
andb
xchg
shrl
cmpl
popa
push
push
push
inc
jo
xchg
dec
inc
cmp
lods
scas
mov
adc
jmp
addr16
pop
or
and
push
out
je
ror
fwait
push
dec
cs
push
lods
imul
mov
push
jl
enter
aaa
jle
stos
aaa
inc
jae
sbb
popl
mov
jle
ss
fstl
sbb
inc
xor
sub
push
adc
nop
cmpsl
jo
pushf
push
sbb
shrb
adc
add
jae
dec
jnp
pushf
enter
test
mov
cwtl
mov
outsl
mov
mov
push
lock
bound
inc
jbe
add
imul
xlat
sub
jle
testl
das
je
aam
fnstsw
push
outsb
arpl
adc
jo
mov
pop
ss
fs
pop
outsl
push
popa
stc
das
daa
popa
adc
jnp
mov
and
lcall
insb
test
pop
jl
dec
dec
jnp
pop
das
in
mov
dec
push
leave
push
subl
jp
mov
lock
jb
push
popa
setp
outsb
and
push
jb
push
inc
cmp
push
jo
pop
xorb
mov
or
xchg
or
rorb
xor
ret
and
gs
aaa
insb
adc
aaa
push
loopne
mov
xchg
outsl
je
xor
xchg
xchg
icebp
or
loopne
imul
jmp
negl
jge
mov
sub
inc
dec
mov
sahf
push
adc
push
cmp
xor
pop
fcoml
rcr
mov
mov
mov
sbb
insl
inc
ljmp
push
insb
cmpsb
addr16
js
and
outsb
push
gs
push
ja
ljmp
fucomi
ret
popf
push
fisttpll
in
test
jns
outsb
addr16
daa
fisubs
shufps
adc
or
and
push
repnz
test
popf
nop
pop
jo
mov
sub
fsubrs
push
outsb
jo
cmpsl
or
les
lds
pop
push
jbe
nop
or
and
jns
push
insl
add
push
gs
push
xorl
push
ja
leave
pushf
bound
aaa
mov
push
pop
out
lods
adc
pop
inc
ret
fmull
into
push
das
push
enter
push
push
pop
bound
fisttpll
sub
adc
dec
push
stos
insb
push
mov
pop
insl
lret
loopne
fadds
pop
jbe
pusha
push
shll
fmuls
xlat
pop
or
cltd
mov
mov
js
mov
in
pop
lea
push
arpl
lret
xchg
mov
push
fimuls
adc
or
insl
mov
pushw
pop
enter
pop
fadds
and
nop
sbb
jb
outsl
aaa
call
push
xchg
dec
inc
shlb
lea
jno
jp
imul
mov
mov
or
pop
mov
scas
out
jne
movsb
sub
movd
push
pop
adc
je
inc
dec
cltd
pusha
xor
sbb
and
js
mov
pop
enter
rclb
ficoml
mov
je
rcrb
fidivl
es
popa
nop
fiadds
push
push
orb
push
xor
inc
fimull
sbb
scas
push
insb
jo
push
xchg
add
push
mov
or
daa
push
shrb
and
push
dec
mov
insb
gs
repnz
test
push
push
fimull
outsl
push
push
imul
enter
cld
pop
sub
imul
pop
arpl
pop
push
jnp
in
sqrtps
and
pusha
jnp
jb
je
decl
outsb
mov
adc
xchg
imul
xchg
into
outsb
jbe
cs
test
daa
arpl
daa
jne
cmp
pop
inc
jp
push
jns
push
rep
in
push
imul
imul
jle
jbe
mov
mov
addr16
sbb
inc
jb
push
das
mov
mov
xchg
hlt
fneni(8087
popa
push
xor
or
mov
sbb
cwtl
inc
movsb
jb
das
jno
pop
jb
icebp
aaa
fs
mov
mov
xchg
out
push
lahf
jmp
jno
pushf
push
mov
fs
pushw
cltd
pop
jnp
jl
test
lds
call
movsl
into
test
outsb
push
pop
adc
ds
fnsave
clc
pcmpgtw
fmull
or
push
pop
mov
cmp
out
fldl
mov
sub
imul
mov
fs
fs
insl
add
dec
mov
mov
test
push
daa
outsb
inc
fst
ljmp
outsl
jmp
add
add
dec
xor
pop
push
add
add
dec
inc
cmp
outsb
mov
xor
sbb
or
push
dec
pop
fsts
mov
xchg
dec
and
or
stos
xchg
les
xchg
mov
inc
add
dec
jb
push
xchg
fs
mov
adc
fsubl
inc
mov
scas
pusha
arpl
aas
push
std
pop
inc
and
push
inc
push
push
add
pop
adc
popa
mov
cwtl
add
cmp
cltd
fwait
push
mov
andb
sub
inc
rolb
adc
sub
push
or
rclb
aas
inc
sbb
or
add
sbbb
cltd
test
shll
movsl
mov
sub
mov
and
sub
sbb
int
inc
xchg
xchg
subb
sub
std
jae
icebp
test
dec
int3
std
push
sub
jecxz
jne
sub
pop
ja
jo
dec
loopne
sub
jg
xor
gs
mov
inc
call
cmp
push
fildll
sub
inc
fcmovbe
push
inc
imul
sbb
cwtl
adc
sbb
push
sub
lods
push
add
xchg
les
addr16
out
cmp
dec
add
pop
jo
sub
cs
or
adc
xchg
lods
and
daa
das
icebp
push
pop
sub
sub
je
jbe
adc
pushf
dec
jmp
sub
or
je
out
inc
lret
push
loopne
ss
jns
mov
push
dec
xlat
sbb
or
loope
pop
dec
push
xchg
das
xor
sti
mov
dec
add
push
and
fwait
jge
pop
fildll
ss
stos
das
sub
mov
and
addb
xchg
jno
int
dec
add
inc
add
xchg
inc
pop
cli
lock
jo
int
gs
jo
cmp
outsb
push
dec
inc
dec
push
dec
pop
dec
dec
push
and
mov
pop
pop
jecxz
mov
sub
inc
sbb
daa
ret
in
dec
fcomps
and
daa
shll
jns
adc
sub
ret
add
cmpsb
and
adc
add
ss
xor
xor
je
xor
cmp
xor
push
xor
xor
xor
pop
orl
xor
xor
enter
xor
mov
xor
aaa
aaa
inc
push
jns
push
xor
aaa
ss
outsl
popa
jg
dec
dec
jmp
xchg
mov
int
out
incl
jmp
add
pop
and
and
inc
cmp
mov
add
inc
push
mov
mov
addl
add
xchg
rolb
mov
jmp
add
inc
sbb
icebp
or
or
jmp
incl
in
mov
inc
push
dec
inc
dec
dec
inc
inc
inc
add
hlt
aad
add
and
or
push
jno
push
push
mov
sbb
xor
bound
and
xchg
jnp
decl
jbe
inc
jecxz
inc
add
inc
add
movsb
cmpsb
mov
push
push
sub
add
xor
mov
dec
mov
add
jg
daa
pop
mov
sbb
inc
and
dec
push
mov
dec
add
adc
pop
jmp
dec
gs
jp
flds
fstpt
ds
jg
and
movsl
mov
dec
sbb
push
cmpsl
or
and
mov
xchg
popa
cmp
xor
cmc
bound
jle
clc
jg
cmp
sub
xor
call
ss
bound
popa
sbb
jb
sub
xor
gs
xor
lods
adc
mov
outsl
push
inc
xlat
mov
pop
push
ljmp
add
out
mov
mov
add
aaa
and
mov
in
mov
dec
sub
xor
outsb
je
rcrl
pusha
mov
adc
sbb
flds
daa
cmp
ljmp
push
jecxz
push
inc
inc
push
inc
dec
and
dec
pop
jb
test
add
and
sti
je
js
insb
das
mov
fimuls
mov
in
xor
cmp
and
and
mov
ds
cmp
cmp
pop
insl
bound
and
push
or
jg
inc
inc
push
cmp
jno
adc
mov
and
xchg
hlt
or
cmpsl
popa
mulb
mov
mov
orl
popa
shll
or
adc
inc
ror
daa
dec
inc
insb
out
dec
enter
xor
xor
adc
inc
cmpsb
pop
xor
das
sub
xor
xor
dec
push
testb
out
imul
adc
shll
bound
mov
xor
xchg
andl
inc
xor
cmp
leave
inc
aaa
ss
xor
and
leave
xor
xor
adc
das
or
inc
xchg
aaa
xchg
xor
mov
xchg
mov
jae
sbb
jae
push
xchg
andl
dec
jae
dec
push
xchg
xorl
jae
sbb
xchg
jae
jae
and
jae
sbb
jae
xchg
jae
or
inc
jae
lcall
xor
fsub
inc
aaa
xor
and
xor
mov
xor
cmp
xchg
and
and
dec
ss
xor
andl
scas
nop
xor
das
cmp
inc
enter
adc
test
lds
mov
add
mov
inc
arpl
insl
inc
inc
push
sub
outsb
insb
jmp
daa
xor
nop
push
xor
sbb
cmp
push
nop
add
xor
add
inc
xor
dec
push
nop
add
xor
push
repnz
cmp
enter
ss
xor
test
add
xor
pop
sub
in
divl
sub
inc
dec
inc
das
sub
dec
sub
sub
ds
mov
lahf
call
dec
pusha
cbtw
adc
imul
adc
cwtl
xor
clc
jle
pop
aas
ja
movsl
or
jbe
das
sbb
xor
push
xor
shll
inc
mov
gs
or
aas
push
and
inc
add
push
and
mov
lds
and
pop
add
cltd
xor
inc
pop
scas
xchg
push
add
sub
mov
inc
popa
rcll
ja
cmpsl
inc
dec
arpl
in
sbb
mov
jl
shll
je
xor
xor
rcll
add
add
add
jo
mov
xchg
and
addr16
mov
fcmovb
push
xchg
or
ja
xchg
sub
xor
sub
add
dec
inc
push
pop
xor
popf
xor
jmp
push
push
push
add
fs
push
push
or
jg
sbb
out
lea
sub
pop
sub
mov
or
pop
add
outsb
or
data16
mov
cwtl
push
shl
jg
outsb
mov
or
mulb
push
outsl
push
add
adc
lcall
das
inc
inc
mov
push
pop
push
inc
xor
and
imul
and
loopne
xor
outsb
or
mov
lret
sub
push
cld
add
outsb
jns
xorb
push
push
xor
das
xor
inc
fadds
adc
adcl
int3
mov
xorb
or
ds
xor
and
ja
sub
fmull
mov
sub
sub
pop
dec
mov
nop
add
xor
inc
adc
dec
inc
dec
cmp
cmp
sub
daa
out
out
cmp
sub
inc
adc
pusha
ds
inc
dec
inc
pop
adc
dec
dec
push
jbe
push
jae
push
fildl
and
or
xor
cmp
mov
sti
xor
inc
jo
cmpsl
rcll
cs
cmc
xchg
pusha
pop
jns
and
sbb
mov
gs
adc
imul
cmpsl
pop
dec
mov
inc
ds
das
cs
jae
addb
je
cmp
inc
xchg
aaa
loopne
or
sub
stos
jg
xchg
push
nop
or
xor
jmp
bound
aas
push
add
inc
inc
sbb
inc
push
js
ret
mov
fs
or
inc
adc
mov
fnstcw
or
cs
pop
mov
loope
jno
enter
adc
xor
add
fisttps
stos
sub
pop
ss
push
ss
dec
andb
mov
add
inc
adc
pusha
push
popf
mov
test
imul
dec
xlat
js
ljmp
push
and
les
dec
push
addr16
fwait
xor
mov
cmc
dec
push
dec
jge
aad
insl
and
add
fildll
aad
or
jo
loope
xchg
cmp
or
loope
mov
xor
xchg
nop
or
mov
insl
jns
sbb
cs
jnp
in
arpl
sub
stos
sti
adc
js
add
mov
jb
outsb
lods
fstl
sbb
pop
jmp
inc
adc
lret
imul
insl
cmp
fstps
add
dec
push
and
in
and
call
daa
or
inc
sub
sbb
inc
inc
sub
mov
sbb
add
jns
negl
test
test
outsl
jge
jecxz
jb
ja
mov
push
add
push
in
insl
insb
xchg
mov
pop
outsl
dec
shlb
sbb
sbb
push
mov
mov
test
sbb
cmpsb
fildll
aam
out
imul
dec
dec
pop
and
xchg
shrl
lea
dec
lds
loope
add
inc
jns
pusha
xor
mov
push
insl
mov
shrl
daa
adcb
add
add
and
adc
push
dec
adc
push
add
loopne
movsl
adc
inc
jge
xchg
sbb
push
sbb
cmpsb
push
jne
sub
add
fsubs
push
push
mov
inc
xor
imul
adc
imul
dec
push
lods
subb
rcll
ja
mov
adc
cld
jbe
inc
cmp
jbe
sbb
sbb
or
ss
repz
mov
inc
sbb
adc
movsb
fld
mov
inc
pop
or
stos
lods
test
cli
sbb
jge
scas
jno
popa
mov
scas
pusha
in
jo
sub
pop
sbb
mov
mov
sbb
arpl
dec
cmpsb
fs
xor
xor
jg
out
push
pop
sbb
add
outsb
or
jae
mov
divl
xchg
add
pop
movsl
fwait
mov
pushf
xor
mov
jg
in
push
ss
pop
push
and
test
adc
cmp
into
jg
dec
or
fwait
test
xchg
add
jle
add
imul
xor
push
push
ss
aas
and
inc
fmull
pop
inc
popa
jno
mov
fildll
inc
sub
iret
ss
sub
lods
sbbb
scas
and
fadds
sub
cmp
xchg
adc
mov
dec
cs
inc
hlt
les
inc
repz
add
dec
push
or
adc
mov
stos
inc
adc
push
insb
lods
sub
sti
ret
jmp
ss
adc
lods
negb
sub
push
push
dec
dec
inc
inc
pop
lahf
and
inc
sti
call
fcomps
push
sub
iret
push
pop
cmp
push
and
arpl
mov
xchg
xchg
insb
xor
ss
and
mov
and
in
hlt
xor
cmpsb
cmp
dec
verw
test
inc
cmp
shrl
pop
add
inc
fisubl
pop
push
dec
dec
push
inc
push
dec
jg
test
push
push
push
or
movsl
test
out
cmp
jecxz
or
mov
jns
fistps
loope
filds
inc
dec
dec
pop
imul
jbe
aas
jbe
out
add
push
mov
dec
pop
xor
sub
mov
dec
mov
or
das
xor
cmp
push
push
push
dec
dec
ja
fisubrl
and
or
int
and
adc
jbe
fwait
outsl
sbb
rorb
outsl
inc
insl
xor
int3
addr16
add
push
add
mov
cmp
test
inc
data16
inc
loop
les
xor
dec
inc
das
ret
nop
or
loope
rcrb
pop
addb
or
sub
jno
rorb
arpl
or
and
inc
push
adc
add
sub
stos
sbb
movsl
inc
pop
dec
pop
add
pop
daa
mov
and
fwait
push
and
xor
aad
daa
movsl
adc
and
sbb
pop
inc
ret
sub
scas
push
push
les
xor
sub
imull
pop
pop
push
xchg
lahf
sub
insb
sbb
and
out
mov
lods
cltd
push
mov
adc
jmp
int3
mov
push
mov
test
insb
nop
pop
pop
nop
call
test
dec
push
sub
jne
or
cs
push
insl
gs
js
push
dec
inc
dec
inc
push
pop
inc
push
push
dec
push
stos
cmp
and
inc
cmp
repnz
outsl
data16
or
clc
inc
ret
rclb
insb
jns
add
sbb
icebp
adc
mov
and
push
enter
add
pusha
mov
dec
das
cmp
push
mov
mov
mov
xchg
pop
cmp
cmpsl
cmpsb
ss
lods
repnz
mov
push
pop
fildll
mov
ret
mov
dec
les
arpl
mov
push
mov
loopne
adc
arpl
sbb
divb
jg
or
adc
mov
add
icebp
test
and
push
and
cmp
pushf
or
push
imul
subl
mov
pop
aaa
inc
or
inc
or
push
push
dec
inc
pop
mov
mov
xor
scas
aaa
ja
and
cmp
dec
aam
loopne
fidivs
ljmp
arpl
mov
xor
mov
push
aas
mov
xor
outsb
push
lods
cs
xchg
test
mov
push
jg
rcll
and
dec
push
dec
pop
test
pop
pusha
imul
insl
or
xor
bound
fidivs
das
call
mov
mov
add
das
mov
jns
and
and
bswap
popa
jbe
and
push
decl
lar
pop
loopne
inc
lods
adc
or
adcl
xor
adc
adc
lahf
dec
leave
insl
add
movsb
jne
and
pop
test
rorb
cmp
sbb
orb
pop
xor
pusha
lods
push
scas
pop
aas
xchg
insl
and
outsl
aas
sub
outsl
push
inc
fsubrp
push
pusha
xor
push
ja
xchg
ja
imul
push
jne
xlat
xchg
mov
push
mov
bound
push
in
adc
pop
jbe
shlb
jo
ja
fcoms
divb
inc
data16
push
incl
inc
dec
push
dec
dec
inc
dec
inc
push
dec
mov
test
rolb
call
ljmp
mov
pop
inc
subb
pop
add
arpl
enter
sub
pop
sbb
in
xchg
pop
test
inc
dec
inc
inc
mov
jg
cmpl
xor
add
icebp
mov
or
js
pop
stos
sub
inc
inc
stos
mov
shrb
pop
mov
push
xor
adc
or
mov
and
iret
push
insb
mov
jnp
mov
ja
push
push
jne
push
sub
push
pop
dec
xlat
in
add
mov
dec
and
lods
les
sub
cmp
sub
xlat
fwait
mov
imul
mov
inc
jb
cs
test
lahf
ljmp
inc
xchg
in
add
gs
ds
sub
imul
iret
mov
insb
mov
mov
add
movsl
adc
scas
and
lods
inc
outsl
pushf
addl
or
inc
shll
add
xorb
add
mov
ja
push
mov
pop
xchg
inc
popa
push
pushw
jno
mov
push
or
add
aaa
sbb
xor
xlat
jmp
pop
jo
mov
push
dec
dec
das
add
mov
call
push
add
lds
fbstp
xor
pusha
mov
lahf
popf
mov
jo
sbb
or
imul
xchg
dec
add
clc
inc
dec
and
cmp
add
hlt
cmpsl
inc
push
outsb
daa
sbb
nop
mov
or
fsubrs
jns
insl
out
scas
popf
jge
jo
jae
push
arpl
mov
cmp
push
or
add
add
adc
fisubl
lahf
imul
inc
xchg
add
push
mov
pop
jmp
fimuls
in
jns
repnz
or
jns
gs
rclb
daa
je
addb
cmp
fldenv
ret
sub
sbb
push
stos
fbstp
xor
test
jecxz
mov
push
in
aaa
jo
jbe
add
push
lods
pop
dec
outsl
mov
push
or
or
xor
jg
out
sub
data16
inc
nop
gs
pop
xor
lods
out
call
mov
adc
dec
jno
cmp
mov
pusha
mov
aaa
add
inc
outsl
jne
jne
xor
adc
dec
sbb
mov
xor
inc
add
inc
cmp
mov
xchg
out
mov
adc
aas
data16
mov
or
addr16
adc
popa
and
pop
insw
mov
sub
add
je
pop
mov
push
adc
cs
mov
lret
xchg
test
aam
mov
imul
mov
adc
imul
subl
and
pusha
mov
lods
lea
movsl
push
or
aas
arpl
roll
inc
adc
bound
add
lods
jnp
fildll
imul
lock
sahf
jg
test
fwait
xchg
fisubl
mov
loope
lahf
push
subb
push
cld
ret
pop
pop
and
xor
inc
sti
mov
add
inc
sbb
stos
lods
test
mov
pop
pop
mov
ss
jp
aas
jg
sub
mov
inc
push
fs
dec
movsb
cwtl
push
pop
or
imul
cmpsb
add
pop
mov
add
mov
stos
cmc
popa
popa
pop
test
shll
not
iret
add
imul
stc
push
inc
dec
pushf
pop
sub
add
jno
roll
cmp
bound
mov
sbb
adc
ja
pusha
jo
jecxz
cmp
scas
fisubl
jle
push
pop
cmp
sbb
inc
out
sub
xor
fimull
jae
arpl
repnz
mov
out
inc
cmovle
test
ja
or
dec
dec
addr16
adc
icebp
xchg
rorb
insl
mov
cvtps2pi
sub
inc
lds
inc
outsl
test
test
int
mov
das
add
sub
sub
dec
shll
push
sbb
loopne
jne
popa
lods
imul
sub
sub
push
ja
jo
mov
test
orl
out
jg
orl
bound
icebp
push
inc
jnp
add
imul
gs
mov
mov
es
adc
insb
imul
or
imul
mov
scas
aaa
nop
lods
mov
xor
leave
jb
repnz
add
pop
mov
ss
arpl
push
xor
lret
push
push
outsl
push
aas
xchg
sub
sbb
das
pop
ss
cli
mov
xor
jl
jnp
jns
jge
aad
mov
jae
jl
xor
push
out
mov
sbb
push
add
pop
outsw
push
xor
add
jns
push
add
push
popa
sbb
je
jne
shrl
push
dec
push
je
test
jbe
add
fisubrs
push
insb
pop
call
jge
aas
pop
add
es
push
push
push
popf
cmp
jl
pop
bound
xor
sahf
fisubrs
xorb
divl
jne
lea
stc
data16
data16
sbb
or
mov
push
sbb
pop
push
cmp
divb
inc
pop
fs
jl
jne
pushw
jnp
or
dec
sub
jnp
inc
punpckhbw
iret
into
jne
inc
imul
xor
push
fldcw
sbb
sarl
add
jp
jno
insb
loopne
incb
inc
mov
leave
js
dec
push
push
jne
add
or
inc
inc
dec
dec
mov
iret
sahf
push
gs
jge
dec
cmpsb
daa
mov
adc
cmp
add
inc
orl
pusha
add
push
push
dec
dec
xchg
sti
bound
nop
popa
pop
xor
insl
out
dec
inc
outsl
mov
pop
ss
out
cmp
int
inc
sub
push
push
pop
sbb
imul
insb
pop
popa
imul
inc
sub
dec
dec
push
inc
pop
mov
ss
dec
pop
xchg
mov
xor
jecxz
pop
xor
add
xchg
lods
jae
ss
xor
fwait
dec
dec
icebp
mov
popa
mov
sub
mov
rorb
jecxz
xor
pop
insb
scas
fisubs
inc
inc
and
cmp
ja
mov
imul
push
in
dec
inc
dec
mov
test
outsb
addr16
jecxz
inc
add
gs
gs
and
push
dec
pop
pop
xor
stc
pop
dec
sub
xor
sub
lods
mov
imul
jne
adc
and
hlt
mov
inc
push
pusha
sub
icebp
into
orps
dec
mov
xchg
shl
push
je
daa
pusha
lock
pop
inc
dec
roll
rcrb
loope
xor
dec
push
mov
mov
inc
mov
outsb
cmp
andl
or
cmp
jmp
xchg
popa
jp
cmp
ret
andl
push
rcll
pop
cmp
aam
cmp
mov
loopne
jg
xor
data16
xor
mov
shrl
loopne
mov
ret
insl
jo
test
dec
outsl
dec
inc
jne
lds
push
xor
or
add
arpl
jne
mov
push
outsb
pop
in
sub
fisubl
dec
push
in
adc
aas
inc
dec
pop
mov
cmc
adc
jns
insb
out
mov
arpl
iret
stos
int3
adc
sub
xor
vmwrite
scas
mov
dec
xchg
jae
imul
push
iret
dec
test
loop
fidivrs
sub
popa
inc
inc
mov
das
addr16
mov
add
mov
push
sub
or
push
imul
lret
jle
cmp
inc
dec
inc
outsb
pavgw
fadd
add
inc
dec
dec
sbb
fcomps
ficomps
dec
imul
adc
add
pop
scas
scas
push
aaa
jb
test
ds
cmp
pop
lea
mov
push
add
std
xor
dec
xor
jbe
in
push
aad
add
dec
in
js
add
jb
insl
stc
mov
add
jo
and
stos
push
imul
cltd
dec
add
imul
cmc
mov
add
inc
imull
push
sbb
aas
roll
loope
arpl
jb
jns
add
xor
cmp
outsb
add
fsts
push
ja
imul
jg
cmp
xor
dec
lea
push
sbb
pop
out
cmp
inc
les
pop
js
pop
mov
push
inc
jno
xor
bound
jle
and
mov
cwtl
push
sahf
push
pop
pop
dec
dec
xor
shll
dec
inc
inc
inc
shll
push
pop
dec
shll
push
bound
push
push
sarl
jg
inc
xchg
ret
sahf
fmull
adc
dec
pop
add
pop
inc
sub
jnp
pop
jge
rclb
ret
or
or
xor
fdivs
jno
xchg
insl
and
aam
inc
or
mov
shll
pop
cmp
pop
sub
inc
pop
adc
xchg
mov
mov
call
je
lret
and
adc
adc
fstl
inc
dec
add
sbb
iret
push
data16
daa
adc
fstl
mov
cmpsl
adc
movsb
stos
pop
add
or
dec
pop
pop
adc
les
fsubrl
bound
mov
hlt
popa
xor
pop
xor
pop
std
mov
xchg
pop
arpl
and
jbe
dec
jecxz
mov
or
add
and
fs
or
push
das
inc
xchg
xor
ss
pop
xchg
mov
and
lret
push
sbb
xchg
adc
push
mov
rdtsc
ret
push
cmp
popl
arpl
fs
xor
lods
test
xchg
ret
sub
aas
lods
js
push
jno
sub
and
and
pusha
inc
test
and
jmp
mov
fisttpll
mov
jbe
push
call
xor
push
xchg
inc
or
dec
sub
icebp
add
pop
or
inc
shll
popf
jle
push
test
sbb
jae
lea
add
icebp
pop
pop
mov
add
add
inc
sahf
dec
cmp
popa
nop
xor
sbb
xchg
sbb
adc
addl
pusha
xor
xlat
stos
pusha
daa
mov
fsts
push
mov
test
sbb
add
xor
xchg
les
jne
sbb
add
adc
or
addb
movb
sub
sahf
lea
mov
fsubl
jo
addl
jo
mov
jb
inc
cmp
lods
cltd
xchg
call
arpl
push
mov
adc
xchg
loopne
dec
stos
xor
rorl
mov
and
pop
pop
mov
sub
mov
cmpb
mov
inc
lock
adc
push
in
xor
imul
mov
xor
fsubr
add
in
push
adc
popa
or
mov
add
sub
mov
adc
das
pop
insb
add
jo
dec
push
cltd
das
sub
pop
sbb
and
sub
add
and
dec
out
inc
and
dec
daa
sbbb
xor
insb
fwait
xchg
dec
cmp
jnp
fnstcw
push
stos
imul
pop
push
dec
js
mov
iret
and
daa
push
dec
cmp
arpl
pushl
call
js
fs
push
xorb
or
push
push
fimull
arpl
sti
add
xor
je
outsb
xchg
xchg
lods
jb
popa
xor
push
movsl
xor
mov
inc
or
add
daa
or
roll
jno
jmp
lods
jno
sbb
xchg
daa
mov
sbb
fwait
out
mov
add
push
inc
enter
pop
mov
inc
xor
xor
or
mov
push
lods
out
pop
and
mov
jle
cmp
insb
movsl
and
push
js
jbe
outsb
xor
popa
xchg
xchg
sub
add
dec
mov
or
dec
mov
insb
lcall
sbb
outsl
popa
pop
push
arpl
and
sub
add
mov
lea
push
aas
icebp
sbb
dec
mov
and
or
jno
xor
insb
scas
inc
xor
inc
enter
xchg
bound
xchg
jmp
sbbb
sub
adcb
rorl
imul
pop
and
adc
fldenv
xchg
ficoms
repz
inc
jne
lret
push
lds
insb
dec
lods
pop
inc
pop
cmp
adc
mov
fsubrl
out
adcb
add
push
fsubs
imul
int3
mov
xor
insb
je
lds
ja
sbb
mov
and
sbb
fldt
sbb
xchg
add
addr16
lods
dec
test
jl
cmp
bound
sub
pop
jg
jnp
or
lods
pop
dec
adc
sahf
and
or
popa
in
ss
xor
push
leave
rolb
mov
sub
outsb
movl
outsl
sbb
push
add
es
dec
or
loop
dec
test
filds
cmpsl
fsubs
dec
pop
rcrl
test
jbe
mov
and
xchg
adc
mov
in
sub
andl
mov
add
or
mov
incl
jb
xor
xor
mov
sbb
or
pop
jb
sbb
data16
or
pop
iret
adc
mov
pop
adcb
xor
mov
adc
inc
jbe
lret
into
lret
pop
xchg
jns
cmp
push
inc
fists
jae
jbe
mov
push
sub
or
outsb
or
add
xor
arpl
pop
test
insl
icebp
xor
xchg
dec
outsb
insl
popa
aad
lret
pop
imul
cmpsb
sbb
jg
mulb
inc
add
into
movsb
ret
lea
mov
mov
lock
aaa
or
test
jno
movzbl
and
mov
mov
cs
mov
or
mov
cmpsl
jl
xor
mov
pop
push
sub
loopne
adc
bound
pusha
pop
jmp
jno
inc
rorl
jno
out
xor
divl
fbstp
inc
and
inc
inc
inc
inc
dec
dec
dec
adc
sbb
push
pop
test
arpl
or
jmp
aad
sub
inc
adc
cmp
insl
addl
les
push
dec
inc
lahf
inc
jb
dec
jae
and
jno
aam
sbbl
sbb
lods
aam
ja
add
sub
pop
ffreep
push
sub
inc
jo
lock
leave
outsb
jns
xchg
andb
addr16
test
mov
aas
rol
test
icebp
loope
outsl
adc
and
dec
adc
and
push
dec
push
and
cmpsl
adc
mov
add
pop
shlb
sbbl
jne
jg
cmp
or
lock
add
popa
ret
lock
imul
push
dec
push
inc
pop
adc
cs
jno
imul
inc
out
add
bndstx
nop
jo
pop
cltd
push
inc
and
sub
jle
les
outsl
outsl
mov
fildll
push
jns
push
and
insl
imul
or
popa
mov
rcrb
insb
imul
cmpl
fsub
jne
jnp
rcl
mov
gs
adc
out
sbb
mov
daa
and
mov
jnp
pop
xor
xor
in
xlat
jne
jae
stos
sbb
xchg
mov
jae
push
addr16
mov
cmpsl
daa
pusha
popf
sbb
sub
sub
add
push
xor
insl
push
adc
jo
daa
xchg
rcrb
adc
fsubl
xlat
mov
jne
xor
loop
dec
add
in
adc
data16
mov
shl
dec
jbe
insb
ja
cltd
popf
lea
pop
stc
and
jns
push
jg
sbb
inc
push
push
mov
ss
dec
dec
jp
and
xor
into
inc
dec
in
sbbb
sbb
int3
fs
push
ss
xor
testb
cs
inc
jne
sub
rclb
inc
in
sbbl
mov
movsb
inc
lcall
leave
pushf
push
jl
push
imul
sbb
test
cmp
or
loope
rcll
mov
les
mov
js
call
imul
jo
scas
inc
mov
dec
mov
sub
mov
push
inc
sbb
xchg
push
in
ds
cmpsl
inc
or
push
mov
test
mov
mov
sub
sub
xor
push
push
fcompl
mov
cmp
adc
dec
out
insb
cld
and
adc
test
inc
shlb
add
add
sarb
and
fistpl
jnp
add
aas
rdpmc
add
movnti
xor
andb
arpl
insb
add
cmp
and
add
inc
add
cs
mov
mov
fisttps
arpl
cltd
flds
push
push
inc
sub
dec
push
negl
fmulp
push
gs
pusha
jnp
aaa
dec
pop
push
sbb
js
sub
sbb
push
cmc
and
xor
or
xchg
jb
ret
mov
bound
mov
xor
out
cmpsl
jb
or
sbb
outsl
insb
rorl
pusha
gs
sbbl
je
bound
std
cmp
out
xor
xchg
cs
aas
mov
and
push
rolb
dec
mov
in
pop
add
movsl
push
dec
insl
bound
and
sub
dec
scas
mov
or
add
push
and
cmp
inc
jns
push
push
sbb
movsb
insl
inc
sbb
gs
xchg
xor
std
outsl
fdivrl
cmp
sub
sbb
das
arpl
push
scas
loopne
test
popa
sub
movsl
add
sbb
mov
lea
adc
out
xor
cmp
jae
idivl
sbb
inc
popa
pop
xor
fstpl
dec
jns
push
filds
jne
adc
aaa
pop
sbb
cmp
xchg
shll
xchg
xor
subl
lahf
dec
dec
aaa
mov
ja
outsl
xchg
cmpsl
nop
imul
je
add
push
jno
dec
lock
cmpsb
nop
xchg
sub
pop
cmpl
mov
mov
les
popa
pop
pop
push
outsl
push
add
popa
jb
push
cmp
popa
xor
test
insl
rcl
mov
in
mov
xchg
imul
pop
or
je
push
push
leave
inc
mov
faddl
adc
inc
push
add
xor
and
sbb
push
cmp
jne
jae
add
cmpsb
scas
xor
stc
movsl
shlb
sub
test
or
imul
dec
xchg
outsl
add
dec
or
add
into
or
jo
and
adc
pop
push
dec
adc
orb
xor
push
sub
jne
inc
aaa
aam
in
sarb
add
add
adc
add
add
add
lock
std
jns
add
pop
and
push
pop
pop
or
aaa
mov
push
pop
mov
sub
pusha
push
mov
jno
add
pop
sub
add
popf
flds
xor
sbb
cmpsl
mov
xorb
insb
test
mov
adc
adc
dec
jl
dec
push
inc
insb
jae
push
subb
push
inc
loope
sub
mov
scas
add
push
in
or
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
movl
sub
cs
xor
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
aam
fdivr
pop
pop
pop
pop
pop
pop
loopnew
movsl
pusha
loope
in
add
cmp
insl
imul
xchg
mov
js
jp
jl
jle
pop
jg
ret
lcall
loopne
out
fstpt
fiaddl
or
rol
das
dec
mov
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
xor
imul
fildl
mov
scas
popa
dec
lds
xor
inc
popa
js
add
dec
bnd
push
add
ja
sub
add
stc
or
jle
push
inc
incl
dec
jae
add
or
inc
dec
rcrb
aam
xor
divl
xor
cmp
inc
mov
and
adc
stos
lods
adc
xchg
and
and
xchg
pop
dec
add
test
nop
or
adc
add
cmpb
add
add
and
sbb
mov
add
add
insl
loop
add
add
stos
lods
and
add
xor
incl
adc
push
add
pop
inc
mov
jg
lcall
add
addl
mov
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
call
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
div
clc
stc
cli
sti
cld
mov
jno
adc
jmp
bound
mov
xor
push
inc
dec
sub
inc
add
out
push
and
jmp
sub
insl
jo
es
movsb
mov
popa
icebp
sarl
or
inc
xchg
xor
pop
pop
arpl
xchg
sbbb
jle
adc
xchg
inc
add
or
sub
pop
adc
daa
fildl
mov
push
push
mov
xor
jecxz
ja
std
push
js
jo
add
out
add
dec
and
fdiv
scas
pop
das
das
adc
xchg
fists
notb
dec
outsl
jbe
les
dec
pop
adc
dec
sub
xchg
xor
outsl
dec
jecxz
testb
push
clc
adc
jg
insb
sub
inc
jne
fstp
fstpl
sahf
xchg
xchg
jbe
into
outsb
cmp
dec
fcompl
xchg
out
push
jmp
mov
fdivs
push
gs
push
jne
lret
test
push
ja
ja
pop
xchg
pop
dec
inc
ds
inc
jo
jbe
and
movsb
scas
lea
pop
xchg
or
push
shrb
imul
and
aas
inc
mov
or
dec
inc
jb
jns
daa
dec
adc
pop
xchg
imul
data16
mov
and
lea
call
pusha
insl
inc
pop
jbe
cmp
jo
jno
cwtl
fs
pop
push
inc
jbe
push
adc
imulb
or
and
fs
aam
cmp
imul
push
pusha
sbb
pop
push
or
dec
pop
movsb
fcomps
add
inc
add
push
push
or
cmp
push
sbb
cmp
jmp
fs
addr16
subl
inc
jno
adcl
imul
fistpl
push
push
push
dec
testb
jne
je
pusha
sub
lea
push
fildll
dec
jge
test
aaa
test
pop
push
lods
mov
xor
xchg
ret
in
dec
test
bound
xchg
jg
adc
jns
pusha
push
or
dec
or
and
pop
outsl
xchg
pop
sub
ss
xchg
mov
popw
pop
pop
jle
mov
cmp
cmp
push
xor
push
sub
es
inc
popf
push
data16
sub
ja
mov
jbe
add
ja
add
fisubrl
sub
sub
or
sub
ret
or
cmpsb
xchg
enter
ds
cmp
movsl
xchg
bound
or
inc
addl
xor
ret
int3
cmpb
sbb
insl
add
mov
popa
sub
in
jge
imul
sub
push
mov
add
cmpsb
push
fidivl
inc
xchg
push
inc
dec
pop
push
inc
divl
dec
adc
push
mov
insb
lcall
add
add
data16
dec
lock
shll
push
in
cmpsb
imul
int3
enter
rcrl
or
mov
xor
roll
lods
test
mov
dec
cwtl
xchg
nop
mov
xor
je
pusha
push
pop
ss
sarl
sbb
dec
fsubl
pushf
jl
cmp
shrl
sbb
dec
shlb
xor
mov
mov
dec
roll
out
fmull
dec
shll
mov
and
dec
sbbb
int
push
movsb
mov
pop
sub
adc
aad
push
inc
push
mov
bound
outsb
push
xor
jge
jb
sahf
ss
dec
mov
or
cmp
scas
out
imul
aas
sbb
cltd
push
mov
or
pop
ljmp
adc
and
xor
pop
pop
push
popa
pop
push
adc
and
or
das
mov
cs
mov
add
and
inc
dec
push
dec
dec
inc
add
cs
xchg
push
inc
dec
dec
dec
push
push
and
push
iret
xchg
inc
xchg
mov
imul
push
push
mov
leave
cs
testl
das
fisttps
push
subl
mov
out
or
cltd
in
sub
inc
add
push
rolb
das
inc
adcb
inc
xchg
xorb
clc
cmpsl
aaa
add
add
xchg
fbld
push
cmp
inc
push
jg
fsubrs
dec
push
daa
ds
xchg
pop
andl
repnz
xorb
pushf
pop
inc
mov
jb
adc
mov
rorb
call
nop
dec
int3
mov
pop
mov
add
push
push
lahf
mov
add
fsubs
imul
fsubrs
cmp
pop
cs
cmp
adcb
lock
testb
sub
push
mov
add
fdiv
mov
add
fsubrs
or
sub
add
sbb
int3
aaa
test
addb
inc
pop
inc
cmpsl
test
dec
cld
inc
popa
add
pi2fw
push
push
jp
push
fs
or
cs
add
push
in
cmpsb
lods
inc
daa
inc
adc
mov
shlb
inc
ror
add
nop
add
dec
jp
xor
repnz
lods
add
pop
push
aam
inc
jb
cmp
push
cld
repnz
pop
in
and
jg
xchg
inc
and
in
inc
push
add
mov
enter
adc
jnp
mov
inc
aas
inc
cs
fiadds
cmp
mov
mov
aaa
mov
fiaddl
push
int3
aas
inc
icebp
fwait
sbb
push
add
push
inc
pop
inc
cmp
imul
decl
push
je
add
je
nop
imul
fmuls
in
xchg
inc
push
xchg
das
xchg
lret
sbb
pop
mov
pop
or
inc
xchg
nop
or
aas
fwait
cwtl
fdivs
enter
inc
add
popf
mov
in
icebp
shr
cmp
sahf
shll
call
aas
mov
mov
mov
xchg
push
lahf
fdiv
add
jl
test
ss
pop
push
fbld
inc
pop
push
addb
add
pop
inc
xlat
aam
add
jg
daa
xchg
or
adc
and
pop
xor
or
cmp
aas
push
int
sete
dec
jb
daa
mov
jns
jo
sarl
mov
xchg
fdivrl
inc
out
jmp
xchg
mov
outsl
mov
adc
add
pop
add
aas
mov
popl
or
jp
aaa
xchg
push
adc
dec
mov
sbb
insb
dec
jbe
inc
sub
insl
and
jl,pt
pop
mov
jno
repnz
insb
nop
add
ss
lds
seto
jns
les
xchg
movsl
pop
sbb
inc
dec
add
add
lcall
subb
inc
pop
add
lcall
add
rorl
add
pop
sub
xor
in
inc
pop
add
xor
mov
jo
dec
jae
fs
add
call
push
xor
xchg
cmpsb
mov
js
add
push
xorl
xchg
cmc
push
jmp
jno
les
sub
xchg
pop
jecxz
sbb
xchg
test
test
and
ja
fidivl
js
imul
fldt
lcall
aam
rclb
outsl
pop
push
cwtl
cmpsb
imul
rolb
mov
jo
and
push
mov
lret
into
pop
loope
push
add
outsl
dec
dec
inc
mov
inc
dec
ja
ret
outsb
add
cmp
sub
ficoms
push
inc
xor
dec
shll
and
adc
imul
cmpsb
imul
cmpsl
jo
push
cmpsl
mov
shll
xchg
mov
xor
je
insb
cmpsb
imul
inc
xor
cmpsb
imul
push
cs
fs
call
ss
imul
aam
mov
cmpsb
mov
push
lods
push
movsb
pushf
cwtl
xchg
cmpsb
imul
imul
dec
imul
push
or
add
fnstenvs
cld
arpl
hlt
lock
fcom
enter
dec
sarb
cmpsb
push
movsb
pushf
cwtl
nop
mov
js
jo
push
lcall
imul
mov
mov
lock
outsl
fmuls
rcl
mov
imul
cwtl
xchg
lcall
mov
imul
inc
cmp
xor
and
shll
adc
add
fs
cmp
popa
mov
xchg
adc
cld
mov
add
movsb
sti
xor
push
scas
push
rorl
mov
ss
add
scas
daa
cmp
fiaddl
es
fcom
xor
shll
mov
xor
rcrl
shll
inc
cmp
dec
shll
sub
sbb
imul
cmpsb
imul
imul
cmpsb
imul
imul
insl
lcall
push
in
cmpsb
imul
imul
cmpsb
imul
lcall
imul
in
loopne
imul
imul
cmpsb
imul
lcall
mov
cltd
lds
loopne
int3
les
mov
mov
lcall
imul
imul
xor
clc
lock
dec
shll
mov
xor
rcrl
dec
shll
dec
shll
sub
dec
shll
dec
roll
call
dec
shll
pushf
nop
xor
shll
jl
push
rcll
cmp
and
xor
sbb
or
ret
cmpsb
imul
cmpsb
imul
test
pop
lcall
xor
and
cmpsb
imul
shll
les
mov
mov
dec
shll
js
push
rcrl
inc
cmp
ss
shll
and
or
rorl
shr
rolb
loopne
shlb
mov
dec
shll
shll
push
dec
mov
shll
cmp
and
out
dec
xor
rol
push
in
xor
shll
sarb
rcrl
shll
dec
cmp
imul
cmpsb
imul
lcall
lcall
cwtl
nop
mov
cmpsb
imul
push
inc
cmp
sub
sbb
or
clc
mov
in
in
ror
shll
mov
dec
nop
mov
dec
shll
push
dec
inc
xor
xor
shrl
and
adc
cmpsb
imul
cmpsb
imul
cmpsb
imul
pop
push
dec
inc
xor
cmpsb
imul
dec
shrl
in
loopne
enter
rol
mov
shll
jo
xor
shll
pop
push
dec
cmp
xor
shll
and
adc
cld
mov
cmpsb
imul
cmpsb
imul
push
cmpsb
imul
mov
add
mov
xor
rcl
int3
shlb
cwtl
nop
mov
dec
shll
pusha
pop
dec
inc
shll
sbb
cmpsb
pop
ss
or
clc
mov
imul
cmpsb
imul
je
fs
lcall
cmp
xor
cmpsb
imul
mov
cmpsb
imul
cmpsb
imul
cmpb
pusha
lcall
cmp
sub
cmpsb
imul
lcall
loopne
rol
imul
imul
imul
cmpsb
imul
xor
cmpsb
add
mov
call
dec
fcom
enter
xor
shll
mov
xor
shll
pop
push
dec
dec
shll
sbb
lcall
mov
in
lcall
mov
mov
mov
imul
cmpsb
imul
insl
lcall
out
mov
lcall
fcom
cmpsb
imul
imul
cmpsb
imul
imul
dec
rcll
mov
mov
push
call
xor
ror
sarb
test
xchg
mov
xor
mov
pop
dec
xor
shll
cmp
sub
int
dec
rcrl
or
mov
in
in
dec
shll
aam
mov
shrl
dec
shll
dec
inc
xor
shll
sub
sbb
imul
cmpsb
imul
imul
cmpsb
imul
lcall
int
imul
dec
shll
aam
shlb
cwtl
mov
jo
pop
push
dec
xor
shll
xor
and
dec
mov
rcll
add
scas
push
in
in
dec
shll
aam
sarb
movsb
pushf
xchg
mov
xor
test
fs
xor
shll
push
dec
cmp
shll
or
cmpsb
imul
cmpsb
imul
cmpsb
imul
jo
pusha
push
dec
lcall
and
cmpsb
imul
lcall
movsb
pushf
xchg
imul
imul
imul
mov
hlt
stos
in
in
aam
xor
ror
les
dec
movsb
cwtl
nop
mov
xor
push
xor
rorl
xor
and
xor
adc
add
stos
lock
rol
mov
mov
movsb
pushf
mov
je
fs
lcall
cmp
sub
imul
test
hlt
in
in
fmuls
xor
aam
shlb
pushf
xchg
mov
je
pop
push
dec
dec
shll
sbb
lcall
test
in
lcall
mov
imul
imul
cmpsb
imul
imul
shll
enter
shll
test
xchg
mov
xor
roll
shll
xor
xor
shll
sbb
or
imul
cmpsb
imul
imul
cmpsb
imul
lcall
dec
shrl
add
movsl
in
loopne
shlb
test
nop
shll
fs
dec
shll
xor
ss
shll
adc
or
movsb
imul
imul
imul
cmpsb
imul
lcall
fisubs
mov
cmpsb
imul
imul
cmpsb
imul
imul
insl
lcall
push
call
loopne
enter
cmpsb
imul
cmpsb
imul
lcall
dec
shrl
add
mov
xor
shll
shlb
pushf
xchg
mov
jo
pop
push
dec
inc
xor
shll
xor
and
imul
cmpsb
imul
imul
cmpsb
imul
pop
push
dec
inc
cmp
sub
sbb
or
mulb
pop
push
pusha
jl
jmp
jnp
pop
xor
shlw
idivb
push
incl
stc
das
mov
or
cld
aaa
lods
movsb
add
js
adc
cmpsl
shlb
lods
or
incb
lea
or
jg
add
mov
mov
add
inc
subb
fistl
and
adc
sar
cmp
je
push
add
adc
xchg
lods
xlat
add
leave
andl
daa
sbbl
jne
ret
call
push
pop
pavgb
adc
ret
pop
pop
pop
pop
push
lcall
xchg
cmp
xlat
rep
mov
stos
push
push
shlb
push
push
sbb
push
ss
mov
rol
mov
frstor
lahf
adc
sub
cs
jbe
fnop
outsb
je
push
push
adc
pop
enter
fisttpll
inc
stc
jmp
adc
bnd
jg
add
inc
add
xor
pushl
mov
xor
aaa
adc
add
clc
and
jae
dec
dec
inc
and
mov
push
pushl
in
pop
and
enter
inc
inc
jl
int
in
add
sti
popa
les
cmovno
or
xchg
push
in
inc
jg
jbe
xor
jle
andb
adc
mov
push
push
jbe
and
insb
mov
sbb
push
incl
and
fsubl
dec
sbb
push
fldt
ret
adc
sub
mov
out
inc
jg
jno
xor
xor
push
and
das
daa
fcoms
aaa
or
push
inc
dec
and
sbbl
adc
cmp
xor
les
dec
push
xor
jg
incb
aam
pop
mov
adc
aad
bound
ficoms
sbb
fdivp
movsb
lods
add
adc
inc
cwtl
add
aaa
sub
inc
jg
sub
sbb
xor
pop
cltd
and
sub
out
add
in
je
test
jg
sbb
sub
je
mov
push
decl
cmp
dec
push
outsb
push
add
sub
test
xchg
movsl
ja
rcll
ret
jg
jle
lods
mov
push
lcall
jg
adc
add
xor
jns
xor
test
je
adc
jle
mov
xchg
add
add
jg
stos
roll
jmp
pop
dec
xor
ret
add
cli
lret
jmp
cltd
cwtl
cltd
cltd
ret
jg
movsl
jmp
xchg
imul
fsts
outsl
call
ljmp
or
mov
lea
adc
std
call
xchg
rol
pop
popf
fdivrl
adc
mov
lcall
out
call
xchg
sbb
cmpsl
adc
arpl
outsb
fdivrp
sbb
adc
lcall
xchg
lret
iret
data16
gs
shl
popf
jg
lods
jns
lock
add
cwtl
repz
sub
pop
sahf
fwait
cltd
out
out
lcall
ficomps
daa
insl
xor
lret
sti
jg
sbb
adc
inc
xor
adc
fbld
mov
mov
xchg
adc
mov
iret
lret
lret
movsl
cli
hlt
std
sarl
and
jb
leave
pop
jno
xor
enter
in
and
shlb
ja
jno
addr16
in
leave
jmp
cli
fdivr
std
mov
out
jmp
ljmp
in
cld
sbb
cltd
fsub
lock
xor
idiv
std
aad
sti
jmp
jmp
xor
ljmp
mov
lret
xchg
sti
lock
cmc
lock
add
cltd
outsb
or
adc
jg
add
pop
mov
mov
push
push
add
sahf
add
add
add
cwtl
mov
mov
push
icebp
xor
incl
ror
fs
mov
pusha
pop
or
mov
push
sahf
jl
add
sub
adc
mov
or
inc
xor
mull
or
test
or
pusha
fiadds
aas
shll
add
jg
add
xor
sub
add
cmpsl
int3
xor
add
add
xchg
std
add
les
int
fs
pop
ds
xchg
mov
out
pop
movsl
fs
xchg
lods
adc
xchg
rorb
nop
outsl
and
mov
push
and
scas
popa
call
mov
mov
dec
pop
data16
or
adc
js
or
aaa
and
lcall
cwtl
dec
rclb
test
scas
xor
xor
adc
or
sbb
jbe
pop
out
sarb
inc
xor
movl
and
scas
dec
icebp
mov
jp
add
add
xchg
xor
lcall
add
rcl
pavgb
adc
sahf
mov
push
sbb
mov
sub
divb
mov
xor
add
xor
nop
and
xor
xlat
out
and
sub
pop
sub
add
sub
jmp
adc
pop
pop
into
mov
std
jg
add
mul
or
push
fstpl
sub
decl
or
je
hlt
pop
xorl
sub
loop
call
out
pop
ret
je
in
aam
cld
jg
test
or
push
mov
dec
or
jmp
mov
mov
sub
mov
out
fsts
pop
push
lcall
mov
xchg
jbe
sub
imul
lods
ja
into
inc
cwtl
imul
arpl
and
push
and
pop
popf
sbbl
dec
in
and
add
je
mov
inc
inc
lcall
fisttpll
jne
pusha
jg
jle
jne
sti
in
sbb
and
in
std
fisubs
js
xor
out
inc
push
aam
fdivrp
repnz
dec
ss
inc
jle
out
int
jmp
cli
jl
mov
icebp
pop
inc
jg
and
std
pop
hlt
push
dec
push
inc
fists
jmp
ja
adc
mov
movsb
mov
jo
out
lcall
aad
pop
andb
pop
std
paddd
ds
in
pop
leave
pop
jo
and
adc
and
pop
pop
mov
repnz
mov
nop
out
jmp
inc
jns
fildl
jae
js
mov
and
bound
add
scas
or
jmp
jmp
testb
insb
pop
add
sbb
pushf
fimuls
inc
push
push
xor
and
ja
add
inc
movsl
das
mov
or
lea
mov
add
add
in
mov
or
add
mov
add
fistpll
and
mov
lods
and
lock
shl
or
xor
mov
inc
or
pop
sar
cmp
jne
xor
pop
pop
pop
push
push
mov
xchg
and
mov
add
inc
dec
or
fdivr
or
je
jl
sbb
and
pop
test
fbld
addb
jmp
neg
pop
push
jae
xor
popw
or
xchg
in
xor
mov
xor
mov
inc
push
push
pop
sub
push
push
push
imul
cli
xor
call
syscall
or
push
push
xor
sarb
out
mov
add
push
xchg
shlb
xor
fnsave
into
push
test
ret
or
xor
lock
rorb
mov
mov
xorl
lcall
xor
jecxz
sbbl
xchg
call
les
xchg
cmp
xchg
arpl
sbb
imull
sbb
xor
push
sub
in
sahf
repnz
decl
out
aad
loope
hlt
mov
dec
cmp
aas
les
imul
idivl
lcall
xchg
jecxz
xchg
cmc
mov
add
imul
mov
mov
cmp
inc
ja
scas
adc
push
sub
int3
jns
xchg
dec
mov
dec
mov
shl
sbb
loopne
mov
mul
call
jle
jo
xorl
jne
mov
xorl
dec
das
mov
dec
aas
mov
iret
adc
out
in
out
push
jge
sbb
jne
repz
jo,pt
sub
cmp
mov
adc
ja
sub
xor
cmc
pop
jo
cmc
add
dec
xchg
sbbl
incl
fdivs
loope
mul
push
incl
dec
dec
sub
mov
jmp
fwait
dec
mov
jns
dec
mov
loopne
pop
lret
cltd
fsubl
xchg
push
call
pop
insl
jecxz
out
mul
inc
dec
jl
or
lcall
add
push
sbb
lret
or
das
sbb
xchg
popa
ret
pop
xchg
psrad
xchg
mov
ret
outsl
aam
add
sbbl
pop
sqrtps
jmp
out
cvtdq2ps
jmp
inc
in
mov
mov
jno
or
xchg
pop
lds
adc
or
pop
push
gs
sarb
aas
out
pop
dec
and
or
std
cmp
xor
mov
outsb
and
jnp
dec
cld
les
stos
cltd
icebp
mov
jno
sbb
jne
iret
int
sti
addr16
fisubl
mov
adc
out
xor
jmp
cwtl
icebp
leave
popf
dec
adc
mov
lret
fstpl
pushl
jecxz
icebp
or
ljmp
movsl
mov
mov
fnstsw
movsb
adc
mov
adc
lret
out
mov
add
cwtl
pop
out
test
data16
ljmp
add
fsubl
lcall
call
ljmp
rcr
xor
pop
stos
inc
xchg
daa
mov
imul
xchg
xchg
idiv
in
jle
adc
mov
xchg
rclb
test
fwait
push
xor
ljmp
mov
pop
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
incb
mov
jle
pop
loopne
and
subl
push
jg
adc
xchg
jb
add
push
pushf
and
jno
jne
dec
sarb
jne
inc
xchg
mov
popf
iret
mov
test
shlb
or
add
jns
lret
in
xchg
jge
inc
mov
std
test
mov
ljmp
and
stc
jb
sbb
push
push
inc
decb
mov
and
and
dec
inc
push
inc
xchg
mov
xor
fisttps
fldl
adc
pushf
xchg
or
scas
std
lods
les
dec
dec
inc
xor
repnz
out
xor
xor
and
inc
mov
and
aaa
pop
movsb
movsl
movsb
mov
pop
pop
and
incl
add
or
or
imul
orb
icebp
pop
in
hlt
add
dec
outsb
xchg
ja
jno
fnstenv
add
and
int
mov
cs
add
adc
ficompl
and
cwtl
fs
add
add
insb
fmul
mov
inc
inc
cmovo
mov
add
add
adc
ds
add
ljmp
and
sbb
repnz
sbb
scas
xor
jb
adc
pop
mov
adc
add
inc
xor
ret
push
add
sbb
out
xor
enter
add
lret
pop
or
add
add
es
jbe
push
sub
addl
testl
subb
jo
push
enter
pushf
and
dec
adc
loopne
imul
push
mov
mov
cwtl
cmpsl
inc
scas
aas
add
gs
das
mov
push
sbb
or
rclb
cmp
and
rorb
cmc
dec
or
scas
in
xchg
pusha
mov
add
and
call
or
or
in
loopne
aam
setne
pshufw
mov
jg
xchg
lock
mov
add
adc
pushf
inc
sahf
clc
das
decb
sub
hlt
enter
or
lahf
xchg
and
add
daa
or
lods
or
stos
psubusb
add
in
jl
je
rorl
xor
lidtl
in
push
xchg
push
popf
lods
xor
dec
rcrl
add
fwait
sub
in
dec
fstpl
cmpsl
add
outsb
pushf
lods
addl
movsb
cld
xchg
mov
add
imul
popa
rorb
divl
adc
inc
imul
pop
fdivs
sbb
test
nopl
jmp
pop
inc
cld
lds
cmp
adc
add
add
or
jg
mov
pusha
les
ja
je
push
movb
jns
out
loopne
mov
mov
dec
inc
jo
push
lea
mov
pop
push
cli
jbe
sahf
pusha
test
addr16
inc
push
jo
inc
gs
pusha
mov
repz
iret
jl
cmpl
sub
clc
dec
pusha
push
fs
pusha
xchg
decl
pusha
dec
push
icebp
dec
icebp
pusha
cmp
fsubr
loopne
mov
fsub
mov
inc
jl
idiv
jg
add
add
fnstsw
mov
loop
and
neg
fisttps
pusha
fistps
push
outsl
jns
ss
in
out
dec
or
mov
mov
dec
popf
and
mov
ljmp
dec
int3
lods
cwtl
int3
jbe
mov
fsubrl
sub
js
fcomp
fxch
rorl
dec
pop
sti
mov
mov
add
divps
or
notl
cld
pushf
fsubrp
sub
add
xchg
and
mov
add
add
lods
nop
add
mov
fmull
ret
pop
sbb
rorb
imul
js
lea
dec
cld
mul
std
decl
jo
jp
hlt
lods
pushf
std
imul
adc
loop
xchg
xchg
add
mov
aad
test
sub
cmc
add
jnp
jnp
adc
cld
inc
pop
sub
nop
push
imul
mov
or
dec
cmp
roll
clc
xchg
scas
cs
inc
push
negl
std
add
inc
mov
inc
aaa
sbb
aaa
and
jbe
in
dec
incl
pop
sgdtl
leave
sub
add
adc
push
push
mov
lds
daa
stc
pcmpgtd
adcl
inc
inc
lods
jge
insl
inc
or
inc
inc
inc
add
add
lahf
adcb
mov
testl
das
push
data16
lock
mov
call
or
arpl
idivl
mov
call
or
repnz
lret
sub
aas
cli
xchg
add
test
xor
push
fdivr
sbb
jbe
mov
mov
xor
push
add
addr16
rol
adcb
ja
jmp
pusha
call
or
fstpt
cmp
addl
andl
jg
rol
jnp
xor
pushl
mov
test
mov
fcomip
scas
je
inc
jmp
add
jecxz
mov
popl
pop
popa
ret
pusha
mov
loope
ljmp
add
add
cmp
add
pop
insl
and
jmp
mov
cmp
enter
mov
jmp
dec
idiv
xor
dec
cmp
add
or
sub
pop
ret
push
push
cmpsl
add
xor
lods
cltd
or
add
fistps
add
sbb
jecxz
dec
icebp
decl
out
sub
xor
sub
lods
cmp
je
ror
add
jmp
cmp
jne
inc
and
mov
or
repnz
test
shlb
jmp
pop
pmaxub
cld
call
lock
pop
cs
out
mov
lods
test
lret
jbe
xchg
mov
xor
out
in
jmp
pop
xor
pop
arpl
xchg
cmpl
push
or
or
cmp
xor
pusha
push
jmp
xchg
dec
cld
loope
out
into
jecxz
cwtl
decb
cmc
out
out
jo
sbb
wbinvd
movb
sub
roll
xor
push
daa
adc
push
lret
push
mov
push
and
add
aaa
add
add
mov
pop
jmp
nop
nop
jmp
pop
or
jmp
inc
inc
shlb
mov
fs
js
adc
scas
push
mov
pop
sbb
add
in
out
jp
or
dec
out
pop
cmp
jle
xor
jmp
push
in
out
jle
rorl
out
ljmp
push
xor
cmp
aaa
out
ret
and
aas
cmp
decl
inc
jmp
mov
fcmovb
fists
mov
mov
add
stos
ljmp
sti
call
fs
aaa
add
inc
mov
jmp
loope
jl
add
jmp
push
cwtl
sbb
leave
popf
fnstsw
in
pop
iret
cmpsb
push
fs
cmpsb
outsl
jg
inc
fs
cmpsb
dec
sbb
cmpsb
mov
ss
adc
dec
aaa
jg
decl
aam
mov
or
push
cld
mov
mov
push
xchg
shlb
jge
fists
xchg
outsb
push
jg
pop
nop
adc
out
jmp
fmul
mov
sti
les
mov
inc
sbb
mov
movsb
xchg
cmp
mov
insb
inc
out
idivl
clc
inc
adc
insb
mov
inc
mov
outsb
ss
push
data16
insb
lcall
lret
outsb
aaa
ret
mov
inc
and
mov
fdivp
cmp
push
dec
mov
cmc
ds
jmp
pop
loop
pop
jmp
mov
inc
push
addl
and
push
and
jg
inc
adc
adc
xchg
sbb
inc
xchg
lock
add
push
mov
movsl
mov
popa
je
jb
in
cwtl
mov
es
out
push
jbe
mov
cmpl
pop
nop
imul
push
aas
std
mov
pop
cmove
mov
mov
jnp
mov
pop
clc
divb
push
cltd
sbb
inc
lret
pushf
testb
cs
pop
jmp
xor
loop
shll
add
cmc
scas
frstor
push
ss
mov
andl
push
dec
cld
das
js
test
mov
adc
xchg
jg
hlt
pushl
test
xchg
cltd
adc
cmpsl
xor
cmp
lcall
jge
and
aaa
das
or
add
sahf
pop
sub
jmp
push
aaa
cld
rcrb
mov
and
fs
cmp
jmp
xchg
inc
inc
fadd
inc
and
out
inc
pushf
inc
test
pop
cltd
sbb
loop
in
mov
lods
pop
aas
cld
filds
lret
unpcklps
pop
ret
scas
push
hlt
scas
ret
and
mov
das
nop
pushf
mov
xorl
mov
pop
mov
push
sbb
push
cs
jge
cmp
std
mov
lret
in
call
xor
repnz
and
lock
ljmp
lods
push
add
cmp
inc
mov
push
mov
add
mov
sub
fwait
or
sti
mov
lds
adc
cwtl
add
jmp
xchg
aas
cmp
std
add
inc
mov
call
mov
cltd
out
adc
clc
add
iret
sub
mov
sar
ds
gs
fsubp
scas
dec
out
xchg
fdivrp
mov
movsb
inc
jle
xor
lcall
mov
adc
cmp
sub
xchg
clc
lcall
mov
cwtl
sbb
jecxz
inc
push
ljmp
lea
jg
cmp
dec
test
or
adc
jmp
jnp
pop
mov
test
orl
in
out
clc
decl
sti
sub
adc
ret
dec
cli
out
xorb
mov
push
sbb
jmp
mov
repnz
ljmp
xchg
jle
and
push
xchg
icebp
rclb
add
inc
out
jo
ret
jne
or
incl
fildll
jb
and
xchg
pop
mov
lock
mov
or
fs
repnz
das
scas
ljmp
jae
push
fnstcw
cld
sti
xchg
mov
mov
lahf
in
jg
or
adc
nop
mov
mov
jo
dec
lcall
fs
rorb
orl
and
lcall
fidivrl
stos
sub
enter
lods
dec
enter
std
fs
add
xchg
xor
rorb
push
add
leave
add
inc
call
decl
in
cwtl
pop
clc
outsl
mov
or
lcall
inc
sbb
xor
movsl
xor
mov
loope
jmp
mov
jns
dec
and
cmpb
and
cmc
fildl
dec
int
push
dec
in
mov
pop
inc
cli
jns
out
push
imul
sbb
or
push
jg
pushf
aas
add
mov
inc
inc
sbb
inc
pop
xor
adc
decl
lahf
or
mov
mov
mov
xchg
aas
jle
jp
popl
mov
jge
cld
sbb
imull
dec
call
fisttps
aad
sub
notl
push
imul
mov
cmp
clc
xchg
cmpsb
push
int
mov
test
ljmp
aam
add
lcall
push
cmp
pop
pop
in
mov
scas
push
out
shll
sbb
out
and
jmp
cmp
sbb
call
cld
popa
aas
ud1
shlb
xchg
aaa
outsl
jns
push
xor
xlat
sbb
loope
sar
das
std
mov
dec
nop
or
ror
push
cs
sbb
push
mov
or
cmp
stos
sub
xchg
mov
push
fwait
ror
sbb
mov
xchg
hlt
xchg
pushl
and
sub
sub
test
pop
mov
cmp
and
js
xchg
add
jge
bound
jmp
mov
lret
xchg
inc
adc
orl
ljmp
adc
fcomps
out
jecxz
sbb
ja
pop
inc
mov
int
lds
mov
dec
or
shr
xor
pop
cld
jmp
sub
xor
aaa
and
fidivl
push
xor
incl
pop
sub
imul
push
mov
pusha
rcr
mov
add
add
push
cmp
xor
push
sarb
int
dec
das
outsl
cwtl
mov
pop
or
test
jl
lea
call
addl
mov
push
out
mov
lock
mull
dec
cld
repnz
ficoms
pop
push
ret
enter
dec
add
insl
lcall
fldcw
lods
mov
shlb
or
fcoml
or
mov
gs
xchg
lods
jno
xlat
push
jle
fmull
dec
mov
rorb
xchg
iret
xchg
in
lea
fs
in
xchg
pminsw
dec
cs
imul
push
mov
and
cmpsb
inc
mov
outsb
jp
sbbl
enter
dec
es
pop
stc
sbb
popf
sub
or
aam
lahf
in
inc
sub
xchg
or
jmp
rcrb
mov
stos
add
pop
out
pop
sbb
add
xor
dec
sbb
xchg
dec
js
add
pop
jb
adc
add
adc
enter
adc
jg
dec
inc
inc
dec
lahf
lea
imul
push
repnz
dec
jns
fsub
pusha
cmp
dec
cmp
mov
cmovge
add
cmp
outsb
and
add
add
push
push
push
jbe
push
pop
push
rorb
push
fisubrl
sbb
pop
adc
adc
imul
lods
inc
mov
sub
stos
popa
add
mov
adc
dec
addb
incl
pop
cmp
xlat
enter
inc
add
inc
push
icebp
pushl
test
or
in
mov
mov
mov
sbb
inc
pop
push
push
inc
push
sahf
ficoms
push
rorl
mov
jns
mov
adc
icebp
out
mov
add
jmp
scas
loopne
sbb
pop
add
add
adc
cld
mov
add
sti
repnz
mov
mov
xor
push
inc
daa
lcall
call
and
out
push
pop
push
div
mov
mov
orb
insl
loope
jl
imull
and
scas
imul
push
leave
jecxz
in
fcmovbe
in
and
or
pushf
sub
jb
jle
outsl
addb
mov
xor
jg
pusha
fimull
pop
add
test
aas
sti
fnsave
push
insb
aas
aam
sbbl
in
mov
rolb
rolb
jo
out
lds
out
fcomi
or
test
ljmp
testl
js
or
in
jne
xchg
xlat
or
sub
inc
insl
les
fnstsw
fcmovb
jl
rorl
add
ror
or
shl
pop
imul
push
popa
enter
or
mov
ljmp
push
aas
sub
xchg
aam
cmc
enter
shr
nop
and
sbb
shl
andb
sti
pop
add
or
cmp
or
test
sarl
inc
sarl
imul
push
rcl
jns
scas
or
sub
push
or
std
in
movsb
cwtl
or
mov
adcl
pop
fisubl
leave
or
fistpll
inc
hlt
mov
js
outsb
mov
jge
dec
movsb
out
mov
adc
jp
pushl
push
fstp
inc
test
gs
jg
pop
jae
sub
inc
nop
cmpsb
pop
inc
pop
dec
push
inc
inc
inc
push
sbb
ret
push
sbb
lret
sbb
int
iret
xchg
push
sar
in
cmpxchg
outsl
je
adc
adc
cmp
mov
nop
ret
add
lods
fldt
add
sub
inc
mov
xor
mov
fldt
mov
nop
sbb
dec
lcall
fdivr
jg
inc
aad
aas
sbb
mov
sbb
bound
out
ljmp
or
test
pop
and
cmp
jae
mov
cmp
jmp
arpl
jmp
pop
fsubrl
xchg
push
fsubrs
or
push
nop
in
pop
jmp
mov
and
cmp
fistl
cmp
fisttpl
push
test
xchg
mov
dec
ss
ds
and
inc
out
int
xchg
fadd
es
imul
fstpt
cltd
dec
sub
fists
out
cmp
jg
add
cmp
mov
adc
fists
inc
ret
lret
mov
push
call
cmp
dec
int3
pop
data16
ds
fnstcw
outsb
pop
add
mov
lea
mov
ret
xchg
outsl
out
in
stc
in
inc
outsl
fmulp
add
mov
add
pusha
jmp
pop
push
ret
xor
add
std
pop
clc
xor
fcoms
and
adc
xor
and
ret
sar
dec
loopne
add
sbb
sub
roll
jmp
adc
xor
add
loopne
popa
add
ss
xchg
pop
rclb
mov
insb
push
test
push
movsb
sbb
inc
xchg
and
xorb
mov
loopne
xor
or
hlt
fiadds
loopne
leave
out
int
mov
mov
dec
jae
out
negl
add
push
int
push
mov
push
movsb
mov
fstpl
dec
ss
insb
scas
xor
xor
lret
lock
lcall
in
add
gs
cmp
xchg
fstpl
and
xorb
daa
jns
dec
shlb
ffree
add
shlb
dec
in
fcompl
aam
out
int
mov
dec
jae
stos
sub
add
testl
lcall
mov
jbe
hlt
fistpl
fadd
cs
pop
mov
int
fwait
dec
test
xor
or
xor
dec
pusha
xor
imul
in
xor
lret
cld
and
push
movsb
mov
and
xorb
sub
insb
adcl
sarb
int
fwait
and
rorb
bnd
int
xor
mov
xchg
js
nop
out
das
js
pop
fstps
xor
xor
xor
insb
or
or
in
fcomps
insb
push
mov
aaa
cwtl
mov
mov
addb
repnz
pop
push
fdivrs
fsubs
in
mov
lock
or
das
fcom
rcl
inc
pop
enter
xlat
insb
xlat
test
xlat
jns
das
in
xlat
cld
loopne
inc
pop
enter
test
mov
jo
push
and
in
cmp
sbb
lret
and
add
clc
aad
sub
insl
leave
dec
loope
dec
lret
jecxz
and
jne
in
push
ret
xchg
fistpl
subb
fs
jbe
jle
call
aas
ss
mov
enter
or
in
out
stc
pop
inc
push
inc
pop
daa
jo
xor
daa
daa
and
jno
xor
daa
daa
and
xor
daa
and
daa
xor
xor
daa
jne
ss
daa
daa
and
aaa
ja
daa
and
daa
cmp
cmp
in
add
pop
or
daa
daa
xor
jnp
dec
mov
shlb
repnz
add
push
xor
and
push
das
push
xor
fisttpl
jns
and
es
inc
fidivs
pop
es
jmp
or
pop
dec
sub
in
inc
pop
sub
pop
daa
int
outsl
sub
int
mov
mov
pop
or
pop
out
adc
jns
adc
arpl
mov
adc
jne
adc
lds
adc
push
ds
insb
notb
rcr
outsl
adc
xchg
data16
fistpl
adc
je
fldl
dec
imul
imul
ja
adc
xor
push
imul
adc
push
mov
add
mov
xor
dec
or
lods
xor
outsb
jb
int3
adc
test
rcrb
daa
and
push
adc
stc
xchg
adc
imul
add
and
dec
dec
data16
movsl
xor
nop
xchg
data16
mov
xchg
out
cs
das
cs
fcompl
jbe
jl
or
inc
push
push
dec
pop
imul
icebp
pop
or
movl
mov
push
push
sbb
es
adc
ja
pop
out
stc
dec
dec
push
or
and
scas
mov
lcall
push
pop
jo
out
or
dec
or
sarb
push
and
pop
or
fnstsw
dec
or
and
pop
or
es
dec
daa
cmp
out
cld
push
inc
dec
or
sub
sahf
insb
or
or
nop
dec
dec
test
mov
xchg
xor
outsl
das
punpckhdq
insl
mov
push
imul
xchg
cmp
push
aaa
or
popa
xor
leave
and
arpl
leave
and
and
and
aaa
call
or
push
mov
shll
inc
push
push
and
inc
enter
sub
inc
xor
inc
enter
adc
test
sub
sub
pop
enter
cmp
inc
daa
pusha
inc
enter
and
jb
and
add
sub
inc
enter
adc
test
and
pop
es
adc
test
inc
das
pop
inc
enter
aas
daa
xor
inc
enter
and
push
test
sub
inc
xchg
and
pop
or
inc
xchg
sub
sub
or
inc
pop
cmp
aas
daa
and
pusha
jle
add
nop
and
and
sbb
and
jbe
mov
rorl
das
push
enter
and
mov
test
js
jns
and
subl
or
and
adcb
and
push
xor
test
outsl
inc
test
mov
shrb
das
add
outsb
inc
push
repnz
add
mov
push
sub
faddl
testl
push
pop
add
das
outsl
das
daa
adcl
or
push
call
or
or
imul
sbb
cld
or
ficoms
or
add
das
add
sub
bound
fs
or
or
nop
and
in
je
data16
xchg
and
das
jbe
or
rorb
in
or
pusha
inc
lock
leave
and
repnz
jo
and
or
sub
push
xor
test
push
push
inc
sbb
add
fs
or
call
das
mov
nop
or
cld
add
push
aam
or
in
pop
nop
add
cmp
rolb
les
sbb
test
fs
push
inc
adc
in
and
add
inc
fs
dec
sbb
in
push
add
add
and
pop
mov
jo
enter
xor
adc
xor
adc
cld
incl
lods
inc
movsb
insb
push
loop
das
imul
fwait
cmpsb
sub
in
push
fmul
sar
sbb
bound
xchg
mov
xchg
pop
push
add
je
sbb
adcl
lods
xor
push
and
pushf
ss
rcrb
cmp
cmp
mov
ljmp
xor
rolb
out
es
add
and
xor
roll
and
adc
dec
imul
or
or
dec
repz
pop
clc
hlt
lock
shll
call
xor
rcr
aam
int3
rorb
dec
mov
mov
je
shll
dec
inc
dec
shll
adc
lcall
lock
imul
imul
imul
cmpsb
imul
data16
cmpsb
or
clc
sbb
push
call
imul
cmpsb
imul
imul
cmpsb
imul
insb
lcall
in
dec
shll
mov
xor
mov
xor
shll
push
dec
dec
shll
and
insb
shll
add
push
into
push
in
shll
mov
xor
movsb
pushf
xchg
mov
xor
roll
dec
shll
cmp
dec
shll
sbb
or
adc
lock
rol
mov
add
mov
imul
cmpsb
imul
cmpsb
imul
mov
sub
dec
sahf
push
and
adc
es
lods
xchg
ljmp
es
push
popa
mov
sub
imul
int
imul
pop
insl
pushl
lahf
adc
imul
pop
pop
add
xchg
fdivl
fadds
rclb
cs
mov
pop
pushw
outsb
mov
push
adc
lcall
mov
je
insb
fs
cmpsb
imul
adc
add
das
sub
or
mov
adc
mov
insl
mov
add
clc
jg
add
lret
adc
adcb
pushl
es
sbb
stos
jns
in
xchg
out
es
push
aam
les
xchg
mov
cmpsb
imul
mov
xor
xor
jno
into
push
je
pop
dec
shll
add
lcall
aam
mov
lods
mov
insb
lcall
das
adc
lcall
push
push
and
test
sbbl
add
xchg
add
flds
iret
aas
imul
and
inc
push
shld
or
pop
xorb
cwtl
pop
jae
pop
cmp
ss
outsl
adc
push
lcall
pop
or
xor
or
aaa
or
imul
add
adc
nop
pop
movsb
or
and
or
inc
inc
out
jbe
xor
movnti
pop
imull
dec
shll
jb
and
ss
pop
andb
and
fadds
inc
push
imul
movsb
fbld
pusha
pushf
popa
aas
xlat
mov
or
imul
mov
add
add
add
cmp
dec
roll
push
les
cwtl
mov
fcmovbe
cmp
adc
cmp
dec
shll
push
sbb
sbb
cmp
mov
sbb
fwait
cmpsb
cmp
fdivrs
and
push
test
mov
js
xlat
xor
clc
ss
jp
push
cld
rol
ret
pop
push
enter
outsl
pushf
cmp
mov
add
leave
and
push
enter
and
push
sub
and
or
or
mov
ja
mov
add
movsb
add
pusha
cmpb
iret
dec
fimuls
cmpsb
fisttps
mov
cld
inc
adc
fcmovne
jle
test
shll
enter
cmovo
fs
mov
iret
mov
in
call
in
adc
add
mov
scas
in
fidivl
rcr
fsubp
stc
jae
jle
and
dec
or
mov
add
jl
add
dec
scas
sbb
outsl
inc
in
movsb
or
inc
out
pop
jle
mov
out
pop
push
xchg
or
mov
nop
sbb
dec
xor
adcl
xor
and
xchg
xchg
xchg
mov
js
test
aas
pop
mov
dec
and
jnp
sbb
and
mov
add
cs
cld
dec
clc
hlt
imul
imul
imul
xchg
jle
mov
shll
je
dec
pusha
pop
shll
dec
cmp
mov
insb
dec
sub
dec
out
push
adc
cld
inc
pop
lods
loop
ljmp
popa
push
in
cmpsb
push
cld
inc
jmp
pop
jg
cs
cs
push
scas
mov
mov
inc
imul
pxor
push
pop
push
cmpsb
imul
lcall
push
cwtl
mov
xor
add
pusha
cmpsb
imul
scas
imul
dec
shll
adc
push
sbb
cmpsb
imul
imul
imul
pusha
jg
sarl
jbe
ljmp
fs
jmp
testl
jo
icebp
repnz
jne
dec
push
push
insl
jg
ror
push
cwtl
cmc
out
push
movsb
les
dec
pop
frstor
xor
mov
orl
loopne
cmp
add
cmpsb
or
pop
xchg
push
mov
mov
lcall
insl
lcall
pop
ja
imul
repnz
das
push
imul
leave
mov
daa
jns
enter
inc
pushf
or
nop
daa
jns
ret
mov
adc
jmp
xchg
mov
leave
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
jns
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
dec
lret
por
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
decl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
and
push
int
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
std
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
mov
sarl
addb
add
xlat
cmp
mov
sbb
jmp
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
out
xchg
jge
pop
ficomps
frstor
sbb
mov
arpl
sbb
xor
bound
inc
aas
add
aas
xor
pop
outsl
pop
push
pop
mov
aas
add
xor
add
dec
push
add
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
mov
or
mov
inc
add
add
jmp
popa
or
sti
fmul
xor
shlb
inc
adc
outsl
inc
pop
inc
gs
popa
mov
mov
les
ret
in
sbb
sub
in
mov
cld
or
push
movsl
add
push
dec
fcompl
mov
orb
push
mov
jne
sbb
and
negb
pop
jnp
popl
jne
xor
imul
subl
outsl
push
mov
and
neg
dec
inc
insl
jo
xchg
push
adc
add
dec
insl
daa
adc
sbb
add
addr16
cmpsb
sub
js
xlat
mov
xor
add
test
pop
adc
cs
xchg
dec
sbb
dec
or
lods
sbb
lcall
sub
xchg
sub
xor
es
nop
sub
stos
insl
xchg
cmpsl
mov
or
pop
outsl
push
imul
pusha
sbb
ror
xor
mov
gs
mov
insl
lcall
jbe
popa
ja
xchg
cmpsl
xor
mov
lcall
movsl
scas
mov
outsb
inc
adc
iret
sti
ret
std
pop
xchg
outsb
push
sub
pop
jnp
mov
xlat
lds
rol
iret
sub
xor
sbb
push
or
push
inc
adc
js
xchg
sub
xchg
sbb
add
cld
xchg
pusha
push
dec
addr16
sbb
sub
xor
push
dec
adc
add
jo
adc
rol
lods
push
sub
push
lods
js
test
xor
xchg
mov
stos
cmp
movsb
xchg
test
or
pop
aaa
push
daa
loope
mov
inc
add
enter
rorl
or
mov
dec
pop
daa
push
jo
mov
out
clc
gs
data16
dec
sbb
mov
insb
addr16
pusha
js
mov
jo
adc
mov
outsl
cmpsl
adc
jae
arpl
imul
decl
mov
std
les
sub
xlat
fs
cmpsl
adc
lds
insb
aad
pop
sbb
loopne
push
inc
sbb
push
pop
inc
xor
outsb
mov
pop
dec
xchg
mov
sbb
push
sbb
dec
popa
pop
inc
sbb
jo
pop
dec
sub
mov
insb
outsb
sbb
or
push
pop
xchg
ja
test
mov
jg
mov
inc
jae
push
std
cwtl
add
push
addl
test
ficomps
je
ja
jle
pop
cmp
ret
inc
mov
pop
sub
sub
xchg
in
dec
adc
lock
xchg
xorb
push
insl
fs
repnz
mov
sub
in
add
pop
pop
and
push
mov
inc
ficoml
daa
pusha
bound
loopne
repnz
sub
nop
lcall
push
push
nop
add
adc
mov
fbld
sbb
jns
inc
jge
inc
dec
push
in
jge
xchg
cmc
xor
inc
scas
ret
scas
xchg
inc
sbb
popa
aaa
or
cld
das
lock
jmp
incl
add
mov
lret
mov
or
mov
lret
je
jae
pop
adc
lret
mov
xchg
or
push
fisttps
ret
pop
mov
out
add
add
add
add
adc
xor
inc
adc
dec
add
add
pop
fcmovbe
ss
and
comiss
fcmovu
repz
adcb
lahf
jg
fimull
add
add
adc
mov
dec
push
popl
adc
add
pop
cs
roll
add
add
popl
mov
lock
xor
data16
negl
std
mov
mov
inc
add
inc
cs
add
xor
or
mov
out
add
jb
jb
xlat
cmovg
out
jg
xchg
inc
ss
cs
or
add
dec
xchg
and
add
add
add
dec
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
push
pop
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
push
pop
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
pop
jns
movzwl
inc
push
inc
mov
push
call
test
je
mov
add
jmp
call
popa
jmp
