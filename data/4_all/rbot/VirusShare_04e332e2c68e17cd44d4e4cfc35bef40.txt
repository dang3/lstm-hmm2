push
call
ret
ret
cmc
mov
sbb
or
cltd
mov
sub
and
movsb
xchg
pop
fucomip
cli
lock
xchg
test
xor
movsb
jmp
cmp
dec
push
adc
xchg
pop
fs
pop
mov
and
mov
mov
jp
mov
xor
jge
push
jae
ds
es
jb
xor
lcall
pop
sub
cs
adc
das
out
in
mov
inc
test
push
fs
xchg
push
ror
testb
add
adc
sub
iret
sbb
js
adc
mov
inc
aam
clc
movsb
in
loop
int
push
sbb
imul
pop
pop
and
mov
rorl
aas
push
mov
mov
jno
out
xchg
out
add
mov
outsl
xchg
add
push
xchg
test
xchg
imul
mov
sub
xchg
mov
pushf
jo
pop
mov
gs
stos
mov
mov
or
mov
push
pop
push
cs
shl
add
js
xor
mov
or
sub
sbb
js
aad
add
xchg
mov
xchg
dec
je
jp
push
fldcw
add
add
in
adcb
fildll
xor
insl
leave
pop
inc
jnp
push
pop
add
or
push
mov
cmc
xor
sub
mov
and
cmp
pop
popa
andl
adc
mov
outsl
in
jb
mov
pop
fwait
mov
scas
into
push
pop
js
ret
lret
mov
cmp
jbe
jl
jo
xchg
mov
fisubs
add
cltd
jne
cwtl
adc
inc
aas
mov
mov
jge
xor
add
jb
add
xchg
pop
mov
pop
cmp
cmp
int3
fistl
and
mov
rcr
jo
adc
mov
std
incl
out
loop
cs
sbb
bound
pop
cltd
mov
jno
loop
in
fs
pop
ss
mov
icebp
fadd
jle
subb
imul
stos
movsl
cmpl
push
dec
cmpsl
pop
mov
mov
out
lock
das
mov
ret
ret
mov
cld
sahf
outsl
mov
dec
fs
xor
sbb
fs
xor
lcall
mov
clc
mov
mov
dec
data16
jl
hlt
pusha
add
stc
loopne
in
imul
in
mov
dec
test
adc
add
sub
xchg
ret
in
adc
sub
cld
adc
pop
jge
sbb
test
lahf
mov
pop
dec
inc
push
fbstp
jbe
in
orl
lret
cmp
test
cli
dec
es
push
adc
and
test
pop
ss
or
adc
adc
rorb
nop
mov
pusha
mov
sub
jmp
sub
addl
mov
jne
mov
out
and
adc
pop
mov
ja
sbb
fnstenv
divl
das
push
add
fistl
stos
clc
add
mov
insb
nop
sub
mov
sub
or
pusha
out
movsb
out
xor
mov
fistps
xchg
xchg
cli
jle
sub
sbbl
icebp
adc
in
insl
mov
adc
cmp
fldcw
push
add
fbstp
lcall
in
add
mov
sbb
mov
sub
xlat
inc
cmp
mov
sbb
push
insl
mov
cmp
mov
adc
pop
sub
push
pusha
push
xlat
cmp
lock
test
jle
jecxz
xchg
subb
dec
in
inc
fiadds
or
aam
push
int3
and
xor
pusha
mov
jae
xchg
mov
push
xchg
fprem1
arpl
inc
mov
cld
dec
or
pushf
xor
addr16
cmp
scas
inc
ror
jo
mov
mov
push
mov
fs
aaa
or
loop
mov
xchg
sti
xor
pop
call
dec
fadds
lret
neg
sub
push
inc
xor
iret
sbb
ja
imul
insb
imul
cld
push
jmp
cmpsl
repnz
out
sbb
or
and
inc
negl
mov
gs
pushw
or
clc
jle
inc
int
dec
jp
adc
mov
lea
jne
sub
out
mov
nop
fnstcw
call
adc
nop
idivl
cmp
popa
xchg
sbb
es
les
es
pop
mov
arpl
mov
test
cmp
xchg
cmpsl
inc
jbe
loop
adc
pop
lahf
mov
inc
call
xorb
into
mov
es
cmp
fiadds
out
jge
adc
js
mov
cmp
lea
adc
xor
xlat
rolb
sarb
jmp
mov
or
sbbb
sub
hlt
cmpsl
lret
fstps
xchg
lahf
mov
adc
sub
dec
in
sahf
lods
lcall
inc
daa
fidivrs
sbb
lock
pop
mov
or
fs
sti
arpl
mov
ficoml
out
jns
mov
stos
jae
or
je
mov
xchg
sbbl
hlt
aad
xchg
jne
and
sahf
push
adc
cmovg
sti
call
stos
shlb
rcrl
adc
jo
jbe
and
mov
out
push
fcoml
call
and
sbb
bnd
clc
fistpl
jp
popa
nop
repz
out
pop
push
sub
mov
leave
movsb
loope
sbb
mov
mov
test
dec
mov
hlt
rcrl
xchg
loop
pop
pop
aas
insl
cmp
popl
mov
xchg
clc
sbb
adc
fwait
icebp
stos
out
inc
ror
inc
sub
sub
je
jge
xor
xchg
push
add
clc
lret
jb
arpl
jns
je
mov
hlt
xor
pop
sbb
fsubl
and
inc
call
adc
notb
fmull
sbb
out
iret
jg
sub
sbb
arpl
fiaddl
inc
mov
rcrl
arpl
ja
leave
inc
cmpsl
jmp
jno
je
arpl
pop
mov
jbe
loopne
sar
jge
and
sbb
add
inc
jge
xor
push
lret
sub
dec
mov
das
or
pop
mov
cmp
test
mov
jge
and
pop
movsb
inc
shlb
leave
and
push
jmp
test
in
fstps
or
inc
push
jne,pn
loop
sahf
bound
out
xchg
mov
lahf
mov
pop
cwtl
push
adc
mov
xor
add
pop
shr
push
inc
cld
xchg
mov
movb
out
out
ret
cmpsl
cmp
jns
mov
sub
fcomps
addr16
out
cmp
push
mov
cltd
xorl
jmp
inc
pop
dec
mov
test
sbb
jg
aad
add
push
mov
push
call
sub
xchg
sbb
sub
xor
add
icebp
leave
inc
scas
sbb
mov
dec
mov
movsl
aad
inc
imul
mov
xchg
imulb
pop
mov
sbb
xor
add
daa
sub
dec
adc
and
push
cmpsl
jno
in
mov
cmp
mov
jnp
daa
mov
xchg
iret
popf
dec
aam
xor
out
das
je
xor
dec
adc
adc
and
xchg
stos
sarb
test
fsub
sbb
jae
dec
xor
fnsave
daa
scas
mov
shlb
sbb
cmp
cmpsb
test
out
dec
xor
ret
xor
js
xchg
lret
cmc
ret
sbb
cltd
mov
adc
and
fnsave
out
daa
imul
adc
add
pop
sbb
adc
xchg
pusha
or
daa
xchg
jnp
mull
insb
movsb
pusha
xchg
int
inc
push
lods
shll
les
je
inc
fcmovne
mov
dec
fcoms
cld
jp
jmp
mov
dec
and
lcall
in
imul
and
leave
es
cmp
imul
lods
push
test
rorb
sti
or
mov
fidivrs
sub
jne
dec
loopne
fbld
jbe
in
inc
dec
xchg
es
lret
dec
pushf
xchg
pop
mov
lret
ret
xlat
insl
shrb
gs
aaa
popa
repnz
push
sahf
jae
clc
inc
mov
clc
jp
stos
inc
hlt
and
mov
ret
dec
pop
movsb
dec
daa
dec
cmp
icebp
scas
inc
movl
lock
inc
adc
xor
jp
sbb
aaa
mov
loope
in
jle
inc
jo
call
xchg
jo
inc
push
out
inc
aas
inc
scas
sub
push
or
stos
mov
into
int3
jne
pushf
fiadds
inc
xchg
add
xchg
loop
pop
orb
call
cmp
push
xor
adc
add
or
xchg
inc
inc
mov
leave
inc
aad
add
enter
ljmp
ja
outsl
pop
sbb
nop
mov
inc
xlat
inc
cmpl
mov
addr16
push
shlb
ss
sub
stos
repnz
pop
xor
aas
mov
pop
dec
arpl
lahf
jmp
mov
scas
das
pop
hlt
jo
mov
add
shlb
in
sar
or
push
loop
pop
nop
mov
nop
imul
push
adc
inc
iret
cmp
out
movsb
inc
fidivrs
jnp
shrb
lods
add
dec
lea
dec
test
or
jg
xchg
jmp
sub
fcomps
cmp
fwait
dec
pop
push
mov
inc
xor
stos
rorl
cmc
rorl
dec
adc
pop
xchg
jp
inc
insb
data16
push
ss
pop
xchg
mov
sbb
or
jle
sub
pop
fcmove
out
ss
sbb
inc
shlb
dec
cmp
xor
lcall
push
data16
test
inc
inc
out
xlat
sbbl
and
cmpsl
jecxz
sub
movsl
sub
sub
cmp
and
cli
jns
jge
leave
mov
rcrl
popf
sub
mov
in
sarl
cmp
mov
push
fcomip
sbb
jbe
pop
fstpl
xchg
mov
pxor
or
out
in
pop
lods
pop
outsb
push
inc
cli
test
fisttpll
je
aam
testl
xchg
incl
data16
testb
adc
rolb
scas
ds
push
es
dec
push
pop
lret
dec
test
mov
mov
ret
sbb
xor
pop
cli
fidivrs
add
stos
loopne
sti
xor
aam
pop
xchg
push
mull
jb
inc
xchg
mov
addr16
clc
jge
insb
rcrb
bound
fdivs
cmp
in
notb
les
out
rolb
outsl
pop
aam
jo
les
out
dec
adc
add
mov
jecxz
sub
cmc
test
imul
outsb
aaa
mov
inc
ds
mov
popa
sbb
mov
xchg
sbb
ljmp
cwtl
cli
repz
notb
pop
addr16
lcall
pop
cwtl
xor
pop
push
add
out
mov
push
push
test
xchg
in
in
mov
stc
ss
cmp
out
jo
add
je
xchg
test
ss
xchg
aas
mov
jecxz
test
divl
fcoms
and
gs
inc
pop
and
scas
dec
cmc
or
push
inc
scas
push
lea
lahf
adc
mov
into
xor
fstpl
push
xchg
xchg
xchg
jae
out
out
mov
daa
outsl
insb
imul
int
jmp
mov
sbb
and
popf
sub
mov
adc
repz
lcall
outsb
fcoms
cld
mov
push
out
test
movsb
pop
push
xor
test
xchg
push
xor
outsb
fmull
or
xor
add
push
add
or
mov
jle
iret
and
leave
cli
stos
mov
cld
movsl
push
subl
imul
cs
mov
mov
sub
daa
cld
fimuls
mov
mov
xchg
mov
pop
clc
pop
enter
push
sub
sti
dec
or
test
and
adc
xor
push
in
or
xlat
lods
aad
inc
movsb
inc
ret
xchg
jmp
nop
out
nop
je
jo
stos
cmpsl
inc
je
jns
mov
fistpl
push
scas
dec
sti
call
push
ret
pop
sub
test
ret
shrl
sbb
sub
and
in
stos
or
ret
lods
cltd
push
xchg
stc
hlt
and
xchg
jnp
dec
pop
mov
idivb
arpl
mov
lods
pop
imul
repz
stc
decl
mov
push
fs
cmp
ret
add
xchg
out
mov
inc
lcall
jg
stc
scas
xchg
xlat
arpl
aaa
enter
shl
fisubl
push
sub
out
jg
leave
insl
cli
test
ret
inc
adc
ret
fwait
cmc
cltd
fidivl
cli
mov
cmpsl
stos
jmp
repnz
loop
adc
bound
dec
add
out
sub
mov
jae
cmc
lret
push
add
push
ret
sub
insl
mov
das
loop
pop
xlat
mov
sbb
pand
push
das
mov
mov
pop
mov
ja
outsb
loope
mov
xor
mov
push
or
cmp
mov
push
cmpsl
and
xor
pop
push
rcrb
or
xor
sbb
imul
filds
addr16
cmc
dec
gs
fadds
dec
push
xchg
rolb
or
je
fmull
xor
dec
and
jno
xlat
mov
repnz
push
xchg
int3
inc
es
jle
jbe
cmp
test
mov
lea
mov
push
ljmp
inc
fwait
lods
jge
test
test
jae
sub
test
in
enter
rorl
mov
ss
jge
mov
jns
push
dec
push
cmp
push
enter
push
loope
mov
and
cld
mov
stos
pusha
into
push
add
lds
out
mov
pop
push
insl
jns
pslld
scas
adc
mov
dec
mov
jae
mov
cmp
test
pop
mov
movsb
cmp
ja
fidivrs
push
ja
ret
stos
mov
push
pop
inc
cs
pop
sti
orb
or
push
pop
xchg
rorb
out
sub
mov
addr16
and
push
imul
mov
fwait
lret
iret
add
mov
adc
dec
inc
in
jne
pusha
cmp
fld
jge,pt
out
jge
and
js
pop
test
icebp
inc
andb
arpl
cmpsl
mov
loop
inc
push
jp
push
repz
sahf
cmp
adc
popa
iret
jbe
imul
jbe
negl
mov
test
outsb
or
add
in
adc
jl
cmpsb
int
ret
stos
cs
stos
mov
xor
leave
ror
scas
movsb
mov
mov
lea
jmp
jae
scas
js
outsb
data16
loop
push
testb
push
fs
pushf
bound
sub
push
enter
and
scas
xchg
add
push
xchg
sahf
mov
pop
sbb
std
rolb
add
xchg
push
dec
test
idivl
jns
mov
dec
je
je
jns
mov
rcrb
and
adc
pop
hlt
insl
gs
fucomi
sahf
out
mov
lret
mov
or
jnp
fmuls
mov
pop
mov
imul
shrl
push
sub
mov
js
hlt
push
xchg
sub
notl
cmpsl
or
mov
sbb
int3
aad
lret
cld
push
pop
in
pop
jp
lods
loope
rcrl
imul
push
jle
iret
pop
inc
sub
push
jno
scas
and
lods
add
inc
loope
loopne
fldcw
hlt
xchg
cmp
push
xor
jne
or
dec
andb
fdivl
xchg
xchg
cli
data16
pop
fisubrl
dec
adc
push
movsl
ljmp
sar
cwtl
popf
lods
mov
ret
pop
mov
ds
push
cmp
mov
ds
out
loope
or
sarb
mov
ret
push
mov
pop
repnz
adc
cmp
outsl
mov
ficoms
cmpsb
rolb
fisttpl
xor
xor
jg
adc
mov
add
rolb
in
daa
push
inc
cltd
lods
dec
imul
popf
decl
test
jmp
call
jb
push
ja
inc
inc
jnp
frstor
xchg
movsl
mov
cmp
cwtl
out
mov
rcrb
mov
std
mov
sbb
rcl
jp
jne
sti
inc
mov
mov
lea
push
mov
bound
jmp
pusha
cmp
hlt
cmpsl
popa
imul
cmp
pop
adc
cs
mov
incl
push
cmp
gs
clc
or
xor
out
repz
or
xchg
cmc
adc
mov
dec
in
and
repnz
xor
aam
adc
xor
leave
pop
in
ret
sub
stc
xchg
cmp
pop
dec
pop
sbb
int3
sub
push
ja
xchg
arpl
fs
pop
xchg
xlat
sub
std
push
xor
leave
ljmp
push
mov
mov
dec
cmp
mov
xchg
mov
out
or
imul
imull
jl
pop
out
push
xchg
push
xor
scas
cmp
xchg
sahf
lock
int
aad
dec
pop
pop
out
jnp
or
dec
sbbb
cmp
fsubrl
aaa
cmp
cmp
xchg
dec
stc
cmp
jmp
xlat
jg
fidivl
les
fdivs
mov
fisttps
sub
xor
mov
fst
push
gs
adc
leave
neg
pushf
push
addr16
inc
sbb
adc
out
loop
pop
mov
dec
xchg
pop
cmp
mov
je
mov
icebp
dec
push
shl
mov
pop
jmp
fwait
mov
sti
mov
test
scas
adc
push
jmp
xchg
pushf
push
jg
scas
cs
and
adc
adc
push
in
inc
in
add
mov
dec
mov
or
out
dec
rorb
in
loope
rcrl
movsb
push
jmp
xchg
or
push
mov
out
xchg
jecxz
out
pusha
sbbb
mov
ret
cmpsb
out
xorl
or
scas
adc
xor
mov
jbe
xchg
stos
push
cmpsl
sbb
push
dec
push
dec
pop
mov
xor
xor
pop
and
aas
mov
aaa
pop
js
ret
mov
hlt
js
cmpsb
mov
arpl
push
mov
pop
adc
push
lret
xchg
dec
dec
nop
sub
negl
roll
sbb
adc
xor
jecxz
insb
popf
dec
mov
pop
and
push
xor
stos
sbb
rolb
jnp
dec
popf
xchg
mov
mov
out
inc
pop
jge
outsb
inc
call
or
mov
mov
dec
dec
xorps
dec
in
xlat
outsl
push
add
mov
sub
inc
shll
inc
lods
sahf
mov
insb
jle
mov
push
mov
lods
xor
aad
fstp
mov
add
sub
out
inc
pop
xchg
data16
roll
aad
mov
dec
leave
call
jbe
test
fadds
movsl
jge
fimuls
xchg
out
and
adc
push
mov
adc
push
ja
shlb
pop
sub
icebp
test
test
and
movsb
into
lea
pop
sbb
jmp
jae
loopne
int3
jmp
loopne
fs
test
jnp
loop
data16
arpl
xchg
bnd
fsub
test
sahf
jmp
and
xchg
xchg
push
and
pop
testl
das
jne
insl
leave
push
mov
xchg
stos
je
pop
lods
add
xorb
push
push
push
sahf
sbb
in
jl
mov
rcll
aaa
inc
xchg
jbe
and
mov
sub
push
push
lret
arpl
and
xor
js
adc
jne
sbb
scas
push
lahf
xchg
sub
pop
leave
cmp
mov
inc
sbb
mov
lret
or
sbb
pop
mov
cmp
nop
aas
pushf
add
push
sub
mov
mov
jo
movsl
rclb
xchg
mov
mov
adc
les
pop
pop
rcrb
lock
call
fists
cld
inc
lods
shll
cmpsl
inc
mov
pop
cli
pop
pop
mov
dec
mov
sbb
ljmp
add
xor
pop
clc
add
ficoms
xchg
jecxz
in
sbb
shll
mov
iret
xor
jl
xchg
and
mov
mov
in
cmp
popa
lret
in
push
adc
sub
mov
push
adc
mov
test
mov
lock
js
or
mov
pop
loope
mov
call
mov
je
push
or
cmp
dec
sbb
xlat
xor
cmp
mov
fldpi
lods
sbb
sahf
mov
and
popa
insb
pushw
cmpsl
sbb
jmp
cmp
pop
inc
es
scas
fs
jb
pop
push
xchg
xchg
jl
and
xchg
and
std
pop
push
loop
or
div
stos
or
roll
and
and
or
push
mov
ja
sbb
call
inc
fstpt
cmc
jg
jne
cmc
icebp
adc
in
test
xchg
push
and
sbb
or
push
jp
sub
gs
mov
dec
cmp
movsb
inc
xor
fiaddl
pop
jl
jg
jl
fstpt
mov
jl
fucomi
daa
sahf
stos
push
dec
and
pop
cmp
mov
inc
out
out
testb
test
nop
incb
imul
mov
nop
aaa
das
pushf
loop
add
cs
lahf
jb
out
bound
jb
insl
xchg
out
loope
popa
xor
adc
enter
pop
scas
or
sbb
sbb
inc
add
cltd
cmp
cmpsb
jle
pop
push
jl
sti
jo
sarb
pop
insb
push
fildl
pop
xchg
xor
mov
jg
int
aam
adc
push
movb
mov
jnp
cmp
out
subl
jp
adc
sbb
inc
out
sbbb
aaa
imul
bound
or
clc
aas
sub
adc
aam
cltd
xlat
adc
hlt
push
jns
in
mov
add
mov
mov
insl
pop
lods
sub
xchg
sub
adc
aaa
or
loop
iret
outsl
lcall
push
sub
cmpsl
mov
inc
fsubp
or
add
sbb
bound
in
push
imul
sbb
outsb
adc
stos
outsb
lret
lock
daa
xchg
or
add
fmuls
mov
or
loop
shrl
push
mov
mov
xchg
mov
add
inc
js
outsl
loop
rcrl
push
das
xor
fcmovb
mov
jbe
cmpsl
sbb
and
or
movsb
sub
jge
mov
lahf
or
cmp
ret
pop
mov
enter
mov
fldlg2
ljmp
int3
cmpsb
sarb
jg
je
jle
mov
mov
mov
jne
sub
fcoml
sbb
xor
push
daa
mov
inc
out
loopne
pop
adc
pop
aaa
jp
movsb
sub
fs
xor
inc
adc
das
adc
fcmovb
out
not
lock
loop
sub
mov
xchg
lahf
jp
scas
stos
lret
sti
loope
decb
push
es
add
stc
xchg
mov
in
cmpsb
aam
add
clc
scas
out
stos
sarl
rol
mov
aad
inc
xchg
mov
add
xchg
testl
fwait
mov
jle
repnz
test
cli
jecxz
pop
in
inc
stc
testl
dec
push
push
dec
mov
push
push
push
dec
add
dec
push
mov
js
inc
test
insb
inc
enter
fisttpl
loope
leave
cs
mov
fadd
push
std
add
jbe
add
aaa
or
xchg
aam
sbb
or
push
aad
mov
push
sbb
fwait
and
cmc
push
test
push
fldt
and
addr16
sar
sti
shlb
pop
add
mov
sub
adc
rorb
test
fwait
fnstenv
pop
sbb
inc
shr
lock
rorl
je
xchg
popf
dec
js
les
xchg
fdivs
sub
inc
inc
jp
call
push
rorb
dec
xor
cs
inc
or
jg
movsb
lea
stos
ds
aad
push
jno
fsubr
mov
xchg
jnp
sbb
loop
inc
adc
in
sbb
sbb
adc
cmp
dec
in
addr16
cmpsb
adc
fbld
clc
cmp
sbb
out
std
pop
sub
movsb
hlt
fdivrl
jecxz
dec
jb
jae
int
sub
mov
shrl
inc
loopne
test
fs
lahf
dec
mov
std
in
adcb
mov
shlb
inc
movq
lods
aas
into
shlb
gs
dec
std
nop
sbb
or
jb
movsb
jle
sbb
vandnpd
sahf
je
test
ret
add
xor
cwtl
in
adc
aas
push
mov
adc
mov
mov
cwtl
dec
or
cmc
in
ljmp
lds
mov
mov
xor
pop
popf
icebp
repnz
dec
lret
and
pop
lcall
push
icebp
xlat
jae
cmpsb
movsl
aad
cli
or
scas
in
test
pop
js
and
cmc
push
inc
mov
xchg
jg
popf
push
aam
outsl
cmp
mov
jle
and
mov
or
sub
aad
mov
mov
cmp
cltd
pop
daa
sbb
popa
mov
xor
mov
js
enter
push
fsubrl
fwait
out
lods
mov
cld
sahf
data16
cmc
mov
fisttpll
push
xchg
cmpsl
leave
adc
dec
std
sbb
loop
cmp
lret
mov
es
loop
ja
push
gs
xor
sbb
fildl
mov
stc
ljmp
inc
cmp
push
adc
xchg
sbb
and
shl
mov
addl
xor
mov
dec
pop
outsb
lret
lods
aam
push
icebp
mov
sbb
add
test
jnp
into
roll
lcall
call
inc
mov
repnz
add
push
or
jge
fdivr
mov
and
jnp
mov
cmp
loope
mov
dec
lods
or
divps
jo
mov
inc
movsl
and
call
push
lret
loopne
push
test
xchg
pop
adcb
movsl
in
xlat
imul
mov
xor
scas
push
mov
testb
sahf
jne
sbb
bound
out
jecxz
xchg
in
inc
mov
mov
aas
add
push
outsl
cmpsl
and
out
je
shlb
das
cmp
dec
cwtl
add
divl
pop
dec
test
sbbb
jp
mov
jl
sbb
push
pusha
fbld
inc
and
add
out
xlat
add
scas
xchg
jmp
in
xchg
xor
push
mov
cmpsb
clc
fwait
xor
cs
and
pop
test
cmp
sub
lock
sysret
sbb
dec
adc
cmpsl
push
sbb
cmp
divl
push
xorb
xchg
shr
xor
call
mov
xor
jge
xlat
in
push
add
insl
push
cmp
ljmp
dec
xchg
add
fidivl
arpl
in
sub
sahf
mov
insb
rcrl
pusha
in
cs
es
or
idivb
ds
mov
pop
lret
sub
mov
mov
xchg
xchg
push
jmp
fmull
lods
scas
pop
mov
dec
mov
arpl
loopne
movsb
dec
dec
fbld
rol
arpl
fsubl
sbb
jo
or
or
or
mov
mov
pop
adc
outsb
pop
packsswb
jge
in
sub
sbb
jl
mov
sub
shrb
sbb
jno
test
or
in
movb
mov
jmp
sbb
mov
in
mov
cmp
daa
lret
push
sub
mov
pushf
pop
cli
mov
cwtl
test
xor
lods
arpl
pop
out
jb
rcll
or
jp
sbb
add
jno
add
xor
xchg
pop
mov
scas
push
jbe
pushf
ror
xchg
les
dec
cmp
ror
mov
xor
lds
push
adc
fcomps
cmpsb
idivb
add
sbb
lret
jb
test
ds
jbe
or
fs
xor
test
adc
jg
add
inc
lret
sbb
test
loop
mov
hlt
push
add
addr16
push
sub
popa
popa
jnp
cld
or
insl
fidivl
inc
es
mov
or
or
jmp
clc
xor
push
sbb
movsl
mov
ret
lret
or
pop
add
ss
das
jecxz
fld
or
mov
mov
push
mov
cwtl
cs
xorl
mov
or
mov
test
xor
mov
out
pop
jle
ss
xchg
xchg
jmp
cmpsb
adcl
incb
popa
push
xchg
or
scas
mov
roll
das
fldenv
mov
jae
es
movsl
je
sarl
popw
popf
mov
cs
pop
push
lock
adc
xchg
leave
pop
mov
inc
int3
inc
icebp
xchg
fisttps
out
lcall
sub
push
sub
or
scas
inc
mov
xor
jp
and
cltd
pop
fcmovnu
mov
xchg
stos
xor
or
aaa
ss
mov
es
mov
out
iret
add
js
inc
movsl
fst
dec
roll
xchg
inc
mov
fiadds
push
xor
xor
xor
mov
loop
xorl
jge
push
cs
test
insl
inc
cmp
in
push
shll
mov
push
xchg
les
lahf
xchg
rorb
jmp
inc
mov
ljmp
sti
fs
out
pop
xor
jno
loop
jo
dec
sub
mov
cmp
mov
mov
inc
pop
jle
fdivs
inc
outsl
xor
jb
mov
or
mov
gs
pop
cmp
popf
cmp
sahf
outsl
jge
dec
add
sbb
pop
ljmp
adc
xor
leave
sbb
test
imul
cmpsl
or
pop
cmp
pop
or
fists
bound
or
in
fimuls
fistpll
jae
inc
stos
mov
jne
les
and
push
lods
gs
out
push
fiaddl
cmp
bndldx
ljmp
cmp
mov
push
sti
xchg
insl
mov
jne
mov
movsl
mov
jecxz
sub
dec
mov
inc
and
fsubr
pusha
sbb
dec
gs
fs
enter
add
ja
dec
sbb
pop
jnp
mov
xor
mov
inc
aas
cmp
cmpsb
jae
test
movsw
lahf
sub
dec
cmc
inc
jne
movsb
aam
addl
jp
outsl
cli
pop
mov
pop
lods
jae
bound
jecxz
movsl
clc
push
aam
test
inc
shr
cmp
mov
clc
sarb
push
aad
adc
lcall
or
in
outsb
in
pop
fisubs
bound
jno
jg
xchg
pop
aaa
jns
mov
xor
adc
je
es
jb
scas
pop
add
dec
cmp
ljmp
mov
pushf
mov
xchg
insb
sbb
bound
in
lds
xchg
cli
jmp
jecxz
jnp
out
sahf
into
pushf
pop
pop
cmp
pushf
or
sub
jns
adc
popf
clc
jg
dec
push
test
cmc
sbb
push
fadds
or
jns
imul
push
insb
loopne
aad
mov
iret
inc
xchg
jno
scas
push
mov
and
das
sarl
out
das
loopne
hlt
inc
lods
pop
cmp
mov
sti
inc
in
enter
add
mov
dec
lret
sbb
jnp
mov
mov
sub
scas
test
mov
push
ja
add
xor
dec
jns
fs
mov
sub
push
inc
cmp
loopne
or
pushf
mov
jmp
stos
push
pusha
jmp
pop
imul
loope
adc
adc
cmc
stos
push
mov
sub
pusha
aad
add
lcall
popf
cwtl
inc
mov
loope
ljmp
or
leave
sbb
negl
adc
add
stos
and
mov
je
mov
mov
push
fidivl
mov
scas
jns
sti
filds
ret
enter
sbbl
jge
sub
mov
mov
fnstcw
and
dec
xchg
sub
push
js
mov
mov
and
fisubs
and
lret
rol
mov
test
push
jmp
xor
pop
pusha
test
ss
mov
lahf
adc
jl
mov
ds
das
mov
mov
inc
test
daa
cmp
sahf
cmp
cmpsb
stos
adc
fs
xor
mov
aaa
int
mov
aad
arpl
popa
insb
hlt
movsl
add
push
aad
sti
lods
sarl
add
lret
cwtl
test
mov
xchg
lds
jle
inc
add
jl
xchg
jbe
ficomps
and
jle
xchg
pop
jecxz
imul
cmp
mov
xor
mov
scas
cld
pushf
and
pop
xor
mov
dec
mov
cmp
shl
movsl
pop
dec
scas
adc
out
xlat
adc
pop
nop
sbb
test
xchg
push
movsb
shrl
jo,pt
push
scas
inc
jge
fistpl
pop
jnp
add
add
mov
bound
mov
in
pop
add
fadd
movsl
in
sar
repnz
push
inc
add
mov
lods
cwtl
fbstp
xchg
lods
and
sahf
cmp
xchg
out
xor
stc
mov
sub
xchg
loopne
adc
push
cmp
jo
out
pop
adc
or
out
mov
xchg
mov
ljmp
mov
jae
dec
insb
jo
les
sti
data16
loope
fsub
prefetch
or
xchg
cmpsb
in
in
add
mov
or
les
test
mov
stc
dec
pop
jno
movsl
lock
cwtl
pop
es
mov
fldcw
and
jge
pop
push
fs
mov
push
iret
or
inc
daa
jg
lock
mov
pusha
adc
mov
adc
sbb
push
inc
test
fstpt
shll
and
push
or
pop
test
jnp
push
icebp
mov
push
cmpsb
sbb
xchg
dec
mov
int3
outsb
daa
in
inc
inc
scas
daa
setae
mov
daa
mov
sbb
push
jns
fucom
rolb
xchg
push
std
mov
stos
sahf
add
mov
gs
fs
outsb
subl
cld
repz
ss
enter
gs
frstpm(287
jecxz
or
cli
mov
sti
stc
les
sbb
std
jmp
jb
mov
fs
lret
xchg
sub
inc
jnp
shrl
aaa
std
in
popl
inc
jb
hlt
mov
jmp
cmp
call
jne
arpl
test
mov
aad
xor
push
xchg
mov
cwtl
ja
pop
stos
xchg
neg
mov
shl
dec
cmp
sbb
xchg
push
mov
sub
mov
mov
sub
orl
in
mulb
cmp
mov
outsb
test
jle
xchg
mov
stos
daa
sub
aam
push
roll
jbe
inc
inc
imul
pushf
jno
fnsave
jnp
xor
aam
daa
sub
call
cmc
ret
inc
adcb
sarl
mov
or
mov
push
clc
xchg
inc
mov
cmp
mov
and
sbb
and
int
inc
sub
jno
pop
lock
aaa
cmpsl
cld
nop
push
add
inc
xchg
loope
xor
inc
mov
jne
jo
cltd
cs
sbb
mov
xchg
jb
pop
test
sub
js
lods
dec
sub
lret
jp
insl
mov
stos
and
clc
cmp
mov
add
or
lret
divb
mov
xchg
mov
repz
and
stos
xor
pop
lds
and
inc
jns
sbb
lea
mov
dec
out
lret
aaa
inc
rcll
test
test
inc
aas
xlat
push
xchg
lods
sub
jp
rorl
cld
mov
dec
xchg
ret
inc
or
xor
repz
insb
jl
lcall
xchg
pop
lods
xor
xchg
inc
imul
mov
dec
add
or
xchg
xchg
cs
fwait
mov
push
sbb
in
mov
and
sbb
jae
jbe
sub
mov
and
cmp
xor
es
nop
ret
scas
dec
dec
shll
addr16
out
cmp
mov
jo
stos
andl
call
fstl
jge
aam
pop
jg
inc
pop
insl
loope
or
and
and
push
dec
int3
add
cmc
cmp
sbb
mov
sbb
pop
iret
jg
pop
fbstp
mov
and
les
mov
sbb
sbb
add
mov
ret
sbb
cmp
cmp
lods
pop
push
mov
ss
xchg
dec
dec
jl
jb
jne
loope
sbb
pop
or
je
sti
mov
cmpsb
mov
dec
dec
insl
test
mov
insl
mov
test
lods
les
and
jbe
fs
cld
or
or
jle
jge
mov
push
or
push
inc
daa
xchg
sarl
mov
scas
inc
cld
call
lcall
push
push
aaa
loop,pn
ds
sbb
std
jae
mov
out
imul
mov
sbb
aam
ss
and
stos
enter
loope
pop
popf
or
mov
and
inc
ja
add
cmp
mov
out
lea
mov
repz
repz
rcr
and
sub
mov
cmpsb
cmp
mov
xchg
insb
push
mov
xor
mov
es
xor
xor
pop
mov
xor
and
mov
jns
inc
cltd
pop
stos
pop
push
pop
stc
mov
xchg
les
mov
stos
leave
xchg
cmp
out
xor
cmc
cmpsb
cmpxchg8b
into
mov
mov
inc
sarl
pop
add
hlt
or
lret
dec
and
cli
insl
in
pop
cmc
push
push
inc
pop
js
inc
cmpsl
pop
mov
pop
or
ret
stc
xchg
insb
push
adc
xchg
cmpsl
outsb
dec
xor
cs
jecxz
pop
inc
out
xor
cli
and
movl
adc
sub
mov
inc
jno
mov
in
mov
lret
imul
mov
repnz
stos
sarb
xchg
lds
cld
shl
ret
xor
cli
mov
push
adc
daa
sub
push
jno
jl,pn
xorb
fbstp
ret
push
insl
inc
xchg
fiaddl
fldt
add
repnz
xor
inc
cmpsl
add
or
mov
ja
push
push
push
jns
inc
sbb
sub
int3
add
jg
jno
jecxz
adc
pop
jns
and
pop
mov
hlt
loopne
add
js
sbbl
movsb
mov
xlat
xchg
ficoms
push
xchg
fcoml
aaa
jnp
adc
xor
cld
pop
cld
fstl
or
mov
jne
lea
stos
jl
mov
mov
and
sbb
daa
push
divb
mov
xlat
push
and
adc
cmc
ror
adc
les
cmpsl
rclb
jg
sahf
add
nop
mov
rorb
xchg
adc
stos
lock
xorl
add
push
sbb
jbe
rorl
aad
inc
loope
push
dec
js
insl
and
cmpsl
fsubrs
jg
or
cwtl
aas
mov
das
call
jne
add
scas
mov
out
ret
cs
or
xor
in
in
or
mov
mov
in
imul
int
jno
bound
xor
add
movsl
add
sub
xchg
mov
pop
dec
call
mov
outsl
je,pt
ds
xor
lahf
pop
xlat
ds
jae
xlat
add
je
enter
test
cmp
adc
cmp
push
jecxz
pop
mov
xchg
jg
and
outsb
jo
inc
inc
out
inc
pop
or
rcl
out
testb
stos
icebp
push
add
pop
cmp
jle
xor
jle
loopne
add
xchg
jle
sbb
push
inc
outsl
stos
xor
pop
aaa
sbb
sbb
test
push
and
cmp
pop
sbb
jb
pushf
mov
dec
in
and
in
jne
cmpsb
icebp
out
loope
in
popa
pushf
mov
daa
xchg
adc
jge
sahf
out
hlt
repnz
jecxz
insb
and
mov
mov
nop
pop
fwait
push
fbld
or
clc
mov
gs
cwtl
fisttpl
adc
mov
in
adc
cli
push
sbb
or
push
add
shrb
xchg
aas
mov
test
cmp
outsl
xchg
outsl
mov
ret
push
push
jl
faddp
aam
cmovo
add
test
test
inc
or
fs
divl
mov
xor
fnsave
mov
sub
push
aaa
ss
inc
idivb
or
push
inc
mov
scas
loope
mov
call
dec
out
dec
out
adc
sahf
aam
fdivrs
pop
outsb
repz
ljmp
hlt
insb
or
addr16
xor
mov
movsb
das
mov
sbb
push
je
insb
daa
add
xor
sbb
out
xchg
or
push
push
sbb
push
dec
sbb
test
cmp
popa
adc
push
stos
dec
lret
out
jmp
mov
sbb
ja
cmp
jl
adc
xchg
mov
dec
inc
inc
test
adc
movsl
pop
mov
dec
scas
daa
pop
and
inc
fstpl
adc
adc
pushf
xchg
mov
adc
adc
lock
mov
push
add
pushf
push
loop
mov
arpl
cli
and
lock
repz
cmc
arpl
inc
cmp
cmp
jno
pop
in
push
stos
in
in
mov
mov
mov
es
add
or
pop
dec
sub
jmp
and
inc
xchg
sbb
mov
test
inc
or
dec
mov
sub
stos
xor
fcoms
aaa
int3
data16
xlat
roll
mov
push
rcrl
sarl
push
mov
xchg
ficompl
push
or
scas
int3
xchg
cmp
adc
lock
sbb
in
enter
push
and
nop
mov
mov
and
mov
mov
leave
jecxz
lods
jno
mov
inc
movsb
fsubrp
aas
jecxz
cltd
lds
cs
call
dec
cs
mov
ljmp
fdivl
lods
inc
mov
mov
push
add
repz
sbb
out
push
or
dec
pop
cmp
lcall
cwtl
xchg
mov
dec
in
nop
arpl
cmp
into
mov
mov
add
dec
sub
mov
fstpl
popf
inc
sahf
outsl
aas
aaa
xor
adc
mov
mov
sarl
sub
xor
loop
dec
hlt
gs
fisubs
xchg
cmp
pop
daa
test
push
fsubs
push
shlb
xor
fcomps
pop
jno
add
enter
mov
test
jg
mov
insl
lcall
pop
out
hlt
movsb
cmp
inc
cmp
fcmovu
pop
dec
into
out
cmp
mov
push
out
or
lock
push
fstps
and
xchg
insb
lcall
sub
shlb
je
mov
mov
xchg
mov
xchg
cltd
push
fsubs
subb
push
jbe
test
loop
inc
pop
out
add
ficompl
fsubrl
push
arpl
scas
addr16
pushf
mov
aaa
cs
hlt
push
lock
pop
das
pop
testl
xchg
pop
lcall
mov
sahf
in
sbb
aas
lea
das
jnp
sbb
cmp
inc
pop
mov
aad
adc
sbb
sub
ja
inc
mov
jmp
mov
add
stos
notb
mov
jecxz
je
lods
loop
xor
sbbb
adc
sub
pop
dec
lret
stos
mov
pop
adc
aam
stc
add
mov
push
out
jns
ss
cli
shrl
mov
mov
in
sub
jmp
cmp
cltd
movsb
inc
frstor
inc
cwtl
bound
jl
or
ja
jle,pt
sub
enter
popa
insb
imul
js
lods
test
adc
popf
into
mov
jmp
xchg
cmp
pop
pop
cltd
inc
jl,pt
andb
mov
out
sbb
mov
xchg
ret
xor
mov
js
pop
adc
sub
mov
lret
pop
add
fucomp
push
jecxz
mov
ljmp
xchg
sti
rcr
or
subl
sbb
pop
shll
jle
xchg
adc
inc
ja
jle
sbb
jge
dec
int3
mov
mov
xchg
mov
stc
aam
pop
push
xchg
insb
adc
les
fs
adc
inc
xorl
enter
inc
jbe
insb
popa
cli
jae
addr16
ret
mull
sbb
jg
sub
rcll
enter
mov
push
arpl
pop
jp
test
cmp
sub
push
inc
lock
xor
xlat
or
aad
rcrb
popa
pushf
pmulhw
popf
mov
cmp
or
ds
clc
xchg
sti
and
or
popa
or
or
orl
pop
xchg
sti
lods
fcomps
jmp
subb
mov
movsb
push
xchg
in
xchg
mov
inc
sub
jnp
sub
shrl
add
add
lods
fidivs
leave
ja
xor
negl
jae
or
dec
into
outsl
mov
cmp
fiadds
jmp
addr16
movsl
movsb
mov
daa
ret
adc
pushf
mov
cli
adc
or
cmp
xchg
and
movsb
sti
rolb
adc
mov
das
insl
leave
jl
lret
push
outsl
fisttpll
xor
daa
stc
jno
scas
cltd
lods
scas
pop
jge
inc
mov
out
cltd
je
dec
add
dec
sbb
adc
sbb
cltd
aaa
leave
xor
jb
jno
mov
cmp
lods
push
pmaddwd
sbb
sbb
aas
lahf
or
lock
sub
lcall
popf
rcrb
lock
mov
pop
mov
iret
sbb
jge
pop
mov
pop
ret
sbb
sub
mov
jb
mov
mov
and
popf
cmp
xchg
xor
adc
add
fucomip
xchg
mov
leave
shl
sub
insl
lds
cld
insl
jl
xchg
lret
pop
shrl
addl
fcompl
mov
push
lods
in
mov
and
add
dec
ret
push
mov
fdivl
inc
or
inc
scas
scas
scas
pop
or
lods
inc
cmp
dec
inc
mov
add
cs
das
ljmp
sub
retw
cld
adcl
push
xchg
add
lahf
movsb
push
push
dec
lcall
hlt
iret
mov
orl
mov
cld
push
fimuls
pop
hlt
xchg
or
mov
sarb
mov
mov
outsb
and
movsl
mov
hlt
int
pop
adc
cmc
sbb
int
filds
xor
les
lock
inc
frstor
add
leave
sub
rolb
fmuls
out
lret
jmp
and
or
cli
aas
jno
cmp
add
in
mov
jmp
arpl
dec
int
mov
push
inc
and
jb
cmp
pushf
popa
xchg
cmp
mov
inc
test
xor
int
sbb
mov
dec
arpl
mov
push
scas
pop
rcrl
loop
inc
add
or
mov
mov
repnz
icebp
add
jbe
pop
rolb
scas
rcrb
cmpsl
popf
sahf
hlt
pop
leave
and
push
call
decb
ss
cmp
jb
mov
lds
out
jo
push
cmpl
push
scas
lock
into
pop
stos
sbb
sbb
insl
mov
mov
and
roll
sub
cmp
mov
sbb
daa
push
imul
jns
repnz
jns
mov
out
outsb
fstpl
jg
inc
iret
jecxz
je
scas
lock
fldl
jecxz
pop
xchg
inc
jg
xchg
dec
aas
or
mov
xchg
jmp
xchg
add
outsl
jecxz
mov
sub
es
loopne
je
cmpsl
dec
sbbb
test
add
sbb
pusha
adc
call
out
in
dec
pop
ret
repnz
out
pusha
push
pop
cmp
add
push
sti
jo
daa
lods
outsb
out
insl
mov
dec
dec
shlb
jge
arpl
sete
or
fucompp
lret
addb
or
cmpsl
or
icebp
push
test
insb
and
mov
jno
lds
dec
xor
bound
mov
ror
lret
pushw
in
cmpsl
or
pop
lahf
mov
rorb
push
xlat
mov
cld
sahf
aad
adc
lds
pop
xor
cltd
clc
lahf
call
xor
xchg
push
out
in
jmp
fwait
dec
stc
inc
mov
pop
xor
stos
xchg
testb
inc
pop
lcall
outsl
sbb
lods
sbbb
sbb
ljmp
jge
addr16
hlt
mov
mov
sub
fistps
jae
or
ljmp
mov
cli
repnz
mov
ljmp
int
test
cmp
fsubp
jmp
jecxz
xor
mov
out
or
mov
pop
sbb
jmp
dec
mov
xor
jl
loope
in
in
mov
xor
dec
cmp
cli
cmp
xor
cmc
push
sbb
or
pop
xchg
xor
das
mov
jg
dec
adc
or
cs
sub
and
push
mov
pop
or
add
mov
jno
mov
mov
rep
push
jns
sahf
sbb
adcb
movsb
dec
in
jbe
int3
xor
or
jl
pushf
lea
ds
sub
xor
lea
sub
pop
jns
rclb
gs
repz
adc
jae
mov
je
push
xchg
inc
mov
xchg
or
outsl
cli
dec
sbb
out
sub
lods
arpl
jp
pop
in
pop
pusha
mov
bound
fcmovne
pop
push
push
jecxz
sbb
mov
mov
mov
lcall
inc
mov
mov
add
mov
and
push
scas
dec
inc
das
sbb
jl
jp
insl
dec
in
xchg
lcall
push
sarb
dec
adc
test
adc
icebp
pop
dec
push
dec
cmpsb
mov
shll
lcall
jns
cmpb
jbe
cmp
rcrb
and
divl
xchg
pop
ficompl
mov
and
scas
aad
or
mov
xchg
loop
and
cwtl
mov
popf
push
js
aad
cmpsb
jmp
dec
aas
push
js
cltd
and
cltd
mov
jge
xor
and
icebp
or
dec
push
mov
inc
ja
push
mov
enter
sbb
adc
add
dec
add
jae
jne
push
pop
repz
push
lcall
cld
jb
int
add
ret
pminsw
xchg
decl
fsubrl
pop
push
sbb
repz
test
and
in
mov
sbb
shl
pextrw
or
or
sti
mov
ds
dec
ret
add
push
cmp
lods
xchg
or
lods
fidivrs
dec
sti
aam
sahf
and
xor
dec
sbb
ret
and
sbb
fisubl
scas
out
int
jns
stc
addr16
and
rcrl
mov
leave
or
enter
jl
jb
aad
enter
push
movsb
and
xchg
xor
push
testl
iret
jmp
dec
push
cwtl
stos
inc
das
mov
cmp
les
or
cmp
test
jge
mov
sbb
cmp
fsubl
push
push
notb
adc
jle
dec
leave
jge
add
push
dec
loope
test
add
shlb
cmp
mov
sbb
xchg
mov
cmp
or
jl
xchg
sub
xlat
test
push
pop
jae
sbb
in
mov
cmp
sbb
adc
xchg
jbe
fsubl
mov
scas
push
sub
mov
orl
popl
mov
mov
mov
add
or
jle
shrb
fs
pop
ljmp
mov
sub
in
cld
fstpt
pop
loopne
xchg
stc
int
sarl
inc
push
jge
sub
ja
cmp
mov
inc
adc
andl
mov
pop
int3
add
pop
nop
test
xchg
lods
jle
addr16
cmp
pop
jmp
add
dec
and
push
test
dec
cmpsl
and
or
in
xor
jbe
xor
rcr
testl
mov
je
ret
sahf
js
ret
sahf
rorb
add
xchg
mov
fidivl
mov
add
iret
xor
syscall
mov
ja
inc
cmp
shrb
xchg
push
in
emms
add
push
push
jno
das
pop
mov
add
roll
push
imul
adc
imulb
xchg
fdivl
inc
push
mov
cmp
jne
pusha
mov
mov
lods
xor
rcll
jnp
mov
push
inc
pop
in
fucom
in
push
push
add
cmp
mov
pop
pusha
push
outsl
ja
cmpsb
push
shrl
cmp
pushf
int
dec
mov
inc
pusha
pop
pop
inc
int
xchg
dec
mov
jecxz
fsubl
mov
loop
sub
rclb
inc
fldcw
or
fwait
test
rclb
psrad
fisubrl
aam
dec
xchg
add
jmp
rorb
nop
mov
addr16
int3
out
mov
xchg
das
pop
add
push
je
in
out
mov
push
cltd
jge
jecxz
mov
hlt
scas
xchg
cmp
movsl
xchg
mov
cmp
cltd
lahf
test
arpl
jge
pop
cwtl
sbb
xor
mov
jns
add
xchg
push
imul
adc
pop
out
mov
mov
fimull
cmp
ja
popa
mov
lahf
cmp
dec
xchg
mov
sbb
roll
subl
ljmp
rcrl
pop
or
push
aam
loope
mov
xor
inc
and
movsl
popw
insb
mov
sahf
scas
aaa
cmp
inc
bound
movsb
cmc
jnp
push
xchg
push
shl
lea
sbbb
ds
rcll
push
shlb
lcall
dec
scas
sarl
dec
mov
enter
xchg
loopne
or
mov
mov
cmp
je
and
xlat
je
cmp
dec
pop
jo
jnp
test
mov
lcall
jae
movsb
xchg
sbb
sub
jl
dec
movsb
rorl
dec
push
mov
fistpl
or
sbb
sub
jmp
fidivrs
sbb
daa
stc
push
scas
bound
jmp
pop
push
sarl
xchg
arpl
jmp
test
cmp
pusha
fadds
insl
cmp
xorb
mov
jb
mov
mov
popa
lret
mov
fildll
repnz
jle
loop
add
scas
sub
inc
ret
or
xchg
push
fwait
push
stc
xor
cld
cltd
cld
dec
and
dec
and
filds
movsb
test
addr16
or
aaa
jg
push
sbb
sbb
lcall
push
clc
push
jl
inc
jo
je
jbe
push
popf
push
es
into
mov
jne
mov
xchg
outsl
push
andl
mov
pop
aad
and
or
or
negl
adc
in
push
add
test
and
lcall
mov
push
xchg
sbb
jmp
test
add
in
sbb
sub
fsubr
sbb
shll
in
xor
sub
gs
fsubs
mov
xchg
cld
push
mov
int3
daa
sti
sub
mov
pop
sub
mov
iret
xchg
repz
xchg
xor
cmpsb
jecxz
mov
jnp
cmp
pop
test
gs
test
add
mov
stc
add
add
lahf
popa
je
movsb
dec
int3
xchg
aas
rorl
lcall
xchg
push
xlat
loope
mov
dec
in
fwait
je
xor
mov
xchg
fsubl
daa
mov
jmp
mov
fdivs
sbb
repnz
push
mov
fs
inc
rolb
push
sub
push
test
add
push
or
in
ret
cmp
test
xchg
cmc
out
or
pop
add
pop
dec
inc
xchg
cmp
mov
es
shlb
sbbb
lea
dec
inc
dec
push
pushf
fs
pusha
shll
xor
imul
mov
mov
dec
push
xchg
repz
push
jae
mov
pop
sbb
out
in
iret
loope
ja
sub
in
xchg
dec
mov
push
push
push
xchg
xor
jl
insl
add
pop
mov
fcoms
test
xchg
jb
xchg
mov
jb
stos
pop
dec
dec
sbb
xchg
pop
or
shl
out
aam
jg
mov
sub
les
mov
pop
ljmp
dec
hlt
jns
jns
jns
iret
add
loop
das
stc
enter
xchg
and
mov
pusha
hlt
pop
inc
outsb
rolb
mov
xlat
out
cmpsb
sti
push
push
push
sbb
in
and
mov
dec
shll
jp
test
scas
scas
out
lret
jo
std
cmp
fidivrl
mov
mov
inc
cmpsl
mov
push
adc
imul
xchg
ljmp
or
bound
xor
pop
enter
push
rorb
imul
inc
dec
mov
in
test
xlat
xchg
or
jns
lea
into
gs
add
fists
xchg
cld
fndisi(8087
insb
fmulp
into
xchg
sahf
jle
rcll
inc
lcall
lods
les
xchg
push
jo
pop
int
ja
jns
mov
int
cmpsl
loopne
jne
sub
inc
inc
inc
jb
or
scas
or
ror
fwait
mov
cli
shll
push
fisubrs
sbb
push
mov
adc
inc
mov
sbb
inc
xchg
xchg
lahf
jnp
adc
jae
xor
and
and
dec
aaa
pop
in
fs
insl
out
ret
pop
cmp
sbb
out
add
xchg
lcall
push
scas
data16
fiadds
or
inc
fisubrl
cmp
sub
inc
mov
fimuls
aad
test
enter
into
dec
test
inc
xor
mov
jns
dec
sti
pop
xchg
out
push
or
mov
mov
nop
and
mov
fwait
popf
movsb
pop
jb
fwait
nop
sub
sbb
add
jmp
jns
outsl
inc
xchg
jp
enter
sbb
mov
inc
dec
jge
jbe
in
pop
pop
js
jb
fnstsw
movsl
call
pop
lds
stc
ss
fldt
loopne
pop
add
aam
dec
in
mov
inc
test
insl
into
cmp
dec
mov
arpl
int
xchg
pop
fimuls
adcb
icebp
clc
sub
shl
lret
adc
cmp
mov
adc
mov
insb
cmp
inc
xchg
cmp
leave
testb
aas
daa
mov
into
and
jno
and
pop
fistpll
cmp
addr16
push
lret
dec
push
loope
mov
pop
sbb
xor
xor
mov
mov
addr16
sub
fadds
rolb
jns
pop
cmpsb
xchg
push
adc
int
fmuls
pop
pusha
mov
mulb
mov
push
call
test
mov
cmp
pop
cmp
cs
in
scas
imul
leave
sub
movsl
popf
pop
add
and
sarl
jno
dec
and
inc
mov
inc
int
pop
xchg
notb
test
test
repnz
int
cmp
rclb
jle
ficoms
fwait
scas
loopne
adc
int
mulb
jecxz
aaa
lods
mov
add
mov
mov
sbb
jmp
pop
outsb
adc
pop
mov
je
push
imul
ret
push
dec
stos
mov
cltd
jg
or
mov
and
outsb
xchg
mov
adc
pop
inc
outsl
out
pop
xchg
dec
sub
in
mov
dec
stos
jae
xor
add
shrb
addr16
dec
add
out
scas
mov
pop
stos
icebp
sub
fcomps
lcall
hlt
lahf
lea
xchg
movsb
add
scas
add
daa
pop
or
push
push
cmove
push
jl
pop
cmp
push
mov
adc
push
or
dec
loopne
mov
sub
rclb
es
std
jo
pop
lods
fisttpl
inc
mov
ficoml
lcall
jl
xchg
bound
in
cwtl
sahf
xchg
clc
jae
ret
pop
xchg
sarl
popa
lret
out
xchg
mov
add
iret
mov
scas
call
cmpsb
add
mov
fnsave
and
mov
mov
icebp
cmp
adc
xchg
aas
les
mov
cmp
jge
mov
inc
ja
pop
sahf
and
pop
push
jno
adc
or
cmpsb
sbb
decb
into
pop
clc
xor
dec
int
push
int3
insl
stc
cmpsb
jmp
xchg
jne
mov
mov
and
inc
aaa
jns,pt
movsb
cmp
mov
dec
lret
sbb
insl
xchg
and
adc
cmp
test
push
cmpl
cli
pop
cs
aam
xor
adc
sub
mov
sbb
lods
sarb
mov
ret
dec
shll
pop
stos
cltd
data16
ljmp
sahf
pop
lds
xlat
ret
mov
or
mov
jecxz
pop
mov
inc
or
mov
adc
mov
outsl
cld
push
pop
aam
xor
cmpsb
test
cmpsl
leave
jmp
pop
cmp
mov
inc
jno
stos
adc
mov
push
int3
add
add
jne
leave
mov
call
addl
iret
mov
and
inc
enter
lock
push
xchg
sub
mov
and
cmp
xchg
and
fldt
into
adc
movsb
and
repnz
xor
push
sbb
jmp
add
mov
call
inc
cmp
daa
int3
xlat
mulb
mov
cmc
icebp
adc
test
add
add
mov
push
stos
sub
push
sbb
push
jb
pushl
test
and
pop
pushf
cmp
jb
push
dec
jo
orl
sub
es
add
ret
jns
and
pop
cwtl
test
adc
into
ret
enter
xor
or
mov
mov
sub
mov
arpl
mov
rorl
stc
mov
xchg
sbb
push
and
push
sub
xchg
pop
dec
push
outsb
cmpl
xor
out
xchg
jle
mov
lods
rcr
fildll
xor
xor
loopne
push
cmc
ds
sub
inc
adc
or
dec
cld
out
push
stos
xchg
cld
xlat
jnp
fs
inc
out
sbb
daa
shl
adc
dec
mov
and
outsb
fcos
cs
mov
pop
aad
add
push
fidivl
clc
xchg
push
or
mov
mov
mulb
pop
and
std
pop
inc
and
hlt
pop
or
outsb
xchg
aas
push
in
sbb
mov
inc
sbb
mov
dec
stos
into
or
sub
mov
inc
xchg
mov
mov
pop
js
mov
cmp
insl
pop
or
sub
adc
push
pop
aas
and
xchg
popf
push
sbb
leave
das
sti
fcomps
sbb
pop
push
adcb
fcoms
fcmovbe
mov
negb
cs
sbb
push
jbe
in
xchg
cs
test
rorl
or
clc
nop
sbb
popa
and
call
xor
stos
das
or
or
jbe
mov
pop
jle
arpl
andb
aad
sbb
jl
int
sbb
test
sahf
addr16
popf
or
cltd
push
sahf
xor
mov
push
ja
pop
outsl
insb
out
or
shrl
push
sarl
insl
mov
jle
dec
dec
outsb
repnz
inc
dec
imul
stos
rcl
insl
ret
sbb
addr16
jnp
stos
lods
in
or
imul
jae
sbb
pushf
jb
lds
mov
js
push
outsb
inc
lock
and
xchg
cmpsl
sbb
mov
jns
lahf
dec
out
and
mov
xchg
popf
ret
fadds
adcb
pusha
mov
or
enter
jle
cmp
test
pop
inc
lahf
inc
jge
shll
mov
fcoml
inc
popa
jg
sub
mov
xchg
rcr
pop
sub
xchg
arpl
outsb
pop
sbb
les
mov
ss
sub
xor
cwtl
dec
sbb
cmp
jne
leave
add
adc
addr16
bound
jbe
mov
sub
sub
jle
cmpsb
out
loop
stos
shl
mov
or
jmp
cld
cltd
mov
jbe
aad
mov
aaa
and
movsb
sbb
rcr
lahf
sbb
cmpsl
icebp
mov
hlt
cmp
in
ficomps
in
gs
push
setbe
addb
pop
ret
push
cli
and
decb
shll
add
jbe
mov
and
xchg
sbb
pop
or
mov
or
mov
cmp
adc
das
cmpsb
mov
ja
pop
fnstcw
inc
hlt
int3
std
fisttpl
dec
jne
mov
cmp
aaa
or
lcall
xor
xor
jmp
inc
xchg
ret
adc
es
mov
adc
pop
es
dec
push
int3
lods
nop
lahf
loope,pt
cmc
ds
call
clc
jmp
int3
push
gs
push
mov
xor
dec
sub
fwait
push
scas
stos
xor
out
mov
mov
fdivl
jno
mov
dec
adc
pop
nop
adc
mov
ds
out
jnp
inc
xchg
or
int
aas
mov
addr16
lcall
stos
stc
inc
insl
shll
dec
cwtl
sbb
pushf
dec
fs
and
xlat
pop
sbb
push
jmp
dec
xor
rorl
push
lret
jns
xchg
fwait
jns
push
out
out
push
mov
pop
jmpw
add
stos
xor
mov
ljmp
inc
mov
mov
and
lods
mov
jo
scas
mov
les
sub
clc
shlb
rcrb
lds
pop
gs
sub
ds
repz
pop
add
mov
imul
push
and
push
les
lds
jmp
pop
or
mov
aam
cmpsb
mov
or
push
sbb
sbb
xchg
lcall
loopne
fnstenv
sahf
cld
test
ror
push
xchg
jo
or
dec
jmp
adc
data16
mov
xchg
ds
daa
imul
lret
cmc
dec
mov
pushf
or
dec
cmp
xchg
lea
or
push
adc
and
push
aad
test
loope
cmpsb
inc
push
pop
lods
sets
subl
xor
daa
inc
pusha
aad
cmp
push
gs
aaa
push
xor
sbb
aaa
jns
jo
pop
mov
cmp
and
xor
mov
adc
imul
inc
arpl
idiv
scas
subb
mov
adc
xchg
mov
lcall
fs
adc
xchg
mov
push
cmpsb
into
add
rcrb
mov
jno
pop
pop
push
push
ret
xchg
inc
xor
pop
cmp
daa
hlt
enter
and
popf
push
add
insb
xor
xor
xor
pop
xchg
repnz
cmp
pop
inc
stos
out
int
cmp
pop
mov
sbb
push
into
aaa
cld
ret
out
jb
lret
xchg
shlb
pop
jl
insb
movsl
sub
cwtl
mov
test
pusha
arpl
int3
loopnew
mov
pop
lahf
sar
push
mov
mov
inc
call
les
sbb
sub
call
out
lods
sbbl
dec
sub
adc
pop
frstor
stos
push
sti
arpl
inc
and
in
js
pop
sub
and
int3
and
push
dec
cmp
test
jo
fcoml
test
pop
and
nop
or
ss
loopne
stos
incb
adc
xor
scas
in
inc
rclb
or
outsb
cmp
jae
mov
jo
dec
std
movsb
dec
lds
mov
cmpl
insb
jne
movsb
mov
int3
jge
xchg
js
add
sbb
mov
inc
dec
mov
rorl
lahf
cli
xchg
mov
and
les
xor
into
gs
jmp
test
push
lret
adc
enter
mov
mov
jmp
jecxz
and
mov
adc
sub
and
daa
cmp
lcall
inc
and
pop
xchg
enter
jecxz
imul
jp
ret
jp
push
push
add
jbe
loopne
dec
fdivl
sub
outsb
add
or
fsubs
int
dec
mov
jle,pn
or
ror
pusha
jns
sbb
pop
pop
popa
xchg
add
dec
xchg
dec
fs
sub
cltd
stos
mov
sbb
xchg
jge
sbb
jbe
jbe
aad
mov
add
jp
inc
scas
mov
test
out
pop
std
xlat
add
xchg
les
jg
je
xlat
lea
daa
ret
pop
inc
adc
cmp
and
xchg
pusha
cmp
jg
cs
pop
cmp
mov
out
call
xchg
mov
std
cmpsl
fwait
push
ljmp
xorl
pushf
cli
fcoms
sbb
push
cmpsl
mov
mov
sahf
xlat
inc
je
add
loope
cld
xor
lea
sti
push
mov
jae
std
jne
mov
jbe
data16
add
inc
sbb
scas
xor
roll
sub
cmpsl
jne
xchg
jae
xchg
call
mov
femms
rep
pushf
mov
call
lods
dec
add
ljmp
and
mov
call
mov
jbe
xchg
xor
fs
inc
adc
cltd
or
ljmp
in
xchg
lret
xchg
repz
inc
push
lock
jmp
pusha
dec
or
ret
and
hlt
mov
fldcw
in
dec
fiaddl
pop
cmp
inc
or
nop
lcall
sub
dec
add
mulb
incl
xchg
hlt
xor
lods
lods
push
pop
test
sub
scas
test
sub
inc
xor
xchg
adc
jl
or
scas
and
lret
std
pusha
shl
clc
sbb
jmp
sbb
push
pop
sahf
adc
jbe
aaa
js
daa
xchg
mov
sbb
jge
ja
sbb
inc
jbe
outsl
mov
xor
stc
jecxz
in
push
mov
jb
xlat
sbb
pop
jp
loopne
mov
out
sub
std
arpl
lret
mov
pop
and
lea
sbb
pusha
dec
push
jmp
mov
xor
dec
and
je
or
inc
mov
xlat
outsl
das
lcall
lods
push
cmc
lock
fldt
rcll
xor
repz
faddl
rcr
fisubrl
fdivrl
lret
les
enter
add
inc
sub
sti
je
lods
or
cmpsl
test
jp
bound
data16
stos
sub
sbb
and
mov
shll
nop
stc
in
mov
shrl
mulb
cs
das
xor
push
push
mov
mov
rol
push
insl
aaa
and
jnp
add
es
mov
test
pop
stos
enter
aas
test
stc
into
dec
stos
int
jns
push
and
scas
cmpsl
lods
mov
lcall
movsb
xchg
push
ds
mov
mov
outsb
cld
mov
sub
cmpsl
pop
xor
fwait
add
roll
mov
cltd
mov
scas
cmpsb
xor
adc
and
repz
sti
cmp
and
scas
push
lret
xor
bound
fisubl
cmpsb
call
jmp
test
and
or
pop
inc
outsl
mov
mov
xchg
popa
les
sbb
aam
jmp
bswap
daa
out
test
mov
and
not
xchg
xchg
push
pop
jp
insb
out
inc
xchg
jbe
stc
mov
inc
lret
in
roll
popf
bound
add
les
and
icebp
jg
fisttpll
loope
imul
cmp
mov
add
fildll
cmp
and
aaa
or
push
repz
repz
push
pop
mov
xlat
call
mov
mov
std
cmp
pushf
or
int3
testb
cld
or
lods
add
xor
cwtl
cmp
clc
push
xchg
adc
in
mov
dec
dec
sub
mov
fildl
or
sahf
cmp
push
push
hlt
cwtl
adc
ljmp
lods
dec
add
clc
xor
sbb
fisttpl
std
dec
push
loopne
adc
mov
jmp
int
dec
lea
sahf
enter
push
sbb
jmp
sub
push
lds
daa
jns
sub
lds
add
push
movsl
mov
sub
inc
push
sub
arpl
sub
dec
xchg
sbb
notb
xchg
faddl
shrl
addb
lods
xor
pop
aas
cs
xor
cli
or
xchg
xchg
and
repz
or
outsb
cs
orb
xor
inc
ljmp
subb
xchg
jb
mov
dec
jmp
xchg
jmp
push
js
mov
xchg
dec
lods
data16
mov
pop
lea
jb
cs
cmc
jg
in
add
jecxz
jmp
and
xchg
cmpb
cltd
jl
movsb
lock
loop
sub
cmp
push
pusha
aas
inc
jo
std
xchg
sbb
inc
jmp
outsb
or
mov
add
jmp
pop
xchg
or
jae
mov
or
xchg
dec
inc
cmpsl
dec
aad
mov
push
dec
adcb
xchg
pop
in
xchg
sbb
sbb
sub
sbb
xor
push
rcrb
lods
ss
cli
js,pt
xchg
sbb
mov
or
sub
rorl
and
dec
add
ljmp
xchg
xor
jecxz
sub
xor
es
dec
mov
sub
fbld
xchg
call
es
hlt
int
or
scas
incb
dec
pushf
pop
mov
cmp
pop
sub
sbb
insb
rcrl
int
aaa
mov
and
cmp
mov
and
clc
dec
cltd
in
sbb
scas
lret
push
pop
or
dec
rcr
out
xor
lods
jnp
xchg
lahf
mov
dec
imul
repz
rcr
pushf
ljmp
xchg
cmp
or
pop
mov
fmuls
ret
xlat
push
lret
enter
les
inc
mov
adc
daa
aas
cwtl
or
sub
fwait
cmp
cmp
or
in
lods
repnz
sub
mov
sbb
mov
jecxz
jecxz
mov
adc
adc
aaa
xor
adc
fdivrp
ret
pop
bound
jp
iret
popf
push
outsb
mov
push
in
inc
lcall
notb
mov
icebp
fstpt
and
sbb
pop
scas
dec
insl
test
gs
shr
scas
or
mov
or
jne
jns
in
and
adc
mov
mov
adc
mov
in
lds
cwtl
movsl
dec
pushf
shll
dec
clc
xor
adc
in
add
movsl
data16
cmovle
shl
sub
stos
push
xor
rclb
bound
and
jo
jno
insb
sbb
in
xlat
dec
incl
cmp
cmp
out
cli
imul
xchg
jne
in
sbb
dec
clc
add
cmp
aaa
or
sbb
dec
push
sub
adc
xchg
js
xor
push
push
test
cmp
lret
ja
ss
jg
sub
jg
push
ret
in
cmp
popf
mov
mov
inc
test
add
jecxz
test
mov
sub
mov
fisubrs
xlat
add
xchg
loop
iret
ret
and
mov
pop
cmp
cltd
cmp
cmp
jmp
or
daa
or
or
cmp
and
sub
mov
outsl
mov
push
xor
insb
fcomps
cmpsb
andb
leave
dec
mov
mov
mov
scas
or
dec
inc
repnz
repz
popf
jne
call
add
leave
das
or
cmp
mov
in
into
xchg
xor
in
lcall
mov
jecxz
mov
mov
dec
fnstsw
loope
cmp
test
cs
push
shrb
inc
mov
subl
or
xchg
dec
mov
js
subl
in
inc
repnz
dec
enter
jle
mov
repz
xchg
sbb
stos
outsl
xchg
in
xor
fisubs
lods
inc
into
aad
fnstenv
mov
mov
push
cmp
mov
cmpb
divl
lds
mov
push
dec
daa
xlat
or
xchg
loop
push
in
mov
or
out
push
pop
cmp
daa
xor
jl
fs
dec
or
arpl
jno
rcr
sbbb
in
inc
pop
inc
movsl
in
movsl
movsb
dec
outsl
ljmp
fs
mov
clc
clc
push
ja
cs
mov
pop
aam
dec
cmp
dec
les
addr16
ret
jmp
add
sbb
xor
ja
mov
inc
insl
scas
sub
mov
add
gs
add
fchs
jnp
aad
mov
testb
es
decb
aad
neg
daa
pop
fs
inc
and
cltd
in
aam
mov
dec
or
jecxz
push
pushf
cmc
aam
or
ss
iret
test
arpl
das
insl
fsub
mov
hlt
cmp
fnsave
sub
sub
pushf
and
cmc
xchg
and
daa
mov
push
mov
push
ret
fwait
rcl
sbb
adc
mov
cld
xor
inc
or
ja
test
xor
mov
aaa
xchg
mov
and
sbb
in
int3
pop
dec
mov
or
lahf
mov
jp
movsb
sarb
jle,pn
das
dec
test
std
iret
mov
or
push
scas
fwait
xchg
pop
inc
dec
cmp
pop
adc
cltd
push
int3
imul
dec
lret
fcmovb
mov
lods
mov
ss
lods
into
out
cld
cmpsb
dec
mov
mov
je
test
mov
clc
push
lret
bound
call
sbb
inc
ds
sub
pushf
sub
dec
inc
in
mov
test
loope
push
xor
daa
adc
mov
xor
mov
call
roll
stc
mov
pushf
cld
mov
add
dec
rorb
outsb
out
frstor
pop
movsl
jecxz
int
call
enter
hlt
rcll
jmp
xor
xor
pop
fcomps
cwtl
call
adc
ljmp
cmp
jmp
jp
mov
out
dec
lret
push
scas
je
push
xchg
and
test
and
push
pushf
mov
scas
lock
shrb
mov
push
xchg
xchg
leave
das
mov
xor
adc
into
shlb
jmp
dec
cmc
jp
cltd
mov
xor
jns
mov
into
mov
sbb
test
fcomps
pop
enter
rclb
or
xorl
aam
mov
and
sbb
and
jmp
sbb
or
sbb
push
jae
ret
aas
js
xchg
stos
loope
mov
lret
call
ja
cld
mov
in
repnz
mov
sbb
cmp
cmpb
js
mov
hlt
add
loop
adc
outsb
das
sbb
in
and
sbb
ret
pop
gs
mov
and
scas
int3
push
shlb
popf
push
jo
adc
jmp
sti
ret
jle
ret
and
popa
cld
inc
data16
into
shrl
daa
int3
push
lods
sbb
mov
dec
in
lahf
xchg
adc
or
mov
sub
jno
ss
pop
xor
shr
out
int
dec
inc
fsubrl
mov
sbb
cmp
pushf
into
mov
sub
dec
insl
rcll
inc
mov
into
filds
stos
cwtl
pop
sarb
rol
cmp
mov
pop
xchg
aam
hlt
xchg
sub
daa
in
and
mov
jbe
xor
leave
push
sub
dec
movsl
std
lods
pusha
push
inc
aaa
mov
in
mov
jbe
cmp
add
inc
popa
sahf
add
repz
jecxz
lret
inc
les
sbb
add
mov
add
dec
pop
outsb
mov
shrl
sbb
mov
rcrb
lahf
pop
fisttps
push
ljmp
mov
ljmp
dec
roll
shlb
sub
nop
out
xor
dec
clc
add
mov
mov
mov
mov
scas
fdivrp
jmp
repz
stc
mov
idivb
aam
pop
pop
call
mov
out
cmp
jbe
out
adc
dec
std
pop
add
movsl
xchg
es
jge
adc
mov
xchg
push
jae
jne
xchg
push
fadds
js
daa
add
jns
fidivl
into
in
pop
mov
out
inc
push
xchg
push
mov
push
into
cli
movsl
shll
loop
mov
and
mov
aam
ljmp
repnz
mov
mov
aad
cmp
mov
js
std
lods
adc
push
jp
jg
jp
cmp
pop
push
lods
cli
cli
adc
or
jge
xchg
fmulp
test
and
scas
lea
clc
sub
pop
jp
scas
jbe
mov
xchg
mov
ljmp
mov
test
mov
jp
mov
ss
rorl
mov
sub
push
cwtl
jl
test
rol
pop
xchg
cld
or
adc
fcmovne
orl
out
push
cmp
in
push
in
inc
and
stos
cmp
mov
sub
sbb
pop
jge
push
push
mov
sbb
xchg
roll
or
add
push
mov
xchg
bound
xchg
mov
stos
scas
ljmp
in
clc
insb
adc
or
mov
inc
jo
pop
call
fildll
and
xor
fwait
adc
fcomip
jo
popf
das
outsb
repz
sbb
xchg
push
mov
test
imul
js,pt
scas
mov
push
jp
incl
lcall
loopne
mov
hlt
pop
movsl
dec
scas
clc
mov
sub
xchg
lret
mov
xchg
sbb
dec
mov
les
daa
icebp
jo
add
or
dec
fwait
jg
mov
cmp
pop
push
adcb
aas
adc
test
rcr
push
lret
or
jne
cli
js
mov
dec
mov
shll
rol
jne
mov
xchg
push
jb
loopne
pop
inc
adc
sub
jnp
insb
pop
mov
movsb
test
mov
insb
cs
enter
outsl
jae
das
inc
add
mov
lea
adc
das
bound
pop
pop
divl
leave
pop
ss
enter
add
jmp
fisubs
add
push
cltd
lds
cmpsb
cmp
jg
test
daa
adc
xchg
loop
jb
out
inc
sahf
popa
sbb
mul
in
cmc
push
mov
dec
xorl
mov
std
dec
sbb
pop
test
jmp
popa
push
mov
scas
nopl
mov
jecxz
sbb
mov
dec
popf
sbb
inc
dec
adc
push
gs
mov
mov
not
xchg
and
cmp
imull
sbb
subl
addb
test
xchg
or
cs
push
cmc
ja
iret
pusha
xchg
test
mov
dec
mov
frndint
imul
imul
mov
pop
jns
jle
sub
pop
jae
push
dec
jne
xor
push
inc
pop
jecxz
stc
mov
pop
dec
test
or
jns
mov
dec
in
enter
xchg
popf
cmp
aaa
push
bound
and
push
mov
push
test
notl
and
xor
sub
mov
scas
inc
sub
mov
jne
int3
shl
pushf
xchg
sahf
insb
je
les
fcomi
dec
mov
lret
jbe
add
cmpsb
cmp
fsts
js
cld
lahf
idivl
pop
jmp
mulb
rcll
aam
pop
imulb
scas
mul
xchg
bound
xor
jle
fucomp
xchg
mov
je
idivb
divb
fcomps
jg
cmc
hlt
insl
cltd
bound
sub
lret
lea
insl
jb,pt
mov
lock
test
xchg
sbb
rcrl
push
movsl
aam
pop
mov
popf
idivb
mov
dec
aaa
mov
push
inc
dec
jnp
push
or
adc
out
mov
xlat
and
sub
mov
ret
dec
ja
cltd
adc
mov
repz
test
add
loope
stos
test
dec
outsb
out
es
inc
jp
mov
mov
std
push
test
mov
jae
lds
arpl
jb
cmpl
inc
int
inc
scas
and
pop
call
pop
xchg
addb
jo
ret
xor
pushf
int3
xor
sub
jecxz
sahf
cli
jno
test
pop
mov
xor
fwait
jae
ret
adc
jbe
xchg
mov
push
cs
aam
cwtl
addl
push
push
sub
stos
insl
fwait
push
pusha
push
rcll
imul
or
sahf
jge
pop
xchg
fisubl
cltd
pop
jmp
fstps
push
mov
xor
ja
scas
sbb
or
push
xor
fistpl
sahf
inc
push
mov
mov
lea
add
push
xchg
push
insl
bound
push
sahf
les
cmp
icebp
cmp
or
xor
sub
rcl
cmpsl
insl
sbb
les
xchg
push
or
jne
xchg
jmp
lahf
inc
dec
dec
cmp
jp
and
jnp
push
aaa
mov
push
dec
adc
mov
mov
xchg
adc
sbbb
fs
add
sbb
movsb
xor
shrb
fwait
pushf
mov
inc
sub
xor
fadd
pushf
push
lret
mov
cwtl
sbb
xchg
jmp
sti
repnz
push
aad
or
mov
lods
imul
dec
sbb
sub
pusha
test
jp
pop
repnz
fidivs
shr
inc
cmc
stos
enter
cmp
push
dec
andb
clc
addr16
call
pop
inc
mov
sbb
cli
and
pusha
xchg
popf
inc
test
mov
inc
int3
pushf
js
dec
xchg
scas
out
xlat
push
lea
xchg
pop
dec
subb
in
orl
xor
push
sbb
insl
popf
inc
pop
cmp
leave
loope
push
add
mov
jmp
sub
sbb
orl
cmc
dec
shll
or
pop
inc
cmp
les
inc
sbb
mov
jg
das
xchg
into
ljmp
and
fs
rcrb
fnsave
fwait
inc
mov
lret
jp
je
mov
mov
hlt
std
clc
mov
test
insb
xchg
lock
pop
fcomip
sub
loopne
in
pusha
cmp
lea
sub
push
mov
repz
fs
imul
mov
std
dec
jbe
call
lods
mov
or
sti
sub
lcall
insb
cmp
lcall
test
in
pop
ljmp
mov
rcrl
lret
xchg
andl
ljmp
pushf
imul
ror
adc
imul
int3
test
mov
jnp
orb
icebp
jbe
jp
mov
clc
mov
es
jl
or
out
mov
cltd
leave
fldt
int
addr16
cmp
inc
lods
sarl
adcb
mov
or
add
sub
stc
mov
out
rsm
jle
cltd
addr16
cmp
pop
data16
jb
cmp
test
rcrl
jp
adc
mov
sarl
mov
clc
into
mov
je
xchg
jbe
adc
mov
xor
enter
jmp
int3
adc
inc
outsl
sub
call
bound
fnstcw
js
dec
pop
bound
rcrl
cld
inc
ljmp
fcomi
cmp
aas
push
pop
nop
in
mov
add
cmp
sub
xchg
popa
arpl
in
ret
rolb
sti
test
sub
or
subl
xchg
dec
push
icebp
shlb
fsubrl
mov
les
pop
sub
call
fwait
push
adc
xchg
addr16
jno
pop
and
sub
jo
enter
mov
stos
stos
push
fimull
ret
dec
or
mov
xchg
ret
stos
mov
push
push
imul
inc
test
loop
mov
mov
mov
stos
push
xchg
adc
xor
bound
or
and
ficompl
stc
fisubrs
jmp
mov
jne
and
xor
dec
sti
sub
rclb
xor
popf
xor
nop
mov
sub
push
stos
iret
or
scas
lcall
dec
shl
jae
add
out
mov
inc
mov
jo
push
jge
jmp
mov
into
push
cwtl
inc
fwait
lahf
dec
jb
push
dec
lret
xchg
inc
jg
add
je
xchg
xor
mov
dec
mov
xor
jecxz
lret
addr16
xor
lret
std
push
insl
xchg
pop
je
sub
sub
jb
pop
add
jo
rcrl
rorb
lods
dec
sbb
stos
pop
imul
cmpl
jb
add
adc
pop
popa
je
sarb
ds
adc
xor
pop
xchg
adc
mov
cmpsb
orl
sub
xor
jl
mov
dec
icebp
in
jae
out
pop
js
ret
lahf
pushf
imul
sahf
jne
mov
ficoml
mov
fstl
adc
in
push
mov
inc
mov
mov
out
adc
cmc
sbb
icebp
push
testl
rolb
idivb
ficoml
imul
xor
inc
mov
je
xor
push
and
xchg
mov
cli
cmp
dec
rclb
orl
ret
inc
cmpsb
bound
xlat
arpl
shll
addl
mov
cmpsb
mov
adc
enter
pop
jle
ljmp
or
in
sub
rorl
push
in
scas
xor
or
mov
hlt
in
xchg
mov
addb
sar
cmp
lock
dec
mov
fs
mov
test
push
sub
cmp
adc
mov
or
or
fdivl
cltd
pop
or
sbb
sahf
lods
cld
inc
movsl
lods
pop
dec
jns
pop
stos
jae
cmp
mov
cld
rcll
cmp
hlt
arpl
insl
mov
aaa
xchg
add
int3
inc
cmpsb
mov
push
xor
xor
sub
test
sbb
imul
mov
pop
test
aaa
sbb
jmp
push
sbb
enter
js
fldt
add
insl
addl
shlb
popf
cltd
cmp
and
push
leave
push
cmp
out
and
into
fsts
ret
push
jmp
jno
rolb
mov
cli
std
arpl
inc
notb
inc
inc
in
push
rorl
ljmp
cmp
xorb
jbe
xchg
adc
outsb
cmpsb
clc
cmp
ret
movl
ds
and
pop
and
or
and
mov
leave
mov
jae
jno
das
loop
mov
ret
jmp
or
jnp
shll
mov
xchg
gs
lods
add
jle
leave
imul
push
inc
hlt
pop
inc
or
jmp
mov
insb
ljmp
add
adc
icebp
xchg
lcall
pusha
pop
scas
iret
push
jne
jae
dec
push
jl
fsubrl
push
lret
mov
dec
xor
pop
inc
dec
mov
xorb
mov
jo
lock
js
dec
sub
out
sarl
jo
xchg
or
fmull
jle
xchg
cmp
cmp
call
jecxz
jo
mov
imul
or
dec
movsl
test
fists
mov
insl
cmpl
sub
cwtl
mov
gs
movsb
outsl
dec
iret
xlat
push
xchg
addr16
mov
stc
lds
dec
fwait
mov
lods
test
fucom
out
nop
into
xchg
push
andnps
cli
shll
daa
lcall
loopne
mov
sbb
stos
ret
push
mov
cmp
je
fwait
xchg
jl
cld
xor
cwtl
andb
and
mov
jb
mov
pop
dec
pop
es
sbb
rcl
test
jl
add
fnstsw
stos
hlt
and
call
adc
arpl
outsb
push
dec
lods
lcall
mov
iret
aaa
pop
daa
xor
sub
add
mov
and
test
clc
push
xchg
or
jmp
and
iret
jb
sbb
mov
int
or
rcr
filds
out
std
dec
movl
dec
xchg
fs
and
gs
fcmovbe
andb
jne
dec
bound
in
cmp
cmpsl
push
sub
push
jg
orl
jb
add
mov
ljmp
idiv
pop
add
push
int3
jae
cmpsl
jl
jno
sub
push
xor
push
jmp
addr16
into
test
inc
fs
repz
jne
push
xchg
stc
add
arpl
push
pop
push
sbb
andb
popa
cmp
mov
loope
ror
or
ljmp
dec
jl
mov
sub
les
mov
mov
push
xchg
pop
inc
pop
icebp
pushf
push
bound
xchg
push
adc
or
sub
popa
int
adc
mov
push
xchg
imul
inc
into
stos
addr16
std
pop
mov
fnstcw
loop
xor
push
mov
shrb
sub
pop
sbb
mov
pop
push
fimuls
cmp
cmpsb
dec
lahf
addr16
mov
inc
imul
scas
mov
pop
jnp
repnz
movsl
jge
gs
xor
in
insl
add
xchg
mov
ret
xor
xchg
repz
sbb
jne
xor
push
test
jo
mov
imul
jecxz
pusha
mov
subl
pushf
add
in
ss
sahf
add
lods
push
test
mov
inc
push
out
inc
pop
push
push
scas
add
add
std
mov
in
xchg
sub
pop
sub
adcb
pop
sub
xchg
in
mov
call
pop
jmp
jge
shll
jmp
daa
fisttpl
das
int3
jo
setae
call
jecxz
jl
jne
dec
adc
jb
in
pushf
mov
repz
xchg
inc
out
pop
mov
test
shrb
cmc
jl
cmp
mov
data16
sbb
iret
lret
xor
push
in
adc
or
in
test
rcl
out
push
iret
fwait
shrl
test
push
jg
vmovhps
dec
rcll
pop
fdivl
mov
mov
jge
jg
in
fdiv
push
cmp
mov
mov
pop
stos
das
sub
lock
push
jne
leave
cmp
addr16
leave
addr16
xchg
adc
out
arpl
adc
sbb
ljmp
inc
jb
sbb
add
fwait
aam
push
jae
xchg
test
loope
push
inc
test
push
inc
aam
mov
fnstenv
and
mov
jno
pop
and
fstl
sub
or
cmp
scas
cmp
fs
out
stos
ja
jl
mov
shlb
fwait
test
cmpsb
loope
xor
hlt
cwtl
rorb
mov
stos
shrb
jmp
dec
jnp
sbb
xchg
std
mov
cmovns
shll
cmp
push
stos
sbb
mov
out
mov
ss
xchg
and
int3
cmp
xor
inc
and
push
add
fists
mov
fldt
das
popl
jle
mov
and
loope
mov
dec
movsb
in
pop
aas
fnstenv
xchg
mov
test
cmpsb
popf
dec
xchg
ret
stc
fbstp
leave
add
jmp
inc
jnp
add
jae
cmpsl
rcll
adc
loope
xchg
scas
sub
test
insl
shll
lds
int
in
mov
psubq
mov
mov
into
in
pop
sbb
cmp
fnstenv
dec
fwait
adc
jnp
add
push
stc
jne
cwtl
xor
adc
in
dec
cltd
cmp
movsl
cmpb
std
stc
lcall
fstpl
fwait
push
push
inc
push
lods
ret
jp
iret
cmpl
mov
add
jg
pop
and
dec
mov
iret
jb
scas
imul
jb
iret
ja
in
int
in
or
sub
shll
push
cmp
mov
dec
push
in
mov
xchg
inc
push
mov
cmc
jo
push
movsl
rcl
pop
pop
jbe
inc
fldenv
mov
std
iret
stc
or
iret
outsl
add
pop
cmpsb
cli
inc
jb
icebp
and
test
movsb
imul
or
dec
enter
cmp
add
ret
stos
test
loope
sahf
gs
sub
cmp
mov
jmp
out
jbe
sub
fs
mov
mov
dec
scas
outsl
test
mov
repnz
jae
sbb
cwtl
js
shrb
in
mov
int
push
cmp
scas
jbe
mov
mov
cmp
dec
shll
pop
bndstx
mov
xor
outsl
dec
pop
int3
outsl
add
test
dec
fdivrp
icebp
and
mov
nop
xchg
push
mov
out
lret
mov
in
mov
pop
lea
pop
lock
push
cmpb
mov
add
arpl
sub
xchg
popa
xchg
ret
mov
in
lds
addr16
push
mov
push
jecxz
jbe
aam
inc
and
ret
fcomi
mov
sahf
enter
ret
inc
sbb
rol
sub
push
or
idiv
pop
mov
nop
jmp
push
fdivrp
mov
pushf
jb
cld
mov
pop
and
push
sbb
bound
aad
add
cmp
xchg
xor
in
insl
icebp
xor
and
adc
add
ja
pop
xor
xchg
adc
fiadds
loope
adcb
jo
inc
dec
das
aaa
xchg
push
push
sub
sub
jg
sbb
cmp
pusha
jbe
jp
mov
shlb
or
dec
inc
jmp
xchg
mov
jp
test
push
jp
jecxz
mov
push
jge
or
idivl
sub
jne
bound
dec
pop
addb
hlt
rorb
lahf
add
test
dec
in
insb
mov
outsl
das
add
dec
rolb
adc
insb
cli
jle
xchg
test
jae
mov
push
lea
lret
movsl
adc
dec
fdivs
xorl
push
cmp
mov
xchg
inc
cmp
sbb
out
jbe
rcr
push
jbe
cmp
lods
mov
push
push
bound
pop
xchg
jge
scas
and
subb
pop
sub
rcrl
orb
cli
xchg
jl
mov
xor
aam
loopne
scas
xchg
cmp
push
stos
and
sub
mov
movsb
mov
std
add
sbb
fwait
popf
push
xor
sub
jmp
and
shlb
pop
mov
jno
xor
mov
jl
fnsave
jb
cltd
dec
stc
xchg
cs
inc
ret
mov
pop
xor
and
into
loopne
pushf
lods
push
scas
stos
mov
xlat
sub
add
testb
int
or
push
inc
ss
lcall
and
mov
mov
mov
and
test
dec
jle
icebp
daa
in
sub
pop
dec
or
notb
push
adc
push
lea
mov
je
cmc
imul
pop
push
jno
bswap
repnz
mov
insl
fistpl
sub
mov
cwtl
or
xchg
push
jnp
cmp
sub
push
cmp
int
mov
pusha
xchg
out
in
mov
scas
in
mov
rcll
iret
aaa
fnstcw
jbe
cmc
stc
jo
xchg
insb
aas
jg
mov
aaa
or
aam
mov
fcmovu
adc
imul
gs
loope
and
fbstp
fmull
or
bound
lret
cmp
mov
mov
push
jp
imul
or
xchg
stc
xchg
sbb
mov
mov
add
mov
shll
xchg
in
xchg
inc
sbb
push
loop
push
cmp
outsl
scas
subl
insb
add
cs
add
fwait
sti
xchg
inc
sub
dec
ljmp
incb
cmp
push
push
sub
orb
push
mov
lret
and
xchg
lods
xchg
sbb
push
sub
cmpsb
or
sahf
adc
inc
addb
jmp
push
add
or
lods
das
add
xchg
pop
push
jge
cmp
repnz
pop
mov
mov
sbb
mov
pop
clts
inc
xor
ret
pop
cwtl
adc
rolb
and
pop
aam
jge
mov
mov
mov
outsb
test
cmpsb
add
in
adc
mov
leave
loop
cmp
into
mov
fdivr
test
mov
push
mul
insb
mov
ret
add
dec
stc
out
or
push
pop
xchg
nop
inc
push
push
das
sbb
xchg
mov
add
push
or
mov
repnz
js
sub
pop
aam
in
jbe
xchg
push
mov
std
movsb
mov
pop
xor
repnz
addr16
bound
cmpxchg
mov
leave
jmp
stos
mov
inc
or
inc
cmp
nop
scas
outsl
sub
aaa
mov
xor
xchg
mov
mov
aas
sbb
pop
in
or
push
sub
xchg
adc
push
out
inc
dec
test
div
adc
test
jne
xlat
pop
shll
pop
dec
cmp
xor
iret
movq
sub
fisttpll
pop
xor
add
jns
in
dec
mov
sbb
mov
jo
jl
bound
adc
out
sub
loopne
outsl
fildll
sbb
fadd
pop
sub
adc
add
rolb
inc
and
std
dec
cs
pop
fistpll
push
icebp
mov
add
out
mov
insb
add
shl
mov
cmp
ja
push
lret
les
sub
mov
pop
mov
dec
fdivs
in
jne
add
shr
test
jge
arpl
leave
inc
nop
inc
jae
sbb
mov
std
popf
adc
jl
push
push
test
push
mov
je
adc
cmp
push
imull
and
push
jb
ret
arpl
je
and
out
and
mov
shll
out
push
sbb
mov
loop
cmpsl
push
push
out
add
mov
mov
inc
and
fmull
shr
repnz
mov
mov
add
sahf
hlt
pop
cli
mov
push
in
shrl
cmpsb
idivb
xor
and
repz
loopne
jecxz
mov
dec
out
jno
in
rclb
test
scas
gs
dec
test
push
or
pusha
xchg
pop
add
lcall
jmp
outsb
les
push
push
dec
lret
mov
sub
pop
cmp
xchg
mov
pop
jbe
pusha
mov
and
mov
cld
les
sbb
in
push
popa
or
add
xor
rcrb
push
mov
xchg
les
xor
je
insl
dec
pop
add
push
jo
sbb
std
mov
pusha
or
mov
cmpsl
mov
es
mov
xor
push
or
adcl
call
xchg
jg
pusha
pop
sbb
rcl
cmp
js
mov
adcb
pop
into
add
ret
js
ja
inc
mov
cli
cmp
popa
adc
pop
pop
into
ss
rcl
outsl
lahf
jo
dec
jne
ret
mov
das
mov
das
pop
ror
add
mov
mov
popf
ret
das
dec
push
inc
cmp
aam
bound
jg
mov
mov
jg
cmp
jmp
xchg
or
cs
and
xchg
sbb
test
test
scas
popf
fcom
imul
fdivp
mov
push
lods
imul
sti
mov
lods
pushf
mov
jmp
in
xor
gs
clc
add
fwait
xchg
add
jle
jno
xchg
jl
lret
mov
daa
mov
cmpsl
data16
jae
pop
int
imul
in
out
sbb
jb
rcrl
ja
xchg
adc
pop
mov
or
mov
gs
ret
mov
or
ss
lahf
ret
out
pop
stos
pop
mov
xchg
fnstcw
lcall
pop
and
mov
push
xchg
ja
mov
fbld
or
daa
mov
push
fisttps
sub
in
adc
mulb
sub
dec
insl
leave
add
mov
jg
cmpsb
lret
cltd
add
int3
pop
sbb
mov
stos
adc
xchg
stc
fcoml
aas
mov
in
sbb
jb
push
mov
dec
xchg
mov
adc
das
aas
ds
clc
inc
mov
test
test
and
mov
leave
js
push
test
xor
or
js
cmp
test
sbb
mov
es
sub
js
jg
imul
xor
push
sbb
pusha
mov
cmp
dec
push
in
out
mov
and
mov
lods
cmp
push
pop
fwait
mov
add
lret
adc
mov
js
in
adc
xchg
mov
test
imul
daa
cmc
vpaddq
outsl
cltd
cmpsb
sahf
lret
add
ljmp
mov
dec
sub
sbb
or
sbbb
out
inc
adc
lea
pop
pusha
mov
pop
idiv
or
xor
xchg
sub
xchg
inc
xor
andb
dec
adc
inc
sub
inc
mov
add
imul
pop
mov
xor
ret
into
out
daa
or
xor
lret
test
rcrl
int
aam
aam
xlat
jns
in
fistpl
mov
icebp
pushw
sarl
stos
call
aad
mov
lea
inc
cltd
addr16
cmp
push
lds
jecxz
flds
mov
mov
paddd
sar
or
lock
stc
lock
test
cmp
loope
push
idivl
icebp
sub
loope
adc
adc
sub
mov
scas
scas
imul
imul
sahf
add
jge
mov
mov
daa
test
adc
pop
mov
into
divl
icebp
sbb
outsb
gs
inc
add
or
sbb
add
mov
pushf
test
push
dec
mov
xor
cmp
mov
sub
pop
cmp
cld
fucomi
adc
sti
mov
mov
dec
xchg
hlt
xchg
pop
xlat
out
adc
lds
nop
mov
stc
jne
cs
inc
mov
pop
pop
and
mov
sub
outsl
jo
mov
mov
not
out
xor
inc
xor
or
stos
and
dec
imul
imul
mov
pop
lods
adc
psadbw
in
and
mov
mov
mov
nop
xor
pop
leave
lds
in
mov
aaa
inc
rcrl
notl
add
or
xor
xchg
pushf
scas
add
xchg
adc
and
fdivs
into
mov
adc
inc
inc
xchg
cmp
push
cmp
fsubrl
divb
inc
sahf
adc
sbb
lret
aam
stos
mov
loope
fsubs
and
jge
sub
cwtl
les
cmp
pop
je
jnp
int3
in
ds
dec
lock
jl
mov
inc
ss
inc
loope
lret
mov
xorl
lock
es
pop
fwait
call
xchg
and
negb
dec
jg
sub
aad
imul
add
jb
ja
xchg
pop
mov
cmpsl
loop
mov
mov
mov
xor
jbe
mov
sbb
mov
into
jg
adc
cmpsl
xor
test
out
mov
ja
adc
imul
das
cmpsb
sbb
mov
in
pop
pop
mov
subb
loopne
mov
mov
jnp
les
jnp
notl
mov
scas
push
ret
mov
jle
loop
divb
ja
xor
cmp
loope
movsb
cmp
lods
mov
out
jne
in
xor
or
ds
mov
push
and
mov
in
add
adc
pushl
mov
ss
scas
testb
out
mov
mov
cltd
jl
stos
pusha
xchg
xor
test
pop
xorl
imul
push
stos
in
fcoml
and
adc
adc
pop
or
push
push
aam
pop
in
xchg
push
stc
rorl
loop
leave
jne
cmp
dec
push
imul
push
in
insl
xlat
pop
test
cmpl
sar
aaa
and
cltd
adc
stos
push
lret
out
cmp
inc
jg
stos
adc
cs
add
ljmp
lret
adc
out
adcb
gs
mov
or
and
mov
xchg
xor
sbb
loop
cs
gs
leave
jae
xchg
arpl
add
pusha
int
fstps
std
dec
lea
dec
jb
icebp
xor
push
das
jae
cld
push
mov
aaa
mov
cld
fsubrs
fcompl
dec
fmuls
mov
sahf
ret
fsubrl
gs
cli
adc
fnsave
outsl
in
cs
movsl
cmc
xor
add
cmpl
adc
addr16
or
lock
gs
je
aas
adc
xchg
inc
jp
add
inc
mov
jl
popa
jae
adc
sub
ret
aas
and
xor
or
sbb
insb
sub
lcall
cmpb
dec
push
push
mov
lods
stos
mov
push
shrl
add
call
add
jle
inc
sub
imul
cwtl
idivl
sub
mov
loopne
push
imulb
leave
rorb
nop
jmp
je
xchg
notb
sub
out
shr
dec
dec
or
jne
das
cmp
test
jbe
sbb
sbb
adc
lret
adc
add
cmp
and
pop
xor
shlb
ljmp
xchg
add
cld
xor
les
mov
scas
mov
les
pop
movsl
outsb
jb
and
lods
mov
push
mov
xchg
loopne
hlt
out
xor
cmp
mov
sub
clc
jl
loope
push
testl
imul
pop
dec
xor
and
shll
gs
xor
jecxz
ret
lock
and
jecxz
out
cmp
mov
dec
push
icebp
inc
add
sbbb
shll
int
xor
leave
incb
cli
js
jne
or
leave
sti
clc
push
stc
imull
cmp
inc
or
cld
mov
jne
ljmp
pop
ficoms
fildll
mov
jg
inc
mov
sbb
loope
mov
lret
mov
push
in
cmpsl
xor
jb
dec
cmc
sbb
cmp
in
ret
jae
jg
jg
pop
lds
mov
inc
xchg
aaa
fadds
pop
loop
das
notb
loope
adc
or
inc
mov
and
jb
sbb
sbb
inc
jp
clc
dec
add
inc
mov
cmp
pusha
inc
mov
popf
mov
mov
mov
pop
sbb
mov
sbb
jg
mov
adc
pop
sahf
shrl
or
or
into
rclb
cwtl
mov
insb
dec
sub
imul
mov
pop
jmp
rcl
test
push
jb
cs
jne
stc
in
jp
ss
adcb
add
vpcmpgtb
add
fiadds
pop
lods
sbb
es
dec
lret
add
push
lds
subb
sbb
push
outsb
jnp
jne
in
sub
push
lret
sub
test
popf
adc
fstl
or
mov
xchg
orl
add
scas
mov
sti
and
push
in
int
mov
jno
cmpsb
fdivrl
push
jae
or
loop
nop
mov
or
push
stos
fcmovne
pop
nop
cmp
adc
dec
or
inc
mov
out
xchg
pop
cli
xlat
mov
fimuls
ljmp
int
dec
ds
lahf
xor
lds
xor
push
pop
sub
cltd
shrl
jecxz
and
jno
cwtl
add
sbb
inc
sub
in
je
aas
jecxz
call
mov
mov
adc
mov
mov
adc
in
add
inc
jb
cs
mov
lods
add
mov
in
stc
push
xchg
jmp
orb
jecxz
xchg
add
ja
out
and
pop
sbb
xor
fildl
jns
mov
fwait
push
lea
lret
xor
das
cwtl
and
sub
pop
fldt
pop
fsubl
xchg
xchg
pop
cmp
cmp
adc
pop
mov
fldenv
or
mov
ss
inc
jns
scas
dec
imul
dec
or
movsb
movsl
jae
cmp
fnstenv
testl
decl
pushf
and
or
adc
xorl
arpl
add
or
js
cmp
jnp
repnz
data16
aas
jbe,pt
int
pushf
inc
fbstp
in
xchg
or
xchg
std
mov
aaa
xor
outsl
inc
outsl
cs
jns
adc
repnz
int
addb
ret
xchg
add
mov
popf
push
push
pop
inc
inc
pop
test
cltd
xor
outsl
fbstp
ret
mov
sbb
popa
fs
mov
mov
mov
loop
pop
cmp
lock
cmp
cmp
lret
adc
lcall
test
stos
movsl
sti
inc
pop
or
pop
and
xor
insb
push
or
sahf
inc
into
cmc
or
add
sub
rcll
jo
jmp
mov
test
lahf
xchg
cmp
repnz
pushf
xor
push
jge
mov
sub
push
test
sub
popa
pop
or
popa
cltd
inc
jbe
xchg
pop
and
xor
lret
jnp
pop
mov
mov
jmp
jecxz
xchg
mov
in
push
addb
mov
sbb
fs
mov
add
fwait
arpl
imul
push
movsb
inc
test
std
mov
cmp
insl
popa
xor
enter
in
adc
mov
mov
mov
fs
xor
shrl
jecxz
cmp
imul
jecxz
add
cltd
enter
pop
popa
pop
or
test
mov
out
mov
mov
jns
in
sti
add
inc
in
mov
or
bound
xchg
inc
repz
push
or
je
subb
jg
in
int
pushf
mov
mov
ds
or
sub
or
mov
xor
insl
xchg
popf
push
cmp
mov
repnz
adc
push
jecxz
leave
arpl
decl
and
shll
xor
ja
and
xor
push
aam
jne
add
fdiv
push
adc
dec
test
call
imul
out
test
pop
out
dec
std
inc
ds
mov
bound
mov
pop
pop
push
rcr
or
fstl
cli
push
pop
jg
adcb
push
test
dec
pop
mov
sti
and
lea
or
in
rcrl
cli
lds
xorl
mov
jle
push
cmp
xchg
in
fidivl
jno
add
out
out
sub
outsl
dec
fistpll
adc
sti
ds
clc
por
adcl
mov
and
xchg
inc
inc
mov
aas
jg
jae
mov
or
cwtl
jno
repz
mov
scas
push
mov
cmp
jl
ret
mov
xor
and
mov
jmp
xor
je
and
or
push
mov
ffreep
dec
shll
sub
sbb
add
outsl
adc
cmc
pop
ret
mov
inc
pop
icebp
daa
jb
pop
xchg
arpl
inc
shl
es
std
icebp
imul
cwtl
inc
or
loope
aam
outsb
cwtl
xchg
cmpsl
shlb
sarl
test
cmp
mov
iret
xlat
and
inc
data16
jne
jp
loop
jbe
mov
push
inc
adc
mov
dec
arpl
cmp
sub
sub
mov
or
sbb
lods
sahf
push
daa
xor
pop
repz
dec
mov
mov
les
jb
loop
stos
rcl
push
es
pushf
pop
fs
jns
cli
mov
inc
dec
xchg
adc
mov
sub
shrb
cmc
sub
ficompl
sahf
pop
mov
dec
mov
mov
fists
std
add
cmp
sbb
mov
cmp
inc
and
jg
stc
aas
add
das
and
xchg
push
and
xor
inc
mov
mov
jb
dec
cmp
push
popf
or
mov
outsl
inc
fldt
xchg
mov
inc
push
mov
dec
test
push
psrlq
cmp
jmp
movsb
mov
jmp
sbb
cmpsl
in
nop
arpl
mov
jae
lret
mov
clc
pushf
adc
enter
cmp
call
fmull
int
lahf
push
out
push
lcall
add
insl
shlb
insl
hlt
enter
fisttps
mov
push
mov
gs
popa
gs
mov
test
out
inc
testb
pop
fcompl
mov
xchg
inc
adc
lds
adc
sub
dec
pop
dec
jae
stos
xchg
mov
xchg
adc
jo
push
jle
adc
js
fs
and
sbb
iret
or
sub
jmp
mov
lcall
stos
xor
scas
dec
out
insb
jns
loope
adc
test
daa
call
cmpsb
xchg
es
pop
sarb
jbe
xchg
ljmp
sub
jmp
cli
orl
and
mov
push
andl
imul
out
ljmp
imulb
cld
cmp
jge
or
inc
dec
repz
inc
xchg
xchg
jno
popa
scas
mov
cmpsb
mov
dec
rorb
pop
and
rolb
adc
cli
cmpsb
jne
cmp
pop
les
mov
pop
fcoms
pop
divb
in
icebp
out
adc
jl
dec
mov
or
lock
orb
sub
hlt
jmp
lock
mov
pop
xchg
insb
add
add
les
push
inc
in
mov
cmp
sbbb
push
and
sub
popf
sbb
push
sbb
leave
inc
popa
push
ror
inc
push
inc
adc
iret
insb
roll
sbb
out
loope
push
push
arpl
mov
lods
int
and
pusha
adc
pop
lret
fwait
leave
nop
push
outsl
mov
push
or
add
cmp
pop
call
dec
dec
push
push
xor
pop
test
popl
daa
inc
push
mov
imul
and
repnz
inc
mov
mov
mov
shlb
jo
aam
push
aam
jp
or
sbb
nop
arpl
std
aas
xor
jp
mov
daa
idivb
add
push
psrlw
dec
pop
dec
lret
mov
pop
bound
lock
xchg
outsl
jns
xchg
js
outsl
inc
fnstsw
mov
jp
dec
sub
pop
xor
mov
mov
sbb
or
inc
fstpt
xorl
cld
sub
inc
cmp
add
mov
sub
incb
push
sti
mov
jmp
jle
ss
inc
bndstx
or
push
repnz
xor
pop
pop
fwait
outsb
xchg
call
int
inc
lea
and
sbbl
pop
add
push
sub
movsb
xchg
test
test
cmpsb
pop
push
push
popf
test
call
clc
fs
sbb
insb
shr
pop
sbb
mov
insl
iret
push
push
jmp
pop
lahf
add
push
inc
mov
data16
loope
lods
mov
or
call
xchg
or
mov
xor
mov
inc
xchg
mov
xchg
mov
add
mov
sub
mov
ret
xchg
pop
adc
inc
sbb
and
jmp
int
dec
aam
dec
mov
test
inc
aaa
inc
cmp
stc
aad
mov
xchg
pushf
stc
xchg
arpl
subps
add
pop
jo
icebp
stc
cmpsb
loopne
push
movsl
sahf
popf
pop
cld
jno
pusha
mov
jle
sub
insl
add
inc
dec
iret
xor
sub
in
aaa
lods
ljmp
addb
jns
pushf
bound
or
pop
and
mov
mov
fcmovnb
cmp
pop
inc
dec
test
in
xchg
cmpsb
out
add
popa
in
adc
rcrb
daa
lahf
mov
xchg
lcall
mov
les
call
inc
subb
push
fcoms
xchg
inc
jbe
jne
add
inc
and
push
sti
outsb
dec
out
jmp
mull
push
sbb
and
inc
icebp
cmp
jmp
aas
inc
inc
ja
jb
js
aaa
setle
andb
and
cli
sub
ja
lret
out
aas
bound
mov
outsl
pop
xchg
fdivrl
outsl
and
imul
adc
aas
adc
xchg
push
mov
jnp
cmp
xchg
loopne
push
daa
dec
push
roll
cmp
scas
ret
scas
ds
pushf
insb
push
inc
cmc
fisttpll
cmp
pop
hlt
orl
subl
ljmp
stos
shl
add
aam
jl
jbe
test
xchg
or
mov
dec
sbb
cmp
mov
repz
sti
ja
std
or
adc
ja
sbbb
roll
inc
aas
mov
in
ret
inc
add
pop
test
cld
mov
insb
andl
mov
fwait
pop
aam
pusha
cwtl
lcall
daa
adc
outsb
push
jo
ficoml
mov
mov
aad
mov
push
or
popa
cmpsb
ret
cmp
out
fstpt
push
int
mov
xor
sti
xor
xor
icebp
movsl
shrl
dec
ficoml
jg
repz
test
sub
adc
shrb
push
jno
jmp
in
pop
jp
jle
into
adc
test
xlat
scas
mov
cmpsl
dec
ss
shlb
mov
xor
xchg
sti
into
inc
subb
iret
shll
cld
repz
aad
les
add
shll
pop
jbe
xchg
xor
sarl
cmc
jns
add
ds
popa
das
inc
xchg
push
sub
sub
mov
into
aad
pop
dec
mov
cwtl
mov
mov
push
jae
adc
adcl
std
movsb
mov
fldcw
lods
sub
imul
xlat
shll
and
imul
incb
aas
jmp
inc
sub
imul
rcll
mov
fstps
jne
outsl
das
popf
aam
dec
mov
and
and
add
mov
fldt
call
fisttpl
or
jmp
out
test
subl
test
fnstcw
in
movsl
dec
test
js
and
xchg
xchg
xchg
dec
mov
shl
ror
cmp
je
in
rorl
adc
pusha
cmp
pop
in
fld
popa
negb
sub
adc
lahf
or
sbb
dec
mov
lret
cli
add
lret
jae
arpl
loop
clc
xchg
std
lahf
negb
pop
ret
pop
pop
lret
and
mov
fwait
sbb
addb
dec
pop
in
in
mov
mov
jmp
mov
shlb
dec
jb
leave
sbb
popf
clc
shlb
and
call
inc
push
stos
mov
pop
inc
fldcw
jecxz
lods
lods
jne
pop
pop
push
jno
jecxz
push
push
push
inc
jnp
pop
jmp
xchg
lods
ffree
nop
cmpb
mov
mov
mov
std
jmp
cmc
out
andb
pop
stos
dec
push
dec
jp
ret
mov
and
je
add
xlat
add
decb
adc
sahf
jbe
pop
cmp
jne
lret
ret
mov
loopne
cmpsb
xor
leave
adc
cmp
int3
jecxz
sub
mov
sub
inc
mov
pop
int3
add
inc
mov
outsl
int3
add
push
push
out
jns
pop
adc
or
add
pop
rorw
out
rolb
out
mov
cmp
or
hlt
and
mov
pop
mov
xchg
int3
mov
and
fwait
mov
dec
rorb
ds
cmp
xor
push
mov
jae
jl
fwait
add
mov
mov
sub
out
adc
pop
repz
mov
es
pop
insl
adc
jecxz
pushw
adc
sbb
aam
or
out
lahf
out
xlat
daa
in
in
xchg
pop
nopl
or
gs
mov
sub
aas
gs
cmp
aaa
pop
inc
pop
repz
cmp
scas
daa
les
pushf
sub
xchg
mov
je
and
dec
imul
arpl
clc
or
jl
je
xor
lret
fwait
mov
jmp
aam
imul
cld
cmpsl
cmp
sbb
shll
pop
pop
sub
shl
inc
adc
andl
movsb
xlat
std
mov
mov
jp
xchg
jno
inc
push
repz
aam
fcomip
inc
lahf
movb
in
sahf
xlat
andl
mov
add
ljmp
js
popf
and
cmp
xchg
aam
push
xchg
scas
pop
or
dec
gs
push
push
nop
jecxz
nop
and
and
or
pop
test
aaa
sub
sub
xlat
push
push
xchg
jl
or
sar
xchg
adc
les
outsl
xchg
jecxz
lock
outsb
insl
orb
xchg
andb
call
mov
add
mov
pop
repz
push
xchg
fnstcw
insl
pop
dec
hlt
mov
aad
cmp
add
jbe
sub
add
movlps
inc
jle
inc
and
jmp
in
push
scas
push
and
jb
pop
sarb
lcall
dec
push
xchg
xor
in
lahf
sti
adc
cmpsb
fstps
jae
pop
add
sahf
dec
dec
cmc
imul
jmp
shr
cmp
xor
loop
and
mov
data16
fldt
fimuls
into
lock
mov
imul
aad
fcompl
scas
clc
clc
mov
push
roll
fadds
ret
jns
push
cltd
in
mov
stc
mov
mov
das
adc
arpl
and
fcomps
or
inc
sub
lods
push
aas
xchg
xor
ja
xchg
mov
inc
movsl
or
lock
push
xor
daa
cli
addr16
out
popf
lods
jno
fildll
fidivrl
ja
fst
xchg
test
pop
test
repz
scas
jno
or
test
inc
mov
mov
push
add
lods
mov
andl
jg
stos
and
sub
outsl
dec
into
fwait
repz
mov
cmp
jb
inc
sub
mov
xchg
inc
dec
arpl
xchg
push
movsl
nop
andb
cmp
cmpl
sahf
pusha
pop
hlt
in
hlt
dec
sbb
cli
or
or
mov
faddl
push
cmpsl
ret
rcll
dec
cmp
cmpb
and
data16
pop
jb
shlb
pop
cmpsl
add
jmp
pop
lret
pop
inc
aam
inc
shlb
gs
out
imul
jns
push
neg
push
dec
add
sbb
arpl
jle
or
jbe
inc
js
mov
lret
lret
loop
in
cmp
inc
xabort
test
lret
sbb
jle
bound
aas
hlt
jl
xchg
jecxz
mov
mov
loope
cmp
adc
sbbl
nop
pusha
data16
inc
int3
imul
adc
ja
mov
aas
or
shll
sti
xchg
or
dec
ja
shll
dec
movsb
jle
pop
mul
xchg
sbbl
sahf
imull
and
cmp
inc
sub
scas
xlat
pop
and
out
sahf
lret
inc
adc
lret
lahf
movsb
cmp
movsb
mov
add
mov
xchg
push
ss
inc
and
mov
clc
cmp
push
leave
jns
in
cli
movb
lret
fprem
dec
je
out
push
cmp
xor
imul
xchg
pop
jno
inc
xchg
fimull
pop
stos
mov
pop
sub
shlb
mov
and
scas
lods
lret
xchg
push
mov
and
or
lahf
xor
cmp
lret
es
cwtl
iret
jle
lcall
jp
mov
imul
push
mov
sbb
gs
outsl
adc
jae
jns
sarb
lods
cmp
repz
repnz
sbb
add
jno
aad
nop
inc
add
dec
cmc
movsl
test
fnop
pop
xchg
jne
clc
mov
out
call
mov
ja
and
mov
stc
push
or
inc
daa
dec
movsb
jnp
cmp
or
or
fcompl
outsl
and
adc
das
sahf
into
adc
or
rol
cmp
hlt
mov
mov
stc
jle
jb
es
fwait
insb
xor
dec
cmpsl
jp
sar
mov
add
pop
mov
sub
in
fsubr
negl
ret
shl
rep
or
sub
xchg
je
rorb
mov
cmp
ja
xor
or
mov
and
lcall
mov
fnstcw
adc
scas
das
cmp
mov
xorb
enter
xor
stos
div
push
outsb
lahf
xor
jmp
fstpt
ljmp
stos
mov
cmp
inc
or
jg
add
aaa
mov
rcll
insl
mov
and
add
nop
pop
mov
lods
iret
xchg
hlt
sub
insb
data16
sbb
ljmp
add
and
sbb
stc
xor
inc
ljmp
jae
cmp
stos
cwtl
and
lea
pop
out
das
xor
jle
shr
or
jmp
js
push
mov
ljmp
mov
jmp
mov
cmp
ret
test
mov
sub
cli
inc
mov
pmulhuw
push
and
xor
xor
into
in
pop
loope
adc
cwtl
imulb
test
jb
loope
in
repz
sbb
pushf
jne
fmul
mov
rorb
xchg
stos
push
push
sarl
jmp
add
faddl
jl
imul
mov
lret
out
mov
test
inc
in
sbb
push
repnz
mov
sub
sbb
sub
in
jecxz
sub
test
fidivrl
or
inc
in
dec
ja
fcomps
and
dec
out
cld
xor
cmp
pusha
add
call
add
scas
push
dec
popa
movsl
out
testb
out
mov
aad
mov
pop
and
test
jge
inc
in
lret
sbb
adc
arpl
fistps
adc
mov
sbb
hlt
jbe
jb
mov
mov
mov
testl
or
ja
xchg
jbe
mov
call
repz
pop
and
roll
fstpt
std
ffreep
pop
cmp
ficompl
push
hlt
dec
repnz
sbb
dec
test
fsubrp
loop
or
pop
jns
lret
xchg
pushl
std
les
dec
mov
sti
mov
push
xchg
movsb
fmulp
popa
mov
ret
aad
aad
lret
out
xorl
test
imul
popa
in
mov
dec
cli
jnp
lods
dec
push
sub
out
xchg
divl
lods
adc
mov
dec
in
fimull
arpl
mov
test
or
or
sti
and
lcall
popf
ret
aas
dec
cwtl
mov
mov
lods
lods
daa
iret
add
or
mov
cmpsl
or
mov
imul
outsb
mov
lahf
sahf
loope
xor
lret
xor
mov
xor
pop
in
fildll
push
mov
jbe
push
dec
dec
push
mov
lret
jo
and
in
pop
xchg
adc
jecxz
leave
div
sarb
mov
shlb
cmp
scas
ret
fs
cli
fcmovnbe
and
jo
push
cmpsb
mov
and
add
aam
push
popf
adc
mov
pop
pop
sbb
push
test
jg
xor
aad
and
cmp
xlat
push
sti
add
sub
fsubrs
push
add
push
shrb
aad
mov
mov
leave
in
pop
das
movsl
incl
push
fbld
in
gs
or
cmp
pop
cwtl
add
movsl
test
repz
lea
sub
outsb
inc
push
push
pop
mov
cmpsb
push
shl
and
mov
pop
mov
daa
dec
mov
loop
push
add
xor
leave
and
push
jnp
enter
cwtl
sahf
mov
push
je
mov
or
mov
fwait
int3
repz
aad
out
aad
and
push
jge
addr16
repz
adc
test
cmp
xchg
add
loopne
push
ljmp
mov
xchg
ljmp
xchg
inc
je
test
push
into
pop
lods
push
inc
fnstsw
test
jns
inc
jmp
fisubrs
xchg
rorb
cmp
out
into
sbb
testb
pusha
popa
mov
pushf
sbb
std
inc
lods
mov
adc
dec
data16
hlt
movsb
out
dec
nop
jp
pop
out
jmp
loope
dec
sbb
loope
gs
push
in
push
hlt
xchg
mov
pop
sbb
or
cmp
sbb
mov
mov
out
test
loope
fmull
fbld
inc
inc
rorl
or
repz
jp
rorl
aam
imul
into
jecxz
andl
sbb
adc
ljmp
aad
clc
das
scas
fcoms
iret
insl
jo
mov
lret
cmpsl
cmpsl
stc
sub
cli
test
aaa
loopne
cmp
inc
pop
arpl
aas
fiadds
pop
std
push
fcompl
pop
mov
mov
dec
sub
enter
addr16
int
lock
mov
jns
adc
jnp
pop
pushf
inc
loopne
hlt
pop
fidivrl
and
incl
xchg
xchg
lahf
loopne
xchg
pop
les
push
ret
cli
dec
add
lahf
stc
shr
out
xor
btc
sbb
mov
mov
pop
lahf
inc
sub
lcall
jb
mov
ret
push
subps
add
xor
mov
movsl
xor
mov
ret
dec
xchg
fistl
and
adc
mov
cwtl
mov
mov
push
in
outsl
das
mov
outsb
ss
arpl
jne
jecxz
cwtl
imul
push
and
ds
mov
stos
pushf
bound
dec
scas
out
mov
dec
hlt
lcall
ret
cli
stos
aam
mov
sahf
hlt
pop
pop
repz
inc
xor
dec
xchg
ret
mov
jmp
push
arpl
sub
and
pop
and
sub
dec
adc
adc
jge
mov
shrl
cmp
jge
sbbb
jbe
push
fwait
int
sbb
mov
cmpb
jo
jo
pop
pop
fcoml
loopne
sbb
or
push
stos
mov
push
mov
sbb
inc
mov
test
mov
jg
outsb
and
aad
mov
push
dec
stos
xor
and
std
cltd
push
xchg
cltd
xchg
sbb
out
push
push
outsl
aam
gs
mov
pop
cwtl
shlb
pop
in
imul
add
xchg
sarb
pop
sub
sbb
dec
sti
movsl
jno
inc
les
out
or
cmc
add
jecxz
and
in
sub
pushf
push
pop
icebp
inc
xor
int
repz
xlat
out
jbe
cltd
inc
mov
push
cltd
daa
mov
jecxz
sub
add
xor
or
in
cmc
jmp
sbb
xchg
into
xchg
jmp
hlt
push
int3
enter
cmpsl
lret
mov
add
in
repz
pusha
inc
adc
mov
test
mov
pusha
sub
jmp
int3
dec
push
stc
jmp
dec
nop
jg
jno
pop
ja
js
popa
mov
cltd
imul
mov
xchg
out
faddl
push
aad
fstl
stos
mov
nop
aaa
cmp
and
dec
or
cmpsl
enter
and
cmpsb
pop
and
addr16
pop
out
push
lret
sbb
or
sub
dec
push
xchg
push
in
test
or
inc
mul
inc
lcall
pop
imul
and
jno
xchg
push
jmp
or
ret
xor
xor
inc
aam
inc
mov
notb
jb
test
jle
dec
test
lret
iret
enter
mov
shlb
and
adc
lea
jo
push
stos
stc
aad
mov
popa
jmp
sbb
insb
and
jp
push
mov
repnz
in
shlb
xor
out
adc
not
mov
or
push
std
lahf
loopne
ret
push
mov
scas
and
xor
test
and
std
dec
orb
bound
popa
fstl
lea
xor
fldt
mov
adc
mov
ja
pop
int
cwtl
dec
ss
dec
scas
xchg
insl
in
mov
ret
test
dec
divl
popa
cmp
and
arpl
xchg
out
stos
fidivl
fs
mov
xchg
in
mull
sbb
rorb
stc
cmpsb
in
pop
sbbb
out
clc
into
sbb
jbe
mov
ja
data16
fsubp
insb
jne
call
push
xchg
and
adc
or
out
cmpsb
mov
int
jmp
fistl
xchg
inc
stos
xchg
test
cs
popf
out
mov
push
jg
fsubr
mov
shl
cmpsl
adc
or
daa
das
sub
mov
pop
mov
fldcw
mov
cmpb
rep
insl
mov
mov
notb
push
xchg
cmp
xchg
mov
add
cmc
mov
into
cs
jmp
notb
out
mov
sbb
adc
out
mov
iret
jmp
test
neg
and
mov
fisubrs
sbb
loop
dec
dec
ja
dec
mov
es
adc
ficoml
jle
hlt
gs
mov
mov
roll
push
xchg
sub
add
dec
pop
jmp
stos
arpl
dec
adc
cwtl
loope
jae
enter
loop
clc
push
jmp
out
push
or
sbb
pop
xchg
lods
cld
push
pop
cmc
mov
mov
or
scas
and
mov
mov
pop
sbb
lea
sub
out
test
inc
scas
mov
mov
jb
leave
mov
xchg
das
mov
dec
lods
test
out
jnp
movsl
pop
fisttpl
mov
adc
scas
mov
mov
popa
mov
adc
ss
mov
cmp
push
es
pop
jne
sti
in
pop
pushf
pop
fs
push
pushf
lret
inc
aam
movsb
in
jmp
mov
inc
xlat
icebp
pop
inc
jle
adc
adc
cmp
leave
adc
pop
fistl
sub
sti
cmp
imul
cvtps2pd
mov
cmpsl
cwtl
ret
sbb
push
push
scas
jmp
test
jnp
and
xchg
mov
sbb
and
cmpsb
sub
inc
fcomps
mov
enter
xchg
cmp
mov
lcall
lretw
add
lods
mov
test
xchg
int
dec
sahf
mov
xchg
movsb
es
fidivrs
sbb
dec
jns
popa
test
rclb
lcall
inc
ret
push
into
imul
repz
sub
out
outsl
cli
loope
fimuls
mov
cmp
shll
pshufw
aaa
cmp
or
cwtl
xlat
imul
cmp
pop
hlt
jmp
mov
and
fcomp
cmp
dec
mov
fcoms
cmp
sub
lea
and
out
leave
push
sub
cmp
filds
fstpl
xchg
or
pushf
aas
inc
cmpb
mov
jl
add
jns
push
lahf
call
jge
fdiv
mov
das
xchg
jg
xchg
popa
and
cmpsb
xorl
mov
push
pop
aas
out
sbb
push
das
ficompl
jae
lock
mov
sbb
inc
stos
leave
mov
test
addr16
test
fimull
stc
mov
xchg
sbb
fildl
or
jecxz
lock
pop
jns
lea
jge
cld
cmp
and
in
sbb
into
jmp
out
fdivrs
push
sbb
or
test
pop
dec
and
fiadds
addr16
imulb
stos
nop
loop
and
jno
xchg
orb
or
fcomp
xchg
or
jle
out
ss
int3
add
mov
stos
ja
or
addr16
mov
push
cld
rclb
mov
stos
arpl
jne
pop
sbb
xchg
dec
mov
xchg
jne
mov
cmpsl
and
test
jne
and
adc
in
mov
fmulp
rorb
sti
testb
sub
ljmp
adc
sar
xchg
add
dec
push
pop
adc
mov
imul
shrl
mov
adc
push
mov
jno
movsb
mov
jae
mov
xor
out
int
call
insb
lods
call
adc
gs
lahf
dec
inc
ficomps
mov
pop
clc
pop
jo
sub
lret
scas
repnz
clc
mov
and
jnp
rol
push
xorl
repz
and
fistpll
and
xchg
mov
rclb
mov
xchg
or
das
push
arpl
dec
insb
aam
adc
loopne
push
lahf
mov
sub
cli
ljmp
and
cmc
insb
pusha
ret
dec
add
cli
adc
mov
mov
sub
dec
xchg
mov
jmp
sub
mov
cli
inc
or
insl
cld
add
andl
nop
xchg
pop
dec
ds
mov
sub
inc
rcrb
adc
les
mov
jno
xlat
xchg
and
leave
insb
outsl
aad
adc
xor
mov
xchg
cltd
movsb
mov
jge
in
in
sarb
mov
xchg
pop
repz
cmp
pop
cmp
mov
and
mov
mov
ss
mov
push
pop
or
push
push
movsl
lret
xor
mov
sahf
and
lods
lahf
enter
lock
adc
mov
aam
add
lock
outsl
jl
packuswb
and
and
sbb
mov
imul
dec
stos
cld
pushf
aas
push
mov
or
dec
sbb
dec
or
pop
mov
out
adc
push
xchg
ffreep
mov
movsb
lods
pop
loop
je
xor
cmpsb
sbb
lods
lock
mov
into
push
adc
hlt
pop
and
shl
lods
lods
movsl
fwait
mov
mov
xor
mov
push
sbbb
popa
xchg
fisubs
cmp
xlat
cmp
popa
mov
insl
add
call
push
popa
cld
jbe
popf
push
or
jg
push
fnstenv
sahf
dec
and
inc
out
xchg
mov
adc
push
dec
cli
and
movsb
imul
cmp
and
pop
lret
pop
dec
nop
pop
push
sbb
loopne
adc
jecxz
cmp
sbb
mov
inc
adc
fs
or
out
fsts
dec
addr16
shrb
push
fsubrl
add
push
sbb
insl
insb
xlat
iret
mov
cmc
pop
dec
ret
out
jle
sbb
cmp
lea
mov
xchg
mov
mov
and
jmp
cmpsb
and
ret
add
mov
xor
lds
jg
dec
shl
xchg
repnz
push
arpl
push
es
in
in
mov
and
mov
faddl
dec
jae
sub
sub
pop
pusha
ret
stos
jecxz
stos
sub
dec
test
mov
sbb
mov
inc
mov
leave
rorb
sahf
aam
mov
adc
ror
push
pop
pop
pusha
call
or
bound
add
xor
dec
xchg
lds
or
sti
movsb
pusha
test
push
xor
adc
push
xor
mov
scas
sbb
xor
arpl
ljmp
and
pushf
aad
push
push
pop
int
push
inc
adc
lret
push
mov
jne
mov
cwtl
loop
in
push
imul
pop
not
leave
add
mov
testl
mov
and
inc
mov
xor
in
sbb
xor
sub
sub
inc
arpl
mov
jnp
sub
pop
bound
ss
add
cmp
sub
pusha
pop
dec
xchg
int3
ret
mov
pushf
leave
in
xchg
inc
mov
push
jbe
push
imul
aad
clc
jnp
lock
jg
mov
shrb
add
mov
lret
mov
dec
je
call
adc
orl
mov
negl
test
test
clc
xlat
out
pop
test
aad
mov
in
xor
lock
xor
jnp
fs
cmp
push
sub
lock
dec
inc
sbb
fisttpl
add
jmp
aas
and
divl
aam
mov
pop
mov
aas
mov
adc
sahf
cmpsl
xor
mov
xchg
add
std
ds
adc
ds
adc
push
test
jmp
push
mov
adc
pop
mov
xchg
jge
fidivrs
adc
pop
and
nop
stos
insb
push
and
mov
xor
xchg
pop
or
or
xchg
cs
repz
adc
mov
push
adc
push
mov
psubusw
in
xchg
aam
int
xlat
xchg
imul
cmp
and
fildll
add
mov
mov
fstps
mov
xchg
movl
xchg
enter
out
leave
add
pop
cmc
xor
pop
lea
lahf
into
imul
shl
fbld
jecxz
sub
inc
es
inc
xchg
hlt
cmp
shlb
flds
jp
cld
xchg
or
jae
icebp
xchg
xchg
sbb
into
cwtl
inc
leave
rcl
mov
add
mov
inc
or
addl
leave
xchg
push
dec
cmp
or
data16
push
bound
jno
jbe
sbb
fldt
add
push
lahf
xor
pop
aaa
sarl
scas
jbe
lret
fwait
xchg
pop
mov
xlat
mov
int3
push
repz
cld
pop
mov
mov
xchg
negb
outsl
repnz
push
arpl
pop
cmp
stos
dec
imul
dec
data16
add
fdivl
subb
movsl
fs
pop
repnz
and
ja
lret
in
orl
repnz
dec
cltd
arpl
in
mov
and
fs
jmp
in
jbe
jno
xchg
jp
sub
xchg
or
mov
mul
stc
nop
push
dec
into
xorb
mov
jae
xchg
lds
fsubrp
cmp
popa
mov
mov
xchg
pop
xor
sti
fisttpll
mov
jmp
ret
and
je
cmpsb
add
mov
sbb
dec
and
jmp
jp
das
popa
test
addr16
scas
ds
sub
aaa
fimuls
adc
rcrb
test
xor
xor
jge
jle
lret
imul
dec
jmp
pop
xchg
dec
push
sub
out
mov
jno
shlb
cmc
jo
and
pop
sbb
enter
push
jo
sub
xor
fiaddl
popf
das
cltd
push
mov
fidivs
imul
testl
mov
pop
fmuls
int
stos
insb
mov
js
arpl
cmp
or
std
sti
sub
cmc
enter
push
sub
jno
ja
pusha
fcmove
or
cmp
mov
dec
xchg
fildl
or
pop
mov
into
pop
xor
in
sbb
test
mov
mov
lahf
lret
xorb
jmp
pushf
js
sub
sbb
int3
stos
fists
popf
das
in
fistl
or
dec
xchg
xchg
outsb
out
push
jnp
jecxz
fistpl
lea
fisttpll
xor
jo
pop
xchg
adc
in
rcrl
repz
std
data16
push
or
cmp
jecxz
fstl
add
aas
dec
add
pop
jns
fldt
fcomip
adc
jb
add
in
clc
xor
mov
adc
xor
cld
mov
mov
or
ljmp
sbb
xchg
incb
adc
mov
cmpsl
pushf
test
and
loope
and
xor
fsubl
cmp
mov
inc
sub
test
sub
mov
mov
nop
in
xchg
jno
xor
decl
cwtl
mov
inc
out
sbb
shll
popa
in
sbb
xor
test
pusha
mov
sub
xchg
mov
mov
arpl
aas
add
les
jo
mov
outsb
repnz
xor
jmp
int3
dec
pushl
push
pop
mov
jno
xor
lods
push
pop
test
push
sub
arpl
jle
jle
xchg
fwait
lahf
push
pop
mov
dec
and
pop
lea
xlat
sbb
cmpl
mov
jae
mov
rcll
jg
pop
xor
jmp
lcall
mov
pop
movsb
in
fildll
mov
inc
fucomip
cmp
loope
cwtl
and
push
dec
mov
jmp
mov
and
or
mov
out
sti
or
sub
fnstenv
push
scas
orb
sbb
or
push
loopne
sub
sub
mov
xchg
imul
popf
inc
sub
movsb
sub
in
inc
jle
adc
andb
mov
ffree
popf
insl
aas
pop
scas
out
sti
icebp
push
xor
cmpsb
mov
push
and
adc
in
jmp
fidivs
movsl
cltd
mov
cmpsl
push
cmpsl
inc
icebp
mov
in
cmc
inc
cmp
mov
mov
aad
aas
mov
push
rolb
sub
out
iret
inc
mov
push
push
rcll
jmp
inc
lret
and
push
jle
ret
push
sbb
shr
dec
lods
sub
xor
or
dec
cmp
push
cmp
iret
stc
xchg
mov
aam
push
lret
pop
je
mov
mov
pop
loop
cmp
shlb
adc
cmp
into
dec
cmpsl
popa
ss
dec
inc
mov
cmc
dec
je
stos
ss
psubsw
ja
jno
mov
and
sbb
dec
loope
and
pop
adc
imul
pop
cmpb
pop
mov
test
movl
scas
xlat
or
mov
dec
lds
inc
loop
dec
fs
cmpsb
rol
fdivrp
cli
call
imul
push
in
add
cmp
cmc
cmp
jb
nop
arpl
bound
jae
sub
push
xor
mov
cmp
and
push
xchg
and
mov
pusha
fiadds
mov
and
xor
out
push
mov
cmp
pusha
and
mov
pop
arpl
mov
pop
sub
jb
das
inc
cmp
mov
add
and
in
outsb
jl
sahf
hlt
jmp
sub
in
add
mov
and
inc
aaa
lret
fdivl
dec
cmp
les
fidivrl
lret
pop
jg
mov
cmp
lahf
adc
subb
movsl
jbe
cmp
add
jbe
push
fcomps
lret
js
pop
loopne
cmc
fdivrs
and
cmp
pop
push
repnz
insl
in
test
dec
aas
pop
and
mov
jmp
lods
int
data16
push
or
push
call
cmp
mov
jecxz
xchg
sub
js
pop
mov
ret
and
xor
sbb
add
or
mov
icebp
push
mov
push
daa
mov
jns
ret
and
cmpb
adc
cld
repz
je
lret
sub
movsl
mov
mov
gs
mov
hlt
add
jge
ret
push
fistpll
push
pusha
mulb
jmp
push
fisubrl
rcl
jl
mov
mov
adc
sbb
mov
add
inc
or
rcrb
js
clc
jle
loope
sub
xchg
or
repz
aas
test
push
movsb
inc
ficoms
inc
mov
iret
testl
lods
adc
or
or
mov
xchg
xor
sub
js
inc
or
pop
sbb
shll
xor
repnz
jns
xchg
push
outsl
push
lcall
mov
cwtl
ljmp
test
sbb
mov
ds
in
push
lods
data16
jb
rcrb
or
fwait
imul
jbe
mov
mov
inc
fwait
push
jae
shll
adc
add
testl
cmp
into
ret
aas
mov
adc
xchg
jo
mov
sbb
push
stos
xor
jae
push
push
dec
insl
pcmpeqw
cld
push
cld
addr16
xor
sarb
scas
push
ret
and
pop
mov
fnstcw
sbb
aad
ja
adc
std
xchg
out
mov
sub
in
cmp
in
adc
rcrb
stos
aaa
sbb
jne
and
loope
sub
xor
mov
jg
mov
stos
sub
out
faddp
stos
repnz
fists
add
inc
int
insl
jmp
insb
jb
sbb
xor
test
adc
xchg
gs
xchg
into
mov
gs
mov
mov
daa
xchg
jns
ror
mov
cltd
js
inc
jns
push
pop
push
xchg
leave
mov
cmp
pop
xchg
adc
sahf
in
sub
jp
cmp
xor
cld
hlt
roll
xor
lock
xchg
or
outsl
cmp
pushf
lock
hlt
into
dec
mov
fsubs
test
pop
out
test
in
lea
mull
sub
push
int3
movsl
sub
dec
test
cld
pop
mov
arpl
inc
cwtl
lcall
scas
rolb
ret
aas
pop
pop
adc
mov
clc
out
or
jl
mov
les
push
push
inc
dec
mov
stos
sbb
hlt
add
xchg
push
push
xchg
sahf
jo
sub
jbe
and
ss
test
jl
ret
fidivrl
ja
pop
fimull
or
push
dec
dec
xchg
cmp
mov
cmp
push
jns
jno
in
jne
das
js
mov
cld
ljmp
xchg
or
mov
mov
push
cmp
jmp
adc
into
pop
mov
ret
sbb
rcrl
dec
shrl
pop
fisubs
lds
fcmovnb
mov
add
mov
lcall
and
cld
mov
test
pop
pusha
cmpsl
or
sbb
pop
push
je
je
fcomip
add
cmp
jno
cmp
loope
jno
fstp
lods
pushf
in
mov
lcall
xchg
scas
cmpsb
lahf
push
sub
int
jl
push
in
call
and
stc
je
cmp
aaa
jbe
int3
out
fisubl
inc
xor
cli
push
mov
inc
int
or
jns
push
push
xchg
add
call
outsb
out
cmp
push
ret
mov
lcall
adc
adc
wbinvd
jl
cmpsb
rcrl
jo
out
or
or
das
inc
xchg
loope
es
dec
push
mov
xor
imul
dec
and
jg
push
jle
rcrb
adc
cmp
add
aad
mov
add
jo
and
and
hlt
add
cs
lods
jge
out
mov
or
push
mov
mov
pop
imul
xor
or
lock
mov
and
push
mov
mov
in
dec
roll
sub
mov
fistpl
sub
mov
add
add
test
and
push
xor
push
cmpsl
fdivrl
nop
in
and
or
lea
sub
or
fldt
shr
sbb
inc
icebp
sub
jge
and
push
ss
xchg
cmp
leave
aad
imul
sbb
mov
movsl
mov
cmpsb
fidivl
nop
inc
les
xor
jle
jecxz
adc
xor
xor
or
jl
xlat
fists
scas
mov
xchg
ds
add
jae
clc
nop
mov
movsl
stos
in
in
mov
leave
popa
pop
cwtl
jb
test
sbb
pop
je
rcrl
ror
loope
and
push
mov
sub
iret
jmp
orl
icebp
xchg
scas
add
xchg
pop
cmp
jne
mov
push
outsb
pop
rorb
das
imul
sahf
lret
dec
int
pop
and
mov
imul
fsubrp
cmpsb
add
rcl
inc
cli
mov
push
test
pop
mov
je
cmpsl
adc
pop
mov
outsl
hlt
cli
add
mov
or
mov
mov
imul
clc
int3
sbb
and
mov
lret
sti
sbb
fs
and
pop
push
or
shlb
mov
inc
cli
rorl
ds
sbb
shrl
and
push
loope
test
scas
fneni(8087
push
bound
mov
stc
es
pop
jp
loopne
dec
and
hlt
icebp
fildl
push
gs
mov
push
mov
or
test
cli
in
mov
mov
pop
out
cs
sbb
dec
addr16
notb
xchg
testb
arpl
adc
adc
imul
mov
insl
xor
inc
jae
inc
fnstcw
sbb
push
sub
and
test
js
out
and
pop
arpl
mov
fcompl
bound
pop
inc
js
sti
xlat
enter
insl
inc
dec
daa
cmp
push
jns
and
leave
es
push
movsl
call
sbb
iret
arpl
inc
mov
insb
push
push
push
movups
imul
aad
sarl
icebp
or
mov
pop
xchg
mov
sbb
jnp
and
arpl
jns
std
data16
aam
aaa
rcl
xchg
mov
mov
xor
fs
rcr
es
ja
outsl
jns
mov
dec
push
push
popa
mov
scas
and
imul
jns
lahf
push
in
insb
jl
push
js
js
testb
or
push
rclb
and
adc
push
push
mov
mov
add
mov
jg
mov
inc
sbb
aas
xchg
and
insl
test
lret
jb
loop
inc
add
or
mov
ficoms
or
mov
xor
fistl
mov
sub
pop
sbb
fwait
addr16
or
inc
adc
push
jnp
mov
jnp
lcall
outsl
out
lahf
dec
jle
stos
adc
inc
sub
icebp
popf
test
push
cmc
es
js
outsl
jbe,pt
cmp
xlat
rorb
jp
orb
adc
xor
arpl
push
insb
and
pop
cmp
out
mov
dec
xor
push
stos
jbe
fbstp
mov
mov
jnp
ljmp
inc
adc
xor
inc
inc
outsl
push
xchg
insl
xor
inc
push
lcall
sbb
sub
dec
outsl
sarl
aad
inc
push
sbb
sbb
leave
bnd
fwait
movsl
mov
movsb
loop
add
mov
xor
stc
xor
arpl
sbbl
mov
lcall
mov
xor
ja
xor
xlat
ficoml
mov
sub
pop
into
mov
pop
push
push
jmp
aam
inc
add
cmp
mov
cwtl
sbb
mov
mov
add
mov
adc
xchg
inc
xchg
lret
mov
dec
xchg
mov
adc
pop
mov
jmp
adc
mov
inc
das
dec
or
pop
push
and
aad
dec
jns
ror
xchg
movb
es
aaa
inc
sarl
andb
std
pop
stos
push
cmp
push
mov
xorl
jg
xchg
add
das
icebp
cli
mov
dec
dec
mov
jo
pushf
jmp
mov
cwtl
or
in
xchg
sahf
cmp
cld
lcall
jae
mov
xchg
sub
mov
sbb
push
push
inc
cld
sub
fs
shrl
inc
push
or
cmpsl
mov
test
fstps
sbb
xor
imul
mov
ja
add
loope
mov
push
repnz
movsb
notb
dec
xor
push
jns
int3
sbb
xlat
or
lods
adc
push
inc
push
or
aaa
jbe
mov
mov
enter
mov
mov
jge
ret
inc
insl
push
enter
mov
mov
jg
orb
and
mov
mov
add
fbstp
lea
cmpsb
ficomps
and
or
mov
test
dec
jae
out
mov
xchg
hlt
test
lock
jmp
call
ljmp
mov
fadds
movsl
push
les
cmpsl
int3
rorl
int3
stc
cmp
pushw
xlat
lret
pop
pushf
add
lahf
add
lea
mov
addr16
lods
out
jbe
jb
nop
rcr
lea
out
cmpsb
in
lret
dec
mov
cmp
lods
sub
inc
fldt
mov
cmp
int
xorb
lret
jmp
xchg
mov
and
outsb
je
pushaw
lcall
sub
jl
xchg
sbb
test
stos
sti
into
inc
or
pop
outsb
or
sub
adc
pusha
aaa
push
ret
adc
std
movsb
out
inc
push
adc
test
inc
ja
aad
and
int
es
xor
mov
pushf
pushf
sbb
ljmp
jecxz
and
sbb
push
shrb
testb
dec
pop
cmp
hlt
mov
rorb
cmpsb
sub
outsb
stc
jno
out
jbe
lds
mov
in
xor
xchg
add
push
pop
push
mov
das
mov
popa
push
mov
cmpsb
or
xchg
pusha
insl
inc
mov
out
cmpsb
jne
outsb
scas
mov
sub
mov
jne
test
mov
mov
outsl
popf
cmp
sub
xchg
rcrl
orb
push
add
xor
int
icebp
scas
rcrb
ds
repnz
mov
and
cmpl
dec
enter
push
clc
leave
add
xlat
scas
xchg
cmc
push
and
cmp
mov
jl
adc
dec
sbb
into
test
inc
xor
lock
jp
imul
es
stc
cli
mov
dec
adc
loope
sbb
pop
sti
or
cmp
pop
push
arpl
push
testb
sub
in
xchg
jle
ret
push
jle
insl
gs
add
jnp
mov
ljmp
ja
xor
push
mov
xor
jne
mov
icebp
push
lahf
add
sub
rcll
fisubrs
jb
rclb
test
out
cld
xchg
push
push
fwait
xor
les
aam
adc
jo
sar
movsl
jp
mov
imul
jb
cld
outsl
jns
xor
xor
push
mov
xor
xor
and
xchg
jecxz
cmp
fisubs
pop
loope
lcall
repz
repnz
add
addr16
inc
jl
cld
mov
nop
inc
inc
mov
je
int3
cwtl
test
ljmp
in
push
mov
rcl
daa
add
mov
ljmp
cltd
insl
lods
imull
xor
out
xchg
mov
inc
bound
movsl
xor
cmpsb
sbb
inc
sarl
ljmp
repnz
jecxz
cmp
scas
aas
push
adc
mov
out
insb
aad
jo
out
fwait
sub
xor
ret
int
movsb
xor
push
adc
mov
leave
sahf
mov
dec
jbe
lods
movsl
ja
adc
push
in
out
mov
xchg
inc
in
lock
dec
aaa
je
lret
jmp
and
mov
lcall
mov
inc
aam
add
mov
rorb
sub
mov
push
aaa
test
test
cltd
repz
fidivs
adc
cld
jne
pop
mov
mov
ds
jge
int
icebp
jo
fildll
into
pop
insb
cmpsl
pop
pop
xlat
lock
test
xor
in
xchg
mov
aad
sub
dec
test
inc
sar
cmp
js
inc
out
cltd
hlt
pop
or
mov
cmp
insb
mov
pusha
push
add
mov
mov
inc
rolb
imulb
jmp
and
nop
ljmp
sar
sbb
and
movsl
fnstcw
jge
lret
call
mov
ret
daa
aas
dec
pop
or
cld
leave
out
pop
adcl
pop
sub
aas
jmp
dec
push
test
push
adc
mov
das
rsm
cld
xlat
pop
std
out
cmp
lea
add
ud0
add
shrb
pop
movsb
jmp
movsl
or
add
or
jmp
push
nop
and
sbb
in
xchg
fwait
mov
inc
movsb
pop
cmp
push
fisubl
and
pop
nop
cmc
sbb
ja
sub
pop
setnp
sub
mov
add
insb
dec
scas
fiaddl
inc
sub
or
push
leave
add
or
pop
pop
fidivl
in
jo
aam
icebp
cmc
cmp
loope
pushf
outsb
adc
addb
mov
xorb
out
test
stos
add
cmp
add
sarb
sub
xchg
int
in
shlb
jle
imul
fnstcw
imul
dec
inc
scas
loop
out
jae
sbbb
cmp
inc
or
adc
test
fnstcw
rcl
aad
push
cmc
das
repnz
lcall
add
push
cmpsb
lock
pop
mov
aaa
xchg
push
dec
mov
ss
pop
loop
fisttps
mov
fstps
jge
jp
cmpsl
rcr
fistpl
ficompl
and
cmp
out
dec
cltd
lret
xchg
mov
gs
pop
stc
outsl
insl
adcl
sub
out
cmp
sub
pop
cli
sub
pushf
in
addb
jns
mov
popf
call
outsb
mov
adc
mov
mov
into
mov
das
push
test
mov
cmp
pop
xchg
push
rcrl
cltd
cmp
cmp
mov
mov
mov
inc
sbb
mov
and
std
jnp
sub
cmp
dec
ljmp
pop
scas
sbb
lock
sti
fimull
mov
inc
sti
adc
dec
adc
push
pop
xor
inc
iret
xlat
fnstcw
repz
call
jmp
add
and
xchg
pop
mov
xor
fdivp
cmp
mov
pop
adc
pop
push
mov
mov
mov
or
cmpsb
push
pop
fmull
cwtl
and
fcoms
dec
repz
ja
pushf
js
dec
mov
push
fstp
test
push
js
sub
stc
testl
push
shl
and
sbb
std
pop
lret
mov
cmp
adc
gs
imul
and
ret
insb
js
scas
adc
sbb
in
inc
pop
pop
jmp
gs
pop
inc
and
sbb
ret
sti
pop
shl
pushf
pop
add
mov
loop
inc
mov
les
adcl
mov
add
repz
sbb
mov
push
cmpsb
repnz
filds
pop
adc
fbld
mov
xchg
xlat
arpl
dec
cmpsl
movsb
int3
xchg
stos
stos
sub
mov
enter
cmp
aas
clc
loopne
aas
movsb
cmpsl
in
daa
push
xor
xor
testl
pushf
orl
mov
xchg
push
push
fstps
and
sub
scas
push
mov
lret
fimull
push
pop
mov
cmpsl
adc
lcall
fcoms
hlt
add
or
or
or
imul
mov
adc
enter
or
pop
popl
fdivs
cmpsb
ret
dec
int
daa
push
adc
sbb
cwtl
enter
or
adc
cmp
inc
pop
fistpll
es
or
and
mov
and
sub
or
dec
cli
cld
or
fisubs
fcmovbe
dec
and
and
xchg
xchg
int
lock
sub
mov
inc
jp
inc
mov
addb
mov
mov
idiv
inc
cwtl
pop
xchg
dec
jbe
add
mov
js
fwait
mov
and
or
loopne
cmp
jae
adc
jae
leave
pop
pop
leave
push
or
stos
out
daa
into
imul
sub
cmpsb
flds
mov
sub
xor
insb
cli
jns,pn
ljmp
roll
push
pop
pop
scas
cmpsb
jmp
adc
scas
mov
lods
cmp
xlat
fs
negb
xor
inc
rclb
outsb
cwtl
shrl
jbe
dec
das
mov
lods
aas
imulb
std
enter
sbb
inc
ja
scas
loop
mov
jecxz
scas
pop
ret
sbb
sbb
ficoms
mov
pop
sahf
and
jmp
inc
pop
fiaddl
jns
mov
cmp
ss
fsts
push
les
sbb
leave
push
bound
lea
push
and
lret
andb
shl
aaa
sahf
imul
jae
sti
fsubr
dec
push
and
sbb
xchg
int
jmp
das
mov
xchg
es
lret
fadd
mov
fsts
or
lock
or
outsb
adc
mov
pop
popf
roll
sub
cmp
pushw
pushf
loopne
jmp
cmp
cmp
movl
and
fcomp
pop
or
adc
dec
cwtl
mov
push
ret
mov
addr16
orb
jp
mov
cmp
dec
push
ret
adc
push
sahf
lods
and
pop
dec
stos
in
cmp
dec
js
pop
lea
sbb
adc
fwait
cli
lret
std
test
cld
jns
enter
jnp
cli
pop
mov
dec
dec
dec
negl
push
or
jns
repz
loope
adc
and
mov
fisubrl
mov
stos
out
je
and
lahf
pop
jbe
ret
add
enter
fwait
cmp
xor
lock
push
cmp
pop
sbb
push
loopne
push
mov
lret
xor
push
dec
or
mov
gs
stos
stc
mov
fadds
cmpb
int3
in
or
mov
hlt
shl
fs
ret
jg
jl
aam
jl
lret
fildl
lods
decl
lret
xchg
jae
pop
imul
iret
scas
dec
mov
adc
icebp
jo
and
sti
xor
leave
push
dec
ret
push
icebp
into
xchg
gs
mov
fstpl
dec
and
dec
inc
mov
nop
std
push
mov
mov
or
aad
js
push
inc
ret
adc
push
rorl
jne
mov
inc
in
mov
shl
sbb
out
jne
jno
aas
les
shlb
cmp
dec
dec
add
pop
sbb
aad
and
mov
aam
in
addr16
call
xorb
movsb
sub
sub
mov
lock
les
lret
pop
mov
push
int3
fsubrs
mov
test
cmp
adc
push
xor
scas
clc
sti
outsb
jg
fcoms
mov
dec
int
cmp
sub
fcompl
imul
push
jne
sub
insb
sub
sub
xchg
lea
aaa
int3
xchg
cld
ljmp
insb
push
mov
push
out
cmc
fisubrl
mov
pop
jg
xor
jmp
xchg
in
mov
cltd
sbb
sbb
push
mov
mov
inc
and
ja,pt
xor
pop
mov
movsb
aas
inc
push
inc
ljmp
loopne
xor
sub
fcmovb
or
loopne
xor
shl
out
xchg
inc
imul
out
mov
pop
jmp
xchg
cwtl
inc
sbb
mov
pop
std
push
and
mov
cmpb
mov
sbb
mov
leave
and
stos
or
cmp
jo
test
fwait
aaa
xchg
rclb
adc
outsl
mov
mov
out
lds
or
aam
adc
clc
arpl
sub
pop
cwtl
push
int3
iret
out
push
and
cmc
jp,pn
jb
sub
sbb
outsl
adc
jmp
in
dec
rorb
xchg
mov
cs
movsb
push
imul
shrb
scas
xorb
imul
mov
iret
cmp
cwtl
mov
sub
ja
and
fildl
xor
xchg
hlt
inc
cwtl
daa
mov
std
dec
stc
and
inc
xchg
iret
push
std
inc
jp
test
xlat
in
lcall
dec
ja
push
leave
dec
mov
and
pop
mov
pop
cmpsl
pop
imul
outsl
push
jb
ret
dec
jg
lock
addr16
ret
xor
inc
xlat
add
or
ds
jge
aam
prefetch
push
xchg
mov
jb
dec
jl
pop
or
flds
js
jmp
or
test
mov
rolb
leave
or
and
stc
popf
frstor
in
adc
xor
pop
rcl
ret
mov
mov
sub
sbb
push
lods
dec
lret
jl
jne
xchg
mov
lods
xchg
mov
aad
fstpt
or
cltd
mov
sub
dec
frndint
sub
mov
xor
insb
jne
movsb
or
lahf
push
pushf
repnz
push
mov
xchg
mov
dec
aas
fiaddl
test
out
xor
jno
stc
mov
cmpsl
add
mov
insl
sti
addr16
xor
shlb
pop
nop
or
lret
jle
mov
in
sbb
ja
fstl
sbb
mov
rolb
pop
int3
sahf
and
inc
test
pop
mov
or
mov
aas
push
shl
jo
arpl
xchg
cmp
cmpb
ret
cwtl
xor
pop
repz
xchg
xor
outsl
xor
lods
push
add
test
movsl
pop
cld
js
add
pop
mov
cmp
lret
pop
movsl
adc
and
les
or
inc
sub
pop
sbb
dec
mov
jecxz
sbbb
addr16
fidivs
xchg
dec
dec
or
stos
data16
ds
sub
mov
cmp
and
call
xor
jnp
or
and
nop
inc
bound
xlat
and
mov
push
cltd
add
cmp
sbb
mov
xchg
mov
dec
mov
shlb
or
sub
and
lods
mov
out
leave
jge
pop
mov
sub
and
ja
push
adc
jmp
movsl
push
mov
nop
loop
sbb
pushf
js
rclb
mov
push
mov
shrl
mov
pop
jnp
and
xor
mov
stc
stos
push
stos
jnp
jne
enter
or
fistl
xor
mov
push
push
add
mov
pop
jl
add
clc
cli
clc
outsl
push
ret
push
outsb
mov
addr16
sahf
mov
pop
arpl
addb
jl
jo
int
jmp
rorl
add
xchg
or
mov
sahf
mov
in
jbe
stos
adc
and
shll
inc
and
int3
loope
mov
out
mull
inc
stos
dec
jmp
sbb
test
in
in
je
call
sbb
stc
jecxz
out
das
xchg
jmp
pop
mov
inc
icebp
call
mov
sub
xchg
out
xor
int3
mov
scas
nopl
movsb
push
aad
pushf
das
scas
mov
lret
in
push
sbb
mov
mov
xchg
int3
loope
shll
pusha
sbb
adcl
adc
push
aaa
daa
mov
mov
xor
fimuls
jae
push
mov
add
out
adcl
sub
aad
inc
aam
sub
xor
cmp
cmc
dec
push
pop
cmpsb
test
dec
xor
mov
lea
pop
sbb
test
adc
stos
test
loop
lret
mov
push
lds
mov
lock
movsl
ljmp
insb
push
rclb
adc
fsubp
push
mov
xor
lahf
add
cmpsb
into
cwtl
or
faddl
and
push
jle
mov
push
jae
icebp
ljmp
sbb
ret
sbb
pop
sub
dec
dec
jl
or
gs
cmc
add
out
inc
fnsave
dec
mov
and
sub
push
shl
movsl
scas
pop
iret
adc
or
sub
sub
addl
xor
xor
or
in
add
jle
mov
lods
and
or
pushf
mov
and
popa
or
dec
pop
andl
jnp
sarb
mov
dec
cmp
cmp
les
cmp
mov
jae,pn
dec
lock
xchg
addr16
pop
insb
push
cmp
jnp
cmp
stc
clc
fdivl
cmp
mov
aad
cwtl
xchg
xor
repnz
mov
or
scas
imul
xor
push
mov
push
pop
lea
in
add
pop
or
adc
xor
mov
push
loope
add
sub
lcall
std
cli
push
or
jmp
rolb
cmpsl
cmp
xchg
fs
ret
cs
sub
flds
mov
es
test
xor
xor
cwtl
push
pop
mov
out
or
fistpl
scas
mov
stos
bound
sbb
cmp
xchg
dec
popl
jg
inc
or
fiadds
add
xor
loopne
jmp
jae
loope
push
sub
mov
into
mov
insb
repnz
fsubrl
fisubrl
push
sar
cmpsb
pop
sahf
xor
int3
dec
loope
dec
and
daa
cmpl
adc
jbe
test
sub
ljmp
pop
mov
mov
bound
scas
mov
xor
or
in
pusha
adc
or
enter
mov
mov
fmul
loopne
xchg
in
pushf
xor
or
cmc
lahf
insb
push
or
cmp
push
stos
jmp
mov
jg
pop
jno
cmpsl
jle
popa
nop
icebp
mov
fisubs
mov
aas
jp
dec
pop
cld
jns
or
xor
fs
add
lret
xchg
test
mov
mov
fists
xchg
xor
jge
sbb
xchg
xor
xorb
add
test
std
inc
test
fistpl
int3
andb
or
mov
lea
adc
out
or
push
shl
cs
cmp
aas
cld
push
adc
into
fucom
mov
daa
jge
jmp
sub
test
jg
rcll
and
sbb
xchg
int3
sbb
xor
mov
lcall
lret
lock
fcoms
daa
testb
movsl
push
cmp
pop
mov
movsl
ret
xchg
mov
stos
sti
stc
fisubrl
push
pop
inc
xor
std
jo
in
fnstsw
test
fisubl
sub
movsl
or
dec
jmp
mov
mov
fldl
jg
stos
cmc
ret
aaa
out
jb
filds
cmpsb
shrb
push
mov
xor
pusha
jg
sarb
add
jnp
imul
sbb
and
in
clc
pushf
cwtl
idiv
push
jge
xorl
xchg
je
xchg
push
jb
sbb
xor
rcrl
fisttpll
fwait
lret
neg
pop
lods
mov
mov
sti
cmpsl
scas
in
in
sahf
xchg
xor
decb
out
loop
aam
notb
lods
stos
cmpsl
fsubrl
pop
xchg
lret
int
add
jp
and
insb
mov
cmp
jb
cmp
out
inc
lcall
std
cmp
lret
bound
out
sub
mov
xchg
idivb
fwait
cmp
mov
jmp
cld
test
mov
jecxz
sub
stc
or
out
insb
mov
stc
gs
scas
in
data16
ret
lea
or
push
fisubs
lahf
arpl
inc
pop
inc
cmp
jne
add
sahf
mov
xor
lea
cmp
outsb
or
cmpsb
insl
shl
fidivrl
js
sub
test
std
jg
xor
mov
aaa
jae
add
test
pushf
pop
sub
lods
dec
test
mov
add
mov
mov
mov
hlt
shrb
pushf
in
lahf
push
pop
push
cmp
cmc
inc
and
subl
xlat
sub
xchg
leave
inc
or
xchg
incl
arpl
int3
les
adc
frstor
ljmp
adc
xorb
adc
fs
pop
cmp
fcomps
imul
lahf
shl
mov
add
test
ret
sbb
mov
cltd
aas
pop
out
jecxz
rclb
adc
mov
sbb
mov
and
das
stos
repnz
out
push
loop
mov
lds
xor
enter
mov
inc
pop
shlb
xchg
xchg
push
add
mov
or
rol
popa
js
xor
insl
stos
dec
pop
in
push
mov
mov
mov
and
pusha
push
hlt
jbe
bound
mov
mov
sahf
xor
lahf
dec
xor
mov
cmp
mov
lock
lock
xchg
dec
dec
mov
addr16
mov
xor
sbb
movsb
mov
jp
xchg
cs
add
in
pop
sub
subb
mov
xor
aaa
pop
jmp
jno
jecxz
loopne
shl
pushl
dec
iret
nop
jle
fdivl
pop
nop
jae
hlt
repnz
jb
and
les
into
adc
ljmp
lcall
movsl
jo
jecxz
pop
pop
sarb
xchg
push
test
mov
xor
cwtl
scas
loope
mov
mov
jae
lahf
pop
mov
xchg
insl
mov
jbe
pop
push
xor
and
dec
test
leave
adc
mov
inc
xchg
fidivs
mov
iret
movsl
xchg
test
push
lock
push
into
loop
cs
jp
or
jns
js
cmp
stos
xchg
mov
mov
dec
inc
insl
int
pop
cmpsl
xchg
xor
imul
or
sbb
dec
es
jmp
clc
out
aad
loopne
shrl
int3
mov
add
daa
add
or
adc
push
stos
iret
add
inc
loopne
jp
jb
xchg
insb
inc
pop
and
mov
pop
push
addr16
dec
into
pop
into
push
pop
call
adc
gs
rorb
cmp
push
push
into
jge
xchg
ljmp
data16
scas
popa
jae
iret
jns
lahf
sub
std
in
stc
xchg
stc
bound
lea
mov
stos
movsl
loop
mov
xor
out
lahf
dec
stos
add
shlb
stos
push
push
add
adc
fimull
pop
repnz
call
cwtl
dec
jmp
fbld
icebp
hlt
in
mov
enter
ss
and
xchg
int
mov
xchg
inc
mov
adc
xlat
mov
sahf
mov
scas
orb
stos
enter
mov
xorl
sti
cltd
popa
fldln2
mov
hlt
sti
iret
mov
pop
pop
jne
xor
mov
and
ret
test
pop
ds
adc
mov
into
in
sbb
das
mov
pop
pop
out
sti
jle
rclb
outsb
ljmp
mov
inc
enter
mov
scas
jl
cmc
arpl
fmull
je
pop
xchg
pop
lods
mov
sbb
sbb
idivb
ja
jmp
jl
adc
ljmp
fstl
loopne
fbstp
jae
lea
add
int3
xor
ficoml
mov
dec
test
in
jb
jb
jmp
shl
ret
inc
mov
and
inc
popf
inc
cmp
or
sahf
mov
dec
imulb
push
xor
loopne
dec
movsb
add
cwtl
mov
push
jge
push
fnsave
arpl
cmc
push
jnp
arpl
inc
daa
pop
hlt
mov
repz
jns
push
jge
mov
ds
mov
xor
cmp
add
xor
inc
mov
inc
out
aam
mov
xchg
fdivr
call
popa
mov
in
popf
xchg
sbb
inc
xor
mov
cmp
jl
lods
sub
clc
shlb
cmp
fdivrl
push
and
and
scas
push
lcall
push
jmp
arpl
mov
shll
pop
loop
mov
and
test
and
mov
xchg
lldt
dec
mov
or
inc
testb
or
mov
inc
hlt
mov
out
jg
dec
repnz
pop
pop
cmp
shll
push
ds
jbe
xor
xor
push
sub
fisubl
rclb
xchg
inc
mov
jg
test
loope
sbb
fwait
lods
fidivs
packssdw
mov
adc
xor
dec
inc
xchg
dec
mov
fsub
in
cmp
test
jnp
add
jb
add
sub
scas
mov
cmp
sarl
dec
push
cmp
push
push
mov
hlt
push
jae
test
and
and
loope
pusha
mov
push
cli
adc
mov
lods
push
inc
or
pusha
pushf
mov
inc
pusha
mov
loop
sahf
xchg
ret
aas
xchg
lret
leave
jl
jp
cltd
dec
mov
pop
dec
stc
pushl
js
jno
mov
cli
xchg
gs
icebp
movsl
xchg
mov
repz
sti
xchg
test
cld
mov
pop
repz
cld
pop
sub
push
inc
imul
inc
xchg
rolb
mov
rol
cmp
xchg
clc
or
push
push
dec
jmp
cs
fdivr
iret
xor
mov
mov
daa
xorl
scas
sbb
popf
pop
cmp
out
repnz
cmp
mov
jecxz
inc
lods
fisubs
pop
insb
repz
mov
data16
cmp
xor
into
repz
and
dec
inc
inc
aad
jno
lret
addr16
js
inc
gs
xor
mov
push
inc
out
ds
push
roll
cmpsb
jmp
cmp
ds
and
lret
and
lea
loop
dec
inc
mov
loop
cmpsb
pop
in
jnp
in
jnp
pop
sbb
into
incb
repz
sahf
push
pop
mov
mov
dec
insb
xchg
sbb
adc
jp
rcrb
test
sbb
icebp
dec
in
icebp
out
lock
jp
in
jb
ljmp
or
pop
and
and
lock
add
jo
loopne
fs
xor
pop
adc
xchg
push
push
pop
sti
xchg
je
imul
sub
pop
xchg
and
pusha
push
pop
nop
das
jecxz
or
mov
bound
lock
or
pusha
ret
cmc
rcrb
fidivrs
xchg
call
jbe
jne
out
jle
inc
and
and
sbbl
add
adc
int3
stos
sar
lds
loopne
lret
sbb
pop
jno
cmpsl
sbb
outsl
shll
xor
dec
daa
nop
loop
pop
fldcw
in
lcall
mov
push
cs
push
and
and
je
mov
fimull
dec
mov
js
xchg
adc
mov
call
add
push
inc
lcall
movb
fisubrl
sarb
inc
mov
aaa
out
sub
shrl
lock
nop
dec
sbb
ficoml
jge
mov
mov
cmp
sub
scas
sub
jnp
lret
nop
mov
xchg
sbb
or
fidivl
xchg
sub
test
dec
mov
or
or
callw
dec
sub
mov
xor
cltd
pop
mov
cmp
inc
xchg
dec
std
adc
into
fucomi
pop
mov
fimull
sub
add
jae
and
sub
push
add
jne
outsl
in
rclb
aaa
aas
cmp
jp
cwtl
stos
sub
jg
pop
das
sub
js
and
mov
mov
mov
xchg
inc
mulb
aad
lret
scas
nop
cmc
out
inc
std
push
dec
and
adc
stos
out
outsl
jbe
clc
je
int
mov
sub
sbb
shll
pop
and
lea
cmp
xchg
leave
sbb
ja
ss
dec
and
add
ret
popf
cs
push
out
into
popf
icebp
fiadds
ja
pop
xor
fwait
xchg
and
loope
pop
sub
ret
test
push
fbstp
call
mov
sbb
outsb
or
cld
and
cmp
lds
inc
or
mov
inc
int3
mov
fdivrs
mov
rorb
fldenv
and
push
imull
sub
mov
sbb
ror
pop
movsl
stc
insb
or
repnz
es
adc
mov
mov
mov
mov
movsl
cmp
in
lcall
mov
adc
cmp
sahf
push
ljmp
js
xor
dec
ja
jne
rorl
lock
xchg
pop
daa
sbb
rorb
push
jg
cmpsl
jp
iret
add
test
cltd
pop
adc
int
push
jb
dec
icebp
cmc
or
mov
xor
sti
int3
push
pop
nop
and
xor
adc
dec
pop
out
xor
test
push
and
ja
or
fdiv
xor
insl
adc
sub
cwtl
call
adcb
jbe
stc
repz
lahf
and
ds
loop
rolb
or
in
lods
sti
inc
ja
fsubr
cmpsl
pop
mov
ss
add
imul
mov
jnp
xchg
cmp
push
push
mov
in
inc
or
faddl
pop
rcll
xlat
jle
stos
mov
movsl
push
enter
js
mov
and
leave
fwait
pop
adc
or
cli
mov
add
lret
pop
or
dec
sbb
inc
nop
inc
movsb
cmc
ja
sarb
and
mov
cltd
cmp
mov
mov
sbb
mov
fucomp
mov
sub
sub
jecxz
outsb
jecxz
push
rcll
icebp
lret
jne
pushf
popf
loopne
mov
pushf
xchg
sub
sub
or
hlt
loop
imul
cmp
pop
and
lret
and
mov
data16
into
stos
or
scas
jns
mov
jg
test
fs
fstps
test
adc
vpmacssdqh
insl
fwait
inc
adc
xor
fsub
mov
leave
clc
gs
xchg
xchg
pop
stos
orb
es
shrl
mov
push
cld
sub
cmpsl
fisttpll
inc
cwtl
xor
mov
adc
push
mov
inc
ret
push
adc
iret
xor
push
repnz
xchg
pop
push
scas
imul
icebp
cmpsb
xchg
insl
lret
jb
into
iret
or
inc
loope
dec
push
cmc
or
xchg
arpl
inc
or
jmp
jmp
int
lods
mov
jns
mov
loopne
pop
mov
gs
loope
stos
add
xchg
ss
in
mov
cmp
push
or
dec
rol
xchg
jmp
add
lods
mov
jp
sahf
fsubs
lods
jl
mov
sbb
pop
adc
test
cmp
sub
stc
pop
stos
iret
push
mov
dec
or
or
dec
xor
mov
xchg
iret
xchg
mov
add
jmp
lock
rcl
movsb
pop
cmp
stos
mulb
stos
shl
inc
data16
out
and
ret
mov
inc
lret
fldcw
test
jns
jnp
cmp
lods
stos
loop
dec
adc
fsubrs
lds
enter
repnz
and
add
fimuls
insl
lods
addb
inc
outsb
sbb
pusha
mov
mov
arpl
js
lods
loope
jge
or
cli
or
loop
mov
sub
jne
dec
xchg
incb
in
cmp
xor
mov
imul
cld
repnz
add
mov
cmpsb
cmp
das
dec
push
test
add
sbb
xchg
fimull
loop
cmp
pop
lahf
ret
js
xchg
lret
xchg
std
das
push
xchg
ja
inc
pusha
jl
pop
mov
popf
lcall
add
xorl
mov
dec
daa
pusha
jb
cmp
adc
pop
lock
xor
cmp
push
insb
repz
stos
icebp
ret
sbb
je
dec
mov
or
add
js
addr16
ljmp
inc
cmc
mov
into
stos
pop
sbb
mov
adc
push
imul
push
and
leave
push
popf
dec
adc
pop
add
add
mov
scas
or
pop
sub
fildl
mov
loop
mov
mov
mov
mov
popf
subl
mov
out
fs
mov
loope
in
jl
bound
mov
ds
xorl
rorb
push
and
add
or
loopne
inc
out
xchg
mov
or
hlt
xchg
jp
pop
xchg
lea
mov
in
aaa
psllw
or
bound
mov
cmp
movb
push
add
scas
mov
test
aaa
xchg
paddusw
mov
push
mov
and
sub
lret
mov
cli
pop
jae
jns
or
mov
lret
hlt
xor
in
cld
mov
int
pop
adc
test
into
xor
xor
or
dec
cmp
stc
or
gs
addb
loop
cmp
sub
pushf
aam
jb
bound
mov
scas
cmp
or
cltd
jo
push
aaa
out
hlt
sbb
jl
leave
inc
rcl
in
aam
sbb
jecxz
mov
ret
movsw
adc
lret
pop
lods
mov
stos
repz
push
xchg
stos
cmpsb
xchg
es
dec
push
add
push
xorl
xorb
dec
cltd
mov
lock
sub
or
es
shlb
out
sub
inc
xor
dec
jno
add
mov
pop
sbb
mov
imul
sahf
adcl
insl
mov
aas
adc
ja
sub
lock
dec
sbb
push
sub
pop
outsb
dec
out
int3
pop
or
shl
fcoml
call
stos
out
hlt
jmp
fidivl
xchg
lods
mov
dec
mov
loope
imul
xorb
dec
jnp
popl
lret
jmp
lea
sti
push
stc
pushf
ja
mov
sbb
jp
mov
inc
lcall
test
xor
lods
nop
mov
push
add
jg
push
outsb
loop
adc
lds
ds
xorl
dec
loope
mov
cli
testb
jne
xchg
fadd
sbb
enter
xlat
in
pop
fs
mov
push
in
ss
cmp
xlat
add
rcr
aaa
test
xchg
shl
call
lods
mov
pop
adc
mov
push
xchg
scas
test
subl
push
loopne
inc
mov
popa
stc
or
and
cmp
adc
sbb
inc
jp
cmp
add
jle
aad
jno
adc
mov
adc
imul
or
jb
lods
cs
jl,pn
and
cmpsl
xchg
test
lods
shll
inc
cmp
mov
dec
ljmp
stc
hlt
push
loop
mov
insb
movsb
sub
iret
sbb
repz
mov
push
mov
fiaddl
lods
movsl
sahf
push
or
cmpsl
nop
dec
sub
outsb
imul
fwait
leave
push
add
jle
sbb
fsubrl
pop
lcall
xchg
fwait
cmp
popf
mov
pop
enter
jbe
mov
adc
sti
or
cmp
rcrl
jne
pop
inc
jecxz
jecxz
out
jbe
psadbw
sbb
incl
scas
cs
addr16
ficoml
stc
gs
dec
js
cmp
ret
xchg
xchg
mov
xor
and
pop
jb
in
inc
jo,pt
rcl
push
cmc
mov
jne
fs
out
jne
arpl
mov
sub
inc
xor
cvttps2dq
sti
inc
out
push
dec
inc
xchg
in
pop
xchg
rcrl
inc
inc
jp
icebp
pop
push
stos
sbb
adcb
mov
or
popa
fsubl
dec
push
cld
and
dec
mov
jp
lock
mov
adc
pop
divl
mov
push
test
xchg
xor
or
stos
mov
dec
jl
jg
xchg
mov
imul
xchg
std
sub
imul
pop
push
sub
add
sbb
call
mov
insb
mov
stc
imul
pop
jne
inc
ret
adc
jae
dec
push
ret
xor
addr16
in
add
adc
stos
mov
in
dec
out
testl
fidivrl
clc
insl
lahf
or
xor
adc
nop
aas
loopne
mov
sbb
out
xor
jge
push
in
inc
subl
xchg
inc
sbb
aam
push
std
xchg
mov
rol
arpl
movsl
cmp
sbb
xchg
add
inc
dec
stc
mov
cmp
xchg
mov
pop
mov
out
nop
sahf
sbbl
lret
subb
jns
jmp
int
aad
cld
xor
mov
push
push
test
int
stos
mov
in
outsb
fldenv
std
hlt
jmp
dec
stos
aam
sub
je
jae
cmpsb
mov
cmp
mov
popf
add
cmpsl
cmp
loope
inc
sub
xor
gs
sub
idivl
cmpsb
cli
mov
pop
dec
pushw
repz
or
test
adc
bound
mov
xchg
imul
daa
dec
outsb
jg
out
out
mov
add
adc
mov
add
jp
pop
out
call
mov
push
sbb
out
je
and
divl
clc
push
ja
sahf
xchg
mov
mov
mov
out
fadd
in
es
xor
dec
pop
xor
xchg
xchg
mov
fwait
or
data16
pop
ljmp
jae
test
mov
dec
mov
sbb
jg
sub
shll
repz
repz
clc
out
inc
push
mov
outsl
lret
mov
bound
inc
aam
xor
aaa
pop
mov
fldenv
fistpl
mov
and
inc
sbb
push
adc
lret
and
jge
jb
jns
je
mov
xchg
in
gs
pop
push
in
cltd
pop
scas
loopne
outsb
test
mov
nop
enter
pop
lahf
fsubr
dec
test
mov
repz
pop
mov
cs
pop
cmp
xchg
dec
dec
pop
repz
dec
out
xlat
popf
pop
xor
cmc
xchg
jnp
pop
iret
cmp
sbb
jg
mov
adc
jo
sbb
push
in
repz
inc
pop
sbb
shll
xlat
lds
push
repz
mov
xlat
ja
mov
add
outsl
movsb
out
pop
fidivrl
cmp
cmpb
fwait
sti
xchg
xchg
push
mov
in
les
push
mov
cmpsl
sbb
int
ljmp
or
arpl
or
add
hlt
add
in
lret
aas
notl
pop
mov
sbb
ss
push
xor
scas
mov
cmp
xchg
jno
test
or
xlat
pop
pop
jg
sbb
jnp
xor
scas
and
sti
jg
fcompl
push
popa
jbe
popa
shrb
fbstp
xchg
dec
cltd
jno
arpl
xchg
push
cwtl
fst
data16
xchg
movsl
push
inc
in
movsb
dec
pop
pop
punpcklbw
mov
test
pusha
testb
sti
cli
sub
fildll
or
jl
mov
dec
jge
jg
hlt
out
cmp
mov
rorb
push
xchg
pop
sbb
gs
or
inc
lods
popf
push
sbb
xor
add
enter
mov
test
mov
xor
rcrb
sub
and
scas
push
pop
mov
mov
cltd
mov
push
mov
test
dec
test
in
test
scas
add
aad
adc
stc
scas
jmp
jne
dec
xor
lods
gs
sbb
mov
lret
and
imul
addl
int
stos
repz
cmp
out
mov
push
sbb
mov
add
in
mov
xor
arpl
jmp
pop
cmpsl
rorl
rol
or
mov
leave
adcb
das
lea
xor
mov
cs
adc
push
inc
mov
iret
and
cmpl
enter
icebp
mov
lcall
test
push
inc
dec
pop
push
mov
mov
daa
xorb
or
jg
or
dec
scas
sbb
aam
inc
push
nop
push
and
xchg
jecxz
pop
decb
fbstp
cmp
fidivrl
in
mov
fmull
les
pop
pop
push
dec
lods
cld
negb
jb
and
inc
icebp
push
pushf
addps
mov
lret
lods
jmp
mov
inc
stos
test
xor
lahf
dec
mov
xor
sub
pop
es
clc
stos
test
in
mov
pop
aaa
imul
ljmp
jne
test
insl
push
out
test
repz
or
fdiv
push
ret
vcvtsi2ssl
jle
cmp
fld
mov
outsb
dec
addr16
pop
cmp
mov
xor
lahf
addr16
hlt
xchg
cs
jae
repnz
scas
xchg
gs
sbb
jnp
mov
xchg
iret
loop
aam
std
pop
in
and
inc
jae
add
mov
jmp
and
mov
push
dec
repz
leave
push
lcall
mov
inc
fs
stos
cs
cwtl
push
push
dec
pop
pop
aad
or
adc
data16
imul
adc
pop
add
mov
daa
cmp
repnz
mov
jge
test
jecxz
sahf
outsb
pop
sarb
pusha
xchg
cmp
out
arpl
into
arpl
mov
or
dec
sub
sbb
dec
push
mov
dec
jmp
adcl
fwait
test
aas
sbb
sarl
test
dec
mov
test
inc
jno
cltd
test
cwtl
cli
and
xchg
ss
sahf
add
test
ficomps
shll
mov
push
cmpsb
cli
dec
xchg
cmp
mov
outsb
jmp
mov
addr16
popf
test
push
data16
lds
push
cmp
xchg
mov
ss
dec
and
push
lahf
js
mov
xor
enter
lahf
jno
xchg
push
pop
ljmp
push
cld
xchg
ss
ljmp
mov
cwtl
les
scas
lock
mov
cli
cmp
test
or
add
inc
mov
cmpsl
divl
cli
icebp
es
jge
addr16
in
out
pop
cmp
add
mov
sub
mov
in
fwait
push
repz
ret
cs
dec
mov
scas
ja
jle,pn
mov
dec
jb
imul
push
lds
stos
js
lock
sub
and
mov
xchg
clc
push
fisttpll
dec
mov
push
pop
dec
insb
jb
imul
inc
ss
dec
push
sbb
sbb
inc
jge
mov
popa
lods
sub
pop
pop
rclb
bound
inc
pushf
pushf
aaa
push
adc
leave
inc
and
in
mov
out
jp
xchg
in
stos
icebp
cmpsl
sbb
fidivs
lds
bound
lret
mov
movsb
clc
mov
push
call
outsl
lcall
test
nop
xor
mov
mov
sahf
and
aam
ljmp
sar
pop
sahf
test
mov
mov
push
sub
lock
and
sub
test
pusha
lods
pop
xchg
inc
repz
jecxz
inc
xor
lret
and
into
and
inc
xchg
mov
cwtl
lods
push
scas
stc
int
ret
and
lret
ds
pop
xchg
add
push
out
fnstsw
cwtl
pop
push
sbb
dec
rcrb
rolb
adc
mov
mov
xorb
or
jecxz
add
xor
int
mov
push
jl
cltd
jle
movsl
mov
dec
into
mov
repz
divb
ret
lds
mov
lods
sbb
stos
adc
ja
mov
inc
push
mov
dec
inc
in
or
test
xor
nop
mov
xor
divl
add
aaa
push
out
push
ss
ret
adc
mov
mov
cmc
repnz
pop
outsl
fbld
inc
lahf
fnstcw
ja
cmpsb
lahf
cmp
pushf
rcrb
and
scas
cmp
adc
sub
lods
xchg
js
in
pop
nop
lods
pop
add
or
mov
int3
enter
rcrb
ja
js
or
add
int3
repz
push
cmpsl
dec
mov
mov
and
inc
inc
mov
scas
cmp
data16
cli
push
adc
push
mov
xchg
bound
sbb
idiv
imul
mov
inc
jmp
cmpsb
shll
hlt
sub
stos
es
sub
push
call
xor
jno
push
bnd
pop
push
mov
cli
and
loope
daa
negl
push
inc
mov
out
xchg
lods
mov
xlat
xlat
fwait
hlt
pop
lret
add
rorb
jecxz
sbb
mov
add
and
shl
lret
mov
test
es
call
out
sbb
aad
jb
in
aas
pop
add
xchg
mov
cmp
ficompl
out
adc
jp
cmp
ret
jno
and
and
pop
xor
xchg
xchg
mov
ljmp
xlat
or
or
jecxz
xchg
call
sbb
fidivrs
cltd
loopne
out
test
jg
and
mov
dec
dec
pop
pop
sbb
out
pop
lods
mov
push
scas
lods
jno
inc
jno
cli
fstps
xor
call
jge
sti
loop
pusha
sub
ja
xchg
cmp
or
xchg
dec
mov
add
outsl
out
mov
addr16
lds
mov
lea
inc
sbb
dec
adc
into
mov
xor
in
fcompl
mov
stos
push
imul
inc
hlt
test
pop
hlt
mov
xor
sbb
sub
not
in
dec
add
xor
sti
add
enter
ficomps
add
adc
popf
or
inc
ret
int
mov
adc
fldt
fwait
sub
push
cmp
lret
stos
cld
shlb
jo,pn
push
mov
mov
push
mov
stos
sub
scas
pop
fldt
add
jg
inc
dec
out
arpl
add
sbb
adc
cmp
js
xchg
mov
aaa
jo
add
mov
sub
jecxz
pop
das
cmp
and
xchg
cmpxchg
push
mov
loope
pop
fsub
iret
lret
loop
sbb
test
ds
cmp
frstor
lcall
int3
jb
loope
popf
mov
bound
push
mov
xchg
cmc
mov
adc
sbb
jae
sarl
pop
sub
xchg
and
cmc
mov
es
test
inc
and
and
decb
lods
jge
movsl
or
dec
ds
fstl
shl
mov
inc
fwait
cmp
cmp
mov
inc
add
or
sahf
das
jmp
xor
roll
inc
mov
daa
add
jo
mov
jno
stos
push
jnp
clc
insl
into
sub
jg
cmpsb
or
push
stc
mov
out
js
adc
jg
sbb
jg
dec
dec
addr16
dec
scas
cmp
xor
pop
fisubrs
clc
jg
mov
sbb
lds
cld
sbb
hlt
push
stc
push
jae
fistpl
sbb
leave
aad
push
push
shrl
cli
popa
dec
push
add
xor
xor
inc
mov
pop
jecxz
call
pusha
mov
mov
je
mov
aam
mov
mov
fisubrl
repnz
je
sub
std
je
cmp
adc
push
daa
push
ss
jns
ds
mov
cmp
ret
out
into
test
fistpl
pushf
cmpsl
jb
ljmp
in
gs
sbb
mov
xchg
cmp
fcmovnu
out
ljmp
jle
mov
add
mov
cli
pop
cli
dec
sub
shrl
dec
cwtl
jmp
dec
fdivs
jne
hlt
xchg
mov
sbbb
fwait
inc
int
adc
popa
fldt
cmp
insl
cli
test
aaa
adc
mov
sar
add
xor
sub
gs
or
js
adc
movsb
push
out
dec
mov
dec
fidivl
adc
push
popf
pop
jae
push
xchg
xchg
xlat
test
cmc
adc
xchg
push
std
xor
mov
test
pop
scas
inc
les
stos
dec
sbb
in
xchg
mov
add
adc
add
lret
shrb
and
loop
testl
insb
mov
stc
sbbl
mov
jmp
add
add
rorl
int3
or
repnz
inc
push
mov
xlat
test
orb
pop
adc
jg
outsb
jns
jno
xchg
aas
fsubrl
ret
test
or
jl
into
adc
mov
mov
pushf
push
sbb
or
mov
and
xor
aad
ret
or
mov
and
pop
addr16
jo
repnz
loope
or
out
loope
loop
shrl
hlt
orl
inc
mov
enter
icebp
dec
das
xchg
fistl
cmp
mov
mov
xor
rolb
mov
incb
out
sub
dec
insb
push
mov
jno
push
pop
or
in
jle,pn
jo
inc
popa
popa
xor
scas
pop
xchg
cmp
xchg
subb
mov
mov
jl
push
jns
das
fildll
dec
insl
mov
mov
test
xchg
enter
mov
or
lds
ja
andb
adc
jo
cmc
adc
jmp
dec
mov
vrcpss
enter
data16
xor
pop
mov
lods
jmp
xor
iret
inc
pop
dec
mov
das
cmc
clc
in
adc
ljmp
mov
cmp
mov
add
push
popa
mov
add
dec
pusha
cmpsb
imul
mov
sbb
jae
push
mov
mov
add
pop
mov
clc
ficomps
and
ja
pop
adc
pushf
cmp
push
pusha
xlat
stos
xorl
sub
test
xor
pop
mov
mov
sahf
mov
ret
fs
and
mov
and
xor
adc
and
sarl
xor
shll
mov
xchg
mov
sbb
ljmp
aas
in
fildl
push
sub
push
mov
and
add
cld
fiadds
add
ret
push
cltd
stc
lret
and
mov
rcrl
loope
adc
lea
ret
push
pop
push
cmpsl
aaa
pop
mov
fdivrs
popf
shrl
mov
sbb
xchg
shl
pop
push
pop
lea
and
sbb
or
xor
repnz
add
lds
out
cltd
fsubrl
mov
adc
stos
add
xchg
in
repz
shl
cmp
cmp
insl
imul
mov
ja
jle
mov
inc
jb
sub
or
adc
sub
or
icebp
mov
aam
push
std
and
les
ds
loopne
mov
fwait
mov
mov
aad
mov
mov
je
mov
imul
movsb
enter
jle
fiadds
les
mov
test
or
sarl
inc
rcr
dec
jns
sbb
or
scas
scas
mov
stos
scas
push
js
inc
test
and
inc
mov
ljmp
adc
xchg
loop
xchg
fstpt
enter
mov
add
out
mov
xchg
icebp
inc
aas
mov
lret
cmpb
mov
or
insl
shll
xor
in
aas
arpl
cmp
fdivr
xchg
sub
stos
int3
mov
cmpsl
cmpl
jno
addr16
int3
sbb
or
push
sarl
pop
mov
adc
xchg
movb
popf
mov
push
and
js
hlt
adc
pop
xor
stos
and
pop
scas
xchg
js
test
cs
in
cmc
scas
stc
jns
push
jp
sahf
std
jmp
xchg
mov
xor
sbb
mov
dec
rolb
push
data16
popa
cmc
icebp
mov
jnp
cltd
ret
and
clc
jmp
into
outsl
xlat
mull
xchg
test
mov
push
lret
js
jle
shlb
sbb
negb
cmp
icebp
das
shlb
in
outsl
jle
scas
mov
push
hlt
in
daa
lock
push
jp
lods
stos
mov
loopne
mov
inc
jne
cmpsl
cmp
fwait
mov
andb
pop
aad
fldl
cli
rcll
jp
mov
and
and
sub
gs
push
add
mov
pop
ret
aad
clc
lret
insl
jns
mov
xchg
out
in
std
sbbb
icebp
push
mov
sbb
jno
inc
in
push
lock
mulb
sbb
sub
mov
mov
sub
push
sar
xchg
lcall
and
loop
mov
inc
cmpsb
enter
push
test
pop
inc
pop
mov
dec
std
out
xchg
in
inc
and
jecxz
das
sti
iret
jne
sbb
out
jp
lret
popf
pop
pusha
jg
out
popf
mov
or
and
inc
mov
loopne
int
jb
pop
jl
lock
das
notb
inc
mov
or
cmpsl
rolb
ret
and
rcrb
mov
popf
int3
repz
fcmovnb
mov
stos
ret
je
lock
stos
cs
lahf
xlat
sbb
in
mov
aad
lods
mov
sbb
js
jno
cli
mov
push
arpl
cmc
lea
sub
aam
cmp
lds
mov
out
imul
lcall
xor
mov
scas
sub
or
addl
adc
push
imul
inc
fidivrl
adc
dec
xchg
push
test
xchg
loopne
daa
ds
orb
cli
adcb
ss
scas
jl
loopne
subl
inc
faddl
adc
sahf
add
scas
int
add
call
xorb
mov
push
mov
push
and
in
sub
cltd
jne
jg
pop
dec
movsb
jecxz
loope
push
adc
les
popf
fmuls
in
out
les
sbb
icebp
cltd
or
jb
sarl
movsl
aam
sbb
sbb
insl
jle
loope
adcl
pop
imul
rclb
inc
push
jp
add
iret
cmp
cmc
mov
sub
loope
cwtl
dec
ret
sbb
push
movsb
push
sub
push
xchg
gs
xorb
fnsave
sbb
je
fwait
jge
int3
add
addr16
adc
popa
cmp
mov
sub
jl
cmpps
scas
cmp
inc
call
cmp
popf
or
test
stos
lds
xlat
adc
xchg
dec
xchg
loope
dec
inc
inc
popf
adc
movsb
ficoml
fimull
lods
sub
imul
mov
fidivrl
lret
test
mov
call
mov
add
mov
sti
cltd
andb
pop
repz
jmp
cmp
sbb
xchg
adc
ret
dec
cmp
loop
xchg
out
mov
or
ret
fstps
dec
fstl
jns
filds
xlat
xor
repz
inc
mov
or
xchg
jbe
adc
ret
push
cmp
loopne
loope
daa
inc
aaa
mov
lods
lods
dec
and
lods
xchg
mov
aaa
aam
push
push
push
dec
stos
loopne
pushf
or
inc
fmull
push
sub
mov
movsl
pushf
ds
xor
lahf
mov
cli
sub
js
loopne
lahf
mov
repz
mov
aam
mov
push
fcompl
repz
in
sub
inc
fsubrs
movsl
imul
repnz
mov
push
daa
inc
sbb
pop
fdivp
es
xchg
loopne
xorb
leave
push
pushf
cli
loope
and
jp
repz
aad
pop
sbb
cmpps
mov
mov
pop
faddp
repnz
jbe
and
dec
test
bound
mov
cld
mov
sbb
jmp
push
mov
faddl
sub
dec
sub
fnstcw
inc
and
sbb
inc
popf
fcmovb
stc
and
mov
inc
add
clc
sub
push
dec
inc
add
cltd
aas
cmp
adc
push
negl
mov
pop
or
lods
jp
xor
fildl
movsb
out
lods
pop
out
repz
pop
mov
xor
mov
mov
mov
int3
sbb
pusha
and
in
stc
and
or
add
shll
std
xor
loope
inc
mov
ret
pop
leave
clc
pop
dec
xor
into
imul
mov
shrb
jns
incb
jnp
lret
bound
pop
or
idivl
repz
xor
add
lcall
in
adc
mov
iret
pop
repz
call
inc
add
movsb
cmpsl
incb
xchg
aam
outsb
xchg
adc
repz
dec
jl
pop
insl
outsl
inc
or
test
daa
nop
jo
or
pop
inc
mov
in
mov
shr
cmpsl
sbb
add
in
fldenv
pop
hlt
ljmp
inc
insl
xchg
dec
or
and
rolb
mov
stc
pop
inc
inc
fdiv
add
jbe
xchg
xor
push
ret
mov
pop
enter
xor
movsl
lea
dec
es
mov
into
pusha
push
mov
outsl
inc
xchg
and
jns
push
out
mov
push
dec
or
ljmp
leave
sub
es
cmpsb
loope
int
addr16
ss
add
ret
mov
xchg
call
shl
les
mov
ret
mov
push
and
mov
sbb
mov
jo
pusha
sub
je
pop
inc
xor
push
arpl
pop
hlt
xor
jne
fcmovnb
dec
push
pusha
sub
mov
sarl
ss
pusha
cmp
test
xchg
scas
jp
in
pop
dec
fidivrs
xor
xor
and
fs
and
scas
lods
movsl
mov
mov
dec
jno
xchg
insb
mov
gs
and
pushl
sub
dec
jb
iret
sahf
mov
and
or
or
ds
adc
jmp
cmc
jle
fxch
outsl
push
push
add
rclb
mov
fcmovne
stos
jo
jle
maxss
xor
dec
fisttps
std
mov
lock
addr16
shll
fnstsw
dec
pop
lock
push
fs
jge
push
mov
mov
loopne
mov
jb
imul
mov
stos
jle
lcall
into
mov
jb
out
rol
xchg
jl
inc
js
jbe
dec
orl
xchg
shlb
cmp
int
cwtl
xor
push
xor
sbb
lods
cmp
test
lods
in
sub
inc
daa
inc
fwait
in
leave
mov
dec
inc
loop
lcall
pop
adc
loopne
iret
inc
call
js
dec
sti
xor
cmp
xor
pop
adc
clc
dec
icebp
std
call
add
xchg
pop
mov
dec
dec
aad
inc
test
pop
std
and
push
push
jmp
prefetch
add
sbb
mul
xchg
add
jnp
popa
sbb
jnp
inc
push
hlt
xchg
mov
jl
mov
arpl
mov
xor
pop
dec
lods
add
pop
jg
push
xor
jmp
mov
jne
mov
pop
lock
roll
push
and
enter
add
mov
cwtl
pop
and
pop
insb
xchg
xchg
loopne
pop
dec
xor
mov
divl
adc
xchg
adc
xchg
add
jo
push
fnsave
test
mov
ja
xchg
movsb
dec
mov
fs
sarl
orb
fisttpll
sbb
pushf
push
fidivl
cmp
jo
adc
jnp
push
scas
ret
cmc
mov
xor
dec
pop
popf
adc
jmp
mov
subl
adc
test
cmp
or
clc
cmp
xchg
pop
in
xlat
fprem
and
inc
int
push
and
gs
addr16
sbb
mov
or
sub
mov
fwait
add
or
lock
xor
push
push
pop
xchg
scas
out
or
xor
hlt
ud1
push
adc
inc
out
wbinvd
stc
std
decb
repz
cli
out
les
xchg
leave
fucomi
adc
pushf
dec
cs
inc
setno
ss
add
xchg
or
or
nopl
int3
scas
sub
popf
adc
jne
lret
jbe
jo
or
shrb
xchg
rclb
rcr
mov
jo
mov
xor
aad
sub
jns
pushf
repnz
adc
jnp
sbbl
push
add
inc
or
scas
push
out
lock
sti
lock
push
mov
lret
sub
test
cmp
mov
sub
cs
cmp
sbb
mov
xchg
test
fcomi
ret
mov
ds
mov
or
and
into
imul
negb
scas
lea
xchg
xor
std
das
call
in
mov
dec
and
cmpsl
push
push
nop
push
push
mov
scas
imul
jbe
lds
int
cmp
leave
mov
cmp
dec
mov
adc
movsb
hlt
jo
cli
adc
or
ljmp
mov
dec
adc
jg
scas
negb
mov
mov
mov
popa
mov
cmpb
xchg
jnp
setp
and
test
pop
pusha
dec
divb
aaa
xchg
xchg
inc
clc
xchg
adcl
adc
nop
xor
cli
mov
outsl
pop
icebp
out
movsb
or
jae
dec
xchg
jb
fdivr
push
add
call
xor
xlat
mov
jae
loop
scas
dec
pop
inc
ds
mov
xchg
push
sbb
ja
mov
push
mov
mov
or
dec
push
xor
out
xchg
xchg
cmpsb
es
add
pushf
mov
mov
mov
dec
sub
filds
sub
adc
mov
cmp
fs
mov
dec
push
mov
or
sub
or
dec
icebp
out
push
mov
push
ret
sub
popf
popa
fsubrp
imul
negb
add
fidivrs
adc
jg
lds
loop
mov
cmpl
pushf
mov
data16
loop
movsl
pop
mov
mulb
filds
popa
mov
fisubl
cmc
pushf
sbb
and
lods
stos
jno
jp
lret
cmp
mov
mov
mov
cmp
jne
mov
cmp
rolb
adc
ja
pop
sahf
mov
in
ds
adc
or
clc
sahf
pop
push
sti
int3
jb
out
pop
lret
aad
scas
add
push
cmp
xchg
shrl
mov
cmp
jmp
cli
popa
and
loope
dec
jns
pushf
mov
scas
push
test
loopne
lcall
mulps
inc
sbb
es
inc
pop
pop
jle
imul
mov
pop
mov
cwtl
mov
mov
or
inc
adc
shll
pop
jae
and
add
insb
negl
daa
fwait
outsb
pushl
xchg
loope
pop
test
clc
movsb
mov
mov
pop
shll
rolb
mov
aad
into
lds
mov
push
pop
lahf
lods
stos
pop
repnz
pop
ljmp
outsl
fs
ds
nop
inc
pop
ret
xchg
mov
aaa
fchs
sub
fstpt
scas
xchg
mov
testb
push
je
pushf
xor
cmp
mov
ss
add
sub
lds
add
jg
push
lahf
push
and
and
mov
adc
jecxz
fcoms
mov
pop
and
add
mov
jb
movl
sub
cld
fisubrs
xor
mov
popf
xchg
repz
loope
mov
lea
jne
into
xchg
dec
xlat
insb
mov
fucomi
cs
das
mov
cmpsl
push
lret
lock
mov
pop
in
dec
outsl
ficoml
rorb
pop
lods
cmpsb
mov
iret
and
push
imul
pop
popf
sbb
js
push
xor
xlat
xchg
pop
mov
out
clc
aam
pop
push
jmp
imul
mov
insb
sarb
jnp
movsl
leave
mov
mov
das
cld
xor
lods
xchg
jnp
mov
bound
cmp
cwtl
dec
cltd
push
rcrb
out
xchg
jle
sbb
test
mov
cmpsb
mov
mov
cs
lds
popa
add
movsl
ja
adc
mov
push
sarb
std
lock
adc
cs
hlt
cmp
jo
loop
jmp
lahf
pop
sti
clc
test
inc
aas
cmp
jnp
outsl
jmp
les
cwtl
mov
xchg
lods
out
mov
sbb
inc
out
push
add
inc
xchg
jnp
ss
add
jl
xor
insl
ficoml
sub
imul
repz
push
mov
mov
pop
out
cmpsb
ds
sarl
xchg
xor
data16
dec
sbb
insb
iret
jmp
outsb
pop
icebp
push
xlat
inc
dec
jecxz
jmp
and
cmpsl
clc
sbb
xor
xchg
and
call
xor
js
test
movsb
inc
cli
stc
cmp
fisubrs
cmp
into
xchg
cmp
sbb
lds
pushf
sub
lahf
mov
jno
popa
add
xchg
inc
mov
loop
sub
movsb
andb
lcall
mov
cmp
jecxz
inc
shl
je
and
sub
rorb
add
das
lock
mov
ljmp
xchg
pop
lcall
ds
repz
out
sub
sbb
xor
mov
cmp
mov
aad
movsb
and
std
movsb
pop
sub
divb
pusha
xor
shl
pop
insl
or
loop
or
push
and
mov
mov
inc
and
jae
and
in
fwait
xchg
add
xor
sti
idivl
sub
outsl
loopne
das
mov
pop
scas
mov
mov
mov
fnstsw
or
jl
cmpsb
mov
jo
adc
push
pop
pusha
jnp
lcall
add
xchg
pop
pop
pop
cmc
lret
stos
pop
shrb
testl
mov
jmp
test
cwtl
or
aam
imul
repnz
mov
imul
pandn
call
loope
inc
outsb
dec
shll
lock
stos
out
add
push
pop
push
movntps
fidivs
fcmovu
daa
jl
aaa
popf
test
xchg
xchg
or
in
adc
push
inc
or
imul
dec
repnz
icebp
xor
shll
and
adc
push
mov
and
jne
lret
sbb
in
mov
in
insl
cmc
je
dec
icebp
mov
data16
pop
sub
ds
sbb
cmp
dec
adc
mov
jle
dec
adc
dec
sbb
mov
sbb
lea
sub
xchg
xor
pop
mov
jmp
lock
jae
mov
lcall
inc
xor
adc
sbb
or
out
dec
cmp
mov
jno
in
cmp
lcall
dec
mov
push
cli
mov
cmp
cmp
ficomps
movsl
popa
jnp
iret
adc
xor
cmpsb
loopne
out
bound
jg
in
out
clc
pop
dec
xchg
mov
btr
jnp
push
call
push
pop
xor
and
fisttpl
int
and
mov
ret
xlat
daa
test
ret
sbb
sub
repnz
inc
std
mov
mov
add
cmp
movsb
xchg
jbe
popf
adc
sti
mov
or
or
in
ss
xor
push
clc
cld
nop
addr16
inc
jmp
pop
mull
mov
mov
pop
pop
pushf
mov
xchg
adc
leave
mov
xor
xchg
jl
jae
aam
sbb
lods
call
mov
fimull
cmpb
sub
sbb
xor
je
data16
push
add
lret
enter
and
pop
lmsw
push
cli
add
or
loopne
jne
add
fistps
mov
sbb
pop
cmp
ret
aas
xchg
push
aad
xor
push
mov
lods
ja
mov
aad
sub
outsl
add
test
xchg
scas
xchg
jne
cld
or
fcompl
xchg
adc
dec
adc
adc
mov
cld
pushf
bound
dec
xchg
rorb
sub
and
cmpsl
pop
fwait
out
fldcw
fidivrl
lds
fcoms
xchg
pop
je,pt
movsl
or
mov
add
jmp
cwtl
aaa
test
andl
jnp
adc
mov
dec
and
out
sbb
pop
mov
mov
push
sub
add
fidivl
xchg
add
in
lods
shlb
or
pop
mov
lahf
sub
mov
sbb
pop
jmp
hlt
in
pushf
cwtl
jae
jbe
cwtl
les
and
imul
imul
daa
data16
cmp
mov
push
sti
lret
ret
mov
xor
or
loope
sub
push
push
inc
xchg
xor
movsb
jmp
and
lcall
dec
jecxz
sti
xor
data16
ds
dec
aas
mov
cltd
hlt
jbe
xor
fs
scas
lea
in
jae
lea
movsb
sbb
inc
addr16
aad
ficoml
fwait
adc
js
and
sub
mov
xchg
in
or
and
iret
mov
fs
inc
int3
jle
mov
dec
mov
sbb
icebp
pop
loop
mov
push
int3
xor
inc
or
cmp
inc
jae
mov
ss
es
jge
and
pop
stc
aaa
mov
pop
xchg
ds
mov
addr16
cmp
adc
lret
mov
xchg
push
adc
xchg
push
mov
cmp
xor
cli
mov
rcrb
test
enter
fxch
or
test
lret
pop
or
jnp
scas
mov
into
sub
clc
in
jbe
rcrl
mov
loop
mov
add
cmp
lock
std
inc
push
push
xor
xor
loopne
fidivl
adc
mov
and
xor
mov
inc
pop
adc
and
lcall
inc
sub
xlat
or
rorb
mov
icebp
cmc
inc
into
clc
insb
out
nop
popl
aaa
and
daa
pop
clc
mov
movsl
push
jg
jne
clc
ret
sti
fmuls
ljmp
adc
fimuls
in
fcmovu
pushf
jmp
mov
adc
roll
pop
adc
dec
pop
add
movl
ficoms
addr16
scas
and
adc
aam
mov
inc
out
ss
repnz
add
cld
testb
daa
inc
push
fdivp
mov
push
decb
cltd
pop
xchg
mov
dec
orl
ret
enter
data16
fisubs
fidivrl
fistpl
add
and
sbb
dec
fisttpll
repz
sbb
mov
pop
sbb
xchg
or
mov
stc
test
inc
or
mov
mov
sbb
jnp,pt
xlat
aam
xor
fadds
movsb
aam
cmpl
jns
lret
pop
mov
mov
adc
mov
mov
xchg
mov
bound
ret
fisttps
and
cwtl
cmc
gs
ljmp
cld
mov
pop
cmc
or
mov
lods
dec
push
xchg
adc
inc
imul
fwait
repz
mov
inc
in
pushf
jle,pn
in
ret
repz
push
decb
scas
outsb
inc
scas
mov
adc
or
rclb
lods
pop
pop
cs
inc
xor
mov
inc
cltd
push
inc
add
push
inc
jg
mov
sbb
push
xor
xor
mov
repz
mov
call
jle
pop
sbbb
scas
jecxz
mov
stos
push
nop
lret
lock
div
inc
xchg
mov
and
scas
push
loop
loope
or
test
fidivl
xchg
nop
and
test
xor
push
sbb
cmp
lock
xchg
test
in
testb
out
int
xor
loopne
or
rcll
cmp
mov
mov
insb
aad
imul
pop
xlat
lods
jne
int
dec
mov
xchg
sbb
shll
xchg
push
sahf
or
cld
je
mov
mov
xchg
sbb
subb
repz
loopne
and
enter
mov
mov
cld
int
testl
inc
test
sahf
nop
push
ss
lods
cmpsl
mov
jbe
pop
shll
adc
bound
mov
rcll
inc
mov
rcr
jle
jle,pt
inc
cmp
insb
subl
xchg
cmp
int
cmc
add
xchg
call
jge
and
mov
out
mov
fldcw
xor
jnp
jno
icebp
mov
pop
stc
sub
jno
fists
xchg
ja
mov
lcall
cmp
gs
fisttpl
fnsave
and
and
loopne
adc
add
xchg
push
or
sub
lcall
jne
mov
add
cld
ja
jno
fstpl
fimuls
ss
in
xchg
mov
test
fimull
mov
fucomp
xor
add
xchg
outsl
test
fadd
mov
hlt
addb
xchg
or
lcall
push
jne
std
mov
mov
jl
xchg
adc
sbb
outsl
out
add
das
fmull
in
cwtl
push
out
xchg
push
pop
lds
dec
out
pop
inc
xchg
cmp
fildl
out
jns
sarb
push
add
push
popf
movsl
cmpsl
xorl
bound
hlt
int3
shrl
mov
mov
sbb
mov
jl
mov
push
and
adcb
jge
fbld
outsb
and
inc
test
movsl
jge
push
into
push
gs
xor
pop
mov
sahf
int
subb
push
or
aas
das
push
mov
bts
pop
stc
les
xor
vpmovsxwq
dec
loope
and
mov
lods
adc
add
jo
shl
sub
sub
movsl
push
sbb
jp
mov
inc
shlb
sub
cmc
lea
jl
mov
inc
lea
inc
outsb
jae
das
mov
jno
push
cmpsl
dec
fcomps
and
inc
aas
shlb
mov
in
out
sub
insl
push
mov
add
insb
shlb
in
mov
cmp
push
jo
mov
popa
and
cmp
push
push
pop
stc
mov
mov
adc
mov
fisttpl
cmp
mov
jecxz
jle
or
mov
xchg
fwait
dec
aad
popf
jecxz
testb
into
pop
insl
gs
jb
test
mov
jne
mov
pop
jecxz
int3
cmpl
inc
loopne
mov
cli
nop
and
sbb
mov
mov
fs
mov
sbb
mov
cmpsl
cs
stos
mov
push
call
ret
into
and
nop
inc
pop
pop
dec
mov
sti
xor
push
mov
dec
and
mov
outsl
outsb
enter
dec
mov
cmp
lods
push
xchg
into
inc
dec
fsubrp
jl
fistpll
addr16
sbb
lds
inc
jns
jns
xchg
add
sbb
mov
cld
repz
punpcklbw
movsl
xor
mov
aad
aam
sub
push
fisttpl
dec
pop
mov
xor
and
jg
iret
jle
cmc
xor
xor
std
dec
scas
cmp
mulb
sbb
pop
lods
je
out
andb
insb
xchg
imul
lea
push
pop
mov
out
in
sbb
mov
and
mov
adc
mov
lret
and
jecxz
and
outsb
aas
paddq
lods
jl
cmpsl
in
push
dec
lods
pop
push
shrb
xchg
dec
lret
push
shl
cmp
jg
jmp
jecxz
cld
testb
test
jb
adc
pop
lret
les
bextr
pop
xlat
pushf
cmpsl
and
mov
outsl
rolb
stc
mov
fsub
xlat
jge
xchg
dec
loop
jns
je
push
loope
push
mov
imul
je
mov
fcmovne
incl
ss
lahf
outsl
imul
sub
ss
and
lea
into
aas
cmp
addr16
mov
fimull
stos
shlb
pop
push
mov
xchg
rcrb
je
jle
rorl
frstor
xor
adc
lret
fcmovne
add
cli
inc
mov
jp
loope
pop
cli
pop
nop
mov
add
loope
inc
movsl
mov
dec
jne
mov
jle
std
pop
pop
les
adc
jb
fisubl
in
lods
imul
push
cmp
mov
fldcw
test
jle
aas
mov
cmp
daa
lahf
scas
add
cmp
and
mov
and
sbb
ja
cmp
cld
or
int3
outsb
and
mov
pop
cmp
cmc
xchg
or
inc
xlat
repz
xor
mov
xorb
int
imul
xor
push
ljmp
mov
adc
dec
pop
cmc
jo
jmp
pop
mov
xchg
mov
sbb
inc
mov
insl
push
cmc
cs
push
push
pusha
aad
dec
and
jg
mov
xchg
add
fst
jb
ja
push
data16
push
insl
filds
add
mov
lret
pop
or
hlt
fsubl
mov
jecxz
mov
cmp
lods
inc
std
lea
inc
or
or
inc
and
imul
jge
testl
mov
aad
sub
cld
mov
repz
imul
aaa
repz
push
cmpsb
fstpt
jnp
jae
jns
adc
mov
dec
fsubrl
xlat
mul
or
cmpsl
sarb
fxch
pusha
cld
ja
pop
lea
out
xorb
adc
dec
cmp
stos
enter
clc
lcall
fwait
inc
inc
mov
sub
shlb
dec
add
fsubl
jno
jae
mov
out
and
or
mov
mov
dec
pop
push
cs
cmp
int
mov
mov
lea
fdivl
inc
inc
or
lahf
mov
dec
jge
mov
inc
mov
xor
jo
mov
out
cmp
adc
or
gs
mov
or
icebp
stos
sbb
inc
inc
idiv
push
divb
dec
sub
push
ffreep
and
cmp
or
in
lret
ss
daa
cmp
out
std
mov
adc
add
adc
mov
aaa
flds
sbb
sarb
push
adc
outsl
mov
out
stc
dec
cmp
addr16
and
xor
and
jl
xchg
push
adc
and
pop
imul
push
push
std
sahf
into
loope
in
lea
das
push
push
xor
out
pusha
dec
mov
repnz
cmp
jns
mov
stos
sbb
sub
mov
ljmp
sti
sbb
inc
cltd
ja
mov
and
mov
inc
negl
cmpsb
push
int
add
jo
sub
cld
outsb
shll
dec
or
jae
data16
lds
dec
fstl
ror
std
in
xchg
ja
orb
mov
aam
mov
ss
cmpsl
pop
clc
fmuls
popf
jmp
inc
div
lods
lock
push
jbe
xchg
xchg
adc
fs
xchg
mov
imul
cmp
mov
arpl
push
mov
sti
in
xor
pop
call
mull
mov
sub
inc
rolb
stc
mov
jae
mov
jmp
pop
inc
ret
push
or
jno
mov
and
lds
jne
pop
flds
iret
mov
dec
call
fld
mov
aaa
cmp
into
imul
mov
pop
ja
dec
push
push
cltd
xrelease
or
dec
jmp
call
enter
and
daa
xor
aas
test
jmp
aad
adc
addr16
mov
addr16
mov
cmp
imul
sar
sub
inc
insb
and
xchg
ficoml
sub
and
xchg
sarl
arpl
mov
roll
cmc
ds
fbld
bound
loop
mov
imul
add
jp
cld
sbb
inc
outsb
jmp
mov
xlat
popa
pop
or
and
jns
adc
roll
sbb
out
sub
inc
push
loop
mov
out
inc
sub
mov
mov
lods
ja
arpl
sahf
mov
aad
iret
jl
push
das
xchg
cmp
xlat
int
inc
pop
in
fidivs
idivb
lods
jo
cld
out
cmp
test
or
in
lahf
inc
lcall
jle
mov
into
jl
test
rclb
jp
testb
int3
popf
cmp
rcrl
pop
gs
lea
sub
and
pop
cmp
and
adc
xchg
add
pop
loopne
repnz
iret
xor
xchg
xchg
sti
aaa
fsubp
xchg
mov
sub
jge
adc
mov
sub
push
repnz
mov
int3
ret
add
test
insb
fstp
jmp
mov
adc
movsb
jns
pop
mov
push
sarl
push
push
add
fists
xchg
push
clc
xor
pop
scas
jge
scas
jbe
pop
push
mov
fistps
fcom
ja
push
js
adc
xchg
adc
ljmp
push
sub
in
fidivrs
adc
pop
jo
call
das
sub
fxch
insb
add
jne
sub
xchg
dec
dec
or
xor
pop
cmp
dec
dec
push
pop
xchg
adc
jne
aaa
sahf
cld
lahf
rclb
jns
ds
dec
and
popa
movsl
xor
std
pushf
imul
jg
fsubp
xchg
pop
mov
iret
mull
dec
fwait
xor
mov
mov
inc
mov
and
cmp
cmpsl
jmp
aam
into
repz
jb
cmpsl
leave
add
xor
cmc
mov
mov
push
and
stos
cli
cmp
cmp
jbe
dec
xor
mov
and
imul
int
pop
xchg
scas
pushf
xchg
add
pop
xchg
rcrb
into
sbb
das
fstl
outsb
add
push
add
add
pop
stos
mov
add
test
loopne
ds
mov
xor
test
shll
add
cmp
pop
divb
imul
xor
fimull
orps
cmpsb
pcmpeqd
stc
dec
xor
push
add
jle
xchg
enter
or
sbb
lcall
stos
inc
aad
outsl
addb
add
mov
push
or
mov
repnz
lods
jno
je
aas
shll
in
stc
in
incb
loope
mov
xor
ficompl
into
dec
out
inc
iret
andl
xor
inc
cmc
jne
les
mov
in
cmpsb
int3
push
sub
cmp
dec
sub
or
frstor
pop
mov
mov
pop
mov
mov
cmp
cmp
push
out
push
and
ret
pop
call
mov
inc
xor
cmp
mov
insb
sarb
pop
mov
or
cs
stos
push
jb
add
jecxz
xchg
cltd
les
jnp
out
fiaddl
stc
push
push
mov
sti
sti
dec
outsl
out
adc
stos
insl
xlat
in
mov
popa
out
mov
lock
ret
sarb
movsl
xor
je
ljmp
and
add
scas
pushf
cli
popf
iret
or
mov
les
shll
dec
leave
add
xchg
fstps
xchg
std
pop
addr16
cli
shrb
outsl
fstps
jp
inc
xor
inc
mov
movsb
pusha
flds
mov
sub
push
rcrl
add
lret
jecxz
mov
mov
xchg
mov
dec
or
ljmp
cmp
push
fsubp
or
lock
into
dec
mov
inc
adc
mov
stos
test
mov
and
cmpsl
add
scas
pop
daa
repnz
pop
ljmp
sbb
sbb
add
xchg
pop
add
jns
mov
lods
pusha
jecxz
test
pusha
mov
pop
js
jg
loopne
xchg
jns
push
adc
mov
aam
das
jg
fcompl
inc
dec
mov
cmp
enter
inc
cmpb
stos
mov
pop
int
cmp
repnz
xchg
inc
rclb
jecxz
in
adc
mov
sub
inc
test
push
and
ss
or
pop
add
pop
arpl
sub
add
mov
inc
xlat
inc
pop
push
cmp
movsb
pop
mov
in
test
jg
xor
xchg
mov
mov
inc
push
adc
sub
faddl
ret
fsts
call
jb
shrl
push
push
fisttpll
add
adc
mov
mov
inc
lahf
aad
frstor
std
data16
jnp
roll
into
jle
in
arpl
imul
repz
xor
and
shlb
pop
fdivl
out
iret
shrl
loop
sbb
push
jno
mov
jmpw
fstps
jnp
aaa
xchg
popf
jno
jbe
mov
push
loopne
jp
mov
dec
cmp
insb
adc
gs
dec
jnp
aad
xor
into
js
stos
mov
pop
je
pop
fwait
int
mov
dec
ja
push
inc
lahf
mov
mov
push
cwtl
xor
push
outsb
and
push
jmp
xchg
cmp
mov
push
xor
xor
cs
add
stos
movsb
push
cmp
sub
sbb
dec
mov
cld
jae
leave
or
lock
add
mov
pop
add
or
arpl
fisttps
cmp
push
pop
push
stos
das
xchg
dec
push
fstl
int3
ds
cmc
and
mov
gs
cmpsl
push
test
outsb
je
inc
and
push
addr16
jns,pn
repz
cmp
xchg
daa
xor
fcmovbe
xchg
mov
push
shll
sub
push
mov
sti
test
push
cmc
sub
lods
mov
cmc
adc
cmpsl
xchg
fwait
push
addr16
fucomip
jge
fs
sub
push
sbb
test
mov
insl
int
outsl
cmp
dec
outsl
cmpsb
sub
jg
stc
mov
add
pop
and
int3
lcall
test
rcl
fstp
outsl
inc
fimuls
negl
sub
cmp
or
mov
popa
adc
inc
push
pop
dec
rcl
js
popa
mov
sti
inc
fiadds
sbb
aad
fistps
rcll
and
ljmp
mov
int3
movsb
std
push
ss
fcompl
bnd
movsb
ret
mov
pusha
jo
mov
out
into
subl
fcom
mov
xor
add
nop
cmp
lcall
pop
dec
inc
stc
pop
xchg
inc
leave
cmp
inc
lods
xor
insl
dec
inc
lea
push
test
inc
pop
cmc
and
mov
mov
ret
es
stos
and
mov
sbb
mov
repz
nop
adc
jae
or
scas
arpl
cs
fnsave
cli
lret
mov
pop
hlt
ret
sub
jle
rorw
outsb
jmp
add
mov
and
and
jg
divl
gs
mov
cmp
pop
xlat
xchg
mov
mov
xchg
fwait
cmpl
mov
je
shrb
clc
sbb
bound
leave
push
cmpsl
xor
clc
mov
sub
test
cmpsl
sbb
dec
pop
jno
jnp
fldln2
inc
inc
pop
imul
sbb
mov
pmaxub
xchg
in
cmp
jo
mov
pop
xchg
pop
sbb
sbb
push
icebp
fwait
subb
shlb
pop
dec
cmpsb
leave
xor
out
adc
xchg
inc
mov
push
sbb
push
cmp
call
imul
aam
ja
divl
pop
and
loopne
adc
sbb
sbb
inc
sub
shlb
adc
and
sub
js
xchg
repz
push
push
dec
cli
fcom
and
push
imulb
cld
loope
idivb
jb
inc
daa
jbe
lret
xlat
outsl
and
lock
adc
sbb
sbb
inc
pusha
mov
mov
adc
add
or
jge
fwait
mov
into
jbe
xor
mov
dec
in
lahf
jmp
add
sahf
pop
adc
pop
mov
movsb
adc
xchg
xchg
and
lahf
lret
mov
sahf
outsb
xor
sub
mov
mov
add
lret
std
outsl
jmp
dec
icebp
pop
das
mov
adc
subl
and
mov
shlb
orb
add
mov
popa
loop
xchg
std
mov
mov
gs
aad
push
lcall
jo
or
xchg
mov
mov
shl
xchg
push
lahf
sbb
test
cmpsb
dec
les
stc
js
lods
push
jp
int3
xchg
pop
inc
into
xchg
test
mov
jmp
cs
jb
sub
outsb
loopne
sarb
pop
lahf
mov
outsb
mov
fsts
fsub
cmpsl
or
xor
sub
xchg
mul
test
fcmove
adc
aas
sti
dec
out
mov
xchg
iret
loop
inc
loope
fldt
aas
mov
cli
icebp
jb
lods
stos
cs
and
cmp
sbb
mov
inc
push
test
sub
js
out
and
mov
out
and
aaa
ror
sub
orl
jo
nop
or
inc
adc
and
adc
mov
cli
jo
xchg
lea
pop
mov
mov
cld
fdivs
mov
ret
pop
xor
sbb
pop
cltd
mov
jb
dec
jb
popa
cltd
xor
call
dec
out
scas
into
jb
mov
dec
dec
add
cmp
mov
xlat
fs
in
mov
das
xchg
fwait
out
jno
xchg
mov
dec
mov
jle
pop
ret
mov
out
sahf
or
push
filds
cmc
fmuls
daa
xchg
adc
mov
adc
sub
jnp
mov
aaa
rorl
aas
add
mov
dec
movsl
and
sbb
push
dec
or
ds
adc
mov
sbb
dec
add
xor
fdivr
push
xlat
sti
dec
adc
mov
pop
stos
sub
adc
into
xchg
xorl
pop
push
adc
lahf
inc
mov
pushf
xchg
call
mov
fdivrl
xchg
inc
movsl
cmpb
call
pop
xchg
jbe
ret
jae,pn
push
addl
lock
push
int
add
mov
sbb
ficompl
push
pop
divb
out
push
or
lret
lods
mov
pop
rorb
xchg
xchg
fwait
cmpl
stos
fbstp
add
movb
mov
or
mov
inc
rclb
adc
aaa
ret
push
mov
loopne
push
xorl
inc
ret
daa
xchg
cmpsl
cmp
test
je
sbb
inc
fisttpl
fisubs
fidivs
mov
adc
push
out
jns
jmp
ret
sarb
jle
gs
cmc
mov
push
xchg
sbb
jne
and
pop
push
pop
pop
imul
and
xchg
divb
pop
bound
push
sbb
jg
out
pusha
jnp
push
xchg
push
inc
adc
outsb
sub
ss
into
sahf
das
out
std
mov
xchg
js
fwait
push
mov
or
test
xchg
mov
sbb
xchg
and
push
ljmp
movsb
iret
dec
xor
imul
loop
inc
icebp
add
or
lret
mov
rcll
daa
test
xchg
dec
scas
xor
subl
movsl
ljmp
fwait
push
out
ret
decb
mov
push
pop
sub
push
mov
test
and
dec
hlt
jae
pop
pop
cmpsb
mov
mov
shr
cmc
stos
and
adcb
je
jns
jecxz
add
pop
das
xor
mov
xchg
es
and
jge
mov
mov
call
add
mov
adcb
dec
inc
fchs
lea
lods
in
or
and
stc
cmp
jp
cmp
sub
jl
lret
ds
dec
pop
das
and
pop
ret
add
adc
inc
mov
pop
add
dec
mov
imul
jo
mov
outsl
shll
dec
in
adc
mov
xlat
mov
imul
pop
add
gs
aas
dec
dec
scas
sarl
cmpsl
xlat
xchg
enter
sub
cld
and
mov
dec
inc
dec
je
adc
sahf
mov
jae
xchg
mov
pop
ljmp
std
test
fisubrl
lret
xor
fdivr
cmp
sarb
cmc
enter
nop
xor
ss
sub
sbb
add
sbb
fnstcw
repz
mov
cmp
adc
cwtl
push
addr16
test
or
jmp
mov
push
cmp
cmp
outsl
sbb
jmp
jno
call
inc
stc
cmc
push
or
inc
je
lds
sti
xchg
in
movsb
jb
push
movsb
vphsubbw
xchg
cmpsb
popf
cmp
adc
sub
jnp
fldenv
imul
cmpsl
idivb
and
cltd
popa
sub
repz
push
ret
ja
push
sbbb
lret
jecxz
lahf
cli
pop
adc
jb
lock
in
fstl
mov
jle
push
inc
add
sbb
jae
push
lret
mov
cmp
out
push
js
lock
sub
mov
adc
sub
pop
push
arpl
mov
clc
jp
push
dec
inc
bnd
adc
out
jl
ficompl
add
jecxz
rcr
addr16
jo
mov
out
insl
loope
outsl
xchg
in
test
inc
and
xchg
jp
cmp
jmp
out
pop
push
dec
xor
and
bound
aam
cmp
mov
js
je
jns
push
test
sub
aam
cmpsl
sbb
insl
dec
cmp
les
mov
icebp
xor
fcomp
pop
mov
mov
sbb
cmpsb
cmp
sbb
mov
mov
aad
enter
sbb
xlat
lahf
lods
dec
stc
movswl
push
push
pop
push
movb
xchg
mov
ds
xor
insb
xor
push
xlat
push
fdivs
mov
jae
js
in
mov
fidivrl
xchg
pop
push
xchg
sub
fwait
push
lcall
add
xchg
dec
ss
data16
aam
stos
sahf
rcrl
xchg
push
cmpsl
dec
pop
repz
mov
test
pop
dec
scas
stos
mov
inc
mov
inc
int3
inc
xor
cmp
mov
adc
jecxz
cmp
cmc
jge
int
jns
in
and
ds
sarb
xchg
jecxz
popf
and
push
movsl
xchg
loope
mov
es
push
jnp
adc
sbb
aad
or
gs
xlat
sub
sub
jo
xchg
rclb
push
fstpl
lds
ljmp
sub
mov
nop
pop
sbb
cmp
je
and
xchg
insl
ds
ljmp
mov
scas
repz
mov
mov
cwtl
mov
sub
jne
fadds
xchg
enter
inc
jne
insl
or
xor
push
adcl
dec
lret
jb
pop
not
add
and
adc
cmpsl
fs
adc
inc
and
xor
mov
cmc
cld
insl
int3
xor
pop
jmp
stos
mov
popf
fcomps
cmp
and
xchg
je
xor
mov
jae
outsl
loop
mov
mov
pushf
fwait
lods
adc
js
jns
jae
loop
movsb
je
and
scas
and
push
pop
int3
fdivr
push
fcompl
push
jmp
outsl
sub
leave
xlat
gs
push
arpl
loop
sub
nop
fwait
inc
out
pop
rcrb
imul
out
loope
cmp
arpl
jecxz
xor
in
popa
inc
jmp
mov
lods
push
inc
les
mov
mov
into
push
xor
into
xor
insb
subl
and
mov
pop
addr16
fldcw
scas
cli
mov
loopne
sbb
xor
cmp
mov
popa
inc
xchg
int3
sbb
stc
popf
adc
imul
mov
lds
jecxz
xor
adc
dec
rcll
sbb
jae
iret
test
jae
imul
out
pop
push
inc
lret
aaa
imul
cltd
jmp
mov
loope
stos
sti
and
cmc
cmc
xchg
push
cli
push
negb
int
mov
adc
pop
test
sbb
inc
in
int
stos
pop
dec
dec
and
orb
sahf
imul
lret
divb
mov
or
mov
icebp
cmp
movsb
lods
dec
and
loop
dec
cmp
addr16
aam
cltd
out
addr16
lods
sbb
cmpsl
jnp
ljmp
bound
sbb
out
add
mov
test
and
mov
sub
or
aam
in
ljmp
mov
dec
push
sti
add
je
arpl
sub
inc
imul
mov
scas
adc
repz
fs
inc
insb
and
fisubs
jp
adc
mov
fistpl
std
enter
dec
or
into
xchg
and
testl
push
mov
add
adc
in
xchg
xchg
and
xchg
cmp
rolb
aaa
pop
das
aas
out
mov
jle
das
ret
testl
stc
mov
xor
scas
subb
pop
imul
or
sub
push
fldcw
mov
mov
out
mov
xchg
inc
scas
pop
ljmp
imul
loop
insl
lret
jno
push
ds
fdivrs
push
cmp
dec
bound
jl
sbb
jae
cmc
push
jecxz
mov
out
int3
or
inc
xchg
sar
ds
repnz
or
iret
sbb
or
mov
xchg
dec
and
scas
in
push
pushf
lahf
dec
flds
repnz
shrb
push
mov
adc
xchg
decb
xchg
pop
inc
addb
xor
push
call
test
sbb
lods
test
jecxz
xchg
jae
lahf
mov
int
fisubl
push
sub
pop
sub
sub
inc
mov
imul
push
jge
sbb
dec
shll
adc
addr16
dec
add
cmp
xchg
sti
data16
push
insb
jae
je
xor
cli
movsl
or
mov
mov
ja
sti
xchg
cmp
sbb
mov
lods
jp
das
cltd
ss
fsubrs
jmp
out
shl
xor
push
jmp
jb
dec
arpl
push
rcrl
xor
mov
jne
rorb
shll
inc
ja
repz
aad
jl,pt
repz
lock
out
imul
fdivr
sbb
repnz
mov
stos
xchg
stc
shrl
inc
cli
xchg
scas
xchg
jecxz
push
sbb
imul
sub
mov
cmpl
xlat
cmp
inc
orl
add
xorl
js
or
imul
dec
lret
idivl
mov
adc
and
push
adc
and
fdivl
adc
int
adc
repz
aas
sub
nop
pop
mov
jmp
push
xor
mov
jmp
std
xor
gs
insb
insl
mov
dec
fadd
outsb
mov
mov
inc
outsb
icebp
mov
push
inc
das
jne
xlat
clc
push
dec
and
shl
jo
mov
lods
mov
idivl
shrb
inc
and
jmp
loop
fcoml
jae
mov
pop
xchg
hlt
int
sbb
mov
sbbb
ja
fdivrs
dec
cmc
push
adc
push
imul
mov
mov
sub
repnz
dec
out
dec
aaa
sbbl
push
xchg
and
leave
in
sub
imul
jbe
inc
push
bound
inc
lods
dec
mov
cltd
xchg
and
push
push
or
inc
mov
cs
add
jmp
es
shll
dec
gs
ret
popf
in
inc
push
mov
in
add
jne
test
dec
xchg
xchg
out
lods
jg
adc
and
cmpsl
mov
movsl
in
sub
daa
sti
adc
cld
pop
inc
faddl
pop
push
out
je
rcr
cltd
call
cmp
fnstcw
movsb
pop
sti
adc
outsb
gs
aad
and
mov
mov
int3
ljmp
pop
mov
and
lret
xorb
loop
adc
sahf
loopne
mov
mov
jb
dec
sarb
aas
fdivl
js
pop
cmp
lcall
out
mov
ret
dec
lods
add
jl
icebp
inc
popf
inc
arpl
repz
inc
fcomip
jo
lret
cmpsl
lea
insb
xor
and
test
cmp
fmull
xor
cmpsb
mov
mov
sbb
cmp
leave
mov
adc
mov
fldt
ljmp
jae
push
jo
adc
xchg
pop
jp
imul
sbb
add
jnp
mov
mov
push
push
and
mov
and
pand
shrl
xor
mov
dec
mov
adc
fmul
mov
mov
pop
pop
pop
jecxz
xor
cmp
xor
cli
xor
outsb
mov
sub
lahf
and
lret
and
xchg
push
in
xchg
push
jl
pop
and
jno
in
xor
xor
pop
dec
cs
push
xchg
mov
xor
pop
test
addr16
dec
imul
add
mov
hlt
add
dec
or
xchg
mov
add
pop
mov
std
daa
ds
stos
sbb
sub
inc
hlt
inc
mov
jp
and
xchg
cmp
mov
or
sbb
xchg
push
dec
cli
mov
movsl
ffreep
mov
jmp
jl
into
shl
into
and
rcr
sti
add
fisubrl
lds
repz
cmc
jge
or
mov
aaa
out
mov
lods
icebp
sar
mov
out
push
cmc
imul
dec
or
mov
push
stos
lahf
sarl
or
lods
xor
mov
shl
pop
or
cmp
or
aad
js
repnz
mov
pop
and
jmp
popf
or
int3
and
pop
aas
popa
testb
ja
shll
jp
cwtl
inc
mov
add
xchg
out
inc
cmp
push
scas
fs
or
push
addb
mov
stc
mov
sub
sbb
inc
pop
jmp
xor
andb
xor
clc
pop
aas
add
lahf
sub
movsl
cmp
scas
fcmovnu
sarb
fnsave
jl
xor
inc
push
add
xchg
jo
sbb
xor
scas
jge
xor
mov
pushf
arpl
movsb
popa
mov
lcall
fmull
stos
push
sub
jo
mov
enter
xor
fwait
xchg
mov
jno
sub
sbb
jl
add
mov
jae
fs
filds
enter
int
sahf
loopne
dec
shlb
iret
jmp
add
cmp
mov
shr
int3
fdivs
jns
in
fisubrs
cmp
test
cli
aaa
sub
lds
rcll
mov
out
mov
shrb
sbb
and
pusha
cli
xchg
out
in
iret
push
push
xchg
xchg
lcall
lcall
popa
in
cltd
stos
xchg
fwait
loope
push
xchg
leave
int3
aam
fld
data16
dec
add
hlt
and
shrb
mov
or
ud0
jecxz
add
push
cmpsb
cmp
dec
aas
inc
sub
xorl
ss
fnsave
sbbl
add
xchg
lret
aas
leave
adcl
inc
sbb
push
push
or
sbb
js
in
aas
insl
sbb
jo
inc
hlt
in
adc
jmp
mov
jo
mov
jb
jmp
adc
jb
sbb
inc
or
sub
dec
add
lods
icebp
lret
adc
or
repnz
pop
fiaddl
rcll
stc
sahf
jo
scas
dec
clc
inc
and
fbstp
mov
test
into
es
insl
test
inc
shlb
jg
or
lret
mov
add
lods
mov
insb
and
xchg
test
lock
push
push
inc
xor
in
xor
jb
or
mov
add
or
mov
cmp
add
sbb
scas
jo
daa
mov
lea
scas
cmp
dec
data16
push
testb
inc
outsb
dec
adc
jle
jb
imul
jns
pop
mov
adc
nop
jbe
pop
push
add
adc
in
sub
jmp
pusha
push
mov
adc
rcr
add
jmp
jae
or
nop
and
lock
push
testl
add
jg
repnz
jecxz
adcl
cmpsb
arpl
lods
in
ss
pop
inc
inc
insl
sbb
dec
pop
xor
xor
in
movsb
cld
add
loopne
mov
add
pop
jbe
and
sub
in
popa
jo
cltd
pushf
pushf
jp
cmp
pop
pop
insl
outsb
mov
dec
negl
hlt
icebp
cs
jno
sar
stos
loope
push
jo
and
inc
mov
jnp
cmpsl
dec
or
jge
in
ja
sub
mov
dec
xchg
cmpsb
xor
lcall
mov
xchg
gs
pop
pop
sarb
push
sub
adc
jne
mov
pop
and
enter
push
jle
dec
and
adc
pop
repz
test
and
outsb
fs
or
inc
mov
jecxz
xchg
jae
xchg
inc
mov
and
ds
cli
repnz
sub
mov
nop
cmp
jmp
dec
jb
push
push
cltd
cmp
ljmp
or
scas
adcb
out
int
cmp
loope
loop
xchg
add
rcrw
scas
cmc
cwtl
push
mov
jl
and
into
and
mov
cltd
inc
adc
in
pop
dec
enter
je
sub
leave
repz
lock
pop
mov
and
cmp
cmp
testb
fiadds
les
cld
mov
inc
mov
dec
sub
lret
fimuls
sub
fsincos
je
clc
mov
jp
inc
mov
test
fimuls
dec
ret
nop
out
add
cltd
neg
add
and
ret
add
mov
xchg
jge
xchg
leave
fsubrl
lea
xorb
imul
out
adc
mov
rcll
leave
data16
fisubs
popf
mov
sbb
fnstsw
push
aas
loope
arpl
jg
dec
add
movsl
dec
jmp
aad
ja
adc
stc
and
notl
pop
cmp
push
test
gs
adc
xchg
cli
sbb
cltd
lea
loop
jne
and
out
cld
mov
iret
sub
cmp
pop
xchg
sbbl
shll
sbb
ret
in
xor
rol
mov
cld
out
into
movsl
ret
push
adc
pop
push
push
jle
outsl
jno
sbb
out
xchg
push
cmpsb
je
out
sub
repnz
cmp
out
scas
mov
adc
add
js
mov
pop
movsb
and
pop
cmp
movsb
fistpll
ja
sub
outsl
mov
cltd
sub
push
fwait
addr16
cmp
xchg
icebp
lock
inc
inc
push
xor
idivb
pop
adc
lock
js
cmp
cltd
sbb
jle
outsl
ret
rolb
lea
pushf
icebp
push
jo
clc
mov
jp
mov
testb
out
mov
into
scas
mov
inc
enter
stc
sub
xor
xor
lret
jno
mov
dec
xchg
daa
movsl
fidivl
call
stos
js
aam
test
jg
add
xchg
loopne
xchg
scas
in
lcall
movsb
jbe
jns
mov
push
adc
ja
lods
test
dec
movsb
mov
enter
and
xor
orb
ja
push
lahf
and
je
sbb
xor
inc
xor
lcall
add
mov
add
jo
mov
fnsetpm(287
sbb
push
addb
dec
outsb
aad
rcll
jb
jns
xchg
mov
hlt
in
shlb
push
sbb
push
enter
es
pop
push
mov
adc
insb
cmp
push
jnp
dec
les
and
call
insl
push
js
push
mov
iret
sub
out
adc
sahf
pop
sbb
movsl
dec
jp
test
push
add
jecxz
cltd
test
rclb
test
sub
insl
mov
sub
test
push
mov
xchg
dec
jae
cmp
test
cmp
mov
adc
ds
cmc
ret
push
and
dec
pusha
mov
ret
out
daa
mov
jns
xchg
cmp
mov
mov
xchg
cmpb
xlat
leave
mov
cmpl
jo
sti
mov
and
nop
jge
test
repnz
push
add
lcall
sbb
mov
out
push
or
sub
mov
rorl
aaa
add
mov
add
mov
mov
addr16
cmpsb
outsb
xlat
mov
je
xor
pop
jne
push
mov
in
idiv
sbb
out
mov
test
movsl
dec
pop
cwtl
sbb
mov
and
mov
cmp
divps
or
and
ss
outsl
cmp
bound
pop
push
mov
add
leave
popa
pop
lock
or
out
xor
addr16
fcomip
clc
clc
adc
add
aas
pop
jge
scas
mov
mov
cmp
sub
xor
xchg
nop
stc
cmp
fwait
add
xor
pop
cltd
fscale
mov
cmp
ret
push
jnp
sbb
pusha
xchg
dec
lock
pusha
dec
outsl
cmp
mov
mov
xlat
xchg
adc
inc
push
or
push
pop
xor
jne
dec
mov
enter
out
js
clc
rorl
cmp
mov
or
pop
ret
ret
sub
jle
mov
pop
sbb
movsl
mov
cmp
nop
mov
push
roll
out
adc
adc
push
mov
ja
in
pushf
mov
push
inc
lods
mov
stos
mov
rol
push
and
or
add
push
insb
xchg
xchg
push
dec
mov
mov
cmp
jne
ficompl
jecxz
cmp
jge
sub
imul
xchg
mov
xchg
xchg
loop
push
dec
cs
insb
jp
divl
rcrl
imul
lret
cmp
in
fs
mov
mov
mov
xor
aam
ljmp
jle
test
rcl
rcl
cmp
xchg
scas
push
nop
sbb
xchg
sbb
add
push
xorb
movsb
iret
push
and
push
mov
pop
insl
repz
inc
std
cmpl
out
mov
sbb
les
ljmp
bound
inc
jnp
push
mov
push
testl
clc
mov
sub
sbb
ljmp
mov
mov
dec
aaa
jb
xchg
testl
lods
mov
pop
jl
mov
xor
add
ds
push
mov
jecxz
mov
fimuls
push
add
mov
arpl
lods
push
mov
hlt
cltd
pop
push
lods
push
pop
movsl
clc
in
jmp
fs
daa
aad
fwait
rolb
pop
popf
xor
and
in
fidivl
cs
out
or
std
mov
cmp
insb
xchg
mov
push
fwait
dec
fmull
mov
add
push
lcall
popl
push
aas
ret
ss
xchg
sbb
adc
movsl
cmp
jp
pop
mov
and
or
xchg
jbe
or
loopne
loopne
popa
fmull
cmpsl
addl
arpl
mov
mov
push
scas
inc
into
xor
jo
push
leave
add
stos
push
mov
in
orb
inc
mov
insl
push
jge
scas
jl
xchg
test
mov
outsb
ret
into
jb
jne
mov
daa
jns
inc
outsl
sbb
mov
in
sub
jne
cmp
inc
pop
inc
dec
xchg
and
mov
mov
out
fcomps
imul
lret
jp
xor
mov
shlb
mov
and
jp
dec
movsl
in
push
pop
aaa
or
inc
add
inc
jmp
sub
popl
pushf
xor
mov
test
adc
sub
stos
pushf
cmp
stc
mov
dec
call
daa
adc
add
cmp
pop
mov
mov
in
jp
xor
inc
xchg
test
dec
in
mov
sbb
push
data16
out
cmp
cmc
mov
mov
lock
pop
popa
pushf
cmp
dec
mov
mov
jns
cmp
and
inc
cmc
lahf
push
adc
mov
imul
and
sub
push
push
add
dec
daa
test
roll
fwait
inc
adc
sbb
inc
mov
mov
jae
repnz
mov
mov
repnz
addl
pop
fisttpll
adc
add
sub
dec
je
sbb
in
dec
dec
mov
inc
push
pop
in
or
jo
push
jno
into
push
or
adc
lret
xchg
in
cmc
cmpsl
inc
add
test
cmp
cmp
jp
add
jns
insb
and
and
test
stos
enter
and
loop
fwait
pop
jae
cmp
out
out
clc
loope
js
sub
xor
mov
inc
clc
repnz
mov
and
pop
aaa
adc
mov
jne
mov
mov
ret
mov
fxch
inc
dec
sahf
inc
and
addr16
push
mov
jg
inc
or
jbe
or
sbb
mov
repnz
mov
in
pop
fiadds
mov
jb,pt
sub
sahf
test
push
out
dec
mov
movsl
push
nop
pusha
insl
es
shrl
dec
push
aam
push
es
jo
aad
sbb
or
xchg
xor
mov
xchg
jae
aam
add
das
inc
insl
lds
lret
sub
ret
sub
sarl
xchg
repz
test
pop
xchg
inc
sub
pop
cmp
