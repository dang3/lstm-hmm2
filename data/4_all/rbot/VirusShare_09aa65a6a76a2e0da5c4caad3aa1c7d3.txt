push
sbb
in
cmpl
pop
call
push
push
push
xor
call
cmp
pop
pop
mov
call
pop
mov
push
add
fmuls
cld
adc
adc
fimull
adc
mov
add
int3
les
jle
clc
jp
divps
xor
xor
aas
xchg
shr
push
call
int3
adc
push
or
das
mov
stos
mov
push
ret
lret
push
pop
das
mov
test
add
daa
mov
pushl
lds
adc
adc
pop
ret
xorb
adc
fs
add
sub
sbb
add
push
test
add
cmp
je
sarb
inc
cmp
and
mov
cwtl
push
psrlw
test
mov
push
push
push
test
sbb
push
mov
mov
xor
je
add
mov
and
and
adc
sub
data16
push
add
jne
lea
push
push
or
mov
roll
sbb
popf
adc
lahf
inc
andb
std
dec
or
push
adc
and
xor
mov
lds
jge
inc
mov
test
add
jecxz
ret
mov
icebp
ss
jmp
inc
add
cmpsb
pusha
dec
enter
adc
push
movl
and
daa
pop
push
mov
es
fsubs
das
or
inc
daa
les
sub
xor
mov
nop
jmp
je
jmp
and
inc
sub
in
daa
sub
inc
andb
inc
fsubs
and
daa
les
and
and
xor
icebp
push
sbb
jo
sub
push
out
sub
es
clc
clc
push
mov
and
inc
add
mov
pop
and
or
stos
es
adc
pop
daa
rcrl
out
into
ljmp
adc
xor
dec
mov
add
add
shr
mov
loopne
or
mov
and
inc
lcall
sbb
jbe
or
sbb
or
cld
or
mov
scas
jo
or
sub
nop
clc
sahf
mov
or
add
int
sub
insl
loop
add
test
fldl
push
mov
xor
div
pop
sbbl
in
mov
data16
xchg
in
call
scas
icebp
stc
adc
dec
mov
jp
nop
push
imul
sbb
int
rorb
addb
jns
push
mov
push
imul
fdivrs
sti
cmp
lahf
xchg
pop
pop
and
mov
xchg
jl
cmp
pop
xchg
sbb
movsl
nop
fwait
or
dec
mov
sbb
decb
mov
imul
add
xlat
cmpl
xor
push
repnz
jmp
and
adc
lods
std
ja
and
inc
mov
push
sub
sub
jns
adc
push
add
jo
mov
pop
or
inc
mov
ficomps
into
and
pop
jne
sahf
lret
sbb
ss
pop
dec
inc
jl
addr16
sbb
mov
call
mov
adc
pop
jo
add
add
mov
jbe
mov
jae
push
xorb
cmp
adc
sbb
mov
enter
pop
pop
adc
adc
lds
sub
mov
adc
andps
pop
jl
les
push
pusha
pop
mov
cmp
dec
add
pop
jg
test
mov
mov
mov
fsts
mov
or
inc
push
xchg
mov
inc
mov
in
push
xchg
add
dec
sub
add
sub
shlw
xchg
push
dec
cwtl
fldl
adc
jmp
jp
and
adc
push
sub
cmp
pop
fs
popl
pusha
and
push
inc
lcall
jl
test
add
add
enter
adc
mov
cli
cli
sti
aam
hlt
es
adc
andb
and
lods
jg
int3
cmp
pop
xor
out
adcl
fwait
gs
and
or
adc
push
dec
dec
dec
insl
repz
into
shll
nop
push
push
cli
sub
movsl
sbb
xchg
incl
inc
pop
ljmp
jmp
mov
je
imul
out
ret
in
xchg
inc
and
jmp
pop
js
pop
stos
cmp
pop
scas
dec
rolb
jp
arpl
or
ficompl
push
pop
cwtl
pop
push
fwait
pop
orb
inc
and
lret
or
or
mov
ret
push
mov
push
push
icebp
daa
mov
test
pop
je
cld
ret
scas
and
pop
and
push
mov
sbb
pop
mov
sbb
or
sti
mov
jg
fldcw
fwait
push
lea
xchg
inc
xor
testb
fcoms
push
rorl
adc
ret
add
pop
or
dec
xor
add
adc
hlt
push
cwtl
mov
lock
add
add
xchg
inc
les
jl
xor
and
setge
pop
sbb
ja
push
push
rorb
sub
int3
sti
add
jne
mov
pop
cmp
adc
rcrl
or
add
add
jbe
dec
ss
add
ljmp
sub
cmp
fwait
inc
popl
inc
mov
sub
cmp
and
pusha
and
or
mov
cld
inc
push
xchg
repnz
push
test
push
cld
adcb
add
mov
inc
or
test
out
shlb
add
inc
dec
jmp
cmpsb
mov
mov
push
into
or
mov
bound
leave
dec
sahf
push
and
push
aad
mov
and
or
pop
gs
add
adc
push
lret
push
dec
test
sub
in
sub
imul
mov
fs
movsb
imul
push
pop
push
dec
adc
sarb
dec
div
pop
adc
rorb
sub
out
inc
sbb
icebp
xchg
add
jecxz
add
mov
or
int3
daa
enter
add
push
rolb
inc
in
sub
in
dec
add
inc
or
or
inc
cmpsb
mov
push
inc
dec
push
sbb
dec
ss
push
adc
xchg
adc
mov
sub
lret
cmp
pop
enter
adc
inc
inc
or
mov
push
fisttpll
or
ss
insl
mov
or
inc
inc
inc
mov
nop
lock
and
mov
pop
xchg
and
pop
adc
adc
adc
insl
hlt
mov
cltd
int3
push
enter
xor
pop
pushf
mov
stos
or
mov
jg
loopne
and
push
fmuls
enter
mov
or
or
sbb
es
xchg
int3
adc
std
inc
or
push
push
hlt
fs
or
es
in
adc
test
lock
mov
adc
push
xchg
sti
subb
test
mov
inc
pop
mov
inc
or
push
or
out
test
cmp
inc
sarb
sub
jno
and
or
pop
jmp
orl
pop
icebp
dec
add
ja
fadds
leave
imul
test
xchg
push
and
jge
repnz
cmp
inc
mov
adcl
inc
std
inc
sub
leave
data16
or
adc
imul
shrb
sub
sub
pusha
shrl
cltd
pop
cwtl
pop
xchg
lcall
cmp
jne
push
and
nop
and
cli
ficoml
cmp
clc
neg
sbb
mov
outsl
imul
loope
cld
sub
jne
pop
and
adc
dec
push
ja
subl
adc
fstpl
xor
and
adc
xor
lea
fs
and
xor
push
add
push
mov
icebp
test
sahf
push
jne
push
xor
jmp
into
jo
pop
add
lret
cld
les
and
and
push
lods
sub
je
push
insb
adc
mov
push
int3
mov
dec
ret
jae
adcl
std
das
in
mov
mov
movhps
push
das
and
inc
outsl
xor
loopne
xorb
mov
and
cmp
add
loopne
nop
cwtl
mov
jge
adc
add
or
rorl
fstl
push
enter
sti
sub
mov
pop
cmp
stos
test
jno
and
jl
inc
add
das
jge
jmp
loopne
cmp
clc
push
ja
pavgb
add
cmp
jbe
repnz
addb
jns
push
mov
jb
inc
lock
add
leave
cmp
lret
andl
jb
mov
dec
or
adc
add
cmp
pop
sub
pushf
bound
adc
sarl
movl
cmp
push
xchg
enter
adc
clc
jb
add
fiadds
sub
cmp
std
add
push
cmpl
jbe
push
mov
sar
dec
inc
adc
pop
test
or
movl
push
push
mov
mov
hlt
push
and
pop
push
xchg
sub
adc
adc
je
rorb
pop
fimuls
femms
or
rclb
jbe
add
shlb
push
jp
div
cld
dec
add
mov
shrl
out
pusha
cmp
jae
push
push
pop
sub
inc
enter
xor
mov
andb
mov
jmp
daa
ret
inc
mov
add
and
pop
push
mov
ret
out
sbb
mov
fistpl
in
jg
inc
leave
fiadds
pusha
lea
xchg
adc
mov
mov
mov
xor
lea
lcall
fs
or
push
shll
xor
push
pop
loope
fs
xchg
int3
push
pop
cltd
adc
fcoms
icebp
jbe
pop
outsb
and
pop
jae
call
adc
cwtl
adcl
lret
adc
je
sbb
jae
xchg
cmp
clc
fiadds
jo
add
or
imul
aad
popa
ficompl
mov
ror
leave
sbb
jnp
icebp
and
mov
adc
hlt
enter
lods
adc
xor
addl
enter
out
sbb
adc
loop
inc
adc
jnp
or
pop
test
xor
sbb
push
push
pop
loopne
and
ret
stos
push
push
cltd
pop
push
jp
pop
mov
xchg
inc
in
popl
js
ja
clc
test
jmp
jae
sub
dec
movsb
sub
inc
or
sub
adc
ja
dec
cmp
xor
push
mov
xor
stos
inc
and
jl
xor
push
mov
mov
orb
das
or
mov
aad
xor
sbb
jb
cmp
jmp
mov
sub
cmp
mov
out
lret
arpl
push
loop
fs
sub
or
push
jmp
and
adcl
ja
push
ror
popf
lea
push
test
into
or
lret
xchg
sbb
std
frstor
mulb
clc
push
add
addr16
or
loop
adc
leave
mov
add
movsb
sbb
mov
stos
es
lahf
push
mov
sbb
or
sub
sub
inc
pop
rorb
inc
loopne
movsb
ret
mov
cld
xchg
sbb
jnp
adc
cmp
sub
and
das
aad
xchg
and
mov
add
jmp
xchg
add
mov
add
add
fildl
pop
mov
ja
cmp
xchg
nop
and
shlb
xchg
testb
mov
sbb
mov
jmp
lock
and
add
popf
mov
out
out
add
add
or
sub
mov
loope
fs
and
push
packuswb
add
inc
icebp
enter
repnz
inc
add
addl
lods
jne
sub
xor
out
jbe
sub
inc
rorl
xor
pusha
push
or
faddp
pop
inc
cmp
sub
mov
sahf
and
or
sahf
repnz
cmp
or
cmp
movsb
icebp
adc
and
lea
mov
and
js
and
leave
ret
jg
xchg
jl
sbb
loope
xchg
push
and
fdivs
push
shlb
je
ss
push
sbb
xchg
mov
push
inc
test
faddl
sbb
inc
sbb
push
lods
mov
aaa
in
arpl
pushf
out
push
cmp
mov
push
out
mov
lods
and
adc
movsb
orb
xchg
xchg
pop
inc
bound
je
clc
cmpl
loopne
fiaddl
lea
jb
xor
pop
stos
lea
ret
mov
xlat
mov
insb
test
out
adc
add
cltd
test
outsl
cld
gs
add
push
xchg
out
xor
inc
fs
test
in
adc
iret
sbb
test
push
dec
pop
push
xchg
mov
sarl
push
test
fsubrl
push
push
call
mov
fadds
lods
das
out
test
rcrb
and
sbb
pop
dec
or
ljmp
push
daa
cmpsl
xor
mov
and
add
int3
mov
nop
mov
or
clc
jb
and
push
or
jmp
subl
push
movsl
sbb
sbb
adc
cmp
popf
dec
mov
xchg
mov
add
call
mov
mov
bound
jl
stos
cmp
mov
clc
es
lea
jno
imul
add
push
lods
and
and
inc
lock
jmp
push
and
pop
les
cmp
repnz
push
lret
je
inc
or
lock
into
sbb
push
push
test
dec
push
mov
mov
cmp
mov
test
inc
push
dec
push
mov
cltd
push
and
dec
push
daa
mov
xchg
adc
push
ja
inc
adc
outsb
sti
mov
clc
arpl
hlt
add
push
add
and
push
xor
mov
mov
lock
and
mov
and
in
into
outsb
xor
stos
aas
fs
dec
sbb
cwtl
das
fnstenv
mov
sbb
and
push
lods
dec
imul
and
adc
or
adc
xchg
xchg
fwait
sub
push
sbb
mov
pop
xor
jecxz
lock
xchg
call
sbb
adc
rorl
mov
mov
adc
push
pop
les
pop
xlat
loop
xchg
sbb
sbb
jmp
push
xchg
dec
sub
mov
lea
jmp
cmp
in
jae
loope
pusha
out
pop
pop
push
insb
inc
mov
jg
mov
sub
dec
or
jno
sub
sub
add
mov
les
push
into
es
bound
xchg
inc
or
out
and
out
push
sub
inc
cmp
pop
andb
icebp
inc
in
bound
icebp
aam
inc
repnz
fmuls
les
hlt
push
cwtl
cmc
test
inc
div
into
test
into
or
jl
cmc
inc
fistpl
js
xor
faddp
jb
cli
push
lea
fs
retw
hlt
icebp
imul
pop
pop
and
push
xor
xchg
sbbl
je
push
movl
aaa
mov
pop
fs
push
pop
inc
add
push
xor
dec
enter
mov
push
fmuls
xchg
in
jmp
pop
sub
aam
or
pushl
or
or
sub
push
sbb
fcomp
or
push
push
lock
adcb
sub
inc
or
add
test
push
scas
sbb
jg
pavgb
xchg
dec
jno
fbstp
jmp
mov
sub
jmp
mov
pop
jae
or
inc
mov
inc
fidivs
rolb
and
add
pop
pop
les
leave
push
fldcw
push
mov
adc
rcrl
lea
fists
xor
mov
adc
stos
mov
in
xor
stos
adc
and
sub
mov
push
mov
andb
adc
lea
mov
cmp
jge
rorl
mov
xor
inc
cli
and
adc
mov
inc
repnz
mov
sub
sub
push
xchg
test
ret
adc
test
aas
dec
push
roll
mov
stc
push
gs
push
adc
or
aad
xchg
ficoml
out
push
jp
sub
or
cmp
or
inc
add
cwtl
sbb
movsb
jno
je
add
and
pop
hlt
xor
or
call
in
and
dec
mov
mov
add
jge
aas
call
inc
mov
out
rcrb
movsb
mov
fisttpl
inc
mov
or
int3
push
inc
es
dec
es
xor
push
lock
lret
jmp
pop
in
xchg
fadds
pop
pop
mov
loope
xor
inc
je
adc
sbb
stos
jp
loop
sub
stc
pop
dec
repnz
inc
mov
leave
cmp
add
mov
xor
inc
popf
mov
cmp
adc
test
fidivrl
pusha
std
dec
movsl
shrb
inc
mov
adc
in
inc
xor
pusha
add
aam
subps
cmp
add
pushw
push
inc
push
jns
mov
dec
inc
pusha
sub
adc
push
sti
add
mov
inc
mov
xchg
and
dec
fs
jle
add
sti
or
in
inc
lahf
sub
mov
pop
dec
mov
pop
cltd
pop
adc
roll
pop
cmp
jl
dec
sbb
xor
fs
clc
and
jl
test
test
testb
push
push
ja
lret
xlat
dec
les
test
les
jl
add
ds
stc
push
push
cmpsl
mov
jl
scas
lock
cmp
xor
or
inc
fistl
stos
xor
add
sti
add
push
add
push
inc
adc
xchg
incl
test
inc
cmpsl
je
mov
lods
and
xor
xorl
xor
xchg
push
dec
cmp
mov
in
imull
adc
test
sbb
and
leave
and
lcall
push
dec
lret
lds
and
xchg
fucomp
dec
mov
mov
add
lcall
jo
loope
push
add
enter
jge
and
call
pop
dec
mov
cmpsl
dec
mov
mov
dec
add
push
push
xchg
cli
ss
add
mov
inc
mov
cmp
and
mov
xchg
and
sarb
sar
push
pop
dec
xor
or
pop
or
int
aaa
repz
mov
inc
sub
mov
jp
out
adc
data16
cmp
xchg
adc
jne
mov
xchg
cmp
sub
push
push
or
adc
cmp
mov
xchg
pop
pop
sub
bnd
movsb
rcr
leave
mov
xchg
dec
inc
xor
push
outsl
adc
test
stos
sub
lea
jne
inc
jns
or
inc
int3
lock
xor
and
add
or
push
push
and
cltd
pop
idiv
test
jne
add
push
sub
jmp
rorl
rorl
inc
dec
in
aam
cmp
jae
push
outsl
adc
pop
pop
int
add
call
fsubrl
repz
and
sbb
push
and
ret
test
jl
je
insb
sbb
test
and
lock
mov
rcr
cli
lock
mov
dec
enter
sbb
xchg
push
subl
clc
or
inc
or
out
inc
push
sbb
cs
jno
mov
cmpsb
push
cltd
ss
insb
ljmp
mov
mov
clc
and
inc
xchg
jp
cld
or
mov
pushf
insb
in
push
cwtl
mov
push
push
dec
sub
or
addb
push
pop
jl
push
xor
or
int
lods
xor
daa
and
inc
clc
cmpsl
movsb
ljmp
jg
mov
in
dec
in
rorb
push
sbb
pusha
out
repnz
sbb
addb
jo
inc
sti
repnz
jbe
pop
mov
inc
sub
mov
mov
adc
cmp
and
dec
mov
and
jmp
xor
lea
mov
lahf
je
mov
cwtl
stos
addb
adc
in
push
rcr
xor
xchg
stc
pop
mov
inc
imul
es
sub
ss
cmp
clc
notl
je
push
mov
xchg
in
mov
out
mov
cmp
pop
cwtl
negb
pop
xor
fisubs
scas
bound
arpl
adc
push
sub
push
clc
mov
adc
fisttpl
dec
push
xchg
jle
pop
push
jle
test
sbb
push
inc
mov
adc
mov
sub
mov
movsb
std
and
sti
xor
out
xor
add
ficoml
adc
adcb
not
xor
jle
mov
ja
ja
imul
int3
out
sbb
sub
adc
testb
loope
or
inc
push
or
add
inc
cmp
jl
xor
lds
clc
ret
jno
adc
test
mov
bound
repz
push
add
mov
push
jbe,pn
xchg
push
mov
pop
out
loopne
add
je
out
arpl
mov
jns
inc
add
fisttpl
xchg
add
pop
shll
dec
bound
shrb
push
mov
cmp
nop
mov
lret
pop
push
cltd
ret
nop
das
movsl
mov
lock
ss
xchg
or
jge
jle
push
inc
je
push
and
adc
jne
mov
push
xchg
and
int3
or
decb
shrb
and
pop
xchg
mulb
mov
dec
ret
test
add
pop
cmp
mov
jl
pop
mov
cltd
xor
push
adc
dec
es
ljmp
push
popf
movsl
out
push
bound
lods
sub
xchg
mov
in
adcb
dec
cmp
shl
je
inc
punpckhbw
mov
cli
pusha
ljmp
push
mov
add
out
xchg
pop
xchg
mov
mov
push
mov
je
pop
push
stc
push
adc
popf
call
and
inc
jo
mov
cwtl
stc
inc
mov
loop
adc
testb
cmp
pop
dec
push
pop
in
mov
mov
inc
cld
pop
dec
add
mov
mov
subl
and
add
push
dec
hlt
xor
or
push
sbb
std
dec
test
pushl
adc
xchg
stos
fisttps
mov
add
jmp
push
and
test
scas
sbb
mov
jecxz
or
and
jp
cli
push
pop
movsb
test
into
jo
inc
lea
sub
test
inc
adc
out
dec
push
push
rorl
adc
cltd
or
jge
xchg
mov
fs
fdivr
aam
jmp
stos
lods
iret
and
sbb
outsb
hlt
push
mov
aaa
cmp
dec
or
push
in
nop
out
mov
xor
leave
cmp
jbe
cmp
inc
clc
lret
repnz
cmp
inc
jae
mov
dec
push
mov
jle
mov
adc
inc
pop
mov
dec
test
out
test
and
mov
pop
call
xor
mov
stc
roll
mov
jp
mov
cmp
std
push
or
jl
push
fs
jge
or
push
cmp
lcall
mov
cli
mov
push
pop
and
adc
xor
sub
fmul
push
add
and
sti
or
inc
rorb
int3
mov
mov
mov
aaa
test
mov
dec
push
xchg
jmp
aad
or
xchg
adc
adcb
dec
and
adc
push
orl
xchg
js
call
sbb
mov
pmullw
fwait
push
inc
movb
fs
or
fs
pop
sub
sbb
mov
sub
jne
insb
ds
punpckhdq
and
rolb
jne
mov
insb
push
pop
inc
popa
mov
sub
shlb
jge
lock
push
or
leave
and
dec
sbb
aam
sbb
pop
loopne
into
les
xchg
test
std
aas
aad
or
fs
xchg
xor
push
int
in
push
hlt
stc
push
testl
jnp
xor
xlat
shll
push
xlat
sti
xor
and
mov
stc
out
mov
sub
and
movsl
sbb
mov
or
push
mov
jno
bound
in
jp
mov
orl
push
mov
xor
pop
pop
inc
lods
mov
loop
nop
test
adc
sbb
ret
enter
frndint
jp
mov
gs
lret
xchg
fmull
add
cmpl
cmpb
add
xor
sub
sub
bswap
adc
push
mov
enter
jo
push
jno
dec
mov
test
into
fwait
inc
fwait
push
mov
adc
xchg
jg
aaa
xor
xor
outsb
rcll
test
imul
aam
lea
movsb
or
mov
adc
enter
and
jo
adc
pop
xchg
and
cwtl
mov
mov
sbb
or
push
sbb
sbb
jge
cmp
adc
push
xor
clc
adc
push
pop
sbb
xorps
xchg
inc
inc
sub
or
add
inc
push
shrb
inc
aaa
push
add
shr
adc
push
inc
dec
sub
stc
sbb
mov
out
sub
inc
cmp
enter
mov
push
mov
sub
and
adc
xor
mov
mov
bound
and
push
or
or
xor
adc
adc
add
inc
sbb
adc
cmp
pop
jmp
jb
pop
sbb
test
int3
adc
cmp
and
les
xor
adc
loopne
inc
add
mov
cmp
test
add
inc
loopne
icebp
sbb
xchg
or
xor
sbb
inc
jo
cmc
fs
xlat
push
movsb
and
or
xor
xchg
sbb
movsb
or
adc
sub
or
xchg
enter
adc
hlt
test
push
repz
lock
scas
scas
js
test
adc
mov
mov
pusha
or
xchg
mov
mov
out
icebp
or
lods
ficoml
or
inc
shlb
mov
or
fs
enter
xchg
adc
or
scas
hlt
and
mov
inc
or
inc
stc
aaa
xchg
cmp
inc
cmp
inc
and
sub
lods
xchg
adc
insb
xchg
out
movsl
add
push
or
and
mov
xor
mov
sbb
cmc
sbb
shlb
or
mov
inc
add
adc
clc
xchg
and
mov
mov
mov
bound
rorb
mov
and
jbe
or
lock
mov
int3
dec
or
and
xchg
xor
mov
mov
sbb
xor
jl
mov
sbb
inc
mov
and
je
dec
or
xor
xchg
xor
or
movsb
daa
inc
and
in
inc
call
add
xor
imul
test
sbb
stc
or
in
sbb
cmp
test
leave
movsb
or
xor
xchg
movsl
xchg
cltd
xchg
lea
xchg
nop
adc
int3
mov
or
xchg
or
aam
mov
icebp
shl
sbb
sarb
mov
adc
pop
inc
jo
insb
movsb
jno
xchg
cmp
hlt
loope
lock
sbb
icebp
or
and
sub
or
lods
les
xor
mov
xchg
movsb
inc
mov
add
sbb
sbb
xchg
mov
or
mov
jbe
cmp
xorl
inc
adc
mov
cs
lds
enter
xor
push
xor
xor
in
shll
inc
mov
js
sbb
mov
pop
pusha
cli
xchg
xchg
and
push
push
sbb
lock
mov
loopne
or
movsb
in
in
je,pn
inc
jl
rclb
les
in
lds
enter
bound
inc
jo
xor
enter
and
pop
sbb
dec
or
mov
mov
cmp
in
and
adc
fwait
mov
popa
xor
sbb
mov
mov
call
enter
xchg
test
fdivrp
ret
and
nop
cmp
fbld
and
xchg
dec
jge
mov
and
mov
cwtl
or
test
movsb
jecxz
out
enter
pushf
dec
mov
sub
xchg
and
inc
in
sbb
sub
mov
fdivrs
mov
xor
and
mov
rorb
test
inc
movsb
mov
jl
test
mov
mov
mov
mov
xchg
cmp
call
mov
and
cmp
inc
mov
sbb
inc
pop
pop
ret
cmpsl
sbb
popa
ja
mov
inc
hlt
bound
jbe
lahf
jl
jno
cmp
rorb
pop
fsubrl
decl
repz
add
push
push
lea
adc
xor
enter
and
pop
mov
lods
dec
fisubl
enter
rcll
push
rorl
lock
xor
mov
pop
int
in
aas
bound
xor
mov
out
push
or
sbb
or
xor
inc
xchg
or
jge
shlb
ret
mov
sub
adc
cli
or
or
sbb
inc
cmp
jl
xor
xchg
and
in
out
push
xchg
dec
scas
add
sbb
lcall
add
mov
add
inc
inc
cmp
add
pop
or
pop
push
jp
js
mov
push
adc
cmpl
inc
push
inc
push
mov
addr16
inc
pop
sub
inc
mov
fdivr
pop
jg
cwtl
stos
or
inc
jmp
jnp
lds
sbb
daa
inc
sbb
sbb
and
push
dec
mov
or
lock
and
ret
loop
insb
lret
shrb
push
mov
fnsave
sahf
in
mov
stos
enter
adc
repnz
lahf
lea
cmp
add
cltd
cltd
pop
adc
cmp
out
je
sbb
add
push
rorl
jo
push
cvtpi2ps
subb
jo
dec
push
std
dec
cwtl
push
add
enter
cmp
jl
or
fwait
cmp
and
inc
jmp
sbb
inc
inc
mov
mov
sub
in
or
cwtl
mov
sbb
and
test
push
orl
and
fwait
ss
and
leave
hlt
roll
push
out
mov
jns
leave
mov
add
cmp
add
insb
lock
push
imul
lret
mov
clc
add
push
inc
jl
dec
mulb
pop
sarl
sub
xor
movlps
push
mov
xchg
lock
cltd
sbb
lret
adc
dec
push
cwtl
mov
or
mov
decb
xchg
and
adc
dec
cmp
sbb
mov
rorl
push
xchg
leave
cli
repnz
in
mov
mov
jge
sbb
movsb
dec
mov
push
aam
daa
mov
adc
into
jl
daa
jl
mov
jo
push
adc
and
js
xor
cld
scas
sbb
outsl
js
cmpsb
sub
inc
test
xchg
rclb
daa
fisubrs
ja
sbb
orb
dec
push
daa
and
lds
or
les
mov
jbe
outsb
bound
fistl
aas
enter
push
push
pop
cmp
adc
nop
cmp
mov
call
or
fmuls
inc
mov
test
xor
cmp
mov
pop
std
clc
sub
push
addb
pop
bound
frstor
push
call
shrl
push
fdiv
inc
andl
mov
adc
xor
loopne
xor
ja
xor
pop
clc
mov
adc
outsl
inc
or
add
cmpsl
and
pop
stos
lea
data16
xchg
cwtl
lock
push
dec
leave
insl
pop
sub
adcb
sub
xchg
outsl
fisubs
inc
inc
mov
or
test
je
lcall
mov
mov
dec
fildl
popf
cli
jo
jnp
push
xchg
jecxz
cltd
pop
je
mov
pop
mov
sub
mov
sub
mov
cld
and
or
adc
adc
cltd
cmp
jmp
pop
push
mov
add
stos
adc
gs
sub
jbe
lea
jne
cmp
inc
add
cmp
jb
icebp
jmp
fwait
pop
xchg
lds
push
add
je
test
lds
push
push
and
pop
and
inc
inc
xchg
test
cmp
pop
push
in
lahf
sbb
jge
aas
mov
repz
and
adc
cs
adc
sub
jne
push
testl
add
inc
or
or
fimuls
push
sysret
mov
add
inc
adc
negb
jmp
adc
push
add
ror
shr
das
and
mov
jmp
nop
adc
and
add
jnp
xor
dec
in
repnz
lea
ret
sub
test
and
pop
into
scas
jp
test
dec
test
adc
ret
je
cmpl
sub
subb
add
dec
xchg
pop
cmp
je
scas
or
xor
mov
mov
lahf
sahf
mov
push
inc
pop
lcall
dec
fs
or
inc
lods
loopne
jmp
mov
add
push
stos
jo
dec
pop
ljmp
mov
inc
cmp
jge
pop
adc
mov
movsb
pushl
xchg
push
mov
dec
xor
dec
in
ljmp
fimull
andb
scas
fstl
inc
cmpb
inc
add
inc
mov
dec
jno
mov
xchg
dec
adcb
mov
je
dec
into
or
push
mov
test
stc
pop
inc
push
mov
push
push
sbbl
addr16
fcomi
cmp
mov
mov
sahf
sbb
push
and
mov
and
push
cmp
push
xchg
or
inc
out
mov
movsb
push
mov
aaa
je
inc
push
das
xchg
rorl
inc
loop
ret
jle
cmpsb
dec
jo
test
xchg
xor
out
ror
mov
pop
imul
dec
sub
cld
ret
mov
je
inc
int3
push
test
dec
push
into
lods
popa
scas
pop
cmpsl
pop
loop
pushf
lock
jg
aam
xor
push
xor
and
sub
xchg
jecxz
adc
mov
jl
push
hlt
cmp
mov
pop
lods
add
or
call
xor
sub
add
rorl
push
cmp
jne
rorb
sub
push
or
push
jne
mov
insl
dec
jae
lret
add
push
mov
dec
popf
int3
xor
mov
adc
or
in
or
cwtl
and
mov
add
sbbb
aam
dec
jbe
pop
je
sub
jne
test
inc
inc
add
scas
xor
bswap
lret
outsb
iret
inc
gs
push
cmp
xchg
enter
arpl
inc
cmpsb
nop
adc
cmpsl
jo
push
xchg
aaa
mov
cmp
push
xchg
jne
jl,pn
clc
rorb
stos
and
jb
sub
lea
ret
jb
das
push
je
dec
cltd
decb
jmp
adc
sti
and
push
xchg
leave
call
les
nop
jge
push
dec
roll
lret
stos
sub
inc
mov
and
and
pop
jmp
or
outsb
cmp
movsl
cwtl
mov
mov
stc
or
mov
xor
jge
mov
push
inc
add
adc
mov
cs
mov
loope
lcall
pop
hlt
outsl
je
cmpsb
push
gs
les
stos
and
and
jne
push
sbb
std
movsb
sub
push
mov
xor
push
sbb
inc
add
jge
and
push
add
push
add
mov
sub
leave
or
dec
or
inc
das
mov
or
inc
add
out
cmp
daa
imul
sub
sbb
mov
aam
imul
sub
xor
sub
dec
mov
jp
jg
adc
mov
jmp
inc
adc
daa
dec
sbb
cmc
jo
xor
inc
push
push
ljmp
jecxz
repz
mov
jmp
jl
ficomps
enter
int3
fdivrs
xchg
fsts
pop
mov
inc
mov
lea
subps
ror
mov
in
sub
das
mov
test
jmp
lret
xchg
inc
fnsave
xchg
inc
lret
mov
ret
mov
push
xor
mov
fwait
test
adc
and
mov
xor
scas
inc
aad
pop
data16
and
mov
and
adc
dec
arpl
sub
cli
xchg
popa
das
jecxz
enter
push
daa
jmp
pop
fstl
mov
repz
pop
leave
test
in
scas
gs
sub
es
push
push
push
lret
les
mov
jb
inc
mov
dec
in
lret
bnd
or
aam
popa
adcb
and
aaa
mov
pop
dec
jp
push
pop
add
pusha
sub
pusha
movsl
pop
cmc
mov
in
mov
dec
xor
test
inc
xor
push
push
push
pop
inc
mov
inc
mov
pop
xchg
hlt
mov
push
or
sbb
mov
movsl
fcomp
test
sub
cltd
call
dec
mov
cld
xlat
nop
mov
fcompl
or
movsb
call
lcall
and
leave
sbb
push
push
enter
jge
or
cmp
push
ljmp
mov
pop
xor
fstpt
sbb
scas
test
scas
push
ret
push
xchg
inc
xlat
das
push
stc
imulb
cmp
jle
xor
pop
cltd
adcb
push
xchg
mov
jl
jae
sub
inc
pop
and
add
sbb
xchg
add
sbb
punpcklwd
jl
js
loope
and
orl
mov
push
fwait
jecxz
imul
mov
std
lds
hlt
out
pop
push
mov
push
push
cmpsl
push
mov
xchg
or
xlat
sub
loop
xchg
pop
loopne
adc
nop
orl
in
pop
lea
sbb
lock
sahf
pop
add
push
rcr
sbb
dec
cmp
aam
or
xor
shlb
xor
jg
stos
and
inc
sbb
test
test
pop
je
rorb
mov
mov
pusha
sbb
push
iret
pop
icebp
test
add
add
decb
jbe
mov
xor
call
push
xchg
push
adc
sbb
mov
insl
and
xchg
popf
repnz
jle
sbb
pop
outsb
js
xchg
loop
fsubp
inc
push
mov
test
rcrb
jmp
lea
dec
sti
adc
shl
pop
cmp
rolb
movsb
movsl
xor
in
or
sete
pop
or
mov
jb
cmp
add
lret
adc
xor
pop
leave
xchg
adc
push
pop
or
inc
repnz
test
jge
adc
sub
jmp
xchg
test
pop
pop
inc
jp
cmp
mov
lahf
test
lods
dec
stc
jb
dec
dec
fnstenv
je
mov
stc
or
stos
pop
cmpsb
les
xchg
inc
mov
and
cltd
push
add
movsb
cli
mov
jbe
in
fsts
aam
mov
xor
int3
mov
inc
repz
movl
cmp
stc
addr16
fmuls
std
dec
insl
call
out
das
pop
gs
sbb
je
cli
xor
outsb
imul
fbld
add
or
push
outsb
fsubr
mov
fmull
adc
push
test
leave
jl
pushf
ss
ds
fsubp
dec
xor
pop
pop
adc
repnz
dec
adc
cmp
test
loope
add
arpl
add
out
roll
xchg
ds
mov
aad
ret
rol
push
pop
sub
sahf
mov
and
in
dec
je
sahf
into
cwtl
lock
lret
adc
adc
fs
mov
notb
sbb
in
std
cmp
sub
xchg
in
mov
push
inc
imull
clc
cltd
in
pop
pop
enter
sub
adc
fcomps
sub
jp
cmpsl
std
inc
pop
test
add
cld
enter
hlt
push
dec
jne
mov
xlat
decl
push
or
mov
je
cmp
jae
add
mov
add
xlat
dec
push
push
jne
inc
mov
adc
cmpsl
test
notl
jb
and
jne
fwait
inc
cmp
cld
jb
jl,pt
aam
cmpw
and
jne
add
mov
inc
ss
mov
loope
loopne
add
xorb
jno
ret
popf
test
push
or
xchg
pushf
loop
gs
mov
lock
jne
push
pop
adc
sub
add
mov
sub
inc
push
jnp
pop
les
js
and
popf
sub
stc
loopne
enter
push
mov
pop
inc
push
enter
or
xor
pushf
call
push
test
cmp
lea
mov
push
inc
pop
aas
push
shrl
add
adc
jmp
push
popa
cmp
loopne
push
dec
jg
and
push
addr16
and
xchg
icebp
nop
adc
xchg
pusha
repnz
xchg
push
mov
pop
and
add
inc
cmp
inc
lcall
sbb
jle
xchg
or
and
loopne
das
sub
ret
xor
add
jne
psrlq
sub
cmpsb
rcrb
insl
sub
ret
shrl
icebp
adc
jo
xor
xchg
pusha
inc
pushf
test
push
sub
call
cmp
sti
pop
sub
insb
das
sub
mov
dec
inc
bound
xchg
sub
fistl
pop
adc
push
scas
cmp
fs
push
lock
xor
add
inc
cmp
orl
sbb
call
sbb
and
xchg
cwtl
sbb
popa
bound
sbb
push
repnz
mov
sahf
push
xchg
push
adc
or
in
mov
mov
aam
push
cmp
xor
repz
mov
xchg
enter
inc
xchg
imul
negl
adc
leave
mov
and
jnp
es
cmp
pushf
enter
in
leave
test
pop
and
pop
pop
lea
add
sub
add
sbb
insl
add
xor
mov
sbb
jns
lock
inc
cmp
mov
or
xchg
sbb
pop
dec
cmpb
mov
push
xchg
int
test
mov
out
mov
adc
mov
mov
jg
testb
sbb
enter
lds
pop
dec
mov
jmp
pop
sub
sbb
adc
inc
movsl
pushf
and
sbb
xor
mov
inc
push
and
test
push
adc
adc
add
jo
loop
or
xchg
jo
sbb
sub
clc
inc
jbe
sbb
inc
andl
cwtl
movsl
fstps
mov
test
inc
add
scas
mov
clc
push
push
dec
mov
ds
add
pop
testl
scas
sarl
dec
and
push
je
dec
je
les
sub
inc
pop
lea
pop
jle
das
push
mov
out
out
es
pop
mov
xor
xchg
lods
inc
xchg
dec
loope
mov
mov
cmpsb
push
pushf
mov
sahf
mov
notb
lock
mov
stos
pop
xchg
andps
push
xchg
or
sub
orl
jo
xchg
es
sub
es
inc
jle
xchg
pop
sbb
push
cmp
rorl
adc
push
push
pop
push
inc
or
and
push
xchg
fwait
cs
lds
iret
jge
loopne
cmp
je
adc
push
inc
adcl
add
lret
lahf
popf
pop
mov
pop
filds
or
js
bound
ja
mov
xchg
xor
notl
push
dec
cmp
xchg
cmp
aam
iret
leave
pop
dec
add
and
mov
cmp
xrelease
cmp
js
and
scas
and
push
cwtl
stos
enter
fs
push
jnp
es
cmp
cli
mov
call
inc
mov
insb
scas
adc
notb
dec
xor
in
dec
push
pushf
test
repnz
mov
xchg
cwtl
inc
fwait
pop
xor
mov
inc
imul
ret
inc
push
sbb
or
daa
pop
mov
insl
fstps
inc
push
arpl
lret
mov
mov
orb
imul
adc
add
stc
or
mov
cmp
ret
and
enter
push
push
inc
xor
sub
pusha
cmp
pop
dec
stos
iret
or
jl
inc
or
mov
push
jmp
jne
adc
add
addl
adc
xor
bound
mov
xlat
mov
mov
into
cmp
and
push
icebp
pop
or
mov
xor
fs
sub
xor
jno
aad
popa
inc
sub
xchg
leave
add
js
jmp
mov
dec
lock
jl
xchg
pop
sar
and
jo
scas
flds
mov
cmpb
or
mov
inc
std
js
add
sbb
push
push
fnstenv
out
ss
outsl
or
imul
sbb
iret
sub
cmp
in
xor
test
mov
dec
xor
mov
xchg
adc
adc
and
int3
sub
push
loope
unpcklps
mov
test
fsubrs
mov
sbb
data16
pop
pop
adc
aad
cmp
rorl
push
ret
xor
add
inc
arpl
inc
xorb
xor
push
push
aaa
mov
jmp
push
and
xchg
or
popf
add
mov
mov
sub
jg
scas
jbe
es
add
test
outsl
movsl
dec
and
adc
mov
pop
loopne
adc
jg
inc
sub
mov
pop
mov
je
fidivs
and
sbb
inc
push
push
lods
imul
dec
pop
jle
movsb
push
pop
mov
into
adc
ljmp
xchg
push
mov
stos
push
int3
imul
or
add
sbb
rcll
or
xor
cmp
jle
push
pop
ds
pop
mov
xchg
dec
jle
pop
push
icebp
mov
gs
inc
fisubrs
or
mov
and
je
sub
push
cld
movsb
push
mov
mov
mov
xchg
cmp
sti
sbb
test
enter
and
cmp
pop
mov
push
push
adc
std
dec
adc
fsubr
push
mov
imul
rolb
andl
cmp
lea
cmp
nop
test
pop
stc
jbe
roll
mov
js
test
je
adc
mov
js
xchg
test
inc
andb
iret
lock
or
inc
dec
js
xchg
test
sub
xor
inc
out
sub
jne
pushl
sbb
push
in
xor
xchg
xlat
dec
or
orb
clc
mov
in
pop
pop
in
pop
add
push
inc
enter
xor
mov
test
jecxz
push
inc
mov
add
xlat
add
js
insb
lea
mov
xchg
pop
push
lods
xor
cli
test
cmp
movsl
es
pop
push
adc
sbb
adc
loope
daa
or
adc
clc
mov
mov
inc
hlt
mov
xchg
aas
dec
call
xor
mov
and
es
sbb
push
jno
inc
aam
outsl
fs
push
inc
inc
add
sbb
mov
mov
adc
push
test
sub
and
jb
inc
jo
out
and
shlb
les
jnp
pop
les
push
cmp
cmp
dec
ret
adc
and
xchg
inc
loope
and
cmp
adc
xor
and
ret
and
jne
jns
pop
inc
test
or
xor
sub
inc
add
fcom
push
inc
push
xchg
sar
js
loop
popa
aas
mov
add
dec
mov
shlb
test
adc
loop
sbb
lods
loop
sbb
loope
pop
or
lock
test
popf
loope
js
cmp
or
and
mov
ret
push
or
push
leave
pop
repnz
pop
insb
and
repnz
test
mov
sbb
xchg
push
and
dec
loop
sbb
test
sub
sbb
cmp
adc
out
xor
inc
sbb
adc
mov
sbb
sub
movsb
xchg
and
mov
and
sbb
aam
or
adc
or
adc
and
hlt
push
adc
mov
nop
hlt
icebp
outsb
or
cmp
call
xchg
and
adc
dec
adc
rorb
ret
adc
push
and
xchg
test
and
lock
and
iret
adc
cmp
cmp
and
cmp
in
adc
and
nop
loop
sbb
repz
jl
hlt
adc
jo
inc
xchg
adc
push
xchg
xchg
pop
push
pop
adc
fwait
or
xchg
or
fdiv
xlat
adc
push
add
out
and
test
xchg
movsb
adc
or
xor
xor
and
and
adc
adc
adc
or
cmpsb
mov
test
xor
adc
loope
add
cmp
insb
adc
cmp
and
cmp
and
lock
push
enter
add
fdivrs
mov
adc
cmp
inc
pop
mov
popf
and
cmp
or
inc
fisttpl
inc
inc
leave
pop
rolb
out
adc
xchg
cmp
lret
mov
and
sbb
mov
sbb
pusha
cld
add
sub
pop
dec
push
daa
mov
push
mov
stc
std
fs
and
jle
hlt
xor
mov
cmp
inc
push
bound
aad
jle
push
loop
mov
cmp
enter
shrl
push
fsubrs
cmp
lcall
lods
sti
imul
lcall
jle
adcl
fistpll
and
jmp
jno
or
inc
mov
pop
fmuls
jg
xchg
sbb
bound
call
mov
and
inc
xchg
inc
xor
test
cmp
dec
xchg
pushf
aad
dec
ficompl
pop
mov
sbb
sbb
fcompl
jbe
jo
std
mov
and
push
cmp
pop
jecxz
mov
icebp
and
inc
pop
nop
test
push
popf
pusha
xlat
aaa
jmp
push
sbb
enter
mov
inc
sbb
cmp
imul
push
mov
shll
pop
rcrb
push
xor
orps
fs
push
push
inc
jmp
test
dec
mov
jl
insb
dec
xor
push
mov
pop
incb
pop
aaa
and
sbbl
adcl
or
add
cmp
jle
push
push
mov
mov
and
jno
dec
bound
push
dec
push
cmc
push
mov
inc
pop
push
jae
push
pop
or
shll
lea
or
js
mov
or
inc
adc
orl
mov
cmp
test
mov
popf
daa
push
cmp
dec
adc
jmp
mov
gs
or
dec
loope
adc
or
jne
push
rcrl
cmp
je
cmpb
push
sub
xchg
and
daa
push
not
ret
fdivl
sti
imul
jne
nop
adc
adc
mov
mov
int3
and
jmp
pop
lods
icebp
cmp
neg
push
test
and
scas
inc
cmp
test
xor
fnstsw
mov
nop
arpl
xor
jge
push
setne
inc
popa
idiv
dec
sub
aad
iret
inc
adc
and
jmp
loopne
scas
rclb
push
or
inc
push
ds
mov
jl
lcall
stc
jae
jbe
sub
cmc
xchg
lcall
in
andl
or
push
xor
sub
or
jne
jg
pop
fildll
inc
outsb
cmp
jne
mov
aaa
cmp
scas
mov
rorl
ja
adc
mov
or
xchg
sub
push
inc
push
enter
push
pop
or
sub
cmp
xor
cmp
nop
inc
scas
adc
loop
adc
js
andl
test
xor
js
pop
minps
jl
and
mov
add
adc
das
lret
pop
stos
mov
test
pop
sbb
push
sbb
pop
hlt
clc
test
test
push
lods
inc
rclb
dec
push
and
dec
mov
sar
push
add
mov
add
negb
in
push
and
loop
push
inc
dec
xchg
cwtl
xchg
ljmp
nop
cpuid
and
faddl
inc
adc
std
jo
lods
test
std
push
jp
mov
push
inc
sti
mov
mov
inc
push
cld
lods
push
mov
movsl
loop
imul
xchg
stc
stos
cmpsb
push
movsl
ss
sahf
test
adc
pop
movzbl
jge
out
inc
push
inc
std
adc
cli
into
mov
push
adc
dec
sub
mov
pop
and
sub
inc
sbb
mov
shl
outsl
adc
in
jg
pop
push
ss
sub
xchg
adc
mov
enter
and
inc
pop
jecxz
xchg
fisttps
sti
mov
inc
or
or
pop
shll
in
sub
pop
lods
cmp
adc
adc
push
push
daa
pop
push
sbb
shll
push
lock
shlb
xor
lods
cmp
addb
jmp
push
inc
lret
cld
dec
mov
sahf
jbe
call
sub
push
leave
adc
cli
pop
adc
xlat
sti
mov
mov
pcmpeqd
addr16
jne
data16
call
push
inc
int
jno
mov
xor
das
cmpsb
in
bound
les
addr16
or
idivl
and
xchg
jne
adc
lods
clc
fidivs
push
out
fsubrs
leave
push
mov
add
pop
add
cwtl
clc
sub
xor
push
fsubrp
lahf
dec
mov
or
push
icebp
aam
shll
push
push
insl
xchg
cmp
jecxz
cltd
add
aaa
scas
repnz
dec
xchg
lods
nop
mov
mov
scas
jle
lods
repz
iret
loope
test
imul
and
sub
stos
jne
adcl
and
xchg
lcall
xchg
hlt
inc
pushf
push
or
mov
sbb
addr16
es
xchg
fadds
jle
nopl
pop
imul
push
xor
inc
mov
push
adc
insl
ljmp
mov
mov
push
or
mov
mov
mov
mov
push
add
mov
bound
mov
push
inc
hlt
lds
jnp
rcrl
push
enter
adc
dec
stos
jl
rclb
aaa
fstl
sub
popa
repnz
push
arpl
js
xchg
popa
lds
mov
aam
mov
mov
jecxz
cmp
inc
adc
add
add
lahf
out
pop
adcb
movsl
cld
pushf
push
imul
jl
mov
push
lds
push
fcompl
inc
fcoml
mov
cmp
adc
xlat
movsl
jo
and
stc
arpl
and
repnz
cmp
dec
push
cmp
jp
call
mov
xor
rclb
push
imul
cltd
sbb
xor
and
dec
push
mov
in
dec
jp
sub
sti
mov
lcall
mov
sub
repnz
xchg
sbb
and
push
inc
orb
jnp
xor
dec
sub
mov
js
out
aas
or
pushf
xorl
push
in
loop
and
test
cli
aas
mov
test
push
pop
pop
xor
pop
inc
sub
cmp
xchg
shrb
ret
test
fmulp
mov
dec
adc
xchg
call
push
sub
js
bound
or
xchg
inc
push
std
sbb
pop
push
je
call
je
cmp
jmp
dec
push
mov
adc
pop
sub
mov
mov
dec
sbb
daa
test
movsb
push
jg
push
fsubrs
push
mov
push
ret
cmp
pop
push
xchg
test
mov
inc
inc
mov
dec
mov
imul
cltd
sbb
clc
test
sub
pop
mov
rcrl
or
sbb
pusha
stc
jp
jns
lcall
xor
gs
mov
cmpsb
dec
xchg
push
mov
scas
fisttpl
shrb
in
cmpsl
int3
rorb
lahf
xor
inc
sub
clc
cltd
shlb
mov
or
push
scas
adc
daa
fst
stos
gs
icebp
push
inc
sbb
inc
push
adc
ret
lock
mov
hlt
mov
jne
cmp
sub
pop
pop
movsb
loop
mov
pop
mov
mov
idivl
add
mov
sarl
add
bound
jns
nop
adc
mov
dec
int
das
dec
insl
inc
faddl
add
call
push
popf
sbb
pop
mov
pop
je
repz
jl
xchg
add
stos
enter
add
and
clc
cmp
iret
in
dec
test
test
movsb
mov
ljmp
mov
cltd
arpl
sub
sub
adc
repnz
mov
test
scas
lahf
and
pop
push
push
adc
xor
popa
mov
cmp
je
les
lods
inc
icebp
jmp
adc
pop
dec
dec
stos
sub
mov
inc
mov
movsl
fiadds
pushf
cli
jbe
rorl
repnz
adc
call
cwtl
test
mov
enter
lods
lea
mov
cli
adc
cld
test
popf
rcr
sub
sti
mov
and
mov
movsb
add
add
cmp
cld
sub
inc
cli
adc
cmpsb
ds
mov
mov
cwtl
xchg
sbb
fists
popa
ljmp
add
xor
icebp
adc
dec
sub
jle
jno
mov
sbb
rorb
inc
cmp
mov
hlt
dec
cmpsb
sahf
cmpsl
adc
sub
sub
jnp
dec
test
lods
sub
out
pop
push
pop
and
sbb
cmp
push
aam
jmp
inc
mov
sub
leave
or
or
pop
lods
add
jl
bnd
sbb
adcb
cmp
jae
andl
dec
push
mov
pop
fsubl
mov
push
pushf
pop
pop
cmp
test
shlb
cmp
xchg
test
lcall
ljmp
or
cli
mov
aas
xchg
out
jle
dec
sbb
mov
nop
xchg
or
dec
cmpsb
cmp
or
daa
dec
icebp
inc
cmpsb
mov
mov
iret
or
xchg
pusha
push
xor
movsl
jp
fsubs
xchg
repz
movsl
or
fbld
xor
movsb
add
in
jmp
mov
jmp
xchg
and
fldcw
jle
or
lock
mov
lea
int
sbb
movsl
push
push
jmp
sarl
pop
inc
dec
dec
and
adc
cwtl
inc
movsl
mov
mov
pop
add
adc
rorl
sub
dec
cmp
cwtl
aam
in
sub
and
mov
fnstsw
push
call
xchg
in
mov
mov
and
stos
mov
movsb
adc
sub
sahf
pop
xchg
clc
cmp
sarb
fscale
sbb
sbb
gs
aaa
inc
cmp
mov
sub
dec
cmpsb
dec
cmpsl
cmp
outsb
dec
pop
movsb
iret
mov
cmp
fwait
mov
loop
xor
js
js
test
push
sbb
cmpsl
hlt
adc
jg
and
ret
outsl
sub
test
adc
push
sub
in
mov
dec
xor
xor
shl
pop
lea
jle
pop
sbb
xchg
outsb
add
push
jmp
cld
cld
and
enter
and
out
dec
in
lods
mov
in
dec
movsl
lds
xchg
or
mov
out
adc
in
mov
test
jle
pop
nop
inc
xchg
xor
jne
jae
inc
int3
push
xor
cmp
cwtl
aam
inc
mov
ljmp
andb
outsl
test
push
mov
push
rorl
inc
mov
adc
push
mov
decl
mov
sbb
add
add
mov
sub
jge
jb
loope
in
sub
jmp
popf
in
shrb
adc
pop
iret
std
std
xchg
fwait
pop
loopne
push
dec
push
out
test
lret
mov
xor
lcall
sbb
inc
stos
rorl
shl
jmp
jne
sub
cmp
xor
sbb
inc
adc
out
and
sbb
mov
push
pop
lret
mov
dec
jne
fdivrl
push
std
or
and
enter
push
mov
pop
popf
adc
mov
ror
and
jg
loop
mov
mov
sbb
mov
icebp
xor
add
xchg
iret
pushf
jecxz
push
mov
mov
ficoml
in
sbb
cmp
test
add
mov
lcall
and
mov
leave
out
jg
jbe
sub
sbb
andl
push
dec
dec
in
xor
jle
mov
mov
dec
or
stos
inc
or
sti
cmp
add
mov
jl
push
lods
test
adc
flds
jle
addb
push
add
and
add
add
sub
nop
inc
add
pop
adcb
aam
popf
adc
leave
mov
outsl
mov
pushf
das
jns
mov
flds
and
push
add
sub
cmpsl
sub
loope
mov
movsl
dec
jbe
rclb
dec
sbb
jmp
mov
dec
cmp
jb
test
sub
std
jnp
lcall
mov
xor
dec
jne
sbb
add
cmp
xchg
cmp
and
and
adc
jmp
inc
jg
or
pop
ffree
or
or
adc
lds
cld
mov
clc
cmp
lcall
mov
and
call
fnop
inc
mov
stc
adc
cmp
aam
xor
jne
mov
dec
mov
xchg
mov
mov
pop
movsl
xchg
mov
inc
push
or
cmpsb
push
sub
mov
cmpb
xor
xor
mov
jp
hlt
bound
cli
adc
push
ret
jl
loop
mov
sbb
push
sub
pop
outsb
iret
push
xor
test
mov
cmp
movsl
cmp
sub
enter
push
mov
mov
cmp
push
jno
xchg
incb
push
jp
sub
cmp
adc
in
or
fidivs
push
and
je
or
dec
and
push
inc
insb
dec
push
push
cmp
push
mov
or
leave
adc
jmp
pop
cmpsl
pop
movsb
jb
loopne
fisubl
cwtl
and
sbb
movsb
jle
bnd
enter
decl
call
sbb
push
nop
testb
jl
hlt
notb
lahf
loopne
mov
cmp
push
jle
jne
shrb
jge
nop
scas
je
shrl
enter
and
adc
jmp
cmp
insb
push
in
icebp
mov
popa
les
and
stc
mov
mov
jo
push
jb
push
dec
mov
and
jo
or
lret
or
pop
jl
lahf
fistpl
adc
incb
sbb
popf
fcos
gs
adc
and
pop
lds
xor
or
lret
mov
jg
mov
leave
mov
repz
mov
inc
in
cs
or
das
dec
mov
and
and
xchg
or
std
je
mov
pop
push
repz
pop
les
cwtl
jmp
cs
mov
jne
push
pushf
sbb
mov
xorb
cld
push
imul
push
jl
fisttpl
and
xor
dec
cmp
and
lock
outsb
fdivs
sbb
jbe
ljmp
fs
imul
int
jnp
pop
xchg
xchg
addb
cwtl
add
push
push
adc
mov
call
or
adcb
movsl
sbb
push
or
stc
sahf
or
xchg
fildl
imul
leave
sbb
push
xor
push
popf
inc
jle
sbb
les
sbb
cmp
js
sbb
mov
jo
jmp
mov
push
repnz
js
mov
xor
jge
add
lods
xor
xor
push
push
cltd
sbb
pop
dec
and
pusha
inc
loope
icebp
aaa
cmp
pushf
cmp
or
gs
adc
jl
imul
test
mov
dec
or
jl
hlt
sub
jo
ss
mov
adc
outsb
fs
dec
sti
bound
xchg
in
push
pop
lret
mov
xorl
out
mov
adc
pop
jmp
add
pusha
jo
das
fidivl
push
add
xor
push
jl
sbb
cmpsb
jp
sbb
aas
repz
test
push
push
test
add
xchg
or
xlat
stc
xor
shll
xor
nop
sbb
xor
or
lret
gs
ljmp
hlt
sub
int3
sbb
scas
loopne
enter
sub
shll
mul
push
dec
sahf
mov
std
test
daa
test
push
sub
inc
add
sub
stos
sub
jo
or
adc
add
pusha
imul
ret
pop
sub
mov
loop
daa
adc
jmp
adc
mov
jle
insb
push
and
fadds
mov
add
sbb
dec
or
sgdtl
cmp
iret
stc
sbb
ljmp
mov
add
lods
mov
in
pop
std
xor
add
add
pop
lahf
cmpsl
xor
movsl
and
sbb
sti
add
xor
mov
xchg
enter
imul
mov
jg
enter
std
mov
fists
cmpsl
insb
aaa
push
mov
cmp
sub
or
mov
xchg
ret
push
idivb
add
mov
mov
repnz
scas
test
and
inc
inc
jo
in
push
push
insb
xor
cmp
push
sub
push
sbb
sub
flds
add
ja
jb
cmp
mov
push
sbb
lretw
into
test
inc
outsb
pop
ja
pop
jb
stos
push
jae
push
xacquire
ja
adc
inc
and
cmp
sub
and
sbb
push
and
bound
adc
jae
add
jg
sub
sbb
add
movsb
insb
add
pop
and
mov
push
push
dec
stos
add
jne
popa
pop
lods
and
push
mov
sbb
sti
push
and
pusha
pop
lods
or
enter
inc
dec
pop
call
aaa
xchg
add
and
or
mov
push
bswap
adc
add
sbb
inc
rolb
sub
pop
mov
dec
insb
or
std
add
nop
mov
and
mov
pushw
mov
pop
adc
es
sub
leave
cmpsb
fs
jns
or
push
push
and
popf
clc
out
jl
pop
das
popa
popf
push
fsubs
scas
dec
mov
pop
fbld
out
popa
mov
sub
xor
push
pop
hlt
inc
push
sbb
or
movsl
push
int3
xor
sbb
nop
das
enter
sub
les
xchg
out
int
cmp
xor
clc
xor
in
cmp
xchg
push
cli
les
lcall
mov
sbb
adc
mov
and
inc
insb
xor
mov
call
adc
out
and
adc
add
push
mov
js
mov
lds
xchg
xchg
and
xor
pop
mov
add
push
pop
or
inc
add
pusha
add
xchg
inc
push
in
negb
je
movq
rcrb
dec
fnsetpm(287
pop
mov
cmovno
sbb
push
inc
lahf
dec
add
mov
je
and
or
insb
pop
sub
xchg
out
inc
add
jge
jmp
sbb
push
push
pop
pop
cwtl
xlat
nop
xor
cld
dec
xchg
sbb
mov
scas
mov
ja
mov
mov
btc
mov
clc
mov
stos
and
dec
adc
iret
test
shl
push
cmp
push
out
xlat
or
and
dec
mov
cmp
mov
inc
pushf
push
ds
and
push
push
lret
mov
dec
mov
pop
inc
loopne
dec
add
xchg
jne
stc
fadds
out
and
push
jmp
cltd
xchg
sbb
jg
push
pop
icebp
faddl
not
xor
nop
inc
inc
add
lahf
test
sarl
insl
inc
popf
ret
mov
dec
mov
mov
adc
add
mov
mov
stos
mov
sarl
xchg
xor
push
sub
shlb
sbbl
pop
pusha
ret
pushf
jno
xchg
push
hlt
inc
cmpb
dec
adc
xchg
dec
sti
sub
mov
lahf
jo
cmp
sahf
jge
test
push
adc
jbe
js
pop
cld
mov
mov
inc
lods
push
mov
fldenv
mov
pushf
push
push
rclb
movb
inc
testl
sbb
add
push
dec
les
lods
pop
jbe
xor
in
orb
xlat
dec
into
es
mov
adc
mov
stos
xchg
mov
loope
xor
lahf
insb
mov
or
imul
adc
stos
push
inc
add
test
mov
lahf
mov
ss
shlb
and
idivl
jmp
cmp
in
test
shl
sbb
adc
push
sub
push
cmp
push
cmpsb
lret
mov
dec
sub
add
push
stos
sbb
pop
or
push
aad
and
push
sub
dec
mov
leave
mov
or
pop
cmp
adc
aas
cmpsb
ret
dec
mov
add
sti
fstpl
popf
cli
mov
syscall
testb
push
pushf
mov
dec
push
mov
push
cmp
mov
testl
sbb
cmpsb
aas
mov
xor
cs
and
aas
repnz
sub
dec
lret
adc
adc
lret
aam
das
or
roll
jmp
and
in
mov
sub
xchg
stos
fwait
pop
dec
ljmp
xor
and
xor
mov
inc
mov
ret
mov
jle
xor
pop
inc
jge
pop
loope
movsl
and
leave
shrb
inc
ja
je
inc
mov
xchg
sub
dec
std
idivb
loop
or
inc
jbe
mov
and
inc
mov
clc
cld
dec
mov
push
or
test
mov
pop
pop
push
stc
mov
call
scas
fistpl
scas
mov
push
mov
push
mov
mov
add
inc
or
sbb
cmp
je
push
lock
push
scas
dec
dec
add
in
and
mov
je
adc
push
das
and
add
or
rclb
add
xor
subl
lcall
pop
sbb
lret
jae
pusha
cmp
je
inc
jnp
mov
and
dec
jle
pop
dec
sbb
cltd
adc
and
adc
sbb
in
popf
jnp
mov
xchg
pop
dec
jo
leave
xchg
push
outsb
movsl
sbb
inc
hlt
nop
or
enter
xor
sbb
pop
mov
dec
xlat
aaa
repz
in
scas
pop
jmp
jecxz
jmp
in
scas
pop
and
push
and
jo
cmp
cmp
pcmpeqw
inc
fisttps
movsb
or
xor
mov
addb
pop
jne
cmp
mov
jno
mov
pusha
push
cmp
jge
pop
cmp
je
cmp
jns
jae
cmp
mov
cmp
jl
inc
fdivrs
mov
jmp
mov
sbb
shlb
add
stos
lcall
and
cmp
jmp
gs
loop
insl
inc
out
inc
cmp
cmp
mov
shrb
je
repnz
aas
xor
dec
cmp
jg
and
xchg
lea
mov
movsb
mov
mov
cmp
jmp
push
push
jbe
mov
and
roll
test
cmc
movsb
inc
pushf
or
adc
push
adc
pop
push
adc
push
out
inc
stos
xor
or
aaa
shlb
incl
rcrl
mov
jmp
mov
xchg
xchg
or
sub
fstl
dec
push
mov
cmp
popf
mov
add
xchg
sbb
testb
jne
xchg
fdivr
arpl
jmp
and
or
mov
int3
inc
mov
or
into
sbb
adc
jp
adc
imul
mov
sub
sarb
or
leave
and
add
sti
jb
add
cld
sbb
jl
mov
test
or
push
int3
dec
add
cmpsl
dec
rclb
test
ljmp
add
movl
mov
xor
cmp
shrb
stos
mov
jle
rolb
cmp
add
imul
mov
popf
dec
and
scas
imul
xor
add
or
add
xlat
sub
test
fld
jmp
and
rolb
mov
push
sub
in
cmp
lret
and
je
stos
sub
jne
loope
pop
pop
fs
or
pop
ret
xor
insb
adc
mov
inc
add
adc
mov
push
inc
mov
sarl
int3
faddl
sub
test
sbb
imul
pop
or
xor
fs
loop
dec
ljmp
push
push
sbb
in
inc
cltd
inc
pop
call
ja
push
in
pop
adc
clc
loopne
dec
sub
js
xor
sbb
out
enter
ja
fisubrl
and
inc
add
dec
or
dec
mov
popa
jg
sysret
xchg
xor
sub
das
cmp
adc
jecxz
ss
cmpsb
inc
jl
dec
jmp
inc
leave
xchg
fiaddl
out
inc
cwtl
pop
lock
outsl
testb
testb
inc
or
jmp
mov
push
jo
cwtl
adc
push
and
in
es
mov
add
ja
pop
sub
and
mov
jge
pop
shl
add
cmp
add
sub
adc
lret
test
sub
sub
jo
mov
jb
stos
loopne
enter
pusha
arpl
lea
nop
adc
cld
dec
jo
pushf
enter
and
or
cmp
inc
add
xchg
pop
add
mov
add
sub
mov
mov
mov
fistpll
pcmpgtb
or
dec
and
or
sub
mov
mov
dec
adc
mov
mov
mov
add
rolb
in
xchg
push
dec
adc
mov
mov
add
cmp
decb
adc
sub
je
sarb
cmp
in
cld
icebp
call
fldcw
cwtl
shl
push
xchg
mov
les
and
lods
xor
leave
adc
xor
and
dec
fs
add
out
sbb
out
or
movsl
pop
mov
jne
cmp
ret
lret
pop
push
dec
mov
out
test
mov
add
push
aam
push
movsb
or
les
xchg
fists
mov
and
pop
and
shlb
pop
and
shlb
pop
and
repnz
or
enter
nop
push
mov
adc
mov
mov
mov
std
inc
nop
jge
add
push
sub
jecxz
pop
clc
cmc
fidivl
jmp
xchg
pop
inc
sub
adc
sbb
mov
sub
ret
or
rcrl
aad
test
adc
lea
add
inc
xor
les
aaa
loopne
jmp
lea
mov
ret
adc
sub
test
push
addb
test
mov
iret
push
clc
stc
cmp
outsb
dec
xor
sub
push
or
enter
enter
lret
inc
pop
je
rep
xchg
jg
sub
cmp
dec
add
neg
add
push
push
sbb
push
xchg
mov
push
ret
push
lea
das
adc
mov
and
sbb
les
loope
cld
xor
shl
sbb
je
int
mov
pop
mov
in
lret
shl
sbb
or
inc
int
movnti
or
stc
lock
call
rclb
inc
int
cmc
aaa
xor
enter
shrb
push
int
mov
sbb
or
in
les
into
push
pop
int3
insb
pcmpeqb
or
and
adc
and
int3
or
hlt
adc
or
shrb
inc
aaa
or
cmp
or
xchg
std
jmp
aad
and
inc
add
es
pop
icebp
lock
mov
and
call
sbb
jl
enter
and
sbb
mov
cmp
adc
xchg
adc
fiadds
ret
je
stc
inc
inc
jle
imul
ret
jge
rclb
sub
cmc
ja
gs
je
mov
int3
or
sbb
mov
or
subl
pop
xchg
and
fnstcw
mov
or
push
jg
je
xor
out
addr16
ss
repz
jle
jg
or
scas
cltd
adc
or
add
xor
or
or
adc
rorb
ror
test
es
jge
repz
and
add
jg
push
push
data16
jnp
mov
pop
jmp
ret
push
or
cmp
insl
test
push
das
andb
ret
mov
mov
xchg
mov
mov
sahf
repnz
pop
fldz
ret
aad
sbb
adc
js
push
push
or
push
pop
daa
jno
mov
fcoml
loopne
aas
daa
adc
mov
iret
adc
in
es
xor
jp
repnz
or
xchg
loope
sub
mul
or
add
fnclex
int3
in
cmp
rclb
filds
inc
insb
or
sbb
push
add
cmp
jmp
push
fstps
mov
xor
rcll
dec
adc
sarb
sub
rcrb
mov
ficompl
ret
jne
fxch
sub
add
mov
adc
mov
aas
and
xchg
aas
fs
sbb
mov
lods
fs
arpl
push
insl
or
pop
pop
dec
xchg
imul
bound
pop
xor
pop
daa
push
mov
das
and
test
cmp
lret
dec
cmp
inc
sarb
repz
inc
insl
pop
pop
push
pop
adc
add
cld
stos
mov
inc
outsb
ljmp
mov
cmp
and
addr16
push
in
ret
out
or
clc
dec
je
or
pop
cmp
sahf
movsb
repnz
jo
cmpb
xor
and
adc
inc
pusha
xorb
adc
and
shll
scas
mov
ret
or
xor
xor
int3
out
sbb
orl
in
and
or
xchg
push
pop
jb
out
sbb
fs
fmuls
and
add
sub
mov
cmp
and
push
xchg
test
pop
cmp
adc
mov
fmuls
and
sarl
outsb
mov
sbb
add
xor
push
mov
out
into
ret
cwtl
pop
loopne
xor
fisubl
push
dec
cmp
jno
cmc
test
pop
push
sbb
adc
cmp
pop
or
js
sub
pop
ret
or
add
push
dec
inc
sbb
leave
pop
sbb
movsl
sbb
adc
sbb
fnstcw
mov
jge
or
and
or
ja
pop
leave
rol
cs
cmpsb
jl
mov
cmp
mov
add
les
cmpl
sarb
cmp
push
or
xor
dec
push
xor
int
inc
addr16
adc
xor
sahf
add
inc
or
jne
sub
jbe
sbb
pop
xchg
mov
jle
movsb
es
in
or
mov
mov
push
jmp
lahf
js
mov
and
or
scas
popa
and
fld
sub
dec
jge
pop
cmp
xchg
test
aaa
xor
arpl
inc
shrb
lock
jne
pop
dec
sbb
aam
cmp
dec
mov
hlt
add
fcom
cmp
clc
cld
cltd
sub
jecxz
popa
lock
and
push
bound
adc
inc
hlt
ror
mov
fiaddl
push
insb
push
pop
and
aad
mov
inc
test
leave
xchg
mov
lcall
mov
arpl
cld
push
push
push
dec
aam
jmp
add
clc
in
fsubrs
lea
xor
imul
dec
sahf
xor
inc
xor
sbb
outsb
std
add
pop
call
jmp
fs
icebp
gs
inc
movsb
adc
mov
push
push
add
fwait
cmp
pushf
jnp
and
dec
sub
push
inc
add
or
pop
mov
xor
push
push
cltd
and
movsl
fwait
or
cmpsb
data16
push
lea
push
repnz
loope
rcrb
das
cmpb
movsl
lds
jno
pop
sub
mov
push
mov
loopne
popa
movsb
subl
dec
cmp
int
dec
cld
pushf
inc
dec
mov
je
or
or
adc
jmp
push
sbb
cmp
jb
mov
xor
loopne
mov
and
outsl
push
dec
xor
mov
jnp
clc
popf
add
adc
adc
shll
or
jg
add
test
pop
add
add
or
je
es
adc
shr
clc
inc
jl
sbb
adc
push
adc
jp
push
rorb
sbb
loopne
xchg
add
je
mov
mov
ds
out
push
repz
xor
adc
into
sub
adc
mov
fsts
js
out
push
ljmp
popf
jmp
add
mov
mov
mov
cwtl
icebp
sbb
inc
add
je
test
sub
adc
mov
arpl
or
jg
sub
dec
sarl
and
or
addb
mov
cmp
pop
jne
neg
pushf
leave
mov
cs
mov
into
or
inc
cltd
enter
cmp
in
push
iret
xlat
adc
ds
inc
or
pushl
adc
or
add
insb
sbb
je
or
testl
inc
lahf
lret
pop
or
cmp
scas
movups
mov
cmc
inc
les
mov
xchg
div
loop
push
je
sub
push
cld
jmp
movsl
jle
jns
add
mov
add
and
jo
stc
sub
mov
in
add
jge
cwtl
jle
add
add
into
clc
jmp
cmp
dec
cld
jb
push
shl
or
pop
adc
xchg
sub
or
xlat
bound
and
shr
fsubrs
jmp
out
adc
cmp
add
inc
aam
gs
fisttpll
pop
mov
shr
push
orl
sbb
sub
pop
outsb
jmp
and
fldz
aas
lods
insl
add
xchg
stos
hlt
adc
push
addr16
fisttps
sbb
and
add
fs
in
inc
pushf
loopne
xchg
push
arpl
cmc
ja
ret
pop
jge
jns
pop
cmp
repz
mov
jmp
lcall
roll
cmp
and
push
lea
sbb
jae
sub
test
sbb
jp
dec
je
xchg
dec
mov
push
adc
jne
sbb
push
mov
jne
inc
push
xor
adc
je
or
sbb
aas
jmp
inc
xor
add
ja
test
inc
repz
mov
push
and
sbb
inc
add
xchg
out
cmpsl
filds
inc
cs
enter
inc
pop
pop
or
xor
bound
orb
ret
or
and
loope
cmp
push
or
fmuls
mov
rcl
movsl
aaa
pop
xchg
push
jg
pushf
jne
mov
out
test
ret
dec
test
sbb
push
pop
lcall
adc
fildl
mov
inc
les
xchg
test
sbb
xchg
icebp
jns
adc
jmp
or
shr
inc
das
sbb
or
or
jmp
in
fadds
or
jne
div
inc
pusha
lods
jbe
enter
ret
pop
jb
cmp
push
ja
push
wrmsr
pop
jbe
dec
sub
sbb
sbb
fistl
fidivl
mov
dec
rorl
loope
inc
loop
inc
xchg
inc
lea
movsb
jge
inc
mov
mov
pop
push
sar
xor
and
push
fmuls
inc
adc
xchg
adc
adc
push
lea
fxch
mov
or
xchg
enter
push
adc
dec
lcall
mov
mov
cltd
nopl
add
test
xlat
xchg
adc
mov
cmp
daa
jne
inc
rcrb
xchg
call
pop
cmp
cmp
inc
ds
sti
jae
leave
adc
pop
or
mov
and
sub
cmpsl
call
cmp
into
dec
adc
fistps
add
rcrb
incl
les
mov
sarb
jne
out
sbb
out
repnz
loope
lock
push
cmp
xlat
sub
mov
jnp
xchg
mov
push
sub
mov
inc
sbb
rorl
xor
push
xor
or
sub
cwtl
pusha
or
add
jmp
call
dec
adc
flds
lods
sub
ds
jbe
lds
sub
lds
adc
sbb
push
or
cltd
add
mov
cmp
ret
push
pop
movsb
adc
and
mov
cmp
push
jne
push
ljmp
lea
inc
xchg
imul
push
inc
test
je
jmp
lret
sub
add
add
jl
aam
jg
sbb
jmp
or
leave
cmp
es
push
cmp
jb
scas
adc
icebp
jbe
sahf
pop
jmp
xchg
imul
inc
loope
sahf
add
das
jne
and
movsb
xor
jmp
sub
sub
mov
cmp
mov
mov
or
stos
push
or
xorb
shlb
rolb
mov
sub
mov
cld
addb
pop
neg
sbb
mov
push
push
ljmp
mov
add
pop
and
xor
and
add
pushf
or
clc
dec
inc
fstpt
and
sbb
cld
push
addl
cwtl
and
roll
dec
push
sti
pusha
pop
dec
or
divb
sub
mov
or
bound
adc
cmp
testb
inc
push
jns
dec
push
cmpsb
or
dec
std
mov
push
push
push
or
dec
push
sub
fs
pop
leavew
cwtl
or
ljmp
insb
out
jb
adc
xor
pop
daa
mov
jb
xor
nop
or
inc
jo
scas
or
imul
iret
lret
push
or
stos
outsl
hlt
jno
add
adc
aam
cmp
ljmp
or
repz
pop
mov
jmp
sub
push
sub
xor
cltd
inc
add
frstor
mov
mov
stos
mov
ret
shll
push
rcrl
or
lret
pushf
xchg
jp
push
adc
popa
ds
push
push
fistpll
xchg
push
push
fbstp
cmp
or
sub
pop
and
mov
inc
adc
sar
shrb
testb
xorb
mov
pop
pop
std
incb
pop
jmp
mov
dec
or
xor
dec
clc
push
push
mov
and
push
mov
rolb
notb
sbb
dec
stc
outsl
lar
or
fildl
and
inc
jl
rorb
lea
jle
add
push
sub
inc
jnp
ljmp
mov
mov
sbb
out
add
mov
cmp
es
test
iret
fcoms
mov
adc
or
cltd
xor
push
or
xor
xor
jb
loop
inc
push
adc
and
pop
lcall
and
push
inc
cld
cmp
fdivs
xchg
out
or
mov
lods
xchg
out
mov
inc
adc
aam
xchg
rcrl
pop
jo
pop
std
cld
adc
mov
cmp
inc
cmc
mov
sbb
sub
aaa
push
mov
xchg
or
mov
and
mov
rep
xor
inc
sub
push
iret
mov
shl
ljmp
or
inc
bound
pop
imul
test
testb
add
xor
mov
sbb
shll
add
mov
test
jne
or
sbb
xor
mov
or
loopne
lds
in
inc
cmpb
popa
jecxz
add
jl
fst
push
add
sub
neg
pop
push
sbb
and
mov
inc
pop
imul
fsts
movsb
push
and
ret
fcomp
popf
add
lock
ret
enter
mov
pop
insb
xchg
lret
pop
push
push
add
inc
cmp
fldl
leave
stos
push
adc
or
icebp
add
jmp
stos
cmp
lods
xor
scas
lret
pop
sbb
sar
sbb
pop
je
nop
and
cld
dec
pop
bound
cmpsl
sbb
pop
sub
insb
int3
pushf
loopne
and
std
dec
mov
pop
dec
ja
or
jle
pop
ficomps
lds
mov
and
jns
inc
lcall
push
adc
daa
xchg
fldenv
inc
xchg
add
dec
stos
add
cmpsb
mov
inc
leave
cmp
ja
add
not
and
push
pop
loope
jg
insb
call
dec
adc
cmpsb
mov
xor
int3
mov
push
scas
mov
mov
add
pop
dec
out
or
xchg
rcll
ljmp
sub
xchg
xor
gs
mov
mov
pop
jae
imul
fs
shlb
push
sbb
cmp
dec
xlat
push
aas
dec
dec
or
inc
push
pandn
sbb
rorb
push
mov
cmc
sub
call
push
mov
inc
adc
add
jae
jecxz
sub
mov
or
xchg
pop
enter
adc
xor
and
push
push
pop
or
mov
add
ret
inc
fwait
pop
jmp
mov
and
add
hlt
and
setl
cld
xchg
sub
shrb
pop
jb
cmpb
jne
and
adc
sub
adc
imul
js
inc
xchg
jmp
mov
jp
mov
xor
mov
dec
mov
es
and
nop
add
dec
inc
jmp
cmpb
xor
or
mov
inc
sbb
lea
sub
cmp
jle
xchg
iret
inc
push
test
sbbl
cld
nop
fucomp
inc
xchg
call
loopne
mov
test
adc
test
sub
mov
sti
jb
ja
add
fsts
sbb
sub
or
jae
lock
push
dec
dec
push
loope
add
mov
sub
inc
pop
sub
cltd
and
and
sbb
lret
push
mov
sbb
pop
xor
ret
jmp
fiadds
mov
inc
xchg
repz
std
loop
pop
js
pop
mov
inc
js
mov
or
test
js
mov
lret
adc
mov
jae
cmp
cmpl
jno
in
daa
add
inc
add
mov
mov
push
clc
je
movsl
pop
xor
int
jno
rol
or
inc
jmp
adc
rcl
test
popf
pusha
pop
inc
sbb
and
and
dec
scas
and
dec
loopne
jmp
mov
fs
push
push
rcrb
mov
nop
sbb
inc
mov
lahf
push
pushf
mov
lret
add
mov
lock
push
les
cmp
sub
mov
or
mov
or
jbe
or
out
jnp
or
adc
adcl
orl
pushf
ret
sbb
cmp
add
cmp
jne
cld
dec
cmp
add
mov
push
inc
jp
add
mov
sbb
pop
push
inc
add
add
inc
xchg
push
jbe
jge
adc
or
jns
and
test
add
in
and
dec
jmp
sbb
cmc
sub
push
idivl
loope
das
inc
shll
push
xor
in
adc
adcl
cmp
and
push
sahf
cwtl
bound
cwtl
and
dec
xchg
js
add
pushf
mov
fadds
adc
xchg
push
add
nop
out
dec
cmp
movl
roll
jmp
or
cmp
loopne
push
data16
popf
data16
mov
cmp
xchg
sub
je
pop
xchg
test
jp
or
or
push
push
roll
mov
das
sahf
or
pop
shl
or
bnd
test
test
cmpsl
dec
xchg
adcb
adc
sbb
and
inc
popf
sbb
ss
xor
inc
in
jnp
mov
in
mov
mov
enter
aam
mov
adc
xchg
adc
pop
lods
pop
inc
adc
dec
daa
enter
fcmovb
jns
mov
push
ds
push
add
dec
xlat
les
push
push
xor
jge
in
in
daa
cmp
cmc
dec
cmp
or
js
inc
pop
pop
lea
enter
mov
ret
testb
je
ja
pusha
adcb
mov
xor
jo
adc
push
jge
cmp
aaa
mov
or
lods
sub
pop
dec
add
ret
cmpsb
push
cmpsl
xlat
add
testb
dec
inc
imul
add
or
sub
xchg
cmp
mov
lea
pop
add
push
jbe
out
or
adc
dec
pop
inc
fisttpll
mov
pop
scas
inc
adcl
or
jg
jne
sbb
add
jmp
mov
add
mov
iret
xor
pop
jg
jg,pt
cmc
xchg
std
lods
in
sub
shll
jg
adc
xor
gs
sbb
mov
mov
popa
repnz
stos
add
mov
adc
push
clc
lahf
mov
xorl
cmp
xor
js
incb
cmp
jp
ret
rcrl
in
push
nop
jno
add
repnz
mov
ja
out
cmp
shll
xchg
push
pushf
subl
in
les
cmp
or
mov
pop
dec
imul
push
or
les
sub
sbb
add
sub
fisubrl
test
mov
add
pop
in
inc
jg
popa
shr
lea
pop
aam
mov
sub
inc
inc
rolb
and
and
dec
jo
push
mov
sbb
sbb
or
and
insb
mov
or
int
adc
mov
int
adc
and
movsl
shrb
jg
jmp
mov
fs
sbb
xor
jg
popa
roll
mov
and
test
and
cltd
add
nop
test
adc
adc
das
dec
xor
das
sbbb
cmpsl
inc
jne
mov
push
xchg
or
dec
sbb
xchg
mov
clc
addr16
in
and
loope
pushf
enter
adc
inc
adc
int
pop
and
or
lret
sub
push
xor
jne
cmovns
imul
add
mov
jno
and
or
xchg
pop
sub
push
adc
mov
adc
inc
xchg
jecxz
and
ret
and
sub
mov
enter
and
lds
push
and
loop
dec
jge
jo
je
int
out
push
cli
and
add
xor
adc
push
inc
pop
je
into
or
movsl
rorl
xor
int
jle
inc
mov
pop
movsl
mov
test
les
add
mov
xchg
add
insl
push
xor
push
rcrb
jg
jae
arpl
je
testb
pushf
mov
adc
clc
add
mov
int
or
enter
and
shlb
cwtl
jl
addr16
aaa
dec
mov
jle
add
ret
fsts
sbb
mov
add
sbb
dec
lea
cmp
sub
cwtl
or
or
sbb
ljmp
jge
mov
out
and
push
lea
and
push
pop
nop
pop
or
push
inc
loopne
ds
inc
dec
scas
jne
stc
adc
sarl
add
pop
icebp
inc
and
pop
pop
and
andl
cmp
sub
movsl
xchg
inc
jmp
inc
daa
ja
dec
cmpw
push
jno
xchg
sub
sub
xchg
inc
nop
enter
dec
adcb
and
das
or
and
je
arpl
movsl
dec
adc
int3
pop
rorl
test
mov
lods
add
sub
ficompl
sbb
xchg
inc
and
je
or
sbb
jmp
imul
popa
in
mov
aas
and
inc
lea
inc
cltd
jmp
fnsave
and
xor
sbb
adc
jl
call
movsl
pushf
cmp
jne
insb
mov
cli
or
xor
adc
adc
add
neg
or
xchg
cs
lods
mov
or
js
jg
mov
and
stos
es
lock
sbb
fdivrl
and
jmp
lea
cmp
movb
add
bound
int
mov
stos
lcall
push
movb
inc
cmp
xchg
pushf
notb
push
mull
ret
xchg
jl
lods
mov
mov
rorb
cmp
and
add
mov
sub
push
mov
lea
rolb
push
mov
and
mov
inc
mov
in
or
shrl
push
xor
xorl
dec
push
or
jle
inc
in
lea
leave
xor
add
stc
enter
pop
inc
pop
in
pop
jle
sub
jmp
orb
lret
in
popa
mov
pop
and
add
popf
cmpsl
mov
mov
in
jle
hlt
gs
push
and
pop
cmp
cmp
pop
pop
or
xor
add
ret
aaa
lock
loopne
fs
or
inc
adc
or
pop
and
or
or
pop
or
test
dec
pushf
pop
jo
and
inc
push
jae
out
pop
sub
cmovp
or
or
cmp
jle
push
lea
loopne
int3
fstp
push
nop
popf
lds
fdivs
sahf
inc
or
sub
jl
push
imul
push
dec
adc
push
test
pop
adc
or
fwait
mov
cmp
inc
test
inc
notl
mov
and
inc
iret
inc
lret
pop
ss
mov
pop
and
xor
jno
outsl
test
lods
sbb
mov
push
and
in
jmp
lods
lcall
and
stc
aaa
xor
cmc
pop
and
sbb
dec
sbb
pop
adc
push
imul
push
jnp
jae
add
outsb
cmp
out
push
push
ret
fmuls
jp
mov
mov
in
sub
cmp
ucomiss
or
jb
or
dec
nop
adc
push
jae
pop
shlb
ss
add
mov
lock
les
movsl
push
xchg
popf
and
pop
or
gs
xor
xchg
and
leave
or
out
or
inc
cmpl
sbb
cmp
out
fimuls
xor
or
decb
aam
rcrb
inc
xchg
lea
jbe
and
mov
cmc
sub
int3
lea
push
test
popf
sarb
sbb
pop
cld
std
les
jmp
inc
or
nop
pusha
jnp
sbb
mov
fiadds
dec
or
ds
rolb
clc
outsb
je
into
or
sub
jnp
aaa
outsl
and
mov
push
xor
xchg
lods
lahf
aam
jmp
mov
xchg
int3
movsb
outsl
adcl
adc
std
push
xor
push
jle
inc
dec
and
daa
mov
push
dec
or
shl
fldcw
fs
out
xorb
sub
xchg
gs
lea
loope
push
mov
mov
test
or
and
mov
leave
lock
fmuls
fstl
push
or
fisttps
push
or
push
mov
pop
xchg
inc
insl
insl
and
aad
adc
lea
stos
cmp
jl
mov
mov
push
mov
inc
aaa
and
sbb
addb
mov
xchg
gs
insb
inc
nop
data16
jle
shll
inc
xchg
adc
push
gs
stc
dec
jnp
stos
movsl
mov
in
cmp
and
adc
cmp
sub
enter
or
in
dec
nop
mov
push
push
mov
xchg
or
adc
adc
pop
dec
leave
cmp
int3
sub
movsbl
xor
adc
mov
inc
jl
aad
adc
sub
outsl
nop
enter
mov
xchg
mov
or
add
mov
dec
pop
or
mov
cmp
inc
sub
sub
cmp
or
or
test
imul
adc
mov
imul
jae
or
lea
mov
insl
push
sbb
xchg
dec
adc
and
ja
sahf
pop
in
cmp
sbb
xchg
daa
inc
ficompl
add
cmp
mov
es
or
dec
sahf
arpl
repnz
adcl
xor
mov
movsl
mov
sub
nop
jne
cmp
add
inc
or
jmp
out
cmp
sbb
cmc
mov
inc
pop
cmp
jae
ret
shr
or
jp
shlb
sub
repnz
rorb
sbb
sub
mov
mov
into
and
add
adc
lea
adcl
xchg
test
sub
sub
or
mov
sub
push
fmuls
in
repz
cmp
dec
pop
repz
adc
push
and
add
nop
cs
cmc
arpl
or
lock
or
cmp
jnp
xchg
add
xor
inc
shl
adc
pop
stc
adcl
or
mov
xor
test
xchg
cwtl
imul
daa
nop
sbb
test
xchg
rorb
mov
dec
cmp
push
lea
cmp
cmp
icebp
or
dec
push
mov
ja
mov
inc
gs
lret
ret
in
or
insb
add
push
xchg
xor
lds
xchg
xor
pop
dec
jo
xor
pop
stos
dec
popa
dec
or
sub
adc
push
push
insb
daa
push
sbb
xchg
pop
mov
in
lods
push
mov
xor
sub
push
in
or
xchg
lahf
bound
jge
pop
js
sub
insb
out
sub
push
xchg
clc
and
jbe
mov
inc
and
push
fildll
daa
inc
and
lcall
mov
pushf
cmc
imul
jmp
add
cmp
dec
cmp
test
jle
xchg
push
xor
and
jo
jnp
pop
push
xor
outsl
jne
sub
xchg
and
push
fists
pop
pop
shld
and
adc
leave
cmpsl
mov
or
dec
push
xor
int3
jo
and
dec
cmpsb
mov
inc
add
xor
mov
stc
adc
out
loop
inc
push
incb
add
adc
xchg
dec
test
push
pop
and
repnz
mov
imul
mov
adc
push
fnstenv
push
xchg
inc
or
je
mov
pop
xchg
mov
push
add
in
add
dec
lock
mov
shrl
loopne
or
cmp
adc
aas
lahf
movsb
inc
push
and
inc
sbb
mov
add
cli
fs
test
lods
push
jmp
push
sub
ds
mov
and
adc
pop
test
add
adc
stos
pop
fisubrs
lret
in
test
xchg
xchg
mov
repnz
mov
xor
jne
xchg
inc
jns
push
dec
mov
je
mov
aaa
sub
sub
cmp
and
ds
and
or
outsb
jmp
and
pop
adc
jle
mov
inc
or
testl
out
or
int3
outsl
mov
jo
adc
movsl
sbb
rcll
pop
xchg
add
fs
jb
fstl
lods
adc
js
jmp
scas
test
cli
mov
cmp
filds
cmc
xor
in
rcrb
add
sub
jne
imul
das
jp
dec
xcrypt-ctr
cmpsl
sbb
xor
xchg
ret
push
sbb
out
cmpsl
jnp
insb
fwait
adc
test
andl
or
mov
mov
add
gs
mov
or
ljmp
inc
push
sub
cmp
pop
add
cmp
je
scas
xor
repnz
cmp
mov
sub
add
shr
dec
and
orb
mov
mov
push
dec
push
jns
adc
push
cmp
xor
push
lea
mov
stc
push
hlt
aam
cld
iret
or
js
test
cmp
or
je
push
cli
add
addl
pop
mov
cmp
push
bound
and
sbb
dec
sbb
and
pushf
or
stos
sbb
lea
sbb
pushf
mov
push
and
outsb
rcrb
xchg
add
mov
adc
or
xor
pop
clc
movsl
hlt
or
xchg
sub
ret
and
imul
pop
cmp
jbe
mov
xchg
nop
clc
ss
fcmovnbe
xorl
fidivl
je
ret
jno
into
or
push
sti
and
mov
shr
not
and
dec
add
jne
xchg
add
jmp
lea
push
sbb
and
inc
pop
mov
xchg
mov
or
pop
loopne
bound
pop
mov
outsb
orb
mov
subl
dec
pop
or
pop
ja
enter
jne
dec
mov
inc
dec
inc
sbb
jae
cmpb
push
and
push
inc
ss
or
or
pop
push
inc
test
sbb
sub
adc
push
es
and
cmpsb
mov
push
ret
inc
xor
daa
decl
data16
dec
mov
fsubrl
xchg
and
xchg
dec
clc
mov
add
or
mov
xchg
and
xor
push
in
inc
jnp
andl
in
inc
movsb
or
jo
jns
cs
popf
pusha
sub
adc
js
add
imul
mov
adc
adc
jnp
imul
jecxz
add
shl
mov
repz
in
push
scas
movsl
adc
rorb
jbe
xchg
or
and
dec
push
insl
push
adc
push
int
mov
push
cmp
mov
push
xor
jne
nop
push
aaa
mov
dec
stos
xor
out
test
insb
test
or
push
push
or
outsl
push
mov
hlt
data16
mov
cmp
jmp
push
or
cmp
mov
cmpsb
push
cwtl
dec
dec
adc
add
rolb
mov
lret
mov
orl
sub
fs
into
into
cld
xchg
sbb
xor
cwtl
insl
daa
shl
loopne
jge
inc
jbe
mov
mov
clc
pop
rolb
lret
push
add
xor
adcl
sti
xor
shl
nop
push
addb
xchg
gs
int3
cmp
sbb
lea
out
add
inc
pusha
insl
sub
add
jmp
inc
sbbl
in
cld
nop
cld
jns
cld
jle
push
lock
jp
xor
call
push
mov
cmpsb
clc
out
push
hlt
orb
mov
or
xchg
pop
fs
inc
or
cmpsl
pop
mov
inc
jae
pop
enter
rolb
dec
lret
clc
movsl
es
insb
imul
jnp
scas
mov
in
aad
dec
or
xlat
sub
fsts
shr
lret
rcll
cld
lods
repnz
icebp
push
das
inc
lods
pop
and
mov
imul
cmovne
adc
fld
scas
cmpsb
adc
stc
add
addl
adc
jbe
or
pop
adc
addl
mov
cwtl
lea
enter
pusha
pop
add
adc
cs
nop
jmp
dec
fldt
popf
mov
iret
push
jg
pop
jns
add
out
jb
adcl
push
incl
orl
and
hlt
and
jns
push
pop
inc
mov
or
jl
mov
or
push
dec
and
inc
adc
mov
or
inc
and
dec
or
mov
and
and
cs
inc
stc
test
lods
cs
push
ret
nop
or
outsb
xor
jp
out
and
inc
jg
inc
and
mov
dec
fstl
lea
dec
sbbl
xor
outsb
pop
xor
xchg
incb
addl
mov
call
pop
test
adc
jb
pop
push
inc
into
je
push
jo
push
pop
pop
fs
xor
inc
insl
insl
dec
jo
xchg
je
fidivs
aam
or
inc
or
rolb
sub
inc
dec
out
xchg
pusha
mov
sub
push
movsb
cmp
movsb
into
mov
cmp
into
inc
adc
push
nop
dec
hlt
clc
cmpsl
and
inc
adc
mov
jno
adc
cmp
mov
lock
ret
lcall
js
adc
mov
sahf
or
into
call
out
lods
les
adc
push
jnp
leave
xor
shr
jmp
call
jmp
scas
enter
dec
cwtl
decb
iret
arpl
ret
adc
sbb
or
adc
jne
rcrb
push
adc
enter
or
aaa
cli
aad
dec
push
inc
mov
xchg
or
ljmp
mov
ja
jl
sbb
ss
push
adc
push
sti
push
dec
and
xor
inc
orb
fbstp
jl
sub
cmpsb
cltd
rcr
test
je
aam
lret
mov
dec
stos
pusha
pop
and
jne
data16
push
add
pop
cmpl
xor
push
sahf
mov
mov
xchg
or
inc
mov
xchg
es
mov
and
stc
sub
jmp
jbe
push
lret
insb
popa
cmp
and
loope
dec
xchg
dec
xor
push
inc
push
or
push
push
es
jle
inc
cmp
inc
maskmovq
notl
out
dec
xor
into
add
mov
bound
in
adc
mov
in
and
or
pcmpeqw
xor
rclb
or
pop
sub
inc
daa
daa
mov
xor
cs
enter
xlat
ss
push
jmp
mov
inc
clc
rcll
sbb
jecxz
adc
dec
mov
dec
or
push
test
or
cwtl
xchg
pop
bound
and
pop
cmp
or
repz
bnd
test
or
or
stos
adc
or
loopne
pusha
outsl
or
adc
jmp
adc
sub
xor
xchg
hlt
jmp
and
in
sbb
dec
sbb
cltd
fdiv
jnp,pn
pop
data16
and
inc
add
cld
mov
or
testb
adc
idivl
lcall
jmp
mov
cmp
push
jg
xchg
xorl
sbb
mov
xor
add
shr
jp
nop
mov
cmp
call
xor
fsubl
pop
insb
mov
faddl
adc
loope
es
sbb
mov
and
push
clc
jb
dec
inc
or
sbb
clc
pushw
sbb
dec
test
orb
hlt
and
mov
mov
fstpl
jmp
es
or
mov
xor
push
lea
adc
push
jecxz
and
leave
sbb
cmc
test
pop
dec
cmp
inc
or
xor
and
and
sub
pop
test
or
dec
sbb
sbb
fisubrs
or
cmp
mov
push
cmpsl
clc
adc
adc
and
pop
ret
mov
and
mov
hlt
sbb
cmp
mov
jl
push
jns
xor
cmp
adc
and
fwait
ret
sti
and
pop
sbb
out
jg
test
movsl
xchg
inc
mov
cmpsl
add
xchg
jle
inc
mov
inc
hlt
outsb
xchg
test
push
pop
push
dec
cli
push
sub
in
jno
shll
cld
out
lcall
push
inc
shll
push
push
cwtl
push
in
call
pushf
or
mov
xor
jnp
add
shll
movb
mov
and
mov
or
add
add
push
loope
mulb
iret
add
mov
push
push
lahf
add
in
xor
or
push
xor
les
lods
inc
cld
clc
cmp
adc
shl
ljmp
idivl
roll
adc
or
jne
faddl
add
into
jmp
jno
std
sub
les
inc
xor
icebp
hlt
testb
push
and
sarl
adc
adc
call
stos
sbb
sbb
push
mov
cmp
add
push
and
sub
lret
cmpsl
push
xor
inc
push
ds
and
or
fiaddl
jmp
inc
jp
scas
inc
inc
clc
and
lret
inc
repz
sbb
imul
fcmovbe
das
hlt
pop
rclb
mov
sub
fnstenv
jne
mov
xchg
or
inc
stc
cmc
int
rorl
inc
in
repz
mov
stc
jle
mov
pop
cmp
je
inc
or
push
add
jmp
cmp
ja
pop
inc
pop
sbb
nop
xchg
jg
aas
cmp
mov
add
mov
inc
inc
sub
mov
pop
add
dec
nop
mov
fcompl
test
jne
pop
mov
in
out
dec
lock
in
test
stos
xchg
jo
dec
or
dec
add
out
xor
sbb
push
sub
test
std
adc
je
clc
add
inc
push
rolb
testl
cmpb
push
push
je
pusha
jbe
push
test
comiss
cmp
test
ja
mov
gs
icebp
int
xor
inc
push
push
lea
push
stos
or
ficompl
xor
push
xchg
nop
dec
lcall
sbb
cmp
inc
jle,pt
lea
js
mov
cli
sub
mov
adc
insb
cmp
mov
push
jle
enter
or
jne
jecxz
iret
enter
inc
hlt
jmp
add
add
jns
neg
xchg
sub
jl
cltd
jne
jg
jo
incl
and
or
cmp
hlt
adc
sub
jo
and
push
or
xor
mov
dec
and
fsubr
sub
sub
jns
fwait
incl
mov
idiv
ret
negl
sub
pop
push
movb
lea
pop
push
adc
call
lds
movb
pop
jmp
add
jle
cmpsb
pop
mov
cmp
addl
xchg
cmp
xor
or
add
in
pop
rcr
daa
pop
fsubl
daa
fstpt
mov
push
jmp
lcall
dec
mov
rclb
fcoml
movsb
in
dec
add
fdivl
xor
xchg
aaa
add
sub
add
dec
cld
mov
or
cmp
ret
jge
inc
or
jmp
mov
scas
add
cmpsb
add
xchg
push
fadds
jmp
sub
inc
and
sbb
out
adc
and
or
sbb
ret
or
jno
add
sbb
roll
jmp
mov
mov
push
ret
jle
xchg
pop
add
mov
add
dec
sub
and
fdivl
insl
mov
cmp
js
bound
sub
sub
or
mov
pop
fbld
rcll
rol
ror
ret
decb
inc
lea
cld
insb
js
cmp
ffree
je
cmp
push
push
aam
pop
shrb
push
les
mov
rdpmc
or
into
xor
aam
add
cmpl
je
adc
inc
daa
xor
enter
xchg
dec
jae
fists
ljmp
nop
inc
dec
cmp
push
je
mov
jle
add
ljmp
mov
bswap
dec
xor
jge
mov
cmpl
sbb
int3
pop
push
inc
jmp
add
xor
orb
or
sbb
add
std
outsl
xchg
mov
jmp
lods
aas
mov
rcrb
in
cmp
push
decl
aam
movsl
mov
mov
dec
fiadds
push
pop
adc
dec
das
ret
ficoml
push
jp
aam
ret
or
jge
decl
add
or
xor
xor
or
add
inc
rcrl
inc
push
cmp
mov
popf
loope
enter
mov
mov
and
mov
adc
and
aam
adc
stos
mov
xor
insb
sbb
js
dec
jg
mov
sub
push
loopne
and
or
stos
pop
icebp
and
xchg
pop
and
sub
nop
adc
add
or
mov
mov
and
pop
fcoml
and
cs
hlt
inc
xchg
jns
and
gs
adc
adc
push
aam
rorb
or
and
xor
xchg
imul
or
mov
pusha
jno
jle
cmp
cmp
push
sub
xor
adc
imul
enter
xchg
es
mov
daa
arpl
or
imul
jmp
xor
or
cmp
les
and
shlb
cmpl
jle
fstpt
sar
cmp
dec
aam
popf
imul
mov
sbb
pop
and
cs
int
mov
dec
ret
or
mov
inc
cli
cltd
aaa
daa
rorb
push
in
adc
aas
mov
or
inc
add
jg
js
mov
sub
sbb
je
xor
mov
dec
in
mov
jl
inc
in
inc
mov
mov
lea
inc
or
pop
les
lds
enter
fs
push
out
addr16
jle
push
add
lahf
inc
mov
mov
xchg
sub
sti
sub
dec
mov
jae
outsl
push
jg
push
dec
adc
pop
xor
inc
fstps
inc
or
mov
add
adc
inc
inc
xchg
xor
cli
push
mov
dec
rclb
int
adc
stc
pushf
dec
int3
inc
aas
or
fisubs
and
mov
aaa
clc
xchg
leave
push
lcall
aam
push
and
mov
or
sbb
rclb
xchg
inc
mov
test
das
or
rcrb
push
cmpsb
adc
mov
test
je
push
and
adc
cli
mov
les
stos
mov
insl
fisubrl
dec
inc
les
in
sub
cmp
jae
jbe
pop
aaa
jl
inc
jmp
mov
and
push
inc
das
hlt
add
inc
sbb
iret
mov
pop
lock
xor
outsl
and
xchg
cwtl
sbb
inc
push
jb
pop
lahf
ficoms
and
lea
psubusb
cmp
fldl
mov
inc
cmp
cmpsl
gs
inc
seto
addb
adc
pop
pop
mov
fldenv
insl
dec
xor
arpl
push
pop
mov
jae
or
insl
cltd
mov
xor
mov
pop
mov
mov
or
leave
inc
and
mov
in
jne
fldl
dec
hlt
popa
loope
hlt
and
pop
loopne
mov
mov
cmp
cmpsb
popl
outsb
adc
or
cli
mov
jle
mov
add
lea
imul
into
and
jle
mov
ds
jge
and
sbb
xor
filds
iret
push
call
mov
icebp
mov
jnp
clc
add
bound
mov
or
lods
sub
mov
pop
cmp
loopne
mov
dec
push
ja
dec
mov
gs
movsb
sub
outsl
dec
sub
inc
cmpsb
and
jmp
adc
and
push
and
stos
xor
pop
xchg
pop
adc
ret
outsl
mov
push
imul
jno
jmp
mov
add
sub
js
and
or
sbb
and
mov
sbb
into
idivb
roll
pop
push
adc
cmp
pop
dec
xor
push
mov
adc
add
call
mov
xchg
iret
sbb
pop
sub
jo
inc
call
cmpsl
push
xchg
xchg
push
scas
sub
adc
push
test
insl
push
xor
mov
insb
pop
sub
es
and
and
and
pop
or
push
and
or
sbb
mov
dec
pop
popa
xchg
mov
pop
push
jmp
movsb
adc
or
push
xchg
and
rcrb
cmp
and
orl
push
dec
xor
adc
or
and
inc
or
and
rorl
mov
jbe
dec
mov
push
daa
aaa
mov
ljmp
or
test
mov
cld
add
push
fs
sbb
in
adcb
add
or
das
and
je
ficompl
pop
fwait
jge
pop
leave
and
cmp
push
mov
sub
cmp
test
movsb
or
mov
add
clc
out
pop
lea
or
add
into
pusha
testb
and
dec
adc
mov
cmp
dec
mov
nop
and
adcl
push
sbb
jp
push
cld
or
xchg
jne
xchg
pop
icebp
mov
xchg
add
sbbl
sbb
inc
push
stos
mov
jmp
adc
imul
or
pop
mov
sbbb
pushl
icebp
or
xchg
andw
sti
test
mov
mov
xchg
push
add
adc
enter
add
fistl
add
mov
jbe
mov
sarb
cmp
daa
into
or
fdivrl
pcmpgtw
std
jle
std
pop
imull
ret
cld
scas
imul
mov
shr
or
enter
imul
cmp
ljmp
inc
or
inc
dec
dec
pop
sub
push
adc
call
mov
or
mov
enter
sub
rcr
xor
inc
adc
inc
mov
pop
dec
mov
adc
jmp
push
push
out
iret
inc
add
push
sbb
stc
or
inc
cmp
cmp
mov
cwtl
xchg
mov
test
cli
bound
das
xchg
or
lods
xor
std
cmp
jle
inc
jmp
add
xchg
fcmovbe
push
addr16
pop
adcb
push
inc
mov
xorb
dec
dec
push
dec
fisubrs
sarl
dec
fimuls
and
inc
mov
add
ss
ret
lret
outsl
mov
jle
push
inc
jne
push
dec
jg
push
cmp
add
scas
xor
mov
or
stc
sub
or
leave
pop
xor
les
aam
xchg
int3
adc
mov
mov
fwait
or
mov
jge
into
movsb
jne
xor
bound
xchg
and
cmpb
mov
push
cwtl
lahf
xchg
rolb
sbb
mov
push
lea
add
inc
hlt
imul
mov
or
mov
xor
leave
xor
test
stos
aaa
cwtl
test
mov
inc
or
sbb
push
test
push
dec
lock
xor
call
mov
or
sbb
into
cld
cmp
pop
or
and
mov
enter
clc
iret
inc
adc
loope
sbb
and
outsl
or
inc
ljmp
add
dec
cmp
xor
adc
stos
enter
adcl
jmp
fnstsw
outsb
inc
xor
inc
sub
in
mov
adc
lods
nop
lea
bound
pop
lock
mov
pop
mov
add
mov
jmp
cmp
aaa
jge
mov
sbb
mov
mov
je
lret
mov
orb
and
push
inc
and
lea
push
xor
sub
jae
add
mov
or
sub
fstpt
popa
jo
push
push
cld
je
xchg
jb
js
ja
sbb
mov
or
and
into
ja
or
daa
adc
adc
inc
jmp
roll
ficompl
mov
jg
xor
fsubr
sub
inc
mov
add
or
mov
cltd
mov
ja
cltd
push
loopw
and
adc
adc
sbb
movsb
push
ret
popa
ja
mov
orb
arpl
jne
je
sahf
pop
add
bound
call
or
jne
mov
insl
pop
and
gs
sar
adc
repz
dec
test
and
xor
pop
rclb
or
xchg
or
and
leave
int
add
cmp
test
movsb
js
test
push
cwtl
mov
mov
cmp
jge
stos
jecxz
jo
adc
cmpsb
aam
mov
push
pop
add
sbb
or
push
sbb
dec
adc
pop
cmp
mulb
add
or
cmpl
inc
orb
mov
mov
xor
xorl
out
jle
hlt
shrl
mov
pop
dec
add
divl
sub
mov
insb
in
lret
or
mov
std
inc
push
daa
mov
cmp
int
add
je
inc
jo
sub
sbb
and
dec
sbb
dec
sbb
mov
mov
lret
xchg
or
lea
andl
or
mov
mov
jmp
aas
rcrl
push
rcrl
pop
fiadds
std
xor
xor
lods
sbb
and
std
jbe
cmpsb
lcall
out
xor
mov
icebp
jne
and
mov
mov
punpckhdq
push
aas
cld
xchg
xor
jecxz
pop
inc
sbb
cmp
stc
mov
into
ret
sbb
lcall
fsubp
mov
ret
sbb
addl
pop
xchg
lret
jne
mov
sub
rorl
inc
sub
rorb
fsubrl
aam
test
xor
das
enter
xchg
and
inc
inc
ljmp
daa
cs
movsl
lea
lds
push
push
rorb
mov
dec
ss
int
not
adc
les
sbb
mov
ficoms
outsb
mov
jnp
jge
ljmp
pop
decl
pusha
test
aaa
sub
pop
push
subl
stos
test
inc
or
xchg
xor
pop
mov
or
ds
mov
inc
or
add
sub
push
inc
cmp
adc
cmp
sarl
add
aas
or
aam
loopne
sti
mov
jns
into
incb
je
jg
outsl
push
aam
je
dec
jecxz
lds
mov
jmp
pop
cltd
pop
sub
in
mov
popa
ds
je
cmpsl
sub
mov
enter
mov
pop
push
das
xchg
xchg
into
ljmp
pushf
aaa
test
or
xchg
xchg
shrb
mov
dec
lds
adc
xchg
adc
fists
fdivr
sbb
dec
ret
adc
mov
inc
fcompl
fwait
repnz
cld
imull
push
jle
in
jmp
mov
mov
cmpsl
jne
and
fdivrl
sbb
pop
or
push
cmp
adc
sub
fsubrs
add
imul
dec
es
jmp
ja
aas
sbb
rorb
movsb
jmp
les
xor
cwtl
xchg
push
xor
fadds
sbb
adc
pop
sbb
jp
dec
mov
push
in
gs
jp
push
jge
and
rcrb
cmp
xchg
les
popf
movsb
stc
jb
mov
dec
mov
ret
sbb
out
popf
stc
orl
enter
mov
push
stos
sub
cli
adc
lea
push
sahf
xchg
lock
pop
cltd
or
push
add
pmulhw
lods
jle
ds
pop
fcompl
incl
add
pop
lds
pop
test
mov
ja
sbb
mov
xor
sub
int
es
in
or
jmp
mov
sbb
inc
inc
pop
push
xchg
mov
sub
xor
sbb
shrl
dec
sar
xchg
add
bnd
mov
xchg
jo
cmp
add
push
jns
lret
sti
adc
icebp
push
sbb
shrb
sub
add
and
mov
xchg
add
test
jmp
insb
or
ret
fists
aas
adcl
and
and
mov
jmp
repnz
int3
sbb
and
gs
bound
cmp
push
adc
jbe
mov
fsubl
inc
in
sub
movsl
pop
pop
enter
or
mov
adc
stc
adc
inc
ret
cmp
mov
rep
stos
push
mov
imul
or
add
mov
and
push
xor
pop
pusha
mov
sub
or
test
lahf
pop
jnp
hlt
mov
iret
rorb
adc
or
push
sbb
mov
push
sarb
shll
enter
fldcw
lea
push
jmp
bound
xchg
pop
pop
push
mov
sub
jp
push
push
push
push
sub
xchg
and
jp
cmp
dec
sbb
lea
fmull
pop
sub
cmpsl
cmp
add
je
orb
mov
push
les
sbb
sub
adc
adc
cwtl
stos
jmp
sub
sbbb
inc
aam
sbb
or
adc
inc
jns
sub
and
pop
xor
arpl
or
cmc
dec
cmp
jmp
fs
mov
pop
or
popf
push
or
js
xchg
sti
and
fwait
inc
pop
jmp
sub
push
adc
mov
sbb
xchg
or
ret
je
xor
xor
cmp
mov
xor
cmp
in
or
mov
adc
incl
cmp
mov
mov
xchg
ja
jge
out
pushf
cmp
dec
out
mov
rcrb
stos
push
push
push
inc
decl
popf
mov
dec
cwtl
mov
push
shl
rcr
call
mov
push
mov
jmp
push
add
je
dec
mov
cli
cmp
nop
pusha
add
cwtl
adc
nop
and
cmp
inc
lret
or
jmp
xor
or
rorl
stc
push
out
stc
aad
add
jg
mov
dec
js
mov
jmp
dec
xchg
pusha
add
ret
inc
jecxz
jns
rorb
and
or
std
addb
inc
cmp
jmp
repz
or
lret
jmp
cmp
sub
or
xlat
cmp
mov
mov
out
cmp
inc
mov
std
test
stos
cmp
fs
xchg
lahf
xchg
push
and
std
stos
mov
daa
dec
push
sbb
or
dec
notb
enter
je
inc
inc
cltd
aaa
xor
fsubs
and
xchg
xor
mov
rolb
sub
pop
ret
and
je
inc
jne
jmp
in
shr
jns
adc
add
push
jae
xlat
fucomi
mov
jp
jb
xchg
and
cli
push
xchg
inc
andb
fs
dec
sbb
mov
leave
xlat
cmp
inc
or
push
fcoml
xor
sub
mov
rorl
cmc
add
dec
adc
ficoms
and
cmc
popa
and
jo
mov
push
test
ljmp
daa
enter
adc
cld
fdecstp
imul
sar
cld
rcll
adc
xchg
lret
and
or
xchg
je
add
cmp
jae
repz
lock
pop
jb
aas
xchg
mov
push
dec
add
js
mov
cs
xor
or
clc
imul
xor
and
das
shrb
sub
ret
jb
popf
xchg
adc
push
in
das
mov
inc
pop
hlt
xchg
ret
add
sbb
out
enter
cmpb
imul
inc
mov
pop
or
push
cld
xor
push
pop
sti
xor
or
mov
add
sbb
addr16
or
sub
push
or
xorb
mov
mov
mov
and
pop
add
or
nop
or
push
push
inc
xchg
sub
lock
mov
xor
mov
sbb
imul
pop
fwait
les
cmp
ljmp
push
push
pop
mov
pop
pop
data16
pop
push
loop
pop
add
lea
mov
jg
mov
cmp
jbe
lods
psllw
cmp
push
ds
push
cmp
aam
ljmp
mov
fwait
mov
push
add
pop
dec
outsb
pusha
or
fsubrl
imul
adc
lods
adc
dec
cmp
inc
scas
push
cmp
sbb
push
gs
les
sub
lea
push
sub
ss
addr16
push
add
push
inc
and
dec
mov
dec
repnz
jno
xor
ja
mov
sub
repnz
push
int
rcl
inc
pop
out
shll
push
and
mov
mov
cmp
je
lea
and
or
or
adc
cmp
jb
ffree
lret
push
push
test
enter
inc
or
push
inc
xchg
and
mov
sbb
push
push
adc
cwtl
add
or
lcall
mov
mov
add
or
scas
aas
pop
sti
and
mov
shr
push
jge
stc
inc
xor
pop
rolb
or
jne
and
or
adc
lods
xor
inc
or
xor
nop
sbb
adc
xchg
push
inc
test
dec
inc
xchg
enter
or
orl
or
mov
mov
mov
pop
cld
inc
push
and
dec
iret
dec
jae
inc
rclb
push
push
jmp
sbb
jnp
dec
and
dec
sbb
mov
push
inc
inc
and
or
repz
or
dec
mov
stos
mov
mov
enter
jmp
rcll
mov
and
push
les
leave
push
jp
add
cmp
jne
jmp
cmp
cmp
lahf
ret
jle
jbe
cmp
jne
pop
fidivrl
cmp
clc
add
cmp
and
in
dec
cmp
mov
sub
cmp
push
xor
ret
lahf
pop
pop
dec
aaa
push
adc
popf
lock
add
cmp
jne
call
loop
adc
sbb
cmp
pop
pop
sub
dec
xor
in
cltd
inc
pop
cmp
or
cwtl
pushf
adc
mov
sti
adc
add
pop
je
dec
lds
cmp
inc
sbb
and
inc
inc
mov
mov
jmp
and
push
xor
cmova
or
flds
sub
inc
cwtl
sbb
mov
pop
inc
jo
fbstp
mov
sub
or
xor
mov
mov
xchg
pop
sub
test
cmp
dec
stos
loope
inc
mov
pushl
add
inc
inc
inc
pop
sub
push
mov
jmp
subb
fldl
mov
inc
inc
push
mov
dec
cld
test
shr
mov
mov
jle
pop
pop
orb
repz
decb
and
and
or
adc
mov
lcall
add
testb
add
adcb
pop
pushf
and
mov
mov
mov
push
mov
movb
leave
mov
cwtl
icebp
bound
je
dec
adc
es
mov
mov
test
decb
sbb
out
add
cltd
pop
dec
pop
mov
and
xor
xor
and
adcb
lahf
adc
mov
cmp
leave
sti
and
adc
pop
jne
hlt
xlat
pusha
jp
je
test
jmp
push
lret
fwait
push
mov
jmp
add
pop
jge
sub
cmpb
push
ret
ss
adc
jne
xchg
pop
bnd
inc
mov
sub
daa
sar
js
adc
or
xor
call
and
jae
sub
mov
cmp
imul
jl
push
mov
push
stos
or
pop
adc
or
push
cmp
lds
jge
subb
nop
nop
mov
or
cli
sti
xchg
fcom
arpl
dec
xchg
test
call
js
pop
mov
cs
in
inc
lahf
or
xchg
add
mov
and
repnz
push
mov
outsl
adc
add
mov
or
and
faddl
push
es
xchg
loope
cmp
mov
imul
add
xorb
lea
mov
rcrb
jl
add
lods
mov
mov
imul
xchg
push
mov
adc
dec
jl
mov
inc
add
pop
add
loope
dec
pop
or
sub
cmpsl
in
cmp
fistps
inc
iret
jg
mov
popa
mov
inc
inc
orl
sbb
jl
pop
test
add
lea
cmpl
nop
pop
dec
pop
add
inc
add
rcrl
cmpsl
sub
cmc
push
pushf
jle
jg
sub
push
addr16
or
and
mov
sbb
orb
sbb
push
fcomps
testb
add
lcall
enter
inc
mov
inc
and
mov
mov
loopne
nop
lods
loopne
gs
mov
filds
mov
mov
lret
ret
testb
ja
xchg
jp
ret
pop
push
inc
xor
pop
dec
jge
xchg
rorb
pop
fwait
aad
pop
pusha
in
inc
mov
lods
add
test
aad
sbb
inc
inc
jae
jnp
xchg
sub
or
mov
jbe
nop
adc
pop
push
add
imul
stos
mov
jl
rcrb
mov
xor
cmp
lds
movb
test
mov
fmuls
xchg
jp
daa
xorl
enter
lods
ljmp
inc
js
lcall
stos
pop
xchg
xor
arpl
push
cmp
sbb
pop
out
inc
push
insl
js
sbb
mov
das
inc
aad
or
testb
test
adc
or
fists
rcll
jg
push
call
sbb
mov
mov
test
mov
jge
je
push
inc
push
push
inc
lret
adc
adcb
mov
enter
test
iret
std
and
aaa
mov
sbb
inc
daa
jae
mov
out
dec
mov
inc
subb
or
add
inc
inc
xchg
adc
push
subl
mov
adc
mov
test
pop
dec
xchg
aas
pop
out
add
and
mov
icebp
inc
arpl
jmp
push
xor
sbb
cmpsb
lods
adcb
out
push
pop
out
mov
jmp
jmp
add
dec
mov
mov
inc
or
test
fadds
mov
jmp
pop
iret
int
pop
add
enter
dec
mov
pop
cmp
or
je
das
sbb
sbb
mov
inc
sti
repz
mov
int3
cwtl
movsl
dec
out
add
lahf
lcall
xchg
sbb
sahf
orl
in
inc
sbb
adc
xor
adc
popa
add
lock
mov
leave
jb
repnz
sbb
and
push
movsbl
adc
and
push
adc
pop
pop
add
cmp
sub
sarl
mov
push
dec
outsl
sub
bound
sbb
cmc
push
sarb
flds
shll
rolb
stc
cmp
sub
ljmp
sahf
int3
dec
repnz
std
movsl
and
jae
inc
adc
or
aam
inc
add
adc
jne
testb
fstpl
sub
push
cmp
adc
xchg
dec
hlt
ja
dec
mov
dec
ja
pxor
push
mov
es
jp
or
mov
fisttpl
push
or
xchg
ret
inc
notb
inc
ljmp
sub
js
push
cmpl
mov
cmp
repnz
ffree
adc
scas
push
rorl
pop
icebp
mov
stos
call
add
ret
mov
mov
into
dec
jle
movsl
and
inc
lahf
jns
xchg
jecxz
inc
enter
jae
fs
push
clc
call
repnz
adc
in
in
xchg
in
or
push
cmpb
mov
adc
or
cmp
data16
cmp
and
mov
in
int3
xchg
dec
push
mov
jle
pop
add
enter
cld
pop
pop
xchg
enter
or
adc
jb
cmp
adc
test
mov
mov
sub
aas
jmp
dec
mov
inc
flds
and
cltd
outsb
hlt
das
in
jmp
fmul
inc
cld
data16
ja,pn
pop
fdivrl
scas
or
mov
rolb
testb
inc
inc
shl
adc
imul
out
add
jb
lods
das
das
pop
inc
sub
dec
push
dec
jo
mov
and
cmp
pop
call
in
ficomps
and
mov
add
cmp
jae
push
dec
cmp
js
add
xchg
clc
test
inc
addl
dec
pop
and
hlt
push
inc
push
pop
es
lea
test
xor
mov
cmpsb
imul
int3
arpl
or
clc
adc
cmp
shll
or
fbld
jo
cmp
lret
adc
xchg
xchg
and
mov
mov
adc
shrb
and
dec
mov
xchg
cmp
daa
adc
pop
fsubrl
xchg
and
push
shr
add
and
adc
std
xchg
adc
test
jne
ljmp
add
jg
ficoml
add
mov
jns
cmpsb
and
in
sbbl
add
shll
or
pop
mov
mov
push
sub
jge
add
and
fstl
in
xor
ds
push
lret
mov
inc
lock
test
jl
add
test
and
jmp
out
aad
out
les
or
or
push
repnz
das
push
xor
xchg
mov
dec
jecxz
mov
mov
test
pusha
sbb
inc
sub
pop
pop
mov
xchg
dec
ja
pop
das
jbe
dec
aaa
divb
sti
jl
sbb
adc
and
and
and
and
and
test
sbb
dec
lahf
pushf
adc
add
xchg
xor
addr16
or
sub
jmp
or
sti
xor
leave
and
aas
jmp
adc
xchg
imul
add
xchg
lcall
jp
sbb
jmp
push
and
dec
mov
sub
xor
jae
pop
ljmp
xor
mov
std
je
pop
test
jge
push
pop
notl
in
xorl
jae
jp
lods
sbb
dec
or
shld
pop
push
or
or
rcrb
mov
pop
popf
lock
xor
sub
fistps
fldl
test
fisubrs
pop
or
inc
jbe
popa
je
fstpl
and
push
sub
movsb
xor
cmp
sub
sub
jbe
sub
jbe
sbb
incb
shlb
enter
rcr
add
dec
mov
and
cmp
fiaddl
jg
xorl
xchg
aas
pop
dec
push
js
pop
lds
in
into
xchg
fmuls
jge
fmull
push
dec
mov
add
or
jb
mov
push
loopne
popa
enter
mov
add
cmp
jge
sbb
roll
test
hlt
jmp
negl
xchg
dec
jne
cs
lret
jmp
xor
sub
adc
mov
pop
rolb
push
fadd
mov
sbb
out
das
pop
pop
push
xchg
mov
xchg
adc
in
test
sti
sub
ret
mov
mov
in
push
jmp
lock
lret
and
lfs
cmp
movsb
imul
cmpsb
icebp
outsb
inc
loop
lds
and
mov
je
cmpb
pop
pusha
mov
call
in
and
inc
lock
push
popa
movsl
lock
and
jmp
push
sub
fwait
jle
cld
mov
ljmp
jmp
pop
cmp
mov
add
fs
stos
int
lds
jmp
cmp
xor
dec
dec
dec
and
cmp
cmp
cs
or
cmp
ja
mov
xor
pop
mov
push
and
adc
jge
mov
in
sti
ljmp
add
and
paddusw
mov
orl
and
xor
mov
push
outsb
mov
jp
inc
xor
add
test
lods
push
sub
xchg
call
bound
xchg
scas
cmp
push
movl
enter
je
mov
pop
push
lahf
pop
shr
fldcw
cmpl
cltd
imul
clc
add
ret
xchg
jo
cmpsb
and
mov
add
jg
or
divb
pop
adc
out
mov
sub
and
dec
data16
add
pop
push
testl
pop
je
cmp
insl
jle
shlb
mov
sub
lcall
jbe
enter
mov
push
push
pop
pop
mov
sub
xchg
in
push
add
orl
sbbl
dec
sub
push
sbb
jmp
adc
adcl
test
pusha
sub
adc
push
push
rorl
sub
mov
cmpb
push
sub
daa
repnz
mov
cmp
sti
fwait
cmpl
mov
adc
or
fwait
adc
jge
mov
pop
xor
pop
jg
dec
sbb
mov
sbb
mov
daa
or
sub
pop
xchg
push
fwait
xchg
call
mov
int
xchg
mov
sub
mov
dec
push
ss
jb
call
sbb
mov
leave
pop
and
icebp
sub
or
rcrl
inc
js
rolb
lods
inc
cmp
dec
inc
jg
mov
push
xor
push
xor
out
icebp
jle
mov
add
mov
ds
sarl
call
nop
add
sbb
lea
mov
pushl
pop
pop
shr
add
inc
cmpsb
out
mov
xchg
dec
inc
dec
lods
lea
inc
add
lahf
sub
nop
jecxz
cwtl
je
and
jne
lods
jns
push
push
addr16
data16
mov
pop
and
pusha
inc
cmp
push
or
loop
dec
pushl
and
pop
cs
push
add
mov
jg
or
dec
cmc
movsl
mov
or
lock
stc
pop
and
dec
sti
pop
fmul
lahf
rcrb
sarb
out
bound
push
inc
mov
dec
mov
addl
jge
xor
out
xchg
adc
ljmp
out
push
push
cli
xchg
push
fisttpl
mov
jp
jl
adcl
adc
jmp
cli
jo
dec
dec
jmp
sub
test
fildl
pop
int3
pop
stc
outsb
pop
lods
jb
dec
loope
push
inc
data16
lcall
pop
fwait
popf
out
fwait
aas
or
std
decl
push
jne
xor
xchg
sub
inc
mov
inc
lea
stos
mov
and
in
imul
addr16
sub
xchg
aad
bound
cmpsl
adc
stc
jge
jmp
sub
mov
sub
mov
and
sbb
rcrl
jne
scas
push
mov
cmp
inc
adc
xchg
push
arpl
jne
rorb
pop
ss
lahf
push
sbb
xchg
push
jg
add
pop
shlb
jbe,pt
sub
jecxz
xor
sbb
dec
pop
push
add
hlt
cmp
jne
xchg
jnp
xchg
cwtl
ja
jo
sbb
jmp
and
jno
mov
addr16
xchg
push
jge
inc
dec
adc
adcb
dec
test
add
and
or
test
or
inc
movsb
xor
cld
outsb
and
sahf
stos
xchg
ret
xchg
dec
or
cmp
and
jle
cmp
movsl
pop
aam
sub
lret
rorb
mov
fs
xor
data16
loopne
jne
fisubrl
jg
mov
adc
or
jo
clc
je
idiv
ja
xor
add
inc
add
adc
pop
fnstcw
lods
xlat
movsl
cmpsl
sbb
push
orb
hlt
mov
loop
mov
or
in
mov
nop
mov
into
and
out
sbb
into
jo
popa
cmp
jmp
mov
and
mov
jne
call
lahf
fs
data16
jmp
dec
inc
add
sub
ret
rorl
enter
enter
test
stc
pop
sub
jb
push
loop
jl
adc
roll
or
push
mov
or
loope
pusha
iret
sahf
sahf
dec
in
das
jno
das
mov
pop
les
ss
mov
cli
enter
push
lock
movsl
data16
pop
jl
ja
mov
add
xchg
fsubs
clc
sub
sti
test
pop
cmp
inc
sub
sub
and
adc
or
or
adc
or
inc
add
and
clc
rorl
testl
shll
xlat
lret
and
into
inc
push
movsb
pop
mov
stc
mov
inc
or
jge
cwtl
rorl
or
jmp
mov
cltd
jns
popa
xlat
je
cmp
dec
xchg
rcrb
bound
dec
ret
pop
push
pop
jp
xchg
inc
cmp
adc
mov
adc
div
dec
mov
mov
adc
push
mov
mov
adc
jne
inc
stos
jmp
jmp
adc
in
lret
and
or
rcrb
or
jmp
add
push
xchg
ds
mov
push
mov
sub
imull
invd
out
or
sub
cmc
mov
sub
imul
lcall
push
inc
fsts
add
test
insb
sbb
inc
andl
or
push
punpcklbw
ret
clc
fs
int3
add
xor
aas
fmull
inc
dec
add
repz
dec
fisttps
jg
dec
mov
inc
in
dec
fdivs
jnp
sti
xor
adc
arpl
ljmp
lcall
loopne
leave
sbb
dec
push
rclb
cld
lods
imul
and
sbb
in
mov
fdivrs
mov
sbb
adc
and
ja
int3
lahf
fs
inc
adc
aad
cmp
pop
insl
xchg
in
pop
pop
push
repnz
push
jg
cwtl
and
lods
and
jne
scas
mov
scas
jle
repnz
mov
dec
or
mov
fdivr
mov
pop
fadds
jmp
sub
cmp
cwtl
psubw
and
mov
cmp
sub
das
inc
js
dec
push
ljmp
xlat
xchg
dec
mov
fisttpll
imul
call
test
decb
adc
xchg
mov
adcl
adc
jle
loopne
mov
sub
or
lds
add
cmp
jb
test
inc
lret
add
clc
clc
movsl
ret
popf
dec
jle
add
jle
and
and
mov
mov
push
mov
mov
push
nop
pop
adc
add
xlat
cmp
jb
shl
repnz
push
xchg
cmpsb
andb
outsl
call
andb
nop
adc
push
stc
call
dec
imul
jmp
popf
or
push
add
adc
mov
push
test
dec
test
or
xor
icebp
jl
push
cmpsb
pop
jle
pop
cmp
sub
jle
jne
lods
sub
dec
sbb
inc
push
jne
cmc
push
jae
shrb
lds
lods
xchg
in
cli
jb
add
xchg
cmp
loop
xchg
push
jno
inc
in
mov
lret
adc
and
faddl
inc
cmp
xchg
add
leave
push
sti
push
imul
jns
or
incl
sub
mov
push
or
test
mov
into
scas
daa
adc
cmp
and
jae
sbb
lock
or
inc
mov
or
cmp
and
add
insb
repnz
mov
test
ret
ret
test
cmp
or
mov
movsl
fwait
pushf
loop
daa
add
jl
cmp
push
fisubs
das
je
mov
or
dec
pop
jl
addr16
jns
leave
jne
lret
inc
cltd
dec
adc
aas
fidivrs
add
push
ja
aas
mov
and
adc
jp
cltd
jnp
lock
jg
test
push
add
shll
dec
adc
dec
js
sub
test
dec
pop
sbb
repnz
mov
clc
cli
testb
ss
das
or
or
scas
jl
daa
lret
or
cltd
sub
cmpb
cmp
loop
dec
or
dec
mov
mov
jp
lock
jg
mov
mov
jne
ja
lea
sub
sub
cwtl
das
or
in
les
jle
addr16
pop
pop
mov
lcall
xchg
out
cmp
andb
inc
xchg
daa
mulb
add
inc
fwait
jp
lods
xchg
mov
sub
cmp
das
pop
push
xchg
int3
or
pop
or
mov
jp
and
mov
in
sub
mov
lds
sbb
call
insb
shrb
sbb
push
jne
push
pop
adc
lods
ficoms
dec
enter
clc
test
jecxz
add
push
xor
sar
jno
mov
scas
and
leave
lock
jne
mov
mov
int3
leave
push
mov
cwtl
jnp
rclb
add
jecxz
add
mov
mov
bound
sbb
mov
adc
sub
cmp
fimuls
icebp
inc
and
lcall
enter
jbe
xorb
push
mov
sub
enter
faddl
faddl
mov
dec
push
mov
mov
fistpl
xor
sbbl
fcomps
fmuls
push
push
outsb
cmpsl
mov
sarb
xchg
and
inc
out
mov
adc
adc
data16
and
push
or
mov
add
cmpsb
push
lods
cltd
xor
dec
daa
outsl
sub
sti
int3
pop
xor
lods
pushf
ss
mov
mov
sbb
mov
pushf
gs
mov
mov
xchg
cmpb
ljmp
cld
xor
ds
adc
jb
sbb
das
popf
incb
out
std
sbb
daa
sub
or
dec
mov
or
sub
loopne
sti
mov
je
dec
push
cld
jmp
and
and
out
dec
orl
test
test
andl
mov
adc
clc
enter
test
mov
fucom
cmc
and
decb
mov
adc
sbb
popf
adc
or
mov
inc
xor
andl
inc
cmc
and
xor
add
push
push
popf
in
repz
or
dec
push
lods
adc
pusha
mov
push
or
pop
xchg
sub
mov
ds
cmpsl
daa
mov
cmp
gs
mov
scas
mov
sub
pop
or
mov
fdiv
scas
adc
inc
mov
fisttpl
in
push
mov
push
lret
imul
adc
xor
mov
jbe
jle
sbb
mov
adc
leave
sbb
mov
imul
or
push
push
enter
add
and
mov
inc
pusha
add
or
jmp
lock
pop
mov
cmpsl
mov
or
mov
push
mov
out
mov
movzbl
popf
movsl
or
jl
jl
das
adc
and
or
and
add
negl
jno
inc
and
test
cmp
sbb
fs
mov
cs
dec
in
flds
jb
jno
add
jbe
add
push
mov
adc
std
fnstenv
mov
pop
jmp
das
pop
ret
inc
ret
mov
jg
xor
js
ret
dec
inc
xor
test
and
iret
adcb
and
add
sub
mov
in
add
cmp
xor
test
jl
mov
push
jg
jmp
mov
inc
cmpl
push
sbb
pop
int3
je
inc
add
pop
and
aas
cld
inc
pop
cmp
rcl
cli
pop
insl
and
push
cmp
js
or
adc
fsqrt
test
adc
mov
push
or
jb
mov
mov
jae
mov
jne
add
push
adc
mov
adc
mov
sarl
lea
sub
sbb
cmp
add
stos
cmp
push
cmc
hlt
or
jne
push
pop
cmp
in
add
fdivrs
dec
xchg
xor
std
inc
inc
cmp
mov
fdivr
jle
out
xor
adc
inc
lret
sahf
test
pop
es
loopne
cmpb
jle
inc
pop
sub
jp
sub
inc
ret
lea
adc
addb
jns
xchg
jge
jb
push
sub
and
leave
push
das
nop
lock
cmp
adc
or
fiaddl
dec
adc
mov
mov
out
pop
cmp
fdivr
or
push
out
jmp
daa
inc
push
imul
mov
repnz
sub
pop
mov
out
mov
sbb
inc
out
add
sbb
xor
pop
xor
scas
lret
and
adc
or
inc
pop
enter
mov
jge
cmp
or
mov
or
and
cmp
repnz
scas
xor
cld
or
add
call
pop
das
testb
daa
or
add
inc
xchg
or
pop
and
xchg
xor
leave
mov
testl
ljmp
leave
xor
push
xor
std
and
popa
xor
mov
mov
pop
dec
jl
mov
in
mov
push
add
pop
lea
mov
sub
push
or
fnsave
xchg
sbb
lods
int3
les
mov
or
jmp
or
or
scas
adc
xlat
out
ljmp
mov
add
and
popf
pop
push
pop
xor
pop
stc
or
shr
orb
jbe
scas
loope
out
pop
cld
je
insl
ljmp
or
iret
adc
ds
dec
xchg
js
imul
inc
push
mov
dec
push
mov
or
dec
ss
repz
jno
std
into
xchg
sahf
mov
pushf
and
test
ljmp
xchg
cld
sbb
jae
mov
jne
aam
ja
adc
mov
dec
mov
popa
insl
cmp
punpcklwd
aas
mov
loope
loop
inc
sub
sbbl
jmp
xor
cli
imul
je
call
and
cmp
pop
test
push
ret
add
and
les
sbb
inc
sbb
or
push
mov
add
or
pop
mov
inc
ret
and
or
into
jg
movsb
or
jmp
push
pop
mov
xor
clc
add
add
enter
insl
stos
add
or
cmp
mov
jp
cmc
fs
add
mov
sahf
loope
test
pop
push
imul
sub
xor
jns
push
mov
jle
dec
daa
fcompl
insl
and
aad
add
rolb
inc
jle
add
or
arpl
push
test
push
or
fwait
or
add
fs
test
mov
mov
dec
in
sub
ret
jle
push
cli
cltd
inc
inc
das
xor
or
mov
pop
lods
je
push
cmpl
dec
jae
stos
les
jmp
or
mov
mov
sbb
adc
outsb
pop
sbb
or
or
outsl
mov
adc
shl
outsl
fwait
lea
insl
mov
push
or
enter
jne
fstps
pop
push
and
cmp
jmp
inc
sub
in
les
jp
push
test
or
mov
xor
imul
clc
insl
or
mov
jge
bound
or
cmp
push
pop
dec
xor
adc
pushf
adc
repnz
and
pusha
enter
xor
mov
push
pop
xor
mov
scas
inc
jmp
out
popa
shlb
imulb
cld
into
cmc
out
fwait
push
mov
xchg
jl
aas
xor
cmp
jg
inc
loopne
mov
jne
dec
pop
test
push
dec
addl
into
loop
add
mov
cmp
push
sti
or
adc
add
leave
mov
scas
dec
xor
jmp
movsb
adc
add
dec
xchg
push
hlt
push
jbe
inc
int3
mov
pop
pop
and
pop
cmp
fadds
push
adc
movsb
jnp
adc
or
cmp
mov
orb
sarl
mov
cltd
pop
out
fdivs
int3
mov
mov
dec
das
sub
mov
insb
and
xchg
sbb
mov
fsts
mov
mov
push
cs
add
inc
or
stos
pop
faddl
push
popa
rol
out
mov
or
adc
push
jg
hlt
and
imul
adc
and
dec
mov
mov
add
sbb
pop
test
push
push
inc
in
xchg
or
and
inc
out
mov
adc
and
dec
in
xchg
in
adc
sti
adc
aas
mov
sar
add
inc
add
and
mov
lods
sarl
or
cld
js
mov
mov
call
maskmovq
idivl
push
jmp
xchg
xor
rolb
or
and
sbb
inc
add
fcomp
out
add
dec
pop
xchg
cmc
pop
shrl
sbb
movzwl
mov
dec
pop
mov
push
mov
push
test
imul
imul
mov
add
in
mov
pop
repnz
mov
add
and
jns
push
cli
xchg
jge
xor
cmpl
aad
scas
sbbl
enter
sbb
inc
hlt
adc
pop
xor
add
clc
add
dec
xchg
cmc
jge
pop
adc
inc
xchg
adcl
mov
mov
mov
pop
sub
pop
neg
orl
popa
sbb
repz
push
push
adc
add
dec
add
fdivs
mov
nop
or
fdivs
out
xchg
sti
roll
cmp
sbb
mov
es
push
mov
cld
ret
or
or
dec
add
sarb
jnp
push
cmp
jae
orb
inc
inc
push
subb
sub
mov
rol
sbb
jnp
std
mov
ret
jne
test
testb
or
push
and
loopne
adc
or
rcrl
mov
push
add
mov
dec
add
jb
div
dec
mov
adc
jae
and
negl
ja
or
pop
or
pop
iret
inc
inc
add
cmp
or
add
jle
lods
jnp
add
mov
mov
sbb
lods
and
add
daa
pop
inc
sbb
nop
popa
add
mov
cwtl
dec
xor
or
je
addb
aad
loopne
pop
xchg
mov
push
loopne
pop
sbb
stc
je
decl
xchg
cli
xchg
add
cwtl
sbb
inc
push
push
mov
jne
mov
pop
cmc
sbb
adc
cmp
mov
enter
push
lea
movb
xor
or
enter
ret
jne
mov
dec
push
cmc
xchg
jge
pop
or
movsb
js
adc
or
lahf
mov
stc
int3
lds
mov
clc
and
add
cmpl
jbe
testb
mov
roll
scas
mov
sub
adc
hlt
pop
fcomps
mov
cld
out
mov
aas
inc
xor
add
decb
mov
jge
bound
sub
ret
inc
ret
jg
mov
or
jl
lock
adc
ret
addl
fsubl
mov
das
sbb
add
jge
stos
fdivrl
mov
push
pop
jmp
lods
popf
mov
jl
rorl
or
mov
dec
or
jae
mov
inc
or
and
lret
call
or
cmp
lcall
dec
mov
push
cli
std
mov
inc
aas
ja
push
cmp
mov
jg
mov
aaa
and
push
pop
inc
adc
inc
popa
add
aad
in
xor
fs
push
aas
test
push
cmp
adc
add
or
sub
and
sub
or
cwtl
mov
add
xchg
aam
movd
faddl
xor
cmpsl
pusha
jbe
scas
ret
jl
or
faddl
fsubrs
jne
cld
push
push
pop
xor
xor
dec
in
jecxz
xchg
je
call
dec
sbb
jne
sbb
mov
mov
push
or
jg
pushf
adcl
and
mov
cmp
mov
jg
stos
or
sub
test
mov
jbe
xchg
movsb
inc
in
adc
dec
in
jbe
cmp
popf
scas
ja
data16
and
cmp
xor
sub
gs
cmp
push
fsubl
or
mov
andb
lret
mov
inc
repnz
movsb
cmpsl
cmp
push
sti
not
mov
test
cmp
dec
add
add
or
test
fisubl
ss
mov
mov
dec
fdivs
andl
pop
jle
xchg
push
sarb
push
mov
loopne
jmp
pusha
and
je
jge
mull
mov
push
push
jl
out
inc
je
jle
mov
or
adc
push
jle
pop
es
movsb
xor
cmpl
push
or
repnz
cmc
mov
push
fcmovnb
jge
les
dec
fldenv
jae
aad
mov
xchg
test
lods
stc
add
add
out
and
je
daa
mov
test
push
and
jg
adc
notl
lret
std
test
pop
ret
call
inc
fdivs
mov
rcll
sub
lahf
pop
and
add
push
mov
test
dec
or
push
test
push
dec
js
jae
stos
popf
mov
mov
jb
mov
mov
jg
ljmp
into
pop
jmp
mov
test
sarl
sbb
mov
nop
xchg
jmp
enter
mov
pop
mov
movsb
dec
lret
mov
dec
inc
orl
dec
add
into
inc
jge
dec
push
andb
mov
xchg
dec
int3
adc
push
lret
cmp
or
adc
sbb
scas
jo
add
rclb
inc
cmpsb
inc
fwait
mov
pop
xor
inc
nop
ret
mov
sbb
out
out
sub
push
or
and
sub
mov
push
xor
popf
sub
mov
and
outsl
inc
andl
dec
mov
xchg
ja
sub
orl
inc
cs
je
js
jle
repnz
or
out
sub
pop
dec
dec
fs
add
shll
sbb
ds
fbld
jae
mov
xchg
push
int
pushl
pop
nop
inc
pusha
enter
mov
adc
insb
inc
sbb
mov
fs
sub
mov
pop
sbb
jmp
mov
sub
add
out
adc
add
add
add
push
outsl
je
popa
insb
cmp
and
or
jae
adc
push
adc
sub
ds
add
arpl
ss
js
jo
outsl
imul
lcall
push
or
jle
out
out
inc
jbe
cs
inc
jne
jb
gs
push
cmp
sub
add
imul
shr
mov
mov
sub
or
inc
cwtl
ds
or
cltd
jns
aam
mov
mov
js
cmp
jbe
and
data16
lock
cmp
add
and
aam
pop
addr16
cmp
adc
ss
sbb
jae
int3
data16
gs
out
push
cs
xchg
enter
mov
clc
push
inc
inc
call
sub
mov
push
adc
bound
je
mov
sti
jp
jecxz
jb
pop
inc
xchg
push
dec
push
push
sbb
jo,pn
and
mov
dec
add
mov
add
test
push
nop
aaa
or
sbb
jno
pop
mov
push
dec
add
sbb
lock
lock
inc
inc
push
cmp
das
cmp
jbe
pop
xor
xor
jno
adc
or
push
popa
mov
dec
gs
scas
cmpsb
mov
pusha
lds
push
ret
das
mov
and
pop
mov
mulb
sub
es
jne
jle
xor
adc
in
and
inc
testl
push
sbb
outsl
mov
fs
jae
inc
push
jnp
scas
jbe
add
imul
add
fldcw
xor
call
add
cmp
jb
pop
test
aas
jne
mov
es
cmp
inc
in
sbb
dec
je
pop
sti
mov
xor
inc
xor
rorl
sub
add
xchg
xor
add
popa
push
out
mov
sbb
insl
mov
xor
mov
add
fdivrl
cld
aad
loopne
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
fwait
cmp
adc
in
pusha
aad
addr16
add
aam
add
test
sbb
xor
add
mov
lods
jecxz
fadds
xor
filds
or
cmp
fstps
push
ficoms
inc
xlat
enter
add
and
mov
push
cltd
xchg
mov
cmp
or
and
or
das
adc
stos
add
data16
add
jbe
jno
add
adc
out
mov
test
push
movsl
in
add
mov
xor
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
push
xor
dec
push
xor
xchg
push
call
sbb
hlt
or
cmc
fnstenv
add
ljmp
add
fistps
fidivrl
adc
gs
aam
pop
or
dec
into
add
mov
aam
movsl
fisttps
xor
movsb
add
hlt
shrl
imul
inc
mov
add
mov
add
add
sbb
or
fnstsw
add
add
adc
mov
add
test
or
add
lahf
in
into
push
stc
add
pop
cwtl
leave
fldcw
and
shlb
pop
cmp
or
mov
mov
in
mov
push
mov
add
inc
pmullw
scas
ja
popf
adc
adcl
jae
or
add
insl
or
jp
iret
push
in
decl
xchg
cmp
scas
add
mov
pop
jge
call
mov
add
add
ret
pop
push
testl
insb
sbb
cld
imul
sbb
loopne
rorl
adc
dec
frstor
fistpll
mov
mov
mov
aad
mov
sbb
mov
shll
cmp
fisttps
addr16
out
add
dec
add
fmuls
or
pusha
jp
inc
cmp
out
sbb
push
mov
loopne
outsb
xor
add
mov
add
mov
loop
push
int3
add
or
das
add
lds
cld
mov
mov
add
mov
add
iret
shlb
sub
scas
ficomps
mov
fs
es
pushf
mov
xchg
insl
add
aas
ss
jmp
addr16
jb
adc
add
adc
add
jnp
sbb
mov
fwait
mov
xchg
or
mov
fdivrl
pop
fisttpl
aam
roll
clc
mov
sbb
int
add
mul
ja
mov
addb
out
pusha
jle
push
ud0
cmp
pop
or
adc
scas
clc
jns
imul
insb
push
js
or
xlat
push
addl
ret
cmp
cmpsl
add
push
pusha
rorb
imul
dec
push
scas
add
pop
fldenv
filds
lock
aaa
push
loopne
test
fidivrs
mov
jmp
sbb
mov
lret
add
and
ss
testb
xlat
int
push
ficoms
add
and
jp
mov
dec
add
add
push
outsl
sub
mov
aas
or
sbb
pop
out
add
inc
adc
popa
gs
inc
inc
adcb
push
dec
sub
mov
cld
inc
dec
jl
dec
inc
xor
mov
inc
xor
ret
and
xchg
das
mull
je
mov
cs
cmp
inc
push
gs
dec
inc
and
cltd
comiss
jns
bound
dec
sub
jmp
inc
or
lods
mov
sti
dec
outsb
jb
test
sub
push
cmpsl
cmp
sub
sub
sbb
and
mov
push
je
cmp
push
and
and
cmpsb
pop
jb
outsb
or
insb
fidivrs
hlt
das
sarb
jne
outsb
and
sahf
stos
loopne
jmp
mov
daa
pop
inc
fs
jl
dec
gs
leave
rolb
and
dec
or
add
out
movsb
mov
sub
rclb
dec
loopne
dec
mov
sub
sub
jecxz
or
mov
cs
in
mov
imul
popa
jns
inc
cmp
les
and
inc
outsl
mov
cmp
popa
jo
into
cmp
xor
dec
or
push
test
xor
xor
add
not
xchg
test
pop
pop
mov
xchg
pop
pop
or
scas
xchg
fsubs
cmp
and
movsb
push
jle
mov
inc
aad
adc
xor
sub
dec
inc
push
jg
push
insl
mov
js
push
inc
push
call
and
push
dec
jge
dec
mov
stos
out
cmp
mov
and
int
js
adc
js
push
pop
pop
sub
push
push
lods
or
ret
adc
dec
dec
push
mov
sbb
call
subl
out
jns
push
add
push
push
push
mov
in
aaa
je
lods
sub
jmp
mov
push
inc
cmp
xor
xchg
mov
arpl
adc
sub
jns
pop
push
push
inc
add
xchg
dec
push
gs
xchg
rcll
gs
adcl
movsl
mov
sbb
xchg
push
add
dec
mov
mov
mov
sub
in
sub
into
scas
or
push
push
inc
xchg
mov
xor
jge
and
or
lds
mov
add
push
dec
push
inc
ret
cmp
inc
scas
fisubl
dec
xchg
inc
ja
or
xchg
inc
dec
std
dec
sub
outsb
and
push
inc
push
and
dec
xchg
push
stc
pop
inc
xchg
aas
inc
pop
flds
dec
push
fists
out
mov
add
dec
inc
push
dec
push
gs
std
out
inc
cs
js
push
jo
jae
xchg
or
arpl
xchg
test
xor
sbb
inc
addr16
sbb
push
orb
pusha
inc
gs
jle
rolb
inc
mov
inc
sbb
xchg
push
adc
add
imul
add
inc
dec
jne
sub
js
movsb
out
popa
arpl
cmpsl
and
xor
inc
sub
dec
sub
jne
push
mov
sub
jmp
outsb
push
outsl
adc
jne
mov
sub
or
adc
inc
inc
inc
rolb
push
push
xchg
decb
outsl
bound
adc
mov
pop
adc
ret
or
sub
sbb
dec
arpl
inc
mov
popa
and
xor
xchg
sub
push
inc
mov
outsl
jp
mulb
das
xor
or
imul
fs
fisttpl
shl
aas
popa
rorb
sub
add
arpl
shrl
adc
les
cmp
or
std
lcall
xor
adc
cmp
inc
jne
adc
inc
cmp
jno
push
shlb
dec
arpl
dec
pop
sub
arpl
insl
popa
insl
in
or
bound
jecxz
xchg
inc
sub
adc
je
fs
inc
or
mov
jo
bound
adc
and
outsb
or
bound
leave
mov
sbb
clc
xchg
sti
xor
or
jae
in
push
shrl
inc
leave
sub
mov
sbb
or
xor
sarl
iret
inc
mov
or
xchg
dec
sbb
add
jl
pop
loopne
inc
inc
dec
jae
dec
shll
sub
stc
and
arpl
pop
enter
push
ficoms
push
ja
xor
lcall
push
rclb
popf
movsl
in
cmp
mov
dec
xchg
mov
inc
inc
mov
fwait
jb
out
inc
adc
mov
clc
dec
xor
in
lret
lods
push
push
mov
imul
xor
inc
cwtl
lods
dec
xchg
mov
dec
cmpsl
push
lods
mov
add
jns
iret
adc
outsl
adc
mov
pop
jle
jae
inc
out
fisubl
adc
fsubl
adc
addb
adc
or
rorb
cmovb
sbb
pushf
leave
xorb
call
repnz
imul
push
inc
mov
cld
sbb
mov
call
fs
in
adc
mov
addr16
cmc
jns
or
nop
xor
and
adc
xor
inc
xor
out
inc
adc
andl
mov
in
fs
fistl
ds
lcall
jo
sub
adcb
push
outsb
inc
scas
aam
movsb
sub
dec
cmp
inc
dec
pushf
sbb
adc
and
mov
mov
mov
enter
pusha
stos
pop
mov
aaa
icebp
in
or
fimull
dec
stos
inc
lret
mov
movsl
sbb
inc
repnz
rcrl
scas
call
test
jne
inc
popf
mov
pop
test
iret
or
ljmp
mov
mov
dec
outsl
push
jmp
inc
les
jae
xchg
xchg
fldenv
dec
fnstcw
adc
push
jns
lret
and
jge
jo
push
outsb
cld
mov
inc
xor
imul
insb
mov
jae
push
lea
pop
push
js
fdivl
pop
fwait
bound
adc
daa
dec
and
je
push
and
orb
adc
loopne
lahf
sbb
les
jo
mov
and
rcrl
push
imul
lahf
daa
ret
mov
pop
daa
mov
pushf
arpl
bound
and
lock
fs
and
xor
movsb
xchg
gs
fs
or
dec
shlb
or
pusha
and
or
push
pushf
xor
push
and
xchg
insl
xchg
lahf
icebp
add
lock
dec
push
push
dec
sub
rcrb
ja
rcl
jns
icebp
mov
insl
cs
lret
scas
mov
mov
mov
push
std
iret
dec
insl
cs
cmp
sarb
jns
rclb
imul
jmp
add
dec
imul
jp
dec
xor
sub
mov
xor
adc
and
test
lret
in
sub
push
jecxz
push
mov
xchg
xor
fs
mov
jne
popa
jb
dec
jo
push
hlt
dec
xchg
ja
fxch
cs
and
outsl
and
jbe
dec
dec
movsb
push
dec
push
cmp
mov
mov
enter
dec
enter
gs
sub
mov
pusha
mov
fdiv
lret
pop
imul
pop
in
add
inc
or
jl
pushf
push
pop
insb
and
faddl
pop
xor
add
adc
dec
inc
adc
cmp
dec
push
adc
pop
mov
out
nop
jno
loop
xchg
and
test
add
push
imul
adc
leave
inc
jo
call
adc
jge
dec
dec
pop
insl
adc
sbb
jo
scas
cmp
addr16
arpl
cmp
cmp
push
xchg
cs
cs
xor
dec
xchg
in
cmpsb
dec
mov
xchg
roll
push
shlb
inc
pop
cmc
mov
inc
and
test
jae
or
xor
pop
fs
pop
dec
push
mov
iret
adc
fdivr
loop
arpl
sub
mov
lea
xchg
aas
push
rcrb
js
jb
inc
inc
movsb
fs
fsubrl
inc
dec
dec
rclb
bound
in
and
push
push
es
movsb
jl,pn
push
and
push
mov
and
or
mov
xchg
or
cmp
inc
jb
push
outsb
test
aam
jne
ficompl
nop
fimull
mov
mov
pop
push
xor
mov
jo
orl
sub
outsb
adc
and
lods
sbb
sub
xor
xor
jo
mov
or
or
inc
inc
inc
dec
push
mov
popf
and
push
jmp
dec
dec
mov
push
dec
dec
mov
call
rolb
sbbb
mov
or
adcb
cmc
inc
or
dec
dec
and
in
call
push
push
daa
jne
push
je
mov
adc
sub
inc
rcll
inc
dec
mov
sbb
add
inc
test
sub
inc
inc
and
xchg
mov
insb
lods
cmp
rcll
sahf
addr16
mov
dec
sub
ret
xor
insb
and
jne
inc
bound
ret
dec
pop
add
or
cwtl
je
repnz
cmpsb
and
ja
popa
fwait
inc
xchg
pushf
xorl
outsb
cmp
xor
icebp
movsl
cmpsl
mov
cld
into
mov
dec
popa
imul
rcrb
int3
mov
xchg
sbb
insl
pusha
dec
jo
push
jbe
cs
adc
pusha
pop
sub
ret
mov
inc
scas
mov
mov
stos
push
adc
push
sub
fld
dec
pop
stos
scas
xchg
mov
inc
sub
push
psubsb
lds
lods
fwait
jle
and
sub
push
fiadds
movsb
in
in
loop
push
in
jl
push
lods
or
shll
shlb
mov
cli
jb
repnz
int
jae
add
test
and
cwtl
and
rorl
pop
ds
aaa
xor
movsl
clc
cmp
mov
dec
cmp
and
aam
cmp
addr16
or
push
or
or
out
jp
sbb
sti
jl
dec
jbe
pop
mov
xor
inc
insb
rcrb
xchg
adc
pop
mov
adc
inc
and
push
addr16
insl
sti
fxch
enter
and
pop
push
or
add
std
stc
pop
and
int
cmp
dec
sub
pop
shlb
mov
lahf
and
nop
test
jns
push
fistps
shl
loope
repnz
test
inc
insb
mov
ret
cs
sbb
cmp
xor
xchg
push
xor
ljmp
leave
and
and
mov
mov
push
stc
adc
aam
ds
pop
mov
aas
sub
xor
das
jo
xor
pop
adc
xchg
rorb
imul
jl
mov
jbe
test
fiaddl
cmp
sti
stc
and
push
or
jo
out
xor
mov
lea
jb
dec
test
fbld
cmp
js
sub
data16
and
lods
lret
pop
fsubp
pop
sub
mov
es
lea
jae
loopne
outsb
lods
outsb
xchg
jb
push
js
cmp
cs
sub
imul
inc
aaa
fwait
jo
lret
lods
jmp
shlb
ret
push
imul
xor
lea
daa
daa
pop
insb
xor
test
adc
cmp
arpl
and
push
enter
xchg
push
cmp
sbb
ret
sub
enter
mov
jb
jge
das
sub
adc
xchg
jmp
cs
mov
mov
fdivrs
add
push
dec
dec
outsl
dec
sbb
mov
jns
dec
int3
pusha
pushf
dec
pop
dec
push
leave
out
int
das
or
ja
pusha
mov
sarb
xchg
sbb
push
imul
xchg
repnz
xchg
mov
jl
insl
je
mov
pop
imul
jmp
dec
push
pop
jmp
dec
xchg
sub
mov
mull
inc
data16
sbb
pop
mov
jns
orl
loop
inc
mov
sbb
mov
mov
xor
fsubs
int3
rcll
in
inc
and
fldln2
notb
pop
addr16
ret
cmp
add
push
ljmp
push
adc
jb
dec
fs
mov
insl
sub
pusha
pshufw
fisubl
or
cli
cmp
out
push
cmp
ret
xchg
inc
loopne
inc
push
scas
cmp
into
jg
mov
fdivrs
adc
jp
das
cmpsl
shl
daa
fistl
xor
ja
das
inc
and
sub
push
push
in
add
add
mov
push
jp
or
jno
dec
jnp
sbb
sarb
fstpl
jns
dec
sub
ficoms
dec
notb
scas
mov
sub
pop
sub
dec
push
sbb
push
leave
push
or
mov
xchg
and
pop
jae
mov
and
sahf
rclb
sahf
jp
mov
xchg
cld
fcompl
imul
stos
adc
loope
aas
mov
xchg
jmp
push
lahf
adc
loop
pop
xchg
mov
sbb
xchg
xchg
mov
je
sbb
push
jbe
jnp
push
test
push
loop
gs
cmp
test
xor
push
cmp
pop
repz
sub
cwtl
daa
or
mov
adc
mov
pop
push
dec
sub
insl
imul
push
cmp
lahf
sub
out
push
cmp
or
inc
mov
jo
xor
dec
fdivrs
pop
aam
mov
mov
sbb
cmc
cmpsb
inc
cli
push
or
mov
cmpsl
adc
adc
clc
add
dec
adc
jbe
dec
mov
outsb
pop
adc
mov
int
add
adc
shrb
pop
cwtl
mov
push
jns
cs
adc
fisttpll
loop
mov
imul
or
addr16
test
pop
fnstsw
les
adc
lcall
mov
int3
clc
jo
or
sbb
xor
outsb
add
mov
push
mov
add
mov
es
outsb
icebp
lods
ja
pop
rorb
jnp
sub
dec
outsl
lea
add
xor
popa
or
mov
aas
aam
pushl
push
mov
push
sbb
call
int3
enter
xchg
arpl
outsb
int
insb
cmp
pop
or
push
dec
sub
cld
insb
adc
inc
shrb
push
je
sub
in
xor
fs
or
pushl
jle
cltd
pusha
mov
call
loop
insl
rorb
movsl
andb
mov
cmpsb
sbb
mov
cmpsb
mov
gs
cmpsb
lods
mov
jb
les
mov
rcrb
dec
jno
and
insl
push
out
or
inc
sub
ret
jno
push
gs
into
adc
inc
xchg
movsl
inc
mov
mov
movsb
or
push
daa
insb
or
sbb
xor
cmp
adc
mov
mov
out
fwait
or
or
push
les
xor
hlt
inc
add
sbb
dec
fnsave
pop
pop
int
and
push
inc
ja
or
adcb
scas
sbb
jns
sub
push
movsb
inc
dec
or
inc
push
and
in
pusha
fs
dec
inc
xchg
rcrl
fisubrs
or
push
nop
rcrl
mov
roll
or
loope
cli
cmovg
lds
dec
or
add
sbb
fisubrs
jge
bound
and
add
ficoms
and
stc
pop
push
adc
and
inc
in
mov
xor
xor
push
cmp
shrl
push
xor
mov
dec
sub
dec
cwtl
jmp
sbb
orb
pop
adc
xor
lea
inc
xchg
inc
xor
xor
dec
inc
fdivr
shl
push
test
inc
fs
or
sub
push
imul
cmpsl
add
hlt
mov
jl
lret
je
imul
rolb
imul
shrl
cwtl
mov
mov
sub
outsb
fs
push
shrb
mov
inc
dec
xchg
mov
jg
add
xor
dec
dec
jp
cmpsl
and
and
div
pop
dec
sbb
push
dec
pop
repnz
aaa
dec
dec
xchg
xchg
mov
jbe
jb
pop
inc
or
insb
sbbb
dec
popa
sub
sti
push
inc
sbb
or
xlat
inc
and
jecxz
mov
sub
xchg
jge
or
push
imul
inc
fmuls
jmp
pushl
icebp
dec
mov
arpl
xor
cli
dec
loopne
sbb
dec
inc
inc
push
xchg
call
adcl
stos
test
mov
sub
inc
les
divb
sub
sub
jnp
pushf
mov
add
movsl
js
mov
mov
ja
xor
add
orl
push
clc
loopne
sub
pop
stc
shlb
cmp
xchg
jmp
lds
sub
inc
xchg
mov
outsl
stos
aam
dec
sub
xchg
leave
jmp
jmp
fs
jmp
mov
mov
mov
fnstenv
sub
push
lock
lods
or
xor
xor
cmp
mov
adc
pop
push
insl
loopne
adc
orb
add
dec
add
roll
addb
das
aam
mov
jmp
and
repz
mov
add
cmp
or
cltd
sub
xchg
fists
pop
add
add
add
cmp
inc
cs
pop
pop
or
aaa
cwtl
test
and
and
pushf
pusha
push
cmp
lahf
mov
mov
add
push
cmp
insb
add
lods
push
push
std
addl
mov
adc
and
pop
outsb
pop
cmp
push
sarb
lret
jno
icebp
or
mov
repz
ret
outsb
movsl
add
lret
orl
push
inc
pop
jns
pushf
outsl
push
jb
cwtl
out
jne
sbb
dec
or
dec
xor
pop
adc
inc
xor
inc
enter
cmpl
in
cmp
adc
fs
stos
fs
push
inc
xor
js
and
jae
call
sub
sbb
ret
inc
push
loopne
dec
xor
jo
and
adc
or
sbb
jo
sbb
sub
sbb
scas
and
sbb
and
je
add
and
call
adc
test
dec
add
add
inc
adc
add
les
lret
enter
add
add
add
fwait
add
add
add
add
adc
push
jae
cmp
cmpsl
add
xor
add
mov
ja
adc
cmp
xor
add
and
sub
inc
les
push
pop
xchg
adc
movsb
cmp
insb
adc
xor
pop
aad
mov
push
sbb
dec
push
imul
sub
rorb
push
push
sbb
xor
adc
cwtl
jp
mov
jns
and
mov
or
inc
popf
mul
jmp
mov
mov
ss
jae
pop
pop
cs
xchg
push
cwtl
test
push
scas
or
push
jno
inc
adc
daa
daa
jae
sbb
mov
imul
ljmp
inc
cmp
jne
ret
push
push
jae
lods
stos
rorb
enter
inc
or
jne
push
pop
lods
loope
imul
jae
outsl
inc
je
outsl
and
adc
imul
add
arpl
shlb
out
push
repz
adc
fldl
inc
pusha
adc
mov
push
push
js
jns
in
mov
mov
mov
sbb
cld
movsb
or
stc
insl
das
subb
adc
xor
outsb
sbb
dec
mov
mov
push
mov
push
jecxz
push
imul
sub
je
movsb
mov
push
inc
ja,pt
and
push
cmp
lods
stos
and
int3
pop
adc
xor
mov
xor
sub
cmp
out
int
pop
inc
xor
push
push
faddp
inc
sub
push
or
pop
bound
lods
mov
pop
js
lea
and
shlb
inc
cs
cmp
jo
outsb
lret
jne
mov
ds
cmp
iret
jle
and
cli
bound
xor
or
daa
xor
data16
outsb
mov
pop
pop
push
les
mov
push
jecxz
jns
imul
or
movsb
mov
xchg
xor
arpl
std
fildl
sub
push
or
pop
add
mov
mov
imul
xchg
aam
outsl
jmp
mov
mov
out
ljmp
pop
test
xor
popf
pop
sbb
es
jo
push
mov
imul
rol
push
xchg
pop
mov
inc
jae
int3
insb
imul
and
push
cmp
cld
leave
jnp
pop
fs
xchg
dec
notl
or
xchg
dec
and
shlb
lret
mov
lcall
push
shll
mov
jmp
mov
ret
sbb
push
mov
sbb
inc
lods
adc
repz
push
fsubs
std
add
cld
jns
dec
sbb
mov
fadds
xor
inc
out
adc
adc
inc
or
sub
xor
and
icebp
jg
adc
movb
push
sbb
inc
ds
sbb
lods
jne
cld
xchg
xor
aas
imul
adc
imul
lahf
adc
inc
popf
leave
fistpll
inc
mov
xor
push
adc
mov
add
add
sub
je
xchg
ss
inc
add
adc
inc
data16
mov
push
add
mov
add
enter
dec
and
js
int3
and
sub
cmp
push
adc
push
cmp
mov
test
inc
push
test
or
andb
enter
mov
sbbl
repnz
mov
andb
or
inc
or
loope
leave
and
cmp
and
inc
sub
add
sbb
mov
mov
xor
push
sbb
xor
cmp
test
in
sbb
adc
sub
movsl
push
nop
mov
and
loopne
loope
enter
or
aas
mov
jno
adc
ja
lods
test
push
dec
add
or
add
push
jbe
pop
pop
into
mov
sub
mov
jl
mov
and
test
pop
iret
and
cld
aam
add
sub
inc
aad
push
jge
add
add
add
add
add
inc
test
arpl
sbb
xor
or
adc
sbb
inc
inc
dec
or
popf
sbb
push
inc
push
cmp
dec
push
cs
adc
lods
add
push
add
cmp
insl
or
dec
inc
inc
mov
push
je
and
push
pop
sbb
and
add
imul
pop
or
xor
jbe
lea
shr
pop
dec
push
xor
mov
xorb
pop
loop
jmp
call
outsl
cwtl
mov
imul
test
fsts
movsl
lcall
out
dec
loopne
lea
enter
imul
pop
shrb
xchg
push
sbb
sbb
jnp
adc
adc
add
mov
mov
filds
out
push
fldt
outsb
sbb
xchg
ds
repz
lret
add
xchg
lret
iret
data16
gs
shl
popf
es
lock
filds
pop
cwtl
cltd
fwait
sub
push
cltd
pusha
and
pop
adc
push
popf
repz
lret
insl
ss
sbb
jne
adc
inc
add
adc
fbld
fstps
mov
inc
int3
adc
mov
iret
insl
lret
fstps
movsl
cli
aaa
hlt
std
daa
jp
adc
je
jno
xor
enter
and
ret
shlb
ja
pop
jno
jge
cld
fiadds
cld
in
leave
jmp
cli
fdivr
jecxz
shr
mov
in
xor
addr16
lock
fwait
or
std
sar
sti
imull
loopne
out
push
ljmp
test
and
sti
lock
cmc
aad
mov
cli
fs
and
std
jg
nop
inc
add
add
add
incl
sbb
stos
pop
inc
out
push
dec
inc
mov
dec
push
dec
jecxz
dec
into
inc
out
dec
xorl
dec
pop
dec
mov
inc
or
outsb
outsl
push
ja
and
jb
xor
imul
jne
xchg
push
xor
popa
push
dec
ret
dec
xor
mov
aaa
and
xor
std
pop
jb
lret
xchg
push
jae
pop
xchg
decl
or
or
jno
addl
inc
aad
inc
stos
jge
out
or
stos
inc
add
and
call
lahf
lahf
inc
lock
dec
sub
cmpsb
add
push
push
push
push
push
push
adc
pop
add
add
push
insl
add
jo
jb
je
add
js
jp
test
xor
adc
sub
mov
sub
call
push
arpl
or
mov
push
cmc
loop
adc
cli
xchg
nop
xor
int
sbb
fcmovnb
adc
cltd
incl
rorb
out
mov
pop
xor
rclb
push
push
call
mov
pop
pop
pop
loopne
pusha
call
inc
and
lea
pop
jl
inc
cmp
adc
daa
arpl
push
lock
add
sbbl
adc
jl
int3
shlb
out
fs
mov
mov
add
fcomip
scas
je
inc
jmp
enter
jg
add
popa
ret
pusha
mov
pop
mov
mov
js
ds
sbb
or
pop
fiadds
ds
adc
dec
push
movb
outsb
sub
sbb
pop
outsb
push
or
add
cld
insb
and
sub
inc
cmp
push
add
sbb
pop
js
por
cmp
xor
add
xchg
cld
lods
shl
je
sarl
or
cmp
jne
fisttpll
jbe
xor
adc
mov
inc
fnsave
repnz
data16
push
repnz
cld
call
jl
out
in
add
cs
sbb
mov
add
inc
push
and
jne
roll
popa
cmp
mov
ret
pop
mov
js
femms
pop
pop
jo
lods
loopne
or
or
jl
or
add
mulb
jmp
in
into
nop
jb
cwtl
add
mov
push
jmp
call
nop
aad
add
or
sub
lods
or
xchg
sarl
sbb
mov
inc
into
js
pusha
movsb
int3
js
ljmp
pop
shlb
jno
pusha
cmp
sub
inc
xor
push
rorl
xchg
mov
leave
out
mov
or
push
or
ret
arpl
dec
lds
mov
mov
jo
cmpsl
adc
sub
mov
xchg
addr16
mov
mov
cwtl
push
repnz
sbb
dec
dec
jo
or
inc
shlb
add
add
das
xchg
test
add
sti
fcmove
sahf
scas
sub
push
jp
imul
push
xlat
pop
scas
outsl
xor
dec
cmp
dec
cmp
push
test
movsb
clc
inc
jne
and
add
sub
pop
add
inc
and
aas
test
or
mov
or
sbb
adc
pop
sub
pop
fsubs
inc
mov
sbb
test
inc
push
dec
push
push
inc
lods
cmp
xchg
mov
dec
cwtl
dec
push
add
loopne
sbb
dec
sub
cltd
scas
rorl
push
mov
add
sub
rclb
add
jns
dec
or
add
dec
jo
sar
adc
add
mov
lret
add
pop
add
lahf
call
dec
pusha
xchg
les
add
adc
mov
fiadds
push
sub
aas
mov
add
shlb
imul
push
add
dec
cld
inc
inc
lahf
cmp
cmc
push
nop
dec
pop
fwait
dec
inc
out
fiadds
mov
clc
push
pop
cmp
out
add
pop
xorl
lods
sub
loop
xlat
movsl
in
add
sahf
push
push
cmp
pop
cmp
scas
jl
push
ss
fldl
sbb
cwtl
loop
clc
dec
js
jp
adc
mov
fsubrs
lods
xchg
pusha
out
add
xor
mov
mov
jne
pop
sub
cwtl
repnz
pusha
clc
scas
jp
push
lcall
mov
push
cwtl
in
pop
ljmp
movsl
or
popf
jecxz
lea
inc
push
addb
lret
fsubs
call
ret
add
jecxz
rcr
jne
add
arpl
jge
ds
sarb
cmp
cmp
cmp
insb
push
push
call
lds
or
add
loope
orl
xchg
add
cmp
inc
clc
test
dec
cli
jecxz
mov
mov
out
or
add
add
or
aam
sbb
rolb
add
loopne
hlt
add
lcall
sub
pop
add
dec
andb
sub
mov
lock
adc
fcoms
in
add
add
inc
cld
pop
or
xchg
or
iret
xchg
mov
inc
nop
or
popa
inc
call
nop
imul
inc
cwtl
push
test
push
xor
ret
rcrb
dec
jns
add
dec
inc
xor
xor
jge
aas
push
xor
arpl
push
inc
insl
dec
rdtsc
push
pop
push
outsb
push
xor
dec
push
cmp
je
inc
popa
push
xor
int3
jbe
pop
jno
inc
pop
cmp
mov
dec
arpl
jo
push
popa
icebp
out
test
js
add
popa
outsb
push
push
aaa
lock
addr16
dec
movsb
pop
xchg
add
insb
push
in
insl
adc
aaa
push
test
add
xorb
addb
inc
dec
insb
fsubl
cmp
mov
jno
adc
aaa
push
dec
pop
push
pusha
jp
push
repnz
push
xor
pop
push
xor
lret
push
mov
mov
dec
mov
push
jo
cmp
push
gs
outsl
js
inc
sbb
popa
push
dec
push
insb
jno
jbe
mov
ja
dec
add
addr16
jae
lret
je
push
pop
pop
dec
clc
dec
xor
xor
mov
jle
push
push
call
mov
ss
sbb
outsl
dec
in
add
outsl
push
pop
push
imul
popa
pop
dec
push
pop
inc
inc
inc
ss
arpl
dec
jp
jge
cmp
push
bound
outsb
dec
push
insb
orb
outsl
dec
nop
das
call
bound
popa
push
dec
addr16
insb
mov
jp
dec
jo
sbbl
push
scas
stos
out
outsl
test
cmpsl
xchg
lods
popl
mov
sbb
sbb
nop
and
and
pop
pop
sbb
mov
jge
iret
xor
add
and
jno
cmc
fadds
add
xchg
aas
clc
mov
add
jecxz
mov
add
dec
inc
mov
jg
insl
imul
xchg
mov
or
fmuls
dec
sub
or
xor
jno
jne
cwtl
leave
int
lock
and
xor
add
dec
aas
cwtl
inc
daa
pop
xchg
fwait
inc
dec
xorb
loopne
cmc
cltd
cld
inc
out
jbe
ficomps
pop
fwait
pop
dec
nop
dec
cmp
inc
mov
add
test
push
inc
inc
xchg
mov
nop
addr16
sbb
jg
cltd
sti
inc
fistl
inc
inc
clc
dec
cwtl
sar
test
dec
aas
add
xchg
nop
daa
dec
addr16
stos
adc
xchg
cwtl
dec
fsubrl
xchg
dec
inc
dec
out
inc
xchg
aaa
nop
jmp
jne
out
lock
aas
inc
cmp
inc
popa
dec
lahf
daa
jmp
inc
inc
addr16
ret
std
dec
movl
mov
ljmp
mov
dec
aaa
push
xchg
test
ljmp
xchg
scas
out
cltd
inc
fdivr
push
dec
orl
inc
dec
cmp
mov
fisttpl
loop
dec
fwait
stos
lods
pusha
push
jno
sub
nop
sbb
jbe
daa
inc
inc
pop
push
inc
xchg
pop
xchg
xchg
xchg
std
cld
xchg
shlb
xchg
inc
sub
nop
clc
mov
and
inc
adc
xchg
lea
clc
std
or
scas
aas
shl
lahf
jg
mull
and
cltd
out
ret
cld
leave
xchg
dec
in
dec
mov
mov
adc
xchg
inc
mov
inc
pop
sbb
cmp
aaa
aaa
xchg
sub
sbbl
aaa
out
sub
imul
cmp
popf
nop
xchg
sub
shrb
or
cwtl
push
sub
jmp
xchg
mov
ret
inc
jmp
push
aaa
cmp
dec
std
jb
enter
lock
cmpl
xchg
lret
inc
cltd
jno
fisttps
cmp
rorl
ficoml
dec
inc
add
xchg
test
adc
xor
xor
cmc
cld
push
cltd
dec
xchg
inc
jmp
xchg
inc
xchg
pusha
push
pushf
cwtl
jg
std
add
lahf
xchg
lods
and
cmc
repz
nop
xor
sub
or
stc
xchg
mov
jmp
cmc
add
insb
js
dec
sub
dec
mov
jge
dec
xchg
jbe
xchg
cmp
adc
jmp
dec
fisubl
clc
in
iret
nop
jecxz
lods
sub
nop
jae
dec
aaa
enter
inc
xchg
xor
je
pushf
ja
pop
rolb
fwait
xchg
sub
jecxz
inc
test
cwtl
int
inc
or
jp
dec
jmp
nop
popa
int
aas
dec
mov
fildll
movsl
xor
enter
or
and
mov
testb
jb
sbb
lock
jno
js
stos
je
add
orb
xchg
rcll
inc
scas
add
push
add
pop
cmp
xchg
lea
mov
cmp
adc
dec
pusha
push
dec
add
ss
in
andb
ljmp
adc
in
xchg
loop
sub
sub
push
dec
ret
xchg
into
mov
rcrb
dec
push
xor
rolb
dec
jno
xchg
push
dec
call
jle
mov
into
pop
ret
mov
xchg
iret
loopne
js
in
add
arpl
loope
popa
sub
jnp
jl
pop
pop
mov
mov
push
jp
sbb
push
add
idivb
add
dec
fcomi
and
neg
cmp
fsts
inc
jne
inc
dec
ficompl
orb
mov
sbb
cltd
jp
nop
jae
js
add
and
xchg
imul
push
in
and
mov
jo
fisttps
mov
mov
in
loope
dec
mov
aad
mov
addr16
or
mov
push
or
dec
nop
cltd
nop
jl
mov
dec
insl
dec
fs
popa
mov
lret
les
xchg
push
push
fstp
add
add
add
pop
mov
jmp
or
pop
js
push
adcb
pushf
inc
add
mov
push
cmpb
leave
adc
sub
out
inc
dec
sbb
add
lret
rclb
test
add
test
es
sbb
add
push
or
or
cwtl
adc
jmp
loopne
fmuls
rclb
mov
push
int
adc
sub
add
adc
or
add
cmp
insb
outsl
imul
sub
in
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
je
push
and
stc
inc
bswap
and
inc
and
es
sub
sub
das
bswap
pop
jle
cmp
daa
cld
pusha
xchg
jle
and
clc
imul
jle
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
cs
test
jbe
and
and
arpl
jmp
cmp
insb
dec
inc
stc
push
sbb
and
inc
and
mov
jle
and
and
jns
pusha
jp
sbb
shlb
inc
dec
cmp
inc
mov
or
and
adc
push
inc
dec
pop
sub
add
push
inc
push
cmp
jo
jb
or
ja
or
dec
inc
divb
test
push
push
movsl
dec
inc
add
inc
push
lea
sbb
pop
fwait
sub
xor
push
dec
sub
inc
xor
arpl
cmp
inc
dec
dec
js
pop
gs
inc
outsl
adc
ret
xchg
int3
mov
sub
call
shrl
jecxz
mov
icebp
sub
jo
jo
data16
je
jns
add
lods
adc
jae
movsl
mov
and
sub
inc
or
cmpsb
or
enter
inc
adc
jmp
mov
pop
xor
push
xorb
inc
sub
stc
sbb
mov
inc
or
add
shlb
xor
out
in
clc
or
jmp
or
cmp
rolb
or
ljmp
mov
xor
and
push
mov
add
cmpl
jne
add
push
add
inc
jb
sbb
rolb
ret
test
je
mov
repnz
sbb
adc
jecxz
lock
gs
sbb
sub
push
shrl
pop
ret
xor
ret
lds
inc
je
pop
pop
pop
or
in
push
lahf
add
aam
repz
push
push
les
in
rorb
das
call
add
adc
sbb
and
imul
cmp
adc
lret
inc
jle
lds
mov
mov
test
jns
inc
mov
pop
inc
sbb
rorl
xor
enter
mov
loope
insl
xor
pusha
aam
jp
inc
mov
push
adc
pop
xchg
scas
je
pop
int3
aaa
gs
mov
cs
imul
and
jne
xor
sub
lret
lods
xchg
dec
mov
dec
adc
jb
sub
pop
pop
and
jle
gs
push
subl
dec
push
push
pop
mov
push
subb
mov
insl
push
xor
out
adc
outsb
imul
dec
fs
les
ja
popa
xlat
pop
scas
gs
ds
addl
sbb
loop
out
push
jmp
xchg
jp
test
cmp
or
dec
inc
xor
push
out
dec
lods
cmp
mov
mov
push
pop
or
dec
jae
mov
movsb
or
js
jo
push
dec
and
dec
cmp
sbb
mov
adc
add
add
cld
mov
call
push
je
adc
pop
mov
sub
xor
xchg
inc
mov
adc
inc
push
pop
int3
sbb
cmpsb
sub
mov
xor
sub
inc
and
mov
or
add
inc
cld
mov
dec
insb
lock
adc
or
mov
fcomp
cltd
adc
or
adc
and
dec
mov
inc
movsb
cwtl
mov
adc
xchg
or
inc
insb
ret
into
adc
xor
roll
add
add
les
cmp
or
mov
pop
dec
mov
aas
pop
or
push
and
add
out
mov
or
cwtl
jno
sub
and
push
and
xchg
or
or
in
dec
or
or
cltd
sbb
movaps
cmp
or
pop
sub
adc
adc
adc
sbb
sub
inc
in
xor
cltd
sbb
or
pusha
push
pop
jl
insb
sbb
jo
mov
lods
push
cmpsb
xor
mov
orl
and
xor
and
dec
sahf
adc
jb
movsb
cltd
jo
sbb
scas
mov
xlat
mov
pop
xor
mov
dec
inc
pusha
cmp
js
add
lods
dec
movsb
jns
pusha
cmpb
cmp
mov
lahf
loopne
adc
inc
xorb
popa
shll
jl
cmp
mov
pop
xchg
inc
enter
mov
in
call
adc
push
add
popf
rcrb
adc
mov
loopne
or
fadd
adc
inc
data16
in
adc
and
dec
or
hlt
lds
mov
adc
xchg
sbb
cmp
sbb
sbb
fadd
add
and
dec
sbb
jl
sbb
js
mov
mov
xchg
cld
and
mov
jns
add
and
in
cmp
xchg
inc
xchg
enter
addr16
and
inc
mov
dec
mov
inc
inc
and
add
inc
sub
dec
in
leave
hlt
sbb
in
add
push
xchg
es
adc
push
pop
mov
arpl
les
and
pop
sub
enter
adc
mov
adc
and
dec
or
rcrb
fcoml
clc
dec
or
sahf
hlt
sub
lock
mov
adc
dec
adc
loopne
mov
mov
aam
in
sbb
push
dec
les
and
and
dec
mov
and
pushf
mov
add
jg
or
inc
call
out
jg
jne
mov
adc
je
sub
xor
add
xchg
fs
jbe
add
mov
les
dec
jg
imul
cli
inc
or
dec
pushf
or
push
ret
inc
cmpps
adc
adcb
and
leave
sbb
in
int3
into
arpl
rorl
and
sahf
add
lds
pop
std
and
sbb
jmp
add
xlat
xchg
inc
push
add
sahf
cmp
mov
adc
sarb
pop
js
shrb
mov
jmp
xchg
test
add
testl
sbb
fdivrp
popf
add
jmp
stos
push
inc
mov
int3
repnz
test
adc
stos
clc
scas
ljmp
jmp
aam
not
loope
add
xchg
iret
inc
subb
mov
or
jne
xchg
jbe
dec
dec
pop
inc
add
cmpsl
xchg
cmp
xor
push
cli
push
in
cmp
sahf
xchg
pop
call
and
push
movsl
mov
popa
push
sar
mov
fsubs
xchg
clc
repz
mov
fldl
xchg
add
mov
push
pusha
les
int3
add
add
aas
jno
cmp
syscall
clc
sbbb
fisttps
lea
loopne
shrl
gs
pop
pop
mov
icebp
clc
rolb
mov
inc
sbb
lods
lds
cmpsb
mov
insb
scas
add
jmp
xor
aad
xchg
mov
std
adc
popa
test
emms
int3
stos
in
das
dec
pop
loope
add
mov
jecxz
rclb
pop
inc
int
lcall
cmp
inc
lods
push
mov
jg
and
loop
cmp
xor
jp
add
sarl
adc
das
lea
add
inc
jle
sbb
jmp
jg
sub
jge
add
inc
rcr
add
arpl
int3
and
cmp
cmpl
inc
xor
lods
cmp
and
xchg
mov
cmp
mov
sbb
cmpsb
add
movb
jne
fldt
cmp
xor
shlb
xorb
dec
nop
add
cmpsb
xchg
movsl
addb
mov
loop
mov
add
mov
sub
and
xor
push
push
scas
into
imul
pop
add
rcr
ret
call
add
mov
sbb
gs
std
loopne
scas
or
xchg
jge
pop
fiadds
lahf
into
ror
add
cmpsb
fcoms
or
lret
cs
loopne
cmp
xchg
jo
ret
movsb
inc
aam
andl
jb
mov
jae
fs
outsb
addr16
lods
and
and
outsl
jne
pop
call
popa
dec
gs
je
jo
pop
push
hlt
mov
lret
cwtl
add
add
add
add
add
mov
add
cmpl
jne
mov
mov
jmp
mov
mov
lea
lea
xor
call
jmp
mov
pushl
add
pushl
add
call
add
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
push
push
push
push
push
call
mov
pop
pushl
push
call
add
mov
mov
jmp
inc
cmpb
jne
inc
mov
add
add
mov
jmp
push
call
or
jne
call
test
je
mov
mov
jmp
mov
mov
push
pushl
call
test
je
mov
addl
add
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
add
add
mov
cmpb
jne
push
push
pushl
call
push
push
pushl
call
call
call
popa
jmp
popa
ret
pusha
lea
push
push
push
pushl
call
movl
mov
add
add
add
mov
add
mov
lea
push
push
push
push
call
popa
ret
pusha
mov
or
je
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
mov
xor
add
jmp
movzbl
cmp
jae
push
add
add
add
add
add
sub
add
inc
jmp
movzwl
xchg
sub
push
add
add
add
add
add
sub
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
add
mov
mov
cmpl
je
jmp
cmpb
je
cmpb
jne
mov
cmp
jne
mov
bswap
sub
add
sub
mov
add
sub
inc
dec
cmp
ja
jmp
cltd
jmp
inc
cmpb
je
cmpb
jne
mov
bswap
sub
mov
add
add
sub
inc
dec
cmp
ja
popa
ret
pusha
mov
add
mov
or
je
add
add
mov
or
je
mov
jmp
push
cmpl
je
push
push
pushl
call
pop
add
mov
or
jne
popa
ret
lea
pusha
mov
mov
rol
cmp
jne
ror
xor
cmp
jbe
xor
push
pushl
call
jmp
ror
pushl
pushl
call
push
pushl
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
lea
mov
add
mov
popa
ret
pusha
lea
push
call
push
push
call
mov
push
push
push
push
call
mov
push
pushl
cmpl
je
pushl
jmp
pushl
call
mov
jmp
inc
cmpb
jne
jmp
movb
dec
cmpb
jne
inc
jmp
movzbl
mov
inc
inc
cmpb
jne
pushl
call
mov
push
push
pushl
call
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
daa
and
add
or
imul
gs
xor
cs
insb
add
add
or
push
or
js
or
test
add
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
add
add
or
add
add
add
add
inc
add
adc
add
push
add
and
add
adc
add
addb
incb
or
add
add
add
add
dec
sbb
push
dec
rorb
fs
jecxz
push
push
lock
cmpsb
or
pusha
addb
jb
cmp
adc
lcall
ja
mov
add
cmp
add
imul
xchg
sbb
xchg
inc
lock
mov
sbb
nop
xchg
mov
inc
add
mov
jb
sarl
lldt
clc
or
mov
lods
enter
pop
add
lea
jb
push
shufps
xchg
push
int
xor
out
jno
cmp
scas
xor
or
mov
push
dec
inc
inc
mov
or
cmpsl
pop
out
push
dec
fdivrs
add
test
outsl
sahf
popf
sub
inc
and
dec
pushf
mov
push
xor
lock
add
icebp
shrb
je
inc
lds
add
mov
hlt
sub
out
pop
popf
rcl
cmp
push
jmp
popa
mov
sub
sbb
out
das
inc
pop
fnstsw
dec
adc
add
or
dec
push
add
and
push
frstor
fisubrs
cmc
push
cld
dec
insb
add
fnclex
addr16
push
ljmp
adc
std
outsb
jp
sub
push
push
imul
mov
in
mov
fistps
jnp
pop
add
cmp
push
imul
imul
jg
subb
mov
arpl
nop
pop
je
cmp
jb
add
dec
cmp
dec
out
pop
pop
js
js
ljmp
cmp
lds
dec
adc
add
or
add
inc
or
je
or
or
mov
adc
and
dec
adc
dec
add
add
