xor
add
push
pushf
add
sub
lea
push
xor
push
push
add
mov
call
test
je
xor
jmp
pop
insb
add
push
push
push
add
cmp
add
ss
lea
push
push
call
add
add
movw
cmpsl
or
rolb
mov
sbb
lock
fists
mov
cmp
out
pop
sub
imul
sub
or
or
inc
je
mov
pop
push
push
sarb
mov
sbb
mov
mov
out
push
push
push
cmp
insb
inc
pusha
inc
cli
push
out
xchg
cmpsl
mov
push
mov
jbe
xlat
adc
mov
mov
loop
xchg
xor
test
add
sarb
mov
mov
sub
clc
cld
sbb
push
cwtl
insl
xor
cld
add
mov
in
pop
add
inc
jno
cmpb
cmp
je
push
mov
subb
add
les
imul
mov
and
add
mov
fucomi
xchg
into
push
sbb
push
xor
pop
ret
xor
incl
movsl
lea
pop
pop
pop
leave
ret
mov
jp
xchg
fildl
mov
fsubs
and
mov
test
jp
lock
jae
xchg
sbb
adc
sbb
adc
add
int3
xchg
sbb
das
nop
fwait
push
fnsave
push
imul
sar
add
mov
add
add
push
mov
lea
sahf
push
lahf
insb
jmp
push
jbe
shlb
adc
push
cwtl
sarl
in
lods
sbb
popa
pop
inc
inc
out
push
xsavec
test
sarb
mov
cmp
aam
cmp
pusha
notb
xchg
xor
cmp
popa
sbb
sub
add
lock
arpl
push
popf
aad
ret
arpl
sbb
clc
fsubs
sbb
push
rcll
mov
sbb
push
jmp
pop
je
loopne
inc
testb
cmp
fdivr
push
mov
push
mov
aad
mov
and
mov
push
sbb
jns
js
cwtl
and
pop
jo
mov
sbb
push
push
pop
dec
sbb
jecxz
cwtl
inc
mov
movsl
imul
push
jmp
cmpsb
fs
or
outsb
sbb
jmp
add
push
xor
fcomps
mov
sbb
shl
mov
push
mov
xor
cmp
sti
nop
add
or
mov
cmp
aam
adc
data16
push
out
mov
adc
icebp
call
insb
lds
aaa
mov
and
mov
push
call
mov
movsb
adc
dec
jge
lock
xchg
push
fcomps
mov
int
push
xor
jne
loope
out
push
call
sbb
push
pop
jmp
shrl
clc
pop
cmp
addr16
xor
dec
stc
xor
jecxz
fcompl
pop
jnp
test
call
int3
and
jle
lcall
sub
xchg
xchg
cmpb
adc
and
popf
push
jnp
push
sub
add
push
jmp
lcall
jbe
leave
inc
leave
in
rolb
adc
add
hlt
mov
hlt
mov
iret
add
xchg
movsl
movsw
mov
add
mov
stos
stos
mov
lret
mov
or
stos
lea
dec
or
jns
pushl
in
inc
sbb
in
sub
inc
jmp
addr16
lods
mov
xchg
mov
ss
int3
inc
adc
jo
popa
xorl
fisttps
sbb
rolb
je
cmp
jne
push
jmp
clc
push
push
je
insl
hlt
inc
nop
je
jmp
mov
mov
pop
fwait
or
pusha
pop
fwait
or
mov
xor
sbb
jno
push
jle
fdivs
and
ljmp
xchg
psubq
xor
cmpsl
push
lock
fstpl
shrb
mov
jne
test
or
mov
mov
fisttps
jg
fwait
sub
push
push
cltd
lret
leave
shl
pop
daa
push
ds
mov
mov
add
popa
cltd
pop
idiv
cmp
je
mov
aam
ja
popa
mov
sbbb
sub
xor
xor
mov
mov
clc
adc
add
mov
or
jmp
mov
mov
fadds
out
lods
test
sbb
push
popf
ja
orb
repz
mov
xor
cmp
cmp
xor
outsb
sbb
filds
xor
add
add
sub
inc
xor
mov
sbb
jbe
fstps
addb
mov
mov
fcomps
int3
int3
mov
lea
add
jo
dec
out
inc
mov
push
push
in
xor
out
test
push
test
add
or
ret
pop
sub
imulb
pop
mov
ret
dec
cmpsb
cmpsb
and
int3
push
inc
faddl
int3
and
mov
cld
push
xor
daa
push
sbbl
push
nop
enter
rclb
mov
mov
lret
or
pop
push
cmp
je
gs
mov
lea
pushf
les
push
mov
das
cld
mov
movsl
or
les
push
addr16
clc
fidivs
mov
mov
je
and
or
push
push
sub
jp
pusha
sbbl
daa
jne
inc
cmpb
jne
flds
dec
lock
dec
shlb
mov
and
mov
pop
pop
push
daa
imul
lret
repz
push
dec
mov
rorb
filds
test
add
pop
cmp
into
cmp
push
push
sbbl
jns
in
fmul
xchg
mov
movsl
jbe
cld
fiadds
out
dec
loopne
shlw
outsl
cld
pop
xchg
xrelease
mov
mov
mov
mov
add
shl
sbb
pop
push
add
lods
repz
push
mov
adc
test
in
mov
jb
dec
data16
inc
dec
inc
fdivr
mov
lods
into
mov
pop
cwtl
scas
push
imul
sti
push
lret
ds
std
add
fs
mov
adc
adc
push
add
outsb
ja
pop
scas
insb
cmpb
sbb
int3
repnz
int
in
mov
scas
inc
push
iret
sbb
add
fs
add
inc
xor
add
insb
mov
dec
out
lods
mov
out
xchg
xchg
mov
jb
xchg
lods
imul
mov
sbb
inc
add
inc
mov
inc
xor
cmpl
jmp
xor
jns
push
cwtl
loop
bound
fsubrp
or
hlt
mov
stos
andb
int
and
add
and
push
mov
dec
push
lds
out
pop
hlt
in
mov
out
into
into
into
mov
movsb
mov
js
fs
cmpsb
push
jmp
xchg
jge
xchg
fs
out
pop
push
pop
int
sarl
or
or
out
mov
imul
jne
mov
addr16
in
in
popf
not
pop
in
in
in
and
ret
pop
adc
mov
inc
mov
mov
int
inc
mov
or
movsl
movsw
mov
test
cltd
push
cmp
out
int3
movsb
rcrb
adc
pushf
fsubr
jge
paddusb
orl
lock
insb
and
pushf
mov
sub
mov
adc
adc
and
cmp
dec
int
rclb
rorl
sub
jb
mov
imul
sub
icebp
ficoml
addr16
aad
loop
xor
add
xchg
not
mov
xor
push
movl
cmp
sub
dec
sub
icebp
dec
add
call
dec
fwait
pushf
push
cwtl
cmp
cmp
andb
pop
push
call
mov
push
mov
sub
les
jb
pop
outsl
and
pusha
cltd
xchg
incl
cs
pop
jb
ja
mov
jbe
mov
or
adc
imul
push
push
icebp
push
push
and
xor
or
fcoms
imul
push
andb
mov
hlt
jg
adc
inc
mov
mov
pop
js
stos
mov
test
into
inc
or
push
push
sahf
imul
pop
jl
mov
arpl
cmp
pminub
sbb
adc
es
sub
and
mov
add
pop
in
add
mov
int
pusha
cwtl
mov
jno
inc
pop
xchg
push
inc
pusha
inc
sbb
xor
int
jl
mov
push
xchg
inc
gs
cmp
xor
xor
lret
push
ss
pop
sbb
fdivl
in
subl
sbb
lods
aaa
add
xor
mov
mov
mov
cwtl
mov
sub
push
push
xchg
xlat
mov
xorb
fsubrl
pop
and
fs
lcall
adc
push
inc
inc
inc
add
or
push
mov
lret
lods
inc
xchg
fwait
pop
pop
pushf
cld
sub
jo
outsl
mov
add
pop
loopne
jmp
clc
je
push
clc
pop
arpl
cmp
jo
sbb
jae
hlt
push
notl
adc
mov
pop
xchg
pushf
cmpsl
in
and
xlat
fbld
pop
unpcklps
fdivs
inc
and
mov
mov
shll
ret
cmpsb
xor
push
push
dec
inc
add
push
fwait
xorl
stos
imul
and
push
push
dec
push
iret
dec
xchg
push
repz
jecxz
cld
sarb
and
nop
ret
jge
in
add
push
jg
lock
lock
outsl
adc
mov
aad
popl
test
jle
fsubrs
xor
in
and
inc
stos
pusha
cli
lret
inc
add
adcl
stos
gs
push
push
pushf
push
push
cmp
ftst
test
loope
push
mov
push
pusha
scas
push
int3
inc
lods
xchg
aam
sahf
adc
pop
mov
jne
xor
jmp
rcrb
sub
ret
mov
mov
sbb
cmp
mov
fs
inc
out
inc
subb
push
nop
mov
or
push
xor
std
decb
mov
mov
inc
inc
mov
mov
sub
pusha
push
push
mov
lcall
je
sbb
shl
cld
inc
and
jl
loop
ret
gs
or
loopne
shlb
mov
lret
xor
loopne
loopne
inc
out
pop
or
xor
je
or
jns
hlt
xchg
pop
push
pop
mov
cltd
insb
cmp
pop
xchg
xor
icebp
mov
or
cmp
push
les
sbb
push
jp
fadds
jno
in
and
pop
or
xchg
int3
daa
mov
xor
push
xchg
je
js
sub
ljmp
out
aad
not
addr16
ss
mov
xor
cmp
jl
mov
xlat
sbb
jbe
push
mov
jno
push
cmp
xchg
and
push
sti
and
sbb
scas
sarl
sbb
lock
lods
ret
out
mov
leave
fnstsw
mov
mov
test
push
and
mov
mov
or
arpl
addl
sbb
adc
or
push
push
pop
shrb
ss
in
mov
test
mov
stos
jae
movsb
shrl
mov
popa
cmp
sbb
jbe
cmp
shrl
nop
push
jne
js
pop
or
xchg
xor
inc
mov
into
leave
in
cld
hlt
hlt
or
lret
add
jp
jl
push
rcl
lods
lcall
adc
rcll
movsb
fldt
and
jb
dec
loopne
daa
ss
or
lods
jl
loopne
insb
rorb
pop
mov
and
test
setne
shlb
inc
sub
enter
jae
xchg
cmp
xchg
mov
xor
mov
jb
inc
cmp
or
sbb
jge
mov
addr16
pop
push
test
clc
sahf
push
je
dec
pop
movb
js
and
dec
les
and
loope
shr
xor
lahf
aam
mov
add
xchg
ss
jne
inc
lret
sbb
inc
shlb
loopne
rorb
add
push
mov
in
add
mov
push
dec
add
sbb
loopne
and
push
loopne
adc
and
push
sbb
test
mov
mov
ret
cmp
inc
mov
fsts
dec
adc
or
filds
sbb
cs
push
or
push
shlb
lret
adc
mov
jnp
add
mov
pop
ret
movsl
orb
dec
cli
out
jae
jae
andl
pop
xorb
inc
add
adc
push
add
dec
xor
dec
addl
add
incb
push
aad
outsl
iret
aam
mov
sub
sti
add
mov
and
inc
loopne
add
add
or
inc
add
aaa
cmp
add
pop
or
xor
or
or
xor
push
jge
hlt
insb
push
lea
and
loope
add
pop
cltd
sbb
pop
push
adc
cmp
xor
test
add
sbb
lea
inc
mov
sbb
sub
xor
ret
clc
mov
enter
jnp
xchg
clc
add
cmp
jbe
adc
or
mov
sbb
jbe
ret
cmpsb
dec
iret
dec
pop
ds
or
mov
or
xchg
mov
mov
and
es
sbb
pop
or
mov
or
push
mov
clc
xchg
jg
lea
cmp
femms
jb
sub
and
jno
loopne
call
inc
cmp
popf
pop
lret
lahf
enter
lcall
imulb
push
out
xchg
xor
and
cwtl
jecxz
testl
pop
aas
lds
jge
aad
outsl
pop
dec
loopne
or
iret
es
mov
or
loopne
xor
mov
mov
inc
sbb
outsb
shrb
cli
mov
pop
test
in
insl
out
pop
pop
lods
ja
push
and
inc
push
cmp
mov
jae
outsb
aad
mov
in
sub
sub
mov
int3
call
divb
in
popf
sbb
mov
sub
cmpsl
pop
mov
cld
mov
movsl
jns
jno
adc
lret
aam
repz
rol
lret
fstl
and
push
ret
mov
sbb
push
and
subl
leave
mov
int3
enter
cmp
enter
mov
sahf
loop
mov
scas
mov
fcompl
inc
out
ljmp
dec
hlt
pop
pop
testb
cld
lock
cld
ljmp
mov
popa
outsb
xchg
cmp
or
push
mov
mov
jmp
jecxz
dec
aam
adc
pushf
in
xor
daa
movsl
sahf
jbe
inc
lcall
mov
stc
add
or
xor
inc
add
dec
xchg
je
hlt
std
xchg
dec
or
scas
pop
mov
and
push
or
xchg
push
mov
or
out
jo
adc
jge
add
lds
xchg
jbe
dec
jbe
cmp
push
adc
fcomps
rolb
stc
xor
adc
mov
push
pop
aaa
xchg
jle
sar
es
dec
xchg
push
leave
xchg
fwait
lahf
add
je
push
mov
clc
pop
jbe
pop
cmp
push
cmp
add
push
cs
dec
test
mov
sub
lret
xor
jmp
mov
enter
inc
mov
push
adc
je
aas
mov
add
ret
mov
sub
push
push
sbb
mov
jae
adc
or
call
mov
xor
cmpb
cli
outsb
lds
fsubs
test
xor
fildll
fmull
sub
ljmp
pusha
fstpl
cwtl
mov
rcrb
mov
pop
fdivl
or
cltd
mov
enter
sub
inc
adc
fwait
popa
cmp
inc
aam
add
inc
sub
pop
pop
lock
pushf
add
pop
cmp
pop
jae
inc
ret
repnz
pop
call
icebp
aaa
cmpsl
pop
sub
inc
add
cwtl
lock
add
jmp
add
mov
xchg
fcomp
test
pop
mov
js
dec
sbb
cltd
cli
inc
jo
sub
jbe
add
sbbb
rorl
add
movsl
mov
and
rep
pusha
pavgw
mov
add
sar
and
and
mov
icebp
mov
lidtl
shl
add
pop
popa
sub
mov
sub
xor
add
outsl
xorb
pop
add
inc
sti
adc
and
sub
dec
sub
cmc
xchg
inc
cmp
push
dec
jb
mov
inc
mov
or
sub
sub
pop
rcrb
adc
int
mov
and
iret
dec
jne
outsl
mov
xchg
xor
and
or
xor
mov
pushl
pop
lea
rcll
xor
adcb
mov
inc
in
mov
cmp
aad
rorb
push
in
xchg
sbb
and
xor
mov
sbb
test
test
cmp
subl
inc
call
aam
lret
jne
mov
cmp
pusha
pop
shlb
push
push
pusha
sub
jne
cmpb
je
mov
mov
mov
xor
dec
mov
aaa
push
pop
hlt
hlt
or
and
andb
cmp
mov
js
pop
push
sub
adc
test
rol
shl
jmp
div
jnp
insb
sub
inc
adcb
fs
mov
test
test
fmul
rolb
xor
jne
enter
jns
test
in
mov
and
jge
stos
inc
leave
int
stos
mov
push
je
out
pushf
inc
xchg
out
inc
mov
lock
cmpl
test
or
hlt
mov
xor
cmp
adc
into
jecxz
mov
inc
mov
xchg
test
xchg
or
jno
mov
jne
es
sbb
adc
xor
movzbl
aas
nop
jecxz
loopne
and
or
inc
hlt
mov
add
mov
js
popf
push
je
cmp
sbb
std
mov
and
lods
subb
ret
mov
add
movsb
or
inc
or
ret
ja
lcall
mov
mov
addb
or
insl
mov
and
mov
ss
mov
sahf
inc
add
fisubrl
insb
filds
repnz
dec
enter
pop
or
push
sbb
inc
xor
adc
mov
xchg
lods
jecxz
in
cmp
xlat
adc
stc
cmp
jae
and
mov
cmp
inc
sub
or
pop
adc
fbstp
les
sbb
add
mov
lret
adc
dec
lds
add
jne
xor
jge
add
cmpb
jae
out
xor
add
mov
mov
subb
dec
or
inc
jmp
cmpsl
or
adc
adc
ja
cmp
mov
cltd
fiaddl
jl
clc
inc
rolb
cmpb
cmp
add
int
mov
cmp
je
cmp
cmp
jne
dec
push
mov
xchg
push
inc
and
add
adc
add
or
jmp
ljmp
jecxz
lahf
sbb
icebp
push
pop
pop
jo
sbb
aas
addl
jmp
cmp
jae
push
imul
and
mov
xor
dec
sbb
push
or
inc
mov
push
bound
shll
data16
ss
rolb
add
adc
pop
push
inc
inc
mov
nop
ret
movups
jne
das
insl
test
adc
or
movb
cmp
cwtl
add
sbb
sub
add
xchg
fsub
add
push
xchg
xchg
cli
or
aad
and
pop
jo
or
xchg
iret
push
mov
loop
scas
jo
iret
pop
shlb
xchg
lock
dec
or
jbe
and
cmp
jge
lock
mov
nop
das
or
and
add
add
adc
inc
add
scas
loopne
jp
pop
repnz
sarl
mov
adc
add
andb
mov
data16
ja
lea
in
test
push
roll
mov
add
lret
adc
and
jp
pop
push
fisubs
mov
testb
ss
orb
mov
ret
imulb
cmp
sbbl
push
adc
push
daa
xor
stos
sub
int
add
jecxz
or
arpl
cmpsl
enter
hlt
ljmp
push
or
mov
jbe
dec
or
xor
inc
lds
cmp
lods
clc
sbb
and
sub
test
add
fimull
inc
sarb
fcoms
lods
dec
inc
in
inc
movsl
data16
mov
dec
call
xor
cmp
push
adc
cmc
push
je
sbb
push
leave
push
hlt
fs
fdivr
push
cltd
adc
bound
fldenv
popf
jo
cmp
adc
jbe
xlat
incl
mov
addb
mov
push
and
dec
ret
inc
in
inc
in
mov
sub
xchg
pop
add
or
adc
lret
icebp
inc
test
dec
pop
fdivl
mov
push
in
out
int3
pop
inc
or
mov
fadds
je
lret
dec
les
xor
push
xor
fdivl
cmp
push
inc
xor
out
repz
addr16
int3
fists
sub
and
mov
imul
adc
adc
sbb
or
xchg
push
pop
add
enter
fisubrs
ret
inc
mov
sti
fisubl
and
leave
jp
lret
pop
gs
sbb
pop
in
sub
cwtl
xor
mov
sub
ja
pop
sbb
stos
push
pusha
in
mov
in
pop
popf
jb
test
cmp
sbb
inc
inc
dec
notb
push
jne
push
fwait
insl
icebp
test
in
add
mov
scas
xor
add
adc
add
fdivs
mov
or
jb
sbb
ja
out
pop
inc
mov
inc
jge
cld
cld
add
pop
dec
pushf
pop
and
popa
pop
hlt
rclb
pop
add
mov
enter
push
subb
movsb
push
mov
popf
sbb
xor
jmp
sub
dec
loopne
lods
frstor
inc
in
int
push
add
loopne
fcoml
lods
lock
mov
add
sarb
int
jo
inc
mov
cltd
cmp
mov
test
movsb
push
inc
adc
dec
push
dec
jo
sbb
arpl
cmc
sub
mov
ds
dec
lds
daa
sbb
fiaddl
cs
lea
or
fisubs
add
adc
add
nop
aam
aaa
jb
ret
addb
inc
pop
clc
push
xor
pop
mov
add
push
sub
push
inc
inc
div
xor
cmp
imul
pushf
dec
adc
push
rorl
mov
mov
xchg
dec
fmul
push
pop
push
lahf
add
jb
arpl
dec
push
mov
fdivs
popa
dec
loope
test
mov
out
je
mov
sub
enter
out
les
adc
out
fstpt
jb
int3
jp
and
xchg
xor
sahf
cmpl
push
and
fdivs
adc
pop
call
movsl
decl
inc
je
xor
jl
insb
jmp
lock
push
fidivs
mov
ret
mov
cwtl
por
push
insb
negb
int3
push
mov
loopne
hlt
sarl
in
mov
in
mov
add
pushf
mov
push
shlb
push
mov
sahf
push
jno
mov
mov
stc
das
sub
lods
mov
xlat
sub
cmp
in
pop
imul
jae
in
cld
es
popa
xchg
sbb
add
cmpsl
cmp
je
cmpl
jo
inc
test
mov
call
aaa
sbb
je
xor
stos
mov
std
push
ss
mov
mov
sub
jno
xchg
mov
mov
fs
ss
pop
xor
lcall
sbb
sbb
xor
or
pop
xchg
mov
leave
adc
cmp
das
pop
fnstcw
ljmp
cmp
or
je
mov
pop
lods
and
lods
and
or
lods
mov
daa
add
sbb
sub
stc
and
and
inc
cmpl
pop
sbb
adc
outsl
call
mov
jecxz
jp
out
fidivrl
stos
push
jg
cmp
push
inc
imul
stc
push
xor
pop
movsl
iret
mov
iret
fsts
inc
cmp
frndint
pop
jbe
sbb
rcl
pusha
dec
or
movl
out
fmulp
movsl
pop
xchg
jbe
and
clc
pop
fimuls
push
daa
std
sbb
cltd
mov
pop
xchg
dec
cli
mov
xor
add
mov
mov
das
sub
pop
adc
pop
test
mov
sbb
cwtl
push
shlb
daa
je
testl
mov
cmp
or
fcmovnb
push
sub
aad
push
or
orl
or
fs
mov
jbe
xor
mov
into
neg
jne
cmp
scas
dec
cs
aam
dec
outsb
stos
add
push
out
les
jp
clc
jne
sbb
icebp
lahf
cmp
push
pusha
ss
test
and
pop
xlat
test
pop
cmp
pop
jmp
in
mov
push
xchg
mov
sbb
or
out
sbb
push
xchg
push
pop
sbb
imul
lods
call
enter
mov
stc
cld
mov
add
add
in
inc
inc
push
push
cmp
pop
std
add
js
cmp
jmp
fdivs
push
push
aaa
sub
clc
jle
lods
push
mov
icebp
adcl
mov
sahf
out
leave
cmp
clc
test
imul
pop
cmp
push
inc
lock
arpl
lea
xchg
adc
rcl
xor
in
call
adc
adc
enter
mov
movsl
xor
pop
leave
es
jmp
sub
jl
pop
rol
sub
in
aad
dec
mov
mov
cmp
sbb
shl
cli
push
jne
test
add
mov
fsts
and
lret
pop
mov
pushf
xchg
mov
loop
cwtl
loop
leave
iret
cwtl
and
lods
xor
add
pop
pusha
lods
pop
cmpb
or
push
je
mov
mov
adc
xor
ret
sub
sub
ss
outsb
inc
movsb
ret
fsubl
jmp
jb
inc
pop
enter
es
dec
sub
lea
xchg
movb
rcrl
test
loop
fiaddl
je
fadds
jne
pop
out
dec
inc
ret
cmp
addr16
add
add
sahf
push
stc
cmpsl
lods
xlat
xor
call
lock
add
jg
xchg
test
xchg
and
push
fs
loope
xor
add
mov
out
cmp
mov
cmp
or
stos
pop
xchg
or
test
fnstsw
xchg
xor
lret
lods
push
aas
mov
and
pop
ja
popf
hlt
hlt
adc
outsl
lahf
jecxz
add
push
add
testb
jne
push
dec
pop
cmp
push
scas
loopne
pop
jmp
jp
lret
std
rcrb
push
mov
imul
loop
mov
mov
mov
orps
add
sub
orb
lods
flds
mov
test
outsl
jns
test
xchg
mov
pop
fbstp
mov
js
pop
mov
inc
shlb
push
gs
out
scas
movsl
rorb
cmp
push
lahf
cmpsb
pop
mov
sbb
push
inc
cmp
add
jne
mov
lods
add
nop
mov
in
adcb
in
mov
push
lahf
sub
pop
pop
hlt
leave
push
ds
ss
push
xchg
or
lahf
cld
push
pop
xlat
lret
movsb
jno
loop
xchg
dec
dec
sahf
je
data16
arpl
jl
sbb
xor
pop
fs
sub
push
xchg
stos
pop
xor
call
sbb
push
cmp
cld
jbe
mov
mov
mov
pop
xor
mov
cmp
inc
imul
iret
xchg
add
loopne
sti
inc
cld
je
push
adc
clc
lahf
sti
lods
lds
pop
in
sbb
sub
lret
mov
push
dec
xchg
fcoml
xchg
mov
inc
mov
rclb
adc
push
inc
push
add
push
sub
and
xor
lods
dec
push
inc
inc
cmp
add
fcmovnb
push
pusha
mov
nop
loopne
hlt
lods
push
sarb
cld
pop
push
gs
dec
sbb
addr16
enter
mov
test
add
or
adc
jnp
xorb
add
push
add
cmp
push
clc
test
fcompl
pop
push
lods
and
arpl
cmpsb
adc
mov
movsb
popa
and
int
mov
adc
in
lods
aam
cmpsb
shlb
xor
jl
jb
or
adc
scas
in
cmp
out
push
inc
mov
sbb
cmpb
fimull
ss
icebp
mov
cmp
jb
or
lea
mov
idivb
jbe
mov
add
test
or
mov
out
push
cmp
add
roll
mov
mov
inc
inc
inc
cmp
pop
andb
cmpb
cs
ret
push
orb
jmp
setbe
add
decb
sub
dec
sbb
enter
xor
fsubs
pop
sbb
adc
adc
std
inc
mov
sbb
inc
xor
in
mov
xchg
adc
jne
ffree
pop
lea
clc
pop
fsubs
and
sub
loop
divl
sbb
sarb
and
sub
xor
dec
sub
mov
push
fadds
cltd
movsb
es
push
pop
mov
inc
in
sbb
and
and
dec
jae
ret
adc
daa
sbb
and
pop
xchg
push
fs
push
fsubs
arpl
fiadds
mov
jg
mov
jge
xor
insl
mov
lods
push
pop
pop
hlt
push
add
mov
xor
shr
sbb
push
mov
or
sub
addb
fmuls
popf
or
add
mov
jo
shl
scas
repnz
mov
call
inc
out
mov
jbe
sub
pop
js
movsb
add
and
leave
movzbw
adc
inc
inc
cmp
movsl
jb
sub
addr16
and
mov
push
pop
outsb
sbb
push
bound
add
and
mov
xchg
dec
xor
mov
jo
lahf
mov
pop
push
sbb
sbb
lcall
push
sbb
push
jns
mov
inc
mov
or
les
dec
cld
push
imul
lret
pop
push
cwtl
mov
add
xchg
or
xor
pushf
dec
nop
popa
pop
push
jge
mov
enter
mov
adc
pusha
cs
add
adc
jge
inc
enter
lock
and
push
and
mov
push
clc
sbb
je
lcall
pop
add
test
je
inc
jmp
cmpb
add
xor
mov
inc
jmp
inc
cltd
cmpsl
pop
add
add
or
call
mov
or
or
outsl
insl
loopne
leave
push
outsb
lret
loopne
add
hlt
inc
mov
mov
mov
pop
loop
adc
add
ret
or
jne
ror
sbb
adc
ret
or
int3
arpl
inc
and
mov
inc
mov
dec
or
mov
cmp
daa
fisttps
fistps
push
pop
sbb
mov
dec
scas
popl
sbb
push
add
add
xchg
xor
jno
xchg
push
mov
fst
push
insl
sub
lcall
and
add
clc
ret
clc
fdiv
fstps
leave
push
and
lcall
movb
mov
pop
filds
cmp
xchg
dec
cmpsb
mov
aam
xchg
adc
jne
or
les
test
sub
jmp
add
push
push
clc
mov
jb
mov
push
push
repz
mov
fwait
pop
mov
xor
fisttps
sub
int3
addr16
push
jnp
stc
pushf
enter
xor
fisttpl
nop
andl
pop
add
pop
es
sub
in
aaa
dec
fwait
cmp
push
pop
mov
test
bound
test
inc
leave
pushf
sub
nop
xchg
gs
imul
add
pop
pushl
call
out
push
mov
sub
xor
mov
fidivs
les
push
push
enter
sbbl
loop
push
clc
adc
xor
nop
add
or
push
push
jmp
xor
mov
clc
sbb
xchg
out
push
sahf
add
test
out
cmp
xor
fildl
cmp
lds
sbb
push
inc
pusha
pop
push
dec
mov
mov
xchg
sub
pop
icebp
popf
dec
mov
cmp
inc
jg
mov
popf
mov
xor
inc
and
sbb
test
mov
push
mov
lds
jmp
lea
dec
fbld
test
mov
cld
pushf
lret
cmc
int3
push
test
mov
inc
jg
cwtl
inc
push
push
js
inc
fsub
mov
mov
fwait
ss
pop
xor
or
out
push
es
jmp
insb
sub
mov
loopne
jb
add
dec
daa
and
testb
cli
pop
cmp
and
movsl
mov
enter
pushf
adc
pop
popf
jne
xor
or
push
fdivrl
cld
outsl
push
mov
insl
sub
mov
ljmp
mov
push
mov
adc
xor
into
add
and
jmp
imul
and
xchg
pop
cmp
and
loopne
lcall
mov
jns
adc
or
in
inc
push
daa
dec
pcmpgtd
hlt
rclb
leave
add
sbb
mov
movsl
frstor
out
cmpsb
xchg
fnstsw
negb
adc
cwtl
imull
imul
xchg
rclb
pop
mov
xchg
inc
dec
or
push
cmpl
lcall
dec
pop
jne
and
adc
cld
lock
add
es
add
in
fsubrs
cmpsl
jmp
cwtl
xchg
pop
jae
movsl
clc
mov
pop
clc
cld
cld
into
ret
jne
shl
shll
xchg
dec
hlt
sub
xchg
and
rcrl
pop
rolb
and
inc
rolb
rcrb
dec
dec
into
and
dec
outsw
ficoms
popf
lcall
cmp
xor
clc
daa
push
leave
add
push
adc
mov
add
pop
push
mov
push
mov
cmp
cmp
setg
movsl
pop
js
push
pop
lea
movsl
jne
push
mov
push
jle
js
push
dec
mov
dec
inc
iret
adc
imul
into
and
cmpl
scas
cmpl
paddb
or
push
popf
insb
sub
insb
enter
dec
hlt
xchg
sbb
les
std
jns
fdiv
or
sbb
aad
fiaddl
adc
ret
adc
lods
mov
pop
push
scas
add
push
mov
in
js
ja
adc
xor
sbb
sub
adc
fldcw
call
test
xchg
aam
jmp
or
stos
push
lods
fimuls
mov
addb
in
les
clc
xor
shrl
sbb
mov
xchg
cmp
xchg
mov
test
test
je
test
jno
sbb
movsb
in
test
xchg
cs
jb
loopne
mov
pop
cmp
cwtl
lea
call
cmpsl
jns
or
loop
cmp
shll
pop
hlt
test
mov
add
and
sbb
cmp
mov
repz
cmc
jp
dec
mov
out
push
sbb
push
cmp
lret
push
add
imul
xor
dec
lods
gs
xor
fsubl
ss
pop
cmp
sub
pop
and
sbb
xor
adc
pop
inc
and
lcall
xlat
pusha
fimuls
cmp
jnp
scas
mov
fcom
jb
mov
push
lods
push
add
cmpb
fisubs
arpl
fcomps
adc
data16
push
mov
fcom
dec
adc
or
xlat
mov
add
call
jmp
pop
fstpt
jnp
les
dec
das
xor
jbe
movsb
shlb
rorb
lahf
xchg
and
rcrb
add
ficompl
cmp
sub
adc
jp
int3
cwtl
adc
mov
or
mov
je
fyl2xp1
cmp
dec
pop
sub
pop
lcall
pop
jmp
outsl
scas
out
inc
movsl
xlat
arpl
xchg
dec
lea
cmpsl
mov
mov
push
push
jno
movsl
lfs
clc
add
cmp
jl
jmp
push
imul
sahf
mov
and
loop
jmp
mov
test
mov
orl
inc
dec
dec
jecxz
mov
xor
push
mov
and
int3
jno
cmp
jmp
lea
jp
movsl
push
in
mov
mov
sub
mov
mov
inc
sti
cmp
sbbl
test
loopne
daa
cmp
mov
push
push
je
adcl
sub
cmp
jge
movzwl
cli
rcl
rcll
clc
lock
mov
push
push
sbb
xchg
sub
test
and
subb
xchg
pushf
test
pop
jne
test
dec
fcomps
xor
mov
add
cmp
and
es
mov
cmpsl
and
push
push
xchg
xchg
mov
sub
or
mov
inc
xor
adc
add
insl
pop
sbb
or
jae
cld
mov
sahf
xor
pop
cmp
inc
loope
clc
adcb
mov
bound
nop
pop
adc
repnz
aad
xchg
mov
sbb
in
mov
mov
xor
je
pop
orl
cmp
sbb
jp
sbb
pop
popl
adc
xor
jp
xchg
fs
sub
gs
in
test
mov
pop
pop
cmp
jne
push
pop
cmp
ja
popa
xor
mov
clc
and
nop
ss
sbb
nop
mov
imul
addr16
mov
lock
inc
pushl
mov
lea
adc
je
fsubl
les
ret
xor
push
mov
jmp
jp
fld
inc
xor
loope
addl
test
sbb
rolb
and
mov
es
call
test
adc
dec
push
jge
mov
mov
clc
cmp
insl
leave
mov
cmp
shrl
adc
jl
or
nop
add
or
ja
rcrb
mov
iret
int3
cmp
push
xor
mov
ljmp
test
imul
fimull
nop
and
sub
sbb
jno
or
cwtl
mov
into
packssdw
mov
cmp
push
sbbb
icebp
inc
xchg
add
mov
pop
jp
fcmovne
jb
lcall
lea
add
repnz
mov
mov
mov
pop
rcrb
imul
or
mov
out
add
loopne
mov
dec
inc
inc
or
push
cmp
add
push
push
xlat
pop
insl
imul
push
inc
inc
mov
add
mov
inc
dec
ret
add
and
jne
and
js
fsubrs
mov
mov
inc
pop
pop
dec
mov
mov
rol
push
sbb
inc
int3
or
push
test
mov
push
push
push
gs
lret
addb
sub
pop
dec
pusha
sbb
mov
out
in
mov
push
pop
push
std
adc
in
dec
push
bswap
push
push
mov
jmp
xchg
sub
mov
jp
mov
xchg
pop
dec
cmp
sub
push
into
push
cmp
es
add
bound
and
cli
dec
lret
or
jae
ret
fcompl
mov
hlt
fidivs
push
push
jb
je
daa
mov
loopne
fucomp
push
push
rorl
vsqrtss
andb
adc
popf
sub
pop
cltd
mov
mov
inc
or
data16
out
xor
adc
jnp
and
jg
mov
pushf
insb
mov
add
mov
mov
inc
push
xchg
adc
loope
pop
sbb
and
jecxz
test
sub
dec
call
push
fldcw
cmp
cmpsl
cmp
adc
push
mov
mov
mov
jns
or
adcb
dec
in
inc
cli
test
ljmp
sti
nop
popf
inc
jl
sbb
je
jl
jne
sub
cmc
cmp
cld
fs
cmpsb
or
pop
ror
cld
mov
cmp
adc
cmp
and
add
push
sarb
fs
push
popf
loope
pop
addr16
pusha
push
sub
int3
xor
xor
cmpsl
cwtl
and
pushf
push
ss
cmc
inc
mov
in
adc
adc
dec
lods
call
mov
jg
clc
bound
aad
stc
arpl
add
mov
hlt
dec
cmp
mov
enter
inc
mov
inc
inc
inc
sbb
and
mov
cs
push
mov
push
xor
mov
and
add
add
pop
push
ret
cmp
cld
sbb
jne
les
mull
push
mov
inc
nop
push
test
push
insb
jbe
adc
shll
cmp
test
push
test
loop
push
cltd
mov
xchg
orb
loope
nop
pop
jbe
push
je
aaa
xchg
adc
stos
pusha
lds
sub
sbb
mov
ss
arpl
cmp
jp
and
cmp
lea
xchg
inc
sbb
mov
je
xor
xor
xor
cmp
or
mov
or
fnstenv
ret
shr
test
lock
dec
jne
pop
pop
lea
not
ret
mov
inc
dec
lret
mov
loope
mov
add
inc
xor
xor
sub
ret
test
test
inc
push
dec
mov
dec
out
xor
dec
test
push
mov
ljmp
sub
in
sub
inc
je
pop
dec
or
xchg
adc
lock
or
xchg
lret
dec
and
popf
cmpsb
xor
repz
or
inc
xor
mov
adc
mov
insl
dec
rep
push
and
mov
in
rorb
push
mov
cmpsb
push
sub
inc
loope
jne
jge
or
ret
mov
ret
insb
pop
out
ss
test
inc
push
push
ret
lods
xchg
adc
jo
iret
or
sbb
pop
xchg
sti
inc
rolb
push
sahf
mov
cmp
mov
sarl
jle
insb
cmp
stos
push
pop
inc
add
test
xchg
push
clc
mov
fildl
stc
in
pop
ss
mov
nop
popf
insl
add
negb
or
or
test
loopne
and
add
push
imul
adc
sub
or
rclb
sarb
xlat
xorl
pop
mov
in
rol
shll
add
mov
ret
mov
mov
test
push
add
xor
movsbl
mov
jnp
cld
stc
inc
add
mov
int
movsl
hlt
dec
imul
push
push
movsb
lea
pop
clc
out
inc
inc
popf
or
leave
adc
inc
cld
mov
pop
push
sub
xor
out
add
push
xchg
push
cmp
cmp
or
mov
lret
test
push
pop
inc
call
mov
popf
popa
inc
insl
inc
and
xorb
push
push
xor
xor
cmpsl
push
in
mov
add
sbb
ja
adc
hlt
jne
loope
sbb
pop
xchg
or
cli
aam
or
jge
inc
les
xchg
cld
ss
mov
adc
fcomps
int3
jnp
loopne
repnz
mov
or
dec
data16
movsb
mov
cltd
add
cltd
pop
mov
adc
cmp
cmp
push
mov
sub
mov
adc
cld
cmovp
add
js
pop
adc
cmp
cmpsb
insb
popf
jl
lret
in
xlat
adc
gs
adc
mov
sub
pop
cwtl
adc
jo
sub
fs
rcll
add
or
or
rcll
je
pusha
hlt
xor
mov
pop
and
inc
or
push
test
xchg
pop
sbb
cmp
pop
mov
int
out
sub
ffreep
add
es
clc
mov
lods
js
inc
push
cmp
add
int3
mov
dec
jecxz
push
aam
loopne
sti
mov
sbb
out
cmp
sbbl
lcall
jle
push
outsl
push
insb
cmpsb
shll
add
mov
hlt
mov
cli
xor
dec
cwtl
push
mov
call
pusha
aad
daa
jne
movsl
cmovne
addb
and
nop
push
cli
in
or
jnp
cltd
push
push
xor
cld
int3
dec
adc
loopne
pop
mov
test
orb
push
lret
inc
pop
pop
add
jbe
sbb
icebp
arpl
push
fcmovnb
xchg
add
movsl
cmp
xchg
stc
cwtl
subl
nop
add
fisttps
outsb
lods
jmp
je
jb
mov
fstps
jae
les
sub
and
inc
fidivrl
xchg
hlt
insb
fidivs
mov
mov
jae
bound
push
sbb
sub
dec
decl
test
or
and
pop
notb
xchg
imul
sbb
mov
lret
push
dec
rclb
inc
ljmp
or
xchg
mov
mov
test
lret
sub
adc
inc
int3
inc
in
cmp
adc
subb
rcl
adcb
stos
sbb
cmp
jae
mov
ret
add
cltd
mov
pop
rcr
js
xor
in
push
xchg
stc
pop
cmp
negb
adc
xor
dec
or
stc
add
push
call
jo
push
and
cmp
mov
mov
neg
sbb
imul
add
mov
inc
jmp
popa
jns
push
ss
pop
cli
test
mov
adc
sub
adc
inc
push
cltd
mov
add
pop
sbbb
enter
idiv
cmp
add
jnp
add
out
enter
or
push
outsb
lds
add
js
fcomp
pop
jno
push
pop
nop
xchg
push
arpl
pop
xchg
inc
mov
add
mov
popa
jae
hlt
in
push
or
std
and
out
push
push
jno
das
rcl
cld
int3
pop
addr16
sbb
xchg
adc
addr16
sub
movsb
mov
andb
lahf
call
arpl
adc
enter
enter
sub
lret
push
jmp
or
fisttpll
push
test
dec
test
jmp
popf
mov
jns
pushf
xchg
enter
mov
xchg
iret
arpl
rolb
xchg
ljmp
and
fcoms
xchg
sub
dec
ret
and
xchg
adc
jb
and
sub
ret
cltd
idiv
adc
mov
push
xor
xchg
or
sbb
xor
inc
or
inc
jmp
nop
adcb
xor
in
xchg
cmpb
insl
inc
mov
sbb
arpl
xor
cli
sub
pop
in
adc
rclb
cmp
loop
add
mov
and
mov
pop
add
dec
outsl
mov
in
aas
push
and
pop
inc
or
sbbb
call
int3
je
enter
js
sahf
jnp
jnp
fsubr
decb
xor
sbb
jb
cmp
in
push
pop
adc
movl
jge
les
jge
push
add
les
cmpl
mov
je
shr
movsl
shrb
sbb
mov
insb
xchg
or
add
xchg
mov
mov
es
lea
int3
incl
sub
cmpb
cltd
sbb
stos
add
int3
sub
push
mov
push
shl
fists
cmpsl
and
movl
inc
fcoms
push
setns
nop
data16
cmp
ficompl
adc
in
aaa
add
push
mov
xor
xchg
add
movsl
dec
ss
js
xor
mov
lret
push
lahf
dec
popf
mov
inc
pop
mov
cli
mov
rcrb
mov
push
push
movsl
ds
add
outsl
cltd
cmp
mov
subl
mov
cltd
inc
idivl
call
xchg
push
ja
addr16
sub
mov
movl
jecxz
and
popf
shll
push
sub
xchg
lods
dec
sbb
inc
sub
sbb
fucom
push
jne
movsb
adc
sbb
pop
cmpsb
mov
jmp
mov
push
aas
mov
xchg
cmpsb
stc
pop
mov
cmp
rorl
xor
and
cld
adc
jle
mov
push
cmp
push
mov
imul
rcl
stos
sbb
cmp
xor
mov
or
popw
lea
call
in
push
jne
pop
loopne
inc
lods
sti
add
mov
inc
sub
ret
sub
or
ret
imul
inc
inc
js
push
pop
cltd
or
pop
inc
test
movb
inc
jmp
dec
fiaddl
or
pop
add
cmp
jb
mov
mov
inc
dec
jmp
andb
xchg
lcall
pop
or
mov
sub
sbb
mov
clts
mov
lock
mov
fldenv
push
not
mov
sbb
and
cmpsl
hlt
clc
cld
mov
adc
popa
xor
jbe
vsqrtps
adc
cwtl
push
pop
call
adc
sub
sahf
outsb
inc
fdivl
mov
pop
jge
dec
test
jns
and
add
int3
sbb
hlt
sahf
sbb
cld
mov
adc
and
push
add
sub
int
mov
int3
aaa
push
mov
mov
inc
adc
xchg
pop
sbb
scas
jnp
mov
push
xor
inc
pop
cs
pop
mov
rorl
pop
mov
int3
jae
push
sbb
pop
push
mov
call
pushf
adc
jle
repz
jns
bound
or
jae
push
je
leave
rorl
xor
cmp
push
repnz
and
push
jne
loop
push
or
sub
sub
or
out
mov
scas
push
xor
fs
jmp
fldenv
mov
test
push
jnp
mov
xor
or
in
lea
push
jno
sub
roll
cmp
mov
inc
ss
push
push
movsb
push
xchg
push
je
roll
pop
jne
sbb
mov
loope
adc
jnp
xchg
inc
xchg
lret
sub
fcompl
mov
addl
int3
rorl
push
cmp
lock
inc
lods
pop
push
sub
mov
inc
movsb
imul
jb
mov
jmp
mov
push
shrl
xchg
push
dec
dec
mov
xchg
adc
push
adc
cld
bound
xor
mov
push
addr16
je
adc
mov
or
pop
pushf
add
mov
aam
int
cwtl
or
test
or
cmpb
pop
adc
mov
pushf
enter
in
adc
into
push
mov
sbb
pusha
push
pop
sti
push
out
int3
xchg
xchg
outsl
jnp
ja
sbb
in
add
arpl
outsl
testl
and
lcall
push
cmp
pop
mov
out
sbb
inc
jg
cltd
mov
imul
mov
mov
jnp
inc
jno
xchg
adc
je
or
push
test
ret
sbb
out
or
push
lahf
sbb
cli
sub
and
cmp
cltd
jne
test
lcall
xor
ficoml
ret
dec
jg
inc
fs
dec
subb
cmpsl
mov
push
sub
mov
mov
repz
pushf
add
inc
add
mov
cli
xchg
leave
jb
or
adc
clc
add
out
inc
push
push
xchg
aam
pop
jo
pop
and
push
cmp
xchg
shlb
clc
push
push
dec
add
push
imul
mov
push
cmp
in
add
mov
jns
jae
push
mov
mov
mov
lods
sarb
lahf
clc
push
je
push
mov
pop
jno
pop
push
imul
xchg
inc
or
pop
fiaddl
adc
adc
cmp
add
rclb
jl
jmp
mov
dec
xor
cmp
xchg
xchg
push
js
mov
cwtl
mov
push
push
int3
add
adc
bound
adc
push
out
shrl
push
cmpsl
ja
lods
push
addr16
scas
mov
lahf
add
ss
sub
add
push
push
fisubl
inc
dec
push
dec
test
test
add
lea
mov
in
mov
adc
mov
pop
loopne
mov
sbb
push
jl
mov
mov
shr
sbb
cmp
pop
cmp
mov
jb
cmpw
jne
add
dec
pop
adc
pushl
inc
mov
and
js
dec
popa
jg
lea
scas
push
ss
ds
nop
mov
sub
gs
ret
pop
cmp
jo
push
pop
jbe
cmovns
adc
pop
ret
adc
cwtl
leave
sbb
add
mov
arpl
cmpl
push
in
xor
push
mov
shll
cmp
andl
lods
adc
ja
mov
inc
clc
add
leave
fs
call
inc
cmp
ret
pop
push
xor
push
xlat
pop
push
xor
mov
mov
movsl
sbb
mov
lret
inc
pop
mov
pop
popf
adc
mov
push
lret
adc
movsl
sahf
rcr
rcll
lock
mov
and
cmp
jne
add
cmpl
push
adc
and
jmp
add
hlt
push
mov
rclb
lret
xchg
add
pop
outsb
in
and
add
out
mov
je
add
dec
int3
hlt
inc
add
inc
cmp
jae
jmp
test
je
jmp
aam
sbb
lret
in
sar
in
xchg
sbb
mov
or
call
mov
sarl
or
ljmp
sbb
mov
inc
test
xor
cmp
adc
sbb
aam
inc
cmp
adc
mov
pop
dec
dec
outsl
rorb
inc
pop
sbb
xchg
into
into
andl
cmp
mov
andl
cmp
inc
loopne
xor
rcl
fcoms
or
mov
push
call
in
dec
cld
and
cmp
jne
into
jne
in
add
push
xlat
cmp
mov
gs
loop
pusha
loop
push
fsubrl
jp
cltd
mov
and
push
xor
mov
xchg
les
outsl
jecxz
push
mov
add
cmp
aam
adc
pusha
cwtl
pop
rolb
addl
leave
mov
xchg
cmp
or
add
mov
inc
mov
lock
xchg
push
lea
push
xor
add
sbb
cltd
and
pop
sbbl
leave
push
pushl
push
mov
and
mov
fldt
push
cmp
sbb
std
jge
xchg
into
sbb
xor
ljmp
test
jne
xchg
adc
mov
or
hlt
sbb
popf
and
icebp
and
call
cmpsl
inc
mov
in
inc
cmp
jbe
add
mov
test
mov
fiaddl
adc
jne
cmp
xchg
jle
inc
inc
call
test
mov
xor
stos
sbb
mov
sbb
sbb
call
inc
xor
sbb
loope
sub
xchg
sub
ja
ss
adc
cmp
xor
adc
adc
or
xor
cs
pop
ret
mov
out
sub
jnp
adc
jle
or
push
je
lods
and
lock
vandps
nop
leave
or
cmpl
iret
ljmp
sarb
repnz
cwtl
mov
push
or
popa
lds
push
adc
shlb
mov
cmp
and
xchg
movsl
mov
hlt
or
cmpsl
rclb
incb
loope
mov
push
sub
out
or
imul
loopne
shll
inc
gs
jp
push
daa
xchg
or
and
or
and
out
mov
sbbl
fwait
mov
push
xor
push
mov
sub
push
in
mov
inc
in
mov
sub
add
fsubr
mov
push
enter
in
popa
mov
and
push
lods
pop
sub
pop
pop
pop
cld
sbb
inc
fiaddl
test
nop
gs
js
je
mov
push
mov
fisubl
mov
inc
das
mov
enter
pop
int3
call
lret
es
cltd
jge
sahf
roll
or
les
mov
adc
and
lea
pop
leave
mov
addb
imul
out
stos
cmp
das
cmc
or
mov
inc
out
sub
dec
cmp
pop
fstps
ret
cmc
xor
xchg
sahf
or
jp
repnz
sub
mov
test
mov
cmp
lea
cmp
inc
add
cmp
jb
jne
cmpl
jae
mov
sbb
xchg
pop
adc
and
ljmp
mov
inc
popa
add
loopne
jns
jg
mov
cmp
jbe
cmp
push
loopne
je
ror
hlt
jmp
dec
jae
add
sbb
mov
inc
in
and
in
cmp
and
shrl
mov
repz
push
sub
aaa
iret
js
sbb
push
push
dec
cmpb
call
insl
adc
rcrb
push
sub
out
enter
jecxz
or
into
cmp
add
inc
push
pushf
rcrl
cmpb
push
cmp
and
ret
jo
pop
je
ficoms
push
mov
pop
dec
mov
cmp
inc
cmp
or
mov
mov
adcb
mov
xchg
movsw
push
mov
aam
lods
imul
push
je
enter
mov
jmp
cmp
sub
mov
dec
dec
cmp
mov
add
call
mov
xor
fcmovbe
and
in
call
pop
sbb
out
movsb
fstl
lods
mov
push
dec
in
pop
xor
fnop
and
ss
pop
test
sbb
shrl
inc
mov
aam
leave
sbb
mov
rcrl
insl
lea
test
mov
add
sub
and
push
loop
xor
pop
mov
inc
mov
popa
jmp
push
or
stc
mov
and
adc
pop
insl
lcall
and
xor
test
dec
mov
pushf
jo
shr
pushf
fidivs
and
out
pop
in
addr16
imul
shr
mov
ljmp
popf
cmp
xor
mov
mov
imul
mov
rorl
inc
mov
mov
sub
fcom
pop
and
hlt
push
aam
inc
popf
into
test
pushl
loopne
or
ljmp
in
dec
xor
xchg
fcoml
cld
cmp
add
push
stos
movsb
ror
jp
push
pusha
mov
ds
mov
or
push
bnd
sbb
sbb
push
and
leave
pop
adc
xchg
mov
imul
ds
in
popf
and
sub
and
mov
mov
pop
and
mov
dec
push
or
fcoml
popa
or
jnp
mov
jne
push
xor
mov
cmp
and
or
mov
pop
ds
and
mov
and
mov
or
jge
push
test
add
add
dec
xor
xchg
jo
fsubs
push
cmp
or
add
sub
fadds
mov
addr16
int3
and
and
add
mov
or
xor
dec
lretw
out
add
jne
cmp
aaa
adc
fimull
dec
jbe
dec
inc
sub
ja
inc
mov
xlat
push
push
ds
mov
out
mov
adc
cmp
add
pop
les
or
push
jb
lret
lea
mov
jnp
jae
dec
xchg
lea
mov
mov
inc
jno
les
add
or
addl
test
xor
mov
pop
mov
push
dec
push
cmpsb
cmp
mov
push
pop
xor
andl
xchg
fwait
jmp
xor
mov
je
sbb
icebp
or
ss
inc
shll
adc
jb
adc
mov
data16
sbb
mov
jmp
in
pop
out
cld
jmp
or
and
mov
inc
xchg
sub
cmp
pop
jae
fisttpll
cmp
push
fbstp
lods
push
sub
mov
inc
loopne
xchg
push
adc
pop
sbb
push
pop
inc
cmp
add
sub
sub
sub
and
xor
lds
divl
cs
or
popf
mov
addb
xor
dec
jae
cmp
push
adc
aad
push
loope
mov
sarb
das
pop
mov
push
lret
nop
movl
int3
mov
pop
push
adc
stc
push
jo
xor
pop
call
push
mov
in
pop
in
call
sbb
inc
cwtl
pop
mov
std
inc
inc
and
shll
or
aad
inc
sbb
dec
lcall
pop
int
cwtl
jge
jo
jne
inc
jnp
xor
pop
jmp
leave
inc
jo
jmp
jno
pop
dec
insb
ljmp
dec
into
mov
inc
xor
jbe
mov
bnd
jmp
push
inc
pop
loopne
add
jmp
inc
sbb
dec
xchg
shl
les
inc
jmp
sub
cmpb
je
andb
pop
push
pop
hlt
addr16
cld
or
popa
jbe
cmp
and
adc
add
cmpb
bswap
cmc
xor
divb
jne
inc
movb
inc
sub
in
mov
mov
pop
cs
lods
test
pusha
push
inc
cmp
push
and
adc
in
sbb
dec
push
cld
inc
je
pop
ret
inc
shl
add
je
pop
jmp
pop
addl
push
push
dec
loope
adc
mov
lcall
pusha
adc
sub
push
jg
popfw
cmp
sti
add
pop
mull
adcb
call
or
sarb
mov
jb
lcall
shlb
xchg
inc
push
dec
bound
pop
nop
mov
int3
cltd
mov
dec
cmp
mov
sbb
ret
adc
push
mov
jo
inc
adc
mov
jle
mov
dec
mov
jecxz
aam
popa
cmp
mov
imul
push
push
jno
sub
adc
cmp
push
push
fcmovnbe
adc
subl
add
sub
pushf
and
in
xor
push
inc
adc
xor
jge
sbb
jle
push
bound
and
inc
adc
xor
cmp
pushf
mov
lods
lcall
push
insb
das
js
pop
cmp
ss
imul
xor
inc
mov
hlt
imul
sub
push
mov
out
loop
pop
lret
or
lods
ds
insb
hlt
out
mov
leave
xor
lds
imul
inc
or
fiadds
cmpb
dec
jne
inc
push
f2xm1
mov
fisubs
fdivl
mov
js
mov
lea
dec
xor
mov
add
jno
add
mov
loope
pushf
out
test
test
push
sarb
xchg
test
call
pop
push
enter
xchg
add
or
ja
mov
shlb
xchg
add
repnz
mov
ss
mov
je
cmc
inc
aas
and
cmpl
adc
jb
bound
mov
mov
push
jl
jb
pop
mov
das
xor
sahf
cltd
jb
lock
dec
pop
push
push
dec
daa
aad
push
jg
or
sub
jne
push
adc
cld
pop
pop
jbe
mov
out
int
mov
xor
std
lds
sbb
es
je
push
je
sub
adc
or
mov
in
insb
out
jmp
pushf
insb
pop
icebp
into
cli
jbe
xor
xor
cmc
fstps
mov
xor
mov
popf
jnp
test
cmpsl
push
lret
call
jb
sub
xor
xor
and
test
adc
pop
xor
cld
ficoml
push
adc
xor
pop
in
adc
pop
sbb
xchg
lock
dec
add
mov
pop
mov
leave
add
adcb
push
mov
test
push
int3
aad
lret
sub
xor
adc
push
push
addb
jae
mov
cld
sti
mov
xor
leave
pusha
adc
sub
hlt
dec
dec
divb
push
jae
push
sub
cmp
or
xchg
push
xchg
and
sub
mov
cmp
mov
add
enter
das
push
inc
ljmp
mov
mov
pusha
fsubr
sub
mov
fdiv
sub
jno
sbb
add
stos
push
push
pop
je
sub
add
aas
add
push
sbb
insl
out
lock
adc
mov
and
push
mov
test
pop
push
test
xor
out
pop
pop
ljmp
jg
jecxz
fs
nop
jmp
loop
adc
mov
adc
add
push
fmuls
sbb
aad
movsl
fnsave
adcl
jne
icebp
push
testl
cmp
ja
aas
fcoml
xor
outsl
fcomps
inc
inc
inc
or
cmpb
clc
push
lea
imul
hlt
jmp
jl
jne
dec
icebp
stc
lret
adc
popf
lahf
adc
xchg
imul
std
aaa
cmpsl
pusha
pushf
jge
in
inc
sbb
xchg
adc
or
call
lahf
rclb
mov
sub
cwtl
div
cmp
ja
dec
sbb
add
roll
jge
push
aam
mov
test
imul
sbb
add
je
fadd
jecxz
mov
mov
add
and
xor
jmp
pop
test
mov
andb
idiv
mov
movsb
cmp
fiadds
repnz
inc
inc
adc
popf
call
inc
je
mov
adc
inc
fs
aas
xor
mov
int
push
and
sbb
cwtl
jb
cmp
mov
je
sbb
push
mov
push
mov
sahf
mov
xchg
divl
shr
push
xor
in
cmp
lods
mov
mov
mov
fnstenv
jle
xchg
test
add
pop
adc
cmp
xchg
test
pop
out
push
or
mov
mov
gs
movlps
lock
cmpsb
fidivrl
cli
in
in
fdivl
stc
pop
adc
cmpsb
shrl
adc
adc
sbb
fbld
cmpsb
lock
test
and
test
pop
dec
inc
add
loope
pusha
bound
lret
jne
dec
push
inc
ja
mov
cltd
inc
push
push
and
push
mov
mov
cmpl
dec
ret
xor
mov
pop
xchg
xchg
adc
cld
cmpsl
andb
in
fmull
jecxz
loop
andl
sub
mov
adc
stc
pop
add
div
stos
xchg
and
dec
sub
dec
stc
xchg
stc
sub
adc
or
loop
xchg
cmp
and
push
inc
mov
adc
out
rolb
mov
sub
hlt
dec
cmpsb
dec
gs
push
sahf
loopne
ret
add
cmpsb
push
inc
cmpsb
enter
andb
mov
cmp
or
test
je
push
and
adc
loopne
jle
cmp
jle
jle
xor
movl
call
cmpsl
into
dec
add
lods
jmp
stc
add
mov
jne
clc
insb
je
push
cwtl
imul
adc
std
dec
mov
xchg
mov
lods
mov
cltd
pop
int
jmp
push
push
addr16
or
rclb
adc
in
stc
or
pop
fmulp
jmp
bound
adc
je
mov
test
jne
test
add
mov
fs
push
pop
sahf
or
mov
fmuls
add
sub
sbb
sti
push
sub
arpl
pop
adc
inc
aad
push
lock
cmp
push
pop
push
mov
mov
mov
mov
sbbl
fsubs
jl
jl
loopne
shl
cmp
jbe
loopne
add
adcb
test
mov
mov
mov
and
inc
xor
sub
shll
and
sbb
int3
fs
je
adc
mov
sarb
and
js
mov
adc
push
call
jmp
imul
dec
mov
fsubrs
xor
cmp
das
and
lret
into
mov
and
xchg
sbb
addr16
mov
push
add
mov
lock
and
sbb
sub
jmp
mov
imull
shll
inc
sbb
daa
sti
push
dec
xchg
lods
add
inc
sbb
or
inc
leave
and
into
mov
je
rcrl
adc
jmp
out
into
into
dec
dec
pushf
add
lock
add
je
call
sbb
movsb
dec
add
in
notl
mov
fbld
mov
cmp
sub
fs
fstl
sbb
jns
rorb
ds
add
add
push
enter
add
iret
mov
iret
mov
aam
test
mov
inc
je
out
or
mov
jle
shlb
and
inc
jp
ds
cmp
push
dec
add
cmp
insb
arpl
icebp
adc
add
fcompl
int3
incl
ss
data16
jecxz
data16
pop
int3
data16
out
enter
sarl
mov
inc
jb
sbb
int3
cmp
shll
pop
push
mov
and
adc
stos
jle
push
pop
pop
inc
sahf
js
shrb
repnz
out
add
and
cs
clc
mov
cwtl
pushf
andb
insb
js
sub
mov
adc
mov
fwait
leave
cwtl
add
sbb
sub
push
jbe
jbe
rorb
sbb
jl
je
pushf
call
in
cwtl
pop
mov
shlb
fnstenv
arpl
in
adc
gs
lods
iret
mov
cwtl
push
int
lods
adc
loope
ret
inc
pusha
xchg
and
jns
icebp
rcll
jecxz
cmp
pop
popf
cwtl
mov
lret
bound
dec
ret
push
add
stc
add
xchg
gs
adc
loopne
in
lret
into
aad
leave
add
mov
jnp
or
jbe
jbe
rcrb
lea
dec
push
push
cmp
jno
imul
popa
pop
mov
lods
push
push
mov
pusha
add
mov
xchg
xchg
push
jecxz
fs
push
or
or
cwtl
hlt
add
fdivs
add
xor
cmp
dec
fdivr
cld
orb
push
mov
inc
xchg
addr16
mov
loop
les
popa
inc
arpl
cmp
adcb
jne
sub
xor
lret
testl
push
sar
jns
xor
sbb
push
or
xchg
xor
push
in
pop
and
push
aam
and
je
push
loope
xor
or
and
push
imul
xchg
test
aam
pushf
dec
cmp
jo
je
mov
ret
xchg
jg
or
cld
cld
lock
mov
fdivr
cmp
int3
add
add
sbb
arpl
popa
test
mov
mov
mov
mov
push
sub
jle
lahf
enter
jns
xchg
and
sbb
pop
dec
ficoml
sub
jae
out
push
call
pop
jl
jmp
cld
shl
and
movsb
jecxz
dec
pop
leave
bound
inc
pop
jne
test
mov
andl
mov
sti
pop
fyl2x
rcll
sti
shrb
mov
fdivr
and
call
cmp
out
test
jecxz
call
xchg
fs
hlt
jbe
inc
out
hlt
pushf
mov
push
jne
pop
sti
jl
popf
daa
dec
xor
dec
inc
out
sti
or
xor
fiadds
movl
imul
lret
xchg
inc
sbbl
fidivrs
int3
cli
mov
jno
popf
pop
fcomp
mov
insl
or
fldcw
pop
pop
test
push
fs
cmp
xor
je
pushl
lret
sub
add
nop
add
mov
out
dec
enter
mov
push
mov
pop
cwtl
pusha
subb
jecxz
insb
fs
stos
jecxz
je
js
stos
jecxz
jl
orb
mov
cld
add
xchg
add
ret
popf
lahf
cwtl
pushf
enter
cmp
mov
pop
out
cld
lods
xchg
add
cmp
mov
jle
adc
testl
dec
add
jge
and
je
add
push
mov
in
sub
mov
pop
addr16
adc
inc
sub
push
push
sbb
cltd
mov
xor
xchg
pop
push
or
imul
xor
inc
adc
add
push
shld
push
push
stos
fwait
xor
clc
imul
dec
shll
popa
cltd
out
add
jae
xchg
into
test
push
mov
cmp
je
or
insl
add
add
enter
rclb
jl
and
xor
cmp
add
cmpb
mov
sti
add
and
jge
mov
inc
add
inc
cmp
jl
cmpl
pop
je
cltd
xor
lahf
push
adc
pop
pop
movsb
pop
ret
xchg
mov
pop
adc
dec
push
rep
lea
mov
jl
filds
inc
in
or
mov
mov
dec
and
mov
dec
test
idivl
pop
ret
inc
aad
imul
subb
jl
cmp
jg
rolb
xor
push
jmp
mov
mov
out
push
push
in
popf
adc
push
sbb
aaa
test
jle
int
pushf
jne
dec
int3
jo
and
jmp
call
filds
mov
mov
sub
adc
sahf
jle
mov
add
es
es
jge
lea
sti
cs
arpl
les
orb
pop
dec
shll
dec
jmp
add
stos
adc
add
push
push
enter
and
jne
bound
push
push
push
shll
xchg
cmp
add
or
jae
add
or
inc
out
mov
dec
lea
jb
je,pn
and
lret
push
push
mov
ds
add
movsl
cmp
add
pusha
and
push
sub
push
dec
cmp
sbb
popa
sub
push
inc
leave
aam
outsb
mov
push
es
mov
mov
and
call
xchg
lods
leave
mov
pusha
or
add
shlb
push
xor
verw
xor
dec
movsl
and
enter
jecxz
es
enter
mov
push
cld
xor
push
or
enter
sbb
subb
popa
ds
cmp
stos
push
xchg
insb
jae
push
orb
xor
mov
stc
mov
je
ret
xor
lahf
mov
cltd
lock
test
dec
add
sbb
lods
out
loopne
jp
cmp
push
sub
jecxz
rorl
mov
push
test
add
adc
scas
mov
mov
fs
xor
sub
sysret
test
jne
push
adc
add
clc
xchg
adc
xor
cmp
imul
mov
jne
pushf
add
aad
imul
jbe
jle
popa
mov
push
insl
jp
aam
es
pushf
push
lcall
test
sub
inc
test
mov
out
inc
mov
push
fstl
aam
adc
hlt
repz
fcmove
stc
nop
hlt
cmp
mov
push
cli
mov
add
fdivp
inc
adc
xor
xorb
push
enterw
or
pusha
inc
push
and
fcoms
ror
xchg
sub
testb
lea
cld
xchg
mov
add
dec
mov
cmp
aam
xchg
jne
and
push
lods
push
cli
xchg
jge
icebp
int3
rolb
push
and
loopne
add
out
sarl
cmp
test
andl
repz
loope
and
fsubr
jne
cmp
xchg
popf
stos
std
jns
add
cmp
dec
push
leave
ja
clc
aaa
adc
subb
mov
ret
push
jg
and
jbe
sub
jae
push
ja
int
fs
sbb
pop
xor
insl
dec
aam
sub
jmp
cmpsb
dec
insb
pop
notl
fiaddl
and
xchg
test
ficoml
ja
je
sub
popa
add
cmp
and
and
sub
je
and
test
adc
das
or
xor
repz
mov
dec
add
or
jne
push
popa
dec
lock
add
dec
sub
popa
adc
cmp
pop
in
or
adc
sbb
jge
lods
or
pop
outsl
sbb
push
add
insl
je
lea
loopne
stc
adc
movzbl
lea
mov
mov
push
das
pop
cmp
cmp
push
pop
not
inc
xchg
push
pop
adc
push
push
pop
imul
aam
and
mov
sahf
ret
ret
add
out
rcr
lock
pop
rorb
mov
loopne
or
add
or
or
or
or
inc
sub
mov
inc
xor
loope
popf
dec
xchg
fdivl
bound
cld
insl
movl
inc
rorb
stos
xor
push
xchg
cmpb
hlt
mov
sbb
inc
xor
mov
js
mov
dec
je
jno
ret
and
sbb
pop
mov
push
in
fdivs
or
jbe
jl
mov
pop
incl
pushl
inc
call
inc
loope
mov
into
adc
and
mov
data16
fsubrp
clc
adc
mov
pop
leave
jb
push
ret
pminub
pop
push
iret
or
mov
test
movsb
mov
adc
cmovs
push
pop
loop
sub
jge
inc
fwait
adc
adc
or
cmp
push
nop
xor
push
pop
int
xor
cwtl
in
push
mov
jo
inc
or
jmp
push
mov
mov
dec
push
jne
popf
testb
dec
add
lcall
mov
or
imul
cmp
sub
mov
sub
xlat
testb
add
mov
jne
orb
xor
cmp
and
int
mov
pop
pop
pop
and
lock
cmp
inc
data16
mov
cld
push
sub
push
hlt
or
adc
orl
mov
and
mov
xchg
xor
sbb
sbb
data16
pusha
push
sbb
add
adc
xchg
add
add
aaa
push
pop
clc
lea
ret
push
mov
push
pop
gs
inc
addb
fildl
add
adc
jb
mov
pop
mov
and
insb
loope
sub
push
dec
lock
popa
or
call
or
xchg
mov
ss
push
xchg
cmp
arpl
je
and
push
push
aam
inc
js
dec
and
insl
and
mov
jb
fldcw
xchg
jo
cmp
enter
mov
sbb
incl
lret
in
push
loop
rclb
sub
ret
jbe
xlat
pushf
dec
ja
sub
shlb
or
xchg
fimuls
xchg
push
mov
cmp
or
xchg
sub
je
inc
mov
adc
cmp
in
push
sub
arpl
mov
sbb
clc
pop
cmp
pop
mov
out
add
and
punpckldq
push
mov
or
aaa
xor
cmp
adc
icebp
into
loope
test
das
or
in
scas
adc
hlt
sbb
repnz
mov
cs
and
dec
cmc
add
inc
pop
insl
and
push
scas
or
mov
rolb
rep
push
push
xlat
out
call
mov
inc
fists
push
push
inc
icebp
fdivs
nop
test
cmp
dec
add
pushl
cmp
inc
sbb
xor
mov
rolb
rolb
pushl
cmc
stc
mov
imul
add
mov
inc
adc
push
adc
mov
push
mov
les
je
repz
sbb
aas
scas
into
and
ljmp
stos
repz
or
popf
lahf
push
cld
or
jle
xor
cmp
aad
les
mov
out
jns
push
xor
scas
aam
movl
inc
je
test
or
push
or
add
cmp
mov
sub
jns
sub
adc
dec
call
jae
lcall
xor
cmp
movsl
mov
xor
cmp
push
sub
call
movnti
inc
int3
jnp
mov
jp
pop
or
addl
inc
ret
pop
imul
stos
arpl
shrb
fistl
cmp
jmp
test
leave
icebp
or
ret
hlt
mov
sbb
or
js
mov
mov
push
jge
pmaxsw
pop
mov
adc
push
sbb
int
and
fdivrs
jp
mov
jl
pop
or
xchg
cmp
ja
je
cmp
and
add
xor
je
xor
je
push
movb
test
adc
adc
xchg
push
dec
lock
mov
mov
scas
and
jl
sub
or
out
into
sub
xor
out
jle
rcr
cmp
jo
lds
je
sub
lods
je
dec
adc
or
xchg
mov
adc
jmp
push
add
ds
sub
aam
pop
bound
add
call
cmp
or
bndldx
adc
mov
inc
sbb
xchg
pop
jb
ds
push
inc
xchg
repnz
cmp
mov
sub
inc
iret
jmp
or
mov
fmulp
adc
loopne
cmp
repnz
movsb
movsl
cltd
nop
adc
adc
push
icebp
push
lea
push
cld
mov
push
jp
xchg
ss
repnz
jb
sbb
add
adc
ffree
jp
cmp
or
mov
call
mov
loop
dec
xor
or
mov
jbe
or
inc
push
mov
sub
jmp
and
bound
pop
js
loopne
mov
inc
push
call
sub
xchg
out
mov
push
push
rorl
mov
mov
repz
mov
sub
enter
mov
hlt
dec
arpl
pop
xchg
push
add
int3
cmp
jbe
lea
sbb
ret
sbb
cmp
adc
adc
test
ficoms
decl
and
sub
add
mov
repz
mov
popf
adc
xchg
icebp
lock
lret
or
jb
and
xor
add
lcall
jmp
lea
add
mov
add
inc
inc
dec
jne
pop
jmp
pop
inc
xor
or
or
shl
sub
and
push
or
rol
shl
jb
or
and
add
call
inc
rclb
test
xor
cltd
or
pop
lock
add
push
ds
ret
je
subl
xchg
jne
je
pop
jecxz
cld
push
push
add
or
fwait
sarb
inc
mov
mov
add
push
dec
call
mov
cmp
fildll
jge
add
jge
rolb
inc
jne
add
or
out
inc
adc
pusha
push
add
fidivrl
inc
mov
lds
cwtl
or
mov
loope
adc
divl
adc
test
push
push
jne
popf
jne
mov
pop
mov
inc
test
addr16
and
in
shl
and
in
jecxz
int3
loopne
mov
add
xchg
mov
xor
insb
idiv
inc
sbb
test
mov
cmp
push
push
out
dec
negl
mov
rorb
fldl
es
fcomp
pushf
ret
aam
sbb
les
mov
lds
dec
shrb
or
push
push
pop
or
xorl
push
adc
sub
add
lcall
mov
inc
int
mov
cld
cmp
aam
loop
lods
sbb
cld
dec
add
and
repnz
jns
or
or
cmc
add
jne
cwtl
mov
add
adc
shl
push
push
xchg
or
inc
in
mov
mov
dec
mov
add
shll
rcl
mov
rep
mov
mov
lods
add
adc
mov
cltd
jmp
mov
adc
in
push
push
nop
mov
ss
lods
pop
inc
mov
push
es
add
xor
jbe
cs
dec
xor
cmp
cmp
inc
sbb
arpl
cld
rcrb
push
and
pushl
inc
inc
fcoml
out
cmp
jo
nop
sbb
mov
mov
add
popa
dec
loop
cld
ret
xchg
mov
push
mov
jp
test
punpckhwd
adc
sub
xchg
sbb
loopne
jns
jle
adc
dec
popa
pop
dec
and
and
lock
lods
je
adc
gs
nop
int
in
in
mov
xor
lods
cli
push
cmp
sahf
and
xor
dec
jns
test
sbb
nop
jp
mov
icebp
mov
push
push
fdivl
jb
in
lret
icebp
mov
jne
xor
rcrb
cltd
cmp
es
aam
xchg
pop
pop
inc
std
lahf
inc
dec
cmp
and
je
push
fdivrs
dec
mov
hlt
aad
push
jae
clc
pop
push
and
mov
jnp
xchg
add
outsl
jle
xor
mov
or
push
push
mov
push
xor
sti
aam
xchg
push
daa
add
cmp
int3
mov
mov
inc
xchg
push
inc
lahf
andl
mov
mov
in
adcb
xlat
mov
aam
fisttpll
enter
and
push
call
inc
call
orl
dec
inc
lahf
addr16
dec
aam
mov
dec
shl
sbb
outsl
out
cld
jg
in
notl
jne
adc
and
sarb
add
pop
cwtl
sub
fstpl
movb
mov
icebp
inc
sbb
push
mov
or
test
mov
mov
fcmovb
cmpb
test
repz
insl
sbb
jbe
ret
jb
rolb
jo
popf
mov
xor
mov
push
ds
icebp
mov
lcall
pop
fidivl
push
lea
dec
xchg
push
dec
enter
inc
add
mov
test
xor
stos
sbb
cwtl
pop
cmpsl
fisubl
jl
push
push
aad
mov
popa
mov
cmc
insb
sbb
xchg
jbe
pop
xchg
mov
and
dec
mov
inc
xor
arpl
mov
adc
mov
inc
cmp
dec
insl
inc
dec
xchg
stos
sub
or
xor
ljmp
inc
cmp
add
xchg
and
push
js
jae
push
adc
add
stos
sbb
sbbl
cwtl
dec
sarl
test
sbb
jp
mov
sub
add
call
or
cli
or
pop
out
je
or
and
mov
or
push
push
push
loop
sbb
xchg
sub
and
and
shrb
movsb
xor
test
xchg
sub
adc
int
clc
daa
mov
fnstcw
cltd
adc
stos
jnp
adc
and
call
push
in
xor
mov
push
sub
das
sub
leave
xchg
add
sbb
adc
adc
stos
push
jmp
or
pop
or
push
stos
mov
sub
inc
sub
or
shll
push
inc
jns
sub
jp
adc
dec
fmull
jno
je
mov
cmp
ss
and
sbb
xchg
adc
aam
adc
xchg
das
push
push
adc
movsl
test
jno
dec
loopne
jg
in
notl
clc
pop
cmpl
add
jle
mov
jmp
lock
clc
imul
or
fsubr
jae
mov
mov
bound
loop
cwtl
or
pop
add
in
lcall
push
mov
mov
adcl
or
nop
mov
xor
xor
mov
clc
js
jle
xor
call
imul
xchg
inc
dec
add
and
int3
lret
jmp
clc
pop
js
cmp
pop
fldcw
call
outsb
std
push
pop
fbld
cmpsb
inc
jg
das
adc
in
sub
mov
dec
or
aas
mov
lods
inc
jge
int3
mov
push
mov
jne
sub
push
cmpsl
inc
mov
jl
push
mov
les
jmp
cmc
lcall
or
loop
pop
test
addl
add
decl
mov
and
add
push
jl
adc
jge
mov
je
mov
xchg
daa
shrl
and
fadds
xor
sbb
imul
mov
fdivrl
lahf
aad
in
lock
ret
xchg
fnstenv
or
add
bound
jo
andb
cld
repnz
les
imul
iret
arpl
push
lds
bnd
fcmovbe
xchg
cmp
sub
mov
out
sub
or
cmpsb
pusha
push
add
mov
enter
adc
lret
test
adc
xchg
mov
iret
loop
push
mov
mov
and
sbb
pushl
push
jecxz
dec
ljmp
jae
fidivl
jmp
lds
mov
fxch
or
je
stos
xchg
jne
mov
adc
into
and
push
cmp
clc
sub
pop
add
ret
inc
std
pop
mov
xchg
push
or
cmp
or
hlt
xchg
mov
movsl
adcb
inc
ljmp
xor
mov
mov
subl
cmp
adcb
mov
pop
mov
and
test
push
ror
loop
ret
lret
dec
loope
add
hlt
jle
test
dec
sarl
dec
sub
dec
fbld
dec
cmp
push
pushl
and
sub
pop
test
jle
bound
out
mov
and
and
cld
xor
mov
sbb
jl
in
mov
lods
inc
testl
add
fcmovnb
in
xor
push
mov
fs
mov
idiv
mov
jno
jecxz
add
outsl
add
lock
daa
orb
xor
adc
pushf
aad
adc
xor
push
shlb
bound
push
xor
rorb
movsl
je
sub
inc
pop
pop
pop
pop
popa
fisttps
jmp
pop
jne
mov
int
int
xchg
popf
movsb
or
inc
cmc
add
and
call
adc
and
add
cmpb
jne
cmp
movsbl
ja
jo
mov
movb
mov
rcrb
sub
cmp
jge
cmp
shlb
sahf
roll
inc
pop
add
je
rorl
and
xor
inc
mov
mov
xor
push
push
aaa
and
aam
test
shlb
mov
dec
push
sbb
nop
bound
cmp
jo
sbb
test
push
cmp
setge
mov
in
call
cld
push
push
out
lea
je
test
mov
daa
shrl
push
sub
push
adc
or
inc
cmc
push
dec
out
lds
push
les
fdivl
push
rclb
xor
sub
or
fstl
popa
sbb
mov
movl
adc
into
pop
or
push
xor
cmpsb
jne
sbb
xor
or
cmp
cltd
push
push
fmuls
in
andb
mov
cld
jb
inc
bound
mov
xchg
loopne
lods
adc
jge
lea
xlat
out
insl
int3
daa
aaa
dec
sub
xchg
inc
icebp
push
in
lea
cltd
dec
mov
sbb
aas
rclb
add
mov
ds
outsl
inc
lock
inc
out
adc
loop
cmp
push
push
and
mov
jnp
or
and
movb
mov
mov
nop
cmpsb
ss
arpl
adc
jne
sti
xor
xchg
sub
xchg
bound
mov
push
xchg
lcall
sbb
loope
and
pop
je
dec
pusha
popf
arpl
push
inc
add
add
into
xor
je
or
mov
repnz
inc
cmp
pop
ja
add
les
shl
add
adc
xor
scas
inc
pushf
movb
in
sbb
sub
out
lcall
out
mov
sbb
loop
andb
pop
xor
push
pop
inc
mov
xchg
push
push
enter
or
mov
stc
cmp
inc
lahf
xchg
cmpsb
aam
cwtl
cmp
mov
int3
int
inc
or
call
mov
dec
dec
sahf
dec
cmp
leave
or
es
aad
inc
rcrl
xchg
ja
cs
mov
test
adcl
add
or
pop
fidivs
dec
movsb
pop
aad
add
test
mov
lret
mov
cmp
les
les
dec
pushl
push
fs
int3
pop
push
add
pop
mov
or
sbb
pop
xor
lock
clc
nop
int
jmp
add
xor
xchg
xchg
nop
cli
inc
push
int
or
jnp
or
dec
mov
jge
cli
pop
loopne
jns
cwtl
lock
dec
clc
pushf
cli
cld
xchg
fbstp
add
jecxz
pop
adc
pop
and
popa
cmp
jge
nop
mov
shl
les
andb
sbb
xor
inc
fdivl
jne
ret
mov
xchg
inc
adc
je
repnz
mov
inc
jno
notl
sahf
sbb
sbb
xor
mov
int3
gs
test
inc
adc
ficomps
testb
mov
insb
and
sbb
pop
in
sti
push
push
outsb
xor
jo
xor
cmp
je
mov
mov
cmp
fcoml
cmp
push
sti
sbb
inc
pop
aam
test
mov
pushf
ror
lahf
scas
dec
popf
mov
arpl
cmp
mov
mov
dec
aad
xchg
cmp
fadds
add
push
roll
loopne
lret
jae
andb
or
dec
and
adc
fldt
ret
je
xorb
push
shr
andl
arpl
test
or
fucomip
scas
clc
or
popa
cmp
lea
mov
cmp
mov
fdivr
mov
jns
dec
imul
or
cmp
out
or
push
push
lock
stos
push
jne
sub
dec
pcmpgtb
pop
xor
scas
add
dec
sbb
jle
dec
adc
xor
ret
sbb
test
adc
stos
icebp
roll
push
jne
pop
lret
xor
inc
stc
mov
addr16
mov
insl
dec
mov
add
xchg
and
or
sbb
inc
xor
repnz
add
cmpsb
mov
push
and
ds
lea
adc
sbb
inc
hlt
pop
pushl
or
inc
hlt
mov
push
add
loopne
jmp
jne
or
pop
push
or
out
aas
add
sbb
dec
adc
sbb
dec
push
mov
shll
cltd
adc
mov
clc
popl
rol
adc
jg
sbb
cmpsb
push
jne
pop
and
stos
dec
sbb
lcall
push
sub
mov
mov
mov
int
pop
jnp
or
pop
dec
lret
mov
stc
jmp
dec
add
dec
fwait
push
add
jo
ret
sbb
aaa
xor
cwtl
lahf
or
push
push
cmpl
cld
sub
inc
inc
pop
mov
push
inc
push
mov
fs
les
in
xchg
xchg
cltd
sbb
hlt
arpl
push
movsb
ret
push
ret
jecxz
outsl
fnsave
dec
aad
mov
dec
sbb
jp
xor
push
mov
repz
adc
fisubrl
mov
push
dec
sbb
push
jmp
int3
pop
cmp
out
add
test
roll
or
dec
cmpl
inc
inc
aam
es
sbb
fsubrs
dec
xchg
cmp
dec
xor
mov
test
jg
insb
ret
dec
xor
sub
icebp
ja
adc
push
dec
ja
clc
mov
shll
les
mov
push
push
jne
inc
rol
movl
add
mov
out
or
pushf
mov
out
call
jo
cmp
call
push
dec
cmp
call
xor
call
pop
fbstp
sbb
push
inc
clc
jg
jg
mov
aam
loopne
xor
dec
int3
jg
cmp
push
shlb
mov
jle,pt
mov
out
js
cwtl
jg
sbb
push
inc
js
adc
jno
or
out
or
mov
dec
call
cmp
dec
fnstenv
dec
jg
pop
cmp
xchg
dec
sub
jge
cmp
in
mov
and
push
cmp
xor
or
lock
mov
mov
sbb
aam
ftst
int3
into
insb
adc
sub
cmpl
sub
mov
adc
dec
nop
mov
inc
dec
hlt
enter
jecxz
loopne
lcall
ror
clc
mov
bsf
mov
je
mov
inc
test
clc
mov
movsb
push
pushf
xchg
cmp
or
lock
nop
mov
mov
mov
cmp
clc
mov
cmp
inc
loope
push
jg
cld
inc
push
jge
rolb
pusha
loope
gs
or
testl
lds
lahf
sbb
jbe
fyl2x
insl
xor
movsl
push
jg
cld
inc
and
pop
push
sbb
push
sbb
dec
inc
leave
dec
sbb
inc
das
arpl
xor
xor
lock
data16
mov
adc
lods
and
sbb
mov
jge
or
jno
inc
sarb
sub
aam
addr16
lahf
mov
test
jg
cld
fstps
sbb
test
je
cmp
insb
inc
pusha
mov
aas
cmp
call
icebp
inc
xchg
inc
ss
ljmp
hlt
jne
and
dec
popa
push
gs
jle
cmp
push
pushl
addl
pop
mov
cmpsl
push
adc
cmp
shr
lock
fsub
xor
mov
sbb
sbb
add
sub
sti
shl
test
sti
shlb
xor
nop
xor
jl
xor
jl
cmp
sti
cltd
xor
mov
sti
mov
stos
xor
cld
rcr
shlb
aam
lock
xchg
sarb
mov
mov
adc
cmp
mov
cmp
mov
pop
je
lock
xchg
mov
xor
call
je
mov
inc
xor
ds
pop
shrb
xchg
sbb
mov
clc
mov
das
test
push
jg
cmpb
js
addr16
push
pop
je
sub
insb
clc
sub
push
jbe
mov
jecxz
jl
lahf
sbb
sbb
fyl2x
addr16
add
cmp
dec
cmp
out
nop
mov
addr16
lcall
mov
adc
add
mov
sub
mov
cmp
mov
add
mov
into
sbb
mov
sti
or
jge
mov
lock
lret
sbb
dec
jno
pop
xlat
nop
sub
add
gs
call
ljmp
mov
jnp
cmp
pop
inc
lret
or
xchg
push
push
icebp
mov
jl
idiv
arpl
sub
push
dec
in
popl
push
add
rcr
lcall
mov
aaa
je
mov
xlat
inc
cmp
mov
sbb
insb
sbb
or
mov
jmp
push
pop
sbb
enter
mov
mov
enter
xchg
lods
mov
pop
or
in
cli
in
dec
jo
sbb
jp
adc
ds
push
dec
mov
and
jo
cmp
jmp
movsl
ljmp
cmp
jg
sbb
js
jl
xor
sub
jns
shll
xor
test
pop
and
add
jp
xchg
and
jne
or
add
mov
insl
cmp
mov
adc
jmp
subb
and
lock
add
dec
mov
push
mov
xchg
jmp
sbb
push
jmp
pop
in
jg
jne
push
mov
sub
mov
rorl
aam
rcr
in
push
and
popf
cmp
mov
push
ret
stos
mov
int3
push
and
add
sub
cld
mov
pushf
call
pop
outsl
imul
push
mov
fsts
dec
je
push
xchg
addb
sbb
pop
add
lock
push
lret
icebp
pop
xor
push
aad
pop
push
ss
hlt
das
or
cmp
or
and
into
pop
mov
pop
movsl
push
adcb
sbb
rolb
gs
jmp
fidivrs
rcrl
in
jmp
mov
test
addr16
push
daa
pop
adc
call
stc
and
cld
dec
sbb
fucom
int
pushf
jbe,pt
inc
add
iret
into
sbb
add
into
je,pt
test
rclb
call
out
pop
loopne
mov
cmp
fmuls
fcomp
je
js
push
icebp
addr16
pop
int3
fld
cmp
jbe
fld
daa
mov
mov
cmp
in
clc
push
test
icebp
inc
xchg
mov
aas
cmp
fsts
iret
mov
jg
cld
jmp
loope
xchg
sbb
nop
pop
sbb
sbb
das
pop
fs
sti
shlb
scas
push
push
mov
pop
js
push
dec
push
jg
js
adc
call
in
fistpll
mov
fcompl
mov
loope
clc
mov
in
adc
xlat
xor
aam
ret
rcll
lods
aas
cmp
fldenv
push
adc
loope
mov
sub
or
jg
cld
pop
add
push
sti
shl
popl
clc
or
aas
cmp
in
hlt
or
cmp
or
lods
xchg
rcrl
pop
je
inc
aam
xor
rolb
fdiv
inc
ror
push
mov
mov
popa
add
clc
dec
int3
push
aaa
cld
shll
add
xchg
test
or
or
es
push
add
push
jbe
adc
movsb
aam
pop
hlt
inc
mov
push
scas
inc
sbb
add
movsb
add
stc
ret
add
inc
test
stos
in
movsb
xor
mov
or
imul
or
std
add
push
lods
sbb
fldenv
out
fxtract
jno
pusha
shrl
dec
jo
push
ljmp
and
lds
push
enter
inc
and
cmpsl
dec
cmp
add
add
lock
jbe
sub
mov
ret
ja
add
jecxz
xchg
ja
add
add
jo
inc
repz
push
adc
leave
js
loopne
sbb
push
jbe
pop
loop
jne
popa
mov
jge
inc
nop
sahf
pop
inc
into
sub
sbb
or
add
mov
sbb
push
cmp
push
push
hlt
stos
lcall
je
adc
insb
clc
and
fistl
and
or
mov
out
push
mov
mov
leave
lods
dec
mov
push
pop
shlb
daa
jg
push
into
dec
mov
inc
std
mov
lret
adc
push
mov
push
jecxz
add
dec
xorb
test
fwait
mov
movsb
lods
mov
jmp
pop
enter
fs
inc
push
jae
and
inc
test
dec
outsl
inc
hlt
add
mov
mov
mov
push
push
dec
cmp
test
pop
jbe
pop
gs
iret
cmc
cmp
dec
fistl
adc
jecxz
xor
add
mov
addr16
movsl
pop
fdivrs
addr16
mov
mov
xor
add
xor
cmp
push
mov
inc
setne
stos
pop
incb
dec
dec
fsubs
popf
fsubrs
mov
scas
sbb
psllw
add
roll
mov
movsb
push
out
mov
and
dec
in
xchg
mov
jecxz
or
mov
fxch
push
push
repnz
inc
mov
push
int3
xchg
jne
xchg
xchg
sbb
cld
sbb
inc
and
mov
inc
adcl
cmp
pushf
popa
lock
int3
sarl
lea
enter
dec
sbb
inc
dec
mov
mov
iret
push
sbb
jne
loope
push
inc
and
cld
in
loope
adc
hlt
lods
into
jecxz
add
cmp
or
test
or
push
push
hlt
je
adc
push
sub
cmp
and
movsl
icebp
cld
sub
and
mov
fdivrl
icebp
adc
sbb
and
je
push
ret
cmp
hlt
dec
cmpsb
arpl
jmp
mov
adc
ret
pop
xor
mov
loop
dec
and
jbe
fidivrs
mov
add
add
pop
cmp
or
jle
push
xchg
ss
sahf
inc
pushw
inc
and
pop
push
xchg
out
xchg
mov
sbb
or
xchg
inc
add
pop
pushf
adc
pop
cmp
jbe
rol
sub
sbb
rorb
mov
xchg
cmp
lods
lock
lea
pop
orb
fs
inc
fdivrs
pushl
or
cmp
pop
jne
jmp
das
loopne
dec
enter
mov
lea
testb
adc
mov
push
cmp
jge
je
cmpb
je
mov
scas
push
js
mov
jb
jle
call
jne
cmp
enter
loopne
mov
pop
push
sub
and
lea
es
mulb
add
add
and
repnz
mov
loope
je
lods
shl
push
out
cmp
sbb
add
or
pop
mov
jle
orb
sub
jl
xor
incb
arpl
movsbl
cmp
jl
adc
cld
pop
mov
shlb
jae
scas
test
cld
int
int3
rcrb
mov
sub
pusha
cmp
ljmp
lock
jmp
and
dec
pop
xor
cmpb
jne
push
jmp
mov
or
popf
cmp
fdivs
jae
ljmp
daa
xchg
addr16
jno
rclb
push
test
push
test
fmull
lahf
push
lea
mov
lea
inc
xor
xor
or
adc
cwtl
sub
cmp
testl
push
adc
push
add
addr16
inc
mov
add
jg
cs
push
lea
mulb
ret
sbb
adc
sub
sbb
inc
mov
dec
dec
and
dec
btc
sbb
sub
inc
cmp
pop
decb
ja
push
xor
inc
fwait
adc
sbb
mov
aaa
leave
hlt
sbb
sub
adc
sub
repnz
sub
jge
push
push
cmpsb
sub
mov
or
mov
pop
or
cli
mov
orb
or
test
lcall
cmp
cli
ss
ds
push
mov
leave
mov
mov
cmpsb
xchg
imul
mov
cltd
dec
sbb
push
xlat
or
inc
aad
pop
xlat
pushf
shll
and
je
pushf
and
data16
xor
sahf
xor
ret
enter
push
call
mov
test
xor
mov
inc
pushf
shll
inc
push
ret
xchg
mov
push
mov
repz
adc
loopne
xor
loopne
push
inc
lock
and
cmp
pop
jb
lret
jmp
cmc
cwtl
cmp
push
push
sbb
test
inc
and
add
adc
dec
lds
push
push
push
addr16
mov
mov
cmp
sbb
mull
cmp
jb
cwtl
cli
cmp
lods
pusha
test
push
imul
dec
rcll
sub
rol
inc
addb
in
push
hlt
jno
movsb
or
xchg
pop
push
decl
adc
cmp
rcll
cli
cmp
adc
test
stos
lock
nop
clc
sbb
jg
pop
mov
enter
push
cmp
xchg
mov
jl
sbb
adc
cmpb
mov
xchg
mov
les
xor
push
add
push
fistpll
pop
sbb
pop
leave
lock
cwtl
stc
push
inc
pop
pusha
movb
lea
in
sbb
aam
iret
mov
mov
clc
push
cmp
adc
inc
mov
test
inc
ja
xor
sti
push
stos
xor
mov
sub
cmp
and
mov
leave
push
pop
cwtl
jae
mull
stos
push
mov
out
push
sub
mov
aaa
pop
adc
test
cmp
xlat
test
mov
shlb
fildl
push
sbb
sub
and
cmp
rcl
inc
hlt
jle
xchg
nop
mov
inc
lcall
xor
cmp
pop
cmp
jo
push
xor
adc
shrl
stos
sbb
jle
std
in
or
lea
pop
gs
and
jg
insl
and
ret
aaa
adc
test
or
rorl
dec
add
cmpsb
je
into
cltd
adcb
pop
outsl
cmp
nop
stc
clc
push
jl
or
xor
or
insl
add
jns
mov
mov
jle
or
out
mov
outsl
movsb
je
or
and
popa
test
push
push
mov
lock
pop
movsb
test
push
or
fdivrs
xor
lret
popa
popf
clc
jl
mov
bound
push
push
sbb
sbb
xor
push
push
gs
dec
loope
test
xchg
dec
jb
insb
out
xchg
rcll
xchg
xchg
push
les
aad
gs
mov
push
inc
dec
movsl
inc
and
mov
sub
jno
xor
xchg
lcall
movsl
pushf
rcrb
pop
out
dec
stc
and
push
xchg
jb
in
inc
pop
add
or
aaa
inc
adc
mov
xor
cmp
test
lds
push
lds
jge
mov
ret
cmpsb
lods
dec
out
shrl
xor
stos
or
inc
sahf
movsb
pop
rcr
sub
movsb
push
pop
xchg
lea
aaa
push
int
sub
inc
pop
cmp
pushf
hlt
xchg
fs
aam
test
orl
aam
je
daa
cmc
mov
aas
inc
mov
pushf
inc
jge
rclb
cs
pop
mov
mov
mov
add
outsb
push
xor
pusha
cmp
adc
pop
push
mov
subl
and
mov
xchg
xorb
in
inc
inc
mov
cmc
dec
push
pushf
jne
mov
mov
insl
push
fs
int
lahf
std
push
push
cli
sub
adc
jle
jmp
je
frndint
sbb
sub
stos
jg
ss
mov
test
dec
push
push
mov
dec
mov
push
xlat
ret
mov
mov
sub
insl
sbb
adc
fstps
add
into
adc
das
mov
arpl
ret
mov
pop
stc
neg
mov
popf
sbb
xor
mov
sbb
nop
sbb
aas
and
xor
pop
cmp
sub
je
xchg
in
int
sub
dec
das
jmp
or
sub
out
lret
adc
jno
popa
arpl
test
xlat
stos
fmuls
rcll
ljmp
test
in
hlt
insb
xchg
daa
and
jne
xchg
adc
adc
repnz
cli
or
adc
dec
adc
mov
test
mov
ficoml
jmp
push
scas
xor
push
mov
jbe
scas
pop
xor
add
fidivl
ret
insb
inc
mov
inc
dec
js
nop
filds
pop
mov
push
xor
pop
shr
fs
insb
sbb
push
cmc
pop
test
jg
adc
fs
pop
in
mov
or
in
adc
ss
fisttpll
in
or
or
inc
sub
stos
jge
into
in
or
and
xchg
rorl
push
inc
xor
pop
mov
push
push
xchg
pop
clc
push
push
jbe
jae
je
cwtl
sbb
pusha
jne
lahf
jno
mov
sbb
imul
add
pop
popa
jl
add
dec
xchg
adc
imul
popa
jp
cltd
pop
leave
ret
jne
call
and
jae
inc
rclb
outsb
mov
or
sub
cwtl
push
fwait
or
faddp
pop
test
sbb
xchg
std
pop
fwait
push
mov
not
out
nop
push
push
or
jmp
pop
imul
les
gs
xlat
push
pop
mov
das
roll
push
in
loop
cwtl
test
or
loop
andnps
sub
push
push
sbb
mov
mov
mov
xor
stos
mov
dec
dec
adc
cmp
push
ljmp
enter
loope
xchg
stc
mov
sub
test
adc
jecxz
stc
xor
cmc
fisubrs
enter
shll
add
lahf
xchg
push
lcall
adc
imul
stos
push
sbb
stos
shrb
inc
es
cwtl
or
xor
dec
or
int
inc
sub
cltd
pop
add
and
out
outsb
jl
movsl
sbb
negb
xor
icebp
sub
fistps
xor
fldl
xor
adc
adc
cmp
out
push
nop
icebp
push
cmp
mov
mov
or
add
cmp
pop
popa
and
dec
imul
mov
cltd
mov
cld
push
out
cmp
movsl
xor
ret
cld
push
xchg
and
sub
add
inc
test
hlt
xor
xor
or
in
push
jmp
push
sahf
mov
adc
sar
sub
push
push
arpl
or
inc
cmp
gs
and
push
push
push
xlat
or
movl
jle
push
sbb
inc
decl
mov
arpl
adc
jae
mov
adc
sarb
cltd
lahf
cmpsb
ss
popa
jno
pop
stos
int3
movsb
movsl
imul
ss
push
push
push
inc
add
outsl
sbb
cmp
fdivr
and
popa
mov
ret
mov
pop
mov
mov
hlt
or
xchg
sbb
sbb
fwait
and
push
les
adc
js
cmp
mov
orl
and
test
mov
dec
aad
sub
sbb
fildl
push
enter
xchg
stc
mov
into
mov
adc
pop
jb
mov
ds
adc
in
nop
mov
xchg
cmpsl
testb
pop
jle
imul
pushf
mov
dec
rcr
fbld
push
adc
mov
and
push
sbb
rol
push
rol
or
sbb
mov
mov
and
xchg
push
pop
mov
mov
and
cld
sub
sarl
mov
enter
addr16
mov
xchg
dec
xchg
add
xor
inc
and
pop
loopne
lea
jne
mov
cmp
movsb
loopne
push
sbb
xchg
inc
jmp
push
cli
jle
das
test
push
in
xor
sub
nop
dec
or
jae
xchg
mov
lods
mov
xchg
mov
push
cmpsl
mov
enter
fmull
orl
inc
int
adc
adc
aam
stc
adc
adc
orl
jb
test
sbb
int
sbb
nop
push
ret
pop
lcall
outsl
xor
inc
in
add
cmp
xchg
sbb
sbb
arpl
enter
dec
fcoml
xor
cmp
pop
ljmp
jmp
stos
push
xchg
mov
mov
sbb
adc
pop
mov
adc
sbb
js
mov
nop
repnz
mov
push
nop
cmp
nop
xlat
mov
test
sbb
add
push
and
jb
cld
icebp
ret
and
movsl
or
or
js
push
and
shlb
mov
or
mov
xchg
test
xchg
les
xchg
dec
popf
push
nop
inc
imul
arpl
jmp
repz
les
wrmsr
repnz
mov
push
movsb
imul
jg
in
pop
jo
pop
mov
sub
jno
leave
testb
or
nop
mov
dec
mov
leave
repz
movsb
jae
rcl
xchg
and
scas
pop
cmc
lret
inc
pusha
mov
pop
imul
and
stc
push
fsubs
notb
xor
sub
enter
push
sub
mov
jno
mov
enter
dec
ret
mov
movsl
pop
xchg
cmc
xchg
les
pop
mov
push
pop
mov
dec
cmpsl
push
jbe
and
push
lahf
push
cmp
out
mov
cmp
jmp
inc
aam
fnstcw
xchg
ret
ja
js
push
enter
xor
mov
cmp
cs
shlb
push
push
fs
xor
mov
iret
fwait
sbb
movsl
je
push
push
sbb
jecxz
mov
and
gs
sub
fistps
lock
mov
sbb
enter
cmp
and
pop
and
ret
movsb
add
shll
cli
bound
cmp
inc
xor
mov
lea
iret
sbb
fidivrl
sti
or
pop
or
mov
sbb
sub
jae
xorl
addb
push
sbb
fs
and
punpckldq
and
add
add
push
cmp
sbb
lods
cmp
int3
mov
jp
jbe
jecxz
or
mov
popa
sti
int
sub
pop
and
xchg
cmp
mov
mov
popa
pop
add
dec
jbe
in
sbb
stos
add
nop
adc
lods
or
out
fcom
inc
add
shl
arpl
dec
fadds
int3
arpl
fidivl
push
pop
mov
adc
in
and
lahf
cmp
inc
sub
mov
movsb
data16
test
adc
sub
jne
xor
mov
adc
add
push
xchg
mov
in
mov
mov
hlt
lds
insb
rsm
loope
inc
xchg
adc
jg
pop
dec
push
push
xor
and
imul
sbb
mov
pop
mov
jmp
jae
xor
and
iret
xor
mov
popf
pop
sbb
mov
fdivr
jo
arpl
jne
movsl
dec
jmp
pop
cmp
xchg
sbb
dec
mov
daa
or
and
and
push
jmp
movsb
mov
sbb
mov
push
push
stos
test
adc
mov
inc
fwait
inc
add
xor
dec
loopne
loop
std
repnz
sub
push
push
cmp
lock
push
stos
jns
mov
pushl
mov
xchg
jl
sti
out
add
xor
in
pop
js
adc
jmp
js
dec
fmul
icebp
add
jmp
enter
cwtl
clc
andb
int
aas
inc
cli
inc
shlb
arpl
popa
adc
jno
xchg
mov
adc
sbb
js
mov
cmpsb
jbe
adc
popa
push
js
dec
je
shl
cmpsb
mov
pmulhw
fdiv
mov
jmp
push
cmpsb
mov
push
outsb
push
add
ret
pop
aas
loop
pop
test
imul
das
jbe
or
xchg
insl
xchg
push
push
in
pop
lea
push
add
int3
push
jl
cmp
jge
mov
mov
shl
cmp
lea
je
and
push
es
bound
push
push
cmpsb
add
mov
loop
inc
pop
mov
js
push
push
jle
mov
sbbl
inc
addr16
dec
jnp
mov
jg
cwtl
push
ds
push
or
dec
add
sub
push
stos
daa
loopne
shrb
in
cmp
add
gs
mov
movsb
mov
mov
push
inc
mov
arpl
push
adc
movsl
push
in
les
aam
inc
sub
loope
push
push
lods
inc
pop
sbb
pusha
adc
or
mov
push
fwait
out
push
cmp
and
in
cmpsb
push
pop
les
mov
les
jnp
jge
inc
jb
push
ja
out
cmp
sbb
rolb
xorl
mov
lods
mov
test
jne
pusha
jl
jg
push
insb
pusha
mov
xlat
loope
pusha
bound
popl
aaa
adc
hlt
pop
jp
in
dec
or
jne
adc
inc
rolb
test
add
leave
xchg
or
xchg
cli
mov
pop
xor
orb
push
xchg
add
shrb
and
cmc
mov
pop
or
jne
out
std
add
push
inc
mov
add
shll
mov
pushf
addb
movsl
int3
js
dec
lret
push
and
sbb
je
or
faddl
je
movzwl
sub
fadd
mov
cld
aam
sub
rcrl
dec
test
sbb
fucompp
leave
enter
dec
les
aaa
pop
mov
push
je
push
push
enter
repz
sub
inc
xchg
cmp
adc
jmp
xor
push
push
xchg
loope
push
inc
repz
lds
ficompl
or
pop
mov
adc
inc
les
cmp
or
popf
sbb
decl
mov
inc
or
sub
or
xchg
movsb
mov
pushf
and
fs
jns
push
sub
shufps
jmp
mov
xchg
adc
jne
cmp
icebp
xchg
inc
pop
dec
out
jno
inc
es
fwait
aad
xchg
nop
enter
stos
and
sbb
movsl
mov
push
sub
mov
mov
inc
fisttps
adc
pop
mov
pop
inc
jnp
adc
shlb
cmp
jmp
sub
mov
and
inc
and
cmc
jle
gs
leave
mov
jmp
nop
sahf
into
push
mov
or
cwtl
cmp
inc
out
jb
mov
jp
loope
dec
or
notb
push
ss
fsubr
daa
add
daa
push
pop
mov
sbb
int3
into
fcompl
pop
aam
mov
in
or
movsb
andl
push
add
fistps
cltd
push
mov
dec
ficomps
mov
imul
adcl
fcompl
sub
or
mov
les
daa
and
xor
push
lock
pop
inc
mov
sub
add
or
adc
pusha
xchg
mov
movsb
inc
cmp
mov
adc
mov
fwait
cmp
fisubrl
in
in
adc
or
fs
jae
cltd
dec
out
sub
popf
das
adc
jecxz
adc
shll
je
inc
cmp
lock
sub
mov
sub
fcomi
mov
xrelease
xor
lahf
inc
imul
icebp
dec
jnp
sbb
stc
inc
lods
mov
pop
and
popf
in
sbb
sbb
testb
jo
test
fisubl
hlt
cmp
sbbl
pop
and
gs
lret
push
bound
pop
xchg
call
jecxz
arpl
cwtl
in
js
dec
push
pop
subl
push
push
dec
hlt
test
sub
aam
inc
sub
mov
xlat
add
and
or
int3
pop
jno
pop
mov
mov
xorl
add
mov
or
pop
xchg
fs
popa
pop
and
mov
clc
mov
aam
gs
mov
or
add
cltd
mov
push
push
jmp
cmp
les
pushl
pop
push
sub
mov
or
rclb
pop
fisubl
mov
adc
daa
shrb
cwtl
test
push
int3
mov
adc
or
sub
sarl
mov
add
sbb
mov
xchg
add
lds
clc
mov
call
adc
push
push
stos
sbb
ss
fcmovnu
int3
and
out
stos
incl
mov
ficoms
mov
lods
inc
jp
inc
andl
adc
add
inc
cmp
js
test
dec
inc
or
movsl
push
std
call
or
or
sub
xor
sbb
xchg
xor
or
cmp
and
jns
lret
insb
jb
incl
in
test
jo
sub
push
pop
sbb
cld
push
push
push
pusha
mov
add
xor
repnz
lock
pop
mov
int
cmp
push
add
mov
xor
mov
movsb
or
ja
daa
je
jmp
push
cmp
mov
aaa
pop
add
pop
repz
inc
dec
mov
cli
pop
data16
add
in
lods
loope
xchg
mov
pop
cli
out
pop
dec
addr16
xor
loope
mov
push
mov
sbb
pavgb
mov
mov
loopne
loop
mov
mov
mov
ds
cwtl
loopne
pop
fidivrs
pop
daa
push
fwait
or
dec
mov
test
mov
add
or
mov
cwtl
xchg
xchg
shlb
ss
push
add
push
sbb
inc
dec
je
lcall
and
and
rcrb
in
inc
xchg
mov
push
aam
sbb
mov
xor
mov
jne
sub
xchg
lret
sub
and
lcall
aaa
xor
call
xchg
sub
fldln2
in
pop
push
jae
insb
mov
sub
xor
xchg
xor
mov
lds
inc
popa
mulb
mov
enter
or
push
xchg
xchg
rorb
jbe
lcall
push
cwtl
jno
or
jle
loopne,pn
lods
push
sbb
inc
pop
aam
gs
cmp
xchg
dec
lods
jl
fldcw
add
sbb
sbb
push
push
sub
mov
push
mov
repnz
fadds
dec
add
inc
cmp
jl
andb
dec
fcmovnbe
nop
add
clc
add
push
inc
mov
mov
movsbl
push
pop
cmp
jne
mov
cmp
pop
add
stc
pop
jl
push
pop
jnp
sbb
add
and
or
clc
xchg
cltd
push
xchg
roll
or
push
stos
lret
cs
rorl
pop
push
push
xchg
cmpsb
push
sub
jmp
sub
xor
out
fs
addl
jb
or
add
jl
inc
je
addr16
jns
jl
jo
fisttpl
insb
cs
arpl
jne
mov
sahf
dec
pop
jne
mov
sbb
roll
orb
mov
int
xor
sub
loope
jle
dec
sub
hlt
inc
fsubs
stc
mov
adc
pop
jo
xchg
and
loopne
xchg
add
pop
or
lods
cs
xchg
imul
fwait
xor
dec
stc
sub
dec
mov
mov
adc
in
push
sbb
or
adc
or
xor
mov
in
adc
cmp
rcrb
enter
adc
pop
jno
lret
je
inc
add
cmp
push
jo
pop
ret
pop
jbe
xor
loopne
dec
dec
movsb
mov
sahf
mov
out
adc
xor
sbb
enter
aam
mov
inc
inc
lds
add
pop
mov
mov
sub
cltd
xor
shll
and
enter
jbe
inc
sub
add
dec
xor
jbe
int
xor
and
push
push
add
mov
xor
add
sbb
sahf
jl
sbb
xchg
cmp
scas
ss
adcl
fwait
in
push
je
mov
pop
xchg
cld
cmp
popa
aas
sbb
jne
jmp
repnz
sub
mov
add
pop
sub
or
ss
pop
call
pop
xor
sub
and
adc
orb
insb
je,pn
jbe
nop
pop
pop
jmp
jl
xchg
and
add
xchg
xor
sbb
xor
fsubl
sbbb
cmpl
lods
dec
int3
lahf
adc
add
mov
lret
mov
jp
test
and
movl
lea
add
dec
xor
test
or
and
jne
xchg
xor
mov
dec
pop
mov
fldpi
mov
fcoms
outsb
roll
mov
xchg
jns
xor
pop
in
div
sub
push
stos
arpl
movsb
xchg
jnp
test
add
pop
inc
in
sub
cmovb
mov
outsl
adc
push
xor
je
inc
and
jno
test
xor
int3
jns
or
sbb
cmp
test
andb
ds
enter
enter
xchg
sbb
pop
orb
add
addb
push
jl
and
adc
imul
jne
stos
push
fadds
cmp
push
scas
and
sti
and
inc
addl
cs
pop
imul
call
ret
adcl
and
adc
in
push
jecxz
adc
push
test
cmc
shll
leave
loopne
stc
pop
sbb
jns
loopne
inc
jae
dec
sbb
adc
enter
fbld
testl
out
dec
and
pop
pop
or
jne
dec
push
aam
push
outsb
pop
sub
enter
push
mov
clc
pop
jae
mov
mov
dec
aam
inc
loope
subl
add
add
lods
test
repz
push
stc
push
lods
lds
sarl
fwait
xchg
clc
add
pop
add
pushf
pushf
jecxz
jbe
pop
sbb
push
inc
shrl
fcoml
shrb
sbb
push
mov
bound
xchg
addr16
enter
jbe
pop
dec
movsb
loopne
push
xchg
pushf
push
mov
adc
loope
loop
in
sbb
xor
bound
fimull
xor
cwtl
adc
inc
pop
adc
in
jecxz
aam
or
or
fdivl
push
xlat
faddl
jno
inc
adc
mov
orl
jge
pop
cmp
jo
pop
xor
pop
inc
andl
push
or
push
mov
mov
movsb
xor
call
push
popa
sub
or
je
dec
adc
push
das
addr16
pop
xlat
adc
or
add
cwtl
dec
in
or
fistpll
in
add
mov
add
dec
fs
nop
push
adc
testb
push
int
notl
mov
mov
push
inc
imul
jle
push
movl
add
shll
roll
lret
xor
and
inc
popf
loope
add
xlat
nop
andb
inc
ja
inc
adc
sbb
sbb
cmpl
xor
cmpsl
loop
sbb
jae
das
add
add
add
call
jl
rorb
lret
inc
pop
cwtl
mov
adc
push
mov
lods
adc
dec
pop
or
testb
rcrb
xor
cmp
mov
sarb
mov
movb
movl
in
sub
dec
and
scas
mov
xchg
jbe
lret
daa
ret
and
hlt
jne
adc
mov
push
sahf
cmp
dec
adc
inc
push
jl
gs
dec
sub
lods
xor
call
aaa
mov
sub
je
xor
mov
inc
sarb
jbe
mov
cmp
cmp
je
mov
mov
test
mov
in
sbb
mov
cmp
mov
fstl
ja
outsb
mov
cwtl
mov
call
insl
je
aam
dec
mov
add
es
ljmp
sbb
adc
and
in
cmp
add
add
orb
fimuls
enter
mov
loop
lds
je
cmp
je
cmp
dec
orl
rclb
adc
pop
add
and
pop
push
cmp
or
adc
mov
xchg
inc
cmp
mov
das
mov
jne
or
inc
sbb
imul
repz
repz
es
or
data16
mov
pop
lods
int
dec
jp
add
cmovo
pop
adc
add
mov
pop
test
inc
or
lock
scas
mov
push
and
push
cltd
sbb
jbe
adcl
inc
cmpsb
pop
add
dec
adc
cmp
pop
stc
movsb
imulb
pop
fisttpl
xorl
out
pop
in
lea
mov
jb
inc
add
xchg
mov
sub
mov
mov
inc
inc
je
inc
mov
pop
cmp
nop
lret
add
mov
daa
add
sub
imull
ds
les
addl
push
jae
sub
ss
adc
or
and
push
addr16
sub
cwtl
leave
pop
cmpsl
sub
adc
and
cwtl
add
inc
cmc
jmp
push
scas
daa
and
add
push
mov
mov
leave
sbb
gs
and
mov
fwait
mov
mov
pop
pop
pop
repnz
dec
and
test
jne
inc
mov
sbb
roll
rclb
roll
je
or
fld
bound
mov
adc
mov
sbb
mov
call
xchg
out
out
push
mov
bound
fstpt
and
inc
add
lret
mov
sbb
repz
test
jbe
mov
xor
or
jne
inc
inc
adc
shll
cmp
mov
push
push
lods
mov
pop
adc
jmp
mov
lret
cs
or
outsl
dec
pop
cmpsl
sub
or
cmp
or
mov
aam
add
xor
mov
adc
repnz
sub
inc
add
aam
sbb
aad
pop
sub
push
adc
dec
sub
adc
or
and
xchg
ds
add
out
lock
mov
les
dec
push
lods
push
sbb
dec
sbb
mov
mov
dec
or
test
add
dec
fstps
pop
movsb
out
js
xor
push
mov
sub
sub
mov
xor
adc
pop
cs
xchg
xor
mov
mov
dec
int3
inc
push
cmp
adc
imul
push
ret
push
shll
arpl
adc
add
pop
pop
shl
mov
mov
and
add
dec
cmp
aam
jbe
and
pop
lea
aam
lods
and
in
in
adc
inc
dec
push
clc
push
enter
push
xchg
and
ss
xchg
dec
lahf
cltd
adc
sti
shll
test
pop
pop
jg
mov
pop
in
add
loopne
pop
mov
add
mov
sti
popa
bound
imulb
push
sahf
push
cltd
nop
xor
test
xchg
and
xchg
mov
add
test
test
dec
out
testb
jo
xor
xchg
lds
and
in
sahf
lods
test
mov
out
cld
test
adc
comiss
mov
adc
mov
or
xlat
std
mov
aam
xlat
adc
lds
aad
xor
or
inc
and
cmp
je
xchg
push
bound
cmp
jb
int
pop
sahf
xchg
add
stos
mov
add
cli
adc
outsb
addr16
push
or
shlb
xor
or
sub
in
in
aad
out
mov
mov
stc
mov
lea
xor
sahf
cmp
mov
dec
push
push
and
cs
or
dec
jle
into
test
adc
mov
jo
fisttps
arpl
jno
cmp
lea
mov
jne
jo
movb
xor
cmp
inc
hlt
inc
lret
cmp
clc
enter
jmp
sbb
cmpsl
mov
mov
iret
rep
jecxz
adc
in
mov
jmp
or
jo
push
into
aam
mov
sub
push
flds
mov
rclb
sub
popf
clc
les
sbbl
or
and
test
incl
addr16
shrb
aas
inc
rolb
dec
sbb
add
jg
int3
push
fdivrl
or
mov
dec
ljmp
mov
hlt
daa
mov
gs
clc
cld
in
or
adc
clc
inc
mov
roll
fdivp
and
test
cmp
sbb
push
mov
xchg
and
inc
jae
and
sahf
add
dec
push
out
push
mov
sub
cmpsb
nop
shl
xor
mov
div
pop
mov
mov
push
ret
push
negl
cmpb
xor
and
push
adc
test
push
ficoml
rorl
mov
ds
inc
and
cmp
sbb
mov
push
jne
inc
push
test
shlb
dec
pop
dec
sub
sbb
fimuls
sbb
loopne
loop
hlt
add
or
push
sbb
inc
pop
pop
lock
inc
insl
mov
push
mov
mov
inc
aaa
imul
push
sbb
push
xchg
sub
dec
cmp
test
ja
jb
cmp
ja
push
push
pop
and
sub
leave
pop
ja
jb
cmp
jae
push
pop
sahf
add
clc
cmp
ds
cmp
xor
mov
and
push
push
test
jae
add
dec
sub
sbb
add
adc
adc
and
pop
add
mov
enter
push
rcll
sar
push
insl
addl
dec
std
push
cmp
mov
fnstenv
test
inc
xor
cmpsb
negb
jl
inc
mov
inc
push
into
push
cltd
mov
inc
sarl
xor
push
cmp
loop
pop
add
icebp
adc
das
cmp
dec
test
test
xchg
lahf
mov
inc
les
mov
push
les
add
push
xchg
cmpsb
dec
rcll
mov
adc
pop
rcrb
or
js
and
push
call
push
mov
mov
mov
es
sbb
enter
pop
and
movsl
insb
pop
cmc
mov
mov
inc
pop
push
hlt
in
test
call
enter
pop
cltd
or
pusha
xchg
inc
movsb
aas
call
mov
pop
or
add
add
call
push
dec
inc
cwtl
stc
add
and
in
inc
mov
ss
scas
push
fwait
lret
out
rcrb
decl
mov
jb
cld
cwtl
hlt
push
jp
aam
call
mov
add
test
repnz
out
mov
je
int
xchg
xchg
push
les
or
or
stos
mov
nop
je
inc
mov
dec
stos
pusha
cmp
int3
fistpl
push
loope
mov
jne
push
dec
notb
or
add
push
cmp
into
aam
jmp
and
sbb
add
je
xchg
mov
adc
and
push
push
adc
sbb
xchg
mov
cmp
sar
int3
pop
sbb
sahf
push
mov
pop
mov
stos
mov
xlat
xchg
fdivrl
or
or
iret
and
mov
pop
and
jo
outsb
and
arpl
mov
push
mov
inc
push
mov
and
cmp
sub
jne
cli
mov
or
popf
ret
xchg
pop
mov
and
fisubrl
in
mov
inc
mov
rcl
cmp
push
fs
cmp
or
leave
fmuls
aam
sub
jnp
sub
fmull
fidivs
push
or
add
sub
jmp
sub
xchg
loopne
ret
push
in
nop
movsb
xchg
and
jp
push
outsl
pop
into
mov
push
andl
in
mov
adc
inc
mov
dec
out
mov
or
cmc
cld
pop
cmp
pop
cld
stc
inc
ja
adc
cmp
mov
imul
mov
sbb
and
andl
cs
clc
mov
pop
jmp
movsl
push
cmpsb
enter
cltd
inc
rclb
fdivl
cmp
adc
cmp
aam
inc
sahf
movsb
ret
es
fildl
cs
jecxz
insb
push
mov
mov
jl
js
imul
lea
cmp
inc
mov
imul
movsb
pushf
jecxz
lds
into
sbb
push
cmc
scas
xchg
mov
pusha
sbb
pusha
movsbl
sarb
popa
jmp
movsw
pop
bound
adc
test
orl
mov
push
add
lock
push
lock
loop
push
xchg
out
mov
pop
ljmp
and
mov
inc
sbb
ret
test
daa
insb
nop
decb
test
jecxz
and
pop
cwtl
out
cmp
inc
push
rolb
push
hlt
sbb
je
lcall
add
lcall
ja
jne
lods
mov
dec
adc
std
sub
je
sub
cmp
xchg
push
mov
adc
xchg
push
int3
mov
movl
ss
or
fs
push
mov
test
mov
adc
iret
mov
jno
cmp
popf
sub
xchg
aam
push
and
inc
sarb
movsb
cmp
ret
inc
test
popf
xorl
pop
fiaddl
push
imul
mov
test
sub
sub
and
test
jne
dec
mov
adc
add
sbb
lea
repnz
push
fs
xchg
mov
cmp
mov
add
gs
dec
aam
stc
mov
push
je
jge
das
leave
pop
and
add
lods
mov
addr16
adc
fsubrl
sub
test
cmpsl
cmp
push
ljmp
cmp
pop
add
add
rorb
lock
adc
shlb
add
lea
shr
inc
lea
mov
mov
test
fsts
sub
push
cwtl
mov
push
and
xor
mov
xor
addb
jne
mov
gs
jne
xor
cmpsb
enter
adc
pop
enter
pop
or
and
rcrb
popf
jmp
mov
sbb
pop
cmp
cmpsb
cltd
lods
push
mov
or
loop
sbb
mov
inc
cmp
jl
jmp
push
mov
inc
sar
xorl
subl
cmpsb
cmp
jno
push
sbb
cmpsb
sub
xor
rcrl
mov
lds
cmp
mov
adc
inc
or
xor
int3
daa
enter
movsb
rclb
inc
or
enter
sub
movsb
xor
insb
sbb
das
and
push
and
data16
mov
iret
test
mov
into
push
repz
loope
mov
jge
push
and
inc
mov
pop
or
pop
inc
sub
pop
sbb
mov
loope
sahf
adc
or
or
cmp
iret
int3
sbb
ret
loop
rcrl
lea
or
pop
mov
pop
mov
and
xchg
pop
mov
orb
lahf
enter
clc
lahf
push
or
push
cmp
or
jne
test
jle
add
xor
je
test
dec
dec
push
mov
adc
inc
pop
and
ret
xchg
jge
inc
pop
add
cltd
or
push
adc
push
and
jne
inc
add
cmp
add
jp
je
inc
push
xor
ret
lock
inc
and
sub
fldenv
and
xor
test
or
adc
sbb
xchg
ja
incb
hlt
mov
mov
cmp
add
adc
xor
xor
xchg
loop
jbe
and
nop
into
in
push
jno
sbb
sbb
mov
push
adc
inc
pop
mov
add
cs
add
mov
push
test
mov
sbb
add
iret
jecxz
cmp
jecxz
ja
nop
in
sub
jo
out
arpl
fs
mov
add
pop
imulb
pop
ss
pop
cmpsb
push
add
jne
jo
mov
inc
test
fdivrl
nop
les
imul
insl
mov
mov
pop
lds
hlt
fidivs
push
lea
fs
sahf
mov
and
popa
and
inc
xor
lret
cmp
mov
xchg
mov
add
cld
movsl
mov
jge
fcmovne
mov
pop
lahf
movsb
lret
mov
rorb
in
test
movsb
inc
lea
jae
cltd
xchg
adc
pop
push
sub
xchg
adc
sbb
shrl
cmp
scas
inc
inc
jmp
fstpl
movsb
stc
push
mov
lcall
or
pop
add
loopne
sbb
xor
icebp
adc
es
add
jbe
incl
cmp
fldl
rcr
pop
mov
into
aam
fsubrl
pop
loopne
into
lret
push
enter
pushf
fisttpll
lods
insb
push
push
mov
xchg
jmp
push
inc
inc
adc
push
jae
inc
clc
repz
jecxz
pop
pop
out
mov
or
std
or
es
cmp
rclb
pop
push
cld
lds
sbb
cmp
jmp
push
adc
js
xchg
adc
add
push
fiadds
cli
movsb
shll
push
inc
insb
outsb
xor
movsb
adc
inc
test
jle
sbb
sub
xchg
adc
mov
stc
fdivs
ficompl
pop
xchg
fcoml
dec
sbb
sahf
or
jecxz
cld
pop
add
inc
push
sbb
cmpsl
dec
sub
shl
int3
test
test
inc
stc
nop
les
lock
adc
in
dec
or
cmp
push
and
jae
rcl
push
mov
xchg
fwait
dec
xor
pop
in
movb
in
add
aam
data16
clc
jae
sub
lea
inc
mov
shr
mov
pop
add
push
jns
loopne
dec
mov
xchg
in
inc
test
in
push
xchg
jge
sub
add
stc
jae
aaa
nop
inc
jmp
fdivrs
push
push
push
fsubrs
mov
adcb
xor
loopne
cmp
mov
push
fdivl
sbb
add
mov
sbb
and
sbb
inc
jnp
out
nop
fdivs
mov
mov
popf
sub
push
push
add
inc
orl
imul
fdivs
jecxz
fcomp
xchg
stos
push
inc
xchg
sub
or
mov
test
je
add
cmpsb
stos
push
or
adc
sub
sbb
les
je
pop
or
mov
lret
js
gs
jb
inc
cwtl
and
mov
mov
inc
repz
stos
sub
ss
jmp
jns
mov
movsb
sub
push
sbb
dec
adc
xchg
jne
xchg
out
test
push
mov
dec
inc
or
add
or
jge
pop
cmpb
mov
inc
clc
mov
mov
ret
sbb
lock
test
sub
jno
sbb
lret
cmp
jge
cmp
je
xor
sbb
cwtl
add
pop
cmp
jg
mov
pop
jmp
iret
xchg
push
stc
mov
cmp
dec
stc
adc
fwait
add
cmpsb
clc
or
and
mov
and
out
dec
ficoml
fs
and
dec
cmc
mov
test
decl
mov
iret
mov
sbb
or
inc
mov
push
sub
mov
into
ret
add
or
push
jmp
mov
cmp
jne
mov
cmp
je
ss
sahf
or
pusha
out
test
mov
lds
add
adc
adc
je
pop
fsubl
inc
shll
call
adc
dec
xchg
sub
sti
test
jne
mov
pop
test
lods
add
and
push
loopne
pop
inc
or
inc
sub
push
loopne
adc
mov
fs
or
syscall
out
andb
aad
fldcw
int3
cmp
add
cmp
adc
sbb
xor
and
cmp
cmp
or
divb
dec
push
mov
adc
push
call
jmp
adcb
xor
ret
mov
mov
je
paddusw
add
xchg
dec
add
or
loopne
dec
push
pop
cs
mov
dec
xor
and
dec
or
sbb
and
movsl
or
je
lret
add
sti
cmp
jb
mov
sbb
sbb
cwtl
xor
and
cwtl
jbe
rcll
cmp
pop
push
and
cmp
jb
jle
jg
adc
mov
sbb
jae
dec
jae
jo
xor
mov
ds
ret
test
push
inc
or
jg
sub
push
out
popa
adc
or
or
ret
rcll
pop
in
inc
or
dec
add
or
je
shr
cmp
and
xor
add
roll
add
rorb
ret
arpl
add
ret
add
cwtl
shlb
inc
jmp
dec
loopne
test
mov
repz
sarl
lret
loop
iret
push
add
mov
test
shrl
add
push
xchg
cmp
jb
neg
and
je
sub
mov
inc
mov
or
dec
jne
loope
jno
adc
and
pop
andb
je
rep
push
dec
lcall
fsubp
sub
test
or
jne
lahf
xor
mov
addb
jle
rolb
sub
add
add
cs
cld
xor
jecxz
mov
add
lea
sub
jmp
and
std
push
dec
aas
cld
push
adc
push
or
inc
scas
cmp
adc
inc
rcrl
jle
jbe
fld1
iret
loopne
cmpb
push
add
rolb
xchg
call
mov
push
loopne
add
xchg
pop
jecxz
test
clc
nop
and
adc
xor
pusha
and
mov
adc
inc
add
mov
mov
cmp
int3
push
sahf
pop
pop
lea
inc
jno
add
cmpsb
nop
xchg
loope
jno
inc
push
std
das
lret
sahf
out
xor
les
lods
movsb
pushf
jns
or
in
call
in
in
lock
and
sahf
hlt
clc
clc
cld
cld
lea
add
add
mov
cmp
incl
mov
or
jne
rclb
pushf
outsl
jp
mov
lret
or
or
je
jl
cld
mov
jmp
xor
andb
sahf
xchg
gs
mov
nop
cwtl
mov
loopne
fadds
sbb
pop
lods
out
sub
and
out
out
pop
pop
mov
sub
out
mov
nop
bound
outsl
mov
xor
cmp
out
sahf
push
pop
fs
arpl
sbb
sbb
repz
adc
adc
or
cmp
repz
or
incb
sbb
popa
pop
sub
cwtl
test
imul
mov
jp
bts
into
adc
fwait
mov
cmp
lea
rolb
in
sub
test
jae
sbbb
les
xchg
mov
nop
cs
cmpl
xchg
pop
xor
or
jb
xor
popa
or
mov
or
enter
shlb
add
sub
or
mov
fisttpl
add
or
inc
lcall
lea
add
inc
shr
iret
cmp
sbb
inc
add
mov
or
jo
add
mov
sub
or
cmp
mov
les
pusha
dec
push
xor
xor
inc
data16
popf
fisubl
adc
jo
adc
mov
push
or
nop
or
inc
inc
jmp
pushl
inc
lahf
repnz
xchg
add
cmpl
add
ja
xchg
sub
push
cmp
ds
outsb
lds
mov
das
xor
mov
mov
ja
and
je
inc
xchg
popf
jo
hlt
fdivr
sub
or
and
add
sbb
pop
dec
testb
daa
sbbb
imul
call
jg
push
jmp
shll
sbb
xor
or
mov
pop
je
and
jge
icebp
inc
and
inc
fisubl
jns
sbb
inc
inc
or
xchg
rcll
mov
cmp
aad
cmp
cwtl
into
adc
bswap
lret
shl
jg
pop
inc
or
adc
pop
jns
push
test
je
jl
jo
call
cmpsb
cmp
popa
cmp
pop
icebp
mov
cmp
jmp
movl
clc
or
dec
mov
or
jmp
loop
fnsave
add
popa
int3
test
or
mov
mov
mov
or
out
push
je
jmp
mov
scas
mov
cwtl
in
add
xrelease
pop
pop
imul
pop
jo
filds
ret
mov
jne
cld
repnz
test
mov
subl
ret
adc
dec
mov
xchg
gs
dec
mov
add
jle
pop
mov
push
movsb
and
and
test
out
das
and
push
movsb
xchg
jns
ljmp
or
or
cmp
fwait
sbb
inc
fs
cld
or
jmp
lods
jne
mov
adc
iret
jl
mov
aad
push
mov
int
mov
add
cld
sbb
ror
popa
mov
daa
push
jno
sar
add
ret
sahf
es
clc
adc
dec
js
mov
push
mov
xor
sbb
sbb
loope
fstpl
andb
pop
push
and
mov
rolb
sbb
jne
loopne
sbb
in
sub
jle
and
mov
fsts
push
sbb
js
fnstcw
popa
sub
faddl
sbb
push
cs
mov
pop
clc
clc
fcompl
cli
pop
call
push
clc
in
add
test
jne
rorb
xor
mov
and
xchg
cltd
lcall
inc
fisubs
pop
fnclex
ret
ret
mov
xor
add
nop
sub
repz
jo
pushf
je
lret
mov
test
jnp
push
jl
inc
xor
shl
fstcw
fwait
data16
or
fldcw
fistpll
push
xorb
leave
mov
or
decb
testb
jl
mov
arpl
xor
adc
xchg
mov
arpl
mov
jb
loopne
add
or
pop
pop
xchg
xchg
dec
and
or
mov
add
dec
sahf
nop
or
cmp
mov
inc
ja
adc
and
fsubrl
inc
xchg
inc
add
je
mov
mov
fwait
iret
fs
add
sub
shll
push
add
ret
add
cmp
jb
out
and
push
lods
repnz
in
enter
sbb
in
dec
or
lock
xchg
dec
adcl
add
pop
push
sbb
movsb
jle
jo
shll
es
popa
lahf
jo
jo
or
insl
dec
sub
jecxz
sysenter
test
sbb
lods
sbb
outsb
int3
adc
jmp
mov
sbb
cmp
sbb
gs
repnz
clc
cld
insl
and
mov
mov
fadds
add
or
cmc
pop
and
aam
push
lods
fs
and
test
int3
pop
mov
imul
test
fs
mov
nop
mov
dec
fildl
sub
lods
pop
mov
inc
xchg
insl
lds
adc
stos
pushf
call
iret
mov
ljmp
addl
and
arpl
jo
leave
scas
pop
cmpl
push
aaa
adc
pop
adc
insb
test
jl
inc
les
add
mov
dec
sbbl
hlt
add
add
or
ds
mov
cld
cmp
sub
adc
mov
lret
movl
ja
cmp
jbe
lret
mov
rol
insl
adc
push
push
mov
in
test
xor
push
push
cmp
mov
adc
mov
adc
push
add
sbb
outsb
pop
popf
pusha
and
add
adc
je
lea
lock
add
mov
mov
loopne
mov
adc
fidivrl
lods
mov
enter
test
push
jmp
fs
mov
lods
inc
sbb
dec
inc
inc
xor
or
cmp
cmp
into
cmpb
push
or
lret
push
mov
pop
jmp
add
mov
imul
dec
sub
push
loopne
nop
outsb
push
aas
push
or
mov
lea
jg
mov
mov
ja
sbb
nop
lods
scas
inc
scas
insb
stc
jp
mov
cmp
jnp
cld
mov
rep
cld
hlt
in
cmc
cmp
repz
aam
mov
loopne
and
jns
cmp
arpl
pusha
mov
mov
nop
mov
jb
enter
movsb
out
pop
fisubrs
adcl
cmp
je
test
cmpsl
push
jg
pop
rcrb
in
movsl
stos
ja
arpl
pop
rol
mov
pop
xchg
dec
lock
adc
sub
mov
sub
vcvtss2si
cmp
pop
jae
push
jnp
inc
lret
xor
sahf
mov
ffree
add
sub
mov
or
mov
dec
mov
mov
mov
add
pop
and
add
jns
or
mov
mov
andl
mov
or
add
adc
je
push
cmpsb
dec
cmp
push
inc
aam
lea
mov
outsb
adc
icebp
loop
mov
adc
lret
sbb
and
cmpsl
and
lds
movl
sbb
imul
sarl
je
sbb
push
mov
in
testw
jno
mov
test
push
adc
pop
or
jmp
pusha
nop
enter
enter
mov
les
cmp
add
sub
jle
add
rclb
sub
jb
xor
lret
mov
outsl
fsts
sbb
ret
repz
mov
sub
mov
jmp
pop
sbb
xchg
mov
add
adc
ja
lds
test
adc
and
rolb
mov
push
xchg
lds
mov
jmp
movsb
insb
push
mov
jo
movsl
push
dec
lods
cmc
les
out
dec
inc
fs
orl
add
adc
mov
repnz
pop
ret
test
shlb
testb
push
movl
xchg
faddl
add
sub
push
pop
sarb
stos
push
pop
mov
mov
movzbl
and
shr
cmp
add
shl
lea
or
jne
xor
nop
test
pop
jo
mov
je
pop
cmc
into
pop
push
rorb
shl
rorl
je
lock
and
inc
jb
add
movsl
push
inc
xchg
or
pop
shl
shll
inc
loope
and
inc
jl
outsl
es
add
ret
cmp
push
inc
mov
repnz
inc
and
lock
dec
mov
std
sub
sbb
pop
add
dec
xor
fmuls
aam
mov
add
mov
iret
stos
add
sbb
adc
pop
xor
inc
cmp
je
or
inc
lret
jne
mov
mov
jmp
jle
mov
mov
js
xchg
loopne
les
incw
shll
add
test
lea
loop
fwait
int3
ret
or
or
lea
adc
jmp
inc
inc
data16
rcl
dec
stos
mov
leave
add
out
cmp
push
je
lds
mov
sub
lret
sub
data16
es
xor
xor
mov
inc
inc
cmp
jb
cmpsb
loop
mov
or
push
lret
and
js
lock
nop
dec
cmpsl
or
or
jp
cvtpi2ps
jo
outsl
lea
add
or
mov
add
push
leave
dec
add
loopne
int
test
jne
push
sub
shrl
scas
or
and
sbb
push
lods
arpl
pushf
adc
hlt
enter
inc
dec
in
loope
add
je
push
push
mov
dec
push
mov
subb
pushf
pop
fisubl
xchg
lods
push
and
in
push
and
mov
subl
jne
into
cmpsb
mov
pop
je
das
sbb
mov
pop
lods
insb
push
mov
in
push
mov
orl
mov
repz
push
insl
push
test
mov
jno
mov
test
movsb
test
dec
mov
cmp
push
call
adc
shll
jge
jecxz
daa
adc
pop
push
fcos
jne
loopne
je
lret
jl
lea
pop
ret
xchg
sbb
ja
les
sbb
mov
add
je
mov
inc
cmp
mov
cmpsl
push
jne
enter
or
push
shl
push
mov
arpl
add
lret
stc
xor
ds
iret
xor
push
adc
and
roll
mov
out
inc
popa
lea
sbb
in
mov
cmp
call
xor
cmp
je
movsl
jae
and
in
ret
adc
xchg
mov
and
adc
movsl
nop
dec
jb
sti
jg
adc
ss
jne
dec
push
rorb
push
dec
add
popl
xlat
add
push
jmp
inc
lret
push
push
sub
aam
push
pop
add
add
adc
push
das
jne
xor
jmp
inc
test
sbb
push
mov
cmp
cmp
and
lods
aaa
ret
dec
xor
adc
add
sti
adc
xchg
pop
je
adc
icebp
das
aad
push
dec
mov
dec
les
pushf
iret
cli
movsb
cmp
mov
xor
add
dec
push
xor
mov
aam
pop
stc
inc
enter
lods
mov
bound
lcall
xchg
inc
push
mov
xrelease
and
cs
mov
add
jne
cmpl
sub
ljmp
mov
and
push
out
adc
adc
push
ja
leave
roll
jbe
and
or
bound
arpl
daa
cmp
push
imul
add
inc
dec
cmp
sub
or
je
jmp
push
aad
inc
cmpsl
addr16
add
cmp
mov
aad
setno
adc
inc
lea
pavgb
and
sub
in
out
xlat
js
cmp
ds
push
addr16
scas
push
and
push
call
imul
ret
mov
xlat
mov
inc
lods
das
pop
adc
and
mov
or
jne
fstpl
fs
cmp
outsl
cmp
adc
filds
mov
dec
jae
push
dec
mov
inc
or
xor
jns
xor
cmpsb
or
sti
sub
movsb
or
cmp
popa
aas
add
or
fistl
add
fmul
jns
push
ds
push
call
fidivl
jb
outsl
or
jmp
pop
lret
or
movsb
jae
std
mov
dec
push
cld
sbb
out
xchg
dec
shlb
or
call
add
loope
add
push
push
inc
dec
xchg
pop
loopne
loope
rcrl
xor
in
sbb
sbb
pop
adc
cmp
in
icebp
or
lcall
adc
movsb
mov
rcr
shr
rcr
or
div
pop
jbe
sbb
xorb
mul
add
jb
cmp
add
pop
pop
jb
cmp
dec
pop
cmp
push
rcr
xor
ret
cltd
or
fcoml
repz
mov
adc
adc
or
mov
call
div
loope
mov
push
jns
or
inc
or
cmp
enter
mov
sbb
sub
sbb
cmp
adc
pop
fcoms
out
or
fcomi
addr16
popf
cltd
sbb
adc
mov
repnz
in
and
push
push
mov
fcmovnb
push
add
cmp
rol
xchg
adc
jg
popa
popf
or
add
clc
xorb
jne
jmp
push
push
lcall
push
xor
fistl
cmp
mov
push
ljmp
sbb
jle
int3
or
cwtl
shll
nop
es
sub
insb
dec
inc
and
push
xlat
repnz
and
or
add
or
xor
pcmpeqw
add
sbb
jne
mov
mov
push
lcall
mov
mov
loopne
mov
sub
cmpsl
xchg
or
in
and
cmp
shr
add
rcrl
inc
pop
imul
les
lret
push
ret
sbb
out
jne
adc
mov
and
cmp
dec
xchg
movsb
pop
aam
dec
xchg
fcoml
add
or
dec
xchg
jecxz
xor
push
aaa
jg
add
add
ror
add
jne
orl
jmp
mov
nop
push
cwtl
push
cwtl
sbb
adc
mov
and
jp
faddl
and
add
or
mov
cmp
cmp
test
mov
cmp
pop
inc
pop
jne
jne
add
subl
rcll
add
adc
pop
std
dec
and
repz
inc
pop
in
lret
sub
pop
test
add
push
pop
pop
pop
pop
mov
and
push
dec
ret
add
jmp
add
adc
or
xor
adc
and
cmp
jbe
jmp
outsl
inc
jae
add
test
or
call
mov
push
int
das
decl
or
test
push
test
inc
and
push
cld
and
or
inc
mov
dec
jne
add
sub
add
ja
push
and
test
jb
clc
jbe
testb
outsl
and
inc
repz
dec
or
enter
and
add
mov
test
push
clc
notl
xchg
into
clc
xor
mov
sbb
or
jp
sbb
in
int3
in
push
xor
mov
repnz
ljmp
cwtl
mov
sarl
popf
shrb
out
and
popf
out
lret
enter
rolb
mov
push
sbb
xor
mov
mov
or
xchg
mov
int3
jmp
add
adc
mov
pop
cmp
push
rcrl
clc
and
pop
inc
sbb
jno
xchg
add
stos
stc
pop
add
bound
aam
xor
push
mov
add
sbb
xchg
aam
popf
xchg
push
imul
subb
imul
push
and
add
cmp
pop
jge
cmp
fcompl
or
or
and
add
fiaddl
jo
dec
sar
enter
sbb
andb
xor
add
rcrl
add
inc
jo
xchg
dec
cmpsb
push
push
sub
xchg
push
sbb
xor
scas
cmp
pop
sub
test
popa
fidivs
pushf
or
mov
add
shrb
push
test
mov
mov
adc
xor
aad
sti
test
cli
pop
cmp
adc
mov
pop
inc
in
mov
add
adc
and
sbb
ss
test
adcl
xor
jno
cmp
jb
mov
sub
enter
cmp
pop
push
test
loopne
mov
test
pop
lret
xor
imul
xor
mov
push
aaa
cmp
mov
outsb
xchg
movb
inc
xor
push
popa
xchg
stos
push
and
xchg
cmc
jb
push
add
shlb
dec
and
mov
test
maskmovq
scas
inc
ss
bound
call
inc
int3
mov
inc
and
mov
mov
pop
mov
scas
xor
mov
add
sbb
pop
and
adc
or
icebp
add
and
xor
lea
xor
pop
test
and
or
push
jmp
adc
inc
mov
and
pop
adc
mov
scas
lahf
js
sub
lea
les
sub
push
inc
push
in
push
in
addr16
data16
or
mov
insb
push
popf
xchg
push
adc
ljmp
cmp
add
call
call
mulb
add
pop
push
adc
pop
add
lods
loope
dec
pop
mov
or
and
fimuls
mov
sub
cmp
add
mov
cmp
aam
and
dec
or
pop
test
pushf
push
push
jmp
pop
jecxz
fcomi
mov
mov
aam
push
lods
or
push
push
or
shlb
jne
call
sahf
fldcw
mov
movsl
adc
adc
add
and
je
mov
mov
ret
add
das
xchg
pop
jns
mov
inc
push
movsl
cmp
push
inc
and
sub
pop
push
mov
leave
pop
push
dec
fcoms
test
adc
or
mov
popa
idivl
and
icebp
sbb
or
test
cmp
dec
cli
lret
jo
or
jecxz
sub
push
push
pop
adc
ja
or
push
add
ds
fsub
cmp
or
dec
dec
add
adc
push
add
pop
xor
hlt
xor
aas
add
mov
or
mov
push
and
enter
and
and
sub
dec
rcll
adc
xor
mov
leave
rorb
or
mov
int3
call
shrb
or
mov
dec
add
jae
sub
inc
mov
xor
in
mov
push
dec
lock
test
adc
jl
dec
push
sarb
push
in
add
pop
faddl
cmp
jl
js
push
mov
and
mov
or
cmp
test
movsb
add
mov
or
lcall
sub
stc
iret
mov
and
es
mov
inc
inc
sub
cmpb
add
je
pop
dec
dec
je
jb
pop
adc
mov
and
cld
or
addb
pop
addb
sub
xor
mov
rorb
gs
fcomps
xchg
popf
mov
push
mov
lret
orb
test
jmp
pop
push
lock
imulb
pop
int3
mov
out
mov
dec
sti
push
shll
and
sbb
push
mov
pop
or
cmpb
jne
inc
inc
in
fisubrs
iret
sbbb
enter
xchg
sbb
les
cmp
fdivs
push
xlat
and
adc
mov
das
inc
int
sub
lea
and
addr16
and
gs
das
test
pop
js
andb
xor
jo
sbb
jb
or
jnp
orb
xchg
or
pop
std
dec
xchg
jle
jp
or
push
adc
cmp
cmp
incb
movsb
jnp
aaa
or
add
pop
sbbb
rcl
mov
inc
fisubs
inc
inc
jmp
pushf
lock
and
lds
lea
imul
mov
xchg
outsb
ss
dec
and
xor
mov
and
or
jge
sbb
insb
adc
sub
je
or
pop
jo
sub
or
jl
push
dec
or
push
enter
or
push
dec
add
js
push
sub
dec
or
je
movswl
shr
push
adc
lret
rcr
or
outsb
ja
mov
leave
push
xor
sub
shrl
loop
test
mov
and
rorb
pushf
lock
push
add
dec
mov
notl
mov
mov
and
push
adc
out
pop
mov
je
fmulp
push
popl
in
je
adc
imul
int3
sub
add
fldcw
xor
sub
nop
test
add
rolb
add
std
dec
shrl
jo
mov
add
daa
jmp
cmp
adc
pop
testl
xchg
add
cli
fcmovne
arpl
insl
arpl
aam
lahf
flds
mov
xor
or
xchg
lret
push
add
movsb
mov
popf
xchg
inc
jmp
dec
or
lods
imul
add
xor
and
sbb
inc
mov
adc
push
addr16
cmp
cmc
mov
xchg
pop
inc
or
jge
sbb
sub
ljmp
inc
lahf
sub
or
add
jmp
clc
sub
shll
cmp
stc
pop
loopne
sbb
in
je
jg
jl
or
mov
test
push
pop
rolb
fisubl
mov
add
sarb
out
inc
push
jge
pop
popa
mov
ret
and
mov
or
jne
test
adc
mov
lret
shlb
or
popl
push
push
push
push
test
push
les
test
add
inc
stc
lret
lods
mov
pushf
fsubs
cmp
jle
or
add
pushf
rolb
mov
jmp
sub
inc
pop
push
cmpsl
int
mov
fldl
mov
cmp
jne
and
xor
push
insl
loope
add
add
inc
fdiv
and
ret
imulb
sub
push
out
fsubl
pop
pop
sub
jmp
add
rolb
jne
and
or
mov
push
push
seto
xchg
test
mov
ret
pop
jp
mov
das
dec
popf
pop
xor
movsb
pop
fs
cmp
sbb
test
aaa
or
enter
insl
and
mov
mov
dec
dec
sbb
fstl
fcom
mov
sbb
cmp
push
fldl
in
aam
enter
test
ja
dec
leave
sbb
repz
mov
repz
sub
jp
dec
or
dec
add
mov
adc
cwtl
jle
or
add
fadd
fnstcw
pusha
adc
xchg
add
dec
decb
jle
sbb
mov
push
sub
test
jg
mov
ret
dec
jmp
mov
add
push
inc
sahf
into
mov
sbb
aas
mov
in
jae
pop
add
enter
cmp
add
and
cmp
sub
data16
dec
fst
lock
bound
and
add
repz
mov
mov
cltd
je
xor
sub
jl
xor
dec
xchg
jmp
and
fcoms
inc
xchg
dec
bound
insb
mov
stos
stos
mov
inc
jbe
inc
ret
ret
cmp
mov
cmpl
lret
push
inc
call
cmp
ja
mov
out
adc
push
rorl
stos
lea
or
mov
lods
clc
or
je
xor
xor
cli
cmp
ja
orb
mov
sub
sub
inc
clc
mov
flds
test
cmp
xorb
cmp
fstps
push
mov
rcr
mov
lock
xor
xor
adc
int
mov
add
inc
cmp
jb
push
mov
push
mov
fwait
xchg
movsb
add
stos
jmp
cmp
std
je
repz
push
and
sbb
xchg
push
movsb
xor
pop
into
xor
jne
test
and
xchg
std
cwtl
cld
jne
mov
jns
xchg
sub
movsb
or
pop
je
xchg
adc
pop
pop
imul
leave
dec
push
push
mov
adc
mov
jbe
mov
je
mov
ja
mov
bound
push
adc
lret
xor
ss
dec
jns
sarb
test
jb
xchg
inc
int
repnz
aaa
push
push
lea
or
cld
xchg
shll
enter
sub
add
es
add
inc
inc
mov
inc
or
push
jp
pop
shrl
dec
push
add
jge
push
add
push
cltd
pop
xchg
push
pop
inc
dec
sti
add
into
sbb
xorb
sbb
lea
pop
xchg
das
or
ret
adc
mov
subl
lods
sub
jecxz
xchg
les
ret
jmp
int
mov
or
pop
fs
mov
add
mov
pop
popa
jb
je
pushf
or
push
bound
stos
bound
pop
xchg
sbb
push
inc
shll
cwtl
adc
fstpl
inc
xchg
mov
xor
or
adc
fstl
sub
push
popa
xor
in
cmp
add
sub
pop
je
inc
inc
sbb
fs
in
adc
shll
jmp
adcb
and
cld
gs
inc
ret
inc
add
pop
lea
mov
lret
lcall
cmp
ja
jp
or
add
jmp
mov
push
sub
pushf
sar
out
xor
inc
subb
gs
or
push
jnp
xor
cwtl
xor
mov
les
dec
add
cwtl
xchg
push
or
dec
adc
mov
aas
dec
xchg
ljmp
leave
jge
add
andl
add
cmpl
add
dec
inc
or
sbb
mov
adc
mov
jg
dec
mov
push
push
sub
rcrb
add
push
dec
mov
in
push
cmpsb
xor
adc
xchg
shlb
jo
dec
xor
cmpsb
bound
popa
jl
cmp
jg
sub
mov
adc
inc
in
ljmp
xchg
enter
cmp
or
das
push
stos
jb
dec
sarb
scas
xchg
loop
or
imul
inc
ds
cmp
cmpsb
adc
inc
cmp
cmp
jne
insb
pop
rcrb
repnz
jecxz
cmpsl
mov
jnp
decb
sbb
or
mov
lods
push
add
or
xlat
addb
push
int
add
cmp
push
repz
mov
test
cwtl
adc
stos
movb
push
dec
mov
pop
and
cs
test
push
lret
shl
cmovno
pop
cwtl
jo
xchg
jno
push
pop
mov
mov
xchg
xchg
nop
dec
movb
mov
or
or
add
adc
lea
mov
mov
lea
stos
jae
sub
or
cli
add
pop
and
and
inc
cwtl
lea
ljmp
or
out
jnp
ss
lea
test
dec
mov
int3
add
jo
mov
lea
mov
mov
push
clc
mov
add
add
dec
cmp
jbe
push
pop
mov
cmp
lock
dec
and
loopne
inc
out
adc
lea
add
shll
pop
mov
sub
or
aam
loopne
lret
mov
test
lock
pop
add
add
mov
pop
add
pop
add
mov
add
mov
and
mov
cmp
and
mov
mov
mov
mov
sub
roll
sub
pop
cmp
jbe
mov
shrl
push
fidivl
jno
sbb
std
jno
cmp
mov
lret
shr
not
and
add
add
lret
dec
loopne
jecxz
fidivs
fwait
cmpsb
sub
jecxz
pop
and
mov
or
sbb
popf
jne
fs
jl
or
pop
inc
mov
add
bound
pop
mov
mov
mov
or
jne
mov
mov
lret
stc
daa
jae
sub
sub
imul
add
mov
or
jmp
cmp
in
cmp
dec
in
fbstp
test
sub
sbb
push
mov
jl
mov
divl
cli
and
mov
xchg
imul
xor
push
addb
push
ljmp
stc
pop
fistps
sub
adc
cmp
dec
inc
xor
xchg
mov
jns
mov
rclb
pusha
add
xchg
lcall
xor
fsubl
cmpsb
mov
adc
and
enter
sbb
jnp
cli
adc
mov
jp
jb
decl
cmp
adc
sbb
ja
enter
cmp
jne
hlt
in
add
add
mov
movsb
pop
movsb
loop
lock
cmp
jge
or
stos
mov
or
inc
js
xor
mov
mov
fdivrs
fisttps
jae
or
popa
sbb
adc
and
or
ret
adc
popf
ja
jb
fs
jne
mov
cmp
nop
sub
jmp
jne
lock
jae
or
mov
es
out
sti
inc
js
into
dec
push
rolb
test
push
rcrb
dec
adc
add
lret
into
dec
mov
mov
cmovno
nop
mov
jl
inc
aaa
mov
bound
push
or
cmpsb
frstpm(287
or
dec
inc
or
pop
mov
dec
add
test
and
or
je
or
xchg
insb
xor
and
jns
dec
into
xchg
pushf
mov
jo
js
jl
shl
inc
jmp
mov
push
fisttps
mov
sub
and
shl
and
imul
aas
jle
popa
push
lea
and
ret
cmp
mov
pop
xchg
lea
mov
repz
and
mov
pcmpeqw
inc
loopne
mov
and
jmp
push
leave
dec
dec
stos
imul
sbb
testb
jne
jo
mov
jo
dec
cmpl
jns
pop
xor
inc
add
jmp
dec
jl
pop
loop
cmpsl
mov
sub
push
jg
ja
or
cmp
push
decb
jge
mov
add
mov
cmpsb
movsl
sub
cmp
push
mov
das
xor
dec
loopne
add
mov
mov
or
sbb
push
in
pusha
sbb
add
add
mov
xor
and
dec
lea
addl
sbb
jne
cmp
adc
dec
add
inc
add
xor
or
hlt
shll
xor
xor
dec
js
dec
and
mov
and
sti
sbb
xchg
jne
or
sbb
inc
jl
popa
scas
iret
repz
xor
push
cltd
adc
out
addb
sub
imul
stos
adc
dec
dec
mov
pop
xchg
repnz
or
andb
add
xorl
and
cltd
xchg
iret
adc
and
fistpl
out
sub
rolb
fisubrl
and
or
ss
addr16
inc
out
adc
mov
cmc
testl
cmp
ja
lea
add
dec
orl
movsb
lea
lock
cmp
out
pop
pop
sarb
and
push
add
lock
or
in
or
mov
pop
xchg
outsb
lcall
dec
lock
inc
fs
inc
mov
mov
mov
add
xchg
popa
test
mov
jne
or
mov
ljmp
pushf
outsl
test
cmpsb
stos
add
pop
sub
sbbb
shr
pop
or
mov
push
cmp
cmp
mov
inc
jecxz
dec
xchg
jo
add
popl
push
mov
mov
xor
adc
inc
arpl
mov
jae
arpl
sbb
call
nop
sub
sar
sahf
pop
lea
nop
or
adc
mov
jb
ret
testb
adc
into
add
nop
rorb
aam
cs
add
incl
xor
pop
hlt
lea
imulb
xchg
int
push
sbb
addr16
jns
or
jne
sub
adc
mov
daa
in
iret
iret
cs
and
adc
xchg
cmp
jmp
jg
mov
push
in
xor
mov
inc
and
mov
mov
call
cmp
inc
rcrl
sub
in
in
dec
pop
xor
int3
push
jb
daa
je
in
fcmovb
rcrl
xchg
addr16
frstor
test
loope
fcomps
cmp
into
and
pop
icebp
je
push
adc
push
sbb
in
cmp
mov
ja
ja
enter
add
popa
sub
test
sub
pop
aam
insb
mov
cmp
sub
rcll
cmp
movl
ja
mov
sub
add
cld
add
cmp
lock
mov
sub
sbb
push
movl
or
mov
or
inc
adc
aad
jnp
xor
leave
push
xlat
push
push
push
jns
test
scas
mov
cmp
jne
sub
mulb
sub
mov
add
mov
xor
mov
lea
or
lea
scas
bound
addl
mov
std
adc
popf
ret
rorl
rclb
inc
mov
je
or
std
jl
inc
testl
ss
sbb
jnp
and
inc
add
add
jmp
mov
daa
cmp
push
shrb
je
sub
int
bnd
cmp
pop
in
cmp
xchg
shlb
xchg
sub
xchg
dec
lret
dec
cmp
xor
or
mov
mov
rorl
mov
xchg
lock
sbb
in
aas
jne
and
test
insb
xchg
iret
js
in
push
xchg
dec
inc
add
prefetch
inc
stc
sub
or
xor
sbb
add
test
fiadds
sub
test
jge
andb
mov
je
xor
inc
sbb
adc
and
mov
cli
out
pop
and
jne
xchg
sbb
or
xchg
test
aad
mov
push
cmp
decl
and
or
aaa
jmp
test
jne
mov
and
add
nop
cs
mov
sbb
push
mov
imul
or
dec
or
ret
or
sbb
add
or
mov
add
andb
push
push
adc
mov
pop
in
hlt
dec
imul
mov
nop
mov
mov
sbbl
into
mov
cmp
lahf
inc
xor
sub
or
stc
dec
or
ret
rorb
mov
cmp
test
sbb
jbe
push
imul
pop
pop
pop
xchg
jne
fs
add
sbb
test
push
imul
mov
pop
mov
and
mov
sbb
orl
nop
mov
mov
jge
jb
cmp
push
arpl
testb
pop
or
jmp
aam
xchg
adc
mov
rcrl
in
xor
mov
cmp
sub
out
test
adc
cmp
stos
mov
adc
add
in
cmp
mov
sub
aad
push
inc
mov
mov
dec
mov
daa
out
js
insb
sub
sarb
cmp
sub
mov
push
and
cld
mov
adc
inc
rclb
xorb
jne,pn
mov
mov
fs
cmp
jae
outsb
mov
cmp
or
or
aas
or
sub
sub
jo
std
jmp
lods
or
add
sbb
ljmp
sub
pop
add
shrl
push
sbb
dec
and
xchg
xor
and
adc
cltd
or
inc
cmp
add
mov
jae
add
movsb
sbb
sub
or
xchg
insb
inc
add
add
testl
adc
or
popa
add
jae
mov
test
jne
pop
add
add
jmp
mov
dec
cmp
adc
xor
sbbb
jmp
repz
sub
jne
lea
daa
add
jae
push
mov
sarb
xchg
rol
inc
pop
or
inc
lret
and
or
sub
mov
arpl
jno
mov
call
ret
sub
loope
inc
jb
jmp
jecxz
pop
inc
rolb
jmp
push
ret
ror
inc
mov
lea
xor
imul
jle
test
inc
and
push
leave
jg
rolb
dec
inc
xor
or
dec
roll
adc
sbb
adc
mov
sub
pusha
jae
mov
imul
addb
jb
adc
xor
xorl
pop
test
hlt
jne
mov
mov
ja
scas
or
daa
cs
test
jae
mov
cmp
ret
js
push
inc
cmpb
movsb
outsb
sbb
inc
inc
xchg
jp
add
or
movsb
cmp
jp
sub
push
hlt
adc
fldz
add
pop
ret
xchg
fbstp
pop
ret
push
popf
pop
stos
movsb
lahf
mov
mov
in
xor
pop
pop
pop
in
sbb
cmp
push
imul
push
or
inc
iret
and
fisubrl
imul
jne
mov
push
mov
jecxz
or
cwtl
sub
fsqrt
adc
lock
sbb
dec
mov
fmull
inc
mov
add
dec
adc
rcll
cmp
sub
pop
add
cmp
mov
je
xchg
addl
lock
iret
add
jl
and
outsb
mov
xlat
mov
shll
lret
push
enter
loop
shl
or
or
mull
inc
shl
notl
pop
insb
jmp
jmp
sti
shr
and
std
pop
hlt
dec
push
add
int
test
je
xchg
mov
call
test
mov
inc
sbb
test
sbb
or
test
cmp
aaa
add
ffreep
push
mov
test
repz
mov
or
cmpsb
add
orl
nop
dec
add
iret
jmp
pop
adc
hlt
lret
call
and
add
std
loop
and
and
xor
jmp
out
leave
jg
into
sub
jmp
jno
les
xorl
pop
cmp
pop
loope
aaa
dec
xchg
dec
mov
xchg
fcomps
inc
imul
adc
ds
addr16
sbb
adc
pop
adc
xchg
sbb
dec
insb
adc
sub
inc
or
andl
sarl
and
sti
add
mov
inc
out
out
test
and
push
and
jae
jmp
inc
push
or
push
orb
jmp
test
orb
sti
or
jno
sub
testl
and
mov
js
je
pop
adc
inc
cs
or
jmp
and
bound
add
pop
add
add
fldl
fstpl
and
push
push
loop
jbe
out
aam
cwtl
push
pop
je
test
lock
or
loop
dec
mov
lahf
mov
adc
inc
sti
sbb
leave
mov
sbb
mov
scas
dec
and
mov
mov
mov
sahf
or
daa
bound
aad
add
sbb
add
add
inc
ja
fchs
fstpl
jbe
pop
mov
jmp
fistps
in
jbe
sub
cmp
out
repz
inc
cmp
push
mov
fstpl
ds
sbb
test
je
cmp
les
xor
mov
psllw
mov
je
mov
rcll
inc
mov
mov
xlat
lea
clc
or
lret
jge
push
es
cmpsl
jmp
mov
mov
add
dec
sar
lea
or
dec
cli
mov
jne
pop
test
sub
insl
hlt
roll
test
je
jb
xor
dec
jne
cs
ret
lret
ficomps
je
pop
lods
sbb
xor
mov
inc
xor
xor
push
sbb
sub
lret
add
pop
pop
dec
fisubrl
xor
and
test
in
push
adc
pop
cmp
lret
addr16
push
sub
and
sub
and
mov
ret
js
jns
or
pop
dec
sbb
adc
fdivr
pop
jp
aas
into
jbe
xchg
mov
and
sbb
and
push
pop
ret
xor
mov
es
jae
xchg
or
xor
cmp
repz
pop
push
es
mov
out
mov
push
jmp
add
cmp
and
push
loope
add
push
test
add
inc
iret
sub
add
les
adc
or
cld
leave
ja
enter
xlat
and
add
lds
andb
dec
std
or
sub
mull
hlt
cmpl
push
push
pop
mov
cmp
lret
sar
jl
adc
mov
ss
enter
pop
push
pop
stc
adc
adc
cmpsl
sbb
test
loope
enter
mov
rcrb
jmp
push
xchg
fildll
push
cwtl
cmp
test
and
add
repnz
gs
loop
dec
push
mov
jae
in
mov
daa
adc
gs
subb
add
add
gs
out
fstl
dec
or
lods
jno
test
push
fucomp
daa
scas
push
es
ss
in
call
out
sub
xrelease
fildl
ret
mov
out
and
out
xor
loop
flds
enter
inc
daa
and
or
fsubrl
cmp
lock
notb
fldt
lds
sub
fwait
call
fwait
gs
ret
jb
lods
mov
in
rcrl
call
popa
mov
fs
jg
andl
add
pop
adc
inc
sbb
cmp
ret
fdivl
fmull
pop
ret
mov
pop
call
int
cs
mov
mov
sbb
adc
pop
lods
mov
rol
loop
icebp
sbb
dec
inc
movsbl
pop
je
inc
inc
mov
lds
dec
lds
mov
mov
mov
push
inc
mov
mov
mov
inc
int
loope
repz
push
bound
decl
xchg
fldl
or
andb
je
or
cmpb
inc
add
dec
jno
dec
cmpb
je
adc
dec
mov
inc
dec
sub
outsb
mov
lret
test
ljmp
test
rcrb
je
or
outsb
and
and
lds
dec
xor
mov
in
inc
jae
enterw
cmp
xchg
add
and
pop
xchg
sub
lcall
cmp
adc
push
sub
sbb
out
cltd
xor
mov
mov
cmp
mov
mov
mov
inc
add
xor
xchg
rolb
add
mov
jbe
mov
mov
sub
mov
xchg
push
mov
jne
repz
out
mov
test
ljmp
enter
fwait
mov
cmp
push
into
movb
add
jae
inc
cmp
pop
add
jns
neg
add
adc
sub
pop
add
idiv
rcrl
cltd
mov
mov
dec
imul
mov
xchg
add
and
or
push
or
or
add
sbb
xor
int
pop
sbb
inc
nop
xor
mov
xor
fiadds
xchg
cltd
aam
push
pop
data16
add
ret
pop
xor
mov
inc
movsb
lods
bound
lea
imul
xor
push
data16
add
pop
xor
add
push
mov
inc
mov
pop
mov
sbb
and
sub
pushf
jns
neg
cmp
in
loop
inc
jl
in
adc
push
push
adc
mov
push
xchg
xchg
xor
cmp
mov
dec
sbb
push
stos
arpl
push
mov
push
xor
push
jp
cmp
loop
xor
pushf
rorl
mov
stos
mov
and
or
xor
inc
ficoms
inc
push
std
inc
xor
sub
push
adc
inc
dec
testb
push
mov
adc
aad
and
or
lahf
inc
xor
mov
adc
int
popa
or
inc
lds
push
adc
ficoml
pop
sub
stc
cli
rolb
in
jmp
dec
shrb
das
test
loope
test
mov
pusha
lret
push
add
sahf
je
jne
lret
add
js
push
mov
rolb
dec
dec
cltd
jle
fldcw
xchg
jle
outsl
adc
bound
push
push
jg
cmp
ljmp
push
or
cmpl
xor
movsb
cltd
dec
pushf
sbb
xor
adc
push
and
sbb
pusha
data16
pop
in
add
and
loope
sub
pop
jmp
out
and
movsb
jle
es
cmp
add
inc
or
inc
xchg
jl
cmp
jl
pop
mov
mov
push
pmullw
test
jle
pushf
add
push
cmp
popa
notb
gs
out
cmp
hlt
xchg
sbb
into
xchg
push
adc
inc
in
push
pop
lcall
mov
mov
ret
jnp
not
jmp
or
mov
sbb
call
push
sbb
pop
bound
orl
jg
cmp
jg
sbb
inc
adc
call
xor
push
clc
inc
js
shll
jae
cmp
loopne
jmp
fstpl
outsl
inc
bswap
cmp
sbb
add
ret
mov
sub
arpl
inc
fisttps
aaa
in
les
xchg
cmp
in
xor
call
push
scas
jge
dec
in
out
adcb
inc
leave
pushl
pop
adc
jmp
and
out
addr16
xor
jb
sub
andb
or
in
xchg
push
in
clc
jae
cmp
jl
cmp
inc
jecxz
inc
dec
adc
hlt
jae
mov
push
cmpb
das
xchg
add
or
lods
push
pop
mov
and
adc
test
mov
or
xchg
dec
cmpb
adc
je
pop
and
shll
xchg
loope
push
pop
jo
andl
pop
and
test
loop
push
mov
test
add
inc
and
sub
inc
mov
inc
push
or
or
in
daa
mov
push
int3
and
ja
mov
cmp
sub
or
push
stos
push
sbb
mov
and
cmp
pop
mov
fidivl
jmp
mov
andb
fwait
mov
xchg
cmc
cwtl
ret
and
addr16
loope
inc
arpl
mov
sub
and
mov
push
in
mov
sub
xchg
rep
ss
sbb
test
jne
mov
jae
popa
mov
xchg
adc
mov
xor
xor
ja
jbe
dec
std
test
push
sbb
adc
lcall
mov
push
nop
xchg
xor
cmp
push
loopne
dec
aam
cmp
pop
cld
lods
pop
je
cmp
xchg
xchg
nop
fwait
nop
sarl
cli
sub
jb
aam
cmp
in
in
xchg
lds
mov
popf
icebp
pop
dec
mov
sub
pushf
dec
xor
push
fmuls
cmc
adc
inc
loopne
cmpl
daa
push
cmpl
mov
jno
inc
and
hlt
xor
fucomp
test
mov
cmp
or
nop
push
adc
jg
dec
mov
xor
imul
push
ljmp
jl
icebp
or
inc
mov
pushf
sbb
push
mov
xor
mov
xchg
xchg
aam
sbb
add
jmp
out
arpl
lods
into
sbb
hlt
mov
rorb
mov
sbb
mov
mov
mov
mov
sub
jmp
sbb
pop
adc
lcall
out
int
jmp
mov
data16
push
dec
and
ds
cmp
add
add
rclb
fidivs
fxch
cmpsl
inc
fwait
add
popa
sbb
jmp
push
leave
pop
xchg
jmp
cmp
js
xchg
ret
cltd
mov
je
add
inc
dec
push
cmp
jo
test
mov
cmp
imul
insl
inc
or
subl
movb
sbb
enter
add
pop
ret
add
imul
xchg
push
adc
push
lea
fcmovnu
sahf
jl
rcr
imul
jmp
mov
arpl
jb
pop
pop
jae
add
or
fnstenv
add
push
adc
jp
shr
pop
cmp
out
push
xor
xchg
js
mov
out
mov
imul
out
mov
test
sbb
icebp
ficoml
and
dec
mov
lock
daa
add
jae
pop
jmp
sub
stos
movsl
xchg
mov
test
mov
test
int3
cmp
jmp
addl
mov
fs
xchg
loop
sbb
add
shl
mov
testb
mov
subb
inc
mov
push
adc
push
push
andb
mov
mov
add
jne
sub
dec
mov
push
mov
call
adc
fs
mov
or
jne
arpl
das
pop
dec
fimuls
mov
ret
sbb
sbb
andl
int3
xor
sbb
lods
les
and
repnz
pop
ret
push
xor
mov
inc
or
rol
and
neg
mov
mov
rclb
adc
or
mov
enter
or
or
and
and
popa
and
mull
jne
subb
das
fcoml
pop
or
shll
or
inc
aam
mov
xor
and
and
xor
cmp
mov
mov
or
andb
pop
xchg
push
in
add
or
jno
push
sbb
in
cmpsl
insb
nop
loope
arpl
shrb
or
inc
cmp
pop
ret
pop
jl
je
inc
push
dec
lcall
cmpb
sbb
repz
shll
add
cli
aam
call
xor
test
mov
mov
xorb
add
stc
adc
addb
mov
sar
mov
cmp
mov
and
dec
rcrb
adcl
inc
int3
mov
jne
xor
sub
hlt
push
dec
mov
adcb
inc
lcall
or
in
xor
lcall
xor
xchg
mov
js
in
mov
push
add
push
cmp
sahf
gs
jge
dec
addl
iret
out
jmp
sbb
lcall
loope
mov
insb
sbb
push
dec
add
inc
xor
add
out
xchg
pop
xchg
xor
mov
scas
pop
lds
loop
cmc
es
lahf
inc
adc
cmc
sub
mov
popf
push
adc
mov
or
cmpsb
mov
nop
scas
push
lea
or
test
xor
and
mov
mov
enter
and
outsb
and
cmp
je
mov
outsl
or
enter
hlt
in
dec
xor
aad
and
test
cmc
inc
pusha
push
pop
movb
inc
repz
xor
jae
inc
xlat
sbb
sbb
push
gs
or
xchg
inc
xor
inc
sbb
mov
arpl
pop
mov
inc
mov
jmp
cmp
andb
cmpb
jne
or
or
adc
dec
incl
dec
decl
add
sub
addb
push
fldcw
inc
pop
add
push
arpl
es
dec
into
es
cmp
jno
test
or
orb
cmp
cmp
adc
andb
add
lea
fmuls
into
add
or
and
add
inc
add
es
jecxz
dec
lret
push
push
sar
add
jg
subb
sub
xor
pop
sbb
dec
and
push
int3
lods
xchg
pop
test
or
jmp
mov
test
into
xchg
and
dec
cmp
cwtl
jae
iret
adc
push
adc
js
or
cmp
test
jne
or
inc
sub
cli
jb
je
mov
push
or
imul
or
mov
jecxz
clc
jne
sbb
adc
lock
inc
push
adc
and
mov
cwtl
call
lock
xchg
test
and
in
mov
cmp
jge
dec
or
adc
sub
sub
or
mov
or
fs
cmpsb
push
dec
mov
sub
pop
adc
jle
mov
mov
and
int
adc
mov
jl
jmp
and
aas
mov
jmp
mov
push
shl
shr
pop
or
cmp
pop
cmp
fists
cld
sub
cmp
ljmp
ret
daa
outsb
outsb
cs
sbbb
sbb
lahf
dec
insl
xor
mov
jge
and
testb
jl
sub
mov
adc
and
sbb
jge
pop
add
pushf
add
dec
jne
ret
cmp
jb
lret
jbe
mov
andl
jmp
fldl
cmp
cltd
adc
or
loope
pop
jbe
and
push
sbb
ds
shlb
dec
ss
and
mov
cwtl
mov
mov
add
add
mov
push
push
cmpb
icebp
dec
int
fxch
repz
popa
call
rcll
mov
adc
in
es
pop
cli
push
push
aas
xchg
mov
div
loopne
inc
fsubl
add
jmp
cmp
jg
je
sub
add
adc
inc
je
inc
lock
adc
mov
std
jmp
cmpb
jne
sub
mov
xor
inc
add
sub
arpl
or
test
mov
mov
jmp
push
sti
insb
ja
or
out
mov
sti
sbb
jmp
decb
sti
loop
test
pushf
lcall
push
mov
adc
jge
dec
cmp
cmp
lahf
outsl
test
cmp
sbb
fwait
push
arpl
add
sub
outsb
les
push
add
cmp
lods
mov
cmp
inc
add
cmc
fldlg2
out
daa
enter
insb
adc
faddl
aaa
sub
sub
outsl
jg
rorb
add
or
or
sbb
add
mov
jle
push
je
outsb
dec
jmp
sub
jno
inc
xor
in
fs
in
push
loopne
push
sub
pushf
jmp
sub
push
lea
jbe
push
mov
cmp
sub
sbb
and
pop
imul
loopne
and
xor
jle
test
jecxz
push
pop
cltd
xchg
mov
and
pop
xchg
leave
pop
in
push
inc
pop
xor
mov
pop
and
shlb
scas
ficoml
adc
nop
xor
nop
jbe
push
gs
cmp
negb
mov
mov
shrl
xchg
setae
cmp
mov
aad
cmp
aaa
jns
dec
add
int3
andb
sarl
je
rcll
std
andl
adc
loopne
pop
das
imul
add
inc
add
jmp
pop
movsl
in
mov
xchg
out
mov
mov
imul
cmp
adc
sbb
jmp
pop
out
inc
mov
adc
ret
jp
aas
pop
cmpsl
les
pop
mov
sbb
push
icebp
xlat
or
pop
adc
mov
mov
xchg
xchg
push
ds
repnz
loop
in
das
pop
sbb
js
loopne
stc
push
pop
jge
ja
inc
ljmp
or
pop
ret
bound
shl
sahf
sbb
iret
add
fiadds
xor
pushf
fsubs
jge
jnp
push
pop
mov
pop
inc
cmpsl
and
push
lret
pop
je
inc
sub
xor
fisttps
xchg
cmp
inc
cmp
jae
mov
jmp
nop
addr16
mov
cmp
ja
shrb
or
mov
mov
pushf
fildll
and
mov
call
enter
shll
mov
add
or
lods
lret
inc
call
shlb
dec
mov
or
lods
popa
imul
test
loop
push
add
xchg
in
pop
call
add
dec
or
rorl
pusha
jne
sbb
js
or
inc
enter
adc
pop
leave
and
jp
bound
adc
fadd
mov
jg
cmpsb
fldenv
loope
mov
xchg
icebp
jno
dec
dec
jp
stos
sbb
sub
stos
jg
vunpcklps
cwtl
dec
cmp
aam
sbb
or
and
into
jnp
xchg
jne
inc
stos
lcall
sarb
outsb
and
add
aas
push
sbb
fsubs
outsl
xchg
mov
fs
cmpsb
inc
inc
int
in
cmpsb
rcr
push
fcompl
pop
loopne
lret
push
mov
mov
push
pop
jo
int3
inc
jne
cmp
jl
dec
push
add
mov
sar
dec
dec
xor
les
cltd
add
xor
adc
mov
mov
flds
cmc
mov
xchg
test
lds
roll
cbtw
test
neg
mov
cmp
mov
or
je
add
cmp
out
jmp
jmp
mov
mov
jbe
push
fisttpll
pop
ror
push
scas
jecxz
call
rclb
xchg
lock
add
gs
jne
rolb
fdivrs
out
fsubr
adc
add
cmp
inc
jmp
mov
lcall
enter
inc
in
push
shll
jne
jno
cmpsb
jae
enter
jb
loop
mov
jne
enter
and
add
outsb
jne
mov
pop
or
in
push
testb
xor
sahf
and
int3
pop
out
sbb
add
xor
das
push
int
dec
push
lahf
movsb
js
cmp
push
jle
lcall
push
cmovp
or
loope
inc
scas
out
pop
add
pop
inc
ret
or
loopne
decl
js
mov
out
movsl
sbb
or
pushl
stos
push
add
cmp
fucomp
cmp
insb
dec
int3
pop
pushf
xchg
push
clc
mov
and
mov
out
push
pop
dec
mov
or
cmp
or
jae
or
mov
xchg
inc
mov
inc
add
mov
add
sbb
ljmp
push
push
add
movb
cmp
xchg
pop
andl
or
sub
xchg
inc
movsb
scas
xchg
inc
xchg
popl
aam
pop
dec
loopne
dec
or
mov
stos
mov
or
inc
add
lock
inc
mov
sub
lea
or
stc
mov
pop
xor
outsb
push
jnp
add
inc
add
jl
cmpb
inc
jb
xor
pop
xchg
mov
or
add
mov
inc
les
in
mov
adc
insl
and
les
cmpsl
pushf
cltd
stos
add
jae
inc
mov
sub
cmp
xor
int
js
cs
cmp
jmp
lock
mov
in
repnz
inc
mov
xor
sub
mov
inc
push
push
aas
add
das
push
xchg
les
xor
mov
mov
enter
popf
jle
add
repz
and
mov
or
adc
push
frstor
sbb
in
push
mov
imul
mov
pusha
jnp
or
and
inc
mov
xrelease
cmp
stos
xchg
lods
lds
subl
add
aaa
mov
lea
mov
fmull
sbb
test
mov
je
xor
pop
xlat
adc
dec
enter
les
fdivrs
divl
inc
or
add
iret
fimull
aad
push
shlb
xchg
js
mov
add
icebp
adc
or
outsl
lods
mov
adc
fistpl
mov
sbb
pushf
push
fs
xor
xchg
jmp
enter
push
fwait
je
inc
push
sub
jno
pop
mov
pop
or
cmp
push
popa
scas
jp
dec
enter
call
dec
or
pop
jge
mov
mov
sbb
movsl
mov
jg
or
test
cld
sbb
cmp
pop
or
push
inc
lds
test
in
jae
and
jmp
pop
inc
fldenv
andl
pop
sbbl
sbb
mov
add
daa
push
and
pop
lea
imul
mov
stc
andb
clc
add
lock
mov
mov
or
in
bound
and
imul
add
or
and
scas
and
clc
inc
lea
mov
inc
fnstsw
push
in
test
cld
leave
adc
shll
and
lret
pop
jge
insb
std
push
sub
inc
clc
add
mov
lcall
ja
mov
dec
je
jns
scas
xor
imul
sbb
jne
lret
and
or
inc
adc
mov
push
push
pop
sbb
add
test
aas
mov
inc
pop
and
sarb
orl
cmp
cmp
add
or
je
addb
push
andb
andl
mov
adc
dec
mov
pop
push
add
ret
add
leave
mov
cmp
sbb
push
rdtsc
jno
mov
sub
dec
rolb
jg
mov
and
xchg
pop
iret
sub
inc
add
std
lea
xchg
adcl
add
and
movl
mov
jmp
jl
lret
adc
or
push
push
push
or
inc
add
inc
add
adc
test
inc
xor
sub
faddp
cli
or
cmpsb
add
pop
mov
add
sub
and
pusha
or
inc
jmp
xorb
push
push
insl
nop
xorl
fsts
pop
testb
xchg
inc
push
in
sbbb
cltd
xchg
inc
bound
loope
lret
sbb
adc
or
push
jne
and
mov
xchg
xchg
lcall
jae
sysenter
gs
mov
or
test
xchg
cld
mov
inc
and
xchg
inc
add
daa
inc
sbb
lods
into
lret
mov
clc
mov
rcrl
rorl
mov
add
push
pop
or
add
pusha
or
cmpsl
xchg
mov
or
and
mov
or
push
or
vunpckhps
cmp
jge
lea
sub
mov
add
or
jne
mov
xor
cltd
jp
adc
nop
repz
cmp
pop
cmp
out
mov
aaa
cmp
repz
push
adc
sub
xor
dec
cmp
sub
or
movsb
sbb
or
dec
outsb
push
enter
mov
mov
ret
adcl
xlat
dec
in
mov
and
adcb
cmp
jne
dec
pop
sbb
sbb
je
push
push
dec
adc
sub
mov
out
and
jne
mov
push
pop
sub
test
gs
test
cmp
pop
or
lahf
sub
mov
ja
lret
les
add
dec
fisttps
mov
xchg
and
cmp
fs
je
popf
stos
add
cmp
je
inc
adc
add
jmp
sbb
mov
pop
sbb
xchg
roll
pushf
push
int
or
jne
cmp
add
push
mov
pop
inc
cmpb
lods
mov
jae
push
push
jg
and
testl
add
push
bound
jne
pop
call
mov
aas
mov
pop
dec
xor
subl
nop
xchg
into
push
inc
pushf
adc
gs
adc
mov
cmp
ja
shlb
shll
and
idivl
mov
push
push
leave
sub
sahf
xchg
clc
sbbl
fsubl
mov
jns
mov
sub
xor
mov
shll
adc
or
and
cmp
add
cli
dec
mov
xchg
pop
push
push
shl
or
mov
test
fcomp
mov
mov
mov
inc
inc
aad
into
ret
push
sbb
adc
inc
outsb
fidivs
cwtl
and
testb
xor
inc
xchg
in
or
andb
ljmpw
aad
adc
cmpxchg
mul
les
add
enter
jmp
adc
push
lods
je
mov
pop
inc
xchg
ficoml
xchg
rolb
mov
arpl
push
or
and
ret
int3
push
or
loope
add
sete
and
shr
mov
dec
and
push
inc
movb
pop
inc
adc
cmp
shlb
movsb
dec
clc
aas
je
je
push
lds
jns
dec
sbb
lods
js
stc
xadd
inc
push
enter
xor
inc
js
add
movsl
test
xor
sbb
orl
popa
sbbl
pushf
aad
fs
jmp
push
insb
or
jmp
mov
inc
out
cmp
adc
bound
push
push
or
adc
out
cmp
subb
inc
inc
sbb
xor
pop
stc
repnz
loope
mov
cmp
adc
inc
xor
lods
sub
jmp
xor
jae
add
xchg
and
jb
lea
or
adc
pusha
test
or
dec
xchg
imul
mov
inc
sbb
push
cmp
mov
sti
int3
inc
popf
inc
imulb
movl
test
call
inc
cmp
shll
push
push
add
adc
adc
jge
adc
push
cwtl
ljmp
xchg
cmpsl
sbb
andb
add
mov
jmp
lea
and
mov
les
push
inc
mov
xor
mov
adc
jnp
int3
add
push
mov
nop
cmp
mov
lea
sbb
bound
inc
mov
rcll
lahf
in
mov
mulb
adc
inc
inc
push
pop
inc
mov
out
mov
dec
cs
shrb
jne
cmp
test
push
mov
jl
jl
mov
mov
mov
inc
add
cmp
jl
sbb
outsb
mov
mov
shrb
xor
pop
ret
dec
adc
xor
jo
aad
push
push
push
xchg
cmp
rcrb
bound
mov
xchg
rorb
or
movsl
pop
sub
add
inc
mov
clc
push
add
cmp
je
add
stos
mov
xor
pop
inc
xor
or
rcrb
cmpb
inc
jo
add
subb
aam
subl
jae
or
shlb
jbe
je
ret
inc
push
push
lea
call
xchg
or
cmp
mov
les
sub
sbb
or
add
loop
or
pop
pop
out
or
cmp
mov
jmp
jmp
mov
adc
push
pop
jae
add
or
cwtl
and
mov
push
fwait
inc
cs
push
ret
and
sub
mov
lods
mov
movsl
push
add
daa
inc
pop
dec
mov
add
push
sub
decl
push
pushf
push
cwtl
call
xchg
test
mov
out
inc
rclb
add
xchg
sbb
push
in
jb
jle
imul
daa
or
cli
outsb
mov
movsb
mov
sbb
arpl
lods
imul
push
jae
mov
xchg
push
mov
pushf
sub
jbe
cmpsl
aam
test
subl
clc
push
test
pop
and
xchg
adc
addr16
sub
inc
popf
jne
stos
pushl
cmp
and
push
enter
pusha
add
stc
sub
imull
sub
lea
push
xchg
ss
xchg
pusha
mov
and
enter
jmp
bound
int3
inc
jmp
mov
adc
leave
and
mov
add
pop
mov
and
mov
or
mov
es
adc
mov
cmp
mov
jge
xchg
mov
mov
add
sbbb
xor
and
xor
ds
gs
sbb
ret
push
adc
xor
and
xor
ret
push
dec
sbb
lock
pop
jb
or
inc
cmp
mov
cmpb
add
sub
stos
inc
mov
cmp
cmpsl
movsb
sbb
outsb
leave
mov
or
pop
add
dec
or
pop
cltd
js
xor
out
adc
pop
lret
je
and
mov
or
test
out
js
imul
mov
mov
sub
fmull
adc
ficoml
mov
xchg
xchg
sub
mov
push
pop
mov
and
inc
dec
es
mov
push
mov
sbb
cmp
xchg
xchg
adcl
push
mov
les
je
shrb
or
dec
dec
push
loope
fsub
cmpsl
mov
fildl
adc
sub
push
stos
push
out
cld
mov
xchg
adc
push
pcmpgtw
lea
jbe
dec
and
and
popa
inc
cltd
pop
lock
enter
and
test
and
lock
or
pop
lea
xchg
and
pusha
or
imul
popa
addr16
pop
dec
shr
sbb
push
push
je
fs
pop
add
or
add
repz
xor
pusha
adc
xorl
test
push
pusha
mov
mov
je
je
dec
test
mov
or
inc
lds
adc
jmp
or
jmp
or
mov
int
mov
lock
les
std
xchg
dec
add
test
pop
cli
inc
inc
xchg
push
dec
leave
mov
cmpsb
xchg
add
lods
sbb
fnsave
mov
ret
jbe
fsubs
mov
sbb
je
adc
lods
in
mov
mov
gs
mov
gs
push
iret
imul
ret
mov
jmp
adc
pushf
sbb
mov
push
adc
dec
add
shl
not
test
jne
inc
add
add
push
adc
push
jl
adc
call
jl
mov
xor
xchg
adc
push
fdivs
pop
pop
shrl
mov
notb
mov
sbb
pop
mov
push
js
sub
decl
test
not
lea
lds
pop
mov
add
pop
cltd
mov
bound
fwait
pop
xchg
sub
sbb
mov
pop
mov
or
mov
and
sbb
sbb
push
std
jbe
out
adc
mov
clc
xchg
pop
adc
ror
jo
enter
ja
dec
and
pop
int3
xorb
xor
dec
and
and
adc
jb
or
cmp
push
fwait
popf
int
push
add
pop
push
inc
xchg
cltd
and
or
mov
add
out
sbb
cmp
enter
sub
mov
pop
lcall
out
push
loope
inc
sub
hlt
add
mov
pop
mov
push
pop
add
fistpll
cmpsl
les
roll
aad
adc
movsl
jnp
push
mov
loopne
lods
jns
sbb
ja
dec
or
inc
or
mov
lods
or
and
sub
call
lcall
dec
out
hlt
imul
sub
and
adc
cli
pop
xchg
cmpsb
push
pop
jo
push
mov
pushl
in
xchg
xor
push
aaa
stc
push
lds
inc
dec
xchg
push
sub
dec
add
jmp
cmp
lods
lock
jnp
dec
sahf
inc
push
fists
inc
pop
pop
cltd
or
sub
lret
mov
and
xchg
xor
adc
pop
jl
mov
scas
xchg
adc
mov
cmp
adc
andb
inc
sbb
or
repz
jnp
or
adc
xchg
xor
mov
or
xchg
or
or
jbe
enter
sbb
test
pop
mov
rcll
imul
cli
dec
lds
je
jne
rclb
es
push
mov
push
jb
iret
ret
test
mov
leave
lcall
xchg
adc
lea
add
lock
movb
test
jle
lret
shrb
fimuls
mov
rolb
pop
mov
pop
in
add
inc
jmp
into
adc
cmpb
jl
push
pop
adc
jmp
xor
xor
jmp
popa
sub
push
outsb
pop
subb
xor
push
adc
xor
jnp
lea
test
andb
xchg
clc
mov
xlat
pop
jo
xor
mov
hlt
sbb
bound
add
mov
xchg
subl
mov
rorb
enter
adc
shr
enter
dec
mov
inc
dec
xchg
js
cmp
inc
or
mov
jo
adc
add
sub
imul
jne
mov
sbb
out
sbb
xchg
push
movsl
test
ret
pop
adc
enter
in
inc
loop
sub
into
das
add
adc
leave
mov
shr
or
lea
mov
xorl
movsl
sub
mov
xor
or
dec
or
xchg
outsb
shlb
fnstenv
xchg
dec
aam
stos
andl
cli
addr16
mov
es
dec
and
add
aas
je,pn
iret
push
xor
ret
pushl
sbb
sub
sbb
or
out
mov
movsl
pop
sbb
sub
mov
push
nop
mov
or
popa
aam
and
idivb
add
lea
ret
sub
cmp
inc
or
add
clc
rolb
push
inc
push
mov
adc
lret
bound
daa
arpl
jle
xor
lcall
jbe
inc
adc
jmp
shl
xchg
adc
pop
add
orl
push
jae
xor
cmpl
mov
mov
sub
mov
adc
push
mov
add
jne
push
push
cmp
xor
xor
dec
or
pop
adc
pop
push
imul
ret
or
fwait
push
pop
push
push
cmp
imul
stos
mov
jne
xchg
das
loop
dec
rcrl
orl
jl
pop
rcrb
push
inc
testb
jb
add
mov
je
mov
lret
pop
push
cmpsb
and
shll
push
xchg
push
leave
adc
xor
sbb
dec
sbb
test
push
inc
enter
pextrw
jno
in
decl
add
push
mov
and
cmpsb
mov
adc
lds
xchg
add
cmp
inc
incl
pusha
rcrl
je
mov
push
mov
and
adc
sub
sbbb
or
adc
je
xor
pop
inc
mov
shll
test
and
push
lret
mov
mov
and
mov
cs
je
in
xor
cmp
add
sbb
popl
outsb
cwtl
xor
and
in
aaa
clc
loop
outsl
add
clc
jmp
repnz
xchg
add
xchg
stos
push
leave
mov
pop
and
cmpsl
clc
jb
rorl
add
sub
xor
and
adc
daa
test
gs
rcrb
test
andl
pop
push
or
testl
or
bound
stos
pop
add
iret
mov
xor
sbb
ds
and
push
mov
cltd
lock
enter
mov
cwtl
push
dec
or
jne
lcall
shrl
adc
inc
push
into
or
cltd
stos
or
sti
mov
shl
add
add
cmp
and
daa
xor
dec
add
js
inc
enter
add
outsb
incl
xor
fisubrl
insl
sbb
pop
add
pop
adc
aas
adc
push
adc
lcall
test
test
outsl
aaa
add
data16
adc
and
inc
fdiv
je
test
adc
pop
int
sub
pop
subb
nop
rclb
lds
shrl
jne
sub
stos
stos
rorb
adc
je
sbb
aaa
les
mov
xor
cwtl
mov
dec
mov
add
cmp
das
xor
or
inc
and
fadds
cmp
rol
jne
jb
cmp
cwtl
and
xchg
gs
jmp
adc
xchg
jne
xor
lret
sbb
es
inc
adc
push
mov
pop
add
jae
and
shld
shl
xchg
xorb
and
shl
out
or
xor
add
mov
mov
inc
xor
inc
mov
inc
fwait
nop
add
push
cmp
jne
add
push
jne
mov
testb
leave
mov
popa
pop
push
je
ret
mov
adc
incl
add
out
push
lea
jmp
loope
or
decb
and
push
or
sub
in
push
xchg
push
sub
pop
jo
cwtl
std
inc
mov
jo
call
lea
shrl
fstps
lret
movsb
in
mov
mov
cmp
rclb
xchg
add
cs
xor
pop
pusha
mov
or
imul
outsl
sarl
inc
rcrl
adc
je
mov
mov
hlt
add
dec
repnz
ljmp
push
push
push
mov
jl
push
es
int
inc
lea
insb
test
mov
es
aas
or
sbb
mov
mov
rcrl
fdecstp
fildll
mov
loop
mov
aam
lds
xchg
mov
pop
add
shlb
push
out
dec
or
sub
mull
push
inc
hlt
subl
mov
push
lods
test
add
sub
mov
xor
and
and
add
mov
add
cmp
jg
inc
jmp
xchg
dec
inc
xor
shlb
jno
sub
jmp
cs
xor
and
fists
je
cmpb
cmp
xor
add
xchg
add
or
sub
xchg
aaa
test
mov
dec
cwtl
xchg
mov
mov
les
cmp
mov
aam
push
data16
mov
jne
test
xlat
push
dec
xchg
jmp
movsl
mov
cli
das
sub
cmp
cmp
loope
sub
push
out
xor
ss
sahf
leave
inc
jne
xor
mov
addr16
xor
push
repnz
xor
jg
push
push
lret
push
addb
add
sarl
jp
loopne
add
ret
std
mov
orb
push
jl
xor
jg
mov
sbb
negb
repnz
or
xor
sbb
sbb
ror
mov
shll
out
enter
shlb
mov
sbb
roll
andl
add
xchg
cltd
fisubl
add
push
aam
add
mov
lea
push
sar
mov
add
and
or
jo
inc
sbb
push
sbb
push
pop
sub
add
into
mov
hlt
stc
das
clc
xchg
push
xchg
sub
add
cmp
or
add
and
dec
lds
or
pop
sub
sub
jge
inc
or
fwait
in
cltd
or
inc
sub
cld
enter
pop
ret
jmp
gs
fdivrl
pushf
add
mov
jns
add
xor
adc
push
inc
sbb
aad
sbb
adc
pushf
dec
xchg
sub
inc
lret
imul
inc
inc
test
pusha
stos
insb
and
subb
inc
adc
mov
and
cld
adcl
cmpsb
xchg
pushf
xorb
and
xor
insb
jge
movsl
mov
rolb
sub
movsb
arpl
sbb
xchg
cmp
imul
loopne
mov
sub
into
fmull
int
adc
jmp
lock
adc
mov
loopne
mov
push
xchg
xchg
jae
adc
cmpsl
stos
adc
add
cs
cltd
rclb
pop
sbb
addr16
adc
addr16
aas
cmp
test
aad
mov
sbb
mov
adc
js
push
jmp
mov
adc
add
xadd
ja
das
testb
or
mov
add
jl
out
mov
xor
pop
andl
sub
jge
mov
adc
add
je
cwtl
jae
or
mov
pop
mov
adc
xchg
int3
jl
pushl
and
movsb
pop
fwait
add
xor
call
push
mov
cmp
jmp
or
data16
out
mov
sbb
mov
add
add
aas
shr
or
mov
sub
mov
shr
shl
sub
xor
ja
dec
repnz
cmp
jmp
or
mov
shl
ljmp
mov
sbb
push
mov
push
push
push
add
mov
mov
add
push
popa
or
shlb
lea
movsl
movsl
push
pop
mov
sbb
xchg
sub
in
push
lods
out
test
mov
or
sbb
adc
sbb
jne
pop
cmp
push
push
cmp
inc
shr
shrl
cwtl
or
add
in
lock
jmp
mov
jae
sahf
fnstsw
push
adc
jmp
cld
pop
data16
clc
or
xchg
sub
movl
or
pop
call
lea
sbb
mov
inc
shl
clc
popa
stos
loop
in
mov
mov
and
or
add
out
mov
xorl
andl
inc
inc
sti
xor
mov
bound
and
xor
cmp
nop
xor
inc
cld
sub
scas
inc
push
push
fstl
repnz
fsubl
push
push
xor
cmpsl
and
mov
dec
sahf
lock
int
les
scas
call
mov
push
xor
rol
je
inc
jle
and
adc
dec
fs
jnp
jb
std
inc
fs
dec
push
inc
in
arpl
lods
xchg
mov
aam
pop
loope
dec
fwait
mov
mov
mov
les
cmp
jle
xor
sbb
push
movsb
jp
or
aad
lahf
and
addb
jae
iret
and
mov
cmp
xchg
gs
dec
jmp
jnp
es
movb
and
fdivl
sti
and
sahf
push
sahf
in
mov
jecxz
adc
arpl
lods
cmp
push
aaa
add
sarl
or
daa
movsl
andl
lea
lret
mov
xor
xchg
jmp
loopne
cmp
ss
and
repnz
inc
push
iret
dec
push
jg
subb
push
pop
dec
push
nop
jae
inc
mov
sub
scas
faddl
je
sbb
out
xchg
pop
xchg
test
pop
pop
popa
sbb
pop
push
add
das
or
adc
push
or
xor
ljmp
xchg
xorl
pop
adc
mov
pop
push
idivl
stos
popa
rorb
in
cmp
arpl
lock
push
add
sti
and
jbe
cmpb
jl
incb
cmpsl
nop
ss
dec
gs
pop
push
xor
xchg
add
dec
in
repnz
cmp
ss
dec
add
gs
leave
add
neg
add
cmp
loopne
cmp
inc
sbb
adc
inc
cmp
sbb
and
mov
aam
test
outsl
test
pop
test
insl
xchg
pop
cmp
jbe
in
adc
and
add
add
in
lret
mov
jmp
daa
mov
mov
inc
fiadds
inc
adc
lods
dec
or
push
and
jno
mov
inc
push
xchg
jge
rcrl
push
inc
aas
imul
inc
jecxz
push
jae
pushf
and
mov
jo
add
xor
aam
xor
pop
pop
test
push
iret
arpl
int3
in
cmp
repz
call
or
sti
out
aas
ljmp
les
mov
or
pop
or
pop
add
jne
andw
adc
ret
or
add
mov
xchg
test
mov
cmp
jne
test
inc
mov
push
adc
inc
stos
in
mov
ret
cmp
je
mov
inc
or
push
mov
fldcw
adc
push
test
dec
push
cwtl
xchg
pop
loope
mov
aaa
add
mov
sbb
adc
inc
sbb
add
dec
add
imul
testb
mov
mov
sar
lahf
add
repnz
push
sbb
adcl
cmpl
fsubs
cmp
inc
cmp
es
test
add
xor
xor
ss
add
cmp
test
xchg
xchg
push
jne
leave
das
repz
add
shll
sbb
dec
mov
daa
sbb
sbb
jne
inc
ret
or
pop
neg
and
push
fdivrl
dec
repz
xor
jle
mov
bound
and
repnz
outsb
or
or
rorl
mov
adc
mov
pushf
leave
sbb
mov
inc
adc
test
ljmp
jl
cmp
jb
mov
inc
push
dec
jmp
add
incl
sub
sub
mov
int
test
sbb
xchg
mov
into
or
hlt
divb
and
add
add
push
mov
and
push
xor
push
mov
cmp
push
stos
mov
out
add
mov
mov
mov
mov
mov
scas
mov
jo
jo
mov
or
test
mov
test
incb
ret
sbbl
fcoml
pop
or
mov
andb
movsl
xor
and
adcb
push
or
jbe
pop
sub
or
jge
lea
hlt
test
outsb
adc
and
pop
inc
and
or
bound
sbb
pop
fs
adc
dec
dec
shll
or
or
pop
stos
jecxz
xchg
adc
inc
xor
hlt
test
push
mov
xchg
fcmovnb
cs
push
cmp
adc
testb
xchg
scas
push
and
orl
adc
or
adc
xor
and
adc
int3
inc
lock
pop
sbb
and
aam
popa
adc
dec
sbb
or
and
sarl
xor
mov
pop
mov
sbb
xlat
addl
pop
add
insb
and
mov
jge
xor
xchg
test
adc
sub
jo
xor
sahf
adc
inc
aam
movsb
or
and
jp
cs
adc
or
xchg
sbb
test
je
pop
lret
sub
sbb
xor
out
push
ror
fldl
bound
arpl
or
clc
add
push
cmp
pop
jbe
inc
add
mov
jne
pop
xchg
and
add
rorl
or
imul
xor
outsl
es
or
mov
and
clc
and
and
and
xchg
push
idivl
jg
loopne
jbe
cli
std
mov
aas
ja
mov
pop
cmp
pop
and
or
popf
ja
dec
test
fcoms
cmp
ret
fadds
mov
mov
push
push
push
cmp
cmp
jo
cmp
in
fldl
push
lods
mov
dec
or
repnz
or
mov
rclb
jg
jle
jno
inc
xor
or
into
andb
push
mov
and
pop
push
adc
imul
cld
add
push
daa
lods
or
xor
stos
add
jp
subl
mov
push
enter
cld
leave
jp
or
pushf
addl
or
jle
testb
mov
pop
or
loop
call
sub
mov
and
or
mov
faddl
or
add
ljmp
in
lcall
paddusb
cmp
jne
fsubrp
push
sbb
test
or
loop
loop
mov
or
int
js
out
call
test
jmp
loop
adc
xchg
cmpl
fimuls
jge
pop
or
mov
mov
push
mov
fistps
jmp
jo
addb
shrb
pop
adcl
push
aad
aam
sub
cmp
cltd
push
inc
add
dec
movsl
or
addl
and
loope
add
mov
and
je
lea
roll
addl
rorl
pop
inc
fs
push
lods
push
insl
add
ret
lea
movsl
shl
lods
push
test
lea
ret
ret
test
xor
or
mov
inc
cmp
xorb
loope
addl
pusha
dec
push
or
jae
sub
mov
and
mov
push
test
jmp
inc
cltd
xchg
loope
xchg
cmc
inc
sbb
leave
or
pushf
mov
test
and
dec
pop
rolb
and
mov
je
sbb
shll
rclb
push
fcoml
rcll
jnp
lahf
out
push
pop
jmp
das
xor
xor
pop
mov
lcall
jbe
aas
ljmp
mov
ret
mov
and
cld
mov
mov
out
rcrb
push
arpl
cmovp
or
push
mov
mov
or
mov
sub
and
lock
adc
sahf
adc
repz
push
mov
insl
xchg
scas
pusha
test
adc
pop
sbb
je
cmpsb
mov
mov
sub
sub
dec
xchg
unpckhps
and
jno
jl
or
mov
sarl
scas
dec
jae
add
dec
inc
xchg
jle
bound
lea
dec
lods
dec
ss
int3
jo
push
sub
add
les
jb
lret
lret
shll
roll
sbb
dec
or
lcall
lods
inc
out
aaa
les
jl
push
das
xor
jno
sbb
jbe
loop
sub
cli
cmp
ret
adc
cmp
mov
movsl
iret
cld
sahf
push
or
push
mov
int3
jb
popf
cmp
aad
aas
xchg
dec
mov
mov
pop
push
stos
js
jns
jns
xchg
xchg
cltd
aad
in
loopne
icebp
push
xor
mov
fsubs
pop
movsl
out
leave
daa
sub
adc
sti
je
pop
pop
xchg
mov
push
stos
push
xchg
in
or
xchg
aas
mov
push
mov
enter
lea
adcl
adc
push
and
pop
sub
sub
pusha
sbb
push
push
mov
jb
andb
clc
je
jb
jl
cmp
sub
imul
mov
insl
or
or
mov
fidivl
sbb
cmp
sti
xor
cmp
ljmp
loope
outsl
fcomp
ret
je
mov
jne
xchg
sarl
les
xor
mov
mov
inc
mov
sbbl
mov
xor
xor
lea
ljmp
dec
or
mov
add
lock
inc
inc
mov
movsl
adc
jle
imul
jne
add
mov
inc
push
popf
dec
dec
cmp
dec
or
andl
sahf
xor
inc
fs
jno
mov
cs
mov
fwait
pop
sub
xor
imul
inc
inc
neg
sbb
not
and
fiadds
mov
inc
js
xchg
dec
inc
lock
mov
xchg
andb
push
and
pop
push
cmp
mov
testb
push
sbb
ret
adc
iret
sub
cltd
int
pop
ret
lea
or
sub
mov
or
jecxz
mov
ficoml
int3
adc
push
xchg
mov
and
pop
jmp
inc
dec
add
push
fistl
jne
test
pop
in
rolb
sub
enter
rcrb
xchg
adc
inc
pop
inc
xchg
rcr
sbb
rcrb
or
cmp
dec
push
inc
cmpsl
sarb
push
or
push
cmp
inc
jmp
lea
in
leave
dec
xchg
cmp
sub
imul
inc
xchg
data16
fcoml
mov
add
jne
bound
mov
sub
mov
mov
mov
js
stos
adc
aas
movsl
xor
cs
aam
mov
xor
les
xchg
or
loope
clc
outsl
adc
pop
les
pop
jp
cmp
js
nop
addr16
test
push
lock
inc
inc
pop
or
jnp
int3
jle
mov
mov
mov
xchg
sub
sbb
add
cmpsb
add
rcrl
flds
shr
sub
inc
cmp
xor
inc
pop
in
dec
loope
jo
push
addr16
icebp
aam
inc
adc
test
jle
dec
or
pop
mull
xchg
daa
cmp
lcall
add
add
mov
mov
ret
sub
cmpsb
or
icebp
push
lock
xor
mov
xor
outsl
inc
sub
testb
jnp
dec
and
pop
int3
ficoms
pop
sbb
out
clc
push
ja
and
push
jne
and
pop
cld
mov
mov
imul
or
paddq
pop
pop
xchg
and
in
cmp
jmp
inc
js
nop
adc
and
pop
ret
lea
mov
or
test
push
cs
daa
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
mov
mov
cmp
je
sbb
push
add
jmp
enter
jecxz
in
aas
daa
pop
fsubs
push
xchg
push
and
sub
leave
pop
cmp
je
cmp
xor
cmp
aad
xchg
test
cmp
ja
sub
and
push
push
adc
cmp
cmp
pushf
dec
int
test
cmp
jmp
adc
clc
gs
adc
in
add
inc
push
inc
pop
out
cmp
pop
out
inc
fmull
ret
sub
pop
pop
imul
in
fdivr
aaa
xchg
add
or
mov
jne
movl
int
cmpsl
cmp
sbb
je
add
cmp
jmp
gs
lods
xlat
adcl
movl
je
pushl
ret
rcrl
je
insb
test
adc
mov
pop
push
jmp
mov
das
lock
mov
or
lret
addl
hlt
in
mov
mov
jne
push
push
loopne
pusha
aaa
or
aaa
les
jne
inc
cmpsb
push
cltd
push
dec
mov
test
jp
and
jbe
mov
insb
mov
inc
dec
adc
adc
jp
xchg
je
jo
fs
rolb
idivb
xor
imul
jmp
pop
mov
mov
pop
cmp
into
ret
adc
cmp
pop
mov
aam
mov
jno
les
add
out
adc
push
movsb
in
mov
or
push
in
or
test
in
xchg
sahf
inc
sub
movsb
dec
addr16
dec
push
ret
sbb
inc
or
push
pop
mul
iret
out
negb
push
push
xor
cltd
stos
dec
mov
leave
and
rorb
fsts
nop
push
add
iret
sbb
add
adc
push
test
xlat
in
in
por
test
adc
mov
and
xchg
pushf
movsl
mov
aam
dec
les
cmc
je
jl
and
and
pop
and
or
dec
adc
add
mov
adc
sub
outsb
dec
or
jbe
enter
lret
enter
jb
sub
adc
out
dec
add
mov
mov
pushf
adc
pop
sub
sarb
sbb
shrb
enter
shrb
cmpsl
in
inc
mov
aam
push
inc
popf
or
pop
cmp
aam
or
aam
test
aam
test
xchg
adc
push
inc
ss
mov
sub
dec
enter
out
or
or
or
jmp
movsb
inc
dec
das
dec
mov
cmp
cmp
jle
sbb
fisttps
fs
adc
add
loopne
inc
pusha
push
lea
sub
mov
sub
and
dec
push
dec
and
inc
scas
pusha
aad
mov
lods
or
fwait
pop
int3
adc
mov
jecxz
mov
mov
mov
loope
jo
out
call
pushf
lock
mov
cmp
imul
inc
loop
pop
jno
dec
loopne
adc
and
add
das
and
push
push
das
xor
xor
je
and
add
je
outsl
jb
jp
je
outsl
outsb
dec
outsl
mov
pushf
lcall
sub
jno
aas
push
repz
incl
push
cmc
aas
add
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
add
add
aad
mov
rclb
mov
sub
mov
sbb
add
mov
dec
jno
repz
test
sbb
in
add
add
insl
push
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
add
add
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
add
add
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
add
add
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
inc
add
push
cltd
xchg
mov
mov
or
add
add
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
add
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
sbb
push
sub
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
add
or
fnstenv
adc
mov
mov
bound
into
add
sub
rorl
popa
mov
into
cmp
add
add
inc
movsl
fisttps
xchg
fadd
shll
add
shrl
imul
mov
sarb
add
in
add
pop
dec
or
add
or
push
stos
inc
add
adc
or
and
test
or
mov
add
add
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
add
dec
mov
mov
add
add
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
add
add
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
add
push
inc
push
imul
xorb
sbb
push
imul
aam
loopne
add
dec
pop
jp
adc
dec
fldl
add
cmp
mov
mov
mov
aad
mov
call
xchg
shll
add
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
add
add
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
rolb
add
add
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
add
add
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
push
or
or
addr16
jb
push
add
adc
mov
add
add
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
add
add
push
int
mov
mul
ja
outsl
ja
mov
out
add
add
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
and
insb
push
js
or
push
addl
mov
add
add
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
add
add
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
add
sub
mov
or
sbb
add
sub
push
aas
lock
das
xchg
inc
push
cmp
push
in
add
add
lock
cmp
sub
xchg
jl
add
pop
or
aaa
xor
push
push
pop
and
or
pusha
ret
and
js
movsl
mov
sub
add
add
jne
insb
and
outsb
jne
insb
add
inc
gs
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
roll
call
push
inc
push
push
sahf
ret
sub
jns
xor
sub
gs
insw
sbb
jns
push
push
cmp
arpl
jae
mov
cmp
cmp
insb
outsl
or
imul
arpl
imul
jno
out
xchg
pop
popa
xor
shll
dec
pop
cmp
enter
jmp
arpl
loope
dec
inc
add
or
jle
push
inc
addb
add
push
jb
jae
and
or
inc
gs
pushf
out
outsb
loopne
mov
bound
daa
xor
sub
push
popf
add
sbb
mov
push
aas
sub
cmp
mov
mov
fucom
inc
mov
pop
iret
test
jae
adc
inc
pop
push
sar
add
sub
jge
adc
cmp
push
inc
fidivs
jb
imul
jb
and
push
push
add
dec
dec
inc
and
dec
dec
inc
subb
push
xor
cmp
cwtl
insb
sbb
mov
and
daa
pop
push
jo
jo
mov
outsb
or
addr16
daa
push
cmp
sahf
ja
out
mov
mov
ss
out
jnp
jo
push
mov
jbe
jne
xchg
stc
test
and
cmp
xor
ljmp
mov
xchg
fs
jge
loop
cmp
cld
cmp
rcrb
hlt
push
outsl
pop
arpl
int
insb
dec
gs
int
loop
ljmp
insl
lock
pusha
daa
je
popa
fs
sbb
arpl
jae
and
aas
enter
daa
ret
rorb
jo
mov
or
popa
insl
insl
loope
adc
cmp
mov
fisubs
push
and
popa
jb
jne
add
aam
push
jp
bound
insb
je
outsl
xor
jmp
or
dec
add
in
jne
stos
inc
push
imul
sub
and
imul
jns
int3
sub
mov
xor
push
mov
scas
xor
add
fcoml
add
notb
push
fadds
faddl
fidivl
add
dec
add
push
test
jne
push
push
push
pop
inc
jmp
popa
dec
cmp
lcall
inc
inc
jns
mov
sbb
insb
inc
add
and
gs
dec
outsl
jbe
or
test
je
popa
inc
inc
pop
movsb
mov
outsb
roll
movsb
and
fs
out
dec
popa
cwtl
sarl
out
pop
and
inc
dec
mov
arpl
xchg
loope
cmp
inc
dec
scas
dec
mov
sub
inc
lds
loope
ficoms
push
fcoms
push
jb
enter
clc
clc
popf
fs
push
jmp
out
shll
inc
outsb
push
xor
jae
jecxz
jbe
movsb
mov
mov
and
sahf
out
push
push
push
push
and
fdivrl
outsl
add
cmpsb
add
adcl
inc
fldl
dec
pop
rcrl
xchg
mov
pop
sbb
test
rcrb
pop
outsb
call
add
add
cmpb
jnp
push
jge
push
out
sbb
lahf
push
cwtl
mov
xlat
mov
shll
jle
out
or
leave
mov
jl
outsb
jl
js
push
outsb
shlb
lahf
xchg
xlat
jns
add
mov
test
jecxz
push
rcr
pushf
pop
xchg
stos
cmc
sahf
arpl
das
iret
repz
enter
fisubl
smsw
jne
js,pt
ds
aam
imul
push
js
mov
call
sbb
out
dec
push
pop
scas
xor
add
xchg
popa
mov
out
lret
mov
mov
add
jo
pop
ja
call
scas
jecxz
cld
popf
mov
pop
ja
cwtl
adc
out
shlb
xlat
sahf
idivl
ja
into
xchg
sbb
out
lock
lock
push
adc
out
jo
push
jno
pop
js
push
mov
jo
pop
xchg
jae
test
pop
fcomp
popa
mov
cmpsb
dec
jl
in
xchg
add
xchg
ret
loop
cs
mov
jl
jnp
or
jns
jnp
xchg
out
cwtl
push
inc
data16
cli
jns
icebp
add
xor
out
sahf
out
pusha
jb
nop
sahf
out
sahf
mov
cmp
jecxz
clc
adc
push
pusha
jbe
cmp
pause
lods
mov
cmp
call
xor
out
sahf
inc
push
pop
outsb
xchg
out
mov
div
cmp
jecxz
ja
xor
js
iret
bound
jb
ja
repz
mov
call
out
push
and
dec
fs
out
jp
pushf
test
into
repz
jns
sub
js
iret
cmp
jp
mov
iret
repz
mov
sahf
out
cmp
or
and
xchg
push
fs
adc
push
jecxz
mov
ret
and
out
or
mov
je
adc
or
add
sahf
adc
xchg
adc
movsl
add
mov
push
xor
xor
fs
inc
mov
dec
outsl
fs
inc
or
insb
gs
imul
add
in
enter
or
dec
inc
jns
gs
outsl
push
adc
mov
popa
jb
mov
jnp
push
jo
add
gs
popa
outsb
or
je
add
or
aad
add
test
push
jae
arpl
imul
jae
cmp
addr16
lret
rcrl
sbb
push
gs
js
pop
and
mov
aam
add
push
imul
hlt
sub
push
es
jo
dec
jns
pop
jle
mov
mov
enter
push
cmp
add
sub
out
add
lret
or
add
arpl
movsb
pop
push
xchg
mov
add
mov
xor
pusha
sarl
mov
cmpsb
je
mov
mov
outsl
addr16
mov
jns
insl
inc
imul
sbb
clc
or
push
data16
jmp
fisubrs
xchg
push
cmc
mov
jno
sub
enter
add
sbb
vunpckhps
fwait
mov
js
imulb
shr
shlb
push
adc
gs
mov
and
cmp
movsl
insb
and
ds
add
xchg
xor
or
dec
dec
int
das
imul
add
xchg
lahf
addr16
cmp
ds
bound
sbb
xor
imul
into
add
rol
xchg
cmc
cld
dec
push
test
add
inc
sub
rclb
jp
mov
pop
inc
xchg
icebp
inc
shlb
mov
stos
pop
jecxz
inc
je
insl
and
mov
xlat
jmp
fmull
hlt
fstl
mov
push
outsb
cld
js
mov
dec
iret
mov
mov
add
pusha
mov
gs
data16
push
gs
push
das
push
data16
push
leave
jno
jbe
push
stc
xor
xor
cltd
mov
mov
push
push
add
xchg
int
enter
call
popf
iret
add
cld
into
jae
jb
xchg
inc
mov
loop
clc
sub
xor
pushf
inc
popf
mov
sub
add
das
fsubl
lcall
cwtl
cwtl
cmp
jecxz
add
jp
int
in
push
xchg
push
les
cmp
dec
js
in
leave
inc
fwait
jo
pushf
pop
outsl
jbe
scas
jmp
arpl
call
es
mov
xchg
jne
insb
inc
mov
jl
popa
nop
ja
sbb
fsubl
inc
leave
test
xor
cmp
es
push
push
gs
push
mov
fistl
es
xor
xchg
outsl
addr16
jb
test
and
pop
jmp
int3
cmc
outsb
arpl
jnp
adc
xchg
les
mulb
jmp
jnp
mov
xor
xchg
pushf
and
xlat
ss
xor
adc
cli
pop
cltd
clc
test
jne
cmp
stc
push
add
sbb
mov
dec
mov
cmp
xchg
add
int3
mov
gs
cmp
jmp
push
lret
outsl
jns
pushf
jp
mov
mov
push
push
inc
fwait
push
daa
repnz
jae
shrb
xor
push
int3
mov
xor
inc
xor
xchg
xor
add
mov
pop
push
mov
xor
aaa
mov
xor
xor
popf
push
fidivrl
nop
out
std
mov
push
out
sti
icebp
or
into
xor
in
lss
movsl
js
and
cmpsb
scas
daa
jno
lea
out
push
ljmp
jg
ds
dec
mov
xor
nop
adcl
add
sahf
enter
mov
push
inc
jne
pop
push
fldl
inc
xor
aaa
add
pop
jmp
loop
push
fistl
std
lcall
add
pop
imul
popa
pop
aam
and
cs
and
jl
inc
imul
pop
sub
sub
add
sub
das
xor
sbb
pop
and
inc
ss
imul
jp
push
jo
das
das
cmp
add
add
adc
add
adc
cmc
sub
scas
xlat
mov
add
jmp
pop
dec
xor
mov
xorb
loop
rcr
and
jmp
cltd
cwtl
push
add
add
imul
xor
fsts
movsl
lcall
add
mov
lea
adc
imul
shrb
xchg
rol
pop
popf
fdivrl
adc
add
adc
mov
lcall
test
push
xor
js
or
sbbb
xchg
adc
lcall
ficompl
into
gs
jns
or
repz
lock
mov
pusha
repz
repz
imul
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
push
shl
sbb
adc
inc
xchg
test
jnp
adc
mov
add
pop
fbstp
leave
iret
lret
repnz
pop
fisubs
inc
stc
push
movsl
jge
pusha
add
xor
enter
sbb
jnp
pop
jno
or
shlb
idiv
fdivr
std
jmp
ljmp
adc
in
cld
add
sub
fcomps
cltd
aad
clc
std
aad
sti
mov
clc
jmp
out
ljmp
adc
sbb
repnz
sti
lock
lock
clc
cli
jmp
sarb
dec
dec
dec
push
dec
push
adc
addr16
lcall
loopne
bound
jne
jae
test
jae
in
sub
fs
arpl
cmp
inc
arpl
dec
cmc
jne
sarb
pop
push
mov
jnp
jno
aad
jg
shlb
jbe
xlat
mov
cmp
xor
insl
rcrb
out
std
scas
pop
pusha
roll
ja
sahf
pushf
lods
jle
ja
jbe
cmpsb
jo
push
es
outsb
gs
mov
mov
mov
pushf
or
in
arpl
jo
shll
dec
or
mov
push
imul
cmp
movsl
gs
and
sbb
gs
push
cmp
sbb
test
jg
and
sub
leave
mov
hlt
je
push
dec
xchg
sarb
hlt
pop
xchg
push
sbb
cs
jae
sub
xor
outsl
pop
mov
add
mov
jp
push
or
push
mov
out
mov
xor
rorl
or
imul
push
dec
push
mov
inc
add
mov
mov
dec
jg
push
lods
imul
shll
inc
add
mov
push
rcll
call
dec
mov
jecxz
dec
cmpsb
in
imul
add
add
add
and
std
int3
inc
fs
mov
je
xchg
shlb
or
out
jl
add
icebp
sub
adc
outsb
and
push
jb
inc
push
inc
add
push
repz
test
or
pusha
add
xor
dec
inc
mov
mov
cmp
xor
loope
jb
add
or
sarb
enter
inc
xlat
fcoms
mov
add
int
fs
pop
mov
stos
add
cmpsb
movsb
lods
lcall
cmp
pop
nop
inc
aam
out
and
sbb
cld
ficoml
mov
and
ljmp
xchg
cmc
dec
data16
xchg
add
sbb
cmp
js
or
mov
int
fcomps
xchg
cwtl
dec
rclb
test
xor
lods
imul
sbb
mov
inc
adc
out
jne
sarb
call
je
lds
add
inc
add
cltd
icebp
mov
jp
fcmove
pop
mov
mov
ficoml
and
or
iret
sub
pop
cmp
sub
cs
mov
test
push
fs
xchg
cmp
mov
dec
jmp
xor
add
mov
jge
add
iret
pusha
outsl
add
movsb
imul
sub
incl
mov
mov
arpl
testb
xchg
mov
sarb
movsl
int3
loopne
jg
and
xor
js
bnd
int3
mov
mov
fisttps
push
in
dec
add
push
inc
push
push
sbb
orb
sbb
icebp
and
push
rcll
xor
fstps
push
dec
adc
pop
gs
ret
sub
rcrb
pop
xor
inc
cmpl
js
push
out
mov
pop
inc
add
leave
aas
pop
xchg
sti
stos
stc
mov
es
xor
dec
out
in
inc
popa
pop
adc
out
popa
push
mov
adc
jl
mov
ja
mov
add
cld
ja
dec
dec
push
dec
push
inc
inc
pop
and
pop
lcall
bound
add
sarl
dec
ret
ljmp
cmp
inc
sub
pop
dec
and
out
bound
jno
das
adc
fsts
rolb
jnp
icebp
jae
push
dec
fadds
mov
adc
andb
sbb
jae
pop
or
icebp
iretw
xchg
sbb
flds
add
add
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
sbb
adc
mov
jne
adc
mov
out
add
mov
lds
add
leave
adc
add
test
cwtl
xor
test
test
lret
data16
test
add
add
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
add
xchg
pop
push
xchg
lcall
in
jle
adc
mov
xchg
shl
xor
pop
test
add
add
mov
add
pop
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
je
mov
jne
xor
jle
pop
loopne
fdivrl
jmp
popf
xchg
push
or
xchg
adc
xchg
aas
scas
ret
push
pushf
repnz
iret
ds
jne
sbb
push
imul
hlt
pop
popf
iret
imul
decl
out
cmp
jns
mov
adc
jge
bound
push
std
cwtl
shlb
insl
nop
jge
cltd
or
jo
call
inc
jb
push
enter
popf
bound
add
dec
inc
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
mov
je
add
dec
or
push
mov
push
xchg
jae
push
pusha
pop
push
imul
jne
xor
mov
popa
dec
xor
lahf
jae
add
dec
push
and
xor
in
push
pop
inc
cmp
adc
add
add
or
shll
aam
imul
sbbl
loopne
mov
push
push
add
lods
sahf
or
add
push
hlt
stos
xor
push
jb
fsubp
jb
add
outsb
in
xor
fimull
and
popf
ja
push
lahf
add
lret
cmp
xchg
inc
inc
push
shll
call
loopne
add
add
sbbl
dec
sbb
scas
xor
mov
inc
jne
jmp
popa
scas
or
adc
insl
inc
arpl
push
add
add
inc
shlb
jecxz
mov
or
add
fsubl
sbb
push
insb
aaa
inc
loop
add
es
fsts
add
insb
xchg
lds
pushf
and
push
dec
mov
push
dec
push
rcll
or
pop
pop
cmp
jmp
addb
idivl
sub
cmp
idivl
fwait
test
rorb
cmc
mov
sarl
or
xchg
daa
mov
xlat
and
jbe
or
daa
inc
mov
add
test
or
xchg
pop
test
jo
push
jg
sbb
test
imul
clc
sbb
lea
and
nop
sbb
inc
or
and
ret
mov
sbb
call
or
lods
or
psubusb
add
paddd
frstor
jns
or
pop
cli
insb
setbe
popf
jmp
sbb
lods
mov
add
and
push
inc
cmpsl
and
pop
jne
bound
mov
insb
pop
aam
lea
divl
mov
xorl
popa
jo
imul
adc
jbe
or
add
pop
mov
stc
push
dec
mov
fnstsw
jne
nop
mov
daa
jmp
stos
mov
arpl
jbe
movsl
sub
jmp
out
jg
cli
out
adcl
inc
cmp
int
clc
andps
daa
sbb
lock
ds
aaa
adc
sahf
mov
jae
popa
outsb
add
inc
and
inc
inc
inc
inc
or
inc
inc
inc
jo
int
add
adc
inc
inc
inc
dec
dec
dec
dec
and
fisttpll
push
push
push
push
push
or
add
pop
pop
pop
popa
bound
gs
imul
jo
test
add
jne
ja
jns
xor
inc
cmp
xor
sub
fiaddl
cmp
nop
mov
in
ss
call
lret
pop
add
push
call
mov
aas
cli
xchg
mov
sub
xor
and
xor
sahf
add
mov
add
imul
pop
sub
sub
pusha
orb
lea
subl
add
add
arpl
add
out
dec
adc
and
xor
hlt
ret
xor
xor
dec
fwait
inc
pushf
mov
add
mov
mov
repz
nop
cmp
adc
pop
popa
ret
pusha
mov
push
pushf
or
push
inc
jg
add
sbb
add
add
jmp
mov
cmp
je
mov
jmp
cmp
testb
add
or
mov
pop
jo
sbb
push
pop
out
adc
sub
orb
add
sub
add
mov
add
jecxz
dec
mov
add
cmpsl
pusha
mov
lods
outsb
push
add
or
mov
jne
and
mov
lahf
sbb
sbb
and
test
sub
or
cmpsb
jns
repnz
sbb
out
mov
cmpsl
sbbl
test
lret
sbbb
push
ficoml
jecxz,pn
or
sbb
mov
adc
xor
sbbb
push
mov
fiadds
add
les
add
mulb
jmp
push
decb
out
out
cld
lea
add
push
sub
add
pusha
icebp
mov
pop
push
nop
rclb
ljmp
das
arpl
cmp
cmc
add
dec
lock
insb
inc
sub
popa
push
and
les
sub
pop
jbe
sub
push
add
sub
mov
insl
and
into
cs
sub
push
daa
push
and
divl
add
add
push
inc
push
cmp
shll
jge
push
push
add
ret
push
dec
inc
mov
push
push
xchg
mov
mov
mov
and
cmp
mov
ror
sbb
xor
cli
bswap
cld
or
stos
mov
push
fs
adc
mov
arpl
ja
or
add
cmpsl
test
xor
outsb
je
lahf
out
out
inc
fbld
xchg
xchg
add
mov
or
push
in
push
xchg
add
xor
test
pop
jl
imul
cmp
sbb
aam
xor
fnstenv
icebp
daa
xchg
cwtl
pop
popf
ljmp
xor
and
xorb
dec
js
jne
mov
sbb
cmp
sub
int3
or
push
inc
push
jecxz
fcomip
inc
inc
pop
jbe
imul
sub
dec
xor
cmp
xor
jb
shll
out
pop
inc
cwtl
cmp
arpl
sbbb
clc
and
add
sbb
and
std
jbe
lahf
imul
or
inc
push
xor
fs
push
pop
push
popa
out
jbe
fs
inc
add
xor
xor
xor
mov
ret
cmp
mov
cmp
or
pop
imul
shr
shl
mov
mov
push
jle
cwtl
add
adcb
loop
push
push
push
mov
dec
cmpb
dec
xor
inc
cmpsl
loope
in
pop
nop
mov
lea
sbb
push
cmp
hlt
scas
subl
cmp
shrl
xor
cmp
xor
rolb
je
ss
xor
push
clc
pusha
jmp
pop
push
ret
add
inc
stc
add
add
push
pop
test
add
xor
inc
add
add
ret
shl
shr
xor
add
sub
add
daa
add
pop
add
loopne
add
inc
xor
xchg
lods
mov
cmp
and
icebp
into
test
mov
mov
mov
fdiv
mov
and
jns
jns
inc
adc
cmp
js
mov
pop
stos
sub
ja
inc
out
negl
add
or
repz
hlt
mov
jecxz
out
int3
fnstsw
repnz
mov
nop
mov
cmp
cmp
push
jecxz
or
gs
addr16
jge
out
mov
scas
js
in
mov
rcl
sarb
mov
mov
mov
mov
fld
cmp
iret
mov
out
out
imul
mov
int3
sahf
aad
into
cmp
xchg
mov
mov
js
pop
mov
rolb
cmp
or
mov
popf
inc
in
mov
mov
mov
pop
inc
rcrb
js
test
insb
dec
push
ja
out
push
or
cmp
ja
ja
and
or
cmp
mov
sbb
sub
sub
jns
repz
pushl
repz
mov
jo
out
xor
icebp
mov
xor
jns
test
mov
jo
push
cmp
out
cmp
lahf
or
jg
fdivrs
lock
cld
nop
mov
clc
ret
pop
incb
mov
jg
lock
mov
lock
mov
mov
clc
ret
pop
fs
mov
mov
cld
loope
adc
shl
xchg
cmp
mov
mov
mov
mov
lret
jecxz
mov
cmp
shll
push
mov
ret
pop
pop
cmp
mov
dec
loop
cmp
or
xchg
adc
dec
aas
jecxz
or
add
push
push
xor
inc
jb
insl
and
popa
push
push
jns
xor
fldenv
xor
stc
pop
lret
out
xor
in
divb
xor
cmc
mov
add
popa
loopne
outsl
push
and
dec
jecxz
test
inc
ss
mov
imul
es
xor
add
cmc
xor
maskmovq
idivl
xor
xor
mov
aaa
ss
mov
iret
sti
mov
pop
mov
mov
cmp
ss
popf
fbstp
cwtl
xor
jp
jns
idivl
lahf
divl
lahf
idivl
jae
jae
lahf
idivl
jae
idivl
divl
popf
idivl
jae
jae
popf
jae
jae
stc
popf
fbstp
popf
popf
jae
jae
dec
mov
and
scas
xor
jp
aad
repz
repz
xor
out
repz
cmp
out
repz
ss
xor
xor
repz
xor
jle
ja
cmp
ja
out
aaa
ss
xor
jne
insl
push
mov
add
xchg
inc
inc
push
and
push
xor
mov
int
insb
jns
aad
xor
lcall
dec
xchg
popf
xlat
jns
aaa
ss
xor
xor
jns
xlat
xor
cmpsl
fcmovnu
and
jmp
into
cmp
ss
xor
cli
mov
aad
cltd
sbb
sub
in
scas
add
mov
clc
sub
sub
sub
add
xlat
cwtl
sar
imul
adc
cwtl
idivb
ret
clc
jle
pop
cwtl
les
jae
call
bound
push
sbb
inc
mov
insl
adc
mov
xchg
jmp
popa
or
dec
cmp
inc
mov
mov
inc
outsb
je
out
dec
dec
push
pop
aas
fimuls
ret
addb
add
cmp
pop
mov
inc
lret
push
sbb
sti
in
jns
xor
aas
leave
test
pop
mov
sti
mov
add
sub
inc
testb
iret
cmp
jns
xlat
xchg
lods
pusha
mov
imul
shrl
push
xor
cld
icebp
cld
mov
shlb
dec
dec
popf
das
lock
cld
mov
les
loopne
push
aad
outsb
and
push
mov
out
mov
xor
inc
in
jns
mov
cmp
inc
xchg
jo
out
or
inc
push
cwtl
mov
pop
je
je
jb
cmp
mov
mov
mov
lret
mov
and
dec
add
jo
jo
push
dec
push
xchg
mov
jmp
jno
inc
mov
cli
mov
lahf
movsb
insb
inc
enter
xchg
push
dec
inc
cmp
pushl
adc
xrelease
and
ja
add
push
sbb
or
roll
imul
xor
je
lods
xchg
inc
hlt
into
add
and
jne
aaa
pop
inc
xchg
lds
sti
ret
push
push
mov
into
pop
inc
sub
pushf
add
ss
pop
adc
cld
xor
loopne
dec
je
jg
sti
mov
dec
inc
xchg
jbe
je
and
cmp
adc
repz
outsb
xor
sbb
insl
movsb
int
and
shll
ljmp
jle
mov
std
aam
push
xchg
inc
pushf
cmp
add
xchg
testb
insl
and
addb
insb
cmp
bt
xlat
sub
sbb
inc
inc
dec
test
les
and
jbe
arpl
loope
xor
mov
adc
mov
pop
adc
inc
popa
mov
adc
pop
imul
jae
sub
xchg
cmp
cs
push
cltd
jp
addr16
insb
dec
dec
pushf
inc
outsl
outsb
pop
and
push
je
pop
cs
xlat
xlat
push
push
out
jp
sbb
repnz
push
je
cmpsl
rclb
push
es
jae
xorl
fdivl
mov
push
ficoms
adc
jae
push
push
xchg
jne
int3
shll
xor
sahf
cs
mov
push
pop
fiadds
inc
pop
and
adcb
add
jae
data16
pop
cs
mov
cwtl
fldln2
inc
sbb
repz
mov
arpl
mov
pop
fcoml
ret
add
ret
adc
lret
les
and
xor
mov
cmp
or
dec
inc
push
and
shlb
into
xlat
lret
lods
rcrb
sbb
cmpb
add
or
inc
inc
dec
inc
cwtl
out
jns
je
lods
push
pop
cmp
or
add
or
cwtl
fiadds
nop
js
lds
imul
inc
xor
clc
lock
repz
fstp
jno
ljmp
stc
out
js
dec
or
jno
sahf
hlt
faddl
enter
push
xchg
sarl
sbb
pop
cld
add
fcmovnbe
add
jecxz
iret
iret
mov
aas
lock
lock
fiaddl
push
sbb
fnstcw
aas
lock
lock
iret
add
fdivs
lcall
cld
xlat
cld
clc
ret
mov
ret
pop
aas
or
pushf
xchg
cmp
xor
enter
lock
aad
fs
iret
iret
xor
aam
aam
aas
aas
mov
push
push
sbb
testl
rcrl
insb
push
clc
jecxz
lahf
xor
in
rcl
cmp
mov
rcrb
fs
adc
repz
ror
mov
xchg
rorl
jns
fs
xor
jb
ds
clc
shl
push
push
dec
and
jns
cmp
dec
gs
and
out
dec
imul
mov
cwtl
cwtl
add
outsb
add
add
jnp
mov
push
cli
loop
das
hlt
movsl
mov
sub
add
outsb
ja
arpl
movsb
aas
adc
add
jmp
mov
push
je
or
pop
pop
rorl
je
push
dec
push
dec
pop
lret
out
insl
je
ja
add
gs
jo
cmp
mov
jae
lods
out
les
insb
fs
imul
outsb
dec
dec
and
and
dec
gs
daa
arpl
orb
xchg
push
and
jge
push
push
inc
fnsave
dec
movsb
leave
fcompl
movsb
sub
popf
divl
xchg
imul
dec
jne
pop
mov
and
pop
inc
push
jmp
inc
nop
add
das
call
int
mov
fdivl
mov
push
adcb
sub
push
and
push
mov
outsb
mov
aam
push
es
push
divb
loope
xor
loopne
std
sti
cld
ret
aad
fistpll
imul
aam
loope
push
cmp
xchg
inc
outsb
hlt
sbb
shlb
adc
jbe
mov
aas
push
dec
or
test
and
inc
shlb
push
inc
push
inc
dec
push
dec
push
gs
inc
dec
inc
popa
adc
enter
dec
movsl
scas
mov
xchg
outsb
sbb
adc
arpl
iret
and
xchg
jge
jae
jp
mov
pop
arpl
repz
dec
dec
pop
ljmp
fistps
mov
xor
inc
inc
fdivrl
lahf
inc
cmpsl
xorb
xor
nop
outsl
addr16
out
lea
and
sub
cmp
inc
fldt
es
jg
inc
dec
inc
push
pop
orb
jp
stos
pop
negl
jne
test
cwtl
leave
cmp
push
mov
mov
jg
xor
xor
ret
and
push
jne
jae
imul
xchg
lahf
lods
dec
outsb
mov
cmpb
enter
inc
mov
xchg
mov
mov
pop
lahf
pop
aad
dec
outsb
ret
inc
inc
jb
jg
pop
adc
cmpsb
lahf
cmc
stos
pushl
test
das
jecxz
insb
jge
xor
and
inc
ss
mov
cmc
in
in
into
adc
insb
lods
mov
imul
sub
jae
popf
mov
icebp
mov
data16
les
out
fistpl
outsl
lret
inc
popf
test
xor
imul
lret
jb
pop
push
cmp
fnstcw
mov
imul
das
xchg
and
or
adc
data16
les
adc
outsb
in
dec
xlat
sbb
mov
xor
xchg
jp
test
jmp
inc
dec
pop
mov
popf
cmc
mov
xchg
test
popa
push
adc
nop
jecxz
inc
je
push
dec
and
je
dec
outsl
popf
add
imul
dec
xchg
lods
ret
sbb
imul
lret
dec
inc
dec
sub
clc
add
jmp
or
js
fstpt
add
leave
sbb
repnz
insb
push
push
xchg
sbb
cs
mov
push
arpl
xor
adc
addr16
add
jo
push
repz
xchg
jecxz
or
inc
pop
iret
sub
sahf
in
fs
dec
leave
fwait
sarl
pop
mov
dec
jle
pop
dec
or
and
pushf
cmc
imul
test
outsb
data16
xor
in
xchg
xchg
inc
adc
jns
mov
int3
dec
xor
shrb
imul
sbb
cmpsb
in
adc
dec
popa
imul
dec
leave
jb
inc
or
xor
mov
out
bound
jns
and
test
jbe
xchg
test
dec
outsl
push
lods
loop
sbb
inc
inc
in
lea
xchg
dec
sub
data16
inc
in
push
popa
pop
or
sahf
xchg
inc
jne
in
mov
lret
ljmp
cld
insb
sahf
divl
addb
inc
sahf
sub
leave
jl
cmp
jb
int3
mov
push
leave
and
out
add
or
sub
insb
pop
mov
jg
setnp
mov
jb
mov
mov
inc
and
aad
ret
inc
leave
int
fsts
es
and
inc
in
cmc
mov
pop
inc
sub
fimuls
adc
lea
je
fisubl
lcall
push
fdivrs
daa
fiaddl
mov
push
xor
pop
mov
ret
int3
xor
int3
add
or
dec
adc
inc
and
adc
push
cs
xor
outsb
daa
leave
cs
js
popa
bound
out
in
push
adc
arpl
mov
sets
fildll
mov
sbb
fbld
ret
mov
mov
sub
or
jne
jns
inc
sbb
notb
inc
mov
cmp
inc
ja,pt
insb
jb
push
or
inc
das
fcomp
sbb
mov
shlb
or
jae
pop
lret
insl
outsl
push
xlat
addb
jns
test
sarb
dec
inc
inc
dec
xchg
sbb
dec
outsb
test
dec
push
mov
jo
jnp
in
dec
sbb
dec
test
in
push
adc
popa
add
xor
and
adc
jp,pn
shll
mov
loop
ds
stc
outsl
and
stc
fimuls
inc
imul
and
sub
push
dec
push
jae
push
adc
xor
enter
sbb
dec
fs
jge
cmpsl
fs
out
clc
ret
or
repz
popa
inc
aam
out
repnz
dec
out
push
pop
inc
and
dec
mov
mov
dec
gs
fildll
fs
push
nop
add
pop
mov
gs
lea
adc
mov
push
mov
pop
sub
xor
enter
inc
cli
sarb
outsl
mov
push
mov
fdivs
in
jns
cmp
loop
pop
inc
inc
nop
pop
push
sbb
imul
push
jo
xchg
jecxz
fwait
cmp
imul
ficoml
imul
push
push
cmp
and
gs
in
int3
adc
cmp
xor
pop
dec
lock
xor
mov
bound
and
dec
insl
outsb
xor
dec
cs
sub
mov
push
adc
test
test
xchg
jecxz
and
cmpsb
fwait
push
lea
adc
fnstcw
push
dec
xor
xchg
push
add
xor
cwtl
jb
push
jne
aaa
pop
dec
lret
dec
dec
mov
mov
xor
jno
pop
dec
leave
pop
or
out
xchg
or
mov
test
cmpsb
or
mov
push
insl
mov
mov
push
mov
shll
fimull
inc
dec
dec
imull
stos
pop
jecxz
add
inc
dec
jns
jg
or
jo
inc
adc
xor
or
push
inc
sub
or
push
xchg
movsb
pop
jl
lods
inc
xor
mov
loopne
jno
das
inc
mov
cmpsb
adc
add
mov
leave
adc
xlat
sub
stos
sbb
add
lret
adc
or
push
mov
add
stos
jns
imul
ja
out
pop
push
jb
xchg
aaa
sbb
lea
xor
scas
out
add
and
mov
mov
mov
lcall
popf
or
xor
cmpsl
inc
rcrl
int
inc
scas
jns
xor
xor
dec
push
push
jne
jne
mov
jno
lds
mov
subb
lds
test
sub
sub
sbb
or
add
enter
push
in
aaa
and
jae
adc
inc
fistpl
xorb
dec
sti
jb
cmpsb
out
dec
push
into
aam
xor
popf
es
cmpsl
loope
pop
inc
inc
push
pop
push
and
mov
and
and
imul
sbb
and
cmpsb
cmpsl
lods
and
rolb
pop
add
inc
je
jecxz
inc
push
pop
xor
outsl
inc
scas
in
cmpl
imul
xor
sbb
addl
cmp
jno
or
xor
cmp
xor
inc
pop
fbld
xor
jno
shrl
fwait
xchg
test
cwtl
sub
dec
xor
je
jbe
cwtl
pop
push
jmp
insl
aad
xorl
dec
push
sub
cld
insl
jns
fistl
out
daa
mov
arpl
insb
inc
or
dec
sub
push
sub
adc
nop
js
popa
pop
pop
pop
stos
cmp
repnz
popa
idivb
dec
sub
dec
je
and
out
inc
jo
ss
push
popa
cmp
es
mov
dec
push
aad
adc
cltd
sub
mov
outsb
add
jae
sub
lods
arpl
aad
fwait
jno
sti
fimuls
mov
cmp
sbb
and
mov
add
jns
fbstp
mov
leave
dec
sbb
js
das
push
push
enter
mov
adc
hlt
enter
cmpl
inc
jb
pusha
imul
adc
push
iret
cmp
fs
lods
add
push
push
dec
dec
push
push
or
cmp
cmp
xchg
jbe
test
das
or
out
inc
inc
dec
inc
imul
inc
pop
lea
ds
jg
out
push
testb
lcall
and
xchg
lea
aam
repnz
popa
inc
push
dec
loopne
lcall
and
jmp
dec
inc
stos
dec
nop
ret
jns
in
imul
mov
add
xchg
nop
inc
or
xor
jae,pn
out
test
jmp
lods
mov
ja
fsub
in
inc
push
sub
jae
fisttpll
ja
xor
sahf
adc
mov
push
test
mov
and
push
pusha
add
outsb
sti
mov
dec
insb
and
outsb
mov
cld
push
sub
sbb
cmp
cs
packssdw
test
push
xor
push
iret
lahf
aam
inc
pop
movsb
and
jge
popa
data16
jmp
mov
fnstsw
pop
push
mov
jb
adc
xor
movsb
dec
adc
jmp
ret
loopne
push
and
repz
xor
and
jo
movl
dec
push
mov
xchg
dec
fidivs
xlat
movsb
out
xor
pop
mov
or
test
outsb
xor
push
mov
loop
pop
dec
inc
dec
push
movsl
shr
adcb
push
pop
rcll
cs
dec
jo
in
dec
or
popf
lret
add
and
sub
sarb
mov
push
in
dec
jae,pn
je
es
jae
mov
sbb
mov
xchg
aaa
std
jbe
push
cwtl
mov
dec
push
mov
aam
adcb
stc
cmpsb
jg
and
push
fcoml
cmp
pop
push
mov
sbb
push
and
jo
arpl
inc
xor
arpl
ret
pop
jbe
cltd
xor
mov
mov
jae
pop
cwtl
test
je
out
lds
pop
jne
pop
lds
pop
pop
or
mov
into
pop
mov
pop
cmpl
jns
sbb
mov
pop
icebp
icebp
mov
jp
xor
icebp
icebp
fnstcw
xor
ret
mov
mov
xor
xor
sub
xchg
enter
jl
xor
jne
push
xor
push
jne
ss
aaa
aaa
jne
push
jne
cmp
sub
jne
push
cmp
sub
sub
test
mov
shrb
sub
lret
push
scas
pop
arpl
outsb
sbb
cmp
filds
add
rcll
push
add
mov
inc
arpl
push
rcll
pop
or
push
je
mov
push
je
scas
pushf
mull
pop
add
out
movsb
xchg
into
xchg
repz
int3
repnz
imul
outsl
stc
pop
inc
movl
out
add
lcall
push
fnstsw
xchg
inc
and
cmp
mov
je
mov
inc
mov
xchg
lds
inc
data16
outsb
push
mov
mov
scas
stos
xor
lret
imul
add
lcall
cmpsl
sub
add
cmp
test
repz
daa
and
jno
bnd
pop
pop
cmp
push
push
rcll
inc
push
mov
add
sbb
mov
dec
mov
pop
push
insl
dec
aam
jns
mov
lods
pusha
mov
lcall
jl
fcompl
icebp
inc
cmp
pop
inc
dec
pop
loop
dec
sbb
jb
dec
sahf
mov
int3
and
mull
xchg
add
sbb
pop
pushf
ret
mov
shl
outsb
add
dec
dec
inc
shlb
pop
pop
add
and
push
pop
aaa
gs
scas
adc
pop
add
sub
add
pop
mov
gs
insb
xchg
inc
push
xor
add
inc
inc
push
pop
sbb
fmuls
rol
push
inc
in
and
pop
pop
add
push
imul
ret
dec
jge
imul
mov
sub
test
mov
enter
mov
pusha
xor
out
mov
xor
jo
arpl
into
into
sbb
pop
aam
xor
data16
mov
sbb
shrl
out
imul
xchg
mov
out
pop
dec
inc
pop
sbb
test
and
sbbl
enter
int
add
adc
sbb
push
loop
mov
xor
fs
xlat
out
dec
test
repz
xchg
loop
loop
adc
mov
jmp
inc
pop
mov
rolb
das
roll
in
popa
jbe
insl
and
push
cltd
iret
test
les
xchg
inc
add
mov
mov
lods
imull
xchg
cmpsb
dec
push
leave
iret
lods
cmpsl
mov
mov
xchg
inc
arpl
dec
dec
outsl
dec
xchg
test
sahf
iret
and
jae
xor
push
repnz
push
addl
xor
clc
scas
xchg
inc
inc
imul
dec
sbbb
cmpsb
orb
add
xor
mov
fsubs
adcl
imulb
jo
cmc
into
subb
jae
xchg
xor
lcall
cli
or
mov
mov
fs
dec
mov
test
ja
jl
pop
and
cmp
sub
insl
insl
pop
into
jmp
xchg
lret
push
dec
inc
inc
and
pop
into
mov
xchg
sub
bound
fucomp
add
fisubrl
add
rcrb
outsb
mov
xchg
jle
dec
arpl
pop
inc
adc
into
xchg
or
or
mov
dec
outsl
jp
popa
das
xor
push
sbb
pop
scas
sub
imul
adc
jmp
jb
sti
add
push
jb
inc
mov
mov
lcall
repnz
jmp
dec
repz
pop
mov
aam
inc
xchg
jae
or
adc
icebp
imul
add
push
push
or
bound
jg
loop
iret
lods
cmp
andb
pushf
add
jb
xchg
sub
pop
inc
stos
mov
xlat
pop
jle
je
xchg
pushf
outsb
cmp
push
mov
stc
loope
insb
jae
fadd
lea
cs
hlt
popa
dec
ss
in
decb
pop
jbe
inc
mov
mov
sub
dec
shlb
pop
pop
inc
inc
dec
jae
int
push
mov
push
arpl
inc
idivb
inc
adc
pushf
rclb
loop
cltd
add
movsl
jno
add
je
es
ficomps
inc
inc
push
out
xor
jb
shlb
jbe
les
popf
push
aas
sahf
mov
jnp
loop
popa
or
inc
pop
movsb
mov
dec
jae
push
mov
ret
test
sub
sbb
shll
inc
push
ret
push
cmpsl
cmpsl
push
out
pop
mov
mov
inc
scas
aaa
out
jae
mov
xor
inc
dec
into
dec
mov
push
daa
push
imul
mov
mov
cmp
mov
xor
cmp
push
jecxz
xor
lahf
es
push
pop
cwtl
jae
inc
js
mov
xor
out
mov
out
outsl
or
js
lcall
sbb
je
xchg
cmpsl
jne
dec
push
gs
aam
ds
cmpsb
cs
into
push
je
pop
push
das
js
jae
shlb
bound
outsb
incl
fisubl
lret
inc
popa
es
daa
sahf
add
xchg
jb
add
out
mov
das
add
popa
sub
repnz
jb
mov
pop
adc
push
int3
mov
in
adc
mov
fadds
add
dec
push
sarb
out
roll
imul
xor
and
adc
inc
and
lcall
mov
js
stos
xorl
inc
adcb
outsb
push
jbe
mov
jnp
mov
loope
and
fwait
pop
roll
fdivrl
xchg
test
nop
xchg
xchg
push
leave
mov
in
mov
jo
dec
push
shl
into
jbe
cltd
push
out
cmp
mov
push
or
mov
push
daa
je
cli
inc
xor
out
das
pop
decl
cmp
mov
jae
sub
loope
insl
dec
push
dec
popl
dec
mov
int3
dec
and
mov
icebp
and
mov
and
arpl
mov
dec
data16
and
sbb
test
add
imul
outsl
ret
fwait
daa
pop
jae
mov
and
push
insb
push
fs
repnz
int3
fiaddl
pop
push
sahf
lahf
out
dec
inc
cmp
out
jle
sub
add
mov
jns
add
cld
add
popa
out
or
add
sub
mov
jae
xchg
test
test
dec
outsb
enter
out
dec
cmp
repz
stos
pop
mov
lea
fs
push
and
adc
dec
adcb
push
nop
lret
push
mov
int
sarl
in
dec
icebp
jg
ja
push
movsl
sarb
outsb
movsb
add
cmpsb
adc
adc
enter
in
dec
call
jae
imul
les
pop
cmpsb
sbb
push
jmp
bound
lret
mov
xchg
cld
insl
fidivs
sbb
popa
sub
lret
in
push
jp
sub
cmp
shll
gs
cmc
dec
xor
dec
call
xchg
cmc
sub
mov
push
hlt
jbe
jno
fiadds
movsl
fistl
xchg
jbe
inc
bound
or
mov
inc
xchg
jae
mov
push
mov
mov
add
push
fbld
and
cmp
divb
les
cwtl
pop
fisubl
jb
ljmp
xorw
pop
inc
cwtl
fbld
repz
or
or
lret
bound
push
hlt
mov
shlb
movsl
xorb
daa
nop
add
push
jne
aaa
jbe
or
addr16
imul
cmpsb
push
scas
mov
xchg
mov
repz
add
popa
ja
jae
sub
lods
bound
fs
imul
cmp
push
or
mulb
out
stc
add
cmpsb
leave
adcb
fs
xor
cmp
mov
les
mov
jb
hlt
rol
cltd
jp
jmp
jb
push
mov
ret
aam
mov
ljmp
dec
enter
bound
jae
jge
std
aam
inc
jnp
scas
push
lods
mov
out
pop
gs
jae
in
lahf
push
jnp
push
xchg
jno
pusha
addl
jne
push
jl
test
push
cmp
xchg
in
or
test
pop
and
adc
testl
mov
fiaddl
jle
add
mov
subl
aam
outsl
or
add
sub
sub
pop
ss
jo
movsl
imul
inc
ret
pop
gs
mov
cmc
and
outsb
loope
loopne
lea
sub
shll
lret
push
cltd
jmp
je
cmp
fidivs
pop
xchg
mov
mov
dec
xchg
dec
lods
out
mov
cli
mov
dec
insb
mov
xlat
repnz
cmp
fucom
ds
push
inc
mov
sbb
popa
js
inc
or
gs
daa
pop
in
push
push
dec
jne
jns
lret
pop
sbb
push
jmp
mov
dec
xchg
push
dec
mov
shlb
lods
data16
leave
jp
outsb
stos
adc
cltd
movsb
dec
fisubrl
mov
insl
lcall
rcr
mov
lret
mov
jb
sahf
dec
mov
dec
mov
jmp
data16
push
xor
gs
ljmp
sbb
xchg
outsb
xchg
pop
ret
lret
rorb
push
pushf
xchg
orl
push
je
lods
push
mov
dec
mov
shrl
xor
mov
xor
pop
shl
shrb
mov
into
xchg
add
cmpsb
shlb
int3
pop
inc
mov
lods
lcall
xchg
popf
in
push
xlat
xor
dec
xchg
frstor
mulb
or
cmp
mov
pop
push
push
outsb
sub
bound
or
sarb
iret
or
sub
lds
jo
push
cs
popf
sbb
pop
loop
das
jbe
and
jae
inc
call
les
fs
and
adc
sbb
adc
push
shlb
adc
or
xchg
in
fs
xlat
nop
imul
mov
xchg
push
xor
cmp
or
xor
xchg
iret
jb
popf
fistpl
sbb
sbb
jnp
inc
push
cmc
xchg
arpl
pop
xchg
pop
dec
dec
imul
cli
fwait
sbbl
cmp
insl
in
mov
cmp
sbb
ds
mov
movsb
xor
dec
hlt
aam
sbb
dec
mov
enter
jns
pop
cmp
xorl
push
cmp
jg
xchg
and
cwtl
pop
leave
addr16
lea
xchg
push
dec
dec
inc
dec
jmp
dec
pop
ja
es
movsl
lahf
out
fwait
cmp
pop
push
inc
push
mov
jmp
sub
iret
jae
cmpb
add
cmp
repz
xor
or
jns
out
cmp
lods
out
sahf
out
cwtl
mov
jle
out
pop
dec
cmp
jns
jle
sbb
add
cmp
repz
call
cmp
repz
pushf
nop
xorb
cmp
repz
dec
inc
xor
jno
cmp
sbb
lock
stc
jns
out
enter
jns
sahf
out
je
pop
dec
out
sahf
out
sub
adc
iret
repz
clc
cmp
fmul
mov
mov
nop
test
cmp
repz
push
inc
xor
repz
and
adc
clc
cmp
jns
pop
call
sahf
out
sahf
movsb
xchg
mov
sahf
out
fs
dec
xor
sbb
cmp
out
cld
cmp
call
iret
int3
mov
xchg
loope
cmp
cmp
jo
sbb
cmp
dec
cmp
cmp
js
xchg
sub
sbb
or
lock
push
xchg
loope
aaa
aam
enter
cmp
loope
lods
aaa
cwtl
mov
iret
rep
pop
dec
cmp
out
cmp
and
clc
ss
loopne
out
sahf
rol
mov
pushf
jns
out
nop
test
pop
inc
out
sahf
out
sub
or
iret
repz
clc
xor
cmp
repz
mov
repz
repz
dec
inc
xor
icebp
cmp
and
add
xor
sahf
out
sahf
fmul
shlb
nop
test
stc
jns
out
cmp
and
repz
out
clc
xor
fmul
iret
repz
shlb
repz
je
pop
push
inc
repz
repz
adc
out
push
hlt
xor
aam
mov
mov
cmp
adc
clc
xor
repz
repz
mov
cmp
nop
test
pop
iret
repz
push
inc
xor
sbb
stc
jno
or
xor
loopne
sahf
out
sahf
enter
mov
out
xorb
inc
out
sahf
out
sub
or
iret
repz
hlt
das
call
iret
repz
lods
pushf
nop
test
iret
repz
dec
cmp
icebp
cmp
and
clc
cs
loopne
mov
nop
jns
out
test
push
inc
cmp
jns
out
and
clc
sub
call
cmp
repz
mov
cmp
repz
inc
xor
add
jns
in
rol
mov
sahf
out
sahf
xchg
mov
pusha
jle
out
push
inc
xor
sbb
jecxz
or
hlt
sub
fmul
repz
repz
repz
iret
js
dec
inc
xor
icebp
cmp
sub
cld
sub
sahf
out
sahf
loopne
mov
out
mov
push
inc
out
sahf
out
sub
or
repz
clc
sub
fmul
mov
mov
nop
xorb
cmp
repz
dec
cmp
out
sbb
adc
sub
rol
sahf
out
sahf
mov
pushf
nop
test
out
je
pop
push
inc
xor
jns
out
sbb
add
daa
iret
repz
in
shlb
mov
repz
repz
inc
xor
sbb
jno
iret
or
clc
es
loopne
out
sahf
aam
mov
out
pushf
nop
test
push
out
sahf
out
xor
sbb
repz
cld
and
cmp
repz
mov
repz
repz
dec
iret
repz
inc
xor
sbb
sahf
out
cmp
hlt
and
fcom
jns
out
shlb
jns
out
dec
inc
xor
jecxz
sahf
sbb
hlt
and
cmp
repz
fcom
les
repz
iret
repz
pusha
push
inc
cmp
push
repz
or
hlt
and
sahf
out
jns
int3
shlb
mov
jns
out
inc
xor
or
repz
clc
and
les
repz
lods
cwtl
mov
repz
push
dec
cmp
out
cmp
sbb
cld
and
in
out
sahf
fmul
mov
out
mov
push
inc
out
sahf
out
sub
adc
iret
repz
lock
in
enter
repz
cwtl
mov
pop
repz
repz
inc
cmp
out
cmp
adc
clc
push
loopne
sahf
out
sahf
les
sahf
out
js
pusha
push
inc
sub
js
out
adc
cld
sbb
iret
loopne
enter
add
imul
outsb
xor
int3
ret
jb
xor
pop
add
jne
pushf
mov
jb
jae
loop
lcall
fdivr
cs
and
pop
push
dec
outsl
adc
pushf
sbb
das
cmp
arpl
mov
jecxz
jns
sbb
mov
inc
inc
dec
inc
dec
push
cs
pop
or
shll
dec
inc
inc
dec
push
push
or
loop
pop
push
dec
pop
push
das
inc
pop
out
cmp
add
dec
inc
inc
dec
inc
push
mov
xor
xor
lret
lea
inc
push
push
push
dec
push
lds
add
xor
mov
mov
test
xor
js
aam
push
pop
push
add
adc
push
inc
dec
push
inc
push
xchg
imul
inc
outsl
or
jno
out
mov
out
inc
inc
or
pop
into
repnz
inc
dec
dec
cmp
or
dec
lods
sti
dec
out
mov
push
jecxz
mov
icebp
or
push
mov
push
out
xor
fildll
push
push
adc
cli
pop
dec
push
test
fcompl
push
ljmp
pop
mov
int
pop
in
jo
mov
test
inc
dec
push
cmp
enter
outsb
push
shrl
inc
push
inc
jae
and
dec
push
add
dec
push
push
inc
dec
xorb
into
inc
dec
push
inc
inc
inc
cmp
push
insb
inc
mov
flds
xor
mov
hlt
push
ficoml
in
movsb
inc
push
dec
cmp
pop
or
cmp
push
push
sti
inc
cmp
mov
jnp
lahf
lahf
push
into
cmpsl
pushf
mov
cmp
scas
mov
and
sub
in
pop
jae
jae
lcall
dec
ret
addr16
imul
adc
cs
mov
aas
enter
mov
add
push
push
fadd
scas
inc
xor
lret
cmp
popa
cmpsl
pop
sub
iret
dec
xor
inc
out
popa
ljmp
nop
cli
inc
pusha
fldt
sbb
outsb
and
pop
ja
sti
rolb
lods
mov
mov
std
mov
add
jge
xchg
pop
push
jle
lret
dec
cmpsb
or
int
or
push
dec
cwtl
or
roll
lret
imul
loopne
les
mov
leave
les
push
push
lret
adc
push
dec
dec
arpl
lahf
inc
xor
dec
iret
in
in
jl
dec
jmp
jmp
dec
push
es
lret
push
sub
pop
daa
fsubrp
iret
inc
or
mov
inc
inc
inc
dec
xor
inc
inc
dec
dec
out
sub
out
divl
sbb
sub
cmp
sub
dec
cmp
in
ja
fdivr
push
inc
jbe
lret
sub
lret
sub
cmp
sbb
jae
sbb
dec
movsl
mov
lahf
fdiv
imul
dec
outsb
or
jne
arpl
push
push
sbb
arpl
fdivr
rorl
sub
mov
test
daa
pop
out
mov
ja
fdivr
inc
adc
push
in
out
iret
popf
lcall
push
stos
jle
push
stos
int
jb
dec
add
inc
pop
xor
xor
jns
jb
xor
pop
outsb
lea
pop
pusha
mov
pop
push
stc
xchg
and
inc
negb
mov
enter
stos
pop
movsl
pop
int3
mov
lret
insb
imul
jmp
add
adc
icebp
jge
push
dec
and
inc
lahf
push
loop
dec
jo
jle
dec
adc
dec
outsb
dec
xor
out
inc
sahf
leave
movl
adc
call
lea
les
inc
pop
js
lret
mov
addb
mov
inc
inc
bnd
push
out
pop
out
lret
dec
jae
mov
aas
in
test
inc
push
mov
cmp
ret
shlb
in
pusha
xchg
pop
pushf
cmp
gs
push
lcall
popf
in
clc
sub
inc
fs
mov
shrb
inc
fcompl
lcall
mov
pop
and
iret
push
mov
mov
enter
xchg
jb
aas
push
inc
push
cmp
xchg
mov
push
inc
aam
lahf
mov
jmp
mov
mov
xchg
pop
imul
mov
mov
mov
out
lret
movsb
push
sbb
inc
mov
push
ja
ljmp
push
mov
lcall
mov
iret
mov
dec
mov
mov
sbb
push
js
lret
sub
iret
loop
enter
subb
push
es
add
test
mov
mov
sbb
push
mov
fdivl
or
bound
into
cwtl
in
pop
adc
dec
cmp
xchg
in
iret
cmp
ljmp
fbstp
push
sarl
fsubl
aam
xor
out
mov
sahf
jnp
movsb
inc
cmc
sub
daa
inc
push
xor
aam
sbb
push
add
jb
repnz
jb
rcrb
xor
cmp
xchg
inc
push
popa
cmp
inc
dec
push
repnz
xorl
aaa
pop
pop
jp
into
fstpl
iret
dec
inc
call
jp
aas
aaa
outsb
cltd
inc
inc
add
pop
jp
dec
xor
aaa
ss
xor
shlb
sbb
xor
sub
mov
js
sti
cmp
dec
mov
push
pop
outsb
mov
mov
push
push
dec
sbb
mov
ljmp
insl
rcll
out
pushf
lret
add
ds
mov
push
dec
test
inc
dec
push
out
pop
inc
mov
mov
cli
sub
xor
fcomps
imull
sub
loopne
test
push
pop
jecxz
mul
lds
dec
adc
xor
jo
imul
repnz
lods
push
cmc
inc
cli
mov
xor
inc
xchg
shl
and
mov
testb
stos
xchg
icebp
xlat
mov
imul
loope
inc
dec
sahf
adc
xchg
pop
add
xor
pop
push
push
pop
jl
addr16
pop
pop
movsl
aas
imull
pop
xor
pushf
mov
xchg
pop
mov
lahf
jbe
lock
cmpsb
pop
push
pop
xor
lea
sub
ljmp
xchg
stos
lods
imul
and
or
shrb
dec
jmp
cmp
push
jae
in
adc
push
sub
xchg
inc
push
lcall
mov
jb
cmpsl
fisubrl
mov
aaa
mov
lods
dec
xchg
in
jnp
sub
fcoms
xor
xchg
or
jmp
mov
dec
mov
push
rcrl
pop
dec
push
push
sub
push
inc
je
fisubs
mov
inc
pop
fiadds
adcl
stos
lods
mov
and
ljmp
mov
in
mov
addl
mov
push
cwtl
inc
ss
dec
pop
mov
insl
jo
dec
dec
inc
addl
jae
pop
orb
jge
inc
rorl
mov
xchg
leave
mov
iret
sub
sbb
ss
inc
fwait
inc
dec
mov
inc
iret
mov
dec
ds
jb
inc
imull
lret
pop
inc
dec
sub
cmp
push
out
dec
inc
mov
imul
imul
test
dec
out
xchg
imul
dec
ss
xlat
dec
cmp
inc
xorb
out
outsb
sub
jb
jecxz
xor
xchg
pusha
sub
sub
mov
xor
test
popa
stc
popa
xchg
cmc
inc
sarl
iret
addr16
inc
sbb
mov
dec
dec
inc
dec
push
lret
negl
loopne
xor
push
cwtl
or
cmpsl
cld
out
push
adc
push
imul
jp
pop
mov
dec
pop
or
inc
daa
ret
dec
dec
sub
cmp
int3
stos
sub
pop
out
mov
xchg
inc
push
mov
sbb
out
inc
aas
enter
xchg
outsb
and
jb
dec
pop
dec
mov
ss
loop
rcrb
and
dec
dec
fimull
and
jns
inc
inc
cmp
or
push
push
push
sub
aad
lcall
sub
xor
cwtl
jae
pop
popf
xchg
or
add
pop
inc
mov
jb
adc
popl
dec
divb
and
movsl
xchg
adc
into
and
mov
into
movsl
std
mov
inc
inc
dec
push
out
xchg
pop
push
insl
push
inc
pop
push
leave
dec
fs
mov
jbe
int3
xor
leave
in
push
arpl
dec
imul
js
aam
jp
push
xchg
ret
rorb
ret
dec
pop
lret
inc
dec
shll
lcall
fsubr
dec
pop
sub
sahf
sahf
shll
dec
iret
mov
xor
fcompl
inc
sub
mov
lret
cs
pop
dec
push
les
faddl
jmp
dec
push
inc
jb
push
cs
lret
aas
aad
cs
lahf
jnp
cmp
cmp
push
mov
dec
dec
jb
sub
pop
and
out
pop
pop
adc
inc
cltd
cs
inc
jo
imul
inc
push
dec
fdivl
lret
sub
and
xchg
add
dec
test
out
adc
sub
dec
inc
mov
push
inc
pop
test
repnz
sar
inc
pop
mov
push
sbb
sbb
insl
rorl
cmp
gs
push
mov
and
cmp
push
dec
notb
cmp
dec
dec
gs
ljmp
jae
pushf
cmp
xor
insl
mov
fcompl
pop
push
inc
mov
inc
inc
loope
sub
in
in
dec
jne
aad
xor
mov
cmp
inc
out
fwait
ja
sbb
push
pop
dec
sbb
cmp
jae
dec
std
popf
jg
mov
or
mov
and
lods
xor
xor
repnz
jo
jne
out
xchg
mov
xchg
xor
mov
mov
ds
idivb
shrb
and
aad
cmpsl
scas
iret
iret
cmp
je
sahf
dec
shrl
mov
outsb
push
add
pop
mov
inc
push
pop
push
mov
jae
jae
pop
dec
aad
loopne
dec
mov
xchg
xchg
adc
or
inc
push
clc
or
inc
lods
sbb
dec
inc
push
pop
mov
fiadds
cmp
push
das
push
stc
in
jb
sbb
or
sahf
sti
js
and
cmp
xchg
jecxz
dec
xor
aaa
bound
mov
xor
mov
ficoms
xchg
inc
push
sbb
lods
popa
inc
int
mov
cmp
or
bound
inc
lds
mov
push
jl
inc
pop
out
cmp
dec
push
mov
sub
jb
push
pop
xor
lret
add
jne
jmp
pop
fcomps
clc
push
ret
sub
cmp
sbb
cmpsl
sub
push
dec
push
mov
leave
jecxz
mov
push
mov
inc
dec
test
mov
adc
popa
inc
or
xor
fmul
inc
dec
aam
xchg
mov
mov
cld
fdivrl
inc
xchg
in
jae
enter
int
sarl
cmpsl
mov
sub
sub
inc
inc
dec
dec
pop
outsb
int
lods
imul
popa
pop
gs
mov
xchg
jnp
sti
es
jae
cmp
cs
out
push
out
jnp
dec
xchg
dec
and
cld
pushf
xor
iret
mov
outsb
into
xchg
mov
fs
xchg
shrl
cmp
or
mov
push
loop
push
imul
shlb
idiv
mov
int3
aas
rcl
cli
pushf
mov
cmpb
xor
cmp
dec
jp
cld
pop
jg
dec
xchg
mov
dec
push
mov
outsb
add
out
inc
sub
pop
out
movsb
lret
popf
fwait
xchg
inc
mov
jp
or
lds
jp
hlt
fcompl
cmp
repnz
test
cmp
lods
sub
or
repnz
adc
cmpsb
pop
fcoml
in
and
repnz
fisttpl
push
dec
mov
pop
jecxz
pushf
lcall
sub
push
cmp
dec
xlat
mov
and
sub
push
dec
clc
sarl
jb
cltd
push
push
frstor
fcmovnu
jg
lahf
inc
xchg
ret
push
mov
pop
push
push
cli
cwtl
imul
cmp
ss
push
sti
aas
inc
pop
pop
ja
dec
xor
sub
test
xchg
cmp
push
adc
push
ret
pusha
pop
cmp
xor
pop
imul
repz
repz
repz
sub
cmp
aas
repz
mov
cs
mov
dec
mov
mov
repz
repz
mov
mov
pop
cmp
daa
repz
call
mov
fbstp
inc
popf
fbld
pop
es
popf
sub
popf
fistps
popf
aas
daa
pusha
stc
popf
jle
cs
test
or
stc
popf
fbld
jne,pn
lods
xchg
sub
ja
divl
jle
ja
and
mov
js
hlt
cmp
sub
mov
cld
scas
sar
into
and
ret
lahf
push
xchg
push
and
or
lea
inc
dec
xchg
scas
push
mov
mov
daa
push
xlat
jge
and
pop
lret
mov
and
mov
push
push
ss
lret
ret
pop
push
jo
jns
in
sub
jmp
or
pop
dec
jp
cld
sahf
addl
cs
notl
divb
cmp
lea
inc
push
sbb
lret
testb
icebp
mov
add
pop
aam
push
jne
jo
arpl
add
inc
push
fistl
cltd
dec
sub
aam
test
and
rolb
adc
es
stc
xor
test
push
adc
add
and
add
sahf
mov
sub
or
popa
xor
adcb
dec
dec
aaa
pop
xor
xor
sbb
sbb
data16
gs
ja
sbbb
and
popa
popa
inc
in
mov
dec
movsb
fmulp
aaa
popa
xor
sub
lods
mov
data16
pop
out
pop
arpl
xor
outsb
jp
pusha
xor
js
xchg
push
and
pop
and
lds
push
dec
in
pop
mov
and
xchg
fidivrs
ja
mov
imul
and
aam
cmp
cld
pop
hlt
dec
and
pop
in
jo
fdivrs
out
ror
mov
sahf
out
pushf
xchg
nop
test
je
fs
inc
das
jmp
push
dec
inc
jns
dec
xchg
cmp
sub
je
loope
cmp
add
pop
clc
pop
mov
push
lret
arpl
out
fcom
enter
out
sahf
out
xchg
mov
js
jo
push
pusha
pop
push
dec
inc
cmp
cmpsl
out
sub
jo
and
adc
add
gs
pop
inc
in
pop
xchg
loope
in
fcompl
pop
jno
sbb
int3
pop
les
pop
mov
cmpsl
ja
pushf
out
sahf
out
test
fs
out
sahf
pop
push
push
dec
cmp
sahf
out
xor
and
adc
repz
out
cld
pop
hlt
in
in
repz
fmul
sarb
test
mov
pushf
cwtl
xchg
mov
js
push
sahf
out
dec
dec
inc
call
xchg
xor
sub
iret
repz
and
adc
pop
ja
loope
add
pop
hlt
pop
in
pop
push
mov
loope
pop
fcompl
jns
out
enter
mov
out
mov
sahf
jo
pop
push
cmp
pop
dec
pop
inc
cmp
cmpsb
sahf
out
and
cmp
pop
adc
pop
ljmp
les
popa
or
mov
test
pushf
xchg
pop
pushf
jns
out
mov
sahf
out
fs
push
dec
sahf
out
sahf
inc
cmp
sub
xchg
or
mov
push
in
push
xchg
icebp
clc
push
hlt
push
lock
call
sbb
push
mov
repz
int3
mov
leave
jp
fs
jne
cli
xor
mov
clc
ja
mov
repz
movsb
push
pushf
push
nop
test
pop
stc
xor
neg
scas
test
dec
aaa
cs
out
xor
mov
fstp
xchg
outsl
pop
mov
std
push
xor
mov
push
lret
ds
test
mov
push
pusha
pop
push
dec
inc
sahf
out
sub
xor
and
dec
js
or
inc
adc
jecxz
sahf
out
or
cld
push
jae
sbb
clc
push
hlt
push
sub
mov
popa
jns
in
out
call
iret
popa
jns
aam
int3
enter
repz
sarb
mov
mov
repz
lds
cmp
pushf
cwtl
xchg
fsubr
in
sahf
nop
mov
dec
sarb
jmp
mov
pop
dec
repz
repz
cmp
sub
xor
cmp
sbb
or
pop
xchg
rcll
sub
inc
push
imul
in
cmp
lret
jae
or
push
aam
xor
push
int3
push
enter
push
push
xchg
mov
push
sahf
out
sub
lods
test
or
test
push
pushf
cwtl
xchg
sahf
out
sub
xchg
mov
iret
repz
je
insb
push
repz
pop
pop
push
push
sbb
repz
int3
lods
inc
nop
movsb
imul
out
sub
push
xchg
loope
push
adc
or
add
icebp
mov
hlt
push
adc
outsl
push
push
aaa
aaa
dec
push
jo
mov
add
xor
imul
xor
and
xor
rclb
xor
jae
push
dec
pop
rcrb
out
add
push
and
jmp
bound
xor
push
enter
jmp
bound
pop
les
push
mov
push
arpl
push
scas
rcrb
popa
jl
adc
inc
dec
loop
push
jle
xor
pop
subl
add
or
mov
xor
mov
xchg
pop
push
jo
ret
dec
data16
push
and
inc
outsb
or
or
gs
test
mov
sbb
gs
outsb
je
pop
adc
push
insb
insb
enter
jb
mov
mov
roll
push
xchg
xlat
add
xor
add
jl
sbb
inc
jp
and
ret
subb
icebp
cmp
lahf
add
data16
mov
sbb
bnd
jle
ret
mov
xorl
imul
movsl
cmp
sub
cmp
push
push
gs
adc
stos
xor
add
repz
addl
addl
xor
push
test
xchg
into
or
subl
roll
jmp
mov
jb
add
clc
cld
cmp
add
add
push
sbb
and
lahf
or
push
outsb
mov
dec
xor
and
fstpt
stos
sbb
ljmp
pop
and
popa
ja
xchg
mov
bound
popa
outsl
mov
xchg
data16
mov
ds
stc
stc
icebp
xor
xor
dec
std
sar
xor
ficoml
push
sub
jae
lret
insl
gs
mov
iret
adc
mov
insl
jb
leave
xchg
inc
push
insb
outsl
mov
lret
int
add
fistl
cmpsl
mov
push
jnp,pn
bound
jns
add
in
fdivr
outsb
in
push
cmc
cmp
xchg
int
jnp
rcr
jg
push
push
outsl
cltd
call
push
roll
jne
push
sbbb
cmp
sub
lret
and
or
mov
dec
lret
cmp
mov
outsl
adc
fxch
lret
sub
sub
xchg
imul
sub
dec
xor
mov
popf
push
arpl
mov
xor
xor
push
bound
std
and
xchg
hlt
and
fsubp
mov
jne
je
mov
xchg
and
push
std
pop
mov
aaa
fs
mov
mov
adc
jp
gs
jae
in
pop
jno
jns
imul
or
jp
fcompl
pop
sub
pop
push
add
xor
stc
stc
stc
xor
xor
stc
jg
imul
mov
xchg
popf
and
cmp
add
jecxz
xchg
lret
jne
dec
enter
loopne
popf
push
mulb
push
in
adc
sub
imul
pop
je
shll
outsb
lock
xor
inc
pop
and
enter
in
int3
jne
sub
loop
xor
arpl
jg
sbb
lea
shlw
gs
mov
push
out
cltd
daa
insl
dec
movsl
jno
repz
cmp
xor
xor
aaa
xor
pop
out
ljmp
lds
xor
xor
je
fimull
cmp
sarl
mull
jle
xor
mov
push
rcrl
dec
jge
sbb
sti
sub
outsl
sbb
push
jo
mov
mov
ljmp
xor
iret
pop
lret
push
cmpsb
movsl
cli
imul
lret
mov
mov
sub
mov
jmp
sahf
mov
inc
addr16
cli
psubw
insb
lea
cmp
test
sbb
xchg
cmpsl
dec
andl
add
push
lds
push
jmp
insl
mov
jb
pushf
mov
mulb
or
and
inc
cmpsl
fsts
pop
and
jns
jmp
aaa
inc
loope
mov
xor
or
pop
push
inc
or
int
iret
imull
mov
mov
sub
xor
and
push
movsl
add
inc
push
movsb
popl
mov
push
and
pop
outsl
in
dec
stos
mov
dec
or
add
icebp
and
fisubrs
xchg
shll
ret
inc
adc
gs
push
mov
and
in
out
or
inc
inc
xchg
xchg
mov
pop
push
lahf
mov
jbe
dec
xor
jbe,pn
cmpsl
addl
cmpsb
xchg
movsb
inc
push
sbb
bound
mov
insb
insl
sbb
dec
repz
and
xlat
mov
sti
aas
dec
inc
es
push
scas
je
cld
dec
jmp
leave
pop
out
push
aam
divl
cmpsl
and
jl
inc
imul
ja
xchg
decb
jno
aad
pop
push
mov
test
mov
mov
pushf
xor
mov
and
repz
cmp
test
outsb
out
lods
fsts
add
dec
push
xor
fisubrl
pop
mov
pop
lods
popf
push
inc
jl
or
or
mov
sub
pop
gs
sbb
dec
mov
cmp
jnp
fldcw
push
mov
push
lahf
scas
sub
in
jae
dec
rcll
push
mov
insl
test
inc
sbb
mov
fwait
cs
add
or
sub
imull
mov
sub
je,pn
repnz
pop
aad
push
out
shlb
mov
ss
cli
repz
sahf
sub
inc
mov
jbe
mov
jnp
cmp
stos
push
adc
inc
push
bound
inc
aad
cmpsl
lret
shll
pop
push
cli
sbb
inc
cmc
or
xchg
fiadds
lahf
push
inc
mov
mov
int
aas
jecxz
repz
scas
inc
imul
pop
jecxz
push
and
divb
cmpsl
callw
mov
jge
out
mov
jbe
dec
and
sub
mov
pop
inc
popa
pop
out
push
aad
and
inc
add
ds
adc
cmpl
movsb
mov
lahf
jge
add
cmp
shlb
cmpsb
cmc
sti
jl
pop
mov
jp
and
insb
mov
popa
and
fildll
scas
mov
imul
mov
std
ja
sbb
mov
cltd
mov
mov
cmp
outsl
shll
xor
mov
cmp
dec
pop
mov
add
in
lret
adc
insb
jb
mov
aaa
mov
icebp
je
clc
sbbb
xchg
mov
dec
shl
and
jae
lahf
popf
pop
mov
fimuls
inc
dec
mov
push
ss
push
sub
sub
mov
mov
repz
sti
dec
in
daa
add
in
sti
imul
movsb
cmp
adc
jge
rcr
lret
repz
pop
or
jmp
dec
push
push
fs
push
jno
cmpl
sub
stos
insb
in
insb
adcl
xor
xor
xor
lcall
movsb
jns
push
sub
fstps
repnz
jb
push
fcmovbe
cltd
adc
jl
xchg
push
pop
sahf
xchg
xchg
repnz
mov
icebp
dec
push
arpl
pop
sti
std
les
cmp
ja
jge
mov
cmp
cs
jb
inc
mov
imul
fmull
movsl
jmp
mov
sbb
xchg
push
mov
sbb
leave
add
aam
repz
sub
andb
insb
pop
xlat
fs
sub
jmp
and
mov
jae
pop
sub
push
iret
out
mov
mov
xchg
in
mov
scas
jae
pusha
mov
adc
and
push
or
cmp
cs
xchg
push
imul
nop
jne
lock
pop
lods
push
insl
jae
mov
shlb
inc
inc
pop
cmpsl
mov
jns
insb
push
rclb
add
sub
cmovne
ljmp
repnz
mov
inc
xor
fstp
divl
aaa
and
jle
int
movsb
punpckhwd
dec
dec
xchg
lea
jle
jp
movsl
mov
outsb
cmp
and
mov
into
xchg
push
mov
jecxz
and
bound
dec
lret
push
nop
cld
add
int
ret
inc
insl
inc
cmpsb
bound
repnz
mov
or
out
test
or
push
mulb
pop
inc
or
add
inc
cmpsb
scas
movsl
and
jmp
inc
stos
iret
inc
mov
cmovnp
lods
ljmp
xorl
scas
test
inc
xchg
int
addr16
jmp
sti
hlt
mov
testb
int
pop
adc
jnp
aas
jae
fidivrs
shrl
pop
arpl
imull
cmovno
popf
xchg
sbb
sbb
jge
lahf
ljmp
dec
xchg
cmc
jbe
lahf
mov
mov
mov
test
xlat
sti
scas
aad
push
add
xchg
cmp
filds
movsl
negl
out
push
inc
push
pop
test
pop
scas
cmp
loope
jae
popa
push
push
add
fs
adc
cmpsl
sub
call
sbb
mov
ds
movsl
jle
add
enter
out
cli
in
dec
int
xchg
mov
stc
push
jae
push
cmpsl
add
movsb
lock
xor
adc
or
sub
mov
push
andps
jne
int
add
in
xlat
sub
dec
xor
jno
push
push
ret
pop
vmread
xor
sbb
movsb
add
pop
lds
adc
xor
mov
cmpsl
out
das
imul
shlb
jp
fdivs
addl
push
nop
mov
cmp
mov
lcall
sub
popa
aas
rcll
inc
pop
movsb
out
sub
mov
push
adc
push
dec
ljmp
xchg
adc
aas
xchg
les
aad
out
dec
jb
cld
sub
push
jo
daa
push
call
negl
pop
out
push
lea
jo
xchg
xor
sub
or
push
dec
add
bound
or
stc
push
xor
jecxz
notl
cmp
in
push
push
dec
xor
sbbl
pop
inc
dec
sbb
pushf
jne
imul
cwtl
mov
jb
dec
sub
or
push
fadds
xor
ficomps
jae
sub
rcrb
dec
or
mov
je
sbb
subb
inc
popf
mov
sahf
loope
or
xchg
jle
aaa
popa
ret
test
add
shlb
popa
ret
popf
jo
push
dec
call
in
xor
sbb
cvtpi2ps
movsl
pop
outsb
mov
movsl
popa
mov
push
mov
insl
pop
es
insl
jbe
inc
xchg
pusha
pop
mov
mov
push
jo
mov
popa
dec
mov
popf
inc
cmpsb
xlat
lcall
push
insl
shll
sub
sbb
insl
outsl
test
ja
mov
mov
push
jmp
movsb
xchg
shl
test
movsb
bound
arpl
pop
popa
fs
jmp
push
sbb
out
popa
jo
adc
jl
xchg
xchg
jne
popf
push
lds
test
divb
sbb
cld
push
lret
or
pop
fstpt
fsubr
pop
cmp
push
xor
jo
cmp
and
xchg
ret
movsl
fcmovne
popa
dec
pop
movsb
repz
mov
cmpsb
mov
int3
imul
inc
lods
add
lods
cltd
mov
jae
out
mov
adcl
mov
jb
jno
js
jmp
gs
sub
sub
push
jmp
ja
xchg
adc
fs
mov
daa
gs
and
fbld
mov
add
je
pop
mov
cmpsl
cltd
pop
outsl
push
cmp
pop
jl
repnz
xchg
outsl
xchg
cmc
arpl
fistl
jnp
jp
jno
arpl
mov
dec
decb
popa
daa
test
pushf
stos
clc
sub
mov
fidivl
xor
xor
cltd
mov
stos
ss
sub
bound
sbb
cmp
imul
lahf
loopne
sub
mov
lods
data16
jle
xor
test
cs
bound
mov
arpl
jmp
jae
push
or
push
out
mov
sbb
dec
imul
pushf
shr
pop
outsb
xor
imul
jo
iret
clc
jb
arpl
fisubl
adc
sbb
or
imul
ja
ds
hlt
mov
ja
inc
xor
aas
outsl
sti
mov
mov
xchg
hlt
mov
fs
or
dec
imul
dec
iret
sbb
jae
push
mov
je
jae
insl
jbe
mov
dec
aaa
in
mov
aas
outsb
outsb
pop
outsb
ds
add
frstor
xor
dec
out
or
daa
xor
push
cmp
sub
mov
outsb
insl
mov
lret
in
cmp
mov
xchg
test
jle
xchg
pop
loope
cs
fwait
add
jmp
in
dec
sbb
mov
jno
inc
mov
mov
inc
sbb
lds
sbb
outsb
int3
enter
lahf
xchg
pop
pop
xor
mov
jnp
das
movsl
jae
push
dec
clc
les
xor
out
mov
add
xchg
inc
shrl
outsb
cmp
xchg
jno
fistpl
movsb
mov
andb
inc
lcall
sub
insl
lret
pop
pushf
inc
dec
sbb
jns
sub
imulb
in
add
pop
xchg
stc
push
xor
mov
mov
jge
aam
pop
lret
jns
sub
pop
add
testb
popf
js
jnp
lret
inc
cmc
xor
pop
inc
inc
sub
test
dec
jbe
sub
xor
in
xor
sbb
inc
movsl
inc
mulb
in
sub
mov
popa
mov
leave
jnp
fisttpll
add
adc
ret
es
jb
or
gs
jno
xchg
inc
dec
inc
push
or
mov
out
orl
push
mov
sub
addb
cltd
pushf
pushf
add
divb
decl
sub
js
incl
stc
popl
andl
xor
out
and
cmc
pop
outsl
adc
dec
inc
shlb
xor
dec
cmp
sub
fcmovnbe
cmp
xor
imull
sub
ret
xor
mov
dec
lods
and
xor
loope
out
inc
popf
pop
push
sub
jmp
xor
movsb
out
mov
jl
inc
xchg
adc
xchg
aas
mov
pop
xchg
fstl
fistps
jg
push
stos
cli
in
stos
xor
sub
push
xor
lret
pop
aam
adcb
and
push
std
test
sahf
xor
jnp
movsl
xchg
mov
mov
cli
pop
ja
into
je
repz
sbb
xchg
out
cmp
xchg
sub
test
int
sub
inc
sbb
clc
mov
rolb
sub
jnp
fwait
inc
out
mul
lahf
mov
rorb
mov
push
data16
and
mov
in
jnp
sbb
sub
cmc
xchg
cmp
sbb
ss
mov
mov
inc
cli
in
fidivrs
orb
ja
cs
je
dec
adcl
fsubrs
test
and
xor
push
je
cwtl
mov
mov
mov
xor
imul
or
inc
enter
lret
pop
jne
and
fimuls
cmpsl
in
mov
loop
add
sbb
or
inc
clc
les
in
aam
jns
out
les
jns
out
test
fs
out
sahf
pop
push
dec
inc
cmp
sahf
out
xor
sbb
or
repz
jecxz
ret
hlt
call
cmp
int3
les
repz
nop
mov
iret
repz
push
dec
inc
iret
repz
cmp
and
adc
icebp
cmp
add
ret
jns
out
fmul
sarb
out
mov
sahf
pusha
push
dec
inc
cmp
sahf
out
xor
and
adc
repz
out
hlt
shr
ror
repz
les
repz
xorb
repz
repz
cmp
sub
repz
and
or
clc
rcrb
int3
jns
out
shlb
sahf
out
cmpb
sahf
out
sahf
pop
push
inc
cmp
jns
out
sub
sbb
or
repz
jecxz
mov
iret
repz
enter
movsb
cmp
repz
xchg
mov
rep
pusha
pop
push
dec
repz
repz
cmp
sub
repz
sbb
or
clc
mov
in
in
aam
jns
out
les
jns
out
jl
fs
sahf
out
sahf
push
inc
cmp
sub
sahf
out
sbb
or
clc
mov
repz
iret
repz
mov
movsb
pushf
xchg
cmp
repz
jl
push
iret
repz
inc
xor
sbb
icebp
cmp
adc
clc
mov
sahf
in
ror
sarb
jns
mov
mov
sahf
out
cmpb
out
sahf
out
push
dec
inc
cmp
and
adc
cmp
jecxz
add
mov
repz
repz
les
iret
test
cwtl
nop
test
repz
je
fs
push
repz
repz
cmp
sbb
jno
iret
adc
mov
jns
fmul
les
lods
mov
out
sahf
out
push
out
sahf
inc
cmp
sub
cmp
or
clc
mov
repz
aam
ror
cmp
mov
cmp
repz
mov
pop
repz
repz
dec
inc
cmp
iret
repz
sub
sbb
sahf
out
sbb
mov
jns
out
rol
mov
jns
out
nop
test
out
sahf
insb
pusha
push
dec
inc
jns
out
cmp
sub
or
cmp
out
hlt
mov
in
iret
repz
ror
sarb
movsb
xchg
mov
repz
repz
push
dec
inc
cmp
repz
xor
adc
sahf
out
cmp
hlt
mov
loopne
jns
out
int3
les
sahf
out
nop
mov
sahf
jo
pop
push
dec
jns
out
inc
cmp
and
adc
cmp
mov
loopne
repz
aam
mov
repz
cwtl
xchg
nop
mov
je
fs
push
iret
repz
inc
cmp
sbb
repz
or
hlt
mov
jns
out
loopne
int3
sarb
test
nop
mov
js
fs
push
jns
out
inc
cmp
sub
sbb
cmp
mov
call
loopne
rol
mov
mov
movsb
pushf
xchg
mov
cmp
repz
fs
repz
pop
pop
push
inc
cmp
repz
and
or
clc
jns
out
mov
loopne
ror
out
sahf
out
mov
mov
sahf
nop
mov
out
push
cmp
jns
out
sub
sbb
repz
in
cmp
repz
int3
les
iret
repz
nop
test
repz
insb
pusha
push
dec
inc
cmp
repz
cmp
sub
sbb
iret
repz
add
mov
out
sahf
out
loopne
ror
sahf
out
sahf
shlb
out
mov
pop
push
out
sahf
out
inc
cmp
sub
adc
add
scas
cmp
repz
call
repz
repz
cmp
xchg
nop
mov
cmp
fs
push
dec
inc
repz
repz
sub
adc
jno
iret
or
clc
scas
lock
loopne
ror
mov
mov
nop
out
sahf
out
jl
push
sahf
push
dec
inc
cmp
js
out
and
adc
add
lods
repz
jecxz
call
repz
enter
test
iret
repz
nop
test
pusha
repz
repz
push
dec
inc
cmp
repz
sub
adc
add
out
sbb
lods
hlt
call
out
enter
mov
out
xorb
out
sahf
pop
dec
inc
cmp
js
out
xor
adc
cld
stos
repz
jecxz
call
repz
shlb
cmp
mov
cmp
repz
dec
inc
cmp
iret
repz
sub
adc
add
out
sbb
stos
hlt
in
loopne
jns
out
enter
movsb
pushf
out
sahf
out
mov
sahf
out
sahf
pusha
push
dec
inc
cmp
out
xor
adc
add
cmp
jecxz
test
iret
repz
int3
les
cmp
pushf
xchg
mov
js
push
cmp
inc
cmp
sub
cmp
repz
sbb
or
hlt
jns
out
test
loopne
ror
out
sahf
out
mov
out
sahf
nop
mov
out
pop
push
dec
inc
xor
jecxz
sahf
out
adc
cmpsl
lock
repz
in
rol
mov
mov
mov
cmp
repz
push
cmp
push
dec
inc
xor
sbb
repz
adc
add
cmpsb
jns
out
hlt
in
in
aam
out
sahf
out
mov
out
sahf
cwtl
nop
mov
jns
push
out
sahf
out
sub
sbb
iret
jecxz
sahf
or
clc
movsl
lock
iret
repz
aam
les
mov
iret
repz
je
fs
push
cmp
repz
inc
cmp
and
icebp
cmp
repz
add
clc
movsb
out
sahf
hlt
in
loopne
int3
sahf
out
sahf
enter
movsb
jns
out
pushf
xchg
test
out
sahf
out
pop
push
dec
cmp
out
sahf
xor
and
adc
jecxz
add
mov
repz
repz
cmp
nop
mov
repz
pusha
pop
push
dec
inc
repz
repz
sub
adc
jno
iret
or
cld
mov
jns
loopne
enter
sahf
out
lods
movsb
pushf
xchg
mov
jo
pop
push
sahf
out
sahf
dec
inc
cmp
sub
sahf
out
and
adc
mov
repz
loopne
int3
iret
repz
mov
cmp
repz
test
pop
repz
repz
dec
cmp
sub
repz
and
or
clc
mov
lock
enter
out
mov
pushf
nop
test
sahf
out
insb
fs
push
sahf
out
sahf
dec
cmp
xor
cmp
or
cld
lahf
lock
repz
iret
repz
mov
cmp
repz
test
pop
repz
repz
dec
inc
cmp
iret
repz
sub
or
sahf
out
sbb
sahf
lock
out
ror
mov
jns
out
nop
mov
sahf
push
jns
out
inc
cmp
and
adc
cmp
popf
call
iret
fcom
enter
iret
repz
mov
repz
repz
push
dec
cmp
repz
xor
or
sahf
out
sbb
pushf
lock
out
int3
les
sahf
out
nop
mov
out
sahf
insb
fs
push
dec
jns
out
inc
cmp
sbb
repz
fwait
in
call
loopne
enter
iret
repz
test
cwtl
nop
mov
cmp
repz
fs
repz
pop
push
dec
inc
cmp
repz
sub
sbb
or
and
icebp
cld
lcall
cmpsb
and
jecxz
sub
pop
jne
icebp
pop
mov
out
mov
pop
outsl
insb
fs
imul
call
test
cmpsl
addr16
out
dec
mov
pop
mov
arpl
sub
mov
adc
sub
cmpsl
outsl
data16
cmp
jbe
lret
je
pop
pop
sbb
loopne
bound
and
popa
je
sbb
jne
icebp
cmp
ret
sub
push
xor
rorl
mov
push
outsl
je
mov
sahf
jb
cmp
das
jne
fs
push
repz
mov
jb
into
jno
sbb
dec
out
stos
mov
cmpsl
jae
insb
imul
inc
imul
or
std
je
aaa
flds
push
push
jb
fildl
and
xchg
jp,pt
sarb
fdiv
in
movl
out
in
inc
fs
daa
aas
repnz
shll
cmp
pop
xchg
fbstp
push
fmull
mov
test
jecxz
xchg
stc
adc
mov
xchg
sbb
jns
cmpsb
cltd
arpl
in
dec
addr16
ljmp
pop
xchg
fstpt
outsb
out
jno
addr16
into
idivb
push
insb
xor
mov
inc
jp
and
andb
jl
bound
scas
insb
pop
outsb
inc
nop
in
outsb
rorl
xchg
jae
adc
pop
push
popa
cmp
data16
push
insl
dec
jae
dec
mov
outsb
popa
xchg
in
lock
inc
arpl
sbb
bound
shlb
ffree
mov
test
sti
stc
pop
push
cmpsl
outsb
insb
jno
jb
jecxz
mov
outsb
arpl
fcompl
iret
jns
fsts
jbe
and
pop
push
jne
jae
outsb
add
push
jb
sub
sti
xchg
bound
xchg
cmp
push
outsb
insl
enter
xchg
pop
int
jp
pop
xor
push
xchg
mov
or
cmp
sbb
imul
imul
outsb
iret
fs
in
sahf
fs
jae
sub
pop
outsl
jbe
inc
cmp
aaa
mov
xor
outsl
fbstp
mov
cmp
sahf
dec
daa
pop
rcrb
cmpsl
jae
gs
je
jmp
iret
rclb
mov
iret
sbb
jnp
push
cmp
add
jne
outsl
clc
cmp
in
insl
popl
mov
outsb
outsl
sbb
jb
lret
fstl
jmp
mov
out
jmp
mov
outsl
cmp
xor
push
scas
movsb
in
bound
fldt
test
xchg
popa
or
push
aam
arpl
sbb
jae
mov
sbb
notb
jecxz
jb
cmc
cmp
outsb
popa
dec
mov
cmp
fs
lods
stos
cmp
mov
nop
mov
adc
bound
insb
imul
cltd
outsl
mov
jp
adc
cmp
sbb
push
xor
insl
sbb
outsb
shrl
idiv
test
gs
fs
mov
test
loop
jb
mov
fsubl
call
pop
jne
in
je
mov
pop
pop
jb
push
les
inc
imul
je
dec
popa
cmp
jae
lret
dec
cwtl
and
movsl
fwait
ljmp
imul
int
sbb
xor
cwtl
lahf
cmpsb
sbb
xchg
popa
insb
hlt
mov
aaa
insl
pop
dec
adc
jns
pop
inc
repnz
movsb
cmp
cmpsl
sahf
cmp
and
xchg
xorl
in
cmpsb
pop
jo
lock
jmp
fsubrs
fs
lret
sbb
fdivs
xor
xlat
outsl
in
push
add
movb
xor
cmp
jb
jo
xlat
popa
bound
sub
push
jge
mov
and
lea
jbe
arpl
cmp
shll
adc
dec
dec
cmp
and
mov
or
jb
push
aad
gs
imul
cmp
or
jno
les
and
push
lcall
pop
rorb
icebp
imul
or
xchg
mov
insl
je
insl
nop
out
lods
stos
mov
in
scas
call
fs
mov
xchg
adc
pushf
mov
mov
jns
movsb
push
je
je
icebp
insl
outsb
insb
xor
fistl
pusha
pop
in
aas
imul
xchg
mov
mov
lea
push
je
jmp
shrb
xor
cmp
mov
sbb
arpl
iret
mov
xor
ljmp
push
jne
sbb
sub
jecxz
int3
jbe
mov
in
cmc
sub
cwtl
pushf
xchg
sub
data16
xchg
mov
pop
adcb
lcallw
out
sub
std
sbb
jns
shr
les
push
xor
xchg
lods
ja
jp
repz
lcall
out
push
jb
jno
cmpsl
in
int
jo
icebp
jnp
outsb
cwtl
inc
fbld
sub
repnz
jp
push
jae
out
ror
jl
jne
cmp
push
fs
repnz
pop
dec
enter
lods
push
jno
jne
mov
jecxz
dec
sub
insl
fs
pop
dec
mov
loop
cmp
xchg
ret
outsb
jecxz
insl
sbb
dec
loopne
lahf
pop
xchg
sbb
lret
pop
sbb
push
and
xlat
in
sub
push
daa
jno
dec
adc
enter
dec
pop
push
mov
xor
imul
dec
loop
insl
dec
jp
jecxz
push
mov
inc
xor
and
jno
push
sub
outsb
ja
xchg
sub
mov
sbb
arpl
outsb
popa
cmpsl
push
cmpsl
xor
lret
gs
jecxz
ljmp
pop
imul
aas
pop
bound
sub
int3
push
pop
and
popa
jns
or
or
rclb
sub
repnz
cmpsl
mov
imulb
jmp
cmpsb
je
pop
and
lods
sti
xor
mov
insb
cmp
add
dec
cmp
cmp
mov
mov
jecxz
push
imul
push
mov
cmp
sub
sbb
arpl
fsubp
data16
and
jecxz
addr16
fcmove
out
cmp
jb
push
push
data16
cmp
pop
into
xlat
xor
mov
jp
pop
in
outsl
lret
cmp
in
jno
stc
fstps
mov
ret
mov
je
sub
and
jns
add
sub
fs
pop
sub
bound
shll
xor
xchg
jns
pop
into
jmp
jbe
faddl
ds
fstps
inc
jne
adc
sub
xor
out
pop
sub
ds
mov
push
in
mov
addr16
cltd
imulb
cmp
out
jp
cmp
jb
mov
in
insl
pop
popa
jo
jno
call
outsl
jle
jl
outsl
jb
sub
inc
gs
inc
decb
sub
inc
dec
dec
sub
call
outsb
jmp
sbb
pop
mov
xchg
or
jae
jnp
mov
push
insb
daa
inc
lret
and
dec
mov
jge
dec
push
outsl
xor
and
out
lret
push
cmp
add
or
push
add
bound
sbb
xchg
bound
mov
mov
sbb
arpl
jp
xor
iret
shlb
lret
in
jb
jl
dec
dec
mov
mov
inc
sbb
jmp
les
jne
sub
enter
mov
dec
dec
fwait
stc
mov
fs
adc
pop
sub
jb
gs
inc
mov
jmp
jmp
lret
fwait
pop
or
dec
lret
mov
cmp
push
mov
cmp
jecxz
lret
mov
into
out
fs
lret
call
hlt
movsb
aaa
hlt
data16
lods
outsl
dec
cmp
repz
pusha
insl
pop
jns
xchg
jb
data16
jecxz
cs
cmp
rorb
xorb
mov
mov
mov
sub
jle
cs
push
push
and
lret
out
cmp
xchg
insb
mov
xor
inc
jp
int3
mulb
sbb
imul
repz
xchg
mov
sub
xchg
mov
bound
jb
push
fs
in
pop
mov
xor
fldcw
sub
insl
adc
imul
out
clc
negl
lret
jae
loopne
cwtl
insb
jne
ret
movsl
insb
arpl
outsb
jns
jo
mov
cmp
je
xorl
lcall
xchg
fstpt
jno
cwtl
xor
jmp
aas
imul
aas
fs
or
jb
cwtl
popf
inc
jmp
xor
sbb
stos
mov
fldt
outsl
mov
dec
xchg
in
pop
in
pop
jp
jecxz
push
divl
push
popa
lret
jb
sbb
dec
insl
out
call
lcall
out
mov
test
xchg
stos
repnz
dec
sub
pop
cmc
gs
push
ret
push
lret
out
imul
lret
jns
jle
fldt
jge
jae
inc
insb
inc
int
popa
fsubp
cs
popf
and
dec
pop
icebp
mov
jno
cwtl
jecxz
mov
clc
or
shll
jb
jnp
jno
jns
mov
mov
arpl
jle
in
jo
arpl
arpl
push
pop
shll
scas
sbb
in
jno
pop
jne
ret
pop
popa
aam
imul
sub
popa
dec
mov
arpl
mov
ja
push
cltd
mov
adc
je
pusha
mov
arpl
dec
outsl
add
sub
xor
mov
aad
dec
add
iret
push
jns
or
in
jbe
shlb
pop
mov
insl
xchg
xchg
shll
sarl
push
lret
fstps
in
imul
sbb
imul
mov
jae
sbb
movsl
push
push
insl
cmp
jge
imul
inc
cli
dec
fsub
ror
and
mov
insb
daa
inc
outsb
icebp
mov
cmpsb
gs
mov
xor
and
in
cwtl
sub
cmpsl
xor
dec
push
push
pop
mov
dec
fistl
shl
sub
call
xchg
xchg
ja
sti
mov
insb
push
out
popa
mov
imul
push
sub
arpl
ja
pop
push
imul
jle
pop
in
inc
cmp
dec
jae
push
jp
in
stc
xor
adcl
imul
pop
xrelease
imul
bound
mov
rcll
test
in
fildll
dec
push
lret
jl
bound
pop
cmpsl
loop
mov
mov
lcall
rclb
cmpsb
jo
or
outsb
shll
sub
scas
movsl
dec
cmp
rorb
aam
repz
je
sub
sub
and
sbb
pusha
insl
jne
hlt
cmp
ss
aas
mov
mov
cld
inc
repz
shr
jnp
outsl
repnz
sbb
push
imul
or
gs
sbb
dec
das
dec
jmp
shll
and
aam
fsts
test
xchg
cmpsl
cltd
pushf
pushf
roll
imul
mov
out
lret
push
call
xor
decb
mov
ficoml
bound
lret
sub
dec
jne
mov
cmpsl
and
jno
arpl
xchg
jecxz
jge
jb
repnz
mov
call
popa
add
push
daa
jg
dec
gs
mov
lods
cmp
inc
adc
push
dec
cltd
sbb
pop
out
sub
outsb
push
sbb
cmp
inc
ds
out
gs
cmc
mov
pushf
mov
jno
clc
pop
popa
fmuls
dec
sbb
sub
bound
lods
xchg
sbb
gs
dec
jno
xchg
shll
sbb
lds
test
in
imull
insb
mov
dec
lods
insb
sbb
dec
push
scas
mov
loop
ficoms
jb
xchg
jae
cld
sbb
das
pop
js
fsubl
lods
shll
call
push
ss
fnstenv
jne
sbb
out
add
jecxz
test
sub
loop
pop
outsl
ljmp
pusha
cmp
xchg
cmp
jbe
sbb
push
push
aaa
popaw
roll
out
je
in
jge
or
nop
bound
arpl
fs
dec
fnstcw
int3
out
mov
mov
adc
pop
jae
mull
push
pop
sbb
cld
cmpsl
mov
push
arpl
push
mov
repz
ret
jmp
lock
add
mov
repnz
pushf
data16
jecxz
sbb
jp
mov
inc
pop
outsb
jns
int3
jno
jle
mov
idivl
cmp
bnd
scas
icebp
je
pushf
sbb
mov
into
movsb
jecxz
aam
scas
xor
cmpsl
jae
mov
popa
shll
push
int
dec
jecxz
scas
cmp
popa
js
pop
imul
cmc
dec
cmp
movsl
in
sbb
sbb
pop
xchg
lret
imul
mov
dec
mov
lcall
jns
add
outsl
xchg
jecxz
dec
cwtl
sbb
add
pop
and
gs
outsb
rcll
cmp
shll
shll
inc
xchg
outsb
jecxz
inc
cld
or
jle
inc
outsl
jae
out
xor
pop
dec
jns
xor
test
cmc
cmp
jb
data16
ja
sub
lds
insl
lcall
mov
and
or
test
out
pop
imul
idivl
xchg
pop
xchg
es
mov
sub
out
mov
cli
inc
dec
mov
jno
pop
ss
xchg
mov
cmp
insl
mov
and
jno
and
imul
cltd
cmp
lret
test
mov
inc
jmp
popf
sub
push
imul
bound
lret
adc
cmp
jno
test
jg
inc
xchg
mov
dec
lret
xchg
arpl
loopne
adc
sub
push
jae
jp
test
lahf
adc
jb
lret
add
sbb
mov
aad
xor
movsl
in
mov
repnz
inc
int3
dec
jne
pop
into
xchg
gs
mov
pusha
xor
fldcw
imull
push
adc
loopne
rcrl
mov
mov
testb
repz
or
jmp
in
aaa
adc
mov
dec
icebp
aas
inc
push
arpl
daa
out
in
pop
outsb
jno
push
inc
inc
dec
inc
test
ja
xchg
bound
popa
icebp
mov
mov
cmp
test
repz
inc
ret
iret
xchg
outsb
inc
jb
mov
cmp
jb
mov
dec
xchg
and
sub
sub
adc
inc
outsb
iret
cmp
arpl
cwtl
out
insb
leave
inc
cmp
xchg
gs
add
push
je
xchg
in
cmp
pop
test
mov
jecxz
dec
in
mov
fs
jno
inc
jle
jbe
inc
sbb
outsb
jns
ja
test
mov
jne
pop
push
aaa
add
leave
jno
inc
daa
xchg
jmp
ret
ja,pn
leave
push
jl,pt
jne
je
mov
fnstenv
inc
push
mov
jecxz
outsb
lcall
sub
push
mov
hlt
pop
jb
out
lods
xorl
les
insb
xor
mov
push
ds
dec
sub
addr16
out
jmp
xchg
sub
push
inc
mov
leave
and
out
jnp
es
jno
inc
in
jno
push
cmp
hlt
insl
cmp
sahf
lds
test
jmp
inc
daa
push
pop
push
test
popa
xor
loopne
out
scas
subb
test
cld
mov
out
or
sub
mov
pop
mov
popa
push
fdivs
js
pop
xchg
les
ja
mov
shll
push
lcall
fs
mov
cmp
int
sbb
cmpsb
sbb
mov
inc
enter
popa
insb
adc
out
popa
add
jmp
inc
jns
cmp
mov
lret
fstpt
push
jb
fld
mov
cmpsb
jecxz
jmp
gs
out
jno
mov
nop
xchg
jbe
js
into
jmp
jae
aam
movsl
sbb
push
jecxz
imul
outsb
int3
dec
loop
movsb
push
outsl
insl
jae
into
incb
outsl
clc
lcall
loopne
push
cmpsl
fs
jae,pn
outsl
adc
bound
xor
out
sti
or
mov
popa
dec
jg
pop
in
lock
jns
xchg
shll
xchg
sti
xor
pop
and
shl
adc
xchg
pop
daa
jb
adc
jmp
push
pop
fldt
jb
xchg
jb
dec
jb,pt
inc
ficompl
jne
add
lret
dec
mov
cmpsl
imul
mov
cmp
jb
es
inc
dec
pop
outsb
xchg
add
cmp
and
adc
push
fsubrl
outsl
imul
push
test
insb
inc
push
fnstenv
fldcw
push
cmpsl
and
pop
into
pushf
xchg
in
cmp
jbe
rclb
arpl
and
dec
lock
jecxz
cmp
inc
les
xor
sti
je
sbb
xor
inc
imul
mov
sub
jo
cwtl
jnp
push
out
mov
and
adc
xchg
insl
fsubl
sbb
insb
inc
stc
pop
ret
xchg
add
pop
mov
add
adc
repnz
inc
xor
sbb
push
jecxz
daa
shll
push
sub
push
fs
mov
jecxz
outsb
jno
xchg
sbb
pop
les
and
inc
dec
fadds
ret
cs
jb
jge
in
sbb
pop
jae
in
das
gs
stos
push
outsb
pop
cmp
sbb
jno
cld
jb
add
cmp
dec
add
dec
stos
scas
jno
out
or
insl
and
in
sbb
icebp
mov
pop
into
idivl
and
cwtl
inc
int
in
mov
cmp
cmp
dec
out
mov
imul
lahf
sbb
imul
in
das
shl
cmp
imul
xchg
repz
imul
pushf
je
jp
notb
cmp
dec
enter
jne
mov
push
in
fmull
push
jecxz
stc
fcomp
pop
xchg
mov
test
ret
je
mov
in
mov
pop
into
fadds
addr16
stc
pop
addr16
lret
test
daa
stos
mov
jb
lea
mov
outsb
aam
imul
shlb
in
inc
mov
or
inc
jp
mov
pop
jae
cmpsb
in
stc
cmp
dec
push
dec
les
adc
pop
sub
les
jb
push
repz
inc
dec
mov
lcall
jbe
imul
cltd
loop
sub
aad
sbb
outsb
iret
mov
lret
xchg
jp
gs
adc
cmp
daa
shll
jno
jne
inc
fidivl
cmp
or
out
and
mov
lret
jl
outsl
stc
es
mov
cwtl
in
push
sub
add
aas
mov
mov
iret
lret
fstl
mov
pushf
or
lret
fwait
imul
push
xchg
jae
lahf
pop
call
xor
mov
cmp
push
popl
push
gs
imul
in
cmpsb
popa
cmp
push
lret
movsb
xchg
repnz
jg
imul
jns
push
cmc
push
sbb
jp
sub
stos
inc
jns
loop
dec
imul
xchg
xchg
fstpt
outsb
ja
fs
inc
jne
sub
fwait
addr16
sahf
bnd
out
icebp
cmpsl
jb
sbb
and
adc
jbe
sub
sbb
jno
out
bound
push
movb
mov
aaa
imul
ss
outsl
outsb
mov
sub
outsb
negl
mov
pushf
insl
pop
test
jae
push
aaa
test
mov
inc
test
sub
jae
xor
pop
xchg
push
jne
out
inc
into
or
mov
xor
std
sbb
mov
mov
mov
cmp
adc
and
mulb
mov
test
xlat
xchg
roll
add
xor
cmp
cmp
push
aaa
adc
jl
xor
cmp
dec
xor
pop
push
dec
or
dec
push
in
out
xor
add
sbb
and
lock
imul
and
adc
in
mov
inc
fadds
rorb
jecxz
cmp
enter
and
ret
jge
shll
and
xor
pop
lods
testl
lcall
not
gs
push
ds
lea
jnp
mov
sub
pop
loop
fstp
dec
hlt
inc
fnsave
ja
inc
fs
pop
sub
lock
jecxz
inc
ret
xchg
fidivrs
and
aad
pop
push
into
out
xor
jge
push
fstl
xor
fs
popf
and
mov
mov
fsubrl
and
fstps
inc
push
fcoml
adc
gs
sbb
and
shlb
jns
imul
insl
icebp
dec
stos
das
jb
or
jb
fbstp
call
jnp
out
mov
or
mov
or
jmp
mov
adc
jmp
dec
xchg
adc
add
iret
ret
push
sub
neg
cmc
mov
ret
and
insl
xchg
sub
and
add
das
jno
xor
sbb
and
insb
dec
push
adc
add
add
lcall
leave
mov
push
incl
stc
addr16
imul
xor
add
js
les
aas
and
jmp
les
lds
xor
inc
jl
mov
add
adc
or
dec
js
inc
and
sbb
sub
adc
add
mov
add
in
cmp
and
add
fildl
repnz
push
call
cmp
sub
adc
inc
sbb
add
call
pop
je
add
pop
pop
push
sub
mov
lea
mov
rep
rolb
inc
stos
push
push
push
push
mov
push
call
add
test
ret
add
mov
add
jp
and
dec
sbb
loop
fildl
pop
xor
enter
ss
push
mov
sti
mov
inc
sub
xchg
jg
and
movsl
cld
push
ret
sarb
lds
cmp
neg
mov
push
add
icebp
cmp
loop
add
or
push
movsl
add
or
and
dec
dec
jp
mov
and
inc
shlb
push
leave
or
adc
imul
xorb
out
inc
lds
xchg
cs
jne
in
or
sub
xor
jb
inc
and
xchg
add
jne
pushf
add
cmpsl
in
push
je
fsub
lds
pop
sbb
loop
test
dec
xchg
sarb
jp
andl
das
and
ret
push
sbb
mov
rolb
test
xor
sub
dec
inc
dec
or
dec
outsl
xchg
or
gs
mov
sub
imul
cmpsl
sub
jge
push
pop
ficoml
and
add
push
and
xor
and
ja
movsl
bound
mov
out
pop
jns
sub
cli
pop
and
fwait
pop
xchg
out
dec
outsl
pop
mov
ds
sub
nop
adc
in
inc
pop
push
in
lahf
orb
shll
xlat
aas
sub
add
outsl
popf
sbb
aam
insl
fidivrs
xchg
mov
test
arpl
outsl
sbb
pop
push
cli
out
mov
inc
inc
sub
sub
adcb
add
shl
jmp
cmp
js
insb
add
xor
xor
aas
rclb
inc
cmp
pop
lret
pop
and
jne
mov
pop
test
cmp
jno
inc
rcll
inc
fwait
shlb
fimuls
mov
scas
mov
add
idivl
push
dec
add
and
sub
das
adc
fs
test
mov
pop
and
jne
loop
les
xchg
ret
aas
sbb
add
addr16
jmp
add
add
jns
and
loop
cmpsb
fbld
loopne
lahf
loopne
inc
jle
test
addb
and
sbbl
mov
repz
mov
mov
dec
jmp
add
mov
decb
cmp
push
add
pop
fisubrl
xor
pop
push
mov
stc
xor
mov
inc
into
cmp
sub
scas
dec
in
repz
test
sub
adc
mov
adc
sub
mov
adc
mov
insb
pop
inc
inc
incl
icebp
add
stos
lods
xchg
jbe
push
pop
mov
sbb
lock
pop
push
call
jns
adc
and
pop
sahf
out
push
enter
jns
jmp
jns
out
push
movsb
adc
and
out
mov
out
sahf
out
adc
sahf
out
sahf
push
pop
pop
push
and
out
push
and
test
clc
call
adc
adc
or
fmuls
cs
aas
mov
incl
neg
mov
pop
push
insl
add
out
popa
jle
jmp
iret
push
push
pop
aas
xchg
out
or
ja
sub
lcall
in
mov
adc
adc
fldl
pop
xor
imul
push
push
in
in
push
pop
lret
sti
insb
insl
mov
sbb
ljmp
cmp
pop
lret
addl
mull
sahf
lahf
int
movsb
lret
mov
into
fisttps
xchg
shlb
sub
and
rorb
out
mov
add
jns
out
lea
mov
nop
xchg
xchg
lahf
inc
fidivrs
add
dec
push
sahf
or
cmp
sbb
jecxz
or
push
sahf
out
or
jns
out
cmp
adc
xchg
lock
mov
imul
sbb
imul
js
imul
mov
call
cmp
ljmp
orb
jno
add
loopne
rol
jno
sub
add
outsl
imul
loopne
or
inc
add
xchg
iret
xor
inc
xchg
mov
or
and
insl
pop
mov
xorb
inc
mov
push
push
mov
mov
push
inc
push
cld
cld
inc
add
lods
xchg
std
inc
repz
adc
sub
mov
or
pop
testb
mov
movsb
inc
adc
dec
xchg
test
sahf
insl
cmp
lret
xchg
mov
pop
sahf
out
repnz
rorb
ret
dec
insb
xchg
lds
test
add
add
cli
or
or
ret
pminsw
and
adc
cmp
pop
and
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
in
mov
jmp
inc
jno
xlat
xchg
inc
push
pop
add
add
inc
stc
mov
adc
mov
decl
js
add
loopne
outsl
loopne
jmp
xchg
test
mov
cmp
inc
add
add
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
add
add
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
add
add
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
add
add
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
pop
fldl
xchg
and
and
int
int3
sti
aas
jno
orb
jo
aas
pop
fs
dec
lea
add
add
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
add
add
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
add
add
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
or
movsl
jmp
jg
sub
jge
mov
add
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
add
add
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
add
add
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
add
add
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
add
add
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
mov
or
enter
fadds
jnp
test
insb
cs
inc
push
push
pop
push
inc
inc
inc
ficoml
mov
inc
dec
ja
adc
insb
cli
cmp
sahf
xor
outsl
pop
add
sub
rcl
xchg
mov
push
add
enter
push
js
add
add
add
mov
add
adc
add
decl
add
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
leave
sbb
into
sbb
roll
add
add
and
sahf
mov
sub
inc
rcrb
and
add
add
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
sbb
inc
add
sbb
in
addl
and
jg
adc
cmp
pop
insb
adc
sti
add
pop
xorb
inc
adc
add
xor
cmp
inc
loope
arpl
imul
sbb
jo
or
jb
push
push
or
or
adc
inc
sbb
jmp
push
add
popa
jo
insb
dec
bound
imul
xorb
shrl
pusha
popa
xor
push
lods
sbb
call
xor
push
xor
call
ljmp
mov
inc
add
dec
push
sbb
or
sbb
ret
adc
mov
or
sbb
sub
cmp
add
cmpl
je
jae
test
push
mov
movsb
cmp
jnp
cli
outsb
sti
insl
sbb
lea
inc
add
xchg
test
cmc
sbb
call
mov
dec
and
mov
mov
xor
push
call
adc
pop
adc
xchg
adc
sub
call
push
insb
jle
sahf
loope
xor
push
ficoms
leave
adc
add
ss
add
je
mov
rorl
inc
push
or
test
push
and
cltd
movq
test
push
push
inc
sbb
xchg
mov
es
inc
push
aas
aas
push
push
sub
scas
mov
sbb
adc
loopne
nopl
inc
or
inc
icebp
add
dec
cwtl
rolb
push
jmp
mov
repz
sbb
push
in
cmpb
xchg
fisttpl
pop
adc
pop
cwtl
or
pop
pop
pop
ret
add
add
xor
loope
fsubr
pop
sub
xchg
rcrb
xchg
mov
cmp
pop
push
add
pop
sti
xor
je
divb
pop
push
ret
mov
cld
sbb
xchg
inc
cmp
jecxz
or
push
jne
repz
dec
ret
leave
mov
nop
add
sub
cmp
pushf
inc
inc
inc
inc
adc
cmp
fadds
push
in
push
or
adc
mov
dec
test
and
sbb
push
or
push
mov
aas
shlb
or
mov
adc
iret
jge
seto
ljmp
push
cmp
hlt
hlt
mov
pop
fmuls
mov
rclb
aad
fstpl
dec
nop
push
add
add
pop
lds
push
push
push
cmp
sub
pushw
adcl
lret
je
cmp
add
ja
call
jecxz
clc
aam
add
or
add
lock
lods
adc
xchg
jno
pop
ljmp
or
cmp
add
mov
pop
aas
xor
inc
xor
or
xchg
mov
adc
enter
and
sar
rep
and
mov
sub
sbb
cwtl
movb
outsb
out
dec
adc
ljmp
lock
int
fs
adc
and
fstpl
cmpsl
or
push
push
dec
adc
into
jle
inc
lea
in
xchg
xchg
rolb
jo
mov
xchg
push
call
cwtl
or
pop
and
cli
stc
adc
cld
mov
movl
and
div
loope
mov
or
stos
pop
pop
aaa
sbb
inc
inc
stc
push
sbb
push
push
adc
inc
mov
ds
add
je
pushl
aaa
les
xor
jae
mov
adc
xor
aas
pop
mov
or
xor
jp
xchg
repnz
xchg
cmp
add
je
jns
ret
mov
add
dec
clc
xchg
mov
inc
sbb
and
call
and
xchg
sbb
mov
or
and
push
and
pop
inc
or
subl
movsb
xchg
pop
pop
rorl
jae
mov
testb
adc
cld
sub
xor
repnz
sub
dec
je
jmp
push
cwtl
pop
lahf
pop
adc
rolb
testb
stos
cmp
mov
inc
push
dec
test
or
dec
inc
push
xor
outsb
sbb
and
dec
push
inc
jnp
cmp
pop
outsl
pop
mov
add
inc
add
stos
ret
mov
xchg
jp
adc
jbe
xor
lods
jns
cmp
scas
addb
mov
cli
repnz
and
stos
inc
push
dec
xor
adc
mov
xor
fs
inc
xchg
inc
sub
out
or
xchg
aam
sbb
cli
xor
ret
hlt
push
push
ret
or
stos
or
mov
dec
lcall
nop
lret
cmp
mov
sbb
and
je
jns
jp
mov
push
outsl
imul
pop
jo
jne
push
push
fsubrp
arpl
pop
ffreep
adc
jae
insb
rep
aaa
lret
outsb
inc
bound
xor
fucomp
mov
dec
fstpl
sub
inc
cs
popa
insb
and
pop
popa
outsb
jns
enter
dec
movsb
aam
jne
gs
xor
popa
addr16
fadds
js
ja
fcomps
cmpsl
data16
cmp
js
sbbl
dec
inc
sbb
stos
mov
mov
dec
stos
mov
dec
out
repz
add
inc
rorb
add
add
testl
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
add
cmp
add
imul
or
add
inc
add
mov
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
