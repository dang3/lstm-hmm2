pop
add
and
add
mov
popf
stos
pusha
leave
fildll
push
dec
decb
jmp
out
pop
lret
lock
dec
mov
fld1
stc
push
insl
xor
stos
xchg
lret
pop
cmp
push
outsb
xor
mov
adc
cld
sbb
outsb
rorb
mov
xchg
xor
cltd
ret
cwtl
rorb
int
int
mov
filds
push
jno
lahf
or
mov
jae
sahf
mov
in
and
mov
pop
sub
or
push
adc
cmp
pop
js
dec
insl
xlat
and
fimuls
dec
xchg
push
pop
cmpsb
mov
in
idivb
inc
lock
xchg
mov
xchg
xchg
xchg
sbb
fidivs
pop
dec
push
and
mov
pop
adcb
mov
sbb
push
mov
pop
stos
pusha
jp
xor
add
out
or
shl
lret
mov
sbb
cwtl
lods
loope
or
in
inc
xchg
jge
movb
adc
aaa
pop
adc
outsl
pop
pop
jae
pop
push
mov
cmp
sbb
sbb
shrb
jns
mov
in
out
add
push
test
and
movsb
xor
scas
mov
popa
nop
push
and
jge
cmp
cltd
fstpt
and
mov
and
xchg
mov
fwait
sub
sbb
aaa
out
push
in
pop
lock
pop
loop
and
push
cwtl
jno
or
insl
loop
ret
cld
cmp
pop
dec
out
mov
lahf
jg
repnz
jo
enter
adc
mov
xchg
fdivl
loop
movsl
push
fcoms
in
ja
push
xchg
cmp
dec
pop
pop
test
mov
sbb
adc
cmp
dec
pop
jmp
popf
sbb
sub
aas
sbb
adc
call
jmp
lahf
or
iret
scas
add
sbbb
inc
mov
sahf
imul
lcall
mov
adc
pop
sti
push
mov
add
push
cmpsl
and
inc
shll
sbbb
test
mov
pop
outsl
pop
test
or
js
in
aad
out
adc
lret
mov
pop
cmp
xor
and
fcmovnbe
fcmovu
mov
fistpl
pop
xchg
leave
movsl
cmp
mov
fsubs
xchg
lret
ret
jbe
mov
mov
xchg
jb
mov
out
inc
mov
xor
popa
cmp
push
mov
add
lahf
dec
stos
pop
and
or
pop
aaa
fisubs
sub
sub
push
xchg
inc
std
ret
xor
sub
mov
cli
fists
ret
dec
mov
fs
pop
mov
dec
cli
mov
pop
jp
add
call
xlat
movsl
inc
iret
add
xor
and
xchg
leave
inc
mov
push
lock
outsb
adc
inc
rcll
pop
dec
mov
mov
pop
mov
mov
jb
and
movsb
add
aad
mov
cmp
lret
push
lcall
dec
adc
enter
adc
add
add
pop
push
mov
cmp
add
cmp
sbb
sbb
inc
test
popf
sahf
xor
cwtl
das
push
in
js
push
push
insl
push
mov
shll
rcll
imul
imul
fnstenv
adc
ret
cli
cmp
inc
inc
movsl
pop
addl
and
daa
sub
lock
arpl
fdivs
ss
push
pop
or
jae
and
push
movsb
xchg
loop
xorb
jae
mov
sbb
test
push
pushf
bound
mov
and
push
mov
popa
lods
shl
or
gs
inc
cli
imul
jne
pop
fstps
insl
jae
out
movsl
aas
cmp
nop
and
repnz
add
jge
aas
xchg
out
xor
xor
sahf
mov
sub
gs
test
and
adc
xor
lret
sub
xor
lahf
xor
cmp
rorl
test
cmc
or
jp
push
cs
or
dec
sbb
imul
js
aas
dec
dec
out
hlt
addr16
out
je
sub
xor
push
in
fxch
lcall
mov
jae
inc
push
imull
sub
punpckhbw
add
sbb
fadd
cmp
lret
arpl
sahf
movsl
dec
into
mov
inc
lock
pop
xchg
mov
test
jmp
cmpb
xor
in
add
rolb
mov
push
data16
shlb
cli
into
shrl
add
add
into
sub
inc
and
jg
mov
call
xchg
add
sti
dec
add
jbe
fadd
imul
cmp
push
xor
add
sub
adc
test
adc
insb
aam
jo
rorb
adc
push
lds
or
or
std
movl
mov
pusha
addr16
xchg
xor
push
addr16
add
loope
sbb
and
and
inc
js
mull
jecxz
out
mov
hlt
push
mov
out
addr16
sahf
ljmp
std
ljmp
cli
xchg
cmpsl
mov
push
popf
out
jmpw
push
out
std
pop
mov
notb
mov
jp
mov
cld
sbb
es
daa
dec
cli
call
mov
out
stos
sahf
sub
ret
mov
into
jo
mov
popf
or
add
ret
push
xchg
mov
aas
pop
mov
xor
fwait
clc
add
lret
or
dec
fistl
cmp
daa
lods
add
fcomi
daa
out
loope
imul
sbb
mov
fstps
pop
movsl
dec
mov
cmc
pop
int
out
xchg
mov
add
inc
inc
out
add
pop
stos
xorb
mov
jae
xorl
xchg
xchg
and
sub
jns
cli
mov
add
addr16
push
psadbw
or
xor
pop
addr16
mov
jecxz
cmp
mov
fstp
mov
fildl
cmp
popf
test
inc
lret
test
stc
jl
insb
test
leave
loop
or
scas
dec
arpl
pop
cwtl
mov
mov
aaa
lret
je
in
xor
in
adc
mov
xor
sbbl
es
inc
scas
repz
xchg
and
mov
into
cmp
cmpsl
xlat
push
sar
cmpl
jne
arpl
xchg
gs
mov
sub
jle
aaa
push
or
icebp
xchg
cmp
sbb
dec
xor
ret
fldl
adc
pushf
push
cmp
or
rol
mov
mov
and
mov
and
sbb
divl
stos
hlt
leave
add
mov
sbb
xchg
data16
xchg
dec
push
arpl
jbe
jg
cmpsb
inc
fwait
inc
and
int3
add
out
adc
cmp
xorl
scas
scas
inc
enter
cld
push
cltd
outsb
pop
sbb
xor
push
push
adc
lods
mov
leave
pop
jo
jge
divb
mov
popl
dec
shlb
push
dec
push
mov
loopne
mov
adc
cmc
inc
and
and
add
dec
inc
cmpb
push
out
dec
jns
scas
xor
std
ret
sbbb
add
dec
gs
mov
jp
cs
aad
stc
mov
or
add
lret
pushf
mov
push
push
pop
add
addr16
push
scas
adc
push
rcrl
aas
mov
out
add
xor
aas
sub
dec
cmc
dec
xor
setle
cld
push
jno
cmp
cltd
jns
add
aam
mov
inc
movsb
and
xor
cmpsb
adc
add
or
dec
jae
ja
divl
jg
sbb
je
xchg
lahf
xchg
mov
xor
mov
mov
xchg
jo
hlt
dec
stc
out
lea
push
orl
xchg
mov
dec
pop
xorb
test
inc
sub
jb
jns
lock
test
push
hlt
rol
mov
mov
mov
jb
scas
mov
push
mov
push
push
sbb
addb
sbb
pop
push
std
xchg
xchg
pop
sub
lods
movsb
inc
mov
jge
lret
sbb
clc
inc
xchg
sub
cld
mov
push
cmpsl
notl
jmp
pop
loope
dec
inc
push
insl
pop
push
inc
bound
lds
fistpll
cmp
cmp
scas
popf
mov
push
mov
repnz
mov
pop
imul
jb
lret
inc
test
fsubrp
and
lahf
lods
fwait
test
and
and
ja
test
loop
lods
add
lret
pop
sbb
and
neg
les
pop
xchg
ret
pop
daa
enter
mov
mov
dec
rol
arpl
imul
ret
outsl
lahf
popa
lods
mov
mov
arpl
adcb
sub
dec
aad
push
cs
mov
scas
mov
addr16
mov
sub
xor
enter
pop
pushf
mov
cmpsb
outsb
sbb
sti
jp
stos
push
sub
fisttps
ret
cli
or
mov
inc
pop
xorl
ja
ss
outsl
xchg
ror
sbb
shll
xchg
jmp
xor
sbb
gs
out
mov
in
lret
call
in
aaa
rorb
in
add
mov
add
xchg
cmp
lock
inc
rorl
cmp
sub
add
mov
sbb
mov
test
inc
cmp
loop
fnstcw
movsl
mov
cmp
pop
jp
jge
mov
mov
out
pusha
adc
mov
pop
sbb
sbb
repz
add
les
mov
imul
jmp
jo
jae
add
lret
aad
fldt
inc
test
and
aas
or
push
xchg
mov
out
arpl
xor
js
sbb
outsb
pusha
popa
inc
int3
or
mov
dec
and
rorl
mov
int
xlat
repz
lods
add
mov
insl
push
nop
jecxz
lcall
mov
cmp
fs
fidivrs
test
orb
xchg
cmp
stos
imul
inc
xchg
and
lock
add
es
int3
xorb
cmp
sbb
out
inc
rolb
fbld
mov
push
xor
arpl
mov
cltd
out
stos
and
shlb
jns
mov
pushf
in
out
repz
cmpsb
dec
xor
sbb
inc
xor
inc
std
sahf
mov
lods
sahf
hlt
inc
out
lods
sub
sbb
leave
mov
nop
add
or
mov
and
jle
ljmp
add
iret
in
inc
clc
pushl
or
adc
and
cmp
bound
addl
adc
and
or
sub
int3
pop
adcl
sub
popa
add
fisttps
xor
push
mov
mov
pop
repnz
insb
je
mov
cmp
clc
addr16
or
leave
out
sub
mov
ret
pop
adc
or
das
jp
xchg
js
ret
out
pop
cmp
mov
fbstp
xchg
pop
sbbb
push
mov
pop
fmull
push
cmp
xor
cmp
lcall
xor
or
xchg
cmpsl
xchg
jno
xor
out
sub
hlt
test
lret
jecxz,pt
inc
out
and
or
inc
stc
test
sbb
cmpsb
icebp
mov
sub
iret
fiaddl
pop
leave
and
jnp
repz
sbb
addr16
clc
fists
pop
sub
mov
js
jg
push
jp
mov
mov
loopne
push
push
sub
mov
cli
adc
dec
lock
jle
adc
rcrb
repnz
xchg
arpl
out
mov
out
es
lods
lahf
push
and
xchg
int
movsl
mov
test
mov
inc
and
inc
xor
daa
cmpsl
mov
push
inc
das
xor
jb,pn
loope
dec
psubb
inc
lahf
outsl
popf
xor
mov
adc
mov
dec
test
inc
and
lock
sub
pop
mov
sti
push
dec
pop
xor
bound
test
mov
dec
clc
rol
leave
outsl
in
test
lods
int3
inc
push
insb
add
push
push
jns
add
push
xor
sbb
int3
xor
mov
push
mov
push
lahf
mov
sbb
popa
dec
insb
aad
pushf
in
push
stc
idivl
and
inc
std
xchg
popf
mov
int3
lret
cld
push
mov
jns
outsl
mov
movsb
dec
or
fstpt
sub
dec
and
add
xchg
addr16
adc
gs
mov
and
fwait
pushf
out
inc
push
push
nop
jp
je
stos
and
out
sub
fidivrs
mov
cmc
enter
push
cmp
stc
popa
cmp
fdivl
mov
push
inc
inc
js
rolb
cmp
jmp
fsubs
js
call
dec
sbb
cmp
mov
aam
js
call
add
mov
addb
inc
adc
negl
das
outsb
push
xor
or
xchg
cmc
aam
loopne
lods
cs
and
xchg
xor
mov
dec
leave
cmp
ljmp
sub
sub
out
pop
jecxz
mov
xor
push
xchg
outsl
mov
out
sbb
mov
hlt
add
mov
mov
les
mov
sub
into
mov
icebp
test
jmp
leave
or
ljmp
dec
push
push
push
lods
aas
das
mov
xchg
imulb
pusha
dec
mov
push
and
inc
into
cmc
pop
dec
and
mov
inc
inc
jl
pop
adc
mov
adc
dec
lods
or
xlat
stos
sbb
fmuls
int3
test
in
outsb
adc
mov
mov
jmp
test
add
mov
jbe
rcl
int3
stos
mov
mov
popf
loopne
mov
into
and
xchg
data16
and
pop
adc
arpl
in
loopne
mov
push
in
mov
jno
xchg
push
jg
add
aaa
pushf
and
lcall
shll
inc
add
sbb
insl
mov
and
and
call
xor
dec
fistpl
cmpsl
mov
push
adc
addr16
lds
jecxz
test
inc
nop
push
adcl
jae
mov
adc
push
ljmp
fucomi
add
scas
adc
iret
jle
stos
inc
bound
add
xlat
popf
test
rolb
and
popf
mov
pushf
jge
mov
mov
jge
lcall
sub
fildll
inc
jp
ljmp
sbb
fiaddl
add
and
out
stos
sbb
clc
inc
push
add
push
ja
rcrb
shll
out
dec
inc
and
add
or
mov
cvtdq2ps
aad
pop
add
mov
and
lea
mov
xchg
loope
mov
add
cmc
mov
sbb
push
pop
and
mov
fs
dec
pop
add
inc
fistl
repz
pop
xor
push
imul
call
pop
je
in
and
mov
mov
jmp
or
rcrl
xchg
sub
xchg
jne
xorl
sbb
sahf
popl
fs
cmpsb
rep
cmp
sub
dec
inc
dec
stos
in
loop
je
pop
daa
jl
inc
rcrl
movsb
push
rcrl
insl
fsubrs
mov
mov
jmp
ss
pavgw
popa
add
jg
push
jo
jle
mov
ret
xchg
and
aam
push
sub
jmp
aas
fdivrl
pusha
loop
loop
jp
and
pop
int3
xchg
jns
pop
jno
push
lret
and
and
mov
cmp
adc
jp
pop
cmpsb
mov
or
popf
cli
ljmp
out
dec
jp
mov
pop
sub
cmp
push
push
dec
fidivrl
ss
call
pushl
lea
jmp
jg
rorb
add
fnsave
sub
in
call
and
jae
rolb
inc
cmp
negb
movsb
popf
test
inc
add
mov
clc
popf
es
cmp
daa
sub
stc
cwtl
jbe
jmp
jbe
and
ret
outsl
push
sbbb
mov
fwait
cltd
dec
iret
aad
movb
fs
mov
dec
idivb
push
shll
jbe
xor
popf
test
fsubrp
xchg
iret
rcll
out
xorb
pop
fadd
xchg
push
sbb
push
in
loop
and
aaa
cs
mov
xor
jne
sub
mov
pop
insl
cmp
and
ljmp
fisubs
gs
stos
push
and
and
int
or
sar
ss
sbb
subb
iret
mov
jo
adc
lcall
pop
inc
imul
fisttpll
lods
fmuls
sbb
test
lds
dec
jno
lret
xchg
add
xor
insb
sub
lea
push
je
mov
xor
jg
xchg
jecxz
fwait
pop
add
mov
out
or
stos
mov
pop
adc
jmp
or
push
mov
pusha
jmp
xor
xchg
jb
ss
add
sahf
cmp
add
ret
arpl
push
xchg
fs
mov
mov
xor
mov
xlat
pushl
enter
xor
dec
lods
jns
rorb
loope
ret
jle
xor
jno
pusha
and
xor
sahf
mov
shrb
jnp
pop
fnstcw
std
aas
rorl
popf
jno
iret
pop
ljmp
push
lods
bound
adc
rcrl
sbb
gs
lods
adc
std
xor
push
xchg
inc
fidivs
lret
rorb
pop
arpl
mov
out
xchg
sahf
pop
add
test
xor
cmp
call
cltd
inc
xchg
and
jne
out
dec
je
jmp
lods
fs
testb
inc
add
xchg
adcb
rol
jae
subb
dec
add
xchg
inc
jo
dec
test
pop
int3
fs
imul
daa
movsb
loopne
js
xor
fsts
repnz
enter
mov
scas
cld
shlb
test
stc
inc
lcall
push
pop
xchg
xchg
mov
nop
inc
push
xor
sbb
out
mov
stos
out
movsl
clc
xor
bound
dec
lret
pop
pop
test
sbb
loope
fs
popa
jge
mov
out
scas
sub
jp
inc
out
or
pop
stc
mov
cmp
dec
fldcw
sub
lea
pop
cmp
pop
push
outsl
sub
movsb
inc
cmpsl
out
jl
rcrl
pop
jmp
xchg
xchg
jg
fildll
push
mov
push
insb
lods
adc
lods
cmp
pop
xor
lods
pop
sbb
adc
and
jle
rcl
incb
mov
xchg
insb
add
outsb
stos
leave
gs
sub
push
jmp
data16
hlt
ret
inc
push
loopne
das
getsec
lods
inc
cltd
xchg
stos
push
das
pushf
push
jb,pt
insb
orb
jl
in
sbb
test
cltd
dec
mov
imul
jo
rcll
fbstp
in
aas
loope
mov
or
xchg
and
xor
adc
out
loope
sahf
cmc
mov
dec
xchg
enter
adc
arpl
sub
xchg
cmp
pop
loop
ja
fs
jle
inc
fbstp
ss
xchg
fisubrs
jp
fadds
pop
out
mov
pop
scas
xor
addb
cmpl
lahf
sahf
cmpsb
sub
push
sbb
pop
in
pop
mov
inc
iret
popa
push
push
or
in
and
dec
xor
xchg
out
pop
adc
cmp
dec
and
adc
adc
mov
mov
test
jnp
sub
pusha
cld
pop
nop
out
or
mov
push
fidivrs
out
mov
mov
sub
shll
jge
xor
mov
movsl
pop
mov
push
adc
lcall
test
frstor
pop
jo
add
fistl
fiaddl
inc
or
mov
cmp
cmp
lods
sub
iret
inc
sub
cmc
fiaddl
jmp
cs
add
jbe
addb
and
inc
and
xor
negl
mov
ds
pusha
iret
pop
inc
and
pop
jecxz
ljmp
sub
or
and
push
cmc
fcomip
loope
clc
jns
shrb
je
mov
push
fmulp
in
and
or
mov
stos
in
and
lods
add
cwtl
mov
popa
adc
mov
je,pn
call
adc
mov
rolb
add
andl
mov
test
pop
adc
mov
sub
test
mov
push
adc
jbe
leave
xchg
jmp
aad
out
jae
fs
and
out
in
lcall
mov
cmp
mov
lds
stos
push
sti
adcb
sbb
mov
into
fistpl
ljmp
sub
inc
mov
lcall
test
xchg
mov
inc
dec
adc
mov
sbb
mov
adc
hlt
mov
sub
or
cmp
push
cmp
mov
cmp
cmp
insb
test
fucom
mov
insl
cmp
sub
gs
stc
xchg
push
fcmovnb
into
xchg
adc
add
cli
nop
hlt
xorl
or
scas
mulb
push
scas
sahf
xor
xchg
adc
dec
xchg
push
lods
sbb
mov
cmpb
cmp
cmp
hlt
push
jno
or
push
adc
sub
aas
mov
addb
shll
xchg
test
xchg
imul
mov
push
push
sub
stos
dec
pop
mov
adc
add
jmp
js
sub
sub
and
and
pop
cwtl
pop
cmpsl
xor
xchg
mov
rclb
fisubrs
movsl
lcall
pop
shll
jo
fwait
neg
sub
mov
sahf
pop
pop
sub
lods
mov
out
adc
ljmp
fdivrl
dec
into
cmpsb
sbb
mov
addr16
mov
pop
dec
pushf
cld
lds
es
lret
add
sti
cmp
cwtl
mov
inc
cmc
dec
stos
xchg
push
xor
jbe
adc
ret
aas
imul
jp
xchg
pop
lcall
call
aas
fstl
pop
push
test
add
mov
leave
mov
or
repnz
xor
xor
jl
sbb
inc
cmp
in
xchg
imul
cld
shl
mov
jnp
fs
fisttps
arpl
jo
imul
dec
in
lahf
push
mov
mov
mov
iret
cmp
decb
cmpsb
js
testl
mov
mov
xlat
pop
bound
sbb
out
sti
mov
lahf
pushf
mov
outsb
sahf
mov
mov
cli
scas
and
push
xchg
jge
cmp
cmp
xchg
jbe
mov
mov
lods
cmpsb
xlat
fists
inc
jg
fisttps
call
outsb
pop
xor
addb
outsb
push
push
xchg
adc
leave
adc
test
mov
mov
mov
jne
sbb
gs
mov
cltd
test
pop
mov
ds
je
pop
aas
sub
lcall
jg
repz
lret
out
rcrb
paddw
dec
push
ret
push
push
pop
mov
push
popf
cmpsl
lahf
pusha
jl
push
xchg
or
mov
jbe
or
pop
test
cmc
sahf
sarb
mov
inc
adc
roll
mov
stos
sbbb
lret
add
loop
dec
fcmove
adc
dec
jb
idivb
xor
fildl
fprem1
cmp
cltd
fcompl
sub
xchg
icebp
cmp
rolb
mov
mov
cmp
pop
out
fisubs
xor
adc
add
jo
mov
or
leave
ret
mov
push
into
fnstsw
mov
add
xchg
xchg
fisubs
fistpl
and
pop
push
lds
out
pop
mov
mov
or
aad
sahf
dec
int3
add
pop
fprem1
sbb
test
add
jno
dec
dec
shrl
fisttpl
and
dec
mov
push
mov
dec
arpl
pop
jg
scas
jbe
or
xor
in
mov
rcrb
ficoms
insb
enter
xor
je
insb
or
lret
pop
push
dec
push
js
pop
ror
push
cmp
and
inc
cmp
imul
xchg
js
dec
sub
push
das
pusha
pop
add
add
adc
mov
fldl
sbb
imul
mov
test
scas
dec
cltd
je
lahf
into
loop
test
scas
cmpsl
stos
in
or
mov
mov
mov
ja
cmp
and
loope
loope
jae
mov
sbb
xchg
and
lock
arpl
ss
push
sub
das
sub
jno
adc
sbb
int3
inc
xchg
mov
push
pop
adc
movsb
mov
ret
outsb
or
add
mov
lcall
mov
or
dec
cld
lret
mov
and
lret
adc
test
stc
cltd
inc
inc
xchg
ds
aam
adc
divb
stos
pop
mov
pusha
std
jae
xlat
test
mov
cltd
dec
or
push
jmp
out
scas
mov
push
shlb
jge
or
enter
cmp
scas
leave
jmp
xor
sti
mov
dec
sarl
cmpsb
scas
or
dec
lcall
stc
ffreep
loop
stos
jae
mov
pushf
xchg
or
xchg
addr16
fnstcw
mov
es
xchg
es
pop
loop
testl
iret
test
jbe
dec
stos
setb
xlat
pop
xchg
xchg
cmp
jns
mov
jge
outsl
daa
imul
daa
lods
clc
xchg
mov
inc
mul
push
jno
lods
shl
aad
push
mov
sbb
inc
push
xor
ret
fwait
cmp
loope
sub
shl
adc
inc
add
add
cmpsl
mov
xchg
fistpll
jno
clc
ljmp
int
cmc
dec
inc
or
scas
sbb
hlt
ret
sbb
mov
mov
push
mov
mov
cmpsl
inc
xchg
in
lock
cmp
mov
sub
ret
int3
pop
data16
mov
dec
mov
push
scas
lret
insl
dec
push
insl
pop
xchg
std
mov
addb
add
inc
pop
lret
stc
fadd
popa
shl
jg
arpl
or
dec
leave
leave
pop
cltd
and
mov
pop
cmp
xorb
jno
cmp
push
pop
gs
mov
or
test
daa
inc
fwait
lods
shrb
enter
inc
cmp
mov
outsb
xlat
data16
jns
or
test
jg
aam
push
sbb
fcoml
mov
aas
clc
pop
sub
adc
or
and
bound
adcl
fiaddl
lahf
sbb
mov
mov
jle
sbb
xchg
lret
lahf
push
inc
pop
arpl
cmp
loop
push
sahf
xor
inc
sub
ljmp
nop
lret
sbb
mov
into
les
sub
inc
xchg
xchg
xor
rcl
out
loope
inc
jmp
mov
ljmp
ja
out
into
cmp
sbbl
aad
sbb
push
mov
sub
loopne
or
xchg
std
sbb
sub
insl
lods
push
ffree
adc
mov
xchg
inc
enter
repz
sbb
xor
jg
mov
stos
xchg
adc
mov
outsl
mov
xchg
xchg
fstpl
sbb
shll
push
and
jns
cmp
rcrb
jmp
shlb
loop
ss
lods
rol
dec
add
xchg
aaa
sbb
addr16
repz
add
data16
add
fcoml
pop
push
mov
test
int3
jnp
pop
enter
nop
rcrb
inc
jb
mov
fistl
and
dec
push
mov
inc
jp
outsb
aad
repz
fisttpll
je
lahf
sbbl
popf
hlt
js
fucomp
sub
push
pop
adc
add
mov
mov
int
stc
pop
testl
jecxz
mov
inc
sub
shlb
nop
jmp
or
cld
pop
and
pop
xchg
sub
add
push
jns
sbb
xchg
inc
mov
fs
cmp
xchg
insl
mov
xchg
xor
dec
or
and
jle
mov
jo
and
xor
aam
outsb
jecxz
inc
stos
insb
in
lods
icebp
sbb
jno
inc
adc
or
aad
in
addb
lock
daa
xchg
and
sahf
scas
jl
sbb
repz
pop
mov
sbb
dec
jbe
sub
cmp
push
imul
xchg
fidivl
and
clc
mov
sub
jae
xchg
jecxz
adc
and
or
lock
ljmp
ret
xchg
rolb
outsl
leave
fsubr
sub
and
std
dec
iret
std
push
scas
int3
cmp
jb
arpl
mov
pop
xorl
pop
lret
fadds
and
sub
jecxz
popf
movsb
push
fst
mov
sbb
pop
mov
xorb
lret
shr
packuswb
inc
push
pop
pop
mov
and
std
jle
push
mov
fs
mov
pop
fcomi
mov
jae
pop
xchg
sbb
mov
test
xor
cmp
js
leave
cld
ret
mov
cs
pop
xchg
nop
scas
xor
gs
sbb
in
ret
xchg
push
jb
dec
ret
mov
int3
inc
dec
ljmp
movsb
mov
fmull
mov
xchg
subl
cmp
sbb
repz
xchg
fisubrl
mov
fwait
mov
repnz
std
stos
clc
pop
xor
out
jp
jp
add
int3
push
dec
xchg
sub
movsl
stos
lret
jmp
mov
es
mov
mov
enter
pusha
and
mov
pop
repnz
mov
jno
pop
or
cmp
xchg
xor
insl
int
rep
push
push
loope
ss
aad
ds
out
lods
and
icebp
sbb
push
lret
sti
cmp
adc
add
loope
sub
sbb
ss
fs
xchg
in
inc
xchg
mov
mov
push
push
mov
xor
fnsave
ficoms
and
stos
loope
push
aam
divl
and
lcall
loop
sbb
fnstsw
lods
in
iret
push
movsl
subl
inc
dec
ret
or
mov
sbb
fisubrl
mov
dec
out
add
sbb
das
incl
jb
pop
cmp
adc
cmp
int
push
pop
imulb
lds
out
scas
inc
stos
call
adcl
cmp
cli
cld
mov
mov
aad
idivl
push
int
jp
fcoms
mov
push
sarb
push
stos
dec
lds
xor
aaa
scas
stos
cli
mov
popf
mov
pushf
mov
mov
dec
xor
ret
cwtl
dec
mov
xor
push
xchg
dec
bound
cwtl
jge
adc
xchg
mov
fnstcw
xchg
in
hlt
add
mov
pop
enter
leave
sub
rcrl
aad
jmp
testb
mov
int3
std
cmpsb
idivb
nop
data16
add
das
mov
loope
pusha
sub
roll
movsb
dec
mov
jb
dec
je
sub
push
mov
insb
inc
xchg
inc
mov
enter
pop
or
jno
ljmp
movsb
sti
sub
xor
ret
jmp
push
mov
cmpsl
arpl
movsb
in
xlat
jno
loopne
inc
cmp
std
sbb
push
call
and
mov
std
mov
mov
jne
bsr
and
add
int3
fst
jge
rep
loope
xor
orb
push
jo
int
sti
loop
dec
sub
insb
sub
pushf
mov
add
inc
sbb
cmp
mov
jo
add
pop
aas
jl
sbb
filds
mov
loop
dec
nop
mov
in
jge
int
test
out
int3
decl
iret
push
aas
add
insl
mov
sarb
test
or
mov
dec
cmp
mov
add
lock
add
and
fstp
ja
xor
pop
xchg
mov
jbe
mov
je
fnstsw
mov
jmp
or
xchg
push
cmpsl
loope
scas
out
call
repnz
lret
fwait
xor
sbb
dec
popf
add
ljmp
imul
rcrl
out
sbb
mov
add
xchg
sbb
roll
into
xchg
lcall
and
cmp
rcr
jl
and
out
jle
fstps
adc
cwtl
xchg
pop
dec
ja
pop
xor
adc
int3
addr16
daa
push
addr16
scas
jge
insl
lods
fiaddl
pop
pop
lcall
xchg
mov
pop
xchg
jo
mov
icebp
inc
insb
stos
push
adcb
scas
hlt
fcoms
into
adc
enter
xchg
int3
fwait
jns
call
fdivl
xor
xor
adc
repnz
imul
icebp
inc
iret
xor
sahf
mov
push
mov
or
clc
pop
pusha
in
push
pusha
std
sarb
ja
lods
ss
push
test
dec
mov
fsubrs
fs
insl
out
mov
into
iret
cmp
inc
pop
add
rcl
push
pop
add
dec
in
mov
mov
fs
sub
jo
adc
fwait
sbb
lods
pop
aam
fisttpl
adc
sbb
xchg
in
loop
push
fsub
addr16
sub
xor
xchg
xchg
fisubs
enter
dec
and
int
jne
ljmp
mov
fstpl
outsl
mov
mov
loopne
das
mov
inc
mov
mov
push
inc
mov
jnp
mov
jns
and
pop
fldt
jge
cli
adcl
mov
xchg
imul
or
sub
and
push
fdivrl
cmp
adc
cmpsb
popf
jp
jno
iret
shlb
lods
mov
outsb
inc
jb
push
pop
pop
adc
test
cs
mov
adc
xchg
push
addb
adc
in
stc
stc
arpl
inc
fisubs
scas
jne
pusha
jae
aam
pop
repz
es
aas
lcall
jl
or
dec
inc
jne
loopne
repnz
sub
add
int
jmp
jmp
ds
and
xor
adc
lds
cs
mov
in
leave
jnp
mov
pusha
sub
dec
xchg
in
outsl
aas
les
jg
repz
aaa
mov
es
repz
and
testl
and
jns
aas
gs
into
enter
mov
mov
xchg
push
mov
jp
lea
push
lock
jno
cmp
aam
and
dec
jns
in
dec
and
repnz
lret
sbb
mov
mov
fmuls
adc
cmpsb
out
pop
lds
in
push
ljmp
and
jo
nop
xor
sbb
jle
pusha
add
outsl
in
jnp
jl
xchg
xor
in
test
lds
inc
arpl
sbb
pop
jg
aam
mov
fisttps
pop
or
pop
cmc
fstpl
loope
aaa
jnp
xchg
shl
sbb
push
mov
inc
aas
inc
clc
xchg
fbld
dec
test
mov
das
or
inc
rcrb
lods
mov
mov
fisttps
inc
rolb
push
jge
and
fmuls
mov
test
sbb
fwait
std
xlat
adc
js
jl
cmp
xor
stc
sbb
push
push
xchg
enter
jge
lea
xor
and
or
fwait
loope
sub
incl
mov
nop
cmpsl
mov
dec
sub
hlt
sub
dec
mov
jle
add
dec
cmpsl
in
xchg
push
movsl
pushf
mov
jb
lret
mov
fidivl
push
fmul
iret
cwtl
pop
jno
mov
rcrl
xor
sbb
push
into
dec
mov
add
pop
cmp
lret
popa
xchg
jge
stc
mov
or
js
push
sahf
insb
add
faddl
sub
call
and
sbb
mov
sbb
int
xchg
sub
pop
mov
sahf
imul
stc
jne
lods
je
data16
nop
adc
xchg
nop
inc
addb
sbb
lea
cmpsb
lods
jle
push
or
sbb
jle
inc
andb
popf
fwait
inc
jo
mov
jo
lods
mov
ret
nop
sub
add
in
dec
icebp
mov
aaa
inc
repz
je
icebp
int
sbb
imul
xor
test
push
push
fistps
mov
stc
pusha
xor
add
int3
aad
cmp
or
jnp
adc
filds
mov
pop
sub
jecxz
jl
out
and
cmp
ss
lret
pusha
inc
cmc
jg
imul
jno
fcoml
push
daa
push
mulb
imul
sub
cwtl
pusha
xchg
sub
add
pop
sbb
inc
pop
loop
in
and
pusha
jne
or
add
xchg
bound
xor
icebp
jl
jecxz
in
cs
push
js
cs
mov
ljmp
pusha
sti
aad
jo
xor
pushf
ss
js
sbb
das
xchg
pop
sub
fisubrl
lods
jae
xchg
xchg
stos
mov
adc
xchg
imulb
xchg
stos
rcll
jge
jbe
jbe
cmp
in
jns
mov
xor
jnp
mov
mov
out
lret
mov
adc
jle
mov
push
or
sbb
xchg
jnp
movsl
mov
sahf
repnz
int
inc
repnz
cmp
sbb
jg
push
js
cmpsl
mov
dec
test
out
add
repz
hlt
dec
mov
int
push
out
push
dec
or
cmp
rorl
js
or
hlt
mov
out
mov
pop
or
jae
rolb
push
loop
xchg
push
lods
mov
jp
or
out
test
imull
mov
cmpsl
incl
xchg
aad
xchg
pusha
push
lods
pop
and
sub
dec
xlat
inc
scas
mov
mov
pop
xchg
mov
inc
xchg
dec
mov
ret
ja
std
out
xor
ss
sahf
cmp
fadd
inc
fisubrl
mov
loopne
pop
pop
xor
push
mov
adc
and
aam
cwtl
sti
jno
mov
xchg
jnp
lds
out
aaa
jne
adc
inc
aaa
stc
add
inc
insb
inc
push
dec
xchg
dec
cmp
adc
sub
sbb
or
test
das
sbb
inc
sub
inc
iret
in
rcll
xor
enter
mov
inc
jle
jge
lds
sub
into
inc
leave
inc
pop
lahf
ret
sbbl
test
outsl
repnz
mov
adc
push
pop
fisubrs
enter
xlat
aam
loop
test
addr16
jns
mov
fsubr
add
cs
popf
lea
cmp
outsb
push
ret
pop
lret
jl
mov
les
aas
add
sub
ret
addr16
sar
std
inc
push
enter
push
int
pop
out
mov
mov
push
outsb
jg
test
mov
mov
fists
mov
addr16
lcall
and
ret
mov
cmpsb
mov
cmp
cmp
push
imul
pushf
xlat
shll
aas
stc
popa
jmp
arpl
mov
push
push
xor
jge
dec
or
gs
add
insl
fcoml
out
inc
xor
xchg
or
sub
int
fidivrs
fsts
adc
adc
push
xchg
pop
jmp
xor
int
sahf
mov
jne
and
insb
mull
mov
ja
das
xlat
and
xchg
add
shlb
jge
lret
mov
test
jg
mov
jmp
jmp
sti
sti
orl
mov
xor
xchg
cmp
out
xchg
mov
and
sbb
dec
mov
xchg
subb
adc
stc
das
sahf
jp
incl
cs
inc
xchg
or
jmp
xor
out
fidivrl
dec
sub
aad
sti
jbe
adc
andl
fcmovb
mov
sbb
mov
pop
insb
xchg
add
mov
xchg
orl
rclb
fsubrp
xchg
mov
inc
fdiv
fcompl
push
sbb
scas
cvtdq2ps
ljmp
push
mov
cmp
jge
in
pushf
mov
or
fsubrl
cmc
sbb
cli
pop
adc
jb
push
push
fs
or
aad
xchg
aam
mov
ljmp
mov
aas
cmp
cmp
scas
lcall
mov
aam
jns
sar
cmpsb
sbbl
cltd
mov
fbld
cs
les
push
mov
rol
xchg
jae
xor
and
out
repnz
pop
jo
xchg
pusha
ljmp
ja
cmc
out
pushf
adc
push
mov
mov
or
popf
int3
jl
sbb
sub
add
js
mov
mov
jnp
sub
dec
xorb
adc
cmp
push
push
sti
ja
jno
dec
mov
inc
out
inc
int
sub
nop
sbb
inc
adc
push
imul
xor
lea
stos
call
mov
xchg
jg
outsb
enter
inc
jae
cmp
push
mov
dec
jbe
pop
shrl
add
pop
out
adc
scas
push
jne
in
xchg
clc
xlat
sub
or
xchg
daa
fidivrl
loope
stc
or
testl
add
sti
ret
into
mov
js
es
mov
push
mov
pop
inc
lods
jnp
pop
or
pop
jle
ret
mov
pop
lock
ss
ret
jge
ror
es
insl
sbb
cli
mov
cwtl
stc
andb
dec
loop
pop
lcall
movsb
and
paddw
iret
inc
xor
jnp
sahf
popa
cmpsb
lret
dec
aad
add
jl
pop
lock
push
sahf
imul
or
dec
dec
lods
cmp
mov
out
jp
mov
frstor
das
das
loop
add
mov
xchg
dec
jg
pushf
dec
jg
repz
clc
daa
mov
cmc
dec
orb
outsl
push
arpl
out
nop
pusha
loop
cli
push
fdivrs
mov
rclb
jno
jp
inc
sbb
dec
mov
xor
xchg
test
test
daa
xchg
pusha
mov
out
daa
shll
pop
and
cwtl
call
stos
inc
adc
lcall
outsb
inc
pop
mov
cmpsl
jno
cmp
inc
mov
pop
aad
in
je
out
fimuls
push
mov
fldl2e
shrl
xchg
mov
mov
out
lock
sbb
sbbl
dec
sub
gs
add
aam
cmp
in
fiadds
jne
mov
xchg
adc
jnp
mov
repz
pusha
nop
add
xchg
mov
repz
xchg
jno
leave
sub
loop
pop
push
push
xchg
mov
or
sbb
mov
xchg
stos
lds
sub
jbe
out
xchg
xor
jg
mov
int3
fistps
shrl
imul
in
dec
mov
mov
sti
pop
push
push
and
les
xlat
das
push
mov
aam
add
test
pop
outsl
or
out
outsl
mov
iret
sbb
sbb
pop
cld
push
fdivrs
lods
enter
add
loopne
cwtl
xlat
xor
xchg
icebp
sti
int3
fs
fwait
loope
fdivp
xchg
movsl
add
push
push
icebp
rcr
jns
inc
xor
mov
inc
push
inc
call
xlat
push
push
faddl
pop
mov
push
lret
les
out
sub
mov
cs
pop
mov
aam
ljmp
fwait
or
loop
cmp
xchg
lret
inc
hlt
xchg
repnz
out
shrl
pop
fxch
clc
cld
jmp
push
sub
cld
mov
cmpsb
add
mov
fsts
rorb
scas
or
xlat
fistpll
pop
in
sbbb
jns
stc
adc
pushf
pop
push
mov
xlat
xor
test
adc
and
lds
mov
dec
adcl
xchg
push
or
cmc
add
and
addr16
scas
ja
cmp
xor
pop
sbb
sbb
dec
fcmovne
adc
lret
xor
into
pop
jns
xchg
pusha
inc
out
popa
js
mov
arpl
push
sub
xlat
int
push
insb
push
xor
fcmovu
sbb
jl
mov
outsb
ret
in
mov
jb
je
or
jb
mov
insb
dec
push
adc
xor
test
loopne
pop
stc
mov
inc
ljmp
jns
mov
and
mov
imul
mov
adcb
mov
lea
loopne
out
adc
jbe
mov
jecxz
pop
jo
mov
push
jmp
xchg
jg
fildl
ljmp
dec
inc
push
sub
loopne
adcb
or
jae
pop
data16
subps
xchg
add
adc
xchg
pop
addr16
or
pop
dec
jnp
insl
in
xchg
lret
cmp
adc
and
pop
jo
dec
aas
sbb
in
cwtl
mov
fidivrs
repnz
pop
hlt
add
out
mov
cmpsl
pop
stos
mov
cmp
fistl
mov
jno
popf
arpl
xlat
dec
imul
mov
or
sub
mov
sbb
xlat
dec
cmc
jb
adc
popa
and
es
lods
mov
cmp
popf
outsb
xchg
movsl
push
jo
mov
add
inc
and
loop
push
jb
arpl
push
icebp
into
jbe
les
mov
and
rcrl
mov
jle
mov
add
mov
xchg
cmpsb
adc
clc
pop
sub
dec
mov
in
scas
mov
shll
push
push
jmp
xor
outsl
mov
add
cmp
add
and
mov
sbbb
imul
cmp
out
mov
pop
ds
add
into
lret
xor
xor
dec
fildl
and
nop
out
fildll
pop
add
mov
dec
or
xlat
push
outsb
jno
xchg
cli
add
xor
pop
sub
mov
loopne
xchg
movsl
pop
adc
ds
ss
ja
mov
mov
add
fldl
dec
cld
jmp
sbb
sti
sub
xchg
push
cltd
jbe
dec
inc
je
sub
mov
les
mov
nop
push
sub
gs
ljmp
in
sbb
dec
shlb
jge
lods
enter
decl
dec
push
test
xor
mov
push
ja
iret
sarl
test
xchg
sbb
lea
add
pushf
flds
sbb
mov
mov
sbb
hlt
adc
cmp
dec
mull
xor
mov
dec
fsub
sti
add
ja
rcr
and
xlat
xor
mov
sbbl
lods
jle
pop
jge
inc
add
xor
daa
sub
jmp
cmc
out
jecxz
xchg
cli
push
incl
cmp
popa
cmc
add
loop
xor
mov
jns
insb
imul
xchg
lods
loop
jmp
cmp
mov
dec
mov
push
aad
cmp
xchg
int3
pop
pop
pusha
test
mov
ret
aam
dec
cmp
sub
lret
fsubrl
sub
jl
ret
pop
cli
adc
notl
cli
xchg
sub
sti
jbe
push
add
mov
jae
lcall
sbb
xchg
xchg
roll
xor
stos
clc
scas
aas
push
xor
xor
and
out
xlat
out
mov
mov
icebp
test
lods
in
mov
insl
add
in
and
add
cmp
mov
dec
sbb
and
dec
mov
call
pop
sub
jnp
loopne
enter
pop
push
fildll
ljmp
in
in
fcomp
xorb
cli
pusha
xchg
pushf
inc
inc
std
aaa
and
cmc
mov
int
adc
cmp
dec
movsb
mov
mov
pshufw
add
pop
jns
mov
adc
or
mov
push
add
xor
mov
shrl
fwait
xchg
inc
jns
sbb
pushf
daa
inc
mov
sahf
sti
fldt
push
push
and
sbb
enter
jecxz
adc
mov
jbe
cmc
call
mov
rorl
orl
aam
inc
jecxz
mov
pop
shrb
mov
js
mov
insl
fwait
sub
mov
in
jnp
stos
lahf
cmp
imull
and
stos
mov
daa
fistps
mov
pand
cli
jae
xor
adc
dec
jae
ja
call
inc
pushf
inc
stos
cmp
icebp
das
repz
imul
loope
adc
xchg
sahf
xchg
mov
jbe
pop
add
or
sbb
insl
push
scas
dec
fldl
mov
xchg
pop
add
stos
bound
xchg
fldcw
cmp
mov
pop
loop
push
and
out
test
jb
pop
or
mov
pusha
fsubrs
inc
push
cltd
jnp
mov
push
push
jb
int3
xor
and
fstl
mov
inc
es
dec
inc
dec
es
imul
mov
movsl
mov
sbb
push
xor
ret
dec
js
movsb
pop
movsb
push
xchg
add
xchg
sarb
cli
mov
inc
dec
mov
cld
insb
sub
aaa
dec
ljmp
ss
ljmp
fbld
ds
aad
andb
lods
and
lret
adc
xchg
pop
movl
cmp
ds
outsb
js
cwtl
mov
ja
and
outsl
and
in
xor
or
popa
adc
dec
lods
test
stc
and
mov
out
push
rcll
push
adc
mov
outsb
xchg
daa
mov
nop
scas
lret
mov
pop
jle
jmp
gs
dec
lods
in
dec
lret
loopne
or
mov
push
xchg
ja
push
outsl
ret
dec
fcompl
add
push
arpl
iret
aaa
adc
pop
xchg
push
and
ror
jge
repnz
cmp
lods
loopne
stc
idivb
sahf
inc
cwtl
mov
adc
lea
pop
cmpsl
shll
pop
mov
insb
fldl
inc
jne
dec
dec
fwait
pop
adc
pop
lea
arpl
xchg
and
adc
sbb
jmp
in
cmp
push
xchg
iret
rcrb
adc
pop
sbb
mulb
cltd
rcrb
loopne
xorb
mov
popf
stc
sahf
adc
call
xchg
out
imul
sub
lcall
and
mov
in
cmp
leave
out
js
test
mov
and
push
adc
arpl
adc
nop
push
aaa
or
add
mov
sbb
mov
test
stos
shl
mov
inc
imul
in
js
add
adc
aad
fcmovnu
mov
sahf
pop
sub
jge
jo
out
cmp
notb
inc
push
adc
dec
fldenv
outsb
xor
nop
pop
and
mov
std
inc
mov
xor
push
aas
jno
hlt
jle
sbb
es
arpl
pop
shlb
into
sub
or
gs
mov
lods
xor
adc
fs
out
sbb
dec
push
rorb
jmp
int3
add
les
bound
js
jmp
popa
jge
lcall
xchg
mov
outsb
es
adc
push
lret
lock
test
aam
adc
and
pop
xor
mov
push
in
add
jb
mov
jno
lods
inc
sbb
mov
std
mov
js
je
les
aam
mov
inc
or
arpl
imul
movl
repz
out
pop
cmc
cld
xlat
mov
cld
cmpb
js
gs
xor
sbb
lret
pop
mov
add
call
or
stos
sbb
aad
sbb
push
out
arpl
cwtl
fucom
call
jge
test
fcomp
bound
push
fsubrs
dec
inc
fnsave
mov
scas
daa
cmp
xchg
mov
sbb
pop
test
push
ja
movsl
imul
mov
sub
xor
test
sbb
dec
xchg
or
dec
push
mov
loop
push
clc
gs
sbb
mov
aad
stos
push
test
bound
jp
mov
pop
in
cmpsb
orb
les
push
inc
mov
faddl
aad
sub
jns
movsb
insb
sti
push
cmp
lret
jmp
xchg
ftst
psubsw
dec
mov
in
icebp
pop
adc
call
pop
cmc
stos
imul
push
icebp
fiaddl
hlt
pop
fcoms
loopne
xchg
push
test
ret
fldt
dec
mov
jmp
arpl
jge
lods
mov
inc
mov
lcall
sbb
push
add
sub
into
shlb
adc
in
ret
in
pop
pop
or
and
rolb
dec
push
pop
adc
sti
das
lds
bound
mov
jg
jp
add
mov
stos
in
sbb
jp
lcall
mov
cwtl
and
cmp
out
sub
ret
stc
sbb
xchg
add
push
mov
stc
ja
mov
cli
les
add
in
jno
dec
mov
or
lret
shlb
add
or
imul
mov
lahf
arpl
mov
xlat
rcrl
add
je
nop
add
cmpl
xlat
adc
in
mov
shrl
adc
xor
fsts
int
push
lret
or
fs
mov
mov
repnz
repz
cwtl
stos
enter
mov
pop
mov
std
popa
inc
ret
or
mov
jl
iret
adc
mov
xor
iret
jno
fs
lods
push
aaa
int3
push
sub
enter
xchg
mov
sub
xchg
in
xor
shrb
pop
dec
divl
and
or
cli
popf
lcall
rol
sahf
cmp
repz
mov
shrl
rcl
pop
loope
movsl
pop
sub
daa
fucomp
pop
ficoml
xchg
xchg
fnstenv
push
mov
push
sub
push
fcoml
loopne
inc
jle
lods
scas
inc
xor
aam
jno
aad
add
add
mov
sub
popf
dec
popf
and
movsb
or
js
lea
ljmp
mov
outsb
sub
adc
cmc
pusha
ss
mov
mov
mov
pop
pop
inc
cmpsb
lea
cmp
pop
loopne
and
jle
loopne
out
jno
int
mov
movsb
inc
outsb
stos
inc
mov
xchg
jge
pop
mov
xchg
gs
ja
out
stos
sub
dec
cmp
aad
mov
bound
aas
push
popf
test
inc
fcmovne
inc
add
pop
pop
xchg
xor
gs
cs
test
fsubs
outsl
sti
sbb
add
jecxz
jbe
mov
and
pop
das
adc
outsl
sbb
into
xor
jmp
scas
mov
sub
dec
jns
leave
sub
inc
divl
fwait
cmpsl
icebp
xchg
shlb
daa
inc
orl
in
inc
pop
loope
push
inc
ja
nop
shl
call
lods
fs
or
mov
inc
xchg
adc
or
xchg
test
bound
movsl
mov
adc
mov
pop
add
sbb
mov
mov
jae
std
jb
popa
xchg
xlat
jo
push
lea
sub
xor
mov
icebp
xor
ja
call
andb
lret
rorl
imul
dec
sbb
stos
enter
adc
dec
push
jmp
enter
vsubpd
push
fs
push
mov
pusha
lret
into
dec
imul
pop
add
loope
fdivrl
sbb
push
outsl
clc
xchg
push
push
movsb
lods
in
inc
lock
mov
mov
dec
outsb
mov
pop
sbb
les
mov
mov
daa
les
xor
stos
in
popf
dec
es
in
test
sub
test
iret
jo
addr16
mov
or
fnstsw
lret
lock
repnz
mov
jae
xor
or
push
fisubs
inc
rorb
inc
push
adc
in
fnstsw
ljmp
adc
sbb
cmpl
xchg
mov
xchg
sub
jmp
jne
cmp
or
xor
sahf
pop
jbe
add
dec
ja
lahf
shll
lcall
je
sub
scas
cmp
push
loop
push
mov
outsb
test
pop
or
int
fwait
push
push
leave
daa
not
leave
lret
jle
and
insl
cmpsl
pop
roll
shll
xchg
xor
fwait
in
addb
add
sub
push
sti
push
xorb
addr16
or
imul
in
push
xchg
into
mov
xchg
mov
fdivrl
mov
ljmp
mov
jle
xchg
cmpsl
xor
and
cli
lret
mov
sub
lret
inc
fsubl
ret
dec
mov
fisubrs
aaa
pop
push
out
fwait
daa
mov
rclb
fists
pop
push
sbb
addr16
sbb
cmp
mov
mov
sbb
imul
out
test
xor
pop
and
in
movsb
sub
pminub
gs
psrlw
leave
mov
int3
add
orb
sbb
mov
pushf
stos
mov
std
cmp
xorl
pop
jno
pop
andb
shll
shlb
in
or
mov
jne
inc
icebp
lods
shlb
push
mov
fwait
subb
xor
shrb
jno
pop
pop
inc
orl
mov
sub
jge
push
shll
in
jg
imul
dec
sub
add
in
nop
xor
cmp
pop
mov
or
cmpsl
imul
mov
adc
in
jbe
les
fcomps
pop
fwait
sbb
aas
orb
jp
pop
add
xchg
outsb
push
lret
fwait
jno
push
sbb
push
js
jae
popa
adc
movsl
push
js
das
adc
int3
inc
outsl
lret
pop
sbb
xchg
cmp
aam
cs
xlat
pusha
std
div
push
mov
outsb
pop
mov
xchg
mov
arpl
sahf
mov
outsl
dec
inc
sbb
gs
jnp
into
iret
data16
and
fwait
popf
dec
sbb
adc
scas
stos
adc
stos
cs
jmp
adc
cmpsb
pop
mov
addl
shrl
xor
jns
mov
mov
push
xchg
sbb
out
movsl
inc
shl
ret
push
rep
lock
mov
pop
inc
popa
in
out
mov
inc
mov
sbb
jmp
sbb
aas
inc
cmp
and
jb
rorb
mov
out
sub
pop
dec
add
enter
test
arpl
hlt
cltd
sub
jle
loopne
in
cmp
mov
dec
mov
or
xor
aas
std
call
test
fs
and
push
push
inc
and
je
or
out
sub
stos
inc
jnp
jg
inc
repz
dec
add
js
cmp
fnstsw
push
xor
cwtl
fnstenv
repz
clc
cmp
in
fnstcw
std
mul
jns
xchg
out
test
xor
fwait
sub
loopne
add
hlt
pop
add
out
shrb
xchg
mov
mov
dec
arpl
test
lret
add
mov
xchg
dec
dec
sbb
mov
in
sahf
or
sub
mov
add
dec
adc
mov
incl
inc
mov
sbb
dec
outsl
fcomps
mov
jne
insl
push
mov
and
xchg
jecxz
mov
fnstenv
rcll
jne
dec
lcall
or
out
outsl
pop
mov
test
or
out
stos
aad
jo
xchg
orl
test
inc
cmp
push
fwait
jno
ret
aaa
inc
into
int
xchg
and
jo
pop
addr16
jns
shl
xchg
rolb
outsb
stc
lcall
aas
cmp
pop
xor
add
xchg
jo
rcr
jae
testb
add
insl
jmp
leave
dec
sub
push
pushf
dec
xchg
pop
add
and
lds
icebp
xchg
pop
test
aam
mov
mov
ret
pop
adc
cmp
clc
test
jg
inc
iret
xor
inc
mov
scas
sbb
cmpsl
pop
outsb
das
sub
push
sbb
xor
cmp
imul
lds
cmc
in
push
push
shrl
cmpsl
xchg
clc
enter
jb
xchg
cmc
sub
mov
dec
add
xchg
pop
xchg
mov
pop
in
mov
add
push
int3
pop
out
xor
in
fnsave
cld
enter
ljmp
adc
adc
cmp
mov
fsubrs
rclb
and
push
punpcklbw
imulb
inc
inc
popa
push
adc
gs
daa
xchg
xlat
jmp
data16
mov
test
inc
add
stos
push
sub
sti
movsb
lds
stos
mov
jge
iret
or
in
movsb
and
and
or
cmc
nop
movsl
cmpsb
ss
jmp
inc
int
cmp
jle
push
aam
les
lret
mov
cmp
out
mov
or
inc
lock
sub
cmpsl
popf
mov
addl
cli
add
xchg
imul
push
arpl
popf
addb
inc
fnstsw
jno
into
mov
les
lods
stos
jb
mov
test
out
mov
jge
fcoms
test
xchg
cltd
cmp
ret
and
scas
sub
xor
push
dec
adc
adc
xchg
jo
lcall
or
pop
out
je
jp
dec
pop
jnp
cmp
push
lahf
mov
push
or
in
fcoms
jne
jb
outsl
mov
dec
add
hlt
cmp
mov
movl
fnstenv
push
test
mov
mov
push
push
incl
pop
xchg
mov
lods
jle
jo
outsl
fdivrs
ljmp
pop
and
mov
pop
cmc
mull
pusha
adc
and
shlb
jbe
adc
insl
pop
lret
lods
sahf
jl
scas
shll
sahf
stos
out
stos
pop
mov
cli
inc
inc
frstor
push
lods
sub
cmpsb
jge
ror
mov
out
fcoml
fldenv
aam
rcrb
cld
push
in
sbb
jb
jae
cmp
xchg
icebp
xchg
inc
repz
mov
pop
mov
test
jae
lret
divl
int3
sbb
push
jmp
dec
cmpsl
cmp
aam
subl
ret
mov
scas
insb
lods
jmp
inc
rorb
mov
call
or
mov
repz
sbb
push
lods
pop
sbb
ja
cld
out
shlb
fwait
mov
push
mov
daa
or
push
jbe
mov
cmpsl
inc
push
movaps
sub
imul
add
cmp
inc
pop
pop
arpl
js
pop
jg
dec
push
cmp
testl
clc
aam
xor
movsl
mov
jns
fstl
cs
adc
loop
mov
adc
xchg
jne
mov
jmp
lret
mov
sub
subl
in
dec
sbb
arpl
xchg
lahf
lahf
pop
xchg
int
mov
stc
cli
cmpsb
ljmp
mov
mov
roll
sti
ficoml
jecxz
cmp
or
mov
adc
fsubl
dec
pop
jle
or
in
and
mov
mov
sub
sbb
pop
sahf
dec
inc
inc
sarl
insl
mov
mov
jne
adc
and
push
loopne
arpl
push
add
inc
adc
pop
pop
cmc
aad
mov
pop
xor
add
mov
enter
repz
cmpl
ljmp
in
push
mov
or
cmp
scas
xor
mov
dec
fidivs
mov
adc
xchg
jl
idivl
fsubrs
push
ret
push
cltd
cmc
cmp
in
jb
jle
jb
add
push
mov
mov
mov
call
out
je
push
flds
push
scas
int3
jle
and
cmc
int
lock
imul
mov
shrl
movsl
cmpsb
xchg
fwait
pop
test
dec
add
daa
jp
dec
fldz
xor
movsl
xchg
in
mov
loope
mov
pop
loop
stos
jmp
mov
ficompl
mov
inc
jle
sarl
xchg
cmc
sbb
and
xchg
in
popf
inc
or
mov
sbb
fstl
cmp
ret
pop
push
or
shll
repz
sbb
popa
fmuls
pop
in
push
mov
jno
popf
repz
shll
test
out
adc
push
aas
fdivp
cs
jge
add
push
mov
push
out
movsb
das
cmp
mov
ret
pop
pop
movsl
jae
jp
mov
sbb
lret
movsb
pop
push
outsb
push
into
dec
add
and
push
mov
adc
clc
nop
mov
imul
add
outsl
jno
sbb
xchg
jb
xchg
gs
or
push
rorl
arpl
or
sti
xor
pop
adc
ret
pushw
fwait
loop
scas
and
sbb
mov
add
mov
adcb
push
shll
into
cmp
push
xchg
cwtl
into
int3
sub
roll
stos
pop
push
mov
outsl
test
cltd
sbb
xor
imul
fldt
add
xchg
sbb
in
xor
lea
rorb
cmp
cmpsl
and
xor
mov
addl
or
mov
fbstp
fucomp
inc
loop
les
jg
shll
std
subb
scas
jo
pop
and
xchg
insb
push
and
pop
sub
mov
add
adc
jns
rcr
inc
adc
loope
add
outsb
add
dec
xor
iret
mov
cmp
mov
rorb
sahf
mov
out
incb
pop
dec
xchg
push
and
outsl
cmp
xchg
inc
jle
pushf
repz
loope
sbb
push
je
lahf
repz
pushf
nop
mov
xchg
lods
xchg
lods
fmuls
fdivp
cmpsl
sbb
jns
dec
or
loop
out
or
xchg
mov
test
stos
and
cld
pop
ja
stos
std
xlat
nop
cmpsb
or
mov
ret
xlat
ficompl
js
jo
movsb
lret
cmp
inc
push
and
out
and
nop
dec
jg
push
ret
xor
int
sub
sbb
inc
iret
shll
jle
aas
and
xchg
test
out
mov
adc
fsts
int3
repnz
xor
shlb
push
xor
es
stc
xor
xor
dec
cwtl
cmpsl
xchg
lock
push
cmp
sub
push
js
or
loop
sub
popf
stos
icebp
mov
xchg
aaa
ss
push
push
and
jns
cmpsb
lret
cmp
sub
clc
xchg
insb
inc
sahf
outsb
out
push
xor
cwtl
subl
or
repz
repz
mov
testb
std
rcl
xrelease
aad
mov
adc
inc
xor
dec
int3
outsb
cmpsl
int
mov
push
pop
popf
xor
xor
cwtl
fisubrs
insl
jnp
mov
jne
pusha
xor
inc
xchg
lret
mov
adc
xchg
jmp
sub
lret
add
test
jo
jns
mov
lock
fcompl
xchg
roll
rcll
mov
mov
and
sub
test
test
inc
dec
push
jmp
xchg
jmp
fildll
repnz
lods
push
aad
or
jns
and
pushf
dec
push
pop
sub
xchg
lahf
jl
or
add
call
call
pusha
adc
jp
dec
repz
lock
push
scas
ljmp
mov
shrb
sbb
popf
leave
jo
clc
inc
cld
fsubr
xor
push
push
inc
clc
out
lock
add
loopne
add
loopne
mov
adc
mov
push
dec
loop
pop
stc
mov
out
aad
loop
mov
cmp
fisttpll
ret
cmp
aad
push
call
mov
sub
insb
mov
adc
in
xchg
sarb
inc
and
adc
mov
js
scas
mov
and
xor
test
lahf
and
sbb
add
into
lods
xchg
call
shl
cmp
stos
mov
aas
jbe
mov
mov
pop
mov
int3
mov
cmc
xchg
pop
mov
ffreep
inc
std
add
rorb
adc
sub
sub
xchg
pop
mov
xchg
std
movsb
xlat
aas
cmpsl
push
jmp
addr16
ja
jecxz
repnz
popf
mov
int3
jo
and
jg
inc
jmp
mov
mov
inc
lods
xchg
or
das
mov
push
lods
pop
mov
inc
jo
dec
xchg
cmp
and
and
iret
xchg
jno
jo
arpl
sbb
fwait
mov
loop
movsl
jp
xor
ljmp
xchg
outsb
orl
add
scas
and
add
cwtl
pop
adc
inc
inc
or
sbb
mov
jno
xor
gs
aaa
ret
testl
cmp
and
jnp
fdivl
ljmp
inc
cwtl
push
and
jae
or
cmp
pop
push
test
jo
mov
out
mov
lock
dec
pushf
sbb
insl
setg
loop
jmp
je
aas
pop
push
aas
adc
fwait
arpl
sahf
mov
or
cmpsb
or
lar
jbe
jno
push
sub
sbb
mov
cmp
cld
adc
dec
call
outsl
mov
pmullw
or
sub
mov
js
test
sub
adc
test
fldt
mov
enter
jo
cmp
xor
leave
inc
roll
rolb
ljmp
push
rclb
jle
fwait
mov
xchg
outsb
push
push
rol
ss
mov
icebp
repz
dec
rcr
lea
cmp
lcall
cmpsb
out
push
or
fstl
or
jbe
mov
sti
mov
enter
add
mov
popl
mov
in
mov
out
and
ret
iret
imul
pusha
jnp
aaa
daa
int
imul
cmp
xchg
pop
nop
xchg
sub
in
stc
jne
and
imul
aad
pop
lret
fcompl
pop
xor
mov
pop
cmp
jge
shrl
lcall
mov
jbe
or
cmp
into
lods
add
shrb
pop
mov
sbb
xor
adc
aad
mov
or
cli
fadds
fcoml
ror
in
and
push
jmp
es
repnz
enter
mov
jle
addb
push
push
pop
nop
and
xchg
xchg
test
inc
loope
stos
push
sub
test
mov
pop
sub
xor
cld
insl
dec
int
push
push
and
add
jmp
imul
xor
inc
or
xchg
cmp
cmp
cmp
jmp
ret
aad
xchg
cmp
mov
lods
mov
pop
push
sub
jae
jns
push
test
incb
xchg
lods
enter
sbbl
cmp
into
or
ja
push
test
adc
and
jno
test
push
xor
xor
rorb
loop
pop
xor
divl
iret
jns
jb
adc
scas
jp
pop
sbb
lea
dec
xchg
repnz
push
mov
inc
mov
mov
cmpsb
jp
dec
ficompl
jl
movsb
xor
pop
mov
out
ja
das
jo,pt
xchg
mov
add
div
push
jo
push
xchg
jle
pop
sbb
sub
insb
sub
xchg
mov
cmp
js
popa
movsb
mov
jnp
int3
jle
test
mov
sbb
aaa
fistpll
inc
mov
movsb
lock
int
xor
inc
scas
xchg
fcoms
ds
fpatan
test
jl
and
jg
dec
or
iret
jl
mov
movsb
lahf
jl
adc
or
mov
xor
iret
jmp
pop
je
push
push
or
icebp
push
mov
repz
pop
xchg
clc
push
shrl
mov
pop
data16
loop
sbb
addr16
stos
xchg
mov
mov
xor
and
lret
jp
xchg
in
or
push
aas
pslld
shll
mov
lret
sbb
pop
aam
into
jmp
cmpsb
iret
push
mov
push
xchg
repz
int3
ret
cmp
jge
add
mov
adc
loop
aaa
ljmp
jge
mov
mov
or
or
mov
jns
pop
sub
xor
or
and
adc
add
mov
pop
inc
mov
imul
sbb
dec
loope
ret
int
into
inc
mov
roll
jecxz
std
push
and
mov
rolb
repz
dec
test
div
js
inc
mov
out
and
push
or
iret
inc
pop
addr16
xor
xor
aaa
xor
lahf
push
mov
xchg
in
push
push
cmpl
dec
cwtl
mov
pusha
scas
mov
popf
dec
or
xchg
js
or
mov
leave
mov
call
sub
sar
test
je
into
dec
orl
mov
and
insl
lret
movsb
add
mov
push
clc
xchg
not
mov
daa
lcall
cltd
sub
jns
std
insb
ret
aad
push
sub
pop
fwait
pop
fdivl
int3
cmp
cmp
or
mov
pop
xor
dec
and
add
dec
jmp
adc
shr
orb
shrl
push
imul
mov
pop
mov
jns
or
scas
push
xor
data16
xor
stos
ja
sub
and
xchg
xor
dec
push
cmp
fwait
xchg
sub
adc
es
cwtl
subb
sub
lcall
sbb
dec
data16
aad
sahf
inc
ret
les
and
xchg
push
cs
push
inc
das
xorl
push
jp
sbb
add
or
pushf
lds
mov
add
loope
mov
push
mulb
xor
and
insb
int
imul
sbb
nop
cli
sbb
mov
lods
enter
xorl
pop
or
shrl
adc
dec
nop
je
lret
or
push
je
sub
jecxz
cwtl
push
xchg
xor
mov
xor
dec
pop
dec
jp
sub
or
add
lcall
inc
and
pop
jno
jle
ficoms
inc
fcoms
xchg
inc
mov
jb
xor
inc
lahf
or
xchg
xor
mov
inc
sub
pop
mov
or
outsl
out
arpl
cld
and
sub
or
hlt
and
sti
inc
push
cld
jle
test
xor
xchg
fwait
xorl
jp
xlat
xor
aam
dec
add
xor
mov
aaa
int
pop
fs
jmp
ss
pushf
rdpmc
push
in
lock
sarl
mov
into
mov
mov
adc
xchg
es
pushf
rcll
dec
push
cs
jo
mov
es
sub
out
aam
mov
mov
sbb
data16
in
sti
movsb
mov
test
xor
test
imul
into
addr16
mov
push
cwtl
xor
insb
sahf
call
je
leave
add
cli
push
mov
mov
sbb
push
jecxz
sub
rclb
out
inc
mov
cmp
test
push
ret
xor
test
mov
pop
and
call
sbb
imul
xchg
mov
aaa
aaa
into
lahf
lods
push
and
loopne
sbbl
sub
xor
aas
lret
jnp
cmp
pop
addr16
subl
mov
xor
mov
cmp
out
add
jbe
pusha
shl
imull
push
loop
mov
fmul
mov
lods
dec
sbb
and
xchg
xor
movsb
mov
xchg
dec
pop
jns
mov
pusha
xor
sub
push
into
adc
mov
lock
add
inc
adc
addr16
xlat
inc
sbb
sti
pop
jns
stos
sub
aam
pop
mov
repnz
sub
mov
loop
dec
xchg
or
mov
sbb
jae
insb
pop
cmpsl
sub
es
sbb
cltd
add
bound
cmp
sti
mov
lret
xor
sbb
cmp
xor
shrb
insl
and
ljmp
cwtl
stos
dec
xor
pop
loopne
and
repz
dec
ds
dec
xlat
push
xor
stos
sbb
mov
mov
mov
dec
dec
in
xchg
push
out
dec
push
pop
xchg
je
cmp
insb
adcl
mov
sbb
push
incb
pop
xchg
xchg
cmpsb
add
mov
and
cs
adc
pushf
outsb
lds
push
jge
ret
lcall
rorl
push
mov
sub
fiaddl
inc
scas
pop
inc
inc
pushf
outsl
aad
movsl
std
or
mov
and
sbb
push
js
cmp
aaa
xchg
das
inc
inc
and
push
jns
inc
pop
icebp
mov
out
mov
mov
add
jmp
cmp
add
sbb
push
dec
add
popf
add
sbb
idiv
pushf
stos
je
mov
fimuls
pcmpeqb
and
jnp
fistps
sbbb
cli
jle
cmc
add
lds
inc
imul
fldcw
mov
or
or
inc
xchg
dec
mov
ljmp
jge
add
and
jae
bnd
push
mov
cs
mov
cmp
test
mov
fisubl
outsl
xor
cld
xchg
ss
outsb
push
popa
mov
fdiv
ret
xor
xchg
fsubr
jno
cmp
lds
dec
clc
cmpsb
fadds
mov
scas
stos
hlt
popa
mov
xor
and
push
jne
fstl
shll
dec
mov
ljmp
cmpsl
lcall
xrelease
jns
push
pop
jle
es
mov
dec
mov
nop
stos
cmp
mov
pop
testb
sbb
cmp
xchg
push
in
mov
inc
push
cli
shrl
and
in
stc
sbb
gs
mov
xchg
pop
test
jmp
out
movsb
sub
and
mov
sub
mov
ret
push
insb
or
arpl
cmp
call
xchg
jne
dec
add
cmc
inc
repnz
nop
inc
xlat
test
jmp
push
gs
repz
lahf
xor
add
and
sbb
lds
pop
dec
pop
push
mov
add
sub
cltd
sar
loopne
ljmp
popa
popa
jbe
data16
insl
mov
jnp
ljmp
ljmp
inc
add
sahf
inc
adc
sub
or
hlt
sbb
jge
jmp
and
sub
imul
pop
cwtl
mov
enter
pop
jbe
pop
pop
mov
mov
push
sub
aad
incl
jae
dec
imul
stc
leave
jp
in
pop
lret
bound
sub
xor
rcrl
sub
jbe
mov
inc
mov
aam
pop
adc
outsb
inc
adc
push
sti
push
std
adc
stos
rcrl
mov
mov
cltd
cs
lret
repnz
or
icebp
cld
cmp
sti
or
sub
out
cmpsb
dec
xor
lods
notb
dec
aam
imul
pop
nop
mov
pop
add
ss
lods
sbb
into
mov
push
loope
add
aas
push
imul
mov
lcall
cmp
xchg
ja
jae
mov
push
pop
loopne
mov
ffreep
pusha
cmp
adc
stos
in
iret
push
xchg
gs
jp
adc
loope
pop
and
rorl
jae
stos
inc
cwtl
or
push
je
jge
inc
call
cmpsb
mov
mov
popf
cmp
int3
pop
pop
sahf
and
scas
or
pop
cmpb
out
fistpl
sbb
cltd
mov
pop
sbb
lcall
cmp
nop
fisttpl
loopne
mov
pop
pop
lret
adc
adc
mov
data16
test
shlb
enter
xchg
aaa
ljmp
mov
pop
ja
cmp
lea
sub
popa
jnp
add
clc
xlat
xchg
notb
pop
ror
fs
dec
jnp
pop
push
mov
jns
mov
cmp
popa
xor
adc
sbb
push
and
in
popf
inc
sbb
cwtl
lds
mov
cs
mov
inc
flds
adc
pop
push
fwait
push
jge
inc
adc
pop
inc
aas
jnp
jle
cmpsl
pop
sub
js
pop
arpl
sub
es
mov
push
or
bound
popf
sub
cmp
mov
jo
pop
faddl
aad
pop
or
jbe
fdivrs
push
push
sub
call
icebp
sub
and
lret
fs
jl
pop
dec
mov
add
jg
leave
xchg
ja
test
jecxz
mov
and
inc
ds
ja
in
xchg
mov
int
and
movl
fucomp
cmc
pushf
ss
stos
add
and
and
out
sub
adc
stc
lock
cwtl
sub
xchg
xlat
pop
mov
in
inc
mov
sbb
roll
pop
inc
lock
or
fdivrl
xor
jecxz
sub
xchg
pop
sarb
xchg
mov
pop
fstl
xor
jns
pop
scas
mov
outsb
jnp
adc
adc
pop
test
jmp
mov
lahf
push
lds
mov
mov
icebp
clc
adc
dec
pop
dec
jae
fdivs
adc
gs
fmuls
dec
repnz
pop
das
shll
xchg
inc
lock
xor
rolb
push
lret
fldt
inc
lahf
pushf
add
sbb
jmp
test
push
pop
push
ret
sbb
pop
roll
aad
fldenv
sti
xor
jecxz
lret
jmp
jl
pop
xchg
mov
cld
dec
movsl
cmp
cmc
inc
mov
inc
fs
xor
cmp
xchg
cmp
stc
outsb
leave
cwtl
xchg
sbb
dec
inc
xchg
outsb
push
add
inc
addb
stos
rorb
jge
cmp
inc
lds
cmp
xchg
add
lcall
xchg
cmp
arpl
sti
cmp
jmp
lcall
push
or
les
mov
sub
jl
or
push
adc
lods
sbb
loope
add
repnz
ffreep
mov
and
pop
inc
lahf
aas
inc
arpl
cmp
jnp
xchg
mov
call
xor
inc
pop
rcpps
ljmp
call
or
dec
push
push
mov
ljmp
mov
xchg
jecxz
mov
mov
inc
movsb
mov
scas
fwait
push
dec
jmp
lahf
sub
xor
lret
dec
fistpll
lock
mov
aaa
xchg
stc
jl
sub
xchg
out
fdivs
scas
xor
subl
pusha
cs
dec
in
add
sub
xchg
mov
data16
aam
fistl
xor
icebp
stc
dec
or
mov
jnp
inc
push
mov
pop
cmp
ds
push
mov
fldl
mull
insb
pushf
or
xchg
subl
jge
loopne
xor
pop
xlat
aam
addr16
or
inc
dec
inc
inc
mov
out
sbb
push
mov
js
dec
jecxz
add
jae
fmul
inc
insb
xchg
jg
xrelease
pusha
mov
loope,pt
je
stos
data16
mov
std
mov
add
xor
xor
pop
sbb
xor
rclb
and
push
xchg
sbb
xchg
inc
insl
pop
sbb
repnz
fistpl
dec
lahf
repz
loope
pop
aaa
or
push
mov
sub
mov
and
shl
and
jnp
stos
cmp
bound
sbb
dec
lret
xchg
stos
adc
add
sbb
inc
pop
add
fs
gs
clc
adc
addr16
push
movsb
mov
out
clc
loopne
into
cmp
cmpsb
pop
xchg
int3
cli
ja
int
rolb
lods
repnz
rclb
insl
pop
mov
inc
clc
nop
add
mov
movsl
lds
and
repz
mov
cmp
push
mov
inc
mov
stos
push
fnsave
js
jbe
cmp
dec
sub
xor
xor
dec
mov
scas
stc
dec
aaa
out
mov
loopne
lret
jge
sub
sub
in
or
add
insb
movsw
jmp
js
adc
or
push
outsl
loope
in
push
push
or
lods
dec
jns
aam
jbe
pushf
out
bound
mov
push
jp
mov
popa
outsb
pop
hlt
loope
decb
inc
aad
and
sbb
mov
add
inc
arpl
sbb
pop
inc
dec
mov
imul
cmc
fsubrs
xchg
fildl
ret
push
push
repz
pop
lcall
sbb
negb
les
cmp
dec
xchg
std
nop
shlb
insb
int3
cmp
scas
int3
idivb
add
add
add
or
out
xchg
pop
add
sbb
add
cmp
in
movsb
arpl
push
or
xlat
xor
scas
mov
inc
test
ja
pop
jp
sub
mov
shl
lret
push
push
add
loope
aad
mov
mov
leave
adc
pusha
dec
and
loopne
add
movsl
movsl
pop
xchg
lahf
stos
push
popw
mov
sbb
mov
loopne
test
fwait
scas
mov
fwait
fs
xorb
or
adcb
add
adc
lods
loope
pop
mov
push
mov
leave
shrl
aad
lea
mov
movsb
std
lds
or
int
ds
dec
push
jb
jns
mov
dec
shlb
addb
xchg
cmp
out
sbbl
mov
mov
push
cmp
mov
into
lret
add
mov
cmc
test
cmpsb
shlb
pop
cmpsb
loope
int
repnz
mov
out
lods
mov
inc
sahf
or
shr
lret
and
jecxz
adc
push
mov
pop
aaa
mov
jne
jle
data16
lods
mov
jge
out
sub
daa
xchg
gs
arpl
mov
loop
lret
sbb
jae
and
cmp
xlat
cmp
cmp
and
push
dec
or
mov
filds
pop
fdiv
jge
add
adc
inc
lods
dec
mov
push
dec
aam
cmp
jl
lods
movsl
pop
into
mov
add
push
mov
imul
push
or
fdivp
test
fnsave
adc
test
orl
pop
adc
adc
push
loopne
mov
arpl
adc
scas
mov
inc
lods
sub
sub
dec
xchg
cli
dec
fwait
cmp
push
dec
data16
mov
xorl
out
es
pop
js
shrb
xchg
xchg
in
stc
inc
imul
sahf
dec
cmp
sarl
test
stc
aaa
scas
lahf
sub
add
adc
add
fistps
test
pop
xchg
je
sub
out
stos
adcl
dec
es
rcrl
add
add
mov
mov
dec
pop
and
cmp
outsl
out
mov
mov
cmp
dec
or
mov
stos
aaa
cmp
adc
push
jbe
dec
int
mov
mov
aam
mov
bound
out
sub
pop
inc
subb
cmp
fcoml
mov
pop
or
xchg
mov
cld
mov
mov
inc
pushf
outsb
adc
ljmp
imul
mov
push
push
cmp
pushf
hlt
pusha
iret
lea
lahf
outsb
mov
arpl
lcall
mov
movsb
lock
jge
lahf
nop
cmpsb
xchg
fidivl
or
cmp
cwtl
push
fistps
loopne
lock
xchg
test
idivb
ret
in
insl
jbe
lods
mov
lcall
paddb
inc
pop
repnz
or
jne
pop
fstps
xchg
clc
cltd
bound
inc
pop
inc
mov
daa
add
divl
mov
push
out
bound
ds
imul
js
imull
test
pop
scas
stc
cmp
out
repnz
dec
or
pop
aaa
sub
inc
test
push
mov
cmp
popf
pop
lea
add
js
or
ficomps
pop
adc
fmull
add
pop
stos
mov
js
inc
sbb
mov
mov
into
stos
andl
jle
mov
mov
ret
mov
shll
push
sarb
add
std
imul
dec
add
or
jno
stos
int3
adc
sub
test
cld
and
iret
push
call
sbb
push
inc
pop
cmpsb
ds
push
xchg
lahf
jg
jl
adc
movsl
mov
adc
pop
or
dec
into
sbb
adc
sub
sahf
push
mov
mov
pop
call
inc
pop
adc
add
ja
pop
and
inc
cmp
rol
inc
inc
push
mov
outsl
ds
mov
add
and
push
arpl
sti
and
lcall
inc
adc
sub
in
ret
sbb
push
aaa
popf
int
jnp
add
mov
add
pop
sbb
jns
arpl
jnp
stc
dec
enter
testl
xchg
stc
fdivrs
out
jmp
rolb
xchg
jp
jo
pop
scas
mov
pop
xchg
fdivl
scas
andl
fildl
ucomiss
cmpsl
repnz
xchg
lret
lods
inc
push
and
mov
mov
xor
pop
clc
and
enter
into
test
lds
mov
fwait
jecxz
fmulp
lret
jae
mov
iret
pop
push
dec
popa
sub
std
fdivp
data16
xchg
add
push
cld
fnsave
popa
andl
sub
pop
mov
aad
jle
das
rcr
dec
push
leave
pop
es
sbb
orb
or
push
sbb
add
cs
mov
xor
cmpsb
lret
shrl
mov
mov
or
xor
outsl
inc
push
movsb
movb
and
in
dec
pop
cmp
insl
mov
push
push
push
xor
jbe
nop
sahf
sbb
filds
fmull
mov
jmp
push
mov
pop
adc
push
clc
sub
ret
cmp
call
pop
daa
add
neg
dec
addr16
ljmp
outsl
scas
icebp
mov
mov
inc
sub
sub
outsl
shll
mov
push
imul
add
xchg
jae
cmp
xchg
xchg
fs
cmp
incl
test
fs
adc
lods
adc
inc
in
pushf
sub
sub
dec
push
jle
js
jno
or
pop
or
mov
aaa
push
mov
fstl
cmp
sbb
shlb
push
push
ret
xchg
leave
sub
pop
clc
data16
daa
stos
sbb
test
ljmp
mov
shrb
mov
rep
inc
insb
dec
icebp
xor
lcall
mov
push
popf
jnp
inc
inc
pushf
or
fcoms
rcrl
push
into
mov
fisttpll
push
xor
push
add
cmp
add
mov
mov
mov
mov
cmpsb
mov
test
scas
icebp
loopne
and
out
jmp
cmpsb
cmp
fs
or
mov
mov
cmp
jno
enter
inc
adc
lds
xchg
jmp
add
xchg
out
cmp
int
hlt
std
std
xchg
xchg
sahf
cmp
enter
adc
dec
sub
leave
mov
mov
sub
add
lds
fwait
or
ret
pop
dec
cli
sarb
pop
shll
jg
adc
sbb
lods
stc
push
leave
dec
jno
mov
and
pop
and
push
pop
mov
mov
and
mov
lcall
xchg
out
mov
cwtl
jo
mov
out
mov
shrb
jge
inc
inc
and
in
aaa
out
cmp
jne
sub
leave
mov
jp
add
or
mov
repnz
push
bt
imul
mov
adcb
pop
clc
push
adc
add
outsb
jne
inc
test
fdivrl
lock
fnstcw
or
pop
mov
mov
xchg
int
xchg
push
imul
adc
lock
xor
xchg
and
imul
sbb
call
in
outsl
xchg
cmpl
rclb
dec
ss
ret
pop
and
pop
out
dec
jb
cli
add
das
cs
pop
or
lret
dec
aas
testl
add
dec
cltd
pop
jle
xor
xchg
pop
lcall
fwait
jb
xor
mov
dec
adc
xchg
popf
mov
adc
fdivs
shlb
inc
sub
sbb
icebp
xchg
lods
js
call
rcl
dec
cmpb
lds
addr16
fldcw
data16
sti
push
out
daa
pop
mov
mov
jp
mov
mov
ljmp
mov
lret
cmpl
pusha
fcmovnbe
push
pushf
das
or
pop
jg
std
test
push
xchg
sub
fildl
cli
push
adc
pop
xor
mov
nop
mov
std
jle
sarl
jns
out
das
sub
mov
insb
test
inc
les
xchg
or
aam
repnz
xor
call
insl
cmp
xchg
shlb
sbb
push
sub
and
pop
rorb
adc
cmp
movsl
addr16
jmp
aam
pop
gs
xchg
lods
push
paddsb
cli
push
push
mov
gs
jecxz
je
in
sbb
and
mov
fwait
inc
xchg
or
xchg
mov
repnz
and
sub
in
out
mov
div
stos
add
in
cmp
jmp
mov
mov
xor
sub
push
push
pop
lahf
or
jecxz
or
sub
sbb
sbb
pop
xlat
and
mov
inc
pusha
cmp
lock
xor
xor
push
inc
push
mov
addr16
test
scas
adc
sbb
push
lcall
fdivl
cmpsl
mov
rcrl
out
push
pop
loope
xlat
rcll
mov
inc
cltd
sbb
cmp
jmp
gs
pop
cmpsb
mov
ret
or
scas
testb
cmp
dec
push
xchg
pop
push
mov
bound
pop
dec
push
and
sahf
testb
pushf
push
sbb
dec
rolb
push
pop
pop
cmc
push
daa
lret
andb
or
add
dec
iret
scas
nop
cmp
lret
mov
dec
adc
push
push
pop
ds
pop
stos
xor
dec
mov
cs
jae
jg
bound
xchg
pop
fsubs
mov
jae
sbb
ljmp
sbb
ljmp
push
lret
orl
add
in
mov
int3
mov
rcrb
add
imul
jae
insb
or
push
cmpsb
pop
pop
jl
inc
lret
fildl
adc
adc
stos
icebp
jno
rcll
pop
dec
adc
je
stc
clc
inc
mov
test
bound
cltd
xchg
mov
lock
and
mov
in
fistpll
fwait
push
bound
js
ret
jnp
mov
jp
sub
imul
xor
xor
outsl
repnz
sbb
sub
pop
xchg
xchg
cmpsb
pop
cli
cltd
dec
and
push
jns
sbb
lahf
inc
data16
cmpl
cmc
xor
aas
repz
rcr
gs
sbb
or
xor
xor
mov
cs
pusha
repnz
jbe
jmp
cmp
pop
xchg
loop
or
gs
fs
pop
xor
js
sub
clc
inc
cmp
mov
adc
push
in
hlt
pushf
outsl
jo
sbb
mov
jno
push
hlt
jge
xchg
ss
ret
lods
loop
xchg
ret
sbb
push
iret
add
addr16
aas
fs
mov
push
into
cli
adc
xchg
dec
xchg
and
sbb
das
fwait
and
mov
nop
ja
ret
and
pop
ret
push
xor
and
adc
outsb
aad
pop
rol
inc
cmp
pop
test
cli
add
stos
mov
cli
fisubrl
in
sub
pop
mov
clc
arpl
jp
mov
cli
adc
push
push
and
cmc
lock
sahf
sub
pop
rcll
sbb
sub
cmpsl
movl
jp
sub
sahf
mov
jno
mov
stos
ret
aas
xchg
pushf
jmp
push
jae
sbbb
lcall
daa
frstor
and
push
addr16
cltd
lret
lds
outsl
dec
adcb
sub
lods
xor
sub
xchg
pop
shrl
add
fldt
je
inc
inc
sub
gs
jp
ficomps
addr16
pop
adc
in
pop
xor
loop
test
sbb
popl
push
cmp
pop
pop
dec
fisubrl
push
add
push
pop
xor
je
scas
lahf
xchg
fcmovbe
je
adc
movsl
in
fwait
xchg
sti
int3
sar
add
dec
mov
imul
leave
dec
mov
addl
fildl
dec
pushf
add
inc
jp
mov
mov
cld
dec
clc
dec
xor
rolb
outsb
mov
shl
adcl
add
mov
mov
push
out
and
sbb
pop
lods
xchg
jmp
xorb
fdivrs
cli
dec
call
add
lret
sbbb
imul
rclb
lret
add
xchg
fmuls
aas
and
push
faddl
xchg
test
mov
loopne
mov
dec
out
gs
cmp
iret
pop
lret
je
testb
sarl
jne
mov
push
inc
out
pop
loopne
movsb
aaa
daa
test
lcall
push
pop
dec
shll
lea
sub
lods
cmp
enter
subb
and
xchg
adc
insb
adc
aaa
icebp
push
scas
xchg
mov
mov
adc
out
imul
decb
jno
mov
stos
in
insl
popa
or
adc
dec
roll
or
jno
pop
pushf
dec
pop
int
xor
call
hlt
vphaddubd
std
xchg
or
mov
mov
lock
nop
jae
jge
push
gs
and
cmpsb
xchg
mov
xchg
stos
mov
roll
mov
add
ffree
add
cli
lods
sti
lahf
inc
lret
jmp
sbb
or
lcall
fdivrl
mov
loopne
pop
out
or
out
inc
xor
in
pop
xchg
xor
aam
xor
stos
inc
cmp
jae
and
stc
xor
sbb
mov
rcrb
in
or
xchg
int
lahf
ror
arpl
pop
pushf
int3
lret
xchg
insb
inc
sub
and
sub
pop
lret
push
mov
mov
aam
out
jmp
cmp
mov
ret
pop
mov
sbb
jl
jmp
icebp
dec
rorb
out
push
pop
push
dec
xor
pushf
test
sbb
fwait
mov
fildll
push
push
lret
push
int3
mov
push
jo
push
or
iret
cwtl
mov
loopne
adc
outsb
subl
loopne
bound
ljmp
pslld
es
adc
cmpsb
int
adc
stos
lahf
daa
test
fldl
sub
sti
push
xchg
mulb
jns
mov
push
mov
and
in
addr16
ret
incb
movsl
dec
push
xchg
test
ret
movsl
push
xor
and
jo
jae
pop
leave
cmpsb
fldl
fcoml
adc
ffree
ja
and
vmread
fadds
adc
dec
insl
dec
lret
jp
xor
rclb
push
jp
push
pop
jmp
adc
jecxz
in
popa
ds
add
mov
xor
fidivl
xor
jmp
cmp
imul
add
rclb
xchg
xchg
cli
and
add
outsb
mov
popf
outsb
aam
ret
cmp
mov
fwait
call
je
sub
lods
or
cltd
push
sahf
mov
cmp
adc
pop
rol
adc
cs
lahf
fistps
dec
push
jbe
stos
sbb
in
inc
jge
ja
sar
and
fwait
clc
stos
push
sub
xor
repz
out
ja
wrmsr
xchg
jns
pop
movsb
sub
scas
and
popa
xchg
or
into
sbb
jbe
lcall
xchg
int
scas
cmc
sbb
inc
cmpsb
mov
push
xor
push
pop
xor
cwtl
out
jo
lea
mov
ds
in
inc
out
lea
sub
jmp
mov
cwtl
es
xchg
jns
lods
iret
aas
cmp
jl
sub
addr16
inc
rolb
pop
push
adc
fistps
mov
lret
jl
ds
mov
fcompl
dec
push
mov
nop
mov
shrl
jbe
jg
jo
sahf
fs
lret
fistpll
add
dec
cmp
test
adc
repz
or
mov
cmp
xor
int
adc
xchg
or
stos
xchg
pusha
push
adcb
cmp
ret
sbb
xor
and
jl
decl
pop
andb
mov
jl
cmpl
dec
into
dec
lods
insl
scas
add
jl
push
xor
adc
xchg
push
jge
pop
mov
lds
mov
mov
xchg
xchg
fbstp
or
icebp
inc
xchg
or
xchg
cli
jg
hlt
ljmp
mov
je
loopne
adc
add
push
push
scas
adcb
jg
loop
dec
sub
and
mov
mov
fisttps
sarl
iret
dec
inc
push
lcall
in
ss
adc
aad
dec
out
pop
pop
addl
adc
jae
jnp
dec
mov
cli
inc
out
int
cwtl
cld
push
ds
push
or
ja
js
pop
pusha
aad
inc
xor
pop
push
push
scas
xor
fldenv
or
stos
pop
xlat
xor
mov
xor
inc
dec
and
xchg
lcall
call
xor
fisttpll
adc
lret
mov
popf
pop
nop
fildll
shll
fwait
test
outsl
dec
xchg
mov
add
int3
mov
in
pop
popa
adc
mov
mov
out
std
add
ds
pop
fdivl
fimuls
dec
stos
mov
mov
add
pusha
sahf
xlat
push
aam
inc
inc
popf
cmp
fldt
sbb
decl
fwait
push
adc
dec
jge
fimull
das
xchg
add
sub
xchg
lahf
mov
outsb
cmc
xor
aam
xchg
int3
jo
inc
std
sub
lods
in
testb
jl
das
mov
rorl
mov
mov
in
mov
fs
js
mov
and
cltd
test
ds
pop
adc
mov
call
insb
mul
xchg
mov
push
stos
nop
push
inc
sub
push
jle
or
ss
xchg
inc
mov
adc
sbb
add
dec
aam
adc
aad
lods
mov
call
jae
insl
inc
testb
out
js
adc
xor
cmp
pop
test
mov
add
insl
sub
cli
decl
xor
mov
adc
jae
enter
repz
dec
es
dec
das
int3
push
or
adc
testl
lds
test
mov
pop
subl
js
push
and
fiaddl
shlb
into
sarl
adc
int3
mov
pop
adc
pop
xchg
jmp
int3
cmc
mov
lea
hlt
adc
ljmp
js
ror
inc
cmp
in
mov
or
adc
jmp
add
call
cs
cmc
adc
and
push
xchg
iret
mov
in
pop
adc
test
test
out
addr16
mov
test
sbb
in
ljmp
fs
inc
inc
push
incl
jno
orl
ret
rep
hlt
cmpl
or
jno
lods
dec
shll
aas
push
popa
xchg
mov
push
inc
jo
lret
mov
pushl
add
jecxz
test
repz
mov
push
xor
pop
nop
or
push
sahf
ret
cmc
repnz
and
jbe
fidivs
add
outsb
rorl
inc
cwtl
xor
cs
push
add
pop
sbb
imul
cmc
xor
pop
aad
fwait
push
or
ficomps
dec
xor
andb
pop
es
mov
aas
sbb
cmpsl
test
cmp
jb
and
xchg
inc
lahf
inc
out
orb
mov
fs
sbb
test
and
dec
stos
dec
pop
rclb
push
aam
daa
loopne
pop
cld
je
sub
out
push
and
pushf
fadds
xchg
mov
lea
dec
xchg
popf
mov
mov
xor
outsb
xor
ffreep
adc
pop
cmp
fucomp
icebp
lret
xchg
push
std
pushf
mov
push
dec
insb
adc
repz
mov
cwtl
xor
dec
data16
push
test
inc
and
stos
nop
inc
add
cwtl
pop
push
cmpsl
nopl
inc
ljmp
dec
jae
mov
mov
mov
push
arpl
mov
mov
call
jecxz
jle
repnz
outsb
in
inc
mov
add
daa
cmp
test
ja
cltd
and
rcr
in
test
cld
cmp
repnz
inc
fwait
repnz
fwait
add
xchg
sahf
fimuls
mulb
add
fldenv
pop
jbe
mov
sbb
aad
jb
or
sbb
xchg
mov
pop
add
dec
xchg
push
mov
stc
cmp
aad
pusha
ljmp
cli
je
add
vpgatherqd
xchg
divl
mov
inc
gs
stc
cmpl
lds
push
sbb
pop
aam
add
lcall
scas
dec
sbb
and
xchg
clc
xchg
xchg
out
mov
inc
mov
adc
mov
or
push
xchg
lods
add
inc
add
pop
and
out
sti
sarl
and
inc
xor
mov
add
in
mov
cmp
jle
inc
cmp
push
xor
cltd
push
outsb
sbb
ss
jnp
add
adc
leave
jno
adc
out
push
dec
push
xchg
pop
std
lcall
cmp
xor
and
dec
sub
jno
stos
sahf
or
inc
sbb
lea
es
adc
or
jns
pusha
outsl
leave
or
out
cwtl
inc
sub
addl
inc
testl
dec
xor
jo
add
ret
scas
out
out
out
adc
stos
inc
stos
stc
jno
push
gs
or
xchg
jge
pop
inc
repz
movsb
pop
cmp
repnz
xchg
rclb
loopne
xor
push
addr16
xorl
cmpsb
cmp
sub
inc
sub
jg
stc
cmp
outsl
std
cltd
jne
xlat
lret
ljmp
xlat
cwtl
or
xchg
rorl
sbb
sub
pop
xchg
fildll
push
mov
insb
jl
insl
icebp
test
or
push
fwait
push
add
jo
insb
fs
cmc
mov
mov
mov
fs
push
push
adc
mov
xor
arpl
and
clc
xor
xchg
stos
dec
imul
pop
in
aas
lret
rcrb
aam
or
jl
lods
stc
xchg
add
pop
xor
pop
aad
shlb
mov
lret
daa
pop
pop
adc
xchg
sbb
rcrb
mov
pop
fildl
mov
fiadds
sbb
mov
icebp
pop
stc
sbb
pop
mov
sbb
nop
scas
jecxz
out
mov
sbb
pop
push
hlt
in
mov
daa
xchg
lahf
push
jo
pop
jge
inc
scas
sti
inc
mov
xor
scas
jae
faddl
aas
cmpsl
mov
ret
mov
xor
pop
and
jo
dec
popf
into
ja
push
and
mov
movsl
cld
lock
push
mov
lock
ds
jne
loop
mov
loop
push
push
mov
dec
test
pop
insl
sldt
pushf
mov
nop
push
adc
es
fdivrl
cmpsl
nop
fwait
rorl
int3
cmp
pop
int3
pop
aaa
icebp
add
std
movsl
or
lret
and
xchg
sbb
pusha
out
push
push
ja
xchg
aad
movsb
pop
jns
pop
xchg
inc
adc
or
icebp
lret
mov
inc
sbb
orb
data16
aas
out
or
or
call
repnz
ret
mov
mov
jge
pop
jo
popf
cmc
cltd
in
xor
ljmp
sbb
sub
sbb
adc
mov
sahf
bound
jmp
sbb
xchg
loopne
sahf
xchg
pop
sbb
sbb
pop
mov
scas
dec
cmp
sahf
mov
push
sbb
jmp
adc
int
xchg
mov
call
popa
cmc
push
data16
mov
pop
decb
sbb
cmpsb
popa
xor
call
mov
mov
mov
jge
mov
dec
mov
jg
ds
lahf
sbb
stc
xchg
jg
mov
pop
xchg
cld
xchg
out
sbb
jmp
into
jmp
xchg
fimuls
fs
ja
fistl
dec
sahf
aas
hlt
mov
test
js
pop
insb
jmp
jno
jecxz
loop
and
and
or
lds
call
mov
jp
mov
and
jo
pop
sbb
cmp
mov
jp
scas
aam
insl
repz
inc
xor
das
outsb
ja
and
pushf
mul
xchg
xchg
nop
or
es
jl
aam
cs
push
xchg
push
jns
sub
mov
adc
push
int3
ret
xchg
repnz
xor
and
push
cmp
jmp
hlt
xor
stos
jae
movsb
pop
fidivl
addr16
movsb
xchg
sti
dec
xor
sub
out
lret
mov
es
aad
sti
and
mov
inc
add
inc
or
xchg
jae
mov
gs
adc
sbb
push
jmp
aam
rol
or
xor
lcall
cmp
ret
cli
scas
jl
sbb
adc
test
cld
dec
in
push
cwtl
jns
cmp
sbbl
les
xchg
ljmp
mov
pop
rcrl
push
cmp
push
lcall
popf
movl
scas
cmp
insb
sbb
shll
cmp
dec
push
mov
rcll
cmp
xor
jo
push
adc
cmp
cld
daa
rclb
enter
inc
lret
jmp
xchg
cmp
or
mov
add
insb
dec
and
iret
adc
push
ljmp
scas
in
insb
xor
add
xchg
mov
pushf
xor
pop
insl
pushf
into
out
fs
xchg
and
sub
push
aaa
sahf
add
stos
pop
hlt
out
lcall
inc
jle
dec
inc
xchg
inc
cs
imul
test
adc
lds
lock
push
in
fs
iret
sbb
aam
out
imul
cmp
xor
or
push
or
enter
ret
or
hlt
outsl
push
outsl
div
in
adc
scas
fwait
popa
pop
adc
cmp
inc
xor
push
les
hlt
movsl
imul
nop
loop
mov
and
xor
pop
jae
cs
xlat
js
or
out
xchg
or
or
push
sub
stos
sbb
adc
aad
mov
mov
mov
fcomp
mov
lret
dec
outsl
cld
mov
mov
push
cmp
fwait
mov
sbb
xor
js
push
pop
std
fcom
lods
sahf
push
lods
outsb
jbe
add
jbe
and
imul
fildll
data16
les
mov
push
movsb
int
scas
and
mov
enter
pop
push
cmpsb
push
or
imul
call
dec
test
mov
and
jo
das
les
add
or
cmp
add
in
inc
inc
mov
and
mov
inc
in
adc
add
inc
into
push
test
xchg
insl
outsb
nop
pop
mov
clc
jmp
push
imul
adc
pop
mov
push
test
in
jl
gs
mov
mov
xchg
stos
push
cld
aaa
add
iret
sub
fld1
add
and
pop
ljmp
adc
mov
push
mov
pusha
test
inc
dec
sub
hlt
clc
add
mov
pop
inc
lcall
dec
dec
mov
pop
jne
aas
cmovno
jnp
pop
inc
leave
jge
shll
lahf
sbb
cmp
dec
or
ret
xor
aas
jae
shll
arpl
mov
add
push
xchg
mov
pop
or
jno
sbb
jle
sbb
cli
ljmp
sub
clc
xor
filds
call
fisubrl
dec
leave
dec
pushf
sub
or
adc
push
push
sub
popa
cmpsl
or
xorb
sbb
mov
sahf
sbb
stos
pop
call
lods
dec
mov
aaa
push
out
pusha
movsb
cmpsb
andb
nop
repnz
cmc
sub
dec
movsl
gs
xor
pop
outsl
movsb
std
mov
dec
jl
mov
fwait
dec
push
jmp
inc
rorb
lcall
insl
mov
negb
push
mov
and
xchg
push
fisttpl
arpl
int
push
push
rorl
mov
pop
cmp
in
jecxz
in
xor
fstp
cli
add
xor
xchg
add
add
mov
add
rclb
mov
dec
mov
push
dec
int3
stos
ret
xor
xchg
pop
imul
subl
xchg
je
sbb
mov
out
shl
adc
xchg
popa
xchg
out
xor
add
mov
jmp
sub
test
mull
mull
mov
add
sub
jno
jne
sub
add
xchg
and
mov
mov
adc
cmp
inc
aam
xchg
or
sbb
insl
mov
mov
jge
ljmp
add
mov
pop
cmp
fists
adc
inc
push
mov
mov
test
test
add
push
jg
cmp
cs
stos
cmpsl
or
pop
call
roll
loop
aam
push
sbbb
dec
bnd
popa
mov
lock
jns
nop
jno
js
and
push
sbb
or
push
adc
mov
adc
sub
inc
xchg
movsb
adc
and
loope
std
xor
inc
shll
lret
jnp
jle
sbb
popf
jo
lds
mov
hlt
andl
xchg
outsl
dec
popa
int
jnp
adc
scas
sarw
fwait
pop
sbb
xchg
sub
push
mov
xor
outsl
test
fmulp
fmull
xor
xchg
insb
stos
imul
mov
jo
iret
cmp
lret
mov
jno
nop
xchg
mov
pop
pop
orl
xor
aam
mov
add
pusha
inc
and
xchg
xchg
jecxz
sub
cmp
ds
in
notl
xor
or
xor
out
sub
sti
sub
and
xchg
sbb
mov
nop
pop
add
popa
cli
push
pop
in
pop
inc
add
pop
pusha
imul
lods
and
sbb
pusha
adc
inc
mov
pop
ret
icebp
addr16
xchg
mov
xlat
jno
imul
cmp
cltd
mov
cmc
daa
lock
divl
pop
addl
mov
dec
inc
call
mov
adc
scas
push
faddl
repnz
aam
fnstsw
leave
add
adc
incl
dec
or
mov
jno
lcall
or
movsb
les
xchg
and
repz
add
imul
xchg
sub
test
call
js
push
ss
and
pop
mov
jae
pop
loop
jns
je
jae
sub
or
call
xchg
sbb
in
xor
and
adc
sar
dec
push
and
cmp
sti
xchg
roll
psrlq
int
int
push
test
dec
orb
bound
scas
push
mov
lods
jecxz
enter
clc
stos
xchg
outsb
shlb
out
aad
imul
lahf
pop
push
xchg
fcomi
cmp
push
sub
lods
lods
adc
mov
xchg
roll
int
push
mov
cmp
adc
fstpl
mov
push
mov
xchg
and
pop
mov
mov
add
xchg
push
leave
loop
ds
mov
incb
fmull
arpl
data16
jp
dec
xchg
push
pusha
stc
mov
mov
loopne
mov
ror
scas
xchg
mov
jle
and
iret
shll
arpl
sbb
in
ljmp
mov
jne
xor
or
jecxz
adc
pop
cmp
jecxz
or
das
xchg
pop
sub
xorl
sbbl
sbb
mov
data16
sbb
cwtl
add
push
test
dec
scas
mov
sub
push
dec
jns
stos
or
loopne
movsl
jmp
lds
fsubl
pop
cmp
addr16
outsl
dec
dec
call
jmp
pop
pushf
fcompl
dec
dec
fldenv
fs
adc
les
sti
mov
in
add
pop
mov
hlt
dec
dec
or
adc
ja
adc
adc
mov
lods
cltd
into
xchg
push
dec
sbb
pop
inc
jg
test
or
jmp
out
shlb
mov
cmp
pusha
in
sub
out
cmp
and
cwtl
imul
sti
inc
lcall
test
jb
add
fdivr
cs
repnz
movsb
sub
or
adc
xor
xlat
lcall
in
pop
sub
js
xor
push
sbb
popa
repz
push
adcl
test
stos
pop
ljmp
rorb
push
es
adc
xor
xor
hlt
mov
xor
scas
repz
mov
pop
pop
xchg
inc
push
cmpsb
xchg
pop
xchg
mov
jmp
in
loop
pusha
sbb
cmp
add
add
int
cmp
idivl
std
std
dec
and
sahf
cmc
enter
cmp
sub
cmpl
inc
clc
jge
xor
inc
mov
mov
icebp
int3
sahf
test
aam
mov
cmpsl
mov
test
xchg
shlb
push
jl
in
js
xchg
adc
pop
gs
fmuls
or
jp
das
inc
pop
cmp
dec
scas
ffreep
sbb
mov
loop
sub
fnsave
cmp
or
popf
jno
sarl
lods
jns
out
xchg
loopne
loope
loop
push
fs
or
pop
add
jg
out
dec
cwtl
lret
inc
inc
rolb
xor
sar
jae
orb
and
js
lods
mov
xor
add
or
pushf
mov
adc
testb
mov
push
test
lahf
push
negb
into
and
jo
sbb
dec
es
gs
jo
ljmp
popa
xor
movsl
cmp
in
movsb
mov
mov
or
adc
mov
xchg
movd
xor
jbe
xchg
ja
out
xor
aaa
mov
jne
cltd
movq
xchg
nop
sti
xchg
addl
pop
mov
mov
aas
and
popa
mov
aad
mov
mov
bound
sahf
sbb
inc
pop
icebp
das
cltd
je
adc
adc
push
movsb
jb
shlb
inc
dec
sbb
jns
and
inc
and
fmull
insl
pusha
pushf
jmp
outsb
jnp
je
aas
dec
or
push
push
scas
or
jnp
sub
sbb
adc
lods
mov
sbb
leave
popf
movsb
and
je
mov
movsb
add
movsl
jne
dec
aaa
scas
mov
ror
xor
add
test
adc
lret
mov
sub
aas
scas
dec
cmpsl
mov
cs
pop
xchg
popa
enter
sub
mov
adc
in
out
cmp
push
mov
sbb
lods
ds
aam
mov
cmc
jmp
repnz
adc
mov
mov
mov
push
test
push
cwtl
mov
push
stos
lea
clc
in
pop
out
test
cli
sub
popf
ss
push
imul
dec
scas
push
dec
sub
push
mov
mov
xor
sub
mov
adc
scas
enter
push
jbe
sbb
lret
mov
jg
inc
out
mov
push
arpl
lods
test
cmp
xor
xchg
jmp
add
push
jl
cmp
pushf
mov
mov
dec
imul
roll
xchg
sbb
out
mov
inc
test
pop
mov
xchg
dec
xchg
cmp
push
lock
imul
mov
lods
mov
rcrb
xor
jp
cmp
mov
jle
dec
outsl
pusha
adc
inc
enter
pop
mov
and
inc
jge
mov
mov
movsb
jbe
push
xor
push
push
push
xor
lods
das
sti
jp
sub
mov
into
push
mull
mov
or
xor
into
inc
xchg
pop
gs
stos
popf
push
inc
aad
sub
mov
arpl
add
bound
pop
pusha
out
movsb
lret
cmpl
leave
cmpsl
repz
cmc
xor
xchg
sete
scas
xorl
lahf
test
pop
dec
and
mov
and
rcrb
divb
adc
add
insb
clc
cmp
leave
negl
inc
ds
mov
mov
es
ret
mov
lea
push
out
aaa
jnp
aas
push
push
outsl
or
in
xor
dec
sbb
inc
jnp
xor
outsb
lea
push
inc
sbb
xlat
xor
lret
insl
daa
shr
in
pusha
mov
arpl
fwait
rorl
fistpll
enter
out
mov
nop
andb
cli
ja
into
xor
out
adc
adc
sbb
jno
sti
insb
add
xchg
sbb
mov
lock
inc
mov
in
movsl
add
sarb
stos
jmp
std
mov
js
mov
and
jo
xchg
arpl
mov
xor
mov
lcall
sub
or
ret
inc
pop
mov
mov
mov
cmp
mov
sub
in
pop
ret
testb
xchg
inc
mov
ja
call
addb
nop
scas
mov
int
push
jns
popa
scas
pop
lods
out
jg
jp
adc
mov
mov
ja
popa
scas
xor
je
adcl
fildll
mov
mov
xchg
out
sub
and
dec
pop
jb
inc
fwait
imul
dec
sub
mov
pop
ja
adc
mov
xchg
inc
dec
sub
vmovlps
insb
mov
pop
dec
lds
stos
xchg
shl
jno
add
out
xchg
push
adc
int3
mov
mov
push
cmpsb
les
inc
or
mov
sub
pop
adc
fistl
pop
cmp
ficompl
mov
iret
mov
fwait
push
and
stc
xchg
dec
mov
in
cmp
add
pop
add
lret
out
or
push
daa
or
sti
loop
sub
movsb
loop
or
add
inc
lcall
adc
mov
xor
fldenv
mov
add
push
inc
divl
mov
mov
roll
stc
adc
cs
lods
jp
adc
ds
lds
pop
lea
je
mov
pop
pop
int
mov
mov
gs
mov
sbb
mov
xchg
xor
jmp
les
or
xor
xchg
movsb
mov
push
ret
sub
push
cmp
mov
add
and
loopne
inc
or
mov
cmp
xchg
cmp
hlt
mov
dec
ficoml
mull
ret
test
pop
push
fisubl
outsl
xchg
mov
loop
xchg
dec
out
jns,pt
adcb
pop
sub
jge
sbb
ret
pop
push
popf
js
xlat
fdivrl
insb
in
nop
adc
adc
push
lds
dec
xor
xor
jbe
push
adc
xchg
lahf
jnp
sahf
mov
fsubrl
add
js
rolb
repnz
sbb
shlb
out
push
add
int
jle
jno
push
and
xor
adc
movsl
mov
jmp
pop
or
test
mov
or
cli
imul
mov
jg
jecxz
cmp
out
xchg
imul
mov
cmp
xlat
movl
insb
inc
es
out
pop
mov
xchg
adc
mov
jnp
movsl
ret
stc
data16
fs
pop
clc
enter
in
and
adc
addb
xchg
mov
in
pop
inc
cmp
or
push
fsubr
and
in
gs
cmp
mov
sahf
pushf
and
lods
dec
test
jne
push
mov
cmp
add
sub
or
ja
mov
mov
pusha
mov
inc
xchg
rdpmc
lret
iret
fwait
mov
cmp
int
dec
loopne
inc
add
ret
jecxz
and
retw
iret
mov
sub
mov
arpl
mov
inc
pop
fldenv
mov
mov
cmp
shll
or
cmpsl
pop
sbb
loope
mov
pushf
mov
mov
xchg
and
aas
ror
pop
jne
mov
aam
jbe
mov
inc
xor
cmp
inc
std
imul
fstpt
wrmsr
test
in
fiadds
add
fstpt
mov
jp
rolb
daa
cltd
clc
lods
ret
adc
rol
jae
repnz
pop
xchg
lea
lahf
add
pop
jae
add
sbb
cmpsb
sbb
cmp
sub
cmpsb
movl
or
repnz
inc
into
idiv
mov
out
aas
fsubs
loope
fs
outsl
mov
iret
mov
jae
and
mov
es
jmp
mov
shl
jno
out
out
xchg
aaa
pop
and
movsb
imul
xor
cltd
and
loopne
je
clc
iret
cmpsb
sbb
add
negl
jo
inc
or
lahf
addb
pop
dec
sub
jp
stc
lock
mov
jecxz
sbb
sub
pop
xchg
sub
cmp
into
loopne
jge
push
mov
loopne
pusha
hlt
out
jecxz,pt
xor
push
xchg
mov
mov
cmp
mov
push
inc
dec
fstl
xchg
add
sbb
rcrl
pushf
leave
ficomps
and
push
ljmp
push
dec
or
push
xor
pop
mov
cmpl
sti
dec
push
sbb
insl
pop
push
cli
jmp
jp
jne
jmp
and
cmp
push
rorl
push
mov
adc
sub
out
out
arpl
bound
subl
pop
lods
lods
push
jl
ret
loope
push
repz
imul
pop
shrl
sub
sub
ds
mov
arpl
sub
push
in
lods
jmp
in
fwait
ret
add
setbe
leave
int3
repz
out
jno
ljmp
addr16
add
push
inc
std
pop
mov
cmpsb
mov
ret
ss
mov
notl
std
xchg
adc
sbbl
ffree
adc
popf
mov
push
mov
mov
pop
data16
jmp
in
mov
int
sbb
inc
cmpsb
aas
jecxz
repz
mov
xor
cmovl
mov
std
icebp
pop
test
popa
je
xlat
loopne
pop
ja
inc
imul
fnsave
nop
mov
mov
jae
lret
pusha
jae
loop
dec
in
push
xlat
push
jecxz
out
data16
cli
inc
add
cli
mov
mov
cmc
xchg
shll
jnp
push
pop
not
cmp
xchg
hlt
adcl
xchg
mov
jb
jecxz
aaa
and
popf
sub
xchg
mov
mov
cld
or
or
imul
dec
ja
xchg
into
mov
les
mov
adc
arpl
mov
xor
iret
jb
sub
mov
dec
addr16
jne
inc
clc
lahf
pop
sub
and
cmp
push
dec
xchg
jae
dec
mov
jmp
mov
nop
mov
lahf
int3
sbb
gs
jno
out
mov
mov
or
aad
jno
pop
push
fildll
popf
mov
in
push
adc
sbb
rclb
or
and
ret
sbb
in
mov
je
scas
mov
arpl
inc
sbb
inc
sbb
shrl
cltd
mov
jne
adc
pop
jmp
push
subl
movsb
ds
popw
sbb
mov
stc
pop
add
sbb
decl
clc
push
cli
and
or
xchg
xor
loop
add
push
stos
mov
mov
stos
repnz
mov
stos
in
insb
pop
dec
push
sub
jp
int
lods
loop
dec
call
mov
inc
cmpsl
adc
mov
mov
sub
mov
cmpsl
imull
pushf
rcrl
data16
xchg
popa
mov
ret
rcll
push
pop
push
cmc
in
mov
sub
popa
mov
hlt
addr16
cmp
jle
push
arpl
outsb
aas
cmp
mov
aaa
pop
daa
sbb
fmuls
push
mov
push
dec
pop
mov
mov
mov
lds
leave
fmull
sub
ds
mov
icebp
int3
bound
pop
fidivs
xchg
adc
and
mov
lds
shrb
daa
cmp
sub
out
pop
cmpsl
rorl
jp
jo
cltd
adc
xchg
packssdw
adc
pop
mov
jecxz
jnp
out
adc
rcrb
or
push
clc
xor
fs
xor
push
sbb
jle
jns
mov
cmp
divb
mov
cmc
and
mov
leave
jp
mov
pushf
rclb
insb
insb
adc
dec
mov
in
mov
push
mov
les
dec
movsb
add
cmp
mov
fstpl
jne
fwait
pop
popf
mov
test
movsl
push
aas
mov
push
fwait
sbb
mov
roll
sahf
push
fnstcw
lret
subb
pop
je
and
sahf
rclb
mov
loop
js
mov
dec
xlat
jo
inc
jno
xchg
xor
push
lds
pop
movsb
mov
addl
lahf
cmp
and
sbb
cmc
push
sarb
enter
push
stos
sbb
sub
test
dec
and
xchg
sub
adc
mov
ret
xchg
enter
jns
pop
pop
sbb
sahf
fiadds
jae
dec
sbb
inc
lahf
dec
std
sti
mov
loope
dec
mov
mov
ja
push
repz
mov
push
push
jae
das
inc
add
inc
sub
mov
sahf
mov
pushf
add
pop
xchg
aad
inc
shll
pop
fwait
mov
ljmp
cmp
popl
icebp
push
pusha
and
clc
jb
test
adc
push
mov
cmpsl
mov
adc
push
ja
mov
pushl
mov
dec
add
fstl
rclb
lcall
sub
pop
cli
or
popf
lods
sbb
xchg
pop
cld
push
test
aas
rolb
mov
pop
or
mov
xor
leave
add
pushf
sub
cmp
xor
ss
insl
jge
jl
dec
out
sbb
outsl
nop
xlat
shlb
sti
fstl
shll
fistpl
or
testl
mov
mov
fs
pop
fimuls
pushf
push
nop
and
arpl
inc
in
dec
test
jns
push
cmpsl
or
in
ljmp
jnp
lds
mov
loope
xchg
lock
ljmp
mov
pop
push
add
fnstsw
fildl
pop
dec
nop
and
nop
stc
dec
or
and
cmpsb
shll
mov
mov
insl
pop
inc
repnz
out
fmull
dec
push
pop
mov
push
repz
clc
mov
sti
pop
sub
ficoml
jge
lock
out
mov
cmc
lds
mov
adc
mov
pop
sub
jecxz
mov
xchg
adc
cmp
fldenv
pop
jp
scas
loopne
mov
mov
or
push
movsl
fmuls
lods
ja
ljmp
cwtl
insl
push
xchg
xor
dec
xor
push
jno
shrb
arpl
fadds
pop
push
cmp
mov
aaa
sti
push
ljmp
sub
and
mov
fisubl
stos
add
and
das
xchg
cmp
dec
jle
pop
test
lds
les
jns
insb
fldenv
pop
push
ret
out
push
mov
or
cmp
xchg
insb
mov
sub
push
xlat
out
jae
lahf
jl
pop
xchg
jb
lds
lods
imul
fcomps
nop
mov
pop
xchg
mov
mov
add
mov
fisubs
inc
push
xchg
out
and
mov
cwtl
and
cli
xchg
and
xchg
dec
jp
loope
dec
push
cwtl
sub
add
pop
and
sbb
and
outsl
jnp
inc
fstpl
fsubs
and
xchg
fiaddl
das
cmp
or
xchg
pop
lods
jbe
lods
movsl
inc
addb
sub
sub
call
sub
cmpsl
mov
mov
out
cmpsb
std
imul
aaa
or
mov
xchg
lods
pop
push
and
cltd
xor
cmpsb
in
or
sbb
shr
std
sub
icebp
addb
pop
test
xorl
add
jbe
jl
fdivl
push
sti
addr16
or
mov
lcall
mov
add
sbb
sub
adc
shlb
jns
enter
and
cli
xchg
pop
mov
xchg
adcb
ret
mov
mov
push
adcl
pop
add
pusha
inc
cmp
repz
jmp
jns
xchg
fwait
ret
idiv
sub
sbb
out
xchg
pop
mov
inc
xlat
mov
testb
xor
cmpsb
jg
inc
lret
sbb
pop
sub
shrl
lret
jge
mov
cmp
cmp
addl
pop
cltd
mov
repnz
ja
cmp
push
or
popf
mov
push
cmpsb
cmp
pop
in
js
add
lds
mov
add
mov
fld
aaa
jb
push
lds
ja
add
sbb
sub
jmp
stos
pop
mov
js
jno
or
rorb
ret
cmp
and
mov
mov
sub
fildl
jp
daa
inc
sub
dec
nop
mov
jmp
js
or
mov
push
inc
xchg
ficoml
fnstcw
scas
jp
inc
jp
and
frstor
cmp
lcall
pop
push
jp
loope
insl
shlb
js
mov
cmp
xor
mov
or
mov
aam
negl
or
xor
dec
in
adc
repnz
dec
mov
cld
mov
xor
sub
mov
adc
scas
jns
and
and
pop
or
mov
sbb
jge
jle
mov
rorb
cmpb
popf
add
or
test
mov
mov
xor
or
outsb
lcall
imul
addl
aad
xchg
push
movsl
mov
mov
and
lahf
lods
cmp
mov
jmp
ret
cmp
sub
pop
insb
clc
xchg
fmull
pop
dec
inc
cmp
fidivl
jge
add
mov
adc
jno
push
repnz
pop
int3
rclb
mov
aaa
cmpsb
jle
into
jp
fcomps
lret
xlat
xor
adc
push
pop
fwait
stos
fsubrl
sbb
data16
das
roll
adc
pop
and
inc
push
cmp
xor
in
xor
cwtl
jle
adc
loop
mov
add
int
rorb
inc
lock
mov
mov
pop
mov
xchg
push
inc
sub
aas
pusha
pushf
jb
movsb
dec
cmp
roll
fs
sbb
dec
dec
movsl
scas
scas
pop
sbb
push
scas
inc
stc
sub
sub
or
cmp
add
jae
push
inc
lods
loop
daa
dec
scas
loop
jne
lea
mov
shl
movsl
cmpsl
or
jecxz
cmp
lods
sbb
xor
push
dec
aad
mov
push
cli
incl
mov
and
iret
dec
jmp
adc
dec
sub
mov
mov
repz
rorl
out
outsl
inc
fwait
and
lock
mov
dec
pop
cmpb
cmp
loope
sbb
sub
jge
mov
nop
and
adc
lcall
pop
sub
mov
pop
jmp
in
mov
lret
mov
jnp
std
inc
sti
jo
pop
xor
lahf
idiv
shl
insl
movsb
add
rolb
aad
inc
mulb
scas
sub
xor
xchg
rcll
and
xchg
inc
mov
add
shlb
js
add
dec
fld
aaa
add
xchg
les
push
xor
dec
fwait
mov
fadd
mov
lods
add
pop
xor
adcl
orl
push
mov
int
sbb
fistpl
jl
mov
mov
sub
sbb
dec
push
fsubrl
jp
sti
xor
orl
xorb
or
adc
dec
decl
das
cs
dec
fs
aaa
or
xor
test
aad
jp
mov
sub
data16
xor
add
and
mov
bound
fildl
push
jle
mov
xchg
mov
and
sahf
mov
mov
lahf
aam
jae
push
jnp
fmulp
repnz
pop
pop
push
out
mov
sti
popa
lahf
pop
pop
mov
mov
xchg
cmp
sahf
iret
leave
mov
pop
int
push
push
aas
loope
mov
or
or
fs
fs
cmp
test
cmp
lods
mov
adc
mov
xchg
push
addb
push
sysexit
jmp
cmp
or
mov
push
std
fst
mov
shlw
cmp
sbb
sarl
sbb
clc
dec
pop
ret
and
icebp
mov
out
or
aad
fbstp
push
cmp
cli
aam
in
xor
add
sub
push
loopne
shrd
add
lahf
lock
and
lss
imul
inc
pusha
movsb
sti
lods
sub
arpl
in
ss
and
and
mov
pop
xor
sub
xlat
mov
xor
mov
rorb
enter
std
and
sbb
fs
or
cmpsb
sbb
push
bound
mov
ret
loopne
imulb
push
add
ljmp
mov
test
mov
and
insl
dec
inc
jbe
push
nop
jecxz
jmp
in
add
loope
insb
out
sbb
pop
and
mov
scas
dec
aas
dec
cltd
pop
sahf
mov
out
xchg
jecxz
into
or
fdivrs
aas
gs
jmp
xor
xchg
push
sbb
push
cmpsl
pop
fsub
sbb
mov
cmc
in
stc
push
mov
jle
sbb
mov
sbb
mov
insl
loopne
cmp
hlt
xchg
dec
mov
std
sarl
pop
icebp
cmp
xchg
js
imul
mov
rcr
push
mov
sbb
call
and
rolb
sbb
xor
mov
xchg
add
add
xor
shrl
out
testl
cmc
outsl
loope
pusha
xor
lret
or
cmp
out
cmp
cmc
push
lret
mov
adc
shl
add
aaa
jno
mov
or
test
or
cmp
inc
push
fidivs
ret
pusha
sub
fstpl
sti
jge
test
es
dec
jg
cmp
mov
sbb
sbb
je
mov
scas
inc
in
loopne
rclb
test
add
xchg
add
sbb
repz
adc
inc
jecxz
sti
jg
in
das
inc
add
adc
pop
inc
add
gs
scas
and
lret
inc
mov
adc
imul
jg
mov
jge
out
sbb
or
imul
adc
mov
fld
push
sub
push
or
sahf
stos
fwait
or
aad
lds
mov
sub
push
test
lods
arpl
dec
add
addr16
mov
xor
adc
jle
ja
add
jle
not
orl
shrl
sub
lods
pop
cmp
pop
dec
movsb
cmpl
orb
movsb
ret
xchg
addl
push
mov
mov
and
dec
pop
adc
sbb
sbb
stos
and
jb
mov
in
sar
push
sahf
fdivrl
out
outsl
jle
add
je
rorb
mov
or
sbb
mov
movsl
test
shrb
mov
mov
data16
adc
ret
and
xchg
mov
leave
xchg
mov
mov
jbe
pop
push
test
in
pop
push
aas
mov
into
push
mov
push
dec
push
pop
jle
test
out
sbb
bound
adcl
pushf
lret
shl
and
or
popf
test
mov
mov
pop
bound
sub
out
xchg
jo
adcl
fdivrl
mov
cld
adc
mov
data16
sahf
dec
aad
xchg
shlb
dec
leave
cs
test
jne
lahf
jge
and
and
sbb
faddl
xchg
nop
jae
clc
mov
sti
push
jecxz
pop
out
insl
jno
mov
lods
or
adc
cltd
inc
xor
test
repnz
mov
mov
jnp
mov
add
aam
and
dec
add
dec
mov
and
dec
jnp
add
xchg
xchg
js
out
and
cmp
outsl
xorb
jno
outsb
or
dec
lods
sub
xchg
mov
cmp
insl
xchg
jbe
rolb
movl
adc
cmp
shrb
and
lods
insl
movsl
dec
jge
inc
mov
xor
mov
mov
mov
mov
fldl
loopne
sti
decl
add
jle
adc
mov
addr16
jbe
in
lcall
push
xchg
push
test
imul
mov
xor
or
test
or
cmc
sahf
adc
std
imul
arpl
dec
sbb
rcr
aas
dec
push
push
mov
jae
push
or
cmp
enter
testl
xchg
dec
dec
ljmp
shll
lahf
jns
notl
xor
aaa
lds
cli
stos
and
test
test
call
push
repnz
pop
leave
call
popf
sub
or
outsl
jb
sbb
xchg
jbe
shll
dec
lret
and
dec
aas
push
push
xchg
mov
inc
mov
pop
cmpsl
or
fdivrs
int3
in
das
sub
push
movsl
mov
movsb
inc
mov
add
repnz
adc
stc
pop
mov
outsl
stos
adc
gs
push
inc
pop
mov
repnz
xor
sub
dec
imul
test
push
in
ss
jg
cmc
adc
out
test
lcall
xchg
dec
cmp
cmp
lds
icebp
gs
mov
aaa
insl
push
jmp
pop
adc
daa
and
mov
lds
fwait
aas
lea
fidivrl
cmpl
jo
mov
mov
ss
lods
jnp
cmpsb
xchg
int3
ret
pop
std
je
lods
xchg
arpl
jle
insb
sub
out
fisubrl
xchg
push
push
push
out
test
jns
push
pop
stc
notb
mov
inc
xor
bound
in
dec
shr
outsl
imul
mov
mov
mov
dec
jle
fildll
test
pop
lods
repz
xor
mov
push
push
push
cli
dec
idivl
test
lret
faddp
rclb
fsubs
cs
pop
or
xchg
sub
sub
stos
sub
cmp
mov
stc
aam
outsl
out
mov
jo
mov
inc
xor
dec
fcmovnbe
repnz
inc
fnsave
es
mov
jbe
outsb
cmp
add
mov
push
aas
adc
stos
inc
les
adc
or
inc
or
mov
mulb
jl
push
mov
lcall
cmp
sarb
inc
call
imul
inc
mov
jl
stos
mov
aam
mov
nop
dec
lods
stos
arpl
mov
mov
mov
jb
xor
roll
dec
in
adc
rcr
popa
mov
mov
fwait
mov
mov
stc
mov
dec
cmp
in
push
in
mov
push
xchg
adc
adc
sbb
mov
repnz
dec
dec
inc
mov
cwtl
jne
mov
out
imul
mov
jne
dec
or
jmp
xor
xchg
pop
shll
mov
mov
pop
fidivs
xchg
cmpsb
repz
mov
jecxz
mov
lods
mov
insl
fildl
jge
shrb
mov
rep
jno
aam
mov
lods
fcmovnb
arpl
test
pop
les
mov
sbb
dec
add
dec
mov
xor
jg
xchg
arpl
mov
jmp
adc
pop
lods
js
scas
lcall
push
pslld
adc
dec
in
push
in
sti
mov
ds
sarb
mov
dec
fstps
lea
in
pop
sub
mov
sti
jg
mov
add
movsb
lahf
ja
and
sub
movsb
mov
fisttps
push
lcall
mov
and
in
pop
xchg
mov
mov
sbb
dec
in
imul
sbb
jb
sarb
dec
ret
xchg
mov
mov
jge
push
xchg
nop
push
std
pop
arpl
push
jecxz
mov
lds
shrl
xor
push
aas
jle
lret
mov
shrb
jl
leave
fidivl
and
shr
push
mov
lret
and
stos
mov
cs
scas
sub
dec
jnp
sbb
push
ja
aaa
test
std
or
push
sbb
repnz
mov
xchg
jmp
in
movsb
aad
mov
or
call
pop
and
loopne
jne
dec
inc
push
sahf
pop
adc
push
or
lret
jo
mov
push
jmp
push
lock
mov
dec
ja
pop
out
int3
cld
test
and
xor
movsl
outsl
jae
int
and
enter
iret
push
mov
cli
sbb
and
sbbb
jbe
mov
sub
jae
adc
push
cmp
lds
pop
pop
add
stc
sub
cmp
and
jnp
fisttps
fstl
jl
bound
pop
sar
gs
add
loopne
jl
pusha
and
aaa
adc
mov
js
outsl
inc
xor
cmp
jmp
xchg
mov
pop
popf
mov
ret
xchg
cmpb
sub
int3
add
mov
dec
sub
ds
cmpl
pop
mov
les
insb
out
mov
jbe
cmp
test
fs
jg
popf
pop
je
dec
push
es
xchg
pop
and
mov
loop
test
dec
pop
jp
neg
lea
pushf
imul
sbb
fimuls
aad
sbb
addr16
inc
out
loop
or
pop
insl
sarl
push
xchg
mov
inc
arpl
outsb
fwait
inc
xchg
xor
xchg
pop
sarb
std
data16
mov
xchg
inc
imul
insb
cli
mov
aaa
pusha
bnd
pop
gs
dec
sub
jo
mov
mov
and
pop
jle
mov
outsl
lock
fnsave
push
xor
jnp
aas
rcll
mov
mov
ss
adc
loop
lods
push
push
lret
pop
dec
sbb
inc
xchg
test
in
inc
cmp
push
pop
mov
fcompl
mov
call
aas
dec
mov
arpl
imul
push
adc
andb
xor
aaa
inc
jp
mov
sbb
inc
pushf
dec
sbb
enter
adc
fcomps
xchg
rorb
pop
inc
cmpsl
lahf
ja
and
pop
lods
xor
mov
push
push
dec
push
mov
sub
data16
xchg
in
push
out
mov
sarb
jmp
adc
inc
xor
jne
fcoms
xlat
sbb
std
pop
inc
in
jl
push
xchg
xor
dec
shlb
xlat
je
adc
in
dec
or
xor
pop
sbbw
fs
push
sub
int3
jg
cmp
sub
sbb
dec
pop
push
stc
lahf
popa
mov
mov
rcrb
inc
sub
aam
fcompl
outsb
outsl
mov
xor
sti
jg
mov
jecxz
loop
xchg
jnp
or
stos
xchg
cmp
xor
lcall
jnp
stos
mov
pusha
jnp
fwait
cli
jb
repnz
mov
xchg
xchg
pop
in
or
jl
ss
jecxz
fmull
jmp
sbb
jno
ljmp
cmpsl
int
cmp
std
xchg
mov
adc
mov
lods
mov
sub
hlt
outsb
test
pop
mov
lods
xchg
mov
shll
add
in
bnd
icebp
jo
sub
sbb
push
cmp
sahf
adc
js
lret
test
out
in
pop
mov
jmp
jns
fsubrl
aaa
jle
mov
lahf
add
movsl
mov
dec
sub
bound
int3
mov
test
xchg
sub
sti
in
clc
pushf
push
or
andl
aam
and
push
iret
movl
rcl
add
push
les
arpl
mov
push
popa
in
xlat
mov
test
pop
cltd
push
lds
mov
adc
rorb
call
and
jne
pop
fwait
cmpsb
mov
inc
sbb
shll
daa
xor
dec
repnz
call
mov
sbb
push
mov
cmp
and
fcomi
mov
in
adc
sbb
push
sti
imul
and
xor
dec
lret
fiadds
pushf
ror
sub
jae
jno
into
out
sub
fstl
xlat
dec
or
imul
push
jmp
and
loope
add
loope
or
shrl
mov
loope
stc
mov
mov
adc
stos
loop
sbb
out
lea
or
into
adcb
nop
xchg
mov
out
mov
les
gs
dec
jle
ljmp
inc
repnz
js
loop
jb
ljmp
jo
loopne
outsb
nopl
pop
jae
ret
push
sahf
sti
sub
mov
fistpll
sti
add
addl
enter
cwtl
int
add
xor
mov
movsb
aaa
mov
insl
adc
cmpsl
jl
mov
mov
pop
sub
and
push
dec
dec
sub
sbb
ds
pusha
xchg
push
or
jnp
cli
jmp
or
pop
add
sub
sbb
fwait
push
dec
cmp
jge
lea
cmc
fisubs
orb
mov
cmpsb
or
dec
mov
adc
cmpsb
dec
pop
test
scas
push
out
jnp
insb
mov
cmp
add
js
cwtl
lock
loope
movsl
xchg
pushf
push
loope
dec
push
mov
in
les
add
lods
sbb
js
push
aam
fdivrl
ja
bound
sbb
jbe
inc
test
je
jmp
push
imul
aas
add
cmp
fisttps
cmpsb
stos
or
xor
js
xchg
adc
adc
adc
cmpl
cmpl
jmp
dec
pop
add
mov
ljmp
call
enter
ror
inc
sbb
sbb
cmp
ja
fidivrs
push
in
mov
filds
inc
dec
cmpsl
jae
pop
jle
push
push
test
shlb
mov
xor
jo
xchg
or
cmp
or
daa
leave
and
mov
repz
push
inc
rol
add
bnd
movsl
sbb
fdivrs
cmp
xor
xor
xor
sub
adc
cld
cs
mov
les
sbb
xchg
inc
pop
xor
inc
test
xchg
lea
mov
popa
out
out
pop
js
inc
sbb
loopne
xor
mov
rorl
outsl
push
push
es
rorl
lods
sbb
mov
push
push
push
sbb
dec
pop
cmpsb
dec
jp
mov
fwait
mov
pop
xor
fwait
pop
mov
xchg
pop
push
cld
fstl
cmpl
mov
lahf
into
out
push
cli
lock
mov
lret
mov
loopne
pop
push
clc
lret
stos
addr16
dec
cltd
shrb
and
cwtl
sarb
test
sbb
jb
mov
in
adcl
or
call
mov
pop
lcall
sqrtps
iret
push
mov
outsl
jp
ret
xchg
iret
add
mov
dec
pusha
or
enter
stc
adc
mov
xchg
shrl
xchg
sbb
icebp
pop
xchg
cmpsb
push
inc
das
cmp
sub
repnz
fsts
push
rcr
cmp
mov
xcrypt-cfb
cmpsl
sub
in
out
mov
hlt
jge
iret
imul
fmull
loop
inc
xlat
and
insl
xchg
xchg
pop
push
xchg
jle
dec
xchg
stos
or
leave
jge
inc
inc
shll
mov
sti
in
add
inc
push
mov
jb
sub
lahf
stos
aad
ror
push
pushf
xchg
lods
mov
xchg
push
popf
test
std
push
fmull
insl
fs
push
orps
dec
and
mov
nop
xchg
inc
inc
xchg
scas
in
pusha
fwait
cmp
jmp
sub
push
int
xor
xchg
lea
adc
mov
outsb
xchg
or
cltd
mov
add
fistl
sbb
cmp
bound
test
or
mov
pop
pop
mov
adc
add
pop
pusha
cmpsb
loope
add
enter
pop
jp
sub
movsb
mov
cmp
and
inc
popf
and
std
out
jb
xchg
push
movsl
adc
dec
ret
xorb
sbb
adcb
sbbl
push
test
pop
fcmovnbe
xor
mov
repnz
sahf
cmp
jno
sbb
pushf
fistl
aas
push
add
ss
insl
mov
inc
lds
rclb
lahf
rcrb
push
ja
aam
sbb
iret
jnp
or
in
movsl
outsb
and
repnz
clc
mov
xchg
ja
and
subb
and
add
xchg
mov
push
lea
or
jmp
arpl
cmp
mov
addr16
cmp
testb
adc
xor
data16
int3
movsl
test
sbb
jp
clc
nop
aam
adc
jb
sbb
int3
std
addr16
hlt
sbb
fsubr
adc
lods
and
adc
lock
pop
mov
pop
fbld
aad
pop
js
aaa
xor
pop
sub
js
dec
sub
adc
pop
das
and
mov
mov
dec
fimuls
shlb
push
popa
sub
pop
pop
das
das
int
or
je
les
repnz
hlt
out
es
inc
jecxz
sub
cmp
jmp
in
jnp
outsl
xchg
xor
sti
push
or
lret
iret
and
fs
es
pop
sbb
mov
jne
fldl
push
jg
cld
cmp
sarb
mov
xchg
popf
sbb
add
pop
sbb
mov
and
xor
cmp
jecxz
enter
data16
ret
dec
push
add
push
mov
add
shlb
add
add
movsl
stos
mov
xor
pop
cmpb
sub
lea
jl
pop
ficomps
xor
in
xor
enter
inc
ret
mov
push
jb
aaa
bound
mov
inc
mov
push
addr16
add
fistl
pop
rorl
cmp
dec
rolb
cs
adc
dec
jle
jnp
xor
sub
bound
jae
rcrl
sti
inc
xchg
ljmp
mov
shl
std
loopne
pop
lret
push
mov
movsl
les
out
test
jb
and
xor
mov
cmp
js
pop
adc
jp
push
ljmp
mov
pop
adc
inc
cmp
into
jbe
jp
mov
sbb
addl
in
dec
lock
cltd
dec
inc
adc
and
lock
int3
or
add
xchg
and
arpl
cmp
xchg
inc
ljmp
insl
aad
aam
or
jb
sub
cli
and
shrd
loop
cltd
mov
jle
mov
push
stos
and
popa
push
pop
sub
mov
lds
addr16
xor
and
test
ja
cmpsb
pop
or
les
fistpll
call
int3
inc
pusha
add
add
or
clc
and
or
pop
out
aam
lea
push
xchg
mov
cmpsb
ret
inc
daa
je
ss
std
idivl
ljmp
inc
hlt
jmp
scas
cli
cmpsb
dec
cbtw
in
inc
dec
jns
jnp
mov
pop
xor
xchg
out
inc
je
jl
xor
and
adc
xor
pop
stos
lods
out
add
adc
xchg
push
testb
push
fsubl
or
fwait
jno
test
pop
repnz
mov
adcl
imul
popf
icebp
imul
decb
cmp
dec
or
cmp
add
stc
fdiv
pop
imul
inc
ret
sbb
pop
cld
mov
sbb
xor
ds
dec
add
sbb
stos
xor
push
mov
fsubrl
cld
inc
ret
dec
mov
scas
out
loop
push
mov
aad
icebp
push
xchg
and
sbb
inc
xor
das
mov
call
cltd
mov
sub
push
xchg
mov
mov
iret
arpl
fsubp
push
scas
sarl
ds
dec
sbb
ficompl
push
mov
cltd
ljmp
xchg
pop
scas
adc
mov
or
bound
jnp
fnstsw
call
aaa
in
ss
dec
pop
sub
scas
imulb
add
aaa
push
dec
les
sub
cmp
ljmp
out
aad
in
cwtl
lea
negl
jnp
popa
outsb
repz
nop
sbb
fsubp
ret
fwait
sbb
mov
sbb
push
xor
call
fstpt
leavew
test
lahf
jne
mov
sarl
cmp
jb
repnz
or
inc
outsl
outsb
mov
jb
mov
xor
gs
push
inc
in
adc
lea
ljmp
loope
shll
sahf
orl
cwtl
dec
mov
pop
ret
decb
xlat
xor
cltd
fs
push
cmp
out
mov
mov
cmpsl
out
fcmovnbe
addr16
xchg
mov
pop
and
pop
xchg
jb
sub
lock
pop
inc
pusha
inc
xchg
insb
push
cmp
xchg
fwait
jns
inc
dec
mov
in
push
lahf
ret
mov
icebp
jnp
bound
loop
inc
jl
jge
adc
adc
jp
xchg
fwait
ljmp
xor
mov
adc
inc
jnp
and
push
notb
dec
xorl
xchg
pop
jge
pop
jno
movsb
add
call
dec
pop
lods
arpl
movsb
fs
sbb
divb
fwait
mov
int
xchg
js
push
push
mov
div
mov
stc
adc
xorb
jbe
cmp
cmpsb
mov
push
push
adc
ficomps
ret
int
cltd
loopne
cmp
mov
adc
sub
mov
or
popa
daa
pop
adc
data16
cmp
sti
les
mov
std
stos
ljmp
enter
pop
inc
xchg
lret
pop
inc
mov
xor
xchg
mov
ljmp
mov
pop
in
or
push
lods
adc
jecxz
mov
sub
mov
pop
inc
and
sub
clc
test
loopne
test
sti
fdiv
and
jnp
sub
cmc
inc
or
shr
pushf
xchg
imul
push
dec
mov
sbb
aas
or
xchg
mov
pop
test
add
idiv
inc
scas
xor
test
stos
lea
dec
lea
dec
enter
sub
cmp
packsswb
adc
mov
sub
je
fwait
clc
repz
push
mov
sbb
addr16
mov
sbb
push
daa
jl
jo
out
ss
pop
inc
fs
xchg
scas
insl
jns
pop
nop
mov
pop
xor
pop
addr16
in
popa
xor
push
stc
mov
mov
nop
js
jae
cmp
arpl
call
adc
repnz
mov
inc
std
push
and
pop
cltd
sbb
call
mov
push
adc
mov
fldln2
xchg
adc
repz
fadds
int
aad
push
or
sub
xor
cmp
jno
mov
addr16
cmp
jmp
xlat
cli
shl
and
xchg
xchg
mov
cld
jnp
aaa
repz
or
inc
xchg
stc
sbb
aad
push
push
nop
jmp
call
out
add
insb
dec
mov
daa
and
sub
inc
lahf
clc
jmp
or
lods
mov
aas
push
mov
mov
jmp
ljmp
std
inc
enter
data16
or
js
push
fwait
cmp
mov
push
lods
push
dec
insb
dec
sti
pop
in
mov
inc
aad
add
sbb
lods
mov
data16
lea
stos
pop
sbb
daa
loop
adc
mov
lahf
inc
movsb
popa
inc
xchg
dec
ret
or
push
imul
movsb
dec
inc
mov
dec
les
and
loopne
jp
imul
stc
fiadds
imul
fnsave
lods
mov
fstps
mov
xor
add
xchg
andl
sbb
lods
mov
stos
xchg
lea
mov
dec
ljmp
out
int3
dec
ljmp
outsb
jl
pushf
int3
dec
pop
in
mov
cmpsl
cmc
lahf
aas
sbbb
cmp
fs
in
cli
inc
or
dec
int3
jmp
lods
sbb
ja
sbb
test
jl
pop
daa
xor
or
push
imul
adc
lea
push
inc
xor
push
inc
mov
fiadds
jg
sub
or
jae
xchg
xor
jp
scas
shrb
sub
stos
push
je
mov
fwait
ljmp
jge
push
andl
sbb
es
push
mov
or
inc
stc
jp
sub
lds
xor
pop
mov
push
pushf
cmp
mov
pop
sti
cmp
sbb
push
cmp
pop
mov
pop
stos
stos
add
dec
mov
repnz
push
fwait
clc
xchg
out
push
pop
gs
jmp
add
xchg
or
adc
cli
cmp
push
and
and
or
scas
push
call
sbb
jl
push
call
add
leave
adc
cmp
sbb
jle
xchg
xchg
ret
mov
mov
iret
add
mov
sbb
jecxz
and
je
mov
hlt
xchg
xchg
call
push
pop
dec
or
je
das
addb
test
outsl
lret
aad
clc
out
popf
outsl
xchg
dec
mov
cld
fsubrl
cli
aad
sbb
xor
ja
fcomps
cwtl
movsl
add
mov
outsb
pop
ficoms
aam
jge
jo
add
sbb
xor
mov
xor
push
fwait
push
mov
inc
xor
sbb
ret
cmpsb
clc
mov
call
push
push
pop
jecxz
test
xor
ljmp
adc
push
rorl
jne
jbe
aad
cwtl
ror
ss
sti
cmp
mov
and
out
pop
popf
std
mov
jbe
inc
cmp
xlat
inc
lcall
sub
push
in
xchg
xor
mov
in
lahf
test
popf
sbb
out
cmc
xchg
push
cmp
jecxz
out
dec
loop
stos
cmp
jb
xor
mov
das
out
pusha
push
movsb
dec
mov
fidivl
pop
pop
add
add
and
das
lods
repnz
pop
mov
nop
and
xor
ljmp
repz
push
std
ds
std
push
inc
mov
decl
addr16
push
jns
push
xor
js
xlat
mov
leave
jmp
les
lds
or
pop
jne
lea
adc
sub
cmp
je
mov
cli
repnz
aam
mov
cmp
pop
and
insl
xchg
ret
pop
push
mov
cmpsb
adc
sbb
lds
cmp
add
mov
xchg
icebp
into
adc
iret
popa
ret
xorb
shrb
sub
fsubrl
pop
fidivs
mov
xchg
add
xchg
mov
dec
hlt
sbb
enter
js
movsb
xchg
iret
loop
jp
pop
mov
cmp
mov
sahf
int3
mov
rorb
adcb
pop
dec
add
and
push
aaa
bound
xor
enter
outsl
cmp
bound
adc
ficoms
ss
jg
mov
arpl
mov
scas
cld
mov
addr16
popl
jns
into
out
xor
fxch
mov
add
jecxz
xor
or
dec
cwtl
fwait
push
leave
jp
dec
pusha
fiaddl
add
int
cld
cmp
or
adc
es
mov
in
outsl
jle
adc
xchg
sub
xchg
mov
cmpsl
lock
aad
or
jle
mov
mov
mov
mov
inc
test
push
add
jl
push
and
scas
es
dec
sbb
shl
mov
mov
push
and
lret
pop
mov
dec
mov
xchg
xchg
aaa
push
idivl
enter
cmp
lods
cmp
dec
psraw
mov
loopne
jecxz
xchg
xchg
cltd
jnp
pop
xorl
cmp
or
negl
sub
cmpsl
jp
mov
cmpsl
pop
mov
fsubrl
or
xor
aad
daa
cli
cwtl
out
popf
fnsave
and
mov
imul
leave
xor
adc
dec
sbb
rep
sub
pusha
mov
inc
imul
adc
adc
fs
sub
mov
dec
fdivr
cli
inc
and
mov
mov
lods
cmpsb
outsb
shrb
inc
xchg
inc
cltd
sub
outsb
xchg
mov
cmpsb
iret
dec
cmpb
test
cmp
scas
repz
cmp
fs
xchg
lret
ds
into
or
push
sub
jno
popa
or
cmp
insb
xchg
repnz
addb
xlat
mov
push
pop
adc
lcall
arpl
dec
inc
loop
movsl
rcll
push
test
lods
das
dec
iret
mov
imul
or
xor
test
sub
sbb
sti
aas
and
inc
bndldx
fdiv
decb
or
mov
int
pop
inc
mov
add
cmp
dec
aas
or
out
ret
icebp
sub
cltd
rol
ret
xchg
cmpsl
loopne
lds
icebp
jae
pusha
sti
push
pop
call
and
push
sub
jmp
rcrl
lods
inc
mov
inc
push
adc
loop
sub
cmp
xchg
repnz
test
jbe
push
stc
sbb
push
cmp
pop
les
ficoms
xor
scas
cwtl
push
add
int
lods
fldt
push
sub
add
popf
mov
jge
clc
aam
out
xor
inc
pushf
ret
push
mov
dec
lret
dec
out
inc
adc
push
sub
shll
fstpl
xor
mov
into
mov
repnz
xchg
sbb
bound
dec
ss
addr16
ss
dec
addr16
data16
aaa
call
dec
cmc
aam
mov
dec
mov
cmpsl
sbb
rcr
out
rsm
lahf
lret
sbb
mov
aaa
sarb
mov
int
and
or
add
xchg
inc
loop
cs
push
add
sub
cmp
jmp
dec
imul
sub
out
sub
test
popf
push
dec
shlb
add
insb
popl
lods
ds
dec
imul
pop
repz
clc
sbb
or
enter
test
out
cwtl
add
cmovle
sbb
out
xchg
mov
cvtdq2ps
loop
xor
mov
stos
or
lds
push
fcmovnu
dec
cltd
jl
mov
lret
sahf
fstl
push
or
rcl
fistpll
add
add
pop
rcr
sarb
jecxz
xchg
scas
dec
enter
push
nop
sbb
je
fimull
or
and
jmp
push
addb
lods
mov
lods
out
shll
fstl
pushf
rolb
lcall
cli
insl
mov
imul
jns
popl
clc
sub
pop
dec
test
adc
hlt
add
push
fistpl
aas
leave
mov
push
arpl
dec
mov
lock
sub
call
jl
dec
dec
push
out
out
in
pop
fbld
sub
cmpsb
fdivl
mov
sahf
das
xlat
xor
and
add
push
mov
add
stc
lods
ds
std
mov
test
in
jne
dec
dec
repz
ficomps
mov
jp
lea
jmp
or
cmp
rol
addb
add
adc
xchg
push
xchg
dec
repz
and
into
outsl
mov
or
mov
in
rcrl
dec
sub
pop
or
mov
xor
jne
pusha
xor
push
add
fs
leave
push
lea
jnp
iret
out
mov
aas
inc
push
or
jmp
add
mov
aad
fdiv
stc
imul
mov
sbb
testb
cs
negb
cmpsb
out
popf
push
fs
inc
lahf
sbb
movsb
cmp
or
sub
xor
pop
pop
cmc
sti
cli
jle
sbb
or
out
in
mov
adc
adc
pusha
iret
pop
xor
lcall
daa
cmpl
jecxz
or
mov
out
dec
push
and
pop
push
inc
lea
cltd
lahf
lods
xchg
dec
jnp
jo
xor
cld
shlb
xor
je
xor
adc
fsubrs
lds
add
loop
and
mov
adc
pop
push
push
pop
icebp
fcomps
aad
les
sarb
sbb
push
mov
dec
xchg
add
sub
shlb
inc
mov
sbb
inc
or
dec
push
int3
cmp
pop
pop
push
sahf
mov
into
in
inc
xor
stos
push
xchg
xchg
js
mov
and
outsl
pop
mov
addb
push
cmp
cmpb
fxch
int
cmpsb
mov
lock
push
jne
test
fnstenv
jge
outsl
aaa
inc
xchg
sub
je
fisttpll
or
ret
or
xchg
inc
scas
aad
call
cmp
int
movb
movsb
sbb
sbb
lea
cld
xchg
adcb
mov
leave
nop
shrb
cmp
cli
in
sub
mov
mov
ds
cmp
push
nop
mov
ds
jo
stos
je
std
mov
mov
xchg
mov
icebp
shrl
xlat
or
aad
and
mov
xchg
inc
pop
loopne
mov
add
sbb
inc
divl
out
pop
mov
mov
add
xor
xchg
mov
mov
cmp
ds
mov
xchg
add
add
jo
in
repz
inc
stos
inc
hlt
pop
out
push
in
popa
push
loope
dec
divb
popa
imul
jnp
push
ja
mov
dec
and
cld
imul
sbb
push
in
inc
out
push
ss
notb
dec
popa
jmp
and
mov
cs
xorb
ss
insb
imulb
mov
ja
and
fwait
in
out
lods
icebp
jno
icebp
jecxz
fcoml
inc
notl
jno
mov
sti
ljmp
cld
mov
push
inc
mov
cmp
cwtl
pop
out
mov
and
pushf
clc
lret
rorb
dec
je
fsubs
out
push
add
lret
adc
cmp
sub
mov
test
fidivrl
and
lret
mov
xchg
xchg
daa
push
rorl
cmp
xchg
sbb
xchg
mov
dec
fisubrs
cmp
pop
es
cwtl
shlb
mov
push
mov
pushf
out
mov
gs
xchg
dec
mov
cmp
push
out
sub
xlat
sbb
es
pop
push
sub
xchg
or
mov
or
inc
cmp
xor
push
fwait
inc
enter
outsl
out
fdivrl
aad
inc
sub
fsubrl
out
mov
popa
insl
testb
cmpsl
dec
ret
cmpsl
in
adc
ljmp
pop
push
sub
andl
ret
lock
in
dec
adc
pusha
dec
push
jmp
sbb
jne
adc
sub
cmpsb
in
jle
daa
push
stos
push
and
aad
mov
call
cmpsl
mov
xor
popf
and
mov
sbb
outsl
in
xchg
out
out
and
sbb
or
iret
sbbb
subl
out
or
push
push
aad
and
and
ja
sbb
or
mov
lret
out
pop
test
scas
jmp
leave
pushf
push
add
repz
pop
push
adc
lea
adc
je
loop
adc
dec
repnz
negb
sbb
sbb
mov
push
fs
mov
aad
aas
and
aam
popa
shl
out
mov
mov
pop
pop
sti
pop
gs
jecxz
jecxz
pop
fcmovnbe
imul
dec
sub
cmp
popa
and
cmpsl
cmp
sbb
fisttps
cld
call
fsubl
or
imul
pop
leave
lret
sti
dec
sub
jb
xlat
js
mov
push
or
addr16
sbb
inc
int3
aad
test
test
xchg
add
in
cltd
pop
mov
dec
cmp
push
and
aas
adc
insl
cwtl
mov
in
leave
push
rolb
sub
xchg
repz
das
jp
rolb
and
in
xor
pop
cwtl
xlat
fbld
call
pop
sbb
sub
push
js
mov
mov
cmpsl
shll
mov
inc
cmpsl
adc
push
test
pop
outsl
xor
xchg
movsb
push
sub
or
sbb
fdivrs
push
push
jmp
mov
push
push
jnp
dec
sbb
jnp
leave
mov
divl
cmp
push
dec
mov
decl
jns
loop
mov
nop
pusha
pop
xor
sahf
xor
dec
daa
inc
mov
mov
out
ljmp
clc
push
cltd
shr
fisttps
shr
out
inc
push
jecxz
inc
fs
or
push
mov
push
jp
xchg
leave
mov
fnstcw
push
push
mov
sti
cltd
jb
add
arpl
xor
inc
ja
fnstsw
and
xchg
imul
push
lcall
mov
mov
call
dec
and
xchg
cmc
bound
xchg
aas
pop
rol
cmp
mov
jecxz
ret
inc
testb
ret
dec
sbb
xchg
leave
add
adc
cltd
inc
inc
mov
fdivrl
sub
jae
mov
pop
pop
roll
mov
jle
mov
and
ljmp
xchg
mov
movsb
es
pop
add
push
fmull
loope
loope
sbbl
dec
or
add
sub
sub
lea
in
aas
cld
arpl
shrb
push
mov
imul
pop
rcrl
outsl
test
mov
push
mov
fucom
fidivl
push
or
pushf
cmpsl
mov
fists
mov
jne
xchg
adc
mov
movsb
fdiv
pop
xchg
mov
cmp
pop
and
icebp
int
cmp
mov
jge
in
test
rcpps
mov
cmc
das
int
mov
fildl
or
loopne
movsl
mov
lods
adc
xchg
dec
xchg
push
inc
xchg
hlt
movsl
adc
jl
ljmp
cmp
mov
lock
sub
dec
jmp
push
fisubrl
xchg
jle
xchg
or
scas
pop
out
loope
cmpsb
shrl
int3
and
ss
and
ficompl
or
adc
stos
add
sbb
popf
jle
mov
sbb
sub
roll
ficoml
adc
xchg
pop
fcmovnu
shr
insl
and
or
fldenv
fimuls
leave
out
stc
mov
sbb
mov
and
movl
aam
or
lret
push
test
xchg
jae
mov
cli
out
arpl
mov
push
icebp
mov
iret
sbb
call
and
icebp
outsl
fs
test
aam
bound
jmp
stc
xchg
adc
pop
xchg
jl
dec
mov
lahf
nop
test
sbb
mov
add
loope
jbe
cmp
popa
loope
jle
push
mov
les
dec
test
mov
or
lods
cs
jae
popa
adc
jno
ds
and
adc
mov
push
ja
add
rorl
or
sub
in
or
repz
in
lcall
into
pop
pop
scas
jo
jno
inc
lahf
ljmp
pop
mov
fdivrp
dec
push
cltd
stos
push
ret
xor
inc
mov
frstor
mov
xchg
iret
xlat
xchg
push
stos
dec
jg
xchg
test
lahf
xchg
sub
jp
insb
or
cwtl
cmp
pop
imul
xchg
ds
xchg
sbbb
push
mov
sahf
adc
pushf
or
jae
lcall
inc
cmc
jnp
into
pop
pop
mov
mov
ret
adc
inc
jmp
cmc
sbb
xchg
addb
adc
popf
mov
dec
outsb
in
lods
fldl
lahf
and
xor
sub
rolb
sti
or
xor
push
pfcmpeq
adc
ljmp
arpl
das
push
lcall
adc
mov
push
mov
fmuls
mov
outsb
cmp
cmpsl
dec
jp
jp
jo
lahf
jae
arpl
inc
fldenv
fildl
add
xor
push
pop
or
je
out
into
js
daa
or
mov
and
fnstcw
inc
cmp
xlat
mov
dec
cwtl
and
insb
xchg
push
jle
pushf
mov
adc
pushw
repz
cmpsl
add
paddsb
pop
push
jecxz
adc
aaa
push
cmovbe
ljmp
mov
cmp
sub
jmp
stos
mov
sahf
dec
xchg
xchg
dec
pop
stos
stos
imul
shrb
pop
sub
mov
xor
jmp
pop
xor
xchg
test
mov
sbb
sub
xchg
lahf
inc
data16
ret
mov
cmp
ret
sbb
mov
xor
xlat
out
fucomi
push
and
or
shll
add
popf
jle
shlb
and
jp
xor
fildl
sub
ljmp
test
imulb
mov
cmp
mov
leave
mov
ja
aas
sbb
sub
and
daa
sahf
out
adc
mov
xchg
lret
pop
push
imul
jmp
fnstcw
mov
pop
push
loopne
push
lods
push
jg
andb
dec
jg
push
push
add
jecxz
stc
lock
sbb
faddl
das
mov
push
sub
lods
scas
xchg
std
pop
mov
xchg
loop
mov
dec
ret
add
xor
ss
mov
jno
mov
mov
aaa
pop
cmpsb
push
or
stos
iret
sahf
xlat
test
jne
mov
daa
rcr
clc
ss
es
jmp
mov
lret
lcall
jl
xor
adc
jp
xor
lds
in
xor
aaa
xor
or
stos
cmp
bound
mov
int
adc
stc
stos
cmpsl
add
xor
out
rorl
cwtl
test
mov
xchg
loopne
cwtl
ds
test
insl
xor
cli
xchg
movsb
data16
and
and
xchg
lock
pop
int3
out
insb
hlt
mov
jl
inc
mov
xor
loop
jbe
jns
in
mov
outsb
pop
sarl
mov
jnp
lds
pop
push
clc
insl
xor
dec
gs
jo
lea
popa
fisubrs
lret
xor
rcl
sbb
push
jge
insb
cmp
sbb
jns
repnz
mov
popf
and
mov
shr
pop
stos
xlat
sub
lock
pop
stos
xor
and
cltd
mov
in
cwtl
fcoml
jbe
xchg
mov
das
lods
scas
inc
loopne
pop
in
xor
stos
out
or
push
cmp
aad
nopl
sub
ljmp
hlt
cltd
inc
or
dec
addr16
inc
jns
xchg
dec
fsubr
cmp
call
cmp
cwtl
sub
gs
push
pop
inc
cwtl
fiaddl
sub
add
cmpsl
dec
repz
lret
les
dec
mov
cld
push
ja
fcomps
xchg
sahf
cmp
mov
push
sbb
mov
mov
gs
inc
pop
mov
out
shlb
mov
pop
gs
lods
out
push
xchg
lds
mov
cltd
inc
cmp
mov
pop
jae
push
inc
cmp
rclb
addl
pop
mov
fs
sub
push
out
mov
fsubl
push
and
jmp
mov
into
test
stos
es
fildl
pop
into
cltd
add
sbb
sbb
push
push
mov
scas
sub
mov
movsb
js
pop
and
mov
into
push
adc
push
in
and
into
inc
push
pop
fwait
xchg
mov
sar
js
xchg
shrb
in
in
inc
and
fwait
cmpsb
ror
mov
inc
in
lret
addr16
out
push
sub
jge
ljmp
mov
loopne
repz
mov
xchg
repnz
mov
mov
sub
lds
repz
jno
stos
lock
ret
push
jnp
mov
lods
cmp
mov
test
outsl
jle
imul
and
shrb
pushf
ret
incl
imul
movsb
mov
cmp
clc
pop
jbe
outsb
loop
sbb
cmp
sbb
imul
cwtl
popa
push
js
sbb
and
jb
dec
push
cmp
lcall
cs
lahf
pushf
jmp
pop
out
iret
inc
decl
push
insb
jecxz,pn
cmp
inc
push
fiadds
dec
pop
inc
and
fcomps
and
sbb
cmp
pop
in
push
inc
mov
movsb
dec
fisubs
mov
clc
sub
xlat
mov
imul
cmpb
sub
aam
xorl
inc
add
xchg
push
add
stos
adc
repz
pop
sub
jnp
sub
in
cmpsl
jl
or
mov
popf
inc
xor
movsb
mov
fdiv
cmp
sub
xchg
and
push
out
sbb
outsb
dec
icebp
mov
sarb
dec
fistl
arpl
ja
cmpsb
test
xor
ret
or
jno
or
int3
xchg
sub
lods
cmp
push
sti
js
shll
lcall
xchg
data16
inc
subl
push
adc
mov
sub
fistpl
and
lret
xlat
fs
or
cli
sub
jo
sti
xor
addr16
filds
push
xadd
scas
insl
lods
mov
insl
mov
lea
test
xorl
xor
mov
popa
mov
sub
xlat
xchg
movl
in
mov
pop
add
mov
int
out
inc
lds
cld
or
fcmovnbe
push
fwait
lods
dec
jbe
addr16
fidivs
add
cld
dec
sbb
mov
lcall
mov
cmp
add
sub
jns
popa
push
xchg
aaa
sub
sub
test
cmpsl
repnz
jo
clc
dec
outsl
jae
sbb
inc
or
fisubl
inc
popf
jo
cmp
pushf
mov
outsl
ljmp
std
add
and
fwait
sub
pushl
add
loope
jno
mov
push
mov
test
pop
cmpsl
cltd
pop
stos
pusha
leave
push
cmp
scas
pop
ret
add
or
add
sbb
inc
dec
xor
sub
mov
in
jnp
jle
push
push
or
xchg
movups
imul
mov
es
add
mov
cltd
xor
mov
scas
ja
rclb
shrb
movsl
out
sbb
or
divl
push
les
stos
mov
and
aad
iret
mov
rorl
mov
mov
test
seto
adc
out
fucomp
xor
mov
in
push
sbb
mov
adc
vaddpd
lds
xlat
mov
shld
out
add
test
jecxz
mov
xchg
clc
cmp
cmp
ret
mulb
scas
data16
or
mov
mov
lret
push
cs
out
stos
out
mov
or
hlt
sbb
cltd
test
push
xchg
les
jmp
mov
out
jnp
and
jge
push
mov
insl
xchg
inc
aam
js
xchg
loop
inc
fwait
cmc
dec
push
faddl
xchg
mov
jno
adc
movsl
rcl
and
xor
rcl
lahf
int
add
call
add
scas
dec
mov
and
imul
cmp
addr16
pop
jb
mov
mov
iret
repnz
xlat
repnz
xor
inc
cli
xchg
addr16
pop
enter
or
std
push
dec
mov
ret
add
mov
push
pop
xor
add
mov
cmp
in
pop
dec
xchg
jg
cmp
popf
dec
sahf
insl
test
push
das
loopne
fsubl
pop
pop
fstps
mov
mov
insl
ja
pop
xor
loop
xlat
and
jp
cmp
push
rclb
sahf
shr
sbb
ret
ficompl
or
mov
xchg
or
divb
adc
lahf
aaa
xor
and
and
pop
fwait
enter
rclb
or
pop
jne
mov
scas
fisttps
sbb
mov
sbb
xchg
in
scas
enter
movsb
outsl
adc
xor
xorl
mov
lea
push
cmc
mov
mov
inc
cmp
subb
or
ds
ds
int
insb
adc
sbb
test
inc
mov
mov
ret
pop
jno
sbb
add
xchg
mov
mov
popa
cmp
xor
shl
icebp
push
dec
xchg
bound
mov
in
push
imul
mov
push
aam
cmp
rorb
sub
and
imul
into
and
mov
pop
push
mov
cmp
dec
fdivrl
cmp
jb
js
pop
sbb
lods
fdivrl
xchg
mov
and
mov
test
cli
and
das
psubusb
mov
stos
mov
int
cld
ja
dec
add
pop
js
dec
cmp
inc
repz
decb
inc
cmp
inc
push
stos
sub
push
and
mov
fldcw
xchg
lock
fwait
add
mov
mov
xor
sti
inc
pop
push
lret
jmp
xchg
movsbl
jb
fisttpl
pop
in
test
repz
adcb
pop
jno
sbb
cmp
push
adc
sub
fstps
fistpl
mov
cwtl
push
leave
icebp
mov
repz
pop
lock
jmp
lcall
je
aas
in
mov
mov
dec
lock
scas
jnp
call
and
push
or
mov
nop
es
pusha
cmp
in
inc
sbbb
sbb
jo
jp
inc
add
shrb
fmul
push
xchg
mov
lea
loope
push
mov
stos
mov
scas
add
popf
bound
lret
leave
scas
in
jnp
movsb
out
xor
arpl
xor
and
ficoml
shl
lret
xchg
je
mov
fwait
or
dec
mov
icebp
jecxz
add
inc
shrb
pop
jns
lret
in
aad
out
cmpl
int
mov
cltd
insl
dec
nop
mov
inc
lahf
mov
pinsrw
cmc
mov
out
sbb
sbb
int3
rcrl
sub
jnp
pop
sahf
or
bound
stc
fistps
clc
loope
fcmovne
pop
movsb
mov
iret
push
xlat
in
jge
mov
jae
mov
test
sbb
cmp
lcall
rorb
inc
push
subl
sbb
imul
add
sub
jmp
aas
dec
lods
xor
idivl
paddusw
inc
pop
test
cmc
xlat
mov
aam
dec
aam
pop
sub
pop
xor
mov
mov
sub
cmc
jmp
mov
xchg
sbb
ret
clc
jb
out
pusha
fwait
js
dec
fimuls
gs
roll
jle
push
adc
jns
call
jbe
add
sub
jns
lea
add
sbb
sarl
stos
xor
mov
movsl
sub
in
lret
aas
iret
loopne
stos
xor
pop
fbld
shr
xlat
cltd
push
cmp
mov
push
icebp
or
xchg
call
jno
jg
icebp
dec
lea
popa
rcrl
xchg
in
mov
sbb
sbb
and
shl
test
sbb
push
inc
pop
add
xchg
inc
push
jecxz
int
stos
leave
mov
in
inc
sub
enter
push
insl
ljmp
daa
jp
pop
cld
addr16
mov
outsl
nop
adc
inc
cltd
mov
ljmp
mov
cs
icebp
pop
sahf
outsb
dec
dec
push
fsub
aad
or
pop
adc
js
mov
mov
xor
dec
sbb
loopne
cmp
push
ss
rcll
cmc
cmpsb
push
and
sbb
data16
xor
adc
int
mov
in
clc
push
jno
lods
sub
iret
mov
out
pop
sub
or
cld
xchg
lret
fnstcw
adc
les
movsl
int3
xor
pop
xchg
lea
xor
dec
imul
sahf
sbb
das
push
imul
xchg
shlb
test
dec
das
fst
and
lds
mov
adc
es
xchg
mov
mov
mov
out
dec
lock
jo
mov
je
adc
xchg
icebp
xor
lods
mov
pop
push
push
pop
clc
jns
aaa
fdivs
addb
pop
ret
jb
cmpsb
or
je
sbb
loop
mov
add
lret
dec
fistps
cmpsb
loopne
xchg
mov
adc
stc
jb
in
jb
lret
add
leave
adc
push
xchg
dec
xchg
xchg
pop
mov
mov
cmp
inc
push
pushf
cs
ds
rcrl
dec
fcom
andl
enter
pop
pop
mulb
add
mov
push
lcall
dec
subl
std
imul
push
xchg
dec
inc
rcrb
cmp
out
std
gs
xor
push
fadd
cmc
adc
cmc
shrb
bound
clc
repz
shrd
mov
adc
push
std
jp
dec
jge
aad
std
jb
cmpsl
mov
dec
adc
test
jno
mov
mov
add
and
outsb
nop
adc
stos
lcall
pop
test
mov
into
jecxz
jecxz
mov
ret
outsl
and
mov
lret
leave
sbb
and
mov
stos
cs
pop
in
clc
loopne
push
sbb
xchg
rolb
and
mov
inc
sub
or
test
dec
dec
mov
jne
out
adc
cmc
test
mov
dec
mov
inc
das
sub
adc
lahf
mov
jb
jne
sbb
andl
or
dec
shrb
in
cmpsl
in
movsb
xor
jno
jne
or
and
mov
lock
jne
cli
xor
xchg
jne
cld
test
mov
jge
ds
inc
mov
push
pop
mov
ljmp
xchg
sub
cmp
movb
sub
jmp
cltd
aam
add
xor
cwtl
lcall
pop
cmp
aam
sub
pop
push
mov
std
mov
mov
fldenvs
mov
out
stos
add
inc
arpl
dec
mov
mov
sbb
add
push
mov
int
fsubs
pcmpeqw
xor
add
push
ret
mov
stos
fadds
and
mov
mov
xor
lcall
aaa
fwait
stos
or
iret
cld
mov
in
cmp
out
ds
ret
in
add
fcom
cmp
sbb
mov
xchg
xchg
push
sub
call
pusha
in
xchg
out
xor
xchg
add
stos
aam
adc
icebp
mov
jle
jno
pushf
adc
push
aam
mov
sarb
push
add
add
push
ss
fwait
pop
lock
test
inc
aad
ficomps
mov
in
arpl
cli
fistps
mov
rorb
add
rolb
shll
fstpl
in
mov
mov
cmp
fcoms
or
dec
clc
cmpsl
mov
in
sub
xor
rolb
push
add
mov
mov
lahf
cmpsb
or
mov
iret
cmp
sbb
sti
cmp
int3
clc
adcl
sub
in
sub
add
iret
xor
sub
mov
mov
insl
in
test
push
in
sub
out
cmp
pusha
xor
xlat
jns
stos
out
inc
cmp
sti
jns
out
aas
addb
fidivs
dec
in
ljmp
ss
xchg
pop
or
aad
sbb
and
cmp
pusha
mov
lahf
or
xchg
jl
adc
in
cmp
scas
adc
movsl
nop
cli
das
es
out
sub
enter
das
test
ja
ljmp
push
jge
inc
mov
jecxz
cmpsb
mov
cs
and
out
cmp
clc
dec
push
out
mov
mov
fwait
adc
je
fstp
stos
sarb
fstl
out
mov
mov
test
in
jns
shll
adc
mov
cmp
push
jnp
jle
sbb
mov
hlt
sub
incb
and
pushf
sahf
jmp
jne
mov
stos
mov
and
stos
add
shl
xchg
xchg
push
cmp
mov
add
call
sahf
inc
xchg
pop
test
or
push
scas
orb
cmp
push
mov
mov
mov
shll
xchg
stos
ds
jp
pop
fnstsw
mov
xor
loopne
testl
movb
rclb
dec
cmp
lods
int3
stos
movsl
xchg
in
fisttps
sbb
ja
mov
test
mov
scas
push
fcmovnb
mov
lea
inc
pop
xor
adc
lret
arpl
dec
inc
test
mov
decl
repz
sti
push
lock
sbbb
shrb
sahf
inc
add
sarb
sub
gs
inc
dec
cs
stos
sub
adc
add
cmp
je
dec
pusha
rcrb
lret
fstpl
pop
mov
dec
jno
xchg
add
mov
mov
jmp
jecxz
in
sub
fwait
aam
cli
push
int3
pushf
inc
bound
mov
xor
cmp
dec
pushf
jmp
xchg
jp
cltd
xchg
mov
dec
out
add
aam
sub
or
sbb
push
nop
jecxz
shll
leave
cmpsl
mov
sub
pop
jb
jge
outsl
insl
or
or
sub
xchg
mov
mov
int3
js
push
inc
xor
icebp
xchg
inc
bound
sbb
stos
mov
lahf
lea
push
inc
fcmovnbe
popf
test
sub
or
insl
xlat
lcall
es
loope
pushf
inc
fadd
xchg
das
stc
and
lcall
mov
inc
or
jmp
push
arpl
cmpsl
cltd
mov
mov
mov
in
xor
xchg
pusha
xchg
imul
adc
mov
mov
cld
xchg
femms
lcall
xor
into
mov
imul
inc
sub
push
or
or
xlat
scas
rorb
lea
test
scas
outsb
insb
jle
ds
fcompl
pop
push
insb
mov
push
adc
xorl
lea
sub
mov
cwtl
mov
xor
aaa
dec
cmpxchg
or
mov
aad
adc
dec
inc
rorl
cld
push
inc
sbb
pop
lret
pusha
mov
scas
fisttps
xchg
cli
sti
dec
test
into
cmp
stos
ljmp
cltd
cli
popf
xor
ja
out
dec
cwtl
or
cmp
data16
lret
into
sub
mov
jge
es
int3
ss
add
cltd
and
imul
add
mov
dec
daa
push
idivb
mov
dec
add
scas
mov
test
iret
rclb
mov
fbstp
inc
int3
xchg
cmpsl
addb
inc
incb
int3
ret
aad
hlt
shr
stos
push
and
push
sub
mov
pop
mov
adc
cmp
loope
pop
loopne
sahf
dec
and
sbb
icebp
xchg
stc
jp
mov
push
pop
and
movb
inc
xchg
or
sub
test
jb
push
mov
aas
mov
mov
jb
pop
inc
cmpsb
roll
mov
imul
mov
mov
pop
xor
push
cmpsb
add
ret
or
loopne
inc
mov
inc
lods
sub
scas
push
or
cmp
lods
adc
std
popa
jae
xchg
jmp
sbb
mov
insb
es
sti
fmuls
jne
scas
leave
cmpsb
pop
inc
popa
pop
stos
inc
jmp
psllw
loope
jmp
adc
std
jbe
imul
lods
sbb
adc
xchg
fnsave
leave
mov
ds
cmp
xchg
movsl
push
cmp
xchg
add
mov
les
scas
movsb
push
and
add
shll
or
add
push
jne
sbb
cltd
push
pop
add
cmp
or
adc
dec
sbb
cli
fidivrl
movsl
xchg
jno
leave
ljmp
sbb
push
outsb
sarl
jnp
aam
testl
adc
repz
inc
inc
jecxz
push
and
cs
mov
lock
inc
adc
mov
cli
jno
adc
lods
inc
popa
popf
fistpl
and
lods
movsb
in
xor
fidivrs
cltd
mov
mov
cs
inc
dec
and
jp
out
das
sbb
cwtl
aas
inc
adc
sbb
sbb
insl
lea
loope
in
sbbb
xchg
mov
orb
mov
inc
mov
mov
xchg
testl
dec
lcall
pusha
xchg
lret
fstp
cmp
mov
mov
subb
in
stos
cmpl
mov
pop
lds
dec
stc
repnz
or
xor
sbb
or
or
std
cmp
movsb
cmp
in
js
mov
or
xor
loop
or
or
mov
sub
test
push
cld
mov
dec
loop
xchg
loopne
push
sbb
pop
das
movsb
lods
mov
mov
dec
mov
in
lods
pop
loop
int3
sarl
jns
repz
mov
mov
roll
rcrb
xchg
xchg
jne
push
fcomp
out
out
lea
sub
push
sbb
xchg
xchg
hlt
mov
std
cmp
or
add
mov
inc
addl
das
leave
xchg
mov
pop
and
shll
pop
inc
xor
sub
jae
je
dec
cmp
cmp
cmp
jle
inc
ret
inc
insb
fisttpl
daa
das
rcrb
dec
add
lahf
sbb
dec
mov
mov
mov
cs
test
push
push
into
fwait
leave
cmp
mov
inc
leave
aam
jl
aaa
int3
jecxz
out
std
xor
enter
jg
out
sub
adc
jecxz
and
movsl
jmp
sahf
lahf
push
dec
push
xor
push
dec
sahf
sbb
jle
mov
int
je
int
imul
mov
loopne
divl
aaa
dec
mov
lcall
subb
cs
iret
fldt
fs
and
dec
aaa
jge
int3
mov
or
nop
add
jo
xchg
xor
mov
rolb
jle
mov
and
xor
push
mov
jnp
lahf
mov
add
cmp
and
sbb
mov
jae
mov
dec
lcall
mov
jnp
enter
cmp
icebp
cld
clc
push
lahf
flds
xchg
gs
mov
lahf
into
push
rol
adc
mull
dec
cli
mov
adc
jmp
dec
add
cltd
xchg
cmp
daa
cwtl
popa
ficoms
or
aam
lds
xorl
fcomp
insb
push
mov
dec
lahf
insl
rorb
push
clc
shlb
dec
cmp
jne
in
test
mov
jno
aam
dec
mov
out
lret
cmp
push
sub
pop
jecxz
adc
jecxz
lea
int3
push
inc
faddl
enter
sbb
cmp
pop
jnp
or
call
push
cmp
subb
sub
mov
jg
push
insb
scas
adc
sub
stos
aam
bound
sub
ja
test
dec
pop
adc
or
repnz
and
lock
into
pop
lds
mov
cwtl
jno
mov
or
jnp
hlt
adc
loope
mov
nopl
int
push
leave
iret
das
insb
or
pop
ljmp
shlb
sbb
add
gs
aaa
push
mov
leave
roll
sub
jo
sbb
imul
dec
xchg
adc
fnstenv
in
sbb
loop
dec
je
sbb
loopne
mov
fimuls
adc
push
addr16
mov
lods
enter
cmp
adc
out
and
jecxz
cmp
jg
lods
or
xor
xor
ret
hlt
adc
pop
mov
incw
jo
xchg
imul
jbe
repz
out
push
cmpsl
mov
sbb
roll
movsb
pushf
adc
repnz
ljmp
lret
in
jno
mov
cmpb
in
int
or
lods
sbb
or
adc
push
in
sarb
in
mov
ficoml
aad
adc
mov
xchg
or
or
sbb
mov
push
adc
mov
out
cmp
test
push
test
cs
mov
adc
xor
std
jo
mov
push
insb
aaa
mov
dec
jmp
int3
aam
mov
mov
add
mov
and
hlt
mov
mov
add
mov
jge
addl
cmp
sbb
inc
jle
test
adc
into
bnd
out
jno
xor
pop
jb
push
scas
decb
mov
and
loopne,pn
push
aaa
test
mov
xlat
xchg
out
test
insb
inc
in
dec
imul
outsb
xchg
jle
xchg
jmp
dec
dec
mov
lods
stc
cmpsl
lea
cmp
test
cmpsl
in
adc
inc
push
xchg
xor
adc
cmp
iret
jg
cld
push
add
sahf
movsb
movsb
cmp
pop
xor
xlat
aas
jns
in
stos
sbb
cmp
mov
or
rcl
clc
sub
push
imul
out
mov
das
and
mov
mov
dec
or
dec
shlb
jge
xchg
pop
cmp
int
das
pop
cwtl
mov
int
sbb
mov
movsb
jne
out
daa
scas
lds
rorl
and
ror
cmp
xchg
xchg
add
mov
ficomps
dec
xchg
enter
cli
fistps
or
inc
xor
and
jle
negb
popf
enter
jp
outsl
bnd
shlb
mov
push
scas
leave
add
sbb
out
lret
insl
cli
xchg
ret
sbb
ret
sub
es
jno
jae
lock
clc
sub
mov
ja
mov
jg
dec
mov
cmp
ja
fsubr
jo
imull
stos
add
or
adc
mov
mov
xchg
mov
cmp
ja
and
fbld
sbb
push
inc
dec
pop
jne
xor
cld
loop
jns
int
jl
ret
imul
jl
pushf
bts
pop
loopne
int
ficoml
leave
mov
xchg
test
std
sbb
das
sbb
insb
jnp
push
xchg
ret
mov
xor
jb
dec
jmp
call
jle
cli
sub
push
and
mov
xor
adc
cmpsb
inc
divl
pop
enter
rolb
ret
mov
add
add
cmp
push
sub
dec
out
cmc
test
adc
loope
cli
cmp
loope
or
repz
cli
inc
push
ss
sub
aam
mov
push
bound
repz
fstl
mov
mov
mov
inc
mov
mov
ja
movsl
sub
int3
rcl
lret
dec
outsb
cmp
movl
or
mov
mov
insb
lock
cmpsl
pop
or
sahf
mov
js
jle
stos
iret
movl
sbb
sbb
sub
mov
xchg
outsb
repz
mov
out
cmpl
dec
js
int3
mov
mov
pop
repz
push
adc
push
and
jg
pop
or
pushf
pop
jo
sbb
sti
jle
lds
aam
adc
dec
push
push
icebp
fisttpll
xlat
insb
sbb
inc
lods
and
mov
mov
push
mov
add
push
and
cmp
sub
sti
andb
fdivl
mov
cmc
lret
fwait
xchg
cli
sbb
mov
ret
jecxz
jbe
gs
mov
scas
push
sbb
xchg
mov
adc
sbb
cmp
mov
in
adc
lods
lret
jnp
sub
ss
mov
hlt
jb
xor
mov
pop
fwait
aad
loop
adc
adc
out
cwtl
push
mov
and
in
mov
push
in
push
adc
sub
mov
jno
push
repz
xchg
sub
inc
das
mov
cli
pushf
pop
roll
jmp
imul
sub
loope
imul
jns
enter
lahf
cs
sti
les
pop
mov
mov
xor
dec
mov
stos
hlt
push
jecxz
fists
sub
icebp
cld
or
es
cmp
pusha
push
xchg
in
adc
inc
dec
push
sub
push
mov
xchg
loope
sbbb
jg
cmp
cmc
lock
pop
push
in
xor
xchg
and
push
pop
imul
sbbb
or
sbb
aas
push
pop
dec
sbb
into
pop
insb
es
imul
pushf
jbe
out
es
and
jp
xchg
mov
dec
mov
incl
sub
aaa
jne
popa
cmp
mov
into
push
xor
popf
test
xor
xchg
bound
cmpsb
incl
xchg
repz
mov
iret
mov
xchg
add
xlat
push
xlat
and
xchg
mov
inc
sahf
xor
mov
imul
call
push
xchg
cmp
mov
jmp
ds
mov
push
icebp
outsl
mov
jns
inc
in
add
scas
mov
cmpsb
in
xchg
daa
inc
mov
clc
call
push
mov
sahf
push
cmp
jl
pop
push
dec
jb
jl
mov
insl
dec
js
push
fwait
mov
das
push
test
mov
mov
and
or
insb
and
data16
into
movsl
gs
shlb
sbb
push
shlb
cmp
and
jg
xor
push
inc
or
push
mov
mov
mov
rclb
jle
inc
dec
mov
sti
js
jne
gs
push
jbe
data16
clc
lock
out
outsb
jno
pop
jbe
out
or
ret
xchg
xchg
adc
lods
jmp
jp
lods
mov
inc
or
lods
test
dec
pop
push
jne
cmpsb
loope
prefetch
xchg
xchg
or
inc
jl
sbb
add
sbb
jmp
sbb
ds
int3
mov
and
std
scas
fmul
push
test
iret
inc
xchg
jmp
pop
adc
dec
cld
push
int
sahf
or
add
push
mov
cmp
stos
mov
pop
mov
hlt
cld
add
dec
xchg
pop
insl
push
or
outsb
out
arpl
out
add
inc
cmpsl
jns
iret
pop
in
notl
push
xchg
in
inc
sbb
add
dec
mov
test
push
or
or
or
jb
mov
lahf
out
xor
ficoms
lahf
mov
push
nop
frstor
pop
mov
insb
inc
jp
mov
ja
inc
jecxz
jno
dec
jae
jp
in
in
cmp
stos
xchg
xlat
dec
stos
test
aaa
daa
push
pop
sti
mov
gs
xchg
xlat
aas
mov
mov
sub
mov
push
mov
stos
push
daa
push
push
dec
pop
push
jb
aas
adc
lock
lock
fildll
or
push
fstpt
es
cld
lret
clc
push
push
lret
adc
cmp
mov
and
xor
xchg
jmp
push
jbe
push
aad
pop
test
fcom
push
les
arpl
adcb
jp
enter
xor
push
call
mov
cmc
cwtl
pop
push
or
lds
fistl
jmp
js
ss
stc
or
lods
dec
daa
nop
mov
mov
dec
mov
adc
into
shrb
frstor
cs
arpl
imul
es
xor
scas
imulb
mov
cmc
mov
mov
dec
pop
dec
xchg
icebp
xchg
cmp
pop
mov
frstor
cltd
dec
inc
cwtl
or
cwtl
pop
adc
dec
xchg
sub
mov
push
hlt
mov
mov
stos
cwtl
in
out
pop
into
push
imul
iret
add
fisubs
ret
pop
mov
call
cmpsb
out
in
push
aas
mov
sub
jl
and
sbb
cmp
cmc
or
mov
pop
andl
pop
push
mov
lret
shlb
int
or
jmp
faddl
dec
pop
les
mov
pop
pusha
insb
xlat
les
mov
and
mov
pop
paddb
xor
mov
inc
das
push
pop
mov
cmc
out
addb
lea
lods
push
lahf
mov
adc
leave
jle
es
mov
fs
dec
sub
je
add
push
call
sub
sbb
in
dec
cmp
push
pop
cmp
stos
cmp
pop
shl
loopne
sub
sti
pop
in
mov
lods
dec
pop
inc
sarl
int
adc
bound
in
and
lea
arpl
repz
fdivrl
jmp
push
dec
scas
jmp
je
fiadds
test
mov
fsubrs
mov
dec
jne
pop
inc
jle
sarl
xchg
aad
es
lea
bound
adc
mov
cltd
add
scas
dec
sub
push
jbe
int
sbb
push
push
pop
into
or
push
cltd
repnz
pop
xorb
lahf
adc
bound
dec
test
xor
sub
ficoml
addl
and
mov
mov
pushl
mov
test
enter
push
clc
adc
mov
cmp
push
mov
inc
xor
pop
dec
out
int
cmp
pavgb
stos
pop
mov
inc
pushf
pushf
daa
sahf
inc
mov
aad
jo
cwtl
inc
push
aaa
cmp
push
fcoms
sub
mov
ljmp
mov
pop
js
jecxz
or
or
rorl
jp
sub
sub
dec
lahf
lahf
testb
push
or
inc
arpl
jl,pt
call
mov
cs
jne
lahf
outsb
les
lahf
mov
leave
lret
insb
fsub
mov
in
cmp
hlt
mov
push
pop
push
pop
push
or
lods
ja
jbe
sbb
sbb
sbb
add
gs
mov
aas
hlt
sahf
push
cld
push
fsts
mov
pop
insl
dec
add
das
ss
dec
imul
xlat
test
mov
mov
jl
and
sbb
pop
pop
popa
push
add
or
add
scas
rcrb
fld
je
ss
adc
or
sbb
xchg
lret
push
jl
mov
fidivl
push
imul
add
cs
mov
ja
lods
push
shll
lods
in
es
push
sti
jl
push
sub
lcall
je
movsb
push
pop
add
jle
lahf
sub
mov
jmp
ret
mov
jae
mov
daa
xchg
mov
imul
jae
out
inc
fistl
cmp
call
icebp
jo
inc
fdivrl
cmp
jge
nop
sbb
jg
adc
mov
cmp
stc
shll
and
out
addr16
inc
pusha
jmp
xor
popa
dec
call
shll
add
dec
mov
fists
stc
ss
or
mov
or
cmp
fiaddl
jge
pop
mov
fidivrl
and
xor
int
mov
movsb
xor
mov
inc
push
adc
stos
adc
cmc
jns
or
mov
int3
int3
lock
cmpsl
cmc
repz
cmp
adc
mov
mov
inc
fistpl
dec
sub
pushf
lcall
jp
cmpsb
adc
mov
out
test
inc
push
xor
jecxz
cmp
lods
pop
sub
jmp
fnstsw
xor
jmp
seto
xchg
mov
ret
imul
pop
dec
mov
jle
lcall
jp
xchg
popf
mov
je,pn
filds
mov
jnp
lret
iret
adc
fsub
pop
sbb
mov
jb
enter
ja
pushf
dec
adcl
dec
ror
inc
jb
imul
stos
inc
jecxz
pop
push
rol
push
repz
cmp
ds
fiadds
jbe
jmp
fidivrs
ffreep
ja
test
dec
mov
xchg
out
cmp
enter
push
jg
rol
ss
or
subl
sub
test
sbb
insl
adc
sbb
les
fs
add
sbb
push
pop
cmp
jecxz
outsb
imul
jae
inc
add
pop
loopne
push
movb
in
inc
xlat
outsl
xchg
push
mov
mov
xorb
jle
je
xor
std
push
sub
into
add
dec
pop
cmp
out
stos
pushl
fcompl
mov
push
adc
fldenv
es
pop
jns
mov
jmp
mov
in
les
pop
bound
dec
jo
inc
icebp
sahf
xchg
ret
das
ja
std
data16
pop
jno
icebp
push
std
ljmp
or
cmpsl
jmp
jp
jns
dec
bnd
out
insl
push
imul
in
jae
rorl
push
add
std
aaa
not
mov
adc
sub
adc
pop
setne
sub
fbld
out
xor
nop
cltd
fstp
mov
mov
arpl
xor
jb
stc
sbb
mov
push
ljmp
aas
in
gs
jl
push
add
hlt
push
jae
push
fistpl
lret
or
icebp
fnstcw
or
ret
out
adc
push
ja
cmpsb
xchg
add
and
adc
jae
jecxz
add
shll
negb
sub
std
sbb
es
test
fwait
mov
fs
jecxz
adc
cmp
mov
mov
add
rcr
bound
bound
sub
pusha
cmp
sub
push
push
mov
ljmp
repnz
sti
fistps
jl
xor
inc
sar
ret
jno
faddl
xchg
mov
inc
les
jae
ret
push
sub
push
inc
ror
xchg
fs
sahf
mov
and
and
fwait
in
xlat
dec
adc
test
cmp
mov
loop
and
adc
repz
mov
cmpsb
mov
and
sub
mov
movsb
push
adc
aas
push
push
xchg
add
mov
fldcw
adc
cwtl
pop
pop
dec
and
sbb
rcr
bound
aaa
ss
push
lds
repz
push
mov
sub
leave
je
push
mov
push
hlt
inc
push
jae
adc
arpl
scas
sub
gs
test
lcall
nop
ss
pushl
sbb
push
push
imul
dec
loop
cmp
sbb
mov
mov
into
sbb
push
push
mov
add
hlt
addr16
jg
imul
dec
in
aad
or
data16
xchg
icebp
popf
pop
hlt
xchg
push
mov
lods
jbe
das
or
cs
jl
aad
cmp
sub
push
add
roll
sbb
jl
les
lods
jmp
add
mov
xorl
js
ja
and
jbe
sbb
cmp
nop
arpl
shlb
add
lahf
or
inc
js
cltd
leave
xor
ljmp
jmp
dec
in
sbb
or
or
sbb
mov
mov
inc
push
mov
or
imul
add
fstps
mov
pop
es
add
and
push
pop
jmp
sub
adc
or
ret
sbb
movsb
inc
jecxz
inc
addb
sbb
test
inc
outsl
mov
cmp
add
jg
orb
int
pop
sub
pop
pop
mov
xor
in
ja
push
es
inc
imul
call
inc
mov
cmovae
inc
cmp
xchg
dec
out
xorl
adc
adc
mov
mov
sub
pop
mov
mov
push
out
int
popa
js
inc
mov
mov
mov
mov
cwtl
cmpl
enter
or
nop
inc
mov
pop
inc
cmp
rorb
add
test
out
jg
mov
les
mov
mov
out
mov
sbb
pusha
jp
xchg
lods
es
dec
mov
inc
push
lahf
inc
adc
arpl
push
mov
xor
xchg
fcomi
inc
stos
mov
cmp
mov
mov
enter
cli
pusha
add
adc
cs
popa
int
xchg
mov
bound
xchg
mov
mov
lcall
ds
nop
outsl
pop
pop
mov
aaa
mov
xchg
addb
mov
mov
jle
or
pop
insl
in
lds
dec
mov
movsl
adc
xor
stos
aad
mov
std
lahf
cmpsb
push
out
pop
add
ds
push
aas
popa
loope
fimuls
sub
mov
das
mov
shll
rcll
fmul
and
mov
cli
mov
mov
cmp
xchg
movsl
mov
adc
fisttpl
das
pop
push
or
mov
adc
xor
shr
mov
bound
xor
sub
adc
xor
xchg
mov
dec
cmp
ds
scas
pusha
pushf
jle
mov
outsl
movsl
out
lock
les
mov
call
jle
dec
xor
test
popf
xchg
rcrb
jo
jl
and
nop
repnz
pop
sbb
shl
cli
add
mov
mov
pop
push
cwtl
sbb
stc
cli
out
cmpsl
mov
pop
add
scas
pop
aas
loopne
aad
pop
or
mov
sarl
mov
fcoml
not
and
notb
int3
int3
and
mov
mov
inc
aam
stos
pop
jae,pn
or
daa
daa
insb
inc
push
inc
push
mov
mov
ds
outsb
ljmp
xchg
jmp
add
jmp
mov
push
jle
push
scas
aam
icebp
call
push
and
xor
fstpl
pop
add
imul
lcall
add
into
stos
ja
jg
dec
add
sahf
push
mov
loop
mov
xor
and
fwait
mov
out
out
jecxz
mov
lahf
pop
lcall
loop
push
add
push
test
lods
sahf
mulb
pushf
push
dec
pop
daa
jne
andl
jo
and
fisttpll
loopne
sub
int
push
sbb
jmp
jmp
movsb
xchg
jnp
sahf
std
jo
adc
inc
call
test
and
and
xor
sub
sbb
inc
loop
inc
test
and
inc
dec
bound
addb
pop
push
mov
decb
loop
addr16
mov
cmpl
xchg
mov
fwait
jbe
xchg
rcll
sub
jl
icebp
out
sbb
xor
out
lret
mov
fmulp
cmpsl
jo
push
push
xor
lods
fs
dec
add
stc
aaa
push
je
stos
cmp
or
xchg
jbe
andb
xchg
pop
push
pop
into
mov
stos
adc
out
cmc
sbb
pop
xchg
and
in
jo
dec
call
outsl
sub
outsb
shl
xchg
loop
sbb
inc
gs
dec
outsl
pop
pop
in
rcrl
dec
inc
jecxz
lods
and
nop
push
dec
mov
xor
mov
popa
test
mov
in
jbe
leave
mov
test
cmp
mov
sbb
push
fwait
addr16
stc
push
fsubrl
mov
shrb
adc
repz
jne
jmp
test
xor
icebp
in
sahf
in
mov
lret
repz
xlat
in
cmpsl
sbb
cli
jge
pop
hlt
notb
or
pushf
add
mov
cmc
xor
and
int
jnp
xchg
push
xlat
adc
push
fnstsw
std
fs
sbb
hlt
push
arpl
or
pop
fisubl
mov
xor
fwait
mov
popf
shrb
or
mov
fldz
fucompp
adc
mov
loope
inc
mov
jle
mov
xchg
jno
fcomp
addr16
jbe
test
adc
ja
jbe
call
call
push
bound
inc
leave
fsubrs
mov
inc
int3
xlat
addr16
mov
sar
sahf
mov
xor
arpl
lds
ss
pop
sarl
les
imul
dec
dec
cmc
inc
mov
test
int
shll
push
jno
movsl
add
dec
arpl
pop
jne
jecxz
lret
pop
pop
pop
and
sub
insl
lea
mov
mov
gs
push
daa
or
inc
lret
insb
lea
dec
push
push
pop
push
imul
cmp
mov
rclb
mov
xor
mov
scas
sub
int3
pusha
js
stos
sub
movsb
movsl
cmp
outsb
sbb
iret
inc
insb
fcmovne
cmp
xchg
jp
xlat
dec
sbb
ret
lea
popf
movsb
xor
mov
mov
jnp
dec
lret
test
push
mov
mov
adcb
sub
je
test
je
scas
in
or
sbb
xchg
pop
pop
roll
and
push
add
test
icebp
call
loopne
iret
mov
nop
lock
pop
fstpl
pop
mov
test
cmp
insb
fwait
or
dec
incl
sbb
or
lcall
push
mov
jmp
int3
loop
sbb
dec
push
pop
inc
test
xchg
xchg
push
roll
push
xchg
mov
rolb
mov
scas
outsl
iret
cmpl
movsb
jmp
mov
cmpsl
and
outsb
and
inc
pop
pop
pop
stc
popa
mov
lahf
test
pop
imul
pop
test
dec
out
dec
lea
mov
in
ret
cmp
leave
sbb
orl
ds
mov
dec
xor
mov
leave
pop
rorb
cld
lret
push
xchg
imul
pop
ds
xchg
xor
clc
aas
jmp
pushf
push
xchg
inc
adc
cmp
data16
sub
and
sbb
or
ret
dec
lea
dec
mov
sahf
sahf
xchg
cli
xchg
pop
jae
mov
rcrb
sbb
jmp
js
in
call
xchg
add
pop
loop
into
fldl
jns
imull
sbb
call
mov
pop
pop
sti
dec
hlt
ret
xchg
into
in
pop
ljmp
mov
inc
aam
mov
jp
or
stc
sti
test
jge
push
and
out
and
lea
mov
addr16
sarl
or
lods
arpl
mov
mov
sbb
aam
js
xor
es
shlb
inc
ret
fisubrs
cmp
pusha
and
mov
lods
jecxz
mov
movsb
mov
xchg
sub
jo
jb
dec
cmp
jmp
dec
adc
imul
or
loop
adc
jb
cltd
hlt
fmull
je
lds
xchg
loope
iret
dec
sbb
sti
psrlq
lock
lock
fmull
mov
les
dec
pop
loopne
mov
mov
xor
pop
xchg
pop
cmp
xor
jp
mov
ret
icebp
sbb
cmp
dec
jo
xchg
in
adc
cmpsl
pusha
jo
rorb
andps
mov
int
mov
sub
lock
dec
std
lcall
aad
lods
cmpl
sub
cld
mov
gs
out
pop
das
into
xor
dec
cmp
test
mov
sti
mov
cmp
pop
cmp
lea
out
add
add
dec
test
lds
add
sbb
jge
clc
in
mov
xchg
or
or
mov
daa
fdivr
sti
lcall
daa
xlat
jae
inc
dec
jnp
or
push
adc
add
es
mov
xor
repz
cmp
das
movsb
mov
das
jns
sub
cmp
xor
adc
adc
cs
xor
xchg
xchg
ds
aaa
push
clc
cmpsl
test
inc
ror
cli
outsl
and
mov
mov
and
cmp
leave
dec
xor
dec
push
push
dec
push
imul
or
jmp
lds
cs
xor
dec
mov
into
push
fs
sub
dec
sbb
loop
inc
cmp
adc
call
mov
push
sti
lods
rcrb
in
sub
rol
adc
data16
jmp
mov
movl
out
popa
cmp
pop
dec
mov
mov
and
jno
mov
loopne
push
mov
mul
or
push
xor
cmc
cld
lods
xchg
lock
jae
pop
dec
gs
xchg
jg
xlat
cmp
shlb
push
adc
daa
mov
cmpsb
add
movsb
arpl
sarl
mov
lock
loopne
lret
cmpb
dec
add
pusha
inc
sub
push
push
outsl
lods
jg
push
pop
push
repz
sbb
cmpsb
pusha
pop
cmp
iret
test
std
mov
cmp
popa
sub
xchg
fsts
push
sbb
mov
push
out
inc
or
aam
out
stos
push
inc
roll
fsubrl
and
or
dec
fcoms
shl
or
popf
test
xchg
loope
dec
pushf
out
lock
loope
filds
leave
jns
mov
pop
pop
push
rorb
jle
push
cmpsl
jecxz
lcall
mov
push
pop
pop
pop
stos
cwtl
mov
daa
jg
cmp
sbb
mov
xlat
cmp
and
lret
inc
mov
jb
dec
rclb
mov
andl
adc
clc
stos
in
or
xchg
xor
insl
mov
sarl
shl
sub
ja
pop
pushf
fists
rorl
sub
push
adc
add
adc
out
push
sbb
mov
add
dec
xor
in
in
fsubr
cmc
aad
push
sub
fdivrs
ficoml
xchg
dec
push
and
jbe
pop
bound
fstl
add
push
mov
xor
fldcw
add
outsb
dec
mov
in
pushf
in
fistpll
fldl
into
insb
clc
inc
inc
add
movsl
mov
dec
notl
mov
or
sbb
stc
ret
and
and
fwait
std
jo
insb
mov
jae
loop
mov
mov
lods
pop
addb
pop
adc
sbb
les
out
cmc
adc
mov
shl
pop
imul
das
scas
imul
test
shlb
sbb
add
push
fs
cmp
jmp
negl
inc
fcmovnbe
push
push
fists
in
test
adc
ds
rcll
aas
call
xor
in
mov
inc
sub
mov
push
push
outsb
ret
xlat
mov
fwait
mov
sbb
out
mov
push
and
sti
scas
mov
les
cld
xchg
int3
data16
ficoms
cltd
les
lahf
nop
mov
sub
aas
dec
pop
fstps
stos
scas
inc
stc
hlt
outsl
dec
ss
in
dec
loop
jne
pop
jnp
mov
sbb
int3
xlat
push
mov
push
std
fldl
add
lods
adc
fs
rcll
xchg
mov
cmp
gs
or
popf
lcall
cltd
movsb
repz
push
inc
loopne
push
lods
or
xchg
rcr
shlb
sub
shll
mov
pop
mov
in
mov
aad
out
iret
loope
mov
cmc
cmp
cwtl
and
xor
inc
fistl
rol
cmp
or
fstp
mov
xor
mov
inc
es
aaa
push
jb
or
fildll
push
xor
mov
sbb
inc
loop
inc
mov
mov
je
xor
pop
adc
je
scas
adc
mov
mov
push
rcrb
ret
cltd
das
adc
mov
inc
jno
je
aam
mull
add
mov
lock
xchg
sbb
mov
xlat
test
push
test
pushl
outsb
mov
test
pusha
arpl
xor
dec
lock
sbb
dec
out
cli
lret
outsl
mov
push
test
test
inc
jl
out
imulb
push
repz
and
stos
aaa
ss
add
lcall
in
stc
cmp
addr16
outsl
xor
push
xor
lock
lds
aad
mov
push
fs
pop
adc
add
cmpsb
lcall
mov
test
testb
dec
cld
xchg
xchg
sbb
test
push
xorb
loope
sahf
sahf
pop
leave
xchg
mov
je
je
repz
dec
mov
push
popa
shlb
and
sbb
call
lods
or
push
nop
clc
sub
cmp
add
push
adc
fildl
and
adc
dec
daa
inc
in
shrl
sub
lret
out
push
and
jno
mov
and
mov
sbb
arpl
xlat
cmpsl
in
sbb
repz
xchg
pop
inc
popf
push
stc
and
hlt
inc
lock
xor
inc
xchg
inc
out
pop
imul
xchg
mov
xor
cmp
sbb
test
fldenv
out
aad
aaa
xchg
xchg
cmpsb
roll
test
popa
addb
and
sub
lcall
mov
or
dec
testb
push
adc
popf
cmpsb
jno
jbe
jnp
out
xor
int3
jp
jns
or
rolb
int3
or
fstps
pushl
movsb
push
sti
xchg
push
cs
and
pop
in
loopne
and
mov
and
pusha
out
sbb
mov
push
je
cmp
push
popf
xor
arpl
hlt
int
cmpsl
mov
mov
cmp
mov
cmc
in
jg
cmpsl
aam
icebp
in
je
pop
and
push
lods
das
lods
std
icebp
xchg
movsl
loop
mov
add
repz
stos
sbb
aam
or
int3
arpl
add
mov
fnsave
sbb
and
add
ret
bound
nop
popf
push
outsb
lock
fmull
dec
aam
add
xchg
mov
sbb
inc
movsl
sub
add
cmp
test
mov
mov
lret
ret
fdivrs
test
ret
push
adc
ret
clc
mov
sub
sbb
push
sub
adc
jns
dec
xchg
push
out
mov
fnsave
sub
out
idivl
jecxz
lahf
movsl
aam
adc
sbb
cmp
sub
xchg
in
popf
push
bound
push
out
sbb
fsubrs
cmc
shll
xchg
mov
mov
int3
mov
sbb
subl
xor
pop
cld
fisubrl
cmc
stos
js
mov
call
lret
jns
out
pslld
mov
pop
sbb
jp
enter
orb
cs
les
ja
push
mov
scas
push
mov
icebp
mov
test
leave
arpl
inc
inc
dec
leave
sub
sahf
inc
aad
repnz
cmp
push
ljmp
mov
dec
mov
lret
shrb
sub
bound
and
das
imul
pop
data16
jg
jo
push
push
inc
mov
inc
or
mov
sub
addl
sqrtps
push
sbb
jno
adc
gs
negl
cmp
inc
pop
hlt
xor
aad
xor
cmp
pop
imul
mov
push
shrb
pop
dec
sub
sub
fwait
repz
and
inc
jae
cmp
test
sbb
and
mov
clc
cmpsb
rclb
or
sbb
sar
scas
inc
test
cmp
lret
sbb
mov
pop
cmpsl
js
lock
movsb
or
mov
aam
or
xchg
pop
push
mov
push
jle
xlat
setne
mov
jp
pusha
fsubs
and
aam
aaa
add
jecxz
mov
popf
iret
add
xor
into
popf
pop
jp
in
xchg
pop
cli
shl
rcr
hlt
push
bnd
cmp
push
mov
ljmp
in
lods
xchg
loope
sub
jl
test
mov
dec
jecxz
and
cmp
add
fcoml
bound
mov
arpl
inc
movsl
pop
int
push
pop
clc
stc
in
cmpsl
daa
push
faddl
inc
sub
xor
sbb
mov
xor
gs
je
mov
emms
scas
stc
mov
xchg
clc
in
mov
cmpsb
addr16
push
mov
repnz
dec
rcrl
rol
jno,pn
call
je
pop
and
js
or
pop
xor
popf
lcall
subb
notb
pop
sub
sbb
mov
pop
push
out
xchg
push
cltd
shr
sub
inc
aad
jmp
jno
and
mov
cmc
test
imulb
mov
repz
into
push
mov
sub
sbb
out
jbe
xor
jnp
imul
sahf
or
stos
lahf
push
xor
or
out
clc
mov
and
fdiv
sbb
add
mov
loop
lock
sbb
jl
in
and
mov
fistps
stos
jb
in
push
lds
into
ja
dec
rorl
xor
cmc
es
inc
int3
inc
mov
ss
add
popa
pushf
outsb
test
cmp
sbb
adc
daa
cmp
push
jo
sub
stos
stos
gs
pop
aam
addl
inc
lcall
sub
pop
pop
xor
imul
jge
push
addr16
leave
dec
les
leave
psubsw
lahf
jbe
cmp
icebp
add
push
xor
pop
mov
js
loopne
mov
inc
stc
lods
cmp
sti
pop
push
or
mov
mov
jbe
mov
cmp
das
push
jmp
int3
je
out
outsl
sub
shlb
sahf
sbb
push
test
iret
mov
popa
adc
aad
popf
sahf
stos
dec
aaa
mov
or
mov
fisubs
xchg
in
cmp
rcrl
fnsave
call
inc
push
insl
pushf
dec
cwtl
push
pop
adc
mov
push
add
les
cmp
pop
push
mov
fwait
and
ljmp
les
addr16
push
adcl
imulb
push
mov
outsb
mov
and
hlt
das
test
fisttps
or
pop
push
push
incl
pop
rclb
mov
jae
popf
xor
imul
imul
loope
inc
sub
out
pop
xor
rclb
fistpll
and
adc
mov
xchg
inc
aas
mov
in
inc
dec
ljmp
test
sbb
testb
lret
leave
cmp
daa
pop
inc
mov
dec
sahf
inc
repnz
sub
das
enter
sahf
sbb
cli
movsb
mov
add
rorl
lock
sub
sub
sub
xchg
jg
sub
inc
jle
test
addr16
xchg
mov
mov
fsubr
push
bound
xchg
je
pop
push
or
and
in
inc
pop
jecxz
cli
fsubs
mov
mov
in
jns
mov
ljmp
arpl
pusha
in
test
xor
mov
outsb
rcll
imul
pop
lods
cmp
dec
mov
es
xchg
mov
jne
inc
sub
aad
push
das
out
sub
push
sbb
xchg
xlat
xchg
pop
dec
pop
adc
aas
lret
jnp
push
xor
iret
enter
cwtl
sbb
xchg
inc
fcomi
push
shr
mov
inc
sahf
dec
push
fcmove
iret
sahf
inc
sub
inc
add
push
cmc
push
pusha
aad
dec
popa
inc
push
loopne
mov
xchg
inc
addb
in
jge
or
test
out
xor
call
add
popa
push
push
mov
xor
leave
adc
iret
out
nop
outsl
jl
cmp
jp
push
cmp
dec
sti
cmp
sub
push
cli
jb
and
cmp
or
adc
mov
inc
mov
mov
les
sbb
mov
mov
pop
inc
dec
and
mov
fwait
andb
fucomi
cmpsl
and
jb
std
inc
scas
rcll
jns
out
int3
outsb
in
mov
dec
jecxz
jg
cli
or
and
pop
inc
dec
inc
jnp
inc
pop
cmpsl
jno
cli
cmpsl
test
stos
xor
sbb
jb
fmulp
movsb
mov
dec
hlt
mov
sbb
je
inc
pop
sub
mov
mov
clc
jae
xchg
repz
inc
cmp
leave
add
pop
mov
je
pop
sbb
cmp
adc
cmp
fildl
inc
sbb
mov
or
pop
xchg
movsb
lods
cwtl
xor
fwait
mov
xchg
das
es
test
sub
sbb
addr16
iret
sbb
jl
pushf
sub
cwtl
adc
and
sti
sbb
mov
pop
stos
pop
adc
mov
shlb
pop
lock
cmp
xor
inc
rclb
stos
test
ja
push
ds
xor
push
push
or
and
icebp
pop
addl
jmp
sarb
mov
jne
inc
out
fwait
lret
out
sub
mov
and
lods
xchg
rorb
jno
inc
fistps
ja
in
inc
loop
dec
mov
iret
movsl
stos
sbb
push
stc
shl
pop
xor
aad
push
pop
cli
out
divl
dec
fdivr
std
int
pop
push
shr
fdivp
aad
push
roll
mov
add
mov
pop
fistpl
in
leave
push
out
out
sub
data16
mov
sbb
dec
mov
mov
popa
lea
sub
or
mov
js
orb
jns
inc
xor
pop
lods
lods
andb
sub
call
mov
ret
ds
repnz
fwait
jne
js
inc
and
jnp
rcr
and
add
xor
and
in
pop
sub
dec
fisubrl
mov
imulb
repnz
lret
insb
shl
jmp
and
icebp
inc
adc
jle
push
pushf
aad
mov
pushf
mov
fadd
adc
aam
mov
sub
shl
cmp
out
inc
cmp
std
cs
pop
scas
inc
and
arpl
mov
arpl
scas
sbb
test
and
sub
cs
hlt
adc
add
popa
incb
push
push
inc
shrb
mov
pop
movsb
in
fs
and
cmp
ljmp
mov
dec
inc
sub
movsl
sbb
dec
sahf
lds
xchg
jno
daa
fisttps
mov
imul
rclb
mov
pop
pop
mov
sub
and
les
in
nop
decl
jo
aas
enter
xlat
sub
faddl
adc
mov
push
sarl
and
jae
sar
mov
add
inc
repnz
xor
sti
andb
jns
f2xm1
dec
cmc
dec
add
push
or
sub
push
pusha
out
lds
sbb
call
adc
mov
imul
fdivs
ja
xchg
mov
outsl
mov
mov
addb
and
adc
cmp
xlat
inc
int3
jle
out
mov
fiaddl
sbb
out
stos
and
sub
pusha
sub
push
xchg
call
sti
aad
aaa
sbb
sbb
jp
add
icebp
rorl
jge
push
ror
dec
sarl
mov
stc
in
or
daa
icebp
scas
push
fwait
lahf
lock
pop
push
orb
pop
dec
cmc
push
ss
popl
adc
adc
push
pop
lods
dec
sbb
repnz
pushf
fiadds
add
shll
fisubs
in
into
stc
and
loop
ret
push
popa
mov
out
mov
inc
dec
pop
jmp
rolb
rcrb
test
icebp
out
sbb
ljmp
stos
adc
repnz
rcll
add
inc
jge
pop
cli
adc
jns
movsl
addb
outsl
cltd
cli
in
inc
ret
and
add
jns
call
faddl
pop
data16
shr
jno
sbb
repnz
sub
out
jmp
out
js
sub
outsb
xchg
push
adc
subl
dec
pop
out
nop
mov
loope
or
lods
popf
push
and
loopne
mov
out
test
cmp
fwait
jns
dec
fmull
popa
jl
xor
xlat
mov
stos
iret
jb
call
push
rclb
add
xchg
filds
movsl
xor
cmp
pop
add
or
sti
ja
ss
jle
add
mov
mov
outsl
es
xor
lock
cmpsb
pusha
pushf
xor
push
pop
dec
ss
jl
sbb
arpl
sbb
dec
jp
or
test
mov
push
int3
cmp
sub
pop
loope
mov
push
fnstenv
dec
lock
test
cwtl
lock
int3
in
xor
das
dec
int
out
jp
orb
jg
inc
shl
pop
mov
push
std
outsb
xchg
or
xor
fwait
mov
rcrl
lods
in
push
lods
and
cmp
jle
xor
daa
mov
jp
cmc
cmp
lahf
sub
and
stos
shll
icebp
jns
xchg
add
loopne
dec
adc
pop
int
scas
aas
cmpsb
sub
ja
cmp
sbb
mov
clc
cwtl
mov
mov
ds
rorl
mov
fs
repz
lret
test
jo
test
ret
into
aas
popa
lods
or
test
aas
adc
in
out
test
xchg
cltd
fdivr
jae
sbb
xor
adc
stos
inc
inc
rcrb
add
xchg
ljmp
andl
out
out
sar
lods
dec
test
push
stos
dec
cmp
dec
jle
dec
xchg
std
in
popa
inc
mov
insl
ret
sub
push
pop
lods
pop
push
pop
mov
ret
nop
divl
or
sahf
add
lods
fs
xchg
fldcw
int3
and
jae
pop
out
push
clc
pop
mov
mov
cmpsl
jbe
ret
mov
pop
insb
adc
subl
xchg
pop
fs
js
mov
leave
pop
mov
jecxz
test
movsl
push
pop
fimuls
jne
sub
int3
lods
cld
or
mov
testl
mov
bound
push
xchg
inc
mov
out
sti
dec
adc
repnz
out
das
imul
mov
cmp
cmp
push
sub
scas
insl
xchg
push
cmp
fists
mov
in
sbb
test
xchg
cmp
nop
inc
dec
add
mov
rcl
pop
cmp
jno
call
lods
jae
rcrb
push
lret
pop
xchg
inc
js
js
xchg
push
sub
ds
cmp
mov
and
add
pop
ret
mov
scas
xchg
push
fsubrs
jns
dec
pop
or
rorl
in
mov
daa
ret
lahf
inc
test
inc
test
jo
ds
fisubl
mov
inc
jl
mov
pop
jns
cmp
xorb
iret
jmp
ficomps
cld
inc
or
cs
inc
int3
pushf
mov
cmc
xor
or
pop
pop
pop
mov
pushf
jne
mov
jmp
lret
aam
and
ja
xchg
repnz
or
push
mov
sbb
mov
outsl
not
inc
xchg
push
hlt
mov
scas
shlb
sbb
dec
xchg
aaa
mov
mov
clc
push
arpl
mov
lret
or
ds
mov
incl
push
or
out
addl
fsubs
xor
nop
call
inc
inc
pop
xchg
gs
inc
lcall
ret
imul
inc
loopne
jo
pop
inc
sub
inc
sbb
imul
jl
lahf
mov
ja
mov
pushl
sbb
pop
addl
sub
push
or
hlt
dec
mov
and
cmpsb
sti
adc
icebp
dec
ficoms
sub
pusha
cli
rol
addb
icebp
sbb
sub
shlb
add
lods
ret
les
pop
add
inc
in
cmpsl
and
xor
or
scas
lea
cli
jge
or
mov
fstps
jecxz
mov
test
cmp
push
imul
std
pop
push
ret
jbe
push
pop
adc
fistpll
mov
fs
lea
aam
or
aad
notl
mov
loopne
mov
arpl
add
ffree
mov
in
loop
jne
inc
call
lret
fcoml
insl
xchg
fisubrl
mov
fs
mov
sar
pop
mov
cmp
cmpsb
mov
dec
inc
sub
xchg
and
mov
je
add
cmp
xchg
push
sti
adc
scas
enter
jl
add
sbb
fnstcw
es
mov
fcomp
mov
cmp
push
xchg
subl
test
sbb
dec
jle
xchg
xor
jbe
ret
insl
push
pushf
adc
mov
push
jae
mov
out
add
das
dec
inc
cmp
cmc
nop
mov
pop
push
or
xlat
lods
cmpsb
movsl
mov
in
incl
cltd
addr16
loope
rorl
adc
pop
aas
pop
into
lock
push
insb
mov
popa
xchg
dec
push
push
loop
fs
cmpb
sbb
push
les
dec
loopne
push
jle
sarb
iret
pop
xor
mov
or
add
inc
cmpl
adc
xorb
cmp
lods
aas
xorb
push
add
and
int3
shlb
mov
mov
lea
hlt
ret
jg
fldcw
pop
lahf
sbb
cmp
ja
pop
repnz
lods
and
aaa
mov
rcrl
mov
fsub
jns
mov
cmpsl
add
call
xchg
rcll
dec
mov
ja
cmp
push
popa
js
adc
jo
push
mov
xor
xchg
sbb
out
cmpl
sbb
pop
jno
push
mov
fisubl
fcomip
insb
xchg
dec
mov
cmpsl
sahf
loop
pushf
xchg
and
lret
wbinvd
adc
cmp
dec
mov
mov
add
jae
stos
sub
pop
rclb
push
insb
cmp
add
mov
push
fsubrl
adc
das
inc
push
icebp
mov
mov
or
mov
test
mov
lods
data16
je
aaa
and
add
test
jmp
dec
fisttps
loop
and
test
ljmp
or
fisttpl
mov
mov
fbld
xor
push
mov
int3
popa
ret
jp
push
mov
xchg
add
jmp
mov
rcrb
fistl
ret
pop
cltd
push
mov
movsb
rcrb
les
and
ja
mov
jle
and
adc
xlat
push
stos
repz
sub
clc
add
ret
lahf
outsl
iret
rcrb
sti
or
cmpsb
mov
clc
popa
push
ds
xchg
es
cmpsl
xchg
insb
inc
out
jbe
jmp
cmp
sbb
push
fldt
cmpb
sbb
cs
mov
test
fcmovne
dec
or
es
sub
int3
je
sub
pop
incl
lds
add
inc
jle
iretw
mov
push
xchg
mov
ljmp
mov
add
or
icebp
pop
in
into
in
xchg
mov
xchg
dec
add
mov
adcl
cmp
push
lock
and
mov
pop
xchg
xchg
mov
lock
clc
je
add
stc
int
add
pop
add
and
add
jl
add
popa
icebp
xchg
pusha
inc
imul
jecxz
imul
sbb
jmp
lds
adc
es
push
lret
jecxz
inc
lahf
inc
pusha
outsl
mov
dec
add
or
cld
mov
adc
addl
push
xabort
push
imull
add
add
cwtl
sahf
xchg
mov
push
cmpsb
shrl
lods
pushf
pusha
jmp
xchg
arpl
cwtl
frstor
cmp
mov
lret
test
xchg
add
sub
push
lret
mov
push
or
sub
mov
test
es
in
sti
sbb
xor
add
andl
mov
dec
or
or
test
xor
stc
jnp
pop
push
int
out
jge
cli
dec
push
inc
mov
push
cmp
enter
mov
sti
add
sbb
cmp
test
dec
movsl
or
pop
scas
xchg
aas
cmp
in
jg
mov
mov
dec
aas
xor
and
int
repnz
ja
sub
in
shl
sub
adc
fmulp
jne
push
sbb
mov
pop
pop
movsl
mov
inc
and
sbb
xor
outsb
dec
mov
nop
dec
jge
lret
sbb
mov
cmova
jae
pop
repz
daa
lret
in
cld
scas
stos
pop
cmp
outsl
pcmpeqd
lods
xchg
scas
mov
cmc
xchg
aas
dec
xor
pop
or
jge,pt
stc
outsl
adc
mov
popa
and
inc
iret
push
aas
jmp
adc
popf
in
sarb
and
lea
mov
lock
sti
daa
or
add
sti
xchg
pop
bound
xor
fistpl
mov
xchg
sbb
test
stos
mov
std
and
pop
xor
cltd
fcom
push
sbb
mov
xchg
xor
mov
loope
fstpl
sub
mov
dec
out
xor
inc
cmpsb
pop
sarl
scas
popf
pop
lret
test
dec
or
pop
or
das
and
mov
icebp
negb
add
push
test
xor
addr16
notb
inc
xor
pop
jns
aas
jns
nop
sbb
jp
jae
mov
or
ds
xchg
push
daa
repz
std
mov
or
into
pop
nop
lea
scas
lcall
sub
in
jns
test
js
test
xor
sbb
les
jle
loope
jno
mov
mov
test
jne
iret
lcall
test
push
ds
inc
call
pop
or
xchg
inc
sub
ret
cmpsl
lock
cmp
out
mov
inc
mov
xchg
mov
jge
lret
imul
sbb
pop
fdivrl
pop
into
dec
xor
pusha
mov
push
sbb
lods
sub
inc
fsubl
shlb
or
aam
popf
or
pop
jo
call
dec
shll
sbb
mov
sbb
xchg
and
add
pop
test
fcompl
popa
movsb
lock
inc
jno
pusha
movsl
cmpsb
and
xlat
fisttpll
sbb
rcrb
insb
mov
jge
nop
jbe
mov
mov
loope
lods
dec
leave
xor
aas
test
xchg
data16
stos
xor
aaa
movsl
mov
test
mov
out
bnd
mov
jle
xor
push
mov
test
sbb
jno
mov
lahf
stos
lea
rorb
push
or
cmp
dec
lret
idivl
icebp
and
popl
dec
test
fldt
cmp
pop
xchg
push
pop
dec
icebp
lret
stc
mov
adcl
scas
xchg
cmc
aam
jmp
addr16
lods
enter
xchg
jle
pop
cmp
sbb
into
jl
fdivrs
stos
movsl
and
dec
pop
sarl
jmp
pop
xorb
xchg
in
jecxz
jae
or
insl
shlb
stos
rep
dec
and
and
and
dec
and
xor
shl
sbb
repz
cltd
sbb
fwait
inc
sbbl
xchg
xor
xor
jge
aad
pop
les
push
mov
test
fisubrl
inc
pop
xor
push
enter
xchg
cwtl
jno
jmp
mov
cwtl
fsts
stos
les
mov
sbb
jecxz
arpl
xchg
nop
mov
and
lahf
push
repz
fdivrl
push
pop
insb
cmp
mov
sti
jecxz
mov
xchg
popf
xchg
adc
cli
dec
pop
pop
mov
jmp
dec
fmuls
pop
jge
int
iret
adc
pop
rorl
pop
lock
subb
cli
pop
sbb
inc
jle
push
adc
jg
dec
repz
pop
test
cmpsl
push
testb
dec
xor
dec
mov
into
in
lods
mov
in
pop
sbb
das
into
adc
cmpps
fildl
subl
mov
pop
mov
andl
jae
daa
mov
arpl
adc
sub
mov
push
inc
jne
lock
pop
testl
cld
xor
mov
loop
lods
cli
xchg
sub
pop
sub
sbbb
sbb
dec
push
dec
sbb
ljmp
fdivrs
dec
pusha
xchg
shlb
or
ret
imul
or
push
add
bnd
xor
push
aam
aaa
repz
pop
stos
push
popa
push
out
xlat
popa
pop
inc
loopne
movsb
insb
dec
test
sarb
subl
cld
jbe
adc
testb
fmull
or
ret
test
sbb
or
je
hlt
push
js
mov
les
bnd
shrl
lods
xor
sbb
insl
pop
in
push
sub
push
cmp
out
fidivs
pusha
out
adc
fyl2x
push
inc
sub
add
add
scas
nop
mov
jl
fucomp
andl
sub
inc
push
xor
sub
xor
or
sar
adc
shlb
stos
jnp
dec
add
xor
outsl
jmp
push
mov
mov
fsubrl
daa
xchg
push
jne
lcall
es
movsl
lret
and
sbbb
cmc
out
jnp
fisubrs
scas
mov
mov
addr16
fdivrp
dec
jne
sbb
fwait
pop
int3
adc
or
push
push
jl
ffreep
iret
xchg
sub
cmp
into
cmpsw
mov
sbb
inc
mov
movsb
in
xchg
push
lods
loope
mov
xor
jnp
push
push
rolb
dec
fistps
sbb
sti
scas
pop
sub
je
add
jbe
push
dec
pop
jp
push
mov
jge
dec
dec
ret
pop
mov
inc
push
ljmp
push
js
push
aaa
cmpsb
int3
inc
int
jbe
xchg
dec
xor
sarl
jne
lea
jp
xchg
adc
push
mov
fidivrl
mov
and
adc
adc
xor
int3
hlt
std
adc
jecxz
lds
std
and
repz
or
stos
test
aaa
imul
push
push
xor
leave
xchg
xchg
pusha
fwait
push
data16
cmpsl
imul
sbb
inc
test
cmp
sub
cs
movsb
jp
xchg
mov
mov
scas
daa
inc
movsb
shll
stos
push
inc
pop
inc
idivb
sub
jns
mov
mov
jne
imul
xchg
xor
es
into
push
adc
idiv
movlps
lret
mov
mulb
in
je
out
ss
mov
pop
movsb
pop
lahf
int
shr
cltd
fildl
pushf
int
jno
in
push
add
lods
sarl
xor
mov
fxch
shl
mov
push
iret
cmp
leave
and
pop
mov
ds
negl
mov
stos
push
jecxz
mov
outsb
mov
xor
lret
xchg
aam
das
inc
mov
mov
cwtl
cmc
add
scas
xchg
in
js
stos
add
nop
lea
inc
in
pusha
pop
shr
outsb
lea
pop
test
std
pop
sbb
int3
das
jp
sarb
int
push
rolb
lret
push
jne
stos
push
ja
xchg
shrb
xchg
xorl
out
loope
mov
hlt
data16
ja
mov
mov
aas
cmc
aaa
sarb
or
add
lods
mov
sahf
cmpsb
mov
pop
or
loope
cmpsb
mov
insb
lds
and
jns
inc
push
inc
je
int3
negl
lret
in
popa
ss
ret
pop
lahf
repz
loop
lret
or
imul
xor
or
sub
frstor
fdivrs
pop
and
mov
shlb
mov
xchg
sbb
push
cltd
ss
mov
std
loope
add
addr16
aaa
jl
inc
shl
xor
aaa
or
imul
jp
or
scas
je
lods
xchg
and
jns
jnp
xor
ficoms
mov
jae
adc
mov
mov
jl
fwait
iret
xchg
xor
mov
js
lods
add
je
scas
cwtl
and
mov
xor
or
mov
pop
push
sub
xorb
jge
test
inc
push
or
lahf
stos
clc
adc
pop
jmp
jmp
aam
data16
push
xlat
or
js
mov
sbb
scas
push
push
test
sbb
push
xchg
jne
dec
mov
bound
cld
xor
jne
dec
pop
sbb
xlat
aam
and
ljmp
push
stc
pushf
int
idivl
pop
push
push
inc
cmc
ljmp
stc
pop
outsb
pop
stc
cli
popa
adc
sub
test
jo
cmp
aad
lods
lea
pop
mov
cli
aam
mov
push
ja
add
sub
jo
js
in
xchg
ds
sub
lods
xor
sbb
mov
in
mov
jnp
push
inc
testl
xchg
loop
cs
fcomp
iret
sbb
movsl
jo
xlat
push
and
repz
sbb
lods
pop
or
adc
dec
jb
adc
lods
dec
mov
or
and
push
adc
mov
pop
mov
xchg
test
rcrl
dec
cmp
jl
add
outsl
mov
push
pop
outsl
movsb
or
pop
fwait
test
fcompl
adc
mov
add
pop
jge
incl
push
sahf
add
fisubrs
imul
outsb
popf
stc
push
je
or
pusha
or
pop
loopne
mov
jnp
icebp
addr16
push
aam
inc
mov
mov
nop
ja
add
pop
shrl
mov
xchg
cmp
add
cmp
xor
jmp
rcll
mov
pop
test
push
jmp
dec
fcmovbe
sti
sbb
rcrb
adc
push
scas
mov
push
inc
pop
notl
aas
popa
lahf
ljmp
cmpsl
mov
mov
jne
movsl
imul
cld
sbb
mov
stos
xchg
gs
pop
mov
sti
pop
add
mov
scas
ror
shll
data16
or
mov
jne
dec
aaa
mov
loop
sbb
xchg
pop
notl
ss
outsb
adc
je
mov
add
xor
movsb
stc
call
push
in
adc
aam
movsb
popa
fdivs
push
inc
adc
pop
sub
adcl
or
and
movb
lods
test
ret
int
mov
mov
fnstenv
sub
sbb
mov
dec
jge
inc
popa
jno
mov
insb
cmp
lods
push
mov
das
xchg
test
adc
lahf
push
or
mov
addl
sub
pop
mov
imul
mov
test
sub
scas
rolb
ljmp
gs
into
in
cmp
jp
fs
mov
ss
mov
jl
lods
pop
mov
fsts
push
rorb
add
add
add
movsl
push
jbe
shr
mov
jmp
mov
jle
pusha
cmpsb
rol
test
mov
xchg
and
pushl
inc
sub
clc
cmp
sub
jnp
and
adc
pop
mov
sti
mov
xor
pushf
fistpl
pop
ret
mov
ret
fbld
inc
mov
push
xor
test
in
adc
push
mov
in
add
enter
hlt
push
stc
lods
xchg
decb
testl
ljmp
xchg
stos
mov
scas
adc
stc
and
pop
or
push
int3
bound
lods
lcall
scas
idivb
out
repnz
addl
jbe
mov
dec
jo
movsb
ret
mov
xchg
negb
sti
mov
sbbb
add
ffree
or
arpl
cmpsl
aam
fisubs
pop
or
cmpsl
ret
test
js
hlt
jp
dec
and
jb
dec
jge
bound
or
or
fisubrs
xchg
movsl
push
sahf
jbe
push
test
xchg
clc
lahf
std
cwtl
push
jo
aad
mov
into
in
cmp
and
and
mov
cmc
in
mov
sub
xchg
popa
outsl
insl
jbe
xchg
addr16
out
push
inc
repz
arpl
stos
int3
lea
prefetchw
adc
sub
daa
mov
jecxz
push
xchg
xor
imul
test
rcrl
sarl
push
andl
adc
add
sbb
mov
mov
jnp
rorl
arpl
fucom
out
xor
dec
ds
and
lods
into
and
pop
mov
mov
pop
add
mov
adc
mov
inc
push
fs
and
add
xchg
cmp
or
ljmp
mov
fsts
push
cmpsb
nop
push
sbb
sbb
inc
push
imul
das
cmc
add
cs
jecxz
repz
lods
es
ret
or
adc
ret
cltd
inc
divl
jae
imul
aaa
jg
and
and
lods
scas
or
push
mov
rcrb
and
xchg
pusha
mov
and
xchg
mov
lods
mov
mov
mov
je
cmp
pop
jae
imul
dec
dec
xor
cmp
movsb
icebp
js
movsl
shrb
jle
sbb
pop
je
lods
cmpsb
orb
mov
pop
mov
sub
cli
inc
rolb
cwtl
sbb
xchg
pop
test
xchg
out
mov
mov
js
jecxz
lods
sbb
insl
aad
adc
push
push
pop
outsb
add
lock
pop
inc
xchg
mov
mov
lret
xor
sub
sbb
xchg
inc
fcmove
in
mov
bound
mov
sbb
cwtl
shlb
in
and
sbb
pop
xchg
xor
push
xlat
pushf
fisubrs
hlt
cmp
js
test
add
sub
pop
icebp
stos
sar
popf
sbb
push
cmpsb
in
mov
xor
push
lcall
test
mov
addr16
fmul
xor
pop
popa
lods
fdivl
mov
mov
xor
mov
ror
das
push
stos
sub
test
lcall
add
repnz
je
mov
sub
adc
jne
ljmp
fwait
xlat
cmp
aad
scas
imul
xchg
push
andb
pop
mov
pusha
sbb
mov
fwait
mov
add
cmp
leave
iret
xchg
or
xchg
sbb
into
adc
cmc
popf
cmp
mov
stos
mov
sbb
incb
sub
or
rorb
jae
int3
pop
fisttpl
test
int
cmpsb
adc
or
std
das
dec
hlt
push
mov
pmaddwd
popf
cmpl
and
pop
cmc
cwtl
loop
add
inc
mov
ret
sub
pushf
decb
or
push
daa
das
loop
xor
pop
repnz
add
into
pop
subl
push
in
and
divl
subl
jp
and
adc
je
or
insl
push
jecxz
std
mov
xchg
repz
ret
mov
jp
inc
push
push
lods
mov
push
decl
pusha
or
cmp
adc
push
mulb
aaa
fcmovnu
mov
aaa
mov
hlt
das
in
xchg
popf
pushf
push
xchg
jne
mov
sub
fsubl
addb
dec
mov
ret
test
xor
pop
notl
xchg
ljmp
sbb
pop
out
lock
xchg
mov
lea
cmc
lock
jmp
jle
jge
adc
inc
in
in
adcl
hlt
mov
adc
adc
out
lods
adc
cltd
rcl
repnz
cltd
mulb
stc
aad
stc
and
sbb
mov
pop
ja
aam
enter
leave
inc
in
pop
idiv
add
pusha
pusha
jno
rcll
jle
adc
loop
mov
sub
cs
inc
loopne
pop
jnp
fs
xchg
inc
mov
icebp
push
jecxz
aaa
cltd
pop
push
cmpsb
popa
or
xlat
mov
and
add
adc
fidivrl
mov
jae
ret
roll
enter
xchg
and
nop
mov
and
mov
nop
push
jle
ret
jl
frstor
insl
inc
mov
adc
and
mov
decb
mov
dec
pop
push
push
or
int3
movsl
xchg
adc
data16
mov
jo
inc
int
scas
jmp
setb
pop
add
imull
and
jmp
xchg
inc
pushf
ljmp
sbb
fldl
sub
fwait
mov
add
gs
outsb
subb
xchg
xchg
into
in
push
shll
xor
mov
pop
adc
pop
dec
je
push
sahf
inc
arpl
sbbl
mov
pusha
ljmp
cmp
pop
pop
xor
inc
sbb
ffree
pop
scas
int
mov
test
lock
xchg
test
shrb
xchg
or
addr16
mov
xorb
loope
sbb
sbb
add
sbb
mov
cmp
sar
ja
jmp
cmp
sub
push
scas
mov
fwait
negb
pop
cltd
mov
cmp
and
ljmp
test
pop
inc
dec
xchg
lahf
and
test
and
mov
push
pop
xlat
and
jge
xchg
sub
in
ficompl
lcall
cmpsb
add
sub
push
jp
mov
mov
das
jne
add
jge
lds
out
jg
cmp
cmp
inc
jge
fcomi
sbb
shll
mov
dec
outsl
mulb
aas
arpl
je
aam
jbe
jo
cmp
adc
mov
mov
or
pusha
pop
and
nop
push
test
jae
stc
dec
lea
out
xor
out
pop
lock
pop
lods
sbb
fisttpll
cmp
pop
jns
dec
psrld
xorl
fiaddl
fdiv
call
call
add
and
adc
fs
cmp
test
subb
nop
ret
hlt
push
arpl
add
inc
cmp
cmp
test
push
cld
test
xchg
and
dec
or
and
ret
pop
add
push
pop
xor
jmp
jae
push
push
mov
jb
xor
xor
es
test
rcll
fstpt
mov
add
jecxz
xor
bound
sbb
dec
push
loope
ficoms
inc
xor
inc
rcrb
cli
jne
scas
hlt
sti
cmpsb
vpsrlw
push
jecxz
add
mov
or
sahf
je
and
fmulp
and
adc
sub
cmp
pop
sub
or
testl
setl
push
mov
aad
leave
mov
cmp
xchg
ds
pop
sub
aam
push
out
clc
aad
pop
leave
adc
mov
rolb
mov
jbe
dec
xchg
push
loope
ja
popf
mov
pop
jp
mov
jae
popa
pop
dec
jns
xchg
sahf
jo
in
mov
loope
les
stos
ja
subb
fidivl
addb
subb
add
shrl
nop
imul
call
cs
xor
dec
dec
adc
push
push
xchg
sub
inc
lds
lcall
inc
loopne
mov
jno
les
movsb
jns
mov
int
mov
cmp
adcb
out
dec
je
mov
mov
mov
cmp
lock
adc
adc
fbld
pushf
fdivs
or
cmp
je
sbb
int
mov
imul
fs
push
push
sub
push
sub
and
lret
sub
jle
rcrl
pop
xchg
lock
lds
adc
dec
dec
scas
seta
ret
jns
out
bound
ja
call
int3
pop
iret
push
mov
push
lret
mov
lcall
call
jo
xor
add
add
push
inc
das
add
or
int3
jecxz
adc
lds
push
and
aad
xchg
insl
cmc
xchg
rolb
es
inc
dec
outsl
into
bound
push
rorb
xor
jl
std
out
jo
xlat
push
or
dec
inc
mov
push
or
lods
and
cwtl
xchg
adc
dec
data16
data16
sub
fldenv
rclb
in
movsb
and
xchg
xor
stc
jecxz
ret
pop
pusha
lret
push
mov
in
inc
mov
jl
loope
mov
test
test
cmp
mov
and
sbb
rolb
xor
adcl
sarl
in
fstpt
mov
cltd
sub
or
mov
lock
call
or
call
mov
push
mov
and
inc
scas
dec
and
mov
mov
mov
jp
pop
add
inc
adc
mov
add
and
sub
or
add
xchg
mov
fcmovnu
outsb
out
lods
mov
ja
xor
outsl
and
xchg
mov
test
add
cmpsl
add
mov
dec
mov
cmp
sbb
adc
or
test
mov
lock
xchg
xchg
je
xlat
xor
fstpt
or
pushf
addr16
push
jg
rolb
mov
add
mov
cld
pop
xlat
lahf
insb
lret
lds
sbb
sti
xor
cmc
pop
mov
in
lock
sbb
push
mov
adc
aam
cmpb
sbb
cli
push
cmp
push
jp
or
iret
dec
xchg
or
mov
gs
mov
or
and
cmp
nop
cltd
jne
push
dec
mov
pop
insl
ret
out
mov
clc
fwait
clc
adc
and
call
rclb
or
pop
jg
rorl
mov
jge
popl
jp
jo
icebp
sbb
aas
inc
iret
push
ja
arpl
fadd
push
mov
stc
fdivrl
movb
cltd
push
jno
push
pop
dec
or
rcrb
or
lahf
es
int
mov
movsl
out
out
fidivl
xor
rorl
jno
or
jae
insl
pop
and
lret
xor
insb
xor
mov
add
jmp
lahf
popf
dec
in
cltd
push
shr
enter
fistpl
jge
dec
mov
lret
test
cmp
mov
fidivs
test
cmp
insl
add
mov
repz
repz
aaa
add
ficomps
sub
in
add
ljmp
sub
pop
in
in
push
sub
pop
sbb
cs
dec
shrb
addl
cmp
inc
xor
sti
fcmovnu
rcll
jae
movsl
adc
lret
je
stos
loop
mov
cmp
in
daa
gs
jg
sbb
dec
les
pusha
and
int3
movsb
mov
jo
stc
add
cmpsl
test
sbb
dec
push
jnp
stos
sbb
addr16
imull
imul
hlt
lods
cli
nop
cmc
fwait
mov
mov
outsb
lahf
jb
outsl
pop
icebp
and
ror
sysexit
insl
pop
pop
mov
mov
mov
and
popl
add
lcall
or
sbb
and
cmp
push
mov
lods
ret
enter
sti
mov
push
jecxz
xchg
popa
mov
and
jl
or
mov
cmp
jmp
fstpt
jge
cmpsb
insl
lock
adcb
push
cwtl
sbb
cld
fistps
mull
jo
shrb
inc
mov
or
sbb
leave
and
mov
mov
rclb
loop,pn
xor
or
mov
xchg
jbe
mov
pop
leave
push
sbb
mov
iret
lahf
jo
xchg
pop
leave
out
push
call
cmp
jns
sbb
dec
stc
lahf
mov
xchg
js
dec
jl
rep
sub
xor
add
out
pushf
add
cmp
fiadds
add
jno
in
sub
pop
pop
in
fistpll
dec
lea
nop
xchg
out
xor
es
ficoml
pop
sub
cmp
outsl
int
mov
push
mov
je
sub
je
lahf
inc
movsl
push
out
sbb
lods
sub
mov
push
pop
out
push
jmp
ljmp
mov
adc
mov
movsl
mov
sar
jne
push
in
int
mov
and
fisubs
std
sbb
out
adcb
and
daa
and
cmpsb
adc
xor
xor
adc
aas
stos
fcoml
repz
adc
rolb
je
mov
fisubl
ss
dec
mov
pusha
lea
or
je
inc
jmp
push
sub
adc
data16
inc
out
cmp
xchg
mov
insl
fs
cmp
mov
das
inc
sbb
ficoms
outsl
jae
jbe
popa
call
test
and
or
loope
push
push
push
inc
dec
sub
mov
xlat
fs
mov
jb
leave
loope
mov
insl
imul
xor
test
sub
dec
movsb
stc
sbb
and
cwtl
and
add
sbb
xorl
pop
iret
pop
mov
jbe
adc
sbb
dec
leave
dec
jbe
sbb
mov
ja
dec
in
jb
sub
jge
mov
out
sahf
mov
movb
gs
xchg
pop
mov
push
or
aam
push
rclb
pop
adc
psraw
js
lods
les
jl
je
xchg
loope
test
lret
xor
sahf
push
mov
movsb
sbb
adc
repz
scas
sub
in
hlt
or
mov
mov
stos
pop
std
out
in
push
mov
xchg
lret
insb
sbb
test
subb
jo
shl
push
sti
imul
jbe
mov
and
ds
testl
and
stc
lret
push
loop
sti
shl
add
stc
dec
sbbl
loop
pop
aas
jbe
jns
jo
fxch
rolb
or
push
sub
pop
rcll
nop
shll
test
sbb
mov
or
in
pop
xchg
jnp
pop
mov
pop
loop
mov
xchg
and
push
arpl
xor
pop
popf
mov
adc
and
mov
sbb
or
and
outsl
inc
loopnew
stos
das
mov
jl
mov
inc
sbb
sahf
and
popf
push
mov
loop
jle
jle
inc
sti
mov
sub
das
fildl
push
cmp
cltd
sub
movsb
clc
inc
out
xorb
adc
mov
or
loope
int3
and
push
inc
icebp
repz
ljmp
pop
iret
sub
and
and
cs
mov
xchg
adc
jp
or
and
mov
stc
das
add
xchg
lea
dec
add
mov
dec
enter
repnz
lretw
adc
sub
rcl
sarb
lcall
outsb
jo
pop
insb
mov
sbb
pop
mov
dec
stos
jg
adc
or
cmp
pop
leave
add
test
add
jae
fidivl
clc
jmp
cmp
mov
inc
cmp
or
jns
stc
push
or
and
jp
das
mov
ja
mov
and
inc
adcb
mov
mov
jnp
aaa
inc
mov
lea
addb
data16
and
je
adc
in
mov
lock
push
mov
pop
int
sbb
mov
or
cmp
add
xchg
imul
mov
scas
sub
les
adc
pop
pop
shl
mov
pop
mov
pop
lods
pop
inc
dec
lock
sbb
pop
in
jmp
addr16
cli
imul
sbb
daa
xor
push
and
insl
cmp
sub
xchg
fisttpl
sbb
bound
inc
cli
mov
loopw
adc
or
out
fcmovnbe
loope
pcmpeqb
mov
mov
loopne
subb
jg
ds
out
loope
pop
repnz
cli
ret
sbb
jnp
adc
xchg
into
in
jmp
inc
adc
push
mov
lret
jae
lret
cmp
bound
push
mov
mov
add
mov
aad
mov
in
jae
loope
and
push
rcll
cmpsl
js
pushf
hlt
cmp
int3
lret
inc
add
adc
mov
jo
fcoms
pop
pop
xor
dec
in
aaa
adc
stc
and
cs
sahf
mov
add
and
or
ret
repnz
push
mov
inc
movsl
xchg
push
outsb
push
jne
mov
mov
flds
mov
lret
sub
movsb
dec
xor
mov
mov
sbb
sti
icebp
test
mov
sbb
int
cli
xchg
mov
jge
or
pop
popf
fwait
movsl
int3
lods
inc
aaa
push
testb
fbstp
cmp
sbb
adc
ss
filds
xchg
pop
or
mov
mov
ja
aaa
pop
ljmp
adc
fstpt
xchg
cmp
sub
push
pop
xchg
cld
addr16
jne
inc
in
aas
rcrl
mov
add
inc
push
or
fidivl
push
pop
xor
cs
dec
inc
out
jg
out
pop
mov
insb
pop
sbb
aad
pop
mov
push
or
mov
lods
dec
jecxz
dec
fcmovu
dec
mull
fs
xchg
adc
pop
jecxz
push
inc
add
idivl
dec
aas
add
pushf
sbb
xchg
arpl
leave
imul
lret
aad
ret
inc
fs
pusha
loopne
jb
rorl
and
fbld
clc
add
hlt
mov
xor
inc
cmp
subl
mov
mov
pop
popf
inc
subl
push
testl
fldenv
push
mov
dec
mov
cli
push
sub
dec
out
and
dec
push
add
mov
and
mov
cs
int3
lret
ret
push
ret
dec
and
pop
test
ret
scas
repz
mov
insb
pop
leave
fdivr
and
adcl
popl
in
xor
add
sbb
mov
stos
insb
lds
out
or
sub
push
addl
aam
push
movsl
xor
xor
adc
int
sti
push
lret
stos
int
sbb
sbb
fldl2t
or
test
orl
adc
call
add
mov
pushf
call
or
icebp
mov
sarl
add
cmp
scas
push
or
aaa
arpl
xor
stos
xchg
adc
mov
mov
dec
and
ja
lds
jne
es
mov
ja
out
movsb
inc
push
jne
sub
cli
push
push
loopne
push
insb
pop
lock
push
arpl
push
cmp
inc
lock
lods
sub
shll
mov
fsubrs
iret
fildll
insb
das
dec
lcall
loop
inc
out
mov
push
scas
movsl
cmp
negl
add
xor
stos
cmp
dec
scas
outsl
jno
pushl
xchg
int3
pop
mov
data16
pop
ret
es
or
adc
mov
sub
pop
push
jo
sbb
add
loopne
std
sti
mov
xor
push
inc
cmpsl
lea
sbb
jl
pop
loop
pop
fisttpll
ja
icebp
adc
sub
inc
inc
mov
jns
jp
in
adc
inc
sub
adc
and
xlat
xchg
popa
xor
mov
sar
fmul
fdivrp
ljmp
addr16
inc
out
fstpt
out
ret
and
adc
jmp
clc
arpl
and
mov
aad
movsl
mov
sti
push
and
xchg
data16
push
xchg
inc
pop
lea
pop
fmull
bound
rep
in
cmp
sbb
push
dec
xchg
bnd
cmp
pop
xor
insb
fdivrs
daa
bound
push
push
and
add
or
repz
mov
jmp
fwait
stos
sti
or
jge
sti
ret
pop
xor
into
rol
mov
in
sub
mov
movsl
dec
mov
cmc
cmp
dec
fbld
lcall
cs
fldt
fmul
scas
std
or
clc
xor
mov
or
repnz
push
test
addr16
out
mov
adc
and
icebp
lret
out
xor
lea
dec
mov
or
mov
in
dec
push
lahf
and
pop
sarl
stos
rcl
xchg
mov
sub
lods
cmpsb
roll
fs
loope
pop
xlat
out
test
cmp
jb
cmp
dec
std
adc
in
inc
push
in
and
into
rcll
or
mov
inc
lock
mov
test
jge
in
pop
and
and
xor
rcl
out
xor
std
cli
cmpl
sub
test
fmull
push
ret
push
lret
mov
scas
jmp
adc
dec
rcrb
cmp
lret
pop
enter
mov
lods
cmpsl
test
xchg
pop
into
sbb
inc
pop
cwtl
sub
pushf
loopne
aam
adc
mov
fmul
or
mov
scas
inc
dec
in
sbbb
lock
pop
pop
dec
mov
call
cli
jbe
or
sbb
popa
pop
sbb
mov
or
xchg
sbb
and
cmc
cltd
or
stos
and
push
push
dec
jg,pt
and
sub
or
and
pop
jecxz
cwtl
out
sarb
mov
test
xorb
push
push
lea
mov
iret
fdivs
sahf
loopne
xor
cmpsl
out
fiaddl
jmp
mov
mov
call
push
and
and
jb
iret
roll
cltd
movsb
divl
mov
out
adc
mov
jo
jg,pt
into
test
subb
lods
rol
decb
or
inc
daa
rcr
jl
mov
mov
cmpsb
xor
jg
mov
jns
add
add
mov
sub
inc
je
cmc
pop
and
outsl
or
push
rcrb
add
lret
ljmp
iret
jp
adc
pop
xchg
leave
push
out
popf
mov
mov
mov
lock
mov
jmp
and
jnp
push
mov
push
cli
lret
pop
jg
pop
sbb
daa
orl
insb
int3
push
cld
pusha
xor
shl
lcall
sub
push
test
push
push
cli
xchg
rep
dec
lret
cmc
sbb
pop
xor
loop
sbb
jecxz
pusha
xor
repz
mov
adc
movsl
into
dec
add
test
inc
xor
in
xor
jge
shlb
and
mov
and
sbb
xor
rorl
or
push
iret
and
adc
sbb
hlt
cmpsl
jnp
xchg
out
sub
loop
fwait
jo
sbb
mov
dec
stc
clc
std
dec
addr16
pop
rclb
inc
jns
sbb
stos
stos
imulb
idivb
and
xor
pop
jno
adc
daa
push
push
or
jb
pop
shll
addb
movsl
sbb
inc
adcl
dec
push
rcll
inc
inc
sub
mov
mov
clc
cmp
and
fcoml
outsl
adc
inc
mov
inc
mov
lock
cmp
popf
bound
ljmp
insl
mov
mov
mov
xchg
pop
outsl
adc
mov
dec
data16
insb
add
push
xchg
xchg
mov
fisttpll
xchg
in
fdivrl
jl
xchg
mov
dec
dec
mov
push
outsl
insl
sub
dec
cmp
dec
addr16
ljmp
dec
mov
adc
sbb
mov
lock
loopne
imul
jne
mov
rclb
mov
cs
sbb
loop
aaa
jecxz
aam
and
rorl
adcb
andb
pushf
adc
cmc
xor
sbb
cmc
stos
pop
rorl
fdivrs
shlb
push
cmp
out
stc
add
mov
cli
lock
lods
add
cli
push
pop
xchg
push
or
lods
shrb
popf
pop
stos
push
in
into
fldl
adc
lahf
and
rclb
xchg
jae
in
inc
adc
or
xchg
jne
fs
jmp
cmc
fs
repnz
out
jle
sbb
addr16
fwait
mov
daa
popf
cs
jle
xlat
and
out
aaa
insl
pushfw
aaa
les
subb
test
mov
sub
stos
inc
repnz
xchg
imul
mov
cmp
pop
movsb
pmulhw
pop
repz
cli
pushf
lcall
jbe
bound
add
sbb
in
jb
mov
mov
xchg
push
adc
and
xchg
sar
pop
insb
cmc
mov
pop
pop
add
xchg
pushf
dec
popf
ds
mov
pushf
dec
int
xchg
pop
jno
pop
adc
rolb
cmp
push
fcoml
mov
mov
mov
push
jns
xor
jl
and
push
or
mov
xchg
pop
and
sbb
jns
cmc
shrb
mov
lock
pop
mov
fldcw
pop
out
test
lcall
mov
stos
aas
adc
in
test
cs
cmove
jns
mov
inc
mov
data16
pop
mov
push
push
aam
mov
push
inc
cwtl
mov
push
mov
movsb
popa
scas
stos
aas
add
xchg
or
mov
push
imul
lods
sub
into
sub
into
inc
dec
or
inc
jnp
out
sbb
xchg
daa
fbld
loop
loope
pushf
push
cmpsl
rol
pop
dec
arpl
int3
push
arpl
mov
cld
add
mov
add
cmovo
sub
scas
cmp
mov
jb
add
mov
dec
notl
or
call
fcmovnu
int3
pop
adc
arpl
mov
cmp
lods
call
data16
out
add
fucomp
inc
stc
fs
push
test
into
lods
push
pusha
movsl
push
pusha
lret
push
out
pop
cmp
ss
or
repz
jmp
pop
xlat
xor
jnp
jge
js
and
fistpl
push
nop
or
data16
xchg
jnp
jmp
bound
iret
ret
mov
ret
outsb
clc
cwtl
clc
dec
sbb
in
inc
jl
mov
fsubrp
sbb
sti
inc
dec
lea
mov
mov
jb
call
inc
je
shll
test
jg
in
xlat
cmpsb
xchg
pop
es
dec
mov
sub
mov
adcb
loop
lcall
push
add
rclb
das
cltd
mov
cwtl
xor
ss
and
popf
pusha
repz
aaa
pop
and
pop
fnsave
jecxz
mov
insb
andl
mov
pop
xor
dec
ret
pop
push
adc
mov
clc
pop
rcrb
rorb
mov
mov
pop
scas
or
idivb
fnsave
test
mov
mov
jmp
mov
loopne
push
inc
sahf
outsl
mov
mov
lock
inc
sub
pop
sub
mov
pop
insb
call
and
lahf
lock
inc
in
rclb
mov
push
dec
or
je
bndmov
cmc
push
fistl
pop
test
fcomi
xchg
into
cwtl
nop
or
dec
xchg
mov
adc
aam
dec
cmp
dec
aaa
push
gs
inc
and
insb
xchg
stc
call
xchg
lcall
fisubrl
rorb
mov
push
imul
arpl
sbb
xchg
jl
clc
push
push
mov
mov
mov
aam
sbb
xchg
mov
repnz
pop
lds
pop
sub
pushf
xchg
rclb
adc
push
dec
test
mov
mov
scas
sbb
adc
sub
sbb
out
inc
faddl
add
inc
pop
fisttps
dec
fnstsw
daa
in
int3
mov
pop
mov
pop
cmp
sar
mov
mov
adc
addr16
test
das
imul
push
pop
jo
fucomi
scas
test
mov
mov
cmp
jne
sti
fwait
dec
jl
dec
adcb
int
mov
stos
popa
stos
push
mov
stos
push
and
push
test
push
movsb
lcall
movsl
and
pushf
jbe
test
imul
adc
mov
bound
bound
mov
sbb
push
xchg
cld
loope
aas
mov
mov
mov
mov
fwait
jo
aam
push
dec
add
cmp
inc
data16
movsb
cmp
fisubs
les
aas
mov
jle
xchg
mov
repnz
xchg
xor
lahf
mov
inc
sbb
fld
lret
imul
jb
adc
sbb
sarl
push
sti
add
cwtl
jecxz
xor
and
cmp
jmp
jno
into
mov
sbb
push
mov
cmp
repnz
fwait
shlb
mov
mov
insl
xor
mov
dec
push
jecxz
stos
push
stos
enter
aam
inc
mov
sbb
sbb
and
xchg
cmp
cmp
add
lea
rclb
es
ficomps
sub
ds
fisubrs
out
xchg
loope
sub
xor
mov
mov
cmpsl
dec
xchg
or
sbb
cmp
mov
arpl
mov
jle,pn
adc
sarl
iret
cli
dec
jnp
aas
mov
or
pop
add
xorb
cmp
mov
dec
in
xchg
pop
lcall
xorl
jp
mov
xor
test
jecxz
std
bound
xor
xchg
mov
dec
das
adc
arpl
outsb
push
mov
push
mov
dec
les
xchg
mov
out
cmp
jmp
pop
rorb
sub
roll
mov
xor
dec
push
arpl
xchg
dec
or
mov
adc
push
sti
gs
dec
insb
jecxz
dec
mov
jnp
inc
repz
push
arpl
stc
pop
ficoms
xor
in
lahf
sahf
push
cmp
movsb
cmpsl
mov
add
loope
shll
ljmp
and
insl
push
shlb
in
mov
push
jp
xor
loope
movsl
or
roll
mov
xor
add
or
pop
mov
sti
xchg
cmpsb
or
lcall
in
popa
pop
push
cwtl
jge
dec
adc
xchg
pushf
js
push
popa
pop
xor
popa
bt
cmp
fwait
test
into
repz
sbb
mov
movsl
jns
mov
push
int3
jnp
and
inc
insl
sti
jo
mov
stos
adc
jnp
test
push
test
ret
int
adc
out
out
rcll
ss
cmp
jp
mov
inc
or
out
cs
xorb
dec
lcall
xchg
incb
out
jge
repnz
mov
std
add
push
nopl
ret
iret
dec
dec
sarl
cmp
stc
pusha
lods
andl
dec
xor
mov
enter
iret
imul
gs
and
fldt
fdiv
inc
mov
fdivp
add
insb
cmpb
ret
outsl
out
movsb
push
aad
inc
cmp
push
test
mov
out
insl
dec
test
out
xor
mov
mov
lea
inc
sub
lret
lcall
and
xor
andb
and
or
loop
cmp
sti
arpl
lahf
bound
add
lods
xor
arpl
xchg
push
int3
mov
pop
enter
push
and
fs
movsb
jg
pop
cmp
inc
mov
inc
mov
mov
pop
imul
mov
mov
mov
aad
add
shrl
sahf
push
mov
sbb
sub
movsb
loope
das
push
xchg
push
adc
ds
and
inc
jbe
cld
xorb
out
aaa
jne
cwtl
idivb
xor
push
mov
sahf
mov
fsubl
mov
arpl
out
arpl
in
and
dec
or
mov
add
psrld
jae
and
and
enter
add
mull
outsb
mov
mov
jecxz
mov
or
daa
xchg
jl
dec
pop
icebp
sub
xchg
imul
push
and
jnp
ret
out
fdivp
mov
xchg
or
mov
fdivrl
adc
scas
mov
not
enter
xlat
push
or
xchg
shlb
mov
popf
repz
sbb
je
fisubs
es
mov
js
aad
mov
mov
es
popf
inc
xchg
cmp
cmp
gs
icebp
push
xchg
cwtl
sub
sahf
pop
mov
cwtl
fidivrl
fstps
scas
fisubrl
and
cltd
xchg
scas
dec
sbb
push
xchg
xor
dec
mov
lds
xor
loop
arpl
or
xchg
call
stos
out
and
negb
xlat
cmpsb
in
push
push
fs
dec
mov
stos
mov
out
lahf
mov
adc
cld
idiv
aaa
sbb
cmp
cmp
adc
xor
cltd
inc
aad
push
sbb
cmc
fwait
std
shll
arpl
scas
sti
pop
subl
inc
shl
add
je
std
test
aas
sub
xchg
pause
sahf
sub
and
sarb
dec
out
pop
lret
ret
mov
in
mov
cmpsb
ret
ljmp
mov
stc
call
out
outsl
push
jnp
lahf
out
or
rcll
push
xor
dec
scas
ja
pop
popf
mov
and
cmpsl
sti
or
icebp
inc
in
sbb
bound
sbb
inc
cmp
inc
xor
push
lcall
sub
and
adc
ss
push
mov
xchg
insb
lods
add
xlat
push
shl
adc
pusha
data16
pushf
int
inc
es
lea
mov
or
inc
in
jno
push
hlt
xlat
cmp
rcrb
dec
and
call
jle
sub
or
inc
and
lds
mov
jae
inc
add
lock
lea
ret
lret
icebp
jbe
pop
dec
nop
push
jmp
shrl
or
clc
repnz
ja
shlb
lahf
jle
inc
sub
mov
or
jns
push
inc
std
lods
adc
lcall
jne
aam
cmpb
bound
lahf
int3
rorl
mov
rclb
pop
out
insb
add
sub
cmp
push
cmpsl
out
inc
je
dec
xchg
adc
popa
adc
push
lcall
sbb
leave
lret
inc
pushl
cwtl
mov
and
push
dec
fisttpl
ret
das
add
mov
std
jp
stos
stos
sub
testb
mov
cmpsb
mov
sbb
dec
xchg
into
fsubrp
fdivl
sub
pop
mov
push
mov
int
push
scas
repnz
sbb
lock
add
xchg
das
mov
fldl
mov
loopne
inc
repnz
mov
repnz
addr16
pop
inc
jbe
xchg
lret
cmp
pop
testb
push
dec
xchg
jb
lcall
adc
repnz
xor
xlat
jg
cmp
fists
cmp
jo
adc
outsl
push
lds
sub
cld
push
aam
loopne
daa
retw
jl
rclb
lock
mov
sahf
je
jmp
jo
sahf
ret
popa
mov
sbb
dec
or
and
lret
cmp
xchg
cmp
pop
stos
dec
insl
push
sbb
pop
mov
in
ffree
cwtl
fbstp
sti
fucomi
movsb
ret
xchg
bound
mov
inc
mov
xchg
icebp
ljmp
call
mov
and
out
cmp
mov
subl
dec
push
loope
js
mov
sub
into
pop
fstp
pop
pop
dec
jae
int
outsb
das
push
fildll
add
push
scas
es
mov
imul
daa
cmp
lock
mov
and
mov
ja
loope
inc
shll
leave
mov
mov
pop
xchg
hlt
push
mov
push
push
mov
sbb
repnz
cmp
int
mov
ss
dec
mov
out
add
xchg
xor
divl
test
sbb
je
lcall
ja
xchg
jmp
pop
push
icebp
add
cmp
jns
pop
push
test
lds
mov
cs
sub
lret
adc
ja
xchg
test
push
sbb
ret
cs
mov
sub
mov
and
jns
shlb
mov
mov
cmpsb
popa
mov
leave
inc
test
cmp
ja
xchg
mov
call
push
insl
scas
nop
ja
inc
adc
xchg
jns
mov
mov
icebp
inc
inc
fs
movl
or
add
test
and
and
shl
shl
fldcw
stc
les
mov
std
fsubs
std
aas
cltd
pop
pop
jg
inc
xor
pop
sbb
jns
out
push
mov
adc
inc
loop
arpl
xchg
or
or
inc
cmp
je
inc
or
or
mov
inc
es
xchg
push
lock
sbb
pop
out
addr16
aaa
and
clc
mov
or
test
inc
popa
xor
movsb
nop
inc
cld
mov
sbb
jne
ja
or
popf
pop
lock
scas
aad
add
and
xchg
sub
xchg
into
xchg
outsb
mov
sbb
fstpt
movsl
jge
xchg
or
and
sub
lea
movsb
jb
ret
bts
jb
int3
arpl
dec
sub
das
xchg
mov
ficoms
sbbb
sbb
sub
scas
aad
dec
hlt
dec
and
jns
addr16
out
loopne
test
add
xchg
cmpsl
inc
iret
inc
cs
lret
shlb
dec
add
mov
xchg
push
fucomip
pop
and
or
fnsave
stc
insl
cmpsb
frstor
sahf
loope
ret
add
push
sub
or
hlt
add
mov
stos
push
nop
or
mov
ret
in
std
add
aaa
adc
mov
dec
mov
jl
mov
xor
xchg
sub
jle
sub
shr
inc
mov
inc
in
and
jge
pushf
out
adc
dec
xchg
cld
cmc
mov
cwtl
or
or
xor
sbb
mov
sub
arpl
adc
adc
mov
xor
cmp
out
cmp
repz
addr16
sub
mov
shr
sub
test
sub
rorl
aam
std
ret
enter
sbb
and
pusha
mov
adc
pop
push
les
push
jo
int
push
and
mov
int3
pop
sahf
dec
sub
popa
addr16
std
dec
or
daa
je
inc
add
lret
push
in
lahf
inc
loop
adc
testl
inc
pop
mov
dec
sahf
adc
cmp
mov
jg
pop
add
mov
push
adc
xor
add
xor
das
mov
jl
imulb
sub
and
vmread
sub
cli
stos
shlb
push
xor
cmpsb
push
inc
pop
mov
add
arpl
insl
jmp
sbbl
insl
or
imul
ficoml
mov
ret
xchg
and
mov
jae
ds
add
scas
lea
sar
rorl
inc
pop
cmp
mov
mov
dec
inc
push
js
push
add
movsl
adc
cld
rcrl
mov
dec
xor
clc
xor
sbb
cltd
mov
stc
push
pop
inc
cmp
push
cmp
sub
outsl
add
je
in
pop
lret
pop
addr16
imul
adc
daa
stos
mov
lcall
add
pop
xor
mov
lock
cmpsb
out
mov
fdivrs
mov
fs
pop
sahf
xchg
add
ljmp
sbb
pushf
jle
movsl
mov
sarl
fs
or
aam
mov
mov
repnz
and
cmpl
shll
cmp
popf
dec
lods
lods
popl
mov
decl
and
sbbl
adc
stos
sub
rcll
std
pop
ss
ds
pop
xorb
jge
sub
cmp
pop
fcompl
scas
sbb
mov
notl
xchg
sahf
je
dec
adc
dec
fs
adc
pop
xorb
add
pusha
dec
rcll
loopne
addb
jmp
xchg
sahf
cmc
mov
cwtl
jl
jo
jl
mov
imul
or
inc
in
mov
int
les
cmpsb
mov
loop
fdivs
lret
jbe
inc
lods
xor
dec
add
cmp
xor
shll
push
pop
stos
jle
repz
mov
mov
mov
or
ret
push
xchg
pushl
xchg
and
push
xor
jns
icebp
movsb
rorl
sub
test
xchg
xor
pop
in
cs
mov
loope
sub
sti
addb
in
sti
push
inc
or
leave
test
dec
jbe
jbe
mov
addr16
adc
cmpsl
mov
imul
jno
cmp
fimull
fidivrs
testb
or
pop
xchg
loop
jge
dec
and
mov
fwait
data16
add
jecxz
scas
mov
adc
cld
popf
in
sbb
adc
mov
ja
fnstenv
ret
cli
or
js
push
fdivs
test
into
mov
mov
daa
das
dec
mov
dec
dec
mov
inc
std
pop
dec
jle
pop
push
dec
xchg
xchg
and
dec
dec
xor
cmp
xor
sub
sub
sbb
adc
ljmpw
add
icebp
mov
les
out
pop
and
cmp
dec
aam
pop
sub
mov
icebp
push
js
orl
aam
data16
mov
xor
cmp
out
pop
mov
push
aas
fcomip
subb
fwait
push
out
mov
mov
or
pop
in
mov
jb
inc
lea
jecxz
mov
or
repz
in
sub
pop
clc
xor
mov
push
out
mov
mov
mov
push
sub
ret
fcos
loopne
jmp
jae
loop
lret
imul
inc
sbb
stc
lea
push
add
jp
test
cmpsl
mov
jae
pop
aam
push
sar
pop
adcl
mov
das
pop
xor
insb
cmp
mov
scas
mov
adc
mov
in
adc
and
pop
mov
pop
cld
mov
jno
dec
out
out
or
rcrl
insl
adc
imul
dec
jb
sub
mov
adc
repz
int3
fisubrs
cmp
scas
or
in
test
add
cmp
lea
mov
inc
in
add
fistps
inc
mov
push
mov
scas
aas
mov
test
dec
add
mov
movsb
pop
mov
scas
hlt
xor
pusha
mov
dec
mov
lret
aaa
push
pop
xchg
pop
sahf
icebp
pop
jge
rcrb
shll
test
mov
cmp
loope
inc
daa
cmp
xlat
flds
pop
ds
fcoms
mov
pop
repnz
dec
cmc
lret
pop
lds
shll
xor
cwtl
xor
xchg
data16
fs
mov
and
and
dec
jb
inc
xchg
lret
hlt
mov
xchg
pop
insb
imul
insb
inc
aam
in
push
sahf
sub
adc
arpl
mov
js
dec
int
out
std
mov
in
imul
cmp
jae
das
mov
pop
or
ret
sub
sbb
xor
inc
dec
and
mov
nop
jge
and
std
out
xchg
mov
test
ss
pop
dec
sub
std
ljmp
mov
jo
mov
or
jno
jecxz
rcr
jle
sub
enter
out
cmpsb
sbb
into
icebp
jmp
dec
mov
inc
push
jbe
pop
daa
xchg
push
pop
adc
scas
fs
mov
test
mov
cmp
xlat
lock
jnp
mov
push
dec
adcb
sbb
lret
jno
mov
jo
push
inc
insb
mov
inc
in
sub
cmp
hlt
loop
or
fwait
xor
jle
push
and
pop
in
mov
lcall
push
or
in
cli
es
out
insb
mov
inc
inc
das
ja
orl
mov
mov
popa
dec
loop
xor
dec
insl
pop
in
push
jecxz
jmp
sub
out
jge
popa
mov
shl
cmp
and
movsb
inc
lret
and
cmp
xor
lcall
loope
push
shlb
mov
cmp
jmp
pop
inc
xchg
inc
push
xchg
in
mov
jg
inc
test
icebp
sub
in
mov
sbb
jnp
pminub
sub
clc
cli
add
sar
stos
xchg
ret
xor
inc
movsb
mov
enter
push
dec
sbb
je
out
icebp
js
inc
mov
or
test
push
fisubrs
lods
sub
sub
inc
call
xchg
jp
cmp
jl
sub
jge
pop
inc
sahf
inc
xchg
lahf
push
in
cmp
fdivr
push
iret
orb
xchg
cmp
out
ss
aas
mov
mov
and
dec
call
rcll
cmpsb
push
ss
es
jge
mov
xchg
clc
jmp
mov
lods
cmpsb
repz
imul
add
jge
jb
outsl
dec
xchg
push
and
pop
subl
mov
in
adc
adc
xor
pushf
sub
jnp
pop
int3
insb
mov
cmpsb
fsubrs
mov
and
fsubs
dec
int3
or
or
jecxz
mov
cmpb
shrl
stc
jne
and
cld
push
jns
in
mov
xchg
jbe
mov
xor
daa
rol
cmp
pop
aam
fimuls
imul
stc
xor
sub
mov
dec
push
push
mov
aaa
mov
shll
leave
jb
sub
jmp
cmp
shlb
sub
push
xchg
dec
outsl
mov
stos
fistpll
loop
push
xor
and
mov
sub
mov
in
jne
and
mov
out
sbbl
ss
sbb
dec
mov
pusha
mov
sbb
lret
dec
mov
cmc
insb
inc
inc
add
out
dec
enter
test
loop
test
ja
or
sbb
cmc
lret
faddl
add
dec
inc
pop
pusha
mov
pminsw
imulb
enter
adc
and
xlat
cmp
dec
sbb
enter
addr16
std
repz
dec
push
mov
add
cmp
add
daa
sbb
imull
push
cmpsl
or
stos
xchg
lods
in
mov
cltd
dec
aad
and
push
xchg
xchg
pushf
jne
jp
dec
inc
sub
cs
xchg
mov
subb
out
insl
mov
mov
std
xor
fisubrs
dec
fdivrs
dec
pop
test
inc
mov
xchg
test
test
sub
mov
pop
test
dec
icebp
lcall
into
mov
push
popa
je
sti
mov
and
and
ljmp
rorl
aam
repz
jb
jp
mov
lods
push
pop
in
mov
pushf
push
jns
mov
aad
outsl
fwait
pop
lods
jle
adc
pop
jmp
test
pop
and
ljmp
xor
inc
mov
aam
out
test
orl
shlb
xchg
mov
inc
push
aas
jmp
xor
test
ja
jl
hlt
mov
lock
xchg
aam
data16
mov
loope
lock
push
insl
subl
aas
jne
lret
roll
cmc
cmpsb
xor
sub
stos
xchg
xchg
rol
adc
pop
stos
xor
nop
testb
inc
jmp
add
xchg
push
das
aad
repnz
pop
shlb
stc
add
push
lret
dec
and
popa
cmp
jmp
inc
and
scas
and
sbb
push
xchg
std
bound
std
xchg
cld
push
xchg
sbb
fidivl
out
sub
lea
in
outsb
fadds
xchg
pop
sbbb
push
inc
and
lock
dec
imul
mov
pop
stos
stc
neg
repz
jns
inc
xor
movsl
pop
pop
pop
pop
je
mov
int3
lds
sub
pop
mov
je
adc
test
gs
add
data16
rcrb
cmc
mov
jmp
jl
lret
mov
iret
decl
es
lret
add
jecxz
xor
xchg
lea
cmpsl
adc
stos
call
enter
outsl
or
add
lahf
int
les
lods
in
fstl
and
lea
sbb
or
rcll
pop
insl
fwait
loope
jo
std
outsl
subl
xchg
sbb
jmp
pop
sahf
jl
xor
mov
xor
mov
dec
in
stos
sahf
int3
stos
les
jno
inc
shrl
scas
adc
cmp
jnp
inc
addr16
lods
inc
dec
movl
push
jb
clc
mov
ficomps
test
inc
xchg
test
add
push
lcall
out
lock
or
xchg
je
mov
shrb
sbb
mov
mov
cltd
push
pop
jmp
je
mov
pextrw
mov
fistpll
and
sbb
lahf
cmpsl
mov
xor
xor
push
test
inc
sub
ret
add
call
lds
push
sbb
jo
adc
fnstcw
stc
sub
mov
pop
pushf
rorl
sbb
aaa
sti
fists
es
or
test
sub
xor
jne
and
push
add
sar
xchg
mov
cmp
hlt
pop
inc
fcoms
push
push
std
loopne
shll
ret
pop
pop
rcll
adc
push
fdivrl
popa
rcll
mov
mov
jecxz
sbb
cwtl
cmp
repz
outsb
mov
fstpl
adc
loopne
lea
jmp
mov
cmc
sub
out
jbe
fistl
fcoml
cmpsb
or
mov
fistl
and
adc
xor
addb
bswap
loope
ret
stos
xchg
add
jae
test
es
pop
ret
or
scas
popa
xchg
loope
int
inc
cmp
stc
int
pop
jmp
addr16
mov
out
adc
jns
push
cmp
stos
adc
add
mov
and
sbb
adc
and
push
stos
push
push
dec
int
xchg
cmp
incl
pop
xchg
dec
aaa
dec
ror
fs
dec
xor
push
xor
call
and
ds
out
loopne
fcomps
dec
out
mov
xor
adc
pop
int3
dec
cld
test
dec
lock
jne
xchg
enter
les
inc
pop
jbe
mov
xor
jnp
enter
add
and
push
xchg
test
dec
push
adc
pop
loop
test
repz
iret
test
imul
shlb
xor
pop
cmp
jp
mov
add
out
loop
mov
bnd
leave
pusha
std
jg
xchg
dec
rcl
sbb
arpl
mov
cmp
test
sti
jb
lds
ficoms
inc
jns
jl
arpl
xchg
and
add
mov
cld
sti
sub
mov
lcall
mov
dec
cmc
jge
dec
movsb
cmp
aam
ret
ds
push
fsubr
ret
sbb
movsl
sub
js
inc
insl
out
call
sbb
loope
gs
jg
lock
pushf
pmullw
fldl
jae
sub
hlt
les
shll
add
cmp
mov
aas
dec
out
pop
pop
mov
pop
pop
cwtl
test
mov
sub
and
sbb
pop
cmp
mov
outsb
push
jbe
jl
xchg
jl
dec
cltd
mov
and
adc
jne
mov
pop
cmpsb
loope
stos
jge
fldenv
push
xchg
pushf
cmp
jp
mov
jg
jmp
sbb
jmp
dec
and
inc
sub
std
sbb
popa
and
lods
or
nop
lret
inc
xchg
mov
or
pop
jnp
xor
jg
mov
cli
mov
pop
fisttps
das
jecxz
sbb
sub
into
ja
fistpll
cltd
inc
fisubrs
stos
outsl
mov
jnp
paddq
nop
into
add
daa
call
addr16
mov
loopne
bound
pop
add
sbb
mov
mov
xor
add
cmp
jge
push
fwait
mov
ja
enter
iret
inc
sub
pop
ljmp
movsl
mov
sub
inc
cmp
pop
aam
sbb
cltd
xor
xor
add
adc
mov
cmc
outsb
leave
js
pop
imul
cmp
push
shlb
std
mov
jbe
xchg
push
cmpsb
adcl
mov
stos
mov
mov
jp
xchg
push
bound
fildll
add
cmp
test
sbb
outsb
mov
inc
out
int3
fcompl
jmp
pop
adc
test
jle
push
mov
aam
ljmp
int
add
dec
je
shrl
incl
push
out
popa
mov
lock
loope
ja
pop
sbb
mov
pop
inc
and
dec
push
xchg
mov
ljmp
add
in
cmp
inc
or
sub
arpl
in
push
fucomi
cli
cmpsb
jmp
outsl
jle
sbb
ss
ljmp
icebp
shll
add
xchg
fdivrl
aas
lods
in
push
push
out
dec
fcoml
jno,pt
int
xor
daa
addr16
sbb
cli
aas
pop
xchg
lds
lcall
mov
insl
mov
xor
xchg
adc
popa
sub
clc
xchg
clc
clc
sub
pop
call
jb
mov
clc
push
lds
jbe
or
ds
std
movsb
mov
jg
aas
sbb
cwtl
jge
fists
lea
test
shrl
lahf
loopne
mov
mov
jns
dec
enter
or
imul
xor
mov
lods
sbb
jo
out
aaa
into
push
push
in
jl
or
add
inc
mov
mov
pushl
scas
aam
leave
xchg
xchg
pushl
aaa
sub
mov
je
aam
pop
sub
pop
sbb
jno
jo
jno
jb
pusha
addl
popf
cltd
ds
push
cmp
jbe
adc
sbb
xlat
push
or
hlt
inc
dec
cmp
popf
sbb
xor
cmp
lret
jmp
shlb
jmp
xor
sbb
aad
ret
and
dec
jae
divl
pop
test
dec
sub
dec
neg
adcb
inc
loop
out
jns
xor
popa
sahf
push
test
stos
repnz
xor
and
push
pop
jbe
int3
pusha
sbb
xchg
sub
and
and
xor
cmpsl
stos
sbb
add
pusha
ret
xchg
mov
test
subl
lea
and
cmp
data16
sbb
xchg
mov
jecxz
mov
ret
push
dec
mov
add
addr16
sti
mov
pop
fwait
in
ret
mov
imul
lock
aaa
rcll
scas
in
mov
inc
stc
mov
je
xchg
repnz
jo
push
pop
jne
pop
push
jnp
mov
leave
pop
fcomp
cmp
daa
and
mov
xchg
lods
gs
in
nop
cmp
arpl
lret
xchg
sub
cmc
mov
mov
pop
lods
sbb
xchg
pop
ja
or
rcll
pop
test
xchg
jge
inc
pop
movsl
lret
jb
xor
fldcw
leave
add
jl
pop
hlt
adc
mov
sbb
xchg
push
inc
jae
inc
int
nop
xchg
mov
pusha
iret
call
stos
mov
sbb
adc
sbb
jno
inc
int3
push
adc
jecxz
daa
cli
shlb
mov
sar
popa
movsb
pop
pop
mov
aam
ja
imul
movsl
mov
dec
dec
xor
cmp
out
outsb
hlt
mov
out
orb
mov
pop
and
gs
and
adc
sub
movsb
jo
fwait
add
inc
cmp
add
ja
sbb
or
add
ja
xchg
pusha
push
lods
dec
addr16
lret
inc
jecxz
lret
ja
and
fwait
pop
xor
loope
mov
fdivr
outsb
std
je
cmp
stc
xchg
mov
fwait
inc
fsubr
cs
xchg
cmp
sub
insb
pop
sub
lock
repz
sbb
sub
xor
xor
jnp
scas
lret
push
push
pop
arpl
adc
scas
movl
and
inc
pop
sti
imul
test
and
cltd
popl
push
adc
mov
stc
add
dec
lahf
jb
scas
ss
loop
ffreep
test
mov
xor
adc
pop
mov
sub
cmp
ja
inc
push
stos
test
sub
fwait
sbb
cmp
aam
mov
xor
aas
mov
inc
pusha
cltd
arpl
and
sahf
aaa
gs
and
adc
sub
in
imul
sub
sbb
sbb
cmp
pushf
int
mov
aas
xor
std
jle
jmp
dec
xchg
call
cs
jecxz
cmpsl
push
push
jmp
dec
les
aam
pop
mov
movb
mov
jecxz
or
mov
dec
std
testb
cltd
adc
ljmp
call
insb
mov
and
cmpb
jae
sub
pop
fs
faddl
rorl
testb
sub
sbb
lahf
pop
rcll
ljmp
test
sub
lret
add
cmp
aas
mov
test
pop
hlt
push
or
lds
rcl
dec
mov
xchg
adc
hlt
xor
jle
sbb
mov
xchg
imul
repnz
stc
adc
dec
pop
mov
mov
movsl
lods
or
mul
ljmp
jns
movsl
outsb
dec
or
fwait
sbb
inc
icebp
and
shrl
and
jnp
int
push
jecxz
pusha
stos
mov
or
and
cmc
into
sbb
in
mov
pop
cmp
cmp
in
add
push
je
lock
jo
mov
push
or
imul
cmp
out
out
pop
fiadds
add
nop
cltd
jb
sbb
pop
popf
push
in
fists
jnp
test
xor
in
lods
mov
movsb
inc
imul
out
jl
inc
cmp
dec
sub
jg
stc
cmp
in
sarl
cmp
insb
cmc
cmpsb
push
sub
xor
js
sbb
push
sub
mov
add
cmc
icebp
jno
aaa
lds
fnstsw
divl
push
xor
mov
jge
and
mov
jle
push
dec
pop
xchg
push
stos
rcll
mov
sbb
stc
cmc
sar
xor
jne
icebp
jae
call
lods
xchg
pop
iret
push
out
scas
daa
inc
adc
ficoms
mov
nop
xchg
and
mov
dec
xor
into
hlt
fdivrs
xchg
mov
fimull
cmp
in
stos
int3
int
sbb
or
and
dec
mov
xor
mov
push
mov
add
mov
pop
and
mov
cmpb
and
mov
jno
jl
imul
inc
insb
adc
aad
add
sbb
std
sub
dec
dec
imul
and
mov
or
cmp
dec
aas
js
loopne
sbbb
outsl
testl
push
pop
daa
faddp
xor
loopne
rcr
jmp
mov
pop
loope
dec
aas
adc
ljmp
out
add
inc
enter
mov
xchg
daa
mov
or
repz
push
mov
adcl
insl
jae
inc
sbb
or
dec
cmp
les
xlat
mov
cmp
mov
mov
inc
and
scas
mov
scas
ror
xchg
jl
push
ja
enter
jp
outsb
mov
push
popf
mov
mov
add
jl
enter
mov
add
pop
mov
out
aas
add
push
movsl
imul
les
lret
call
jp
xor
and
mov
dec
mov
mov
push
rcrl
arpl
faddl
add
jae
aas
mov
pop
mov
mov
cld
xlat
mov
test
and
xor
mov
push
or
sub
pop
adc
pop
dec
sub
pop
sub
in
divb
push
cli
xchg
and
sub
es
xchg
addl
add
stos
lahf
and
pushf
aad
bound
negb
std
mul
repz
push
dec
repnz
out
loope
mov
jno
insl
xchg
push
cmpsl
sahf
mov
cmp
pushf
push
gs
xchg
mov
insl
daa
gs
fildll
xlat
lock
add
and
sub
mov
sub
sahf
orl
mov
push
pop
lcall
push
dec
repz
and
and
jne
mov
adc
pop
jp
ja
pushf
inc
hlt
movsb
or
jmp
pop
int
xchg
mov
mov
insl
cmpsl
lea
xchg
ret
in
pop
repz
mov
repz
adc
sub
rcrb
movsb
cmpsl
movsl
cmpsl
pop
or
mov
aas
xor
jmp
inc
pop
jae
adc
sub
xor
das
out
cmpsl
jg
sbb
imul
ljmp
lea
cld
or
adc
daa
lcall
fidivrs
pop
push
faddl
out
and
stos
adc
xchg
xchg
xchg
orb
pop
enter
mov
push
push
subb
xor
push
push
insb
mov
sbb
mov
test
jle
outsl
xchg
lret
mov
push
pop
mov
in
adc
mov
mov
popf
dec
push
push
popa
mov
mov
xchg
add
cmp
insl
add
xchg
xlat
or
jne
sbbl
add
pop
cmp
sub
add
fistpll
jg
pop
movsb
lcall
sub
cmp
mov
jecxz
out
ds
clc
mov
jb
push
and
xor
iret
lcall
jle
xor
repz
pop
pop
in
or
push
mov
out
sbb
push
cmp
mov
mov
shlb
repz
add
mov
orl
xor
xor
jp
jb
shlb
xchg
jae
or
mov
int
addr16
ret
insl
mov
pop
sub
sbb
cmp
outsb
sti
rorb
xchg
sahf
and
pop
ret
sub
inc
scas
mov
push
inc
sbbl
xchg
dec
imul
mov
inc
and
les
pop
push
adc
pop
inc
mov
rcrb
in
mov
dec
shrl
push
pop
cmp
incl
fsubrs
lret
sbb
ret
in
into
imul
dec
std
mov
int3
mov
jg
int3
out
pushf
cmp
lret
enter
jne
mov
jp
mov
adc
sub
call
fidivrl
mov
inc
outsb
jne
jle
stc
psubd
and
sub
lcall
mov
loop
das
es
rclb
shl
jno
scas
jl
iret
cltd
and
fsub
xor
dec
fdivl
jg
gs
push
xchg
outsl
mov
mov
lods
incl
inc
jno
pop
std
and
cwtl
jle
xchg
mov
cmp
clc
dec
or
orb
push
mov
cli
xor
shrb
filds
and
popa
rclb
sbb
bound
push
insl
mov
jmp
xchg
repz
add
xchg
hlt
sbb
mov
test
sahf
bswap
push
inc
pop
adc
sub
xor
or
mov
jecxz
hlt
add
test
loop
cltd
cmp
mov
shll
sub
or
or
cmc
shrb
sbb
dec
push
outsb
sbb
pop
fisttpl
std
scas
xor
xchg
dec
data16
jno
out
popf
mov
fadd
dec
cwtl
outsl
dec
or
pop
sbb
add
shrb
xlat
mov
test
xchg
jns
inc
gs
inc
popa
outsb
mov
cld
jecxz
test
mov
int
shl
test
bound
cmp
lods
loop
sbb
mov
cmp
xchg
xlat
fnstenv
jne
in
hlt
xchg
sbb
adc
mov
les
cmp
fdivr
xor
fsubp
lret
mov
mov
pop
arpl
cmp
cmc
mov
jmp
imul
push
es
xchg
loop
push
pusha
xor
jae
clc
push
pop
dec
imul
mov
pop
xlat
inc
or
loop
add
jbe
mov
rorl
add
out
mov
dec
repnz
xor
lock
shlb
push
mov
pop
repz
sarl
fistpll
jae
fsubl
or
into
mov
test
in
mov
push
push
sub
cmp
nop
xor
mov
inc
mov
pusha
ret
inc
push
mov
aad
mov
mov
cmpsl
jns
mov
pop
mov
mov
aaa
mov
inc
insl
out
jg
int3
lods
sub
popa
inc
frstor
scas
movsb
adc
ds
inc
and
push
cmp
cmc
pushf
sub
mov
cmc
addr16
or
fstps
pmaxsw
dec
lods
mov
pop
ljmp
xlat
test
cmp
add
push
out
fidivl
xor
push
xchg
pop
push
jo
bound
shl
xchg
lods
or
int
sbb
jne
cmp
and
ds
xchg
xchg
dec
ss
and
jbe
cmpsl
lret
incb
out
test
sahf
mov
jne
sub
jnp
jb
mov
ljmp
mov
test
push
jle
fmulp
push
xchg
and
movswl
inc
xchg
repnz
jl
in
repnz
aad
gs
loope
mov
or
fbld
scas
scas
in
ret
mov
fwait
and
push
xchg
in
or
pop
inc
loope
imul
movsb
movsb
push
or
loop
pop
in
aad
mov
push
xchg
fidivrl
push
dec
lcall
mov
iret
push
mov
ja
jmp
lretw
xchg
in
cwtl
jle
inc
or
jge
mov
imul
xchg
int
push
mov
push
dec
mov
call
jmp
mov
ficoms
lods
ficompl
or
push
cmpsb
add
cld
sub
popf
and
aaa
or
cmp
pusha
adc
mov
cmp
lcall
cmp
popa
ss
adc
scas
aaa
and
cld
lahf
incl
jae
add
or
mov
subb
pop
dec
xor
push
sbb
js
shll
or
adc
xrelease
movd
dec
and
fcmovbe
int
cmp
or
pop
xor
popa
add
xor
mov
dec
mov
stos
sbb
ljmp
scas
inc
cmp
add
cmc
sub
dec
dec
xor
sub
mov
dec
out
ja
mov
mov
fwait
fwait
ret
call
iret
int
mov
xchg
cmp
loopne
dec
loope
sbb
movsb
sbb
xchg
lods
cli
lods
into
pop
inc
fs
in
arpl
inc
xchg
xor
ss
sbb
sti
je
or
jo
hlt
into
inc
add
jecxz
and
sbb
imul
ljmp
outsb
dec
xor
lahf
ljmp
push
sarl
scas
jb
mov
pop
insb
mov
sub
jnp
dec
ljmp
ds
mov
arpl
inc
xchg
in
fwait
mov
ljmp
mov
dec
pusha
mov
iret
stos
jecxz
fucomip
mov
xor
ret
dec
cmc
mov
int3
cwtl
sbb
mov
mov
es
jns
out
mov
ret
out
cmp
repnz
mov
gs
andl
ljmp
adc
pop
ret
sub
into
mov
mov
mov
movlps
mov
sti
adc
mov
fsubrs
mov
or
mov
loope
cmp
jg
call
sbb
lahf
and
jecxz
adc
mov
leave
lret
arpl
pop
scas
inc
outsl
scas
push
aad
loope
fwait
sub
popa
lods
mov
cltd
ss
sbb
dec
add
stos
sub
sahf
stc
popa
mov
jp
hlt
aas
mov
ds
mov
cmp
fnstenv
test
scas
fs
jmp
sub
adc
or
int
enter
sub
cmp
sahf
pop
mov
es
adc
pushf
insb
inc
dec
add
fmuls
mulb
or
mov
mov
lret
lods
xor
cld
fxch
out
addr16
out
loope
push
pop
cs
out
cmp
ret
sub
into
clc
movsl
mov
pop
clc
ss
and
cmp
cmp
repnz
mov
jb
push
popa
shr
call
aas
movsl
shr
mov
shrb
sbb
sub
loop
xchg
push
lods
daa
and
cld
mov
inc
out
movsb
rorl
mov
stos
xor
gs
cmc
inc
xchg
test
inc
fnsave
movsb
es
cwtl
mov
mov
and
sub
mov
sbb
fistps
xor
push
fldt
iret
push
addr16
or
or
test
push
pop
popa
movsb
mov
stos
xor
mov
inc
mov
add
adc
dec
fwait
mov
mov
mov
jae
and
adc
add
mov
mov
push
and
les
mov
jnp
pop
ds
adc
sbb
cmp
mov
movsl
or
fwait
ss
mov
and
pop
scas
cmpb
cmpsl
pop
lcall
push
cmpsl
mov
pop
inc
jbe
imul
sbb
mov
out
mov
sub
jl
or
mov
mov
or
imulb
in
lcall
push
dec
jl
hlt
push
push
dec
popf
je
aad
ret
push
cltd
stos
in
dec
mov
fidivl
xchg
xor
fwait
pop
out
test
mov
imulb
sarl
scas
rol
ss
mov
cwtl
test
cmp
aad
or
test
add
scas
and
addr16
jne
mov
jl
test
mov
out
out
adc
gs
xchg
scas
bt
xorl
xor
cmp
xlat
xlat
sbb
adcl
mov
fldt
fsts
adc
movl
dec
outsl
jbe
cmp
adc
or
fwait
fs
inc
arpl
rcl
mov
add
lahf
add
add
mov
and
popa
jb
jb
in
les
std
icebp
je
mov
jno
or
jo
out
mov
ss
fisttpl
xchg
jne
mov
push
push
int
mov
shl
pop
sti
repz
pop
inc
xchg
cmp
add
gs
jns
cmp
in
imul
mov
lods
mov
movsl
jo
xchg
jp
mov
dec
mov
xchg
nop
out
std
shll
stc
js
pop
in
inc
xchg
pushf
cs
shlb
mov
cld
in
jl
sub
imul
lret
shll
mov
repz
adc
xor
mov
test
push
or
add
icebp
cli
pop
inc
adc
rcrl
sub
out
mov
out
xlat
xchg
push
outsb
sbb
fcmovnbe
cmpsl
jle
js
lret
jne
push
cmp
lcall
cltd
jo
mov
enter
push
sti
push
daa
pusha
iret
ss
mov
test
and
pushf
mov
outsl
push
jns
cli
lods
pop
pop
push
add
sarl
or
repz
dec
xchg
lret
inc
aad
dec
and
jbe
add
sub
mov
imul
shlb
fxch
iret
or
insb
or
push
adc
dec
jp
call
dec
or
cs
faddl
xor
sub
das
push
in
cltd
cld
jl,pt
xor
scas
jmp
jns
fwait
lahf
cwtl
dec
jl
mov
pop
leave
xchg
xchg
jae
dec
rcrb
out
faddl
mov
lahf
push
fistpl
iret
aaa
add
inc
hlt
jmp
jmp
test
cmp
nop
test
add
test
push
inc
sub
sarb
xchg
xorl
test
dec
subps
outsb
sub
mov
jmp
testl
xchg
aad
das
pusha
mov
mov
mov
and
lods
push
pop
inc
mov
cmp
mov
jg
enter
sarl
and
or
dec
pushf
and
popf
cwtl
xor
and
and
out
mov
xor
pop
outsl
aam
jnp
iret
sbb
sahf
aad
cmpsl
adc
test
ja
and
movsl
lret
xlat
jnp
scas
out
pop
adc
out
cltd
adc
and
icebp
xchg
jno
rcr
jne
cmc
push
test
and
inc
dec
jbe
cli
jbe
inc
pop
xchg
dec
outsb
cwtl
incl
jl
sub
cwtl
sub
fsubrl
pop
ss
cmp
xor
es
aaa
arpl
std
mov
mov
and
and
sub
subl
xchg
outsl
jecxz
enter
sbb
or
divb
ret
mov
movsb
popw
mov
cld
jno
fidivrl
pop
jns
cmp
pushf
cmpb
iret
mov
pop
outsl
sti
aas
test
or
mov
cmp
xor
sbbl
rorb
adc
test
test
rcrl
stos
jp
or
dec
insb
add
jnp
icebp
push
xor
push
pop
lcall
out
xor
mov
pop
inc
mov
mov
sub
xchg
lods
out
ret
and
push
shl
mov
xor
or
mov
stos
loop
fimull
xor
aam
gs
je
mov
out
in
addr16
mov
cs
arpl
aad
jb
jnp
test
and
mov
mov
out
cmp
test
les
mov
dec
jl
ret
adc
mov
xchg
adc
arpl
in
stos
pop
and
sbbb
in
and
je
push
dec
fs
movsb
mov
jl
cld
mov
outsl
int3
mov
or
pushf
ficomps
xchg
sarl
mov
pop
adc
shlb
scas
mulb
dec
sahf
push
jo
mov
xchg
dec
insb
mov
icebp
cmp
fmuls
cmp
pop
loope
out
cmp
shrb
imul
mov
adc
push
pop
xor
test
cmp
add
mov
cld
mov
mov
fdivrl
push
incb
jle
aad
xor
test
fdiv
gs
lods
dec
clc
sbb
push
sub
aam
icebp
pop
out
jb
mov
xchg
sbb
loope
add
pop
sub
xchg
sub
scas
and
jno
cmp
gs
imul
or
popf
and
clc
stos
je
jbe
insb
sbb
test
jb
and
out
mov
mov
mov
pop
insl
in
dec
test
cmc
mov
stos
hlt
inc
rcrb
or
imul
sbbl
cwtl
mov
test
sbb
pop
sbb
fadds
and
add
dec
mulb
fcomp
cmpsl
in
lea
je
imul
pop
stos
cwtl
sbb
mov
adc
fldcw
adc
sub
xor
out
jo
bound
lea
icebp
out
push
fsubrl
int
jecxz
jge
movsb
iret
cmp
in
les
out
push
stc
sbb
in
lcall
pop
insb
xor
mov
in
or
cwtl
cmpsl
out
notb
pop
mov
cli
xchg
xor
popa
add
xchg
rcll
imul
test
int3
icebp
in
mov
lcall
leave
pop
arpl
jmp
jo
mov
xor
loopne
lods
mov
lock
and
xorl
inc
clc
inc
shl
movsb
enter
nop
xorl
cld
rcll
or
mov
mull
sub
add
icebp
and
mov
sub
int3
add
and
mov
movsl
test
cmpsl
repnz
cmp
or
mov
mov
fnstenv
cmc
mov
mov
xchg
fisubrs
mov
stc
les
fdivl
int
out
jl
sub
scas
jl
lods
adc
arpl
std
xor
testl
or
dec
jne
cmp
loope
inc
mov
adc
push
pop
pop
adc
fwait
not
out
enter
pop
fs
or
out
shll
sub
push
xchg
dec
sbb
mov
cmp
test
xchg
jecxz
add
test
decl
push
cmovbe
cmp
repnz
loopne
dec
lods
stc
pusha
mov
fdivr
out
push
pop
std
pop
push
dec
mov
loope
xor
mov
push
ljmp
or
testl
hlt
jbe
pop
pop
pop
add
mov
mov
adcb
fbstp
outsb
pop
xchg
jne
cmp
jb,pt
ja
out
jl
scas
rclb
jge
enter
sbb
in
outsb
mov
clc
jnp,pn
incb
in
xchg
xchg
inc
cmpsb
sub
adc
mov
test
sahf
mov
mov
lods
cltd
movsb
cmp
movsb
popf
ficompl
push
test
jmp
add
or
jp
lret
sbb
cs
cmpsl
inc
lea
mov
fisttpl
mov
dec
dec
negl
jge
leave
or
movsl
jecxz
sbb
xchg
enter
out
push
int
std
mov
mov
lea
mov
push
xor
scas
mov
jae
stos
adc
mov
adc
xchg
sub
jae
dec
cltd
mov
out
sub
and
or
les
cmp
mov
sub
fldcw
cmpsb
cmp
and
dec
pop
adc
cli
and
or
sbb
outsl
inc
notl
shlb
sbb
lcall
inc
ljmp
pushl
adc
xor
fiadds
lea
addr16
pop
rol
or
lret
int
push
push
cmp
xchg
repnz
add
pop
jle
dec
or
jae
or
and
inc
stc
daa
stos
sbb
add
jge
gs
push
in
sub
sbb
xchg
mov
out
xchg
int
pop
ret
iret
ss
inc
push
jnp
into
in
push
jno
pop
add
imul
xchg
cmp
test
rcr
es
mov
cmpb
fwait
lahf
test
jbe
mov
fists
add
fidivrl
fs
mov
enter
rcr
js
test
and
out
iret
and
inc
cwtl
push
jmp
das
mov
lcall
pop
mov
mov
or
ss
jge
or
idivb
cmp
jecxz
push
into
out
xchg
pusha
jno
dec
pop
test
adc
lret
sbbl
add
shr
imul
xchg
sub
jl
dec
rcrb
and
sub
sbb
adc
pop
jnp
jnp
adcb
pop
leave
inc
sub
sub
mov
mov
into
movl
nop
sub
add
cwtl
rorb
fwait
adc
jmp
out
push
add
loope
loop
mov
shll
jae
popf
jle
cltd
jno
add
jle
push
push
into
das
dec
inc
mov
push
jbe
je
adc
mov
fs
into
xchg
and
add
jae
nop
xchg
shlb
sub
hlt
rclb
adc
inc
mov
push
cmp
je
test
jnp
push
cmpsb
or
daa
jb
push
gs
inc
push
jne
pop
sbb
or
mov
push
pop
stos
test
add
adc
pop
inc
movsl
sbb
cmp
daa
push
xor
sub
jecxz
cwtl
lcall
cltd
mov
cmp
lret
insb
sub
in
xchg
push
fisttpl
into
or
cmc
ds
dec
mov
jno
je
repz
pmaxsw
dec
inc
sbb
mov
call
pop
lcall
outsl
lahf
fsubs
mov
add
and
inc
jno
dec
sti
push
inc
and
mov
and
or
and
cmp
or
push
leave
loope
cli
int
mov
mov
and
fs
shll
jbe
mov
xlat
push
loope
fstp
ljmp
push
lea
xor
jl
push
lea
in
cmc
sub
cmp
fsubl
xchg
cli
mov
shll
dec
inc
add
std
pop
mov
repnz
bound
call
xchg
add
xchg
mov
adc
sub
in
test
mov
shrw
xchg
hlt
add
jg
push
mov
sbb
das
pop
and
dec
test
clc
dec
in
inc
dec
loopne
push
sarb
outsb
pop
shl
aas
es
sti
repz
dec
cld
stc
fists
jb
pusha
xchg
sbb
leave
inc
inc
inc
rol
inc
fs
imulb
cmpsb
mull
sarb
xchg
cmovle
rcrl
inc
xor
adc
and
insb
mov
inc
fstpl
aas
mov
pusha
stos
fs
inc
cmp
pop
idivb
mov
push
mov
and
frstor
repz
cs
mov
and
addr16
mov
cmpl
pop
movsb
scas
out
sub
push
sbb
je
test
mov
mov
adc
dec
inc
sub
sub
or
nop
and
test
and
dec
jne
adc
das
jmp
in
nop
sub
test
lret
popa
test
jge
jl
jge
jae
out
call
mov
mov
jl
clc
sbb
dec
test
into
cmpsl
pop
jo
inc
inc
imul
imul
add
cld
movsb
mov
xchg
xchg
mov
dec
das
addr16
jb
xor
inc
cmc
nop
cwtl
mov
xor
xchg
mov
aam
add
ss
pop
push
iret
fnstsw
jge
add
xor
push
jno
aas
adc
das
dec
and
push
mov
addr16
push
cmpsl
leave
mov
jmp
jl
std
or
loopne
jns
jge
gs
mov
dec
jb
jo
repz
in
insb
test
xlat
pop
push
sbb
loope
movsl
xchg
add
mov
and
pop
sub
add
addr16
mov
ror
dec
jmp
or
pop
add
rorb
daa
leave
movsb
cmp
adc
jl
cmpb
push
xorb
pop
mov
fcmovnbe
push
push
push
xchg
cld
mov
add
test
pop
mov
shlb
jp
out
imul
idivb
sbb
rclb
pop
xchg
lret
push
jmp
pushf
sarb
pop
sub
pop
pop
sbb
jg
hlt
shrl
xlat
scas
shlb
lods
inc
dec
lods
aas
push
lea
cmp
dec
push
sub
aad
fcoms
mov
pop
fdivs
mov
popf
lods
inc
or
xor
jl
push
mov
or
sbbb
sub
mov
adc
mov
jo
mov
ret
pop
lret
cmp
xchg
pop
sbb
cli
in
sbb
mov
in
sbb
pop
xor
push
leave
cmp
inc
pop
adcb
sbb
xchg
and
sbb
pop
mov
or
push
call
test
dec
shlb
push
lret
xchg
xchg
repnz
sbb
add
mov
mov
jb
clc
pop
lods
pop
std
adc
push
jnp
dec
mov
gs
shll
sub
sbb
std
pushf
movsl
pop
sahf
mov
cmc
shll
pusha
pop
add
lock
cmp
sbb
cmp
repz
ja
jne
dec
shll
pop
cld
and
mov
stos
xchg
push
loop
push
cmpsb
and
loop
fiadds
loope
js
cmp
cmp
add
test
and
in
lods
lea
or
mov
cltd
sbb
or
and
cmp
sub
or
imul
adc
cmp
sbb
add
and
stos
push
aad
jb
xor
ds
xchg
xchg
jb
cmp
addr16
aas
dec
out
mov
aam
test
push
jle
scas
sbb
subl
sarb
mov
jb
in
and
dec
cmp
add
push
shlb
les
stc
add
pop
dec
mov
adc
and
ja
inc
movb
ret
add
or
mov
sbb
in
adc
mov
mulb
iret
loope
jg
push
lods
mov
je
jp
push
mov
cmp
adc
cmp
lret
cmp
mov
adc
fs
inc
add
test
mov
pop
scas
push
sbb
adc
xor
push
push
add
mov
rcll
cmp
jle
lods
inc
sbb
inc
daa
dec
inc
mov
sahf
mov
scas
push
repz
in
std
ret
and
inc
faddl
add
or
insb
cs
or
jno
jge
pop
lods
ret
outsl
outsb
or
in
fs
xchg
ficomps
out
inc
mov
xlat
pop
incl
push
popa
shlb
into
pusha
mov
sti
cmp
and
shrl
inc
rcrl
sub
push
test
popf
cld
fsubrs
pop
in
push
call
sub
into
adc
sub
imul
inc
popf
and
data16
or
ret
xor
mov
sub
loope
popa
jnp
sub
xlat
cmpsl
dec
repz
push
adc
mov
test
dec
notb
lock
mov
mov
idiv
int
faddl
shll
mov
mov
out
add
dec
cltd
aaa
call
fwait
cmp
fstpt
ss
pop
or
test
inc
and
pop
out
out
fadds
loop
aam
jns
cmpsb
icebp
scas
fwait
push
gs
mov
pushf
inc
cmpsl
jns
shl
mov
jae
inc
jge
inc
out
xor
pop
dec
mov
pop
adcb
es
sbbl
push
popf
jp
stc
aad
test
leave
cmp
adc
push
push
and
jmp
insb
imul
jl
sbbb
add
test
or
add
inc
push
lods
pop
push
fildl
dec
cli
loop
push
outsb
outsl
imul
imul
lahf
rolb
popf
adc
push
pop
xchg
fldt
add
mov
jmp
push
outsl
rorb
mov
mov
or
imul
adc
xor
jp
lds
enter
pop
ret
fs
hlt
sahf
mov
fiadds
sahf
jg
popa
loopne
popa
lea
mov
in
in
into
push
in
sbb
jae
jg
cmp
lock
fcoms
lahf
rcll
das
aaa
mov
addr16
lret
dec
add
addr16
dec
mov
loopne
rcrl
push
ljmp
pop
xchg
or
sbb
add
inc
push
pop
jo
popf
sahf
int3
out
inc
cmp
dec
in
sti
xchg
mov
push
lods
sahf
mov
fisttps
nop
push
cmp
aam
nop
dec
pop
rolb
jl
pop
stos
js
cmp
jbe
ja
gs
mov
andb
lods
hlt
into
xor
mov
test
lcall
js
sbb
shl
or
xor
ds
popa
into
push
pusha
push
or
xor
notl
daa
fsubrp
push
adc
adc
stos
cmp
pop
sub
and
mov
dec
in
mov
repnz
xchg
cmpsb
jg
push
inc
je
pop
dec
inc
lret
shl
or
jo
cmp
dec
test
mov
js
sub
stos
popl
xchg
jo
add
test
test
mov
pop
std
int3
xor
loope
pop
mov
push
les
inc
jb
inc
shrb
int3
xchg
rcll
pusha
repnz
nop
or
arpl
lock
frstor
xchg
xor
dec
push
mov
mov
adc
es
repnz
or
push
push
sub
out
hlt
pop
xor
lret
pop
pop
mov
mov
scas
pop
pop
and
stos
pop
or
push
mov
int3
and
sarb
loop
dec
aad
mov
imul
or
pop
je
pop
rcll
xor
pop
mov
cmp
loope
js
mov
mov
loopne
mov
xchg
hlt
popf
lret
fcompp
jae
loop
test
fneni(8087
js
paddd
pop
jno
inc
or
std
rorb
popf
ljmp
outsl
nop
pop
adc
std
nop
mov
rcll
pop
imul
adc
push
movsl
push
insb
mov
repz
mov
jae
fadds
fnstcw
movsl
mov
xor
ja
rcrb
js
xchg
adc
ss
arpl
filds
aam
sub
insl
fisubrl
popf
lods
sbb
cwtl
pusha
out
mov
jp
leave
jo
sbb
sub
jno
inc
mov
fistpl
sbb
mov
rolb
inc
xchg
pop
ss
add
cmp
jo
ljmp
adc
jmp
inc
mov
scas
mov
cli
roll
pop
add
and
add
cmpb
jl
outsb
dec
cmc
fptan
xchg
mov
ucomiss
fdivl
xor
