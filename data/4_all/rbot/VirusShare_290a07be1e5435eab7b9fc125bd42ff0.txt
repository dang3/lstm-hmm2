call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
add
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
movsb
pop
and
std
fistl
cmp
les
jle
add
pop
pushl
dec
and
das
add
nop
push
mov
mov
adc
or
or
popf
inc
shrl
testl
pop
pop
leave
ret
xchg
mov
loopne
push
push
test
mov
and
inc
jo
push
in
arpl
push
cld
xchg
xchg
cmp
xor
mov
test
jne
pop
and
push
in
cltd
arpl
cld
pop
ljmp
dec
add
jb
inc
loope
jle
mov
jb
std
sti
pushl
adc
jmp
lock
jmp
adc
mov
sbb
lcall
data16
test
add
cmp
push
je
imul
jb
adc
cmp
xor
movd
jne
lea
push
mov
mov
mov
jbe
push
mov
sbb
loopne
iret
shll
add
mov
push
cld
in
ja
jns
sbb
popf
cwtl
verr
jnp
daa
inc
push
mov
lea
push
push
out
cmp
data16
pop
lea
jae
sbb
push
mov
clc
pusha
dec
or
add
in
testl
inc
cld
jae
lock
push
inc
repz
gs
loopne
shrl
cmp
xor
cmp
mov
pop
repz
fistps
lcall
daa
lods
mov
pop
repnz
ret
add
and
cmp
daa
xchg
or
dec
jb
das
test
sub
loopne
out
sub
xor
cmp
jb
lock
xor
or
fwait
inc
movsb
or
pop
pushf
or
das
xchg
cmp
jne
aas
push
mov
cs
lods
adc
in
popf
or
pusha
mov
pop
jo
add
mov
xchg
mov
aam
push
dec
int3
pop
int
je
ret
loopne
icebp
mov
mov
and
int3
jo
in
outsl
xchg
or
mov
inc
nop
xlat
out
mov
or
push
sbb
fs
mov
pop
pop
add
fwait
xchg
fs
sbb
outsb
cmp
popfw
push
pop
lock
cli
mov
jmp
es
scas
cmp
or
testl
xchg
pop
enter
popl
enter
nop
push
adc
movsb
negb
lret
aaa
push
dec
pop
pop
mov
in
adc
into
ljmp
mov
out
mov
add
cmp
mulps
xor
jmp
ja
push
pop
cld
clc
hlt
mov
fs
cmp
sbb
mov
clc
clc
addr16
fs
in
lea
jne
sbb
data16
add
dec
hlt
adc
or
sbb
add
pop
ret
jne
pop
out
and
sbb
pop
roll
push
push
mov
stos
adc
inc
lock
pop
cmp
cmp
jle
jb
js
movl
pushaw
fidivrs
js
out
push
push
addr16
xor
adc
imul
pop
clc
rcrl
and
loopne
out
imulb
sbb
push
push
jl
xor
push
mov
jge
xlat
cmp
setg
pop
pop
pop
or
push
pop
pop
lcall
push
aam
orb
fdivrs
pop
pop
sbb
push
insb
loopne
xor
mov
fimuls
cmc
cmpl
je
test
repnz
mov
add
push
sbbl
mov
lahf
arpl
push
jo
mov
and
imul
test
mov
addr16
sub
jle
pop
xchg
add
das
jnp
and
dec
scas
mov
scas
jo
clc
sarl
adc
pop
sub
pop
fbstp
call
push
outsl
shlb
jle
adc
cwtl
fwait
add
inc
mov
hlt
jmp
cmp
inc
loopne
add
test
stc
inc
or
repz
mov
mov
adc
in
test
nop
push
pop
cwtl
mov
dec
cwtl
adc
jne
add
xchg
lea
cld
jne
mov
pop
bound
les
rolb
or
mov
add
dec
fdivs
xor
xchg
pop
jb
repz
pusha
daa
int3
add
lcall
mov
mov
cwtl
lahf
mov
mov
aam
aam
call
sub
sbb
pop
jl
out
aad
sbb
add
imul
jge
push
jo
fwait
pop
pop
sti
dec
jge
push
addb
pop
xor
push
xor
in
fstl
les
popl
jo
mov
adc
add
repz
mov
mov
jbe
andb
mov
push
idivl
enter
in
pop
aas
shr
add
imul
mov
pushf
mov
dec
or
pop
or
or
dec
nop
fs
add
cld
mov
push
push
call
inc
cmp
xchg
ss
shlb
shr
pusha
ljmp
jmp
inc
sub
aam
mov
int3
test
add
in
xchg
rcrb
pushf
mov
push
ret
xorb
xor
enter
pop
and
scas
lods
adc
loope
cltd
repnz
or
test
inc
or
je
add
sbb
scas
push
lods
push
add
cs
das
lock
hlt
mov
mov
clc
push
mov
movsl
jae
mov
incl
mov
mov
sbb
jl
stos
fdivr
int3
jnp
mov
call
xlat
js
daa
fdivs
popa
jnp
lret
cmp
pop
mov
mov
push
push
mov
add
cmpl
ret
mov
jge
push
mov
or
sbbb
inc
jmp
xor
adc
add
ret
mov
pop
inc
adcb
int
lock
test
push
ret
ss
sub
cmc
push
cmp
je
ljmp
inc
sbb
xor
jl
or
xchg
bound
sti
sub
cmpsb
jnp
sub
adc
idivb
je
aam
imul
rcll
loopne
loopne
sub
ss
nop
pop
sbb
into
shrl
add
les
inc
lea
ds
jnp
addl
xor
mov
cltd
push
pop
idiv
cmp
jne
cmpl
stos
adc
int3
add
pop
not
pop
and
push
push
mov
and
pop
inc
test
cmpsl
jns
popf
lods
pop
push
fsubl
push
mov
pop
repz
or
xchg
sub
insb
repz
jge
cmp
cmp
iret
push
mov
sub
roll
outsl
pop
jbe
mov
add
xchg
dec
mov
xor
mov
push
or
cltd
fs
jl
addb
mov
jb
xchg
xchg
mov
int3
mov
mov
cmp
ja
adc
push
cmp
popf
mov
fcoms
lret
or
jecxz
aaa
stos
enter
cmp
mulb
xchg
test
mov
std
jne
stc
or
jecxz
mov
and
mov
cld
sbb
fistpl
sub
addb
push
push
push
xchg
xor
mov
mov
jne
or
pop
cmp
les
cli
cmp
add
cmpsb
jmp
arpl
or
cmp
or
je
mov
addl
push
pop
adc
scas
mov
int
les
push
push
sti
mov
jle
or
sbb
cmp
lock
in
fwait
or
sub
pop
pop
insb
add
dec
psrlw
das
jl
mov
xchg
cmp
add
cs
and
cmp
in
rorl
inc
mov
xor
adc
fsubrl
dec
test
mov
dec
test
dec
in
fidivl
loopne
push
dec
rclb
in
repz
jae
sti
addb
cld
ret
movsb
test
mov
jmp
push
jns
in
jl
cli
je
mov
in
xor
pop
hlt
adc
clc
jmp
lock
mov
dec
sub
adc
push
adc
adc
sub
xchg
daa
cmp
std
clc
or
sub
pop
hlt
popa
jl
dec
adc
push
pop
xchg
cltd
push
jl
jmp
jp
mov
jbe
popa
mov
cltd
int3
fmull
xchg
adc
popf
cmp
cmp
mov
insl
mov
xchg
int3
cmpsl
pop
test
adc
orb
jbe
mov
add
push
lahf
mov
sbb
inc
hlt
mov
adcb
cltd
mov
repnz
sti
push
ret
dec
test
out
gs
cltd
pusha
cli
xchg
lods
push
jle
movsl
mov
int3
or
sbb
nop
cmpsb
push
imul
data16
sub
adc
mov
pop
push
and
loop
aad
push
sub
adc
xor
jmp
pop
xor
inc
popa
push
shll
sbb
mov
mov
rcl
push
pop
lock
addb
cmp
or
push
scas
popf
mov
mov
mov
popa
or
out
sub
call
out
sub
or
mov
shlb
fwait
push
pushf
sbb
sbb
push
push
std
pusha
mov
inc
jg
sbb
sbbb
rorb
imul
jns
adcl
sub
icebp
push
stos
push
xor
cli
push
cli
inc
and
push
and
lahf
cmp
retw
out
xor
mov
cmp
stos
pop
jbe
push
mov
add
jo
in
fsubl
jmp
and
or
fwait
movzwl
addr16
xchg
pop
sub
adc
dec
cmp
fs
out
dec
push
push
sbb
mov
mul
outsl
cmp
jl
mov
jbe
push
push
mov
xor
adc
push
addr16
imul
xor
adc
repnz
in
lock
jns
icebp
xor
adc
test
mov
mov
fbld
push
rcr
movsbl
dec
test
mov
add
cmp
jne
xor
sbb
mov
clc
jbe
loopne
push
inc
adc
inc
cmpsl
push
sbb
dec
es
cmp
fs
rclb
cmp
loope
push
pop
sbb
mov
mov
xchg
adcb
enter
insb
pop
or
and
pop
pop
mov
lods
rorb
mov
push
popf
fmull
fcmovbe
fimuls
rcll
std
xchg
jl
lds
cld
aam
nop
and
sub
and
and
in
loopne
or
or
rcl
mov
testl
or
clc
dec
dec
test
setne
or
in
arpl
mov
shrb
push
nop
out
scas
pop
out
mov
mov
or
push
stc
xor
and
lods
testl
push
test
es
mov
dec
fimuls
and
in
rorl
test
push
sbb
sarl
je
jle
jecxz
push
push
jmp
sbb
xor
xchg
push
addr16
adc
push
cmp
cmp
pusha
inc
mov
aas
or
inc
orl
or
add
shlb
sub
lods
lods
xchg
push
fwait
addr16
lea
add
xor
enter
push
add
loope,pt
add
jmp
cmp
pavgw
pop
incl
jno
jne
mov
jmp
loop
or
shl
ficompl
rolb
mov
xchg
xchg
jl
push
fwait
cwtl
out
inc
xchg
mov
pop
xor
jo
mov
lret
test
addl
lea
cmp
push
pop
sub
push
xchg
jmp
lds
push
rorb
lds
xchg
jne
je
mov
sbb
je
sarl
in
mov
dec
fsubr
call
data16
hlt
std
inc
sub
lret
aas
out
mov
xor
sbb
loope
repnz
fbld
pop
lcall
out
xchg
pop
repnz
push
jl
mov
cmp
ljmp
cmp
fisttps
dec
mov
pushf
fs
jb
iret
mov
fiadds
sub
dec
stos
or
mov
mov
bound
gs
or
fcompl
mov
push
sahf
and
push
rcll
inc
test
or
inc
xor
or
pop
in
mov
ficoms
xchg
nop
push
sti
inc
int
adc
pusha
and
xor
fcomps
sbb
pop
sub
popa
ja
cmp
pop
lock
iret
lock
or
leave
cmp
and
lock
jo
fnstcw
sbb
fsubl
pop
cli
cwtl
jb
sbb
dec
mov
jae
roll
sti
loopne
mov
sahf
lock
cwtl
jb
pop
jb
xchg
or
call
mov
lret
fnstenv
sbb
sbb
int3
mov
xchg
pop
sbb
test
fstp
stc
push
push
idivb
jle
or
jmp
mov
pop
xchg
dec
data16
mov
es
xchg
popf
jl
xchg
sbb
in
push
jne
push
inc
bound
mov
dec
sti
sub
push
push
pop
scas
push
leave
dec
sti
inc
push
idivb
cmp
xor
sti
popa
mov
rclb
mov
test
push
mov
xlat
out
lcall
test
mov
cli
push
push
imul
sbb
mov
and
xchg
push
push
jmp
test
push
mov
sti
ret
mov
pop
call
incl
dec
call
xor
andb
dec
adc
sbb
gs
lcall
bound
jne
sub
sbb
cmp
je
cmp
sbb
push
sahf
cmc
dec
out
inc
call
ds
test
and
lock
push
push
dec
sbb
cmp
pop
mov
sub
rcrb
daa
push
push
jmp
in
pop
dec
mov
xor
jecxz
addr16
or
std
je
pop
cwtl
add
mov
dec
mov
pop
cmp
sahf
sbb
pop
or
int
loope
loop
add
test
sbb
std
jmp
cmpl
pop
jno
sarb
mov
mov
pop
pop
add
mov
pop
scas
push
push
lfs
fimuls
and
jbe
add
and
xchg
pop
shlb
not
sbb
movsb
dec
and
imul
dec
movl
insl
sub
fxch
orl
outsl
shll
daa
or
aaa
xor
adc
dec
cld
jne
or
jne
repz
orb
cmp
adc
aas
cmp
and
or
push
and
mov
aaa
rcrb
xchg
inc
adc
mov
out
dec
rorb
rolb
adc
cmp
adc
mov
and
xchg
push
sbb
xchg
and
cmp
enter
xchg
call
mov
shl
in
jge
in
adc
or
push
xlat
ds
lds
mov
push
into
sub
rcll
loopne
jo
test
adc
push
sbb
mov
cmp
jne
xor
sbb
lods
jne
aas
mov
mov
ds
cmp
mov
add
adc
add
les
sti
cld
lods
aad
jg
add
and
jae
cwtl
sarl
sub
sarb
add
div
adc
inc
sbb
icebp
sbb
sbbl
fndisi(8087
aaa
lret
xchg
add
or
mov
push
mov
ret
mov
push
xchg
cmp
loopne
mov
shrb
lock
mov
jbe
leave
roll
jp
mov
add
cwtl
and
and
int3
push
cmp
enter
xchg
sub
sbb
cmp
adc
incl
add
in
pop
lock
and
push
cmpsb
test
or
push
mov
pop
aam
xor
adcl
and
xor
adc
mov
lods
cmp
call
sub
mov
xor
push
add
mov
call
xor
cmp
aaa
push
add
dec
rorb
mov
in
or
ret
addb
or
jle
cmp
pop
pop
add
mov
pop
sub
bound
shlb
push
lcall
mov
aas
cmp
je
cmpl
jnp
js
shl
je
cmp
or
jne
mov
sub
push
mov
dec
push
movsl
pop
ss
and
movsl
adc
pop
pop
enter
add
mov
inc
jb
cmp
dec
or
or
jmp
cmp
or
cld
jmp
mov
mov
test
shl
in
mov
xchg
cmp
jo
jne
jge
and
shll
add
adc
add
seto
negb
fnstenv
push
int3
fsubr
push
mov
iret
mov
rolb
clc
je
movswl
and
ds
push
js
pop
jne
add
hlt
inc
je
xor
xlat
mov
lock
repnz
fcomps
adc
push
add
out
iret
inc
and
xor
test
cmpsl
mov
test
inc
js
lock
or
push
lock
lock
adc
loopne
in
adc
ret
mov
mov
loope
sub
rol
pop
inc
add
mov
fiadds
aaa
cmc
int3
loop
push
aaa
stos
repnz
leave
pop
jge
hlt
je
xor
inc
out
aam
notl
data16
icebp
je
mov
out
jmp
or
cwtl
and
xchg
add
sti
insl
cwtl
pusha
push
icebp
inc
loopne
mov
fistl
fnstsw
pop
cltd
and
inc
scas
cmp
add
pop
jae
into
sub
xor
mov
cmc
inc
cs
or
sbb
outsb
and
xor
fsubl
add
outsb
test
mov
inc
add
mov
adc
add
loopne
daa
mov
cmp
sub
pushl
aaa
and
or
gs
adc
mov
mov
add
push
sti
sub
mov
push
sbb
inc
or
inc
push
adc
xchg
loop
pop
push
jae
fidivs
sbb
cmpb
test
sub
pop
cmp
clc
push
pop
sbb
popa
movzwl
push
jle
mov
jmp
xor
xchg
ja
sti
cs
adc
xchg
add
mov
in
adc
in
in
inc
or
jge
mov
push
mov
mov
std
push
mov
add
pop
jg
cli
negb
stos
push
inc
push
push
pop
push
add
pop
or
pop
or
ret
add
dec
jne
xlat
push
inc
lds
shrb
sar
and
mov
sbb
ret
mov
addl
je
or
adc
add
pop
fisubrs
push
adc
test
stos
add
fmull
add
call
stos
dec
pop
cld
add
add
cld
sub
insb
shrb
insl
fwait
cmp
sub
shl
jmp
sub
or
cmpb
xchg
xor
cmp
jbe
mov
mov
mov
add
shr
add
add
mov
mov
inc
cmp
icebp
psubd
jb
push
push
cmpb
push
cmpb
testl
paddd
fldt
sti
sbb
enter
add
xor
inc
sbb
fnstsw
or
sbb
inc
xor
icebp
or
push
cli
mov
jmp
add
and
clc
jge
mov
ds
dec
mov
hlt
add
jne
ljmp
sbbl
jmp
movswl
addl
pop
je
pop
sub
cmp
push
lds
push
xchg
in
divb
jb
dec
sbb
cmp
add
jns
and
sub
sub
push
cmp
movsb
jns
mov
xchg
insb
testl
xor
cmp
or
cwtl
mov
dec
mov
orb
jmp
jns
jb
push
dec
jmp
xor
mov
shl
push
jno
filds
mov
in
mov
aas
sbb
pop
cwtl
sub
xor
dec
or
in
popa
add
or
fwait
fwait
inc
add
mov
cmp
xor
rolw
mov
cmp
loope
out
int
and
and
mov
and
lods
inc
push
sub
outsb
bound
and
sbb
imul
xchg
in
push
push
jo
ds
xchg
inc
pop
xchg
nop
xchg
mov
mov
loope
push
daa
push
push
sbb
inc
cmp
add
jl
mov
imul
mov
mov
cmp
push
sti
sub
insb
pushf
dec
pusha
pop
sahf
mov
mov
shrb
movsb
mov
test
xor
mov
add
push
add
into
roll
pop
push
js
fmul
lret
and
nop
ljmp
clc
jno
orb
pop
mov
or
lea
pop
test
cmc
and
fidivrl
add
cmp
sbbl
pop
into
ja
dec
inc
cmovge
popa
inc
push
jmp
gs
sahf
xorb
push
add
pop
sub
xchg
sbb
pop
mov
je
jae
popa
dec
xchg
or
jno
inc
mov
loope
testl
fsubrs
lea
insl
aad
ja
sub
icebp
aaa
add
mov
add
mov
sti
push
sti
push
adc
roll
pop
xor
add
xorl
and
into
push
push
fistps
fcmovb
push
or
push
or
data16
sbb
cmpsb
add
push
jb
movsl
or
dec
inc
xor
mov
mov
cmp
cmp
push
aam
xlat
jnp
lea
sub
jmp
fists
std
js
or
adc
cmp
outsl
or
push
sub
xor
mov
add
xchg
pop
ss
inc
rcrb
mov
push
and
sbb
inc
cmp
sub
jno
aad
dec
lock
xchg
xor
add
and
xor
pop
insb
sti
add
xchg
add
nop
dec
add
xchg
add
mov
outsb
aaa
insb
int3
pop
inc
jecxz
xorb
push
loope
pop
in
fnsave
sbb
lcall
bt
xchg
cmp
sti
adcl
enter
dec
push
and
jo
fdivs
adc
mov
movsl
dec
insb
xor
sbb
mov
add
or
arpl
fmuls
mov
sub
mov
es
add
or
idivl
inc
pusha
dec
sub
rcll
rolb
cmp
cmpsl
pop
cmp
mov
pusha
mov
jge
add
xor
fwait
inc
jns
jne
sub
xor
mov
push
stos
out
mov
add
int3
inc
sub
into
adc
pop
shlb
aam
pop
aad
push
jmp
hlt
add
out
pop
test
mov
scas
or
mov
mov
xor
in
sbb
adc
and
aaa
decl
or
push
push
data16
adc
cmp
and
and
hlt
inc
incl
mov
loop
add
mov
in
inc
xchg
nop
adcb
push
push
arpl
pop
scas
loopne
push
cmp
adc
pushf
aas
inc
sahf
pushf
push
lods
cwtl
mov
sbb
or
pop
add
pop
adc
call
cld
rcll
cwtl
hlt
jns
jmp
fcomi
in
addr16
mov
shl
adc
clc
push
aaa
loop
add
ss
pushl
dec
fcoms
movsbl
inc
xchg
push
or
int
xchg
dec
inc
mov
adc
inc
and
push
int3
mov
dec
push
fmul
push
addr16
and
xor
mov
icebp
inc
mov
cltd
fs
mov
pop
into
pop
or
clc
cmovo
sti
dec
incl
and
inc
enter
mov
xor
repnz
les
cmpb
aas
or
shrb
cld
xchg
sub
or
fdiv
or
shrl
shll
and
dec
inc
push
sbb
mov
adc
mov
std
inc
cmc
jbe
and
dec
push
ss
test
xchg
ljmp
cmp
bound
inc
incl
mov
hlt
jp
xchg
xchg
inc
fistps
insl
cwtl
pushf
xchg
mov
sbbb
cld
bound
jne
pop
add
fsubl
ss
jb
repz
fmuls
inc
incb
jne
cld
jne
pop
push
cs
scas
xchg
hlt
cltd
cltd
push
pop
hlt
xchg
fsubs
push
push
shr
cmp
fcoml
mov
in
pop
int
in
add
add
ja
or
push
jae
mov
or
dec
fdivrl
movsb
push
inc
or
add
aam
mov
inc
daa
outsl
iret
pushf
or
orb
stos
ss
jno
shl
adc
lock
dec
sub
sbb
and
mov
mov
mov
mov
ficoml
pop
adc
mov
jb
push
gs
pusha
mov
xor
dec
add
fidivrl
mov
in
sbb
std
push
sub
add
lahf
add
sub
push
lahf
test
xor
div
sbb
sub
push
xor
pop
cld
fbstp
shr
divl
shr
push
mov
adc
jno
enter
inc
sub
or
in
push
push
mov
dec
sbb
in
inc
sub
add
imul
mov
inc
daa
push
sbb
xor
adc
add
push
clts
cmpl
xchg
aaa
sub
fs
sbb
repnz
pop
fcoms
jp
nop
or
fld
mov
sbb
int3
or
inc
add
inc
subl
dec
ret
icebp
call
fadds
jle
or
lock
out
enter
xor
std
sarb
pop
popf
aam
lock
mov
mov
sub
jne
jl
sbb
xchg
push
fwait
cmp
enter
pop
adc
test
inc
mov
sbbb
add
lock
jo
mov
daa
pop
push
jno
arpl
push
push
int3
xor
mov
test
dec
lcall
and
shll
push
sub
and
inc
outsb
cmp
ret
mov
cmp
incl
cmp
fwait
cmp
add
lret
mov
test
jg
fdivl
mov
fadds
jne
pop
or
test
jb
out
loopne
scas
jo
mov
jmp
dec
insl
or
adc
popa
add
ret
dec
jae
mov
pop
popa
xchg
lahf
dec
add
shll
ret
mov
jle
jg
sarb
mov
or
push
mov
adc
imul
jl
lock
scas
in
aam
jns
xor
sbb
jo
in
push
shrl
dec
les
push
push
movsl
in
cmp
mov
xor
add
inc
nop
cmp
sbb
jbe
and
or
push
sub
lods
jmp
je
dec
cld
push
pop
push
and
inc
cmp
rcrl
pushl
xor
call
jge
enter
out
push
or
xchg
mov
or
jbe
lock
push
push
imul
dec
push
sbb
mov
decb
in
adc
cld
enter
test
in
hlt
je
jecxz
das
hlt
add
mov
sbb
adc
mov
jne
movb
mov
xchg
loop
xor
cmp
xor
jmp
cmc
sahf
inc
add
xor
adc
loope
add
cld
nop
dec
or
inc
adc
movsb
pop
mov
clc
mov
adc
test
pop
leave
sbbl
adc
mov
push
mov
in
int3
push
inc
stos
push
or
push
adcl
mov
mov
aas
clc
ljmp
rolb
enter
test
or
fs
mov
inc
enter
in
repnz
add
inc
add
and
aaa
inc
xor
mov
inc
popa
or
pop
xor
cmp
mov
in
xorb
sti
sub
imul
popf
pop
xchg
push
cmp
xchg
inc
push
rol
jno
cs
dec
cmp
xchg
cmp
jne
sti
inc
outsl
inc
enter
ss
addl
loope
sub
jl
sbb
filds
test
mov
pop
or
inc
or
mov
inc
sub
std
xor
jae
fcomp
fidivs
insb
repnz
adc
loopne
jmp
xchg
cmp
shll
dec
pop
in
inc
add
adc
jmp
add
ljmp
nop
out
xor
call
inc
sub
je
jne
add
pop
nop
daa
nop
popa
aas
in
jmp
es
sub
xchg
xor
inc
cmc
push
jo
cmp
or
imul
mov
loopne
movsl
cmpsb
mov
pusha
lock
sub
mov
or
sbbl
leave
insb
adc
inc
mov
push
xor
scas
mov
pop
cmp
and
xlat
sub
push
jbe
and
daa
mov
sub
std
inc
add
nop
dec
sbb
jns
ljmp
sti
add
inc
sti
mov
or
fstpt
push
insb
pop
inc
mov
xor
out
add
push
dec
mov
fsubs
enter
inc
add
inc
loop
pop
lods
push
popa
adc
pop
cld
and
mov
or
adc
add
popa
imul
and
sbb
pushf
popf
sbb
cmp
xchg
leave
mov
int3
cltd
mov
adc
imul
mov
ret
push
fsubrs
fdivs
dec
mov
ds
lea
mov
jne
inc
dec
mov
test
dec
jne
out
iret
add
cld
pop
fcoms
cli
sarb
xor
pop
sub
js
dec
cmp
jg
sbb
fwait
jge
jge
jne
cltd
cmc
and
add
pop
int3
jp
rcll
cs
sti
paddd
jbe
cmp
cmp
jb
pop
jne
cmp
jae
or
sub
pop
cmp
and
call
sub
sar
xchg
pusha
rol
dec
cmp
notb
lea
xor
mov
stc
sbb
cmp
jmp
mov
mov
sub
out
pop
add
mov
push
fstl
ds
inc
xor
dec
mov
jnp
sbbl
push
add
adc
dec
leave
push
xor
or
xchg
or
adc
adc
inc
ds
call
adc
in
jne
in
in
push
sbb
mov
test
fcoml
xor
das
xchg
movsw
iret
pop
lea
mov
stc
or
in
mov
sub
mov
cmp
decl
adc
in
dec
sbb
scas
sbbl
mov
xor
or
jl
jae
lock
and
xor
dec
fst
into
sbbl
xor
or
mov
bound
sub
roll
mov
inc
lret
xchg
repz
mov
xchg
pop
push
and
sbb
enter
mov
lret
inc
shr
shr
mov
push
filds
iret
into
dec
sub
cmp
test
mov
and
push
push
repnz
enter
mov
mov
inc
shl
lea
ret
mov
stc
out
add
push
push
outsb
mov
pop
or
and
cltd
pop
jmp
mov
sub
jmp
mov
jo
or
sbb
inc
dec
orb
jle
sti
cmpsb
dec
aad
mov
push
pusha
push
or
rcrb
inc
mov
in
jecxz
int3
or
sub
mov
dec
jb
imul
mov
inc
movsl
aam
push
add
leave
xor
jmp
sbb
add
sbb
imul
add
inc
test
pop
je
testb
jne
push
mov
adc
cli
daa
inc
adc
fcomps
pop
mov
cmc
loope
dec
cmpsl
testb
je
pop
aam
loopne
rolb
cmp
sub
imul
in
adc
xor
into
adc
push
mov
inc
mov
sub
sub
ret
rcl
inc
call
push
rorb
es
and
lods
fs
adc
and
mov
icebp
sub
mov
jbe
imul
sahf
jg
mov
and
repz
xor
or
mov
mov
mov
xor
mov
repnz
test
xlat
inc
shlb
or
imul
mov
jno
movsb
mov
clc
jne
jno
out
sub
movsl
enter
push
stc
xchg
push
pusha
leave
test
cwtl
sub
gs
dec
lret
jne
cmp
jae
xor
cmp
inc
push
cmpsb
jbe
es
adc
xchg
sar
stos
adc
sbb
xor
int3
icebp
inc
and
ret
xor
dec
in
mov
add
rorl
nopl
ret
mov
cmc
loopne
adc
cmp
dec
stc
in
and
mov
inc
mov
mov
sbb
mov
test
test
hlt
mov
in
jae
in
stos
jno
orl
in
bound
clc
add
loopne
push
push
pop
setp
push
dec
sub
cmp
mov
ficoms
pop
rcr
mov
and
and
mov
jge
push
inc
cmp
repz
mov
pop
jnp
push
addl
aas
gs
jmp
pop
lahf
dec
subl
jmp
aad
ja
cmp
andl
mov
les
fisubs
insl
lods
addr16
mov
add
inc
pop
test
or
adc
xchg
inc
ret
xchg
std
push
int
clc
inc
mov
sbbl
std
mov
into
mov
cli
push
adc
loopne
in
adc
sahf
addb
inc
jae
pop
bnd
push
push
imul
sti
jge
add
cld
loope
faddl
pop
dec
andl
mov
fists
adc
test
clc
sub
syscall
lds
div
add
inc
cwtl
pop
mov
xchg
enter
cmp
loopne
push
daa
mov
mov
or
aam
loopne
iret
xor
pop
push
jmp
adc
jmp
out
cmp
sub
ffree
in
sub
push
adc
sbb
or
ljmp
insl
or
jmp
icebp
push
sub
sahf
add
or
out
call
inc
adc
lock
add
add
mov
cmp
push
mov
pop
push
leave
cmp
filds
ficompl
push
cs
mov
jmp
mov
adc
xor
fildl
jg
divb
jne
inc
movb
jmp
iret
pop
xor
das
jne
push
pop
jmp
movsbl
mov
sbb
call
inc
push
cmp
or
jb
mov
or
je
jmp
mov
or
lock
cs
lods
pop
jmp
clts
fisubrl
jg
xor
adc
pop
enter
pop
mov
mov
mov
or
and
push
mov
inc
dec
and
dec
mov
jmp
mov
les
mov
shrb
mov
jmp
cmp
inc
pop
and
xchg
inc
bound
daa
stos
cmp
pop
xor
pop
pusha
cltd
mov
xchg
test
shl
stc
mov
cmp
fwait
xchg
push
and
int3
dec
adc
xor
sub
leave
out
jo
stc
xor
lea
xchg
mov
pushw
mov
inc
cmp
jecxz
xor
dec
scas
add
shll
ret
lock
pop
xchg
add
les
xchg
clc
xor
lcall
outsb
and
test
movsb
and
fdivs
popa
leave
xchg
outsl
ret
mov
je
cmp
cmp
pop
cmp
insl
scas
inc
fcmovbe
arpl
or
popa
aam
push
or
ss
scas
adc
add
add
movb
push
cmp
pop
pushf
scas
in
mov
push
xor
je
ljmp
sbb
jmp
cmp
add
dec
adc
cmp
das
je
dec
jne
inc
push
xchg
shll
sbb
push
cmp
mov
sbb
push
hlt
mov
scas
adc
shrb
dec
popf
cmp
push
cli
and
xor
enter
xor
pop
loopne
jno
pop
mov
loopne
loopne
mov
mov
xor
xchg
int3
mov
dec
repnz
lcall
ljmp
xor
negb
in
test
xor
loop
lds
cmp
add
sub
or
lahf
mov
sub
and
cli
push
adc
pop
repnz
mov
jge
xor
fiaddl
loope
fs
call
push
pop
fwait
jbe
add
xor
mov
and
sbb
push
jae
xor
and
or
loopne
pop
cld
and
cwtl
cld
xor
insb
sub
das
adc
or
pop
shrl
je
pop
jo
in
enter
mov
call
das
xchg
jmp
inc
xor
push
loope
push
add
pop
mov
inc
lahf
andl
and
mov
aaa
mov
add
adc
cld
sub
outsl
mov
lahf
aam
pop
aaa
je
and
push
sub
in
int3
xchg
push
es
cli
cmpsl
icebp
imul
xchg
pop
dec
mov
push
push
mov
lcall
and
push
cmc
cmp
jp
cmpb
insb
lods
adc
subps
cmp
jbe
mov
add
jg
push
neg
mov
add
pop
pop
push
es
pop
sbb
je
dec
cmpps
cmp
addr16
ja
xchg
jne
int
adc
jl
or
xor
decl
ds
jne
movb
push
inc
jns
or
ljmp
in
pusha
lret
or
lds
jge
xchg
inc
mov
push
add
aam
pop
sti
sbb
stos
mov
sub
movsl
icebp
sub
add
or
data16
and
mov
pop
sbb
pop
xor
push
xor
imul
lods
cmp
popa
test
add
pop
pop
adc
insl
or
cmp
pop
adcl
mov
mov
xchg
cmp
popf
pop
scas
bound
or
mov
addr16
pop
or
arpl
or
adc
push
adc
mov
push
xchg
sbb
jbe
push
and
mov
mov
aam
adc
sub
adc
dec
cs
cmc
enter
enter
jecxz
adc
push
mov
push
das
loop
jbe
lahf
sub
rorl
add
cli
icebp
sbb
jb
jne
mov
mov
inc
cmp
pop
push
pop
or
sbb
outsw
test
in
daa
sahf
gs
in
inc
xor
xchg
mov
dec
out
push
int
andb
mov
mov
dec
inc
inc
sub
fs
mov
mov
and
jo
flds
aaa
sbb
jmp
jno
in
cwtl
mov
pop
cmp
xor
loope
push
and
cmp
sbb
and
pushf
test
cmp
mov
xchg
nop
xlat
nop
incb
mov
sub
push
aaa
lock
add
dec
outsl
cltd
lods
or
decl
push
mov
lods
sbb
cld
jns
pop
daa
mov
mov
fisttps
pusha
or
les
sbb
add
jg
cmp
rcrl
push
nop
add
xorb
sbbb
movsb
ror
add
icebp
mov
mov
test
std
add
dec
int3
aam
push
test
cmp
orl
mov
mov
cli
and
push
add
inc
int
fwait
cld
adc
ss
xchg
clc
add
enter
cltd
inc
hlt
out
test
jne
pop
xor
sub
add
dec
clc
and
test
in
xor
sub
daa
xlat
and
and
jno
arpl
lret
adc
sti
movsl
ss
push
js
adc
jns
cli
pop
lods
movb
xor
addb
aam
dec
aam
lcall
adc
mov
push
and
inc
cmpsb
js
or
add
mov
imull
jbe
stc
loope
or
shlb
and
sarl
fmull
push
movzbl
add
adc
jns
xor
inc
pop
inc
roll
mov
dec
loope
and
sti
jne
scas
dec
push
sar
jmp
or
movsl
imul
movsb
push
xlat
add
sub
popa
lods
or
xor
js
jge
jp
dec
sbbl
push
mov
add
mov
cmp
mov
aaa
popa
xlat
dec
mov
faddp
stos
insl
inc
pop
fcompl
lods
and
push
mov
imul
pop
or
mov
cmpb
add
divl
adc
loopne
lods
rorb
and
invd
mov
or
ljmp
cltd
inc
mov
scas
int
lods
dec
mov
xor
nop
mov
enter
jl
add
and
test
pop
adc
jge
cs
orl
sbb
adc
or
rolb
adc
arpl
les
stc
ret
inc
adc
push
push
call
xor
inc
lret
hlt
shlb
fisttps
aad
fisttps
cmpsl
inc
aad
hlt
or
or
movsl
xor
call
call
add
sub
fldl
sub
jmp
int
add
dec
push
adc
jge
mov
scas
push
sub
in
sub
popf
cmpsl
mov
adc
xchg
addr16
mov
or
mov
outsb
push
and
ret
sbb
int3
lea
sub
xor
test
fcompl
mov
pushf
jo
imul
pushl
test
daa
cld
push
shlb
xchg
jge
mov
nop
cld
in
mov
pop
and
push
lods
mov
fistpl
xor
das
push
or
adc
js
movsl
push
dec
fdivs
in
and
imul
mov
out
add
gs
cmp
data16
stos
sbb
xor
push
jo
add
out
and
sub
and
and
pop
sub
aad
mov
pop
and
testb
nop
das
subl
bound
out
push
imul
xchg
cmp
ljmp
movups
and
aad
mov
imul
cmp
clc
movl
sub
sub
es
cld
push
cs
aam
jmp
cltd
or
jae
mov
jge
adc
subb
dec
lea
enter
aad
adc
jae
xchg
fsubs
icebp
or
sbb
imul
push
cmovnp
addl
hlt
cmp
cmp
xor
xor
dec
add
cmp
ja
mov
ja
and
rcrb
dec
jl
sub
je
jno
xor
sub
push
push
push
adc
lods
ret
pop
popa
jg
mov
clc
xor
loopne
cmp
je
xor
sbb
lods
pop
popa
sub
ss
mov
daa
sub
xor
jle
adc
push
push
sbb
cwtl
or
in
pushf
in
and
or
mov
xchg
jns
std
sbb
pop
xor
mov
sbb
or
and
orl
mov
jno
adc
adc
in
xchg
mov
xor
pop
or
mov
lret
sub
and
cmp
and
std
or
leave
mov
clc
mov
cmp
inc
stos
adcl
cmp
enter
cmp
cli
in
xchg
jo
cmp
push
cltd
and
test
cmp
push
rcll
sarb
sub
cli
push
or
sub
mov
xchg
mov
sub
test
adc
lods
lcall
out
stos
xor
jns
mov
movsb
pop
gs
cltd
fstpt
mov
movsb
ss
push
test
pop
add
cmp
xchg
incb
add
jae
xor
call
cmp
out
outsb
leave
and
cmp
mov
pop
add
xor
mov
sub
push
out
in
test
inc
shlb
sbb
adc
call
popf
lods
adc
je
jle
sub
add
jp
leave
repz
pop
ss
jg
daa
pop
test
ret
sub
cmp
or
push
ds
mov
jge
lods
les
jge
ja
push
sbb
rorb
xchg
sbb
mov
push
inc
test
rorb
loopne
popa
dec
mov
xchg
insl
subl
je
and
xchg
mov
fwait
inc
sbb
xchg
into
les
xor
mov
sbb
icebp
pop
mov
pop
inc
adc
movsl
push
in
enter
sbb
test
push
jo
or
lods
mov
pop
ret
dec
mov
xchg
das
and
add
push
and
inc
pop
sub
fildll
jge
fmull
jge
fstpl
and
push
aaa
mov
sbb
rorb
rolb
cmpsb
mov
lods
or
push
test
or
roll
movsb
aas
xchg
pusha
inc
mov
sub
cld
ss
sbbl
shl
fstpt
sub
notl
sub
sbb
fsubrl
push
xchg
sub
pushf
mov
jns
add
jne
inc
fmull
imul
std
mov
sbb
pop
jg
push
dec
mov
and
leave
cmp
jle
mov
fdivr
xlat
xor
inc
cmp
jl
ret
xor
push
add
add
push
add
rorl
cld
sbb
loop
dec
xor
and
jno
mov
fldt
mov
aam
pop
sbb
mov
inc
and
outsl
ja
add
or
mov
je
push
push
cld
pop
cltd
mov
stc
test
outsl
movb
inc
jmp
mov
mov
mov
add
pop
rolb
or
icebp
jae
andb
sbb
push
shrl
jl
pop
fdivrp
stos
call
sub
and
out
jp
mov
mov
test
mov
cltd
lcall
sub
clc
jns
sbb
inc
mov
lock
pop
clc
out
pop
mov
push
pop
rol
push
adc
add
cmpb
push
add
cwtl
fidivl
inc
les
and
test
rol
and
adc
lods
mov
sub
and
inc
pushf
rclb
jns
mov
push
in
sbb
push
push
adc
mov
inc
or
push
mov
jne
lock
pusha
sub
call
pop
enter
jmp
mov
mov
mov
bound
out
inc
insb
mov
outsb
push
fistps
pop
cwtl
sbb
lods
adc
sti
dec
shlb
pop
add
fstpl
std
sbb
mov
cmpb
cli
xor
pop
xchg
cmpsl
adc
push
push
add
fdivrl
call
add
xor
adc
xchg
dec
push
movsb
and
and
sub
sub
mov
xor
cmp
dec
push
pusha
pop
jge
mov
pop
lret
push
add
nop
or
lret
push
or
fstpt
divl
sbb
xchg
outsb
dec
in
xor
adc
push
repz
call
add
push
jne
push
inc
dec
out
or
jb
imul
cmpb
sbb
pop
imul
mov
mov
inc
cmp
fs
pop
inc
adc
clc
xor
inc
sahf
inc
or
fisttpl
inc
cltd
inc
and
sti
ficompl
jg
push
mov
pusha
imul
fs
inc
ljmp
lret
add
js
cmp
cmp
and
sbb
sti
mov
outsb
push
je
idivb
adc
mov
adc
imul
aaa
add
je
sbb
adc
ss
push
ret
jg
or
stc
cmpps
jb
sbb
js
jbe
out
and
sbb
xchg
add
and
pop
adc
aaa
mov
jno
pop
scas
xorb
or
push
and
cli
cmpsl
sub
dec
shll
or
int
mov
test
pop
aaa
aam
adc
imul
jno
mov
mov
inc
mov
dec
divb
inc
jmp
pop
jae
dec
cld
stos
push
cli
or
shll
repnz
cld
inc
pop
pop
nop
sarb
xchg
je
mov
add
aaa
jb
or
dec
dec
cld
sbb
rorb
adc
movsb
add
loopne
xchg
fmull
ret
inc
andl
mov
sub
pop
loop
incl
jne
sub
cs
sub
jae
push
rep
int
dec
add
xor
adcl
sub
adc
aaa
je
rcll
dec
and
or
stc
je
and
inc
push
fneni(8087
push
xorb
pushf
add
push
mov
shlb
movsb
pusha
push
scas
pop
mov
push
out
mov
push
push
xchg
je,pn
imul
lock
mov
adc
add
pop
test
jns
push
aaa
enter
sbb
incl
adc
movl
push
sbb
mov
jg
cs
add
xor
daa
add
add
loope
sbb
mov
pop
popf
aaa
inc
pusha
jo
and
aas
lea
xchg
gs
mov
jbe
cmc
lahf
data16
inc
lds
inc
jge
jne
jmp
or
sbb
and
adc
imul
add
dec
mov
add
sbb
inc
cmpsb
adc
rolb
jne
std
xchg
xor
jge
mov
jl
dec
mov
add
lock
jle
mov
push
xchg
stos
aas
adc
dec
cmp
je
sub
cmp
inc
add
push
add
lods
pop
push
sbb
xchg
jno
or
enter
mov
sub
push
push
push
negb
les
lods
gs
push
lock
xor
notl
mov
pop
add
pop
sub
adc
mov
loop
mov
inc
cmp
jge
arpl
addr16
incb
push
ret
mov
cmp
sti
push
push
push
or
inc
cmp
jl
xor
inc
movsb
decl
cld
jle
cmp
int
xor
cmp
je
cmp
je
or
inc
inc
cmp
jl
cmp
je
in
xchg
jbe
sti
getsec
adc
add
outsb
ljmp
mov
js
test
jl
push
clc
out
rcr
fistpll
adc
xor
inc
mov
mov
cmp
jle
pop
loope
mov
xchg
dec
mov
or
jg
daa
add
out
or
cmp
or
push
into
fld
popa
jl
sahf
cld
gs
out
mov
sub
test
mov
dec
mov
jmp
sbbb
mov
or
cmp
push
cs
pop
cmp
xchg
mov
mov
mov
dec
jbe
popa
cld
jle
mov
add
popa
jge
xchg
lea
cltd
imul
mov
or
push
sbb
xchg
clc
cltd
mov
dec
movq
int3
add
div
enter
cld
add
add
lea
popa
push
pushl
fdivrs
loopne
sti
outsl
mulb
lods
fadds
or
or
xlat
test
or
icebp
ret
dec
lea
dec
jne
cmp
je
and
js
add
xchg
mov
inc
add
adc
dec
imul
mov
test
sbbl
jo
cmpsb
fdiv
call
mov
repz
push
add
jl
adc
std
call
jns
adc
jns
in
xchg
pop
leave
xchg
call
push
or
enter
xchg
cmp
lock
lret
dec
xor
sti
inc
pusha
add
adc
or
out
test
in
xchg
fildl
mov
push
jae
in
pushf
cmp
or
pop
mov
dec
je
jnp
adc
int
inc
lock
mov
sbb
pop
pop
mov
sub
pusha
pop
xor
push
imul
mov
pop
fstl
xchg
adc
shrl
add
pusha
js
push
sahf
out
add
mov
cmp
orb
adc
jo
pop
dec
movsb
scas
in
xor
sbb
enter
xchg
iret
mov
and
mov
mov
and
and
ja
mov
xchg
mov
sbb
xchg
inc
lds
test
sbb
test
xchg
push
in
in
inc
test
orl
test
xor
xchg
or
cmpsb
sarb
xor
fstp
popa
cmc
rclb
and
inc
clc
jne
insl
inc
cs
es
fidivl
inc
popa
jo
insb
add
mov
or
notb
push
pop
xchg
imul
sbb
popf
aam
into
cwtl
add
mov
es
je
jmp
jg
aaa
push
jns
add
xchg
imul
inc
adc
sub
je
sub
pop
icebp
sti
and
and
outsb
je
js
ficoml
movsb
mov
pop
pop
push
jmp
inc
mov
push
mov
inc
cmp
cmp
je
into
pop
mov
lret
push
mov
jbe
lea
push
ss
jg
and
add
cmp
jb
jmp
push
je
and
sbb
movsl
ja
xchg
mov
int3
jp
xor
adc
push
add
and
cmp
mov
repz
or
loop
ret
or
lock
push
or
out
outsl
mov
jns
stc
or
lea
cmpb
push
shr
inc
mov
jno
xlat
sar
decl
mov
add
inc
inc
dec
jne
pop
jmp
and
int3
add
incb
add
mov
and
add
pop
mov
shr
movlhps
xadd
rol
push
and
sub
xchg
loope
lds
fucomp
adc
aam
push
sbb
push
jle
orb
push
orl
sbb
cmp
clc
std
aas
sahf
insb
dec
sarb
mov
enter
push
adc
daa
ljmp
cmpsb
mov
popf
aam
mov
mov
cld
out
mov
jns
cmp
pop
cwtl
pop
cmpsb
mov
lcall
insl
push
push
insb
and
stos
int
fxch
je
push
sub
push
jecxz
mov
pushf
mov
cs
cmp
daa
adc
test
lods
sbb
jge
pusha
aaa
int
dec
mov
daa
clc
fisttps
inc
in
adc
rorb
fidivs
mov
push
inc
inc
or
nopl
out
and
es
add
push
decb
cmpsl
pop
inc
imul
scas
and
out
repz
xchg
clc
orb
cmpl
andl
pusha
loope
and
and
out
pusha
pop
push
push
mov
jmp
and
inc
push
or
es
xor
insb
mov
xor
ret
and
sbb
ret
and
push
pop
push
sbb
or
loope
sub
adc
or
shrb
into
cmpb
mov
jae
dec
xchg
add
jno
mov
int
jl
hlt
insb
ficoml
xor
das
dec
shrb
pop
inc
cmp
fistpll
pop
push
insl
or
sbbb
cmp
or
push
cmp
ljmp
cmp
loope
pushw
and
or
insb
mov
jge
ja
mov
xor
adc
js
jnp
or
cli
add
mov
enter
add
inc
daa
sarb
sti
push
and
pusha
push
push
push
ficoms
sbb
adc
je
pop
ror
andb
rcrb
sbb
data16
jecxz
pop
aaa
loopne
mov
clc
in
sbb
adc
movsb
xlat
pop
jg
push
jcxz
push
pusha
inc
add
insb
imul
aad
sub
rol
or
dec
sti
sbb
sahf
jmp
jne
cld
cmp
popa
loope
lea
or
add
enter
xchg
sarl
insl
aaa
popf
std
bound
jg
or
jbe
cmp
cld
stc
mov
mov
hlt
add
sti
repnz
shrl
das
sbb
jmp
test
xor
in
lock
imulb
cmp
dec
mov
bound
mov
test
sbb
inc
loop
enter
shl
leave
adcl
outsb
lock
loope
jge
xchg
mov
into
fs
faddl
mov
add
adc
loope
scas
rorb
cwtl
dec
jns
out
xlat
fsubrl
sbb
test
in
push
nop
or
sbb
andb
xor
aam
add
add
or
xchg
enter
pop
cmpsb
mov
les
pop
xchg
mov
sbb
adc
mov
mov
push
mov
in
xchg
push
xor
popf
jns
mov
lahf
pop
mov
fdivrs
or
add
cmp
mov
or
add
and
push
js
enter
imul
in
or
sbb
sub
enter
xchg
cmp
outsb
pop
mov
data16
mov
add
inc
inc
dec
loop
add
or
arpl
add
je
pushf
xchg
subl
add
stos
xchg
test
out
push
addl
fwait
push
push
fcoms
xchg
test
pop
push
push
xor
aaa
add
push
mov
stos
fwait
add
cli
cmpsl
adc
add
inc
jno
inc
xor
mov
add
mov
test
jo
jne
insb
jmp
or
xchg
in
daa
gs
mov
mov
inc
dec
dec
repz
add
dec
inc
mov
or
add
dec
add
jo
jo
outsl
pop
and
push
repz
or
xor
outsl
jnp
in
xorl
in
pop
xchg
testb
xor
xchg
push
addb
push
cmp
mov
fsubrs
test
jb
lea
outsl
dec
mov
pop
dec
subb
add
xchg
and
popa
pusha
stc
test
xchg
inc
mov
popl
push
std
imul
push
inc
data16
pop
incl
pop
jne
adc
xchg
mov
and
xchg
pushf
or
push
adc
mov
inc
imul
jns
addb
cmpsl
mov
jg
outsl
pop
rcrb
stos
sbb
push
jmp
or
push
or
push
jns
push
repnz
adc
scas
or
jl
dec
xchg
or
fs
loopne
push
sbb
sub
or
aaa
mov
jb
hlt
jno
jno
and
dec
cmpl
pop
add
fs
push
xchg
sub
cmp
mov
mov
jno
cmc
jo
push
and
adc
mov
xor
inc
mov
test
loopne
cmp
mov
sub
sub
hlt
mov
loopne
enter
or
and
loope
lods
and
bswap
xchg
arpl
loopne
shll
cltd
fstps
or
roll
pop
jge
ret
shrl
test
je
and
addr16
jno
pop
xorb
push
shl
mov
bound
mov
fwait
mov
mov
adc
jmp
mov
inc
and
sub
maxps
mov
maskmovq
notl
push
lods
pop
lret
out
cltd
dec
and
xor
cmp
adc
inc
mov
xor
sti
sub
sub
gs
push
push
push
jmp
dec
clc
test
jb
cmp
ja
sti
fs
decb
fstpl
int
leave
pop
ja
jb
or
fimuls
addr16
push
and
ja
push
inc
inc
jae
cmp
cmp
xor
sarb
int
and
push
sbb
mov
jae
xor
sub
pop
sbb
add
adc
add
or
cmc
xor
push
ret
gs
pop
cwtl
sub
sub
and
pusha
add
push
cmp
fnclex
loop
push
add
fs
lret
dec
fstpl
add
jnp
mov
jne
and
push
mov
jne
mov
xor
jns
push
mov
rorl
mov
add
lods
je
test
dec
jmp
jne
cmp
daa
mov
sub
pop
sub
adc
xor
push
push
inc
or
push
ja
pop
adc
repnz
std
mov
and
dec
or
or
lret
jno
inc
hlt
mov
das
arpl
xor
aaa
pusha
sub
xlat
push
stos
xchg
pusha
jl
push
jl
movsl
leave
pop
dec
push
movsb
xchg
push
mov
sbb
imulb
dec
lret
ds
andl
cwtl
testb
clc
push
and
stc
push
test
sbb
cmp
push
adcb
enter
pop
pushl
and
or
scas
clc
clc
in
mov
xchg
shr
push
loope
pop
or
sbb
jb
shrb
nop
int3
out
les
mov
mov
mov
add
mov
cmp
imul
push
xchg
pop
aaa
jb
adc
xchg
je
rolb
out
testb
mov
xchg
je
inc
sbb
out
mov
xchg
cmpb
je
sbb
adc
sub
push
nop
pop
inc
and
int3
jae
inc
add
adc
inc
inc
in
movsb
cld
mov
push
xchg
push
cs
xchg
inc
rorb
xor
xchg
imul
and
add
push
imul
jno
scas
test
lds
rolb
or
movsb
cmp
jo
js
stc
jecxz
jo
pop
inc
pop
int3
jbe
int3
das
in
rorb
loopne
movzwl
cmp
xor
aam
repnz
loopne
loopne
fsubr
sub
sbb
pop
xor
fisttpl
popf
lcall
shlb
ret
xchg
mov
lock
fstl
cmc
xor
sti
pop
daa
mov
inc
push
add
push
movsb
cli
les
mov
sub
je
jne
jmp
push
ss
sub
aaa
cmp
sub
xor
dec
pop
bnd
std
movsb
jno
inc
les
push
sub
adc
inc
jbe
xchg
sub
push
lock
xchg
dec
out
nop
pop
dec
mov
stos
sahf
sub
scas
mov
xlat
dec
setno
testl
jmp
mov
push
push
sahf
add
je
adc
jo
enter
push
test
or
or
jg
incl
test
xchg
and
sbb
out
pmaxsw
mov
sbb
push
loopne
scas
fnstenv
xchg
pushf
add
sub
push
inc
or
jge
out
inc
hlt
in
pop
jnp
push
mov
dec
adc
mov
adc
lea
or
fistpll
fidivrs
test
push
adc
inc
xchg
sub
xchg
adc
aaa
fbld
dec
lret
push
icebp
loopne
sarl
add
repnz
cmp
aaa
and
jne
push
jo
sbb
push
or
push
push
push
mov
xchg
bound
int3
xchg
sbb
sbb
test
js,pt
mov
inc
out
xor
lock
sbb
ss
inc
cmp
test
mov
push
add
mov
pop
jmp
cmpb
sbb
dec
outsl
jmp
push
push
xchg
clc
icebp
js
fadds
jge
shlb
pop
cmp
sbb
mov
and
cmpsb
ja
je
push
jmp
adc
rclb
xchg
mov
cmpsb
jne
ja
add
cmp
xor
in
adc
call
pop
cmp
call
push
add
mov
push
push
out
sahf
mov
loop
pusha
adc
or
or
cmp
mov
pop
add
jg
jae
add
movsb
cmp
iret
xor
and
adc
sub
push
mov
mov
clc
clc
jmp
shll
xor
shr
mov
dec
jne
pop
fmull
xorb
push
inc
jp
dec
sub
or
adcb
sbb
testl
xlat
inc
inc
push
dec
dec
push
or
dec
sbb
push
mov
pop
adc
adc
inc
orl
dec
dec
add
in
push
ds
xor
add
pusha
imul
lods
pop
test
mov
sbb
mov
rcr
or
lods
pop
push
push
push
shl
jne
mov
mov
cmp
les
xlat
test
push
cs
push
dec
and
adc
adc
cmp
push
xchg
les
andb
popa
pop
push
test
xorb
hlt
lods
and
shrb
ss
xchg
and
mov
aaa
movsb
adc
js
lock
mov
xchg
je
jle
in
adc
jecxz
push
mov
jmp
clc
xchg
adc
or
dec
push
je
or
pop
aad
lret
and
add
inc
sbb
xchg
add
or
cmpsl
hlt
loopne
jmp
xchg
lock
mov
inc
or
rcrb
mov
lahf
xchg
scas
in
test
lret
outsb
mov
xor
iret
les
sub
and
fistpll
lock
sub
or
cmp
push
repnz
cld
outsb
xor
in
inc
xorl
mov
je
push
dec
add
jbe
dec
mov
jle
jg
cmpsb
mov
test
jge
jo
sub
popf
ret
inc
jmp
dec
sbb
roll
mov
pop
ret
pop
pop
cmpsl
add
dec
add
shll
and
jp
inc
test
sbb
lods
ljmp
push
jne
mov
mov
ret
cs
sbb
mov
and
scas
adc
sub
sub
sbb
add
addl
pop
aaa
sub
test
xor
aam
adc
mov
hlt
jle
push
xor
sbb
enter
enter
cwtl
test
push
sbb
jl
insb
addr16
mov
add
sbb
dec
iret
dec
sti
mov
dec
sub
sarb
clc
mov
pop
popa
je
push
loope
cmp
xor
sub
nop
pop
sahf
idivl
hlt
adc
push
jae
mov
testb
add
adc
mov
call
shr
adc
add
fs
icebp
push
dec
add
clc
jge
jbe
lock
jge
lock
mov
shlb
xor
inc
push
leave
in
fs
fs
sbb
call
fcoml
sahf
mov
push
inc
push
fs
repnz
test
push
pop
xchg
xchg
jbe
js
repnz
pusha
enter
pop
je
dec
xor
pop
fidivs
pusha
sbb
and
xor
iret
xor
pop
jmp
push
pop
fdiv
cmp
int
jge
dec
mov
adc
sub
std
add
dec
sahf
and
dec
push
hlt
jl
in
iret
or
and
jl
jb
or
dec
push
mov
mov
mov
js
popf
into
adc
in
mov
sbb
cmp
mov
push
push
cmp
cmp
test
cmp
cmp
call
lahf
inc
or
push
mov
jl
xchg
in
xor
leave
call
cs
call
pop
xchg
xchg
in
repnz
int3
fdivrs
jnp
leave
enter
sbb
mov
enter
les
fs
push
aad
pop
pop
clc
jns
addr16
dec
les
inc
loopne
mov
xor
sub
fcoml
push
insb
push
add
shrl
dec
jae
push
int
movsl
add
popf
dec
xor
or
sbb
push
inc
inc
mov
sahf
daa
inc
dec
clc
jp
inc
in
jp
addr16
sahf
inc
jp
sbb
pushf
add
and
xor
insb
sarb
and
aam
iret
xchg
mov
nop
cwtl
rclb
xor
mov
sbbb
enter
je
dec
repnz
jne
and
rorb
sbb
mov
dec
push
cmp
je
cmp
cmp
cmp
test
cmp
cmp
sbb
cmp
jns
or
cmp
push
adc
iret
out
add
inc
push
in
cmp
inc
inc
sub
hlt
push
aad
sbb
adc
leave
xor
xor
das
and
aam
pop
xchg
filds
je
pmulhuw
lret
mov
jno
imul
js
in
and
mov
repnz
pushf
sbb
push
test
sbb
push
push
xor
jo
mov
jns
jns
js
xor
jns
sbb
leave
mov
in
in
adc
push
fxch
in
fs
andl
lods
fidivrs
or
inc
fs
sub
jnp
cmp
xor
adc
push
and
lret
mov
inc
lods
js
xor
push
jo
inc
push
xchg
xchg
mov
sbb
pusha
scas
pop
mov
je
sahf
cmp
fisubrl
sbb
sarb
sarb
adc
adc
mov
std
test
pop
repnz
xorb
mov
or
inc
dec
je
pusha
dec
adc
and
inc
inc
push
and
inc
int3
inc
dec
data16
cmp
js
push
jge
cld
add
xchg
xchg
in
clc
adc
nop
xchg
daa
loopne
adc
in
add
shlb
fdivl
lret
xor
fs
ja
sub
nop
daa
shlb
push
push
sbb
nop
mov
sbb
inc
mov
xchg
insb
sahf
adc
push
pushf
and
enter
push
enter
sbb
daa
addr16
cld
push
cmp
stos
loopne
xor
xor
cld
jnp
in
xchg
movsb
mov
mov
add
sbb
test
jbe
enter
jl
jbe
xor
cmp
shlb
cmp
sbb
pop
push
mov
or
mov
shlb
sbb
in
xchg
push
pop
push
pop
sbb
xor
mov
xorb
enter
push
cmp
xchg
mov
mov
pusha
or
push
popf
xchg
icebp
dec
xor
loop
adc
xor
push
insl
addb
and
pop
repnz
cmp
outsl
pop
pop
push
pusha
fs
and
insb
leave
and
xor
je
enter
js
or
xchg
pop
add
xchg
call
in
mov
nop
in
mov
cmp
sbb
push
movsb
subb
sub
dec
dec
cs
mov
sbb
dec
adc
imul
pop
sbb
sahf
inc
clc
ljmp
push
lea
push
shl
push
test
and
jmp
push
push
mov
sub
clc
test
sbb
mov
cmp
sbb
cmp
aad
inc
cs
scas
or
or
or
mov
or
mov
jbe
aad
rolb
out
pusha
loope
mov
push
daa
cmp
pushf
and
sbb
inc
sub
dec
icebp
jle
xor
add
mov
cmp
dec
std
or
adc
push
sbb
roll
sbb
es
and
push
or
mov
push
mov
mov
ret
xlat
mov
sar
ja
or
sub
cmp
out
dec
je
add
adc
and
test
mov
pop
lfs
and
dec
push
cmp
or
test
scas
orl
lods
sbb
adc
pushf
cmp
or
jge
repz
and
push
jg
cmc
dec
popa
ja
je
lea
ja
movzbl
mov
inc
lea
push
cmp
repz
push
sub
and
cmp
stc
mov
push
add
mov
inc
stos
dec
in
or
sbb
cmpsb
imul
push
daa
cs
add
lcall
add
add
inc
stc
testl
add
or
test
mov
push
add
dec
push
xchg
xchg
inc
pusha
and
shr
push
sbbb
lret
pushf
shll
mov
mov
in
imul
cmpsl
jo
push
adc
imul
lock
in
or
icebp
sbb
jb
xchg
xchg
int3
inc
mov
sub
das
jbe
inc
inc
lcall
pop
inc
push
jbe
cld
inc
add
test
jl
lret
stc
shrl
bound
lea
add
movsb
es
and
sub
jne
push
add
sub
jbe
cmpl
jne
push
push
lock
pop
mov
mov
ret
mov
dec
xchg
mov
dec
push
cli
sbb
sarb
arpl
loopne
and
inc
test
mov
ret
dec
adc
xchg
loop
icebp
lods
pop
aad
lret
mov
sbb
clc
pop
loope
mov
testb
pop
pop
mov
jne
orb
pop
jo
cmp
and
jno
pushl
jle
addr16
pop
pop
or
push
sub
inc
add
jne
adc
sbbl
aas
cmp
push
mov
hlt
add
add
addr16
sbb
mov
lds
xchg
pop
jo
sarl
cmp
add
push
lea
push
mov
call
mov
add
and
rolb
das
das
pop
pop
push
sub
pusha
push
call
xchg
cmp
push
or
xchg
and
adc
mov
inc
rcrl
popa
and
push
sbb
adc
gs
cmc
adc
icebp
or
lods
sahf
decl
cmp
cmp
or
xchg
xchg
and
insl
adc
lods
sbb
test
push
sbb
jbe
xchg
or
ds
mov
mov
cmpsb
mov
in
push
jl
mov
sub
inc
cmp
sbbl
test
shl
jb
fisubrs
sete
pop
bnd
fstpt
fbstp
xchg
sub
je
dec
mov
cmp
pop
mov
xor
mov
adc
movsl
add
mov
add
mov
pop
mov
pop
repnz
mov
inc
add
lods
movsl
dec
mov
cmpsb
sbb
pop
lock
jne
fidivl
inc
fcoml
xor
in
add
lock
sub
inc
mov
stc
faddl
nop
inc
les
in
into
add
push
js
out
adc
push
jns
push
push
lret
or
clc
xchg
mov
push
enter
jno
inc
xorb
das
sbb
mov
sbb
xchg
inc
divl
push
popa
aaa
lds
shlb
jo
popa
dec
or
xchg
loopne
and
in
jns
or
xchg
inc
pop
movsl
add
mov
lock
adc
or
test
lret
mov
fucom
mov
mov
mov
xchg
jl
orl
and
inc
sbb
orl
xchg
and
scas
xchg
inc
add
in
pop
leave
hlt
mov
mov
int3
nop
stos
fs
cmp
movsb
inc
nop
push
enter
push
jl
xchg
aaa
adc
push
push
pop
add
mov
pop
mov
add
adc
sbb
jge
push
push
in
popl
sahf
nop
and
outsl
std
mov
jne
xor
clc
dec
cld
push
hlt
je
cmp
in
push
call
xor
lds
mov
ret
mov
arpl
push
inc
repnz
or
aas
xor
and
jb
jmp
in
mov
sbb
sbb
fsub
loop
sub
outsl
push
loopne
add
cmp
or
js
xchg
adc
pop
push
stos
jne
adc
pop
or
test
scas
inc
sub
mov
or
je
xor
aaa
sahf
pusha
jae
adc
in
cltd
push
call
fadd
cmpl
push
icebp
sub
mov
test
mov
dec
fwait
test
pusha
jmp
aas
or
lahf
loopne
ja
adc
lds
xor
lods
adc
push
mov
adc
xor
mov
repz
or
push
aaa
sub
jle
sub
pop
je
or
add
repz
lea
mov
mov
pop
test
add
aam
adc
mov
sbb
inc
push
movsb
popf
clc
pop
cld
ja
mov
mov
test
push
movsb
xor
movsb
iret
pop
adc
and
js
inc
cmpsb
mov
lea
or
mov
sahf
lods
sub
jno
and
sbb
test
es
pop
push
or
pop
hlt
adc
push
mov
repnz
shlb
dec
push
lahf
mov
adc
not
cmpsb
adc
test
jne
out
sahf
je
xchg
inc
mov
inc
sub
pusha
fmuls
xchg
jo
pop
xor
jecxz
aaa
or
xor
inc
aam
iret
jmp
cmpl
flds
adc
rclb
fistps
adc
repnz
loop
mov
push
dec
push
pop
jbe
nop
fdivs
cwtl
push
cmp
pop
aas
inc
adc
dec
add
xchg
mov
test
jo
sub
and
pusha
or
add
je
xor
push
add
mov
dec
inc
inc
cmp
jb
ja
nop
lret
imul
jo
sbb
nop
mov
call
and
mov
mov
je
dec
popa
inc
sbb
and
out
aas
xor
push
xchg
aas
mov
popa
popa
bswap
sub
pop
or
push
mov
xchg
andb
push
and
cmpl
les
repz
jne
pop
clc
mov
lcall
loope
push
adc
inc
fdivs
rorl
not
lcall
fnsave
inc
cmp
push
add
jbe
push
push
push
jae
mov
cmp
outsl
popa
push
inc
mov
jl
add
push
add
cmp
inc
fsubs
roll
daa
cmp
in
insb
or
aas
cmp
je
stos
ret
cmpsl
imul
test
xchg
or
pushf
int3
movsb
scas
pop
test
push
insl
das
push
sbb
jmp
or
push
xchg
test
mov
sub
jl
aas
cmp
jle
imul
mov
lea
mov
mov
aad
push
add
cmp
stc
mov
inc
insb
sti
les
add
push
push
enter
aaa
jo
shl
push
mov
ret
mov
xchg
out
mov
sub
stos
aaa
inc
dec
jecxz
sub
or
repz
sbb
mov
push
sub
std
incb
ret
test
decl
adc
clc
inc
mov
push
inc
loop
jl
or
sbb
add
outsl
jae
cmpl
and
jp
leave
leave
test
adcl
int
and
inc
jns
nop
enter
add
jo
nop
dec
or
pusha
add
xor
cwtl
lock
repnz
sub
and
adc
jbe
xchg
sbb
prefetcht0
cwtl
daa
sbb
or
xchg
or
test
fadd
repnz
add
adc
adc
dec
adc
push
mov
sub
mov
pop
addl
cmp
cld
into
sub
add
xchg
mov
fwait
inc
sbb
add
mov
gs
cmp
mov
xor
mov
cld
push
pop
mov
adcl
into
int3
push
pop
pop
test
xlat
idivb
nop
sbb
pop
insb
mov
push
mov
std
mov
jne
fstl
adc
lock
lods
push
xchg
push
shrb
xor
cltd
xchg
add
fldenv
xor
rcrl
orl
xchg
and
imul
inc
mov
inc
repz
in
and
adc
int
or
cmc
mov
std
test
add
les
outsl
orl
fdivs
lock
rolb
imul
pushl
mov
repnz
jle
xchg
mov
sub
je
add
dec
outsb
sbb
movl
fistpll
js
leave
xchg
fistps
pop
not
sub
add
push
sti
mov
pop
mov
cmpsb
lock
mov
mov
dec
cld
pop
outsl
jl
cltd
sub
pop
sti
mov
jo
inc
xor
mov
cmpl
xchg
sub
aaa
dec
sbb
jae
ds
push
xor
pop
mov
or
push
ficoml
fimull
int
ljmp
sub
sahf
sub
inc
mov
sbb
jl
mov
push
push
adc
mov
jns
push
imul
push
pop
lea
es
inc
cmp
jne
movsbl
mov
movb
not
sub
add
lret
popf
sahf
test
jge
adc
add
leave
cmpb
je
aaa
scas
push
es
movsb
mul
inc
imul
mov
xchg
cmp
dec
mov
push
push
xor
fldl
dec
jns
push
and
or
mov
sbb
mov
ficomps
sub
aam
lsl
jns
jg
and
xchg
inc
cs
push
sub
sbbb
sahf
or
sub
push
or
mov
dec
inc
xchg
sub
mov
and
jmp
and
or
adc
push
scas
lds
dec
inc
dec
or
add
mov
push
aad
cmpb
icebp
inc
out
jo
sbb
or
sbb
fdivs
add
xor
fld
add
ds
cmpsb
inc
sub
cmp
je
and
in
mov
pop
fldl
test
mov
ljmp
push
and
sub
outsb
xor
and
mov
rorl
jnp
int
es
sbb
cmp
mov
mov
dec
push
dec
mov
mov
pushf
test
dec
cmp
pop
pop
add
lock
push
int
cmp
pop
adcb
or
and
idivl
movb
inc
cmpsl
sbb
xchg
xchg
nop
dec
jo
inc
lock
push
jne
movsl
sub
and
test
xor
test
xor
mov
pop
je
sbb
mov
mov
jl
jmp
xchg
add
adc
or
mov
mov
aad
mov
pop
ja
clc
xor
out
jle
out
xor
mov
add
push
jno
rorb
cmpsb
push
cmp
mov
sub
inc
daa
pop
adc
ret
push
push
sbbb
flds
aam
push
adc
out
jl
sarb
cmp
arpl
add
and
dec
mov
adc
xchg
icebp
andb
dec
mov
inc
xchg
jmp
addl
xchg
mov
stos
js
sub
inc
repz
xchg
lea
lods
lret
dec
lods
sub
add
mov
fwait
push
cs
pop
inc
and
repnz
mov
roll
sahf
mov
cltd
aam
lea
mov
push
xchg
push
sti
mov
cmp
mov
cwtl
push
jno
dec
rorl
pop
clc
pop
adc
xor
xorl
adc
xchg
sub
mov
jle
or
or
push
sub
and
jle
daa
sub
cmp
fsubrs
sbb
ss
bsr
mov
xor
insl
pop
mov
lock
aaa
xlat
loope
loop
int
dec
sti
cmp
sbb
loope
je
pushf
mov
sbb
dec
pop
ret
or
aaa
adc
ficomps
div
lahf
call
jnp
xchg
jae
js
mov
test
testb
imul
hlt
dec
enter
mull
cmp
or
push
push
in
sahf
or
cld
mov
mov
xchg
sbb
mov
push
ret
mov
fbld
sti
jge
mov
test
fcomip
mov
sbb
cmp
push
pavgb
xor
cvtps2pd
hlt
and
lea
les
adc
jns
and
ret
pop
pop
add
icebp
ret
mov
or
jbe
lock
hlt
addl
push
test
subb
jne
cs
sub
adc
cmp
push
sbb
dec
adc
xor
inc
lock
ds
or
push
pop
sbb
mov
adcl
hlt
and
mov
xor
mov
insl
jne
sub
sbb
push
filds
and
xorl
and
dec
jnp
cmp
and
jmp
nop
das
int3
jge
cld
mov
cmp
sbb
hlt
and
rclb
in
sbb
dec
sbb
add
cmp
mov
cmpb
inc
nop
popa
jg
jle
push
dec
in
adc
fs
and
mov
jmp
out
ss
insb
mov
push
in
inc
pop
in
lea
adc
jecxz
jno
inc
mov
push
inc
sbb
add
push
and
cmpsl
cli
adc
pop
xor
bound
les
mov
xchg
sbb
xchg
or
adc
add
ja
cmc
aas
test
cmp
dec
cmp
sti
lods
addl
outsb
cmc
roll
or
sub
xor
testb
mov
cltd
sbb
push
in
or
cltd
nop
and
fidivrs
shl
inc
cmpb
pop
dec
mov
pop
enter
xor
xchg
out
nop
xchg
or
roll
mov
jo
adc
ja
lret
jl
jo
jmp
xchg
mov
sub
pushf
pop
mov
movsl
add
jns
pusha
push
sbb
cmp
jns,pn
inc
adc
or
dec
ss
mov
mov
iret
adc
in
or
shlb
punpckhbw
test
push
pop
enter
adcb
lock
mov
and
xor
pop
mov
inc
xor
lahf
dec
dec
sbbb
adc
push
add
and
xchg
dec
repnz
pop
push
adc
xchg
mov
loope
inc
cmp
dec
mov
outsl
add
mov
mov
sub
jb
and
pop
and
cs
mov
inc
cs
mov
repz
cld
ds
out
xor
mov
push
push
mov
or
xor
sbb
inc
pop
repnz
sub
mov
dec
mov
cmp
enter
push
cmp
jns
enter
xor
mov
idivb
and
and
loope
xchg
and
pop
xor
jb
or
add
bnd
fnstcw
cld
mov
in
and
hlt
lea
lock
inc
js,pn
fdivrl
test
mov
xchg
aam
enter
test
cmp
mov
add
int3
lods
mov
les
jns
push
mov
nop
push
and
sbb
je
fadds
adc
stos
adc
mov
cmp
lea
push
js
and
scas
mov
pop
xchg
mov
call
dec
mov
ss
sub
pop
jno
pop
test
jns
enter
mov
or
nop
xchg
or
xchg
or
clc
mov
in
xor
repnz
or
fucomip
cmp
mov
cmp
fcoms
xor
test
shl
push
mov
fcmovb
pop
xor
lds
rclb
dec
enter
nop
mov
mov
cs
insl
xor
mov
mov
jge
sbb
sbbl
test
cs
inc
es
aaa
pop
cmpb
mov
fadds
je
and
das
mov
enter
inc
pusha
pop
enter
pop
mov
dec
push
cmpsb
dec
cs
or
inc
push
mov
cmp
jb
inc
clc
sub
sub
fisubrs
or
in
push
and
das
fs
cmp
shrl
sbb
or
pop
xor
push
or
js
dec
enter
addl
jae
or
and
scas
jle
push
test
stc
repnz
std
add
xchg
lock
lea
cwtl
orl
jg
icebp
scas
mov
lret
jg
xor
cmp
pop
test
or
andl
in
movsb
test
ja
je
and
xor
and
sbb
xchg
aaa
cli
mov
sub
sub
mov
mov
rcl
fldcw
or
test
and
outsl
lea
dec
psubb
loopne
mov
pop
gs
lods
fimull
addb
imul
mov
xchg
xlat
inc
js
aam
ds
loop
scas
sbb
inc
cltd
mov
mov
lock
repnz
lea
add
sbb
scas
jnp
and
loope
adc
movsb
scas
cmp
adc
test
pop
into
mov
jo
in
stos
push
adc
sub
and
aam
inc
addb
xor
je
push
fldl
push
clc
test
ljmp
lock
les
sahf
sbb
lds
mov
pminub
dec
mov
inc
push
pop
int3
add
addr16
fsubrp
xchg
das
sbb
add
and
xor
addb
or
jg
cmp
push
and
jp
mov
add
sbb
mov
mov
int3
adc
and
cmp
scas
int3
scas
push
xchg
push
dec
add
push
fsubs
cmpsl
je
xchg
add
adc
inc
jnp
jl
add
add
daa
nop
add
and
add
sarb
mov
enter
xchg
or
xor
or
stos
loope
loopne
add
je
inc
mov
jns
pop
scas
sub
push
push
scas
pop
and
or
cmp
js
iret
incl
pop
test
mov
mov
and
xor
sbb
add
sub
and
leave
or
in
and
and
sbbl
adc
test
xchg
jo
xchg
pop
xor
out
pop
add
and
mov
xor
test
daa
lock
push
in
mov
in
push
in
loopne
fs
or
fadd
sbb
aam
int3
cs
test
sbb
lods
pushf
mov
sbb
mov
orl
in
cmp
mov
test
pop
xor
jno
dec
sbb
mov
and
jb
int3
pop
mov
andb
lea
aas
js
and
cmpl
and
adc
inc
cs
sub
dec
dec
enter
adc
inc
push
xor
call
dec
add
pop
lods
idiv
push
dec
les
in
in
jbe
daa
insb
add
push
pop
sbb
inc
pop
mov
push
and
add
adc
add
in
pop
jp
fsubrs
dec
repnz
mov
sub
enter
or
test
out
in
push
fsub
dec
push
fsub
xor
data16
stos
mov
xor
test
add
dec
call
nop
adc
test
lods
adcl
mov
enter
fadds
in
dec
pop
cmp
int3
and
leave
or
shlb
mov
and
cmp
pop
cmp
mov
push
cmpsb
or
sub
nop
nop
adc
in
incb
mov
test
je
pop
xor
xchg
jo
inc
dec
pop
enter
pusha
rorb
in
pop
test
inc
cmp
scas
and
adc
fbstp
xor
sbb
test
push
pop
adc
mov
int3
aaa
leave
sub
xor
insl
pop
movsl
aad
adc
bound
mov
xor
loopne
lock
data16
push
adc
xor
mov
test
xchg
dec
xchg
sbb
mov
xor
xchg
sbb
or
xchg
fcoml
add
jns
xor
imul
mov
mov
push
mov
add
stos
fldt
jne
aas
adc
mov
mov
mov
sbb
pcmpgtb
stos
mov
xchg
ret
or
cmpsb
add
push
xor
outsl
sub
out
and
push
lock
push
push
sbb
int3
or
mov
es
in
add
dec
enter
sbb
cmp
sub
insb
and
mov
inc
sub
frstor
xchg
sbbl
dec
push
cmp
dec
xchg
cwtl
jns
roll
dec
es
rcrl
insb
sub
push
aas
xor
dec
stos
or
in
adc
or
mov
inc
fucomi
or
add
pop
popa
bound
repnz
filds
dec
dec
mov
call
out
pop
pop
addl
mov
pop
mov
fstps
push
mov
dec
adc
inc
cmp
int
and
and
push
adc
adc
jns
sar
xor
push
pop
xor
add
imul
aaa
adc
outsb
inc
ljmp
mov
push
add
inc
sub
popf
inc
dec
shrb
les
xor
lods
ret
ja
stos
sbb
and
xchg
sub
subl
mov
sub
lcall
icebp
subb
icebp
push
icebp
cmpsb
sub
insl
mov
gs
imul
jo
aam
fiadds
stc
mov
cld
gs
jns
cmp
adc
pusha
cli
fwait
jl
mov
mov
mov
inc
insb
pop
jmp
mov
mov
push
inc
dec
push
xchg
dec
push
inc
aam
push
insl
icebp
mov
into
je
sub
pop
pusha
inc
dec
mov
sub
mov
cmpb
fdivrl
push
mov
bound
sbb
insl
dec
jae
mov
push
js
cmova
pop
nop
xor
inc
push
sbb
stc
fwait
pusha
daa
ds
sbb
ret
add
cmp
xchg
stos
or
loopne
sahf
adc
xchg
mov
mov
sbb
mov
or
pop
adc
shll
mov
das
xor
data16
jnp
adc
lea
movsb
rclb
inc
imul
mov
jg
and
fildl
adc
fucomip
sbb
push
enter
leave
cmp
mov
mov
xor
jl
add
pop
sti
mov
je
cmpb
je
sub
dec
mov
js
or
xlat
pushf
xchg
test
addb
add
mov
fmuls
mov
dec
cmp
adc
mov
push
pop
sbb
pop
es
pop
push
jge
jo
ja
add
mov
and
imul
and
adc
sbb
mov
or
incb
jle
xor
inc
inc
mov
std
xchg
nop
dec
xor
pop
mov
jle
clc
jbe
inc
mov
ss
cmp
inc
das
xor
mov
jl
cwtl
ret
mov
int3
push
stc
xchg
fstl
clc
ret
mov
add
push
xor
adc
xchg
dec
adc
or
cli
jg
adc
cmpb
jne
push
jmp
mov
enter
cmp
popl
test
or
sahf
xchg
add
adc
outsb
xor
out
and
nop
mov
sub
sbb
arpl
sti
js
sbb
push
leave
sub
cwtl
sti
sub
dec
inc
or
outsl
xchg
pop
out
cmp
mov
icebp
mov
adc
push
mov
fcoml
cmp
add
cmp
mov
xor
xor
rol
rcrb
jae
cltd
xor
dec
cs
cld
aad
shll
les
or
cwtl
outsl
shll
fcomi
mov
in
dec
or
pop
stos
jae
int3
cmpb
jae
pop
sbb
mov
push
xlat
mov
push
sbbl
xor
pop
mov
ss
jb
es
push
push
enter
mov
jp
cmpsl
testl
push
in
fdivrs
insb
sbb
mov
add
jo
stos
jle
or
jnp
xchg
push
ret
mov
mov
or
jo
test
das
pop
repnz
cmpsl
in
dec
and
aaa
int3
mov
cmp
cld
cmp
cmp
sub
ljmp
repnz
adc
loopne
icebp
xchg
das
and
dec
aam
fiaddl
repnz
out
dec
fmul
pop
adc
mov
add
js
jnp
push
mov
push
cmpsb
adcb
mov
in
xchg
inc
and
repnz
icebp
scas
nop
pop
jb
jl
repnz
cmpsl
popa
and
and
or
adc
ljmp
sbb
notb
mov
add
adc
jl
ljmp
idivb
inc
push
pop
push
jg
arpl
push
movzbl
iret
mov
cld
repz
rorb
divb
rclb
push
jns
push
or
sbb
andb
in
cld
repz
dec
call
pushf
nop
movsl
enter
xor
in
in
in
jns
jne
test
shlb
das
mov
jb
adc
cmc
push
dec
scas
nop
pop
enter
nop
adc
aam
cmp
mov
test
loop
loop
jo
jnp
and
sub
xchg
mov
jecxz
xor
cmp
push
or
inc
push
xlat
xor
sub
loope
inc
imul
imul
add
popa
inc
pusha
sti
scas
aaa
xchg
js
jb
mov
shl
add
in
in
push
dec
lds
aas
test
fbstp
sub
dec
xchg
in
mov
cmp
enter
push
mov
ret
orb
adc
sub
and
or
iret
sub
addl
negb
test
mov
int3
sub
and
xchg
xchg
ficomps
stos
dec
jns
jmp
xchg
movsb
pop
call
cmp
insb
test
movsl
movsl
inc
xorl
jae
hlt
std
jmp
dec
dec
dec
and
jo
push
repnz
xor
lods
ss
sub
jbe
inc
adc
test
or
xchg
sbb
pop
sbb
bound
jecxz
sub
xchg
xchg
and
mov
sbb
inc
ret
mov
sbb
lock
pop
cwtl
popf
and
jg
in
loopne
mov
xchg
sbb
mov
lock
in
test
repnz
sub
movsb
rorb
es
in
shlb
jmp
std
mov
std
shlb
or
and
aad
out
and
sub
fdivs
popa
xchg
jle
scas
push
push
push
xchg
or
addl
ja
lea
jo
negb
loopne,pn
or
xor
xor
add
xchg
test
and
cmp
sub
push
popa
sbbb
scas
insl
movsb
push
imul
add
push
xchg
neg
ret
imul
lea
push
lods
push
sbb
adc
dec
pop
cmovp
lret
mov
dec
push
faddl
fsubl
in
or
xchg
nop
leave
rcr
or
add
xchg
test
mov
stos
xor
lock
mov
data16
mov
add
sub
pop
cmp
jle
add
inc
xchg
or
inc
sbb
minps
sub
push
ret
lcall
mov
pop
loop
add
mov
pop
sub
add
popf
inc
js
push
pop
xchg
popa
sub
movsl
push
lea
out
imul
push
add
dec
adc
movb
insl
aad
cmpsb
dec
int
jmp
add
jecxz
add
nop
inc
rcrl
xchg
rclb
mov
add
sbb
xchg
cmp
and
subb
pusha
push
xchg
or
pop
add
pop
bswap
addl
sbb
jmp
or
lock
movsb
mov
in
fistpl
dec
xor
int
mov
lret
lds
cwtl
add
xchg
sub
jne
or
shll
mov
inc
xor
iret
cmp
ret
inc
adc
mov
adc
pop
test
inc
or
sbb
sub
aad
lea
enter
fisubrl
add
sbb
insb
pop
fsubrl
mov
and
inc
jns
adc
repz
cltd
mov
nop
daa
pusha
mov
and
pop
or
cli
push
ret
mov
push
je
push
imul
push
jno
cmp
lock
xor
push
test
fwait
sub
and
jge
sub
xor
push
add
xor
jnp
jne
aas
mov
dec
push
cwtl
stos
sbb
xchg
out
xor
addr16
repz
jnp
inc
mov
inc
mov
and
fsubs
adc
mov
flds
xor
out
inc
dec
push
and
inc
fwait
nop
pop
fiaddl
add
pushf
pop
rcrl
dec
out
mov
jbe
and
xchg
pushf
mov
add
lret
in
mov
sbb
leave
outsb
ficoms
into
or
adc
mov
xor
jmp
inc
mov
adc
adc
sbb
and
xchg
xor
adc
daa
out
stos
stc
adc
mov
pushf
inc
push
enter
jmp
mov
pop
dec
sbb
clc
xchg
xchg
push
pop
sbbb
inc
nop
pop
mov
aam
int
or
int3
jmp
jmp
add
loop
repnz
add
roll
push
cmp
inc
lods
mov
sub
mov
dec
or
loop
dec
test
add
pop
xorps
dec
and
mov
mov
or
sbb
nop
sub
rcll
adc
push
daa
test
das
adc
push
sub
push
mov
mov
stos
fcomps
loopne
add
jns
xchg
push
je
mov
call
mov
jg
lahf
dec
pop
adc
cmp
ret
insb
cmp
test
mov
jo
nop
mov
push
movsl
mov
mov
mov
addr16
jbe
push
and
loope
fdivrs
push
pop
mov
jl
push
and
test
xor
inc
jo
js
mov
les
dec
sbb
mov
jmp
push
mov
jne
mov
ret
cmp
sub
aam
aam
pop
or
daa
inc
adcb
jb
pop
jmp
adc
push
and
fists
mov
jo
call
rcll
jns
test
and
or
in
or
adc
test
jno
xchg
inc
sahf
sub
lea
ss
and
insl
imul
test
add
add
out
add
pushf
out
inc
lahf
popf
pop
les
pop
mov
lods
sti
push
cwtl
or
mov
or
add
sbb
xchg
out
mov
xchg
ja
xchg
push
enter
sahf
sub
mov
je
pop
fcomps
inc
adc
push
shrb
test
mov
lods
mov
testb
push
pop
and
sub
pusha
dec
inc
aaa
sarb
jbe
xor
cmc
insb
mov
cs
or
repnz
repnz
cmp
or
repnz
test
nop
testb
add
add
xrelease
hlt
repnz
fs
imul
xor
adc
or
aam
pop
or
adc
mov
scas
sbb
jo
sub
or
data16
inc
jbe
je
jno
jmp
js
pop
sub
sbb
sarb
lock
les
push
and
push
adc
push
and
cmpsl
or
jmp
push
adc
sub
ds
lock
in
push
sub
xor
fsub
adc
pushf
push
push
xchg
jecxz
mov
mov
pushf
or
enter
pushf
rcl
mov
xor
adc
mov
xor
xchg
xor
dec
ret
leave
cli
adc
lods
test
mov
jae
sbbl
adc
xorl
mov
and
xchg
pop
orb
jb
fwait
or
mov
push
jmp
add
leave
cld
test
xchg
jae
imul
dec
adc
lret
sbb
push
ret
std
mov
or
movsl
cmp
sbb
or
iret
sub
nop
cld
stc
sahf
adc
dec
xor
add
xchg
sbb
pop
sub
cmpb
movb
out
jo
jb
lea
mov
sbb
test
sub
jecxz
mov
sbbl
jg
dec
jmp
mov
addl
push
subl
lret
adc
pop
sbb
dec
fwait
xchg
cmp
or
pop
xchg
cmpsl
and
xchg
pop
fisubrs
adc
xor
add
jns
sub
inc
ds
bound
test
ljmp
sbb
xor
cs
leave
xor
pop
pop
adc
cmp
sti
test
cmpsl
pop
popa
and
popf
inc
or
call
add
and
jae
fwait
sbb
or
inc
leave
adc
add
in
jecxz
loope
mov
xchg
sbb
add
es
cltd
and
insl
mov
jnp
and
shlb
daa
mov
sahf
and
mov
xor
lods
jmp
xorb
js
push
inc
movsb
push
push
mov
inc
je
enter
xor
inc
add
sbb
test
ds
mov
push
dec
sbb
dec
lcall
lock
cmp
fwait
add
lea
mov
or
ret
mov
adc
mov
lret
jmp
jecxz
rorl
sbb
xor
jbe
std
or
mov
mulps
pusha
pop
xchg
cltd
idivl
movsl
mov
push
pop
pop
add
int
outsl
cmp
adc
enter
push
loopne
pinsrw
inc
stc
sbb
lea
lea
push
jl
ucomiss
cmp
out
inc
rolb
or
js
and
or
inc
add
cs
mov
push
mov
or
movsl
addl
inc
and
push
push
inc
jne
cs
les
inc
sub
xor
mov
xchg
sbb
mov
adc
inc
push
imul
mov
test
inc
orl
push
pop
xchg
push
mov
cmp
fs
std
push
lea
cld
cltd
arpl
xlat
pop
pop
xor
add
ja
lahf
cmp
jne
data16
ret
jmp
shll
pop
sbb
test
push
and
es
push
ja
xor
jecxz
sbb
cmpb
loopne
xor
in
cld
les
push
inc
filds
jmp
mov
iret
xchg
lods
inc
fsubl
xchg
bound
mov
mov
add
inc
mov
ret
mov
imul
and
cltd
leave
clc
add
or
mov
lea
setl
inc
sub
dec
push
clts
push
xchg
jns
xor
add
xor
pop
lea
mov
add
out
sub
jecxz
jmp
str
inc
dec
test
xchg
sbb
loop
and
and
lea
cmpsb
sub
data16
dec
pop
xor
inc
pushl
add
mov
sub
subl
or
jae
sbb
xchg
mov
mov
movsl
dec
daa
loopne
popa
test
mov
popa
movsb
ja
and
and
lods
add
scas
sti
fs
push
inc
sbb
sub
cmp
adc
or
adc
and
add
push
outsl
mov
jl
inc
outsb
daa
mov
pusha
cwtl
adc
xor
xor
mov
push
adc
cmp
mov
xor
jne
and
cmpl
loope
cmp
xchg
sbb
pop
pop
sub
mov
cmpsb
sub
insl
pop
insl
lods
and
loopne
add
hlt
xchg
sbb
xchg
xchg
push
ss
in
dec
xchg
and
scas
or
pushf
sub
jecxz
loopne
push
pushf
cmp
cmp
push
push
xchg
fdivs
push
cmp
shll
push
test
push
jle
mov
loop
stos
push
std
mov
mov
flds
jl
mov
std
aad
fs
and
or
in
idivl
incl
test
jle
jg
adcb
cmp
jl
add
lock
sahf
add
idivl
lahf
mov
test
loopne
push
cmpsl
jns
and
rcll
sbb
movsl
stos
leave
int
cwtl
pop
adc
stos
dec
insl
dec
test
adcb
enter
mov
mov
xchg
cmpsl
xor
mov
or
daa
cmpl
add
test
adc
add
ret
ret
jl
mov
sbb
dec
or
mov
jge
pop
jne
mov
jne
lahf
repnz
out
mov
adc
out
jl
mov
test
push
int3
adc
push
testl
icebp
add
cmp
dec
mov
loopne
push
inc
out
push
push
fmuls
xchg
mov
sbb
inc
sbb
aaa
popa
testl
jbe
insl
and
jnp
pop
xor
movsb
xor
cmpl
test
lret
jp
je
lea
xor
mov
mov
imul
or
and
add
and
adc
push
add
call
xchg
lock
adc
and
pusha
sub
pop
pop
ret
xchg
cmp
cwtl
sub
or
push
enter
inc
or
mov
rorb
jbe
divl
call
jbe
inc
jns
pop
or
lea
outsl
clc
aaa
adc
add
xchg
pop
push
push
jbe
je
push
stos
or
inc
je
pop
je
jne
jnp
jecxz
add
and
in
pop
add
xor
out
les
adc
dec
cmp
repz
mov
fld
lret
test
enter
stos
pop
cs
mov
rcll
gs
pop
cmp
nop
pop
inc
push
xor
add
adc
jne
cli
xor
mov
lea
jecxz
add
scas
js
jbe
ret
pop
pop
add
test
jne
inc
mov
jle
jb
add
add
in
mov
xlat
dec
fimuls
or
pop
shlb
pushl
sub
jbe
mov
shr
cmp
or
lock
fldl
inc
jns
ret
mov
sub
call
add
add
sbb
pusha
rdpmc
leave
sub
sahf
std
sbb
add
xor
xchg
fwait
or
inc
fldpi
adc
in
mov
or
ja
xchg
add
inc
adc
adc
lods
iret
or
jmp
sub
inc
cmpb
divb
cld
adc
pop
and
inc
adc
popa
push
or
mov
xor
mov
inc
cmp
jb
inc
enter
xor
cltd
les
syscall
ljmp
jl
jmp
xchg
testl
dec
cmp
sub
andl
int3
iret
sbb
cld
andb
int
pop
push
cltd
push
icebp
add
imul
xchg
loop
lcall
or
sub
and
in
adc
enter
js
cmpl
xchg
test
loope
cwtl
loope
add
xor
cmp
mov
push
or
push
shlb
ss
push
xchg
jge
gs
lea
repnz
neg
mov
inc
mov
sub
mov
cltd
or
push
sarb
sbb
xchg
xchg
ret
or
sbbl
xchg
xor
inc
mov
std
inc
stos
mov
pop
mov
pop
pop
push
or
adc
iret
xorb
test
inc
outsl
loopne
push
push
push
add
xchg
push
dec
lret
mov
rolb
jne
add
or
ds
subb
lret
xchg
inc
es
push
andb
in
adc
out
notl
rorl
dec
jmp
cmp
inc
pop
xor
sbb
mov
je
inc
inc
inc
testl
and
inc
adc
add
sub
sub
xchg
sbb
xor
cmp
xchg
jl
sub
push
push
push
daa
test
sbb
mov
adc
mov
sbb
pop
mov
xchg
mov
mov
aas
cmp
decl
adc
std
pop
cmp
je
or
je
pop
dec
cmp
add
inc
setg
sbb
addr16
inc
xor
mov
or
in
jle
adc
sub
xor
dec
in
inc
mov
mov
movsb
jmp
mov
bnd
pop
call
jne
adc
inc
test
aaa
dec
das
subb
femms
fadd
mov
and
fwait
or
jge
inc
cmpb
sbb
inc
repz
cs
or
sti
pop
jne
cmp
out
dec
push
dec
jno
sbb
add
decl
sbb
pop
je
mov
insl
xchg
mov
mov
cmp
jl
cmp
jg
mov
cld
and
hlt
dec
cmp
jne
ret
inc
incl
push
out
cltd
or
clc
dec
ljmp
stc
cmp
mov
mov
leave
or
sbb
sti
cmp
jmp
mov
cmp
or
sub
adc
cli
cmp
cmpsl
inc
rdpmc
mov
mov
in
loop
ja
clc
jmp
inc
mov
leave
jecxz
and
adc
lods
bound
or
mov
push
inc
cmp
pop
out
mov
dec
iret
jmp
pusha
je
sbbl
jl
mov
add
jp
push
mov
in
sti
or
ffreep
jne
outsl
mov
mov
jge
pusha
in
int3
add
in
test
imul
jl
js
jge
test
inc
pop
inc
loop
mov
jne
lahf
mov
add
xor
jo
loopne
ret
jmp
jle
je
mov
dec
pop
test
je
test
in
lret
or
iret
dec
jmp
sub
jmp
or
jmp
sbb
add
adc
cltd
decb
shr
jne
jmp
mov
inc
shlb
pop
inc
dec
je
ss
daa
ret
cmp
xor
out
cs
data16
add
cvtdq2ps
daa
clc
scas
fstpl
daa
push
adc
adc
addb
aas
loope
mov
add
ss
fidivrs
test
je
test
mov
mov
mov
fstpl
mov
pop
xor
jecxz
roll
scas
mov
mov
loop
push
lock
push
sbb
mov
js
arpl
xchg
inc
js
cmp
lods
mov
cmpsl
push
or
or
push
scas
inc
cwtl
jecxz
icebp
neg
dec
mov
std
adc
pop
xor
clc
jecxz
in
je
sbb
mov
pop
int
outsl
jmp
out
pop
jl
push
xor
and
and
xchg
das
dec
mov
iret
aaa
je
mov
imul
pop
cli
mov
std
jmp
lcall
cmpsb
gs
dec
jo
fcmovnbe
cmpsb
call
roll
pusha
jne
inc
cmp
xor
hlt
and
shrl
mov
add
cmp
jbe
inc
jb
aas
push
dec
adc
and
stc
or
mov
and
dec
dec
fs
in
lret
ret
add
pusha
dec
imul
jl
lea
push
fmull
or
shlb
pop
icebp
mov
mov
or
pop
fcompp
add
int3
mov
dec
lea
dec
add
mov
and
add
inc
mov
push
in
mov
or
push
and
sbb
ss
rcll
add
dec
mov
shll
in
call
xor
lock
hlt
clc
clc
or
fbstp
cld
lea
add
adc
lcall
insb
andb
mov
nop
cmp
and
pop
xor
and
arpl
lea
jl
xchg
or
cmp
jmp
je
cld
out
loopne
rcll
test
dec
js
ficoml
pop
nop
clc
push
sbb
inc
push
fildl
pop
repnz
filds
dec
mov
lods
mov
jae
mov
cli
push
lds
dec
dec
push
cli
xor
dec
pop
add
mov
cmpsb
xchg
mov
or
push
movsb
lods
adc
cmpsb
imul
sbb
sbb
adc
xor
shll
adc
or
dec
rorl
add
xchg
pop
pop
mov
push
or
sbb
mov
lret
lds
add
pop
push
or
sub
daa
outsl
out
pop
jbe
sub
or
adc
sar
add
sub
clc
adc
shlb
jge
shll
loope
cwtl
add
icebp
in
add
pop
and
pusha
aas
add
rcll
cld
addl
and
pop
sahf
dec
add
int
xor
je
jmp
lea
mov
sub
ret
adc
std
xor
jg
or
stc
inc
das
push
cmpsb
push
sbb
dec
mov
push
cmp
ret
sub
sarl
fidivrl
enter
cmp
lret
je
rep
je
jo
add
inc
dec
sarl
aaa
adcl
mov
pop
std
scas
adc
dec
dec
mov
jae
mov
mov
sbb
add
ja
testl
movd
or
push
lret
mov
mov
and
adc
xor
icebp
xchg
movsb
testb
pop
xor
daa
cmp
pop
loop
addr16
push
inc
inc
jmp
dec
pushl
hlt
sub
jl
andb
and
cmp
cmp
outsb
je
daa
addr16
fiadds
lds
stc
enter
or
mov
cmp
push
pop
insl
or
ljmp
sub
dec
jo
jae
jle
pop
adc
movsb
flds
mov
shr
push
adc
stos
js
mov
or
fistl
cmp
mov
xor
in
xor
xchg
cmp
jmp
icebp
mov
or
lret
outsb
loop
ss
es
dec
push
adc
inc
ja
lret
dec
mov
sub
and
lock
and
iret
pop
leave
adc
stos
dec
mov
jae
adc
daa
jp
add
xor
ret
mov
add
or
cmp
and
pop
aas
dec
cmp
sbb
adc
stos
add
xor
jp
aaa
in
nop
sbb
shl
inc
ret
pop
xchg
das
add
ds
insl
mov
inc
pusha
loopne
add
xor
lret
xchg
add
add
xorl
or
movsb
cmp
insl
xchg
xor
cmp
push
movl
pop
jl
jmp
testb
add
shrb
je
push
sbb
add
pop
inc
aad
add
and
or
aas
orl
pusha
jg
push
pop
pop
cmp
mov
test
mov
add
mov
movsb
push
rorl
loop
mov
or
sar
jno
cmp
jb
mov
das
sub
lret
inc
and
sbb
jae
pop
push
jl
mov
test
pop
shl
fisttpll
ret
lods
xlat
ret
divl
jae
scas
movb
cmpsl
scas
aad
cwtl
add
test
cld
mov
adc
mov
clc
dec
jp
push
xor
leave
in
mov
push
je
adc
fdivrl
xor
xchg
xor
or
pop
mov
xor
pop
mov
cmp
jb
sub
xchg
sub
rcrb
push
inc
js
and
sub
sbb
sbb
mov
addr16
push
loopne
mov
ret
mov
je
mov
adc
leave
rorl
je
cli
ljmp
leave
movsl
push
sub
sbbb
dec
mov
scas
pop
cmpsl
jo
sbb
add
mov
movsb
mov
xchg
jl
aaa
out
dec
and
adc
lods
hlt
push
adc
enter
or
fnstcw
clc
mov
cmp
fs
add
loope
rcrl
cmpsl
xchg
xor
sub
jge
or
push
scas
jl
jmp
push
addr16
mov
pop
add
std
mov
inc
jmp
sub
adc
out
mov
push
sbb
xor
xchg
fmulp
aam
push
jo
std
sub
lea
pusha
jmp
cmp
mov
jne
pop
movsb
push
smsw
inc
nop
pop
jg
icebp
rcll
mov
icebp
arpl
imul
clc
sarb
je
repz
cltd
push
sahf
aad
or
les
jne
lea
mov
das
sub
add
mov
les
mov
mov
fndisi(8087
and
mov
push
cmpb
ffreep
or
fwait
xchg
adc
ret
push
dec
cwtl
or
jle
push
mov
jae
sbb
adc
or
shrb
add
rcl
push
int3
out
jge
fstl
add
and
lret
cli
jl
pop
pop
test
jp
jp
dec
inc
sbb
je
push
or
ds
dec
xor
pop
and
hlt
pop
or
cmp
push
sub
pop
add
mov
daa
or
push
mov
mov
repz
mov
sub
loope
or
or
sti
push
cmp
push
dec
ret
pop
cmp
sahf
ret
addr16
cmp
jae
mov
fcmovb
jne
jb
jne
or
pop
cmp
jbe
cltd
test
jge
or
scas
sbb
icebp
mov
adc
or
add
mov
or
mov
rorl
mul
dec
xchg
les
add
dec
sub
lods
rolb
test
adc
jne
and
jmp
sbb
jg
aam
sbb
testb
pop
and
pop
adc
lcall
fstps
leave
neg
daa
mov
mov
mov
add
ret
clc
or
mov
xor
and
sub
and
cmp
or
push
lret
mov
ljmp
ret
sbb
rcl
dec
repz
and
not
xor
mov
mov
add
jmp
loopne
xor
add
cmpw
cmp
out
mov
aas
pop
jmp
outsl
sbb
loop
out
jne
mov
mov
push
push
xchg
mov
sub
repnz
pusha
loope
jg
dec
out
add
inc
sub
stos
lock
cmp
mov
jg
jle
xchg
testl
adc
stos
out
arpl
sbb
mov
or
ljmp
pop
sarb
mov
test
add
mov
add
imul
or
sub
add
inc
adc
sbb
outsb
mov
cli
sar
int
and
enter
dec
push
pushl
icebp
push
xor
popa
sub
jle
add
hlt
shrb
fisttps
dec
mov
adc
cs
mov
pop
or
pop
dec
mov
ja
push
ds
mov
sub
rcll
subb
fldl
or
push
loop
shrb
mov
sub
or
jmp
int
aaa
push
sub
jne
jmp
test
cld
xor
ret
cmp
inc
dec
adc
cld
inc
icebp
add
push
or
lods
sbb
xor
lds
lret
and
push
jns
push
xchg
fisttps
std
jmp
cmp
mov
sub
out
pop
out
pop
cltd
push
jae
adc
xchg
loope
daa
aam
jno
mov
adc
loop
dec
sbb
jne
jbe
pop
or
push
add
mov
stos
push
pop
mov
mov
arpl
incl
popa
and
shr
shl
lea
or
sbb
repnz
ret
adc
adc
mov
dec
lock
pop
push
shl
shr
mov
test
je
pop
out
aaa
add
inc
jmp
mov
inc
adc
inc
push
lock
push
sti
dec
pop
shl
dec
shll
pop
inc
and
xor
cmp
and
pop
adc
pop
pop
cmp
outsl
mov
mov
xor
pop
mov
and
push
mov
jne
push
inc
shrl
addr16
push
test
or
decb
jmp
add
mov
les
stos
pop
movsb
push
icebp
push
js
test
and
popa
jae
out
xor
push
inc
jmp
xchg
jle
mov
adc
es
aam
mov
scas
mov
mov
xchg
cmpsb
mov
xchg
cmp
ja
insl
jae
std
je
dec
dec
not
cltd
pop
enter
xchg
cmc
fucomip
and
xchg
fnclex
ret
ret
mov
sub
fincstp
add
lods
xchg
adc
sahf
out
ficoms
cwtl
xor
xchg
inc
cmp
cmp
sub
pop
jb
sbb
sub
sbb
jl
or
cmp
jmp
inc
pop
xor
jg
shr
rcr
shr
rcr
or
jne
div
mov
shr
fs
je
out
shll
cmp
or
mov
jbe
dec
cltd
xlat
xchg
push
frstor
notb
fdivl
push
sub
sbb
mov
enter
adc
push
lock
sbb
or
sub
and
jecxz
mov
push
or
sbb
addb
pop
sti
mov
stos
dec
push
sbb
mov
cmp
mov
sbb
sbb
jo
pusha
dec
sbb
adc
or
push
mov
jmp
fstps
sbb
dec
fcomi
sbb
arpl
dec
nop
mov
shll
fs
push
mov
into
xor
ret
test
icebp
sub
mov
xchg
cmpl
jo
sbb
adc
mov
shl
jg
jle
clc
lahf
push
add
fistps
and
xchg
jle
cmp
mov
and
cwtl
ret
mov
gs
adc
clc
or
int3
arpl
andb
add
pop
jmp
sbb
or
adc
mov
xor
xchg
push
jge
and
ja
adc
or
fwait
dec
sub
arpl
sarl
cmp
cs
xchg
push
int3
xor
push
inc
dec
jb
cmpb
jne
daa
adc
jecxz
out
push
adcl
xchg
inc
andb
inc
insl
icebp
push
lcall
or
and
pop
pop
loopne
push
sbb
testb
rcll
stc
das
or
in
test
pop
je
jne,pn
add
js
add
lea
or
iret
loope
jo
mov
cld
sub
cmp
imul
inc
pop
pop
pusha
adc
lds
pop
xchg
sub
mov
and
cld
je
cmp
jb
jge
orl
adc
push
push
fidivrl
jae
push
sub
dec
lock
shll
lea
pop
sub
inc
sbbb
push
aas
stc
sbb
sub
push
adc
sub
sbb
push
sbb
sahf
push
mov
sub
sub
push
jne
pop
fsubp
ja
xor
pop
rolb
and
dec
shl
inc
inc
jne
xor
addl
cld
dec
sti
gs
cmp
push
cltd
jae
cwtl
cmp
inc
sbb
inc
ja
pushf
and
pop
inc
push
nop
lea
test
jne
cmp
inc
fcomi
loopne
ret
aad
jmp
xchg
pop
fists
inc
dec
imul
inc
adc
adc
aam
shl
cmpsl
add
add
ret
cmp
fisubs
adc
pushf
push
cmpsb
push
pushf
push
jae
mov
out
add
dec
movsb
push
nop
sahf
inc
jne
inc
in
jb,pn
jmp
push
movsb
mov
jmp
subl
push
movsl
jne
pusha
popa
push
add
pusha
xor
addl
pusha
cmp
adc
push
popa
sbb
push
sbb
outsl
push
push
dec
add
ds
and
cmp
aad
push
rcl
push
in
jne
cld
inc
inc
repnz
jg
xchg
sub
xlat
stc
je
test
cmp
mov
cmp
jne
inc
inc
dec
je
adc
jne
mov
mov
jg
mov
call
push
loopne
mov
repz
je
mov
mov
dec
adc
cmc
in
sub
adc
ljmp
add
sbb
imul
sha1msg2
sbb
out
jne
lock
and
cmp
dec
out
popf
clc
mov
pop
ret
pop
lea
sub
add
jg
add
das
je
mov
inc
cmp
je
add
push
push
in
or
push
adc
jecxz
push
adc
popf
scas
les
xor
aam
xor
fists
xlat
jne
and
push
gs
lock
addr16
jne
adc
mov
loopne
jl
fdivs
out
cmp
xlat
dec
ror
cli
mul
out
and
faddl
int
jo
aam
xchg
pop
arpl
outsb
or
add
jae
add
orb
data16
jg
ss
jg
dec
mov
js
mov
stos
add
mov
jmp
imul
mov
add
daa
push
pop
or
jnp
cmp
cli
adc
add
hlt
pop
pop
lods
add
das
add
jmp
aas
test
or
or
shlb
popf
push
sub
mov
outsl
ds
je
rorb
out
fisttpl
sbb
pop
or
or
lret
push
sub
jo
not
inc
sarb
imul
pop
shl
popf
xorb
and
fimull
aaa
push
xchg
out
mov
or
mov
mov
sub
das
insb
sub
pop
pop
cmp
and
inc
rolb
cmpsl
aam
or
mov
cld
je
xchg
mov
popa
clc
adc
cmpsb
cmc
stc
or
sbb
pop
xchg
mov
out
cmp
cmp
xor
popa
pushf
pushf
pop
adc
les
adc
mov
ss
dec
aam
xor
pop
lods
adc
repnz
cmp
test
popa
jmp
add
data16
js
ficoms
das
fcmovnbe
dec
or
xchg
es
popf
pop
pop
xor
and
or
test
inc
cld
xor
and
or
sub
stos
fwait
test
or
mov
sbb
or
push
je
test
js,pt
stos
ret
push
push
mov
dec
rcl
sbb
pop
jle
mov
sub
clc
rorl
clc
sbb
jg
sar
lret
sar
and
imul
ds
and
mov
cli
sti
in
rcr
testb
dec
mov
arpl
inc
mov
dec
or
xor
mov
push
pop
cmp
pop
int3
push
movsl
add
cmpsl
sbb
or
cmp
sbb
or
jle
and
gs
nop
xor
sbb
popa
loopne
pop
inc
incl
in
mov
push
cmp
lock
or
call
cmp
jl
and
js
push
outsl
hlt
and
in
mov
test
out
xchg
add
pop
jnp
fadds
ja
insb
dec
sub
fidivrl
xchg
xchg
int3
add
lret
mov
cld
fsubl
ffreep
add
cmp
add
je
fcoms
sbb
cmp
or
add
and
enter
add
sub
enter
int3
xchg
pop
test
cmpl
adc
cmp
daa
movsl
cmovne
shr
jmp
mov
push
lock
adc
lea
insb
imul
or
and
cmpsb
loopne
sahf
sub
adc
call
jne
cmpb
jne
inc
inc
dec
push
xchg
lea
ja
inc
cmp
dec
jecxz
sbb
rcrl
pop
popa
cmp
cmc
shll
xor
sbb
cmp
push
test
pusha
je
out
dec
cs
inc
adc
jo
insb
clc
test
jno
testl
pop
orb
sbb
jp
xchg
pop
pop
inc
adc
loope
mov
shll
jae
mov
and
testl
rolb
cld
mov
lret
jmp
inc
int3
add
ret
aaa
es
lea
int3
roll
push
insb
andl
pop
fwait
sbb
push
aaa
lock
test
lea
mov
les
jg
xchg
call
or
stc
call
pushf
movsl
pop
and
mov
mov
orl
xor
dec
lock
or
add
mov
rcrb
jl
or
movsl
push
fdiv
cmp
and
pop
sbb
sub
lock
inc
or
mov
fistpll
lock
inc
cld
sbb
push
nop
adc
lods
insb
cmp
sbb
dec
xchg
fistpl
add
imul
pop
and
les
adc
sub
mov
jne
je
mov
ret
dec
pop
sahf
pop
rdpmc
imul
in
jae
fimuls
std
data16
out
aaa
inc
mov
leave
or
cmp
mov
mov
push
add
icebp
dec
dec
push
data16
cld
or
jnp
fwait
out
stos
and
pop
mov
or
out
inc
ljmp
mov
jmp
inc
or
test
jmp
das
ss
add
aas
in
mov
jmp
push
in
cwtl
inc
jno
jmp
inc
js
test
je
jne
pop
pop
jmp
jp
cmp
fidivl
inc
sub
pop
ja
pop
inc
or
cltd
jmp
xchg
jmp
mov
or
loopne
xor
xor
cli
lods
vmptrst
jl
jae
in
out
lock
add
rorb
or
mov
out
jne
and
fs
sti
aaa
iret
push
mov
or
jne
in
mov
cmc
pop
add
mov
movsb
aaa
mov
hlt
ret
leave
fsubs
push
push
cwtl
push
les
adc
out
push
add
xadd
sti
notl
cmp
jle
add
xorl
mov
sub
add
sbb
imul
cmpb
fstpl
pop
pop
jbe
add
xor
fsubs
cld
es
cld
test
es
adc
xchg
outsl
ja
jmp
pop
adc
je
and
inc
mov
jne
add
push
or
icebp
or
scas
mov
xchg
and
ljmp
sub
pop
xchg
xor
xor
inc
or
jle
pop
or
sbb
pop
mov
mov
push
inc
mov
mov
cs
dec
ret
add
cmp
add
adc
dec
inc
sbb
repnz
adc
lahf
fwait
ret
cmp
lcall
sti
xor
outsl
or
push
mov
jmp
add
push
mov
mov
std
mov
orl
pop
push
cmp
sbbl
ret
incl
pop
mov
xor
cld
push
jle
test
sbb
adc
arpl
fwait
inc
jg
mov
or
ret
dec
jno
es
js
push
movsbl
push
inc
sbb
insl
aas
pop
andb
pushf
orl
add
icebp
flds
push
cld
cmp
out
and
push
stc
jb
jmp
adc
mov
push
insl
mov
or
pushf
add
and
pop
daa
lock
std
fcomi
rorb
add
mov
aam
dec
imul
dec
addr16
fwait
inc
inc
add
or
mov
xchg
sbb
cmpb
cmp
push
lret
test
call
jne
jmp
sti
or
add
out
cmp
or
xor
sbb
add
sahf
sbb
add
sarb
jmp
gs
dec
jg
je
or
mov
je
dec
je
dec
jne
inc
jmp
cmpb
ljmp
add
jnp
jne
out
testl
inc
bnd
insl
push
je
insb
ja
or
jmp
jbe
pop
sbb
jmp
decb
sti
cmpb
hlt
loopne
stos
adc
xorb
dec
loopne
pop
add
sarl
sbb
xchg
push
cltd
cmp
pop
ljmp
xchg
add
xchg
xor
outsb
add
xchg
adc
add
or
push
fisubrl
or
adc
aaa
jno
orl
pop
push
xchg
faddl
jbe
jg
push
aad
or
fs
test
add
push
addr16
or
sbbl
and
push
incl
pop
aam
mov
pop
das
xlat
xchg
pop
add
sub
xor
mov
cmp
sub
mov
mov
jo
fstpl
dec
cmp
dec
dec
pop
mulb
add
loopne
mov
pop
cmp
adc
push
pop
mov
add
into
and
push
inc
fwait
mov
push
and
inc
add
jge
mov
inc
fldt
mov
and
xchg
test
dec
inc
mov
nop
fsubs
gs
pop
jb
sbb
mov
inc
sub
push
daa
and
fs
add
dec
adc
inc
stos
stos
shrl
push
daa
inc
mov
dec
ret
add
jbe
dec
adc
andb
data16
xor
push
out
cmp
or
push
adc
popa
or
mov
jle
ljmp
mov
ss
enter
mov
call
mov
and
out
or
mov
aas
iret
subb
push
jmp
ret
xor
icebp
pop
lret
dec
cmp
ret
inc
cmpsb
sahf
xchg
popf
cmpsl
daa
roll
jecxz
and
mov
xchg
sbb
jnp
imul
jae
add
add
shlb
pop
test
jl
js
outsl
push
pop
mov
fs
pop
jne
in
push
sar
fnstenv
pop
sub
mov
loope
jmp
pop
jo
call
lret
testl
jnp
mov
or
fs
shll
lret
mov
pop
pop
inc
cmp
mov
cmp
cmp
std
mov
shll
mov
jmp
ret
cmp
ja
gs
or
lock
inc
mov
mov
and
mov
add
aas
les
or
inc
dec
jne
xor
jmp
mov
sarl
mov
mov
cmp
add
add
or
xor
arpl
push
dec
push
push
test
idivb
jle
enter
pop
push
out
adc
pop
call
add
lret
test
je
inc
sub
ljmp
mov
movzbl
or
or
lods
cmp
mov
pusha
pop
ret
mov
add
cmp
add
add
punpckhbw
xchg
shl
push
pop
out
and
jg
lret
pusha
or
jb
lahf
aam
push
sarb
scas
add
jne
sub
dec
jmp
int3
repz
rolb
out
add
lea
cmp
idivb
dec
sub
push
and
or
and
fmuls
pop
scas
pop
sbb
push
mov
scas
lcall
sbb
jne
outsl
cmp
lahf
xchg
shrb
add
inc
aam
mov
add
xchg
negl
lea
cltd
add
adc
add
ficomps
arpl
push
sub
cld
sbb
mov
fmull
roll
lods
neg
mov
mul
xchg
je
or
sbb
mov
xchg
ljmp
add
aas
lea
shl
jmp
fwait
je
andl
add
mov
sbb
clc
lea
mov
cmp
je
neg
pop
inc
push
out
test
xchg
into
popf
sub
lock
adc
aam
or
push
stc
clc
mov
jmp
ret
repz
cmp
loop,pt
cld
or
inc
jmp
mov
add
ret
xor
je
clc
adc
dec
xchg
fsubl
sbb
enter
ret
rorb
in
pop
shrb
dec
sbb
outsb
jne
or
lock
test
pusha
movsb
pop
push
jp
lea
push
int
dec
scas
popf
mov
das
mulb
mov
sbb
mov
test
and
jmp
orb
jle
adc
popa
push
or
push
outsl
mov
xchg
out
out
pop
iret
add
lahf
xor
decl
js
mov
cwtl
enter
or
push
inc
rcrb
or
popf
rorl
push
inc
push
je
xor
push
mov
cmp
int3
add
lock
mov
jecxz
cmpl
jmp
ja
add
mov
mov
mov
cwtl
mov
add
sub
cmp
push
push
jg
sbb
pop
cvttps2pi
xor
jb
fsubr
imul
aam
dec
cmpb
xor
out
aaa
js
cmovs
shlb
lea
mov
shll
or
lock
mov
sbb
mov
subl
js
dec
dec
outsl
or
and
jmp
lods
push
adc
inc
bound
or
and
or
xor
test
push
pop
and
sarl
inc
mov
xor
mov
mov
jmp
repnz
or
les
push
lods
add
pushf
add
std
insl
cmp
icebp
mov
rolb
jecxz
mov
fistl
adc
jns
andb
outsb
in
push
or
or
mov
ret
xor
rcr
inc
sbb
in
inc
jl
sub
rorl
push
dec
mov
add
and
scas
sbb
or
push
mov
sarl
cltd
test
mov
pop
std
in
mov
shll
sub
cmp
xor
addl
adc
call
pushf
sbbl
add
sub
shr
iret
imul
mov
cwtl
jno
loop
xor
cmpsb
jle
mov
out
mov
lea
jge
addb
mov
test
call
aas
outsl
jle
cli
add
cmp
jbe
push
pop
mov
cmp
push
testl
jae
mov
jmp
dec
add
shll
pop
mov
inc
decb
jne
add
sub
lea
inc
mov
pushf
mov
pop
add
cld
loopne
push
and
push
push
lcall
add
mov
push
or
and
push
or
lea
hlt
fucomp
sbb
sub
and
sti
add
fldl
pop
cmp
jbe
and
in
sub
xchg
and
cmp
je
jmp
lret
lret
rorl
sti
sbb
ljmp
not
and
add
sub
add
cmp
ds
mov
push
xchg
fisttpl
add
push
pushf
pop
or
jmp
int
pop
roll
repnz
into
push
daa
pop
bound
outsl
or
sbb
sbbl
mov
mov
movsb
por
jae
dec
movnti
ljmp
pop
inc
pop
or
jmp
dec
adc
js
sbb
mov
push
adc
jno
adc
mov
aad
jns
push
or
mov
cli
test
or
test
loope
add
push
and
dec
or
sbb
notb
call
aas
gs
push
or
xor
mov
dec
sbb
fldt
decb
adc
inc
cmpsb
xchg
mov
and
and
fcmovu
jo
mov
adc
frstor
cmp
mov
mov
push
sub
xchg
adc
or
dec
cli
push
lea
push
out
in
aam
pxor
or
jbe
insl
or
movsl
inc
sbbl
cmp
adc
out
jne
cmpsl
popa
lret
cmp
pop
inc
mov
jmp
sar
dec
cmp
jge
add
dec
loop
clc
shr
std
loopne
push
shr
sbb
mov
mov
inc
mov
and
cmp
decb
iret
sbb
mov
cmp
jb
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmpl
repnz
out
outsb
jmp
es
ss
out
push
or
testl
jno
pop
mov
mov
cld
loop,pn
mov
cmp
aaa
jo
mov
dec
sub
pop
inc
lock
mov
adc
mov
mov
and
xchg
out
icebp
xchg
jb
inc
or
xor
xchg
test
and
cli
pop
mov
je
arpl
or
xchg
dec
pushl
jne
int
and
pop
test
jl
shl
inc
jmp
mov
hlt
insl
inc
push
stc
xchg
sub
pop
mov
cmp
push
std
add
cmp
jle
divl
or
aam
inc
dec
popa
add
popf
jge
add
shlb
cmp
mov
decb
jne
aas
add
or
push
dec
sub
adc
or
push
inc
or
movsl
pop
test
arpl
add
mov
add
sbb
outsb
jb,pt
adc
jg
hlt
mov
mov
loopne
push
push
mov
or
cmp
pop
scas
jg
decb
jge
cmp
sahf
jge
or
mov
lds
or
adc
push
or
das
push
addb
loopne
push
jnp
bound
sub
or
push
cmpsl
jg
inc
adc
add
and
cmp
inc
add
loop
jl
xor
mov
inc
mov
jne,pt
cmp
fisttpl
cmp
inc
or
popa
ficoms
add
xor
shll
mov
push
push
and
push
cmc
and
xor
adc
nop
jnp
push
sbb
mov
xor
addr16
hlt
enter
adc
jge
cmp
dec
and
inc
sbb
xor
cmp
dec
stc
dec
pop
add
js
mov
lcall
add
mov
lds
sub
rclb
xchg
jbe
mov
inc
lods
test
std
push
add
loopne
inc
mov
or
inc
pop
dec
cmp
or
out
stc
sbb
mov
addb
jmp
pop
add
lea
mov
cmp
inc
out
dec
in
mov
or
in
push
lea
cld
lock
or
sbb
sub
sub
ret
add
mov
dec
or
clc
mov
mov
dec
or
pop
inc
fs
inc
test
loop
sahf
mov
mov
pop
test
hlt
mov
inc
jne
or
mov
and
mov
push
add
or
in
adc
mov
lea
sub
push
stos
das
add
or
dec
cld
dec
cmp
sbb
pushf
pop
cmp
shl
inc
jne
ljmp
add
lock
jbe
popf
pop
push
pop
shl
add
pop
dec
or
xor
pop
loope
dec
add
nop
sub
or
nop
pushf
cmpsl
imul
or
outsb
jl
pop
sub
add
cld
adc
imul
fdivrp
sar
dec
mov
das
push
pop
dec
pop
jbe
clc
hlt
lea
adcl
pop
dec
pop
dec
pop
cmp
cs
pop
pop
pop
add
xchg
adc
enter
jae
cmpb
daa
ror
mov
popl
test
hlt
push
and
adc
cmp
jne
lret
add
imul
sub
cmp
cmp
sbb
insl
pop
xor
and
shlb
jbe
push
mov
ret
adc
xor
cmp
movsl
dec
sbb
sahf
inc
xchg
into
rorl
repz
xlat
dec
mov
in
in
mov
ja
ja
jbe
jmp
gs
jo
add
jnp
add
add
pop
fcmovnb
mov
cmpps
out
xchg
repnz
add
add
mov
sbb
test
xchg
push
sbb
ret
sub
xchg
inc
setne
in
inc
out
mov
push
aad
jo
sub
aad
push
dec
xchg
inc
fdivrl
add
mov
mov
lock
adc
sti
ja
frstor
mov
push
mov
cld
mov
mov
into
lea
xorb
cmc
dec
or
jle
pop
inc
in
mov
xor
cmp
setge
dec
and
dec
inc
mov
dec
es
push
decl
ret
cmp
jae
orb
add
inc
add
movl
mov
fmull
cmp
adc
je
inc
mov
or
mov
pop
push
leave
fsubs
flds
mov
mov
test
push
mov
mov
jecxz
and
dec
push
inc
cs
and
inc
push
cmpl
mov
mov
cmpsb
iret
lock
lods
aas
jb
cmp
loopne
add
pop
sbb
push
or
addb
ret
call
mov
or
jp
das
leave
outsl
pop
scas
lcall
jmp
sub
test
jge
inc
lahf
mov
add
sub
jns
xchg
ud2
icebp
inc
and
or
mov
js
punpcklwd
dec
pop
cmp
jge
add
push
add
enter
mov
mov
std
lret
adc
or
mov
lret
jmp
test
mov
jecxz
jne
lods
xor
xor
andl
push
rol
enter
sub
jp
and
sbb
or
loope
or
lods
xor
cmpsl
adc
stc
or
enter
and
adc
adc
cmpl
inc
add
jne
incl
add
or
fwait
adc
pop
dec
insb
into
nop
mov
push
data16
adc
loope
jle
rcrl
and
mov
sbb
movsl
inc
clc
das
das
or
ret
fbstp
decb
sub
adc
cmp
jbe
push
sbb
xor
xor
lahf
adc
outsl
stos
andl
daa
dec
ds
test
add
jl
cwtl
adc
xlat
push
sar
popf
es
xorl
push
xor
cmp
inc
adc
sub
je
sub
mov
shrb
push
or
push
ja
add
fstpt
fsubrp
mov
xchg
xlat
in
testl
cmp
adc
aam
adcb
movsb
mov
jo
add
fidivrs
fmulp
popa
dec
add
shufps
mov
jle
outsb
push
mov
mov
leave
push
sbb
mov
stos
ss
inc
cmp
add
push
adcl
jne
mov
enter
xorl
testl
cmp
cmpb
sub
sub
sub
mov
mov
xor
je
mov
hlt
sti
sbb
sbb
jmp
jmp
jo
jecxz
shll
sbb
adc
outsl
push
out
pop
setne
adc
lea
mov
sti
mov
scas
and
dec
jae
add
sub
mull
sub
lock
inc
loop
sbb
dec
loopne
outsl
lea
test
ret
jbe
add
jne
inc
inc
jmp
pop
clc
mov
cmp
cmp
or
cmp
sbbb
ret
jmp
jmp
xorl
lea
push
out
mov
divl
cmc
push
xor
insl
mov
jne
mov
inc
inc
lea
push
arpl
sub
test
sub
xor
mov
sub
ret
rorb
jb
fucomip
scas
cmpsl
add
xor
out
lock
outsl
push
ret
cmp
mov
or
movups
xchg
jo
inc
inc
xchg
jp
mov
shrb
clc
or
lea
jmp
lock
sbb
adc
enter
psraw
sti
lds
gs
add
sahf
cmpsl
jb
mov
mov
push
stc
jne
inc
inc
mov
pushl
imul
daa
push
lock
push
cli
pop
test
cmp
lret
inc
cmpb
ja
push
sahf
lea
arpl
sub
mov
sub
bound
outsb
mov
mov
adc
add
jl
cmp
jb
or
sbb
fisubrl
imul
es
psubusb
fmul
lret
jbe
inc
sub
movsb
fstpl
sub
aas
outsb
jns
cwtl
ja
cmp
lock
jmp
jno
sbb
pop
sub
adc
icebp
inc
jg
sbbb
incb
mov
mov
push
adc
std
leave
or
dec
ja
dec
or
pop
push
adc
out
push
pop
xchg
cmpsb
and
icebp
xchg
js
dec
pop
or
xor
mov
imul
das
icebp
popa
jl
cmpsb
add
mov
jl
cmp
lcall
or
xor
mov
enter
gs
sbb
add
icebp
push
push
test
inc
sti
aad
push
shlb
dec
jmp
fdivrp
inc
xchg
rolb
enter
lahf
sbb
fwait
xchg
add
xor
call
ret
or
stos
or
in
jle
inc
lret
push
cmp
and
shrb
add
rol
pop
add
xchg
ret
cmp
sbb
or
lock
enter
add
add
or
xchg
dec
ret
and
mov
jmp
addb
sub
xor
cltd
fnstcw
jbe
inc
fsubr
test
adc
mov
mov
inc
and
andb
cmpb
icebp
sbb
in
jae
dec
pushl
cli
jns
pop
lea
out
lods
xchg
xor
je
add
scas
dec
cmp
enter
push
scas
sub
pusha
pop
sahf
aas
pop
cmp
sbb
ror
push
pop
aad
imul
and
cmp
fs
loop
mov
in
je
push
sub
adc
mov
andl
adc
add
push
sbb
pop
and
dec
andw
scas
testb
push
enter
arpl
push
mov
adc
fs
sahf
pop
movsb
into
add
testb
je
xor
adc
sarb
jbe
sub
int3
push
rclb
pop
adcb
pop
jg
jne
test
xor
cwtl
fdivrs
int
push
push
ja
in
dec
cs
push
pop
mov
push
and
pop
inc
or
pusha
ret
or
xor
loopne
ja
sbb
negb
push
pop
lock
into
jle
mov
xorl
inc
js
mov
add
push
popw
lods
add
addr16
sbb
rcr
lahf
out
inc
add
xor
cmp
jl
jno
lahf
imul
test
jl
ds
adc
addl
les
or
xor
pushf
sub
shrb
xor
or
mov
push
push
ret
xor
dec
sbb
jmp
sar
repz
imul
mov
mov
and
inc
push
fwait
pop
push
or
jno
jle
loopne
pop
inc
mov
mov
daa
push
jb
adc
push
dec
into
or
ret
stc
sub
mov
dec
fwait
daa
adc
jne
sub
push
repz
add
test
and
cld
fucomp
add
mov
pop
mov
sahf
out
inc
pop
fsubl
push
iret
bound
out
add
inc
and
adc
dec
add
adc
add
add
dec
cmp
cli
push
pushl
lds
add
mov
outsl
ret
xchg
xor
insl
flds
sbb
das
cltd
rcl
dec
lahf
xchg
add
pop
mov
enter
or
leave
or
pop
insb
inc
and
mov
dec
dec
loop
and
adc
enter
gs
vpsubsw
mov
or
jmp
mov
dec
cmc
push
nop
cmp
push
xchg
push
or
movb
inc
mov
jae
and
ljmp
mov
adc
je
fistps
adc
mov
inc
mov
adc
xor
or
mov
cmp
or
sbb
test
jle
je
pop
and
addb
mov
adc
add
and
jge
or
cltd
lock
sub
sbb
fndisi(8087
aad
or
jb
cmp
ret
inc
and
add
mov
into
add
or
movsl
cmpb
pop
mov
inc
add
nop
xchg
leave
test
sarl
adc
push
jg
pusha
sub
je
or
je
push
mov
cltd
lods
ds
or
leave
and
mov
mov
call
cltd
popf
rcl
stos
fistpll
inc
jmp
dec
jne
sbb
pop
inc
in
ret
pop
add
mov
pop
enter
enter
lret
bound
cmp
ud2
xor
jne
adc
inc
testb
cmp
ss
sub
jge
mov
jbe
je
rcrb
fsts
push
addb
and
inc
movsl
icebp
outsl
lret
jge
sbb
adc
adc
mov
adc
out
std
sti
pop
add
sbb
or
daa
adc
stos
pop
xor
xor
jg
cld
aad
jle
mov
cmp
je
testb
rcl
mov
jl
jmp
mov
sub
pop
add
out
add
or
mov
pop
cmp
je
idivl
cmc
fidivs
mov
push
fisubrs
add
sbb
dec
inc
pushf
xchg
rcll
add
dec
call
fstpt
cmp
psadbw
push
nop
js
pcmpeqw
jmp
ljmp
pop
les
ss
daa
loope
in
mov
cs
adc
std
mov
inc
add
inc
push
mov
stc
jnp
pop
iret
jg
mov
mov
mov
icebp
or
test
ret
mov
aam
sub
ffree
pop
ret
add
sar
jmp
cld
jecxz
mov
je
mov
cmp
jae
cmpb
jle
popf
lods
mov
inc
jmp
popa
xorb
mov
and
push
xchg
xchg
clc
int3
sbb
or
dec
icebp
add
mov
xor
push
enter
inc
call
ror
xor
add
loopne
adc
andb
cmpl
imul
add
in
or
adc
inc
inc
or
sub
lea
add
outsl
mov
aaa
dec
stos
add
ret
sbb
int
addb
daa
hlt
sub
mov
inc
mov
sub
pop
or
lahf
cmp
inc
mov
in
sbb
add
pop
sbb
adc
fsubrl
fdivp
jne
fmull
insl
lock
test
fnstsw
sahf
jbe
inc
push
dec
pusha
je
fdivl
shll
lock
in
scas
xor
aaa
rol
dec
pop
popf
lock
jmp
xor
mov
outsb
leave
imul
push
sbb
jbe
stos
xchg
sub
mov
aaa
movsl
pop
xchg
push
das
push
inc
push
xchg
scas
lods
testl
lret
repz
adc
lret
mov
inc
sbb
and
sub
or
cmp
mov
dec
shll
je
cmp
jnp
adc
dec
mov
inc
dec
mov
leave
rcr
aad
jb
stos
test
and
je
dec
add
adc
mov
mov
je
nop
xchg
ja
and
add
mov
mulb
push
mov
aas
incb
lahf
rcll
sub
or
adc
xchg
mov
in
or
es
and
gs
call
inc
add
neg
mov
pusha
shlb
rolb
lret
out
fbld
mulb
fildll
sbb
mov
lock
sbb
lock
aaa
pop
ret
sub
enter
inc
les
add
dec
movb
cmp
pop
add
jns
neg
daa
sub
clc
sti
fs
shll
idiv
jnp
mov
fisubrl
or
ss
mov
lds
add
adc
sub
outsl
jmp
sbb
mov
int
roll
shr
rclb
imul
adc
add
push
add
jne
movb
cmp
adc
lock
mov
pop
xor
pop
clc
pop
adc
cmp
outsb
pop
clc
inc
movb
add
idivb
dec
clc
std
and
add
fsubrp
push
pop
cmp
jl
mov
pop
push
push
pop
adc
mov
pop
shll
dec
pop
mov
testl
sub
push
push
aad
icebp
push
arpl
lahf
cmp
cmp
pushf
rorl
mov
pop
cld
mov
jge
xchg
hlt
sub
stc
and
cwtl
pop
push
daa
hlt
push
popa
mov
cwtl
lcall
pusha
mov
pop
or
and
add
lcall
mov
in
push
dec
or
adc
push
mov
or
adc
outsb
outsb
dec
mov
or
sub
jne
out
and
loop
sbb
jne
mov
adc
xor
lcall
and
inc
push
push
add
adc
int3
fmuls
inc
pop
fnstcw
xor
mov
es
xchg
inc
gs
dec
lds
jecxz
shll
cmp
sbb
stc
adc
int3
test
push
addb
xchg
and
push
pop
or
sbb
mov
jle
cld
das
loope
ds
orw
mov
and
adc
hlt
imul
pop
shl
adc
pop
sub
andb
data16
or
mov
cmpsb
inc
inc
pop
push
and
jb
pushf
pop
add
sbb
pop
push
add
inc
push
test
pop
jne
pop
adc
nop
or
daa
mov
mov
ret
mov
sbb
pop
xor
add
jle
and
xor
jns
ja
lcall
sbbb
lahf
mov
loop
aam
jecxz
shll
xor
cmp
mov
dec
or
inc
dec
orl
mov
nop
add
outsl
roll
mov
mov
jmp
mov
inc
mov
and
data16
pop
inc
fisubrl
inc
scas
call
pop
mov
dec
adc
jg
push
testb
push
cmp
fidivs
sbb
mov
stos
jg
or
cmp
jns
enter
pushf
xchg
or
mov
fmull
ficoms
pushf
adc
fbstp
or
in
je
push
addr16
pop
xchg
push
push
push
stos
xchg
inc
xor
jno
ror
push
and
jecxz
or
mov
imul
push
dec
xlat
repz
add
js
sub
loopne
pop
xchg
nop
cmp
adc
cmp
push
sarb
add
jb
xor
cmp
fiaddl
mov
pop
test
push
inc
sarl
stos
sbb
mov
jno
sub
movsb
inc
xor
jg
and
out
mov
test
jp
dec
jl
mov
jmp
xchg
dec
mov
pop
sti
push
ret
out
movsl
xchg
lea
mov
clc
mov
stos
lea
xor
push
add
sti
add
aaa
sbb
ja
push
mov
add
nop
mov
cmc
inc
inc
dec
in
add
or
or
add
jb
mov
shll
mov
mov
jbe
test
mov
pop
mov
cmpb
add
xchg
inc
sub
cmp
push
imul
pop
test
mov
push
test
mov
and
adc
push
pusha
mov
pop
dec
jge
andl
stos
xchg
test
and
pop
lret
hlt
enter
movnti
xchg
cmp
cmp
inc
add
cmp
or
cmp
rcl
mov
inc
jle
sahf
or
push
fstps
rcrb
adc
mov
and
loope
add
adc
popl
out
mov
sub
cmp
mov
pop
lock
test
and
movb
add
imul
xor
lahf
add
mov
stos
rep
inc
xchg
movsl
lock
mov
outsl
rcrb
and
xor
int
notl
fwait
test
inc
std
cmp
push
imul
cld
stos
push
jns
frstor
push
loopne
sarl
imull
cmc
adc
nop
mov
je
mov
mov
jecxz
mov
or
jmp
sub
jb
mov
arpl
mov
jg
pop
adcb
ja
popf
cmp
and
loopne
and
xchg
mov
rclb
jne
std
cmp
pop
stc
aam
mov
pop
dec
pop
mov
notl
inc
add
and
push
lret
arpl
push
mov
dec
scas
mov
testb
inc
inc
int
push
xor
sub
in
std
add
inc
xchg
movups
jmp
andb
dec
out
add
ret
add
pop
pop
popa
loope
std
bound
mov
imul
adc
sbb
push
sub
or
adc
adc
add
sub
mov
dec
and
inc
stos
sub
dec
or
push
mov
adcb
add
sbb
or
rcll
lret
aaa
sarl
or
or
rclb
mov
mov
in
stos
out
sbb
and
cld
pop
cmp
xchg
iret
cmp
test
cmp
cld
or
cmp
xchg
or
shlb
mov
sub
pop
andb
fadd
jmp
hlt
push
and
jne
mov
inc
adcl
fcmovne
mov
push
mov
lock
cmp
or
add
adc
lea
fsubrp
fimuls
pop
lea
test
mov
xchg
popw
nop
push
pop
cmp
call
cmovs
jl
aad
adc
mov
neg
sub
inc
or
jbe
inc
sbb
ja
imul
push
jmp
sbb
mov
cld
or
ret
je
cmp
je
inc
pop
add
dec
xor
lea
add
xchg
sarb
xor
mov
orb
fcompl
call
xchg
and
xchg
mov
popa
jbe
pop
stc
and
testb
push
or
outsl
jne
pop
decl
mov
sbb
rclb
sbbl
xor
loop
xor
ja
loope
jo
push
inc
pushf
mov
addr16
hlt
sbb
or
push
mov
pop
cltd
dec
mov
test
push
inc
or
sbb
pop
imul
mov
cmp
xchg
or
cltd
and
push
adcl
push
sti
gs
in
mov
pop
fistpl
ljmp
jmp
mov
inc
cmp
sub
inc
dec
dec
call
xor
enter
mov
push
inc
inc
pop
aad
dec
stos
in
jmp
sbb
inc
cmpb
jnp
fldpi
inc
cmp
sbb
rcrb
sbb
and
jl
rorb
rolb
call
xchg
inc
xchg
mov
ret
mov
add
pop
add
cmpl
cmp
scas
or
loop
rolb
pop
xor
adc
and
mov
cld
xor
and
cmp
jmp
mov
sti
dec
leave
sbb
sete
mov
shr
mov
dec
xor
roll
push
inc
adc
push
pop
inc
arpl
add
int
leave
popa
sar
aas
je
inc
pop
movsl
cmp
je
push
sbb
push
and
jno
add
add
xchg
es
push
jno
jbe
sbb
hlt
mov
andl
adc
ret
or
popa
mov
mov
xor
and
subl
or
out
inc
xchg
arpl
das
and
mov
ljmp
insb
cwtl
lret
sbb
outsl
jmp
or
dec
ret
push
out
mov
bound
sahf
pop
stc
or
jmp
ja
sar
sbb
std
add
call
sti
mov
and
push
sub
and
inc
popa
popf
push
call
int3
and
pushw
or
rcll
daa
test
and
arpl
sti
fwait
cmp
sti
or
sub
inc
aad
cmpb
popf
mov
jmp
aaa
mov
mov
test
pop
push
in
inc
ret
mov
sbb
jmp
sub
mov
and
push
testl
fildl
mov
inc
lods
add
out
mov
sarl
lds
inc
mov
mov
mov
sbb
sti
and
dec
sub
cmp
jge
mov
mov
pop
fiadds
jle
pop
lea
andb
shrl
sar
stos
mov
mov
xchg
jl
xchg
adc
arpl
add
sub
mov
push
std
fs
sub
mov
mov
scas
orl
add
or
add
inc
jecxz
rcr
ret
mov
mov
lea
jne
test
add
ds
lahf
fs
negb
ret
dec
cwtl
xor
adcl
aam
push
aas
pop
push
int
push
mov
cmp
push
orb
adc
lcall
or
sti
add
jno
pusha
popa
pop
insl
xor
ret
and
int3
cmp
push
call
push
pop
cli
mov
jmpw
add
in
push
mov
mov
mov
mov
sbb
or
push
push
jg
sub
jo
xchg
and
cmp
lret
out
jmp
xor
mov
mov
mov
mov
push
pop
mov
fwait
mov
mov
popl
add
mov
jns
and
mov
push
or
push
test
push
psubsw
enter
loope
imul
and
imul
ret
js
dec
int3
push
inc
xor
pop
inc
xor
inc
or
and
stc
testl
cmp
es
jge
jae
cmp
sarl
popa
lea
arpl
lea
mov
pop
pop
pop
orb
xor
dec
mov
adc
inc
lcall
repnz
add
sbb
pusha
xor
xor
jmp
jge
clc
dec
dec
jmp
xchg
jmp
mov
enter
sub
std
xchg
pop
sub
sbb
add
push
ret
mov
add
cmpl
push
cld
jl
mov
fcoms
cli
and
ret
filds
mov
ja
aad
inc
cmp
mov
in
loope
pop
cmp
fsts
movsb
gs
loopne
inc
mov
cli
ljmp
push
pop
fwait
pusha
adc
adc
jmp
xchg
mov
push
repz
shld
cmp
sub
fld
fisttpl
call
lahf
add
jns
sti
pop
fidivl
lret
mov
and
fisubs
dec
fidivs
roll
adc
enter
dec
mov
jmp
lock
jmp
lea
dec
mov
ss
adc
pusha
or
test
insl
daa
cmp
push
sbb
enter
add
sysexit
rcrl
js
inc
inc
adc
or
outsl
lahf
ljmp
flds
and
icebp
mov
pop
push
test
orb
inc
fcoms
in
out
add
adc
jmp
mov
sub
or
hlt
fildll
or
lea
cwtl
sbb
int3
mov
xchg
inc
dec
sbb
mov
repz
jae
test
jl
adc
inc
cli
mov
mov
inc
mov
outsl
dec
lahf
cmp
dec
add
xchg
jne
cltd
mov
das
lahf
int
pusha
sub
cmp
jmp
in
scas
in
aam
xlat
leave
or
and
cmpsl
pop
pushf
push
data16
xorl
or
xchg
aad
jno
int
xlat
sbb
cmp
adc
pop
aas
lock
leave
pop
fiadds
pop
jg
sbb
repnz
xor
xchg
pop
adc
sbb
inc
adc
and
out
adc
add
insl
add
add
imul
cmp
jno
push
cmp
sub
pusha
mov
jo
mov
loop
mov
push
or
and
push
cmp
jge
mov
dec
fnstsw
pop
ret
and
mov
mov
xchg
pusha
inc
mov
dec
jecxz
and
cmp
adc
mull
js
ret
sbb
adc
jp
xchg
jmp
mov
add
aad
aam
pop
ret
xor
mov
lret
xchg
add
push
test
pop
cmp
sub
jne
jp
jge
outsl
xchg
ja
push
push
testl
shr
pop
mov
shrl
scas
adc
and
mov
insb
or
shlb
cmp
loopne
outsb
leave
sub
add
in
sbb
or
sbb
mov
pop
pop
retw
aaa
add
loope
rorb
add
push
jle
pop
push
das
popa
add
roll
fcoml
loopne
subl
jne
push
jb
cmp
jne
lcall
jnp
mov
jge
and
lcall
add
mov
test
jb
pop
sti
push
add
inc
jae
or
mov
shld
shl
pop
rcr
and
shl
ljmp
or
push
clc
adc
adc
pop
sbb
mov
cmp
jle
pop
mov
sahf
ds
mov
or
notb
adc
push
das
pop
pop
jbe
rorl
and
pop
clc
mulb
mov
nop
incl
and
or
test
daa
nop
push
cmp
lods
sub
or
add
fistpll
mov
sub
sbb
mov
das
or
dec
shll
cld
mov
or
fistps
jmp
push
push
pop
jo
sbb
bound
mov
nop
xchg
mov
insb
in
nop
call
mov
nop
inc
and
cmpsb
mov
mov
push
xchg
shlb
mov
mov
test
xor
push
clc
or
fistps
ljmp
inc
loope
jo
add
mov
adc
push
rorb
shlb
ficoms
push
xchg
push
xor
add
and
pop
dec
mov
sbb
add
add
gs
insb
sahf
xchg
shlb
pop
xchg
pop
sbb
fisttpl
xchg
push
pop
andl
sub
sbb
loopne
in
das
lea
movsl
xchg
or
imull
or
or
mov
testb
adc
cmp
add
scas
test
out
sbb
int3
dec
mov
or
fisubs
sbb
push
mov
lds
daa
pusha
inc
sub
cltd
negb
mov
pop
cmc
pop
inc
das
add
pusha
inc
roll
sti
jns
cmp
add
or
popa
aas
push
in
cmp
mov
mov
sub
cmp
daa
inc
ljmp
xor
or
lds
adc
in
mov
push
inc
pop
movsb
mov
xor
xor
mov
adc
push
insl
adcb
test
icebp
leave
mov
cmp
and
jl
subb
aas
add
xor
aad
addb
mov
sub
arpl
cs
push
pop
xchg
mov
js
xor
mov
pop
mov
xor
dec
pushf
rcrl
push
sbb
push
and
les
mov
sub
or
inc
pop
push
add
sarl
mov
pushf
mov
mov
sub
pop
cmp
jg
ss
jg
lahf
popa
cmp
inc
pop
xchg
cmp
into
dec
add
pop
push
repz
rolb
insl
orb
xor
adc
jno
leave
repz
addb
test
pushf
cwtl
lock
int3
insb
out
stos
cmp
and
mov
cmp
inc
out
cwtl
dec
pop
dec
in
xor
push
or
cmp
mov
hlt
push
repnz
in
xor
jne
adc
xchg
xor
mulb
jecxz
ljmp
cmp
dec
fildll
cltd
out
stos
mov
add
addr16
popa
lods
push
and
and
fidivl
adc
fcoms
popf
mov
inc
cmp
push
ds
inc
push
jmp
push
add
xchg
mov
and
mov
aas
fsubrs
xchg
adc
or
add
lret
mov
jnp
jg
daa
enter
fists
and
jle
push
xchg
mov
push
xchg
lock
sbb
push
push
aaa
jne
xor
mov
nop
popf
roll
xor
sbb
test
push
mov
and
imul
andl
sti
fincstp
fcmovnb
mov
jmp
adc
aam
shl
imul
repnz
push
sar
stc
push
add
lea
pop
mov
inc
sbb
push
sbb
push
pop
sub
add
fmuls
stc
jmp
sbb
lahf
or
lods
stc
add
mov
jg
fidivs
fdivrs
into
jle
sub
jmp
adc
sarl
out
mov
popa
sbb
push
dec
pop
sbb
inc
dec
mov
js
insb
fiadds
outsl
pop
sub
jnp
add
nop
je
push
pushf
das
mov
dec
or
rep
dec
ret
dec
dec
sbb
adc
sub
add
push
jle
adc
adc
mov
and
rorb
sbb
jae
mov
push
lahf
cmc
imul
push
lea
push
addr16
gs
stc
sub
push
inc
loope
jmp
or
xchg
xor
cwtl
aad
inc
lods
adc
adc
or
jg
jmp
shl
mov
dec
pop
les
jae
push
push
jae
repz
rol
adc
fprem1
add
call
pop
dec
std
dec
jne
gs
inc
adc
outsl
lods
or
jmp
negb
lods
and
and
lods
add
add
in
in
dec
or
arpl
cmp
and
add
enter
jns
dec
dec
push
push
push
push
dec
das
orl
mov
imul
jnp
jl
testb
add
xchg
ret
jge
jo
add
push
ror
pop
xor
loop
jge
pop
and
and
sub
xchg
sbb
stc
mov
testb
or
jne
push
add
sub
in
movb
out
clc
inc
andb
in
mov
mull
adc
lds
cmp
clc
or
rcrl
pop
fwait
cli
sub
je
ds
cmc
movsb
mov
jns
popf
jl
mov
dec
adc
inc
jmp
cmpb
or
cmpsl
mov
inc
pop
xor
sub
daa
mov
les
loop
enter
clc
adcb
ljmp
mov
cmc
lret
je
cmp
mov
ss
sbb
push
add
insl
xchg
nop
push
outsb
cmp
sti
imul
add
imul
scas
test
icebp
mov
dec
add
inc
loop
leave
sbb
je
cmpsb
not
and
outsb
aas
or
sbb
adc
testb
les
cs
imul
xchg
or
mov
sub
push
pop
pop
lods
leave
iret
inc
push
dec
add
adc
adc
cmpsb
ficomps
loop
inc
clc
sub
insb
hlt
xor
push
dec
sub
je
icebp
inc
sub
xor
or
add
mov
push
dec
incl
add
int3
jmp
dec
or
pop
pop
outsl
cli
divl
mov
or
in
mov
pop
or
or
in
dec
clc
loopne
jmp
jne
jmp
je
and
inc
cmp
fbld
push
sub
adc
aas
insl
adc
lock
mov
lock
add
hlt
sbb
push
jnp
inc
pop
iret
mov
cs
repz
ffreep
je
addr16
xor
xor
inc
inc
push
fstcw
sbb
out
cmp
shlb
or
pop
les
jl
or
inc
mov
rorl
mov
lock
fldcw
insb
movsb
lret
inc
and
dec
mov
mov
push
arpl
cmp
adc
xchg
out
jae
or
bound
andb
mov
sbbb
mov
outsl
or
icebp
and
mov
adc
pop
gs
jne
or
mov
loopne
or
outsl
or
adc
js
sti
cmp
mov
insl
pop
pop
test
pop
mov
movsb
mov
hlt
mov
adc
add
add
test
sbb
mov
mov
adc
into
movsb
jne
fadd
sbb
testl
pop
xor
sub
dec
cmp
clc
dec
or
add
adc
pop
inc
inc
fimull
push
mov
adc
or
shl
not
test
jne
inc
jo
xchg
adc
jge
xorl
daa
sbb
add
jl
test
inc
or
bound
cmp
pushf
cltd
adc
iret
mov
pop
pop
push
mov
pmaddwd
and
pusha
daa
ret
pop
sub
ret
cmp
push
movsb
adc
in
mov
mov
pop
dec
dec
jo
in
pop
add
ret
pop
cltd
addr16
push
dec
mov
sub
pop
mov
loop
mov
add
or
dec
inc
push
push
sbb
or
mov
push
inc
mov
cmc
add
adc
adc
std
enter
rolb
lock
add
push
aaa
mov
and
lret
dec
cmp
mov
jno
or
xchg
popa
dec
jecxz
push
adc
pop
fistps
sbb
pushf
popf
xchg
add
cmpsb
and
movaps
int
jl
loopne
and
mov
call
dec
imul
fwait
push
mov
jne
xchg
pop
pop
add
imull
pop
aas
jecxz
jb
add
aam
xchg
lret
aad
dec
push
push
sub
test
iret
sbb
clc
push
or
dec
or
sub
testb
and
jo
je
jecxz
or
sub
cmp
and
add
push
ficoml
mov
pop
sub
xor
lock
push
outsl
inc
addr16
and
cld
ret
ds
add
sub
mov
ds
inc
mov
push
cmpsl
xchg
or
jbe
push
jmp
cmp
jg
sub
adc
outsl
test
inc
outsl
add
mov
cmp
cmp
pop
fidivrl
popa
or
dec
testl
add
inc
push
arpl
sti
push
shlb
idivl
add
inc
mov
cmpb
jg
xor
add
inc
testl
or
incl
sub
jp
decl
add
sbb
jcxz
add
test
jecxz
loopne
sbb
dec
jecxz
loopne
xchg
add
or
mov
inc
je
mov
push
and
pop
mov
jge
shll
dec
lock
or
jle
movb
test
sub
xor
lds
fcmovne
cli
in
add
mov
mov
inc
ja
jne
and
insb
lods
dec
xor
jl
cmpb
jl
lods
cmp
jne
cmc
pop
xor
incl
jmp
inc
dec
fsubl
add
inc
nop
pop
in
and
push
cmp
cld
pop
push
divb
movsl
iret
ss
xor
cmp
add
or
movswl
or
xor
pop
xor
scas
mov
mov
pop
addr16
pushf
shl
iret
inc
sub
push
inc
lahf
fnop
inc
jns
xchg
je
push
or
sub
dec
mov
jmp
or
xchg
adc
rcrl
sbb
xchg
cwtd
jmp
fsubrp
sub
dec
add
or
lahf
ud2
or
inc
or
xchg
xor
into
iret
adc
out
sti
incl
leave
mov
shr
or
lea
mov
fbld
lret
jmp
sbb
mov
and
iret
cltd
dec
or
add
adc
int
dec
mov
cmc
pop
jno
popf
test
inc
inc
ret
mov
sbb
and
jmp
lret
mov
inc
cmp
inc
rcll
mov
je
cmp
jne
leave
push
fisubl
out
in
fwait
and
push
mov
inc
or
dec
dec
pop
jne
xor
call
out
fadd
mov
push
and
inc
mov
lcall
mov
ja
loopne
and
or
dec
ja
push
das
or
ja
test
cmp
push
add
and
push
pushl
out
xchg
cmpl
outsl
dec
inc
aas
push
fistl
jne
leave
hlt
inc
xchg
je
jmp
push
aas
or
push
mov
add
cmc
ljmp
test
inc
jne
out
add
or
add
adc
pop
inc
pushl
fidivl
pushf
ror
sbb
and
add
mov
xchg
rol
cmpb
gs
int
sbb
push
icebp
fsubs
push
inc
stos
aam
inc
and
pop
or
out
adc
cmp
pop
jbe
and
cmp
cmp
lds
rcrb
test
aaa
lea
enter
push
or
add
popa
pusha
mov
xor
adc
xchg
testb
jno
or
pop
pop
inc
sahf
aaa
or
jmp
sub
scas
and
popa
in
xchg
outsl
cld
xchg
gs
loopne
add
shlb
xchg
sahf
loopne
cmp
and
inc
pusha
jnp
push
push
sub
icebp
fxch
mov
xlat
and
jne
inc
stos
movsb
or
push
mov
cmp
jge
mov
and
inc
addr16
dec
sbb
test
pop
flds
ja
sub
call
lahf
pop
jmp
inc
add
xor
pop
mov
xchg
xor
mov
cmp
into
jae
push
ret
insb
loopne
mov
out
jl
mov
push
sbb
pushl
subl
add
les
daa
add
movb
incl
sub
das
jbe
dec
xor
or
and
into
add
jmp
jmp
pushl
out
scas
icebp
mov
mov
mov
shr
shl
or
pop
sahf
pop
push
testl
ja
in
imul
or
mov
or
out
shr
cmc
push
aas
xor
adc
xor
inc
pop
sbb
add
das
mov
sbb
push
mov
decl
lea
movsl
movsl
push
movsl
sub
fidivs
or
inc
xchg
gs
or
mov
sub
and
pop
icebp
mov
pop
cmp
dec
add
cld
xchg
inc
rorb
adc
loope
xor
cmpsb
add
pushl
sbb
popf
mov
lret
das
icebp
ret
push
jmp
pop
pop
data16
test
or
sahf
mov
sbb
js
rcrb
cmp
add
shl
push
dec
adc
in
mov
andl
pop
mov
or
stc
inc
jmp
push
pop
loope
or
xchg
add
shlb
sti
xor
cmp
pop
push
rcrb
pop
push
add
add
adc
je
add
cmpsl
int
or
jbe
mov
outsl
add
lcall
dec
push
pop
adc
pop
fwait
jl
mov
stc
cmp
xor
sub
push
pop
xchg
lahf
jge
jle
jle
arpl
sahf
insl
pop
gs
sti
dec
push
cmpxchg
popf
cmp
dec
pop
add
pop
push
lcall
ret
cli
cmp
adc
or
insl
jmp
sbb
stos
add
mov
das
add
xorb
and
push
xchg
ret
jmp
adc
mov
add
int
add
dec
repz
add
mov
js
outsb
mov
in
cltd
aaa
sub
mov
and
inc
daa
das
pop
inc
aam
lea
push
dec
adc
xor
je
femms
push
fimuls
mov
cwtl
add
sbb
jl
jmp
jl
push
or
pop
dec
adc
jmp
mov
jg
test
fcos
mov
outsb
je
mov
cmp
pop
dec
sub
ljmp
add
mov
testb
push
sbb
js
movl
adc
jg
mov
mov
push
imul
rorb
int
sarb
xor
aas
test
push
sub
jbe
cmpb
jl
push
mov
roll
hlt
jbe
inc
dec
daa
lret
adc
xchg
rolb
xor
xchg
or
xchg
push
enter
mov
sub
add
lret
pop
mov
sbb
sub
mov
cmpl
mov
adc
mov
aam
xor
mov
sub
and
mov
jbe
loopne
mov
ljmp
jns
xchg
ret
cmp
jno
scas
jmp
add
arpl
nop
lcall
cvtps2pi
stos
or
pop
mov
mov
inc
or
out
inc
in
adc
into
pop
ss
sti
jne
push
aam
pop
iret
rcl
xor
mov
rclb
mov
stos
jno
dec
push
inc
dec
sbb
pop
movsl
shl
mov
mov
test
cmpsb
imul
int3
pop
in
out
cmpsb
imul
mov
aas
xor
inc
testb
inc
add
push
sub
repz
push
pop
sbb
fnstsw
andw
xor
add
xchg
lds
lods
jp
fmull
ss
sub
test
maskmovq
scas
sbbb
inc
sub
adc
loope
adc
xor
cs
and
sbb
mov
les
clc
call
hlt
push
loope
mov
clc
pop
mov
sbb
adc
out
xchg
stc
or
cld
incl
imul
mov
lea
cld
sbbl
movswl
jae
adc
test
jge
jp
adc
aas
jb
inc
xor
inc
std
cli
ss
dec
sbb
xor
adc
sbb
fnstcw
jo
mov
or
cmp
inc
adc
inc
cli
sub
mov
sbb
mov
xchg
sbb
jne
pop
pop
push
fistpl
neg
test
int3
dec
jb
in
mov
mov
jle
mov
test
jo
and
in
cwtl
mov
sbb
inc
inc
loopne
mov
mov
mov
xchg
decl
jne
std
mov
ret
popl
add
xor
push
fs
ucomiss
dec
aad
jmp
stos
inc
lcallw
add
ret
sub
mov
andb
add
dec
pop
xor
pop
hlt
flds
add
andb
adc
shr
shll
ret
and
ss
ret
adc
test
mov
pop
ret
push
add
rcrb
mov
sbb
cmp
xchg
jns
das
dec
and
pop
mov
out
je
or
outsl
in
das
cmp
push
loopne
inc
or
lods
mov
push
jne
pop
ret
pop
add
or
test
adc
ret
ds
ret
xchg
clc
sbb
ret
jne
loope
jmp
orl
or
orb
or
rolb
pop
add
xchg
sub
pop
clc
dec
mov
mov
push
xlat
mov
in
inc
sub
ljmp
ret
and
lea
inc
cmp
subl
xchg
xlat
cli
jg
lods
cli
std
mov
aas
ja
gs
mov
mov
jge
add
mov
adcl
aam
cmp
cmp
outsl
jne
enter
push
cmp
dec
inc
lods
push
xchg
cmp
das
movsl
mov
inc
adc
dec
bound
loope
mov
das
or
jnp
shl
pop
add
aam
sub
add
call
movsl
add
mov
imul
xchg
xor
push
cmpsb
mov
stc
subl
inc
call
pop
mov
mov
pushf
andl
cmpsl
rorb
orb
mov
cmp
or
sub
sbb
dec
pop
mov
cli
in
adc
sub
aaa
sarb
push
loop
fisttps
mov
roll
imul
add
inc
cmp
xchg
pop
xchg
loop
loop
push
insl
pop
or
pop
inc
xor
out
jmp
inc
sbb
outsl
xchg
por
loop
lahf
mov
scas
fidivs
fimuls
in
mov
pcmpeqw
or
mov
mov
jmp
neg
sbb
dec
jmp
test
rolb
mov
dec
jge
add
xor
or
jmp
cmp
je
jge
mov
add
mov
sub
push
jge
mov
inc
inc
scas
cs
inc
bt
outsl
addl
pop
dec
mov
test
cmp
rorl
push
jg
inc
sub
dec
inc
mov
jne
sbb
mov
cld
dec
jne
jp
sbb
pop
jne
push
mov
js
sti
cs
pop
mov
ds
cmp
sbb
pop
sub
xchg
daa
inc
sbb
jne
jle
mov
xorb
xlat
add
sbb
inc
and
add
inc
sbb
dec
sbb
nop
ss
ja
dec
mov
dec
add
add
push
xchg
sbb
pop
and
or
xor
mov
and
or
cmp
idivl
mov
dec
test
sti
xchg
and
inc
mov
cmp
lret
lret
inc
add
sub
sbb
cmp
jbe
inc
jbe
push
jmp
jb
enter
popa
movsl
popf
xchg
cmpsl
or
sbb
jbe
xor
cld
leave
sbb
ret
or
fs
mov
iret
add
subl
cmpsb
pusha
enter
cmpsb
add
jns
push
sbb
adc
push
mov
xor
mov
jecxz
out
repnz
or
dec
lcall
cld
mov
lcall
insl
cmp
xchg
inc
push
sub
test
fadds
in
leave
mov
es
repz
push
inc
lods
adc
negl
addr16
and
or
jnp
pop
adc
xchg
ret
dec
sbb
push
push
aas
pop
mov
cli
jmp
cmp
push
test
ds
sbb
lea
add
jno
sbb
fisttpl
xor
push
subb
cmp
inc
movsb
push
int3
out
jl
cmpl
push
mov
pushl
lea
add
add
or
push
mov
scas
jmp
das
loopne
arpl
sbb
jmp
jo
xor
jnp
mov
xor
jp
fdivrp
sub
in
mov
jae
test
mov
sbb
fs
popa
pop
je
mov
add
adc
lea
cs
rcrb
cmp
sub
pop
inc
outsb
push
call
xor
fistpl
fcomi
shll
fdivs
push
or
adc
movl
xchg
call
mov
mov
outsl
sbb
sub
int
add
or
jnp
ret
pop
cmc
lock
in
leave
lea
pop
ret
and
shlb
lea
je
mov
lock
push
and
iret
add
loopne
ljmp
jne
dec
fbld
adc
xchg
jmp
mov
mov
jne
and
adc
out
nop
dec
adc
mov
in
sbbb
data16
sub
mov
xchg
lds
mov
shlb
mov
cmp
adc
or
rcl
adcb
pcmpeqb
jmp
mov
and
ret
mov
add
rcrl
pusha
and
sbb
cmp
push
mov
lock
and
lds
mov
pop
stos
add
jecxz
js
cmp
dec
push
xor
rorl
repnz
cmp
push
dec
in
lcall
leave
and
add
add
xchg
sbb
sub
sbb
or
xor
fldcw
js
jg
pop
mov
fcmovu
mov
loope
push
adc
cmp
je
push
sub
and
fdivr
cmpsb
add
dec
add
add
or
jmp
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
pushl
repz
test
ficompl
jmp
mov
hlt
movl
imul
stc
std
in
leave
mov
add
insb
push
arpl
psubd
or
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
decl
mov
and
or
adc
stos
sbb
data16
inc
fdivl
incl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
decl
xor
inc
test
xchg
sbb
push
sub
decl
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
lcall
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
aas
cld
call
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
sti
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
jg
call
cmp
mov
cmp
lods
insb
mov
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
jmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
aam
loopne
lcall
ficoml
int3
dec
frstor
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
decl
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
jmp
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
xchg
movsb
pushl
outsl
ja
mov
out
sti
jo
aas
cli
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
decl
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
call
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
adc
mov
lret
mov
cmpsb
mov
sarb
incl
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
sti
idiv
mov
sbb
add
sub
inc
add
add
mov
clts
add
add
add
xor
sub
push
pop
pop
or
aaa
xor
push
push
repz
mov
push
and
add
pusha
push
jo
aas
mov
insl
or
sub
add
sbb
sub
mov
add
insb
add
fs
outsb
jne
insb
adc
pop
inc
dec
dec
inc
enter
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
cs
push
push
inc
push
push
std
jae
sbb
sarb
inc
xchg
mov
inc
inc
dec
jae
jb
arpl
jae
jb
gs
je
jb
pop
idivb
sbb
je
dec
inc
push
dec
xorl
sub
pop
push
addr16
imul
xchg
iret
push
push
sbb
test
and
in
roll
pop
push
push
sbb
paddsb
or
dec
inc
sbb
inc
and
and
xor
cmp
sub
insb
je
sti
jne
xor
imul
jns
jo
dec
aaa
outsb
outsl
je
or
push
and
popa
arpl
out
insb
xchg
imul
sbb
ss
xor
xor
ja
and
jb
inc
addr16
arpl
enter
arpl
insb
push
mov
out
jge
gs
das
mov
mov
mov
xor
out
outsl
jo
mov
jnp
loop
inc
push
fs
push
cmp
lea
cltd
xor
and
xor
cld
test
jb
pop
insb
outsl
arpl
popa
sub
xor
pop
add
add
sbb
std
andl
insl
insl
pop
addr16
lahf
and
mov
pop
push
cmp
push
iret
lret
fisubs
push
jae
push
xor
pusha
fnstcw
fcomp
outsb
addr16
and
decl
shll
mov
imul
push
cmp
jb
mov
jnp
jns
or
inc
sbb
lret
sbb
and
cmp
cs
insb
xor
pop
imul
repnz
push
push
std
movd
xor
gs
or
inc
jb
push
popa
out
jge
cmp
dec
jecxz
xchg
lds
mov
dec
add
gs
xor
fbstp
inc
aas
xchg
push
pop
pop
inc
gs
popa
in
stos
jecxz
inc
lods
jbe
add
jo
mov
push
shll
in
jg
insb
popa
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
stos
insb
in
push
das
dec
sahf
fisubl
fimull
add
andl
mov
lahf
sbb
mov
add
jmp
xor
cmp
dec
gs
imul
push
adc
inc
ja
xor
xor
push
push
popa
jae
add
mov
adc
das
mov
xchg
insb
jae
or
shlb
sub
cld
fbstp
popa
jbe
inc
dec
inc
add
lea
inc
outsb
addr16
cmp
ja
inc
dec
je
loopne
fildl
inc
inc
adc
andb
out
inc
mov
push
insl
pop
jno
xchg
lret
and
fwait
xor
xor
ja
sub
outsb
dec
mov
inc
inc
inc
push
push
test
bound
in
ja
outsb
fsts
add
xchg
shlb
ds
cmpsl
insb
adc
imul
adc
add
cmp
je
sub
jae
mov
adc
lods
sbbl
je
cmp
and
ja
or
es
push
dec
jle
sarb
insb
outsl
cmc
push
pop
je
jae
mull
add
inc
je
adc
xchg
xchg
in
adc
add
popa
sub
aaa
ds
push
pop
inc
jne
lods
pop
dec
push
cmp
outsl
push
iret
jns
dec
push
addr16
xor
imul
scas
jmp
jb
jae
jne
sub
out
mov
push
fdivrl
ds
pop
push
loopne
addr16
and
into
mov
outsb
test
imul
xlat
fidivrs
pop
into
inc
insl
lret
mov
ret
push
mov
je
out
in
xor
mov
inc
insb
cmpb
rcr
dec
shll
add
mov
loop
dec
inc
jae
pop
xorl
insl
xlat
push
jne
sub
xchg
sbb
xor
lock
les
jne
sub
shll
mov
fisubrl
fists
ja
imul
ret
data16
mull
movsb
lods
and
mov
arpl
cmc
cli
adc
add
jne
data16
push
add
ret
hlt
pop
add
decl
add
mov
lahf
call
dec
pusha
add
pop
mov
add
push
push
add
int3
inc
fs
mov
cmp
in
pusha
pop
or
jl
add
adcb
adc
jb
jmp
fisubs
addr16
test
or
inc
repz
xor
aas
inc
dec
push
add
jg
scas
addb
lahf
xor
sub
mov
and
add
or
add
pop
sbb
lret
inc
sub
add
pop
ds
xor
movsl
cmpsb
movsb
and
xor
das
out
push
pop
nop
inc
and
pop
xor
mov
scas
inc
and
fwait
push
dec
mov
and
add
and
ret
mov
dec
pop
data16
or
addl
js
or
outsb
aas
sbb
xchg
cwtl
dec
rclb
test
scas
xor
xor
mov
dec
or
sbb
push
insb
mov
punpcklbw
out
rolb
add
pop
add
cltd
icebp
mov
test
iret
xor
xor
je
fcomp
or
add
int3
xchg
ljmp
test
cmp
inc
scas
add
cmpsl
pop
and
push
add
or
and
outsl
shr
outsl
push
add
xor
mull
xchg
add
arpl
and
sub
mov
or
add
sub
and
pop
pop
fdivrp
arpl
int3
loopne
jg
xchg
add
push
fstpl
or
dec
add
mov
jg
ja
xor
jo
pop
je
insl
jo
scas
rclb
jo
xor
or
dec
outsb
adc
ds
lahf
leave
and
jo
jns
outsl
outsl
pop
cmp
pop
pop
ret
and
pop
gs
ds
adc
add
decl
leave
mov
xorb
loop
cmpsl
fistl
jo
cltd
std
cmp
adc
test
icebp
xchg
incl
adc
popf
shlb
jnp
icebp
stos
stos
mov
ljmp
jno
jle
jns
sbb
jne
cwtl
bswap
icebp
cwtl
or
mov
mov
add
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
mov
pop
in
shl
cli
hlt
std
cltd
adc
test
movsl
mov
jnp
pop
fnsave
mov
or
mov
adc
int
enter
jge
repz
pop
out
test
data16
pushl
xchg
enter
movsl
adc
mov
lcall
insb
stos
push
rcr
pushl
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
sarl
test
fwait
push
xor
rcrb
aas
cld
mov
jne
sub
pushf
push
jbe
jns
push
sti
mov
cmp
xor
jle
pop
fidivrl
xorb
dec
jge
xchg
cwtl
cmp
mov
adc
xor
pop
mov
bound
xlat
lea
adc
shrb
inc
push
cmp
popf
fdivrl
rol
adc
pop
dec
js
mov
mov
sbb
inc
negl
arpl
sbb
adc
lcall
sbb
ret
iret
repz
and
push
cli
push
repz
sub
pop
sahf
mov
pop
repnz
pop
adc
popf
stc
into
lret
xor
jg
ret
xor
adc
aaa
rclb
pop
js
lret
sti
jnp
adc
mov
pop
fbstp
ret
xor
pop
fisubs
mov
jns
in
lret
jl
adc
test
enter
ret
jmp
ret
push
xchg
ja
mov
in
leave
jmp
cli
fdivr
in
jle
std
std
jmp
ljmp
cld
and
fcomps
mov
lods
aad
or
lock
jmp
jmp
das
in
shl
fsubs
lret
cld
in
pmaxub
out
sti
lock
cltd
clc
cli
jnp
aad
cmc
jg
pushf
ljmp
call
inc
jb
pop
add
push
enter
std
ljmp
and
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
xor
adc
std
das
dec
inc
dec
dec
add
inc
pop
adc
push
test
cmp
fbstp
sbb
dec
dec
inc
xor
out
fdiv
xor
dec
dec
and
and
add
pop
push
bound
add
or
adc
add
aam
imul
jnp
xor
orb
add
dec
outsb
pop
imul
pop
shlb
jae
icebp
xor
adc
push
dec
inc
cmp
add
add
pop
or
ficoml
sbb
es
inc
inc
inc
paddsb
orb
add
adc
decl
loop
ds
add
pop
sbbl
dec
sbb
adc
sub
addr16
lret
pop
out
mov
push
add
inc
cvtdq2ps
inc
lcall
sahf
popf
cmp
out
xor
add
push
jbe
cltd
fs
mov
or
add
add
or
or
lahf
add
mov
filds
push
insb
mov
add
cmpsb
nop
addr16
and
jbe
dec
mov
mov
es
pop
inc
mov
xor
jg,pn
mov
lcall
add
sbb
or
rclb
fwait
test
rorb
cmc
pop
leave
adcl
hlt
pusha
push
repnz
mov
or
sbb
inc
add
insb
jb
dec
or
in
setne
push
jl
inc
dec
ud0
fimull
adc
stos
pop
cmpsb
jmp
das
adc
das
adc
push
pop
sbb
cmpsb
test
in
or
and
jns
imul
and
fwait
push
psubusb
addr16
add
je
inc
xchg
sldt
push
cmp
in
test
insb
lidtl
xor
add
push
popf
lods
rcrl
and
loop
lret
xchg
ds
jne
cltd
jb
mov
xchg
cli
sbb
loop
gs
and
ljmp
xor
gs
fdivrs
jo
fs
insb
ja
adc
dec
cld
inc
fs
outsb
arpl
xor
psubusb
add
jne
rcrb
and
push
mov
lods
loopne
sbb
daa
jne
push
xor
ds
daa
jmp
outsb
jo
or
std
mov
addr16
dec
sub
fnstsw
sbb
das
inc
add
push
or
push
push
imul
sub
push
pop
jmp
sbb
stos
test
sub
mov
subl
xor
subl
add
cwtl
mov
fstp
or
inc
lea
cltd
or
movsl
mov
push
inc
pop
inc
inc
and
cmp
js,pn
pop
arpl
mov
das
and
aas
daa
rorb
jno
popa
sub
and
imul
and
imulb
outsl
sbb
rorl
decl
push
dec
push
inc
push
cmp
mov
inc
rcr
push
and
fst
cmp
inc
push
dec
nop
fstl
cmp
or
pushf
pop
ss
add
loope
iret
push
jb
mov
sbb
xor
addr16
push
sbb
rcrl
mov
pop
jo
ja
jbe
test
jae
mov
or
and
ja
pop
jae
jb
jae
jbe
xor
daa
outsb
je
das
inc
mov
fisubl
or
push
mov
leave
mov
nop
add
add
mov
xor
mov
inc
jmp
neg
push
dec
pop
aaa
xor
int
test
inc
loope
lds
adc
popw
push
pop
dec
lcall
jno
jns
fidivs
lret
fcomps
pop
add
mov
sub
mov
or
outsb
dec
or
xor
mov
fs
dec
adc
cmc
lods
mov
add
in
mov
inc
ret
jo
cli
clc
pushl
mov
or
inc
aam
add
popf
imul
incb
cmpb
mov
inc
js
mov
or
pop
jle
xor
pop
mov
in
repnz
xor
xorl
mov
pop
adc
fmull
add
jae
out
mov
decl
pusha
insl
push
mov
lret
jnp
or
pushw
xor
jo
gs
pusha
pusha
fisttpll
xor
mov
dec
push
pop
imul
pop
push
mov
mov
repz
addr16
mov
out
mov
and
jb
pop
filds
loope
mov
imul
leave
movl
xchg
inc
sti
jg
dec
pop
dec
jmp
jmp
testb
insb
pop
add
mov
clc
sbb
dec
jo
add
push
push
xor
cs
dec
dec
add
stc
pop
sub
push
mov
call
lods
mov
lea
mov
add
mov
xchg
ja
fisttps
dec
sbb
stc
mov
add
mov
leave
dec
or
std
inc
xor
cltd
mov
lods
xor
shl
out
cmc
add
lea
call
xor
pop
pop
pop
push
push
push
sub
inc
movswl
jg
mov
dec
mov
add
inc
dec
or
or
je
ljmp
rorb
loope
dec
jg
addl
pop
jle
jge
add
xchg
add
xor
fucomip
pop
inc
mov
xor
push
add
push
push
pop
sub
push
push
idiv
and
push
call
mov
call
jmp
or
pop
popa
jge
insl
subb
xchg
xor
cmp
sti
out
out
dec
add
push
xchg
sbb
or
xorl
into
push
test
pop
or
clc
ljmp
ja
pushl
dec
add
add
inc
inc
add
hlt
cmp
mov
push
js
and
add
add
ss
push
dec
sbb
in
mov
je
adc
call
jmp
mov
cli
sarl
xor
fcoms
ja
adc
jae
and
fimuls
jg
sub
sub
shl
shr
sbb
test
pop
cld
add
adc
and
or
aad
pop
fwait
cmc
shll
cld
pop
pop
out
fwait
dec
popw
shlb
pop
gs
ret
rcrl
sbb
aas
inc
outsl
push
and
idivl
cmp
pop
mov
xor
dec
and
mov
setnp
inc
inc
push
dec
aaa
push
xor
pop
clc
xor
xor
push
add
push
mov
popl
dec
sub
sub
xlat
add
jmp
sar
imul
adc
cwtl
xor
clc
jle
pop
es
or
inc
subb
inc
inc
testb
and
aaa
je
sbb
test
adc
inc
das
aad
test
mov
cmp
cmc
or
fnstcw
arpl
pop
jae
outsb
negb
xor
out
dec
inc
dec
cmpsb
and
mov
dec
push
pop
gs
push
fdivs
cs
inc
testl
push
mov
test
lahf
outsl
ret
sarb
push
mov
sub
shll
sbb
cmp
jo
fs
inc
mov
ja
in
and
or
push
jae
loope
jmp
push
jne
xchg
or
jb
movsb
mov
inc
pusha
gs
push
sbb
sub
xor
or
xlat
sti
adc
mov
xchg
push
inc
push
xchg
mov
xchg
dec
xchg
cmp
add
pop
dec
cmp
rcll
pop
dec
pop
xchg
cmp
test
mov
sahf
cmp
add
lea
loop
pop
adc
jo
add
xor
bound
fisttps
mov
push
push
lock
pop
xor
xor
xor
je
imul
ficomps
test
cs
ss
mov
xor
xor
cmp
in
push
pop
or
scas
negl
in
inc
push
push
xchg
movsb
push
dec
push
push
mov
mov
movsl
sbb
data16
fxch
out
lea
faddl
sub
inc
sti
dec
xchg
pop
pop
sub
sub
or
scas
adc
push
add
nop
dec
dec
push
out
imul
push
jne
icebp
xor
sbb
aaa
outsl
mov
add
rcr
push
inc
push
push
outsl
push
jns
adcb
dec
das
cld
xchg
mov
inc
inc
outsb
push
pop
push
inc
xor
and
arpl
fs
inc
mov
adc
cmp
cmp
and
pop
push
push
leave
jmp
outsb
jns
xor
lea
cmp
insb
es
jns
stos
out
cmp
adc
push
xor
xor
mov
cmp
mov
push
push
loopne
mov
adc
testl
push
nop
jb
jecxz
mov
adc
mov
inc
or
sub
das
jecxz
inc
sbb
pop
dec
inc
ds
jo
dec
cwtl
insl
jns
cmc
sbb
movswl
sub
insb
cmp
mulb
sub
jae
adc
sub
imul
inc
sbb
outsb
movsb
sub
mov
addr16
imul
jo
push
popa
gs
std
mov
mov
addr16
dec
push
loopne
popf
shlb
jle
dec
subl
fsubrs
push
xor
jae
inc
mov
dec
jo
jae
add
scas
dec
inc
shll
inc
sub
outsl
add
and
je
stc
add
jns
les
add
lods
outsb
das
cmp
daa
mov
and
pop
and
das
push
push
mov
mov
xor
inc
loopne
add
shrb
jp
outsb
xchg
inc
outsl
jne
xor
daa
popa
add
or
xor
imul
or
dec
dec
push
mov
and
cmp
sub
sub
xchg
stc
in
mov
adc
inc
pop
adc
dec
dec
jnp,pn
sub
dec
push
inc
les
call
push
enter
bound
fiadds
inc
add
sub
sti
xor
shll
inc
push
dec
sub
and
push
push
pop
and
cmp
dec
dec
inc
mov
addr16
gs
adc
imul
cmpsl
dec
push
push
add
das
cs
roll
adc
aad
cmp
fists
add
aaa
fsubrl
sub
push
pop
xchg
jae
bound
cmp
xor
das
dec
inc
and
loopne
xor
sbb
in
jnp
das
idivb
xchg
xchg
xor
fs
or
nop
cmp
adc
or
inc
dec
mov
shll
push
cs
shlb
pop
jno
popa
enter
adc
loope
add
push
fbld
pop
dec
insb
push
mov
jmp
dec
sub
rcll
test
popf
sbb
ds
mov
icebp
inc
js
test
and
jnp
dec
push
addr16
fwait
xor
fwait
mov
push
dec
aad
insl
mov
ret
add
or
scas
clc
sbb
xor
push
sub
or
jae
test
inc
mov
dec
push
or
and
divb
les
dec
dec
pop
and
xchg
dec
cmp
inc
insb
imul
js
insl
stc
pop
aaa
or
sbb
je
js
add
push
jno
dec
add
xchg
jbe
mov
call
pop
outsb
loopne
shl
inc
dec
pop
inc
push
cmp
mov
cmp
adc
sub
call
add
dec
push
xor
sbb
inc
or
pop
pop
dec
and
push
outsl
dec
arpl
imul
push
lods
movsl
jg
sti
inc
inc
push
fstp
fistl
lea
sbb
jne
mov
and
les
jo
or
xchg
gs
imul
and
dec
dec
dec
inc
paddusw
dec
inc
mov
push
dec
fmuls
adc
push
jo
movsb
mov
das
imul
std
arpl
add
pop
pop
imul
adc
out
cmp
dec
inc
popf
fildl
mov
mov
es
ficoml
lods
and
insb
sbb
mov
int
sbb
daa
sub
inc
pop
or
pop
fbld
mov
jb
pop
push
aaa
fdivs
cmp
outsb
test
outsl
mov
fs
mov
and
addr16
insb
fs
dec
lcall
pop
hlt
aam
add
orl
mov
add
rol
push
cwtl
mov
rcll
mov
dec
inc
xchg
mov
inc
xchg
xor
add
sub
je
sub
jbe
lock
and
popa
jbe
adc
mov
outsl
inc
push
dec
push
dec
loopne
sahf
mov
aaa
inc
cmp
loope
pop
pop
pop
dec
inc
xlat
rcll
lret
push
out
add
divl
or
cmp
lods
in
jns
add
rorb
cmp
fiadds
inc
pop
or
das
pop
xor
daa
jno
enter
xor
leave
leave
enter
xor
enter
je
xor
leave
ss
leave
leave
enter
cmp
ror
enter
jns
leave
leave
dec
jnp
pop
or
into
leave
enter
or
imul
or
xor
ja
fwait
and
push
enter
outsl
push
xor
and
pop
es
pop
nop
mov
repnz
insl
xchg
cmp
and
in
sub
pop
sub
jns
xor
sub
cmp
cmp
push
or
arpl
cltd
fcoms
add
adc
mov
mov
inc
daa
push
ds
push
pop
adc
lods
sub
aas
sub
cmp
daa
dec
imul
add
cmp
imul
enter
or
je
dec
popa
popa
push
cmpsb
adc
push
cs
shll
popa
dec
leave
addr16
lcall
pop
imul
adc
lret
jle
xchg
cmp
dec
xchg
pop
cmp
adc
add
xchg
adc
push
ss
push
fadds
dec
push
adc
add
adc
mov
mov
cs
enter
pop
jl
xchg
jbe
or
inc
push
push
dec
pop
push
push
push
and
or
fiaddl
or
add
push
xchg
popf
mov
aaa
das
dec
dec
pop
or
xchg
mulb
pop
or
inc
ja
scas
mov
or
push
or
shll
xlat
inc
push
or
pop
and
pop
or
cmp
dec
or
and
pop
mov
out
or
dec
fdivs
inc
dec
or
dec
mov
or
test
dec
sbb
xlat
nop
xor
punpckhdq
insl
mov
sub
sub
pusha
aaa
or
popa
cltd
fs
dec
xor
fs
dec
push
arpl
fs
dec
push
cltd
xor
xor
data16
fisubl
push
pop
je
dec
cmp
jg
adcl
inc
lret
in
xchg
ret
fs
movl
bound
and
lock
sub
ss
jne
lcall
xor
inc
push
repnz
mov
arpl
insl
and
ja
xchg
lahf
add
loope
dec
andl
rorl
xchg
add
and
std
mov
adc
das
arpl
shll
xor
mov
loopne
cmp
notl
and
and
les
outsl
jmp
sub
add
jae
ss
bound
add
push
dec
ret
dec
dec
mov
bound
push
add
fisubrl
push
push
outsl
movl
push
and
push
sub
jo
jns
movb
imul
fs
push
xor
sbb
jne
insl
inc
dec
push
dec
cmp
dec
shll
and
clc
insb
imul
imul
xchg
pop
push
dec
cmp
sbb
sbb
cld
imul
int3
rcl
dec
shll
dec
shll
cmp
xor
xor
adc
imul
or
rol
mov
rcrb
xor
and
sbb
pop
ss
adc
imul
lcall
imul
imul
rorb
imul
dec
sarl
shll
inc
cmp
sbb
clc
addr16
imul
mov
ror
addr16
nop
xorb
xor
rcrl
cmp
sub
or
data16
cmpsb
imul
cmpsb
imul
cmp
sbb
clc
gs
shll
mov
xor
shll
mov
dec
rcrl
xor
sbb
imul
cmpsb
imul
cmpsb
imul
imul
shll
mov
dec
movsb
cwtl
mov
shll
dec
cmp
and
xor
rclb
lahf
arpl
fdivs
mov
xchg
shll
fs
dec
shll
sbb
lcall
in
les
cmpsb
imul
dec
xor
adc
pusha
call
xor
shll
mov
xor
pop
dec
inc
xor
lcall
pop
in
fsubl
sarb
mov
pop
imul
xor
cmpsb
or
pop
lock
dec
shll
pushf
mov
fs
dec
shll
adc
imul
cmpsb
imul
cmpsb
imul
cmpsb
fldenv
push
fmul
mov
mov
xchg
jl
cmpsb
imul
insb
lcall
mov
dec
shll
xchg
test
shll
xor
pushw
es
sbb
aaa
pop
push
lcall
mov
cmpsb
imul
cmp
and
or
dec
mov
cld
pop
in
loopne
mov
lods
pushf
mov
shll
sub
lcall
pop
call
imul
cmpsb
imul
imul
dec
shrl
shlb
mov
shll
sbb
fnstenvs
hlt
push
call
cmpsb
imul
cmpsb
imul
imul
dec
shll
les
lods
mov
shll
sub
lcall
push
in
fsubrl
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
shll
mov
dec
shll
dec
cmp
sub
xor
and
push
push
imul
cmpsb
imul
imul
cmpsb
imul
push
nop
cmpsb
imul
data16
xchg
mov
imul
cmpsb
imul
shll
test
dec
shll
push
inc
ss
shll
sub
or
dec
imul
imul
imul
cmpsb
imul
shll
cwtl
mov
xor
js
pop
dec
cmp
ss
shll
sbb
add
dec
imul
imul
imul
mov
clc
dec
in
shll
nop
sbb
mov
xor
jb
xor
xor
imul
jl
xor
pop
jb
dec
push
xchg
sbb
jbe
xchg
cmp
popw
push
fadd
clc
sub
lds
bound
insb
iret
jle
outsb
imul
xor
pop
insl
jae
popa
sti
sub
jbe
nop
andl
jbe
ljmp
and
aas
inc
sub
push
cs
out
idiv
xchg
cmp
inc
inc
dec
push
or
mov
test
inc
das
les
pop
dec
dec
inc
inc
dec
inc
push
dec
push
sbb
add
jae
inc
push
push
push
dec
push
fstp
mov
push
inc
sbb
jmp
in
and
sbb
inc
dec
dec
shufps
pop
aad
nop
cmp
ds
inc
call
adc
inc
imul
mov
push
dec
push
outsl
jg
dec
xor
pop
inc
inc
dec
dec
mov
dec
add
outsl
dec
push
mov
das
adc
and
push
push
in
sbb
lea
aas
pop
add
xor
dec
pop
push
mov
dec
movsl
push
pop
sub
push
repnz
mov
iret
in
outsl
add
sub
pop
pop
push
dec
mov
lods
cmp
cmc
mov
mov
out
dec
push
xlat
loop
cs
adc
pop
das
sub
in
fwait
adc
addr16
dec
push
dec
dec
dec
aas
enter
inc
push
inc
dec
mov
dec
inc
inc
inc
inc
cmp
pop
mov
add
negl
cli
pop
pop
fadds
aaa
sti
push
outsl
cmpsb
cld
ret
cmpsb
sbb
pushl
xor
cmp
fistl
lret
negl
jnp
cwtl
bound
ja
pop
push
sbb
pop
fs
push
dec
sbb
fstl
dec
pop
adc
dec
and
cmp
inc
fldt
hlt
rcll
mov
cs
inc
aad
add
xor
jnp
pop
fidivl
popa
push
out
dec
fbstp
dec
sbb
xor
push
xor
inc
faddp
push
fsts
xor
arpl
cli
cli
roll
push
ss
fcoml
adc
mov
push
push
testl
inc
cmpsl
jae
or
aaa
add
mov
dec
clc
scas
mov
sbb
push
lods
inc
push
jbe
imul
loopne
movl
mov
gs
adc
pop
xchg
xchg
test
jge
inc
mov
add
adc
push
sbb
dec
ret
jmp
dec
jg
inc
sbb
xchg
inc
mov
pop
sarb
aaa
inc
fildl
inc
inc
dec
xor
mov
inc
inc
dec
dec
inc
push
rdmsr
sub
out
pop
cmp
sub
in
push
push
adc
inc
xor
mov
cmp
dec
or
lret
sbb
das
lcall
pop
insl
pop
roll
dec
jg
aaa
sbb
ja
dec
das
jnp
add
cmp
pop
cwtl
or
push
cmp
push
pop
data16
mov
sbb
xchg
xor
test
push
lcall
movsl
cmp
inc
mov
adc
test
fcomp
pop
aaa
inc
test
je
jns
or
push
int
push
inc
pop
xor
mov
pop
push
shll
xor
shl
or
push
dec
pop
adc
push
pop
pop
pop
pop
dec
outsl
push
int
orb
movsl
ret
push
mov
dec
push
stos
arpl
in
inc
aas
cmp
dec
inc
pop
dec
repnz
adc
mov
push
outsl
dec
daa
dec
push
imul
push
inc
inc
scas
inc
aas
dec
dec
in
inc
adc
dec
add
daa
sub
inc
inc
lahf
mov
in
inc
xchg
sbb
dec
mov
movhps
pop
in
out
push
fbstp
push
inc
dec
orl
jo
imul
jle
inc
inc
pop
xchg
shll
push
dec
mov
xchg
sbb
incl
jnp
sub
adc
and
cmp
sub
mov
and
push
mov
test
mov
cs
inc
inc
cmp
fnstcw
rolb
sbb
int
ret
arpl
pop
dec
xor
pop
fcmovu
mov
push
push
sbb
dec
inc
sub
insl
je
jg
push
ret
mov
pop
sbb
mov
call
push
dec
inc
incl
inc
push
inc
in
fistl
inc
inc
push
mov
mov
inc
push
push
subl
aas
in
adc
dec
iret
inc
push
pop
dec
inc
popa
pop
adc
push
push
cmp
mov
sbb
aaa
aas
sbb
push
add
push
xchg
add
int3
mov
push
ds
lahf
push
push
dec
in
push
in
or
push
push
inc
inc
mov
push
jecxz
pop
test
mov
outsl
daa
add
scas
shlb
inc
lea
sarl
dec
pop
push
notl
adc
push
inc
jno
adcb
dec
fucom
mov
ja
pop
inc
inc
ja
sbb
push
in
or
ret
push
inc
test
adc
or
arpl
addb
bound
sbb
andb
fdivrs
popf
imul
int
inc
lret
or
inc
inc
gs
pop
mov
cwtl
pop
aad
push
outsb
xchg
das
or
push
inc
push
dec
lahf
mov
push
dec
pop
inc
call
dec
adc
dec
push
xor
xor
push
divb
aaa
pop
xor
call
mov
mov
sbb
pop
aaa
dec
pop
call
jb
pop
dec
dec
xor
aaa
ss
xor
std
movsb
outsb
push
add
mov
or
pop
out
pop
imul
mov
pop
mov
pop
inc
dec
popl
inc
jno
push
add
imul
mov
xchg
das
sub
data16
mov
jge
push
push
outsl
dec
sbb
pop
mov
dec
pop
pop
scas
cli
cltd
pop
inc
inc
or
out
out
add
insb
push
stos
push
cld
xor
dec
sbb
push
in
push
xor
inc
ss
mov
xchg
inc
add
inc
pop
dec
addr16
mov
cmc
dec
imul
popa
orb
jg
push
or
out
imul
xchg
inc
lock
push
pusha
sub
aaa
std
mov
push
cmp
aaa
sbb
aad
pop
inc
dec
cmpsb
cmp
pop
jg
xor
xor
pop
push
push
pop
mov
pop
pop
stos
ret
aas
pop
xor
in
inc
emms
push
pop
pop
pop
imull
add
cmp
jge
sub
jnp
aaa
inc
and
rclb
lret
push
jno
in
jne
mov
leave
cmp
repz
dec
push
incl
mov
sub
sub
sub
outsl
imul
inc
dec
xlat
dec
xchg
sbbb
mov
insl
xchg
dec
push
add
sbb
inc
test
jl
inc
xchg
test
lahf
push
xlat
arpl
rorb
adc
jge
dec
push
dec
push
or
lods
popf
or
inc
pop
pop
adc
mov
sti
pop
mov
sub
sub
sysenter
cmp
or
dec
aad
mov
movsl
xchg
dec
push
dec
add
stos
mov
dec
ss
cmpsb
dec
mov
sbb
pop
cmpsl
dec
cmp
add
shlb
inc
push
pop
mov
insb
jno
inc
rcll
outsl
dec
repnz
dec
and
rol
inc
dec
sbb
push
push
cmpsb
cmpl
push
data16
inc
mov
sub
fisubs
push
inc
ja
repnz
adc
dec
push
pop
jno
test
aaa
dec
push
imul
lcall
jo
inc
xchg
dec
sbb
jg
xor
jecxz
jns
inc
cwtl
sbb
subb
pop
xor
inc
push
xor
xchg
outsb
movsl
insb
es
adc
mov
mov
insb
mov
lret
sbb
mov
inc
pop
pop
popw
insb
jno
outsl
imul
dec
dec
dec
pop
lods
popa
in
inc
dec
push
pop
adc
jne
mov
push
xchg
lea
pop
jge
jnp
or
xor
dec
pop
outsb
ss
dec
or
or
sahf
test
dec
dec
ja
imul
daa
mov
pop
pusha
pop
test
or
movsl
cmpsb
dec
add
mov
sbb
rcrb
push
bound
dec
ret
dec
mov
xlat
mov
and
jg
mov
pop
xor
xor
xor
pop
in
pusha
aaa
dec
ja
xchg
adc
xor
sbb
pop
inc
adc
movsl
pop
and
enter
mov
pop
es
dec
push
inc
or
dec
dec
xor
add
mov
test
mov
pusha
out
pop
mov
pop
jecxz
push
loopne
orl
push
push
add
push
mov
xchg
or
rcll
push
inc
dec
sub
push
inc
or
push
aaa
and
dec
dec
mov
cs
xchg
rolb
loope
aaa
sbb
push
decl
shrb
dec
daa
stc
push
sbb
pop
cmp
outsb
pop
ret
push
outsl
roll
pop
inc
dec
xor
popa
add
cmpsl
nop
dec
add
push
fcmovnu
orb
dec
push
inc
push
inc
adc
repnz
push
inc
push
xor
pop
pusha
insl
pop
fldt
dec
xor
popa
cmpsl
adc
inc
push
jecxz
test
inc
stos
pop
dec
jp
sub
jg
xchg
xchg
and
pusha
movsl
imul
punpcklbw
mov
hlt
mov
sub
inc
fld
add
push
inc
adc
pop
cmp
inc
out
xor
inc
pop
sbb
mov
daa
push
jg
fcmovb
push
das
inc
pop
push
jmp
inc
xchg
push
mov
sbb
aam
mov
daa
dec
jmp
cmp
jg
imul
push
jmp
pop
adc
mov
pop
jns
fsubs
or
outsl
xor
sub
add
insl
sbb
cwtl
add
push
dec
aaa
or
push
sub
push
xadd
or
inc
xchg
pop
in
clc
mov
sub
cmpsl
dec
sti
movsl
popf
je
push
adc
add
sbb
stos
push
lds
stc
fimull
push
adc
shlb
mov
pop
shrl
inc
xor
mov
fstpt
adc
aaa
mov
dec
iret
push
test
sbb
xchg
or
scas
push
pop
push
mov
inc
lods
add
push
jmp
pop
addr16
mov
in
lods
sbb
jl
ret
movsl
sub
mov
pop
inc
push
push
push
pop
bound
in
inc
addr16
sbb
pop
cmp
pop
push
rol
mov
imul
xchg
test
or
cmp
adc
popa
ja
inc
push
inc
push
mov
inc
add
xor
xchg
inc
cwtl
or
or
ss
cmp
xchg
pop
xchg
jecxz
jmp
nop
dec
jmp
sbb
push
jge
xchg
mov
pop
mov
mov
xor
dec
ror
inc
adc
pop
push
lods
ret
mov
mov
movsl
jg
aaa
addr16
add
inc
dec
enter
cmp
pop
sbb
outsl
inc
or
es
jae
inc
sub
dec
pop
xlat
leave
xchg
or
psubw
adc
pop
notl
pop
and
cmpsb
mov
xor
jne
lock
push
xor
dec
das
sbb
and
inc
jl
adcb
dec
and
int3
mov
pop
dec
movsb
add
pop
lods
xchg
push
lds
inc
mov
sbb
xor
das
arpl
and
push
jae
sub
ljmp
sbb
aad
cmp
les
inc
adc
adc
inc
add
je
pop
sbbb
push
sub
pop
jns
and
cmp
xchg
and
dec
pop
jl
mov
mov
sbb
repz
lds
ficoms
cmp
movsb
pop
push
mov
push
add
xor
push
inc
out
ss
push
stos
jg
ja
xchg
scas
jg
and
push
inc
push
insb
cmp
sbb
ret
insb
lds
aas
insl
imul
push
pop
lahf
pop
test
adc
fisttpll
add
jo
iret
inc
jg
xchg
xchg
add
xchg
scas
test
outsb
arpl
ss
lcall
pop
or
rcrl
mov
adc
adc
xorl
cmp
or
dec
push
outsl
mov
das
aaa
pop
add
mov
dec
sub
pop
push
fcmovu
mov
sbb
and
mov
lods
loope
dec
mov
je
inc
loopne
pusha
sbb
and
inc
icebp
mov
push
or
stc
mov
inc
cmp
xor
push
adc
inc
mov
dec
xor
flds
xchg
leave
pop
call
jle
sub
es
push
jbe
ss
aas
dec
cs
das
imul
js
pop
jae
sbb
add
jge
mov
add
js
addr16
imulb
or
push
pop
add
fs
lods
inc
call
fildl
pop
add
jbe
imul
xchg
icebp
es
sbb
push
inc
jecxz
ret
adc
pop
mov
insb
or
add
cld
outsb
clc
dec
pop
pusha
mov
xchg
push
inc
gs
rolb
cmp
sbb
and
adc
dec
popa
jo
js
mov
sbb
push
inc
ja
lds
movsl
cs
mov
fs
xor
les
mov
xchg
push
daa
arpl
lret
jae
test
add
mov
push
pop
push
fistpll
shll
sbb
imul
mov
mov
outsl
inc
jbe
outsl
adc
test
ss
iret
jb
outsl
aas
push
push
arpl
add
adcl
mov
adc
fs
fidivl
adc
lea
cmp
arpl
add
sbb
add
and
adc
ret
popl
sbb
or
sub
push
outsb
jb
lahf
mov
pop
jne
ja
or
xor
fs
inc
test
and
push
pop
push
pop
push
push
orb
jne
dec
jp
and
adc
out
sub
sbb
or
pop
push
dec
ret
gs
dec
dec
insb
nop
scas
rcrb
inc
fcomps
add
sub
pop
xchg
gs
cmp
jmp
jb
insl
xor
push
arpl
push
cli
push
ficoms
rolb
cwtl
in
imul
stos
mov
xor
insb
push
sub
fsubrs
dec
lcall
bound
cmp
pop
xor
xor
jo
cmp
push
xor
mov
adc
mov
jae
jbe,pn
xchg
push
dec
cmp
dec
out
sub
add
aas
ficoms
push
dec
push
pop
addr16
and
push
xchg
push
cmpsb
push
xor
test
xor
test
inc
jb
gs
bound
fs
sub
rolb
jbe
imul
movsb
or
push
movsb
add
pop
inc
fistpl
pop
sub
mov
or
ficomps
adc
or
inc
xchg
or
cmp
lods
daa
mov
pop
dec
xor
das
inc
fadds
mov
jg
jo
popa
int
inc
xor
dec
add
xor
fs
add
add
add
cmc
decl
cmpb
adc
add
mov
push
push
mov
and
sbb
mov
or
incl
push
xchg
lret
adc
or
push
sbb
inc
lds
jns
imul
or
cmpsb
lahf
mull
cs
imul
jb
arpl
dec
push
pop
ss
sub
xlat
je
sub
adc
xor
jbe
sti
ret
mov
push
dec
fs
push
sub
inc
pop
dec
lret
int
int3
insl
fcompl
inc
shlb
inc
xchg
sbbl
lock
loopne
pop
lahf
jbe
je
mov
pop
mov
and
add
arpl
push
dec
arpl
pusha
pop
out
imul
pop
inc
add
jae
pop
mov
movsl
aaa
arpl
add
xor
das
pop
bound
daa
adc
xorl
cmp
pop
pusha
lock
jo
sbbb
data16
and
movsl
push
insb
jo
pop
inc
outsb
jae
insb
jne
cmpsb
out
cmp
insl
jb
jnp
imul
cs
sub
mov
inc
stos
fdivrs
xor
sbb
add
or
mov
insl
pop
fs
and
movsb
das
lods
pop
aaa
mov
mov
push
xchg
scas
push
xor
push
or
dec
outsl
bound
es
mov
rclb
outsb
sbb
push
xadd
cmpb
orb
xchg
push
icebp
divl
repz
cmpb
ja
outsl
jp
mov
popa
das
xor
sub
imul
outsb
stos
arpl
int3
fcoms
mov
jbe
dec
jb
push
jb
inc
fistpl
daa
push
mov
push
inc
adc
and
push
mov
fstpt
data16
ja
test
inc
jge
push
rcrl
jns
aaa
inc
push
add
sahf
mov
add
ret
push
pop
out
add
imul
cmp
lea
arpl
pop
arpl
pop
cs
sbb
jl
cltd
push
out
scas
repnz
add
jbe
pop
shlb
je
fsubr
xchg
jle
rorl
jae
push
outsb
push
push
nop
pop
dec
or
mov
pop
push
dec
or
cmp
mov
arpl
inc
mov
sub
inc
and
push
dec
fs
mov
jbe
pop
sbb
dec
jae
push
inc
ss
jle
arpl
push
push
movsl
inc
pop
inc
hlt
daa
shlb
ja
xor
ljmp
push
pop
inc
inc
pusha
insl
mov
dec
imul
or
insl
sbb
daa
ds
shl
out
mov
pop
insl
mov
movsl
outsb
es
std
mov
popa
inc
push
loope
dec
push
xchg
jae
loopne
inc
push
add
jne
jns
stos
ret
push
insl
outsl
scas
push
je
inc
jae
cli
jae
lea
mov
pop
sub
sub
fwait
and
sbb
sahf
or
sbbl
out
lret
push
jecxz
ret
out
inc
lcall
jne
pop
inc
xchg
jo
jne
mov
imul
daa
push
dec
gs
inc
arpl
lds
jb
sbb
test
fidivl
mov
andb
xor
sbb
imul
imul
fdivrl
mov
leave
flds
jle
mulb
sub
fidivrs
popa
lds
sbb
add
or
bound
cs
lock
popa
ja
push
jae
movsl
fcomps
idivb
mov
push
cwtl
pusha
adc
into
rolb
mov
jb
inc
mov
das
imul
ret
insl
faddl
sahf
pop
in
jo
ret
aaa
add
adc
pop
mov
call
add
lock
mov
adc
insl
mov
orl
inc
xchg
inc
jo
jb
sub
dec
mov
insl
int
pop
inc
jns
mov
call
push
outsb
and
jae
xor
pop
jmp
mov
sub
push
bound
and
or
inc
pop
push
ret
scas
dec
xor
cmpb
or
in
jo
xor
xor
cmpsb
xor
addr16
aad
loopne
das
push
daa
xor
ss
xor
in
movsl
add
cmpb
mov
mov
dec
or
push
push
push
dec
inc
cmp
and
and
and
xor
add
incb
lock
hlt
addb
aas
mov
rcll
inc
dec
addr16
insl
dec
or
push
je
jo
push
insl
cltd
test
sub
xchg
add
jecxz
and
push
fs
movsb
addl
push
add
dec
xchg
dec
mov
mov
pop
jmp
in
nop
icebp
lods
rcl
aaa
fisubrs
adc
mov
cmp
fnsave
insb
movsl
push
pop
movsb
daa
xchg
mov
clc
and
jbe
popf
enter
mov
push
mov
mov
push
mov
or
enter
rclb
xor
push
or
fucom
or
imul
imul
mov
daa
repnz
pop
ljmp
mov
sarb
in
xchg
push
xchg
test
inc
cmovp
inc
mov
and
gs
aam
mov
mov
or
rorb
test
lods
pop
inc
lret
orl
sbb
mov
pop
sub
cmp
pop
sbb
fs
jmp
jnp
jb
sbb
xchg
pop
bound
and
pop
addl
xor
data16
xlat
push
jo
inc
push
bound
push
loopne
pop
pop
adc
addr16
add
or
mov
dec
dec
fildl
mov
dec
fmull
jne
stos
and
push
add
dec
xor
dec
sahf
bound
mov
in
icebp
rol
adc
insb
lret
add
sub
lea
jg
jo
in
out
arpl
arpl
push
mov
and
xchg
push
loope
mov
push
das
and
or
pop
pop
pushf
inc
shll
mov
cmpb
jne
mov
mov
jns
pop
push
cs
push
stos
in
movntps
insl
test
fsubl
fmull
xor
pop
xor
adc
add
adc
and
xlat
adc
pop
fisubl
das
pop
push
rcr
fmull
imul
pop
pop
sbb
cmp
es
mov
mov
dec
jecxz
add
pop
mov
push
add
hlt
push
lea
pop
fidivrl
aaa
add
xchg
std
or
push
and
xor
mov
xor
add
sbb
and
movsb
mov
mov
xchg
in
push
fstpt
scas
sub
jae
jne
sbb
out
or
fdivs
scas
mov
adc
sub
ljmp
push
xchg
pop
sbb
push
aas
aaa
sbbl
out
push
and
xchg
scas
outsl
push
xor
push
lods
ss
pop
popa
js
call
mov
ret
insl
xor
sub
sbb
fs
or
dec
pushf
jbe
movsb
jae
push
shll
mov
sbb
daa
pop
mov
data16
outsb
add
add
xchg
dec
jne
bound
cmp
lods
xor
sub
ret
pop
roll
jb
mov
adc
sbb
loopne
lret
push
and
inc
insb
js
push
fsubs
ret
jmp
dec
inc
ljmp
es
add
je
inc
add
sub
out
mov
add
out
out
fisubl
mov
push
cmp
pop
outsb
mov
imul
enter
jnp
mov
push
and
push
pop
shrl
jnp
jne
mov
pop
add
jbe
add
add
in
jmp
loop
aaa
pop
insl
outsb
test
les
sbbb
fistpll
bound
mov
outsb
outsb
or
imul
hlt
outsl
jo
rorl
cmp
sub
dec
js
or
outsl
and
cmp
lret
repnz
stos
test
add
jo
mov
mov
fadds
insb
jns
adc
in
jns
or
push
subl
sbb
add
pop
in
pushf
sbb
mov
shlb
mov
rol
pop
leave
jecxz
call
and
add
test
or
jb
adc
add
cs
inc
jne
add
push
repz
adc
dec
movsl
into
jno
dec
sbb
test
push
and
xor
dec
mov
popf
rcr
push
jo
pop
dec
add
jecxz
jnp
mov
push
push
movsb
pusha
repz
cmp
xchg
out
mov
sbb
add
bound
ss
rorl
js
or
mov
jns
out
das
inc
push
add
mov
popa
out
push
outsb
or
sub
js
loopne
sbb
inc
pop
push
push
and
loope
js
jo
ds
push
das
in
push
pop
ret
jne
xlat
sub
and
gs
pop
loope
cmp
pop
sub
fcmovu
aad
iret
xchg
dec
gs
jnp
or
sbb
dec
insl
movsw
je
mov
aas
pop
lock
imul
test
sub
push
mov
pop
sub
pop
nop
xchg
add
push
dec
sbb
mov
loopne
loopne
fstps
int3
pop
push
xchg
mov
inc
adc
lea
jp
dec
push
ja
popa
aaa
or
adc
xchg
mov
pop
cmp
sub
sbb
test
or
fisubs
xchg
pop
lock
int3
sarb
cmpsb
cmp
inc
imul
cmpb
lcall
xor
rcrl
inc
cmp
xor
shll
sbb
or
cs
xchg
lock
call
popf
cmpsb
fmul
les
jbe
push
lods
push
movsb
pushf
cwtl
xchg
xor
shll
jl
push
rcll
cmp
dec
shll
or
lcall
xchg
clc
hlt
shll
es
dec
shll
mov
imul
or
js
jo
push
pusha
push
dec
inc
xor
imul
ss
cmpsb
add
xchg
lock
outsl
imul
lods
cwtl
shr
pop
mov
xchg
xchg
mov
and
dec
je
pop
rorl
cs
push
push
dec
cmpsb
imul
imul
push
jmp
cld
xchg
mov
test
outsb
lea
cmp
out
push
push
cmp
add
inc
sbb
mov
scas
addb
imul
inc
cmpsb
pop
int3
lods
dec
cmp
arpl
into
bound
shl
xchg
out
outsb
xor
mov
push
mov
xor
xor
push
or
ret
scas
xchg
insb
insl
mov
bound
adc
fistl
pop
push
adc
outsb
pusha
push
pop
push
out
adc
js
js
insb
jne
push
insb
cmp
inc
jne
loopne
xor
arpl
jb
data16
popa
daa
jne
je
outsb
fcmovnu
dec
aaa
inc
xor
pop
or
pusha
push
fucom
mov
push
movq
mov
mov
scas
or
pop
sub
xor
fadds
and
jae
daa
add
inc
imul
fisubrs
push
jbe
ret
push
pop
cmpsl
out
ds
push
inc
bound
add
jp
in
push
pushf
rcrl
xor
mov
ss
in
pop
rorl
aam
imul
xor
cmp
dec
cmpsl
gs
fsts
ret
pop
push
add
outsb
mov
push
sahf
out
push
sbb
and
mov
jb
add
gs
pop
sbb
cmp
cs
cmp
sub
pop
jb
mov
fcoml
jbe
rorb
wbinvd
paddusw
iret
insb
aas
test
imul
nop
mov
sbb
xor
xor
in
pop
popf
inc
xor
xor
xor
mov
add
das
inc
btr
aas
push
push
adc
dec
jo
fbstp
and
mov
add
dec
shl
test
arpl
fadds
xchg
adc
icebp
cmpsl
mov
orl
movsl
ja
xor
add
mov
xor
das
inc
xchg
outsb
pushf
out
push
ror
push
or
pop
cmpsl
jb
xor
in
push
adc
pop
xor
mov
sub
dec
rcrb
pusha
loop
sub
sub
add
jns
pop
out
jo
push
dec
and
inc
sub
mov
adc
pop
mov
push
sub
jbe
icebp
test
cs
lods
or
das
inc
push
and
mov
ja
dec
add
add
nop
or
pusha
push
jmp
int3
add
push
or
inc
lock
jne
inc
dec
loope
xor
or
inc
sarl
xor
fstpl
inc
fstps
je
aaa
out
sbb
pop
push
and
sub
push
pusha
pusha
adc
aaa
or
loopne
cmpsl
inc
sbb
aas
cmp
mov
test
arpl
xor
inc
imul
lahf
sahf
lahf
mov
sbb
lods
pop
nop
add
outsl
jg
fdivs
push
push
popf
idivl
sbb
sbb
push
push
and
xlat
inc
or
dec
add
xchg
not
mov
cmc
outsb
or
xchg
popf
cs
mov
pop
dec
mov
shrl
popl
dec
test
outsl
mov
andb
enter
adc
iret
mov
mov
inc
out
pop
cld
stos
or
and
fmulp
xchg
cli
pop
je
or
add
add
gs
push
inc
test
and
shrb
jne
sub
pop
shlb
fimull
fcomps
popa
das
mov
dec
movsl
adc
out
sbb
jmp
jnp
insl
sub
dec
ret
pusha
shlb
xor
outsl
dec
dec
lret
lods
or
xlat
jmp
mulb
pop
xchg
cs
iret
push
stos
sbb
inc
hlt
xchg
or
inc
cvtpi2ps
jb
push
insl
sub
ret
mov
pop
mov
add
and
inc
cmp
adc
inc
sub
mov
adc
push
jo
sbb
or
call
inc
push
dec
insl
jg
testl
outsl
xor
dec
cwtl
and
inc
and
or
pushf
mov
mov
xor
pop
mov
mov
or
push
push
mov
test
insb
mov
inc
daa
insl
addr16
push
pop
push
iret
dec
jmp
add
dec
outsl
mov
nop
mov
mov
or
lds
ret
popa
ja
rorl
push
mov
or
sahf
sub
bound
in
xlat
sub
or
fldl
test
sub
mov
inc
loope
add
push
mov
push
ja
aas
push
dec
adc
mov
addb
popl
inc
dec
add
aas
xchg
pop
and
aaa
cli
xor
pop
or
inc
push
aaa
jno
test
mov
inc
cmc
stos
shl
or
sub
dec
arpl
or
mov
xor
xchg
add
cs
pop
subb
cmovg
add
xlat
outsb
bound
xchg
xorb
lods
mov
xor
mov
das
mov
daa
data16
faddl
adc
xor
fldl
ret
popa
ltr
pop
adc
test
mov
ja
mov
jb
es
lea
pop
xchg
inc
rorl
sysret
inc
push
and
mov
jae
cs
inc
adc
xor
xchg
in
add
or
movsb
mov
push
inc
addr16
jno
jo
sbb
outsb
mov
js
ja
mov
aas
cwtl
aas
aam
push
outsl
pop
adc
pop
add
andb
inc
add
cmp
mov
or
mov
push
sub
pop
daa
mov
push
vmovups
sbb
xchg
mov
sbbb
or
sbb
fnstenv
xchg
aaa
adc
mov
adc
sub
adc
mov
adc
aam
hlt
adc
jecxz
mov
das
sbb
and
pop
ja
punpckldq
add
add
inc
push
dec
sub
aaa
dec
or
push
or
jae
adc
and
aas
adc
dec
ret
xchg
sti
addr16
or
mov
addr16
loopne
inc
or
addr16
js
nop
mov
xor
mov
aaa
push
mov
arpl
add
jo
push
pop
push
xlat
inc
pop
adc
insb
fbstp
xchg
push
jo
or
jg
test
cmp
mov
addr16
dec
leave
adc
test
adcl
pusha
or
mov
adc
or
jg
push
rcrb
mov
add
cmpsl
inc
call
inc
mov
js
mov
push
loop
jle
cmpb
insl
sub
cli
jae
inc
pusha
lcall
pop
js
subb
mov
test
push
mov
xorb
popa
inc
push
mov
jns
adc
lds
jns
es
inc
mov
and
push
dec
out
xor
pop
push
xchg
pop
mov
pop
adc
ja
xchg
push
aad
outsl
dec
dec
lods
add
jae
mov
addr16
mov
dec
or
push
inc
or
arpl
adc
and
icebp
sbb
mov
xor
out
loopne
push
in
fists
mov
or
push
sbb
push
mov
pop
push
sbb
adc
sub
insb
stos
pcmpgtd
jecxz
sti
dec
and
dec
jo
lretw
dec
push
sbb
cmp
loope
adc
mov
in
dec
cmp
inc
jae
sub
dec
push
lcall
sbb
dec
add
xchg
dec
or
lods
sub
iret
loop
test
or
jg
sbb
lock
pop
inc
mov
inc
xchg
out
lcall
jb
inc
or
fstpt
or
add
out
insl
dec
push
or
inc
add
andb
mov
push
insb
inc
test
addr16
into
ja
xor
fs
popa
jle
xor
into
push
add
popa
fdivs
inc
jecxz
mov
lea
inc
jp
pop
add
popa
cmpb
testb
outsb
outsl
insb
outsb
ja
sbb
mov
inc
cmc
outsl
test
imul
mov
xchg
or
and
nopl
cmp
arpl
insl
jbe
sarl
test
sbb
and
jae
cmpb
fidivs
xchg
rorl
fmull
push
push
ret
push
mov
mov
push
fsts
jb
fnstenv
dec
sub
jbe
xor
cmp
jmp
xor
jno
stos
popa
mov
sahf
push
rol
and
daa
insl
das
cmpsb
insl
and
jo
out
lahf
test
mov
movsl
bound
mov
jno
xor
mov
jo
xor
lods
mov
cs
aaa
test
mov
adc
lds
mov
lret
jns
sub
pusha
sbb
sub
mov
outsl
inc
and
rcll
lods
dec
lods
or
push
lods
aaa
push
imul
test
add
insl
lea
pop
aad
cmp
and
mov
ficoml
dec
shrb
movl
mov
sbb
xchg
imul
fbstp
daa
sub
xchg
jb
aaa
and
out
push
push
pop
les
mov
mov
push
out
imul
push
jo
dec
and
aaa
outsb
push
push
mov
jb
dec
and
push
push
pcmpgtd
adc
mov
pop
jno
add
loopne
xchg
fstl
shrb
mov
into
shr
outsb
xchg
shr
rclb
or
icebp
je
fildl
inc
daa
mov
mov
add
or
mov
mov
jo
push
out
or
pop
cmp
rcll
pusha
pop
dec
push
xchg
cmp
nop
mov
push
out
ds
push
xchg
push
scas
mov
push
push
push
add
aad
outsl
adc
push
sub
dec
sahf
push
and
push
ret
add
call
icebp
dec
adcl
jae
jae
insl
rclb
data16
push
inc
imull
out
inc
psubusw
addr16
jno
add
pushf
sub
adc
clc
mov
mov
incl
bound
ror
xor
or
mov
add
or
adc
cmpsb
add
loope
adc
and
ja
ret
jae
insb
pop
adc
mov
ss
ffreep
mov
ret
aaa
mov
call
into
nop
push
pop
jbe
cmovb
and
inc
scas
cmpl
adc
daa
data16
ret
arpl
push
fadds
jecxz
fcmovb
sbb
out
clc
call
cmp
bnd
ss
jns
inc
out
inc
fidivl
push
pop
or
or
mov
xor
jns
add
pop
mov
loopne
insb
mov
add
cs
test
add
mov
mov
stc
push
or
inc
popa
in
mov
push
nopl
xor
ljmp
mov
inc
negl
mov
jmp
cmp
mov
imul
and
push
loope
jns
sbb
aaa
popa
outsb
jne
rcll
and
inc
sub
add
cltd
sbb
sub
sbb
out
ficoms
inc
fwait
and
add
add
inc
ret
xor
xor
or
or
cs
insb
xor
or
or
ja
push
iret
int
mov
in
dec
addr16
inc
xor
repz
popa
lock
inc
and
pop
adc
sub
mov
dec
push
sbb
jle
adc
sub
sarl
inc
add
out
rorb
stc
daa
add
cmp
add
jl
insb
fs
mov
add
ss
xor
add
lret
in
imul
dec
jl
or
insl
fnsave
xor
fs
jg
les
inc
mov
add
pop
xor
sti
fists
push
incl
stc
das
mov
adc
imul
inc
xor
jg
push
adc
inc
or
or
xor
inc
jl
mov
mov
add
add
mov
mov
add
mov
push
push
and
adc
jne
mov
int
xor
jb
push
push
mov
inc
jg
xlat
add
add
add
std
in
je
sub
into
sbb
mov
pop
jo
add
call
js
in
in
dec
ret
pop
pop
pop
push
sub
jg
mov
jns
inc
mov
repz
sub
ljmp
push
push
push
les
push
je
sbb
push
call
add
ret
mov
mov
faddl
or
insb
pop
movsl
fwait
ja
xchg
outsl
jne
pop
jae
pop
sub
scas
aas
jbe
inc
xlat
repz
outsl
lret
jo
pusha
push
and
sub
xchg
inc
cwtl
incl
lock
mov
ss
mov
jne
xchg
adc
ss
imul
add
dec
shll
sbb
shll
pop
or
add
ss
or
jbe
imul
daa
adc
enter
adc
and
sbb
push
sbb
push
das
push
xorps
xchg
and
insb
nop
cmpsb
sbb
push
pop
or
popa
inc
orl
xor
xor
popa
orl
fbld
mov
into
aas
xlat
pop
out
xor
sbb
lods
push
xor
roll
sub
sub
xor
adc
orl
xorb
test
mov
add
fsubrs
dec
lahf
push
or
pop
add
cmp
das
filds
jbe
add
jns
and
aas
jns
movsl
sbbl
or
pop
shll
cmovo
pop
inc
push
enter
mov
sbb
in
call
jg
mov
adc
push
ficompl
mov
xor
fcomp
loopne
jae
jle
rolb
fisubrs
sbb
nop
lea
mov
nop
xchg
imul
xchg
xchg
add
rcrl
movsb
push
pop
mov
sbb
xchg
sbb
push
shrl
push
or
shll
xor
call
dec
shll
push
sbb
sbb
out
mov
sbb
imul
and
enter
mov
mov
push
pusha
cs
call
adc
and
pop
mov
add
sbb
lock
mov
push
xchg
push
inc
jg
ret
cld
loope
loop
icebp
push
fildl
add
push
push
dec
shrl
jg
push
js
mov
shll
repz
xor
shrl
cmp
pop
ja
mov
xor
mov
shl
dec
das
in
cmpsb
cmpsb
push
dec
insb
loope
ja
cld
adc
fldl
add
adcl
outsl
push
jg
jb
add
add
in
inc
pushf
or
ret
psubw
aas
in
hlt
adc
mov
iret
aas
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
popf
imul
sbb
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
ljmp
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
das
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
inc
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
in
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fdivr
jmp
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
ret
add
sti
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
incl
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
std
call
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
aas
xchg
icebp
sbb
and
mov
cmp
std
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
push
xor
xchg
xchg
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
add
jmp
rolb
add
inc
js
popa
outsb
fs
imul
in
inc
sbb
das
push
popa
sub
andl
or
gs
push
pop
daa
rol
jno
dec
pop
loope
addb
pop
pusha
sbb
lret
ficoml
sahf
out
ds
sbb
xchg
mov
inc
push
je
push
outsb
ja
insl
ja
fs
lods
push
inc
test
push
nop
cmp
cmp
dec
jge
pop
xor
daa
push
pusha
loope
arpl
xor
in
xorl
dec
inc
dec
inc
push
adc
push
pop
pusha
loope
dec
inc
sbb
cs
pop
add
fsubs
add
rorb
mov
imul
rcll
popa
push
push
add
inc
outsb
loop
or
lock
xchg
push
and
dec
sbb
cwtl
imul
sbb
sbb
jp
dec
and
loopne
jns
outsl
push
imul
adcb
ret
mov
push
js
das
ds
xchg
jecxz
sub
fistpll
lea
sub
loop
sub
pop
sbb
mov
xor
pop
inc
popa
je
data16
in
adc
inc
je
jecxz
push
mov
inc
enter
mov
sub
pusha
xchg
or
fcomi
insl
int3
dec
sbb
movsl
sbb
pop
aad
push
fsts
imul
popa
arpl
das
sbb
mov
insl
mov
lret
mov
in
movsl
pop
mov
movsb
lods
cmp
jbe
jno
popa
dec
or
in
test
pop
daa
push
jo
imul
push
pop
sub
jo
sbb
jbe
mov
sbb
outsb
cmp
jno
and
push
push
jnp
stc
pusha
add
sbb
push
fwait
adc
jecxz
aad
jnp
mov
insb
jae
arpl
pop
xchg
stos
jns
jo
pop
mov
imul
inc
ret
movsl
cmp
mov
mov
and
insl
int3
xchg
and
inc
arpl
lds
push
pop
mov
lahf
lahf
dec
mov
jae
push
rorl
or
push
mov
add
dec
dec
nop
sbb
push
adc
loope
scas
pop
jnp
jbe
stc
gs
pop
push
ret
dec
inc
jo
pusha
cmp
sbb
sub
pop
mov
inc
lods
outsb
adc
mov
or
cmpsb
add
add
loopne
jo
pop
xchg
pop
test
in
jno
mov
mov
shll
dec
sbb
rol
shl
sbb
pop
dec
popa
jo
and
dec
inc
xchg
cmp
lret
mov
or
mov
lret
mov
jae
je
lret
mov
lret
or
or
push
rolb
sub
sti
adc
fsubrl
dec
add
aaa
cld
aas
or
repz
add
add
add
add
daa
lret
bound
fildl
mov
xchg
fld
add
fisubs
add
adc
je
adc
ljmp
inc
loopne
in
add
mov
scas
in
into
shrb
jnp
inc
push
clc
pusha
jb,pn
cmp
imul
fisubs
inc
add
dec
xchg
mov
mov
out
ljmp
aas
call
add
add
adc
add
cmp
mov
and
jg
nop
loop
nop
nop
clc
imul
pop
push
cld
adc
outsl
add
jae
jne
stc
jno
out
mov
adc
sbb
mov
cld
arpl
jne
in
sbbl
aam
cmpsb
sub
sbb
mov
xor
lock
pop
sar
sti
stos
jmp
jae
jne
stc
jno
out
mov
adc
in
sbbl
and
outsb
in
sbbl
fildl
xorb
jno
out
mov
jae
in
roll
xchg
add
lea
adc
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
push
mov
mov
mov
mov
xorl
add
sub
loop
jmp
