filds
cmp
mov
hlt
test
fisubrs
push
shll
notb
xchg
cs
arpl
addr16
lock
jl
clc
into
push
xor
das
add
shrl
mov
adc
test
inc
in
imul
daa
mov
inc
or
rcll
cmpsl
cmp
lret
insb
pop
dec
fnstenv
pop
and
nop
and
adc
popf
adc
leave
mov
int3
pop
xor
dec
jl
leave
out
cmp
hlt
sub
mov
mov
or
cld
sbbl
cmpsb
icebp
mov
xor
mov
hlt
mov
addl
sbb
js
repnz
jg
insb
aad
test
sbb
fsubrl
mov
xchg
es
pop
shrb
leave
xor
fidivrl
test
into
imul
mov
dec
rol
inc
adc
adc
mov
icebp
push
mov
or
adc
aam
mov
leave
stc
mov
lods
push
adc
xchg
je
push
adc
dec
xor
bound
lret
cmp
dec
sub
inc
mov
notb
out
popa
or
fidivl
ljmp
cmp
push
ret
outsl
sub
add
mov
pop
xchg
xchg
inc
and
fwait
aaa
jmp
xchg
push
sbb
or
loop
es
jl
mov
sub
ja
rcrl
sub
stos
subl
out
sarl
loop
iret
lods
pop
nop
adc
arpl
testl
dec
arpl
xchg
cs
xchg
inc
mov
sti
mov
popa
stc
lods
ret
test
fists
pop
ds
mov
out
incl
jle
xchg
sub
sbb
ds
dec
cmp
sbb
popf
jns
stc
dec
loope
out
push
jp
mov
leave
sbb
sub
cmp
roll
add
mov
pop
jnp
cmpsb
xchg
jnp
out
cmp
std
hlt
fists
sub
rolb
ljmp
cltd
and
scas
rolb
sub
jg
mov
enter
cmpsb
adc
xchg
loop
xchg
sysret
push
pushl
push
push
adc
dec
idivl
cld
inc
mov
mov
ret
scas
fstps
and
jb
or
sub
mov
xlat
cmpps
pop
mov
inc
pop
push
outsb
dec
in
pop
jbe
add
repnz
or
test
mov
je
pop
ljmp
lret
mov
push
je
addl
sarb
xchg
repnz
outsl
daa
xchg
addr16
insl
cltd
inc
adc
and
dec
in
nop
out
cltd
lcall
sbbl
jmp
insl
mov
xor
xchg
sbb
and
test
das
popa
fwait
dec
xchg
cmp
fimuls
xor
loop
insb
sbb
mov
and
push
push
xor
pop
shl
adc
or
insl
dec
push
loop
mov
and
cmp
loop
imul
sub
push
fmuls
mov
and
cmpsb
or
pop
or
mulb
inc
dec
movsb
rcll
stos
push
mov
mov
fs
xchg
pop
mov
lock
nop
popa
xor
add
movl
dec
mov
sub
decl
je
xor
aaa
adc
iret
test
inc
mov
push
loopne
int
jmp
pop
add
mov
bound
ret
sbb
pop
loope
fbld
jmp
mov
mov
lods
pop
sbbb
test
mov
push
stos
pop
and
xchg
jbe
mov
inc
testl
cs
push
ret
popf
rclb
lea
or
add
into
and
dec
push
push
cwtl
aaa
and
sbb
xchg
sbb
call
dec
jb
inc
xchg
test
mov
pop
dec
jle
lret
jge
or
dec
fists
jno
push
push
xchg
push
dec
add
and
call
clc
adc
movsb
cmp
pop
ja
push
xor
and
xor
xor
lock
adc
adc
lcall
call
int
pop
xchg
cmp
loop
xor
ljmp
and
inc
xchg
repnz
aad
jp
into
inc
push
out
nop
xchg
push
cld
add
outsl
push
in
out
and
mov
mov
cmc
dec
stos
mov
pop
bound
outsb
scas
cmp
into
fidivrs
fisttpl
fldt
jmp
rorl
enter
cmpsl
xor
decl
movsb
sbb
cmp
out
cmpsl
fistps
mov
cmp
lods
lcall
mov
xor
push
outsb
jo
popa
mov
aas
sbb
les
sahf
pop
jb
pop
mov
movsb
push
push
sarb
sub
jge
pushf
out
push
fistl
test
outsb
scas
xor
out
cwtl
das
loope
xlat
loop
in
mov
mov
xchg
ret
pop
xchg
mov
add
pushf
dec
jbe
lret
pop
dec
jo
inc
jecxz
lret
dec
inc
fimull
jo
call
mov
int
push
pop
mov
fstpt
loopne
cmpsl
sub
fisubl
dec
cltd
hlt
mov
inc
jo
sar
xchg
fiadds
lods
push
jp
ja
scas
mov
pop
sub
scas
mov
inc
dec
xchg
fadds
fdivs
repnz
push
stos
in
xor
add
gs
xchg
push
push
dec
fmuls
mov
popa
adc
inc
push
ret
mov
mov
test
fs
int3
mov
daa
add
sub
popa
or
mov
insl
xor
xor
testb
and
mov
sti
dec
das
inc
pusha
sbb
inc
sub
and
cld
mov
or
pop
xchg
addr16
or
inc
pop
aaa
push
and
jno
ret
mov
inc
mov
addr16
jo
sbb
mov
dec
insl
imul
sbb
pop
jno
jbe
pop
out
sbb
cmpsl
mov
pop
mov
mov
sub
lret
test
push
adc
test
cmp
cmp
jmp
xor
imul
fwait
dec
addr16
iret
jnp
sub
loopne
out
test
adc
pop
fstl
mov
inc
fmull
decl
icebp
or
js
int
fsubp
cmp
int
imul
in
push
lret
push
add
sub
sbb
imul
fisubl
sbb
or
push
mov
std
adc
xchg
xchg
addl
inc
push
imul
pusha
push
mov
mov
ltr
add
jmp
inc
push
popf
jle
ficompl
aad
push
xchg
push
loopne
adc
pop
out
sub
sbb
mov
mov
outsl
dec
sbb
js
xchg
mov
pop
pop
add
cltd
insb
stos
and
mov
push
sahf
fs
js
adc
mov
sbb
mov
in
decb
daa
ss
shlb
jae
jnp
dec
jae
shlb
push
aam
rclb
fstpt
sbb
xchg
insb
jne
pop
inc
mov
mov
xchg
mov
xchg
xchg
push
push
sbb
xchg
and
mov
stc
push
xchg
sub
pop
lahf
push
mov
repz
xor
aam
mov
call
loopne
push
sub
jg
fidivl
adc
cmp
sbb
into
inc
pop
rcrb
push
gs
xor
and
outsl
sbb
xor
mov
xor
jl
xchg
jge
xor
scas
cwtl
rcll
jno
xor
fxch
sub
sbb
pop
cmp
fcomip
push
push
out
add
je
cmp
mov
or
lahf
sbb
cli
sub
movsb
push
cmp
xor
mov
jmp
jnp
pop
fnstsw
data16
das
sbb
inc
push
ror
pop
push
nop
sahf
fucomp
mov
inc
mov
adc
jns
push
adcl
out
sub
mov
mov
lock
xor
jecxz
and
push
jecxz
shl
aad
cmp
sbb
insb
cmp
sahf
dec
popa
add
push
sar
pop
inc
inc
dec
int3
pop
xchg
xchg
jbe
mov
and
roll
pusha
jle
cmp
test
and
or
mov
es
loop
int3
mov
out
jbe
add
mov
mov
push
mov
fcmovnbe
inc
pop
push
roll
jp
cli
mov
push
arpl
adc
mov
sub
adc
arpl
pop
mov
sahf
xchg
movl
jbe
xchg
cmp
or
fildll
pop
jge
sbb
cmpb
push
ret
jnp
sbb
inc
cmp
or
js
adc
jle
out
lods
pop
xor
xor
mov
sbb
add
jne
fisubrl
std
dec
push
dec
mov
xchg
cwtl
mov
xchg
ret
push
subb
ds
clc
test
xor
xchg
mov
mov
shll
mov
test
cmp
cld
push
ds
add
pushf
jno
inc
arpl
aaa
lcall
add
repnz
test
pop
shl
sbb
ficoms
mov
mov
mov
cmp
mov
insb
fidivl
cmp
mov
jecxz
enter
test
mov
lods
rdtsc
mov
enter
pop
ja
cli
cmp
stos
mov
inc
nopl
mov
cmpsl
jbe
add
and
imul
mov
or
add
adc
push
out
mov
into
icebp
scas
sti
into
fdivrp
pop
and
addr16
addl
pop
jnp
xor
scas
cmp
mov
outsb
mov
adc
and
mov
clc
and
dec
out
cld
or
fisubrs
sbb
lds
sub
xor
jbe
mov
xor
movsb
inc
mov
aaa
xor
cmp
push
es
sbb
ds
inc
pop
xchg
test
xor
test
cmpsb
jnp
and
pop
mov
leave
loopne
into
lods
sub
mov
and
adc
bound
pushf
aaa
pop
pop
pusha
cwtl
movsl
sub
es
ja
push
or
mov
repz
xor
add
sti
ja
jne
adc
movsl
add
jb
push
mov
mov
cmp
cmp
aad
in
js
xor
test
mov
jnp
sub
test
jmp
cs
ret
daa
loope
mov
push
jae
sub
les
mov
push
push
xchg
mov
jnp
jmp
aad
movsl
jge
push
pop
fstpl
pushf
call
sub
mov
dec
in
push
in
pop
mov
mov
sub
fsubl
lahf
xchg
jge
add
mov
or
test
dec
or
jb
jmp
sbb
mov
inc
shll
mov
push
out
pop
sbb
inc
mov
int
rclb
mov
dec
mov
arpl
fwait
fwait
aam
cmp
ret
gs
int
push
xchg
loopne
test
shll
xor
pop
mov
outsb
add
adc
mov
sub
shlb
fildll
lret
and
andl
mov
pop
aas
and
mov
pop
jne
mov
cltd
jecxz
test
dec
xor
mov
mov
dec
das
inc
xchg
jns
imul
enter
xchg
rcrb
aas
dec
mov
imul
push
popa
loope
dec
xor
in
test
push
mov
dec
pop
fcmovb
test
cmpsb
mov
jmp
dec
or
sbb
ret
push
gs
ljmp
add
and
mov
pop
mov
xchg
jl
in
test
dec
mov
xchg
mov
inc
mov
ss
pop
mov
xchg
repnz
pop
jae
sbb
lock
insb
push
lods
out
ret
insb
fmul
loop
and
rol
test
cmp
sub
sub
dec
push
push
push
pop
pop
cld
ljmp
push
xor
lods
outsl
js
xor
outsb
mov
ja
ffree
sti
out
mov
hlt
sub
mull
addr16
xchg
arpl
hlt
push
push
rclb
fnstsw
imul
jb
pmaxsw
shr
into
nop
daa
pop
sbb
xchg
mov
sbb
daa
mov
pop
iret
push
pop
add
mov
cmp
xor
xchg
pop
ljmp
adc
outsb
cwtl
test
sub
mov
sbb
pop
adc
mov
xchg
negb
mov
xchg
adc
jbe
popf
mov
call
lds
adc
stos
or
inc
pop
cli
lahf
adc
es
lret
out
xor
push
mov
into
jecxz
push
inc
icebp
push
sbb
xchg
cli
mov
subb
add
xor
int
div
or
sti
push
pop
inc
scas
add
push
sbb
dec
scas
lock
insl
add
nop
mov
popa
jle
cwtl
mov
fstpt
ss
addr16
popa
sbb
jle
pushl
inc
dec
mov
cmpsb
jp
neg
aas
and
cmp
cmp
icebp
faddp
adc
shrl
ds
mov
insb
inc
cmpb
leave
adc
push
xchg
jmp
push
loope
pop
inc
cmp
dec
out
mov
sbb
andl
add
test
mov
rolb
imul
add
mov
dec
imul
test
jae
in
or
pusha
dec
push
mov
rolb
mov
nopl
inc
int
mov
inc
lock
dec
xor
cmp
adc
xchg
mov
and
lcall
cld
jo
sub
in
ja
ret
das
and
add
stos
fcomip
and
mov
lret
test
sarl
scas
mov
mov
push
xchg
fsubs
or
sbb
rcrl
andb
mov
xchg
mov
data16
or
das
mov
in
adc
popf
cmp
fnsave
test
mov
xor
inc
rclb
sar
pushf
fwait
or
fdiv
data16
mov
cmpsl
pop
push
out
push
imul
insl
jmp
cmp
repz
fcomi
jp
jae
ret
into
lret
call
aas
lods
scas
lods
lahf
mov
scas
lahf
jecxz
scas
out
fmuls
lods
ret
xor
movsl
insl
cmc
push
push
xor
inc
jle
mov
sbb
jmp
aas
adc
xchg
jle
push
popf
dec
ret
xchg
scas
sub
out
mov
mov
jg
mov
or
fcomps
inc
in
or
or
movsl
mov
mov
pushf
mov
push
daa
outsl
push
nop
popf
mov
mov
das
jno
mov
fdivl
add
movsl
sub
addr16
ja
sbb
js
inc
and
jecxz
repnz
stos
push
sarb
add
clc
mov
pop
dec
mov
jns
inc
stos
int3
jge
or
out
sti
push
sarb
push
mov
sub
dec
or
cs
cmpb
jb
pop
sbbl
cld
ss
mov
add
aad
jne
mov
arpl
push
dec
leave
push
cmpsb
adc
xchg
jbe
adc
mov
fists
pop
lock
xchg
in
dec
push
xor
std
pop
je
outsl
cmp
fdivr
cs
repnz
xchg
mov
arpl
cmc
and
jne
and
lret
jg
pop
xor
sub
notb
loopne
add
and
insl
xchg
stos
mov
and
xchg
loope
leave
mov
xor
ds
stos
negl
lods
aaa
lret
ss
pop
adc
push
arpl
push
cmp
xchg
xor
orl
cld
rclb
into
outsb
push
pusha
jb
jle
outsb
or
bound
xchg
adc
sahf
jnp
jae
popa
pop
pop
pushf
aam
and
xor
cmp
iret
bswap
jge
push
xchg
sub
int
sub
inc
test
jo
mov
xor
pop
sbb
push
ljmp
sahf
stos
imul
add
div
imul
roll
fwait
in
push
cmc
mov
movsb
ss
mov
jbe
xadd
jle
push
jnp
xlat
inc
lock
adc
mov
imul
jmp
ret
xor
jecxz
jmp
jnp
ret
fistps
pop
mov
mov
test
add
flds
iret
jl
fiaddl
outsl
in
nop
jge
pusha
cmp
insl
imul
out
hlt
cli
fstps
stc
jecxz
mov
cld
add
inc
mov
and
shrb
xchg
jmp
inc
jmp
cmp
xchg
jno
or
cwtl
mov
ss
cld
jl
xchg
dec
imulb
notb
shl
sbb
iret
loop
and
cltd
xor
adc
sub
adc
cmp
jne
xchg
inc
mov
jmp
jp
pop
mov
mov
mov
ljmp
xchg
dec
mov
dec
pop
cmp
sahf
push
mov
ljmp
push
xor
imul
ss
popf
fwait
mov
in
cmp
movsl
sub
in
in
xor
dec
cmp
nop
out
fdivrp
pushf
mov
cmp
stos
add
cmp
push
dec
push
mov
pop
sub
enter
pop
push
adc
movsb
ljmp
mov
mov
aas
lret
testl
jmp
sbb
std
cmpsb
repz
sbb
mov
jecxz
push
or
mov
leave
dec
ret
rorb
sub
cmp
popf
jle
test
lods
xor
cmp
repz
jo
adc
add
loopne
and
and
push
sbb
jns
mov
stc
adcl
lret
sub
sub
or
xchg
mov
cmc
mov
out
inc
pushf
xchg
mov
mov
cmp
mov
test
stos
mov
xor
inc
sbb
add
push
lea
in
mov
cmpsl
into
sbb
and
pop
push
insl
pop
mov
adc
jp
pop
in
inc
mov
lock
je
pop
cmpsl
cmc
jnp
cltd
aas
je
xchg
jle
or
dec
cmp
push
fcmovnb
add
add
mov
movsb
push
mov
ret
ds
aam
in
cmp
fisubl
loope
xchg
add
lcall
sub
fs
insb
sub
push
xchg
mov
pop
dec
les
push
push
dec
loop
or
test
push
dec
xchg
stos
add
mov
inc
adc
call
cltd
mov
cmp
and
ret
add
iret
iret
and
jl
fidivrs
mov
fcmovnb
xor
dec
out
sub
fiaddl
adc
loop
jne
clc
push
pusha
add
or
mov
jmp
repnz
add
mov
popa
sub
mov
jns
in
push
jo
or
and
insl
rcr
xchg
xor
dec
push
js
testl
pop
or
mov
mov
cmp
push
mov
pop
or
movsb
cmp
sub
inc
mov
jbe,pt
sti
cmp
push
cmp
fldenv
xchg
mov
jnp
loope
adc
jno
data16
xor
jo
fstp
sbb
sbb
adc
cmpsl
clc
cmp
cld
enter
mov
enter
iret
repnz
test
lcall
stos
jo
xlat
pop
mov
jp
call
dec
inc
movsb
mov
pop
in
fisttps
mov
sbb
push
pushf
imul
into
cli
sbbb
js
sarl
maskmovq
divl
ja
pushf
aam
ja
aas
enter
pushf
mov
add
and
iret
sub
scas
movaps
fwait
sahf
push
outsb
jae
outsl
sub
mov
add
mov
push
add
clc
cmpb
pop
xchg
pop
call
or
or
mov
int
fdivl
gs
daa
test
rcl
pushf
add
scas
push
cltd
les
adc
or
fldenv
mov
lods
xor
fisttpll
in
cmp
aas
outsb
mov
movsb
andb
fisttps
das
and
push
xlat
cmp
push
ret
and
loop
xchg
hlt
sti
or
sub
cmpsl
movb
sahf
push
adc
push
sti
aam
aad
inc
in
cmp
xchg
and
jne
rorl
push
sub
sbb
movaps
pop
mov
cmp
xor
imul
and
insb
stc
lds
movsb
sub
mov
out
popa
out
cmp
xor
enter
insl
cmpl
clc
ror
pop
aam
cmpsl
aaa
mov
lods
loop
and
inc
or
sbb
jne
in
dec
cmpsb
pop
xor
jne
mov
outsb
pop
push
out
rorb
xchg
pop
stc
mov
push
or
cltd
dec
dec
pop
dec
cmp
mov
inc
cli
cmp
adc
mov
mov
ljmp
ficoml
bound
add
jge
xchg
mov
lahf
into
xchg
mov
mov
mov
int3
or
std
mov
mov
xor
fadd
test
sub
je
ret
ja
and
mov
es
sti
mov
mov
pop
push
movsl
push
mov
sub
addr16
enter
push
int
in
mov
jbe
dec
into
jb
psllw
jl
scas
int3
mov
fidivs
push
adc
jp,pn
lock
cli
addb
adc
rolb
pop
add
mov
out
aad
jmp
movsl
cmp
cmp
inc
cmc
push
xlat
in
jge
fdivl
sbb
aam
mov
or
iret
and
xchg
push
fistpl
cmp
jne
mov
aaa
cmpsl
jmp
arpl
mov
pop
cs
adc
popf
mov
cltd
or
nop
sub
shr
mov
adc
in
mov
sbbl
sub
inc
xchg
pop
out
adc
sub
sub
in
ds
jno
out
fucomi
jno
ljmp
scas
test
sub
pop
xor
repnz
cmp
stos
in
stc
emms
insb
adc
enter
pop
push
adcl
pusha
aaa
xor
inc
push
mov
add
ret
es
das
pop
test
jb
in
daa
push
dec
stos
dec
dec
xor
stos
cmpsl
stos
scas
movb
stos
or
cltd
lret
adc
adc
popa
cmp
pop
iret
jnp
dec
add
pop
ffree
sbb
cmpsl
mov
mov
add
lret
jbe
mov
test
push
and
iret
je,pn
jae
fcoms
test
hlt
mov
js
inc
xchg
testl
inc
mull
cltd
mov
xor
sarb
repz
fldcw
inc
inc
xchg
cld
jecxz
idiv
data16
lods
lcall
bound
or
icebp
pop
movsl
mov
push
int3
data16
mov
add
sbb
push
dec
insl
iret
dec
jns
sbb
or
sub
pushf
pop
test
cmpsb
sub
leave
pop
or
faddl
roll
adc
xchg
adc
pop
xor
push
push
stos
push
cmp
mov
int
pop
lret
and
mov
pop
xor
dec
jne
mov
shl
add
stos
arpl
add
sti
jmp
and
jae
test
imul
out
jbe
fwait
mov
mov
mov
lds
pop
mov
aas
es
fs
dec
and
sub
fsub
push
loope
ret
outsb
dec
push
clc
and
pop
sbb
rcl
hlt
dec
outsb
aad
pop
shlb
out
jecxz
xor
xor
inc
xchg
or
push
dec
cmc
inc
mov
mov
dec
pop
dec
mov
adc
mov
pop
mov
enter
shll
sub
add
jmp
inc
push
jnp
rorl
dec
and
sbb
adc
shrb
sub
repnz
out
lock
sbb
xchg
shll
mov
xchg
mov
and
in
aad
ss
mov
jb
lret
mov
in
test
add
je
pusha
ficoms
and
jno
cmc
arpl
xor
hlt
insl
jmp
and
sbb
adc
cmc
lret
std
loop
and
test
add
push
xor
ds
lods
mov
paddusb
out
adc
into
xchg
arpl
pop
and
or
and
bound
outsb
popa
les
sar
mov
into
enter
mov
in
clc
cmp
or
pusha
xchg
loope
dec
loop
int
dec
mov
pop
pop
pop
dec
and
jae
shrb
les
sub
test
sbb
xor
push
jg
pusha
into
stos
pop
or
inc
data16
mov
pop
icebp
dec
and
jno
loop
sub
das
scas
pop
inc
std
sbb
sar
mov
repnz
pushf
outsb
jle
adc
or
and
sbb
dec
adc
stos
imul
call
fisttpll
pop
fs
push
insl
or
daa
inc
push
push
lret
scas
test
ror
sbb
in
mov
fidivl
ret
dec
test
in
fwait
and
fisubl
fildll
xchg
mov
fadd
xchg
insb
mov
imull
and
insl
fistps
jns
imul
das
xchg
or
fldt
push
and
push
xor
ds
cmc
lds
mov
jne
push
mov
daa
add
xchg
mov
cmpsl
dec
movsb
cmp
loopne
in
jle
sbb
mov
dec
add
cmp
add
mov
aad
loope
jno
sbb
mov
insb
andb
or
hlt
insb
mov
and
sub
scas
dec
mov
iret
adc
andb
cmp
mov
cltd
js
mov
lahf
jnp
nop
gs
stos
and
xor
and
fwait
stos
movsb
ss
shrl
mull
xor
jo
mov
subl
push
fisttps
out
cld
lahf
lret
dec
lods
sub
pop
stos
test
repnz
nop
shll
int3
fcoml
sbb
jnp
movsb
or
icebp
push
test
mov
adc
fbstp
sbb
cmc
leavew
jecxz
mov
add
push
faddp
lcall
aam
pop
imul
dec
mov
sub
lret
mov
sbbl
xor
sub
cmp
divb
push
icebp
add
cmp
jmp
int3
jo
push
inc
cwtl
popa
mov
sub
jno
ficompl
jecxz
xor
arpl
bound
pop
les
pushf
cmp
sarl
sbb
das
dec
mov
cmpsl
mov
push
and
lret
int
mov
scas
inc
add
mov
fistps
fnsave
daa
mov
dec
aam
out
call
nop
cmpsl
or
push
aam
js
cltd
xchg
add
hlt
pop
add
mov
lock
mov
jmp
divb
pushl
notl
dec
jnp
push
jp
test
push
outsl
popf
sub
jne
sub
es
dec
xlat
hlt
lds
sti
mov
hlt
jg
pop
ljmp
iret
and
in
shll
cli
dec
andb
outsl
push
sbb
pop
ss
fmull
jl
ja
xor
dec
movsb
repz
push
and
jmp
pop
aaa
movsb
jbe
xchg
iret
int3
sbb
mov
jne
inc
rcl
mov
jge
jmp
ret
repnz
ficoms
cmpsl
mov
fcmove
sti
pop
bound
je
shrb
mov
mov
push
mov
pop
and
movsb
or
andl
jae
inc
mov
or
test
icebp
js
push
pop
stc
mov
mov
imul
lret
or
jg
dec
jecxz
inc
mov
movsb
mov
cld
add
jbe
dec
mov
mov
ret
stos
mov
inc
push
sub
and
stos
stos
cmp
mov
jp
jecxz
fwait
inc
jno
dec
repz
pop
lods
movsl
push
dec
xchg
push
popa
and
xorb
lcall
push
shlb
pusha
mov
cld
inc
sbb
adc
bound
test
stc
mov
push
or
cmp
arpl
sarl
cmp
and
lods
fidivrs
dec
adc
xchg
test
testb
dec
xor
lea
ret
and
outsl
subb
adc
add
push
mov
ret
addr16
imul
fmul
and
sub
arpl
fwait
or
shl
push
mov
imul
xchg
fidivrs
sbb
push
cmp
mov
lea
adc
ljmp
jno
push
iret
push
push
sub
mov
and
stos
inc
xor
sbb
in
xor
adc
cmp
or
or
hlt
xchg
adc
jl
dec
rdtsc
fisttpll
lock
push
sti
nop
shrl
out
fmulp
or
inc
add
sub
les
add
imul
dec
jge
lret
fwait
rcrl
aam
mov
pushf
jo
sub
pop
movups
or
int
or
mov
adc
xchg
cwtl
cmp
mov
je
enter
and
push
fisubrl
nop
fs
pop
popf
add
push
pop
pop
adc
xorb
inc
pop
insl
mov
ret
mov
shrb
es
pusha
movsl
adc
xchg
into
xchg
out
rorl
and
xchg
pop
pop
jbe
add
test
lods
lds
mov
cmp
dec
jmp
mov
inc
mov
cmpsl
dec
fidivl
mov
sbb
arpl
cli
jnp
dec
mov
mov
cmp
icebp
dec
dec
push
dec
nop
add
dec
mov
jecxz
add
xor
sbb
xchg
loope
jp
nop
pop
sub
data16
pop
stc
daa
xchg
cmpsl
push
sbb
dec
aad
mov
sahf
xchg
call
fsubrl
jo
jg,pt
std
cmpsl
push
lock
jmp
push
inc
call
aad
add
movsl
and
or
xchg
stc
or
dec
out
dec
lret
push
adc
and
iret
inc
loop
into
mov
push
dec
daa
iret
sbb
lcall
xchg
jb
dec
cli
add
stos
cmp
pop
xchg
filds
adc
or
scas
push
mov
push
xor
clc
jnp
push
mov
out
lock
fldl
aam
push
rorl
out
mov
push
mov
xor
imul
jno
loop
sbb
ljmp
push
add
rcl
mov
mov
and
push
and
std
enter
and
sahf
inc
dec
dec
js
pop
aaa
imul
xor
mov
cmp
and
lds
popf
cmp
cmp
clc
adc
cmp
pop
push
ds
mov
insl
fidivrs
ret
jo
mov
lahf
pop
push
add
lret
popl
cmp
sbb
repz
lods
lods
mov
inc
cwtl
fs
insl
add
jp
mov
rolb
iret
xchg
mov
repz
mov
imull
or
jp
mov
cmpsl
ss
jbe
mov
mov
jge
cmp
mov
push
jbe
xor
mov
stos
movsb
in
or
rcll
scas
fnsave
icebp
xchg
mov
pop
fcoml
add
or
cwtl
cmp
fwait
mov
hlt
push
inc
bound
orb
loope
xor
inc
rclb
push
scas
in
push
mov
clc
movsl
jge
mov
mov
leave
push
pushf
sub
imul
jb
cmpsl
push
and
data16
js
or
sbb
lcall
or
out
dec
fildl
pop
push
addr16
adc
ja
cmp
push
adc
scas
dec
pusha
pusha
scas
dec
mov
icebp
les
stc
mov
xor
sub
cmp
mov
inc
pop
mov
mov
iret
loopne
push
xchg
jmp
cmc
int
sub
xchg
inc
mov
lock
stc
in
mov
in
add
push
mov
add
imul
in
fiadds
sti
xlat
cmp
pop
imul
repz
lret
int
or
jno
xchg
push
lahf
and
movsb
aam
mov
mov
insb
mov
sti
inc
insb
iret
xchg
push
int
cmp
rcrl
data16
loop
sbb
adc
lock
movsb
push
adc
in
bound
test
out
and
pop
jo
and
mov
loope
jns
sti
aad
into
fs
sub
sti
add
push
popa
int3
das
adc
jbe
bound
and
xor
loopew
insb
ret
dec
sub
sbb
data16
das
sbb
hlt
rol
bound
mov
popf
mov
cmp
push
xchg
pop
stos
icebp
pop
outsb
jle
jmp
pop
add
das
adc
loope
iret
addl
mov
cli
sbb
push
mov
dec
mov
insb
stos
add
push
ret
xchg
push
push
imul
imul
and
jmp
xchg
insb
cmpsb
lret
out
push
mov
popf
subb
or
cmp
cltd
lea
mov
sub
ret
jne
lahf
jg
sbb
popa
pop
loope
popf
xchg
addb
ss
jmp
sbb
div
mov
setbe
lret
aas
push
pop
sbb
fwait
adc
clc
ja
shrl
push
dec
int3
js
out
or
fidivl
jae
mov
sarl
and
adc
add
mov
jne
cmp
cmp
pop
pop
out
shlb
and
call
adc
stos
push
addl
or
add
js
sbb
xor
hlt
fs
mov
rcrb
push
cltd
or
out
adc
ljmp
adc
sub
push
call
push
sbbl
dec
mov
je
xchg
shrb
sbb
shl
sbb
inc
outsl
movsb
mov
jno
add
jnp
fs
pop
inc
mov
mov
neg
and
ret
jg
lock
pop
inc
cmp
add
mov
mov
cmc
push
push
lods
add
mov
sub
push
inc
rclb
inc
mov
scas
sbb
scas
cmp
sbb
sahf
mov
shlb
bound
add
aam
bound
outsl
repz
lds
dec
test
leave
cmp
sbb
mov
sarl
cmpb
cmpsl
call
int
pop
in
xor
movsl
xor
fsubrs
or
or
mov
test
lods
outsb
xorl
mov
movsb
negl
shlb
add
in
test
cmp
add
les
and
insb
ret
mov
loopne
jae
fadds
rclb
popf
xchg
not
adc
shrb
rcr
cmpsl
inc
popa
sbb
shl
cs
jns
lret
repnz
or
test
mov
push
ret
add
xor
in
dec
hlt
xchg
into
rolb
push
cli
mov
popa
fidivl
sti
addr16
xchg
mov
mov
sbb
or
lret
iret
fs
jae
sub
rorl
inc
outsb
xchg
fbstp
lea
faddl
push
cmp
jecxz
push
mov
mov
sub
push
pusha
pop
sub
movsb
dec
cld
inc
out
adc
dec
xor
test
addl
aas
repz
mov
dec
jmp
fsubl
dec
cs
popf
fcoml
xor
ja
pop
inc
outsl
jns
fsub
push
popa
adc
push
xor
and
cld
cmp
add
es
cli
xchg
jecxz
stos
insl
fdivrl
fs
push
stos
inc
inc
and
bound
sub
mov
stos
cwtl
ljmp
mov
ret
pop
cmp
rorb
fsts
mov
or
int
ficomps
or
and
lcall
jg
push
orl
lods
sbb
insb
xchg
mov
or
and
mov
icebp
sbb
mov
sbb
mov
and
jle
push
out
add
lahf
adc
dec
stos
jae
dec
jae
notl
dec
jmp
cli
aam
cwtl
mov
out
mov
iret
and
jae
sub
hlt
pop
pushf
inc
movntq
adc
js
pop
dec
pop
mov
pop
mov
push
negb
push
js
dec
add
es
popl
icebp
or
cwtl
mov
dec
outsl
ret
daa
mov
cli
push
sbb
test
leave
shll
rcrl
out
loopne
outsb
repnz
pop
ds
push
and
inc
xchg
out
pop
call
push
les
stos
pop
ficoms
or
aas
andnps
sbb
or
sub
or
push
lods
lcall
shll
jns
fldenv
pop
mov
cmp
lahf
int3
xchg
mov
das
sub
cmpsl
mov
add
fucomip
adcl
xor
fwait
inc
jg
push
jl
call
out
dec
fwait
les
inc
push
xchg
lock
jg
push
or
in
and
es
pushf
out
pop
icebp
pop
dec
jmp
add
mov
inc
pop
adc
movsl
mov
mov
adc
repz
adc
sbb
sti
scas
mov
xchg
mov
addr16
js
xchg
test
cmp
mov
push
lahf
add
adc
mov
or
aad
pop
xchg
mov
lods
mov
dec
rorb
inc
in
inc
lea
aas
pop
jl
push
sub
fwait
cmp
dec
cmpsl
jns
cmpsl
fists
adc
lcall
or
cltd
jecxz
enter
push
andb
js
xor
es
lods
jno
lret
xchg
or
stos
sbb
cmc
aad
mov
push
lods
fists
dec
aaa
repnz
push
idivb
push
jle
int
push
jge
cmp
in
or
mov
xor
jp
jns
jp
push
push
ret
in
sub
aam
repnz
shrb
xor
lcall
cmp
pusha
cltd
in
lods
aad
stos
dec
ja
popa
outsb
dec
dec
cs
inc
outsl
jo
in
rcll
dec
lret
test
dec
fdivrp
nop
pop
lods
dec
mov
sar
mov
adc
add
jg
jno
cmpsl
pop
cli
mov
add
mov
mov
mov
add
sbb
fdiv
add
data16
aaa
lret
in
sbb
push
mov
or
xor
push
clc
mov
jbe
push
xchg
add
out
push
mov
push
mov
sarb
mov
lcall
xchg
or
push
xor
loop
imul
jno
mov
cli
ficoml
in
stc
enter
insl
lds
cwtl
push
add
mov
dec
in
and
cltd
rolb
push
aaa
and
push
daa
or
or
jno
ljmp
jae
add
mov
mov
add
push
enter
aas
pop
mov
out
icebp
imul
inc
inc
xor
cmpsb
add
jbe
jge
mov
fisttps
std
vhsubpd
adc
add
pop
cs
in
test
push
xchg
loop
es
pop
sub
jecxz
mov
inc
mov
push
loopne
bnd
xchg
xchg
pop
adc
xor
jmp
mov
dec
mov
pop
lods
bound
pop
in
xchg
mov
mov
dec
and
jne
dec
pop
inc
xchg
in
movsl
pushf
mov
loope
ljmp
hlt
sbb
sub
mov
and
dec
jecxz,pn
out
lods
lea
sub
fiaddl
std
xchg
inc
pop
stos
rol
popf
cmp
fwait
das
dec
fwait
xor
leave
adc
inc
xchg
jmp
add
cwtl
sar
stc
es
fs
adc
mov
dec
lret
pop
pop
sbb
cmc
push
shlb
mov
add
mov
mov
iret
push
repz
xor
ret
xchg
icebp
cmp
ss
cmp
pusha
filds
mov
push
adc
jns
fists
imul
push
rolb
jno
pushf
push
mov
lret
movsb
xchg
pop
cmp
adc
mov
loopne
sbb
sub
lods
stos
fwait
mov
or
aam
add
enter
sub
out
xor
xchg
daa
pop
nop
mov
hlt
aad
sahf
hlt
outsl
mov
or
cs
pop
add
scas
mov
sbb
xor
mov
mov
mov
cmp
fucomip
mov
ds
lea
dec
inc
rcrl
fs
xchg
dec
xor
push
aam
shl
jbe
outsb
sub
xchg
leave
xor
aas
pop
out
sub
idivl
dec
bound
push
cmp
dec
mov
lods
sbb
rorb
jne
dec
push
out
add
loop
out
lea
mov
push
mov
out
cltd
les
mov
into
in
mov
dec
xor
and
repz
test
adcb
mov
cmp
dec
mov
mov
shrb
idivb
push
dec
out
dec
clc
cwtl
fmull
sub
pop
sbb
jle
imul
enter
test
pusha
push
imul
and
divl
push
adc
add
adc
xadd
pop
popa
and
xchg
loopne
and
sbb
out
insb
inc
sbb
mov
mov
pop
jns
and
leave
imul
add
call
in
and
adc
ret
xchg
lret
mov
push
aam
je
fidivrs
sti
mov
and
stos
in
cmp
imul
push
aad
cs
mov
dec
sub
cmc
jge
or
mov
in
xor
mov
lds
cmc
rolb
mov
sub
std
cmpsb
rolb
icebp
movsb
pop
inc
test
js
into
sbb
sbb
jbe
std
sub
ret
and
in
adc
pop
sub
loope
icebp
fisubrl
mov
pop
sub
push
xor
mov
sub
and
or
cmp
mov
sbb
dec
xchg
lods
in
xchg
mov
and
loope
test
push
pop
lods
add
jg
insb
mov
out
sbb
fcmovbe
adc
cwtl
jno
icebp
call
inc
push
add
push
sub
repz
adc
roll
mov
leave
add
add
sbb
jnp
shlb
ljmp
add
lret
movsb
mov
scas
sub
adc
push
aaa
std
sarb
adc
int3
sti
and
iret
or
sub
add
cmpsl
adc
cld
dec
mov
xor
jnp
leave
je
mov
adc
dec
scas
add
call
add
dec
adc
jns
sub
mov
pop
inc
ficompl
aam
insb
or
insb
push
pop
dec
and
popf
subb
lretw
dec
xrelease
fisubl
push
leave
iret
cmpsl
push
sub
mov
dec
xlat
sub
fbld
out
jmp
js
fstl
idivb
aad
mov
icebp
add
fdivl
idiv
xchg
or
push
or
call
mov
out
andl
sub
jb
jmp
pop
jp
leave
scas
xorb
shlb
mov
daa
lahf
int3
lods
mov
orb
mov
sbb
lods
aam
adc
mov
emms
movsb
lods
sub
outsb
cmp
sub
leave
or
xor
push
xor
std
loop
aaa
in
cwtl
les
lahf
dec
sub
aas
mov
sbb
cli
dec
pop
mov
adc
pop
cmp
imul
push
pop
dec
pop
lahf
cli
cmpb
mov
jle
lcall
xchg
push
pop
mov
ja
lret
pop
popa
adc
mov
mov
icebp
in
fadds
jecxz
cmp
pop
push
sbb
fmull
add
jae
push
pop
add
pushf
ljmp
iret
xlat
mov
cmp
lods
fimull
jae
sbb
std
lods
nop
call
sbb
roll
pop
lea
aaa
mov
andb
test
mov
inc
ror
pop
push
popa
sub
pop
adc
jp
test
mov
inc
jae
inc
jmp
push
adc
add
pop
sub
aam
fsubrs
xchg
in
xchg
adc
lret
imul
xor
dec
imul
lods
stos
mov
jl
dec
mov
mov
popa
mov
movsl
into
out
add
push
mov
les
icebp
in
mov
and
test
ret
xor
dec
out
sbb
vmovupd
or
jo
fsub
adc
mov
fiadds
jo
xor
in
xchg
cmp
push
icebp
sub
sbb
loop
jns
gs
adcb
in
mov
jae
fdivrs
inc
outsb
jae
and
or
xor
daa
call
adc
test
jno
adcl
aam
xchg
xchg
jl
sbb
popf
dec
insl
mov
mov
pop
mov
fstpl
lret
icebp
les
int
cs
mov
sub
pop
ret
aam
repnz
adc
mov
scas
mov
push
rclb
push
fwait
in
jbe
fdivl
xor
fimuls
pop
cmp
cmp
add
mov
popf
lods
mov
sbb
mov
mov
cwtl
jg
cmp
adc
mov
adc
js
xchg
add
push
push
lret
xchg
or
dec
pushf
dec
ret
out
push
mov
mov
add
in
push
jmp
pop
add
jo
push
mov
lret
je
out
cmpsb
rcll
lock
insl
sub
lods
cmp
dec
inc
icebp
pop
arpl
mov
and
push
mov
orl
jmp
popa
cltd
push
and
aad
and
mov
sub
das
fldt
test
bound
mov
xchg
dec
stc
cmp
xor
push
leave
sub
adc
shll
add
fisubl
pop
gs
stos
pusha
add
push
ja
in
fcompl
sbb
icebp
rorb
mov
mov
arpl
outsl
mov
stos
fsts
push
shl
mov
scas
inc
cmpsl
movsl
out
nop
aas
repnz
sbb
jne
shrl
mov
movsb
inc
test
mov
adc
push
out
inc
push
loop
repz
fsubs
shrb
lcall
mov
and
je,pt
mov
aaa
repnz
fsubrp
and
cmc
std
lret
subl
xchg
push
dec
add
ljmp
mov
aas
xor
xchg
pusha
shrb
sbb
lahf
add
xor
aad
mov
jg
add
addr16
push
loope
add
rcl
cmpsl
mov
mov
rol
pushl
cltd
in
mov
xchg
jne
shll
int
mov
jnp
cmp
sbb
aad
cwtl
jne
xor
sub
lret
es
sarb
lea
cli
xlat
sbb
sub
ret
jmp
sub
lock
cltd
sahf
dec
es
movsl
push
test
mov
or
jmp
pop
pop
jne
test
lock
jne
jg
std
lret
stos
cmp
paddusb
cmp
jmp
adc
xchg
push
neg
mov
nop
scas
call
mov
faddp
jne
mov
in
xchg
lahf
mov
out
cmp
and
dec
mov
pop
cmp
push
xchg
mov
xor
out
cmp
mov
test
loopne
dec
lretw
ss
inc
pop
xor
mov
push
icebp
dec
shrb
xor
pusha
jge
push
mov
add
mov
test
aam
add
int3
int3
sbb
iret
cmp
inc
pop
loopne
test
sbb
scas
and
xchg
fnstcw
enter
loop
pushf
mul
xchg
xor
push
jmp
cs
movsb
cltd
xor
bswap
push
sub
or
jg
inc
mov
pop
lret
es
add
std
jb
das
cmpsl
das
leave
mov
push
stos
in
rcrb
loopne
shrl
xor
and
nop
test
fisubl
sti
push
push
jl
jne
fisubl
pop
and
mov
jmp
aam
fadd
xchg
nop
int3
pop
pop
mov
add
icebp
lods
xor
in
out
push
add
xchg
mov
sbb
adc
cwtl
ret
or
jno
jl
mov
fsubl
jbe
pop
or
fsubl
subl
dec
mov
cltd
push
mov
subb
fcmovu
add
stos
stc
cmp
xlat
fcmove
jne
mov
sub
lds
mov
out
mov
xchg
cmp
out
adc
rol
lds
daa
or
test
adc
pushf
sub
into
in
js
int3
mov
inc
js
push
and
jae
fwait
cli
add
mov
push
fmull
sbb
jo
adc
imul
mov
ja
pushf
dec
stc
out
cmp
test
out
xchg
xchg
or
push
mov
int3
jg
call
ficoml
cmc
inc
scas
inc
mov
sbb
bound
loopne
mov
adc
inc
adc
or
dec
bound
decb
dec
repnz
mov
shll
push
inc
pushl
adc
andl
xor
shrl
xor
in
cmp
orb
insl
int
lock
in
push
ret
mov
sbb
das
push
cwtl
adc
int
les
push
iret
lds
cmp
push
inc
mov
test
popa
outsb
cmc
sub
mov
arpl
sbb
push
test
test
or
mov
mov
xchg
repz
mov
stc
push
pop
mov
cs
xor
mov
iret
js
cmp
scas
xchg
jl
out
or
addr16
cmp
shr
pop
std
popa
cmp
test
cmp
jnp
stos
outsb
loope
jmp
std
pop
lret
mov
insb
ljmp
jge
test
mov
pop
rorl
mov
clc
addr16
aam
jl
insl
mov
les
iret
jbe
sub
adc
cs
fisubs
and
mov
nop
stc
cmp
inc
rclb
pop
lods
out
cmp
jno
dec
ja
mov
lds
xor
pop
lret
inc
test
leave
lock
arpl
loop
testb
rcrl
in
or
shrl
inc
testb
lock
sbb
sub
mov
stos
ficoms
cmp
stos
xchg
iret
jne
fcomps
roll
movsb
and
fidivl
push
out
test
pop
or
cmpl
sub
add
and
daa
stos
xchg
mov
add
jbe
xor
adcl
jp
or
imul
sbb
mov
ss
push
and
mov
call
dec
pushf
pop
loopne
dec
mov
mov
lret
jp
pop
adc
xchg
das
dec
cmpsl
int3
mov
out
or
arpl
rcrl
add
sub
stc
rorb
xor
add
lock
jns
mov
cmp
push
jecxz
stos
mov
test
add
jno
bnd
jge
iret
adc
mov
pop
js
inc
and
movsl
sub
mov
jne
pop
push
out
cmc
push
mov
or
sub
orl
out
std
in
insb
or
mov
lods
sbb
mov
inc
push
or
lods
sub
int3
sub
outsb
xchg
fcomp
and
xchg
aad
fld1
test
xlat
jnp
mov
mov
mov
dec
mov
popf
and
ljmp
or
je
mov
sbb
pop
xor
cwtl
adc
mov
fwait
xchg
pop
pushl
int
jns
jl
jo
inc
xchg
jae
cmp
hlt
popf
mov
cmp
stos
and
imul
cltd
push
jp
jecxz
ljmp
test
xchg
fcmovu
negl
and
icebp
sbb
enter
cmpsb
push
scas
lods
call
popf
jmp
shrl
cli
iret
int3
push
ret
out
mov
rcll
cld
xor
daa
xchg
push
lods
dec
scas
loop
cld
fidivl
imul
jbe
repnz
push
dec
es
inc
sbb
xchg
pop
loope
clc
xchg
mov
adc
in
cld
ds
pop
mov
push
scas
sbb
adc
adc
mov
and
je
leave
mov
push
int
jmp
aad
xor
cmp
xor
push
fsubr
icebp
dec
push
and
sbb
subl
sahf
sbb
push
mov
orl
mov
or
inc
mov
pop
scas
mov
and
jns
insb
int
inc
inc
mov
mov
frstor
popf
clc
pop
push
cltd
add
or
lock
xchg
push
or
mov
mov
mov
cmp
inc
sbb
fs
in
xchg
iret
cmp
std
loop
inc
or
and
dec
push
adc
dec
jecxz
dec
lods
movb
cmp
mov
inc
or
xchg
cmc
and
cmc
cmpsb
scas
fbld
jl
or
imull
xchg
push
jbe
xchg
xor
in
dec
mov
sub
xlat
loope
es
jbe
scas
xorl
mov
mov
or
jae
mov
sbb
and
pop
insb
ds
xor
in
cmpl
js
movb
enter
dec
hlt
stos
add
arpl
sub
add
push
out
fwait
mov
inc
dec
mov
lods
xchg
pop
push
push
ret
adc
movsl
scas
fimuls
icebp
js
inc
push
fbld
je
push
lret
imul
push
jg
jbe
in
or
frstor
sbb
sbb
mov
in
lahf
out
aaa
xor
lcall
sub
push
dec
repnz
push
pop
gs
xchg
inc
fldcw
dec
and
cli
jb
in
xchg
out
mov
lret
mov
mov
mov
push
cmpl
sbb
inc
pop
xor
les
lock
dec
in
faddl
cli
pop
mov
mov
fistps
std
lcall
test
repz
out
sub
test
mov
sbb
fdivrl
aad
inc
cltd
mov
sub
out
jl
out
add
mov
jge
roll
mov
cltd
mov
cmc
sahf
sub
into
sarl
ja
sub
lahf
leave
int3
sub
jmp
aaa
jne
rorl
mov
xor
outsb
cmp
mov
jp
je
push
push
std
stos
inc
mov
and
sbb
xchg
sub
or
pop
sub
fadds
lea
mov
cmp
xlat
idiv
cmp
mov
sbb
jbe
out
in
jbe
mov
in
pop
lea
pop
pop
das
pop
push
sbb
push
jge
divb
repz
cmp
sbb
xchg
test
pop
mov
cmp
inc
add
dec
pop
cs
inc
lret
stc
lret
lock
je
and
mov
loop
es
jbe
jle
cmp
cmpb
push
push
push
daa
pop
arpl
call
test
jecxz
in
mov
mov
into
jp
pop
pop
mov
and
xchg
sbb
mov
mov
insb
rolb
jae
popa
ljmp
inc
mov
mov
push
mov
into
xorl
shrb
dec
std
adc
imul
pop
and
mov
pop
dec
dec
repz
fnstenv
mov
cmp
daa
movsl
fnsave
xchg
cwtl
or
add
sub
inc
ja
vcvtps2pd
dec
cmp
jno
cmpsb
push
sub
xor
lret
mov
outsb
dec
imul
clc
lods
sub
or
lock
dec
stos
jg
loopne
fstp
decl
jle
mov
insb
sub
jmp
add
ja
xchg
outsl
cli
jecxz
xchg
ljmp
mov
cli
xlat
cmpsb
and
add
push
dec
cmp
or
aaa
push
pop
pop
xchg
push
jl
rcl
ret
dec
xor
and
lret
pop
in
mov
cwtl
lds
scas
xchg
pop
or
sahf
mov
push
imul
or
xor
push
dec
sarb
jecxz
loop
aam
xchg
subl
xlat
xchg
adc
test
and
insb
or
or
and
scas
pop
das
dec
cmpsb
pop
cmp
push
adc
mov
jmp
xchg
xchg
cmp
rcrb
xchg
sarb
jle
js
xchg
cli
dec
in
sarb
pop
sbb
cmpb
int
sub
cmp
sahf
mov
ret
pop
lahf
inc
iret
sub
jne
dec
lock
outsl
sub
adc
push
cmp
pop
imul
adc
jmp
loope,pn
aas
dec
lcall
popf
aas
cmpsl
into
cmp
mov
inc
dec
mov
xor
sbb
xor
or
in
xchg
cmp
or
push
mov
cmp
xchg
shlb
pop
push
lret
jle
inc
inc
or
shrb
sbb
les
sarl
sub
loopne
add
std
cli
xchg
negb
mov
and
jmp
push
sub
mov
mov
sub
cmc
and
push
push
adc
iret
jns
xchg
xor
add
xchg
xchg
in
loop
mov
data16
clc
lods
adc
dec
xchg
pop
jo
mov
repz
jb
movsl
fs
sbb
jge
bound
sub
into
add
push
inc
in
frstor
in
dec
aad
or
aad
pop
sub
cmp
fnstcw
ret
lock
fstpl
sbb
mov
fwait
mov
enter
and
out
mov
out
dec
roll
in
inc
jnp
in
mov
dec
hlt
add
inc
xor
nop
aas
mov
push
ss
dec
mov
rcll
and
cmp
mov
nop
int3
popa
outsb
pop
mov
and
inc
push
add
push
les
push
loop
jne
dec
mov
sub
imul
lret
ret
jno
ret
and
rolb
test
rcll
insb
mov
adc
shrl
push
sub
lods
adc
pop
sbb
idivl
add
and
jo
ljmp
push
bound
mov
adcl
divl
or
dec
outsl
xor
std
pop
fisttpl
sub
ds
andl
stos
inc
xchg
scas
out
mov
clc
jns
xchg
dec
and
inc
jno
das
jmp
mov
jns
or
mov
push
adc
shrl
insl
dec
push
arpl
lahf
jg
or
mov
inc
fmul
es
rolb
cmp
inc
hlt
add
xchg
push
data16
popf
mov
lods
pop
dec
mov
push
out
testl
jl
mov
mov
aas
mov
je
aam
or
inc
andl
mov
pop
jg
test
or
mov
inc
cmp
lret
jno
dec
mov
icebp
pop
stos
jb
mov
push
jecxz
das
aam
imul
xor
xchg
lret
out
int3
das
cmp
movsb
movsl
aad
mov
rcr
jmp
cmp
out
ja
jle
call
insb
cltd
push
dec
add
cmc
push
jmp
xorb
mov
mov
push
mov
jle
push
mov
lea
sub
lret
dec
adc
imul
cmp
ja
pushf
int3
test
out
sub
fsub
pop
dec
out
ja
cmp
mov
cmp
mov
cld
cmpsl
jge
mov
jmp
divb
add
push
inc
sub
mov
sub
bound
icebp
addr16
adc
push
sbb
mov
lds
fisttps
jmp
out
jae
loop
and
test
add
sbb
sub
pop
jg
and
fwait
pop
pop
xor
out
sub
insb
mov
arpl
mov
sbb
shl
adc
mov
pop
sbb
mov
pop
rorb
filds
int
loopnew
mov
inc
es
in
loope
rcll
lret
or
test
push
sarb
inc
add
xchg
leave
xchg
inc
shll
mov
xor
inc
dec
aas
xchg
pop
cmp
push
outsb
rcrl
xor
leave
push
sub
xchg
mov
fldenv
sbb
repnz
stos
addb
xchg
jg
idivb
dec
ficompl
mov
cmp
xor
push
push
pop
neg
push
inc
cltd
mov
xchg
xchg
cmpsl
cmc
rcll
jnp
in
jg
cs
loopne
pop
add
add
iret
jbe
add
or
ja
fimuls
pusha
cld
test
inc
add
inc
shll
jecxz
shrl
sbb
pop
mov
inc
adc
mov
add
es
arpl
test
lods
dec
test
imul
scas
cmp
cmp
xor
rol
mov
test
dec
xor
ret
stos
test
push
xor
andb
imull
lea
xor
rclb
loop
sbb
int3
iret
jno
sbb
into
icebp
push
pop
jbe
daa
loop
push
inc
mov
stos
mov
hlt
xchg
lods
add
push
mov
and
add
test
xchg
aam
inc
sbb
pop
rcl
nop
fidivrs
and
fcomps
ljmp
xchg
sbb
and
xlat
enter
or
outsb
add
fst
push
fucom
std
mov
sub
and
adc
movsl
mov
push
pop
or
cmpsb
cmp
inc
jecxz
in
inc
xor
xchg
mov
pop
inc
mov
or
out
xchg
into
dec
adc
lods
jbe
sub
aaa
mov
clc
jecxz
mov
push
mov
es
loop
lds
cli
cmp
cwtl
sub
dec
dec
push
cmp
adc
add
outsl
out
hlt
aad
push
mov
nop
sub
cwtl
xor
or
jmp
pop
pop
inc
loop
push
jae
insl
stc
add
in
cli
mov
add
xor
aad
popf
mov
inc
ds
clc
jge
inc
arpl
sbb
jno
adc
rdtsc
mov
je
pushf
js
or
mov
hlt
js
add
ljmp
add
or
out
mov
or
sahf
sub
mov
jge
insl
sub
int
lods
fidivl
add
inc
shl
stc
jo
pusha
sahf
hlt
lods
sub
cmovb
xor
add
ljmp
pusha
push
pop
aaa
mov
repnz
outsb
xchg
push
stos
xor
push
inc
adc
mov
add
iret
popa
dec
jno
pop
xor
ljmp
jmp
insl
pusha
cmpsl
adc
stc
pop
xor
dec
out
sub
xchg
fcomps
outsb
in
push
std
add
or
mov
push
sti
std
add
and
adc
ds
and
into
xor
imul
ret
or
xor
fwait
cmp
das
inc
repz
or
mov
imul
movl
jle
test
add
mov
lret
sbb
ja
push
fs
jne
xorb
mov
ss
punpckhdq
push
cld
les
mov
or
jmp
fsts
daa
popf
sub
pop
int3
in
fs
ja
inc
lahf
lcall
mov
clc
add
add
jns
adc
inc
jecxz
shlb
pop
pop
fs
incb
jg
icebp
movsb
out
pop
pushf
adc
pop
mov
jle
push
push
out
mov
mov
push
int3
jnp
andl
mov
dec
push
outsb
ret
inc
jg
aas
add
xchg
lcall
int3
aam
adc
int3
sub
es
jnp
xchg
push
std
stos
loop
sbb
xchg
jns
cmp
pop
int
dec
push
or
xor
je
jl
dec
inc
cmp
ss
dec
imul
and
jno
cmp
out
or
dec
dec
lods
outsb
mov
mov
push
xor
stc
push
fimuls
divl
lcall
cli
jmp
loopne
pop
push
sub
jnp
aas
pop
aad
frstor
pusha
sub
sti
pop
mov
dec
mov
sub
jo
cmp
loop
xchg
and
xor
popa
inc
fildll
negl
inc
std
push
push
pop
pop
pop
and
leave
in
fstps
rcl
dec
out
push
je
repnz
xchg
and
mov
lcall
or
out
cmp
sub
jmp
outsb
es
insb
xorl
mov
scas
and
mov
inc
lcall
mov
xchg
jl
outsl
mov
inc
shrb
xchg
or
adc
ja
inc
add
aas
jecxz
movsl
or
lods
and
jmp
jp
imul
inc
es
sbb
cmp
add
scas
add
dec
bound
int
lods
jle
jnp
pusha
sub
dec
out
mov
jo
cmp
sbb
arpl
pop
std
imul
int
jmp
sub
jo
movsl
loop
cmpsl
push
mov
std
hlt
mov
push
fisttpll
cmp
stos
pop
push
data16
fwait
pop
stos
loop
inc
cmpsb
sub
lea
jecxz
jle
insb
jne
int3
clc
jge
inc
test
xchg
hlt
mov
mov
pop
cmp
add
clc
jne
mov
dec
mov
es
movsb
imul
push
ja
cs
fisttpll
cmp
inc
cmp
dec
repnz
paddsb
movsb
dec
jbe
mov
mov
ja
mov
scas
out
push
rol
inc
jg
popa
cltd
sub
roll
insl
jns
shl
mov
pusha
mov
adc
pop
push
sbbb
mov
daa
imul
cmp
aad
sub
add
fldt
dec
push
jle
xchg
shll
pop
pusha
pop
in
sbb
fcompl
cli
inc
subb
mov
iret
xrelease
add
gs
out
in
push
mov
cld
cmc
enter
inc
hlt
mov
sbb
dec
xor
adcl
insl
call
and
xchg
popa
into
hlt
push
repz
ret
adc
bound
inc
dec
cmpsl
sub
sarb
mov
inc
lcall
xor
adc
or
sub
dec
sbb
bound
cmp
jns
shl
ds
aam
or
mov
mov
repnz
push
mov
mov
mov
xchg
pop
into
out
mov
icebp
cmp
repnz
lock
cmpsb
cmpsl
xor
pop
movsb
adc
adc
ja
lahf
in
in
addl
xor
pop
add
mov
cmp
outsl
push
orl
das
js
lcall
adc
mov
test
sub
xchg
sbb
sub
out
shrl
pop
shll
fimull
aas
ja
sbb
jmp
fs
test
xor
xchg
cs
test
int3
or
ljmp
sub
mov
cmp
or
and
sub
iret
fcmovnbe
pop
pop
outsb
sub
pop
xor
lcall
in
inc
dec
sub
push
xlat
mov
cmp
xchg
pop
jmp
cmpsb
mov
mov
outsb
dec
sub
faddl
add
test
es
sbb
aas
repnz
mov
mov
sti
mov
sar
adc
add
pop
dec
scas
sub
xchg
push
mov
inc
ss
into
in
sbb
cmc
cmp
fcoml
je
jno
imull
mov
fbstp
push
jl
sub
das
jp
mov
out
and
mov
fisubs
xor
sub
mov
adc
sub
cmp
clc
cmp
outsb
push
sbb
cmp
inc
fucom
dec
daa
pushf
dec
and
fisttpl
ret
movsl
andl
jmp
scas
sub
mov
xchg
int3
clc
sub
mov
insb
test
in
int3
rcl
sti
jae
rcrl
out
push
int
sub
aaa
xlat
cld
push
test
or
cwtl
iret
aaa
mov
fisubrl
bound
cwtl
cltd
sbb
lods
sbb
xor
ficoml
test
pushl
lret
addr16
loop
imul
rcll
xor
or
lock
cli
in
lcall
mov
rolb
jmp
fucomp
push
jae
and
test
and
xor
in
push
lods
xor
out
in
jecxz
iret
dec
mov
push
cmp
sbb
sbb
mov
leave
je
xor
enter
mov
push
dec
jnp
addl
and
cwtl
adc
decl
cmp
jle
loopnew
std
scas
jg
mov
jl
ljmp
pop
repz
push
xor
pop
and
mov
stos
mov
sbbl
sbb
inc
xchg
dec
test
sahf
dec
mov
out
inc
adc
push
xor
stos
lret
push
push
mov
cs
sbb
xchg
jb
out
inc
out
push
sarb
dec
inc
imul
xchg
stos
add
mov
add
lret
mov
pop
fcoml
sbb
adc
and
pop
jecxz
loope
stos
in
adc
sbb
add
jbe
popf
or
loop
or
and
cwtl
adc
lock
push
mov
and
jo
xchg
mov
adc
jp
and
stos
pushf
adc
push
jne
daa
cmpsb
test
icebp
sarl
outsb
sti
mov
in
js
scas
ja
xorb
inc
pop
ret
dec
pusha
std
sar
fdivr
mov
lret
mov
mov
or
mov
push
je
pop
pop
or
push
pusha
sbbl
push
icebp
frstor
pop
mov
rcl
pop
popa
adc
jbe
sub
aad
out
hlt
push
cs
add
mov
or
mov
jle
mov
prefetcht0
or
xor
add
inc
push
mov
inc
cld
xchg
lods
mov
mov
push
jns
sti
cmp
int3
outsl
insb
and
inc
cmp
fdivrl
push
add
sbb
dec
rol
arpl
mov
mov
jge
adc
out
int
nop
push
xor
nop
enter
mov
leave
jne
sub
cmp
cmp
daa
imul
aam
inc
loop
xchg
pushf
adc
sub
mov
mov
leave
cli
cmp
jle
inc
xlat
xchg
js
jae
xchg
cmp
xchg
jns
sbb
xchg
mov
sub
mov
gs
xor
iret
inc
popf
bound
jne
adc
fsubr
add
divb
xchg
addl
test
mov
shrb
add
pop
std
pop
inc
in
ret
fldenv
cli
faddl
fisttpl
insb
xchg
push
xor
sub
sbb
movsb
jne
insl
add
sub
mov
add
pop
inc
push
inc
shrl
test
xchg
popa
adc
mov
mov
shlb
sbb
pop
push
popa
mov
mov
adc
dec
xor
dec
add
jae
in
sbb
mov
adc
mov
pop
fidivs
test
or
movsb
loop
pop
enter
sti
sahf
lahf
jge
mov
and
pop
add
adc
es
rcll
mov
sbb
call
fists
dec
push
inc
or
aaa
and
sub
ret
ja
and
arpl
inc
fisttps
cmp
arpl
orl
out
xchg
aaa
mov
nop
xchg
stos
out
pop
xchg
and
rolb
popl
ds
push
in
adc
push
add
lret
pop
add
cli
shlb
dec
jb
icebp
ret
in
fidivrl
sbb
mov
imul
sub
dec
icebp
cwtl
loopne
jnp
push
hlt
cli
pop
fbstp
add
mov
cmp
lea
outsl
mov
xchg
out
popf
inc
mov
sub
jg
sub
dec
mov
test
adc
xchg
push
cwtl
pop
ja
jnp
push
les
xchg
adc
or
mov
test
loop
mov
push
loop
shrb
imul
cmp
and
sbb
dec
in
adc
xor
push
mov
test
dec
jp
imul
aaa
int
jmp
inc
stos
in
sub
cli
xchg
idivl
ret
xor
data16
lret
mov
addl
mov
pop
pop
push
xor
cltd
pop
or
lods
or
imul
cmc
xchg
in
leave
mov
iret
pop
std
lret
fsub
sub
jge
cld
das
into
in
and
xor
mov
movsb
sbb
cmp
ds
push
and
loopne
les
cmp
out
insl
out
cmp
pop
push
cmp
mov
cmp
cmp
outsb
add
mov
xor
ret
dec
fnstcw
jmp
add
sahf
into
idivb
adc
dec
fucomi
xchg
lock
adc
lcall
adc
and
int
arpl
je
cmp
imul
orb
inc
stos
and
mov
sti
cmpb
push
push
rorl
mov
push
pop
or
fcoml
jmp
jg
and
inc
sbb
stos
jl
xlat
fisttpll
cltd
mov
ret
and
into
inc
or
cmp
sub
gs
js
hlt
stc
lcall
aad
mov
jo
divl
das
loop
push
out
jle
lret
mov
lcall
lods
or
sbb
mov
and
not
mov
arpl
rcrb
push
dec
mov
mov
sub
xchg
adc
enter
sub
imul
popf
push
scas
and
jnp
scas
stos
xchg
int3
push
lret
inc
ds
xchg
jb
push
push
movsb
or
fs
sbb
pop
and
addb
push
out
scas
add
lods
loopne
rolb
jbe
push
shrb
scas
lock
cmp
icebp
outsb
aaa
fnstsw
sbb
add
insb
jo
dec
cmpsl
mov
jl
or
fst
outsb
jmp
lods
dec
stos
cli
jmp
out
das
push
call
aam
inc
mov
dec
sti
push
clc
push
js
dec
out
sahf
movsl
dec
fbld
dec
ret
adc
push
pusha
dec
fs
pusha
push
stos
sbb
mov
loop
xor
outsl
jecxz
jae
sbb
sbb
out
mov
pop
push
arpl
sbb
mov
mov
sbb
xor
xchg
mov
cmp
or
mov
adc
leave
cmpsb
xor
loope
test
pop
es
ja
lock
jge
das
or
lea
insl
mov
nop
in
adc
std
out
test
inc
mov
movsl
push
push
inc
push
repz
xchg
fnstsw
js
stos
jge
lcall
push
fbld
mov
xchg
cld
push
out
notb
mov
dec
mov
add
aaa
negb
cwtl
ret
jae
sarb
dec
inc
pushf
adc
sbb
pop
xchg
fildll
cvtps2pi
push
xchg
jle
xlat
jle
jl
shrb
loope
test
stc
fsubr
notl
imul
mov
rcrl
xor
xor
inc
lahf
outsl
pop
daa
out
cmp
lcall
push
out
mov
arpl
fcoms
lods
push
jge
pop
jnp
pusha
adc
xor
ja
fucomi
xchg
adc
out
mov
xchg
data16
xchg
pop
lret
enter
or
ja
cmpsb
add
push
jmp
out
add
inc
sti
arpl
lcall
adc
cmp
pop
ja
mov
jae
xchg
push
adc
rcrb
cmp
jecxz
sbb
inc
or
shr
mov
mov
fldl
mov
jmp
fucomip
sahf
and
mov
fdivs
movsl
repnz
xchg
sbb
aam
push
sbb
int
mov
xchg
das
mov
ret
xchg
test
jno
jo
mov
jne
sbb
push
leave
je
inc
pop
dec
ret
loopne
or
mov
in
push
mov
es
mov
test
imul
inc
jnp
daa
and
inc
mov
inc
xor
and
adc
in
test
dec
sbbl
add
fcomi
xchg
or
cld
mov
test
mov
pushf
push
arpl
inc
add
ret
adc
push
add
xchg
sub
shrl
sti
xor
iret
std
idivl
cmp
add
and
mov
sbb
push
arpl
adc
cmp
and
pop
xor
cwtl
pop
gs
mov
pop
pop
lahf
imul
cmpsb
cmp
sub
lret
fadds
nop
or
sub
pop
add
fdiv
imul
scas
adc
outsl
push
sub
imul
and
icebp
jo
mov
mov
or
in
lret
jbe
jl
fidivrs
and
out
push
mov
mov
movsl
fildll
jnp
test
mov
xor
shlb
sub
sbb
les
sbb
ja
cmp
inc
mov
lahf
add
iret
les
sbb
push
out
sbb
popa
addb
lock
sbb
lock
ljmp
mov
data16
mov
cmpsb
push
iret
pop
or
ret
push
cmp
shll
scas
dec
cmpsb
ja
fs
sub
sahf
xor
popa
pusha
icebp
pop
insl
les
int3
stos
cmp
mov
pop
inc
jne
push
out
and
sub
inc
mov
inc
inc
push
cmp
push
pushf
lcall
and
out
arpl
repnz
rcll
push
inc
sbb
pop
cltd
pop
movsl
call
mov
inc
out
inc
cmp
sub
mov
jo
int3
inc
out
sub
mov
mov
jnp
sub
fsubrp
pusha
inc
ds
in
jge
xchg
xor
movsb
mov
movsl
test
loop
out
xchg
addl
pop
insl
ljmp
addr16
sub
sahf
aas
call
mov
and
add
push
jae
mov
push
bound
mov
out
aad
daa
stc
sub
ret
pop
xorl
outsb
imul
in
aad
or
and
push
jae
xchg
hlt
dec
stos
mov
push
add
aad
fs
ficoml
shll
in
pop
push
mov
stc
pop
mov
loop
mov
lods
stos
mov
insb
sbb
notl
cld
jp
pop
data16
jnp
push
sbb
ljmp
jae
fiadds
int3
add
xor
sub
adc
out
mov
cmpsl
xchg
jno
sub
mul
addr16
push
lahf
adc
dec
sub
inc
orl
xchg
lods
mov
and
push
inc
clc
mov
mov
adc
fsubrl
cwtl
sub
sub
dec
lods
sub
jge
das
pop
adc
pop
xchg
ret
cmp
dec
out
leave
jne
mov
jmp
xchg
divb
stc
pop
pushf
mov
push
mov
adc
pop
les
es
nop
in
leave
mov
int
sbb
mov
sbb
push
movsl
enter
hlt
adc
inc
cmp
jecxz
in
pop
cmp
test
push
arpl
mov
clc
xchg
test
addr16
js
mov
call
fadd
repnz
jecxz
mov
and
in
stos
inc
inc
xor
insb
add
rclb
push
mov
jbe
addb
ja
clc
pop
in
into
mov
pop
jb
fldcw
imul
jecxz
push
roll
sub
xor
mov
jge
ret
cmp
fsubrp
mov
jmp
jecxz
hlt
leave
outsl
sbb
lea
cmp
loope
outsl
mov
and
test
mov
fistpl
test
push
repz
pop
fsub
xchg
jl
jg
sbb
push
ror
shll
mov
pop
jae
jo
inc
push
bound
or
ret
test
push
jne
push
bound
lret
shll
jno
sbbb
dec
mov
daa
rclb
jno
xlat
shrb
ljmp
pop
cltd
gs
in
sub
rcrl
pop
jb
mov
mov
fwait
bound
icebp
das
pop
push
xor
add
mov
xor
pop
mov
sbbl
and
sub
xor
add
mov
popa
daa
sahf
das
dec
sbb
or
out
cmp
cmpsl
gs
and
jb
pop
xchg
push
fdivs
adc
mov
pop
inc
movsl
sub
mov
outsl
xchg
fstps
nop
sbb
fidivs
mov
jno
repz
pop
push
mov
inc
cmp
dec
mov
bound
popa
sub
je
aaa
pop
xchg
push
pop
fdivp
icebp
mov
add
test
rcrb
mov
pop
aas
mov
movsl
insl
push
push
jb
add
dec
cmc
push
xor
data16
or
repz
dec
xchg
aaa
pushf
test
rol
mov
jl
aaa
or
imul
je
les
xchg
xchg
jmp
std
int3
sbb
cmp
dec
push
negb
test
in
pop
xor
jle
hlt
sbb
push
das
inc
outsl
cmp
ds
stos
jge
cmp
in
test
ret
push
enter
in
nop
aas
test
stos
mov
cmp
dec
pop
push
jg
cmp
lret
cmpsb
stos
rclb
jb
xchg
push
insb
pop
and
repz
jecxz,pt
ljmp
inc
dec
pop
or
sbb
int
xor
inc
and
or
lods
inc
shlb
xchg
into
push
mov
fldcw
sbb
xchg
jg
cmp
fcom
sbb
inc
pop
pop
lret
daa
xor
ss
int
cmp
enter
cmp
dec
out
xlat
or
sub
test
addb
adc
push
out
dec
fmuls
xchg
sar
fisubl
fwait
add
xor
and
adc
rep
xchg
lret
ret
or
adc
pop
out
pop
jae
in
dec
gs
xchg
lods
cwtl
ja
es
lods
xchg
jae
sbb
mov
sub
cs
loopne
xor
mov
xlat
push
and
jbe
cltd
mov
and
lcall
ds
mov
imul
int
push
and
xchg
cli
add
int
sub
cmp
je
add
sub
pop
mov
pop
sbb
das
andb
xor
dec
pop
mov
inc
cmpsb
mov
test
dec
hlt
fstl
jl
inc
xchg
stos
push
mov
cmp
jo
mov
pop
jo
sbb
mov
pop
lods
lods
ds
inc
and
sub
add
push
mov
ret
outsb
addr16
in
loopne
outsb
filds
cmp
xor
roll
mov
inc
push
mov
add
icebp
ss
in
xchg
stos
cld
mov
pop
clc
pop
stos
cmpsl
pusha
adc
sub
adc
push
adc
ja
jmp
jne
xchg
outsl
pop
push
add
mov
pop
insl
stos
sbb
or
jl
jmp
aaa
mov
adc
inc
mov
sbb
mov
rcrl
pop
inc
or
xchg
or
add
inc
jbe
mov
dec
or
mov
add
mov
stc
fs
pop
rcrl
out
xorb
stos
adc
sbb
shlb
sub
iret
inc
lcall
push
fsts
jnp
cmp
mov
jb
lea
loope
xor
push
ret
je
adc
mov
jbe
push
mov
mov
dec
xlat
sbb
fsubrs
mov
mov
dec
sub
mov
loopne
addr16
sarb
jno
xor
push
fs
mov
xchg
or
or
push
sub
inc
adc
leave
cmp
mov
icebp
mov
jecxz
mov
cmpsl
pop
les
rcrl
add
inc
pop
adc
dec
mov
dec
ret
sbb
sub
mov
movsl
outsl
dec
pop
sub
mov
push
add
enter
pop
in
mov
push
ljmp
cmova
jbe
test
int3
test
ret
test
scas
mov
dec
push
xchg
xchg
fsubrs
out
loope
mov
insl
xor
ret
scas
in
dec
das
push
xor
pusha
dec
jg
xor
cmp
test
cmc
sbb
in
repz
into
iret
daa
mov
xchg
dec
add
repz
je
xchg
jge
mov
pop
add
mov
outsl
outsb
xchg
scas
idivb
into
scas
daa
imul
in
enter
xchg
rorl
jns
mov
ds
dec
es
jno
cmp
mov
int3
xchg
jmp
xor
rcrb
dec
cmp
pushf
mov
dec
xchg
mov
mov
jno
std
xor
jb
das
je
jl
in
hlt
lcall
sub
clc
in
jne
cmp
fs
scas
or
sbb
imul
jno
mov
cld
push
scas
push
mov
cmp
jge
jbe
pushf
imul
aas
cmpsl
fbld
pop
jl
in
mov
adc
pushf
rorl
scas
inc
sbb
sbb
add
xorl
clc
mov
pop
add
ljmp
sahf
fisubs
in
test
iret
popf
pop
fisubrs
dec
frstpm(287
xor
push
aas
add
adc
push
std
mov
ds
lret
cwtl
and
jge
dec
je
popa
daa
push
adc
jecxz
jb
sub
jge
mov
sbb
pop
pusha
mov
xchg
xchg
or
mov
pop
or
mov
or
or
rolb
mov
insb
popf
in
xor
cmp
ret
mov
cld
lock
jecxz
mov
pop
fisttpll
sbbb
jno
xorb
mov
daa
sub
push
xor
in
jmp
jp
sub
fisubrs
cmp
push
into
fwait
cmp
das
add
in
jecxz
filds
and
mov
xor
fs
xchg
mov
adc
popa
bound
std
push
and
push
xchg
mov
cmpsb
mov
fadd
mov
xor
lods
bound
mov
fcomi
out
mov
addr16
fwait
or
inc
cld
aaa
ljmp
sbb
pop
js
mull
xchg
ljmp
or
mov
lret
dec
sahf
ja
sbb
cli
cwtl
xor
shrl
popa
ret
push
mov
xchg
out
push
push
cltd
dec
repnz
xchg
or
es
ljmp
sbb
xor
cmpb
jp
fstps
mov
mov
imul
mov
repnz
jno
inc
add
lds
sbb
cmp
add
mov
fwait
mov
jle
xchg
stos
fstl
bnd
roll
jnp
out
or
add
pop
scas
repnz
hlt
mov
xchg
das
push
fstpt
add
lods
cmpsl
inc
enter
fadds
es
fcoms
negl
in
cmp
or
push
addr16
js
or
dec
or
push
pusha
les
sub
mov
shrb
push
rcrl
fmulp
inc
daa
clc
mov
test
push
stc
mov
icebp
test
push
repz
stc
mov
jle
push
xchg
push
sub
jno
and
jg
inc
or
push
lock
sbb
adc
push
shl
mov
mov
and
jle
dec
mov
sbb
and
jp
push
data16
mov
jne
out
jo
push
sub
loopne
adc
stos
mov
or
or
add
je
pusha
cmp
insb
push
scas
rclb
dec
sahf
pushf
xor
adc
jle
push
imul
mov
inc
mul
or
lea
dec
bound
sbb
cmpsl
xchg
ficomps
lods
pusha
cmp
ds
push
clc
imul
adc
or
mov
mov
mov
lret
shlb
fimuls
inc
mov
lods
das
cs
mov
xchg
and
sub
aas
inc
aaa
jg
sbb
jg
enter
adc
pop
in
cmp
fisttps
sub
sbb
fmuls
pop
sbb
enter
push
and
call
es
jg
enter
aaa
pushw
xchg
cmp
mov
and
ja
push
jae
je
or
xchg
in
sub
mov
movsl
jo
pop
out
repz
dec
cwtl
rolb
sbb
push
mov
mov
add
call
imul
pop
pop
insl
or
xlat
and
xchg
data16
inc
sbb
inc
into
loop
sti
sbb
push
xchg
inc
clc
or
push
inc
jae
aaa
out
adc
sub
repnz
pop
xchg
mov
test
popf
cmp
and
fildl
push
enter
or
or
pop
push
lret
scas
loopne
aad
mov
mov
rcl
or
dec
orb
push
push
out
aad
mov
inc
das
mov
mov
xor
dec
imul
in
cmp
sbb
dec
cmpsb
movsl
inc
in
and
pusha
sub
add
pop
call
cmp
adc
adc
jo
icebp
push
push
push
mov
push
iret
insl
ja
sbb
test
loope
insb
insl
cmpsl
lret
and
xchg
dec
pop
cli
fcomp
testb
mov
xor
inc
stc
sub
mov
aam
mov
xor
outsb
jl
fisttps
imul
and
arpl
or
push
fisttpll
fwait
sarl
xlat
sub
iret
negb
outsl
push
in
push
es
fsub
push
and
or
stc
mov
pop
ficoml
movsb
push
icebp
popa
or
mov
aaa
sarl
fwait
add
sahf
push
xchg
lock
jae
inc
xchg
out
cmp
adc
sub
jae
in
out
jecxz
inc
mov
ret
in
add
popa
and
add
js
repz
mov
lahf
jp
lcall
mov
je
aaa
popa
cmp
dec
fwait
jae
jnp
mov
int
jnp
adc
add
pop
xchg
inc
stos
shll
xchg
xchg
int
mov
cltd
mov
jns
in
push
and
mov
cmp
int3
jb
js
xchg
mov
adc
outsl
jo
js
adc
add
aas
adc
xor
out
fs
mov
lret
mov
mov
add
xchg
inc
out
cwtl
iret
mov
sbb
mov
int
pop
and
and
out
cmpsl
jns
fistpl
and
inc
sbb
mov
adc
xor
andl
jbe
or
jp
idivb
sub
dec
mov
je
int
sub
inc
pop
cmpsl
sti
xchg
mov
mov
xchg
mov
sahf
test
push
push
lahf
addb
push
addl
es
pop
fcmovnb
orl
lahf
push
xchg
jmp
loope
xor
fs
cmp
xchg
leave
sub
out
mov
rcrl
sahf
push
and
mov
shrl
and
ud1
pop
jge
je
push
add
stc
stos
add
test
loopne
pop
pusha
adc
jno
pop
cs
lahf
sub
insb
fs
cmp
pop
insb
mov
in
mov
push
fldl
jp
enter
push
mov
pop
icebp
daa
sbb
cmc
or
data16
repz
adc
jecxz
clc
test
jo
into
daa
idivb
roll
popa
xor
push
inc
outsl
sub
les
add
stos
dec
push
lret
pop
pop
stc
mov
frstor
dec
fmul
adc
ret
inc
mov
call
jmp
or
shl
jnp
jae
mov
inc
lock
fsts
cmp
cmc
adc
ret
adc
add
add
mov
mov
sbb
dec
jl
arpl
dec
or
bound
or
lret
and
cmp
jbe
outsl
fwait
add
push
push
sub
adc
xchg
mov
es
es
pop
and
mov
call
out
out
stc
ss
rorb
and
push
cmp
into
mov
mov
push
mov
icebp
adc
lods
pop
movsb
cmp
shll
repz
pop
jl
jmp
mov
scas
pop
mov
sub
xchg
imul
ret
pop
std
mov
clc
push
or
push
movsl
xchg
rorb
mov
cwtl
mov
mov
cmp
add
jae
scas
pop
xchg
pop
push
movsl
shll
xchg
sbb
sbb
je
sbb
sub
test
or
push
adc
mov
xlat
jmp
pop
sbb
movsb
test
in
push
push
adc
mov
cmp
pop
decl
jne
pop
mov
push
jb
enter
int
xlat
pop
bound
inc
xchg
insl
popa
adc
and
in
mov
in
jne
nop
mov
std
dec
mov
outsl
iret
add
push
les
mov
mov
xchg
add
aam
sub
das
inc
jmp
pop
jp
mov
das
add
add
daa
add
lds
fstpl
popa
testl
imul
call
outsl
movsl
jb
repnz
cli
insl
into
out
cltd
orb
shl
pop
js
jle
cmp
or
call
or
stos
mov
xchg
pop
insl
adc
cmp
xor
sub
mov
adc
std
xchg
fisubrs
or
lret
mov
enter
lds
cltd
xlat
sub
cltd
xor
mov
dec
shll
sub
and
lret
gs
popf
enter
inc
bound
mov
mov
push
inc
inc
jae
jle
sub
subb
xchg
pop
loop
nop
jo
lock
dec
test
mov
shr
movsb
mov
insl
pop
or
clc
xchg
xchg
cmp
jae
ss
int
adc
add
clc
push
outsl
dec
jge
sub
xchg
xor
pop
jb
xor
jns
sbb
out
inc
xchg
hlt
ret
lret
data16
jmp
mov
sahf
mull
icebp
ljmp
cld
mov
std
sarl
shrb
loope
gs
push
dec
sbb
mov
mov
outsb
outsl
sti
shrl
imul
idiv
push
int3
mov
mov
inc
nop
push
shrb
or
data16
subb
in
loopne
push
xchg
mov
push
cmpsl
shl
ljmp
mov
in
scas
repz
sub
lahf
jp
sbb
cmp
inc
repz
and
xchg
mov
xchg
jo
imul
cmp
ljmp
push
movsl
lret
add
inc
xchg
sti
sbb
in
sarb
ffree
test
push
pop
ds
mov
sbb
jb
push
test
shll
dec
cs
repz
mov
leave
loope
push
imull
shrb
ret
xor
das
jne
sub
jno
cli
add
pop
bound
clc
repz
or
inc
in
add
sbb
shll
jl
out
scas
or
cmc
push
sub
in
int
mov
mov
sbb
xor
mov
mov
jmp
add
xor
ret
sub
lock
popa
outsb
in
in
pop
int
dec
and
ja
in
jecxz
ja
inc
pop
jge
test
lcall
in
repz
and
xor
xchg
inc
into
int
cmp
int
jns
push
das
sbb
adc
pushf
fwait
test
push
fildll
push
ret
push
add
js
jae
jo
js
mov
jo,pn
jbe
lea
ss
hlt
sub
add
mov
fcompl
pop
inc
out
lock
or
jb
popf
rol
mov
ja
in
push
sbb
push
loope
insb
jp
jg
fstl
dec
jecxz
sub
bound
icebp
int3
sub
loop
or
xor
test
stos
clc
mov
lret
dec
ja
jno
mov
adc
out
cmp
andl
les
arpl
mov
iret
je
cmp
cmp
add
pop
or
cmp
std
adc
sub
fucomp
mov
mov
sarl
or
sbb
sbb
sub
bound
fs
lods
int
add
xor
push
cmpl
push
sbb
stc
loop
mov
mov
jb
pop
add
dec
pop
movups
repnz
sub
mov
sub
fdivl
mov
mov
outsl
and
test
xchg
pusha
adc
xchg
mov
icebp
jno
sahf
sub
inc
jg
sarb
inc
xchg
in
mov
int3
add
or
bound
pop
pop
mov
inc
aam
test
lret
enter
sbb
test
stc
ja
mov
mov
xor
insl
cmp
mov
sbb
mov
pop
push
into
or
mov
aas
je
sub
addl
pop
test
arpl
push
add
icebp
cmp
aam
xchg
add
out
push
loopne
push
scas
pushl
mov
lock
mov
lea
mov
lea
js
adc
jle
pop
cmc
pop
pop
push
xchg
sar
ds
dec
loope
fidivs
mov
mov
pop
pop
rcrl
adc
push
sbbb
popa
js
out
mov
repnz
jns
test
lret
cmp
mov
or
rcr
adc
xchg
adc
mov
shll
mov
dec
xchg
mov
movsb
mov
add
cmpsl
jns
ss
rorb
sarl
inc
insb
mov
push
scas
dec
push
int
jb
mov
dec
inc
pop
hlt
add
int
pop
mov
rolb
inc
push
or
rorb
addb
xchg
add
fldenv
gs
movsb
fcoms
sub
mov
scas
and
test
aaa
pop
nop
subb
addr16
inc
js
push
add
mov
aad
stc
pop
mov
inc
sub
jle
mov
xchg
xchg
in
inc
cwtl
push
sbbl
dec
push
sub
es
mov
mov
sub
jbe
push
pop
xor
cwtl
and
sbb
and
test
shlb
jl
add
aad
fsubs
xchg
inc
push
stos
iret
addl
outsl
inc
loope
addl
fiaddl
mov
inc
xchg
add
sbb
fistl
ds
or
shlb
cwtl
rcrl
dec
or
add
jp
mov
xor
ds
std
inc
ds
pusha
sub
loope
iret
ret
xor
mov
pop
dec
enter
push
jae
das
icebp
dec
push
je
outsl
movsl
hlt
inc
jg
pop
sar
dec
push
dec
and
je
mov
fwait
mov
clc
clc
sbb
scas
std
ret
dec
cwtl
je
movsl
push
jmp
popf
into
mov
inc
mov
sub
test
cmp
into
imul
gs
jge
ficompl
add
nop
je
xchg
pop
enter
daa
adcl
daa
enter
xchg
cmp
dec
push
sti
jne
sub
push
add
sbb
mov
je
les
cmpsb
leave
and
xor
inc
xor
xor
mov
enter
movsl
ja
mov
push
push
inc
lods
xchg
cmp
fidivrs
cli
inc
out
dec
in
pop
mov
jge
pop
cwtl
or
cmp
adc
sbb
ret
enter
cmp
js
cmpsb
dec
inc
enter
mov
inc
mov
mov
jns
icebp
ret
cld
out
shr
xchg
push
cmp
pop
lods
repnz
xor
add
mov
fs
fildl
mov
cmp
jae
jmp
ja
xor
cltd
imull
test
mov
and
aad
jns
lcall
subb
je
repnz
push
mov
enter
add
or
push
sbb
iret
leave
lods
dec
cmpsb
sub
test
nop
je
xor
adc
fadd
or
jle
push
out
lock
dec
inc
lods
and
cmp
in
outsl
repz
sbb
adc
arpl
dec
in
and
dec
xchg
test
push
dec
call
cltd
cmp
jno
dec
sbb
push
leave
and
imul
mov
sub
sub
xor
imul
add
mov
cli
add
stos
fwait
dec
movsl
cwtl
xchg
mov
lahf
dec
nop
and
or
and
pop
mov
mov
sub
push
adc
cmp
xchg
dec
adc
push
and
and
pop
mov
sti
es
lock
add
leave
mov
mov
incb
repnz
loope
test
icebp
mov
cltd
cld
fsubrs
rcll
cwtl
push
or
and
pop
push
loopne
push
out
ljmp
imul
jge
cmp
ljmp
push
scas
mov
aam
push
imul
push
idivl
test
popa
mov
mov
push
negb
xchg
xchg
mov
pop
clc
push
js
fisubs
inc
cmp
dec
jno
push
push
lcall
xorl
imul
sub
subb
je
lret
bound
xchg
ss
mov
mov
inc
fistl
push
and
jb
cmp
dec
fsubrl
ret
push
ljmp
icebp
jg
xchg
pop
xchg
icebp
ret
and
rcll
cltd
add
mov
sub
dec
jne
sub
out
inc
test
inc
mov
xchg
testl
outsl
pop
fistpl
or
orl
add
pop
cmp
roll
cwtl
cmp
sbb
test
push
gs
test
int
pop
insb
insl
and
out
add
mov
jns
adc
shr
adc
adc
loop
jno
cmc
mov
sbb
mov
xor
lret
mov
stc
lea
pop
out
ret
pop
cltd
jb
add
xchg
mov
nop
idivl
mov
add
push
jmp
pop
mov
jae,pn
cmp
mov
ficomps
mov
push
cld
fwait
or
and
mov
inc
nop
dec
lea
push
fdiv
pop
mov
cli
pushf
inc
out
lret
mov
out
arpl
or
fwait
adc
sti
lock
aas
and
out
jbe
fldl
sbbl
dec
xor
leave
push
fwait
inc
lret
mov
dec
cmp
mov
or
cmpsl
xchg
jmp
scas
xor
pop
bound
movsl
loopne
cmpsl
jno
lods
pop
mov
adc
sti
mov
add
mov
shlb
ja
or
pop
mov
xor
xor
js
lret
cmp
jnp
adc
pushf
fmuls
int3
and
les
les
or
mov
ffree
add
movsb
xor
scas
cld
inc
jne
out
vsqrtps
cmc
lods
jae
movsb
dec
dec
pop
jno
inc
decl
inc
outsl
jmp
stos
lret
push
int3
xchg
inc
xor
mov
lock
or
dec
lock
in
pop
enter
and
int
mov
jecxz
cmp
fiaddl
int3
std
nop
shl
jae
cwtl
mov
sub
add
xor
les
sbb
sti
shll
cltd
repz
icebp
xchg
or
in
test
xor
inc
dec
fwait
std
xor
and
jp
mov
movsb
xchg
mov
sahf
xchg
push
dec
pushw
push
out
gs
cmpsb
jle
clc
fcoms
jl
cli
rcrl
test
mov
mov
xchg
cmp
mov
loopne
dec
mov
cmp
call
add
sub
mov
in
push
jl
sar
nop
sbb
outsl
out
inc
inc
pop
mov
add
sub
cmpsb
popf
add
mov
lcall
inc
mov
sbb
fdivrl
dec
mov
rol
xchg
pop
mov
fsubrs
inc
pushf
sub
fcomps
or
daa
or
jp
mov
ljmp
push
and
insb
push
xchg
test
sbb
and
pop
jle
mov
push
stc
call
aaa
lods
andb
cmp
outsl
cmp
add
pusha
gs
jbe
sahf
pop
sub
fldcw
in
fs
mov
out
roll
iret
or
nop
push
add
iret
push
push
xchg
sbb
sbb
lret
jg
test
leave
sbb
ja
push
mov
mov
mov
push
and
jne
cs
aam
or
shlb
or
jno
std
addb
ret
in
leave
mov
mov
ljmp
into
rcrb
jno
mov
cli
test
jecxz
loope
aad
push
jo
cwtl
das
shrl
xor
push
out
jae
xchg
lcall
xchg
xchg
dec
shrb
cli
add
cld
pop
scas
dec
mov
jmp
ds
mov
and
jecxz
jmp
aad
data16
and
pop
xchg
lods
cwtl
mov
cs
mov
sub
or
cmovle
xor
inc
repnz
mov
je
pop
imul
adc
xlat
mov
xchg
insl
test
js
pusha
xchg
in
push
xchg
ljmp
rol
sub
jno
dec
push
jns
stos
out
jmp
iret
scas
fucomp
sub
ret
adc
or
aad
in
imul
mov
inc
push
movsb
sbb
push
mov
pop
adc
rcrb
call
movsl
mov
mov
inc
sbb
arpl
sbb
outsl
xchg
dec
leave
loopne
xor
negl
iret
pusha
or
pop
mov
mov
into
les
andl
int3
xchg
mov
frstor
ja
mov
loope
xchg
iret
cwtl
stos
clc
add
jle
shr
ljmp
je
add
lds
iret
lock
xor
cwtl
mov
gs
sub
jmp
add
incl
mov
or
mov
iret
mov
ljmp
sbb
scas
cmpsl
das
ss
inc
iret
and
rcll
je
cli
lcall
fbld
les
lret
push
sbb
out
jmp
in
xchg
add
jb
nop
cli
sbb
fs
jb
das
ss
les
adc
or
sub
stos
into
mov
dec
jnp
insl
int
mov
fisubrl
push
dec
jne
sahf
push
xchg
ds
cmpl
lea
pop
and
cmp
iret
mov
mov
leave
or
sbb
test
movb
insl
and
add
mov
imul
jno
pop
cmpsb
mov
pop
ds
movsl
sahf
loope
nop
jp
xchg
icebp
cwtl
aaa
cltd
or
push
sbb
push
mov
je
call
sahf
adc
repz
pop
xchg
push
push
push
movsb
add
sbb
dec
ret
add
movsb
push
stc
lahf
nop
pop
popw
fcomi
cld
push
push
jmp
frstor
das
icebp
daa
sbb
and
push
into
push
loope
lahf
lods
cmp
clc
push
jae
pop
lock
in
push
sbb
dec
int3
mov
mov
push
or
xlat
pop
add
and
lds
std
iret
insb
mov
mov
push
sarl
push
push
push
subl
add
call
mov
out
lret
lcall
push
xchg
arpl
imul
xchg
leave
mov
mov
adc
jnp
pop
imulb
sub
cmp
mov
add
mov
andb
pop
or
jne
jle
sub
filds
pop
je
cld
stc
mov
leave
push
pop
nop
inc
adc
aad
scas
xchg
test
fisubs
mov
sti
scas
or
lds
xlat
jg
push
and
jne
or
pop
push
and
out
inc
movsl
out
orl
aad
xchg
mov
rcr
push
in
xchg
sbb
mov
pusha
push
cmp
sbb
pop
insl
xor
mov
dec
neg
hlt
hlt
fcomps
adc
repz
mov
sbb
dec
fwait
xchg
ret
lds
addl
lret
pop
dec
mov
clc
icebp
repz
enter
push
xor
ret
cmp
fcomps
xlat
adc
in
ret
incb
push
loop
xor
mov
push
fdivl
sar
fsub
xchg
mov
lock
dec
mov
ss
rclb
fistl
mov
testl
pop
popa
xor
jbe
sub
sbb
adc
mov
hlt
inc
shl
nop
dec
sbb
push
push
push
orl
movl
jb
insb
adc
mov
sub
bswap
repz
xchg
fiadds
sbb
jp
and
ljmp
in
xor
mov
ds
jecxz
dec
ss
sbb
and
movsl
jns
xchg
cmc
mov
dec
mov
hlt
push
stos
fcomip
push
mov
add
mov
ror
xor
adc
or
xor
sub
iret
fs
lret
mov
bound
fsts
scas
scas
aad
jp
sub
adc
movsb
in
xchg
or
cld
pop
push
adc
testb
jns
mov
xchg
sbb
mov
cwtl
xor
fwait
outsl
dec
push
or
and
into
fcompl
inc
repz
mov
jmp
arpl
dec
pop
inc
lods
ss
adc
pop
jno
sti
dec
call
adc
sbb
add
pop
into
adc
inc
push
cmc
mov
lods
jae
adc
push
dec
shr
push
adc
push
pop
inc
sbb
rorl
arpl
stos
inc
mov
sub
xchg
pop
cmp
cmp
inc
shr
jbe
cs
push
cld
in
iret
in
je
mov
inc
pop
inc
stos
push
mov
mov
add
adc
les
push
fcompl
imul
push
mov
hlt
test
ret
cli
cmp
jnp
loope
mov
dec
push
pop
add
stc
rcr
push
dec
into
push
scas
gs
jo
nop
fbld
or
leave
inc
sahf
jb
dec
sub
jmp
je
dec
cmc
pop
or
jnp
mov
lods
xor
mov
scas
push
xchg
ljmp
sub
dec
andb
insl
nop
xor
xor
mov
jne
rol
or
aam
xor
or
xchg
xchg
adc
mov
inc
in
inc
ljmp
mov
pop
or
in
mov
adc
sbb
in
lock
sbbl
testl
out
stos
inc
ljmp
push
in
mov
inc
loopne
mov
js
mov
mov
cmp
adc
push
movsb
jno
xor
notb
mov
xchg
repz
mov
xchg
shll
aaa
inc
stos
mov
outsl
mov
jmp
push
loop
cmp
cmp
mov
rolb
fs
clc
inc
cltd
push
fidivrl
push
jno
mov
daa
sub
inc
pop
jo
mov
mov
add
insb
test
into
add
push
add
mov
out
adc
pop
or
push
aas
out
faddp
mov
jge
sub
je
stos
push
pop
lret
xchg
or
xor
insb
and
mov
lea
xor
call
popf
ss
movntps
adc
inc
lcall
mov
mov
jmp
cli
sub
dec
and
movsl
push
pop
stc
cmp
movsb
sbb
xchg
enter
scas
repz
and
shll
sahf
aas
jo
mov
out
fldl
jbe
push
dec
es
and
divb
out
lret
ret
dec
fnsave
test
jnp
xor
repnz
loopne
pop
or
bswap
xchg
pop
lock
cld
adc
xchg
push
mov
ret
adc
dec
icebp
pop
jmp
insb
rcrl
shll
jne
decb
pop
cs
es
mov
jg
lret
pop
aas
xor
sarb
lret
adc
test
mov
repz
imul
cli
xchg
and
enter
in
dec
or
jp
jp
test
aaa
adc
loopne
mov
lcall
inc
call
jg
mov
jge
add
clc
movsl
pop
jle
jo
fsubrs
lock
adc
dec
fldenv
sarl
xchg
leave
inc
jl
pop
inc
xchg
inc
mov
pop
jo
leave
lods
mov
inc
or
mov
dec
je
add
jge
jp
dec
push
push
lret
and
stc
push
popa
hlt
add
popf
je
or
mov
int
sub
xor
hlt
adc
cmp
sub
pop
sarl
int3
lahf
call
and
jne
cld
shlb
mov
and
out
gs
loope
mov
out
sti
dec
cmp
cmp
das
ret
nop
sbbb
or
stos
int
popf
xor
lcall
aad
fsubp
mov
test
cs
push
lock
mov
frstor
notrack
ja
movsl
movsl
bnd
iret
scas
imul
sbb
movsl
js
std
push
pop
pop
test
pop
cmp
cmpl
push
jecxz
xor
out
inc
movsb
jmp
mov
inc
pop
inc
bound
mov
add
jle
and
xchg
gs
mov
setno
mov
sbb
and
mov
sub
loopne
pop
dec
sahf
nop
insb
xchg
or
jge
in
dec
and
out
fcoml
fisttps
push
adc
add
mov
inc
pop
or
push
sahf
jp
mov
dec
inc
pop
fisubrs
clc
movsb
push
mov
sub
mov
popf
les
dec
mov
lcall
jg
loopne
jnp
mov
cmp
xorb
dec
inc
cli
ss
pop
sub
push
add
xchg
push
push
dec
sarb
addr16
outsb
sub
repz
xchg
pop
and
clc
jmp
mov
inc
mov
or
xchg
jmp
movsl
push
add
enter
pop
xchg
adc
push
push
ljmp
dec
push
or
xchg
push
lcall
ds
mov
or
out
mov
or
jae
sahf
mov
xchg
push
pop
jo
imul
lret
filds
sbb
lahf
lret
mov
std
mov
loopne
dec
push
push
aas
repnz
fwait
dec
enter
cmp
jl
clc
jmp
and
pop
or
insb
jg
xor
xor
xchg
add
inc
roll
push
mov
fwait
arpl
pop
adc
fcoms
xlat
cmp
pop
sub
jg
mov
pushf
push
aam
cli
sub
mov
xor
jb
inc
js
jo
jp
es
xor
pop
adc
cmpsl
mov
and
inc
mov
sbb
inc
push
mov
ret
sbb
adc
mov
je
cmp
pop
mov
xchg
push
js
or
pand
pop
dec
mov
jbe
xor
pop
mov
mov
popf
inc
das
dec
jnp
aad
mov
mov
andb
mov
fstpt
cmp
sbb
call
mov
cmp
leave
in
sbb
test
add
push
ljmp
addr16
cmc
movsl
inc
testl
inc
sub
sbb
lock
sti
jnp,pt
mov
mov
mov
jnp
sti
adc
mov
inc
jae
mov
out
leave
dec
fcoms
sbb
add
addr16
ret
cmp
test
adc
inc
into
jg
mov
scas
jle
int
pushf
sti
cmp
test
dec
push
lods
cmpsl
stc
and
inc
arpl
and
adc
dec
addl
mov
neg
fwait
or
icebp
xchg
cs
in
and
pop
dec
imul
mov
xor
mov
push
out
lods
jecxz
inc
pop
jge
nop
cld
out
adc
add
js
or
enter
call
inc
mov
or
jb
sub
mov
addr16
clc
inc
daa
call
movsl
fbld
cmp
mov
jge
jmp
cmp
xchg
sar
test
leave
mov
adc
xchg
nop
test
addr16
inc
pop
dec
cmp
push
pop
push
movsl
dec
push
stos
popf
hlt
jnp
ret
arpl
adc
or
inc
xchg
add
push
pop
xchg
mov
loope
pop
aad
jg
push
lcall
xchg
shlb
push
lods
sub
pop
sub
subl
scas
pop
add
mov
xchg
mov
rcrl
je
sub
and
aam
xchg
pop
std
and
inc
inc
scas
fs
mov
jno
ds
push
sti
push
add
jne
cmp
push
decb
aaa
shll
das
push
aad
inc
xlat
lods
shll
sbb
in
add
push
fildl
cmp
sbb
mov
or
ret
dec
pop
gs
ret
test
inc
xorb
cld
push
popl
or
sarb
stc
adc
or
mov
push
std
push
push
aad
and
xchg
pop
xchg
push
lahf
sbb
rcrb
mov
xchg
mov
jl
data16
dec
outsb
add
fstp
or
aad
dec
cltd
sbb
pusha
mov
cmp
xchg
mov
mov
loopne
sarl
xchg
jae
out
sub
mov
daa
dec
js
lahf
jb
push
in
mov
push
fld
movsl
mov
xor
jae
mov
jbe
dec
out
jne
call
xchg
push
sub
popa
test
leave
pop
cmp
and
int
lods
cmp
test
es
push
aas
xor
mov
int3
lret
sbb
pop
or
adc
jb
fcoml
aad
repz
jle
lds
js
mov
adc
stc
cmc
movsb
popf
clc
sahf
lret
lock
es
pusha
je
xor
and
jns
ret
pop
push
sbb
ficoms
push
sub
lock
cmp
xor
fmull
loopne
sub
xchg
cltd
loop
cmp
fs
mov
adc
sbb
das
sbb
fisttpll
push
dec
inc
mov
and
mov
stos
add
cmc
push
out
mov
jmp
insl
cmp
aad
adcl
scas
popa
addr16
push
stos
sub
rcrl
mov
mov
pop
call
push
mov
mov
iret
jae
cmp
pop
or
jns
add
sub
mov
test
dec
jb
in
ret
pop
inc
fisttpl
int3
fnstenv
pop
imul
pop
lahf
fdivrp
std
divb
push
pop
mov
dec
xchg
ret
pushf
mov
cmp
push
mov
pop
stc
icebp
or
xchg
sub
adc
dec
rcrb
xor
mov
inc
jl
lea
outsb
mov
inc
fstl
scas
inc
fsubr
add
inc
insb
inc
mov
mov
mov
cwtl
rol
dec
icebp
nop
pusha
mov
lea
ds
mov
mov
dec
aas
add
popf
ret
out
mov
sahf
aam
vpcmpgtw
jl
jg
inc
sub
pop
lret
xchg
inc
nop
jae
clc
add
ja
ret
cmpsl
insl
add
fsubrs
sahf
inc
mov
leave
mov
xor
inc
outsb
aad
int
add
adc
push
in
xor
dec
jmp
mov
hlt
add
mov
mov
pop
jg
or
pop
loope
and
int3
jmp
js
jmp
jmp
neg
mov
inc
data16
fisubrl
inc
in
mov
std
sub
add
test
fwait
jle
sbb
cmp
mov
fisttpl
cmpsb
fdivrp
mov
cmc
popf
ds
add
insl
jp
push
rolb
in
test
cmp
nop
mov
mov
cs
dec
pushf
xor
popl
cmp
nop
jno
xor
push
jnp,pt
fidivrs
aam
xchg
movsb
mov
ret
mov
adc
dec
std
and
mov
adc
mov
clc
mov
xchg
xlat
adc
xor
mov
sub
inc
aad
test
sahf
lock
dec
push
ljmp
fistl
pop
or
lret
jg
loop
fidivl
adc
inc
bound
sub
sbb
fsubl
cs
jge
mov
scas
addl
int
fnstenv
jns
fsubrl
push
sbb
xchg
mov
js
fs
out
push
push
adc
and
in
std
jg
push
adc
jo
mov
addl
lods
jne
lock
fidivrs
dec
push
ljmp
addr16
rcll
repz
add
lea
inc
repz
adc
insl
push
or
inc
xorl
xchg
sub
dec
adc
roll
stos
mov
fs
push
movsl
fs
cmp
jns
jmp
mov
and
jecxz
idivb
sbb
push
cmc
cli
cmp
bound
cli
inc
cld
mov
inc
int3
adc
incb
sbb
sahf
fiadds
lds
mov
movsb
ret
rorl
repnz
lea
lahf
je
push
cmp
lds
stos
loope
ljmp
aam
xor
jle
inc
sbb
les
sub
pop
fisttps
inc
or
out
mov
pop
jecxz
adc
mov
add
jnp
inc
adc
inc
imul
fs
cmp
push
xchg
daa
fildl
xchg
sub
in
insl
push
es
mov
cwtl
mov
lret
aam
mov
outsb
mov
or
hlt
insb
shrb
fildll
das
jge
xlat
scas
loope
nop
sub
jb
pop
cmp
ret
add
mov
clc
daa
dec
leave
lret
mov
insb
addb
jne
enter
bound
push
dec
jp
lcall
and
lds
pushf
cltd
loop
xchg
int3
sbb
cmp
jb
daa
mov
mov
imul
fimull
xorl
add
mov
adc
movsl
jno
xor
sub
jnp
out
dec
jmp
test
rclb
push
enter
dec
mov
jle
or
test
fisubrl
pop
xor
xchg
lret
insl
loop
lcall
in
and
ds
stc
filds
mov
div
ja
in
jg
sub
jns
mov
cmc
testl
or
jae
jle
push
scas
push
xchg
push
dec
call
push
stos
mov
roll
mov
dec
pause
lahf
aam
notb
pop
jns
push
and
sahf
stc
push
push
add
cmp
cmpsl
int3
xlat
outsl
lret
lea
decl
jg
test
aam
loop
jb
xor
test
in
cmp
scas
lcall
addr16
call
pop
push
pop
repz
pop
mov
jg
or
sbb
xchg
pop
in
xchg
adc
or
or
add
movsb
xchg
mov
mov
es
xor
sbb
cmp
mov
adc
insl
movsl
pop
arpl
insb
loope
ret
mov
xor
repnz
ss
inc
xchg
and
bound
adc
pop
sub
and
mov
mov
jb
pop
jmp
inc
push
popf
lret
mov
jge
pop
sub
test
out
aas
in
sub
mov
mov
and
in
add
and
mov
js
cmp
mov
xchg
or
push
mov
lods
add
lds
push
out
push
cld
push
pop
js
xor
pop
cmc
or
orl
jecxz
mov
or
mov
arpl
jp
add
xchg
ja
mov
fisubrl
inc
sub
dec
push
and
xor
hlt
cmp
xchg
in
or
leave
push
push
add
outsl
dec
jge
fnsave
popf
rcr
mov
es
ja
std
jae
pop
test
arpl
stc
pop
fisubrl
int
inc
sub
out
test
dec
sbb
lds
push
movsb
sub
fisttpll
stc
lock
imul
or
xchg
or
ss
adc
inc
arpl
or
into
adc
call
test
mov
ss
movsl
mull
loope
sarl
sti
scas
lods
fstps
mov
adc
jle
jns
xchg
gs
or
lock
es
adc
les
dec
adc
repz
popa
adc
movsl
rclb
icebp
xchg
jge
xchg
std
jb
in
sub
mov
fwait
and
popa
xchg
ja
stc
sub
mov
push
push
sbb
push
bts
sbb
adcl
inc
and
cmpsb
fsubl
xchg
adc
xlat
test
cmp
cmp
rorb
pop
sti
mov
cmc
pop
out
div
stos
fndisi(8087
pop
mov
mov
xchg
aaa
or
dec
xchg
jo
sbb
and
push
pop
pop
cmpsl
push
jns
mov
cmpsl
les
into
outsb
pop
push
in
rcr
daa
fsubrs
sbb
mov
daa
adc
add
gs
lock
insl
jnp
aam
cmp
daa
push
mov
andl
add
enter
cli
jb
inc
in
xchg
inc
xor
dec
cld
pop
lods
lret
fmulp
fwait
out
shl
and
hlt
cmc
jne
or
xchg
lods
jecxz
xchg
imul
lods
xor
xorb
push
repnz
hlt
inc
add
pop
cld
mov
cmpb
sub
addr16
inc
flds
add
jae
add
in
loop
mov
or
stos
cwtl
insb
xchg
dec
shll
jae
lods
mov
shl
fwait
into
arpl
shlb
test
adc
push
cli
add
ret
push
or
mov
stc
and
mov
into
and
add
xor
outsb
inc
xorl
leave
test
bound
jecxz
repz
sti
pop
je
push
add
and
cmp
jge
cmpsl
adc
aaa
xor
fdivrp
sarb
or
cld
mov
and
pop
or
in
xchg
inc
shll
lods
lea
mov
popf
inc
bound
or
push
mov
xchg
cmpsl
lahf
mov
jne
mov
dec
pop
push
add
sbb
mov
cmp
jnp
sbb
mov
push
and
push
mov
or
and
movsl
inc
out
dec
sti
testl
or
int
xor
das
mov
idiv
decl
arpl
int
ret
movsb
xlat
sbb
cmpsb
mov
push
inc
ret
insl
sub
mov
lods
mov
add
mov
sub
add
sahf
mov
sbb
adc
lods
mov
mov
lods
mov
and
loope
sti
mov
loopne
aaa
mul
jge
insb
dec
pop
xor
mov
pop
push
xchg
sbb
fwait
stos
jno
movsb
js
pop
push
inc
testl
sub
jnp
add
mulb
test
xor
divb
rol
in
xchg
dec
xlat
xor
adc
sub
add
aaa
or
iret
lahf
out
in
jle
xor
mov
int3
pop
icebp
cli
jle
int3
or
push
add
sbb
gs
cmc
cmpsl
sub
pushf
sbbl
pop
sub
push
xchg
sarb
adc
mov
dec
cwtl
fs
adc
mov
xchg
fs
pop
cmpsb
push
mov
out
in
stc
int3
jo
xor
sub
mov
loopne
add
push
inc
sbb
fs
sbb
sbb
cmp
cmp
xlat
mov
sub
fcmovu
mov
iret
inc
test
push
xchg
fistpll
ja
aam
cmc
decb
cwtl
adc
test
stos
dec
mov
jmp
push
add
pop
fists
es
notb
cmp
lock
dec
sahf
test
xchg
pop
sbbl
outsb
or
xchg
repz
push
mov
ja
push
mov
jae
ljmp
sti
pop
out
repnz
loopne
and
sti
adc
dec
pop
repz
pusha
inc
aad
xchg
mov
mov
inc
jae
mov
inc
mov
int3
xchg
movsb
pop
add
jae
xchg
push
js
push
imul
bndldx
add
jno
push
pop
mov
dec
out
cmpsl
dec
fmuls
jo
movsb
lahf
push
cmp
mov
stos
dec
mov
ss
adcl
push
in
jno
xor
jle
fadd
pop
pushf
mov
jno
ss
jns
fidivl
cltd
clc
sahf
into
jno
jl
mov
push
ss
fisttpll
jmp
ret
mov
xchg
mov
stos
and
fxch
pop
lea
shll
fsubs
lods
aaa
or
sub
adc
in
dec
mov
jp
push
lret
loopne
loopne
pop
mov
push
andb
rcrb
xlat
sahf
add
sbb
and
les
mov
or
inc
and
popa
ret
xor
mov
inc
negb
jns
sbb
pop
and
pop
enter
repnz
cmp
push
lods
pop
lcall
int3
xchg
inc
xchg
cli
inc
sbb
and
adc
adc
fbstp
push
out
and
aad
jle
lretw
sub
xchg
cmpsl
pop
outsb
rorl
push
icebp
sub
pop
repz
fisttpl
sub
mov
xor
arpl
out
dec
cwtl
pop
cmp
sub
sub
add
dec
xchg
dec
inc
mov
clc
inc
inc
idiv
pop
rorl
xor
cmp
bound
and
add
in
into
xlat
jns
outsl
movsb
test
xchg
out
in
adc
jne
jg
movsl
ret
out
mov
fdivrs
outsl
sbb
inc
pop
fists
sub
lea
fs
lcall
and
and
cmp
stc
outsl
imul
fistl
cli
xor
inc
lods
rol
push
adc
faddl
xchg
mov
push
les
jl
in
inc
int
insb
mov
and
ror
jae
jno
dec
pop
popa
cmpsb
lcall
mov
cmp
hlt
push
jnp
repz
pop
push
stc
jle
imul
push
push
sarb
inc
outsl
gs
popa
mov
ret
sub
adc
cs
sbbb
jo
push
push
into
pusha
cmp
xchg
sbb
roll
std
add
lret
jns
je
inc
call
dec
sbb
jl
mov
in
jnp
enter
out
fidivrl
loopne
aad
lret
cwtl
enter
push
jle
test
sub
call
imul
sub
mov
or
addl
pop
push
in
addl
or
xorl
std
mov
sahf
jmp
fnstsw
pop
or
xor
mov
mov
fwait
xor
mov
mov
mov
dec
and
test
jb
pusha
lds
movsb
push
ja
adc
cmp
xchg
cwtl
sbb
stos
xor
inc
cmc
rcrl
pop
lock
push
and
jae,pt
dec
push
pop
mov
or
inc
hlt
loope,pn
jge
mov
mov
adc
data16
iret
or
pop
and
out
in
or
dec
cmp
aaa
lret
mov
rclb
or
jle
mov
xor
test
jbe
or
icebp
in
bound
and
xor
stos
stos
xlat
push
mov
fldcw
loope
ss
mov
ss
scas
data16
iret
fistpll
cli
fcomp
into
fwait
das
cli
sbb
adc
stc
pop
xor
stc
stos
ret
fimuls
dec
fsubrl
inc
and
fimull
mov
test
sbb
shl
into
xchg
je
shll
xlat
adc
mov
pop
inc
stos
dec
loopne
and
imul
std
bnd
sbb
gs
and
test
imull
into
push
xchg
sbb
iret
lods
and
lahf
mov
add
fs
mov
sbb
stos
mov
xchg
aas
cmc
int3
xchg
dec
xchg
repnz
xor
mov
test
xchg
mov
and
les
push
jecxz
add
enter
notb
push
push
mov
lret
jge
in
ds
xchg
mov
jle
fists
outsl
xchg
xchg
cmpsb
shl
dec
cmp
iret
movb
addr16
cli
and
add
iret
pop
sub
xchg
divl
fdivr
test
and
dec
ficomps
imulb
les
ljmp
aad
adc
lds
jp
je
sarb
mov
push
fisubrs
test
jecxz
or
int3
sbb
or
xor
icebp
pop
mov
lds
mov
adc
loop
jle
mov
xlat
repz
jl
cwtl
push
insl
imul
push
cs
xchg
mov
mov
es
cmpsb
pop
incb
repz
fwait
movsl
xchg
inc
fdivl
mov
add
mov
xchg
jns
mov
rorl
popa
inc
mov
mov
js
les
out
out
inc
push
out
dec
test
mov
test
pop
xchg
pop
or
rolb
jmp
lods
sbb
cmp
out
enter
pop
xlat
mov
push
ljmp
aas
call
rol
push
or
jae
push
jne
dec
fldenv
inc
xchg
bound
cmpsb
mov
cwtl
or
jno
jbe
sub
cmp
inc
subl
repnz
scas
loope
aad
mov
xchg
inc
ffree
add
push
sub
cli
cmpsb
aaa
inc
mov
dec
cmp
or
push
pusha
adc
fcmovbe
shrl
xor
jnp
dec
repnz
mov
add
or
lcall
jns
data16
out
adc
fidivs
jmp
xchg
in
sahf
jmp
jmp
mov
jge
aad
pusha
jne
divb
mov
jp
adc
add
lock
sti
adc
lcall
xor
push
adc
xchg
pop
std
and
outsl
shll
adc
pop
sub
stos
loope
cmpsl
mov
push
jmp
imulb
and
mov
sub
jne
outsb
pop
and
xor
test
push
mov
dec
inc
push
add
imul
adc
rclb
cmp
pop
call
popf
inc
sub
jns
ret
jo
push
adc
mov
dec
mov
shrb
add
popf
mov
or
xchg
mov
lods
bound
je
out
faddl
cld
lahf
mov
ret
fdiv
or
add
and
cmpsb
lret
gs
xchg
movsb
imul
repnz
nop
mov
push
push
mov
add
es
mov
movsb
mov
jb
or
sbb
ret
movsb
inc
push
addl
cli
jno
jg
std
fldt
or
inc
push
push
or
dec
aas
hlt
mov
daa
int
mov
rclb
mulb
test
shl
mov
xchg
jns
xchg
cmp
sub
lret
or
stc
lahf
push
pop
fidivrs
dec
jmp
daa
lods
lret
ja
jp
jb
ds
les
insl
cmp
in
aad
adc
xchg
sti
pop
xor
adc
inc
or
sahf
popl
ja
push
sbb
js
jle
call
push
jnp
loopne
pop
xchg
mov
repnz
lods
fcoms
test
shlb
pushf
cli
push
into
hlt
inc
lock
xchg
pushf
xchg
xchg
push
scas
cltd
das
out
sub
push
xorb
pusha
fwait
data16
lea
std
sahf
ds
adc
sub
mov
jmp
add
sub
repz
jne
cmp
inc
push
in
inc
ja
sub
dec
repz
mov
sbb
push
pop
ja
push
or
fisttpl
cmc
adc
mov
push
loopne
jb
aaa
mov
shrb
aad
xchg
jo
into
movsb
hlt
adc
cmc
mov
ja
in
jbe
pop
dec
add
mov
scas
push
popa
dec
adc
inc
mov
pop
test
pop
pop
rcl
push
xor
leave
jne
fs
icebp
mov
xchg
fs
cli
adc
nop
jmp
sub
shll
inc
mov
jno
add
inc
mov
loopne
pushf
add
lea
mov
and
pusha
adc
mov
add
jne
or
mov
jge
or
mov
lcall
pop
sbb
sub
or
cmpsb
add
dec
dec
pop
xchg
mov
adc
jg
iret
pop
mov
push
je
push
xchg
mov
dec
sub
pop
decb
or
pop
repz
outsb
insl
mov
xor
scas
negl
and
pop
inc
sbb
cmp
iret
imul
ret
inc
push
jb
mov
loop
and
jl
mov
and
add
mov
inc
pop
fsubp
sbb
popa
fwait
pop
push
into
and
pop
lock
ds
or
jmp
sub
in
data16
sub
mov
push
int
daa
mov
js
adc
mov
shll
jnp
sub
mov
pusha
jns
dec
jb
dec
sbb
movb
cld
into
pushf
cmpsb
cmp
lret
into
jecxz
xlat
jp
ss
lret
popa
mov
jle
xchg
cmp
ret
lea
cmpl
and
pop
test
popf
sti
aam
dec
popf
sti
and
mov
jae
sbb
dec
fcoms
cmpsb
or
add
fisttpl
push
in
xchg
cmpsl
ljmp
lds
dec
bound
outsb
test
add
jp
pop
fwait
or
nop
sub
push
sub
pop
jp
rorl
jg
lods
fsubrs
mov
mov
pop
mov
rorb
jns
mov
push
jg
insl
or
lods
or
cld
xchg
sti
xor
or
lea
xchg
xchg
mov
mov
mov
fdivrs
mov
xor
ret
out
icebp
cmpsb
mov
push
xchg
push
pop
inc
inc
cs
int3
clc
pusha
adc
add
push
stc
mov
fistpll
sub
rclb
in
cmp
mov
pop
test
sub
ret
jp
dec
xor
xor
jnp
jmp
stc
inc
cmp
call
mov
sub
pop
and
into
cmp
out
add
jmp
outsl
or
test
jnp
push
add
movsb
movsb
cld
ret
sbb
ljmp
mov
mov
mov
mov
adc
in
push
jl
testb
lds
addr16
rdmsr
xchg
add
adc
leave
cmp
xlat
mov
out
cmp
sub
jno
movsl
rcrb
iret
int
cli
ljmp
into
iret
into
and
nop
jb
jg
int3
fisubrl
mov
and
repz
sbb
negl
sub
js
fldt
pop
movsb
mov
push
mov
mov
mov
lods
xadd
xor
sub
pop
ret
ror
jno
sbb
fs
jno
sub
sbb
push
jne
push
push
scas
xor
inc
int3
push
lds
add
sub
clc
stc
fisubl
pushf
pop
call
lcall
xor
ror
mov
and
sub
cmc
call
cmp
mov
add
in
imul
jo
push
dec
dec
scas
pop
jecxz
sub
and
scas
clc
decb
clc
dec
cmpsb
sub
sbb
jle
inc
in
cmp
popa
add
daa
notb
jb
aaa
clc
std
lcall
repnz
jle
pop
cltd
pop
andl
add
xchg
xchg
in
jl
mov
adc
push
jp
adcl
cwtl
je
cltd
mov
jb
dec
cmp
cmp
xchg
push
loop
out
push
loopne
pushf
std
pop
mov
sti
hlt
lret
adc
push
js
clc
ds
aam
sbb
pop
xchg
enter
aam
and
stos
mov
jae
out
cmpsl
aaa
sahf
movsl
xchg
pop
jmp
push
call
scas
cmp
xor
shrl
fadd
push
ds
ds
mov
pop
sbb
lock
push
inc
push
shll
mov
pusha
xor
outsb
inc
test
test
cmp
dec
call
mov
fs
pop
lcall
out
out
jbe
push
fsubrs
push
dec
push
or
aam
xor
out
ret
sbb
jae
enter
scas
out
fcoms
mov
cli
lret
pushf
add
imul
pop
sarl
dec
jp
mov
ss
xchg
jp
repz
clc
sbb
lods
and
sti
popa
insl
in
mov
dec
lahf
push
add
ss
sub
mov
mov
stos
and
pop
out
sub
cmp
xor
pusha
sbb
lea
sbb
pop
jno
pop
adc
sub
sbb
es
andl
rcll
inc
fadds
stos
clc
jmp
sahf
sub
jne
and
pop
xchg
int
mov
pop
shrb
ficoms
cmpsb
push
mov
mov
stos
idivb
jb
push
cmp
jne
out
mov
shl
or
xchg
icebp
ret
test
cmp
push
rclb
scas
cmpb
sbb
adc
fptan
lods
jne
push
jmp
repnz
xchg
pop
pop
mov
fcompp
pop
or
div
push
add
pop
insl
in
loope
insb
or
aaa
aaa
das
movsl
notl
lds
sub
pop
call
pop
pop
sub
xchg
sahf
sbb
pop
pop
xchg
int3
cmp
in
fwait
movsl
add
adc
mov
pop
mov
testb
popa
inc
inc
and
sub
mov
xchg
out
adc
adc
das
aaa
fldcw
mov
lret
jp
mov
inc
sbb
sti
cltd
popa
es
clc
xchg
sbbb
bound
inc
xchg
pop
lds
push
jmp
or
jbe
mov
in
imul
push
push
outsl
mov
shrb
cmpsl
cmp
sahf
leave
or
and
dec
lock
xchg
mov
fnstcw
popa
or
xor
mov
into
or
sahf
scas
and
add
movsb
xchg
cmpsl
and
mov
fdivrl
xor
bound
xor
add
in
jmp
pushf
jne
dec
cmp
adc
pop
or
addb
ja
mov
cmc
fwait
mov
mov
pop
fnstenv
mov
xchg
test
push
push
scas
inc
sar
outsb
repz
andb
sub
cmp
lock
mov
jno
push
jns
adc
jecxz
mov
add
xchg
rclb
push
mov
insl
push
or
mov
push
jge
push
sbb
jecxz
or
sahf
xchg
mov
dec
and
fucom
cwtl
outsl
out
sbb
sub
int
push
mov
mov
loopne
mov
popw
xor
mov
mov
cmc
jp
sub
in
xchg
nop
adc
testl
fstp
mov
push
xchg
test
imul
stc
fs
sbb
repz
outsl
repnz
mov
ret
push
lds
lea
jns
sbb
insl
cld
faddl
and
pop
imul
aas
sbb
sti
jb
bnd
mov
fsubrs
scas
sahf
xchg
jo
movsb
cs
jle
pop
mov
lret
clc
add
jmp
sbb
add
out
fs
hlt
sbb
iret
dec
lods
nop
push
shlb
adc
adc
mov
out
mov
fidivs
pop
mov
inc
mov
cli
imul
pop
cli
daa
clc
jns
movsb
pop
xor
pop
shrb
inc
addb
sbb
jno
xchg
dec
dec
mov
dec
scas
outsl
xchg
and
fldcw
ret
in
lods
pop
out
jae
mov
sarl
stc
pmaxub
and
test
pop
push
lcall
pushf
add
dec
xor
js
mov
into
dec
jge
and
push
cmc
dec
mov
fwait
pop
enter
out
xchg
sub
loopne
call
mov
pop
jle
shrb
fisttps
cmp
fwait
cli
pop
pop
pop
notb
mov
push
dec
addr16
jmp
shl
das
cld
insb
push
test
cmpsb
and
inc
dec
mov
loop
push
rclb
sti
test
jecxz
pop
cmpsl
jnp
dec
xor
pop
xor
and
or
xor
lods
outsb
mov
movsb
adc
aam
mov
push
sub
sahf
jno
add
pop
mov
and
mov
mov
outsb
cmc
jne
add
cwtl
jecxz
repz
pop
jecxz
imul
jo
ja
push
jl
loope
inc
test
push
aad
mov
inc
cwtl
jne
inc
adcb
insl
jb
jmp
jae
jbe
xor
dec
xor
pop
xor
pushf
pop
sbb
xchg
mov
sbb
test
sbb
out
bts
fdivl
orb
add
outsb
adc
xor
add
dec
jge
inc
and
stos
add
movsb
fwait
cmp
in
dec
fcmovne
ret
mov
inc
push
mov
xchg
mov
std
out
imul
push
andb
stc
out
mov
mov
mov
leave
scas
inc
pop
decb
lock
fisubrs
adc
lods
xlat
add
ja
ljmp
bound
push
fwait
jp
in
orb
lds
mov
jae
negb
cmpsl
movsb
push
mov
lcall
and
push
xchg
out
sub
cwtl
ss
cmp
mov
sahf
lea
cmc
add
xor
subl
fwait
sub
orb
adc
fcomps
clc
push
fisubrl
cmc
lods
add
and
hlt
into
sub
insl
jno
test
mov
scas
mov
bound
cli
jno
loop
sahf
push
into
push
adc
push
in
aam
cmpl
movsl
inc
jne
lcall
sub
mov
jl
jae
jle
jl
dec
mov
push
lods
adc
jne
out
mov
inc
cmp
push
shlb
movsb
lds
enter
mov
pop
insb
push
mov
cmpsb
and
mov
xchg
mov
scas
and
sbb
cmp
adc
loop
sbb
mov
mov
dec
sub
fs
loop
add
dec
pop
mov
cli
xor
aaa
pop
jg
cmp
and
xchg
mov
push
cmpsb
fistl
mov
mov
rorb
ljmp
shrl
sti
scas
mov
hlt
iret
and
inc
mov
xorl
mov
ja
icebp
xchg
ss
jne
xchg
cmp
enter
jg
add
ljmp
cmp
popa
sti
lret
out
insb
insl
insl
push
std
in
and
mov
xor
arpl
sbb
cmp
mov
mov
fadd
or
dec
cmpsb
iret
push
xchg
jns
or
inc
test
inc
cwtl
sbb
ljmp
call
out
call
push
push
stos
jns
and
jo
mov
das
pop
or
inc
cmp
test
aaa
into
pop
mov
jae
push
xor
cltd
imul
cmp
push
mov
loop
stos
and
ds
shll
rcll
sarb
dec
ss
cld
ret
push
dec
adc
ss
mov
inc
sub
cmp
mov
ja
popl
cltd
pop
cmc
popa
cmpsl
xor
cmp
and
xchg
sub
jp
pop
testb
xor
cmpsb
lods
scas
dec
xchg
push
add
push
or
mov
dec
int3
xor
jg
test
int
out
rcl
and
rcll
mov
pop
push
xchg
xor
push
dec
jle
lret
add
dec
mov
mov
mov
out
xor
pop
push
jae
add
push
lcall
orb
and
test
xchg
pusha
adc
xor
pop
lcall
mov
cwtl
mov
gs
out
bound
dec
sub
mov
lods
jecxz
jne
fdivs
shl
divb
pop
lods
xor
sub
std
adc
xchg
xchg
push
rclb
nop
into
jae
gs
xor
and
cmp
xor
imull
pop
int
cmp
push
and
mulb
dec
dec
mov
push
xor
lock
imul
push
adc
jle
arpl
sbb
push
or
daa
leave
stos
push
or
vhaddpd
jmp
lret
mov
and
pop
out
adc
adc
orl
xchg
stos
cmpsb
cmp
mov
addb
int
jno
mov
sbb
popa
or
mov
mov
in
andl
outsb
mov
fistpll
outsl
xchg
out
push
sub
in
ss
loop
sbb
or
mov
push
sahf
fdivrs
ret
sbb
push
cmp
mov
stos
cmp
dec
mov
lret
xor
cmp
push
jl
dec
cwtl
sbb
inc
push
lcall
stos
mov
clc
call
mov
dec
add
mov
pop
sahf
jbe
cli
inc
jp
xchg
lds
add
and
loopne
hlt
lret
clc
dec
dec
sbb
adc
mov
or
clc
lods
push
scas
and
int3
movsl
bound
xchg
sub
incl
inc
jecxz
mov
dec
jno
push
xorb
xchg
mov
inc
stc
mov
sub
lods
jnp
lods
hlt
mov
push
in
add
rolb
jne
xchg
pop
jge
jb
imul
out
dec
cmp
rorb
in
dec
bound
adc
sbb
shll
daa
push
dec
mov
mov
daa
mulb
inc
pop
dec
in
adc
dec
jbe
fdivr
adc
jge
cmc
fwait
daa
mov
jae
mov
clc
gs
xor
fdiv
shll
mov
mov
xchg
pop
jne
imul
fdivrl
or
push
hlt
call
stos
iret
loop
std
inc
lock
out
and
mov
add
test
push
mov
mov
fidivrs
xchg
push
popf
mov
stos
sub
xlat
shll
mov
mov
lcall
pop
nop
xchg
sub
cmp
and
mov
fstl
or
inc
xchg
stos
sub
xor
pop
add
inc
loop
pop
adc
mov
xor
add
cld
mov
test
pop
fadds
pop
mov
cli
popf
popf
push
fnsave
mov
jp
jmp
dec
pop
jbe
mov
cmpsl
mov
mov
mov
mov
aam
bswap
dec
wbinvd
mov
inc
test
loope
jbe
mov
aas
test
sbbb
rcrb
push
lret
pushf
cwtl
mov
xchg
inc
mov
sbb
mov
xor
scas
push
aad
test
xchg
mov
test
mov
cmp
pop
pop
ficompl
mov
adc
mov
test
or
out
jg
rclb
test
ret
xchg
data16
jmp
xor
or
sbb
mov
lods
push
mov
ret
les
push
sbbb
insb
mov
xchg
lds
lds
push
lock
xor
pop
xor
int
pusha
lods
std
pop
popa
jns
popa
ljmp
imul
cltd
jg
in
mov
std
xchg
filds
pop
or
cmp
and
lods
mov
or
and
mov
lea
and
cltd
pop
mov
int3
mov
ljmp
shrd
into
push
fwait
push
mov
test
cmp
sbb
insb
xor
cmp
popf
loop
mov
loop
xor
imul
gs
pop
xor
and
dec
imul
jp
mov
jae
dec
rcll
aas
xchg
lcall
imul
andb
cmp
mov
mov
xchg
and
movsb
std
xchg
movb
sarb
je
sbb
add
ja
jae
adc
icebp
cmp
test
lahf
movsl
pop
mov
cmp
add
rol
and
ret
fnstenv
mov
add
sub
mov
cltd
sbb
cwtl
in
and
add
add
adc
xor
test
add
mov
adc
push
ss
pop
pop
ss
xchg
push
dec
jbe,pn
xlat
cwtl
xchg
and
mov
adc
js
mov
push
mov
sbb
dec
jg
cmp
lahf
fwait
pop
testb
lds
ficoml
ljmp
xor
sbb
sahf
jg
jl
mov
repz
lret
push
fistps
dec
nop
ss
ret
cld
aas
cmp
aas
lret
cli
cmpsb
enter
pusha
pop
xchg
daa
cs
and
loope
orb
sub
imul
jb
pop
dec
or
int3
mov
mov
jb
xchg
mov
adc
cmp
lret
loop
inc
enter
inc
inc
movsl
repnz
incl
icebp
daa
addb
pop
jmp
addl
jae
inc
mov
call
xchg
inc
loopne
push
filds
cmp
js
out
jle
out
stos
sub
fbstp
cmp
ss
push
xorb
mov
imul
loopne
iret
stos
mov
mov
fwait
mov
sbb
add
dec
jmp
insl
loop
imul
xor
aaa
or
int3
jbe
or
es
and
not
cmp
cmp
cmp
ljmp
xchg
test
pop
repz
sbb
fisttpl
xor
sub
dec
rorl
and
outsb
outsb
sahf
mov
push
scas
push
xor
ret
cltd
dec
jno
sbb
xor
aad
jbe
pop
pop
cwtl
xchg
dec
sub
jb
mov
cmpsl
cmp
sbb
xor
jp
dec
mov
repz
mov
cmpsb
sub
mov
popf
xor
pop
std
adc
push
push
cmpsb
or
rorb
cwtl
into
fisubrl
pop
decb
mov
subl
pop
jg
sub
or
add
add
and
mov
cmp
enter
xor
jo
jp
cwtl
test
mull
adc
add
inc
and
or
add
fmull
pushf
jo
cmpsl
xor
sti
scas
shrl
and
push
packsswb
jecxz
ljmp
add
ficoms
xlat
aad
pop
mov
cld
or
or
rolb
cmpsb
mov
push
daa
xchg
jmp
xchg
sbb
les
and
mov
cmp
xchg
mov
jns
mov
push
fldl
popa
xlat
cmp
das
sub
stos
push
push
mov
push
jl
loop
fcoms
aam
jl
cmp
jmp
push
nop
in
nop
push
pop
test
outsb
lock
xchg
ds
pop
push
sbb
fnstsw
lds
mov
mov
adc
test
insl
sub
xor
js
lahf
test
adc
pushf
jbe
shl
sbb
lds
jae
loope
jns
or
mov
pop
pop
add
test
shr
pop
bts
pop
or
faddl
and
xor
pop
sbb
out
pop
lret
stos
jge
mov
or
mov
mov
jb
inc
pop
xor
cmp
cmp
cs
sbb
cld
sbb
outsb
stc
xchg
inc
pcmpgtb
scas
std
test
sbb
daa
mov
inc
rcrl
data16
lcall
jp
add
aas
lods
push
sbb
lret
mov
out
ds
mov
mov
stc
fimuls
add
jl
icebp
and
xor
pop
mov
daa
clc
mov
rcr
adcl
sar
inc
lods
scas
fwait
mov
out
mov
inc
jns
bound
cmp
lret
popa
pushf
rorb
jmp
orb
cmc
int3
inc
xor
jnp
insb
sarb
or
popf
mov
xchg
pop
in
fwait
outsl
push
pop
dec
in
jle
cmp
cmpsl
push
adc
xchg
out
les
pop
xchg
pop
push
dec
inc
fbld
mov
push
add
inc
mov
mov
testb
icebp
cli
insb
ret
sbb
imul
cmpsb
or
mov
into
dec
lock
nop
pop
xor
sahf
notb
scas
and
stc
dec
push
rcrb
scas
cmc
repz
mov
fs
icebp
xchg
cli
aas
mov
popf
mov
aad
pop
mov
inc
flds
stos
and
cs
xchg
push
popa
push
fwait
pop
jb
sbb
xor
out
stc
icebp
shr
icebp
rcrb
les
out
and
lcall
icebp
sub
in
push
scas
pusha
in
cmp
jbe
lahf
scas
push
int
mov
mov
sbb
repnz
and
pusha
or
inc
xor
xchg
cmpsl
or
mov
add
insl
cmpsb
pusha
es
mov
sub
movsb
ds
push
bound
push
repz
rcll
jae
cmpsb
movsl
loop
mov
adc
dec
ss
data16
imul
sub
outsb
repz
sub
pop
iret
mov
pop
sub
out
push
test
pusha
adc
dec
adc
pop
sbb
mov
jns
out
mov
mov
js
fwait
iret
push
mov
xchg
mov
daa
les
fldl
lret
jbe
push
ss
out
sbb
sbb
int
call
outsl
or
jns
mov
dec
stos
das
push
mov
push
dec
push
mov
xlat
inc
cltd
mov
out
and
jnp
aas
std
add
std
or
push
insb
cmp
sbb
sbb
ss
pop
jle
rorb
rcll
ret
out
jmp
addr16
in
mov
fdivrp
and
push
popl
xchg
ret
xor
movsb
test
sbb
stc
call
xchg
test
and
frstor
movsl
fcoms
xor
jno
pop
stos
jns
mov
mov
pushl
lock
stc
nop
fs
xor
aad
aam
mov
adc
jns
push
fnstcw
sbb
or
fs
aam
ds
adc
mov
xchg
insl
sub
leave
xor
cmp
lret
mov
adcb
ja
lods
xor
jne
mov
dec
rcl
cmp
ret
ljmp
leave
enter
cmp
aas
dec
int
je
jo
xor
push
into
repnz
stos
push
jo
addb
or
andb
add
jnp
mov
pushw
sub
sub
jo
xlat
pusha
ret
lahf
sub
nop
fldl
sahf
push
test
mov
fsubrp
mov
mov
testl
inc
pop
mov
pop
pop
adc
and
mov
test
dec
fdivs
pop
xrelease
pop
roll
aam
sbb
add
pop
int3
mov
jmp
jae
mov
fisttpll
sbb
lcall
insl
rolb
cltd
test
sbb
lret
lret
cmp
jecxz
push
ds
mov
xchg
sub
enter
clc
xchg
mov
out
mov
mov
aam
push
iret
cmc
es
jnp
gs
inc
push
sbb
cmpsb
and
xchg
repnz
xor
cmpsb
lods
fs
pop
cmp
mov
and
adc
xor
cld
data16
dec
repnz
push
mov
clc
popa
jg
movsl
sub
enter
or
and
xchg
and
inc
ljmp
nop
sub
std
pop
jae
cmp
adc
xor
icebp
fbstp
in
dec
repnz
pusha
xchg
rcrl
loope
ljmp
movsb
or
add
aad
scas
xor
aas
cld
int3
lea
xorl
mov
or
sub
scas
ret
pop
fwait
cwtl
std
std
or
outsl
xor
shr
push
shll
jae
loopne
sbb
pop
andl
ljmp
sbb
imul
mov
out
shl
mov
inc
and
jno
stos
push
xchg
pusha
outsl
inc
cmpsb
jne
fmul
add
mov
loopne
dec
sub
sarb
and
loopne
scas
outsl
out
push
rcr
sub
mov
push
jns
or
and
pop
mov
xchg
loope
out
loopne
rcll
lret
pop
xchg
and
dec
in
pop
outsl
pusha
insl
adc
std
test
lods
xchg
push
lcall
sbb
fs
or
cmc
mov
xor
cmp
xor
out
pop
jbe
fsubl
dec
pop
arpl
pop
sub
pop
dec
fists
movsb
leave
and
jg
lret
mov
sub
sti
or
adc
ror
mov
hlt
outsl
inc
xor
mov
pop
xor
mov
popf
adc
icebp
cmpsl
mov
or
jae
fs
and
or
mov
cmp
int
xor
repnz
sbb
testb
arpl
push
sarb
lcall
shr
xchg
sbbl
add
inc
ds
hlt
movsl
dec
mov
gs
hlt
pop
data16
stos
in
or
pushf
icebp
sbb
mov
or
jle
pop
lret
pop
jmp
dec
fdivrl
shll
movsb
enter
push
mov
aam
mov
jle
cmp
pop
mov
mov
jmp
jg
or
and
xchg
cli
dec
cmp
inc
mov
mov
push
test
insb
jnp
stos
sub
pop
mov
sub
inc
ret
mov
out
ss
repnz
cmp
sub
jb
sbb
addr16
pushf
shlb
adcl
xor
fucompp
test
out
popf
stc
mov
pop
sti
out
js
adc
popa
lcall
or
inc
mov
shlb
outsb
test
pop
call
dec
adc
add
sarb
punpckhbw
or
popf
in
das
jns
dec
es
fisttpl
test
xor
or
bound
mov
repnz
rcrb
jge
cmp
movsb
cmc
mov
push
insl
in
xor
call
ja
push
mov
xor
jne
mov
mov
imul
aad
imulb
xor
adc
cs
loope
out
pop
inc
mov
cltd
lods
in
icebp
push
mov
andl
jp
mov
shlb
test
xlat
out
stos
xor
cmp
nopl
jge
les
ja
insb
dec
dec
xor
sbb
or
ss
and
imul
pop
mov
add
add
dec
jge
stos
adc
xor
jb
inc
cmp
mov
push
cltd
fcmovnbe
out
cmpsl
cmp
dec
out
add
dec
ss
xor
insb
adcl
int
loop
lahf
cwtl
lods
mov
jae
orb
adc
imul
inc
outsb
data16
ret
mov
fbstp
xor
mov
adc
xchg
mov
and
andb
addr16
push
or
cli
mov
push
pop
cmp
mov
jle
and
sub
cmp
imul
dec
psrld
jl
subl
pusha
push
sub
aad
lea
mov
pushf
sub
in
cltd
mov
jmp
sub
xchg
out
adc
notl
xor
ret
jmp
add
je
add
add
int
jo
xor
pushf
cwtl
sub
add
int
inc
loop
les
xchg
cmp
mov
lret
xchg
cmc
xchg
stc
cli
repnz
pushf
jp
or
push
aas
adc
pop
or
or
pop
sti
and
clc
gs
lret
or
cmc
in
mov
dec
dec
or
sub
loope
and
or
shrb
cmp
mov
xchg
cli
or
mov
mov
jo
and
movb
pxor
bound
mov
in
fcoms
lods
sti
scas
gs
adc
ret
or
enter
fcompl
je
mov
push
mov
fidivs
xchg
fsubs
mull
jo
sub
icebp
mov
sub
jmp
jl
jge
fidivs
jle
mov
xlat
out
fs
shl
jne
or
mov
adc
and
jnp
jns
out
fisubl
and
jecxz,pn
cld
jne
movsl
cmpsb
lods
mov
jle
cmp
jne
in
xor
rorl
ret
xor
sub
mov
lcall
mov
mov
push
aas
and
and
out
lods
int
enter
ret
inc
xorl
mov
xchg
js
jge
stos
pop
mov
jb
mov
xchg
dec
imul
fstl
test
stos
inc
les
sub
push
xchg
or
jmp
mov
or
dec
or
fidivs
dec
pushf
lahf
loopne
mov
out
daa
dec
jae
inc
cmp
popf
pop
jae
lcall
in
imul
cmp
lods
out
mov
popf
clc
jne
lea
adc
adc
arpl
mov
mov
sahf
lods
cwtl
movl
aaa
scas
out
sti
and
decb
pop
sub
scas
add
pop
dec
cmp
cmpsl
shrd
or
dec
push
test
push
xchg
aaa
fistpll
jno
mov
scas
dec
nop
push
push
test
ja
pop
xchg
fisubrs
jl
mov
sahf
push
pop
arpl
std
cmp
xchg
xor
dec
orb
jno
sub
into
dec
mov
dec
fsubrp
popf
arpl
sbb
adc
cwtl
dec
fdivp
movsb
clc
inc
rcr
aad
or
stc
add
push
sbb
scas
sarb
push
or
push
lods
or
loopne
or
int
inc
fisttps
addb
inc
sub
sub
xor
icebp
sub
jo
ret
pop
push
adc
adc
out
hlt
xchg
insb
testb
imull
cmc
lock
add
ss
fcmovnbe
fists
and
jne
out
iret
mov
adc
clc
into
xchg
add
and
insb
lret
dec
daa
rcll
jno
and
push
ret
xchg
arpl
dec
mov
cmp
jnp
jae
leave
sub
movsl
mov
lods
or
xor
mov
jecxz
js
repz
lea
loope
movhlps
imul
shrl
data16
addb
iret
jecxz
sub
sub
dec
fistl
dec
xchg
fwait
repnz
jns
push
ja
adc
ja
and
ret
or
daa
repnz
orb
lret
ljmp
mov
fldt
nop
cmpsb
lret
icebp
ljmp
mov
in
aad
mov
jo
es
rcr
or
hlt
jo
mov
pushf
and
sub
push
fiaddl
xchg
inc
dec
jl
mov
scas
push
mov
sbb
cmpsl
pusha
sub
pusha
out
sbb
es
and
jne
fsubs
out
jl
in
lods
mov
cmpsl
sbb
jb
add
pop
jne
push
xor
repz
jno
shll
adc
add
cmp
cmp
jno
test
shrl
pusha
jl
in
pop
push
add
lcall
mov
fbstp
jbe
es
dec
lea
adc
int
mulb
por
in
adc
xchg
add
sbb
in
jmp
add
and
sti
cmpsb
mov
xor
push
sub
dec
and
pop
pushf
fsubrl
idivb
mov
punpckhbw
dec
sbb
mov
inc
nop
push
out
and
sub
push
cmp
adc
add
or
rcll
jmp
outsl
fnstsw
add
xor
sbb
xor
pushf
or
repnz
lcall
mov
push
int
mov
mov
ljmp
xor
popf
incb
les
xor
inc
mov
push
jo
xor
push
lods
test
andl
loopw
push
jb
xlat
jp
xor
inc
dec
mov
mov
push
or
test
stos
movsb
fadds
testl
pop
mov
arpl
in
mov
in
xor
ljmp
jo
xchg
adc
mov
push
sub
mov
aam
leave
xor
scas
jbe
cmp
dec
imul
repz
jno
pop
ficompl
xor
fdiv
shll
decl
mov
cld
cltd
loope
pop
inc
loope
mov
cli
rorl
sub
or
cltd
sbb
cmpsb
lea
or
out
or
xchg
addr16
pop
lcall
lret
dec
stos
in
test
testl
lahf
in
sbb
mov
shlb
jle
jb
adc
addr16
clc
push
das
or
shll
mov
mov
and
and
iret
lods
aaa
and
scas
ret
movsl
push
es
out
int3
cmc
xchg
lods
movsb
and
adc
fisttpl
loopne
jg
sar
add
and
jbe
mov
dec
pop
mov
dec
add
call
sbb
pop
pop
xchg
pop
mov
test
bnd
pop
or
mov
inc
cltd
cmpl
rcrb
or
and
pop
outsl
or
sub
adc
cmp
sbb
scas
xchg
ds
mov
sbb
fs
dec
push
and
out
rorl
xchg
icebp
cli
xor
or
mov
iret
cmpsl
pop
dec
addr16
jmp
std
aas
bswap
sub
jp
cltd
inc
ljmp
xor
sbb
push
mov
pop
cmp
data16
pop
ljmp
out
mov
mov
push
sahf
pop
xchg
shlb
aaa
leave
scas
sub
test
mov
pusha
push
xchg
pop
call
scas
sub
or
ret
jb
pop
imul
push
in
cmpsb
aad
ret
repz
incb
hlt
xor
mov
xchg
ret
cltd
mov
adc
adc
addr16
mov
xchg
sub
outsb
lock
pop
jnp
push
outsl
ljmp
mov
xlat
jno
add
dec
test
aad
pop
jns
das
cmp
in
lcall
sub
xchg
or
inc
and
jae
sub
sub
fwait
sti
scas
movsb
dec
adc
mov
fcoml
dec
out
mov
push
iret
mov
data16
std
xor
mov
jmp
and
adc
outsb
lea
shrl
mov
mov
mov
int3
cwtl
cmp
aaa
ret
pop
mov
fiaddl
push
lcall
mov
xchg
sbb
sub
add
cmp
aad
push
flds
ss
inc
and
push
dec
scas
enter
mov
jns
cmp
xorl
xchg
add
lods
xchg
push
pushf
push
lock
fcoml
mov
adc
aam
leave
pop
mov
rorb
movsb
mov
inc
jo
xchg
aaa
mov
lahf
sbb
cmc
jp
jne
shrb
cltd
pop
dec
mov
sbb
cmpsb
fisubs
test
xor
popf
fstp
adc
push
mov
sahf
ret
repnz
insb
mov
sbb
es
jge
sbb
repnz
mov
icebp
mov
adc
sahf
xor
cmp
or
sub
loop
or
add
push
ficoms
xchg
inc
loopne
repnz
cmp
jnp
sarb
push
xchg
sbb
je
mov
pop
mov
sub
push
xor
mov
sub
mov
in
mov
stos
cmpsb
outsl
pop
inc
pop
mov
in
enter
sub
cmp
repnz
xor
inc
dec
pop
mov
cs
sub
xchg
call
mov
ljmp
push
inc
test
daa
cmp
stc
fcoml
nop
out
ficompl
loop
push
popf
sbb
add
pop
fisttpll
push
cmp
mov
mov
cs
cmpsl
mov
inc
ljmp
clc
sub
js
out
or
inc
adc
cmpsl
sbb
fsubrs
xor
scas
fisttpll
stos
pushf
jo
sbb
sub
sbb
fidivrs
fs
or
sub
test
jp
inc
sahf
aaa
and
jle
lock
popa
in
lret
jg
lock
das
mov
or
mov
add
movsb
adcb
and
arpl
out
sub
lds
cmp
loope
in
cmp
into
xchg
jnp
push
dec
andb
out
cmp
or
ja
dec
jg
test
ficompl
clc
iret
or
cmp
mov
xor
repnz
dec
mov
mov
je
and
out
out
push
js
and
imul
jno
rcll
dec
adc
loop
add
cmp
clc
dec
fwait
in
jns
stos
int3
mov
shrb
inc
jnp
inc
and
xchg
xor
mov
jle
inc
xor
pusha
pop
xchg
dec
sti
mov
sbb
jnp
add
cmp
pop
or
push
jmp
not
lods
sbb
pop
and
pop
ror
mov
mov
cmp
insl
jmp
jne
ret
adcl
cmp
xchg
xchg
cmp
push
pop
shld
imul
in
fidivrs
push
scas
cmp
bnd
jnp
sbb
jecxz
lods
sub
cli
andl
cmp
xor
jno
je
jbe
jb
mov
mov
cmp
ljmp
andl
leave
pop
lret
xchg
loopne
outsl
daa
lock
push
lcall
push
scas
cmp
in
mov
cmp
sbb
push
daa
xchg
jb
and
jno
cmpsb
pop
rcl
mov
and
pop
cs
push
call
jb
lcall
daa
lds
lods
ss
fistpll
add
aad
xchg
inc
sbb
mov
jl
stc
addr16
and
mov
fsts
subb
cwtl
or
jns
std
fcmovnb
mov
lods
mov
in
sub
or
scas
lahf
push
decb
test
cwtl
lds
xor
push
adc
rcrb
aas
sbb
lret
cli
popf
rcrl
cmpl
pushfw
lret
pop
xchg
xchg
pushf
ljmp
lds
addr16
inc
dec
or
mov
idiv
cmc
adcb
scas
mov
test
or
dec
xor
enter
pop
fldt
mov
loopne
add
call
push
xor
mov
mov
add
jno
pushf
mov
pop
mov
rcl
dec
jno
imul
dec
push
data16
ss
xchg
outsl
hlt
adc
jg
repz
pop
mov
cld
inc
inc
cmpsb
jo
fcoml
push
jae
es
xchg
pop
sbb
ret
xlat
mov
fnsave
out
jg
addr16
popa
mov
xchg
imul
lock
iret
or
mov
or
outsb
std
shld
test
and
outsl
sbb
popf
xor
mov
xor
fisubl
xor
jbe
dec
xchg
mov
sbb
jnp
movsb
sbb
daa
push
aaa
loope
and
lock
push
jbe
or
mov
outsl
stos
popa
cmp
mov
mov
test
ljmp
add
xor
sbb
or
push
cmpsb
fsts
stc
dec
mov
mov
push
subb
xchg
data16
mov
push
and
daa
jg
dec
jecxz
mov
scas
addb
push
lahf
mull
adc
adc
jo
popa
pop
stc
int
push
mov
mov
sbb
mov
out
or
in
sbb
dec
shrb
aam
clc
or
mov
psubd
xchg
or
daa
fadds
sbb
cltd
adc
xchg
data16
in
push
ret
fildl
int3
jecxz
clc
pop
add
data16
mov
xchg
je
stc
cli
lock
jecxz
adcb
out
je
cli
mov
adc
mov
mov
out
insb
in
sti
aaa
mov
cmpb
sub
push
adc
test
fs
enter
sbb
int
std
cmpsb
push
add
add
mov
je
es
sbb
pop
add
pop
loop
jp
lcall
int
push
adc
iret
or
mov
mov
mul
js
pop
inc
mov
ja
cmp
xchg
out
jns
inc
xchg
pop
rolb
test
loop
pop
das
adc
shlb
aaa
jo
out
inc
push
jmp
scas
jl
mov
movd
push
cmp
loope
jge
enter
mov
ljmp
sub
popa
cmpsl
xchg
dec
jo
in
ja
mov
cltd
mov
test
cmc
dec
gs
repnz
xor
mulb
ror
sahf
mov
adc
push
mov
out
pop
movsb
or
insl
mov
mov
outsl
jg
and
mov
adc
jg
cmp
test
mov
lds
imul
popf
dec
out
repz
arpl
call
and
pop
dec
negb
lahf
or
imul
fstp
flds
jg
pushf
in
or
pop
mov
nop
hlt
rcl
jmp
lea
out
push
cs
sub
out
push
inc
mov
movsl
testl
mov
push
xor
jecxz
inc
xchg
mov
xor
mov
mov
xor
xchg
push
clc
xor
inc
pop
loope
ret
xchg
push
lds
mov
adc
dec
pop
inc
lock
adc
in
fisttps
push
mov
cmp
test
gs
or
test
add
subps
add
pop
xchg
xchg
inc
lea
and
inc
sub
or
and
shlb
cmp
add
dec
jge
lret
adc
jecxz
xor
jb
lods
mov
add
jnp
add
mov
push
dec
ljmp
dec
int
xor
pop
and
jl
call
and
test
ss
cmpsb
pop
dec
mov
cmp
testl
loope
push
and
adc
out
sub
arpl
lock
add
jbe
jbe
inc
adc
inc
sub
roll
mov
aas
sub
sub
push
int
add
and
adc
dec
call
fcomip
int
pop
push
sub
mov
fldenv
scas
pop
ret
fwait
xor
aas
ss
xchg
shrb
pushf
mov
int3
data16
jb
into
mov
inc
push
inc
xchg
in
ljmp
cmpsb
cmp
add
shrl
xor
out
jnp
roll
mov
add
jne
xchg
lods
push
xlat
cmpsb
mov
or
fimuls
sti
adc
jns
inc
lock
push
aaa
bound
pushf
push
xchg
mov
mov
mov
jecxz
pop
pop
aaa
pop
addr16
or
add
jmp
outsb
sub
rcrl
call
dec
xchg
mov
scas
leave
insl
mov
sarl
xor
daa
sbb
fldl
and
or
and
add
decb
add
pop
mov
push
out
inc
hlt
decl
mov
push
sub
out
add
cmp
jb
dec
fistpll
push
int
cmp
test
or
push
mov
xchg
idivb
push
outsb
jb
insl
mov
loope
or
push
sbb
pop
pop
xchg
xor
fbld
out
mov
dec
sbb
cmpsb
cmp
lods
sub
ja
test
sahf
lds
cmpsb
sahf
xchg
pop
cli
mov
int
xchg
fstpl
xlat
add
lods
sahf
push
mov
outsb
push
sbb
xchg
gs
xchg
std
sub
inc
add
pop
xorl
mov
pushf
ss
testl
xlat
sahf
movsb
sub
xor
in
inc
cli
popa
in
shr
daa
cmpsl
stos
subl
cmpsb
vorps
or
std
xor
mov
and
dec
mov
sub
mov
push
fidivs
out
cmp
popf
mov
jno
xor
add
xor
and
dec
movsb
ret
idivb
in
shll
inc
cmpb
loope
add
in
pcmpgtb
scas
xchg
movsl
pop
cmc
rol
lds
hlt
cli
dec
subl
gs
xchg
mov
push
inc
adc
inc
sub
or
addr16
or
ret
add
pop
test
push
in
mov
add
loop
xchg
mov
xchg
jmp
out
jg
dec
cwtl
xchg
sbb
aaa
dec
aam
dec
sub
mov
push
mov
ss
jns
jmp
cmp
sbb
repz
sahf
out
scas
fistpll
repz
sbb
xor
je
cmp
sub
je
mov
ss
mov
mov
push
out
cli
and
mov
dec
mov
mov
and
pop
stc
push
popa
xchg
mov
inc
lahf
dec
jne
dec
mov
stc
mov
stos
dec
pop
pop
pusha
call
sub
dec
adc
shl
sahf
sbb
mov
lcall
mov
std
stc
ja
dec
mov
mov
leave
es
shr
mov
mov
inc
or
or
clc
dec
push
bound
mov
add
sbb
xchg
out
mov
mov
lea
repnz
push
sub
int
es
shrb
ret
xlat
lods
lret
cld
pop
adc
int
mov
inc
lock
and
int
mov
rcl
sbb
xor
cmp
lods
out
xor
xor
cmp
mov
jne
outsb
xchg
inc
in
adc
call
jne
xchg
add
adc
xchg
sar
popf
lods
jl
xor
loop
outsl
aam
push
dec
add
mov
repz
ds
ds
lds
movnti
jg
repz
not
or
out
jnp
pop
add
adc
mov
cmp
out
sahf
add
dec
hlt
arpl
das
cmpsl
stos
shll
cmp
aam
sub
jo
mov
shl
push
ret
das
xchg
xchg
testl
cmp
sbb
dec
jmp
pop
mov
dec
roll
into
insb
mov
sarb
roll
mov
ja
aam
jle
mov
shlb
loop
test
mov
or
out
iret
fidivrl
cmp
mov
or
in
or
sbb
cld
cltd
mov
push
cld
addr16
jl
dec
iret
dec
sub
mov
xlat
data16
js
inc
daa
rorb
adc
push
rcll
mov
sbb
jb
pop
xchg
mov
mov
mov
sti
in
test
out
adc
sbb
insl
xor
push
xchg
xchg
mov
mov
sub
fs
xlat
pop
js
or
std
xrelease
sub
jge
test
out
bound
mov
mov
test
movl
cli
es
xlat
mov
cwtl
or
fbld
test
mov
xchg
shlb
jno
xchg
or
jle
cmc
pop
inc
neg
mov
clc
xorl
sbb
sbb
shlb
or
iret
ja
adc
xorl
mov
loop
pusha
je
sub
mov
in
inc
mov
aam
inc
int
pushf
clc
sub
fiaddl
frstor
sub
stos
push
or
or
xor
and
push
jp
mov
aad
stc
xlat
icebp
daa
outsl
and
rcrl
pop
xor
fisubrs
insl
mov
gs
jmp
std
jo
and
fwait
sbb
jnp
aas
ret
or
pushf
pop
mov
ret
cwtl
stos
pop
imul
fnstenv
cmp
popf
call
xchg
orb
cmc
out
nopl
sub
inc
cmp
popa
ja
out
int
dec
jge
ja
das
or
push
inc
in
xchg
je
mov
sahf
mov
popa
dec
aam
sbb
sti
loop
and
add
popf
xchg
xor
dec
scas
lods
push
cwtl
pop
xlat
mov
pushf
outsb
fcomps
pusha
shlb
notb
into
aaa
fwait
push
mov
inc
cmp
mov
int3
subb
xchg
sbb
loopne
inc
sarb
inc
notl
ficomps
jle
pushw
push
out
rol
jl
jno
pop
sbb
add
stos
adc
cli
pushf
dec
out
sub
sti
pop
xchg
popa
or
hlt
inc
mov
lret
addr16
mov
dec
mov
mov
inc
adc
mov
int
pushf
xchg
cmpb
fdivrl
mov
push
sbb
cmp
in
in
inc
mov
add
call
jle
aam
inc
mov
divb
xlat
push
or
push
dec
sahf
mov
cmp
dec
mov
pop
jns
or
in
pushf
push
test
cwtl
nop
pop
aad
and
dec
xchg
xchg
out
int3
pop
popf
out
loop
xchg
mov
daa
out
lds
data16
adc
mov
mov
cld
clc
stc
and
mov
lds
outsb
in
ret
mov
shrl
sub
fdivrs
push
mov
or
rorl
fstl
imul
lahf
sarb
fmuls
int
lds
sbb
dec
sbb
test
mov
jb
ficompl
mov
mov
stos
pop
imul
or
jmp
ud0
rcll
adc
and
mov
ds
pop
jp
jne
inc
pop
mov
std
jne
lods
cmp
fcompl
inc
scas
mov
lahf
leave
xchg
dec
sahf
test
jno
negb
adc
pop
fwait
inc
jl
xchg
sub
js
jl
pop
mov
adc
add
ss
rcll
imul
inc
cmpsl
ss
enter
jl
and
mov
andl
repz
jg
jecxz
imul
xor
inc
shlb
test
hlt
lret
sbb
sarl
push
fistpl
jecxz
mov
lea
mov
insb
cmp
movl
push
add
dec
orl
xlat
xchg
ljmp
fs
mov
call
fidivl
lods
pop
xor
into
inc
ficompl
stos
loopne
push
clc
or
mov
ljmp
fwait
mulb
repz
or
dec
test
daa
add
jl
cli
dec
inc
sbb
rorb
icebp
outsl
shrl
scas
pop
es
roll
and
mov
movsl
push
xchg
dec
loope
jbe
sahf
scas
jne
call
push
icebp
divl
inc
popf
call
mov
imul
push
fwait
sub
insb
jns
jp
push
imul
push
mov
out
hlt
test
scas
stc
or
xor
leave
xchg
test
cmpsl
pop
inc
fmul
aas
lds
fildl
and
mov
out
push
scas
mov
movsl
mov
mov
nop
cmp
or
sbb
sbb
js
sbb
adc
cmpl
test
push
cmp
add
or
xchg
inc
dec
test
dec
out
mov
pop
adc
mov
test
test
rcrb
mov
jge
inc
fistl
test
loop
mov
lret
mov
outsb
bound
mov
hlt
repnz
inc
pop
je
push
push
inc
pop
mov
inc
mov
or
pop
mov
push
add
inc
and
icebp
pop
jg
dec
mov
or
push
cmc
lods
jae
xor
mov
sar
jno
sbb
fpatan
aas
mov
sbb
mov
aad
inc
out
js
into
inc
and
outsb
fwait
dec
out
icebp
sbb
rep
or
imul
pusha
loop
rolb
xchg
imul
inc
psrlq
sub
mov
xchg
adc
push
or
sbb
out
mov
gs
inc
sets
lea
insb
mov
dec
dec
mov
adc
leave
mov
xor
push
cmp
add
pop
add
and
sbb
mov
fistl
into
cmp
jae
in
jo
mov
fdivl
or
fs
sbb
jae
out
ficompl
ret
mov
xchg
mov
mov
mov
xchg
xchg
stc
sub
sbb
cmpsl
incb
push
ret
push
mov
sub
sbb
popa
pop
ss
in
sbb
test
sub
mov
fisubl
fstps
inc
push
dec
jns
and
sub
add
test
mov
je
jbe
xlat
pop
out
sbb
insb
hlt
fdivrs
mov
xchg
cmp
movsb
js
mov
gs
les
xor
hlt
pop
pop
jnp
pop
cmpsl
into
cmp
or
add
or
pop
mov
xchg
mov
sub
popa
test
test
in
aas
sub
ja
lcall
insl
scas
adc
lods
dec
dec
movd
std
jnp,pt
cmp
int
cmp
fisttpl
addr16
insb
ret
mov
mov
sbb
jns
fidivrl
mov
dec
nop
daa
lock
and
cmpsb
jno
add
aam
out
fs
add
repz
loop
pop
sahf
arpl
mov
xor
scas
mov
push
stc
popf
psubq
mov
or
and
xchg
call
push
shl
push
cmp
test
inc
cmc
push
and
das
lock
xchg
push
push
mov
and
dec
cmp
add
and
hlt
add
push
xor
adc
sub
test
adc
mov
jecxz
add
add
mov
pop
dec
mov
loopne
cltd
out
es
mov
cmp
lcall
in
jns
out
pop
out
push
das
jle
xor
icebp
aad
xchg
xbegin
movsb
xchg
cs
std
lods
hlt
dec
fistpl
cwtl
jb
sarl
xor
ja
add
xchg
jmp
and
fadds
scas
lods
add
and
xchg
aaa
leave
mov
cld
jmp
jns
ljmp
out
xor
lret
cmp
adc
jg
popf
idivl
nop
mov
jl
pop
jmp
xchg
dec
mov
fwait
ja
mov
or
inc
and
outsb
lret
stc
push
jb
xor
rcrb
push
cmpsb
sarl
jno
mov
or
push
hlt
inc
or
popa
cmp
mov
repnz
mov
mov
loopne
push
xor
inc
sub
pop
sbb
mov
jg
cmp
fidivl
insb
ljmp
cltd
arpl
in
cmp
outsb
cmp
js
fcmovu
push
pusha
dec
pop
jno
nop
xor
add
and
pop
lcall
dec
mov
mov
lret
aas
xchg
mov
outsl
push
mov
or
pop
aad
cmpsl
dec
clc
push
pop
ja
loope
popa
mov
jno
movsl
and
mov
xor
mov
xor
xchg
ja
les
and
inc
xorb
movsl
std
add
movsl
sub
cmpb
mov
fadds
adc
fisubl
cmp
cmp
mov
push
pop
ja
ja
cmp
push
stos
lods
js
sti
xchg
leave
dec
mov
sbbl
pusha
cmp
pop
sbb
dec
adc
xchg
in
lret
inc
mov
jl
or
mov
and
mov
in
outsb
addr16
mov
bound
mov
sbb
cmpsb
cwtl
js
push
push
scas
adc
jecxz
xchg
daa
sub
pop
dec
mov
xchg
les
add
and
call
dec
jnp
xchg
pop
inc
ret
add
xorb
cmpsb
movsl
scas
lods
movsb
jo
xchg
pop
dec
push
mov
cli
xlat
int
and
jae
add
in
sbb
push
rorl
mov
out
push
or
scas
add
nop
push
je
lds
sbb
cmc
and
push
adc
std
sub
call
jge
cltd
sbbl
into
loope
dec
sbb
adcl
pop
pop
movsl
push
push
loopne
sbb
leave
cltd
fldl
jo
lds
mov
outsb
pushf
int
mov
mov
jo
imul
jp
mov
loopne
adc
push
add
dec
enter
push
cmpsb
movsl
repnz
lock
loope
lods
fwait
fwait
or
ds
inc
pop
shll
scas
cmp
pushf
mov
rcrl
rorb
push
jnp
loop
daa
add
mov
inc
cld
arpl
stos
arpl
out
mov
in
push
pop
gs
fimull
mov
pop
movsb
stos
pop
aaa
mov
scas
cs
or
push
sub
icebp
push
add
cmpsb
shrl
add
mov
inc
push
and
xor
loope
nop
dec
pop
dec
iret
cmp
add
into
sub
or
sahf
popa
arpl
arpl
lret
pop
repnz
sub
mov
mov
and
gs
out
fs
mov
push
and
jno
gs
pop
cs
stos
mov
repz
cltd
sti
stos
dec
movsl
mov
sub
pop
leave
jb
mov
rcll
push
xor
cmc
dec
mov
int3
js
adc
jp
ljmp
push
dec
jl
push
cli
in
in
jecxz
adc
cmp
popa
mov
push
or
divb
lcall
scas
scas
push
mov
inc
mov
out
in
movb
xlat
push
dec
rorl
or
mov
es
mov
mov
in
xchg
rcl
push
add
cmpsb
dec
pop
jno
jp
mov
mov
std
jmp
dec
jno
pop
mov
inc
arpl
push
lods
out
icebp
sub
repnz
das
and
pop
dec
xchg
sbb
shll
arpl
add
xor
dec
mov
xor
inc
out
xchg
fwait
and
loopne
adc
push
cltd
fstpl
xor
mov
cmp
push
sbb
pop
dec
jecxz
jecxz
nop
adc
dec
ret
adc
or
dec
scas
jo
and
inc
sub
xchg
cwtl
mov
and
aaa
rcll
movsl
lret
insb
jae
or
xchg
in
dec
out
aas
mov
push
push
sarb
les
inc
adc
cmpsl
mov
sub
pushf
ret
enter
cmp
mov
dec
push
dec
repz
mov
enter
xchg
xor
rol
addl
xchg
insl
jp
inc
aad
and
cli
test
inc
dec
rcrb
jb
push
push
sub
pcmpgtb
push
or
movsl
pop
mov
push
inc
mov
dec
push
and
xchg
ret
fs
into
stos
adc
shlb
outsb
mov
movsb
mov
push
push
and
inc
push
inc
popf
dec
xor
lea
push
add
shll
ret
fisubrl
xor
and
push
pop
enter
push
ficompl
mov
xlat
ror
pop
pop
fs
addb
jmp
iret
pop
jns
mov
dec
inc
loopne
ret
dec
mov
xchg
push
dec
incl
adc
push
sbb
sahf
adc
sbb
rclb
je
mov
push
jmp
xchg
xchg
outsb
stos
pop
jns
insb
cmp
sbb
jl
mov
lahf
mov
scas
sbb
jge
mov
and
xchg
xor
xor
sbb
adcl
add
std
pop
movsl
push
iret
dec
js
jae
or
stos
sahf
adc
sub
out
push
cmp
mov
test
sbb
dec
call
out
int
shrb
icebp
ret
std
pop
fiadds
add
pop
mov
stc
inc
adc
loop
cli
les
into
scas
mov
mov
and
movsl
pop
and
out
lods
jae
sahf
add
dec
xor
inc
stos
sbb
pop
jno
pop
in
push
out
adc
mov
shrl
pop
lret
fwait
mov
or
and
repz
lahf
mov
mov
dec
push
mov
in
pop
adc
and
jne
adc
ret
ss
insl
addr16
jb
sub
push
aad
and
loopne
adc
pop
jae
sub
or
popf
inc
mov
in
add
rorl
pushfw
test
popa
test
mov
nop
cs
mov
cli
stc
inc
gs
movsb
loope
insb
sub
mov
out
jno
push
fstp
aaa
and
fisttps
stos
or
mov
paddsw
scas
cs
sub
jp
fs
xchg
xchg
xchg
sbb
adc
pop
adc
sbbb
and
mov
icebp
mov
into
dec
outsl
cmp
shl
push
ds
int3
sbb
enter
cmp
cmpsb
xchg
xchg
jmp
mov
cmp
pop
push
pop
pusha
lods
in
lods
fisubrs
mov
inc
lahf
shll
jl
add
xorl
movsb
pop
sbb
add
jp
popf
inc
fwait
dec
pop
pop
lods
xor
pop
in
xor
mov
xchg
inc
mov
and
sub
je
mov
push
sub
cld
mov
ffree
cmp
inc
jbe
scas
push
movsb
push
xor
repnz
mov
jnp
mov
add
cmp
mov
add
scas
aad
cmp
daa
jbe
int3
and
lock
int3
movsl
cs
loopne
xchg
test
jmp
fwait
cltd
fdivrs
mov
adc
sbb
fstpl
sbb
sbb
std
shlb
mov
sub
les
dec
loop
pop
cs
test
mov
mov
mov
and
push
cltd
mov
or
insb
ss
aam
mov
mov
mov
movsl
add
insb
push
scas
xchg
push
push
loope
cmp
out
sub
dec
adc
pop
inc
addl
movsb
xchg
into
push
sub
mov
out
jne
xchg
inc
xlat
push
shlb
and
mov
xchg
in
mov
lret
enter
xor
pop
data16
pop
xchg
sub
pop
or
inc
pop
sbb
pusha
je
in
icebp
add
fildll
cmp
in
jne
lock
sbb
rcrb
daa
test
orl
mov
dec
cwtl
test
inc
and
loopne
imul
and
sbb
jns
das
pop
addr16
mov
decl
loop
push
ficoml
jge
inc
popf
sub
xchg
and
lds
pop
dec
dec
push
xlat
fisubs
xchg
adc
daa
pop
mov
xlat
xchg
cli
xchg
xor
pushf
enter
or
adc
or
xchg
mov
jge
xchg
popa
mov
or
stos
mov
mov
testb
inc
pop
mov
sub
mov
lret
int
loope
add
fwait
scas
add
gs
and
jae
and
fdivl
jnp
pusha
adc
cli
push
cmp
cli
sbb
mov
icebp
adc
mov
imul
xchg
inc
aas
sbb
xlat
repnz
mov
push
xor
xchg
or
outsl
mov
dec
sub
pop
rcrb
lds
int
cmpsb
cmp
push
dec
xchg
or
mov
shlb
sti
push
in
sbb
lret
lods
xchg
addr16
inc
cmpl
cmp
fs
out
ja
sbb
outsb
fstpl
pop
test
pop
out
adc
pop
add
imul
xchg
add
or
mov
pop
mov
fwait
ja
ja
js
dec
dec
jl
daa
sahf
popa
xchg
jl
mov
sub
negl
jl
xchg
and
inc
jae
inc
mov
mov
cmp
roll
inc
push
aam
xchg
xor
out
dec
or
in
add
aas
fimull
data16
pop
sarb
outsl
sbb
push
xchg
mov
xor
cmp
push
mov
clc
lret
dec
movb
jbe
mov
mov
addr16
mov
xchg
pop
jle
inc
pop
mov
push
jecxz
and
das
pop
addb
dec
int
sbb
cmp
pop
pop
pop
ja
sub
and
push
dec
push
fdivs
and
mov
fists
jno
cltd
mov
sbb
push
pop
addb
in
fucomip
out
out
push
imul
lods
add
cli
mov
imul
dec
sub
pop
iret
rcl
pop
stc
adc
repnz
js
or
and
lret
inc
jns
mov
add
mov
rcrb
sbb
and
inc
sbb
push
movsb
and
cmc
mov
xor
mov
pop
roll
loopne
jb
enter
add
xchg
sub
mov
or
out
xor
xchg
frstor
push
jne
inc
mov
push
call
inc
jp
out
and
mov
cltd
mov
push
xlat
cmpsb
mov
or
movsb
adc
into
pop
shr
pop
outsb
dec
cmp
or
jmp
js
add
dec
push
pushf
jl
xchg
pusha
outsl
aad
ret
repnz
mov
dec
xchg
or
mov
add
data16
jbe
and
cmp
push
mov
push
scas
lcall
lret
pop
clc
fstpt
sbb
mov
or
xor
cmc
dec
fldcw
add
jle
mov
dec
inc
jmp
fstpl
loopne
rcl
pusha
call
xor
ret
mov
cmp
divb
sbb
jecxz
dec
test
sub
pop
jmp
push
addb
pop
or
dec
xchg
cmc
mov
cltd
and
pushl
xor
gs
xchg
cwtl
cmp
rclb
out
mov
or
sub
lods
mov
push
mov
cltd
out
xchg
mov
ret
shlb
gs
sub
jb
mov
xor
subl
sub
dec
xor
scas
aam
mov
test
xchg
mov
rol
pop
mov
pop
sahf
xchg
loopne
jno
push
leave
mov
andl
into
icebp
fwait
outsl
jge
sub
jmp
xor
fs
cmp
adc
jne
shrb
xor
mov
pop
dec
xor
inc
inc
add
jns
ret
test
stos
idivb
cmp
xchg
aad
add
bound
xor
aam
test
adcb
shl
pop
xor
mov
jecxz
pop
add
es
inc
inc
mov
mov
adc
lahf
pusha
xchg
mov
xor
not
pop
dec
sub
jecxz
inc
sub
lahf
inc
add
int3
shlb
ret
int
sub
or
lret
mov
xor
in
jbe
and
mov
xor
xlat
mov
cmp
cs
aad
mov
push
stos
sahf
mov
or
out
adc
movsb
lods
mov
push
pop
push
and
loope
inc
sarb
sub
gs
fcomi
fs
mov
mov
cmp
mov
xor
inc
dec
xchg
and
sbb
mull
loop
dec
ficoms
mov
pop
clc
mov
sub
out
test
pop
dec
clc
sbb
js
xchg
loopne
loopne
pushl
cli
cmp
stc
xchg
inc
dec
lcall
cwtl
mov
fimull
lret
add
inc
xchg
cld
mov
inc
lds
test
or
and
add
xchg
jg
nop
jnp
nop
in
jge
fisubl
aad
test
mov
mov
ja
rcrb
dec
xor
cmp
push
gs
mov
inc
inc
jno
push
push
push
and
jno
fwait
sub
mov
push
mov
push
add
push
pusha
repz
push
lahf
jbe
cmp
mov
jae
inc
repnz
xor
cwtl
ds
fnstenv
adc
or
dec
xchg
roll
pop
xchg
sub
add
sti
jmp
aad
std
jmp
push
pop
pop
mov
ficomps
and
xlat
push
movsl
adc
inc
faddl
or
int3
stos
mov
mov
jp
adc
lret
mov
pusha
or
daa
test
sub
mov
lcall
repnz
jl
inc
push
sbb
popf
mov
xchg
cmc
cld
ret
cmp
push
mov
mov
dec
cmp
xchg
jb
mov
lock
sbb
les
ret
into
dec
jge
rsm
out
pop
jle
sub
push
mov
mov
sbb
stos
lods
in
mov
sub
test
scas
js
scas
js
pop
fnstsw
rol
add
jle
cmp
insb
mov
dec
pop
cld
adc
fxch
add
scas
es
fldt
add
mov
das
mov
cwtl
cltd
mov
mov
out
daa
pop
mov
imul
in
jo
mov
js
add
cs
jnp
loop
sti
jnp
push
pop
xor
and
and
push
mov
xchg
fcompl
inc
in
fs
jle
adc
mov
mov
sbb
repnz
loop
jle
pop
cmp
push
mov
jmp
nop
mov
ret
enter
pushf
xchg
sub
scas
pusha
xor
push
push
mov
ss
rcll
ds
pushf
push
cmp
decl
adc
test
mov
and
aam
push
std
xchg
ret
xor
sub
push
push
and
xor
cmp
int3
rclb
ret
mov
jbe
cmp
push
out
and
into
mov
test
loop
cmc
sub
pop
orb
std
pop
ret
repnz
out
fs
jle
loope
fwait
pop
mov
pshufw
push
cld
cmp
adc
sbb
or
cmp
data16
xchg
dec
lods
icebp
js
cld
or
push
hlt
push
jecxz
scas
push
in
push
or
bound
sahf
lock
int
ficomps
mov
mov
xor
cmpsl
mov
jno
inc
popa
scas
jno
ja
hlt
loope
shrb
aaa
mov
ret
push
push
sarb
sbb
cmp
or
jle
out
dec
les
xchg
insb
in
mov
add
add
pop
fxch
dec
sbb
or
push
dec
mov
sahf
xchg
mov
xlat
add
mov
cli
mov
adc
mov
add
xor
cmp
lods
and
adc
lock
loopne
nop
sub
pop
in
out
lock
dec
adc
and
fsubrl
mov
xchg
in
pop
add
sub
rolb
xchg
fsubrp
push
aaa
imul
test
fwait
fs
sub
mov
out
mov
xchg
clc
pop
jns
cli
fbld
adc
xorb
aas
lods
push
sbb
mov
add
dec
sub
xchg
dec
ret
repnz
out
into
xchg
lret
js
sbb
loope
nop
faddl
mov
or
lret
repnz
nop
dec
loope
sbb
shrl
jno
je
loopne
fidivrl
or
dec
cs
mov
test
xor
mov
iret
mov
test
mov
rcll
fdivrl
dec
ljmp
cmpsl
out
cs
std
and
jecxz
inc
in
icebp
dec
push
mov
mov
push
imul
clc
sbb
xchg
mov
test
dec
inc
mov
ret
mov
pop
sub
mov
cmpl
pop
sbb
xchg
out
jle
sub
loope
add
pop
add
je
les
mov
cmpsb
or
dec
into
mov
orb
add
dec
sub
out
rcll
int3
sbb
or
lret
je
sbb
cmp
movsb
inc
scas
dec
cmp
fs
push
fistpll
and
push
pushf
sbb
into
add
jo
mov
mov
push
add
add
popf
mov
out
lret
hlt
cmp
add
jl
cmp
mov
push
add
bnd
rclb
lea
push
pushf
or
dec
fucompp
mov
push
pop
das
add
mov
xchg
nop
sbb
dec
loope
mov
lods
xchg
xor
flds
adc
push
push
icebp
insb
mov
dec
mov
inc
sbb
ficomps
inc
pop
in
adcl
call
dec
pop
mov
iret
jp
cmp
jmp
scas
xchg
pop
int
pop
mov
or
push
push
lret
mov
adc
sbb
pop
stos
or
inc
insb
pop
cmp
mov
hlt
push
push
mov
lea
mov
cld
pop
dec
jbe
andl
daa
dec
into
pusha
sbb
cmc
cmp
mov
sbb
push
repz
cmp
popf
dec
lcall
out
add
arpl
mov
sti
fmulp
sbbb
cmp
jg
lcall
hlt
xor
outsb
mov
movsl
out
inc
sub
dec
adc
xor
add
cwtl
mov
xchg
add
inc
mov
inc
push
mov
cmp
fs
push
jnp
je
push
shlb
sbb
add
jle
nop
dec
negl
arpl
ffree
into
xchg
pop
in
sbb
addr16
packssdw
inc
scas
mov
push
mov
arpl
push
mov
fisubs
push
mov
fadd
pop
cmp
popl
dec
es
xor
xchg
jge
sbb
mov
inc
push
xor
shll
jl,pt
ljmp
dec
shl
stc
mov
push
es
push
insb
xchg
mov
pop
stos
into
ja
cmpsl
sub
or
lds
out
pop
dec
nop
push
and
lods
sbb
sub
dec
pop
mov
or
mov
cmp
bound
out
lahf
xchg
aam
pop
lahf
pushf
lock
sub
dec
mov
push
leave
xor
or
cmp
or
jge
shr
mov
lea
shrb
mov
mov
add
add
cltd
fsubp
out
sub
push
or
outsb
cmp
loope
lods
push
mov
dec
pop
fwait
gs
add
mov
ss
ja
cmc
push
std
xlat
pop
sub
lea
xchg
adc
mov
push
push
imul
adc
iret
pop
fbld
pop
cmp
push
push
xorl
cmp
dec
je
fs
xlat
into
int
add
shlb
mov
cmp
test
sbb
or
push
jmp
imul
dec
mov
xorl
out
ret
mov
insb
lret
add
sbb
out
arpl
fisubrl
les
fisubs
mov
push
lods
cli
xor
dec
or
cmpl
les
lret
xchg
mov
cmp
ja
outsb
outsb
mov
sub
push
fildl
imul
or
mov
cli
adc
sbb
inc
movsb
add
mov
test
in
pop
lret
xchg
add
inc
xlat
jae
jno
mov
jno
aad
iret
roll
add
les
xlat
push
dec
mov
sahf
in
repz
lar
movl
repnz
push
adc
xor
stos
scas
out
pop
aaa
mov
cmp
inc
mov
loop
scas
mov
pushf
psllq
scas
push
mov
leave
xor
loope
shr
out
cmc
sbb
mov
and
pushf
or
outsb
pop
xor
xor
sub
push
inc
cwtl
jmp
dec
pop
stc
jbe
mov
out
rcrl
aaa
cmp
in
xchg
pop
mov
inc
in
jecxz
inc
iret
add
xchg
iret
dec
inc
push
fwait
fwait
dec
mov
ds
addr16
mov
add
pop
mov
pop
add
lods
fadd
incl
outsl
mov
mov
xor
sbb
jge
mov
cmpsl
or
loop
test
mov
loopne
xorb
sbb
gs
lods
xchg
insb
cli
jb
jns
and
daa
adc
in
lret
neg
lock
ljmp
sbb
mov
xchg
mov
adc
add
mov
js
popa
iret
inc
fcmovu
mov
mov
out
mov
push
push
in
cmp
cwtl
cwtl
lds
fwait
loopne
add
jmp
movsl
push
fdivrs
xor
or
cmp
xchg
dec
jmp
inc
iret
in
mov
out
fildll
dec
mov
rcr
mov
lcallw
mov
jle
gs
lcall
mov
mov
cmp
and
inc
xchg
cmp
icebp
jg
lods
xor
addr16
or
arpl
push
xchg
imul
lods
lock
insl
in
xor
sbb
inc
mov
add
jmp
shlb
in
ja
mov
sbb
inc
cmp
sbb
ljmp
mov
movl
fwait
in
push
jl
imul
inc
ret
into
cmp
pop
lea
adc
xchg
cli
rcrb
or
push
clc
lret
mov
scas
lret
movhps
push
push
addr16
sti
sub
js
lds
jns
xor
mov
adc
fstpl
ret
jbe
or
push
push
or
fcomps
push
decb
lret
fidivs
and
in
sub
and
push
pop
int3
push
es
mov
les
push
lret
pop
mov
gs
fcoml
adc
dec
flds
popl
push
mov
hlt
jae
addb
sbb
ss
aaa
or
sub
adc
sbb
mov
xchg
loope
push
mov
aas
lcall
jb
jge
xor
dec
xor
push
adc
inc
cwtl
adcb
mov
dec
fdiv
enter
inc
sub
dec
hlt
add
jge
add
dec
inc
js
mov
arpl
out
sahf
dec
push
iret
fsub
inc
sub
das
mov
movsl
xor
mov
push
sbb
xchg
popf
mov
jle
lret
loopne
out
xor
adc
pop
pop
in
in
jbe
inc
cld
lea
xchg
jp
rcrb
and
sbb
imull
dec
adc
inc
inc
inc
outsl
imul
sbb
out
push
hlt
orb
jno
push
hlt
mov
aaa
mov
adc
out
les
subb
fisubrl
les
out
mov
inc
mov
cmp
mov
shrl
sahf
out
mov
ss
cmpsl
sbb
es
mov
sbb
cld
lods
and
cmp
xchg
adc
mov
jnp
mov
cmp
pop
xor
test
sub
dec
bound
add
rolb
mov
xchg
sub
adc
sbb
cltd
dec
fs
loopne
pop
cmp
pop
aaa
andl
jnp
pushf
cmp
pop
or
decb
mov
or
popa
adc
in
scas
sub
push
mov
gs
negb
stos
sub
dec
pop
adcl
mov
push
cltd
push
sbb
mov
push
cs
mov
xchg
mov
mov
push
xchg
pop
dec
lods
cmpsl
jg
loope
aam
mov
ds
out
adc
jne
stos
inc
ds
cmp
lret
sti
and
mov
scas
mov
ret
mov
adc
shl
mov
xor
xor
gs
xchg
inc
jmp
int3
push
pushf
mov
adc
xchg
testl
clc
pop
cld
or
cltd
jne
nop
mov
popa
pop
cmp
inc
in
addr16
adcl
mov
test
push
pop
cs
sbb
xor
lea
xor
cltd
mov
fsub
neg
fsub
and
enter
out
push
icebp
cmc
test
out
inc
adcl
adc
push
push
rcl
pop
jne
mov
cmp
shll
or
lods
xchg
scas
test
sbb
mov
ds
or
orl
movsl
repz
call
adc
xor
inc
pop
into
and
xchg
mov
xchg
pop
jmp
pop
aad
inc
mov
pop
mov
into
in
sbb
lret
cmp
lahf
jg
jae
lods
push
jmp
cld
in
leave
scas
adc
mov
adc
xchg
cld
xchg
adc
movsl
bound
jle
cmpsb
or
les
ljmp
xchg
mov
inc
pop
mov
nop
repnz
inc
jge
pop
mov
loope
mov
push
test
sbb
dec
inc
loopne
clc
add
push
inc
or
adc
jae
lcall
adc
push
pop
ret
es
in
xor
xchg
repnz
cli
lods
pcmpgtw
dec
pop
clc
push
lret
lcall
xchg
jnp
testl
scas
inc
jne
and
sub
in
popf
enter
and
adc
and
and
or
cmp
xchg
ret
jne
push
cmp
push
sub
mov
cmp
aam
cmp
fldt
pushl
mov
scas
adc
inc
imul
cmp
cmp
jecxz
or
mov
int3
imul
fidivrl
and
xor
lea
cmc
push
and
lods
push
adc
xor
pop
std
arpl
xor
mov
std
xchg
and
ret
imul
fstps
testl
jnp
repz
fwait
pop
inc
in
stos
std
add
shrl
aad
xchg
jp
cmp
mov
inc
push
mov
enter
das
or
mov
fs
fcomip
and
scas
aam
std
cmp
pusha
in
dec
mov
xor
das
je
fldcw
fsubrl
pop
outsl
divl
adc
int
dec
out
ds
dec
xchg
jg
xchg
xor
mov
lods
addr16
mov
add
lds
dec
push
and
out
dec
mov
cwtl
sbb
out
push
xchg
dec
out
cmp
in
fcompl
adc
adc
jo
mov
insb
jmp
adc
dec
mov
or
mov
leave
cmc
add
std
jmp
add
or
dec
cmp
and
icebp
lds
push
adc
fnstcw
fisubrs
jmp
pop
cmp
fcoml
outsl
push
dec
je
lahf
cwtl
mov
xchg
inc
mov
ja
jbe
lock
movsl
push
ret
bswap
mov
js
sbb
cs
adc
mov
push
icebp
loop
imul
sbb
lret
jbe
sub
dec
and
and
into
jg
mov
fmull
mov
jno
xchg
test
js
inc
xor
mov
mov
sub
xchg
cmp
jns
cltd
sahf
shlb
dec
xor
cmpsb
insb
in
xlat
and
jecxz
pop
bound
xchg
cmp
inc
mov
test
inc
pop
xlat
outsl
cmp
cmp
insl
sahf
mov
cmpsl
mov
jge
in
test
lock
mov
xor
aam
push
test
testl
pop
inc
lret
inc
push
int3
xchg
pop
or
imul
fistps
cmpsl
flds
jge
stos
out
adc
cwtl
jb
in
js
add
or
das
pop
out
in
add
inc
inc
cmc
sbb
sbb
lret
outsl
or
add
rcl
xchg
xchg
dec
stos
lret
daa
test
inc
mov
push
push
test
add
orl
add
ds
rorl
lcall
cmp
mov
xchg
aaa
push
sti
imul
push
jbe
mov
enter
hlt
out
std
adc
rcll
fsubs
mov
outsl
das
loop
jne
loope
jmp
addr16
sub
sti
jnp
fs
cs
out
repnz
xchg
cmp
repnz
fs
xorb
stc
ss
sbb
jne
stc
add
scas
out
adcl
mov
aaa
aam
insl
mov
and
insl
xor
data16
scas
adc
mov
fdivrp
adc
aaa
test
aam
or
stos
dec
push
loop
pusha
loop
fisubrs
scas
inc
jl
pop
add
fisttps
xchg
jmp
loop
inc
jp
pop
aas
mov
mulb
out
or
adc
mov
sbb
stos
inc
sub
xor
dec
inc
jnp
inc
lcall
mov
testl
dec
inc
fisubs
out
cmp
pop
sub
lahf
jle
xchg
jno
xchg
inc
or
ds
inc
mov
imul
es
call
stos
shlb
clc
mov
test
pushf
add
xlat
and
dec
cmp
and
xor
push
in
sbb
inc
mov
mov
bound
fstp
dec
mov
jmp
xor
ret
cwtl
rolb
int
outsw
iret
loopne
daa
fsubs
je
aad
hlt
and
orl
inc
push
orb
lods
stc
pop
cli
int
bnd
es
iret
push
cmp
sbb
inc
gs
mov
push
xchg
xchg
sbb
ret
jno
push
lret
das
and
xor
jl
jg
mov
inc
dec
xchg
mov
pop
cmp
jne
pop
jbe
nop
clc
mov
sbb
pop
je
adc
add
xchg
aad
cltd
icebp
pop
lock
out
push
ret
inc
dec
cmpsb
mov
xchg
cmpsb
in
inc
cli
out
mov
and
shlb
jno
mov
sub
xor
xor
out
fsub
pop
push
mov
cltd
push
mov
out
fwait
push
xchg
repnz
ficoms
adc
loopne
ret
xchg
mov
mov
pop
adc
int
adc
nop
imul
outsl
inc
mov
movsl
fidivrs
xchg
mov
leave
mov
xor
loopne
arpl
sbb
xlat
sbb
sbb
outsl
cmp
add
scas
dec
add
jg
enter
xchg
mov
push
mov
imul
test
shll
fiaddl
int
loope
lds
push
ret
mov
mov
movl
sbb
adc
mov
inc
or
mov
int3
sbb
fldt
pop
ret
lods
ljmp
mov
or
adc
sbb
mov
push
shrb
nop
xor
sbb
daa
push
out
fsubrl
ret
cmp
add
aam
sarl
or
adc
adc
cld
aaa
mov
jle
shll
push
pop
add
test
dec
mov
jo
adc
subb
stc
mov
ret
and
and
in
fisubrl
sti
inc
hlt
push
pusha
xor
rclb
inc
inc
repnz
lods
ret
xor
or
sbb
rol
jnp
imul
mov
loop
add
or
dec
int3
pop
cmp
mov
ljmp
dec
mov
pop
cmp
stos
push
cmc
outsw
or
shr
lret
dec
or
stos
xchg
mov
into
or
push
pcmpgtw
jmp
out
fdivrs
mov
adc
dec
adc
lods
gs
subl
std
sbb
xchg
stos
aad
scas
sub
or
mov
std
fs
adc
and
jne
fwait
cmp
mov
fidivrl
inc
cmpsl
inc
inc
sub
mov
mov
bound
jae
push
mov
cli
pop
dec
jne
inc
xchg
arpl
adc
pop
jno
sar
inc
jae
push
stos
outsb
lret
cmpsb
inc
adc
out
inc
mov
mov
jge
test
pop
inc
cmp
orb
cmp
jmp
mov
dec
out
or
inc
xor
pop
adc
sub
lcall
in
cmpb
data16
inc
sub
out
pop
mul
or
icebp
nop
adcl
mov
into
adc
add
jg
xor
mov
sti
pusha
lcall
jl
in
enter
ss
lods
rorb
cli
and
jns
pop
jmp
iret
pop
sbb
cld
add
fisttpl
lahf
push
pop
insl
test
ljmp
push
es
push
inc
mov
pushf
dec
dec
xchg
pop
or
imul
cmpsl
repnz
inc
arpl
loopew
inc
mov
ss
jae
int
insb
lcall
jbe
jns
pop
in
fcomp
add
mov
cmp
inc
push
ljmp
je
or
and
iret
lock
ljmp
out
int
je
inc
icebp
imul
jl
push
aas
and
andl
xor
lahf
cmp
pop
roll
and
fstps
or
push
push
xor
andb
shr
add
lock
inc
insl
lret
out
mov
sti
js
hlt
int
adcl
pop
insb
cmc
jg
inc
dec
mov
popa
test
call
daa
mov
jo
gs
or
not
dec
sub
mov
push
xchg
dec
aas
adcb
push
cmc
out
or
addr16
repnz
mov
sbb
pop
jecxz
push
and
shll
or
or
fsubr
int3
mov
sbb
popf
lret
std
popf
ss
jbe
and
or
mov
and
mov
in
inc
push
dec
inc
stos
add
inc
shrl
add
scas
push
push
hlt
stos
mov
test
das
pop
pop
adc
fmuls
jnp
add
addl
test
inc
repnz
xchg
out
mov
push
inc
les
jno
pop
jle
or
inc
or
sbb
shll
push
inc
stos
lds
xorb
push
sub
call
mov
and
in
imul
xchg
adcb
and
addr16
pushf
addr16
loop
fcomps
popf
je
popf
in
or
pop
lods
fcoms
stc
repz
fdivs
xchg
fstp
jb
jbe
gs
mov
out
outsb
mov
push
decl
rol
outsb
loopne
jecxz
jo
add
lods
lds
cmpsb
inc
mov
push
sbbl
pop
pop
xor
xchg
imul
mov
jg
push
outsb
inc
iret
sbb
fs
and
xor
lea
sbb
xchg
add
lods
mov
scas
pushf
mov
pusha
push
pop
repnz
je
mov
cmpsb
mov
mov
psrad
cmp
pop
negl
arpl
jmp
je
aad
fmull
shrb
mov
pop
xor
push
testb
clc
cmp
push
cld
lock
xchg
in
fcmovnb
loope
shlb
mov
adc
cwtl
cmp
ljmp
outsb
cmp
mov
sbbl
cld
lea
sarl
fdivr
popa
rolb
ja
hlt
push
fsincos
repz
ja
mov
xor
cmp
mov
jnp
scas
sbb
in
pop
inc
outsl
push
cmp
or
xchg
roll
out
cmp
adc
repz
fwait
cmp
sbb
and
cmp
mov
mov
fistl
gs
adc
jge
add
adc
jo
dec
or
add
xchg
in
xor
dec
ret
repz
inc
push
pop
lock
test
sbb
cmpsb
jnp
inc
arpl
pop
mov
ror
cmp
xchg
xor
jmp
push
insl
push
mov
push
test
dec
mov
dec
adc
or
push
cmp
lcall
repnz
mov
mov
rclb
ror
cmpsb
cltd
daa
andl
fimull
loope
mov
xor
dec
cmpsb
stos
xchg
jb
lods
les
inc
shrl
sti
movsl
mov
adc
and
or
or
testl
test
cmpsl
xchg
jmp
xor
addl
rcrl
int3
dec
fwait
shll
std
sub
into
mov
adc
sub
pop
lret
xor
testb
xchg
arpl
xor
jg
movsl
nop
leave
into
stc
lock
and
ret
push
clc
stos
cmp
mov
out
push
jmp
repnz
or
adc
idivl
push
test
pop
xchg
xchg
pusha
clc
mov
loope
add
cmp
int
fldenv
push
sti
pop
mov
jo
pop
sbb
int
adc
or
sbbl
pop
add
test
stos
lods
and
or
pushf
andb
add
mov
xor
mov
lret
mov
int
ret
enter
cmc
scas
fisubrl
cltd
jecxz
rolb
sub
int3
mov
jecxz
sub
mov
mov
pop
imul
es
pop
xchg
gs
pop
xor
sarl
dec
cmp
fisttps
push
in
lods
pop
sub
out
stos
mov
mov
mov
pop
dec
pusha
repz
fstps
int3
lods
and
dec
jae
push
push
push
cld
sahf
mov
mov
pop
pop
sbb
ret
xor
mov
rorb
mov
cwtl
mov
mov
out
je
push
das
push
leave
lret
adc
pop
cmc
lods
stc
andb
dec
dec
pop
movsl
cmpsb
adc
cmc
jge
cmpsl
dec
out
mov
ret
pop
scas
push
insl
out
stos
bound
add
cmp
les
mov
dec
add
shrb
scas
vpackuswb
lds
lock
jmp
cs
pop
scas
in
mov
mov
mov
push
clc
arpl
and
shrb
cmp
jbe
push
xlat
xor
xchg
movsb
or
sbb
sti
sahf
jb
into
pop
imul
dec
cmp
and
je
xor
inc
shrb
dec
popf
xchg
leave
fmul
cltd
push
stc
stc
ds
aaa
mov
and
sbb
insb
mov
add
fnstcw
fstl
sub
iret
pop
pop
sbb
out
test
mov
fnstenv
cmp
enter
insb
ret
repz
xor
ficoms
or
jle
lcall
ret
repz
outsb
sub
lret
add
sub
test
pushf
add
stos
je
std
pop
mov
lret
add
push
sub
aaa
sti
je
aaa
sti
or
insl
insl
mov
push
das
push
add
inc
data16
xchg
sbb
adc
fisubrl
pop
fucom
sbb
outsb
icebp
and
ja
xchg
testb
xchg
sub
movlps
cmp
pop
cmpsl
psrlq
sbb
xchg
inc
mov
mov
cwtl
arpl
or
jnp
push
popl
movsb
stc
add
jecxz
or
popa
add
shrl
or
push
out
ljmp
dec
push
xlat
jbe
mov
es
in
gs
xor
dec
es
insb
ja
inc
or
dec
mov
sub
add
xchg
cmp
inc
add
mov
es
mov
xchg
mov
inc
xchg
sub
mov
into
mov
pusha
rcll
mov
adc
addr16
outsl
mov
jns
repz
add
sbb
int3
push
add
mov
jg
sbb
pop
dec
xlat
dec
js
inc
xchg
add
xor
xlat
mov
into
ljmp
sub
addl
xor
xor
inc
les
fwait
aad
lods
movsb
std
pop
mov
or
push
add
push
fldenv
cld
add
rclb
bound
pop
or
ret
push
inc
movsl
jo
cltd
adc
inc
mov
ljmp
rorb
push
scas
mov
adc
nop
movsl
nop
fisubl
fildl
pop
clc
outsb
shrb
jbe
xlat
bound
push
dec
lcall
repnz
mov
mov
bound
cmpsl
mov
push
mov
jp
rorb
sbb
sub
jmp
dec
lods
repz
cli
movsb
push
bound
dec
xor
jmp
hlt
cmp
ret
data16
pop
jg
in
jae
adc
pusha
dec
jecxz
mov
sub
pusha
hlt
out
jecxz
mov
lods
jge
add
pop
ret
loopne
lea
xchg
bound
ret
cld
mov
sub
aam
xchg
push
or
pop
dec
fwait
ljmp
cmpsl
cltd
rorl
lods
icebp
inc
mov
imul
dec
xchg
cwtl
push
pop
inc
int
xchg
or
mov
jl
add
cs
pop
sub
leave
add
cmp
adc
aaa
xchg
or
cltd
popf
xchg
mov
sar
add
nop
lods
repz
inc
cltd
mov
idivb
adc
leave
sahf
or
jae
popa
mov
dec
or
xchg
pop
mov
sahf
enter
fisttps
push
int3
js
jg
cmc
pop
xlat
mov
mov
mov
outsb
iret
aad
sbb
inc
sbb
adc
or
cmp
js
push
mov
sub
sub
leave
mov
sub
out
mov
daa
sub
xadd
mov
sbb
cmp
bound
clc
mov
ret
sub
mov
subb
pushf
push
in
sti
fwait
adc
insl
leave
and
fs
stos
inc
mov
loop
xchg
jns
test
mov
mov
cmp
pop
fbstp
mov
jbe
jg
or
xchg
gs
lcall
cmp
push
mov
mov
sub
push
mov
adc
enter
cmp
xor
int
inc
in
xchg
push
pop
mov
mov
in
dec
cld
dec
sub
ficompl
ja
or
packuswb
sub
sub
pusha
mov
pop
inc
loope
stos
rorl
add
mov
sbb
cmpsb
aaa
loop
mov
jp
jno
sbb
sbbb
stos
mov
je
test
hlt
push
inc
jp
mov
cmp
pop
dec
mov
icebp
popa
mov
mov
cmp
and
ret
into
add
int3
jno
or
fistl
imul
jge
in
pop
mov
out
pushf
jle
bound
mov
les
mov
sbb
push
mov
xchg
adc
stos
cmp
in
mov
and
cwtl
cmp
cmc
jle
pusha
adc
out
sbb
call
mull
or
cmpl
xor
les
ja
xchg
scas
dec
scas
push
je
ja
nop
pusha
insb
popf
lret
in
add
fldl
jo
mov
push
arpl
movsb
ss
ficoms
or
stc
cli
add
push
aaa
xor
add
cltd
je
fldt
xchg
jns
dec
add
dec
fcoms
frstor
mov
sub
iret
shrl
gs
xchg
cs
into
inc
hlt
mov
cwtl
mov
xchg
push
repz
daa
test
call
icebp
sub
xchg
fdivs
xor
fwait
jmp
in
shrl
sub
push
loop
sti
enter
ret
fcmovnu
in
in
stos
jge
ljmp
lods
or
push
mov
loopne
jnp
dec
pop
adc
mov
subl
mov
pop
shrl
or
lahf
sub
mov
scas
fistpll
shrl
fimull
or
daa
sbb
dec
lcall
mov
stos
shr
adc
test
inc
sbb
aad
inc
lods
jns
shll
mov
shll
jne
out
jo
push
imul
shrl
dec
mov
mov
mov
mov
pop
pop
and
sbb
out
adc
jbe,pn
mov
lcall
pop
xchg
xchg
popa
sub
mov
or
jp
push
lahf
sbb
iret
mov
adc
xor
xchg
inc
sbb
pop
or
xchg
jnp
dec
jl
out
lcall
mov
xchg
mov
xor
mov
pop
dec
fcmovbe
repnz
xchg
push
mov
imul
adc
and
cli
aad
in
mov
shll
icebp
inc
mov
out
jb
mov
cmp
test
mov
inc
in
lcall
ljmp
add
or
push
ds
push
or
cmpsl
sbb
mov
daa
gs
push
rolb
lods
or
test
fistpll
pop
xchg
push
xor
into
scas
fists
je
mov
push
gs
scas
mov
push
inc
or
cli
dec
add
mov
jge
pop
sbb
xchg
mov
fld
les
or
inc
mov
mov
sub
loope
cmpsb
es
sbb
mov
push
dec
adc
aaa
mov
cld
pop
ret
xchg
push
aas
clc
test
xchg
imul
ficoms
cwtl
add
or
cmc
jmp
and
or
pusha
xchg
icebp
dec
or
jl
lods
ss
lret
sbb
in
cmp
sub
sub
cmp
add
mov
dec
inc
out
or
cltd
mov
cmp
sub
and
xchg
mov
repz
xor
push
sbb
or
dec
mov
mov
mov
ret
cwtl
or
push
mov
jo
sub
test
mov
add
dec
scas
repnz
mov
pop
addr16
scas
pop
repnz
mov
lahf
xchg
test
in
movsl
add
cld
sub
push
leave
mov
iret
dec
aaa
mov
shlb
inc
mov
pop
incb
int
sbb
jno
fimuls
and
xchg
lds
loopne
clc
cltd
icebp
cmovae
jae
add
movsb
ss
xchg
adc
mov
add
lret
mov
in
cmp
cmpsl
add
adc
pop
xor
insl
test
pop
push
aam
sub
mov
or
jne
mov
fnsave
ret
sub
mov
scas
xchg
or
stos
push
fs
lods
adc
adc
outsb
inc
stos
xchg
insb
jmp
adc
sub
lods
stos
and
rorl
addr16
xchg
xor
ja
add
mov
cmp
frstor
dec
lret
xchg
xchg
add
orl
inc
mov
andl
jg
es
or
xchg
enter
push
enter
mov
lret
out
pop
push
and
cs
outsb
outsl
adcb
mov
lods
pop
arpl
jp
je
xor
mov
imul
pop
dec
insl
cs
and
sbb
mov
adc
ss
jmp
test
xchg
les
test
jmp
jp
mov
push
fcoms
rcll
ror
jmp
mov
test
lods
inc
pushf
jae
das
jecxz
add
lret
stc
sbb
mov
popa
icebp
fwait
cmpsb
mov
xchg
ljmp
loopne
mov
adc
push
fcoml
dec
jecxz
jno
jo
pop
mov
add
pop
icebp
sarb
add
xchg
imul
divl
pop
out
mov
adcl
mov
mov
pop
mov
inc
cmp
adc
dec
cmpsb
aaa
leave
pop
cltd
mov
xchg
pop
jmp
or
negb
mov
jnp
push
mov
pop
jle
test
in
arpl
inc
pop
xor
adcb
popa
scas
fildl
pusha
add
add
or
pop
sbb
scas
mov
incl
cs
jmp
movsb
push
sbb
sub
sbb
jbe
xchg
mov
lock
jno
mov
lock
enter
out
and
movsl
pusha
movsl
call
or
mov
mov
xchg
jg
aas
push
mov
aaa
and
or
das
jno
shll
mov
es
mov
add
xchg
cli
xlat
popa
mov
mov
addr16
pop
sbbl
bound
outsl
xchg
adc
mov
jae
mov
mov
mov
push
repnz
std
add
hlt
je
filds
cmp
xlat
inc
sbb
fistpl
lds
nop
enter
push
je
push
adc
cwtl
mov
inc
cmpsl
loopne
dec
icebp
cmc
adc
cmp
sbb
aas
in
sub
jbe
shll
or
int3
push
mov
xlat
lret
es
cmovge
inc
pop
xor
jmp
add
fwait
bound
lods
aaa
sbb
inc
mov
out
or
mov
add
push
mov
pop
test
adc
adc
lods
jle
repnz
mov
cltd
sub
dec
stos
pop
clc
jne
fistpll
popa
mov
inc
shr
dec
push
inc
adc
cltd
jle
movsb
fidivs
jo
mov
pop
cmpsb
inc
mov
or
sbb
cmpsl
cmc
pop
jmp
dec
dec
sbb
push
aad
or
cld
lods
add
xlat
shr
rolb
mov
sar
and
sbb
cltd
mov
and
mov
add
mov
pop
xor
xchg
push
filds
or
lahf
ss
sub
mov
scas
or
sub
push
iret
daa
mov
js
insl
fdivrl
in
jmp
or
addr16
push
adc
ljmp
sbb
stos
mov
jno
inc
shlb
adc
aam
daa
inc
mov
shlb
pop
jg
data16
sbb
lds
out
lahf
aas
sbb
pop
pop
jae
mov
push
cwtl
and
dec
jmp
dec
gs
lahf
push
mov
test
int3
dec
imul
push
adc
dec
pop
dec
cmc
js
inc
jp
test
pop
in
xor
and
mov
push
mov
mov
sub
gs
in
jl
enter
fidivs
sub
sbb
js
mov
xor
pop
ja
mov
cwtl
out
jb
subb
mov
cmp
rorb
inc
jo
int3
aas
and
clc
rcrb
data16
add
sub
cltd
ret
lds
nop
push
std
xchg
orb
nop
xchg
mov
add
stos
roll
cmp
or
rclb
mov
lcall
mov
jp
sbb
pushw
push
test
icebp
std
sub
jl
das
pop
xchg
cmp
icebp
add
lods
dec
mov
xchg
mov
js
sbb
and
jg
push
cwtl
mov
fildll
mov
sbb
pushf
cmp
mov
icebp
push
adc
div
loop
xchg
lods
pop
inc
pop
or
das
xchg
test
or
call
mov
outsl
jge
lods
call
clc
arpl
xchg
js
scas
imul
rolb
push
fldcw
ret
cmp
pop
movsb
test
imul
popf
jbe
xchg
bnd
xorl
movzwl
fwait
xchg
xor
std
xchg
ja
dec
inc
or
lahf
cli
testb
lcall
jno
xchg
pop
adc
orl
shrl
out
sub
je
addr16
cmp
sbb
dec
jae
rolb
aam
mov
ds
push
sbb
roll
fs
pop
cli
push
xor
shlb
sahf
outsb
mov
scas
mov
sub
mov
xor
loope
in
lret
jb
jnp
sub
and
cld
fldt
and
inc
fsubl
lds
xor
daa
push
sub
jl
xor
arpl
dec
and
mov
out
jo
call
movsl
xchg
add
dec
int
xchg
push
fbstp
mov
and
scas
fistpll
inc
inc
cmp
jp
movsl
mov
xchg
outsl
xchg
push
mov
mov
sub
push
ja
cld
ret
je
imul
inc
fdivrs
loopne
enter
add
sbb
loope
jbe
bound
xchg
pop
mov
fwait
inc
addl
and
adcl
stc
cmp
mov
clc
sub
in
fcomps
aas
insb
loop
sbb
mov
cmp
pushf
xchg
arpl
inc
loopne
sbb
in
xlat
sub
and
cmc
pop
ret
inc
ret
rcll
mov
hlt
pushf
inc
in
mov
sahf
sub
xorl
out
jb
pop
or
ret
cmpsb
jnp
or
mov
xor
fwait
stos
mov
sub
js
mov
jp
cltd
sti
xchg
sbb
add
xor
lret
xchg
jb
cmp
inc
push
dec
movsb
mov
imul
sub
pop
fwait
dec
sarb
cwtl
fldt
loop
mov
inc
cli
std
push
pusha
mov
mov
cli
test
mov
mov
fstpl
aaa
xchg
movsl
mov
xlat
xor
jo
inc
enter
mov
add
add
leave
cwtl
bound
jo
movsl
jecxz
sbb
cmp
or
gs
sub
pop
lock
stos
mov
lahf
inc
call
xchg
cmc
test
insl
ljmp
ljmp
xor
mov
scas
sar
test
inc
idivb
pop
or
fs
pop
push
out
int
adc
mov
cli
dec
sti
dec
fstp
dec
cs
scas
sub
xchg
xchg
xor
inc
pop
lods
add
inc
and
sahf
jp
mov
aad
or
cmp
or
test
push
push
add
lret
jo
pop
lea
dec
dec
fisttpll
rcrl
ljmp
sub
lods
pop
stos
xchg
and
cli
loope
pop
or
xor
in
or
xchg
ds
sahf
in
ss
xchg
mov
lds
and
adc
es
bound
mov
mov
movsb
loopne
mov
clc
nop
out
cmp
xorl
cs
mov
sub
out
adcb
ds
adc
nop
mov
xor
lret
add
push
rorb
std
add
lahf
sbb
aam
mov
sbb
bound
mov
inc
add
test
dec
faddl
sub
jbe
int
pushf
cmp
stos
mov
popa
add
gs
or
mov
jno
ss
lret
sbb
shll
popf
jno
sbb
mov
push
ss
hlt
movsl
divb
lret
inc
fistpll
test
outsl
subb
rolb
xor
pop
fwait
dec
push
rcl
lahf
lret
mov
jg
nop
leave
jnp
sub
jno
rcll
xchg
mov
cltd
fstps
xor
repz
xor
fisubrs
jp
lcall
or
lea
ja
ret
push
sbb
movsb
fists
js
jmp
sub
add
xchg
sbb
outsb
jb
dec
ljmp
mov
mov
popf
jl
call
les
xlat
xchg
fidivrs
insb
xor
bound
jo
ja
xor
call
stc
orl
fstpl
xchg
xor
push
and
ds
fs
cmp
xchg
scas
sahf
jle
inc
out
push
pop
dec
xchg
and
ficoml
subb
arpl
push
jne
fsubrs
mov
in
lcall
lret
scas
enter
fldt
mov
lods
fildll
push
cmp
fidivrs
jne
xchg
sbb
in
punpckhbw
dec
inc
mulb
shr
inc
lret
pop
mov
dec
rclb
and
mov
push
call
insb
ficomps
pop
scas
movsb
shrl
push
cwtl
push
add
adc
cmpsl
lahf
out
arpl
add
push
iret
xor
into
addr16
aam
cld
pop
or
sbb
data16
rorb
insl
dec
cmpsb
jne
imul
lret
add
add
hlt
clc
lahf
je
out
call
add
adc
mov
imul
rcrb
repz
loop
jns
into
dec
mov
outsl
inc
nop
jg
clc
dec
dec
rep
aaa
mov
js
adc
inc
xchg
lahf
add
roll
pop
stos
cmp
mov
sbb
into
cmc
cmp
repnz
xchg
int3
mov
loopne
mov
inc
insb
push
xorl
mov
mov
xor
out
cltd
out
in
pop
sbb
fnstcw
or
fcoml
xor
mov
cmp
cmpsl
adc
bound
nop
imul
js
shrb
adc
es
or
mov
jns
cmpsl
call
push
cmp
repz
adc
addr16
in
xor
sbb
cltd
repz
inc
stc
mov
enter
push
sbb
sbb
pop
stos
xchg
xor
mov
subl
rorb
test
add
loopne
pop
sti
fisubrs
bound
fiaddl
insl
pusha
iret
loop
pop
hlt
and
out
movsl
mov
sub
push
scas
mov
and
sbb
enter
add
pushf
sbb
js
pop
ret
ret
je
dec
push
push
divl
fwait
dec
popa
add
sbb
inc
iret
mov
in
cmp
insb
daa
lea
scas
lods
lock
mov
fdivrs
in
fists
dec
jb
insb
jmp
jnp
sbb
and
mov
rclb
movsl
cmp
push
dec
mov
gs
out
aad
jo
mov
lock
sbb
xor
pop
icebp
add
stos
mov
dec
jp
inc
cmp
pop
repnz
cltd
xor
add
inc
mov
sub
push
sub
xchg
jmp
movsl
loope
cs
pop
lock
lcall
sub
jge
aas
mov
and
in
rcll
test
movsl
jns
xchg
push
cmc
das
cs
pop
mov
js
or
jp
lcall
out
xor
stc
xlat
leave
loop
js
inc
lahf
out
xor
push
sbb
lcall
mov
call
inc
bound
xchg
cwtl
xchg
incb
test
lock
xor
subl
loopne
fimull
test
cmp
sbb
jno
cmp
scas
mov
aam
cmpb
testb
std
xlat
stos
shlb
lahf
adc
fsubrs
push
xlat
xchg
mov
mov
xor
or
mov
add
mov
sbbl
sahf
icebp
ds
inc
pop
popf
in
into
aad
mov
repz
or
ds
push
add
mov
mov
loope
mov
mov
ret
aas
adc
push
neg
dec
sbbl
and
sarl
call
aaa
push
cli
outsb
pop
jb
outsl
xlat
das
push
std
cmpsb
lcall
adc
lret
cld
pop
mov
test
sbb
mov
subl
aas
les
sbb
sub
leave
xchg
cmc
leave
mov
call
jg
mov
add
push
push
xor
push
insb
ret
rorb
lods
pop
ljmp
inc
fldcw
int3
sub
cmc
aas
adc
jns
pop
ljmp
stc
xor
addr16
jecxz
cmp
xchg
inc
test
sbb
cwtl
movsb
cmp
lret
adc
ja
and
cmc
loopne
mov
and
int
jb
test
daa
and
lods
repnz
es
dec
loopne
enter
pusha
sbb
repnz
iret
mov
xchg
jns
clc
pop
ds
loope
std
mov
es
push
push
adc
mov
test
push
inc
fcoms
pop
test
inc
out
add
dec
es
cmc
xchg
xor
mov
add
cmp
rolb
std
scas
mov
sbb
dec
add
leave
jl
jge
pop
test
faddl
xor
ja
aas
popa
push
xor
inc
sbb
push
mov
and
mov
inc
ljmp
xchg
aam
into
dec
mov
cli
pop
pop
mov
or
std
pop
loop
test
cmpsb
xchg
add
icebp
test
xchg
ret
cmpsb
cmp
jae
xchg
sbb
jp
ljmp
lcall
inc
fs
inc
popf
mov
je
cmp
sub
mov
cmp
out
fistl
ss
in
call
cltd
inc
iret
push
sub
add
xchg
mov
mov
pop
loope
inc
dec
pop
xor
pusha
xchg
cwtl
dec
lcall
lods
outsb
imul
icebp
loop
out
or
out
mov
imulb
movsb
push
lea
es
leave
hlt
rcrl
sbb
pop
mov
lret
repz
adc
jmp
inc
int
rclb
and
arpl
xchg
outsb
icebp
shll
int
pop
in
arpl
mov
into
add
shll
std
mov
pop
sub
xlat
movsb
gs
mull
xlat
cmpb
out
jbe
adc
and
mov
and
xchg
inc
mov
fmulp
inc
das
mul
mov
jo
mov
xchg
mov
icebp
dec
repz
jg
dec
scas
lret
add
mov
and
mov
enter
movsb
mov
gs
push
pop
cmp
aaa
xchg
cld
loop
lret
xchg
add
ret
and
mov
div
out
mov
lock
jnp
insb
jmp
fsubrl
lds
test
ja
xor
in
and
shl
xchg
jne
outsw
iret
pushl
scas
jmp
mov
ficompl
and
push
push
inc
aaa
mov
ja
sub
pop
cmpsl
sbb
shl
shlb
je
stos
pop
mov
cld
mov
sub
inc
dec
mov
aas
push
mov
jecxz
pop
xchg
xchg
dec
fcoml
les
inc
sbb
xchg
or
ror
xorl
inc
pop
push
dec
jle
movsb
adc
movsl
gs
cmp
jmp
int
push
aad
mov
jg
xor
lods
iret
out
movsb
and
jg
aaa
jne
or
lods
lahf
mov
pop
pop
adc
pusha
adc
es
es
ljmp
push
pop
enterw
and
into
imul
ffree
ljmp
cmpsb
sahf
mov
out
mov
push
rorb
cmc
cmp
push
mov
sbb
xchg
jmp
sub
push
mov
rclb
pop
lea
outsl
dec
ljmp
sbb
or
clc
arpl
xlat
test
nop
push
loopne
xchg
divl
pmaxub
testl
lea
je
push
pusha
and
push
and
jmp
push
je
mov
sti
xchg
lcall
pop
clc
mov
xchg
push
or
fnstcw
in
or
lods
and
push
jns
ljmp
in
movsl
inc
lahf
jg
int3
mov
adc
dec
cmp
add
pop
sahf
sub
sub
fs
fists
inc
pop
cli
repz
nop
jbe
inc
cld
xlat
je
mov
lea
push
adc
pop
adc
jecxz
jnp
jnp
cmp
cmp
das
lock
repnz
push
xchg
out
cltd
pop
iret
jp
xlat
ror
dec
jne
rcl
sti
jbe
fcoml
dec
xchg
jae
icebp
push
fs
cmp
fldl
cld
imul
or
mov
hlt
pop
pushf
data16
fs
xor
popf
imul
in
jno
adc
and
or
es
pop
xor
enter
call
les
mov
jne
mov
mov
mov
mov
jae
aaa
std
mov
movsl
rolb
push
sub
pop
jge
mov
xchg
pop
add
cli
sbb
xchg
mov
test
push
add
loopne
pop
lret
or
jmp
mov
or
popf
jo
adc
repz
aaa
loope
dec
or
sub
pop
adc
mov
test
and
js
xor
bound
rcll
dec
mov
lret
jbe
pusha
mov
in
ret
xor
mov
xor
adc
sbb
push
pop
aaa
sbbb
popa
orb
pop
in
cs
js
add
flds
test
leave
aas
adc
andb
jle
cmp
int3
fistps
mov
xchg
pop
mov
pop
jge
sub
mov
daa
sub
xchg
decl
mov
int
mov
dec
mov
mov
add
and
add
mov
fidivl
inc
or
test
dec
xchg
mov
pop
sbb
les
sbb
test
test
or
insl
stc
sbb
dec
xor
adc
sub
mov
mov
sahf
pop
aam
mov
push
imul
enter
cmp
jle
or
lock
mov
push
jge
jle
mov
fwait
sbb
rolb
jg
lds
dec
sahf
fisubl
lods
and
adc
pop
loopne
sbb
aaa
fiadds
add
cmpsl
or
add
mov
pop
dec
movsl
ror
mov
outsl
stos
mov
sub
fnstcw
jmp
call
push
repnz
aaa
ret
subb
addr16
addl
inc
repnz
mov
jl
xchg
push
jae
in
cmp
sahf
xchg
cli
push
popa
cltd
xchg
aaa
popf
and
pop
cld
sub
fisubrs
scas
and
cwtl
ss
sub
jle
add
jmp
push
sub
or
fisubrl
push
xchg
mov
in
mov
xchg
sub
aaa
push
jb
cmpsl
jge
js
jno
shll
jg
sub
add
pop
mov
xor
dec
pop
mov
mov
stos
imul
mov
and
mov
mov
pop
pusha
cmpb
imul
push
scas
xchg
pop
mov
adc
jae
adc
call
pop
pop
xor
or
push
or
jge
in
push
jae
lods
incl
cmp
psubd
test
ja
push
insl
leave
fcoms
scas
jb
xor
lods
int3
jns
or
mov
cmp
filds
in
arpl
stos
outsl
insb
cmc
jb
int3
stc
jmp
sbb
inc
lcall
fwait
jns
cmp
cld
sbb
mov
or
das
adc
sub
xchg
aad
inc
les
inc
out
pop
mov
jmp
enter
jp
fmul
ja
loop
imul
mov
xchg
fwait
pop
lods
jo
scas
mov
ret
fisubrl
mov
and
sbb
in
and
in
cmp
js
pop
movsl
and
xchg
inc
push
add
xchg
fcompl
mov
adc
add
push
test
pop
test
sbb
jl
sahf
leave
cld
jne
das
sub
pop
jo
sbb
push
in
pop
jl
sbb
lods
jge
jge
iret
mov
clc
mov
das
dec
pusha
aaa
outsb
lods
fisubs
mov
pop
lods
bound
mov
int
add
pop
xlat
lcall
cs
inc
ret
xchg
inc
mov
sbb
sbb
and
es
mov
aam
push
int
inc
call
sbb
adc
pushl
mov
and
dec
mov
sbb
xchg
ja
inc
insl
in
clc
sarb
xor
fldl
jmp
repnz
pop
mov
cmp
aam
xchg
push
fdivs
dec
mov
mov
adc
or
bound
dec
mov
xlat
adc
mov
or
in
cmp
test
sti
pop
cmc
jecxz
in
add
mov
mov
and
sbb
jp
sbb
out
lret
mov
shr
loope
mov
arpl
pop
mull
out
stc
ficoml
adc
out
push
sbb
mov
fsubl
out
xor
sahf
mov
jmp
jge
fmull
inc
sub
ja
dec
mov
insl
xchg
iret
lret
call
sub
arpl
sti
mov
push
leave
enter
xor
fbstp
ret
xchg
jg
mov
push
arpl
lcall
xchg
fwait
xchg
jb
je
popl
pop
fildll
imul
or
cli
stos
out
popa
and
enter
popf
cmpsb
aas
out
xchg
lock
shlb
xor
and
insl
clc
lret
les
inc
sbb
ljmp
lea
xor
inc
inc
psadbw
dec
push
mov
inc
adc
mov
jne
ds
jle
adc
mov
dec
sub
cli
imul
insl
aaa
fwait
inc
sbb
cltd
mov
cmpl
fnstcw
adc
xor
in
mov
mov
jnp
test
push
lds
lcall
jecxz
lods
pop
cmc
mov
lds
sub
jecxz
cmpsb
or
out
xchg
pusha
out
xor
imul
std
mov
loopne
nop
push
jne
xor
dec
mov
pop
mov
pslld
cmpsb
hlt
out
jecxz
xchg
or
fsubs
push
rcr
hlt
dec
mov
mov
jo
outsl
das
and
or
xor
mov
jl
mov
mov
cmp
mov
jge
pop
xchg
js
loope
lcall
sub
pop
xor
loope
fs
add
dec
and
bound
push
xor
test
jo
popa
jb
sbb
mov
movsb
add
decb
inc
mov
jo
mov
xor
out
hlt
ss
shll
mov
out
popf
cltd
add
nop
mov
out
mov
mov
bound
fmuls
in
lret
ljmp
ret
in
jmp
mov
jno
pop
and
das
mov
movsb
xor
sub
inc
lcall
xchg
imul
push
pop
or
popl
sub
xchg
mov
rorl
sbb
push
dec
cmpsb
xor
inc
pop
popf
scas
addr16
inc
js
clc
fbstp
sbb
mov
pop
loopne
add
push
mov
dec
stos
or
jno
mov
mov
clc
out
ret
out
mov
mov
cli
push
jmp
lcall
or
insb
imul
lret
cwtl
out
in
push
imul
faddl
cmp
and
cmp
push
or
fs
xcrypt-ecb
cmpsl
lea
and
cmp
jl
testb
fdivl
mov
loope
mov
rclb
sarb
sub
xor
adc
mov
mov
or
lea
mov
mov
lods
inc
and
sbb
mov
mov
jno
or
fnstsw
jge
jl
jb
in
adc
arpl
adc
fnstenv
lods
jns
xor
mov
sub
cmp
pop
mov
pop
lret
aas
add
fisubrl
pop
pusha
push
xchg
push
cs
cmp
cmp
add
fidivl
cmpsl
fmulp
or
test
mov
cmp
fisubs
mov
icebp
push
bound
notb
push
cld
mov
je
addr16
popa
jmp
bswap
and
dec
lret
imul
out
inc
sti
sbb
or
icebp
push
in
xchg
push
push
mov
adc
imul
mov
pop
imul
xor
es
mov
ljmp
clc
add
stc
lea
les
or
adc
xchg
pop
stos
data16
cmc
mov
cli
pop
addb
mov
mov
cmove
mov
push
jmp
inc
rcl
popa
xchg
adc
mov
dec
mov
std
xor
adc
mov
ret
fimull
in
pop
jmp
mov
test
sar
xchg
mov
xchg
jg
adc
and
mov
pop
test
cld
loope
loope
clc
mov
popf
stos
add
int3
mov
insl
add
cmp
add
nop
les
adc
push
es
lods
xchg
es
pushf
push
fcomp
mov
push
pop
jo
das
mov
shlb
mov
std
int
pop
in
je
loopne
push
xchg
ljmp
xor
pop
cmpsb
mov
and
xchg
rcl
int
sbbb
popa
sbb
sahf
xchg
add
popf
sti
sbb
mov
dec
adc
stos
dec
ret
or
push
mov
lret
fisttps
pop
popa
mov
out
movsb
jo
sbb
mov
add
mov
push
pop
hlt
mov
and
and
cwtl
repnz
aam
pop
daa
das
insl
pop
inc
or
dec
sub
fldcw
xchg
dec
lea
outsl
cld
fildll
roll
jns
lret
mov
sub
mov
jbe
repz
jnp
jo
pushl
adc
mull
add
fs
and
fisubs
sbb
jne
dec
rcrl
adc
cmp
xchg
cmp
jmp
shlb
adc
pmaxub
loop
daa
jge
hlt
cmp
sarl
and
and
mov
ret
nop
stos
push
and
and
or
mov
lret
lds
and
pop
sahf
dec
cli
out
fwait
ljmp
addr16
stc
test
or
push
mov
add
push
mov
in
mov
dec
out
sub
leave
push
in
test
fistps
mov
pop
or
mov
addr16
das
test
testb
push
insl
add
outsb
xor
fneni(8087
jecxz
add
ds
lret
addr16
int
dec
cltd
sti
xchg
cmp
ret
dec
push
or
jmp
and
aad
jmp
or
js
push
sarl
scas
and
rorl
imul
lcall
fcompl
xchg
sbb
mov
iret
mov
add
test
push
xor
mov
cmp
dec
loopne
lea
or
addr16
ja
cs
loopne
fnstcw
stc
call
outsl
pop
mov
fadd
mov
scas
cmpsl
icebp
or
int3
or
ret
mov
adc
into
push
mov
ss
sbbl
xchg
sub
aad
psubd
jle
pop
loope
mov
sbb
adc
outsb
xchg
roll
pop
std
leave
dec
sub
mov
pusha
xor
jp
pop
mov
xlat
jp
dec
dec
add
xor
scas
loopne
push
les
test
add
lock
jns
or
xor
mov
or
sbb
pop
cmp
dec
mov
popa
imul
sub
out
pop
adc
cmp
icebp
clc
shrb
mov
sub
fistps
scas
js
and
or
xchg
sbb
ljmp
pop
gs
sub
jle
sbb
sbb
sub
test
sarb
sbb
jp
outsb
mov
test
jle
enter
rcrb
mov
jmp
pop
pop
inc
adc
mov
jns
ds
es
cwtl
andb
pop
psubw
std
mov
js
add
imul
addr16
inc
inc
cmp
dec
mov
jbe
push
vcmpsd
cmp
inc
stos
and
clc
mov
hlt
add
int
out
cltd
sub
adc
test
jg
dec
fidivs
pop
add
insl
daa
xchg
dec
outsl
pop
push
pop
dec
stos
inc
out
call
xor
add
and
sub
or
xchg
lret
lods
lods
push
je
xchg
or
test
jmp
flds
mov
js
fsubs
hlt
test
pusha
mov
jmp
and
subl
out
fnstcw
rcl
insl
push
xor
test
aaa
orl
ficoml
outsb
jecxz
mov
mov
jns
test
outsl
jo
xchg
xchg
jo
sarb
vmwrite
push
cmpsl
pop
xor
popl
or
push
out
rclb
dec
into
mov
xchg
dec
ficoms
and
rcl
loop
ds
sub
cld
loope
jp
insl
mov
adc
cmp
cmp
addl
or
fs
jl
xlat
push
xor
dec
out
clc
cmp
sub
cmp
add
mov
scas
push
inc
sbb
push
add
xchg
in
jb
cli
or
cmpl
addl
mov
or
ror
dec
into
jge
out
push
pop
repnz
mul
add
ret
xor
dec
lret
scas
lods
popf
inc
pop
pop
jo
shll
stos
movsb
mov
hlt
aas
cltd
cmc
sbb
outsl
push
adc
push
or
in
or
and
lret
in
push
lods
cmp
jne
or
in
push
and
inc
subb
leave
icebp
sub
fcmovnbe
ret
or
push
push
pop
push
or
pop
out
jmp
das
test
jo
push
mov
jge
enter
pop
mov
jl
pushf
pop
mov
xor
adcb
dec
xchg
rcrl
imulb
rorl
xor
cli
xlat
add
mov
test
fistpll
dec
ljmp
xchg
sbb
jp
mov
lret
dec
sbb
pop
loop
pop
call
fistl
jo
arpl
pusha
inc
mov
ret
out
lret
sub
xchg
popa
shrb
push
imul
bound
jns
sbb
dec
icebp
pusha
jge
mov
orb
call
daa
pop
outsw
inc
daa
cmp
xor
mov
movsb
jge
cli
loope
popf
sub
jge
jg
ret
mov
dec
inc
dec
pop
iret
aas
sub
sub
aam
dec
shll
icebp
stos
xor
adc
adcl
push
jle
decb
sub
lods
push
sub
add
out
push
pop
mov
inc
lock
and
rorl
dec
shrl
jg
xchg
and
mov
add
ret
xchg
pushf
push
dec
sbb
push
clc
or
jle
add
cmp
cmc
pop
xor
push
dec
sbb
push
xchg
lcall
clc
dec
mov
dec
iret
or
push
push
and
cmp
aad
push
cli
or
mov
mov
adc
mov
and
cmp
push
cmp
pop
mov
dec
push
in
dec
lock
sub
mov
rolb
mov
sbb
out
jle
lock
mov
out
or
mov
or
pop
es
pop
sbb
call
xchg
lahf
jl
xchg
mov
sbb
add
es
dec
pusha
nop
inc
mov
push
add
dec
mov
leave
and
mov
aam
cmpsw
pop
leave
mov
mov
inc
js
movsl
arpl
test
loope
push
dec
adc
iret
ljmp
data16
mov
jbe
cmpsb
cltd
mov
pop
mov
jns
mov
adc
sti
in
jecxz
mov
aaa
dec
gs
jle
gs
adc
adcb
test
sahf
outsb
mov
xchg
cwtl
or
insl
iret
push
negl
push
add
xchg
mov
insb
roll
add
test
pop
jno
push
fs
xbegin
jmp
data16
cmp
in
push
fs
pop
dec
rcrb
std
lret
push
lret
mov
inc
sub
lds
mov
hlt
add
sbb
lret
xor
jge
das
pushf
movsb
scas
sbb
add
rorb
stc
cmpsb
cs
sahf
push
dec
data16
movb
lahf
jp
pusha
add
adc
push
sub
cmpsb
xrelease
mov
and
ss
jb
inc
test
cli
and
jns
mov
scas
or
nop
stos
push
dec
lret
mov
ds
and
inc
inc
xor
fistpl
push
mov
push
data16
lcall
fcmovne
or
sahf
ja
inc
push
jb
xor
in
inc
notb
pop
or
inc
mov
mov
test
cmp
cmp
xchg
sub
push
shll
and
insb
test
inc
jmp
inc
cmpsb
es
pop
mov
bound
scas
push
stos
jae
xchg
jno
push
jp
in
xchg
push
jb
xchg
cmpsb
jmp
mov
das
sbb
shr
lret
push
fimuls
push
call
xchg
mov
adc
jo
jl
aaa
movsb
mov
jp
inc
or
movsb
cli
mov
popf
push
loopne
rorl
in
rorl
mov
mov
or
and
push
xchg
fwait
mov
mov
mov
imul
push
and
dec
xlat
fists
fistpl
sbb
or
push
jb
mov
push
pop
jmp
loope
pop
repnz
in
adc
mov
pop
push
or
testb
movsl
bound
sbb
xchg
mov
inc
and
ror
xor
fwait
test
mov
sub
outsl
cmp
test
outsl
push
jmp
mov
ss
and
pop
mov
pop
cmp
xchg
incl
mov
nop
int3
mov
or
adc
xchg
sub
push
enter
lods
out
inc
jo
cmp
xor
es
push
mov
push
mov
ret
repz
pop
add
cmp
pushf
adcl
mov
sub
xchg
rol
dec
in
aas
adc
xchg
pop
sbb
ror
mov
push
mov
cwtl
aam
pop
jnp
cwtl
or
iret
push
outsl
push
ljmp
mov
mov
ret
lock
dec
jg
fistl
lret
lock
mov
xor
leave
cmp
popf
in
aad
out
mov
hlt
pop
xor
ret
mov
bound
adc
adc
scas
inc
adc
nop
loop
aad
imul
ret
pop
jno
pop
imul
or
loopne
sub
out
adc
mov
in
or
in
push
xlat
ja
fwait
mov
loop
add
sti
icebp
xchg
hlt
push
sbb
inc
add
mov
sarb
in
xchg
pushf
jl
or
jnp
mov
popa
jecxz
or
jo
data16
insb
pop
pop
jns
bound
adc
test
out
test
mov
dec
push
lods
sbb
addr16
fidivrl
dec
mov
lea
cltd
fs
jp
enter
lret
aas
aam
cli
test
mov
sbb
xchg
arpl
sub
add
and
std
icebp
js
mov
lock
es
mov
je
incl
icebp
sahf
push
das
jno
mov
pusha
sbb
xor
mov
fsubl
rcrb
mov
cmp
push
xchg
adc
pop
adc
or
imul
inc
aam
mov
lahf
leave
test
mov
loop
jns
je
mov
jle
loop
imul
or
mov
bound
repz
orl
mov
push
or
fcomp
push
push
stc
pop
xor
cld
enter
inc
jo
adc
cmp
fistpll
mov
clc
les
test
and
add
and
xlat
pop
sbb
dec
push
in
jb
jg
leave
push
or
cmp
ja
sub
sub
or
push
cmpsl
cmp
dec
xor
sbb
lea
popl
andl
mov
mov
test
mov
fcom
sbb
mov
jg
arpl
cmpsl
or
jl
and
pusha
repnz
aad
or
aas
mov
xor
pop
or
outsl
ja
imul
cmpsl
or
mov
xchg
push
cmc
pop
xor
cmpsb
jle
bound
daa
lods
jl
cmp
ss
adc
push
pop
movsl
fldt
and
sti
dec
mov
mov
pop
pop
les
lea
jnp
fists
ffree
jmp
pop
daa
andb
add
cmp
xchg
out
icebp
push
mov
or
imul
ss
push
push
mov
orl
dec
and
je
adc
mov
jmp
mov
inc
or
gs
stc
stos
loop
push
cltd
add
sbb
push
iret
xor
scas
cmp
inc
or
std
xor
sub
sbb
add
or
mov
mov
add
push
push
sti
and
in
scas
arpl
jl
es
ret
loop
or
sahf
scas
int
and
pop
jge
movsl
push
sbb
dec
mov
stos
sbb
dec
fbstp
call
xchg
out
xor
xor
shl
push
ljmp
ja
sbb
mov
adc
cmpsb
sub
ret
and
into
jb
xor
leave
mov
bound
out
cmp
int3
mov
aaa
or
cmpsb
jge
test
outsl
fldcw
popa
pop
mov
sub
push
call
insb
in
pop
scas
scas
inc
or
adcl
pop
andl
hlt
ret
es
pop
dec
ja
jae
stc
pop
jne
mov
insl
inc
popa
inc
mov
dec
xchg
xor
movsb
call
inc
jle
mov
push
ds
ja
addr16
nop
jecxz
mov
mov
ficoml
push
adc
add
testl
push
aam
lods
sub
icebp
xor
and
xor
rorl
negl
push
pusha
addr16
lea
out
adc
icebp
push
inc
les
lods
imul
pop
je
jle
sarb
xchg
stos
je
js
test
lods
cwtl
jne
xor
inc
inc
cmp
and
xor
sbb
add
pop
cmp
or
hlt
jae
imul
xor
outsb
movsl
das
lods
dec
ret
jae
xchg
imul
mov
leave
jb
inc
aaa
fmul
mov
lret
dec
shr
sbb
sub
sahf
jecxz
xlat
push
or
sbb
stos
push
jae
jbe
pop
scas
or
clc
cltd
repz
in
popf
leave
fisubrl
aad
scas
mov
outsl
mov
lret
addl
xchg
xchg
push
mov
test
jae
adc
inc
mov
mov
sbb
mov
stc
fidivrl
cmpsl
cmp
or
js
cld
rolb
cwtl
ret
xchg
mov
hlt
pusha
fldcw
sti
dec
mov
cltd
cld
pop
sbb
in
loope
movsl
sbb
and
xchg
push
int
xchg
lds
fidivl
add
add
lret
xor
inc
pushf
cmp
scas
inc
nop
ds
sub
mov
popw
cmc
pusha
sbb
jecxz
inc
push
leave
lods
testb
out
dec
cmp
add
enter
pop
jbe
loop
test
in
movsl
ret
gs
fistpll
adc
adc
xor
or
inc
add
mov
push
mov
popa
cltd
popa
pop
dec
sbb
jbe
mov
hlt
cmp
daa
lret
cmp
cmpsb
ja
mov
dec
xchg
mov
outsl
add
pop
int
scas
fistpl
out
lods
cmp
addb
mov
inc
xchg
xor
xchg
add
push
mov
test
push
and
lock
xor
xchg
cwtl
inc
cmp
sbb
or
sti
cmpsb
inc
shlb
out
push
imul
pop
and
sub
adc
pop
popa
push
xchg
push
xchg
pop
movsl
jns
mov
sub
pop
call
into
pop
lret
stos
js
movsb
pop
cld
ss
inc
fisubrs
mov
pop
or
jmp
es
sbb
push
jecxz
stc
mov
in
std
xchg
imul
xchg
fabs
lahf
xor
int3
mov
ljmp
xchg
fcmove
adc
or
mov
mov
xor
nop
fadds
adc
lcall
inc
cwtl
xchg
mov
std
cwtl
testb
sbb
and
push
push
sarb
adc
xlat
mov
mov
scas
std
addr16
mov
mov
cmp
inc
adc
imul
rorl
dec
std
insl
outsl
cmpsl
das
scas
pop
mov
fidivrl
loope
jle
mov
mov
push
sti
das
jb
cmp
cli
push
pop
mov
mov
sbb
jne
das
adc
dec
and
in
mov
repz
adc
dec
mov
nop
enter
clc
xor
lret
xor
icebp
repz
add
push
xchg
test
fsts
bound
jp
imul
push
mov
leave
mov
aam
adc
cmp
and
dec
cld
loop
testl
cmpsl
mov
cmp
sub
pop
movsb
ss
rcll
mov
mov
or
sbb
mov
add
leave
cli
inc
push
mov
stos
pushl
arpl
add
int
mov
dec
insl
imul
mov
dec
cmp
mov
outsl
imul
dec
pop
das
cltd
adc
mov
leave
pop
cmp
dec
mov
cmp
push
sbb
aad
push
and
pop
adc
imul
pushf
fisubrl
dec
jbe
cltd
clc
push
inc
add
mov
out
test
pop
push
push
add
mov
xor
out
ret
add
shrl
mov
add
mov
lock
in
sbb
fdivrs
fistl
push
inc
cmp
arpl
cmc
imul
shrb
fs
jp
cmpsb
mov
mov
fwait
jle
xchg
mov
and
inc
add
adc
lcall
add
pop
negl
je
out
popa
mov
cli
popa
out
ret
pop
movsl
pop
bound
loop
cmp
test
rorl
jne
lods
and
pop
push
test
mov
mov
lds
cmp
in
cltd
mov
push
lds
out
rol
test
fwait
clc
push
fstpl
dec
pop
mov
outsb
aam
cmpsb
dec
movsl
mov
pop
push
stos
loop
xor
cmp
scas
pushf
stc
bound
lock
add
shl
mov
fimuls
repnz
or
cmp
testb
es
fdivrl
dec
lods
aad
sti
mov
js
push
out
in
cmp
cwtl
inc
push
and
daa
pop
mov
int
cmp
lods
stos
pop
sbb
ret
aad
scas
jae
push
add
jae
pop
cmc
jo
lods
negb
xor
mov
inc
mov
int
fidivrs
cmp
mov
scas
sub
push
movsb
xchg
gs
lcall
stos
ljmp
mov
cmpxchg
and
dec
pop
out
repnz
ffreep
cltd
addr16
mov
mov
icebp
push
adc
add
mov
stos
lds
es
and
int
xor
push
push
sbb
je
jge
dec
test
bound
shr
sbb
jge
inc
mov
outsb
mov
mov
jne
sbb
xchg
sub
mov
xorb
aad
lea
inc
pop
and
sub
sub
scas
in
xchg
mov
sub
mov
cli
and
andb
adc
fprem
je
jg
pop
sub
shll
jae
and
sub
ret
aam
mov
jmp
add
mov
pop
out
push
inc
nop
daa
and
andb
insb
in
pusha
rcrb
into
and
lret
xor
xor
cmp
xchg
clc
data16
mov
or
bound
push
mov
sub
hlt
out
dec
and
xchg
fstl
sub
dec
and
inc
das
xor
loope
xchg
hlt
jne
mov
ret
pop
cli
mov
rorl
mov
ja
mov
lret
mov
and
push
xor
leave
test
jbe
sbb
inc
xchg
lret
or
ret
lods
cmp
movl
lock
cmp
gs
cmp
in
xor
mov
pushf
sbb
lcall
xchg
mov
ret
sub
mov
push
mov
cli
aas
fidivrs
shlb
dec
inc
push
or
pop
fsubl
xchg
lock
std
inc
dec
pop
das
sub
pop
pop
rorb
or
mov
sub
cmp
js
loopne
mov
cmp
daa
sahf
pop
mov
frstor
fstp
mov
in
ret
inc
outsl
faddl
push
dec
stc
add
clc
into
ja
rcrl
jge
adcl
jg
jne
xor
aas
leave
pop
jl
fwait
and
loope
xchg
cld
outsl
pop
enter
add
out
daa
in
adc
dec
push
ss
lods
cvtdq2ps
test
xchg
aam
rorb
mov
jge
fsubl
into
push
notl
push
test
lret
push
je
mov
dec
stos
cmp
xor
sub
fimuls
or
clc
xchg
mov
mov
lahf
mov
cwtl
mov
rcrl
push
fidivs
xchg
fists
daa
aas
adc
outsb
pop
ret
movsb
or
pop
adc
imulb
dec
ret
adc
adc
ret
inc
pushf
insb
xchg
xor
pop
fidivs
mov
sub
jle
cltd
lea
or
pop
stc
rcrb
push
subl
inc
aas
les
inc
jge
dec
jno
push
sub
mov
jns
shll
inc
dec
call
and
jne
or
inc
sahf
lods
sarl
popf
or
repz
xor
or
out
mov
xor
mov
mov
das
or
mov
sub
push
or
add
jg
stos
jnp
or
cmp
sub
jno
test
jmp
mov
adc
loopne
mov
jae
mov
adc
jecxz
jno
dec
sub
xchg
pop
sahf
jg
cmpsb
std
orb
gs
push
sub
and
inc
sbb
ja
cmp
adc
dec
insl
jno
inc
inc
popl
pushfw
mov
dec
call
test
sbb
xchg
inc
and
inc
sub
shrl
ficompl
xor
and
mov
mov
or
inc
test
sbb
mov
dec
adc
and
xor
hlt
dec
packsswb
push
shrb
je
lock
cmp
mov
jbe
sub
loope
jmp
repz
int3
sarl
fildll
dec
mov
mov
adc
jl
cltd
insb
in
and
cld
add
xor
ret
push
lods
cmpsl
divl
vpsubusw
imul
lret
add
jae
jle
cmc
xor
cmp
call
insl
cmp
enter
hlt
sbb
aas
mov
outsl
jnp
cmp
mov
popa
add
add
pop
cmpsb
mov
xor
mov
sub
push
pusha
cmpsl
movsl
mov
fxch
push
in
cmp
mov
or
hlt
lea
scas
fs
mov
aad
repnz
test
pop
out
es
fdivl
sub
xor
adc
add
or
comiss
jne
inc
or
outsb
push
test
sbb
and
push
cmpsl
cmpsb
pop
movsb
cmp
pop
mov
sbb
rorb
sahf
jne
mov
lea
xlat
xlat
outsb
addr16
xlat
mov
idivb
lea
xor
je
stos
test
test
shll
icebp
or
outsl
data16
subl
mov
test
ficomps
in
add
ss
jnp
xor
mov
pop
and
xchg
data16
dec
fisttpll
adc
jp
jbe
jp
mov
lcall
add
in
mov
andl
cmpsl
lock
ret
into
and
iret
jmp
jmp
push
in
ja
in
outsl
cwtl
cmp
jae
xchg
dec
arpl
push
inc
mov
lret
push
popa
js
or
inc
out
and
fstps
pop
sbb
lds
lock
movsl
aaa
sbb
sbb
and
shl
scas
cs
inc
jecxz
pushf
aad
dec
cli
and
dec
enter
pop
in
mov
cld
mov
and
or
and
mov
jmp
insl
xchg
cld
jecxz
jl
cmp
lods
sbb
stos
mov
add
lds
and
pop
jae
mov
fmuls
jne
inc
xor
jmp
rolb
repnz
push
or
enter
cmp
inc
mov
adc
int3
adc
imul
pusha
jg
and
push
fwait
sbb
arpl
ss
hlt
shlb
mov
jecxz
stos
notb
imul
aad
adc
shrb
mov
pop
and
int3
negl
cmp
jmp
movsb
jb
cmpsl
mov
loope
push
or
fstl
and
xchg
xchg
stc
iret
push
sbb
enter
clc
push
jae
mov
pop
cmp
movsb
repz
dec
icebp
out
fimuls
fistl
add
rcr
aam
pop
sbb
mov
sbb
sub
dec
orb
lret
arpl
jg
ret
xlat
push
inc
arpl
mov
xor
jle
inc
movsb
xchg
adc
call
ret
cmp
mov
nop
mov
cwtl
rcr
push
pop
cmpsl
js
jae,pn
icebp
push
jns
sbb
adc
fmuls
popf
mulb
jnp
inc
push
pushf
pop
mov
mov
in
lcall
inc
int3
mov
daa
push
jne
dec
into
in
mov
xchg
cltd
pusha
in
cmp
mov
jne
xlat
test
call
adc
cmpsl
sub
sbb
loopew
jnp
js
jle
in
add
or
mov
pop
xchg
mov
push
mov
mov
daa
mov
shr
mov
fists
jg
loopne
scas
jp
das
pop
mov
or
add
xor
ret
lods
int3
jnp
cltd
cmp
shrb
jp
add
sub
mov
gs
adc
loop
loop
into
xchg
mov
cmpsl
xchg
jnp
adc
shll
mov
pop
ss
cmpsb
jmp
orl
add
clc
movsb
or
xchg
sbb
inc
add
shl
aad
std
scas
pop
cmp
movb
leave
imul
dec
es
lcall
arpl
sub
dec
sarl
mov
pop
roll
dec
jmp
pop
fists
flds
std
pushf
mov
inc
inc
bound
pop
mov
adc
icebp
mov
fwait
mov
outsl
insl
xor
ret
mov
add
adc
pop
mov
flds
lret
out
adc
cmc
push
or
mov
aam
push
lods
xor
cmp
iret
sti
jl
cmpsb
mov
in
ficomps
out
repnz
cmp
es
jecxz
dec
mov
jns
dec
mov
adc
in
clc
cmp
ret
sub
in
loop
xor
outsb
fnstenv
pop
adc
inc
mov
cwtl
inc
pop
push
rep
dec
dec
sbb
fistl
mov
scas
pop
shrl
shrb
std
js
pop
mov
push
les
mov
scas
xchg
out
lahf
dec
xchg
fidivl
testl
out
je
push
pop
cmc
add
test
pop
inc
repnz
dec
inc
or
hlt
sahf
dec
push
cmp
push
imulb
cmpsl
iret
sub
adc
ds
outsl
cmpsl
fwait
push
aam
jo
jae
jg
fisubs
push
sbb
pop
cld
ds
or
loope
sbb
jle
cmp
stos
sti
outsl
addl
scas
xchg
mov
mov
unpckhps
adc
inc
ret
enter
out
xchg
movsl
mov
ret
cs
jae
popa
lcall
and
adc
decb
sbb
lret
xchg
fildl
mov
cmovb
and
inc
xchg
pop
xor
sub
gs
shrb
mov
cmpsl
out
mov
xlat
dec
shll
jns
loop
sbb
mov
add
fcomps
and
jbe
inc
push
out
mov
mov
xchg
pop
shlb
das
bound
pushf
lods
cltd
insb
pop
pop
mov
inc
pusha
or
negb
mov
leave
sti
or
out
dec
push
cmc
outsl
dec
push
fwait
mov
adc
cld
mov
shl
aam
inc
pop
in
cs
sarl
loop
in
xlat
lret
cmp
ja
adc
pop
sub
dec
jne
call
mov
test
lods
je
test
divl
cmc
jle
out
scas
inc
inc
xchg
cltd
xor
jnp
insl
cmp
push
ljmp
xor
loope
mov
push
rol
add
lret
push
test
mov
mov
cmp
fisubrl
pop
sub
loopne
out
loope
scas
xor
fnstcw
loop
fimull
out
sub
fists
divl
xor
iret
or
stos
push
loopne
loope
add
lret
jl
imul
inc
movsl
push
movsb
jl
mov
pushl
mov
jmp
mov
ret
sbb
sahf
push
and
sbb
icebp
sub
add
inc
mov
mov
fcmovnb
adc
out
or
pop
xor
lret
push
add
mov
and
and
pop
cwtl
xchg
jecxz
and
divl
ss
mov
sbb
mov
mov
in
dec
add
cld
and
cmpsl
les
jb
addr16
sub
iret
mov
lcall
jge
sub
aad
imulb
inc
leave
rorl
push
and
inc
mov
mov
lret
mov
enter
roll
fwait
jo
popa
add
pop
arpl
cwtl
push
mov
inc
xchg
jne
or
mov
xchg
dec
sbb
jo
pop
ror
cmp
cwtl
int
data16
mov
push
cmp
pop
xchg
nop
jnp
and
push
dec
xlat
sub
push
sub
mov
ret
xchg
mov
xlat
fiadds
add
and
cmc
xchg
iret
xchg
adc
out
adc
cmp
sub
push
pop
sbb
xor
jg
aaa
and
inc
push
enter
ja
add
mov
loop
jae
ja
cmp
jle
cmpsl
mov
mov
pop
sub
stos
jge
sbb
pushf
inc
popa
faddl
sahf
cmp
mov
pop
test
mov
push
test
inc
push
fsts
xchg
loopne
jp
mov
mov
dec
mov
fiaddl
lret
sub
xor
jno
subb
dec
mov
enter
jne
xor
dec
push
add
mov
into
repz
je
and
inc
sbb
or
filds
mov
and
pop
gs
dec
adc
adc
mov
xchg
inc
adc
filds
adc
push
xchg
inc
ds
push
dec
bound
sti
aad
jmp
mov
std
sti
in
loop
shll
les
loope
push
in
adc
add
fxch
stos
out
jbe,pt
in
out
mov
mov
shr
scas
xchg
and
adc
xor
popf
imul
jne
jo
inc
dec
mov
outsb
ds
pop
in
xchg
js
stc
movsb
mov
mov
dec
xlat
mov
cltd
inc
mov
popf
aam
jg
cmpsl
pop
xlat
cwtl
mov
sub
iret
xlat
test
insl
push
ss
xchg
cmpsb
arpl
stos
clc
es
inc
int
test
addr16
and
out
xchg
xchg
sub
cmp
xchg
cmc
pop
aam
add
daa
push
jnp
cmpsb
mov
fnstcw
inc
xchg
rcrl
cmp
inc
clc
aad
sub
and
mov
or
add
inc
les
mov
cmp
arpl
subl
sub
aas
dec
jne
js
jp
jo
lea
mov
loop
or
push
addr16
fdivl
popa
gs
and
test
divl
sahf
sbb
mov
ret
fabs
or
pop
test
in
mov
stc
scas
testb
js
cmp
sarl
add
inc
push
leave
mov
mov
push
data16
movsb
fsts
and
push
sbb
addr16
insl
jmp
mov
mov
mov
inc
jno
and
push
jmp
ret
sub
pop
jns
test
sbb
ss
push
fbstp
roll
dec
jne
mov
cltd
dec
movsl
adc
gs
movsb
pop
sti
or
pop
mov
pushf
int3
pop
mov
cmc
mov
sbb
mov
jecxz
and
sub
push
or
stos
std
jb
mov
sahf
sub
pushf
div
xchg
xor
sbb
les
inc
js
mov
jbe
cld
iret
cwtl
nop
fwait
push
mov
jbe
jbe
pop
shl
push
cmp
ljmp
mov
rcrb
mov
and
jge
push
shll
je
and
dec
lret
xchg
jp
out
push
jb
int
jno
ret
jb
arpl
arpl
cltd
out
andb
das
cmpsl
imul
int3
adc
sub
jmp
loopne
push
pop
pop
loopnew
xchg
repz
or
loope
adc
adc
aad
pop
rorl
les
popl
jo
aam
mov
cmp
popf
push
jge
dec
push
lahf
jbe
fdivrl
jae
add
ljmp
in
cli
mov
jp
js
in
lods
mov
ror
jns
dec
movsl
xchg
test
sbb
dec
cli
cli
add
lods
decl
cli
mov
inc
les
sub
jae
cmp
mov
push
fsubrl
inc
jle,pt
dec
xchg
add
pop
out
test
mov
push
cmp
gs
push
and
int3
push
jb
push
pop
inc
daa
in
sub
jge
sbb
aaa
push
sub
insb
test
ljmp
xor
lret
in
add
lods
imul
repz
sarl
call
jmp
or
inc
sub
add
and
out
imul
and
popa
inc
mov
mov
mov
xor
adc
jnp
sub
shlb
xor
pop
jg
addr16
jns
inc
out
push
jmp
cmp
inc
push
cmp
fistl
xchg
cli
mov
xchg
mov
push
das
xchg
shlb
mov
outsl
xchg
scas
sub
outsb
add
stos
pop
push
xor
mov
inc
xchg
push
add
in
sub
and
ja
or
sub
xor
pop
xchg
xchg
pushl
fs
mov
pusha
dec
pop
or
jmp
rorb
xchg
aaa
inc
add
loope
lods
inc
xor
repz
lcall
push
xchg
add
xchg
imulb
sub
imul
daa
je
dec
ds
pusha
push
cli
insl
pop
sub
jb
cmp
mov
lea
or
ret
lcall
mov
pushf
adc
rcrb
xchg
dec
jns
lods
pop
jo
mov
clc
cmpsl
arpl
scas
imul
arpl
std
xchg
aad
out
outsl
pop
lret
mov
sub
mov
aad
or
cmpsb
and
repnz
or
and
sub
ja
imul
mov
dec
xchg
push
sub
push
xor
inc
ss
mov
ds
cwtl
xor
clc
lds
mov
test
push
loope
inc
aaa
bound
mov
aad
js
gs
pushw
inc
stc
xchg
stos
jb
dec
push
or
aad
lock
cmp
inc
std
mov
ret
loope
in
test
dec
xor
xchg
fistps
outsl
popf
out
cmp
inc
pusha
xor
mov
xor
nop
es
ja
cmp
adc
xchg
sahf
pop
and
adc
and
adc
mov
lcall
out
sub
xor
push
xchg
mov
das
sahf
push
sub
mov
or
push
cmp
xorl
cmp
in
fcomps
push
or
ds
inc
lret
cmpsl
imul
cwtl
push
leave
inc
out
icebp
shlb
lcall
xlat
xchg
dec
xchg
xchg
add
ficoms
test
mov
fnstcw
sbb
cld
and
test
sbb
loopne
mov
cmp
push
jns
or
jno
test
jns
xchg
cli
jnp
inc
pop
dec
inc
lret
icebp
pop
outsb
cmp
mov
mov
or
dec
mov
inc
lcall
xchg
mov
movsl
cmc
sub
cmp
negb
xorb
xor
data16
sbb
fdivrs
mov
push
addl
test
test
test
adc
jne
cmp
fcoml
xchg
sbb
fcoml
pusha
mov
stos
xchg
mov
and
sahf
push
pop
icebp
mov
scas
testb
and
iret
sub
cmc
test
pop
cmc
ret
ret
or
fwait
leave
hlt
repz
or
xchg
inc
sbb
popa
int
imul
sbb
add
push
mov
or
addr16
and
xchg
fisttps
gs
pop
jae
dec
xor
sub
mov
out
cmp
xlat
enter
xorb
ret
sarb
adc
or
lock
xchg
fstpl
pop
and
sub
and
mov
aad
add
dec
jbe
add
jns
rcll
push
outsb
inc
inc
dec
adc
adc
push
mov
das
fcompl
aaa
xchg
or
and
movsb
jno
aad
divb
push
sbb
mov
mov
loope
lds
cmpsl
or
fistl
sub
lret
mov
adc
into
mov
mov
sub
dec
clc
outsb
in
mov
out
push
push
xor
pop
iret
mov
decb
cmp
addl
push
xor
aas
or
test
cmp
fwait
imul
mov
xor
and
je
mov
jl
jmp
cmc
fcmovbe
add
shll
dec
pop
mov
cs
mov
por
nop
cmp
cld
xor
filds
push
xchg
xor
pop
add
mov
fsubrl
dec
xor
mov
xor
xchg
insb
sarb
in
sbb
mov
mov
or
shr
out
enter
out
and
mov
jno
mov
popa
repnz
sar
jp
fistl
xlat
dec
and
sbb
jge
inc
pop
sub
test
inc
dec
add
mov
mov
sbb
mov
inc
cmp
movsb
std
adc
pop
test
add
loope
mov
sbb
stc
int
in
mov
mov
loop
mov
adc
sti
cmp
pop
popf
xchg
and
or
inc
mov
fnsave
js
dec
xor
adc
push
sbb
push
fidivrs
test
jge
jmp
mov
aas
push
clc
mov
divb
test
xchg
out
cmpsl
out
hlt
lcall
in
adc
loopne
mov
sti
push
and
fcoml
clc
mov
stc
adc
or
push
jae
movsl
ret
pop
dec
ffree
pop
jo
inc
push
fidivs
jns
loop
dec
jo
popf
frstor
mov
out
dec
lea
inc
mov
mov
lock
add
stc
shrb
flds
jb
inc
sbb
mov
mov
mov
dec
mov
adc
arpl
xor
xchg
paddusb
xor
xor
shrb
fs
jo
jle
je
in
cmp
sbb
or
es
mov
test
jmp
aad
xor
ffreep
push
mov
lods
ss
xor
cmc
inc
xchg
out
mulb
sbb
jecxz
sbb
loope
mov
adc
dec
fcoms
mov
int
dec
rorb
popa
cmpsl
out
pop
ss
sarb
out
bound
fiadds
inc
daa
ds
int3
mulb
dec
push
nop
repnz
rcl
add
inc
cltd
fstp
mov
into
mov
adc
adc
data16
and
push
push
sbb
jbe
jmp
cmp
js
pop
pop
cltd
fcmovnbe
sbb
movsl
add
cmc
aas
stc
xchg
lods
dec
jl
xor
mov
out
pop
out
fldenv
ss
xor
mov
sbbl
test
dec
lahf
outsl
sub
outsl
loop
stc
cmp
xchg
arpl
sbb
xor
or
push
pop
clc
xchg
daa
cltd
inc
ucomiss
inc
dec
cli
es
movsl
xchg
and
fs
dec
stos
aaa
jp
cwtl
loop
adc
cmc
or
lock
gs
adc
adc
dec
adc
adc
push
mov
pop
or
loop
xor
shll
jmp
inc
pop
stos
fwait
inc
mov
pushf
stos
jo
xor
and
jle
rcl
test
sbb
fdivl
ja
and
push
pop
icebp
push
xor
push
push
popa
icebp
imul
jne
roll
push
pop
into
push
adc
push
cmpsb
xlat
rcll
lret
pop
pop
sub
mov
push
jo
and
inc
shr
in
fmuls
sub
and
movsl
lods
lret
pop
in
xor
ss
mov
pop
push
cli
mov
sbb
push
nop
mov
inc
xchg
xor
mov
jno
sahf
mull
xchg
or
mov
jp
icebp
fnstsw
pop
mov
pop
ret
adc
xor
outsb
popf
decl
notl
push
pop
out
dec
mov
sbb
and
sbbl
lock
shrb
arpl
push
cs
pop
lods
mov
fcoml
mov
out
lret
pop
pop
lock
iret
int
mov
test
arpl
inc
mov
je
jmp
in
test
cmpsl
mov
loope
add
mov
mov
push
xchg
cli
push
ret
mov
scas
or
jno
popf
bound
popf
dec
push
and
pop
xor
jns
mov
xlat
push
and
push
push
cmc
sbb
jne
ja
cwtl
and
inc
jmp
inc
inc
adc
outsb
dec
arpl
imul
sbb
mov
sbbb
jmp
das
mov
ss
andl
sub
sbb
adc
dec
sub
divl
pop
jae
js
sub
dec
xlat
lods
gs
arpl
mov
ja
or
mov
pop
cmp
enter
and
in
mov
pushf
orb
pop
push
in
in
iret
popf
shrb
mov
jg
data16
add
bound
imul
mov
in
lret
xor
push
dec
int
or
mov
rolb
and
cmp
aad
out
sub
xor
addr16
popa
xor
inc
or
jns
out
sub
inc
sub
ljmp
sbbb
lret
outsl
out
xchg
jnp,pn
stos
jb
sub
dec
stos
adc
icebp
ds
ljmp
sbb
dec
cwtl
and
shr
popa
add
stos
xor
ds
xchg
hlt
stos
add
jns
rcrb
inc
xchg
popa
scas
test
xlat
in
xchg
fstps
xchg
fstl
jne
adc
insb
push
jl
jo
div
std
lods
jae
push
leave
mov
push
addb
rcrl
repz
push
iret
push
or
push
rclb
cmpsb
or
leave
xlat
mov
push
xchg
sbb
clc
pushf
test
and
and
shll
push
mov
inc
pop
inc
push
fucomi
jmp
sahf
cmc
cmp
fs
xor
pop
jb
outsb
gs
pop
rol
mov
sub
push
andps
mov
or
stc
imul
ret
dec
pushf
inc
xchg
ret
andb
cmc
jge
mov
cmp
pop
call
icebp
jne
movsb
in
jg
dec
push
cs
mov
fildll
and
cmp
movsb
cmp
dec
stos
sub
sub
incb
aas
cmp
out
pop
sub
or
int
mov
adc
notb
lret
mov
push
add
lcall
dec
ds
cmp
or
in
lcall
fwait
js
pusha
pop
mov
dec
sbb
movsl
outsl
and
push
clc
sub
and
mov
cmp
imul
dec
cmp
loop
xchg
cmpsl
mov
popa
mov
mov
mov
and
aas
pop
jmp
dec
mov
inc
pop
les
mov
push
jl
pop
lahf
jmp
cmp
bnd
push
dec
ret
stos
mov
ds
mov
mov
add
lcall
cmp
pop
aam
scas
pop
and
or
push
lods
test
xchg
push
pop
or
push
inc
mov
xor
aam
dec
test
dec
sub
jb
or
clc
stc
lahf
outsb
test
mov
push
mov
ljmp
cmp
leave
add
das
int3
in
sub
lods
int3
fidivs
xchg
incl
shrl
insl
pop
aas
scas
push
mov
ss
dec
mov
fdivrl
cmp
jne
enter
jg
sub
xor
in
xchg
sub
push
adc
fdivrs
enter
sub
leave
pushf
sub
hlt
lds
xchg
cltd
rcr
dec
jle
imul
test
into
clc
inc
adc
add
xor
push
test
cmpsl
sti
rorb
loop
sar
cmp
imul
fdivl
dec
jo
jmp
mov
adc
or
sbb
cmp
ret
shrl
lods
xor
xchg
mov
jmp
sbb
sbb
stos
add
dec
rorl
push
jns
and
scas
mov
mov
mov
stos
scas
jmp
movsl
mov
sub
imul
adc
jae
mov
mov
push
rol
mov
int3
cmp
icebp
inc
pushf
cmp
mov
insb
mov
aas
xchg
outsb
and
imul
icebp
lahf
jbe
je
mov
inc
aad
popa
lcall
mov
xchg
sub
outsb
es
jnp
inc
mov
mov
lods
cmpl
mov
xchg
xchg
xor
sbb
not
cmp
movsl
mov
mov
pop
mov
shlb
jge
cmp
sbb
pusha
lcall
xchg
sbb
ds
push
mov
push
fsubl
jne
jnp
and
pop
cmp
xchg
dec
je
push
mov
inc
test
pop
and
dec
sbb
mov
lods
jns
sbb
push
adc
loope
inc
in
push
or
fadd
cld
mov
gs
fs
loope
in
sub
add
daa
stos
adc
mov
dec
in
addr16
cs
inc
push
movsb
stos
or
outsl
fiaddl
push
cltd
fdivp
cld
hlt
fucomi
icebp
cld
push
jecxz
ds
adc
lahf
pop
ljmp
inc
xor
arpl
push
jo
jae
std
clc
leave
adc
inc
fdiv
pop
fwait
dec
les
mov
mov
mov
inc
or
ret
sub
mov
dec
shl
pop
add
mov
in
pop
dec
stc
shll
jno
push
scas
add
mov
dec
mov
fdivr
lock
mul
mov
cmp
cs
push
lcall
push
inc
idivl
inc
enter
jp
daa
pop
push
dec
out
adc
es
in
pop
pop
subl
mov
popa
push
lds
inc
cli
jge
push
ja
inc
cmpsb
cmp
mulb
mov
mov
cmpsl
inc
inc
fsubrs
pusha
mov
dec
cmc
jns
xor
sbb
or
adc
test
xor
daa
mov
ret
imul
pop
sub
sub
push
push
int3
cmpsb
jmp
in
bound
mov
test
xchg
repz
jbe
push
pop
pop
or
pop
push
fwait
cmp
sbb
adc
jae
sub
mov
pop
nop
stos
and
insb
lahf
mov
sbb
push
aam
mov
mov
sub
sub
in
aam
test
daa
fnstenv
mov
mov
and
and
mov
sbbl
cmp
push
mov
mov
jg
add
loopne
mov
faddl
inc
push
shl
ja
cmp
sub
add
lods
jmp
fists
std
in
stos
daa
iret
mov
mov
mov
jbe
fwait
popf
pop
fisttpl
in
fmull
dec
fists
inc
push
cmp
jge
cmp
lods
add
add
cmc
test
pop
push
sti
push
mov
scas
adc
call
orb
mov
insl
pop
jg
cld
sbb
inc
jbe
cmp
dec
mov
inc
icebp
add
imul
adc
cli
testl
lock
or
xchg
pop
and
xchg
imul
adc
and
test
push
push
or
xchg
push
mov
push
and
adc
in
sub
repz
out
ret
popa
sahf
xchg
call
test
dec
std
aam
cltd
jle
insl
adc
xchg
jae
test
adc
pop
jne
gs
cs
xchg
xor
sub
add
in
xchg
xor
enter
sbb
fdivs
jg
lcall
cmp
dec
mov
shl
lods
push
fimuls
loop
add
mov
xchg
stos
or
fstl
mov
in
cmp
mov
xchg
pop
das
sub
pop
popf
sub
mov
jnp
sbb
daa
imul
jb
sub
adc
add
sub
jecxz
xchg
out
jmp
movsl
sub
clc
lcall
push
outsl
cmp
je
rorl
or
mov
leave
aad
jge
dec
je
test
lds
push
push
lcall
fdivrp
jbe
adc
mov
and
aam
stc
dec
sbb
mov
and
aad
push
cmp
out
loop
and
sbb
sahf
jmp
mov
pop
mov
cmpsb
push
shlb
xchg
and
stos
jbe
jmp
mov
shl
jle
xchg
in
das
lcall
popa
sub
imul
stos
pop
div
daa
leave
loope
inc
mov
jmp
push
jb
mov
mov
or
push
jecxz
push
push
push
jno
scas
or
ss
mov
inc
jmp
mov
mov
inc
fdivs
push
shlb
jle
mov
jnp
stc
sbb
adc
pop
cmp
std
mov
cltd
and
pop
mov
scas
inc
in
push
lods
cmp
cmp
push
das
icebp
ret
mov
out
pop
pop
ds
fs
aam
andl
int3
rcr
and
scas
lods
cmp
push
jno
mov
mov
loope
pop
jp,pt
loopne
test
inc
xchg
jmp
and
aaa
xchg
inc
cmp
push
int
scas
les
mov
mov
mov
cmp
in
jge
fisubrl
aaa
mov
imul
in
jmp
cli
cld
call
mov
ljmp
cmp
mov
sar
add
cli
adcb
out
push
loop
fcoms
pop
cltd
pop
dec
xchg
fdivrp
jns
push
xchg
inc
loop
add
sarl
inc
dec
lds
sahf
addr16
push
mov
shrl
cmp
and
jo
sti
rcrb
sbb
out
fucomi
test
mov
pop
inc
adc
xchg
xchg
std
addr16
sub
mov
cmp
jns
sub
pop
mov
pop
sbb
jne
mov
or
sub
es
push
mov
scas
enter
rolb
jp
jnp
addl
mov
insl
aaa
loop
jle
addr16
pop
push
or
in
inc
stc
dec
dec
mov
xchg
adc
adc
stos
mov
cwtl
leave
dec
ficoml
mov
adc
push
xchg
add
inc
daa
push
inc
dec
pop
cld
xlat
mov
lret
pop
xlat
loope
adc
xor
push
sahf
add
xor
push
mov
dec
fwait
mov
sti
cs
mov
pop
pop
and
insl
das
in
fs
push
outsl
push
cmpsb
adc
and
cmp
loopne
push
lcall
in
daa
clc
push
mov
xor
cwtl
loope
dec
movaps
and
and
add
mov
pop
fistps
adc
outsl
insb
jne
ret
sahf
jae
leave
jecxz
jmp
and
adc
decl
inc
push
add
mov
jecxz
inc
test
popf
xor
ret
sti
dec
and
lock
lock
sbb
mov
cmp
mov
cmp
cmpsl
inc
jp
cld
xchg
std
jne
arpl
aaa
out
cmpb
out
push
push
fdivs
stc
add
sbb
dec
and
sub
pop
lds
dec
addb
mov
out
xor
mov
fisttpll
inc
insl
sub
xor
pop
movsl
out
subl
push
roll
jmp
push
stc
pop
aam
mov
ss
sbb
sbb
dec
adc
xor
pxor
cmp
pop
repz
loope
movsl
cmp
pop
mov
insl
and
sbb
xor
cmp
sub
dec
push
outsl
fsubs
xchg
and
imul
xchg
pop
inc
in
fldl
fistl
sbb
xchg
sub
sub
push
in
out
popf
or
fistpll
in
add
jnp
add
frstor
adc
push
ja
sbb
lret
loop
add
xor
sbb
in
mov
xor
loop
rcll
popa
je
fldl
gs
pushf
bound
in
js
xor
xchg
cli
aad
lahf
fidivrs
out
loope
pop
mov
outsl
or
or
test
call
mov
shlb
shlb
orl
sub
inc
or
mov
lret
xchg
fs
and
mov
jb
ret
orl
fistpll
and
cmp
js
in
inc
hlt
add
mov
pop
pop
sti
movsb
inc
dec
in
insl
mov
fdivr
aad
xchg
cmp
out
leave
lret
in
jns
sarb
add
scas
sub
jl
dec
sub
in
iret
xchg
mov
test
mov
push
ss
insb
subb
lock
xchg
pop
notb
push
scas
leave
jge
mov
cmc
cmp
ja
popf
ret
insb
lahf
jle
shr
fisttpll
idivb
lock
lret
push
inc
out
add
idivl
cltd
mov
scas
xchg
mov
sub
or
inc
jne
stc
push
or
mov
jg
lret
jmp
sarl
pop
cmp
mov
imul
je
outsl
cli
es
popa
or
cmp
loope
add
or
loop
aaa
arpl
adc
jl
add
repz
scas
lret
sahf
jmp
or
xchg
sub
inc
pop
shll
test
in
sub
adc
lods
lret
and
push
dec
loopne
or
adc
push
cmp
inc
push
cltd
shr
lret
lret
mov
jg
xor
lret
and
inc
or
orl
andb
adc
in
sbb
mov
pop
jno
lea
and
dec
sub
leave
and
mov
mov
jp
outsb
jecxz
pusha
mov
dec
push
ds
sbbl
push
or
xchg
shl
repnz
pop
mov
shlb
jb
out
mov
sarb
dec
push
ja,pt
test
movsl
shl
lret
leave
xchg
repnz
adc
aas
inc
dec
xor
jl
push
push
out
mov
loope
mov
loope
fstl
push
pop
xchg
sub
sub
mov
push
jl
sub
in
iret
cmp
pop
fmulp
sbb
out
mov
ss
fimuls
in
add
or
cmp
xchg
or
sub
jo
mov
ss
xor
add
and
mov
aad
jbe
mov
test
fwait
or
adc
push
test
out
mov
iret
adc
outsl
movsl
and
data16
ret
das
dec
jne
cmc
jl
out
add
lret
adc
repz
xchg
mov
xchg
loop
scas
ror
mov
inc
push
xchg
inc
push
imul
jmp
aas
jecxz
int
in
mov
das
push
cmpsb
ret
push
inc
cli
in
fcomps
lret
sti
and
rep
sbb
into
jecxz
mov
sahf
xor
jo
out
dec
stos
fwait
jb
mov
gs
dec
jb
aas
stc
jne
loop
fbld
fs
imul
mov
sti
xor
xor
inc
dec
mov
nop
lea
push
jbe
xchg
push
mov
in
mov
imul
sub
cltd
add
lods
jle
sahf
scas
push
sbb
int3
push
push
inc
and
popa
push
out
mov
aad
aam
mov
clc
mov
mov
add
jb
in
inc
in
xchg
cmp
push
inc
mov
imul
jbe
sbb
xchg
push
add
ss
push
sarb
cwtl
movsb
loop
add
mov
incb
push
adc
inc
pushf
inc
call
sets
pop
mul
pop
dec
inc
imul
out
popa
cmpsl
mov
mov
xchg
mov
xor
rorl
mov
sbb
mov
add
loope
fsubrs
hlt
popf
adc
jmp
mov
pop
repz
push
pop
push
mov
mov
mov
jmp
adc
pop
push
insb
mov
xor
sbb
pusha
inc
out
push
lahf
ror
sbb
jno
sahf
or
sahf
cmp
and
out
adc
pop
call
ss
jp
dec
into
adcb
sbbb
mov
mov
xor
es
fsubrp
dec
dec
sbb
pop
xor
inc
das
or
ret
mov
and
mov
fld
cld
sub
add
mov
mov
lcall
rclb
inc
repz
mov
in
lods
jle
jnp
daa
pop
shrl
inc
movsl
and
adc
jno
cmp
out
dec
fcomps
mov
movl
call
dec
iret
rclb
loope
cld
ljmp
pop
cmp
loope
mov
jle
inc
nop
mov
or
push
out
inc
push
sub
and
sbb
mov
xchg
bound
leave
cltd
fwait
addl
fdivp
sbb
adc
clc
add
mov
mov
and
stos
dec
aad
adc
push
xchg
jmp
adc
xor
fldcw
mov
dec
pop
sbb
fsubrl
sbb
mov
adc
xlat
into
push
pop
sbb
int3
mov
xor
fstps
pusha
or
push
scas
xor
push
mov
loopne
imul
rcr
popf
in
xlat
insb
mov
xor
jecxz
mov
leave
repnz
out
cmp
mov
mov
cmpsb
pushf
jp
fdivl
dec
xchg
mov
sarl
push
loope
jmp
jge
enter
or
xchg
push
pop
daa
orl
dec
leave
test
push
mov
add
push
and
out
xlat
adc
fstl
test
add
push
lret
rcrb
cmp
pusha
daa
or
movl
cltd
mov
pop
jns
pop
cs
mov
jl
jb
mov
cmp
dec
mov
or
pop
lea
mov
dec
data16
lahf
inc
es
push
out
and
cmp
sbb
sub
imul
mov
mov
dec
push
test
cmc
repnz
stc
cmp
jno
daa
and
addb
sbb
es
aam
imul
inc
aad
loopne
adc
xchg
xchg
jne
xchg
mov
cmc
pusha
pop
mov
inc
or
testl
call
popa
xor
into
sub
xchg
and
jp
repnz
cmp
fs
cmp
mov
jno
fwait
sbb
jl
in
inc
movsl
bound
dec
hlt
insl
pusha
or
mov
mov
jecxz
push
pop
jmp
add
stos
push
xchg
int
jbe
cmc
xor
int
pusha
shll
push
cmp
add
sbb
loopne
js
mov
mov
mov
adc
and
pusha
lock
mov
jecxz
push
popa
scas
cmp
insl
and
jl
daa
sub
jae
or
jne
out
ja
jno
ret
push
divb
mov
sub
sahf
sub
sahf
jg
xor
sub
or
mov
adc
push
fdivrs
jge
adc
mov
sub
pop
pusha
pushf
lods
out
xor
inc
leave
movsl
push
and
mov
push
insl
and
mov
fldl
sub
add
pop
stos
adc
and
sub
jmp
sbb
add
pop
sub
xor
add
jo
movsb
lahf
decb
xor
ds
or
fisttpll
push
cmp
jp
sti
enter
add
sbb
mov
and
pop
orw
xor
out
dec
cwtl
pop
sti
cmp
movsl
mov
inc
leave
jno
jle
adc
add
inc
loopne
in
dec
jns
fs
mov
es
push
cmp
fistpl
pop
aaa
dec
nop
cli
cmp
pushf
pop
scas
jg
cmp
shrl
stos
jo
xor
ret
lods
imul
dec
and
cmp
sub
mov
xor
sub
clc
sbbl
mov
je
pop
push
adc
xor
inc
ret
mov
mov
cmpsl
or
add
xor
test
cmp
cmp
cmp
out
mov
adc
adc
cmpsl
inc
xchg
xchg
cld
inc
add
data16
pop
jo
cltd
pop
mov
arpl
outsb
testl
jae
mov
jnp
loope
ja
dec
cmpsb
mov
enter
xor
sub
xlat
mov
push
push
lret
in
mov
imulb
in
push
movsl
add
fnstsw
nop
xor
stos
xchg
clc
outsb
fnstenv
int
lcall
add
mov
andl
xor
xchg
ss
lods
adc
mov
mov
xor
addr16
in
xchg
jno
push
jl
loop
ljmp
adc
sub
je
dec
enter
call
insb
inc
aas
dec
jne
ret
push
dec
pop
leave
xchg
dec
test
xor
or
cmp
mov
ljmp
xor
push
add
and
push
sahf
push
test
add
cld
mov
push
add
push
xor
cmp
cltd
jmp
pop
adc
fcoml
in
insl
lds
mov
lahf
mov
shrb
mov
xchg
mov
xor
pusha
mov
mov
scas
pop
mov
nop
mov
fnstsw
add
rep
push
inc
and
div
sbb
imulb
push
mov
ret
cmpsb
jne
inc
dec
or
xchg
mov
adc
jbe
movsb
push
push
cmp
xor
jp
aad
movsl
fiadds
or
and
repnz
sub
imul
dec
and
adc
icebp
push
pop
mov
pop
xchg
mov
imul
rcll
mov
lret
rcrb
in
or
subb
shll
popa
cmovo
enter
fdivrs
gs
cmp
mov
ljmp
icebp
cmp
and
std
sub
and
out
iret
enter
shlb
pop
or
loopne
add
lea
jp
jp
mov
mov
dec
ret
fstps
daa
push
mov
cmc
mov
fwait
cs
push
jns
rolb
ret
xlat
xchg
sbb
dec
mov
test
pop
jle
hlt
nop
dec
imul
fstps
fwait
xchg
mov
pop
into
push
inc
in
dec
insl
jb
lea
insb
movsb
or
mov
lds
icebp
mov
mov
mov
adc
das
xchg
and
aas
pop
aas
js
cld
aaa
nop
imul
and
jl
mov
in
ret
and
rep
cltd
mov
xchg
fs
sbb
xor
int3
or
dec
cmpsl
sub
js
add
push
jne
test
int3
cmp
mov
cs
cmpsb
scas
jmp
and
pop
pop
push
insb
or
dec
mov
mov
xor
cmp
xchg
jnp
xor
and
cmpsb
insl
jl
pushf
pushl
mov
fsubrs
clc
out
cld
push
ret
mov
es
and
scas
jecxz
sbb
test
hlt
or
xchg
and
jno
jmp
incl
orl
nop
add
xor
lret
add
mov
xchg
jns
es
pop
addb
mov
xchg
add
add
jns
adc
jmp
inc
and
leave
iret
enter
pop
iret
stc
fisubl
and
mov
mov
dec
mov
negl
subl
cmp
cmp
lds
sar
jmp
in
mov
mov
outsb
or
stos
push
push
mov
lret
ret
call
movsl
push
pop
jo
sbbl
leave
mov
jo
inc
or
sbb
test
sbb
add
and
inc
mov
addr16
push
xor
cmpsb
adc
loope
lret
movsb
cld
ret
dec
dec
mov
insl
icebp
adc
nop
push
stos
sbb
mov
push
ds
roll
es
cmp
stc
jae
add
add
fdivrs
pop
dec
fistpll
fisubrl
push
pop
mov
ret
and
xchg
les
pop
mov
in
dec
push
cmp
aaa
jnp
sti
sub
or
cli
lea
or
and
fs
hlt
xchg
cmc
jle
dec
dec
mov
imulb
inc
mov
xor
aad
jg
ljmp
push
imul
dec
cmp
bound
pop
adc
mov
lret
or
pop
jg
ja
aam
adc
sbb
sbb
inc
stc
mov
push
jns
dec
mov
out
je
jg
mov
lcall
xor
inc
repnz
mov
leave
or
pop
sbb
sub
ret
cmp
mov
jns
aaa
push
repnz
jp
xlat
lods
ja
mov
dec
xor
pop
cmp
jo
sarb
push
mov
fadds
rolb
push
jae
mov
sbb
push
pop
mov
mov
cmp
push
add
mov
dec
lea
push
jmp
adc
jmp
lcall
bound
adc
xor
or
mov
pop
lret
jle
pushf
repnz
jne
sbb
pop
and
add
cltd
xchg
lahf
jo
mov
addr16
enter
mov
insb
mov
xor
cld
testb
fnsave
pop
div
or
xchg
cld
stc
mov
sbb
ret
clc
mov
adc
push
jns
outsl
loope
adc
pop
sarl
cli
mov
and
mov
mov
cmc
divb
dec
sar
test
addr16
aas
outsl
aad
test
push
fistps
xchg
push
mov
mov
enter
lods
sahf
push
sub
ds
lds
add
mov
enter
call
mov
jno
pop
cli
jl
lret
mulb
cmp
sub
mov
loopne
cmpsl
xchg
adc
rorl
adc
inc
sbb
sub
or
pop
movsl
js
cmp
popa
jmp
mov
xchg
addl
cmc
cmp
cmpb
int
cmp
scas
and
aad
scas
repz
lods
mov
mov
insl
add
add
jecxz
leave
stc
mul
cld
dec
ret
dec
aam
arpl
aad
hlt
out
stos
mov
rclb
std
push
out
xor
pop
mov
or
cmp
or
or
mov
les
in
addl
icebp
outsl
imul
sub
mov
inc
adc
xchg
fs
lea
and
js
lcall
rolb
xor
or
sub
or
adc
xchg
push
les
sbb
adc
xchg
ret
adc
iret
push
dec
mov
ds
sub
inc
shll
push
pop
pop
jae
movsb
lock
pop
sbb
popf
insb
fsubrl
mov
inc
sbbb
loope
xchg
paddsb
dec
cmovns
popf
mov
lods
pop
ret
jns
loop
push
daa
aaa
andb
xchg
xor
jge
mov
pop
iret
loop
xlat
xchg
cmp
pusha
jl
push
and
cmp
xlat
sbb
jo
cmp
sbb
sti
lds
dec
dec
scas
jl
scas
loopne
jle
and
daa
js
jp
and
loopne
add
not
bound
push
rolb
jle
pop
jno
icebp
into
sbb
pop
inc
mov
jns
cmp
jle
jmp
sub
stc
add
inc
hlt
jns
add
loope
mov
and
popa
inc
hlt
sbb
lahf
test
lret
stos
pop
sarb
shrb
mov
pop
xchg
cmp
mov
adc
ficoml
clc
test
insl
cmp
or
sub
in
sub
stos
shll
pop
push
sub
cmp
add
leave
mov
insl
adc
add
dec
add
mov
test
imul
pop
inc
daa
push
jmp
xchg
xchg
adc
pop
enter
lcall
lods
shlb
sbb
popl
cmp
fs
mov
jg
movsb
das
adc
jne
test
sti
jle
lock
cmc
xor
popa
fsubs
rcll
addb
mov
inc
stos
decl
xor
mov
mov
mov
jp
mov
movd
andl
je
iret
in
push
dec
faddl
stos
shl
daa
pop
test
rcll
or
add
je
jne
jle
jp
movsb
push
dec
jbe
dec
dec
test
xor
scas
xchg
pop
pop
in
jg
sahf
jbe
std
xchg
xor
cmpsl
fs
aaa
xrelease
pop
xor
adc
adc
addr16
or
shrl
mov
pop
loope
push
popf
test
fcmovnb
mov
mov
dec
dec
loopne
or
xor
mov
jae
icebp
add
push
pop
pop
mov
rcl
lods
iret
cmpsl
mov
lahf
mov
stos
lea
dec
nop
sub
stos
notb
push
iret
in
push
shl
pop
mov
and
xchg
cmp
arpl
dec
push
jmp
mov
sbb
stc
mov
sahf
mov
cmp
jae
fwait
mov
xchg
ds
jmp
jnp
aaa
mov
pop
shlb
sub
cwtl
rcll
cmp
lret
jmp
js
add
mov
mov
xor
daa
lods
mov
sbb
fwait
cmp
mov
jae
lds
mov
andb
mov
inc
jns
shlb
movsl
filds
ss
lret
pop
push
js
cmp
cmp
xchg
jp
xchg
pop
mov
cld
enter
sub
and
mov
adc
inc
stos
xchg
dec
xor
xor
pop
ja
out
sbb
cmp
mov
out
roll
pop
aas
jg
mov
add
jne
sahf
adc
pop
inc
dec
xor
dec
push
hlt
mov
stos
and
jbe
mov
out
mov
inc
inc
mov
inc
sarl
outsl
mov
fsubr
sarb
daa
jns
adc
lahf
add
xchg
mov
enter
ljmp
jb
or
fdivs
fwait
pop
daa
lret
stos
pop
leave
in
inc
mov
popf
scas
loope
dec
pop
xor
mov
cmp
shlb
and
jg
push
dec
movsb
xor
lods
adc
addr16
or
push
test
push
loop
fcomi
add
maskmovq
ljmp
cmc
pop
pop
pop
icebp
mov
stc
dec
push
ret
pushf
xor
jle
xchg
pusha
inc
and
out
jge
les
pop
sub
std
cmp
out
bound
sbb
mov
mov
jnp
repnz
push
push
xchg
ret
mov
cmp
mov
sbb
sti
iret
lods
stos
pusha
add
les
push
jb
push
xchg
cmp
inc
ss
cmp
cmp
movhps
lcall
frstor
lods
add
adc
sbb
or
jge
call
dec
cs
mov
hlt
test
cmp
arpl
movsl
shlb
out
es
in
sbb
das
imul
pusha
or
sbb
mov
scas
ljmp
insl
pop
fildll
adc
xor
push
hlt
aas
lods
ret
fs
mov
sub
int3
push
sbb
scas
add
bound
fucomi
cmp
out
mov
sub
mov
in
fildll
hlt
mov
mov
push
inc
les
addr16
cmp
adc
sub
xlat
ja
dec
shlb
dec
fistpll
movsl
xor
push
mov
mov
add
mov
in
push
pop
arpl
push
fwait
add
cwtl
or
cs
mov
pop
and
shr
loopne
pop
xchg
cwtl
xchg
sub
out
adc
sub
testb
pop
sub
sub
test
stc
pop
or
mov
mov
mov
jmp
cmc
in
jl
inc
fucomi
sbb
popa
sbb
rcl
sub
mov
sub
mov
arpl
mov
scas
loope
xchg
xlat
cld
idivb
icebp
ss
es
xchg
xor
dec
mov
js
cmp
add
test
add
mov
xor
mov
xchg
sar
jno
sar
add
pop
pop
fdivrl
mov
xchg
jmp
data16
out
mov
fsubp
les
sub
push
push
filds
iret
inc
aad
sbb
dec
sbb
aad
sbb
ss
or
cltd
into
mov
push
ror
mov
or
jp
adc
movsb
out
xor
dec
sbb
adc
imul
mov
xchg
sub
ret
cld
mov
fwait
pop
fwait
push
and
movsl
sbb
aam
addr16
mov
xchg
out
leave
sbb
push
test
ffreep
sub
sub
sbb
mov
pop
addr16
push
fisttpl
bound
adc
test
dec
add
out
cmp
inc
aad
push
sbb
push
inc
loopne
insb
mov
arpl
ja
pop
loop
cld
add
push
xor
notb
mov
push
daa
mov
aaa
cmc
cld
fsubs
aam
adc
ds
cmp
lods
jecxz
cld
pop
testl
dec
loope
or
add
sub
push
insl
or
bound
dec
dec
cmp
xchg
sub
jl
pop
enter
xor
add
mov
mov
push
cmc
jge
dec
mov
dec
mov
xchg
pop
shrl
pushf
add
sbb
ljmp
in
and
mov
mov
test
mov
fisubl
cmp
push
sub
in
add
push
xchg
sub
mov
push
cltd
add
mov
jne
je
mov
mov
testl
lock
repz
jp
and
xchg
pop
mov
push
dec
lret
and
cmpsl
es
sbb
xor
mov
pop
repz
pop
lods
and
int
das
or
jp
int
js
shll
cwtl
mov
in
mov
xchg
enter
test
pop
movsb
mov
or
daa
in
arpl
ss
int
lret
stos
xchg
inc
jne
sbb
mov
call
pop
out
inc
fnstsw
sub
push
rclb
push
pop
lahf
lret
jge
popa
iret
inc
call
dec
lea
les
fs
adc
shlb
dec
mov
adcl
cmpsl
jne
popa
sub
push
jp
mov
jno
loope
pushf
cmp
push
xor
ljmp
pusha
inc
sti
jns
mov
call
lods
in
pop
add
mov
rcl
mov
mov
clc
mov
popa
jnp
jg
in
aam
fistpl
push
addr16
dec
sub
mov
lcall
xor
adc
stc
sub
in
cmpsb
ljmp
add
add
cmp
int
pop
ret
out
mov
push
pop
addl
push
subb
fisubrs
ret
les
jecxz
popf
movsb
fisubl
sti
cwtl
adc
mov
pop
out
xor
mov
dec
sar
movsb
ficoml
xchg
inc
shll
sbb
xor
push
shlb
int3
test
inc
insb
aam
cwtl
ficoml
icebp
outsb
jns
mov
dec
ljmp
mov
cmc
iret
addb
incb
mov
mov
inc
add
push
aas
es
cmc
jle
xor
push
dec
jne
cltd
xchg
sbb
dec
mov
dec
cwtl
iret
mov
je
dec
mov
cld
sbb
adc
push
mov
or
mov
xchg
orb
test
jnp
mov
shlb
cltd
inc
sbb
jno
xchg
pop
inc
mov
push
lods
subb
mov
stos
pop
and
inc
fucomip
ja
mov
sbb
jmp
sbb
pop
insb
jl
jne
in
out
vmovups
leave
dec
or
push
sbb
pop
inc
shrl
movl
xor
js
or
jle
or
mov
sbb
ret
and
dec
je
push
pop
cmp
ret
mov
inc
mov
xor
out
gs
outsl
ss
dec
cmp
pop
mov
jo
enter
mov
cld
push
rcll
mov
and
js
and
jne
adc
lahf
jecxz
loope
sbb
or
inc
mov
and
or
jp
jecxz
jnp
out
push
push
sub
lcall
fsubr
cmpsl
mov
inc
es
aas
and
insb
inc
das
dec
sub
rclb
lret
push
out
mov
cmpsb
loopne
pop
add
sbb
dec
fsubrs
leave
jo
pop
cmp
cs
dec
or
gs
cli
or
add
ficompl
repnz
iret
or
xlat
call
xchg
test
jle
mov
mov
dec
sub
xchg
push
stos
dec
out
arpl
popf
imul
sub
outsb
lock
test
sbbl
mov
cltd
andl
pop
icebp
jb
inc
jae
shrl
sti
pop
mov
outsl
push
sub
daa
inc
jnp
xlat
std
movsb
cld
jns
jl
dec
bound
lcall
dec
dec
inc
stc
aad
loop
or
pop
or
or
lock
or
fisubs
pop
ja
es
cmp
aas
addb
push
test
sub
pop
xchg
cltd
call
add
outsb
insl
clc
jno
xorb
in
dec
mov
add
insl
xchg
sbb
add
testl
filds
outsb
in
out
sbb
lahf
movsb
mov
jecxz
pop
jno
inc
sbb
push
and
js
adc
add
imul
and
pop
stc
mov
insb
fiadds
outsl
xor
cmp
imulb
stos
in
xor
imul
dec
xlat
stos
mov
jns
jecxz
insb
bound
push
leave
push
es
xor
sbb
rorb
bound
or
mov
add
js
mov
xchg
pop
jge
aam
push
mov
xchg
xor
data16
movsb
push
jnp
xchg
dec
dec
lods
mov
imul
adc
loop
insb
mov
jecxz
xor
stc
mov
jmp
lds
test
xor
into
xchg
ror
fistl
jl
clc
push
test
lret
adc
sub
and
and
and
dec
mov
and
add
adc
mov
cltd
dec
rclb
cmp
in
cld
repnz
in
ds
adc
dec
out
xchg
lret
sub
into
mov
andl
xchg
hlt
and
push
push
mov
js
movsb
jg
inc
mov
add
xor
outsl
sub
gs
ljmp
add
call
xchg
bnd
mov
dec
cli
add
fadds
xor
mov
repz
jmp
aad
repnz
stos
gs
dec
adc
shrb
pushfw
into
inc
add
mov
addr16
mov
aam
repnz
js
mov
lods
cmp
ljmp
xor
addr16
hlt
repnz
mov
pusha
xchg
dec
nop
xchg
push
pushf
ret
xor
stos
out
cmpsb
dec
out
mov
test
mov
jmp
int
dec
out
push
sub
sbb
insb
add
fwait
aad
sub
lock
push
out
rcr
into
lret
pop
pop
and
shl
dec
stos
inc
mov
cwtl
xchg
inc
iret
push
jl
inc
and
insl
ret
vpgatherdq
movsl
mov
rorl
mov
or
stc
fisubrl
icebp
xchg
xchg
js
iret
dec
adc
mov
sahf
out
and
inc
inc
sahf
mov
insl
sti
or
ficoml
imul
sahf
dec
cld
sbb
or
cmp
mov
mov
xorl
push
push
sub
lret
mov
mov
mov
xchg
cmpsb
inc
imul
adc
aas
cld
decb
xor
push
movsl
pop
lret
notb
roll
ja
push
push
mov
cltd
sub
xchg
push
out
bound
rolb
pushf
dec
jns
jmp
jmp
das
das
movsl
cmp
pop
sahf
inc
loop
mov
ljmp
push
in
push
xchg
stc
stos
insb
iret
fisttpl
adcb
mov
lock
rclb
in
mov
xchg
mov
push
adc
mov
das
rclb
jecxz
cmpsl
data16
in
dec
mov
xor
xchg
in
lds
push
jg
pop
xor
xor
jno
push
in
rcll
jbe
ss
fidivl
inc
xchg
ljmp
mull
xor
pop
push
sti
fistpll
push
push
xlat
leave
and
wrmsr
or
cmpsb
fisttpl
js
shrl
xchg
je
aaa
dec
mov
incb
sbb
clc
jle
add
lds
sbb
test
stc
sub
push
jl
dec
mov
pop
xorb
rclb
lea
lea
scas
inc
movsb
dec
repnz
stc
in
inc
dec
xchg
push
mov
sbb
xchg
jns
in
dec
in
inc
and
dec
mov
xchg
jl
jno
cmpsb
push
jp
fnstenv
sub
lods
jl
jb
test
sar
imul
sbb
adc
bound
inc
xor
cmp
push
xor
or
push
pusha
mov
fdivr
cmp
and
mov
dec
mov
mov
cmp
push
dec
or
shlb
fs
cmp
andl
mov
insb
das
test
movsb
mov
cwtl
xor
adc
negb
cmp
dec
or
xchg
fildl
add
dec
loop
push
popa
mov
loope
dec
pop
sbb
sarb
ret
pop
fsts
jl
in
fmuls
std
or
ss
inc
mov
adc
xor
adcl
jg
sti
dec
aaa
sub
sub
sub
pop
stos
rclb
inc
jbe
aam
std
xor
stos
inc
push
jp
add
lret
adc
stos
fldcw
ja
scas
loopne
adc
mov
movsl
mov
mov
jo
mov
movsb
push
pop
outsl
adc
pop
fnstcw
jle
mov
mov
mov
andb
sub
ret
and
cli
ret
movsl
push
adc
mov
stos
mov
xor
sbbb
lock
sbb
adc
xor
adc
fnsave
mov
scas
xchg
lret
mov
dec
lahf
push
pusha
mov
push
mov
cmp
mov
sbb
pop
jno
call
fiaddl
cmpb
dec
fcmovb
push
pop
xlat
mov
push
inc
lock
inc
addl
andb
pop
dec
in
inc
inc
hlt
sub
out
shll
push
xchg
mov
stc
das
arpl
mov
popf
adc
fdivr
lds
jmp
fidivrl
fsts
push
aaa
clc
adc
add
and
imul
movsl
mov
pop
pushf
addr16
inc
cmc
daa
fidivrs
and
repnz
das
das
repz
pop
sahf
lods
lock
mov
push
xlat
ds
shlb
loopne
call
jb
push
int3
lcall
popf
or
cld
lsl
stc
pop
aaa
js
lods
mov
sub
xchg
jecxz
and
fadds
and
das
adc
mov
lcall
or
jmp
cltd
imul
popf
int3
pop
int3
xchg
test
mov
idivl
fnstcw
inc
lret
ds
pop
cmp
cmpsb
push
mov
popa
cs
mov
test
scas
dec
jg
in
lock
cmp
xor
scas
icebp
mov
pop
mov
in
or
movsl
lahf
mov
fadds
loop
jl
idivl
test
mov
mov
out
push
fsubs
mov
ljmp
xchg
repz
jno
lcall
scas
lahf
rcrb
jmp
loop
cmp
icebp
movsb
lahf
ljmp
mov
in
aad
mov
mov
pop
sbb
popa
jle
and
lods
out
insb
fidivrs
aad
addr16
pop
das
or
push
in
gs
fwait
xchg
jp
stc
out
mov
jge
stos
loope
mov
and
mov
aas
mov
fcompl
cmp
lods
mov
inc
mov
or
xchg
leave
cmp
dec
cmp
out
dec
jge
xor
mov
jne
jge
call
cmp
stc
int3
pop
mov
outsl
stos
add
pop
testl
mov
push
adc
lahf
inc
scas
dec
idivb
push
mov
pushf
jle
jne
inc
jno
push
adc
scas
add
and
mov
dec
lret
or
fimull
testb
cmpsl
faddp
int
pop
sbb
cmp
stc
cmpsl
sub
lods
xchg
mov
out
stc
cltd
test
repz
mov
jnp
hlt
js
jnp
lds
les
stos
stos
sub
lret
es
push
arpl
mov
inc
ja
push
mov
inc
aaa
and
bound
inc
ljmp
daa
jne
sahf
pop
out
xor
push
add
push
inc
sbb
mov
adc
pop
mov
or
sub
xor
fsubrp
dec
jmp
pusha
call
inc
loopne
pop
je
mov
dec
adc
add
xor
popf
sub
pop
adc
cmc
add
call
xchg
out
in
cmp
cltd
push
test
and
cmp
stos
int
jae
mov
mov
mov
pop
das
pusha
jbe
push
sub
es
adc
lret
adc
out
iret
cmpl
mov
addr16
fisubrs
rolb
and
lcall
clc
bound
lods
out
shld
movsb
add
ret
adc
pop
cli
sbb
loope
aam
xchg
int3
cmpsl
adc
or
xchg
and
stos
lcallw
mov
fisttpl
outsl
outsb
mov
pop
cli
mov
push
xor
adc
dec
outsb
push
int
dec
sbb
neg
pop
orb
jns
cmp
inc
es
pop
jmp
mov
jge
aad
lea
cld
xchg
adc
pop
fidivrl
fldenv
or
inc
in
in
ljmp
dec
or
iret
mov
push
test
inc
pop
insl
pop
movsbl
pop
xor
xchg
add
enter
sar
sbb
xor
add
cmp
push
cwtl
inc
mov
aas
fbld
mov
adc
aad
fnstsw
mov
push
jle
sbb
dec
xchg
das
ljmp
and
mov
addr16
xchg
push
dec
cs
sub
aad
mov
jg
shll
data16
stos
in
sbb
xchg
cld
lea
sbb
xchg
and
or
inc
xchg
popa
cmovno
inc
sbb
add
push
lret
jo
addb
jo
lods
pop
jns
xchg
nop
sub
cmp
lret
xorl
mov
jo
sub
ss
imul
xchg
push
jmp
adc
fdivs
bound
mov
inc
js
mov
or
rorl
adc
fldenv
push
cmp
in
cltd
adc
mov
jmp
or
push
xorl
cmp
xor
adc
ja
sub
cmp
stos
out
out
adc
in
and
pop
sbb
int
push
push
pushf
insl
pmaxub
xor
mov
and
call
sub
sti
lcall
movsb
push
fldenv
sbb
xor
dec
push
stc
adc
out
bound
xchg
outsb
fdivrl
lret
push
inc
loope
mov
data16
inc
push
enter
sub
inc
cmpsb
pop
dec
inc
insb
jg
in
xor
or
imul
into
ss
in
lret
dec
test
lock
inc
jo
sub
aas
mov
jne
xchg
or
lods
sub
jne
dec
inc
loop
xor
push
mov
out
push
lds
jo
arpl
mov
add
int
mov
push
jbe
cltd
jg
pushf
fs
sub
jp
add
push
ss
push
jecxz
shlb
push
ja
int3
or
jnp
or
add
fs
and
cmp
inc
js
ficoml
cmpsl
stos
jae
sub
imul
mov
popl
mov
mov
loop
daa
cmp
out
sbb
push
dec
jne
jge
pusha
cld
sahf
clc
popa
and
mov
shll
and
and
inc
jo
inc
stos
sbb
mov
testb
adc
cmp
fwait
jmp
out
mov
pop
or
bnd
lods
sub
xlat
push
mov
add
adc
mov
js
xlat
push
xor
pop
inc
inc
push
out
xchg
in
sbb
jl
mov
xchg
leave
and
int3
xchg
icebp
lea
and
fsubr
jo
test
xchg
lds
dec
push
xchg
inc
lea
add
push
call
stc
jb
imulb
shlb
sti
dec
out
nop
enter
and
dec
fsubr
in
push
xchg
lahf
lcall
mov
jle
lea
scas
das
scas
clc
xor
cwtl
imul
inc
mov
outsl
xlat
add
icebp
dec
dec
cmc
sub
sbb
pop
inc
int3
scas
jle
or
neg
mov
push
mov
addr16
push
jno
fs
mov
xlat
ror
jge
cwtl
fnstenv
fistl
cbtw
pop
dec
idiv
lds
mov
into
and
cmc
rcrb
lret
push
loope
xchg
push
push
cmp
in
mov
lret
insb
aaa
aaa
cmp
xchg
popaw
cmc
xchg
cli
or
rcl
mov
or
in
inc
sub
xor
mov
xor
adc
les
test
int3
dec
and
xor
leave
test
mov
mov
rol
cli
call
mov
push
cmp
je
jge
dec
add
inc
mov
xchg
pop
and
js
dec
cltd
mov
fiadds
lcall
xchg
dec
pop
pop
scas
sahf
and
leave
add
mov
xlat
enter
mov
jmp
enter
xchg
pop
or
pop
dec
push
aas
jne
aad
sbb
aas
mov
sbb
stos
jmp
iret
xchg
sahf
pop
dec
dec
dec
sub
mov
and
xor
fisubl
imulb
pop
dec
into
xor
movsl
enter
dec
fldt
ljmp
xor
mov
pop
in
mov
and
mov
cs
cmp
mov
push
jb
add
sbb
push
push
aas
and
popf
mov
jbe
arpl
nop
adc
jae
mov
jno
sub
in
lds
pop
pop
pop
fs
pop
xchg
push
mov
cmovae
in
xchg
aas
jmp
movsb
xchg
mov
sbb
xchg
gs
cmpsb
fs
add
in
inc
out
mov
push
jb
jl
cltd
lock
pop
add
sbb
cmc
std
adc
les
jb
cwtl
lea
js
mov
dec
pop
hlt
push
cmp
pop
fs
ds
mov
call
leave
lods
andb
adc
inc
jns
adc
pop
dec
cmp
mov
push
insl
fstpl
ret
push
data16
push
jge
sub
lcall
jb
movl
int3
imul
pop
std
adc
fwait
pop
inc
adc
mov
cmp
mov
sbb
imul
fildll
cmpsl
lcall
hlt
push
sbb
cmp
mov
dec
sbbl
push
fwait
jb
mov
pop
leave
aaa
adc
pop
or
mov
test
pushf
sbb
scas
mov
scas
lret
test
dec
les
xor
and
test
cmp
pop
in
sub
pusha
adc
add
dec
call
int
daa
cmp
repz
adc
movl
movsl
cmp
test
popa
icebp
sub
pop
push
mov
push
sbb
mov
mov
xchg
std
add
push
aad
in
mov
popf
nop
push
out
cs
aad
insb
stos
in
xor
cmc
loop
test
cmp
inc
mov
imul
mov
dec
pop
jecxz
and
stos
repnz
loop
jl
and
cmp
call
imul
adc
pop
fs
mov
xor
or
adc
fstl
inc
jns
push
add
sub
shrb
ljmp
lcall
pop
icebp
mov
ss
es
cmpsl
jo
jnp
daa
out
das
cmpsl
dec
js
mov
lcall
arpl
and
scas
ja
push
out
push
cmpsb
dec
inc
ret
in
mov
lock
out
das
mov
push
in
addl
ss
int3
add
cli
push
popa
and
push
push
push
xchg
xor
insb
jno
mov
and
insb
outsb
nop
xchg
sub
js
adc
push
pop
pushf
aam
push
dec
and
xchg
bound
andl
jns
mov
daa
cmp
jmp
mov
sub
mov
pop
popf
and
lods
out
xchg
in
shrb
jne
clc
outsl
sub
outsl
popa
mov
mov
xchg
fstps
xor
dec
push
xchg
jmp
mov
mov
mov
and
dec
inc
ds
dec
movsb
jge
xchg
xchg
ljmp
int3
pop
pop
mov
mov
pop
js
lahf
std
lock
pop
loopne
xchg
stos
push
nop
xor
setne
cwtl
sbb
jp
xchg
inc
sbb
mov
xchg
inc
inc
scas
mov
jo
or
repnz
movsb
cmp
inc
insl
or
mov
push
test
xchg
and
lock
cmp
shrl
std
sub
rcl
or
lds
sahf
outsb
cmp
push
xchg
imul
mov
out
jl
repz
cmpsl
sub
test
arpl
push
lock
inc
cmpb
cmc
lahf
xlat
cmp
stos
mov
jl
out
and
inc
out
jo
xchg
inc
sub
jbe
mov
pop
mov
popa
cltd
dec
jb
pop
fmull
add
repnz
daa
and
jecxz
out
xchg
stos
fcomi
sub
mov
or
pop
loope
out
out
dec
or
pop
cs
fistpl
xchg
push
cmpsb
lods
sub
sarl
xor
mov
inc
std
push
subl
lods
inc
clc
mov
add
insb
les
jecxz
xchg
jmp
hlt
push
neg
lea
repnz
jecxz
inc
mov
push
mov
scas
cmc
push
cmpl
pop
outsl
cld
or
call
cltd
add
and
mov
adc
jo
push
movups
or
add
int
movb
jl
sub
aaa
sub
pop
lea
pop
jl
pop
sbb
dec
cli
arpl
mov
and
fdivrl
cltd
lcall
dec
cmpsb
les
addb
adc
mov
into
hlt
imul
outsb
jae
lret
flds
mov
push
dec
inc
sti
sbb
mov
jne
push
cmpsl
sub
arpl
mov
pop
mov
sbb
dec
sahf
jmp
xchg
sbb
add
push
aas
aaa
lret
inc
dec
jne
orb
pop
shll
testl
stos
and
or
mov
aad
pop
popf
xchg
xlat
mov
pop
stos
sub
mov
pushf
sbb
into
sbb
imul
dec
cltd
fisubrl
and
sub
and
pop
imul
into
push
and
jp
xchg
hlt
sbb
mov
mov
sbbl
jecxz
loope
test
jne
xor
inc
xor
cmp
pop
sbb
adc
das
ret
xchg
aaa
inc
jb
ja
mov
mov
push
ljmp
lea
scas
pop
or
mov
inc
mov
pusha
sbb
fldcw
pop
insb
fdivrp
psllq
ret
imul
xor
aaa
jbe
dec
inc
cmc
jge
pop
repz
push
lods
jnp
mov
pop
dec
xchg
jae
js
imul
ja
in
rclb
xchg
les
xchg
or
dec
jecxz
cmpb
and
jmp
xor
pop
push
push
and
cmp
fnstcw
cmp
xlat
mov
addr16
pop
mov
add
lds
pop
rcrb
sahf
ret
lods
push
movsl
add
cmc
repnz
btc
inc
and
cmp
nop
rcrl
arpl
in
ret
in
mov
xchg
outsl
stos
insb
aad
imul
sub
and
jno
loope
xor
sbb
fld
sbb
pop
xchg
daa
adc
repnz
sbb
cmpb
popf
pop
cwtl
outsb
fsubrp
fcompl
add
les
mov
pop
test
mov
int
bound
test
mov
push
test
mulb
inc
aaa
mov
push
fwait
mov
xor
xchg
pop
jp
outsl
lods
cmc
push
mov
cmp
push
insl
and
mov
lock
jecxz
mov
push
push
popf
pop
fisttps
mov
and
sbb
mov
jne
or
sub
sbb
dec
jnp
scas
cmpsl
rep
or
inc
bound
cs
pusha
repz
mov
fwait
xchg
dec
clc
or
and
fiaddl
stos
sbb
cmp
arpl
mov
fbstp
or
rorl
gs
rcr
cs
xor
jmp
pop
inc
jmp
pop
call
mov
jmp
sbb
inc
inc
aad
orl
in
outsl
movsb
loopne
pop
adc
ljmp
xor
jecxz
push
clc
ret
mov
aam
cmp
mov
sbb
int3
ss
mov
xor
xchg
loope
ljmp
sub
decl
cmp
sub
enter
xor
cltd
jno,pt
sub
rolb
nop
ffree
lret
in
sbb
loope
xchg
daa
insb
mov
stos
test
outsb
sbb
mov
mov
dec
lret
lret
jl
push
inc
jle
sub
pop
test
in
test
cmp
lcall
push
aas
push
scas
sub
and
aam
and
mov
and
xchg
or
sbb
cs
and
dec
aaa
dec
pop
fs
faddl
test
testb
inc
cs
ljmp
cmp
cltd
pop
in
in
add
pop
mov
lahf
dec
inc
pop
ficompl
or
shlb
cwtl
xchg
rcll
inc
std
leave
lods
addl
pop
add
cmpl
dec
jbe
in
xchg
scas
inc
out
daa
in
mov
int
dec
xlat
pop
in
and
loope
aas
sbb
stos
into
aam
mov
dec
rcrb
hlt
cmp
sub
sub
mov
pop
or
pop
xor
jmp
and
fiadds
push
popf
jns
push
pop
xchg
dec
jecxz
push
out
pop
mov
or
adc
xor
mov
fistpll
insb
js
pop
mov
aad
xor
iret
pop
fstp
sbb
mov
push
pop
mov
dec
adc
into
inc
daa
fstl
add
sahf
jge
test
dec
faddl
add
imull
cmp
fimuls
nop
sbb
iret
adc
mov
stc
imul
cmc
enter
jnp
jae
xor
pop
cwtl
push
mov
out
aaa
fcompl
addb
xchg
nop
mov
xchg
mov
push
jl
lods
es
sub
sub
dec
dec
dec
and
mov
mov
cmpsl
inc
jg
pusha
adc
fdivrl
dec
xor
push
jb
sti
lds
and
sub
test
fmull
rorb
out
aad
push
cmpsb
sbb
push
call
pop
lahf
and
aad
sahf
out
aas
popa
inc
imul
sti
dec
aaa
xchg
and
test
xor
sbb
sub
and
loopne
jno
or
or
movsb
or
and
std
push
in
call
jnp
pop
bound
mov
stos
loop
xor
cmpsb
push
fcoml
imul
cmpsl
add
imul
mov
pop
mov
mov
pop
leave
test
xor
add
gs
inc
aas
cwtl
enter
jbe
xchg
add
imul
out
xchg
fidivrs
imul
xor
aam
movsl
je
jns
scas
jl
ds
mov
and
mov
dec
dec
lret
std
xchg
ljmp
pop
cmp
and
pop
xchg
xor
inc
pop
xor
inc
and
loopne
or
add
mov
mov
xchg
dec
mov
push
fidivrs
rep
sbb
pop
test
mov
dec
ss
or
jno
out
lods
iret
jae
mov
push
pop
cmpl
call
fwait
cwtl
mov
push
or
sub
jg
test
cs
loope
mov
push
dec
mov
scas
mov
aam
mov
and
cmp
jl
sub
pop
xlat
xor
scas
sbb
mov
sub
lock
and
adc
mov
ljmp
iret
lock
jnp
stc
and
mov
pop
inc
je
sbb
pop
popl
clc
pop
insb
xchg
and
inc
mov
mov
sub
inc
std
das
and
jo
test
push
mov
cwtl
push
in
repz
mov
pop
dec
lahf
sub
adc
push
jl
jb,pn
outsb
xlat
add
lock
inc
out
inc
mov
mov
mov
mov
sarb
pop
sbb
adc
xor
dec
cmp
test
in
jge
gs
out
pop
jo
push
fdivs
adc
jb
gs
iret
sbb
stos
repz
lock
ror
xchg
int3
pop
jae
adc
pop
sbb
iret
jne
insb
mov
ret
sbb
iret
cltd
jp
push
xor
push
nop
popa
fbld
orb
push
shll
addr16
or
es
mov
mov
jmp
aaa
sar
sbb
pop
sub
imul
fldcw
and
sbbb
sbb
jp
xor
leave
push
test
ret
push
ja
insl
adcb
ret
imul
xchg
cld
fs
into
jmp
out
test
and
aaa
out
mov
dec
ja
lret
fldt
sti
loop
dec
sub
jmp
jmp
popa
xchg
orl
push
and
jg
mov
dec
out
sbb
or
push
sbb
in
out
popf
aam
jecxz
jbe
inc
repz
xor
inc
testb
data16
out
insb
addr16
push
push
stc
sub
fcmovne
addb
sbb
xlat
ss
xor
sub
sbb
add
mov
testb
jns
orl
sbb
test
pcmpgtw
aam
je
inc
loop
das
xor
push
les
cmp
idivb
cmc
mov
xchg
inc
push
sbb
imull
pop
loopne
testb
out
cmpsl
mov
cmp
iret
add
and
lds
aad
inc
and
cmp
jno
sub
scas
xchg
xchg
push
lahf
inc
mov
pusha
add
out
add
aas
daa
pop
xchg
inc
addl
es
cmc
jmp
pop
rolb
jg
loopne
outsl
pop
lcall
jge
and
popf
dec
ret
addr16
fdecstp
mov
stos
push
mov
push
push
mov
and
push
sarb
push
xchg
icebp
fcompl
push
jae
jp
fs
adc
aad
sub
jp
inc
stos
insb
loope
push
jg
jl
lods
cmp
adc
or
push
sbb
pushf
adc
int3
sbb
inc
cmp
mov
bnd
pop
stc
stos
or
and
ret
mov
xor
inc
addl
inc
bnd
inc
dec
sbb
insb
bound
insb
adcb
add
pop
push
dec
imul
lods
mov
stos
adcb
leave
xor
or
push
pop
push
roll
jl
add
cltd
inc
jmp
jle
stos
xor
shr
cmc
das
pop
leave
mov
jno
je
test
clc
lds
inc
adc
scas
ja
push
sbb
or
in
mov
mov
loope
in
dec
inc
addr16
push
iret
jb
inc
test
addr16
into
jp
xchg
gs
and
fstps
repz
or
jns
cmpl
lds
shrl
fcmovnbe
pop
sarl
jns
inc
push
dec
mov
lods
movsl
cmp
fsts
jmp
or
or
mov
loopne
inc
repnz
mov
daa
pop
syscall
sbb
dec
adc
jno
mov
mov
push
sub
adc
and
imul
inc
andb
js
jmp
mov
jp
sub
and
or
outsl
cmp
pop
aad
cmp
and
iret
aam
sub
testb
push
lods
data16
lock
pop
stc
ljmp
and
and
lods
outsb
sbb
cmp
arpl
aam
sub
pop
les
cmp
aad
xchg
into
iret
pop
sbb
aas
in
fwait
push
pushf
mov
jnp
pop
mov
cmp
loop
cmp
push
jecxz
test
push
insl
mov
jne
or
imul
mov
cmpb
in
ficoms
mov
int3
jge
imul
imul
add
leave
sbb
repnz
sbb
mov
adc
mov
push
cs
push
les
fcomps
jmp
mov
call
rolb
fidivl
negb
mov
movsb
mov
stc
pop
cmp
popa
test
and
nop
adc
rcr
insl
in
or
shlb
roll
cwtl
push
mov
shll
lds
out
jbe
cmp
test
rcl
adc
jno
lds
icebp
mov
push
lret
test
inc
dec
leave
gs
mov
inc
cwtl
fcoms
in
cmp
fsubp
mov
or
cwtl
and
jl
test
int3
call
mov
lods
jg
aad
and
pushf
popa
lods
cli
cmpsb
scas
dec
add
ds
gs
push
or
lds
je
loope
xchg
outsl
mov
xor
cmpsl
movsb
ljmp
xor
jmp
fwait
push
xchg
and
jmp
jg
push
xchg
pop
pop
aam
dec
sarb
fdivrs
mov
inc
and
loopne
dec
out
fs
add
out
pop
in
cmp
inc
jb
xor
mov
xchg
inc
xlat
imul
cs
cmp
aam
test
xchg
sbb
in
jne
jne
pop
mov
adc
outsb
in
xor
add
mov
and
in
push
mov
mov
mov
out
aas
inc
dec
outsl
dec
data16
sbb
pop
mov
mov
or
push
pop
dec
add
inc
cld
in
xor
out
and
popa
cmp
pop
outsl
sub
icebp
mov
or
add
inc
mov
pop
aaa
test
test
mov
adc
and
out
jmp
dec
shll
pop
cmpsb
add
adc
iret
ss
push
jnp
rcrl
shll
adc
xchg
insl
stc
mov
stos
mov
mov
mov
int3
es
dec
push
in
insb
repz
adc
enter
icebp
pop
push
xchg
jle
push
jne
and
int
cmp
mov
fisubrl
mov
clc
das
outsb
inc
pop
jge
lcall
pop
mov
dec
xchg
stos
push
movb
xor
sub
or
mov
mov
pop
sub
aas
in
imul
push
stos
sahf
pop
mov
flds
cmp
cld
mov
sub
mov
je
pop
xor
jbe
push
scas
mov
sbb
push
cmp
out
push
mov
ja
xchg
repz
sahf
cmp
dec
pop
flds
sahf
orb
lret
xor
and
repz
push
inc
inc
xor
imul
test
out
jle
orb
movsl
rcrl
push
mov
xchg
out
xchg
in
xchg
sub
repnz
dec
mov
int
push
mov
je
mov
push
and
push
fs
outsb
das
sarb
or
sub
cmc
cli
ljmp
push
adc
mov
faddl
mov
xchg
adc
jnp
jmp
ja
push
adc
mov
cmp
js
sub
sbb
mov
add
add
scas
das
dec
jg
js
outsl
sub
es
or
jo
adc
test
test
and
pushf
mov
arpl
inc
add
dec
shll
cmp
aas
push
push
test
repnz
cmpsl
jge
ljmp
mov
mov
aas
jae
or
addr16
lahf
jno
ds
push
jbe
push
adc
sub
shrl
jae
daa
leave
sti
loopne
mov
mov
add
enter
cmp
xor
adc
xorl
into
mov
xchg
jmp
or
cmpsb
roll
push
lock
ucomiss
js
jne
push
aam
outsb
negb
lods
aad
pop
shrb
jle
dec
xor
pop
lods
popa
mov
imull
addl
shll
lea
int3
adc
add
lret
cli
fnstenv
movsb
inc
into
pop
push
add
mov
test
ret
sub
loope
pop
push
mov
push
or
and
mov
ret
push
in
or
addr16
lret
mov
int
iret
divl
jle
fs
jae
out
pop
shl
push
push
adc
pop
xor
sbb
xor
sbbl
nop
gs
fs
test
rol
xor
es
cmp
fistpl
xchg
lods
mov
hlt
shrl
in
scas
xchg
ds
push
rorl
inc
dec
addr16
fbstp
jae
push
lea
pop
cltd
or
mov
dec
iret
mov
loop
test
jnp
adc
adc
mov
pop
sub
lds
mov
out
xlat
mov
cmp
push
and
stos
push
jp
ljmp
lcall
pop
out
stos
int3
cmpsb
aaa
xchg
or
int
inc
xchg
mov
aaa
ret
push
mov
dec
push
arpl
lods
movsb
fiadds
jno
roll
in
sub
daa
jmp
fisubs
add
ljmp
xchg
cmp
mov
int
mov
xor
in
xchg
stc
push
mov
subl
mov
popa
push
dec
dec
insb
out
or
frstor
icebp
lock
or
cmpsl
cmp
mov
lretw
or
insl
in
shll
fs
shlb
mov
js
jmp
mov
popa
xchg
movsb
pop
fcomip
arpl
jl
add
cmp
dec
sahf
jno
cmp
fcmovnb
inc
nop
int
mov
jae
inc
or
add
push
add
cmp
dec
rorb
sub
xlat
adc
in
mov
imul
jp
or
and
or
pop
jmp
inc
jno
insb
mov
jae
jge
dec
pop
jnp
stos
sbbb
cmc
dec
sub
leave
inc
sahf
mov
addb
add
dec
ljmp
pushl
pop
std
stos
adc
adc
jl
icebp
mov
cli
lock
sub
xchg
rolb
std
sbb
jmp
into
fcmovbe
repnz
in
mov
in
jns
or
mov
mov
xlat
mov
or
mov
adc
inc
xchg
nop
pusha
ror
mov
xchg
mov
mov
inc
push
or
int
and
xor
sub
movsb
lret
jmp
stc
imul
repz
mov
dec
outsb
and
repz
push
test
xchg
jno
mov
daa
cmpsb
dec
out
mov
mov
jp
loope
xchg
idivb
fldl
jmp
xchg
or
push
in
imul
pushf
mov
cmp
lahf
jnp
pusha
cmpsl
rolb
dec
jae
jle
mov
sbb
ret
xchg
push
lock
das
js
lret
in
dec
fsubs
ss
sti
push
ljmp
mov
mov
jnp
bnd
mov
into
into
sub
inc
push
jp
movsb
adc
dec
mov
fdivrs
push
out
xlat
jmp
nop
pop
mov
add
mov
enter
or
leave
insl
or
adc
push
inc
lods
mov
pop
cmp
mov
je
cli
inc
cmp
scas
pop
inc
outsl
cmp
stos
je
jecxz
sbb
mov
mov
cli
jo
adc
jmp
or
gs
in
fmulp
xor
dec
push
dec
insb
into
xchg
or
cli
scas
popf
or
imul
mov
test
std
test
int
mov
and
inc
mov
leave
xor
xchg
sarb
daa
lcall
sbb
stos
andps
mov
cwtl
mov
iret
mov
das
leave
loop
add
mov
lods
movsb
rcrb
mov
popa
pusha
scas
ret
aad
xlat
sub
mov
out
mov
push
les
jo
idivl
pop
call
push
push
push
pop
inc
repnz
mov
cs
xchg
addr16
pop
lock
js
push
rorb
imul
lods
mov
pop
adc
push
push
xlat
mov
mov
inc
and
and
push
and
insl
in
cwtl
pop
shll
mov
or
inc
sub
in
fistpl
outsl
lds
in
xor
jbe
push
xchg
and
and
int
mov
pop
mov
jmp
sub
adc
push
push
xor
stos
or
xchg
push
ljmp
add
mov
ret
lcall
mov
jo
lret
inc
mov
in
sbb
scas
adc
or
fadds
imul
out
mov
sbb
pop
mov
xchg
add
jg
sub
xor
adc
std
loope
dec
out
enter
in
inc
arpl
mov
dec
mov
and
imul
push
xor
xlat
repnz
jae
jns
dec
sahf
int3
cmp
cmpsb
out
xor
mov
xor
nop
rorb
dec
loope
cmpsl
add
enter
cltd
dec
out
lods
cs
fwait
dec
pop
push
rcll
push
dec
fdiv
call
ret
stos
mov
mov
gs
and
or
leave
inc
push
movb
pop
mov
add
pop
shlb
cmp
mov
inc
shl
in
stc
jb
bnd
ficoml
leave
jg
js
fbld
rorl
xchg
addr16
xor
and
aas
popf
mov
push
mov
bound
jno
lcall
inc
movsb
mov
fwait
popa
mov
sbb
adc
test
and
cli
jb
push
enter
std
inc
push
dec
sub
mov
in
dec
addl
arpl
xor
mov
shlb
xchg
mov
mov
cltd
popl
sub
lret
mov
js
xor
clc
clc
mov
in
dec
mov
add
push
adc
mov
xchg
repz
adc
clc
add
cmp
test
cmp
out
fisubl
jns
sbb
repz
adc
mov
bound
imul
jecxz
sub
lods
int
fmuls
pushf
inc
cmp
sbb
jle
test
cmp
js
fs
mov
mov
ljmp
outsb
mov
inc
loopnew
shlb
pop
sti
outsl
outsl
push
repz
adc
dec
cmpsb
test
daa
mov
jns
inc
fistl
in
mov
xlat
sbb
adc
outsl
andl
fucomp
xor
mov
insl
test
and
sti
jg
dec
clc
sub
lods
flds
inc
jp
stos
bound
jmp
clc
jmp
scas
and
xchg
repnz
or
or
dec
arpl
inc
icebp
imul
das
leave
hlt
nop
shlb
lahf
data16
dec
bnd
jo
into
out
into
out
sbb
sbb
fiadds
cmp
mov
mov
mov
mov
outsb
js
int3
rol
test
or
test
mov
cmpsb
or
push
cmp
mov
insl
lcall
andl
inc
stc
loop
clc
dec
mov
subb
loop
test
push
inc
cmp
dec
ljmp
ja
pop
xchg
sahf
cld
mov
push
clc
mov
arpl
and
inc
es
test
push
dec
lea
mov
sbb
push
inc
fistps
cmp
add
dec
call
test
stc
mov
inc
mov
xor
adc
jmp
or
and
dec
cmp
adc
jg
add
adc
jg
ret
xchg
lods
ret
adc
sub
xlat
icebp
sbb
call
into
push
lea
inc
jne
jne
pop
inc
xor
add
icebp
insb
rclb
add
nop
daa
cmp
scas
dec
jbe
pop
fiadds
xchg
insl
sahf
add
xor
xchg
xor
sub
daa
mov
bound
xor
mov
mov
xor
rclb
sbb
aam
mov
call
jns
movsl
je
test
dec
cmp
fmull
or
mov
loop,pt
cmc
add
lar
mov
mov
jne
inc
lret
cmpsl
insb
popa
cmovle
mov
repnz
xor
lods
lea
fimull
dec
cmp
pop
add
xor
push
idivb
lds
adc
lahf
mov
cwtl
in
int3
out
mov
mov
insb
hlt
aas
dec
popf
xchg
rorl
push
mov
xchg
int
dec
push
lea
fwait
mov
pop
jl
shlb
jmp
scas
decl
lods
jg
add
mov
cmp
xchg
outsb
pop
out
push
mov
pop
pushf
dec
dec
mov
outsl
pushf
je
mov
and
test
push
cmp
popa
add
xorb
lds
sbb
cmp
sbb
pop
insb
nop
inc
std
mov
aam
push
hlt
and
loop
rclb
pop
in
cmp
imul
jb
int3
jne
movsb
sbb
jno
mov
or
jle
pop
cli
push
and
add
cld
inc
in
fisubl
aaa
addl
subb
imul
inc
repz
das
out
or
out
xchg
or
mov
lret
fnsave
mov
xchg
or
mov
xchg
mov
dec
sbb
mov
jecxz
and
aad
test
inc
dec
xchg
mov
adc
int3
dec
push
mov
gs
dec
push
lmsw
rcl
xor
dec
repz
shrl
in
lea
aam
hlt
lcall
movsb
mov
xor
dec
out
imul
mov
mov
insb
ss
insb
adc
mov
nop
aaa
and
xchg
mov
mov
xchg
imul
lea
leave
mov
xchg
or
push
hlt
cld
push
cld
cmp
faddl
cmp
loopne
mov
lret
or
arpl
mov
bnd
cmp
enter
xor
test
in
xchg
clc
js
and
test
and
or
xchg
dec
inc
xchg
icebp
ljmp
cmc
cmp
mov
cwtd
adc
xor
jl
ja
enter
sbb
ret
pop
jle
xchg
cmp
lahf
mov
cmp
and
mov
xchg
mov
pcmpeqb
cmp
lock
dec
loope
std
mov
mov
xor
and
lods
push
sub
xchg
pop
loope
test
ja
fistps
sub
adc
rcll
fdivrs
stos
mov
adc
ja
int
mov
test
or
mov
jne
popa
dec
or
in
cmp
inc
mov
movsb
fsts
mov
or
xor
cmc
repnz
pushf
mov
out
cmp
imul
mov
cmp
out
mov
mov
les
adc
jb
push
push
aad
adc
or
cld
stos
add
xchg
push
and
ret
mov
mov
jb
cltd
cmp
das
mov
pop
sub
lock
mov
add
mov
inc
mov
xchg
mov
cmpsb
sti
mov
dec
fildll
outsl
sar
xchg
rol
adc
call
xchg
std
xchg
popa
js
scas
fisubrl
push
mov
stos
lea
cli
imul
mov
add
pop
push
jae
push
xchg
jp
xor
pushf
inc
xchg
ds
mov
mov
add
pop
mov
shl
and
int
sbb
mov
iret
and
mov
or
fwait
cmp
xchg
incb
sbb
pop
xchg
xchg
inc
dec
sub
adc
test
pusha
and
fadd
xchg
push
jl
jecxz
shl
fdivrs
dec
lret
adc
push
mov
in
fucomi
test
jns
aad
inc
xlat
sub
stos
mov
adc
lods
fwait
ljmp
cmp
pop
cmp
sbb
push
les
in
mov
ret
mov
outsl
je
ljmp
jecxz
mov
aaa
mov
fmul
xor
lock
adc
inc
push
cwtl
mull
sub
jne
mov
movsl
clc
pushf
jae
xor
testb
stos
sbb
add
out
into
lea
rorl
jo
sub
jno
inc
pop
inc
and
popa
call
aam
cli
ret
add
jne,pn
push
movsl
mov
out
and
push
out
push
push
cltd
sbb
cmpsl
push
int3
cli
mov
sub
adc
fs
fmuls
mov
mov
mov
xchg
xchg
pop
fwait
lods
stos
test
inc
cli
stos
mov
push
fimuls
mov
add
pusha
sbb
xchg
jnp
iret
fwait
cmpsl
and
cs
push
outsl
test
cvtps2pi
test
popf
ljmp
mov
sub
rcr
adc
cmpsb
mov
dec
scas
repz
pushf
mov
mov
pushl
xor
add
add
jno
cmc
mov
popf
arpl
cmpb
cmp
je
lds
jg
or
or
dec
push
roll
push
mov
or
sbb
inc
pop
mov
scas
mov
cmc
jns
jbe
sbb
mov
scas
jg
mov
scas
jg
sub
icebp
xor
mov
cmpsb
add
leave
leave
shrl
fwait
push
cmp
xchg
inc
jno
pop
cmp
stos
data16
mov
stc
lret
loope
push
stos
mov
sti
ljmp
fcomps
fldcw
cltd
push
loop
aad
adc
jne
sub
adc
mov
icebp
dec
xor
or
les
adcl
pusha
dec
cmp
mov
mov
or
movsb
inc
inc
dec
push
xchg
aas
or
mov
rcrl
js
pop
add
js
pop
pushf
shll
sbb
flds
mov
gs
push
jo
pop
jecxz
aaa
add
push
pop
sbb
mov
push
xor
jns
jl
mov
mov
mov
movsb
xchg
xchg
popa
lea
xor
call
ror
pop
xor
xor
pushl
pop
and
cmp
inc
xchg
jbe
cmc
adc
sub
and
lret
ss
mov
ss
pop
or
inc
lock
pop
and
jmp
fldenv
push
and
cld
pop
mov
insl
mov
repz
imul
imul
imul
in
adc
in
xchg
push
mov
mov
loop
cmp
cwtl
ficompl
fcmovnu
xor
movb
scas
outsl
push
leave
insl
push
cs
mov
rcrl
sub
pop
pop
mov
add
cmp
jo
mov
popf
adc
mov
cmp
aad
xchg
das
or
ffree
jnp
je
ljmp
sbb
inc
push
call
jl
incb
jns
push
repz
test
adc
shlb
in
xchg
adc
jecxz
add
rcl
loopne
dec
xor
hlt
jmp
pop
hlt
out
cmp
cmpsl
mov
imul
mov
push
jne
outsb
xor
mov
and
nop
jmp
imul
insl
jno
into
call
sub
stos
das
rcll
into
aaa
in
mov
xchg
inc
or
push
pop
mov
cmpsl
mov
ljmp
inc
les
outsb
das
inc
pusha
sub
push
adc
inc
loop
fwait
sub
fstps
mov
and
add
xor
lea
lods
xchg
aam
and
fs
mov
fsubrl
popa
nop
pop
xchg
push
mov
add
mov
push
rclb
test
les
sbb
dec
mov
into
jmp
adc
cmpb
mov
test
jne
js
add
xchg
sti
sahf
cmpsl
push
arpl
inc
mov
fisubrs
dec
test
clc
test
mov
test
push
adc
nop
cmp
std
mov
sarl
push
xchg
sub
cmp
adc
outsb
dec
cli
inc
rorb
mov
pushl
test
subl
xor
fadd
mov
push
mov
pop
xor
ret
inc
cld
push
fisubl
les
push
xchg
xchg
add
xor
addr16
nop
pop
filds
dec
or
adc
jl
mov
mov
testb
and
pop
mov
xchg
cmp
sbb
push
jmp
or
bound
mov
gs
sahf
jle
push
xor
and
outsl
bound
bnd
ds
mov
xchg
and
decl
push
pop
lock
mov
fwait
pop
lret
fstpt
test
mov
xchg
xchg
jae
pop
add
mov
enter
outsl
popa
cmp
xchg
mov
fcoml
lods
mov
data16
pop
decl
loope
add
cld
jecxz
and
cmp
push
in
push
pushf
adc
cltd
call
inc
outsl
sub
sub
xchg
fisubrl
in
push
stos
sbb
out
sbbb
jmp
testl
cwtl
and
rcrb
mov
xchg
push
fwait
jmp
mov
push
stc
mov
enter
sbb
adcl
int3
in
push
pop
mov
mov
cld
push
push
pusha
repz
mov
mov
xchg
nop
push
pop
das
xor
cmpsl
lret
shr
push
test
add
test
and
clc
adc
rcrb
mov
leave
xor
faddl
cltd
in
pop
xchg
je
cmp
test
add
cmc
mov
clc
adc
mov
jg
fmuls
lods
lock
push
lods
sbb
mov
stc
shll
cmp
mov
pop
mov
fdivrs
js
xor
shr
inc
outsl
jle
push
es
aaa
movsb
rol
jmp
cmp
gs
pop
jnp
hlt
dec
cs
mov
jle
sbb
jle
pop
adc
sub
inc
and
mov
das
jmp
out
sub
sub
and
inc
pop
cmc
push
rcl
mov
sahf
sarb
mov
pop
mov
xchg
test
and
popa
xchg
xchg
cli
fstpl
sub
xchg
xor
rolb
loope
jmp
mov
xor
into
aam
xchg
mov
lea
lods
xlat
jg
jb
sbb
hlt
mov
stos
jmp
inc
or
notl
jmp
and
mov
insl
cs
cld
sbbl
jno
cmp
lret
xchg
fisttpl
into
std
cwtl
rcrl
js
or
jecxz
notb
inc
dec
cmp
adc
and
or
data16
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
insb
pushf
push
imul
sub
stos
or
pop
movsl
bound
jecxz
sbb
inc
aaa
or
cmpsl
cmc
scas
or
shrl
jns
sub
ret
cld
jb
jecxz
gs
push
jnp
or
lret
push
mov
push
lods
xor
and
pushf
xchg
js
je
lods
lea
and
dec
ljmp
xchg
das
adc
incb
aam
jns
pop
lds
in
and
mov
sbb
movsl
mov
imul
xor
ljmp
int
aas
mov
fwait
or
push
inc
xlat
dec
cmpsl
sub
pop
jnp
scas
adc
cmp
pop
pop
je
add
mov
mov
cmp
sti
mov
je
test
xchg
jge
test
mov
jl
hlt
in
es
mov
notl
xchg
addr16
jno
inc
sub
je
shrl
adc
lahf
int
pop
std
and
mov
aam
cmp
rolb
fnstsw
inc
in
enter
jnp
jle
lfs
jo
mov
lock
cmpsl
add
inc
add
adc
lret
test
sub
dec
mov
push
adc
dec
jae
xor
adc
outsl
lcall
leave
dec
in
push
adc
cmpsl
mov
cs
push
sub
lret
mov
ja
push
add
repz
bound
andb
arpl
sub
je
mov
pop
ss
or
inc
adc
pop
mov
adc
sbb
adc
popf
inc
ss
outsl
aaa
sahf
mov
mov
hlt
repnz
outsb
and
fcoml
mov
fs
incb
test
mov
push
fnstsw
mov
push
sti
push
xor
jnp
imul
ljmp
mov
and
push
ficoml
insl
mov
js
push
lea
lea
popf
adc
out
sahf
pop
scas
ret
mov
sti
xor
in
push
mov
pop
imul
xor
cld
push
pop
ret
dec
fstl
add
lahf
xor
pop
sbb
jmp
insb
aas
int3
xor
fdivrs
scas
cld
std
stos
incl
jb
test
mov
pushf
mov
sbb
jbe
popf
out
addr16
mov
cmp
pop
cmpsb
mov
inc
or
clc
fnstsw
ds
adc
int3
aad
dec
xlat
scas
add
fmul
dec
push
and
add
mov
lahf
test
mov
xor
rorl
stc
pop
mov
pop
or
push
sbb
iret
push
and
and
adc
scas
xchg
mov
mov
mov
mov
loop
cltd
mov
cmp
pop
popf
sub
or
popf
lahf
sub
pop
push
xor
inc
lock
test
out
sub
sub
xchg
dec
push
dec
mov
ja
scas
jle
mov
loopne
or
sbb
mov
addr16
movsl
xor
aas
imul
scas
test
insb
outsb
cmp
std
out
mov
aaa
rorl
cmp
mov
fwait
push
mov
mov
cmp
mov
cld
aas
add
dec
cli
dec
and
or
jl
jo
loope
pop
pop
das
cltd
cs
test
jg
cld
subb
mov
dec
mov
sub
adcb
or
mov
in
sarl
stos
dec
inc
ret
les
dec
jb
dec
sahf
cld
push
fisubs
add
cmp
bound
dec
inc
add
repz
iret
outsl
and
gs
rcrb
shl
and
arpl
jge
mov
jl
add
ss
testb
mov
push
mulb
adc
jb
mov
cmp
sti
inc
out
sbbl
fcmovbe
lea
jb
rol
fstl
jmp
add
pop
and
daa
insb
xor
jge
jle
pop
iret
push
jg
mov
push
iret
ds
adc
xchg
xor
setbe
mov
mov
lock
lahf
sub
cmp
std
outsb
rcll
aam
cltd
repz
inc
dec
test
fmul
and
jmp
xchg
call
lods
cwtl
mov
flds
cmp
mov
fs
negb
imul
push
add
jno
inc
sbb
sbb
outsb
sub
stos
enter
mov
cwtl
add
cs
fsubl
mov
repz
lcall
pop
or
lret
ljmp
shl
push
dec
pop
mov
cltd
xchg
xor
ret
xlat
adc
xchg
scas
lods
dec
and
add
ret
and
ja
repnz
stc
mov
sbbb
ret
in
sbb
or
icebp
mov
lret
rcll
aas
mov
jmp
pusha
add
cld
rcr
loop
xor
sarb
inc
cmp
shrb
ljmp
stc
mov
add
or
mov
divb
push
lret
jmp
mov
fnstcw
sbb
lea
icebp
mov
push
push
inc
movsl
dec
mov
push
das
int3
js
push
daa
mov
stos
inc
pop
mov
test
int3
sti
jne
jae
adc
popa
lds
fldt
rclb
daa
xchg
sahf
or
je
or
imul
sbb
sbb
or
xchg
pop
int3
xlat
or
xchg
dec
cmp
data16
cmpsb
xchg
fisttpl
pushf
mov
test
and
adc
jecxz
mov
push
cs
aaa
out
sti
sub
aaa
fisubl
xchg
ret
and
lret
push
mov
divl
int
int
cwtl
cwtl
aad
roll
xor
mov
shl
sti
and
imul
xor
xor
pop
jmp
cmp
test
pop
mov
rcr
leave
mov
add
xchg
int3
enter
in
sub
shrb
push
xor
ja
lret
xchg
int
xchg
mov
ret
xor
aas
jg
std
in
shl
aad
scas
and
stos
and
push
xor
test
sahf
cld
adc
pop
xor
fwait
in
xorl
jno
mov
sahf
pushf
and
sbb
ja
mov
lcall
or
adc
stos
and
int
loopne
xor
add
out
sub
sub
xchg
aas
icebp
add
add
push
inc
ficoms
mov
cmp
pop
hlt
mov
xor
push
into
ljmp
ffree
testb
rclb
sub
and
sub
in
jmp
lret
dec
aam
adc
adc
push
aad
cltd
aam
sub
sahf
cmp
arpl
jl
sub
jmpw
enter
cs
jb
rolb
pop
mov
pusha
fs
push
jmp
pop
pmaxsw
mov
xor
rorb
es
jb
movsl
mov
jb
aad
out
psubusw
enter
cmp
aaa
inc
sbb
push
mov
aaa
cmp
js
pop
mov
xor
add
sbb
loope
mov
xor
push
add
lods
cmp
jecxz
loopne
push
rol
sarl
ret
inc
xlat
insb
jbe
mov
sub
cmp
rolb
scas
dec
add
movsb
mov
in
xor
mov
shll
fisttpll
inc
xor
divb
outsl
xchg
pop
ss
xchg
or
pop
jno
mov
insb
fisubl
xor
jecxz
fwait
insl
jmp
push
jl
es
out
xchg
test
mov
pop
cwtl
orps
adc
xchg
aam
xor
jmp
push
in
mov
cmc
jns
fdivs
cwtl
dec
jne,pt
sub
enter
mov
xor
roll
adc
cmpsb
test
and
adc
xchg
adc
outsl
adc
and
push
mov
sbb
stos
dec
pop
jl
mov
push
enter
shr
xor
loope
test
push
push
cld
push
mov
pop
inc
fs
inc
push
sub
loop
adc
cmpsl
shrb
insl
std
xor
dec
add
cmp
cmpsb
fisubs
or
insl
inc
sarb
std
cmp
call
and
int3
or
xor
hlt
add
popa
dec
cmpsb
arpl
sub
test
insl
sub
cmp
or
jns
mov
dec
sub
sti
dec
aad
ror
push
mov
cmp
cli
push
push
lock
sub
into
adc
in
adc
or
loop
inc
ret
mov
dec
and
xor
or
fs
aaa
test
subb
addl
arpl
cltd
adc
xchg
jno
je
cmp
xchg
lret
mov
sub
or
lcall
aas
and
rorl
add
pop
jg
push
enter
or
jle
adc
pushf
push
pop
add
jge
nop
lea
loop
mov
and
dec
shll
cli
xchg
sbb
adc
xchg
push
mov
xchg
js
out
and
fwait
clc
mov
mulb
cld
out
xchg
push
fs
jb
sub
lahf
int3
enter
inc
out
fwait
cmp
test
xlat
sti
jb
test
sbb
popl
aas
mov
inc
shll
hlt
dec
adc
popa
mov
add
pushf
xor
xor
and
push
das
daa
pop
cmp
cmp
lret
sbb
repz
test
add
mov
loope
pop
loop
jne
mov
das
insb
push
test
adc
test
test
mov
jge
jae
pop
bound
mov
xor
ror
test
outsb
iret
jae
scas
xor
lret
enter
mov
aaa
inc
or
push
sub
sti
popf
mov
aad
mov
int3
pop
inc
fcoms
mov
fwait
test
pushf
outsb
inc
fdiv
call
xor
xor
enter
lcall
in
les
call
ja
out
cmp
or
insb
inc
arpl
jle
push
xlat
fnstcw
popf
inc
sbb
ret
push
in
pop
stc
push
in
push
cmpsl
add
or
jns
push
pusha
hlt
cltd
arpl
fs
pop
repnz
int
xchg
scas
aam
out
gs
sti
dec
pushf
test
roll
rorb
cmp
rolb
mov
jle
pop
mov
inc
pop
inc
push
pusha
xor
mov
insb
xchg
xchg
jne
das
dec
sti
scas
imul
cs
jecxz
fsubrp
movsl
inc
mov
cmp
arpl
mov
mov
bound
divb
xlat
push
pop
dec
jno
repz
or
fcmovb
jle
jg
mov
add
jb
outsl
lret
dec
sar
ss
pop
jnp
fcomps
inc
cmp
int3
popa
popa
hlt
das
sbb
add
sub
test
into
pop
inc
pop
shrb
mov
xchg
push
jl
mov
fsubrl
xor
jl
push
scas
test
or
daa
dec
sti
add
bound
dec
inc
xor
rcrl
or
ror
cltd
xor
mov
xchg
out
outsb
sbb
cltd
repz
mov
cmp
or
fcoms
pop
rclb
call
mov
add
cmpsb
add
enter
es
popf
xchg
scas
sbbb
cwtl
push
sahf
cltd
cltd
aam
sbb
loopne
jp
es
xor
mov
ja
into
loopne
sbb
push
xchg
sbb
inc
pop
xor
clc
xor
adc
mov
sub
mov
or
jns
jae
je
lea
inc
in
lret
xchg
fstp
js
pop
fidivs
jmp
cs
xchg
leave
rcrb
or
xchg
int
enter
mov
or
je
jnp
inc
shrb
mov
cli
imul
ja
into
sbb
adc
and
ss
dec
xchg
ljmp
mov
dec
mov
mov
in
mov
out
ret
dec
mov
fs
cwtl
int3
or
and
xchg
sub
add
inc
fnstsw
sub
push
and
mov
fidivl
test
inc
mov
jmp
stos
push
lea
outsl
jge
add
xchg
loop
addr16
xor
push
dec
sar
mov
dec
stc
loop
out
pop
outsl
fcmovnu
push
arpl
rorb
pop
mov
pop
pop
pop
jbe
scas
adc
pop
inc
in
je
enter
icebp
dec
jbe
jp
jl
xchg
pop
sarl
out
shlb
sbb
aas
es
imul
push
lock
insb
mov
push
pop
inc
sub
jmp
sub
loop
adc
mov
adc
iret
scas
fwait
mov
aas
or
mov
cli
fcomps
aad
stos
cmp
fcomi
jge
xor
pop
adc
sbb
aaa
into
xchg
jne
icebp
lret
test
cwtl
insb
adc
stos
pop
jbe
test
xchg
lret
jno
mov
mov
inc
int
ljmp
daa
sbb
cmpsb
jle
rol
jne
ljmp
cmp
xlat
cmpsb
mov
jbe
dec
mov
push
xchg
dec
dec
or
or
push
push
xchg
sti
roll
out
xchg
bound
lds
mov
sub
cmpl
add
pop
jno
and
insb
lock
rcrl
jmp
adc
sub
mov
or
outsb
pop
and
lahf
pop
leave
and
fistl
popf
inc
repnz
xor
fsubl
out
add
xor
push
int
jo
mov
cmp
xchg
stos
jno
xchg
mov
xchg
fisttpl
test
dec
inc
mov
add
xchg
bound
loop
call
jno
pushf
cmp
loopne
dec
out
pop
pusha
jbe
dec
cmpb
loopne
dec
mov
add
xchg
inc
sub
mov
add
es
idivb
cmp
push
call
jne
lods
mov
add
dec
gs
mov
adc
loop
addl
mov
dec
repz
lods
push
stc
and
ja
mov
pop
in
movsb
dec
testb
test
rorl
sbb
xchg
or
pop
std
dec
xchg
inc
pop
int3
test
test
inc
sti
cmp
xlat
lods
stc
fcom
ficomps
inc
out
add
xorb
sbb
cmc
scas
clc
push
das
xor
or
jl
icebp
in
rcrl
sbb
adc
fldlg2
pop
mov
and
xchg
add
push
or
stc
xchg
out
hlt
rolw
push
mov
mov
push
inc
sub
repz
cmc
jo
clc
xor
in
dec
test
adc
jp
dec
insb
sub
mov
inc
dec
mov
bound
mov
xor
jns
popf
dec
lock
in
cmc
clc
cmp
jns
ljmp
pop
rcrb
pop
inc
out
test
andl
sub
mov
adc
fcompl
sarl
subl
rorl
scas
call
clc
jne
out
or
mov
stc
add
arpl
xor
jae
sbb
lcall
sbbl
push
and
inc
xlat
out
in
jg
rorl
les
out
ss
stos
and
out
enter
test
jnp
daa
movsb
xchg
mov
in
out
test
es
fdivp
jle
fwait
sahf
dec
scas
fdivs
aad
test
sub
ss
mov
mov
sub
jl
push
cmp
les
and
mov
pop
mov
pop
inc
rolb
out
mov
xor
popf
push
xchg
cmc
hlt
ss
xchg
iret
loopne
es
jmp
rcrw
jns
imul
xchg
pop
inc
xor
sub
dec
stos
adc
dec
dec
out
les
and
fwait
sti
push
fildll
push
jg
jbe
popf
jl
mov
mov
sahf
je
xchg
outsl
scas
jl
jo
adc
sub
les
mov
aam
dec
push
inc
je
push
pusha
sub
leave
test
mov
out
sub
mov
jmp
mov
daa
outsb
inc
cmp
fldcw
adc
mov
leave
in
sbb
xor
pop
xor
leave
ds
mov
xlat
scas
jge
bound
scas
mov
fstpl
or
addr16
mov
outsb
adc
add
dec
sub
ret
mov
lcall
push
popf
add
pop
mov
test
roll
xchg
jo
std
daa
mov
stos
ret
inc
push
xchg
out
pop
mov
mul
cld
and
mov
faddl
rolb
std
push
add
and
fmuls
adc
jne
cmc
fstl
adc
xchg
shlb
je
push
fldcw
shlb
loope
mov
aad
add
daa
je
pop
pop
pushf
push
pop
inc
fcoms
bnd
add
scas
mov
adc
lods
aam
divb
inc
or
cmpsl
adc
push
jns
lahf
imul
sub
scas
add
mov
and
pop
mov
cmp
adc
xchg
sbb
and
sbb
add
add
daa
gs
xchg
xor
vphaddbw
gs
mov
rcr
push
jno
enter
out
mov
mov
xor
rcrl
pop
sahf
sbb
mov
jne
jae
jno
jo
xchg
pusha
or
adc
into
dec
cltd
daa
sub
sub
mov
loope
fistl
lock
cmp
clc
dec
mov
dec
test
addr16
add
ss
sub
jl
push
sbb
stos
and
sbb
inc
cmp
xor
fwait
jno
cmp
out
inc
cmp
add
cs
mov
pusha
outsb
fcmovnb
insl
xor
xchg
es
cmpl
das
arpl
push
jb
jge
out
or
scas
inc
fildll
outsb
je
cld
adc
cld
adc
les
mov
mov
dec
cmp
sbb
ja
das
popa
pop
aaa
cmpsb
pop
movsb
shl
xor
sbb
pushf
pop
adc
lcall
aad
xchg
outsb
mov
mov
mov
xchg
sbb
xor
push
in
std
into
mov
cld
loopne
popa
mov
dec
cmpsw
in
out
shr
sarb
cmp
leave
test
fwait
lds
and
movsl
pusha
call
scas
shlb
cltd
xor
aaa
movsb
inc
inc
std
xchg
mov
test
fs
jg
dec
mov
mov
inc
dec
sub
nop
adc
mov
daa
in
repnz
outsl
or
arpl
or
xor
ja
clc
pop
cmp
cltd
or
mov
cli
into
jge
sub
rol
movsb
adc
popa
movsb
je
jg
sbb
out
jecxz
xor
notl
push
jmp
call
in
testb
xchg
xor
movsl
push
sbb
dec
in
sub
xor
movsl
hlt
cmc
sbb
fimuls
das
aam
adc
xor
stos
xchg
sub
cmp
xchg
aaa
lods
js
and
cli
push
mov
sub
add
mov
pop
push
mov
bnd
xor
nop
or
sbbb
lock
sbb
xchg
sub
pop
xchg
or
add
loopne
mov
ret
xchg
fsubrs
clc
sbb
sbb
sbb
cmc
dec
sbb
testb
jmp
jb
outsl
sbb
xor
fwait
jb
out
pop
shl
cld
push
mov
cmp
mov
push
mov
ficomps
xor
push
mov
or
bound
int
push
xchg
sub
xlat
cltd
push
int3
mov
mov
in
or
xchg
jl
jb
test
cmp
jmp
mov
icebp
push
hlt
push
or
push
fiadds
testl
fs
fs
adc
or
jge
or
push
mov
cmpsl
xchg
outsl
pop
pop
hlt
mov
mov
mov
jge
add
imul
xor
pop
popf
sbb
gs
scas
sahf
aam
or
mov
sub
out
or
push
inc
adc
push
mov
dec
imul
loop
test
xor
fcomp
lods
xchg
les
stos
jns
dec
mov
push
mov
jl
test
ljmp
out
add
popa
rep
negl
mov
push
ja
stos
imul
rorb
loopne
cs
lds
sub
repnz
push
fidivl
inc
stc
or
clc
mov
dec
jle
push
and
add
out
mov
dec
int3
ret
test
icebp
andb
divb
cwtl
push
pop
roll
dec
stos
sti
xlat
loopne
sbb
decb
lcall
loopne
xchg
aam
and
mov
cmp
faddp
aaa
call
lds
dec
push
daa
insb
mov
mov
cmc
jne
lods
imul
dec
mov
jmp
lock
pop
dec
mov
jecxz
xchg
in
push
das
jmp
mov
mov
imulb
and
lret
inc
cmp
lret
dec
mov
dec
lret
int3
int
fdivrl
jl
jbe
mov
sbb
adc
inc
add
aaa
jp
int3
mov
out
popa
aas
test
push
or
out
bound
and
and
imul
jbe
add
les
pop
aam
lret
gs
dec
cld
xor
mov
jge
xchg
stc
adc
stos
sub
fwait
jg
mov
xlat
or
mov
lods
repz
jle
jno
push
loopne
in
sbbb
call
ds
push
pop
mov
dec
xor
jno
adc
jno
dec
repnz
jae
addl
icebp
fwait
lahf
xchg
sub
xchg
hlt
pop
add
ss
dec
call
stc
or
push
aas
adc
cmp
cltd
xor
loop
pop
scas
loope
loopne
sub
push
dec
out
out
imul
and
dec
loope,pn
dec
push
movsb
jl
jecxz
out
jmp
loop
xchg
ljmp
or
inc
imul
dec
fcoml
rcrb
cmp
adc
pop
stos
cmp
sub
inc
movsb
mov
movsl
int3
or
jne
pop
push
xor
sbb
push
sub
aaa
mov
btr
cli
arpl
mov
or
pop
cli
loop
frstor
fidivrs
mov
out
xorl
jle
nop
xchg
mov
fdiv
add
mov
cmpb
pop
mov
cld
in
rorl
jmp
push
add
push
icebp
sub
jno
mov
fldcw
xchg
loope
std
data16
sbb
and
add
ret
int
andb
mov
cwtl
pop
sbb
xchg
or
lods
fcoml
and
mov
mov
cmp
or
mov
jo
and
push
pop
xchg
sub
shll
xchg
shll
add
les
jae,pt
shll
dec
mov
fcompl
insl
insb
fimuls
and
jg
sub
mov
les
xchg
or
mov
test
and
fstpt
cmpsl
ds
insb
cmp
into
inc
mov
mov
nop
daa
pop
push
rcrl
sub
pop
xchg
adc
add
mov
and
scas
addl
fcmovb
mov
sub
pop
cmp
push
or
lahf
imulb
mov
xchg
cmp
sbb
add
xchg
xchg
mov
dec
inc
xchg
add
mul
or
dec
cmpb
aad
mov
pop
adc
call
iret
inc
fwait
and
lds
cmp
rcll
mov
bound
inc
push
push
sub
fisttps
stc
stos
fidivs
rcr
fstpl
mov
pop
lods
leave
stos
mov
imul
push
xchg
mov
sahf
das
mov
inc
mov
hlt
in
shll
mov
push
mov
adc
xchg
clc
loop
add
adc
pushf
insl
dec
pop
movsl
lcall
lret
mov
xchg
mov
int3
cmc
cli
push
orl
mov
movsl
mov
test
and
sbb
jns
int3
and
in
fmuls
cmp
dec
xchg
add
stos
adc
test
dec
repnz
shl
pop
or
cmp
jbe
in
loopne
adc
je
sbb
repz
pop
cmp
lock
mov
mov
and
push
jns
mov
popf
jp
sub
and
cmp
lods
mov
es
mov
push
xchg
int
cmp
data16
hlt
rorl
pop
out
dec
mov
push
out
subb
test
push
sahf
scas
lcall
push
sub
mov
bound
dec
lahf
jecxz
jmp
adc
adc
mov
sub
pop
inc
cmp
fwait
mov
push
xchg
fwait
loopne
jp
gs
inc
xor
jmp
xchg
pop
push
testl
sub
lret
inc
pop
mov
mov
pop
cmpsb
loopne
xlat
push
mov
roll
fimuls
mov
and
xor
dec
sub
out
int3
mov
xor
xor
scas
jbe
nop
push
push
push
xchg
or
sub
stos
call
xor
inc
and
fmul
push
cmp
aad
lea
inc
repz
pop
fmul
stos
mov
mov
mov
jg,pn
xchg
test
jge,pn
mov
stos
arpl
xor
fsts
mov
jl
dec
pop
cli
test
xor
in
push
mov
lea
jae
mov
mov
nop
xchg
nop
cmp
push
xor
cmp
out
xchg
xchg
fstl
mov
imul
mov
xor
mov
fcoml
imul
adc
inc
mov
loope
adc
adc
lea
lea
mov
lcall
enter
adc
jo
sub
sbb
stos
addb
or
sbb
pop
cwtl
or
pop
scas
testl
and
std
dec
cmp
jo
jl
lret
out
mov
jns
sbb
lahf
in
or
hlt
push
jb
leave
lret
cmp
jg
and
adc
fcmovnbe
mov
sti
adc
test
mov
out
test
testb
push
pop
push
enter
popa
sbb
jmp
xchg
cmp
or
lret
pusha
push
adc
cmp
outsl
test
dec
sbb
cmp
jle
imul
lahf
sbb
pop
lds
and
insb
xchg
into
dec
nop
cli
sub
ja
sbb
jle
repz
fwait
test
nopl
outsl
data16
and
sub
mov
mov
sbb
lahf
fstl
push
mov
outsb
js
mov
pop
dec
cs
shll
test
fwait
and
ret
mov
aaa
lret
cltd
adc
dec
cmp
xor
hlt
into
std
mul
mov
push
and
xchg
test
mov
adc
inc
adc
mov
ret
xchg
push
stc
push
xor
mov
sbb
push
lock
repnz
fisttpll
cli
pop
dec
sbb
or
xchg
repz
inc
popa
sub
nop
fdivrl
call
int3
stc
pop
in
push
xchg
lahf
jl
movsl
push
loopne
push
lea
xor
lcall
push
or
enter
popa
loope
and
pop
xchg
inc
push
and
aad
cmp
mov
jecxz
push
mov
inc
xor
jp
lret
movsb
test
sub
inc
jle
out
adc
cmp
inc
repnz
out
popa
mov
jg
cmp
pop
jmp
aaa
and
fistpl
sbb
mov
jl
push
jo
push
in
mov
mov
outsl
push
xchg
mov
cmc
add
and
shl
fcoms
mov
inc
jmp
jge
mov
movsl
dec
dec
pop
rep
rcl
imul
loop
test
push
lock
mov
ss
scas
xor
xor
push
aaa
cmpsb
adc
lods
js
les
or
mov
movsb
cmp
sahf
inc
icebp
cld
out
dec
imul
sbbb
rorb
scas
sbb
inc
cmp
push
std
pusha
pop
into
mov
in
movsb
lods
xor
bound
in
movl
adc
movsb
push
adc
iret
add
adc
push
sti
cwtl
lret
imul
popa
mov
sahf
xor
xchg
test
cs
and
inc
push
jae
enter
xor
pushf
lahf
push
inc
pcmpgtd
xor
pop
mov
cmp
push
shr
stc
mov
lea
les
jg
sbb
nop
cmp
repnz
popa
iret
sti
mov
test
int
shlb
addr16
nop
sbb
mov
push
pop
xchg
cltd
sbbb
mov
cmp
jbe
ret
sub
insl
faddl
xor
pop
or
sub
mov
int3
test
mov
loop
jo
xchg
mov
out
xchg
std
jg
lea
leave
sbb
pushf
js
add
sbbb
faddl
es
xchg
push
jmp
fistpll
pop
out
arpl
mov
out
subl
mov
add
mov
aas
or
cmp
mov
sub
into
lds
dec
xchg
mov
popf
cli
je
psubusw
jg
cmp
push
adc
in
pop
sub
xor
loop
movsb
pop
repnz
ljmp
in
iret
add
daa
xchg
and
or
xchg
mov
mov
push
jo
icebp
repz
adc
cmp
xchg
es
test
mov
cmp
cmp
nop
shrl
cmp
notl
push
cmp
xchg
mov
dec
cmp
mov
insl
pop
jl
xchg
pop
hlt
jecxz
sub
add
icebp
outsb
loope
sub
jmp
push
lahf
add
pop
pop
cli
jns
icebp
stc
mov
faddl
mov
in
push
jecxz
xor
sahf
insl
aaa
popa
xor
repnz
push
mov
and
fcmove
ficoms
mov
jnp
cmc
xor
mov
xchg
add
push
mov
dec
enter
jo
jle
xor
les
test
or
jnp
lea
or
mov
xchg
add
je
push
add
xchg
cmpsb
pusha
cmpsb
pop
rcrb
inc
xor
iret
push
out
cwtl
or
arpl
scas
xor
mov
mov
dec
testl
mov
pop
pop
or
in
lock
add
ffree
xchg
shll
sti
call
movsb
cli
outsl
stc
inc
cmp
int3
mov
mov
cmpl
les
repnz
mov
xor
and
push
lds
jge
out
movsb
jae
insl
jp
lea
lret
sub
inc
sbb
test
cmpsb
andb
push
or
movsl
jmp
insl
xchg
ret
inc
push
mov
pop
push
scas
mov
adc
jo
repnz
leave
mov
sbb
rcrl
loop
int
insb
pusha
and
pop
imulb
mov
cmp
in
dec
mov
dec
add
xchg
ljmp
sub
aam
leave
bound
insb
dec
aaa
adc
popf
pop
jmp
jae
cmpsl
pop
pushf
andb
int3
push
lods
data16
mov
addl
jae
push
movsl
flds
push
repnz
jno
sti
inc
js
xchg
push
push
mov
xor
or
pop
add
popf
adc
js
mov
dec
ret
addl
push
test
cli
mov
jle
or
das
pop
subl
insl
mov
mov
out
sub
daa
inc
fstl
pushf
xchg
sub
shll
and
leave
xor
subl
or
ror
xchg
pop
cmp
xor
pop
mov
repnz
out
std
mov
pop
lret
shr
or
and
jns
call
iret
xchg
mov
out
cmp
jnp
push
jmp
adc
in
mov
inc
cmp
pushf
jo
jl
dec
inc
and
movsb
test
sti
mov
sub
mov
dec
sti
add
lea
lods
inc
and
fsubs
mov
pop
sbb
dec
shlb
scas
mov
adc
daa
sbb
sbb
mov
outsl
out
cltd
imul
lret
fdivrs
inc
push
xlat
push
movsb
scas
int3
inc
sahf
data16
or
cmpsl
adc
mov
ret
pop
out
cmp
mov
ret
add
xor
orb
popa
xor
mov
ja
int
insb
vandps
in
push
cmp
mov
inc
shll
mov
and
lock
cld
adcb
sub
loopne
cmp
jne
cmpsb
rcrl
adc
and
jmp
push
pop
adc
aas
into
xchg
add
arpl
mov
cli
adc
push
pop
dec
jle
pop
pop
stc
pushf
pop
or
pop
sarb
fsubr
add
loopne
sub
dec
sub
jle
jmp
mov
xlat
leave
jne
xorb
shll
sub
pusha
ret
cwtl
mov
xor
pop
ljmp
mov
cmp
ljmp
push
enter
pop
mov
xchg
xor
cwtl
into
sub
pop
out
and
rcll
das
or
in
pop
xor
roll
insl
xor
inc
pop
ss
dec
rcll
pushf
mov
out
in
sub
jmp
mov
inc
dec
cmpl
pop
sbb
inc
sbb
sub
js
dec
jge
xor
jmp
pop
fnstsw
fcompl
xchg
mov
nop
sbb
notl
into
pop
daa
inc
or
xor
xor
outsl
bound
lods
push
int3
aaa
in
neg
or
out
push
insl
and
jg
aas
data16
lods
push
sbb
out
jbe
cmc
test
jae
hlt
loop
pop
push
sbb
cmp
imul
xor
enter
or
mov
ret
popa
dec
popf
bound
outsb
and
cs
mov
je
dec
shll
stc
loop
inc
js
daa
dec
push
mov
adc
mov
fdiv
push
pop
cs
scas
outsl
shll
inc
popf
cmp
mov
rcrb
mov
popf
jmp
cmp
mov
outsb
out
push
jne
das
and
movsb
mov
inc
popf
jno
mov
loopne
imul
std
hlt
pop
repnz
xchg
add
mov
pusha
pop
add
orb
or
add
call
mov
adc
test
test
movsl
xchg
push
pop
addr16
cmp
adc
add
sub
imul
testb
fdivrs
sub
iret
lods
jns
mov
mov
cltd
jle
in
mov
fsts
leave
push
dec
stos
mov
out
int3
xor
mov
jb
lcall
hlt
scas
pop
mov
std
ja
movsb
inc
mov
sub
stos
mov
lock
jg
adc
scas
fisttps
jae
sub
mov
movsl
sub
mov
jno
dec
sub
ret
xor
fld
ret
mov
pop
and
xor
adc
mov
mov
scas
and
push
mov
rclb
stc
repnz
rcll
dec
dec
dec
xchg
roll
mov
mov
int3
and
adc
mov
out
cmp
decl
in
jns
ljmp
lock
mov
xor
mov
std
xchg
mov
rcrl
cwtl
xchg
sub
sbb
jge
repnz
adc
mov
test
pop
push
add
and
mov
jno
xchg
pop
mov
xor
daa
pop
call
icebp
push
shll
cmp
add
popa
negb
cmc
aam
pop
jns
jg
fbld
and
enter
pusha
xor
pop
sub
jl
mov
push
stos
inc
pushf
cmpb
push
adc
hlt
sub
aad
xchg
cmp
mov
jns
mov
dec
cmpsl
sub
iret
pop
dec
push
cmc
cltd
lds
mov
xor
mov
inc
adcl
mov
add
ljmp
scas
imul
xchg
inc
pop
xor
loop
fsts
lahf
push
dec
inc
loope
mov
push
popa
cmp
lds
mov
imul
cmp
data16
mov
cli
mov
and
aaa
jnp
push
mov
pop
icebp
mov
adc
sbb
push
mov
sbb
into
bound
ror
xor
dec
es
daa
or
lods
add
lahf
pusha
adc
and
pmaddwd
adc
or
mov
test
inc
cmp
adc
and
outsb
jo
mov
test
and
bound
push
mov
lods
adc
pop
cli
leave
jle
lcall
mov
in
scas
test
jae
xor
iret
adc
dec
imul
sahf
cmp
mov
mov
sbb
sti
cmpsl
sub
or
repz
lods
xor
insb
fldenv
sub
fildll
mov
pop
xchg
mov
or
int3
xchg
insb
addr16
inc
adc
mov
mov
popf
test
push
notl
pop
xor
and
jp
fwait
cmpsl
push
mov
and
mov
fsubp
aad
adc
pop
jp
scas
mov
fs
mov
mov
in
push
pop
pusha
or
ficoml
jle
jo
call
pop
dec
or
xchg
and
mov
or
movsl
jl
sbb
bound
call
lods
jb
cmp
icebp
stos
in
jp
sahf
sub
int3
fiadds
mov
out
add
andb
ret
int3
add
push
sub
xchg
mov
pop
movsl
pop
xor
cmp
test
xchg
pop
and
das
enter
insb
mov
orb
repz
push
test
insb
sbb
popf
lcall
xor
pop
outsl
in
sub
sbb
adc
jno
push
test
xor
mov
fwait
lds
leave
and
sahf
lret
xchg
xchg
pop
std
sbb
das
lahf
pop
fucomip
adc
data16
in
scas
and
dec
mov
fs
fs
xor
dec
jmp
popf
test
stos
das
les
cmp
lahf
lcall
js
or
push
xchg
push
mov
addl
mov
arpl
mov
xor
divl
js
and
popa
lea
lea
aam
and
push
ljmp
sti
pop
mov
xchg
stos
test
jp
mov
xor
loopne
add
mov
jae
in
jg
out
js
rcrb
mov
sub
insb
cmp
pop
jp
icebp
adc
or
xchg
pushf
xlat
stc
push
pop
out
ret
loopne
testl
gs
inc
gs
sbb
mov
push
insl
ljmp
mov
loop
inc
andb
into
out
loopne
push
into
aam
in
cmc
outsl
aam
iret
push
out
jmp
roll
xor
or
in
dec
lods
push
xchg
clc
sub
pop
mov
pop
cmp
cmp
push
shl
repnz
into
jno
push
sub
dec
nop
andb
gs
sub
pop
mov
mov
insl
push
in
pop
test
cltd
out
fwait
imul
imul
lock
fmulp
xor
jmp
dec
shlb
and
sub
ss
pusha
push
pop
or
in
mov
adc
adc
fidivrs
dec
ds
aad
jge
xor
mov
pop
lods
mov
pop
mov
fnsave
ds
in
aad
mov
ds
fstp
inc
sub
inc
sub
call
in
inc
in
popf
xchg
stc
rolb
mov
sub
pop
movsb
dec
push
push
repnz
cs
insl
in
es
bound
fadd
or
cmp
xchg
shl
ds
xchg
pop
mov
add
xchg
push
lret
jmp
ja
push
or
push
cltd
std
or
movsl
inc
xchg
xor
cli
fstps
lahf
out
mov
popa
adc
inc
jmp
sub
adc
jge
adc
jb
js
inc
cmp
in
xchg
mov
movb
out
ljmp
mov
push
imul
repz
mov
test
sub
mov
dec
jg
pop
jge
mov
icebp
xchg
mov
sbb
enter
cmpsb
stos
pop
xchg
popa
js
adc
jge
rcrb
in
lret
addl
xchg
mov
out
cwtl
arpl
rorb
mov
mov
push
cltd
neg
fildll
decl
pop
xchg
daa
mov
mov
int3
mov
mov
jl
ss
jae
xor
adc
ja
mov
aas
stos
pop
inc
in
jb
sub
scas
loopne
push
jle
or
stc
dec
and
insb
pop
and
mov
dec
jle
fs
aas
ja
pop
call
pop
hlt
adc
jg
push
ret
daa
int3
inc
icebp
mov
xchg
push
adc
ljmp
adc
xchg
iret
leave
scas
cmp
and
sbb
pop
icebp
shlb
xchg
into
mov
xchg
shlb
dec
dec
stc
add
ss
mov
int
adcb
into
dec
cmp
adc
aaa
push
popl
sbb
push
pop
cs
xchg
mov
jle
push
dec
mov
ret
imul
push
cmpsl
dec
add
test
mov
popf
out
jp
hlt
mov
adc
inc
out
inc
enter
fldenv
lret
pop
xchg
ffreep
sbb
mov
pop
pop
inc
sub
pop
fldenv
inc
or
mov
xor
testb
sub
loop
or
adc
sub
jae
outsl
pop
int3
push
paddusw
sbb
cmp
sbb
das
adc
adc
or
clc
sbbb
notl
inc
mov
jae
sub
sub
sub
mov
xor
fldcw
subb
jno
je
inc
adc
jae
stos
dec
push
lret
in
movsb
fidivs
push
je
fs
notb
sbb
pop
push
push
jbe
idivb
popf
shll
hlt
jl
cs
ss
mov
sub
xor
into
add
je
fisubs
xor
dec
sbb
imul
mov
push
mov
jbe
in
inc
cmp
sub
movsb
icebp
xchg
jo
inc
mov
rolb
inc
js
push
jnp
aad
xor
push
hlt
daa
or
add
lret
mov
xor
or
xor
shll
adc
dec
clc
lods
mov
push
sbb
push
sbb
pop
sarl
orb
js
pop
add
test
out
arpl
mov
and
in
jb
mov
outsb
or
iret
mov
orb
push
pop
cli
xlat
or
in
idivl
pop
sbb
in
sub
rcrl
mov
je
mov
mov
or
imul
xchg
call
daa
inc
sbb
gs
pushf
dec
xchg
repnz
adc
leave
cmp
add
mov
push
ficoms
add
sbbl
mov
insl
xor
in
or
sahf
out
popa
cmpsb
cmpsb
stos
cmp
insb
mov
sbb
or
sbb
es
iret
push
into
pop
cmp
pop
popa
mov
and
sbb
jnp
scas
xlat
dec
std
dec
nop
pop
jge
scas
xor
daa
mov
jnp
mov
decb
or
adc
xchg
movsb
negl
inc
aam
push
arpl
je
cmp
xchg
out
cld
rcrl
cmp
mov
dec
add
outsb
cmp
ja
pushf
push
and
inc
repnz
cs
aas
or
mov
push
xor
call
and
faddp
mov
pop
lock
mov
sbb
push
repnz
push
stos
mov
pop
ret
mov
xchg
push
xlat
mov
xchg
loopne
es
loope
or
fsubrs
cs
mov
jno
push
cs
leave
xor
aas
gs
push
fsubr
sub
mov
dec
cmp
add
dec
imul
and
or
daa
jge
out
mov
fwait
jecxz,pt
pop
pop
andl
mov
jl
inc
test
jmp
xor
push
inc
sbb
out
jp
xchg
bound
add
add
in
aam
popf
lods
adc
cmp
push
inc
pusha
scas
cmp
pop
xor
adc
push
xor
mov
push
lret
call
dec
fnsetpm(287
pusha
xor
dec
sbb
push
leave
outsl
subl
mov
inc
pushf
sub
pop
icebp
das
mov
imul
dec
lods
inc
popa
inc
inc
mov
and
pop
jo
ret
mov
and
cmpsb
pop
xor
push
outsb
js
and
dec
out
or
mov
insl
push
jmp
in
nop
or
lods
fildl
mov
cmp
and
jl
mov
pop
ror
das
cmp
sub
hlt
in
jae
lret
jle
push
hlt
xchg
out
or
and
mov
dec
ficoms
mov
pusha
cli
sbb
stc
xchg
mov
sbb
les
or
push
sti
nop
inc
ret
sub
xchg
mov
clc
ret
aas
in
mov
add
test
mov
lcall
sub
mov
mov
and
adc
icebp
mov
cmp
cmpsb
in
cmp
fbstp
push
cmp
pop
push
add
push
jmp
inc
lods
movsb
std
or
push
push
or
ja
test
std
dec
nop
mov
add
lock
lret
neg
andl
aad
adcb
mov
sub
jp
xlat
jnp
inc
lea
pop
jns
mov
jbe
mov
mov
xchg
pop
sbbb
sbb
testl
and
mov
insl
mov
xchg
and
push
xor
les
or
repnz
aad
sub
and
xchg
push
jbe
fimuls
lds
add
out
movsl
pop
hlt
fmull
add
sub
xchg
cmp
inc
loope
or
iret
jo
cmpsl
mov
add
fisttps
mov
mov
add
ftst
pcmpgtb
sub
and
mov
test
fs
scas
cwtl
fstl
push
test
clc
or
adc
inc
jb
cmp
dec
adc
sarl
stos
cmp
mov
cmp
insb
je
sahf
fistpll
jle
sbb
in
cltd
push
mov
out
aad
int
xchg
and
sub
or
leave
adc
gs
cld
cmc
mov
daa
lret
jmp
mov
cmp
lds
imul
jecxz
jne
lods
mov
inc
mov
jmp
cwtl
add
clc
sub
stos
mov
imull
pop
out
icebp
mov
or
add
aaa
xchg
xor
out
mov
ss
test
and
pop
scas
iret
mov
mov
insb
aad
ret
xchg
xchg
rolb
dec
jmp
sbb
adc
mov
dec
push
js
lahf
xchg
mov
cld
aaa
ljmp
nop
fiadds
mov
sbb
push
flds
nop
inc
mov
sarl
sbb
jg
fisubrs
hlt
adc
pop
enter
lcall
adc
shrl
cmp
mov
mull
faddp
mov
pop
mov
aad
out
adc
popf
add
jno
sbb
test
aam
mov
jmp
test
int
aam
xchg
das
jb
nop
sub
lods
inc
imul
out
js
cli
add
mov
adc
xchg
inc
pop
out
inc
js
test
xor
sub
jmp
sbb
outsl
pusha
jmp
sbb
aad
jno
mov
out
dec
xchg
clc
cmc
adc
sub
mov
or
imul
rcl
repz
jns
mov
jge
out
call
push
stc
jnp
xchg
push
dec
les
rep
adc
add
into
or
outsl
jmp
adc
icebp
in
xchg
adcl
lea
or
sub
add
insl
int
cmp
arpl
rcrl
enter
lock
into
repz
push
test
sub
add
push
pop
insb
int
es
mov
xchg
int3
lea
lcall
repz
enter
insl
sbb
xchg
xor
lcall
jbe
xorl
lcall
movsl
mov
mov
ret
push
and
push
mov
add
dec
sarb
fmuls
pop
dec
loopne
adc
mov
fldt
fdivrs
adc
sti
xchg
or
out
jns
sub
add
mov
out
shlb
sbb
push
inc
add
jge
mov
mov
pusha
mov
fidivl
mov
popa
add
cmp
ja
scas
sbb
xor
lret
mov
call
sub
jnp
xchg
xchg
fs
pop
test
das
mov
out
push
insb
icebp
mov
outsl
sub
dec
dec
or
xor
aam
cli
cld
fucom
xlat
call
leave
clc
dec
fsts
les
jecxz
outsb
xchg
xor
pop
nop
test
je
cmpsb
mov
sti
sub
ljmp
and
cwtl
sub
xchg
cltd
das
pop
or
sub
pop
scas
lahf
adc
mov
data16
sbb
add
cmpsb
inc
ja
cmp
loope
inc
sti
dec
ja
stc
pop
popf
in
adc
and
sbb
enter
add
push
andl
sbb
xchg
jg
fiaddl
js
ss
test
jns
fdivl
into
dec
jmp
jne
jle
fsubl
push
jae
outsb
xchg
jno
aaa
ret
lret
jl
push
cmpsb
nop
fdivrl
xchg
imul
add
mov
popf
and
pusha
cmp
cmpps
xchg
in
push
cmpsl
mov
imul
pop
jge
negl
and
cwtl
outsl
out
mov
sub
sbb
xorl
roll
fadds
inc
mov
mov
fs
daa
or
cmp
loop
imul
or
out
shll
lcall
pop
sub
push
xchg
add
jg
cmp
out
mov
gs
outsb
lcall
int3
xchg
test
push
xor
inc
cmp
testb
mov
orb
ds
jns
sub
add
jg
popa
test
rcrb
test
mov
add
sahf
adc
pop
aas
jp
cmp
test
push
cwtl
adc
cmp
data16
ds
sbb
xchg
fucom
das
dec
xchg
or
in
jbe
call
jns
pushf
push
push
movsl
iret
push
jmp
iret
jne,pt
inc
fidivl
iret
cmpl
dec
rolb
outsl
xor
loopne
and
mov
inc
xor
jns
das
xor
mov
sbb
stos
pop
aaa
mov
push
cmpsl
ss
stos
mov
mov
hlt
ljmp
sti
stos
mov
aam
cmp
sbb
rolb
cwtl
fstps
push
repz
out
sub
cmp
ret
sbb
dec
outsl
fisubl
adcb
into
cltd
xlat
in
pop
aad
and
jmp
or
sbb
stos
mov
lods
lea
adc
xchg
push
push
jmp
mov
adc
sub
out
xchg
or
mov
mov
jg
sbb
dec
lods
aad
daa
std
xor
inc
icebp
mov
fstpl
xor
lods
or
out
hlt
jecxz
cmpsb
cltd
shll
cmp
inc
inc
mov
lods
mov
xor
in
test
mov
ret
sti
inc
clc
mov
sub
adc
xor
pop
jae
push
iret
jecxz
push
sub
fidivrl
mov
adc
add
inc
sub
icebp
insb
dec
or
call
jbe
push
jb
es
mov
xor
lock
movsb
mov
lea
mov
insb
ret
jne
dec
in
push
mov
mov
pop
mov
popa
push
jmp
xchg
mov
dec
mov
fisubs
aad
jbe
push
inc
mov
popf
test
mov
out
cmpsl
shll
dec
xchg
es
out
mov
xchg
push
sub
cmp
push
shl
push
daa
jnp
inc
lock
push
orb
cmp
xchg
out
mov
ret
xorb
aad
mov
aas
push
adc
lock
jb
sahf
sub
cli
jmp
mov
push
test
jns
cmp
stos
cmpsl
jne
adc
addb
cs
mov
test
imul
cwtl
push
test
jmp
out
sti
fmuls
pop
fs
jns
and
and
cltd
pop
pop
xor
push
in
rorl
mov
cmp
fsts
sar
stc
aas
cmp
adc
aam
call
dec
xchg
cmp
jns
cld
fldcw
lcall
fcomp
mov
jno
test
shl
mov
mov
cmpsb
lret
and
fcoml
stc
pop
sbb
mov
divl
sahf
lea
or
xor
sbb
cmpsl
loop
mov
scas
fwait
mov
mov
repz
push
mov
jnp
xchg
das
rclb
pusha
and
adc
lds
iret
test
or
pop
mov
leave
cmpsl
movsl
jno
jno
es
loopne
outsb
jg
mov
repnz
push
adc
aam
rcr
cmp
pop
and
pop
lret
out
sarl
rorl
inc
lock
xchg
dec
pop
test
mov
call
push
add
cmp
imul
push
xlat
pop
push
push
aad
flds
js
pop
sub
dec
aas
insb
and
mov
stos
sbb
jbe
mov
notl
pop
imul
push
les
outsl
pop
lret
cmp
push
lcall
lods
push
je
mov
test
or
jns
jae,pn
adc
leave
cmp
divb
popf
add
jne
fdivl
rcr
sub
lods
es
test
push
inc
sub
loope
movsl
sub
les
sub
push
push
ret
lcall
test
ret
jg
sbb
dec
inc
lods
out
pop
pusha
lea
loop
mov
mov
lds
adc
cmp
in
nop
lds
mov
cli
jmp
repz
or
fstpl
int
jno
or
cmp
pop
insb
mov
cld
popa
mov
ss
scas
mov
and
dec
or
lahf
xor
outsb
icebp
inc
jnp
mov
adc
cltd
stos
adc
sbb
rclb
xor
shl
std
cli
push
divl
cmp
mov
and
mov
mov
xorps
aas
pop
in
xor
pop
lds
lods
inc
loope
or
movsl
addr16
sbb
outsb
clc
dec
ss
mov
jp
pop
ja
xorl
cwtl
mov
add
jl
push
add
fistps
push
jge
pop
shlb
mov
test
movsl
dec
dec
ffreep
cltd
xorl
fucom
sbb
stos
arpl
leave
fsub
shll
out
jb
sub
fildl
sbb
cmpsb
sbb
pop
mov
in
adc
push
lods
ret
push
mov
lea
mov
std
dec
bnd
xor
rcrl
sti
or
mov
cmpsb
out
pop
dec
or
imul
ds
stos
int3
push
inc
sbb
or
shrl
dec
and
dec
divl
inc
xor
es
mov
and
add
xchg
outsb
into
sbb
je
fidivrl
aas
movsl
out
aad
push
and
aaa
in
push
sub
mov
pop
xor
and
jp
or
mov
add
mov
push
stos
enter
push
lret
mov
lds
xchg
sub
or
dec
jmp
mov
sar
and
cmc
cmp
popf
mov
aam
ret
int3
stos
jnp
scas
repz
push
cs
fcoms
pop
pop
mov
sub
mov
aaa
rcrb
mov
sbb
test
cld
jmp
outsb
repz
xchg
mov
inc
and
int3
jp
mov
loope
lcall
mov
inc
in
call
lret
out
and
sub
xchg
adc
or
nop
push
int
lahf
incb
fs
xchg
xchg
jno
adc
xlat
outsl
push
std
stc
xor
inc
push
decl
jle
nop
addr16
sub
mov
mov
int3
pop
fdivrl
rorl
arpl
xor
dec
mov
jne
adc
fmull
add
cmc
pop
inc
jge
and
mov
ficoms
cmc
js
push
inc
fdivs
pop
xchg
fsubs
popl
mov
jne
popa
bnd
ret
jl
and
mov
add
lods
leave
in
pop
fst
in
int
pop
adc
ds
fsts
mov
inc
or
or
dec
imul
pop
or
push
push
lds
enter
movsw
or
in
xor
jg
je
mov
jl
sbb
enter
push
pop
orl
scas
dec
sub
shrd
pusha
ss
iret
pop
xchg
mov
fadds
scas
les
pusha
ret
add
lock
shlb
adcl
addr16
out
gs
mov
out
lea
cmp
jle
xlat
jae
or
mov
inc
sub
mov
sbbb
and
arpl
lods
jno
mov
mov
push
in
clc
jbe
dec
sbb
xor
fdiv
mov
xchg
xchg
inc
adc
cli
sbb
mov
loopne
sub
cmp
pop
daa
pusha
cmp
mov
test
push
xchg
adc
xor
not
xchg
mov
bound
xor
mov
ret
test
or
out
sbb
and
rcrb
sbb
mov
adc
xchg
or
sbb
out
cmp
pop
fs
sbb
pop
push
fiaddl
lods
xchg
rolb
repnz
add
push
or
inc
push
and
jns
mov
mov
cltd
inc
mov
mov
push
lret
adc
xchg
dec
xor
and
cmp
pop
adc
shl
mov
sbb
or
andb
xlat
mov
pop
sub
cmp
pop
push
lods
rorb
cwtl
pop
test
push
fwait
jnp
adc
adc
xchg
cvttps2pi
or
iret
loop
mov
jo
dec
mov
or
adc
mov
jp
outsb
inc
sub
test
ljmp
jno
add
addr16
sub
xchg
xor
dec
stos
scas
outsb
mov
push
push
lock
jae
lea
lret
mov
dec
lret
popa
push
sub
xor
lods
rclb
incb
dec
pop
cmp
adc
fwait
int
cmp
popa
inc
neg
aam
sub
sti
pop
into
mov
xchg
pop
cld
out
fldl
push
mov
push
out
std
jae
xchg
inc
out
sbb
push
aam
xchg
aas
test
cmp
fucomp
dec
hlt
popfw
adc
dec
pusha
push
mov
jle
clc
push
dec
dec
jl
pop
jno
or
cltd
fstpt
push
sub
test
inc
xchg
push
mov
lret
les
scas
clc
mov
loopne
pop
push
lea
int3
into
sub
lea
sub
or
add
xlat
dec
mov
push
push
shr
in
popa
stc
les
xlat
stos
mov
sbb
cmp
lock
jmp
imul
add
inc
xor
xchg
fidivrs
add
loopne
lahf
jb
aam
stos
jp
jmp
pop
push
mov
ss
mov
incl
xchg
pop
lock
xchg
adc
lds
mov
insb
lock
sub
insl
adc
dec
mov
aaa
add
ret
faddp
bound
loop
stc
xor
mov
sbb
lods
in
jnp
or
push
shr
push
aam
or
sbb
and
push
data16
mov
and
sub
push
mov
dec
frstor
mov
push
add
jb
fsubrl
aas
fs
mov
leave
jno
mov
adc
outsb
loopne
xchg
test
leave
add
inc
sub
sub
lret
dec
mov
insb
inc
imul
jp
je
rcrb
fstps
pop
sub
jnp
notl
enter
jp
sahf
xchg
movsl
push
test
pop
out
mov
mov
aaa
notl
ds
rorb
adc
in
loop
lods
mov
iret
jmp
lcall
mov
mov
push
add
mov
gs
jb
sbb
xor
addb
lret
cltd
pusha
popa
mov
mov
mov
rolb
sub
test
daa
xacquire
xchg
lock
ret
adc
sub
adc
fstpl
sub
shll
mov
cmpsl
xchg
inc
rep
mov
outsb
push
gs
pop
adc
test
jmp
jne
cmpsl
pusha
xchg
ja
inc
push
push
inc
inc
fidivrs
pop
dec
sub
xchg
adc
push
stos
jecxz
mov
jge
push
fimuls
test
xchg
and
daa
xor
sbbl
mov
sbb
je
lock
popa
das
das
cwtl
daa
jmp
jnp
hlt
jp
mov
cli
mov
sub
adc
lret
add
daa
mov
adc
dec
sar
mov
pushf
sub
sub
js
inc
fsubs
hlt
mov
arpl
clc
dec
inc
loop
repnz
cwtl
insl
das
push
repnz
jmp
fsubr
sub
ljmp
xchg
stos
or
xchg
xchg
cwtl
mov
aaa
xchg
mov
sub
lods
or
and
ret
dec
pop
cs
mov
xchg
fadds
popf
iret
jecxz
arpl
cwtl
mov
xor
frstor
mov
xchg
les
into
sbb
cmp
rolb
xor
mov
or
push
xchg
out
movsl
sbb
dec
test
out
test
push
cltd
xchg
in
push
push
das
push
inc
sub
jmp
push
into
repz
in
inc
mov
push
push
cmp
sbb
sub
test
fscale
in
dec
in
xchg
jg
xchg
or
inc
repnz
jno
jbe
repnz
das
pop
push
dec
sbb
mov
add
mov
cli
push
inc
int3
dec
pop
cmp
mov
sbb
test
push
and
inc
pop
in
push
lret
mulb
jp
pushf
push
push
pop
mov
stc
in
jle
stos
sbb
jl
dec
xlat
push
in
call
add
leave
xlat
mov
vmwrite
xchg
jg
js
stos
push
clc
pushf
jecxz
mov
in
pop
shll
shrb
dec
push
mov
leave
sbb
call
addr16
cmovge
test
pop
mov
jno
insb
movsl
mov
cmc
or
cmp
add
mov
mov
push
xchg
jmp
mov
xchg
pop
mov
cld
roll
fldcw
out
es
jg
cmpsb
rcrl
xchg
adc
insb
iret
ss
push
sahf
sbb
icebp
cmp
movsb
mov
fdivrs
sub
and
loopne
mov
bound
sahf
movsl
or
sarl
push
ds
cmp
mov
mov
sbb
jge
enter
insl
stos
outsb
dec
mov
sub
pop
sti
lea
in
je
aas
lret
stc
ficoms
and
adc
lcall
rol
mov
push
je
fldenv
fiaddl
mov
inc
cli
adc
js
mov
mov
jno
out
adc
in
lods
add
out
loope
xchg
icebp
xor
fwait
sub
lock
rolb
push
xchg
cmp
xchg
ljmp
cld
cmp
add
add
jns
subl
sti
and
or
dec
cmp
lea
lock
adc
movsb
pop
xor
mov
adc
mov
sbb
arpl
pop
lds
adc
mov
cltd
nop
adc
mov
sub
imul
sarb
loopne
pop
xchg
push
push
stos
mov
pop
imul
scas
mov
sbb
pop
dec
xlat
inc
or
lods
in
cmp
lea
pandn
cmp
sub
ret
iret
rorb
test
out
imul
or
and
fistpl
dec
aaa
xor
add
call
loope
mov
stc
or
or
adc
test
sbb
sbb
ljmp
mov
in
std
lahf
scas
cmp
push
mov
loope
mov
imul
aad
test
mov
sbb
xchg
mov
int3
ljmp
and
mov
jl
ljmp
fadds
pop
sbb
arpl
test
cmp
or
push
add
push
jl
mov
outsb
pop
arpl
push
int3
insb
pop
aad
push
pop
adc
rcll
lret
xor
imul
xor
stos
sarb
cmp
sbb
repnz
stos
cltd
push
insl
sbb
push
pop
cli
jae
pop
in
out
out
sub
add
adc
pop
adc
xchg
jbe
iret
adc
dec
in
jge
jo
scas
xchg
ja
cs
jle
mov
xchg
insb
std
imul
jae
jno
xor
cmc
mov
mov
push
jne
repz
cmp
jnp
cmp
or
pop
push
scas
cmc
mov
adc
cmp
frstor
jbe
mov
loopne
cmp
add
xor
lds
add
popa
mov
stos
push
int
or
rorl
xlat
jne
lea
dec
jo
test
xor
fldcw
or
outsl
repnz
mov
lcall
jae
adc
fbld
fnstsw
cwtl
mul
xchg
adcl
sti
loopne
insl
cmp
call
inc
inc
dec
cmc
jns
in
push
jl
inc
sarl
or
jnp
mov
dec
cmp
jecxz
rcl
lea
adc
cmpsl
push
in
adc
and
pushf
xchg
ret
push
xchg
sbb
fidivs
test
dec
push
out
adc
push
fcmovne
in
sub
lock
popf
adc
out
rcll
aaa
scas
or
xor
test
xchg
or
push
sub
adc
cmovg
addr16
out
or
adc
dec
je
pop
ljmp
and
jge
xor
xchg
pop
push
ret
mov
add
or
loope
cmp
jns
xchg
cmp
or
gs
cmp
out
lds
dec
imul
div
addr16
push
test
mov
test
mov
cmp
imul
jb
mov
adc
xor
jecxz
or
sbb
xchg
xor
inc
mov
loop
push
stc
mov
gs
cmpsl
cmp
add
xchg
ss
aaa
xor
fnstcw
adc
xchg
inc
mov
ja
sbb
mov
mov
sbb
pushf
cmpsb
leave
jmp
jo
dec
dec
movsb
or
adc
pop
in
xor
arpl
adc
inc
add
add
clc
enter
sbb
pop
dec
rcr
cmpsl
sbb
xchg
xchg
fimull
jecxz
mov
xorb
mov
jecxz
test
cmp
pop
mov
mov
fwait
stos
mov
fwait
test
pop
movsl
mov
inc
into
filds
repnz
dec
add
xchg
lgs
out
mov
cmp
inc
pop
push
mov
inc
es
std
daa
cmc
roll
dec
and
mov
sti
dec
mov
or
xchg
xor
xor
fisubrl
push
adc
repz
lcall
inc
add
fmuls
ds
xchg
daa
mov
out
pop
push
nop
adc
adc
test
imul
movsb
das
cmp
ds
aaa
das
fstp
xor
fldt
das
in
shr
int3
popl
jnp
sub
inc
mov
stos
lret
stos
mov
mov
cwtl
in
or
fiaddl
push
mov
test
movsl
cmpsl
jle
and
push
add
add
pop
lahf
les
test
addr16
andl
mov
repz
stc
mov
jmp
push
pop
pop
inc
jns
add
mov
sub
js
mov
call
inc
in
mov
push
push
ret
lock
add
aaa
mov
stc
inc
push
repnz
cmp
push
notb
cmpsb
jmp
adc
jne
sbb
popf
pop
or
mov
xor
jns
out
aas
or
enter
jecxz
daa
cmp
pushf
imul
fbstp
pop
jmp
sbb
pop
rorl
aad
stos
jle
mov
fcoml
sbb
fisttpl
adc
and
aad
or
je
rep
popa
jae
mov
sub
jo
or
push
in
gs
btr
add
pop
cmp
je
adc
cmp
std
pushf
int3
inc
xchg
push
xchg
or
jnp
cld
lock
mov
xor
inc
divl
iret
jns
out
dec
sar
jg
push
mov
cli
pop
out
xchg
add
fcmovbe
sub
shrb
stos
rcll
push
xchg
std
xor
dec
lahf
cmc
push
imul
ficompl
pop
mov
mov
addr16
inc
popa
out
fwait
sbb
icebp
jge
mov
outsl
nop
fldenv
or
and
js
xchg
outsl
lcall
and
rcll
and
lret
inc
push
add
fimull
jno
jb
sub
inc
cmp
sbb
inc
outsb
stos
xchg
jmp
adc
push
mov
clc
jns
mov
lcall
out
xchg
call
lret
sub
jmp
add
pop
mov
test
ret
lods
shl
inc
pop
outsl
xor
or
cmp
loope
mov
clc
mov
rorb
outsb
imul
cmp
ja
sbb
fsubl
fldl
or
pop
inc
cltd
aad
mov
add
dec
adc
icebp
pop
popa
and
and
sub
lahf
setg
aam
lret
sarb
lcall
adc
jne
dec
cmp
sarl
bound
filds
das
jns
adc
and
mov
shrb
jne
daa
fs
out
bound
dec
mov
clc
call
dec
les
aad
cs
in
mov
dec
leave
and
sbb
stc
add
mov
stos
pop
push
cmp
xor
inc
jle
fistpl
imul
mov
mov
cmp
imul
xchg
dec
adc
sub
sub
popa
in
mov
aaa
push
scas
mov
lock
mov
lahf
mov
mov
and
fwait
jl
pop
idivl
mov
jnp
xor
cwtl
mov
inc
icebp
jne
sbb
inc
outsl
mov
jecxz
push
sub
add
leave
ret
lds
sbb
xlat
stos
inc
jbe
jns
enter
and
movl
jecxz
sbb
mov
lcall
xor
pop
fcomps
call
icebp
fcomip
push
nop
push
sub
scas
mov
jns
xchg
scas
cwtl
enter
mov
inc
movsl
cmp
mov
push
xlat
inc
mov
es
or
jnp
jge
ret
push
ficoml
pop
add
sub
adc
out
cwtl
dec
xchg
mov
scas
push
push
dec
mov
in
scas
div
in
inc
leave
rcrb
mov
int
push
ja
mov
das
ja
jp
adc
subl
repnz
inc
jo
ja
nop
mov
das
iret
pushf
pop
sahf
and
mov
fwait
out
push
jns
push
mov
out
xchg
call
sahf
sub
sti
loop
pop
sbb
mov
push
push
dec
out
jo
cmp
sbb
call
mov
xchg
sbb
dec
lds
js
mov
inc
mov
repz
out
mov
sub
fcompp
dec
jns
push
scas
mov
jo
push
add
lahf
jne
adc
jg
int
in
sbb
dec
imul
scas
sub
in
xor
lock
sub
lock
push
shll
div
push
int
xlat
dec
push
pop
inc
imul
sub
pushf
lea
cmp
lcall
ja
mov
adc
js
pop
cmpsb
pop
mov
or
inc
ret
and
dec
pop
sbb
xchg
lea
fcomps
arpl
cs
mov
cmp
push
mov
pop
xchg
mov
push
ljmp
jp
pop
sub
cwtl
adc
push
insl
test
repz
jecxz
ljmp
outsb
cmp
int
shlb
into
jno
negl
sbb
or
cmp
mov
outsl
xchg
and
ret
adc
lcall
mov
push
test
mov
push
fldt
int
mov
inc
cwtl
daa
cmp
xlat
sbb
jno
pushf
fisttps
int
dec
fs
xor
loop
add
daa
xor
data16
fwait
insb
jne
pop
fcompl
xor
xchg
pop
std
icebp
mov
loopne
movsl
ja
jne
mov
push
inc
scas
mov
insl
sbb
adc
push
xchg
popf
popf
pop
jecxz
sub
rol
scas
pop
xchg
std
pop
jns
mov
and
add
jp
push
sub
hlt
dec
add
arpl
out
cmpsb
mov
std
scas
sbb
mov
xchg
popf
outsb
pop
push
pop
pusha
cmp
fwait
sbb
pop
test
lock
and
test
sbbl
int3
test
rcll
sbb
in
test
add
dec
mov
imulb
imul
outsb
sub
stc
loopne
sub
mov
xchg
clc
cmp
popf
or
shlb
movsl
sbb
dec
int3
inc
loopne
mov
pop
movsb
popf
mov
lret
andl
test
adc
es
push
pop
sbb
jnp
push
test
mov
push
push
fcomps
push
mov
cmp
inc
lahf
mov
lcall
mov
rcl
lret
lret
mov
inc
je
rcl
xchg
cmp
jmp
loop
sub
lret
mov
mov
mov
push
nop
mov
daa
xor
cmpsb
das
inc
repnz
or
xor
fistps
adc
repnz
faddl
xchg
dec
ret
int3
adc
adc
xchg
mov
jno
cmpsb
cld
and
fiaddl
aas
mov
aad
mov
call
xor
popl
pop
sti
xor
adc
pop
cli
pop
imul
loope
stos
and
xchg
aaa
mov
mov
and
dec
or
daa
mov
mov
jnp
cmp
into
cmp
mov
push
xlat
les
stc
jns
cmp
lea
push
movsl
movsl
push
cmc
cld
clc
pop
sub
adc
and
sbb
insb
xchg
dec
pop
pop
sub
test
push
loop
jmp
adc
push
cmpsl
pop
adc
imul
andl
and
inc
in
mov
mov
pop
dec
loope
cmp
push
cltd
jo
xor
lret
cmpb
adc
sub
shll
mov
ret
jp
add
call
jns
mov
stos
fdivs
lock
or
lcall
cmp
sub
dec
mov
ret
push
iret
addr16
mov
pushf
fucomp
es
test
test
scas
popa
dec
push
ret
xchg
or
movsb
lcall
lcall
xchg
lret
cld
jg
out
cli
mov
js
repz
cmp
dec
inc
je
ret
in
xchg
mov
shll
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
xchg
sbb
pop
push
or
push
aad
loopne
fcomps
loopne
outsb
cmp
dec
mov
mov
icebp
jo
mov
sbb
mov
cmp
cmp
cmp
xor
in
pop
into
mov
divl
or
popa
mov
std
dec
mov
sahf
ds
mov
xlat
cmc
jb
adc
inc
in
cmp
mov
orb
and
push
mov
and
add
inc
stos
addr16
cltd
mov
lods
adcl
popa
cmp
or
add
int
push
push
je
jp
push
lods
pop
jle
add
in
cld
pop
testl
mov
dec
jbe
lea
fisttpl
mov
dec
mov
outsb
out
lret
lret
pop
pushf
dec
jbe
mov
push
imul
out
inc
add
push
es
roll
fwait
adc
and
shlb
mov
xchg
jae
fdivrl
sub
out
fcmovnb
pop
lret
test
push
dec
sub
mov
or
pop
jle
idivb
cltd
xchg
cmp
outsb
pop
pusha
jns
mov
addl
add
loopne
dec
xor
xor
lahf
mov
pop
sub
adc
sub
jae
insl
scas
std
shrl
in
dec
cld
mov
jb
add
xchg
cmp
insb
sbb
mov
and
xchg
inc
fildll
inc
imul
outsb
test
std
sub
cld
mov
push
incb
cmp
dec
call
or
test
daa
and
outsl
lcall
fistps
cmp
sub
pop
es
and
xor
stos
push
in
and
sahf
lea
inc
jo
jecxz
addr16
mov
fidivrl
add
cmp
lods
pop
inc
mov
mov
cmc
pop
cwtl
test
adc
addr16
jbe
mov
mov
and
fs
jmp
mov
int
movsb
mov
call
inc
adc
inc
jmp
lret
das
iret
xacquire
mov
jmp
sub
adc
stc
insl
and
or
mov
add
mov
ret
iret
lods
shrl
dec
clts
push
loopne
in
fiadds
sbb
sub
test
insl
jmp
in
cmc
and
cmpl
and
iret
outsb
aaa
cmp
push
cmp
aad
add
in
fidivrs
jle
cmp
or
cmpsl
and
adc
ret
inc
xchg
lahf
repz
loop
mov
pop
aas
sbb
adc
pop
test
scas
daa
nop
iret
es
iret
ds
int
pop
sbb
and
std
mov
xchg
ljmp
mov
cmp
movsl
cwtl
xor
std
rol
leave
loop
je
ja
sbb
xor
mov
popa
adc
inc
jp
jle
pop
clc
test
sbb
push
mov
push
sub
ja
adcb
mov
dec
fwait
mov
sub
fwait
insl
and
add
mov
sub
inc
dec
sbb
pop
mov
lods
inc
jmp
add
mov
cmp
lret
push
jl
in
mov
sbb
pusha
scas
mov
cld
ret
movsl
clc
dec
nop
div
rcr
fidivrs
xor
xchg
dec
adc
adc
add
fldcw
mov
xchg
cmpsl
mov
fimuls
lds
adc
cltd
imul
push
cltd
cli
in
pop
lret
fmul
ror
je
mov
xor
or
les
add
fisttpll
push
cmp
outsb
out
fnstcw
rol
adc
ja
xor
pop
aaa
ror
pop
fisubl
sarl
mov
lds
push
cli
jo
dec
stos
popf
xor
inc
test
xor
cltd
cs
clc
lret
push
push
adc
adc
push
and
out
inc
pop
in
mov
int3
lods
pop
imul
imul
xor
aad
cmpsb
scas
aad
loop
xchg
cli
das
sub
mov
dec
rcrl
imul
xchg
push
xor
filds
or
out
and
cwtl
add
push
imul
fcoms
clc
enter
sbb
adc
arpl
mov
lock
push
xchg
push
mov
sbb
ret
ss
loop
add
jle
push
xchg
inc
or
push
mov
outsl
pop
fdivs
xchg
sub
sahf
fidivs
add
ret
xchg
fisubrl
mov
pop
mov
sub
ds
enter
ret
aaa
xchg
and
out
loopne
mov
jl
mov
movsb
cmpxchg
adcl
in
add
sub
mov
ja
es
mov
ss
lahf
loop
cmp
add
cmp
cmp
push
out
lcall
inc
iret
or
out
in
push
sahf
pop
jmp
cmp
add
push
and
dec
cmp
je
pop
mov
mov
mov
bound
xchg
or
dec
scas
mov
test
test
insb
and
aaa
out
mov
pop
aad
inc
mov
aam
inc
in
shr
jno
jge
xor
cmp
mov
push
jge
or
gs
sahf
ja
and
std
cmp
cmp
lcall
lea
call
jecxz
shll
jmp
cmp
sbb
jb
and
daa
mov
jge
add
or
repnz
je
cmp
inc
inc
aad
jno
jo
mov
mov
scas
lcall
pop
mov
ds
xlat
pop
data16
pop
mov
jbe
int3
sub
fs
pusha
dec
cmp
roll
jecxz
loop
inc
cmp
mov
smsw
call
xlat
scas
fldt
pushf
jae
aaa
pop
mov
cltd
movsb
ret
jb
in
rol
xor
inc
push
arpl
dec
iret
mov
cmp
jo
loop
mov
aam
sbb
dec
loopne
xchg
adc
adc
fwait
or
cmpsb
sub
jbe
test
pop
sub
shll
cld
in
and
loopne,pn
jbe
push
sub
ds
out
cmpsl
ret
movsb
cmp
mov
mov
popf
xor
aas
and
pop
mov
jae
pop
dec
clc
xchg
shlb
and
sbb
das
jge
pop
dec
pop
lods
testb
imul
xchg
out
adc
xchg
dec
enter
xor
popa
mov
js
xchg
and
ss
or
sarb
jo
cmp
mov
cmp
xor
dec
add
or
xchg
cmpsb
fidivrl
push
cs
aam
ja
sub
jl
or
loopne
pop
inc
dec
add
les
lods
fwait
sbb
or
outsl
cmc
pushf
xlat
cmp
int
xorb
fidivrl
cmc
mov
mov
mov
aad
xchg
loopne
and
in
aam
mov
lcall
cltd
daa
xchg
fdivs
cmp
sbb
push
lcall
cmp
xchg
sbb
dec
lcall
nop
test
lcall
or
inc
repz
leave
inc
sbb
xchg
add
pop
mov
loop
aaa
ret
cmp
aaa
std
mov
pop
jnp
sbb
sti
aaa
cmpsb
out
pop
inc
mov
pop
aaa
jge
out
out
jle
lock
insb
push
and
bound
mov
outsb
lds
push
les
aaa
out
xorb
cld
mov
inc
loope
daa
movsl
inc
lret
std
in
push
mov
and
fs
cld
std
dec
sbb
inc
sbb
movsl
decb
cli
cmpsl
outsl
cmc
sub
cmp
or
sub
stos
push
hlt
jb
push
jmp
mov
or
xor
aad
or
xchg
ja
or
pushl
ljmp
sbb
dec
shlb
sbbb
ds
adc
lea
into
jbe
bound
in
jge
cmp
pop
in
xchg
out
cmp
pop
in
loope
repnz
sarb
or
xlat
push
mov
xchg
push
dec
adc
stos
sti
stos
cmp
push
loopne
clc
pushf
stos
in
dec
mov
cmp
bound
mov
dec
or
cmp
movsb
add
inc
adc
ror
jmp
mov
stc
movsl
rcrb
lahf
enter
pop
fisubrl
push
adc
inc
mov
daa
add
cmp
cmpsb
push
and
add
fbld
cmp
aas
sbb
and
jl
in
pop
xchg
xlat
adc
adc
pop
loope
mov
sti
sbbb
xchg
cmp
data16
hlt
jle
iret
mov
popl
into
cmpsb
push
fbstp
stos
inc
cmp
js
jmp
lahf
mov
and
ljmp
repz
jle
cli
rcrb
cmp
inc
rcrb
movsl
fidivs
or
push
in
adc
xchg
movsb
sub
jl
pop
adc
inc
lods
mov
gs
push
repnz
enter
sub
call
inc
push
push
outsb
cmp
std
inc
decb
mov
adc
pop
mov
enter
dec
fldenv
mov
mov
xchg
mov
outsl
jne
andl
andl
mov
jnp
push
xor
in
sub
dec
std
jns
dec
popf
mov
mov
movsl
outsb
lods
jne
out
sbb
dec
stc
scas
jl
adc
cli
arpl
popa
hlt
into
jmp
or
adc
inc
sub
daa
adc
sub
pushf
test
lds
loope
mov
fnsave
sti
adc
dec
push
sbb
movl
fbld
subb
int3
andb
mov
int
adc
push
je
testl
xchg
negb
repz
sbb
cmpsb
cwtl
lock
push
push
xchg
lcall
mov
das
sub
bound
jg
xchg
xor
mov
and
sbb
or
pop
clc
data16
fsubrp
pop
push
add
hlt
sub
iret
in
roll
xor
add
out
pop
xchg
jp
out
xchg
or
or
das
lret
je
inc
push
sbb
cltd
mov
mov
xchg
lock
adc
outsb
inc
xor
pminub
sub
xor
mov
adc
roll
or
rcrb
dec
repnz
test
jno
sub
cwtl
pop
rcr
or
in
sub
cltd
jo
jnp
mov
add
mov
pop
rcll
mov
clc
xor
adc
sub
mov
jbe
mov
lgs
repz
out
sbb
loop
mov
iret
dec
fwait
jge
sub
mov
mov
subl
cld
xor
pushf
andb
mov
push
pop
jne
xor
das
mov
int3
addb
repz
cmc
clc
ds
sahf
mov
cltd
push
ds
sahf
iret
mov
cwtl
popf
clc
divl
sub
and
add
dec
cmp
lods
fsubrl
not
fld
xchg
dec
adc
push
je
rcr
pop
data16
dec
sarl
fwait
pop
push
leave
push
or
cmp
adc
ret
pop
bound
mov
mov
dec
xorb
mov
iret
sub
xor
sub
stos
outsl
loope
mov
add
fsub
add
mov
jns
adc
daa
std
clc
loope
ret
stos
outsb
cwtl
pusha
mov
and
sti
add
out
das
fs
roll
mov
daa
ss
fwait
pop
xor
mov
int3
xor
out
dec
lods
mov
pop
and
outsb
pop
in
negb
jecxz
jp
je
mov
insl
xlat
sub
jle
add
in
mov
sub
sarb
xchg
push
mov
insb
iret
pop
jge
mov
and
dec
dec
out
ret
mov
sahf
int
fsubrs
testb
das
ret
xchg
mov
mov
out
les
dec
in
xlat
fwait
test
rclb
aas
pop
pop
sub
movsb
pop
fisubs
mov
pop
fwait
test
cmp
dec
test
xlat
sub
dec
xchg
pop
mov
add
and
mov
dec
or
xchg
cmc
call
xor
push
shl
scas
push
arpl
adc
sbb
lock
outsb
cmpsb
inc
lahf
jmp
leave
je
cmc
pop
or
fdiv
loope
out
sbb
repnz
shrb
jle
jbe
out
out
jle
cmovge
icebp
push
dec
dec
aaa
mov
cmpsb
and
xor
fstpt
and
lahf
es
sbb
iret
xchg
mov
jns
mov
inc
sarb
loop
or
sub
in
mov
fwait
adc
out
jl
or
test
std
cmp
push
dec
movsl
rolb
cwtl
call
loop
mov
cltd
xor
cmp
scas
sbbb
and
add
sti
and
outsl
es
inc
and
sbb
push
outsl
jns
rcrb
fsubs
imulb
pop
pop
popa
in
mov
fmul
pop
dec
into
or
aam
insl
add
lcall
insl
sbb
dec
and
scas
mov
pusha
pop
iret
fcoml
add
adc
jns
mov
sub
repnz
shlb
inc
rol
stos
xchg
out
rcrl
mov
lock
push
mov
aam
sbb
gs
sarl
jns
jge
mov
sub
andb
add
mov
push
ret
fwait
ss
out
pop
psrlq
sbb
daa
xchg
decb
bswap
jno
xorb
jmp
inc
sbb
fbstp
mov
cmp
test
sub
lock
iret
push
xchg
dec
int3
call
popa
cmp
jno
mov
ret
pushw
xchg
cmp
push
imul
inc
or
jb
jecxz
and
popa
into
dec
cmpsl
mov
test
test
int3
mov
xchg
dec
sub
mul
jg
push
mov
imul
sub
cld
test
xchg
mov
lds
out
xor
push
ret
push
adc
dec
stos
or
mov
and
inc
fsubrs
cli
adc
xlat
push
je
fwait
mov
adc
cwtl
jg
sub
xor
sbb
xor
das
cmc
fnstsw
inc
add
fcmovnu
lcall
out
pushf
add
or
dec
fisttpl
fwait
out
gs
xor
js
dec
cmc
cli
ja
lahf
add
sub
repz
icebp
sarl
pushf
mov
dec
inc
loop
inc
inc
ja
lds
jno
pusha
cli
mov
imul
inc
push
int
mov
cmpl
mov
cs
idivl
inc
push
or
leave
fidivrs
scas
xlat
scas
or
jg
pop
push
sub
das
aas
mov
stos
pop
or
clc
cmp
ret
pop
mov
mov
inc
mov
cli
inc
add
out
sbbb
xlat
jbe
pusha
add
jnp
and
jns
and
aas
jg
sbb
pop
mov
icebp
test
daa
mov
testb
mov
rol
cmp
dec
mov
push
jns
pop
psubq
fstpt
xor
push
dec
lret
cld
pop
dec
or
rclb
gs
outsb
inc
adc
rolb
clc
jnp
push
repnz
fists
jnp
popa
or
or
subb
stos
or
cmp
into
stos
lret
cltd
into
jae
sbb
addr16
outsl
dec
sub
dec
xchg
dec
mov
mov
movsb
pop
add
xchg
adc
rcll
mov
pop
frstor
es
mov
xchg
or
inc
add
lahf
sahf
in
call
or
push
inc
cmp
mov
icebp
pop
dec
ret
addr16
dec
ljmp
dec
pop
xor
push
movsl
cltd
dec
mov
jle
xchg
push
cld
loop
lods
ja
cli
mov
mov
aas
dec
push
pop
sti
stc
popa
and
nop
ss
jns
mov
cmc
inc
sti
mov
mov
add
mov
dec
sbb
pushf
cwtl
mov
cmp
mov
mov
fldcw
mov
pushf
dec
scas
iret
sbbb
adc
js
outsb
or
lods
push
mov
xchg
aas
jle
call
cli
mov
adc
jmp
lea
jmp
add
jle
cmpsb
enter
shrb
mov
adc
xchg
call
lea
pushl
gs
insl
gs
test
add
loopne
push
or
call
cltd
sbb
jo
pushl
jp
ja
xchg
pusha
cli
das
andl
mov
pop
sub
inc
add
in
xchg
and
and
adc
mov
dec
imul
mov
xchg
cmp
fnstenv
push
jns
inc
cmp
movsl
movsb
ret
and
iret
in
mov
aam
push
cmp
mov
mov
imul
dec
in
aam
testl
lcall
sbb
jb
add
fidivrl
fdivrl
cmpsl
inc
shll
lea
out
pop
or
pop
sub
popf
or
mov
call
push
mov
aas
inc
push
les
fnsave
imul
jb
in
out
jnp
sub
pop
push
mov
rcll
addr16
test
sbbl
shrb
inc
ds
out
out
fs
cmp
sub
popf
arpl
scas
add
mov
gs
in
inc
inc
add
sbb
pop
pop
mov
dec
or
cmp
inc
cmp
and
movl
lods
rcl
push
lahf
and
xchg
sub
gs
pop
xor
xchg
xor
jnp
jo
jecxz
rcrb
in
jns
ret
insl
int
dec
leave
cmp
packuswb
popa
mov
mov
pop
mov
je
and
push
adc
ss
mov
int
inc
add
out
ret
mov
test
ret
fs
stc
dec
mov
int3
loope
push
filds
leave
xchg
aas
fldenv
xor
cmp
or
pop
add
lahf
xchg
popa
movl
or
xor
sbb
clc
inc
lret
xchg
jno
ret
das
mov
push
test
sub
iret
mov
or
insb
xor
loop
aaa
inc
mov
js
sub
jmp
push
sub
rcrl
idivb
or
add
stc
sbb
push
ss
push
adc
mov
push
jl
call
addl
sbb
mov
jecxz
clc
jne
xchg
std
push
xchg
dec
das
or
ja
jb
xor
ljmp
sub
cwtl
cmp
movsb
lahf
inc
in
inc
push
test
cld
push
call
ficoml
mov
xor
fnstcw
mov
mov
out
aas
rcll
pop
repz
addr16
cwtl
ret
xor
or
add
mov
xor
in
push
cmpl
jecxz
sti
adc
lret
mov
outsl
jbe
jnp
iret
outsl
popf
xchg
pop
or
mov
pop
aaa
fidivs
sarl
cmp
test
lret
xlat
pushf
xor
xchg
testl
or
mov
push
xlat
mov
dec
cmp
xor
sti
movsl
xchg
ds
sub
xorb
cmpsl
push
add
push
mov
sbb
out
sub
fsts
pop
push
clc
and
les
std
inc
jne
jl
dec
sahf
fdivr
repnz
scas
push
gs
adc
sub
jg
push
pushf
ljmp
ret
test
je
push
cmp
cmp
inc
dec
cmp
icebp
mov
insb
insl
scas
dec
testl
loopne
cmp
test
dec
dec
and
push
cs
pop
sti
xor
pop
ss
leave
mov
sub
cmp
mov
xlat
jb
push
sbb
cwtl
sub
or
enter
fimull
out
scas
sbb
pop
ja
dec
sbb
pop
je
repz
sbb
mov
mov
stos
adc
int
push
sub
cmp
dec
push
ficompl
into
push
inc
stos
and
cmc
jbe
mov
aaa
je
into
mov
hlt
cmc
mov
mov
xchg
popa
enter
cld
cmc
dec
pop
test
mov
xor
adc
mov
jne
pop
mov
jno
sub
inc
adc
or
gs
lret
cltd
ds
xor
out
cltd
addr16
outsl
or
clc
nop
fxch
and
add
dec
movsl
fildl
lahf
into
add
stos
pop
xor
js
test
orb
cmp
andb
adc
adc
loope
ljmp
je
scas
sbb
mov
xchg
pop
stos
pop
faddl
xor
add
into
shlb
inc
pop
cmpsl
out
mov
mov
fcoms
mov
sbb
jle
fnsave
in
jle
xor
mov
shl
js
cwtl
cmp
jbe
adc
fisubl
dec
ds
inc
jbe
lahf
pop
sbb
arpl
cwtl
ljmp
ljmp
sub
and
mov
push
or
mulb
stos
flds
push
lret
movsb
lods
pop
in
cmp
call
stos
scas
adc
push
cmp
pusha
mov
pushf
inc
adc
adc
loop
cmp
xchg
sbb
outsl
scas
push
sub
mov
xchg
loop
sub
incl
jl
jno
daa
mov
out
or
aaa
imul
and
lods
pop
cmp
mov
pop
nop
jne
pop
loope
xchg
adc
cmpsb
in
out
push
jae
cmp
mov
xor
ljmp
cmp
mov
jne
dec
push
dec
shl
xchg
sub
xchg
les
jo
lds
dec
mov
or
outsb
fiaddl
lret
outsb
or
jne
push
jo
sbb
and
int
rcr
stos
ljmp
push
mov
cmpsl
leave
sub
xchg
ds
outsl
xchg
les
hlt
inc
out
ljmp
adc
in
lret
sub
pop
int3
sub
addr16
ljmp
mov
and
xor
or
out
je
lahf
sbbl
mov
mov
sbb
dec
aaa
rorb
movsb
or
mov
lret
jmp
and
aas
sub
dec
push
and
jbe
clc
fld
pop
into
sbb
mov
pop
jp
mov
movsl
pop
fistpl
cmc
lock
enter
xchg
cmp
mov
jo
pop
sbb
pop
dec
mov
jmp
mov
rorb
xchg
fildll
fadd
sbb
mov
rorl
je
cmpsb
fdivrs
movsb
jne
mov
cwtl
mov
pop
xchg
jno
cs
pop
popf
mov
sub
mov
sbb
pop
cmp
test
xor
pop
mov
cmpsb
sbb
mov
mov
fnstsw
cltd
lds
fdiv
dec
cmp
lods
stos
out
pop
mov
ret
in
jmp
mov
and
or
pop
in
lea
sbbb
xchg
sahf
xchg
popa
push
pop
imul
mov
xor
ret
sub
ficoml
sbb
mov
scas
sub
fadd
cmp
cmp
mov
popf
and
jnp
popf
xchg
ss
inc
or
sub
movsl
xchg
cld
push
lods
hlt
or
mov
or
mov
stos
sbb
mov
andl
jbe
addb
jecxz
lret
enter
mov
mov
mov
loopne
jno
xlat
fdivr
pusha
or
pop
sbb
sti
outsl
inc
in
aad
or
add
push
mov
jb
dec
xchg
ret
jo
imul
adc
jbe
dec
push
into
ljmp
push
rol
in
jae
xor
cmpsl
imul
pop
cltd
popa
jle
pop
mov
lret
lods
pop
inc
jno
testl
enter
mov
test
mov
jl
jbe
sub
int3
jge
out
pushf
les
outsl
mov
fcom
inc
jl
pop
add
push
lock
adc
loop
cld
xor
sbb
stc
imul
pop
push
rcrb
addr16
inc
sarb
test
sbb
inc
roll
int3
lahf
sbb
xchg
lahf
pop
imul
xor
fisubs
mov
sbb
ret
es
outsl
in
and
mov
rclb
das
mov
cmp
or
push
mov
adc
and
inc
xor
inc
xchg
orl
mov
adc
jnp
lea
jne
push
int
push
push
clc
outsb
test
out
push
sbb
das
test
and
adc
pop
lahf
dec
gs
push
xchg
xchg
xchg
mov
and
cmp
enter
jne
imul
fdivs
pop
dec
dec
dec
test
pop
pop
daa
jmp
mov
mov
daa
sub
mov
xor
fmull
iret
sbb
jb
push
dec
xchg
nop
push
sar
adc
push
ja
out
pusha
incb
pop
mulb
shr
shr
in
lds
inc
andb
xor
test
pushf
mov
mov
aam
movsl
int3
mov
es
insb
hlt
xor
cmpsb
pop
sub
loope
movsb
mov
cmp
out
jl
pop
sbb
sbb
fisubrs
inc
xor
ret
mov
and
es
cli
inc
or
popa
ret
iret
inc
pusha
inc
fdivrp
adc
popf
xor
mov
jno
push
outsb
add
pop
hlt
mov
fsubrp
xchg
jge
xchg
cmp
mov
mov
fistps
sbb
fidivs
ret
or
xor
int
fucomp
imul
sub
push
rcr
xorb
int
pop
hlt
mov
rolb
or
xchg
lahf
jle
and
or
mov
faddl
or
hlt
notb
jle
jle
xchg
scas
fistpll
gs
orb
insl
xor
xchg
ret
popf
pop
jp
push
movsb
dec
hlt
pop
jp
push
fdivs
std
aam
push
int3
push
mov
push
fstpl
shrl
xor
mov
iret
cmp
std
mov
lret
pop
loope
push
test
inc
or
mov
popa
iret
aas
add
adc
pop
adc
bnd
xor
sbb
dec
testb
stc
sub
pop
mov
sub
mov
inc
cwtl
push
orl
dec
pop
jp
imul
test
stos
xchg
inc
lds
xchg
pop
xor
sbb
push
xchg
add
mov
push
dec
into
out
pop
cmp
imul
mov
shrb
call
je
mov
scas
push
add
aam
iret
mov
inc
mov
lahf
shlb
mov
push
lret
push
cltd
xchg
cmp
cmp
or
mov
add
adc
and
cmp
jne
push
push
mov
or
pop
mov
pop
push
xor
sbb
imul
test
xchg
fstps
in
xchg
das
mov
test
das
sub
lea
inc
mov
mov
popf
xor
push
pop
add
lock
movsl
and
pop
push
imul
sub
xchg
mov
out
lock
sbb
mov
lcall
xchg
adc
add
push
daa
repnz
int3
cmpps
fisttpl
addr16
lcall
adcb
daa
lret
sub
sub
and
dec
xchg
mov
scas
mov
add
push
xchg
push
repnz
mov
testl
int3
and
ss
je
xchg
mov
or
mov
mov
mov
dec
xor
movsb
lods
iret
jae
test
cmp
mov
push
sbb
push
mov
dec
push
test
sub
insb
xchg
lock
cli
cli
mov
stos
push
sti
orb
adc
imul
sub
iret
roll
push
cld
mov
lret
jle
leave
mov
and
imul
mov
cmp
movsb
shlb
push
pop
inc
cmpsl
xchg
xor
scas
jb
dec
jle
jne
negb
jg
ds
add
cmpsb
adc
or
inc
cmpsl
insl
mov
add
in
mov
jns
lods
out
fldcw
xor
jmp
in
filds
cmpsl
outsb
sbb
mov
daa
out
pop
dec
push
xchg
lcall
inc
sub
in
out
pop
xor
push
sub
inc
add
repz
ss
xor
mov
out
adc
mov
popf
sarl
jg
les
mov
nop
xor
ret
cmp
jl
orb
mov
jp
dec
adc
ljmp
xchg
enter
rcl
pop
push
and
in
push
test
les
dec
adc
lahf
lds
movsb
lock
jl
and
xchg
mov
xchg
adc
xor
stos
icebp
push
add
int
sbb
inc
adc
imul
out
mov
dec
lcall
and
or
sbb
cmp
pop
and
aam
sbb
popw
xchg
comiss
mov
mov
inc
mov
std
push
mov
and
pop
decb
xlat
dec
and
cmpl
ss
dec
mov
adc
push
inc
ljmp
stc
lds
xchg
mov
mov
aaa
push
mov
ds
and
mov
pop
mov
gs
lock
arpl
cmpsl
sbb
push
ret
pop
cs
xor
in
xchg
adc
push
pop
rcrl
in
shrl
out
test
and
aas
adc
mov
jle
sahf
int3
icebp
out
mov
les
push
movsl
cmpsb
sub
adc
mov
iret
xchg
shr
cmp
je
adc
stos
cli
stos
pop
imul
fdivr
outsb
cwtl
nopl
test
fcmovnb
fsubl
dec
adc
out
mov
ja
cmp
inc
test
sub
repz
js
mov
mov
sti
sub
pusha
inc
movsb
into
mov
cmp
dec
lcall
imul
xchg
std
outsl
in
pop
push
mov
jmp
shll
mov
pop
dec
jns
outsl
fidivs
inc
fsubl
data16
subl
roll
pop
shll
mov
fs
pop
arpl
or
mov
mov
je
clc
xor
popf
adc
stos
pusha
stc
orl
mov
shll
sub
out
popa
pop
out
and
popf
dec
mov
pop
jns
add
int3
sti
cli
mov
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
sti
jg
xor
push
outsb
leave
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
mov
add
add
add
add
add
add
jb,pn
popa
je
add
xor
add
add
add
add
add
into
add
inc
add
loopne
fs
je
add
add
add
add
and
add
sub
add
add
je,pn
js
add
add
adc
add
scas
add
add
inc
add
loopne
jb
popa
je
add
les
add
and
add
push
add
add
add
inc
add
loopne
fs
je
add
add
add
add
or
add
add
add
add
inc
add
loopne
add
xor
xor
call
pusha
call
sub
lds
inc
mov
add
mov
test
xor
addb
mov
int
xor
loope
ljmp
clc
ljmp
fisubrl
add
out
push
push
sti
decl
add
fs
add
mov
clc
and
scas
aam
xchg
jno
adc
ss
movsl
popa
scas
pop
insl
xchg
ret
fisttps
pusha
and
mov
pop
sbb
xchg
add
movsb
mov
inc
adc
aad
inc
push
test
ret
push
inc
cld
cli
repnz
mov
loopne
sub
xchg
xchg
test
adc
and
and
pushf
andb
cmc
fs
mov
test
cmpb
ja
sub
pcmpeqb
and
test
cmp
pop
das
sbb
aad
int3
or
sbb
push
int
xchg
fwait
imull
lock
jecxz
xor
cmp
jmp
inc
cwtl
inc
jb
sahf
orl
or
aam
mov
xchg
sbb
mov
add
jbe
js
inc
jno
iret
sbb
and
icebp
int
insl
in
jl
push
add
shr
mov
rol
mov
inc
movsl
dec
sbb
in
sarl
jmp
dec
ret
mov
dec
mov
in
mov
aam
pop
jns
sahf
test
aam
aaa
push
adc
ljmp
out
aas
inc
out
loop
xchg
xchg
jno
scas
mov
push
shr
jge
lahf
push
mov
scas
jl
int
pusha
cmp
fwait
je
pop
cld
xlat
in
and
xchg
fwait
ss
jge
pop
ds
outsl
les
mov
ljmp
fwait
lods
sti
mov
and
xor
leave
cwtl
addr16
stos
xchg
pushf
in
jb
in
test
scas
nop
push
fisubrs
fildll
int3
xlat
in
orl
adc
shlb
mov
mov
push
lahf
or
mov
stos
xor
pop
lcall
push
fsubs
lcall
or
add
pusha
outsb
mov
jge
adc
jmp
cmpsl
sub
and
mov
fsubl
fidivrl
adc
sbbb
jp
mov
pop
mov
ja
pop
dec
add
call
add
mul
sti
push
gs
mov
inc
mov
or
repz
add
cmp
ss
lahf
movsb
mov
push
divb
dec
ret
icebp
mov
cmpl
ds
mov
dec
mov
and
stos
push
pop
and
divl
pop
push
fiaddl
push
sub
popf
stc
jae
cli
bound
xor
jne
outsb
mov
dec
filds
scas
cmp
xor
mull
push
and
jmp
xchg
leave
sbb
mov
sbb
push
jno
rcll
adc
inc
outsl
xor
inc
jle
mov
pop
lret
sub
cmp
xchg
mov
lods
xchg
xchg
cli
pop
loopne
scas
jno
cli
sub
stos
mov
jge
jns
jne,pn
popa
fs
sub
aaa
ja
popa
cld
add
pop
or
jne
es
popa
rclb
inc
into
add
aas
dec
cmc
mov
cmp
jecxz
cmc
es
dec
inc
ret
ficoms
mov
jp
and
jno
push
loopne
mov
testb
add
pop
leave
lret
xchg
push
xor
xchg
jmp
leave
add
jmp
daa
test
loop
rcrb
loopne
lods
xchg
testl
jnp
add
daa
ss
push
out
mov
lret
loope
xorl
sbb
pusha
jae
mov
fbstp
rorb
xchg
in
inc
dec
jg
and
pop
mov
add
testl
dec
sbb
mov
inc
mov
or
aas
test
jl
xorl
ja
xchg
outsb
and
fcoml
mov
pop
ret
mov
cmp
mov
xlat
aaa
dec
gs
adc
das
jecxz
lods
aas
mov
lret
pop
inc
bound
shll
dec
popf
popa
inc
push
jg
dec
cli
aad
stos
sub
jmp
lea
and
mov
aas
or
addl
add
imul
sarl
je
jp
jp
testl
into
fldl
sbb
fisttpll
gs
sbb
lahf
in
loopne
call
adcb
cli
mov
inc
stc
mov
xchg
mov
xor
icebp
push
push
sub
sbb
outsl
or
mov
pop
lahf
xlat
minps
xchg
mov
scas
outsb
add
fisubrl
out
test
hlt
test
scas
xchg
test
pop
or
into
xor
jge
es
jno
push
mov
cmp
test
add
xor
add
mov
std
xor
adc
sbb
pop
out
pop
test
mov
mov
movb
xchg
fmul
mov
dec
mov
nop
jmp
cmp
pushf
pop
pop
gs
movsl
xchg
outsl
adcl
sbb
push
xor
enter
stos
pop
cmpsb
fwait
mov
dec
mov
jo
dec
or
jnp
jge
mov
sub
pop
loop
ret
xchg
mov
sub
cmp
pop
pop
mov
push
bound
pop
js
cld
popa
leave
lock
test
xor
add
insb
mov
movsl
jg
idivb
mov
je
stos
outsl
xchg
push
mov
pop
mov
out
lret
cmpsl
mov
insl
sti
sub
jno
or
out
xor
gs
dec
dec
pop
loope
xchg
out
xchg
mov
push
push
gs
push
test
xchg
add
nop
stc
jns
pop
xor
mov
pop
adc
fsubrs
xchg
push
out
sbb
or
adc
mov
cmp
mov
push
adc
sbb
push
jb
stos
mov
ja
testl
fwait
repnz
rclb
jmp
fstp
repz
mov
mov
ja
mov
pop
xchg
outsb
mov
sub
jmp
pop
jl
mov
int3
jbe
out
mov
imul
outsb
jl
lods
xchg
es
mov
in
rorb
sbb
pop
iret
mov
xchg
mov
mov
repnz
xchg
cmp
or
pop
neg
push
or
es
jbe
xchg
test
mov
sbb
cmp
jae
call
dec
insb
adc
adc
xor
adc
icebp
fnsave
pop
sbb
in
popf
movsb
and
mov
ja
dec
mov
jmp
or
jge
out
nop
fsts
xor
cmp
pop
sbb
pop
ds
je
in
lea
loope
shll
jmp
fwait
aad
mov
lods
aad
cltd
jge
add
rcr
adc
shrb
jns
adc
push
adc
lea
mov
loope
xchg
jmp
cwtl
and
add
mov
test
imul
jnp
enter
adc
into
xchg
dec
das
pop
push
pop
jge
inc
outsb
inc
scas
rclb
in
fisubrl
add
aam
push
cmp
adc
mov
rclb
xchg
aam
jl
add
jno
pop
add
adc
and
sub
and
mov
sub
inc
cmp
dec
pop
cld
test
lods
xchg
xor
xchg
addr16
or
lea
dec
test
jmp
cld
int
and
xchg
mov
add
push
add
cmp
or
push
cmp
and
data16
jns
push
mov
pop
sub
test
outsl
mov
and
loop
push
dec
cs
jbe
loop
movsb
test
sbb
adc
mov
sub
add
stos
fcomps
cltd
repz
js
leave
sub
movsl
cltd
mov
fcmovne
xchg
push
stc
mov
aad
xor
jne
sub
mov
mov
loope
int3
fdivl
test
repz
mov
ds
ret
loop,pt
mov
js
loopne
mov
movsl
aad
ja
das
sbb
inc
xor
call
sub
hlt
adc
sahf
sbb
es
xor
outsb
jno
and
incl
or
leave
pushf
mov
xchg
jae
and
or
adc
fnstcw
cs
insl
jg
push
push
test
mov
in
cld
mov
aaa
inc
mov
mov
into
cli
adc
jge
lcall
pushf
aaa
sbb
mov
imul
jle
cmpsl
mov
fcomps
xor
lods
cltd
je
mov
mov
pop
adc
or
sub
xchg
or
cmp
ds
flds
dec
scas
outsb
jo
pop
popa
repz
shll
bound
lock
jl
or
xchg
xor
sbb
cld
hlt
gs
pop
mov
ja
sarb
ret
add
pop
scas
out
hlt
in
jl
leave
sbb
and
add
neg
test
xor
fimuls
or
shll
loop
in
push
jle
loope
stos
and
popf
das
fistpll
mov
mov
outsl
clc
add
out
ja
sub
aaa
inc
adc
test
pop
mov
and
daa
jmp
cmc
subb
out
je
lods
aas
pop
jno
in
sbb
std
mov
scas
or
xchg
cmpl
adcb
aam
arpl
sahf
add
jge
out
xchg
mov
sub
dec
lock
adc
mulb
test
pop
or
ret
sub
add
in
pushf
and
daa
mov
adc
cmp
lods
ljmp
loope
adc
imul
mov
cmpsb
cltd
mov
push
lcall
pop
jmp
bound
in
adcb
insl
lock
lahf
and
aas
push
mov
xor
adc
xchg
insb
movsb
and
out
cwtl
aaa
push
push
xchg
mov
movb
outsl
into
imul
jno
fnstenv
cs
test
imul
sbb
inc
and
push
mov
fisubrl
mov
icebp
hlt
pop
xor
stos
dec
aam
adc
mov
in
std
popf
adc
out
test
adc
pop
pop
cmp
outsl
and
scas
arpl
js
xchg
inc
je
xor
out
xchg
dec
lods
mov
je
das
out
mov
dec
cmpsl
jb
sub
fmull
mov
sub
sub
and
mov
dec
xchg
push
mov
mov
xchg
popa
and
sbb
out
dec
push
jmp
imulb
jmp
test
mov
dec
xor
scas
cmp
fmull
das
add
pop
ss
loop
out
mov
push
in
cmp
sub
pop
test
mov
movsl
into
mov
mov
aaa
aam
pop
xor
stc
popa
sbb
aaa
rolb
mov
ret
add
and
mov
loopne
arpl
inc
aad
ret
jbe
sub
mov
jecxz
or
add
lret
cmpsl
mov
add
sub
add
inc
push
mov
add
xor
push
leave
nop
or
popa
icebp
sub
pop
or
adc
sub
test
loop
push
fmuls
inc
sub
out
rorb
ret
xorl
lahf
shrb
test
clc
rcrl
push
inc
or
add
test
mov
or
pusha
pop
fucomp
test
pop
test
shrb
push
or
sbb
in
out
inc
fistpll
ja
bnd
std
xchg
xor
into
je
lret
out
dec
xchg
cmp
mov
push
jno
and
int
movsb
ret
sub
pusha
movsl
ja
popf
add
jae
or
push
inc
xchg
sub
mov
push
ret
sahf
sbb
fdivr
xorb
into
lock
in
or
and
es
xchg
push
add
sub
shl
jae
push
flds
js
add
or
das
jecxz
jp
pop
mov
shl
fistpl
push
mov
pop
xchg
fsts
xchg
repnz
dec
dec
scas
push
outsb
add
test
xlat
sbb
fwait
dec
scas
sarl
fisttpll
rcl
jmp
out
mov
jmp
sbb
sub
subl
pushf
xor
test
rorb
cmpxchg
or
daa
add
out
cmp
fnsave
mov
lods
bound
std
inc
cmp
or
ljmp
scas
data16
pop
lods
scas
clc
inc
jle
pop
sahf
outsl
sbb
mov
in
mov
loope
pop
shl
jb
sbb
hlt
mov
push
sti
insb
out
test
cmc
aam
lret
sbb
adc
repz
test
pushf
xchg
not
int
loopne
xchg
leave
das
jne
add
ficompl
xor
aas
js
cmp
leave
xchg
jb
bound
sbb
enter
mov
mov
mov
adc
sarl
hlt
xchg
lea
lcall
inc
in
aam
rcrl
mov
popa
aaa
lea
pop
shrl
inc
or
int
hlt
add
fstp
mov
or
jecxz
inc
jmp
fwait
divb
and
in
mov
fsubs
jae
lock
pop
jl
lahf
mov
xchg
sbb
test
lret
add
cmpsb
cs
fucomp
inc
paddd
cmp
fisubs
sub
pop
dec
jp
adc
inc
movsl
dec
sub
cli
scas
pop
pushf
aad
ficomps
push
jae
fstl
dec
xorb
inc
pop
test
sbbl
mov
in
add
jmp
test
cmpsl
or
stos
jb
stc
sbb
pop
adc
aas
mov
pop
cmpsl
inc
cmove
in
cwtl
lret
adc
rolb
mov
cmp
cmp
dec
ss
push
fnsave
xor
in
pusha
adc
and
ret
aas
xlat
dec
cs
rcrb
lock
testl
cmc
imul
pushf
arpl
mov
imull
stc
xchg
adc
sbb
scas
outsb
jg
repnz
ja
pop
inc
or
outsb
icebp
adc
int
daa
mov
cld
iret
movsb
xlat
cmp
pop
or
cwtl
lea
addr16
ss
das
xor
stos
xchg
fidivrl
sbb
push
mov
inc
jg
not
mov
inc
xor
push
sbb
addr16
outsl
divb
data16
jecxz
mov
jle
sub
dec
test
insl
and
bound
add
sbb
insb
and
movsb
jo
imul
insl
aaa
push
cmpsl
loop
cwtl
out
sahf
sarl
out
mov
add
push
fs
es
repnz
imul
sbb
add
mov
mov
inc
jmp
call
cmpsl
sbb
add
lds
das
shll
lcall
adc
icebp
sbb
imul
and
movsb
or
jae
inc
das
popf
inc
lock
jecxz
jb
xlat
mov
lds
add
sub
pop
inc
loop
lea
loopne
loop
test
aaa
mov
orl
inc
fistl
cmp
lahf
or
js
icebp
gs
xchg
add
push
adc
pop
aaa
das
sbb
cmpsl
fnstenv
mov
movswl
pop
jle
pop
xor
ljmpw
fistpll
pusha
addr16
cmc
mov
clc
rolb
dec
cmpsl
out
cmpsb
mov
sub
push
cmp
and
push
cmp
mov
notl
lock
test
and
inc
add
enter
js
mov
sbb
movsb
xor
xchg
inc
sti
xchg
ja
dec
adc
mov
sbb
pop
nop
dec
or
scas
push
mov
inc
mov
aam
cmc
lds
test
loop
xchg
and
xor
xlat
pop
xor
push
rclb
add
adc
cmc
aad
cwtl
testb
repnz
cmp
daa
jns
pusha
cmp
lods
add
mov
add
or
test
push
pop
jns
clc
notl
movsb
loop
and
inc
ljmp
xchg
cld
adc
scas
sbb
cltd
or
inc
ret
dec
cmp
dec
xor
fsubs
imul
xchg
jl
sub
mov
pushf
in
pop
jno
add
lods
imul
jmp
div
or
and
fdivrs
jne
call
aaa
std
in
jge
sub
inc
cli
dec
sbb
ljmp
add
dec
int3
mov
sub
insl
xor
cmc
mov
fs
and
xor
dec
rcr
mov
mov
push
sub
push
ja
pop
repz
cmp
out
pop
adc
push
aas
push
lahf
enter
fcompl
popa
ficompl
or
and
les
mov
dec
cmp
scas
scas
out
arpl
aam
mov
push
lods
jl
dec
les
test
xchg
mov
mov
cmp
cmpsb
ja
cltd
and
adc
mov
sub
lahf
in
pop
pop
and
xchg
push
sbb
pushf
hlt
jle
sub
xchg
scas
mov
push
call
cmp
sti
mov
xor
mov
in
pop
push
pop
dec
lea
add
int
jg
pop
or
add
push
cmpsb
out
inc
push
jge
int
xor
mov
cltd
in
inc
shll
sti
outsl
imul
outsb
push
push
addb
loope
scas
popa
push
mov
adc
aas
fildll
cmp
xor
roll
mov
pop
push
in
mov
mov
mov
sub
xor
lock
xor
push
cwtl
maskmovq
notl
mov
push
rcrl
imul
pop
sub
pop
jno
cltd
aas
ret
lods
lods
test
xchg
sbbb
mov
icebp
icebp
sbb
xchg
ds
mov
subl
lods
rcr
mov
std
lea
lods
mov
adc
les
xor
inc
push
fidivrl
sub
inc
push
loope
scas
addr16
aas
inc
pop
mov
addb
mov
js
aas
sub
xlat
adc
cmpl
xchg
jae
addr16
cltd
inc
jge
mov
inc
push
mov
lea
sub
cwtl
gs
push
xchg
and
mov
outsb
imul
mov
mov
cmp
cli
or
ret
jmp
cld
or
daa
rcrb
popa
dec
clc
jns
pop
outsb
jnp
xor
imul
xchg
pop
and
hlt
cmp
loop
pop
cltd
mov
jp
sbb
xor
jp
addr16
test
dec
mov
fs
inc
aam
sbb
lret
sub
pop
stos
push
lods
dec
movsl
popa
int
jp
cmpl
hlt
aam
fs
sub
cmc
push
mov
call
jge
xor
pop
int
mov
inc
lds
lea
jmp
pop
fstps
lods
inc
mov
push
int
or
sar
les
push
shll
mov
mov
pop
popl
inc
je
icebp
test
inc
cmp
mov
mov
pcmpgtw
push
dec
adc
lahf
orl
aaa
xor
jge
push
xor
or
outsl
negb
pop
push
outsb
mov
sub
add
jb
int
fistps
jp
jb
sub
cwtl
sbb
jp
imul
xchg
popa
jo
int3
aaa
mov
das
sub
fs
sbb
xchg
orb
cs
jbe
mov
xchg
cwtl
sbb
mov
xor
push
dec
xor
fists
inc
pop
les
lds
in
mov
sub
loope
pop
outsb
test
cwtl
cmp
popa
movsb
sub
lods
mov
lahf
mov
sub
in
dec
addb
in
push
push
inc
nop
das
push
mov
inc
sbb
lock
sub
subps
add
jnp
in
out
pop
std
lret
out
mov
ror
rcll
lock
pop
adc
lret
push
shll
sti
jnp
arpl
idivl
or
adc
stos
push
pushf
cli
pop
iret
pop
and
lock
jl
sub
cli
inc
es
mov
push
cmp
popf
pop
push
xor
out
out
dec
or
adc
cld
inc
clc
push
shrb
add
test
ds
jge
xchg
jp
mov
pop
pusha
stos
stc
hlt
or
stc
jne
lods
out
pop
jae
cmp
addr16
push
adc
fldenv
fimull
mov
cmp
dec
lahf
out
mov
popf
mov
mov
jb
fsubrl
mov
dec
daa
sbb
jbe
inc
arpl
shr
test
js
mov
xor
pop
pop
jg
pop
sbb
push
popa
xchg
or
push
inc
test
movl
inc
loop
aad
mov
xchg
jp
ds
mov
lcall
out
push
mov
lds
adcl
insb
inc
cmp
sbb
sbbb
outsb
sub
mov
lret
shl
in
lock
cli
cmp
mov
add
sbb
insl
add
out
gs
pop
pop
sub
lret
or
mov
mov
mov
test
pop
push
add
mov
cltd
insb
inc
subb
add
pop
ret
dec
in
enter
loop
add
shlb
and
sbb
sbb
cmp
xchg
push
popa
arpl
jno
xchg
jnp
jae
stos
pop
repnz
add
pop
pop
imul
nop
jnp
lock
arpl
pusha
daa
or
push
popa
pushf
xchg
cli
leave
push
inc
jae
outsb
mov
nop
rorb
rolb
aas
ds
repnz
and
push
add
cltd
fistl
pop
pop
push
mov
outsl
insb
outsl
movsb
xor
leave
jg
mov
imul
mov
jb
and
push
or
in
xchg
add
adc
int3
inc
aad
or
or
sub
ret
sub
lret
push
jae
inc
push
push
push
mov
push
nop
aas
int3
mov
push
jecxz
pop
outsl
cmc
das
mov
sarb
fsubr
sub
out
pusha
jp
js
mov
jmp
sub
pushf
sbb
out
lea
pop
cmp
pop
xchg
cli
mov
dec
rcll
mov
push
cmp
aas
push
test
mov
ss
out
cmp
int3
pop
call
mov
insl
push
ja
loopne
lcall
imul
mov
add
jb
mov
adc
mov
push
test
push
nop
scas
mov
push
push
add
or
insb
stc
mov
xchg
pushf
negb
pop
pop
xchg
inc
and
or
rcrb
push
outsl
mov
sub
xor
push
lds
lahf
xchg
push
mov
lret
cmp
mov
mov
mov
cmp
sub
lea
testb
or
shll
outsl
out
add
aam
pop
test
es
sbb
lret
stc
jnp
sbb
leave
ljmp
xchg
cmp
arpl
jo
jo
xchg
mov
int3
aas
sbb
inc
xchg
scas
adc
adc
xor
nop
push
pusha
or
dec
das
out
mov
cmpsl
jl
mov
lds
repnz
aam
lds
dec
mov
pop
sub
mov
inc
dec
ret
ret
popl
add
push
xchg
fstl
and
add
in
mov
mov
adc
loop
fcmovne
stc
pop
jo
jne
dec
arpl
scas
aaa
or
call
ret
insb
push
dec
sub
xchg
or
inc
dec
andl
add
ret
dec
mov
push
xor
rclb
or
in
int3
sub
jne
ds
lock
add
stos
adc
dec
addl
sar
fcoml
add
push
jno
mov
fsts
aam
andl
mov
pusha
xor
add
xchg
rclb
mov
subl
enter
test
jecxz
ljmp
cmpsl
pop
xchg
lods
call
in
mov
fmull
push
mov
xchg
push
jns
dec
jg
and
call
fisubrs
leave
xor
or
in
xor
xlat
pop
rcrl
insb
pop
sub
inc
lret
pop
ret
int
mov
ret
cltd
stos
aad
inc
push
xor
out
in
push
enter
jnp
mov
push
mov
push
cs
ljmp
xor
pop
xchg
inc
xchg
push
aad
aad
fisubrl
in
jbe
push
imul
jnp
push
in
lret
mov
pop
dec
lret
outsb
jne
mov
outsl
sarl
arpl
pusha
xor
bound
ficomps
jae
mov
push
pop
push
adc
dec
xor
movsb
in
and
mov
push
xchg
jae
and
push
jecxz
sub
dec
inc
xchg
or
dec
dec
sarb
xchg
pop
stos
popa
mov
xchg
out
jmp
or
pop
xchg
sbbb
adcw
cwtl
xlat
fcmovnb
int3
test
in
nop
cld
cmp
test
add
jmp
repnz
out
fisubrs
jno
testl
mov
xchg
loope
push
outsb
push
and
out
cld
in
mov
sbb
mov
push
popa
sbb
sahf
xor
stc
test
sub
push
fs
adc
mov
shlb
pop
push
cmp
lea
or
out
bound
ss
add
xchg
jg
jns
icebp
test
push
dec
xor
mov
xchg
aas
cmp
and
cmp
insb
mov
ffreep
aaa
rolb
repz
adc
sub
nop
scas
arpl
out
push
je
into
cmp
movsb
push
fs
inc
pop
icebp
xor
and
cmp
adc
or
pop
or
dec
or
mov
xchg
push
dec
sub
fld
aas
xor
ss
or
jmp
mov
arpl
mov
jno
fistl
leave
testb
cmpsl
lods
bound
jmp
xchg
popl
call
lret
inc
icebp
scas
sbb
dec
mov
addr16
into
lcall
repnz
nop
popf
sub
and
add
arpl
push
leave
int
mov
gs
in
xor
icebp
mov
inc
js
test
ret
jle
repnz
test
sbb
cltd
xchg
stos
mov
enter
pop
into
jne
push
pop
mov
mov
dec
icebp
pop
test
mov
jne
mov
xchg
in
xchg
inc
in
fs
jbe
xor
or
mov
jge
xchg
inc
sti
mov
faddl
or
lods
sub
fmuls
add
sub
icebp
ret
loop
inc
pop
dec
out
mov
dec
lcall
push
and
std
mov
or
cwtl
pusha
gs
pusha
xchg
mov
fisubl
out
adc
lea
xor
fwait
and
repz
ss
jbe
push
dec
fwait
jne
call
test
les
std
adc
jl
out
adc
loop
popf
iret
stc
push
mov
pop
pop
xor
in
mov
dec
mov
add
popa
pop
and
jmp
ljmp
push
mov
pop
xchg
xchg
leave
mov
or
sub
add
push
xor
cmp
and
cwtl
std
push
push
lods
push
testl
dec
sub
adc
jbe
add
mov
hlt
stos
xchg
mov
xchg
decb
mov
push
pop
scas
xchg
sbb
mov
sahf
jo
repz
sbb
sbb
cwtl
xor
xor
mov
push
pop
les
int
cli
std
sbb
jne
inc
xchg
jno
cmp
mov
test
das
cwtl
std
ret
inc
push
jbe
or
fisubs
jmp
jnp
push
mov
mov
cltd
je
xchg
or
test
or
loopne
insl
clc
bound
cmpsb
push
lea
push
fmull
add
and
cmp
in
jmp
xor
push
dec
push
xor
fisttpll
or
xchg
jmp
mov
mov
scas
hlt
add
xor
add
scas
mov
or
insl
lods
mul
sti
lret
in
fucomip
pop
add
mov
pop
inc
shlb
sbb
xchg
lcall
push
addr16
pop
lret
sbb
mov
cmc
push
outsl
out
and
and
inc
add
out
jbe
imul
loope
jnp
scas
push
pop
fbstp
inc
aas
inc
aam
dec
xor
cmpsl
aas
add
stos
pop
or
jmp
lret
jp
inc
ret
jl
adc
shll
pop
adc
ss
adc
adc
xor
test
push
pop
dec
inc
cmpsb
scas
test
adc
and
lret
and
xor
divl
dec
xor
js
jae
cs
daa
or
adc
and
movsl
or
pop
in
or
add
add
mov
stos
jge
jb
fcmove
fwait
int
and
loope
xor
orb
std
inc
filds
jno
insl
push
stos
outsb
ret
xor
movsb
or
pushf
cmp
daa
into
ror
jne
scas
mov
xor
fdivp
sub
mov
pop
pop
ja
aas
push
mov
int3
out
sahf
in
not
mov
push
test
push
fimuls
outsl
add
mov
adc
jno
pop
cmp
dec
cld
push
mov
xor
xor
outsb
sub
dec
call
jae
in
movb
das
cmpsl
xlat
sub
pop
cmpsb
dec
fnstenv
flds
jg
pop
cmpb
loop
and
daa
cli
jmp
test
hlt
mov
push
divl
jbe
loope
or
jg
cwtl
xchg
pop
add
mov
inc
and
stc
jmp
stos
mov
ljmp
add
fimull
or
push
push
mov
arpl
jge
pushf
adc
leave
imul
ja
aaa
movsl
xlat
mov
fsubrs
push
sub
out
push
cmp
xchg
pop
jl
mov
push
shr
push
inc
mov
xor
and
aaa
xchg
call
xlat
cs
out
xchg
or
int3
icebp
into
repnz
cltd
push
insb
jmp
cmp
cmpsl
cmp
add
mov
cli
pop
movsb
pop
inc
in
in
xchg
mov
test
mov
adc
cltd
rorb
scas
jns
cwtl
jp
popf
sbb
das
pop
mov
sbb
ja
enter
fwait
aas
popa
mov
shll
jge
mov
in
mov
cmp
xor
xor
in
mov
sub
les
mov
sub
arpl
aam
inc
pop
push
cmp
mov
dec
in
pop
leave
mov
mov
orl
xchg
sbb
push
sarb
mov
push
mov
jmp
repnz
mov
push
sbb
cmp
pop
inc
gs
cmp
cmp
sub
dec
enter
in
pusha
mov
inc
icebp
sbb
lods
rcll
push
and
sub
mov
in
mov
icebp
hlt
repz
inc
or
lret
inc
imul
sbb
inc
mov
mov
cmp
or
pop
mov
loopne
outsb
shl
pop
pop
ret
enter
aas
out
cltd
dec
push
or
dec
orb
sub
sbb
out
fidivrs
jns
or
int3
andb
movsb
into
sub
mov
ss
pop
int
xor
or
fistpll
pop
ret
cmp
pop
pop
push
popa
push
cmp
pop
std
add
mov
fstl
jg
testl
test
or
sub
cwtl
xchg
das
pop
xchg
cmp
pop
lret
cli
popa
mov
mov
aam
loop
stos
out
mov
subb
pop
shll
mov
lahf
dec
aad
jbe
xor
jp
mov
loop
notb
jbe
imul
push
sbb
cmp
bound
inc
lods
push
cmpsb
popa
pusha
enterw
mov
xchg
dec
lds
fcmovnb
xor
fwait
popl
mov
imul
scas
out
push
inc
cld
mov
or
or
aam
stos
mov
into
fwait
jo
mov
jo
mov
pop
loop
inc
adc
in
ret
fwait
lea
ret
push
or
push
or
nop
lods
or
outsb
dec
cmp
add
std
rcr
data16
lcall
or
or
add
pop
enter
dec
pop
mov
add
sbb
sub
push
push
lods
cmp
pop
daa
sbb
data16
jmp
lods
adc
fs
mov
mov
dec
sahf
shrl
jb
repz
xchg
push
dec
lret
inc
jmp
popa
push
adc
sub
stos
mov
lock
arpl
push
out
sbbl
in
add
out
movups
pop
xor
mov
or
jbe
lods
movb
ljmp
aas
fs
and
inc
nop
jnp
mov
adc
inc
add
cmpsl
aas
dec
push
xchg
sahf
pop
or
js
or
jnp
xchg
adc
dec
mov
cmp
popf
push
adc
mov
and
push
push
andl
cmp
xor
andb
inc
push
sbb
push
clc
pusha
sub
sbb
scas
xor
pop
ret
idivb
cmpsl
aaa
in
or
idiv
push
jae
jo
imul
pushf
movsb
inc
jae
or
xchg
cmp
faddp
cli
es
call
or
cmc
mov
dec
ds
xlat
ret
jp
xor
sub
fyl2x
mov
pop
pop
stos
mov
pop
adc
dec
xor
dec
jg
cmp
sbb
xlat
mov
and
int3
jno
sub
inc
sbb
xchg
push
push
jbe
das
jmp
adc
ljmp
sarb
or
rolb
aad
push
lods
ljmp
add
loopne
hlt
push
jge
jb
sbb
jmp
fildl
push
repz
mov
xchg
incb
inc
lods
adc
sbb
in
test
enter
fstpt
adc
adc
mov
cwtl
fbld
adc
xlat
push
js
xlat
fwait
and
mov
cltd
jmp
stos
cmc
je
mov
stos
js
or
data16
iret
dec
outsb
js
fisttpl
cmpsb
inc
out
mov
nop
js
mov
mov
fisubrl
inc
dec
fisttpll
and
inc
adc
stos
je
movsb
mov
stos
in
or
loop
push
sahf
inc
ds
in
imul
mov
and
lods
and
mov
jmp
je
mov
fists
addl
in
shrb
and
pop
cmp
or
push
jp
cs
or
ja
xchg
fs
stos
pop
mov
das
ds
imulb
fwait
cmp
movsb
jecxz
addl
sbb
mov
pop
and
je
popa
push
or
mov
pusha
xchg
add
cld
hlt
jno
leave
pop
push
add
outsb
stos
mov
cmp
pop
nop
push
add
adcl
das
mov
sti
cmp
lock
push
jle
xor
push
aas
lret
push
mov
sub
and
test
ljmp
pushl
sub
sub
jae
xchg
outsb
jg
mov
xchg
adc
lods
push
test
jle
popa
movsl
pop
mov
xchg
fwait
mov
mov
aas
push
xor
fiaddl
mov
push
or
lahf
call
and
add
dec
popa
jo
mov
cmpsb
mov
dec
pop
jecxz
adc
and
std
leave
pop
sbb
cltd
ds
and
add
test
push
cmpsl
inc
movsb
xchg
ja
mov
mov
insb
testl
adc
loope
inc
or
faddl
sahf
int3
js
imul
hlt
fdivrs
mov
fsubrs
mov
mov
cmp
out
xor
gs
andb
lods
int
pushf
xor
jl
lods
shr
loope
stos
jae
cltd
hlt
roll
cli
cmp
mov
pop
mov
jnp
sub
cwtl
iret
push
daa
inc
xor
inc
sbb
adc
sbb
loop
add
cmp
jp
cmp
and
andl
stos
sub
rorl
lahf
ja
xlat
xor
outsb
dec
sub
or
jns
jle
mov
add
ret
push
dec
bound
stc
sub
mov
shl
or
cmp
and
leave
and
lods
jbe
sub
notl
xchg
mov
or
and
xchg
push
jl
ret
mov
int3
pop
jecxz
push
inc
in
orb
sbbl
xor
mov
xor
cltd
clc
imul
das
sub
loopne
push
jb
jo
les
mov
cld
push
test
mov
fdivrs
ret
add
iret
and
popa
popf
fisubrl
sub
dec
hlt
sub
lcall
mov
adc
stc
xchg
adc
ficompl
mov
stos
rcrl
call
popf
mov
mov
xchg
testl
add
imul
cmp
out
mov
cmp
mov
jge
mov
mov
inc
lds
pusha
mov
out
sbb
test
or
push
xchg
push
ficompl
fucomp
jmp
test
or
aas
stc
in
mov
adc
pop
xchg
popf
stos
popa
faddl
sub
loop
xor
push
insl
xchg
lods
or
test
pop
arpl
dec
lea
inc
outsl
jp
xchg
and
stos
add
add
loop
lock
movsb
cs
je
and
jge
sub
dec
cli
add
nop
clc
leave
shr
cltd
out
add
cli
xor
jbe
cmp
int3
mov
out
lea
pop
adc
fisubrs
repz
js
dec
fmull
sub
stos
push
pop
ret
cmpsl
push
pusha
jb
push
js
cmpsb
fidivrl
dec
push
stos
aam
fists
pop
cmp
scas
ret
xor
and
lods
repz
push
ljmp
mov
push
aas
xchg
pushf
sbb
mov
cmp
pop
push
gs
jbe
xchg
imul
jmp
in
movsl
clc
xlat
loopne
jo
sub
inc
rol
mov
inc
test
ss
cwtl
dec
add
in
dec
push
clc
push
scas
aad
sub
mov
xchg
stos
repz
mov
mov
leave
repnz
pusha
clc
lock
xchg
sbb
pop
inc
ret
data16
inc
mov
jge
xor
push
adc
inc
pop
mov
inc
jb
inc
pop
inc
mov
adc
mov
pop
dec
insl
xor
mov
adc
sbb
add
fdivrl
jl
push
jnp
mov
ja
pop
fidivs
inc
xorb
and
test
push
and
jge
or
insl
mov
and
mov
mov
pop
cmp
lods
stos
mov
and
aas
mov
mov
sti
testl
into
fsubs
adc
daa
or
in
cmp
lret
bound
xor
and
jmp
out
ret
dec
and
push
inc
std
pop
add
fwait
popf
data16
popf
imul
mov
ljmp
or
shlb
lea
nop
loope
out
jb
xorb
imul
fsubrl
outsb
in
mov
mov
mov
lret
ret
push
out
test
cltd
scas
in
push
rorl
inc
imul
cli
sbb
scas
pop
cmpsl
sub
jne
and
push
imul
popf
push
outsl
orb
add
jg
inc
sbb
sbb
sahf
into
test
push
je
out
lret
xchg
out
adcb
jge
dec
mov
jg
rcrb
inc
jno
mov
pop
fcoml
mov
sub
mov
and
inc
fcmovnb
out
loop
cwtl
outsb
in
jb
enter
push
loop
sub
lds
pop
push
jl
fs
cmp
or
jmp
ss
test
mov
in
xchg
sub
mov
xchg
jge
add
loop
adc
cmc
int3
shll
pop
icebp
sub
xchg
add
mov
push
enter
sti
popf
xchg
das
dec
mov
mov
cs
shlb
sti
loop
arpl
ljmp
jne
cmp
lods
fistpll
icebp
test
dec
mov
mov
jns
not
jb
call
cmc
sub
jno
jbe
loope
sarl
stos
lahf
xchg
dec
dec
sbbb
call
adc
outsl
sub
and
inc
pop
cltd
aam
pop
xchg
test
out
pop
or
test
call
sti
jb
mov
movsb
xor
xchg
repz
jno
jae
aad
ljmp
push
mov
add
adc
mov
cmp
bound
push
test
lock
push
testb
sub
pop
lret
lods
xor
push
jnp
push
enter
sub
shll
dec
pop
xor
clc
sub
not
aaa
scas
fimull
xor
adc
jne
and
pop
pop
stos
or
xchg
fcoml
adc
daa
dec
leave
mov
adc
iret
test
mov
repnz
fiadds
xor
mov
inc
shr
push
mov
lret
mov
pop
stos
in
cltd
sub
nop
ret
in
rcrl
leave
pop
cmp
mov
cmp
dec
adc
popa
sbb
mov
lods
mov
mov
adc
xor
mov
mov
fisttpll
adcb
addr16
mov
adc
shll
hlt
das
inc
fs
and
xchg
add
sbb
fsub
jo
out
jecxz
enter
jp
fidivs
cmpsl
pop
test
xor
jb
mov
je
sahf
sarl
jl
imul
pop
fisttpl
and
and
mov
lret
cmpsl
aaa
mov
and
mov
test
sub
jnp
mov
push
andb
push
pop
mov
loope
jecxz
mov
sbb
out
sub
push
pushl
inc
sahf
xorb
cmp
insl
or
fidivrl
lea
push
xchg
add
or
pop
lock
scas
addl
dec
movsb
je
or
cmpb
test
sti
pop
fldt
movsb
and
sti
or
ds
push
cs
lods
sar
sub
out
les
shlb
xchg
push
pushf
adc
jle
sub
dec
in
jge
and
mov
pop
pop
jp
movsl
fdivl
or
leave
rol
out
push
push
dec
leave
fistps
std
addr16
sub
and
ret
insl
lds
insl
pop
cld
mov
xchg
dec
sti
jge
negl
aaa
and
cmpsl
lock
sti
inc
test
jb
les
aam
xchg
sbb
aas
ret
pop
lahf
adc
jno
xor
hlt
xor
scas
ret
repz
aaa
mov
mov
int3
mov
js
orb
sub
dec
inc
cwtl
dec
sub
sub
mov
pop
lret
dec
adc
je
fcoml
arpl
dec
loopne
movsl
mov
dec
xchg
pop
inc
stc
jns
and
xchg
mov
xchg
pop
and
or
lds
les
jae
orl
into
adc
fisttpll
shlb
adc
mov
push
roll
jae
sbb
push
sbb
clc
cmc
clc
cmp
mov
and
leave
add
sbb
push
test
adc
aaa
jnp
and
sbb
int
clc
inc
into
push
mov
shll
push
nop
adc
sub
stc
stos
and
jl
stc
dec
add
psubusw
jge
jp
mov
inc
inc
pop
dec
leave
imul
sbb
popf
out
out
fs
idivl
cs
repz
pop
repz
mov
popa
lock
cs
cmp
jl
dec
jmp
pop
pop
sbb
mov
roll
and
movsb
and
test
push
xchg
jae
mov
xchg
test
in
out
lds
lcall
or
sarb
cmp
nop
jns
or
mov
daa
insb
imul
pop
mov
repnz
lock
sub
out
fcmovbe
mov
and
in
sbb
adc
das
mov
sbb
xchg
add
gs
push
mov
cmpsb
int
sbb
jl
cmp
dec
xor
pop
into
inc
hlt
adc
add
shr
jo
repz
push
adc
adc
xchg
or
or
mov
loope
cmc
rclb
jbe
out
pop
push
add
mov
cltd
sub
lret
fs
and
scas
mov
sbb
dec
data16
js
jge
mov
xor
jne
ret
push
pop
xchg
orb
inc
call
in
mov
xchg
mov
mov
dec
cmp
int
addr16
mov
adc
sarb
pop
sbb
int3
outsb
int
mov
sub
fmulp
ljmp
jbe
pop
cmp
mov
push
dec
les
or
sub
imul
orb
xor
aaa
sbb
pop
ss
mov
and
sub
or
push
push
sub
cmpsl
sub
mov
xchg
stos
mov
jg
push
mov
sub
sbbb
imul
lcall
outsl
cmp
mov
sbb
ret
push
lcall
lar
sub
add
pop
or
jno
pop
dec
repz
and
daa
xchg
sarb
rol
sbb
ja
mov
pop
xor
sub
in
xor
sbb
dec
dec
adc
xor
in
mov
jno
mov
xchg
or
push
insb
and
jle
push
adcl
in
mov
push
ud0
sbb
jno
adc
out
and
add
call
inc
iret
mov
pop
test
test
sbb
mov
aaa
adc
pop
jbe
xchg
jo
popa
or
je
daa
enter
fucom
cltd
push
cld
or
and
jg
adc
sub
into
and
jb
add
jno
sbb
mov
mov
dec
sbb
aas
sahf
popl
lock
or
adc
push
int
popf
xor
out
arpl
jg
scas
dec
leave
sub
dec
push
lods
out
rcrl
out
jnp
out
mov
test
scas
mov
das
add
or
sbb
repz
add
call
or
dec
stos
dec
loop
out
adc
adc
enter
cmp
sub
cmp
adc
cmp
scas
loope
loope
xchg
inc
icebp
sub
or
ror
push
adc
dec
inc
iret
push
scas
or
pop
mov
push
xor
jo
aaa
push
sbb
mov
dec
repnz
push
jge
adc
ror
mov
mov
adc
loope
fcomps
mov
stos
or
aaa
xlat
in
dec
nop
aas
pop
sbb
sub
jbe
out
ret
adc
mov
loope
mov
jae
cltd
adc
mov
insb
int
imulb
add
adc
loopne
or
and
push
sub
push
sub
and
aad
xor
sbb
shr
js
inc
andl
and
dec
mov
add
pop
out
mov
mov
enter
jl
out
dec
inc
sbb
push
in
xorb
and
sub
push
ds
pop
mov
repz
rorl
dec
cmc
sub
pop
sub
jle
in
movsl
push
imul
repz
ret
sbb
movsb
mov
pop
rcl
pop
cmpl
cltd
adc
pop
mov
and
das
mov
outsl
xor
stos
call
jge
ficoms
out
xor
or
jno
bound
pushf
push
add
dec
jo
xor
out
sbb
lea
jno
ljmp
sub
mov
lahf
mov
jnp
not
loopne
sub
jl
xlat
jae
jae
hlt
enter
and
insl
in
inc
push
mov
jae
inc
cld
cwtl
mov
cmp
xor
leave
jae
daa
nop
adc
and
push
pop
je
lahf
cli
xor
pop
popf
test
fcomps
stos
jle
imul
pushf
fwait
or
lock
mov
insb
icebp
mov
cmp
shl
out
cmp
jecxz
xchg
push
pop
icebp
orb
aaa
adc
xchg
pushf
sbb
add
fidivs
je
in
insl
movsb
in
int3
out
dec
jp
cld
cmp
mov
insl
push
sub
cli
mov
xor
xor
addr16
cs
adcl
out
cmp
xchg
push
shr
sub
shl
adc
int3
es
iret
xlat
cmp
xchg
adc
outsb
into
in
xor
pop
push
mov
xchg
push
lds
sahf
mov
je
lahf
dec
enter
add
sarl
mov
ja
in
test
les
xor
fmul
movsb
and
fcom
incb
sub
dec
je
push
adc
stos
je
cmp
jnp
adc
addl
cwtl
and
test
jb
fidivs
dec
inc
in
and
mov
mov
xorl
dec
pop
ja
mov
mov
ffreep
fucom
cmpsb
jno
xchg
rorl
sbb
mov
cli
pusha
pop
test
js
sti
icebp
sub
pop
daa
mov
out
pop
test
sti
repnz
loopne
loopne
test
fildll
cmp
and
mov
dec
inc
hlt
mov
jl
dec
xchg
adc
push
enter
dec
pop
mov
push
and
xor
ds
jle
pop
out
dec
sbb
cmc
mov
mov
enter
add
dec
hlt
test
jmp
cmp
inc
mov
pop
out
insl
fnstsw
push
outsb
xchg
mov
nop
push
test
sbb
jae
xlat
inc
adc
inc
aam
test
scas
mov
dec
adc
and
divl
js
btc
negb
out
scas
mov
adc
ljmp
push
int3
fdivr
cmp
mov
lret
pop
lret
pop
sbb
mov
xor
imul
jbe
out
jbe
cmpsb
sbb
gs
lret
aad
scas
hlt
andb
mov
dec
lock
add
pop
std
jle
cs
sub
fucomip
mov
andl
push
push
lcall
dec
cmpsl
out
inc
xor
repz
lock
cltd
jge
sar
mov
sub
rorb
shlb
sti
fcoms
or
sub
add
fnstcw
popa
ficomps
mov
pushf
jecxz
push
mov
out
in
dec
jg
mov
mov
jle
sub
jmp
cs
fs
xor
and
nop
push
adc
dec
and
popf
scas
daa
mov
nop
dec
pop
dec
movsb
xchg
cltd
and
add
xchg
dec
xchg
mov
mov
sbb
sbb
fbld
cmpsb
and
push
test
js
test
adc
or
xor
mov
sbb
aas
aad
cs
das
xchg
jp
xchg
push
mov
mov
xchg
pusha
xor
push
cmpsb
mov
cmp
dec
push
fsubp
cmp
cmpsl
inc
in
lcall
rolb
xor
out
jl
shl
push
pop
jmp
ss
iret
ja
pop
leave
pop
add
push
xlat
fwait
inc
sbb
pop
mov
jns
mov
sbb
push
inc
cmpsl
dec
or
aaa
sbb
cmpsl
or
stos
pop
out
mov
jp
sti
out
int3
repnz
cmp
xchg
rcrb
xor
int
mov
daa
lcall
sbbl
cmp
repz
xor
cmc
dec
cmc
andb
lock
roll
sahf
addr16
lahf
lods
pop
out
ja
mov
loopne
cli
jge
jecxz
jle
inc
xor
out
inc
or
gs
adc
and
call
mov
cmp
or
test
dec
outsl
int3
arpl
mov
add
data16
cmc
fnsave
out
adc
mov
jb
sub
xor
stc
sbb
mov
cmc
sbb
cmp
mulb
and
fcmovnb
fistpll
fs
lock
and
in
test
sbb
or
stos
adc
pop
xor
sub
stos
or
outsb
jg
loopne
data16
push
sub
sbb
and
mov
xchg
mov
mov
inc
add
ret
mov
aaa
ljmp
or
std
sbb
push
xchg
sub
xor
or
in
mov
ljmp
sbb
cwtl
pop
inc
push
mov
xor
push
or
cmpsb
add
int
mov
lds
xor
xor
add
aad
fld1
aas
popl
xchg
jg
push
xor
jo
rcrb
jo
mov
dec
inc
jbe
fprem
or
rolb
push
test
insb
stos
add
jl
aad
xchg
sub
fwait
cld
or
cmp
fildll
popf
pop
jecxz
inc
xor
pushf
add
filds
cmp
pop
add
add
ret
xor
aad
mov
dec
jge
ja
cli
nop
pop
popf
and
mov
movsb
sti
mov
xorb
test
add
test
jbe
jp
ds
sbb
in
xchg
shrb
jle
cmp
rcrl
pop
and
arpl
xor
mov
addb
adc
movsb
popa
lret
fmulp
jnp
xor
push
sub
mov
pop
imul
add
xor
sub
push
enter
mov
fisttpll
loopne
cmp
cli
xor
aam
and
negl
and
add
sub
jmp
ret
daa
cmpsl
add
mov
dec
sub
mov
jmp
xchg
leave
or
inc
inc
sub
sub
out
pop
shlb
xlat
and
xor
and
sbb
adc
pop
xor
lds
or
sbb
lret
or
fucom
xor
into
es
sub
test
push
je
xchg
rcrl
in
imul
push
imul
sub
nop
mov
idivb
mov
cltd
lea
aam
nop
stc
aaa
push
popa
mov
dec
lods
cld
dec
add
loope
sbb
test
loop
lcall
lock
push
mov
mov
cld
fadd
insb
addr16
pop
xlat
fsubs
sub
es
sarb
shll
jmp
pop
xchg
jbe
ss
lret
pop
outsl
fsubs
mov
adc
xchg
add
movzwl
cld
lea
inc
ds
xor
filds
lret
mov
call
cmp
jmp
test
loop
inc
int3
xor
pushf
aam
adc
push
mul
xor
cmpl
and
and
in
repnz
aam
mov
mov
xchg
in
inc
mov
jl
iret
mov
mov
outsl
push
dec
xor
stc
jnp
fbstp
or
das
lods
jnp
movsb
push
test
mov
mov
pop
dec
orb
cmpsl
mov
out
mov
repz
lock
ror
out
loopne
or
or
lods
cld
xchg
xchg
pop
test
ret
xor
or
rcll
sub
idivb
jae
inc
sbb
inc
pop
rcrl
pushf
jns
movsl
lret
ss
xchg
rsqrtps
jno
mov
jno
sub
scas
dec
sarb
popa
push
adc
sarb
inc
fsubrs
pop
push
mov
xchg
pusha
pusha
xchg
sbb
xchg
dec
enter
xchg
sbb
idivl
js
fs
push
xor
adc
pop
imul
push
test
sarl
ljmp
inc
stos
es
mov
lods
xchg
mov
push
jnp
fnstsw
jmp
cli
mov
mov
xor
mov
lods
loopne
inc
je
cvtps2pi
sbb
pop
lret
and
xlat
in
mov
fcmovu
mov
data16
dec
test
mov
jnp
jns
inc
sub
pop
scas
fwait
mov
and
sbb
loope
mov
xchg
mov
pop
cmc
mov
cli
cmc
or
mov
int
fistl
push
fdivs
jo
cmp
aas
pop
popf
popf
ja
or
inc
or
sbb
pop
mov
dec
pop
add
loop
les
pop
inc
int3
dec
loopne
dec
jae
pop
mov
scas
mov
fs
pop
push
aaa
dec
lahf
sbb
add
sahf
nop
jo
fbstp
inc
jecxz
and
outsl
jbe
ja
mov
mov
mov
imul
call
leave
jg
mov
mov
dec
pop
dec
adc
mov
or
push
fldcw
cmp
lahf
and
loop
ret
xor
mov
xor
repz
jle
jp
out
jae
push
xchg
push
mov
inc
jmp
and
lods
repz
shrb
lds
clc
cmp
vcvtpd2psx
or
test
outsl
and
sub
xor
iret
sbbb
inc
imul
loop
and
test
push
xor
xor
icebp
jne
insb
inc
dec
mov
or
and
jnp
fdivrl
popa
sub
mov
mov
mov
push
fs
mov
dec
add
sbb
dec
call
lods
inc
jno
xor
add
pop
fwait
and
sub
cld
mov
cmp
loop
inc
mov
loopne
push
lretw
mov
or
in
imul
test
testl
xchg
xlat
nop
pop
jl
loopne
shr
enter
lods
scas
and
add
jno
push
or
insb
fisubs
test
mov
out
test
pop
shr
or
in
test
shll
jns
sahf
ficompl
popa
das
ds
notl
jb
jecxz
xchg
xchg
lret
xchg
mov
ss
jbe
movsl
orb
out
jb
xchg
scas
inc
add
ret
mov
or
mov
ficompl
or
enter
int
insb
enter
adc
pusha
popa
cli
push
jbe
fmul
inc
std
fldt
out
jno
jmp
fildl
insb
scas
xchg
jg
sbb
dec
fistps
and
test
inc
das
mov
stc
aaa
jecxz
in
inc
xchg
jb
cmpsl
jl
jbe
lret
out
mov
adc
push
aad
iret
test
stos
ja
mov
lock
lock
mov
mov
mov
test
push
or
jg
and
add
pop
mov
pop
into
mov
jl
cmp
aas
enter
pop
xchg
dec
push
and
ds
lcall
sbb
fistpll
jg
mov
adc
xor
lea
loop
xchg
mov
jns
in
movsl
lret
je
loop
sub
or
adc
out
cmp
les
fisubrl
push
pop
fidivl
pop
adc
mov
or
scas
sahf
test
cmc
jnp
adc
out
inc
jb
and
into
mov
adc
cmpsb
mov
jno
lock
lahf
popf
or
push
add
cmp
lods
sarb
aaa
xor
out
push
xor
dec
cld
leave
pop
ret
lock
fbstp
mov
scas
pop
mov
cmp
pop
sub
xchg
push
in
xchg
or
dec
popa
test
sarb
inc
xlat
lds
sub
ljmp
pop
jbe
addr16
mov
pop
int
mov
jbe
enter
add
pop
out
test
inc
stos
and
addr16
push
xchg
js
mov
jne
inc
add
cli
repnz
cmpsb
pusha
adc
and
or
sub
mov
movsb
jmp
mov
push
cli
mov
lret
pop
aas
pop
xor
popa
jp
xor
and
cmova
xchg
sub
xchg
pushf
nop
mov
sbb
push
pop
mov
ret
loopne
sti
mov
mov
mov
xor
xchg
sbb
test
arpl
inc
mov
loopne
mov
fisubl
rcrl
mov
test
cmc
out
cmp
cmp
fldcw
ret
cld
xchg
dec
lock
test
pop
scas
cmpsl
sbbb
jns
jg
pop
push
clc
out
stos
and
in
call
je
dec
imul
into
pop
mulb
repz
je
dec
jnp
int
dec
ret
xlat
fisttpl
test
imul
cmp
int3
mov
es
adcb
fidivrs
sub
testl
shr
sarl
lret
js
pushl
xorb
push
pop
mov
stos
xor
movsl
movsl
shll
test
testb
cmp
dec
addb
fistps
sbb
insb
repnz
mov
xor
test
pusha
sbb
cmp
repz
inc
sub
cmp
int
mov
lcall
and
pushf
xchg
stos
ror
fwait
dec
hlt
std
lret
and
pop
out
aas
sub
pushf
adc
mov
ja
hlt
xchg
or
popa
or
stos
dec
adc
lcall
push
imul
push
adc
push
ljmp
sbb
jge
and
sbb
cmovns
enter
call
cmp
cmp
aaa
sbb
jo
shr
mov
fstl
or
add
mov
jecxz
sub
jo
mov
push
leave
sub
aam
xor
dec
pop
xchg
xor
jl
icebp
call
sub
cmp
fsubs
in
addr16
in
testb
ds
inc
pop
call
lock
fistpll
inc
pop
adc
and
loopne
movb
inc
lret
lea
sbb
fsubr
leave
mov
inc
push
lret
out
lret
loopne
outsl
test
jns
mov
xchg
jl
rorl
pop
cwtl
aam
lea
fwait
cmp
bound
push
gs
lret
lock
push
push
neg
cmpb
popa
fcmovu
sbb
pop
adc
xchg
sbbl
or
test
ja
push
loop
push
jge
xor
in
jg
dec
xchg
lahf
divb
lahf
jge
mov
addb
lods
repz
and
sbb
idivl
repz
sub
aaa
inc
jmp
mov
into
popf
std
sbb
push
jno
out
or
sbb
cmpsb
dec
push
sti
loopne
xchg
loopw
sub
inc
adc
dec
das
rorl
mov
scas
incl
xor
in
aad
in
adc
xchg
sarl
das
loop
mov
inc
mov
enter
adc
mov
fcmovu
subb
cmp
ror
pushf
mov
shll
pop
jp
sbb
in
push
sbbl
lcall
sub
ds
sub
push
shr
cmp
cmc
or
stc
orb
lock
pop
data16
xchg
push
pop
sbb
leave
xchg
insl
xchg
mov
xor
call
pop
sub
pop
stos
xor
or
scas
inc
mov
sarb
adc
mov
adc
add
inc
into
jne
lea
or
pop
insb
pop
aad
clc
popf
mov
mov
jo
dec
inc
pop
xchg
in
lods
sbb
inc
pop
repnz
xchg
ficompl
inc
pop
out
mov
roll
fldcw
shll
push
mov
rclb
inc
popa
or
int3
push
xchg
pushf
sbb
test
push
sub
mov
movsl
aad
aad
mov
adc
and
xor
cmp
outsl
inc
mov
mov
xlat
lods
xchg
daa
ljmp
out
pop
insl
loope
dec
shlb
mov
inc
ret
add
cmpsb
lret
pop
jmp
imul
push
xchg
stc
xor
jmp
nop
dec
cmp
out
mov
or
in
jo
nop
mov
fcoms
pop
dec
cmc
push
inc
icebp
lcall
jg
adc
out
enter
xchg
mov
leave
dec
std
inc
andb
jne
xchg
pop
call
lock
pop
mov
pop
in
push
ror
push
fstps
popa
and
cli
test
mov
pop
sbb
sbb
and
add
sbb
pop
mov
pop
xlat
aam
and
or
notl
mov
add
mov
xchg
xchg
imull
cmp
jmp
aaa
or
lock
subl
dec
and
pop
es
adc
mov
andl
push
jg
loopne
xor
mov
ja
scas
lods
rolb
sub
fxch
ja
int3
jno
and
mov
test
sub
data16
sub
mov
fnstcw
cld
jo
into
dec
sbb
inc
sub
out
daa
adc
jl
movsb
mov
idiv
pop
dec
inc
adc
cmp
mov
jne
add
cmp
jg
subb
sub
cmp
dec
stos
mov
pushf
cmpsl
in
in
shr
enter
jno
mov
jbe
lret
jmp
int3
jmp
xchg
mov
or
fs
sti
les
or
pushf
sti
dec
gs
imul
mov
stos
sub
loop
inc
outsb
inc
dec
pop
in
lcall
daa
add
setbe
or
inc
dec
xchg
push
inc
fistps
xor
mov
push
lret
lret
je
xchg
adc
mov
cs
push
or
and
push
or
mov
clc
mov
cmp
out
sbb
mov
pop
mov
addr16
outsb
ljmp
or
iret
pop
pop
call
sahf
jp
or
stos
iret
ret
cmpsb
mov
add
push
xchg
mov
fucomip
subl
mov
incl
lcall
jae
leave
cmp
fldt
subl
add
push
stc
imul
leave
popa
add
addl
xchg
jg
ror
add
movsb
ja
loopne
testb
int
mov
mov
pop
mov
inc
cmpsl
jge
scas
adc
and
data16
mov
adc
test
fwait
xchg
cmp
cmp
mov
push
sub
cli
sub
or
dec
mov
aad
jns
dec
dec
hlt
imul
shlb
xchg
std
sub
dec
cmp
das
mov
mov
and
xchg
subl
jne
mov
das
cwtl
push
gs
loopne
lahf
push
jo
std
jno
mov
cmc
ret
sub
or
sahf
pop
loop
pinsrw
add
sbb
and
shlb
mov
pop
imul
pop
sahf
sub
and
rcll
or
fcomps
dec
or
dec
cmp
aam
rorl
stos
nop
je
push
cmc
repz
into
inc
cmp
inc
into
mov
cmpsb
dec
lods
fsincos
pop
xchg
lahf
adc
pop
shrl
hlt
popa
je
inc
push
or
cmpsl
sbb
xchg
pop
clc
fsubl
cmpsl
cmp
xchg
dec
and
int3
mov
outsl
fisubs
pop
das
popa
scas
sbb
adc
hlt
adc
pop
xchg
cli
insl
insb
lret
pop
mov
test
xor
push
sarb
lret
push
sti
movsb
inc
pop
loopne
dec
pusha
jnp
fcompl
loope,pn
add
push
fiaddl
push
rcll
int
stc
mov
sbbl
push
adc
loope
dec
mov
dec
icebp
pop
mov
inc
outsb
sub
xor
aaa
xlat
cmp
imul
insb
das
lret
cmp
jp
push
roll
movsl
xchg
fsubrl
xchg
cmp
pop
jg
push
sbb
push
fimuls
inc
lahf
xchg
xor
and
push
imul
sbb
mov
daa
jmp
xchg
mov
mov
lahf
add
mov
mov
mov
cltd
nop
or
mov
out
cmovp
sbb
clc
xlat
mov
std
mov
dec
cmp
xchg
or
fcoml
popa
sbb
fldcw
clc
adc
ret
insb
arpl
je
push
sar
or
mov
mov
xchg
lret
or
icebp
mov
in
rep
sahf
push
and
ds
xlat
mov
popa
add
xchg
pop
rcrb
mov
cltd
xor
test
pop
shrl
pushf
inc
movsl
icebp
negl
sbb
xor
sbb
fidivrl
push
out
xor
je
cld
idivl
pop
rorl
dec
call
pop
sti
cmp
int
jecxz
jae
add
movsl
sahf
cmpsl
in
dec
add
fsubrs
and
mov
inc
jg
sub
push
call
cmpsl
push
js
pushf
dec
rorl
mov
cmp
sub
mov
xchg
push
push
inc
inc
imul
imul
add
push
cmp
mov
xchg
push
cmp
xchg
sbb
pop
imul
mov
icebp
lret
pop
sub
cmp
sahf
adc
jmp
ss
push
shll
iret
es
adc
fs
jmp
mov
loopne
into
call
movsl
xchg
ret
insl
sub
and
xor
nop
popa
stos
dec
lahf
jnp
imul
inc
sbb
jge
bnd
in
mov
movsb
popa
mov
cmp
outsb
mov
xchg
mov
pop
add
push
cld
cmc
jo
xchg
sub
cmc
xchg
int
gs
rorl
js
pop
cmp
mov
dec
int
pop
pushf
jl
fimull
sbb
xchg
loopne
mov
mov
bnd
loop
mov
jns
cmp
ret
pop
cmp
jmp
sbb
movl
inc
mov
loop
addl
addr16
das
lock
cld
xor
jecxz
outsb
icebp
fimull
out
popf
push
sbb
and
stc
and
mov
lcall
scas
mov
addb
mov
sub
mov
sarb
or
ror
mov
loope
xchg
adc
pushf
lea
sbb
push
cld
jmp
ss
and
or
std
add
jle
je
aad
sahf
jge
jecxz
cmp
inc
call
jmp
subl
gs
hlt
shll
ret
test
xchg
add
lret
push
mov
fildll
lods
loop
mov
cs
xchg
lds
jae,pn
loopne
pop
mov
cmp
daa
aam
ret
aaa
fwait
out
pop
pop
push
repz
fdivp
shrl
sub
imul
cmp
fldpi
cmp
add
pop
bound
xchg
out
sub
jbe
cmp
push
cmp
imul
je
pop
enter
cld
aas
push
and
lds
pop
loope
aas
or
das
lock
popf
lret
int3
data16
movsl
xor
rcl
in
jnp
movsb
scas
mov
push
sub
cmp
adc
add
test
jmp
insl
pop
les
jno
mov
push
push
call
cmp
sbb
pop
xor
jl
pop
int3
mov
stos
mov
jge
in
mov
fs
or
rcl
repz
xor
push
mov
mov
les
testb
fwait
leave
sahf
rcl
or
daa
push
mov
dec
mov
push
in
pop
std
mov
sbb
xchg
lcall
push
ja
xchg
add
decb
faddl
nop
ja
repnz
icebp
mull
outsb
rcrb
imul
xchg
inc
inc
orl
cli
arpl
in
mov
nop
fmuls
add
test
xchg
xchg
outsl
jle
mov
add
xchg
pop
mov
flds
fistl
orb
add
sbb
mov
pop
sub
pop
mov
movsl
imul
out
mov
mov
shlb
dec
imul
std
mov
int
fxch
mov
or
or
push
rclb
std
lret
pop
cwtl
and
gs
dec
mov
pusha
test
dec
mov
daa
xor
scas
divl
lret
stc
imul
cmp
push
pop
test
dec
sbb
lret
rolb
add
out
icebp
icebp
pop
mov
mov
inc
addl
leave
add
sahf
int3
or
packuswb
mov
xchg
lds
lret
movsl
imul
mov
sbb
fldt
mov
push
call
cmp
jo
or
or
das
cs
pop
fnstenv
push
out
jo
cmp
repnz
inc
sbb
sub
cwtl
cmp
popf
iret
sub
cld
aas
mov
mov
sub
lods
in
push
and
sub
sbb
enter
jae
jg
maskmovq
mov
and
mov
adc
dec
test
push
push
push
push
jg
loop
outsb
inc
aaa
lahf
mov
push
push
in
cmp
mov
xchg
subb
stos
sub
lods
or
fildl
mov
in
dec
loop
push
inc
pop
aam
stc
push
scas
push
inc
cmp
movsb
lock
xor
sbbl
push
jp
add
pop
cmp
mov
push
movsl
mov
outsl
and
dec
cmpb
pop
pop
aad
mov
mov
addr16
lret
leave
aam
xor
dec
sub
push
xlat
test
push
add
or
inc
insl
pop
js
pcmpgtw
mov
inc
sbb
mov
fcomip
cmpsb
aad
mov
sub
fs
pop
mov
push
and
add
imul
xor
dec
pushf
cwtl
icebp
popa
andl
mov
mov
sbb
ret
dec
int
mov
or
jne
inc
pop
mov
xchg
pusha
sub
imul
jl
lock
dec
adc
data16
aad
pushf
or
fldt
pushf
mov
dec
jae
xor
ret
push
and
sbb
inc
sub
mov
sub
mov
xchg
icebp
in
inc
mov
inc
mov
cmpsl
dec
leave
les
loope
pop
dec
mov
cmp
jl
and
aaa
movsl
out
insl
stc
mov
ljmp
out
mov
xor
adc
mov
pop
mov
fadds
int
aad
lea
xor
jg
pop
enter
push
cmp
and
ljmp
adc
push
in
or
lea
adc
ret
adc
in
cli
lret
shrl
xchg
daa
mov
push
and
adc
push
out
jmp
adc
adc
icebp
out
or
mov
dec
ss
inc
sbbb
jns
xlat
jg
push
push
lcall
sbb
mov
rorl
repz
or
icebp
lret
je
movsl
jmp
lods
pop
idivl
inc
pop
stc
cld
jge
add
aad
fistpll
sub
sub
aam
cmp
push
addr16
pop
push
out
cmpsb
in
pop
lret
aam
adc
jo
inc
push
lods
cli
jl
ds
es
daa
lods
add
jb
sub
sub
xchg
mov
jge
in
mov
push
jmp
mov
xchg
sub
repnz
lock
in
shlb
fdivl
cmpsb
xchg
aaa
aas
jle
dec
mov
mov
dec
negl
fisubrs
inc
inc
cmp
in
nop
sbb
hlt
mov
lds
xor
cmp
or
and
pop
mov
daa
inc
sub
push
addb
push
push
repnz
pop
rcl
and
mov
sahf
jecxz
push
pushf
mov
inc
xchg
es
jo
addr16
outsl
jne
fwait
cmpsb
loope
mul
movsb
xor
cs
xor
aaa
inc
shl
add
xor
jmp
push
pop
lcall
xchg
push
xchg
scas
jae
cmp
lcall
cmp
inc
or
jg
dec
rcr
dec
sub
inc
nop
inc
ljmp
xor
mov
xor
xchg
jb
mov
xchg
pop
in
or
aad
loop
inc
add
cmc
add
sbb
inc
fwait
stos
dec
loopne
push
sbb
rolb
mov
insb
pop
popf
fistpl
mov
xor
cmp
adc
mov
or
push
arpl
push
cmc
sub
test
add
test
shr
push
jnp
pusha
fwait
icebp
pop
adc
mov
mov
pop
sub
pop
std
pusha
dec
cli
mov
loopne
popf
je
push
data16
cs
test
bound
jge
sub
ljmp
jl
jne
add
push
jmp
mov
dec
push
cmpsl
dec
xchg
jl
addr16
mov
shl
mov
shl
mov
test
cli
icebp
mov
mov
mov
push
mov
inc
sub
gs
sti
stos
lods
mov
mov
outsl
jle
lds
xor
jbe
cmpb
shrb
dec
sahf
mov
pop
into
sbb
and
sub
mov
mov
or
sbb
imul
mov
sub
mov
pushl
inc
add
shll
and
ret
aas
push
mov
and
jb
mov
jo
pop
xor
das
mov
add
pushf
cltd
mov
fdivs
mov
lds
mov
ja
add
mov
loop
and
and
addr16
fs
cmp
arpl
pop
ljmp
out
sub
lret
inc
outsl
ss
xchg
mov
xchg
pop
cmp
mov
shlb
nop
mov
fwait
cmp
mov
sub
iret
xchg
mov
mov
pop
xacquire
loopne
sub
cmp
inc
ljmp
fdivrs
mov
loopne
test
cltd
mov
loopne
push
imul
pop
sarb
sub
mov
dec
ss
out
imulb
jp
arpl
mov
jp
test
push
pop
xor
icebp
fsubs
fadds
scas
sub
mov
gs
pop
pop
mov
add
add
and
sub
pop
sub
orl
xchg
sub
shrb
push
retw
xchg
pop
aad
or
xchg
fiadds
jge
sbb
fistl
inc
enter
repz
out
ljmp
and
add
int3
and
jl
into
jl
or
add
test
filds
pop
cmp
shrb
or
lret
mov
out
pmullw
mov
mov
pop
enter
aam
mov
push
fwait
sub
xor
xchg
inc
int
cmp
imul
out
clc
add
cld
in
stos
pushf
dec
loope
jle
fdivp
mov
pop
lea
add
xchg
adc
ss
out
sbb
fstpl
dec
rclb
pop
dec
xor
sub
cli
add
loopne
xor
or
mov
loopne
leave
push
movsl
loopne
jb
fs
adc
in
aam
and
cmp
rolb
lcall
aas
loope
sbb
mov
mov
cmp
gs
push
push
push
outsb
loopne
and
fadds
sub
cmp
jecxz
cli
sbb
out
mov
sbb
mov
adc
push
jl
mov
jno
mov
enter
scas
pop
bnd
out
je
jmp
sbb
aas
in
push
xchg
add
mov
jb
sub
test
pop
sbb
shrb
mov
mul
pushf
iret
dec
xchg
pop
jno
cmp
repnz
inc
sbb
lret
cs
jns
mov
xor
stc
sbb
inc
insl
shrd
rolb
mov
push
hlt
in
dec
andb
fimull
cmp
idivl
push
or
mov
mov
mov
pop
outsl
jg
test
jbe
fmull
scas
jnp
aaa
sub
pop
push
ret
es
push
andl
mov
out
js
shll
incb
dec
dec
es
test
sbb
dec
int3
or
mov
mov
mov
or
cmp
fdivl
std
dec
imul
dec
lcall
and
sbb
fildll
dec
mov
push
int
ret
mov
xlat
xchg
loop
outsl
and
loop
out
loop
mov
fs
pop
add
hlt
cs
lahf
xor
pushf
xchg
outsl
jae
cmp
ret
mov
repz
push
divps
movsb
add
popa
rcr
cld
sub
aam
int
xchg
mov
ljmp
add
imul
lea
mov
add
sti
dec
mov
mov
leave
adc
jecxz
or
outsl
and
xchg
int3
les
sbb
inc
cmp
sub
or
adc
xor
xlat
xchg
inc
fucomip
adcl
movlhps
push
movsb
push
movsb
and
sarb
daa
fnstenv
sbb
movsb
call
inc
jg
push
or
sbb
je
psadbw
in
repz
pop
outsl
iret
push
nop
ficompl
jge
add
and
xor
xor
adc
pop
ljmp
test
inc
jne
pop
aad
sbb
xchg
ret
inc
addr16
mov
into
loop
mov
cmp
add
inc
dec
fildl
and
ds
mov
pop
insl
jno
pop
mov
mov
cwtl
cmp
or
pop
pop
pop
cmp
orl
mov
jl
lock
jl
fisttpl
pop
adc
insb
roll
push
jbe
and
mov
repnz
stos
movsl
dec
cmpb
jns
sub
jno
sbb
xchg
dec
test
out
in
sbb
xchg
adc
outsb
cmpsb
ret
xchg
sub
add
arpl
xchg
mov
cmp
test
adc
mov
sub
cld
jne
xor
jno
mov
mov
insb
jb
icebp
imul
cmp
mov
data16
jmp
pushf
iret
adcb
mov
jo
or
dec
adc
mov
mov
outsb
add
xor
pusha
insl
into
movsb
fists
int3
jecxz
ljmp
xor
in
pop
push
add
ja
es
ljmp
jno
insb
and
mov
lcall
insl
fistpl
xchg
insb
repz
and
mov
push
sub
adc
sbb
hlt
mov
sbb
dec
les
pop
adc
cs
push
fmuls
cmpsb
scas
jp
adc
or
pushf
push
enter
scas
cwtl
lcall
or
fwait
pop
pusha
ficomps
lods
outsl
adc
mov
xchg
xor
jno
mov
jno
ret
dec
dec
adc
add
stc
out
imull
push
cmp
lret
xchg
dec
outsl
outsl
dec
mov
inc
mov
mov
mov
popa
repnz
mov
repz
ret
loope
mov
or
cs
inc
adcb
fisttpll
pop
out
mov
sbb
mov
aas
mov
jbe
adc
xchg
adc
mov
fdivl
add
inc
add
out
shl
dec
loopne
call
stos
inc
jle
fisttpl
xor
clc
push
lea
pop
sbb
dec
jnp
mov
or
imul
dec
cmp
jo
pop
ficoml
movsl
inc
fwait
push
dec
fistps
bound
or
adc
xor
iret
add
clc
cmp
xchg
inc
mov
adc
je
push
cltd
es
inc
push
cli
xchg
jno
sbb
pop
xchg
jne
inc
jmp
cmp
imul
aaa
mov
sarb
jle
dec
cmp
add
outsb
repz
jl
scas
arpl
icebp
cmpsl
mov
mov
int3
mov
fdivrs
mov
clc
xchg
div
nop
xchg
mov
adc
rorl
shrl
pop
xor
or
cltd
and
xchg
mov
outsl
mov
cmp
mov
pop
fdivr
ds
adc
and
cmp
repz
dec
in
xchg
jnp
cmovle
insl
cmp
push
mov
xor
push
inc
cmp
xor
sar
push
mov
shr
das
outsb
dec
adc
jl
jge
add
xchg
push
cmpsb
lret
lods
sbb
cmp
xor
mov
aaa
and
pop
and
test
xor
ss
lds
push
in
les
jne
lret
sub
dec
cli
jmp
rorl
int
jno
mov
xchg
hlt
test
dec
pop
jg
outsb
add
cmpsl
fs
cmc
mov
cld
adc
bound
and
dec
fidivs
push
mov
mov
sub
sbbb
orb
outsl
pop
repz
mov
cmp
mov
adc
mov
pop
push
push
push
adc
jle
ficoml
aam
out
in
xchg
cli
ja
and
inc
int
push
mov
aas
or
and
xchg
push
mov
sti
mov
pop
insl
loop
push
jg
mov
mov
add
mov
mov
sbb
mov
add
dec
mov
lret
shlb
iret
outsb
xchg
add
mov
sub
stos
stc
loop
hlt
ret
sbb
mov
addl
mov
cmp
xor
testb
mov
pop
xchg
insb
mov
icebp
adc
vmovupd
icebp
fstpl
mov
pushf
fmuls
adc
ret
loope
push
xor
dec
leave
mov
fstpt
aam
adc
stc
call
cmp
push
jns
stos
addb
dec
sub
in
dec
outsb
in
jecxz
sbb
push
out
inc
orb
ss
inc
jno
shl
xorl
sbb
xchg
ja
hlt
pop
int3
cld
clc
dec
popa
sub
xor
cmc
dec
rcl
fiadds
push
dec
dec
out
clc
inc
add
pop
not
mov
sti
out
mov
cmp
xor
leave
mov
in
out
jmp
lahf
add
mov
test
lods
mov
call
mov
rol
addb
mov
xchg
add
cli
add
mov
mov
pop
pop
cmp
divl
fmul
jne
and
xor
push
adc
jmp
insb
dec
fldcw
push
dec
out
and
mov
jle
inc
jno
vorps
jge
push
ret
div
mov
cmp
rcl
cmp
cld
aaa
push
jle
in
xchg
mov
in
and
aas
popa
lret
fstps
pusha
sbb
fmull
aaa
and
add
decb
aad
adc
dec
scas
es
arpl
lret
xchg
xor
jp
inc
and
pushf
leave
inc
ja
push
loopne
lds
cli
insb
pop
cli
fwait
cltd
or
aad
fisubrs
ficompl
hlt
xor
dec
pushf
pop
and
aaa
into
mov
inc
mov
xchg
push
rcrb
outsb
pop
popa
push
es
dec
mov
inc
cmp
gs
les
insb
imul
dec
inc
lcall
add
and
dec
push
sub
or
cmpsl
mov
mov
in
jnp
lods
orl
cmp
bound
mov
xchg
psllw
mov
and
pop
push
jle
jg
ljmp
es
pushf
adc
adc
pop
icebp
stos
push
xchg
cmp
test
loope
push
les
mov
mov
lds
and
jae
and
sbb
pop
jae
popa
sarb
adc
pop
aas
ja
fisubs
cld
pop
xchg
addl
insl
in
popf
repz
fildl
or
testl
lret
mov
and
jg
inc
ficompl
add
repnz
movsl
sub
pop
jne
andb
dec
mov
push
popf
inc
mov
xlat
pop
adc
pop
mov
dec
cmp
sahf
mov
xor
mov
test
or
and
pop
and
jecxz
fwait
cltd
push
push
ja
loopne
test
in
pop
cmc
jo
mov
cmp
mov
mov
divb
out
cmp
popf
pusha
lret
or
or
lcall
xor
mov
je
cmp
cs
into
jne
add
push
movsb
dec
sbb
sub
mov
mov
icebp
mov
and
or
dec
test
fildll
push
js
add
pop
jbe
push
mov
sbb
mov
outsl
push
mov
jne
lret
add
dec
push
cmpsl
xchg
add
lds
pop
mov
popf
fwait
popa
dec
jg
fsubrs
or
add
mov
mov
and
and
pushf
decb
jl
ds
movsb
push
bound
mov
cs
mov
mov
sbbb
outsl
lods
outsl
dec
clc
out
cmpsl
mov
cmp
and
loop
ds
int3
add
mov
inc
sub
jne
pop
orb
jg
pop
mov
push
insb
enter
leave
push
inc
adc
push
or
and
pop
add
add
adc
stc
jns
xor
xchg
decb
dec
jo
subl
rol
jg
mov
or
mov
push
shll
mov
shr
shll
lods
cmp
loope
shr
addr16
lret
cmpsb
xlat
popa
stos
cmp
stos
imul
cmp
es
add
sub
mov
imul
sti
mov
adc
fildl
xor
sub
outsb
in
cmp
cmp
xchg
push
aaa
adc
pushf
push
fcoml
in
add
testl
inc
push
jge
dec
pop
pop
pusha
inc
push
xor
jg
fcoml
xor
lcall
push
push
pop
add
dec
sbb
xor
movsb
lods
icebp
sub
push
cmp
adc
push
xchg
ljmp
xor
mov
repz
jns
adc
popf
and
in
mov
fs
in
dec
fcmovu
cld
xor
popa
inc
add
aas
rorb
shl
mov
inc
pop
pop
jb
dec
pushf
mov
addr16
and
subb
xor
and
fmul
incl
push
shrb
jp
xlat
aam
mov
je,pn
cmp
loope
inc
ret
mov
xor
mov
pop
lcall
in
pop
xor
out
clc
add
inc
insb
add
xchg
jg
into
testl
scas
call
pop
fnstenv
shrb
mov
or
add
lock
outsb
aad
adc
fnsave
sub
sub
scas
pushf
push
sub
sbb
mov
push
aas
dec
fwait
dec
mov
enter
cmp
jne
lret
leave
xchg
pop
xchg
push
ljmp
lock
movsb
gs
lret
int3
ja
mov
fistpl
loop
je
ret
and
nop
cs
mulb
mov
fwait
pop
jl
stos
stc
sbb
adcb
sbb
pusha
insb
cltd
in
mov
pop
xor
jne
add
dec
insl
push
adc
or
mov
or
xchg
cltd
jne
lods
and
scas
inc
dec
mov
orb
inc
sbb
push
jb
jl
jp
and
xor
fucomp
xchg
popa
aam
xor
addr16
or
lods
mov
push
add
rcr
sti
lds
sbb
fildl
out
stos
sub
push
pop
aas
gs
inc
push
mov
imul
jo
shll
mov
sbbl
loopne
xor
push
int
or
out
jmp
pop
in
lcall
pop
jo
clc
lret
dec
loop
loope
jno
cld
pop
inc
in
jl
roll
jmp
xor
outsb
jge
stos
xchg
push
and
xor
push
jle
pusha
xorb
cmp
in
lahf
adc
mov
js
mov
nop
icebp
repz
jle
push
jp
pop
mov
mov
repz
mov
mov
sub
push
jge
test
jae
in
sbb
jl
xchg
clc
fisubl
adc
cmc
dec
ret
push
pop
in
push
in
adc
and
fsub
add
shrl
mov
das
push
rorb
mov
xor
push
imull
stos
out
mov
mov
pop
testb
stc
fs
mov
std
lods
mov
in
les
adc
pop
popa
cld
cmp
subl
aam
inc
cwtl
pop
sub
mov
out
sub
sbb
push
cwtl
push
push
and
popa
push
or
sbb
sub
mov
or
clc
pop
addr16
call
push
ret
add
iret
enter
push
push
xchg
jbe
dec
push
jg
loopne
xchg
nop
fcomps
xchg
int3
cli
jb
sub
fwait
or
mov
xor
inc
push
sti
cltd
inc
fdivrl
pop
into
and
add
cmc
cmpsb
cs
push
icebp
arpl
test
mov
add
cmp
test
sbb
mov
mov
loope
stos
xchg
mov
inc
mov
jbe
bound
fnstsw
cwtl
jns
shll
data16
mov
and
and
mov
pop
in
xchg
sub
cmp
aam
sahf
testl
stos
rorw
cmp
xchg
scas
mov
or
mov
sub
push
xor
imul
lahf
and
aaa
add
mov
lcall
setne
and
cmp
scas
pop
dec
xorl
sbb
es
and
push
ljmp
sub
xor
xchg
imull
xchg
lret
jae
jnp
out
jns
popf
lods
cmpl
mov
inc
and
xchg
popf
push
sub
sub
add
cli
shrl
xorb
add
roll
cmp
movsl
mov
jno
jne
push
fstpl
test
pop
fwait
sub
sub
bound
mov
rcl
mov
shl
or
mov
lods
bound
mov
pushf
push
xor
adc
push
fidivrl
or
iret
sahf
pusha
sbb
xchg
fs
or
pushf
inc
pop
sub
test
push
movsl
and
insl
faddl
jbe
pop
out
push
inc
inc
scas
lods
rorl
insb
push
push
cmp
xor
push
icebp
gs
lods
std
jbe
sub
ja
fwait
test
lret
out
jle
cmp
ljmp
lret
mov
add
dec
xchg
add
loopne
mov
imul
gs
aad
pusha
pop
xchg
push
push
sub
push
pop
pop
in
lret
jo
pop
hlt
ret
push
movsb
cmpsl
add
fstps
mov
push
or
adc
mov
test
mov
into
repz
sbb
cmp
sub
xchg
inc
fnstenv
pop
out
pop
xchg
and
adc
and
lea
or
rolb
push
adc
pushf
lods
out
inc
ffreep
and
dec
mov
mov
jp
mov
std
mov
xchg
xchg
or
subb
adc
adc
inc
insl
or
or
cltd
popf
arpl
test
les
jne
idivb
es
int
fimuls
into
sbb
pop
sarb
fadds
nop
pop
pop
fnstcw
push
dec
xor
xchg
in
jl
dec
xchg
push
in
jne
jne
test
leave
stos
mov
sbb
mov
js
push
pop
inc
pop
jmp
aaa
lds
imul
scas
sbb
dec
inc
lea
fdivs
mov
adc
pusha
dec
mov
gs
mov
jno
xor
lods
out
mov
dec
lods
pop
xchg
test
mov
adc
cltd
nop
jmp
sub
jbe
sub
fildl
pop
fisubl
dec
scas
or
and
dec
inc
lods
mov
jbe
mov
ss
repz
sub
jle
push
push
mov
ljmp
stc
xor
push
and
xchg
mov
sub
dec
xchg
cmp
insb
sub
mov
insb
dec
jns
cmp
xlat
mov
fldcw
out
inc
movsl
aam
xchg
data16
mov
mov
cmp
rclb
gs
repnz
cmc
sti
and
mov
pop
inc
loope
fisttps
ja
pop
adc
xchg
sbb
or
cli
pushf
push
sub
mov
sahf
xor
jo
add
jg
js
in
adc
jl
jecxz
and
das
rcrl
sub
cld
push
pop
and
mov
pop
clc
into
push
shrb
aam
or
pop
push
jbe
jmp
adc
nop
xchg
sub
cld
sub
incb
sarl
fnstsw
je
lock
dec
in
cltd
inc
xor
cmc
nop
adc
cmp
into
scas
out
shlb
cld
enter
pop
add
aam
cmpsb
out
fsubp
xchg
mov
lods
cmpsl
xchg
adc
fldl
pop
mov
fimuls
loope
jge
xchg
xchg
fcmovb
aas
xor
idivl
add
hlt
call
xor
cli
sbb
fwait
icebp
and
js
aam
dec
xchg
mov
fsubr
rcll
inc
pop
das
js
jnp
dec
jmp
jmp
pop
cwtl
call
ja
out
mov
fdivrl
xchg
lret
mov
cmpsb
xor
mov
repz
cmp
mov
fnsave
ror
out
loopne
pop
cmp
dec
pop
mov
repnz
jmp
movsb
cld
sbb
lds
push
inc
jnp
daa
jbe
addr16
insl
mov
pop
sub
mov
call
sbb
push
jecxz
leave
test
pusha
or
sahf
xlat
push
stos
push
pushf
ror
xlat
push
or
dec
push
cmp
mov
cmp
dec
xchg
clc
ret
ljmp
cmp
jg
aam
xchg
or
lret
movsb
sub
inc
and
lahf
and
push
sbb
lods
inc
test
push
dec
shll
loopne
int3
testb
sbb
popf
scas
mov
or
test
fisttpll
hlt
js
push
adc
aad
add
lcall
dec
mov
scas
mov
lods
inc
dec
push
mov
mov
out
mov
add
xor
lods
ljmp
cmp
in
stc
mov
pop
push
xchg
push
mov
in
subb
pop
test
stos
rcrl
xchg
loopne
add
sub
insb
test
rorl
je
addb
subb
xchg
mov
cmp
add
mov
cmp
cltd
pop
cwtl
scas
mov
sbb
mov
gs
testl
imul
cmp
add
iret
iret
xor
in
movsb
rorb
insb
jg
push
add
inc
pop
jnp
cli
sbb
lahf
dec
outsl
jge
inc
xor
out
stos
push
xor
cmp
lret
pop
or
mov
dec
push
negl
and
sub
fldl
rorb
lahf
fisubs
fcomp
clc
push
aaa
iret
mov
jle
sub
int
lods
movsb
iret
inc
or
jo
mov
repz
popa
mov
cmp
out
dec
aaa
push
jl
lahf
lods
lds
dec
jl
pusha
xlat
cs
xchg
xchg
fildll
and
cmp
mov
fmuls
sti
les
mov
jmp
ficoml
les
sti
test
call
test
or
jp
test
pop
out
cmpsb
or
test
leave
xchg
das
lcall
fsubrp
cmp
add
dec
pop
xchg
mov
and
sbb
xor
jns
jecxz
aaa
push
dec
or
inc
movb
mov
jmp
inc
mov
mov
adc
ror
mov
cmp
les
pushf
adc
sti
push
xor
jbe
leave
loopne
xchg
or
ficoms
pop
xor
shlb
arpl
popf
push
pop
sti
rorl
or
fisubs
fidivrs
mul
xor
fdivs
scas
adc
and
ja
rolb
cmp
push
call
aad
lock
hlt
push
test
mov
add
mov
cmp
cltd
sub
jle
mov
movsl
fstl
and
push
roll
sub
les
stc
push
pop
into
jge
add
sub
sbb
mov
xor
pop
sub
fstps
sahf
add
addr16
scas
popa
cmp
add
int3
adc
enter
adc
nop
insl
stc
bound
stos
fwait
int3
and
adc
and
dec
jns
cmpsb
je
xchg
xor
cmp
fwait
lods
hlt
push
mov
test
mov
mov
pop
push
je
cmpsl
push
movsl
std
int
and
les
jo
dec
dec
jb
lea
cmp
dec
jmp
sub
adc
cwtl
fwait
xchg
repnz
popa
in
dec
sub
cmpsl
pop
fidivrs
ds
cltd
sub
inc
ljmp
cmp
arpl
dec
or
inc
scas
adc
das
in
pushf
pop
fildll
mov
pop
shll
mov
sub
jp
push
mov
jb
and
js
or
add
sub
or
je
mov
stc
sub
mov
or
mov
bound
dec
xchg
in
mov
push
cmp
sbb
mov
add
fdivs
jle
pop
pushf
jnp
push
mov
mov
fisttps
je
lods
or
mov
addr16
mov
dec
sbb
leave
shl
pop
fisubrl
aaa
addr16
adc
ss
inc
xor
imul
gs
xor
or
in
out
jge
cld
dec
sub
rorb
clc
das
lea
sbb
ljmp
in
cwtl
roll
in
leave
add
ret
mov
rolb
sbb
sbb
fwait
xlat
loop
inc
sub
mov
adc
sbbl
lcall
cmp
inc
adc
pop
or
repnz
je
stc
imul
cld
pop
add
dec
and
adc
shlb
cli
mov
xchg
enter
or
xchg
dec
adcl
jbe
pop
aam
dec
xchg
hlt
orb
std
pop
jmp
fs
outsl
adc
int3
sbb
into
cmp
loopne
xchg
movsb
pop
rclb
pop
popa
cmp
jmp
nop
lods
stos
das
rcll
scas
cmc
mov
std
mov
call
xchg
xchg
pop
loop
pop
stos
sbb
push
outsl
scas
sub
or
jne
dec
jecxz
loope
xchg
cs
loopne
out
xorb
dec
repz
ja
std
jmp
cmp
iret
pop
lret
mov
lea
adc
inc
lcall
or
lret
mov
or
popa
into
jle
xchg
xchg
adc
mov
cmpsb
pop
push
adc
push
cli
sub
dec
jp
mov
movsl
pop
addr16
fsubrp
mov
outsl
and
bound
sbb
jmp
rorl
and
or
xchg
push
loopne
aam
stc
scas
shl
lahf
inc
xchg
fistpl
jbe
pop
or
lret
mov
movsb
sbb
ds
inc
sahf
push
loop
insb
inc
and
sub
adc
bnd
adc
xchg
nop
cmp
dec
and
and
add
mov
jecxz
sbbb
loopne
dec
xchg
hlt
add
adc
test
push
in
dec
sub
mov
test
mov
sbb
nop
gs
notl
jl
sub
cmp
imul
jge
add
cmp
jp
andl
es
push
int3
jmp
xchg
mov
sbb
sarb
mov
mov
mov
adc
xor
jne
and
into
mov
sahf
ret
inc
loopne
out
lcall
popf
aad
jge
push
je
repz
mov
mov
add
rcrl
mov
insb
rcll
out
std
adc
addr16
jle
cli
leave
cmp
mov
leave
add
mov
mov
sbb
pop
mov
out
test
mov
ja
stc
cwtl
pop
cmc
cwtl
stos
aad
lea
lea
arpl
leave
inc
in
shrb
xchg
pop
jl
mov
xchg
xchg
or
neg
xchg
inc
and
xor
push
sahf
mov
pop
sbb
push
push
daa
mov
in
js
movsl
dec
pavgw
sub
pushf
dec
cmp
mov
mov
addr16
or
xchg
jnp
clc
icebp
jo
and
inc
aam
dec
add
cmpsb
mov
fildl
cmpl
fwait
mov
pop
push
xchg
jno
sbbb
xchg
icebp
ds
mov
mov
push
loopne
mov
adc
cmp
ret
mov
leave
inc
popa
stos
sbb
mov
adc
xor
ja
test
mov
aaa
and
out
scas
enter
es
ja
movsl
pop
jp
dec
cs
shl
inc
sub
mov
add
pushf
negl
jecxz
cli
xor
rolb
xor
ficompl
ret
aad
cmp
lahf
mov
leave
test
movsl
into
mov
or
dec
pop
out
pushf
pop
mov
cmc
repz
or
ja
xchg
data16
bound
int3
cs
leave
mov
ret
cmp
mov
inc
std
repz
adc
test
xor
test
push
test
or
imulb
mov
and
sbb
int3
out
repz
std
es
cwtl
shlb
test
sar
lock
rcrb
int3
aas
push
xchg
add
sbbl
iret
jns
pushf
xor
les
mov
cli
fs
jne
cmp
push
adc
push
sbb
les
not
sarb
movsl
mov
jnp
insb
fxch
in
repz
mov
jns
dec
or
xchg
pop
orb
mov
ljmp
addb
cltd
iret
lahf
roll
mov
cli
sbb
xchg
sub
rorb
pop
rcll
out
pop
sub
dec
mov
pop
sub
xchg
sub
stc
cmp
cmpsl
inc
lock
imul
xchg
fcom
cmp
pusha
push
sbb
dec
jg
addr16
fdiv
int3
cmc
mov
movsb
cli
movsb
pop
xor
xchg
movsb
ljmp
in
hlt
icebp
add
incb
sti
sbb
hlt
ds
fbld
mov
sti
mov
push
mov
test
pop
add
out
leave
insl
pop
pop
std
enter
pop
fisubrl
and
pop
nop
sbb
incb
mov
inc
es
pushf
dec
mov
clc
adcb
or
out
xor
dec
movsb
inc
call
call
jo
xor
jl
pop
arpl
rorl
jle
es
adc
push
mov
mov
dec
aam
push
inc
inc
jne
push
out
xchg
mov
outsb
bound
out
fildl
and
mov
cmc
cli
mulb
mov
loope
xlat
lea
mov
cmp
stos
pop
jg
or
jecxz
pop
js
pushf
nop
sub
mov
fwait
in
rolb
cltd
pop
dec
jb
cmp
mov
fnstsw
jmp
xchg
sbb
gs
or
push
inc
out
push
jl
pop
addr16
rcrb
and
movsl
mov
test
out
test
andl
cld
test
lock
test
and
into
push
cmp
push
jp
xlat
nop
fs
rcll
js
mov
arpl
or
xor
mov
stc
scas
into
dec
xchg
data16
movsb
mov
mov
xchg
outsl
mov
aaa
mov
mov
cmp
add
test
ret
int
insl
lods
mov
lods
and
out
aas
mov
fs
push
bnd
jmp
mov
int3
fldl
cmpl
push
sub
mov
mov
aaa
and
xchg
push
inc
sbb
int3
mov
xor
inc
xchg
push
in
aas
cmovle
cmpsb
ret
repz
adc
pop
imulb
ds
inc
inc
cltd
or
popa
addb
orl
and
js
mov
outsb
push
sbb
jne
lds
pop
add
mov
fadd
jl
pushl
pop
je
push
pop
fildl
enter
lock
jo
imul
add
je
xchg
cli
out
lret
inc
xchg
cmp
pop
inc
fidivrs
xchg
fs
jb
inc
mov
push
jne
out
out
push
daa
push
adc
cltd
xor
andl
mov
das
fiaddl
lods
sbb
inc
cmpsl
push
lret
jbe
ret
mov
scas
outsb
cmpsl
daa
mov
add
xacquire
insl
push
mov
ss
in
pop
fnstsw
fcomps
or
std
shll
sub
or
jge
lds
mov
cwtl
mov
pop
loop
arpl
jp
out
xor
ret
xchg
adc
adc
aaa
xor
lods
int3
push
adc
mov
mov
xlat
xchg
adc
in
xor
std
in
mov
xchg
shrb
cs
jp
pop
jle
inc
xchg
add
push
sub
jns
add
sub
cmp
sbb
and
dec
cmpsl
add
dec
dec
xor
mov
outsb
or
inc
shl
mov
aaa
inc
ljmp
mov
gs
jmp
pop
shrb
lods
outsl
sbb
sbb
push
aas
xchg
sbb
push
lock
stc
push
xor
divb
pop
mov
xor
sbb
mov
aam
xchg
cmc
pop
jo
subl
outsb
jp
repnz
adc
cmp
and
ljmp
cmp
mov
mov
test
or
mov
and
mov
fwait
je
imul
or
dec
ds
mov
call
imul
dec
inc
pop
js
mov
fxch
test
dec
add
and
cs
imul
lock
cmp
lahf
adc
dec
mov
daa
mov
ss
movsb
ds
inc
pop
pop
jmp
push
cmp
mov
xchg
xor
hlt
mov
loop
into
cmp
je
movsl
repnz
sbb
mov
clc
sub
aas
cli
and
sbb
scas
inc
or
mov
mov
iret
xchg
jbe
enter
cmp
cmp
xor
outsb
lahf
les
adc
push
mov
pop
add
stos
stos
gs
push
xchg
lahf
sub
daa
outsl
pop
std
pop
mov
pop
notb
test
xor
push
enter
xchg
sub
adc
mov
repnz
sarl
outsb
push
xlat
mov
push
dec
push
mov
dec
dec
int
push
cmp
movsl
sub
sbb
imul
mov
mov
sub
sub
jbe
sub
push
add
cmp
fsub
add
js
jno
add
ds
mov
cmp
mov
cli
sbb
xorb
aad
sbb
mov
repnz
pop
mov
sub
xchg
sbb
sub
push
gs
sbb
sub
add
imul
inc
bsr
nop
xorl
bnd
mov
loopne
test
jo
and
pop
add
repnz
mov
inc
lret
addr16
fisubl
or
and
inc
ljmp
cmp
and
fucom
inc
loop
mov
add
dec
and
lea
add
xchg
neg
dec
mov
and
or
adc
mov
jne
aas
xchg
in
pop
and
jb
adc
stc
cmovg
jnp
pushl
dec
out
out
xor
into
jmp
popa
lods
xchg
push
aaa
xor
popf
aad
repz
movsl
push
andl
int3
mov
jmp
filds
mov
or
call
lret
pushl
jp
cmp
mov
lahf
les
sub
and
sub
movsb
shlb
fsub
movsl
lea
xchg
enter
xchg
push
filds
movsb
adc
roll
xor
std
int3
jge
out
lret
pop
jmp
dec
adc
jne
mov
sbb
loope
push
punpckhwd
lahf
pushf
inc
loop
xor
mov
jnp
fisttpl
das
pop
insl
push
dec
dec
adc
xor
and
into
and
stos
xchg
decb
stc
mov
dec
pop
cld
std
xchg
shl
iret
gs
out
ljmp
add
mov
push
xchg
or
je
pushf
jmp
fidivrl
fldcw
fwait
mov
ret
cwtl
xlat
sub
sbb
inc
pop
gs
out
and
int
enter
call
pop
sub
loopne
push
fprem1
lds
stc
cmpsb
iret
pop
sbb
lret
shll
xchg
lds
mov
pop
lods
mov
xor
jmp
mov
push
and
mov
sbb
add
pop
jne
mov
dec
aaa
mov
sbb
insl
sbb
and
xchg
enter
sbb
push
sub
xchg
mov
add
inc
cltd
push
sbb
mov
in
aad
imul
sub
xor
mov
dec
and
jne
scas
daa
aam
sbb
push
popa
rorb
cmp
leave
mov
fs
sbb
jnp
lcall
sub
into
cli
push
push
and
and
stos
mov
icebp
mov
aaa
cltd
into
adc
mov
stos
movq
xchg
add
dec
je
mov
inc
iret
ret
mov
jb
xchg
daa
out
imul
sub
insb
out
lret
sbb
jle
stc
mov
fwait
fwait
xchg
push
mov
mov
shlb
jb
mov
sahf
xor
cli
out
int3
pushl
mov
std
sbb
dec
adc
xor
mov
push
push
enter
jmp
push
sbb
imul
in
mov
adc
shrl
std
add
shll
mov
push
add
ljmp
sub
push
dec
mov
push
and
push
jge
scas
pop
stos
outsb
sbbb
add
xchg
jp
push
in
outsl
mov
out
mov
adc
movsl
sbb
daa
add
in
adc
cmp
mov
scas
mov
push
nop
xor
and
push
push
cmp
mov
clc
inc
push
stos
rolb
add
dec
test
pusha
sbb
test
adc
push
les
adc
mov
jecxz
ss
jmp
or
cmpsb
adc
test
dec
xlat
adc
sbb
sbb
or
fsubs
je
push
xor
adc
xor
mov
pop
xchg
push
adc
mov
pop
loope
mov
call
adc
outsb
repz
mov
jmp
mov
stos
sub
js
dec
xchg
mov
jb
sbb
jb
icebp
mov
and
mov
xor
push
daa
icebp
mov
mov
jne
add
dec
lods
xchg
adc
stos
daa
and
push
add
xchg
sbb
mov
sub
dec
ficoml
popf
dec
std
mov
mov
arpl
push
lahf
fisubs
inc
jnp
pop
mov
cli
cmp
add
adc
pop
mov
fdivrs
mov
into
push
jb
inc
mov
ljmp
addr16
scas
mov
cs
insl
cmpsb
jge
push
cmp
inc
dec
fldcw
add
bnd
lods
xchg
add
scas
adc
sbb
push
inc
xlat
dec
enter
xchg
scas
pop
ficomps
cmpsb
pop
jbe
jl
xor
jecxz
pop
mov
dec
ficoms
sti
mov
testl
ret
psadbw
insl
xor
aas
add
xor
repz
xor
pop
iret
xlat
popf
loop
pop
scas
sahf
sahf
rcr
lahf
ja
test
mov
ja
or
out
jecxz
aam
push
arpl
mov
xor
and
jo
mov
or
xchg
stos
sahf
xchg
out
subb
xchg
sub
ds
sub
jne
inc
lea
insl
jmp
or
aaa
adc
jb
pop
sub
add
aam
lret
push
adc
incb
mov
or
lret
call
and
fs
stc
popa
mov
popf
ja
lahf
iret
inc
sahf
ret
mov
movsb
xchg
sbb
shl
lds
daa
insl
inc
cmp
mov
adc
lods
ret
mov
mov
iret
push
arpl
sbb
mov
addr16
imul
xor
jecxz
and
fidivs
std
insl
call
fs
push
and
aam
jmp
xchg
imul
int
mov
out
iret
adc
push
mov
pop
and
push
pop
daa
scas
pop
xchg
push
fmull
mov
cltd
adc
lds
out
fimuls
add
xor
xchg
insl
sbb
scas
adc
movsl
mov
push
pop
test
jl
sub
test
sahf
xchg
dec
iret
add
jns
inc
inc
fildll
daa
xor
xchg
lret
push
mull
repz
jbe
push
pop
lods
test
mov
in
bound
mov
scas
mov
lods
mov
cmp
into
pop
stc
mov
testl
sub
add
into
mov
aaa
push
adc
int3
inc
arpl
mov
jg
rcrb
push
jae
std
dec
jb
add
in
dec
clc
gs
js
sbbb
inc
outsl
jp
stos
repz
add
ja
loopne
popf
lods
xchg
and
sbb
push
imul
out
mov
xchg
cwtl
mov
test
fwait
test
mov
or
cmp
sbb
addb
jno
ret
pop
cwtl
and
mov
adc
or
lret
bound
in
dec
xor
push
jge
jae
out
and
sub
xor
lods
cmp
jecxz
out
js
ret
outsb
es
sbb
mov
dec
lret
out
sbb
jo
nop
sub
in
loope
out
sbb
mov
and
lret
icebp
sbbb
jns
rolb
filds
lahf
ds
in
cmpsb
pop
pop
es
sarl
sub
loopne
and
icebp
xor
ret
in
mov
negb
mov
lds
inc
ss
roll
fstpl
out
pop
xor
scas
mov
rcll
pop
repz
xorl
lea
bound
dec
mov
imul
ror
sar
out
ds
mov
sub
push
dec
pusha
jns
testb
sbb
pop
adc
inc
cld
repz
push
into
jb
rep
jge
scas
lods
pop
sti
adc
add
xchg
sbb
fneni(8087
mov
xor
jnp
mull
cli
push
pop
jecxz
xlat
or
ret
mov
sub
pushf
leave
dec
mov
std
sub
adc
adc
stos
add
test
les
cwtl
lea
push
lret
inc
ss
dec
shrb
std
dec
jbe
cmc
mov
shll
adc
and
repz
jnp
cmpb
mov
sahf
lahf
and
and
xor
cmpsb
mov
stos
dec
aaa
mov
sub
jns
xor
testl
inc
call
push
je,pt
adc
cmpl
dec
imul
mov
mov
jg
aas
fisubs
sbb
ja
add
adc
mov
cmp
insl
sar
jp
lahf
loop
pop
jo
nop
cmpsb
jne
xchg
push
mov
jecxz
cli
fimuls
gs
sbb
push
adc
xor
cs
dec
or
out
and
sarb
and
fs
sub
and
lret
sub
call
and
mov
test
das
das
mov
xlat
add
iret
mov
mov
lahf
les
xor
aam
gs
or
pusha
addr16
push
jae
and
push
push
repz
mov
fidivl
pop
out
xchg
xchg
popa
jne
insb
push
add
bound
rclb
mov
enter
xchg
ret
fs
stos
out
pop
addl
and
mov
in
mov
or
or
xchg
mov
out
icebp
nop
lcall
std
xor
stos
insl
in
pushf
repz
push
pop
test
pop
leave
imul
ljmp
pop
sub
roll
pop
cmp
adcl
fmulp
mov
lea
test
cli
xchg
sbb
outsb
cwtl
lock
pop
movsb
push
sbb
pop
stos
or
clc
lret
fldl
inc
xchg
and
fists
or
scas
hlt
push
push
mov
int3
hlt
test
and
scas
lret
in
daa
repz
cltd
dec
andl
or
xor
or
or
jns
inc
lcall
lret
gs
fmul
aas
daa
push
sti
das
inc
lods
jbe
lods
or
pop
test
jbe
fs
or
loopne
addr16
sub
inc
out
lret
pop
pop
xor
sub
and
pop
ss
sub
rclb
mov
shlb
mov
cmp
arpl
mov
daa
pop
loopne
xor
mov
add
mov
sub
ss
decb
std
dec
lret
jle
sti
mov
lods
inc
fsubs
adc
das
cmp
adc
and
lea
enter
stc
popa
in
les
lock
push
pushf
out
movups
mov
icebp
dec
mov
fstpl
cmp
push
mov
sti
test
jnp
sahf
or
inc
inc
ret
pop
pop
stos
popa
jbe
add
sub
mov
push
pop
mov
rorl
add
incb
dec
add
cmp
inc
ret
sahf
scas
dec
movsb
xchg
mov
xchg
fildll
and
out
push
in
mov
xchg
jne
mov
dec
dec
repnz
outsb
cli
add
push
mov
sub
xor
cld
adc
dec
clc
and
mov
dec
insl
ja
mov
mov
push
insl
arpl
or
push
adc
mov
test
test
mov
xor
add
jmp
cmp
jl
cmp
xchg
mov
cmpl
divl
lret
mov
adc
sub
xchg
adc
out
fildll
ficompl
mov
mov
test
adc
push
jecxz
mov
rorl
lds
push
sub
popa
outsl
sbb
push
leave
js
pop
mov
pop
fwait
add
or
lcall
insl
pop
xor
lcall
dec
lcall
adc
cmp
pop
sub
mov
rcrb
out
mov
and
in
mov
jns
ja
pop
ret
cmp
hlt
push
push
cwtl
shl
pop
in
jmp
add
lea
jle
out
js
cltd
mov
data16
out
mov
mov
or
inc
enter
int3
fisttpl
dec
sub
mov
jbe
sub
fbstp
imul
mov
scas
adc
sbb
mov
in
mov
sub
jb
fdivl
fisubs
popf
dec
sbb
out
pushf
mov
mov
lea
mov
decl
push
push
mov
fs
sbb
movsl
xchg
lds
sub
add
cmpl
add
sbb
inc
pusha
aas
imul
dec
ja
sub
xchg
cmp
or
jl
lds
sahf
inc
add
or
mov
loopne
ljmp
xor
push
test
lret
jg
rol
mov
sub
mov
in
fmuls
ret
lock
popf
call
or
out
xchg
out
or
mov
shl
popa
push
sbb
dec
dec
pop
in
decl
sbb
jnp
es
mov
jmp
pop
add
movsb
outsl
je
cmpl
cmp
push
rol
insb
cld
loopne
dec
call
mov
adc
adc
xor
idivl
call
leave
ret
jp
or
cmp
xlat
and
jb
push
fists
dec
pop
xchg
inc
push
int3
mov
and
adc
ds
js
xor
or
movsl
dec
insl
in
pop
mov
aad
mov
arpl
push
mov
push
xor
add
fs
push
mov
mov
movsl
mov
push
sbb
stos
mov
pop
rorb
and
add
add
lcall
cs
fbld
fistpll
pop
mov
inc
fistps
mov
pop
test
mov
add
pop
push
inc
sbbb
pop
and
mov
xchg
inc
das
inc
test
and
mov
aam
or
adc
loope
out
pusha
xrelease
lods
sbb
mov
push
arpl
fwait
or
xor
aam
mov
or
and
push
in
push
xchg
inc
fsubrl
sub
stos
jns
fnsave
dec
xchg
int
pop
aaa
imul
jp
sub
lods
xorb
shrb
jecxz
inc
and
lret
in
sub
add
mov
ds
lahf
aam
mov
jge
rol
cmpsb
pop
jg
icebp
rcll
jne
cmc
rcrl
sbb
out
sti
neg
pop
push
ss
out
mov
lret
shr
and
xchg
jp
inc
rorl
or
jge
or
aaa
outsl
int3
dec
faddl
sbb
insb
push
jne
jmp
push
or
or
aaa
add
cmp
clc
stos
shl
cld
pop
pop
fisubrl
addr16
mov
movl
inc
add
dec
ret
and
push
outsb
ret
das
out
das
in
lods
cli
inc
in
aam
pushl
fwait
sub
mov
sub
and
adc
js
jmp
pmaxub
mov
fsubl
in
xor
sub
ss
pop
inc
inc
leave
movsl
pop
stos
mov
xor
sbb
xor
push
or
addl
sub
inc
mov
push
test
ds
ja
ror
cmpsb
dec
pop
scas
mov
cmp
push
ds
outsb
xor
je
shrb
xchg
pop
pop
xor
cmp
fildll
pop
rol
fwait
dec
jo
mov
fcmove
adc
push
xchg
inc
xchg
jbe
cwtl
addr16
iret
xchg
mov
cmpps
mov
jns
cmp
xor
gs
test
xchg
aaa
xorl
movb
push
and
inc
insl
sub
mov
out
xchg
icebp
jecxz
jns
jnp
push
aam
in
arpl
int3
mov
push
sbb
push
inc
sbb
pop
add
scas
cs
jl
push
lret
adc
and
pop
add
filds
nop
add
pushf
mov
push
btr
or
add
insb
dec
rcll
inc
inc
lcall
pop
fs
gs
dec
inc
cmp
or
pop
sub
add
or
jbe
or
mov
or
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
or
push
sub
add
or
subb
mov
or
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
cmp
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
dec
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
fs
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jo
add
add
add
incl
add
add
dec
add
add
add
orl
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
decl
dec
add
dec
add
add
add
popf
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
test
add
add
add
cmpsl
dec
add
cmpsl
dec
add
add
add
add
dec
add
add
add
incl
add
add
add
add
mov
add
add
add
add
add
dec
add
add
add
call
mov
dec
add
dec
dec
add
dec
dec
add
dec
dec
add
jmp
dec
add
dec
add
add
add
incl
add
add
int
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
jmp
dec
add
rorb
add
add
call
dec
add
dec
add
add
add
lcall
dec
add
call
incl
add
add
fmull
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
dec
out
add
dec
add
lcall
dec
add
dec
add
incl
out
add
call
dec
add
mov
out
add
dec
out
add
out
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
in
dec
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
repz
add
add
add
ljmp
repz
add
incl
add
add
hlt
dec
add
lcall
hlt
dec
add
add
add
incl
add
add
add
jmp
sbb
and
dec
add
call
sbb
fcomps
dec
add
decl
dec
add
add
sub
add
or
add
or
xor
or
cmp
or
dec
and
add
or
pop
sub
add
or
jbe
or
mov
or
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
or
push
sub
add
or
subb
mov
or
add
add
sub
add
add
add
je
popa
insb
imul
imul
je
outsl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
sub
push
gs
insl
gs
push
add
jmp
je
push
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
test
inc
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
pusha
in
xchg
ja
inc
dec
inc
dec
inc
sbb
andl
sub
jp
mov
cs
gs
add
scas
mov
into
test
das
sub
push
pop
cs
sbb
clc
fisttpl
push
out
and
lea
mov
ffree
adc
pop
push
xchg
cltd
push
ret
faddl
cmp
divb
pusha
dec
sbb
subl
clc
aad
and
andl
push
push
pop
lcall
jle
xchg
or
inc
lret
xor
dec
push
loope
out
leave
inc
mov
sub
into
aam
mov
insl
in
or
imul
shlb
imul
add
inc
aaa
pslld
push
mov
cmp
and
mov
imul
lods
aas
mov
or
sub
fs
inc
jno
insb
inc
mov
lea
aaa
add
mov
ja
sarb
pop
dec
jno
cmp
mov
jmp
or
cli
je
out
pop
or
in
popa
icebp
orb
gs
sarb
sahf
iret
mov
lcall
loopne
scas
aas
or
inc
sub
inc
sbb
aaa
adc
adc
and
sub
push
mov
das
ja
pop
mov
sbb
cmp
mov
cli
lds
shrl
push
mov
outsl
mov
mov
fbstp
mov
lret
push
ror
fucomp
ret
lds
dec
stos
sub
push
mov
mov
and
ss
es
scas
mov
rol
sahf
sub
push
fsubrl
repnz
sbb
sbb
add
leave
mov
push
jge
icebp
fistl
adc
insl
dec
cs
cwtl
add
loop
dec
dec
jae
test
in
and
popl
fidivl
dec
fucomp
inc
dec
cmp
and
dec
lret
xor
sahf
repz
test
jmp
push
scas
pop
mov
dec
mov
push
es
popa
out
dec
stos
xchg
outsl
mov
add
in
cmpb
pushf
dec
stc
sbb
lock
cmp
scas
xchg
mov
sub
cmpsb
popa
jo
scas
mov
decl
fldenv
mov
or
pop
in
mov
rcr
push
cmp
icebp
mov
mov
sbb
clc
mov
inc
mov
sbb
sbb
idivb
std
push
std
adc
je
or
sbb
add
call
shlb
dec
or
dec
repz
mov
js
mov
stos
inc
lods
adc
lahf
push
cmc
xchg
pop
add
sub
sbb
fadds
hlt
inc
dec
mov
push
jns
pop
test
pop
pop
xchg
fldl
out
shl
cmp
or
dec
bound
lret
push
cld
shrb
stos
es
cmp
sbb
stc
xchg
jno
pop
lds
cmp
mov
and
shl
ss
mov
mov
xchg
arpl
aaa
inc
int3
inc
js
cli
lock
xor
inc
jne
int3
cmp
jecxz
dec
cmp
aad
les
dec
int3
lcall
enter
adc
xchg
pop
xchg
cmp
std
ds
outsl
cmp
pop
les
aam
inc
pop
fdivr
mov
aas
rcr
jecxz
std
popf
dec
pop
sbbl
in
pop
outsb
xor
bound
and
or
in
and
sub
mov
jae
les
popf
xor
pop
sarl
push
mov
xor
movsl
rcl
mov
jo
hlt
xor
cmp
xchg
add
adc
dec
add
cld
sahf
sti
clc
or
xchg
mov
or
pop
adc
movsb
sbb
push
outsl
pop
lret
inc
sub
mov
and
popf
mov
sarb
shlb
add
mov
and
iret
push
scas
sub
dec
or
aaa
fidivrs
sub
ja
pop
test
shll
xchg
jge
cmp
mov
sub
adc
popa
mov
repnz
rolb
inc
mov
mov
dec
lcall
aaa
test
mov
xor
mov
es
or
lahf
fadd
mov
movsl
pop
pop
sub
lret
je
or
lahf
loopne
jmp
lds
dec
adc
out
ljmpw
and
cmp
test
or
mov
or
mov
loope
lods
das
mov
sub
mov
push
arpl
jg
in
push
mov
jl
or
sbb
cltd
dec
outsl
adc
ret
outsb
jno
frstor
add
xchg
xlat
adc
and
mov
xchg
and
dec
out
pop
cmpsl
add
lods
std
pop
inc
dec
cmp
leave
sahf
lods
loope
push
mov
inc
adc
fbld
outsb
xor
mov
andb
jge
aam
mov
rcrb
sub
jle
adc
dec
mov
movsl
fbstp
or
cmc
mov
dec
lret
xlat
test
push
in
mov
pop
mov
test
out
sub
inc
mov
lods
in
ret
push
sbb
out
mov
and
ljmp
mov
sbb
sbb
inc
adc
mov
repz
lret
cmp
cli
mov
mov
daa
add
jb
or
out
xchg
aad
dec
enter
add
mov
mov
gs
clc
xor
int3
mov
sbb
lock
fadd
lock
leave
inc
jb
lds
clc
es
push
sub
stc
sbb
lahf
mov
fisttpl
xor
jle
push
push
lods
sub
jmp
jb
pop
mov
fs
outsl
push
ljmp
mov
scas
add
nop
call
and
popa
jge
cwtl
mov
pop
cli
cli
lea
xchg
xor
ja
add
push
adc
dec
push
dec
sahf
cmp
sahf
jl
lcall
int3
repz
inc
enter
aad
dec
popa
jl
nop
into
inc
icebp
int3
fs
cmp
add
dec
scas
xchg
cmp
and
or
mov
or
mov
lret
cld
push
inc
mov
jp
nop
stos
xor
loopne
stos
xor
pop
jmp
fldz
mov
fldl
ffreep
mov
dec
stos
inc
stos
inc
sarb
icebp
mov
cmp
jae
jns
sbb
int3
push
add
adc
in
or
jmp
xchg
xlat
fadd
mov
test
fimull
pop
mov
adc
sub
stos
cmp
stos
mov
cld
or
lret
pusha
jb
fisubrl
stc
loopne
mov
mov
insl
imul
jl
sahf
and
dec
ss
push
cmp
push
sbb
dec
rol
jle
mov
fstps
dec
loope
nop
mov
add
pop
sbb
push
push
sahf
lds
push
cli
jb
addl
jnp
pop
xchg
fidivl
addb
std
xchg
fsubp
leave
movsl
imull
xchg
scas
call
daa
lods
loope
pshufw
sub
mov
mov
fisubrs
pop
push
mov
insb
dec
pop
sbbb
jg
test
daa
mov
push
mov
push
and
dec
addr16
jno
push
push
and
out
rclb
adc
push
aas
xor
loopne
std
lods
push
add
rcl
shlb
xchg
pop
jmp
xor
jecxz
inc
or
cwtl
into
jns
call
add
fnstcw
out
imul
test
mov
mov
daa
mov
fs
stos
xor
sub
leave
inc
sub
sbb
jbe
mov
dec
ss
mov
test
xchg
insb
lea
or
aad
stc
xchg
sti
pop
testl
xchg
rorl
push
stc
push
aas
fs
lret
add
lds
cmp
cmp
hlt
cmpsb
arpl
sub
push
into
pop
jg
fmuls
pop
mov
mov
and
mov
mov
xor
fsts
inc
rcl
inc
and
ss
dec
ret
in
sbbl
fs
dec
mov
adc
adc
mov
movsb
imul
bound
cmp
jge
es
xor
mov
inc
xchg
cmp
inc
push
pop
and
ret
push
sub
push
xchg
cwtl
dec
int3
scas
dec
rorl
andb
sbb
jl
jl
sbb
mov
iret
cwtl
ret
fstl
mov
popl
mov
int
add
xor
rcrb
cmp
xlat
mov
pop
mov
mov
mov
xchg
add
mov
mov
mov
lods
mov
repnz
mov
mov
sub
das
cmp
pop
addl
jmp
xchg
pop
jmp
stos
dec
or
jne
adc
out
shrb
setg
mov
in
and
test
add
add
loop
lods
xchg
pop
mov
dec
mov
fcompl
test
jmp
and
mov
mov
insb
pop
cmc
add
push
test
pop
in
add
mov
push
dec
adc
mov
fmul
or
lods
lock
call
loopne
ja
adc
jmp
add
ret
add
cmp
lea
xchg
and
or
frstor
mov
mov
cwtl
adc
xchg
pop
push
xchg
shlb
sbbb
pop
jno
in
jbe
push
jmp
negl
lods
mov
in
jns
push
rolb
sbb
in
push
inc
jl
and
mov
ret
out
inc
cmc
test
xchg
add
decb
jl
insb
mov
xlat
pop
inc
mov
repnz
mov
in
dec
push
and
aas
xchg
inc
fnstenv
mov
int3
jae
push
mov
add
sbb
jne
push
sbb
int3
test
mov
xchg
sti
lret
popa
int3
jnp
sbb
ficompl
cmp
lods
movsb
adc
lret
mov
in
std
xlat
xchg
and
mov
scas
shrl
push
outsb
push
loopne
push
adc
add
jl
addr16
lods
in
sbb
mov
push
pushf
mov
dec
movsl
push
rcrb
sub
popa
mov
ljmp
jle
ja
pop
pop
xlat
repnz
lahf
sub
xor
shlb
sub
js
push
idivb
pop
push
add
xor
pop
jge
bswap
pop
les
xor
xor
arpl
sbb
outsb
mov
sbb
fisubrl
xchg
andps
mov
pop
push
mov
rcr
imul
dec
mov
xchg
aad
mov
aas
daa
lret
cs
mov
in
aam
jmp
insb
and
int
movups
or
inc
shll
cmp
andb
push
sub
fstpl
jb
ja
shr
jbe
fistps
xchg
cmp
pop
or
lods
int
cwtl
in
push
out
cld
mov
xlat
popa
addl
daa
push
xchg
test
inc
push
pop
xchg
lret
fiadds
divl
or
or
mov
inc
les
xchg
xor
lea
loop
nop
nop
pop
js
sub
dec
nop
dec
cli
add
fsubl
push
mov
xor
mov
sbb
sbb
mov
sub
stos
mov
stos
insb
xor
sbb
call
add
push
call
dec
add
push
adc
cmpsb
inc
jmp
jecxz
das
test
inc
iret
push
xorb
jnp
adc
out
mov
outsb
xchg
jno
movsl
jle
imul
int
mov
push
addb
popf
xchg
daa
repnz
dec
bound
mov
imul
mov
js
xchg
popa
and
or
mov
shll
out
stc
sub
xchg
into
jb
jecxz
mov
xor
fidivl
xchg
ret
movsb
mov
mov
cmpsb
loope
push
repnz
push
inc
mull
shlb
push
dec
lock
sub
and
insl
jg
shlb
mov
rcr
pop
add
sti
mov
add
loopne
out
push
mov
je
push
je
lock
int
rorl
call
imul
ljmp
pop
pop
leave
jnp
cmpsl
dec
push
or
dec
nop
test
inc
cmpsb
inc
std
dec
stos
sbb
or
inc
xor
bound
mov
repz
sub
lods
xor
jo
xor
les
add
jp
call
jg
sub
mov
push
jmp
cmpsl
pop
pop
xorl
add
fistl
aam
ja
xor
jmp
lock
pop
or
pop
ret
outsb
cmpsb
add
cmp
adc
scas
sahf
jg
mov
inc
ja
divb
popf
test
fmull
out
inc
cmpsb
or
adc
xchg
xchg
xor
stos
fidivrs
or
push
addr16
xchg
dec
cli
das
adc
cmpsb
pop
push
imul
xlat
dec
in
mov
icebp
push
les
mov
loop
and
call
outsb
cmpsl
loope
call
aaa
and
pop
lret
icebp
seta
addl
jge
jne
enter
push
or
xchg
mov
jb
cmc
in
es
in
dec
out
cmc
mov
arpl
dec
out
xchg
jle
stos
dec
or
pop
and
gs
push
sbb
lds
jmp
shlb
nop
out
mov
push
jns
lods
jg
xchg
subl
stos
lcall
dec
and
push
ljmp
mov
xor
mov
push
arpl
pop
sbb
add
fiaddl
jg
std
pop
and
xchg
pop
ret
test
jno
sbbb
lahf
and
mov
cltd
xor
jb
xlat
mov
mov
cmp
adc
lret
xchg
rorl
add
xor
push
mov
imul
stc
gs
xchg
fsubrl
pop
mov
jmp
loop
fnsave
sti
mov
sbb
or
dec
inc
sar
adc
jne
jnp
push
sbb
iret
cwtl
dec
add
loope
lret
test
add
stos
pop
or
push
scas
xchg
dec
arpl
arpl
push
and
iret
mov
pop
int3
and
rcrb
mov
mov
dec
jne
scas
mov
stc
addr16
fisubrl
cwtl
dec
adc
inc
xor
pop
adc
std
pop
iret
mov
fmuls
pop
scas
into
shrb
jmp
mov
jmp
jno
mov
mov
rcll
sub
xchg
scas
and
mov
mov
mov
jns
xchg
sbb
gs
push
cmp
inc
dec
leave
xor
aam
jp
mov
aad
stos
mov
pop
fsin
mov
stos
jmp
out
xchg
leave
inc
shll
sub
dec
pop
aad
ja
notl
daa
ljmp
bound
inc
std
imul
enter
inc
loop
and
adc
je
pop
adcb
ja
xchg
shlb
roll
mov
or
aaa
and
push
mov
mov
sub
mov
sub
pop
mov
push
pop
adc
shr
nop
jp
jbe
xor
aaa
ret
int3
xor
shlb
hlt
dec
mov
mov
sub
xlat
popa
or
xor
nop
jns
mov
dec
stmxcsr
sub
cmp
jmp
jp
cmp
inc
inc
cmp
in
or
mov
cmp
dec
push
push
in
sbb
sub
push
inc
xchg
sti
stos
hlt
outsb
push
flds
test
popa
sbb
mov
out
out
loop
cs
mov
call
jnp
hlt
mov
test
adc
dec
add
inc
aaa
or
js
jp
pop
adc
adc
jbe
jmp
xor
dec
sbb
call
test
and
pop
loope
xor
sub
enter
ret
adc
jbe
adc
push
movsl
push
and
xchg
lock
mov
push
cld
and
icebp
mov
lahf
stc
inc
aas
outsb
inc
pop
lea
mov
adc
cmp
mov
xchg
in
and
data16
cmp
lods
dec
pop
cmpsl
imul
jmp
mov
bound
ret
pop
aam
out
addr16
ss
mov
push
push
cmp
mov
jle
call
test
pop
in
xchg
daa
xor
movsb
repz
mov
outsb
mov
sub
xchg
clc
sbb
fistpl
pop
fwait
pop
into
sbb
xchg
addl
and
cmp
mov
ljmp
incb
lret
sub
push
xor
mov
adc
pop
in
dec
pop
sub
in
sub
stc
cmp
inc
or
inc
pop
adc
pop
sbb
add
dec
in
jge
adc
jne
jns
mov
dec
leave
inc
mov
daa
stos
repnz
pop
dec
and
or
mov
and
stos
adc
popl
jmp
mov
adc
cltd
sub
mov
pop
adc
stos
lcall
cmpsb
pop
aaa
mov
ljmp
fdivl
lds
mov
fwait
mov
add
cwtl
stos
daa
fisubl
outsl
cmp
mov
dec
adc
adc
mov
jne
movsl
cmpsl
adc
aas
xchg
sub
popa
addl
inc
mov
inc
sub
adc
jmp
push
add
lahf
and
mov
sti
inc
jns
nop
xchg
cmp
xchg
cmpsb
mov
inc
ja
inc
dec
inc
into
sub
out
inc
adc
loop
js
jno
mov
mov
mov
loopne
jmp
ljmp
add
aad
jmp
push
imul
gs
jmp
ljmp
dec
mov
negb
mov
gs
test
dec
notl
mov
rolb
add
push
pop
mov
add
mov
mov
cmpsb
dec
lods
stos
ror
test
and
jp
jno
into
xchg
loop
loopne
adc
ljmp
xchg
pusha
and
and
aam
rol
jns
fisttps
addb
fstp
mov
and
push
les
xlat
jp
xlat
pop
xchg
leave
jae
in
mov
inc
pop
rcrl
loopne
addr16
insl
inc
adc
out
push
shrl
jge
fs
out
sar
mov
pop
int3
outsb
movsb
out
jl
mov
push
dec
pusha
loopne
or
xchg
shll
fnsave
les
jg
out
inc
cmpsb
add
gs
scas
jne
iret
mov
mov
xchg
mov
xchg
xlat
stos
cltd
std
mov
fbld
out
cld
dec
rcrl
mov
lret
sub
cmp
insl
cmpsl
lea
rcrl
aam
dec
cli
test
stos
pop
lcall
icebp
test
lret
mov
loop
add
dec
cmpsl
jno,pt
shl
push
out
les
out
push
lods
sub
push
pop
jne
xchg
ficomps
aad
dec
cmpsb
cmp
fcoms
dec
sbb
inc
shlb
or
ss
mov
sub
push
inc
xor
aam
dec
jp
in
push
push
lahf
insl
movb
data16
cld
das
repnz
mov
ja
int3
adc
or
xchg
mov
idiv
inc
jl
push
dec
mov
or
fnsave
ss
sbb
push
out
sub
jns
cmp
mov
jae
jle
push
cs
fmul
dec
arpl
push
jns
jecxz
sti
inc
dec
je
push
jno
pusha
dec
xlat
into
shll
outsl
mov
pop
mov
ret
push
rorl
movl
sub
mov
and
cld
movsb
ficomps
aam
jl
cmp
dec
jbe
in
sahf
push
xchg
xor
and
cmp
cli
sbb
sub
ss
pop
mov
sbb
fistl
mov
cwtl
mov
push
xor
lds
adc
repnz
xor
call
sbb
ljmp
idivb
mov
das
lahf
add
xor
lret
mov
sbbl
adc
stos
push
sti
jle
mov
jge
add
lds
fcomps
loop
imul
out
xor
repz
cli
jbe
cmc
rcrb
pushf
sub
in
inc
cmp
aad
push
ds
and
dec
push
scas
addr16
popf
insl
mov
repz
fisttpl
nop
stos
mov
pop
shrb
pop
or
pop
jge
pushf
inc
test
fs
clc
mov
rorl
xchg
mov
push
pop
addr16
shrb
enter
negl
scas
fs
pop
mov
and
xchg
dec
sbb
add
shlb
dec
jge
or
repnz
cmc
sub
xchg
ljmp
aad
jg
int
aaa
jbe
xor
sbb
push
add
pop
mov
jb
add
mov
jge
mov
fsub
stc
dec
adc
sbb
jb
mov
xchg
fs
sar
test
and
lret
cmpsb
push
jp
sub
push
inc
add
mov
push
clc
ret
mov
pop
outsb
pop
hlt
inc
data16
jge
push
mov
xchg
loop
add
dec
and
pop
dec
repnz
out
sub
ja
or
imul
cs
stos
mov
inc
pop
inc
rorb
sub
mov
rcrb
mov
in
mov
mov
jge
mov
mov
loopne
outsl
jge
movsb
shrd
sbb
mov
push
fbstp
sbb
sar
fnsave
xchg
mull
nop
nop
xchg
outsl
jle
movsl
es
lret
sub
sub
jbe
and
cmp
mov
popf
inc
enter
jne
arpl
and
call
loopne
adc
inc
sbb
or
mov
mov
inc
jbe
icebp
pushl
sub
ret
jo
fdivl
sbb
insl
lods
rcrb
add
xchg
sbb
fs
jo
imul
hlt
pusha
adc
mov
das
enter
sbb
jecxz
pop
popf
lret
push
int3
sbb
push
and
test
sbb
insb
push
loop
push
add
or
xor
pop
data16
mov
mov
push
cld
inc
