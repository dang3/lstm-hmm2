push
or
add
add
add
cmp
add
add
add
sub
test
fwait
into
je
sub
aad
in
pop
loopne
sar
cmc
cli
and
adc
mov
subb
mov
mov
mov
icebp
jmp
andb
js
dec
pop
push
aam
mov
cwtl
jp
sbb
int3
mov
jge
dec
dec
sti
xor
lods
rorb
mov
movsb
in
adc
adc
test
out
jne
sbb
je
mov
mov
gs
or
popa
push
iret
fdivrl
out
rcrb
je
lcall
xchg
pop
xor
cmp
push
dec
jmp
mov
lea
loop
cmp
and
out
jle
int
fisttps
and
dec
mov
jb
hlt
ja
push
in
aaa
stos
ret
aad
jno
lock
pop
sahf
mov
jbe
es
sub
repnz
aam
std
mov
cli
into
mov
bound
insb
adc
out
cmp
aaa
lret
jae
cmp
xchg
jnp
std
mov
and
xchg
cli
xchg
int3
ficoml
push
sub
mov
add
loopne
int
stos
dec
shll
mov
repz
inc
jmp
mov
sub
cltd
jb
ret
mov
cmp
mov
dec
popf
sbb
pop
insb
inc
push
vmovddup
loopne
adc
xchg
mov
movsl
push
jb
flds
shl
je
and
sub
lds
sti
push
cmp
adc
ret
mov
mov
inc
adc
add
jmp
aam
loopne
push
jmp
jg
ret
jle
and
iret
mull
and
outsl
shrl
push
pusha
push
fiadds
out
jnp
ljmp
xchg
mov
push
pop
cmp
ret
mov
out
pop
xor
adc
xor
in
push
clc
dec
and
xchg
or
bound
push
mov
and
jne
mov
adc
push
push
fnstenv
outsl
push
test
les
sbb
or
fnsave
and
cltd
push
jl
ds
push
or
xor
aam
cmpsl
les
mov
repnz
ja
and
xor
popa
or
pop
shlb
and
push
ljmp
push
dec
bnd
and
lods
push
clc
movsb
rcrl
pop
mov
out
fldenv
fmull
out
mov
ljmp
insl
dec
and
inc
xchg
xchg
jmp
or
popf
and
jecxz
idivb
sub
push
dec
cli
mov
test
mov
or
and
in
push
sub
enter
push
out
idivb
stc
fstps
pusha
je
js
inc
mov
leave
insl
mov
mov
mov
rolb
push
jnp
mov
xor
popa
test
inc
sub
dec
mov
and
and
or
xor
sbb
fimull
movsl
ja
push
fs
mov
sahf
notl
or
pop
push
insb
clc
sub
and
jl
jecxz
inc
ja
cmpsb
add
jo
or
outsb
jge
fs
pop
or
out
push
repz
inc
pushf
out
fistpl
lea
dec
push
inc
enter
mov
xchg
push
add
aas
cmovge
mov
jbe
cmp
jno
pop
dec
pop
and
arpl
gs
push
or
cmovns
nop
and
xor
cwtl
je
pop
mov
pop
push
pop
imul
mov
pop
test
pusha
test
out
add
inc
jb
and
fiadds
sbb
inc
int3
add
test
loop
incl
sub
inc
or
popf
movsl
movsl
jmp
sub
inc
cmp
ja
mov
std
add
cmp
imul
sbb
fisubl
mov
cmp
mov
xor
xchg
jnp
test
jmp
mov
dec
movsl
mov
mov
or
pop
cmp
dec
mov
aaa
and
mov
adc
into
cli
aaa
xor
enter
pop
imul
aam
in
leave
jns
popl
sub
inc
dec
pop
adc
push
and
repz
pop
mov
adc
pop
int
push
test
out
xchg
push
rolb
push
fistpll
cmp
sti
aas
push
ljmp
ljmp
jbe
dec
and
xchg
daa
call
sahf
sbb
stos
jmp
mov
jg
mov
les
pop
call
cmp
xchg
xor
lea
xchg
jae
push
mov
out
dec
aam
jge
push
int3
and
add
sbb
insl
sub
sbb
rep
sbb
and
stc
ss
les
jo
test
sbb
mov
loope
ret
stos
xor
jmp
sub
jmp
in
xchg
add
push
stos
jnp
add
dec
mov
push
out
inc
xchg
jae
add
jbe
xorb
dec
mov
push
mov
daa
outsb
mov
shrl
pop
jno
and
cmpsb
mov
cli
add
inc
rcrb
mov
mov
mov
inc
sbb
push
inc
inc
jmp
fs
xor
fisttpl
add
pushl
insb
loopne
in
test
cmc
call
je
lahf
fidivrl
fists
mov
sub
mov
ds
fmull
inc
sarb
fnstenv
mov
faddl
lcall
lret
xor
sub
mov
das
movsl
outsl
push
lds
int3
xchg
dec
push
ds
mov
stos
add
mov
enter
nop
subl
out
mov
in
mov
aam
ja
fiaddl
and
dec
cmp
jns
cmpsl
lret
xchg
cmpl
ja
push
lea
pop
test
pop
ss
or
lret
std
pop
stos
xchg
mov
ret
lods
jmp
sbb
repz
ljmp
mov
jae
insw
add
push
jg
mov
xchg
rclb
cwtl
cmpsl
sbb
nop
stos
aas
sub
mov
pop
out
je
test
sbb
and
lds
pop
or
shlb
iret
xchg
je
mov
pop
jne
clc
stos
adc
cli
insb
sbb
add
adc
jge
aaa
aam
push
mov
arpl
push
shlb
leave
lds
mov
sub
aam
sub
and
jbe
mov
jle
inc
daa
sbbb
sbb
lcall
es
xchg
cmp
mov
cmpsb
adc
fucomi
aas
bswap
cmc
add
aaa
push
movsl
pushf
movsb
mov
lods
les
sbb
add
jne
and
jno
or
imul
cltd
pop
loopne
add
stos
mov
jne
mov
inc
movsl
sub
sbb
push
lds
enter
int
sub
addb
push
or
mov
or
cmp
mov
mov
int
xlat
rcrl
cmp
ss
push
push
cmpl
sti
sub
rolb
pop
movsl
es
sahf
mov
dec
sbb
mov
xchg
push
icebp
sbb
iret
and
imulb
inc
lods
fst
sub
mov
push
lret
mov
jbe
cld
out
daa
push
test
pop
in
dec
cmp
mov
add
movntq
iret
jb
ds
or
nop
test
leave
jl
loopne
icebp
out
fmuls
push
nop
enter
test
pop
cmpsl
fstps
movsl
loopne
jns
dec
mov
push
sahf
cmp
rol
cmpsb
test
pop
movsb
mov
xlat
mov
adc
lock
xchg
cmp
mov
js
mov
add
popa
add
loopne
or
test
xor
xchg
push
sbb
inc
loopne
cs
loope
and
sti
in
fistl
push
test
xchg
xlat
mov
xor
in
xor
jl
cli
sub
mov
xchg
xchg
or
xchg
xchg
mov
lods
jl
clc
in
mov
xchg
ljmp
jnp
dec
shll
hlt
or
jae
cmpsb
int
orl
sub
orb
imul
cld
cmp
inc
xor
dec
mov
push
xor
sub
push
push
repz
stos
lds
push
daa
mov
push
aas
lock
test
ljmp
pop
add
mov
mov
pop
inc
mov
imul
testl
ss
adc
out
icebp
call
cmp
lds
popa
sub
xchg
aas
fisttpll
xor
mov
xchg
cltd
mov
mov
fmull
push
add
jl
jg
jge
cltd
xchg
mov
cmp
mov
out
cmp
ja
push
sub
sub
test
and
mov
int
sub
lock
xor
cld
or
es
and
sub
sbb
inc
gs
jge
sub
sbb
push
loopne
jnp
mov
stc
iret
pop
adc
scas
cmp
jge
xchg
mov
push
ja
neg
lcall
sub
stc
inc
out
int3
push
add
in
jmp
fdiv
mov
push
sub
test
fisttps
xor
push
sbb
sbb
pusha
xchg
fwait
xchg
cmp
xlat
mov
fstp
inc
mov
mov
mov
push
lret
cmp
repz
and
shlb
adc
add
push
popa
add
fwait
stos
cmp
pushf
std
jnp
pop
addl
mov
dec
mov
ss
ss
add
dec
es
fmuls
clc
into
cmp
push
repz
lock
adc
arpl
sbb
jns
out
dec
pop
clc
dec
mov
repz
adcl
mov
add
negb
xchg
or
xor
mov
and
shll
mov
push
lret
dec
cmp
mov
pop
mov
mov
movsb
push
fadds
scas
mov
rolb
outsl
cmp
mov
mov
int3
mov
push
or
adc
pop
push
and
or
push
xor
fildll
adc
add
inc
mov
sub
sbb
mov
mov
jae
movsl
dec
add
xor
bound
daa
mov
out
push
pop
cmp
sub
fs
ficompl
push
aad
sbb
popf
in
aaa
xor
test
unpckhps
mov
lcall
push
js
pushf
les
aaa
jb
push
jecxz
fsubl
lret
add
std
mov
ret
in
sbb
js
cmp
or
mov
and
adc
sbb
inc
xorl
push
inc
push
test
dec
cmpsl
movsl
sbb
pop
mov
daa
and
mov
fcomps
mov
pand
imul
mov
aam
sbb
and
fwait
in
push
adc
mov
mov
lcall
xchg
xor
cs
mov
or
in
int
adc
xor
inc
movl
pop
adc
sahf
jecxz
mov
sub
andl
movsw
jmp
xchg
int
xchg
loopne
adc
movb
mov
repnz
into
xchg
jns
vpaddsw
arpl
ds
push
fstl
or
movsb
mov
dec
imul
xorl
das
dec
repnz
xchg
cs
and
popa
adc
xor
out
jbe
add
dec
in
jl
clc
and
cmp
pop
mov
or
push
cli
and
loopne
dec
jne
pop
mov
add
mov
ret
or
push
jo
popf
or
jecxz
outsl
ret
xor
and
sub
xchg
out
jnp
pop
lcall
or
pop
dec
xchg
jl
ss
adc
jnp
cmc
or
stc
and
cmpsb
arpl
lret
dec
xchg
cld
mov
dec
push
repnz
data16
ss
scas
outsl
xor
jmp
sbbb
dec
pop
add
mov
mov
imul
jge
sub
jb,pt
push
nop
push
xor
xchg
inc
jmp
add
mov
pop
in
xor
push
cmp
aad
pop
sbb
jmp
loope
addr16
mov
sahf
cmp
clc
fidivs
pop
fcoms
xor
pop
jle
gs
in
pop
dec
aad
lods
std
stos
pushw
nop
or
push
outsb
xor
repnz
xchg
inc
xor
ret
push
shlb
aad
sbb
pop
insl
xchg
push
push
jns
xor
insl
push
pop
or
dec
dec
andl
lahf
cmc
std
dec
lretw
test
cmp
ljmp
aad
aaa
cld
jp
popa
in
iret
or
mov
add
andb
xor
daa
add
sub
mov
imul
pop
add
push
popf
incl
adc
loop
dec
pop
sti
out
daa
sub
mov
fucomp
inc
mov
cmp
jb
xlat
pop
adc
shll
cltd
jnp
dec
call
push
and
jne
cs
aam
aas
jle
into
mov
faddl
inc
adc
mov
pop
jne
adc
and
mov
call
hlt
pop
loop
lret
or
iret
int
sub
sub
int
sub
jbe
aad
lods
push
popf
or
push
cmp
xor
pop
jmp
cmp
inc
xor
into
inc
popf
sbb
jg
cmp
jae
sbb
gs
insb
mov
jno
out
mov
popa
mov
mov
stc
fistps
mov
sti
push
jp
pop
out
pop
pop
cmpb
test
mov
lods
or
loope
shrb
xchg
loope
out
push
repnz
repnz
push
ret
fs
int
arpl
or
cmp
les
and
pop
inc
push
shll
mov
in
cmpsb
adc
int
int
mov
movsl
pop
leave
mov
movsl
aaa
and
popf
or
dec
ljmp
mov
clc
imul
cmp
test
pushf
js
mov
cltd
jg
and
push
cmc
fidivl
cmp
push
dec
sarb
lret
arpl
gs
aas
push
aad
scas
push
test
lock
xchg
mov
jp
pop
mov
xchg
out
jo
pusha
aam
fsub
daa
pop
gs
xchg
lea
and
jge
arpl
fcoml
fdivrs
adcb
pop
add
les
adc
aam
xor
jl
sub
stos
jno
into
enter
ja
xchg
dec
dec
shlb
pop
add
mov
and
hlt
leave
fistpl
adcl
enter
es
nop
add
cltd
outsb
sbbb
js
and
andl
and
mov
cld
xchg
ret
das
sub
jno
ret
mov
cmc
xor
add
push
adc
in
out
cli
out
ds
pop
out
pop
adc
adc
or
jbe
adc
in
mov
mov
sub
push
mov
or
mov
lods
xchg
adc
out
repz
ja
aad
add
ret
mov
stos
gs
pop
aaa
dec
jmp
push
and
jb
cmp
and
add
shll
dec
cmp
push
rclb
sub
pop
rcr
jo
ficoms
jmp
push
jmp
test
loope
outsl
repz
mov
lods
and
pop
leave
addl
push
cld
cmp
or
clc
inc
mov
hlt
clc
and
pop
cs
jns
aad
fnstenv
int3
lcall
add
xchg
scas
shrl
fisubrl
mov
or
push
pushf
lods
push
adc
in
rclb
aad
loopne
iret
push
mov
sub
jecxz
pop
xchg
and
inc
push
or
cmp
sub
mov
lods
dec
inc
sub
inc
and
and
mov
daa
sbb
jb
inc
ja
adc
gs
mov
int3
ljmp
arpl
jg
jge
adc
cli
or
aaa
imul
cli
xor
ret
lds
sbb
sti
mov
push
daa
cmpsl
cmp
inc
fcoms
add
das
lret
mov
stc
inc
cli
je
enter
insb
into
test
insl
aam
jnp
rorb
xlat
xchg
push
pop
js
leave
ss
pushf
cmpsb
arpl
insb
leave
aam
inc
aas
and
cmp
cltd
inc
dec
xor
cmc
ret
sub
or
pop
xchg
xchg
inc
xchg
lods
aad
ds
inc
mov
adc
ret
inc
lahf
shll
push
cwtl
loopne
lds
lcall
outsb
lcall
sbb
mov
xor
subl
jmp
mov
lds
mov
popa
loopne
mov
or
gs
cmp
mov
add
cmp
cmc
inc
add
scas
fiadds
repnz
cmpl
cmc
lods
gs
inc
leave
fisubs
andb
cmpb
or
adc
sbb
ja
sti
inc
cmpsb
loop
movsb
test
rcrb
hlt
push
cmp
push
mov
mov
cmpsb
shrb
mov
adc
dec
stos
mov
and
mov
jle
and
shlb
add
loopne
jne
dec
fucom
clc
shrb
push
fsubs
sbb
push
sub
loopne
and
test
sbb
mov
pop
xchg
outsb
dec
outsl
and
outsl
test
pop
roll
cmp
and
fidivrs
xchg
mov
popf
fwait
sbb
dec
decl
daa
fdivrl
out
scas
out
dec
add
outsb
leave
jmp
pop
int3
pop
mov
scas
xchg
add
mov
inc
aas
pushf
cmp
push
clc
ds
dec
dec
sbb
gs
repnz
lret
push
mov
js
mov
pop
pop
push
xchg
adc
sub
xor
jne,pn
bound
jp
dec
push
fxch
leave
rcll
nop
mov
dec
cmp
cwtl
in
mul
push
scas
mov
xchg
push
pop
das
push
jle
or
push
jge
fs
loope
daa
in
sub
pusha
mov
add
sarb
mov
push
push
mov
lock
movsb
push
or
pushf
hlt
loop
adc
das
lods
xlat
push
mov
jnp
push
xchg
push
push
pop
and
std
push
sub
ss
push
out
lds
adc
pop
test
lods
adc
fmull
mov
sub
mov
jne
cld
lock
fwait
shrl
jo
lds
lods
ja
cmp
cmp
dec
adc
fucom
cmp
add
icebp
outsl
or
sbbb
sti
ljmp
mov
cmpsl
dec
mov
jmp
jae
jb
lret
xor
add
fisttpll
hlt
jns
mov
push
push
mov
cmp
aaa
icebp
fldcw
and
inc
add
jnp
lods
test
mull
mov
jo
jne
or
ljmp
subb
ficompl
push
and
sbb
xor
mov
js
jecxz
push
fdivp
xor
pop
or
sbb
int3
out
mov
mov
push
pop
lods
pop
sub
push
mov
stos
shlb
out
mov
mov
push
jne
fimuls
xor
mov
fidivs
mov
movsb
pop
jle
bound
xchg
dec
lds
cmpsb
mov
and
js
push
or
fwait
xor
mov
sub
pop
or
xor
movsl
inc
das
or
pop
xor
fcomip
push
les
inc
xlat
dec
ljmp
cmp
jg
fisttps
das
hlt
sbb
es
lahf
lcall
fsubp
sbb
shll
insb
push
lods
leave
mov
test
jb
and
cwtl
rorl
iret
lcall
mov
adc
push
add
dec
add
outsb
inc
pop
jg
or
inc
fprem
fcoms
sub
sbb
out
test
pop
ljmp
js
iret
cld
sub
dec
ss
ljmp
dec
xchg
call
mov
hlt
call
adc
aam
or
or
cmp
lds
adc
into
cmp
ss
fstl
orb
adc
adc
inc
lods
adc
std
push
xchg
lcall
cmpl
loopne
insl
pop
or
movq
int
sahf
in
dec
cmp
bound
mov
push
mov
rclb
leave
mov
adc
scas
mov
dec
or
idiv
or
xchg
adc
mov
cs
hlt
hlt
rorl
sbb
ja
dec
aad
sub
lods
push
into
adc
sub
inc
shll
pushf
xor
xor
test
jno
push
outsl
and
pop
adc
push
dec
mov
cmp
or
stc
jne
mov
or
push
inc
sub
ret
dec
std
cld
pop
pop
gs
imul
and
movsl
in
push
test
or
inc
stos
jge
movsb
dec
inc
dec
cmc
pop
inc
push
nop
test
pop
jae
cmp
jg
cli
fsubp
jns
xlat
push
insl
sub
pop
das
imul
test
dec
lock
rolb
add
xchg
fnstenv
xor
lret
nop
imull
rorl
push
mov
jne
test
xchg
mov
repz
sti
sbb
enter
mov
xchg
pop
fcomps
mov
mov
fxch
add
pop
pop
test
lcall
push
mov
fwait
int3
imul
or
test
jge
mov
cmp
out
mov
js
adc
sbb
sub
hlt
push
mull
push
dec
clc
pushf
xchg
mov
das
add
cmpsl
sti
cmp
and
pop
pop
daa
mov
add
cmc
mov
in
add
mov
lret
jnp
std
xchg
cmpl
ret
shrb
lcall
cmp
test
and
xlat
mov
scas
fcompl
scas
aaa
cmp
aam
bound
inc
xor
lcall
dec
test
mov
add
insb
xchg
dec
xor
notl
imul
jge
and
jne
add
sbb
sbb
ds
leave
into
mov
adc
adc
mov
push
cmp
pop
cmpsb
aam
lods
jge
repnz
mov
sub
cmp
int
and
xchg
cwtl
dec
imul
mov
fldl
data16
xor
ljmp
ficomps
ss
and
and
es
jge
fadds
push
shl
xchg
xor
ror
xchg
fnstcw
sub
clc
lahf
xchg
repnz
xor
lret
mov
rolb
or
cmp
jnp
mov
stos
daa
lds
ds
xor
adc
int
stos
xlat
jge
adcl
addl
fistpl
fcmovbe
js
mov
ljmp
gs
lds
jle
lret
call
push
jecxz
sahf
fmuls
dec
pusha
stc
xor
aaa
dec
imul
in
fwait
lea
push
pop
mov
data16
jle
fs
clc
mov
jp
jl
or
movsb
cmp
mov
lods
inc
and
imul
xchg
adcb
insb
dec
int3
nop
nop
in
jecxz
dec
push
test
jg
mov
rolb
mov
insb
cmp
pop
xor
test
ficomps
test
imul
push
jmp
shll
adc
negb
push
mov
pop
adc
stos
cld
mov
inc
jmp
out
pop
push
cmp
mov
xchg
mov
inc
xor
jnp
adc
mov
mov
push
inc
jg
das
ja
andb
add
lahf
sub
mov
mov
out
scas
mov
xlat
dec
push
rolb
cmp
nop
mov
jnp
mov
jae
ret
pop
cmpsb
jb
adc
mov
ljmp
cs
inc
fs
insl
pop
je
fidivs
shll
and
xor
push
repz
cld
leave
xchg
pop
sub
mov
out
xacquire
stos
mov
aam
in
mov
js
jns
push
jmp
outsb
add
xchg
inc
mov
sub
test
push
and
aam
pop
and
hlt
scas
mov
pop
dec
push
in
pop
fcomps
popf
adc
xchg
adc
xlat
popl
inc
stc
add
cmp
movsl
imul
and
cmp
cmpsb
mov
jmp
push
std
fldenv
mov
sub
mov
inc
in
sub
sub
jae
lods
scas
mov
cmp
lock
lods
enter
pop
shlb
divl
pop
jle
in
stc
jnp
outsb
adc
dec
mov
push
mov
sub
inc
aaa
daa
dec
mov
jg
testl
scas
pop
xor
sarl
sbb
inc
dec
xchg
xor
jmp
ret
push
push
outsb
and
mov
mov
jecxz
out
cltd
into
xchg
jl
repz
pop
push
jne
gs
lahf
dec
pop
mov
push
vpermil2ps
mov
jo
xor
mov
sub
mov
or
or
stos
js
cmpl
testb
bnd
out
adc
dec
stc
ljmp
loopne
imul
push
inc
sub
cli
test
mov
out
rcrl
imul
jnp
int3
mov
pop
aad
jle
sbb
fwait
loope
add
aas
jmp
mov
push
jnp
dec
inc
or
push
pop
cwtl
pushf
mov
dec
inc
mov
sbb
mov
ss
adc
pop
in
lret
fldenv
jmp
xchg
push
push
cmp
loope
push
in
mov
add
pop
jnp
cmpl
and
inc
pop
sbb
into
sbb
mov
dec
sub
xchg
insl
xor
cmp
sub
lea
inc
dec
fisttpll
sbb
sbb
les
cmpsb
test
stos
into
jo
shlb
inc
icebp
lahf
jmp
dec
add
sahf
jo
shll
sub
stos
xlat
mov
jp
xchg
push
mov
xchg
nop
and
mov
pop
sbb
xor
pop
dec
int
fistpll
in
ss
jb
jl
xlat
cmp
adc
mov
add
in
mov
sub
xchg
lcall
mov
mov
jmp
dec
stos
xlat
cmp
mov
rorl
rcl
jmp
mov
inc
cmpsl
push
nop
icebp
push
sub
iret
dec
aas
push
in
push
int3
push
dec
fs
sbb
mov
push
sub
filds
add
test
xchg
idivl
stc
imul
call
mov
xchg
cmp
cmp
cld
jp
dec
dec
xor
movl
fwait
or
sbb
fstl
ds
mov
push
lret
cmp
repnz
mov
out
sahf
push
add
sbb
xor
inc
out
jmp
inc
pminub
push
cli
enter
cmpsl
icebp
sbb
inc
lret
cmpsb
push
mov
xor
hlt
popa
xchg
cli
pop
add
mov
cli
test
sahf
mov
lret
sbb
fstps
inc
loopne
enter
sar
pop
mov
adc
test
xchg
mov
mov
cmp
xchg
adc
sbb
ljmp
xchg
or
xor
pop
mov
jge
mov
add
nop
mov
xor
mov
add
cltd
dec
fimull
decl
notb
fiadds
xchg
imul
xchg
adc
imul
sub
out
fwait
int3
loope
jo
out
dec
notb
loopne
xchg
movsb
addb
jnp
fstpl
push
lret
xchg
pop
push
lret
and
paddsb
mov
aas
dec
pop
cmp
sahf
mov
xchg
test
xchg
movsb
dec
movsb
int
popf
mov
ret
cmp
loop
cmp
adcl
fbld
mov
loop
loop
bnd
or
mov
mov
sbb
ret
lea
sbbb
cmp
pop
jnp
dec
inc
loop
cmpsb
jbe
jecxz
push
mov
mov
cmp
push
cli
mov
test
jbe
lock
repz
test
movsb
xchg
rcl
or
mov
push
addr16
fisttpl
in
std
xchg
and
dec
mov
pop
adc
inc
pop
jle
int3
xor
mov
sarb
fidivs
je
cmp
and
xor
xchg
mov
rorl
ljmp
loop
xchg
pop
inc
dec
aas
sub
xchg
and
pop
jno
ds
std
std
and
cmp
cltd
stos
decl
mov
gs
xor
arpl
stc
push
aam
pop
enter
es
das
sbb
imul
aas
push
xor
rorl
bound
and
add
push
or
ficomps
sub
inc
push
std
fisttps
mov
xor
mov
sub
mov
mov
lds
data16
sbb
sbb
cmpsb
jle
or
mov
xor
rcrb
iret
in
scas
jo
test
rorb
enter
and
push
in
inc
pop
mov
into
ret
es
rolb
adc
inc
ret
popf
sbb
mull
hlt
in
mov
xchg
into
inc
mov
sbb
mov
out
fcmovu
movsl
ja
xor
and
es
or
divl
lds
cmp
adc
jp
test
lret
das
cltd
push
jne
bound
out
or
cmp
inc
mov
jecxz
in
popl
shll
dec
xchg
dec
movsb
rolb
out
add
sbb
adc
hlt
jae
dec
push
addr16
outsl
jmp
andb
push
mov
mov
mov
push
add
mov
sub
cmp
push
cld
mov
adc
cmpsl
inc
mov
dec
sbb
sarw
inc
add
aas
mov
adc
mov
inc
dec
fmuls
lds
lea
add
and
jmp
ret
adc
dec
cmp
out
add
and
aam
imul
out
mov
imul
insl
sbb
fcoms
jge
or
es
adc
push
arpl
adc
lea
int
mov
into
addr16
les
int3
pop
pushf
add
cmp
fidivl
fdivrl
pop
mov
jg
mov
int
jge
fsubrs
sbb
imul
fs
sbb
in
ss
add
add
stos
jnp
pop
stos
pop
pop
shl
mov
or
rcrl
jmp
stc
rorb
inc
cmp
cmpsl
pop
adc
iret
cmp
dec
jle
popa
xor
fisubs
push
je
jmp
fsubs
cmpsl
dec
cmp
call
dec
leave
dec
scas
fisubrl
mov
push
mov
inc
dec
je
test
cmp
xchg
jle
test
pop
lods
xchg
outsb
mov
mov
roll
cwtl
adc
xchg
scas
jp
shll
jg
inc
push
jno
arpl
xchg
or
pop
fstpt
and
cmp
xchg
cmpsl
sbb
fnstenv
into
faddl
cmp
subb
out
mov
call
adc
imul
imul
or
pusha
enter
fwait
inc
std
push
cmpsl
sbb
sahf
inc
fmuls
xor
xlat
mov
test
mov
sbb
insl
mov
dec
adc
pushl
and
jb
ljmp
and
ret
cs
xor
add
xor
mov
movsl
mov
lcall
xchg
out
mov
fdivl
cld
lock
cmp
fucomi
pop
jmp
add
xor
test
fisubs
loope
mov
sahf
dec
mov
add
sbb
fsubp
fs
lea
cmp
iret
add
mov
fcmovnu
dec
out
outsl
inc
into
adc
mov
ffreep
inc
test
mov
movsl
fidivrl
pushf
add
inc
sbb
ficoml
fcmovnbe
mov
sarl
sub
or
push
mov
and
mov
sbb
fdivrl
mov
push
jmp
or
dec
popa
cltd
jno
imul
mov
pusha
ret
aam
xchg
add
addr16
xor
repz
inc
jb
pusha
and
aad
ret
cwtl
sti
push
sbb
cli
pop
mov
jne
sar
je
enter
fcoms
clc
dec
gs
sbb
pop
xor
fwait
pop
or
cmpsl
stc
pop
xor
and
insl
push
aas
out
pop
out
arpl
scas
mov
push
fildl
add
mov
fldenv
cmp
movsl
inc
jo
pop
out
push
iret
sar
xor
add
popa
call
popf
lcall
dec
shlb
or
and
mov
std
lret
sarb
mov
stc
push
int
mov
mov
hlt
mov
mov
mov
stos
das
cmpsb
dec
in
cmp
roll
xchg
in
jmp
movl
daa
xchg
inc
aaa
test
fsubrs
xor
or
shrl
dec
jbe
jecxz
dec
roll
inc
push
inc
pop
pop
mov
push
lret
cmpsb
mov
sub
pop
mov
mov
adc
in
fsubs
pop
xchg
mov
mov
jmp
out
leave
in
ja
cli
jbe
movsb
inc
cmpsb
add
xchg
sub
sti
orl
sub
data16
leave
insl
sbb
imul
cwtl
mov
rolb
repnz
lea
cld
and
lret
inc
xor
push
repnz
add
inc
es
xor
adc
jno
jmp
mov
mov
jecxz
pop
add
pop
iret
insb
icebp
rcll
test
adc
mov
rcrb
adc
loopne
sub
or
push
inc
insl
cmp
fwait
popf
mov
lea
aaa
not
cmp
sub
lahf
mov
shll
test
js
loopne
xor
mov
imul
mov
pop
mov
aad
lret
inc
add
leave
pop
in
mov
xor
mov
and
mov
xor
xor
jl
ss
sub
in
int3
jb
movsl
or
cmp
stos
push
xor
inc
das
mov
add
adc
dec
jp
dec
hlt
popa
pmaddwd
pop
fsubl
jg
hlt
and
movsb
inc
or
clc
in
jae
repnz
xor
push
push
mulb
mov
out
sbb
sub
sbb
and
stos
scas
inc
hlt
pop
push
mov
jg
pushf
xchg
inc
pop
jne
andb
adc
gs
push
insl
inc
jge
push
in
mov
pop
cmp
mov
or
lods
xchg
sub
pop
lret
sar
add
push
mov
int
je
data16
pop
fsts
lods
test
sbb
inc
imul
sub
dec
rolb
mov
out
out
insb
shl
xchg
cmp
xor
repnz
test
pop
xor
les
fcomps
jmp
jmp
xor
inc
jbe
inc
cmpsl
sub
in
cmc
add
mov
ret
mov
and
stos
mov
pop
fnstcw
and
pushf
loop
mov
insb
bound
or
fisttps
mov
pusha
xchg
jne
repz
dec
enter
sub
lods
pop
inc
outsl
ror
das
pop
dec
rclb
adcl
xor
insb
imul
mov
sbb
outsl
mov
inc
add
clc
and
mov
pushf
loope
das
je
add
jge
and
popf
pop
pop
bound
mov
mov
mov
daa
and
pop
or
repz
fwait
je
stos
inc
cwtl
shlb
mov
xlat
push
data16
or
inc
or
loop
sahf
pushf
pop
cmp
popf
push
jg
leave
jmp
movsl
mov
leave
xor
pop
cmp
mov
addr16
lods
or
cli
and
inc
hlt
mov
div
and
sar
testl
dec
add
dec
loopne
cmp
pop
cmovne
jb
loop
add
xor
lahf
mov
mov
sbbb
xor
or
loope
cmp
scas
cld
into
mov
arpl
scas
icebp
or
pop
push
nop
leave
dec
xchg
aas
inc
sub
cmc
sbb
imul
in
jns
mov
mov
pop
push
lret
loopne
xor
mov
int
test
xchg
sbbb
xchg
jo
stos
sbb
mov
adc
xchg
fs
dec
push
or
or
lahf
bound
sub
and
jns
cmp
adc
stc
or
into
xchg
cmpsl
dec
sarl
mov
push
inc
les
stos
pop
repz
shrb
js
adc
gs
add
xor
ljmp
or
pushw
push
lahf
fcoml
push
mov
cli
xchg
mov
add
xor
ja
cmp
mov
test
cmpsl
xchg
call
lahf
out
dec
xor
push
cmp
fucom
popf
call
icebp
cli
jnp
inc
mov
imul
cld
andl
cmp
inc
xorl
and
nop
cwtl
insb
addr16
push
inc
out
mov
jl
sti
xchg
daa
js
sub
dec
or
and
testl
ss
and
sub
rorb
inc
jo
inc
inc
or
mov
mov
popf
xchg
rcrb
stos
mov
bound
or
jae
xchg
test
rolb
mov
add
pop
cmp
push
fadd
inc
sar
out
or
mov
mov
pushf
xor
or
dec
cmpsb
in
in
mov
ficomps
insl
rorb
ja
xchg
dec
gs
xor
push
sub
pop
out
jge
repz
jnp
ficoml
leave
arpl
add
xor
push
bnd
clc
inc
test
mov
mov
or
xor
xchg
dec
mov
sahf
jmp
lds
lock
mov
sub
test
aad
inc
jge
shr
xchg
add
insl
jle
xor
scas
push
int3
push
mov
shr
pop
mov
popa
or
sub
cmp
mov
pop
mov
pop
je
gs
push
push
push
jmp
ret
inc
out
lret
pop
adc
cmp
push
dec
mov
call
stos
fidivrs
cmp
in
repnz
shll
lock
jge
bound
jmp
pop
inc
pop
push
jbe
lret
addl
in
and
sahf
push
repnz
out
ja
stos
or
lret
mov
jl
arpl
jle
and
mov
jb
clc
pslld
mov
iret
mov
js
mov
adc
js
sahf
sbb
ret
cmpsb
or
sarl
mov
inc
negb
inc
inc
mov
clc
jle
mov
mov
inc
jmp
test
inc
test
ret
das
dec
push
mull
out
mov
out
pop
out
push
inc
add
dec
fnstsw
fidivs
xchg
aad
xor
ss
fs
andl
filds
mov
adc
mov
jo
lcall
push
xor
movsb
ret
mov
add
repnz
pop
lods
push
jle
cmp
push
mov
addl
push
cli
lods
imul
jno
inc
sti
adc
inc
jp
jg
outsl
cld
inc
clc
stos
adc
dec
ficoml
stos
gs
pop
rclb
add
cmp
outsb
dec
popf
jns
cmp
adc
dec
mov
sbb
shlb
sbb
mov
inc
cltd
and
loope
cs
mov
or
stos
mov
push
test
jnp
repnz
sub
add
dec
inc
or
mov
test
stos
dec
lods
aaa
or
inc
and
gs
dec
fadd
sti
ss
push
xor
fwait
or
js
in
test
or
dec
mov
outsl
sbb
mov
push
jbe
sbb
mov
cmpxchg
sahf
xchg
push
xchg
push
repz
notb
push
test
xor
subb
sub
or
sbb
adc
pop
test
lahf
pop
fnstsw
loop
push
xor
inc
aam
loope
push
jo
lea
insb
stos
or
ret
dec
insb
jmp
pop
sub
sub
rcll
xchg
in
cmpsb
lret
push
pop
cmpsb
or
stos
pusha
pop
mov
test
nop
addr16
push
negb
jb
jb
adc
dec
popf
add
fwait
lcall
mov
pop
mov
jbe
loope
or
jp
loope
pmaxub
leave
je
lods
in
std
in
pop
jbe
mov
insl
inc
add
shll
jbe
les
pusha
xor
in
cs
mov
jecxz
fs
dec
or
lcall
cld
loope
mov
xor
test
seto
in
xchg
rcl
jb
and
xchg
les
js
xor
mov
and
pop
or
and
lods
adc
adc
imul
les
push
repnz
ljmp
pop
add
fs
mov
jbe
dec
and
popa
mov
xchg
imul
xchg
cmpsl
xor
sub
pop
adc
in
mov
loope
push
jo
mov
pop
loop
pushf
jnp
pop
cmp
jb
and
jb
pop
dec
pop
addr16
in
xorl
movsb
sbb
pop
jns
outsb
jmp
mov
stos
push
int3
cmp
js
out
ficoms
repz
in
popf
lret
imul
jecxz
mov
movsb
rcll
sbb
cmp
push
jae
imul
stos
dec
jmp
bound
in
mov
hlt
mov
sub
hlt
aaa
mov
xchg
add
incl
in
lods
cmp
jge
in
clc
loope
mov
or
stos
jo
sub
dec
push
cmp
pop
jmp
jb
jl
sbb
cmp
cmpsl
in
cmp
icebp
loope
fwait
mov
testl
dec
cmp
push
insb
jns
int3
jle
popf
and
sbb
mov
push
sarl
lock
xchg
fwait
divl
aaa
push
out
jae
cmp
dec
dec
cli
mov
fstl
ret
repnz
cmp
add
dec
inc
jo
or
inc
push
xchg
pop
stos
imul
dec
jbe
and
pop
jecxz
test
pop
inc
sbb
push
inc
jmp
cmpsl
lea
lcall
mov
fldcw
mov
xor
stc
lahf
adc
add
jp
adc
adc
lods
dec
lret
sub
aam
cwtl
cmc
popf
scas
mov
cs
js
jne
leave
xor
leave
add
aam
push
xchg
adc
and
jg
hlt
push
mov
aas
mov
mov
mov
and
jo
outsb
sbb
mov
daa
dec
sti
shlb
gs
sub
push
and
jecxz
push
jg
xchg
mov
xor
nop
lock
push
stos
daa
push
out
add
mov
rolb
out
imul
jmp
inc
pop
add
sbb
clc
fadds
mov
hlt
aas
maskmovq
idivl
lcall
xchg
test
add
scas
imul
loopne
mov
sbb
push
mov
call
pop
dec
jae
aaa
rcr
out
call
cmp
jge
mov
push
in
call
xlat
sbb
hlt
icebp
out
or
lods
adc
loopne
or
or
shll
sbb
call
cmpsb
vpaddusw
and
add
std
dec
in
mov
imul
std
add
shlb
rcll
fwait
or
push
je
popf
and
subb
jbe
sub
negl
fistps
lods
out
insl
jbe
aad
push
cltd
ljmp
subl
stos
inc
jno
xchg
loope
jbe
divb
inc
push
clc
mov
ret
dec
cltd
and
jbe
push
pop
cmp
jg
lods
stos
les
sub
sub
mov
std
add
scas
push
and
jno
cmc
lcall
dec
xchg
mov
fldl
lock
das
pop
xchg
jnp
jns
cmpl
movsl
xchg
lret
mov
test
mov
and
popf
scas
add
xor
outsl
xchg
lret
shrl
je
sbb
adcb
loope
dec
mov
pop
jns
loopne
loope
fwait
fwait
insb
and
add
aam
popf
pop
fwait
imul
sar
sub
jne
push
mov
cmpsb
test
ficoms
sqrtps
xchg
iret
stos
pop
push
shl
loop
ss
pop
mov
ss
sbb
add
pop
je
addr16
add
test
sub
and
loope
lret
or
mov
or
popa
mov
pop
mov
rolb
or
mov
ljmp
push
jle
mov
push
movsl
push
nop
pop
sbb
mov
neg
enter
pushf
loopne
mov
add
nop
out
sbb
or
sahf
xlat
push
jle
adc
add
add
popa
dec
lret
mulb
shl
or
inc
xchg
pop
cmpsl
hlt
adc
lahf
iret
sbb
mov
out
inc
mov
pop
or
push
mov
hlt
dec
mov
cmp
icebp
mov
stc
dec
mov
cmp
push
ljmp
push
bound
dec
fidivrl
sbb
lret
push
lock
add
addb
aaa
loope
stc
push
sub
in
or
cltd
mov
lahf
test
add
and
popa
or
xchg
xchg
fidivrs
inc
daa
shll
pop
arpl
jns
pop
add
cli
loopne
jg
nop
jl
or
cmp
pusha
xorb
sub
icebp
jmp
jno
test
push
jp
xchg
jns
andb
or
xchg
add
out
addb
push
je
mov
sbb
adc
inc
mov
dec
ud1
test
outsl
repnz
in
pop
sbb
dec
jb
test
or
shlb
pop
push
dec
lea
xor
sub
cmpsb
adc
add
jno
jmp
mov
xor
inc
es
je
push
mov
lret
fcmovb
insb
lret
sub
out
loopne
mov
mov
aas
mov
imul
mov
fistpll
pushl
rcr
push
and
cld
loopne
add
shll
or
imul
xchg
outsl
adc
or
inc
aam
jo
xchg
scas
inc
jnp
in
fisttps
in
xchg
sahf
xor
fisubl
xchg
pop
out
enter
push
inc
shlb
psubusb
xor
sahf
mov
je
fiaddl
jns
pop
jbe
mov
add
or
movsb
sti
cwtl
fildl
out
and
dec
mov
scas
fwait
push
xorl
int
frstor
in
xor
jmp
into
sbb
inc
rolb
and
lds
push
lret
push
fldl
cmpsb
xor
mov
stos
jae
ret
push
in
lahf
imul
xchg
pusha
ljmp
std
xchg
es
cmp
aaa
ss
sub
outsl
idiv
sub
sub
pop
cmpsl
das
fiadds
jne
jp
sub
adc
mov
cmpsl
jg
out
inc
cmp
dec
movsl
mov
les
out
push
adc
icebp
mov
and
xlat
stos
subl
rol
sub
scas
cld
jns
or
popa
sub
mov
cmpsb
pop
inc
sbb
push
mov
cmc
adc
pop
orl
in
aad
pop
rcl
sbb
add
roll
dec
imull
stos
popa
jb
xchg
pop
jne
clc
mov
fmull
dec
xor
xorb
xchg
push
ljmp
and
sub
ror
test
jle
and
fsincos
aam
mov
cmpsl
jnp
loopne
jns
push
mov
and
push
push
loope
dec
test
fisttpll
mov
aad
adc
sti
xor
jle
push
xchg
fucomi
mov
sti
fcmovne
ds
addl
and
jg
inc
and
fs
xchg
xchg
and
test
push
fwait
xchg
test
daa
cmc
xchg
aad
pop
mov
mov
repnz
jbe
repnz
mov
nop
xchg
jo
aaa
or
loopne
cli
add
cmp
mov
lea
int3
addr16
sub
test
sub
mov
movsb
mov
adc
mov
adc
into
icebp
out
lcall
dec
xor
xchg
mulb
inc
outsl
popa
neg
mov
and
pop
sbb
mov
cmp
inc
iret
pusha
mov
fadds
test
adc
fcomps
stos
bound
cs
xlat
push
repz
cwtl
cmp
out
sub
push
fldcw
mov
rcll
xlat
cmp
sbb
stos
adc
cmpsl
fistps
lcall
jo
mov
xchg
cmp
xor
outsl
cmpsl
cmp
addl
les
mov
les
cmp
in
int
mov
es
mov
je
mov
adc
xchg
imull
lret
aas
int3
sbb
sbb
stos
mov
push
pop
mov
jo
rcl
cmp
jge
mov
pop
ret
add
add
adc
mov
loopne
sarb
stos
jp
out
adc
outsl
shlb
push
push
pop
mov
imul
icebp
aas
insb
sarb
pop
lcall
and
sub
out
lcall
push
pop
nop
subl
fbstp
pop
rcll
jle
in
jnp
pop
push
cmp
sti
aad
cmp
enter
cltd
movsb
popf
mov
roll
ret
sub
push
pop
repnz
imul
ret
loopne
fistpl
lahf
sub
dec
and
test
xor
aaa
int3
out
push
mov
jge
adc
push
sub
cmp
into
cld
notb
adc
test
mov
lret
outsl
jl
nop
cltd
out
and
jle
lods
pop
out
and
clc
mov
mov
shlb
movsl
sub
mov
cmp
pusha
jl
jge
push
jo
repz
mov
lock
dec
jp
sub
xchg
ret
jp
dec
inc
mov
sbb
cmpsl
lret
sub
inc
mov
xchg
loopne
sbb
xchg
sar
out
add
sbb
sub
pop
xor
cmpsb
push
pop
adc
aad
icebp
xchg
jo
cmc
and
pop
les
repnz
jge
mov
pop
loope
cmp
adc
out
mov
mov
out
or
pop
push
adc
dec
inc
dec
out
mov
mov
inc
jl
in
xchg
mov
stc
add
std
sahf
mov
test
lods
xchg
jnp
rorb
mov
pop
and
lds
jecxz
jno
mov
test
cmp
add
int3
dec
es
inc
mov
pop
add
nop
pop
xchg
frstor
add
xchg
inc
or
inc
add
lock
pop
push
mov
stc
jle
adc
leave
or
inc
pop
sub
insl
cli
cmpsl
lea
mov
pop
xchg
xor
inc
jp
jg
cltd
cmpsl
mov
je
jb
or
ljmp
push
pop
and
push
in
faddl
xor
sbb
fists
jge
rorb
jg
mov
push
jo
inc
test
insl
roll
add
push
push
je
adc
jnp
imul
and
movsl
mov
pop
mov
mov
leave
xor
jmp
repz
lods
cltd
and
sbb
cli
inc
ret
test
mov
mov
hlt
lahf
xchg
pusha
sbb
lret
movsl
repnz
pop
mov
test
test
outsb
out
stos
mov
xchg
lods
push
insl
lods
lds
aas
pop
fsts
scas
jge
sbb
fnstcw
neg
loop
sub
mov
inc
and
inc
mov
lods
mov
in
and
sub
pop
pop
push
and
test
xor
jb
popl
mov
xchg
pushf
xor
repz
pop
push
push
daa
gs
push
dec
jle
mov
cmp
cmp
inc
mov
sahf
sbb
sub
ret
sub
xchg
inc
nop
ja
push
pcmpgtw
jne
insb
sub
jg
or
in
and
inc
repz
xchg
mov
clc
stc
lea
cmp
mov
pusha
add
cli
mov
add
loope
xlat
js
cs
mov
sbb
pushf
push
sbb
not
test
imul
imul
sub
push
mov
clc
inc
adc
cmovbe
mov
xchg
jne
and
mov
mov
popa
shrb
fbld
xchg
mov
sbb
mov
notb
push
push
jle
bound
mov
in
out
out
push
mov
cwtl
andb
pop
clc
stc
addr16
pop
pop
or
js
orb
and
sbb
mov
cmp
dec
dec
and
pop
insb
cmp
jnp
arpl
js
nop
mov
test
repnz
mov
in
jb
shll
fwait
sbb
out
mov
inc
jmp
movsl
dec
mov
jp
in
jne
sbb
xor
cs
xchg
sub
mul
dec
fmuls
test
pop
aas
insb
popa
loop
push
pop
and
jns
js
lods
iret
jns
out
mov
sti
inc
js
lret
adc
cmp
imul
xchg
dec
xchg
dec
push
or
mov
jnp
pop
adc
fs
gs
mov
inc
dec
lods
bound
pop
mov
or
adc
sub
jns
push
mov
and
js
mov
inc
imul
lret
mov
shlb
or
aas
cmpsb
and
inc
dec
push
stc
cmp
aad
xchg
mov
dec
faddl
cmpsb
clc
out
lret
sbb
into
loope
addr16
rolb
fstpt
sarb
in
pop
pop
shl
jge
sub
mov
mov
dec
jp
lahf
aam
movsb
divb
xrelease
popf
push
shll
test
out
mov
mov
add
adc
out
aaa
pop
push
add
sub
xchg
mov
popa
and
jmp
dec
bsr
lds
add
popf
pop
cmpsb
stc
cmp
mov
push
xchg
out
mov
sahf
icebp
iret
adc
and
add
stos
cmp
adc
out
xchg
adc
stc
jmp
testb
xorb
popf
mov
sub
pop
xlat
stos
loope
test
subl
ret
addr16
jecxz
es
add
mov
cmp
sub
lret
mov
jns
xchg
mov
sbb
clc
pushf
pop
popf
loop
jl
or
cmc
leave
out
or
repz
enter
lret
push
jge
rcr
and
pop
movsl
dec
push
xlat
addr16
cmp
stos
inc
mov
push
enter
mov
mov
mov
dec
cmpl
jb
cmpsb
dec
push
jbe
pop
xchg
push
imul
into
arpl
ljmp
or
fadds
sbb
inc
push
mov
add
add
lds
push
jns
mov
xchg
out
xor
adc
popa
testl
lret
int3
shrl
std
mov
fptan
mov
jmp
or
insb
and
aas
xchg
hlt
fcomip
mov
pop
rorl
xchg
lcall
je
cmp
mov
xchg
sub
mov
scas
ja
mov
fs
cmc
aas
jp
mov
jp
mov
out
stos
cmpsl
out
push
scas
movsl
insl
cmp
sub
scas
mov
fisubs
imull
jne
mov
pop
cmp
daa
scas
sbb
dec
out
xor
cld
in
adc
outsl
push
push
inc
mov
or
xorl
leave
aas
jmp
sub
mov
insl
jecxz
hlt
ja
sbb
cltd
repz
and
mov
jge
sbb
es
hlt
decl
sbb
mov
push
insb
pop
mov
movsb
jo
rcr
ja
xchg
push
add
testl
enter
aad
inc
popf
push
lret
push
lea
shr
cmp
mov
loop
test
adc
jnp
cmp
and
xor
xlat
sarl
test
rcll
movd
pop
lock
pop
push
sub
jg
cmpsb
fdivr
jl
jp
int
std
sbb
xlat
out
mov
mov
or
and
adc
call
inc
mov
push
sbb
or
mov
in
js
mov
mov
nop
ljmp
inc
movsb
dec
loopne
fcomps
stc
sbb
sbb
popw
push
mov
aas
jno
mov
cmp
inc
filds
or
pop
ficoml
ficoms
and
xchg
out
addl
push
and
jl
dec
cmp
fwait
bound
push
sub
mov
jl
jns
dec
mov
mov
ret
inc
int
inc
dec
jmp
cwtl
stc
pop
loop
mov
inc
test
pop
mov
cmp
or
out
push
orl
xchg
lea
sarb
je
sub
jmp
je
and
xor
in
add
mov
cs
cmpsl
inc
push
test
enter
lock
sbb
inc
pop
mov
or
cmp
cmp
push
push
stos
xor
pusha
sbb
orl
bound
fists
fistpl
xchg
and
inc
test
cmovo
mov
sub
cmp
jb
jno
xlat
ljmp
mov
rcrb
mov
out
dec
stos
push
loope
fistps
out
inc
inc
mov
or
xchg
shlb
in
sub
inc
xchg
aad
push
ja
xor
out
subl
sbb
mov
sbb
ret
pusha
adc
sub
adc
and
fs
fsubl
sub
sub
adcb
test
bnd
orb
dec
popf
add
mov
xchg
pavgw
adc
rcll
pop
xor
sub
jmp
rcrb
inc
xor
nop
das
mov
xchg
in
push
repnz
rclb
jecxz
aad
sarl
jle
mov
test
mov
and
int3
das
mov
enter
ret
cmc
incl
shrl
out
adc
cmpl
arpl
lds
gs
testb
pop
scas
mov
xchg
push
mov
add
and
in
mov
lret
cmc
int
stc
ret
lds
popf
aam
sbb
arpl
scas
aaa
lret
xorl
jne
xor
push
lods
mov
cld
inc
jmp
scas
data16
popa
into
pop
pop
gs
cs
pop
lea
sbb
stos
in
divb
pop
dec
outsl
push
popf
jbe
test
adc
sub
jl
adc
fcmove
inc
outsl
ret
mov
das
loop
mov
mov
inc
cmpsb
dec
into
popa
addl
data16
loop
nop
arpl
ljmp
mov
mov
addr16
scas
lcall
ret
dec
push
int
xor
push
lcall
into
cmc
sub
jecxz
scas
xor
in
js
mov
imul
jae
xor
sbb
fldt
test
fucomi
daa
sbb
rcrb
sub
sti
das
in
lret
push
lret
mov
insb
testb
test
mov
jae
pop
push
sbb
xchg
sbb
jg
mov
fcoml
xor
in
push
daa
mov
sub
dec
inc
xor
sbb
jbe
ret
cmp
dec
jp
or
int
inc
mov
popl
mov
shll
jl
pop
xor
jno
push
cmp
cmc
insb
stos
mov
jecxz
daa
pop
jp
add
arpl
nop
add
mov
popf
test
cltd
sti
inc
xorl
call
mov
mov
xchg
ret
jno
mov
mov
ret
ret
cmp
add
inc
data16
call
push
jp
add
test
ret
insl
aad
and
xor
out
ret
in
xchg
hlt
cltd
xchg
mov
xchg
out
dec
stos
mov
jecxz
jno
pop
ss
inc
mov
jp
mov
add
dec
adc
pop
outsb
icebp
pop
loopne
insl
repnz
push
int
mov
mov
lds
repz
add
mov
push
mov
lods
in
xor
push
sti
lret
pusha
scas
ret
std
pushf
sbb
mov
mull
jp
cs
cmp
and
aaa
or
fwait
mov
xchg
dec
aad
aas
mov
mov
sbb
push
lock
jl
push
adc
sbb
popa
aaa
mov
stc
gs
dec
mov
iret
add
mov
pop
int3
push
and
jno
or
in
dec
sub
jmp
shll
js
sub
pusha
gs
or
mov
dec
mov
ja
jmp
cs
mov
push
das
mov
dec
push
cmc
xor
add
dec
pop
loopne
xchg
scas
inc
push
adc
dec
mov
push
scas
ja
jnp
dec
sub
aaa
dec
lods
xor
pushw
jl
in
lds
ja
ja
jo
jl
cmc
arpl
dec
mov
ljmp
les
mov
cmp
adc
adc
pop
xor
sbb
sub
adc
pop
loop
loop
xchg
ffree
inc
cli
push
inc
sbbl
xchg
xchg
pop
arpl
mov
movsb
fiaddl
add
add
lea
enter
fbstp
xor
ss
push
imul
pushf
ljmp
inc
pop
mov
xor
clc
adc
add
inc
jge
mov
pop
decl
cmp
int3
sub
std
test
lods
shll
xchg
loop
outsb
in
mov
jg
adc
jl
mov
push
fadd
sub
sbb
aad
mov
inc
add
es
fwait
rep
je
fwait
sbb
insb
sbb
fisubs
dec
lret
cmpsl
xchg
cmp
ja
ljmp
dec
sub
cmp
sbb
jecxz
xor
dec
xchg
sbb
or
jl
cmpsb
jno
cmpsb
xor
cltd
ret
int
mov
mov
inc
cmp
scas
pop
js
cmc
popa
mov
fnstsw
gs
rcll
fwait
xorl
mov
sarl
fnstcw
or
stos
jmp
call
imul
lods
sbb
jno
and
push
ds
icebp
jmp
push
adc
outsl
andb
sub
pop
adc
bnd
out
iret
jecxz
adc
fs
loopne
cmpsb
pop
imul
lock
push
mov
aaa
out
add
int3
repnz
test
test
mov
pop
xchg
jle
cli
xchg
cmc
ljmp
je
mov
dec
mov
nop
lret
bound
pop
aam
dec
dec
sahf
push
fildll
mov
leave
xchg
lret
jns
dec
mov
cmc
xchg
mov
cmc
cld
cs
outsl
adc
arpl
daa
sub
sarb
and
cmp
sub
mov
cmpsb
sahf
les
push
inc
push
sbb
pop
push
cmp
push
or
xchg
mov
jns
bound
inc
inc
sbb
adc
xchg
test
adc
or
mov
xchg
fs
cmp
js
cmp
mov
cmpsb
je
cmp
stc
ljmp
fstpl
movsb
mov
pop
pop
test
sbb
xchg
testl
xchg
and
leave
mov
mov
mov
dec
adc
rolb
xchg
clc
pop
lods
dec
xchg
sbb
push
addr16
mov
lcall
pop
scas
mov
cmp
adc
adc
call
cmp
nop
scas
mov
orl
mov
jge
xchg
fadds
jmp
cmp
movsl
mov
dec
pushf
sub
inc
and
or
icebp
cmovl
jnp
jne
xor
xchg
int3
adc
sub
push
pop
pushf
mov
mov
cmp
mov
faddp
adc
push
popa
sbb
lock
inc
cmp
scas
fnstcw
jmp
shl
fisttpl
jecxz
push
xchg
xchg
out
or
jo
ss
dec
out
xor
mov
xrelease
sub
push
dec
dec
add
jno
in
xchg
xor
int3
cmpsb
and
and
fidivl
sahf
xchg
orl
cwtl
idiv
test
push
mov
push
or
in
negl
lock
lahf
fidivl
pop
add
push
xor
xchg
std
pop
mov
pop
dec
es
pop
push
rcrb
mov
adc
nop
ljmp
andb
fisubrs
imul
popa
dec
test
xor
movsl
inc
in
mov
movsl
sarl
adc
sub
sbb
ljmp
push
push
cs
imul
stos
dec
sbb
dec
push
test
pop
dec
cwtl
daa
xlat
sub
xchg
mov
aad
cmp
sti
aas
xchg
jbe
cmp
call
xlat
jo
ror
cwtl
jmp
outsb
xchg
xor
xchg
fiadds
cmpsl
cld
mov
pusha
cmpl
shrl
sbb
bound
test
push
adc
inc
or
out
scas
jmp
adc
or
xor
mov
in
mov
jecxz
das
fdivrs
push
and
shll
push
push
jo
pop
mov
ljmp
test
dec
push
adc
xor
mov
push
int
sbbl
add
data16
scas
call
jle
scas
xchg
movsl
lahf
xor
jnp
xchg
bound
ja
loope
mov
mov
out
cmp
push
testl
movsb
jo
and
inc
bound
mov
mov
out
jns
out
mov
adc
sub
pop
out
push
popf
das
cmp
jbe
sub
xchg
xchg
outsl
sbb
ljmp
mov
mov
mov
cmp
dec
ret
jl
in
push
pop
loope
jbe
aaa
ret
seta
test
sub
mov
mov
clc
inc
ja
inc
and
test
mov
dec
out
mov
add
add
roll
push
call
pop
je
jecxz
dec
loope
leave
sub
inc
popa
xor
and
cmc
orb
and
pop
aad
cmpsl
jnp
push
mov
dec
mov
int
pusha
aas
sbb
jge
sarl
clc
sub
cmpsl
aad
dec
enter
push
pushf
inc
lahf
add
and
into
xor
incb
mov
into
mov
test
lea
imul
xor
cmpsl
fiadds
lock
push
test
ds
cwtl
lods
xor
hlt
repz
inc
ja
add
cmp
jns
iret
insb
mov
pop
sbb
cmp
cmp
enter
cmp
jge
fs
mov
lret
push
movsl
repz
mov
ds
out
pop
sbb
stos
mov
pop
shll
insl
imul
jne
or
bound
ret
sbb
jecxz
int
pop
fisttpl
ss
test
xchg
push
push
movsb
push
rolb
adc
fwait
xchg
outsl
sbb
add
cmp
ret
lock
mov
jecxz
mov
divb
lea
jbe
jno
and
ficomps
xchg
in
sbb
mov
xchg
imul
dec
das
xor
and
mov
pop
xchg
mov
xchg
lods
jle
push
cmp
cmpsl
mov
jp
cmpsb
out
xor
test
test
dec
sbb
cmc
mov
sub
jecxz
dec
pop
inc
clc
movsb
and
data16
add
mov
sbb
xchg
pusha
loope
repz
in
iret
daa
jae
int
jbe
xchg
clc
lret
mov
ja
icebp
jg
aas
inc
fmull
cld
or
dec
pop
and
les
dec
loop
iret
mov
jne
out
jb
sbb
inc
pop
add
pop
outsl
pop
xchg
jb
out
push
ljmp
pop
dec
jns
xchg
xor
aaa
cwtl
cmpl
call
sbb
lock
ljmp
insb
lock
mov
incb
cmc
inc
rcll
push
hlt
icebp
adc
lock
data16
fdivl
and
cmp
jb
sarb
jge
pop
lcall
je
test
minps
push
inc
push
or
pushf
mov
data16
imul
adc
pop
imul
loope
nop
rcl
xchg
mov
lret
pushf
sub
adc
jge
enter
iret
cs
cmp
jnp
push
icebp
repnz
jne
mov
daa
or
xchg
pop
mov
stc
push
aad
sarl
jg
clc
and
jns
mov
sub
add
pushf
mov
mov
imul
mov
xchg
es
and
mov
into
scas
and
jnp
xchg
cmp
xor
xor
xor
push
or
movsb
inc
loope
lcall
push
imul
cmc
test
cld
pop
lret
or
xchg
inc
xchg
pushl
push
cs
lret
pop
stos
sbb
cmp
dec
adc
insb
stos
nop
or
mov
xlat
bswap
jmp
dec
mov
pop
cmpsl
icebp
hlt
pop
out
xchg
sbb
sbb
mov
push
cmc
dec
movsl
iret
jge
in
adc
addl
int3
repz
cmpsl
jmp
loopne
pop
sub
cld
sub
pop
mov
pop
hlt
jle
out
lock
mov
mov
ficompl
mov
xor
push
ficoml
mov
push
cld
inc
testb
xor
addl
jl
negl
pop
add
dec
sbbb
dec
js
and
ds
or
jmp
loop
add
mov
test
mov
loop
insb
in
pop
sub
or
cwtl
xchg
stos
push
fdivrl
shlb
bound
test
jo
or
mov
bnd
arpl
mov
lret
and
add
ds
pop
in
add
cltd
mov
psubd
cmp
jg
cmpsl
push
scas
mov
xlat
popf
testb
gs
push
ljmp
sub
test
jge
xchg
dec
sub
jmp
cmpsl
xchg
fcomps
mov
jae
mov
mov
popa
in
pop
in
cwtl
out
xchg
adc
jle
adc
push
or
mov
add
fs
fcompl
rorb
fistps
pop
inc
sbb
inc
inc
lods
and
cmp
int
sbbl
mov
cwtl
sub
std
lahf
and
sub
add
push
outsl
vsqrtps
push
lret
cmp
mov
sub
ret
ret
pop
in
xchg
add
test
and
sbb
xlat
pop
pushf
xlat
mov
inc
push
sub
or
das
lods
fs
dec
pop
inc
sub
test
sarb
jge
data16
adc
dec
dec
and
les
incl
mov
pop
adc
and
roll
in
pop
xchg
stos
pop
out
sub
movsb
mov
stc
bound
push
sub
and
mov
loope
sbb
inc
inc
xchg
inc
aad
imulb
lret
push
xor
jmp
popf
xor
push
out
cld
add
es
xor
or
js
test
push
outsl
dec
test
in
std
push
sub
or
sbb
mov
cld
xchg
add
mov
lret
pop
repnz
mov
pop
sarb
sub
cltd
pop
lods
jnp
in
push
sbb
cltd
shll
cmpsb
sbb
divb
xlat
cmp
rcrl
mov
dec
push
xchg
testb
out
jnp
in
hlt
mov
popf
sub
sub
jns
movsb
cmp
pop
pop
mov
mov
mov
jmp
inc
into
popa
mov
cmp
mov
mov
push
mov
sti
jno
mov
fwait
push
cmp
push
divl
mov
out
out
stos
addr16
mov
xchg
and
push
push
xchg
popf
dec
mov
arpl
rcl
cmp
pushf
aas
pop
mov
jno
mov
notb
mov
sbb
or
fdivp
xchg
fnsave
ror
pop
add
aaa
mov
mov
pusha
ficomps
out
sbb
push
scas
movsl
add
pop
out
cld
lock
jae
inc
mov
lea
cmp
push
fistps
inc
call
xchg
mov
orl
fucompp
xor
bound
sub
repnz
jp
jnp
cmp
and
inc
pop
shl
ficoml
inc
outsb
push
pop
fidivl
nop
insl
mov
add
pop
movb
jg
cld
aam
pop
adc
jb
andl
add
push
ret
dec
cmp
lret
pop
jo
add
sub
cmpsl
aam
sahf
cmp
push
mov
iret
cmp
mov
mov
push
jbe
mov
adcl
int3
push
jne
sbb
in
lea
hlt
popf
xor
xor
sbb
pop
cmc
dec
leave
clc
int3
test
in
lods
sti
mov
shlb
push
and
sbbl
mov
or
xlat
mov
xchg
out
push
movsl
adc
pop
aas
lock
out
out
adc
dec
js
popa
pop
mulb
jbe
aaa
push
imul
gs
add
fistps
aad
cmp
fadd
xchg
aaa
cmp
sub
xor
das
dec
mov
nop
les
ja
loopne
jle
or
adc
add
pusha
xchg
cli
idiv
sbbb
xchg
push
push
mov
inc
movsb
les
mov
jmp
mov
pop
sbb
js
roll
fdivrl
pop
or
lock
xchg
mov
fstl
xchg
pop
int3
jbe
sbb
push
aaa
sub
xchg
fmull
mov
cmp
xchg
push
imull
pop
cwtl
and
fbstp
lods
sbb
fucom
sbbl
aaa
dec
sahf
mov
dec
cmp
pushf
sbb
pop
inc
pop
out
adc
enter
inc
call
test
test
mov
aam
sbb
fidivrs
outsl
dec
push
push
inc
xchg
add
or
test
insl
leave
rol
inc
shll
in
testb
sub
mov
xor
cmp
and
sub
adc
add
subl
inc
mov
jbe
adc
loop
notl
mov
dec
fwait
push
add
mov
inc
cld
scas
dec
xchg
iret
std
sub
lock
sbb
cmp
dec
adc
jae
add
mov
pop
fwait
xchg
inc
xchg
repnz
cwtl
mov
xor
pop
out
iret
repz
sub
push
pop
stc
or
in
fwait
in
add
pop
shl
jmp
pop
pop
add
mov
add
lods
sub
pop
mov
and
mov
jae
dec
inc
push
out
dec
dec
dec
dec
lods
mov
or
lods
ds
test
repz
out
cltd
mov
push
daa
dec
cmp
test
stos
add
lods
vpmacsdql
lret
js
add
pop
stos
sti
call
iret
add
cltd
ljmp
mov
inc
lods
fucomip
mov
push
sbb
repnz
pop
stos
cmp
mov
sbbb
cmpb
push
js
push
and
xchg
pop
mov
dec
sub
hlt
sub
sahf
hlt
and
xchg
add
mov
fildl
arpl
movsb
test
and
push
cmpsl
xchg
out
or
in
mov
mov
push
pop
outsb
sub
cmpl
out
xchg
lods
jns
adc
mov
mov
dec
or
sti
push
cld
cmovo
sbb
mov
push
sbb
jl
stos
iret
dec
adc
lea
push
scas
clc
shrb
inc
fidivrs
push
fsubs
bnd
shl
add
jno
mov
mov
dec
push
mov
into
jno
ret
inc
shl
imull
enter
sbb
xchg
fwait
jp
pop
data16
or
stos
jo
push
xor
js
insl
xor
mov
ja
mov
and
mov
jp
popf
sub
xchg
imul
inc
sub
mov
in
sbb
out
mov
xor
xchg
pop
dec
fdivrs
lahf
in
mov
cmp
call
call
testb
push
cmp
cmp
push
or
in
imul
gs
mov
xchg
mov
mov
das
movb
into
sahf
sbb
outsb
and
sarl
movsb
js
mov
mov
lret
or
dec
test
add
fisttpl
mov
inc
aaa
in
fcompl
ja
shll
mov
jecxz
adc
pop
mov
dec
xchg
popa
cmpsb
mov
iret
in
ja
mov
mov
mov
adc
lods
jmp
out
mov
fs
adc
lret
dec
call
insl
pop
mov
mov
loopne
xor
js
mov
lods
dec
lods
dec
sahf
and
cmp
les
pop
sub
adc
push
mov
jmp
dec
loopne
add
cltd
sbb
or
aas
cwtl
nop
es
jle
sarb
inc
or
add
je
dec
or
repnz
xchg
cmp
stc
das
dec
jae
int3
xchg
xchg
push
jg
push
pop
xchg
adc
xchg
xorb
cmp
lcall
and
push
or
lods
mov
dec
stos
sub
pop
enter
jmp
outsb
loop
lock
sub
mov
pop
cs
les
bound
rcll
and
bound
add
loop
gs
arpl
cmp
pop
jb
ficomps
mov
insb
xor
stos
push
pushf
addl
mov
fmuls
sub
loopne
ljmp
push
rolb
out
inc
data16
lahf
add
jg
mov
jp
cs
xor
push
xchg
mov
mov
cltd
fidivrl
shlb
pop
test
cmp
xor
test
inc
xlat
es
push
adc
and
and
push
cmpsb
dec
das
movl
aas
icebp
fsubs
ljmp
xor
fisttpl
mov
adc
pop
scas
test
adc
mov
cmp
xor
sub
or
jnp
fcoms
mov
in
test
dec
aaa
lea
sbb
xchg
cmp
mov
shrl
sarb
iret
in
xchg
mov
push
jle
je
cmp
pop
push
nop
pushf
movl
jmp
cs
imul
test
jne
ret
mov
fists
inc
test
les
std
mov
add
pop
ret
or
xor
data16
inc
cmp
mov
cmc
popf
jge
mov
ret
push
ds
fildll
pop
scas
jns
fstl
nop
adcl
jne
cmc
aad
mov
subl
fwait
dec
push
pop
dec
xchg
jo
sahf
shlb
in
mov
dec
stc
lods
mov
adc
fsubrl
sbb
enter
pushf
and
stc
adc
inc
add
aaa
cmc
ret
jp
aam
push
sub
xlat
popf
push
adc
rcrl
xchg
stc
insb
or
cmp
inc
repz
dec
insl
mov
push
adc
xchg
add
rclb
mov
dec
or
test
xorl
ficompl
test
jo
sbb
cmpsb
lods
test
lret
aaa
rcrb
das
in
pop
sbb
inc
mov
stos
std
push
movsb
cwtl
inc
cmp
or
jp
insl
push
xlat
loop
cmpsb
fs
dec
mov
faddl
fidivrs
testl
and
pushf
in
out
aas
push
rclb
jns
repz
mov
jle
mov
cmp
sub
loope
jne
aaa
push
shl
inc
iret
xchg
inc
insb
sub
insb
or
mov
lods
jae
pop
sbbb
inc
jle
mov
insb
push
cmp
add
nop
scas
fwait
jle
jmp
addl
data16
lret
inc
rorb
add
and
or
cwtl
imul
clc
jg
mov
test
mov
or
out
lock
fisubrs
or
xorb
push
adc
jmp
stos
push
test
cmc
sub
xor
jmp
cmp
rol
jno
mov
scas
push
mov
xor
sub
cmp
shlb
cwtl
insb
mov
test
sub
mov
addr16
les
jb
ja
cli
sbb
adc
test
dec
je
sar
mov
xor
pusha
fisttpll
inc
int3
pop
sub
jnp
ja
int
outsl
pop
aaa
negb
push
xchg
dec
cld
lds
xchg
fnstsw
cld
dec
mov
xor
or
inc
pop
dec
jae
rcrb
out
fldl
lock
loopne
dec
cmc
icebp
cmc
insb
xchg
mov
add
test
mov
pop
lea
or
enter
push
test
jle
mov
mov
fwait
mov
mov
jbe
push
fmuls
or
and
jnp
mov
test
push
lods
and
xchg
loopne
mov
inc
dec
jg
jle
fcmove
std
mov
pop
pushf
test
or
or
inc
sbb
jbe
addb
insl
shrb
movsl
out
push
pop
jae
test
xchg
pop
test
lret
rcl
dec
xor
das
cwtl
popf
addb
mov
push
xchg
repz
jno
add
aad
inc
aad
out
inc
jecxz
xor
je
int
cmp
jp
outsl
jo
and
push
lahf
repz
pop
in
loop
adc
pop
cmp
bnd
sub
dec
and
test
mov
jle
or
rorb
push
je
push
pop
jge
xor
dec
push
cmc
jecxz
mov
iret
jne
sbb
sbb
icebp
dec
dec
sub
jl
aas
mov
pop
add
scas
ret
sbbl
sbb
test
xchg
dec
push
jmp
mov
in
jl
addb
mov
pusha
or
push
pop
and
mov
es
rcl
sbb
negb
icebp
imul
xchg
gs
in
ja
sqrtps
push
bound
dec
xchg
cmpxchg8b
jmp
sbb
inc
clc
jp
mov
and
adc
xor
mov
mov
test
jnp
sub
xchg
or
dec
cmp
and
jmp
pushf
sti
jbe
push
lcall
scas
out
mov
orl
lahf
fs
repz
pop
das
rolb
in
mov
cmpsl
dec
stos
mov
cld
dec
aam
xor
cmp
push
xchg
mov
cmpsl
jno
jp
mov
push
lea
daa
pop
inc
idiv
cmc
sub
pop
xchg
jns
push
lock
pushf
pop
cmpsl
mov
xchg
iret
push
std
cs
and
and
xlat
push
inc
cmpsl
cmp
sar
lret
clc
cmpsl
lcall
lcall
test
clc
gs
nop
push
jnp
push
imul
sub
loope
aad
cmp
fwait
in
lock
data16
stc
pop
pop
cmp
xchg
sub
ja
mov
xchg
test
daa
and
pusha
fdivl
xor
fsubrl
mov
dec
int3
into
and
lret
xchg
or
mov
lahf
pop
repz
aad
in
mov
out
ja
fs
cmp
aaa
imul
sbb
cld
mov
dec
add
outsb
dec
jno
jae
or
stos
fimuls
xor
pop
scas
sbb
lock
repnz
fimull
pop
or
enter
shlb
adc
stos
jl
out
loope
pop
icebp
inc
notl
into
loop
xchg
dec
scas
outsl
jnp
push
mov
lcall
outsl
mov
int3
andb
sbb
je
pop
inc
adc
pop
or
add
jp
dec
cmp
cmp
push
add
and
inc
inc
push
mov
inc
cmp
fmulp
inc
enter
gs
jl
add
test
adc
adc
and
fs
int
push
out
xor
xorl
js
in
jo
cwtl
rcrl
xor
addr16
movsl
mov
jo
test
dec
mov
adc
push
fidivrl
cld
ds
jns
lods
das
sbb
inc
push
sbb
pop
fidivrs
mov
sti
aad
arpl
and
push
sahf
in
inc
fcoml
test
xlat
pop
test
adc
xchg
mov
lret
stc
std
and
popf
adc
and
mov
jae
insl
jle
outsb
inc
jg
in
test
jb
daa
int3
mov
dec
and
inc
inc
dec
insb
int
lds
or
fldenv
shl
ljmpw
xor
roll
cwtl
fsub
je
lods
push
sub
negl
sbb
imul
arpl
lods
mov
int3
inc
inc
imul
les
pusha
push
testl
data16
push
jno
ljmp
inc
in
outsl
in
pop
sub
pop
add
mov
fists
add
dec
imul
mov
or
push
jb
ja
enter
and
jne
out
nop
sbb
cmp
push
add
jmp
push
mov
lods
cmp
push
pusha
fsub
loopne
xchg
dec
fldenv
mov
cld
add
es
mov
jp
or
dec
imul
mov
ja
mov
pushaw
stc
mov
dec
out
xorb
fisubs
cmp
jp
aaa
bound
jae
add
sub
inc
sub
add
imul
cmp
hlt
jbe
das
out
into
shrl
xchg
jg
inc
mov
mov
dec
add
push
test
insl
mov
jno
sbb
sbb
fstpl
repz
dec
aaa
lret
or
fistl
and
inc
int
push
outsb
iret
add
icebp
or
mov
lret
ds
loope
into
dec
shl
adc
jbe
push
pop
sub
xchg
add
push
and
dec
insl
inc
insl
je
ffreep
cmp
not
arpl
jmp
jmp
fnsave
gs
fstl
int3
and
xor
adc
data16
and
pushf
and
repz
movsb
mov
dec
inc
mov
testb
mov
imul
int
fmul
imul
sub
push
dec
pusha
enter
and
pop
hlt
adc
and
mov
fiadds
cli
mov
movsb
int
scas
cmp
test
sarb
xor
testb
pop
movsl
js
sbb
repz
dec
shlb
cwtl
dec
js
mov
dec
imul
and
inc
push
test
push
fs
sbb
inc
icebp
aad
jae
xchg
inc
fcmovne
insb
mov
cmpsb
rorl
fld
push
push
and
cmpsl
add
imul
mov
outsl
bound
pop
add
or
and
mov
movsl
dec
jmp
shll
jae
mov
or
call
pop
std
aas
sub
movsl
lcall
pop
nop
xchg
jno
sbb
xlat
bound
leave
adc
inc
in
mov
sti
ljmp
mov
div
int
xor
aad
jmp
jle
test
stc
xchg
cmpsb
es
cwtl
lret
call
inc
clc
dec
sub
jne
cmpsl
out
or
add
bound
mov
pop
jns
sbb
scas
movsb
cmc
lcall
inc
dec
add
add
push
jno
jle
xor
lahf
lahf
in
stos
mov
pop
loopne
xchg
lret
sbb
rorb
jno
icebp
pushf
loop
mov
cmp
ret
hlt
popa
cmp
mov
mov
push
mov
mov
xchg
cmpsb
xchg
aaa
pop
lret
lods
xchg
out
mov
cmp
mov
cwtl
mov
sbb
and
call
jae
das
mov
stc
push
fldt
call
mov
mov
add
aam
nop
inc
dec
adcl
xor
bound
pop
dec
int
popf
cmp
fstpt
mov
insl
and
vpextrd
out
jae
xor
ss
lods
outsl
xchg
and
insb
mov
cwtd
fdivp
push
lods
and
and
loope
pusha
mov
fldl
xor
cli
push
sahf
lahf
fwait
mov
push
mov
mov
add
dec
clc
les
imul
orl
jne
in
int3
call
jg
repnz
xor
add
lds
lret
push
cld
or
push
jle
jb
jle
js
or
pop
ds
jo
and
push
dec
aam
mov
jl
pusha
in
lahf
push
dec
fcmovb
adc
dec
lock
call
aaa
mov
lcall
jp
mov
hlt
scas
imul
out
std
xorl
inc
outsl
ljmp
sbb
xor
add
cmp
xchg
rol
mov
pop
sub
xor
sbb
push
cli
aaa
or
push
dec
aas
ds
mov
jle
lds
lret
or
lcall
inc
je
cmp
cmp
xchg
push
lods
mov
adc
mov
mov
jl
mov
inc
or
or
adcl
mov
mov
divl
icebp
xor
pop
jae
test
dec
mov
lock
xchg
cmc
pop
mov
adc
mov
or
mov
mov
add
or
hlt
cwtl
add
xlat
cmp
orl
pop
push
add
cmp
lods
js
out
pushf
movsb
cld
mov
and
cltd
mov
xchg
dec
xchg
mov
add
popa
cmp
jae
fstpt
daa
arpl
mov
lret
jle
mov
out
or
mov
cld
jo
daa
ss
inc
stc
and
jmp
push
addr16
lods
mov
lods
ss
push
cli
pop
push
sbb
mov
fwait
push
popa
rorb
mov
int3
repz
and
mov
cs
adc
jmp
push
iret
inc
imul
in
pop
and
mov
aad
and
mov
mov
cmpsb
pop
jno
in
lret
aaa
add
push
test
fildl
and
gs
mov
mov
pop
outsl
aam
std
sub
add
pop
ss
in
push
aad
cmpsl
outsb
push
test
call
cmpsb
ja
enter
lock
ret
jl
add
lods
fsubl
test
dec
xchg
jb
xchg
xchg
std
mov
xchg
leave
add
sub
repz
dec
push
aam
insl
clc
xor
rclb
aad
repnz
add
sub
push
jmp
cmc
xchg
cmp
adc
adc
lahf
mov
xlat
adc
add
xorb
push
push
shll
jl
or
and
rol
push
dec
in
je
cmp
je
daa
imul
adc
test
and
mov
lea
jbe
and
jne
pop
pop
inc
push
ret
pop
sub
aad
mov
xor
or
mov
sti
push
mov
inc
sub
add
mov
and
insb
xchg
inc
mov
push
out
cmpsb
push
mov
sub
int
mov
jecxz
stos
and
fists
enter
sbb
or
cmp
dec
mov
popa
inc
inc
mov
jne
dec
push
pop
jne
call
in
insw
dec
insb
push
xchg
dec
rcr
int
imul
repz
xchg
addr16
pop
inc
outsl
popf
and
data16
jp
inc
jp
mov
adc
insb
or
mov
cmp
mov
imul
push
push
fldcw
dec
scas
jmp
xor
sub
cmc
pop
adcl
in
fwait
movsb
mov
lods
or
push
stos
aam
outsb
les
or
out
and
adc
insb
leave
incl
cltd
shrb
add
pop
inc
sbb
add
push
int3
lods
imul
loop
xor
loopne
jnp
ljmp
fnstcw
pop
mov
xchg
mov
jno
sahf
aas
ficoml
push
inc
mov
mov
xor
pop
mov
cmp
lods
push
js
sub
or
in
fucomp
mov
xor
movsl
push
adc
pop
sub
sub
outsb
pop
je
push
aas
fidivs
and
inc
push
or
dec
and
fs
fstps
inc
fadd
cmc
inc
sub
dec
mov
pop
add
jp
sub
push
adc
pop
sbb
dec
scas
test
in
push
xchg
add
adc
sahf
adc
mov
cmp
jle
or
or
lea
lods
dec
adc
jo
stc
push
lret
pop
push
int
aad
inc
faddp
adc
mov
in
jl
add
punpcklbw
insb
cs
push
adc
mov
adc
inc
mov
xor
outsl
movsl
fs
mov
cmp
and
xor
mov
add
dec
fistpll
daa
dec
in
push
sub
xchg
lock
mov
scas
mov
push
inc
push
cwtl
sti
add
movlps
jle
in
push
mov
out
fnsave
inc
fwait
je
mov
test
jo
jb
pop
cmp
cmpsb
push
mov
stos
sbb
push
pop
out
jmp
sbb
xchg
push
xchg
mov
aad
xlat
fcmovne
ret
test
xchg
shrb
pop
cmp
pusha
popa
xchg
xor
jnp
sbb
or
mov
lods
add
fmulp
mov
nop
repz
iret
cmp
ljmp
or
sbb
mov
mov
hlt
outsb
add
syscall
imul
inc
mov
addr16
lods
sbb
push
cmp
icebp
push
add
pop
xlat
mov
lret
and
loope
xor
cli
test
jl
cld
mov
mov
xchg
bound
jae
push
add
js
addr16
idiv
xchg
adc
mov
jle
or
lea
arpl
mov
cmp
loop
xchg
jae
add
popf
jg
les
mov
pop
pusha
rcr
inc
cmp
cmc
popa
inc
mov
mov
pop
outsb
adc
ret
ljmp
and
sub
pop
mov
mov
sarl
pop
roll
fwait
jae
scas
cli
jl
ret
jae
mov
ja
scas
fs
lea
fisubs
xor
popf
stos
fs
jecxz
test
push
lret
leave
cmpsb
xlat
je
pop
mov
int
icebp
nop
decl
fstps
jbe
incl
pop
inc
adc
inc
shl
push
loopne
xor
jl
das
jmp
outsl
movsb
mov
mov
pop
cmpsl
lret
pop
xor
enter
inc
push
mov
jecxz
push
scas
cld
lock
and
cmpsb
ffree
xchg
push
das
xchg
das
push
jmp
mov
lea
jge
clc
dec
mov
push
or
mov
push
daa
sbb
pop
sub
ret
sbb
scas
xchg
mov
fchs
ljmp
test
push
jecxz
dec
mov
je
xchg
mov
jle
lods
sub
lock
clc
mov
in
sbb
orl
adcl
pop
pop
xor
call
mov
stc
sbb
sbb
popf
mov
pushl
clc
cld
jb
push
cmp
push
push
mov
push
mov
test
repz
adc
cmp
push
push
pop
aaa
repz
and
xor
or
testb
dec
mov
sbb
movsb
sbb
mov
gs
lret
lods
cmp
push
jae
xchg
and
arpl
xorl
mov
cmpsb
cmpsb
lock
addr16
jb
imul
inc
sbb
push
in
push
or
xor
mov
push
sub
push
daa
mov
xchg
or
and
lret
popf
jl
into
fisttpl
fiadds
imul
pushf
iret
ljmp
mov
fnstcw
lcall
rclb
cs
jge
dec
xchg
push
pop
aad
sahf
jmp
lea
popf
mov
aam
les
pop
stos
or
mov
xor
xor
push
and
pusha
xchg
inc
mov
pop
adc
or
ret
movsb
icebp
jb
insl
cwtl
push
push
arpl
mov
stos
daa
dec
aas
imul
inc
inc
jno
xchg
dec
or
mov
mov
or
in
ret
jbe
ljmp
and
lods
inc
sahf
xor
xor
mov
das
pop
mov
ss
cmp
push
adc
sbb
jmp
lcall
mov
adc
cmpsl
es
or
and
sub
dec
mov
mov
pop
sub
sbb
movsb
adc
insl
sub
mov
push
mov
fbstp
fsub
std
inc
push
lods
stos
dec
sbb
sarl
out
bound
inc
lods
int3
mov
js
xchg
enter
adcl
fidivrl
mov
dec
mov
std
cmp
or
pop
cmp
sbb
call
xchg
mov
adc
and
scas
mov
xor
and
mov
inc
mov
out
and
jo
mov
push
mov
ret
or
cmp
jge
jae
jbe
or
xor
dec
jmp
ret
inc
xor
push
mov
sti
into
loopne
ss
mov
push
mov
sbb
ret
or
test
push
mov
dec
mov
bound
lahf
add
sub
push
enter
stos
rol
pop
aaa
adc
in
cmpb
pop
xchg
rorl
rorl
repnz
es
lods
inc
inc
mov
and
cmp
cld
dec
daa
ss
push
ss
pop
pop
aad
push
movsb
sahf
mov
out
aaa
inc
popa
jb
sub
lahf
mov
fiadds
lods
adc
dec
jge
mov
push
pop
fwait
dec
fwait
orl
push
xchg
imul
adc
or
add
lret
dec
push
mov
sbb
push
xchg
sbb
xorl
lcall
jg
popf
sbb
and
shrl
neg
add
jge
loop
lods
jns
out
mov
loopne
jno
lret
jmp
mov
or
mov
out
xchg
test
ret
scas
cmp
inc
je
faddl
adc
into
int3
pop
movsl
fcomps
cmpsb
notl
incb
bound
and
or
in
pop
xor
push
cmp
popf
push
jne
mov
mov
aad
fldt
rcr
bound
mov
nop
xor
clc
or
addr16
adc
jo
sbb
aaa
dec
out
ror
ficoms
push
xchg
movsl
cmpsl
add
popf
test
xor
mov
loop
pop
cmp
adc
xor
jne
imul
popa
cmp
mov
les
sahf
mov
dec
push
adcb
pushf
pop
insb
and
daa
scas
inc
in
insl
cmp
pop
jmp
jle
js
pop
sub
notl
jmp
dec
in
cmc
push
sub
xchg
out
jne
or
push
cltd
or
stc
lret
not
or
movsl
shr
repnz
mov
xor
sub
mov
repnz
sub
pop
adc
filds
rcrl
mov
and
push
jnp
mov
adcl
pop
in
bound
call
repnz
cmp
in
pop
shll
jmp
jecxz
sbb
mov
dec
and
repz
dec
fcmovne
icebp
mov
inc
xor
lods
rol
call
push
adc
pop
xor
sbb
inc
daa
pop
push
out
stos
sahf
movsb
cld
sbbl
push
loop
shrl
cld
sbb
jp
es
fdivr
shlb
sbb
xor
jp
and
add
addr16
pop
jns
fiaddl
pop
negb
mov
pop
jno
jg
mov
scas
cli
insl
sub
mov
dec
out
insb
xor
mov
pop
adc
testl
add
xchg
js
sub
test
pop
jae
mov
jnp
add
sbb
xor
outsl
outsb
in
xchg
jg
shr
push
sub
fdivrs
out
cmp
sub
mov
mov
pusha
adc
mov
fnsave
xchg
and
sbb
sbb
mov
shl
mov
inc
mov
mov
loop
decl
dec
nop
mov
adc
psubsb
pop
setle
shlb
mov
mov
adc
adc
ljmp
pop
push
mov
lret
clc
in
cltd
jbe
out
inc
jp
xor
imul
loopne
rcl
fwait
mov
adc
push
movsb
pop
and
pop
movsl
adc
popa
sbb
xchg
mov
les
sbb
mov
pop
push
xchg
sub
neg
fdivrs
add
mov
lock
inc
adc
stc
bsr
nop
mov
sbb
inc
icebp
icebp
xchg
add
cmp
pop
mov
cmpsl
mov
or
inc
lret
pop
addps
inc
xlat
add
les
fadds
fdivs
pusha
adc
mov
out
dec
std
push
and
int3
insl
orl
sub
imul
xor
mov
xchg
and
lahf
inc
xor
jp
and
push
inc
mov
mov
mov
inc
sub
sahf
xchg
cmp
sub
fsubrl
cmp
rol
or
mov
xchg
jg
mov
cmp
xchg
or
adc
mov
mov
sahf
push
movups
mov
sub
rclb
fwait
inc
xchg
je
psrad
shr
leave
jo
jecxz
cmp
sub
sbb
jb
popa
cmp
pop
cmc
cltd
sar
fs
jne
xchg
es
xor
pushf
xchg
out
cwtl
or
or
jno
sub
rclb
int
das
fldl
js
dec
sbb
sub
add
sarl
jp
push
jl
and
shl
cmc
mov
adc
pusha
mov
test
jne
pop
call
pop
inc
mov
adc
inc
sub
lds
jbe
test
repz
dec
mov
icebp
mov
add
mov
xor
es
in
and
mov
cmp
xlat
xchg
jnp
mov
sub
and
xor
dec
xlat
pop
lret
movsb
popa
lock
push
xlat
aad
push
out
push
shlb
push
jg
ret
sub
fdivrs
sub
sub
out
rorl
mov
pusha
xor
lods
pop
popa
jp
dec
push
cmpsl
add
mov
stc
out
mov
lahf
inc
cmpsb
mov
xchg
inc
paddq
orl
repz
aas
shll
add
push
xchg
push
inc
sbb
jle
jge
lret
mov
cmp
and
jbe
fwait
clc
movb
nop
popf
jl
pusha
imul
cmpsb
jnp
inc
push
mov
addr16
mov
add
jle
dec
mov
leave
mov
cmp
ss
mov
xlat
push
scas
mov
fimuls
std
mov
sbb
mov
add
stos
push
sarb
cmp
int3
xor
leave
mov
cmp
inc
and
imul
pop
int3
xchg
push
movsl
jecxz
jno
out
es
cmpsl
pop
mov
mov
or
pop
mov
hlt
aas
in
push
iret
or
ja
inc
add
dec
jge
sub
jne
stc
push
jbe
out
push
push
jmp
arpl
hlt
cmp
out
jae
and
xor
mov
dec
enter
pop
adc
jge
xchg
sub
add
dec
pop
jp
or
mov
lcall
dec
psubsb
xor
pop
pop
add
push
in
mov
dec
xchg
fs
inc
or
rorb
jb
leave
mov
cmc
adc
or
lock
hlt
repz
mov
stos
testl
hlt
pop
xchg
dec
outsb
decl
shrl
sub
and
cld
pop
neg
scas
push
daa
mov
pop
popf
les
lock
fisttpl
insb
and
jp
and
cs
xchg
mov
and
lods
arpl
dec
jns
sbbl
push
dec
pop
cmp
cmp
jno
cld
push
popf
rorb
xchg
sti
adc
inc
mov
sbb
js
jbe
mov
xchg
mov
out
lea
push
mov
adc
mov
and
xchg
xchg
pushf
mov
mov
adc
pop
lcall
mov
push
xor
sub
and
push
and
pop
push
call
stos
in
pop
int
sub
sbb
pop
mov
scas
cmpsb
stos
nop
xor
jp
leave
mov
roll
imul
cmp
stos
or
mov
sahf
fwait
roll
mov
jbe
pop
ret
dec
push
xor
call
iret
adc
xchg
out
cmp
adc
sarl
pop
in
cwtl
mov
in
inc
dec
imul
in
pop
fsubr
insb
push
lods
sub
mov
pop
adc
pop
fdivr
js
dec
pop
rclb
rcrb
jb
dec
out
out
pop
out
adc
inc
scas
dec
mov
cltd
call
fcomps
outsb
icebp
dec
or
jo
cmp
leave
int
sbb
xchg
sahf
mov
mov
or
pop
movl
jne
xlat
outsl
push
daa
sub
mov
inc
cmp
fcomi
cmp
hlt
in
sbb
mov
mov
pop
sti
inc
dec
xlat
sub
dec
fnstsw
cli
bound
inc
aas
cmp
jns
xchg
bound
aaa
sub
pop
pop
mov
test
jmp
xchg
std
incl
enter
outsb
and
mov
or
fdivl
dec
mov
loope
sbb
imul
imul
inc
lods
push
inc
pop
out
dec
in
imul
rol
pop
xchg
or
stos
sbb
inc
mov
cs
dec
pop
adc
jecxz
outsl
in
rcrb
cmpsb
scas
imul
mov
sub
pushfw
icebp
flds
repnz
add
repz
dec
push
in
shlb
mov
popa
jp
pop
bound
std
mov
xchg
aad
inc
push
push
hlt
ljmp
cmp
ret
adc
pop
lahf
xor
imull
cmpsl
jp
decb
push
lock
movaps
clc
sbb
inc
stc
mov
out
cwtl
push
mov
mov
test
cli
call
push
add
cwtl
loop
test
inc
imul
stos
repz
into
loopne
aas
push
xor
push
insl
movsb
cld
imul
pushf
dec
cmpsb
xchg
int
pop
outsb
shlb
jne
push
xchg
es
jecxz
xchg
in
ss
mov
aaa
fsubrp
mov
cmc
lea
jno
inc
fstp
dec
push
nop
mov
call
scas
mov
push
dec
add
mov
call
sahf
xchg
jae
cmpsl
mov
ret
pop
cwtl
pop
popl
add
mov
inc
jg,pt
dec
or
aam
mov
pop
mov
push
in
add
popl
insb
and
lods
iret
scas
ret
mov
or
lret
fiadds
add
mov
decl
pop
and
imul
push
cmp
mov
sbb
mov
addr16
pusha
int
mov
and
out
or
pop
insb
sbb
xchg
mov
test
std
xor
cmp
loop
mov
mov
imul
cmp
sarb
mov
fcomps
jnp
ljmp
movsb
filds
lds
cmc
or
mov
push
shrl
sub
add
enter
mov
leave
mov
jge
orps
shlb
fsubr
add
jp
sub
push
mov
jbe
xchg
cmp
xlat
subb
fistpll
rcll
call
insl
ret
inc
mov
addr16
xor
dec
push
add
adc
inc
popl
imul
add
in
stc
sbb
fstpl
shlb
mov
xchg
pop
pop
ss
pop
cltd
es
hlt
add
cwtl
lods
push
repnz
xchg
inc
test
cmp
mov
jb
cmp
sub
cwtl
out
aaa
sbb
jl
mov
ret
stc
movsb
sarl
call
out
pop
lock
leave
add
mov
sbb
cmp
bound
inc
cmp
xor
or
imul
adc
cmp
or
mov
inc
pop
and
pusha
dec
cmp
ret
mov
pop
dec
rorb
orl
loopne
jmp
shl
adc
movsb
hlt
xlat
push
inc
or
lret
xor
mov
xchg
icebp
add
out
push
nop
xchg
fidivs
fwait
and
fsubs
daa
loopne
cmp
sub
test
dec
enter
ret
or
ljmp
pop
outsb
xor
popa
cmpsl
mov
fisubl
addr16
enter
in
add
test
mov
rcll
std
mov
mov
mov
inc
or
xor
popf
adc
and
shr
sbb
mov
jns
out
sub
jg
xchg
and
cmpsl
incb
push
scas
lahf
lods
sub
aas
aaa
pop
in
enter
fsubs
rcr
dec
in
outsb
mov
mov
lods
jae
popa
pop
mov
and
mov
int3
aas
mov
insl
in
and
jge
or
pusha
loopne
sbb
xlat
test
push
dec
cmp
mov
inc
mov
sti
sub
out
popf
and
ret
push
and
pop
push
mov
jb
inc
outsb
je
testl
fwait
mov
sub
cmpsl
lret
dec
sti
mov
das
std
shl
in
imul
add
push
xchg
mov
xchg
sbb
push
arpl
hlt
mov
push
mov
lods
lds
dec
xchg
sbb
sbb
xlat
inc
sub
shll
mov
mov
jne
aam
mov
scas
sahf
rolb
cld
jp
lret
sub
in
faddp
lock
js
aam
sbb
jg
in
inc
lea
loop
mov
inc
loopne
ret
stos
push
out
dec
fmuls
mov
shlb
sub
ja
mov
jno
jg
stos
mov
decl
or
ss
hlt
aad
add
pop
or
and
orb
mov
test
imul
fistl
imul
push
imul
cltd
movsb
cmp
rorl
out
and
into
push
je
ljmp
popa
add
mov
mov
push
xor
mov
popf
cmp
js
lret
jb
mov
mov
fmul
sbb
add
js
lcall
add
clc
loopne
inc
lods
or
repnz
xchg
andl
arpl
xchg
or
dec
pop
nopl
and
cmpsb
add
aas
arpl
call
aad
stos
movsl
pop
inc
jmp
push
push
sub
jae
or
mov
mov
pop
adc
lret
aam
jge
daa
iret
jmp
pop
test
add
insl
jo
sbbl
pop
adc
xor
fidivl
int3
push
or
mov
adc
es
push
pop
flds
repz
lods
js
mull
push
cmp
and
cmpsb
sbb
lock
add
insb
jl
pop
jae
stc
mov
jo
call
dec
lods
lods
sub
or
mov
pop
xlat
fdivs
sar
mov
sub
rcrb
cltd
aam
and
lock
stos
rcrb
aam
inc
push
or
cmp
daa
scas
cs
mov
and
push
insb
inc
fisubrl
xor
pushf
push
xchg
daa
dec
sbb
out
push
pop
xchg
push
lahf
aad
pop
add
shrb
mov
xchg
or
ja
stos
xchg
and
aaa
fstps
lock
xchg
loopne
and
mov
nop
jle
or
cmc
cmp
push
mov
cmp
inc
cltd
adc
sbb
pop
adc
sbb
repnz
aam
int
aad
mov
insl
aad
rcll
data16
or
int3
push
dec
fimull
inc
pop
orb
mov
sbb
fcomip
fnstenv
daa
ret
ja
jae,pn
movsl
arpl
nop
lds
and
mov
jne
fs
lds
mov
mov
out
dec
stos
fwait
push
push
js
std
sbb
lahf
jnp
inc
fwait
in
jge
mov
xor
mov
aam
add
cltd
adc
mov
sbb
xorl
sub
push
rcll
xchg
jnp
mov
mov
mov
jne
fld
push
mov
lods
sub
sub
jl
mov
lahf
pop
inc
adc
dec
cmp
mov
xor
pop
pop
xchg
pop
mov
or
sbb
in
sti
cld
xor
ficoml
xor
mov
mov
jae
cld
cmp
ss
pusha
subb
in
ja
jmp
ficomps
xchg
and
into
xor
xchg
sahf
das
mov
repz
pop
test
push
fwait
jnp
add
mov
sub
rolb
jne
jnp
push
mov
stos
mov
push
or
mov
mov
aas
decl
push
out
imul
insl
xchg
xchg
inc
push
stos
sbb
sub
jle
pop
sbb
mov
sahf
addr16
insl
mov
fdivr
loopne
loopne
repnz
mov
add
and
out
aad
inc
fnstenv
repz
push
adc
les
or
movsb
int
push
lods
cmp
call
push
mov
popa
out
fidivl
repnz
mov
rcrl
cmpsl
mov
dec
adc
aaa
divl
ret
jne
dec
mov
mov
jne
xlat
sub
addl
lcall
bnd
cmp
mov
cmpsl
push
icebp
pop
fs
push
pop
pushf
in
adc
into
or
jns
arpl
incb
push
rep
mov
mov
dec
mov
jl
daa
xor
sbbb
jbe
div
jno
push
and
and
int
mov
mov
pop
ficoms
fsubl
stos
push
int
push
sub
mov
fwait
adc
test
cmp
inc
js
mov
movsb
mov
cmp
icebp
dec
and
in
xchg
cmpsl
insb
pop
cmpsb
jecxz
arpl
or
mov
mov
je
and
jne
in
jp
lea
stc
xchg
jae
xchg
mov
xchg
jmp
shlb
pushf
add
sbb
pop
jns
mov
cld
jp
mov
outsb
xchg
popf
ds
imul
je
jb
mov
mov
and
xchg
lret
inc
cmp
outsb
sbb
mov
ljmp
test
icebp
cmp
in
jae
mov
nop
popf
xchg
outsl
sarb
lods
and
test
mov
ds
ds
hlt
test
pop
es
mov
mov
mov
aaa
sbb
push
push
call
push
inc
stos
ret
jno
lret
mov
mov
push
xchg
js
push
push
shrl
shl
cmp
push
xchg
jmp
or
arpl
mov
pushf
cwtl
loope
dec
ret
jns
mov
dec
add
pop
mov
or
and
or
ds
hlt
adc
and
movsb
cmp
cmp
xchg
fcompl
xchg
into
loop
bound
hlt
sbb
scas
ret
fcom
jle
test
mov
leave
inc
je
inc
das
jo
stos
mov
bound
sarl
mov
inc
sarl
sub
adc
enter
dec
in
repz
push
mov
mov
xor
sbb
jne
rolb
push
outsl
repz
call
and
adc
aaa
bound
fistps
in
mov
cvttps2pi
sbb
inc
rcrb
push
dec
or
roll
adc
and
aaa
adc
jb
sub
mov
xchg
cwtl
adc
xchg
mov
push
dec
inc
hlt
adc
cwtl
cwtl
adc
lock
std
hlt
or
jle
adc
mov
int
insb
lock
xchg
mov
sub
test
jmp
fs
mov
inc
mov
push
shrl
insl
outsl
sti
pop
cmp
out
mov
mov
sbb
sub
jp
lret
and
out
add
mov
les
push
ss
push
out
jnp
mov
inc
dec
add
inc
dec
push
pop
test
xchg
daa
filds
cmp
andb
lret
call
sub
popf
jmp
sub
push
call
stos
xor
mov
pop
push
pushf
adc
insl
lock
pop
test
imul
adc
dec
pop
mov
pop
jg
push
jae
addr16
sbb
push
mov
mov
aam
mov
test
lods
mov
scas
ret
cmpsl
mov
adcb
jle
arpl
push
enter
lea
and
cwtl
repnz
mov
outsb
sub
movsb
and
mov
sbb
xchg
mov
fstpt
stc
push
push
mov
lods
inc
xchg
ret
les
loop
jle
in
pop
stc
outsl
mov
mov
orl
andl
ret
jnp
sub
push
add
sub
imul
pusha
popa
test
mov
add
cld
push
mov
mov
arpl
or
xchg
das
test
or
int
cltd
stc
test
jnp
inc
fs
clc
inc
fistpll
jnp
sub
push
mov
mov
sarb
mov
pop
out
movsl
fldcw
cmpsb
std
lock
in
mov
adc
sub
add
rorl
fcmovbe
mov
lods
bound
pop
lods
cmp
jle
repz
jmp
push
addl
lret
or
push
pop
in
hlt
out
enter
dec
push
inc
xor
pop
arpl
mov
mov
mov
jg
xor
lret
sub
or
sub
inc
xchg
xor
into
test
out
dec
mov
push
mov
imul
mov
addb
cmp
sbb
dec
push
in
xchg
mov
or
lods
cmp
ret
ljmp
adc
addb
testl
aaa
sbb
std
dec
jge
mov
cmp
outsb
jmp
iret
leave
push
mov
addr16
mov
cmc
push
lock
pop
inc
cmpb
fistl
sub
xchg
dec
xchg
mov
mov
shlb
std
int
test
adc
and
out
mov
leave
aam
fsubrl
xor
iret
rcll
test
inc
stos
add
scas
test
jg
inc
dec
icebp
orb
dec
nop
or
add
adc
push
mov
mov
call
js
pcmpgtw
loop
mov
cmp
add
loopne
mov
fisubrl
scas
cltd
and
loope
insb
cmp
mov
lods
pusha
pop
dec
or
sti
inc
pop
sub
cltd
push
les
jne
lea
inc
clc
add
cmp
push
fwait
sbb
add
xchg
cmp
push
xor
xchg
and
xor
lods
cli
mov
es
das
test
loopne
out
shl
aad
or
test
ljmp
inc
inc
xchg
sub
test
xchg
cmp
daa
jl
into
andb
fdivs
cmpsb
movsb
in
cmp
movsb
jle
scas
mov
sbbl
mov
rorb
ljmp
pop
fidivl
push
dec
jl
imul
pop
push
sub
shll
cmp
insb
repz
add
rolb
cmpsl
pop
cmp
dec
ret
js
jl
push
jge
xchg
pop
loopw
in
nop
mov
xchg
jb
inc
adc
add
mov
decb
pop
fcompl
inc
pop
cmpsl
stos
fstpl
push
dec
ret
push
sbb
mov
or
ret
sbb
jnp
inc
inc
outsb
lock
lret
mov
daa
pop
jns
shrb
jne
or
push
adc
cwtl
push
dec
and
addb
dec
cld
push
xor
test
into
cmp
nop
lahf
jp
mov
pop
pop
mov
sti
dec
jg
jo
sub
sbb
pop
jne
out
out
clc
cld
cs
mov
sbb
jl
jae
movb
mov
push
mov
xor
je
fisubs
mov
out
es
mov
cld
out
xor
jnp
aad
icebp
inc
inc
div
repnz
je
mov
jne
bnd
clc
lods
inc
subb
dec
mov
push
xor
outsb
lds
pop
pop
jnp
popf
imul
in
daa
mov
ret
xchg
into
mov
push
push
add
imul
dec
imul
add
add
negb
or
fs
mov
jmp
xor
or
addr16
xor
xor
add
not
les
or
add
ficoms
cmpxchg
sti
xchg
push
gs
sbb
mov
xchg
out
dec
adc
sbb
mov
test
push
rcl
and
jg
dec
lret
je
or
pop
pop
stos
bound
scas
popa
cmp
cmp
jl
and
push
cli
orb
test
loope
bound
and
or
test
jne
test
movsb
mov
mov
pop
imulb
inc
mov
mov
fs
and
popa
fcmovbe
push
mov
push
jo
jge
adc
jg
xchg
sbb
or
stc
je
out
inc
rorb
and
adc
or
clc
repnz
sahf
js
adc
dec
lcall
xlat
aaa
pop
and
andl
ss
lock
sub
push
xchg
out
jmp
lods
aaa
outsb
stc
pop
push
mov
inc
pop
aam
or
scas
and
pop
rcrl
dec
in
pop
mov
stos
pop
imul
jp
movsb
movsb
xlat
in
or
in
dec
push
in
xchg
adc
mov
mov
arpl
adc
cmpsl
mov
xchg
dec
or
insl
push
fists
sbb
cmpsl
subb
shrl
and
int3
xor
jo
jl
jb
rcrb
repz
clc
mov
out
push
pop
and
cmp
jae
pop
out
mov
cmpl
sub
in
cld
and
popa
mov
adc
or
pop
mov
mov
cmp
xchg
cmp
cmp
incb
lret
outsl
ret
mov
popw
jp
stc
test
jmp
dec
fdiv
lods
push
inc
clc
push
cmp
xchg
or
cs
fisubrl
fsubrs
push
lahf
in
dec
add
push
inc
jo
jmp
inc
push
cmp
cmpsl
xchg
mov
mov
add
and
stos
push
mov
repz
popa
xor
and
shlb
mov
ss
add
in
ror
or
sub
xor
jbe
ret
fdivrs
imul
test
push
sub
add
push
insl
and
iret
mov
mov
popa
outsb
sub
sub
movsb
inc
movsl
clc
mov
popf
cmpsl
popf
dec
jne
mov
sub
test
aas
push
fistl
pusha
dec
mov
test
repnz
push
ret
jp
jl
push
add
sub
fs
push
xlat
cmpb
jns
arpl
dec
cmp
xor
fistl
mov
inc
push
push
jmp
imul
pop
loopne
mov
rcl
or
sbb
cs
mul
pop
sub
scas
mov
add
cli
lahf
or
or
adc
jp
bound
shrb
or
lods
cmp
lret
or
dec
scas
test
leave
xchg
or
push
mov
ficomps
ret
test
xchg
mov
sbb
sub
push
lret
add
jmp
jg
xor
xchg
test
into
in
daa
repz
push
cmpsl
and
std
sbb
or
test
jg
outsl
test
andb
lds
es
and
pop
pop
and
xchg
jg
add
andl
fldl
jecxz
cwtl
rcll
ss
mov
mov
jle
jecxz
in
dec
scas
cmp
push
jae
fimull
nop
push
push
jmp
loope
and
inc
push
mov
xchg
add
push
loope
cmp
ja
rcll
imul
ja
cmp
pop
in
ret
lds
fsub
in
pushf
mov
mov
hlt
icebp
sub
test
shrb
adc
xor
mov
ljmp
and
xor
pop
jl
push
add
adc
mov
fnstsw
imul
xchg
leave
stc
mov
lret
movl
sti
loop
jb
movsl
clc
and
sub
into
mov
imul
mov
lea
rcrl
add
push
mov
jecxz
sar
pushf
int
idivb
ret
in
add
cltd
xchg
bswap
shl
ud0
imul
ja
repnz
cmp
data16
insb
pop
fcmovu
mov
ds
xchg
adc
shrb
lock
add
bound
mov
mov
mov
sbb
int3
sbb
adc
lret
fxch
out
hlt
das
orb
std
sbbl
rolb
decb
xor
lcall
rcl
cld
dec
aas
mov
pop
sahf
inc
or
add
bswap
fnsave
ss
les
adc
jle
push
jge
aad
inc
cmpsb
mov
aam
add
add
cli
mov
adc
sbb
adc
xchg
call
stc
das
cmpsl
mov
push
jae
ret
push
push
in
imul
bound
pop
sbbl
jg
sub
add
je
inc
adc
pmulhuw
mov
pop
push
stos
sub
iret
pop
sub
insl
call
jg
shrl
xor
sbb
mov
jmp
mov
mov
xchg
aam
pop
sub
les
mov
inc
cmp
cmp
pop
mov
mov
cli
leave
aam
std
sbb
mov
add
andb
mov
mov
test
lret
out
dec
nop
push
lods
es
pop
scas
sub
dec
clc
xchg
out
mov
jnp
ret
je
add
xchg
and
shll
xor
jg
bound
push
cli
pop
cmc
cmp
mov
and
mov
inc
iret
sbb
call
xchg
js
and
mov
std
pop
jns
stos
ja
scas
lret
add
xlat
pop
cli
mov
gs
push
in
push
xor
scas
mov
mov
fistpl
dec
inc
sub
test
xor
push
sar
dec
test
lret
dec
sti
xchg
cmc
mov
sbb
in
cmp
movsl
mov
enter
xor
jle
inc
aaa
mov
and
jbe
idivl
mov
daa
jl
clc
push
fbld
push
lods
dec
loop
fldenv
lock
jb
aad
push
or
sbb
cmp
xor
mov
jl
jmp
add
lock
mov
mov
mov
mov
pop
add
and
std
inc
inc
mov
pusha
mov
pop
ret
test
adc
push
add
inc
jge,pt
je
fwait
xchg
mov
addr16
repz
ficoms
arpl
fidivl
aas
xor
aam
in
out
pop
inc
jo
test
push
and
lds
adc
lock
loopne
scas
xchg
jns
out
iret
adc
xchg
jnp
add
pop
fists
xchg
mov
test
mov
scas
aaa
in
sub
mov
into
jae
shrl
lahf
jb
pop
dec
add
aam
inc
push
pop
and
lcall
aas
subb
pop
push
outsl
std
mov
aad
sbb
lahf
mov
out
inc
mov
insb
pop
repz
sub
mov
xchg
repnz
aad
cmp
mov
loop
jae
jnp
lock
in
xorl
xor
pop
insl
loop
cmp
sbb
cmpl
movsb
push
and
mov
stos
ljmp
xor
adc
mov
jbe
xchg
and
lea
xchg
fsubs
add
mov
in
popf
sbb
xor
lret
inc
int
push
mov
aam
test
aaa
test
push
dec
insb
xchg
push
xchg
sti
mov
push
xchg
in
ja
aaa
sbb
stc
mov
jmp
mov
loope
fsub
inc
sub
push
fisttpll
into
mov
cmp
adc
fcmovne
pushf
ret
push
sbb
scas
in
add
xor
iret
xchg
xchg
sbb
xchg
addr16
fcmovb
adcl
ja
or
adcb
mov
push
or
addr16
add
cmp
inc
sub
mov
jle
push
or
mov
sbb
adc
js
and
ljmp
js
pop
mov
sbb
lahf
mov
gs
add
xor
int3
add
cmp
out
addr16
loop
scas
lret
jl
lods
pushl
inc
xchg
xor
cmp
stos
jae
outsl
pop
pusha
jo
pop
aad
dec
daa
add
xor
cmp
dec
and
orb
sarl
lock
ret
cmc
xchg
enter
stos
dec
or
xchg
call
sbbb
mov
loope
mov
cmp
push
xlat
adc
xchg
push
mov
push
leave
out
jbe
inc
sahf
jg
popf
fisttpl
mov
push
shlb
push
cmpsl
cltd
jg
imul
outsl
or
das
addr16
mov
fcomi
cmp
addb
mov
and
cltd
jo
scas
lea
jmp
das
mov
add
xor
enter
mov
and
mov
test
jg
mov
mov
mov
jmp
mov
mov
xchg
repnz
jge
lret
cmc
fadd
pop
push
popl
push
dec
cltd
ficompl
loope
icebp
imul
lds
cld
rcrl
in
lea
or
or
sub
inc
inc
xchg
xchg
inc
test
gs
rorb
movsl
gs
je
mov
pusha
pop
nop
sub
push
add
stc
push
in
bound
sahf
es
ljmp
and
movsl
jge
repnz
popf
and
lcall
leave
adc
ret
mov
dec
mov
rcll
fistl
mov
sub
mov
imul
lea
mov
push
push
iret
pop
cmpsl
jl
lods
and
mov
loop
inc
lea
mov
fldenv
ret
dec
test
popa
adc
iret
test
adc
pop
mov
or
pop
aas
dec
addr16
dec
mov
mov
jae
or
inc
sbb
lret
into
adc
ljmp
loopne
out
rolb
pop
mov
fwait
push
loope
lsl
cmc
jnp
jmp
mov
and
pushf
dec
pop
mov
jns,pt
mov
and
xlat
dec
sbb
mov
add
sarl
sbb
enter
mov
jbe
out
in
xchg
rorb
pusha
mov
mov
lea
jno
push
sub
mov
mov
lahf
cmp
sbb
xchg
ret
sti
mov
sub
inc
cmp
aaa
push
xor
fcoml
vcmpps
xorl
ja
test
mov
inc
or
pop
cmpsb
clc
cltd
loope
push
mov
negl
data16
inc
push
loope
sbb
mov
mov
add
inc
and
inc
out
xchg
sbb
and
jle
push
nop
inc
enter
xor
jle
lock
ret
push
sub
sub
lods
xor
xchg
lahf
test
sub
in
mov
fwait
in
pop
inc
ss
pop
push
mov
add
test
dec
push
mov
xchg
lret
test
dec
mov
xchg
out
pop
js
pop
bound
cmp
movsl
add
push
jmp
fistpl
sahf
push
cmp
rcll
sub
loope
push
imul
or
pop
and
cwtl
add
imul
push
lahf
dec
mov
fldl
pop
int
add
lret
mov
int
dec
cs
gs
adc
pop
arpl
call
cmpsl
scas
outsl
sbb
adc
mov
fs
repnz
and
mov
pop
out
mov
or
xchg
jmp
icebp
loope
or
cs
movl
adc
pushf
out
pop
insb
cmp
jb
insl
int3
or
inc
cwtl
push
push
mov
mov
push
xor
imul
cmp
mov
and
jmp
xchg
loope
sbb
and
and
mov
pop
add
push
je
adc
les
push
or
mov
test
mov
aas
outsb
mov
mov
mov
call
call
mov
sub
les
add
ret
psubsw
mov
push
cs
adc
cmp
and
adcb
arpl
movlps
rorb
adc
cmp
ret
jecxz
into
mov
push
jl
int
dec
dec
xor
and
mov
icebp
imul
clc
insb
xchg
ss
jecxz
pusha
bound
leave
xchg
lock
mov
test
push
in
pop
cmp
mov
jno
out
push
add
mov
ja
test
push
test
repnz
fwait
pop
dec
test
jne
iret
rclb
out
jbe
movl
loop
jno
jns
mov
in
mov
add
sub
bound
mov
enter
lret
mov
fxtract
pop
dec
ja
out
xchg
add
insb
call
test
inc
insb
mov
mov
dec
mov
les
adc
xlat
cmc
shl
test
add
inc
or
lcall
mov
movb
mov
jbe
mov
cmp
sbb
jae
xor
sti
outsl
adc
push
pop
and
inc
add
pop
std
scas
daa
lahf
cmp
inc
xchg
mov
inc
jge
test
ficoml
mov
mov
aam
hlt
jge
fsub
call
pop
jno
xchg
mov
jl
pusha
mov
lods
test
popa
cltd
neg
movsb
mov
jno
mov
lret
sub
arpl
in
add
loopne
mov
jg
cmp
sub
push
or
adc
add
idivb
stos
rol
cmpsl
jmp
xor
xchg
push
mov
xchg
pop
mov
sbb
push
adc
mov
in
jae
fdivl
testb
popa
sub
dec
test
stc
aaa
scas
sbb
cmp
mov
out
arpl
out
jecxz
cmp
jb
shll
dec
adc
popa
cmp
mov
sub
in
sbb
das
aad
mov
and
jl
mov
inc
mov
sub
dec
xor
pop
xchg
out
mov
test
xchg
data16
fdivl
lret
sub
push
or
in
sub
xor
pop
xorb
xchg
jle
cltd
mov
loope
cwtl
mov
mov
pop
or
mov
mov
in
adc
jb
leave
es
push
aas
rclb
fdivrl
cs
outsb
mov
das
in
fidivrs
sbb
pop
adc
std
push
mov
ret
sbbl
and
aas
fdivs
sahf
mov
cmpsl
imulb
ds
cli
jle
sarl
cmpsl
pop
lahf
mov
test
jle
adc
pushl
pop
sbb
xor
pop
cmpsl
fsts
mov
dec
sub
mov
mov
xchg
mov
into
sbb
push
mov
shrl
nop
repz
inc
cmpb
ljmp
sub
add
clc
test
pop
add
pop
mov
pop
lods
sbb
dec
jg
jb
jecxz
inc
data16
sub
jmp
push
jbe
pop
dec
jl
inc
ljmp
push
loope
xchg
xlat
pop
jns
mov
lods
ficomps
sub
pop
std
in
stc
push
xor
test
dec
dec
scas
enter
cli
bound
mov
enter
pop
rcl
xchg
cmpsb
out
into
in
insb
push
mov
adc
mov
jmp
in
stc
sub
mov
in
cmp
mov
jno
and
lds
movl
jo
repz
and
sub
sbb
dec
jo
loopne
add
movsl
enter
lds
pop
sti
xor
sbb
jb
sub
out
mov
pusha
sahf
jo
fisubl
xor
lea
loop
adc
push
bound
jmp
adc
clc
jb
xchg
cmpsb
movsb
cmp
jle
jbe
xor
mov
arpl
inc
rorb
fwait
add
sahf
iret
mov
and
mov
enter
and
out
push
rclb
sahf
js
xor
xor
daa
sub
rolb
lds
repz
cmc
jae
mov
std
jae
dec
push
inc
cmpb
adc
outsl
xchg
xor
ret
pop
out
and
and
out
jnp
sub
pop
rcl
adc
jmp
or
xchg
addl
jg
out
jge
inc
pop
mov
cmpsl
xchg
cmp
ficoml
jg
cmp
popa
mov
jno,pt
xchg
and
call
stos
add
fidivl
dec
ret
and
mov
cmp
out
stc
sbb
xchg
push
mov
fcmovnb
pop
sub
leave
cld
lret
sbb
ret
scas
in
movsb
jge
pop
sub
sub
jp
or
outsb
inc
repz
xchg
pop
mov
insb
dec
scas
rep
jns
push
add
aam
mov
imul
pop
in
rcrb
loope
das
mov
sub
jl
adc
mov
mov
aas
cmp
sub
je
cmpsl
push
fcmovu
mov
pop
xor
push
mov
or
or
clc
cltd
pop
imul
sbb
dec
leave
xor
mov
arpl
xchg
lret
jge
or
loope
inc
mov
and
js
xor
lds
add
dec
rolb
enter
push
mov
cmp
jge
outsl
out
pusha
fwait
not
out
dec
xor
out
or
push
in
pop
lret
push
shll
dec
ficoml
push
or
adc
cmp
sub
xorb
pop
dec
hlt
push
mov
push
jnp
ret
hlt
add
pop
jecxz
mov
gs
movsl
in
rcll
add
fptan
xchg
dec
pop
mov
cwtl
jmp
push
mul
push
xchg
push
xchg
js
lock
cmpsb
cmpsb
je
xchg
cmc
mov
lahf
sbb
pop
mov
xor
dec
jge
cmpb
mov
cmp
movsl
lahf
inc
mov
in
mov
or
inc
ljmp
push
pop
jnp,pt
inc
cmp
icebp
pop
jnp
xchg
fwait
pop
flds
pop
sub
loopne
nop
test
jne
fs
imul
xsaves
shll
divl
pop
nop
pop
dec
mov
jae
cmp
push
adc
bound
outsb
ds
dec
jnp
xchg
inc
mov
mov
mov
das
mov
in
addr16
lock
sub
push
lds
or
adc
imul
mov
jo
and
mov
idivb
mov
lcall
int
mov
adc
aaa
pop
arpl
xor
mov
enter
mov
test
shrb
mov
mov
inc
add
jmp
and
in
pop
scas
jns
in
dec
xor
xor
in
jne
and
cmpsl
dec
xchg
dec
inc
std
pushf
pusha
pusha
xor
nop
pop
sub
inc
test
sub
xchg
jnp,pt
ret
popf
sub
adc
lret
aaa
call
sub
xor
and
sub
scas
cwtl
fiadds
dec
lcall
push
mov
shl
in
test
stos
adc
dec
dec
dec
loopne
mov
xchg
out
mov
pop
pop
adc
push
jmp
dec
repz
mov
dec
push
in
jl
xchg
daa
pop
mov
jg
pushf
cmp
push
jg
orb
dec
dec
jmp
idiv
inc
inc
cli
scas
mul
push
mov
pusha
repz
sub
mov
imul
mov
dec
jns
call
repnz
cmp
sbb
jg
iret
stos
xchg
shl
movsb
pop
test
lret
xor
test
push
mov
adc
aaa
push
mov
sahf
imul
pushf
clc
mov
sbb
and
jmp
mov
cmp
pop
adc
xor
rcll
movl
ret
enter
les
andb
stc
ss
sbb
nop
push
lret
sub
fnstenv
stc
sub
pusha
test
orl
and
fwait
jl
push
call
rcrb
repz
int3
or
push
mov
or
xchg
dec
jle
test
cli
lcall
popa
mov
fwait
out
mov
or
lret
sub
mov
js
dec
mov
xsha256
cmpsb
push
leave
dec
cwtl
inc
stos
shrb
add
add
aaa
test
fisubl
icebp
sbb
push
aam
jle
pop
jno
divl
sbbb
mov
sbb
pop
xor
pop
mov
mov
je
sbb
rol
cli
push
and
and
xchg
ja
hlt
mov
addr16
cmc
shl
leave
mov
push
lret
push
and
inc
cmpsb
cmpsb
dec
jp
xchg
lcall
or
clc
mov
adc
pop
fsubrl
ret
hlt
pop
dec
idivb
pop
push
pop
jge
pop
out
lahf
ret
fiadds
push
testb
sarb
outsb
mov
in
aam
stc
arpl
lods
lcall
adc
loop
shll
xchg
pop
test
sti
adc
cmpsl
js
mulb
mov
dec
call
sahf
les
insl
dec
mov
sub
mov
out
jecxz
fldcw
cmpsb
es
add
push
add
aas
cli
sbb
xchg
mov
aaa
sarl
mov
mov
pop
adc
popf
mov
dec
push
arpl
ljmp
loop
loope
fwait
cmpsb
cltd
inc
cli
or
jno
pop
les
fwait
jno
ljmp
aaa
dec
outsb
xchg
mov
shl
and
std
bound
aad
pop
aam
js
in
push
mov
sbb
cwtl
mov
xchg
pop
cwtl
dec
mov
test
adc
cltd
dec
stc
sti
pop
cmc
into
icebp
je
fcomp
out
jl
jp
aaa
jno
mov
ja
jae,pn
inc
and
mov
dec
aad
xlat
out
lret
mov
sbb
mov
and
scas
int3
xor
cmp
addr16
mov
lods
cld
push
or
je
add
cli
sbb
or
xchg
dec
mov
sahf
add
adc
jl
scas
dec
cmp
jbe
inc
xor
mov
mov
sarb
pop
daa
movsl
xor
mov
and
movsl
inc
jo
push
in
xchg
ja
fimull
pop
push
int
popf
pop
or
movsb
or
cmp
cmc
out
mov
adc
pop
aad
gs
jl
jae
jmp
outsl
data16
ficoml
adc
inc
sub
ds
cmpsl
cmpsl
loope
or
int3
jmp
ds
and
jl
les
sbb
push
outsl
mov
add
pop
in
and
inc
movsb
jb
sti
push
pop
xchg
in
lcall
sbb
jo
add
inc
adc
mov
in
clc
cmp
jo
jns
xchg
push
pop
cli
jle
jmp
arpl
push
dec
loopne
mov
btsl
pop
arpl
pop
imul
sub
stc
add
push
dec
adc
inc
lock
jmp
cmp
jns
roll
pushf
sbb
popa
ss
xchg
sbb
leave
subl
std
mov
xlat
add
pop
roll
test
pop
cmp
mov
jne
xchg
mov
mov
xchg
jecxz
sahf
sbb
mov
pusha
pop
jecxz
loopne
cwtl
sahf
sub
cmp
scas
xchg
out
jl
nop
push
or
sarl
clc
add
sbb
insb
faddl
xchg
mov
and
push
xor
xor
jge
notl
xchg
das
rsm
popf
pop
xchg
sti
mov
pop
xor
sbb
jge
fidivs
add
dec
push
mov
mov
or
es
pop
jns
xchg
daa
inc
inc
mov
jle
stc
jl
inc
sbb
jne
idivb
xor
add
push
mov
jbe
jae
xor
inc
sbbl
pop
mov
mov
stos
sbb
int3
sbb
lods
pop
push
mov
cld
add
inc
jnp
imul
push
inc
fdivp
push
das
data16
nop
pop
adc
icebp
sti
fiaddl
jne
fistpll
xchg
jo
fcmovb
jg
mov
dec
xchg
enter
shlb
xchg
sti
and
or
pop
lahf
xchg
mov
fdivrl
out
rcll
mov
scas
dec
mov
mov
inc
mov
mov
push
xchg
test
mov
popf
std
imul
inc
mov
daa
push
incb
xchg
cmp
cmp
sub
daa
sbb
push
add
rclb
mov
aas
xor
fidivrs
mov
mov
add
mov
test
outsl
inc
adc
inc
imul
dec
lret
cmpsl
daa
xchg
add
cltd
adc
into
inc
adc
lcall
mov
cld
int3
or
popf
mov
jo
insb
mov
das
sub
mov
repnz
jae
movsl
popa
es
or
and
xor
sbb
or
cld
sub
aaa
pop
je
mov
loop
adc
orl
fwait
dec
loop
aam
je
inc
movsl
sub
dec
jge
and
jbe
sub
add
stos
bnd
xchg
aam
addr16
loope
rorb
sbb
insl
and
jp
pop
pop
out
add
mov
jle
push
shlb
sub
fwait
push
mov
mov
lods
sbb
cld
pop
ja
cmp
pop
in
fwait
mov
cmp
or
fnstenv
inc
outsl
ds
lods
xor
push
hlt
mov
sarb
jbe
ret
dec
mov
insb
and
incb
fstp
lods
pusha
stos
lret
push
mov
movb
mov
push
adc
stos
pop
xchg
sbb
or
jg
cmp
ret
xor
mov
mov
mov
pop
pusha
pop
sub
and
cmp
add
push
mov
aas
loope
enter
pushf
xchg
and
into
cmp
jle
and
xchg
add
aaa
dec
add
or
arpl
xor
or
nop
icebp
sub
jno
xchg
std
xchg
test
sbb
clc
ret
mov
lret
mov
test
arpl
ljmp
cwtl
xlat
mov
mov
leave
pop
aam
inc
cmp
adcb
and
shlb
sub
out
popa
pop
xchg
sahf
int
push
sbb
dec
push
sbb
push
push
test
jl
fdivr
in
out
rolb
push
pushf
ss
ret
es
dec
pop
shll
and
dec
mov
andl
fisttpl
mov
in
dec
add
in
xor
mov
or
push
mov
dec
into
js
sbb
movsb
jp
adc
and
subb
xchg
test
cmp
push
ftst
sbb
push
jns
iret
insl
lock
inc
pop
jbe
jmp
or
cmp
lret
jecxz
add
xchg
add
add
and
scas
jp
mov
insl
cmp
dec
xchg
sbb
stos
or
mov
outsl
mov
dec
sub
sub
sbb
aaa
fcoml
cwtl
fcompl
cmp
add
add
std
arpl
imul
dec
shlb
fsubl
cld
pop
stc
push
jl
cmp
int
pop
insb
jmp
fidivrl
loopnew
pop
stc
push
adc
mov
shrb
and
adcl
push
imul
lea
ja
int3
push
or
shlb
outsb
mov
out
xor
push
inc
pop
out
sub
jecxz
mov
loop
lea
sahf
mov
push
jo
dec
sbb
adc
xorb
dec
xlat
flds
push
in
dec
dec
xchg
sub
dec
les
std
pop
sarl
test
lret
dec
jo
lcall
call
cmp
sti
and
fisubrs
xchg
lock
sbb
arpl
and
dec
xor
and
shr
mov
mov
enter
and
std
cmp
cwtl
pop
mov
arpl
mov
sbb
es
mov
and
mov
dec
out
dec
addr16
icebp
lods
pop
jmp
jnp
sub
push
adc
mov
fs
jle
fdivl
popa
ficompl
mov
sub
xbegin
add
cmp
adc
dec
xor
lahf
mov
jl
jg
out
xor
pop
pop
add
xor
push
push
pop
loope
push
fnstsw
or
dec
push
pop
mov
add
sub
lret
sahf
sub
out
push
aam
inc
std
xor
mov
ret
and
inc
jae
lahf
loope
shl
lcall
js
sub
arpl
xchg
es
fs
add
mov
out
pop
aam
cwtl
cmp
push
fildll
mov
pop
enter
push
icebp
cli
fwait
sti
mov
xchg
ds
lods
test
cwtl
cmp
or
sbbl
iret
fwait
std
cmp
or
sub
mov
sub
cmp
es
jecxz
push
sub
jge
frstor
sub
iret
gs
mov
push
loop
int
sbb
cmpsl
inc
inc
or
mov
cmpsl
mov
iret
movsl
jecxz
inc
in
sarb
cmpsl
xchg
ss
push
jno
and
cmp
lods
jns
mov
repz
mov
aaa
push
lock
push
and
mov
icebp
movsl
push
add
scas
daa
dec
push
inc
cmp
mov
add
push
and
xchg
shl
cmp
aas
insl
scas
jno
sbbl
mov
and
scas
pop
fdivrs
lahf
jnp
and
repz
fucom
cmc
fcoms
enter
mov
push
inc
pop
aas
pop
push
lods
aam
mov
int3
push
imul
sarl
lret
imul
aam
sub
sbb
pop
dec
sbb
scas
cmc
lock
int
pop
gs
or
adc
add
mov
sub
leave
adc
xchg
dec
dec
inc
jnp
inc
mov
add
fnsave
or
int
sbb
pop
add
and
jae
aas
subl
leave
and
sbb
mov
xorb
in
lods
jp
mov
xchg
cmp
mov
insb
loope
xchg
mov
mulb
cmp
push
cld
int
mov
sub
inc
sbb
inc
gs
roll
push
stos
movsb
lcall
ljmp
loope
fstpl
adc
ret
mov
mov
jnp
xor
cmp
xchg
iret
lea
xchg
popa
daa
cmp
stc
iret
orb
adc
clc
je
cmp
test
lahf
sub
xadd
sub
aad
fdivs
lods
jns
ja
push
jb
ds
and
scas
scas
cmp
sub
out
es
push
cwtl
adc
ljmp
lret
cmpsb
stos
je
imul
push
pop
sahf
pop
es
mov
fists
or
and
pushf
xor
in
arpl
xorb
fcoms
adc
jmp
sbb
pusha
xlat
ret
jnp
mov
sbb
add
jle
mov
les
cmp
comiss
or
bound
sub
lret
jp
and
popa
stos
sub
mov
xlat
out
jecxz
mov
loop
sbb
jae
popa
xchg
jae
dec
pushf
roll
and
xchg
adc
inc
dec
pop
xchg
fsub
dec
addl
push
lret
inc
shrb
idivl
les
fs
adc
push
pusha
notl
cmp
imul
xchg
push
scas
inc
sub
repz
inc
adc
or
mov
or
xchg
lret
mov
push
xchg
add
iret
loop
push
jns
mov
jns
and
stos
cmp
pusha
jmp
rep
testl
and
stos
aad
scas
mov
sbb
xchg
lea
mov
stos
jbe
in
ret
stos
scas
mov
clc
in
xor
ficomps
mov
filds
push
arpl
out
or
jmp
jbe
xchg
pop
adc
xor
pop
adc
push
xlat
rcrl
call
cmp
lret
fistpll
ja
mov
mov
cwtl
dec
lcall
jle
sub
jmp
je
and
mov
mov
testb
dec
add
aaa
cmp
inc
outsb
popf
int
rorl
mov
sbb
jo
jecxz
sahf
lock
add
push
into
mov
nop
imul
cmc
mov
jg
fnsave
ret
std
pop
push
or
pop
popa
mov
sbb
add
test
les
lods
mov
add
jmp
lds
mov
movsb
dec
test
mov
or
mov
xchg
rclb
mov
aam
je
popa
pop
into
ss
add
cmpsb
insb
popa
imul
icebp
pop
adc
inc
push
or
sahf
das
push
push
popf
add
jle
lcall
int3
adc
out
mov
ja
jae
jnp
sub
sbb
and
mov
push
scas
cwtl
stos
subl
adc
int3
rcl
push
repnz
inc
lock
add
mov
sub
icebp
xor
pop
stos
lret
popf
lret
test
test
and
test
dec
stos
dec
out
inc
sbb
sbb
enter
loope
push
pop
cmp
or
test
outsb
mov
daa
movsl
mov
push
mov
shlb
jns
andb
adc
add
push
es
add
out
mov
mov
pop
repz
xchg
clc
and
sbb
cmpsl
ror
inc
mov
les
repnz
pop
stos
inc
xchg
mov
stos
lods
jmp
cmpsb
pop
jge
ror
enter
cmp
cmp
or
push
xor
sbb
es
inc
and
cmpsb
cmc
fsub
lock
int3
or
ss
fisubrl
lea
into
and
scas
scas
inc
push
shrb
xor
xchg
hlt
or
push
fdivrl
add
cmp
sub
adc
mov
fwait
jle
mov
das
mov
sbb
inc
mov
adc
cmpsb
daa
and
cmp
fcomps
ret
mulb
adcl
xchg
andb
outsb
pop
jmp
imul
ss
adc
adc
mov
cmovl
sub
testl
or
pushf
or
push
adc
mov
jmp
add
int
stos
ror
mov
lock
roll
les
out
test
lret
mov
cmp
lds
fs
std
in
sahf
cmpsl
cld
xchg
out
icebp
arpl
push
pusha
ljmp
mov
inc
xchg
in
mov
das
in
or
loopne
adc
sahf
test
in
xchg
adc
mov
repz
les
cmc
xor
dec
push
sahf
into
aaa
and
mov
push
cmpsb
mov
adc
mov
pop
negl
push
inc
loop
mov
adc
fnstsw
sub
dec
test
pushf
and
call
dec
jbe
push
popf
adc
adc
push
loope
adc
adc
cmp
xor
negl
or
pop
sub
cmp
cwtl
and
pop
out
xchg
mov
push
xlat
cld
dec
and
insb
lret
add
loope
jmp
mov
sub
mov
fisubs
dec
inc
jae
nop
cmp
stos
cmp
jmp
popf
sbb
shrb
add
lods
inc
hlt
out
test
and
xor
add
lahf
mov
add
cmp
inc
add
mov
popf
lret
jecxz
jae
inc
add
scas
adc
mov
stc
scas
cmpsl
xor
lods
jb
in
call
adc
stos
fcmovb
mov
inc
lods
pop
mov
movsl
sbb
das
stc
aaa
pop
sbb
and
test
fimuls
pop
xor
inc
sbb
xchg
clc
push
mov
inc
mov
dec
sub
rorl
test
xorl
inc
lret
prefetcht2
mov
or
sub
add
stc
pop
jg
adc
iret
xchg
mov
insl
popa
dec
mov
or
jle
outsb
jmp
adc
in
jns
sbb
int
mov
ljmp
pushf
je
or
and
test
xor
pop
movsb
rclb
inc
hlt
xchg
cli
pop
fisttpl
pop
in
cmp
jnp
rorl
stos
sbb
mov
pop
repnz
mov
or
and
pushf
xchg
loopne
sbb
cmpsl
mov
lods
incl
cmp
mov
rol
fsubp
push
shll
sub
dec
inc
mov
xor
ja
mov
and
daa
pop
out
or
aam
mov
add
jne
aaa
jb
jbe
inc
jno
sahf
insb
mov
and
cmpsb
jne
test
fidivrs
jne
inc
push
push
cmp
or
jmp
pushf
rolb
adc
xor
add
ljmp
mov
bound
test
std
andl
inc
mov
imul
test
test
out
ss
mov
jle
lods
add
mov
mov
pop
imul
dec
and
pop
in
clc
jae
in
out
std
add
pop
sub
repz
cmp
jo
mov
shrl
mov
mov
sbb
push
inc
push
add
rclb
xor
lods
les
jg
dec
cwtl
pop
ss
mov
cmp
dec
pop
int
stc
out
movsb
scas
clc
hlt
mov
movsb
repnz
call
mov
mov
dec
out
jle
fnstcw
adc
popa
sbb
in
xor
xor
pop
out
xchg
pop
jo
ficoml
jl
mov
mov
adc
loopne
mov
jo
imul
xchg
and
jecxz
sub
xor
pop
jl
or
lret
ljmp
test
insb
xchg
xlat
shlb
lock
popa
mov
xor
sbb
push
inc
jo
mov
leave
scas
cli
mov
shll
push
insb
dec
jle
aaa
jecxz
fsubl
lahf
sub
mov
lcall
jmp
pop
xchg
push
xchg
xor
xchg
cwtl
lods
push
and
movsb
mov
add
xchg
jae
sahf
in
cwtl
fisubrs
sub
pop
mov
push
adc
pop
lea
add
ljmp
add
mov
pop
cmp
or
jns
adc
xchg
cmp
xor
cmp
sub
mov
rcr
ss
add
pop
xor
ds
daa
and
sub
lcallw
xor
sub
inc
or
aaa
jno
or
test
outsb
lahf
into
adc
mov
pushf
mov
xor
lret
je
add
push
out
cli
add
int3
ret
lahf
sti
pop
sbb
sbb
push
mov
das
xchg
jp
xchg
xchg
data16
lret
xchg
add
push
aad
and
mov
nop
fiadds
mov
sbb
into
inc
arpl
or
fisubl
addr16
arpl
pop
xchg
clc
int3
xor
aas
test
dec
sbb
cmp
loope
xlat
dec
pop
cmp
cmpsb
xchg
mov
jecxz
movsb
mov
inc
cmpsl
cwtl
sbb
sub
js
int3
jg
clc
mov
movsb
add
in
int3
xor
imul
xchg
dec
cmp
daa
add
push
jmp
je
faddl
loop
or
xor
add
mov
lret
and
jmp
mov
sub
mov
xchg
das
rcll
js
dec
xor
pop
ss
pop
dec
xor
mov
fcoms
fs
xchg
lock
xorb
insb
dec
xchg
pop
or
movl
das
mov
xchg
pop
inc
call
aad
add
sub
je
ror
outsb
fldl
lock
int3
or
sar
mov
idivl
mov
rclb
fcompp
sbbl
sarb
int3
je
fsubs
in
test
adc
dec
cmpsl
and
push
test
data16
mov
dec
push
jmp
movb
mov
cmp
cmpsb
aaa
xor
mov
jge
outsl
add
pop
adc
hlt
lahf
addr16
push
loope
stc
push
jecxz
push
js
fcompl
cmc
aam
hlt
mov
xor
xor
das
aas
inc
lcall
dec
imul
jae
aad
xor
shrb
push
mov
inc
lods
loop
mov
nop
fwait
mov
shll
xor
shrl
data16
mull
inc
mov
sbb
addr16
jge
push
ficomps
mov
pop
in
scas
and
sbb
mov
sbb
xchg
sbb
shlb
xchg
idivl
scas
ret
repz
ja
add
cmp
xor
movsb
mov
adc
inc
sub
inc
outsl
mov
icebp
test
mov
jno
inc
pushf
push
fnstcw
les
xor
sti
fcoms
adc
add
mov
sub
and
aad
sbb
es
mov
mov
mull
xor
in
cmp
mov
shll
lret
sub
arpl
xor
mov
call
sbb
xchg
and
dec
loop
or
stos
xor
stos
test
push
call
out
mov
push
cmp
add
jbe
sub
push
cmp
dec
dec
or
cmpsl
mov
pop
sbb
ror
aas
popf
test
sub
je
dec
shrl
mov
jmp
test
cmp
iret
push
mov
imul
divb
js
push
cmp
adc
inc
sbb
cmp
out
mov
cmc
mul
adc
andb
stc
sub
xlat
jmp
jo
enter
sub
mov
shr
lret
cli
dec
cmp
int
repz
push
pop
fwait
rcrl
enter
jnp
dec
pusha
out
jns
and
pop
pop
sbb
hlt
xor
sub
out
cmp
sbb
push
ds
repz
rclb
jmp
movsb
pop
cltd
leave
inc
xchg
imul
lahf
rcrl
lahf
sysenter
sbb
ss
pop
pop
lods
outsb
xchg
xchg
push
jg
adc
test
xor
pop
lock
std
ss
jae
mov
mov
dec
loop
mov
jmp
repz
shll
push
inc
add
cmp
cmp
je
adc
push
mov
push
js
test
cltd
sub
xchg
inc
sarb
pop
jae
loopne
mov
xchg
mov
add
xchg
sbb
adc
mov
pop
mov
adc
mov
adcb
pop
addl
rcrl
gs
sub
test
div
inc
into
shll
lods
fs
dec
push
xor
mov
leave
adc
loope
add
cld
enter
cmp
scas
cld
testl
pop
rolb
cmpsb
or
add
test
mov
adc
cmp
push
stos
out
subl
mul
lods
lahf
ss
sbbl
push
cltd
lcall
mov
pushf
inc
outsl
mov
sbb
inc
jo
in
jb
sti
mov
mov
andb
fildll
out
out
popa
push
xor
std
adc
dec
mov
xchg
push
sub
outsb
leave
add
aad
cwtl
adc
and
in
mov
inc
jns
jb
ja
or
mov
add
push
ret
int3
inc
xchg
inc
adc
push
sbb
out
imul
mov
movsl
data16
push
aaa
xor
xchg
jo
loop
cltd
addr16
rorb
mov
shlb
pop
lret
movsl
jne
cmp
shlb
jne
es
lret
push
ja
or
sbb
adc
adc
ja
les
adcl
movsl
mov
ss
jecxz
jae
xor
int
sub
jno
bound
test
outsl
sub
hlt
cmp
mov
sti
pusha
out
mov
pop
adc
and
loopne
movsl
xlat
je
addr16
into
movsl
aaa
out
lret
je
and
mov
scas
dec
call
jl
outsb
filds
lea
jno
jno
test
shll
mov
stos
arpl
push
pushl
mov
xor
mov
push
inc
inc
xor
mov
repz
scas
sahf
push
gs
inc
negb
jle
cwtl
push
shl
adc
imul
les
sbb
es
and
lods
andb
xchg
fcoml
shr
mov
insb
addr16
sbb
icebp
stos
lds
pop
andl
sbb
sub
aas
std
fs
add
sub
fdivl
jbe
cmpsb
stos
jle
sahf
in
mov
mov
sbb
mov
and
dec
xor
inc
xchg
int
mov
andl
jmp
mov
lods
mov
inc
pop
jmp
ljmp
push
sub
enter
cmpl
andl
lods
movsl
sub
test
stos
xchg
inc
lahf
ficoms
js
mov
xchg
rorl
in
lea
xor
jnp
gs
sub
or
xchg
out
jns
fcom
and
pop
cs
adc
outsb
jmp
add
add
mulb
or
jle
hlt
sub
in
adc
add
in
xor
cmc
mov
incb
pop
js
das
jbe
jns
and
sub
daa
xor
inc
mov
orb
cwtl
aaa
dec
cwtl
push
sbb
iret
mov
add
fldt
add
jnp
in
pop
jnp
add
pushf
jbe
cld
pop
pusha
fidivl
pop
repnz
popa
sub
xchg
mov
cwtl
imul
xchg
adc
xorb
ja
movsl
mov
fmull
mov
popl
leave
add
pop
inc
push
xchg
ret
sbb
lods
pop
sarl
pop
sub
daa
dec
push
repz
out
in
lods
mov
and
insl
insb
push
mov
pop
add
je
and
jne
pop
lahf
rorb
pop
dec
mov
fdivrl
and
mov
aam
sub
cmp
das
in
mov
xor
inc
mov
xor
sub
inc
mov
cld
lock
out
push
rcll
push
iret
cmp
scas
repz
test
fcomip
mov
jo
testb
ficomps
inc
subl
jle
mov
sbb
stc
in
pop
lds
push
out
std
pop
arpl
dec
scas
pop
bound
aas
jnp
mov
mov
jno
dec
inc
xlat
outsb
and
jne
and
rcrl
popa
pusha
sbb
movsl
movsb
mov
loopne
pop
mov
jmp
push
aam
loopne
add
mov
xchg
xchg
arpl
dec
or
push
scas
add
adc
jnp
mov
xchg
imul
pop
pop
dec
int
push
adc
push
add
inc
inc
popa
pop
sbb
fidivs
add
sub
fmuls
pop
fidivrs
xchg
cs
enter
mov
jmp
mov
or
xor
adc
xchg
sahf
dec
iret
xor
mov
mov
push
inc
shlb
fidivrl
mov
in
imul
roll
mov
cmp
xor
inc
push
mov
xor
xor
aad
push
ja
adc
add
xlat
lcall
mov
pusha
sti
test
gs
in
sbb
mov
pop
and
lret
xchg
js
daa
push
fstpl
inc
jle
mov
cmpsb
push
rdtsc
ja
test
pushf
scas
ret
lods
xchg
push
js
add
cmpl
jbe
andl
and
jne
arpl
inc
in
push
loopne
fistpll
ds
sub
or
xchg
jo
jns
inc
mov
ljmp
call
xchg
and
incb
add
push
inc
xlat
fs
stos
mov
incb
lods
dec
loop
insb
inc
jae
cs
scas
jnp
xor
jmp
inc
cmc
or
jns
bound
xor
sbb
xchg
cld
sarb
jmp
fldt
js
lret
clc
mov
jge
mov
outsl
mov
cwtl
adc
outsb
pop
and
insl
popl
dec
jnp
push
mov
mov
mov
ljmp
in
or
xor
jbe
ret
push
push
or
or
push
dec
mov
shl
data16
mov
push
mov
popa
sbb
out
xchg
xor
mov
inc
std
sbb
cmp
push
jle
mov
push
shll
jbe
shlb
sbb
push
sub
jb
orl
repnz
xlat
sub
push
in
mov
nop
call
movsl
mov
in
hlt
or
std
add
push
xchg
mov
in
adcb
jge
inc
mov
pop
mov
mov
pop
cli
mov
lahf
mov
shlb
gs
push
push
jo
dec
imul
pop
nop
jl
fsubrl
and
jne
in
jo
mov
aam
and
and
sbb
add
mov
rcrl
inc
and
mov
pop
cwtl
ss
cmp
pusha
ljmp
jmp
mov
xor
loope
mov
dec
les
sub
or
mov
int
xchg
mov
rorb
push
rcrl
xor
push
loopne
cwtl
fwait
lcall
stos
in
pop
sub
in
popa
ss
nop
add
jl
or
aam
sbb
int3
std
push
mov
mov
fst
dec
pop
aas
and
call
aad
sub
aaa
test
mov
clc
cmp
loopne
cmp
cs
das
push
dec
gs
xchg
xchg
ss
and
stc
lret
xor
int
iret
loop
bound
dec
std
add
mov
cmc
pop
xchg
cmc
mov
sbb
cmp
mov
maskmovq
negl
stc
lea
pop
xlat
mov
pop
sbb
es
push
push
repnz
mov
push
inc
std
pushf
pause
jae
push
xchg
jg
gs
pop
shr
xchg
fldl
loop
std
aam
sbb
ficompl
xor
cld
mov
push
sbb
lea
add
jne,pt
fidivs
pop
pusha
push
in
mov
scas
xor
dec
mov
pop
push
outsl
out
bound
cmp
mov
and
clc
aam
xchg
and
iret
cmp
push
or
das
fdiv
jnp
xchg
mov
jmp
push
cltd
cmpsl
rcr
jl
mov
icebp
scas
leave
or
loopne
and
xor
and
jmp
sub
int3
or
aam
adc
cs
sahf
inc
roll
or
dec
add
add
xor
aad
mov
call
mov
maskmovq
idivl
call
push
pop
stos
dec
dec
jb
decb
push
pop
test
mov
jno
mov
repz
aam
sbb
roll
jbe
mov
push
fs
add
popa
push
scas
loope
xchg
push
outsl
or
push
mov
sub
push
daa
out
or
jno
cli
rclb
cmp
jmp
loop
sub
repnz
dec
lret
pop
xchg
sbb
gs
mov
lret
sbb
xchg
sub
and
imul
cmpsl
imul
adc
das
and
mov
fidivrl
add
inc
cld
mov
rolb
push
std
cmp
mov
in
int
jge
xchg
dec
dec
mov
xor
imul
push
add
adc
dec
cmp
sub
or
mov
add
test
pop
jae
xchg
aaa
int3
in
and
out
jnp
imul
lds
and
in
xor
stc
imul
leave
iret
mov
arpl
cmp
int3
and
xchg
push
mov
into
lea
pop
cwtl
aad
sub
xor
cli
std
xchg
push
jns
push
xchg
cmovb
test
and
and
fidivrl
adc
cmpsb
pop
fnsave
jle
jp
ljmp
push
mov
and
into
inc
mov
fbld
fs
pushf
pop
xor
add
and
xchg
enter
xor
cmpsl
dec
add
cmc
jo
leave
push
fs
mov
push
lods
push
loop
cmp
pop
adc
or
sbb
jge
arpl
sahf
mulps
pop
lahf
mov
inc
maxps
out
mov
lret
xchg
mov
mov
shlb
cltd
ds
in
fildl
xor
inc
mov
xor
pop
adc
push
adc
icebp
inc
and
or
stc
imul
movl
adc
pop
push
cli
dec
sarl
mov
stos
lock
mov
cmp
xchg
loop
shlb
lret
cwtl
mov
outsl
and
dec
mov
sub
int3
mov
add
scas
js
mov
jecxz
mov
mov
xorl
in
lcall
test
push
xor
mov
xor
test
jbe
add
adc
sbb
mov
push
sbb
fsubl
pop
or
or
hlt
incl
sbb
sahf
addl
mov
sub
scas
jg
rorl
fcom
scas
cmpsl
xchg
xor
lds
mov
imul
lock
mov
mov
xchg
pushf
jnp
push
mov
sub
cmp
inc
push
jg
cmp
adc
mul
enter
repz
lahf
imul
and
adc
div
cltd
flds
xor
insl
rcrl
in
add
mov
sub
and
cmpsl
jo
fidivs
sbb
aam
faddl
cmpsb
loop
sbb
lods
xchg
lret
mov
and
and
insb
movl
and
sub
jae
out
xchg
fs
dec
dec
movsl
imul
stos
xor
int
push
add
inc
pop
loope
xchg
out
jle
lds
stos
dec
mov
movsl
insl
mov
xchg
xchg
or
xchg
jl
push
sarl
dec
fstpl
and
pop
shlb
xorb
adc
adc
push
mov
inc
test
aad
sub
jb
outsb
dec
inc
jb
cmpsl
stc
xor
adc
je
push
or
push
out
out
inc
int
int3
int
out
sbb
in
jp
jne
nop
mov
xchg
adc
xor
pushf
sbb
jnp
push
inc
pop
add
jnp
pop
xchg
dec
mov
lcall
jmp
imul
aaa
jl
arpl
xorl
push
ret
testl
insl
mov
xchg
cli
sarb
or
xchg
test
xor
pop
lock
xor
jmp
pop
testb
mov
pop
lcall
cmp
add
imul
xchg
daa
xor
test
cmp
out
xchg
inc
adc
xor
pop
sti
mov
decl
xor
push
cmpsl
das
incl
jmp
mov
incb
push
lods
mov
inc
popf
fcomps
jle
jp
out
cmp
ja
lahf
jmp
xchg
pusha
dec
jle
mov
jg
scas
lret
mov
incl
jmp
inc
adc
in
rcrl
xor
aaa
push
mov
pop
and
sahf
fmulp
pusha
cmp
lea
das
or
int
mov
popa
sbb
inc
pushf
leave
je
sbb
and
mov
adc
rcll
jp
addb
sub
jp
out
inc
iret
clc
popf
mov
dec
pop
xchg
subl
out
or
xor
dec
mov
lcall
push
pop
add
movsb
cmpsl
xchg
dec
ret
les
cmp
stos
push
je
fucomip
shl
xlat
mov
shrl
and
inc
xor
mov
jge
cmp
sub
mov
dec
dec
lods
xor
push
insl
nop
pop
mov
push
and
xor
ja
or
arpl
test
dec
scas
sub
xchg
ret
add
jbe
rolb
jb
push
sub
lea
add
mov
inc
ljmp
clc
cs
daa
push
pop
add
inc
jg
mov
dec
out
jnp
mov
push
mov
cmpsb
int3
inc
add
unpckhps
adc
int
mov
imul
pop
add
cltd
jg
xchg
sahf
mov
push
mov
call
mov
jecxz
addr16
lahf
rol
jae
in
mov
sarl
xor
pop
mov
mov
mov
sub
jecxz
fcmovnb
dec
ret
mov
xchg
ss
xor
out
xchg
and
lret
les
lcall
mov
pop
jp
cmp
xchg
icebp
shrb
popa
sub
cmc
gs
jmp
sbb
inc
outsb
shll
mov
lods
fmulp
jbe
jno
pop
fs
jle
cmpl
arpl
imull
aam
push
mov
jns
mov
dec
aaa
dec
push
xchg
inc
int
add
cmp
mov
punpckhwd
inc
mov
cmp
inc
mov
aaa
pop
scas
pop
pop
fdiv
dec
fnstsw
or
inc
cli
mov
cmpsb
push
loop
xchg
fwait
add
sub
jge
sub
pop
cmp
imul
cmp
popa
mov
pushf
lahf
repz
lods
add
outsl
gs
test
lea
or
ret
mov
dec
or
dec
jno
frstor
aam
nop
mov
add
mov
in
sbb
adc
in
inc
loope
cld
xor
call
push
sub
sbb
mov
leave
test
stos
mov
jmp
push
aaa
sub
or
sub
jno
push
test
mov
inc
mov
cmp
inc
or
aaa
sbb
push
xor
lret
pop
cmp
push
int
mov
pop
jae
pop
adc
imul
into
in
popa
dec
lea
lods
pop
je
xor
dec
test
imul
push
mov
jb
add
lods
dec
into
push
mov
or
loope
and
pusha
bound
in
mov
out
mov
gs
pop
lret
ficoms
xchg
das
sbb
sbb
adc
dec
pop
daa
dec
mov
fdivrs
push
push
jbe
inc
test
mov
lcall
sbb
test
adcl
int3
out
fsubp
repz
imul
push
jg
add
aas
pop
xchg
jo
in
fdivrl
and
inc
mov
push
std
mov
and
cmp
pop
sub
sbb
push
inc
insb
iret
popf
popf
cmp
lods
cmpsl
mov
cmp
fisttpl
mov
xchg
xor
out
stos
mov
mov
ror
sub
aas
into
mov
ss
adc
sarl
jae
arpl
shlb
mov
pop
cmpsl
ret
movsl
jl
outsl
pop
xchg
sti
xchg
loopne
out
jle
sub
sbb
add
dec
icebp
fcoml
rcrl
call
aaa
cmp
xor
dec
sahf
dec
push
jmp
insb
stos
and
fstps
out
lods
dec
into
push
out
sbb
js
and
rcrl
xchg
cli
ret
jae
jbe
add
cltd
xchg
and
xchg
imul
dec
xchg
dec
and
sbb
stc
in
mov
push
out
xlat
pop
mov
call
fs
cmp
cmp
insl
push
data16
inc
cs
or
mov
shrb
adc
xor
outsl
pop
dec
gs
out
cmc
rcrb
ljmp
orb
mov
mov
inc
test
loopne
inc
xchg
addb
scas
pop
pop
and
or
fmul
jns
xor
or
loopne
and
xchg
or
and
sbb
sbb
or
into
ja
arpl
jo
test
add
insb
orb
daa
inc
in
insl
xchg
dec
and
stc
loope
stos
mov
lds
xchg
cli
xor
fisubs
movl
mov
and
out
push
inc
push
out
inc
out
adc
addl
ja
out
jmp
cli
pop
mov
hlt
ja
jbe
std
repz
sbb
lahf
out
cmpsl
sbb
mulb
fcomps
in
rcrb
flds
add
mov
jp
jae
loope
sti
out
in
mov
int3
imul
dec
adc
test
mov
pop
jle
rolb
pop
iret
cwtl
mov
fisttpll
dec
jmp
xchg
jno
pop
dec
enter
in
pop
bound
nop
test
xchg
push
stos
mov
add
mov
sbbb
cmp
jg
dec
lock
lret
scas
inc
xchg
stos
add
inc
push
int3
mov
jbe
ljmpw
test
stos
loopne
xchg
push
dec
ret
sub
je
outsb
lret
push
mov
mov
push
outsb
stc
push
int3
bound
jl
adc
stos
fstpt
andb
add
fcomi
popa
sbb
andl
lret
stos
xor
pop
mov
cmpsl
fisttpll
lock
mov
inc
jmp
mov
cmp
test
lret
sub
mov
mov
fwait
leave
or
mov
fnstsw
in
xor
outsl
fwait
sub
cmp
inc
lea
shl
insl
jmp
mov
push
aad
adc
jecxz
fsub
push
adc
inc
stos
stc
jb
ja,pt
popf
mov
xor
xchg
pop
jno
mov
cmp
adc
xchg
sbb
dec
jae
cmc
fucom
ds
xor
addr16
push
or
pusha
add
jb
movsl
sbb
mov
pop
das
in
clc
fisttpll
cmc
adc
mov
sbbb
mov
cmp
add
popa
inc
mov
jg
inc
adc
mov
and
daa
sub
jle
out
pop
out
lock
int
movsl
jno
mov
mov
aad
adc
orb
or
mov
int3
ret
mov
lea
test
aam
push
lock
sti
inc
int3
loope
pop
imul
repnz
mov
orb
cmpsl
mov
and
fidivrs
pop
test
mov
pop
pop
mov
dec
mov
pop
rorb
xchg
mov
pop
cmp
and
insb
out
incb
fcmovnbe
outsl
cmp
ficoms
insl
mov
cmp
push
mov
sub
loopne
cmp
jno
xchg
dec
fimull
mov
mov
aad
ljmp
cmp
movsl
mov
adc
sbb
ds
xor
mov
xchg
aam
cmp
xchg
adc
cmp
inc
pop
mov
scas
sahf
xor
sarb
or
pop
add
push
jl
sbb
insb
dec
mov
inc
imul
fdivrp
pop
das
lock
test
pushf
inc
push
mov
fsubp
cmp
jns
roll
aad
inc
jle
jnp
loopne
xor
jae
jmp
and
mov
jb
sub
out
push
sub
add
xor
aam
int3
xor
pusha
dec
and
aad
push
outsb
ret
push
lock
pushw
cmc
cmp
inc
and
jmp
xor
pushf
pop
add
fs
pop
jecxz
subl
xchg
cmp
das
xorl
addr16
cmpsl
iret
dec
push
test
sub
test
into
cmp
mov
popf
add
aas
fadds
fistl
lea
xchg
mov
clc
faddl
sub
inc
fld
or
xlat
vpsrlw
jl
nop
lret
cmp
push
cmc
xor
cmpsl
inc
adc
push
pop
mov
pop
add
or
xchg
shl
xor
cmp
scas
fsubrl
pop
mov
cmpsb
adc
pop
or
shrl
push
cmp
pop
dec
lea
in
lahf
leave
pop
jb
pop
inc
xor
outsb
adcb
es
mov
cmpsl
inc
lret
es
stos
test
pop
test
push
test
fistpl
sbb
dec
sbb
out
add
aas
xchg
adc
sbb
fs
in
add
push
and
je
and
pop
xchg
ja
pop
cli
cmc
adc
mov
or
mov
popa
push
outsb
das
in
or
mov
mov
ja
pop
pop
rclb
arpl
sar
mov
dec
xchg
push
mov
dec
mov
xchg
pop
add
loope
iret
scas
lahf
lock
cmpsb
mov
ds
xchg
ja
push
rol
cmp
std
arpl
daa
mov
push
std
rdpmc
mov
stos
rorb
add
scas
outsl
inc
call
xchg
lods
mov
sti
mov
stc
lea
data16
data16
gs
mov
scas
xor
outsb
add
sti
and
mov
xor
aam
and
icebp
adc
iret
push
lds
ds
js
rclb
push
stos
dec
jge
xor
xchg
inc
outsl
ja
jo
mov
cmp
cmpsl
sub
or
adc
ljmp
and
xchg
mov
ljmp
xchg
xchg
cmp
sub
add
in
jae
decl
movsb
mov
or
shl
rorb
in
mov
fiadds
mov
jbe
add
jmp
mov
sbb
outsl
in
jns
and
aas
lret
push
mov
leave
push
mov
ret
lcall
xlat
int
scas
rcrb
inc
shr
mov
cmp
xchg
loopne
inc
push
stos
inc
daa
gs
data16
xor
pop
mov
jecxz
push
nop
mov
or
hlt
pop
pop
pop
lods
imulb
mov
pop
stos
lret
sub
mov
cmp
inc
xchg
dec
pop
sbb
cmp
bound
test
jbe
iret
add
cli
lods
inc
movsb
jb
add
sar
adc
in
repnz
push
out
or
mov
pop
and
aam
test
push
and
dec
and
xchg
or
fildll
cwtl
xchg
and
jo
mov
push
cli
idiv
in
cmp
dec
or
push
decb
mov
cwtl
dec
pop
sbb
mov
dec
cmpsl
inc
mov
test
jae
imul
bound
faddl
pop
icebp
jne
mov
pop
cmp
pop
arpl
jecxz
mov
push
clc
inc
sbb
jg
mov
mov
es
xchg
pop
cmp
jmp
xor
fpatan
sub
dec
xlat
push
mov
fcmovne
fists
stos
dec
pop
test
xchg
idiv
xor
mov
sub
lods
sub
out
dec
cs
cwtl
add
cmpsl
lcall
jbe
pop
imul
movsl
addb
imull
addr16
movsb
dec
jbe
aaa
jle
push
push
pop
gs
sbb
pop
jmp
push
and
push
das
pop
pusha
cmpsb
lods
sbb
iret
mov
lcall
test
mov
xchg
jno
jecxz
out
popf
les
arpl
outsb
data16
pop
cli
mov
stos
cmp
jg
scas
das
xor
xor
inc
cmp
gs
adc
jnp
pop
into
mov
sbb
pop
xor
loope
push
jle
ficomps
inc
mov
jo
mov
cs
add
xchg
stc
or
cltd
fistpll
fstl
dec
and
test
cld
ffree
outsb
daa
call
std
stos
in
jns
push
xchg
fnstenv
sub
std
icebp
or
jle
shr
aam
cmovb
sub
cmovle
lea
cmpsl
inc
mov
pop
cmc
mov
cs
inc
push
xchg
cmp
in
into
adc
sub
adc
jne
pop
sbb
inc
fsubl
out
adc
jle
lock
xchg
test
push
iret
test
dec
and
out
and
shrb
mov
push
sub
test
les
shr
add
dec
ret
fwait
or
into
adcl
pop
ljmp
into
popf
sub
sahf
lock
adc
adc
std
mov
negb
sub
ljmp
xchg
xor
mov
mov
push
xchg
popa
xor
xor
and
test
stos
fistl
shrl
popl
test
ss
mov
sbb
jl
adc
jge
mov
int
jge
cmp
ds
ljmp
xor
in
sbb
sbb
or
js
les
fmull
or
lods
pop
adc
dec
inc
sti
aam
pop
adc
jnp
lds
out
movsb
mov
clc
cmpsl
sahf
lea
popa
shl
sahf
iret
sub
loop
xor
cld
add
mov
push
repz
sub
xchg
addl
sub
aaa
push
and
jmp
jno
shrb
cmc
pop
orb
mov
lret
mov
dec
xchg
or
xchg
pop
fidivrl
popa
ret
mov
je
sarl
pop
cltd
fcoml
or
std
inc
sub
in
mov
js
popa
adc
in
pop
cmp
mov
push
add
lcall
inc
addl
lret
into
inc
mov
adc
xor
lds
das
sti
call
scas
push
jmp
je
and
cmp
mov
in
cmp
mov
sbb
jbe
xchg
fadds
and
sbb
pop
into
jno
xlat
mov
pusha
sub
jbe
jg
test
xchg
mov
pop
scas
push
pushf
and
scas
or
ret
and
xor
sti
loopne
adcl
pop
ret
shr
mov
mov
clc
jbe
lods
sub
mov
call
adc
mov
js
pop
jb
or
add
outsb
xor
adc
add
mov
in
fcom
push
loopne
in
adc
xchg
xchg
xchg
fwait
or
out
sbb
add
fistpll
inc
rcr
add
mov
pop
je
cmpsl
sub
mov
cmp
lock
out
cmp
sub
insb
lods
addr16
mov
subl
push
jae
mov
or
mov
icebp
dec
or
insb
fcmovbe
cmp
arpl
repnz
push
xchg
inc
insl
dec
imul
ja
bound
notb
cmpsb
jo
mov
adc
scas
test
mov
roll
mov
cmp
lret
pop
dec
daa
push
sub
jle
pusha
push
jmp
pushf
insb
dec
roll
push
dec
enter
les
cmp
loope
popa
pop
imul
dec
idivl
jl
xchg
arpl
mov
pop
push
in
ljmp
inc
adc
xchg
and
mov
inc
enter
bnd
dec
enter
jae
je
icebp
cmp
lods
notb
repnz
inc
stos
ret
inc
out
mov
in
add
cmp
jae
rolb
mov
push
jp
xorl
std
cltd
pop
clc
jnp
arpl
rorl
sub
mov
add
out
mov
arpl
dec
out
fsts
jecxz
mov
xor
sub
pop
sbb
dec
test
lods
jmp
clc
mov
jg
aaa
iret
cs
cs
lcall
cli
insl
xchg
aad
mov
xor
lods
xchg
push
push
das
iret
jb
popa
pop
mov
xor
cmp
sbb
scas
fs
scas
pusha
jmp
sbbb
imul
push
lea
mov
mov
stc
mov
mov
inc
or
and
and
shlb
and
and
add
jmp
iret
or
cmp
hlt
arpl
fcmovu
aam
mov
incb
ret
jge
xchg
movsl
mov
xor
pop
jge
push
sub
fisttps
push
add
dec
sub
cmp
daa
lret
xchg
jmp
push
scas
loop
adcb
aas
push
add
sub
and
repz
int
fstpl
adc
sti
enter
das
xor
pop
stos
addl
xchg
rcl
lret
stc
push
movl
pop
imul
and
sub
adc
inc
jns
lods
xor
out
mov
dec
dec
imul
dec
add
loope
or
mov
mov
mov
incl
icebp
mov
in
imul
sarb
adc
mov
mov
daa
dec
push
mov
stc
call
cmp
sbb
pop
add
insb
insl
adc
mov
jb
mov
xchg
outsl
dec
dec
cli
mov
lret
movsb
in
mov
popa
inc
cwtl
and
jne
in
inc
inc
lcall
movl
stos
pop
xchg
mov
shr
inc
in
xor
shrl
andb
rcrb
lahf
mov
insb
mov
shrl
add
push
mov
iret
out
pushf
push
cmp
jge
iret
mov
mov
in
lds
ret
inc
mov
jbe
dec
adc
mov
jne
sbb
xor
bound
sub
mov
cmpsb
bnd
or
xchg
or
sub
int3
pusha
pop
test
sub
inc
or
mov
or
add
inc
jp
movsb
mov
imul
out
dec
pop
xchg
sbbl
movsb
fs
jp
jae
pop
mov
int
xor
adc
lahf
jae
imul
out
cmpb
leave
adc
nop
cs
les
inc
into
stos
rcr
jmp
leave
mov
sti
pop
sbb
lcall
xchg
scas
xlat
fsubl
ds
insb
pop
mov
mov
stc
jp
rol
cli
jge
sub
pop
mov
and
mov
mov
adc
in
push
jnp
push
sub
fxch
jae
jmp
cmp
int3
test
sbb
subb
imul
rcrb
xchg
stos
nop
cmp
pusha
mov
jnp
sbb
ret
xchg
decl
sbb
mov
popa
aas
imulb
call
test
jbe
jle
cli
xchg
addb
sar
sub
jne
ja
cmpsl
sub
xchg
add
rcrl
cmp
lods
sbb
aaa
mov
dec
out
push
jecxz
jo
aaa
lcall
clc
pop
popl
negb
iret
inc
inc
cs
inc
jns
mov
js
dec
mov
fldcw
out
sar
inc
mov
leave
into
aad
xor
repnz
es
lcall
jnp
jge
dec
aas
ja
jp
cmp
rcrb
lds
in
pop
jo
loop
dec
push
mov
pop
adc
jp
outsl
sbb
push
sahf
pop
jno
dec
mov
sbb
sbb
inc
mov
out
aas
popf
ljmp
cmp
cmp
pop
orl
cltd
mov
stos
or
mov
out
pop
mov
jecxz
jl
mov
mov
cmp
mov
xlat
mov
cltd
paddw
out
push
insl
xchg
mov
les
ret
mov
call
dec
ljmp
pop
inc
fs
lret
sbb
ret
push
sbb
or
leave
mov
jns
repz
and
mov
inc
cmpsl
in
push
hlt
mov
fcmovnbe
push
insb
pop
jmp
adc
ds
shlb
inc
add
mov
push
sbb
subb
cmpsb
cmpsl
jno
sbb
mov
jnp
xchg
jecxz
or
push
cli
ja
sahf
dec
dec
dec
push
inc
rcrl
push
mov
or
sub
jecxz
push
nop
mov
fcmove
cmp
pop
out
out
cmp
sub
inc
loop
cmpsb
push
and
push
loopne
pop
push
pop
jg
in
pusha
std
inc
lret
jge
mov
aaa
xor
mov
mov
jmp
add
mov
dec
rcrb
mov
add
fldl
lahf
xorl
cmp
xchg
ficomps
int
fsubrl
add
xor
mov
int3
mov
adc
jb
sub
test
cli
pop
push
loope
jns
sub
cmp
push
xchg
enter
loope
push
or
scas
inc
mov
ret
insl
sbb
arpl
clc
sub
lret
lds
push
fstpt
aam
add
cltd
fwait
cwtl
imul
dec
loopne
sbbb
jbe
test
arpl
mov
jne
pop
aaa
cmp
mov
push
jg
sub
ret
fwait
es
lds
repnz
iret
pusha
adc
adc
jecxz
ret
je
push
repz
movsl
les
mov
push
ffree
repz
sub
inc
xchg
inc
les
and
and
mov
pop
push
add
dec
test
mov
rol
mov
cld
cmp
xchg
push
ljmp
popa
repz
popf
push
cmc
js
fwait
cmp
je
xor
es
cmp
out
or
adc
repz
jmp
fsts
cmp
push
jge
pop
xlat
pop
ret
leave
xchg
push
arpl
xor
stc
dec
test
xor
loope
xlat
cld
mov
sub
mov
adc
lods
mov
adc
jge
sub
les
mov
iret
cmpsl
inc
jne
in
stos
dec
and
adc
xchg
sub
sub
lret
pop
js
out
cmp
sbb
mov
movsb
pop
mov
push
dec
negb
jg
stc
popf
hlt
xor
ret
bound
sub
or
ss
adc
or
movsl
mov
jmp
jb
add
fwait
or
adc
dec
loopne
fsts
mov
lds
bound
sub
insl
jae
pop
movsl
imull
jae
cmp
adc
and
add
shlb
push
push
std
mov
insb
inc
scas
imul
fnsave
shll
sarb
cwtl
push
aaa
mov
outsl
jno
pop
shlb
push
cmp
xlat
jp
and
and
or
sti
and
dec
mov
adcb
imul
cmp
fstl
push
add
test
sbb
stos
xchg
subl
and
sub
mov
ret
and
or
nop
js
xor
xchg
pop
xchg
xchg
pop
jbe,pt
sub
xchg
xchg
sub
and
push
in
xchg
loope
and
mov
push
xor
mov
and
pusha
scas
aas
lds
out
push
int
shll
lret
cmp
test
std
enter
inc
in
insl
add
je
cs
mov
mov
jae
hlt
test
imul
dec
jns
ljmp
arpl
and
je
sahf
pop
mov
mov
push
and
sbb
in
outsb
stos
lcall
or
sbb
les
jbe
cs
push
xchg
into
cmpsb
jae
sub
jnp
es
lock
sub
jns
or
mov
or
and
inc
cs
sub
cmc
insl
xor
subl
jne
cmp
iret
mov
cmpsb
jl
test
xor
lret
push
repnz
add
xchg
add
jecxz
mov
daa
mov
xorb
jmp
mov
movsl
lea
lods
pushl
mov
push
jecxz
sub
sbb
pop
popl
lcall
data16
insb
scas
push
int
jbe
test
mov
test
xchg
pop
cld
adc
pop
sub
test
test
mov
fstpl
in
imul
dec
cmp
sub
fcompl
andl
add
sti
rcll
mov
sub
pushf
xor
cld
pop
push
push
jp
aaa
aaa
adc
cltd
xor
pop
jne
adc
scas
xlat
ss
test
lds
pop
mov
mov
adc
add
push
and
inc
sbb
arpl
sub
std
jle
addl
cmp
mov
pusha
std
mov
or
jge
xchg
pop
cs
jl
out
inc
xchg
or
popf
insl
mov
mov
test
push
lret
xchg
pop
cmp
jmp
test
leave
sbb
fmull
mov
mov
mov
sbb
frstor
adc
jmp
movsb
add
sub
or
sub
pushf
mov
pop
iret
cmp
xchg
enter
xor
mov
sub
fsubl
in
test
cltd
pop
adcl
pop
imul
and
jecxz
mov
stos
pushf
scas
int3
gs
xorl
xlat
mov
inc
or
mov
dec
dec
pop
jl
push
mov
mov
daa
inc
into
daa
int3
pop
cmp
mov
movsl
push
or
add
in
mov
or
call
les
repz
or
push
mov
aas
dec
pop
lcall
imul
dec
push
xchg
push
ss
jle
in
push
in
stc
cmp
fmul
sub
xor
fld
lret
push
pop
mov
movsl
enter
sbb
imul
and
push
ret
cmc
fwait
sbb
pop
negl
inc
sub
jle
test
xor
cmc
push
mov
jnp
jnp
sub
push
lret
push
xchg
sahf
cmc
xchg
leave
loope
mov
lods
mov
mov
jne
in
or
into
xor
pop
pusha
in
xor
stc
rcrl
adc
add
je
ds
movsb
sbb
jge
lods
mov
mov
shll
in
xor
loope
mov
lea
push
xchg
das
rcr
dec
icebp
loopne
dec
call
lea
push
dec
jmp
bound
adc
adc
cmp
dec
mov
and
fistpll
xor
inc
lods
bnd
xchg
and
test
pop
scas
jmp
scas
mov
fmuls
add
mov
cmp
pushw
mov
xor
jge
xor
pushf
sub
nop
pop
std
test
rcll
pushf
push
fildl
cld
dec
outsl
push
mov
add
scas
outsb
and
sub
jb
imul
jmp
pop
movsb
push
cmpsl
dec
or
lea
sbb
aad
movsl
and
cmp
lds
inc
push
rcll
pop
or
cmpsb
cmpsb
cld
lahf
push
dec
push
jnp
test
in
jo
pop
push
mov
mov
cli
dec
repz
and
mov
pop
rcl
loop
dec
xchg
call
test
and
je
fcmove
mov
cmp
sub
mov
inc
icebp
icebp
les
js
stos
mov
ret
push
insl
jge
push
pop
scas
cs
pop
fwait
push
into
mov
xor
add
push
push
jge
or
jbe
lret
js
test
mov
add
mov
ss
pop
xchg
push
and
jecxz
jle
adc
mov
xchg
stc
in
xor
pop
add
in
sarb
dec
dec
or
inc
or
repz
popf
or
lea
test
test
dec
jbe
jnp
in
nop
or
mov
adc
mov
or
adc
mov
bts
sahf
movsb
or
scas
cmpsb
inc
mov
xor
pop
pop
push
enter
push
sti
dec
cld
sbb
xchg
push
mov
cmp
sub
in
fwait
pop
push
push
rcll
jge
jmp
jle
jg
mov
lret
das
mov
and
cltd
scas
mov
cmp
adc
scas
pop
mov
outsb
pop
aam
xchg
std
push
cmp
push
lret
in
pop
push
fld
rcll
repz
out
inc
mov
jb
cmp
test
lods
dec
sub
cmpsb
pop
mov
rorl
in
stc
cmp
dec
dec
or
xor
mov
add
jb
movsb
out
or
gs
cltd
mov
shll
adc
roll
mov
mov
mov
xor
outsl
aas
out
xor
andb
lret
out
jg
nop
mov
jo
cmpb
out
pusha
lods
in
and
enter
js
test
jae
mov
stos
aas
fbld
inc
mov
jb
aam
lods
pop
mov
in
sbb
aaa
mov
jnp
jae
test
mov
scas
orb
push
movsl
sub
jmp
dec
icebp
xchg
sbb
jbe
mov
push
insb
clc
je
mov
jle
mov
and
dec
sahf
mov
cmp
icebp
lods
or
nop
sub
xorb
adcl
push
shll
outsl
insl
clc
xchg
mov
push
test
out
jno
rorb
inc
mov
std
pop
or
lcall
ljmp
scas
fcompl
pop
scas
and
out
jg
push
dec
xchg
int
inc
insl
shll
or
xchg
loop
subl
push
scas
mov
pusha
out
gs
sub
aam
loop
lret
std
shlb
cmp
pushf
cmpsb
push
push
push
vpsraw
iret
mov
pop
jns
ljmp
jge
sub
jg
sub
dec
mov
call
nop
adc
scas
or
test
cmp
xchg
mov
mov
int
sub
xor
and
adc
loopne
iret
fstpt
xchg
pop
jo
into
jae
xlat
xchg
sbb
aad
jl
fs
lock
pop
stos
adc
sbb
fs
push
test
mov
dec
inc
and
add
sbb
imul
fadds
stos
add
filds
aas
cmp
out
fst
fldl
xchg
addr16
jg
sub
and
into
inc
jle
jns
dec
std
call
lock
pop
bnd
and
fldenv
push
inc
xchg
mov
pop
subb
jge
jo
fs
jle
xlat
jo
jbe
hlt
fidivrl
xor
aad
jmp
imul
push
cmp
cmp
pop
inc
std
movsb
insb
in
xchg
out
sub
aaa
enter
outsb
sti
push
xchg
xor
sti
rolb
stos
fs
les
xlat
adc
pop
les
shrb
or
outsl
cmp
pop
aad
and
ret
push
ja
popa
mov
jns
mov
jae
pusha
cmpsb
and
add
or
popa
push
xchg
loopne
add
fistps
testb
and
dec
enter
pop
cmp
jecxz
or
fxch
pop
cs
jnp
lea
or
scas
mov
ret
push
cwtl
movsl
jge
fs
jne
xlat
insb
vmwrite
cmp
push
rcr
sbb
jg
or
test
lds
ss
pop
fists
out
ss
sub
pop
dec
ss
add
push
dec
iret
cld
rclb
push
shr
fcmovnbe
filds
dec
mov
push
cmp
mov
push
scas
mov
dec
push
mov
ljmp
cmp
push
push
pop
addr16
iret
aam
inc
jp
stos
leave
mov
jge
cs
mov
bound
push
pop
es
mov
imul
ja
xor
pusha
inc
les
cmpsl
lret
lret
jns
jb
jle
add
sahf
pop
mull
and
test
popa
add
add
pop
repnz
and
push
leave
aas
xchg
sbb
roll
popa
xor
iret
adc
mov
push
fidivrl
pop
push
mov
subl
cld
dec
mov
test
sub
stc
divb
cwtl
and
mov
decb
rcrl
sub
rcr
ss
inc
xor
out
pop
enter
outsb
ljmp
mov
inc
xorl
mov
out
scas
imul
enter
iret
into
mov
flds
lret
insl
adc
sbb
int
inc
dec
fdiv
mov
mov
push
dec
jbe
and
pop
mov
xchg
jle
ja
push
pop
jns
scas
insl
xchg
scas
cmpsl
jmp
inc
insl
sbb
jmp
in
es
mov
cld
in
inc
cltd
jle
add
out
div
jl
add
idiv
mov
cltd
iret
dec
movsb
fdivl
lds
push
pop
and
out
fsubs
pop
movsb
mov
mov
push
fst
das
mov
cmp
test
pop
into
popf
aaa
xor
cli
fstpl
idiv
sub
push
shlb
add
pop
mov
sbb
sub
out
lods
data16
xchg
adc
dec
mov
pop
xchg
iret
ds
mov
das
mov
pcmpgtw
cltd
fldcw
shrl
mov
or
xor
pushf
mov
push
nop
push
cli
dec
in
incb
mov
jmp
call
and
push
dec
and
sub
xchg
call
shlb
xchg
outsl
dec
lds
ja
push
mov
daa
stc
ret
mov
sbb
push
mov
shrb
cmp
int3
jg
cmp
push
fsubl
lods
lea
cmc
cmp
out
cmp
out
mov
dec
xchg
mov
cltd
mov
cltd
dec
add
ljmp
jmp
add
dec
adc
scas
sbb
je
adc
jge
ss
inc
rolb
es
je
stos
aas
loopne
jne
addr16
push
fs
fadd
push
aas
xchg
scas
jl
scas
dec
sub
dec
out
pop
and
push
cmp
ljmp
sahf
out
push
jne
adcl
adc
push
jmp
mov
jne
fidivrl
out
sarb
push
inc
fdivr
enter
out
fwait
pop
jmp
cmp
pop
pusha
jecxz
and
lcall
jp
mov
mov
testb
pop
fdivrs
and
testb
fcomi
aam
lock
sub
push
lret
outsb
jne
arpl
lea
hlt
out
fimull
dec
xchg
fwait
push
xchg
pop
pop
fisttpll
rcrl
sub
mov
hlt
outsb
imul
sub
push
gs
jno
leave
jnp
fstpt
sub
roll
and
jl
in
ss
lret
inc
mov
sbb
mov
in
jb
pop
sbb
xchg
cli
xchg
or
fiadds
int
fs
xor
cli
mov
or
jecxz
stc
adc
jne
adc
lcall
lcall
clc
out
jb
jecxz
or
test
loope
imul
lret
pop
out
mov
or
stos
mov
pop
mov
xchg
mov
sbb
popa
shrl
pop
mov
push
sub
sarb
mov
inc
mov
lea
sarl
mov
or
gs
test
mov
adc
dec
std
jge
call
sub
xchg
outsb
rolb
repz
pop
dec
sub
xlat
outsb
xor
xchg
in
and
push
scas
imul
xchg
xchg
lods
push
or
shlb
out
push
daa
adc
xor
xor
push
dec
fs
mov
mov
sbb
mov
pop
mov
les
dec
stc
xor
test
clc
adc
pusha
inc
shll
pop
cltd
or
arpl
nop
push
scas
add
stos
jnp
enter
dec
iret
pop
cmp
lds
mov
mov
sbb
aas
scas
int3
sbb
adc
push
int
orb
fucomp
nop
xor
fisubrl
andb
cs
and
cwtl
pop
test
fmuls
sub
or
aam
adc
int
test
xchg
sarl
insl
mov
or
xor
test
aam
icebp
mov
or
add
movsb
push
test
mov
adc
and
fldl
mov
popa
adc
adc
pop
adc
dec
fnsave
mov
out
cmp
dec
ljmp
test
outsl
mov
jne
pop
cmp
sbb
icebp
push
xchg
wbinvd
lods
aam
mov
fstl
adc
and
push
out
les
mov
push
push
nop
cld
enter
sbb
sbb
in
inc
js
jo
test
jo
mov
xor
xchg
aam
push
xchg
xchg
xchg
popf
mov
aam
sbb
insb
jecxz
mov
insb
pop
jecxz
mov
xor
or
push
push
into
loope
xor
pop
jmp
push
push
sub
insb
sub
mov
stc
dec
fsubs
pusha
loop
loope
xchg
mov
ret
rcrb
add
pop
or
add
add
xchg
dec
scas
sub
mov
scas
stos
jp
lods
and
mov
inc
push
push
std
loopne
das
sbb
pop
dec
adc
test
sub
cs
mov
xor
popf
pop
pusha
notl
insb
mov
int3
arpl
cwtl
pusha
shll
push
mov
cld
or
outsl
adc
add
mov
cmp
lods
sbb
mov
and
rcrl
sub
int
shlb
adc
sbb
mov
mov
gs
lods
pusha
add
mov
je
lahf
xchg
push
repnz
sbb
clc
and
pop
sub
bound
or
mov
xchg
or
mov
dec
pop
jmp
js
xor
mov
inc
insb
lods
cmp
inc
es
sub
xor
outsl
push
mov
sub
xchg
nop
cmpsl
pop
or
pop
sub
test
mov
push
icebp
and
or
das
inc
mov
pop
push
stc
and
shlb
cmp
paddw
iret
xorl
push
mov
add
into
ret
out
hlt
scas
rcrb
stos
sbb
movsl
movsl
add
and
xor
adc
insl
in
xor
inc
jb
arpl
xor
add
push
jmp
sub
push
xchg
sbb
or
scas
and
iret
pop
mov
sbb
lods
mov
push
xchg
push
fsubl
mov
aad
std
sbb
lock
push
pusha
dec
fstp
arpl
mov
add
mov
cmp
cmp
insl
mov
adc
ja
and
aam
clc
dec
cmp
aad
lods
jg
jecxz
and
inc
dec
push
xchg
stos
lret
popf
xchg
xor
cmp
out
xor
pop
notb
fldt
add
stos
pop
inc
adc
dec
clc
fcompl
add
add
je
xor
add
fstpt
add
mov
cld
and
mov
bound
les
pushf
push
xchg
pop
dec
jb
out
cmpsb
push
pop
dec
in
push
adc
aas
mov
popa
fisubrl
push
insb
rolb
int3
js
mov
cmp
dec
outsb
xlat
cwtl
inc
popa
pop
out
pop
jge
leave
mov
adc
out
xor
ss
int3
ret
cli
mov
and
and
cs
cwtl
int3
mov
popf
out
addl
repz
mov
das
adc
divb
data16
mov
sub
mov
or
push
daa
sbb
xchg
mov
mov
add
xchg
pop
aaa
mov
mov
ja
subb
jmp
iret
sub
loope
or
fidivs
outsl
test
and
mov
fisubrs
sbb
lea
mov
mov
psubq
and
fnstenv
adc
push
mov
mov
loopne
paddd
stos
adc
testl
aaa
scas
outsl
psraw
push
les
lds
mov
xchg
mov
cmpl
scas
jmp
or
push
mov
xchg
push
mov
jmp
push
cwtl
clc
sbb
or
fsub
pop
sarb
aad
in
roll
arpl
cltd
ret
jmp
sub
cwtl
lea
loopne
mov
std
bound
sbb
test
sub
enter
sbb
mov
jle
dec
push
aas
rep
sub
mov
popf
in
pushf
xchg
int
xor
enter
daa
mov
std
aas
fucom
cli
cmpsl
ja
nop
repnz
xchg
mov
ljmp
sub
xchg
inc
addl
xchg
xor
jno
or
mov
mov
test
fwait
mov
frstor
ja
xchg
push
push
insb
adc
push
ret
mov
in
cmpl
rorb
dec
jle,pt
clc
cmc
lahf
popf
outsl
cwtl
in
mov
sbb
ja
add
add
aad
mov
in
inc
insb
les
sti
shl
loop
add
mov
xchg
lcall
or
lcall
dec
cmp
mov
fsubrs
mov
outsl
inc
mov
call
or
decl
pop
add
pop
call
daa
push
dec
jecxz
jae
std
aas
push
xchg
insb
jns
movsl
rcrb
aam
pop
test
aaa
or
jo
dec
sbb
mov
inc
xor
pop
jbe
loopne
xor
mov
popf
dec
ja
add
repz
sbb
js
sub
fisttpl
movswl
add
mov
lock
and
shl
aaa
mov
ret
sbbl
xor
and
sbb
sbb
dec
push
rcrl
loopne
sti
jno
inc
sub
imull
repnz
rolb
add
xchg
mov
jl
div
inc
sbb
push
pop
cmp
aad
push
movlps
int
pop
add
imul
arpl
sbb
fs
mov
inc
iret
cmp
repz
aaa
jb
push
and
test
mov
aaa
stc
aam
mov
scas
sarl
sti
sbb
mov
pop
dec
fcoms
jg
in
es
jle
jbe
arpl
aaa
testl
mov
jl
lret
fsubrl
enter
adc
test
leave
pop
dec
push
out
cmp
sbb
ds
jl
shlb
pop
loopne
sub
xchg
sbb
mov
in
and
xchg
ss
xchg
jge
and
push
xlat
sti
fldenv
xlat
stos
pop
iret
xorb
andl
ret
insl
mov
ja
lret
icebp
lods
loope
scas
jle
int
and
cwtl
in
mov
xchg
data16
or
pop
dec
sbb
pop
je
pushf
push
xor
or
mov
sub
mov
push
into
test
xor
inc
adc
or
pop
ud1
pop
cmp
insb
push
test
lea
aam
xor
cmpsl
mov
ss
adc
and
jae
sbbl
inc
mov
bound
add
inc
inc
mov
popf
mov
scas
push
dec
in
filds
push
push
sbb
adc
xor
or
dec
int3
pop
fsubrs
les
cmp
push
jo
mov
mov
jg
push
cmpsl
test
fldcw
sub
rcr
sahf
rorl
mov
xchg
push
aaa
xchg
testb
mov
int3
cld
icebp
in
sbb
cmpsb
xchg
shll
mov
mov
pop
mov
mov
stos
rorb
sub
jl
sub
out
dec
and
cmpsb
push
dec
xor
icebp
jo
das
movsb
fistpl
mov
push
dec
int
test
cmp
push
insb
sub
adc
jecxz
movsl
loope
mov
xchg
outsl
mov
and
in
cmp
clc
ret
mov
dec
jns
add
fsubrs
insb
jno
sbb
and
pop
push
pop
sarl
cs
pop
das
hlt
jmp
shrl
inc
pusha
or
mov
add
enter
pop
dec
add
jp
out
dec
ss
fildl
nop
ret
imul
insl
xor
dec
sub
ljmp
call
pop
stc
in
inc
lds
push
scas
or
sti
add
jg
adc
test
icebp
push
mov
into
in
adc
hlt
jge
push
jne
add
add
das
fsubrl
int3
mov
mov
fsubrp
in
mov
andl
rcr
add
dec
cmc
gs
adc
cs
mov
jno
scas
cmp
pushf
pop
cmovo
sub
jbe
stc
mov
pop
fisttpll
aam
mov
rcrl
push
cwtl
fs
cwtl
loopne
lds
cmp
test
loope
fsubrl
or
int3
arpl
lahf
in
jp
xchg
inc
jb
mov
xor
jno
jnp
push
cmp
test
inc
movsl
jg
rcrb
mov
mov
mov
or
jmp
mov
jle
mov
jne
push
stos
mov
jbe
pop
test
rorb
push
inc
out
jg
mov
mov
mov
and
iret
adc
dec
push
mov
adc
ss
shlb
popa
mov
sub
push
sub
jl
in
daa
fstps
add
mov
lahf
stc
cmpb
and
pusha
adc
shr
pop
adc
mov
cmp
xor
adc
lcall
xor
and
mov
mov
bound
sub
js
loopne
movsl
jp
mov
sar
dec
sbb
int3
loop
sbbb
push
push
cmp
aas
mov
xor
pop
add
in
fistl
rcrb
nop
jnp
int3
push
and
loope
jnp
xorl
pop
aad
scas
mov
fistps
data16
xor
pop
ficomps
outsb
or
rorl
test
daa
adc
cld
addr16
sti
fsts
fcom
jle
shlb
mov
adc
adc
fstps
lahf
adc
or
dec
and
pop
and
mov
mov
mov
push
mov
imul
cmpb
lods
shrb
popa
add
rolb
pop
rorb
cwtl
mov
dec
add
movsb
sbb
adc
pop
mov
jne
lcall
jo
lds
push
daa
add
jl
orl
jns
stc
test
je
mov
stos
xchg
push
fdivs
lahf
mov
incl
and
fcoms
lods
fistps
int
lret
mov
pushf
out
pusha
addr16
dec
mov
fwait
sbb
data16
in
and
inc
repz
mov
pusha
inc
cmp
mov
repnz
add
xor
dec
mov
iret
adc
js
and
jo
bound
call
gs
aam
adc
adc
jbe
dec
test
push
roll
sbb
je
shll
and
adc
add
shlb
mov
or
push
jmp
fsubp
and
pop
push
mov
mov
xchg
iret
mov
cmc
fcomps
mov
push
jmp
jbe
add
jp
lret
outsl
pop
addr16
mov
mov
cld
aas
cmpsb
sub
cli
push
dec
adc
aaa
imul
ret
repnz
shrb
add
fists
cwtd
rclb
and
in
in
xchg
mov
pushf
add
inc
or
mov
push
sarl
in
mov
mov
hlt
or
testl
pop
push
cli
call
add
jnp
sahf
loopne
adc
push
repnz
push
mov
movsl
stc
jmp
and
ret
jecxz
adc
dec
test
out
mov
mov
jb
cwtl
add
mov
mov
rolb
hlt
cmpsb
push
dec
jge
inc
cwtl
jecxz
mov
dec
mov
test
jno
iret
sub
repz
xlat
mov
xchg
or
pop
add
stc
es
pop
lret
insb
push
hlt
imul
div
iret
es
or
adc
or
and
fmull
cmpsb
cs
fstpt
sbb
fsubs
data16
into
test
xchg
cmp
mov
cs
xor
lret
fsts
mov
fs
imul
insb
push
xchg
fbld
adcl
aas
je
sub
ljmp
jne
or
sub
hlt
in
imul
pop
aaa
push
mov
int
rclb
ds
dec
jae
xchg
pop
pop
leave
enter
mov
jl
push
iret
sub
pop
sahf
sbb
int
jne
adc
jo
rcll
outsb
jnp
sub
ds
mov
jns
cmp
cmp
pop
cmp
sbb
andl
cli
mov
cmp
fisubrs
call
fimuls
out
sahf
nop
sbb
ficoms
mov
shrl
add
xchg
aas
aas
mov
dec
sahf
int3
int3
les
fcomp
repnz
pop
mov
pop
pop
jno
icebp
pop
in
and
sti
jae
sub
sbbb
insl
fbstp
push
imul
cld
xor
imul
decl
adc
dec
xchg
jae
pusha
test
les
std
in
fcomps
cmp
inc
out
nop
shlb
mov
fsubrs
clc
sub
sub
in
mov
cmp
mov
mov
ja
cmp
sub
adc
mov
mov
ss
pslld
mov
xchg
push
pushf
insb
sbb
fstpt
pop
cmpsb
mov
xor
and
pop
xorl
mov
sbb
sbb
mov
and
dec
inc
pop
js
push
xchg
mov
xor
data16
sbb
inc
rclb
sbb
dec
push
push
or
jbe
scas
xor
rcrl
push
xchg
add
jbe
add
test
lcall
fnstcw
pop
arpl
pop
add
inc
or
lock
jns
sub
insl
aad
aaa
ret
sbb
insb
sub
jnp
gs
push
sahf
sub
repz
test
mov
in
inc
sarb
addr16
mov
popf
sarb
jno
ja
pop
xchg
mov
mov
jb
dec
scas
ss
enter
ja
mov
or
testl
cli
mov
and
lds
mov
adc
stos
mov
pop
add
sbb
xchg
mov
mov
add
or
data16
sub
mov
mov
leave
inc
push
inc
sbb
dec
adc
xor
jge
inc
or
ret
mov
dec
xor
sarb
mov
cmp
inc
dec
loopne
loop
xchg
outsb
xchg
out
dec
sub
fs
or
or
daa
xchg
dec
mov
xor
test
or
sbb
mov
call
pushl
sbb
flds
data16
psubusw
mov
mov
dec
data16
cmp
fidivl
mov
cmp
adc
ja
lock
not
xor
fcoms
iret
add
sbb
rorl
mov
cmp
inc
adc
cmp
sti
pop
loop
jecxz
out
in
inc
mov
or
add
orb
xchg
fstl
ret
outsb
shr
or
push
shrl
dec
mov
xor
fucom
dec
ret
add
mov
cltd
into
xchg
add
inc
mov
dec
sbb
and
out
jns
ss
mov
dec
or
fstl
cs
xlat
cmp
mov
ret
dec
pop
pop
inc
cmp
jne
out
inc
std
fs
fcmovbe
inc
sbb
push
or
daa
xor
icebp
adc
out
pop
add
jb
mov
inc
xor
dec
dec
scas
push
call
cmp
int3
cwtl
frstor
insl
fwait
ret
ror
dec
out
jbe
rcrb
mov
mov
les
dec
aaa
jmp
insl
mov
jge
leave
adc
lahf
add
mov
test
sbb
push
sub
mov
addb
jae
idivb
xchg
inc
lret
mov
shr
mov
and
pop
sub
xlat
lea
push
dec
out
xchg
xlat
shlb
sbb
mov
xchg
fadds
insb
jp
mov
mov
jg
pop
jbe
dec
and
in
movsl
cmp
xchg
sbbb
jmp
jb
mov
lcall
inc
scas
repnz
mov
icebp
add
push
push
pop
jnp
pop
in
pop
inc
mov
or
mov
ret
loopne
popf
sbb
lret
int3
shlb
dec
cltd
mov
and
int
or
xchg
sbb
divb
push
xchg
add
ljmp
xchg
test
push
je
inc
pop
outsb
movsb
jne
sub
cmp
cmc
imul
icebp
push
dec
xor
mov
sysenter
outsl
push
dec
mov
mov
jl
jbe
adc
hlt
dec
lock
push
fnstcw
es
xor
jmp
push
stos
sub
mov
adc
mov
xorb
sub
imul
inc
loop
das
push
or
incl
and
cmc
lds
sbbl
pop
inc
dec
fistl
andl
add
fcomi
sahf
pop
jl
test
sbb
adc
mov
leave
and
test
xchg
js
cltd
jae
inc
mov
cmp
push
jne
fildll
rcrl
pop
lds
sub
fs
lods
mov
jb
mov
cmp
bound
std
test
loopne
sahf
sahf
bound
imul
call
rorl
push
pop
lret
enter
xor
rcl
dec
push
es
fs
clc
pop
jmp
push
adc
aad
call
cmp
push
xcrypt-cbc
cmpsl
xchg
or
mov
mov
out
sub
inc
sahf
jo
mov
and
xchg
arpl
test
mov
loop
out
add
jp
lea
cwtl
sbb
paddd
mov
or
dec
inc
jae
pop
loop
sarb
scas
jle
mov
dec
and
iret
inc
pusha
lcall
cmp
add
sbb
rcrb
scas
aaa
inc
lcall
xor
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
inc
or
push
add
add
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
xchg
and
add
scas
and
add
add
add
add
or
sbb
or
xor
add
or
add
add
rolb
add
add
cld
inc
or
rolb
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
lcall
sub
push
es
aam
add
xor
lods
or
mov
jo
adc
jmp
push
mov
andl
push
inc
or
dec
cwtl
xor
inc
jg
pop
pop
or
xchg
shl
push
jnp
loopne
cld
cli
hlt
out
mov
add
mov
loopne
jle
aaa
push
call
xor
pusha
add
pop
in
dec
jne
jge
es
mov
aad
nop
gs
push
sti
rep
ret
dec
or
add
enter
jge
movzbl
shl
or
sti
inc
dec
fs
jne
out
xorl
xor
mov
xchg
int3
pop
hlt
data16
repnz
add
and
shl
add
push
cmp
cmp
jae
sub
adcb
xor
incl
cld
js
mov
leave
lock
out
or
scas
sbb
cmp
cmpl
icebp
mov
icebp
xor
add
push
hlt
and
pop
sub
mov
fimuls
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
cmp
jge
je
and
lods
xchg
add
sub
push
jecxz
dec
fcom
mov
push
inc
xor
mov
inc
mov
or
jae
xor
adc
hlt
add
not
sub
sbb
jae
adc
js
sbb
or
pop
xor
cs
sbb
push
push
call
jae
popa
addr16
inc
outsl
js
test
lea
test
je
cmp
jb
ret
pop
and
mov
add
and
loopne
arpl
pop
jne
and
aaa
imul
fistps
inc
arpl
dec
mov
nop
cs
dec
mov
scas
mov
inc
mov
or
push
add
les
adc
cmp
and
adc
inc
xor
push
inc
and
sbb
sbb
arpl
or
adc
gs
and
cwtl
inc
xor
sbb
sub
sbb
shlb
lds
js
sub
adc
or
inc
cmp
xor
movsb
hlt
pusha
sbb
mov
stos
cmovno
into
mov
mov
add
pushf
loope
clc
rorb
push
push
push
call
sbb
stc
adc
mov
sbbl
add
sti
jns
ficomps
adc
add
lea
lods
stos
add
nop
cmpl
je
jmp
jae
mov
push
mov
jnp
push
cli
rep
fistps
jb
xor
negb
mov
mov
dec
sub
lea
xchg
fs
xchg
xchg
xchg
les
or
std
fs
xor
xlat
nop
cmp
test
je
add
xor
xchg
maskmovq
testl
mov
fisubs
xchg
dec
inc
add
test
sarl
mov
mov
push
call
roll
test
or
pop
pop
pop
sub
ret
pop
inc
cld
dec
xor
ret
sub
jne
add
add
push
call
and
cmp
and
popa
add
mov
ret
push
and
xchg
rolb
add
pop
in
popa
lods
push
jne
lcall
cmc
call
shll
adc
sysret
add
xlat
add
cltd
or
xor
call
mov
jl
cmp
or
sbb
jmp
pop
lret
js
add
mov
adc
dec
mov
pop
push
int3
jle
push
in
add
jne
cmp
jge
loopne
inc
sub
enter
cmp
sbb
or
out
adc
xchg
dec
test
scas
add
negl
pop
pop
sbb
push
inc
add
add
add
jbe
pop
push
cmpl
dec
sbb
inc
mov
sub
cmc
mov
mov
ficomps
jno
je
fdivs
les
sub
rcl
rorl
pop
enter
fimull
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
inc
mov
rcrl
push
lock
push
push
xchg
pop
cmpsb
in
dec
es
or
mov
pusha
outsb
inc
adc
enter
mov
pop
lret
or
jl
add
mov
xchg
xor
dec
adc
hlt
push
dec
mov
test
mov
testb
in
jle
sbb
inc
je
fnstenv
sub
fildl
mov
lret
call
jge
mov
push
stc
jmp
fidivrl
inc
lock
loopne
sub
cs
cmp
xchg
test
test
xchg
loope
scas
or
sub
xor
lea
jg
add
push
xchg
orb
mov
push
je
and
or
mov
push
dec
les
test
and
push
push
push
push
daa
call
sbb
mov
test
push
insl
jae
bound
fcompl
sbb
testb
xchg
mov
shrb
rcl
sbb
jmp
in
dec
and
shlb
mov
xor
cwtl
push
push
adc
rcrb
testb
cmp
iret
cmc
addb
sarl
jg
shr
mov
or
inc
stos
jp
loop
push
inc
sbb
inc
lods
pop
lret
pop
orl
leave
addr16
xor
mov
push
jmp
sar
sub
icebp
mov
loopne
dec
push
sbb
dec
or
cld
jmp
insl
lods
xor
cld
xchg
inc
movsl
adc
scas
add
inc
cmp
mov
adc
lea
add
call
xor
loope
push
lea
imul
and
add
rorl
push
jecxz
in
js
gs
movsl
or
sbb
cmpsl
sti
cmp
gs
arpl
addb
je,pt
push
outsl
arpl
jle
inc
insb
outsl
add
outsb
fs
add
xlat
mov
movl
jne
cmpsb
sbb
inc
orps
je
cmp
arpl
xor
or
and
dec
inc
mov
xor
insb
or
test
xor
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
adc
add
add
lret
add
inc
or
int3
inc
or
add
inc
add
inc
or
les
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
