jge
push
jbe
mov
cmp
and
in
iret
addr16
pop
addr16
push
sub
pop
fidivs
out
lahf
sbb
inc
jnp
lds
aaa
and
or
inc
mov
outsb
cmp
jno
ret
push
lods
das
out
mov
into
or
sbbl
mov
and
xchg
mov
out
xchg
cmp
icebp
mov
fnstcw
rol
imul
hlt
cmp
pop
in
mov
out
loop
test
and
test
mov
mov
mov
or
aas
inc
stos
enter
lcall
shl
cmpsb
mov
popf
jns
pop
dec
jmp
into
xor
push
push
fsubs
mov
pushf
pusha
in
xor
add
jmp
inc
inc
decl
cmp
scas
push
mov
ret
or
jg
aad
mov
jecxz
cmp
ret
sbb
es
pop
sbb
aam
sbb
sbb
add
sub
aas
adc
jl
in
mov
addr16
jp
cmpsl
sbb
inc
dec
popf
lds
mov
inc
cmp
in
lea
bound
mov
ljmp
loop
jle
fidivs
or
or
std
xor
call
sub
lods
sbb
ror
sbb
out
imul
sbb
movsb
scas
inc
cltd
lods
pop
pop
and
push
adc
xor
ss
lods
sahf
and
sbb
xchg
dec
gs
cmpsl
into
xchg
push
ds
rcrl
xchg
adc
pop
fstps
test
mov
adc
in
in
xor
popa
jecxz
stc
es
mov
jp
mov
scas
sbb
mov
jae
and
or
jge
int3
scas
cmp
push
fcompl
lds
jg
pusha
into
test
xchg
stc
sbb
fs
pushf
das
es
add
cltd
es
inc
mov
ljmp
cmp
divb
push
sub
imul
iret
idiv
adc
je
mov
loopne
lss
fst
test
out
insb
lds
call
sbb
jb
mov
push
pop
lods
jbe
out
xor
ror
stos
shlb
repnz
add
push
sbb
imul
xchg
out
lods
sbb
out
xorb
adc
xchg
ror
ret
cld
push
xor
scas
fwait
dec
ss
scas
outsb
stos
sub
ljmp
test
lea
mov
loopne
push
or
mov
mov
stc
cld
sbb
testl
outsl
pop
mov
cmp
fwait
inc
mov
add
fmul
mov
and
mov
ljmp
adc
mulb
add
mov
out
pop
xlat
sub
dec
jbe
leave
inc
or
jecxz
jne
mov
lret
jecxz
jae
ss
lods
add
xchg
pop
mov
xor
xchg
outsl
sub
mov
lods
leave
mov
aaa
or
push
adc
shl
jg
test
dec
push
rcll
loope
adc
cmp
jg
push
data16
add
add
xlat
in
fs
mov
mov
leave
push
pop
sbb
ret
ds
xor
and
fdivrl
mov
push
rolb
ret
sbb
push
cltd
and
xchg
inc
inc
mov
repz
movl
or
mov
aam
xlat
fisubs
in
movsl
sbb
or
icebp
cmp
repnz
pop
jns
mov
sti
clc
or
hlt
inc
inc
movsb
sbb
fnclex
je
pop
orl
pushf
adc
cwtl
test
dec
mov
sub
dec
es
lret
xchg
dec
divl
cmpsb
jg
enter
sbb
fsubrl
iret
pushf
cmpsb
leave
xor
cmpsb
lret
in
cmp
ret
stos
das
mov
in
mov
scas
popa
cltd
push
int
mov
mov
xchg
sub
or
push
push
int
stc
loope
sbb
sbb
dec
mov
jo
push
insl
mov
mov
add
notl
rep
movb
cmp
jae
pop
dec
xor
inc
subb
push
sahf
xor
xorl
dec
and
icebp
push
shrb
cmpsb
loop
or
inc
insl
xor
jg
pop
and
mov
mov
imul
daa
aam
push
aam
xchg
sub
lahf
xor
jb
gs
and
dec
fbld
fwait
mov
sub
lret
mov
imul
in
rolb
adc
in
fsubl
fiadds
inc
mov
adcl
cmp
aas
mov
or
mov
int
pop
pop
lahf
sub
dec
push
mov
arpl
sbb
repz
mov
jb
adcb
andl
sub
xor
loopne
xchg
outsl
pop
dec
int3
fstpl
xchg
jb
out
and
fcos
mov
shrl
push
xchg
jnp
xchg
divl
mov
imul
xor
aad
push
ja
push
jmp
cmp
in
xchg
xchg
cwtl
push
xchg
xor
in
adc
loopne
dec
dec
jns
push
and
cmp
push
jecxz
addr16
mov
jne
in
orb
dec
sub
and
add
inc
jnp
shlb
mov
es
test
mov
and
pushl
cmpsl
mov
lock
popa
loop
daa
lret
add
cmp
shlb
in
mov
iret
mov
dec
popf
fildl
sbb
mov
repnz
jns
test
and
shrb
jl
es
cmc
and
inc
lret
aaa
imul
cli
sbb
inc
cmpsb
cltd
stos
lods
xor
sarl
data16
xor
pop
pop
shlb
cmp
scas
mov
jne
push
outsb
je
jmp
cmpb
jb
and
int3
cli
dec
sbb
movsb
adcl
cmp
xor
inc
movsl
jecxz
shlb
testl
pushf
out
int
adc
xor
jbe
and
hlt
out
arpl
leave
mov
xor
clc
les
push
cmc
pop
into
out
loope
adc
in
mov
xchg
cmpsb
add
xor
daa
cmp
shlb
icebp
jae
cmp
sbb
dec
xor
pop
xchg
aas
int
movsb
mov
and
dec
dec
jp
mov
js
insb
ss
pop
scas
notb
sub
sahf
push
fimull
call
test
nop
test
or
pop
insb
out
and
jo
mov
inc
pushw
cmpsb
mov
rorb
fstpt
inc
adc
dec
lea
call
popf
add
movsb
pop
mov
cmp
movsl
ds
lods
push
inc
loop
push
add
push
movsl
sti
insb
mov
push
add
lret
mov
mov
xor
lret
es
push
pop
jb
mov
adc
lea
xchg
inc
mov
addr16
js
cmp
out
mov
mov
xchg
fisubs
lea
pop
pop
push
mov
lds
js
fcomps
mov
es
fwait
sub
movsl
or
or
mov
adc
fyl2x
in
mov
push
fnstsw
repz
xchg
out
fdivl
insl
or
icebp
inc
ds
xlat
fistpl
aas
lods
lret
test
jmp
jmp
aad
insb
dec
dec
or
and
fidivs
mov
cmp
inc
sbb
or
dec
push
ja
jnp
outsb
outsb
or
gs
jne
xchg
clc
cmp
ficomps
jecxz
rcll
in
repz
inc
rorb
mov
push
lods
sbb
xchg
mov
roll
jge
jnp
mov
sbb
inc
les
aam
xchg
dec
or
jg
mov
jle
sbb
and
data16
or
out
pop
pop
push
inc
cmp
or
push
test
cmpl
adc
inc
dec
add
sub
jne
mov
sub
std
add
inc
lahf
fs
cmp
scas
mov
cmp
icebp
jmp
cmpl
sbb
test
lds
out
icebp
cltd
fildll
jo
ret
nop
test
shll
in
add
mov
stos
sub
out
inc
mov
sbb
aam
dec
fisttps
stos
loope,pn
movsl
test
or
mov
push
lret
cs
jecxz
outsl
cmp
repnz
testl
lret
rcll
fadd
or
scas
mov
pop
inc
data16
rcrl
mov
pusha
pop
mov
adc
mov
sub
mov
cld
insl
aas
frstor
push
loopne
pop
daa
mov
lods
mov
or
xchg
jae
jg
sub
ds
fbld
push
outsb
fwait
sub
es
or
xchg
push
cld
pop
out
cmp
dec
inc
fs
lret
mov
movsb
cmpsb
jae
aad
imul
dec
pop
dec
dec
aad
or
subb
stc
or
iret
cmpsb
sbb
mov
add
pop
sbb
je
pop
int
mov
add
fldcw
jg
and
test
xchg
out
pop
push
lock
or
push
gs
faddl
mov
roll
dec
xchg
movsl
xchg
pop
mov
pusha
out
mov
dec
jno,pt
mov
xchg
dec
add
sbb
fwait
out
cmp
push
xor
fcmovnbe
stos
pop
into
test
pusha
mov
pop
xchg
push
jle
fmuls
jne
xchg
mov
cmpsb
lea
mov
imul
sbb
ret
xor
sbb
mov
or
dec
mov
fnsave
sub
js
dec
xor
or
add
negb
dec
and
loop
adc
mov
outsb
inc
shrl
mov
sub
sbb
dec
jnp
xchg
jge
cmc
gs
cmp
jmp
sub
lret
and
pop
adc
mov
inc
xor
jns
mov
por
in
sub
push
mov
and
push
cltd
sahf
in
adc
cltd
gs
push
stos
das
dec
not
add
lret
jmp
mov
inc
lahf
mov
cmc
clc
xchg
out
sbb
inc
pop
adc
fdivr
mov
movsb
sbb
iret
and
push
rclb
loop
hlt
or
fsubs
mov
cmp
cmp
out
xchg
dec
push
adc
cli
pop
push
jp
loop
dec
pop
out
pusha
je
stc
sar
popa
mov
pop
testb
adc
jge
jecxz
mov
dec
dec
add
iret
mov
jecxz
mov
add
xchg
outsl
shrb
mov
jnp
clc
jo
cmp
sbb
daa
adc
mov
addr16
push
fcom
hlt
dec
xchg
out
das
outsl
aad
jg
inc
loopne
xchg
ret
add
rcl
mov
ja
rol
add
or
vshufps
loope
dec
iret
aaa
pop
rorb
sub
mov
mov
call
sti
or
clc
cmpb
or
adc
test
and
push
mov
cmpsb
loopne
pop
xchg
xchg
push
jle
les
test
push
pushw
adc
push
sti
insl
imul
sub
roll
pop
popf
or
xchg
out
add
push
sbb
mov
je
inc
cwtl
cmp
sti
add
dec
into
lea
clc
mov
mull
and
mov
xor
mov
jo
repnz
or
stos
mov
mov
push
adc
mov
push
jp
cld
xchg
imul
xchg
cmp
inc
adc
mov
mov
pop
cmp
pop
xlat
pop
pop
aam
inc
movsb
and
out
xchg
loopne
push
fldcw
inc
icebp
mov
add
push
adc
sbb
je
sbb
stc
or
sarl
adc
aad
pop
es
int
fdivs
and
dec
xchg
mov
dec
and
addb
adc
shrb
xchg
dec
out
out
dec
in
ds
xor
dec
rolb
les
push
aam
pop
xchg
repz
insb
scas
movsl
push
incl
mov
xchg
aad
lea
outsb
rorb
sub
stos
in
push
sbb
jecxz
jp
xchg
sbbl
es
add
sbb
mov
inc
inc
and
push
aaa
rorb
and
repnz
xchg
xchg
lret
inc
bound
orb
test
loop
ljmp
pop
jb
mov
fcmovnu
roll
std
cmp
mov
pop
mov
xchg
pop
cmc
out
stos
es
pop
jge
pavgb
jecxz
push
in
ljmp
into
arpl
sub
mov
mov
lods
clc
fmul
mov
stos
dec
sub
stc
xchg
aaa
mov
popa
push
pop
std
jns
cmpsb
mov
rclb
insb
ffree
xor
es
xchg
fwait
jmp
add
decl
inc
fadd
cli
fistpll
sahf
jnp
xchg
ljmp
sahf
fnstcw
imul
enter
arpl
push
dec
cmpsb
jle
jp
mov
lock
icebp
test
stos
push
mov
inc
nop
mov
iret
mov
xor
xor
xchg
mov
jb
mov
ret
push
loopne
cld
adc
mov
shll
sub
pop
repz
dec
inc
mov
scas
int
pop
adc
pop
xor
fists
or
jb
mov
fwait
jbe
jo
jbe
rolb
and
sbb
mov
aaa
mov
ret
mov
jmp
add
movsl
bound
and
cmp
in
scas
inc
cmp
stos
xor
sbb
int
psubsw
cld
sbb
pop
lahf
jo
mov
imul
pop
xchg
push
push
add
mov
xor
nop
test
leave
mov
jno
and
push
movsb
scas
popf
jl
nop
sahf
lock
mov
lret
cli
clc
leave
insb
or
negl
gs
pop
outsb
mov
mov
jl
cmp
inc
add
pop
pavgw
mov
pop
dec
arpl
mov
pop
and
ds
in
adc
inc
fsubr
jbe
inc
ret
shrl
inc
or
pop
cmpsb
adc
cli
xchg
xchg
inc
imul
sbb
sub
and
insb
mov
test
popa
mov
dec
lods
out
mov
test
mull
fstps
add
mov
xor
decb
scas
lret
mov
enter
pop
jle
out
aas
and
or
fsts
sub
ror
mov
cwtl
xor
sbb
mov
xor
enter
aam
mov
ficompl
jbe
out
pop
add
stos
sub
fisttpl
mov
dec
mov
es
cmpsl
xor
mov
aad
jbe
or
inc
add
inc
sub
mov
mov
int
jb
ret
jno
imul
pop
loope
mov
daa
push
inc
pop
add
lcall
jge
cmp
pop
jo
icebp
xchg
loope
in
imul
das
js
jb
popa
cs
fucomip
push
jnp
sub
outsb
mov
cmp
inc
fwait
jno
cld
rol
sub
add
sti
push
dec
pusha
test
cs
or
repz
xchg
cli
and
in
dec
inc
cmp
mov
repz
in
iret
adc
mov
mov
aad
add
dec
push
mov
je
aas
pop
pop
out
icebp
sub
lcall
insb
push
xor
jge
add
add
orb
cmp
sbb
cmp
bound
fwait
lods
sub
xor
ljmp
dec
sbb
or
stc
fcompl
dec
aas
sbb
lret
pop
xchg
add
xor
stos
mov
cmp
cmp
dec
lret
loope
insl
dec
push
loop
aaa
imul
xchg
scas
sub
pop
les
cmpsb
aas
fwait
icebp
sbb
mov
call
and
test
pop
or
orb
mov
mov
dec
cmpsb
sbb
and
in
in
testl
mov
test
sbb
mov
shl
sbb
shll
add
dec
testl
insl
or
push
mov
nop
das
lret
fsubrp
pop
out
xor
mov
bound
outsl
sbbb
pop
jmp
ret
jl
jae
jbe
xchg
push
jmp
lcall
das
popl
orl
xor
or
or
mov
pop
idivl
add
lret
cwtl
lods
mov
lahf
pop
inc
iret
sub
aam
movsb
lahf
flds
sub
push
es
daa
shl
jecxz
stos
fcompl
push
push
jno
mov
add
lea
mov
mov
andl
mov
mov
mov
cs
sbb
and
pop
and
lahf
add
push
jb
cmpb
in
rclb
sub
ja
xorb
mov
mov
jnp
adc
mov
in
mov
cwtl
adc
insl
push
jo
mov
push
cli
test
fiadds
xchg
inc
mov
iret
jecxz
jo
cmpsb
lods
arpl
jg
jo
mov
bound
ss
negl
fmul
jle
sarb
stc
cmp
ja
pushf
faddl
into
repnz
aad
or
mov
mov
dec
cmpsl
jns
lcall
shr
shrb
loopne
mov
out
and
jns
mov
jnp
push
aaa
rcl
push
insb
out
jp
sub
aas
bound
lds
jnp
add
jbe
dec
stos
out
call
repnz
lock
out
fcmovnb
adc
jle
cmp
add
xlat
mov
dec
pop
sarl
adc
outsl
xor
insb
fnstcw
xchg
adc
shl
inc
sub
and
adc
mov
stos
cwtl
je
int3
jl
stos
popf
das
add
clc
fs
jge
cli
sub
orl
sbb
jp
rcr
mov
stc
test
fidivrl
dec
aam
mov
dec
testl
mov
mov
dec
dec
mov
dec
push
call
out
popl
leave
cmpb
and
dec
aas
and
mov
test
push
lds
push
iret
js
fwait
mov
iret
jle
mov
sub
jle
push
ret
testl
scas
pop
cmc
out
xchg
dec
pop
mov
dec
mov
stos
gs
add
ret
xchg
and
fstpl
jg
es
popa
fdivs
fsts
xchg
jp
mov
jp
sub
rclb
notb
fcomps
mov
sbb
in
xlat
sbb
sbb
xor
push
xor
mov
or
dec
dec
mov
arpl
jecxz
es
dec
addl
mov
mov
aam
xchg
jmp
dec
push
cmp
test
sbb
in
mov
movsb
fstl
push
adc
adc
xchg
sbbl
or
xchg
mov
aam
xchg
mov
sub
out
lock
add
stc
or
mov
push
inc
jecxz
dec
push
mov
mov
sbb
rcl
in
jl
sbb
and
fdivr
loope
jo
addb
out
xchg
jge
cmp
aas
jle
in
bound
jo
mov
sub
jnp
dec
push
divl
les
push
iret
out
ficompl
fldt
jecxz
inc
push
push
outsl
je
fisubl
jle
hlt
imul
cmp
ja
mov
fcmovbe
into
fiadds
aas
insl
pop
movsb
in
dec
ja
mov
xchg
sbb
ss
or
les
lds
push
lahf
into
into
xchg
std
xchg
mov
push
test
adc
mov
std
inc
test
mov
ds
or
cmpsb
stc
or
fsubl
std
js
cs
lcall
icebp
and
cld
jbe
jmp
jmp
ret
addr16
mov
inc
test
adc
push
add
mov
pop
test
or
loope
and
nop
fnsave
sysenter
fldenv
jbe
mov
add
jecxz
push
mov
mov
mov
mov
inc
stos
push
cwtl
rolb
cmp
mov
xchg
gs
mov
xor
xor
and
aaa
cmp
mov
sub
jb
push
adc
xlat
sbb
dec
and
in
enter
xor
jne
repz
into
xchg
lock
xchg
inc
sarb
xor
pop
jmp
sarb
mov
push
lfs
pop
repz
lret
test
addr16
sbb
pop
je
jb
inc
jno
daa
out
xchg
sti
lahf
stos
ret
jmp
rcll
add
aad
pop
sub
aas
jb
xchg
push
adc
mov
jmp
cmp
fsubs
js
xor
jnp
dec
push
push
inc
adc
xor
xchg
sub
lcall
nop
movsb
or
scas
je
xchg
add
push
xor
pop
das
das
cmp
cs
sti
jmp
xchg
xchg
xor
mov
jl
mov
inc
fistpl
xchg
mov
and
add
and
xor
cltd
mov
in
out
fnstcw
add
cmp
inc
add
mov
adcl
pop
fisubrs
sub
out
mov
jmp
fdivrs
or
dec
xchg
add
mov
mov
jp
or
repnz
dec
jbe
adc
lea
mov
dec
push
mov
xchg
mov
jge
dec
mov
sbb
jnp
pushf
rolb
mov
popa
add
dec
sti
inc
cld
cvtpi2ps
outsb
aad
pop
cs
iret
test
mov
ret
pop
cmp
inc
std
mov
xchg
adcb
cwtl
inc
xchg
push
mov
out
in
outsb
mov
mov
out
push
sahf
mov
test
jo
adcb
cmova
xor
fs
xchg
pushf
std
dec
mov
in
movsl
aas
sbb
sub
mov
repz
fbld
dec
push
je
outsb
sub
das
insl
dec
stos
pop
inc
inc
inc
adc
ret
inc
adc
pop
pushf
jmp
jo
sbb
das
dec
push
cmp
jb
imul
cmp
addr16
out
xor
inc
jg
pop
mov
pop
mov
pop
and
out
inc
insb
cmc
outsb
dec
stos
push
or
jne
jns
xchg
add
mov
push
fwait
xchg
into
xor
mov
lock
fidivrl
dec
lds
mov
push
sbbl
xor
rclb
add
icebp
xor
sub
xor
dec
enter
push
jg
les
shr
or
rclb
push
mov
mov
mov
popa
sub
sti
and
mov
or
bound
lret
ljmp
jecxz
mov
inc
ljmp
mov
mov
sahf
xor
jmp
aas
mov
frstor
in
nop
int3
out
rcr
fisttpl
inc
inc
lcall
lret
jmp
jg
test
and
mov
sbb
cwtl
jnp
push
push
cli
loope
mov
lahf
adc
cs
lret
ret
ja
sti
adc
adc
inc
jecxz
push
inc
xchg
mov
jnp
xchg
fidivs
bnd
dec
dec
ja
fnstcw
stos
xor
push
imul
repz
mov
sub
sub
sub
adc
out
push
out
push
ljmp
sub
sbb
mov
ss
mov
mov
call
or
lret
dec
data16
jnp
leave
pop
lret
xchg
and
and
adc
cmp
mov
jo
sbb
or
xchg
sub
or
xchg
mov
jl
pop
ret
fmull
cmp
mov
aam
pop
test
notl
sub
stc
jae
jecxz
lret
mov
add
lea
pop
xor
xor
push
pop
ror
aam
sbb
fnstsw
push
push
mov
fwait
rorb
shll
mov
sub
dec
push
xor
pusha
js
jecxz
mov
and
int3
mov
jno
sub
cmc
lock
in
cld
stc
and
or
lahf
pop
cmpb
call
inc
jecxz
cmp
fnstenv
push
inc
fwait
je
xchg
inc
mov
mov
or
xor
mov
gs
xchg
pushw
xlat
mov
fwait
imul
push
sub
or
ret
std
dec
and
ss
and
mov
push
adc
adc
hlt
cld
jp
push
xor
jo
pushf
push
nop
jns
mull
lds
gs
push
jns
out
das
pop
or
inc
mov
and
test
push
jg
xchg
lds
std
inc
sti
pop
loope
repnz
int
jp
inc
cmp
es
xchg
inc
jo
add
jg
push
mov
ja
jne
adc
jno
fidivrs
inc
xchg
scas
inc
or
inc
int3
pop
repnz
insl
cwtl
aaa
std
and
dec
mov
data16
in
xchg
ret
push
sub
cli
mov
test
pop
jb
shlb
stos
mov
add
sub
int
cmp
xor
ffreep
push
dec
lock
jbe
xor
push
inc
insl
mov
adc
mov
or
push
aam
sbbb
enter
mov
and
fiadds
aaa
and
pop
mov
cmpsb
push
mov
mov
pop
pusha
sbb
jae
jge
dec
cmp
xchg
aas
push
dec
loopne
popf
inc
enter
xor
insb
pop
jnp
daa
cli
loopne
mov
faddl
test
ret
sbb
mov
mov
push
sbb
mov
mov
daa
sub
adc
dec
loopne
jnp
xor
into
sbb
int
xor
inc
pusha
orb
xchg
imul
shll
enter
fists
fwait
sub
add
test
call
and
lods
sbb
push
test
loop
lret
jo
xchg
cmp
cmpsb
push
mov
mov
cltd
aad
std
xchg
outsb
mov
lds
test
lea
stos
pop
inc
cld
daa
sahf
mov
sub
sub
sbb
pop
imul
rolb
pop
je
aam
pop
mov
pop
dec
add
push
cmc
stos
dec
jecxz
push
cmpsl
shlb
pop
cs
popa
scas
sbb
sub
mov
jl
bswap
sti
sub
in
lahf
fst
subl
dec
inc
add
dec
or
cmp
inc
lods
xchg
scas
jnp
movsb
out
aam
adc
sbb
mov
int
stc
mov
add
data16
loope
sti
iret
sub
negl
pop
adc
jnp
enter
rorb
xchg
push
popl
ret
mov
mov
lods
pop
fwait
jne
lret
out
cmovs
and
fldenv
and
ret
inc
imulb
test
fstl
stos
sub
out
xor
mov
std
jecxz
mov
les
mov
mov
and
jle
out
cmp
mov
ljmp
jb
xor
pop
neg
les
imul
jge
xchg
cwtl
or
inc
lods
pop
fwait
data16
add
es
imul
inc
push
mov
and
inc
icebp
dec
nop
mov
jae
cltd
loope
mov
lcall
mov
jbe
push
xor
push
xor
mov
add
and
xor
dec
pop
dec
ret
or
loop
and
repz
aas
push
push
mov
push
shll
sbb
mov
inc
test
jg
out
popf
lods
loope
push
inc
in
icebp
cmpsl
mov
insb
cwtl
and
inc
repz
xchg
fiaddl
mov
sub
cs
call
andl
dec
xchg
xor
das
sbb
and
or
push
sti
and
cmpsl
jo
int3
daa
jb
jno
xor
mov
adc
sbb
xchg
push
sti
inc
sahf
or
movsl
outsb
ljmp
outsl
negl
mov
std
dec
mov
push
call
enter
insl
decl
xor
or
sub
lret
ret
xor
lcall
je
shrb
test
fcmovnu
and
loop
mov
outsw
mov
jmp
and
jo,pn
pop
cmpl
mov
add
rorl
cmp
aas
inc
fildl
std
xchg
mov
hlt
jo
rclb
scas
inc
mov
gs
push
test
shlb
xchg
stos
in
outsb
pop
sub
roll
add
js,pn
call
inc
xor
jae
push
sub
adc
cmp
push
xchg
push
dec
int3
cld
xor
rcrb
sub
xor
push
push
aas
inc
dec
adc
xor
ljmp
data16
int3
cmp
icebp
push
cmp
push
pop
push
data16
jno
inc
stc
stos
xchg
pop
mov
mov
jp
loop
adc
push
das
test
movsl
lea
jg
fwait
int3
loopne
faddl
cli
into
xchg
mov
push
sti
sbb
adc
mov
or
loope
mov
outsl
add
mov
ret
dec
sub
mov
das
pop
clc
lcall
imul
les
cltd
jge
inc
test
and
add
mov
mov
pusha
or
push
mov
hlt
stc
out
lea
out
lods
cmp
mov
pushf
push
inc
cmp
mov
stc
call
sub
dec
and
pusha
fucomp
sub
add
mov
fsubrp
mov
stos
xor
gs
stc
jno
hlt
iret
dec
cmp
es
stc
xlat
stos
call
cld
movsb
mov
and
ror
xchg
insl
mov
mov
dec
aas
les
push
daa
push
mov
out
sbb
adc
ljmp
jmp
mov
icebp
int
shrl
pop
push
mov
add
xchg
fldcw
and
sbb
xchg
or
or
adc
call
ss
lock
dec
inc
push
dec
sub
jmp
xchg
ret
sub
stos
xorb
dec
scas
mul
outsb
mov
lock
mov
jl
mov
frstor
out
xor
dec
lcall
jae
push
jge
mov
mov
cmp
shrb
test
cli
roll
scas
sub
cwtl
scas
ret
outsb
push
arpl
xor
xchg
andl
xorl
mov
aas
mov
dec
push
test
push
out
testl
push
jnp
xchg
pop
add
push
in
es
out
jmp
stc
mov
pop
fsubl
jge
dec
loopne
test
mov
arpl
addr16
jle
iret
sbb
scas
je
sub
cmpsb
icebp
or
outsl
mov
testl
mov
xchg
in
mov
mov
jmp
popf
xor
arpl
mov
mov
mov
cmpsl
dec
xchg
test
roll
adc
test
daa
cld
sub
mov
and
mov
jbe,pn
ja
push
mov
fdivl
loop
insl
lods
sub
dec
gs
mov
movsl
movsb
gs
stos
mov
loopne
inc
push
divl
mov
rcr
int3
lds
add
xor
pop
in
loope
sbb
jg
jae
stc
mov
in
push
aaa
sub
mov
scas
pop
xchg
lods
stos
arpl
movsl
xor
test
sub
and
mov
aad
stos
pop
enter
sbb
mov
iret
mov
aad
pop
inc
das
dec
or
add
js
jle
je
adc
add
sti
adc
dec
lret
ds
sub
testl
jbe
inc
jae
call
jg
and
pop
add
jae
and
shr
stc
mov
fcoml
int
in
orl
push
add
xchg
jo
movsl
inc
dec
sub
sbbb
sub
aas
subl
or
dec
ljmp
sarl
mov
xchg
or
dec
fs
das
mov
mov
or
mov
mov
mov
sahf
insl
adc
pop
cwtl
call
out
repz
repz
push
mov
lds
fnstcw
mov
cmp
cli
inc
cvttps2pi
push
addr16
pop
xor
lock
xor
pop
inc
stc
imul
movb
cld
mov
jg
mov
xchg
repnz
mov
jmp
mov
mov
dec
icebp
pop
repz
xchg
dec
std
sbb
dec
push
loope
cmpsb
roll
mov
jmp
jno
jg
xchg
add
mov
aad
pusha
xchg
fiaddl
mov
js
xchg
imul
ficomps
mov
xor
mov
insl
jb
jne
jno
and
test
mov
mov
xchg
and
jns
or
js
mov
iret
in
insb
push
ret
mov
sarb
scas
and
mov
or
imul
into
imul
lds
es
sub
mov
scas
dec
mov
cwtl
sbb
jle
fwait
clc
lahf
roll
in
dec
push
mov
xchg
and
sarl
sbb
jg
sbb
outsb
call
cmp
jge
sti
add
ret
xchg
je
jo
and
pushf
out
jge
sbb
pusha
cmp
hlt
in
dec
mov
add
sub
int
pop
jg
scas
push
or
fstpl
ror
add
pop
inc
aas
adc
adc
mov
fsubrl
cs
adc
or
imul
cmp
outsb
cwtl
and
cmpsl
jecxz
cld
stc
xchg
or
jp
push
bound
xlat
mov
imul
cmc
mov
ret
pop
insb
aaa
adc
sti
cwtl
cmp
mov
call
mov
jl
sbb
lret
ss
clc
xchg
xor
cmpsl
movb
and
xor
cmpsb
neg
push
lahf
ret
js
loopne
fdivs
jmp
test
scas
pop
lods
push
push
add
dec
cmp
test
fdivrl
imul
dec
jnp
outsb
in
out
lcall
mov
add
xchg
inc
outsb
mov
adc
nop
outsb
xchg
dec
loopne
flds
mov
push
dec
fisubl
xor
mov
sub
sbb
ret
xlat
rorl
cmpsl
jp
repz
sahf
mov
jecxz
movsb
xchg
adc
fcomps
mov
loope
xchg
sub
and
rorl
xchg
fs
mov
adc
pop
pop
fidivrs
jno
test
and
jge
and
dec
stc
iret
xchg
out
lcall
out
arpl
inc
imul
mov
popa
mov
nop
sub
mov
push
sbb
dec
rcrl
push
les
pop
fsts
lock
gs
out
sbb
jl
bound
adcb
pusha
inc
jns
orb
pushf
out
and
inc
xchg
inc
les
lcall
incl
testl
mov
cld
pop
aam
mov
data16
shl
hlt
fsub
outsl
xchg
loop
cmpsl
icebp
lods
mov
inc
loop
mov
fidivrs
jg
mov
mov
cmp
push
xchg
test
enter
dec
inc
or
popf
cmp
subl
pusha
repz
ljmp
test
int
push
lcall
mov
fdivr
addr16
push
push
popf
negb
cltd
je
aad
stc
mov
mov
adcl
mov
test
xor
inc
lea
pop
outsl
daa
jbe
push
push
inc
xchg
out
loopne
add
xor
pop
lcall
pop
outsl
lahf
cmc
lret
mov
les
or
push
cmpsb
les
cmp
dec
xlat
cmpb
cmpb
dec
mov
dec
stos
and
xor
adc
lods
rorl
lahf
testl
pop
scas
mov
mov
inc
in
pop
and
inc
xchg
stos
jp
js
jno
or
stos
sub
add
push
pop
test
cmpsb
inc
cmp
outsl
jg
or
fbstp
xchg
mov
pop
outsl
fbstp
cmc
aam
sbb
xor
sbb
lea
lods
fst
aam
pop
iret
popa
ret
loope
adc
push
in
mov
lea
adc
fbstp
js
cmp
wrmsr
lods
test
stos
adc
test
ljmp
inc
addr16
dec
scas
or
lcall
mov
sub
jmp
je
enter
xchg
popl
push
dec
mov
into
fcmove
leave
add
int3
gs
andb
mov
push
jge
aam
test
sub
cmc
insb
and
push
lods
bound
outsb
adc
scas
push
jl
mov
jbe
mov
lods
test
scas
repnz
or
leave
dec
mov
push
pop
cmpsb
leave
clc
shl
add
fcomi
sub
jmp
mov
inc
nop
add
call
xor
mov
pop
dec
mov
gs
mull
and
or
ret
sahf
ss
repnz
test
inc
sarl
es
aam
or
pop
inc
sbbl
cmpsb
inc
jp
popf
jns
dec
loopne
ret
push
adc
dec
fs
xchg
xor
jg
push
out
out
inc
and
sub
loopne
cs
ja
es
xlat
add
addl
rclb
in
pop
inc
sbb
das
iret
sarb
fcomi
sbb
lahf
sub
or
movsl
repz
mov
popf
and
loope
test
sbb
mov
movsl
mov
inc
sbb
and
fs
cli
es
push
lcall
repz
ds
inc
push
arpl
sbb
leave
xchg
fcoml
cmpl
jp
sub
xor
xlat
xlat
jno
inc
mov
movb
xor
repz
adc
push
ja
pop
out
and
and
icebp
maxps
push
cwtl
and
fistpll
mov
ret
insl
lea
sub
add
mov
pop
lcall
lea
into
daa
daa
bound
test
push
xchg
push
adc
icebp
mov
push
sbb
mov
mov
test
pop
pop
mov
adc
lds
out
jg
andb
pop
sub
mov
in
mov
mov
cmpsl
mov
xor
roll
fisubl
sbb
adc
rorb
sarl
dec
rcll
mov
cltd
or
xchg
push
dec
lock
pop
mov
vmulps
cmp
mov
inc
cltd
cmpsl
push
int3
stos
cmpsl
xchg
int3
adc
in
push
mov
sbb
mov
jnp
mov
loop
shll
cld
xor
test
mov
xor
dec
cwtl
sub
inc
mov
jbe
jg
je
sbb
ror
adc
sahf
int3
js
mov
cmp
scas
popf
inc
ljmp
mov
lret
imul
or
jo
jecxz
lret
mov
leave
jmp
jecxz
mov
fwait
icebp
mov
add
sbb
int3
cmp
add
fdiv
pop
stos
orl
sub
cmp
add
add
push
mov
xchg
xchg
inc
pop
lea
cmp
inc
xchg
mov
ds
and
inc
mov
cli
pop
aam
push
jg
test
test
aaa
mov
and
lock
xor
jge
out
jo
cmpsb
rcrb
fwait
pop
cmp
jle
dec
mov
dec
pusha
inc
mov
pusha
jmp
push
xchg
or
out
push
nop
mov
add
mov
jo
clc
clc
mov
fidivrs
test
test
stc
stos
mov
call
xor
inc
pusha
and
or
jae
pop
test
aas
mov
lea
lcall
inc
push
adc
mov
or
mov
in
xor
mov
xchg
frstor
or
xchg
aas
sti
cmp
call
fdivrl
mov
std
push
and
aad
sti
xor
jbe
cmp
stos
xchg
or
rcl
orl
xchg
call
idivl
cmc
inc
inc
dec
mov
ja
adc
mov
in
xchg
xor
mov
popa
sbbb
fsubrs
es
leave
push
mov
mov
mov
addr16
fbld
scas
stos
adc
xorl
outsl
ficomps
xchg
repnz
or
fisubs
xchg
insb
push
aaa
cmpsl
push
mov
mov
xor
dec
xchg
orl
or
popa
arpl
iret
out
mov
adc
loope
in
daa
cmp
mov
jge
jmp
adc
pop
mov
jbe
or
repnz
sbb
push
lret
xor
popf
insl
test
mov
adc
mov
xor
mov
fldenv
in
jno
or
dec
pop
push
icebp
mov
outsb
cmp
enter
pop
out
sub
adc
icebp
lcall
cwtl
pop
adc
or
stos
jne
jp
ficomps
fistl
pop
iret
popl
xor
sub
jnp,pn
stos
icebp
jp
pop
xor
cmp
mov
fdivs
das
fwait
rcrl
lahf
movsl
dec
bound
add
fidivrl
pop
ljmp
dec
stos
adc
pop
jne
pushaw
sbb
lea
pop
pop
push
int3
mov
lcall
jmp
lret
rorl
lret
mov
enter
xchg
lds
cwtl
daa
sbbb
dec
loop
movsl
popa
jbe
outsl
flds
shll
mov
or
dec
outsl
mov
pop
pop
xchg
mov
je
inc
cltd
cltd
shll
mov
movsb
push
mov
loop
xor
in
test
lock
push
sub
add
clc
push
add
add
mov
hlt
fildll
xchg
push
inc
into
cmp
xchg
ret
js
pop
add
mov
add
pop
adc
out
jne
outsb
jl
and
jnp
pushf
pop
sub
cwtl
popa
loop
icebp
mov
das
mov
xchg
pop
mov
and
lea
shl
cld
xlat
adc
add
pop
in
pop
adc
pop
daa
mov
ss
in
mov
xchg
and
mov
in
sub
pop
pop
inc
add
mov
push
mov
adc
xlat
add
das
bound
aaa
inc
movb
sub
jecxz
out
dec
int
inc
or
mul
enter
jge
les
out
out
add
mov
xchg
out
nop
repnz
sbb
pop
pop
sbb
xchg
ja,pn
test
lea
loopne
mov
shr
ret
insl
lods
popf
mov
push
daa
mov
rcll
lods
aad
loop
mov
pop
pushf
hlt
cmp
jb
sbb
pop
insb
shlb
push
dec
sub
gs
das
mov
insb
xor
adc
jne
mov
mov
or
jne
cwtl
lret
test
adcl
xor
dec
fdivs
jecxz
test
out
pop
xchg
adc
push
sub
mov
pushf
add
xchg
into
cmp
stos
mov
test
aad
out
pop
jge
push
std
das
icebp
sbb
jnp
xchg
mov
adc
xor
mov
cld
icebp
out
into
pop
xchg
pop
loop
fldl
inc
add
pop
xor
inc
xchg
add
mov
xchg
lret
add
add
add
sarb
push
cmp
orb
mov
lret
es
jnp
jnp
sub
ds
rcll
out
iret
push
mov
adc
into
adc
xchg
mov
pop
incl
adc
inc
movhps
ljmp
mov
inc
test
cmp
push
call
clc
out
ret
jns
xor
xor
mov
lock
mov
xor
jg
mov
cwtl
sub
xchg
add
sub
clc
es
push
push
cmp
out
xor
xor
cmpsl
lods
cmp
mov
pop
bound
daa
cmpsb
popa
sti
inc
inc
jb
mov
lahf
jge
loopne
xor
mov
dec
inc
mov
xchg
gs
sbb
dec
arpl
xchg
push
mov
push
mov
shr
mov
or
and
lret
shll
repz
xchg
jnp
mov
ds
jg
push
xchg
lods
or
movsl
dec
dec
jbe
adc
mov
pop
or
xchg
cmp
or
inc
inc
inc
ficompl
lods
push
sub
add
es
jb
push
lock
sub
mov
jne
jecxz,pt
stc
aaa
fnstcw
cld
leave
xor
scas
mov
out
repz
shr
add
test
sbb
and
lea
fistl
push
pop
imul
pop
sar
jl
scas
xchg
leave
pop
jns
jmp
into
movsb
int3
push
popf
adc
mov
and
int3
mov
xchg
and
jne
rorb
fwait
adc
xchg
or
scas
hlt
stos
push
outsl
jl
mov
in
mov
jo
add
iret
sbb
cmp
call
stos
mov
loopne
test
mov
rclb
test
lret
mov
out
lret
imulb
out
pushf
stos
inc
and
push
pop
insl
xor
test
xchg
xor
pop
hlt
mov
inc
in
mov
mov
cmp
jmp
shlb
fmuls
pop
insl
imul
mov
mov
add
inc
call
jno
cmp
outsl
cmp
loope
mov
cmp
push
push
mov
inc
icebp
mov
movsl
mov
test
out
dec
xor
mov
xchg
jge
xchg
arpl
jmp
lds
mov
pop
loope
pop
sub
loop
or
ljmp
xchg
mov
sbb
imul
outsb
je
mov
push
test
xor
ds
mov
push
add
stos
shl
enter
cmc
aam
out
jmp
or
jp
sub
sub
mov
idiv
sbb
fcoml
xchg
adc
and
lahf
mov
test
mov
hlt
mov
js
jl
dec
push
or
xor
aas
and
dec
cltd
fsts
adc
std
jle
cmp
cmpsb
mov
leave
bound
push
cli
push
repz
pop
insb
mov
add
fs
imul
jg
cmpsl
mov
add
jae
fs
stc
cs
loopne
in
xchg
mov
rcr
movb
jbe
jp
ficoms
add
adc
adc
sbb
sub
sbb
test
inc
fwait
inc
lods
sub
cmp
imul
sub
es
test
pop
fstl
add
loope
inc
stos
xorb
jbe
stos
nop
pop
dec
or
jmp
push
add
mov
or
and
int
aas
push
mov
or
cmp
repz
sbb
lret
cmp
rorb
mov
jmp
leave
stc
mov
jae
test
int
xor
ds
stos
mov
lods
int3
xor
push
into
imul
je
sarb
pushf
lret
cmpb
or
mov
test
aad
push
and
bound
stc
jo
jnp
test
inc
repz
outsb
sbb
xchg
mov
cmp
cmp
test
adc
inc
mov
sub
mov
icebp
xlat
jo
iret
push
iret
and
xchg
cmp
adc
subl
push
clc
sbb
ljmp
imul
sub
jbe
lahf
pop
in
fs
jb
pop
cmpsb
xchg
aad
fwait
lret
jg
add
fnstsw
inc
mov
movsl
sbb
cld
push
jg
insb
or
adc
imul
xchg
and
insl
loope
dec
lock
push
lret
in
repnz
dec
jbe
lahf
mov
inc
mull
pop
in
or
repnz
shl
test
cmpl
gs
aam
fdivr
pop
push
sub
sub
insl
sub
jl
mov
cmp
leave
mov
push
jge
jp
roll
pushf
pop
ficoms
data16
cs
inc
outsb
std
adcl
outsb
cld
in
ds
sar
inc
dec
std
leave
test
push
push
push
xchg
cmp
out
cmp
mov
lock
pop
in
mov
mov
dec
mov
fs
lret
or
adc
jns
pop
mov
inc
adc
and
in
and
xchg
mov
int
mov
mov
std
add
pushf
sub
or
xor
inc
adc
or
lock
shlb
xor
sub
iret
mov
inc
mov
test
lahf
rol
mov
xchg
testl
icebp
sbb
test
dec
push
mov
sub
lret
cmp
pop
clc
popa
ret
sbb
dec
add
inc
ss
xchg
sbbb
sub
repz
jbe
repnz
fcmovnu
sub
fwait
nop
push
sbb
jmp
arpl
xor
and
aaa
data16
loop
ret
lret
xorb
adc
jmp
xlat
dec
mov
inc
push
pusha
jmp
mov
xchg
jle
xor
xor
push
sbb
stc
push
and
popa
xor
hlt
repnz
xchg
jle
push
flds
push
mov
cmp
jno
jp
loop
mov
enter
mov
and
fidivrl
jl
and
lret
ss
push
ret
and
or
push
jnp
jnp
xor
fdiv
js
loopne
lcall
or
clc
fs
xchg
mov
push
sbb
jno
dec
mov
push
jmp
popf
jne
ss
ljmp
push
ljmp
jl
inc
aas
and
cmc
mov
mov
add
jne
test
icebp
xchg
mov
mov
stc
or
and
mov
test
fnstenv
pop
ret
nop
mov
sbb
ja
adc
ret
int3
ja
sbb
dec
jnp
add
shll
push
lock
and
adc
aaa
shr
xor
pushf
add
mov
out
mov
ret
cmp
out
lds
js
bound
les
mov
inc
test
cmp
xor
sarl
std
jns
pop
push
cmp
jns
mov
sbb
clc
xchg
pushf
cli
rcr
pop
sub
jb
mov
rorb
aad
and
nop
push
lods
and
push
fists
xchg
jae
jb
dec
int3
pop
aad
cmpb
roll
pop
rclb
pop
dec
imul
popa
adc
dec
test
ss
insb
fs
xchg
std
adc
lahf
or
lret
pop
sub
and
ds
stos
pop
pop
pop
fdivrp
mov
aaa
jns
sub
xchg
push
jl
sub
pop
push
arpl
adc
aaa
lock
adc
mov
mov
shlb
xchg
add
cmp
ret
xor
dec
cltd
test
fstl
sub
inc
inc
and
inc
push
scas
sbb
pop
jbe
jnp
dec
movsl
add
pop
repnz
mov
int3
lea
dec
leave
and
jmp
add
jb
test
inc
or
mov
push
mov
ljmp
dec
imul
sub
jmp
pop
mov
xchg
pop
aad
xor
inc
popf
scas
add
mov
jne
stc
cmp
ss
mov
adc
aas
enter
lock
lcall
test
lds
pop
jnp
bound
pop
mov
inc
and
rolb
insl
push
and
adc
daa
out
aad
xor
sbb
das
cmp
or
jns
out
jle
lcall
cli
popf
cmc
stos
icebp
jno
sbb
pop
jae
sarb
mov
mov
mov
rolb
jae
cli
loopne
push
aaa
repz
idivb
mov
sub
dec
pop
iret
adc
xlat
or
lods
fldcw
stos
aam
push
imul
pop
imull
roll
sub
loopne
mov
and
js
rcll
pop
loope
adc
xchg
mov
mov
and
cmc
mov
push
ds
fdivrs
aad
lahf
xor
adc
mov
in
mov
movsb
xchg
pop
mov
pop
push
push
movsl
jne
xchg
push
mov
jb
sub
popa
or
xchg
mov
jmp
xchg
mov
sub
xor
cmpsl
pop
jg
mov
scas
fidivl
in
xchg
jb
lods
mov
push
insl
jmp
mov
mov
and
sarb
out
mov
add
and
jle
mov
add
mov
aad
fisubs
xor
data16
xchg
push
mov
mov
loope
test
mov
and
sbb
add
outsb
iret
std
into
fs
in
mov
push
xchg
popf
inc
pop
pop
ret
or
addr16
fiaddl
inc
insl
xchg
mov
push
imul
cld
stos
aam
test
imul
jae
adc
mov
mov
push
mov
sbb
nop
popa
dec
push
pop
sti
loop
ljmp
dec
add
into
sub
adc
fnstsw
lods
or
movb
fwait
cmc
mov
sub
mov
jp
lods
mov
xor
das
mov
mov
insl
push
and
lcall
test
shl
adc
sbb
data16
sbb
xchg
pop
pop
sub
nop
push
cld
lock
jnp
iret
ja
xchg
sub
pop
inc
jle
pop
js
lock
or
nop
imul
subl
scas
in
xchg
lret
add
add
push
nop
cmp
ljmp
cmp
ror
mov
mov
divl
push
invd
cmp
out
add
in
xor
pop
jp
andb
pop
dec
rolb
data16
mov
dec
aaa
sub
add
scas
fcmovnb
ret
popa
xchg
pop
in
in
xor
cmpsb
jg
ss
inc
mov
xchg
sub
lahf
in
pop
cld
jp
or
out
jg
cmp
dec
insl
mov
das
pushf
pop
and
insb
xor
xchg
hlt
inc
and
dec
mov
pop
out
cwtl
and
inc
sub
or
and
cs
add
ret
inc
sbb
xor
imul
ss
movsb
not
fs
jge
repz
fcoml
xchg
sbb
adc
out
mov
mov
aaa
lcall
int3
out
or
mov
ss
pop
inc
mov
push
pop
enter
movsb
cmp
lods
fwait
adc
push
mov
pop
stos
leave
mov
mov
data16
rclb
cli
cltd
orps
test
filds
pop
xchg
jo
jl
fstl
shlb
inc
jmp
pop
movsb
lcall
push
lret
lods
xchg
insb
jne
cwtl
std
into
sbb
fs
std
sbb
mov
mov
sub
rcrb
rorl
inc
dec
push
gs
lds
sti
jo
and
xor
test
jne
jecxz
add
pusha
les
enter
cmpsl
fwait
movsl
scas
mov
jo
sub
jb
or
jp
mov
cmp
mov
das
xor
fstps
test
repnz
stc
ret
xchg
ja
insl
pop
mov
test
loop
xor
into
inc
jecxz
out
idivb
sbb
sub
iret
jo
inc
stos
out
mov
adcl
stos
sbb
mov
or
les
cmpsl
jg
sbb
pop
fst
cld
out
adc
dec
test
mov
adc
cwtl
dec
addb
mov
enter
loopne
addr16
int
cmpsl
in
lret
test
cmp
or
push
dec
or
mov
sbb
int
imulb
shrb
xchg
cld
push
and
fsts
lahf
xchg
mov
pop
jo
cmp
inc
outsl
jmp
jno
lock
int
inc
lods
sub
adc
sub
and
aaa
pop
shr
inc
jnp
mov
or
jle
mov
loop
cs
mov
lcall
sub
pushf
test
xlat
pop
and
or
pop
xor
xor
test
jmp
and
jp
int3
push
bound
scas
pop
repnz
add
imul
mov
aad
ret
cmpsb
mov
inc
xchg
sbb
push
test
or
aad
cmp
pop
mov
fists
adc
add
out
daa
outsb
clc
sahf
jne
and
mull
pop
lods
jmp
jl
and
mov
xlat
xchg
arpl
and
adc
call
outsb
rcrb
data16
rcll
fistl
jae
mov
push
mov
cli
mov
add
add
add
jp
mov
jecxz
jb
shll
rcl
insb
idivl
fiadds
cwtl
jl
movsb
cld
leave
ljmp
add
movsb
hlt
xchg
mov
subl
xor
out
pop
cmpsb
mov
icebp
and
out
adc
push
or
out
mov
jle
jp
jbe
popf
out
add
add
fmuls
into
pop
aaa
in
push
add
xorl
pop
jbe
inc
daa
cmp
stos
or
aad
xchg
lods
lock
loopne
pop
mov
mov
cmp
mov
fiadds
jge
hlt
cmovb
out
pop
jg
pop
cmpb
xchg
fwait
lret
adc
mov
int3
scas
cmp
sub
fstpt
push
jmp
into
scas
in
dec
mov
bound
movsl
mov
test
cmp
push
mov
clc
hlt
xor
shrb
mov
enter
and
add
insl
out
out
add
faddl
jae
iret
dec
xchg
mov
xor
mov
repnz
push
push
push
pushf
add
stc
cmp
and
ss
shll
ja
ljmp
dec
ljmp
sbbb
push
push
adc
jle
cmp
jne
or
addb
jl
mov
inc
or
mov
pop
xor
inc
xor
xchg
add
dec
enter
add
adc
push
jbe
icebp
inc
push
push
ljmp
add
jnp
fs
or
mov
lahf
cs
divb
stos
pop
dec
stos
xor
mov
xchg
movsl
icebp
pusha
cmp
mov
mov
aaa
std
jmp
fwait
xchg
pop
lock
inc
inc
inc
jno
push
dec
xor
adc
sbb
addb
data16
mov
ret
in
push
xor
repnz
cltd
bound
addr16
fwait
bound
xchg
and
dec
inc
xchg
sub
pop
scas
scas
cmp
jbe
or
jo
sahf
fwait
int
rol
ds
leave
stos
cltd
cmpsb
dec
pop
dec
and
repz
sub
in
cmp
lcall
jbe
shr
and
test
lods
jb
jmp
inc
repnz
cmp
or
popa
shll
push
xchg
in
sbb
xchg
divl
ret
adc
lock
js
shrl
not
inc
jbe
sbb
in
inc
repnz
fxch
shll
imul
cmp
fcomp
adc
adc
sbb
hlt
mov
addr16
or
dec
inc
inc
nop
repnz
dec
jp
imul
roll
xor
jecxz
inc
mov
sub
xlat
imul
and
adc
pop
push
jmp
mov
mov
ja
inc
imul
hlt
xor
imulb
scas
jl
inc
bound
inc
push
add
fistpll
mov
sbb
vunpckhpd
jne
xor
pop
pop
pop
rcrl
popf
jb
jae
outsb
fisttpl
push
dec
das
in
int
jge
fstpl
and
les
or
aas
xor
sahf
xchg
xchg
aas
xor
test
pop
int
imul
push
pop
mov
dec
leave
push
jnp
dec
mov
sub
push
xor
mov
mov
rclb
lods
add
cmpb
or
push
mov
bound
and
pop
mov
xchg
clc
lea
mov
jmp
pop
pop
push
rol
andl
cltd
or
mov
leave
popa
mov
inc
add
lea
cmpsl
stos
cmp
ficoms
mov
push
cmpsl
dec
mov
lahf
into
mov
and
add
xchg
sub
pop
fwait
jno
mov
lret
pop
ret
in
push
cmpsb
ds
xor
les
gs
sbb
mov
scas
mov
inc
daa
sub
push
stos
inc
aad
lods
mov
fwait
cmc
aas
jle
rcrb
jge
or
jmp
push
pushf
dec
das
lret
push
mov
jmp
push
repnz
mov
jl
outsb
adc
hlt
mov
mov
filds
fs
xor
sbb
inc
pushf
xchg
cmpb
outsb
and
and
enter
sub
into
cmp
clc
aas
aas
lret
lock
aas
lods
test
mov
mov
push
jle
es
pop
sbb
inc
push
xchg
mov
push
pop
jnp
cltd
xchg
cmp
cwtl
nop
je
imul
xchg
pop
dec
test
cmp
adc
xor
imul
xor
loop
mov
jmp
aam
inc
jb
push
stc
cmp
lahf
es
sahf
cli
add
cmp
inc
stos
ret
ss
pop
and
sbb
xor
lods
push
pop
inc
pop
inc
inc
adc
scas
push
pop
loope
cmc
in
stos
pop
repnz
hlt
xchg
and
mov
mov
xor
hlt
mov
imull
in
popf
push
inc
mov
cld
les
xchg
push
sub
cmp
cmp
adc
adcl
or
movsl
repnz
imull
xchg
in
rorb
mov
pop
inc
scas
in
lods
jg
jg
xor
aaa
sti
fwait
cmpsb
add
and
mov
fmul
cltd
cmp
fcoms
adc
dec
xchg
mov
test
cmp
call
cli
rcl
cwtl
or
popf
int3
cmp
mov
cmp
xor
scas
mov
sbb
in
mov
inc
les
int
xor
movsl
mov
add
push
pop
fwait
add
cmpsb
sbb
cwtl
pop
les
icebp
mov
mov
sub
shrl
movsl
mov
loopne
je
iret
cltd
jmp
aam
or
int3
dec
sbb
jne
jno
sub
cmp
push
jbe
cmp
inc
sarl
aam
inc
int
inc
nop
rclb
dec
mov
rcrl
sub
mov
lret
or
sbb
mov
pushf
cld
adc
push
jecxz
pop
cmp
sub
test
movsl
es
aad
bound
inc
sbb
xor
xchg
sbb
shrb
and
sbb
orl
cwtl
push
icebp
push
stos
mov
nop
and
pop
mov
sbb
inc
mov
mov
cmpsb
mov
xchg
lods
lret
cmc
sahf
xchg
repnz
lods
mov
push
fcoms
add
ret
xorl
dec
clc
and
test
mov
adc
cmp
jne
xchg
sbb
fwait
pop
push
sub
and
lock
jp
mov
mov
fstp
clc
lds
aad
std
subps
stos
and
inc
jns
inc
incl
pop
or
enter
add
fs
test
xchg
push
push
pop
sub
inc
ja
sbb
leave
bnd
sti
cmp
mov
sbb
leave
out
jmp
xchg
scas
mov
rolb
inc
mov
ljmp
mov
mov
sub
push
es
add
mov
hlt
mov
popf
dec
ljmp
sbb
insb
pop
jb
imul
push
std
fcoms
jmp
mov
xor
jo
mov
inc
faddl
sub
cwtl
aad
in
por
cmp
repz
das
fdivl
xchg
in
add
mov
dec
pusha
int
adc
pushf
ret
sub
fisttpl
aaa
addr16
dec
push
push
in
dec
lock
call
and
push
movsb
mov
jg
xchg
les
sbb
cli
sub
out
into
inc
xor
fmul
loopne
aaa
sub
in
test
sahf
adc
push
mov
aad
stos
mov
notb
dec
push
lock
jbe
jecxz
mov
nop
shrl
leave
fs
rorl
add
push
jbe
jbe
ljmp
push
out
sub
jmp
mov
mov
loopne
sbb
mov
inc
ja
and
or
sub
daa
jnp
aad
jp
push
sub
sbb
xchg
dec
adcl
daa
cmp
idivl
out
data16
push
push
arpl
lahf
das
mov
inc
mov
and
sbb
inc
add
xor
dec
imul
mov
pusha
cmpsl
addr16
int
push
sub
adc
mov
pop
lods
push
push
nop
cmpsl
cmc
cmp
in
jmp
or
fidivs
hlt
and
mov
cmp
mov
test
ja
popf
jp
cmpsl
lcall
pop
cmp
mov
sarl
mov
jae
call
jle
mov
shrl
push
cld
out
fs
int
adc
add
pop
mov
jmp
jmp
jo
out
inc
and
popa
mov
inc
orl
js
jl
inc
popf
hlt
ljmp
sub
sbb
sarl
int3
dec
inc
jg
and
sbb
cmp
jmp
and
push
icebp
test
push
sbb
push
xchg
in
mov
mov
pop
mov
push
cltd
jae
dec
xchg
sub
lret
xchg
outsb
push
in
cld
cmovg
arpl
mov
push
xor
xor
cmp
fcmovb
shrl
arpl
mov
popa
repnz
pusha
jmp
daa
mov
pop
mov
cmpsl
arpl
lret
mov
cmp
outsb
push
vcvtsd2ss
push
mov
jmp
sahf
movsl
iret
adc
jle
dec
sub
dec
jp
popa
lods
movsl
xor
jne
jae
xchg
jmp
dec
push
xor
or
int3
xor
fstps
movsb
scas
into
mov
xorl
push
xchg
jle
mov
push
pop
mov
test
out
jne
repnz
psllw
lret
jno
out
pop
push
negb
cmp
pop
mov
mov
jmp
dec
mov
mov
lahf
call
stos
adc
insl
loopne
cmc
mov
xor
sbb
test
mov
pop
push
and
scas
in
jo
cmp
jae
xlat
sbb
stos
adc
nop
mov
cs
enter
jg
test
out
push
int
lock
aaa
dec
aad
mov
outsl
sbbl
into
push
xor
and
cmp
fwait
sbb
js
mov
mov
xchg
push
dec
adc
and
dec
pop
loop
adc
mov
and
pop
and
js
jecxz
icebp
adcb
stc
push
cmp
mov
sub
push
sub
xchg
push
in
fmulp
cs
pcmpeqb
sub
jns
push
inc
mov
or
ret
imul
das
cmpsb
mov
lret
jle
jmp
sub
xor
dec
sub
insb
das
nop
iret
leave
mov
fstps
cmc
add
js
stos
out
add
and
testl
sub
outsl
and
sub
sbb
xchg
lret
cmp
imul
stc
dec
adc
cmp
or
or
shll
add
ja
adc
lahf
push
pop
aaa
jb
adc
lds
rol
push
in
pusha
xchg
cwtl
dec
pop
aaa
mov
or
adc
mov
inc
mov
in
outsb
push
jo
fbld
es
ret
shlb
cwtl
push
mov
lods
dec
xchg
aad
xchg
fwait
sub
cmp
aas
dec
test
jge
jmp
add
inc
cmpsl
int
cmpsl
aad
cmpsl
mov
pop
dec
mov
sbb
movsb
sub
negb
test
or
aaa
pusha
enter
jo
es
or
jno
les
sub
xor
mov
je
mov
movsl
mov
in
stc
inc
subb
jge
test
bound
adc
test
shlb
xchg
jg
in
push
xchg
pop
dec
cmpsl
dec
imul
cmpsb
push
jne
jge
iret
cltd
cmp
test
dec
jp
ds
and
push
ret
inc
sbb
cmpsb
repz
imul
dec
push
mov
into
jae
in
xor
iret
inc
cmp
stos
shr
popf
mov
xor
push
xor
enter
xor
and
jle,pt
xor
ljmp
push
testl
add
cmpsb
sbb
enter
jp
mov
fdivs
sarb
pop
outsl
test
cmpsl
fistps
adc
fwait
fs
xchg
xchg
push
sahf
fnstcw
pushf
mov
xor
push
inc
pop
or
out
adc
hlt
sti
sub
inc
pop
jecxz
push
popf
xor
sarl
xchg
sub
pop
dec
hlt
and
jmp
xlat
add
and
aad
adc
ret
imul
sub
insb
dec
or
imull
inc
test
jecxz
pop
or
mov
mov
inc
mov
sbbb
pop
sti
lahf
enter
mov
jns
mov
add
cmp
mov
aas
dec
popa
pusha
xor
outsb
or
dec
push
fimull
repz
inc
adc
imul
jno
test
filds
mov
je
mov
mov
lods
lock
sbb
xor
loopne
add
outsb
out
je
add
sbb
adc
push
push
imul
inc
fldl
hlt
mov
sub
mov
aam
sbb
ret
adc
xchg
das
inc
push
pop
mov
test
add
cmpsl
aam
jnp
mov
data16
mov
pop
xchg
mov
adc
mov
ror
leave
dec
lahf
test
dec
push
jbe
je
int
push
vmovddup
filds
xlat
ror
into
mov
rolb
inc
aam
adc
int3
lds
pushf
sub
push
repz
push
or
jge
insl
adc
dec
inc
lahf
fstpl
jle
add
and
leave
lcall
xor
rcrl
mov
xor
or
inc
hlt
cli
fists
sub
shrl
ret
fwait
add
dec
mov
fstps
iret
jmp
out
sti
mov
xor
mov
lods
inc
xlat
sbb
in
push
jmp
roll
arpl
push
mov
mov
ljmp
pop
loop
es
jge
pop
sub
xor
push
or
dec
in
fninit
cmp
lods
cmp
push
push
adc
sbb
or
xchg
js
dec
xchg
inc
div
sti
push
pusha
stc
mov
mov
inc
and
rcll
jae
movsl
loop
fistpl
inc
sbb
jp
idivl
in
cmp
pop
sub
or
add
les
pop
sub
das
test
adcb
aaa
cmpsb
addr16
sub
xchg
pop
pop
jl
pop
or
dec
jns
push
add
inc
fdivl
mov
repnz
cmp
sbb
gs
sub
cmc
push
jno
ja
sbb
shll
add
daa
lock
jg
sub
int3
daa
pop
fwait
xlat
sub
push
test
pop
pop
adc
stc
imul
repz
pop
out
jno,pn
sub
xchg
or
ja
push
lods
inc
mov
fisubrs
inc
aad
daa
xorb
cwtl
enter
xchg
xchg
add
pop
jne
testl
stos
test
push
cmc
push
push
xchg
and
inc
loopne
add
testb
jp
testb
imul
loopne
push
pushf
adc
mov
mov
inc
aas
fwait
sbb
xlat
les
icebp
mov
cmc
fstpl
ficoms
push
mov
cltd
or
push
fmulp
cs
pop
sub
aaa
inc
push
pushf
sub
movsl
popf
xor
andb
xor
cld
in
jecxz
fnstenv
mov
dec
subl
mov
loopne
arpl
mov
adc
fwait
mov
cmp
jl
mulb
in
xchg
ja
movsl
xchg
mov
sbb
imul
mov
movd
mov
leave
aas
addl
mov
daa
icebp
cld
dec
cmp
mov
negb
movsb
mov
mov
lea
cwtl
fst
xchg
in
in
xor
mov
fwait
pop
addb
sub
xchg
or
loopne
sbb
or
decb
add
jg
out
scas
jb
test
imul
mov
rcrl
cld
in
call
xlat
or
add
xor
stos
sub
arpl
les
rcrb
inc
sbb
out
add
pop
inc
rcrb
aas
push
xchg
roll
push
or
xlat
cmp
xor
idivl
jno
xchg
clc
je
mov
scas
jge
hlt
outsb
pop
movsl
cmp
sbb
mov
ret
mov
xchg
int3
mov
out
dec
je
outsb
clc
hlt
jle
and
or
dec
cmpsl
mov
inc
xchg
js
rorl
xchg
xor
mov
fistpll
sub
movsl
xlat
push
jmp
mov
iret
cmp
pop
out
andps
sbb
in
jne
sbb
je
and
leave
xchg
cmp
sub
in
xor
je
add
scas
xchg
push
mov
das
lret
fstl
mov
ja
add
insb
mov
in
jb
js
mov
fnstenv
mov
and
cli
or
add
sbb
fldenv
mov
ljmp
sub
stos
ja
fildll
adc
and
movsl
or
inc
push
cmpsb
addr16
decl
lods
pop
gs
mov
js
xor
popl
inc
addr16
iret
cwtl
iret
lods
add
fstpl
leave
dec
xor
cli
pop
movsb
fsincos
into
fistpll
bound
mov
outsl
nop
add
aas
dec
pop
cmpsb
data16
sub
loop
pop
mov
fs
sbb
call
sub
adc
push
and
mov
or
adc
lods
adc
mov
pop
sarb
cld
push
in
jmp
jo
scas
xchg
mov
mov
and
jno
or
xchg
sbb
lds
sub
loop
xchg
or
dec
mov
aad
xor
add
mov
mov
sub
inc
pop
cltd
lcall
jecxz
into
pop
movsl
pop
lcall
jnp
jmp
pushl
es
mov
fs
cmp
push
dec
inc
pop
or
jns
jne
adc
clc
mov
shr
lcall
int
repz
mov
push
xchg
xchg
je
or
mov
mov
cwtl
fbstp
jecxz
inc
nop
icebp
lcall
mov
jecxz
pop
sub
aaa
mov
out
inc
mov
sub
int3
jns
push
call
pop
js
add
jle
mov
mov
inc
lahf
cmpb
andl
test
sbb
sub
std
cmp
cmp
aas
fmull
addb
cmp
adc
test
fsubl
sbb
jno
popa
inc
stc
repnz
and
arpl
cmpsb
scas
ja
cmp
notl
jae
lea
jecxz
pushf
push
adc
ja
inc
test
mov
test
sbb
dec
cmp
add
xchg
mov
inc
mulb
call
xchg
insb
sarb
fsub
fsts
inc
mov
cltd
faddl
sahf
pop
pop
pop
shlb
mov
hlt
ss
shrl
mov
push
jg
aaa
inc
xchg
xchg
dec
jnp
sbb
rolb
dec
imul
js
test
dec
cmp
and
adc
push
sahf
jnp
addr16
mov
cmp
cmpsl
cmp
xor
pop
sbb
repnz
mov
loope
je
movsb
cmp
cmp
je
adc
int3
out
sub
push
je
mov
and
jecxz
dec
negl
andl
enter
xlat
xor
cmp
subb
adc
add
les
adc
inc
sub
xor
and
xchg
mov
mov
and
cld
insl
gs
ds
insb
cld
and
inc
ret
arpl
mov
inc
in
cld
out
lret
sub
ja
dec
test
mov
cmc
sar
sti
in
jge
aaa
push
sub
push
aam
mov
sahf
stos
xchg
push
movsl
fdivrs
jo
xchg
cli
push
stc
in
add
adc
popl
das
and
lds
xchg
or
push
enter
loopne
mov
xor
fnsave
fwait
jnp
or
push
pusha
jb
mov
jae
cmp
sbb
sti
lock
call
shll
pop
mov
jno
adc
add
and
das
fisubrs
mov
pusha
sub
or
pop
cmp
mov
mov
inc
xchg
call
stc
push
cmc
jge
test
lods
int3
sub
jmp
xor
inc
sub
sti
sub
outsb
scas
xchg
lcall
mov
add
sbb
cmp
or
jne
lock
jb
test
mov
dec
inc
movsl
test
dec
and
movsl
fildl
mov
pop
cmp
pop
mov
mov
dec
popa
pushf
mov
test
and
cwtl
sbb
mov
push
pop
inc
sbb
in
ss
sub
pop
fcompl
pop
cmp
scas
cmp
sarl
lock
or
mov
xor
cmp
inc
lcall
jnp
sbb
inc
push
jmp
xor
xor
pop
gs
mov
mov
xchg
lods
in
clc
push
mov
fstl
cli
xor
fnstsw
outsb
xor
out
cmp
cwtl
or
cmpb
adc
inc
nop
lods
cmp
push
sub
xor
pop
fisubs
cmp
xchg
outsl
mov
or
pusha
push
repnz
sub
mov
ljmp
mov
push
sub
jae
mov
jno
mov
and
notb
cli
fcmovb
mov
jg
jle
cmp
mov
out
stos
in
push
dec
clc
imul
mov
add
rcr
fisubrl
xor
add
jmp
call
into
pop
mov
pushf
hlt
iret
shll
jno
mov
sbb
lahf
push
add
cmp
subl
fcompl
imulb
loopne
jb
clc
jp
icebp
in
mov
inc
int3
xlat
fxch
icebp
xchg
jnp
call
in
xchg
ret
rcll
in
cmp
pop
mov
pop
sub
mov
sahf
mov
mov
adc
dec
js
mov
push
inc
test
mov
sub
mov
push
add
ja
pop
cmp
mov
inc
out
pop
fcmovne
imul
pushf
add
fwait
adc
mov
shrb
lahf
ja
mov
inc
mov
gs
cli
and
jo
cmc
mov
xchg
jns
bound
lret
xchg
pusha
mov
jns
ret
adc
das
sub
pop
cwtl
arpl
testb
jnp
mov
cmp
shlb
negl
outsb
shl
aas
or
and
mov
rcl
pop
sbb
and
pop
mov
sahf
mov
mov
stos
cld
cmp
mov
out
ret
ljmp
and
sub
std
mov
sub
push
int3
mov
mov
jne
jo
mov
xchg
test
mov
or
push
cld
mov
or
mov
jmp
add
repz
pop
inc
scas
sbb
jmp
pop
mov
cmc
adcb
loopne
add
cmp
stos
or
orb
aaa
mov
adc
jbe
pushf
dec
cmp
mov
fistpll
movsb
int3
jg
push
icebp
mov
push
sbb
sbb
fdivrl
or
fistl
adc
es
sbb
pop
pop
xchg
jp
int3
scas
and
fisttps
mov
fwait
dec
pushf
add
out
push
add
pop
aad
enter
pusha
leave
test
adc
aas
fnstcw
lock
jo
test
ss
mov
and
mov
inc
add
sbb
mov
fcmovbe
mov
dec
push
test
xchg
pop
cmpsl
lods
popa
inc
jl
cli
int
aam
int
inc
sub
dec
fdivrs
clc
rclb
add
add
ds
cmpsl
or
cmp
test
pop
xor
or
xchg
xchg
das
idivl
jbe
mov
xchg
mov
xor
mov
cmp
dec
xor
shlb
and
dec
bound
test
mov
gs
add
sub
mov
lcall
mov
outsb
stos
fs
ds
lock
test
add
lods
in
in
lock
push
out
xorb
pop
ds
or
and
stc
xor
dec
dec
in
cvtps2pi
or
test
fmul
fdivr
sbb
loop
test
ret
test
hlt
mov
cltd
adc
xchg
jge
loop
sbb
lret
pop
jmp
outsb
push
pop
lahf
pop
xchg
mov
sbb
and
adc
sub
push
sbb
imul
mov
xor
pop
push
daa
or
out
add
push
fimuls
xor
mov
pop
cmpsb
loopnew
imul
popf
or
xchg
repz
dec
push
push
sbb
gs
jmp
adc
and
repz
aas
inc
out
sti
mov
jmp
push
loop
sarb
stos
pop
sub
cmc
loope
jbe
sbb
std
pop
loopne
jg
push
popa
xor
adc
adc
jle
dec
mov
shr
and
das
push
mov
or
std
loopne
or
mov
add
xchg
inc
mov
fnstsw
popf
in
aas
ffree
nop
inc
rolb
ss
add
jle
popf
adc
daa
mov
lahf
rolb
cli
sbb
add
imul
into
gs
sub
push
js
or
cld
imul
negb
data16
enter
cmpsb
mov
insb
movsb
inc
lret
push
dec
mov
sbb
dec
std
mov
adc
lock
int3
xchg
dec
stos
test
dec
mov
xchg
gs
cmpsb
mov
jle
test
mov
imul
sub
cltd
cltd
lcall
jecxz
jne
jecxz
adc
mov
pop
pusha
add
fisttpl
into
sahf
loope
lds
or
aas
fcomp
mov
mov
loop
xor
lahf
cmp
shlb
cs
es
pop
lock
divb
mov
cmp
dec
sbb
pop
call
arpl
pop
mov
xchg
outsl
and
pusha
mov
test
cltd
pushf
out
mov
push
and
lret
nop
lods
aad
or
xor
out
mov
xchg
loope
mov
les
je
cli
and
push
and
adc
add
popf
movsl
dec
loope
iret
mov
mov
movsl
and
pop
int3
shlb
cmpsb
pop
ss
and
xlat
push
mov
jl
fstps
sub
adc
cmc
inc
fildll
cmp
jge
inc
shrl
mov
rclb
shll
xor
jne
shl
mov
inc
inc
adc
cmp
push
fsubr
xchg
sbb
jne
pop
jle
xchg
pop
adc
add
popa
lret
add
addr16
daa
xlat
jns
cmpl
pop
jb
stos
inc
in
lea
or
push
sub
xchg
mov
out
aaa
cs
xchg
xor
or
out
aam
mov
inc
in
fnstenv
ror
ja
adc
mov
jp
dec
add
mov
lock
push
testl
ja
dec
push
stc
int
call
xor
jl
xchg
fs
sbb
xor
jp
icebp
pop
sti
mov
fwait
stc
mov
rorb
add
pop
xchg
cmp
lea
inc
addr16
adc
push
cmp
fmuls
jge
or
cmp
mov
out
add
hlt
add
lods
call
cmc
mov
movsb
xor
mov
inc
mov
int
roll
mov
ret
cwtl
mov
xor
pop
jo
add
push
adc
insb
mov
mov
fmuls
and
out
xor
xor
lods
push
imul
incb
iret
push
pop
sbb
insb
pop
inc
mov
fldt
pop
imul
push
push
pop
sub
popa
jae
fisubl
int3
out
jp
adc
jp
mov
xchg
mov
pop
sbb
or
sbb
bound
icebp
out
fsubs
sub
lret
push
push
mov
mov
insb
lret
xchg
push
or
les
and
sbb
mov
xchg
mov
lahf
push
fidivs
lcall
js
sub
dec
or
cmp
add
sti
xchg
pop
and
mov
and
imul
sti
pop
jl
lds
int3
push
xor
popw
sub
pusha
xor
mov
adc
test
subl
in
cmpsl
cmp
shl
add
mov
or
mov
roll
shll
dec
pushf
mov
scas
add
fisttpl
out
imul
aam
cmp
pop
shlb
pop
notl
mov
popa
dec
in
cmp
pusha
mov
cmpsl
mov
cld
js
mov
mov
sbb
jae
leave
lds
js
out
das
xchg
mov
pop
or
mov
inc
mov
roll
sbbb
repnz
enter
push
push
push
ret
sbb
mov
fnsave
mov
inc
fmuls
sbb
rcrb
pusha
cmpsb
pusha
std
dec
inc
andl
addb
push
sahf
out
stos
es
push
cmpsl
xor
jae
divl
fbld
dec
mov
mov
jmp
leave
add
xor
push
xor
insb
cli
jno
add
das
dec
inc
cli
test
jnp
xchg
or
push
fs
lret
lcall
adc
into
outsl
outsb
nop
cmp
aam
mov
push
out
inc
in
jnp
adc
or
mov
iret
movsl
adc
mov
jge
or
xchg
lock
inc
mov
lcall
dec
fstpl
rcr
lock
lods
xor
or
das
mov
fildl
lods
push
inc
pop
xlat
mov
cwtl
cmp
cmp
mov
mov
push
or
repz
pop
int
mov
subb
inc
and
inc
nop
in
or
sbb
xor
stos
movsl
add
jmp
in
mov
mov
into
stos
sar
dec
outsl
jecxz
stc
movsb
jg
arpl
push
cmp
jnp
dec
dec
sub
add
pop
ret
fisttpl
inc
aad
adc
push
xor
xlat
fucomp
push
pushf
lds
loope
and
pop
push
cli
loopne
push
repz
movsl
lahf
adc
ljmp
mov
fsubrl
lods
sub
ret
dec
sub
lods
push
or
mov
outsl
or
push
lods
in
rclb
aam
out
pop
lret
lods
add
inc
cmpsb
mov
jl
leave
jl
sub
outsb
jle
and
stos
inc
jmp
fcom
scas
xchg
or
out
cltd
aaa
add
out
lock
jp
jns
lahf
es
aam
call
scas
vmwrite
movsb
outsb
mov
mov
ficompl
in
fcmovne
das
jp
addb
shll
arpl
or
sahf
lds
xor
aas
js
leave
add
pop
movsl
ja
ficoml
ljmp
movsb
jbe
mul
push
add
ficomps
or
sahf
lods
pop
das
ss
mov
inc
push
ljmp
push
xchg
cwtl
fmul
xor
out
push
or
adc
and
movsb
and
mov
push
insb
inc
mov
jo
push
fwait
shlb
les
push
push
arpl
cmp
sbb
sbb
dec
jmp
std
xchg
arpl
mov
cld
lods
in
cmpsl
out
stos
xlat
shlb
fwait
add
arpl
aaa
mov
outsl
push
push
sub
jp
roll
stos
aad
sub
stos
sbb
popf
mov
jae
mov
fistpl
pop
aaa
lea
fistps
dec
mov
pop
mov
fmul
mov
or
ds
mov
pop
push
mov
cmpsl
pop
and
jnp
cltd
outsl
pop
add
popa
jno
mov
adc
mov
mov
cmp
cli
and
int3
jb
mov
add
push
xchg
aas
mov
push
mov
int3
add
sbb
xchg
rorl
jno
lret
in
lods
sub
xor
pop
xor
mov
jo
mov
loop
sub
jnp
cltd
inc
mov
ds
mov
adc
mull
repnz
pop
int
pop
in
loop
test
push
xchg
out
or
pop
sub
cltd
mov
ret
hlt
xchg
jae
mov
rol
sub
rclb
fnsave
pop
test
sub
arpl
cld
pop
xor
in
or
or
loope
fmuls
nop
sbb
popf
mov
adc
addb
pop
out
push
jecxz
inc
data16
cmp
mov
cmp
xor
test
out
sbb
and
dec
push
nop
pop
xchg
mov
js
and
lods
arpl
fiaddl
inc
dec
cmp
loope
cmp
out
dec
mov
adc
aam
in
les
mov
mov
xor
in
imul
ja
mov
stos
test
mov
fsubrs
nop
scas
jecxz
jnp
cmp
pop
rorb
or
mov
push
dec
inc
push
cmp
test
movsb
add
inc
or
mov
ja
fidivs
xchg
or
icebp
inc
hlt
or
push
les
out
and
push
jns,pn
mov
jecxz
cld
mov
pushf
mov
sahf
not
scas
fidivrl
push
pop
cld
lahf
push
add
sbb
jge
sub
lcall
cmpsl
xor
imulb
rcr
sbb
stc
cmp
pop
movsl
mov
sub
or
sbb
and
push
mov
push
jbe
pop
inc
jne
in
imul
scas
sbb
mov
lock
leave
loop
lret
fistpll
int3
cld
cmp
push
xorb
lahf
in
icebp
jno
or
push
cmp
pop
or
ds
inc
add
mov
adc
mov
inc
mov
sti
aas
repz
addb
arpl
inc
push
xlat
xlat
mov
and
push
into
loopne
outsb
pop
inc
xchg
aaa
lods
lea
jecxz
pop
add
pushw
jne
lcall
jecxz
aad
aas
sbb
out
pop
mov
xlat
repnz
or
adc
popf
movsl
and
or
push
adc
cwtl
in
xchg
jnp
cmpsl
cli
in
cmp
adc
and
lods
sub
fidivs
rorb
mov
jg
push
push
flds
and
pop
mov
and
enter
ss
shll
movsl
push
test
ror
push
cmp
pop
xor
das
rcrl
sbb
sarl
scas
mov
leave
pop
test
repnz
inc
mov
lds
jno
add
adc
dec
rcl
cld
aad
add
imul
push
es
mov
loop
leave
lock
scas
jle
sub
adc
mov
add
dec
outsb
ljmp
loopne
mov
inc
lahf
stc
mov
fsubl
or
leave
sbb
aaa
loopne
jae
mov
add
dec
loop
jecxz
sbb
and
pusha
movsl
inc
jl
js
cli
mov
mov
rorb
mov
mov
inc
push
cmp
or
add
lock
fsubrs
scas
test
enter
or
fcmovnb
or
sbb
lock
xchg
cmp
aaa
sarl
mov
add
insl
fs
mov
loop
hlt
sahf
leave
cld
leave
and
inc
jbe
insb
cmpsl
lods
in
aas
jae
pusha
push
cmp
hlt
data16
jnp
mov
sbb
lock
out
xchg
mov
mov
shlb
int
push
cmpsl
fadds
test
or
mov
std
sub
fdiv
mov
mov
loopne
in
adc
movb
or
push
push
arpl
xor
jmp
fsubl
sbb
sbb
aad
mov
sti
sub
clc
dec
jnp
andl
test
inc
test
loopne
pop
cld
movsb
push
fs
mov
mov
jno,pn
pop
std
inc
test
clc
scas
dec
scas
insb
leave
cmp
clc
out
push
push
test
orl
xor
sbb
adc
test
leave
add
jecxz
mov
and
mov
push
push
pop
and
jae
aam
bound
push
or
lcall
sbb
cwtl
inc
push
jp
inc
mov
xchg
sbb
cmpl
pop
xor
adc
jmp
lar
and
lret
es
xor
clc
call
ror
sbb
xchg
jb
add
lea
shlb
cmp
jecxz
mov
lret
loopne
neg
mov
jne
sbb
shrl
nop
inc
jo
lea
pop
mov
ret
inc
sub
outsb
ret
repz
pop
ljmp
mov
dec
inc
pop
push
lds
shl
and
pop
pop
in
mov
mov
and
addb
jae
push
sub
adc
and
pop
in
xchg
mov
out
xchg
sahf
xchg
loope
push
bound
dec
outsl
pop
mov
push
cwtl
sbb
sub
dec
mov
jae
sub
jmp
enter
das
addl
scas
out
xchg
push
push
and
ret
sbb
dec
movsb
push
jnp
xchg
sub
mov
divl
cmp
adc
jo
push
inc
xchg
add
mov
mov
insb
mov
popa
ret
test
aaa
xchg
push
imul
bound
popa
cmc
adc
ja
sbb
or
imul
dec
call
sub
mov
cmp
das
xor
movsb
push
test
or
xchg
sbb
dec
ds
lcall
xor
cltd
daa
pop
or
dec
scas
inc
mov
cmp
mov
cmp
ret
add
in
cmp
loopne
fdivr
fwait
shl
pop
adc
scas
loop
adc
push
aaa
push
xlat
add
shl
in
mov
and
es
jns
jnp
jecxz
xor
dec
popa
aaa
in
mov
hlt
movsl
inc
inc
inc
mov
fdivl
dec
sub
sbb
movsb
test
addr16
cmp
addr16
pop
mov
sahf
aaa
inc
cli
cltd
js
cmp
insb
cmp
xchg
dec
icebp
xchg
stos
scas
test
in
cmp
aaa
aas
ljmp
iret
adcb
enter
pop
sub
sub
clc
inc
pop
call
shr
push
push
cwtl
xor
stos
mov
mov
enter
inc
das
bound
inc
stos
xor
clc
fstpt
pop
inc
call
xor
push
or
pop
jo
sbb
pop
pop
cmp
adc
dec
hlt
mov
sub
das
mov
and
enter
and
jnp
testl
push
pop
in
cld
jno
ljmp
sbb
inc
lret
inc
xlat
jg
mov
jbe
fstps
dec
cvtpi2ps
inc
movsb
nop
rorl
and
ss
aas
sub
and
adc
jo
dec
push
or
pushf
push
imul
lahf
adc
into
push
ja
repnz
sbb
mov
loopne
mov
cmpsl
roll
mov
add
and
mov
in
fst
xchg
cs
xchg
rolb
aas
std
out
call
mov
shll
or
pop
and
mov
int
fstl
jno
imul
test
popa
xchg
hlt
jbe
push
or
push
into
cmc
xlat
dec
repz
push
enter
fldl
jnp
inc
mov
dec
cmp
mov
sbb
cmp
mov
mov
dec
push
sub
data16
fldl
sub
adc
cmp
mov
xchg
push
pop
movsb
xor
cld
cmp
mov
mov
adc
repnz
jno
xchg
scas
popa
pop
push
mov
mov
int3
sarl
imul
std
inc
mov
push
insl
push
xorl
out
outsl
push
xchg
js
ret
cltd
xchg
jge
fsubr
sbb
mov
xchg
sub
jne
dec
sub
fs
mov
add
les
cmp
aad
mov
mov
push
loopne
cmp
fcmovnu
cmpsb
daa
scas
xchg
cmp
sbb
shrb
and
shl
js
mov
xor
mov
mov
fdivrl
daa
fsubs
sbb
adc
jg
das
lods
mov
jnp
xor
mov
sub
pushf
lret
add
testl
daa
lock
js
xor
add
mov
xchg
in
test
int3
jmp
push
dec
out
mov
enter
jns
adc
out
adc
jb
push
test
test
jne
cmc
inc
push
dec
xchg
jp
jl
rcl
addr16
add
sbb
and
in
xlat
dec
sti
inc
cmpsb
lahf
cmp
aad
fwait
sahf
push
push
mov
sti
in
jnp
in
push
outsb
fcompl
call
fnstcw
subb
imul
imul
add
test
shl
aaa
out
and
sub
pop
lret
rclb
adc
pop
push
ja
lret
sub
orb
cmp
or
cs
mov
jne
stos
pop
ret
sbb
cmp
add
sub
jmp
loopne
and
rcr
push
jl
mov
push
aad
bound
push
into
sub
jle
cmp
add
pop
mov
dec
push
jae
push
cwtl
jae
xchg
mov
cwtl
iret
or
stos
gs
xchg
imul
hlt
int
sub
mov
enter
pop
mov
mov
mov
in
rcl
jp
mov
dec
outsl
adc
imull
nopl
pop
jb
sarb
or
lock
cmpsb
ret
mov
and
add
add
add
cmp
mov
lea
jge
stos
push
in
clc
out
imul
add
cmpsb
or
xlat
cltd
jae
pop
sahf
jnp
and
dec
xor
movsl
and
jb
mov
pop
gs
add
test
adcl
push
xor
push
xchg
mov
int
cs
lret
xchg
xchg
mov
adc
jge
mov
pop
leave
mov
pop
and
and
leave
mov
pop
jg
fistl
adcl
lods
and
sub
int3
mov
out
aad
packsswb
insb
out
mov
dec
sti
add
adc
dec
js
outsl
jecxz
das
add
js
xchg
cmpsl
inc
add
shll
adc
notb
mov
add
sub
inc
addr16
pop
dec
xchg
sbb
dec
inc
iret
loopne
add
lods
mov
adc
jno
jmp
daa
mov
pop
pop
xchg
loope
movsl
loope
cmc
std
mov
insb
add
push
jmp
or
ja
setno
roll
frstor
ljmp
mov
sti
xlat
je
add
pop
jg
stc
fistps
popa
das
dec
outsl
in
mov
or
stos
ret
daa
clc
and
dec
in
push
cmpsb
sti
les
fdivr
js
cmp
in
jno
fidivrl
bound
pop
add
stos
mov
pop
or
movnti
cmp
jp
jp
add
cmpsl
out
adc
imul
sbb
in
mov
test
test
and
fbld
or
incl
shll
mov
scas
fnstcw
filds
pop
mov
imul
fbld
or
lahf
jle
ret
into
rclb
jmp
imul
popf
cmp
sub
insb
das
sbb
mov
adc
pop
pop
pop
sbb
jb
inc
jb
dec
aaa
stos
cli
ds
or
xchg
cmp
aam
bound
and
icebp
pop
mov
pop
idiv
push
call
mov
add
inc
mov
jbe
inc
popa
add
dec
cmpsb
adc
das
push
jne
adc
inc
mov
jle
pop
insl
bswap
ret
push
dec
jbe
mov
xchg
xchg
outsb
lock
push
cmp
jo
stos
pusha
cmpsl
fisubs
or
add
xchg
sub
imul
pop
das
inc
cltd
pushf
das
mov
aas
fpatan
scas
cmp
jne
adc
sbb
fidivrs
ss
call
mov
xchg
add
les
fadd
lock
ret
adc
test
popa
out
shrl
inc
or
loopne
outsb
push
int3
inc
and
jne
mov
adc
xor
and
mov
jmp
sahf
int
das
fbld
test
xor
mov
test
inc
push
sbb
cmp
shl
jne
inc
fs
or
dec
fistpll
cs
shll
cmc
pop
repnz
mov
sbb
test
sub
push
in
xchg
sub
cmp
ret
inc
lret
pop
mov
mov
xchg
and
jne
or
cld
cmp
adc
imul
xchg
bound
sarl
adc
inc
out
stos
adc
rorl
xor
add
inc
fldenv
push
inc
push
dec
icebp
push
sti
mov
imul
les
push
lods
xlat
xor
jp
cmp
sbb
dec
mov
icebp
add
add
jle
into
popa
or
popa
push
cmp
in
das
mov
sbb
js
out
lods
pop
enter
mov
fildl
xchg
dec
cltd
nop
push
scas
cmp
ret
in
movsl
mov
loope
cmp
ret
dec
cmp
jbe
cmp
stos
mov
leave
sub
imul
fucomip
pop
xor
or
jp
pop
jmp
pop
aaa
sbb
lds
xorl
andl
sub
popf
dec
gs
scas
dec
and
in
cmp
mov
pop
pop
jecxz
insl
push
imul
sub
push
rclb
out
fwait
dec
sbb
sub
sbb
loope
cld
shll
and
jae
push
imul
sub
dec
push
sbb
adc
inc
pop
cltd
rol
mov
and
sub
and
loop
rorl
out
mov
xchg
fidivrs
icebp
in
in
data16
stos
or
add
mov
movsl
icebp
lock
aam
pop
rorl
std
cli
jo
aas
in
mov
fldl
add
jno
push
pop
lretw
mov
push
push
ss
arpl
xorb
ds
cmp
scas
xor
or
callw
mov
lcall
shrb
bound
rcrl
ret
ret
pop
sbb
inc
inc
adc
lock
loope
pushf
aam
adc
addr16
sbb
push
es
lret
cmp
sarl
pop
dec
into
scas
adc
stos
adc
inc
push
jbe
jmp
in
sbb
popa
lods
pop
fbstp
xor
xchg
inc
xor
test
jmp
sti
aad
mov
pop
pop
add
push
gs
lods
fmull
mov
xchg
enter
xchg
pop
and
xchg
xchg
out
movsb
subb
xor
ja
jns
popa
fucomip
fstpt
jg
push
inc
rorb
in
sbb
imulb
mov
lock
mov
arpl
jae
imul
cmp
sbb
or
daa
addb
lret
mov
jne
sbb
fisttpl
fwait
ds
xchg
cltd
sbb
pop
dec
into
pop
lods
sub
out
jl
loop
pop
aad
pop
push
mov
pop
lock
aad
inc
xchg
into
jae
std
sub
iret
orb
dec
xchg
movsl
dec
and
cwtl
je
sbb
lahf
xor
add
aas
sub
leave
pop
fst
cmp
icebp
lea
dec
add
sti
incb
and
mov
cmc
xchg
fs
sub
cmp
jmp
mov
jne
movsb
mov
imul
outsl
cmpsl
ja,pt
sahf
jns
mov
pop
dec
cmp
xchg
and
push
rcl
js
dec
xor
fdivl
in
lods
mov
mov
imull
mov
mov
pop
and
pop
loop
jmp
push
scas
push
sbb
cmp
mov
loopne
roll
mov
arpl
imul
je
dec
sbb
adcb
cli
dec
call
push
fsub
test
jb
dec
aaa
sub
mov
ss
adc
test
movsb
insb
pushf
ds
xchg
dec
jl
push
or
std
dec
aas
or
idivb
sbb
pop
lcall
jne
outsl
sub
and
outsb
sbb
lret
cmp
pop
pop
mov
sub
jnp
xchg
adc
jge
aad
cwtl
pop
push
cmpb
add
scas
xchg
das
arpl
xlat
pop
ror
out
adc
inc
pop
xchg
ret
lahf
jno
add
lcall
scas
test
rclb
push
mov
or
std
mov
push
add
cmp
jp
mov
popa
in
and
sub
push
lahf
sbb
jne
sbb
sub
faddl
mov
push
popa
int3
adc
cmp
or
orl
mov
mov
pop
jl
cli
xchg
mov
stc
out
lcall
xchg
movb
jle
mov
insb
leave
push
test
mov
push
fisttpl
jge
jae
push
pushf
bound
adcb
ja,pn
mov
les
cmp
cli
adc
ljmp
xor
mov
fisttps
scas
lods
popf
lahf
mov
cmp
xchg
inc
adc
mov
test
and
push
out
mov
or
aaa
lods
aad
and
cmp
xchg
incb
mov
and
mov
fs
out
xor
stc
insb
pop
addl
sbb
pop
dec
mov
repz
data16
adc
ljmp
test
xchg
mov
jo
xchg
fdivl
js
std
gs
daa
xor
rcr
dec
out
ss
scas
add
sbb
cmc
pop
cli
mov
dec
jno
enter
fisubl
fcmovb
ss
iret
popf
mov
in
inc
dec
das
mov
rolb
jg
xchg
xor
mov
dec
sub
outsb
fsubp
add
test
dec
inc
test
sub
and
lods
cld
jns
popl
pop
mov
lock
movsb
mov
sti
mov
gs
imul
mov
xor
js
add
js
pushf
xor
xorb
out
cmp
arpl
add
pop
cli
shl
pushl
jne
fdiv
jnp
pop
push
scas
mov
cmpsw
add
push
mov
in
xor
sub
lea
ja
or
or
pushf
pushf
test
loop
adcl
mov
add
push
lds
ret
push
mov
hlt
and
mov
fidivs
cmp
dec
push
ja
inc
loop
push
roll
stos
xchg
sbb
mov
out
or
incl
add
pop
jns
clc
push
push
ljmp
cmp
pop
sahf
or
call
ja
dec
shll
das
mov
cmp
push
ja
push
adc
scas
sub
xchg
imul
sub
hlt
jns
pop
test
lret
mov
adc
fiaddl
dec
cmp
and
stc
and
pusha
push
sbb
leave
push
sbb
or
pop
movsb
test
jecxz
fdivl
rorl
mov
cmp
sbb
cs
fists
out
mov
mov
push
adc
clc
loopne
insl
add
sar
pop
stos
stos
add
js
cli
mov
addr16
hlt
xchg
lret
insb
jmp
lahf
negb
lcall
xchg
repz
imul
imul
repnz
sub
sbb
inc
jle
dec
mov
mov
in
push
pop
fidivs
decb
jp
or
sbb
loope
and
mov
jnp
add
iret
mov
sbb
xchg
cmc
aaa
and
push
jne
mov
jae
or
addr16
sbb
pusha
outsb
loopne
sub
outsb
mov
lods
sub
or
push
dec
add
pop
scas
and
cld
ljmp
outsb
or
jl
and
cmc
and
stc
in
mov
out
jle
cmpsl
shl
test
xchg
imul
mov
dec
fwait
push
cli
dec
insl
cmp
mov
je
movsl
call
or
jl
test
out
xchg
lock
mov
mov
lods
fwait
popa
cmp
jbe
out
aaa
and
test
push
rcll
and
inc
inc
push
loop
fsubs
push
js
test
loop
leave
dec
cli
pop
dec
xchg
push
lds
or
add
arpl
cmc
je
push
jp
mov
lods
shrb
test
jle
sub
daa
ret
lods
or
jbe
pop
cs
daa
push
sbb
adc
fs
cltd
mov
popf
and
lcall
loopne
in
cld
adc
mov
and
fcompl
xor
cmpsl
in
pushf
xchg
fdiv
inc
sarl
xor
mov
xchg
and
cld
sbb
cmpsl
insl
stos
cmp
xchg
push
popa
adcb
lret
cmc
xchg
pop
imul
out
enter
mov
pop
int
or
push
repnz
in
mov
cmpsb
lahf
nop
jg
dec
loope
inc
push
push
pop
outsl
aad
inc
test
pop
int
dec
data16
xor
push
jns
mov
cltd
loopne
incl
cmpl
mov
push
in
mov
fdivrs
cs
add
sbb
or
scas
pop
adc
ss
xchg
xor
adc
adc
or
push
popf
clc
mov
cmp
imul
push
in
xchg
shr
jbe
out
inc
cmp
or
int3
push
or
mov
mov
out
adc
int3
cmp
cltd
jg
jl
pop
std
nop
inc
mov
or
hlt
loop
ret
add
aas
cwtl
mov
lret
inc
out
aas
xlat
test
dec
lret
sti
cmc
rclb
notb
or
enter
adcb
dec
lcall
loope
xchg
cld
sub
xchg
insl
jg
in
imul
xor
xchg
mov
adc
inc
fcompl
and
push
jno
insb
insl
ljmp
lfs
jg
and
insl
mov
outsl
lahf
data16
jno
lcall
notb
shrl
or
fldenv
lds
and
inc
cltd
add
xchg
push
xor
pop
pop
data16
dec
mov
xchg
mov
xchg
lea
les
shrl
cltd
cli
mov
and
ret
lods
lock
bound
stc
and
hlt
pop
jle
sub
rcrl
fwait
add
jge
cld
adc
push
nop
movsb
inc
xchg
scas
xlat
imul
stc
ljmp
ret
in
mov
push
push
mov
ja
inc
es
pop
cmpsl
in
fwait
sar
mov
arpl
pusha
and
mov
cmpsb
xorb
xchg
orl
repz
add
sbb
jbe
lahf
lds
sbb
outsb
and
jb
jns
cwtl
lds
fs
mov
adc
jecxz
jg
cmc
insb
push
stc
int
xor
mov
test
dec
jns,pn
repnz
cli
fstps
fildl
jmp
in
or
movzwl
push
fcmovb
xchg
push
add
les
xchg
leave
mov
jmp
dec
mov
lods
inc
dec
sub
ds
test
aaa
jecxz
mov
push
es
repz
push
adc
mov
mov
cmpsl
cld
cs
inc
rorl
push
mov
cmpsl
xor
xor
add
cld
xchg
imul
out
lods
in
ljmp
icebp
in
fstl
out
adc
lods
dec
shll
sub
xchg
addb
lock
pop
dec
mov
fwait
or
mull
and
subb
push
out
lret
fisubrl
and
aas
enter
fldenv
ds
and
dec
mov
jno
fstpl
mov
lcall
xchg
insl
jg
mov
sbb
sbb
std
sahf
mov
cli
sub
repz
das
or
dec
push
push
jg
popf
xchg
cwtl
push
dec
sub
pop
or
jb
sahf
sbb
dec
and
clc
add
lea
jbe
xchg
in
je
jbe
ret
adc
pop
les
or
cs
inc
stos
or
loope
fildl
scas
push
push
xchg
push
and
xor
into
shll
push
fidivrs
subl
push
jmp
inc
sub
dec
lods
jae
nop
lea
push
or
lock
mov
add
jl
arpl
sbb
inc
jb
mov
popf
push
pushw
test
dec
dec
scas
xchg
cld
cmp
lea
xchg
mov
pop
imul
aam
arpl
movsb
fmulp
or
jp
outsl
mov
dec
addr16
cmpsb
sbb
sub
loop
pop
xchg
aas
xchg
loopne
mov
mov
pushf
in
das
mov
mov
lcall
fldenv
xchg
ss
fwait
mov
jns
lea
xlat
addr16
jb
lds
rcrb
or
pushf
pop
inc
push
jne
xchg
lret
sub
rorb
stos
jno
cmpsl
cmc
mov
adcl
aas
add
and
sub
data16
mov
add
or
int
pop
push
xchg
hlt
mov
cmpsb
xor
loope
pop
add
call
mov
ret
push
das
sub
iret
pop
mov
inc
mov
lock
cmp
cmp
or
dec
shlb
mov
insl
insb
notb
rcl
push
mov
add
xor
xchg
and
jne
jb
fs
push
dec
and
stos
sbb
xchg
pop
dec
fwait
sub
mov
insl
rol
xor
je
in
vrcpps
rcll
or
pop
out
imul
mov
xchg
jo
xchg
sbb
ret
mov
xchg
mov
dec
dec
adc
aas
inc
inc
or
ss
lock
rcl
adcl
xchg
pop
stos
dec
push
add
push
push
push
aad
sub
inc
scas
scas
mov
lcall
cmp
cmp
jmp
das
fisttps
jbe
loope
xchg
shll
mov
adc
scas
xchg
lahf
pusha
mov
mov
push
fdivr
inc
sub
sub
jg
push
mov
sahf
repz
or
push
testl
jle
sub
jae
inc
adc
or
scas
addr16
aad
lret
xor
mov
mov
jle
pop
sti
jecxz
sti
dec
push
cmp
ja
andl
dec
sub
clc
mov
fisttps
pop
push
cmp
jmp
cmpsl
or
push
xchg
xchg
outsb
push
push
cmp
and
adcb
mov
outsl
xchg
orb
mov
mov
inc
and
dec
ret
enter
mov
cld
mov
lods
jbe
call
and
mov
push
sbb
add
js
hlt
leave
xlat
jl,pn
ljmp
rcr
rolb
mov
mov
pop
loop
jecxz
pop
adc
and
lods
lods
xchg
sub
movsb
xchg
test
sbb
or
leave
jecxz
andl
cmp
push
test
push
out
add
sub
mov
mov
jp
mov
in
outsl
dec
out
sti
pop
jle
mov
arpl
sub
sbb
aad
inc
insl
pop
push
jge
cmpb
pop
shr
ss
jo
cmp
pop
push
dec
dec
lret
das
pop
mov
mov
js
push
mov
leave
insb
out
aas
ljmp
jp
mov
xchg
pop
jecxz
and
sahf
arpl
lret
rcrl
sub
jl
dec
add
mov
dec
cmp
xchg
jmp
sbb
adc
xchg
sub
push
sub
test
sub
lcall
dec
adc
jecxz
sub
mov
sub
int3
incb
pop
and
push
add
pop
popf
daa
loop
stos
scas
es
inc
in
mov
cmpl
add
insl
or
add
leave
dec
insb
mov
sbb
arpl
adc
adc
icebp
ljmp
subl
movsl
cli
xchg
mov
mov
jb
mov
enter
insl
in
aad
aaa
cmp
dec
jno
pushf
lahf
cmp
movsl
cmpsb
mov
cmp
and
aaa
rolb
xchg
xchg
scas
pop
jne
mov
shrl
mov
mov
fs
rol
xlat
cmp
add
or
imul
test
cvttps2pi
mov
push
mov
jb
mov
sti
jne
xchg
inc
call
mov
in
inc
sub
jns
test
stos
rcrb
mov
fcompl
push
loop
push
xor
aas
mov
pusha
inc
mov
sbb
fsubrs
and
inc
lock
and
addr16
sub
mov
inc
push
test
imul
dec
stos
mov
and
xor
xor
mov
notl
fwait
in
or
mov
in
pop
icebp
cmp
add
mov
pop
stos
lods
fcomp
adc
pop
in
mov
inc
nop
and
jb
arpl
out
fdivl
rol
pop
inc
adc
mov
test
ljmp
inc
and
loopne
lea
bound
inc
notl
or
adc
addr16
or
rcrl
mov
les
jb
into
addr16
notb
sbb
out
inc
xchg
daa
jp
cmp
sub
daa
movzwl
dec
inc
jns
ficoml
pusha
xchg
shlb
pop
ret
push
pop
rorb
sub
lea
dec
test
mov
stos
test
push
fdivs
sahf
outsb
out
xor
movsl
movsl
sbb
jp
jnp
cs
mov
imul
aas
mov
sti
fs
sbb
mov
adc
ja
or
adcb
dec
pop
vunpckhps
push
hlt
pop
or
loope
inc
int3
in
xchg
in
push
lds
mov
jns
mov
subl
dec
sbb
cmp
es
fbstp
lock
ss
lret
stos
int
lahf
sub
aaa
test
jbe
loope
sbbl
or
xlat
les
test
cmpsb
pop
sti
out
add
fisttps
nop
loopne
int3
lds
jecxz
lahf
mov
jo
addr16
or
les
inc
rclb
mov
jns
outsl
cmpsl
stc
int
cmp
add
jmp
xor
mov
xchg
std
ret
shlb
test
call
lret
mov
gs
fldenv
mov
inc
cmc
lds
xor
xchg
add
lods
and
or
fcomp
out
fbstp
pop
cli
jmp
sbb
dec
push
cmpb
dec
and
rcrl
rclb
fstpl
sti
scas
fxtract
fdivrl
adc
push
lahf
repnz
into
ja
pop
ss
mov
shll
mov
push
pushaw
fsubp
ret
shlb
cltd
and
pop
addr16
xchg
mov
lock
lahf
mov
mov
push
inc
mov
adc
mov
push
inc
push
ffreep
jle
leave
ret
sub
loope
ss
loop
adc
int
mov
movsb
push
inc
pop
sub
mov
lds
or
lea
cmp
inc
and
aaa
add
adcl
daa
adc
push
orb
and
push
es
mov
dec
pop
pop
and
into
es
in
push
les
lret
cmpb
mov
or
in
lret
mov
push
loope
ljmp
push
inc
dec
mov
pushf
les
sbb
ljmp
jb
mov
pop
lods
jns
pushf
mov
cld
iret
inc
cmpsb
inc
sub
or
inc
xlat
enter
cltd
sbb
adc
xor
pop
int3
mov
fistl
iret
ret
arpl
int3
cltd
jecxz
outsl
das
mov
sbb
mov
je
sahf
jno
xor
pop
inc
popa
shrl
outsb
es
movsl
fildll
push
push
xchg
jg
adc
or
icebp
in
out
push
cmp
xor
xor
subl
adc
data16
inc
popf
sbb
popa
or
mov
rcll
ja
dec
push
mov
and
adc
enter
xchg
and
in
pop
xchg
lods
cmpsl
sub
arpl
shrl
mov
popf
gs
fwait
cmp
mov
fmul
or
aas
xchg
arpl
pop
and
ja
fdivl
mov
in
xchg
cmp
mov
cwtl
cld
or
mov
sbb
xchg
into
push
push
jp
add
into
in
popa
lock
aam
out
out
pop
popf
mov
xor
pop
push
cmp
xor
loopne
popa
push
xchg
push
xor
pop
mov
inc
daa
mov
shll
add
xchg
xchg
sbb
stos
nop
fwait
hlt
xchg
add
scas
push
lret
mov
jl
loope
push
mov
xchg
sbb
dec
popf
rcll
mov
sbbl
and
pop
outsb
mov
fsts
jmp
repnz
int3
and
imul
popf
fwait
rolb
rolb
fstl
sub
in
outsb
in
or
and
decl
pop
mov
pop
sbbb
or
inc
dec
xchg
or
stos
sbb
jl
aaa
subl
ficoms
loop
xor
std
jecxz
cli
pusha
imul
add
xor
roll
pop
cltd
or
sub
in
xchg
cld
imul
pop
popa
dec
bound
fisttpl
cmp
rcrb
scas
jae
mov
xchg
sbbb
scas
push
out
cmc
aad
jecxz
scas
xchg
jb
mov
add
lcall
sti
mov
and
lcall
leave
cmp
lret
xor
sub
cwtl
out
xchg
sbb
int3
je
and
or
xchg
pusha
aad
pop
insb
cld
push
pushl
leave
xor
insb
popa
jno
fcmovne
mov
lcall
aaa
cmp
lea
add
test
mov
test
addr16
xchg
or
xor
pop
and
mov
and
nop
mov
scas
repz
repz
mov
inc
xchg
mov
add
xchg
ds
out
sub
movsl
ret
daa
or
mov
dec
mov
pop
scas
inc
hlt
adc
sbb
xor
pop
push
mov
mov
push
or
mov
inc
inc
iret
clc
adc
push
lcall
imul
cs
imul
push
fnsave
mov
rclb
sub
pop
push
fistl
mov
cltd
xor
sbb
xchg
addr16
imul
mov
mov
fdivrs
adc
repz
leave
int3
inc
xchg
sbb
pop
dec
mov
sbb
es
inc
adc
and
push
ss
xor
into
incl
lods
arpl
mov
fdivrs
sbb
daa
inc
and
xchg
xor
cmp
jo
es
repnz
lret
push
icebp
dec
push
sbbl
scas
and
lret
dec
pop
gs
cs
negb
test
mov
call
sbb
mov
clc
loopne
call
enter
call
ror
jns
js
adc
push
scas
das
mov
xchg
mov
lret
je
add
inc
sub
and
and
out
call
inc
push
hlt
xchg
stos
inc
sub
inc
stos
imul
test
loope
jp
mov
mov
adc
insb
push
mov
cmp
scas
int
cmp
repnz
cmp
xchg
out
cmp
push
adc
shlb
mov
aaa
xor
dec
cs
xchg
sub
dec
mov
data16
test
adc
push
sub
adc
add
inc
out
rorl
sbb
xor
sbbb
pop
iret
and
jp
in
in
cli
scas
shlb
jl
mov
das
mov
cmpsl
pop
sbb
mov
repnz
push
fidivs
mov
pop
mul
fbstp
push
out
jp
sbb
or
jle
mov
mov
scas
pop
lock
sbb
push
ds
push
dec
ljmp
push
mov
sti
push
addl
cmpsl
loop
xchg
mov
ret
inc
cmpsl
mov
lcall
int
imul
mov
jle
sub
mov
add
in
ds
dec
push
xchg
mov
mov
imul
sub
mov
mov
in
out
enter
xchg
xchg
mov
test
cltd
fwait
add
add
jle
outsl
scas
into
repz
mov
xor
int
xchg
jbe
xor
repnz
test
addr16
scas
test
adc
push
lock
adc
pushl
mov
add
shll
fisubs
ljmp
adc
mov
out
out
jle
in
pop
movb
inc
js
add
and
xchg
dec
push
ja
sbb
addr16
mov
test
jl
fistps
or
test
jle
std
enter
mov
mov
daa
aam
imul
stos
sbb
cli
xor
adc
and
movswl
ljmp
xor
pop
lret
cli
cmp
lea
pusha
lret
dec
mov
ror
sti
es
push
adc
dec
pop
cmpsl
ret
push
test
xchg
ja
imul
mov
lahf
stos
pusha
iret
mov
pusha
sbb
mov
xchg
pop
fs
dec
scas
aam
enter
inc
ficoml
and
ss
pop
mov
leave
fsubrl
call
jnp
jns
dec
fs
arpl
sub
push
and
repnz
addr16
pop
fwait
imul
sub
sub
cmpsl
pop
mov
and
dec
shr
mov
xchg
jno
sub
ja
icebp
or
mov
and
out
mov
xchg
fcoms
jmp
add
or
fists
pop
cmp
movl
in
fs
sti
sbb
fistps
aas
jle
pop
sbb
mov
aam
addr16
jns
xchg
xor
fisubl
sbb
push
push
cmp
das
fdivrp
xchg
mov
pop
out
xchg
mov
mov
mov
lock
in
aas
sbb
out
adc
subb
es
add
and
insb
cmp
pop
jae
or
outsl
in
push
cmp
out
es
movsl
or
xchg
adc
test
repz
add
aad
stos
mov
mov
mov
mov
sbb
dec
jp
aaa
xchg
push
cmc
sub
insl
push
in
ror
mov
in
out
mov
mov
cmp
dec
nop
pop
mov
shrl
jle
xchg
cmp
jle
xorb
dec
mov
std
nop
push
sub
mov
je
test
pop
loop
jno
jno
pop
popa
inc
mov
or
xchg
jp
lock
jno
ret
enter
cmp
fcmovnb
mov
or
pop
fildl
lods
xchg
jp
cmp
test
or
lret
test
nop
xchg
das
int
pusha
and
mov
pusha
fstl
lcall
in
nop
cmp
aaa
dec
int3
or
sub
sti
out
add
in
fistps
and
loop
lods
pop
aad
jg
push
mov
jle
test
pop
inc
mov
sub
xchg
xor
je
adc
jmp
lods
and
lock
pusha
inc
out
sbb
ja
ja
add
scas
movsb
jmp
pushf
sub
and
mov
dec
hlt
in
sbb
popf
ret
jl
ljmp
or
roll
jmp
cld
xchg
rclb
outsl
call
aas
and
mov
mov
mov
xor
jecxz
mov
pushf
insb
sbb
push
add
repnz
std
jo
test
mov
pusha
in
xchg
xchg
jle
repnz
sub
inc
enter
inc
add
testb
pop
ja
cmp
push
mov
mov
cmp
and
popf
jmp
push
ror
mov
push
mov
cmp
push
push
cmp
sub
jnp
aam
cmpsl
pop
xchg
into
dec
mov
leave
fsubrl
subl
add
mov
xchg
repnz
lcall
and
js
push
stos
jbe
adc
outsb
push
fists
das
add
mov
mov
sbb
out
mov
aaa
xchg
sub
adc
sbb
push
mov
out
inc
jmp
mov
scas
sub
lea
adc
sbb
movsl
add
subl
fldt
push
mov
es
sub
cmc
mov
inc
xorb
jne
loopew
je
inc
or
je
dec
mov
cmp
orl
les
mov
lret
repnz
stc
sahf
add
fucomp
add
jbe
data16
out
lret
or
push
jns
add
aaa
fistl
jg
jle
cld
jno
xor
imull
cmpsb
add
push
fisubrs
fs
pop
mov
mov
dec
enter
mov
test
or
lock
mov
sbb
loop
cmp
ja
adc
es
fbld
and
mov
mov
lds
jecxz
xchg
aas
mov
xchg
addr16
mov
and
push
mov
jno
in
inc
mov
shll
pusha
add
icebp
mov
insb
dec
insl
adc
cmc
mov
or
leave
inc
jl
mov
sbb
cltd
pop
and
mov
int
ficomps
pop
or
sbb
sbb
insb
mov
loopne
dec
aaa
mov
inc
stos
pop
sub
and
xchg
push
mov
mov
jge
movsb
jecxz
in
stc
aam
repz
outsl
pop
testl
or
sarb
xor
sbb
xor
jecxz
in
js
xor
xchg
xchg
rolb
repnz
xor
cmpsb
jecxz
lods
push
cltd
call
and
ret
fmull
out
test
push
add
insl
in
ret
into
and
ds
dec
lret
mov
or
xor
dec
adc
add
cwtl
lahf
inc
addr16
nop
pop
stos
jecxz
or
int3
ficomps
daa
ss
out
popa
fdivr
mov
add
in
mul
rclb
movsb
pop
push
mov
sub
or
nop
adc
mov
push
hlt
mov
imul
cmp
mov
std
cmp
mov
sub
into
negb
das
fnsave
dec
cmpsb
xchg
xor
and
loope
sahf
jp
cli
sub
push
jge
mov
xchg
dec
jb
data16
in
jb
outsb
mov
dec
push
cwtl
inc
jnp
dec
inc
cld
aam
mov
mov
lock
inc
loopne
add
adc
mov
cwtl
daa
inc
leave
mov
mov
aaa
loope
xor
xor
jle
mov
test
xchg
push
push
xchg
or
dec
daa
adc
sbb
mov
sub
dec
and
fstpl
push
xchg
in
jbe
sub
sahf
push
cmc
les
jle
xor
jb
out
mov
ss
push
or
mov
adc
movsl
mov
lahf
clc
out
js
inc
cs
test
lahf
cmc
push
pop
andb
nop
jne
mov
mov
push
scas
inc
sub
jbe
and
push
adc
fwait
jns
in
je
stc
or
push
int
jecxz
ret
xchg
cmovo
in
xor
xchg
mov
cs
int
cmp
test
sbb
imul
js
sahf
mov
gs
xchg
dec
arpl
popf
fs
jecxz
cltd
xor
add
data16
pop
popf
mov
dec
movsb
pop
mov
aaa
dec
xor
aam
pop
pop
mov
mov
adc
xor
mov
and
sbb
mov
insl
movsl
jl
and
mov
xor
lahf
stc
or
sub
sarb
imul
jmp
push
or
roll
adc
push
sub
xchg
fsubrl
or
xchg
icebp
xorl
dec
xor
subl
jle
into
adc
int
pop
sti
dec
aaa
xchg
mov
or
push
shll
mov
mov
pop
cs
sub
jne
in
cwtl
lds
roll
enter
incb
movsb
mov
roll
fimull
aad
mov
dec
cmpsb
mov
jg
and
stos
ds
push
pushf
push
repnz
insb
bound
mov
dec
xchg
dec
add
pop
push
dec
pop
xchg
mov
loopne
das
fdiv
push
push
pushf
jp
adc
lods
mov
push
ss
imul
xchg
cmpsl
and
jmp
pushf
rorb
and
mov
lahf
mov
xor
pop
mov
mov
jge
lods
cmp
push
jl
pop
dec
aaa
shl
jge
std
jnp
sar
dec
mov
lock
sti
repnz
fsubp
xor
popl
ss
stos
lock
test
cmp
das
push
jbe
jne
and
push
pop
loopne
cltd
out
hlt
lea
sub
mov
repnz
cld
push
pusha
cmp
repz
in
xor
lods
fwait
xor
sub
gs
mov
jns
jg
push
and
inc
xchg
xlat
lds
in
sbbb
ljmp
loop
and
push
outsl
fistps
mov
mov
outsl
loope
das
jbe
sarl
sahf
addr16
mov
arpl
test
popa
rclb
mov
fistl
je
xchg
test
cltd
fdivr
icebp
xrelease
sti
cmp
fnstenv
int3
push
jno
stos
imul
jae
pop
fcomip
mov
out
jle
or
pop
cmpsl
dec
bound
cld
sbb
or
pop
sahf
imul
adc
outsb
fstpl
mov
add
xchg
add
adc
call
arpl
sub
cwtl
push
xchg
call
nop
xlat
and
lea
mov
inc
fwait
inc
loopne
dec
mov
mov
inc
fsubl
aad
jmp
adc
scas
push
xchg
push
jbe
adc
dec
mov
jle
adc
call
aad
lahf
inc
adc
arpl
test
out
dec
into
jo
idivl
shlb
aaa
fs
mov
cmp
xor
mov
leave
mov
push
adc
and
int3
cmp
cmp
ror
cs
mov
jmp
push
push
add
je
mov
test
mov
es
movsb
test
mov
sahf
jnp
outsl
cmp
stos
aam
jnp
dec
insb
adc
fs
dec
inc
std
imul
sbb
mov
pop
ja
icebp
das
mov
mov
bound
mov
inc
mov
xor
pop
pop
jl
into
push
aaa
test
xor
cmpsl
jmp
pop
loope
pushf
mov
int
mov
repz
leave
lods
xchg
leave
jne
bound
pushf
sbb
inc
in
icebp
add
fisubs
sar
mov
push
js
icebp
or
dec
or
xchg
push
loopne
adc
aad
and
sub
push
add
cmp
dec
fisubrs
popf
pop
xlat
mov
outsb
and
xchg
iret
mov
and
mov
pusha
fbstp
roll
dec
lds
dec
daa
jno
xor
jmp
addr16
adc
std
and
arpl
ficoms
xchg
aaa
adc
sbb
std
mov
testl
pop
cld
and
imul
dec
jmp
sbb
cmpsb
or
and
xchg
repz
aaa
mov
cmpsb
sub
repz
aas
push
push
xchg
sbb
xor
xor
jecxz
pop
dec
or
rclb
mov
inc
cmp
je
sbb
fcmovb
xor
fdivrl
stos
xchg
mov
mov
cld
pop
aam
add
adc
fidivrl
ljmp
loop
xor
in
stc
sarb
cli
push
sub
sub
shll
pop
jae
mov
mov
test
jl
xor
xchg
and
xchg
dec
loop
jns
sbbl
fisubrl
daa
sub
pop
push
xorb
pusha
mov
mov
out
sub
or
dec
add
cmpsb
scas
jb
imull
jne
ret
gs
test
inc
cmp
inc
adc
xchg
push
cs
incl
xchg
add
mov
inc
inc
jno
dec
xor
jl
add
test
mov
test
test
loopne,pn
sub
add
or
inc
sbb
sbb
sub
sub
inc
sti
cs
subb
sub
xchg
mov
add
mov
rcl
aad
mov
dec
mov
mov
repz
cmp
dec
sub
inc
repz
pop
mov
xchg
xchg
psubsb
sbb
lahf
or
inc
dec
xchg
mov
push
lods
inc
cli
negl
mov
xorb
push
daa
sub
jb
addr16
ret
ds
xor
push
push
inc
std
cmpsl
dec
addr16
insb
pusha
dec
dec
sub
jae
lods
xor
loop
lds
sbb
mov
ss
daa
mov
mov
jb
out
in
pop
jecxz
mov
outsl
jb
jg
clc
pop
or
jg
xlat
les
jns
mov
insb
mov
in
mov
pusha
add
in
pop
stos
push
xchg
mov
fldt
aam
lcall
jns
pop
xor
in
inc
jbe
jno
inc
mov
ja
sbb
icebp
loope
or
push
xchg
cmp
test
and
or
xchg
cmp
cmpsl
sbb
test
jmp
cmpsb
pop
dec
sub
ffreep
sbbb
std
mov
cmpsl
jl
and
inc
roll
jmp
adc
and
mov
xor
addr16
or
mov
fcoml
push
pop
cwtl
mov
les
cmp
inc
and
jle
dec
or
gs
aas
enter
fbstp
or
xor
insl
or
loope
jge
rcrb
cmp
cmp
push
lahf
pop
dec
xchg
mov
frstor
ljmp
imul
lahf
ds
or
sbbb
out
in
std
int3
cmp
cmp
cmp
movl
ret
jnp
insl
shl
jae
rol
in
sub
jbe
add
lcall
ljmp
fsubr
mov
sbb
mov
sti
jle
mov
testl
cmp
daa
mov
add
cmp
ret
cld
mov
xchg
repz
and
lea
clc
xlat
sbbb
fimull
pop
ret
sub
movsl
and
jg
mov
pushf
loopne
xor
mov
push
cli
inc
ja
sub
inc
sbb
les
and
rclb
push
ja
jbe
fnstenv
jg
lahf
sbb
incb
or
push
call
fsts
jb
push
xlat
fisttpl
xorl
filds
aam
xchg
jnp
xor
insl
mov
lahf
push
into
push
push
insb
push
sbb
jl
lds
mov
sbb
inc
add
lcall
imul
sbb
ret
adc
cmpsl
imul
loope
or
sbb
inc
lods
gs
jno
dec
xor
xchg
mov
lea
fdiv
or
sbb
xchg
and
inc
sti
out
lods
sbb
lods
setbe
movsb
movl
js
sbb
inc
cmpsb
fwait
mov
dec
push
jecxz
mov
and
popf
pop
push
dec
fildll
jp
sbb
in
cmp
pop
jg
push
mov
cwtl
sbb
mov
cli
jb
pop
jnp
test
and
inc
add
xlat
inc
add
mov
cmp
pop
ja
stc
loopne
dec
mov
push
add
sub
xchg
lods
mov
pushf
xchg
lret
add
fsubp
fwait
call
inc
inc
jne
std
stc
adc
mov
sub
inc
out
test
pop
andb
test
leave
lea
inc
mov
outsb
jno
push
pop
aad
dec
mov
mov
mov
fdivrs
add
int3
xor
lcall
mov
les
jae
mov
pop
loopne
and
sbb
adc
sub
ret
jnp
or
pushf
js
push
leave
mov
sbb
cmpsl
push
arpl
fsubr
and
adc
test
ret
xor
jne
adc
inc
or
fcoms
pop
mov
mov
cmp
popf
negb
in
imul
jle
es
sbb
fmuls
nop
push
mov
and
hlt
or
je
das
enter
lahf
xchg
movsl
int
mov
xchg
xlat
pop
push
rclb
xchg
pop
out
ret
add
mov
std
cmp
or
mov
ret
jmp
xlat
push
loop
aas
bound
add
data16
sub
pop
aaa
xchg
test
movsl
repnz
fwait
adc
dec
in
loopne
cmc
adc
jae
adc
aam
or
stc
in
dec
movsl
test
push
pusha
in
lahf
aad
or
out
and
add
adc
jnp
dec
call
out
dec
movd
push
jmp
xor
imul
add
lret
stos
out
gs
mov
rorb
mov
inc
jge
sub
dec
and
shrb
xchg
addl
sbb
inc
xchg
loope
js
pop
bound
scas
mov
out
pop
imul
ds
int
mov
cmp
adcb
js
sub
jnp
sarl
pop
insb
adc
jmp
imul
mov
scas
imul
xchg
dec
movsl
xor
and
arpl
ljmp
test
negl
fsubrp
fnstsw
cmpsl
cs
mov
test
in
test
daa
test
adc
insl
dec
and
leave
fwait
fsubrs
loope
cmp
adc
lods
lahf
inc
push
mov
push
add
mov
cmp
ss
mov
push
xor
loop
out
repnz
mov
mov
into
aaa
int
ljmp
mov
mov
jp
jmp
leave
add
cmp
clc
das
addb
sub
adc
xor
popa
mov
and
ja
xchg
outsb
and
dec
xor
rol
mov
outsl
cmp
xchg
int3
data16
push
in
mov
inc
stos
out
in
sbb
mov
mov
or
call
dec
and
xchg
xchg
sbbb
dec
cwtl
mov
mov
fadds
cmp
rcll
andb
loope
adc
ja
iret
outsl
icebp
cltd
pop
or
das
ds
enter
aam
inc
inc
inc
jnp
add
aas
fidivrs
xchg
sub
in
fiaddl
ret
xlat
add
daa
out
jb
mov
cmp
xchg
xor
inc
inc
mov
std
mov
lret
out
rcrb
loop
jb
jge
rcll
cmovl
mov
mov
xchg
fs
push
sub
lock
pushf
cmp
sub
mov
fucomi
cmpsl
add
adc
pop
mov
cmc
loop
push
jge
fimuls
and
or
pushf
dec
loop
hlt
xchg
xchg
das
xchg
test
sbb
sbb
jns
cs
sbb
jmp
daa
shrb
inc
int
and
aad
insl
and
testl
push
jg
cmp
dec
hlt
sahf
fs
sahf
add
insb
sbb
shrb
nop
or
mov
loope
loop
call
push
mov
fimull
xlat
push
xor
cld
cmp
int
test
mov
sahf
dec
leave
or
inc
sbb
sbb
mov
or
and
fdivl
pusha
sbb
adc
shll
push
and
clc
sbb
and
es
jae
adc
lahf
sub
mov
mov
ret
dec
scas
lahf
push
sub
cmc
repnz
cwtl
aas
cmpl
cs
jbe
test
and
pop
cmp
mov
enter
ss
lar
dec
sub
out
shrl
ret
adc
std
rclb
ds
stos
fistl
loop
jmp
jmp
sub
call
sbb
scas
push
xchg
stc
fnstcw
xchg
test
dec
cltd
popa
call
mov
lock
iret
stos
inc
lahf
cwtl
stc
jno
in
flds
orb
hlt
dec
add
pusha
dec
jle
jp
out
mov
sarl
insb
jb
shll
and
mov
popf
or
adc
divl
or
mov
inc
andl
iret
add
pop
sub
push
aam
repnz
xchg
js
ret
lods
sarb
adc
sahf
xor
ret
mov
inc
in
jae
ss
addr16
ds
and
iret
inc
ret
add
xchg
jle
or
mov
sahf
shll
imul
imul
xchg
and
jno
pop
xor
mov
inc
out
sbbl
push
dec
add
addr16
inc
mov
call
mov
push
ficoml
and
sbb
dec
mov
les
pusha
cmpsb
xor
dec
mov
mov
repz
test
add
jb,pt
xchg
mov
into
cmpsb
mov
mov
push
cltd
adc
stos
fnstenv
dec
pop
enter
mov
xor
out
push
adc
push
fcompl
jmp
xor
mov
jns
jae
dec
lock
xor
ss
mov
xlat
and
cmp
sbb
sbb
lods
gs
dec
popa
xlat
push
jge
sbb
add
in
cmc
dec
stos
mov
jp
xchg
push
outsl
enter
ja
fbstp
dec
scas
mov
rcr
testl
lcall
push
loopne
cmp
jo
int
fisubrs
jmp
shlb
cltd
imul
adc
xor
mov
repz
in
push
push
cmp
jl
ds
sub
sbb
push
pop
imul
leave
ljmp
fimull
or
insb
jge
mov
adc
shr
jmp
inc
jo
repz
cmp
lods
scas
adc
dec
pop
push
xor
test
sbb
xchg
lea
xor
insb
ret
lcall
xor
pop
leave
cmp
pop
sti
fsubrs
lock
insl
jge
fs
imulb
add
xor
dec
in
and
push
add
stos
push
xchg
sbb
gs
cmp
push
or
sub
clc
in
cmpl
lock
xchg
fwait
jnp
sbb
lea
addb
aaa
or
inc
cld
cmc
mov
lret
pop
cmp
or
push
sub
jmp
in
add
ds
and
push
add
cmpsl
xor
lods
into
xor
rorb
dec
ds
push
jg
pusha
sbb
sub
inc
adc
mov
aad
insb
jns
lods
sahf
int3
add
mov
loop
jne
pop
mov
jecxz
cmp
insb
subb
mov
sar
lret
cmp
lret
mov
push
lret
cmp
mov
test
and
rcr
test
iret
test
sub
xchg
roll
ja
mov
arpl
dec
mov
xchg
sbb
fimuls
cs
adc
mov
jno
pop
xchg
test
pop
mov
lcall
mov
jno
mov
mov
ljmp
dec
jmp
insl
cmc
push
sbb
test
jae
mov
jmp
cli
pop
icebp
stos
add
mov
inc
cmp
push
xor
cmp
aas
adc
ror
jne
aad
inc
xchg
repnz
cmpsl
int
loop
arpl
gs
inc
adc
mov
repnz
sub
add
mov
mov
inc
dec
ss
jnp
cmp
lods
add
xchg
jecxz
fsubl
sub
andl
fwait
and
xor
push
imul
test
out
lods
mov
adc
push
mov
pop
mov
jae
adc
mov
pop
cmp
cs
push
add
push
nop
lods
pushf
cmpl
lahf
out
mov
rolb
imul
ja
ja
ss
stc
lea
cmp
dec
add
or
sub
cmp
mov
lret
stc
lret
push
or
jnp
mov
jo
push
adc
adc
fisttps
pop
xor
nop
dec
cld
cmpsb
dec
add
aam
add
mov
xchg
mov
cmp
pop
xchg
and
outsl
pop
test
sub
mov
inc
inc
test
lret
pop
pusha
sbb
adc
inc
hlt
sbb
sarl
testl
xlat
or
inc
cmpsb
pop
fsub
imul
fisttpl
sub
bound
pop
mov
or
fiaddl
pop
fsubr
push
int
jae
and
inc
jp
pop
jl
xchg
or
pop
or
arpl
and
jmp
clc
cs
and
or
jp
imul
stos
ljmp
and
mov
icebp
sbb
nop
cmc
mov
ds
push
out
add
aas
data16
and
stos
movsb
xchg
mov
mov
aaa
test
xchg
cs
dec
pop
outsl
out
sbb
lock
push
xor
ret
and
popa
adc
push
cld
aam
or
into
iret
pop
mov
idivb
mov
jp
xor
fwait
stos
sbb
shlb
addb
bound
pop
ja
push
fimull
fmul
call
lea
test
cld
cs
xchg
ja
enter
mov
fidivrl
out
or
inc
pusha
idiv
movsl
xchg
js,pt
mov
jmp
icebp
push
sahf
bnd
jp
daa
outsl
test
pop
adc
fxch
out
mov
sahf
mov
xchg
and
imul
subl
pop
sbb
lret
mov
and
sbb
fadds
cmpsb
jnp
mov
inc
pushf
mov
aam
mov
push
negb
xchg
lcall
adc
pop
vpaddb
stos
mull
in
arpl
addl
or
sub
push
mov
loop
mov
xchg
je
or
shrl
add
les
pop
jnp
mov
adc
pop
xor
test
dec
jno
pop
adc
sbb
dec
pusha
pop
pop
xor
rol
mov
mov
pop
add
pop
sbb
mov
popa
fiaddl
mov
mov
jbe
cmp
roll
jle
xchg
and
jle
std
incl
mov
je
leave
test
imul
dec
mov
adc
or
fdivl
stos
adc
push
sub
sub
mov
rorl
dec
add
xor
push
es
fdiv
insl
test
mov
ss
cld
adc
or
mov
fidivs
jne
leave
fisubrs
xchg
out
dec
sub
pop
jmp
cmp
punpckhbw
nop
xor
xchg
out
push
movsl
ret
aas
cmp
stos
xchg
cwtl
lret
push
and
pop
jg
or
push
mov
shl
mov
popa
push
loopne
enter
loop
add
out
mov
in
xchg
jne
cltd
add
in
mov
add
lods
rcl
rcrl
enter
sbb
mov
xlat
in
dec
mov
rcll
cld
jb
or
sub
and
sub
xor
mov
cld
or
imul
lods
in
imul
movsb
cmc
xor
fiadds
mov
out
pop
and
fwait
mov
xchg
or
mov
imul
push
pop
xchg
jg
sub
sbb
movsl
xor
int
into
in
jnp
mov
push
sbb
pop
xor
xor
cltd
in
sti
dec
inc
push
adc
aaa
icebp
cmpsb
jnp
cmp
xchg
mov
sub
punpckhwd
xchg
fdivrl
outsl
jbe
jge
aas
fsubs
movsb
in
jmp
pushf
mov
mov
push
fisubl
ja
dec
cmc
pop
insl
adc
jae
push
inc
clc
rcll
dec
dec
lods
scas
sbb
sti
cmc
outsb
imul
popf
lahf
movsl
lahf
and
dec
imul
jno
mov
xlat
mov
aad
and
cmp
stos
mov
mov
mov
push
rcrb
and
xchg
mov
stc
dec
shll
sahf
jb
mov
sti
call
in
xorl
int3
std
outsb
outsb
push
bnd
xchg
sub
cmp
mov
es
add
in
ret
hlt
int
scas
dec
or
ja
or
popf
lret
xor
out
or
and
jae
stc
sbb
jecxz
not
insb
xorb
out
ret
inc
pop
mov
cmp
mov
inc
or
adc
popa
mov
or
in
add
sti
cmp
fcmovnb
sbb
je
mov
js
into
scas
stos
and
out
cmp
out
mov
sarb
call
add
cmp
mov
into
mov
imul
sub
cmpl
shlb
mov
xorb
outsl
sub
iret
data16
mov
popa
pusha
ss
adc
test
outsb
out
loopne
addb
sbb
idivl
lret
hlt
dec
inc
inc
jno
pop
popl
cltd
popf
adc
loopne
fisubrs
cmp
adc
out
or
sub
push
dec
popa
inc
rolb
and
movsb
pop
mov
add
mov
push
pop
dec
push
xor
into
aaa
cs
incl
push
lret
jmp
fcompl
test
fsubrs
add
mov
or
int
sub
icebp
mov
pop
popf
mov
mov
les
push
notb
pusha
xorb
sbb
fildl
pop
mov
cld
mov
and
sti
inc
test
adc
mov
adc
inc
call
or
mov
cltd
inc
push
out
outsb
jg
jae
push
les
test
pop
xchg
int
and
pop
xchg
inc
push
scas
xor
test
inc
xchg
fiadds
dec
and
pop
cmpsb
mov
jge
loop
les
inc
divl
push
xor
add
hlt
decl
add
das
sub
pop
lds
add
pushf
xor
in
jne
fisubl
rolb
push
ds
sbbb
or
dec
mov
decb
lret
dec
lret
sete
mov
or
and
cs
cld
jg
adc
mov
push
xchg
jge
cmp
std
add
fistps
ret
cli
cmc
addr16
dec
sbb
mov
cwtl
fcmovb
xor
adc
jecxz
cli
xchg
mov
sub
mov
or
loopne
hlt
lds
dec
nop
mov
or
lret
roll
push
jae
push
int
cli
xor
inc
and
out
push
mov
xchg
push
mov
mov
std
aaa
xchg
add
cmp
adc
adc
test
sub
jp
adc
xchg
xchg
cmp
adc
aad
jno
imul
lods
idivb
mov
push
leave
in
repnz
js
or
sar
insb
jmp
cmp
xchg
push
mov
cmpsl
lock
xor
loop
mov
mov
das
sti
jne
sub
dec
in
popf
jns
push
in
scas
jmp
jb
fbld
xor
sub
adc
cmp
stos
shrb
adc
push
lcall
jg
mov
and
push
sahf
inc
jae
and
repnz
xor
inc
push
xchg
adc
jae
arpl
inc
repnz
jecxz
lds
jge
fistpll
out
mov
sbb
or
data16
out
add
cmpl
nop
lods
iret
mov
mov
pop
add
mov
xor
sbb
fwait
sub
cmp
in
lret
iret
add
add
adc
inc
in
or
inc
mov
jecxz
jecxz
stc
adc
or
jb
es
dec
hlt
data16
adc
and
xchg
stc
dec
push
fldt
lds
daa
lods
pop
pusha
hlt
aaa
mov
adc
xchg
adc
xchg
scas
xlat
xchg
adc
shlb
sub
imul
fildl
mov
xor
pushf
add
and
not
push
fmuls
inc
outsl
mov
bound
mov
push
dec
cmp
stc
jg
fdivrl
int3
cmc
mov
add
lahf
sub
and
jno
push
jmp
es
push
rorl
int
int
add
lahf
xor
dec
and
out
ljmp
mov
xchg
pop
mov
in
pusha
stos
out
adc
push
rolb
mov
xchg
lret
in
jecxz
mov
push
int
push
cs
push
cmpsl
loopne
cmp
ds
test
je
subb
ds
iret
ja
pop
out
sub
stos
stos
push
dec
jbe
mov
cmp
divb
sbb
ror
in
xchg
insb
add
aas
fnsave
xchg
rclb
into
fcmovbe
les
lahf
and
cli
mov
repz
fsubr
shlb
scas
pusha
sub
lea
pop
add
rcrb
cmpsb
xchg
sbbl
adc
bound
lcall
insb
cmpb
mov
outsb
cltd
push
xor
addr16
add
jbe
cmpsl
mov
sahf
stos
push
mov
or
adc
sbb
lahf
push
dec
lds
mov
daa
scas
mov
adc
aaa
add
inc
cltd
mov
jns
out
mov
in
dec
daa
es
mov
xchg
fdiv
add
dec
push
ficompl
je
insb
xor
outsl
sbb
loope
sub
dec
insb
je
lea
xchg
pop
ror
cltd
xchg
mov
lock
xor
insb
push
mov
inc
jle
jne
mov
mov
gs
insl
or
in
and
les
rcrl
shrb
jae
push
pop
nop
xchg
scas
and
inc
out
fldcw
test
push
popa
out
stc
mov
mov
roll
aaa
inc
outsb
out
adc
bound
mov
mov
xor
out
lods
sbb
mov
jbe
or
xor
shlb
fwait
jmp
cmp
pop
jle
cmc
or
aaa
or
call
jno
cmp
cmp
dec
out
aam
xor
pop
das
lods
mov
leave
jecxz
push
xor
fwait
and
and
and
jle
adc
aaa
cli
dec
jecxz
lret
push
imul
and
push
xchg
sub
cmp
dec
mov
movsb
test
mov
lods
fiadds
aas
cmp
jae
adc
and
pop
out
addb
enter
sub
mov
sub
aas
mov
add
outsl
aam
dec
mov
loop
cmp
sbb
stos
sbb
add
sti
cwtl
xchg
push
and
ret
xor
lahf
xchg
dec
pusha
fstpl
cmovns
andb
xor
mov
in
pusha
outsl
add
dec
mov
sbb
push
cmp
dec
jnp
xor
pop
mov
push
iret
add
cmp
movsb
cwtl
and
int3
adc
or
xor
adc
jo
mov
lock
and
jp
in
js
pop
mov
mov
mov
insb
xchg
mov
adc
je
ljmp
or
mov
mov
sbb
adc
outsl
adc
cs
imul
test
rclb
imul
pop
cmp
in
dec
sbbb
clc
jmp
jne
daa
inc
add
stc
dec
xchg
mov
lea
ljmp
push
mov
fnstcw
push
dec
clc
lds
fidivs
xlat
and
outsl
mov
insb
cmpl
xchg
sbb
aas
lret
outsb
jge
ljmp
mov
sbb
lret
addr16
mov
and
shll
pushf
jae
push
dec
lods
movsb
lea
stos
push
movsl
sahf
sbb
or
add
inc
and
addr16
int
lcall
xchg
ljmp
cmp
jge
jae
dec
sbb
push
push
out
pop
pop
dec
cmp
mov
jbe
add
inc
mov
cmp
jb
sti
loop
xor
and
add
lahf
dec
out
mov
jno
in
push
and
data16
icebp
je
daa
mov
mov
sahf
outsb
sub
pop
insb
or
mov
mull
addr16
insl
lcall
dec
int
dec
test
loop
test
sarl
bound
insl
jecxz
dec
sub
rcll
mov
dec
jo
gs
scas
push
roll
inc
sbb
or
out
pop
ror
xchg
mov
sbb
cmp
in
push
mov
pusha
pushf
pusha
test
mov
sub
pop
lods
xchg
jno
pop
push
enter
call
in
adc
push
loop
paddd
mov
inc
test
xor
lcall
ja
lds
cmpsb
stc
test
movsl
add
mov
sbb
lret
popf
pop
out
xchg
add
orl
or
lcall
inc
mov
push
adc
mov
xchg
sahf
add
shlb
sub
sub
out
mov
push
mov
mov
inc
bound
sbb
inc
enter
and
fsub
sub
sbb
jnp
movsl
push
or
jecxz
js
xchg
jns
cltd
ds
int3
pcmpgtw
adc
ljmpw
jp
jo
out
mov
sub
mov
out
mov
daa
push
pop
mov
mov
jns
outsl
fmuls
jge
push
xchg
xchg
sbb
mov
xlat
mov
into
xchg
jle
mov
inc
push
or
mov
std
subb
std
pop
xor
xor
aas
xlat
sar
lcall
out
in
scas
mov
mov
int
mov
adcb
gs
std
in
pop
jp
cmpsl
push
sbb
aad
addr16
or
cmp
nop
xchg
mov
ds
mov
jmp
test
push
cs
mov
jmp
int
cmp
adc
in
leave
sbb
cmp
pop
int
adcb
scas
loopne
inc
je
es
dec
aam
stc
mov
lea
shll
idivb
popa
repz
mov
rcll
mov
push
outsb
fwait
and
xor
sahf
mov
inc
fisubs
arpl
cld
xor
sub
in
iret
lahf
scas
sbb
inc
mov
int3
lahf
mov
adc
repz
arpl
out
or
test
out
arpl
pop
aaa
or
fcoms
and
sbb
sarl
mov
sti
subl
pop
inc
or
test
mov
xchg
mov
or
fisubrl
lods
dec
lods
mov
xchg
mov
gs
imul
jmp
push
sub
daa
test
push
inc
dec
mov
les
mov
std
or
dec
cltd
push
filds
add
arpl
cmpsl
loopne
imul
sahf
inc
ret
fstpl
dec
xchg
enter
xor
stc
shll
mov
pushl
aaa
mov
pop
inc
fdivrs
cmp
dec
mov
das
and
iret
sub
push
sbb
mov
cmpsl
pushf
jbe
movsl
and
adc
ror
aaa
scas
popa
jnp
mov
sti
cld
adc
jle
mov
nop
in
push
in
push
jbe
jnp
push
or
mov
rcrb
or
mov
in
inc
pop
out
ja
and
pusha
sub
mov
dec
jmp
addb
pop
outsl
js
loopne
jle
filds
into
stos
scas
xchg
lret
and
sub
aam
or
jbe
loopne
test
xchg
sub
push
add
adc
das
jl
add
jo
stos
das
mov
sbb
pop
xchg
fwait
stos
xor
mov
in
shll
dec
repz
pushf
scas
sub
or
scas
arpl
mov
out
dec
and
add
pmulhw
cld
aas
mov
popf
dec
pop
stc
xchg
ljmp
or
jns
test
adc
mov
adc
or
repnz
adcl
lds
sbb
in
mov
or
mov
enter
sub
in
mov
xchg
data16
icebp
lds
mov
out
jb
int
inc
mov
jmp
xchg
call
dec
out
pushf
mov
pop
in
ret
sub
testl
outsb
inc
adc
xorl
mov
dec
lock
xorb
in
sub
dec
or
ffree
fisttps
add
mov
mov
adc
movsb
xor
test
push
cmp
xchg
in
push
jmp
mov
dec
ficompl
sarb
jge
add
in
sub
xor
add
jp
stos
jmp
xchg
pop
xchg
push
xor
sbb
fs
push
mov
shrb
fdivl
test
push
push
xor
dec
adc
and
push
sub
xor
stos
xor
sarb
push
sub
mov
mov
add
or
mov
xorl
pop
imul
dec
test
sbb
push
xor
mov
lret
out
in
cmp
mov
xor
call
std
add
pop
lods
pop
and
sbb
cmp
inc
pop
dec
add
testl
and
jge
inc
mov
and
or
cltd
mov
sbb
mov
orl
mov
andl
cmpsb
push
ds
jmp
mov
xlat
cwtl
pop
lret
pop
jb
push
ret
aaa
mov
push
pop
aaa
test
pop
stos
jle
test
adc
cmp
out
push
in
jp
fwait
jne
bts
adc
nop
mov
popf
nop
dec
imul
push
lea
jae
test
hlt
int3
ret
sub
jp
movb
push
push
mulb
fcompl
or
outsl
mov
jb
mov
or
jecxz
test
fnstcw
stos
mov
sbb
cwtl
addr16
mov
xor
ljmp
adc
jnp
lcall
jb
call
add
mov
push
mov
xor
bound
pop
add
pushf
repz
popf
mov
mov
gs
push
dec
fcomip
cmpb
pop
pop
popf
imul
test
jle
out
jo
add
and
aaa
mov
aad
arpl
fisubrl
jg
cmovo
mov
inc
test
or
jnp
out
lea
mov
daa
sub
xor
inc
fildll
in
cmpsl
add
lds
or
lock
popa
or
mov
mov
sub
es
cmpb
xchg
and
dec
jb
mov
xchg
sbb
jb
loope
clc
pop
jge
stos
pcmpeqd
xor
in
fwait
pop
xor
loopne
out
mov
repnz
ret
gs
cmp
shl
sub
ret
inc
or
fs
cli
lods
psubb
xchg
ja
xchg
test
pop
pusha
adc
mov
sub
mov
sub
pop
les
aad
pop
mov
and
insb
std
rcrb
mov
jecxz
notb
and
les
mov
and
and
xchg
or
into
jno
sub
pop
scas
inc
mov
and
xor
mov
xchg
psadbw
xchg
das
nop
repnz
or
add
imul
imul
out
pop
jp
add
popa
leave
xlat
cmp
fwait
cmp
sbb
lret
lea
in
sbb
push
fcmovb
je
dec
add
adc
std
test
jl
rcll
sub
test
outsl
in
outsl
push
adc
add
repz
xchg
lods
and
sahf
rcrb
jecxz
add
icebp
or
ret
jnp
sbb
and
mov
pop
and
inc
xor
lahf
stc
ds
adc
sti
xchg
lcall
pop
add
stc
xchg
outsb
dec
jno
mov
xor
popf
pop
inc
testl
adc
subl
and
adc
popa
aaa
xchg
fsts
pop
roll
imul
arpl
and
je
sbb
sub
xchg
int
or
adc
mov
jge
fdiv
push
lea
iret
out
cmpsb
cwtl
jo
xor
pusha
inc
add
mov
fwait
cmp
aam
data16
aad
scas
cwtl
jo
lret
aaa
lds
insl
adc
pop
out
mov
scas
jmp
cwtl
in
xor
or
xchg
sti
test
push
sti
outsl
push
pop
xchg
xchg
jb
fwait
jge
leave
push
mov
add
ret
loopne
jg
int3
ljmp
xchg
cmpb
add
cmpsl
les
ja
fdivs
pop
aam
in
xchg
rclb
sub
or
xchg
sbb
into
inc
xchg
xor
mov
cwtl
lds
or
xlat
or
sarl
stc
add
mov
dec
aad
pop
jl
in
dec
mov
xchg
jbe
lds
sbb
sbb
lods
rol
ret
mov
or
aad
mul
xchg
xchg
xchg
cltd
int
js
test
mov
push
lods
sub
adcl
aam
inc
pop
insl
das
inc
or
or
cmp
mov
hlt
jmp
loopne
sarl
cmp
loopne
jnp
es
sbb
movsb
je
dec
push
cmp
scas
leave
sarb
mov
pushf
dec
test
stos
xor
inc
mov
adc
cmc
cld
mov
push
fcmovu
popf
scas
or
jmp
push
fwait
ret
mov
je
shl
cmp
cs
gs
cmpsb
mov
or
out
aad
ljmp
pop
xchg
add
jmp
sub
and
pop
ficomps
sub
ss
das
loopne
imul
or
iret
fisttps
fidivrl
push
inc
popa
imul
mov
out
add
adcl
insb
mov
movsb
and
adc
mov
push
int3
pushf
iret
jbe
xor
or
outsl
cmpsb
gs
in
fcoml
push
jnp
push
test
outsb
mov
outsb
sbb
xchg
test
call
push
cs
inc
insl
mov
jle
mov
mov
data16
mov
lcall
jge
pop
pop
fldcw
fldl
cs
cltd
or
xor
pop
cli
push
arpl
popa
cmp
loop
sbb
in
xor
lret
popa
cmc
inc
or
aam
push
test
and
sar
mov
xor
mov
leave
mov
subl
sbb
rcrb
inc
ret
sbb
add
and
das
mov
shll
cmp
jecxz
lea
loope
outsl
xchg
mov
je
rcr
sbb
sub
decb
or
std
add
fistpl
lods
repnz
sarb
mov
push
mov
add
mov
test
fwait
pop
or
jae
push
rclb
inc
mov
push
mov
out
aad
nop
sub
test
jg
mov
xchg
inc
lret
test
adc
mov
lds
mov
jle
into
insb
fwait
xchg
js
lret
mov
pop
ret
pusha
push
int3
pushf
mov
pop
and
in
cmp
daa
push
push
xchg
ret
cli
cld
call
fistpll
pop
add
arpl
mov
jl
inc
loopne
fs
cmpsl
jp
icebp
enter
cmpsb
stos
push
cmpsl
adc
mov
fstpl
aas
adc
push
pop
adc
mov
jg
outsb
mov
or
sbb
lcall
movsl
sbb
js
fldt
rorb
or
outsb
adc
dec
ret
and
xlat
inc
xor
mov
dec
lea
xchg
sub
jecxz
pop
push
cmpsl
call
mov
sahf
xchg
push
and
ret
adc
mov
push
sub
jmp
mov
or
pop
imul
andps
mov
pushf
mov
jne
cmp
push
and
and
add
xlat
jnp
mov
es
call
aas
push
cmp
pop
loop
mov
ficompl
mov
popa
xor
fisubl
sahf
dec
push
gs
pushw
and
cmpsb
jmp
jp
and
mov
add
bound
outsl
mov
dec
rcr
jecxz
jecxz
mov
outsl
inc
mov
push
xchg
flds
lahf
inc
loope
sub
cmp
inc
loopne
push
icebp
fcompl
jg
jne
pop
test
mov
pop
adc
scas
ret
jne
sbb
adc
xlat
mov
add
push
mov
push
lret
test
int3
mov
adc
cld
pop
push
push
inc
push
jle
mov
pop
cmp
lods
cmp
xchg
shrl
pop
mov
out
cmpsb
call
pusha
xchg
jno
mov
jp
sbb
iret
outsl
aas
js
sti
call
pop
std
sbb
lods
orl
push
lret
in
mov
mov
push
mov
cli
inc
hlt
in
jp
sub
rorl
lret
jg
test
js
loopne
adc
aad
mov
cmova
imul
xchg
in
pop
jb
inc
or
gs
mov
les
pop
test
mov
out
jl
test
iret
es
rorl
es
cltd
sub
ds
addr16
adc
js
stos
lock
sub
cli
adc
stc
enter
fwait
cmp
push
jb
mov
jg
sbb
out
dec
mov
lcall
jno
test
cli
nop
inc
add
cmp
mov
popf
stos
mov
mov
and
add
and
xor
or
or
xchg
jmp
inc
rol
pop
into
out
sub
fnstenv
iret
loop
jl
enter
fildl
sbbl
hlt
add
out
pop
aaa
adc
aam
popa
mov
test
movsb
sbb
js
jne
fs
jnp
mov
insl
and
inc
jb
movsb
imul
lcall
jmp
aam
add
cmp
or
test
adc
mov
sbb
mov
mov
jl
imul
push
sti
push
inc
test
mov
out
in
xor
sbb
scas
outsl
stos
jmp
add
arpl
add
or
flds
dec
jmp
sub
dec
mov
pop
into
sub
mov
dec
cmpsb
pop
adc
es
dec
dec
sbb
movsl
push
push
mov
fistps
pushf
or
lds
icebp
das
push
mov
jp
pop
sub
push
stc
ret
fnstenv
xchg
ljmp
ret
add
lret
push
sbb
mov
andl
push
shrl
mov
into
loop
out
adc
out
sbb
jp
mov
push
xchg
insb
ret
adc
fidivrs
pushf
sbb
movsl
mov
jns
fidivs
nop
add
add
scas
xchg
jl
lret
sub
rcr
aas
or
cld
xlat
push
inc
pop
cmp
lds
mov
pop
test
fchs
cwtl
pop
bound
cld
jb
hlt
mov
xor
out
jmp
jns
pusha
inc
das
adc
adc
loop
imul
shlb
rclb
aad
out
jns
inc
sbb
ficoms
out
stos
mov
leave
je
fwait
stos
or
cli
jmp
xchg
sbb
xor
sbbb
adc
inc
loopne
jbe
mov
dec
lret
aam
add
sti
cltd
adc
jmp
jg
push
lds
jns
sti
fldlg2
lock
lock
ja
andb
cmpsb
pop
xor
popf
fs
popa
and
inc
inc
xchg
fwait
adcl
mov
mov
push
jns
lds
and
les
and
fsubs
pop
or
lahf
mov
cmp
aaa
cmc
xchg
outsb
bound
outsb
mov
sub
nopl
adc
test
lahf
and
fs
jae
cmpsb
inc
mov
jo
or
inc
mov
fldenv
or
outsb
cmp
sbb
rolb
sub
push
dec
and
push
mov
cmp
jae
out
ss
mov
scas
stc
insb
jb
cmp
pushf
sub
inc
popf
pop
push
hlt
adc
inc
pop
pop
inc
mov
mov
sbb
scas
lods
jbe
les
push
ret
push
cwtl
pop
cs
js
stc
outsl
xor
jecxz,pt
fnstenv
cmpsl
push
or
fmulp
inc
xchg
jne
mov
lret
out
mov
pop
mov
jne
xor
divb
leave
jecxz
add
movsb
repz
loopne
andl
inc
lret
mov
cmp
adc
aam
in
mov
xor
jbe
out
xchg
xchg
insl
sub
stos
pop
scas
lds
pusha
xchg
lret
inc
sbb
repnz
inc
pop
adc
or
aam
lret
test
push
stos
jmp
mov
cmp
mov
xchg
push
lds
sti
mov
or
xlat
jl
dec
mov
adc
lret
outsl
mov
pop
cmp
inc
ljmp
roll
nop
scas
loope
jmp
lds
pop
sub
jge
push
lock
mov
aad
test
mov
pop
xor
cwtl
or
xor
cmp
ud2
shlb
pop
movsl
scas
push
mov
outsl
sti
jno
in
into
sarl
xor
or
les
scas
cmp
dec
movb
movsl
lahf
out
dec
lock
fiadds
shll
jns
sti
je
sub
cmp
lret
mov
repnz
sub
jb
mov
mov
setge
cwtl
xor
insl
sub
pop
test
inc
mov
add
mov
dec
inc
jnp
lea
pusha
test
add
les
mov
sbb
and
stos
sub
in
not
mov
add
cmpsl
clc
fisubl
or
addr16
imul
pop
arpl
insb
out
in
in
ds
add
add
fucompp
aam
aaa
hlt
mov
inc
bound
into
or
push
pop
inc
loopne
in
push
imul
int
dec
or
add
or
lock
push
sub
in
cmpsb
xor
push
mov
dec
mov
or
sub
mov
xchg
sub
popf
xchg
lock
push
adc
mov
add
out
cwtl
adc
mov
sub
add
cmpsb
xor
and
arpl
dec
inc
int
inc
cmp
test
shrb
rcrb
sbb
or
loop
jmp
and
inc
jmp
sbb
or
jbe
cwtl
xor
repz
cmp
cmc
sbbl
lret
ss
daa
lods
shlb
mov
aas
mov
add
mov
ret
cltd
lahf
xor
fadds
adc
data16
cs
jns
outsl
mov
xor
jae
mov
xchg
xor
cmovp
and
in
out
stc
cwtl
or
daa
in
jg
cmpsl
mov
in
or
push
push
and
imul
aad
btr
sub
loope
xlat
add
add
xor
sarl
jbe
add
pop
cmp
jmp
push
sbb
dec
mov
add
int3
dec
fsubrs
and
pop
pop
testl
dec
mov
mov
insl
lea
sbb
repnz
dec
in
out
xchg
ret
rol
xor
push
xor
push
add
mov
push
push
rclb
add
jle
test
mov
and
out
mov
sub
and
dec
pop
out
dec
cld
je
cmc
dec
ret
out
add
test
pop
addl
mov
inc
jne
inc
sub
dec
and
or
stos
mov
adc
mov
adc
mov
lock
adc
movsl
mov
in
test
gs
push
popa
or
ljmp
push
xchg
negl
jge
mov
mov
loope
loop
lods
jae
das
pop
popa
pop
jmp
in
xlat
inc
stc
mov
dec
movsl
jmp
mov
jno
xlat
ds
popf
mov
scas
aas
push
fldenv
mov
mov
je
mov
sub
int
sub
or
inc
hlt
pop
andnps
out
xchg
aas
jne
lods
push
mov
fiaddl
xor
xor
inc
jmp
sub
pop
inc
cmp
test
inc
lret
jecxz
enter
adc
aaa
push
jns
pop
adc
int3
ds
adc
cwtl
push
in
adc
cmpsl
and
xchg
push
sbb
ret
sbb
sti
dec
inc
push
mov
lods
or
sub
sub
fwait
adc
jge
mov
inc
loop
sub
mov
sarl
mov
xor
aaa
pop
rcrl
adcb
aad
cs
popa
or
in
cmp
rorl
fidivs
cwtl
jl
test
daa
fisubrs
shl
mov
xor
dec
mov
cs
adc
push
test
mov
add
ss
or
movsl
divb
iret
add
loopne
push
xor
bound
hlt
xlat
in
xchg
mov
enter
jecxz
xchg
lret
xor
lds
out
loope
cs
rolb
mov
lret
in
and
shll
call
fcoml
fwait
in
fildll
insl
mov
stos
adc
xchg
int3
ljmp
addr16
mov
js
mov
fsub
lds
imul
dec
and
cmp
mov
sbb
adc
adc
fisubrl
pop
insl
sub
inc
cmp
adc
mov
mov
mov
or
sub
adc
jl
test
in
jns
inc
js
pop
icebp
cmp
test
or
repz
sbb
in
orl
roll
adc
pop
push
mov
mov
les
push
jno
into
inc
into
into
dec
sub
insl
repnz
ficoml
into
push
nop
ds
orl
or
in
sbb
pop
out
jmp
pop
bound
lahf
pop
test
ret
sub
aam
ds
sub
adc
and
insb
jbe
or
sub
movsb
lods
call
in
das
pop
mov
dec
lret
push
lds
in
jo
sub
cmp
outsb
rorl
fs
xlat
dec
inc
adc
lahf
lods
push
dec
pop
xor
dec
mov
or
ljmp
sbb
adc
mov
in
aas
mov
sbb
sahf
popa
mov
and
rclb
cld
imul
pop
push
add
pop
leave
lret
dec
xor
mov
addl
fwait
adc
sar
out
outsb
mov
stc
sbb
faddl
clc
das
pop
cmp
sub
hlt
jmp
aad
leave
dec
fildl
lods
repz
inc
pop
fcmovnb
adcb
push
add
mov
in
xchg
add
xchg
dec
pop
ljmp
jno
pop
inc
dec
cld
scas
sub
and
sti
int3
lahf
push
std
xorb
jle
das
adc
mov
in
xchg
out
inc
or
inc
dec
out
mov
std
sbb
pop
int3
xor
lock
out
pusha
shrl
jo
aam
xchg
dec
sub
sub
cmp
adc
mov
insl
movsl
hlt
iret
adc
aam
jns
inc
or
lea
xchg
andl
or
lods
pop
pop
jo
andb
test
cmp
daa
loope
mov
xor
push
dec
push
jmp
fnsave
mov
sub
inc
inc
or
xor
push
dec
nop
pop
ja
inc
or
cltd
cwtl
gs
mov
xchg
lcall
enter
adc
mov
movl
jo
push
lea
mov
xchg
mov
mov
nop
mov
in
jg
xor
or
jno
out
pop
xchg
xchg
add
imul
pop
pop
xor
flds
mov
movsl
xorl
cld
mov
add
pop
loop
ljmp
xlat
mov
adc
orb
sub
in
sbb
and
pop
sub
pop
adc
dec
shll
fdivrs
in
sahf
mov
push
rcrl
fmuls
xchg
mov
sahf
repnz
cli
or
cmp
xor
jge
or
xchg
shrb
cltd
insb
popf
das
repz
test
ror
and
test
imul
cmp
lret
repnz
lods
push
or
mov
inc
mov
mov
aam
shlb
jo
adc
pop
leave
fs
mov
cli
sub
outsl
sub
test
mov
stos
pop
test
mov
or
fnstsw
adc
push
mov
test
pop
subl
xchg
lret
mov
or
mov
notb
xchg
stc
out
shll
stos
int
cmp
gs
jnp
lcall
dec
aad
test
xchg
sub
or
aas
out
push
or
mov
stos
lods
repz
lret
movsl
add
mov
lds
sbb
add
jecxz
out
or
imul
pop
inc
sbb
lcall
push
movsl
jo
xchg
jb
jl
mov
pusha
xor
in
and
and
bound
fisttpl
lcall
test
xor
push
ds
add
dec
jae
sbb
sbb
jno
dec
push
or
xor
xor
pop
mov
jmp
out
aaa
out
clc
xor
sbb
ucomiss
popa
cmp
sub
shl
xchg
lahf
hlt
fdivs
dec
inc
rcll
test
dec
adcb
and
mov
addr16
enter
dec
pop
and
xchg
mov
bound
xchg
mov
inc
sub
push
lods
scas
out
pop
insl
js
sbb
push
test
fnstsw
cltd
mov
mov
dec
jmp
jbe
sbb
jle
fsubl
dec
mov
movsl
pusha
in
adc
sbb
xchg
adc
movsl
fiadds
repnz
testb
pop
insb
faddl
dec
pop
in
int3
mov
loopne
adc
shrl
in
addr16
mov
mov
push
cmp
or
mov
cs
push
pop
and
or
dec
sahf
mov
repnz
cmp
filds
inc
mov
test
fmull
xchg
jnp
cmp
xchg
test
fcompl
adc
sarb
ljmp
push
je
sbb
push
orps
sbb
nop
push
shl
sub
test
jne
dec
lds
lea
dec
inc
pop
fmull
inc
add
pushl
adc
push
sub
lods
jmp
xchg
adc
xlat
inc
jg
mov
dec
jmp
shl
mov
imul
mov
dec
dec
sub
and
aaa
sti
sbb
sub
and
pop
and
ret
fstl
mov
mov
jmp
iret
fisubs
mov
arpl
and
flds
mov
sub
scas
in
mov
repz
sub
jbe
int
xor
std
adc
add
jecxz
jo
jns
inc
lcall
add
push
addr16
push
enter
push
cmpsl
push
push
add
adc
mov
insl
inc
mov
test
lcall
es
mov
dec
shrb
rcll
push
and
dec
mov
mov
lds
push
stos
out
movsb
fcos
mov
shll
mov
lea
rep
in
addb
cmpsl
cmc
xchg
orb
push
mull
jp
nop
test
adc
andl
jbe
inc
inc
pop
fsubrs
loopne
nop
leave
cmpsb
adc
inc
out
jnp
mov
gs
cmp
rolb
cs
mov
and
xchg
cmpl
xchg
and
dec
push
mov
in
or
repnz
ss
xor
les
rcrl
call
fidivrs
mov
pop
mov
xor
adcl
cmp
dec
mov
mov
xchg
mov
pop
dec
xchg
pop
cmp
mov
call
sbb
add
nop
or
and
les
sbbl
loop
stos
inc
inc
and
iret
pop
idiv
sub
cmp
jl
cmp
popa
gs
mov
loope
xlat
lahf
jmp
xor
xor
fdivp
rcrl
inc
popa
push
iret
fnsave
cmp
sbbb
dec
or
mov
loop
sbb
pop
pop
cvtdq2ps
ret
mov
xchg
daa
mov
jmp
int
or
push
pop
lret
mov
dec
add
mov
outsb
cmpsl
sahf
loopne
std
test
push
imul
inc
cmp
pusha
je
in
orb
ljmp
ds
jecxz
mov
inc
xchg
sbb
insb
cmp
mov
scas
repnz
lods
pop
jl
popa
inc
jecxz
pop
aam
mov
cmc
adc
gs
mov
fidivrs
mov
lea
test
fwait
pop
pusha
xor
repnz
push
add
std
fs
bound
jp
cs
inc
fildll
test
les
or
xchg
cltd
pop
mov
dec
stc
icebp
fmuls
daa
or
loope
jecxz
loope
orl
scas
add
pop
push
ds
push
fldenv
sub
lods
int
jle
jle
sub
cmp
nop
jnp
out
insb
icebp
out
in
push
sbb
mov
adc
movsl
pop
cmp
sbb
xorl
inc
loopne
lock
jnp
movsl
call
and
in
mov
mov
inc
pop
xlat
ret
pop
xchg
mov
lods
mov
fwait
lcall
int3
jno
mov
pop
mov
cmp
add
push
in
cmc
adc
add
testb
dec
mov
or
loop
jg
dec
xor
xchg
stos
and
inc
xlat
aas
gs
push
cmpl
sbb
pop
movsl
jmp
and
scas
repz
int
and
mov
jp
loopne
adcl
les
xchg
popf
imul
inc
add
faddl
or
enter
mov
sbb
xor
add
push
pop
cmp
cld
pop
mov
jmp
fsubr
sub
sub
je
cmp
pop
and
bound
pushl
outsl
and
shlb
fcoml
jl
xchg
push
fcoml
or
push
xchg
and
lret
in
test
cmpsl
and
and
rolb
and
fnstenv
les
in
lods
lcall
push
daa
aaa
or
mov
fdivr
jge
iret
clc
pop
mov
xor
mov
cltd
xchg
pop
faddl
sbb
add
mov
fstpt
push
and
mov
inc
jmp
hlt
bound
mov
lods
pop
mov
cmp
movsl
inc
pop
mov
shl
mov
mov
repnz
iret
push
jge
pusha
xchg
pop
inc
test
mov
test
mov
fldt
mov
jg
and
inc
sbb
sahf
rcl
pop
lret
adc
in
add
sbb
or
jnp
and
sub
dec
and
popf
sub
lahf
mov
dec
int
or
popa
sbb
xlat
int3
cwtl
stos
subl
sbb
mov
cmp
dec
mov
rol
jnp
inc
mov
ror
jl
inc
int
or
inc
hlt
stc
lcall
stos
into
adc
add
push
pop
inc
mov
neg
xor
sub
xchg
sbb
cs
push
loope
fdivs
pop
mov
jp
xchg
inc
test
loope
repz
test
sub
xor
call
imul
pop
xorb
int3
pop
int3
incb
push
jmp
sbb
pop
and
scas
xor
inc
push
sahf
jbe
push
jp
cli
lods
cli
push
call
out
cmpb
add
movsl
popa
xchg
rorl
push
add
sub
mov
pop
jle
or
adc
mov
mov
push
dec
es
jne
icebp
and
cltd
push
or
int
add
xor
jmp
and
orl
lods
lcall
or
pop
push
js
arpl
adc
popf
or
cmp
ljmp
mov
mov
mov
daa
in
mov
sbb
dec
and
mov
push
pop
pop
notl
adc
shrl
sub
sub
fnstsw
dec
xor
rolb
pop
mov
adcb
and
popa
repz
jnp
cli
aas
popa
data16
push
cmpsb
mov
ret
leave
stc
jns
mov
leave
in
push
cmp
push
dec
mov
pop
loop
ljmp
inc
iret
adc
jb
or
mov
push
inc
jnp
fcoms
dec
repnz
pop
inc
add
cmpsl
scas
add
hlt
call
shll
dec
push
inc
sub
mov
adc
cmp
jecxz
push
pop
add
cmp
xor
icebp
out
inc
pop
aam
dec
je
lods
mov
cltd
and
mov
insl
xor
icebp
dec
loop
pop
jnp
fisubrl
cli
mov
loopne
cmp
fmul
pop
xor
cmp
jl
jae
in
pop
pop
ret
pop
lret
add
loope
vmovaps
dec
rclb
cltd
enter
jae
aaa
daa
mov
daa
aaa
imul
cwtl
dec
stos
fidivrl
adc
call
add
sbb
int
nop
mov
cmp
xorb
and
mov
jno
and
mov
xchg
jmp
inc
mov
sub
outsb
out
mov
lds
add
xor
dec
in
call
mov
xchg
dec
xchg
push
dec
arpl
pop
scas
dec
and
movsl
out
hlt
lods
jo
inc
test
xchg
cmp
shlb
in
xor
mov
enter
cld
cmp
addr16
xor
sub
inc
adc
jne
inc
and
mov
mov
push
cmp
pop
into
fs
or
or
sbb
mov
mov
jo
and
mov
add
pop
adc
sbb
outsl
mov
sti
push
mov
rorl
outsl
mov
or
fcmovnbe
sub
lea
orb
insb
pushf
mov
or
movsl
outsl
jecxz
dec
cmc
scas
fcmovnu
lods
jne
xchg
daa
cmp
and
lods
lock
outsl
cwtl
iret
outsl
fdivs
mov
mov
mov
hlt
pop
out
arpl
roll
sarl
ja
imul
or
and
xor
loopne
or
les
aam
pop
arpl
clc
adc
mull
inc
clts
cmp
mov
and
sarb
je
xchg
mov
push
or
mov
hlt
fdivrl
add
ficoms
sub
jno
mov
popa
mov
or
xor
xor
inc
adc
mov
or
cmp
mov
push
fcompp
mov
jbe
jnp
dec
cmc
sub
and
xchg
sub
scas
leave
xor
push
mov
pop
leave
mov
mov
mov
into
lcall
pop
xchg
sbb
push
pop
sub
push
adc
mov
push
xchg
insb
cwtl
xchg
and
lds
pop
stc
ficompl
and
mov
push
stos
std
mov
pop
std
stc
mov
sbb
add
push
add
fiaddl
mov
push
and
sub
fcmovbe
pop
mov
pop
popf
call
jnp
pop
loopne
leave
add
mov
js
and
cwtl
cld
es
push
js
clc
imul
jge
xor
arpl
sub
sbb
xor
loop
mull
inc
divl
subb
insb
dec
jnp
stos
pop
mov
lods
adc
mov
sub
xchg
inc
int3
lret
inc
mull
clc
movsl
cmp
cs
ftst
cli
dec
movsl
add
cmp
enter
pop
pop
fs
ss
adc
pop
into
xor
ffree
xchg
adc
jno
jg
sub
mov
jp
and
jp
fwait
in
adc
add
les
aas
aam
xor
sahf
adc
add
cmp
dec
mov
xor
scas
ret
add
dec
in
lahf
xor
sahf
in
inc
outsl
jbe
cltd
rorl
fwait
ror
incl
mov
push
sbb
xchg
push
mov
xchg
push
shrb
mov
nop
mov
fdivrl
mov
clc
and
decb
faddp
xchg
pop
loopne
ja
sub
aas
pop
ja
sub
mov
sbb
or
pop
sub
fiaddl
test
ja
push
pop
add
pop
clc
mov
flds
adc
leave
js
aam
lds
pop
stos
outsb
movb
popa
sahf
sub
dec
inc
rorl
dec
inc
jb
movsl
repz
inc
pop
xor
jns
dec
sub
rcrb
or
ret
daa
mov
add
stc
pushf
ret
dec
mov
xchg
and
fwait
fs
sub
sub
mov
aad
mov
xchg
mov
fwait
gs
fmull
or
cmp
dec
into
stos
jns
cmp
pusha
aad
incb
daa
dec
cmc
dec
pop
and
xor
gs
mov
and
jno
and
pop
clc
stc
test
and
loopne
mov
fwait
call
add
in
pop
push
jp
mov
jp
push
mov
xor
xlat
aad
stc
or
mov
mov
mov
xchg
lock
mov
inc
daa
xchg
daa
jae
xlat
dec
push
mov
push
add
xorl
push
add
jge
je
aam
js
pop
add
mov
imulb
aaa
into
jg
push
xor
mov
or
xchg
int3
push
add
mov
xchg
ror
scas
enter
cltd
and
pop
jp
movsb
cmpsb
mov
mov
orl
iret
ret
pop
add
or
pop
fisubs
lock
dec
add
pop
adc
xchg
jp
das
add
stos
sarl
addr16
and
mov
enter
adc
lds
push
dec
sub
mov
loop,pn
mov
adc
pop
in
imul
or
mov
loopne
stos
mov
jmp
adc
out
cs
add
jns
filds
hlt
push
cmpsl
or
and
and
dec
push
xor
scas
js
sub
mov
ljmp
popa
dec
dec
stc
mov
mov
inc
inc
add
mov
lret
cs
in
mov
popl
jecxz
out
jp
inc
aam
mov
imul
push
and
jge
aad
xchg
enter
xchg
lret
adc
cli
cmpsl
jae
cwtl
dec
sub
sub
aas
inc
xchg
inc
bound
and
mov
mov
add
inc
mov
lret
in
scas
or
outsl
and
stos
sub
imul
jnp,pt
jbe
js
movsb
mov
or
dec
scas
xor
or
in
xchg
cmc
out
xlat
push
inc
in
pop
decl
insl
out
clc
jp
sbb
mov
mov
repz
out
jmp
and
add
and
popa
mov
xor
pop
jle
insb
push
mov
xchg
aam
mov
dec
xchg
jg
rcrl
lcall
mov
call
push
push
push
xchg
out
adcb
inc
es
mov
arpl
jp
mov
push
cmpsl
ds
or
int
lcall
das
mov
push
push
push
fwait
test
xchg
push
and
call
xlat
push
repz
dec
aaa
push
pop
ja
imul
insl
loop
fsubs
jecxz
int3
push
int3
out
rcl
shll
xor
add
mov
das
fdivrl
clc
clc
int3
in
pop
or
xchg
xchg
loopne
push
and
cmp
xchg
jae
and
adc
sub
shl
mov
xor
add
mov
jecxz
test
pop
int
pop
popf
fbld
adc
movsl
adc
cwtl
xchg
push
cli
fmull
mov
add
in
or
mov
sub
jmp
fldl
addr16
lock
cmp
sbb
mov
adc
scas
lea
push
aas
jo
push
jo
scas
jg
dec
test
in
mov
adc
nop
dec
roll
sbb
push
xor
test
inc
notl
jmp
enter
lahf
filds
add
stc
je
imul
inc
add
adc
dec
jmp
clc
mov
aam
popa
xchg
mov
sub
pop
xchg
sub
faddl
pop
sbb
les
cmpb
jbe
mov
stc
mov
push
push
add
lret
adc
loop
sahf
pop
test
and
arpl
sbb
mov
movsl
fdivrp
test
xchg
gs
cmpsb
jcxz
scas
push
into
xchg
loop
adc
adc
and
call
xchg
sub
loope
stos
test
push
xchg
nop
fucomp
pop
imul
repz
test
bound
xchg
pop
testl
add
aad
mov
repz
sub
inc
adc
mov
xchg
je
addr16
insb
cmc
shrb
pop
arpl
into
bound
stos
cmc
repnz
lock
pop
or
std
mov
and
mov
and
stos
add
inc
ret
sub
js
dec
dec
fbstp
xchg
pop
mov
fstl
bound
inc
adc
push
xor
adc
and
imul
fs
insl
aam
jbe
mov
popf
dec
inc
mov
jmp
inc
or
inc
push
jb
js
test
fdivs
push
adc
movq
mov
and
stc
push
inc
push
dec
shl
sbb
in
lods
xchg
popf
std
mov
fdivs
into
pop
aam
lea
cli
jne
pop
fistps
push
push
das
rcrb
xchg
mov
xchg
popa
mov
sub
mov
sbb
test
mov
loopne
adc
or
add
dec
lods
dec
pop
pop
popf
movsb
xchg
mov
fidivs
xchg
inc
xor
sbbl
pusha
cld
mov
aaa
sti
sbb
cmp
or
xchg
add
iret
push
outsl
mov
dec
mov
add
lahf
scas
fidivrs
mov
fsubs
add
or
add
dec
test
mov
inc
scas
sub
subl
xchg
xor
or
mov
cmc
aam
jg
loope
shr
cmp
in
pop
in
imul
push
pop
into
adc
std
sarb
aam
jno
cmc
in
inc
ret
mov
repz
jb
and
jecxz
idivb
inc
test
or
and
ds
xor
lahf
cmp
xor
icebp
mov
sbb
cltd
push
cmc
out
fisttpll
enter
xlat
pusha
ret
pop
mov
fimull
pop
inc
adc
push
jge
add
mov
pushf
inc
or
mov
popw
out
or
sbb
push
adc
mov
mov
push
fninit
iret
add
jl
test
enter
cmp
rorb
out
lret
fadd
testl
or
jns
aas
rorb
sub
mov
mov
cmpl
jb
clc
fldl
lret
ss
jbe
add
sti
into
xchg
and
repz
dec
cmpsl
jno
lock
enter
lods
dec
mov
cmp
clc
pusha
push
je
dec
dec
call
jo
sub
mov
rcll
js,pt
js
cmp
outsb
pop
pop
mov
dec
je
dec
lods
mov
xchg
lods
pop
sbb
hlt
cli
add
inc
mov
out
lea
sub
mov
lock
dec
push
jne
mulb
mov
cmc
or
popa
enter
lods
mov
and
pusha
movsl
es
idivb
es
xlat
divb
mov
xchg
rcll
flds
xor
xlat
lret
pop
lea
mov
mov
pop
sub
add
imul
jbe
cmpb
fucomp
push
test
push
mov
jo
xor
testl
xchg
inc
add
adcl
clc
in
dec
push
lea
mov
dec
inc
sti
inc
imul
loope
std
in
lock
out
and
fistpll
dec
mov
cli
jb
dec
rcrb
in
ret
sub
mov
and
mov
and
lret
mov
add
out
xor
cld
xor
stos
repnz
das
xor
xor
ljmp
cmp
out
xor
push
nop
mov
mov
cmp
add
movsl
fwait
xlat
inc
inc
adc
js
rorb
mov
mov
cmpb
inc
fisubrl
aas
adc
fdivp
ret
mov
adc
sub
pushw
insl
adc
imul
pop
lods
int3
inc
shlb
push
outsb
add
cmpsl
sub
push
inc
xchg
outsb
mov
xchg
int3
sahf
pop
dec
je
es
sti
pop
iret
add
mov
daa
lret
notl
sbb
sub
pop
lea
sbb
cmp
lods
push
adc
mov
in
push
mov
sub
fcompl
inc
xchg
add
inc
xchg
pop
cmpsl
lahf
xchg
push
cmp
cmp
shr
fistps
pop
insl
adc
lahf
inc
sarb
mov
cli
jmp
sbb
iret
loop
cs
xchg
addr16
mov
jnp
cwtl
cld
jmp
pop
shrb
jo
mov
cmp
loope
cmp
fwait
dec
push
xchg
jnp
mov
insl
pop
and
xchg
fists
pop
jnp
jbe
jno
test
pop
cmp
scas
xchg
inc
xchg
lock
fsubrl
lret
negb
test
fwait
lds
pop
or
stos
xchg
pop
outsb
in
out
xlat
ret
cld
cmp
cld
and
fistpl
out
and
fcoms
loopne
arpl
ss
test
jecxz
pushf
add
movsl
int
xchg
fs
xorb
sub
lock
pop
mov
lds
fistpll
mov
arpl
adc
pushf
push
sbb
shll
daa
mov
sbb
pop
cmp
test
pusha
or
jbe
in
es
xchg
jnp
dec
imul
xchg
fistpll
pushf
pop
push
adc
subb
das
pop
jle,pt
lock
xchg
mov
xor
cli
mov
movsb
mov
out
adc
cmpsl
cs
sbb
push
and
mov
mov
das
popf
mov
ds
mov
sub
or
push
test
ss
call
sub
cmp
adc
dec
sub
jbe
outsl
sbb
xlat
sub
jbe
and
mov
sub
in
aad
lahf
xorl
gs
xor
jo
cs
pop
out
pop
enter
sbb
mov
push
ja
mov
xchg
sub
data16
sub
mov
xchg
push
cld
adc
cli
mov
test
jae
mov
inc
or
loope
jmp
sub
cltd
mov
arpl
jns
ret
xor
aam
sub
or
loopne
cmp
rorb
int3
das
lcall
pop
orl
rorb
daa
sti
movsl
xchg
mov
push
imul
in
inc
jns
dec
cmpsl
ret
imul
push
push
je
jbe
out
in
repz
lcall
lahf
xchg
das
and
les
dec
jnp
push
movsb
popa
movsb
test
mov
mov
fildll
mov
leave
inc
enter
cmp
test
mov
add
sub
xchg
aam
xor
and
fsubs
pushf
out
pop
cmpsl
push
leave
aaa
sar
add
jo
jnp
jo
das
push
loop
lods
dec
xor
inc
cmp
sub
sarl
jno
mov
outsl
xor
pushf
adc
cltd
decb
jmp
adc
out
hlt
sbb
enter
clc
inc
pop
in
arpl
xor
stc
push
xlat
inc
jg
arpl
dec
inc
ret
fistpll
jnp
jmp
jle
out
sub
jno,pt
fstpl
pusha
mov
sbb
shll
jae
jno
pop
push
push
lods
sub
lock
pop
mov
ficoml
dec
jmp
cmp
enter
and
pop
icebp
add
out
enter
out
enter
sbb
js
ds
adc
das
mov
leave
fidivrs
or
shr
add
mov
push
sbb
sub
sub
popa
cmp
mov
xchg
and
stc
add
jmp
inc
mov
sahf
repz
roll
or
stos
xchg
mov
cmpb
push
and
sahf
ret
adc
cmc
mov
mov
cld
test
rolb
cmc
xor
sub
push
jne
fadds
ljmp
inc
add
jo
dec
pop
add
mov
mov
sub
insl
pop
mul
jne
lods
cmc
dec
adc
adc
cmp
push
inc
ret
push
sbb
ds
jg
pop
mov
jne
push
mov
xchg
mov
jns
popf
pop
fnsave
cs
xor
sub
xchg
mov
push
cmc
cmp
aaa
pop
pushf
sbb
mov
adc
mov
ja
pushf
ret
dec
mov
adc
and
hlt
sahf
addr16
xchg
aas
sbb
xor
or
adc
fimull
pushf
loope
mov
add
adc
push
out
sub
iret
dec
pcmpgtb
or
or
xchg
mov
out
loope
inc
sbb
iret
xlat
mov
cmpsl
pop
cmp
outsb
adc
lds
movsl
push
xchg
insb
imul
out
sub
lods
and
inc
jg
testb
and
inc
mov
loop
push
call
loop
insb
repnz
push
flds
lods
jne
mov
xchg
add
cltd
xor
pop
ror
rcll
shrb
jge
ljmp
bound
mov
test
push
in
imul
jle
adc
mov
inc
mov
jns
repnz
xchg
and
aaa
lret
xchg
xchg
cmp
sub
std
push
sbb
std
xor
mov
test
cmp
push
mov
out
bound
push
pusha
cmpsb
jae
sbb
mov
cmp
inc
xor
add
test
mov
mov
addr16
adc
xor
or
cmp
std
push
out
scas
mov
imulb
idivb
insb
movsb
pop
mov
paddw
imul
mov
xor
xchg
aad
or
push
divb
xor
insb
pushf
out
xor
std
fmulp
jnp
cmpsl
push
adc
mov
in
inc
cmc
aaa
shl
push
or
call
ret
fisubs
leave
daa
iret
stos
pop
mov
les
shlb
and
add
icebp
nop
sub
add
cmpsb
and
and
sbb
or
les
mov
sub
fcomip
adc
cmp
lcall
fsts
sbb
add
inc
pusha
cmpsb
stc
add
insb
test
jne
mov
dec
lret
push
pop
aad
sar
inc
hlt
shlb
in
aas
sub
add
lods
sub
jmp
push
stc
jp
lret
stc
fdiv
sbb
add
hlt
lahf
clc
pushf
dec
daa
or
sub
jns
pop
call
in
xchg
stos
push
inc
add
lret
or
lods
inc
jle
popf
push
fistps
cmp
outsb
sbb
inc
add
push
sub
hlt
jns
cld
push
mov
jns
dec
div
xor
push
arpl
test
xchg
sub
dec
and
vpor
sub
pop
in
sbb
fnsave
xor
jbe
fnstenv
mov
jp
pop
cmp
and
mov
sbb
das
outsl
sbb
push
icebp
jl,pt
movsl
jne
sahf
jle
repz
dec
lret
clc
in
dec
pop
wbinvd
cltd
sbb
js
pop
dec
sub
mov
gs
pop
jg
and
add
iret
hlt
cmp
rorl
scas
mov
dec
es
mull
xchg
test
and
lahf
lock
arpl
repnz
jns
jae
dec
push
arpl
sahf
mov
stc
push
scas
pushf
add
mov
out
cwtl
jo
out
xlat
push
push
mov
sbb
xor
les
xor
pop
and
nop
mov
lahf
sbb
cmp
sub
adc
inc
cmp
pop
adc
push
push
cmpl
xchg
pop
push
sbb
mov
pop
cs
loop
jmp
xchg
add
addb
mov
popa
js
cli
jnp
mov
lcall
popf
xchg
sub
inc
ret
jae
stos
popa
jl
das
jne
mov
fs
pop
stos
add
inc
into
dec
div
push
negl
mov
pusha
fiaddl
test
add
stc
arpl
push
cmpsb
loope
jge
and
popf
cld
frstor
stc
xor
inc
stos
and
int3
arpl
mov
sti
pop
aaa
jmp
cmp
aaa
cmp
std
stc
mov
xchg
fucomp
dec
arpl
negb
add
in
les
cmp
push
pop
mov
popf
jbe
loopne
inc
pop
fidivrs
mulb
repz
ror
sub
popf
call
mov
push
jb
call
pop
push
cmp
cli
push
xor
ja
in
lods
les
pop
jae
adc
inc
adc
push
xchg
jp
lahf
jb
jae
sub
xor
xchg
adc
push
dec
pop
das
movsb
mov
mov
aas
adc
push
xor
orb
iret
mov
aas
data16
lret
in
fcoml
xor
mov
dec
add
js
movsb
addl
xchg
fisttpl
imulb
lahf
test
lret
fs
cli
cmpsb
aas
mov
ds
and
dec
mov
jmp
dec
add
pop
sub
les
xor
xor
jae
rcr
push
dec
mov
xchg
xor
roll
shlb
jae
sub
ljmp
xchg
mov
jmp
je
push
add
mov
sub
or
xchg
sbb
outsb
push
dec
js
push
jecxz
cmp
sub
mov
cld
ss
push
popf
sbb
mov
and
push
mov
scas
jae
xchg
shll
fidivs
mov
loope
xor
and
test
lahf
cmp
pop
lock
adc
outsl
test
and
dec
sub
je
push
add
cmp
fsubrs
ss
test
enter
sub
mov
subb
xchg
pusha
imul
inc
outsl
mov
int
sti
xchg
sbb
popf
outsb
mov
cmp
adc
lods
ud1
mov
and
lahf
std
loop
ljmp
jmp
loop
das
pop
adc
sub
or
out
xor
sub
add
test
jp
add
pushf
je
sbb
push
push
or
out
adc
jnp
cmp
fs
add
mov
ret
mov
es
addr16
fidivs
out
fistl
dec
mov
sbb
shl
shr
inc
mov
and
in
jns
cld
test
hlt
mov
xlat
push
fstps
dec
lahf
mov
jl
lods
int
xor
or
data16
xchg
jl
aaa
int3
mov
mov
stc
test
jbe
repnz
mov
mov
sub
std
mov
add
or
int
xchg
push
shll
mov
test
pop
add
add
mov
mov
mov
fldpi
repnz
leave
dec
enter
jo
inc
mov
xor
or
mov
push
out
adc
pop
jb
out
test
mov
mov
dec
jae
cmp
testl
cmp
lods
aad
std
add
std
call
aam
sti
adc
sarl
sarl
fcomip
adc
lret
jno
aam
xor
adcb
ja
sub
fisubrl
dec
stc
fstl
insb
data16
loop
shlb
int
inc
fists
mov
lds
mov
dec
jne
inc
sbb
push
mov
dec
iretw
xor
repnz
xlat
mov
mov
loop,pn
mov
add
jl
mov
or
mov
add
stc
pop
incb
movsb
outsl
adc
add
xchg
or
daa
out
adc
push
out
loope
inc
fs
mov
mov
lock
aam
ja
stos
mov
inc
jns
mov
cli
pop
xlat
int
adc
and
ds
or
mov
xchg
lods
xor
pop
inc
out
and
ret
cltd
repz
dec
dec
jb
mov
repz
sub
imul
idivl
shrb
movsb
call
xchg
jb
xlat
xchg
movsl
data16
out
cltd
jnp
imul
dec
insl
xchg
or
lods
cmpsl
push
mov
xchg
adc
in
inc
push
and
sbb
fiaddl
cmp
sbb
jns
inc
repnz
packssdw
data16
ds
jno
outsb
and
fadd
jb
adc
fstpt
mov
or
test
xchg
cmpl
xchg
jnp
sub
filds
or
jg
lahf
lahf
or
adc
dec
bound
cmp
insl
push
jge
cltd
imul
mov
sub
das
insl
dec
sub
mov
mov
scas
mov
jge
and
xchg
inc
cmp
hlt
mov
jae
jge
test
xor
rcll
xchg
cmpsl
push
out
pop
pop
aad
cmp
dec
rcrl
fsubrs
jno
push
in
jo
aas
cmp
xchg
pusha
pushf
xor
cmpsb
in
push
and
fistps
push
maskmovq
testl
cmc
fistps
nop
push
mov
push
jbe
jle
fdivrl
xchg
dec
cmp
push
repz
mov
xchg
popl
mov
mov
cmpsl
int3
dec
xor
inc
fstpt
nop
push
cmc
sbb
in
in
jecxz
xchg
mov
test
adc
add
xor
inc
outsl
pop
scas
in
mov
sbb
test
scas
mov
imulb
rclb
out
pusha
and
xor
inc
sbb
jb
mov
movb
push
fistpll
mov
idiv
dec
xor
les
jo
shrb
mov
inc
jge
xchg
or
mov
js
jg
cmp
movsb
rclb
sar
lock
test
inc
and
jl
push
xlat
add
pop
arpl
or
ret
pop
mov
lea
call
xor
pop
push
cltd
data16
pop
out
cmp
xor
dec
xchg
jo
out
lods
clc
lret
jo
add
std
sub
insb
sbb
mov
dec
adc
inc
bound
xchg
popf
push
dec
sbb
push
in
mov
lret
movsb
sub
je
insl
sub
mov
push
aam
pop
inc
push
sbb
gs
stos
push
call
ret
aaa
or
mov
inc
mov
out
mov
inc
push
inc
xchg
mov
in
jg
inc
faddl
xchg
vpslld
jmp
sub
ffree
aaa
mov
insl
loopne
jne
filds
loop
adcl
dec
pop
xor
dec
pop
shlb
dec
lds
ja
arpl
lcall
cmp
cmpxchg
mov
jne
add
or
pusha
push
pusha
out
into
test
lahf
lret
shr
cld
pop
pop
inc
dec
movsl
ret
xchg
inc
adc
adc
xchg
in
loope
push
aaa
out
sub
mov
sti
mov
es
cmp
lret
test
std
sbb
das
xchg
or
fnstenv
repz
cmp
fbstp
pop
cltd
mov
ds
cmpsb
pop
pop
sti
movsb
loope
outsb
mov
insl
xor
rcrb
mov
jb
daa
push
push
mov
cmpsl
and
adc
dec
xchg
out
mov
push
dec
cmp
xor
stos
dec
rcrb
dec
test
adc
dec
cmpsb
in
adc
cmp
or
xlat
push
dec
sub
dec
call
mov
push
xchg
sub
fld
dec
adc
inc
mov
daa
mov
mov
addr16
and
inc
pop
mov
push
mulb
pusha
pop
mov
loope
sbb
sub
out
pusha
jmp
retw
inc
dec
dec
jmp
nop
pushf
pop
js
adc
lea
cld
jecxz
adc
push
jmp
mov
arpl
sbb
xlat
test
push
sbb
inc
sbb
jnp
xchg
mov
pop
mov
pop
inc
inc
nop
xchg
or
out
jno
push
std
mov
add
mov
clc
stos
clc
mov
aaa
pop
dec
cwtl
loope
stos
jp
mov
inc
xchg
dec
in
pop
cmovbe
xor
sub
and
xor
pop
mov
addr16
aam
out
je
int
sbb
stos
cmpsb
push
xchg
lods
inc
inc
add
pop
mov
push
jb
mov
push
add
dec
fistps
mov
mov
dec
andl
shl
in
test
decl
fwait
and
cmp
and
cld
jg
in
lods
sub
mov
rorb
push
in
into
xor
mov
dec
pop
and
movsl
mov
stos
push
divb
push
notb
scas
imul
gs
lret
lods
out
xchg
jnp
mov
adc
sbb
sub
mov
mov
bound
pushf
xchg
fidivrs
outsb
mov
push
scas
push
movl
sub
mov
mov
and
shll
xor
test
and
movl
test
xchg
stc
adc
add
aas
xorl
and
out
insb
mov
adc
test
fcompl
shlb
out
test
mov
fldt
and
dec
cwtl
call
into
dec
cmp
incl
dec
sbb
in
in
adc
dec
cmp
sbb
sbb
insl
fmul
pusha
dec
jbe
popa
arpl
rcl
ror
adc
fisubrs
mov
ja
fimuls
std
cmp
mov
jnp
push
frstor
cwtl
cltd
push
dec
loop
cld
xchg
push
loop
cltd
in
dec
mov
movsb
jmp
out
fwait
cs
daa
fmuls
pop
repnz
pop
cmp
push
push
mov
arpl
lcall
cs
enter
jo
out
jb
movsl
imul
pop
gs
mov
add
out
bsf
sub
cmp
nop
adc
lcall
mov
add
je
sarb
inc
aaa
lea
or
ds
xlat
xchg
and
or
sbb
push
stc
outsb
pop
imul
sbb
mov
xchg
stc
sub
das
and
cmp
mov
mov
sahf
inc
and
dec
inc
gs
test
sbb
lods
insl
add
lret
xchg
push
push
movsl
sbb
aas
and
hlt
or
cmc
pop
or
xchg
into
stc
imul
xchg
cmp
scas
imul
mov
xchg
xlat
jbe
pop
and
mov
jo
lret
iret
pop
imul
mov
loope
js
int3
inc
lcall
mov
push
xor
ljmp
xor
imul
mov
daa
mov
lea
loope
mov
lahf
inc
push
in
dec
push
test
ret
push
adc
dec
daa
ror
pop
arpl
push
jl
mov
cmp
bound
dec
push
cmp
shl
lret
pushf
sahf
cwtl
mov
outsl
pop
or
je
cmp
mov
mov
or
mov
pusha
mov
jmp
leave
icebp
sbb
jb
pushf
or
mull
into
sub
inc
add
add
cmpsl
cmpsl
loopne
or
mov
xchg
mov
icebp
enter
pop
mov
ss
push
lods
ja
insb
mov
call
loop
inc
std
adc
or
imulb
jmp
insb
loopne
mov
repnz
adc
jbe
fdivp
or
gs
mov
mov
aam
pop
or
or
xchg
hlt
adc
out
mov
movl
mov
xor
ds
and
mov
xchg
and
sbb
movups
xor
insl
into
jae
pop
call
jp
adc
mov
cmpsl
sub
mov
ss
test
mov
arpl
mov
out
sub
adc
bsf
les
xor
mov
cmpl
sbb
xchg
loope
mov
mov
push
scas
mov
loope
xlat
mov
cwtl
jmp
add
leave
dec
xchg
lock
adc
and
fcoml
or
push
lods
mov
push
bound
push
popf
not
xor
or
repz
jge
loop
sarl
out
push
dec
pop
ljmp
mov
or
js
xor
test
inc
push
stc
inc
and
popa
dec
mov
cmpsb
xor
mov
jo
shrl
cmp
xor
in
shll
jp
mov
push
dec
orl
je
cld
arpl
sbb
in
arpl
movsb
je
aad
daa
das
push
xor
adc
ljmp
movsb
sbb
xchg
pop
fstpl
xchg
dec
insl
loopne
mov
outsb
lods
push
cltd
jle
lret
ja
pusha
iret
mov
rorb
cmp
pop
push
xchg
cmc
inc
mov
lock
hlt
imul
mov
fs
cmc
mov
mov
xchg
leave
add
and
out
outsl
testl
and
and
outsl
std
dec
es
fiaddl
ret
out
arpl
shlb
insl
pop
sub
fwait
dec
lea
push
lret
pushl
into
pusha
mov
std
mov
jmp
movsl
or
push
inc
or
xor
mov
setae
movsl
pushf
pop
mov
test
push
xchg
popa
sbb
mov
dec
jge
sbb
add
ja
outsb
dec
sbb
adc
cwtl
add
pop
dec
sbb
xchg
cmpsl
xchg
xor
scas
dec
icebp
xor
mov
mov
sub
int
inc
sbb
sbb
or
inc
sbb
repz
int3
jne
stos
cli
xchg
mov
xchg
sub
cli
fcoms
decl
stos
jo
mov
cmp
cwtl
aaa
shl
add
jo
pop
arpl
out
cmp
sbb
popf
call
test
outsl
mov
insb
scas
add
ret
add
inc
jno
ficompl
mov
bound
aaa
iret
push
gs
jo
sub
enter
mov
mov
mov
push
cmc
xor
jl
jo
push
jmp
popa
xchg
dec
mov
scas
jecxz
shl
xor
pop
sub
and
repz
ljmp
sti
test
xor
sbb
in
sub
or
dec
mov
shlb
je
fldcw
int
xlat
xchg
pop
dec
cmp
stc
or
dec
sbb
sbb
add
and
pop
sbb
fucomip
cmpsb
inc
dec
outsb
pop
xchg
or
xchg
sahf
mov
xchg
ret
or
sub
das
jle
push
push
fdiv
pop
push
mov
mov
pop
mov
sub
lods
xchg
test
ret
dec
dec
call
fdivrp
add
rolb
inc
mov
das
or
pop
leave
dec
and
or
hlt
lock
pop
xchg
adc
cld
dec
mov
clc
dec
ret
adc
cltd
leave
gs
test
decb
jle
cmp
fldenv
icebp
lock
roll
xchg
jns
fstp
mov
cltd
lret
and
push
test
lea
jbe
shll
xor
mov
mov
xchg
std
add
push
push
fisubl
sub
movsl
sbb
sbb
and
adc
repz
sbb
mov
icebp
pushf
xchg
imul
lahf
push
dec
aaa
xchg
jge
lods
test
jmp
icebp
inc
sbb
jecxz
mov
rcrb
and
cli
push
popf
and
mov
add
push
sub
xchg
out
mov
xor
fwait
adc
test
push
mov
and
adc
mov
fwait
data16
ljmp
shll
push
dec
push
ret
mov
repz
sti
mov
test
cmp
push
aas
lahf
mov
and
daa
xor
jp
pop
test
xchg
xchg
out
frstor
jo
imul
push
sub
jge
shlb
out
mov
cmp
and
bts
fisttpl
mov
or
inc
mov
orl
cmp
xchg
stc
std
movsb
outsl
inc
lds
mov
into
push
retw
rcrb
pop
cs
addr16
addr16
negl
jecxz
enter
imul
sbb
sbb
lods
jno
sbb
dec
rol
mov
push
fildll
cmp
jmp
sub
dec
scas
sahf
out
popa
jo
jg
sahf
mov
dec
adcb
sbb
sti
or
int
sarl
out
mov
xchg
inc
nop
sub
sub
xchg
and
mov
mov
pop
mov
jno
pop
jns
fstps
movsl
or
rorl
sbb
pop
pusha
les
out
roll
inc
or
sub
dec
push
je
es
ja
hlt
in
add
cmp
xor
mov
movsl
stos
jo
pop
ds
aad
pop
aas
out
in
nop
jae
test
jnp
jb
dec
ss
and
jne
mov
ret
addb
pop
cmpsb
sbb
sbb
outsl
gs
pop
mov
incl
push
fsubrp
insl
pushl
stos
jmp
mov
mov
sub
popf
int3
sahf
and
jl
mov
rcr
mov
mov
inc
push
repz
std
xor
push
push
xchg
and
fstl
and
xchg
jne
fdivrl
and
push
xlat
pop
mov
push
daa
js
cld
cwtl
pop
inc
jmp
mov
jne
add
lds
les
cmp
bound
adc
dec
cmp
loop
ror
in
ja
in
adc
inc
mov
xor
xchg
arpl
pop
xchg
xor
loope
jns
inc
outsl
sahf
mov
lcall
ljmp
sbb
cmp
lods
cmp
sub
mov
sub
xor
loop
or
jp
aaa
sbb
jo
sub
hlt
gs
popf
jo
ret
imul
dec
mov
test
pop
scas
daa
sahf
js
or
sub
adc
sub
fimuls
xor
fnstenv
cmp
xchg
mov
or
fwait
es
in
lea
xor
xor
arpl
gs
in
in
jns
aam
adcb
cmp
xor
jo
sahf
outsb
leave
or
test
sub
std
cmp
inc
pop
push
mov
aaa
shlb
adc
shll
and
lea
adc
ds
jmp
add
or
aad
pop
or
push
and
lret
sub
out
push
xor
test
jbe
in
pop
or
push
sbb
mov
pop
jle
or
gs
lcall
call
ftst
mov
push
pop
lahf
pop
push
pop
cmp
fsts
aas
inc
cmp
repz
inc
sarl
idivb
lret
sbb
test
in
ljmp
xchg
mov
xchg
cmp
movsb
add
jmp
xchg
rol
addl
loopne
inc
push
push
push
mov
adc
mov
mov
stos
pop
sub
inc
aaa
cmp
lcall
movsl
jo
xchg
sub
push
enter
xchg
ficoms
inc
jae
in
add
push
mov
mov
arpl
cld
jecxz
dec
leave
xor
xor
jb
xchg
mov
outsb
std
or
pop
push
mov
ljmp
add
mov
sub
mov
jecxz
into
test
sbb
mov
lahf
popf
clc
pop
add
loop
pop
sbb
cmpl
leave
stos
nop
pop
mov
mov
aas
or
out
add
adc
add
sbbb
gs
pop
pop
popf
jle
mov
jecxz
std
and
push
loopne
stos
nop
je
adc
jne
sahf
test
push
int
ret
adc
fcompl
adc
ficoml
lret
push
sbb
pop
pop
lods
fisttpl
pop
fwait
pusha
mov
int
addl
orl
ror
mov
in
addb
jecxz
cmp
scas
fistpll
dec
dec
xchg
fwait
int
mov
pop
sub
cmpsl
data16
pusha
pop
daa
pop
mov
xor
xor
pusha
lods
pop
mov
sbb
out
dec
stc
sbb
fisubrs
fstpl
mov
hlt
ror
pop
or
and
adc
push
sub
aas
and
xchg
add
dec
vcvttps2dq
and
xor
mov
cmp
mov
stos
mulb
cwtl
sub
roll
adc
xchg
mov
in
cmp
cmp
mov
or
add
dec
ljmp
test
out
dec
add
iret
testl
fld1
mov
jmp
loopne
adc
lcall
lods
xor
jns
and
sbb
stos
push
jb
icebp
inc
inc
or
stc
std
cli
ljmp
inc
pop
pop
push
fsincos
adc
out
lock
push
inc
add
or
adc
mov
push
jnp
dec
gs
and
imul
or
jo
pop
inc
cmp
pusha
xchg
xor
or
xchg
add
out
or
xchg
js
cmpsl
adc
mov
imul
dec
dec
lret
cmp
pushf
enter
loopne
lods
test
mov
and
leave
cs
cs
dec
mov
rolb
jne
rolb
add
xor
insb
in
xchg
cld
dec
fadd
mov
stos
enter
icebp
sbb
adc
dec
movsb
pop
shlb
mov
jle
push
mov
pop
sbb
mov
sub
add
js
test
xchg
out
in
out
cmp
cmp
stos
inc
cmp
jp
inc
cld
out
fs
mov
and
lods
xchg
mov
push
std
cwtl
das
cli
iret
nop
mulb
rcrl
mov
lret
popa
mov
jp
fnstenv
sbb
lea
and
sub
in
add
je
jge
fwait
pop
in
sahf
popf
adc
mov
ret
test
and
inc
cmp
mov
ljmp
inc
call
jnp
aas
pop
mov
mov
jge
aad
in
js
inc
imul
or
cmc
xchg
lock
cmp
lds
inc
pop
hlt
dec
pop
pop
mov
jo
mov
mov
mov
pusha
enter
ds
bound
sub
cmpsl
and
jge
ds
imull
test
mov
xchg
push
jg
addb
rol
cmpsl
adc
stos
hlt
outsb
xchg
clc
cmpsb
popa
mov
scas
xchg
sub
pop
jb
lods
xchg
xor
mov
out
push
mov
sbb
mov
mov
out
lods
loope
in
push
cmp
in
mov
mov
jns
jnp
push
rclb
hlt
addr16
test
jae
out
lock
loope
gs
ds
stos
or
or
inc
mov
js
push
jecxz
fwait
jbe
lods
subb
jns
cmp
andb
mov
sbbl
xchg
lret
sahf
int
mov
sti
lods
xchg
sti
adc
out
push
lcall
fdivp
nop
lods
mov
mov
inc
push
stos
lret
pushf
add
aad
xchg
jmp
scas
push
mov
xchg
lods
jge
inc
imul
aad
mov
pop
jg
inc
inc
and
pop
lret
push
mov
testl
rclb
arpl
pop
movsl
mov
xor
mov
fisttpll
nop
fistps
xorl
adc
jno
mov
push
add
fstl
xchg
scas
fld
daa
sub
cmp
scas
cli
repz
mov
sub
xor
int3
enter
sarb
xchg
stos
xchg
stos
sbb
dec
jne
jnp
test
jmp
hlt
inc
dec
mov
sti
lret
mov
fwait
xlat
cmc
mov
fistpll
out
outsl
pop
popa
mov
sub
sub
ds
mov
fs
pop
lea
out
adc
mov
xchg
aaa
dec
push
arpl
mov
jnp
ljmp
shl
mov
jl
repnz
xchg
inc
je
jp
cmp
inc
mov
mov
mov
xlat
sbb
push
lods
or
add
hlt
xchg
popa
xchg
loopne
jae
mov
cli
aad
dec
sbb
stos
es
or
dec
fdivs
cwtl
push
xchg
aam
xchg
pop
call
cltd
iret
add
jp
mov
dec
inc
pushf
xchg
adc
repz
pop
mov
sbb
mov
std
in
cmp
cmpsl
dec
pop
pop
js
sahf
iret
faddp
jne
fsubrp
dec
dec
or
outsb
adc
push
jne
xchg
or
int3
into
icebp
cltd
popf
jne
push
cmp
insl
sahf
sbb
xor
cmpsb
in
fildl
xor
stos
jbe
xor
ficomps
fs
pusha
iret
aam
pop
pop
pop
mov
push
in
jne
mov
das
mov
test
aas
int3
clc
lds
inc
sarb
xor
icebp
lret
fstl
fnstsw
call
movsl
test
hlt
and
and
loope
daa
inc
cmp
mov
xchg
inc
mov
or
test
jmp
sub
ja
xchg
mov
or
negb
fimull
jb
mov
ficoms
and
fsubs
xor
sbb
sub
inc
inc
jo
stc
out
shlb
outsl
xor
mov
mov
test
aas
pusha
xor
pop
xor
adcl
into
inc
adc
lods
dec
fisttps
mov
repnz
sahf
lret
xor
test
js
inc
dec
in
push
jecxz
pop
ljmp
push
xchg
push
nop
dec
loope
pop
pusha
sbb
fildl
fwait
adcb
fmull
cli
sbb
lea
fucomp
xlat
lret
rorl
adc
dec
push
xor
cmpsb
pop
xchg
xor
or
jbe
cmp
jae
inc
clc
or
mov
add
mov
dec
mov
and
iret
jge
inc
pop
int
test
pop
xor
mov
sub
push
scas
das
rcrl
sub
dec
stos
xchg
sub
push
fucomip
push
mull
inc
mov
movsl
fwait
shrl
pop
testb
mov
cmpsl
cmp
je
cli
dec
mov
pop
shll
push
mov
lock
mov
sub
mov
push
test
mov
ret
xlat
jo
lahf
outsl
ficoml
dec
call
in
stos
xchg
int3
scas
adc
movsb
imul
mov
ds
inc
imul
push
xorb
repz
imul
cltd
pop
clc
xor
add
and
dec
mov
xchg
dec
xor
cmpsl
jns,pn
mov
pop
xchg
xor
decb
xor
mov
or
sub
push
fidivs
jg
stos
pop
jg
imul
test
add
into
lret
repz
popa
cmc
jle
cmp
lds
push
mov
mov
jmp
sbb
pop
push
stos
aaa
push
lahf
into
xor
cmp
xchg
scas
sbb
outsl
in
cmp
xor
jbe
xor
getsec
pushf
pop
hlt
addl
dec
enter
outsb
mov
jmp
hlt
mov
pop
sbb
stos
lods
mov
push
mull
dec
push
or
push
jge
sbbl
jg
add
daa
push
jecxz
imul
jns
mov
je
add
insb
fs
mov
lret
inc
jecxz
jb
arpl
cmpsl
repnz
xor
push
mov
dec
push
popa
or
in
adc
inc
loopne
pop
adc
mov
mov
out
xchg
mov
je
into
pop
jp
cltd
jecxz
fidivrl
lret
jno
ljmp
pushf
loop
lods
fisttps
test
lcall
dec
test
je
xchg
sub
xchg
in
xchg
adcl
cmp
int
jp
mov
jmp
fisubrl
insb
mov
or
gs
mov
sbb
vpmaxub
pop
dec
xchg
aaa
in
pop
push
jns
xchg
subl
jns
push
adc
lods
inc
icebp
ret
jnp
shl
out
mov
cmp
ret
inc
clc
orb
mov
lea
pop
mov
subl
jmp
or
lret
int
dec
jecxz
sbb
rol
je
cmp
xchg
je,pt
push
out
or
push
and
fnstcw
in
cli
fnstenv
mov
xchg
push
adc
loopne
jecxz
sub
xchg
loop
push
in
pop
int3
in
push
jnp
cld
xchg
addr16
aam
cmovle
pop
ret
repz
mov
dec
dec
sar
mov
push
out
push
mov
jp
int
stc
cmc
sbb
xor
clc
jb
mov
fcmovbe
dec
and
ds
mov
jp
imul
call
add
jmp
xchg
mov
pop
movl
ss
mov
lahf
jle
mov
test
outsb
out
jbe
push
loop
inc
jp
cli
adc
fstps
adc
or
xor
sub
icebp
shr
mov
inc
cld
lock
adc
ret
mov
imul
or
scas
cltd
mov
pop
rcrb
bound
mov
int
hlt
mov
xchg
pop
xchg
into
popa
mov
xor
xchg
sub
jno
fisttpll
cmc
movsb
aaa
ret
cmp
leave
ja
fiaddl
into
out
cmp
in
xor
gs
das
push
sub
cwtl
outsb
xlat
pop
mov
sub
aad
pop
cmp
nop
jecxz
ds
pop
clc
xor
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
.byte
.byte
or
and
shlb
cmp
gs
push
sub
icebp
sbb
out
ret
or
sbb
movsb
add
inc
gs
out
stos
and
fsubl
in
xchg
sbb
fcomi
and
cmpl
ret
mov
in
mov
push
js
in
push
shl
xlat
adc
pmaxsw
nop
inc
mov
mov
push
jmp
mov
leave
cs
hlt
jno
mov
aas
cmp
sbb
or
add
popf
dec
pop
pop
mov
or
sub
push
pop
stos
mov
add
push
ffreep
out
aam
fcomps
sbb
ljmp
out
popa
push
xor
cmc
in
push
stos
mov
loopne
adc
mov
sbb
mull
inc
sbb
das
mov
ljmp
xor
jecxz
aas
and
cmp
inc
decb
fs
lock
xchg
jmp
inc
in
adc
scas
push
cmp
mov
push
push
outsb
stos
out
pop
push
enter
stos
sub
jno
adc
into
jmp
in
fs
dec
shr
stos
sahf
cmpb
lock
and
in
cli
aaa
push
jo
into
filds
imul
sbb
sub
or
arpl
adc
sarl
arpl
sub
push
push
pop
inc
adc
jmp
mov
lahf
sub
loopne
fwait
jge
test
stos
addr16
lods
cltd
add
movsl
fidivrl
add
orl
scas
clc
xor
xor
xorl
sahf
ss
pop
lds
xor
iret
inc
add
sub
in
sbb
push
insb
sar
cltd
pusha
fmuls
scas
imul
mov
jmp
sub
and
pop
mov
cs
adc
in
sbb
aam
iret
cmpsl
or
adc
mov
sub
xchg
fldt
mov
lret
pop
pop
cwtl
les
xor
push
jge
lods
sub
and
pop
add
es
lods
mov
dec
outsb
xlat
and
sub
inc
adc
dec
cmpsl
mov
or
pop
sub
jbe
mov
mov
pop
xchg
cmpsl
and
dec
pop
or
dec
pop
push
mov
jl
or
push
pop
shlb
mov
test
xchg
fcmovbe
sti
dec
cwtl
push
loope
mov
dec
dec
aam
cld
jle
xor
pop
add
in
repnz
sbb
ret
imul
push
mov
int
adc
mov
shlb
pop
ficoms
fldcw
iret
cmpsl
xor
loopne
xchg
movsb
jecxz
loopne
aam
pmulhuw
or
adc
cmpsb
lret
in
aas
js
mov
fsubrl
lods
aas
push
mov
inc
mov
mov
loope
imul
cmpsl
insb
aaa
ret
inc
aam
or
loope
ret
pop
outsl
add
sub
stos
nop
mov
clc
call
push
xchg
lcall
pop
xorl
scas
jae
or
push
bnd
adc
aas
push
push
push
add
out
pop
pop
pusha
sbb
pop
adc
cmp
mov
aad
add
lcall
fsubrs
jns
out
outsb
fisttps
jns
pop
inc
cli
minps
cld
jle
in
mov
adc
mov
adc
xchg
lods
pusha
pop
and
push
xor
adcb
mov
cmp
adc
add
pop
pop
mov
dec
push
sub
push
xor
push
je
or
xlat
or
mov
test
add
add
std
xchg
jnp
lcall
cmc
cmp
xchg
xchg
cmp
dec
mov
mov
pop
insb
int
push
test
cmp
pushf
sub
icebp
adc
dec
out
xor
shrl
fisubs
daa
notl
xchg
jbe
and
xchg
and
jl
outsl
or
push
pop
and
lods
mov
push
mov
pop
loop
inc
subb
les
addr16
sbb
iret
jg
ds
jg
mov
addl
lcall
fstl
pop
into
stos
scas
sub
fcomps
dec
dec
pop
push
adc
pop
pop
ret
xor
cmp
mov
scas
bound
xchg
les
or
aad
xchg
es
mov
test
cmp
sti
sbb
jns
test
cmp
in
push
pop
mov
cmpl
ror
aad
cmpsb
popf
lods
loopne
repnz
cwtl
insb
mov
inc
jno
ds
jp
data16
pop
mov
cmp
out
test
mov
push
lods
jns
dec
repnz
test
ret
rcll
inc
mov
xlat
int3
sbb
ret
inc
je
jg
sbb
jmp
inc
pop
pop
fistps
cmp
out
mov
jge
hlt
out
data16
pop
sub
xor
in
push
push
clc
mov
pop
mov
add
iret
cmp
daa
dec
out
inc
nop
movsl
push
dec
mov
fldl
mov
scas
clc
or
cli
inc
xor
int
jnp
push
shrl
push
sbb
std
in
or
adc
stos
ret
and
and
lea
dec
fisubl
xor
mov
hlt
mov
adc
xchg
aad
aaa
xchg
adc
mov
mov
or
sahf
cwtl
jl
inc
sahf
fstp
adc
dec
int3
inc
dec
mov
push
das
imul
pause
sub
jp
js
test
sbb
inc
jl
test
cmp
popa
std
mov
std
std
mov
jb
adc
mov
xchg
lret
mov
lret
mov
decb
cmp
push
inc
inc
jg
xchg
hlt
xor
pop
hlt
jno
into
andb
mov
jl
xor
add
loope
push
movsl
sti
push
inc
pop
ja
mov
ss
jnp
fdivl
insl
push
inc
xor
mov
push
dec
sbb
divb
enter
push
inc
jno
ficomps
inc
and
test
pop
jmp
inc
fsubrl
pusha
std
mov
dec
hlt
loopne
or
sbb
rcl
push
xor
shlb
xchg
mov
xor
mov
xor
popa
mov
push
sbb
fucomi
lods
stos
xchg
popf
inc
shll
lods
mov
inc
jle
xor
test
mov
mov
call
sub
add
movl
popf
in
sbb
popf
shll
loop
cs
fsts
fwait
out
test
icebp
cltd
mov
out
fxch
pop
orb
lret
mov
and
xor
sbb
push
les
hlt
popa
add
gs
loop
stc
xchg
mov
sti
push
int
or
leave
cld
cmpsb
push
sub
push
sbb
mov
adc
mov
shll
mov
mov
pmuludq
sbb
or
lds
push
fcoml
sbb
xor
into
pop
xchg
and
mov
adc
jnp
sbb
pop
cwtl
data16
fucomi
inc
xor
mov
clc
mov
mov
scas
movd
sti
xor
push
push
inc
pop
sub
outsl
mov
add
dec
es
dec
lcall
mov
pcmpeqd
push
repz
mov
jns
bound
fisttpl
sahf
lods
cld
or
jmp
push
adcb
jne
pop
adc
cli
mov
ja
imulb
lock
add
lea
fcoml
ss
sbb
rorl
in
sbb
pop
pop
jg
ficoml
rorb
sub
sub
int3
repz
pop
out
out
add
insl
pushf
cmp
fs
xlat
clc
jo
mov
dec
mov
pop
gs
imull
mov
xor
stos
sbb
ffreep
add
daa
add
add
jno
mov
sarl
shlb
ds
daa
rcll
and
notb
jbe
movsb
pop
repz
aad
cmpsb
cmp
sbb
std
jns
lods
ljmp
sbb
add
ds
lcall
jne
cmp
repnz
cwtl
mov
push
inc
cmp
push
dec
fists
sti
ret
add
and
add
add
sub
push
fwait
jmp
xchg
lea
fwait
clc
scas
lea
adc
hlt
out
mov
push
into
push
aam
ret
int3
fmuls
adc
lea
aas
or
cli
add
push
shlb
adc
push
loopne
vpmadcswd
push
ret
das
cs
pop
and
js
adc
inc
inc
lds
loop
add
add
outsb
mov
xchg
mov
fwait
lahf
and
ficoml
arpl
push
xchg
test
pusha
mov
dec
lret
jno
fidivrs
pop
fistps
and
cmp
sbb
dec
outsl
jge
push
das
ficoms
mov
popa
jo
sub
push
mov
xchg
ljmp
test
idivl
jno
push
mov
jae
mov
dec
pop
mov
or
shlb
test
adc
ss
pop
adc
into
and
jecxz
js
subl
insl
dec
or
jae
lods
loopne
aad
fcmovnb
and
loope
sub
mov
loopne
pop
scas
sbb
sahf
lea
mov
inc
std
jne
sbb
jmp
xchg
dec
cmpsb
push
jg
jbe
ja
or
pushf
xor
push
sub
and
and
imul
sarl
push
sbb
addr16
lret
arpl
sbb
bnd
mov
sbb
scas
mov
stos
cmpsb
das
push
lods
into
push
pop
and
add
push
push
hlt
stos
adc
pop
mov
dec
push
mov
adc
bound
or
negl
out
repnz
sub
inc
and
lds
mov
aad
icebp
mov
js
into
fstpt
add
pop
jle
or
cld
pop
aaa
xor
lea
subl
adc
cmovg
call
inc
jnp
or
mov
jae
pop
mov
xchg
mov
fisubrl
xor
sahf
stos
arpl
out
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
.byte
.byte
scas
push
cmpb
jno
pop
sti
push
js
sarb
sub
and
push
repz
loope
stc
sub
test
jge
xchg
xor
and
popa
inc
dec
iret
xchg
clc
pop
repnz
int3
jg
ljmp
add
cltd
mov
mov
mov
filds
adc
out
ss
mov
adc
mov
and
ret
cltd
mov
inc
jnp
int3
add
daa
lods
pop
mov
lods
test
cmpb
xor
sbb
xchg
std
xor
jg
and
cmpsb
mov
sub
dec
int3
cs
ja,pt
out
adc
gs
neg
sub
pusha
cmpsb
xchg
fidivl
mov
scas
push
jmp
fisubrs
les
enter
mov
push
dec
cmp
lods
cmc
sti
das
pusha
es
add
add
and
test
jno
or
pop
and
mov
jle
adc
inc
dec
cmpsl
cli
sub
je
jg
pop
out
aam
dec
adc
pop
cmp
mov
lea
int3
test
stos
outsb
jmp
xor
stos
pop
push
arpl
int
je
aad
enter
mov
ljmp
or
data16
leave
push
sub
xor
sbb
push
push
pop
lods
stos
xchg
push
and
out
jp
xchg
inc
adc
pop
xor
lods
add
add
mov
mov
test
pop
lret
xchg
mov
shrb
inc
mov
insl
test
stos
hlt
or
fdivrp
js
gs
xor
test
icebp
sub
adc
cmp
test
popf
aas
xchg
xchg
mov
repnz
fistpll
je
test
pushf
fcomps
cmp
push
cmp
jae
scas
fists
and
add
lret
repnz
jp
pop
addl
jae
mov
and
aam
mov
adc
jb
clc
aam
pop
adc
cmc
mov
cltd
cmpsb
or
mov
loope
arpl
arpl
dec
enter
shll
push
mov
jb
rclb
pop
dec
ret
push
mov
adc
pop
mov
sub
and
sub
ret
cld
add
xchg
dec
int3
repnz
pop
fcomps
lret
ret
add
xchg
dec
and
mov
fsub
ds
mov
push
negl
inc
aaa
sub
xchg
sub
ret
je
cmc
stc
adc
scas
add
leave
stos
xorl
pop
in
lods
cli
jne
hlt
jg
jno
in
leave
clc
fcmovne
sarl
adc
es
inc
xchg
cmp
pop
cli
mov
xchg
and
andl
mov
iretw
mov
cli
sub
add
leave
push
mov
mov
fdivrp
clc
push
lods
aad
mov
nop
iret
movl
pop
xor
aad
fcompl
jl
cwtl
pop
adc
mov
mov
ljmp
lea
adc
jno
mov
ds
adc
js
sbb
mov
inc
sub
push
outsb
xchg
shl
push
addb
pop
aad
out
jmp
lret
in
lret
inc
sbb
scas
mov
movsb
and
inc
popf
inc
or
push
ljmp
sbbl
lcall
cli
jge
loopne
popf
mov
shrl
mov
xlat
aad
mov
ds
stc
push
movsl
int
test
push
scas
pop
aas
test
cmp
cmpsl
out
xor
jno
mov
shrb
lret
idiv
cwtl
jae
dec
sub
rorl
or
test
stos
jo
mov
mov
push
iret
cwtl
sbb
add
enter
jp
push
jge
mov
mov
push
xor
lahf
pop
aas
ficomps
jle
dec
mov
mov
fwait
mov
inc
std
repnz
xchg
jne
pusha
inc
xchg
adcb
pop
in
ret
push
xlat
jge
jl
inc
jmp
out
xchg
mov
scas
idivl
cs
fldt
neg
and
into
dec
lods
pop
mov
mov
addb
test
jne
push
mov
mov
dec
sub
jns
in
setle
repz
aaa
pop
xchg
cmp
mov
cmp
pushf
mov
out
adc
mov
or
out
jge
mov
pop
aas
rcll
sarb
ret
call
insb
into
mov
sbb
jge
sub
dec
pop
xchg
push
shrl
cli
das
std
inc
push
les
ds
mov
dec
cmp
xchg
hlt
nop
adc
lret
pushf
test
sub
dec
mov
mov
int
push
int3
xlat
sbb
add
fildll
insb
fiaddl
aad
adc
fdiv
out
inc
mov
pop
xor
out
xchg
subb
lret
pop
fcoml
mull
repz
dec
mov
jb
dec
out
dec
push
xorl
mov
mov
orb
and
xchg
ret
mov
and
push
int3
or
scas
je
xchg
int
add
pop
ja
lcall
dec
sub
mov
xchg
xchg
and
mov
and
scas
push
inc
imul
outsl
push
xchg
sub
in
outsl
aam
jbe
test
dec
aad
stc
push
dec
push
xchg
lods
outsb
pop
push
mov
jno
sbbl
lock
pop
mov
inc
pop
and
cmp
cmp
pop
aad
cmpsb
ret
jl
xchg
stos
je
xchg
adc
dec
ret
orl
out
in
xor
dec
pop
push
out
inc
outsb
jg
mov
push
ficompl
push
pop
pop
jge
mov
aam
adc
fadd
push
jmp
cmp
stc
add
les
adc
outsb
int3
and
inc
pop
cmpsb
adc
push
in
iret
mov
pop
jmp
test
cltd
loopne
das
mov
pop
sub
rcll
jne
out
sub
out
mov
das
aad
incb
fdivrl
xor
sahf
rcrl
outsb
sub
mov
cmpxchg
sti
sbb
dec
scas
jo
lds
xor
and
movb
or
dec
cmpsl
aam
add
andb
adc
loopne
mov
pop
fadd
lods
jb
sub
push
xchg
outsl
into
push
enter
inc
divl
fwait
loope
pop
dec
int
sahf
and
push
fists
dec
stc
mov
mov
popa
inc
insb
leave
ljmp
in
pusha
adc
adc
enter
outsl
mov
sbb
and
scas
std
imul
inc
mov
mov
inc
loopne
jb
mov
xchg
insl
call
pusha
lret
sbb
addl
mov
or
lods
stos
cmc
pop
sbbb
call
sbb
push
imul
jns
mov
cmpsb
jne
cmp
aas
fnstsw
jp
lcall
lret
jb
dec
cmp
xor
sbb
mov
cwtl
test
dec
xor
mov
stos
loop
add
xor
push
std
cmp
jo
dec
fbstp
sub
int
out
adc
push
cmp
out
xchg
cmp
add
pop
pushl
inc
push
mov
jo
pop
fs
xchg
xchg
out
lods
push
adc
gs
jbe
fsub
mov
inc
je
push
pop
jb,pn
xlat
mov
xchg
into
dec
or
inc
sub
dec
out
lea
ja
xor
repnz
jg
ret
lcall
and
jecxz
movsb
test
loope
test
test
inc
jne
or
adc
sarl
xor
dec
sti
push
or
pop
push
out
ret
mov
rclb
ret
daa
cld
mov
pop
lock
fwait
or
mov
sub
repz
sbbb
add
rorl
bound
imul
mov
in
btsl
insb
fadds
mov
out
lcall
push
inc
mov
push
push
gs
push
enter
aad
dec
dec
mov
das
push
and
or
addr16
rcrb
cmp
cmpsl
mov
or
dec
dec
clc
pushf
adc
nop
or
stc
sbb
lods
out
shll
lcall
xchg
jns
pop
jecxz
push
xor
or
mov
pop
aaa
ljmp
movsl
push
sbb
and
inc
cld
pop
adc
rorb
fld1
sub
pop
cld
adc
fcmovnb
push
lret
outsb
pop
mov
outsl
ret
mov
and
jne
nop
mov
mov
rcr
ret
rcll
out
cltd
and
call
out
dec
fs
push
fnstcw
pop
jp
hlt
inc
pushf
inc
push
or
sbb
and
jns
lods
cmp
clc
cmp
fbld
sbb
jne
adc
xorl
test
inc
xorb
out
cmp
sub
adc
leave
push
sub
and
fwait
adc
stos
ds
xchg
out
orl
fcmovu
aaa
cmpsl
add
xor
fwait
jbe
adc
add
cwtl
pop
and
xchg
sbb
sbb
add
sub
movb
jg
push
dec
or
pop
or
pop
inc
lcallw
add
adcb
and
cmp
fistpll
out
sbbb
and
adc
inc
mov
and
cmpl
bound
fs
pop
xchg
pop
xchg
xor
mov
mov
outsb
mov
iret
arpl
shll
dec
enter
pop
aad
hlt
ret
pop
xchg
xlat
pop
int3
imul
sbb
jns
ret
push
xchg
jecxz
movsl
jecxz
mov
fsubrs
and
movb
test
pop
bound
or
lods
es
shlb
ret
mov
jl
push
cmp
pop
jle
mov
cmp
xor
mov
pop
mov
in
pop
inc
popa
lcall
push
loope
or
and
pop
pop
loope
and
iret
inc
imul
sub
mov
ja
cltd
pop
aas
jecxz
int
adc
cmp
xor
xchg
mov
mov
cmp
test
mov
jg
subl
call
scas
out
jg
mov
jbe
repz
dec
loope
push
mov
test
out
mov
and
push
push
cmp
insl
ljmp
in
and
dec
leave
rorb
notb
popa
loopne
jmp
and
outsl
xchg
mov
nop
mov
mov
les
int
mov
mov
mov
jae
stos
dec
stc
icebp
xchg
fisttpll
sbb
add
inc
es
and
and
and
rcll
adc
dec
enter
pop
add
mov
dec
stos
xchg
dec
jbe
push
lcall
imul
std
divl
or
push
gs
fildll
sub
push
jae
stos
fsubrs
dec
xor
xchg
sbb
adcl
mov
pop
ja
nop
popa
add
fwait
dec
insl
adc
ficompl
inc
call
cmpsb
pop
cmp
sub
es
scas
mov
pop
inc
lret
mov
adc
sti
mov
or
test
or
fs
or
aam
push
lahf
jge
loopne
sbb
jae
mov
pop
popa
sar
jmp
scas
or
repnz
out
inc
aaa
lock
mov
js
dec
jae
addb
pop
call
popa
sti
lret
je
decl
mov
loop
inc
in
sbb
sbb
dec
cmp
or
sub
mov
push
inc
xlat
lret
cltd
into
adc
xor
lret
int
inc
lods
xlat
jg
mov
fcoml
hlt
ret
sub
ds
sub
mov
dec
mov
push
rcrl
jae
gs
xchg
gs
cmp
or
popa
and
in
cmpl
sub
sub
xchg
inc
and
mov
test
fisubrl
xchg
cmp
mov
aaa
inc
out
loopne
push
dec
out
cwtl
frstor
and
mov
adc
and
leave
add
xchg
in
out
xchg
int
xchg
jns
ljmp
inc
scas
sti
cwtl
sbb
cld
call
out
or
test
bound
xchg
or
push
add
jmp
sbb
xchg
push
cmp
jge
mov
mov
out
scas
pop
into
lret
push
scas
xor
jb
jmp
sub
loop
pop
in
int3
hlt
repnz
pop
mov
pop
mov
cmp
inc
std
jp
iret
inc
xchg
pop
or
pop
inc
je
xorl
xchg
cmp
mov
ret
pop
ret
lahf
push
nop
mov
mov
test
xchg
sahf
cli
pop
int3
std
dec
adc
mov
rorb
push
mov
xchg
lahf
jle
ret
mov
adc
pop
out
and
jb
dec
pop
ss
cmpsl
and
negb
adc
add
xchg
push
jne
jb
inc
pop
inc
jnp
jecxz
add
ficoml
jae
xor
and
sarl
mov
and
pop
int3
aaa
movsl
cs
pop
repnz
or
add
daa
jle
and
ficoml
mov
push
addl
push
mov
and
mov
xor
ss
testb
pop
or
fstpt
jecxz
or
mul
or
add
leave
cli
add
pop
sub
imul
or
gs
sbb
mov
pop
daa
pop
popa
imul
scas
jne
mov
add
leave
inc
aad
adc
mov
mov
ret
int3
jl
sbb
cmp
lret
xchg
and
repnz
aas
jbe
mov
sub
mov
add
jge
cld
dec
out
pop
int3
and
add
imul
std
dec
imul
sub
cltd
cltd
rolb
mov
mov
xor
addl
mov
cmp
movsb
dec
mov
leave
mov
in
jecxz
dec
or
push
imul
sub
js
ljmp
addl
jmp
out
ret
shl
nop
imul
lods
and
pop
fstpl
mov
and
mov
cmpsl
gs
cmp
pop
pop
or
adc
dec
lock
mov
add
fiadds
cmp
insl
mov
lret
mov
jecxz
cwtl
cli
add
xor
sti
mov
xor
fldl
mov
xor
cmp
add
mov
jo
mov
xchg
aas
cli
fldenv
addr16
xor
cltd
xchg
movsl
jg
mov
repnz
jge
sahf
push
jle
xchg
inc
xor
out
push
add
mov
pop
xchg
mov
pop
push
mov
inc
arpl
or
mov
cmp
push
cmp
or
sub
or
decl
aad
pop
mov
add
jae
in
mov
rcll
inc
xchg
lcall
xor
bound
and
out
xor
aad
xchg
lods
in
fdivs
cmp
notb
fs
adc
cmp
es
mov
rcrl
mov
not
add
nop
push
ror
cli
js
jmp
add
jnp
call
add
jne
in
shl
ficoms
orl
mov
xchg
pop
xor
push
aam
pusha
push
ficomps
jmp
xchg
dec
jb
pusha
flds
outsb
shr
repnz
fs
mov
xchg
or
in
sub
mov
imull
mov
xor
xchg
mov
ljmp
rcl
xchg
push
test
push
pop
stc
pop
push
mov
enter
test
pop
sbb
cld
aam
adc
pop
push
inc
add
push
adc
mov
fmulp
add
mov
and
mov
cs
sbb
jb
lock
mov
out
jns
lret
push
bound
addl
mov
and
lret
sarb
call
rorb
dec
or
lds
add
jno
fsubr
out
call
xor
pop
mov
jmp
pop
adc
jl
out
and
xchg
dec
aad
jns
repz
insl
call
adc
sub
mov
test
jmp
sbb
out
mov
push
andb
loop
icebp
dec
and
pop
icebp
out
dec
mov
adc
mov
shrl
pop
sbb
fcmove
dec
xor
sbb
pop
dec
lods
mov
testl
pop
mov
outsb
pop
lahf
pop
add
cmp
jp
pop
add
push
cwtl
in
inc
pop
popa
in
and
jp
cli
and
jecxz
adc
movsb
das
into
cmpsb
inc
push
mov
jnp
add
mov
fsubrp
jae
outsl
jae
lret
mov
xor
fst
orb
cwtl
push
pushf
inc
cld
mov
movsl
imul
jne
imul
leave
jle
shll
test
pop
mov
stos
sarl
in
jmp
ss
mov
push
fadd
in
jp
xchg
adc
das
push
mov
loope
add
mov
outsl
mov
in
fistpll
lock
pop
dec
icebp
fwait
xlat
sarl
repz
fsubrp
pop
mov
xchg
xlat
xor
jo
and
sti
adc
test
push
and
rol
test
pop
fdiv
xchg
jns
and
test
or
and
and
sub
jl
mov
adc
xchg
pop
sub
jecxz
mov
sahf
daa
aam
sub
inc
xor
int3
das
iret
scas
repnz
mov
jge
stos
push
cmpsl
sbb
out
cmpb
sub
xchg
push
ror
call
push
insb
adc
in
arpl
adc
xchg
mov
jne
inc
mov
adc
fcmovnu
rcl
xchg
sbb
notb
xor
xor
jbe
dec
xchg
sti
data16
shll
add
dec
adc
shlb
mov
hlt
daa
pushl
stos
lret
pop
xchg
mov
mov
push
sbb
jge
add
cld
push
rclb
and
jae
iret
sub
orb
sbbb
xchg
mov
dec
stc
mov
mov
ss
sarl
fdivs
inc
mov
int
shl
mov
mov
ret
cwtl
les
lcall
out
jns
dec
jl
dec
inc
push
pushf
lcall
iret
out
push
and
cmp
cmp
lods
push
lret
ret
das
aas
into
and
addr16
or
adc
cmp
jle
sub
jne
pop
pop
insl
nop
es
xor
sbb
sti
push
push
xlat
push
xor
std
addr16
fldt
aas
inc
in
js
sbb
pop
shll
ret
adc
push
add
loope
fidivrl
pop
sbb
in
mov
inc
inc
pop
dec
enter
jb
or
movsb
mov
lret
mov
jo
push
pop
lods
xchg
xchg
addr16
pop
daa
rcrb
mov
leave
mov
xor
cmp
mov
icebp
mov
mov
sub
int
mov
xchg
dec
icebp
jae
les
ficompl
test
push
jbe
pusha
repnz
popa
dec
decb
enter
adc
fwait
aad
sub
cmpsb
sub
pop
sub
lahf
jl
mov
test
fst
and
je
fsubr
or
sub
scas
outsb
mov
mov
loop
xchg
dec
lcall
lahf
mov
imul
sbb
inc
and
xchg
adc
call
mov
je
movsl
jbe
push
sbb
push
xchg
repnz
mov
and
jns
jecxz
jecxz
subl
scas
pop
ret
sbb
mov
mov
in
and
sbb
outsb
jl
aad
pop
iret
repnz
das
mov
push
sbb
out
mov
or
sbb
jl
ret
in
jmp
jmp
pop
dec
or
ss
push
in
sub
mov
and
jmp
fs
cmc
pushf
and
xchg
xor
sub
pop
push
sahf
in
loope
add
rclb
outsl
cli
sbb
sahf
addr16
mov
jle
xor
test
inc
iret
rolb
and
mov
push
jmp
sub
mov
testb
negb
add
adc
js
cmpsl
ss
sbb
lds
push
sbb
push
push
pop
icebp
xchg
aam
fcompl
or
inc
lret
loop
arpl
rcl
inc
into
xchg
or
bound
leave
pxor
es
ret
mov
add
or
out
lds
push
adc
push
xchg
push
fildll
mov
adcb
ret
ror
jmp
in
testl
daa
xchg
jno
push
xchg
xor
insb
mov
nop
test
push
sbb
xchg
lret
icebp
sub
in
xlat
rcr
lea
xchg
hlt
loop
sub
idivl
push
mov
sti
pop
pop
pusha
push
pop
in
xlat
push
xchg
int3
iret
enter
inc
mov
sub
sahf
jmp
add
jmp
dec
jno
add
mov
sbb
lcall
mov
movsb
xchg
push
pop
les
dec
jp
movsl
xor
fwait
dec
ss
mov
nop
pop
aam
and
mov
dec
push
xchg
pop
repz
sub
jns
call
popf
in
xchg
ljmp
lret
pop
arpl
push
or
lds
jbe
movsl
mov
jg
out
xchg
and
fninit
mov
outsb
jl
out
jmp
jae
div
dec
test
cmp
cmp
and
mov
dec
pop
outsb
xchg
popa
inc
mov
loop
fbld
lods
sub
push
js
push
mov
or
pop
aas
insl
das
std
xchg
scas
in
xor
mov
xchg
pop
pop
cmp
xor
push
arpl
dec
mov
mov
push
jle
sahf
insl
mov
push
mov
fistpll
rolb
add
sub
cmpsl
mov
or
cmpb
pop
adc
cmp
ret
pushf
or
andb
out
insb
in
cmc
cmpsl
xchg
jg
xor
lahf
inc
fadds
jae
sbb
pop
mov
pusha
outsb
mov
jle
cmp
mov
in
mov
add
push
xor
mov
add
sub
scas
push
push
cwtl
inc
cltd
pop
or
push
fdivr
ret
sub
mov
xor
fldt
enter
das
lds
lods
test
ret
insb
je
sti
add
jl
mov
imul
test
push
add
mov
int
lret
imul
pop
mov
dec
mov
movsl
sarl
pop
dec
lcall
test
or
out
push
aad
jg
mov
xlat
adc
movsl
stos
sbb
lds
push
inc
fimull
ret
adc
mov
mov
xchg
adc
mov
daa
js
rcl
mov
adc
xchg
pushf
mov
pop
sbb
adc
mov
sahf
mov
dec
or
adc
jg
fcmovnu
jae
sub
ds
mov
mov
jno
mov
int
jne
aaa
cmp
sbb
sti
fists
ds
push
popf
out
mov
pop
mov
mov
int
test
insl
lahf
into
inc
sbb
pop
fs
rorl
rcrb
mov
or
adc
sbb
pop
popf
dec
fnstenv
push
subl
push
ret
mov
shll
es
dec
fstpt
fcomps
cmp
scas
std
je
mov
pop
arpl
out
and
mov
or
mov
divb
insb
imul
call
sti
sbb
mov
adc
jb
outsb
daa
add
xchg
adc
addr16
pop
mov
popf
inc
out
popf
and
test
cld
dec
pusha
add
sbb
sti
and
and
push
ret
inc
push
in
pop
jno
mov
cld
fldcw
xchg
pop
mul
sbb
ljmp
movsl
out
ficoml
int3
push
leave
test
sub
xor
nop
out
int3
test
mov
xor
or
in
negb
dec
pusha
dec
fcoml
movsl
cmp
into
mov
pop
xor
push
mov
faddp
mov
push
repnz
ljmp
lods
jbe
jmp
lods
push
inc
xor
out
fcmovbe
aam
dec
or
xchg
add
out
lret
xor
fs
add
nop
std
mov
inc
xchg
dec
repz
mov
mov
loopne
xor
and
add
pop
cmp
add
xchg
mov
dec
or
push
popf
repnz
push
lods
pusha
cmp
or
adc
add
mov
aas
std
faddl
inc
pushf
test
icebp
mov
push
dec
mov
mov
lahf
rol
lea
popa
orb
repz
outsb
push
xchg
pop
cmp
pop
push
xchg
push
cli
movsl
mov
jp
lods
inc
sub
sti
jle
push
fsts
sarb
cmp
clc
pushf
mov
sub
xlat
stos
int
loop
in
hlt
inc
fisubs
jge
aaa
test
or
movd
repnz
addr16
pop
nop
cs
pop
or
movsbl
in
pusha
dec
daa
bound
popa
rorb
movsb
xlat
loope
xchg
addl
popf
movsl
push
into
inc
push
lcall
inc
push
or
cmp
sub
push
mov
jle
or
in
popf
bound
pop
mov
xor
xor
jb
out
les
adc
xchg
into
jmp
mov
out
sti
sahf
sub
jecxz
cltd
pop
pop
mov
push
sbb
pop
xor
mov
xchg
lods
xlat
jl
aaa
mov
sbb
daa
mov
std
lret
sahf
jo
mov
dec
ret
mov
scas
mov
lds
sar
fsubp
jnp
jb
das
cmpsb
addb
in
mov
flds
or
pop
enter
jno
and
fs
xor
pushf
xor
cmp
sbb
subb
lret
test
jne
jne
mov
mov
pop
std
lret
xchg
pusha
in
out
xor
das
insb
add
or
lds
lock
cmp
xchg
mov
sbb
jle
test
stos
repnz
mov
jmp
push
jp
sarl
rcr
scas
sbb
dec
mov
dec
inc
sahf
clc
lea
insb
pop
rorb
cmc
cmp
and
sbb
mov
add
cld
scas
out
pop
pop
lahf
cltd
clc
or
push
shrl
out
ret
fs
fisubl
push
adc
ret
mov
jnp
sbb
dec
dec
sbb
sub
inc
and
mov
and
shrl
adc
lods
add
inc
inc
fdiv
mov
jecxz
pushw
jbe
mov
jg
imul
bnd
mov
dec
int3
mov
out
xchg
jge
inc
scas
inc
pop
insb
pushf
or
subb
lahf
sahf
xchg
dec
add
test
in
push
mov
or
setns
dec
dec
pop
out
pushw
jne
or
rcl
inc
pop
cmp
jmp
aaa
shll
cmp
mov
and
scas
push
es
mov
repnz
dec
add
dec
les
jp
mov
cmpsb
aad
mov
out
cmp
add
lods
lds
inc
mov
ss
add
out
jbe
aaa
hlt
dec
sbb
shrl
or
adc
push
cwtl
jns
mov
mov
jns
pop
cmp
les
push
push
ficompl
sub
outsb
xchg
scas
push
jg
dec
pop
jp
and
and
jo
mov
lds
test
addr16
xchg
scas
fildll
cld
mov
fs
and
sbb
pushf
and
push
inc
inc
ret
lods
mov
fdivp
inc
mov
or
out
sarl
push
inc
scas
inc
pusha
mov
add
out
sbb
pop
jbe
xor
xchg
stc
pop
jb
push
mov
lods
fdivrs
stc
repz
inc
insb
lds
andl
adc
pop
add
mov
stos
mov
pop
cmp
das
loop
jl
sbb
icebp
sbb
push
and
push
sbb
sub
and
sub
dec
out
push
pop
mov
jp
push
add
or
add
jp
add
cmpsl
adc
push
sbb
push
not
cmp
push
mov
cmp
mov
pop
aam
int3
or
jno
call
icebp
mov
insl
sbb
sahf
mov
les
cmp
lret
xchg
pop
stc
outsb
mov
imul
iret
push
das
xor
push
repz
bnd
mov
xchg
ret
or
pop
mov
call
orb
popa
mov
cmp
aas
push
out
and
ljmp
subl
mov
inc
lahf
icebp
adc
mov
push
in
sbb
jl
lea
divl
mov
adc
xor
inc
dec
daa
jbe
cmp
sbb
inc
fistpll
adc
repnz
enter
movsb
pop
movd
fwait
hlt
push
and
jno
pop
mov
in
mov
dec
or
pop
sub
mov
ret
sbb
insl
outsl
fsub
xchg
loop
pusha
fmuls
imul
sahf
inc
sbb
aas
cli
mov
les
pusha
fsubrs
add
into
dec
call
cmp
or
in
icebp
lcall
xor
call
test
fadd
sbb
add
ret
jo
jg
ljmp
adc
pushf
and
xor
movsl
sti
xchg
or
repnz
push
mov
aas
int
jl
into
xor
out
fs
cmp
adc
mov
sarb
popf
jnp
sub
pop
ss
pop
es
insl
ljmp
enter
insl
mov
pop
push
dec
sbb
int3
mov
jmp
outsb
sahf
jb
sbb
mov
push
pop
icebp
sub
das
movsl
dec
loope
stos
mov
jmp
xchg
movsb
roll
cltd
lea
add
xor
push
add
inc
gs
and
mov
fidivl
lret
mov
gs
scas
imul
add
addb
sub
jo
push
add
or
xchg
add
leave
mov
repnz
dec
loope
ljmp
sbb
outsl
push
sbb
outsl
mov
push
outsl
or
pushf
aaa
ret
cld
pushf
in
fld
push
or
movsb
mov
cmp
stos
cs
adc
xchg
push
ret
jmp
jb
push
fsubrs
inc
or
enter
push
push
or
cltd
jle
sub
into
add
jbe
divl
and
sub
adc
mov
jl
mov
dec
mov
xlat
insl
outsl
cld
push
or
loope
into
in
push
and
add
test
and
adc
jnp
inc
mov
and
lock
and
imul
cmp
clc
pop
xchg
xchg
adcl
sub
jecxz
cwtl
fimull
xor
cld
inc
fisttpl
js
add
mov
mov
ss
jnp
fsubr
xor
not
jg
jg
xor
and
lcall
adc
add
test
jb
fiadds
daa
add
xchg
pusha
xchg
dec
push
adc
sbb
adc
adc
push
fsubr
xor
xchg
dec
xor
add
nop
sbb
pushf
or
pop
repz
mov
dec
fwait
fs
sbb
inc
add
in
xchg
jg
add
cwtl
out
mov
adc
pop
push
adc
mov
pop
mov
enter
adc
pop
loopne
mov
xchg
adc
and
in
adc
push
vmulss
addr16
xor
jl
scas
not
hlt
cld
stos
test
fstl
add
jae
ds
mov
jo
xor
fbstp
adc
ret
or
pop
inc
mov
cwtl
cmp
sub
out
in
xor
repz
into
push
imul
adc
fwait
insl
enter
add
pop
xchg
xchg
int
push
stos
aam
and
dec
push
jb
iret
jne
adc
in
and
add
pusha
cld
popf
dec
sub
int3
pushf
mov
jecxz
fidivrl
lods
jmp
push
imul
notb
push
cltd
fsubl
data16
mov
adc
mov
push
xlat
ror
fistl
jns
or
push
jecxz
stos
shlb
cmpsb
sahf
call
inc
sti
popf
pushf
push
xchg
insb
or
fadd
enter
bound
or
ss
outsb
rcrl
sub
je
mov
mov
fisubl
push
jge
sbbb
sbb
pop
cli
jg
lea
sbb
cltd
incl
out
cmpsl
xor
arpl
fwait
addr16
pop
cmp
sbb
mov
jno
popf
add
loopne
fldenv
dec
mov
daa
dec
ret
lds
cmp
and
mov
jge
lcall
dec
test
jbe
push
add
aaa
aam
insl
xchg
mov
arpl
test
cmp
es
push
cmc
xor
test
mov
inc
repnz
das
fwait
and
cwtl
lret
inc
mov
imul
lahf
mov
pop
mov
repz
leave
sahf
inc
xor
lock
imul
mov
pushf
adc
push
aad
push
sti
aaa
mov
xchg
rcll
lret
bound
jbe
add
cltd
or
ret
cli
adc
movsl
ret
jno
adc
mov
jae
in
scas
mov
dec
fwait
add
mov
push
add
push
lods
arpl
fcoml
inc
jp
sti
or
nop
pop
add
push
outsb
inc
lea
mov
inc
aaa
jle
sub
call
dec
dec
sub
xor
dec
sbb
les
rolb
add
dec
jp
pop
fisubrs
lock
pop
xor
lods
ss
aam
pop
push
cld
pop
loope
push
push
add
cs
push
stos
outsl
movsb
adc
push
jecxz
jp
movsb
repnz
xchg
and
wbinvd
clc
adc
fdivrs
test
xorb
jns
jo
pushf
xlat
or
inc
out
pop
out
lret
pop
pop
push
pop
or
loop
out
cmpsb
fists
pop
test
dec
ret
push
push
movb
add
imul
ja
inc
fldl
mov
mov
xchg
cmp
xchg
shlb
mov
push
int
inc
dec
and
imul
push
push
leave
cmp
sub
or
lea
adc
loope
cs
inc
ds
jno
aas
hlt
add
mov
mov
std
sbb
outsb
and
sub
xchg
loop
repnz
cs
jg
sbb
or
sub
sbb
leave
std
fxch
aaa
stos
aad
sub
or
mov
mov
addb
dec
push
popa
sbb
pop
test
jmp
loope
sbb
insl
les
out
mov
inc
rcrb
imul
sahf
jge
loope
ret
mov
sub
lea
jns
mov
stos
fs
jae
test
jg
loopne
inc
sti
or
mov
jbe
push
push
lret
xchg
repz
mov
fs
out
and
jge
push
int3
fsub
pcmpeqd
push
fiaddl
frstor
dec
push
pusha
ret
jmp
and
aad
lds
jl
xor
sub
mov
mov
test
push
insl
jbe
dec
pop
dec
lods
es
cmp
inc
and
sbb
or
nop
adc
js
pusha
jl
lea
push
jnp
popf
xchg
insl
inc
mov
mov
loope
xchg
mov
mov
push
adc
add
in
mov
mov
clc
mov
mov
out
cmp
mov
xor
std
mov
xchg
daa
scas
fwait
bound
and
inc
popa
inc
inc
lock
scas
adc
mov
adc
unpcklps
push
xor
jbe
push
jmp
ds
jmp
daa
push
push
lock
cmp
xor
aaa
mov
test
jp
imul
adc
mov
movsb
xor
and
in
or
imul
in
mov
lods
cmp
mov
lret
ret
mov
popa
pop
enter
fildll
jns
and
lahf
mov
cmpsb
aaa
fbstp
in
push
xor
jb
mov
nop
test
mov
gs
xor
int
loopne
sbb
adc
stos
dec
inc
xchg
mov
daa
rcrb
xchg
jbe
mov
stos
dec
push
jnp
pop
xchg
adc
xlat
jnp
fdiv
xchg
mov
int3
inc
imulb
adc
dec
sti
sub
scas
imul
lods
xchg
outsb
xchg
sub
std
mov
aad
push
push
and
sbb
add
or
cmp
mov
push
cmp
jecxz,pt
out
dec
int3
mov
cmp
jae
xor
cld
testb
cmp
push
jge,pt
add
mov
das
xchg
xchg
mov
rorl
rcrb
es
cmp
sar
aas
das
test
imul
sbb
pop
out
mov
in
pop
lahf
mov
loopne
popf
out
in
fwait
cmpsb
lahf
nop
pop
cmp
xor
ss
sbb
mov
outsl
or
pop
push
mov
lretw
repz
mov
mov
fcomps
jecxz
pop
addr16
push
sub
rclb
sub
sub
shll
push
mov
xchg
xchg
in
mov
mov
jae
nop
imul
sbb
loop
xchg
outsb
clc
mov
sub
and
ret
xchg
adc
push
je
mov
repz
pop
inc
add
mov
xchg
sbb
scas
mov
popa
cwtl
xlat
gs
test
arpl
fdivl
fsts
sbb
mov
mov
sarb
sub
mov
test
cltd
in
jmp
mov
ss
lea
xorl
cmp
dec
push
xchg
adc
pop
out
xor
loope
mov
into
add
sub
jne
fimuls
jne
leave
mov
push
mov
out
sub
hlt
out
adc
push
mov
fistpll
or
lods
lods
or
in
jae
add
and
add
jmp
cmp
jns
sub
in
jmp
lret
mov
or
mov
mov
shll
enter
fistl
dec
and
aam
mov
pop
add
push
enter
loope
out
mov
push
push
mov
and
cmp
jmp
xchg
and
adc
std
mov
xlat
fcmove
xor
push
leave
mov
in
and
popf
dec
test
or
js
jb
outsl
add
mov
fsubrs
mov
mov
orb
sub
shll
sbb
jne
mov
enter
aam
lahf
daa
xor
dec
scas
or
cmp
ds
inc
mov
add
cmpsb
mov
jg
cs
jmp
xor
les
test
inc
stos
and
add
sbb
aas
outsl
scas
xchg
mov
loope
popf
inc
mov
imul
insb
stc
ljmp
and
push
jbe
dec
cmc
xor
or
push
mov
pop
test
cmpsl
fstpl
loopne
add
daa
dec
loope
mov
outsl
enter
push
jae
cmp
test
fisubs
sbb
out
mov
sbb
icebp
pop
or
sub
in
xchg
dec
pop
testb
and
and
rol
mov
mov
cltd
or
call
pop
pop
adc
push
mov
adc
sub
ljmp
add
outsb
pop
fcompl
cmp
int
pop
and
std
xchg
xchg
jp
jno
xor
cmp
inc
negb
sahf
push
mov
ds
adcb
sub
lock
pop
xlat
repz
movsl
out
push
adc
push
inc
sbb
cmpsb
sbb
adc
mul
popf
sub
and
cli
push
es
je
xchg
out
pop
mov
sub
sar
int3
enter
pop
sbb
add
fbld
les
adc
aaa
imul
aam
mov
xchg
xchg
das
xlat
dec
cmc
loopne
test
pop
jmp
push
inc
or
xchg
sbbb
out
dec
jecxz
sbb
push
out
sbb
fwait
sub
pop
jo
dec
pop
jnp
dec
add
mov
dec
mov
clc
jge
decl
add
pushf
adc
adc
std
and
pop
lods
add
test
jle
pusha
sub
movsb
mov
loopne
mov
mov
dec
sbb
sub
scas
insb
popf
icebp
lea
dec
hlt
in
outsb
xor
pusha
cmc
fsubrp
notl
and
pop
jae
adc
xchg
mov
mov
inc
jne
adc
testl
fsubr
mov
adc
cmp
ret
fsts
daa
sbb
and
jno
xchg
jb
pop
dec
dec
mov
pop
cli
add
sti
inc
icebp
mov
icebp
int3
outsl
mov
xchg
les
mov
push
cmp
dec
mov
cmp
movsb
fdivp
inc
das
std
icebp
cmpps
cmp
repnz
cmp
xlat
cmp
loop
daa
sub
sbb
int
mov
sub
push
mov
pop
cmp
push
jno
test
rcl
pop
lahf
mov
xchg
inc
movsl
push
jle
sti
push
adc
imul
push
std
bound
outsb
fwait
mov
mov
pushf
add
cmp
push
orb
dec
out
stos
lds
add
pop
in
xchg
jl
cmp
nop
adc
leave
es
sbb
or
mov
xchg
ds
ds
push
lret
push
in
incl
push
xchg
iret
xchg
add
pop
enter
addb
in
orb
shrl
cwtl
fcompl
jb
lods
insl
pop
xor
rorl
int
icebp
lods
sub
adc
jno
decl
pop
cmp
sub
and
xchg
icebp
lds
aam
or
and
fcomps
pop
ss
push
and
adc
jae
mov
cmp
outsb
stos
std
sub
pop
popa
add
xlat
clc
add
mov
jle
test
push
fucomip
iret
sbb
pop
repz
mov
lds
add
pop
rolb
push
adc
in
dec
ficoms
jns
lods
cmp
mul
cmp
pop
push
pop
mov
add
pop
jns
in
cmpsl
std
mov
sbb
bound
int
adc
das
ffree
into
xchg
xor
mov
test
imul
sub
and
je
xchg
stc
test
dec
out
jbe
ljmp
mov
mov
in
xor
sarb
mov
push
mov
repz
loopne
scas
pop
call
pop
imul
lret
mov
xchg
imul
stos
add
lahf
pushl
add
les
xor
cmpsl
and
jg
in
xchg
addr16
mov
popa
mov
stos
sahf
sub
dec
mov
pushf
fcompl
jle
enter
std
jmp
jge
jb
pop
pop
add
pop
adc
mov
pop
out
cmp
std
xor
into
stos
in
sub
sbb
fbld
ficoms
mov
lret
iret
jge
and
pop
pop
pop
add
push
movsb
push
lods
gs
sub
add
mov
mov
push
and
push
mov
leave
lds
sub
mov
icebp
loop
cmc
sahf
rcl
and
in
jecxz
mov
ret
or
fistpl
push
sbb
push
aam
insl
mov
lea
lods
inc
popa
sahf
jns
popa
fdivrl
mov
jb
jmp
ja
leave
jbe
test
add
jo
fwait
mov
push
jnp
jl
int3
sub
xchg
sbb
and
cmp
inc
sub
inc
mov
loopne
pop
push
cmp
jl
dec
fbstp
or
push
addr16
sbb
mov
shlb
pop
loope
mov
fbld
push
vpsubusb
std
jbe
test
mov
sub
xlat
and
dec
ss
or
bound
lods
test
inc
and
psadbw
mov
cmpsb
aad
push
cmp
pop
mov
sub
xchg
scas
cmc
ficoml
jns
mov
fs
fwait
push
or
clc
leave
mov
xor
xor
cltd
orl
sbbl
xor
add
daa
and
sbb
popa
cmc
cwtl
jb
jmp
scas
daa
dec
push
pushf
jbe
mov
lock
jle
insl
pushf
xchg
mov
xor
lret
lods
testl
fdecstp
pushf
sbbl
push
insl
sub
adc
and
test
cmc
cmpsl
mov
cmp
call
and
xchg
xor
gs
je
mov
popl
inc
xchg
imul
inc
xor
xor
movsb
mov
or
in
cs
test
repnz
in
cmp
jae
in
movsl
adc
cmp
std
jae
addl
push
cmp
add
jo
sahf
stos
lret
aaa
iret
inc
bound
pop
test
and
sub
mov
shlb
pop
das
in
sub
mov
and
aas
ficomps
pop
adc
jbe
xchg
shl
mov
insb
sahf
jecxz
xchg
arpl
xlat
xor
lock
or
scas
cmpsl
js
cwtl
cs
sti
adc
and
inc
push
aaa
lret
push
pop
inc
mov
fdiv
add
jle
repnz
sti
xchg
stos
popa
test
outsl
enter
enter
mov
push
test
push
insb
push
ljmp
push
xchg
rorb
push
xor
icebp
adc
cmp
orl
mov
and
jnp
xor
inc
int
cmp
fsubrl
data16
fwait
outsb
and
dec
push
hlt
testl
fldt
movsb
sub
nop
pop
add
dec
xor
lahf
movsl
jp
adc
xchg
dec
daa
pop
inc
or
cmc
lea
jo
rorb
test
push
je
ja
cmp
les
xor
in
inc
pop
sar
adc
mov
jns
dec
mov
or
cli
dec
popa
lcall
and
push
cmc
subl
xchg
das
mov
dec
add
imul
ss
pop
in
xchg
mov
fwait
jmp
in
nop
adc
mov
in
push
mov
js
movsb
or
lods
xchg
jle
mov
cmpb
pop
enter
cmpsb
mov
sar
negl
sbbb
dec
stc
sbb
ret
cs
dec
imul
ljmp
xor
ds
push
add
sub
cltd
lods
and
int3
call
xchg
outsl
pop
fidivrs
inc
sbb
daa
arpl
in
push
fwait
outsl
mov
rcrl
lcall
jo
pop
pusha
cltd
xchg
imul
int3
aas
loope
divl
dec
test
mov
mov
pop
mov
xor
fldl
mov
pop
jge
adc
lock
nop
adc
pop
push
or
xchg
dec
ret
add
fwait
js
imul
inc
xor
cwtl
xor
pop
mov
cs
push
adc
sti
sub
pusha
sbb
sarb
inc
outsb
xchg
cld
outsl
and
cmp
sbb
pop
sarl
roll
int
add
cmpsb
lods
inc
sub
sub
xlat
pop
pop
dec
rcr
outsb
aaa
pop
lea
push
jg
cmc
orb
ljmp
push
fdivl
push
push
nop
aas
mov
cmp
inc
std
loope
mov
aaa
mov
out
mov
cmp
das
test
dec
lcall
xor
xchg
outsb
sub
stos
mov
cmp
xchg
sub
mov
mov
cmpsl
iret
lods
xchg
dec
pop
pop
fisubrl
pop
pop
out
insb
add
lea
or
and
jecxz
aaa
in
xchg
movsl
fimull
imul
jb
mov
cld
outsb
push
outsb
push
sub
fdivl
aas
pop
inc
fldcw
or
mov
loop
cmp
xchg
cli
popa
leave
push
mov
jl
fs
fmuls
or
xor
cmp
mov
insb
adcb
jbe
cmc
cmp
inc
push
das
icebp
inc
lea
sub
xlat
je
stos
mov
push
cli
adc
data16
pop
jp
mov
loopne
sbb
sahf
sub
mov
arpl
icebp
jecxz
jo
in
and
sbb
jno
stc
xchg
xor
push
test
add
ja
push
pop
pop
test
fwait
mov
cmp
stos
inc
mov
jp
mov
mov
add
dec
ss
imull
cmp
shll
xorb
test
push
les
movsl
push
cmp
and
push
addr16
aam
sub
mov
cld
push
mov
loope
sub
mov
dec
mov
pop
add
push
inc
inc
mov
imul
or
mov
int
mov
dec
mov
inc
cli
fiaddl
clc
imul
mov
jge
mov
insb
hlt
lock
sub
mov
enter
mov
mov
sbb
add
in
and
xchg
es
es
cmpsb
outsl
mov
stos
push
cmp
adc
or
out
and
shll
and
adcl
roll
inc
mov
jg
cld
std
stc
lret
pop
push
ds
mov
loope
mul
movsl
out
pop
xchg
push
pop
ja
rcrl
jne
ds
jmp
shr
rolb
sub
rcr
jbe
push
push
fs
rcrl
aaa
insl
jb
fiadds
test
stos
xchg
scas
test
lea
cmp
dec
adc
add
cmp
ss
mov
lahf
ret
lods
dec
push
ds
xchg
dec
mov
pop
push
lods
cmp
dec
ffree
mov
cmc
inc
addl
fildl
or
fnstsw
push
in
out
int
std
stc
cmp
adcb
mov
dec
sub
ds
push
pushf
stos
mov
cmp
mov
xchg
add
and
mov
push
imul
mov
or
clc
icebp
aad
sbb
adc
adc
inc
mov
nop
mov
shl
xchg
pop
add
out
ja
and
xor
lret
push
stos
jp
jge
je
mov
sbb
shl
int
mov
out
imul
hlt
andb
pop
add
gs
repnz
pop
xor
mov
nop
push
xchg
loop
dec
lret
lods
inc
je
or
fidivs
in
jne
leave
xchg
fs
not
or
out
mov
sub
ss
int
mov
in
imulb
aad
mov
and
test
cmpsb
jb
cmp
cli
clc
lock
mov
sub
cmp
xlat
jl
mov
imul
add
out
pop
ja
mov
or
lahf
arpl
mov
movsl
hlt
inc
sbb
sub
out
repnz
mov
pop
mov
inc
xchg
inc
loop
dec
push
call
clc
sti
aas
xor
push
xchg
ret
mov
or
pop
rcl
mov
nop
inc
dec
fisubrl
dec
add
and
xchg
xor
xchg
adc
cmc
aad
das
sbb
mov
dec
test
dec
bound
cmpsb
decl
jb
scas
xchg
xor
in
dec
mov
add
push
cwtl
or
mov
pop
aad
sbb
add
xor
lea
push
pop
cmp
mov
or
daa
out
mov
mov
aad
push
pop
insb
out
cmp
sbb
xor
sbb
dec
movsb
or
pop
jb
sbb
cmpsl
repz
test
jle
push
or
jnp
or
fst
jno
in
leave
addr16
push
cmp
pop
ret
add
jg
clc
pop
fisubrs
stos
cld
dec
mov
adc
cmpsl
in
cld
sub
jo
jbe
mov
movl
stos
fldcw
inc
push
cli
xchg
mov
cmp
insb
and
cmp
fucomp
mov
jns
sub
adc
movsl
mov
mov
cmpsb
add
loope
jp
xchg
or
outsl
daa
lock
iret
sbbl
fstl
adc
add
icebp
push
or
dec
repz
iret
loop
js
test
push
dec
out
mov
out
adcb
sub
jnp
dec
jbe
inc
lret
or
dec
mull
mov
rcll
mov
sub
and
shll
jb
lahf
dec
jmp
push
push
bound
dec
fnstcw
cmp
adc
or
imul
mov
mov
arpl
and
mov
jmp
fsubrl
pusha
xor
xchg
ret
jmp
arpl
repnz
cmpsb
mov
test
mov
mov
xchg
inc
fcomi
enter
jne
pop
lods
sti
mov
mov
mov
add
stc
popf
rcll
rorb
push
lds
icebp
mov
sub
hlt
sbb
add
mov
and
cld
imul
jae
inc
fstl
stos
xor
ja
pop
dec
xchg
sub
clc
out
jle
out
sub
mov
xchg
push
add
rolb
mov
pusha
mov
lock
rcrb
aas
aas
xor
sbb
repnz
test
pop
in
jbe
dec
lret
inc
or
push
jmp
sbb
cltd
stc
aaa
inc
pop
cmp
hlt
inc
jmp
fcmovnu
xlat
fimull
imul
insb
push
in
mov
sbb
fsubrl
stos
jb
add
mov
divb
inc
in
ljmp
out
mov
sub
mov
cmp
add
sti
hlt
xor
in
loope
and
outsl
je
adc
mov
ds
loop
jns
test
sbb
cmc
adc
xchg
or
mov
and
dec
fwait
mov
xchg
xor
cmp
test
xchg
sub
adc
sbb
lock
xchg
lds
lea
jge
and
ror
int3
addr16
fimuls
inc
pop
ret
push
out
or
add
addr16
in
nop
insb
hlt
pop
mov
adc
cld
enter
fcmovbe
aam
imul
sub
ljmp
cmp
or
dec
movsb
cmp
jae
inc
mov
mov
cmp
hlt
sbb
cwtl
repnz
adc
nop
out
pop
mov
repnz
xchg
mov
mov
pop
shll
adc
int3
sbb
call
sahf
push
cmp
inc
dec
push
ljmp
push
loopne
mov
rcl
mov
inc
pop
xor
dec
test
aas
rol
jae
movsb
fs
mov
hlt
mov
xchg
jno
dec
push
cmp
mov
jp
orl
adc
or
sbbb
cs
or
dec
sahf
jo
daa
xlat
lret
lods
jnp
sbb
nop
adc
pushf
or
xchg
lods
addr16
ret
add
sbb
cld
push
insb
sub
dec
stos
icebp
push
mov
cmp
imul
shlb
jo
rcll
and
out
mov
or
in
lahf
lea
clc
sbbl
scas
orb
push
inc
lret
das
addr16
imul
call
mov
shll
mov
dec
mov
das
cmpsb
fwait
pop
fs
pop
leave
sub
mov
or
xlat
and
into
jge
pop
jecxz
and
dec
test
gs
jecxz
pop
lods
mov
into
imul
lods
mov
and
mov
add
mov
shll
xchg
sub
fcoml
or
sahf
xchg
enter
jne
addr16
aad
cli
js
popa
daa
sub
cmp
inc
sub
rorl
jmp
and
lods
adc
and
notl
xchg
fisubrs
and
fstl
or
stos
jge
sbbb
jns
xchg
lcall
in
push
sbb
and
xor
test
jg
cmp
adc
mov
mov
xchg
test
outsl
fdiv
lods
jns
mov
dec
repnz
in
cwtl
push
cmpsl
jle
mov
int3
jl
mov
lods
fcomi
pushf
and
xchg
orl
pop
pop
push
or
mov
mov
fld1
fidivrs
imull
xchg
leave
pop
cs
mov
add
lcall
adc
or
pop
dec
jle
jnp
add
mov
dec
insb
mov
sbb
ret
or
jg
mov
xor
xchg
rcrl
pusha
aad
pop
mov
xchg
inc
xchg
lods
fs
in
dec
push
pop
adc
or
add
fcoms
inc
sbb
inc
xchg
inc
popa
sbb
ret
jle
inc
pop
cmp
mov
aam
mov
dec
lock
mov
repnz
popa
inc
loopne
xlat
xchg
jno
pop
outsl
cmp
mov
pop
jp
xor
and
mov
in
inc
in
or
fcmovne
sahf
ja
push
mov
jo
lret
jo
add
movsb
int3
adc
and
cmpsb
insw
lods
pop
je
push
test
jmp
stos
jb
push
mov
in
in
add
adc
fcoml
and
stos
out
shrl
iret
mov
cmp
bound
jge
dec
cmp
fidivrl
les
daa
aaa
fdivr
ja
mov
iret
xchg
fdivr
ljmp
mov
test
jnp
insl
mov
ss
mov
dec
and
xor
roll
and
imul
sub
cli
pop
add
pop
xchg
xchg
xchg
repnz
xchg
fcoml
test
fwait
jg
cmpsl
daa
xor
sub
ret
daa
push
sub
orl
jle
addr16
mov
add
aam
cwtl
xor
jno
repnz
and
fisubl
test
insl
sbb
mov
out
outsl
lds
ds
pusha
push
cmp
mov
push
pop
imul
and
shl
push
jmp
mov
add
test
rolb
sub
lret
dec
repz
mov
xchg
mov
xor
add
aaa
es
jns
ljmp
push
fdivrl
lahf
push
loop
insl
fcmovnbe
into
xor
dec
fldt
jp
adc
mov
jne
xchg
nop
stc
ret
add
and
push
call
mov
inc
sbb
cmp
mov
inc
pop
xor
ficompl
fs
mov
lahf
call
add
inc
fimuls
jle
lret
or
daa
or
add
xchg
imul
loope
pop
dec
pop
mov
and
fs
mov
and
test
gs
push
push
push
xor
cs
jae
pop
repz
out
xor
jnp
jo
mov
xchg
or
jae
test
scas
loop
adc
cld
enter
fistps
shr
bound
test
sub
fsubl
cmc
out
pop
push
xor
ss
xchg
xchg
pop
adcl
fnstsw
adc
lret
pop
xchg
gs
pop
mov
dec
clc
xchg
push
lods
or
adcb
push
mov
data16
sarl
imul
jp
mov
sahf
lods
add
dec
test
add
inc
ljmp
push
mov
out
in
mov
enter
mov
jo
ror
pop
cs
lret
cwtl
pop
js
movsl
stos
insb
clc
fisubrs
movsb
outsb
cmpsb
and
int
push
cmpsb
jae
ret
imul
adc
push
aaa
and
sub
subl
xchg
mov
push
or
dec
inc
lods
or
enter
insl
bnd
jne
xchg
xchg
sbb
inc
xchg
cmp
cmp
mov
push
loop
mov
mov
pop
push
setnp
outsb
clc
mov
fwait
add
fisttps
rorb
pop
mov
jns
jno
testb
inc
in
adc
fidivrs
jbe
imul
cli
imul
fcompl
arpl
mov
and
xchg
and
mov
divl
xor
in
lods
add
and
and
add
adc
insb
sub
ret
inc
cmp
fnstenv
add
lret
cli
int
mov
inc
aas
leave
cmpsl
pop
push
data16
fistps
and
jnp
shl
sbb
leave
mov
adc
bnd
aad
jg
aad
inc
mov
mov
xchg
mov
inc
sbb
xorb
add
xor
stos
les
dec
fisubs
or
cmp
xchg
push
lcall
xchg
jae
mov
jb
ret
insb
mov
jmp
jbe
inc
mov
cmpsb
push
dec
jbe
sub
mov
jg
add
jmp
xor
mov
cmpsb
jbe
mull
cmpsb
xorb
lods
stc
fwait
push
lods
ret
insb
ljmp
xchg
repz
addr16
add
aam
jecxz
ret
out
ret
or
clc
sbb
stos
pop
inc
mov
out
jle
jmp
lock
in
push
decb
pop
test
adc
sub
xorb
data16
lock
insl
call
fdivs
stos
fildll
jb
pop
ret
push
mov
aam
std
sbb
and
bound
clc
sbb
pushl
mov
mov
dec
stos
inc
dec
outsl
fadd
cmp
movsb
xor
push
sub
sti
mov
and
test
gs
and
pop
lahf
dec
jnp
cmp
push
insb
dec
sbb
loopne
imull
cmp
mov
inc
cmc
xor
jns
mov
lods
mov
pop
mov
outsb
push
mov
mov
stos
and
aad
bound
pushf
xchg
fsubrs
outsb
sti
mov
int
andb
lods
xchg
nop
clc
lds
popf
arpl
or
inc
mov
aas
push
jg
jmp
fwait
xchg
jp
inc
les
mov
adc
iret
mov
mov
xor
add
loop
jmp
xchg
pop
imul
xor
out
adc
lret
xorl
or
mov
stos
xor
hlt
clc
loope
bound
push
clc
xchg
adc
cmp
fdiv
lret
cmp
xchg
or
sub
mov
sar
mov
insl
xor
pushf
int3
test
pop
push
xlat
pop
adcl
cld
scas
adc
stc
in
and
es
xor
mov
mov
ja
push
cmp
fnstcw
sbb
movsb
mov
lods
xor
or
push
mov
or
stos
inc
mov
scas
pop
lret
js
sbb
ficompl
popf
flds
mov
or
jg
loopne
imul
xchg
sar
push
inc
insb
mov
je
out
lods
gs
nop
jecxz
lret
lods
mov
into
jno
lods
and
imul
mov
dec
jmp
mov
cs
insb
mov
out
in
fstl
dec
xchg
mov
aad
aaa
lods
sbb
shrw
cwtl
in
cmp
ret
into
test
mov
scas
and
cld
mov
loope
xor
add
dec
mov
inc
sbb
dec
aaa
cmp
lret
and
js
and
jnp
out
adc
jno
adc
gs
and
mov
jb
loope
xor
add
mov
jnp,pt
inc
adc
es
fcomps
xor
daa
mov
lods
mov
cmp
cmpsb
xchg
hlt
lods
and
lcall
pop
cmp
add
adc
popf
and
fwait
mov
outsl
jle
dec
sub
or
xchg
lahf
mov
sbbl
inc
lds
sub
mov
xchg
inc
bound
pop
push
test
sub
dec
inc
out
emms
sahf
es
jbe
sub
push
or
clc
adc
mov
and
int3
mov
ds
or
cmc
andb
arpl
dec
push
iret
mov
mov
js
xchg
pop
js
mov
enter
push
aaa
test
imul
mov
mov
ss
test
cmp
loope
lret
loope
or
movsl
dec
icebp
jl
pushf
cltd
jbe
ret
mov
imul
ljmp
out
cmpsl
pop
inc
pop
adc
xchg
lods
imul
push
sti
and
out
roll
loop
push
js
orl
and
loopne
mulb
sbb
mov
xor
jnp
arpl
xchg
out
push
pop
push
out
lahf
mov
lahf
std
pop
out
sbb
rclb
mov
mov
mov
jp
cwtl
sbb
pop
adcl
int3
rol
inc
push
or
test
pushf
sbb
push
dec
push
rorl
lock
test
adc
rol
sub
xchg
je
cld
imul
inc
divb
mov
add
mov
inc
scas
cmpsl
negb
push
lea
lret
fidivrl
lret
nop
pop
xor
add
outsb
bound
jo
lret
iret
mov
ss
and
jl
mov
inc
scas
cmc
xor
cmpl
mov
cmp
jmp
fs
inc
ljmp
test
mov
jge
pop
push
mov
pop
stos
dec
inc
add
jb
mov
sub
stc
sub
push
mov
aaa
pop
lret
popa
enter
lcall
adc
ds
add
ja
mov
sub
test
mov
jle
push
rcll
sbb
filds
outsb
pop
and
add
dec
nop
icebp
mov
cmp
xchg
adc
inc
iret
dec
add
jne
enter
add
into
dec
cli
push
in
arpl
xor
cmp
or
mov
xchg
add
cli
test
lahf
or
cmp
mov
sbb
cli
shrb
mov
cwtl
insb
aad
sahf
cmp
lods
dec
iret
dec
xorb
cld
xchg
andb
jge
push
or
xchg
setbe
pop
inc
inc
lcall
je
and
in
sbbl
mov
addr16
dec
adc
inc
enter
shrb
pop
xorb
jge
std
lock
hlt
mov
rcrl
rolb
mov
scas
mov
mov
jae
and
in
or
jp
in
adc
jns
adc
pop
les
mov
cmpsl
stos
jnp
mov
push
xlat
and
push
test
hlt
fs
js
pop
xor
pop
xor
adc
test
dec
rcl
mov
inc
test
adc
cmpsl
mov
and
stos
push
mov
lods
je
xor
fisttps
push
je
sbb
arpl
inc
in
or
mov
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
sub
loop
pop
clc
pop
.byte
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
push
cltd
mov
out
popf
in
aas
lahf
cli
and
xchg
dec
mov
outsl
push
loopne
jp
rclb
enter
clc
xchg
daa
lahf
test
mov
push
push
pop
enter
rclb
enter
add
jmp
jmp
call
stos
into
add
pop
jl
add
add
call
pop
dec
sub
lea
dec
cld
lds
push
das
fwait
js
int3
movsb
mov
leave
dec
mov
jmp
mov
adc
test
arpl
into
jbe
js
sahf
imul
imul
jge
dec
fwait
int
mov
jp
push
inc
stos
enter
fdivrs
scas
cmp
repnz
ret
mov
pop
sbb
mov
xlat
xchg
xor
clc
fsubs
cmp
fcmovnu
ds
or
jecxz
mov
std
nop
mov
sbb
xchg
lret
and
es
adc
stos
jo
movsb
sbb
jae
test
fadd
jecxz
pop
inc
cld
mov
xchg
loop
movsl
fdivrp
pop
push
xlat
lret
push
lcall
lock
mov
inc
add
insb
loopne
int3
test
repnz
inc
mov
push
lock
add
mov
pop
inc
or
jnp
add
push
dec
scas
cli
jnp
ficomps
gs
jle
movsl
aaa
add
pop
lret
movsl
popf
cmp
fisubs
cltd
pusha
mov
aad
je
pop
push
enter
adc
jno
mov
dec
or
xchg
stos
cmpsb
addl
in
mov
shll
and
int3
dec
mov
js
aaa
fwait
ror
addb
fsubs
orl
dec
sub
repz
adc
push
xor
mov
xchg
enter
repz
push
jg
fcomps
mov
mov
ds
cmp
mov
arpl
xchg
jae
in
xor
in
xchg
addb
mov
add
in
mov
push
or
xor
adcb
push
sub
lods
push
ret
arpl
sub
insb
test
icebp
in
shlb
mov
dec
jmp
cmp
push
mov
jns
mov
subb
xchg
scas
push
sbb
inc
push
push
imul
es
inc
lods
decb
je
mov
sub
mov
addr16
scas
dec
fs
mov
add
aam
outsb
enter
pushf
clc
repnz
add
iret
and
cmp
imul
push
fmuls
push
out
int3
sbb
sub
and
lret
icebp
roll
push
sbb
add
aad
pop
ljmp
lahf
aaa
mov
xchg
sub
movsl
xlat
scas
mov
mov
fisubl
push
addl
cmp
cmpsb
test
mov
pop
das
lea
insl
insl
loop
pop
aam
cmp
cmp
fs
sub
cmp
push
push
sub
aaa
popa
out
cmpsb
nop
icebp
enter
jmp
stos
cmpsl
or
jge
scas
or
and
fcomps
faddl
cmc
rorl
leave
enter
ja
sub
xchg
test
mov
mov
pop
xchg
or
jno
cmpsb
xor
in
imul
fstps
cmp
xor
rorl
add
mov
cmp
adc
sub
pop
enter
mulb
push
xor
mov
pop
xor
inc
push
stc
dec
out
add
or
outsb
and
loope
cmpsb
lret
cmp
loope
insl
dec
fcoms
gs
cmp
sbb
jle
ds
xor
pop
mov
push
lahf
mov
test
fdivrs
test
inc
loope
andb
inc
movsl
dec
out
jo
adc
inc
rcr
xchg
bound
lahf
jmp
lods
sbb
jecxz
or
jno
stc
push
xorl
shr
loopne
jb
inc
xchg
or
sbb
out
and
push
out
popf
dec
vandnpd
pop
adc
cltd
add
out
cmc
dec
or
push
cmp
scas
mov
incb
mov
inc
pop
xchg
add
jmp
sbb
sub
aaa
jp
mov
dec
cmp
and
cmpl
pop
xchg
xchg
mov
add
xchg
sbb
dec
cltd
addl
push
test
ja
notb
fwait
sbb
ror
sbb
and
dec
sub
loopne
lret
lret
outsl
or
pop
stc
cmp
xchg
mov
into
mov
mov
sub
jecxz
pop
ja
xchg
xor
mov
jge
into
js
sbb
xor
or
xlat
cmp
mov
xor
mov
lock
mov
jge
mov
push
lcall
loopne
mov
loopne
rorl
xor
jecxz
cmp
mov
sbb
push
inc
dec
out
adc
and
jecxz
mov
push
cmp
xchg
and
mov
push
enter
jp
cmp
loopne
push
jecxz
fcomps
loop
xor
push
push
mov
stos
nop
sbb
sbb
lods
jl
and
mov
movsl
mov
outsl
xchg
movsb
daa
xchg
scas
mov
xchg
pop
pop
movsb
cwtl
movsl
test
aad
sti
xchg
je
mov
sub
outsb
xchg
inc
pop
or
mov
sub
mov
jge
mov
call
jae
fcoms
icebp
test
mov
mov
mov
sahf
stc
inc
mov
pushf
push
std
lds
call
loope
jne
popf
lock
shll
repnz
xchg
movsb
ja
push
rcrb
mov
jne
sbb
cmpsl
ss
add
fmul
jp
add
pop
push
mov
pop
inc
loop
add
into
xchg
sahf
fimull
sub
mov
dec
cmp
fwait
jae
out
std
mov
fnstenv
pop
jbe
pop
out
push
movsl
or
pop
xor
or
test
in
imul
pushf
mov
push
lret
jmp
adc
sub
out
sub
nop
std
out
jo
and
push
mov
fiadds
out
loop
add
int3
aaa
fcomi
sub
and
push
out
dec
ret
pop
clc
mov
test
mov
and
cltd
jmp
aas
ret
loopne
cmp
cwtl
out
mov
dec
loopne
push
fmuls
mov
in
loope
cmc
fisubs
xchg
jns
insl
mov
pop
mov
cmp
jecxz
push
lds
popa
pop
jb
fidivrl
hlt
mov
sarl
popa
pop
cli
repnz
jge
inc
push
mov
int3
cld
rcll
insb
adc
inc
test
xor
in
push
pop
pop
cmc
adc
xchg
fidivrl
scas
aas
inc
int3
out
and
decl
fimuls
stos
dec
es
sbb
xlat
pop
in
add
jecxz
sti
mov
fs
lahf
push
cmp
mov
inc
sub
push
test
push
sbb
push
inc
inc
cmpsl
sub
out
pop
add
je
cmp
ljmp
call
shlb
fstpl
or
mov
sub
add
insb
cmp
mov
test
inc
pop
xor
imul
cs
or
xchg
clc
mov
mov
sbb
pusha
xlat
call
shll
sub
and
insl
mov
sbb
xor
jno
les
loope
mov
filds
pop
stos
and
inc
add
enter
imul
mov
dec
outsb
mov
inc
data16
xchg
mov
mov
movsb
ret
test
mov
or
push
loope
leave
testb
addb
ds
or
mov
cwtl
clc
pop
incl
cmp
shlb
arpl
add
sub
mov
orb
and
in
cmp
push
cmpsb
adc
adc
xor
fmul
mov
test
add
cmp
jnp
ror
arpl
fcompl
fisubs
or
aad
frstor
jae
sahf
insl
inc
dec
mov
xchg
lahf
call
aaa
lock
repnz
orl
xor
cmpsb
xor
arpl
xchg
outsl
imul
pop
inc
pop
push
mov
sub
pusha
cmpsl
adc
cli
and
mov
pop
out
xchg
push
fstps
scas
inc
mov
jecxz
jmp
inc
sbb
push
lcall
ret
xor
add
mov
inc
ss
jo
push
pop
bound
mov
jae
rcll
mov
sub
sub
std
lahf
add
lods
mov
mov
insl
stos
lret
and
mov
gs
sub
jno
cld
out
repz
out
push
sbb
sbb
mov
int3
jl
xchg
push
jmp
stos
push
and
mov
jl
inc
int
mov
jno
mov
inc
mov
subl
jl
ret
push
mov
xor
push
in
or
icebp
add
pusha
or
daa
mov
add
jns
nop
sbb
mov
xorl
cwtl
mov
push
iret
andb
push
or
enter
lahf
and
rclb
das
add
sbb
or
std
mov
or
xchg
sbb
dec
or
adc
test
pop
mov
adc
sti
pminub
mov
pop
pop
jnp
ss
and
adc
jl
pop
xchg
mov
and
out
push
cmp
push
and
lea
fnstenv
add
test
mov
sub
dec
adc
add
das
out
fnstenv
fdivs
add
mov
dec
xlat
jmp
or
gs
sti
jmp
cli
cmc
sbb
popf
and
std
addr16
push
cmpl
fwait
call
xchg
repz
cmp
bound
mov
mov
icebp
pop
or
mov
jl
sub
pop
fwait
jl
mov
ljmp
fwait
nop
push
and
sbb
sbb
add
push
pop
add
pop
add
repnz
mov
ja
cli
sbbb
jno
out
fidivl
sbb
mul
lcall
testl
negl
push
leave
adc
pop
dec
adc
xor
push
addb
xchg
push
popa
imul
or
ficomps
sub
jp
mov
pop
xor
ds
icebp
subl
mov
out
jno
xchg
ret
in
repz
iret
mov
and
std
lods
xchg
jl
inc
xor
jle
jmp
xchg
jno,pn
adc
loopne,pn
mov
jp
leave
int
xor
lods
insb
lock
mov
lret
cld
mov
inc
retw
lahf
ds
jmp
mov
fwait
adc
fiaddl
pop
mov
gs
push
xchg
dec
pop
mov
pop
cmp
cmp
pop
jno
pop
jnp
jge
lcall
sub
or
stos
adc
cltd
in
out
mov
insb
inc
aas
nop
sbbl
mov
subl
call
addr16
out
sbb
test
sbb
mov
icebp
add
sbb
add
roll
add
cmpsb
sbb
pop
fwait
xchg
jb
sarl
scas
inc
push
or
popa
or
mov
shrl
mov
cmp
cmp
jnp
popa
aas
adc
add
fidivs
jl
in
loopne
push
xor
sub
lret
xchg
add
loope
int3
cld
fs
sarl
imul
aaa
out
sbb
xchg
movsb
jnp
inc
sub
mov
sbb
js
stos
cmpsb
imul
pop
loope
xchg
decl
sbb
mov
xor
xor
out
or
scas
int3
pop
and
mov
dec
pop
push
xchg
push
pop
sub
sbb
data16
mov
scas
sub
xor
ficompl
imulb
shlb
out
add
or
loop
fmull
inc
lods
xchg
loop
xchg
dec
fmull
mov
inc
mov
cld
or
in
or
push
lods
or
xlat
jecxz
jmp
xchg
jl
push
stc
rcrl
or
jns
mov
add
lds
pop
fisubrl
xor
adc
sbb
cmp
push
mov
adc
mov
cmp
hlt
adc
sub
jge
xchg
stos
fsubrl
pop
jmp
jne
ds
mov
dec
stc
mov
jne
fsubl
enter
sub
push
or
iret
in
jns
sbb
imul
test
jb
jb
repz
iret
rcrl
jo
jae
pusha
testb
mov
jl
je
dec
enter
cmp
mov
int
mov
fwait
and
or
sub
and
dec
xorl
adc
popa
lret
daa
inc
xor
mov
dec
cmp
pop
adc
lds
and
xor
cmp
aad
subl
inc
arpl
jmp
fcoml
insb
loope
inc
adc
imul
rcl
jb
xchg
sti
push
push
ret
ljmp
inc
inc
insb
mov
sub
inc
data16
inc
aaa
adc
cmpsl
add
scas
dec
sub
inc
jne
es
inc
inc
shll
daa
jl
aad
mov
jge
jp
enter
stc
xorl
cltd
test
push
insb
push
and
or
xchg
mov
cmp
enter
push
into
or
mov
and
adc
lock
jp
mov
movsb
mov
inc
inc
jae
ss
lcall
aas
jmp
push
and
xor
ret
stos
scas
das
mov
lds
cmp
imul
mov
sub
push
ljmp
fildl
repz
shll
cltd
pop
je
scas
pop
mov
stos
not
lds
and
xchg
aas
or
sbb
xchg
and
hlt
int3
and
cmp
dec
test
push
cli
call
faddl
filds
daa
lock
punpckhbw
ljmp
xchg
shll
add
push
mov
ss
dec
xchg
pop
fldl
loop
mov
insb
fsts
test
push
mov
pop
and
jecxz
push
push
sar
push
sub
sbb
pop
dec
dec
jp
mov
ja
pop
inc
cmpb
ljmp
jl
je
inc
fistps
mov
or
aaa
xor
xor
int
cmp
mov
cmp
add
pop
arpl
fcompl
cmpsl
jnp
ljmp
xor
mov
repz
icebp
dec
sarb
adc
cmc
int3
jecxz
mov
gs
mov
mov
ss
data16
jl
clc
fiadds
popa
xchg
add
mov
inc
push
aas
hlt
sub
cmp
xor
imul
dec
and
orb
addr16
push
add
ss
xchg
stos
dec
or
mov
jle
adc
ds
fnstcw
punpckldq
and
out
mov
dec
adc
and
pop
sbb
cmc
jns
imull
shll
cmpsl
out
xchg
push
loope
insl
and
mov
add
xchg
ss
outsb
jnp
or
imul
mov
dec
add
dec
cmp
ljmp
fisubrs
mov
fmuls
sti
mov
xor
add
mov
loopne
cmpsl
and
dec
movsl
cmpb
nop
incl
imul
and
imul
and
push
xchg
sub
cmp
cli
and
cli
lahf
xlat
jbe
inc
and
sbb
lds
xor
ljmp
sbb
mov
fdivs
pushf
lods
sub
addr16
adc
mov
dec
jb
aam
push
clc
aam
movb
addb
hlt
fmuls
outsb
lock
mov
roll
pop
pop
xor
adc
mov
pop
rcr
inc
jle
out
sti
and
ret
prefetch
stos
mov
and
fucomp
lret
push
xchg
xchg
mov
les
imul
scas
xor
add
dec
push
inc
aad
dec
ljmp
mov
mov
out
mov
jbe
mov
dec
dec
int3
mov
jne
insb
call
rcll
and
mov
rcrl
aam
rcr
mov
inc
test
or
fdivp
fstpt
inc
jmp
inc
push
std
xchg
fidivs
dec
jb
pusha
and
mov
inc
std
aam
ret
mov
repnz
sahf
out
dec
mov
xor
call
adc
cmpsb
nop
push
fiaddl
popa
loop
or
pop
jmp
push
mov
ret
mov
fcoml
inc
mov
adc
xchg
xor
or
inc
icebp
imul
bound
mov
stc
sub
movsb
push
cmc
push
dec
jne
adc
imul
cmp
cmc
adc
sub
inc
fcmovb
aad
loop
lcall
mov
stos
dec
fnsave
jl
fs
je
mov
pop
cmpl
inc
lea
pop
cmc
add
mov
cmpl
in
popf
push
lea
push
fdivrl
into
movsb
xchg
xor
stc
xchg
xlat
sub
inc
outsb
jl
inc
jmp
rolb
lods
dec
xchg
cmpsb
push
daa
loop
adc
sbbl
ja
es
fidivrs
inc
fldt
fs
sbb
adc
aad
mov
fcomip
fsubr
mov
test
sti
divb
faddl
out
aas
insl
mov
xchg
std
push
add
in
mov
mov
pop
jecxz
mov
dec
aam
sub
fwait
jb
push
xor
iret
push
lds
lods
sbb
scas
mov
fstpl
pop
mov
sbb
cmpl
xor
mov
fists
lock
mov
push
in
mov
test
push
mov
lea
lods
enter
mov
cmp
int3
inc
jae
dec
ret
clc
in
inc
movl
aad
test
dec
sub
fcomip
jl
cwtl
outsb
jp
decl
sarb
cmpsb
inc
adc
adc
jae
sbbb
or
add
xchg
ret
andl
sub
leave
and
imul
inc
cltd
pop
sarb
popa
repz
jmp
or
inc
adc
hlt
cwtl
data16
int
xor
fidivrl
add
fdivl
aas
fnstcw
fimull
mov
mov
pop
vaddsubps
xchg
xchg
xchg
aad
das
sbb
nop
xchg
repnz
cmp
clc
repz
sub
mov
rorl
subl
mov
xchg
dec
jnp
mov
mov
sbb
aam
xchg
mov
addr16
in
and
jge
mov
mov
lahf
in
jecxz
sub
dec
cmpsb
dec
in
lret
mov
shll
int3
or
imul
das
int
outsb
movsl
popa
das
pop
push
insb
sub
test
lea
xlat
jbe
ret
and
pop
adc
add
jb
dec
fcompl
mov
std
leave
xor
cmc
addl
or
sub
iret
mov
pop
icebp
shlb
pop
add
xlat
mov
mov
cmc
ret
dec
and
std
pop
outsl
dec
ret
orl
addl
aas
xor
pop
mov
dec
and
in
pop
inc
mov
mov
arpl
jle
xchg
jg
push
mov
rcrb
mov
cmp
lret
xchg
test
outsl
test
jb
lret
in
in
push
cltd
mov
ss
aaa
mov
add
aad
push
addl
pop
and
or
out
pusha
adc
pop
mov
cmp
notb
pop
iret
ss
lahf
jmp
call
ret
or
xchg
mov
add
scas
into
dec
stos
cmpsb
xchg
mov
loop
lods
or
push
lds
mov
fsubrs
fs
or
mov
icebp
fs
dec
aaa
mov
xchg
sbb
cmp
add
outsl
xchg
add
mov
repz
cld
arpl
loope
leave
or
xor
and
mov
pop
push
aaa
sub
jo
movsl
mov
mov
hlt
cmp
shr
data16
repz
aas
fmulp
rorl
add
pop
mov
inc
jl
es
xchg
pusha
dec
cli
xor
sbb
push
ss
mov
orb
lea
mov
jp
push
xchg
daa
mov
mov
leave
jns
ss
pop
mov
fidivl
mov
mov
fstp
push
shrl
pop
xlat
std
mov
sbb
jo
decb
pop
cmp
out
sub
or
out
adc
push
pop
cmc
ds
add
mov
jns
lret
in
fdivl
push
dec
in
inc
inc
imul
loope
sbb
jne
pop
jecxz
std
lcall
mulb
ss
xchg
int3
push
mov
cmp
das
fimull
xchg
or
insb
enter
pop
sti
pop
stc
mov
lea
add
jno
xor
addr16
mov
mov
fs
icebp
int
xchg
aaa
sti
aas
dec
iret
sarb
mov
out
mov
imul
pop
shlb
sbb
push
lcall
mov
sbb
or
pop
push
add
adc
mov
xor
pop
xchg
xchg
mov
enter
and
dec
fwait
add
add
jo
inc
cmp
fsubrp
je
fcomp
fimull
pop
lcall
pop
imul
pop
popf
pop
pop
daa
call
pop
sub
ss
push
mov
xor
sub
add
jae
cmpl
jecxz
jae
ds
insl
adc
xchg
push
fcmove
out
fadd
inc
cmp
mov
push
cli
pusha
fisubrl
mov
xor
add
out
sbb
pop
sub
dec
push
lret
xor
ss
cmpxchg8b
mov
xchg
ret
std
pop
mov
ljmp
jle
xor
xchg
imul
insl
inc
sbb
jmp
inc
les
lret
stos
push
nop
into
inc
add
dec
dec
subl
mov
cmp
loop
ss
rcrl
int3
cld
cmpsb
mov
rcll
inc
out
mov
test
test
ljmp
das
xchg
add
mov
xchg
inc
push
jo
in
or
push
imul
lret
mov
fidivrs
je
sti
xorb
and
or
sbbb
mov
ret
xchg
mov
mov
jns
push
mov
stc
push
add
mov
ss
stos
jmp
aam
cmp
push
jns
cltd
fildll
ret
insb
pop
test
xor
push
in
mov
sarb
sbb
or
dec
addr16
rcl
inc
aas
enter
stc
cmp
adcl
stc
or
cwtl
adc
enter
in
dec
pop
scas
xchg
jne
cmpsb
dec
push
xor
xor
inc
fs
lea
jle
add
xchg
cwtl
dec
outsl
sahf
int3
pop
or
xor
fcom
cmp
xchg
lret
int
lahf
stc
enter
enter
add
jno
sti
mov
dec
dec
inc
or
jbe
out
mov
adc
and
or
xor
test
sbb
lahf
and
aas
jp
cmpl
loopne
mov
inc
lds
jecxz
es
push
pop
je
in
adc
push
pop
dec
jmp
fiadds
xchg
inc
fidivl
idiv
xor
and
scas
pushf
sbb
mov
lret
xchg
inc
sub
je
pushf
xchg
add
test
faddl
mov
test
stos
xchg
push
sbb
fwait
xorl
pop
in
xor
cmc
dec
or
cmpsl
sub
or
cmp
rolb
cs
loope
fildll
mov
xchg
dec
outsb
pop
inc
gs
fs
inc
test
cmp
add
jo
repnz
imul
add
add
scas
hlt
popf
push
scas
les
cmc
aas
and
cmp
dec
xchg
xchg
pop
mov
inc
dec
jns
dec
mov
xor
lret
iret
push
cmp
adc
jns
adc
js
nop
add
mov
cmp
sbb
xchg
xor
push
fidivrs
push
repz
inc
pop
push
xlat
mov
mov
in
and
test
addb
jg
inc
das
arpl
lds
fstps
sbb
sbb
fsubrl
pop
bound
rolb
push
mov
xchg
divb
mov
dec
push
sub
fs
jns
lock
repz
cld
inc
in
aad
mov
bound
sbb
test
stc
fstps
subb
inc
ret
daa
mov
dec
pop
mov
or
out
or
aaa
mov
mov
push
out
or
add
stos
xchg
xor
lods
sar
mov
jb
and
add
mov
shll
dec
fdivs
sub
pop
test
dec
mov
lret
rep
into
xchg
sub
mov
arpl
sarb
stos
clc
sahf
shlb
jne
pusha
push
mov
add
cmp
add
inc
add
jecxz
adc
adc
jb
cmp
add
mov
cmp
pop
mov
pop
sahf
bound
rcll
sub
or
push
sbb
test
mov
testb
inc
sbb
push
xor
enter
jp
xchg
loop
cmp
inc
add
jle
pop
push
or
cmpb
or
mov
xor
dec
pop
dec
add
fsubrl
sbb
xchg
or
push
and
dec
pop
push
dec
imul
jle
mov
adc
in
movsl
addr16
fidivrs
mov
add
pop
insl
inc
enter
push
int3
loopne
add
jb
lds
pop
sub
pop
xor
push
mov
sub
cs
scas
inc
cmp
push
std
std
inc
xorb
jg
imul
jnp
mov
popf
out
push
mov
cmp
push
jl
scas
clc
push
jo
gs
xor
rcrl
insb
lock
adc
outsb
ss
and
ja
test
aam
inc
pop
gs
imul
jo
das
adc
add
sub
les
push
addb
negl
ds
pavgb
xchg
les
mov
mov
pop
sarl
add
sbb
dec
adc
leave
pushf
xor
bound
pop
fs
mov
sbb
and
inc
mov
shlb
ss
xchg
insb
mov
stos
mov
sub
xchg
and
push
jge
out
ficompl
jmp
les
notb
xchg
mov
inc
xor
les
test
inc
mov
leave
and
xchg
test
sub
xlat
call
fs
mov
inc
push
enter
addb
lock
std
push
clc
xchg
movsl
dec
inc
or
out
mov
adc
out
call
sub
aaa
sbb
sti
cld
jg
cs
and
jne
xlat
add
jmp
cltd
mov
jmp
popa
fmulp
pop
push
mov
inc
push
adcb
test
idivl
jns
jb
ljmp
stos
imul
rorb
pusha
jg
xchg
pop
mov
add
and
adc
cmc
in
lcall
rep
insl
jp
cmp
out
aas
call
sbb
push
in
mov
adc
xchg
push
cltd
and
mov
and
dec
sub
jecxz
fisttpll
rcrl
pop
dec
roll
add
pop
sahf
push
fisttpll
pop
jo
clc
cmpsl
ds
ss
ss
pop
cmp
inc
adc
push
fnstenv
dec
mov
mov
das
push
pushf
jle
daa
xchg
icebp
sub
mov
enter
ret
and
cmp
mov
adc
jle
je
add
rcrb
mov
decb
int3
mov
sbb
loope
loope
cld
pop
repnz
pop
popa
cmc
psubd
xor
and
mov
insb
in
sbb
dec
enter
fcompl
push
mov
lds
xchg
cmpsl
dec
cmp
mov
daa
imul
and
xor
mov
loopne
mov
xor
test
loopne
jp
out
pop
mov
dec
jne
pop
dec
jmp
push
sahf
int
mov
movsl
nop
scas
sub
sub
xor
lret
loopne
aas
adc
arpl
or
or
mov
rcrb
or
cmpl
outsl
repnz
push
jbe
add
test
cmp
ret
sarl
insb
outsb
test
jle
push
not
loope
rorb
pop
push
enter
jb
jl
shrl
mov
mov
pop
outsl
aaa
push
push
fstps
mov
and
cmc
addr16
push
mov
fs
mov
jns
mov
sub
dec
dec
sbbb
sbb
mov
sbb
and
insb
adc
add
dec
or
jg
push
mov
nop
jae
test
in
add
mov
outsb
adc
and
jns
arpl
jae
and
pop
stc
cld
loopne
in
pop
sti
jno
or
int3
out
sub
mov
dec
fwait
mov
sub
fs
sbb
cmp
cmp
xor
shr
push
push
in
scas
std
adc
iret
lret
outsb
mov
daa
in
push
pop
sbb
jo
mov
cwtl
xchg
jnp
mov
shlb
and
mov
lahf
inc
sbb
addr16
jae
clc
cwtl
shll
cmp
push
lea
push
push
jge
aas
mov
fisubrl
pusha
or
sbb
push
push
push
xchg
aad
call
adc
imul
pop
ss
cmp
sub
xor
xchg
xor
adc
xor
enter
popa
push
push
push
hlt
insb
push
dec
mov
outsl
inc
dec
fisttps
push
or
les
mov
inc
fidivs
scas
push
push
dec
jecxz
push
pop
stos
pop
jbe
mov
sub
subl
add
jl
push
cld
xchg
mov
ficompl
pop
mov
sub
lahf
lret
ds
sbb
cmpsb
out
cwtl
sti
dec
jmp
je
cmp
or
lahf
xchg
cwtl
inc
xor
dec
das
inc
and
out
xchg
inc
push
mov
inc
aam
popf
lods
dec
loop
jge
cli
adcl
aad
lret
sti
push
outsb
cmp
jp
test
jp
stc
mov
sub
jo
mov
mov
cmp
clc
push
mov
repz
lahf
pop
test
and
mov
add
cmpsl
fisubl
int3
ret
sbb
push
jg
mov
xor
cmp
stos
stos
jp
xchg
sahf
std
fcoml
xchg
sub
sub
notl
outsl
vfnmsub213pd
je
cmp
es
stc
jecxz
incl
push
mov
imul
push
sar
fdivs
int3
mull
shl
addr16
xlat
xchg
push
movsb
lds
pushf
addl
push
insb
cmp
xchg
scas
gs
enter
cmp
lahf
xor
repz
inc
fnstenv
mov
in
das
jp
or
aad
dec
repz
data16
adc
sub
push
loope
xor
jmp
sub
shlb
adc
outsb
mov
jnp
punpckldq
sbb
aaa
inc
out
push
inc
out
movsb
rcl
mov
popa
int3
cmp
fiaddl
push
adc
in
mov
roll
cmp
add
orl
cmpl
dec
jmp
mov
cmp
out
xchg
fprem1
loopne
inc
push
mov
pop
xchg
shrl
xchg
repnz
add
lock
neg
jecxz
sar
dec
fdivs
hlt
adc
or
rcrb
lret
movb
fldl
jp
pop
mov
pop
ficoms
ret
cmpsb
mov
mov
scas
push
or
mov
pushf
into
iret
cmp
testb
inc
add
sahf
jae
and
push
sub
dec
cli
shrb
or
mov
cmc
je
xchg
and
shr
push
mov
arpl
data16
push
into
push
outsb
negl
lahf
out
sbb
aas
sbb
and
xchg
add
push
fisubl
inc
xchg
cltd
test
mov
adc
rol
lea
jl
adc
or
xlat
mov
pop
outsl
icebp
insl
subl
xchg
lea
hlt
xchg
dec
mov
cmp
xchg
dec
pop
xchg
add
adc
fwait
mov
adc
arpl
xchg
shlb
push
and
jp
mov
xor
cwtl
call
xor
pop
incl
das
jge
es
mov
xchg
dec
xchg
imul
lods
xchg
sahf
mov
jns
push
sti
sub
fs
push
cld
xor
js
jmp
inc
int
divb
repnz
xchg
fidivrl
push
fst
out
add
push
enter
mov
notb
cmp
xor
outsl
cmpl
dec
pop
inc
or
adc
sub
int3
pop
imul
in
out
imul
pop
and
xor
nop
push
ja
xchg
xor
fs
ja
mov
in
jmp
add
shlb
cmp
push
stc
jb
test
jmp
cmp
xlat
loopne
ret
xor
aaa
xor
insl
pop
sahf
ss
mov
pop
mov
push
ror
adc
xor
insb
out
inc
xor
data16
fcmovnu
or
addl
or
scas
ror
imulb
pop
sub
dec
inc
imul
sahf
inc
xchg
or
leave
jne
stos
jle
rolb
aad
push
pop
and
out
cmpsl
or
fcomip
dec
jbe
inc
mov
sbb
jae
mov
xor
push
mov
jmp
dec
insb
enter
iret
pop
mov
inc
sbb
stos
hlt
xchg
or
loopne
push
jne
test
xlat
lock
mov
test
movsb
fwait
or
push
sarb
mov
stos
jmp
insl
cwtl
add
jbe
mov
ret
imul
es
jbe
inc
or
cmp
push
loop
sbb
add
fildll
enter
mov
outsb
sbb
loope
dec
adc
pop
inc
cli
movsl
mov
mov
jae
push
push
xor
mov
jo
test
int
cmpsl
call
pop
je
sbb
mov
stc
nop
hlt
cmp
push
fs
out
pop
mov
jae
arpl
add
popf
int3
adc
out
dec
stos
add
stos
repnz
mov
xchg
insb
adc
jmp
and
cmpsb
add
xchg
xor
fisttps
scas
inc
test
jg
xchg
jbe
testb
mov
cltd
mov
jno
and
nop
adc
push
inc
and
imul
inc
loope
cmp
jbe
test
mov
mov
in
sub
lock
nop
fildl
rol
and
push
push
stos
xchg
adc
data16
pop
leave
out
pusha
inc
int3
cmp
dec
rcl
js
inc
outsb
and
inc
sbb
sahf
lret
pop
nop
add
sbb
pop
add
mov
mov
pop
push
aas
out
rorb
es
dec
adc
pop
fstps
or
cs
push
shlb
sar
pop
cmp
jmp
cmp
js
sub
push
loope
icebp
dec
lea
outsl
ljmp
leave
and
xchg
testb
jno
lods
daa
outsb
nop
daa
out
aas
push
inc
and
jmp
popa
or
cmp
bnd
dec
out
xchg
cmp
ficompl
mov
or
ljmp
add
shlb
adc
dec
mov
fisubl
jae
dec
or
push
pushf
test
iret
mov
outsb
loopne,pn
aaa
popa
cmpsl
xor
add
pusha
push
mov
ss
ss
and
and
mov
and
sub
push
xchg
push
or
je
cli
xchg
aam
mov
sub
jnp
in
push
mov
out
adc
lret
das
jmp
jae
jmp
cmp
in
shlb
sar
mov
insl
jbe
sbb
adc
push
adc
cmp
or
mov
insl
lret
adc
mov
mov
xor
shrb
subl
add
sbb
adc
call
fnstsw
mov
add
sti
sbb
sbb
pop
push
sbb
cmpb
int3
inc
rcr
cmp
push
out
div
scas
iret
out
stc
cli
imul
sar
adc
fs
xor
mov
xchg
testb
mov
jbe
out
mov
scas
mov
lds
or
mov
xor
and
jne
xchg
fcoms
xchg
int3
icebp
xchg
mov
xorb
movsb
adc
push
push
cmp
push
pop
jo
loopne
mov
inc
rorl
dec
pop
or
je
push
mov
sub
lea
test
xlat
mov
clc
mov
inc
fidivs
mov
mov
dec
data16
cmp
push
mov
nop
cltd
aad
xor
jnp
ret
pushf
subl
loopne
pop
clc
xor
adc
jp
xchg
out
dec
leave
or
sbb
mov
jne
ficomps
jns
jbe
adc
sub
adc
push
ret
xchg
sbb
xor
je
mov
xor
jns
out
and
jns
jbe
fwait
pop
mov
jp
cmp
dec
push
test
pop
dec
test
cmp
std
rorb
cmp
fldt
pop
xor
cmp
lret
test
fdivrl
lds
jae
cmp
push
pop
add
add
adc
xchg
ret
sbb
sub
fs
rcll
sub
cmp
stos
sub
fbld
cwtl
iret
or
xor
cwtl
lods
inc
dec
in
out
or
push
adc
adc
lahf
xor
inc
inc
jbe
xchg
and
pop
mov
or
sub
imul
or
add
sub
fcmovnbe
in
dec
jae
add
mov
das
cmc
mov
jbe
movsl
push
aas
in
icebp
es
lahf
add
popa
lds
adc
lods
leave
jnp
and
dec
in
movsl
ds
push
data16
cmp
ja
inc
ljmp
sub
cmpsl
jbe
push
mov
clc
mov
dec
test
pop
cli
scas
mov
cmp
lods
push
mov
and
push
out
mov
sub
jge
arpl
stos
dec
push
mov
mov
sbb
pop
dec
xchg
ret
cmp
leave
cmp
out
xchg
push
pop
pop
js
leave
movsb
icebp
smsw
xchg
mov
out
into
imul
lcall
or
sub
fisttps
sbb
xchg
in
repnz
xchg
lret
stos
int3
test
clc
mov
adc
addr16
push
sub
adc
hlt
gs
rcr
cmp
mov
lret
adc
rcrb
ds
mov
sub
sbb
into
pop
or
arpl
leave
xchg
pop
jo
dec
or
pop
push
pushw
push
push
pop
xchg
inc
ds
mov
ljmp
cmc
push
leave
ss
pop
sub
repnz
jmp
add
pop
add
fildl
jno
jns
jne
sub
int
pop
icebp
std
mov
and
daa
shlb
mov
cmpsb
mov
clc
and
ret
sub
mov
popa
outsl
jl
push
sbb
es
stc
mov
mov
push
inc
cmc
sbb
xor
lods
and
cmc
sti
popa
jp
icebp
sbb
sub
call
rorl
movsl
cmpsb
xlat
dec
mov
or
mov
mov
jb
xor
sarl
icebp
stos
add
adc
rorl
adc
or
or
cmc
movsl
dec
test
lods
je
and
jbe
and
dec
pop
dec
mov
icebp
sarb
pop
xchg
sub
mov
in
pop
enter
rolb
lret
cwtl
mov
sbb
aam
in
cmc
and
nop
std
and
dec
ljmp
scas
fcoms
adc
aam
pop
lock
ret
in
push
sti
clc
cli
push
jbe
jle
and
xchg
enter
out
jl
call
jg
mov
mov
mov
add
sbb
mov
out
sub
js
aad
lret
fwait
hlt
pusha
push
inc
jae
and
leave
scas
mov
mov
sbb
es
push
dec
adc
pop
fisttpl
push
fwait
sti
popa
jo
incb
je
aad
mov
mov
out
cli
imul
lods
ja
and
shrl
pop
fptan
mov
fisubl
mov
arpl
cmp
data16
inc
inc
jg
inc
xor
idiv
cmp
xlat
push
inc
jo
in
lret
nop
pop
sbb
scas
mov
arpl
pop
aaa
test
dec
jno,pt
aaa
negl
fwait
std
xchg
cmc
mov
pop
push
jne
xor
arpl
in
jns
movsl
pusha
cmp
jae
insl
pop
popf
jle
ljmp
dec
fs
repz
cmp
sti
fnstsw
add
in
pop
lcall
add
mov
mulb
enter
lods
mov
test
inc
mov
inc
and
test
mov
mov
inc
sbb
roll
mov
fs
xor
loope
stos
fwait
xor
shl
call
lea
ja
lds
out
push
xor
cli
push
shr
jle
inc
inc
leave
cs
lock
cld
and
push
cmpl
sub
pop
rcrl
outsl
push
inc
enter
pop
lock
push
pop
mov
loopne
nop
and
fstpt
lock
imul
in
mov
jmp
add
jmp
mov
and
aam
sti
add
gs
jl
xchg
sub
dec
push
jae
cmp
mov
add
pop
imul
and
xor
ja
inc
std
popa
sbb
jmp
xor
mov
lock
pop
sbb
jmp
add
dec
int
xor
push
sbb
mov
pop
push
lods
adc
leave
mov
shl
xchg
cmp
push
mov
jecxz
inc
add
aad
or
inc
mov
xchg
into
out
mov
jle
adc
mov
aas
mov
rolb
jnp
stos
xchg
gs
mov
call
adc
popa
sub
repz
dec
mov
push
dec
push
cli
lods
popf
xchg
outsl
pop
push
loop,pt
xlat
popa
xchg
sahf
mov
and
ljmp
add
repz
push
dec
adc
or
loop
xor
fwait
sti
jle
add
sbb
pop
imul
sub
jb
inc
data16
nop
sub
jmp
pushf
jp
push
mov
imul
push
pop
pop
rcrl
add
jge
pop
pop
enter
imul
adc
fwait
mov
ljmp
jmp
nop
pop
pop
sbb
lea
outsl
repnz
ss
or
pop
jnp
adc
jle
dec
mov
push
lahf
jmp
cs
pop
push
shlb
jge
push
mulb
and
xchg
out
dec
cmpsl
jae
cmp
push
outsb
aas
in
rol
adc
or
push
imul
pushf
cwtl
xor
add
icebp
push
push
aas
nop
jo
loop
stc
and
mov
rcll
out
and
and
mov
xchg
sbb
stos
aaa
lahf
mov
mov
pop
movsl
adc
adc
pop
repnz
js
mov
out
add
fmuls
mov
leave
mov
dec
push
out
movsl
dec
fidivrl
ja
test
scas
sarl
and
in
insl
inc
shl
fs
push
movsb
mov
mov
sub
inc
pop
in
mov
jle
movsb
in
outsb
data16
les
pop
dec
repz
jmp
fs
insb
and
out
sbb
add
dec
mov
pop
dec
pop
mov
scas
orl
mov
ljmp
cmp
dec
shrb
fldenv
ds
cld
mov
pushf
inc
imul
fisttps
lret
and
jmp
mov
mov
popf
rorb
xchg
pop
jbe
sbb
fwait
adc
ss
in
fs
roll
out
out
mov
mov
xchg
inc
and
and
push
enter
mov
repnz
stc
xchg
add
dec
arpl
jp
pop
arpl
cwtl
pusha
loope
push
jno
out
fbstp
call
inc
pop
pop
es
lods
inc
cmp
pop
loope
pushf
fsubs
ret
ret
dec
push
ljmp
mov
adcl
ljmp
inc
xchg
add
mov
loop
insb
xlat
sub
lds
notl
xchg
ljmp
push
notl
push
or
int
ss
mov
xchg
mov
xchg
or
movsl
cmp
test
push
adc
out
repnz
movsl
icebp
adc
push
lods
inc
lret
std
imul
xor
push
sbb
xor
dec
iret
int3
sub
shr
dec
inc
icebp
cmovl
sbb
mov
scas
pushf
jno
inc
or
pop
cli
sbb
cmp
gs
adc
inc
mov
imul
es
outsb
lcall
in
jecxz
or
jo
fistps
ret
add
inc
push
ja
outsl
sarb
outsl
cs
adc
roll
ds
mov
dec
add
lds
lcall
negb
cmc
mov
adcb
sbb
jp
inc
shll
push
fs
lret
out
fdivp
clc
cmpsb
mov
and
pop
fmuls
pop
sbb
inc
shlb
add
or
out
dec
xor
and
dec
mov
mov
sub
add
mov
js
loopne
mov
xlat
fldenv
jl
in
sbb
push
dec
xchg
pop
ret
dec
loope
dec
adc
sub
inc
sbb
dec
xor
icebp
ret
add
xor
push
inc
inc
in
push
mov
cmp
ds
mov
pop
push
shlb
mov
sbb
test
sbb
inc
mov
nop
dec
call
dec
pop
sbb
or
jb
rcrb
shlb
sbbl
pop
jmp
cmp
fs
lret
add
and
jg
sarl
movsl
jmp
xor
mov
scas
insl
xchg
or
adc
mov
mov
mov
test
or
mov
push
sub
add
add
cld
pop
loopne
enter
into
jns
and
pop
jl
not
add
sbb
movsl
mov
push
push
iret
mov
push
and
and
lret
testl
jmp
in
movsb
mov
rorl
cmp
inc
push
lar
xchg
mov
cli
inc
insl
ds
stc
mov
pop
mov
daa
mov
negl
xchg
and
imul
dec
push
adc
cmc
stc
mov
ljmp
lea
cld
negl
dec
imul
adc
mov
cbtw
pushf
cmp
mov
push
addl
lret
iret
clc
jae
js
outsb
inc
sahf
addr16
jge
xor
xlat
cwtl
jmp
cli
mov
movaps
inc
inc
xlat
push
lcall
push
std
mov
sub
push
negb
jne
cmc
repz
int
fwait
cli
mov
out
mov
popf
push
inc
cmp
jl
out
addb
cmp
jns
sub
dec
dec
push
or
xchg
add
pop
pop
orb
repnz
pop
nop
mov
ret
or
or
repz
push
sub
dec
out
in
pop
adc
test
lcall
cmpsb
sarl
loop
das
ljmp
cltd
arpl
mov
sub
lods
xor
xchg
and
mov
xchg
push
ja
cs
jae
xlat
les
push
pop
cmp
rorl
push
mov
adc
leave
adc
push
xchg
mov
imulb
mov
xor
test
loope
mov
inc
and
mov
mov
lods
repz
dec
pop
shl
or
repz
faddl
cli
pop
xor
inc
popf
dec
fcmovnbe
data16
in
daa
mov
adc
jbe
daa
into
movl
add
out
add
adc
lds
int3
ficompl
inc
cmp
repz
rcrb
test
mov
sub
hlt
mov
lret
mov
das
adc
mov
shll
xchg
pop
adc
cmp
ljmp
cli
or
into
jecxz
cmp
into
pop
mov
orl
cmpsl
ficompl
les
testl
add
mov
leave
push
xor
test
or
add
les
ja
xor
jns
jo
outsb
sbb
test
mov
xchg
push
aaa
mov
mov
and
mov
xchg
fisubs
aam
pushf
inc
stc
clc
jp
rorb
mov
sbb
jno,pn
dec
xlat
imulb
loope
lea
mov
push
jnp
xor
lods
jae
or
sub
or
xor
push
fs
jbe
mov
and
sub
inc
sahf
mov
add
out
ja
mov
stos
and
xor
sub
mov
xchg
pop
imul
push
pop
inc
mov
mov
dec
rorl
push
jmp
push
pushf
mov
fstpt
cmp
mov
and
or
int3
and
les
aaa
sbb
cmp
xor
mov
out
xchg
bound
jmp
cmpsl
in
fldt
fiaddl
sti
push
inc
clc
ret
loop
loope
cwtl
jns
stos
repnz
std
jb
scas
cmp
and
push
or
xor
dec
mov
lcall
fimuls
xchg
ret
push
xchg
mov
pop
movb
idivb
es
sbb
xchg
adc
addl
arpl
outsl
lahf
cmp
xchg
inc
ret
cli
add
mov
pop
sub
je
add
jg
xchg
jo
pop
and
or
dec
or
rclb
lahf
inc
inc
cmp
int3
and
pop
cmp
pop
gs
rcr
inc
sar
test
add
pop
sub
outsb
sbb
xchg
jae
jo
sub
or
into
mov
test
dec
cmpsb
aad
cwtl
or
mov
imul
shll
enter
mov
and
scas
inc
gs
int3
notl
ss
sub
sbb
dec
sub
loopne
pop
lahf
dec
sub
add
push
decl
scas
shl
or
inc
sbb
adc
outsl
and
into
cltd
mov
and
rorl
push
int
test
popl
mov
gs
adc
cmc
gs
sbb
push
mov
cmpsl
je
les
ret
aam
setl
inc
add
dec
outsb
jge
add
fpatan
lods
mov
insl
test
mov
jno
rorb
cltd
jmp
aas
out
jl
imul
mov
or
push
pusha
add
call
sti
cmc
push
jo
int
adc
lods
mov
pop
es
cld
cmp
fcmovnb
and
out
inc
gs
lahf
push
sbb
cmp
dec
fwait
dec
pusha
ret
cwtl
sub
leave
mov
cld
xchg
xlat
int3
insl
dec
pop
inc
lret
push
xor
push
fidivl
dec
les
fcmovnb
pop
cvttps2pi
adc
dec
in
jmp
cwtl
cmp
stos
mov
dec
sbb
xchg
lret
and
addb
inc
lret
and
jg
adc
ret
push
xchg
aaa
push
fiadds
arpl
jg
sub
into
inc
loop
xlat
mov
gs
lock
jnp
pop
lea
xor
add
scas
inc
cmc
sti
pop
mov
mov
push
or
cmp
dec
jmp
push
and
mov
in
into
xor
mov
jo
inc
frstor
sub
into
mov
mov
and
rcrb
add
outsb
stc
jge
insl
lods
adc
dec
into
jae
ja
subb
ret
push
iret
stc
mov
aad
ret
dec
or
movsl
rorl
stos
movsb
mov
xlat
inc
ds
lret
mov
cmp
mov
add
mov
in
and
cmp
sbb
jle
ss
sub
xorl
cmpsb
mov
push
decb
xor
loope
push
inc
xlat
cmp
pop
sub
mov
inc
sahf
push
mov
push
sub
loopne
xchg
incb
mul
cmc
mov
cmc
aas
mov
in
ljmp
shrb
je
sub
subl
orl
sbb
add
adc
sbb
and
lret
int3
mov
je
sbb
call
cmp
cld
ss
repz
push
jno
mov
pusha
sbb
adcb
sbb
in
cmp
sub
jo
mov
roll
sub
insl
mov
inc
sbb
push
cwtl
fwait
mov
jo
fnstcw
inc
stos
in
shll
xor
lods
fstpt
in
in
loope
mov
mov
cltd
stos
lods
je
imul
sub
xor
fstpl
add
movsb
popf
loope
sub
pushf
add
call
dec
sbb
mov
and
mov
shrl
mov
outsl
sbb
cmpsl
js
sub
push
pop
mov
mov
test
loopne
mov
jbe
test
pop
xchg
je
sbb
inc
aad
roll
push
cmp
les
inc
lods
sub
sbb
or
mov
mov
scas
jge
jge
jmp
fdivrs
ret
mov
frstor
repnz
icebp
imul
mov
jo
dec
outsb
mov
lahf
filds
adc
xor
pusha
adc
out
push
fdivs
dec
add
add
mov
test
mov
pop
inc
loope
aad
iret
inc
in
mov
dec
xor
sbb
and
adc
test
into
orl
int
sub
in
andb
ljmp
loopne
daa
and
pushf
rorb
loope
add
lret
xchg
lods
dec
in
nop
loop
idiv
icebp
in
dec
push
adc
inc
pop
mov
dec
fidivs
mov
cmpsl
rclb
and
fisubs
jbe
pop
or
into
cld
dec
jmp
or
or
sbb
mov
aaa
mov
push
jb
loopne
call
push
jp
xchg
cltd
mov
imul
push
fisttpl
mov
outsl
js
lahf
popa
pushl
and
out
pop
dec
mov
adc
sti
sbb
lock
stos
sub
or
push
push
loope
add
cltd
mov
mov
outsl
jecxz
cltd
inc
fstps
scas
jmp
add
dec
arpl
sbb
js
adc
fnstenv
pop
push
cmp
aad
iret
in
xchg
aad
insl
mov
in
mov
push
inc
sub
test
cmp
inc
or
outsl
rcr
sarb
xchg
jecxz
mov
mov
adc
push
aad
aas
stos
jmp
fildll
mov
out
xchg
stos
pop
xor
push
enter
mov
fldcw
inc
mov
mov
pop
sub
and
in
leave
fsts
repz
sbb
mov
shrl
or
dec
shll
cmpsb
ja
cmpsb
push
dec
out
dec
subb
loopne
push
shld
lods
pushl
pop
lds
jl
ficoml
jae,pt
fidivl
insl
rcrl
dec
jo
mov
test
and
push
push
pushf
adc
insb
cmp
loope
jbe
push
aas
rorb
sbb
pusha
addl
out
subb
out
ret
add
and
fimuls
cmp
cmc
movsl
adc
lret
jns
pop
cltd
cwtl
mov
dec
and
cmp
jnp
subb
cld
cwtl
push
add
inc
lcall
push
lds
sbb
jae
mov
dec
mov
imul
repnz
shlb
mov
mov
xor
adc
pop
repnz
adc
jnp
iret
mov
jge
stc
jne
outsl
loope
insb
and
test
mov
pop
push
repnz
int3
outsb
in
xor
adc
mov
out
sub
or
subb
and
inc
in
out
and
fimull
lretw
repz
cmpsl
adc
out
jae
inc
aaa
jne
cmc
sub
cltd
lea
push
scas
sub
repnz
add
ss
cmp
or
fcompl
cmpsl
les
xor
imul
mov
xor
dec
pop
mov
pop
notl
cli
or
or
inc
outsb
mov
lret
fdivrs
mov
cmp
aas
or
xchg
dec
es
aaa
push
nop
outsb
cmpsb
push
loope
dec
test
xor
sbb
jp
icebp
inc
loope
dec
or
mov
pop
ret
mov
aad
stc
imul
and
mov
icebp
outsl
and
sbb
inc
mov
jle
mov
aad
jle
lock
aaa
and
nop
rorl
mov
sti
xchg
dec
call
sbb
data16
out
xor
adc
push
mov
dec
pop
push
stos
jo
mov
stc
rcll
out
bound
mov
sub
cs
mov
pop
cmpsb
idivb
pop
mov
and
pop
test
ja
std
ljmp
popa
roll
loope
fldenv
ljmp
pop
or
cld
movsl
imul
fstps
pop
jnp
add
dec
sbb
dec
pusha
xchg
mov
ss
out
cltd
mov
dec
mov
fisubs
cmp
std
or
aaa
xchg
aas
mov
sub
push
pop
lahf
fcomi
mov
mov
fildl
xchg
in
or
mov
lock
aaa
push
inc
sbb
outsb
adc
in
outsl
outsl
int
sub
jo
mov
pop
ret
or
ret
or
push
mov
lahf
sub
hlt
sahf
dec
cmp
pushf
dec
nop
movsl
adc
adc
dec
test
lret
cmp
mov
add
ds
inc
aam
mov
call
mov
add
xor
cmp
ja
pop
pop
cmc
ss
hlt
add
inc
fldt
pop
fnsave
sbb
adc
aam
out
mov
bound
nop
out
jno
ret
jo
push
bound
dec
in
cld
xor
test
add
mov
shll
xchg
aad
xor
dec
cmp
mov
imul
add
xor
movsb
cmp
mov
pop
mov
sbb
fistps
lea
dec
pop
xor
ret
mov
xlat
andb
imul
xor
mov
jmp
test
fs
mov
and
pop
mov
insb
pop
push
outsb
adc
dec
mov
and
movsl
loop
or
arpl
mov
push
xchg
fimull
repnz
fdivl
aas
and
sti
xor
xor
les
out
sub
mov
ja
cmp
iret
lock
xchg
xor
dec
imul
pushf
dec
sti
jnp
mov
mov
popa
sub
cmp
out
faddl
adc
push
jmp
or
ss
jbe
out
xorps
incl
fiadds
out
jae
sbb
xchg
mov
scas
in
jmp
leave
push
jns
push
push
outsb
inc
adc
out
rcl
mov
sub
pushf
sbb
lds
mov
and
mov
cmpsl
jnp
push
mov
jge
or
mov
jecxz
rorb
lods
mov
jle
jno
or
sbb
cmp
ret
fs
or
cs
das
insb
pushf
push
xor
or
out
dec
mov
xchg
movsl
cs
mov
jb
and
xor
pop
sub
or
daa
loopne
xor
mov
inc
das
jle
inc
sbb
add
and
test
jns
jo
or
out
inc
in
and
mov
adc
ss
push
sbb
mov
add
sub
cmpsb
cltd
or
dec
pop
mov
mov
push
cmpsl
sub
call
xor
mov
daa
frstor
mov
aas
pop
push
push
in
sbb
les
xor
push
lret
xchg
sbb
add
lahf
dec
or
hlt
arpl
and
inc
and
loopne
jl
dec
adc
out
sub
push
xchg
es
mov
ljmp
fiaddl
inc
sbb
pop
nop
test
mov
sub
mov
into
stos
cmp
ja
dec
or
push
sbb
or
jne
xchg
mov
iret
repnz
sbb
mov
movsb
stc
jmp
or
icebp
push
jmp
imul
cmpsb
fdivrs
filds
push
pop
shl
outsb
mov
filds
pop
jo
lea
sbb
add
cmpsb
out
int
sbb
adc
fwait
cs
rclb
dec
jle
adc
add
or
inc
mov
aad
scas
mov
xchg
out
mov
mov
hlt
sub
cmp
mov
adc
adc
xor
add
arpl
push
push
xchg
jecxz
xchg
pop
cli
lret
mov
hlt
jmp
aam
push
or
mov
out
fcmovu
sub
pusha
or
or
adc
xor
lret
hlt
push
or
xlat
arpl
xchg
call
shr
push
mov
mov
iret
es
sbb
sub
sbb
jns
adc
mov
test
out
sbb
xchg
mov
das
fs
stos
inc
sub
push
call
mov
mov
xchg
movsl
fisttpll
push
push
pop
outsb
jge
push
ss
sub
jno
and
mov
mov
notb
mov
jne
inc
sub
rorb
stos
jmp
inc
adc
loope
cmp
add
jbe
aaa
dec
loop
fldt
data16
outsl
pop
and
xchg
lock
xchg
ss
dec
insb
int
fs
pop
outsl
pop
mov
xor
add
or
cmpsl
test
nop
pushf
push
push
cmc
pop
jo
lods
fistpll
dec
or
mov
pop
jae
ds
cli
add
lds
cs
mov
insl
push
pop
jecxz
stos
movsl
insb
or
stc
push
stc
mov
cmpsl
cltd
movsl
ljmp
jge
idivl
hlt
cwtl
std
dec
fistps
pop
ljmp
or
in
add
lock
jl
sbb
mov
in
mov
insb
callw
mov
cmp
or
jp
push
outsb
xchg
jmp
push
stc
sub
ficompl
imulb
aad
repz
les
and
out
dec
sbb
push
cmp
mov
mov
jns
or
mov
and
addl
test
and
jb
inc
nop
fidivrl
add
mov
clc
xor
insl
loope
push
mov
mov
inc
jne
pop
mov
je
cmp
jl
lcall
and
jns
rol
and
and
jno
pop
enter
add
ljmp
and
ret
push
pop
pop
dec
sti
loope
push
loope
sub
xor
jno
jns
aam
sbb
push
cmpl
repz
cwtl
repnz
jbe
stos
stos
jp
ficoml
shll
xor
push
aam
push
adc
mov
shr
pop
xor
dec
or
sbb
cmp
dec
inc
push
xor
cltd
mov
sbb
adc
adc
push
fsubrs
adc
xchg
xor
pop
mov
test
cmp
inc
cltd
inc
cmp
mov
dec
cli
fdivr
xchg
aad
test
lea
push
pop
xor
rol
xchg
cltd
adc
push
xchg
push
test
add
xor
cwtl
repz
jge
or
arpl
imul
stos
mov
jmp
scas
andb
cmp
jno
insb
xor
jbe
mov
lret
mov
pop
add
fsubrs
sahf
cwtl
pop
mov
stos
xchg
pop
int
fldt
pop
pusha
inc
popa
or
je
hlt
int
in
mov
add
jmp
jnp
pop
fst
pop
cli
ljmp
rcll
cmpsb
and
dec
or
aam
sti
push
cld
sbb
dec
push
push
dec
cmc
cmpsb
or
inc
adc
dec
sahf
jg
xchg
fldcw
xlat
sbb
inc
pop
pop
lods
iret
push
mov
pusha
dec
jo
sub
and
pushf
xor
mov
gs
icebp
add
inc
jp
mov
in
cld
mov
dec
insb
cmp
xchg
addr16
inc
lret
out
pop
inc
rclb
into
pusha
fcomi
mov
aas
cmpsb
lahf
ds
push
imull
mov
repz
and
in
out
push
inc
sub
sarl
mov
sub
inc
xchg
repnz
or
jl
jmp
out
add
mov
inc
fdivl
cmp
je
ss
popf
fscale
mov
mov
or
lea
arpl
adc
cmp
and
jle
dec
inc
loopne
in
iret
shl
test
xchg
stos
sbb
shlb
sub
dec
mov
andl
roll
movsl
fcoms
or
xchg
push
inc
or
pop
mov
jne
inc
cmpl
js
gs
bound
aam
ja
lods
inc
aaa
xchg
pushf
xchg
icebp
fcomps
xchg
arpl
outsl
jae
fmulp
repz
push
xor
push
xor
sbb
out
pop
repz
jae
test
mov
mov
cld
loope
mov
sub
adc
mov
repz
imul
pop
outsl
ja
popf
add
and
fcmovu
cmp
js
push
add
movsl
pop
jmp
push
lret
and
mov
inc
inc
add
into
pop
pop
push
xchg
mov
ds
popf
insb
add
xchg
and
in
sbb
add
out
sub
icebp
inc
in
out
subl
js
mov
mov
sub
jp
pushf
loope
std
sbb
mov
pusha
lea
mov
fldl
hlt
inc
stos
cmp
and
jge
dec
dec
cmp
push
shl
push
callw
mov
cmp
ficomps
xorl
orb
sub
sbb
mov
mov
out
xor
push
dec
in
fsts
inc
mov
add
shll
xchg
fistpll
push
inc
adc
insl
mov
mov
icebp
imul
jbe
inc
fldt
popa
sbb
aam
pop
pusha
movsb
ds
add
jecxz
arpl
insl
adc
out
xchg
jmp
fmull
scas
gs
xchg
mov
xchg
sbb
cwtl
sbb
outsb
add
aas
mov
jo
cmp
scas
enter
push
adc
dec
in
adc
xor
outsb
pop
xchg
xchg
inc
add
jmp
repnz
jg
lret
loopne
sbb
aas
xchg
call
inc
loop
dec
mov
fxtract
jmp
adc
xor
adc
das
jmp
jg
mov
xor
add
testb
mov
fcoml
mov
in
sbb
mov
push
aad
shrl
inc
das
scas
and
insb
rolb
add
push
jns
cltd
and
fcomps
jns
out
or
int3
fwait
xchg
iret
fsubrs
xor
testl
add
imul
es
sub
pop
daa
xchg
cli
nop
call
push
cmp
mov
add
xchg
push
mov
aaa
inc
pop
xor
and
mov
sub
xlat
push
loopne
jbe
into
mov
push
sbb
push
dec
dec
and
in
and
mov
inc
push
sbb
loopne
fsubl
dec
fstp
data16
push
arpl
mov
adc
and
cmpb
addb
push
push
aas
test
jns
insb
mov
xlat
or
das
cltd
pop
lea
xchg
mov
push
stos
imul
fidivrs
mov
jl
femms
repz
pop
stc
cmpsb
inc
or
sbb
stos
cmc
ror
mov
dec
lea
jl
jb
or
xchg
insl
pop
imulb
xor
push
push
mov
pusha
js
movsb
imul
lods
lret
push
and
test
addr16
addr16
xchg
inc
fsubr
or
sti
push
jp
js
mov
cmpsl
loop
movsb
lea
stc
jo,pt
adc
loop
jg
fldl
popf
popf
dec
and
sti
xchg
rcll
pop
mov
cmp
add
xchg
xor
rcl
pop
scas
cltd
hlt
or
jmp
and
mov
adc
shl
jne
jns
push
push
fbld
mov
out
ficoml
push
push
movsl
pop
das
jp
mov
inc
fisttps
add
add
mov
cmp
scas
dec
iret
fisttpl
fistps
aaa
popf
push
add
rcrl
adc
pop
cwtl
mov
call
aaa
smsw
inc
lds
outsl
mov
add
fnstenv
push
shrl
inc
pusha
pushf
aam
fadds
push
in
mov
lods
dec
sbb
loope
mov
push
add
popa
and
jmp
jbe
inc
push
mov
sbb
push
push
pop
and
mov
jbe
dec
cld
negb
cmc
in
ds
mov
xchg
xchg
cmpsb
popf
sbb
les
mov
inc
cmpsb
inc
mov
mov
xor
sub
adc
mov
fs
cmp
cmpsb
inc
lea
outsl
xor
inc
inc
add
ret
pusha
dec
stos
add
mov
dec
pop
leave
mov
lea
xchg
sub
lds
popa
sub
jmp
and
rorl
out
and
fwait
push
push
adcl
ret
and
outsl
sub
pop
jns
inc
xchg
icebp
adc
inc
cwtl
out
pop
loop
mull
mov
loopne
inc
sub
adc
leave
into
push
and
push
jp
inc
loopne
imul
bound
out
bound
xor
dec
or
xchg
jle
std
cmpsl
jb
push
push
lds
lahf
lret
push
jecxz
mov
lret
call
cltd
add
mov
iret
push
cmp
ret
int
das
xlat
psubd
jns
mov
sub
dec
into
sbb
cmp
jbe
scas
test
lods
mov
push
test
jae
adc
out
rolb
clc
jae
mov
xorl
andl
cmp
cmpsl
mov
cmp
push
scas
in
test
outsl
rol
inc
leave
add
dec
xorl
adc
sbb
shlb
mov
cmp
and
adc
push
xlat
push
xchg
xchg
daa
data16
push
scas
out
sbb
popa
mov
popf
inc
pop
andl
sbbl
pusha
dec
mov
orb
adc
mov
mov
inc
fsubs
loope
push
dec
fndisi(8087
mov
adc
in
xlat
inc
out
dec
int3
ljmp
out
imull
jbe
mov
mov
mov
xchg
jbe
xchg
sub
add
jge
loopne
add
lock
lods
mov
pop
push
push
daa
dec
inc
dec
push
xchg
jmp
sbb
jmp
mov
hlt
nop
lods
jg
mov
inc
jecxz
mov
sub
inc
jl
aam
xor
lret
jb
in
lods
repnz
daa
pop
fwait
pop
rclb
adc
mov
cmpsl
push
jbe
repnz
fcomps
sub
inc
out
int3
cmp
data16
es
ss
sahf
out
pop
bswap
add
push
pop
ret
bnd
lods
notb
pop
jb
cmp
adc
enter
push
mov
imul
or
int3
mov
mov
inc
fincstp
lods
adc
and
xor
push
jb
mov
or
xchg
idiv
cmp
and
les
add
sti
iret
or
pusha
in
sti
and
push
int
fistpll
data16
lcall
xorb
leave
movsl
and
dec
and
sub
gs
jno
js
into
dec
popa
int
data16
into
jle
jg
sub
ja
fstl
jnp
movsl
loopne
and
and
add
notl
push
addr16
aam
insl
shl
rcll
push
arpl
outsl
lret
jae
mov
popa
nop
inc
xchg
fsubr
pop
pop
pop
hlt
fs
lret
imul
cwtl
gs
je
jne
mov
inc
xor
cli
cmp
pop
xchg
jbe
push
inc
enter
ret
and
clc
cld
stos
xchg
loop
stos
stos
call
jnp
or
ret
xlat
push
jmp
outsb
stos
cmpsl
sbb
sbb
sbbb
xor
mov
sub
adc
fmul
jno
inc
xor
fs
dec
ret
in
stc
hlt
push
icebp
out
jae
jae
popa
xchg
jmp
xor
cmp
lcall
jnp
mov
push
cmp
cmp
add
test
aam
test
pop
test
mov
dec
shll
sub
jo
cmp
or
xchg
inc
xchg
and
sbb
out
sti
mov
push
pop
and
lret
in
xchg
sbb
jbe
add
js
inc
mov
mov
je
xchg
mov
ficomps
movsl
jmp
push
iret
mov
add
sbb
sahf
jge
jb
insb
cmpsb
loope
xlat
testl
ss
pop
lret
xchg
aaa
pushf
lcall
enter
daa
inc
out
and
loope
popa
or
sub
das
pusha
or
hlt
cwtl
or
push
xor
cmp
lock
ffreep
push
into
popf
fwait
fs
push
or
and
imul
mov
cmpsb
or
int3
cmp
or
pop
jl
mov
in
add
mov
testb
test
dec
in
sarb
mov
daa
add
in
pop
push
in
fcom
mov
aaa
stc
mov
sbb
fisubl
out
repz
repnz
test
aam
pop
and
pop
mov
int
fstpl
gs
sarb
inc
lds
out
dec
or
popf
pop
stc
adc
stos
xchg
jl
xor
sub
aam
push
mov
mov
mov
mov
sbb
mov
ds
jg
add
xchg
roll
pop
mov
jp
or
jmp
add
mov
mov
leave
test
movsb
shl
xchg
pop
xchg
aaa
and
pushf
or
sub
fld1
dec
pmulhw
xor
fs
addl
pop
adc
pop
dec
das
jno
lock
mov
pop
andb
fmuls
xchg
mov
add
jle
jge
or
and
leave
sbb
test
adc
cmp
xchg
ja
mov
jb
int
enter
or
addr16
mov
popf
enter
test
inc
sub
es
ror
and
filds
popl
jo
mov
jne
mov
adc
fs
test
sub
adc
adc
dec
lahf
ret
cmp
xchg
pop
iret
out
fucomip
adc
pusha
and
stc
int
inc
shlb
cmpsl
test
out
je
clc
jmp
mov
mov
pop
in
popf
xchg
push
cli
test
adc
xor
lret
mov
xor
decb
dec
je
mov
dec
pop
iret
cs
sub
out
mov
sbb
stc
jno
inc
pushf
dec
fcompl
call
sub
inc
aas
xchg
lods
cmp
fwait
add
shlb
stc
push
rcl
or
rep
ret
pop
pop
sub
push
mov
jge
repnz
mov
add
out
cli
xchg
repnz
repnz
xorl
pop
sti
pop
inc
stc
or
mov
mov
cltd
and
test
cltd
lret
push
mov
mov
mov
add
mov
lret
push
rorl
mov
mov
cmp
dec
cmp
fbstp
popa
mov
sub
mov
cwtl
imul
cmpsb
xor
pop
or
testl
pop
frstor
push
test
and
inc
or
mov
mov
or
adc
jnp
and
test
xor
mov
inc
aaa
push
jns
addr16
test
push
dec
stc
pop
stc
adc
push
imul
arpl
push
cmc
and
mov
mov
rclb
aad
addr16
sbb
cld
lret
imul
aad
and
sti
inc
stos
sahf
lret
or
sbb
cmpsb
mov
pop
hlt
cmpsl
cmp
cli
loop
sub
jne
mov
mov
or
pop
mov
mov
lea
cwtl
imulb
lea
mov
cltd
cltd
jo
dec
pop
inc
std
pop
dec
jmp
push
lret
sub
inc
and
xchg
js
xor
dec
mov
and
fidivrl
add
mov
shlb
imul
pop
lcall
mov
cmc
fsubs
mov
xchg
or
and
sub
test
mov
or
jne
movsl
jge
push
add
pop
xchg
iret
icebp
pop
sub
lcall
or
or
pop
loop
pushl
mov
xchg
pop
stos
sbb
gs
sti
mov
inc
outsl
adc
sbb
xor
mov
addl
ljmp
dec
pop
fildll
and
mov
push
pop
lret
push
bound
push
cmp
in
loop
movb
sti
repz
sti
cwtl
mov
xchg
repnz
movsl
or
das
mov
push
das
gs
pop
pop
out
lock
pop
dec
call
cwtl
sub
add
mov
out
leave
sub
shlb
mov
das
or
mov
arpl
mull
adc
jmp
inc
pushf
and
mov
popf
movsb
test
rolb
add
push
incl
pop
jl
and
push
xor
loop
iret
sbb
adc
testl
lcall
das
dec
xchg
out
call
ljmp
sub
push
mov
popa
sub
push
mov
adc
jl
rolb
nop
insl
loope
cld
out
dec
scas
mov
lods
pop
les
jae
cmp
xchg
int
jmp
cwtl
mov
test
ret
lds
sbb
xor
mov
mov
aam
idiv
popf
dec
mov
div
cltd
movsl
ljmp
insl
insl
pop
adcb
mov
or
cmp
add
stos
xchg
jp
sub
jno
addr16
and
fcomip
xor
and
sub
and
sbb
add
addl
mov
fdivs
xorl
mov
rolb
imul
repnz
sbb
fistl
repz
mov
push
cld
and
clc
insl
mov
push
sar
shlb
lret
push
jle
and
push
lea
and
adc
call
pop
adc
mov
je
pop
cmp
jmp
jle
sbb
inc
push
pop
shll
loop
mov
push
vmread
lret
push
inc
mov
std
mov
cmp
test
mov
mov
inc
pushf
lods
xchg
mov
pop
or
out
dec
cmp
jg
shrb
test
fwait
es
sbb
and
xchg
lds
ret
add
fsubrl
push
pop
xchg
pop
or
or
ffreep
stos
mov
aam
insl
xor
into
push
pusha
scas
cmpsb
lahf
or
test
fmul
cwtl
ljmp
sub
push
push
or
dec
fstpt
data16
int3
mov
ss
scas
outsb
jb
push
test
pop
pop
pushf
jle
mov
mov
jmp
in
adc
cli
or
mov
sub
andb
loop
or
and
push
mov
lods
cmp
mov
ja
mov
das
sti
cmp
xor
mov
mov
int
jp
inc
pop
ja
xchg
mov
xchg
cmp
lret
ret
andb
stos
sti
stos
xchg
addr16
dec
fcompl
pop
sbb
or
pushf
ret
jle
mov
fcmovbe
lods
enter
insb
jae
push
mov
sub
mov
pop
rorb
mov
sbb
and
mov
ret
jb
ret
rcll
imul
inc
lret
pop
dec
aas
cltd
jecxz
int
addr16
push
jmp
lret
push
stc
gs
sbb
sarb
xchg
mov
push
data16
inc
inc
inc
pop
mov
push
xor
add
xchg
add
cmp
sti
lret
test
xor
dec
xchg
sub
xchg
fimuls
scas
rorb
lods
dec
xchg
cmp
push
pop
jle
stos
insb
inc
inc
push
aad
inc
jmp
xchg
and
jns
test
xor
mov
inc
lret
int3
out
dec
jg
inc
push
xchg
mov
or
pop
insl
mov
pop
mov
mov
pop
xchg
dec
dec
or
outsb
loop
fsubrs
jnp
iret
xlat
mov
jno
cmpsl
loope
daa
push
push
mov
mov
xor
test
fdivs
mov
xchg
adc
fidivs
push
dec
cs
dec
cmp
and
xchg
inc
stc
lahf
dec
push
fstps
popl
jle
and
fimull
cmpb
xchg
in
popl
mov
call
sahf
push
out
jns
sbb
test
in
mov
or
scas
adc
std
cmpsb
mov
in
fs
test
loop
loope
jecxz
xlat
rorl
rorl
or
lahf
xor
mov
divl
cli
jne
mov
or
xchg
or
rclb
jns
mov
loop
xor
aas
fdivp
andl
pop
movsb
cld
imul
je
mov
push
mov
pop
xchg
jnp
cmp
insb
and
shr
adc
je
insb
xor
add
mov
xor
ss
rorb
pop
push
push
lret
push
je
jle
adc
std
outsb
mov
cs
shrd
xor
enter
ret
shl
into
fcoms
loop
mov
leave
dec
push
lret
gs
repz
nop
insb
test
jge
mov
hlt
enter
lahf
xchg
push
sahf
lcall
scas
push
sar
orl
je
into
xchg
adc
stos
adc
and
out
cmp
divb
roll
repnz
mov
push
cmp
dec
aas
or
pop
adc
roll
repz
mov
cs
adc
shll
lret
pop
dec
adc
rcrl
and
dec
pop
push
les
mov
addl
les
inc
adc
addl
aad
xchg
or
mov
jo
or
mov
inc
push
loope
hlt
sahf
inc
fsubl
clc
push
lahf
mov
mov
add
jb
cmpsl
out
ds
pop
pop
inc
daa
cmc
dec
adc
mov
inc
cmc
cmpsb
scas
mov
gs
xchg
xchg
mov
in
mov
cmpsl
sarb
or
shr
int3
xchg
add
into
add
dec
je
ret
cld
pop
adc
in
into
fldcw
pop
push
gs
mov
movsl
push
insl
leave
and
lcall
dec
loope
xor
rcr
subb
mov
and
mov
je
dec
jae
mov
and
movsb
sub
add
jle
mov
scas
xor
dec
jnp
add
das
mov
push
push
int3
pusha
jne
popa
add
lock
in
mov
les
xor
xorl
out
pusha
sbb
push
or
inc
int3
scas
push
data16
jo
push
push
mov
and
xor
aaa
mov
cmpxchg
fisubl
movsl
jge
adc
outsb
dec
adc
mov
mov
push
aad
cmp
jnp
insb
sbb
mov
xor
adc
bswap
add
pushf
movsb
dec
dec
push
pop
pop
jmp
cld
dec
rcl
inc
lds
pushw
push
int
ljmp
mov
cld
push
shrl
sub
lods
and
loope
mov
jno
lods
ds
outsl
inc
mov
lods
mov
fdivrs
dec
inc
fildll
pop
mov
negb
enter
js
push
insl
mov
pop
or
insb
add
push
mov
jb
das
jl
jns
inc
es
sbb
in
push
mov
stos
sarl
or
xlat
mov
jp
fwait
jnp
cli
out
ja
scas
mull
sub
xlat
xor
mov
jmp
je
inc
mov
xchg
clc
xchg
or
push
outsb
aam
rclb
clc
adc
in
push
sbb
sbb
mov
sub
adc
je
loop
dec
or
rcll
daa
pop
xlat
and
cld
es
ljmp
jne
fsts
subb
imul
push
in
or
adc
xchg
and
int3
cmp
cmp
dec
sub
xor
in
sub
push
je
mov
roll
pusha
into
cwtl
loope
add
stos
into
mov
cmp
scas
mov
lret
dec
adc
adc
push
add
inc
or
popa
push
or
sub
rcr
enter
mov
lahf
mov
sub
sti
mov
nop
insl
mov
push
loopne
jp
jecxz
in
arpl
mov
jbe
imulb
mov
add
cmp
fcompl
mov
adc
cmp
dec
movsl
adc
loope
push
adc
cmp
clc
mov
or
push
add
push
sbb
and
xlat
or
lcall
psubsw
sbb
xchg
cmove
inc
daa
xchg
shlb
mov
bound
xchg
pop
or
std
and
push
mov
dec
outsb
xlat
mov
in
and
fstpl
push
mov
xor
xchg
mov
add
fnstenv
sbb
repnz
cld
data16
daa
imull
mov
pop
test
adc
mov
outsb
xor
cmp
orb
xor
jbe
clc
outsl
xchg
xor
dec
enter
dec
pop
cwtl
jg
adc
into
sub
and
sti
es
mov
xorl
sbb
cmc
hlt
stos
in
mov
mov
dec
mov
adc
and
cltd
adc
pop
mov
or
out
std
inc
cld
test
dec
lcall
xlat
mov
xor
cmc
xor
repz
negb
addr16
repnz
aas
fdivr
addl
pop
pop
imul
dec
xchg
jno
xor
xor
push
int
lods
mov
mov
pop
pop
mov
test
push
cmp
push
xchg
sbbb
test
push
dec
xchg
addl
loop
lcall
sub
dec
mov
push
lret
shrl
jp
je
mov
sbb
push
sbb
lock
std
mov
pop
inc
mov
test
pop
lahf
mov
xor
dec
pop
sub
mov
xor
pop
inc
cld
mov
lods
in
pop
dec
jo
mov
rorl
outsl
mov
mov
lods
add
out
adc
push
dec
and
ja
imul
call
rol
hlt
add
adc
lret
push
push
push
aam
and
rorb
adc
loope
cld
jge
arpl
leave
lcall
sti
es
inc
pop
iret
jg
nop
jbe
dec
mov
xor
icebp
in
inc
pop
mov
iret
mov
lods
mov
ficoml
cmp
inc
xor
mov
dec
xchg
jl
xor
stos
jne
sub
lahf
sub
mov
xlat
repz
je
xor
in
rorb
pop
xlat
inc
cmp
addl
mov
int
push
adc
aam
sbb
das
inc
push
push
xchg
loop
dec
adc
pop
mov
add
and
jecxz
mov
adc
cld
pop
add
imul
test
push
push
out
sub
pusha
arpl
mov
inc
xor
pop
lret
shlb
push
ficoml
pop
push
enter
jmp
mov
shl
pop
imul
or
aam
pop
mov
sbb
and
out
rcl
dec
inc
push
and
aas
jmp
cmpsb
cmpsl
xor
sub
cmp
repnz
adc
jg
movsl
sbb
and
jb
pushf
mov
xor
iret
push
hlt
nop
pop
xchg
cs
cmp
jns
mov
jmp
icebp
inc
xchg
mov
mov
cmpsb
or
jecxz
mov
addr16
jb
sbb
std
mov
cmp
lods
push
imul
aam
push
cmp
push
push
dec
int3
fstl
cmp
imul
in
add
inc
pop
jo
pop
enter
push
xchg
hlt
pop
aad
ds
mov
mov
inc
fnsave
ss
mov
divl
or
push
push
xchg
outsb
push
mov
aad
sub
divb
or
lock
test
sbb
pusha
aas
push
xor
cmc
adc
out
inc
mov
mov
inc
cmc
sub
lea
shlb
jge
cmp
mov
and
and
das
gs
jnp
jecxz
js
mov
sbbb
loope
and
mov
mov
cli
inc
jp
test
lods
jae
cmp
lods
leave
movsl
rorl
cmp
or
mov
cli
sbb
jo
add
xor
push
dec
dec
bound
fbld
das
cmp
push
or
test
fwait
std
push
add
popa
cmpsb
mov
mov
rorl
std
aas
add
adc
mov
mov
rep
sbb
mov
gs
sbb
das
mov
lods
incl
lret
rcrb
xchg
movsb
xchg
out
lcall
fwait
push
mov
pushf
or
or
repz
xchg
push
mov
cmpsb
and
aaa
pop
cli
fldl
filds
imul
sbb
or
dec
sbbb
inc
xor
jae
filds
aad
js
cwtl
call
jp
add
inc
gs
test
mov
out
js
and
js
fldcw
out
xchg
xor
bound
or
xchg
lds
mov
out
cmc
mov
mov
sub
ja
cltd
dec
cwtl
add
cmpsl
xor
jbe
bnd
movsb
daa
sub
test
push
inc
pop
pop
pop
cmp
push
das
push
mov
sti
out
arpl
dec
pop
xchg
in
sbb
xchg
fcompl
loope
setae
pop
pop
jle
or
rol
xor
je
mov
push
jmp
mov
sbb
add
insb
movsl
gs
cltd
hlt
xchg
aad
push
stc
lahf
insb
jb
fisubl
jecxz
arpl
repnz
lds
lods
xor
loope
aad
push
mov
in
add
gs
jns
mov
dec
inc
ljmp
iret
stos
ret
insb
xchg
push
sub
cvttps2pi
or
adc
loope
aad
pop
xchg
mov
mov
or
mov
mov
push
jle
cmp
cld
ret
inc
js
pop
pop
es
lahf
vsqrtss
nop
push
mov
jg
ret
das
lea
scas
popa
ret
adc
mov
sub
orb
jb
dec
js
addr16
jle
dec
fwait
leave
pusha
andb
fdivs
fdivrs
sti
stc
fs
stos
inc
or
xor
inc
jbe
sbb
mov
shll
pop
jmp
push
fimuls
je
or
mov
xor
jg
push
lahf
push
push
or
jle
sub
jg
icebp
lret
addr16
jp
or
leave
xchg
dec
lock
mov
std
fwait
xchg
xchg
out
call
mov
pop
jge
ljmp
fists
add
xor
ss
inc
push
movsl
mov
inc
ja
jo
push
cmp
pop
push
loopne
xor
cmpsb
les
not
loope
ja
adc
cmp
push
mov
push
or
das
mov
add
and
pop
loope
xchg
jb
call
push
repz
push
xor
push
mov
mov
in
sbb
std
xor
sbb
out
push
push
xchg
loope
mov
adc
mov
repz
movsb
mov
mov
cmp
dec
xchg
aam
sahf
add
and
stos
cli
lea
xor
jle
nop
pop
sub
sbbl
aam
ds
xlat
mov
mov
sbb
mov
cld
jmp
popf
mov
aas
test
mov
mov
or
test
jo
jo
jo
xchg
or
push
mov
add
cmp
shr
mov
inc
xchg
xor
mov
inc
loope
jb
jmp
movsl
adc
adc
iret
jbe
nop
fcomi
adc
cmpsl
decb
clc
or
pop
and
sub
shll
mov
std
sbb
adc
sub
enter
pop
and
mov
dec
mov
push
fwait
mov
mov
test
jg
fs
mov
inc
imul
mov
ja
dec
dec
and
insb
adc
loopne
daa
dec
fisubs
cld
lahf
mov
ja
sahf
in
add
stc
or
stc
xchg
lcall
and
cmp
add
pop
xor
or
mov
test
ds
std
loopne
and
sarl
into
pop
push
and
repnz
push
hlt
test
loopne
test
outsl
in
sbb
xchg
inc
lods
fmulp
lcall
aas
sub
add
push
fsubl
gs
int3
icebp
xor
aas
int3
mov
push
jecxz
sbb
cmp
cmp
mov
fwait
stos
mov
inc
mov
xchg
and
rcll
jbe
and
pop
cmp
pop
test
lods
rorw
icebp
cmp
divb
outsl
dec
cld
pop
test
arpl
aaa
clc
shll
push
pop
ret
fstl
xrelease
inc
inc
pushf
adc
push
jns
xorb
lds
push
jle
add
insl
dec
add
push
out
out
int
std
shll
push
sub
xor
lods
jnp
loopne
aam
imull
cmp
fs
inc
sbb
pop
adc
add
fistpl
jo
stos
imul
jle
lock
add
xchg
aas
shlb
test
inc
dec
or
in
movsb
adc
mov
lcall
xchg
add
and
or
and
cmpb
and
out
inc
sub
pusha
jmp
inc
mov
mov
pop
mov
aad
call
test
aas
mov
ljmp
add
stc
xchg
push
jl
inc
or
xor
adc
xchg
iret
mov
js
scas
in
or
ficoml
mov
in
cs
add
ljmp
int
ja
scas
aas
les
jge
sbb
in
sub
out
jb
orl
adc
cmc
pop
jo
fucomip
xchg
movsl
bound
mov
and
in
xchg
add
fistpl
pop
filds
imul
xchg
test
jmp
and
iret
js
add
stc
push
clc
lahf
ds
or
add
lcall
pop
sbb
mov
add
add
outsl
gs
and
mov
fcomps
outsl
mov
je
mov
cli
movl
repz
hlt
add
je
movb
in
stos
aas
jp
cmp
push
push
lea
aas
xchg
cmp
push
mov
adc
jle
andb
lds
push
loopne
jmp
xorb
dec
rcrb
xor
aad
fisttpl
dec
stos
int
call
into
test
xchg
or
repz
mov
ret
mov
jmp
lcall
lods
mov
in
add
rcrl
cmpsl
and
xor
and
out
bound
inc
dec
pop
mov
bound
sbb
mov
or
out
mov
sbb
shll
inc
jge
out
push
cmp
loop
fstl
sub
cwtl
mov
inc
jle
mov
je
lods
jp
out
mov
bound
mov
dec
sahf
icebp
lods
xchg
sbbb
inc
fisttps
sahf
pop
sti
mov
jp
fistpl
cmp
out
push
enter
push
or
xor
aad
push
adc
mov
imul
cs
leave
decl
jb
insl
sbb
xchg
adc
idivl
mov
lahf
mov
in
and
push
xchg
js
mov
sub
mov
pop
aas
pop
das
adcl
lea
aas
push
sbb
addr16
mov
push
jnp
pop
stos
idiv
loopne
dec
cs
mov
dec
mov
add
jae
jmp
xchg
add
out
lahf
push
cmp
rclb
call
lods
and
inc
adc
mov
rclb
dec
dec
cmp
inc
jl
pop
mov
jmp
aaa
jp
mov
fisubrs
pop
sub
hlt
es
and
arpl
pop
dec
test
cli
mov
adc
pop
iret
repz
in
mov
xorb
cmp
mov
adc
ret
mov
loope
repnz
lcall
in
xchg
roll
jl
adc
arpl
mov
sbbb
sti
cmp
xchg
mov
pushf
push
add
xchg
mov
pop
pop
xor
inc
testl
ret
push
add
lds
clc
inc
lea
scas
fcmovne
mov
insb
xchg
ds
jg
cmc
addl
into
test
xchg
pushf
out
jns
clc
add
lahf
dec
fs
pop
mov
jge
fs
push
sbb
int
inc
mov
dec
dec
mov
push
jge
or
outsl
ljmp
mov
into
subl
mov
les
in
sub
push
rolb
fldl
cmp
imul
sbb
das
inc
cs
je
mov
fld
and
leave
and
dec
sbb
sbb
loope
pop
sub
and
push
insl
iret
rcrb
jle
lods
andl
add
dec
xchg
or
popf
mov
movsl
inc
sub
adc
sub
mov
jo
fmull
push
cmpb
push
icebp
aas
iret
mov
lds
dec
adc
out
test
jb
pop
arpl
mov
or
mov
je
pop
sbb
enter
mov
lds
inc
and
mov
arpl
sti
inc
loop
dec
xchg
add
xor
ja
xor
pop
cld
aaa
js
jecxz
and
sub
pop
adc
mov
cmp
cmpsb
add
cld
add
addr16
ss
icebp
cltd
test
movsb
fnsave
xor
popl
addr16
sbb
movsb
jno
dec
jno
loop
test
dec
fisttpll
ds
and
ja
pop
loop
in
inc
arpl
add
pop
lods
push
mov
xchg
test
movsl
mov
adcb
das
xchg
mov
sub
inc
mov
test
jp
rcrl
sub
lds
xchg
icebp
stc
int
call
out
fistps
addr16
mov
xchg
sbb
jl
and
les
or
mov
cwtl
cmp
cli
push
iret
and
test
and
cltd
mov
mull
test
test
dec
int
das
aaa
or
or
les
outsl
fdivr
xchg
inc
mov
mov
movsb
stos
popf
outsb
mov
xor
pop
and
in
mov
call
mov
jo
sub
lds
shlb
adc
in
mov
pop
and
mov
jns
xor
adc
xchg
in
cmp
dec
pop
cmp
stc
pop
xlat
addl
or
push
out
jmp
add
sbb
stc
sub
jb
mov
add
push
lea
push
fcmovb
xor
inc
push
push
or
fildll
push
jl
sbb
and
jle
fldcw
jbe
test
mov
mov
lock
mov
fstl
dec
or
stc
or
adc
sbb
cltd
icebp
cmpsl
xor
dec
int3
or
inc
loopne
stos
or
mov
in
xor
push
push
inc
vpunpcklqdq
push
pop
clc
xchg
xchg
cmove
sti
or
pop
hlt
nop
dec
adc
ljmp
mov
es
insl
leave
fs
cmp
ret
orb
insl
dec
pop
insb
test
inc
pop
dec
xor
jmp
push
sub
jge
rcl
push
jmp
sub
mov
pop
mov
pop
mov
add
sarl
push
fcomip
imul
lea
inc
imull
dec
sub
daa
jge
test
cmp
loop
cld
sahf
popf
pop
sbb
ss
pop
repnz
jno
mov
add
rep
mov
test
sub
rol
add
or
aam
test
daa
ret
or
push
xor
test
mov
js
pop
rol
stos
jno
mov
mov
js
push
adc
adc
int3
adc
clc
and
adc
or
mov
xchg
ret
dec
pop
aam
xchg
leave
aad
dec
mov
xor
push
mov
mov
data16
in
cmp
jno
dec
cmpb
adcb
push
pop
mov
xor
xchg
fisttps
sbb
push
sti
lret
movsb
lret
jg
mov
push
push
push
dec
pop
mov
lret
lods
ja
dec
jns
jno
scas
sbb
mov
daa
fidivrl
loopne
inc
cmp
movsl
xchg
dec
cmp
sub
cmp
enter
xchg
mov
sub
mov
adc
movsb
cli
fs
pop
push
adc
stos
fdivl
out
sbb
push
popa
cmc
jl
jne
iret
aam
or
sbb
adc
inc
jl
adc
cmp
jb
stos
and
shl
push
stos
jl
adc
pop
sbb
jp
in
pop
dec
sbb
stc
inc
js
ret
das
insl
les
ljmp
pop
jp
shlb
ret
sub
sbb
xchg
hlt
xchg
ret
sub
pop
gs
aad
jmp
jo
pop
mov
mov
hlt
loopne
int3
and
inc
sbb
cmp
cmp
aad
mov
aam
stos
jg
cmp
call
adc
out
jo
loop
xchg
inc
js
sub
inc
mov
adc
je
mov
push
stc
push
dec
add
ficoms
ret
imul
lds
fidivrl
andl
es
adc
pop
subb
inc
sub
mov
lret
rol
mov
pop
loop
loopne
push
mov
fcomip
xor
sub
aas
xchg
pop
imul
dec
divb
popf
xlat
pop
shl
repnz
xchg
js
push
xchg
gs
int3
pop
filds
cmpsl
movsl
mov
test
or
mov
clc
mov
in
or
mov
cwtl
imul
out
push
scas
fmul
push
outsl
rcr
mov
sbb
add
and
insl
cltd
out
mov
mov
xor
xor
jo
xchg
or
xchg
fs
orb
cmc
add
test
sub
xor
jne
sbb
add
inc
add
or
xchg
stos
mov
inc
sub
cs
dec
mov
pushf
mov
lods
stos
sbbl
dec
fdiv
repnz
xchg
xchg
and
jb
xchg
data16
cmp
rorb
push
xchg
shl
or
cmp
div
cmp
aam
int
bound
loopne
mov
gs
dec
int
ret
outsb
aas
repz
push
popa
nop
or
adc
xchg
shll
or
adc
inc
mov
fstpt
in
cltd
pop
mov
xchg
sub
mov
jns
std
lea
mov
cs
imul
jae
mov
inc
lcall
inc
repnz
jo
cltd
repz
inc
mov
jl
inc
add
in
xor
mov
imul
stc
or
mov
mov
dec
aad
outsl
fs
jle
stos
adc
gs
push
push
xchg
cmp
int
mov
or
int3
mov
shl
xor
xchg
aad
or
stc
ret
sub
cmp
imul
outsb
jne
jns
in
adc
sub
xor
out
fistl
fcmovnb
and
push
fnstenv
mov
cmp
mov
imul
jp
fcompl
iret
push
sahf
in
jl
dec
orl
imul
ret
jbe
insb
xchg
fisubl
loopne
push
jp
mov
ficoml
jbe
xor
mov
fistps
jmp
add
pushf
test
loopne
daa
es
push
mov
mov
flds
cmp
rol
xor
xchg
push
das
or
mov
push
lea
lods
out
push
pop
jmp
cmp
out
les
pop
rorl
mov
add
call
mov
mov
dec
fwait
stc
push
pop
push
bound
stc
pop
and
repnz
adc
rorb
in
sbb
roll
lret
fmuls
push
cwtl
mov
jecxz
inc
iret
and
fcomp
das
daa
addl
lea
and
mov
prefetchwt1
aam
orb
pop
sarb
jo
std
addr16
jne
cmpsb
rcll
mov
shl
fdivrs
stos
andl
mov
mov
ret
and
pop
aad
push
mov
sub
cld
inc
lds
sub
push
adcb
add
out
sar
rcrl
cmc
fscale
push
xchg
notb
jle
pmaxub
mov
fidivrs
cmp
push
ja
xchg
iret
das
xchg
mov
loop
jae
push
mov
aad
sub
mov
push
data16
pop
adc
mov
pop
dec
loopne
outsb
dec
mov
rolb
sarl
add
and
aaa
ljmp
cltd
mov
push
fnstenv
subl
sti
mov
ja
mov
sub
pop
pop
jg
mov
mov
jb
sbb
cmpsb
imul
icebp
sti
dec
popf
pop
jl
mov
and
xchg
imull
mov
add
add
mov
repz
dec
inc
test
sub
xor
jbe,pn
hlt
fcomp
cli
pop
in
and
cmp
aas
ljmp
sub
mov
cmp
sub
adc
mov
mov
and
cmp
xchg
inc
cmp
popa
adc
mov
std
or
inc
imul
addr16
cmp
push
sub
adc
mov
mov
stc
xorl
movsl
dec
adcb
.byte
.byte
jecxz
cmpsl
mov
sbb
add
sbb
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
push
add
push
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
push
add
add
add
incl
add
add
pusha
push
add
add
add
incl
add
add
arpl
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
jl
add
add
add
incl
add
add
push
add
add
add
mov
incl
add
add
add
add
incl
add
add
xchg
push
add
add
add
incl
add
add
cwtl
push
add
add
add
incl
add
add
add
add
decl
add
push
add
add
add
mov
push
add
incl
add
add
add
add
incl
add
add
push
add
add
add
lcall
stos
push
add
stos
push
add
lcall
push
add
push
add
incl
add
add
mov
add
add
add
mov
add
mov
add
incl
add
add
add
incl
mov
add
cmp
cmpb
add
jmp
push
add
les
add
add
incl
add
add
les
add
add
incl
add
add
push
add
add
add
incl
add
add
enter
add
add
incl
add
add
enter
add
add
incl
add
add
add
add
incl
add
add
lret
push
add
add
add
sti
into
push
add
into
push
add
add
add
incl
push
add
push
add
inc
rcll
rcll
xor
adc
push
add
inc
push
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
push
add
add
add
incl
add
add
aad
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
fcoms
add
add
incl
add
add
fcoms
add
add
incl
add
add
fsts
add
add
incl
add
add
push
add
add
add
incl
add
add
fstl
add
add
incl
add
add
push
add
add
add
jmp
ficoms
ficoms
jmp
fists
in
fists
fists
incl
loopne
add
push
add
jmp
loopne
add
pushl
loopne
add
lcall
push
add
push
add
ljmp
push
add
push
add
incl
add
add
push
add
add
add
incl
add
add
out
add
add
add
incl
add
add
call
add
ljmp
ss
add
add
add
add
push
sbb
add
adc
add
sbb
add
adc
add
sbb
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
orl
dec
mov
inc
jle
stos
pusha
jl
pop
mov
sti
dec
outsb
push
push
cmp
iret
inc
shrb
lods
test
rolb
repz
mov
fcompl
sbb
cmpsb
movsl
dec
movsl
push
adc
mov
es
movb
fidivs
loope
jle
out
lock
xor
push
dec
test
pop
iret
jae
cltd
movsb
sbb
jns
insb
enter
mov
jmp
mov
cmp
and
ljmp
push
or
fs
mov
sti
sahf
cs
pop
sbb
imul
mov
add
push
imul
pop
mov
fistpll
xchg
mov
in
std
js
repnz
fsts
xchg
cmp
dec
fldt
fsubl
addb
cmc
xchg
inc
repnz
pushf
fcomi
pop
insl
jns
pop
xchg
fistpl
or
ret
pop
sub
imul
popf
jb
lret
fnsave
xchg
mov
sub
test
fwait
aad
rcll
jae
xlat
iret
pop
clc
and
movsb
cmp
pop
cmc
inc
and
inc
test
in
add
pop
movsl
mov
icebp
shr
lcall
and
push
jo
sbb
scas
iret
inc
ret
inc
mov
fistps
inc
test
xor
test
jb
xor
mov
mov
ljmp
aaa
adc
loopne
fsub
inc
das
cmpsb
mov
icebp
cmp
lahf
into
lret
iret
lds
cmpsb
dec
xor
lret
popf
andl
mov
iret
adc
add
fmulp
lret
ffree
popf
loop
out
rcrb
jo
jg
mov
jl
mov
pop
decl
lock
in
jmp
xchg
scas
test
test
mov
pusha
push
push
das
and
repnz
xlat
and
or
mov
in
dec
aam
and
mov
dec
repz
dec
push
cwtl
shr
lahf
loopne
movsl
lea
xor
sbb
and
rorl
cmc
fsubrl
aas
mov
movsl
xchg
lock
sbb
enter
jge
imul
push
stc
stos
jo
dec
inc
scas
or
pushf
or
cmp
sub
push
ret
das
push
sahf
xor
leave
call
adc
adc
mov
pushf
sti
pop
or
push
xor
mov
sbb
lods
push
lret
cmp
mov
sub
icebp
jl
scas
insl
inc
sbb
popf
pop
shlb
leave
lret
mov
mov
insl
call
icebp
push
pushf
mov
in
std
adc
or
aas
sub
shl
test
add
std
mov
mov
adc
mov
pop
mov
jge
mov
popa
mov
jge
call
repz
insb
dec
lock
inc
jl
lea
mov
inc
xchg
cmc
push
ret
jmp
jg
mov
cmp
fsub
jmp
arpl
pop
scas
mov
inc
nop
in
ret
in
out
cmp
jno
cmp
push
cld
xor
rol
fildl
pop
mov
sbbl
cs
push
inc
jge
push
xor
lahf
cmc
pop
cwtl
adc
add
mov
clc
jg
mull
int3
ja
aaa
cli
and
mov
pushf
ja
jnp
in
ja
pop
pop
pop
inc
fstps
mov
stos
movsb
out
in
ds
xor
leave
mov
into
pop
fsubl
cmp
mulb
data16
out
push
aas
cmp
std
sbb
xor
sti
cld
dec
add
mulb
std
outsb
jnp
pop
roll
mov
ja
xchg
xor
mov
cmp
inc
jne
popa
loopne
inc
dec
pop
and
test
loopne
and
add
pop
xchg
adc
push
push
stc
adc
push
mov
xlat
movsl
ror
xchg
mov
loopne
cwtl
xor
or
add
jge
cld
dec
aaa
or
test
leave
jmp
in
adc
cmp
fwait
hlt
shrb
sub
add
out
lods
daa
add
lds
sbb
push
lret
add
jl
movd
fldcw
adc
jmp
rcrl
scas
pop
dec
mov
push
sbb
dec
ja
ljmp
pop
sahf
inc
dec
mov
and
mov
cmp
shll
sub
adc
cmp
repz
jb
sub
cmp
pushf
fldl
lret
inc
mov
push
and
lods
mov
inc
cld
fdivs
dec
stos
pop
push
or
jnp
xchg
or
pop
lcall
movsl
std
xor
lods
adc
mov
std
or
push
shrl
mov
fnstsw
aad
lcall
xor
sbb
scas
add
test
fmull
adc
push
scas
push
arpl
mov
in
mov
cmp
rcrl
sub
cmp
adc
cmc
xchg
in
pop
loope
push
pop
imul
xchg
addr16
shl
adc
mov
dec
pushl
add
cmp
fiadds
push
xchg
mov
in
cli
fistps
xchg
das
sbb
cmc
mov
addr16
int
insb
add
dec
bound
pop
sub
mov
cmc
ja
cmp
out
add
push
jns
pusha
xchg
sub
pop
mov
lret
jae
push
gs
dec
fdivrl
dec
scas
pop
add
ret
movsl
xlat
fdivs
in
insb
rolb
out
xchg
hlt
pop
daa
push
mov
in
pop
inc
ds
sbb
ds
xchg
and
inc
out
ljmp
out
pop
cmpsb
insl
mov
dec
insb
fcmovu
mov
aas
icebp
imul
lret
jmp
fwait
scas
mov
imul
push
pushl
enter
push
shrb
gs
enter
add
into
cmp
lea
adc
adc
mov
cmp
ljmp
or
push
jb
rclb
lds
jmp
jl
int3
mull
mov
and
es
adc
push
dec
add
bnd
mov
cmp
cmp
jne
or
addb
fs
add
xchg
ffree
insb
fdivrs
lahf
jecxz
nop
pop
mov
and
pop
imul
or
mov
add
int3
cmp
cwtl
inc
jecxz
cs
adc
sahf
mov
shr
dec
gs
dec
lea
test
imull
insl
jo
int3
loope
mov
fldl
int
sbb
ja
dec
mov
add
push
push
inc
pop
ret
adc
loope
fcoml
adc
sub
stc
lret
cld
adc
pop
add
lahf
daa
sahf
test
out
mov
and
lock
andb
xor
movsl
cmp
xor
int3
mov
jne
jbe
js
pop
hlt
jae
pusha
in
push
sbb
or
push
jb
movsb
repnz
push
fwait
sub
adc
fstl
les
adc
scas
fldt
js
mov
jg
jl
jae
or
cmp
ret
test
cmp
adc
push
inc
stos
and
push
cmc
sbb
test
mov
inc
or
rcll
pop
sub
xor
push
jne
loop
xchg
inc
testb
std
pop
imul
enter
sbb
fsubl
rcrl
cmp
fidivl
bound
or
into
mov
imul
cmp
popa
dec
mov
xor
imul
push
jae
and
ss
sbb
lahf
or
insb
mov
sahf
sti
adc
pop
das
inc
popa
lds
leave
and
sub
jne
add
mov
or
shld
sub
pop
pop
pop
nop
mov
inc
sbb
lods
notb
push
inc
sub
push
xor
xor
inc
jae
stos
test
gs
and
adc
pop
rorb
lea
es
shll
test
mov
ss
sarb
fs
mov
pop
hlt
sub
inc
mov
gs
leave
or
repz
das
dec
stos
rcrb
daa
test
mov
adc
cmc
cwtl
movsl
and
and
add
and
sub
push
push
adc
mov
lods
popa
in
inc
inc
cltd
out
cmc
insb
xor
push
jno
ljmp
rorl
ljmp
pop
dec
lahf
sub
sbb
popf
fmuls
nop
cmpsb
das
add
or
js
mov
xor
xor
ds
cs
scas
mov
in
sbb
test
dec
jae
dec
fsin
push
ret
movsl
sti
sub
lods
mov
js
ds
lods
pop
sbb
int
scas
jbe
shll
movsb
mov
les
sbb
into
or
dec
mov
test
add
stos
int3
cmpsb
mov
test
push
popf
mov
add
jecxz
ficomps
mov
or
ds
ds
push
xchg
xchg
stos
call
sbb
int
or
mov
dec
xor
das
negl
fdivrl
cmpsl
fwait
sub
pop
fnsave
or
stc
push
jns
jecxz
add
sbb
xlat
xchg
dec
fldt
xor
xor
sub
cmp
mov
mov
rcr
popa
dec
aad
cmp
jno
jbe
testl
dec
mov
xchg
mov
out
jge
mov
mov
xchg
push
test
push
mov
lret
mov
iret
mov
cli
mov
sbb
mov
xchg
fs
xchg
jae
in
imul
add
mov
dec
mov
shlb
fildll
or
and
aas
jns
add
xor
outsb
fs
mov
cmp
cltd
insb
cmp
xorl
jo
mov
mov
lds
rcl
mov
lret
push
dec
push
bound
in
in
mov
xchg
movl
cmp
out
inc
cmp
fnsave
sarb
or
sbb
stos
mov
rcll
pop
mov
mov
sti
mov
daa
push
push
inc
fsubl
das
and
mov
setae
mov
mov
jnp
bnd
and
jmp
stos
xor
cs
xchg
add
incb
in
jecxz
nop
negb
mov
out
and
enter
push
data16
jo
cld
mov
movsl
rolb
aaa
inc
sbb
scas
je
loop
inc
fstl
sub
mov
loopne
dec
shl
inc
test
jae
lahf
js
and
or
stos
cs
lds
ja
sbbl
or
pop
cmp
ljmp
xchg
repz
and
xchg
adc
lahf
mov
mov
pop
jp
movsl
dec
and
dec
cli
testl
jge
adc
inc
hlt
xchg
ret
mov
mov
sbb
and
fs
jns
and
sub
fnstcw
movsb
inc
jle
xchg
mov
decl
push
sahf
fsub
icebp
nop
add
loope
movsb
iret
xor
and
push
adc
es
pop
ss
stos
ret
mov
adc
hlt
int
mov
or
scas
sub
insb
adc
sbb
outsb
inc
cmp
or
pop
cmpsb
divl
xor
cmp
push
lahf
xor
imul
pushf
sbb
hlt
sub
xchg
outsl
xchg
adc
repnz
xor
adc
jbe
and
xchg
and
xchg
lret
rcll
leave
add
xchg
jmp
inc
ljmp
push
clc
rorl
push
mov
push
rol
idiv
imul
testl
divl
imul
pop
jle
mov
xchg
jge
inc
les
push
push
mov
and
xor
xchg
add
inc
xor
adc
add
jge
push
push
test
js
jg
jbe
cld
cltd
lret
ffreep
scas
ror
mov
popa
jb
sub
aam
shrl
ret
movsl
and
push
add
scas
sub
sbb
shl
out
adc
xor
pop
clc
or
sahf
cltd
dec
fidivl
test
sbb
scas
jb
mov
pop
scas
out
adc
pop
jmp
cmc
adc
rclb
pop
loop
or
pushf
in
sbb
mov
jo
fstps
push
xchg
aam
out
push
push
mov
dec
and
rorb
roll
aaa
aam
iret
out
mov
rol
push
je
mov
xchg
push
loop
jno
cmpsl
gs
aad
es
xor
sub
call
mov
mov
lock
jecxz
mov
pop
push
inc
jmp
mov
xor
sub
icebp
jb
mov
ss
cmp
shrd
into
loopne
adc
fs
xor
lret
aaa
jo
xlat
insb
pop
pusha
and
mov
sahf
adc
mov
sub
mov
test
movl
sub
lods
adc
dec
mov
add
leave
mov
and
xchg
dec
in
rcrl
add
call
mov
inc
fs
mov
iret
cltd
jns
cmp
sub
lret
sahf
loop
filds
in
fisttpll
and
dec
shrl
lahf
mov
cmp
psubw
ja
adc
out
stos
not
push
in
jecxz
cmp
test
shll
adc
in
test
mov
imul
out
out
mov
cmc
inc
inc
scas
jnp
pop
adc
fstpl
cld
push
outsb
in
inc
test
push
pop
ljmp
call
aaa
dec
mov
outsb
in
pop
sti
scas
or
mov
repnz
popf
dec
lods
mov
mov
xor
outsl
fnstenv
in
push
roll
jecxz
push
dec
push
jae
sub
inc
pop
rcrl
mov
push
cwtl
bound
cmc
sbb
in
mov
adc
std
add
stos
test
jg
hlt
sub
dec
je
mov
gs
insl
lods
scas
fidivs
loopne
neg
sbb
pop
scas
mov
mov
jo
lahf
xchg
add
pop
into
out
sbb
inc
mov
aas
mov
cld
ds
xor
xchg
and
sub
mov
loopne
sub
enter
rol
push
push
pop
out
add
xor
sub
dec
add
iret
ja
out
pop
mov
rcll
push
in
dec
das
pop
bnd
xlat
sbbb
in
lahf
lods
pop
cmp
or
sbb
pop
cmp
pop
push
push
fcoms
mov
repnz
push
ljmp
jge
jge
dec
dec
sbb
fldcw
and
push
lcall
mov
jmp
add
mov
pop
jb
push
dec
addl
xor
mov
jno
xchg
push
out
push
aaa
mov
cmp
fisttpll
gs
or
ficomps
popa
repnz
das
loope
scas
mov
add
lds
popf
mov
push
int3
rcl
sahf
shlb
inc
ljmp
sarb
sbb
cmc
leave
xlat
daa
fidivl
aad
and
movsb
icebp
inc
inc
inc
add
fldenv
push
lahf
addr16
xor
sbb
mov
in
xchg
xor
mov
cmp
jecxz
std
aad
push
jl
mov
adc
pop
stos
push
ficoml
ss
mov
inc
xor
ss
add
sub
cmp
daa
push
fists
push
incl
push
cmp
ds
dec
adc
cmp
pushf
or
lods
xor
inc
jp
or
stos
xor
jecxz
xchg
adcl
je
adc
das
rolb
cwtl
add
adc
lret
pop
repnz
jmp
mov
stc
gs
out
pop
aaa
fstpt
mov
jbe
icebp
add
sub
movsb
js
dec
dec
out
mov
cmp
cmp
out
test
insl
loop
ljmp
les
mov
cs
lock
in
add
or
sub
dec
jg
dec
inc
ljmp
adc
pop
mov
xorb
mov
push
and
cltd
jmp
iret
in
loop
popf
insb
dec
adc
int
jne
pop
fs
ror
xor
iret
scas
jbe
cli
lret
movsl
testb
bound
ja
mov
sbb
push
loop
inc
stos
push
lea
das
xchg
in
xchg
jns
test
imul
xor
imul
lret
add
insl
ja
dec
push
push
jg
mov
xchg
mov
jns
xchg
ret
and
hlt
ja
add
jecxz
xchg
dec
and
int3
add
add
cwtl
sub
scas
aam
and
dec
jl
sahf
or
push
mov
addps
add
sub
js
sbb
popa
mov
mov
std
pop
pusha
fadds
jmp
xchg
sbb
jmp
pushf
cltd
fucom
push
or
adc
leave
mov
push
into
dec
call
mov
in
xchg
sub
test
call
push
stos
cmp
push
pop
jmp
mov
test
insb
fwait
mov
je
fistps
jnp
sbb
push
dec
push
out
jle
incb
dec
ficoml
mov
jne
mov
pop
in
pop
std
pop
ds
adc
adc
int3
push
push
inc
fs
int
iret
ficoml
jnp
es
insb
in
push
add
jg
dec
jb
imul
push
rcrl
out
cwtl
lods
iret
add
push
cmc
test
mov
ret
dec
mov
lahf
std
cmp
cmp
clc
jle
test
jbe
or
scas
je
fsubs
pop
cmp
aas
xchg
test
dec
fucomp
je
shll
adc
xchg
mov
pop
dec
pop
cmp
in
scas
mov
nop
subb
pop
sar
mov
mov
dec
add
adc
pop
loop
repz
pop
mov
dec
movsl
scas
inc
pop
lcall
movl
push
dec
jl
mov
fiaddl
frstor
inc
mov
mov
cltd
iret
mov
or
dec
adcl
mov
mov
inc
sub
test
jmp
ja
lods
jmp
mov
lds
jo
mov
xlat
or
mov
cli
lcall
out
aaa
push
mov
jle
shlb
cmp
arpl
push
lret
nop
flds
xchg
inc
jge
pusha
xor
sbb
shlb
roll
les
adc
cmp
push
das
cmp
add
in
jbe
negl
push
mov
mov
jle,pt
mov
sti
aaa
xor
xorl
cmc
in
mov
shl
adc
dec
jae
mov
rcr
fnstcw
adc
cmp
sbb
mov
cmp
call
outsb
sub
push
add
addb
insl
mov
dec
fildl
mov
dec
adc
ja
faddp
push
mov
div
mov
nop
mov
icebp
fisubl
jbe
pop
sahf
jno
and
pusha
mov
ret
push
outsb
hlt
mov
cmpsl
sti
test
push
pop
bound
test
jp
xor
loop
pushf
or
dec
jns
and
mov
push
push
sub
add
inc
pop
call
push
cltd
sub
subb
movsl
inc
icebp
xchg
in
pop
lcall
dec
outsb
xchg
in
fs
cmpl
sbbl
cmp
pop
hlt
outsl
xchg
pop
sub
cmp
mov
leave
push
mov
je
or
in
rolb
scas
nop
outsl
pusha
sbb
insl
xlat
mov
pop
xchg
adc
xlat
test
add
or
mov
aas
sub
mov
inc
or
xchg
mull
outsl
mov
les
filds
sbb
add
ljmp
mov
es
pop
insb
dec
or
or
loopne
popf
push
test
dec
leave
push
rcr
loopne
adc
mov
xchg
addr16
scas
cmp
mov
mov
dec
xchg
mov
dec
nop/reserved
and
inc
xor
dec
fistpll
xchg
mov
inc
cmp
stos
mov
jo
mov
xchg
mov
or
xchg
lahf
pushf
sbbb
jo
js
out
push
jle
ja
repz
mov
add
call
pushf
addl
fadd
xchg
mov
fsubrl
mov
in
ds
cmp
hlt
mov
add
add
js
lds
pushf
sub
jecxz
xor
mov
cmp
push
jecxz
pop
xlat
in
jl
fsubs
mov
jmp
sti
push
nop
ss
stos
dec
hlt
fwait
mov
in
pop
jmp
stos
sub
sub
and
or
sub
movsb
orl
sbb
push
flds
outsb
push
ret
cmc
jl
mov
in
test
inc
ss
sbb
in
out
sbb
arpl
mov
cmp
mov
and
sahf
imul
sbb
xchg
ss
or
std
pop
pop
inc
lret
mov
cmp
repnz
mov
subb
jo
jno
xorl
mov
pop
movsb
test
xor
inc
jmp
int
push
mov
or
ss
sbb
leave
in
shll
and
enter
mov
fcoms
push
xor
mov
clc
push
insb
mov
add
and
add
int
out
repnz
or
or
mov
ss
bswap
das
js
adcl
mov
lea
cmpsb
xchg
mov
notl
add
lods
test
loopne
add
jnp
mov
xchg
mov
xor
adc
push
enter
loopne
xor
adc
idivb
fbstp
jo
and
pushf
xlat
lret
scas
jle
mov
xchg
cmp
cli
pop
sahf
mov
dec
xchg
test
pop
popa
mov
lcall
or
out
imul
subl
push
mov
nop
in
mov
scas
sub
jae
pop
ds
cmc
cmpsb
push
leave
adc
dec
imul
cmp
cmp
lods
xorl
xchg
inc
stos
jns
lds
rcl
aaa
xchg
je
insl
test
jnp
call
and
dec
lods
mov
adc
pushf
sbb
cmp
ret
push
jne
das
les
jmp
push
out
xchg
mov
arpl
jne
sbbb
loopne
inc
into
or
push
pop
bound
je
shlb
and
insl
cli
mov
mov
movsl
stos
enter
lock
inc
cmp
leave
jbe
jecxz
dec
xchg
jbe
loopne
lock
