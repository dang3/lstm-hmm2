stos
xchg
xchg
inc
jg
mov
clc
xchg
lahf
sub
add
fcomip
adc
scas
lcall
jmp
push
push
jmp
cwtl
out
stc
push
test
mov
neg
or
lock
mov
popa
pop
add
nop
fcom
add
or
data16
outsl
mov
sbb
stc
mov
sbb
lods
fnstenv
cli
or
and
jecxz
test
lods
daa
inc
pop
das
cmpsb
mov
xorb
lret
test
outsb
mov
popl
fisttps
test
dec
mov
cmpsl
jae
out
rclb
cmp
xchg
pop
sub
pop
stos
adc
repnz
mov
in
lahf
out
shrl
xor
sub
stos
xchg
hlt
mov
int3
push
pop
dec
push
dec
aas
mov
or
sub
or
mov
into
xchg
mov
dec
mov
pop
fstpl
and
jb
pop
xor
dec
outsb
sub
popa
xor
sbb
iret
xchg
fldenv
stos
outsl
mov
std
jle
js
loop
adc
sahf
add
cmpsb
mov
out
pop
lock
jg
add
pop
out
sub
cmp
test
in
pop
stos
imull
sub
fcmovu
cld
test
lcall
outsb
loope
cmpsb
or
into
insl
aas
add
adc
lods
icebp
or
sub
xor
out
mov
lods
test
mov
mov
cld
lret
cmp
rolb
dec
ret
fmull
pushf
popf
mov
cmp
mov
ljmp
inc
dec
sbb
lea
sbb
jns
outsl
mov
fldt
inc
fldl
out
mov
outsl
sahf
cwtl
dec
aad
leave
inc
pop
divb
mov
xlat
dec
add
mov
pop
sub
adc
pop
call
pop
sub
and
sahf
sub
sbb
bound
outsb
gs
pop
lods
mov
cli
out
out
jae
in
dec
sbb
cwtl
dec
dec
in
lret
jbe
mov
fdivrl
fndisi(8087
inc
iret
pop
sbbb
fst
jno
pop
mov
ffreep
imul
stc
sbb
lret
push
aad
jecxz
pop
add
sbb
mov
out
stc
mov
xor
out
call
pop
inc
sub
and
hlt
or
cmp
pop
cmpl
fstpl
icebp
outsb
sti
lea
cli
andb
ljmp
inc
aam
rcr
push
push
mov
add
aas
lds
lods
into
cmp
sarl
pop
and
rorb
push
scas
jno
repnz
mov
lea
push
cmc
adc
mov
insb
cmpsl
jne
ljmp
push
fnstsw
imul
mull
xlat
adc
rcr
pushf
add
dec
rolb
sbb
mov
insl
mov
insb
mov
mov
pop
jge
push
mov
imul
stc
mov
add
jp
es
les
cmp
stos
clc
inc
dec
push
and
daa
pop
pop
scas
ret
dec
and
cmp
fcomi
insb
lea
xchg
cmpsb
hlt
xchg
sahf
sub
add
add
mov
and
adc
pop
mov
push
data16
js
push
inc
mov
mov
sub
pop
fdivrs
or
roll
adc
mov
lcall
fistpl
mov
ret
push
mov
mov
mov
inc
loop
out
lret
sbb
stos
jae
insb
aaa
cs
or
add
ffree
or
inc
adc
dec
and
popa
or
inc
out
iret
mov
dec
mov
aas
cmp
xchg
cmp
mov
push
je
adc
push
push
pop
aas
xchg
fwait
or
fisttpll
ret
mov
movsl
mov
push
out
jne
aas
xchg
fs
pop
ret
lret
jl
movsb
add
mov
sub
xchg
lret
out
sub
test
and
andl
bound
mov
push
fdivrl
or
pop
pop
std
mov
add
adc
lahf
popf
and
cmp
mov
dec
stos
ja
or
sahf
shll
stos
mov
mov
mov
dec
sbb
push
inc
movsb
add
mov
rolb
test
and
and
lods
shl
xchg
in
fwait
add
mov
mov
mov
jno
push
ds
adc
loop
jp
sub
or
out
mov
xchg
adcl
fiadds
sub
popa
mov
add
jb
xlat
popf
shrb
aas
xlat
fcomps
imul
cs
js
inc
repnz
jne
int
ret
dec
pop
call
and
jp
xor
xchg
into
sub
cmp
cmpsl
mov
push
jns
adc
pushw
test
push
jl
cwtl
xchg
cld
stc
popf
sbb
mul
sbb
out
outsl
pushf
dec
lret
insb
sti
and
std
push
mov
mov
out
ret
ljmp
cmp
jns
jecxz
xchg
out
dec
adc
mov
outsb
adc
mov
cld
push
xor
dec
in
add
adc
jmp
jnp
add
scas
adc
rcll
pop
sub
call
xor
xor
dec
imul
mov
mov
fdivr
lcall
sbb
test
sub
inc
mov
xor
in
callw
cwtl
adc
jl
outsb
sahf
push
sub
inc
adcl
data16
data16
pop
call
ss
xor
out
push
xchg
mov
ds
aas
fwait
ss
inc
das
mov
hlt
insb
imul
scas
cmpsl
mov
dec
mov
mov
lret
shr
lds
push
sti
jnp
pop
or
jne
nop
add
aad
pop
sahf
test
stc
xchg
jno
gs
ljmp
mov
lret
lcall
mov
js
addb
xchg
adc
lea
inc
hlt
push
sub
cmpsl
cmpsl
fcoms
pushf
xchg
outsl
scas
cwtl
popf
jnp
iret
movsl
pop
loop
ljmp
pop
loopne
ja
mov
mov
int
repz
dec
push
jle
xchg
aaa
mov
push
cld
je
push
fwait
jns
xorb
pop
sub
sub
sub
popf
loop
outsb
cld
push
cltd
dec
dec
pop
lods
pop
dec
sbb
cmp
mov
rclb
jge
mov
sbb
adc
dec
ss
sar
aad
popf
lret
or
sub
mov
xor
mov
lds
fisubl
loop
push
iret
stos
or
jl
push
xchg
dec
lock
enter
add
fmuls
and
cli
or
mov
scas
clc
xrelease
sti
mov
lahf
and
fisubrs
addr16
movsb
sub
shll
cwtl
push
pushf
mov
cmpl
jmp
lea
pop
pop
rorb
sub
inc
cmpsb
insl
aaa
jge
push
ds
mov
insl
mov
sbb
iret
mov
ljmp
fwait
lcall
push
dec
movsl
iret
xchg
push
lcall
fwait
out
mov
and
dec
sahf
sahf
dec
mov
sbb
repz
lahf
adc
mov
mov
sub
movsl
ja
aas
push
scas
pushf
mov
daa
cmp
sbb
data16
mov
repnz
pop
jecxz
fucomip
dec
cmp
gs
adc
in
repz
mulb
fisttps
loopne
lods
mov
pop
pusha
jne
xchg
mov
hlt
jg
pop
jns
fstpt
jo
cmp
dec
pop
pop
push
xchg
mov
or
fisubs
inc
pop
jmp
adcl
lods
lret
dec
lock
popf
push
dec
push
gs
call
jbe
dec
mov
mov
ret
inc
add
dec
ja
aaa
cmc
pop
add
imul
jge
fildl
divl
xchg
mov
clc
ret
test
mov
or
sub
fsubl
aad
in
or
mov
pop
dec
in
and
sbb
push
mov
stos
cmp
or
aas
iret
sbb
daa
cmpsb
lret
shlb
loope
lods
jecxz
in
mov
mov
in
inc
push
arpl
scas
inc
cmpsl
jp,pn
inc
out
pushf
jmp
scas
dec
pop
icebp
test
popf
jo
jle
cvtdq2ps
pushf
shrl
jmp
sbb
sub
mov
repnz
cmp
inc
pop
in
inc
out
inc
cmp
mov
inc
cmpb
clc
jge
jge
cmp
popa
adc
rolb
or
pop
jmp
fcomps
push
js
push
ja
inc
pop
imul
mov
push
adc
or
loop,pt
out
nop
jmp
fcmovnu
jle
pushf
ret
mov
jae
daa
inc
int
call
imul
cmp
adc
inc
movsl
jne
mov
fimuls
mov
push
push
das
sbb
out
popf
icebp
push
jnp
mov
out
dec
aaa
mov
jb
fildll
mov
inc
adc
push
mov
fistl
fisubl
mov
push
push
in
imulb
pop
adc
in
std
out
outsb
push
sub
rcr
add
mov
and
sub
aas
jnp
pop
loope
inc
into
int3
xchg
lret
push
adc
icebp
int3
gs
mov
and
add
sbb
insl
mov
pop
jbe
ljmp
mov
xor
js
data16
fcompl
or
adc
out
test
inc
sub
mov
mov
inc
out
enter
push
sbb
stos
mov
lock
and
adc
fmull
inc
out
or
fimull
loopne
xchg
pop
lcall
test
dec
das
mov
dec
xchg
fsubrl
fistps
jecxz
cmp
nop
std
sub
cmpsb
cmp
fstl
push
sub
pushf
rclb
inc
ret
pushf
pop
fs
fisubs
sbb
pop
mov
inc
dec
pusha
xor
sub
mov
aas
mov
dec
ret
scas
addr16
and
sahf
dec
lods
cmpsb
ds
aaa
scas
test
sbb
mov
addr16
lods
jno
mov
xchg
inc
sbb
sub
frstor
aas
cld
inc
dec
iret
add
in
in
pushf
pop
sbb
ds
push
xor
bnd
mov
adc
mov
cmp
cmpsb
mov
hlt
xchg
popf
inc
lock
add
fstp
push
cld
lds
mov
xchg
shlb
movsl
xor
pop
pop
sub
mov
mov
sub
fcompl
divb
mov
jmp
or
dec
fists
clc
stc
ficoml
icebp
mov
cmp
xchg
fwait
or
out
scas
cltd
push
jne
and
hlt
mov
mov
sahf
push
dec
fidivrs
mov
inc
fstp
rolb
pop
dec
inc
and
mov
and
pminub
in
lea
cmpsl
imul
in
lds
xchg
mov
xorl
fisubl
mov
mov
int
inc
cwtl
or
out
fdivs
out
rclb
or
or
ja
push
imul
cld
lahf
add
iret
pop
mov
cwtl
or
inc
imul
fsts
iret
outsb
sub
out
clc
scas
xchg
sbb
adc
notb
adc
iret
pop
cmp
outsl
jbe
les
mov
outsb
int3
bound
imul
and
mov
sti
cwtl
out
mov
cmc
or
jg
or
mov
movsb
enter
push
insb
push
lret
inc
and
dec
pop
int3
jge
lds
push
fldt
push
adcl
es
cmc
sahf
inc
push
cmp
mull
mov
xchg
mov
in
and
cmp
insl
pop
mov
imul
rolb
mov
jo
mov
pushf
leave
sbb
cmp
gs
push
or
outsl
loop
int
test
xchg
fistps
xchg
push
daa
mov
dec
stc
imul
scas
push
mov
aas
test
mov
lret
div
sub
mull
add
push
in
repnz
adc
inc
and
std
or
iret
shr
fninit
xchg
xor
add
fcmovnbe
mov
out
push
stc
inc
adc
dec
loopne
mov
dec
or
add
cmp
pop
sub
in
fsubrl
ds
push
push
push
mov
xchg
xor
mov
push
sar
adc
pusha
loop
sahf
iret
push
mov
adc
int3
and
mov
rorl
ret
xor
outsb
lcall
add
mov
inc
adc
inc
add
and
nop
xor
cmpsl
daa
pop
test
mov
adc
in
loop
mov
mov
jge
push
push
je
mov
ret
loop
push
adc
insb
bound
inc
shrl
test
jo
ret
lods
cli
sub
adc
sbb
xor
push
pop
test
cmpsb
enter
stc
inc
pop
aas
and
mov
add
and
orl
sub
push
mov
addb
mov
icebp
loope
into
outsl
out
cmpsl
loop
jle
mov
nop
fnsave
jge
fs
mov
sar
fcoms
in
cmpsl
xchg
mov
mov
push
loop
xchg
or
jo
push
lret
cmp
in
add
cld
repz
inc
repz
setae
mov
jge
xor
or
mov
scas
inc
lret
jle
add
leave
and
fcmovb
cmp
cli
sbb
mov
adc
dec
test
cmpsb
mov
pop
xchg
push
orb
push
xor
lds
das
sub
lahf
xor
push
inc
xchg
xor
adc
jmp
xchg
in
orl
jno
stos
xchg
sub
sub
mov
jae
pop
fwait
rcll
test
adc
lcall
sub
sub
mov
xchg
sub
mov
dec
enter
dec
pop
insl
cmp
pop
xchg
adc
xchg
pushf
rcrb
jg
fbstp
adc
out
jmp
xchg
into
fisubrs
lcall
xor
pop
xchg
xor
call
notl
lret
inc
push
das
lods
fisttpl
cbtw
fbld
xor
add
inc
fistl
cltd
outsb
pop
jnp
sbb
xchg
int
sub
jne,pn
lock
inc
mov
shrl
scas
xchg
shrl
ret
lods
test
sub
dec
gs
adc
pop
xorb
sbb
cmpsb
popf
sahf
ret
dec
jb
iret
lahf
cli
jmp
mov
dec
mov
pop
dec
icebp
mov
rorb
popa
clc
xlat
hlt
sbb
iret
in
pusha
call
inc
fsqrt
aaa
ja
adc
outsl
enter
jnp
xchg
in
sub
test
out
and
mov
jge
push
mov
repz
add
fcomip
sti
cmp
loop
dec
stc
cmpsl
xchg
mov
test
adcl
push
cmp
lock
movsb
popf
imul
mov
test
xchg
and
or
inc
sbb
imul
mov
rcrl
and
fildll
add
sbb
add
dec
imul
push
or
xchg
sbb
movb
mov
mov
jae
cmp
lods
int3
sbb
pop
testb
movsb
int
loop
or
sqrtps
idivb
xchg
fsubl
inc
and
jmp
out
addr16
fcmovnb
stc
je
insl
mov
jp
adc
out
fisttps
es
or
jge
fucomp
inc
nop
lahf
inc
mov
mov
xor
pop
xor
cmpsb
out
ret
xchg
jne
cmp
aam
aaa
push
in
out
push
insb
mov
xchg
and
adc
lods
jo
aam
fistpll
pop
cmpsl
es
sbb
shll
inc
pop
push
in
mov
cmp
mov
es
jecxz
mov
imul
cwtl
repnz
mov
ljmp
cmp
jae
dec
xchg
pop
cmpsl
int
mov
cmpsb
movsb
repz
jne
jge
lods
lret
and
cmpsb
scas
leave
mov
std
daa
mov
push
pop
mov
add
sub
mov
inc
lahf
jo
aam
mov
cmp
fadds
scas
xor
pushl
jecxz
out
test
dec
jne
cmc
pop
out
push
dec
lret
push
addr16
jns
repz
mov
repnz
or
dec
xor
repz
gs
popl
cmp
shrb
es
xor
adcb
push
or
testb
divb
mov
mov
mov
and
pop
jno
test
and
scas
out
ret
jo
iret
adc
cwtl
pop
nop
shlb
xlat
fmuls
fwait
ret
in
loop
sahf
adc
xlat
jp
scas
mov
adcl
or
sbbb
mov
mov
or
cmp
mov
sti
xor
je
mov
repz
pop
mov
pop
jbe
push
pop
mov
xchg
sbb
lret
add
ficoms
aad
push
inc
int3
mov
or
stos
inc
cltd
mov
pop
xchg
mov
push
xor
call
mov
nop
movsb
lods
pop
xor
lods
or
gs
int
iret
push
out
or
pusha
mov
xor
outsb
push
adc
adc
push
adcl
fwait
pop
xor
mov
movsb
mov
pop
or
lock
nop
sbb
mov
mov
pushf
or
cmpb
mov
dec
sti
xchg
jmp
in
insl
and
mov
cmpl
add
shll
xchg
rcrl
cmpsb
pop
fiaddl
mov
outsl
xor
cmpsl
cld
jg
cltd
xchg
jae
or
dec
sbb
sub
cmpsb
dec
insl
mov
xchg
rcrb
dec
push
sbb
sub
or
fdivrs
mov
test
in
mov
pushf
gs
fcmovnbe
dec
fs
lret
mov
cli
or
pop
fwait
jg
lods
or
shll
mov
out
inc
adc
iret
mov
xchg
dec
or
sbb
rorl
aas
out
push
jb
lahf
daa
push
pop
test
stc
repnz
loop
test
sti
xchg
dec
cld
or
cmp
xlat
adc
cmpsb
iret
cmpsb
sub
dec
adc
add
pop
aaa
cli
addr16
and
fdivrs
mov
adc
pop
ds
sub
add
sti
sbb
fadds
rcrb
aas
mov
incl
dec
cli
ret
sbb
daa
daa
jne
outsl
stc
or
outsb
xor
or
ljmp
fcomi
lcall
jo
test
icebp
cmp
mov
out
call
pushf
les
aam
lcall
jns
data16
push
insb
sub
jl
call
sub
ret
cmp
addb
into
fwait
add
push
sbb
dec
ljmp
adc
bnd
in
sub
test
mov
pop
pop
lea
jg
movsl
adc
gs
push
and
mov
imul
lods
jno
sub
out
push
gs
mov
pop
cmp
loop
xor
xchg
cmp
jo
addr16
add
and
inc
loope
imul
add
es
pop
push
imul
dec
mov
dec
addb
xchg
test
jle
lret
loopne
imul
fldenv
in
xor
jae
out
ljmp
dec
mov
mov
pop
jp
aad
jge
mov
ljmp
out
push
xor
pop
mov
or
inc
repz
inc
popf
mov
cld
or
inc
aaa
das
push
es
lods
push
inc
sti
cmp
or
adc
xchg
jae
push
push
sub
daa
mov
or
lret
insb
ret
lret
push
inc
fadd
std
sub
test
and
rcll
std
and
into
pop
add
sarl
out
rorb
ljmp
inc
push
pop
outsb
mov
stos
mov
and
pop
jb
pop
xchg
std
popa
add
push
in
fnsave
or
aaa
cmp
shrb
adc
mov
jns
xchg
pop
mov
sbb
xor
subl
cmp
aad
popa
pop
ret
scas
add
cmp
mov
add
jno
push
and
push
mov
push
inc
cwtl
cli
iret
cmp
pop
or
inc
xchg
xor
jmp
das
inc
cmpsl
dec
iret
jg
leave
jbe
fldcw
jmp
mov
mov
fmuls
ljmp
lahf
out
mov
jmp
in
fwait
lea
mov
or
mov
mov
aam
loop
or
mul
pop
rcll
int
dec
test
iret
mov
cmpb
shlb
sbb
fnsave
loope
mov
mov
jbe
sarb
xor
in
sbb
aas
mov
sbb
cmc
dec
in
int3
stos
xchg
mov
dec
jecxz
scas
sub
xlat
imul
inc
push
andl
adc
mov
xchg
loop
mov
fmull
sbb
inc
push
icebp
push
aad
sub
icebp
lea
pop
push
adc
dec
test
and
pop
jnp
inc
xor
insb
xchg
push
mov
adc
out
push
jae
push
xchg
stos
pop
and
jecxz
scas
xchg
push
fwait
popf
lahf
mov
jg
jmp
inc
clc
arpl
pop
pop
imulb
dec
mov
aad
adc
add
mov
inc
mov
pop
and
xlat
dec
ss
into
ret
push
sbb
jbe
mov
pop
fstpl
mov
add
xchg
out
test
lret
arpl
mov
xor
out
bound
sub
in
xor
das
xchg
test
inc
xor
inc
cmp
les
sbb
sub
adc
xor
fsubp
lods
push
lcall
shll
in
fadd
jg
int3
dec
leave
xor
jle
mov
xchg
out
jmp
push
jl
mov
sti
orb
fwait
dec
fbstp
lahf
push
sahf
xchg
aam
xchg
lret
cltd
mov
jmp
pop
jne
fdivs
popa
aam
fisubrl
jecxz
xchg
cmpsb
ljmp
mov
icebp
add
jecxz
lods
cltd
push
xor
jo
sbb
div
arpl
push
jb
data16
ja
pusha
push
fsts
sbb
mov
or
pop
mov
jle
loope
sub
enter
push
sbb
mov
test
idivb
dec
sarb
repz
cmpsb
lret
aad
jecxz
cmp
clc
icebp
inc
xchg
xor
pop
and
cmp
andl
shr
rorl
push
int
mov
fnstcw
and
daa
out
lahf
movsl
mov
push
lods
fs
sub
mov
xchg
lods
cmc
ljmp
js
xchg
jno
mov
fwait
fwait
out
notl
jns
or
add
icebp
ficoms
sbb
mov
mov
xor
mov
clc
jns
push
adcb
mov
xchg
inc
popf
iret
repnz
jmp
sbb
xchg
jns
adc
lahf
cmp
repnz
clc
mov
pushf
mov
mov
fbld
in
testl
sbb
cmpb
push
xchg
xor
movsl
out
loopne
jns
in
int
sub
gs
lds
xor
sarl
cmc
negl
xor
arpl
sbb
test
and
xor
mov
add
hlt
mov
mov
call
loop
test
add
push
lea
cltd
into
or
adc
mov
lret
out
inc
es
sub
lret
inc
sti
in
cltd
jl
insb
call
lods
in
imulb
addr16
ja
inc
lods
cld
sbbl
cmp
shrb
jns
lea
pop
lock
pop
insb
movsl
and
daa
inc
xlat
and
add
bound
jge
into
add
into
inc
mov
mov
lret
mov
push
sub
xchg
ja
lcall
mov
xor
pop
sbb
test
mov
outsb
jae
pop
nop
sub
mov
xor
arpl
jne
inc
mov
mov
adc
dec
push
inc
jno
test
shll
in
cmpsb
xchg
mov
scas
jl
inc
sti
push
mov
inc
pop
inc
arpl
ds
mov
test
mov
pop
push
push
inc
adc
es
das
or
sbb
and
mov
sbb
xchg
inc
cld
mov
iret
push
jg
repz
movsb
sub
jl
sbb
popf
lods
jb
inc
rcll
out
rcll
mov
pushf
xchg
push
and
and
push
mov
xchg
and
lahf
xchg
scas
fcompl
mov
mov
or
sub
pop
popf
nop
xor
xlat
fmuls
daa
cli
psubsw
or
mov
push
dec
inc
mov
rorb
cmc
pop
stos
lcall
fcoms
jge
inc
aad
xchg
xchg
mov
inc
xchg
out
sbb
mov
mov
mov
dec
loope
les
sbb
in
push
out
sbb
int
rclb
add
push
xor
jns
idiv
or
test
repz
push
loope
fsts
jb
lcall
fisubrl
ret
xchg
les
mov
ficoml
mov
add
das
test
fstpt
test
push
xchg
sbb
mov
mov
js
out
out
dec
outsb
xor
mov
adcl
stc
add
movl
cmp
mov
imul
inc
xchg
dec
ret
fists
js
loopne
pop
out
iret
call
clc
ret
mov
out
xor
and
xchg
cwtl
test
add
adc
mov
leave
sbb
in
or
iret
xchg
data16
or
scas
jae
cld
xor
rorb
mov
imul
mov
fnstsw
jle
stos
cmp
rcrl
test
jnp
push
sti
test
cmp
add
pop
pop
xchg
insb
mov
out
sub
repnz
xchg
or
lds
pop
push
clc
test
sbb
xchg
divl
xchg
jecxz
mov
popa
pop
add
in
or
sahf
test
mov
xchg
pop
fisubrs
adc
mov
jae
repz
mov
lods
sub
popa
adc
sub
mov
dec
pop
or
es
jbe
cmp
js
xor
repz
lods
xchg
mov
fcmovb
mov
lahf
push
add
dec
in
pop
xchg
adc
sub
js
pusha
mov
push
fistpll
cmp
lock
jmp
movsb
fistps
into
test
stos
xlat
mov
testb
cltd
negl
sbbl
ds
cli
sbb
out
xor
jp
xor
mov
push
mov
shll
sbb
dec
mov
jbe
mov
lods
mov
mov
rolb
addb
fcompl
xor
out
sbb
lahf
dec
ss
jo
push
lret
jmp
mov
ja
je
bound
add
out
pop
mov
cmp
in
sub
sbb
pop
add
int3
inc
sub
or
fildll
cmp
jge
pushf
aaa
add
out
xchg
int
xchg
fldenv
or
add
orl
mov
mov
xchg
mov
enter
lahf
pop
xor
sbbl
mov
add
dec
or
cmp
jns
gs
sbbl
adc
lcall
xor
xchg
pop
sti
insb
mov
ds
and
jmp
int
xchg
int3
cmp
adc
mov
lahf
adc
push
imul
mov
fldl
mov
inc
int
mov
lahf
adc
cli
cmpsl
cmp
cli
cmpl
pop
jg
inc
cmc
ror
ja
int
sub
sbb
pushl
pop
cmp
daa
addr16
pop
add
aaa
outsb
dec
into
mov
out
sti
rcll
dec
imul
cmp
mov
ret
dec
and
and
pusha
cmp
lret
mov
fwait
mov
push
imul
mov
pop
outsl
aad
iret
mov
mov
pop
and
mov
sub
jnp
inc
jl
dec
iret
incl
add
popf
jnp
adc
mov
mov
mov
ss
adcb
ja
adc
adc
adc
stos
out
add
sbb
stos
in
icebp
jle
mov
sub
adc
popf
push
stos
jb
mov
enter
xor
pop
jmp
std
inc
jp
jns
xchg
push
mov
sbb
mov
pop
dec
lods
cwtl
hlt
sbbb
xchg
push
or
in
lahf
jmp
lret
fistpl
repz
mov
cmpl
mov
rcll
iret
sub
mov
insl
stc
mov
mov
call
mov
lahf
add
ret
cmpsl
sub
sbb
push
xlat
out
out
mov
fwait
mov
dec
std
popf
bound
push
sti
xor
or
inc
test
movntq
pop
out
push
mov
or
inc
xchg
mov
popa
sahf
sbb
mov
jmp
sub
int3
sub
addr16
gs
inc
adc
lret
lret
mov
cmpl
inc
push
mov
mov
sti
pusha
mov
mov
nop
push
imul
pop
lahf
dec
or
stos
xor
jle
add
fstl
xchg
pop
inc
dec
mov
into
push
cmpsl
and
jecxz
testb
stos
mov
int
cmp
int
mov
out
or
mov
repnz
outsl
divb
jmp
in
std
or
stos
jnp
out
add
js
in
outsb
daa
rolb
jne
fwait
lcall
fnstsw
push
mov
jae
out
call
sarb
cmp
add
xchg
jnp
cli
iret
mov
xchg
dec
add
arpl
add
mov
loope
lahf
mov
fistl
lret
mov
add
divl
fistps
mov
cmp
dec
jl
jo
mov
dec
out
mov
pop
lret
fists
pop
mov
insb
xchg
in
inc
scas
stc
ds
pop
int
push
xor
addr16
mov
push
cmpb
inc
pop
mov
mov
jns
jmp
je
cltd
jmp
inc
dec
lods
fiadds
xor
out
xor
jmp
rcl
out
and
in
ds
call
jp
sahf
lds
dec
dec
sahf
insb
out
cmpsb
mov
dec
push
dec
mov
pop
mov
xchg
mov
xchg
jae
int
inc
lret
pop
out
or
std
inc
lods
xchg
inc
outsl
lret
add
add
movsl
xchg
fs
jbe
std
not
movsl
cmp
or
ljmp
or
cmp
popf
mov
mov
jns
pop
sub
repz
and
outsb
iret
inc
mov
lahf
in
fisubs
aaa
jmp
push
imul
mov
jge
mov
pop
popf
mov
in
popa
cmpsl
push
jns
push
mov
lods
mov
mov
cltd
iret
or
test
cmc
xchg
ja
mov
testb
xchg
fcomps
cmp
stos
cltd
out
fidivrl
inc
adc
mov
faddl
fisttpll
aad
push
sub
mov
lock
loop
out
rcrb
call
sarb
adc
pop
xchg
or
adc
test
enter
es
cmp
sar
lcall
mov
sbb
repz
sbb
adcl
inc
int
sahf
in
subb
and
xchg
insl
mov
rorl
scas
enter
repz
rclb
xlat
mov
inc
cmp
imul
icebp
xor
pop
add
mov
repz
test
push
xchg
dec
lcall
pop
arpl
pop
mov
movsb
cmp
ljmp
mov
xor
pop
nop
data16
and
call
and
xchg
ljmp
lods
fcomip
stc
lds
mov
and
mov
cmp
dec
stos
add
add
movsl
push
fidivl
jbe
loop
mov
imul
subl
dec
hlt
fcmovnu
leave
lret
lcall
mov
lahf
mov
lret
sbb
jbe
mov
fildl
jne
push
dec
icebp
das
xor
jle
push
and
push
dec
push
mov
inc
mov
stos
sbb
daa
pop
aaa
cmpsb
push
nop
sti
shll
mov
adc
xlat
notl
mov
lret
fwait
sbb
ss
dec
xor
outsb
cmp
lods
inc
sbb
je
sub
outsl
or
data16
imul
shr
push
xor
cmp
pusha
in
mov
sbb
iret
mov
jecxz
sti
cmpps
ljmp
pop
xchg
pushl
jb
pop
gs
pop
add
stc
je
jl
testb
stc
in
mov
xchg
mov
insb
test
repz
out
ja
mov
or
fwait
js
cltd
movl
sbb
in
mov
or
std
mov
jnp
mov
ljmp
and
add
call
repz
imul
popf
sbb
pop
icebp
sub
fidivrl
loope
xor
jmp
push
pop
in
shlb
in
fsubs
jb
adc
mov
loopne
mov
push
popf
sbb
test
add
popf
push
mov
mov
test
mov
xchg
adcb
icebp
inc
imul
cmc
and
xlat
add
mov
mov
iret
mov
movsb
push
dec
jo
push
test
leave
nop
mov
dec
and
imul
mov
orl
fwait
sbb
sub
xchg
and
pop
and
mov
xlat
sub
pusha
inc
fcmovnbe
adc
mov
xchg
push
adc
shlb
popf
mov
xchg
mov
push
push
mov
sbb
out
pushf
xchg
repnz
sub
jp
push
lods
jb
xor
xor
push
dec
push
lods
and
andb
fucom
loopne
fwait
adc
push
push
addb
jne
push
outsb
mov
cld
shlb
inc
lods
dec
adc
jne
sti
inc
and
fstpl
stos
out
fmuls
cmp
dec
cmp
push
add
cld
and
sub
and
or
jo
pop
fdivrs
imul
dec
cld
mov
inc
jno
int
dec
cmc
ret
shlb
and
push
adc
fildl
jmp
lcall
push
pop
std
loop
add
cmpsb
inc
ret
repz
sub
pop
mov
xchg
pop
iret
push
lock
mov
ja
pop
mov
clc
sub
fisubrl
sbb
add
jae
push
rcrl
std
inc
mov
cmc
popa
out
jg
mov
pop
mov
lret
push
pop
sbb
jae
dec
rol
add
outsb
lds
stos
jg
in
lahf
xor
test
sbb
inc
adc
lods
mov
add
push
in
subl
xchg
lahf
adc
les
xor
add
xchg
daa
fisubrl
int3
jne
mov
rcr
fidivl
push
movsb
add
jne
xor
lcall
or
inc
cmp
or
xor
enter
out
xor
cld
cli
add
scas
sahf
stos
clc
imul
dec
xchg
xor
loope
mov
fnop
popf
xchg
icebp
cli
nopl
sbb
call
lds
add
sbb
scas
mov
sub
decl
ret
jecxz
or
xlat
cld
xchg
jno
jp
shlb
fwait
scas
sub
testb
pop
cmp
mov
out
out
inc
andb
jl
movsb
or
call
lahf
inc
movl
mov
incb
jae
cmp
jb
js
jg
xchg
cmp
dec
mov
js
dec
push
jns
inc
cli
popf
cmp
test
cld
dec
lock
insl
in
inc
je
pop
jne
ljmp
aaa
cmp
leave
mov
cmp
xor
dec
into
adc
ja
out
mov
pop
jae
and
mov
adc
mov
das
push
mov
neg
push
in
add
xchg
mov
jo
push
push
fwait
les
sbb
movb
dec
mov
icebp
add
int3
mov
pop
js
sbb
repz
fsubrs
dec
out
sti
stos
aaa
mov
mov
data16
mov
outsl
fs
sbb
or
and
or
or
push
jb
xor
sbb
sti
lcall
lret
add
sahf
dec
gs
dec
inc
add
fwait
idivb
push
test
sub
test
insl
mov
pop
push
jge
xor
lret
cli
aaa
jns
movsl
mov
nop
sub
cli
ja
iret
daa
mov
mov
es
fcoms
pop
sbb
outsb
stc
mov
int3
sar
pop
f2xm1
lret
jnp
xor
subb
fisubrs
jno
out
xor
mov
subb
jbe
std
dec
mov
add
xchg
and
jmp
aas
mov
dec
lahf
sbb
lret
jae
imul
mov
call
shrl
int
add
xchg
cmp
in
push
push
xor
and
hlt
jmp
clc
xlat
es
lahf
pusha
xor
lret
std
out
add
mov
dec
xor
mov
push
repnz
pop
ret
or
and
cmc
test
mov
xchg
jb
aas
punpcklbw
and
jae
cmp
xor
movsb
mov
mov
push
cld
or
jb
stc
sub
or
add
sti
dec
cmp
mov
shlb
sbb
psubd
sbb
xchg
ret
push
xor
aam
into
cltd
movsb
sbb
inc
sbb
xchg
int
test
ret
mov
mov
jg
pop
gs
dec
push
icebp
sbb
ret
stc
inc
orl
fdivrp
hlt
cmpsl
jg
pop
int3
nop
insl
addb
jae
inc
iret
cld
mov
out
decb
sahf
jns,pt
xchg
or
stos
jbe
jecxz
sub
mov
lods
xchg
repz
push
push
pop
mov
fidivl
cmpl
dec
fstl
adc
lock
adcb
adc
testl
jno
ret
xor
fstp
ret
test
iret
xchg
sti
daa
insb
fcmovne
mov
xorl
xor
mov
data16
dec
sub
mov
daa
out
sti
shl
ficomps
or
sub
adc
push
push
lock
mov
cld
mov
fs
lods
add
push
ret
pop
add
cmpsl
sbb
cld
pushf
add
hlt
out
out
icebp
stc
mov
call
scas
push
xor
sub
xlat
mov
xor
popa
jg
stos
push
fnstenv
dec
ss
std
stc
mov
xor
cmp
sub
stos
sbb
mov
jnp
mul
fisttpll
nop
dec
xor
xlat
pop
push
imul
cmp
stos
push
mov
cli
cmpb
es
jmp
out
xor
xchg
lea
cmp
pop
icebp
insl
dec
aam
xchg
movsb
pop
fbstp
lock
mov
sbb
andl
test
inc
pop
arpl
pop
dec
jno
insb
ds
xchg
daa
mov
outsl
cmpsl
leave
sbb
sbb
mov
mov
sbb
std
or
frstor
xor
ret
and
ljmp
jmp
hlt
mov
push
adc
sti
xchg
jp
in
jbe
xor
pop
popf
test
aad
push
jg
jne
pop
add
add
inc
out
xchg
adc
adc
and
xchg
out
xchg
add
or
das
dec
inc
divb
cld
jns
push
out
mov
cmc
sub
vmulps
fistps
fcomp
push
mov
dec
cs
std
mov
and
xchg
jne
or
test
mov
dec
lods
hlt
lods
push
cmp
das
jmp
jge
scas
or
movsb
mov
cmp
cld
jnp
sbb
jge
dec
insb
mov
aas
dec
sub
jge
dec
test
sub
cmpsl
xchg
fsubs
mov
test
mov
mov
lods
push
in
lods
mov
shrl
xchg
jp
mov
test
daa
mov
lahf
leave
sbb
cmp
sbb
scas
mov
insl
test
xchg
xchg
xchg
mov
sub
mov
imul
inc
pop
inc
inc
shll
test
loopne
clc
or
or
sbb
shl
out
xchg
xchg
dec
xchg
fisubrl
push
lret
int3
lcall
adcl
fdivs
arpl
and
fdiv
ret
push
movsl
sbb
pop
mov
pop
push
add
or
add
testb
insl
lahf
pop
or
mov
loop
jge
imul
in
sarb
jne
xor
xor
sub
addb
adc
clc
repnz
ret
xlat
add
mov
stc
out
cmpsl
fmull
mov
xchg
push
or
lahf
push
sar
jo
or
pop
inc
stc
or
sbb
jg
repnz
dec
cli
add
lock
jnp
dec
adc
adc
push
dec
jne
lods
repnz
mov
jnp
and
daa
js
mov
data16
mov
cmp
outsb
into
pop
xchg
fcoml
cmp
addr16
insl
add
fwait
leave
test
xor
push
rorl
test
movsb
int
sbb
mov
or
or
sbb
add
adc
cmpsb
adc
push
add
call
mov
add
fistpl
sbb
daa
lods
jae
outsl
mov
mov
mov
adc
movsb
fnsetpm(287
psubb
int
sub
mov
pop
movsb
sbb
out
lahf
out
int
adc
push
inc
xchg
in
cwtl
out
adc
sub
dec
sbb
adc
scas
movsl
test
sbb
jmp
or
imulb
cmp
sahf
mov
cmp
aaa
or
add
movsl
mov
or
dec
sub
inc
or
jp
jl
sbb
mov
mov
mov
xchg
data16
inc
test
mov
xchg
ret
leave
sbb
loopne
mov
mov
in
inc
xlat
mov
lds
fwait
sarl
es
ret
add
fbld
jp
or
scas
push
stos
jbe
xor
sbb
insl
cmp
jl
test
rorb
jbe
pop
out
or
int3
addr16
ja
daa
insl
dec
adc
mov
clc
test
iret
add
pop
pop
aaa
imul
repz
xchg
orl
pop
dec
loopne
aaa
icebp
cmp
jae
push
mov
lods
data16
add
andl
movsl
shll
inc
jb
loope
push
cmp
ret
fldl
icebp
or
imul
lcall
enter
shrb
ret
daa
push
xchg
iret
mov
jp
xor
lods
jae
movsb
pop
mov
jbe
stos
cmp
sti
mov
mov
loopne
inc
mov
out
std
popa
xchg
lea
fwait
insb
mov
in
fildl
mov
xchg
and
mov
cmp
call
addr16
push
popa
sub
insl
xor
dec
mov
test
pop
pop
add
inc
scas
push
jnp
push
pushf
lret
mov
lcall
mov
xchg
dec
stc
mov
mov
push
add
push
xorb
loopne
mov
push
sti
arpl
les
push
dec
and
lret
sub
add
cmp
cltd
pop
pusha
or
imul
mov
adc
cltd
cmpsl
std
lea
clc
jl
jmp
fs
icebp
or
daa
push
xlat
push
sbb
jge
pop
test
lcall
int3
lods
sbb
cs
mov
xchg
cmp
mov
in
stc
fwait
mov
jg
fs
and
jnp
add
sahf
mov
mov
movsb
insb
jge
stos
and
and
fdivs
cmp
or
cmpsl
insl
dec
mov
pop
mov
stc
mulb
outsl
adc
jbe
movsl
push
jns
cmpsb
test
cmpsb
xchg
cmp
xchg
lea
dec
pop
xchg
loop
lods
sub
mov
cmp
jl
sbb
or
inc
pop
fistpll
loope
xchg
out
push
clc
int
aam
ret
call
std
movsb
cmp
stos
imul
lods
arpl
inc
lfence
sub
das
add
mov
cmc
and
cmp
or
pop
mov
mov
cmpb
sarb
mov
xor
je
mov
ret
push
cmp
mov
mov
pushf
inc
xorl
dec
test
jae
sbb
or
mov
pop
mov
lods
shr
in
mov
cwtl
imul
ret
stos
gs
or
and
xor
lahf
xchg
sub
leave
fdivrs
push
add
xchg
fwait
mov
push
les
adc
inc
stos
inc
popa
or
iret
cmp
inc
aas
popa
mov
pop
sbb
sahf
jae
adc
inc
into
mov
or
and
and
int3
insl
push
pushf
jae
loopne
out
cli
xchg
jno
rcrl
das
fwait
xor
std
js
lea
cmp
jns
and
mov
mov
loope
mov
jp
insb
scas
mov
mov
shrb
sbb
jl
push
ljmp
cmpsb
hlt
roll
sub
insb
sahf
mov
fildll
jns
xchg
sbb
dec
icebp
cmp
push
mov
ja
leave
fimull
fldt
mov
dec
notl
addr16
lahf
insb
int
fdivr
mov
ljmp
jb
lods
add
addr16
sub
or
loop
sbb
cmp
adc
bound
cmc
sub
shll
mov
cmc
test
push
mov
cmp
jo
repz
inc
push
cmp
push
leave
test
call
cmp
es
lods
lret
mov
xchg
fwait
out
add
shlb
push
pop
pop
negl
dec
test
out
jp
stos
jae
bnd
std
mov
fwait
inc
lods
mov
jb
lock
mov
inc
jmp
cltd
sti
sbb
lds
and
sbb
iret
sarb
les
movsl
jae
rol
adc
fptan
arpl
rcrl
lret
leave
ror
add
lret
lcall
lods
mov
inc
lahf
mov
in
sub
mov
inc
and
pop
xor
sub
adc
sarb
and
jp
and
xor
dec
or
sub
sti
inc
scas
stos
test
jg
icebp
fldl2e
xchg
xor
ljmp
rcl
pop
stc
dec
jno
or
test
or
into
lret
movsb
mov
jo
wbinvd
repz
xchg
jne
mov
daa
mov
bound
dec
rorb
pop
mov
in
cmc
jae
mov
jne
sbb
test
cltd
xchg
jecxz
insb
mov
xlat
sbb
loop
cmpsl
fildll
lret
mov
inc
inc
ja
add
out
lea
in
pop
jmp
fs
sti
leave
cld
lcall
mov
aas
das
rcr
adcb
testb
mov
es
cli
adc
fmull
mov
out
sub
pop
lea
fcmove
mov
and
rcll
test
out
sti
push
mov
push
xlat
pop
repz
out
mov
es
xor
shrb
stos
lea
xchg
cs
mov
cli
ds
out
dec
or
pop
xor
daa
mov
lods
cwtl
pop
sbb
test
xchg
repnz
sbb
add
imul
out
jmp
xor
jno
or
xchg
lock
fistpl
in
xor
adc
lds
stc
mov
scas
jmp
dec
adc
call
sbb
mov
jge
aam
insl
pop
adc
add
fadd
and
cmp
pop
push
in
push
in
jno
inc
shrl
push
cmpsb
lea
push
push
lea
push
mov
ja
aas
xor
push
xor
dec
jnp
ljmp
loope
fcmovnu
insl
mov
movsl
xchg
pop
pushf
xor
fisttps
icebp
rclb
mov
mov
enter
mov
mov
stos
subl
inc
mov
mov
sahf
fsubl
mov
ret
ss
rcrl
cwtl
fcomps
rclb
sti
or
jno
adc
cmp
inc
sub
lea
and
push
cmp
sbbb
and
xchg
sbb
inc
adc
or
imul
mov
outsl
add
push
xchg
call
test
fdivl
or
mov
addl
fcoml
fiaddl
lods
mov
lock
mov
jbe
rep
mov
cs
loop
sub
pop
xchg
ljmp
jmp
add
iretw
xor
and
mov
ficompl
push
jle
mov
cmp
cmp
mov
cs
xchg
adc
cmp
test
adc
hlt
cmp
dec
adc
or
lcall
jmp
jmp
cmpsl
adc
mov
mov
mov
ss
add
or
shll
mov
mov
notl
adc
test
xchg
loop
inc
scas
mov
jns
mov
mov
dec
push
pop
sbb
dec
stos
enter
pop
pop
insl
js
imul
xor
roll
nop
mov
out
lret
mov
lea
cltd
sub
inc
data16
cmp
sub
and
cmp
popa
fwait
adc
pop
jmp
loopne
fwait
leave
out
scas
xchg
ret
and
jge
incb
movd
mov
stos
jnp
int
mov
fcomi
fisttps
xchg
push
in
mov
xchg
mov
aad
jecxz
or
and
test
mov
stos
xchg
push
dec
test
popf
and
and
sub
mov
inc
xchg
lods
inc
shrl
push
bound
icebp
fsts
jae
or
fwait
mov
inc
mov
adc
pop
ja
mov
xchg
and
int
sbb
movb
mov
ljmp
fstpt
shlb
jae
jmp
mov
repnz
jbe
lock
loopne
add
sbb
sub
mov
outsl
stos
movsl
mov
cmp
or
inc
xorl
pop
mov
push
inc
js
adc
push
cmpsb
jg
lcall
clc
ret
movsb
out
push
les
fs
hlt
xor
hlt
in
gs
in
cli
push
std
rcll
jno
add
or
jnp
movsb
push
div
mov
stc
mov
mov
adc
scas
loope
das
icebp
pop
dec
adc
mul
nop
out
gs
in
in
cmpsl
loope
jo
inc
daa
and
push
push
and
ja
sbb
fsts
xchg
cli
scas
cmpsl
cmp
jae
adc
jb
daa
add
mov
push
sub
addr16
mov
cli
push
out
mov
insl
cmpsb
mov
fdivs
push
xchg
dec
push
int
fmul
imul
aas
sub
mov
aaa
rcrl
sub
xchg
xor
dec
outsl
sub
mov
out
imul
jne
stc
mov
jno
inc
addr16
mov
aad
aad
jl
pop
imul
ficomps
add
loopne
cmp
jbe
call
cmpsl
add
imul
jno
rcr
popf
movsb
ljmp
xlat
icebp
out
lret
roll
and
mov
fdivrp
or
cmpsl
in
or
pop
mov
pop
push
subb
mov
mov
cmpsl
pop
push
push
lcall
dec
test
adc
test
popf
in
push
xchg
into
das
mov
das
push
lcall
pop
fbstp
jge
xchg
lahf
call
cmpsb
negl
mov
ret
popa
dec
mov
inc
sub
ret
out
jno
jbe
pop
int3
outsl
stos
mov
add
das
stos
pop
mov
insl
sbb
jae
mov
inc
dec
add
loopne
mov
push
lret
jp
cmp
sbb
push
mov
or
loopne
decb
repnz
xchg
mov
test
dec
cmp
jmp
je
and
mov
movlps
bound
mov
mov
cmp
xchg
xlat
push
or
jle
pusha
xchg
mov
or
xchg
mov
inc
cmp
nop
cltd
mov
fsts
mull
dec
inc
in
es
stos
jne
popa
add
adc
ficomps
scas
shrb
mov
xchg
cmp
outsl
xchg
sti
mov
lahf
pop
mov
push
sbb
insl
ret
mov
loopne
cmc
and
dec
push
mov
sub
cltd
xchg
jmp
and
pop
movsw
jge
test
mov
pop
in
dec
ja
pop
lret
mull
or
push
popa
fistpll
movsl
daa
int3
in
sub
movsl
adc
out
mov
jmp
lahf
call
pop
mul
in
out
and
xor
or
cwtl
xchg
mov
pop
pop
push
cmpsl
jbe
or
ss
mov
or
lret
lcall
dec
outsl
xlat
clc
push
jmp
dec
and
push
adc
addr16
jg
mov
enter
pop
pop
and
xchg
inc
or
jmp
add
xchg
mov
push
mov
outsl
mov
int3
in
popa
loope
lods
loope
lcall
mov
out
xchg
mov
lret
popf
push
cmp
in
mov
sub
aam
push
repz
leave
test
adc
sub
jmp
xlat
adc
adc
out
scas
mov
inc
je
cmp
or
or
ss
call
jbe
jge
xchg
fnstsw
testb
das
jnp
push
popf
dec
daa
or
xchg
adc
cli
lret
insl
xlat
xchg
and
and
jmp
mov
out
and
cmpsl
inc
mov
xchg
mov
aas
fbstp
jmp
cmp
repnz
push
xor
setae
stos
sub
mov
xchg
xchg
orb
jne
xchg
cmpsb
mov
xchg
in
push
stos
push
jns
fisttpll
sbb
cmp
std
push
sahf
pop
cmpsl
mov
scas
jbe
scas
ss
shl
mov
out
cmp
dec
dec
fnstcw
pop
push
out
adc
nop
lds
leave
and
sub
in
mov
add
cmp
cmp
out
mov
in
adc
test
mov
idiv
push
jo
shlb
hlt
adc
dec
scas
cmp
shl
lahf
add
out
lock
es
inc
es
in
int
cmc
cmp
pop
lret
xchg
ss
and
cld
ret
add
lock
rolb
jl
in
add
insb
adc
sti
push
jge
ja
add
inc
cmp
stos
mov
mov
xchg
xchg
outsb
push
int
sub
jne
lods
adc
mov
cmpsl
push
cmc
leave
arpl
xor
jne
lret
inc
imul
mov
jb
adcl
inc
xor
lods
es
xchg
jle
sbb
dec
or
pop
jmp
fs
test
lods
push
push
cmp
mov
push
out
das
test
addr16
aas
loopne
orl
subl
lea
cmp
mov
sbb
pop
enter
and
outsl
cmpps
fdivs
aad
mov
inc
repnz
xchg
jg
mov
or
out
in
roll
fadd
xchg
cmpsb
test
fildll
test
test
insb
push
mov
jnp
aam
adc
cmpsl
lret
or
ljmp
add
ret
xor
call
repnz
mov
in
imul
pop
sub
addr16
ljmp
pop
sub
popf
cltd
mov
mov
xor
sub
ja
sbb
frstor
in
xchg
lahf
mov
inc
testl
push
push
popl
jle
lock
xor
gs
or
out
popf
sbb
mov
inc
aas
xor
cmp
inc
xlat
leave
pop
adc
lret
and
es
pop
fildl
mov
or
loope
or
repnz
jp
ljmp
lahf
adc
loope
les
mov
rorb
subb
xlat
push
pop
dec
lahf
loopne
out
test
ret
xor
push
xor
outsl
push
aad
xor
mov
fidivrl
xor
add
lock
out
or
stos
repnz
push
mov
cmp
sub
cmp
add
mov
and
mov
cmpsb
mov
inc
xchg
jmp
and
xorl
pop
movaps
aad
lret
mov
scas
iret
dec
xchg
dec
ss
stc
test
cmpl
sub
cmpsl
mov
adc
aas
or
cmp
cmc
jne
mov
jb
orl
popa
div
cli
push
xchg
ja
clc
lock
in
pop
mov
rcrb
jnp
jne
lahf
add
xchg
pushf
aas
out
or
mov
jle
loopne
jbe
loope
sub
sub
adc
jle
cmp
ret
in
mov
push
jns
cmpsb
mov
pushf
dec
adc
cs
fwait
jns
cmp
stos
xchg
jl
fldl
repnz
test
call
sub
scas
push
jmp
cmp
in
lahf
and
mov
in
mov
jb
adc
lret
xor
add
loop
popl
sbb
out
shll
mov
fmull
push
push
jmp
mov
inc
in
iret
std
call
or
cmpsl
icebp
subb
mov
dec
jecxz
inc
idivb
fdivl
loop
incb
push
or
adc
fwait
mov
adc
shll
pop
mov
adc
dec
imulb
xchg
dec
out
add
push
jbe
mov
jo
lods
inc
repz
add
insl
out
testb
jmp
scas
pop
movsl
addl
hlt
dec
xchg
dec
shlb
addr16
xlat
dec
inc
ficompl
bnd
add
addl
sub
scas
mov
rclb
add
add
mov
paddb
cwtl
dec
out
cmp
push
cltd
jne
xchg
in
mov
mov
inc
pushf
mov
je
cmp
clc
lret
mov
outsl
xchg
jb
xor
aad
cmp
les
imul
stos
xor
popa
cmp
push
jnp
or
mov
cmp
cmp
xor
test
xor
or
aas
lock
jno
adc
cmpsb
call
aaa
out
cmpsb
mov
jno
enter
in
data16
shll
enter
mov
rclb
jb
adc
dec
mov
mov
je
push
loop
xchg
and
pop
scas
cmp
stos
add
daa
adc
jne
rcll
movsb
decl
pop
fnsave
xor
xchg
pop
push
repz
ficomps
fs
cmp
sub
pop
test
or
out
icebp
dec
cli
cmp
push
test
lds
jno
int
test
ret
or
adc
test
xchg
adc
cld
movsl
stos
dec
mov
jne
out
int3
addr16
pushw
ds
mov
push
movsb
or
test
outsb
fnstsw
push
test
mov
inc
pop
loope
mov
sti
mov
mov
in
jl
sbb
xor
das
icebp
add
inc
pop
scas
mov
idivb
nop
xchg
cmpsl
leave
in
mov
sub
fisttpll
pop
pop
sbb
add
dec
in
add
mov
adc
js
sub
in
into
push
add
das
add
push
test
pusha
sahf
leave
push
insb
daa
xor
test
xchg
and
jae
or
jne
in
imul
lods
jae
cld
lret
jmp
outsl
dec
sub
sbb
pusha
jno
addr16
fmull
stos
adc
and
pop
jae
jmp
aaa
inc
jne
cltd
and
or
cmp
outsl
clc
cmp
pop
push
negb
push
pushf
push
stc
les
pop
ror
cmp
fisubl
xchg
mov
stos
sub
ss
mov
sbb
mov
xchg
cmpsl
pop
cmp
imul
std
xchg
iret
mov
or
test
arpl
adc
cltd
xor
les
movsl
cmp
jp
int
test
and
jns
lahf
bound
out
addb
mov
ret
lret
jmp
mov
daa
mov
inc
fs
jge
mov
xorb
loope
test
lcall
and
lea
sahf
nop
fldl
int
int3
jmp
cmp
stos
out
iret
add
cmp
push
sub
jle
xchg
mov
lods
insb
push
push
mov
push
imull
xchg
ds
pop
mov
stc
sub
ss
jle
outsb
stos
sti
jae
mov
into
fs
push
add
mov
jns
repz
addl
outsb
xchg
lock
lcall
int3
mov
out
jbe
aas
in
xor
outsb
or
fistps
cwtl
ljmp
jo
lahf
xor
pushf
fisubrs
mov
xchg
fcom
lcall
out
cmc
lods
and
add
fwait
adc
xor
xchg
stos
lea
push
popf
rclb
sub
cmpsl
es
mov
loope
adc
imul
sahf
lock
jge
add
addb
int
cmp
cmp
insl
sub
das
pop
js
sarl
dec
adc
lods
xor
incl
dec
fwait
xchg
mov
les
aaa
pop
outsb
fcomps
ja
mov
push
rcr
into
scas
dec
jno
ja
outsb
out
incb
out
out
ds
mov
dec
out
fisttpl
fsts
xchg
inc
jl
inc
push
jl
pop
push
addr16
insl
stos
mov
gs
xchg
in
cmpsl
out
inc
pop
xor
pmulhw
stc
ss
pusha
pusha
les
int
fwait
sbb
jmp
ficomps
adc
loope
dec
mov
testb
mov
mov
test
mov
mov
pop
imul
mov
mov
stos
jle
icebp
sbb
cli
fs
jmp
movsl
insl
mov
mov
pushf
nop
inc
sub
mov
je
rcll
out
loopne
xor
rcrl
mov
pop
insl
in
sub
lds
mov
mov
inc
sub
js
xchg
cli
test
xchg
filds
int
jne
jns
add
jnp
daa
jge
inc
ret
rol
ljmp
fs
pop
xor
inc
hlt
je
aam
mov
mov
loope
les
push
sahf
pop
aas
mov
fmulp
ds
lcall
jb
push
mov
lret
xchg
popa
or
aam
or
mov
push
iret
shl
add
push
rclb
inc
cmpsl
mov
pushf
lret
push
and
xchg
cltd
lret
jno
jbe
and
lret
enter
outsb
cmp
hlt
inc
rcll
das
icebp
lret
sbb
mov
ret
gs
or
test
scas
jbe
fidivrs
xchg
or
add
or
aas
shrb
jmp
mov
dec
cmpsl
xorl
cwtl
sti
jb
mov
sub
inc
jmp
mov
and
sbb
cmpsb
divb
nop
jno
sub
lods
jge
data16
stos
in
jno
pop
insb
sbb
jge
add
outsl
pop
sbb
xor
jb
xor
cmp
mov
mov
pushw
adc
sub
mov
dec
mov
jp
sti
dec
or
dec
subl
xchg
jne
inc
in
aam
test
cmpsl
jbe
cmpsl
pop
or
stos
pop
mov
dec
lret
in
fimull
dec
loope
sbb
pop
inc
out
push
push
push
mov
frstors
xor
push
jnp
sbb
jg
jbe
lret
not
in
pop
inc
lock
imul
mov
loope
mov
fwait
push
sub
cmp
addr16
xchg
ss
jb
cltd
test
inc
mov
pop
jecxz
wbinvd
adc
and
lds
pop
mov
xor
push
aad
dec
leave
ds
hlt
mov
mov
xorb
lods
out
test
sub
stos
adc
inc
xor
or
ret
mov
mov
xchg
stos
mov
pop
inc
test
or
cmp
inc
arpl
fwait
lea
jmp
jno
xchg
mov
and
sbb
mov
pop
mov
xor
lea
fdivrs
cmpl
addr16
outsb
push
pop
cmc
cld
addr16
xchg
mov
movsl
imul
mov
fsub
push
xchg
sub
nop
out
mov
loope
insl
sub
dec
int3
sarl
movsl
cmp
xor
sub
ljmp
xchg
fcmovnu
call
movsb
adc
jbe
sbb
scas
gs
push
popf
xor
movsl
pop
jecxz
fucom
cmp
fs
adc
lret
xchg
in
out
jecxz
pop
lods
jmp
stos
xchg
pop
movsl
ret
test
jbe
jb
in
rolb
pop
jle
jmp
ljmp
or
xor
jnp
pop
sbb
nop
test
jnp
lahf
mov
sbb
arpl
adc
rcrl
addl
jmp
fs
xor
dec
pminub
ds
loope
popl
and
les
jb
test
inc
cmpsb
scas
flds
lods
sarb
and
or
aad
dec
mov
inc
ficoml
notl
mov
pop
sbb
adc
jl
sub
lea
push
out
fisttps
xor
xor
xchg
cmpsl
imul
pop
lods
int3
and
jae
insl
hlt
adc
lea
inc
addr16
dec
ffree
dec
pop
pop
sub
adc
push
add
lock
xor
cmp
mov
jbe
mov
adc
mov
lret
test
add
in
mov
std
cmp
test
jae
push
cmpb
pushf
stc
jmp
aam
sub
xlat
adc
pop
mov
iret
push
call
inc
addr16
and
add
push
pop
hlt
jp
jmp
je
dec
mov
dec
sbb
cmp
fcompl
inc
fs
test
rorl
pop
popa
lock
scas
cmp
inc
dec
pop
sub
bound
or
popf
mov
dec
mov
or
inc
fistl
mov
inc
xor
imul
lcall
out
addb
in
popa
adc
pop
mov
mov
ret
mov
sub
mov
movsb
fidivs
inc
jnp
repnz
push
lods
orl
cmp
or
sub
xchg
adc
push
mov
xchg
dec
pop
mov
pushf
test
cwtl
lcall
xor
movsl
into
mov
dec
adc
stos
iret
fmull
adcl
inc
jmp
out
push
int3
fs
out
stos
jecxz
cmp
cmp
cmpsb
cld
fdivl
outsb
push
dec
es
in
pop
fs
in
mov
jg
mov
ss
mov
xor
sub
mov
cld
in
pop
adc
pop
mov
ds
jbe
data16
inc
adc
cmp
repz
add
jbe
sbb
cmp
stos
xchg
pop
push
mov
cmovns
jecxz
shll
jecxz
in
test
in
or
imul
in
test
movsl
fcomp
pop
jecxz
icebp
jbe
stc
ficompl
rcll
adc
inc
mov
inc
loop
loopne
mov
lret
mov
pop
sbb
lock
mov
loopne
sub
jp
sub
mov
shrl
push
cmp
aas
imul
insl
lea
out
mov
pop
idivb
and
insb
scas
dec
cmpsb
inc
and
fcmovbe
dec
dec
movsl
or
mov
mov
scas
pop
repnz
mov
jecxz
xchg
push
xor
jo
scas
add
adc
shll
pushf
test
aam
adc
dec
clc
xchg
lret
push
mov
xlat
pop
bound
or
inc
sbb
stc
cwtl
dec
and
pop
xor
pop
pop
mov
mov
mov
movsl
popa
outsl
out
repnz
repnz
dec
pop
out
in
jns
jge
push
or
sbb
mov
jo
stos
lods
std
mov
inc
imul
icebp
pop
fidivs
add
dec
xchg
mov
fisttpl
mov
ljmp
leave
cmpsb
push
xor
loopne
sbb
mov
movsl
scas
imul
aas
movsl
jp
ret
lds
xor
inc
sub
shrl
in
cmpsb
sahf
adc
aam
and
cmp
cli
sarl
clc
stos
orb
jae
cmpsl
ret
jnp
push
cmp
jae
or
mov
aaa
xor
mov
inc
aaa
mov
sub
cld
dec
popa
mov
cmp
ret
iret
add
std
jo
push
in
out
movsb
sar
aaa
inc
ret
rcrl
stos
cmc
stos
pop
or
push
xchg
inc
es
xor
cmp
insl
mov
es
sahf
pop
add
ljmp
push
jmp
jle
push
sub
jg
pop
mov
in
ljmp
mov
in
pop
jecxz
push
in
xlat
dec
xlat
add
cli
shlb
pop
std
and
fwait
aad
fsubrp
daa
pop
and
dec
pop
xlat
sbb
mov
push
push
mov
dec
in
lret
add
rcr
sub
rcr
mov
popf
lret
cmp
jbe
add
xlat
mov
dec
and
ljmp
inc
cmp
mov
mov
imul
inc
popa
aaa
mov
fs
jle
dec
jl
xchg
xlat
cmpsl
stos
mov
mov
filds
fidivrl
jns
mov
movsl
xlat
xchg
leave
lret
dec
cmpsl
ljmp
ror
rclb
pop
fdivp
imul
popf
ljmp
shl
jnp
std
pop
sbb
arpl
cwtl
cltd
jne
or
lret
pop
cltd
daa
ja
cmp
int3
xchg
or
inc
and
loopne
sbb
push
fildll
int3
cmp
fwait
ret
xor
in
icebp
adc
sbb
and
out
xor
sub
in
outsb
popa
pop
add
mov
cmp
outsb
or
daa
inc
stc
inc
adcl
sti
mov
push
test
outsl
cld
xor
ficomps
xchg
xchg
test
shrl
aaa
jae
call
jmp
add
fldl
inc
push
outsl
cmp
lret
and
inc
pop
mov
mov
cmp
dec
jnp
dec
pop
ror
les
sbb
clc
jecxz
lahf
aaa
inc
std
dec
adc
mov
add
insb
mov
fs
dec
adc
jg
bound
jg
push
clc
js
cld
xchg
popf
pop
xchg
and
and
sub
scas
mov
add
fwait
add
xchg
out
sbb
shll
out
fisubrs
out
lea
and
mov
inc
push
les
push
inc
sub
es
insb
out
ja
adc
in
and
jp
push
mov
mov
push
popa
xor
mov
push
mov
leave
xor
xchg
mov
dec
xor
test
cmc
pop
push
xchg
data16
in
inc
cwtl
jge
sub
mov
leave
mov
mov
dec
cs
jne
jecxz
arpl
in
test
dec
dec
mov
lods
xor
and
mov
stos
vshufpd
mov
lret
mov
mov
cmp
testl
in
xchg
clc
outsb
push
out
enter
mov
cwtl
ja
add
int
loopne
add
cli
pop
test
aad
add
mov
mov
jbe
mov
push
xor
adc
cmp
mov
cmp
aam
stos
fs
sbb
add
fidivrs
mov
shlb
push
adc
jae
mov
and
popf
mov
or
add
cmp
cmp
xor
fstp
sbb
cld
dec
add
out
mov
inc
pop
data16
mov
inc
inc
in
out
mov
jae
pop
adc
jae
or
inc
pop
sub
push
repnz
rcl
mov
dec
test
pusha
sarb
sub
mov
imul
mov
push
adc
or
leave
sbb
xor
inc
shll
lds
out
adc
movb
mov
fwait
sub
divb
sub
insl
stos
mov
inc
xor
cmp
pop
pusha
cmpsl
jb
xchg
sub
in
push
lds
test
gs
cmp
sub
mov
ljmp
inc
push
mov
test
add
push
popf
adc
fadds
mov
lret
call
cmp
cld
jle
clc
cltd
or
dec
mov
fwait
cmp
add
xchg
test
dec
adc
scas
rorb
fisubrs
xchg
cmpsl
sti
fldenv
movsb
or
lret
cwtl
stc
xchg
inc
ror
xor
insb
jmp
xchg
out
cmovb
arpl
xchg
decl
lret
mov
mov
mov
pusha
cmpsl
decl
stc
nop
xchg
scas
rcl
fwait
pop
add
xchg
les
popf
xor
adc
repz
mov
xchg
adc
xor
shl
xlat
mov
cld
dec
sarl
iret
mov
loope
fnstenv
pop
jae
or
out
adc
lret
imul
subb
mov
push
lods
sbb
cmp
xchg
sub
out
arpl
push
add
push
pop
pop
in
lods
stos
mov
aad
or
or
jae
mov
xchg
cmp
loopne
xchg
cmpsl
fstpl
scas
or
mov
fistl
inc
out
stos
push
inc
xchg
loope
sub
loopne
mov
or
mov
and
sub
mov
movsl
inc
ljmp
fisubrl
imul
outsb
repz
movsb
pop
or
jl
sub
test
xchg
pop
pop
stos
jne
pop
jmp
mov
sub
js
push
push
loop
out
lds
mov
jecxz
mov
dec
repz
inc
repz
cmpsl
or
add
adc
das
in
pop
xor
lret
aad
inc
fcomps
push
push
es
cmp
mov
push
test
mov
push
adc
cmpsb
imul
pop
xlat
or
mov
movsb
dec
test
jo
jae
dec
scas
or
pop
jecxz
dec
shl
push
lret
ja
insl
orl
shll
addr16
xchg
inc
fbstp
push
cli
scas
dec
and
hlt
dec
in
push
lahf
ret
cmpsl
stos
je
dec
js
inc
xchg
pop
movsl
ret
push
ret
mov
fsubrl
jae
xchg
sub
movsl
mov
or
addb
loop
cli
cli
ljmp
decl
add
rcrb
mov
inc
mov
rorb
div
fdivr
jae
shrb
jno
test
testb
cmpsb
lods
movsb
scas
mov
mov
dec
xchg
push
leave
and
jne
jo
add
test
lahf
cmp
push
or
dec
mul
aad
fildll
xchg
pop
sarb
push
push
aaa
sub
xchg
into
lods
jmp
cmp
or
mov
sti
les
dec
aam
ror
outsb
aam
inc
rorb
ficoms
dec
test
jae
and
jne
sbb
or
and
fsts
gs
adc
js
jle
out
scas
sub
and
gs
and
movsl
mov
sarb
sarb
mov
sub
lea
addb
bound
fistps
jnp
jns
mov
outsl
cmpsb
enter
in
stos
xor
add
mov
mov
mov
test
cli
test
mov
and
inc
lds
inc
and
xor
flds
add
xor
fisttpll
lret
aam
xor
sarl
xor
adc
cmp
push
in
mov
sbb
andl
ficoms
mov
or
loopne
pushf
and
rolb
inc
lret
lea
fdivs
xor
dec
in
inc
push
stc
push
push
fadds
popa
mov
adc
or
cmpsl
mov
fistl
push
orl
int3
push
push
in
dec
jmp
mov
pop
fstl
jb
or
or
push
xor
leave
pop
push
scas
pop
or
mov
fbld
and
cmp
and
in
stos
insl
cmpsb
jecxz
jl
sbb
xor
add
mov
nop
add
mov
jecxz
add
jae
xchg
imul
push
loopne
shll
dec
cmpsl
jp
int3
mov
sub
mov
mov
xchg
jmp
popf
mov
sub
loope
negb
loope
inc
addr16
push
dec
jle
lods
stc
clc
addl
adc
jns
int
mov
mov
subb
adc
lahf
enter
clc
je
mov
cwtl
mov
xchg
and
mov
push
iret
clc
mov
shl
mov
rol
pushf
pusha
and
andl
je
and
fwait
pop
ja
lahf
nop
test
mov
cli
jle
ds
loopne
adc
xor
inc
sbb
adc
fsubp
mov
or
inc
in
push
sbb
xchg
xor
mov
mov
mov
xor
fildll
hlt
into
inc
es
rcll
xor
xor
stos
adc
adc
mov
rolb
lret
repnz
push
xor
mov
clc
jmp
and
inc
xchg
sahf
cmpl
popf
sahf
repnz
cli
xchg
dec
inc
repnz
pop
add
add
or
je
mov
out
lcall
jne
and
ficomps
xor
mov
flds
mov
jmp
lahf
push
cli
and
inc
mov
jl
scas
hlt
xor
and
mov
js
out
or
fdivrl
icebp
jg
mov
ficoml
dec
iret
out
push
sub
xchg
and
je
bound
in
inc
cmp
pushf
mov
scas
fwait
aad
or
daa
or
jns
mov
pushf
jp
shl
outsb
sahf
insb
inc
pusha
fidivl
test
add
mov
jo
out
orb
cmp
sbb
mov
dec
add
popf
jae
xchg
or
out
sub
in
loope
mov
jae
imul
cwtl
movsb
fsubrs
out
add
jmp
sbb
dec
pusha
push
or
mov
insl
cmc
ljmp
sub
cmc
sbb
sbb
inc
mov
popa
cmpsl
imul
dec
mov
mov
adcl
clc
ljmp
push
aad
test
scas
pop
or
stos
mov
clc
lods
test
mov
push
fidivrl
mov
faddl
sti
mov
int3
jl
shl
push
xor
mov
inc
jp
dec
xchg
clc
ds
out
mov
sbb
dec
and
pop
or
out
push
loopne
pop
dec
aas
or
cmpsl
mov
mov
das
iret
cmp
inc
xchg
add
xchg
mov
sti
addr16
pushf
das
adcl
cwtl
repz
out
outsb
adc
cmpsb
movsl
cmpsb
push
lods
cmp
or
clc
mov
and
imul
xchg
and
inc
hlt
lods
cld
subl
fidivrl
das
out
int3
shrl
mov
jmp
in
push
ljmp
push
fnsave
or
pop
mov
and
push
pop
and
mov
ds
jg
out
jnp
es
cwtl
push
ds
cmp
cli
inc
jg
std
jg
push
faddl
popf
cmp
mov
icebp
fdivl
lret
or
push
int3
or
xlat
xor
jg
mov
loope
iret
cmp
mov
lret
test
pop
fcompl
nop
push
jp
adc
gs
adc
mov
mulb
mov
nop
dec
outsl
mov
ljmp
test
lds
inc
clc
imulb
xor
xor
outsb
les
cli
cmp
lods
mov
inc
pusha
mov
rorl
flds
inc
or
jnp
push
push
dec
outsl
arpl
push
insb
jecxz
mov
lods
or
outsl
lods
or
xorl
faddl
mov
bound
cmp
fcompl
int
stos
cmp
and
lahf
push
daa
sbb
jl
jbe
dec
cmp
mov
cmp
addl
and
xor
lods
gs
lock
lods
cmp
fistpll
lea
mov
jae
or
sub
or
fldenv
inc
jne
fnsave
mov
dec
jg
or
jg
dec
add
movsb
ja
or
repnz
mov
mov
insb
pop
mov
sahf
push
out
filds
clc
cli
or
test
dec
cli
cmp
push
mov
fdiv
xor
mov
pop
or
mov
adcl
rol
movsb
adc
xchg
rcrb
or
and
sar
std
in
xchg
clc
inc
xchg
fcomps
push
mov
or
cmp
xor
jmp
popa
xor
ficoms
push
movsb
hlt
in
test
mov
adc
dec
test
shll
scas
mov
insb
lret
cmp
dec
xchg
push
lea
xchg
decl
insb
lahf
mov
mov
cltd
mov
addr16
push
mov
movsb
or
enter
enter
mov
mov
dec
outsb
add
and
cmp
shlb
fldl
and
lods
mov
push
mov
repnz
or
adc
insb
mov
push
cmp
add
cmp
mov
mov
lods
cmp
fisubrs
dec
sub
inc
and
and
lds
sub
repz
push
pop
jmp
cmp
mov
dec
aaa
ds
fnstsw
or
add
movsl
popa
cs
sti
sbb
pop
jne
lea
pop
orl
mov
or
mov
jne
xor
les
test
xchg
mov
outsl
outsb
outsb
jp
jg
adc
sub
xchg
xchg
mov
out
push
xchg
jne
pop
adc
inc
push
jae
push
mov
pop
fstps
lea
and
repnz
nop
cld
cli
add
mov
mov
push
and
cmpsl
addb
mov
jne
test
cmpsl
inc
sbb
fisubl
int3
mov
xchg
jbe
cmp
xchg
mov
cltd
jnp
cs
or
mov
pop
cld
sub
mov
adc
in
cmpsb
dec
mov
mov
inc
testl
stos
mov
push
cs
test
popa
andl
xlat
out
jae
insl
pop
cmp
jnp
ja
pop
leave
je
sub
mov
lret
cmp
iret
mov
sbb
push
loope
cli
dec
movsb
jae,pt
sub
add
daa
stos
mov
cmp
sti
mov
int
insb
dec
dec
fldcw
pop
fmul
ret
repnz
je
xchg
or
out
je
jp
clc
xchg
lret
sub
push
and
fcoms
mov
xchg
pop
push
xor
mov
or
jmp
clc
mov
test
push
mov
lock
clc
lcall
sub
aad
push
negb
in
mov
or
orl
jns
inc
mov
mov
dec
fsubrs
ljmp
scas
pop
xchg
pop
pop
xor
mov
push
cmp
setae
jmp
jne
insl
stos
lock
xor
cli
lahf
dec
ja
mov
and
movsl
lock
dec
push
sub
add
subb
into
pop
mov
mov
fdivs
push
xor
mov
daa
jb
addr16
inc
les
ds
call
jg
loopne
outsl
mov
dec
mov
sar
aam
inc
in
jecxz
sbb
cmpsl
ljmp
lock
cmp
xlat
inc
cmpsl
add
and
cmpsb
xchg
and
loop
cli
mov
mov
mov
leave
or
fidivrs
fstpl
inc
sub
sbb
push
lods
xchg
mov
lds
push
std
sbb
outsb
fadds
push
scas
add
out
mov
xchg
repnz
xor
inc
mov
push
push
mov
fadds
mov
push
xchg
cld
inc
xchg
sti
das
repnz
pop
xchg
stos
mov
pushf
fwait
mov
mov
stc
jne
hlt
insl
lahf
lahf
outsl
cmpsb
fbld
mov
mov
mov
cmpsl
cmp
mov
scas
repz
pop
imul
mov
cli
test
lret
push
inc
fimuls
inc
mov
stos
idiv
and
pop
xor
xchg
sub
stc
or
pop
cld
dec
dec
and
andb
mov
inc
das
pop
jmp
into
lods
je
repnz
mov
xchg
in
fidivl
clc
insb
cwtl
mov
inc
out
es
call
and
pop
push
xchg
mov
sbb
testl
push
out
xlat
fcompl
insb
mov
push
cld
add
test
fsubs
adc
mov
outsb
mov
leave
pop
pop
jmp
insb
mov
mov
in
idivl
mov
insl
add
mov
in
es
iret
push
mov
xor
sub
into
push
jnp
movsb
lahf
inc
adc
mov
clc
add
xchg
dec
mov
jp
fwait
adc
push
adc
pop
inc
jge
sub
arpl
or
or
test
call
cmp
lahf
inc
cmpsl
std
xchg
enter
inc
xchg
repnz
adc
sahf
push
pop
outsl
inc
call
mov
pop
push
out
je
ss
or
or
lock
xchg
mov
outsl
cmpsb
mov
aad
in
or
cmpsl
aad
into
jne
and
mov
sub
and
mov
jae
divb
mov
nop
xchg
lods
cmp
xchg
xchg
mov
xchg
push
push
es
xor
lds
sub
sar
pop
ret
inc
add
es
lahf
or
jmp
push
xor
adc
lret
sub
inc
pop
in
lds
fidivl
into
divl
insl
xchg
push
pop
aaa
mov
icebp
cli
inc
imull
das
pop
mov
lods
push
mov
popf
rcrl
test
sbb
pop
adc
int3
fucomp
pop
fldenv
data16
test
loope
je
pusha
or
repnz
outsb
xchg
sbb
push
rcrb
sub
stos
xchg
mov
imul
or
icebp
popf
or
lret
pop
xchg
mov
test
mov
enter
sbb
jl
and
mov
fidivrl
repz
pop
pop
adc
insl
inc
jnp
rorb
enter
push
call
push
push
cmpsl
mov
aad
sbb
aad
jns
icebp
add
scas
imul
mov
adc
jae
out
test
mov
push
movsl
mov
mov
pop
aam
inc
push
in
xchg
mov
push
push
push
mov
fdivl
inc
pop
enter
lds
jl
cmp
cmp
lahf
sbb
leave
push
mov
push
mov
sbb
mov
mov
call
pop
rcrl
cmc
cmp
lods
mov
dec
gs
iret
scas
cmpsl
fstpl
stc
push
push
fs
das
sub
add
sbb
mov
xchg
xorl
sbbl
fistpll
sbb
mov
mov
jne
cmp
adc
call
inc
pushf
jge
dec
jns
lret
stc
cmp
cmp
sub
int
and
or
push
ja
popf
inc
addr16
lods
gs
mov
fldl
movsb
push
cltd
inc
lahf
adc
aas
push
lcall
sbb
int
dec
cwtl
in
jle
cltd
outsb
aam
jno
push
scas
push
int
fimuls
jnp
mov
imul
inc
nop
bound
jl
test
clc
xchg
pop
mov
mov
pushf
cmp
clc
pusha
xor
mov
push
dec
xchg
push
mov
ficoms
in
out
mov
add
gs
ret
and
mov
fwait
mov
ret
push
dec
cli
jl
fiadds
inc
mov
daa
iret
fs
ss
add
jnp
ds
hlt
or
jae
jne,pn
or
or
faddl
pop
cmp
mov
es
mov
ret
or
cmpsl
bsf
adc
fiaddl
pop
lods
arpl
add
add
pop
movb
shlb
push
stc
pop
mov
fisubs
cld
mov
push
mov
xchg
push
outsb
or
and
sub
imul
push
fdivl
adc
cmpsb
fdivl
add
test
outsl
and
xchg
or
cmp
hlt
sbb
lds
das
mov
lods
jbe
pop
insb
mov
jno
notl
clc
push
ljmp
push
xchg
loop
ja
pusha
inc
in
test
dec
mov
std
sbb
lds
pop
push
xchg
adc
or
and
repz
aad
in
fdivp
jo
push
adc
mov
ds
add
mov
sbb
pop
xchg
ljmp
inc
ret
stc
xlat
cmp
sbb
cmpsl
or
shrb
ror
lret
lret
mov
lds
dec
push
in
sahf
das
mov
push
push
xor
jns
ret
faddp
pop
lds
xchg
sbb
push
xchg
stos
pop
jae
daa
mov
and
shr
mov
mov
subl
sti
mov
cmp
adc
lods
in
sarl
das
stos
orl
out
mov
fwait
lods
outsl
cmp
in
aaa
add
or
out
bound
pop
and
dec
or
scas
cs
xor
mov
xchg
icebp
in
add
sub
adc
pusha
into
and
xchg
aam
adc
mov
ja
mov
scas
fcomp
jge
je,pn
stos
sub
pushl
lret
xor
sub
rclb
es
xchg
mov
inc
sub
adc
ljmp
pop
pop
push
adc
sbb
cmpsb
push
es
jmp
out
mov
xchg
mov
fs
xchg
lods
sbb
out
pop
mov
stos
test
call
xchg
sub
rcr
stc
lret
lock
out
loop
addr16
jnp
rolb
lret
in
in
rcrb
fadd
sbb
adc
repz
mov
jg
push
push
pop
repz
or
pop
mov
add
xchg
xchg
mov
shll
push
sbb
mov
jle
mov
pop
es
adc
call
push
stc
mov
icebp
jne
inc
sar
sahf
ja
adc
rorb
adc
notl
in
ret
jp
test
lea
nop
pop
scas
nop
and
pop
xor
iret
sub
or
ret
jae
fnstenv
test
inc
inc
loop
mov
mov
out
mov
in
jecxz
mov
pop
repnz
push
out
jg
inc
dec
and
adc
sub
call
cmp
fadds
scas
jno
mov
sbb
scas
add
jmp
jns
cmpsl
jb
dec
cwtl
xor
push
jge
mov
inc
inc
cmc
mov
pop
push
sbb
xlat
inc
inc
jns
test
push
in
xchg
or
xor
sub
aaa
cli
cmp
shl
add
and
push
lods
mov
int
sub
sub
rcrl
rolb
mov
push
stos
sti
aas
popf
repnz
lcall
nop
push
loope
cmpsl
cmp
pop
sub
dec
out
ds
xchg
daa
xchg
stos
mov
pop
and
xor
mov
test
pop
aas
mov
aam
jg
jg
push
scas
test
mov
inc
mov
adc
gs
loope
into
jge
lret
sub
jbe
push
xchg
xchg
and
mov
cmp
xchg
jp
ds
xor
mov
push
dec
scas
jb
or
inc
popf
or
outsb
js
fs
mov
cmp
adc
aaa
cmp
sbb
dec
mov
lret
pop
fs
sbb
das
testl
in
add
jge
adc
gs
aas
sub
or
fsts
test
mov
mov
sub
sub
jno
fistpll
add
test
pop
aas
push
mov
fildll
pop
push
mov
cmpsl
popf
xor
das
mov
subb
dec
mov
dec
jnp
outsl
leave
mov
leave
popf
push
les
sbb
adc
xchg
pop
and
int
xchg
popa
pushf
int3
jns
sahf
popa
sbb
jp
insb
dec
jne
sub
sub
dec
xchg
pop
mov
cltd
pop
das
pop
xor
mov
loopne
nop
jns
mov
push
lock
cmp
movsl
addr16
dec
fmul
out
adc
aaa
xor
mov
cli
mov
movsl
into
adc
inc
mov
xchg
mov
dec
inc
call
test
mov
icebp
push
fcoms
ds
mov
pop
mov
mov
jle
jmp
cmp
and
cmp
xor
loope
jne
outsb
inc
fcmovb
mov
push
sub
repz
push
lcall
or
shl
rcrl
cli
mov
push
rcll
mov
add
sub
xchg
dec
jge
cli
mov
ja
js
and
arpl
mov
data16
cli
pop
mov
lahf
push
hlt
outsl
xor
aad
or
ficoms
call
addr16
out
lret
inc
pop
test
stos
lahf
aad
not
adc
xchg
outsl
sub
or
adc
inc
xchg
pop
aam
push
dec
mov
inc
hlt
mov
inc
pop
xchg
or
hlt
mov
mov
icebp
xchg
scas
cmpsl
filds
inc
and
xor
testb
inc
jg
int3
jae
push
in
iret
push
dec
test
xor
adc
sub
decl
icebp
push
mov
xor
pop
or
lods
popa
cmp
cmp
cs
jge
icebp
push
call
test
ljmp
or
subl
inc
mov
inc
sti
jne
xchg
out
cmp
pop
lret
xchg
in
out
lcall
mov
cmp
push
sbb
dec
pop
mov
adc
xchg
add
sbb
stos
xor
add
ret
push
adc
sbb
test
and
in
rcrb
cmpsl
or
cld
out
xchg
inc
ljmp
jmp
xor
xor
ja
lret
cltd
loop
inc
push
pop
in
stos
sub
sti
jl
mov
or
sbb
mov
jbe
xchg
sbb
aaa
stc
mov
clc
add
mov
out
inc
xlat
aas
pusha
scas
add
push
push
push
test
pop
fs
in
or
inc
outsl
push
adc
mov
push
push
or
cmp
repnz
cs
and
push
push
and
xlat
adcl
sub
cld
push
push
loopne
jecxz
fdivr
idiv
mov
xchg
lcall
insb
lods
dec
loopne
ljmp
fmull
in
push
fldt
fs
adc
jle
adc
outsl
jl
in
inc
popa
sub
mov
std
inc
lahf
insl
dec
mov
mov
inc
mov
je
xchg
jg
jno
ja
lea
psubsb
lods
adc
pop
adc
sub
inc
push
mov
or
add
mov
push
dec
adc
daa
sub
sub
int
pop
movsb
cmp
popf
outsl
sbb
jae
inc
ljmp
aad
jns
stos
inc
add
jmp
sbb
or
rolb
mov
popa
roll
mov
dec
inc
rep
sub
movsb
mov
popf
and
mov
sbb
and
cwtl
or
jmp
adc
mov
fwait
inc
sbb
xlat
ja
imul
cmc
pop
xchg
xchg
test
hlt
int
rcr
repz
xchg
jnp
test
cmpsl
ja
push
scas
idiv
adc
jp
test
stos
dec
push
xlat
push
jmp
add
rorl
mov
aaa
xchg
adc
out
cwtl
push
push
xchg
mov
insb
mov
and
subb
pop
mov
mov
loop
jmp
lods
mov
sub
sub
fistpl
pop
push
or
push
push
cwtl
repnz
jge
insl
fisubrs
inc
cmpsb
outsl
add
xor
and
cmp
js
in
repz
in
fsubr
fnstcw
scas
sub
fwait
push
shl
jecxz
mov
inc
lcall
mov
rcl
mov
jnp
sbb
jb
test
mov
out
push
adc
shll
cmpsl
div
imul
test
scas
cltd
push
insl
inc
popf
xchg
ljmp
icebp
loop
xchg
pop
dec
or
pop
inc
enter
je
fdiv
xlat
and
sahf
sub
call
es
test
push
mov
push
inc
stos
mov
cmp
lret
push
sub
adc
icebp
and
dec
cmp
xor
fsubrl
xor
xor
fnstenv
je
insb
lcall
sub
cs
clc
test
iret
mov
sub
jmp
ret
imul
mov
xchg
movsb
push
mov
sahf
addr16
pop
mov
data16
cmp
jmp
jmp
mov
ja
imulb
or
inc
lea
push
inc
dec
cmpsl
sbb
sbb
push
add
xchg
mov
push
movb
mov
test
mov
sub
je
pop
sbb
cmp
sub
repnz
inc
xchg
pop
test
or
cs
dec
lcall
push
les
std
mov
push
fmull
leave
sub
faddl
push
and
mov
fisubrs
xchg
dec
adc
jecxz
push
jns
out
xchg
iret
pop
movsl
xchg
dec
sbb
cmc
adcb
pushf
scas
lea
mov
jb
mov
sbb
or
test
xchg
addr16
cmp
xchg
dec
push
sti
dec
cmpl
shl
or
rolb
fnsave
xchg
lods
add
push
jbe
inc
sub
mov
jge
dec
dec
lret
je
push
shll
stos
lea
xchg
or
inc
test
xor
pop
out
dec
das
add
outsl
cmp
je
add
and
push
icebp
cmc
dec
loope
cmp
lods
lret
inc
mov
mov
jle
cmp
ljmp
sarb
pop
push
jp
and
or
pop
loope
push
aas
pop
sbb
aas
icebp
or
mov
jo
imul
test
jg
sbb
pop
dec
jne
inc
adc
xchg
hlt
pop
mov
stc
push
dec
mov
insl
mov
jnp
pop
popf
test
or
jle
test
cld
xchg
loop
aam
ret
movsl
jnp
lods
and
loopne
in
ds
and
inc
sbb
mov
in
lahf
lret
pop
jg
lret
or
fs
clc
mov
cmp
lds
cmpsb
pop
adc
adc
js
insl
xor
jecxz
in
je
dec
dec
xor
sub
cli
push
das
orl
fs
movsl
and
mov
dec
mov
outsb
sti
sahf
jo
inc
xchg
dec
xchg
xchg
pop
xchg
addr16
fwait
fwait
mov
pop
arpl
xor
pop
int
sbb
decl
bswap
mov
jmp
dec
add
enter
lods
xchg
push
lret
lahf
ljmp
mov
out
icebp
dec
or
xchg
std
mov
jns
mov
or
stos
jl
shr
add
push
mov
adc
push
inc
mov
mov
mov
test
movsl
and
pop
mov
xchg
mov
movsl
xchg
and
cmp
push
sbb
ficoml
pop
aaa
inc
fcmovnu
sbb
fs
ret
sub
in
inc
add
mov
adc
clc
jecxz
jmp
or
cs
mov
in
jmp
push
movsb
sbb
push
dec
push
lods
cmp
aad
rcll
jl
cmpsl
sbbb
jno
lods
sub
ret
sub
inc
ficomps
es
xchg
addr16
gs
je
imul
xor
mov
pop
fcmovnu
jns
ljmp
movsl
sub
mov
ljmp
out
cs
xchg
fiadds
dec
and
lock
movsb
adc
pop
sbb
imul
sbb
xor
push
push
sub
mov
and
sub
insb
push
bnd
je
mov
adc
cmpsl
fstl
nop
sub
cmp
fs
sarb
dec
sbb
outsb
mov
imul
pop
adc
sbb
mov
or
add
jp
lods
dec
imulb
or
or
lods
ss
jmp
mov
cmp
cltd
jb
outsb
mov
ljmp
js
or
pop
repnz
mov
sbb
mov
mov
imul
mov
fbstp
cltd
gs
aas
mov
roll
pushf
fstpt
in
mov
out
jmp
xchg
adc
mov
mov
sub
cld
lret
lock
dec
xchg
xchg
imul
cmp
sub
insl
cmpsb
cwtl
mov
add
lock
inc
xchg
gs
cmp
sbb
cmp
or
push
pop
xor
stos
sbb
mov
jge
xchg
or
lock
lds
mov
push
orl
sub
or
mov
pop
xchg
cmp
inc
aaa
add
lods
cmp
inc
int
ret
orl
pusha
rcll
add
dec
sub
push
test
shl
cmp
lock
xor
pushf
xchg
mull
sbb
xlat
test
xchg
cmpb
jmp
pop
xchg
outsl
popf
test
pop
mov
push
and
repz
fcmovbe
xor
adc
movsb
ret
cmpsb
stc
lea
dec
xchg
ficoml
jns
ljmp
dec
adc
jae
std
mov
sbb
jne
cs
and
add
xchg
insb
mov
lret
mov
sub
mov
hlt
add
mov
dec
jl
inc
mov
mov
mulb
rclb
mov
out
fwait
hlt
jb
and
fs
push
inc
and
insb
lods
cwtl
inc
out
mov
pop
jecxz
rdpmc
jge
icebp
and
subb
insl
xor
nop
test
mov
add
mov
mov
sub
add
shrb
in
out
repnz
cmpsl
cmp
or
fimuls
cmc
ficoml
push
or
xchg
mov
sbb
sti
std
inc
stos
cmp
icebp
in
popl
aas
mov
scas
cwtl
push
daa
sub
jg
sti
xor
lahf
repnz
mov
psraw
mov
or
xorb
cmp
addr16
sbb
shlb
insb
scas
shrl
mov
xor
mov
repz
push
movsb
mov
xchg
mov
imul
repnz
scas
enter
enter
stc
pop
mov
das
ret
cmpsl
pop
mov
sahf
jg
into
jo
push
mov
push
aad
sbb
cmp
inc
test
lock
stc
add
outsl
push
add
mov
in
jae
mov
mov
sub
fxam
xchg
bnd
mov
mov
jne
int3
imulb
es
sti
jae
movsb
add
mov
dec
adc
mov
setns
out
xchg
gs
mov
scas
inc
pop
mov
and
ja
fs
mov
adc
test
mov
dec
or
aam
testl
aad
cli
es
adc
divb
lahf
push
enter
inc
push
xchg
insb
xchg
cmp
and
and
cld
push
fisttpl
push
cli
mov
inc
test
push
outsl
lods
jne
mov
mov
cmp
outsl
push
insl
icebp
dec
dec
test
fcomi
or
popl
push
and
pop
sbb
or
fstpt
je
cmp
movsl
push
dec
out
lods
add
pop
decl
jmp
lods
rcll
mov
mov
movsl
or
into
dec
in
outsl
ja
jmp
mulb
sar
shl
push
and
jns
outsb
lcall
mov
dec
adc
or
push
mov
out
repnz
out
adc
pop
add
or
test
scas
mov
or
adc
mov
jg
push
test
push
aaa
loop
outsl
mov
pop
les
imul
aas
outsb
sbb
adc
adc
scas
jo
imul
icebp
or
sub
pop
int3
jne
push
xor
daa
int3
push
movsb
xor
inc
icebp
inc
sub
fsubl
call
call
mov
xor
pop
int
sbb
sub
aad
xchg
out
sbb
lock
cli
mov
insl
cwtl
imul
cmp
jle
je
ljmp
dec
jl
nop
xchg
insb
sub
pop
mov
sbb
fcmove
pop
dec
cwtl
ja
aam
push
mov
mov
jg
rcr
sub
or
movsb
clc
fnstenv
mov
shr
aam
jae
push
xorb
nop
jmp
mov
scas
pop
sbb
mov
cmp
outsl
das
lahf
dec
push
mov
dec
andl
dec
mov
lea
push
xor
repnz
xlat
faddl
add
mov
stos
std
pop
stc
setae
push
lds
xor
lahf
fistpl
adc
push
aad
out
lcall
xchg
je
int
push
cmp
sbb
dec
push
jb
jmp
imul
jecxz
cli
or
xor
popf
lock
mov
out
jge
loope
pop
pop
cmc
mov
outsb
jae
pushf
ja
or
pushf
fsubrp
dec
jg
mov
push
std
int
repz
sbb
test
fidivs
push
ss
ljmp
mov
mov
pusha
lret
xor
bound
and
sahf
lea
daa
mov
pop
pop
xchg
fwait
inc
or
int
fisubrl
xchg
sbb
mov
sub
mov
push
daa
cwtl
fadds
inc
daa
pop
aas
stos
push
push
push
pop
lds
in
sub
mov
mov
dec
xchg
iret
xor
lods
daa
adc
or
add
mov
cli
lcall
mov
cmpsl
add
and
xorl
shr
adc
call
icebp
aas
imulb
fdivr
jecxz
test
and
fwait
adc
pop
xor
movsb
sub
jmp
fldcw
jle
fldt
rcrb
mov
lock
add
iret
scas
mov
inc
and
xor
dec
loop
mov
add
mov
xchg
pop
dec
mov
add
jmp
or
mov
inc
ja
jae
icebp
call
fidivl
dec
sbb
ja
xor
adc
push
mov
mov
cmp
mov
ja
int
pop
add
jge
idivl
roll
dec
or
add
xor
inc
in
add
mov
xor
test
mov
outsb
or
push
movsl
outsb
and
repnz
mov
mov
bound
outsb
push
clc
fisttpl
add
test
xor
fdivl
cmp
insb
divb
outsb
inc
mov
out
out
in
rcll
jo
add
dec
mov
sub
fnstcw
test
mov
es
cmpsl
mov
popa
sbb
test
pushf
or
loopne
sbb
ja
jnp
xchg
and
inc
ja
mov
cli
xchg
cmp
out
fstpl
dec
or
fisubl
xchg
lods
std
movsl
fcoml
mov
cld
aad
inc
les
jecxz
in
dec
rorl
mov
popa
gs
or
or
stos
jns
pop
jae
push
mov
cmc
clc
iret
jae
adc
in
or
outsb
and
and
sub
lock
mov
nop
cmp
loop
leave
ds
jae
mov
hlt
adc
inc
std
testb
lret
aas
cmpsb
push
xchg
test
pop
addr16
inc
cli
pusha
test
jns
insl
mov
jns
mov
repnz
gs
cmp
icebp
js
inc
pop
xor
clc
call
lcall
test
cltd
push
pop
dec
sub
jecxz
cmpsb
cwtl
xchg
or
push
aaa
out
sbb
cmp
jne
scas
repnz
ret
sahf
push
cmc
mov
xchg
mov
xor
xor
and
push
xorl
fsub
sub
pop
cltd
push
pop
cmp
xchg
xchg
insb
or
cld
repnz
in
repz
push
jbe
inc
rcr
or
mov
sbb
adc
repz
adc
mov
cmpsb
dec
test
addl
stc
cmp
out
es
call
mov
in
pusha
xor
pop
sbb
daa
push
in
add
jl
jbe
addr16
rolb
fs
stc
pushl
push
stos
add
dec
add
sub
push
jge
adc
adc
jb
xchg
jo
adc
fiaddl
add
insl
mov
fildl
sbbb
call
ret
or
sahf
mov
fucomp
cmp
mov
mov
add
icebp
xor
cmp
jmp
arpl
stos
icebp
adc
mov
mov
pop
pop
jmp
aas
cmp
sti
and
dec
pop
jecxz
add
sti
mov
mov
mov
idivb
pop
imul
lret
stc
add
out
mov
push
add
push
scas
ljmp
xchg
movsl
mov
xlat
pop
movsl
sub
push
add
inc
lcall
and
imul
pop
mov
dec
aas
mov
cltd
test
or
in
insl
loope
adc
xor
cli
scas
jns
aaa
fadd
cmp
jb
test
or
in
iret
dec
shl
mov
pop
aas
mov
popa
das
aad
fbstp
mov
nop
imul
pop
in
test
fdivr
cs
in
mov
fists
xchg
popa
dec
mov
mov
sbb
jnp
mov
mov
lret
fildll
data16
enter
xchg
pop
pop
mov
push
push
cs
rcl
jae
fwait
mov
stos
pop
mov
ret
ljmp
mov
iret
daa
shr
mov
add
inc
and
cmp
ret
pop
cmp
dec
add
outsl
inc
dec
xchg
push
ljmp
add
pop
ds
adc
xchg
pop
mov
push
jmp
movsl
addr16
icebp
add
mov
lds
pop
push
push
inc
mov
fucomip
xchg
into
mov
add
xchg
scas
cli
inc
in
jnp
or
jle
xchg
jnp
mov
gs
pushf
js
push
dec
pop
xor
lods
and
insb
inc
arpl
inc
mov
fdivr
xchg
xchg
fmul
test
pop
dec
xchg
out
cmp
pop
pop
popf
sbb
xchg
xor
mov
in
and
cli
sbb
orl
mov
adc
xchg
mov
push
cmpsb
sub
test
shlb
push
and
insb
and
scas
daa
fs
push
stos
mov
adc
jae
cmp
cld
pop
mov
xchg
dec
clc
dec
out
fwait
scas
cmpsb
sti
inc
xor
mov
repz
sbb
pop
adc
call
fs
pop
adc
divl
daa
mov
dec
sbb
pop
ret
sbb
ljmp
test
mov
or
fsubr
lahf
dec
movsb
xchg
mov
popf
repz
add
sub
cmc
cmpsb
push
sbb
pop
out
adc
aam
std
cmc
hlt
sbb
add
jle
mov
sbb
mov
popf
dec
sub
push
insb
pop
cwtl
ret
out
cmp
mov
mov
push
and
adc
xorb
popa
leave
call
cs
sti
repz
stos
cs
lock
inc
cwtl
das
fidivrl
push
or
filds
add
xor
lret
adc
push
stos
ret
or
pop
test
ljmp
xor
xor
lahf
hlt
cmp
pushf
jmp
ds
jbe
fstpl
jmp
jecxz
daa
dec
in
mov
pop
in
xchg
or
mov
or
orb
pop
imul
mov
fstpt
in
mov
dec
mov
xchg
xchg
in
xor
add
inc
movsb
inc
jmp
in
dec
int
inc
dec
fbstp
dec
mov
arpl
add
push
xchg
fildl
nop
adc
fs
in
shll
out
push
mov
fisttpll
lds
fstp
mov
ja
ja
orb
lds
call
lahf
xchg
push
inc
das
in
cs
lock
iret
mov
mov
xchg
sub
sbbl
mov
scas
movsl
push
push
loopne
sarl
add
mov
jle
das
fcmovu
add
inc
stc
push
fwait
dec
push
jmp
sub
fildl
fwait
ljmp
int3
imul
adc
sti
push
movsl
mov
pop
in
gs
xchg
scas
cmpsb
cli
add
and
and
fs
std
lock
push
adc
ret
mov
out
das
inc
leave
cmp
push
jp
out
sub
ss
stc
in
jne
fcmovb
test
aad
inc
fildll
test
mov
xchg
sbb
jns
int3
add
push
push
or
xor
or
or
ss
pop
adc
ja
mov
mov
fsub
cmp
cmp
jl
repnz
push
sub
ljmp
orl
xchg
pushf
mov
dec
outsb
or
out
pop
sahf
jo
mov
cltd
icebp
mov
mov
dec
js
aam
xchg
lret
lock
inc
movb
ljmp
dec
int3
mov
mov
sar
mov
and
add
pop
aam
sub
rorb
sub
xor
adc
inc
sub
push
dec
cltd
adc
mov
cwtl
bound
daa
ret
stc
bnd
mov
lret
cmpsb
mov
ss
loope
inc
push
jmp
daa
loopne
sub
xchg
clc
mov
scas
jle
adc
test
cmpsb
pop
jmp
mov
sub
add
fwait
es
push
jecxz
pop
addr16
ljmp
pop
sub
imul
mov
rcr
cmp
test
cmp
test
adc
lods
xor
push
es
mov
jnp
push
xlat
push
push
data16
push
fdivrl
adcb
jb
push
imul
xlat
push
andb
xchg
out
in
nop
pop
aad
loopne
addr16
mov
movsb
mov
out
or
stos
mov
pushf
pop
data16
test
sbbb
or
push
pop
inc
pop
jns
cmpsl
int
clc
mov
je
mov
les
popf
mov
jnp
mov
jne
jb
pop
add
fcomps
pop
mov
sub
inc
push
xchg
xchg
add
mov
sarb
mov
not
push
mov
mov
lret
fcomip
mov
fsubrl
mov
sub
jnp
mov
stos
lock
dec
adc
jle
loope
repz
fadd
sbb
imul
rolb
mov
loopne
xchg
jecxz
push
xlat
insb
jg
xor
outsl
and
cld
sbb
insl
xor
movsb
cmp
add
dec
in
xchg
and
mov
inc
decl
clc
test
cmp
or
mov
push
mov
sbb
insl
adc
mov
sar
xlat
movsb
aas
and
cmpsb
loope
push
jne
das
xor
push
adc
xchg
add
inc
ljmp
insl
mov
or
pushf
xor
inc
bound
in
sub
lret
mov
mov
insb
push
repnz
adc
subb
lods
and
iret
lods
pushf
sub
lret
fcoms
push
movsb
jmp
or
mov
inc
mov
add
out
rorb
mov
push
outsl
lret
fwait
movaps
mov
jmp
and
or
inc
dec
mov
aam
xchg
mov
mov
cmpsb
jl
xor
ljmp
mov
popf
or
sbb
into
adc
int
nop
push
xlat
repz
lds
arpl
or
imul
data16
in
ret
and
xchg
mov
and
mov
fbstp
push
inc
lods
xchg
ja
shlb
pop
fs
adc
xchg
ja
pushl
inc
cmpsl
rcr
sbb
sub
into
and
mov
cmp
sub
fisttpl
ss
dec
push
dec
repnz
fsub
mov
mov
out
fcmovb
out
in
rorl
push
mov
jne
clc
add
mov
aam
sar
cmp
xchg
cli
xor
jne
call
daa
stos
xor
jmp
addb
jmp
or
js
repnz
sub
es
mov
lods
mov
xor
test
out
mov
push
test
clc
adc
xchg
movsl
mov
pop
or
mov
jecxz
fld
push
in
cmpsl
or
mov
push
dec
sbb
mov
or
mov
xchg
mov
js
sbb
or
mov
pop
push
cmp
cmpsb
icebp
popf
insl
faddl
push
mov
jne
pop
shr
or
sbb
jmp
jle
push
mov
adc
fisttpll
nop
sbbb
sti
pop
rolb
jmp
pop
mov
lods
jno
insl
test
fxch
js
pop
mov
cmp
and
inc
mov
ljmp
pop
sti
or
out
xlat
cmp
cli
fs
nop
cld
inc
lock
jl
mov
iret
add
outsb
and
jg
mov
dec
aaa
cmp
mov
cmpsb
rcr
mov
jne
cmp
ja
mov
lret
iret
hlt
mov
cmp
and
sbb
sti
cmp
nop
xor
xchg
cmp
lds
add
mov
xchg
xor
lods
dec
movsl
xchg
xchg
andl
or
nop
cs
push
scas
sub
mov
out
push
sarb
mov
or
daa
mov
shlb
or
lret
lcall
or
out
mov
cld
pop
add
mov
dec
insl
jns
pop
xchg
pop
mov
lcall
movb
fisubrs
addr16
pop
out
xorps
mov
out
sub
or
mov
pusha
push
add
push
pushl
dec
decb
bound
je
cli
mov
fistl
fsubrs
inc
ret
push
cltd
mov
jg
mov
push
sti
dec
mov
shlb
test
fwait
adc
movsl
notb
fidivl
push
fs
mov
fistl
nop
ds
jl
add
inc
in
dec
or
mov
add
cwtl
push
std
mov
cmpsl
ficompl
and
jns
xchg
lret
movhps
mov
sbb
cwtl
es
push
mov
daa
in
aaa
arpl
fyl2xp1
or
clc
cmp
mulb
push
jb
out
mov
ret
rclb
adc
mov
movsl
popa
test
xchg
imul
cmpsb
arpl
sub
sub
push
and
out
dec
adcb
push
popf
adc
call
dec
cmp
int
xchg
lret
scas
push
iret
add
push
bnd
sub
push
push
pop
or
jae
mov
in
out
out
imul
mov
or
mov
push
sbb
pop
xchg
scas
ret
stos
mov
or
xchg
mov
and
or
ror
test
cmpsb
insl
sbb
inc
mov
hlt
mov
cmpsb
popa
jecxz
test
or
mov
loop
jne
jle
mov
cmp
xchg
add
cmovns
orb
pop
clc
xchg
add
imul
divb
pop
and
jl
xchg
dec
mov
and
cld
rcll
push
push
push
aad
call
jne
lret
sarb
xchg
xor
and
cmp
or
clc
jl
movsb
cmc
clc
ret
xchg
jne
data16
mov
fbld
imul
in
gs
jae
pop
xlat
sbb
inc
sub
mov
push
pop
fdivrl
out
sti
test
popf
xchg
add
test
jbe
cltd
mov
mov
dec
xor
cwtl
lahf
sub
pop
sbb
or
sti
arpl
ss
lods
mov
test
xchg
outsb
adc
insb
jp
out
xchg
xchg
lock
mov
roll
cmp
orl
lds
xchg
popl
xchg
push
cmc
scas
loop
outsb
popf
push
pop
std
rcl
sbb
arpl
jne
add
cmp
mov
add
push
xchg
xchg
sub
ljmp
sub
popf
sbb
lds
fisubs
movsl
jb
or
mov
mov
out
xchg
add
call
xor
xacquire
xchg
cltd
rolb
xor
adcl
mov
fadds
popa
popa
rorl
sti
sbb
add
mov
dec
int
push
dec
out
ficoms
pop
fwait
cld
movsb
xchg
adc
repnz
inc
mov
int
xchg
aas
adc
mov
fiaddl
js
lahf
ja
push
mov
lret
shlb
xor
or
xchg
xlat
adc
xchg
pop
fwait
sbb
cs
out
xchg
and
sub
xor
rorb
or
out
cld
repz
imul
or
xchg
sbbb
ds
dec
lcall
cli
insl
mov
ds
cs
in
repnz
xor
jb
lahf
mov
aaa
push
xlat
inc
lahf
fs
inc
pop
cltd
sub
cli
and
xchg
push
adc
xchg
ret
mov
add
cwtl
dec
jg
fsubr
addr16
outsl
push
out
or
adc
cmpsb
sahf
lods
xor
cwtl
lret
mov
rcrb
adc
incl
call
dec
stos
pop
into
jae
mov
jne,pt
cs
rcl
rcrb
and
dec
mov
pop
ljmp
aam
test
test
imul
enter
clc
shlb
sbbl
xchg
mov
outsb
mov
dec
in
int
sub
cmp
enter
sub
fmuls
gs
pop
inc
xor
mov
jge
out
sbb
mov
out
or
sub
imul
loop
lock
movsl
mov
push
xchg
movsl
inc
push
outsb
mov
in
fs
or
stc
pop
or
jle
mov
inc
fcmovnbe
dec
repz
jb
loop
mov
mov
out
or
lcall
add
in
cli
xchg
cmp
sbb
cmpsb
lods
dec
iret
in
in
pop
aad
jbe
mov
dec
shll
pop
mov
jg
leave
add
xchg
adc
fstps
loop
jmp
cwtl
mov
jne
inc
arpl
pop
cmc
xchg
sbb
lahf
fwait
addr16
bound
out
xchg
push
xchg
out
pop
xchg
fstl
call
fwait
mov
into
cmc
push
xchg
add
dec
or
push
fsubl
cli
scas
fs
pop
rcrl
orl
mov
jno
dec
xchg
xchg
imul
ficoml
mov
mov
pop
mov
jp
pop
jne
bound
mov
mov
lds
sub
dec
sbb
sbb
insl
mov
shl
in
add
cmp
push
shll
and
testb
inc
out
pop
out
mov
xchg
adc
push
add
pop
dec
lods
insb
push
mov
xor
cmp
cmp
test
rorl
mov
scas
jnp
addl
and
inc
xor
xchg
mov
cld
data16
lcall
xlat
lods
repnz
cmpsl
cmc
push
es
iret
outsl
add
and
pusha
cmp
jo
imul
add
jge
dec
fsubr
pop
cli
sbb
ss
cmpsb
loop
adc
aad
mov
add
and
xchg
lock
xor
stc
cmp
sbb
dec
fsubs
pop
xlat
sbb
and
repz
cltd
ficoms
fdivrl
out
addr16
in
fcomps
cmp
in
fisttps
lods
fists
mov
jg
mov
test
mov
movsb
fs
mov
rcrb
or
inc
rclb
xor
mov
mov
jge
test
push
xor
idivl
mov
mov
aaa
cltd
xchg
dec
cmpsl
std
jle
out
jno
jns
cmpsl
pop
pop
insb
out
sbbl
sti
xchg
out
mov
sub
popf
scas
push
pop
iret
adc
ljmp
sti
lret
xchg
push
jno
push
mov
dec
rorl
sti
pop
jge
std
add
das
fdivrl
lods
mov
xchg
in
mov
push
movsl
movsb
xchg
negb
jne
ds
je
push
sti
or
pop
mov
mov
insb
xor
lea
cmp
lods
inc
sbb
out
mov
sbb
icebp
sbb
mov
fistpll
hlt
pop
lea
iret
out
lds
int
pusha
sub
lcall
lods
into
out
sbb
push
inc
mov
inc
or
and
dec
test
in
mov
mov
pop
scas
xchg
xchg
out
xchg
icebp
add
stos
xor
sub
sub
mov
sub
stc
adc
lret
push
xchg
push
mov
mov
aaa
pushf
mov
push
dec
lret
pop
push
cmp
xchg
aaa
jno
jp
enter
in
pop
jl
sbb
add
popa
test
std
inc
mov
or
out
xchg
jg
jbe
in
in
inc
dec
sahf
popf
fwait
aaa
pop
call
add
lret
mov
sub
inc
mov
inc
fldenv
sub
mov
lahf
mov
mov
movsb
repnz
outsl
cmp
sub
xchg
nop
imul
lahf
xor
cwtl
lcall
negb
mov
mov
insb
mov
cmp
pushf
clc
mov
popf
imul
aam
jl
in
push
pop
pop
out
dec
dec
jnp
pop
xchg
movsl
xor
fwait
mov
jb
sub
push
cmpsb
mov
sbb
ja
cmp
or
scas
xor
mov
inc
jae
mov
inc
stos
stc
les
int
pop
fdivrs
pop
adc
push
fldl
pushf
cmp
loopne
mov
shrb
inc
jge
addr16
pop
jecxz
ljmp
cmp
and
or
adc
ret
sub
jne
into
fsubrs
mov
xor
movsl
jle
cli
add
jb,pn
push
mov
lcall
jns
lods
dec
das
or
mov
fiaddl
push
imul
or
aam
cltd
cmp
or
add
pop
dec
pushf
push
and
cmp
daa
jg
mov
sbb
or
mov
mov
fcomps
test
jnp
inc
pop
mov
mov
xlat
sti
fs
inc
jbe
push
jbe
push
sbb
inc
pushf
pusha
lods
jge
jbe
mov
sbb
loop
jecxz
lret
out
test
testb
insl
push
or
mov
pop
jge
xor
push
cmpsl
stos
mov
pop
stos
pop
cmp
lar
lds
mov
aam
into
or
test
pop
subl
push
inc
push
out
cmpsl
mov
stc
rorb
inc
cmp
jmp
mov
push
xchg
stos
pop
cmp
push
push
lds
je
addr16
mov
dec
push
adc
xor
jns
lret
xorb
leave
repz
adc
arpl
xchg
loopne
adc
orb
insl
test
fildl
or
scas
add
cmpsb
jg
pushf
aaa
and
dec
mov
xorl
fldenv
inc
push
inc
ds
mov
and
gs
cld
add
xor
stc
test
setp
dec
lcall
js
xchg
cmp
inc
fldenv
mov
inc
fldt
aad
ja
mov
pushf
hlt
les
fucomi
add
aaa
sub
mov
push
gs
xor
fwait
addl
insb
push
jno
outsb
cmp
and
or
mov
enter
xchg
xchg
pop
fldz
popf
loop
push
inc
jbe
cmc
in
cld
pop
sub
dec
fisubrl
xchg
into
pop
xchg
cs
imul
xlat
or
test
push
and
mov
fdivrl
not
xor
jg
inc
subb
pushf
loop
fs
cmpsb
mov
insb
mov
mov
and
lock
lahf
mov
insb
push
mov
gs
xchg
hlt
push
jmp
cwtl
jae
cwtl
mov
mov
cmpsb
out
sbb
loope
aaa
fisubrs
ds
ss
das
xor
faddp
dec
adc
and
or
dec
dec
enter
imul
or
fs
xor
dec
fldt
loope
jo
int3
mov
in
fwait
jo
sbbb
das
rclb
or
or
rcll
mov
lcall
popf
or
cmpsl
jbe
push
movsl
dec
fidivrl
stc
cltd
jns
xchg
or
std
in
icebp
in
mov
xchg
scas
add
pop
mov
lea
stc
inc
stc
mov
in
es
pop
mov
movsl
cmpsl
pushf
sub
sbbb
xor
dec
jecxz
aad
dec
xor
subl
out
pusha
clc
loop
inc
ljmp
ds
shl
pop
rcrb
adc
push
inc
idiv
pand
mov
mov
adc
push
sub
int
mov
jp
aam
xchg
mov
imul
test
fst
sti
rcr
test
cmp
mov
fs
outsb
dec
mov
leave
fidivl
cwtl
jecxz
mov
inc
cld
or
or
mov
es
test
clc
mov
jecxz
rcl
mov
icebp
inc
xchg
rorl
push
push
mov
dec
aam
pop
lret
sub
jmp
fldcw
rcr
dec
movsb
lahf
testl
jge
add
mov
fists
test
dec
mov
lret
and
mov
out
loopne
in
dec
test
mov
jmp
mov
adc
jno
popa
lcall
out
int
mov
mov
lods
movsl
out
sbb
aas
jbe
adc
mov
xor
mov
jp
fs
xor
pop
inc
out
dec
icebp
out
insb
cmpsb
or
rorl
mov
test
outsl
test
adc
cmp
mov
xchg
xor
orl
loope
lret
xchg
fcomi
inc
dec
mov
into
or
stos
cmpsb
xchg
hlt
mov
mov
cli
cpuid
mov
icebp
pop
pusha
lea
repz
fnsave
xor
popf
fsubr
pop
dec
lds
out
jb
inc
jl
add
inc
and
inc
ljmp
push
lea
stos
arpl
insl
icebp
add
push
stos
push
adc
cwtl
in
mov
or
xor
mov
jp
or
fbld
xchg
pop
loopne
mov
lret
mov
cld
mov
dec
outsb
sbb
cltd
test
jecxz
ds
and
fimuls
inc
push
clc
xchg
popl
rolb
roll
addr16
and
jb
dec
jcxz
or
or
mov
fadds
lea
push
xchg
les
mov
ficompl
sub
push
out
int
pop
dec
push
repz
jmp
sub
mov
and
mov
dec
xchg
inc
loop
cld
pop
xchg
pop
fsubrp
adc
dec
cltd
mov
movsl
pop
push
in
bnd
into
add
sbb
or
outsb
fisubs
in
loope
sub
mov
out
mov
arpl
cmp
lcall
xor
imul
push
jle
imul
cli
or
xchg
mov
aaa
fnsave
cmp
or
stc
and
add
fldlg2
mov
mov
or
fstpt
mov
jge
inc
add
push
bound
inc
pusha
outsb
lahf
iret
mov
repnz
cmpsl
pop
jmp
call
sub
push
jo
lods
repnz
stos
cmpsl
ljmp
into
or
fdivrs
testl
pusha
and
out
mov
pushf
mov
hlt
data16
dec
fstp
mov
mov
pop
push
andb
push
std
add
xchg
adc
std
insl
mov
test
sahf
add
movsl
sbb
adc
in
les
stc
stc
in
jmp
mov
mov
lea
bound
into
push
push
cmp
lock
mov
jecxz
sarl
inc
aaa
push
stc
in
out
cmp
push
jne
push
inc
out
cmpsb
fidivs
sbb
imul
mov
inc
repnz
clc
jl
cmpsl
call
stos
adc
pop
in
dec
sub
stc
enter
adc
adc
xchg
dec
in
mov
cmp
push
mov
fwait
add
dec
push
mov
lods
xlat
mov
mov
sub
out
add
out
mov
movsl
mov
lahf
addr16
pop
push
fcmovnbe
mov
xorl
stos
movswl
push
and
jle
sub
mov
inc
repnz
dec
cmp
fimull
hlt
sarb
sub
sbb
lds
fcompl
adc
mov
popf
icebp
xchg
sub
inc
fstp
cmp
popf
push
mov
std
jns
jg
movsb
sbb
mov
mov
ret
push
imul
cmc
cmpb
insl
or
shrl
mov
stc
dec
push
push
adc
ja
rcll
out
insl
testb
inc
fnstenv
ja
push
sub
cmp
mov
shlb
movsl
ljmp
mov
push
pop
sub
xchg
leave
fdiv
loop
imul
stc
ds
jl
pop
xchg
jno
stos
lds
and
sub
inc
cltd
mov
cs
mov
push
jp
out
cmp
mov
mov
sbb
push
andb
clc
adc
pop
mov
aas
jp
test
insb
jmp
inc
testl
lods
xchg
add
repnz
mov
ficompl
cwtl
cmpb
clc
adc
sbb
mov
jbe
or
cltd
in
jmp
mov
xlat
cltd
cwtl
dec
aas
out
sti
out
repnz
jae
clc
stos
jl
nop
jae
les
xchg
repnz
icebp
xchg
pop
icebp
cmp
arpl
dec
mov
inc
mov
and
hlt
aas
jp
adc
push
adc
movb
lret
xchg
aad
pop
gs
cmp
push
loopne
repz
add
jae
outsl
mov
mov
xor
test
stos
dec
jle
pop
adc
orl
shrb
adc
stos
adc
push
and
lcall
xchg
jno
cltd
dec
or
add
cmc
std
rcrl
mov
adc
fsubrs
popa
test
xchg
fisttpl
test
out
std
fildl
mov
loop
jecxz
iret
xor
and
pop
incl
inc
jmp
sbb
xor
xchg
mov
cmpsl
into
push
daa
jmp
jmp
push
sub
xchg
shrb
pushf
fcomi
jecxz
lds
mov
push
ret
jmp
xor
sub
stos
enter
adc
out
sub
push
jle
adc
fstpt
dec
adc
test
inc
imul
test
lea
mov
xchg
and
cmp
ss
lsl
sbb
scas
les
mov
out
out
mov
cmp
ljmp
loopne
jno
sbb
cli
nop
mov
and
test
jmp
adc
mov
hlt
xchg
and
push
jbe
xor
jo
imul
adc
add
sarl
pushf
fwait
xacquire
fwait
outsb
fimull
mov
popf
lea
or
jae
mov
or
or
out
nop
push
mov
outsl
cmp
push
test
test
jae
fisubrs
mov
cld
loop
aad
mov
lds
xchg
dec
lea
sub
push
xchg
data16
adc
ret
sub
xchg
push
testl
jl
loop
mov
xchg
mov
mov
mov
push
lds
mov
je
movsb
sbb
lahf
ret
fildll
sbb
les
ret
adc
bnd
ja
je
xchg
or
cmpsb
sub
stos
fnsave
xchg
andl
cs
dec
lahf
out
stc
jnp
stc
dec
jmp
pop
pop
movb
add
test
mov
mov
pop
pop
inc
in
xchg
in
andl
jb
inc
xor
test
call
mov
fsubrl
rcrl
aas
in
pop
jge
iret
xchg
nop
das
ds
aas
int3
mov
call
mov
and
mov
loope
jbe
mov
std
insb
adc
cmp
test
inc
dec
sbb
cld
fwait
push
cmp
sub
xchg
mov
aam
lods
xchg
mov
and
int3
jmp
in
mov
adc
mov
dec
sbb
ljmp
aas
stos
jne
fsubr
stos
enter
jae
sbb
xor
pop
test
repz
nopl
das
jne
neg
fwait
adc
jbe
mov
mov
jg
pop
inc
xchg
iret
jg
cltd
and
arpl
cltd
mov
mov
hlt
mulb
xor
jecxz
sbb
push
std
lods
gs
jo
insb
jge
fildll
movsb
test
fmulp
cmovg
mov
test
outsb
mov
push
popf
push
adc
mov
sbb
aam
push
test
cmp
lock
xchg
int
sub
fcmovb
adc
pop
and
inc
push
das
xchg
scas
and
and
dec
enter
out
outsb
inc
fimull
cltd
into
outsb
test
push
and
jae
pop
adc
cmp
or
aam
sbb
sub
adc
into
mov
pop
cltd
mov
add
lods
jbe
orb
sbb
cmp
enter
lds
jg
icebp
out
stc
sub
ljmp
jecxz
mov
mov
lahf
aad
ja
inc
mov
outsl
sti
pop
cs
inc
dec
push
cmpsl
mov
fucomip
sbb
or
pop
movsl
mov
mov
jb
jg
popa
call
push
xchg
jge
sbb
inc
pushf
cmpsb
scas
mov
cmp
arpl
ret
fldcw
stos
jmp
mov
pop
xchg
faddp
mov
leavew
pop
pop
mov
ja
std
inc
ficompl
xchg
push
mov
cs
pushf
add
mov
push
in
sbb
mov
dec
rcrb
xchg
pop
outsl
xor
xchg
mov
aaa
sti
bnd
jg
mov
repz
cmpsl
sub
repz
adc
dec
xor
test
icebp
and
in
repz
out
mov
inc
int
cltd
je
dec
stos
jb
lahf
mov
cmc
sub
mov
mov
mov
sbb
sub
push
adc
pop
push
pop
mov
jg
mov
mov
mov
mov
dec
rclb
imul
jmp
or
jp
and
cwtl
dec
ficomps
lds
mov
rcrl
std
sbb
push
cvtss2sd
sub
lock
stc
dec
sub
testb
out
push
jne
testb
test
pop
mov
int
shrl
push
xchg
cs
std
bound
cmpl
mov
pop
sub
dec
dec
in
int3
mov
stos
jg
xchg
nop
dec
xor
pop
push
faddp
push
sub
or
push
mov
pop
fidivs
adc
adc
insl
ror
cli
test
adc
test
mov
and
or
movsl
adc
mov
rolb
dec
mov
and
popf
mov
add
out
xchg
cs
mov
xchg
mov
test
ds
lret
and
int3
jns
push
jns
xor
lods
rorb
add
jmp
jno
mov
out
loop
test
sub
in
xchg
add
jp
mov
cs
out
test
imul
lds
cmp
pop
mov
and
mov
cld
push
in
mov
and
mov
out
daa
mov
fcoms
dec
lahf
fwait
imul
cmpl
fwait
mov
mov
aas
xor
and
leave
nop
cmpsl
gs
add
push
sbb
fildl
aas
add
push
and
hlt
xor
fistps
outsl
pop
ret
cmpl
gs
das
cmp
aad
xlat
test
pop
jo
cmpb
push
adc
insl
mov
mov
pop
add
cmp
pop
je
sbb
ja
pop
in
sub
mov
aam
shl
mov
jge
pusha
jae
cmpsb
push
pop
mov
iret
out
into
fs
ret
add
add
repnz
adc
xchg
lods
pop
add
das
clc
and
adc
dec
and
inc
ds
sahf
test
subl
fdivrl
jle
lea
mov
push
scas
and
out
xor
or
push
pushf
add
cmp
adc
sbb
add
rep
repnz
adc
mov
sahf
lret
sub
int3
add
std
mov
out
sbb
imulb
imul
aad
repnz
mov
xor
cli
les
adc
mov
dec
nop
stos
scas
nop
aaa
cmp
mov
rclb
test
mov
scas
cmpsl
sub
ds
cli
pop
or
loopne
lcall
add
add
jge
lahf
jb
or
sahf
mov
aas
scas
xchg
xchg
loopne
in
mov
sti
xorl
mov
push
adc
out
lods
roll
jg
out
sbb
or
jmp
ss
pop
stos
mov
sub
insb
rorl
rcl
fbld
sub
push
xchg
sbb
gs
jae
xchg
repnz
sub
push
xchg
jns
fwait
test
xorl
mov
adc
fucomi
loop
xor
mov
add
aam
cmc
in
push
stc
lock
lahf
cmpsl
mov
mov
sub
mov
leave
clc
cmp
xchg
inc
cmp
scas
cmp
pop
out
loope
rcll
repz
mov
sub
lea
dec
es
pop
mov
sub
sub
dec
sarl
sbb
cmpsb
pop
push
lods
lock
lahf
repz
popa
mov
pop
in
ss
xchg
pop
out
mov
adc
addr16
mov
out
pop
and
mov
add
shll
add
fwait
inc
push
sub
xchg
sbb
in
icebp
leave
in
out
repz
outsl
xchg
stos
xor
mov
scas
scas
jno
mov
mov
movsb
shrl
jo
dec
sbb
pop
sub
or
jl
mov
sub
popa
adc
mov
pop
inc
dec
popf
test
push
fwait
xchg
or
movsl
inc
jg
movsl
dec
fbld
add
push
or
push
mov
scas
arpl
das
mov
add
push
mov
jns
add
imul
mov
adc
mov
mov
fsts
jne
xlat
and
xor
ljmp
scas
jg
jno
and
pop
lds
xor
sub
sbb
fisttps
cmpsb
jno
sbb
xor
jno
xor
movl
ja
sub
in
jp
mov
xchg
sbbb
jmp
fcomps
pop
lcall
rcll
cmpsl
pusha
add
scas
push
repnz
push
push
dec
push
xchg
pop
sub
pusha
inc
or
cwtl
mov
pop
fstpl
sbb
inc
push
gs
ror
mov
test
inc
scas
out
push
or
mov
aaa
and
mov
andb
jmp
in
cmp
add
pop
push
jg
xchg
fwait
push
ljmpw
pop
jo
add
and
sbb
xor
loope
fisttpll
in
scas
mov
dec
mov
and
push
fs
or
lock
ja
cmp
dec
clc
js
repnz
cmpsl
mov
jle
sbb
gs
hlt
xorb
addl
inc
ret
sarb
icebp
lods
ss
jle
scas
mov
dec
test
jnp
repnz
dec
add
cld
push
ret
mov
sub
ficomps
mov
inc
mov
inc
ja
iret
call
lock
mov
sub
mov
or
mov
add
das
cmc
rcrl
out
mov
adc
rorl
insb
mov
fisubrs
subb
inc
mov
int
daa
mov
adc
iret
inc
mull
arpl
lock
hlt
fimull
jns
clc
inc
jl
nop
stos
icebp
test
mov
mov
mov
and
icebp
sbb
mov
nop
repnz
push
lcall
aad
insb
inc
pop
sub
ds
out
inc
imul
mov
add
cmp
outsb
mov
insb
inc
mov
cmc
jo
in
cli
fs
push
push
push
dec
test
arpl
lret
adc
test
stc
loop
cld
mov
lock
jecxz
imul
add
jbe
cmpl
vshufps
fcoms
inc
inc
mov
insl
ret
xor
or
sbbl
addb
mov
incb
data16
rcl
xchg
sub
jno
cmp
jo
push
inc
mov
sti
xchg
aas
adc
pop
clc
scas
sub
mov
dec
out
out
xor
cld
pop
imul
rcl
jno
sbb
xorl
mov
dec
inc
sbb
mov
push
pop
add
aas
push
imul
lds
push
and
out
xlat
xchg
xlat
pop
push
push
lock
or
xor
push
inc
dec
int
push
cmp
xor
subb
repnz
inc
mov
test
or
add
lea
mov
cs
rcrb
xchg
sub
sarb
mov
lahf
sbb
adc
loopne
je
or
shr
inc
sbb
repnz
das
dec
lret
mov
mov
jp
ret
ret
cmp
add
insb
aam
inc
jnp
sbb
mov
lods
fcompl
cmp
add
or
add
adc
test
cmpsl
sub
cltd
rcll
insb
out
in
fdivl
in
mov
outsb
adc
hlt
mov
dec
repnz
mov
rcll
out
outsb
jbe
dec
fmull
xor
repnz
xor
cmp
pop
lea
sub
fnsave
adc
push
leave
daa
nop
or
or
xchg
mov
xor
js
add
leave
icebp
jnp
sbb
pop
jno
dec
fstpt
in
pop
fsubs
popa
lods
loopne
lcall
add
xchg
or
cld
push
ljmp
fidivl
fcomi
mov
and
lods
je
icebp
aam
daa
inc
add
lcall
mov
dec
ficoms
sbb
cmpsb
lcall
movb
cmp
mov
cmc
pop
mov
imul
lods
cld
and
data16
adc
in
jo
inc
add
or
imul
fsts
pop
fst
cmp
fsub
pop
pushf
gs
mov
pushf
or
outsb
fmul
or
call
ljmp
movsl
sbb
orb
and
jl
mov
repnz
int
mov
fists
mov
adc
sbb
and
xlat
pusha
les
mov
ljmp
outsb
outsl
rcll
mov
ss
mov
das
jle
into
mov
movsb
loopne
jne
push
push
jne
lcall
and
lods
or
or
rep
popa
icebp
insb
push
sahf
push
mov
inc
add
lods
jg
insb
xchg
fnsave
inc
jnp
sarl
xor
push
repnz
xchg
ret
loope
into
test
xchg
lret
fs
sub
movsl
adc
out
in
adc
mov
lahf
push
and
cltd
jno
cmp
subb
sub
add
and
jae
repz
push
mov
jp
or
jp
fisttps
in
cmp
insl
popf
faddl
les
adc
push
stc
xchg
xor
push
stc
adc
jbe
jno
cmp
fs
cmp
repz
jp
dec
xor
xchg
es
fsubrl
push
mov
stc
ss
push
ds
xor
imul
push
and
cmp
cli
push
xor
fistps
jg
enter
fcoms
jp
mov
sub
int3
mov
push
jnp
jecxz
xchg
sbb
and
aad
scas
mov
mov
fwait
or
sub
arpl
add
pop
push
bswap
push
mov
test
add
xchg
ss
lahf
adc
sub
jnp
add
jnp
test
mov
mov
xchg
in
or
push
mov
icebp
aas
sbb
les
mov
xor
cmp
mov
mov
ja
inc
lods
jg
cmpsb
inc
rcr
xchg
mov
lods
into
cmpsb
push
pusha
sti
outsb
xlat
or
pusha
mov
mov
cmp
rep
sbb
jno
ret
lods
cmp
push
mov
enter
xchg
scas
comiss
int3
mov
addr16
addr16
mov
or
imul
test
cs
jae
mov
clc
or
add
xlat
push
adc
mov
cwtl
shll
jmp
test
popf
or
movsb
rcll
pop
loope
pop
mov
sahf
test
sbbl
int
xchg
in
push
mov
jb
add
sbb
mov
xchg
jbe
lret
or
cmp
stos
dec
pop
or
loope
dec
pop
jmp
mov
sbb
fwait
movsb
cs
dec
mov
inc
jecxz
push
and
cmc
lahf
repnz
or
mov
cmp
jns
out
jnp
and
mov
in
adc
cmp
mov
sub
adc
insl
mov
cmpsb
jle
decl
rolb
pop
fcoml
inc
mov
fwait
xchg
lock
or
pop
push
dec
mov
mov
daa
xchg
push
orl
xor
repnz
sub
cmp
lds
arpl
lock
fiaddl
mov
mov
rorl
mov
and
mov
nop
and
arpl
mov
mov
jb
icebp
mov
and
cmp
fdivrp
lret
fwait
or
cmp
repz
loop
scas
push
xlat
movsl
mov
sbb
int3
mov
decl
xlat
in
cli
mov
aas
popf
popf
push
push
pop
jns
mov
arpl
pop
popa
or
mov
mov
sbb
int3
imul
xor
and
ret
pop
and
ret
xor
adc
jg
rolb
mov
and
hlt
movlps
lock
pop
test
aas
data16
cmp
pop
frstor
pop
xor
repnz
ja
fwait
lcall
arpl
cltd
fcompl
mov
int3
adc
jp
mov
jo,pn
mov
jg
insb
xchg
cmp
or
cwtl
mov
mov
in
scas
mulb
push
rcr
dec
cmc
mov
ss
add
stos
or
loop
jae
mov
scas
out
hlt
add
leave
adc
jg
in
jmp
cli
lahf
push
jns
dec
inc
push
add
jl
inc
push
clc
movsl
mov
sbb
mov
cmc
jmp
out
sahf
das
cmp
loop
adc
adc
xor
pushl
call
inc
mov
sub
test
lcall
subl
imul
mov
cmp
xchg
jle
add
mov
adc
fcmovu
nop
ss
shll
dec
push
and
jns
rorl
rcl
dec
ljmp
and
aaa
xor
cmp
inc
dec
mov
ja
mov
push
mov
push
inc
mov
lret
push
cmp
mov
sub
outsl
xchg
fcmovne
out
decb
mov
pushf
sbb
mov
mov
dec
cvttps2pi
cs
mov
lods
cli
insl
and
shlb
ja
fsubl
pop
test
mov
nop
ljmp
adc
push
cld
sbb
xor
push
add
mov
lods
lret
shll
push
imul
mov
mov
cltd
or
and
call
jg
rclb
push
or
stos
insb
sbbb
jnp
ljmp
clc
leave
rorb
xchg
pop
push
xchg
xchg
out
fistpl
push
cmc
fwait
pmulhw
xorl
inc
fnstenv
pop
arpl
push
pop
dec
push
dec
jecxz
mov
xchg
ljmp
icebp
xor
test
and
adc
popa
rorb
push
add
sub
mov
or
scas
push
mov
dec
aas
add
sar
and
rol
jae
mov
pop
test
lods
xchg
and
repnz
call
dec
pushf
pop
mov
fwait
cmpsl
jnp
mov
xchg
inc
mov
mov
jbe
push
in
pusha
sub
jno
mov
jp
imul
mov
pop
dec
rcr
cwtl
cmpsb
mov
push
mov
aas
xlat
mov
push
jbe
mov
rcr
or
sub
das
lcall
into
out
dec
pop
mov
xchg
adc
cmp
mov
addr16
psubusw
repnz
mov
adc
fmul
bound
xor
mov
test
sbb
mov
out
or
movsb
lea
xchg
mov
in
leave
pop
lcall
mov
out
das
sar
gs
jp
or
das
adc
push
xor
bound
sub
mov
cs
out
andl
pop
and
xchg
adcl
pop
sub
clc
jns
and
sbb
mov
repnz
cli
arpl
xchg
xor
push
dec
pop
push
bound
or
cmp
mov
cmpsl
adcl
dec
outsb
lock
popa
lret
popf
sbb
mov
inc
mov
mov
cli
sbb
pop
jae
inc
pop
xchg
cmpsb
ss
cmp
inc
pop
inc
xlat
out
stos
in
mov
test
pop
lret
xor
lea
sahf
mov
icebp
or
pop
mov
mov
sub
xor
lret
xor
xor
mov
pop
mov
test
mul
int
outsl
jle
outsl
in
cmp
cmp
mov
jge
lcall
mov
pop
or
pop
pop
sbbb
test
mov
mov
fists
arpl
and
arpl
into
mov
scas
fwait
jnp
fldt
push
and
aas
into
and
aad
push
mov
out
mov
fcoml
push
test
push
xorb
int3
and
ja
mov
mulb
cmpsb
mov
mov
xor
mov
push
pop
xchg
cmpsb
lret
inc
xor
jo
icebp
or
xchg
mov
mov
lods
mov
test
rorb
rcrb
cmp
in
hlt
ret
mov
es
add
cmpsb
fisttpl
cmp
sbb
aaa
out
adc
sub
out
imul
xor
mov
pushf
movsl
or
add
lods
push
xchg
jl
lret
arpl
movsl
insl
sbb
jo
shrl
shll
jns
les
sub
aaa
jmp
insl
pop
and
or
add
popf
mov
xchg
inc
sub
orb
fldl
daa
pop
fcompl
daa
shrb
call
mov
jb
jbe
out
xor
xor
fstpt
out
push
cmpsl
lods
pop
les
call
or
mov
add
lahf
or
das
sub
leave
mov
mov
inc
xchg
test
inc
int3
xchg
into
xchg
xchg
mov
orb
rorb
aad
dec
xchg
es
sub
and
mov
xlat
data16
fisubl
xor
dec
sarl
into
pushl
ljmp
mov
mov
sbb
sbbb
mov
fisubl
pop
adc
add
jne
in
or
push
jno
mov
mov
fmul
lahf
or
hlt
rcll
jge
cs
or
mov
pop
add
sub
notb
add
cmp
or
nop
lret
sbb
inc
je
mov
call
push
adc
enter
shl
ja
sbb
jle
icebp
mov
loope
push
jge
inc
aad
cmp
dec
shlb
gs
jmp
and
inc
and
in
test
jle
mov
dec
out
test
mov
dec
inc
adc
xchg
shrb
jl,pn
rorb
mov
lods
adc
push
clc
inc
test
push
movsl
mov
addr16
in
test
fdivr
add
sbb
loope
pop
sbb
xchg
aam
inc
lret
cs
pop
je
das
mov
sub
or
inc
out
loope
fistpl
faddl
dec
in
jg
sbb
sub
add
mov
add
adc
adc
xchg
mov
jmp
pop
ja
pop
movsl
movsl
insb
addr16
ret
and
dec
mov
add
fiaddl
mov
fisubrl
out
adc
and
push
adc
int
insl
movsb
mull
mov
repz
sbb
adc
rcll
movsb
icebp
or
cld
shll
in
inc
call
add
add
std
cli
add
pop
stos
pop
lods
dec
stos
adc
inc
movsb
lea
push
clc
scas
mov
cmpsb
js
test
mov
sub
xor
repz
andb
jecxz
mov
add
scas
sbb
xorb
ljmp
sbb
andl
push
dec
cmc
ficoml
lea
xor
mov
jge
sub
adc
cltd
jo
pop
lds
mov
testl
mov
subl
xchg
lcall
ja
sub
xor
sub
imul
fiadds
jg
mov
repz
sahf
cld
lret
inc
jp
sarb
sub
mov
mov
xchg
mov
sub
pop
sti
lods
sbb
pop
rorb
mov
inc
test
jae
shrb
or
into
cmp
test
jae
dec
jmp
hlt
mov
or
rep
sbb
movsl
icebp
add
push
subl
inc
popf
test
shl
cmpl
divl
or
in
xor
jns
sbb
fwait
lret
mov
out
aam
inc
lcall
push
push
cmp
js
into
sub
push
adc
add
nop
inc
add
addl
loope
sub
scas
xchg
nop
ficoml
push
jne
rclb
jge
and
rcr
mov
fwait
mov
cmp
mov
scas
mov
pop
sar
jno
mov
jge
sub
push
sbb
icebp
or
lcall
out
jnp
push
dec
popf
aad
xchg
cs
inc
and
or
ljmp
mov
lods
push
mov
sub
rclb
inc
pop
add
popa
and
jge
test
dec
dec
mov
jge
pop
in
push
repnz
mov
mov
jo
shlb
insl
sub
icebp
pop
stos
and
dec
rcl
in
imul
mov
sbb
into
adc
aaa
pop
mov
lock
int3
std
pusha
cmp
faddl
xchg
int3
fwait
push
mov
shr
sahf
popa
jb
push
jns
sub
pop
lds
test
xchg
dec
in
xor
iret
jnp
pushf
xchg
aaa
fcoms
dec
ja
or
addr16
mov
xchg
adc
hlt
mov
shll
aad
cli
pop
mov
repz
sarb
cltd
test
xchg
divl
clc
mov
mov
and
shll
push
or
mov
pop
or
xor
cwtl
jno
jg
bnd
jg
out
or
pop
pop
xchg
push
adc
xchg
jno
cmc
add
sbb
dec
std
mov
sbb
out
inc
rcrb
pop
xchg
das
scas
mov
mov
dec
icebp
cmp
and
test
out
ret
test
test
mov
stc
shll
in
lods
scas
bound
das
or
out
icebp
xor
or
cmpsb
bound
scas
pusha
cli
lea
rorb
push
jo
xor
xor
jo
fldl
and
loope
test
or
add
mov
or
mov
lcall
lock
or
cmc
jmp
xor
or
sahf
fiaddl
or
jno
aaa
popf
push
data16
mov
cwtl
out
mov
std
icebp
adc
jecxz
aas
loope
vdivss
pop
cli
and
cs
out
js
jmp
or
mov
cmc
sbb
pusha
es
nopl
into
mov
ds
pop
jbe
xchg
scas
cmp
movsl
lods
cmp
nop
cmc
xchg
cmpsl
incb
push
stos
cs
in
or
add
lea
cli
iret
jg
cmp
mov
test
jmp
mov
or
sub
sti
or
pop
mov
into
and
cmp
sarb
xchg
pop
mov
cmpsb
cmpsl
mov
jl
inc
xchg
mov
fbstp
icebp
or
jno
mov
out
jmp
sbb
dec
rol
pop
pushf
jle
pop
xchg
adc
cld
xchg
rolb
cli
fstl
mov
nop
ret
sarb
loop
fbld
mov
jno
pop
pop
lods
jnp
cmp
cmpsb
mov
sub
std
cmp
adc
imull
add
push
inc
jae
jge
mov
adc
movsl
cmp
aam
xchg
xor
push
pop
push
popf
mov
ljmp
sbb
loopne
sahf
add
lock
pop
and
or
aaa
scas
leave
adc
or
jge
test
pop
mov
pop
sti
lock
or
in
cltd
mov
in
pop
ljmp
mov
movsl
mov
xor
enter
rolb
in
xchg
jne
inc
movsl
push
aaa
sbb
adc
jb
add
cli
popf
loopne
ja
mov
cmp
pop
cmc
cmpsl
das
push
sub
repz
hlt
adc
lods
adc
lds
movsl
dec
mov
add
ss
or
mov
xchg
hlt
jmp
xchg
test
in
cmc
add
add
dec
dec
je
repz
shll
repnz
and
iret
pop
lahf
imul
test
or
lea
sbb
mov
movsl
xor
push
mov
sub
mov
test
notl
test
inc
push
scas
sub
hlt
imul
jge
xor
xchg
rcrl
cmp
hlt
or
popa
pop
push
leave
adc
xor
rcrl
push
jb
cwtl
mov
in
imul
sub
call
hlt
cmpsb
mov
and
sar
jae
jns
inc
dec
add
xor
and
or
lods
mov
xchg
pop
mov
jg
ss
pop
nop
movsl
or
jp
mov
xchg
les
outsl
stc
nop
in
pop
inc
test
ljmp
xchg
icebp
test
mov
push
sahf
std
dec
aaa
jae
mov
mov
push
add
and
push
in
pop
sub
and
out
int
scas
pop
scas
lock
mov
test
call
xorl
inc
das
mov
popf
test
pop
dec
lock
pop
sbb
cmp
inc
icebp
cmp
mov
cltd
or
lds
fbld
xor
xor
mov
shr
mov
outsl
pop
imul
xchg
in
gs
dec
test
and
clc
ja
cwtl
bound
gs
mov
test
jge
sbb
cmp
sbb
jp
addr16
mov
sbb
sub
gs
cmp
inc
or
pop
xor
incb
sub
mov
xchg
dec
cmp
or
push
mov
cs
dec
test
xchg
lret
jge
sbb
mov
lods
xor
mov
adc
sti
inc
mov
test
xchg
repz
mov
mov
pmaxsw
pop
rorb
pushf
push
push
mov
in
sub
jae
cmpl
or
adc
shrb
or
xchg
sub
and
cmc
add
rorl
fisttpl
and
pop
cmpsl
jmp
in
mov
stos
adc
movsb
or
sti
test
cmpsb
adc
jg
lcall
rcr
cli
rcll
cltd
mov
mov
clc
mov
inc
sbb
adc
mov
cld
inc
daa
cmpsl
mov
mov
js
in
xchg
inc
sub
mov
add
pop
lret
push
insl
jecxz
stc
push
pop
xchg
mov
pop
aad
sub
fs
dec
roll
or
lcall
sti
stos
jmp
testb
sahf
sub
jle
imul
mov
jp
cmp
jne
fucomp
mov
or
lea
mov
pop
push
fs
sbb
lea
sub
mov
pop
pushf
pop
pop
decl
fisttpl
push
push
js
cmp
xor
pop
push
mov
pop
dec
jecxz
andb
jg
jno
and
inc
sahf
mov
push
adc
stos
push
hlt
cmp
jb
dec
cmc
dec
in
fcomps
repnz
inc
fsubr
xor
lock
pushf
pop
jno
push
ds
sub
mulb
lds
xchg
add
popf
xchg
sti
leave
mov
and
ret
or
retw
shll
cwtl
push
std
and
and
push
push
add
xchg
cmp
addr16
test
ret
lahf
in
out
out
mov
lret
cmpl
dec
cwtl
jne
daa
xchg
mov
lds
xchg
inc
pop
imul
insb
outsb
clc
xor
fcom
push
test
dec
mov
sbb
xor
aam
std
ss
fld1
mov
shrb
out
cld
add
rcrl
push
cmpsb
arpl
pop
ret
mov
mov
lea
ret
jg
cmp
jo
push
arpl
pop
mov
mov
push
rcrb
outsl
into
xor
test
int3
pop
test
jmp
lret
sahf
xor
bound
fwait
ds
xchg
inc
scas
out
xor
xchg
ret
in
and
xchg
ljmp
gs
sub
daa
popf
lock
mov
and
mov
xchg
mov
out
inc
jge
mov
ret
push
jns
cltd
lods
fistpl
mov
out
sarl
push
popf
pop
mov
jo
daa
shlb
cmp
nop
int3
mov
ret
imul
dec
iret
add
test
ror
jle
lahf
out
jge,pn
mov
aam
test
fs
jmp
lret
xchg
popf
ds
stc
jae
jnp
nop
mov
out
and
fcomip
push
fbstp
ss
adc
adcb
fsubrl
rolb
sbb
ret
fsubrl
and
das
cmp
das
ja
mov
push
jg
test
aad
rcrb
pusha
mov
lods
daa
hlt
lret
mov
jb
nop
mov
scas
cmp
bnd
movb
mov
push
sti
and
ret
int3
xchg
aas
leave
das
cmp
xor
inc
lea
push
xchg
jl
lret
and
cld
cmp
jo
inc
pop
stos
stos
inc
or
ficoml
je
frstor
out
aam
sti
call
aas
lret
adc
cs
outsl
enter
cmp
cli
leave
adc
psadbw
or
jnp
xchg
mov
inc
mov
lret
xchg
lods
cli
pop
xchg
fiaddl
mov
fs
lods
rcr
add
mov
jp
xor
push
dec
pop
fcomps
pop
mov
xor
inc
dec
in
pop
mov
sub
scas
divb
cmp
jbe
xor
clc
ja
dec
xchg
sti
inc
gs
inc
adc
push
mov
add
lret
dec
lods
push
test
leave
leave
ds
and
js
sub
lcall
iret
xchg
out
jnp
pusha
fldln2
sub
dec
mov
jae
lods
shlb
adc
mov
fyl2xp1
arpl
mov
fbld
fdivrs
sti
pop
sti
jns
loopne
jo
dec
mov
cmp
mov
fistpl
jb
push
jmp
std
out
push
scas
fs
adc
adc
call
push
inc
and
arpl
adc
jbe
sbb
jne
dec
jmp
sbb
sbb
adc
outsl
and
mov
imull
dec
lods
rorb
dec
mov
in
xchg
mov
sahf
sbb
jmp
ror
inc
mov
or
xchg
aad
xchg
mov
adc
sub
aas
rcll
stos
das
dec
divb
lret
jae
sub
dec
in
dec
fs
and
in
and
sarb
cmp
adc
js
pop
icebp
loope
insl
testb
dec
out
mov
inc
mov
jge
mov
add
arpl
aam
cmc
lcall
pop
xor
pop
movsl
push
pushf
mov
in
jbe
dec
jp
pop
aas
rorb
dec
out
stos
cmp
xchg
inc
cmpsb
add
sbb
mov
sub
ret
sub
mov
out
insl
insb
adc
mov
jb
iret
mov
fisttps
dec
xor
cmc
dec
push
mov
and
push
mov
insb
mov
call
inc
adc
mov
pop
sti
and
inc
cltd
mov
aaa
pusha
int
scas
testb
fldenv
push
arpl
sbb
cwtl
mov
xchg
int3
pushf
and
into
inc
mov
incb
hlt
mov
std
dec
inc
xlat
stc
pop
popf
xchg
outsl
push
mov
test
jne
stos
or
lods
pop
xchg
mov
les
mov
dec
add
notb
sbb
mov
inc
jno
dec
stos
push
cmp
mov
orb
mov
push
mov
popf
notl
ret
xchg
outsb
adcl
mov
adc
or
stos
inc
pop
mov
aam
xchg
adc
cmc
mov
sti
stc
and
jnp
dec
jmp
add
jne
xor
mov
jo
outsb
cmp
mov
insl
inc
jb
xlat
mov
xchg
ds
sub
inc
aaa
cs
pop
xchg
pushf
dec
stos
arpl
sbb
adc
add
test
dec
int
sbb
pushf
mov
dec
inc
sub
sub
mov
cmpsb
adc
lret
xor
xchg
insb
sbb
stos
fs
mov
dec
add
xchg
and
mov
inc
lret
inc
mov
fcom
mov
jnp
popa
sti
and
ja
push
mov
je
and
jae
mov
adcb
iret
repz
dec
pop
ljmp
inc
pusha
inc
js
mov
cmp
mov
lcall
jno
push
lock
add
jne
jnp
dec
sbb
mov
xchg
mov
or
es
or
and
mov
stos
jecxz
ret
cmp
adc
in
pop
call
ljmp
imul
gs
dec
repz
lcall
adc
and
es
inc
add
cmp
push
cmp
xor
mov
xchg
xchg
mov
pop
cmp
jne
aam
mov
adc
popa
xor
sub
in
cltd
ja
lea
aam
cld
imul
and
cltd
mov
mov
and
cs
mov
jp
pop
mov
or
push
aam
inc
loop
sub
pop
orl
fists
fildl
adc
fs
and
mov
mov
hlt
inc
push
bound
fcom
sub
xor
int3
rcrl
dec
cmp
outsb
les
xor
popa
xchg
ds
popa
dec
mov
push
aaa
mov
in
arpl
sahf
ss
pushf
push
and
je
inc
sub
ss
xchg
mov
inc
push
int
inc
sbb
pop
fildll
stos
jne
cmp
aas
and
clc
or
mov
test
add
lcall
fisubl
repnz
lcall
enter
popf
push
sub
jl
addr16
aad
lods
gs
sbb
hlt
adc
xchg
sub
mov
add
imulb
rcll
and
push
xchg
pop
shll
fmull
sub
ret
inc
mov
scas
add
xor
test
dec
pushl
jmp
push
stc
test
bound
cmc
or
fcomps
add
sbbl
cmp
mov
jle
mov
sahf
push
mov
imulb
test
sbb
push
mov
jns
pand
clc
out
sub
jo
pop
lahf
les
pop
gs
into
or
clc
push
pop
and
jnp
in
dec
xlat
cmp
mov
out
adc
mov
filds
in
mov
into
jns
enter
incl
call
and
stos
or
inc
add
es
ficompl
add
in
mov
das
testb
dec
stos
push
nop
into
jl
xor
xorl
lahf
scas
ds
outsl
test
lahf
adc
sahf
and
and
imul
adc
pop
das
cmp
jno
scas
ja
and
inc
lods
stos
mov
xor
inc
mov
scas
movl
or
push
xchg
aam
or
gs
icebp
adc
cmc
lock
out
add
in
mov
push
hlt
lret
rcrl
inc
mov
fdiv
pop
push
add
push
mov
pop
xor
cmp
and
adc
imulb
int3
pop
repnz
mov
mov
and
cmp
cltd
mov
fnstsw
mov
fidivs
add
xchg
inc
cmp
pop
test
subl
mov
push
and
mov
out
loop
inc
mov
lds
psrld
stos
add
pop
mov
scas
subb
scas
push
cmpsb
inc
dec
mov
jmp
iret
dec
cmc
xchg
adc
adc
ja
inc
sbb
jb
pop
mov
or
dec
mov
pusha
adc
or
ja
xchg
xchg
push
ficoml
rcr
inc
and
inc
pop
mov
test
scas
inc
sub
mov
scas
add
push
mov
adc
fdivs
das
mov
add
jnp
and
js
in
dec
insl
pop
and
push
in
shl
adc
or
cmpsl
aaa
mov
jns
add
mov
and
out
or
sub
cmp
xchg
inc
rolb
lahf
cmp
sbb
pop
mov
lahf
dec
jecxz
aam
scas
out
fistl
pop
pop
in
das
outsl
push
int3
repnz
js
sbbl
ja
push
les
xchg
sub
out
pop
mov
rorb
test
cwtl
fsubrs
mov
xorb
xor
leave
aas
es
jl
or
jae
test
je
add
dec
xlat
push
cmc
dec
imull
mov
jle
mov
jecxz
enter
xor
jae
stc
out
fsts
rorl
repz
jmp
xchg
in
fnstcw
pop
push
dec
daa
ret
cmpb
test
scas
arpl
icebp
mov
xlat
insl
test
neg
mov
sti
jae
cmp
aam
jmp
adc
or
mov
in
pop
out
fisttps
jb
addl
rcrl
or
testl
shlb
jge
mov
and
pop
pop
pop
push
pop
inc
cmc
js
test
pop
sbb
xor
mov
cmp
stos
insl
inc
push
popa
add
add
dec
sbbb
pop
pop
jnp
test
in
lods
arpl
sub
dec
jp
push
arpl
stc
orl
das
pop
sbb
and
mov
outsl
push
shlb
inc
mov
mulps
popf
lea
sti
daa
andl
add
ds
shrl
xor
or
mov
fimuls
inc
sbb
outsl
negl
in
mov
adc
xchg
pusha
movsb
mov
push
sbb
mov
negl
xchg
inc
jmp
lds
sti
addl
ljmp
or
fabs
xorl
adc
xchg
imulb
lods
jne
and
int
and
add
sbb
inc
repz
sbb
fdivr
and
push
lods
inc
jnp
pop
mov
pop
sahf
cli
subl
jecxz
addr16
lea
pop
arpl
or
jl
loopne
push
mull
hlt
orb
cmpb
out
push
jmp
pushl
fcmove
cmp
inc
int3
push
pop
test
sbb
sarl
mov
push
and
out
jmp
xchg
clc
ficoms
add
push
jne
iret
jl
mov
sbb
mov
mov
and
loop
xor
call
cmp
test
add
pushf
sbb
popa
mov
pop
in
mov
fs
sbb
sub
cmc
shrb
xor
in
pushl
mull
inc
shrb
jge
in
mov
lahf
jbe
fstps
xchg
in
fidivs
loope
push
xchg
fwait
add
fcoml
sti
lea
arpl
lahf
out
mov
xor
pop
out
popa
sbbl
sarl
and
sbb
out
mov
and
ret
push
das
cmpsb
xor
inc
inc
fiadds
pop
pusha
push
sub
loope
adc
pop
scas
sbb
cmp
xchg
ljmp
sub
pop
mov
pushf
jg
in
mov
and
inc
iret
mov
sbb
fidivrl
addr16
and
js
xorl
adc
in
mov
in
inc
mov
stc
push
stos
mov
movsl
dec
jp
cmp
loop
test
test
mov
ret
cmp
cmp
add
addr16
inc
mov
out
cwtl
sar
rcll
sub
pop
pushf
sub
mov
xchg
in
add
aas
inc
popa
cmp
imul
call
sahf
das
jnp
pop
shll
scas
pusha
out
mov
or
lea
js
cmpsl
adc
or
arpl
les
cmpsl
jg
sub
test
sbb
test
fcomip
sbb
push
push
add
xchg
je
adc
add
jae
cli
push
repz
sbb
js
out
cmpsb
insb
adc
and
cmp
pusha
rolb
and
aas
or
inc
mov
xlat
jns
icebp
lahf
sysexit
adc
das
mov
pop
in
out
jb
mov
sbb
out
jg
sub
iret
cmp
cli
jnp
adc
xchg
loopne
imul
daa
mov
pusha
cwtl
into
add
push
mov
outsl
rcll
das
xchg
dec
mov
or
jmp
ret
je
pop
and
test
cmp
sub
pushf
inc
sub
and
cmp
inc
mov
jg
test
xchg
sbb
push
sbb
jo
scas
mov
lods
pop
roll
and
dec
out
xchg
add
and
xchg
jb
xchg
sbb
adc
lret
movsb
and
mov
xchg
sbb
xchg
ret
push
mov
loop
xchg
fisubrl
push
xor
fs
push
insl
ret
mov
les
leave
or
iret
push
je
xchg
adc
jg
mov
imul
mov
fcomi
loop
dec
push
inc
jb
jns
and
popa
xchg
cmp
repz
fwait
pop
cmc
push
mov
xchg
mov
inc
lea
push
jns
clc
dec
out
inc
pop
mov
xchg
js
sub
pop
cmp
hlt
inc
test
add
push
pop
inc
xchg
or
popa
cmp
jecxz
mov
jge
add
fwait
addr16
movlps
mov
notb
mov
lcall
mov
pushf
xchg
orb
and
stos
je
and
sub
add
mov
cmpsb
jge
ds
sub
loope
aad
add
imul
push
inc
movsb
jp
push
aaa
cmp
jp
pop
dec
les
and
jl
jnp
mov
orb
out
ret
sub
or
cld
fwait
jb,pt
mov
adc
cmp
jl
lods
dec
lds
xor
push
cmpl
push
cmp
or
jae
outsl
sarb
jbe
icebp
addl
movsl
pop
mov
popl
insl
std
lahf
ret
and
sbb
fcompl
lcall
mov
test
mov
dec
sub
repnz
imul
daa
mov
leave
push
jg
cmp
popf
insb
les
pop
in
loope
jmp
clc
add
inc
dec
sub
push
jl
addr16
lret
in
cmp
push
push
loope
in
push
faddp
mov
push
lea
mov
sbb
inc
pop
callw
push
lcall
sbb
mov
jle
or
and
xchg
sarb
push
in
inc
xor
push
filds
loop
mov
and
xchg
pop
mov
dec
sub
push
xchg
cmp
in
mov
loopne
hlt
mov
fwait
push
cmpsb
or
jae
aaa
sub
into
lcall
sbb
insl
sub
jmp
xchg
incb
lods
push
sbb
in
push
out
clc
sub
push
popa
in
mov
sarl
pop
cmpsl
xor
dec
pop
jecxz
addr16
in
ja
hlt
pop
pop
pavgw
call
lds
jmp
out
test
fs
jnp
cmp
outsb
scas
pop
addr16
adc
lahf
adc
test
mov
cltd
cmp
xlat
adc
push
push
testl
jbe
and
arpl
into
fisubrs
inc
inc
lahf
cmpsl
ja
xor
cmp
adcb
ss
js
xchg
mov
push
roll
or
xor
das
loope
jae
js
and
into
pop
inc
adc
fcmovbe
out
ss
mov
int3
adc
mov
test
ja
dec
mov
dec
add
scas
out
gs
and
das
nop
sti
xchg
movsl
xor
adc
lcall
out
add
sbb
sub
jle
jae
andl
sahf
into
fcmovbe
in
xor
xor
lret
rorb
adc
stos
stos
shlb
call
sbb
and
pop
jmp
jne
lods
fists
inc
mov
stc
lods
loopne
mov
ss
das
into
inc
mov
mov
adc
lea
lahf
popl
push
and
xchg
fstps
sub
ret
pop
xor
rorl
mov
in
or
pop
mov
scas
icebp
call
pop
pop
subl
jg
sbb
arpl
ds
xor
xchg
rolb
movsb
adc
sbb
es
mov
fbld
rorl
and
push
mov
roll
mov
aaa
out
cmp
sub
arpl
jb
gs
sbb
xor
shrl
imul
inc
dec
shlb
ret
sbb
mov
mov
cmp
xor
mov
sbb
ja
jne
mov
leave
es
mov
arpl
sahf
das
data16
and
sub
jo
outsb
xor
mov
imul
out
cs
repz
xor
in
adc
std
ja
test
xor
sbb
push
push
scas
mov
cld
movsl
pop
addr16
cmpsl
sbb
mov
jae
popa
fisttps
inc
ret
incl
stos
in
mov
je
sbb
pop
sbb
into
sub
and
leave
enter
shrl
xchg
jp
inc
test
pop
jecxz
lods
fs
push
pop
mov
dec
lahf
or
mov
xchg
fldl
loopne
lahf
lods
cwtl
mov
nop
jnp
scas
adc
mov
cmp
xor
repnz
hlt
loop,pn
mov
sbbl
cmpsl
insl
popf
add
mov
xor
js
adc
into
jecxz
jbe
or
pop
outsl
int3
insb
add
pop
cmp
or
popa
lods
pop
fmulp
jo
inc
mov
loop
ret
cmp
xchg
mov
mov
or
pop
add
sbb
push
sti
jl
jmp
push
outsl
cli
jns
ss
sbb
mov
out
add
jmp
aam
jb
into
outsb
rcr
adc
popa
inc
add
aad
into
sbb
sub
test
ret
inc
xor
in
imul
inc
lods
jnp
dec
stc
mov
pop
repz
in
nop
and
adc
mov
add
jnp
jne
dec
fldcw
pop
repz
mov
xchg
cmp
insl
and
or
pop
push
xor
rcr
mov
adc
fldpi
lods
out
out
leave
dec
add
adc
fst
sbb
jle
roll
mov
mov
shlb
dec
outsb
jge
daa
or
pop
jle
andl
mov
jmp
repnz
lahf
outsb
mov
fstps
aas
cmp
push
jnp
clc
popa
pop
cmp
jmp
imul
and
sub
loop
imul
mov
out
dec
xchg
lods
aad
lds
add
in
fisubrl
stos
lods
mov
cmp
adc
popa
jno
stos
push
in
push
inc
sbb
inc
mull
jge
adc
daa
into
push
dec
popa
jp
hlt
inc
test
inc
jmp
sbb
imul
out
arpl
and
jle
fdivrs
stos
fwait
add
xor
push
repz
inc
cmp
mov
mov
adc
or
nop
popa
sub
mov
hlt
inc
mov
push
jo
shrb
mov
mov
add
mov
xor
xchg
loopne
inc
adc
ljmp
out
data16
repnz
add
aaa
mov
push
iret
int
mov
pop
lods
jns
daa
test
cwtl
clc
outsl
inc
jo
arpl
sbb
push
mov
jb
fnsave
ret
jle
rcrl
jmp
xor
dec
cmp
mov
jmp
inc
inc
negl
xor
cmc
mov
jl
dec
js
and
repz
aad
out
lods
cmpb
fsubrs
sub
pop
push
adc
add
xchg
mov
mov
cmp
and
outsl
ja
sbb
lret
mov
sbb
mov
dec
xchg
sbb
and
pop
jb
mov
and
mov
das
xchg
dec
je
mov
xchg
and
xchg
stc
mov
imul
cli
adc
and
shrl
inc
ffree
sahf
aas
mov
jo
sub
mov
shl
leave
add
cmp
aam
fdivp
outsb
push
daa
iret
ds
pop
iret
xor
add
fimuls
pop
mov
out
add
add
subb
xchg
cmp
cmc
xchg
cmc
daa
xchg
xchg
rclb
aas
fnstsw
dec
mov
mov
adc
inc
add
sahf
mov
sbb
in
cmp
lea
xchg
iret
jnp
ja
pop
stc
bswap
dec
jmp
add
fs
fcoms
pop
mov
pop
das
jecxz
sbb
push
push
into
jno
inc
loop
adc
notb
xchg
lods
xor
inc
jbe
xchg
sbb
push
sub
pop
mov
lock
iret
lds
out
sarb
push
fisttps
inc
or
aad
mov
rol
mov
cmp
sarl
shlb
enter
stos
xchg
sbb
adc
xchg
fstpt
negl
mov
xor
gs
cmp
add
mov
mov
mov
adc
push
add
fwait
sub
aad
inc
repz
ret
inc
jmp
mov
jmp
mov
decl
mov
jg
andb
daa
outsb
adc
jae
dec
cld
cmp
inc
add
arpl
scas
add
jmp
mov
xchg
mov
mov
mov
sbb
bound
jge
mov
cwtl
into
pop
mov
sahf
adc
xchg
scas
cmp
roll
sbb
mov
mov
xor
call
sti
xchg
int3
fadds
outsl
je
pop
fnstcw
out
mov
ds
ror
or
add
je
xor
lods
imul
xchg
pop
dec
daa
adc
aaa
fisttpl
addr16
dec
std
adc
mov
jle
rclb
rorb
cmp
mov
out
pop
mov
pop
cli
mov
mov
lods
lret
movsl
mov
sbb
aam
jmp
scas
fxch
jne
lret
xchg
nop
imul
cmp
inc
sahf
sbb
scas
dec
ljmp
add
arpl
ret
enter
rolb
push
aad
scas
sbb
adc
test
idivb
popf
mov
add
adc
mov
pop
sti
pop
test
and
adc
or
push
cmp
clc
and
or
daa
lret
jns
add
insb
xchg
inc
xorl
rcll
das
mov
movsb
das
lods
jmp
and
sub
push
jmp
subl
stos
adc
dec
mov
testl
iret
sbb
insl
dec
add
pusha
jns
push
xchg
pop
sbb
mov
jae
or
mov
push
add
cmp
cs
xlat
add
loop
xchg
inc
add
ret
jno
sbb
jp
push
mov
addr16
call
fbstp
inc
and
iret
je
movsb
sbb
pop
mov
sbb
xlat
and
in
cmp
sub
inc
and
inc
imul
std
cmp
mov
sub
outsl
orb
outsl
sbb
or
popa
jle
mov
mov
cmp
int3
loope
dec
mov
es
inc
pmulhuw
mov
fisttps
lock
je
mov
fidivl
fdivrp
pop
inc
push
addr16
jp
lods
dec
fs
jns
cmp
pop
out
and
mov
add
repz
arpl
mov
arpl
loopne
push
aam
popf
xor
mov
pushf
or
sbb
stc
inc
mov
push
xchg
in
sahf
ret
fisttpll
sub
stos
xchg
dec
clc
outsb
in
mov
or
sub
jae
add
adc
cltd
movsb
int
adc
sub
jmp
sahf
scas
int3
xchg
f2xm1
popa
shl
cli
outsl
mov
push
xchg
mov
bound
movb
and
ret
cmp
aaa
daa
into
or
es
dec
push
adc
sbb
mov
mov
xchg
mov
insb
xchg
sub
ja
inc
je,pn
or
shll
icebp
rolb
push
cs
imul
mov
mov
and
and
adc
sbb
inc
mov
lahf
pop
insl
mov
fists
adc
stos
stos
fs
jmp
inc
fcoml
mov
mov
cmpsb
iret
xchg
lahf
jp
inc
mov
clc
and
pop
inc
hlt
push
rcrl
scas
dec
mov
aad
pop
inc
cmc
nop
jmp
and
pop
push
dec
pop
fstpt
pop
push
or
sub
btr
push
cmp
pavgb
adc
in
mov
sbb
jae
sub
xchg
outsl
out
mov
mov
inc
cmp
pop
data16
push
in
pop
imul
mov
orb
dec
push
add
pop
xchg
out
sbb
mov
lods
pop
and
mov
repnz
call
out
inc
fnstcw
ror
loop
dec
icebp
mov
mov
cmc
sub
cmp
outsl
ljmp
outsl
sbb
jns
ljmp
lods
xchg
mov
mov
ljmp
or
negb
outsl
cmovns
push
xchg
out
stos
nop
pusha
mov
shlb
lds
pusha
mov
mov
cmpsb
outsb
shr
cwtl
ret
and
dec
mov
movsb
aas
mov
jge
aas
sahf
ljmp
mov
jbe
imul
add
lret
xor
sbb
sub
in
loop
push
add
cli
dec
js
loope
xor
xchg
fcomps
das
pop
add
mov
jmp
ds
in
out
imul
in
das
lods
div
insl
int3
adc
cwtl
push
mov
cltd
or
shll
jp
cmp
mov
push
adc
jecxz
push
jmp
enter
cmp
mov
sahf
aad
pop
add
xchg
popf
test
idivb
pushf
in
mov
aas
xchg
out
hlt
clc
push
xchg
leave
cli
xchg
sub
xchg
fwait
push
iret
popf
pusha
adc
jl
ja
mov
sub
add
cwtl
ljmp
mov
into
lods
pop
push
xchg
xchg
mov
mov
xor
or
mov
pop
xchg
movsl
mov
push
subl
sbb
jno
fnstcw
movsb
add
ljmp
scas
int3
movsl
mov
xor
fbld
and
scas
ja
push
popf
arpl
xchg
bound
test
repnz
pushw
into
mov
jmp
aas
int3
cmp
pop
mov
dec
in
push
mov
clc
aaa
mov
sub
adc
or
mov
pop
shll
mov
pop
loop
clc
inc
push
fmull
xor
fcmovu
ja
push
popf
loopne
pop
jmp
and
push
mov
and
pop
addr16
popf
pop
xchg
inc
dec
xor
out
pop
dec
clc
es
out
mov
ficoms
xchg
in
sbb
imul
test
and
jno
in
lods
mov
sub
pusha
and
je
jbe
cmp
arpl
jl
cmp
imul
xchg
xor
mov
lods
pop
jl
testb
lock
gs
into
xlat
push
cld
push
scas
lock
imul
cmp
add
and
icebp
xor
jnp
stos
sti
imul
call
je
sbb
push
out
leave
test
jge
cmpsl
orl
ret
dec
stc
mov
mul
sub
aaa
jae
xor
fisubrs
pop
jne
in
in
and
and
sbb
cmp
loope
xchg
or
mov
lcall
mov
ds
jnp
dec
mov
mov
pop
or
decb
mov
outsl
shlb
mov
or
and
mov
and
imulb
push
mov
jae
leave
dec
adc
mov
mov
xor
lcall
push
es
dec
out
sar
pxor
xchg
xorb
imul
pop
stc
jo
sarb
xchg
jl
inc
ljmp
inc
out
movsb
lret
inc
stos
jmp
cmp
cmpsl
lcall
mov
loopne
movsb
jno
jb
and
fidivl
ja
or
pop
and
mov
cmpsl
cmp
out
inc
lcall
into
or
scas
add
cwtl
in
dec
sbb
xor
inc
pop
rcr
fwait
scas
test
xor
sub
ficompl
dec
cmp
push
inc
and
adc
xor
mov
mov
aas
mov
push
dec
test
addr16
call
jnp
dec
in
jp
arpl
lahf
jecxz
lret
xor
jecxz
mov
jl
mov
out
es
pop
data16
push
push
inc
pop
or
clc
xchg
jecxz
jno
pusha
or
mov
or
jns
lea
push
add
ljmp
inc
or
scas
das
ret
mov
inc
pop
jb
ljmp
fs
and
push
pop
add
jle
outsb
out
or
jg
or
lcall
arpl
mov
outsb
push
test
das
fstpl
jge
stos
cmp
xor
dec
dec
inc
fcmovnb
loope
and
inc
xchg
cmp
and
call
fistl
xlat
test
mov
mov
inc
xor
mov
rolb
jne
fdivrp
xor
push
insb
std
shr
out
inc
out
aad
int
fwait
int3
int3
aaa
sahf
lahf
imul
scas
jmp
sbb
lock
push
adc
or
pop
mov
xor
paddq
mov
hlt
add
sbb
xor
jae
test
sbb
das
inc
ffreep
cmpsb
bound
mov
xor
sbb
rclb
into
push
adc
pop
ret
xor
mov
dec
jle
and
cmp
xor
imul
pop
call
bound
aaa
push
lahf
loopne
loopne
push
jle
push
xor
movsb
mov
aad
test
mov
and
add
mov
or
cmpsb
jb
xchg
in
and
orb
and
sti
push
call
je
inc
daa
sbb
cmp
movsb
pop
ret
jae
ret
ss
int3
inc
scas
std
pop
stos
orb
test
xor
ljmp
sub
clc
sti
or
dec
arpl
inc
jne
js
lcall
pop
fcomps
mov
pop
popl
fidivrl
dec
repz
clc
jecxz
xlat
imul
and
iret
lock
scas
mov
clc
xorb
pop
dec
xchg
outsl
loopne
jl
mov
or
in
mov
or
xchg
jns
int3
lock
and
mov
aaa
lods
sahf
adc
in
in
dec
mov
outsb
pop
sbb
push
stos
js
sbb
mov
mov
sbb
orb
cld
cmc
and
cmp
push
cmp
jae
mov
clc
daa
in
xadd
xchg
cs
call
cmpsl
push
pushf
in
test
lods
aaa
js
rcrb
dec
and
cmp
push
sub
dec
nop
les
daa
scas
push
or
lea
scas
pop
in
push
insb
cmp
pusha
sbb
popa
cmp
andl
test
dec
int3
xorl
es
ret
xorb
xchg
cmpsl
popa
icebp
daa
or
push
bound
add
pushf
jmp
mov
xlat
sbb
sbb
cld
hlt
aam
shrb
aas
jmp
cli
lret
xchg
push
jbe
or
pop
into
out
mov
jmp
fwait
mov
js
inc
js
sbb
subb
xlat
outsb
xchg
mov
push
scas
shlb
dec
fbld
fwait
xor
loopne
in
test
in
and
mov
sub
movsb
push
insb
or
lahf
fdivrs
inc
sub
aaa
adc
lock
daa
xchg
inc
cmp
or
or
stos
shl
jmp
pop
lret
push
in
pop
arpl
stos
rcr
arpl
jae
add
sbb
sub
js
ret
xor
dec
and
xor
push
xor
mov
dec
stos
push
jl
outsl
or
arpl
xchg
jmp
pop
nop
pop
sub
ret
je
add
rcrl
aaa
xlat
jae
cmp
adc
mov
pushf
or
cmp
xchg
lea
aaa
fcompl
cltd
popf
add
dec
pop
jnp
fsubl
ja
outsl
test
aaa
jecxz
andl
push
aas
repz
xchg
mov
inc
cmp
shll
sub
adc
lret
push
cmpl
lods
ror
adc
lcall
xchg
loop
or
cmp
xchg
cld
adc
dec
fcompl
cltd
popl
inc
pop
xor
and
push
pop
and
mov
push
gs
and
ja
jp
xchg
inc
jl
add
cmp
xchg
mov
push
shrl
push
cmp
mov
movsb
loop
hlt
xchg
or
adc
imul
cltd
sbb
int3
mov
push
nop
push
bound
mov
cmp
test
lods
push
scas
and
dec
test
sbb
imul
lock
mull
mov
movsb
jp
adc
hlt
rcl
das
lea
movsb
test
mov
push
jae
sub
inc
test
fdivl
stos
xor
mov
sub
cmp
add
and
add
popa
nop
subl
add
jo
enter
imul
stos
cwtl
sbb
popf
test
pop
xchg
mov
bound
xchg
xlat
cmp
je
dec
sbb
mov
sti
xor
fwait
lahf
cmpsl
pop
push
xchg
sahf
add
pop
subb
sub
mov
nop
inc
insl
mov
adc
or
addr16
sahf
cmpb
sarl
and
icebp
lods
sbb
pop
fists
pop
in
and
sbb
add
push
mov
outsl
std
aas
lret
push
and
call
popf
rolb
int3
aad
push
sbb
cmp
cld
mov
roll
fimuls
add
in
test
mov
dec
sbbl
testb
inc
mov
repnz
add
testb
add
pop
rcll
loop
cmc
dec
mov
push
add
pop
int
scas
negb
out
cmpsb
or
xor
ffreep
inc
add
dec
movsl
xor
push
fcompl
arpl
pop
shrl
repz
dec
fiaddl
xor
adc
cmp
or
shll
rorb
pop
xor
add
das
es
pop
jmp
jns
jg
dec
adc
loop
jb
outsb
mov
jmp
cmp
aas
and
jb
or
push
pop
sub
or
stos
xor
cmp
push
sbb
imul
rcl
shlb
outsb
sahf
pop
xchg
push
mov
lock
addl
push
scas
push
mov
ficomps
push
pop
push
sbb
add
ds
adc
adc
add
xchg
add
add
inc
push
lods
out
jle
std
aas
xor
fisubs
ljmp
sti
cs
push
mov
push
pushf
dec
lret
aaa
out
xchg
sarb
outsl
rclb
loopne
inc
pop
nop
sub
aas
enter
jge
mov
dec
pop
push
adc
inc
push
xor
xor
and
jb
and
stos
imul
bound
cli
adc
inc
lar
je
xor
xchg
sub
dec
orb
or
mov
cmp
stos
pop
push
xchg
movsb
pop
xor
into
dec
out
loopne
es
adc
stos
jecxz
lahf
xor
jle
push
mov
inc
lea
int
dec
into
call
outsb
xor
cld
sbb
divl
xor
inc
pop
jge
repz
mov
or
insl
stos
adc
repz
in
stos
pop
in
test
jl
push
or
jecxz
cli
or
mov
icebp
cmpsb
lahf
hlt
dec
shrb
jne
jecxz
scas
in
dec
fadds
add
stos
sarl
pop
into
xor
mov
enter
jns
push
shr
pop
fwait
sahf
fbld
and
out
cmp
icebp
lahf
movsb
dec
xor
cmc
add
mov
sbb
mov
and
int3
aam
movsl
mov
outsb
adc
inc
cmpsb
or
subl
in
std
lods
rorb
cmp
adc
imul
bound
rcr
dec
mov
adc
pop
pop
insl
hlt
inc
out
sub
fwait
push
or
enter
push
mov
adc
sub
scas
sbbl
in
add
mov
xorb
iret
adc
cmpsl
adc
xor
fwait
jno
pop
ror
xor
jl
adc
sbb
lahf
or
jecxz
mov
cli
sub
out
push
fisubs
ss
jns
aas
jmp
out
hlt
dec
scas
pop
cmc
loop
mul
push
or
dec
push
lock
out
cmp
dec
or
test
cmp
xchg
and
mov
dec
pop
adc
sub
pop
pop
fldt
dec
das
pop
in
sub
arpl
pushf
jl
push
mov
sub
shr
push
lret
out
popa
sbb
xchg
pop
push
inc
arpl
cmp
inc
jne
loopne
mov
sbb
test
xor
push
into
mov
mov
int3
and
and
push
dec
stos
loope
xor
loopne
stos
dec
das
fs
aas
sbb
mov
insb
std
cmp
push
jb
pop
push
mov
and
cs
push
test
mov
test
inc
adc
add
in
add
call
aaa
sbb
les
adc
xchg
or
and
dec
insl
insl
in
je
popa
adc
mov
fwait
and
ret
jecxz
imul
das
in
pushf
mov
pop
sbb
sub
xor
or
sub
std
lcall
lahf
insl
dec
out
cld
jl
mov
vpsubb
scas
pop
sti
pop
int3
jbe
pop
pushf
and
cmpsb
adc
aam
push
mov
mov
bswap
in
dec
jl
outsb
insl
in
inc
insl
in
mov
inc
mov
adc
mov
push
rcr
push
loopne
test
pop
sti
dec
fwait
add
sub
idivb
adc
rolb
mov
inc
gs
jns
inc
push
jecxz
dec
sbb
fwait
in
add
adcb
dec
push
or
cmpsb
outsb
pop
movsb
push
sbb
sbb
pop
jmp
push
mov
jne
call
jno
mov
inc
sti
fcompl
iret
out
in
and
addr16
dec
ja
outsb
lods
cmpsb
fucomi
dec
fists
pop
xchg
push
je
or
or
mov
mov
push
sub
mov
mov
movsl
and
icebp
or
sbb
out
repnz
or
sbb
xlat
pop
ret
nop
xchg
mov
dec
mov
fcompl
pop
cmp
or
inc
int3
add
ljmp
movsb
in
pop
repnz
test
xchg
ret
fdivs
in
push
push
mov
stos
imul
push
shll
mov
in
ljmp
xchg
or
mov
dec
sub
aam
in
jnp
mov
xchg
mov
mov
popf
dec
push
out
jmp
cmp
mov
xor
ds
inc
sub
imul
mov
add
push
stos
lods
dec
ss
and
dec
ficoms
or
cmp
or
dec
jmp
rcrl
mov
fldt
test
mov
inc
mov
cmp
cmp
and
pop
sbb
movsb
xchg
jp
inc
xor
insb
leave
and
jg
dec
mov
sbb
aas
and
add
or
pop
and
add
or
andb
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
and
add
and
add
and
add
or
add
or
and
or
adc
or
sub
or
push
and
add
or
sub
or
cmp
or
xor
or
inc
and
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
daa
repz
or
in
add
push
fildll
push
add
xchg
ljmp
inc
inc
sbb
push
repnz
pop
insb
inc
and
inc
daa
lock
sub
add
mov
add
add
inc
add
inc
add
add
add
nop
xorl
xchg
xor
rcrl
push
sahf
add
add
mov
push
lods
add
scas
add
add
add
mov
inc
mov
cltd
mov
loope
add
add
mov
xor
add
adc
sbb
adc
add
adc
lock
add
les
jle
pop
jbe
pop
jmp
add
add
sbb
test
sub
adcb
rclb
negl
mov
add
or
or
push
add
inc
sti
push
add
push
add
pop
add
pop
add
or
push
add
add
into
sbb
push
int3
sub
or
add
sete
mov
add
xchg
sbb
aaa
sbbl
push
inc
addb
pop
nop
xlat
data16
sub
jo
push
mov
pop
sbb
add
push
loope
jnp
loopne
les
jae
arpl
cmp
inc
dec
adc
add
loop
push
add
jmp
sub
add
lods
outsl
xor
pop
add
pop
add
pop
add
popf
cmp
int
sti
lds
or
or
andb
fcoms
mov
loopne
xchg
add
insl
xor
mov
and
xor
or
add
push
add
lock
add
pop
add
dec
clc
mov
adc
adc
adc
xchg
adc
adc
lcall
adc
popf
adc
adc
adc
adc
adc
mov
ljmp
sbb
or
and
cmp
es
xchg
mov
les
and
mov
fldl
loopne
decl
clc
add
cmp
outsb
fbld
cli
cmp
add
or
mov
testl
mov
stos
enter
sbb
ud0
jg
addr16
adc
dec
xor
aaa
adc
cmp
push
jb
sbb
imul
movsb
in
ret
xchg
lahf
and
inc
xchg
adc
add
adc
fisubrs
add
cmpsb
out
cmpb
loop
sbb
aad
inc
or
inc
or
or
or
mov
repnz
mov
pop
add
or
fistl
rclb
inc
add
add
nop
and
xor
adc
insb
sub
and
and
int3
add
adc
xor
fs
add
mov
jl
je
inc
and
mov
add
lods
rcll
mov
sahf
mov
dec
pop
add
xor
or
lahf
push
cmc
in
push
add
sbb
jp
adc
cwtl
inc
cmp
fldz
adc
inc
outsb
and
push
jo
sub
sub
test
and
jecxz
sub
xor
add
dec
xchg
xchg
dec
aas
add
mov
subb
mov
or
test
push
sbb
arpl
ss
lret
adc
jmp
scas
or
dec
pop
add
push
inc
jle
cmp
lcall
add
inc
sub
push
cmp
mov
and
add
sub
push
jae,pn
xor
ficoms
mov
cwtl
and
in
and
xor
cmp
ds
mov
loopne
shrl
inc
mov
fidivrl
add
add
mov
out
add
mov
or
mov
enter
jno
add
sbb
out
jge
enter
ret
fdivs
sahf
push
inc
adc
pop
add
lahf
add
mov
movsl
jb
mov
call
sub
dec
or
push
je
xchg
sbb
dec
sarb
or
or
pop
stos
mov
adc
add
cmp
dec
dec
and
data16
jb,pt
jge
xchg
repz
fldl
and
test
add
cmp
lahf
adc
add
dec
push
fsts
sub
pop
xchg
int3
leave
and
pop
lock
sub
dec
add
shr
sub
push
and
adc
push
call
and
inc
or
pop
adc
mov
mov
fwait
and
dec
lret
add
stos
sahf
mov
pusha
add
ljmp
jl
jle
add
inc
mov
add
dec
add
inc
imul
xor
sbb
jmp
xchg
xor
cmp
or
mov
push
sbb
fildll
sub
cmp
jo
inc
push
fldenv
add
data16
and
mov
imul
test
clc
inc
mov
jns
inc
ret
inc
mov
sbb
pop
or
adc
push
cmp
adc
mov
jo
mov
or
inc
sbb
jnp
adc
inc
sahf
rcl
adc
lret
cs
outsl
or
out
testl
adc
pop
inc
jns
add
mov
jae
pushf
mov
pop
outsb
add
add
add
nop
jnp
push
mov
mov
dec
adc
adc
jmp
jnp
pop
xor
add
lahf
mov
sbb
push
fdivl
cmpb
iret
inc
and
xor
int
icebp
add
or
data16
push
mov
jnp
js
or
loopne
stos
leave
fildll
and
jnp
add
inc
push
mov
or
stos
xor
push
outsb
cmp
rol
add
dec
pop
lods
mov
fiadds
cli
imul
adc
inc
xchg
shlb
or
xlat
or
data16
and
jle
add
add
dec
les
sahf
add
add
pop
mov
lahf
mov
inc
push
or
dec
movsl
xchg
pop
mov
adc
jmp
pushf
loopne
add
aaa
mov
pop
out
bound
push
data16
cmp
aam
and
ds
add
adc
adc
xor
aad
pop
outsb
test
mov
adc
ret
push
push
push
add
fcom
daa
lret
imul
sub
mov
push
add
arpl
add
repnz
push
punpcklbw
dec
lock
mov
add
cmp
popf
out
mov
inc
or
xlat
push
imul
and
cwtl
leave
sub
movlps
arpl
or
lods
add
mov
clc
xor
test
push
or
imul
push
adc
add
mov
mov
es
push
loopne
fstl
mov
mov
push
xlat
inc
add
xchg
rcll
enter
push
dec
bound
dec
addr16
mov
adc
pusha
ds
mov
adc
clc
es
enter
mov
sub
mov
lcall
inc
andl
outsl
sub
mov
sbb
testl
aaa
scas
in
or
mov
xor
add
inc
es
mov
add
push
xor
push
or
mov
out
orb
mov
call
add
push
adc
int
cmc
adc
pop
cmpb
stos
pop
sub
test
iret
int
inc
outsl
lds
stos
push
add
dec
out
call
outsl
mov
xor
push
or
lcall
cli
lock
cmpsb
aas
add
lea
add
pop
fstpl
add
imul
sub
inc
xor
sahf
add
adc
stc
addr16
clc
out
add
add
popa
add
adc
stc
inc
callw
int3
sahf
fldl
inc
mov
mov
cmp
arpl
imul
fcompl
inc
sbb
mov
sub
aam
add
stos
add
push
jl
adc
mul
or
ja
lret
add
data16
jp
and
add
push
es
outsl
addr16
add
leave
out
fsts
or
sbb
cmp
add
mov
mov
dec
jge
test
jno
pop
mov
push
push
fnstenv
sti
and
inc
and
or
jp
dec
ja
and
inc
jge
ret
mov
aaa
dec
xchg
lcall
adc
mov
rclb
frstor
pop
leave
lret
mov
rcl
das
push
and
outsl
add
lar
jg
push
add
push
pop
add
leave
dec
fnsave
dec
stos
arpl
bound
and
add
cmp
add
mov
add
inc
aam
loop
or
mov
or
or
ficomps
test
ret
out
xor
hlt
or
sbb
test
add
mov
inc
push
cmpsl
ds
add
int3
fdivr
repnz
xchg
add
pusha
xorb
dec
xchg
ja
fucomi
nop
adc
cmpl
sbb
dec
repz
enter
mov
push
outsl
sahf
fiaddl
mov
hlt
add
cmp
hlt
xchg
fwait
lahf
fiaddl
in
dec
inc
jg
adc
inc
xor
xchg
ss
ds
pop
adc
push
push
ss
push
cmp
dec
dec
cs
sub
add
jl
cmp
ljmp
mov
in
mov
inc
pop
add
and
xchg
repz
testb
push
icebp
mov
sbb
repnz
insb
xor
xchg
sbb
mov
pop
add
add
into
leave
test
pusha
sbb
movsb
rolb
adc
or
cmovs
add
sbb
sub
ds
pop
sbb
dec
xchg
repz
xchg
cmpsl
je
xor
inc
ja
imul
stos
push
inc
inc
adcl
sahf
and
subb
xor
inc
arpl
sub
adc
mov
adc
or
cmp
and
adc
jno
xor
scas
add
dec
lock
push
sub
jl
nop
pusha
mov
push
addl
cmp
and
addl
mov
inc
cltd
xor
sub
je
sbb
dec
cmp
aam
jno
imul
addr16
fadds
add
jo
rolb
mov
pop
add
or
pop
into
and
sti
inc
mov
ret
call
popf
lret
cld
shr
fldl2t
or
std
add
xchg
in
jl
inc
cwtl
push
mov
add
enter
mov
adc
dec
jmp
decb
xchg
out
mov
pop
add
mov
mov
mov
xorb
adc
inc
call
push
pop
pop
neg
adc
add
pop
addl
xchg
jecxz
adc
out
subl
cmp
push
test
adc
setno
cmp
dec
xchg
ljmp
rclb
pop
or
fucomip
push
jnp
das
sar
mov
add
out
jo
push
in
ds
push
jmp
add
mov
mov
mov
sbb
sub
fldenv
sbb
nop
pop
inc
push
inc
push
mov
stc
enter
enter
mov
sahf
ljmp
pop
sub
jmp
xor
ror
adc
add
xorps
dec
sub
cli
adcb
iret
inc
cmpsb
lea
in
imul
movswl
inc
xchg
inc
nop
add
jns
mov
leave
call
mov
test
movl
imul
dec
jle
rclb
jbe
add
popa
mov
dec
mov
mov
cmp
dec
adc
bswap
xchg
and
add
dec
cmpsb
or
inc
jmp
ret
mov
xor
test
or
and
gs
ret
push
jge
pusha
movsb
stos
cmpsb
mov
adc
into
xor
sbb
add
shlb
lret
sbb
mov
or
adc
inc
mov
test
mov
mov
and
xor
push
lcall
data16
mov
xor
xor
mov
scas
add
jge
outsb
cmp
mov
imul
notl
stc
add
in
dec
stos
or
add
arpl
pop
inc
test
popf
filds
mov
scas
inc
pop
jne
jns
mov
or
cmp
test
sub
pop
sarb
clc
inc
or
pop
dec
mov
loopne
jmp
push
pop
std
xor
test
lcall
cltd
xor
or
mov
push
and
dec
cmpsb
lods
add
into
clc
nop
test
not
fildl
dec
fstpl
or
cmp
rolb
or
push
add
lret
setb
inc
addb
cmpsb
sahf
cmp
jne
lcall
inc
mov
add
insl
push
orb
cmp
pop
pop
leave
mov
mov
jns
clc
cmp
mov
mov
mov
clc
adc
push
mov
sub
dec
call
xlat
mov
leave
call
das
imul
or
pop
stc
sbb
push
pushf
mov
divl
testb
js
pop
or
pop
sbb
leave
inc
dec
sbb
fstl
ret
jns
push
inc
cmp
imul
adc
cmp
add
loop
or
pop
push
jne
inc
rorb
pop
cmp
mov
popa
adc
int3
xor
call
add
shl
cwtl
sbb
or
push
std
addl
ror
test
pop
jge
iret
idivl
push
pusha
or
roll
repnz
pop
add
les
cmpsl
addl
test
addr16
icebp
adc
in
add
imul
mov
mov
mov
addb
ja
inc
cltd
dec
pop
adc
push
sub
inc
push
fistpl
adc
pop
sbb
pop
mov
xor
add
daa
push
bound
sub
jo
mov
jae
shl
pop
iret
cmp
inc
mov
enter
lods
push
xor
ret
pop
test
push
fs
mov
cs
inc
sarl
movsb
xor
std
pop
jns
sub
fildll
sub
dec
push
inc
test
data16
and
sbb
psllw
push
pop
stos
pop
mov
xor
pop
jmp
leave
push
add
inc
or
push
icebp
or
mov
fistps
ds
mov
inc
adc
mov
fmuls
cltd
or
imul
add
mov
dec
adc
push
jne
cmp
xchg
les
adc
test
push
clc
cmp
xchg
dec
mov
aas
shrl
push
jle
int
xor
sub
jno
das
cmp
jb
xor
cmp
pop
mov
test
sbb
jmp
dec
sub
outsl
dec
xor
cmp
adc
pop
pop
out
mov
inc
cmp
aad
and
aas
and
lcall
sbb
pop
push
in
rolb
mov
xor
cmc
add
jae
sub
pop
push
pop
inc
push
and
or
rcll
mov
cwtl
cmp
jge
or
std
fisubrs
in
stos
jle
popf
jbe
dec
icebp
insb
adc
and
stos
aad
scas
pop
in
inc
or
and
or
push
leave
sub
lea
adc
inc
lea
jg
rcrb
arpl
mov
sarl
rep
movsl
imul
insb
scas
push
cli
std
add
jno
fs
daa
jle
cmpsl
adcl
fdivs
sub
cmp
popa
adc
and
xchg
jns
mov
jl
lcall
sti
adc
mov
mov
fs
mov
sub
xlat
inc
loope
inc
dec
fwait
jbe
sbb
and
jbe
sub
cwtl
icebp
inc
pushf
inc
movsl
inc
dec
sbb
stc
pop
js
cmpsl
dec
mov
mov
mov
xor
xor
add
loop
stc
adc
sbb
sub
rolb
icebp
sub
dec
dec
hlt
stos
and
test
dec
add
popa
hlt
mov
arpl
sbb
dec
pop
cmp
stos
je
lods
adc
push
mov
in
dec
cmp
repz
stc
mov
xchg
ds
ds
leave
adc
dec
pop
cli
addr16
mov
and
add
sarl
out
mov
inc
in
sarl
and
loop
cmp
inc
adc
popf
data16
sub
add
and
leave
sarb
jo
cmp
push
xchg
mov
cmp
inc
scas
pop
ror
adc
xor
roll
mov
sbb
jmp
sub
mov
aam
or
nop
pop
cmp
test
xchg
sbb
xlat
inc
ret
jecxz
cmpsl
pop
sti
test
xchg
push
inc
popa
fistps
xchg
pop
jae
xor
pop
pop
xlat
mov
jb
inc
iret
mov
icebp
cmpsl
xchg
out
mov
mov
js
mov
adc
and
ss
hlt
sbb
fs
fcompl
or
adc
std
jae
sub
call
inc
repz
nop
sub
inc
dec
stc
movsl
cmp
sub
mov
cmp
movsb
imul
cmp
test
fsqrt
dec
jnp
enter
pop
jmp
pop
cmp
aam
insb
bound
movsb
lahf
pushf
mov
scas
add
push
dec
mov
das
ds
pop
mov
or
inc
scas
xchg
xchg
inc
sbb
xchg
xchg
push
xchg
test
mov
ljmp
cmc
or
jne
fcompl
repz
cwtl
mov
sahf
adc
in
or
and
addb
decl
shll
cmp
xlat
xchg
in
dec
cmc
lret
mov
dec
push
xor
scas
fs
inc
repnz
pusha
addr16
cli
push
cmc
pop
lods
stos
leave
ss
dec
and
in
jbe
inc
leave
push
aas
movsb
jge
clc
jo
fsubr
mov
cmp
ja
or
stos
scas
aad
and
dec
and
js
mov
pushf
pushf
sub
pop
sub
sbb
or
cs
and
add
add
cwtl
repnz
dec
inc
dec
sbb
cmp
or
sti
push
das
and
divps
in
stc
fimull
fstpl
xchg
and
dec
lret
mov
test
js
add
sbb
clc
cs
scas
adc
push
dec
adc
sbb
fs
dec
das
inc
add
lahf
aaa
scas
test
cmc
xchg
xchg
aas
mov
adc
jle
push
cmpsb
or
pop
and
leave
push
mov
jne
call
clc
outsl
inc
xchg
pop
cmp
lahf
push
xor
push
xchg
pop
out
or
cli
shrl
push
mov
imul
adc
mov
xor
pop
sub
addr16
loope
jne
test
push
mov
aad
mov
sub
stos
or
xchg
dec
lret
dec
xor
jg
popa
out
inc
lahf
in
cmp
pushf
mov
test
negb
add
xor
adc
stc
pop
rol
sti
test
sub
sub
push
mov
xor
insl
push
testb
mov
sub
mov
jns
push
or
jbe
and
sbb
sub
mov
fcmovnu
inc
sub
sbb
xchg
dec
stos
outsl
jge
test
ret
xorl
mov
dec
mov
fstps
pop
lcall
int
push
pushf
dec
ljmp
push
sub
addr16
xchg
push
dec
lcall
pop
push
xor
mov
pop
stc
clc
cmpsb
sbb
flds
aas
cld
jmp
jle
add
fnsave
adc
fcoml
add
stos
inc
dec
add
mov
push
pop
scas
sub
pushf
xlat
mov
mov
cli
dec
push
cltd
jge
add
sub
cmp
sbb
and
xor
xchg
popa
icebp
mov
add
push
dec
sbb
xchg
sub
jmp
loop
outsb
cltd
dec
mov
and
inc
or
mov
cmp
jae
negl
mov
loopne
mov
and
int
int
mov
and
sbb
shll
mov
mov
shlb
pop
mov
lahf
jbe
push
and
cmp
dec
mov
iret
mov
dec
and
add
adc
nop
xchg
cmp
inc
repz
imul
lcall
fsubr
inc
push
inc
push
mov
pop
in
std
jae
jg
xor
pop
das
mov
pop
loop
mov
out
aaa
inc
adc
jl
add
inc
mov
xor
sub
cmp
xchg
add
lods
sbb
push
sbb
call
cld
sub
and
add
dec
in
hlt
fistpl
js
or
dec
dec
mov
add
cmp
add
mov
lock
test
mov
adc
test
test
fsts
daa
add
lea
mov
dec
dec
pop
mov
dec
js
cmp
push
je
leave
mov
mov
insb
mov
lods
adc
dec
mov
sbb
cmc
lds
push
and
lret
adc
orb
adc
call
cs
lahf
sar
xchg
cmp
xchg
mov
push
fsubr
fwait
in
sbb
push
addr16
into
sub
inc
mov
fisubs
ffree
js
cwtl
and
mov
mov
popa
pop
sbb
mov
aaa
cwtl
std
push
sub
shlb
cli
fwait
rcll
sub
or
jp
fldl
xor
lock
mov
lret
or
test
test
sbbb
or
sbb
lret
add
xchg
imul
adc
les
sbb
xor
fsubrs
stos
mov
popf
imul
mov
ja
test
inc
sub
lods
sbb
loop
stos
cmpsl
sub
adc
dec
sbb
inc
leave
inc
aad
jnp
outsl
sub
push
push
lods
add
ds
fstps
mov
or
dec
les
subl
fldl
push
push
cmpsl
sbb
cmp
clc
loop
push
pushf
add
dec
sti
push
push
ss
ret
and
mov
cmp
xor
lea
push
jecxz
sub
aad
sub
dec
nop
ret
aam
imul
sarl
aas
sbb
ret
ja
inc
cmpsb
sahf
movsl
inc
mov
imul
inc
push
inc
stos
imul
mov
push
dec
in
jle
shll
pop
sbb
rol
adc
pop
imul
dec
ds
jmp
jno
lcall
xchg
fcompl
cmp
inc
and
aaa
cltd
adc
xlat
insl
inc
push
mov
jbe
push
insb
and
mov
pushf
cmp
std
fstpl
dec
dec
jecxz
ret
dec
cwtl
inc
jmp
push
insb
loop
or
inc
je
cld
xor
push
fists
pusha
cmp
pop
sbb
inc
mov
jmp
add
xabort
movsb
test
push
outsl
sahf
push
nop
inc
sbb
int3
stc
push
dec
sub
mov
jge
push
xchg
sub
cmp
fsubrl
xchg
jno
inc
xorl
loopne
push
mov
add
xor
mov
fidivl
or
stos
mov
cmp
out
inc
xchg
push
fiaddl
push
mov
or
aad
push
mov
fisubs
cmp
dec
bound
xchg
stos
mov
ret
jle
xor
popa
add
cwtl
sbb
sub
jae
lock
pop
mov
xorb
data16
mov
arpl
dec
shrl
pop
mov
dec
adc
ret
mov
cmp
clc
jmp
sub
xchg
sbb
add
add
cmp
aad
mov
es
aad
ljmp
jmp
or
jecxz
sbb
aaa
pop
data16
pop
add
cmp
adc
popa
mov
outsl
movsb
divb
mov
scas
mov
push
lea
adc
push
mov
in
add
and
adc
data16
dec
aaa
jnp
stos
and
cmpsl
pop
xor
sub
imul
pop
mov
jb
mov
xor
dec
mov
mov
cld
lds
addr16
in
test
movsl
adc
xchg
lret
shll
push
imul
dec
sbb
dec
int3
mov
in
cmp
shr
orb
into
xor
movsb
jl
jbe
dec
mov
pushf
in
dec
cs
xor
insb
int
pushf
movsl
test
hlt
sbb
and
rorl
into
add
mov
mov
jae
clc
lahf
and
mov
jmp
std
inc
mov
repz
push
rcrl
aam
jp
mov
adc
mov
test
push
pop
mov
addl
lcall
in
add
shl
in
push
adc
loope
push
pop
ret
lret
xor
pop
mov
jo
pop
pop
rcrb
xchg
in
pop
inc
sbb
aas
fcmove
stos
xor
inc
ss
negb
imul
movsw
cmpsb
jl
imul
mov
test
inc
test
add
lret
sbb
cld
mov
daa
leave
aaa
jne
imul
mov
push
leave
repnz
shlb
push
sub
push
enter
add
xor
mov
sbb
xchg
popa
xor
out
xor
push
aaa
lret
pop
sbb
movsb
cmp
mov
push
dec
add
xchg
lcall
dec
mov
fyl2x
jae
dec
test
and
mov
imul
mov
roll
mov
ljmp
fisttps
out
loopne
les
sub
pop
sbb
cmpl
sub
cmp
lcall
sub
mov
mov
mov
push
mov
mov
and
shrl
lock
xchg
sbb
stc
in
sti
pop
dec
add
jae
cs
or
inc
cli
fidivrl
cmp
sbb
loope
filds
sub
dec
inc
arpl
in
negl
cmp
cmp
pop
and
push
push
aad
or
mov
sub
mov
mov
push
pop
or
xor
add
xchg
cltd
sbb
pop
sub
xchg
push
cmp
inc
movsl
rol
or
adc
mov
rcl
and
stc
add
mov
inc
pop
mov
inc
ficompl
pop
and
mov
adc
jge
popa
jae
fsts
xor
pop
add
sbb
mov
dec
jns
and
push
std
mov
dec
adc
xorl
push
cs
xchg
push
movsb
arpl
es
push
sbb
and
mov
jb
shll
sbb
das
push
lret
xor
imul
cmp
je
punpckhdq
mov
rcrl
rcrl
sbb
push
jne
mov
xor
xorb
inc
pop
pop
sbb
lods
inc
leave
mov
or
mov
pop
xor
adc
and
push
sub
xor
inc
mov
loope
xor
sahf
je
push
cmpl
sub
push
mov
cli
ss
mov
xchg
dec
mov
mov
or
push
and
gs
test
jle
data16
jnp
dec
dec
movsl
sbb
mov
and
jbe
push
add
jbe
sbb
hlt
aad
push
inc
mov
or
movsb
mov
inc
pop
cli
data16
out
aam
cmp
das
push
mov
into
and
fistpl
xor
cmp
xorl
push
dec
dec
xchg
inc
loopne
jmp
and
arpl
push
or
mov
scas
lds
mov
adc
inc
push
scas
add
ss
and
ja
and
mov
mov
repz
jecxz
mov
fs
addr16
rolb
xor
sub
scas
cmp
xor
gs
jo
lea
push
fs
repnz
inc
mov
dec
xor
mov
or
call
pop
in
or
jg
js
aam
fldt
sbbl
push
lcall
pop
rcrb
mov
push
scas
scas
push
in
push
mov
nop
xor
sub
push
test
dec
stos
or
and
add
out
stc
add
cmp
inc
lret
stos
mov
iret
mov
cmp
dec
lcall
dec
test
push
mov
inc
cmp
lret
andb
mov
sub
inc
mov
mov
sbb
jbe
jle
xor
push
and
leave
mov
inc
stos
jo
jns
add
mov
cmpl
add
mov
addr16
cmp
imul
push
ss
out
add
cmpl
xor
sahf
into
data16
inc
andl
cwtl
cmp
into
out
sub
or
ret
int3
lods
xor
or
je
rorl
aam
xor
cmc
out
call
dec
cltd
add
adc
sub
scas
mov
fisubl
xchg
push
or
outsb
mov
pop
pop
pop
js
hlt
push
dec
icebp
fstpl
fldz
aaa
sbb
jp
cmp
cmp
imul
push
adc
push
aaa
jae
ljmp
push
mov
sbb
xchg
cmp
add
in
adc
pop
gs
dec
cmp
hlt
mov
lds
out
adc
shl
jmp
scas
ficoms
dec
mov
dec
out
lahf
testl
pop
pop
loope
or
into
push
scas
inc
dec
nop
daa
das
dec
fsubr
add
adc
faddl
sub
fisttps
add
dec
pop
dec
lret
outsb
mov
js
jo
aas
add
call
xchg
mov
out
iret
aam
xor
mov
fs
jo
les
test
lcall
repz
and
push
cmp
push
dec
imul
or
jo
adc
loope
xorl
clc
aas
xor
test
mov
push
stos
adc
lcall
or
lds
and
sbb
in
dec
cmpb
test
divl
and
ja
mov
sub
cltd
das
mov
out
cltd
pusha
push
mov
out
add
outsl
jmp
dec
inc
jo
xchg
repnz
test
xor
push
jl
testb
std
or
pop
jg
dec
jle
sarb
push
js
sbb
jl
hlt
add
lret
jge
cmp
jp
mov
dec
test
fwait
or
sub
xor
pop
cwtl
or
int
xchg
mov
sbb
mov
sbb
mov
mov
adc
lret
call
enter
jbe
push
xor
jne
dec
dec
ja
inc
pop
inc
jp
inc
je
xchg
sub
sbb
cmp
pop
push
movb
mov
sub
xchg
adc
xchg
or
lock
jl
and
cmpsl
cwtl
jno
fcomp
neg
add
xchg
xor
movsl
scas
and
dec
jbe
loope
mov
sbb
sub
bound
mov
push
push
adcl
ja
mov
inc
nop
or
fucomi
lods
push
jecxz
or
sub
adc
push
pop
push
mov
push
push
cwtl
outsl
shl
mov
mov
inc
aaa
movsb
cmp
test
ljmp
enter
xor
sbb
mov
data16
or
out
cmpsb
adc
sbb
cmp
sbb
iret
add
ds
loopne
or
test
addl
popa
mov
iret
cmpsl
leave
pop
sti
pop
push
mov
inc
jbe
or
mov
imul
icebp
mov
adc
cwtl
rcll
js
mov
add
lahf
add
es
popa
xchg
jno
loope
pop
idivb
rolb
and
push
dec
stc
fimuls
xor
pop
popf
add
ret
out
aaa
cmc
leave
cmp
loopne
movaps
in
clc
loope
jb
jns
dec
dec
sub
nop
sar
mov
add
inc
pop
or
icebp
inc
pop
inc
lret
dec
pop
cmc
and
sbb
jge
icebp
aaa
push
jns
notl
cmp
icebp
sbb
cmp
push
cmp
dec
xchg
adc
sbb
inc
lods
data16
dec
cmp
push
cmp
imul
inc
lret
icebp
adc
push
inc
sti
xchg
bound
mov
mov
xchg
dec
dec
imul
sarb
mov
sub
jg
icebp
push
mov
jg
or
xor
jnp
add
jae
and
lahf
in
mov
lods
lcall
add
pop
mov
rclb
add
fidivl
cwtl
pusha
dec
lret
jg
scas
inc
arpl
int
frstor
sti
ftst
sub
mov
shll
stos
fwait
add
mov
and
xchg
inc
jge
loope
cmp
jmp
sbb
aaa
mov
and
in
inc
mov
sti
jl
and
add
lock
lcall
adc
sub
cmc
repnz
xor
lods
sarb
fidivs
lcall
jp
loopne
rcrl
iret
adcb
push
dec
cmp
cmp
push
mov
ja
mov
pop
test
sbb
fisubl
xor
jns
and
cli
mov
cmc
inc
outsl
inc
negl
push
cmpsb
gs
mov
cmp
and
leave
cmpsb
imul
mov
daa
pop
xor
and
ds
pop
out
lods
dec
sbb
sahf
cli
sbbl
add
sbb
jmp
push
ret
or
dec
imull
and
aad
mov
stc
ds
mov
lcall
push
adc
clc
sbb
dec
leave
or
pushf
fnsave
push
push
gs
sbb
mov
xor
enter
cmp
adc
movsb
pop
adc
iret
shrb
cmpsl
rorb
sbb
ljmp
mov
cmp
imul
pop
mov
push
mov
and
cmp
out
jne
mov
jmp
aad
pop
jo
pop
jge
out
jge
out
jge
out
jge
out
jle
pop
and
and
inc
fimuls
xchg
scas
push
pop
ret
lea
dec
inc
shlb
call
mov
testl
jg
or
push
mov
lods
mov
loop
pop
mov
subl
jecxz
push
sbb
lods
xchg
iret
cmpsb
mov
nop
fstpt
pop
add
xor
outsb
push
xor
jmp
mov
xchg
pop
and
sbb
lea
shr
jbe
fs
mov
sbb
mov
gs
cmp
sbb
int
test
add
ret
popa
lret
dec
adc
stc
pop
mov
pop
push
jl
iret
movsl
fwait
jae
nop
lahf
push
outsb
dec
jbe
aad
pop
cwtl
and
pop
pop
ss
outsb
mov
stos
jnp
dec
mov
popf
data16
and
outsb
or
loopne
leave
outsl
adcl
or
push
inc
std
shl
inc
sbb
or
sub
pop
sbb
or
icebp
outsb
ss
in
sbb
in
mov
cmp
add
cmp
inc
out
jb
cmp
sbb
smsw
sbb
js
mov
les
dec
in
arpl
mov
cmp
adc
push
add
test
or
pop
sbb
fisttpll
sub
enter
mov
and
pushf
mov
stc
inc
int3
mov
push
xchg
mov
or
fucomp
sbb
add
mov
enter
rol
pushf
out
pop
xlat
test
adc
int
adc
cmp
sbb
shl
pop
fsubrs
fs
cltd
pop
push
shr
lock
sarb
lds
and
and
mov
push
std
jno
es
out
push
rcr
aaa
fwait
xor
sub
nop
cmc
push
sti
stc
push
cmp
mov
adc
sbb
leave
fistl
push
xchg
enter
and
out
sub
pop
sbb
pusha
fadd
cmpsl
imul
or
nop
push
push
scas
cwtl
insb
pop
mov
xor
pop
sbb
movsb
sub
mov
mov
xor
mov
stc
rcr
pop
out
insb
fdivl
dec
mov
jns
loope
mov
rorl
add
jns
pop
push
and
xchg
mov
ljmp
sbb
add
mov
loope
mov
pop
and
mov
and
push
jno
jnp
inc
cmpsl
cwtl
icebp
and
dec
pushf
adc
incb
adc
xchg
addr16
mov
cmpsl
sub
sbb
xlat
add
jns
loopne
and
mov
jbe
push
sbb
aad
adc
add
stc
push
hlt
sub
and
dec
adc
and
mov
rclb
pop
enter
cmp
mov
in
sub
loope
mov
jae
adc
rorl
in
cmc
sbb
cmp
xor
cmpsb
dec
mov
or
cmp
pop
mov
mov
push
sub
popa
xor
pop
xor
push
in
lcall
repnz
les
cmp
insl
je
jnp
in
xor
xor
imul
sbb
sbb
jmp
cld
rcll
stos
xor
pop
std
out
sbb
cmpsl
out
rcr
push
push
inc
and
push
pop
inc
mov
cltd
jmp
xor
test
push
cli
sbb
in
arpl
pop
xor
cmp
es
test
lcall
inc
adc
enter
icebp
inc
stos
sbb
testl
inc
and
sub
add
das
in
inc
sbb
jb
dec
adc
in
pop
cli
insb
mov
insb
inc
sti
fisttpll
stc
arpl
pushf
xor
stos
sbb
subl
test
push
jb
sub
jmp
lcall
xor
ja
inc
sub
test
gs
jns
stos
stos
call
jne
inc
mov
jo
ret
sbb
pop
adc
or
js
jo
dec
cmp
cmpsb
fs
out
or
sub
fadd
outsl
xor
xor
jnp
sbb
xor
add
cmp
xchg
sub
sub
loopne
mov
in
or
inc
jmp
cwtl
dec
sti
mov
jmp
aas
icebp
jecxz
ret
mov
lods
pop
stos
ucomiss
push
and
jmp
push
sub
mov
enter
out
jnp
add
sbb
or
rorb
repnz
in
xor
enter
dec
mov
dec
ret
notl
jge
std
sbbl
lcall
pop
adc
insb
xor
popf
sbb
jne
push
ret
sbb
test
mov
sbb
mov
jbe
ret
out
out
loope
scas
add
cwtl
inc
or
pop
jo
mov
inc
cmp
mov
sub
mov
dec
icebp
jg
mov
scas
popf
xchg
lds
mov
inc
test
aas
mov
xor
in
cmp
xchg
ret
jno
dec
js
xchg
fldcw
test
adc
push
test
fimull
lahf
cmp
movsl
cmp
daa
mov
lret
sub
sbb
adc
push
rorb
and
push
cwtl
xchg
dec
dec
jmp
das
mov
dec
push
mov
push
jno
loop
std
fbld
out
fdivr
cmpsl
fildll
xchg
sbb
cmpsb
pop
dec
in
xlat
jne
or
mov
ss
dec
cli
cli
subb
movsb
mov
adc
rorb
inc
loope
fbld
adc
pop
scas
lds
ret
xchg
mov
jp
and
mov
popf
lea
pop
bound
cwtl
pop
addl
inc
mov
mov
cmp
shll
pop
data16
ret
hlt
mov
or
xor
sub
sub
mov
sbb
pop
cmp
pop
inc
pop
jl
jne
ret
scas
stos
mov
cmp
pop
popa
test
test
sbb
or
aad
adc
inc
pop
mov
sub
insl
outsl
andl
jae
cmp
push
ret
iret
jge
add
add
xor
jns
inc
jmp
xor
imul
sti
sahf
aam
loop
dec
pop
mov
test
icebp
test
jo
dec
in
adc
xlat
jns
adc
mov
jbe
daa
sbb
sub
rcrb
push
mov
mov
icebp
inc
push
jnp
mov
ss
popa
loope
add
add
mov
sub
push
sbb
rorb
out
or
lret
fsubl
xor
pop
stos
shrb
xor
rclb
aas
adc
popa
in
out
leave
add
aaa
push
push
inc
lds
outsb
inc
adc
sbb
ret
mov
nop
bound
lret
fimull
adc
popf
sub
daa
bsf
xor
mov
inc
xchg
pop
and
adc
iret
fbld
inc
addr16
aad
cli
in
cs
cmp
mov
mov
les
sbb
and
js
pop
jbe
lret
xchg
iret
add
cmp
push
xchg
out
test
xchg
lret
mov
add
pop
and
scas
xchg
mov
jnp
cmpsb
mov
push
test
mov
dec
insb
dec
or
in
push
inc
add
add
lock
add
stos
sub
jb
and
xor
subb
cltd
cmpb
loopne
push
ss
mov
mov
imul
mov
data16
ja
leave
ret
jne
add
jge
mov
or
xor
mov
adc
mov
pop
cltd
cmpl
xor
and
dec
leave
or
sbb
and
mov
test
mov
test
cmpsl
int
pop
das
imul
data16
outsl
xor
shll
push
sbbl
sub
call
stos
outsb
and
push
sbb
inc
aaa
inc
hlt
pop
push
and
stc
std
sub
movsl
outsb
xchg
xchg
xor
and
adc
movb
cs
fcompl
jle
addr16
push
sub
mov
sbbb
fnstcw
adc
mov
jp
stc
shrl
orl
js
mov
das
add
add
jmp
xor
lahf
loope
fistl
add
dec
inc
sub
lahf
subl
mov
push
push
jns
repz
js
xorb
addb
push
stos
repz
out
in
jo
cmp
dec
decl
imul
movsb
inc
xor
lds
adc
sub
sub
mov
adc
add
adc
push
pop
es
mov
call
out
sti
cmp
dec
jmp
adc
hlt
inc
cwtl
ja
jb
inc
mov
sahf
jb
data16
dec
imul
ret
icebp
push
nop
xor
cwtl
pusha
negl
adc
test
arpl
pop
fwait
mov
jne
mov
sbb
adc
test
imul
jne
pop
mov
cld
dec
and
cmp
sub
inc
or
dec
mov
sub
loopne
or
outsb
repz
lods
mov
pop
adc
pop
imul
mov
outsl
stc
push
leave
cmp
xchg
sub
and
push
das
sub
dec
inc
cmc
jge
fists
je
lock
jb
dec
and
lret
dec
dec
and
adc
test
mov
pop
or
cmp
mov
in
mov
shll
jg
push
sbb
test
fs
stos
adc
lock
sub
adc
sbb
push
mov
xchg
cmpsb
repz
testb
pop
adc
jno
sbb
cmpsl
ror
or
sub
aad
sarb
mov
std
adc
and
adc
push
fnsave
fwait
jnp
stc
inc
ror
jmp
insb
pop
xor
mov
and
and
sti
mov
jno
outsb
jmp
pop
mov
pop
aam
sub
sub
into
mov
sbb
out
sbb
jp
xchg
cld
dec
adc
jae
aam
adc
jmp
pop
insl
cwtl
scas
sub
aas
out
test
and
fisttpl
enter
stc
and
jns
jl
bound
scas
pop
push
loop
mov
dec
stc
pop
sub
dec
mov
mov
mov
push
adc
add
sbbl
gs
inc
adc
call
mov
int3
inc
daa
inc
movsb
dec
sbb
mov
je
cmc
cmp
cmp
sbb
dec
dec
add
push
lods
cmp
push
sub
sti
dec
ds
pop
adc
push
xchg
lods
in
jge
pop
mov
daa
sbb
imul
fsts
leave
jnp
xor
push
xchg
xor
lahf
mov
xchg
mov
cmp
shrb
add
mov
sub
cmp
mov
cltd
lods
hlt
xchg
test
adc
mov
mov
sub
out
ret
mov
fidivrs
testl
outsl
adc
add
lds
inc
pop
data16
and
mov
sub
adc
jl
and
add
jbe
and
sbb
sub
repnz
pop
shl
jb
pop
ficomps
cld
xchg
icebp
push
or
divl
xchg
inc
pop
cvtps2pd
loope
jp
arpl
int
jno
insb
sub
gs
mov
je
and
jge
push
or
lds
notb
in
and
pop
pop
mov
add
pop
sbb
mov
lret
lea
mov
test
jns
cmpsl
out
ss
fucomi
je
inc
cmp
outsb
jmp
cmc
andl
mov
sbb
cmpsb
pop
out
cs
inc
jne
mov
fisubrs
xor
mov
xchg
dec
jl
jbe
sub
xchg
sarb
fs
xchg
cs
out
in
mov
in
lds
enter
jb
mov
cmovl
mov
loopne
int3
xchg
sbb
sbb
hlt
aaa
test
stos
inc
aam
sbbb
repz
jb
mov
je
jo
push
sub
jns
insb
loope
sub
jmp
jnp
fldenv
ret
pop
push
arpl
mov
lahf
mov
push
fs
sub
test
jge
sbb
jmp
add
inc
cmp
jle
sub
sarb
inc
ret
out
jnp
or
andb
stc
jg
jg
and
imul
push
sub
ret
jg
adc
stos
pop
xorl
push
xor
imul
xor
fimuls
push
cltd
call
lret
popf
xor
imull
or
add
aam
repz
or
push
add
sub
or
lcall
xor
out
pop
jp
pop
pop
dec
je
shll
test
dec
sahf
imul
mov
inc
fmuls
daa
xor
dec
repz
or
jo
out
dec
adc
inc
lahf
frstor
das
in
stos
addb
dec
adc
xor
jns
sbbl
je
add
mov
mov
mov
jno
push
mov
sahf
ret
or
inc
in
js
pop
lods
pop
and
push
push
sub
iret
inc
leave
dec
jbe
jle
stc
sbb
pop
test
stos
mov
mov
fidivl
loop
rcrb
sbb
les
xchg
lcall
xor
jmp
xchg
adc
and
push
adc
jle
mov
mov
mov
mov
call
outsl
iret
pop
pop
pop
pop
jmp
loopne
cmp
inc
mov
addr16
cmpl
cmp
jnp
push
mov
jmp
fwait
or
add
and
out
mov
push
push
jae
pop
insb
cwtl
mov
mov
pop
sarb
cli
cltd
sub
movsb
pop
add
cli
push
lods
fstpt
add
pop
push
pop
pop
and
popa
test
cmpl
push
mov
scas
inc
imulb
mov
mov
std
dec
iret
mov
dec
mov
sbb
int3
addr16
das
dec
daa
and
test
lods
xor
outsb
int
les
shl
icebp
out
cltd
cmp
test
nop
pop
leave
mov
sbb
or
pop
divb
add
or
aaa
lret
jl
fidivs
outsb
fidivrs
bound
lahf
in
sbb
sub
dec
pop
sbb
xchg
adc
aaa
lds
mov
andb
lret
mov
pop
mov
ss
popa
ret
mov
mov
enter
sbb
das
orl
inc
ss
mov
cmp
and
mov
test
dec
jge
mov
mov
adc
in
jmp
push
jp
mov
dec
or
outsl
out
xor
push
jmp
push
xor
aas
mov
pop
push
adc
test
stos
out
jne
testb
sbb
popf
hlt
push
ljmp
push
pop
add
mov
cmp
jmp
imul
in
rclb
add
push
adc
mov
rcll
lahf
cmp
pop
xchg
jecxz
jmp
addb
test
jle
adc
sbb
vmread
out
test
outsl
ss
add
mov
sbb
imul
sbb
cmp
in
or
sbbb
arpl
push
dec
xor
icebp
ja
pushf
test
cmp
sub
lret
arpl
leave
or
cmpb
call
mov
insb
les
inc
xchg
cmc
inc
cmp
fcompl
or
pop
clc
adc
pop
mov
mov
repnz
dec
rcrb
out
xor
fnstenv
loop
js
loopne
jp
jge
adcb
rcl
mov
sarl
insb
incl
imul
sbb
xor
dec
mov
das
or
xor
fiadds
arpl
jbe
or
xor
mov
incb
shrl
loop
sub
repnz
pop
xchg
push
test
inc
orl
add
lea
cltd
mov
xor
sbb
sub
pop
das
sbbb
aaa
cmp
aas
dec
js
and
cmc
mov
cld
jecxz
sub
or
jns
xor
or
les
dec
mov
std
xchg
orb
add
push
out
cmp
mov
and
popf
pop
das
add
loope
ret
ficomps
jno
or
jl
cmpsb
arpl
notl
stc
fists
add
sbb
dec
ss
sub
inc
loop
stc
mov
jns
inc
push
js
jae
push
xor
push
das
push
mov
mov
xor
sbb
fs
imul
cmpsb
shrl
cmp
sti
hlt
aas
jle
fwait
inc
dec
sbbb
shl
cs
jbe
leave
sbb
stc
clc
out
lcall
dec
mov
es
cltd
call
repnz
inc
outsl
push
xor
xchg
sbb
adc
icebp
stc
mov
mov
xchg
adc
sub
rcr
add
mov
bound
jmp
adc
movsl
arpl
xchg
fists
jge
cs
xchg
xor
loope
add
pop
rcrb
jmp
and
clc
xor
push
sbb
ret
lret
mov
push
into
mov
data16
add
lods
xchg
inc
xchg
fwait
dec
cmp
insl
jmp
jecxz
mov
lods
inc
jg
into
cmc
jg
sub
pushf
push
insl
mov
gs
into
sub
dec
cltd
shrb
push
jo
add
movsl
and
out
pop
jmp
or
iret
fiadds
jecxz
popa
sub
dec
scas
or
inc
aad
pop
jp
into
das
or
push
mov
test
push
aad
push
jge
enter
mov
mov
cs
sub
push
aaa
hlt
mov
sbb
std
incb
addl
or
into
sub
mov
cltd
inc
mov
adc
xchg
enterw
jmp
sbb
dec
gs
outsl
mov
addr16
cmc
add
jo
sub
popf
cltd
aas
fstps
into
sub
js
adc
test
cmp
inc
out
arpl
jb
out
mov
sbb
ss
jns
pusha
dec
rolb
mov
xlat
mov
and
icebp
mov
push
cmpsl
or
test
push
call
sbbl
push
dec
inc
sbb
repz
popf
cmpsb
dec
rcl
or
loope
stc
sbb
sub
pop
push
xchg
shlb
sbb
je
sub
test
out
test
push
mov
or
rorl
cmpsb
sub
aam
rorb
lretw
xor
sub
mov
cltd
rcll
sub
or
cmp
jge
add
push
fwait
mov
dec
xor
jg
icebp
push
push
push
xchg
cmc
test
cmp
iret
cmc
xlat
out
pop
pop
loopne
cli
jns
sbb
std
decl
mov
iret
xchg
ja
inc
rcl
scas
stos
push
xorl
push
dec
ds
push
adc
or
jge
inc
pushf
dec
lods
xchg
clc
iret
pusha
das
dec
dec
add
xchg
dec
push
out
js
popf
jg
or
and
clc
and
xchg
jmp
shrb
sub
rcrl
test
ficomps
pop
xor
mov
add
fistl
sub
sbb
xor
hlt
adc
stc
push
pop
popl
lcall
sbb
fsub
testb
insb
mov
pop
fdivp
sbb
mov
pop
and
cmp
fs
lret
or
sbb
test
jmp
testb
push
repnz
inc
cmp
adc
push
dec
add
pop
dec
cmp
dec
sbb
sub
fistps
and
jne
adc
dec
jne
fbstp
rep
data16
xchg
jge
push
jp
mov
ljmp
jno
in
test
ds
jno
dec
mov
aas
push
mov
jae
fs
or
andl
ds
movsb
sub
les
pop
test
cmp
inc
sub
mov
dec
inc
or
xor
sub
pop
cs
sbb
xor
mov
cli
ljmp
int
insl
sbb
pop
pop
cs
scas
loop
pop
orl
insb
xor
mov
inc
repz
add
cmpsb
out
mov
pop
pop
test
jo
out
lret
pop
insb
adc
push
and
pop
push
sub
or
lods
cmp
sub
cmp
lods
ret
repz
in
mov
in
inc
movsb
push
pop
jecxz
xor
jmp
scas
in
fdivrl
mov
btc
pop
pop
lods
lret
lret
cli
xor
loope
push
add
push
pop
sbb
push
int
inc
imul
jp
adc
in
push
aad
dec
pop
mov
sbb
ds
andb
add
test
push
inc
std
mov
in
push
rcrl
jecxz
clc
add
xor
mov
data16
mov
aaa
dec
and
mov
cmp
jb
cmp
clc
xlat
push
pop
push
inc
div
pop
cmp
mov
into
jbe
jmp
pop
xor
mov
push
fs
bound
imul
xchg
dec
add
data16
cmp
fwait
jecxz
in
in
push
dec
or
jmp
data16
sub
inc
jp,pn
pop
mov
push
std
aad
sbb
dec
pop
dec
xor
sbb
mov
punpckhbw
xor
cmp
mov
out
inc
inc
test
adc
ds
popa
xchg
ret
movsb
xor
and
minps
jmp
push
xchg
push
jmp
cmpsl
pusha
sub
push
pop
push
dec
xchg
in
push
stos
outsl
jb
xchg
rcrb
adc
jno
mov
ja
popa
inc
mov
jae
dec
repnz
sbb
sbb
mov
sbb
adc
ljmp
cmp
jp
lods
iret
lahf
into
mov
add
ret
or
je
or
popa
scas
ja
int
adc
divb
aaa
repnz
pop
add
hlt
mov
mov
insb
insb
pop
inc
xor
shll
dec
sbb
mov
pusha
or
in
pop
aam
xor
mov
clc
notl
jecxz,pt
inc
or
lahf
dec
mov
negb
or
out
push
sahf
bound
cmp
xor
or
inc
pop
cwtl
filds
jge
arpl
cmp
lock
push
mov
rorb
lret
fstp
aaa
inc
mov
and
shr
sahf
xchg
notl
scas
mov
and
lret
inc
push
inc
es
mov
aas
cmpsb
and
mov
mov
clc
enter
scas
stc
and
mov
fstp
dec
dec
and
inc
test
add
js
les
movsl
imul
fstpt
push
into
sub
icebp
sub
push
pushf
xchg
xchg
pop
push
insb
adc
fbld
ja
mov
scas
sub
fldcw
fcomps
cwtl
les
xor
jmp
es
pop
jg
cmpl
jmp
leave
xchg
data16
pop
pop
mov
cmpsb
xchg
dec
test
cmpsb
into
jns
add
mov
inc
mov
sbb
aad
add
push
shll
imul
sub
imul
or
sbb
xchg
rcl
add
mov
sahf
push
ret
subps
mov
adc
movsb
cs
nop
xchg
cltd
loopne
adc
test
jbe
int3
movsb
xchg
loop
scas
dec
dec
in
jmp
jle
inc
ja
in
dec
cmp
add
int
cmp
shrb
pusha
sbb
mov
repnz
pop
and
jnp
jmp
fmulp
test
in
into
clc
scas
aas
mov
adc
cmpb
nop
les
or
loope
jl
mov
cmp
in
das
mov
adc
add
jp
cwtl
lea
mov
insl
pop
mov
xchg
adcl
jmp
scas
pop
imul
imul
test
jecxz
jmp
and
xorb
bound
or
mov
lods
imull
ret
jb
lret
sbbl
or
addr16
dec
xorb
test
lock
stc
dec
sbb
orl
push
pop
lods
nop
lock
mov
stc
sbb
ja
data16
aam
push
add
adc
mov
cmp
in
loopne
xchg
xor
adc
mov
xchg
jp
pusha
imul
ss
in
jb
cmp
rcr
or
and
int
xlat
cmp
push
push
or
sahf
sub
mov
pop
cli
scas
ret
leave
lret
add
out
adc
mov
pop
push
adc
into
dec
inc
pop
adc
lret
push
xchg
xor
adc
cmp
sub
inc
push
or
pop
scas
and
xchg
push
inc
cmp
stc
adc
mov
icebp
ficompl
loope
mov
fwait
push
fnstsw
jmp
cmc
iret
sub
push
into
xchg
sbb
stos
mov
cmpb
sub
fwait
push
aam
fbstp
mov
xlat
push
out
push
cmp
movsl
test
inc
fwait
rolb
pop
inc
pop
cmpsb
mov
lds
stc
pop
adc
aaa
enter
sbb
add
mov
adc
nop
int
dec
xchg
stos
dec
dec
sbb
dec
jo
stc
inc
adc
lret
fs
shlb
stos
mov
pop
les
mov
insb
ret
or
lahf
in
jae
out
or
push
mov
xor
stos
dec
mov
fs
ss
ja
dec
sahf
mov
nop
inc
fisubrs
psrlw
inc
inc
adc
jae
mov
jno
xor
cmp
rorl
adc
sub
sbb
sub
push
pop
lods
adc
push
fs
fwait
les
jae
cmp
sti
adc
fsub
adc
in
addr16
lock
sbb
shrb
push
or
jmp
pop
dec
adc
rcll
mov
fcmovnb
add
adc
jmp
repnz
popa
aam
loop
fsts
iret
jae
scas
add
inc
push
rol
pusha
and
sar
adc
or
mov
add
dec
call
push
mov
mov
mov
add
cmp
aaa
and
bound
leave
push
adcl
fildll
lock
xor
stos
ret
dec
push
adc
repz
inc
xor
or
xchg
es
mov
aam
push
mov
loope
popf
jl
sahf
sbb
cmp
adc
push
dec
cld
out
je
mov
es
js
sub
pop
sbb
add
jbe
jl
cwtl
mov
sbb
gs
push
ljmp
nop
mov
rcrl
pop
cs
pushf
mov
xor
cwtl
mov
and
pop
jmp
xor
movl
and
scas
or
je
push
and
lcall
popa
js
pop
ja
lods
mov
fsub
xor
aaa
push
es
cmc
js
scas
mov
ss
cmc
add
movsl
mov
in
mov
repnz
jmp
ret
arpl
cmpsb
cmp
lds
nop
dec
stc
je
cmp
sub
adc
cmp
cmp
dec
adc
cmc
scas
sub
pusha
xchg
xlat
push
cmpl
in
jmp
fmuls
pop
dec
mov
ss
adc
out
mov
dec
and
lds
xchg
mov
xlat
in
ficompl
aaa
aaa
out
mov
sub
mov
std
mov
mov
test
sbbb
push
mov
inc
test
movsl
out
sbb
inc
mov
es
add
mov
mov
scas
lret
lea
cmp
stos
leave
and
cmp
addr16
addr16
movsl
xor
cmp
xor
adc
dec
jecxz
dec
sahf
pop
jae
mov
cmc
jle
mov
pop
notl
cmp
mov
mov
test
int3
jge
mov
test
inc
jb
andb
ja
cli
fiadds
push
das
push
dec
jbe
fldenv
push
je
outsb
or
in
rclb
mov
data16
icebp
dec
rclb
or
mov
sub
cmp
lds
adc
xchg
jecxz
out
cmp
js
jmp
nop
mov
dec
dec
insb
sub
mov
push
dec
xor
pop
cwtl
mov
sahf
adc
xchg
popa
repnz
mov
jbe
pop
jecxz
jl
out
lret
or
andl
add
jmp
or
out
addr16
rclb
ret
xchg
pop
mov
ret
loope
push
aam
outsl
dec
inc
out
mov
cli
push
nop
mov
sbb
out
mov
inc
aad
pop
jl
jge
mov
sub
or
out
sub
inc
pop
shl
cmp
adc
pop
mov
outsb
arpl
call
ror
mov
jmp
push
dec
or
lret
incb
jae
inc
mov
fs
xchg
out
out
gs
int3
mov
lds
test
fdivrp
adc
dec
jo
inc
enter
into
jo
xchg
movsb
cmp
mov
jmp
scas
ss
mov
dec
clc
mov
cmp
xor
jno
mov
aam
cmp
cmp
jl
imul
or
mov
push
iret
pop
sub
ret
mov
sub
cmp
jae
cmp
or
pop
subl
into
roll
jmp
and
xor
fsubs
pop
cltd
push
sub
stos
or
out
ds
test
mov
lds
lea
jmp
gs
cmp
dec
sahf
cmp
into
push
psubsw
push
inc
cld
adc
shl
sub
pushf
lahf
inc
vmptrld
mov
jecxz
fldl
add
and
add
mov
and
mov
lods
mov
adc
mov
loop
sti
and
adc
imul
pop
arpl
pop
pop
adc
pop
sub
dec
clc
movsb
das
add
out
mov
repnz
push
popa
push
jbe
scas
inc
outsb
les
dec
imul
cmp
push
pop
js
adc
sbb
mov
mov
push
xchg
xor
lret
pop
mov
scas
add
xchg
dec
mov
lahf
add
xor
pusha
xor
imul
std
push
adc
push
sub
add
jne
daa
pusha
cmp
shll
sarb
fadds
sbbb
add
ds
pop
push
jo
filds
out
push
cmp
ss
loope
aaa
hlt
sbb
pop
jmp
ret
xor
hlt
and
orl
call
push
jmp
push
into
inc
push
test
sbb
mov
fwait
lcall
and
inc
and
aaa
por
push
sbb
xchg
fistps
jge
mov
lods
push
les
dec
hlt
dec
imul
lcall
mov
lcall
int
fistpl
aam
add
xchg
js
cwtl
cmpsl
or
std
clc
and
and
or
pop
jmp
cmp
sub
movsl
pop
lret
push
xor
test
shlb
mov
and
sub
ljmp
pop
lds
adc
jo
arpl
pop
or
notl
mov
pop
movsb
mov
push
pop
jl
nop
loope
or
sbb
lods
divb
gs
sbb
mov
sbb
xlat
mov
push
bound
adc
jae
adc
leave
out
aaa
jp
push
push
sbb
js
leave
jmp
dec
aaa
mov
fs
and
adc
outsb
shrb
dec
test
mov
sub
sub
rcrb
fs
pop
or
pop
and
loopne
adc
std
in
xor
bound
mov
jecxz
or
lea
inc
adc
insb
mov
mov
cmp
addl
outsb
punpcklbw
pop
or
pop
jns
pop
dec
add
fistps
std
mov
loopne
lock
roll
mov
inc
cwtl
xchg
shlb
jne
arpl
sbb
movsl
test
lret
xchg
ss
dec
call
std
pushf
jb
enter
xor
pop
sbb
shrl
pop
dec
aaa
imul
or
dec
sbb
or
xor
push
arpl
dec
dec
pop
xor
mov
push
cmp
scas
xor
xor
insl
in
jl
sbb
sbb
cs
add
or
sbb
and
scas
add
je
lea
cmp
test
lcall
sub
out
sub
mov
lret
cmpsb
and
xchg
xor
xchg
or
nop
sbb
out
or
push
mov
sti
jne
xor
cmp
je
aam
es
icebp
outsb
ds
and
sbb
sti
sbb
adc
shlb
push
jg
jecxz
sbb
pop
imul
hlt
cli
mov
pop
test
lea
mov
ret
loopne
nop
push
push
pop
leave
sub
sbb
jmp
dec
jmp
push
mov
sarl
fwait
xchg
inc
add
movsl
fisubs
mov
les
das
aam
sub
ss
mov
mov
imul
cmp
in
aas
jmp
sbb
sbb
cmp
sbb
mov
pop
xchg
pop
push
popf
mov
cmp
cld
addr16
cmp
inc
ds
sbb
add
pop
dec
je
and
icebp
iret
mov
adc
in
imul
in
dec
xor
xor
inc
in
or
in
in
sbb
cld
repz
js
jo
jmp
leave
add
movsb
or
loope
jb
test
mov
bound
jns
outsl
dec
subl
std
mov
mov
test
mov
aas
out
cmpsl
cld
roll
mov
mov
rcr
jnp
push
lret
rcrl
test
cmp
data16
and
inc
sbb
xchg
sub
xchg
testb
repz
clc
cli
icebp
repnz
xchg
jo
hlt
jo
mov
pop
jg
stos
mov
sbbl
stc
andl
xor
cmc
fidivrl
test
pop
jb
cltd
jnp
fisubrs
rclb
dec
xor
icebp
pop
dec
inc
sbb
into
mov
push
sysenter
add
inc
jmp
imul
rorl
jnp
mov
mov
popa
lods
push
jb
addl
mov
pop
jno
lock
sub
iret
rolb
rcrl
cmp
xlat
jae
cmp
pop
pushf
test
incl
das
xor
dec
cli
cmpsb
add
stos
rorl
mov
ffreep
ss
ss
pop
icebp
and
rolb
lods
jb
xor
mov
aaa
mov
out
movsb
dec
adc
fisubs
mov
or
pop
push
inc
insb
loopne
enter
pop
pop
aaa
sbb
add
fs
pop
adc
sub
cli
data16
xorb
inc
ss
jge
jl
icebp
xor
das
jl
test
imulb
jmp
cmp
mov
inc
add
sti
pop
movsl
add
shlb
pop
pop
popa
push
push
xor
jb
jge
icebp
cmpsb
out
clc
lret
sub
sub
es
and
ficoms
jp
push
mov
cli
mov
daa
loope
cmp
sub
pop
movsb
inc
cmp
cmpsb
outsl
xor
inc
mov
pop
scas
pop
push
sbb
cmp
fidivs
sub
mov
pop
add
ja
lret
lods
sti
or
mov
xor
in
and
mov
pop
xor
pop
add
cmp
dec
adc
pop
cmpsb
pusha
pop
ss
clc
std
mov
push
daa
xchg
push
and
mov
pop
push
pushf
cmc
mov
clc
push
and
sub
test
xor
ficoml
sbb
sub
mov
lret
sbb
push
gs
mov
add
addl
lahf
aaa
inc
jne
imul
pop
cltd
in
fwait
pop
mov
pop
sbb
test
movsb
roll
jmp
stos
lea
mov
out
test
mov
insb
mov
push
mov
fidivs
jb
call
jecxz
into
xchg
jp
adc
stos
out
inc
lahf
mov
sub
add
sbb
hlt
mov
sub
sar
out
inc
dec
lret
or
inc
inc
enter
mov
cmc
cmp
dec
pop
jp
adc
jle
fidivl
sub
jb
stc
sub
push
inc
cwtl
in
dec
xchg
lds
jo
pop
xor
xor
mov
mov
push
push
fimuls
push
ja
and
stos
aas
inc
adc
xchg
in
add
sub
xor
dec
shl
add
mov
sbb
sub
mov
adc
inc
out
mov
or
sbb
rorl
add
inc
sbb
and
faddp
test
mov
test
scas
xchg
jmp
cmp
imul
jnp
popf
out
sbb
sarb
cmp
aam
inc
pop
mov
andb
mov
xor
pop
adcl
das
adc
insl
sahf
shlb
rcl
add
movsl
movsb
mov
jecxz
faddl
stos
xor
adc
mov
mov
sbb
or
xor
cmpsb
mov
in
hlt
aaa
mov
dec
jae
push
pop
mov
sub
pop
imul
inc
mull
shll
jb
push
in
add
mov
pop
in
pop
add
scas
inc
test
mov
xor
sbb
cmp
fcompl
dec
call
pop
xchg
cmp
mov
inc
inc
ret
or
mov
sub
push
insb
dec
loope
scas
sub
pop
pop
out
aad
les
push
ret
mov
pop
dec
sub
push
adc
pop
dec
xor
push
std
jb
xchg
pusha
or
cwtl
in
xchg
push
inc
cmpsb
xchg
mov
or
inc
sbb
or
fdivrs
and
cld
stc
cltd
xchg
adc
mov
aaa
in
pop
dec
sub
xchg
fwait
sub
xlat
sub
pop
fisttpl
cli
mov
jle
cmpsl
sahf
shlw
jns
in
leave
add
in
in
push
mov
aam
outsl
sbb
sbb
imul
pusha
test
mov
dec
stos
loopne
fnstsw
insl
xchg
sub
iret
insl
cmp
dec
pop
test
dec
add
in
cmp
dec
mov
mov
aaa
les
das
or
xor
popf
nop
pop
cli
pop
pusha
cmpsl
inc
or
pop
and
jmp
leave
mov
inc
cmp
mov
popf
pop
vpmacssww
cld
jb
aas
popa
fldcw
aaa
xchg
sbb
popf
addr16
or
sbbl
mov
xchg
bound
sub
mov
mov
cmovg
sub
cltd
add
std
dec
xchg
sub
imul
mov
rorb
scas
loope
mov
mov
cmp
and
fadds
cwtl
ficoml
cmp
cmp
cmp
mov
repnz
cmp
call
es
push
stc
mov
sub
xor
jmp
jno
cmc
jno
inc
xchg
jno
cmp
adc
loopne
push
mov
ret
add
and
es
jno
test
push
mov
into
push
adc
stos
scas
push
mov
sub
cwtl
xchg
mov
adc
scas
jae
mov
mov
lret
sbb
xchg
fistpll
cltd
mov
add
cmp
popf
push
add
fadd
movsl
fistpl
xor
cmp
pop
sub
data16
sub
xor
imull
jmp
mov
orb
pop
into
sbb
ret
daa
repnz
cmp
sub
jp
aad
test
jne
lahf
adc
sbbb
pop
orb
imul
int
mov
std
rep
idiv
cmpsl
jbe
jns
outsb
sub
mov
cmpsb
fdivrs
jns
loope
xor
ffree
sbb
push
mov
jnp
out
stos
dec
sbb
int
cmpsl
ficomps
cmp
int3
pusha
pop
inc
push
aas
push
int3
mov
xor
arpl
xor
and
pop
leave
ljmp
adcl
add
aaa
cld
sub
mov
or
inc
mov
inc
add
stos
mov
sub
fcoml
inc
bound
sahf
js
outsb
sub
add
lret
imul
adc
aad
dec
pusha
sbb
pop
jae
sub
push
std
dec
jle
shlb
arpl
imul
aaa
insb
mov
cli
aad
leave
ficomps
in
jns
dec
pop
test
daa
daa
repnz
sbb
and
push
push
or
mov
aad
lock
or
mov
test
jb
xor
or
aas
push
dec
jmp
das
sub
test
jbe
mov
mov
xor
and
pop
jp
sarl
sub
or
cmc
imul
mov
iret
ret
add
imul
pop
fidivs
or
mov
data16
daa
or
fldcw
lret
data16
adc
and
add
into
mov
sub
and
stos
jb
jge
ret
xchg
mov
in
inc
out
cwtl
lds
push
shrl
or
test
pop
add
lods
jge
lods
test
push
lods
sti
push
and
cmc
xchg
mov
out
sbb
repnz
xor
cmpsb
test
or
subl
movb
mov
in
and
xchg
sub
jbe
ffree
cs
lods
aaa
mov
in
pop
dec
cwtl
mov
or
shll
int
loop
test
mov
in
inc
pop
cwtl
popf
add
jno
jecxz
inc
std
dec
pop
mov
jae
or
pop
scas
mov
fcmovbe
sub
sbb
xor
dec
enter
inc
cmp
push
adc
fisttpll
test
cmp
add
int
aad
add
inc
mov
sub
xchg
outsb
cmp
mov
mov
int
andl
jmp
out
enter
cltd
movsl
cmp
lds
or
flds
fsubl
fnstenv
pop
insl
lea
js
nop
push
jne
in
mov
sbb
ret
add
and
adc
movq
and
xchg
pushf
adc
lods
jnp
jge
sbb
jno
xchg
cmpsl
imul
xor
xor
mov
mov
les
sub
cmp
push
fsubp
gs
sbb
pusha
das
xor
or
inc
pop
inc
dec
rolb
out
pop
xorb
loopne
js
mov
dec
mov
call
loopne
dec
lcall
dec
inc
adc
or
xchg
or
mov
jns
rorb
lret
or
rcrb
mov
call
and
arpl
stos
lods
mov
xlat
xor
add
xor
test
stos
sub
xor
pusha
cmpsl
dec
push
daa
cmp
mov
push
mov
xchg
xchg
add
jb
aam
mov
into
cmp
cli
sti
out
pop
cmp
ss
je
insl
ficompl
pop
push
fwait
mov
cmp
adc
xor
mov
mov
adc
fldl
ficomps
ljmp
mov
mov
sbb
cmp
lods
xor
pop
dec
sbb
leave
rolb
jge
xchg
xor
pop
bnd
aaa
lret
mov
lret
mov
adc
jl
pop
cwtl
mov
sbb
add
ret
xor
iret
push
cmp
movsb
ficomps
pop
sarb
dec
rcrl
lret
inc
pop
fcmovnb
push
xchg
and
cld
cmp
or
andl
pop
aaa
fwait
jnp
push
dec
push
cmpsl
cmp
ljmp
sbb
or
add
cmp
sub
sbb
xchg
stos
add
insl
popf
in
sbb
mov
fcomps
add
scas
aad
sbb
and
xchg
sbb
pop
sti
icebp
mov
pop
mov
insl
popf
push
ds
cmpsb
sub
stos
mov
jbe
and
jge
or
inc
sbb
mov
addsubps
comiss
cltd
mov
push
js
subb
inc
outsl
sub
dec
jecxz
cli
stos
xchg
cmp
lret
xor
mov
aad
pop
push
repnz
sti
cmpl
adc
gs
pop
jge
or
nop
and
xor
pop
and
dec
adc
or
lods
mov
or
daa
icebp
mov
fs
mov
ret
nop
notl
push
cmc
xor
subl
popa
sub
mov
imul
jb
arpl
addb
ja
subl
test
adc
outsl
mov
mov
jb
cmpsb
pop
inc
fwait
rcr
scas
xchg
add
ret
push
add
aaa
pop
fsubl
jle
inc
scas
cmp
cmp
js
xchg
mov
xchg
pop
xchg
in
jns
push
lcall
mov
std
pushf
cmp
sbb
lock
js
jmp
mov
push
push
lock
mov
mov
pop
pusha
xor
sub
lret
cmpl
rclb
lea
inc
sbb
sub
addr16
jmp
sbb
adc
adc
pop
inc
mov
xlat
pushf
int
imul
and
dec
data16
jbe
jle
adc
push
mov
dec
and
mov
xchg
sbb
jmp
or
push
and
in
sbb
xchg
pop
cmp
jnp
nop
pop
imul
bound
jle
mov
sbb
cwtl
andl
insb
lcall
cmp
inc
aaa
jb
negl
mov
dec
movl
lea
xchg
in
cmp
neg
cs
mov
aad
cmpsl
push
stos
test
test
cli
leave
das
or
and
dec
add
stos
scas
xorb
outsl
ret
add
test
test
aaa
imulb
mov
mov
pop
daa
pop
lods
fnsave
add
push
scas
xor
repz
push
inc
jnp
je
nop
push
cmpsl
lods
push
push
mov
lds
lods
repz
xchg
xchg
subb
clc
jno
push
jg
and
inc
or
mov
mov
sti
push
push
xchg
ss
pop
std
rcrb
cmpsb
pop
jle
mov
jle
shl
data16
xchg
push
hlt
and
js
fildll
mov
cmp
rcl
ffree
cmp
fwait
cmpsb
imul
fcoms
popf
shll
popa
aad
pop
jne
pop
sub
mov
lods
mov
xchg
popa
fidivl
fsubr
mov
fldcw
pop
or
addb
push
imul
xor
add
and
mov
dec
insb
fiaddl
imul
fmul
push
add
stc
mov
mov
adc
dec
sbb
repz
xor
xchg
sbb
repnz
xor
fstp
dec
fxch
stos
pop
arpl
jbe
or
xorb
imul
pop
or
clc
stc
jbe
ror
adc
inc
cmp
xor
xor
idivl
lea
mov
pusha
out
in
pop
in
iret
sub
xchg
jb
mov
dec
jnp
loop
add
div
adc
mov
dec
mov
pop
test
jl
and
pop
popa
cmp
js
in
xchg
lea
add
into
hlt
mov
loop
lret
adc
pop
divl
sub
aam
fwait
mov
fwait
mov
ret
das
test
mov
repnz
xchg
test
mov
and
jmp
inc
mov
dec
push
adcb
cmpb
xor
or
mov
sub
std
js
jp
and
addl
xchg
enter
xchg
ret
das
insl
std
sub
outsl
popf
jg
sub
sbb
cmp
cmp
notb
sbb
or
popf
mov
pop
cmp
bound
jecxz
mov
dec
add
fdivl
ret
shl
cwtl
mov
sbb
je
arpl
sub
fs
mov
das
fcmove
dec
add
push
and
sbb
fstps
add
or
jmp
xchg
lret
lcall
mov
pop
xor
cmpsl
add
xor
lea
push
setg
xchg
faddl
stc
les
cmp
pusha
loop
test
jae
fidivrs
xor
dec
shlb
xor
jb
lea
repz
repnz
aaa
or
push
aam
ret
cmpsl
mov
cmpsb
fisttps
dec
push
sbb
in
inc
popa
adc
dec
push
dec
cmp
leave
sbb
sti
iret
dec
and
push
lods
imul
rcll
jnp
mov
mov
adcl
lcall
push
inc
cmp
lds
mov
popf
fs
pop
cmpsl
add
aad
icebp
add
xor
and
sub
push
inc
fisubl
sbb
insl
data16
dec
sbb
lcall
movsl
jp
xchg
dec
adc
outsl
mov
fstps
mov
pop
data16
mov
mov
test
cli
or
rclb
pop
movsb
jo
pop
loopne
sbb
loope
ret
repnz
cmp
dec
das
lret
add
lahf
xchg
xchg
sahf
cmp
mov
jp
xor
mov
push
jbe
pop
bound
sub
ja
add
xchg
daa
outsb
pop
mov
push
scas
adc
scas
jne
jle
repz
pop
sarb
je
mov
pop
jns
cmp
fisubrs
mov
rcrl
sub
into
pop
inc
xchg
cmp
add
sbb
test
test
cmp
xor
jmp
or
jne
dec
imul
inc
xchg
add
inc
dec
push
sub
and
and
pop
clc
add
lds
cmpsl
jno
sbb
stos
inc
cmp
add
dec
push
pop
nopl
shlb
push
popl
ret
sahf
clc
xchg
in
push
out
stos
cmp
ja
push
outsb
sbb
inc
sbb
mov
in
stc
pop
xorl
sub
out
imul
pop
adc
repnz
mov
push
popa
push
add
cmpsb
pop
repz
jge
inc
fwait
pop
loop
mov
pop
dec
dec
add
imul
add
xchg
add
pop
push
pusha
aad
pcmpeqw
out
and
sub
cmp
cmpsb
ror
push
loopne
outsl
iretw
orb
sbb
sbb
movsl
in
enter
push
add
popf
pop
std
sub
inc
inc
cwtl
add
pop
das
cmp
pop
and
aaa
jmp
pop
xor
xor
out
cmp
push
in
sbb
push
dec
cltd
mov
adc
pop
sbb
push
call
cwtl
xchg
pushf
outsb
div
and
cmpl
fwait
push
out
outsl
pop
jnp
imul
ja
xor
int3
sub
add
add
movsb
xchg
jmp
sub
mov
stc
mov
aaa
mov
mov
outsl
sbb
cmpl
add
cwtl
daa
es
fs
xor
pop
adc
jle
int
inc
mov
cwtl
in
add
flds
jne
std
and
insb
stc
scas
jmp
call
dec
insb
imul
rclb
xchg
lret
adc
mov
xchg
mov
movsb
xchg
add
pop
addb
mov
inc
jns
xor
pop
aas
ljmp
xchg
sbb
sub
lret
pop
aas
mov
push
push
aas
cmp
sub
inc
cwtl
xchg
xchg
dec
es
or
mov
mov
mov
mov
pop
add
lock
push
adc
adc
xlat
xchg
iret
or
cwtl
cbtw
sub
push
adc
pop
sbb
test
mov
loop
loop
pushf
jle
dec
jp
addb
mov
mov
mov
cmc
jl
or
rcl
lret
xor
push
adc
stos
test
ljmp
add
pusha
dec
xchg
and
push
cld
mov
in
cmpsl
dec
fs
mov
cld
pop
adc
ja
inc
push
lret
std
mov
fcmovnu
adc
test
jbe
mov
cmc
xchg
pop
aad
inc
sbb
into
lret
jb
scas
cltd
cmp
or
inc
jbe
movsb
enter
and
add
jmp
mov
cmp
in
aad
push
lret
sub
inc
arpl
and
add
pushf
ljmp
push
cwtl
mov
mov
shll
mov
xor
jl
or
orl
int3
cmc
sub
in
ret
call
hlt
rolb
fwait
movsb
movsl
test
movsb
out
iret
ljmp
sbb
add
out
xor
scas
pop
xor
mov
inc
jmp
shlb
out
shrb
pop
pop
pop
xor
out
insl
js
mov
mov
imul
rclb
mov
push
xor
jmp
pop
inc
mov
xor
and
mov
fs
dec
sti
jp
sub
mov
sbb
cmc
dec
push
clc
fadd
sbb
dec
or
or
in
adc
insb
scas
mov
xchg
lret
aad
outsl
add
pop
mov
dec
cli
sub
subl
mov
mov
mov
xchg
jb
addr16
mov
lret
xchg
jle
lret
call
cmp
mov
pop
jns
imul
mov
add
fsts
and
mov
mov
jae
aad
jae
in
cmp
pushf
adc
test
sub
adcl
push
in
mov
popf
jecxz
or
jmp
adc
cmp
loop
cmp
orb
pop
mov
sub
pop
xchg
orb
sbb
cmp
mov
xor
lods
cmp
mov
std
and
fistps
loopne
mov
stc
mov
fwait
addr16
or
mov
cmp
out
xorb
push
push
rcll
rcrl
xor
ljmp
jae
notl
adc
outsb
ljmp
mov
sbb
lock
jmp
outsl
lahf
pop
mov
and
inc
xchg
adc
enter
sbb
mov
pop
xor
out
test
sbb
sub
or
or
mov
pop
xor
jnp
jp
pop
fwait
push
lcall
imul
push
inc
or
popa
into
in
push
scas
in
subl
push
test
adc
or
outsl
movsl
sti
jo
imul
mov
arpl
popa
test
out
push
adc
jecxz
fidivrl
mov
test
or
mov
pop
test
inc
xor
sbb
jno
mov
jnp
adc
inc
add
rol
out
cmp
jns
enter
fists
mov
int
dec
or
sub
sub
aam
dec
lods
in
enter
ds
mov
push
mov
mov
add
xchg
ja
push
jecxz
jns
in
jge
jmp
cmp
add
repz
inc
hlt
mov
and
adc
fimull
movsl
aad
stos
cmp
mov
add
mov
lods
jae
bound
lods
dec
mov
out
jo
inc
sbb
mov
jns
xor
push
add
push
lcall
add
pop
mov
lcall
xchg
cmp
pop
jge
rolb
ja
jle
mov
cmp
rcrb
in
dec
fcmovb
sub
sti
nop
inc
dec
pop
rcll
jg
sub
ds
cmp
sbb
push
pusha
into
xor
stos
cmp
cmp
cmp
xchg
xor
jns
xor
cmp
test
add
out
aam
jae
xor
push
and
pusha
jo
mov
xchg
xchg
into
outsb
cmp
jg
jp
mov
and
in
xor
dec
fs
aam
and
jl
call
mov
and
pop
js
lock
ret
cld
pop
lods
in
dec
jae
jnp
loope
data16
lock
dec
or
dec
dec
and
aas
pop
mov
cmpsl
pop
jg
jge
inc
mov
jnp
rcll
movsl
cmp
ss
mov
les
pop
pop
or
pushl
dec
dec
subb
enter
cli
test
jae
xor
xchg
mov
pop
xorl
scas
xchg
sub
dec
jg
or
shrl
lcall
in
xor
mov
xor
test
stos
ret
inc
or
scas
ret
nopl
leave
push
xor
pop
mov
dec
arpl
xor
sub
xor
fsubrs
push
lret
out
popf
add
insb
pop
mov
mov
xlat
vpmacssdqh
nop
adcl
push
in
lahf
ss
std
fs
fcomip
xor
ret
je
je
ljmp
loop
fs
mov
cmp
cbtw
add
or
jne
fwait
hlt
es
arpl
loopne
pop
lcall
and
cmp
push
xlat
or
cltd
movsl
and
push
ss
jns
push
ja
aaa
in
and
repz
or
pop
fisttpll
out
flds
push
xchg
push
mov
arpl
test
dec
ret
pop
orb
mov
ror
mov
test
nopl
daa
sbb
loopne
mov
sub
lock
lods
repnz
inc
mov
push
in
ja
in
push
call
sbbl
mov
das
cmp
test
cmp
inc
andl
cmp
fisttpll
scas
cmp
sbbl
jae
call
enter
in
stos
xor
xor
lea
ret
mov
outsb
sub
popa
jno
push
mov
sbb
xor
inc
aas
in
cmp
addb
leave
loope
xor
adc
imul
xchg
stos
cmp
mov
cmp
sub
add
mov
sub
test
jo
mov
push
lret
outsl
je
jge
mov
xor
sub
mov
sub
js
dec
xchg
fcomp
imul
fists
cmp
lods
cmpsl
jmp
add
inc
pop
shrl
lcall
cli
les
jb
jg
jns
mov
fistps
loope
mov
fstps
lcall
push
mov
ljmp
les
or
pop
xor
arpl
pop
mov
mov
fsts
mov
pop
or
inc
sbb
daa
aad
cli
cmpsb
mov
loope
lock
stos
jae
and
sub
les
scas
cmp
sbb
jg
xchg
mov
dec
adc
pop
inc
xchg
push
push
mov
aas
ds
shlb
iret
cmpsb
outsb
xor
je
xchg
roll
data16
sbb
sub
ds
sti
hlt
add
mov
sub
adc
inc
in
inc
dec
sbb
cmpsl
popf
or
pop
les
jae
lods
add
mov
inc
mov
sbb
push
addl
mov
popf
and
and
sub
sti
not
dec
dec
stc
fsqrt
ret
cmp
outsl
movsl
or
pop
das
int
sti
xlat
insb
dec
and
jl
sub
sbb
pushf
mov
adc
push
xor
je
outsb
lods
ret
push
mov
shrl
inc
cmpsl
sub
dec
cmp
je
push
dec
xchg
sti
rorb
dec
inc
inc
sbb
xor
pop
out
scas
xor
ret
jle
mov
lods
cmc
dec
mull
test
ret
mov
mov
ret
sbb
xchg
or
sub
sbb
mov
scas
mov
and
movsb
mov
adcb
mov
mov
ret
sub
outsb
cmpsl
mov
out
xor
fnstenv
jno
adc
lcall
mov
outsl
push
mov
jmp
pushf
dec
loopne
add
ret
mov
push
scas
xor
popf
rclb
xchg
dec
xlat
mov
push
fbstp
push
or
jne
dec
or
pxor
xor
pushf
popf
loope
sub
mov
xchg
add
xchg
ret
xor
into
clc
or
cmp
pop
cmp
add
out
lcall
cltd
repnz
movsb
add
push
or
bound
les
icebp
gs
fdivrs
je
test
iret
and
xor
sub
in
add
div
sub
sub
push
popa
cs
sub
leave
jge
subl
mov
movsb
cmpsb
mov
sub
add
sub
dec
xlat
aam
ret
sbb
pop
push
ds
popw
mov
jecxz
sbb
arpl
sub
ret
sub
aaa
mov
sbb
stos
or
in
test
dec
jno,pt
cmp
adc
jae
jo
dec
dec
sub
pushf
add
sub
and
sbbl
leave
mov
xor
mov
mov
inc
in
sub
jnp
sahf
xchg
addb
mov
lret
adc
cmp
xor
jp
mov
and
and
daa
xorb
xlat
iret
repz
sbb
inc
pop
mov
mov
inc
loopne
add
imul
inc
out
mov
subb
divl
lret
sub
mov
cmpsl
ds
xchg
aam
xor
hlt
sbb
cmp
rclb
or
int
je
idiv
in
loop
mov
xchg
ss
movsb
mov
pusha
push
pop
sub
push
and
mov
pop
xor
add
or
mov
cmpsb
mov
push
hlt
push
jns
sub
leave
inc
sub
add
in
ret
and
jnp
xor
push
out
mov
es
mov
ret
pop
sub
leave
xchg
or
sbb
and
sub
dec
shrb
mov
add
jecxz
xchg
fisttpll
popf
in
add
out
sbb
test
inc
add
movsb
ret
fwait
daa
push
inc
sub
dec
xchg
xor
int
stos
mov
and
mov
sti
imull
mov
and
out
dec
push
xlat
addr16
cmpsl
push
sbb
arpl
jmp
xchg
cmp
jl
out
push
sahf
cwtl
pop
dec
mov
fabs
out
loopne
cmp
add
bound
cmp
adc
push
ljmp
cmp
mov
ret
mov
cmp
std
sahf
test
insb
sbb
dec
push
stc
test
in
add
divl
rol
rcrb
sub
xchg
xchg
stc
orl
mov
in
push
movb
inc
dec
adc
sahf
fs
loope
sbbl
dec
orl
out
repnz
cmc
add
sbb
ds
xor
dec
adc
add
insb
lds
pop
or
push
inc
imul
pop
into
mov
mov
inc
ret
pop
nop
outsb
lods
inc
outsl
add
out
icebp
xor
cmp
repnz
je
add
adc
xlat
cmp
sub
dec
sbb
add
mov
or
xchg
and
test
cmp
addl
or
imul
sbb
pop
push
sub
addr16
jne
pusha
mov
sub
jno
jo
cmpsb
iret
rcrb
rcll
and
ja
xor
sub
mov
movsb
cmpsl
pop
jp
aam
mov
pop
mov
inc
xchg
adc
jge
mov
imul
scas
ficoml
xchg
cmpsb
inc
xchg
jmp
xchg
test
xchg
sbb
aad
mov
shll
cmpsl
loope
or
mov
cli
and
dec
push
mov
xor
int
jnp
lcall
dec
xor
fildl
xor
mov
xor
inc
sbb
inc
sub
outsl
lock
insb
push
cmc
addr16
fwait
dec
pop
push
sbb
cwtl
imul
and
adc
sbb
or
jns
ret
xor
adc
add
scas
scas
and
mov
pop
aam
dec
call
cltd
xchg
sbb
dec
inc
adc
hlt
or
sub
add
mov
xor
pushf
int3
xchg
arpl
jp
fwait
out
jecxz
mov
mov
lock
and
mov
imul
sub
ss
dec
jnp
xchg
mov
das
pop
jmp
movsb
ds
mov
lahf
dec
mov
pop
incb
sub
or
test
test
mov
xchg
inc
and
jmp
push
jmp
cs
cmp
mov
or
push
fwait
mov
cmp
jg
xchg
ds
orl
popa
je
fwait
adc
ret
pop
push
test
and
and
sbb
xchg
sti
js
adc
cltd
decb
or
test
mov
in
adc
fldt
mov
push
adc
pop
sbb
and
and
aad
int
and
dec
stos
sub
sbb
bound
mov
xchg
cld
lcall
fsubs
in
mov
add
imul
sub
daa
or
adc
ficomps
pop
xchg
jle
repz
lahf
ljmp
test
in
adcl
inc
rcrb
repz
and
sub
pop
jecxz
cmpsb
fwait
cld
mov
jnp
dec
lock
subl
nop
out
movsl
aam
stos
mov
insl
je
inc
adc
rcrl
stos
in
sti
aaa
or
out
or
pop
cli
inc
and
das
sti
andl
out
aad
xor
mov
fs
popf
jmp
mov
jbe
xchg
outsl
inc
mov
stc
sahf
test
sbb
iret
inc
lret
sbb
jb
add
fstpt
orb
push
ja
pusha
ja
out
dec
cmc
dec
rcll
movb
into
sub
jecxz
movsb
cmp
xor
cmp
sbb
arpl
adc
cld
inc
addps
adc
sub
daa
add
movsb
add
fstl
data16
pushf
bound
rcll
dec
pusha
xchg
push
repnz
mov
pop
imul
dec
push
inc
xchg
dec
jno
fsubrs
mov
dec
xor
inc
stc
icebp
mov
in
rclb
or
pop
push
push
adc
jns
mov
jne
pop
xor
insl
mov
mov
dec
mov
fcoml
pop
std
or
pop
xor
mull
stc
out
inc
in
sbb
pop
mov
scas
out
aas
stc
xor
or
mov
pusha
decl
xor
push
fwait
call
mov
mov
push
cld
pop
sahf
push
insb
test
test
inc
stc
out
call
jge
add
and
or
fcomps
hlt
movb
jno
add
jle
cmc
imul
jp
push
fwait
shll
inc
rclb
xor
xor
cs
ficomps
mov
popa
stos
jge
push
outsb
jnp
jo
lods
mov
test
and
hlt
mov
imul
shl
adc
lock
in
sub
push
xorl
cmc
fisubs
testl
and
cwtl
std
and
nop
mov
loopne
or
cmp
imul
add
inc
adc
ljmp
adc
sti
push
sbb
popf
add
push
rolb
imul
mov
in
gs
jg
iret
mov
jg
cmp
jb
push
ljmp
lods
enter
ret
arpl
cmp
xchg
imul
dec
push
mov
mov
imul
and
cli
push
pop
inc
pop
sub
test
mov
pop
mov
mov
int
push
push
dec
add
data16
adc
incb
sub
stc
adc
dec
cmp
int3
rcrb
fldcw
testl
cmp
hlt
push
and
shr
insb
jns
daa
or
inc
dec
cmp
into
cmpsb
mov
fwait
gs
inc
popa
jae
out
xlat
dec
dec
mov
dec
into
cwtl
test
mov
iret
adcl
dec
jecxz
in
lds
or
sbb
repnz
cmp
pop
push
dec
bound
pop
push
mov
mov
imul
dec
dec
or
sbb
jns
ret
icebp
aas
push
push
das
test
jno
into
clc
dec
les
mov
xlat
jecxz
add
cli
imull
cli
adc
mov
xchg
filds
xchg
rol
gs
lods
je
xlat
fdivrp
mov
and
jecxz
mov
sbb
xor
jns
aaa
xor
je
sub
adc
out
mov
inc
jb
cmp
add
ret
pop
add
imul
lods
mov
outsb
mov
shrb
push
dec
lret
mov
xor
xchg
jecxz
cmc
sub
stos
lds
pop
push
sbbl
xchg
dec
outsb
call
pushf
leave
push
ljmp
outsl
sahf
inc
sti
nop
mov
mov
add
cmp
sti
or
inc
xchg
cmp
mov
clc
andl
push
out
test
rorb
dec
in
cwtl
out
enter
in
mov
cmp
cmc
sub
stos
sahf
dec
dec
insl
aam
mov
stc
outsl
xchg
ljmp
stc
mov
jbe
cmp
addb
enter
sti
fsubrs
sbb
and
mov
xchg
mov
push
jae
push
xlat
scas
jno
push
add
and
scas
outsb
movsb
inc
out
test
fadds
popf
cltd
shrl
fsub
push
pop
mov
fwait
pop
push
ret
dec
and
aad
data16
gs
sarb
push
push
test
mov
cltd
add
cmpsl
icebp
iret
loopne
sbb
adc
fldl
mov
jmp
cmc
jecxz
fwait
test
nop
pop
cmp
xchg
dec
mov
mov
mov
push
push
outsb
je
lds
jne
out
adc
mov
popa
push
sbb
or
stos
sbb
call
outsl
adc
and
inc
pop
mov
pop
and
adc
or
aas
sub
sub
test
cmp
sub
cmp
jl
xchg
sub
xorl
ljmp
sbb
mov
cmp
in
lock
les
sub
xchg
outsb
int3
jmp
icebp
push
jl
sbb
lods
add
jp
cltd
mov
push
and
push
jl
dec
jle
xchg
stos
inc
dec
dec
scas
setnp
dec
mov
out
test
inc
lret
xor
daa
loope
lds
pop
icebp
pushf
cmc
popf
or
lds
mov
mov
xorb
lret
pushf
fimull
pop
adc
sub
fs
add
push
loope
call
add
outsb
insl
stc
ss
xchg
mov
aas
outsl
add
stos
pop
dec
or
inc
leave
mov
and
cmp
out
rorb
mov
fwait
xor
sub
push
adc
pop
mov
pop
mov
dec
pop
jno
sub
lret
cltd
pop
cmpsl
in
imul
cld
loopne
pop
hlt
or
inc
imul
mov
pop
push
aad
pop
sub
sbb
ss
pop
adc
test
les
std
lcall
mov
jmp
sub
cmpsl
lea
sbb
cmp
add
loope
cmpb
push
mov
cli
cmove
dec
in
add
and
xor
mov
js
aam
fdivr
xchg
xchg
jb
leave
ja
pop
shl
add
mov
or
dec
cwtl
xor
add
mov
mov
push
mov
and
fcoml
xor
stc
and
test
cmp
mov
dec
dec
test
xchg
pop
pop
je
cmpsl
dec
dec
jns
sub
aam
es
aam
push
pop
cld
pop
xchg
jle
enter
push
cli
arpl
mov
mov
in
xlat
and
mov
pop
divb
adc
adc
into
jmp
push
push
idiv
xchg
icebp
and
mov
aad
pop
mov
idivl
mov
hlt
movsb
jb
push
pop
dec
lds
loope
popa
in
push
and
out
xchg
push
lahf
iret
push
or
mov
in
xor
sbb
clc
xor
adc
movl
inc
sbb
mov
into
addl
sbb
mov
mov
push
je
negl
daa
and
hlt
xchg
cmpsb
test
add
fwait
dec
and
inc
ficompl
mov
xor
push
jecxz
enter
loopne
sti
jge
cmp
ja
fsubr
addr16
pop
jnp
fdivrs
and
inc
push
sahf
push
push
inc
stos
and
scas
push
out
jl
add
fwait
jmp
sub
pop
loopne
push
sbb
dec
pop
xchg
mov
cmpsb
sbb
push
and
lea
mov
sbb
cld
jg
sub
push
inc
in
pop
xchg
or
lods
cmp
mov
inc
adc
mov
in
mov
add
movsb
push
inc
scas
repz
xlat
xor
xchg
rcrb
cli
cmp
pop
std
adc
imul
lret
fcmove
rep
pop
and
icebp
adc
les
pop
xchg
inc
jp
mov
je
push
xchg
pop
fmulp
call
addl
dec
mov
aad
xor
inc
lods
xor
or
pop
dec
addr16
xchg
push
test
out
or
adc
inc
dec
lock
push
sbb
outsb
sub
push
pop
mov
adc
mov
xchg
pop
sbb
inc
xor
adc
outsl
xchg
xchg
cwtl
ficompl
mov
aaa
pop
pop
inc
add
add
test
adc
enter
push
mov
or
pop
fdivrs
out
stos
addb
dec
pusha
test
daa
push
rclb
or
and
aad
and
jecxz
ds
pop
mov
lea
loop
pop
inc
rcrl
sbb
cmp
inc
mov
push
out
xor
dec
imul
pop
pop
jp
adc
jbe
call
inc
movsl
jmp
lret
push
das
lea
dec
jmp
scas
or
pop
xchg
push
incl
js
add
or
xor
add
mov
sub
shrb
and
xor
pop
repz
jns
sarl
imul
test
es
sbb
jmp
sbb
ja
cmp
aas
pop
pop
sbb
and
stos
ret
dec
fiaddl
cmpb
inc
daa
popf
mov
xor
add
shrl
hlt
jg
popf
arpl
mov
lds
ret
and
xor
bound
jb
das
cs
lods
ja
pop
adc
pop
xor
pop
repz
lcall
adc
xchg
test
sbb
lods
pop
cltd
push
sbb
inc
in
cmp
and
push
fistpll
add
icebp
inc
inc
lahf
loop
jne
es
jb
add
clc
out
andl
cmp
ret
addr16
pop
lret
jne
dec
xor
push
out
sbb
shl
sub
xor
pop
sbb
sti
add
jg
sbb
cmpsl
pop
fidivl
push
and
sbb
jo
mov
insb
int
arpl
mov
push
xchg
pushf
add
sub
out
icebp
mov
fwait
push
stos
lcall
out
inc
add
inc
push
arpl
cmpsl
fwait
idivl
pop
je
xchg
xchg
jge
mov
call
mov
js
shlb
cmp
pop
imul
push
add
dec
sbb
repz
push
clc
faddl
js
movsl
mov
lods
sbb
pop
dec
popf
je
or
scas
push
leave
test
lea
sbb
cmp
cmovg
test
rorl
and
scas
add
pop
dec
mov
in
jmp
cmp
xor
les
adc
pop
add
in
push
aam
inc
xchg
xchg
xor
dec
cmp
mov
push
mov
mov
pop
aas
sbb
addr16
cs
sbb
rorl
mov
add
sbb
subb
inc
pushf
daa
fsub
lcall
cmp
into
push
das
mov
lea
repnz
mov
cli
testb
bound
jns
jmp
pop
pop
arpl
add
jecxz
cmp
mov
push
stc
and
mov
jecxz
sub
jl
shlb
mov
dec
mov
dec
in
cmp
stos
push
sub
jne
lds
add
clc
out
cwtl
sub
and
nop
and
pop
dec
jns
jnp
mov
gs
repz
dec
lds
fldt
int3
jbe
fstps
lds
mov
jno
decb
cld
lock
test
dec
pop
into
xchg
and
and
lcall
call
ja
xor
jmp
mov
jnp
xchg
push
lods
sub
adcb
pop
sub
push
mov
dec
adcb
mov
sbb
cmp
and
xor
or
mov
shld
adc
inc
test
push
outsl
mov
mov
push
push
xchg
aaa
pop
or
inc
cmp
pop
xor
pusha
pop
pop
repnz
jl
cmp
sub
pop
aad
sub
push
jg
imul
sub
adcl
in
in
or
pop
cmpsb
add
dec
inc
cli
mov
jns
push
mov
xor
xchg
ret
jmp
ja
dec
push
mov
cmp
roll
mov
fnstcw
xchg
xor
call
push
inc
into
push
add
jae
in
test
xchg
loopne
call
rcrb
jno
daa
jne
add
fisttps
push
inc
pusha
aam
ret
pop
inc
sbb
ljmp
adc
sbb
xor
test
cmpsl
inc
or
mov
jns
and
mov
add
sti
in
mov
daa
cld
aad
pop
xor
sub
cli
push
sbb
lods
inc
push
mov
add
push
icebp
shlb
rcrb
fs
lods
mov
inc
mov
inc
sarl
mov
adc
rcrb
ds
dec
jb
jmp
dec
pop
add
inc
stos
mov
adc
sti
aam
insb
adc
mov
sub
dec
sbb
xchg
and
xchg
imul
mov
movb
data16
jae
mov
cltd
mov
test
xor
movsb
sub
mov
dec
stos
or
push
cmpsl
sti
loopne
clc
movsb
adc
lret
mov
out
insb
sub
push
mov
mov
mov
jecxz
mov
add
mov
push
xor
out
push
cmp
pop
scas
pop
lods
sub
sbb
or
or
inc
sub
xor
in
sbb
lock
adc
mov
sub
cmpsb
in
mov
sahf
clc
shr
sub
cli
xchg
pop
add
lods
mov
arpl
add
pop
jnp
icebp
push
shlb
dec
mov
push
adc
push
mov
pop
adc
nop
pop
bound
dec
push
and
jns
nop
cmp
xchg
movsb
cwtl
push
repz
inc
stc
add
lock
push
add
sarb
pop
xor
cmp
mov
pop
lea
cs
xchg
jae
inc
stos
fldt
push
imul
mov
pop
mov
test
inc
jno
add
xchg
rorl
test
shr
jl
xlat
test
jmp
mov
rorb
mov
and
sub
sbb
imul
push
aad
rcrl
jl
or
insl
xor
sbb
xor
test
stos
sub
test
aas
xchg
pop
xor
jae
xor
subl
test
mov
mov
push
imul
sbb
pop
mov
cmp
push
adc
mov
mov
xchg
push
repz
lea
mov
mov
sbb
and
mov
push
pushf
or
dec
jmp
and
ffree
mov
pop
cmp
movsl
xor
or
or
arpl
sub
test
sbb
nop
or
in
inc
or
cmpsb
insl
xor
in
fists
mov
and
add
dec
test
jb
xor
sbb
or
jge
sarl
out
dec
mov
pop
out
mov
adc
mov
and
push
push
sub
sbbl
dec
inc
pop
add
imul
fidivrs
xchg
shrl
jns
ljmp
sbb
xor
ja
out
inc
movsb
mov
jmp
dec
xor
pop
mov
mov
push
ds
push
jle
rol
pop
int
lahf
imul
enter
arpl
push
mov
in
push
adc
lahf
pop
clc
lock
aaa
pop
push
cltd
dec
add
lret
inc
fst
push
push
cmp
dec
lahf
and
add
xchg
inc
mov
jg
cmp
add
jge
and
push
sbbl
movsb
popa
jmp
mov
mov
pusha
mov
ljmp
repz
test
movsl
lock
cltd
xchg
sub
jmp
mov
nop
push
fidivl
mov
mov
pushf
xor
lcall
insb
enter
gs
pop
scas
lret
pushf
lock
mov
imul
xchg
stos
pop
mov
xor
out
test
aaa
in
ljmp
insl
pop
push
and
jle
das
cmp
inc
shll
jb
cmpsb
push
dec
push
sbb
bound
jns
imul
stc
lahf
xchg
sub
jns
and
popa
adc
mov
insl
sub
inc
mov
mov
aas
lcall
jns
and
orb
popa
in
in
add
pop
jae
add
test
or
outsb
push
in
mov
push
imul
test
push
mov
push
sub
sub
dec
pop
jge
stos
aad
mov
push
rolb
stc
cmp
das
dec
sbb
je
push
mov
push
pop
fs
or
hlt
or
loope
push
int
dec
lahf
iret
ss
decb
mov
pusha
mov
jp
es
sub
push
inc
rcll
jno
sarb
xchg
pop
mov
adc
push
jp
dec
and
or
aas
xor
xchg
outsb
rolb
mov
add
cmp
jb
sub
data16
and
adc
mov
js
add
push
jmp
mov
pop
lods
div
rcrb
daa
addl
sbb
xorb
imul
and
mov
test
test
sub
mov
into
sahf
sub
sub
dec
and
xchg
adc
xlat
mov
push
cmp
das
push
ljmp
inc
fadd
mov
dec
push
lods
inc
and
popf
cmp
and
pop
sbb
mov
inc
das
and
into
inc
movsl
xor
in
loope
mov
lds
xor
ja
in
sbb
xchg
push
mov
cmp
addl
bound
or
ret
mov
sbb
push
jae
cmp
mov
insl
js
push
mov
lods
js
push
mov
pop
pop
xchg
mov
bound
push
or
out
les
mov
cmp
and
out
inc
leave
mov
push
decl
or
ds
std
push
insl
or
xchg
xor
mov
mov
mov
mov
mov
into
test
popf
popf
mov
fstp
pushf
pop
mov
mov
push
jae
call
pop
je
sahf
lds
mov
outsb
fiaddl
loope
fwait
icebp
add
lcall
cs
cld
fistpl
sbb
mov
xor
lret
clc
sbb
push
adc
sahf
mov
lahf
les
in
out
ds
xor
xorb
sub
cmp
testb
daa
lret
sub
ss
mov
mov
cvtps2pd
fldt
adc
pop
jb
in
sarb
rcrl
push
adc
inc
pop
mov
addr16
mov
aam
stos
mov
imul
jbe
cwtl
fs
mov
in
imul
int3
pop
out
popf
call
mov
imul
lcall
adc
mov
xchg
mov
sti
shrl
ljmp
push
jnp
sub
jg
xor
fs
pop
pop
pop
push
inc
cmp
test
out
push
iret
adc
jecxz
pop
adc
fcoms
cli
stos
adc
sbb
sub
mov
push
mov
pop
jle
nop
mov
scas
dec
dec
js
shll
shrb
sub
pop
stos
xchg
inc
pop
fisttpl
mov
sbb
or
das
adc
sarb
lods
push
js
xchg
xchg
movsl
stos
enter
ljmp
cli
adc
xchg
cmpb
in
cmp
mov
inc
mov
sti
gs
gs
sub
mov
add
daa
xor
mov
sahf
sbb
insl
push
and
lcallw
xchg
dec
ja
clc
jg
or
test
jp
pop
icebp
insb
and
fistl
inc
mov
add
and
call
sbb
jecxz
pop
ljmp
mov
lcall
mov
dec
inc
test
dec
pop
add
adc
sub
rcrl
pop
hlt
mov
pop
or
js
jo
cmp
cs
add
add
pusha
sub
sbb
dec
pop
xchg
push
push
cli
push
add
xor
push
out
and
or
int3
ret
fwait
pop
xor
adc
xor
mov
ja
adc
test
xor
into
in
and
jae
lret
mov
mov
xor
or
inc
scas
sub
out
mov
aas
ja
jno
pop
or
cs
sbb
ds
dec
sub
mov
sbb
outsb
fwait
popf
adc
pop
mov
pop
fbstp
add
lcall
dec
push
test
cmp
mov
sbb
das
or
dec
jb
jecxz
imul
jge
mov
in
xchg
outsl
out
pop
xlat
loope
or
test
inc
pusha
in
pop
cmp
cmp
dec
imul
jns
rcrl
jg
je
inc
outsb
sbb
mov
inc
repnz
cmp
push
push
xchg
aaa
ss
cs
das
movsl
daa
es
nop
es
bnd
loop
pop
test
test
ljmp
cld
and
push
rcrl
mov
das
lcall
lcall
pop
jp
nop
xchg
or
mov
lods
cmp
iret
lods
cmp
xor
mov
add
add
loope
xor
xorl
inc
push
and
sahf
sbb
jmp
or
stos
xor
push
into
pop
sub
mov
dec
inc
dec
stc
in
js
movsl
jge
sbb
fcoml
iret
xchg
stc
mov
xchg
push
add
adc
out
sub
sub
ds
dec
imul
bound
mov
out
or
paddd
je
pop
xchg
aaa
mov
jnp
sub
imul
pop
ljmp
lea
sbb
jo
fwait
push
test
sub
inc
icebp
idivb
stc
outsb
mov
out
rolb
movsl
daa
sbb
inc
sbb
ss
je
jae
inc
push
inc
scas
jns
call
addr16
fdivrs
in
pop
and
sub
scas
mov
notl
adc
repz
mov
pop
in
jne
mov
sub
jg
test
jge
out
xchg
icebp
test
jp
call
xor
sub
sub
push
push
mov
icebp
outsl
cmp
in
insl
xor
pop
cltd
daa
out
push
movsl
in
add
mov
mov
pop
jecxz
jnp
push
adc
cs
mov
leave
xor
aam
sub
test
scas
xchg
add
out
in
sbb
inc
sbb
les
jmp
mov
or
and
jae
jp
repz
mov
inc
rol
fwait
dec
imul
lret
inc
insb
je
stc
into
call
dec
imul
je
fs
and
cmp
jp
dec
pop
inc
mov
mov
cmp
push
push
mov
shl
push
out
aad
hlt
cltd
mov
pop
add
dec
and
xchg
shrl
and
push
xchg
fbstp
sbb
shlb
out
pushf
out
test
cmp
mov
add
test
mov
pusha
xor
popf
ljmp
inc
push
das
inc
ss
in
xchg
push
inc
and
bound
mov
ss
iret
sbb
lret
aad
es
mov
cmp
aas
xor
in
and
adc
xchg
xor
test
punpckhbw
mov
jg
push
inc
test
xlat
sbb
xor
jae
movsl
jecxz
inc
lahf
push
call
push
pop
mov
cmp
out
inc
inc
sbb
add
testb
adc
imul
push
xchg
in
jg
ret
pop
xor
ss
mov
aaa
das
fsts
dec
cmp
sbb
mov
inc
loope
cmpsl
fwait
lods
xchg
mov
xchg
xor
lcall
add
mov
scas
add
mov
add
xlat
outsb
ret
xor
stc
push
push
fsubr
or
idivl
sub
mov
push
jno
sub
sbb
xor
test
insl
das
shlb
mov
stos
push
aaa
pop
and
dec
stc
mov
jle
scas
clc
jns
loope
insl
ja
xchg
xor
cmpsl
dec
outsb
mov
cmc
xor
out
jno
aam
jg
ljmp
mov
mov
mov
les
push
rcrb
test
test
out
movsl
int
movsb
sbb
sbb
mov
pusha
xchg
inc
xchg
dec
cltd
jecxz
lods
mov
test
mov
test
call
sub
pop
in
lret
inc
mov
mov
ds
pop
gs
mov
or
scas
push
xor
gs
cmp
add
lcall
mov
cmp
push
pusha
outsl
dec
mov
and
cmp
aaa
sub
xchg
mov
jae
cmp
pop
lods
inc
mov
xchg
cmp
fisttpll
les
add
mov
stos
pop
or
or
pop
sbb
push
fimull
test
cli
push
dec
push
sub
or
jbe
dec
lods
fs
inc
fcompl
dec
mov
leave
xor
mov
xchg
shl
dec
out
popa
sub
pop
jb
cmp
out
dec
push
shlb
in
loope
push
in
insl
cmp
mov
or
mov
imul
pop
movsl
in
icebp
aam
fwait
popa
repnz
mov
nop
jmp
cmp
insl
punpckhdq
insl
adc
sub
fwait
lods
or
insb
adc
sub
cmp
xor
das
xchg
lcall
push
adc
jns
dec
xor
xor
int
xor
inc
inc
push
sub
jge
push
dec
mov
xor
adc
push
das
cmc
inc
std
fcmovb
or
and
lea
ret
xor
lds
mov
push
scas
pop
gs
mov
sbb
nop
or
sub
mov
mov
add
int3
jns
and
ljmp
outsb
fidivl
ljmp
add
inc
push
dec
shll
xchg
mov
xchg
shr
cmpsb
sub
aam
jae
daa
mov
leave
in
mov
push
mov
cmp
imul
push
out
push
hlt
pop
rorb
add
scas
mov
fidivrs
and
jg
add
scas
mov
icebp
sbbb
sub
xor
xchg
cmp
stc
out
sub
pop
leave
stos
test
sub
jns
cmc
cmp
fistl
or
inc
push
movsb
imul
cwtl
scas
scas
popa
jg
inc
subl
fistpl
or
jne
jae
pop
cmp
lds
bound
cmc
push
jbe
aam
dec
push
push
or
mov
add
stos
ret
scas
adc
sbb
dec
add
jns
mov
xor
cmp
push
sub
sbb
sub
cli
scas
ud1
or
add
test
mov
std
adc
mov
sbb
jb
jmp
push
push
push
xchg
cmp
push
cmp
and
ror
cwtl
mov
push
push
adc
sbb
aaa
mov
mov
pop
mov
ja
jle
add
mov
jl
shlb
sbb
and
pop
ss
loop
mov
test
xor
and
inc
xor
xor
pop
jb
pop
ljmp
insb
dec
rorb
xchg
dec
push
int
pop
out
inc
rcrl
movsb
aas
test
ds
dec
xchg
jne
movsl
cmp
pop
push
aas
push
scas
enter
mov
mov
fstps
lcall
hlt
mov
push
mov
push
stos
pop
mov
dec
inc
mov
jbe
fs
jo
lock
scas
ss
lea
fwait
mov
loop
mov
insl
adc
arpl
jnp
jo
imul
push
sar
sbb
xor
jnp
or
push
enter
insl
out
test
aaa
sbb
movsl
add
ljmp
pop
or
jo
xlat
cltd
sbb
mov
xchg
mov
sbb
out
into
cmp
mov
inc
fsubrp
inc
add
ljmp
decb
repz
cmp
inc
lret
call
pusha
pushf
sahf
push
pop
inc
ss
cmp
ret
add
imul
scas
ss
xchg
fs
pushf
fcomps
xor
pop
repz
pop
stos
loope
cmc
add
stos
cmpsl
insl
sbb
mov
dec
lahf
inc
xchg
pextrw
jg
push
jae
ret
je
cmp
jge
popa
adc
push
es
jno
sbb
add
daa
sub
mov
icebp
add
sbb
jmp
xchg
or
push
fcmovb
lock
lds
push
stc
dec
add
imul
add
rol
pop
test
sbb
and
ss
testl
fwait
jno
sbb
stos
inc
nop
stos
xor
fwait
jmp
cld
push
fwait
mov
cmp
mov
pop
sbbl
pop
int
jbe
gs
jp
and
loopne
out
xchg
sbbl
adc
adcb
and
jle
xchg
shrl
scas
xchg
dec
inc
mov
bound
lcall
mov
data16
and
pop
test
push
stc
xchg
inc
cmc
xchg
push
push
or
jns
xor
cltd
pop
mov
cmpsl
add
mov
dec
rcr
push
rcrl
mov
push
sub
ret
mov
pusha
neg
push
sbb
loop
lret
rcl
sarb
orl
lahf
sti
stc
stos
jle
mov
lret
xor
in
cmp
stos
jge
jae
xor
mov
cmp
adc
repz
push
je
adc
hlt
stos
movsb
shlb
inc
xchg
ljmp
movsb
sbb
mov
sbb
mov
mov
or
adc
rorb
sub
hlt
dec
push
loopne
dec
dec
leave
into
pop
js
stos
ja
inc
gs
in
add
push
and
jns
pop
js
add
pop
push
aam
mov
xchg
sub
sub
mov
push
stos
dec
subl
xor
jne
add
pop
sub
mov
call
push
push
scas
inc
arpl
sbb
bound
and
shr
xorl
xor
lahf
mov
cmp
pop
sub
jecxz
cli
loop
mov
lcall
sahf
push
mulb
inc
sub
sub
rorb
xchg
sbb
jne
adc
jnp
mov
mov
pop
pop
or
aas
outsb
push
std
out
lcall
inc
dec
std
les
fistpll
das
shlb
or
adcb
dec
stos
pop
rcll
sub
in
cmp
incb
and
mov
fwait
cmc
jae
pop
fisttpl
cmp
pushf
aam
push
mov
rorl
in
inc
es
outsl
int
mov
icebp
cli
dec
loopne
sbb
insb
shrb
push
and
or
addl
push
cld
stos
jmp
movsb
sub
push
jnp
pop
add
mov
and
sar
inc
xchg
cs
push
xor
push
or
sub
inc
jns
mov
std
push
inc
pop
aam
pop
js
cs
dec
or
xchg
call
sub
pop
jg
pop
lods
mov
xchg
mov
mov
mov
lds
push
loopne
repz
and
les
add
cmp
lods
paddusb
sbb
rcrl
xorl
pop
dec
sub
loope
adc
aam
shll
cmpsl
movsl
xor
inc
sub
mov
pop
add
xchg
out
push
shlb
lea
loop
cmp
add
ja
inc
sub
jb
movsb
or
into
pop
aad
das
add
pop
ja
lret
clc
jns
lcall
xor
outsl
and
sbb
icebp
adc
addl
mov
or
fwait
lret
mov
mov
out
test
hlt
sub
or
clc
jae
ret
lock
cmpsl
out
sbb
adc
pop
xorb
cmp
adc
ds
int
push
pop
jnp,pt
pop
or
popf
lahf
push
or
test
ds
lret
js
popf
lea
jbe
jno
pop
je
jns
cmpl
inc
filds
lret
fnstenv
push
mov
insl
jle
call
sbb
mov
int3
adc
lret
lds
repnz
fisubrl
sub
addr16
imul
sub
push
bound
jns
mov
add
adc
imul
jecxz
push
inc
cmp
rdtsc
in
jecxz
sbb
insb
insl
js
cltd
push
push
or
jns
sub
or
lods
cmpb
in
sub
sbb
xor
repnz
mov
xor
fisubs
dec
mov
call
xor
pop
xor
jmp
push
push
sbb
test
dec
jne
sub
sbb
xor
repnz
gs
or
mov
fidivrs
sub
jns
add
shrl
shrl
testb
inc
cmpsb
popf
loop
sbb
xchg
mov
jmp
aad
or
cltd
sub
mov
inc
nop
fnstcw
fisubl
out
adc
sub
fdivl
xchg
nop
mov
andl
dec
cmp
dec
daa
sti
xor
insb
mov
lret
out
push
jnp
push
push
movsl
inc
or
fisubrl
adc
push
mov
sbb
andb
jg
mov
jns
lds
xchg
inc
icebp
fs
push
pop
push
xchg
lcall
mov
hlt
jae
test
ficoml
mov
sar
xor
mov
adc
sub
sahf
xchg
icebp
movb
ffree
sahf
imul
aam
mov
pop
push
dec
pop
push
scas
lret
jmp
gs
push
mov
popf
or
jle
add
cmpl
push
scas
mov
pop
repz
mov
xchg
out
imul
mov
mov
mov
inc
in
cmp
stos
push
jbe
lcall
sub
jns
repz
pop
jns
je
xor
mov
outsb
jecxz
pushf
in
movsl
or
push
jb
cltd
lcall
lea
leave
pop
xor
push
sbb
mov
movsl
push
mov
aad
sbb
xchg
ffree
pop
out
sub
sub
rclb
sbb
popf
dec
negb
fnstcw
das
pop
jmp
sub
and
cltd
imul
dec
es
xor
movsl
scas
imul
push
xor
sbb
fnstenv
jecxz
pushf
lds
aam
add
aaa
adc
mov
dec
inc
mov
lcall
xchg
sti
in
cmp
scas
xchg
lds
popa
add
lea
push
inc
lock
dec
stos
stc
mov
pop
push
push
xchg
inc
pop
cmpsb
scas
xor
je
adc
in
pusha
pop
stc
cmp
sbb
push
add
fidivl
xchg
mov
push
sub
jp
sub
jnp
cmp
in
pop
sub
sub
xchg
outsb
or
push
repnz
sarb
fldcw
pop
stos
cmp
repz
clc
outsl
and
jge
push
sbb
sub
sahf
dec
mov
dec
mov
arpl
sahf
jecxz
push
sub
jns
in
cmp
jge
pop
mov
xchg
pop
std
pop
xlat
lods
xlat
int3
pop
and
add
push
push
out
sub
jle
sbb
mov
aaa
xor
jnp
and
inc
mov
dec
pop
and
xchg
std
outsl
lahf
shrb
add
inc
xor
xor
fisttpll
cmp
xor
loope
jge
cs
fs
lock
lretw
out
pop
loop
mov
adc
call
adc
les
or
pop
es
adc
adc
sub
inc
mov
loopne
mov
sti
cmp
pop
ret
xor
push
inc
cmp
xor
lods
add
movb
cld
sbb
testl
shl
sbb
aad
cmp
add
les
orl
aaa
lea
cs
je
sbb
imul
push
jl
cmp
rorl
jle
sbb
mov
jns
xchg
mov
sub
ja
shrl
cmp
inc
aaa
das
sbb
push
daa
sub
stos
mov
pop
push
in
pop
stc
jmp
jne
lds
jne
add
repnz
cmc
stos
jg
pop
mov
sbb
and
mov
into
pop
mov
inc
cltd
sub
js
push
sub
sub
in
dec
fs
mov
cmp
pop
mov
sbb
xorl
adc
test
ja
xchg
fdivl
mov
lods
dec
cmp
mov
das
sub
pop
shlb
gs
testb
xchg
adc
cmp
notl
pop
subl
pop
lret
scas
add
in
int
cmp
fwait
push
sub
outsl
clc
data16
jbe
xchg
aas
inc
mov
jge
btc
mov
das
jne
push
js
repz
lods
push
popf
pop
add
sbb
cltd
arpl
jmp
jo
or
stc
daa
rcrl
mov
test
dec
push
cli
dec
leave
mov
mov
in
imul
dec
pop
xchg
mov
imul
or
jmp
mov
mov
mov
sbb
outsl
mov
jecxz
fnstcw
or
daa
aaa
xchg
fmuls
adc
pop
jo
pop
adc
addr16
stos
lock
mulb
inc
inc
icebp
addr16
cmc
icebp
pusha
adc
aas
push
lea
or
test
dec
pop
and
ljmp
icebp
std
cmpsb
xchg
or
loope
inc
mov
repnz
xchg
jge
cli
mov
or
insl
clc
mov
inc
inc
and
xor
into
stos
rorl
sub
inc
xchg
xchg
dec
repnz
mov
jmp
inc
or
cmpsb
cmp
add
jmp
sahf
push
in
sub
mov
pop
dec
ja
sub
dec
adc
lcall
int3
ja
repz
subl
or
mov
xchg
inc
push
lret
lods
adc
fstps
cmp
loope
dec
fnsave
pusha
jle
call
cmc
mov
pop
sub
ss
movsb
hlt
xor
mov
and
rol
or
pop
int
lret
std
xor
pusha
or
cmpsb
inc
outsb
pop
lock
sub
movsl
add
jp
pop
ror
mov
inc
push
mov
imul
dec
mov
mov
cli
or
dec
rorb
mov
je
fs
mov
pop
dec
rcr
dec
or
inc
lea
mov
leave
insl
add
sbb
fnstenv
in
stos
push
int3
rcll
cmp
inc
cmp
out
in
stos
dec
imul
fdivs
mov
adc
push
stos
add
jl
fcmove
mov
int3
adc
mov
jae
jnp
lahf
mov
add
inc
addb
and
lcall
mov
mov
bound
int
ficomps
iret
pop
lcall
mov
sbb
push
dec
data16
and
jne
pop
xor
cmc
movaps
and
sbb
adc
cmp
inc
scas
insl
xchg
stc
ja
dec
mov
and
inc
je
add
imul
imul
icebp
or
int
stos
cmovae
sbb
mov
addr16
jbe
jnp
test
lret
loopne
cmp
addr16
add
jno
call
sub
stos
movb
push
inc
out
xor
mov
dec
aaa
and
cmpsb
ss
repnz
lcall
lea
adc
cmp
dec
sub
sub
or
out
stc
movsb
cli
shlb
cwtl
popa
xchg
fldl
pop
inc
psubq
nop
rolb
xor
lret
cwtl
xchg
int
cli
cmpsl
pshufw
adc
or
outsb
ss
lcall
push
aas
nop
test
or
sub
mov
or
cmc
cmp
xlat
jns
cli
xchg
inc
cmpsl
adc
dec
add
punpckhbw
dec
add
jge
pusha
std
shlb
test
repnz
sub
push
inc
push
xchg
inc
cmpb
mov
pop
inc
adc
rcll
pop
mov
aam
ret
les
inc
sbb
adc
dec
into
sub
adc
mov
test
sbb
jmp
jo
and
mov
cmp
or
and
xchg
arpl
popf
pop
shlb
mov
sub
shll
fs
or
pop
dec
sub
cmp
cmp
jbe
movsl
fs
out
xor
pushf
push
jg
outsb
or
loop
xor
adc
cwtl
popf
imul
test
ds
inc
dec
test
popf
pop
leave
aad
sbb
int3
aas
sbb
mov
sbb
cmp
pusha
mov
adc
lods
jg
idiv
sub
push
inc
and
push
push
ficompl
mov
out
jle
add
sbb
jne
pusha
sbb
inc
outsl
add
xor
scas
or
movsl
pop
adc
mov
ss
xor
pop
sbb
adc
test
mov
pop
pop
adc
pushf
add
sahf
cli
add
icebp
xorb
jl
inc
push
mov
lret
mov
aad
outsb
outsl
pop
sbb
in
cld
sti
loop
jb
jnp
push
cmc
ds
ss
popf
dec
mov
mov
shll
mov
jmp
fsts
xchg
cmc
loope
xlat
sbb
jne
outsl
fsubrs
outsl
aas
jg
xor
add
ss
inc
subb
jae
repnz
lcall
insl
scas
subl
pop
arpl
lods
out
jne
jne
jp
shr
push
mov
dec
xchg
bound
inc
cwtl
test
pusha
mov
xchg
add
cmp
outsl
scas
push
mov
push
repnz
in
mov
or
movsb
lock
stos
mov
movl
fnstsw
loope
aad
fidivrs
cmp
xor
insb
add
xor
jmp
xor
cld
xchg
jmp
jp
jmp
push
inc
push
push
pop
pusha
mov
lret
mov
xor
or
jns
cmp
stos
xor
sti
test
or
sbb
aaa
sbb
rcrb
adc
stos
push
pushw
fistpl
popf
cltd
add
dec
jp
stos
ja
imul
adc
xchg
xchg
or
sbb
inc
mov
sbb
loopne
xor
xchg
aas
cwtl
sbb
dec
xor
push
addb
icebp
pop
mov
aaa
addr16
or
jg
inc
and
inc
mov
lock
cmp
xor
sahf
lds
int3
test
mov
mov
sarb
and
sbbl
add
inc
mov
push
mov
inc
out
xchg
rol
xchg
sbb
cmp
adc
sbb
and
mov
jmp
cmp
aas
jp
pop
cmp
mov
cltd
iret
pop
stc
xchg
pusha
cmpsl
mov
stos
mov
push
mov
sbb
xchg
dec
mov
fstps
cli
mov
roll
cmp
push
and
xchg
xor
jnp
out
inc
adc
scas
mov
sub
repnz
loop
xor
inc
repnz
dec
or
adc
mov
mov
popa
lret
adc
push
mov
ret
test
ja
dec
jge
or
loope
adc
loop
jle
jns
sub
lds
sbb
sbb
pop
jmp
dec
inc
add
sbb
adc
mov
fcoml
call
push
in
adc
xor
jecxz
adc
push
jg
xor
xchg
repnz
int
push
loopne
sti
mov
push
xor
pop
stos
loopne
arpl
pop
cmp
jecxz
add
add
cmp
add
cwtl
push
or
call
jae
imul
sbbb
stc
les
sub
sub
imul
sub
das
jb
cli
dec
fsub
cmp
jae
fs
or
push
in
mov
jne
shl
lds
lods
pusha
or
aas
pop
stos
call
stos
stos
pop
cmovo
jns
bound
mov
fs
outsl
add
div
adc
hlt
shl
mov
or
in
mov
testb
fldl
adc
inc
mov
add
jmp
xchg
dec
inc
lock
cwtl
inc
sahf
mov
outsb
stc
subb
rorb
or
gs
jmp
sahf
adc
dec
cs
test
divl
es
jg
inc
pop
clc
fdiv
jmp
fsubs
inc
lea
push
mov
sbb
icebp
outsb
mov
sub
lods
mov
xchg
xchg
scas
xchg
lods
push
jns
mov
push
mov
adc
test
adc
or
cwtl
cmp
cmp
and
xchg
clc
shlb
mov
mov
xor
mov
and
loop
push
mov
fdivrs
loope
xchg
dec
adc
inc
and
push
inc
jg
mov
in
lahf
mov
int
outsl
outsl
adc
jnp
xchg
arpl
cmp
imul
pop
mov
or
push
jo
dec
outsb
and
and
aaa
cmpsb
pop
ficompl
repnz
nop
clc
and
sbb
jl
cltd
push
adc
adc
add
xchg
ljmp
or
in
cmpsb
push
push
cld
lods
pop
jae
and
lock
pusha
dec
mov
sub
mov
jnp
mov
repnz
adcl
iret
std
xchg
fisubrl
dec
lcall
push
imul
mov
mov
inc
sub
out
mov
in
xchg
outsb
int3
mov
in
mov
lods
pop
sbb
cmp
dec
cltd
add
aaa
xor
iret
fucomip
stos
sbb
dec
mov
adc
mov
mov
test
lcall
xchg
leave
xchg
jge
imul
mov
cli
lds
mov
and
lea
sub
addr16
int
add
stc
sub
out
sbb
rclb
cmc
mov
xchg
sub
or
sbb
push
add
xchg
scas
add
jmp
loopne
add
rcrb
es
xlat
flds
inc
mov
movsb
add
jg
and
dec
dec
jl
aam
push
sub
jecxz
mov
jnp
jg
shll
aaa
imul
mov
push
int
lock
xor
pop
xchg
dec
mov
addl
pop
adc
mov
pop
jbe
in
in
lds
scas
jb
cmp
xor
push
mov
dec
lret
sbb
dec
pop
pop
mov
fldpi
pop
or
fsubs
movsb
data16
jae
pushf
ja
push
lcall
test
std
and
mul
and
sbb
daa
cli
aam
test
jl
push
stc
sarl
jle
or
mov
repnz
xchg
xchg
cmp
pop
dec
and
stc
jae
or
andb
pshufw
fbstp
cwtl
xor
or
push
inc
int
add
add
scas
sub
or
stos
fimull
xchg
aaa
add
test
sbbb
cld
fisubrs
mov
das
jbe
shrl
fldt
sbb
push
sbb
outsb
dec
add
inc
and
jb
das
lds
or
xchg
stc
dec
jno
fwait
cs
push
fxch
out
mov
and
sbb
sbb
mov
and
mov
fs
leave
push
daa
jmp
dec
adc
clc
dec
in
sbb
outsl
sahf
push
jns,pn
push
mov
orl
mov
or
cmp
je
sbb
ja
or
popa
cmpsl
sub
lock
repz
or
adc
jne
jnp
inc
jbe
stc
ljmp
mov
mov
out
pop
aad
popa
insb
sub
cmpsl
dec
or
in
mov
xchg
push
or
jae
mov
adc
sub
xor
jl
loop
cmpsl
ljmp
dec
inc
call
jecxz
cmpsl
xor
sub
or
or
pop
mov
inc
cmp
sub
or
mov
adc
std
pop
pusha
cmp
cmc
dec
pop
push
pushf
shlb
jle
or
inc
jnp
jp
pop
cwtl
fsubr
mov
dec
mov
cmp
push
mov
xchg
jmp
sub
stos
cmpsl
fidivrs
cmp
cmp
lret
cmpsl
pushf
in
sbb
jg
mov
cmp
xchg
mov
jns
lret
cwtl
js
pop
xchg
adc
push
pop
jmp
push
sbb
lods
bound
insl
push
pop
and
sti
mov
xchg
push
stos
push
out
out
stos
pop
mov
stc
je
mov
test
mov
je
push
or
jae
mov
jle
xchg
test
pop
jns
xlat
mov
stc
pusha
je
dec
cmp
xor
and
imul
mov
inc
adc
imul
or
xchg
mov
add
out
loop
ja
push
in
xchg
xchg
outsb
pop
ficompl
mov
inc
push
push
pop
notl
lea
push
cs
xor
popa
inc
xorb
in
or
xchg
mov
daa
add
scas
clc
push
scas
pop
loop
dec
shrw
pop
push
push
mov
mov
sub
mov
jl
mov
nop
or
imul
inc
or
pushf
aas
shl
cli
or
push
pusha
jge
sahf
jno
aad
sbb
mov
ljmp
stc
sub
lock
mov
push
mov
and
sti
cli
faddl
push
jl
cmpsl
popa
push
iret
push
sub
mov
mov
fisttpl
add
pop
xchg
sbb
adc
scas
or
ss
and
sbb
push
push
xor
mov
sti
xchg
daa
cltd
sbb
sbb
call
aas
mov
or
mov
jne
adc
xor
sbb
cmpsl
test
sbb
imul
aas
cmpsb
pop
fistl
pop
pop
repz
loopne
inc
jo
pop
dec
jge
inc
or
jle
decl
popa
jo
pop
fstpt
add
sti
mov
insl
add
xchg
out
xchg
jo
add
pop
and
jne
mov
and
mov
mov
sub
sub
ljmp
dec
sub
pop
imul
add
xor
adc
sbb
dec
xlat
popf
dec
cmp
mov
arpl
std
add
outsb
stc
pop
test
scas
sbb
shlb
das
repz
das
sbb
aam
in
in
icebp
cmp
pop
mov
stc
stos
in
xchg
lret
dec
cltd
dec
ja
mov
sub
sbb
xor
xchg
sbb
leave
mov
lods
arpl
dec
into
repnz
cs
iret
lds
and
dec
sbb
popf
xchg
lret
mov
popa
push
int3
cmpsb
adc
push
testl
rorb
jmp
scas
ss
insl
push
adc
lcall
movsb
jecxz
xor
test
xor
mov
sub
jge
mov
add
ret
pop
jg
shll
jo
cli
dec
out
pop
push
call
pop
ljmp
addl
inc
cmpb
or
jno
xchg
mov
xor
jecxz
and
lods
dec
mov
add
sub
ja
xchg
xor
mov
aad
scas
dec
and
leave
fistpl
pop
mov
add
push
pop
pop
add
sbb
push
inc
mov
fwait
mov
jne
inc
sahf
pop
or
pop
dec
mov
sbb
ja
lods
in
imul
jl
jae
adc
xor
pop
clc
movsl
cli
push
inc
aad
daa
push
mov
scas
pop
xchg
rcll
add
mov
pop
shl
js
into
cli
mov
dec
push
mov
into
inc
dec
mov
sbb
mov
or
mov
add
cmp
in
and
pushf
ss
xchg
sub
add
adc
mov
push
xchg
push
xlat
leave
jl
imul
iret
aad
adc
mov
lock
push
repz
ret
cmpsl
dec
push
push
outsb
push
push
mov
sub
lret
test
lock
lods
dec
ret
rcrb
std
mov
lods
inc
mov
sbb
inc
sub
mov
jmp
cmc
stos
sbb
pop
dec
push
imul
mov
mov
imul
repnz
fisttpl
test
cmp
dec
push
jns
inc
sbb
mov
sbbl
pavgw
sub
lcall
inc
sbb
adc
jp
fs
inc
adc
out
or
fnsave
sbbb
loop
sbb
roll
or
or
dec
stos
cld
and
jns
fdivl
mov
fs
sahf
sbb
pop
rcrb
xor
sbb
mov
pop
ficoml
sahf
sbb
dec
popf
outsb
cld
push
shr
jo
xchg
lahf
pop
mov
pusha
jge
mov
insb
aad
sub
aaa
divl
mov
add
xor
sub
in
daa
sbb
les
push
test
mov
push
fsubrs
mov
in
jmp
add
xor
cmp
insl
mov
loop
mov
push
ret
mov
in
insl
cmp
mov
sbb
idivb
dec
lods
pop
mov
mov
xor
add
jg
loope
ret
sub
subb
stc
leave
test
incl
fs
shrl
loope
xchg
movsl
scas
and
mov
mov
xchg
push
arpl
lahf
insb
shlb
arpl
adc
cs
lret
loope
dec
push
clc
mov
je
mov
or
or
mov
push
adc
or
sub
jbe
adc
fucomi
mov
pusha
sbb
divb
lcall
test
add
sub
adc
jmp
shlb
mov
cli
decb
cmp
test
inc
imul
outsl
jne
ret
popa
pop
fcmovu
mov
xor
sub
psrad
sbb
call
jmp
fadd
rcrl
std
mov
cltd
out
movswl
xlat
rcll
jl
lock
xchg
pop
xchg
cmp
xor
fnstenv
add
imul
lea
outsb
mov
and
xchg
test
daa
mov
inc
cld
or
dec
rcll
xchg
adc
jae
adc
lret
fwait
cmc
pushf
xor
cmp
inc
insb
leave
lret
ljmp
inc
dec
sub
je
jl
xchg
xor
or
cld
pop
int
cmp
inc
xor
sub
mov
sbb
icebp
mov
outsb
sarl
rcll
mov
add
jecxz
test
jp
inc
jecxz
out
xchg
pop
popl
ret
add
and
push
scas
xlat
jge
pop
xchg
dec
push
stc
lods
or
xchg
lods
ds
xor
pop
repz
cmpsl
lods
insb
sub
sbb
xchg
sub
out
fistpll
and
adc
cmpsl
fwait
jno
inc
xchg
loop
ffree
jne
bswap
or
jno
pop
sub
addr16
pop
orb
push
lods
jo
pop
inc
lret
mov
push
decl
es
cmp
push
inc
pop
pop
fdivrl
lods
mov
pushf
sub
stos
imul
cs
or
mov
aam
subb
push
push
out
push
mov
mov
xchg
jae
movsb
addr16
sub
pop
xchg
iret
push
sbb
ret
jg
xor
push
aam
cmpsl
push
sub
mov
or
mov
dec
gs
dec
mov
insb
stos
sbb
pop
pop
dec
lea
mov
leave
jb
and
aaa
arpl
and
movsb
mov
inc
mov
jne
pop
int
mov
push
test
jge
xchg
popf
adc
pop
aad
bound
cli
gs
or
add
and
addr16
scas
cwtl
fsub
repz
jge
fmulp
mov
ret
lea
cli
sub
pop
sahf
stos
push
pop
je
movl
inc
sub
push
pop
aad
or
or
cld
pop
shlb
test
mov
xor
ds
add
shrb
pop
inc
leave
mov
jg
pop
insl
pop
mov
xchg
push
ja
pop
mov
sub
xchg
pusha
cli
ljmp
dec
icebp
pop
cmpsb
push
popa
pusha
stc
test
dec
jg
scas
pop
jns
add
jbe
mov
dec
loope
ja
jbe
or
lock
xor
xor
add
int
mov
cmp
ds
xlat
jno
iret
mov
xchg
mov
test
adc
mov
cli
popf
dec
sub
mov
jae
push
dec
adc
ljmp
sarl
mov
push
pop
aad
cmpb
push
gs
xor
cltd
andl
iretw
mov
push
or
jns
push
xchg
stc
xor
pushf
fmuls
xor
ud0
es
ljmp
push
dec
dec
jne
mov
icebp
cmp
sub
mov
popa
lods
adc
mov
sbb
and
inc
xchg
test
push
dec
test
jge
jb
or
xor
sub
sub
ljmp
cmp
lret
clc
movsb
test
xor
rorb
dec
push
pop
adcb
and
dec
mov
aam
subb
inc
push
test
push
mov
mov
sbb
jecxz
pop
pop
sbb
int
mov
loop,pt
mov
imul
imul
sbb
or
jns
push
xchg
stc
aas
push
pushf
fs
dec
dec
sub
pmulhuw
and
dec
push
cmp
sub
out
mov
xchg
xor
pop
and
sbb
arpl
push
test
or
fisttps
fld
xchg
or
in
adc
adcb
cltd
or
inc
inc
pusha
push
jb
cmpl
int3
xchg
dec
leave
add
and
adc
lret
fcmovnb
outsb
xor
jmp
ja
mov
adc
fwait
xor
pop
add
cmp
mov
pop
mov
xchg
fistl
scas
and
loop
fcmovne
xor
iret
xchg
sbb
iret
sub
xor
sbb
jnp
jbe
divl
pop
xor
sub
xor
dec
or
fidivs
dec
fists
lods
lahf
in
sub
xlat
lock
and
mov
outsl
push
insl
sbb
xor
adc
jne
stc
aaa
xor
aas
insb
xor
aas
dec
mov
adc
dec
faddl
andl
fcomps
pop
sbb
shrl
inc
dec
stc
or
adc
inc
andb
xchg
testl
ficoml
pop
xchg
outsb
pop
cmc
pushf
jge
daa
out
sbb
fcmovb
mov
fisubrl
hlt
pusha
std
cmc
jecxz
lods
dec
es
jb
pop
int
mov
fistpll
push
jb
shll
lea
pop
push
addr16
adc
inc
outsl
outsb
rorb
stos
insl
sub
js
inc
push
adc
or
or
shlb
ds
dec
mov
loop
movsl
inc
shrb
mov
xchg
or
hlt
jle
std
jne
mov
mov
mov
nop
dec
sub
mov
stc
push
push
dec
add
test
jge
or
dec
inc
adc
arpl
gs
push
outsl
daa
cmp
inc
jbe
pop
fimull
mov
xor
xor
psrad
sbb
sbb
mov
sub
fidivl
ret
ror
es
in
mov
jno
pushw
popf
or
std
cmp
sbb
int
cmp
and
push
aam
addr16
aas
das
mov
sbbl
mov
push
aam
rclb
pop
or
or
xor
mov
int
mov
inc
cmpsb
xlat
and
aam
std
bound
data16
clc
test
ss
mov
xor
cmp
call
scas
cmpsl
mov
aad
add
outsl
jg
push
sbb
daa
mov
xlat
test
call
cli
xchg
and
mov
dec
add
stos
cwtl
mov
ja
add
sahf
mov
jns
cmpsl
cmc
cmp
scas
sub
arpl
cld
push
sbb
dec
loop
shll
mov
pop
xchg
mov
sub
dec
xor
sbb
movsb
push
in
xor
in
dec
cmp
out
aas
sbb
ucomiss
ljmp
or
mov
data16
mov
sub
mov
inc
jae
adc
movb
pop
clc
xchg
in
aad
out
mov
xchg
bnd
bound
adc
add
mov
mov
out
iret
aam
pop
xor
in
pop
shlb
adc
or
and
aam
xor
push
mov
mov
dec
sub
or
arpl
jns
and
mov
data16
mov
imul
cmc
sbb
push
and
popf
inc
jg
mov
clc
push
out
adcb
xor
push
mov
mov
add
lret
arpl
lahf
pop
ss
sbb
in
inc
push
xor
xchg
test
out
mov
stos
mov
sub
push
ret
lock
xor
fidivl
sub
mov
sub
repz
es
cli
sarl
sub
sahf
mov
add
sub
mov
mov
jns
mov
dec
add
repz
movsb
aad
dec
add
inc
sub
sub
insb
inc
or
sbb
xor
push
fcoml
insb
lods
rcrl
push
daa
mov
push
add
repz
shl
clc
fisttps
lods
scas
in
xlat
cs
loopne
jae
add
and
adc
into
pop
mov
cmp
pop
adcb
add
das
inc
cmc
ret
ret
inc
sub
pop
testl
dec
mov
mov
incl
sub
xchg
and
mulb
jno
push
mov
stos
mov
aad
adcl
xor
and
sbb
sub
repz
loopne
arpl
push
pop
loope
pop
sbb
jo
sub
fiaddl
ljmp
mov
dec
dec
xor
cmp
dec
lret
jl
cmp
subl
test
jp
dec
dec
js
mov
inc
xor
inc
jecxz
xlat
test
cmc
test
inc
xor
cmp
and
sarb
lret
fisubl
xlat
xorb
into
pop
gs
ss
xchg
ret
or
mov
pop
xor
test
add
pop
sub
scas
sub
push
xor
mov
add
imul
pop
xor
sub
add
push
jp
dec
dec
mov
add
lret
xor
jecxz
mov
icebp
or
xor
scas
jl
adc
cmp
popf
xchg
jbe
icebp
pop
sarb
pusha
in
out
ja
push
repnz
test
mov
pop
mov
mov
outsb
push
sub
sub
mov
fisubs
xchg
jecxz
mov
scas
fcomi
cmp
jno
and
ret
aas
mov
sbb
mov
dec
nop
in
jecxz
mov
xchg
ja
ljmp
in
mov
push
mov
add
cmp
mov
dec
push
sub
sbb
sbb
inc
jno
fs
inc
negb
mov
add
inc
cltd
sub
icebp
pop
bound
shll
mov
mov
push
sub
out
mov
imul
adc
adc
sub
test
imul
mov
jg
sub
pop
bound
mov
inc
ds
subb
jnp
xor
fwait
es
sub
aad
shlb
pop
test
pop
movsl
pop
inc
sbb
pop
fldenv
mov
std
incb
popfw
cmpb
pusha
push
arpl
and
mov
cmp
push
ret
xor
mov
xchg
shr
stos
icebp
test
adc
xlat
jecxz
test
sub
test
cmp
jg
sub
xor
shrl
shll
mov
mov
push
cmp
mov
sbb
pop
jns
ficompl
jnp
loope
popa
stos
xor
cmpsb
sub
aas
xor
mov
cld
insl
roll
jmp
fimuls
add
pop
adcb
sub
fldcw
test
add
xor
cmpsl
outsl
lods
sub
lock
inc
test
movsl
dec
cmp
push
push
xor
test
xor
mov
daa
add
pop
and
mov
push
and
out
add
xchg
fstp
cmp
lahf
outsb
shll
arpl
jo
mov
and
and
and
sub
clc
push
push
pop
xchg
loope
scas
jmp
int
lock
daa
lret
mov
inc
xchg
dec
inc
push
mov
fldl
lds
rcll
mov
dec
dec
test
xchg
jnp
and
push
shl
jl
imul
into
and
mov
add
push
jne
mov
adc
je
add
cmpsb
pop
jecxz
cmpsl
sub
sub
mov
adc
add
pop
push
pop
inc
push
pop
roll
jbe
sahf
sbb
popf
or
adc
lods
popf
push
movsb
stos
push
lahf
jmp
cmp
js
mov
mov
mov
xchg
cmp
in
aaa
mov
in
and
sbb
scas
xchg
imul
lahf
cmp
orb
stos
outsb
inc
lahf
lods
cwtl
mull
movsb
adc
xor
mov
add
or
jo
jb
ja
fistpll
push
jge
cmp
jp
xchg
sbbl
mov
mov
stos
test
jl,pt
test
fwait
aaa
push
loope
inc
mov
mov
scas
adcl
pushf
and
xchg
adc
push
ja
jp
jecxz
adc
add
rcll
insb
cmpsl
dec
inc
mov
push
sti
in
int
inc
gs
iret
xlat
js
pop
adc
cmpsb
outsb
mov
test
pop
nop
daa
int3
ret
dec
jae
jnp
leave
shll
pop
mov
std
ja
andl
mov
jg
cmp
jmp
scas
leave
gs
inc
add
and
enter
adc
sub
bound
push
cmp
decb
sbb
xchg
jl
and
movsb
pop
jns
mov
icebp
mov
xor
daa
insl
mov
test
pop
test
stos
pop
adc
ret
iret
call
repz
xchg
jno
mov
pushf
cld
arpl
std
repnz
or
mov
mov
cmp
push
je
xchg
inc
shrb
adc
xchg
dec
add
je
test
out
inc
fstpt
cmp
mov
cmpsb
jb
push
mov
inc
mov
maxps
insl
jae
test
and
xor
icebp
lret
or
icebp
mov
add
out
into
nop
andl
aad
das
or
cmpsb
mov
mov
ret
xchg
inc
xorb
data16
inc
push
nop
jne
hlt
rcr
repz
ljmp
sbb
add
sbb
pop
imul
in
mov
and
push
sub
int3
pop
adc
jns
jns
sbb
cmp
dec
subl
pop
je
aam
mov
mov
mov
mov
jbe
or
jno
mov
aas
xchg
push
or
xchg
popa
mov
xchg
push
adc
inc
test
sbb
cmp
scas
movsb
mov
popa
testb
jmp
scas
add
pcmpgtb
adc
inc
test
mov
xor
into
jp
xor
es
mov
jmp
iret
int3
loopne
insb
pop
test
and
test
scas
dec
mov
push
push
fmull
xor
scas
dec
dec
pop
dec
stos
dec
inc
add
loope
jmp
rorb
sbb
mov
outsb
xchg
movsl
add
adc
dec
add
sub
shr
push
pop
jp
dec
jg
add
cmp
xchg
pop
sbb
lret
xchg
or
aam
hlt
cmp
fiadds
js
xchg
push
enter
clc
stos
imul
adc
mov
imul
xchg
lahf
rcll
cwtl
idivl
notb
jecxz
xor
jo
gs
and
fstpt
cmp
gs
push
das
inc
stc
sarl
pusha
pushf
dec
dec
addr16
mov
nop
jecxz
jp
inc
mov
fwait
sub
popf
push
jmp
out
mov
aad
xor
lods
imul
nop
or
sub
jae
test
into
add
insl
or
movsl
mull
jae
repnz
ror
iret
jmp
xor
lret
inc
push
lret
lret
jnp
mov
cmpsb
mov
lods
mov
into
mov
lock
imul
cmpsb
push
or
mov
sub
add
push
cmp
test
xchg
xchg
dec
dec
xor
mov
enter
dec
xor
stos
test
in
push
mov
add
jge
subl
mov
test
cmp
aaa
testl
xchg
mov
mov
xlat
jnp
push
je
mov
jno
sub
lret
shrb
adc
loopne
xchg
dec
test
sbb
mov
mov
mov
inc
mov
push
push
iret
pop
pop
fnstsw
icebp
call
gs
test
dec
mov
cmp
lds
test
push
jle
insl
xchg
mov
aaa
sbb
das
sbb
ja
popa
push
pop
dec
test
in
iret
sbb
jae
push
out
sbb
xchg
push
and
xchg
jle
fadds
ret
or
pop
sbbl
and
pop
jnp
xchg
mov
jns
sbb
leave
test
aas
imul
mull
cltd
popf
inc
rol
cmc
and
outsb
push
push
test
add
sub
stos
add
push
inc
sbb
pop
dec
mov
movsb
and
fdivrl
add
scas
imul
and
sarb
sub
mov
movsl
cmpsl
xor
pop
fadds
daa
xlat
pop
loopne
movsb
scas
xor
mov
test
outsb
push
inc
lret
sbb
test
ret
add
xchg
mov
mov
inc
mov
and
and
xor
in
sub
inc
imul
jmp
leave
jle
adc
test
imul
dec
negl
mul
pop
sbb
popf
pop
je
roll
andb
mov
cmp
mov
mov
push
icebp
cmc
dec
or
mov
jae
mov
dec
jle
mov
xor
pop
jle
xor
mov
xor
int3
or
cmp
sub
pop
bound
mov
push
cmpsl
or
sahf
or
sbb
sub
mov
mov
roll
dec
add
xor
jns
inc
adc
sub
adc
mov
jge
and
and
mov
sti
and
mov
add
popf
xor
in
dec
rcrb
mov
adc
fidivs
decl
dec
xchg
sub
sub
xor
rcll
addr16
mov
push
inc
jmp
lds
pextrw
mov
icebp
xchg
lret
sbb
outsl
push
cwtl
in
bound
sub
push
add
mov
mov
sbb
adc
ss
fstl
and
jae
pop
mov
jle
mov
xor
xor
cmp
dec
push
mov
mov
inc
sbb
and
stos
popl
fadds
push
insl
ds
movsl
pop
jb
xor
pop
in
push
cwtl
and
xor
insl
insl
fcoms
inc
push
loope
inc
sbb
daa
dec
js
repnz
inc
popf
imul
push
jne
mov
mov
lret
adc
fidivs
decl
dec
xchg
sub
sub
xor
xchg
out
mov
push
jecxz
fimuls
addl
lret
xor
push
mov
int
lret
rolb
cmc
mov
push
mov
push
sbb
push
repnz
in
lock
adc
and
xor
loopne
push
xchg
jle
and
mov
loopne
mov
movsb
scas
cmp
or
outsb
test
mov
jae
pop
imul
mov
enter
pop
into
dec
xor
and
sbb
jns
outsb
jns
add
pop
sub
es
jne
add
int
js
fsubr
dec
les
pop
pop
xchg
repz
inc
pop
popa
fadds
iret
test
cmp
inc
push
das
ljmp
mov
aas
test
dec
cwtl
jno
pushf
add
bound
or
lret
ss
jb
outsl
push
ljmp
xacquire
int3
movsb
insl
fwait
jmp
sahf
ss
rcrb
xchg
arpl
test
adc
add
shr
add
fstps
out
pop
pop
movsl
lds
aad
cs
arpl
enter
pop
or
jo
inc
jae
ja
jne
fistl
in
fs
sub
in
out
jo
out
jle
add
add
xlat
fisttpl
jmp
ret
roll
inc
call
ja
jmp
xor
into
mov
aam
jo
test
inc
bound
pop
jbe
cmc
fwait
sub
sbb
shl
inc
shrl
push
xchg
aam
movsl
mov
mov
mov
icebp
or
xchg
loope
xor
fcomip
fst
lods
lock
cmp
push
jo
xor
add
push
leave
cmp
inc
mov
stos
push
add
ret
add
scas
ror
adc
pop
mov
sbb
fucomi
aam
dec
insl
cltd
dec
pop
movsb
sub
mov
lahf
scas
out
jp
movsb
cs
arpl
inc
test
jp
push
jbe
scas
sbb
xor
les
or
inc
call
jae
inc
lock
pop
and
testb
in
jbe
pop
sub
sub
cmc
es
dec
gs
clc
sbb
sub
adcb
cmp
pushf
cmp
or
mov
xchg
push
inc
xor
mov
pop
lds
bound
jmp
sbb
shr
cmc
iret
int
push
or
push
xor
cmc
dec
stos
fcoms
repnz
xchg
mov
sub
xchg
outsb
cmpsl
out
jnp
pop
push
clc
xor
loopne
mov
fistpl
stos
rorb
call
jle
arpl
cmp
mov
and
lahf
sub
pop
subb
es
push
test
jle
cmc
pop
mov
sbb
repz
xchg
or
mov
je
pusha
insl
pop
jmp
fs
int3
xor
imul
aaa
imul
ret
pop
xor
jl
movsl
inc
jl
lret
in
or
dec
jb
sti
cmpb
mov
enter
sbb
adc
jb
cmpsl
cli
pop
sbb
lahf
cltd
and
cmc
addr16
jae
sub
out
stos
mov
shl
sub
repz
jb
and
stos
xor
pop
in
mov
test
pop
mov
mov
add
xor
mov
pop
sti
icebp
or
and
mov
lret
arpl
push
cmc
notb
jae
push
out
das
jnp
test
out
sub
stos
jae
push
sbb
call
add
out
or
pop
cmp
push
loopne
xor
inc
sub
aas
pop
lahf
aaa
in
pop
pop
inc
jae
jb
aam
pop
ds
push
lret
dec
stc
sub
test
or
xchg
movsl
insl
and
insl
jge
push
xchg
testb
pushf
mov
jae
gs
mov
xor
jmp
xor
repz
int3
popa
jae
cmc
cmpsb
pop
outsl
lret
jo
shrl
popf
add
push
mov
cmc
data16
loopne
repz
xchg
cld
std
jp
loop
ljmp
push
sarl
and
sub
xor
add
fnsave
cmp
lcall
inc
minps
xchg
or
aam
push
xor
ret
jae
jmp
mov
sbb
je
fs
inc
jge
adc
inc
dec
movsl
divb
lea
cltd
dec
and
mov
mov
cs
imul
inc
or
push
or
cmp
pop
cmpsb
inc
cmp
das
cmpsb
jne
daa
cmpsb
jge
xor
cmpsb
cmpl
cmpsb
mov
cmp
xchg
cmpsb
repz
mov
adc
push
sbb
and
add
sbb
arpl
loope
cmpsl
xchg
sbb
movl
cmp
scas
xchg
jns
arpl
outsb
and
shl
mov
stos
pop
cltd
sbb
ficoms
out
fidivrs
inc
lcall
pop
mov
lods
fsubrl
addb
ja
hlt
fcompl
fmull
fcomp
test
orb
addb
orb
subl
stos
mov
xor
adc
popf
sbb
fs
mov
xor
fimuls
inc
imul
inc
jne
push
inc
sub
lods
inc
mov
pop
cwtl
jno
sub
jbe
sub
fisubrs
push
jbe
pop
jecxz
jno
rolb
pop
xor
mov
dec
xchg
sub
shll
push
rcrl
dec
dec
call
jbe
sub
insl
stos
arpl
cmp
lret
push
xor
adc
jno
mov
xor
call
xchg
fldcw
cmp
dec
jge
sahf
dec
int
stos
dec
cli
shll
dec
psllq
addr16
lds
mov
pop
push
pusha
xchg
sbb
in
orb
pusha
repz
push
out
stos
push
mov
lods
xchg
cmp
in
xchg
js
mov
scas
test
xor
fiadds
daa
test
ror
cmp
or
jl
inc
xchg
sbb
fsubrl
dec
add
call
cwtl
aad
mov
cmc
add
cwtl
cwtl
jbe
cmp
scas
dec
es
jns
xchg
sub
jle
pop
rorb
and
rolb
stc
stos
pop
cmc
lret
mov
xchg
pop
and
sarl
dec
arpl
cmp
mov
cmp
xchg
arpl
cmp
lret
pop
pop
es
rorl
cmp
shl
lea
xchg
cmpsb
jns
ss
sbb
lahf
push
pop
and
sub
ss
outsb
sbb
mov
cmpsl
sub
aam
xchg
iret
or
and
cmpsb
mov
ss
daa
es
xchg
sub
cltd
pop
pop
cwtl
cmp
insb
sub
jbe
pop
loope
mov
or
lea
push
repnz
push
cmc
and
repz
repz
repz
or
inc
push
and
xchg
rep
push
cltd
repz
push
mov
jb
ret
arpl
push
mov
cwtl
testl
ret
add
scas
inc
pop
or
push
je
out
sub
iret
je
out
shlb
divl
popf
je
out
lods
je
out
mov
add
xor
or
insl
test
sub
add
test
jnp
das
inc
fsubs
xchg
add
adc
arpl
ss
loopne
inc
imul
add
fiadds
inc
push
fidivs
inc
fisubs
inc
jne
push
xor
dec
inc
rcll
dec
arpl
xor
jae
sbb
imul
cmp
lods
cmpsb
sti
cmp
jg
sbb
jg
pop
adc
sub
jbe
sub
jbe
sub
ljmp
mov
aaa
nop
jecxz
add
push
je
mov
inc
sub
jbe
sub
jbe
sub
jbe
sub
jbe
sub
jbe
sub
jbe
sub
jbe
sbb
popf
arpl
ljmp
cmp
and
in
add
fidivs
inc
addr16
ja
push
roll
dec
inc
rcll
dec
jno
daa
aam
fnstenv
sub
jbe
sub
jbe
sub
jbe
sub
jbe
sub
ljmp
sti
cwtl
and
test
fcompl
orb
jp
push
ret
cmp
mov
ss
push
out
inc
push
movsb
and
mov
xchg
pop
cltd
add
pop
loope
jle
scas
popa
jbe
icebp
call
sbb
mov
xchg
orb
repnz
cltd
daa
push
xchg
rorb
movsl
shll
lea
sarl
jmp
loope
or
rcr
pop
or
push
xchg
adc
sbb
ss
push
cmp
lods
push
and
mov
push
shrw
leave
push
dec
fldcw
or
ss
push
repnz
push
cmp
ss
cs
push
push
ss
push
push
shrl
fldcw
and
ss
push
repnz
push
loop
jge
fcomps
inc
push
fidivs
inc
imul
inc
arpl
and
dec
ficoms
sub
jge
aas
fisubs
aaa
fisubrs
iret
ficoms
inc
rcr
lods
inc
mov
flds
faddp
inc
fmulp
inc
xchg
fdivp
inc
stos
fsubp
iretw
add
xchg
cmp
cltd
fldl
clc
xchg
aas
repz
repz
push
fcomi
mov
repz
repz
push
stos
cmp
int3
out
add
adc
mov
sub
fbstp
or
pop
inc
add
inc
inc
daa
ficomps
inc
xlat
fimuls
inc
out
mov
inc
scas
fdivrp
scas
jmp
into
pop
pop
add
dec
scas
je
pop
test
or
inc
out
pop
je
out
das
je
out
cmp
shll
add
xchg
jne
lahf
out
cmp
push
push
adc
cmp
push
cmpsb
and
adc
jns
and
mov
mov
imul
xchg
mov
cs
out
into
out
xor
into
xor
test
jge
ss
icebp
xor
push
jno
aas
xor
dec
scas
imul
xor
ficomps
add
inc
inc
sbb
dec
inc
adc
jo
sub
js
and
pusha
inc
cmp
push
inc
lret
loope
and
add
jmp
js
fcomi
dec
inc
lods
mov
sbb
add
xor
and
repnz
pushf
cmp
iret
push
lret
imul
cli
cmp
xchg
sar
dec
scas
shrl
cmpsb
aas
cmp
cmp
sbb
sub
stos
out
dec
fcoml
jnp
or
jmp
pop
popl
jge
testl
bound
jge
fiadds
scas
js
pop
cmc
xchg
je
testl
sti
jmp
mov
or
into
rorl
into
out
test
in
js
inc
xor
test
jmp
xchg
inc
cli
add
inc
sub
addb
pop
and
xchg
shlb
stos
je
hlt
stos
gs
les
inc
cmc
and
stos
cmc
ss
movsb
cmc
add
stos
mov
data16
sub
iret
xor
add
shrl
ss
sub
stos
lahf
cmc
jg
hlt
ror
js
fstpt
cltd
mov
iret
ror
bound
and
ds
sbb
jl
aaa
dec
insb
ror
dec
sahf
ljmp
pop
jb
out
mov
or
dec
repz
push
cmp
jno
cmp
scas
test
push
rorb
mov
frstor
rcr
test
stc
and
sarl
je
xchg
jle
lock
lahf
bound
js
in
add
cli
add
add
sahf
pop
or
xchg
pop
adc
mov
push
shrl
pop
cli
stc
and
add
adc
dec
jmp
stc
dec
and
test
sub
or
pop
push
xor
test
push
xchg
addr16
test
aad
inc
mov
cmp
sti
fisubrs
adc
xchg
xchg
out
push
loope
lods
fidivl
cmp
ss
arpl
fldt
mov
dec
popa
cwtl
cmp
insl
iret
mov
mov
popa
mov
pop
out
and
sahf
sub
roll
add
or
adcl
xchg
jb
jbe
sub
imul
sub
jmp
sub
das
es
push
add
jle
adc
rorl
fstps
xor
je
ljmp
xchg
test
xchg
rcrl
or
sub
lea
rcrl
lea
insl
scas
andl
jecxz
add
shlb
stos
cmp
popf
cmpsb
lret
cmp
mov
add
mov
or
xchg
pop
imul
jae
and
mov
cmp
or
sbb
imul
jnp
fadds
xor
sbb
fimuls
inc
insl
fidivrs
pop
and
cmpsb
pop
cmp
sbb
rcr
inc
andb
mov
xor
nop
arpl
cmp
lock
loopne
cwtl
movsl
add
cwtl
mov
adc
jl
pop
xchg
popf
ss
outsb
sbb
in
xchg
cld
xchg
fcomps
cmp
popa
push
fidivrs
aas
adc
jle
xor
or
das
pop
fnsave
popa
dec
push
ja
int
push
add
push
scas
arpl
or
push
push
xor
je
mov
stc
outsb
cmp
fcmove
test
xor
test
test
xchg
bound
or
dec
xchg
repz
adc
insl
roll
jne
inc
cmpsb
popf
mov
fstps
cmpb
lret
jg
cmp
stos
jg
and
xchg
fs
dec
sub
test
out
jo
dec
dec
notb
mov
cli
in
sub
or
cmp
popf
arpl
add
mov
add
js
fwait
push
aam
inc
test
push
es
jmp
lods
enter
orb
popa
sub
xor
in
shll
pop
cwtl
out
add
cwtl
mov
sbb
inc
cmp
xchg
fisubrs
std
push
lock
push
stos
push
outsl
stos
jno
cwtl
adc
lea
sbb
stos
mov
gs
insb
add
mov
scas
cmp
stc
test
mov
scas
imul
scas
ljmp
adc
aaa
ljmp
or
das
jmp
adc
rcrb
ljmp
cmpsl
dec
movsb
pop
out
push
insl
out
add
pop
add
cld
add
lea
inc
push
sub
push
xor
cwtl
dec
mul
fdivrs
es
insl
dec
nop
rol
dec
adc
dec
mov
decl
out
test
dec
add
push
movsl
jnp
push
hlt
int3
or
xor
test
dec
cmc
loope
inc
xchg
xor
data16
add
pop
mov
pop
xor
xchg
sbb
pushf
loope
scas
ficomps
cmp
dec
sbbl
push
add
xor
cltd
out
stos
mov
arpl
xlat
or
mov
clc
test
mov
jnp
rclb
inc
add
std
pusha
stos
fcompl
jg
push
fidivrs
xorl
stos
mov
or
emms
es
lods
ss
xor
dec
enter
rcrl
test
xor
ljmp
push
cmpsb
sbb
xchg
out
push
testl
sbb
jge
loope
imul
jae
mov
popa
jge
fldl
leavew
popa
cltd
cmp
inc
xchg
push
test
aas
addl
scas
insl
cmp
aas
stc
xchg
inc
popa
scas
cmp
mov
xor
mov
roll
mov
arpl
fidivl
cmpsl
mov
pushf
mov
dec
or
mov
push
xchg
dec
jp
in
pop
pop
aas
lea
inc
push
lods
sbb
jae
sub
push
push
xchg
rcrl
cmp
loop,pt
in
jbe
sub
rcrb
push
ffree
jmp
movsl
cmp
into
inc
sarl
sub
jae
push
out
or
in
add
lock
repz
push
daa
adc
cmpsl
flds
test
fildll
hlt
arpl
stos
or
xor
clc
pop
aam
mov
push
jo
loopne
cmpsl
mov
xor
xor
stos
jp
pop
mov
add
pop
jecxz
xchg
pop
fldcw
add
xchg
ret
jnp
push
xchg
sub
test
sub
sbb
push
repz
inc
xchg
jp
inc
cli
push
push
xor
push
pop
fldt
inc
addl
fdivrp
xor
jo
sub
add
mov
cmpsb
inc
cmp
stos
out
fwait
xchg
mov
fsubrs
shlb
sub
push
push
or
fisubs
push
add
pop
inc
mov
test
loopne
mov
sbb
pusha
test
cmc
aas
sub
daa
sahf
cmc
inc
stos
add
mov
cmp
movsb
jg
aaa
and
sub
into
rorl
in
clc
fdivr
or
ret
fst
mov
cmp
lahf
lea
stc
xchg
iret
jnp
test
ss
lods
stos
arpl
loopne
jg
dec
pushl
cmc
enter
test
out
stos
je
loop
or
xor
test
std
test
leave
ss
xor
jge
xlat
cmpsb
ret
filds
sub
loop
test
xchg
xchg
mov
fsubr
xchg
xchg
push
lock
out
repz
pop
andl
cmc
pop
stos
cmp
fwait
inc
outsb
xchg
push
je
in
mov
rcll
ja
push
add
sub
imul
xchg
int
loope
mov
sub
mov
sbb
sbb
test
pop
adc
pop
pusha
gs
decl
inc
inc
add
mov
sub
push
ja
popa
mov
xor
stos
pop
pusha
xchg
sub
cmpsb
cltd
cmpsl
loopne
les
andl
or
cltd
stos
popf
cmc
or
popa
divb
jp
cmp
in
es
cs
push
mov
inc
out
adc
es
jg
xor
imul
clc
subl
jae
hlt
rcrl
fmuls
mov
push
xchg
push
mov
dec
stos
push
loope
dec
inc
subl
es
jl
repnz
gs
jo
inc
loop
lods
inc
push
add
test
aaa
adc
lods
ljmp
repz
aam
or
stos
in
cwtl
inc
xchg
sub
inc
mov
xor
or
pop
cld
push
and
fisubl
sbb
dec
mov
xor
out
dec
push
push
les
rolb
lahf
insl
imul
scas
sub
out
pop
fistpl
push
enter
lods
inc
fisubrl
dec
xor
out
inc
stos
aas
adcl
repz
into
data16
rorl
lea
jmp
sub
ss
sarb
xor
jl
sub
pop
int3
pop
stos
jnp
pop
xlat
push
pop
push
ljmp
cmp
fwait
cmp
pop
arpl
cmp
fisttps
xor
and
test
stc
lea
sub
jbe
xor
xor
mov
jp
in
pop
adc
sbb
push
pop
outsl
xor
ss
repnz
fstps
xchg
movsl
xor
mov
dec
stos
pop
fwait
mov
mov
jecxz
fildll
std
push
or
mov
cmp
mov
push
incl
xchg
fsubp
aaa
test
test
jg
daa
xlat
imul
sbb
add
xchg
ss
rorl
dec
push
shll
dec
push
out
dec
mov
and
push
arpl
add
test
shlb
fadd
xchg
push
pusha
xchg
adc
inc
add
flds
adc
jmp
xlat
dec
jmp
dec
repz
pop
jmp
cmpsl
sub
ja
stc
sub
and
repz
pop
jle
dec
ror
jo
test
xorb
mov
cmc
cmp
mov
push
push
xchg
mov
test
mov
pop
sahf
cmp
jl
cwtl
adc
jns
cmp
lea
cwtl
loop
mov
cmpl
movsb
movsb
jnp
ret
stos
add
xlat
jg
jb
mov
addb
mov
scas
stos
push
cmc
xchg
stos
add
adcl
lds
mov
jae
fisubrs
push
inc
cmp
lea
pop
aam
cltd
lret
xchg
fcomip
scas
hlt
lcall
lret
testb
popa
test
adc
xchg
sub
jl
das
add
inc
sbb
cli
pop
jge
insl
pop
lret
pop
xor
cltd
pop
push
add
push
dec
pop
imull
mov
les
mov
cmp
enter
add
xor
dec
loopne
inc
fdivs
xchg
pop
inc
and
mov
or
cmp
adcl
push
shrl
push
scas
insl
dec
pop
das
or
push
pop
ljmp
xor
inc
cmp
mov
and
jg
pop
arpl
add
shll
fwait
rorb
arpl
leave
xchg
cmp
jecxz
push
int3
mov
shll
ja
jmp
push
sbb
cmp
dec
pop
xchg
fdivs
in
fdivrs
jb
scas
dec
push
pop
fst
mov
xchg
mov
push
push
sbb
push
jnp
pop
pop
and
pop
insb
arpl
cmp
nop
rcll
xor
xchg
inc
cmp
into
cli
jno
ja
cmc
xchg
js
sub
sbb
jnp
rcrl
dec
adc
mov
les
int3
faddl
jmp
aaa
cli
sub
xchg
pushf
cmpsb
enter
adc
pop
lcall
fnstcw
scas
sub
sbb
xchg
mov
dec
push
mov
nop
sub
pop
cmp
pop
mov
push
fldt
test
add
test
jmp
pop
mov
xchg
cmpsb
stos
xor
scas
stos
sub
and
cmp
aas
test
jl
mov
sbb
jl
cmp
pop
pushw
push
call
test
setb
xlat
test
jge
sarl
or
pop
daa
add
cmpsl
xchg
fsubrs
xchg
fsubs
xchg
pop
arpl
in
lcall
xchg
mov
aas
shl
addl
add
shll
xchg
rcrl
out
inc
cmpsl
js
cli
dec
mov
sti
jns
fisubrs
xor
pushf
jo
push
inc
test
stc
rorl
rcll
dec
jnp
jno,pt
test
jmp
pop
scas
int
inc
std
jg
dec
mov
xchg
pop
xor
insb
divl
fildll
mov
inc
ds
loopne
cwtl
fcoms
xchg
cmp
out
push
mov
test
xchg
ficompl
jmp
cmp
jb
dec
sub
int
cld
cmp
xor
in
add
call
fidivrl
lds
popa
aas
cmp
xchg
inc
mov
sub
add
xchg
int
push
in
sbb
push
xchg
inc
aad
push
cwtl
jge
xor
push
or
push
inc
adc
ljmp
push
rcll
pop
shrl
mov
sbbl
and
roll
push
imul
lret
sti
cmp
and
push
xor
add
or
xor
or
sub
and
out
pop
jne
jb
cmp
jmp
jl
jno
pop
fsubrs
sti
or
push
mov
cmp
mov
sahf
xchg
sti
lahf
mov
mov
pushw
mov
sub
arpl
std
lret
xchg
pusha
mov
mov
test
inc
fildll
xor
out
sbb
inc
inc
lods
mov
es
or
or
roll
ljmp
mov
inc
ds
mov
mov
xor
sahf
cmp
sbb
pop
test
in
ljmp
icebp
decl
and
cmp
mov
lods
xor
sub
xchg
jns
mov
dec
lret
sub
aas
and
and
jmp
fisubrs
jbe
xor
cmp
jno
push
add
data16
sub
inc
fninit
push
cmp
push
mov
mov
lock
lds
stos
jne
js
push
and
dec
andl
push
push
ds
es
test
add
cmc
and
jl
cmp
enter
push
jb
inc
fsubrl
enter
adc
gs
xchg
movsl
inc
xchg
popa
jbe
xor
enter
popa
jmp
out
pop
stc
shll
int3
push
call
adc
cmpsl
loopne
jl
out
xchg
xor
imul
adc
bound
or
pop
or
jne
pop
test
data16
jnp
xchg
ss
mov
inc
xor
mov
sti
push
scas
test
mov
gs
sub
cmpl
mov
and
pop
add
lea
movsl
jg
sub
push
inc
incb
and
incl
popa
pop
je
loope
sbb
in
shrl
std
std
aam
aad
sbb
xchg
sbb
movsl
sbb
fldz
fcomps
jle
inc
ss
stos
pop
loope,pn
push
lea
arpl
add
aaa
sub
in
and
push
sub
dec
xchg
and
popa
inc
cmp
mov
adc
sub
jge
lea
jns
xchg
faddl
mov
int3
push
gs
pop
push
add
pop
pop
sbb
xor
push
bound
popl
xor
shr
icebp
adc
or
jnp
fsubrl
cmc
xchg
dec
push
add
mov
imul
adc
std
in
fldt
adc
stc
sub
lds
mov
xor
mov
add
cmpsb
rcll
dec
leave
rcll
cmp
loope
pushf
and
mov
dec
or
ljmp
movsl
popf
repnz
cmp
int
aas
int
cmpsl
push
sub
push
xchg
loope
and
or
cmp
cmpsb
or
adc
lock
dec
subl
mov
xor
pop
insl
fiaddl
jnp
sbb
ja
jne
inc
hlt
pop
mov
pop
push
mov
inc
and
pop
enter
dec
in
and
fiadds
adc
pusha
jo
push
sub
and
cmp
ds
addl
jns
dec
mov
push
mov
arpl
push
push
mov
dec
lea
fnstsw
imull
jnp
test
aaa
inc
mov
es
cltd
or
push
cltd
push
adc
scas
jne
sub
dec
icebp
aam
dec
icebp
lds
fcoml
aam
pop
js
dec
pop
pop
les
push
sbb
dec
cwtl
int3
adc
push
imul
clc
dec
mov
imul
push
mov
outsb
pop
add
gs
jne
and
mov
testl
add
jmp
sbb
add
pop
mov
cmp
dec
dec
mov
pushf
jae
mov
dec
test
loopne
pop
mov
orl
inc
in
movsl
mov
pop
jo
ds
sbb
jmp
pop
push
xor
lock
gs
stc
daa
and
fs
push
movsl
jmp
adc
out
and
lret
xchg
mov
adc
sbb
pop
cmp
pop
into
push
xlat
mov
and
and
xchg
int
pop
enter
fstps
pop
pop
jge
sbb
icebp
pop
pop
addr16
pop
jae
jne
jge
popa
or
aam
into
arpl
xor
push
pop
mov
call
pop
sahf
and
xchg
insb
and
sahf
daa
mov
rorb
sbb
inc
iret
sbb
pop
and
test
popa
loopne
mov
cmc
arpl
mov
cmpsl
pop
or
sub
mov
jb
mov
mov
xorb
or
inc
loope
or
repz
push
jge
jmp
mov
in
daa
outsb
jne
push
cmp
pop
push
pop
cltd
sub
pop
or
pop
and
or
pop
out
or
cmp
pop
xlat
push
inc
cltd
rolb
insl
or
mov
dec
cmp
dec
mov
fistl
jb
dec
imul
add
jecxz
cmp
mov
shrb
inc
daa
ret
or
lret
into
cmc
pop
mov
dec
sbb
cmp
add
imul
xchg
jmp
add
or
xor
dec
inc
mov
leave
pop
and
add
push
lea
outsb
sub
inc
gs
arpl
lds
out
scas
bsr
cmp
in
hlt
aad
jbe
pop
out
out
lret
mov
sub
test
test
or
sub
and
inc
or
and
aad
pop
or
cmpb
aas
pushf
inc
imulb
lods
jns
push
pop
or
mov
mov
inc
insb
cmc
add
mov
pop
stos
in
cmp
pop
and
xchg
jmp
cmp
test
mov
mov
xor
cmp
sbb
add
xor
out
push
xchg
sbb
xchg
and
mov
fnsave
js
repz
jae
scas
lock
sbb
push
inc
pop
outsl
mov
aas
jmp
sub
jmp
pop
cmp
sub
sbb
sub
fcmovbe
inc
test
ja
daa
in
mov
lret
addb
movsl
or
je
in
cmp
dec
push
out
ficoml
aaa
sbb
push
push
pop
pop
gs
sub
repz
test
lock
sbb
mov
jno
aad
les
cmp
call
pop
xlat
mov
imul
mov
add
shll
js
adc
js
mov
add
mov
add
cmp
out
or
pop
jae
data16
dec
push
mov
mov
lock
xor
fs
push
push
mov
mov
push
fs
es
or
or
jg
iret
and
mov
shrb
pop
cmp
push
sub
add
dec
jmp
bt
in
in
imul
lret
repnz
or
hlt
cld
add
xor
cmpsl
ds
jge
jmp
aaa
push
icebp
push
jae
pop
hlt
push
push
xor
enter
in
ja
scas
pusha
xor
fidivrs
cltd
jbe
pop
aas
pop
repz
sub
aam
pop
mov
or
jl
jp
mov
push
outsl
imul
sub
and
outsb
js
lret
xor
aaa
popa
popa
adc
push
lods
inc
xchg
sbb
loop
or
mov
push
js
movsl
mov
out
and
rcl
mov
fsubrl
and
int
stos
pushf
ljmp
inc
sti
xor
lret
push
pop
jb
add
push
icebp
pop
stos
dec
push
sbb
mov
xchg
push
outsb
cli
dec
adc
rolb
call
pop
sub
sub
add
dec
btc
dec
bsf
and
btr
xor
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
and
cmp
bsf
neg
cmp
btr
add
bts
jmp
lcall
ret
or
inc
cmp
xor
xor
adc
test
btr
cmp
and
bswap
jmp
lcall
xor
add
add
pop
xor
xchg
push
mov
shl
xor
btc
xor
dec
btr
test
call
lcall
incl
ret
neg
sub
test
mov
bt
movsbl
and
bt
test
bt
jmp
lcall
cmp
add
cmp
xor
xor
xor
dec
mov
mov
xchg
push
push
xchg
dec
add
add
call
add
neg
or
test
btc
movswl
mov
add
mov
dec
btc
movswl
sub
bt
bt
sub
shr
mov
shl
sub
xchg
mov
cmp
movswl
btc
adc
test
shr
test
dec
jmp
lcall
ret
or
cmp
mov
test
add
test
mov
cmp
call
lcall
add
xorl
pop
xor
xchg
push
inc
mov
shl
or
adc
bts
shr
jmp
lcall
stc
add
xchg
ret
neg
sub
shr
adc
sub
sub
add
bt
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
neg
shl
inc
bts
inc
xor
cmp
and
jmp
lcall
or
call
btc
cmp
test
bsf
sub
xor
bt
add
mov
sub
not
adc
dec
test
sub
bt
bts
call
lcall
add
test
adc
adc
mov
test
add
call
lcall
or
xor
shl
adc
add
and
add
shr
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
sub
cmp
btc
xor
xor
btr
call
lcall
cmp
not
movswl
btc
and
cmp
mov
add
btr
jmp
lcall
mov
mov
filds
out
lahf
cmp
icebp
jns
ret
repnz
fmuls
and
bts
or
bts
neg
and
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bsf
adc
not
shl
bsf
bt
adc
sub
push
mov
movsbl
or
and
btc
bt
shr
mov
add
xor
neg
sub
or
sub
btr
btc
add
mov
cmp
movzbl
bt
bts
xor
sub
xor
cmp
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
mov
test
xor
btr
sub
not
test
test
call
lcall
add
or
and
add
or
cmp
xor
test
mov
add
xor
or
test
movswl
mov
mov
bts
shr
btc
sub
mov
test
mov
btr
xor
btr
neg
test
call
lcall
mov
sub
adc
test
and
sub
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
mov
cmp
and
add
bt
add
dec
shr
mov
cmp
bt
bts
xor
cmp
adc
inc
jmp
lcall
adc
cmp
mov
neg
sub
inc
or
mov
add
adc
sub
and
add
mov
mov
or
test
inc
call
lcall
add
xor
mov
or
test
mov
sub
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btr
not
mov
or
cmp
dec
btr
cmp
btc
sub
mov
movswl
cmp
bt
and
btr
adc
and
movswl
cmp
or
mov
bt
adc
btc
bsf
dec
and
sub
mov
add
test
xor
shl
and
shr
and
btr
mov
lea
inc
cmp
jne
not
test
dec
and
sub
bsf
neg
bsf
add
bsf
neg
btr
cmp
add
test
btr
bts
call
lcall
je
add
xor
bt
test
bswap
test
bsf
shl
sub
mov
add
btr
bts
test
or
mov
bt
call
lcall
mov
adc
bsf
or
sub
adc
adc
mov
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
cmp
test
sub
cmp
or
sub
call
lcall
or
test
adc
test
and
shl
inc
add
inc
add
test
cmp
movswl
btc
test
dec
xor
adc
jmp
lcall
cmp
xor
movzbl
bsf
sub
movzbl
mov
add
movsbl
xor
adc
and
shl
xor
bt
call
lcall
add
movswl
shr
mov
and
mov
btr
shl
push
pop
inc
add
loop
xor
cmp
cmp
test
bsf
btc
push
decl
mov
add
add
bt
bt
sub
adc
mov
shl
movswl
call
lcall
jmp
mov
fsubl
xor
movzwl
add
cmp
shl
push
shll
add
bts
cmp
bsf
cmp
adc
push
bswap
add
mov
cmp
add
xor
adc
sub
mov
test
neg
shl
dec
bswap
cmp
shl
test
add
btr
push
push
pop
add
add
call
add
movsbl
or
test
btr
dec
cmp
xchg
add
btr
btc
xor
shr
bsf
cmp
and
mov
cmp
sub
xor
add
test
bsf
sub
call
lcall
mov
xor
out
repz
add
bts
test
adc
shr
btr
add
xor
adc
movsbl
dec
add
and
adc
add
call
lcall
test
bt
adc
bts
xor
cmp
test
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
bswap
or
bt
bts
test
adc
xor
add
not
bts
dec
mov
btr
shr
adc
btr
test
neg
call
lcall
mov
add
cmp
add
cmp
test
and
mov
mov
mov
cmp
add
shl
mov
and
not
bt
bt
cmp
je
adc
test
shl
btc
sub
btr
btc
add
or
bts
movzbl
btr
or
cmp
xor
shr
call
lcall
btr
or
bsf
test
and
shr
adc
sub
or
shr
add
sub
or
bts
shr
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
or
dec
movswl
not
test
mov
bsf
shr
and
push
decl
mov
add
xor
add
and
bt
cmp
bsf
or
test
push
decl
mov
add
movzwl
not
sub
not
cmp
bt
inc
btc
shl
add
cmp
bts
or
mov
shl
shl
neg
btr
jmp
movsbl
mov
mov
cmp
add
bts
btc
shr
mov
cmp
sub
cmp
shl
btc
cmp
adc
test
bsf
mov
btc
adc
mov
btc
neg
mov
or
or
and
add
adc
cmp
shr
and
shl
inc
cmp
test
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
sub
bsf
mov
shl
not
add
btc
dec
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
sub
add
mov
and
or
add
bts
push
push
cmp
and
add
bt
xor
or
adc
sub
cmp
push
sub
mov
movzbl
mov
btc
and
shr
cmp
shr
bsf
mov
neg
and
adc
xor
adc
test
movswl
call
lcall
js
iret
ds
sbb
cmp
shl
neg
add
test
sub
lea
cmp
bts
shr
not
bt
shl
bt
sub
mov
and
or
bts
adc
cmp
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
mov
pushl
fimuls
lret
or
btc
xor
bt
sub
mov
cmp
or
xor
dec
adc
cmp
btr
push
btc
and
add
xor
not
and
bsf
push
adc
xor
btr
bt
mov
bt
cmp
push
bt
xor
movsbl
neg
adc
add
shl
test
call
lcall
mov
mov
movzbl
btr
shl
cmp
and
btr
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
add
and
dec
bt
btr
neg
bts
xor
call
lcall
sub
cmp
or
cmp
bt
not
mov
sub
add
test
test
neg
test
neg
cmp
or
add
cmp
call
lcall
mov
neg
sub
adc
adc
movzwl
cmp
cmp
adc
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
jne
ret
testl
sbb
sub
nop
leave
shll
pusha
sbb
xor
sahf
mov
gs
cld
insb
push
add
add
mov
push
or
xorb
dec
mov
addl
inc
das
pushf
dec
push
push
add
cmp
jns
leave
imul
xchg
jg
push
mov
mov
add
imul
js
and
sahf
call
pop
add
add
dec
call
lcall
or
fistpl
lea
mov
dec
fs
scas
sbb
or
je
out
or
kxnorw
rorl
add
adc
out
adc
cmc
adc
movsl
outsb
or
add
xor
mov
pop
sbb
push
and
add
adc
sbb
or
push
mov
sbb
sahf
add
aad
jp
call
add
mov
xor
push
inc
push
dec
push
loopne
inc
pop
inc
aaa
push
cmp
pop
dec
push
dec
into
inc
inc
inc
xor
xor
jnp
cmp
push
jl
dec
inc
xor
rclb
pop
hlt
push
push
dec
push
inc
push
fmulp
cmp
push
inc
inc
xor
adc
inc
aaa
cmp
xor
mov
xchg
dec
test
dec
dec
ss
push
push
aas
inc
inc
stc
sbb
dec
inc
test
add
gs
dec
dec
cmc
adc
add
test
push
aaa
xor
dec
jns
add
dec
push
cmp
push
shll
shlb
pop
repz
ds
fs
cmp
sub
sbb
xor
inc
cmp
cmp
pop
pop
mov
push
inc
in
rcrl
inc
push
lret
jns
cli
ss
jbe
nop
inc
loope
add
das
cmpb
insb
outsl
jae
and
jne
push
cmpsl
jb
mov
decb
je
jns
cs
std
cmp
push
ja
insb
cmp
sbb
scas
sbb
or
push
push
inc
cli
mov
outsl
adc
jo
add
dec
push
push
imul
shlb
stc
push
gs
mov
inc
jo
mov
outsl
outsb
jae
es
mov
cs
jle
js
adc
cmp
sub
pop
adc
or
ja
sub
dec
addr16
cli
mov
inc
push
jb
nop
lds
and
push
outsl
fs
pop
cmp
push
ret
dec
jmp
shlb
outsb
pushw
test
aaa
push
xorl
adc
inc
cs
push
dec
or
lods
pop
add
xchg
sub
stos
addb
inc
cmc
inc
clc
dec
je
rcrb
in
cmpsb
add
inc
mov
dec
out
test
add
mov
push
gs
insl
int3
fs
xlat
inc
jae
popa
lods
fiadds
decl
test
add
and
leave
je
or
insb
sti
int
gs
clc
add
and
je
daa
out
out
mulb
xor
mov
scas
sub
js
pop
insb
fs
jmp
ljmp
mov
dec
jecxz
or
rclb
add
addb
push
dec
inc
push
push
inc
push
es
pop
mov
xchg
dec
ret
mov
dec
inc
xchg
add
insb
