call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
inc
sbb
mov
inc
push
mov
add
push
lea
fidivs
cld
xchg
pop
and
std
fistl
cmp
les
jle
add
pop
pushl
popf
dec
xchg
push
jge
push
mov
jnp
sbb
jne
push
pop
or
or
pop
cs
testl
pop
pop
leave
ret
xchg
add
in
mov
rcrb
mov
pushl
call
xchg
xchg
mov
jmp
sub
dec
rolb
in
sbb
or
mov
clc
call
test
sbb
and
cmp
cmp
add
outsb
pop
push
xor
test
inc
mov
mov
outsl
comiss
ds
push
mov
jmp
pop
pop
cmp
inc
das
add
pop
push
mov
pop
lods
rcrl
jo
popf
cwtl
verr
andb
ret
loopne
jne
lea
push
push
mov
add
jmp
lea
aas
mov
mov
lcall
and
sbb
xchg
popa
and
fwait
addl
pop
inc
stc
push
imul
or
cmp
leave
xor
cmp
mov
push
out
pop
out
fwait
call
xor
ret
jnp
fsubrp
ljmp
jmp
loope
xchg
gs
cmp
adc
cmp
pop
fsubrs
sub
pop
je
mov
mov
or
fwait
cmp
xor
nop
mov
sbb
cmpl
cwtl
and
xor
or
push
sbb
and
or
enter
push
sbb
push
repnz
add
and
xor
inc
cmp
adc
or
and
xchg
mov
pop
cmp
fsubr
pop
pop
pop
mov
push
sbb
pop
mov
lods
push
jae
xor
js
sub
das
out
inc
sub
inc
jl
pop
push
in
mov
pop
pop
mov
into
ljmp
jne
add
xchg
cld
lock
cld
xchg
mulps
xor
jmp
ja
mov
pop
cld
clc
hlt
dec
mov
fs
mov
popa
ja
gs
ja
sbb
clc
cld
mov
divb
mov
sbb
and
adc
js
outsl
clc
or
sbb
add
mov
popa
mov
movsb
sub
pop
xchg
aad
rcr
or
mov
psubb
ret
shll
adc
movl
sub
call
out
push
cld
pusha
fiadds
in
adc
in
imul
pop
clc
pop
sahf
fstpt
pop
stos
loopne
jge
mov
push
jg
fnstsw
adc
xlat
cmp
setg
pextrw
add
arpl
inc
push
dec
es
cli
fadd
inc
subb
fcmovu
jg
inc
repz
in
loopne
pop
in
push
out
add
call
out
mov
xacquire
jmp
mov
and
clc
push
cli
pop
test
lods
mov
movb
ja
mov
aad
out
inc
inc
mov
sti
icebp
fistpl
adc
cmpsl
cmp
sti
pusha
imul
and
push
lods
arpl
out
add
rcr
pop
jg
push
mov
sbb
xor
or
fcmovnb
fisubrs
cld
xchg
pop
fstp
out
ret
mov
adc
adc
fadds
shrb
test
dec
add
es
jmp
push
daa
es
mov
mov
and
into
inc
jmp
jns
pop
ficompl
fwait
out
adc
sub
fsubr
sub
inc
pop
imul
cmpl
dec
lea
sub
push
jae
cmovae
mov
fcoms
jbe
fdiv
pop
lea
not
movl
fdivrs
dec
push
outsb
clc
std
aad
adc
pop
imul
lcall
add
jge
dec
fistps
fsub
je
jg
out
add
pop
jmp
push
mov
test
stos
sbb
push
mov
adc
push
outsb
or
std
inc
inc
and
loope
mov
enter
in
out
popa
add
pop
sub
add
test
loopne
jnp
mov
sbb
dec
scas
je
add
and
add
out
fdivrs
pop
call
sbb
popf
addl
rclb
clc
mov
inc
add
and
inc
or
xchg
or
fprem
jg
jle
inc
imul
lock
mov
sbb
push
fcomi
in
das
stc
jns
inc
pop
mov
adc
in
test
xchg
lret
ss
pushf
adc
xchg
mov
scas
lea
das
aad
mov
call
les
rolb
insb
rclb
inc
xor
cmp
es
daa
int3
add
out
rorl
pop
cltd
mov
ds
out
ss
mov
test
test
mov
arpl
dec
push
xchg
mov
pop
add
mov
jne
mov
imul
dec
repz
dec
pop
xor
cwtl
icebp
loope
cmc
sbbl
push
xor
in
push
sbbl
ss
ret
mov
pop
pop
mov
mov
sbb
fwait
sbb
jo
insl
subb
or
clc
aam
jge
mov
test
in
pop
mov
imul
mov
fisttpll
sti
sbb
inc
js
fdiv
or
jg
push
call
jmp
out
clc
jae
andb
pop
cmpsl
daa
clc
loopne
cmp
xchg
jg
mov
mov
ljmp
insl
ror
js
add
sub
push
adc
mov
jo
mov
inc
sarb
xor
inc
xchg
out
sbb
enter
push
mov
adc
fsubr
pop
icebp
mov
andl
mov
mov
pushf
cmpb
push
and
imul
out
incl
add
and
hlt
jl
jmp
jp
imul
loopne
aas
sahf
je
push
pop
jo
adc
ja
cwtl
push
nop
sub
push
shll
cwtl
mov
sbbb
sub
nop
ret
mov
inc
push
jg
pusha
xor
xor
sbb
push
xchg
jbe
fs
pop
pop
addb
push
cs
push
inc
jge
out
loopne
lock
mov
pop
mov
jo
hlt
bound
cmpb
lock
clc
cmp
frstor
push
jge
repz
sub
sub
cmp
jge
movzwl
push
push
cli
or
adc
cmp
lock
testl
sub
loope
sbb
sbb
gs
lea
andb
push
push
push
push
xchg
jle
pop
adc
mov
push
inc
insb
out
xchg
xchg
test
sbb
sbb
adc
je
sar
mov
cltd
std
cmp
jge
cmp
je
or
sub
shufps
je
lds
pusha
adc
adc
pushl
into
xchg
jnp
jns
bound
jmp
xor
and
jne
das
mov
out
je
inc
mov
adc
xchg
sbb
gs
mov
sbb
push
rclb
or
fneni(8087
dec
clc
xor
pop
or
pop
jo
or
add
inc
pop
mov
lea
shrb
lock
push
cld
mov
fists
and
and
sahf
ds
fsubr
jmp
cmpb
adc
dec
dec
into
ja
shrb
loopne
or
cmp
sbb
adc
push
insl
cld
lds
ja
inc
push
jmp
push
jecxz
pop
lock
enter
in
mov
inc
xlat
jbe
and
pop
cmp
push
xor
jae
xchg
cmp
aad
call
cmc
inc
movsl
push
add
imul
out
mov
pop
dec
je
cmpl
je
push
mov
adc
insb
mov
fisubrl
push
imul
mov
sbb
mov
into
sbb
or
inc
cld
pop
std
sbb
add
mov
pushl
pushl
movb
sbb
pop
gs
or
mov
pop
push
adc
xorb
inc
or
mov
adc
sub
and
inc
pushl
mov
cmc
xor
ficomps
and
rcrl
daa
mov
sbb
xor
dec
jne
sbb
out
xlat
xor
ret
push
pop
clc
popf
xchg
call
je
mov
push
xor
ja
cmc
js
addr16
imul
sub
dec
push
or
add
cmp
lea
pushf
sbbl
mov
mov
divb
inc
or
mov
xchg
xor
push
push
call
sub
or
or
push
jg
sbb
in
add
repnz
call
outsb
fdivl
mov
pop
push
sbb
shlb
xor
xchg
sarb
cld
sbb
bound
sbb
popf
fsts
loope
add
imul
je
rorb
sti
add
test
scas
xchg
mov
sbb
sbb
mov
push
jb
popl
in
sbb
call
test
mov
jge
dec
pop
or
in
push
into
push
test
mov
test
push
mov
dec
mov
push
mov
ret
pop
or
cmp
insb
mov
shlb
push
push
mov
adc
nop
add
mov
call
or
bound
mov
int
dec
repz
adc
jbe
lret
sti
jne
mov
jne
add
pop
dec
or
lods
mov
and
fnsave
lret
adc
and
int3
adc
ja
mov
hlt
add
aaa
cmp
dec
mov
je
clc
cmp
cmp
mov
mov
imul
pop
incl
ret
stc
mov
push
shr
shl
add
lea
xorl
adc
ss
fidivrl
pushf
add
adc
dec
pop
mov
rol
jne
push
fcomps
test
mov
sub
cmp
and
sub
sbb
je
les
add
nop
sarb
pusha
lea
cwtl
imul
in
or
push
push
push
xor
in
pusha
pop
pop
enter
daa
xor
sbb
mov
aaa
int
or
adc
xlat
inc
mov
test
mov
rorl
push
adc
jmp
adc
cmp
movsl
xor
pop
leave
int
bound
cmp
js
mov
jnp
xchg
jae
pushf
cmp
jne
mov
test
dec
test
int
je
cltd
pop
pop
or
or
mov
shrl
inc
not
fidivrl
int3
push
push
push
je
inc
jne
mov
mov
sti
push
pop
inc
mov
or
add
sub
imul
cmp
or
imul
xchg
lret
dec
xchg
sbb
adcb
cmp
jg
mov
pop
cld
push
jle
mov
dec
add
inc
or
inc
push
adc
mov
pop
add
add
or
xchg
in
inc
mov
add
inc
adc
addr16
lds
xchg
sahf
andb
cmp
mov
pushf
push
or
rorl
xlat
cmc
xor
addr16
test
add
test
sbbl
subl
cmpsl
jo
testl
lock
icebp
addl
or
or
icebp
cld
out
enter
add
popa
adc
pop
push
jmp
xlat
push
shrb
rcrb
inc
cmp
add
inc
pop
adc
or
test
pushf
push
jnp
add
pop
adc
scas
popa
and
sub
and
jb
jge
add
cmp
cmp
lock
movsb
xchg
sbb
es
test
or
xor
jbe
or
pop
adc
ss
push
das
jbe
cmp
pop
dec
out
mov
in
dec
popa
dec
add
cld
jl
lock
and
js
outsl
cmp
insl
cmc
mov
xchg
push
xor
pop
scas
sub
jecxz
iret
clc
sub
fsubrl
push
sbb
pop
mov
inc
xor
mov
adc
lock
adc
cld
push
push
or
sbb
cmp
adc
inc
pushf
adc
sub
adc
xchg
mov
add
push
sbb
jle
lea
vmovupd
fwait
jl
gs
addr16
cmp
or
mov
or
mov
pop
and
arpl
std
and
xor
shr
add
sbb
jg
inc
dec
jne
pop
pop
hlt
test
scas
loope
not
ret
lahf
add
mov
int3
pop
test
in
clc
jno
sub
inc
or
xorl
out
jne
inc
push
xor
mov
jo
scas
mov
and
pushf
icebp
testl
sbb
add
inc
push
xchg
arpl
push
pop
cmp
pop
js
and
inc
add
sbb
pop
int
xchg
lret
in
into
and
dec
rorb
shrl
rorb
mov
aam
aad
sub
xchg
lret
in
pop
fsubrs
fstps
fisubrl
jb
jg
sbb
pmaxub
loopne
pop
cs
push
loope
loop
jecxz
adc
pop
cs
lret
in
out
out
call
in
mov
in
xor
out
push
in
mov
lock
adc
inc
pop
cs
lret
repz
hlt
aaa
cmc
sbb
mov
mov
push
sti
pop
mov
and
xlat
mov
enter
and
data16
sbb
std
out
inc
cmp
pop
dec
mov
dec
inc
cld
add
hlt
in
push
mov
imul
aas
pop
mov
mov
inc
mov
sbb
idivb
sarb
fistps
int3
aaa
test
call
loope
mov
mov
mov
lea
and
inc
mov
cmp
jo
lahf
jge
mov
jb
fidivrs
mov
insb
sti
outsl
add
and
xchg
inc
orl
and
mov
jne
mov
mov
mov
adc
jne
lret
inc
lods
sub
ja
xor
inc
cmp
cmp
and
adc
je
ficoms
push
push
lock
stos
addb
out
mov
sbb
cmpsl
enter
inc
or
xchg
repnz
pop
jecxz
call
xchg
add
pop
or
jns
adc
out
inc
jg
jns
in
mov
jmp
push
adc
fwait
pop
cmp
xchg
ds
out
jg
pop
mov
getsec
sub
xor
push
xor
mov
insb
push
jne
inc
cmp
push
out
pushf
xchg
push
push
xbegin
push
and
out
or
popa
imul
fadd
cli
test
addr16
jo
mov
in
pop
xor
jnp
or
mov
pop
xchg
mov
pusha
add
cli
sbb
push
mov
and
test
pop
xchg
adcl
dec
adc
add
pop
mov
push
adcl
cwtl
test
loopne
jo
lahf
pop
jge
cltd
push
pop
and
out
rorb
mov
rclb
repnz
push
jbe
cmp
mov
test
repz
rclb
xor
mov
andb
and
mov
es
jne
push
pop
jmp
movsbl
mov
adcl
ret
pop
jbe
push
lods
or
cmc
xchg
push
push
push
int
inc
sub
das
clc
jne
cmpsb
and
jo
adc
mov
add
shll
insl
shll
jns
movl
mov
jno
bound
or
outsb
repz
push
push
add
adc
sbb
movsl
inc
push
xchg
int3
xchg
jle
lods
push
and
fdivs
enter
mov
adc
scas
ss
sbb
pop
mov
popa
jo
jecxz
movsl
push
xlat
add
test
push
lds
xchg
dec
mov
jge
sbb
push
pop
sub
cld
cmc
fbstp
neg
call
and
lret
fisttpl
fistpl
loopne
dec
jmp
lcall
in
jne
jnp
push
cltd
add
cmp
xbegin
hlt
in
ret
jl
fldt
jmp
test
mov
stc
loopne
or
repnz
add
fs
rcrb
or
mov
jns
cld
push
pop
jne
dec
push
sbb
xor
pop
xlat
add
cltd
pop
in
adc
cmp
aas
and
inc
fsubrs
and
xchg
push
lret
loopne
push
aad
push
fistpl
dec
cltd
sbbl
cmp
push
inc
adc
xor
cld
nop
adc
push
in
push
sub
cmpl
push
mov
sbb
cmp
dec
xorl
inc
dec
sbb
adc
lock
pushf
nop
and
and
orl
jmp
or
inc
push
in
clc
mov
lcall
addb
and
sbb
pushf
add
sahf
adc
sbb
dec
loopne
fs
jmp
sub
outsb
leave
adc
icebp
call
cmp
jmp
pop
xchg
pop
or
and
pop
in
or
or
add
or
cwtl
jecxz
push
push
std
push
cmc
sbb
scas
jecxz
icebp
sub
sbb
pop
in
or
or
repz
rorb
xchg
or
cmp
iret
xchg
or
sbb
cld
cmp
adcl
hlt
mov
mov
add
lods
cmpsb
movsl
movsw
xor
decb
mov
stos
stos
mov
mov
or
pop
xor
stos
lea
push
jl
push
xor
push
xlat
cmovle
mov
test
or
pop
incl
mov
jb
and
push
jb
div
mov
add
adc
inc
in
movsb
cs
add
or
adc
das
stc
and
xchg
push
add
lret
or
pusha
push
enter
add
adc
leave
mov
sbb
andb
lret
leave
sub
shll
test
adc
add
add
lods
and
stos
adc
dec
or
push
xchg
ret
or
xor
adc
mov
push
xchg
imul
or
sbb
pop
sub
mov
dec
fbstp
fdivs
adc
int3
nop
xchg
subl
lods
mov
sub
lea
add
pop
idiv
cmp
je
mov
xchg
inc
xchg
push
popf
sar
sti
test
xor
mov
mov
jns
cmc
adc
add
jmp
mov
ljmp
pusha
or
inc
xchg
rorl
out
pusha
mov
repz
pop
repz
int3
cmp
xor
in
jnp
mov
push
cld
out
mov
sbb
out
cmp
xor
cltd
sub
sar
add
mov
lock
mov
push
or
sbb
fs
xchg
dec
xorb
mov
int3
int3
mov
daa
inc
mov
lea
and
mov
xchg
fcoms
rorl
cmp
imul
sbb
les
sbb
movsl
cmp
faddl
jo
mov
sbbb
test
scas
add
xchg
mov
adc
ret
enter
inc
out
shl
fldt
xor
or
ds
loopne
bt
lcall
cmp
movb
xor
test
popa
lock
mov
mov
es
add
pop
das
dec
bound
arpl
cmpsb
cmp
arpl
adc
scas
pop
push
test
push
imul
jle
xchg
cmpb
add
mov
in
xor
xchg
lcall
sbb
testl
movsb
sub
mov
cmpsb
loopne
pop
mov
jb
jg
roll
jle
scas
xor
cmp
test
into
fistl
insl
dec
test
add
faddl
jmp
sbb
ja
pop
xchg
cmp
mov
xchg
jnp
jg
fs
lock
jne
pop
jmp
mov
ret
inc
sub
add
pop
push
jae
insl
and
jmp
call
mov
mov
rclb
mov
jmp
mov
fldcw
sub
adc
les
add
adc
repz
loopne
cli
mov
jl
jmp
adc
cld
ret
xor
cltd
push
jl
jmp
or
mov
pop
cltd
in
adc
lock
or
call
mov
add
dec
les
sub
add
jo
mov
mov
fiadds
adc
sbb
cmpsb
arpl
sub
sub
in
fldz
xor
or
andb
xorl
lods
sub
aam
jbe
push
dec
push
and
or
dec
js
jmp
mov
shll
fnsave
fs
sbb
inc
fdivrp
push
adcl
les
cwtl
daa
rorb
gs
loop
shrb
jg,pn
test
repz
or
add
and
sahf
in
cld
or
mov
movsb
mov
adc
fbstp
sub
out
in
int
jge
add
into
xor
filds
sbb
rcrb
jne
inc
xchg
bound
push
and
xchg
iret
in
fsubrs
leave
add
imul
pop
and
xor
mov
add
movsl
push
and
test
nop
add
sarl
decb
hlt
aam
add
sti
and
xchg
dec
ss
fs
push
jecxz
push
insb
std
insb
lds
mov
ss
mov
add
mov
dec
mov
int
mov
pop
sbb
dec
dec
cmp
iret
les
flds
movsb
add
and
call
or
dec
inc
add
xor
jno
test
aas
and
push
mov
adc
and
stos
jmp
sbb
or
dec
jl
xor
into
pop
jge
imul
jo
shlb
push
push
dec
jae
fsubl
out
movzwl
cltd
mov
sub
idiv
push
xor
adc
in
mov
ret
inc
inc
imul
pop
rcrb
add
push
push
jmp
push
cmp
push
hlt
sar
fcompl
add
ficompl
rolb
mov
push
or
xorb
sub
cmp
loopne
and
hlt
mov
mov
fcompl
mov
adc
outsl
leave
enter
test
jle
iret
jmp
push
and
sarb
stc
shl
adc
dec
pusha
cmp
xorb
lock
cmpsb
cmp
fcomps
fcoml
mov
push
xchg
dec
jl
adc
and
dec
inc
enter
mov
xchg
in
cmp
pusha
mov
shr
and
mov
xor
sub
mov
pop
lahf
push
pop
sbb
enter
test
add
cltd
xchg
les
cmp
mov
xor
mov
in
in
jae
push
shlb
mov
and
lock
add
sub
ret
fcompl
xor
punpcklwd
add
push
mov
inc
inc
outsb
outsl
loopne
and
fdivrs
adc
dec
lock
push
ss
loope
sub
test
add
das
cmpsb
mov
ret
xor
js
call
cltd
idiv
xchg
adc
adc
pop
mov
gs
iret
add
andb
dec
adc
cmp
ret
inc
add
dec
outsb
push
ss
dec
fwait
inc
cmp
in
mov
inc
jae
xor
jmp
test
shl
cli
xchg
nop
xchg
int
cmp
xor
mov
mov
sbb
add
mov
mov
in
push
mov
ja
lea
cmp
jno
adc
call
sub
fnstcw
sub
rorl
mov
sti
jae
dec
sub
cmp
insl
andl
jge
jge
lods
les
jge
ja
cmpl
mov
je
shr
pop
pusha
sbb
inc
mov
adc
cwtl
cwtl
js
fmull
jb
shrl
xchg
mov
cmpsb
mov
pusha
pop
adc
je
mov
inc
std
ljmp
ret
pop
push
in
push
push
xchg
mov
xorl
icebp
mov
ja
pop
mov
addr16
adc
rol
pop
dec
or
add
loopne
jmp
or
adc
adc
addl
cmp
mov
in
lods
aaa
add
call
nop
mov
push
mov
imul
adc
or
fstpl
xor
jb
mov
xor
rcrl
sbb
adc
push
add
test
mov
sbb
gs
mov
jmp
data16
leave
add
xor
inc
xor
fucomp
fldt
pop
push
and
movl
add
mov
sahf
pop
sgdtl
int3
lock
loopne
xchg
sbb
mov
je
fstl
stos
faddl
push
stos
in
insb
or
and
inc
arpl
rcll
test
icebp
aas
mov
roll
leave
jmp
jle
mov
lahf
stc
xor
inc
cmp
jl
ret
stos
mov
bound
xchg
roll
rorb
sbb
mov
mov
or
fbld
pop
pop
or
xchg
add
mov
inc
and
jg
xor
or
push
sub
cld
pop
cltd
idiv
test
inc
clc
jmp
sub
jmp
dec
leave
lea
xor
std
lcall
or
dec
jmp
andb
daa
push
xchg
add
and
jle
adc
je
dec
je
dec
pop
and
js
and
je
insb
fs
daa
cmp
and
sbb
enter
dec
sbbl
loop
inc
loope
or
push
pop
clc
data16
jl
jns
add
push
stos
call
cwtl
cmp
cwtl
add
clc
popa
mov
cmp
inc
jge
push
and
ret
and
mov
mov
cltd
pop
xor
shrl
faddp
popa
mov
add
fcompl
mov
insb
push
int3
pop
hlt
lock
enter
clc
movsb
mov
jmp
enter
aaa
dec
insl
call
ret
and
mov
pusha
pop
inc
add
fwait
push
jo
and
xchg
dec
mov
and
ja
and
jnp
pop
addb
roll
daa
js
and
push
inc
movb
mov
mov
mov
xor
cmpb
push
add
imul
pop
lock
mov
adc
inc
mov
xchg
sbb
aaa
sub
scas
inc
sub
xchg
arpl
shrl
cmp
mov
jns
sub
jg
mov
xchg
cmp
cmp
inc
addl
mov
inc
inc
cs
add
shlb
cmpsl
mull
in
cmp
pop
in
xchg
imul
mov
cltd
adc
pop
mov
stc
call
jo
sbb
out
push
xor
cmp
add
push
jno
ret
cltd
inc
pop
dec
and
sarb
push
xchg
outsb
xchg
jo
fsubs
cmp
xor
loop
or
dec
add
xchg
imul
cwtl
fldl
dec
pusha
pop
mov
outsl
loope
xlat
inc
mov
adc
aaa
lret
in
cmpb
in
add
jo
pop
mov
lcall
push
ret
inc
cmc
int
or
mov
xchg
popa
pusha
pop
clc
xor
cmp
in
leave
pop
sbb
cs
add
adc
xor
in
loopne
sbb
jno
add
repnz
adc
dec
xor
adc
iret
and
and
xchg
lcall
mov
pop
js
je
mov
je
xchg
add
jle
mov
jo
rorl
ja
jmp
add
lods
sub
push
xor
mov
loopne
sar
push
push
sbb
mov
mov
outsl
les
jo
popf
lea
inc
daa
lret
cwtl
aaa
mov
mov
jl
loop
movsb
mov
dec
outsl
lea
push
mov
sbb
push
pop
mov
hlt
sahf
ljmp
cmpl
push
xor
add
dec
dec
xor
xchg
jecxz
mov
jecxz
or
fsubrs
push
and
xchg
jg
push
cmp
inc
pop
jb
lea
pop
pop
jmp
xor
testb
push
std
push
ds
rcrl
fs
add
xor
push
cmp
fidivrs
mov
jb
or
xchg
pop
xor
inc
push
loope
daa
mov
sbb
adc
cmp
in
int
pop
dec
mov
pop
sbb
push
jecxz
xchg
xchg
jle
sbb
call
jno
pop
sbb
imul
cmpw
jne
pop
sub
das
inc
push
rolb
jl
lea
ret
xchg
js
mov
push
lea
fistpl
test
sbb
fcomp
push
mov
or
xor
adc
mov
push
ret
fldt
lea
and
jbe
mov
jne
insl
les
addl
sar
cmp
les
das
insl
cmp
and
sbb
lods
cmp
mov
push
xchg
inc
mov
fs
inc
xor
or
mov
out
int3
cltd
mov
adc
pop
xor
clc
movb
arpl
dec
int
pop
mov
push
or
jns
sub
std
jg
rcrl
out
inc
xchg
shrb
jo
iret
push
in
ss
shrb
mov
mov
enter
and
inc
aad
imul
out
aam
int3
in
popf
xchg
cmp
cmp
and
out
hlt
push
xchg
lret
mov
sbb
loope
cmp
in
pop
leave
hlt
push
enter
insl
je
or
loope
xchg
add
inc
cmp
jae
jmp
pop
outsb
in
jl
push
pop
adc
je
and
push
xor
mov
les
call
fld
jg
inc
mov
xlat
or
adc
ss
outsl
sti
cmp
inc
sbb
lahf
test
xor
add
push
mov
inc
mov
adc
out
pop
mov
pop
lds
push
dec
pop
bound
or
mov
pop
inc
mov
out
dec
movsl
sarb
inc
hlt
jae
xorl
out
js
ret
dec
ret
push
call
cld
and
cmp
jne
jecxz
cmpsl
xor
fs
xlat
mov
mov
clc
ljmp
sbb
push
xlat
xchg
adc
xchg
aad
xlat
xor
xlat
mov
push
mov
add
cmp
xor
andb
inc
call
ret
add
add
movq
xor
mov
xor
std
inc
add
or
inc
cmpb
adc
mov
jge
mov
add
or
popf
pop
out
xchg
sbb
sbb
dec
fsubl
add
or
pop
and
push
pushl
mov
mov
les
out
lret
mov
sub
push
sbb
adc
das
and
adc
call
adc
inc
pop
test
sub
mov
or
jg
pop
push
adc
sahf
jo
push
call
lret
mov
adc
pop
mov
jge
je
mov
test
mov
adc
mov
cmp
out
mov
jbe
cmp
inc
jns
jb
arpl
pop
or
jecxz
push
jge
aas
sbb
sbb
jl
stos
mov
cmp
pop
jbe
popa
xchg
das
iret
aad
rolb
jge
or
adc
add
pop
cmp
xchg
push
aas
lahf
dec
or
idivl
inc
pop
ret
aas
fs
mov
jmp
cmp
and
dec
push
loopne
sbb
je
dec
out
mov
inc
cs
mov
aad
bound
push
sbb
insl
out
pop
pop
hlt
add
lock
mov
mov
je
rcrl
mov
push
adcl
cmp
push
aaa
pushw
mov
add
or
orl
and
cmp
test
pop
rep
repnz
mov
jb
stos
cmp
push
outsl
je
imul
inc
or
rorb
dec
jbe
jg
test
dec
jp
cmp
inc
jmp
dec
push
cmp
aaa
iret
push
sbb
jp
nop
jb
and
sub
in
lock
jno
mov
add
sbb
push
jecxz
and
push
fimuls
lds
and
nop
sahf
pop
addr16
xchg
add
je
mov
test
jo
or
lods
pop
dec
or
insb
pop
push
rcrb
loop
inc
fisubrl
loopne
stos
fnstsw
push
popf
enter
inc
pop
pop
lea
sbb
jge
stc
clc
test
adc
subl
cmp
pop
dec
stos
pushf
add
cmp
shll
addr16
add
icebp
int3
and
jg
push
cld
test
jbe
lea
add
cmp
jb
mov
jg
jne
cmp
jae
mov
xor
push
push
lea
out
adc
sbb
mov
or
push
ss
imul
xor
adcl
push
mov
cld
and
adc
sarb
into
lds
sbb
inc
mov
push
cld
insl
or
dec
lea
lret
dec
cmp
pop
xor
les
std
add
sub
jmp
xchg
mov
mov
jne
outsb
movsb
adc
mov
pop
jbe
clc
add
jo
push
pusha
xchg
or
pop
pcmpeqb
mov
sub
lods
dec
cmp
lcall
aam
xor
pop
or
push
inc
mov
jb
inc
mov
ret
or
jmp
mov
add
inc
push
adc
ficompl
mov
dec
xor
pop
cmp
add
jae
cwtl
fwait
imul
and
cltd
push
mov
adc
dec
dec
pop
or
inc
cmp
js
mov
mov
push
stos
mov
xchg
jno
and
adc
pop
jb
mov
outsl
cmp
push
cmp
mov
cli
and
inc
push
enter
not
sbb
xlat
xchg
pop
imul
push
mov
mov
scas
lods
add
or
mov
push
arpl
leave
lods
xor
inc
adc
shrb
pop
inc
xchg
repz
mov
shlb
or
pop
jns
pop
mov
jno
fsubr
cmp
aam
jle
enter
daa
lock
daa
in
jl
push
loopne
jne
mov
add
push
jmp
jbe
mov
icebp
je
fdivs
daa
es
push
xor
or
lahf
jne
testl
sbb
std
push
sub
xor
jbe
lea
out
push
jl
or
cmp
cltd
lock
and
fistl
cmpb
mov
in
je
or
add
adc
mov
sub
xor
mov
popf
mov
lcall
lcall
xor
and
xor
imulb
cld
dec
add
adc
test
sub
pop
ds
jae
sti
das
pop
addr16
ss
mov
decl
inc
mov
aam
pop
jb
mov
push
mov
and
dec
out
add
add
fstl
pop
cmpsl
cmp
jbe
pusha
fiaddl
jg
xor
jne
sbb
cmp
mov
filds
dec
dec
out
je,pn
and
xchg
jecxz,pn
push
mov
je
and
andb
mov
les
repnz
shrb
mov
jmp
call
push
push
outsl
das
push
test
stos
jg
pusha
orb
fstpl
mov
adc
mov
jo
mov
pop
pop
cmp
push
push
roll
and
pop
sahf
mov
mov
adc
push
out
push
popa
dec
pop
inc
jns
sbb
jne
jne
and
addr16
jne
push
jne
inc
inc
test
jne
inc
mov
xchg
adc
sub
pop
xchg
add
fldt
loopne
dec
loopne
mov
or
jne
in
les
adc
dec
ret
add
cmp
jne
or
add
mov
je
idivb
xchg
mov
imul
outsl
add
push
jne
dec
lods
out
ja
lods
imul
sbb
das
js
xchg
or
add
sub
adc
in
and
sbb
je
adcb
cmpsb
or
popf
mov
inc
sub
je
fcmovbe
push
sbb
call
pop
mov
cmp
dec
add
hlt
inc
dec
inc
sbb
and
pop
shlb
js
mov
lea
insb
jecxz
out
push
xchg
xchg
lret
decl
lahf
jns
sbb
popf
cmp
mov
repnz
fisttps
ja
xchg
add
jecxz
cmp
sub
movsb
pop
pop
mov
or
comiss
ja
mov
add
or
repnz
sub
push
rcrb
jns
jl
sbb
xchg
inc
inc
sub
ja
pop
adc
jo
push
cmp
imul
adc
sub
add
pop
dec
inc
ja
sub
lds
lret
loope
jno
ja
sub
or
lret
adc
jl
adc
in
jo
dec
push
pop
pop
jbe
push
loopne
sbb
and
jmp
and
and
loope
sbb
add
xchg
cld
dec
out
js
push
jnp
out
icebp
cld
and
jbe
or
jb
les
leave
or
cmp
jmp
stos
mull
xchg
mov
mov
orb
mov
mov
les
fistpl
hlt
push
loope
and
inc
mov
cmp
stos
xchg
test
and
nop
lods
mov
jecxz
xor
add
dec
jns
pusha
or
adc
iret
js
pop
sbb
imul
rolb
movsb
sbb
add
inc
sub
fwait
ret
push
cli
and
and
addb
jo
test
or
outsb
sub
and
jge
in
push
sbb
or
data16
fmull
xchg
or
stos
push
js
jmp
cmp
xor
xchg
pop
jne
imul
decl
cmp
pop
jne
movb
xor
das
push
inc
jnp
jle
cmp
pop
aad
test
les
push
cmc
fdivs
jl
subps
xor
sbb
sbb
addl
je
jmp
test
add
out
cmpsb
test
call
push
fstpl
movsb
sbb
insl
ficoml
push
push
orl
or
movsl
vminps
es
mov
pop
pop
mov
jge
push
push
fiadds
hlt
inc
imul
sbb
mov
in
hlt
inc
cld
arpl
jp
je
sbb
jge
fists
push
mov
dec
inc
cmp
dec
cmpsb
adc
enter
jg
pop
inc
adc
add
pop
hlt
in
subl
icebp
push
pop
mov
xchg
in
arpl
mov
iret
test
addr16
in
jo
test
sbb
add
mov
xor
and
cmp
add
cld
outsl
fincstp
icebp
cmp
ja
cwtl
adc
movb
jge
push
aam
mov
in
or
and
daa
outsl
orb
and
fldenv
or
add
xchg
hlt
pop
jmp
fsubrl
test
andl
push
mov
fnsave
adc
cmpl
fisubrl
add
unpckhps
js
xor
jne
add
jnp
roll
std
push
cli
xor
or
sti
test
sub
shld
sub
test
dec
dec
pop
aad
lahf
jmp
mov
cmpsb
lods
loopne
popa
divl
shr
push
add
jb
test
mov
adc
pop
xchg
jge
xchg
mov
add
insl
push
mov
lea
or
call
cmp
adc
push
mov
in
push
xchg
add
and
inc
das
loopne
and
arpl
adc
fbstp
rcl
cmc
fcomp
subb
clc
cmp
jno
shrb
mov
dec
fistpl
dec
jle
push
jnp
cmp
enter
push
lods
loope
pusha
jge
sub
push
lods
rcr
dec
xor
and
mov
in
pop
or
scas
loopne
into
daa
mov
adc
sub
sbb
push
movsl
vmovupd
or
gs
adc
push
dec
push
xchg
cmp
add
test
rorl
iret
mov
mov
das
inc
jne
mov
mov
add
mov
sbb
insb
and
mov
inc
push
push
lock
push
or
sbb
adc
mov
jecxz
push
xor
lret
pop
push
mov
movsb
movsl
pop
dec
and
or
orl
mov
mov
lock
jne
fsqrt
test
ja
or
jb
inc
push
femms
add
sub
pushf
ret
jb
pusha
subl
dec
dec
add
xchg
fwait
push
cltd
xor
dec
and
adc
lahf
ror
fmull
and
and
arpl
dec
pop
sbb
add
sbb
and
sbb
push
repz
sbb
xchg
jecxz
enter
out
push
mov
ret
sbb
lea
push
lea
xchg
jo
test
sbb
cmp
add
cmp
test
in
add
addl
jne
mov
popa
les
cmpsl
aas
or
xor
out
aaa
pop
das
mov
mov
push
movups
les
je
push
cmp
pop
jmp
jle
cmp
jle
or
adc
test
xchg
arpl
push
push
test
push
cmp
cmpsb
add
daa
add
inc
xchg
or
fisttpl
aam
and
sub
popa
lahf
xchg
das
outsl
and
cmpb
int
push
inc
xchg
or
imul
sbb
mov
movsb
mov
xchg
mov
je
or
je
add
jne
add
mov
pop
rolb
clc
ja
imul
adc
sub
push
jl
push
rclb
push
sub
add
ljmp
jecxz
lds
jb
sub
fwait
xor
xlat
insl
mov
add
fdivs
int3
insl
fs
sub
xchg
cwtl
dec
fisttpl
jmp
push
add
loopne
and
mov
mov
push
or
mov
pop
jl
mov
cmp
add
xchg
shl
popa
dec
pop
fldl
push
adc
int
cmc
shl
gs
xor
add
jmp
xchg
mov
sbb
xor
sub
data16
mov
ja
push
or
test
test
sbb
enter
or
inc
les
aaa
test
add
mov
outsl
mov
shl
and
inc
call
mov
jne
or
push
lock
add
dec
loope
fbstp
push
push
inc
inc
sbb
push
pop
mov
lods
orl
popa
add
lret
jb
inc
cltd
inc
idiv
cmovno
sub
clc
inc
jae
lods
mov
neg
or
in
popa
mov
cs
adc
dec
clc
jne
adc
dec
xor
xor
movl
loopne
dec
inc
movsl
add
push
dec
mov
cmpsl
push
cld
mov
pop
xor
ja
push
mov
push
dec
push
andl
enter
add
pushf
rolb
incl
inc
aam
test
mov
push
imull
in
shrb
pop
call
ja
adc
loopne
xor
scas
insb
jle
add
lock
data16
xor
dec
inc
orb
fs
cltd
popf
mov
sbb
cmp
cwtl
dec
add
negb
pop
sbb
iret
jnp
sub
xor
cs
inc
and
sahf
imull
sbb
movsb
adc
add
or
or
add
mov
test
mov
add
dec
aas
shr
adc
adc
dec
pop
in
aad
sahf
mov
lock
in
in
xchg
add
leave
enter
xor
subb
xchg
xchg
xchg
fnstcw
sbb
xor
jae
xchg
pop
cwtl
cmp
sbbl
subl
xor
cwtl
orl
scas
repnz
fs
mov
pushf
loopne
lret
pop
fidivs
int3
shlb
and
sbb
cltd
popa
mov
jmp
push
adc
xchg
or
mov
out
in
fs
rcl
loopne
cltd
loopne
clc
lock
xchg
in
repnz
adc
mov
and
xlat
clc
push
push
xorb
and
dec
or
jae
add
mov
mov
fs
mov
adcb
xchg
mov
adc
or
mov
cmpb
mov
and
aaa
in
pop
add
xchg
sub
mov
shll
mov
in
xchg
xchg
xor
xchg
xchg
xchg
xchg
mov
pop
enter
dec
insb
je
jl
xchg
fxch
and
sbb
xchg
dec
addr16
les
inc
nop
cmp
repnz
xor
pushf
and
or
rcrl
pop
or
test
mov
movsl
add
xor
leave
in
fs
in
cmp
xchg
xchg
out
lock
xchg
xchg
movsb
adc
andl
loopne
dec
in
xor
enter
roll
test
inc
push
inc
pop
mov
fxch
andb
push
data16
jo
test
pop
shrb
inc
mov
dec
mov
fs
jo
sbb
enter
insb
movsb
dec
fdivs
and
call
in
pop
fmul
call
cld
hlt
mov
pop
add
out
mulb
call
stc
add
in
fsub
repnz
xchg
xchg
movsb
aad
pop
leave
insb
fs
mov
xchg
xchg
fxch
shlb
xchg
xchg
xchg
inc
lea
imul
xorl
imul
stos
jp
js
mov
nop
fsubs
pop
sbbl
sub
and
mov
and
or
sub
pushf
int3
sbb
or
insb
and
stos
inc
shrb
mov
xchg
xchg
xchg
mov
faddl
xchg
xchg
mov
push
sbb
or
inc
addr16
mov
xor
fs
and
lret
outsb
push
xorb
in
dec
pop
sub
cmpsl
add
push
add
in
xchg
hlt
pop
sub
sbb
sbb
cmp
cld
je
mov
mov
sbb
xchg
fwait
xor
sub
sub
cmpl
repnz
dec
mov
sbb
dec
inc
dec
inc
nop
test
cwtl
xchg
and
inc
aam
test
addb
rcrb
mov
pushf
in
cmp
sbb
xchg
xchg
aaa
loopne
mov
adc
leave
leave
enter
sbb
adc
inc
cmp
adcl
repnz
mov
insb
push
xchg
dec
inc
cmp
sbb
and
cmpl
je
adc
mov
cmpsl
sbb
sahf
inc
data16
mov
lods
in
test
jb
pmulhuw
and
push
int3
mov
addr16
xchg
inc
call
jb
mov
pop
xchg
xchg
jl
add
mov
mov
sbbb
cmp
xchg
xchg
and
dec
enter
loop
andb
aam
pop
jo
xlat
jbe
or
enter
push
add
nop
pushf
enter
iret
pushf
je
jo
daa
sub
insb
dec
pop
pop
jle
iret
test
xor
loop
leave
sub
push
cmp
outsb
leave
pop
add
in
std
and
enterw
adc
adc
xchg
pop
xor
loopne
sbb
xchg
or
cld
and
in
subl
lea
mov
sub
cs
xor
dec
nop
dec
push
cmp
pusha
leave
and
inc
dec
xor
push
jb
dec
push
or
xchg
pop
xchg
push
pop
sbbl
inc
leave
and
jb
push
pop
xor
dec
xor
mov
jne
add
out
pop
adc
popf
or
mov
mov
and
xchg
in
sbb
lock
mov
pusha
mov
adc
cs
xor
sub
lock
mov
push
and
push
mov
add
aam
nop
cmpsb
push
adc
jecxz
popa
movsb
out
push
nop
cmpsl
inc
push
unpckhps
adc
sar
jne
xor
jmp
inc
push
aam
sbb
push
stos
cmp
sub
push
int
xor
mov
jbe
sarl
or
jmp
xor
imul
aam
dec
std
mov
inc
mov
mov
inc
inc
cmp
jl
push
xchg
mov
mov
loopne
cld
push
jmp
lsl
or
pop
mov
lea
mov
push
shl
mov
test
fidivrs
inc
cmp
inc
inc
adc
movsb
jns
xorl
xor
and
enter
or
add
inc
out
mov
insb
pop
loopne
pushf
mov
out
sub
pop
test
xchg
mov
fsubl
jmp
add
movsbl
sbb
xor
adc
push
inc
push
out
fnstcw
in
pusha
sahf
and
outsb
adc
out
insb
push
and
jmp
mov
and
pop
in
mov
sbbl
jbe
push
push
mov
push
mov
shrb
sub
xchg
in
lock
das
mov
lock
pop
mov
adc
test
mov
fistpll
push
rcr
movsbl
pop
das
arpl
adc
pop
or
pop
xor
mov
add
push
clc
push
xchg
jo
pop
orl
xchg
mov
out
inc
mov
xchg
cmp
in
xchg
mov
pop
xor
cltd
sbb
mov
jo
repz
in
adcb
enter
add
push
pop
dec
lcall
xor
dec
pusha
sbb
mov
popf
fndisi(8087
loop
fmull
mov
jmp
jl
cld
pushf
xchg
stc
push
mov
rorl
inc
es
movsb
fistpl
and
dec
loopne
or
or
xlat
or
mov
lods
mov
addr16
and
rcrb
add
setne
popa
lods
lods
jo
and
dec
loopne
lea
cmp
jb
imul
lahf
in
pop
xchg
rolb
adc
dec
xchg
xchg
push
jb
push
repnz
notl
test
enter
inc
dec
fimuls
test
push
sub
pusha
cmp
jge
push
pop
sbb
jmp
das
push
ja
jne
mov
jne
jns
push
cmpsl
mov
pop
dec
movsl
xor
push
je
or
jb
in
xchg
and
push
xchg
lret
dec
scas
sub
inc
daa
cmp
leave
lds
cmp
das
mov
adc
je
das
add
addb
pushf
mov
loope
lock
je
add
js
mov
roll
xchg
jne
jb
stos
setg
jp
push
andb
pop
and
pop
dec
loopne
mov
push
mov
addr16
cmpsb
push
xor
xchg
push
out
and
xor
pop
in
pop
stos
addl
jo
iret
inc
inc
push
xlat
mov
cmp
jge
divb
sarb
mov
inc
out
lcall
push
mov
cmp
je
or
add
enter
cmp
xor
push
cmp
cmc
dec
cmpb
jne
cmpb
add
cmp
cmovae
movl
pop
push
pop
je
inc
add
fists
add
loope
rclb
jle
rep
lea
jl
jmp
in
push
mov
cmp
mov
push
jg
pop
inc
mov
mov
dec
cmp
loopne
daa
loop
in
in
aas
inc
jecxz
inc
test
or
popa
pop
jl
cmp
jg
sarl
pop
xchg
aad
ret
adc
adc
adc
dec
mov
add
or
push
sub
into
sbb
loop
push
dec
mov
cmp
xchg
popf
xchg
out
out
cld
ret
or
or
pop
or
push
mov
fstps
push
hlt
mov
inc
sub
arpl
mov
add
cmp
jge
xchg
lea
mov
insb
pusha
cltd
rclb
outsl
mov
cltd
arpl
lock
mov
dec
jmp
mov
adc
dec
mov
mov
xchg
add
loopne
jge
adc
loopne
pop
push
jg
mov
cmp
jg
or
jne
inc
push
dec
lea
xor
jb
cmp
je
and
cmpsl
xchg
pop
fs
adc
and
js
xchg
enter
sub
clc
inc
imul
call
nop
in
cmp
adc
aaa
or
js
xor
cmp
je
mov
mov
aad
addb
scas
mov
jae
lock
inc
lahf
std
push
sub
enter
pop
repnz
lock
int
jb
inc
das
add
arpl
and
into
in
mov
and
xorb
inc
sbb
jg
inc
push
and
test
inc
dec
adc
sub
scas
lock
mov
fists
pop
jl
ret
inc
fs
pop
push
insl
mov
ljmp
mov
pop
sub
mov
push
pop
lods
push
xchg
ffree
add
sti
xor
or
fsubrl
movsl
sub
jl
loopne
dec
stc
jbe
nop
cwtl
pop
jne
fcompl
fidivl
and
sti
xchg
mov
jecxz
add
addb
mov
std
adc
adcl
mov
test
je
movsb
pop
in
push
pusha
out
insb
in
fs
or
and
mov
lret
cmp
lods
mov
jbe
movsb
fstl
js
int3
push
lea
xor
xchg
jl
pusha
pushf
in
cld
mov
push
jns
jge
mov
adc
push
mov
js
loopne
jo
inc
aam
lods
dec
and
lods
or
mov
dec
mov
sbbb
add
pusha
xor
jne
cltd
xchg
cmpsb
insl
negl
pop
in
mov
push
dec
dec
push
rcrb
sbbb
dec
push
jbe
and
mov
lret
mov
sub
pop
or
popa
shlb
sbb
repnz
ds
faddl
ret
enter
push
andl
test
add
xorb
arpl
xor
outsb
rclb
cmp
fisubs
imul
adc
mov
lods
jo
loope
pushl
and
xor
sbb
cmc
xor
call
push
xor
in
push
outsb
stos
fmuls
sbb
hlt
sti
dec
rcrb
push
cmp
cld
push
call
incl
add
push
push
ss
lock
jne
jl
aam
pop
ret
jmp
aad
or
fs
int3
and
cld
add
xlat
push
insl
xchg
data16
dec
cmp
or
leave
mov
sbb
fsubs
rorb
mov
loopne
inc
pop
lret
je
xchg
push
dec
inc
scas
in
xor
xchg
or
shl
rorb
fidivl
test
rcl
mov
aam
jo
repz
lock
fidivrl
push
sbb
imul
shll
rcr
add
mov
mov
js
sbb
es
and
movsb
jmp
dec
enter
xor
mov
cld
jmp
jns
inc
dec
mov
push
ljmp
pop
shlb
divb
mov
add
sbb
in
mov
xchg
push
adc
fwait
dec
testb
push
jne
pusha
pusha
mov
aas
pop
lret
inc
mov
fsubs
xor
je
mov
cmp
mov
outsl
test
xlat
cmpsb
in
inc
movsl
sbb
sbb
std
cmpb
add
jmp
jl
push
clc
scas
shl
pushl
ss
in
jb
sbbb
cmp
inc
imul
fwait
xchg
push
jmp
push
sbb
cmp
ja
negl
pop
add
sarb
cmp
inc
or
or
fsubl
sbb
jbe
and
dec
add
sbb
push
xlat
jne
sbb
push
xor
cmp
mov
loopne
aas
dec
into
jle
ficoms
push
sub
add
jle
or
xchg
and
es
sti
mov
xchg
jmp
sbb
inc
cmp
cwtl
pop
mov
and
push
or
add
push
mov
pop
sahf
hlt
rorl
movsb
cmp
mov
sti
and
je
mov
enter
cmp
add
adc
and
adc
out
sahf
shl
mov
and
cmp
adc
sbb
add
mov
cld
fidivs
sbb
in
pop
les
loopne
daa
jge
adc
out
push
pushf
push
insl
je
jle
mov
push
cmp
ja
movzbl
and
and
sti
mov
fwait
bound
int3
or
fwait
stc
repz
test
push
pop
sbb
adc
lahf
mov
cwtl
add
aaa
in
and
dec
imul
dec
enter
lret
roll
out
xor
shr
mov
fcomp
mov
pop
and
imul
or
add
add
sbb
or
or
lods
inc
lods
dec
push
nop
cld
nop
lock
lret
sbb
push
filds
jno,pn
je
pop
xor
pop
dec
cmpsb
cmp
notl
cmp
and
xor
pop
mov
or
gs
fidivs
cmp
and
adcl
mov
insb
mov
dec
mov
cmp
xor
shrb
popa
adc
ss
stos
roll
jne,pt
fisttpl
pop
inc
add
mov
jl
push
add
adc
mov
lock
jmp
xchg
shrb
dec
pop
stos
test
push
hlt
das
jmp
pop
push
push
shlb
push
jo
mov
cmpl
adc
adcl
pop
mov
jp
loopne
cmp
inc
xchg
mov
sbb
push
dec
cltd
lea
dec
jne
arpl
mov
imul
and
xor
movsb
jo
and
or
ds
std
les
mov
jg
mov
ljmp
inc
mov
decl
aas
mov
jne
orb
or
fcompl
loopne
pop
jno
pushl
fbstp
pop
pop
add
inc
ja
mov
adc
add
scas
and
sub
pop
jg
cli
ret
adc
mov
fnstenv
inc
and
hlt
cmp
dec
adc
cld
dec
or
or
loope
sbb
or
lahf
cmp
mov
cmp
push
js
inc
dec
add
testb
clc
clc
lea
jae
push
push
xor
pop
mov
gs
add
adc
inc
mov
push
adc
add
and
test
cld
cmp
sbb
stos
cmp
mulb
ret
nop
dec
in
jge
stc
cmp
xor
lock
std
mov
dec
inc
mov
ja
jmp
test
daa
jnp
jb
or
jo
jbe
mov
insl
ja
fnstcw
mov
fucompp
cmp
jns
jge
shrl
mov
sub
cmp
and
rcll
push
sbb
push
push
push
inc
aas
movsl
sete
dec
scas
cmc
push
cmp
xor
sub
je
xchg
jne
loope
cmp
add
adc
pop
pop
xchg
sbb
je
add
add
repnz
mov
enter
inc
movsl
xor
iret
mov
cmp
inc
inc
mov
mov
sbb
and
jge
push
pop
add
sti
adc
and
adc
arpl
cmp
fcoml
push
adc
cmp
add
rcrl
sbb
lea
mov
ret
and
push
add
subb
cmp
dec
add
lea
jle
or
sub
jb
jo
popa
lock
pusha
rorb
or
sbb
add
sub
adc
mov
jle
or
mov
xor
mov
mov
dec
aaa
dec
push
sbb
push
and
mov
movsl
insb
and
and
sbbb
push
leave
and
movsb
xor
inc
leave
and
aam
in
leave
and
hlt
cmp
mov
and
mov
jb
mov
enter
inc
sub
push
pop
dec
xchg
push
push
insb
or
rclb
mov
pop
orb
or
dec
rcrb
sbb
pusha
push
jge
and
sbb
sarb
mov
test
test
push
or
or
adc
nop
jae
je
cmp
aam
insl
leave
loopne
xor
inc
jno
ret
jnp
and
mov
popa
fcoms
jbe
adc
pushl
xchg
andb
mov
mov
or
sub
popa
jg
adc
ret
jmp
stc
mov
sbbl
and
pop
xor
cmpsl
or
lret
add
pop
pop
enter
scas
add
xchg
sbb
sub
rcr
mov
pop
or
xchg
clc
jnp
pop
je
lock
xchg
pop
inc
or
je
xor
clc
xor
clc
stos
and
es
ss
xchg
pop
fwait
adc
dec
sbb
adc
seta
sub
dec
shll
push
sbb
ret
jle
sub
ja
push
or
je
neg
in
daa
sub
dec
adcl
iret
iret
out
aaa
lahf
bound
or
push
aaa
arpl
std
fisubrs
pop
je
or
out
ds
shlb
pushf
mov
dec
cmpsb
in
mov
dec
add
cmp
out
xchg
imul
or
or
int3
clc
mov
shrb
ja
insb
ficoml
pop
cld
ja
or
mov
loopne
sub
movsb
iret
lea
mov
cmpsb
cmpsb
mov
lea
stos
add
inc
lret
push
andb
aam
addb
lock
and
push
push
and
pop
push
lods
add
push
push
movl
jge
mov
jne
jo
add
aam
negl
arpl
int3
xchg
jbe
sub
xchg
and
call
pop
pop
out
fs
aad
and
mov
sub
mov
dec
xor
jmp
hlt
xchg
stos
mov
je
fistl
cmpsl
sub
loopne
fdivl
push
shlb
rcll
out
fistpl
ret
or
push
mov
add
in
mov
mov
cmp
rol
arpl
add
add
dec
cmc
push
sub
push
sbb
cmp
push
xor
pop
mov
push
div
fisubrs
sbb
sub
mov
icebp
loope
daa
mov
imul
push
jp
sbb
lahf
adc
fadds
popa
push
xor
mov
xor
les
in
ja
adc
jb
cmpsl
add
lcall
je
loopne
test
stos
iret
test
xchg
push
notl
jbe
xor
dec
xchg
sub
sti
mov
pop
add
or
sbbb
add
or
push
test
jne
and
pop
xor
cmp
pop
shlb
fstpt
xor
sub
add
rolb
push
fisubrs
sub
cmp
adc
dec
imul
xor
int3
lods
add
test
arpl
mov
adc
pop
jb
adcl
imul
mov
pop
fcoml
xor
lcall
push
fs
or
pop
call
insl
sbb
jne
or
mov
int
enter
ja
pop
hlt
dec
or
shlb
jo
les
pop
or
call
mov
outsb
ret
je
cmp
jne
mov
xor
mov
lods
fildll
pop
in
mov
insl
add
lcall
adc
push
dec
loope
in
in
jb
mov
test
loope
das
mov
or
ja
lcall
add
push
ret
lea
ss
inc
pop
lods
repz
mov
add
sbb
cltd
xchg
rorb
push
inc
xchg
rclb
inc
push
push
push
addl
push
test
cmp
mov
call
test
lock
test
and
push
and
sub
das
mov
imul
and
cmp
adcl
fwait
or
dec
dec
hlt
jo
mov
fs
mov
xor
shlb
addr16
pop
jne
mov
xlat
loopne
add
xchg
aaa
cli
pushl
or
mov
movsb
sbb
adcl
call
mov
inc
in
add
divb
daa
in
cmp
cmp
clc
stos
movsb
xor
add
insb
add
sti
push
and
mov
xchg
sub
cmc
jp
xchg
inc
jbe
mov
es
push
adc
shll
das
inc
lods
lods
test
xchg
hlt
and
test
loopne
clc
jle
jle
repz
dec
mov
mov
pop
add
sbb
test
loopne
add
lret
xchg
ret
mov
sub
push
arpl
adc
cmpsb
inc
mov
dec
es
mov
mov
cmp
inc
mov
xor
xchg
cld
lret
sarl
out
xor
and
xchg
in
std
fcomps
sarl
in
push
sub
nop
popa
pop
push
cli
sbb
sub
popf
jne
lret
or
push
fcoml
xor
dec
rcrb
mov
dec
push
mov
mov
push
lds
xor
rorb
pusha
sbb
mov
adc
cmp
jno
dec
pop
jo
iret
push
adc
pop
mov
shll
add
inc
ds
and
in
fwait
inc
leave
sub
std
push
mov
push
inc
jmp
popf
stos
js
jno
test
je
xor
pop
mov
loopne
xor
pop
push
mov
dec
push
dec
rcrl
mov
mov
shlb
push
cmp
insl
or
decb
pop
and
iret
sti
std
push
movd
or
jl
and
or
addl
pushf
xor
sbb
enter
ret
inc
shlb
mov
and
pop
clc
leave
je
call
xor
pop
jne
pop
outsl
cld
sub
arpl
sub
inc
fisubs
sbb
popf
insb
jmp
je
orb
and
outsb
je
icebp
xor
fs
jmp
push
fmuls
sarb
cmp
pop
add
in
sbb
sbb
rcll
std
sub
xor
mov
mov
adc
sbb
adc
push
cmp
fwait
not
jbe,pt
pop
add
movsl
mov
cmp
push
cmpsl
js
shrb
push
jge
sub
inc
push
push
cltd
filds
in
fisubl
in
movzbl
push
push
cmp
in
mov
push
or
lock
pop
pop
mov
lds
int
xchg
arpl
mov
push
shr
sti
jmp
std
mov
neg
lea
add
inc
inc
dec
jne
pop
jmp
and
adc
jle
test
pop
je
xchg
or
jg
outsl
add
jmp
rol
or
jno
sahf
lahf
mov
jnp
xor
int
stos
loopne
in
lea
sub
sahf
idivl
jne
mov
mov
mov
add
cmc
and
dec
mov
aas
jns
in
loopne
add
dec
mov
pop
mov
rorb
or
or
xor
mov
in
push
popa
repz
push
sub
aam
mov
and
pop
fadds
mov
xor
sar
mov
ror
or
cmpsb
dec
add
sbb
lahf
loopne
add
call
fadds
ja
sti
mov
jge
jge
or
ljmp
push
jae
xchg
mulps
cld
inc
push
push
sarb
mov
mov
push
adc
pop
mov
aad
adc
adc
xchg
push
mov
sub
aam
add
or
in
push
push
int3
xor
lock
mov
call
adc
ror
cmp
and
pop
loopne
jnp
xchg
dec
inc
dec
or
daa
jns
pop
out
ss
sub
incl
cmp
adc
loope
cmc
adc
push
or
mov
shrb
xchg
dec
outsl
xchg
inc
shlb
bound
scas
xchg
jge
jle
and
sub
xor
push
push
or
push
push
pop
jnp
xchg
cmc
pop
cmp
decb
mov
xchg
lods
sub
jne
test
sbb
mov
in
movl
or
push
loopne
clc
sbb
bound
insl
add
xor
push
andl
jnp
shrb
clc
add
sbbb
std
cmc
lock
dec
sbbb
pop
cmpsb
push
test
adc
xchg
dec
repz
fsub
pop
ret
aam
mov
sbb
je
dec
sub
pop
jb
orb
inc
cwtl
or
stos
push
push
outsb
ljmp
int3
fiadds
sub
pushf
mov
xchg
in
or
shrb
fildl
loopne
push
jne
dec
test
cmp
je
fdivl
or
xchg
cmp
clc
mov
loope
cs
push
rorb
dec
or
or
ss
adcb
adc
jmp
jbe
rcrb
and
dec
daa
sub
mov
and
cwtl
sbb
push
imul
test
scas
or
icebp
test
cmp
inc
fdivs
push
orb
gs
push
push
or
mov
mov
pop
adc
lods
movsb
adc
xor
cmp
testl
push
cmp
mov
xchg
loope
pushf
outsb
adc
jns
fisubrs
insb
push
pop
das
fwait
push
lea
inc
cmp
cwtl
jge
push
or
mov
mov
scas
sahf
in
adc
les
js
fidivs
pushw
and
xor
jbe
ret
loopne
cltd
xor
mov
jle
pop
mov
push
popa
add
xor
js
aas
sbbb
lods
mov
jecxz
dec
pop
fimull
push
cmp
sub
loopne
adc
xor
xchg
rcrl
aam
cltd
nop
xchg
push
dec
dec
or
mov
rclb
das
mov
fs
xor
sbb
push
xor
test
test
clc
cmc
dec
and
sub
cwtl
add
orb
mov
adc
mov
and
pop
lcall
xor
jne
mov
sbb
pop
adc
mov
je
in
scas
dec
addl
insb
sti
xchg
mov
push
inc
cmp
inc
push
or
call
xchg
add
pusha
or
push
sub
hlt
loopne
les
jg
int3
sbb
jnp
je
test
dec
clc
xor
adcb
push
add
push
andl
and
or
outsb
jno
filds
pop
cltd
dec
sbb
aad
nop
push
pusha
sub
pop
jno
dec
or
loopne
lock
xor
push
lods
jb
jl
sub
adc
je
lods
and
je
add
les
mov
rolb
add
lods
add
dec
and
sbb
push
popf
add
or
pop
inc
pusha
jl
adc
push
sbb
or
rcl
pusha
dec
aaa
scas
mov
test
stc
mov
rcr
inc
scas
push
cmpsb
sub
or
stos
das
adc
shlb
add
xorl
push
push
xchg
dec
inc
inc
cmp
jb
ja
nop
lret
daa
xchg
adc
pusha
mov
roll
cmp
add
data16
xor
pop
jp
and
pop
lock
cwtl
cmp
jg
jno
jmp
and
addl
loopne,pt
fidivrs
leave
daa
cwtl
pop
push
push
jne
movl
pop
mov
add
and
lods
enter
loopne
lea
test
rclb
in
or
push
adc
outsb
mov
and
popa
pusha
sbb
lods
or
and
or
mov
xor
in
fucomip
clc
cmp
cmpl
inc
mov
xor
iret
into
push
or
aas
cmp
aaa
insb
int
je
punpckhwd
push
out
loop
cltd
and
adc
xor
imul
pushl
insl
fsubs
push
push
xchg
sbb
and
push
cs
or
cmpsl
add
les
js
xchg
mov
xchg
adc
test
sbb
mov
pop
xchg
cmp
roll
int3
add
popf
mov
pop
sbb
pop
pop
jg
xchg
je
push
int
cwtl
ljmp
es
mov
mov
jl
add
aaa
sub
adc
xor
sbb
das
fstps
sub
rcrl
and
cmpsb
xor
sub
jb
insb
add
mov
or
iret
xchg
mov
je
decl
in
lock
push
jl
cs
adc
mov
or
pop
lcall
xchg
pop
fnsave
mov
rclb
xor
call
xor
rol
add
das
jno
incl
nop
nop
add
xchg
pop
mov
rclb
adc
push
or
aas
add
notb
repnz
nop
in
sbb
sarb
popl
pop
mov
mov
stc
int3
lds
js
icebp
push
add
sub
sbb
push
pop
sbb
push
sbbl
leave
sbb
or
adc
pop
inc
dec
pop
movsl
add
mov
inc
loope
inc
push
sbb
adc
mov
adc
mov
hlt
jmp
lods
jns
mov
add
jle
add
movups
filds
inc
nop
fwait
les
lahf
push
xchg
sbb
add
bound
mov
mov
test
sar
ret
or
mov
dec
mov
test
dec
cmpsl
inc
fstl
push
pop
sbb
mov
mov
push
xchg
mov
les
sti
sbb
pusha
bound
sti
sbb
adc
outsl
sahf
jo
enter
dec
jo
movsl
popa
inc
dec
cmc
int
fiadds
shl
xor
cltd
hlt
lock
lea
add
cmp
adc
stos
push
xchg
and
adc
push
mov
jmp
test
jecxz
dec
mov
sbb
pop
mov
std
je
or
je
push
sub
and
add
in
cmpsl
push
pop
icebp
jl
jmp
and
icebp
adc
push
add
mov
sbb
loop
inc
and
jb
clc
adc
cmp
sub
popf
dec
sbb
cld
jl
push
cltd
sub
mov
sbb
push
add
into
jns
pop
outsb
call
push
add
sbb
sub
push
pop
jns
ret
push
dec
sub
mov
je
mov
pop
cmp
push
imul
mov
pop
call
addb
cmp
sbb
mov
popf
push
and
out
sar
sub
addl
pop
sub
pop
fldenv
cmpb
jne
cmp
xor
mov
jp
insl
out
movb
pop
add
jg
jmp
int3
cmp
clc
cmp
jns
inc
push
push
jge
cmpb
je
aad
xor
outsl
fstps
mov
rcll
sub
sub
xor
adc
add
push
push
xor
outsl
cmp
jns
push
loopne
and
pop
cmp
inc
das
mov
mov
pop
mov
mov
pusha
adc
enter
add
nop
ret
push
pop
call
dec
inc
mov
pop
and
jmp
jne
arpl
loopne
das
push
loope
mov
push
jno
arpl
sbb
jmp
and
sti
and
xorb
add
cmpsl
or
add
neg
add
adc
lods
das
pop
test
lds
push
shll
or
out
js
pop
fstl
sbb
stc
inc
and
loop
xlat
out
and
inc
shll
ret
sub
insl
dec
push
dec
cmp
lds
xchg
mov
adc
lahf
push
inc
and
cmp
repz
inc
add
faddl
jge
mov
popa
in
jge
and
fstl
pusha
sbb
and
and
pop
jle
movb
fsubrs
aas
inc
movsl
mov
push
fadds
outsb
or
jo
or
sub
test
sub
mov
ret
outsb
lods
adc
pusha
or
pop
lret
jge
xor
cmp
je
cmp
jo
dec
jno
inc
add
jge
jl
pop
pop
fadd
popa
mov
mov
clc
lock
test
aad
fidivl
addr16
cmp
xchg
or
push
movsb
cld
mov
mov
stos
add
sbb
or
jae
or
dec
sbb
test
add
sbb
pop
xor
mov
jno
jnp
and
aas
fcmovb
aam
xchg
push
rolb
pop
cmp
pop
lock
and
sbb
inc
repnz
dec
ficoms
das
xchg
cmc
test
xor
inc
dec
mov
or
mov
dec
enter
jo
xchg
js
das
jmp
ret
stc
push
repnz
inc
mov
inc
jl
jnp
inc
mov
in
dec
in
push
cmp
sub
add
mov
mov
jno
test
inc
jbe
xor
loopne
or
popl
push
xchg
mov
fucomp
cmp
lock
add
dec
repz
jno
stc
lock
inc
lcall
rol
inc
and
nop
pop
xlat
mov
lock
and
orl
cwtl
clc
adc
loop
clc
shlb
aam
subl
insl
xchg
stc
add
push
fmul
popa
fidivl
les
jecxz
lea
fadds
and
sbb
push
jb
mov
add
mov
and
and
call
push
mov
add
ss
test
mov
sbb
sbb
lods
mov
adc
mov
jmp
mov
or
or
mov
popa
and
cwtl
inc
inc
mov
and
loop
add
sti
aas
pusha
mov
cmp
or
movsb
imul
inc
imul
mov
lret
jae
add
adc
jbe
mov
shrl
and
jne
pop
rorl
fimull
mov
shll
push
xchg
adc
pop
adc
into
push
sbbl
test
fists
and
sbbb
sub
je
xlat
mov
jae
xchg
push
cmp
xor
clc
and
movsb
lock
add
lea
mov
cmp
push
mov
movsl
and
aas
inc
push
ret
add
push
adc
enter
ret
dec
push
jne
lahf
pop
cmp
and
xor
jge
pop
push
push
sbb
shll
xchg
pop
sub
mov
adc
jecxz
xor
cmp
bound
push
sti
cmp
pop
mov
mov
sbb
adc
lea
xor
fiadds
cli
out
bsf
out
jne
ret
arpl
test
pop
mov
mov
icebp
cmp
push
fldl
inc
hlt
loope
popf
dec
sbb
pushl
hlt
daa
inc
push
out
in
call
fcompl
push
cwtl
test
ljmp
out
addr16
dec
sub
repz
push
ss
sub
jl
pop
sar
rcrb
pop
fbstp
addr16
or
mov
push
loop
test
cltd
and
add
dec
stos
iret
jnp
jmp
dec
fadd
ret
mov
cmp
mov
ficoml
and
xchg
fadd
popf
testb
sbb
in
mov
mov
adc
in
lods
cmc
sbb
add
sbb
mov
in
dec
dec
cld
ret
sbb
fcomp
ds
xor
cmp
push
dec
pop
cmp
add
push
loop
push
rcl
adc
pop
mov
adc
cmp
adc
pusha
and
push
in
inc
imul
daa
outsb
sub
fsubrs
push
mov
rol
inc
jb
roll
sub
rcr
sar
push
push
push
push
call
les
xchg
dec
and
inc
iret
add
test
dec
sbb
jmp
pop
sbb
stc
xchg
or
mov
or
popf
nop
iret
and
dec
adc
icebp
dec
inc
inc
cs
inc
mov
cmp
fs
pop
rorl
enter
in
jns
enter
fs
enter
cmp
test
repnz
cwtl
les
shll
fstpt
pop
test
mov
xor
mov
ja
and
adc
mov
ds
mov
sahf
das
add
push
cwtl
pop
cltd
out
sbb
push
nop
mov
mov
mov
movsb
or
mov
les
push
nop
dec
loopne
push
nop
dec
cld
or
repz
xchg
sbb
add
sub
jp
xor
dec
xlat
dec
test
lea
xchg
je
xchg
mov
push
push
jb
repz
aam
leave
repz
lock
out
pop
fiaddl
sub
nop
xchg
or
add
adc
inc
inc
or
mov
xor
iret
roll
mov
pop
imul
loope
data16
inc
jmp
inc
out
aam
hlt
cmpsb
jecxz
leave
rorl
mull
mov
sbb
sbb
inc
cs
cmp
cs
push
lods
cmp
repz
inc
les
inc
enter
pop
and
lret
test
mov
xchg
xor
pop
enter
push
sub
aad
js
or
mov
test
cmp
andb
sbb
cs
jb
iret
or
and
xor
and
xor
jl
mov
in
and
mov
in
inc
xchg
pusha
add
xchg
insb
ds
xor
push
and
push
arpl
jl
sbb
popa
or
mov
inc
add
pop
pop
push
or
inc
int3
test
mov
loope
push
in
mov
test
push
sbb
xor
iret
cmp
ljmp
or
pushf
nop
xchg
or
orb
or
mov
mov
mov
and
xor
and
pushf
in
sahf
pop
lret
mov
lds
cmp
gs
add
aad
sub
dec
xor
jmp
inc
divb
pop
jbe
je
subb
and
in
iret
xchg
ss
shlb
inc
jmp
bound
inc
pop
rorb
jb
or
fsubrs
or
mov
xor
inc
push
inc
stos
dec
cs
or
nop
inc
subb
pop
jb
inc
push
xor
cmp
dec
sarl
push
test
and
cs
divb
jo
inc
push
mov
nop
or
in
mov
rolb
and
xor
cmp
inc
cmp
nop
inc
sub
pushf
test
lock
enter
clc
dec
pushf
pushf
nop
orl
das
push
pop
xor
test
je
push
mov
aam
or
in
mov
nop
mov
xchg
sub
nop
aam
push
nop
or
in
pop
push
and
das
fs
mov
pushf
enter
popf
loopne
xlat
xchg
pop
xor
ljmp
enter
add
jmp
fcomi
pop
or
mov
daa
into
mov
mov
lcall
or
mov
adc
jne
mov
mov
push
push
or
or
push
xor
pop
aad
sbb
clc
cld
cmp
lahf
ret
icebp
je
xor
add
rolb
loop
pop
shrb
in
sarb
std
xchg
ret
inc
fiadds
jle
pop
les
adc
cwtl
and
mov
jnp
sub
push
xchg
and
and
xor
jmp
dec
popa
das
in
aas
cmp
and
movsl
je
movsb
cmp
iret
or
mov
jmp
test
mov
add
lods
push
inc
mov
inc
fisttpl
fs
mov
adc
adc
pop
lock
testb
pop
dec
pop
push
fdivs
int
sub
xlat
addb
mov
push
add
inc
and
sub
pop
adc
jb
daa
nop
jl
xlat
sbb
jns
add
jo
and
xchg
js
ds
xlat
das
xchg
xchg
or
fcmovb
subb
or
aas
out
into
cmp
mov
fidivl
sub
test
fwait
mov
pop
or
and
pop
sbb
pop
cmc
test
roll
add
add
inc
test
cld
ret
add
push
in
cld
in
jnp
xlat
push
cmp
mov
repnz
adc
add
xor
popf
inc
sbb
cltd
nop
inc
adc
pop
leave
jnp
mov
sbbl
add
dec
enter
hlt
inc
cmp
cmp
adc
and
inc
je
iret
xor
inc
ret
popa
das
js
aaa
sbb
pop
push
or
jl
mov
and
mov
add
sbbb
arpl
scas
das
sub
shlb
scas
js
xchg
xchg
push
dec
test
inc
dec
les
outsb
add
and
mov
in
int3
test
or
jae
negb
add
aaa
sub
mov
xchg
jno
movsl
and
lea
fstps
push
push
pop
loope
loope
inc
xor
shlb
adc
test
pop
mov
test
cmp
and
dec
shll
loopne
ljmp
stc
sub
inc
cmp
sub
and
cmp
cmpb
push
jb
inc
push
mov
pop
mov
jge
daa
push
jb
xor
sbb
pop
jb
inc
mov
and
dec
pop
enter
sbb
inc
jl
cs
aas
test
test
mov
scas
shlb
sbbl
in
nop
or
jns
sbb
sub
fidivs
pusha
repnz
push
mov
in
pop
jb
mov
fistpll
push
repz
enter
mov
nop
sbbl
pop
sbb
inc
push
or
cmp
leave
or
adc
imul
pop
add
test
mov
sub
inc
cs
aad
pop
mov
cmpsl
shlb
pop
jb
test
fcoml
inc
loop
adc
or
and
popa
das
in
std
push
mov
sub
repz
das
fs
leave
or
in
fsubrl
enter
xor
lods
imul
fcoml
shl
mov
adc
sub
daa
in
in
push
push
stos
insb
xchg
nop
xchg
pop
xor
cmp
hlt
in
push
mov
in
sbb
out
add
and
out
sahf
dec
adc
push
pushf
andl
pop
stc
push
insb
dec
and
aad
out
sbb
push
mov
add
pop
push
or
xor
stc
cltd
mov
mov
les
mov
and
add
loop
xchg
inc
adc
outsb
add
or
xor
push
ljmp
out
or
and
jne
push
sub
mov
bound
sbb
lcall
xchg
and
icebp
add
out
xor
rcll
cltd
popa
nop
adc
cld
cld
out
add
shll
jns
mov
push
fnstenv
jl
and
cmp
cmp
push
sub
push
cld
test
out
movb
cli
push
hlt
inc
xchg
inc
addr16
xchg
fdiv
sbb
cmp
inc
insb
mov
mov
insl
mov
test
or
jecxz
mov
jbe
sub
js
aaa
mov
fs
push
leave
mov
loope
dec
fcoms
imul
negl
adc
push
push
gs
mov
xchg
sbb
xchg
inc
xor
hlt
loopne
or
xchg
cmpb
ret
outsb
sbb
mov
push
inc
cmp
movsb
out
cmp
movl
pop
adc
mov
mov
mulb
dec
jle
sbb
adc
or
jl
mov
sarb
dec
push
mov
sbb
loopne
je
jo
pop
dec
subb
popf
inc
pop
pop
mov
mov
shlb
push
popa
or
shl
jo
and
test
enter
mov
add
pusha
push
inc
mov
daa
pop
lock
ret
dec
loop
push
and
addr16
inc
lea
push
mov
xor
xlat
push
and
xor
in
xor
cmpl
jge
mov
insb
repnz
ja
mov
mov
lret
or
jl
xor
cli
dec
mov
sti
ljmp
fbstp
adc
icebp
cli
push
mov
inc
in
imul
fwait
mov
dec
lea
adc
arpl
jge
test
je
push
xchg
sarb
jmp
mov
or
shl
cld
mov
aam
jo
push
inc
leave
add
xor
mov
add
add
ret
mov
mov
scas
loopne
sbb
inc
stos
add
pop
ret
add
mov
in
xorl
xchg
movsb
pop
or
outsl
fistpll
or
pop
adc
sub
and
lea
mov
jns
dec
xor
mov
pop
inc
adc
push
sub
mov
test
mov
push
mov
fisttpll
or
notl
xorl
incl
lahf
fucomip
xor
sub
sbb
leave
cmp
mov
popa
pop
imul
in
arpl
add
inc
fcoml
sub
cwtl
push
rorb
pop
js
add
push
das
fdivs
mov
fsub
cmp
int3
dec
pop
adcb
mov
outsb
inc
or
push
leave
or
mov
lock
xchg
ja
mulb
add
andb
mov
mov
sub
ret
je
or
push
inc
jle
xor
inc
inc
mov
loopne
cmpsb
dec
pop
sti
pop
mov
jle
mov
movb
ss
cmp
inc
das
addr16
mov
jl
cwtl
mov
cmp
inc
enter
cltd
inc
inc
cmpsl
int3
sti
clc
into
cmpsb
outsb
xor
dec
stc
int3
cs
shll
test
adc
hlt
lahf
push
shr
sub
or
push
jmp
mov
mov
mov
xor
daa
cmp
outsl
in
jge
inc
or
lea
in
sub
aam
push
push
mov
les
fdivrl
dec
and
fsubl
aas
and
in
cmpsl
xorb
inc
pop
cmp
and
sbb
adc
adc
loop
xor
cmp
add
or
mov
xlat
inc
jne
push
in
jecxz
cmpsb
shll
bound
mov
cmp
and
lea
andb
adc
dec
cmc
and
das
fidivs
add
cmpb
jle
sub
push
pop
and
jns
sub
lods
sub
and
mov
test
dec
and
push
stc
adc
mov
jecxz
jmp
push
repz
repnz
lock
in
mov
hlt
add
push
ja
cld
push
in
rclb
addl
test
int3
jne
xchg
pop
dec
mov
xchg
mov
dec
jecxz
cmp
push
push
in
pusha
add
xchg
inc
mov
inc
in
adc
lahf
add
test
add
mov
stos
or
pop
push
repz
addb
fcomip
in
xor
arpl
fyl2x
loopne
pop
push
ret
clc
cmc
and
stos
or
stos
popf
adc
fs
mov
and
push
enter
dec
mov
and
loopne
daa
inc
loopne
xor
lock
sbb
xor
xor
arpl
ret
lods
cmp
and
pop
pop
xchg
adc
cli
popf
test
call
sub
les
insb
rorb
jns
adc
adc
test
mov
pop
pop
xor
mov
dec
sbb
cld
push
movzbl
cli
lods
ret
add
cld
test
and
sbb
push
adc
xor
cld
imull
inc
inc
subb
jb
or
jl
jg
popa
fcomps
xchg
pop
push
jns
adc
inc
fisubl
push
xchg
or
sbb
rol
aam
or
cmpsl
iret
xchg
sbb
adc
sbb
push
inc
add
sbb
nop
add
inc
push
jnp
inc
xor
pop
or
cwtl
enter
clc
sbb
pop
push
inc
push
dec
dec
mov
icebp
jo
and
in
push
or
nop
add
leave
adc
ds
adc
pop
push
and
adc
sbb
or
imul
pop
movsl
imul
lods
mov
or
sbb
push
mov
push
sub
nop
sbb
fsubl
pop
call
leave
push
rclb
out
add
repnz
js
mov
mov
shlb
cwtl
and
test
mov
pop
mov
loopne
stc
dec
push
mov
inc
cmp
je
xor
es
test
stos
dec
repz
sbb
sbb
adc
pusha
inc
adc
subb
call
add
and
adc
add
les
aaa
pop
adc
cs
mov
stos
vmread
mov
adc
and
es
mov
loop
fbstp
sbb
sub
adc
xchg
or
dec
dec
pop
xor
lock
mov
adc
int
or
fnstenv
sbb
scas
and
jne
shll
add
pusha
adc
push
mov
in
inc
stc
aam
sub
jge
mov
push
push
push
out
inc
adc
filds
mov
push
xchg
mov
pop
mov
sub
ret
mov
xor
push
push
sub
test
pop
pop
pushf
fisubrs
add
sbb
test
fildl
jbe
lcall
add
and
es
test
adc
and
or
rcr
out
or
adc
mov
out
les
sbb
sub
lods
fstl
lock
push
inc
mov
dec
push
dec
sbb
cmpsl
and
mov
inc
pop
push
rclb
pop
movsb
adc
and
nop
fisttpll
add
test
lock
push
jl
sbb
jne
sub
inc
xor
in
test
test
jo
and
and
js
push
ss
xchg
jnp
bound
cmpsl
negl
jo
int3
sarb
mov
nop
pop
pop
push
repnz
sbb
roll
in
adc
sbb
sbbl
mov
nop
and
sbb
nop
mov
cwtl
and
mov
jle
or
add
dec
nop
or
loopne
sbb
sbb
roll
push
adc
xchg
lsl
stc
enter
dec
enter
loope
enter
push
fcmovnbe
xor
cmp
dec
sbb
fsubrl
sbb
adc
in
sub
and
fcoms
test
dec
mov
push
mov
int3
xor
shr
inc
jbe
int
imul
xchg
mov
adc
pusha
and
push
inc
mov
adc
dec
push
clc
fsubl
jbe
and
or
nop
sbbl
fs
adc
out
insl
gs
dec
push
sub
push
or
pop
cmp
hlt
repz
or
not
outsl
sub
sub
fnsave
cmp
push
push
sbb
adc
les
popa
pop
push
incl
adc
aaa
call
repnz
add
and
and
ret
bound
and
push
pop
gs
and
scas
fsts
sbb
push
cmp
mov
sbb
pop
or
sbb
sbb
or
in
push
pop
in
push
test
inc
ds
movsb
clc
mov
movsb
gs
fdivs
add
pop
mov
scas
and
adc
roll
jl
addr16
adc
or
cmp
or
xchg
sti
jne
js
mov
arpl
pop
imul
sbb
pop
ret
xchg
js
adc
push
jns
popl
fisubrl
in
sbb
fiaddl
fistpl
or
jbe
push
ret
je
inc
je
xor
out
lods
je
cmp
mov
xchg
out
push
jne
xor
mov
adc
and
jle
cmp
push
push
or
dec
cmp
fstpt
lock
stos
and
mov
sub
cwtl
popa
xchg
jmp
pop
xor
push
pop
and
iret
inc
fdivs
movsl
scas
cmp
xor
mov
xchg
in
dec
ds
xchg
xchg
int
mov
out
mov
jbe
xchg
mov
in
add
jno
fsts
out
xchg
andb
and
mov
faddl
pop
adc
push
push
jmp
je
jg
outsb
sbb
out
repnz
cmp
stc
xchg
popa
sub
xchg
pushf
adc
nop
loope
pop
adc
and
pop
adc
and
test
sbb
nop
nop/reserved
push
adc
cmpsb
popa
push
mov
daa
rcll
xor
add
lds
push
lods
inc
mov
pop
inc
sub
adc
shrb
cmp
das
push
dec
push
and
fwait
adcl
push
jmp
inc
mov
mov
dec
push
negl
sarb
sub
inc
dec
fstpl
roll
xlat
and
popa
push
jo,pn
mov
testb
cmp
lods
shlb
push
pop
test
in
je
push
iret
or
daa
stos
push
cld
cmpb
add
leave
rcrb
adc
xor
sbb
adcb
mov
push
sub
mov
js
push
lock
pop
add
sti
add
sahf
rclb
mov
add
enter
mov
scas
xchg
jbe,pt
adc
mov
jae,pn
sub
test
insb
dec
fwait
and
mov
sbb
add
or
and
push
lods
addb
clc
bound
push
mov
ret
mov
or
subb
lea
divl
popa
cwtl
xor
xchg
or
pop
mov
push
in
rcrb
popa
aam
arpl
lcall
test
adc
and
sbbl
shrb
mov
mov
popa
mov
lock
mov
add
mov
ret
and
icebp
outsb
pop
test
add
pop
jb
push
repnz
test
psubusw
cmp
fwait
je
sub
xor
in
ret
adc
in
pop
fidivs
enter
iret
push
leave
sub
je
add
pop
jmp
loopne
loopne
push
lret
clc
in
sbb
push
loopne
addr16
fsubrl
nop
add
adc
fsubrl
jne
mov
or
in
cwtl
iret
add
ret
adc
push
dec
clc
je
push
xor
cmp
dec
adc
popa
or
fimuls
insl
dec
mov
adc
push
cmc
outsb
lds
cmp
movsl
in
cwtl
push
out
lea
dec
pop
fxch
into
add
in
mov
movsb
pop
inc
add
or
add
lds
pushf
stos
adc
je
addr16
push
xor
test
pop
sbb
push
mov
mov
test
xor
or
loop
hlt
sbb
aaa
push
ja
add
pop
ss
jnp
jg
mov
add
stc
cs
inc
shl
movsl
idiv
div
divb
add
or
mov
test
xchg
mov
mov
enter
mov
hlt
mul
push
sbb
or
pop
add
fs
jmp
adc
out
mov
pushl
dec
jns
subb
in
js
xchg
jo
data16
xchg
push
add
enter
arpl
sbbl
xlat
les
push
push
push
imul
cwtl
outsl
adc
xchg
mov
xchg
mov
xchg
clc
pop
xor
ret
dec
fchs
int
add
push
inc
mov
or
push
jo
cwtl
pop
cmp
adc
or
cwtl
mov
push
aas
add
insb
adc
insb
das
adc
rcrb
mov
mov
xor
mov
cmp
sbb
int3
rorl
aam
jmp
leave
je
push
les
repnz
pop
push
out
push
sbb
pop
pushf
lret
and
stc
mov
mov
lret
call
or
inc
or
fdivl
and
jae
mov
xchg
inc
fwait
cmp
push
iret
and
mov
pop
aad
xor
or
int
or
lcall
dec
imul
xorl
outsb
xchg
mov
pop
lret
mov
xor
push
in
push
xchg
aaa
loop
xor
movsl
xor
sbb
lahf
sub
add
push
faddl
dec
inc
lods
lret
dec
sub
je
push
repnz
inc
dec
jo
cwtl
insl
or
clc
lods
xor
push
and
ror
pop
sbb
and
cmp
rorb
and
mov
hlt
inc
push
scas
push
gs
test
popa
pusha
or
push
seta
add
test
sub
fiaddl
mov
ret
xchg
jne
xor
pop
inc
mov
test
push
pop
les
mov
addl
popf
cs
sub
xchg
sbb
test
movsl
clc
cli
xchg
inc
pop
fcom
lods
hlt
cli
sti
adc
orb
cltd
sbb
jb
in
hlt
pop
push
mov
mov
sbb
sahf
xchg
sbb
or
push
or
or
sbb
pushf
mov
enter
pop
inc
adc
and
push
ds
mov
push
leave
push
push
bound
sarb
xchg
pushf
insb
leave
sbb
ror
pusha
xchg
enter
and
ret
add
cmp
pop
and
daa
test
mov
pop
xor
and
mov
xorl
rcll
xchg
sub
jns
ror
jo
bound
add
add
jnp
fs
in
inc
sub
rolb
xor
and
pop
xor
pop
cmc
pop
adc
sbb
movb
and
xor
adc
mov
hlt
adc
loop
xchg
fdivr
dec
into
pop
cmc
inc
pop
inc
sub
jmp
scas
sbb
cmp
fisttps
or
or
mov
mov
pop
cld
pop
or
sub
movsb
lds
jb
pop
sbb
sbb
test
pop
scas
nop
add
mov
lock
push
nop
pop
dec
icebp
enter
xor
pop
and
add
and
adc
mov
sbb
add
jae
iret
xor
cmp
pop
dec
lcall
out
inc
pop
xchg
mov
add
sub
sub
leave
push
push
hlt
clc
les
or
outsl
jl
jg
clc
imul
push
and
into
add
sbb
lea
je
std
sarl
in
fs
and
inc
cmp
test
jl,pn
push
add
and
push
stos
add
push
mov
rcrl
and
fistl
pop
cmpsb
dec
js
sub
btc
sub
dec
imul
pop
add
add
test
and
add
andb
add
xchg
movsl
adc
in
test
sbb
nop
jecxz
mov
inc
sbb
ret
jecxz
or
xor
cmp
nop
pop
inc
push
jo
daa
cwtl
stc
popa
insb
pop
push
push
push
adc
iret
inc
sbb
xor
mov
mov
pusha
ss
in
adc
inc
ret
dec
push
sub
xor
jmp
sbb
xchg
movsb
cmp
jne
mov
pusha
inc
aam
cmp
cmp
dec
jg
push
movsl
and
or
push
arpl
test
jmp
das
mov
adc
sub
adc
mov
bound
test
xor
sbb
jae
mov
test
or
cmp
and
in
push
lahf
inc
xor
push
int3
xchg
into
adc
push
inc
add
jnp
aad
adcb
rolb
mov
cmpsl
and
mov
dec
dec
and
and
movsb
test
and
push
or
int3
mov
lcall
mov
daa
rorb
xor
popa
push
mov
push
rclb
jb
jmp
xchg
and
or
inc
call
inc
in
sub
add
call
mulb
xchg
cmp
ss
or
xchg
or
or
cld
inc
adc
push
mov
pop
rorb
add
sbb
pop
inc
jne
sbb
sbb
push
lcall
sub
push
pop
arpl
add
sub
jmp
ds
xchg
adc
clc
fwait
adc
nop
dec
insl
loopne
leave
in
lret
mov
adc
xor
or
push
adc
imul
mov
stos
dec
jmp
mov
mov
icebp
int3
lea
or
or
aas
imul
sarb
loop
int
cmp
shrb
mov
and
sbb
movd
stos
add
ret
jmp
pushf
mov
sub
add
imul
cld
rcll
imul
lret
push
xchg
cmpsl
ret
imul
push
out
fdivs
nop
xchg
sub
ss
dec
cmp
add
mov
push
dec
movsl
add
in
add
jge
adc
je
adc
pushf
into
sbb
xchg
push
daa
test
push
mov
in
or
dec
cld
cltd
push
outsl
xor
jo
sub
fmul
xor
jne
stos
add
pop
jge
popf
adc
push
daa
inc
adcb
push
and
jnp
cmp
test
push
mov
jg
mov
add
addb
mov
adc
std
dec
enter
push
sbb
sub
xchg
cmpb
lock
inc
call
lret
lds
pusha
cmp
push
dec
or
jbe
dec
push
scas
cltd
sbb
sti
not
jbe
movsl
cmpsb
or
cmp
jb
add
in
add
stc
hlt
cmpsw
insl
daa
data16
sti
push
test
sub
sbb
inc
adc
inc
adc
xchg
push
or
test
cmc
mov
sbb
subl
sub
sub
pop
aaa
pushf
js
mul
or
ljmp
in
cmp
adcb
mov
jp
xchg
mov
ja
xlat
pop
adc
leave
cwtl
dec
int
xor
fsubrl
imul
outsb
repnz
inc
pop
push
aam
dec
jmp
and
mov
fs
mov
jno
or
or
push
add
je
je
les
ficomps
cmp
addr16
mov
sbb
mov
paddq
inc
cmp
or
lcall
les
push
add
push
push
pusha
pop
dec
rorb
decl
push
pusha
and
push
push
mov
nop
aas
xchg
lret
and
in
cltd
mov
sbb
outsl
aam
mov
dec
add
sub
inc
nop
lods
inc
cmp
fmull
sarl
lea
popa
addl
sub
jo
adc
mov
add
push
sahf
mov
ss
add
or
les
add
and
sbb
sbb
ljmp
repnz
cld
cld
adc
xchg
lahf
and
in
push
loopne
ljmp
adc
call
ds
fiaddl
xor
jecxz
push
nop
xorb
pop
dec
mov
lock
jl
daa
sbb
fnstcw
and
or
fimull
and
roll
jbe
sbb
das
adc
rcll
stos
aad
cmp
mov
add
sahf
hlt
mov
pop
mov
decl
sub
je
adc
mov
aas
daa
dec
je
cmp
pusha
rcll
mov
or
in
xor
push
lock
mov
xchg
sbb
ret
cmp
add
lcall
and
pop
cli
pop
sbb
js
cmp
dec
pop
xchg
dec
mov
push
or
scas
imul
lret
lods
and
scas
adc
adc
xorl
mov
inc
inc
loop
push
loop
in
or
mov
aad
mov
loopne
pop
add
movsb
sub
add
xor
sbb
push
cltd
inc
mov
test
int3
cwtl
test
pop
add
xor
push
mov
dec
jecxz
jg
je
dec
jo
lds
mov
in
jno
shr
sti
lods
nop
in
or
xchg
or
jg
mov
mov
inc
xor
mov
in
ja
adcb
lret
aaa
adc
sbbb
shr
jb
inc
adc
sti
or
jae
ds
in
sti
shl
ss
in
std
in
sti
push
or
aad
pop
faddp
enter
mov
xchg
push
ss
std
add
andb
sbb
movsb
push
push
test
xchg
dec
jmp
ror
sti
add
insb
add
or
pushf
sub
dec
jl
adc
iret
mov
out
and
jge
incl
mov
push
lea
test
pop
adc
inc
cmp
jl
andb
popa
xchg
sbb
jae
xor
sub
pop
ret
mov
mov
movsbl
push
adc
inc
cmp
cmp
jl
push
pop
jnp
push
popa
fiaddl
push
jecxz
and
enter
add
out
push
mov
push
dec
dec
add
adc
jnp
xor
jo
rcr
int
shrb
xchg
lret
dec
push
push
mov
add
mov
sti
mov
inc
add
jne
adc
xchg
jl
fisttps
sbb
sbb
jne
mov
jg
or
jne
mov
jne
mov
fdivrl
add
loopne
cmp
in
and
add
adc
mov
push
test
adc
std
jecxz
data16
push
inc
add
div
push
pop
cld
sub
fs
add
cmpsl
inc
inc
mov
add
add
adc
mov
in
xchg
adc
sbb
push
in
pushf
or
outsl
add
adc
enter
pop
andl
pop
dec
movsl
adc
inc
fstps
movsb
mov
test
jno
jno
lds
mov
hlt
dec
adc
add
loopne,pn
sbb
or
cmp
mov
pusha
test
pop
add
pop
cli
in
aas
add
call
adc
je
push
repz
shll
lods
pop
pop
ret
pop
xchg
cmp
pushf
iret
mov
xchg
sub
mov
push
or
push
cmp
add
je
je
adc
xor
pop
sahf
in
push
je
mov
js
push
mov
mov
rorb
xchg
xor
push
lcall
push
jo
mov
xorb
xor
aam
push
sahf
fwait
mov
pop
jae
fimull
dec
add
mov
leave
in
shlb
and
mov
and
mov
mov
push
xchg
cmp
cld
inc
jge
and
mov
lods
push
mov
loope
inc
cwtl
mov
sub
mov
dec
sti
xor
insb
add
xchg
int3
and
sub
xchg
mov
shrl
cwtl
or
sbb
fucomi
and
pop
and
out
add
es
sub
mov
jl
fdivs
test
rcll
test
and
cli
pop
adc
push
negb
stos
push
lods
xor
daa
loope
xor
and
imul
xor
inc
les
sbb
inc
sub
or
mov
inc
in
movsl
int
xor
out
in
mov
sbb
xor
sbb
out
jne
add
mov
pusha
cwtl
xchg
cmp
bound
add
dec
and
sub
test
je
pop
inc
lock
fidivrl
loope
inc
lret
jno
push
shrl
dec
dec
es
xchg
lock
inc
mov
test
cld
leave
or
out
cltd
push
sub
mov
int
pop
je
cmpb
ljmp
cmpl
pop
jne
adc
pop
and
les
add
ljmp
cli
or
or
sub
xor
or
lock
jb
cs
cmpsl
mov
sbb
adc
xchg
sub
adc
loopne
in
and
cmp
lock
loopne
or
lahf
loopne
icebp
loopne
xor
xor
inc
push
icebp
push
add
inc
aad
push
inc
movsb
aas
fmuls
adc
repz
inc
call
pop
shll
leave
in
jne
aad
mov
sub
icebp
pop
fstpt
addr16
xor
stos
test
mov
mov
loopne
fmulp
test
sti
inc
sub
in
repz
and
cmpsb
jnp
in
and
and
xchg
movsb
add
sbb
loopne
mov
mov
movsb
mov
lock
lret
inc
shr
or
leave
loope
dec
pop
enter
jae
subl
sub
loop
jp
xor
xor
mov
clc
stos
or
xor
aaa
addr16
or
cmp
xorl
cmp
testl
adc
andl
mov
pop
dec
or
xor
inc
inc
cmp
adc
sbb
pop
pop
gs
nop
sarb
adc
outsb
test
mov
xchg
testl
mov
push
dec
pop
sub
je
dec
xchg
arpl
test
mov
jae
lods
xlat
or
jge
adc
sbb
jmp
aad
pop
xchg
add
or
xor
jnp
test
xor
adc
jbe
pop
sub
or
or
sti
imul
test
shl
sbb
cmc
sbb
pop
mov
lds
in
mov
sbb
sar
mov
add
fs
int3
jmp
ss
bound
inc
add
roll
xchg
adc
or
jmp
pop
cmpsl
add
js
mov
stos
sbbl
aam
loop
jle
xchg
push
xchg
mov
shld
mov
jbe
push
adc
push
jecxz
push
add
adc
icebp
pop
dec
pushf
data16
loop
test
inc
xor
es
test
mov
fs
and
xchg
bound
push
mov
mov
mov
rolb
sub
push
bound
arpl
jo
or
stos
push
insb
loopne
and
sahf
fmuls
add
and
mov
outsl
enter
jmp
jnp
inc
cld
addb
arpl
push
mov
sbb
sub
and
cmp
enter
jl
adc
xor
out
aas
jbe
arpl
repz
or
je
movb
mov
inc
inc
mov
in
dec
jb
xchg
push
push
ja
add
or
push
lret
jmp
mov
pop
xor
insl
je
or
jmp
loope
arpl
faddl
cs
push
or
fstl
out
aas
and
pop
out
inc
loop
jbe
dec
lock
mov
xor
cli
movsbl
cmp
cld
in
cmp
jo
push
cmp
je
cmp
or
mov
sti
cmpsb
push
jne
mov
shrl
and
stc
pop
cli
sti
cld
or
std
or
jmp
addr16
mov
mov
lock
aas
and
bound
sub
and
xor
jbe
dec
xchg
and
inc
shrl
icebp
sub
dec
enter
sub
jno
cmp
mov
add
xlat
loopne
lret
pusha
daa
sbb
or
add
in
mov
and
or
sbb
inc
jg
cld
xor
rcll
sbb
cmp
xor
push
cmp
pop
in
in
je
popa
jbe
xchg
fidivl
fs
jns
pop
sbb
out
pop
jnp
lea
mov
in
pop
add
mov
mov
je
push
outsb
adc
lahf
or
je
xorl
push
cmpsl
mov
filds
add
idivl
mov
add
test
inc
add
jle
cltd
push
dec
dec
cmp
repz
dec
sbbl
scas
dec
mov
ja
pop
aaa
mov
mov
adc
push
push
sub
cmp
pop
cmp
addr16
push
xor
add
or
xor
push
fdivl
cld
adc
or
fistl
pop
jmp
pop
pop
mov
leave
jne
inc
push
xchg
adcl
data16
add
add
in
addb
je
or
test
pop
je
xorb
push
std
pop
push
mov
sbb
mov
push
or
dec
clts
fstl
out
dec
movsl
cmpsl
subl
or
mov
mov
addb
sbb
repz
mov
sbb
add
xor
cwtl
mov
iret
out
add
ret
cmp
in
into
mov
and
mov
mov
dec
fdivs
mov
xor
cmp
and
push
jl
pop
or
hlt
pop
pop
adc
xchg
cmp
scas
test
xor
mov
and
cld
mov
jb
push
inc
lret
inc
inc
inc
push
fadds
inc
pop
pop
mov
sub
pop
jge
sub
shrl
repz
loope
xor
xlat
add
or
test
push
ret
int
push
push
and
or
push
imul
sbb
sub
shl
jne
and
fimuls
xchg
mov
sub
das
push
cmc
fmul
andl
paddq
hlt
inc
loope
dec
mov
xchg
iret
mov
aam
add
add
divl
popa
sub
inc
dec
lds
nop
insb
pop
mov
cmp
xor
insl
lret
cmp
sti
pop
lea
lahf
mov
jae
cmp
push
xor
pop
and
mov
mov
push
push
and
mov
pusha
jg
mov
sahf
stc
addr16
sbb
add
lret
inc
cmp
cmp
je
adc
adc
popa
mul
es
mull
popf
lods
movb
nop
sub
push
push
mov
cmp
xchg
jge
aam
mov
dec
out
lds
xor
sub
dec
mov
mov
pop
mov
fsubs
orl
sub
add
orb
xchg
pop
or
push
pop
je
sub
ja
mov
das
xchg
adc
adc
inc
mov
pop
jo
xor
cmc
and
cmp
je
sub
mov
add
or
and
sti
jno
add
jl
pop
clc
xchg
cli
aas
xor
push
or
inc
and
xor
or
and
dec
pusha
lea
and
dec
jnp
dec
xor
xchg
and
xor
dec
fcoms
sbb
adc
rclb
add
mov
dec
and
daa
fidivs
lock
in
sbb
push
negl
in
sbb
jo
cmpsl
xor
dec
sbb
mov
inc
ror
xchg
push
std
inc
fxch
or
movsl
mov
push
dec
mov
mov
sbb
xchg
divl
pop
int
jmp
hlt
cs
pop
jge
pop
out
call
imul
push
ljmp
mov
mov
pop
flds
rcr
lea
lret
ud1
adc
xor
mov
adc
test
dec
mov
fmul
xchg
push
in
shrb
or
loope
lock
adc
or
push
fcompl
in
push
aaa
push
addr16
push
adc
ljmp
mov
scas
inc
inc
sahf
daa
clc
add
fwait
aas
inc
xchg
into
enter
test
inc
xor
div
movsl
adc
and
in
xchg
movl
sbb
inc
add
push
push
mov
mov
in
sbb
out
push
outsb
das
or
div
das
pop
jnp
mov
pop
mov
adc
or
in
adc
inc
repz
shrb
mov
xchg
iret
push
add
push
ret
clc
push
sub
insb
mov
cmp
pusha
xor
sbb
jbe
stos
mov
inc
js
push
add
addl
in
insl
and
add
or
pushf
pop
pop
xchg
bound
out
and
inc
pop
inc
jl
inc
pushf
push
ficompl
cmpsb
je
outsl
daa
sub
push
sbb
push
ss
std
jg
dec
cli
loope
pushl
jb
cmp
ja
xor
push
outsl
mov
lret
lock
pop
jnp
and
xlat
push
jae
push
and
repz
xor
ja
push
inc
inc
cmp
pushf
xor
dec
xor
and
mov
sbb
or
sub
outsl
sbb
roll
ret
adc
js
lcall
inc
mov
and
mov
sbb
mov
push
cmp
xorl
loope
push
mov
dec
movsb
jmp
lret
cmp
and
push
pop
jne
lods
inc
mov
sahf
pop
in
jne
push
mov
xor
mov
add
mov
in
shlb
sbb
call
push
adcl
dec
add
mov
aam
add
std
rcrl
mov
xor
mov
std
push
or
rclb
or
adc
clc
sub
arpl
xor
push
cmc
add
adc
sti
aam
test
call
bound
push
push
loop
inc
hlt
sub
cmp
and
test
pop
or
ficoml
push
sarb
inc
aad
push
clc
mov
sbb
adc
aaa
xor
cwtl
stc
inc
pop
fisubs
repnz
pop
or
rep
shll
out
add
enter
cmp
pop
xor
clc
ja
xchg
or
and
pop
fsubrs
push
sahf
and
add
sarl
or
push
adc
mov
pushf
inc
pop
loopne
sbb
cs
push
stos
cmp
sub
aaa
in
pavgb
leave
adc
sub
gs
leave
fdivr
imul
cltd
push
rorb
call
in
adc
push
es
pop
jb
sbb
sub
rcl
add
pusha
push
cld
sbb
movsl
fsubrs
rdtsc
in
xchg
add
std
push
inc
aas
call
mov
loopne
ret
mov
dec
pop
or
enter
jne
pop
std
inc
cs
sbb
sar
stc
outsb
mov
cmp
arpl
sbb
test
or
xchg
aam
in
bound
int3
and
ss
insb
jbe
sbb
std
sbb
pusha
mov
sbb
movsb
adc
add
rcll
pop
mov
push
das
pop
rorb
and
or
dec
mov
stos
cmpsb
pop
sub
popa
insl
aam
push
push
mov
push
mov
movb
fidivs
inc
data16
cmp
adc
pusha
rorl
push
mov
or
adc
loopne
mov
pop
dec
mov
push
inc
loope
sbb
push
adc
lahf
aas
push
ret
sbb
xchg
pop
sub
cmp
pop
repnz
stc
or
xor
jmp
aas
shrb
cmp
add
in
aam
cmc
shlb
cmpsb
jnp
xchg
pop
loopne
fadds
pop
inc
push
out
in
mov
push
dec
mov
movsl
push
cs
les
pusha
call
gs
aaa
and
inc
aam
mov
setns
mov
push
mov
fisubrs
adc
pop
mov
scas
sub
add
xor
pushf
pushf
std
int3
js
add
test
aas
xlat
pop
push
sbb
pop
sbb
mov
sub
lea
xchg
sbb
movsb
enter
or
call
in
movsw
pop
mov
mov
test
mov
sub
shll
mov
icebp
lock
aam
push
movsb
loopne
lds
pushf
cmp
pop
and
repnz
sahf
test
cmp
mov
testl
int3
or
mov
mov
adc
sti
rclb
jne
shlb
insb
and
push
jecxz
mov
cli
pop
and
sar
fisttps
dec
jb
fbld
xor
xchg
dec
and
xor
cwtl
loop
ja
mov
test
pop
loope
std
int3
sbb
pusha
and
rorb
mov
imul
jl
adc
sahf
mov
les
ror
test
fwait
or
pusha
mov
or
xchg
or
adc
rcl
jg
or
jb
popf
sub
mov
xchg
add
sub
pop
add
mov
ss
mov
jmp
shrb
mov
adc
bound
xlat
test
dec
inc
pop
iret
mov
inc
adc
add
mov
enter
mov
and
and
push
add
dec
aam
jae
ljmp
xchg
adc
lret
mov
sub
mov
and
fisubrs
fs
pop
xchg
enter
fdivr
aaa
or
mov
add
xchg
repz
inc
jo
stc
add
inc
xor
in
popa
jg
add
popf
jmp
inc
pop
lea
mov
mov
leave
adcb
sub
push
loope
sbb
sarl
ss
push
add
lock
sbb
xchg
jns
pop
mov
subl
repnz
jecxz
push
pushf
subl
adc
jge,pt
push
inc
pop
cmp
stos
xchg
xor
mov
shlb
dec
mov
jp
and
push
syscall
outsb
inc
cmp
into
jl
jmp
push
mov
mov
mov
mov
xor
daa
test
cld
cmpsb
pop
addr16
adc
add
clc
and
cmpsb
adc
pop
scas
ret
test
ret
mov
pusha
movsl
bound
adc
jne
sar
lods
gs
iret
incb
or
sub
add
int3
jo
and
aaa
cmp
dec
sub
loopne
roll
jns
ds
lock
jno
jae
or
sbb
or
pop
je
pop
out
das
jnp
mov
sub
jb
pop
mov
sahf
mov
repz
inc
add
cwtl
or
adcb
ss
push
pop
mov
and
mov
scas
adc
pop
mov
clc
add
push
jecxz
jnp
adc
inc
or
mov
xor
or
jmp
icebp
cmpxchg8b
cmp
je
push
push
xchg
lret
in
sbb
cld
xchg
inc
cld
sub
adc
ja
xlat
clc
jle
cmp
in
std
incb
add
rorl
dec
jmp
fsubr
xor
adc
inc
leave
dec
vdivpd
mov
pop
mov
mov
and
and
xchg
nop
lcall
cmp
or
xchg
mov
insl
sbb
cmp
sbb
and
cmpsl
xchg
inc
add
and
addr16
mov
mov
test
add
pop
mov
aam
into
mov
je
cwtl
les
nop
add
aam
dec
xchg
inc
rep
orb
mov
push
and
and
sub
dec
pop
loope
loop
jecxz
fnstenv
out
jmp
jb
fs
mov
dec
lods
jl
lods
adc
cmpsl
aam
push
jecxz
bound
mov
add
dec
ljmp
sub
fstpl
push
icebp
mov
and
xchg
movsl
sub
mov
sbb
movsb
push
push
repnz
mov
arpl
mov
and
jecxz
add
inc
mov
dec
scas
push
cmp
push
add
jb
push
mov
dec
aam
push
and
in
sti
aam
adc
movsb
into
cltd
clc
sti
cmpsl
aam
and
repnz
xchg
jg
push
movsb
cld
cmp
and
mov
les
arpl
xchg
imul
dec
inc
pop
movsb
stc
push
loop
movsb
cmp
pop
push
daa
mov
mov
icebp
sbb
out
loopne
or
and
test
fs
pop
sub
adc
inc
das
fsubrs
jle
fmuls
mov
sarb
fdivs
aam
lcall
fsub
or
pop
xor
inc
lea
and
fisttps
xlat
push
mov
sub
add
add
repnz
dec
cmp
add
insb
cld
sub
inc
mov
data16
stc
sbb
ds
mov
hlt
pop
pop
dec
xor
pop
cld
das
les
sub
jmp
cli
pop
bnd
xor
test
movsb
jno
ja
dec
mov
fldenv
jb
adc
sub
xchg
movb
jo
cmpb
test
je
call
adc
das
sub
sub
aas
je
pop
xchg
sar
cmp
jmp
adc
lahf
mov
test
or
fmull
es
inc
inc
js
idiv
jmp
cmpb
imul
add
adc
jne
xor
aaa
adc
and
mov
sub
and
pop
cmpb
outsb
push
inc
push
or
sub
jne
cmp
out
fistpl
sbb
add
cmp
jge
cmp
test
jmp
push
push
mov
push
aas
aam
mov
cmp
jl
cmp
jg
or
pop
jmp
xor
sbb
add
sbb
incl
out
lock
mov
das
roll
inc
xor
ret
inc
call
leave
ret
sbb
loop
mov
mov
fwait
addr16
lcall
or
insb
jne
mov
aaa
clc
in
inc
mov
aas
jmp
mov
shrl
lock
xchg
pop
mov
cmp
mov
cmp
je
xlat
push
add
sbb
dec
cmp
or
daa
je
ret
mov
ret
pop
popa
cmp
mov
jle
push
adc
shll
jmp
xor
adc
mov
add
mov
les
jne
testl
mov
add
mov
fstl
movl
int3
je
mov
inc
jmp
pop
cmp
jnp
icebp
lahf
mov
add
xor
xor
mov
jg
insl
test
cmova
dec
pop
test
fsub
xor
je
mov
or
stc
std
ja
iret
dec
jmp
sub
jmp
or
jmp
add
addr16
ret
adc
cltd
or
jne
jmp
push
inc
dec
xchg
sbb
inc
dec
je
cmp
xor
lret
and
je
inc
cmp
add
cvtdq2ps
imul
push
adc
adc
or
jge
aas
loope
or
test
add
fidivrs
pop
jo
cld
test
je
test
mov
adc
sbb
aam
xor
int3
add
xor
push
lret
pop
loopne
dec
adc
push
ret
push
push
aad
add
cmp
add
add
insb
fdiv
scas
inc
fldl
int3
mov
ss
enter
pop
cld
inc
ljmp
inc
sub
xchg
pop
sub
inc
or
mov
sbb
inc
xchg
lock
sar
fs
pop
or
and
mov
mov
fcoms
add
ljmp
cmpl
jl
imul
inc
and
cs
and
add
adc
mov
adcl
scas
cmp
fimull
push
fsubs
xor
jnp
call
push
scas
inc
neg
dec
mov
adc
and
pop
sahf
fs
and
mov
inc
push
add
sub
mov
roll
mov
sub
push
and
js
flds
inc
cmp
dec
add
das
xchg
je
dec
cmpsl
and
mov
pop
xchg
dec
mov
pop
dec
scas
pop
xor
sub
or
sbb
loop
adc
add
jo
fcmovnbe
cmpsb
call
movl
jne
lret
jne
insb
fstl
sub
xlat
decl
cmp
jbe
mov
addr16
cli
roll
dec
stc
or
xchg
adc
cmc
xchg
clc
outsl
inc
lock
or
jb
dec
add
das
test
imul
cld
or
push
mov
or
pop
xchg
and
pop
icebp
mov
mov
or
pop
fcompp
add
int3
mov
dec
lea
dec
add
mov
and
add
inc
mov
push
in
mov
or
push
aam
int3
fbstp
lods
mov
mov
in
call
imul
mov
add
add
add
add
adc
xor
loopne
loopne
push
sbb
fsubs
nop
cmp
and
pop
xor
and
arpl
lea
jl
xchg
or
cmp
jmp
je
cld
out
nop
jno
adc
sbb
xchg
pop
stc
sub
pop
pop
nop
test
enter
add
filds
dec
mov
lods
mov
pop
aas
inc
out
add
fiaddl
dec
dec
btr
mov
bound
or
push
push
mov
lcall
jno
dec
rorl
sbb
sbb
xor
rcll
adc
push
shlb
lds
or
das
mov
mov
pop
mov
push
lds
daa
outsl
add
and
sbb
ret
addr16
adc
push
add
imul
rol
es
xorl
adc
inc
cmpsl
adc
fimuls
pop
leave
sub
push
repnz
push
test
pop
dec
push
sub
add
sbb
leave
andb
stc
lahf
add
rorl
mov
inc
inc
inc
test
test
fadds
dec
roll
imul
jmp
lea
leave
and
lock
sub
arpl
xor
jmp
pop
outsb
jns
sbb
aaa
lods
and
and
and
ror
sbb
adc
enter
lret
mov
je
rep
je
inc
dec
sub
imul
ffree
les
lods
ret
unpcklps
and
test
das
jae
jmp
mov
sbb
add
ret
push
pop
jl
in
jnp
test
cmp
or
push
mov
popa
adc
cmp
or
in
add
sub
add
sub
xor
testb
shl
inc
ret
ret
add
out
out
repz
inc
pusha
loopne
add
sarb
repz
leave
rcll
cs
adc
roll
nop
adc
or
adc
pusha
inc
add
cmpl
ret
outsb
or
push
leave
pop
fisubs
jnp
shlb
jmp
sbb
push
cmp
shl
push
sbb
push
inc
pop
mov
mov
repz
or
loope
and
or
jns
adc
adc
add
aaa
incl
cmp
jle
push
or
push
fnstcw
mov
push
je
mov
xchg
aaa
js
mov
jbe
fucomip
adc
aas
xor
or
jl
int3
repnz
aas
cmp
out
mov
xor
aas
hlt
mov
jmp
or
jne
popf
dec
outsl
roll
or
adc
sbb
adc
cld
push
or
or
in
jmp
dec
add
xchg
gs
add
in
and
xlat
imul
rorb
clc
mov
arpl
ret
push
push
pop
jnp
hlt
sub
jmp
or
loope
push
add
inc
ret
stos
aas
sbb
in
pop
subb
in
lock
dec
add
call
cmp
cmp
sar
test
into
jae
or
add
repnz
xchg
xchg
aam
cmp
mov
paddw
dec
int
push
push
clc
adc
neg
jmp
sbb
pop
lahf
mov
xchg
lods
xor
and
or
jns
adc
nop
ss
pop
loope
mov
jnp
inc
inc
shrl
in
pop
insb
cmp
es
mov
mov
xchg
shlb
pop
pop
clc
gs
loope
cmp
repnz
push
stc
cmp
xor
or
orl
push
xor
dec
cmp
adc
loopne
sahf
dec
mov
pop
push
add
aad
xor
push
xlat
test
sbb
cld
jae
and
sub
dec
adc
test
sbb
rcrb
pusha
lret
xchg
clc
cmp
cli
add
jo
mov
lds
push
rclb
aas
and
sub
lret
dec
jle
subl
inc
test
add
dec
out
pop
neg
xchg
jne
mov
in
std
pop
mov
jmp
and
and
dec
sub
sbb
psubusw
adc
inc
and
incb
mov
testb
jmp
inc
aad
mov
dec
hlt
pop
lock
xor
or
jge
push
test
dec
fsubs
addr16
mov
and
add
adc
cmp
mov
mov
push
push
ret
fsts
dec
or
sub
sub
or
push
addr16
sub
jae
repnz
pusha
or
cld
cld
jmp
imul
shll
jle
mov
push
jg
adc
xchg
sbb
pop
and
inc
lods
imul
arpl
sbb
mov
ds
test
stos
lock
enter
pop
jb
aas
or
push
pop
or
cld
push
add
repnz
fcomi
or
test
cmp
or
jmp
or
shll
or
push
movsl
dec
loopne
ret
and
cmp
loope
push
mov
or
add
stos
push
lods
and
outsb
sbb
add
cld
sub
inc
pop
leave
add
pop
ret
in
ja
leave
push
add
adc
mov
inc
mov
dec
out
pushf
cmp
loope
add
insb
push
jge
out
push
mov
int3
outsb
jnp
dec
sbb
jnp
inc
or
roll
clc
jmp
push
xchg
pop
push
sbb
mov
push
add
jne
cs
sub
repz
sbb
test
test
pop
movb
push
pop
ret
add
push
inc
vsubpd
pop
cld
pusha
aas
lock
je
and
ljmp
xlat
pusha
loop
insb
cmpsl
push
in
push
jmp
push
pop
das
mov
adc
stc
pop
xchg
popf
out
adc
hlt
pop
sub
jne
jns
lock
push
or
xor
movsb
sub
hlt
and
orl
mov
pop
push
or
mov
add
jge
or
arpl
inc
imul
inc
cmp
cltd
ja
inc
leave
clc
and
push
adc
cld
call
and
lock
lret
cmpsl
jge
push
in
adc
dec
add
rcrl
sbb
out
sub
es
in
nop
or
sub
ret
pusha
rcrl
push
es
mov
cld
cld
loopne
xor
adc
adc
cwtl
int3
lds
lods
sbb
lds
mov
push
mov
jns
mov
fwait
jno
jnp
lods
sarl
cmp
mov
lahf
es
scas
aad
push
push
pop
dec
xchg
push
dec
sbb
mov
or
cwtl
adc
fmuls
jge
push
cmp
lods
mov
mov
lods
jmp
xorb
inc
push
push
sbb
or
mov
cli
cmc
testb
and
and
les
rorb
shr
jo
add
clc
add
sbb
xchg
push
mov
xor
lea
inc
add
pop
and
xchg
cmp
xchg
fldl
insl
sti
dec
scas
arpl
jmp
push
dec
inc
mov
ficoml
jmp
testb
in
dec
call
add
fimull
push
dec
xchg
pop
data16
pop
fsubp
ja
and
xlat
ds
and
dec
mov
and
mov
les
inc
sub
je
jecxz
add
es
gs
or
pop
lods
pop
cli
sbb
rcll
adc
adc
negb
inc
add
push
fs
data16
cld
mov
cmp
ds
adc
inc
sub
mov
add
ja
adc
sub
or
or
insb
jbe
push
sbb
popf
or
mov
add
lahf
push
nop
adc
and
xor
sub
push
adc
xchg
in
loopne
inc
or
xor
adc
loopne
xchg
clc
sbb
in
inc
ret
lock
mov
into
insl
xor
mov
adc
push
push
ds
cmp
andl
mov
enter
inc
jg
pop
dec
fcoms
scas
jb
arpl
cmp
sbb
sub
imul
pop
cmp
scas
loopne
pop
dec
ficoms
jae
hlt
lea
adc
or
jno
mov
fdivrl
mov
gs
sbb
inc
inc
jno
adc
push
cmp
in
repnz
rorl
lods
out
push
sbb
je
sub
inc
mov
inc
dec
cmp
lock
xor
lods
lock
je
add
pop
push
mov
xlat
mov
daa
and
scas
pop
mov
xor
push
movsl
test
mov
arpl
loope
enter
adc
imul
push
sub
stos
sub
lds
es
mov
leave
call
into
test
sbbl
jp
xchg
push
push
mov
mov
pop
loop
mov
jmp
repnz
or
add
add
lret
mov
test
jb
cmp
pop
xorl
aad
add
int3
cmp
xlat
sti
pushf
rol
popa
mov
jmp
sub
mov
jo
ret
dec
cli
in
shlb
add
push
ret
or
mov
loopne
inc
adc
fs
xchg
adc
push
xor
adc
lret
mov
repnz
lods
or
jnp
and
mov
sub
and
add
movsb
add
addl
jo
movsb
add
sbb
dec
or
push
repnz
fstpt
lock
rorl
or
mov
adc
sbb
jle
mov
testl
ret
push
add
leave
sub
jmp
mov
out
jle
leave
mov
addb
insb
cmpsb
mov
mull
stos
adc
shr
js
in
and
push
add
rol
iret
xor
dec
hlt
jecxz
add
and
int3
pop
and
add
or
int3
call
adc
pop
add
addb
enter
jl
pop
fcmovnbe
sar
loope
fldt
sbbl
add
rolb
xor
icebp
and
sub
add
sub
cmp
push
add
leave
inc
jmp
iret
cld
sbb
pop
push
inc
cmp
adc
add
ror
je
add
je
stc
add
ret
inc
cmpsl
push
jne
outsl
jle
jb
push
ret
or
jne
or
pop
in
je
sbb
clc
add
adc
lock
push
dec
sub
and
push
jno
add
adc
lret
sbb
sbb
insb
lret
addb
fsubl
push
add
and
cmpsl
shlb
imul
xchg
inc
std
mov
sahf
lods
sub
jmp
test
rolb
inc
or
mov
movsb
lea
mov
cwtl
into
and
mov
add
cmp
jb
lods
xor
mov
js
mov
fst
movsb
sub
cmp
outsl
rcr
js
jp
sub
xchg
cmp
xor
mov
mov
lea
jmp
dec
adc
and
sub
and
sbbb
xchg
dec
and
add
add
mov
xor
pop
clc
clc
dec
pop
enter
add
jne
xchg
mov
inc
aaa
xor
insb
bound
mov
movb
fisubs
lods
ljmp
pop
adcl
shrb
imul
inc
mov
and
or
lea
jo
push
movsb
jg
jg
loopne
mov
pop
adc
js
gs
mov
sbb
movsb
dec
test
sbb
inc
adc
push
outsb
js
push
cmp
cmp
call
add
sub
and
mov
ret
fwait
popf
jmp
jecxz
mov
lods
add
pusha
adc
xchg
rcrl
fnstsw
jbe
cmp
inc
adc
lret
shll
call
add
int
sbb
cli
pop
xchg
dec
xchg
inc
push
sub
jle
and
test
call
pop
push
jbe
les
sbb
dec
push
je
push
xor
outsl
sub
inc
adc
mov
pop
jle
lret
inc
out
xor
mov
jl
mov
xor
je
pop
inc
cmp
mov
orb
mov
add
adc
sti
pop
rcrl
sub
mov
adc
test
dec
lock
clc
clc
fcoms
cmpsl
clc
mov
or
lock
jne
mov
mov
inc
lds
das
mov
adc
fdivs
mov
je
imul
or
sub
fiadds
div
test
test
pusha
aas
fcmovbe
add
mov
xchg
out
push
mov
subb
loopne
push
or
push
pusha
and
dec
lods
sbb
inc
adc
add
jmp
and
adc
xlat
push
lret
jne
je
jmp
or
into
pop
in
or
lods
cmpb
mov
and
or
das
fs
or
sbb
imul
lahf
lret
cltd
je
inc
and
rolb
cld
xor
outsl
jo
xchg
jl
add
or
rcll
pop
ljmp
lahf
int3
shrl
sub
cmpb
mov
and
test
inc
insb
mov
fisttpll
xor
stos
orl
mov
sarl
dec
icebp
je
and
cmp
jne
inc
xor
cmp
inc
inc
stc
sub
adc
inc
sbb
jns
sbb
push
add
pop
jmp
adc
sbbl
test
push
inc
inc
stos
add
cltd
pop
adc
and
inc
stos
add
add
clc
add
sub
inc
mov
insb
mov
add
sarl
push
sbb
push
js
adc
lahf
and
dec
jl
mov
push
lretw
sbb
mov
dec
inc
pusha
pop
or
inc
xchg
add
bound
loopne
cmpl
ret
das
fucomi
and
or
fisttpl
sub
stos
or
sub
test
or
xor
sbb
jne
adc
push
js
push
popa
or
js
je
push
clc
fldl
nop
sbb
push
mov
rclb
in
leave
cmp
call
push
jl
push
mov
add
enter
mov
jne
pop
inc
and
adc
sub
inc
nop
je
mov
adc
std
rcrl
sub
inc
sub
adc
popf
or
cld
and
sub
adc
or
pop
jmp
add
jl
je
dec
mov
and
cmp
cmpsb
cld
pop
into
sbb
sub
out
test
pop
or
jge
inc
pop
add
loopne
popa
shlb
call
cmpsl
mov
aam
or
push
insl
cld
divb
cwtl
push
xorb
or
sub
clc
adc
and
jmp
push
leave
add
dec
sub
dec
sbb
xchg
mov
dec
adc
mov
push
sub
in
or
cmc
inc
adc
ret
mov
or
push
cld
call
add
mov
insl
rorb
mov
popf
shl
mov
rcll
dec
or
leave
mov
sbb
movsb
jns
sub
pop
pop
shlb
cwtl
jg
xor
lret
adc
adc
mov
lods
adc
mov
pop
add
mov
mov
lea
mov
push
add
dec
js
call
ss
clc
subl
pusha
xor
repnz
das
aad
add
dec
movsb
mov
cmp
mov
int3
lcall
adcb
pop
dec
mov
inc
adc
add
dec
mov
dec
adc
xadd
jae
aas
xor
xchg
adc
arpl
add
mov
mov
cmp
xchg
fdivs
push
les
dec
jnp
push
push
xor
inc
js
stos
test
sbbb
cmp
mov
mov
sub
add
xor
pop
aas
mov
loope
arpl
clc
push
scas
shr
rolb
and
data16
jg,pn
leave
js
subb
rcrb
mov
rcr
fbld
and
stos
shl
mov
enter
jp
shlb
add
data16
icebp
xchg
shrb
push
inc
rol
sbb
sbb
mov
dec
loope
ficompl
in
and
popf
cltd
mov
fcompl
je
ret
mov
clc
shlb
jne
and
lret
pop
pusha
sub
xor
or
insl
adc
mov
scas
test
mov
addb
cmp
sbb
sahf
lahf
xor
ret
jg
inc
lcall
lea
adc
mov
daa
push
sbb
ljmp
adc
je
out
xor
rcll
in
or
push
mov
shl
push
jl
ss
mov
mov
lret
outsb
xor
mov
or
es
xor
xchg
pushf
out
jne
and
or
lock
add
mov
aas
sbb
xchg
cld
cmp
je
out
cmp
je
dec
jnp
dec
iret
out
and
fdivrl
fnsave
aam
xchg
pop
arpl
outsb
sub
pushf
xor
std
cld
mov
or
dec
inc
sbb
aas
andb
mov
sub
iret
jle
xor
adc
pop
inc
cmp
movsl
or
dec
lock
cmc
leave
pop
add
lock
lea
mov
pop
scas
lea
sub
mov
mov
fildl
bound
mov
and
add
mov
mov
pop
jbe
sbb
mov
sbb
lock
adc
sub
pop
and
adc
mov
xchg
sbb
push
cmc
jle
call
hlt
je
adc
hlt
cmp
and
shll
and
call
shrd
add
jne
cmp
jns
clc
or
add
jmp
out
mov
mov
or
or
adc
inc
push
clc
push
pop
adc
push
cmp
xorl
loop
sub
in
xchg
iret
stc
pop
cmp
addl
test
outsb
or
rcrl
lods
sahf
or
pop
jae
add
loop
mov
inc
cmpsl
je
cmpl
sub
dec
shlb
cmp
jae
push
pop
xchg
or
call
sbb
inc
imulb
push
call
add
add
dec
inc
mov
sbb
add
pop
adcb
jp
mov
hlt
mov
je
jb
iret
mov
loope
mov
cltd
ret
push
inc
fdivl
mov
arpl
clc
loopne
push
or
mov
clc
push
je
cmpsl
or
out
jo
clc
sbb
sub
mov
adc
pop
jno
popa
in
lret
jne
or
add
mov
pusha
iret
xorl
and
lahf
mov
popa
sub
add
xchg
daa
mov
sbb
jmp
lea
or
rclb
nop
xchg
stos
orl
aad
and
push
lret
xchg
jns
jmp
or
jmp
std
jmp
jge
stos
ss
or
sbb
jne
fs
out
xor
push
addr16
loope
jecxz
inc
xchg
xor
aam
jno
shrb
adc
mov
dec
jnp
sbb
push
push
leave
add
sub
icebp
mov
or
push
and
cltd
jmp
push
cmp
add
inc
push
shll
loope
xchg
xor
xor
aad
or
in
pop
adc
addps
lds
dec
cmp
ds
push
mov
dec
out
add
clc
jae
cltd
inc
movsb
ret
sbb
call
clc
jns
add
fmul
shl
popf
xor
adc
sub
outsl
out
mov
data16
add
push
or
xor
add
mov
add
aam
sub
sub
xchg
or
aad
add
or
adc
out
mov
loope
push
or
jbe
add
add
loope
rcrl
sbbl
ficomps
or
and
and
and
fnclex
and
cmp
lahf
jle
cmp
mov
pusha
cmp
jns
addr16
jo
fsubl
xorb
shlb
push
call
push
jo,pt
jo
call
dec
and
repz
xchg
sub
movsl
push
stos
rolb
jnp
mov
mov
sbb
mov
add
cmp
pushf
add
outsb
sbb
or
and
xchg
xor
xchg
or
shr
inc
decl
in
xor
jmp
rcr
or
jne
imul
movsb
sahf
loope
mov
fidivl
cwtl
mul
add
or
imul
jb
cmp
or
cmp
add
fldl
hlt
pop
pop
push
push
frstor
fcompl
ret
push
fdivl
mov
sub
enter
rcrl
push
or
sub
add
pop
sbb
adc
or
neg
sbb
cmp
je
push
push
loope
ja
das
pop
jge
inc
stos
dec
push
sbb
xchg
arpl
mov
mov
sbb
sbb
dec
sbb
fcomip
insb
xor
push
xor
jmp
xchg
xchg
data16
dec
fcomi
sbb
sbb
adc
dec
jne
adc
addb
pop
pop
imul
add
pop
jne
xor
lock
mov
inc
adc
lock
popa
jl
cmp
mov
or
jp
or
mov
add
cmp
push
adc
hlt
lahf
inc
push
or
loopne
repz
push
daa
lods
rcr
or
push
out
sbb
inc
add
hlt
adc
push
testb
push
inc
jmp
push
sbb
in
nop
xchg
icebp
or
sti
pop
addl
and
dec
mov
add
unpcklps
lahf
dec
or
pop
sbb
fcmovnb
loopne
mov
jmp
dec
lods
xor
jae
add
int3
or
push
cmpsb
stos
fists
mov
loope
push
test
jecxz
push
jmp
cmp
push
repnz
mov
jecxz
or
aam
inc
inc
dec
adc
and
fnclex
rcrb
subl
inc
and
sub
push
scas
popa
mov
repnz
or
aaa
push
pop
ret
test
out
decl
cmp
jne
inc
inc
dec
je
adc
jne
mov
mov
adc
cld
dec
jb
pusha
insl
call
inc
cmp
imul
mov
cmpsl
je
mov
push
cld
dec
pop
dec
sti
sti
adc
cmc
jne
sub
sbb
mov
fst
rcrb
imul
sha1msg2
sbb
mov
loopne
adc
incl
testl
mov
add
jg
jge
mov
jl
or
or
dec
cs
and
mov
and
ss
lahf
push
pop
add
cld
popf
enter
pop
inc
sbb
mov
nop
inc
call
cmpsl
lret
jne
outsl
or
push
pop
mov
in
mov
inc
sar
inc
pop
or
pop
mov
or
or
add
mov
dec
clc
rorb
roll
lea
mov
sbb
aaa
fadds
mov
dec
and
jne
jge
push
pop
hlt
ss
adc
sub
mov
popa
shl
or
outsb
or
inc
pop
aas
jno
ret
sub
daa
das
pushf
sarl
clc
lds
jno
pop
or
cmp
inc
push
cs
sub
clc
lahf
xchg
push
jns
adc
or
mov
sub
or
dec
push
push
mov
add
dec
aad
ret
cmp
jae
movsl
add
movzbw
xchg
push
es
or
pop
stos
aam
mov
rolb
pop
inc
mov
mov
arpl
fsub
cld
or
je
lods
js
daa
movsl
int3
pusha
pop
scas
pop
leave
push
mov
adc
xor
lods
or
adc
sbb
enter
mov
imul
cli
andb
sbb
jmp
mov
dec
jo
sahf
cmpsb
mulb
pop
shrl
idivl
jmp
sbb
lea
dec
jge
adc
mov
aaa
mov
sbb
mov
add
add
test
jle
add
jns
push
cmpb
add
add
mov
aas
add
sbb
movsl
pop
fstpt
pusha
and
add
ret
and
xchg
aas
add
hlt
pop
loop
cmpsb
dec
mov
movsb
mov
stc
sbb
add
mov
or
iret
cmpsl
mov
mov
mov
call
pop
and
ds
mov
or
movq
jmp
push
adc
pop
mov
loop
cmp
stos
sub
movhps
insb
pop
pop
insb
pop
jmp
aaa
mov
scas
dec
push
sbb
sti
and
sbb
js
inc
lahf
xchg
jae
dec
fldl
adc
and
loopne
xchg
add
shrb
mov
adc
sub
popa
mov
add
add
push
pop
pop
adcb
jmp
pop
imul
popa
and
adc
hlt
lcall
adc
cli
sub
pop
adc
arpl
in
lods
out
xor
jg
jl
loope
orl
and
add
cmpsb
or
add
mov
lea
je
inc
pop
rep
adc
es
xchg
push
mov
jne
adc
mov
or
jne
inc
clc
xor
pop
xchg
loope
sarl
inc
push
mov
inc
push
test
xchg
shlb
lods
sbbl
dec
lock
in
sbb
xor
add
loopne
mulb
pop
cmp
or
push
or
pop
stos
and
mull
rcr
dec
loopne
sbb
das
frstor
pusha
je
movsl
int
or
call
or
add
pop
stos
test
out
ds
lret
inc
lock
jo,pt
jb
push
cmp
push
jecxz
in
ja
imul
or
mov
sahf
add
ja
push
and
loop
daa
mov
push
add
mov
push
loope
aas
xor
out
lcall
inc
outsb
push
dec
xorb
inc
and
add
sub
jbe
daa
and
mov
cmp
push
xchg
sbb
adc
cmpsb
adc
or
dec
inc
roll
lods
enter
sti
and
mov
or
sub
sub
inc
pop
lahf
stos
sbb
stos
test
leave
fld
negl
aas
clc
repnz
addl
repz
mov
loope
inc
jne
cmp
je
dec
dec
testl
mov
jno
push
and
shll
or
lds
add
xchg
sub
dec
fwait
add
in
xor
adc
je
sbb
and
test
or
add
xchg
lret
ret
in
add
cmp
sub
rorl
dec
roll
cmc
adc
xchg
outsb
jbe
sub
adc
mov
and
pop
test
sbb
add
cli
sbbb
arpl
mov
sbb
mov
dec
pop
ffreep
fbstp
les
add
pop
aaa
mov
and
mov
fildl
mov
jecxz
add
fnstcw
jo
cmp
fmulp
or
sbb
jnp
sbb
mov
or
shl
add
les
fisubrl
scas
rcll
or
adc
sahf
dec
cld
sbb
mov
call
fsubl
inc
jl
iret
rcr
movsb
pushf
pop
shlb
movsb
sbb
cmp
xor
aas
inc
mov
mov
mov
jae
xchg
xchg
dec
jb
repz
pushf
push
rcr
cld
ss
scas
mov
fdivrl
or
cwtl
add
pop
cwtl
xor
enter
jns
mov
cwtl
and
inc
mov
push
mov
testb
pushf
cli
adc
and
subb
push
push
lock
adc
push
xchg
dec
sahf
or
imul
xor
int3
fildl
test
jge
and
sarl
or
add
sbb
fs
sub
pop
sbb
push
aad
inc
in
dec
ss
mov
jmp
and
and
fs
fisubrl
out
iret
cmp
in
dec
or
cmp
loope
ret
pop
mov
out
repz
adc
jne
lock
outsb
push
int3
icebp
xchg
imul
roll
xchg
je
cmp
adc
push
push
xor
jmp
jge
pop
sub
stos
test
subb
filds
sub
les
jbe
push
scas
add
outsb
xor
pop
jle
inc
push
dec
pop
add
xchg
ret
hlt
jmp
or
add
std
aas
jl
lock
pop
imul
mov
xchg
je
enter
inc
add
cmp
inc
jge
xor
fdiv
movswl
or
dec
in
xchg
xchg
insb
add
inc
jmp
outsb
xor
pop
movsl
andb
std
adc
lahf
sub
and
cmp
jl
sub
or
jo
inc
mov
fmuls
jl
dec
rcr
or
mov
mov
dec
cmp
jl
push
push
jg
xchg
test
outsb
mov
cmpl
or
jo
xchg
adc
mov
xchg
shrl
outsl
add
jns
in
dec
pop
ds
insb
pop
ja
mov
lea
leave
in
inc
xchg
in
mov
fdivs
sbb
inc
cmp
je
mov
mov
pop
xor
add
sub
xchg
sbb
rorl
loope
in
into
push
scas
loopne
add
into
pop
jbe
lahf
add
rol
xchg
mov
daa
rsm
js
cld
int3
add
push
ja
fisttpll
mov
mov
or
ja
mov
dec
sbbl
sbb
add
xor
repnz
add
out
adc
or
or
frstor
xchg
jle
jns
jne
lea
pushf
sar
or
jge
pusha
mov
out
inc
jle
and
psubq
adc
or
lea
xor
roll
add
cmp
sbb
scas
int
int3
or
not
cmp
mov
int3
leave
push
inc
adc
push
and
add
inc
fs
mov
mov
fs
fs
sub
xlat
adc
adc
add
xor
adc
pop
ret
jbe
xchg
into
or
mov
lock
mov
sahf
push
mov
or
cs
mov
call
cmp
push
in
jae
pop
mov
sub
aaa
movsb
and
add
cld
sbb
adc
ret
cmp
cmp
xchg
or
data16
mov
mov
clc
aam
ret
fmull
add
xlat
jo
mov
or
xchg
enter
aas
xchg
mov
jnp
into
mov
lea
add
pop
or
add
push
or
mov
push
dec
xchg
or
fstpt
mov
dec
jge
add
sti
movswl
shr
outsl
fsub
dec
pop
leave
mov
mov
xchg
enterw
mov
stc
push
jae
cmp
jno
jne
sbb
loop
pop
jg
dec
xor
ja
mov
jecxz
push
test
push
inc
and
shll
push
mov
sub
enter
jle
mov
inc
bound
jmp
adc
adcb
aas
ret
flds
cli
loopne
pop
iret
or
addl
mov
lods
adc
sbb
adc
jnp
aaa
pop
nop
cmp
shlb
jmp
cmp
mov
add
cmpsb
leave
sbb
mov
push
push
and
imul
aam
je
xchg
lods
imul
push
gs
lea
popa
pop
daa
inc
addr16
xchg
sbb
inc
mov
fldenv
mov
xchg
mov
xchg
cwtl
xchg
or
inc
dec
xchg
pushf
push
sarb
mov
rcrl
das
mov
data16
mov
or
insb
in
fadds
sbb
fcomps
push
sub
push
jbe
xchg
sbbb
imul
or
int
sarl
or
rolb
or
sbb
push
adc
xchg
sbb
test
push
mov
mov
imul
int3
leave
je
sbb
sbbb
mov
pop
cmp
ds
pop
mov
imul
inc
pusha
push
movl
push
xchg
jbe
xor
cld
aas
aas
in
add
popa
add
aaa
pop
xor
and
lea
push
div
adc
push
and
fmulp
push
adc
neg
jns
cwtl
mov
imul
add
push
cmp
mov
mov
pop
fcom
cmp
inc
mov
mov
mov
add
xchg
lock
xlat
in
stos
xchg
add
int3
int3
ret
lret
jg
imul
adcl
mov
pushf
pop
sub
ja
xor
xchg
dec
ja
daa
or
mov
cmp
insl
add
push
insl
cmp
rorb
subl
sub
add
ds
mov
push
aad
add
lret
inc
sub
out
xchg
notb
cmpsl
sbb
movb
imul
or
cmp
into
pop
jecxz
das
subb
adc
and
int3
adc
add
sub
addl
out
and
lret
pop
faddl
loopne
and
push
pop
sbb
push
pop
aam
test
xchg
dec
jl
and
adc
int3
cmp
lea
sarb
enter
out
or
fwait
add
lods
and
add
repz
ljmp
lcall
sbb
jl
push
sbb
or
insl
cs
pop
loop
aam
adc
adc
mov
cmp
adc
push
mov
adc
addl
or
lods
js
pop
xor
cli
add
movb
fsub
inc
fstpl
mov
in
int
ja
pop
add
add
ret
lret
fisubs
xor
les
test
xor
imul
dec
sti
mov
add
or
jo
mov
fcmovbe
xor
or
add
add
enter
add
dec
adc
jo
outsl
mov
cs
fcmovnb
popa
jmp
das
lock
gs
add
mov
and
push
add
add
push
mov
push
add
add
adc
or
test
or
or
mov
cmp
inc
cmp
dec
arpl
or
or
pop
jp
es
outsb
popa
xchg
test
adc
std
or
xor
push
add
xor
daa
or
inc
or
movl
out
adc
xor
mov
jmp
andl
or
mov
cmpl
outsl
add
pop
sub
xor
in
add
pop
xorb
mov
and
push
mov
sbb
aas
or
ljmp
sbb
cmpl
dec
and
jl
or
sbb
ja
jno
dec
divl
cmpsl
jmp
movsl
int3
sub
or
inc
xchg
pop
cmp
xor
insl
mov
lods
jnp
adc
push
mov
push
pop
add
arpl
fnsave
cli
push
push
mov
xor
cld
jne
push
push
mov
push
imul
xor
hlt
push
mov
or
xchg
cmp
sub
inc
pusha
and
mov
icebp
inc
push
movb
add
and
repz
fisttps
repnz
dec
add
add
adc
mov
sub
cmp
inc
or
sbb
sbb
or
jns
jl
lea
add
pop
or
add
jge
clc
rcl
popf
iret
or
clc
sub
lea
push
inc
movsb
mov
xorb
mov
add
sarb
mov
jo
or
pop
cmpl
adc
aaa
mov
pop
lea
xorl
jge
push
mulb
pop
int
xor
adc
pop
test
push
jo
or
add
fcoms
push
outsl
in
and
cmp
cmp
cmc
fcomip
lods
fisttpll
push
xchg
es
inc
mov
insl
xchg
cmc
push
daa
push
mov
fbld
imul
pusha
sub
shrl
mov
pop
out
mov
or
xor
sbb
or
mov
pop
cwtl
or
add
lahf
test
or
pushl
add
sbb
push
adc
sub
push
adcl
jle
jne
or
loope
add
and
loopne
loopne
push
jae
iret
popa
ds
push
sub
aam
lds
lea
or
sub
loopne
loop
cld
push
scas
fstp
dec
in
adc
adc
dec
and
cmp
cmpsl
and
and
fimull
sbb
cltd
mov
pop
xchg
inc
arpl
cs
xor
adc
popa
insb
enter
add
add
std
inc
lea
and
outsl
dec
add
es
dec
and
xor
mov
mov
int
out
xor
loopne
scas
shrb
xor
in
push
mov
mov
mov
dec
mov
repz
dec
push
push
mov
or
outsb
sbb
xchg
pop
aaa
call
mov
test
dec
inc
inc
lcall
pusha
or
nop
loopne
cmpsb
or
rcr
insb
fadd
xchg
fs
pushf
fmul
sbb
xchg
data16
xor
dec
rclb
orl
xorl
mov
cmp
xchg
out
in
mov
in
xor
sub
fsub
in
in
aam
int3
cltd
fwait
push
out
mov
pop
jb
dec
jle
xor
hlt
out
cmp
pop
nop
add
out
push
adc
and
xchg
jge
or
jne
push
sub
sub
pop
stc
pop
xor
adc
add
pop
push
aas
addl
pop
sub
and
pop
push
push
adc
imul
dec
mov
int3
and
mov
repz
dec
xlat
push
xor
sbb
pop
adc
je
mov
add
adc
jp
das
dec
test
push
mov
inc
nop
and
and
jo
ljmp
clc
fwait
movsb
repz
fcoms
arpl
lret
cmp
jb
add
sbb
lods
into
inc
push
ret
jmp
add
or
lods
sub
mov
mov
xor
inc
lock
je
cmp
cmpsb
and
shl
and
push
stos
and
mov
pop
dec
xor
and
xor
test
cmp
and
inc
dec
scas
sub
cmp
outsb
mov
fstpl
add
lahf
cltd
add
or
lahf
test
inc
inc
cmp
and
or
das
test
add
or
test
test
rcrl
movsl
and
int3
sti
mov
jo
repnz
jae
cmp
or
inc
adc
jmp
sbb
push
mov
add
scas
incb
or
xchg
jl
add
int3
adc
mov
popa
fprem
das
sub
aaa
or
adc
adc
rorb
data16
lods
adc
sub
xchg
lods
xchg
or
lcall
xor
lock
lock
mov
mov
mov
mov
call
in
js
mov
and
jmp
addr16
jle
call
xchg
sbb
mov
mov
mov
hlt
in
mov
or
add
xchg
xchg
nop
or
dec
shlb
mov
lea
xchg
push
shlb
add
fnstsw
faddl
adc
iret
sub
push
out
data16
call
in
or
add
enter
jnp
sub
mov
ja
lcall
dec
bound
loopne
xor
ds
jo
add
stc
ss
mov
xor
sub
add
or
imul
adc
nop
jmp
call
cmc
jo
dec
testl
sbb
mov
mov
mov
push
dec
inc
xorl
jns
sbb
cmp
jne
mov
pop
repz
sub
push
lret
adc
aas
or
push
jnp
sbb
push
cs
cmpsl
sahf
sub
rorl
stos
aam
lds
or
push
push
sub
mov
mov
and
inc
stos
jle
stos
adc
push
or
push
inc
fs
in
jle
push
pushf
pushf
and
je
divb
jle
lock
dec
or
cmp
mov
pusha
or
rol
or
mov
jno
sub
push
movsb
mov
mov
ss
jne
pop
das
pop
jne
hlt
in
lret
rcrl
enter
and
jbe
dec
jnp
lcall
movl
pop
adc
sub
pop
cmp
xchg
jge
loopne
maxps
inc
mov
pushf
mov
aam
fbstp
mov
and
iret
ficomps
sub
sbb
movl
xchg
cmc
cmpsb
loopne
ds
jp
mov
cmp
push
mov
xchg
jne
jg
jb
cmpb
jg
mov
loop
inc
add
xchg
loope
stc
inc
or
ret
mov
dec
lods
cmp
fsubl
push
or
lods
inc
adc
int3
push
rclb
add
fists
orb
add
adc
dec
or
or
sbb
push
scas
bound
xor
daa
daa
and
jno
ret
leave
xor
ja
jne
mov
xchg
jbe
test
add
stc
mov
sbb
xor
shrl
pop
fisttps
mov
scas
add
inc
shlb
les
sub
mov
jmp
sub
icebp
sub
imul
or
push
fsubrp
cmp
add
push
in
sub
inc
sarl
xor
subb
xchg
and
test
add
shlb
add
cli
push
ja
fistl
lock
mov
fnstsw
add
dec
cwtl
mov
jmp
daa
sub
in
push
movsb
add
or
pop
jecxz
lds
jmp
imul
inc
add
sub
enter
dec
pop
dec
filds
xchg
mov
jne
pop
jne
sub
mov
mov
js
ds
xor
pop
out
xchg
xchg
js
xchg
mov
push
js
sbb
add
xorl
js
add
ret
and
jno
fstps
push
hlt
push
std
adcl
inc
mov
cmp
jle
mov
mov
fs
xchg
adc
subb
xor
add
add
dec
add
hlt
sbb
hlt
std
hlt
cmpb
jne
jno
jge
mov
addl
stos
in
in
es
adc
pusha
gs
mov
push
mov
mov
xchg
aam
mov
clc
add
aam
ret
setnp
pop
inc
dec
sbb
jg
sti
pushf
or
popa
enter
daa
xor
fwait
push
jle
shll
xchg
cwtl
adc
inc
dec
aam
cs
jbe
pusha
adc
rcrb
add
mov
jo
js
in
sub
test
pop
and
loope
pop
sub
into
ret
cmp
lock
rol
test
lds
mov
adc
in
in
xchg
xchg
xlat
out
addl
add
sub
lea
rcl
xor
test
inc
call
adc
pop
inc
or
push
xchg
inc
push
aad
or
loopne
push
mov
popf
inc
jne
xchg
cmp
icebp
or
ds
or
enter
add
add
and
les
or
shlb
add
int
inc
pop
jo,pt
push
nop
dec
scas
sub
bound
pop
std
sub
cmp
add
imul
test
orb
ret
enter
call
jno
push
pop
mov
rclb
jnp
xchg
mov
jl
adc
pop
push
xlat
test
or
adc
adc
lret
sbb
loopne
dec
roll
test
adc
xor
in
pop
adc
in
movsl
repnz
scas
sub
pop
gs
ret
outsb
adc
inc
inc
in
xor
and
nop
xor
jmp
sarl
add
iret
and
xchg
lea
sub
xor
add
push
jne
fstps
loopne
dec
xchg
jns
loopne
ret
bound
mov
push
xchg
add
fimull
mov
cmp
sbb
lcall
enter
or
jbe
push
jmp
jg
in
and
arpl
xchg
outsb
fcomp
out
or
or
xor
jmp
imul
or
mov
cmp
jge
push
dec
adc
mov
dec
test
cmp
or
icebp
push
gs
sbb
mov
add
and
or
fs
inc
or
or
inc
roll
xor
movsl
xchg
jbe
xor
inc
xchg
and
cmp
je
mov
dec
lret
sub
int3
add
adc
or
mov
out
sbb
and
xor
and
pop
jp
jg
sbb
dec
roll
pop
add
jns
add
add
add
jge
sbb
add
sub
aaa
out
mov
rcr
ret
mov
testb
jmp
add
add
add
add
jb
sbb
add
loop
pop
adc
sub
adc
pop
add
clc
jmp
pop
or
mov
fists
pop
or
sub
xor
or
or
and
divl
xor
outsl
test
cmpsb
dec
push
aam
mov
outsb
inc
add
sbb
in
adc
add
pushl
add
jbe
or
pop
mov
or
ret
dec
inc
and
pop
and
fildll
sar
adc
push
stos
pop
and
xor
test
mov
nop
into
xor
sti
jmp
test
clc
mov
and
je
leave
dec
or
leave
adc
sub
push
pcmpgtd
lock
cld
or
cmp
adc
adc
adc
or
addl
add
sub
imull
test
mov
and
jnp
aas
xchg
sahf
inc
fdivrp
push
mov
and
pop
sahf
adc
push
shl
add
lret
cli
mov
jmp
xchg
ret
add
cltd
add
jecxz
imul
iret
lea
iret
push
in
and
add
loope
movl
aas
xor
jp
sub
sbb
bound
cmp
push
out
addl
inc
dec
loopne
loopne
outsb
or
inc
icebp
sbb
sbb
mov
or
movsb
test
xlat
dec
and
xchg
mov
and
jb
sub
push
movsl
adcb
fcomps
lods
rcll
in
push
les
stos
loope
movsl
xchg
cld
jns
call
mov
dec
pop
lea
mov
enter
movsl
test
fs
jge
popa
dec
loopne
jb
or
adc
xor
jle
or
jmp
and
add
push
adc
mov
sbb
inc
or
push
sbb
jae
ret
dec
loop
rolb
dec
movsl
xorb
xchg
add
out
ficoms
sub
stos
stc
int
in
imul
mov
popf
jno
cmp
hlt
in
rclw
push
inc
les
popa
cmp
rorb
in
aam
inc
filds
outsl
mov
int
aaa
xchg
cltd
inc
inc
mov
out
lds
xchg
jecxz
in
inc
inc
enter
mov
inc
in
mov
jecxz
mov
xchg
and
dec
mov
push
gs
inc
es
mov
inc
inc
pop
adc
xor
cmp
andb
cmp
or
loop
push
adc
push
sbb
jge
cmp
sub
out
mov
and
in
outsb
push
call
push
mov
ret
das
cmp
clc
adc
sti
repnz
es
pop
in
xor
pop
les
push
xor
mov
pop
inc
add
add
pop
pop
cmp
dec
add
add
push
pop
pop
and
or
jno
inc
add
movsb
repnz
add
idiv
inc
or
push
je
cmp
and
dec
popa
cld
orl
xor
xchg
rcrb
in
in
fwait
jno,pn
push
lcall
orb
test
mov
xchg
dec
push
aam
es
mov
pushf
mov
lret
imul
or
add
inc
scas
and
in
cltd
or
add
sbb
xchg
dec
or
adc
xchg
mov
cmp
clc
pop
jae
test
cmp
adc
jne
inc
xchg
stos
or
mov
repnz
out
add
lods
cmp
mov
inc
or
jo
es
cmp
repnz
cmc
popa
sbb
pop
adc
test
negl
ret
sbb
add
pushf
dec
xor
add
iret
dec
imul
or
aad
adc
push
cmp
mov
or
test
dec
sahf
in
or
push
testl
shlb
je
and
pop
jl
js
dec
fwait
movsb
int
sub
ret
push
adc
sub
cmpsl
movsb
mov
xchg
push
sub
cmp
push
jmp
in
push
shlb
mov
in
cmp
loopne
rorl
shl
xchg
pop
mov
ds
shr
sahf
mov
mov
jns
xchg
call
push
pop
push
add
pop
push
mov
or
cmp
inc
and
pop
push
negl
add
cmpsb
jecxz
in
sarb
test
shl
negb
push
call
and
rorb
push
inc
arpl
dec
sbb
insl
inc
mov
sbb
lock
pop
mov
addr16
dec
push
frstor
push
push
jae
or
rcrl
and
push
sbb
add
shrb
jecxz
mov
stc
or
mov
int
xor
mov
mov
fistps
jge
fadds
lea
outsb
push
aaa
mov
stc
and
je
or
sub
leave
xor
out
adc
sahf
xor
mov
adc
and
mov
push
mov
sbb
push
sbb
push
fists
test
clc
add
mov
enter
adc
popf
xor
lock
mov
push
sbb
mov
xchg
or
enter
ds
jnp
mov
push
mov
inc
xlat
xor
or
daa
or
xor
mov
test
and
test
stos
inc
push
imul
xchg
fldln2
mov
rclb
loop
aaa
clc
sbb
xchg
shrb
pop
icebp
cld
outsb
or
out
sub
jge
cmp
adc
pop
xor
cmp
roll
cmp
ficomps
sub
mov
xor
cmp
fcompl
and
adc
cs
int3
js
or
push
out
or
loopne
xchg
ror
jne
adc
lret
sub
push
dec
cli
mov
je
pusha
xchg
into
repnz
je
aam
sbb
int
mov
inc
inc
in
inc
sbb
and
fimuls
jb
adc
xchg
inc
or
pop
cld
or
cwtl
or
cmp
adc
outsl
mov
fs
insb
out
in
dec
adc
push
pop
test
ret
mov
mov
push
data16
xor
mov
push
pop
cmp
je
repz
mov
popa
out
ret
add
pop
sbb
sub
repnz
cld
push
pop
pop
mov
xor
addr16
pop
scas
addl
inc
test
inc
outsb
dec
and
pop
testl
jecxz
xor
aaa
or
add
enter
sub
testl
mov
sub
inc
mov
pop
aaa
xor
test
add
testb
inc
or
add
imul
mov
push
or
leave
test
enter
push
add
jae
fadd
addb
cmp
fs
jo
aas
add
jnp
or
jno
xor
cli
adc
clc
mov
push
cmpsb
mov
cmp
add
add
cltd
out
fcmovnbe
sahf
sub
cmp
ja
imul
mov
shlb
int
lahf
or
or
dec
mov
cs
cmp
push
push
push
cmp
cwtl
in
mov
and
jb
jae
fstpt
test
jae
mov
mov
enter
or
sub
mov
loopne
add
sbb
pop
nop
enter
xchg
cmp
faddl
push
adcb
mov
jb
imul
mov
jg
sub
iret
fcomp
fcomp
inc
subb
es
fdivrs
dec
jb
pop
pop
mov
jns
cli
jae
shr
movsl
dec
sbb
and
pop
repnz
xchg
lret
ret
inc
push
mov
push
jecxz
fisttpl
or
add
in
rorl
rol
inc
adc
cmp
cld
mov
cmp
mov
push
add
xchg
mov
sbbb
jne
pop
mov
enter
std
mov
sbb
jne
or
loopne
lret
and
and
mov
xchg
ja
cmpsb
ljmp
add
inc
xchg
inc
or
adc
jmp
mov
add
outsb
mov
cmpsb
imul
push
sub
add
add
cmp
add
arpl
mov
mov
xchg
jge
cld
movb
xor
loop
push
jge
cld
cmpb
pop
sbb
xor
andl
pop
pop
xor
adc
outsb
mov
mov
les
cmpl
dec
mov
sub
mov
push
and
cwtl
push
or
add
jo
je
das
inc
fstl
scas
stc
mov
cmp
cmp
cmp
adc
add
test
inc
les
jno
push
mov
dec
pop
push
dec
or
or
push
push
mov
adc
shll
popf
adc
enter
das
push
popa
outsl
test
test
pop
clc
inc
jae
xor
push
xchg
dec
jbe
and
aad
ss
push
fbstp
mov
scas
scas
inc
ret
cwtl
leave
fisubrs
add
jbe
jge
and
xorl
inc
jae
leave
xchg
or
outsb
sbbb
notb
ljmp
insb
pop
inc
jb
adc
or
cmc
and
jg
pusha
pop
subb
roll
push
jo
or
popa
push
xor
cwtl
jp
and
call
xor
push
mov
addl
rclb
fs
aas
jo
or
lods
mov
or
xchg
mov
lods
stos
xchg
and
add
pop
sahf
outsb
pop
cmp
cmp
pop
dec
jns
test
cmp
dec
or
imul
lcall
sub
jbe
sbb
mov
imul
hlt
adc
dec
xchg
or
adc
jne
mov
xor
sub
or
test
or
sti
push
add
mov
test
fmull
add
loope
or
sbb
jae
mov
cmp
pop
dec
daa
movb
lahf
imul
cmp
mov
arpl
adc
inc
or
cli
jecxz
test
data16
or
dec
sub
adc
cmp
rorl
dec
cwtl
stos
popa
call
jnp
push
lock
ja
cmc
mov
adc
pop
and
dec
cli
or
jl
loop
nop
inc
lret
cltd
or
push
adc
std
pop
cmpsl
push
cmp
or
sti
xchg
or
loopne
or
or
flds
cs
push
mov
sti
rolb
jmp
sbb
jo
test
xchg
rclb
adc
imul
or
adc
stc
in
std
xchg
cmp
andb
in
orl
adc
ja
aad
add
and
adc
pusha
sub
jnp
cmp
outsb
pop
lds
add
inc
negl
cld
cmp
or
movsb
jae
enter
cmp
orl
repz
sub
mov
ds
jne
push
adc
lock
mov
pop
add
into
jmp
test
incl
and
xor
dec
dec
in
push
push
imul
dec
inc
fadds
jecxz
pop
lea
pop
jmp
jne
icebp
adc
sbb
stos
pop
mov
sub
push
xor
hlt
sub
sti
shrb
fidivrl
mov
rcrl
xchg
stos
pusha
test
xor
lods
pop
mov
sbb
cld
xchg
jbe
adc
pop
xor
fwait
xchg
or
jp
add
mov
js
sbb
lret
js
sub
aas
orl
cmp
test
rcl
adc
lahf
insb
xor
or
add
adc
add
mov
loop
xchg
jg
mov
push
ljmp
jge
lods
xchg
mov
pop
les
lods
pop
sahf
rolb
push
push
daa
imul
popa
jae
mov
sbb
mov
sbb
aas
dec
and
scas
dec
lahf
mov
inc
jg
add
push
les
mov
mov
or
and
jecxz
jo
das
fxam
or
xchg
adc
ret
lahf
mov
dec
imul
mov
hlt
movsl
jp
ret
popa
jae
test
cli
lret
loopne
sub
jle
add
cmp
mov
adc
pop
mov
and
add
in
shr
mov
xor
call
and
mov
push
fnsave
jmp
mov
add
mov
push
adc
pusha
popa
xor
jno
shr
adcl
out
rorb
ret
std
and
push
lods
ljmp
les
daa
shlb
xchg
gs
in
push
ror
enter
enter
fcoms
jmp
cmp
inc
xor
fs
cld
adc
jecxz
in
jbe
mov
aas
outsb
dec
add
adc
and
xlat
pusha
jo
fdiv
leave
and
mov
je
cld
mov
les
add
sbb
and
lea
sub
sub
inc
call
ret
arpl
movsl
insb
mov
mov
imul
fs
test
loope
test
lret
mov
dec
jmp
mov
iret
sub
sbb
sbb
dec
pop
and
xchg
jo
sub
jbe
jns
enter
rcll
add
in
jo
sar
call
cmpl
xchg
hlt
push
push
pop
ficoms
sub
pop
int3
hlt
aam
aaa
sbb
aam
gs
mov
dec
aaa
shl
mov
and
pusha
pop
xchg
rorb
cwtl
inc
incl
mov
aam
aaa
int3
mov
xchg
or
aam
outsb
sbb
mov
push
inc
push
aam
ret
jno
and
mov
leave
mov
dec
iret
aam
aam
inc
mov
add
xor
push
daa
int3
into
mov
test
inc
sub
cs
lock
jne
inc
xchg
jg
pop
adc
dec
push
adc
or
pop
sbb
loopne
mov
daa
ljmp
or
nop
cwtl
cltd
mov
adc
fdivs
xor
jge
add
mov
push
pop
push
xchg
sbb
fcomps
in
add
cmpsb
xor
adc
repz
addr16
jle
mov
mov
pop
xor
or
out
dec
mov
adc
and
mov
pop
das
add
shl
sbb
push
add
inc
popa
int
add
push
cmpsb
xchg
inc
mov
adc
rorl
sub
push
pop
add
call
loopne
push
jno
divl
cmp
pop
dec
adc
dec
pop
and
test
xor
xor
sbb
jb
jne
sub
inc
adc
add
pop
pusha
or
pop
sub
aas
mov
stos
popa
dec
cmpsl
lea
imul
clc
or
adc
add
scas
fxch
inc
and
push
fwait
dec
je
rcrb
adc
cmp
dec
push
orl
push
mov
mov
idiv
xor
push
and
xor
mov
pop
mov
sub
and
xor
aas
int3
mov
stos
adc
negl
dec
std
flds
sub
aam
and
loopne
or
add
cmp
and
aam
test
and
jmp
push
pop
mov
shll
push
sub
push
mov
push
dec
mov
dec
xor
xchg
testb
sub
filds
jne
xlat
push
daa
cltd
fcomps
out
mov
pop
mov
and
fsubrl
xchg
mov
push
int
outsb
or
jnp
jae
push
cltd
mov
jl
insb
mov
in
cmpl
dec
sub
sbb
rcl
incl
or
aam
test
fbstp
bound
sarb
jp
xchg
jo
nopl
inc
xor
test
movsb
and
rcl
les
scas
lock
inc
dec
enter
push
mov
loopne
mov
mov
aas
push
insb
test
jl
test
in
inc
sbb
xlat
ret
jbe
rolb
iret
and
lea
stc
add
lret
add
aas
aaa
add
decb
popa
cmp
ret
jnp
push
rcll
or
inc
ds
enter
test
jo
jno
sub
enter
loopne
call
loopne
ret
aam
lea
mov
mov
mov
jo
ret
pop
jae
push
test
subb
loopne
and
xchg
inc
call
adc
lock
and
pop
push
idivl
ret
xchg
or
dec
pop
aaa
negb
mov
mov
lds
sbb
or
or
add
in
pop
inc
in
addr16
outsl
fucomip
mov
add
adc
cmp
xchg
in
xor
push
fdivs
daa
pushf
or
mov
mov
cmp
data16
jl
aad
mov
jo
bound
pushf
sub
push
jmp
and
mov
arpl
cli
mov
loope
pop
es
data16
rolb
fmuls
pop
ret
dec
decb
addb
push
data16
add
jae
aam
adc
test
add
pop
push
lods
dec
or
jns
or
fisttps
jmp
imul
jmp
dec
les
dec
and
mov
or
mov
jnp
out
dec
pop
jne
adc
mov
cmp
cld
push
mov
cwtl
pop
adc
inc
scas
sub
jp
cmp
cmpl
imul
xlat
imull
aam
or
sahf
lods
dec
mov
subb
js
or
daa
js
ja
mov
add
sahf
test
sbb
sub
pop
out
sbb
xor
pop
clc
subb
dec
shl
and
and
sub
and
aam
and
hlt
xchg
loopne
mov
sti
aas
jge
xchg
cmp
push
or
in
test
add
shll
stos
lock
add
and
das
xchg
mov
sub
fcoms
mov
xchg
pop
xor
ret
sbb
inc
jecxz
ja
sub
sub
fsts
sbb
or
movl
sbb
push
rol
call
dec
jnp
cmp
add
fsubr
loope
cmp
in
fisttpl
or
lret
pop
ss
xlat
in
dec
inc
mov
mov
loop
inc
aam
lret
pop
jnp
inc
test
mov
hlt
inc
mov
inc
movb
push
rclb
mov
setge
daa
cmc
or
mull
sub
fdivrs
movsl
sub
imul
xchg
sbb
popa
push
mov
sar
mov
add
js
aaa
pop
jecxz
cltd
and
repnz
std
daa
aam
arpl
in
mov
add
add
cmp
jle
push
and
and
sarl
outsb
loopne
aam
dec
push
cltd
fs
shlb
push
adcl
sub
or
daa
ror
adc
jne
orl
and
add
aam
aam
or
and
in
adc
inc
add
in
test
sub
or
or
mov
mov
ficoml
mov
push
je
mov
pop
or
pop
popf
or
stos
add
in
add
test
outsl
pop
leave
out
loopne
mov
leave
iret
mov
dec
or
test
add
jo
nopl
mov
daa
out
mov
sbb
adc
repz
sbb
mov
fcoms
shll
out
add
jg
in
and
ret
mov
lret
push
ret
mov
jns
call
cmp
and
sbb
in
pop
daa
fisttpl
faddl
adc
int
mov
add
and
add
or
mov
leave
ret
in
jl
int3
arpl
sub
into
stos
ret
pop
mov
scas
fadds
xchg
adc
sarl
jno
nop
mov
cld
xchg
fs
cld
jne
pushf
je
push
jae
add
xchg
test
inc
add
push
lret
sti
sub
push
add
hlt
adc
adc
fs
cwtl
adc
aaa
sbb
and
mov
fs
push
loopne
je
adc
dec
dec
subb
inc
pop
lcall
xor
ljmp
jnp
scas
inc
mov
mov
mov
pop
in
or
fcoms
shll
push
dec
call
add
test
xor
add
insl
ficoml
pop
mov
aam
fcoml
push
clc
mov
outsb
adc
mov
test
ffreep
aad
mov
add
jo
xchg
cmpb
jnp
rorb
or
ja
out
loope
mov
sarb
out
inc
mov
adc
enter
js
je
add
lea
ja
popa
mov
fdivrp
jno
mov
or
loop
in
and
mov
push
xchg
cli
lea
mov
dec
xchg
aas
imul
pop
mov
lods
mov
sbb
jbe
test
lret
lock
rolb
lret
cmp
clc
inc
and
test
xchg
xor
xor
ja
adc
enter
fistpl
jge
dec
aam
mov
mov
clc
sarb
in
in
in
dec
inc
out
cmpb
add
add
push
shlb
movsb
jo
mov
inc
dec
and
jo
sahf
inc
in
pop
cwtl
push
sub
dec
fdivs
push
add
enter
jb
notb
sub
pushf
int3
sub
mov
add
jno
fmull
sub
or
leave
fists
mov
push
push
ror
mov
cmp
mov
cmc
inc
notl
repnz
cmp
cmp
orl
rep
jbe
sbb
ja
fistl
ds
movsl
xor
sbb
mov
outsb
push
xor
stos
inc
push
xchg
cmp
jns
sub
jmp
xchg
adc
cmp
push
xor
jmp
pop
dec
shrl
repnz
in
xchg
int3
inc
test
icebp
and
add
int3
movsl
or
mov
pusha
and
in
sarb
jne
sub
adc
out
popf
pop
scas
add
addb
movsb
rclb
push
fs
inc
movsb
cld
jo
push
push
mulb
pushf
pusha
sti
cmp
dec
lea
out
imul
add
jae
jb,pn
jbe
mov
imul
xor
aas
mov
sbb
dec
sub
and
cld
inc
sub
sub
add
push
clts
jbe
cmp
mov
orl
sbb
in
push
sub
or
mulb
xor
mov
inc
cmp
leave
or
fildl
and
xor
inc
ret
add
adc
push
xor
call
and
dec
jl
or
clc
dec
clc
mov
and
testl
or
arpl
jl
xlat
cmpl
inc
cltd
or
add
adc
popf
mov
add
rorl
or
pop
gs
fists
sub
add
sub
test
mov
cmp
mov
fbld
fldl
aam
cld
xchg
push
push
add
dec
jne
rcll
jae
scas
or
clc
inc
or
js
adc
adc
call
cmc
stc
nop
test
jp
or
addb
push
push
and
mov
jne
icebp
mov
inc
outsl
loopne
call
push
inc
xlat
add
push
inc
addl
sub
push
xor
inc
pop
enter
sub
cmp
jo
jmp
sbb
add
and
mov
test
mov
mov
inc
push
pop
sub
loopne
jno
mov
popa
test
mov
mov
aaa
pop
mov
push
mov
xor
add
xor
push
test
test
popa
push
pop
test
movsl
int3
ljmp
int3
in
loope
inc
inc
add
push
add
and
and
or
sbb
jae
sbb
add
inc
pusha
mov
stos
ret
or
add
or
inc
push
loopne
cmp
mov
pop
adc
js
mov
push
add
subl
addb
in
adc
rcrb
ja
test
or
lahf
shll
xchg
push
cli
inc
add
add
loopne
sahf
movsl
sub
lcall
stos
adc
scas
jge
emms
add
scas
and
sbb
add
dec
sbb
testb
ja
adc
adc
es
js
sbb
xchg
cld
ja
int
incl
fcmovnb
sbb
jle
push
inc
fldl
call
clc
fstpl
sbb
sbb
push
lcall
fnstsw
test
and
add
xor
or
xor
and
dec
and
add
dec
sbb
cmp
mov
outsb
test
cltd
and
imul
sbb
jns
push
dec
cltd
in
loop
jle
sbb
aaa
test
movsl
cmp
outsb
or
bound
or
cs
or
xorb
push
pop
mov
adc
sub
cld
les
adc
add
mov
sbb
jns
mov
out
sbb
fimull
or
xor
je
and
scas
out
push
call
fiaddl
aad
sub
enter
xchg
jne
ljmp
adc
sarl
roll
in
sbb
es
mov
dec
jle
sub
add
adc
add
rcrb
rclb
or
inc
mov
lds
out
fimuls
repz
mov
lds
lret
sub
jl
jmp
push
lea
mov
addl
les
ret
sarl
sub
shrl
shrl
lahf
ret
adc
das
sub
subl
add
test
daa
aam
stos
push
mov
inc
rcr
adc
cmp
imul
scas
mov
push
pop
shlb
xor
aad
jle
das
inc
sbb
imul
je
push
jnp
push
jmp
mov
neg
sbb
inc
add
pop
add
lods
cmp
inc
adcl
inc
mull
cmp
daa
jo
arpl
sbb
fldcw
sbb
add
mov
pushf
and
cltd
mov
add
push
mov
push
sub
filds
sub
mov
inc
and
adc
push
add
mov
cmp
rcrl
sbb
sub
fldt
and
fbld
add
fcoml
mov
stos
or
clc
jne
hlt
pusha
dec
clc
shl
xor
ss
imul
push
mov
sbb
dec
jg
push
push
pop
shrb
loope
push
xor
cwtl
loopne
xor
daa
mov
jae
mov
mov
or
das
aad
mov
adc
mov
or
push
fildll
mov
fmull
mov
sub
mov
mov
push
push
dec
or
sub
enter
or
jae
mov
cld
dec
jg
pop
fs
arpl
setl
mov
or
dec
shlb
mov
cld
jl
ds
sub
aas
jl
cmp
adc
xchg
loop
mov
rorb
loopne
add
lea
mov
mov
pop
fbld
sahf
arpl
lret
gs
repz
jbe
xchg
jp
int3
ds
aaa
dec
pop
sbb
jnp
push
stos
mov
adcl
lahf
fsubr
es
xor
test
mov
push
cwtl
adc
mov
aas
pop
add
xor
mov
ret
stos
cmp
cltd
cmc
rolb
or
hlt
and
inc
jmp
lcall
adc
and
or
icebp
jmp
jg
adc
lret
xor
cmp
cmp
stos
aas
test
pop
stc
and
jb
jle
xor
js
add
cmpl
in
push
lds
pop
add
sbb
int
out
dec
and
inc
push
fsubrs
dec
cmp
dec
popf
sbb
mov
jecxz
and
adc
and
dec
jl
fistl
add
sbb
fnstenv
mov
outsl
cmp
jecxz
mov
pushf
pop
rcl
and
xor
or
in
inc
nop
and
imull
lods
test
rcrb
and
jg
shlb
cmp
lcall
pusha
pop
data16
ret
and
movsb
cmp
in
push
imul
imul
adc
dec
dec
shll
test
cmp
jle
cmpl
sbb
inc
sbb
xor
dec
sbb
fcoml
sahf
jmp
or
sbb
ljmp
and
or
jmp
sbb
fcoms
dec
movsl
adc
dec
push
or
hlt
fmuls
and
and
inc
rcrb
jmp
jmp
push
sbb
mov
sarl
arpl
push
mov
ss
lea
pop
pop
adc
ffreep
dec
jl
xor
fildll
orl
scas
sub
and
lret
jecxz
pusha
mov
sbb
add
cmp
sub
add
or
shl
or
test
ds
sbb
xor
pop
mov
call
cmc
mov
lea
mov
sarl
dec
lods
sub
or
imul
sbb
scas
xchg
or
aad
int3
dec
bound
push
lock
pusha
push
inc
or
inc
test
adc
push
fcoml
push
mov
subb
jge
sub
xor
out
push
icebp
cmp
adc
jge
fwait
or
test
adc
dec
mov
fisttpll
ss
mov
or
push
cmp
and
or
push
add
addb
test
dec
lock
cwtl
test
stc
mov
push
test
test
fwait
pushf
push
in
adc
adc
push
shl
or
fucomi
push
test
addr16
lock
pop
sbb
add
imul
pop
fs
inc
push
fwait
aaa
bsf
pop
push
inc
mov
fldenv
andl
xor
icebp
add
lea
int
and
xchg
movsl
push
dec
push
popa
pop
xor
lret
vlddqu
xchg
sbb
push
pop
sarl
dec
repnz
inc
insb
repz
or
or
sub
movsl
sbb
xchg
sahf
fs
xchg
xchg
cmpsb
aas
lea
xchg
mov
mov
and
imul
push
dec
loop
sbb
adc
cltd
scas
pop
in
cmpsb
es
pop
call
and
mov
lea
sbb
xor
xor
or
popa
fs
pop
pop
std
adc
mov
insl
fisttpll
roll
lods
jg
push
push
add
sub
sub
stos
inc
lods
movsb
xchg
mov
mov
mov
xlat
pop
mov
or
popa
mov
ficompl
in
pop
mov
xchg
lret
inc
xor
int3
lret
mov
into
and
call
loopne
push
mov
pop
xor
int
mov
test
pop
push
mov
add
sbb
pusha
mov
mov
or
cmp
pop
push
sbb
xor
addb
or
iret
pop
and
push
lods
gs
xchg
push
sub
push
fdivl
cmp
mov
adc
das
lods
in
fdivrs
rorl
clc
inc
je
inc
or
fldt
int
test
in
lock
loope
mov
aaa
sbb
inc
jne
adc
jne
adc
rorl
push
ds
fists
dec
inc
push
dec
adc
cmp
and
sbb
inc
adc
loopne
pop
divl
inc
mov
shll
pop
xor
push
mov
push
xor
js
push
push
lea
pushf
sbb
dec
fstpt
push
les
dec
mov
push
inc
cmp
insl
pusha
adc
adc
and
int
adc
std
adc
icebp
inc
ffree
xchg
mov
push
es
xchg
and
inc
aas
aas
movsb
add
and
ficomps
add
push
repnz
movl
xchg
mov
jno
xchg
popa
movsb
inc
pop
js
mov
sarb
out
inc
xchg
ret
pop
cmp
or
jne
or
sub
dec
je
hlt
ror
ret
add
imul
push
imull
or
das
sbb
and
add
jge
inc
or
pop
mov
sub
push
jb
xor
inc
push
add
and
pop
je
out
push
dec
dec
jnp
inc
push
pop
cmp
push
mov
out
leave
jne
lahf
rol
mov
or
sub
xor
jns
add
add
xchg
sub
lods
cmc
lahf
int
sbb
xor
sbb
add
xor
fisttpl
jae
fs
cmp
sbb
add
call
in
call
add
and
cmp
add
dec
enter
orl
adc
add
inc
enter
roll
xchg
or
xchg
add
mov
aas
int3
icebp
inc
imul
jns
or
cmp
inc
or
repnz
jg
push
and
mov
sub
mov
arpl
xchg
mov
add
orb
out
rol
or
jnp
sub
out
aas
data16
add
pop
test
sub
aas
pop
insb
arpl
shrb
mov
adc
insb
sbbl
jno
out
je
bound
add
cmpsb
cld
cmp
mov
push
mov
fwait
add
jmp
sub
pop
add
or
xchg
jno
cmp
inc
data16
sub
fs
movb
popf
mov
enter
dec
mov
sahf
cmp
dec
adc
subb
mov
loop
add
lea
mov
jno
mov
pop
mov
repnz
in
aad
jmp
push
jbe
xchg
jnp
and
movsl
cltd
sahf
filds
imul
ja
fldt
daa
and
pusha
and
fdivl
in
jle
xchg
and
add
daa
je
or
xchg
in
mov
sbb
push
or
rolb
sub
enter
and
pop
insb
push
mov
inc
push
cwtl
jp
orb
sub
insl
add
adc
dec
outsb
mov
pop
jns
xor
xchg
xor
adcl
inc
xabort
push
xchg
add
jmp
sub
sti
mov
mov
or
fdivs
testb
nop
push
movl
add
pop
pop
cmpl
cmp
loopne
lret
sbb
cmp
or
pop
xorl
in
jns
dec
inc
pop
test
xchg
sub
popl
sbbb
xchg
xchg
or
ds
push
push
sahf
or
hlt
xor
lret
pop
pop
jmp
pop
cmp
sub
test
shlb
test
push
mov
xchg
pop
sub
cmc
adc
sbb
jb
jae
sbb
push
add
or
test
loopne
outsl
popf
mov
xorb
lcall
jae
in
test
mov
clc
sbb
push
icebp
push
mull
jne
fldcw
xchg
jmp
lcall
mov
stos
mov
mov
cmp
jns
subl
es
pop
frstor
jg
ret
sti
ficomps
fmull
mov
into
xchg
adc
cmp
dec
and
sti
cld
push
aas
push
dec
sbb
mov
xchg
mov
push
add
mov
add
cwtl
sar
cwtl
rorl
jecxz
mov
icebp
js
jb
insb
dec
jno
xlat
and
jge
dec
and
sub
jns
pop
fimull
loopne
pop
xchg
fadds
ljmp
add
mov
adc
js
xor
sub
pop
xchg
popa
push
mov
adc
push
adc
test
mov
mov
dec
sarb
sub
or
loope
flds
addb
dec
mov
clc
fs
rcrb
test
sbb
movb
lods
and
mov
popa
fildl
dec
inc
mov
outsb
add
adc
sbbb
dec
sbb
aad
dec
ljmp
add
fsubl
xor
mov
fsub
and
int
dec
das
sub
je
shll
add
pop
das
jge
adcl
adc
push
adc
mov
mov
push
mov
xchg
dec
movsb
mov
pop
or
mov
popa
adc
jmp
out
mov
adc
cmpsb
and
dec
adc
mov
in
jne
inc
mov
pop
xor
fadds
sbb
popf
push
or
mov
push
mov
jnp
mov
or
xchg
push
add
jae
scas
adc
or
into
pop
addr16
and
xor
xorb
or
lds
mov
sub
dec
cmpsl
std
cmpsl
xchg
mov
loopne
popf
or
or
cli
inc
sbb
add
xlat
ja
cmp
scas
sti
jmp
repz
push
pop
pop
mov
pop
push
addb
cmp
sbb
and
mov
pop
lcall
push
mov
add
ja
cs
xor
jb
add
sub
int3
xor
push
or
pop
subb
sub
mov
cwtl
lcall
jmp
fisttpl
dec
or
and
je
cmpsl
push
or
and
or
mov
jmp
pop
dec
mov
mov
jno
or
sbb
sub
adc
adc
cmp
jno
add
shrb
pushf
and
and
call
inc
mov
jns
insb
inc
pop
lahf
push
jne
xor
les
push
popa
mov
cmpsl
cltd
add
daa
add
sbb
mov
in
sar
popf
int
pop
rorb
xchg
or
negl
push
push
push
sbb
adc
popa
call
std
and
call
loopne
lahf
adc
mov
sub
and
pop
add
fs
jno
dec
loope
pop
call
movsl
xchg
pop
add
or
fdivrs
sbb
mov
es
or
push
mov
data16
mov
sub
add
sbb
or
aas
insb
push
int3
pushf
add
jecxz
test
and
push
xchg
in
loope
outsl
dec
shll
mov
push
mov
or
in
mov
pop
movb
aaa
push
ret
jle
aaa
pop
inc
add
xchg
aaa
mov
xchg
imul
ja
mov
test
push
sbb
pushf
push
cmpsb
cld
or
add
add
mov
lahf
pop
jo
ds
data16
ja
push
cwtl
dec
pushf
sbb
movsb
movsb
mov
lea
ljmp
shlb
mov
xchg
mov
lret
mov
xchg
insb
mov
outsb
inc
dec
adc
adc
inc
dec
test
test
test
push
addb
test
jg
cmpb
and
pushl
bound
cmpsl
iret
dec
inc
sub
adc
adc
inc
push
cltd
bound
pop
cli
gs
test
addb
mov
pop
fcoms
ljmp
mov
mov
inc
add
xchg
mov
cmc
cmpl
mov
push
add
sbb
int3
test
shl
cmp
arpl
lret
enter
mov
or
sbb
lods
lods
xchg
inc
js
mov
lods
mov
or
rorb
lods
lods
sub
or
mov
leave
xchg
imul
and
pop
xor
sbb
sub
sub
hlt
dec
pop
les
xchg
and
xchg
jns
adc
test
sbb
mov
test
and
add
das
cmp
js
add
xchg
xlat
or
jbe
adc
jmp
outsb
sbb
addl
fs
cmp
jp
rclb
pop
inc
test
jmp
mov
pusha
xchg
push
dec
push
add
pop
jo
insl
lret
cld
pop
mov
sub
in
inc
push
xor
fstpt
pop
jo
cmp
test
je
lea
cmp
mov
mov
aaa
jl
negl
push
jo
adc
pop
mov
insb
fcoml
dec
sahf
call
popl
cltd
stc
out
nop
loop
adc
cmpl
incl
push
push
or
push
or
insl
and
mov
sti
mov
add
pop
pop
ret
sbb
mov
push
inc
xor
pop
inc
xor
inc
and
pop
div
inc
leave
add
cmp
or
adc
jae
out
js
orl
popa
lea
arpl
lea
test
pop
pop
pop
orb
xor
dec
fists
inc
push
orb
cmp
dec
or
cmp
or
insb
push
mov
ja
stos
or
or
mov
jmp
mov
cmp
mov
sub
adc
jne
mov
inc
sbb
cmp
pop
je
cld
add
adc
jne
xor
add
push
sub
dec
test
add
lods
adc
idivb
aaa
mov
pop
subl
jae
mov
adc
jo
popa
pop
sub
fiadds
and
push
cs
outsb
cmp
push
lea
dec
sahf
aad
xor
in
mov
adc
rol
and
cmp
mov
mov
or
loope
push
or
es
mov
pop
loopne
push
inc
fstl
cli
adc
xchg
sub
mov
test
push
xor
nop
in
lock
xchg
sbb
rolb
push
or
sub
sub
pusha
loope
vpunpckhwd
mov
push
push
popa
push
cmpsb
fists
repnz
and
ljmp
out
xlat
adc
adc
add
enter
pop
leave
adc
sub
cld
inc
cmpsl
xchg
pop
cld
adc
rorl
and
fiadds
push
add
cs
and
test
cmp
inc
mov
leave
push
inc
ret
xor
mov
leave
or
push
add
xlat
inc
pusha
sbb
ret
and
addb
jne
inc
sbb
nop
and
das
adc
adc
push
lcall
inc
push
adc
mov
xchg
mov
mov
push
sub
cs
push
sbb
loop
jle
popa
inc
jne
xchg
or
adc
push
mov
ljmp
jo
mov
or
inc
stc
mov
fcmovbe
in
mov
inc
lahf
dec
mov
jge
ja
xchg
or
xchg
jg
adcb
cld
xor
pop
or
neg
test
sbb
or
sbb
pop
add
sub
lret
jbe
or
dec
pop
test
mov
adc
xor
movb
lcall
gs
jl
mov
or
dec
add
lock
into
cld
jb
jg
inc
xchg
repz
inc
push
mov
xchg
mov
test
into
jae
xor
lcall
inc
mov
xchg
dec
or
ds
lods
xlat
sbb
mov
adc
leave
push
push
call
add
mov
inc
jno
adc
insb
dec
dec
and
pop
or
jb
pop
xchg
movsb
mov
add
mov
push
ds
xor
ffree
das
jge
add
jae
mov
or
or
je
xlat
sbb
cmp
dec
push
jne
shll
es
push
lods
addb
icebp
cwtl
push
xchg
mov
mov
xchg
insl
loope
adc
jne
jmp
xchg
adc
cmp
sahf
add
sbb
hlt
add
mov
mov
add
push
imul
cmp
or
imul
adc
adc
adc
xchg
push
add
and
inc
dec
sbb
mov
add
or
je
scas
sub
xchg
test
push
xor
xor
xor
push
push
pop
orl
movsl
fnsave
mov
andl
cmp
bound
add
or
and
sbb
mov
add
cmp
push
sub
push
sti
adc
add
cmp
jb
leave
sub
dec
sub
xlat
imul
js
imul
test
adc
add
mov
mov
mov
pop
or
sahf
ss
ret
push
mov
out
push
repz
scas
out
mov
add
mov
pop
aaa
cmp
pusha
sbb
mov
mov
fiadds
jmp
out
movsb
and
loopne
stos
adc
xchg
aas
out
sbb
mov
jmp
call
add
clc
movsb
cmp
cmp
inc
lcall
adc
push
mov
call
bnd
cmp
xor
jmp
fcmovnb
mov
lods
pop
sub
pop
leave
add
mov
outsb
or
inc
push
add
pop
push
mov
rclb
adc
pop
mov
or
mov
mov
aaa
xor
cld
push
rcrl
aas
int
adc
in
sub
pop
add
fldenv
in
test
push
ja
sbb
orb
jge
imul
stos
xchg
push
jns
pop
mov
pop
mov
mov
ds
add
stos
push
mov
cmp
and
inc
xor
and
test
pop
push
mov
popa
xchg
pop
enter
push
jb
rcrl
dec
cmp
xor
imul
push
push
and
fsubrs
clc
push
fldl
enter
daa
lea
das
movsb
or
imul
das
mov
and
in
add
mov
daa
adc
cli
adc
hlt
dec
jno
mov
les
imul
inc
cmp
sub
push
jmp
cmp
push
pop
dec
sub
mov
inc
mov
adc
loop
les
adc
insl
mov
outsl
adc
cmp
jl
xor
inc
leave
sub
push
ss
mov
mov
mov
insl
jb
test
sbb
inc
mov
sarb
pushf
push
pushf
ret
shlb
adc
add
pusha
adc
dec
cmp
mov
adc
pop
and
xchg
jg
imul
sti
add
xchg
xchg
stos
in
jg
add
mov
jb
in
pop
addb
add
xor
push
leave
inc
adc
and
push
sbb
mov
inc
lahf
push
push
sbb
jno
pop
call
pop
xor
and
daa
loop
adc
push
andb
sbbl
pop
je
movsl
add
mov
pop
push
mov
arpl
cmp
jae
or
jae
shld
shl
ret
mov
xchg
push
inc
mov
lahf
cmpsb
nop
pop
xor
push
popl
pop
fs
pop
pop
mov
and
mov
inc
addr16
je
xor
cwtl
inc
repz
jne
pop
icebp
add
add
dec
cld
push
add
pop
lods
gs
sbb
fwait
jecxz
or
cli
xor
gs
ficompl
adc
adc
hlt
cmp
adc
xor
in
dec
outsb
xchg
call
add
mov
push
inc
add
and
add
aam
enter
mov
dec
xor
out
pop
in
rorl
cmp
adc
in
add
gs
cmp
scas
jb
lea
jns
sbb
inc
jecxz
xor
add
inc
jp
mov
inc
imul
imul
sbb
fs
inc
adc
sbb
addr16
push
cmp
loopne
gs
mov
sti
shl
push
adcb
push
inc
fdivrl
repnz
rcr
dec
arpl
xor
rolb
mov
mov
out
fcomps
ret
test
xor
sub
mov
cld
jo
and
add
inc
or
dec
pop
xchg
fld
cmpsb
push
inc
sarl
cmp
inc
sub
cmp
imul
stc
adc
lds
les
lret
aas
loope
sub
das
popa
jmp
push
arpl
subl
ret
push
cmpsl
in
jbe
lods
add
and
add
dec
or
cld
add
subl
sub
dec
xor
imul
xsave
push
cmpsb
lret
shlb
std
add
add
pop
fisubrl
mov
jae
mov
or
mov
push
pop
xor
jmp
cmpl
les
or
xor
cmovs
ss
or
je
shrl
xor
jmp
ror
xor
inc
jmp
pop
add
and
testb
mov
or
xor
jge
hlt
scas
mov
or
imul
add
add
or
sbb
shr
lods
pop
hlt
mov
jg
xor
je
and
sbb
je
int
jns
xorl
xor
push
adc
inc
ss
iret
jmp
add
mov
or
jmp
adc
jmp
lahf
jmp
lods
jmp
mov
lds
adc
dec
or
cmp
out
push
arpl
aam
cs
push
mov
js
not
pusha
cld
adc
and
add
enter
inc
sbb
inc
push
sbb
loopne
ds
arpl
inc
add
fwait
sbb
cmc
and
lcall
jns
add
movsb
mov
mov
fnsave
fmuls
add
mov
sub
clc
fnstcw
mov
push
pop
enter
scas
and
jnp
cld
xor
jecxz
shll
notb
inc
push
fs
inc
divl
insl
jmp
and
jne
push
lret
or
push
add
call
cwtl
pop
xor
in
mov
enter
enter
mov
lock
mov
xor
sub
and
sbb
outsb
dec
push
les
adc
sbb
cmp
pop
mov
push
dec
das
or
cmc
inc
dec
rclb
outsb
lret
and
es
push
mov
lods
sub
mov
mov
adc
or
push
lods
roll
inc
lret
lcall
imul
inc
xor
mov
or
jns
out
lock
stc
add
xor
pop
lret
add
push
cmpsl
call
xchg
and
cmp
jo
xor
lea
dec
imul
or
xchg
jae
popl
sbb
xchg
xchg
or
or
or
les
sub
and
push
dec
or
push
fwait
sarl
jo
adc
mov
add
es
jno
sub
test
loop
mov
cwtl
lea
pop
rcr
sti
add
sbb
pop
outsl
push
sbb
shll
or
lods
je
in
or
dec
cld
scas
enter
in
cld
cld
cld
sub
xor
cld
cld
imul
arpl
loope
inc
and
rorl
pop
gs
sub
arpl
add
jmp
push
and
scas
idivb
inc
or
lods
cmc
sbb
hlt
sbb
loopne
jmp
inc
js
add
rcll
rcrl
fidivrs
test
into
test
and
sahf
mov
loopne
lret
leave
je
lret
cmp
enter
lret
adc
jmp
or
mov
sbb
push
push
cmc
or
es
imul
shl
add
mov
dec
xorb
cmp
je
stos
or
aad
jne
fcmovb
and
pop
pop
hlt
stc
rorb
or
xchg
sbbb
rolb
adc
inc
mov
pop
sbb
in
or
mov
dec
cmp
xor
xor
hlt
hlt
cld
xchg
or
xorb
std
sbb
mov
stos
movsl
push
addb
test
xchg
push
hlt
jp
or
test
xchg
fsubrs
mov
divl
mov
movsb
aas
arpl
push
push
lahf
push
and
rcr
push
lods
fstps
js
push
cld
test
xchg
imul
push
aaa
mov
jne
fistpll
cmpsb
imul
inc
cmp
sub
push
cmpsb
imul
add
jmp
xorb
mov
and
and
repnz
add
mov
cltd
or
nop
sbb
cmp
pusha
outsb
les
lret
mov
push
ret
adc
sbb
mov
xor
imul
push
int3
aam
xor
fildll
xchg
adc
sbb
sub
and
aam
push
sub
data16
inc
out
inc
jnp
dec
aas
and
fcoms
cmp
loop
xor
fnstcw
inc
lock
rol
nop
loope
cld
lods
and
or
mov
fwait
jns
test
mov
insl
lret
movsb
add
xor
ja
imul
inc
cmp
cli
push
fninit
pop
mov
adc
adc
jmp
add
xchg
loope
xchg
push
mov
shll
add
movb
test
sub
jg
cmp
mov
popf
jecxz
adc
xor
adc
loope
movb
or
adc
and
cwtl
sub
adc
loopne
add
cmpsl
xchg
and
xchg
addr16
orl
jmp
push
sbb
and
xor
add
daa
hlt
mov
xor
outsb
adc
add
cmp
xchg
fnsave
out
int
mov
adc
add
and
sbb
mov
shlb
mov
add
and
add
popw
outsl
mov
add
data16
int
pusha
roll
xor
or
or
pop
mov
testl
xchg
dec
adc
and
scas
sbb
add
lret
and
movl
seta
add
jmp
xor
xchg
or
fsubr
and
nop
loope
sbb
popa
jmp
int
fs
nop
or
add
adc
popa
in
scas
adc
add
sbb
dec
inc
outsb
jnp
adc
xor
aaa
test
mov
mov
sarb
cltd
scas
test
and
inc
lods
in
jg
pop
das
jns
dec
or
inc
mov
pop
and
call
filds
inc
dec
inc
out
sub
adc
js
and
loop
xor
inc
pusha
adc
ljmp
adc
or
jmp
jecxz
adc
add
adc
push
and
lea
and
jecxz
popa
sbb
sahf
pop
lock
scas
dec
and
jl
mov
test
xchg
mov
orl
lahf
sbb
jge
or
or
testl
in
or
mov
or
inc
mov
es
clc
in
in
push
sbb
add
sarb
push
dec
or
push
and
inc
mov
ret
ret
mov
mov
aaa
lock
movl
lods
sbb
xchg
pusha
cmpsb
lock
dec
inc
xchg
mov
call
popa
adc
or
add
shll
orl
mov
lcall
mov
lds
add
mov
js
inc
insl
insl
addr16
dec
mulb
add
sub
mov
jno
mov
and
and
inc
das
addr16
enter
mov
sub
jl
xor
fcmovnbe
sahf
xchg
mov
or
sbb
rol
pushl
pop
mov
lret
jg
mov
mov
sbb
addr16
or
mov
push
js
aam
out
incb
inc
in
add
add
rolb
dec
jle
outsl
out
jle
sbb
push
data16
out
insb
sub
subl
adc
or
add
pop
mov
fst
push
add
notl
pop
jg
pop
xorb
mov
inc
popf
jg
je
outsl
mov
int3
sbb
or
addl
fsubp
push
or
rorl
les
clc
and
inc
jecxz
push
les
push
push
cmpb
jnp
cmpsb
xchg
stc
xchg
jo
push
adc
add
gs
sahf
pop
sub
insl
fadd
lret
xor
and
pop
sbb
test
push
loopne
fstps
leave
fcom
shl
mov
jp
inc
push
push
mov
test
add
jmp
repnz
test
and
lods
in
add
mov
shlb
inc
repnz
dec
sbb
push
sbb
sub
sbb
and
and
dec
enter
inc
jns
lods
xor
dec
sbb
push
cld
push
cwtl
je
mov
xchg
in
jmp
inc
hlt
loope
movsl
lcall
aam
add
addl
add
or
cli
movsb
sub
sbb
mov
out
shll
pop
and
leave
add
push
enter
or
into
or
jecxz
dec
xor
xor
jle
cwtl
rcr
nop
xchg
mov
xor
addb
aaa
jns
mov
das
sub
data16
sbb
inc
cwtl
dec
rolb
sar
sbb
stos
add
cmp
jge
or
addr16
pusha
cmp
add
xor
in
adc
es
shll
dec
add
in
mov
sub
ret
jg
and
xor
ret
sbb
xor
xor
jb
xor
mov
xchg
addb
push
movswl
push
cltd
fsub
adc
adc
adc
inc
push
pop
sbb
lcall
popa
push
in
or
sub
lock
add
mov
adc
or
inc
call
dec
psraw
test
or
jae
inc
and
es
ja
add
cltd
cli
ss
into
and
adc
push
jg
push
push
xchg
mov
cmp
sbbl
loopne
insl
ss
cmp
dec
dec
mov
clc
ss
mov
icebp
jge
out
repnz
or
enter
loope
or
mov
and
addr16
add
and
adc
dec
push
pop
outsb
pop
inc
add
add
jne
stos
inc
rcll
dec
and
call
cwtl
dec
roll
aas
add
jl
aaa
push
aas
shlb
mov
and
aaa
lods
sbb
or
xchg
aam
and
icebp
and
adc
lea
mov
pusha
mov
lods
cs
push
xchg
pop
dec
and
mov
add
sbb
mov
aas
imul
ljmp
in
xchg
fs
lea
pusha
jo
hlt
add
xor
xchg
lcall
or
or
inc
mov
and
xor
or
lret
adc
sbb
aaa
nop
mov
cmp
sub
pop
push
xchg
sub
sub
xor
xor
and
sbb
and
cmp
pop
push
xchg
inc
inc
inc
pop
push
xchg
gs
inc
dec
dec
push
xchg
and
xchg
and
push
dec
and
pop
dec
pop
and
xchg
dec
pusha
dec
pop
push
xchg
gs
push
and
xchg
and
je
and
js
jl
insb
movsl
nop
cmp
add
test
xor
mov
enter
nop
inc
or
and
xchg
inc
cwtl
xor
nop
mov
pushf
sub
lret
enter
clc
xor
and
fadds
mov
or
cmp
outsl
mov
nop
push
xchg
mov
jno
fisubs
cmp
adc
inc
jb
and
leave
and
mov
sub
in
mov
xor
mov
dec
mov
cmp
dec
mov
dec
inc
dec
in
mov
dec
push
push
mov
dec
mov
pusha
dec
mov
dec
fs
insb
jo
xchg
dec
mov
xchg
push
imul
push
es
push
nop
add
cwtl
add
inc
pushf
mov
movsb
test
push
and
aas
mov
cmp
cmp
cmpsb
daa
push
inc
mov
rcr
or
mov
inc
push
xlat
and
push
push
fidivrs
stos
mov
out
aad
mov
mov
roll
movsb
pop
inc
jo
add
ficompl
or
repnz
mov
mov
mov
xchg
mov
negb
cmp
je
test
call
lods
inc
sbb
ss
outsl
adc
in
mov
gs
mov
outsb
mov
add
cmpsb
and
lret
and
lea
adc
inc
push
xchg
iret
insb
xor
call
rorl
cmpl
add
rolb
pusha
cmpsl
fldcw
mov
jo
inc
js
push
ds
or
test
xchg
popa
sub
ja
fistpll
cmpsb
xchg
iret
add
or
pop
jg
enter
imul
and
inc
fildl
fwait
insb
cmp
cmp
or
cmp
jmp
xchg
add
addr16
pop
loop
rolb
pop
push
mov
xor
cmp
pop
xchg
mov
add
xchg
addr16
adc
push
mov
sbb
or
sbb
and
call
cmpsl
lea
pusha
mov
push
inc
std
mov
jo
cmp
aad
add
inc
cmpsb
scas
cmpl
iret
add
push
imul
cmp
sbb
pop
pushf
nop
inc
xchg
sbb
mov
rcl
dec
in
and
in
and
xlat
push
xor
sbb
sub
sub
leave
xor
push
sub
add
xor
xor
push
gs
inc
icebp
jg
push
bound
call
mov
and
je
rcll
sbb
movb
cmpb
jmp
pop
mul
fbld
sbb
push
push
push
icebp
inc
ret
out
jae
inc
mov
lcall
add
push
xor
push
arpl
add
lea
pop
shrb
andb
add
xchg
push
call
xchg
jg
lea
mov
mov
mov
and
call
in
cmp
dec
lods
push
mov
es
iret
aaa
or
adc
push
jns
adc
repnz
fiaddl
jbe
add
mov
cmp
xor
adc
call
loopne
lods
mov
jno
mov
jg
and
and
pop
add
shrb
or
adcl
lret
xor
add
shlb
add
icebp
add
pop
push
and
mov
mov
jmp
enter
or
add
cmc
and
fstps
dec
in
int3
repnz
push
push
and
or
test
add
mov
loopne
or
jg
pop
pop
daa
xor
pop
jmp
push
call
in
or
or
inc
cmp
mov
mov
jns
enter
je
inc
ret
pusha
aam
inc
fcmovb
cmp
dec
dec
fwait
mov
xor
popa
aam
aam
cwtl
out
movl
jl
nop
and
mov
mov
mov
outsb
add
sub
fcoms
add
clc
aas
shll
bts
jmp
stc
std
inc
daa
jne
inc
mov
sub
mov
jae
mov
leave
and
jg
daa
mov
jne
repz
ja
pop
inc
push
and
dec
fistpl
pop
mov
cmp
xchg
inc
mov
pop
sbb
or
cmp
popf
sub
mov
xor
iret
dec
mov
push
push
clc
mov
adc
pop
out
sahf
push
sbb
push
pop
xchg
xchg
or
iret
xor
in
dec
xchg
mov
je
arpl
lock
mov
into
pop
nop
adc
mov
inc
leave
push
sahf
sbb
ljmp
dec
loopne
mov
into
sub
imul
push
repnz
das
aad
xchg
lcall
test
jnp
aam
push
xor
inc
add
add
ror
stos
adc
aam
fmuls
dec
adc
add
push
inc
sbb
sbb
adc
rcrb
and
clc
aas
inc
pop
xchg
or
dec
ljmp
js
push
xchg
sbb
pop
std
aam
push
pop
fstpt
or
aam
lea
lock
jne
pusha
fistps
sub
or
or
mov
xor
xchg
fbld
cli
sub
and
clc
add
cld
scas
xchg
imul
inc
imul
adc
cld
adc
repnz
mov
and
hlt
mov
push
fs
sbb
push
cli
jge
mov
and
add
jb
pushf
and
pop
jl
test
rcrl
lods
movsb
aas
test
lea
xchg
inc
dec
sbb
push
mov
push
test
adc
lea
or
pop
insb
dec
and
inc
mov
and
add
push
addl
and
add
mov
dec
mov
fucomip
or
push
and
sbb
into
and
jecxz
mov
ret
cmp
lea
mov
jo
dec
lret
lods
dec
mov
add
or
xor
ds
mov
xchg
faddl
movsl
add
js
mov
or
bndstx
inc
les
scas
jecxz
call
adc
mov
sub
sbb
sbb
jno
jmp
loope
or
ret
inc
fsubl
jb
and
or
or
popa
ds
std
bound
mov
lds
pushf
add
jno
out
xor
popa
push
aam
test
inc
arpl
sbb
or
and
mov
and
xchg
add
movsb
ret
xor
ds
or
adc
jno
jnp
add
xchg
push
arpl
or
or
push
orl
sahf
dec
xor
push
push
and
out
enter
mov
leave
nop
pop
push
pushf
add
dec
and
sub
xchg
insb
in
mov
loop
sbb
xchg
in
adc
push
lods
jmp
stos
cmp
cmp
and
ret
dec
adcb
xor
lea
cwtl
sbb
cmpsl
cmp
iret
push
lcall
in
or
jp
jne
sub
push
pop
adc
push
jne
out
inc
or
mov
cmpb
adc
popa
scas
sbb
orb
adc
mov
test
aas
outsl
ret
rolb
inc
and
dec
xorb
push
ret
imul
mov
movsl
and
nop
test
adc
inc
pusha
inc
outsb
popa
fstps
lret
xchg
je
test
cld
push
inc
adc
je
test
cmp
lods
jmp
sub
lds
shlb
inc
add
shrb
add
add
rcll
cltd
push
inc
xchg
imul
sbb
cmpl
loope
add
lock
lret
in
inc
add
add
loopne
arpl
sub
cmp
pop
push
xchg
xor
sahf
hlt
pop
sub
ja
mov
push
inc
and
icebp
mov
popa
ja
fmull
add
je
test
xor
fldt
je
adc
ds
jmp
inc
mov
mov
mov
out
rcr
rolb
xor
mov
inc
inc
inc
inc
xor
and
push
sahf
das
and
dec
push
and
and
sub
push
arpl
sub
icebp
jle
adc
jge
mov
mov
adc
mov
aam
inc
in
or
cmp
inc
adc
outsb
xorl
mov
add
cmp
test
pop
adc
and
jns
push
inc
rorl
dec
mov
popa
jl
jge
loopne
shlb
mov
add
mov
sbb
or
jl
inc
jg
stc
sub
frstor
sub
mov
jne
outsl
sahf
imul
push
sbb
lods
leave
ja
mov
push
fimull
enter
adc
inc
lcall
jg
aad
add
movsl
aam
sarl
xchg
ss
popa
bound
add
push
in
inc
or
cmp
fdivrl
add
push
xor
adc
xchg
push
mov
push
cmpl
pop
push
push
mov
or
stos
add
ret
and
shll
addr16
inc
and
xchg
lret
sbb
push
lds
adc
and
lea
or
jne
les
inc
xorb
mov
and
add
or
shl
jae
cmp
mov
sbb
jle
pop
mov
in
push
js
or
in
mov
loop
add
scas
push
add
xchg
lea
fistpll
ss
pop
ret
sti
clc
push
andl
xchg
dec
sub
fstp
inc
test
pop
std
subl
dec
dec
pop
lock
mov
lea
mov
xchg
inc
test
ja
push
sti
xchg
xchg
das
or
loope
mov
cmpl
jne
xor
sub
loopne
outsl
jmp
imul
sub
xchg
inc
sub
jg
popa
daa
sbb
push
mov
rclb
pop
xchg
popf
sbb
xor
push
imul
inc
xor
sbb
sub
hlt
scas
xor
add
icebp
or
cmp
jb
inc
inc
in
xor
sub
add
das
lea
xor
sub
and
and
inc
test
push
filds
pop
popa
sbb
inc
jbe
fmuls
pop
pop
or
pop
movsb
cmp
mov
hlt
hlt
push
rcrb
xchg
mov
cmpsb
adc
adc
mov
insb
popa
pushf
cmp
idivl
pop
fcmove
and
xchg
fcompl
shl
xorw
mov
or
fldl
or
clc
lcall
fld
fildll
adc
fisttpll
dec
mov
fnsave
cmpsb
leave
adc
pop
jo
cwtl
jmp
dec
add
nop
popa
push
repz
sbb
inc
dec
mov
cli
xor
or
je
test
sbb
dec
mov
fistl
insb
test
scas
lods
pop
and
popa
add
ret
popa
sbb
add
nop
insb
xlat
cwtl
or
mov
xchg
add
inc
and
sub
sbb
pop
sub
addr16
or
adc
xchg
div
sub
mov
mov
add
popf
ss
sbb
dec
lock
xlat
dec
ret
mov
jbe
cmp
push
lahf
fidivs
sub
daa
and
lods
hlt
fcmovne
stos
xor
or
in
xchg
mov
inc
xlat
add
movsb
hlt
nop
dec
xor
je
add
or
xchg
mov
inc
push
mov
inc
pop
data16
iret
mov
popf
addb
ja
mov
lret
inc
sub
lock
xor
sbb
inc
clc
cmp
xchg
fsubs
dec
and
mov
pusha
loope
jne
pop
add
ss
mov
pop
mov
mov
sti
sbb
sub
sub
sahf
jbe
popf
daa
pop
add
adc
in
add
jl
pop
sub
in
or
ret
cmp
add
pop
lret
roll
push
dec
sbb
adc
adc
add
and
cmp
jle
sbb
sub
and
ret
sub
out
mov
mov
lods
mov
es
jno
ss
imul
rcrl
pushf
or
imul
andb
cmp
fs
or
xor
inc
push
test
fldl
movsb
sbb
les
addb
lods
les
in
daa
aas
jecxz
call
nop
jecxz
cwtl
pusha
nop
mov
or
pop
enter
inc
push
mov
and
daa
inc
bound
lret
enter
xor
addr16
int3
cmc
add
das
cmc
adc
sahf
mov
scas
sbb
les
je
cmp
pushf
xchg
xchg
cltd
adc
dec
out
mov
les
in
sbb
push
dec
and
push
and
push
nop
xchg
inc
mov
sub
adc
xchg
mov
out
add
movsb
loope
bound
jns
inc
adc
test
or
popa
dec
inc
arpl
arpl
aad
test
pusha
add
adc
incl
pushf
jmp
inc
es
push
stos
pushf
or
jp
mov
xchg
pop
pop
sub
adc
int3
or
pop
pop
mov
pop
or
pusha
mov
cmc
jecxz
stos
xor
mov
inc
xchg
and
mov
cs
imul
pop
mov
inc
pop
or
out
inc
xchg
dec
dec
testl
adc
es
jno
push
xor
mov
jmp
push
leave
icebp
jg
pop
xorl
cmpl
lods
jge
jle
cld
push
adc
mov
pop
lds
dec
stc
jge
lea
or
cmp
lcall
jo
mov
pushf
orb
cmp
sbb
sub
nop
ljmp
dec
mov
das
loope
cs
jl
lds
adc
sub
fisttps
jp
cs
aad
jge
fbld
add
mov
shlb
shll
fld
mov
jmp
negl
nop
jmp
lea
push
or
push
add
cmp
mov
mov
in
fs
int3
xchg
adc
jge
dec
call
arpl
sbb
hlt
inc
sub
push
outsb
enter
in
mov
inc
enter
and
mov
fldz
push
pop
jge
call
mov
jnp
jae
adc
cmp
es
scas
jo
addr16
mov
popa
mov
xchg
mov
mov
clc
mov
inc
addr16
push
pop
fsubl
mov
mov
div
and
dec
pop
mov
mov
push
sub
je
stc
pop
add
dec
mov
or
xorb
imul
sub
loope
fwait
gs
dec
cmp
ret
fiaddl
nop
ret
sti
adc
int
pop
cs
mov
mov
stc
ss
inc
dec
imul
sarl
add
add
add
bound
aas
in
les
add
mov
push
jno
add
dec
and
add
add
push
push
add
pop
adc
insl
push
push
add
mov
out
and
int3
shlb
popa
sbb
orb
addb
popl
jg
nop
pushf
adc
test
dec
mov
out
adc
inc
or
lcall
mov
mov
lret
cmpsb
imul
pushf
test
adc
mov
scas
mov
loope
cwtl
xor
cmp
adc
xor
sbb
inc
add
vmwrite
cmp
adc
dec
outsl
mov
loop
pushf
dec
or
inc
out
add
sub
scas
shr
cmp
das
movsl
in
test
lods
loope
push
mov
les
and
mov
cld
sbb
xor
movsl
adc
lret
cmc
mov
fs
and
lahf
std
jo
fcoms
push
and
inc
test
adc
cmpb
imul
ret
add
out
and
inc
aas
add
out
xor
jmp
mov
and
popw
or
sub
xchg
push
push
hlt
fadd
jmp
sbb
rclb
imul
jnp
fildl
mov
xchg
enter
or
enter
inc
cmp
sbb
adc
mov
rolb
into
sbb
lret
loope
cmpb
pop
movsb
neg
roll
cmp
lcall
add
lock
cmc
sub
push
sbb
and
cmpsb
xor
pop
dec
adc
jg
add
xchg
int3
inc
jmp
dec
dec
xor
loopne
sub
adc
mov
sub
and
add
add
mov
mov
push
loope
push
repz
inc
sbb
jecxz
mov
aam
fdiv
mov
cltd
andl
arpl
iret
out
lock
cld
aad
test
dec
popa
dec
or
loop
inc
int3
scas
movsl
ret
mov
popa
in
jns
ss
imul
aaa
or
push
scas
inc
and
lret
push
and
fidivl
and
or
xchg
dec
jl
xchg
xor
inc
imul
cmp
add
test
stc
lret
jae
outsl
add
jmp
mov
ret
in
pop
xchg
add
pop
mov
sub
jb
sbb
sub
imul
insb
nop
sub
push
mov
lods
dec
add
rol
push
in
test
sbb
sub
push
mov
pusha
mov
push
shrb
mov
cmpsb
lret
inc
lock
dec
nop
sbb
lods
dec
loopne
add
dec
mov
mov
sub
or
or
inc
or
cmp
in
fsubrs
movb
inc
movsb
movsl
push
mov
and
out
and
and
addr16
das
cmp
xchg
pusha
aad
inc
inc
mov
adc
rcll
fldl
push
mov
pop
andb
or
xor
cmp
nop
add
push
mov
clc
inc
leave
add
arpl
nop
cmp
and
mov
loopne
hlt
lea
push
xchg
out
pop
inc
mov
dec
bound
mov
cmp
testb
inc
inc
addr16
mov
add
mov
jno
add
loope
and
test
add
aad
pop
add
sbb
pop
lock
or
dec
pusha
adc
sbb
insl
test
in
xor
mov
pop
jecxz
mov
scas
pop
xor
in
imul
mov
insl
jmp
cmp
pop
fs
inc
fstl
outsl
in
pop
add
insl
sbb
inc
push
jnp
mov
adc
jmp
adc
dec
and
in
test
adc
shll
mov
push
inc
test
lods
push
push
push
lahf
in
add
and
push
popl
sub
xor
jns
sbb
and
jb
aad
dec
mov
xor
divb
pop
or
cmp
cltd
or
hlt
pop
pop
pushf
adc
and
sub
or
nop
cwtl
pop
scas
xor
mov
scas
leave
jl
insb
or
add
in
sub
jbe
push
adc
subl
dec
sarb
or
dec
mov
test
add
mov
add
test
decl
shll
js
out
sbbb
jmpw
ja
fsubl
test
fucomip
fimuls
lods
mov
or
pop
lods
mov
inc
incb
push
jb
adc
push
xor
cs
rol
pushf
outsl
adc
imul
cmp
and
fsts
adc
add
adc
test
cmpb
add
hlt
sar
mov
into
or
iret
in
xor
sbb
mov
in
jge
dec
mov
push
dec
mov
addr16
mov
sub
push
and
cld
mov
jb
inc
js
add
mov
xor
fcomps
nop
or
mov
sti
adc
sbb
mov
sbbw
sbb
mov
inc
mov
sbb
mov
sbb
add
adc
add
stos
or
push
or
mov
or
add
mov
popf
ja
cmp
jge
cltd
loop
jmp
lods
xchg
xchg
add
adc
mov
xchg
arpl
sbb
nop
or
inc
repz
aam
pop
ss
gs
arpl
pop
push
mov
inc
pop
xchg
mov
pop
adc
add
dec
xor
mov
cmp
jp
pop
sub
inc
enter
pop
or
push
cmp
jnp
fldcw
in
pop
sbb
push
fwait
lcall
dec
dec
fwait
push
insb
dec
rcrl
ds
add
cmpsb
imul
sbb
imul
add
or
int
repnz
push
push
pop
push
or
or
or
push
movups
jo
mov
add
adc
or
cmp
cmp
cmp
xor
lahf
in
sub
mov
jmp
fistps
lcall
ret
cmpsl
jg
xor
pop
mov
insb
cwtl
fisubrs
or
rorb
in
and
adc
scas
dec
mov
cwtl
adc
adc
xor
in
sub
inc
add
jns
aam
dec
adc
sub
pop
xor
sub
aas
mull
cmp
push
sbb
add
out
es
inc
and
pop
mov
mov
mov
test
lock
out
cmp
and
leave
clc
les
pop
imul
ret
adc
and
pop
je
andl
add
insb
mov
add
pop
cmp
ret
movsl
shrb
cli
sub
loopne
daa
xchg
push
ja
push
push
movsb
cld
in
or
push
aam
and
push
push
ja
test
sbbb
inc
dec
out
and
in
insl
jmp
or
add
inc
dec
xlat
add
sbb
jne
lcall
mov
fs
popa
inc
mov
es
and
jns
mov
out
add
fadd
push
xlat
push
stos
dec
dec
dec
mov
fcomp
fmuls
scas
fs
aam
aam
dec
sub
jns
jmp
lea
loopne
push
push
xor
cwtl
add
mov
je
int3
aas
sub
movsb
xchg
mov
adc
movsb
fidivl
push
fcoml
add
push
and
mov
jbe
popf
pop
adc
in
aaa
cmp
das
aam
or
lock
adc
lods
add
stc
lret
rorl
mov
out
imul
mov
rorl
insb
adc
push
jnp
lds
hlt
or
inc
sbb
in
add
xor
mov
jne
sub
push
hlt
cmp
aaa
push
sbb
enter
or
mov
andb
xor
mov
or
daa
or
adc
stos
push
or
shrl
mov
xor
scas
sbb
std
cld
mov
jg
push
push
nop
popa
cwtl
das
jecxz
or
inc
dec
inc
or
add
mov
sbb
aas
in
stc
mov
scas
loop
call
shll
ss
in
mov
add
add
or
dec
mov
push
pop
imul
push
pop
sbb
cmpsb
dec
push
pop
sbb
imul
push
subb
xchg
push
js
add
mov
and
mov
push
add
push
push
enter
test
aam
mov
add
gs
sub
push
push
xchg
aad
in
es
rorl
xor
adc
mov
push
and
push
test
sbb
or
loope
cmp
inc
adc
mov
and
inc
and
repnz
or
and
pop
or
add
pop
stos
sbb
sub
sbb
lret
sub
adc
fmul
outsl
movb
pusha
jmp
and
mov
and
lea
and
iret
mov
sub
xchg
mov
int
xor
negl
pop
mov
and
dec
mov
mov
mov
jmp
cmp
push
xchg
or
nop
cmp
bound
xchg
cmp
aam
aam
cmp
ret
les
leave
out
nop
or
insl
ja
cmp
mov
xor
loop
mov
je
pusha
pop
aam
pop
dec
mov
aam
pop
mov
and
mov
sbb
xchg
and
mov
rclb
sbb
iret
or
push
mov
int3
orl
add
test
fcoml
push
movb
ljmp
push
adcl
lret
or
add
fsubrs
push
inc
decb
subb
shrl
fsubl
clc
lahf
adc
les
rcl
mov
ss
or
test
mov
incl
or
je
sub
les
cmp
cmp
sbb
and
roll
and
sbb
pop
sub
lock
into
sti
push
or
popa
or
mov
push
fistl
push
push
gs
cltd
loope
lods
add
jl
fs
fisubrl
or
popf
jmp
cmpsb
xchg
cmpsb
scas
imul
push
scas
jo
jg
stc
jmp
mov
or
mov
mov
mov
outsl
pop
jge
push
es
mov
jns
sbb
push
cmp
ja
add
cmp
adc
out
jne
dec
jne
dec
push
out
xlat
xor
adc
lds
push
mov
fxch
sbb
andb
fistpl
mov
popa
mov
adc
mov
or
shrl
or
je
out
mov
add
push
loope
sub
jae
repz
je
jmp
fwait
or
jb
jecxz
push
mov
lcall
pop
fstp
adc
xorb
test
scas
nop
pop
adc
mov
repz
sbb
adc
or
jmp
push
inc
cwtl
cwtl
sub
shr
sbb
cmp
inc
rolb
mov
or
inc
sub
xchg
lret
shlb
and
lret
mov
lods
push
aam
cmp
dec
jns
and
pop
nop
loopne
push
shrl
loopne
rcrb
movsl
insl
push
jge
stos
sub
sbb
inc
fimuls
pop
sarb
test
stc
push
add
add
push
push
hlt
nop
mov
loop
lods
sarb
or
fmuls
pusha
leave
add
add
add
pop
xor
add
or
xor
jg
jl
push
mov
jbe
insb
mov
sub
loopne
dec
add
in
push
rcl
jae
add
xor
dec
push
or
xor
nop
fwait
or
notb
in
shlb
jle
lahf
mov
shl
cmp
or
add
fmulp
pop
int3
and
mov
repnz
push
or
push
or
mov
pop
icebp
add
or
and
add
sub
nop
dec
jecxz
dec
mov
pop
cmp
call
adc
inc
or
gs
add
add
mov
ret
addr16
mov
sub
test
xorb
daa
dec
adc
scas
subl
sub
jmp
xchg
mov
leave
jg
xchg
test
pop
in
and
cwtl
pop
inc
sbb
sub
cwtl
in
or
jnp
enter
loop
adc
add
or
popa
out
pushl
addr16
sub
out
sbb
cmp
scas
pop
repnz
mov
adc
cmpsl
dec
sbb
imul
or
div
pop
cmp
lock
data16
repnz
sarl
shlb
xor
aam
push
or
and
pop
inc
mov
nop
inc
data16
out
lock
xchg
xchg
addr16
rcl
icebp
xlat
test
jg
in
xchg
pusha
mov
shl
stos
push
dec
xor
sti
adc
mov
push
adc
and
rcll
scas
lret
pop
mov
repz
call
adc
mov
mov
adc
or
sbb
sbb
lock
push
iret
ret
hlt
push
call
adc
jg
movb
loope
test
push
sbb
push
sub
adc
sbb
sbb
or
fs
fs
insl
or
inc
xchg
or
ret
and
aam
xchg
into
fdivrs
cmp
push
pop
test
lock
mov
mov
mov
add
sub
add
jg
or
or
xchg
insl
adc
mov
mov
enter
pop
rclb
movsb
ss
idivb
add
jmp
cmp
lea
add
pop
jo
push
aas
fwait
enter
or
sbb
jo
mov
data16
lret
movb
je
mov
je
imul
sbb
lahf
lea
arpl
out
or
outsl
adc
inc
sub
ret
mov
and
and
lods
fsubl
inc
adc
jo
rcrb
btc
fstpl
xor
lret
call
movsb
outsb
pop
pop
push
aaa
mov
jnp
and
movsl
cs
push
movsb
outsb
mov
imul
and
ss
test
arpl
mov
imul
mov
mov
xor
jbe
sbb
push
xchg
fnsave
cmp
push
aam
ss
cmp
fistpll
xor
mov
add
jbe
imul
sub
jne
into
push
fildl
rorb
cmovns
outsl
jae
nop
mov
neg
pop
movsb
or
inc
pop
ljmp
jp
in
mov
sbb
js
faddl
xor
and
pop
mov
outsl
out
mov
inc
inc
push
sbb
jae
repnz
rclb
xchg
dec
cmp
imul
and
ror
push
push
lcall
lcall
aam
shl
dec
addr16
cmp
xor
imul
pushl
add
sub
push
mov
mov
cli
inc
nop
jbe
into
lret
movsl
jb
orl
xchg
dec
jle
js
test
jbe
nop
adcl
jo
movsl
imul
jbe
inc
into
or
pop
iret
add
fcoms
push
andb
sbb
add
scas
js
icebp
cmp
cmp
xor
cmp
push
sbb
mov
das
int3
sub
inc
add
adc
mov
xchg
imul
aaa
mov
jg
jle
popa
mov
dec
aaa
inc
inc
pop
imul
sarb
add
outsl
adc
sub
imul
pop
inc
fs
mov
and
xchg
mov
push
mov
sub
mov
add
int3
jecxz
add
pop
cltd
inc
mov
stos
adc
hlt
and
popf
lahf
loopne
or
inc
fwait
ss
mov
sti
pop
call
sbb
jno
lahf
jp
cli
add
repz
leave
rclb
sbb
into
and
test
mov
dec
cmp
add
loope
jo
jno
cmp
lods
in
inc
ret
add
sub
and
xchg
adc
into
add
inc
lock
dec
testl
pop
movsb
nop
sarb
jns
addr16
xchg
dec
in
popl
fcom
decl
and
shrb
mov
mov
or
cmp
add
sbb
sbb
ret
xor
scas
and
pusha
jp
sub
push
or
mov
jb
push
mov
call
and
xchg
mov
or
mov
add
gs
adc
fnstenv
jl
xchg
sbb
dec
stos
adc
fbld
and
clc
call
cmpsb
inc
jecxz
and
and
cmp
out
push
imul
jge
imul
push
inc
mov
or
enter
les
and
out
jge
sbb
dec
stos
add
xor
or
xor
dec
lods
outsl
dec
xchg
inc
xor
push
dec
mov
pop
testl
push
adc
dec
fdivrl
lds
or
scas
call
fcomi
sub
inc
xor
push
add
in
in
sub
or
lock
inc
jno
and
and
sbb
repz
cmp
pop
inc
and
leave
or
decl
jl
add
pop
ds
rcl
insb
sub
mov
mov
xor
sub
jb
xchg
icebp
pushf
insb
cmp
mov
dec
je
mov
or
bound
inc
mov
cmpl
icebp
dec
sbb
add
aaa
mov
jge
sub
fildl
pop
pop
push
pop
cmp
inc
pop
nop
mov
or
or
sarl
cmp
ret
push
loopne
mov
mov
ret
jne
test
mov
insb
or
es
mov
lret
test
lcall
push
arpl
adc
mov
aaa
inc
lcall
clc
bound
pop
repnz
adc
dec
push
push
dec
inc
insl
psadbw
mov
test
push
sbb
push
ja
xchg
pop
fisttpll
nop
dec
dec
fisubrl
dec
cmp
sub
sub
sbb
inc
push
testb
loopne
and
xor
lods
mov
stos
fldt
sti
fidivrs
and
icebp
add
and
je
int3
pusha
test
cmp
outsl
fldt
push
jnp
add
add
add
andb
in
icebp
and
and
jne
jl
sub
cwtl
pop
add
cmp
xchg
add
cmp
push
adc
les
jae
lret
pop
sbb
mov
adc
fwait
xor
inc
les
cmpb
cmp
in
inc
lock
leave
jmp
lds
leave
and
push
fsubrs
rorb
sub
lods
cmpb
cmp
cmp
icebp
adc
cs
icebp
enter
dec
cmp
dec
or
and
jno
xor
divb
nop
xor
mov
sbb
cs
xchg
test
cmp
gs
inc
loopne
mov
fcomp
scas
and
mov
fcoms
pop
add
out
xor
movsb
mov
or
adc
pop
push
xor
lea
orb
jbe
xchg
mov
jge
loopne
or
enter
stc
ja
sub
sub
testb
pop
push
rorb
pushf
or
jo
inc
cmp
adc
stc
aad
dec
xor
pop
arpl
andl
mov
mov
fsubrs
jge
aaa
push
pop
add
push
movsl
lds
ret
dec
in
cld
adc
jle
push
xor
loopne
addb
sub
add
sbb
icebp
out
clc
xchg
stc
jl
mov
jae
or
stos
pop
adc
jno
dec
imul
push
pushf
jne
pop
inc
js
xchg
add
push
imul
or
xchg
mov
add
fucomip
or
push
dec
fimuls
xorb
inc
mov
xchg
sub
into
test
mov
xor
mov
sbb
inc
hlt
xchg
dec
push
nop
pop
sti
dec
inc
fmull
sarl
or
xchg
les
xor
sub
pop
add
rorb
fnstsw
mov
and
cmpsb
je
cli
lock
mov
lcall
roll
push
scas
insl
test
loop
test
lods
push
repnz
sub
or
insl
testb
and
mov
divl
push
add
sarl
adc
movsb
pop
lret
sub
or
stc
sub
mov
adc
add
pop
pop
mov
inc
jmp
push
cmp
loope
lea
inc
jle
pop
mov
cmc
idivb
xor
dec
mov
inc
sbb
rcll
add
dec
or
clc
pop
fwait
sbb
cmp
dec
mov
xor
dec
xchg
sbb
push
movsb
pop
sar
aad
push
and
sbb
xor
movb
orl
mov
sbb
movups
dec
shl
or
add
in
or
adc
jmp
jnp
inc
xchg
push
daa
sbb
sti
sbb
cmp
mov
sbb
push
or
cmp
sbb
sbb
dec
dec
sbb
sbb
push
push
pop
pop
sbb
sbb
pusha
fs
sbb
js
sbb
sbb
addb
nop
xchg
cwtl
pushf
sbb
sbb
mov
sbb
sbb
sbb
sbb
enter
sbb
rcl
fcomp
sbb
sbb
loopne
call
sbb
hlt
clc
cld
xor
repnz
repz
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
dec
dec
xor
xor
push
push
pop
pop
xor
xor
pusha
fs
xor
js
xor
xor
addb
nop
xchg
cwtl
pushf
xor
xor
mov
xor
xor
xor
xor
enter
xor
rcl
fcomp
xor
xor
loopne
call
xor
hlt
clc
cld
fs
add
add
or
fs
sbb
fs
sub
adc
data16
addl
dec
popa
pop
jg
or
sub
pusha
sub
xor
rorl
subb
dec
pop
pop
cmp
in
mov
in
in
hlt
lcall
jne
pop
mov
xorb
sub
sbb
std
mov
lea
and
inc
jbe
add
lock
push
ja
add
mov
cmpsb
push
sbb
call
arpl
cmp
dec
shll
jno
cmpb
push
push
shlb
add
inc
xchg
movsl
stos
lahf
or
leave
dec
sahf
and
or
add
adc
and
pop
or
xchg
or
mov
popa
sub
cmp
sbb
vmwrite
adc
test
push
rorl
test
mov
fdiv
stos
and
lahf
add
ss
pop
popa
cmp
xchg
sbb
xchg
cld
or
push
push
fcoml
and
mov
mov
add
push
add
push
dec
xchg
jl
mov
inc
lahf
nop
cmp
fdiv
aam
dec
cmpb
and
add
cmpsl
pop
mov
adcb
mov
stc
add
mov
or
leave
push
adc
mov
jge
imul
in
cltd
out
adc
add
dec
inc
pop
out
cmc
in
xchg
je
jbe
inc
cmp
lods
scas
repz
mov
xchg
pop
cwtl
add
rorb
push
add
lea
sbb
js
movsb
inc
or
aam
int
mov
push
js
mov
ja
ds
jne
ss
xor
adc
xor
sub
aam
rcrb
push
dec
and
andb
or
aas
pop
movhps
jne
je
dec
mov
test
sbb
mov
cmpsb
or
pusha
pusha
fcoms
mov
or
nop
adc
cmpsb
sbb
int3
lcall
aas
add
mov
add
incl
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
call
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
inc
test
adcl
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
lcall
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pushl
aam
call
xor
add
mov
push
loope
or
insl
or
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
std
call
sti
pop
popa
mov
into
cmp
mov
inc
movsl
fisttps
xchg
fdivr
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pushl
pop
dec
or
cmp
add
daa
adc
or
and
test
jmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
ljmp
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
lcall
adcl
jae
or
test
fs
ds
or
or
push
in
decl
call
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
incl
out
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
decl
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
sar
pushl
sbb
ret
es
pushf
mov
insl
add
ss
push
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
decl
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
lcall
jno
cmp
pop
or
adc
sahf
call
jmp
imul
push
js
or
push
addl
pushl
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
or
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
mov
mov
mov
push
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
adc
out
add
outsl
jb
popa
je
and
pop
sar
mov
jb
outsb
je
arpl
push
je
aaa
jle
outsl
pop
jae
popa
outsb
xor
insl
outsl
fs
in
in
decl
sub
pop
xor
sub
and
inc
insw
negb
leave
imul
lahf
mov
scas
push
popw
xor
outsb
ljmp
gs
insl
imul
xchg
je
lock
xor
outsb
outsl
push
push
push
add
insb
pop
idiv
sti
mov
inc
jb
and
and
insl
or
ljmp
outsl
outsb
and
int
jbe
sub
je
jo
or
fcomip
add
push
imul
gs
pop
sti
arpl
gs
and
outsl
outsl
imul
push
andl
jb
inc
and
xor
and
adc
daa
cmp
bound
fnstenv
pop
inc
jb
inc
sbb
fisttps
push
inc
dec
pop
sub
es
imul
inc
jae
and
push
xchg
cmp
sbb
dec
popa
xor
rcll
and
sub
sbb
es
dec
das
jle
fisubl
xlat
inc
dec
dec
inc
dec
mov
ja
jnp
inc
sub
sub
cmp
popa
sbb
pusha
inc
das
jbe
shrb
sarb
inc
mov
dec
inc
push
push
pop
lret
icebp
inc
insb
pop
jno
mov
rorb
add
dec
jae
or
dec
cs
outsl
pop
gs
mov
jb
mov
inc
mov
jo
lahf
popa
jb
fbld
jmp
test
xorl
pop
sub
and
stos
sub
aaa
sub
add
aas
push
cmp
and
dec
inc
inc
inc
add
insb
push
pop
sbb
sub
sub
pop
sub
jne
loope
cmp
push
bound
gs
loopne
adc
icebp
pop
dec
push
pop
push
inc
pop
ret
push
lock
sub
inc
xor
or
push
int
gs
xchg
shl
sahf
adc
pop
sub
jns
push
sub
push
jmp
mov
sbb
gs
lret
push
lahf
push
push
pop
pop
or
outsl
sub
jg
or
push
ret
inc
ret
inc
push
inc
call
sbb
dec
jae
lahf
mov
and
outsb
imul
mov
ret
add
daa
and
sahf
push
inc
inc
push
inc
inc
inc
push
push
push
mov
inc
dec
inc
push
xchg
dec
out
xlat
xor
cmp
insl
dec
inc
add
shll
jne
mov
out
in
std
jmp
add
sbb
mov
push
dec
inc
imul
mov
dec
bound
shll
mov
xadd
or
das
into
arpl
push
mov
sub
add
or
sub
outsb
mov
push
arpl
add
xchg
jnp
aad
fndisi(8087
mov
cmp
and
and
pop
mov
mov
outsl
scas
jge
ja
pop
js
add
aaa
cmp
jae
scas
jae
loope,pn
into
inc
pop
jl
inc
gs
clc
movsl
jmp
xor
insb
sub
ja
push
push
scas
push
dec
nop
test
xlat
bound
sub
inc
mov
sbb
imull
imul
sbbl
arpl
or
ja
sbb
sub
stos
add
scas
sbb
imul
mov
in
inc
add
arpl
gs
add
dec
inc
jp
iret
jae
mov
repz
sub
sbb
sbb
js
pop
or
mov
jns
cld
movups
add
add
add
add
add
jmp
cmp
pop
or
aaa
xor
push
push
pop
push
and
mov
xor
or
pusha
sbb
add
pop
rdpmc
mov
xor
sbb
cmp
add
push
imul
add
cmp
or
mov
outsl
push
push
imull
mov
or
add
and
push
xchg
push
gs
jle
or
fdiv
arpl
addl
loope
inc
outsl
outsb
lea
xchg
xor
inc
aam
sub
dec
or
ja
push
jne
xor
cs
pop
dec
imul
pop
inc
ja
insl
jne
inc
sub
aaa
gs
insb
jp
jb
jns
sbb
lock
push
pop
sub
add
sub
push
je
gs
jae
mov
sub
sub
jns
or
aaa
sahf
or
mov
aaa
push
pop
push
pusha
inc
mov
dec
fdivrl
nop
or
cs
mov
inc
push
inc
aaa
loop
mov
aam
push
das
jo
mov
sbb
and
push
and
popa
adc
shlb
or
xor
fbld
movsl
mov
fs
outsl
jmp
cmp
outsb
pop
sbb
jb
sub
ret
jp
dec
fs
addr16
mov
cmp
arpl
jae
pop
sub
push
iret
mov
push
test
arpl
pop
mov
push
arpl
loope
xorb
sbb
or
into
add
mov
aas
dec
jae
arpl
lock
xchg
je
pusha
push
nop
jmp
add
push
dec
inc
dec
xor
add
xor
cs
add
idivb
insl
stc
in
mov
push
in
cmp
push
cld
fists
push
dec
push
push
dec
inc
add
dec
dec
dec
inc
push
inc
push
pop
repnz
push
dec
dec
dec
inc
push
inc
cmp
cmp
cmp
or
pop
les
mov
sub
jp
outsb
pop
push
out
outsb
mov
or
stos
outsb
jbe
push
mov
jbe
popa
pop
sub
imul
add
mov
or
outsl
sti
push
dec
dec
push
push
and
push
dec
dec
inc
js
in
fimuls
inc
and
xor
adc
hlt
xchg
lods
shrb
insl
fdivrl
mov
aaa
mov
je
or
mov
push
cmp
mov
jno
imul
xlat
outsl
ss
inc
adc
push
imul
call
insb
push
mov
inc
or
js
das
jo
mov
pop
mov
mov
outsl
push
dec
push
notb
or
arpl
xor
loope
jo
xor
inc
aaa
insl
or
adc
pop
ret
ret
das
imul
add
pop
or
bound
xor
lahf
and
push
push
pop
push
cmp
mov
sbb
popa
jae
push
xor
push
mov
movq
pop
xchg
add
shll
xlat
or
inc
fildl
push
sbb
jmp
mov
push
lahf
xlat
addr16
inc
sub
push
dec
jne
rol
gs
pop
push
push
fs
add
lods
lock
inc
outsl
js
scas
lods
xlat
stos
push
outsl
ja
inc
pop
push
push
push
inc
pop
mov
xor
scas
int
pop
andps
push
inc
cltd
add
cmpsl
data16
dec
imul
pop
das
out
mov
insl
mov
push
cmp
out
pop
out
push
or
pushf
lods
pop
adc
xchg
imul
add
mov
dec
push
gs
testl
push
cmp
jne
pop
in
fidivs
sbb
push
pop
test
hlt
xchg
jne
adc
rcrb
pop
out
adc
jne
xchg
mov
mov
addr16
push
adc
lahf
fwait
popf
jmp
cs
mov
outsb
pop
fdivrl
fs
jae
loope
jmp
aad
cmc
loope
push
test
jne
inc
push
inc
cmp
in
pop
insb
inc
daa
and
imul
daa
inc
gs
imul
xchg
iret
jae
fildl
mulb
ucomiss
mov
setl
sub
test
push
gs
jecxz
push
xchg
cmpsb
adc
dec
shlb
push
arpl
call
pop
jne
ret
sub
sbb
imul
pop
test
fiaddl
es
jmp
outsl
mov
cltd
movsl
popa
cwtl
out
pop
popa
cmpsl
aaa
and
nop
add
push
jbe
fldenv
sub
mov
test
mov
aad
dec
sub
xchg
xchg
dec
outsb
jp
gs
jmp
loop
mov
in
out
rcrl
daa
addr16
iret
in
loope
ja
cmp
arpl
add
inc
mov
sub
lret
pop
adc
jae
mov
iret
sub
js
jae
sub
inc
fisubl
and
fisubl
mov
daa
pop
lret
jno
sbb
xlat
insl
mov
inc
fidivrl
cs
pop
imul
insl
mov
in
hlt
and
daa
scas
pop
pop
xchg
imul
arpl
jb
imul
jnp
xchg
push
xor
les
in
dec
test
dec
outsb
push
fistpl
in
bound
sbb
jns
jae
daa
dec
dec
lock
lds
lahf
imul
sti
push
addr16
cmp
pop
insb
cmc
daa
sbb
or
jno
cmpsb
mov
out
daa
popa
jl
data16
ficompl
pop
pop
daa
mov
fsubr
arpl
in
lea
push
pop
add
dec
imul
ss
jno
xor
pop
push
cmp
rcrb
pop
das
gs
fisubrl
mov
sbb
sub
outsb
pop
sbb
test
inc
sub
lods
pop
xchg
pop
add
sbb
xlat
mov
jae
popa
lock
mov
pop
mov
sti
inc
fs
daa
shlb
fwait
mov
sbb
add
popa
out
in
sub
std
daa
and
dec
inc
push
add
mov
jl
adc
fxch
fildll
xor
push
dec
inc
dec
push
dec
dec
inc
add
jmp
xchg
push
dec
cmp
cmp
add
dec
rep
fistps
adc
add
fs
or
push
dec
pop
inc
in
ja
push
inc
icebp
pop
test
mov
cmpsb
cmp
les
sti
je
into
jle
roll
mov
dec
jne
orb
pop
call
lea
dec
fst
or
test
out
out
outsb
mov
movsl
adc
mov
in
out
xchg
mov
jbe
in
into
mov
xor
arpl
push
push
inc
stc
sbb
jae
push
push
jne
dec
and
mov
outsb
pop
dec
inc
ds
ret
fildll
jo
or
push
ja
aaa
ljmp
cmp
outsb
jl
loopne
int3
mov
add
addl
inc
and
or
shll
jp
cmpsl
mov
pop
iret
std
std
add
inc
pop
lahf
ljmp
mov
movsl
push
ja
pushf
je
popa
mov
jo
mov
pop
shll
cmp
leave
rorb
in
or
inc
add
test
dec
shrl
shrl
into
xchg
out
mov
fs
add
outsb
loope
jne
in
incl
or
mov
add
jg
outsb
jae
dec
inc
mov
mov
stos
inc
ja
fists
je
xchg
adc
push
add
mov
add
imul
inc
ja
nop
xchg
lret
xchg
push
cmp
mov
ja
ja
add
fs
xor
inc
out
inc
bound
dec
cmp
insl
jae
jno
dec
push
nop
lret
sub
push
push
dec
cltd
add
scas
mov
insb
xor
inc
xchg
pop
push
xor
or
and
or
ja
xor
mov
shll
outsl
outsl
insl
jns
adc
in
mov
or
xchg
insb
jae
sub
push
test
mov
pop
add
jne
outsb
jo
push
push
dec
push
mov
adc
mov
hlt
fs
daa
es
inc
in
and
xchg
dec
mov
xchg
imull
imul
xor
dec
add
pop
sbb
add
jg
push
inc
inc
dec
pop
cmp
scas
insb
outsl
scas
jle
jp
push
fdivs
arpl
pop
and
lcall
sub
sbb
jae
ja
lahf
orb
jne
jb
push
cmp
das
push
xchg
test
ljmp
push
inc
push
push
gs
icebp
sub
fsubrl
popf
sti
fisttpll
adc
ja
xchg
lret
in
jge
and
inc
jbe
mov
insl
fs
dec
push
inc
fldcw
mov
pop
cmp
inc
mov
fiadds
jb
and
test
outsl
shrl
add
mov
add
mov
pop
fsubrs
xchg
sub
cmp
and
movsb
xchg
or
data16
push
xchg
push
scas
mov
pop
ret
or
pop
lods
cld
jbe
mov
and
sub
adc
xchg
shll
pop
ret
fadds
lds
jb
popf
xchg
test
sysret
xor
ja
mov
cltd
jecxz
imul
sbb
out
inc
mov
inc
adc
adc
ret
adc
clc
pusha
in
mov
rorl
cmp
pop
sub
scas
out
outsb
popl
xor
adc
mov
pop
inc
jle
outsl
addr16
sub
dec
inc
push
sbb
fadds
inc
aaa
outsb
pop
xchg
outsb
pusha
adc
jne
or
push
in
cs
pop
aas
adc
inc
maxps
popa
int
add
inc
incl
xor
or
sub
jg
cmc
sub
mov
xchg
mov
xor
in
inc
sbbl
je
jo
das
das
lods
imul
jae
mov
xchg
fimull
push
dec
inc
pop
cmp
pop
lods
add
push
call
mov
add
xor
xchg
pop
fs
xchg
cmpsb
sbb
das
in
sbb
add
or
and
inc
shrb
inc
pusha
movsb
shll
shrb
push
dec
clc
sbb
dec
push
dec
and
or
fwait
and
rcr
clc
add
imul
or
lcall
insb
lcall
fwait
dec
lcall
xchg
data16
adc
pusha
sbb
int3
call
and
push
cmp
movsb
imul
xchg
xor
fwait
and
push
xor
lock
pop
repnz
add
push
pop
es
pushf
das
mov
cmp
push
sub
or
mov
pop
push
pushw
dec
fcompl
mov
call
push
push
shlb
shrb
fs
mov
loopne
inc
enter
jg
xchg
int3
sbb
push
inc
das
push
movsb
mov
xchg
adc
sbb
sbb
dec
push
test
lods
sbb
call
sahf
pop
and
xor
pop
push
fs
rorl
mov
mov
dec
push
xor
mov
push
cli
subb
ja
pop
push
sti
jmp
push
jmp
lods
imul
pop
loopne
push
gs
dec
inc
inc
dec
gs
ss
scas
inc
sub
imul
inc
jne
pop
test
and
mov
jae
push
addl
sbb
jne
sbb
ja
pop
add
mov
inc
shll
sbb
sub
add
outsl
dec
fisubl
sub
jbe
lods
cmc
aas
pop
addr16
outsl
push
outsl
outsl
inc
pop
dec
lahf
jl
cmp
cmp
sbb
fadds
fidivs
call
pusha
sarb
pop
push
inc
xor
jl
jg
xor
rcll
inc
dec
outsl
rorl
pop
sbb
shll
dec
imul
out
sbb
popa
outsl
jg
xor
xor
push
test
xor
push
mov
cs
push
fistpll
pop
orl
movsl
nop
jns
daa
or
nop
add
cltd
pop
push
mov
mov
bound
mov
dec
into
inc
shll
mov
ds
xor
and
fwait
inc
clc
ret
out
push
outsb
or
push
ret
or
or
test
xchg
pop
and
jo
push
xor
xor
dec
and
xorb
inc
mov
sub
dec
and
and
sub
sub
loopne
cmpb
sbb
inc
inc
das
add
bound
pop
pushf
sti
adc
arpl
adc
mov
and
aas
inc
inc
dec
inc
push
pop
inc
outsl
je
mov
insl
jg
and
cmp
sub
xchg
mov
dec
adc
mov
btr
xchg
push
sub
sub
daa
sub
outsb
and
out
aad
xchg
pop
lods
push
testb
jecxz
fwait
mov
sbbb
push
or
lds
xor
add
xor
sbb
mov
sub
std
or
xchg
insl
insl
pop
push
sahf
sarb
xor
emms
lock
ret
pop
or
sub
pop
cmp
sub
dec
sub
and
lret
in
lock
sti
aaa
and
punpckldq
cmp
imul
cmp
adc
xchg
outsl
pop
jne
sbbb
fs
lea
inc
das
xor
dec
out
dec
scas
pop
add
dec
sbb
scas
imul
mov
cmp
jo
aad
mov
test
shrl
mov
inc
out
jo
push
jno
push
aas
add
pop
add
dec
shl
mov
mov
adc
jo
jne
and
dec
mov
add
push
shll
inc
outsb
lods
cmp
sti
add
push
fidivs
and
inc
ffree
adc
sbb
adc
push
cmp
lods
or
cmp
inc
inc
sub
scas
and
insl
and
jg
mov
inc
mov
dec
dec
dec
std
xor
cmp
add
add
dec
inc
and
popa
adc
push
popa
arpl
sub
or
adc
push
push
lcall
insl
push
inc
push
inc
dec
push
dec
dec
inc
dec
inc
inc
mov
or
or
gs
imul
mov
cmp
and
xchg
js
ja
outsl
xor
cmp
es
insb
pop
insl
mov
push
xchg
sub
push
inc
mov
mov
testb
adc
dec
dec
pop
xchg
inc
push
mulb
sbb
add
in
test
lds
xor
jno
push
pop
or
and
mov
dec
imul
inc
rcrl
aas
pop
clc
pop
inc
fimull
dec
inc
cwtl
jno
pop
fcoms
adc
push
inc
pop
inc
imul
sar
fdivrl
test
add
mov
insl
jo
xor
xor
insl
je
ja
insl
adc
xor
bound
add
aaa
daa
call
sbb
dec
pushf
ret
ja
nop
sbb
and
daa
mov
outsb
ja
arpl
xchg
inc
and
shrb
xor
sbbb
popa
mov
jno
push
mov
add
xor
bound
push
add
dec
adc
popf
mov
into
xor
xor
mov
rcrb
gs
and
cmpsl
jne
cmp
pop
sub
daa
jb
add
scas
pop
inc
inc
inc
lods
mov
lods
dec
aas
xor
add
popa
cli
in
jno
add
mov
insl
pop
or
or
test
gs
add
add
cmpsl
ss
bound
xor
nop
clc
xor
outsb
daa
and
fidivs
cmp
ss
cmpsb
popf
mov
add
fmuls
or
push
in
xlat
lods
fcoms
fldl
pop
add
sbb
pushf
push
les
push
pusha
imul
mov
sbb
scas
xchg
add
and
ja
xchg
imul
mov
popa
sub
and
xor
ds
or
or
imull
jo
add
mov
add
push
add
mov
mov
ss
incl
leave
adc
adc
add
mov
add
add
decl
pop
std
int3
inc
fs
mov
pusha
pop
out
in
fnstenv
jl
add
call
into
adc
outsb
jb
fnstcw
push
inc
addr16
test
or
pusha
fimuls
add
inc
dec
push
add
ja
add
mov
sub
add
or
enter
fdivrs
jg
or
les
int
fs
int
ds
dec
xchg
movsb
test
lods
stos
dec
shll
nop
inc
and
add
scas
adc
add
mov
incl
add
iret
jo
mov
push
or
loopne
orl
vmread
or
decl
data16
jo
cwtl
xchg
cwtl
dec
rclb
test
scas
xor
mov
iret
add
adc
adc
pusha
pop
out
shlb
and
mov
add
jmp
mov
jp
add
iret
data16
inc
fcomp
or
and
or
add
loopne
adc
dec
adc
cs
hlt
pop
push
push
pusha
cmpsl
pop
and
pop
add
xchg
ja
or
and
push
add
xor
push
int
add
add
arpl
cmp
das
mov
mov
push
sub
pop
cmpsb
dec
add
pop
pop
sbb
jg
int3
loopne
jg
xchg
add
jo
mov
popf
adc
mov
fcomps
xor
cmc
das
pop
pop
jo
jo
jo
popa
jo
pop
xchg
lock
and
mov
sub
outsl
mov
xor
inc
cmpl
out
testl
add
nop
mov
add
push
pop
xor
add
push
mov
add
repz
idiv
ljmp
add
jl
mov
ja
mov
cmovno
inc
add
ja
jp
int3
fildll
arpl
popf
cmc
push
and
pop
mov
imul
fs
pop
jae
push
add
arpl
adc
add
aaa
dec
push
dec
dec
dec
inc
hlt
inc
sub
push
sbb
adcb
icebp
ja
cwtl
cmp
xchg
adcb
int
mov
fisubrl
scas
push
jo
or
pop
mov
adc
addb
cmp
aam
movsb
and
and
inc
pop
mov
subl
xor
add
inc
pop
lds
xchg
add
outsl
xcrypt-cbc
cmpsl
rolb
repz
movsb
aad
clc
pop
loope
sbb
inc
rcrl
adc
dec
das
xchg
push
push
dec
sub
inc
dec
push
in
xchg
push
push
adc
ret
inc
pop
add
jo
xor
fbld
lret
mov
aas
stc
bt
loopne
cltd
ja
movaps
movsb
arpl
pop
sbb
xchg
mov
roll
or
sub
push
push
les
adc
sbb
cli
sub
into
sbb
adc
jbe
lea
inc
cmp
xlat
orl
pop
dec
inc
push
add
mov
cmp
mov
out
jae
arpl
add
xor
rcll
gs
imul
push
push
je
lods
pop
rcrb
cmp
sub
insb
inc
ljmp
inc
jne
aaa
mov
xchg
xchg
sub
cmp
imul
insb
ds
cmpsl
cmp
hlt
xor
nop
ss
adc
fldl
mov
add
xlat
int3
lds
aas
inc
add
loope
int3
add
dec
add
push
inc
push
dec
inc
and
lahf
andb
or
sub
cltd
loop
daa
dec
mov
adc
ret
cs
leave
and
int3
repz
mov
mov
fs
and
or
cmp
lods
mov
cs
out
pushf
shlb
and
jno
or
dec
jns
add
pop
shll
aaa
xor
adc
xor
cmp
and
xchg
dec
push
inc
bound
xchg
mov
mov
jo
add
mov
sub
inc
pushl
mov
leave
adc
out
mov
mov
fistps
jb
ljmp
inc
dec
mov
push
xchg
lret
adc
or
fbld
mov
sbb
stos
jns
imul
pop
or
pop
cltd
scas
inc
aaa
sub
pop
dec
arpl
adc
je
push
je
into
mov
sub
mov
sub
dec
jp
or
push
inc
loope
outsb
push
in
das
xor
xor
dec
adc
push
bnd
outsl
jmp
sbb
mov
idivb
lods
add
sub
leave
ds
aas
outsb
push
adc
sub
mov
popa
sbb
adc
outsb
cmc
sub
loopne
jge
inc
arpl
and
test
add
sub
negl
add
dec
push
and
bound
and
cmp
je
int3
outsb
ss
xor
cmp
repnz
push
push
jo
mov
dec
push
lock
rcr
rcrb
push
sub
jg,pn
mov
add
or
mov
es
cmp
sub
lods
pop
xor
loope
orb
push
dec
push
push
push
cmp
mov
add
dec
dec
adc
loop
mov
push
dec
push
dec
inc
ds
or
cmp
and
in
dec
inc
dec
inc
pop
push
mov
fcomip
fstps
mov
and
inc
inc
push
cmp
pop
mov
pop
sub
inc
icebp
dec
inc
push
dec
das
adc
or
xchg
mov
fldl
adc
mov
pop
and
push
fimuls
jg
dec
adc
loopne
ds
imul
aam
aaa
in
push
push
inc
jbe
adc
fldt
push
push
add
jg
and
xchg
sub
cmpsb
and
sbb
lds
mov
and
sbb
das
or
sub
mov
and
pop
sub
sub
lods
mov
add
mov
pop
lock
jae
jge
das
sub
mov
push
aas
jae
sub
or
bound
fsubl
mov
lods
sbb
jl
or
adc
add
xor
rdtsc
shl
rorl
imul
nop
mov
data16
mov
jecxz
mov
fwait
lods
insb
add
cmp
or
adc
fistl
jb
inc
sahf
insl
add
imul
fildll
xor
push
gs
or
adcb
outsl
shll
icebp
pop
dec
inc
dec
push
xor
sub
cmp
cmp
movsl
popa
add
xchg
add
cmp
test
sahf
fistl
cmp
mov
and
mov
pushf
and
shlb
jno
mov
lods
popf
xchg
push
or
xchg
inc
sbb
shlb
xchg
rorb
data16
or
lcall
and
jp
and
dec
and
and
cmp
dec
dec
push
addl
insb
pop
test
std
int
fsts
or
es
pop
sbb
inc
push
inc
pop
aaa
fs
mov
daa
jno
in
in
xor
xor
in
in
xor
je
in
fs
fs
ss
aaa
in
fs
cmp
js
loopne
cmp
jns
xor
in
movsl
or
xorl
sahf
dec
fidivs
or
xor
outsl
cmp
and
pop
es
fisttpl
jns
xor
and
es
fidivs
and
pop
es
ss
sahf
pop
mov
es
sub
in
xchg
pop
sub
pop
daa
int
outsl
sub
int
mov
scas
ret
or
les
dec
push
pop
sbb
shlb
push
es
add
inc
daa
cmp
ds
mov
lods
adc
fnsave
adc
int3
sub
daa
dec
imul
push
jle
push
cmp
daa
fistpl
fnsave
mov
jne
adc
or
popa
cmpsb
adc
add
adc
out
add
adc
inc
push
push
mov
pop
push
add
or
insb
adc
daa
mov
sbb
pop
push
adc
add
adc
lea
adc
pop
pop
ss
fisubl
outsb
adc
xchg
dec
adc
enter
mov
enter
cs
cmp
movsb
sbb
pop
jl
or
addr16
jle
inc
push
push
dec
pop
push
push
mov
sub
dec
pop
or
push
mov
push
push
sbb
test
or
dec
pop
or
es
pop
arpl
loopne
dec
dec
inc
pop
or
cld
sahf
inc
push
push
or
sahf
adc
or
movsl
pop
gs
or
sti
xor
mov
inc
push
pop
or
es
dec
daa
shrb
or
pop
mov
es
dec
dec
test
dec
sbb
xlat
nop
xor
punpckhdq
insl
mov
sub
sub
pusha
aaa
or
popa
cltd
fs
dec
xor
fs
dec
push
arpl
fs
dec
push
cltd
xor
xor
data16
fisubl
push
pop
je
dec
cmp
xchg
xchg
and
pop
add
pop
shll
xchg
and
jmp
push
lods
mov
xor
aaa
add
add
add
das
cltd
and
xor
arpl
jmp
inc
and
add
sub
jl
outsl
outsb
gs
ret
enter
cmpsb
je
test
add
outsl
insb
pushf
add
test
popa
jo
add
sub
outsb
pusha
add
dec
out
inc
lret
dec
dec
add
push
inc
add
inc
push
and
adc
js
and
pusha
in
sub
add
das
and
les
aam
inc
xlat
pop
imul
sbb
dec
mov
sbb
pop
das
hlt
push
xchg
adc
cs
out
dec
aam
or
or
push
pop
inc
and
mov
push
out
in
xadd
sarb
adc
or
push
mov
loopne
shll
outsl
inc
fs
sbb
je
push
add
dec
notl
adc
arpl
dec
arpl
loope
imul
push
mov
inc
aaa
inc
adc
and
popa
fs
imul
pop
push
fdivl
fcoml
fdivrl
test
xor
and
aaa
enter
xchg
test
adc
adc
lea
clc
jb
adc
lea
inc
fwait
mov
mov
dec
test
call
lods
or
lods
pop
pop
jb
inc
lods
rorb
orb
sub
pop
cmp
iret
sbb
sub
and
test
pop
cmpsl
adc
push
jp
adc
jno
sub
push
outsl
pop
ret
or
addr16
test
dec
inc
push
mov
arpl
shll
shlb
fiadds
add
sub
inc
push
cmovle
fwait
subb
insb
imul
je
mov
inc
sbb
sbbb
xor
push
push
inc
push
fs
fimull
notl
push
inc
pop
imul
pop
and
jnp
jae
xchg
dec
aaa
insb
pop
lret
mov
or
sbb
add
pop
sbb
dec
sbb
ja
sbb
xor
adc
mov
push
rolb
push
adc
push
out
pop
mov
imul
arpl
or
imul
pop
mov
mov
idivl
mov
shlb
adc
push
push
punpckldq
add
dec
dec
fnstenv
cmp
enter
mov
imul
push
insb
push
das
in
gs
aaa
push
xchg
stos
mov
scas
cmpsb
mov
lahf
es
sub
xchg
in
jle
pop
push
jb
outsl
jb
cs
sbb
sub
mov
sub
dec
mov
sarb
insb
popa
das
xor
push
hlt
add
fs
jne
pop
sbb
shrl
fwait
push
push
loopne
cmp
inc
arpl
and
xsavec
addl
push
imul
cmp
test
outsl
bound
inc
xchg
test
nop
or
jo
push
popa
iret
fs
push
dec
inc
pop
pop
in
outsb
in
pusha
pop
mov
aam
bound
das
or
adc
js
or
jbe
inc
pop
inc
or
icebp
fcoms
push
and
mov
lret
hlt
dec
icebp
and
pop
daa
jbe
jo
add
jo
and
sti
data16
pop
push
sub
dec
xor
push
inc
pop
mov
mov
insb
push
das
push
aaa
adc
mov
popa
mov
pop
mov
pop
data16
bound
jbe
daa
push
dec
push
jb
pop
mov
cmp
jbe
xchg
jb
lcall
arpl
push
je
push
jecxz
cmpsl
lea
insb
sbb
pop
sbb
add
lea
ljmp
sub
or
inc
mov
inc
inc
sub
mov
lock
mov
in
pop
addr16
xor
jmp
pop
out
push
push
sbb
xor
mov
inc
rdpmc
jo
jmp
dec
mov
dec
jo
mov
inc
int
xor
dec
aaa
jmp
push
pop
daa
xor
add
or
jno
sbb
decl
pop
dec
popf
mov
or
sti
sub
incl
jo
cltd
std
cmp
jg
fsts
adc
xchg
adc
popf
shlb
jnp
icebp
stos
stos
mov
ljmp
jno
sbb
jne
aas
imul
bswap
icebp
cwtl
or
mov
add
add
fcomip
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
sbb
in
shl
cli
hlt
std
cltd
std
sti
call
ljmp
movsl
mov
jnp
pop
fnstsw
movsb
adc
mov
cmpsb
push
aad
adc
int
enter
pop
out
test
iret
popf
xchg
data16
lcall
fdivr
jmp
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
sub
inc
fnstenv
mov
adc
mov
xchg
rclb
test
fnstsw
fistps
pop
jno
add
xlat
xchg
jne
sub
loope
pop
pushf
push
jbe
jns
push
imul
pusha
xor
jle
pop
loopne
dec
repz
or
pop
ret
flds
ljmp
xchg
out
bound
xlat
lea
adc
cld
imul
shrb
rol
pop
popf
fdivrl
rol
adc
lret
cmp
cld
pop
dec
js
pop
mov
sbb
fistpll
sbb
arpl
sbb
adc
lcall
sbb
ret
iret
repz
and
pusha
cli
push
repz
sub
pop
sahf
mov
stos
pop
adc
popf
stc
into
lret
xor
jae
leave
leave
popa
std
fstl
insl
cmp
inc
adc
iret
mov
pop
fbstp
orl
pop
fisubs
push
jns
in
lret
pop
icebp
xchg
leave
jge
xor
and
pop
lds
xchg
ja
mov
in
leave
fucomip
idiv
jmp
cli
fdivr
std
jmp
ljmp
cld
and
fcomps
fbld
in
insl
lods
aad
or
lock
jmp
jmp
das
jle
sbb
fsubs
lret
cld
in
loopne
std
pop
sti
lock
cltd
clc
cli
jnp
pop
lods
fscale
aad
cmc
imul
mov
cltd
xchg
ret
inc
sbb
incb
add
and
decl
dec
and
dec
inc
movsl
and
enter
das
dec
inc
dec
dec
add
pushf
test
mov
jo
xor
xor
dec
inc
xor
xchg
xchg
xor
and
and
mov
lock
pop
xor
adcb
or
inc
add
or
aam
imul
xchg
jg
mov
dec
fs
orb
jge
cmp
nop
dec
outsb
inc
ja
sbb
jmp
cmc
xor
inc
cmp
movsl
enter
push
fimull
and
and
or
lahf
add
popf
pop
inc
xchg
push
inc
fnstenv
adc
ds
incl
sbb
repnz
sbb
scas
xor
loopne
addr16
ret
pop
mov
inc
push
add
inc
outsb
in
xchg
retw
push
add
adc
jbe
out
xor
aas
add
mov
or
add
add
imul
mov
sub
jl
adcl
test
hlt
adc
inc
or
pushf
and
rclb
add
push
es
pop
push
mov
pop
inc
mov
xchg
inc
lahf
cmp
adc
and
sbb
or
rclb
fwait
test
rorb
cmc
add
leave
adcl
repnz
mov
or
sbb
inc
add
data16
in
cltd
cwtl
inc
xchg
lahf
mov
aas
mov
test
add
add
daa
adc
das
ffreep
and
push
inc
add
shll
adc
adc
in
xchg
dec
add
or
paddd
fcomps
add
sub
sub
test
test
mov
sldt
jo
aad
fsub
insb
lidtl
mov
xchg
push
popf
lods
inc
les
sub
pop
push
repnz
or
imul
add
pop
and
jnp
push
mov
and
add
inc
and
imul
or
jbe
adc
sbb
xlat
fs
push
fdivs
pop
push
push
xor
add
cld
push
mov
inc
add
jo
sub
or
push
xchg
lea
pcmpgtd
in
testl
jp
push
add
xchg
dec
enter
pop
insl
dec
xor
outsb
fimull
cld
dec
and
mov
push
push
push
daa
movsl
ss
bound
xlat
add
inc
and
andl
inc
cmp
mov
adc
and
and
imul
pop
movsl
outsl
rcr
xor
mov
and
arpl
and
arpl
push
cmp
andl
mov
out
mov
mov
int
pop
or
cmp
mov
dec
inc
adc
push
push
jo
lahf
gs
inc
and
hlt
or
iret
mov
das
push
and
fildl
push
daa
add
subb
pop
inc
out
cmp
scas
sub
sub
cmp
shll
test
cmp
mov
mov
cmp
lcall
test
rorb
mov
ror
xor
rcl
add
loopne
xchg
or
dec
call
cwtl
xor
push
aad
pmaxsw
frstor
push
fldt
push
cld
push
jo
push
pop
xor
loop
pcmpgtb
movsl
pop
shll
pop
fcompl
jae
rcll
iret
aaa
ja
push
push
testb
and
mov
mov
nop
inc
and
mov
pushf
lret
xchg
pop
test
ja
push
mov
pop
jbe
xchg
dec
adc
into
stc
mov
add
pop
push
inc
and
xor
bswap
and
add
imul
inc
push
or
pop
inc
outsb
jo
sbb
outsb
insl
sub
jne
mov
lret
test
mov
insb
mov
inc
test
and
sbb
out
fs
popa
sub
or
addr16
rorl
sbb
jb
mov
add
gs
movsl
mov
jb
xchg
data16
xchg
cmc
xchg
rcr
iret
lods
push
mov
ss
fists
xchg
or
adc
sbb
bound
lcall
out
fbld
adc
daa
inc
mov
sbb
or
lea
ret
mov
add
sub
loope
out
sub
jne
and
outsb
add
pop
sbb
insb
add
clc
outsl
pop
outsb
push
insb
aad
pop
jae
adc
mov
mov
mov
test
fisubrl
or
stos
xor
jae
fs
pop
or
jb
sbb
mov
xor
mov
jg
leave
dec
add
pop
and
mov
push
lahf
mov
pop
jne
cmp
popf
cs
jno
stos
fwait
xchg
add
mov
movl
adcl
sbb
or
imul
dec
jge
mov
rcrb
into
xchg
ja
gs
xor
jmp
lods
outsb
mov
add
push
mov
mov
call
add
jo
fldcw
outsb
fstps
and
xchg
add
nop
ja
inc
mov
adc
sbb
adc
dec
inc
clc
sbb
xor
sub
xchg
and
inc
push
loopne
aam
mov
adc
and
lea
mov
push
xor
sbb
ss
mov
or
mov
push
std
adc
pop
and
push
mov
pop
inc
sbb
sub
mov
or
movl
inc
dec
push
xor
ljmp
inc
insl
and
cmp
insl
inc
cmpsb
sbb
sbb
push
inc
xor
outsl
ret
sub
and
or
inc
sub
jge
daa
movsl
lcall
xor
jae
pop
sbb
xor
push
xor
je
out
sub
mov
adc
sti
mov
outsb
jae
pop
mov
repz
push
and
sahf
dec
and
or
inc
dec
ss
daa
aad
in
icebp
nop
andb
imul
dec
popa
js
mov
xor
out
das
addr16
mov
cmp
xor
mov
add
sbb
mov
adc
sub
cld
mov
cmp
cmp
jmp
insl
or
push
mov
xchg
adc
arpl
xchg
jbe
jbe
mov
inc
ret
loope
pop
sbb
sub
nop
mov
push
imul
mov
divl
inc
or
jg
push
lea
fistl
mov
ss
pop
push
sbbb
xchg
sub
shll
inc
jne
rol
and
dec
cs
mov
and
mov
es
pusha
push
popa
lret
out
inc
jo
ljmp
mov
pop
leave
inc
add
insb
jns
mov
jno
mov
add
insb
scas
les
fildl
lahf
mov
fadds
xlat
adc
adc
mov
inc
jo
pusha
adc
popf
sbb
sub
cmpsl
and
popa
adc
hlt
imul
jo
lods
cltd
or
outsb
imul
adc
mov
sbb
add
push
sbb
mov
and
add
mov
dec
pop
popa
aaa
nop
pop
adc
test
push
orl
popf
add
sbb
and
jo
adc
and
ficompl
daa
test
or
orb
add
xchg
pop
cmp
lds
sbb
push
push
push
sub
xchg
adc
lret
dec
xor
xchg
loop
xor
inc
xchg
dec
pop
cmp
jg
jl
imul
nop
gs
jp
fistl
jo
sbb
mov
inc
dec
jg
or
sub
aas
xchg
pop
roll
jae
mov
lea
call
jmp
add
and
inc
imul
test
imul
das
inc
jo
jns
dec
fisttps
adc
popf
inc
pusha
adc
inc
jecxz
loope
aas
pop
push
test
vpcomw
xchg
mov
mov
dec
roll
push
test
inc
xchg
pusha
xchg
jae
iret
xorl
dec
sub
orb
inc
loop
insb
mov
xlat
mov
aaa
jg
fsubrs
add
pop
aas
add
and
xor
sub
ljmp
pop
sub
cmp
insb
out
and
das
sub
sbb
nop
inc
and
nop
and
or
inc
xchg
sub
sub
pop
or
inc
cmp
and
pusha
and
jle
and
les
popa
dec
add
sub
xor
inc
enter
enter
sub
inc
enter
pop
cmp
aas
daa
and
adc
cmp
and
aam
sub
adc
test
and
and
and
xor
inc
sub
inc
enter
cmp
and
pusha
and
adc
cmp
or
fildll
test
push
and
hlt
adc
and
mov
bound
and
mov
sub
leave
inc
xchg
inc
sub
xor
sbb
mov
or
nop
push
and
dec
dec
arpl
mov
dec
dec
inc
dec
pop
add
and
dec
push
inc
push
jle
cmp
das
jecxz
aam
xor
das
xchg
sbb
aad
xchg
sub
aaa
jb
xlat
push
jns
insb
pop
add
test
mov
das
pop
jae,pn
and
repnz
inc
dec
dec
mov
xchg
xor
lret
outsl
imul
das
adc
aas
bound
inc
dec
push
add
dec
rclb
ret
xchg
push
insl
inc
inc
or
adc
mov
enter
mov
pop
imul
test
dec
xor
pop
add
push
jne
jo
arpl
jne
aas
pop
or
sub
out
or
pop
xchg
sbb
lcall
add
add
jne
jle
pop
or
sub
jmp
mov
add
je
rolb
js
xor
push
jb
daa
sub
inc
arpl
jae
cmp
jno
pop
dec
aaa
xor
xor
xor
bound
in
iret
xchg
push
imul
adc
cmpl
cld
xor
imul
ljmp
mov
insl
jne
jbe
outsl
xor
inc
cmpsb
dec
adc
rolb
ret
cmp
push
sub
fdivp
imul
and
imull
inc
add
sub
out
pop
sbb
and
or
aaa
jae
cmpsl
add
outsl
push
aam
adc
inc
shrb
or
push
sbb
outsl
pop
mov
add
dec
inc
cs
push
push
inc
fstpl
sarl
or
lea
xchg
xor
inc
shll
jo
orb
dec
mov
xor
shll
enter
sub
scas
data16
cmpsl
xchg
in
push
cld
push
or
sbb
cmpsb
imul
cmpsb
imul
lcall
lcall
mov
cmpsb
imul
shll
adc
and
xor
sub
cmp
dec
push
xor
shll
fs
jo
shll
mov
dec
mov
ror
fdivl
dec
shll
in
hlt
cld
add
or
adc
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
mov
or
sbb
dec
shll
insb
je
dec
shll
mov
dec
shll
dec
shll
lock
lcall
or
sbb
lcall
dec
adc
cmpsb
push
daa
xorl
lods
cmp
insl
ljmp
jecxz
cmp
or
xchg
add
xor
dec
xchg
es
popa
pop
cmpsl
push
dec
scas
pop
fs
iret
mov
pop
jae
and
push
lods
or
and
shrb
adc
adc
js
sahf
dec
mov
add
xor
sbb
out
push
cwtl
adc
outsl
adcl
outsl
push
add
push
xchg
xor
add
fmuls
xadd
rclb
cmp
lods
or
imul
sbb
xor
addb
xchg
add
cmp
and
xor
shll
mov
xchg
outsl
mov
sarb
scas
orl
sbb
jecxz
adc
xchg
push
imul
js
cs
ja
mov
jno
gs
clc
mov
xor
insb
or
sub
addb
aad
aaa
adc
outsl
out
fisttpl
mov
outsl
outsb
and
sbb
repnz
outsl
mov
push
cmp
xor
mov
cmp
jo
das
pop
lock
jno
sub
idivl
cmp
iret
aas
push
pop
fisubrl
xchg
jo
push
sbb
nop
aaa
cmpsl
insl
outsl
cmpsb
add
js
push
addr16
jae
pop
jne
adc
add
pop
faddl
in
and
cmpl
xor
repnz
jns
pusha
adc
mov
push
push
imul
test
pop
push
sbb
pop
shlb
mov
ja
pop
mov
mov
imul
or
data16
vmread
insb
pop
dec
out
cwtl
mov
xor
lahf
mov
lret
add
bswap
pop
add
aad
dec
sub
mov
sbb
mov
pop
ucomiss
cmpsl
pop
mov
sbb
push
jno
dec
outsl
popa
lret
fnstenv
sbb
mov
mov
mov
js
pop
sbb
and
loopne
add
xchg
arpl
or
roll
sub
loopne
mov
jb
aaa
sub
cwtl
movsl
push
pop
iret
movsb
xor
jecxz
fdivl
jmp
lcall
pop
dec
xor
xor
dec
inc
jo
pop
push
add
mov
xor
das
xor
sbb
mov
ss
push
bound
add
push
scas
inc
inc
sahf
sub
dec
inc
jp
out
sbb
adc
xor
es
dec
push
push
xor
or
mov
outsl
xor
lods
pusha
and
add
xchg
jnp
outsb
movsl
int3
je
loope
inc
daa
outsb
xchg
mov
lahf
add
movsl
or
push
lea
and
xor
test
xor
push
ss
or
adc
adc
pop
push
xor
daa
psadbw
mov
insb
add
xlat
ret
sub
dec
add
ficoml
inc
and
or
push
push
push
pop
and
add
lahf
cltd
lods
add
mov
mov
inc
or
bound
pop
fpatan
rclb
aam
xchg
pop
mov
xchg
aad
mov
push
jp
out
inc
dec
inc
loopne
sbb
mov
add
inc
aas
arpl
push
cs
aaa
sahf
push
ss
wbinvd
pop
xor
test
dec
or
shr
pop
addr16
push
lds
inc
jae
mov
shll
outsb
dec
pop
mull
shrl
add
addl
push
sub
jo
push
dec
cmp
cmp
fsubs
mov
push
roll
in
pop
cs
fdivs
and
cmp
loope
push
pop
insl
gs
jmp
push
jb
insl
and
push
ss
pminsw
xor
jo
sub
add
rol
xchg
pushf
inc
es
lret
xchg
mov
gs
push
jo
push
inc
in
fs
test
cmp
mov
in
jae
pop
dec
ljmp
push
ja
inc
and
mov
lds
xorl
fcoms
mov
repz
lcall
shlb
les
and
sub
jae
push
pop
rcrl
pop
roll
pop
aaa
jo
pop
das
inc
push
fldt
jmp
cmpsl
les
xor
inc
sub
sbbl
jnp
ss
sub
inc
loop
and
and
fists
sarl
push
dec
ret
mov
imul
cmp
xchg
int3
ret
xor
jo
xchg
mov
pop
scas
sub
out
ja
inc
push
clc
jge
inc
pop
dec
addr16
dec
pop
inc
push
pop
add
add
int3
mov
sbb
out
addb
xor
repz
pop
dec
jne
cmp
mov
push
push
inc
or
int
call
scas
push
sub
sbb
mov
mov
push
imulb
sbb
inc
add
pop
fstpl
jae
out
test
test
xlat
mov
imul
mov
popa
inc
fldl
into
jno
inc
mov
pop
daa
push
loopne
fs
aas
sti
movsl
push
andb
aaa
mov
popa
loopne
jb
xchg
or
jb
ret
stos
sub
or
rdpmc
xchg
push
aam
or
notb
cltd
fadds
sbb
scas
xor
fwait
je
jno
stc
in
xor
mov
ret
stc
jg
pusha
stos
andl
xchg
bound
adcl
adc
pop
mov
pop
push
pop
inc
or
cmp
mov
bndstx
push
push
dec
cs
lcall
and
orl
jbe
push
stos
inc
inc
push
pop
pop
cmp
arpl
aaa
dec
add
mov
mov
mov
mov
pop
inc
es
mov
out
xor
into
pop
addr16
mov
sub
mov
and
outsb
shl
in
rcr
jnp
inc
mov
mov
cmpsl
punpckhwd
es
ret
and
in
inc
jae
insl
xchg
mov
mov
imul
lea
les
or
dec
or
jmp
mov
sbb
das
or
sbb
js
jbe
or
pop
push
push
push
inc
mov
mov
jne
pop
or
adc
stos
inc
mov
jp
push
jne
sub
testb
outsb
push
invd
out
enter
push
roll
mov
fs
dec
mov
sbb
cs
xchg
lret
sub
xchg
fcompl
ret
or
or
xchg
cmp
sub
cmp
jbe
adc
adc
out
fsubs
es
aaa
adc
in
sahf
jg
movsl
pop
dec
stc
and
jb
insb
sbb
or
inc
sub
pop
inc
bound
fnstsw
pop
gs
imul
fimull
mov
mov
inc
mov
dec
test
add
inc
sub
xor
or
push
fcomp
aam
popa
dec
out
insl
dec
bound
jno
xor
inc
pop
scas
or
cmpsb
adc
inc
pop
pop
adc
xlat
pop
pop
xor
inc
jb
sbb
ficoms
cmpb
in
aaa
ds
loopne
cmc
ret
push
jo
add
and
sbb
loopne,pn
mov
daa
data16
movb
add
imul
xchg
push
mov
adcb
adc
lret
movsl
mov
push
je
out
pop
lsl
outsl
cmp
jnp
iret
cld
push
aaa
jo
or
pop
fld
lock
imul
ret
mov
sub
sbb
les
adc
stc
or
andl
arpl
inc
aaa
or
lods
loop
sbb
add
test
dec
js
outsl
sbb
in
add
es
arpl
push
movhps
cs
dec
dec
xor
mov
adc
mov
xor
decl
add
test
aad
icebp
clc
sub
data16
and
jo
mov
ljmp
les
push
ret
aaa
dec
inc
add
and
imul
cmpsl
pop
add
movq
ja
ljmp
je
inc
push
scas
xor
push
dec
test
fsts
mov
cmpsl
mov
lcall
js
shll
jae
push
ds
dec
push
dec
xchg
fcmovu
testb
jmp
xrelease
pop
test
testl
test
xlat
sbb
cwtl
andl
aaa
ja
inc
or
pop
mov
movhps
add
fbld
lds
lods
dec
fisttpl
filds
test
push
fistps
and
fnsave
add
lcall
or
loope
mov
test
test
jbe
mov
xor
mov
bound
sub
push
rorb
es
iret
stos
sub
sbb
pop
push
hlt
outsl
cmp
and
es
or
outsb
mull
sub
inc
fnstsw
sub
mov
or
fildl
addr16
nop
pop
cmpsb
adc
push
mov
inc
in
xorb
mov
loop
lods
push
shrl
mov
adc
sbb
jne
test
pusha
fs
pop
xchg
and
out
int
test
arpl
sbb
hlt
mov
push
arpl
das
push
in
push
fcmovnbe
nop
dec
ljmp
adc
push
pop
aas
sti
imul
hlt
mov
fisubrl
aaa
xchg
js
sbb
or
or
mov
aad
es
insl
add
imul
dec
add
cmc
rol
pop
ljmp
fdivr
inc
inc
push
push
popa
push
and
or
popa
jbe
das
dec
test
pop
rolb
repnz
mov
pusha
jnp
mov
rorb
xchg
inc
test
jb
lods
fistpl
in
ret
or
fadds
ret
and
aaa
inc
mov
mov
push
adcl
mov
push
adc
cs
xor
je
loopne
sbb
mov
insl
push
nop
sbb
and
daa
popa
jnp
push
add
pop
insb
or
fwait
or
pop
mov
sbb
inc
test
pusha
aaa
mov
add
int
jb
fisttpl
popa
cs
sbb
les
fs
push
push
mov
icebp
scas
and
push
subb
mov
fisttpl
rcl
mov
inc
push
xlat
mov
aad
mov
arpl
lea
add
aaa
fildll
and
js
xlat
mov
dec
push
adc
or
js
push
inc
push
sbb
mov
sbb
mov
xor
lea
push
sub
pop
sub
pusha
addr16
add
filds
das
sbb
aaa
push
icebp
push
jo
lds
push
ds
bound
sbb
sbb
sbb
inc
ds
outsl
cmp
data16
xor
sbb
in
mov
add
push
imul
sbb
cs
adc
outsl
add
xorb
popf
test
mov
bound
outsb
dec
aaa
inc
mov
fstps
add
or
cmpsb
mov
add
cld
cs
in
mov
pop
push
roll
bound
fiaddl
inc
stos
out
notl
sub
shlb
sub
insl
jbe
iret
pop
test
and
repz
adc
sbb
or
test
add
dec
cmc
mov
xor
pop
sub
adc
inc
sahf
cmp
test
cmp
ss
mov
shlb
insb
outsb
popf
xor
sub
lea
test
pop
mov
inc
lea
xchg
lods
addb
cmpl
xor
cmp
adc
mov
cld
sub
push
push
fstpl
fnsave
xor
insb
jno
mov
and
mov
sub
mov
lods
sbb
jb
pop
xchg
movsb
orb
xchg
aad
loope
mov
mov
outsl
pop
xchg
sahf
adc
or
jo
sahf
xor
sbb
mov
insl
dec
xor
mov
fldenv
sub
ret
pop
insl
test
inc
sub
xorl
pop
stos
mov
sub
push
fmull
or
and
mov
push
inc
xchg
lahf
daa
ficomps
daa
pop
inc
sub
xor
adc
cwtl
and
lods
dec
pop
mov
ret
and
adc
pop
out
popa
adc
inc
and
div
push
ret
or
popa
std
inc
hlt
fs
andb
inc
pushf
push
jns
lds
outsb
inc
inc
and
inc
push
mov
notl
xchg
push
sub
pop
das
pop
xor
and
inc
or
jnp
popa
xchg
xor
xchg
add
xor
fistps
and
and
lods
sbb
popf
adc
pop
push
and
xchg
pushf
pop
test
push
sub
or
arpl
sbb
adc
xor
test
xorb
fdiv
add
mov
pop
ja
mov
jo
cmc
xchg
jo
gs
lods
dec
in
dec
xchg
or
daa
jns
xchg
sarb
scas
or
xchg
or
cwtl
sbb
pop
mov
jmp
sbb
or
leave
dec
add
inc
lods
or
inc
cs
push
sbb
jbe
dec
xor
imul
js
mov
xchg
repz
addl
jne
bound
and
push
cmpsb
in
mov
mov
lea
adc
pop
shrb
or
stos
lahf
xor
cmp
pop
insb
push
sbb
daa
arpl
push
testl
addl
sbb
dec
das
sbb
mov
inc
pop
insb
adc
jo
ds
push
aam
test
in
push
and
fstpt
inc
lahf
lds
mov
mov
mov
and
dec
sbb
jmp
mov
sub
and
insb
or
inc
dec
in
or
xlat
pop
lods
imul
cmpsb
push
lea
lds
loopne
push
mov
adc
cltd
inc
pushf
test
dec
test
imul
sub
loop
adc
dec
mov
stos
mov
aaa
jmp
lods
inc
inc
dec
sub
push
add
push
add
in
ja
je
scas
call
sbb
sub
xor
outsb
pop
inc
or
or
xlat
or
pusha
cmp
or
cmp
mov
out
je
add
xor
and
mov
mov
daa
add
ss
fcmovb
pusha
mov
and
test
ret
pop
daa
push
jl
cmp
dec
push
cmp
xor
adc
jae
push
xor
xor
imul
mov
ss
daa
xor
dec
test
dec
bound
xor
cmpl
movsb
seto
pushf
push
mov
aam
loop
into
inc
dec
or
sbb
inc
push
inc
dec
ss
sbb
scas
mov
movsb
cs
sub
pop
push
adc
ss
push
fsubrl
xor
add
ss
cmpsl
rorl
std
mov
cmpsl
mov
jg
pop
add
sub
lods
test
mov
adc
dec
dec
insl
adc
aam
sub
sti
arpl
pusha
xchg
dec
lods
push
lret
int
daa
insl
inc
jo
cmpl
mov
cmpsb
or
sub
fildl
xor
lds
push
jo
mov
cmp
sub
and
andb
imul
fmuls
push
arpl
adc
ja
or
pop
push
testb
and
add
lods
push
outsl
xchg
nop
mov
xchg
inc
cs
ja
mov
mov
xchg
sbb
adc
aas
jae
sbb
ss
xchg
test
mov
xchg
test
jne
add
add
and
jno
xchg
sbb
sbb
xchg
cwtl
dec
enter
je
mov
lcall
fdivr
push
add
or
inc
loop
das
xchg
mov
fwait
mov
or
fisttpll
icebp
add
js
jo
lods
or
adc
lea
or
rolb
or
dec
and
incl
dec
js
inc
and
xor
mov
and
adc
jne
mov
adc
adc
adc
push
ret
add
mov
push
mov
aas
push
xlat
add
add
push
call
sbbb
bnd
sbb
lret
mov
ret
scas
sub
pop
mov
or
pop
pop
pop
push
sub
xchg
cld
lea
decl
mov
rep
mov
stos
push
push
push
push
push
push
or
jno
call
loope
push
test
ret
add
inc
and
xor
xor
insl
xchg
nop
sub
lret
pusha
push
mov
push
mov
or
sbb
les
divb
pushf
dec
mov
sub
ja
adc
sub
test
pop
mov
aaa
test
inc
mov
aaa
test
outsb
daa
pop
push
inc
dec
scas
cmpsb
sbb
add
push
push
add
dec
addl
pop
addb
push
fldl
push
sar
cmc
pop
inc
push
push
xchg
dec
ss
dec
dec
jp
and
aam
stos
mov
dec
rcl
cmp
lret
aam
int3
ds
cmp
addr16
pop
sub
imul
cmp
cld
lcall
mov
add
mov
pusha
pop
inc
out
mov
pop
sub
ret
fcoml
jl
push
imul
sbb
and
sahf
lods
pop
sbb
lret
sub
adc
aaa
das
inc
push
add
inc
mov
testl
imul
add
arpl
out
jo
stos
push
sub
and
inc
pop
xor
addr16
aaa
push
adc
dec
push
xchg
mov
add
aas
popa
test
cmp
bound
xor
push
add
pop
mov
inc
outsb
mov
adc
pop
insb
rorb
mov
iret
popa
out
mov
add
mov
sub
mov
sub
scas
lret
pop
mov
add
push
push
xor
mov
xor
pop
jmp
inc
cmp
das
sub
rep
mov
js
push
pop
mov
or
popa
mov
sub
xor
ja
jmp
cs
inc
and
clc
adc
or
rorl
aam
xchg
mov
add
clts
add
and
leave
outsl
fiadds
jae
stos
inc
add
stos
data16
aaa
mov
mov
add
mov
scas
push
add
push
add
repz
or
inc
cmp
add
repnz
xchg
pop
inc
and
adc
sbb
test
sbb
sbb
sbb
lret
ja
mov
cwtl
jbe
add
cs
sbb
add
cmp
push
sub
adc
inc
add
sbb
aas
add
aas
fcom
inc
shrb
in
or
and
filds
add
add
movsb
add
enter
jns
and
outsl
and
aas
sbbl
mov
mov
pop
cmp
add
mov
inc
mov
or
mov
mov
call
adc
out
jbe
add
mov
xor
int
leave
neg
fsubp
stc
jae
jle
or
clc
lcall
inc
pop
add
imul
lcall
insb
nop
inc
lcall
out
add
or
pop
movsb
or
push
adc
or
insb
nop
and
mov
adcl
das
push
sbb
insb
push
mov
insl
and
adc
and
jb
xchg
push
pop
andb
addb
test
xchg
push
sbb
or
cmpsl
mov
into
jae
sbb
pop
inc
add
adc
pop
xor
nop
xor
rorb
push
jns
jns
adc
cmpsl
das
insb
pop
push
repnz
mov
pop
ja
mov
loopne
add
and
xchg
lea
add
dec
or
xor
and
xchg
add
js
inc
and
mov
cmpsb
and
inc
and
pop
ss
in
xor
push
or
xor
cmpsb
imul
imul
dec
shrl
int3
sbb
pop
sbb
js
dec
shll
cld
add
push
xor
es
add
daa
fwait
xchg
jg
pop
incl
addl
fimuls
mov
test
sub
xor
in
xor
in
add
or
pop
mov
push
fildl
cmp
cmp
out
push
or
int3
push
daa
push
fstpt
pcmpgtd
dec
push
dec
add
rclb
push
push
inc
add
in
push
inc
push
sub
inc
push
mov
push
invd
in
enter
dec
add
sub
dec
cmpsb
or
lcall
inc
inc
pop
or
mov
jno
inc
incb
cltd
xchg
inc
push
push
or
and
inc
dec
pop
push
in
jo
or
inc
push
dec
push
or
inc
add
mov
pusha
lret
scas
adc
leave
in
push
xchg
cmova
inc
push
dec
cmp
insb
pop
push
scas
dec
and
add
in
inc
adc
fistl
inc
notb
dec
scas
push
scas
pop
leave
int
dec
add
push
pop
sbb
push
push
sarb
addr16
push
mov
sbb
or
push
repnz
scas
pop
inc
inc
add
aaa
xor
add
push
scas
pop
push
in
js
ja
and
jbe
nop
xor
push
push
inc
dec
out
imul
in
dec
dec
sub
pusha
scas
in
push
add
push
inc
push
sub
jb
inc
pop
push
add
addl
inc
push
pop
dec
jae
xor
dec
add
dec
dec
cmp
jae
aaa
pop
pop
add
xor
dec
arpl
nop
push
mov
sbb
adc
add
mov
popa
call
adc
sbb
in
push
inc
inc
pop
ds
loopne
ss
push
pop
call
xor
bsf
cmp
push
dec
dec
daa
movsb
push
pop
or
ss
xchg
sbb
ss
dec
add
inc
xchg
dec
dec
pop
cmp
mov
fwait
sub
add
out
sbb
fimuls
rorl
add
cmp
dec
inc
push
mov
in
push
cmp
pop
push
inc
mov
pop
dec
dec
add
pop
or
mov
das
test
jo
pop
xchg
popa
aas
pop
mov
popl
enter
sub
pandn
mov
pcmpeqd
jns
jg
cmovp
aam
mov
pop
mov
movq
cmp
subps
inc
enterw
inc
invd
flds
notl
outsb
fistpll
dec
lock
aas
loopne
call
mov
data16
dec
push
les
mov
cli
mov
enter
push
push
push
iret
jo
mov
pusha
nopl
cmp
cmc
inc
sahf
cmovg
sub
or
ja
aaa
nop
cmp
pcmpeqd
cmovs
mov
mov
jns
add
aaa
and
aaa
cmove
mov
pop
hlt
out
xor
iret
and
out
adc
push
push
cmp
pop
or
scas
push
pop
and
mov
dec
cld
ss
cmpl
imul
imul
cmpsb
imul
shll
hlt
lock
dec
shll
enter
xor
mov
test
xchg
imul
sub
cmpsb
pop
push
pop
or
xchg
fcoms
adc
pop
jg
les
insb
push
addr16
jnp
xchg
fcoml
add
push
jnp
inc
jg
es
pop
xchg
es
das
mov
cmp
rcll
mov
dec
repnz
cli
or
or
ret
seto
repnz
hlt
adc
out
cld
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
sar
inc
in
xchg
cmp
xor
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jg
mov
mov
std
mov
fsubs
stos
xchg
clc
repz
mov
dec
pop
fldl
xchg
and
and
int3
add
sti
aas
jno
or
mov
pop
fs
dec
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
clc
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
movsl
inc
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
cmp
test
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
imul
into
ror
add
cmpsb
fmuls
xchg
push
cmp
pop
cmpsb
imul
xor
adc
xor
addr16
ja
mov
ss
imul
insb
add
pop
xchg
lods
andb
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
sbb
inc
in
and
xor
and
add
popa
call
xor
inc
push
xor
adc
arpl
aas
dec
or
inc
inc
sbb
aaa
pop
push
inc
sbb
or
push
and
pop
xchg
push
and
insl
les
push
ss
mov
push
pop
dec
mov
push
adc
xchg
mov
outsl
and
adc
rcrb
imul
push
sbbb
add
push
insb
bnd
insl
jns
mov
push
es
push
push
sbb
movsl
sbb
xchg
inc
jns
outsl
push
pop
nop
in
shrl
push
pop
out
xor
sub
push
imul
test
add
adc
xchg
sbb
inc
nop
lock
or
mov
add
sbb
pop
or
sbbl
sbb
dec
push
xor
int3
fidivs
sub
xor
fs
adc
cmp
popf
movsl
gs
sub
xchg
in
bound
push
sub
xchg
ficoms
pop
xor
nop
daa
add
or
or
call
add
mov
inc
inc
inc
sahf
jge
je
pop
inc
popa
je
mov
jge
inc
insl
mov
adc
and
outsb
xor
daa
inc
cmp
rcrb
dec
pop
cmp
cs
push
jo
gs
pop
xchg
lods
arpl
dec
imul
ficoms
inc
sbb
add
mov
add
and
jno
sbb
push
or
jmp
shll
inc
inc
pop
lea
jo
xchg
cmp
jno
jle
push
fwait
rolb
mov
cmp
dec
test
or
push
fidivl
loope
icebp
dec
lock
lods
add
xlat
push
loope
cmpsl
push
lods
sbb
jmp
and
dec
dec
ret
mov
push
mov
pop
push
inc
mov
mov
dec
int
jecxz
xor
xchg
adcl
outsl
fcmove
inc
jbe
andb
add
cmpsl
je
ret
push
sbb
fs
outsb
inc
adc
jecxz
aad
xchg
dec
test
dec
outsb
or
and
or
sub
popf
add
push
ficoml
mov
pop
daa
jmp
imul
dec
fcoms
mov
bound
test
jae
push
sbb
sbb
adc
push
pop
adc
popf
sbb
data16
jae
pushf
faddp
and
aas
inc
push
es
fisubrl
adc
pop
movups
testl
aaa
fisttpl
mov
nop
scas
sbb
shlb
inc
sub
sub
aad
sbb
push
call
pop
dec
andb
xor
rorb
push
pop
push
popa
and
mov
push
je
insl
cltd
lcall
or
xor
mov
mov
mov
adc
int3
or
fidivl
pusha
jne
mov
lds
orl
lret
ds
inc
dec
inc
stos
push
cmp
pop
xchg
mov
inc
dec
inc
push
xchg
push
sbb
push
and
xchg
pop
push
movsl
in
push
adc
push
add
out
add
dec
add
adc
add
add
add
adc
pop
and
push
add
jo
out
mov
outsl
add
and
inc
pop
add
cmp
xor
fcmovnbe
scas
add
add
adc
lock
sub
add
and
mov
or
mov
in
into
dec
inc
jae
sbb
fcmovb
ss
dec
inc
add
dec
sbb
test
dec
sub
imul
push
jl
inc
push
orl
dec
cmp
loope
jnp
add
cmp
popl
xchg
and
add
inc
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
