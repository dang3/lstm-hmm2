mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
xlat
shll
rcll
in
out
ret
inc
and
or
adc
shl
sahf
notb
cmpsb
mov
cmp
aad
sub
sbb
inc
lcall
inc
lds
insb
push
adc
out
dec
outsl
js
or
rclb
rcrb
scas
imul
dec
gs
ret
repnz
cmp
dec
fstps
jecxz
push
push
jl
xchg
or
cmp
dec
int3
cmpps
sbb
adc
jge
jne
mov
cmp
mov
add
push
lret
inc
inc
movsb
scas
mov
sar
sub
das
jo
adc
outsb
adc
pushf
cmpsl
repz
xchg
sub
adc
sub
out
fldcw
jmp
pop
sub
shlb
xchg
daa
test
xor
mov
push
js
sbb
js
sub
pop
outsl
and
das
rcl
int3
jle
fs
sti
push
idivl
mov
or
in
lsl
adcb
sub
jno
push
dec
movsb
xor
dec
push
add
xchg
es
enter
mov
in
sub
xchg
sub
clc
stc
lods
int3
in
out
arpl
jne
into
fdivp
in
jle
push
sbb
push
jnp
addr16
or
mov
xor
arpl
in
hlt
lret
cs
fcmovne
movsl
lahf
sbb
cs
dec
lret
imulb
aam
jmp
adc
xchg
inc
jecxz
fdiv
push
imul
js
pop
arpl
sbb
xchg
xchg
insl
or
mov
mov
push
outsl
in
cmp
mov
lods
cld
jnp
mov
pop
pushl
std
in
repz
mov
cmp
cs
ljmp
sbbl
test
cmp
sbb
es
decb
sbb
jmp
call
lret
fidivl
fisttpl
pop
xchg
lods
dec
jp
cli
pusha
nop
pop
in
lcall
ja
popf
mov
int3
lret
les
sub
cmp
mov
jb
jnp
nop
popf
dec
test
cmp
imul
push
lods
fsubl
mov
or
adc
out
lock
fwait
scas
sub
lods
std
jnp
xor
and
cmp
sub
loop
inc
add
test
sti
push
mov
xor
mov
shll
inc
faddl
fiadds
adc
mov
mov
ljmp
mov
ret
shll
mov
jno
shll
adc
addr16
mov
push
jl
pusha
push
xor
scas
push
enter
rol
add
fadd
mov
jo
xchg
lahf
inc
and
inc
mov
xor
push
lds
ret
mov
mov
xchg
mov
shrb
movsl
inc
hlt
or
mov
gs
jp
call
pop
xchg
popf
aam
adc
test
inc
hlt
pop
subb
shlb
loopne
cmp
jmp
xor
pop
nop
outsb
outsb
fdivrs
insl
and
out
and
stc
test
pop
push
imul
int
push
mov
xchg
mov
or
icebp
cmpsb
push
jns
add
inc
ja
pop
adc
jp
jno
pop
out
push
fld1
adc
mov
inc
jp
rcl
std
dec
sti
xchg
dec
test
cmp
mov
daa
mov
dec
call
ficoms
pop
in
jb
clc
xor
mov
imul
xchg
fsin
mov
jl
or
data16
push
inc
sti
mov
test
cmp
adc
xchg
inc
push
inc
enter
xor
imul
fidivs
cmp
mov
lahf
out
mov
sbb
int3
adc
ret
cs
sbb
or
xlat
sub
out
or
ja
adcb
inc
popf
push
fisubrl
mov
sbb
popa
int
jp
fisttpl
test
jo
and
xchg
lods
push
ds
sbb
icebp
push
xor
scas
inc
lods
test
icebp
cmp
std
inc
xchg
iret
add
lcall
incl
adc
daa
xchg
andl
cld
iret
cltd
subb
ja
pop
xor
sub
lock
adc
iret
push
clc
or
cwtl
mov
orl
sub
ljmp
cmp
rorb
adc
sub
cli
dec
and
xchg
pop
mov
call
imul
out
xor
add
imul
arpl
pop
pop
add
loop
gs
or
aas
mov
sub
shrl
push
mov
pop
jl
pushf
mov
aad
je
mov
pand
clc
scas
mov
sub
scas
lret
rolb
jno
stc
cld
pop
dec
stc
xchg
out
sbb
sti
cmp
jle
push
cli
insl
ret
fimull
sub
xchg
ds
jmp
adc
js
dec
sbb
out
mov
bound
mov
repz
add
sub
lds
xor
adc
mov
pop
xor
in
hlt
cmp
mov
stos
inc
shr
inc
call
pop
sub
xor
leave
ja
lods
loopne
inc
mov
popa
pushf
sub
mov
push
shl
movsl
test
addb
pop
sti
adc
int
ljmp
mov
inc
sarb
outsb
cmc
pop
flds
repz
repz
adc
scas
push
mov
cmpsb
insb
xor
in
cs
push
jecxz
or
stos
inc
mov
ljmp
sbb
testb
push
mov
push
mov
es
dec
bound
mov
push
push
out
sub
js
ss
js
cli
mov
sbb
scas
fwait
mov
jae
adc
mov
sub
pop
faddl
out
leave
insb
fwait
sub
add
es
sbb
neg
pop
jmp
fisttpll
jp
pop
jg
in
inc
daa
out
imul
bound
dec
dec
add
mov
inc
sbb
int
cld
jecxz
lcall
outsb
pop
cmp
movsb
jg
xor
icebp
loopne
and
shl
int3
jmp
lret
cld
adc
dec
push
pop
enter
scas
pop
jmp
push
xchg
sbb
inc
int3
mov
jbe
push
mov
mov
in
jnp
loopne
mov
inc
xchg
add
icebp
orl
inc
sti
pop
outsl
sbb
lret
mov
fstpl
and
in
sub
enterw
inc
push
cmp
mov
test
loope
mov
xor
push
insl
outsb
adc
lods
jp
jmp
inc
push
xor
mov
sub
jns
call
mov
sub
inc
dec
int3
push
in
lahf
cwtl
mov
shlb
inc
push
pmullw
pusha
mov
xchg
aaa
dec
or
popa
sub
fwait
mov
jnp
jo
cmp
xor
xchg
int3
out
ljmp
shl
xor
push
popf
fdivs
lods
les
cwtl
mov
jae
fstpt
xchg
std
mov
pop
fistpl
or
xor
add
pop
fildl
jl
xchg
mov
fsub
jge
cmc
lock
add
pop
jns
popa
pop
nop
int
jno
xchg
ja
mov
push
sub
stos
rorb
mov
imul
lahf
mov
cmp
dec
push
push
stos
push
pop
icebp
push
xchg
fsts
mov
push
mov
aad
mov
pusha
cmpsl
dec
xchg
fs
notl
xchg
fsubs
fbld
sub
mov
shrb
mov
push
push
sub
mov
outsb
in
or
xor
hlt
xchg
dec
mov
sbb
fidivl
out
push
jp
andb
testl
lahf
sbb
push
cmp
nop
push
mov
and
pushf
mov
pop
xlat
sbb
popf
inc
in
out
pop
data16
mov
inc
and
push
xchg
inc
adc
in
mov
adc
mov
pop
mov
lds
test
sub
mov
call
dec
cwtl
ja
sbb
loopne
ret
pushf
nop
inc
sbb
fwait
pop
in
jae
cs
aaa
cltd
xchg
movsl
rcrb
xlat
shlb
mov
movsb
imul
mov
push
movsl
push
or
inc
adc
cltd
push
cltd
ja
push
divl
data16
mov
in
cltd
adcb
and
xchg
bound
aas
mov
sub
mov
mov
add
add
push
test
xor
jo
xor
inc
mov
push
cs
lahf
lock
out
ljmp
lcall
sbbl
sub
movsbl
adcb
bound
ljmp
outsb
push
outsl
jmp
popa
test
pop
loopne
jb
add
sbb
aam
arpl
ret
stos
es
xor
jmp
pop
fcmovne
sbb
adc
adc
jg
jp
adc
rorb
popf
mov
bnd
xchg
int
sub
mov
and
and
cmpsb
and
arpl
fs
aas
movsl
push
xor
ror
lods
iret
mov
mov
mov
fisubrl
bound
inc
adc
or
push
mov
xchg
and
fucomi
lods
insb
pop
and
shl
leave
in
fisubs
and
push
mov
fwait
scas
jp
sbb
add
pop
xor
or
test
push
cmpsb
adc
lds
push
cli
jle
xlat
frstor
insb
xchg
add
inc
sub
adc
adc
fbstp
jl
aad
testl
bound
jnp
pop
or
xchg
jnp
test
gs
adc
icebp
xchg
sub
pop
aas
jecxz
jb
out
arpl
or
push
and
lods
or
decb
pop
test
mov
jne
mov
insl
cld
shll
push
sub
and
jb
adc
mov
insl
daa
addr16
xchg
jbe
add
aas
scas
adc
inc
xor
push
pushf
cwtl
aaa
fldcw
in
fs
mov
icebp
xchg
push
mov
inc
jmp
push
clc
sbb
shl
pop
fiadds
dec
pop
cmp
sub
jns
rcr
imul
movsl
and
enter
stc
and
js
ficoms
jnp
mov
scas
ret
lock
out
lods
add
push
outsb
add
in
loop
daa
enter
mov
dec
test
or
rorb
lahf
add
push
push
jne
xchg
movsb
fbstp
popl
inc
sbb
mov
aam
and
sub
inc
mov
mov
int3
enter
popl
xchg
push
rorb
push
in
shl
ds
int3
add
addb
cmc
push
jb
mov
sub
std
sti
clc
inc
popf
out
add
jo
outsb
dec
mov
xor
cs
pop
lock
int3
mov
lcall
mov
sbb
dec
mov
jnp
lds
push
test
mov
test
mov
jle
mov
push
das
shrl
pop
test
cmc
cmpb
out
xchg
hlt
mov
ss
dec
xor
dec
push
xchg
sbb
iret
shl
pop
and
cli
pop
rorb
inc
out
and
xlat
scas
xchg
pop
xor
push
inc
mov
incl
fs
lea
rcl
push
int
and
xor
mov
je
jge
mov
loope
ds
imull
andl
push
sbb
mov
push
mov
jmp
and
test
iret
arpl
scas
in
ljmp
rol
int
out
mov
mov
addr16
cltd
sahf
and
popa
ret
mov
lcall
ds
sbb
jge
loopne
or
gs
mov
adc
je
nop
inc
mov
shlb
pushf
jno
or
xor
les
add
inc
push
push
ds
cmp
add
jns
das
and
out
in
cmp
fiaddl
inc
push
or
push
add
and
jbe
adc
arpl
test
push
in
and
sub
lds
scas
inc
jbe
inc
mov
cltd
jmp
sbb
mov
cmpxchg
repnz
aas
mov
bnd
test
xchg
cmc
xchg
out
or
cli
or
sarb
dec
inc
inc
cmc
out
inc
aaa
dec
faddp
fxch
mov
pop
fs
nop
mov
sbb
daa
mov
into
jno
subl
cli
cmp
je
sbb
and
fistpl
testb
pop
mov
cli
aaa
or
lcall
shlb
arpl
or
cmp
testl
push
out
jp
dec
inc
mov
shll
jno
xchg
pop
divl
and
adc
cmp
mov
jnp,pt
popa
gs
cmp
outsb
inc
pop
jo
mov
js
cmpsl
and
or
pop
mov
add
or
sti
jle
add
or
lahf
dec
aaa
jecxz
ja
into
arpl
lods
mov
mov
inc
data16
mov
lods
js
jns
cwtl
dec
outsl
popf
enter
xchg
add
adc
inc
cmc
test
in
xchg
es
xlat
mov
xchg
stos
stos
sarb
out
dec
adc
scas
movsb
dec
scas
push
xchg
cld
mov
loope
jbe
cmc
loope
push
mov
mov
sbb
jmp
jl
lahf
cmc
or
adc
push
popa
jle
mov
loopne
fbstp
adc
sti
fimull
in
or
jnp
icebp
sarl
aad
mov
bound
push
scas
xlat
mov
dec
xor
in
push
lret
adc
popf
imul
pop
shrb
cmc
xor
in
loop
inc
xchg
inc
popf
cmp
jmp
xchg
xchg
mov
inc
inc
adc
sti
in
int
out
enter
outsl
and
cmc
mov
cmp
arpl
rcll
xor
sbb
cmpsb
mov
sub
inc
lods
test
pop
dec
loopne
adc
iret
scas
push
and
mov
fs
int3
lret
nop
mov
cmpsl
mov
ds
pop
mov
jae
mov
mov
push
jmp
jne
leave
xchg
jge
cmpsl
or
inc
cwtl
sub
jecxz
fistpll
ds
dec
cltd
hlt
and
into
dec
dec
jle
xchg
outsb
push
mov
call
xor
sbb
push
clc
lock
lcall
dec
add
sub
cmp
or
sarl
push
cmp
push
iret
pop
hlt
out
sub
repz
jle
sahf
inc
dec
or
mov
pop
imull
pop
dec
jecxz
dec
iret
cmp
mov
jg
cmc
sbb
push
and
push
cs
mov
xor
shrl
pop
adc
call
fnstcw
aad
adc
les
inc
fldt
xchg
insb
test
les
cwtl
mov
jne
lods
pop
rcrl
vphaddbw
das
push
dec
push
push
mov
sub
adc
rolb
adc
pop
bound
dec
cmpsb
movb
and
sete
dec
std
jecxz
sahf
jmp
out
xor
xchg
in
out
xlat
xchg
stc
inc
mov
loop
adc
push
gs
inc
scas
xchg
jo
clc
dec
fstpl
cmpsb
in
mov
adc
and
js
or
lret
jbe
fsubs
cmpl
and
outsb
sub
outsl
shll
out
test
hlt
fldcw
test
movsl
stc
sarl
push
jge
inc
mov
jnp
scas
mov
scas
out
cmpsb
cmp
adcl
nop
test
call
inc
cmp
sub
adc
rcr
in
stc
fucomi
loope
neg
cmp
xor
push
pop
xchg
inc
test
aas
lret
mov
or
pop
adc
mov
addl
mov
mov
gs
xchg
jge
mov
jp
jns
push
cltd
mov
aad
add
mov
push
pusha
aaa
ljmp
into
mov
push
movsl
push
inc
icebp
xchg
popf
rcr
sbb
outsb
push
inc
xchg
std
jb
push
outsl
dec
push
out
es
fsubr
into
cwtl
sub
mov
jne
push
cwtl
cmp
movsl
mov
cmp
decb
xchg
in
mov
or
sbb
arpl
pop
pop
xor
inc
jns
fmulp
sbbl
mov
mov
inc
push
mov
lahf
nop
scas
mov
xor
pop
or
xchg
jmp
loope
shlb
xor
sub
inc
or
xor
dec
int
sbb
add
andb
outsb
out
jne
push
test
pushf
rorl
ret
mov
xchg
sbb
rclb
repnz
pop
pop
ja
jle
fists
and
imul
popa
into
cmp
test
das
sub
dec
lret
cmpsb
repz
push
icebp
push
insb
outsl
mov
sbb
mul
nop
and
fldl
lods
das
push
xchg
lret
pop
mov
or
jno
add
popa
xchg
clc
sub
cmp
call
and
push
mov
mov
lret
mov
movsl
ret
insl
movsl
cmp
mov
cmp
ljmp
test
lock
hlt
adc
mov
cmp
loopne
popf
cld
sub
shrl
loop
fistpll
sbb
outsl
mov
aam
xchg
jge
and
push
test
ds
xchg
or
cmpsl
cmp
or
jl
shrb
cs
popa
fistpll
stos
sbb
mov
clc
adc
cmp
movsl
pop
jge
sbb
jb
xchg
and
lret
xchg
jbe
fcoms
scas
fdivl
mov
call
mov
sub
mov
aaa
or
push
ret
test
mov
mov
add
repz
mov
mov
xorb
mov
imul
add
ds
jmp
dec
popa
and
hlt
js
sbb
dec
rorl
jo
jb
inc
icebp
pop
jle
cld
mov
fs
mov
test
xchg
pop
fdivl
mov
out
fidivrs
or
int
bound
loop
and
fs
cltd
sub
fiaddl
cltd
cmpsl
shlb
dec
cwtl
push
fs
sti
xor
addr16
inc
scas
aas
in
add
cld
mov
shlb
lods
stc
ror
notb
out
repnz
lods
mov
and
loope
hlt
leave
add
and
scas
push
xchg
imul
fisubs
inc
ja
sbb
cwtl
inc
test
repnz
repnz
test
jge
mov
int3
cmp
roll
out
and
sub
cmpsl
xabort
out
jb
dec
pop
dec
cmp
mov
push
es
jge
movl
sbb
mov
pop
out
shll
popf
pop
mov
push
inc
jg
xor
lret
leave
lods
xchg
ret
jno
and
xor
je
sbb
jge
pop
pop
data16
data16
pop
test
push
dec
push
mov
jp
mov
jle
fildl
xor
hlt
lods
pop
sarl
les
cli
mov
mov
adc
xor
ss
cmp
aas
push
test
cli
mov
push
push
fmuls
pop
pop
fs
in
lods
sahf
xchg
sbb
jecxz
cmp
push
lods
aaa
insb
mov
dec
stos
mov
dec
sbb
mov
jmp
mov
call
adc
mov
jg
pushf
and
movaps
cmc
fwait
outsb
test
lret
test
sti
in
mov
fdivrp
or
fucom
scas
aas
in
das
inc
out
out
dec
cmp
test
mov
jae
lret
xor
xchg
xor
push
lahf
cmpsl
adc
and
xchg
pushf
iret
mov
or
outsl
add
sti
push
int3
ret
mov
xchg
inc
addr16
mov
ret
adc
jb
adc
repz
addr16
or
and
lea
sti
sbb
mov
cld
repnz
outsb
mov
xchg
outsb
cmpsl
es
das
pop
mov
pop
leave
mov
stos
mov
cmp
dec
or
add
psubusb
ja
sbb
push
rcl
out
out
dec
outsl
cs
sbb
pop
push
dec
cwtl
or
mov
fucomp
jecxz
mov
clc
push
ss
icebp
push
sub
pop
xor
std
push
fdivrs
jno
xor
dec
xchg
jp
shl
mov
inc
dec
pop
sbb
mov
filds
push
cmpsb
out
xchg
imul
dec
xchg
inc
in
mov
fwait
adc
inc
mov
loope
inc
pop
inc
adc
jmp
test
pushl
mov
inc
insl
out
jg,pt
sub
lds
pushf
int3
xchg
iret
lret
out
mov
sub
jns
andl
mull
cmc
or
ja
inc
xchg
lods
inc
test
push
scas
fsubrl
mov
push
repnz
dec
fidivrl
dec
push
rclb
inc
jne
push
xabort
or
jns
or
xor
cli
pop
sub
adc
gs
mov
jmp
aad
lahf
lods
sbb
mov
loop
fstl
pusha
dec
out
bound
jne
mov
sbb
mov
cs
sti
andps
pop
in
ret
leave
je
mov
xchg
hlt
ljmp
add
std
lret
dec
in
addr16
pop
sub
das
call
jmp
xor
push
push
adc
and
inc
push
ror
mov
jmp
int3
xor
xlat
test
int3
xchg
inc
jecxz
enter
cmp
aaa
or
sub
mov
sahf
mov
out
gs
in
dec
inc
adc
pop
cli
push
xchg
xor
or
push
movb
adc
cmp
xchg
sub
push
mov
leave
or
shlb
iret
xchg
stos
aaa
inc
repnz
push
insb
push
xor
xchg
enter
cmc
or
rcl
ljmp
pop
mov
sbb
dec
bound
pop
ss
cmp
dec
mov
pop
loop
test
mov
add
jo
das
push
mov
jb
aaa
lods
ror
adc
not
cmpsl
mov
ficoml
jns
std
lcall
cmp
mov
loopne
add
shrl
idivb
lea
fwait
pop
punpckldq
xor
sbbb
rcrb
test
jge
dec
jmp
int
sub
mov
fwait
dec
movsl
insb
mov
es
mov
cmp
scas
mov
mov
push
ja
push
pop
data16
aas
sbb
mov
pop
psubb
jae
mov
aad
xorl
mov
std
arpl
test
ficomps
cli
xchg
inc
push
sbb
loope
xlat
xor
loop,pn
sub
popf
orb
mov
push
test
lahf
lret
movsl
xchg
ret
xchg
outsb
stc
jp
pop
mov
push
push
sahf
outsl
push
xchg
imul
outsb
xor
push
rorl
icebp
dec
xor
data16
test
icebp
add
sub
dec
sub
sub
push
in
sub
mov
xor
imulb
mov
xchg
outsl
aas
int3
fcmovu
dec
fstpt
daa
ss
fwait
cmp
clc
jp
clc
mov
fiaddl
inc
icebp
in
mov
dec
or
sbb
cmp
jle
pop
pop
ljmp
rol
sbb
inc
in
ja
jnp
int
jle
cld
test
mov
cmp
test
pop
repnz
adc
gs
mov
daa
inc
ja
das
mov
adc
ret
cwtl
pusha
xchg
xor
mov
push
clc
push
movsl
jle
mov
xlat
sbb
jge
cs
or
subl
xlat
out
jno
stos
aad
mov
mov
xor
dec
push
or
jge
xor
push
mov
fs
fidivs
inc
cld
pop
ds
mov
in
ret
sub
xor
cltd
adc
jb
add
push
jle
cmc
add
dec
jp
movsb
pop
scas
and
pop
pusha
push
sarb
dec
jns
fldz
or
jmp
scas
sub
in
out
cwtl
fnstsw
jne
pop
jmp
xchg
sub
cmp
std
push
lcall
or
stc
jl
sarb
sub
pop
imul
mov
in
and
lds
stc
push
pushf
push
mov
cmc
out
xchg
movsl
sbb
imul
mov
add
hlt
aam
lds
ljmp
in
add
lods
cmp
testb
mov
cmp
out
shl
pop
jg
imul
daa
int
les
repnz
lahf
adc
mov
imul
test
add
das
or
adc
cmp
and
cmp
xchg
jle
imul
fbstp
sbb
jmp
push
std
call
cmpsl
cwtl
xchg
adc
mov
xchg
mov
pop
or
sbbl
mov
dec
jno
aam
cmp
mov
lea
lret
dec
in
add
aam
lods
mov
jae
mov
sbb
push
cmp
test
pop
and
add
cmpb
scas
ds
iret
jmp
jne
push
sub
sub
or
loop
dec
cltd
or
or
iret
lods
jge
test
mov
rolb
dec
mov
cmp
sarl
adc
iret
cmpsl
xor
or
stc
repnz
or
sti
mov
cmpl
fwait
sti
pop
dec
jb
and
lods
add
and
into
add
pop
push
shl
cmp
lods
lret
xchg
dec
sbb
stc
out
add
push
pushf
and
jb
mov
mov
pop
push
inc
inc
ret
iret
jp
hlt
lea
push
inc
into
inc
shll
mov
mov
dec
cmp
pop
lret
mov
divb
sbb
xorb
divb
in
sarb
icebp
lret
inc
pop
sbb
shr
mov
xchg
mov
les
decl
sub
push
pop
fbstp
mov
push
sbb
jle
jle
nop
push
jl
xchg
jle
sbb
clc
sti
dec
mov
fsubl
xor
in
pop
insb
pop
dec
rcr
or
stc
pop
stc
pop
test
and
sub
cmp
in
add
je
ret
pusha
addr16
pop
pushl
cmp
jle
lock
jo
popl
out
ret
stc
cmp
int3
test
mov
jno
xchg
fdiv
pop
inc
pop
inc
add
xchg
int3
cmc
pop
ss
sbb
jg
jle
aas
adc
adcl
cs
add
in
lret
int3
in
jmp
xor
mov
xchg
lods
and
mov
sbb
in
jecxz
scas
js
enter
hlt
inc
test
pop
dec
outsb
sti
mov
jg
les
movsb
push
ljmp
sbb
call
pop
inc
imul
mov
xlat
sbb
inc
outsl
pusha
fisubs
jno
pop
fcom
or
inc
mov
or
sbb
std
mov
int3
sbb
ds
call
sbb
rcl
loopne
push
scas
repz
lret
pop
jp
sbb
jno
lock
int3
test
mov
fcoml
ljmp
pop
pop
testb
cmp
push
clc
fstpl
inc
sub
mov
inc
push
push
stc
addr16
mov
ss
imul
ret
xchg
test
imul
fstp
std
pop
dec
jnp
xchg
mov
leave
push
adc
faddl
fnstcw
push
inc
push
and
jno
cwtl
je
sub
lods
push
or
cs
dec
inc
adc
mov
sbb
sbb
out
pop
inc
jg
shll
addl
movsl
adc
mov
loopne
dec
mov
out
jmp
or
arpl
inc
daa
aam
push
movsb
loopne
cmp
xor
loopne
cltd
mov
sbb
divl
aam
pop
aam
rcrb
jo
add
dec
sub
dec
int
mov
sbb
imulb
dec
sbb
sahf
into
sub
push
cmp
inc
dec
xor
mov
add
mov
bound
adc
push
mov
adc
dec
sbb
inc
xchg
jmp
scas
pop
jle
lret
push
sbb
jg
sbbb
pushf
dec
pop
or
xchg
push
mov
int3
test
pop
outsl
movsl
mov
pop
push
ret
inc
cld
or
mov
out
ret
inc
xor
loopne
inc
jb
xchg
jne
jmp
data16
enter
sbb
sahf
mov
push
pop
loop
es
dec
insl
pop
incb
mov
mov
xchg
pop
pop
in
sbb
out
das
fnstsw
in
add
xor
xchg
push
mov
sbb
sbb
mov
mov
call
mov
mov
lcall
push
add
mov
and
push
or
xor
pushf
cltd
enter
lds
clc
pusha
pop
imul
xor
push
mov
mov
jns
sub
lcall
insb
in
xchg
cbtw
sbb
call
lret
inc
iret
sub
sahf
int3
mov
daa
xor
addl
push
insl
cmpsb
mov
xor
or
data16
pop
cmc
hlt
cmp
lds
mov
pushaw
int3
in
mov
adc
add
cmc
lret
mov
jbe
lea
add
loop
test
cltd
pop
sbb
stos
fildl
das
sbb
mov
repz
outsb
mov
mov
lahf
and
sahf
and
adcl
out
lret
jge
lahf
push
fmul
mov
mov
jns
xchg
xchg
cld
imul
sub
mov
lea
pop
lock
dec
movl
jno
cli
movsl
xor
dec
test
jno
notb
cld
in
ficompl
push
iret
push
repnz
jg
push
push
sub
cmp
sbb
mov
fcoms
cltd
inc
push
es
mov
in
shrb
xor
mov
push
clc
test
out
lret
in
mov
in
jmp
mov
loope
ret
mov
xor
mov
fs
testb
cwtl
data16
aaa
xchg
xchg
push
repz
call
test
push
inc
inc
fisttpl
int3
pop
sbb
mov
daa
pushl
in
or
lahf
outsb
cmpsl
movsl
push
mov
ret
xchg
mov
xchg
inc
or
mov
imul
mov
sbb
mov
push
int
sub
or
cmp
ret
mov
movsl
daa
sbb
ret
add
pop
in
push
call
sbbl
pusha
mov
lods
mov
xlat
int3
fcomps
js
shr
push
push
mov
repnz
aas
in
idivl
aaa
outsb
xchg
jno
movnti
inc
es
insl
sahf
xor
or
xchg
push
leave
or
add
aas
xor
jnp
dec
dec
xchg
std
stc
push
adc
jg
dec
add
inc
push
daa
data16
jecxz
imul
inc
xchg
fmull
shrl
xor
outsb
jae
shrb
data16
shl
sarb
imulb
mov
int3
xchg
adcl
loopne
cwtl
insl
inc
sbb
ret
into
neg
popa
pinsrw
out
movsl
aam
lahf
xchg
je
in
add
mov
lret
dec
push
loopne
cltd
in
xchg
push
push
pop
out
push
in
sti
inc
into
xchg
outsl
loop
std
or
in
mov
jmp
jnp
jnp
fs
iret
dec
pop
test
imul
dec
stc
sub
push
mov
jecxz
mov
inc
scas
scas
out
inc
ret
sub
pop
xchg
outsb
xchg
adc
xchg
insb
mov
loope
xlat
pop
jne
xor
add
push
xchg
mov
incl
ss
mov
push
add
divb
inc
jecxz
push
or
mov
or
div
hlt
std
inc
cmp
call
push
inc
inc
aaa
ss
pop
mov
fsubs
mov
data16
sbb
orl
inc
pop
iret
sarb
dec
and
icebp
add
idiv
outsb
adcb
lcall
sbb
jno
jnp
ret
lcall
and
pushf
out
or
jmp
pop
lcall
shrl
adc
cmp
mov
xchg
jb
or
shlb
dec
clc
add
repnz
or
adc
test
cmp
push
dec
test
leave
pop
test
test
stos
cmp
call
iret
push
mov
dec
fucomip
pop
les
sbb
push
mov
incl
rcl
xchg
out
adc
pusha
adc
fisubrs
and
mov
and
xchg
sub
cmpsl
repz
notb
in
out
add
adc
fisubl
ds
test
popa
add
xor
and
xchg
xor
mov
add
jae
lahf
xchg
or
hlt
and
inc
js
cmp
push
and
imul
jg
push
push
add
push
add
es
jno
add
sub
adc
jae
adc
lret
andb
js
cmp
outsb
add
mov
jmp
or
jle
outsb
cli
enter
mov
fwait
mov
loop
jge
sbb
sahf
mov
mov
aaa
or
std
cld
stos
popa
push
adc
and
push
or
xlat
stos
test
jne
roll
push
mov
out
insl
sbb
push
aaa
or
dec
dec
stos
jecxz
pusha
aaa
stc
cwtl
mov
cli
and
jmp
rorl
push
shlw
and
ret
vaddsd
dec
jge
mov
pop
sbb
out
dec
pushf
movl
pop
sbb
lret
mov
clc
inc
xorb
aam
pop
xor
cmp
aaa
jmp
mov
pop
arpl
int3
jl
or
add
jo
or
iret
xchg
xor
jmp
stc
pusha
inc
sahf
negb
add
orb
imul
pop
mov
inc
outsb
repz
push
testb
shrl
test
imul
jbe
dec
sbb
fs
shll
sbbb
pop
lahf
cmpsl
adc
cmp
sbb
jmp
imul
hlt
inc
xchg
pop
adc
cmc
lock
ret
sbb
cmpsl
pushf
and
jne
lret
xor
jo
cmpl
out
push
push
xchg
jge
mov
cmpsb
xchg
pusha
sti
test
mul
icebp
data16
cmp
fwait
pop
xchg
xor
or
sub
inc
mov
scas
mov
cmpb
dec
add
scas
in
data16
xchg
adc
je
add
sub
push
icebp
push
mov
sub
jmp
iret
test
lcall
pop
jns
pushf
loop
icebp
pop
mov
clc
mov
enter
xor
sub
jae
push
or
insb
xchg
fldl2t
dec
movsl
mov
cmpb
shrl
lods
push
xor
mov
aad
ret
loope
and
lods
lea
sbb
xchg
int3
not
mov
popa
xchg
inc
xor
aas
scas
cmpsb
mov
popa
mov
fldenv
inc
insb
ljmp
adc
pop
iret
xchg
pop
addr16
shll
add
dec
les
int
cld
ljmp
push
cld
jno
out
testl
fiadds
pop
addr16
mov
cmpsb
shll
loop
movsl
jo
fstpt
adc
fstps
flds
psubd
mov
inc
lret
and
mov
push
insl
xchg
jae
xchg
push
jecxz
scas
into
int
mov
daa
das
inc
fistpll
lret
rclb
ret
add
jb
lcall
outsb
add
dec
out
icebp
and
sub
push
loope
push
das
rcrl
aam
push
pop
aad
mov
xchg
jns
or
xchg
jp
fstpt
movl
mov
or
add
or
hlt
sub
rcr
xchg
xor
add
fs
sarl
popa
jl
adc
add
inc
cmp
add
outsl
nop
test
scas
inc
xchg
xlat
out
call
jbe
or
mov
sub
dec
pop
mov
xchg
push
jle
cmpsb
sbb
xor
xchg
pop
cltd
jg
int3
shr
jns
out
sahf
mov
add
fcoms
push
cltd
or
xchg
shld
and
push
arpl
shrb
idivb
arpl
orb
sub
cmp
adc
add
popa
push
fsubs
jae
aad
dec
inc
push
pop
cli
or
and
xchg
sub
adc
scas
dec
mov
xor
out
sub
cmp
pop
clc
mov
fldz
pop
pop
xor
test
loope
sbb
sbbl
mov
cmp
cmp
mov
push
sub
mov
xchg
popl
add
adc
xchg
movsl
xchg
push
sbb
push
jg
jecxz
cmp
sbbl
fisubl
sysret
movsb
scas
add
inc
imull
inc
push
sub
loop
pop
pop
jg
mov
and
ret
add
push
fstl
outsb
aad
push
mov
js
sbb
dec
add
gs
stos
mov
jp
lods
pushf
inc
imul
push
shlb
out
divb
dec
int3
adc
lods
lcall
xchg
dec
outsl
adc
fs
xor
sbb
jge
or
shlb
mov
fidivrs
ja
mov
pusha
sub
push
fwait
popa
jne
rorb
or
mov
mov
in
inc
push
add
mov
mov
andl
movl
insb
in
sti
sub
pop
lods
nop
fwait
push
pop
fcoms
pop
enter
xchg
sbb
je
addr16
push
lahf
lods
addr16
fucomip
lods
adc
ficomps
push
add
push
lock
cmc
andb
xor
aam
or
push
mov
or
cwtl
sbb
js
mov
cmp
sbb
mov
int
lods
jo
js
push
xor
xchg
add
es
mov
negl
push
shl
mov
in
dec
jmp
ret
ja
mov
adc
shl
add
push
mov
loop
es
pushf
loope
inc
xchg
push
imul
pop
addr16
not
or
ret
cld
out
push
pop
aam
ficoml
insl
fsubrs
add
xor
roll
stc
pop
lock
test
jnp
int
jo
les
pop
pop
and
out
lret
repz
shrl
pop
mov
lret
cmp
xor
or
in
mov
pop
out
arpl
ljmp
xchg
mov
mov
bound
je,pt
sbb
xchg
daa
in
andb
adc
ficoml
mull
mov
mov
and
xchg
mov
sub
add
aas
xchg
int
je
out
fcmovnu
cmp
pop
popf
call
adc
push
dec
insb
inc
and
xor
dec
inc
pop
sub
sbb
arpl
adc
mov
jge
mov
or
mov
sti
test
mov
add
call
out
xchg
fs
arpl
xchg
sbb
dec
sub
xor
movsl
sub
das
fdivs
and
ret
loopne
cmp
call
mov
cmp
lcall
xchg
pop
sbb
out
add
jne
call
xchg
test
movsl
mov
pusha
fsubs
xchg
adc
fwait
cmp
fdivr
mov
mov
xlat
push
mov
cmp
or
in
into
leave
icebp
mov
mov
les
jp
lea
mov
inc
xchg
cld
and
sub
inc
test
or
add
jae
adc
mov
repnz
and
push
aam
xor
fadd
mov
fisubl
lock
data16
push
adc
lds
cwtl
dec
dec
sub
mov
push
mov
lock
inc
push
jb
jae,pt
sahf
inc
jecxz
mov
addr16
mov
or
mov
imul
jmp
scas
imul
scas
mov
popa
and
push
loop
mov
fstps
je
push
pop
mov
insb
jge
inc
inc
ljmp
pop
rcll
push
xor
shll
dec
dec
inc
and
push
or
xchg
pop
dec
xor
or
out
gs
jne
sub
jecxz
cmp
cmpsb
stos
mov
xchg
mov
mov
push
jg
lock
insb
inc
adc
inc
jnp
adc
incl
shl
mov
and
inc
sarl
xor
xchg
mov
adc
cmpsb
sub
xchg
out
nop
cmc
sbb
repnz
out
and
lea
xor
mov
das
xor
jp
xchg
mov
and
pop
dec
sub
pop
movsl
out
iret
fcmovne
pop
dec
movsb
fmuls
xchg
popa
sbb
sub
push
dec
scas
pusha
sub
mov
pop
outsb
pop
sub
mov
pop
shlb
outsb
arpl
push
mov
popa
bswap
or
ja
xchg
add
xor
movsl
ljmp
add
cmp
jne
and
les
js
rcrb
or
std
xchg
adc
and
or
and
mov
negb
xchg
inc
fdivrs
cmc
inc
dec
push
idivb
es
or
lret
dec
mov
int3
outsl
add
and
xor
cmc
cmp
or
mov
mov
xor
push
xchg
cld
arpl
es
xor
fcmovb
ja
jecxz
addb
orl
pop
cld
mov
scas
repnz
dec
mov
mov
jns
inc
pop
push
pop
addr16
or
jbe
mov
mov
data16
jno
sbb
mov
add
iret
mov
add
or
movsb
nop
icebp
mov
inc
xchg
xchg
inc
or
rorl
push
mov
or
int3
xor
frstor
and
push
cmp
or
pop
repz
pushf
jo
das
fcompl
lahf
loopne
adc
cmp
movsl
addr16
pusha
addr16
xchg
add
daa
xchg
jecxz
pop
adc
repnz
das
xchg
sbb
out
jne
cmpsl
add
cs
imul
sti
mov
repnz
movsb
imul
mov
std
rorl
jno
jl
xor
test
movsl
leave
popf
inc
push
and
adc
lds
xor
cmp
inc
call
xchg
mov
stos
xchg
or
bound
xor
pusha
std
jl
mov
jb
sub
xlat
insl
popa
add
insb
sarb
fs
sbb
scas
rclb
nop
fiadds
dec
fwait
mov
ds
pop
dec
inc
mov
jb
jno
sub
adc
mov
pop
sbb
dec
movsl
jae
sbbl
daa
mov
dec
mov
and
mov
orl
iret
repnz
inc
or
cmp
push
xchg
xor
mov
fistpl
movsl
mov
lcall
sub
cmp
xor
sbb
push
add
ret
and
nop
jp
mov
je
ret
xorl
data16
xor
sub
cmp
push
popf
inc
jnp
jb
cmp
or
dec
or
std
psubsb
idivl
sbb
cmc
push
std
pop
or
cmc
or
dec
sbb
mov
mov
xor
mov
mov
jle
add
sub
pop
sbb
push
and
mul
push
jge
xchg
das
adc
imul
push
xchg
daa
jns
jmp
iret
insb
out
push
nop
mov
add
mulb
sahf
fwait
loop
jecxz
dec
mov
pop
cmp
mov
inc
cmp
addb
or
fnsave
inc
mov
pop
out
out
mov
cmp
popf
js
push
mov
sbb
popf
or
call
xchg
push
pop
arpl
jo
lods
adc
lea
or
pop
adc
cmpl
fcmovnu
sbb
ljmp
pusha
xor
data16
xor
dec
sahf
mov
loopne
xchg
cmp
mov
push
or
in
push
clc
or
dec
hlt
xor
inc
inc
loopnew
out
push
cmp
popa
inc
or
cld
pop
pop
cmpsb
inc
lret
cmc
xchg
hlt
sub
into
xor
pop
clc
or
adc
xchg
lret
addr16
and
clc
mov
mov
cwtl
pusha
sahf
arpl
outsl
insl
cmp
fiadds
jle
add
ds
shlb
pop
orb
fldlg2
daa
add
mov
mov
out
xchg
jo
daa
orb
and
adcb
sarl
mov
xchg
mull
sub
or
sti
jge
sbb
lret
imul
je
mov
cmp
aaa
mov
jno
push
push
sbb
adc
stos
sar
adc
inc
testb
imul
divb
stos
mov
test
loopne
call
leave
sbb
xchg
out
xchg
icebp
sbb
push
push
aas
xor
xorl
in
and
dec
stc
shll
pushf
mov
out
dec
cmc
sbb
ljmp
daa
and
dec
jle
sub
jo
loope
nop
jge
mov
and
in
mov
mov
aas
xor
int3
pop
loopne
inc
hlt
pop
xlat
leave
mov
cmp
jns
sub
lret
inc
ror
inc
cmp
mov
lcall
shlb
scas
dec
dec
mov
cmp
inc
add
dec
or
push
pushf
adc
lds
adc
icebp
cwtl
sub
cmp
fbld
cltd
sbb
push
adc
pop
loope
in
bound
inc
gs
sarl
in
in
ljmp
push
rcl
lds
ljmp
lahf
push
nop
movsb
icebp
das
fisttpl
jno
push
inc
inc
fidivrl
cld
or
loope
out
je
push
push
mov
popa
adc
push
add
jmp
add
repz
jo
inc
cmp
sub
dec
loop
xchg
clc
push
idivl
fnstsw
dec
mov
cmc
mov
cs
outsb
add
jnp
cwtl
movsl
jne
inc
cmp
inc
outsb
push
jno
outsl
ja
and
or
add
push
ret
pop
sub
sbb
cmp
fcom
inc
outsb
icebp
in
push
nop
pop
loope
lcall
out
mov
les
mov
cmpsl
stos
arpl
hlt
push
xor
incb
outsl
dec
mov
or
dec
popa
and
jnp
ljmp
test
std
fdiv
daa
cmc
mov
out
das
hlt
and
lret
sub
stos
loopne
mov
dec
push
ret
fidivl
sub
push
in
nop
or
mov
aam
lock
xor
fs
in
adc
sub
or
or
movsb
or
bound
outsb
cltd
jbe
in
xor
lods
leave
sbb
stc
mov
iret
mov
push
jl
lds
sahf
cs
out
lcall
sbb
in
int3
lret
sub
sbb
mov
push
mov
mov
sbb
inc
mov
jp
pop
inc
sahf
mov
divl
cmp
and
ja
push
mov
int3
outsl
mov
pop
mov
xor
mov
lcall
ljmp
adc
hlt
mov
xor
fcompl
lds
push
shll
pushf
xor
push
nop
loopne
or
movsl
jb
aas
out
mov
sub
jbe
incl
cltd
xchg
es
adc
lcall
es
xor
inc
sahf
pop
adcb
pop
or
cmp
dec
jnp
sbb
jb
xor
fldt
imul
sub
call
xor
insb
dec
adc
mov
cld
dec
data16
orl
ds
cld
or
das
sbb
mov
push
and
add
mov
icebp
fstps
adc
pop
lds
and
loop
mov
mov
pop
test
jmp
dec
adc
in
test
iret
add
xchg
mov
dec
cmpsl
push
jo
jmp
int3
pushf
push
dec
pop
pop
cld
out
loope
adc
ss
insl
inc
inc
es
mov
negb
test
scas
ljmp
mov
jns
dec
pop
scas
jg
adc
mov
pop
jnp
push
add
lcall
push
rorl
jmp
push
mov
aam
fs
pop
sub
and
inc
movsb
mov
mov
pop
mov
fidivrl
jecxz
push
mov
aas
adc
mov
or
push
pop
jmp
scas
adcb
jge
loopne
mov
xchg
imul
insl
imulb
std
sub
stc
mov
mov
out
add
mov
data16
jbe
sti
adc
stos
scas
cmpsl
sub
and
push
ljmp
pop
sarb
fucomi
xchg
sti
sbb
push
out
data16
mov
pushf
imul
mov
jp
ret
or
or
out
addr16
xchg
sbb
jp
pusha
icebp
mov
das
jle
call
lahf
mov
ljmp
movsb
mulps
mov
pop
mov
add
lds
xlat
inc
jno
mov
pushf
cli
mov
sub
sbb
loop
mov
hlt
push
outsb
call
jbe
hlt
xor
sti
add
rcrb
dec
mov
sbb
push
inc
mov
idivl
sbb
pop
add
stc
cmc
sub
sahf
push
adc
jne
in
rcl
push
movsl
repnz
pop
dec
aam
pop
jbe
hlt
repz
jl
adc
daa
push
dec
mov
shll
lcall
test
jmp
in
cmpsl
cmp
push
sbb
push
inc
shlb
xchg
adc
or
fists
bswap
adcl
inc
pop
popfw
das
xor
dec
jae
sbb
and
xchg
data16
push
and
jo
jno
out
sub
outsl
push
sub
roll
mov
inc
fisubs
pop
ljmp
add
cli
negl
sahf
mov
lcall
and
jecxz
cmpsb
lret
adc
push
stos
outsb
xchg
adc
mov
and
xchg
cmpsb
fistpl
xor
sbb
adc
jne
sar
or
or
push
out
aas
mov
push
push
sbb
je
lahf
xchg
int
mov
pop
shr
sub
xor
jge
repz
popf
out
cmp
out
mov
sbb
cli
inc
andl
cmp
jle
loopne
loope
cld
pop
add
lock
out
jmp
arpl
mov
out
out
xor
push
sbb
mov
jno
out
sub
pop
add
jmp
clc
loopne
stos
mov
and
sbb
mov
mov
in
adc
xchg
shl
xor
ja
outsb
outsl
movl
pop
mov
aam
mov
cmc
inc
repnz
pop
ss
xchg
mov
sub
jecxz
xlat
mov
push
aad
push
arpl
in
xor
sub
pop
cwtl
pop
adc
push
aad
pop
cmpsb
fisttpl
and
push
aam
cmpsl
mov
pop
pop
sbb
mov
sub
js
mov
movsl
jb
pop
add
out
dec
push
xlat
cwtl
andb
and
imul
in
mov
inc
adc
ret
aaa
adc
cld
xchg
xor
addr16
lods
mov
outsl
insb
mov
iret
int
pop
push
addr16
push
test
cmpsb
mov
xor
cli
mov
mov
ret
je
in
add
daa
clc
mov
adc
jns
pop
mov
sub
xchg
sub
jmp
lods
leave
int3
dec
pop
push
pop
mov
push
jg
int
ror
mov
push
mov
cmp
cmpsl
mov
adc
jl
or
lret
and
jge
cmp
out
add
xor
fidivl
and
mov
loop
mov
xchg
push
dec
pop
insl
xchg
test
add
mov
cltd
outsb
bound
pushf
push
dec
mov
ja
data16
cmp
shlb
in
mov
clc
xchg
nop
mov
in
inc
add
pop
pop
mov
sub
push
pop
cmp
sti
cwtl
xor
not
aaa
and
sub
push
push
xor
dec
and
jns
in
ja
adc
mov
push
add
add
lods
jne
mov
int3
pop
sbb
fwait
cs
mov
jp
adc
adc
cmp
int3
mov
push
add
pop
lcall
fs
pop
lds
popl
sbb
inc
push
sbb
cmp
lcall
movl
pop
push
idivl
cli
inc
lahf
popa
hlt
mov
daa
cmp
jmp
inc
in
cmp
ret
mov
subb
dec
dec
movsl
and
lods
lahf
lock
sbb
ljmp
xor
sub
add
mov
sbbb
jp
in
push
push
add
push
ja
push
pusha
inc
ret
arpl
mov
aam
mov
cmpb
shll
sahf
pop
addr16
mov
mov
dec
sbb
sbb
scas
rolb
lret
pusha
mov
mov
out
lahf
inc
inc
fcmovnbe
jb
mov
xchg
push
sti
pop
or
or
add
nop
inc
jge
mov
addr16
adc
mov
jecxz
and
movsb
sub
xchg
xchg
dec
sbb
xor
fmull
in
repz
fdiv
jmp
mov
pop
fiadds
mov
inc
xor
enter
mov
insb
rorl
xchg
ljmp
out
andl
test
lods
mov
scas
jne
sbb
and
in
inc
sub
xchg
dec
repz
add
xchg
es
inc
arpl
sub
mov
mov
inc
enter
pop
fs
int3
imul
les
je
mov
or
sbb
mov
call
lods
or
sub
adc
inc
push
pop
dec
nop
mov
repz
pop
pop
push
jp
repnz
imul
icebp
inc
ret
push
rorl
inc
inc
mov
aas
xchg
js
and
dec
cmp
jno
mov
test
inc
and
xor
aad
sbb
and
andl
xchg
and
jp
testl
hlt
lret
mov
ffreep
mov
sbbl
lods
add
and
add
push
das
insl
cmpb
ja
ret
call
pop
loopne
dec
iret
test
xchg
push
jbe
mov
cltd
mov
out
mov
jb
shll
ret
xor
push
pushf
pop
mov
imul
test
call
mov
ss
repz
push
push
mov
adc
jns
sbb
cld
ffree
test
sbb
movaps
enter
and
repz
mov
pop
iret
inc
in
cmp
cmp
push
clc
or
lods
adc
test
or
popa
repz
sarl
nop
out
mov
xchg
loop
lods
xchg
sub
sub
dec
lea
mov
inc
das
mov
cmp
mov
xlat
adc
aad
jp
lret
aas
lret
xchg
adc
add
jae
imul
out
or
pop
xchg
jl
or
mov
lcall
rcrb
add
xor
push
dec
mov
ds
sub
pop
push
jne
mov
dec
lods
xor
inc
mov
jmp
repz
add
jae
pusha
dec
or
mov
jl
dec
adc
stos
xchg
pop
icebp
jne
arpl
test
insb
pop
jg
mov
into
lahf
jne
push
sub
push
sbb
sbb
test
sbb
mov
es
pop
jle
xchg
jecxz
and
push
fldt
mov
ljmp
add
nop
xchg
sbb
jae
cmc
inc
in
inc
sub
mov
in
mov
push
movsb
out
call
or
sarb
loop
imul
in
rcrb
jne
sbb
pop
mov
pushf
in
jmp
je
mov
lods
bswap
test
inc
jo,pt
daa
sti
xor
dec
mov
xchg
sahf
jecxz
or
mov
rorl
pop
int
fisubrl
cmp
mov
mov
or
adc
jl
pushf
dec
xchg
mov
ret
bound
push
daa
sbb
dec
fs
mov
lods
lea
sub
mov
imull
adcb
dec
mov
or
out
fistl
sub
and
mov
outsb
es
stos
mov
xchg
int3
ss
jecxz
mov
lock
push
mov
jbe
pop
xchg
imul
bound
cmp
pop
scas
xchg
dec
pop
sbb
xchg
mov
imul
test
xor
xchg
cmp
jecxz
out
sarb
in
and
push
scas
push
mov
cltd
sub
out
and
mov
ret
mov
int
adc
outsl
adc
push
dec
js
inc
notb
inc
add
pop
ds
dec
inc
fsts
movsb
push
cmp
call
mov
outsb
fprem1
sub
cmp
mov
stos
sbb
or
inc
mov
xlat
and
mov
popa
pop
loope
lret
xchg
push
jge
daa
scas
pop
fnsave
inc
push
pop
leave
popa
xor
std
mov
jno
and
jns
or
stc
insl
mov
cltd
popf
mov
xchg
mov
xor
out
into
icebp
sub
jmp
addr16
cmp
loopne
jmp
mov
mov
mov
mov
aas
adc
xchg
sbb
call
cmpsl
jae
in
and
hlt
mov
xchg
xchg
mov
js
out
push
push
jmp
dec
insl
testl
xchg
mov
jb
jecxz
cmc
xchg
xor
out
js
jbe
loopne
divb
add
sub
xchg
cmpsb
jp
jle
xchg
cmpsl
mov
adc
cmp
movsl
jecxz
sub
repz
push
std
cmp
call
add
subl
mov
aad
push
pushf
xor
add
inc
mov
loop
inc
push
out
mov
js
push
and
jbe
repz
aad
jne
pop
xchg
out
dec
lret
fbstp
mov
ljmp
xchg
lret
aas
pop
repz
xor
dec
cltd
xlat
std
xchg
push
mov
outsl
and
fucompp
cmp
inc
xlat
mov
or
shlb
or
add
ljmp
movsb
jmp
xor
addl
outsl
enter
dec
shll
jno
dec
inc
jns
or
xor
fs
sub
dec
rclb
fmul
cld
imul
shl
dec
fisubl
adc
cli
cmpsb
das
push
push
inc
push
add
mov
sbb
scas
mov
push
and
sti
sbb
ja
cmpsb
in
add
subb
xchg
scas
jbe
push
and
sbb
rclb
jge
and
popl
sbb
scas
loopne
mov
pop
popl
shr
in
pop
jb
mov
push
data16
aas
enter
push
ja
mov
cmpsb
mov
xchg
inc
fs
lods
or
mov
insb
or
test
lret
dec
dec
test
jo
lock
xchg
or
or
out
mov
leave
repz
in
enter
add
test
popf
dec
cmp
sub
imul
jae
stc
cmp
dec
adc
outsb
mov
adc
cmp
jno
enter
lock
xchg
fiaddl
iret
aaa
imul
sbb
add
imul
dec
insl
mov
inc
aas
or
in
fadd
shlb
xor
das
cli
leave
push
pop
mov
addr16
movsl
sbb
sbb
rorl
scas
lods
or
out
push
xchg
dec
xchg
mov
in
aam
mov
and
pop
adc
test
enter
sbb
lret
mov
in
and
mov
pop
xchg
sub
cmp
pop
sub
pop
int
xlat
in
add
mov
mov
dec
sahf
or
and
push
andl
inc
jg
insb
inc
sub
mov
fsubr
lods
daa
movhps
rorl
sub
icebp
jnp
inc
sbb
mov
jle
sbb
mov
and
or
adcl
fisubrl
inc
adc
loope
and
movsl
jle
mov
rolb
loop
dec
lret
stos
or
inc
shrl
mov
or
leave
mov
jmp
xchg
loopne
lock
jecxz
jae
mov
cmc
pop
outsl
mov
out
sarb
pusha
push
and
push
jmp
movsl
jbe
hlt
ss
aad
mov
into
int
roll
lret
xchg
leave
adcb
inc
lcall
nop
insl
mov
push
leave
cmp
sarl
pushf
pop
in
shlb
jo
in
xor
addr16
push
sub
mov
stos
pop
mov
push
fsubs
shll
test
fwait
jns
sti
inc
xlat
jb
xlat
lret
adc
int3
add
inc
jne
aaa
dec
outsl
cli
dec
push
jge
jmp
xor
rcll
pop
push
jg
jnp
lds
out
mov
xchg
xchg
stc
out
movd
int
dec
add
and
ja
aas
push
fxch
sub
ss
push
out
hlt
aam
sub
push
dec
jg
add
pop
clc
jge
fisttpll
pushf
pop
ss
cmpsb
out
jp
lret
jle
push
jbe
pusha
mov
pop
xchg
adc
aas
and
ja
inc
arpl
in
int
or
pushf
push
adc
or
in
mov
sbb
or
cmp
pop
out
lds
cmp
cmp
push
pop
inc
mov
sub
fildl
xor
addl
xor
xor
and
push
sahf
mov
mov
mov
or
mov
or
xor
inc
inc
sub
call
and
or
or
iret
js
call
dec
mov
movsl
pop
xor
insl
push
push
dec
dec
in
jo
pop
cmc
sti
add
pop
sbb
les
and
cmp
mov
test
lock
das
mov
hlt
mov
data16
and
fwait
pushf
in
mov
dec
or
inc
xchg
pushf
lea
ret
clc
cmc
subl
cltd
repnz
mov
std
jne
jo
xor
aas
inc
push
lahf
sbb
lahf
idivl
cmp
cmc
inc
sti
movsl
push
scas
or
xchg
inc
sbb
sub
fisubs
push
adc
cmpsl
sbb
sub
enter
mov
xor
sbb
ds
addw
call
fwait
inc
mov
inc
pop
loope
push
and
rorb
shlb
sbb
sbb
insb
imul
mov
cmc
mov
mov
mov
adc
aad
ja
lahf
mov
and
adc
dec
inc
sub
sub
test
iret
into
pop
filds
inc
sbb
jle
fsts
cs
cmpsb
pop
lcall
or
arpl
in
rcl
insb
xor
lret
jmp
mov
lock
jae
cltd
pop
fidivs
mov
push
das
xor
rcr
addr16
imull
mov
jg
lods
pop
adc
stc
enter
shll
jg
or
ds
inc
and
out
cltd
jns
push
inc
pop
pop
xchg
pop
fimull
aaa
bound
movsb
out
cltd
inc
aas
mov
xor
in
scas
iret
fldl
les
and
add
loop
xor
fcomps
mov
sub
test
jb
add
hlt
xchg
xchg
mov
pop
cmp
mov
mov
adc
cmp
add
sub
movsl
ret
sbb
jmp
ror
imull
ja
xchg
mov
outsl
xchg
mov
and
in
push
mov
jle
lods
popa
push
data16
clc
jle
mov
xchg
mov
mov
cmp
xchg
std
fmull
or
sti
xlat
in
addr16
lret
test
pop
loop
loop
cmpsl
inc
lcall
cltd
rcr
test
xor
jnp
cmp
or
adc
mov
inc
mov
xor
sub
popa
mov
insb
in
mov
xlat
les
xchg
mov
inc
out
fsubrs
insb
cmpl
pushf
mov
adc
pushf
pop
sub
inc
cs
fmull
pop
fnsave
push
sub
or
inc
or
xchg
mov
mov
out
mov
divb
popf
or
bound
imul
xor
sub
push
mov
sbb
jb
push
inc
push
test
cld
and
ret
test
cmpsb
mov
push
je
les
xchg
sbb
fsubs
enter
push
jmp
mov
add
inc
dec
or
sbb
push
imul
adc
push
jae
movsl
dec
lret
outsb
xchg
sub
movsl
std
add
imul
std
gs
pop
leave
out
mov
cmp
push
adc
mov
push
jns
cwtl
push
push
pop
pop
loop
fldcw
push
pop
leave
jle
xor
cld
into
pcmpgtd
fst
gs
inc
xchg
jne
push
hlt
xchg
incb
sbb
in
adc
jge
icebp
cmp
mov
fisubs
ret
test
cmpl
mov
daa
insb
cwtl
inc
lret
inc
cltd
or
orl
fiaddl
mov
push
push
and
push
dec
push
lods
push
sbb
inc
jno
mov
or
out
sti
pop
roll
rcl
mov
outsb
sarl
push
cmp
inc
or
lock
test
pop
mov
sbb
cs
stos
movsb
pop
addr16
int3
xor
in
movsl
mov
popf
pop
xor
fwait
dec
inc
or
stos
addr16
icebp
pop
mov
mov
cmp
loopne
loope
jo
fwait
cmp
ja
ficomps
cmp
mov
inc
shrb
data16
lret
out
pop
je
shlb
fisubrl
arpl
mov
push
iret
jl
dec
fildl
scas
lods
fnstenv
cmpsl
dec
iret
stos
cmc
jp
and
mov
bound
aad
mov
push
dec
mov
popa
enter
xor
test
mov
jmp
xchg
in
fwait
sbb
je
jecxz
into
add
icebp
add
and
aaa
mov
sbb
pop
das
les
aas
icebp
pop
incl
shrb
mov
lods
fdivrl
jl
push
xor
das
popf
or
lock
out
loop
iret
call
test
xchg
inc
pop
xchg
das
das
in
or
int3
and
mov
jecxz
lcall
arpl
leave
daa
mov
repnz
sbb
xchg
popa
roll
test
pop
sub
mov
stos
sbb
cmp
xchg
push
loope
popa
in
stos
out
into
sahf
lock
mov
pop
jge
mov
sbb
mov
xor
neg
call
pop
mul
add
loope
adc
mov
movsb
push
stos
loope
fidivrs
lret
cmpsl
addr16
xchg
fsubl
out
rcr
aam
xor
or
es
inc
pop
int
popf
out
xor
adc
dec
jg
dec
sbb
fstpt
jle
cs
xchg
cmpsb
cmp
mov
mov
mov
cmp
jne
cs
cmp
inc
test
movsl
adc
dec
popa
sti
push
inc
inc
in
js
ret
nop
or
cmp
xor
jb
stos
fistps
les
mov
push
test
lock
inc
cmp
ret
lock
outsl
dec
cmp
cmp
sbb
xor
jge
inc
aad
add
xchg
cmp
pop
cmpl
push
call
add
adc
stc
jb
jno
rclb
sub
xchg
ss
insb
fwait
jns
stc
xchg
xchg
pop
and
js
repnz
mov
es
wrmsr
mov
imul
push
rorl
das
bound
add
dec
ds
je
push
fimull
xor
xchg
clc
mov
ja
mov
repnz
cwtl
das
xor
sub
dec
jbe
mov
mov
mov
imul
adc
mov
sarl
xchg
push
pop
xor
test
push
hlt
pushl
shr
repnz
push
ja
or
in
mov
xchg
add
pop
aaa
daa
mov
cmpsb
add
fsubrl
adc
out
test
mov
std
sub
fiaddl
xchg
pop
scas
out
int3
xchg
scas
dec
mov
or
sub
jb
ret
ret
loope
push
cmp
outsb
pop
ret
imul
pop
inc
in
lods
jle
lods
or
inc
dec
xor
aaa
sti
mov
mov
call
sbb
xchg
add
cmpb
mov
prefetcht1
mov
jns
sahf
stos
test
mov
out
dec
cmp
cmp
sarb
rcrl
cmp
cmpb
xor
mov
jecxz
gs
mov
das
adc
or
les
loop
hlt
ret
cli
fcoml
inc
jae
incb
stos
add
shrb
mov
and
cmpl
fstl
lret
into
xorb
jle
xchg
aad
lcall
cmp
in
in
mov
jge
pusha
repnz
cmpsb
enter
testb
jle
dec
jo
cld
iret
add
fnsave
fwait
mov
dec
add
push
sub
aaa
scas
sarl
lret
fsubrp
fdivl
inc
or
hlt
sbb
cmp
xchg
es
cli
jno
push
push
repnz
nop
test
add
mov
xlat
xor
movl
loop
mov
jecxz
andb
hlt
cmp
cltd
cmp
pop
mov
inc
add
push
insb
daa
mulb
jg
mov
in
das
imul
xlat
arpl
dec
int3
out
pop
pop
je
imul
imul
mov
sbb
jb
jns
daa
push
out
ds
push
mov
jge
and
icebp
dec
shrb
fdivp
push
fsubr
pop
xor
fldt
ljmp
jg
popa
pop
add
pushf
mov
mov
shlb
pushf
aas
mov
mov
push
in
inc
lods
cmp
dec
cmp
mov
xor
cld
mov
add
or
shrb
lods
add
loope
xchg
pop
push
bound
mov
push
sarl
dec
jmp
add
test
insl
lea
lds
cmp
jl
xchg
xor
test
stos
movsb
jne
mov
and
shl
roll
lock
pop
dec
outsb
mov
int3
xchg
adc
mov
scas
push
loopne
add
loopne
mov
xor
hlt
mov
pop
xchg
dec
lahf
dec
mov
jb
fisubl
jnp
sti
enter
sub
push
sbb
cmp
lds
mov
jne
mov
bnd
movsb
mov
xchg
lea
add
jge
sub
ret
lcall
push
sbb
dec
jnp
add
insl
pop
xchg
xor
jbe
arpl
jge
outsb
fimull
push
xor
int3
xchg
shlb
pusha
jl
pop
mov
stos
stc
aad
adc
pop
es
jecxz
or
lds
in
cmpb
int
xchg
pop
cmp
stc
jns
mov
test
out
stc
fs
rclb
test
adc
test
cld
movsl
in
push
rol
je
es
mov
lret
pop
call
xchg
movsl
insl
xchg
loope
fstl
fisubl
jnp
pop
mov
inc
mov
shlb
fs
imul
hlt
and
ficompl
test
adc
setge
mov
jmp
and
jmp
lods
add
cs
jae
push
ret
out
in
popa
sbb
or
rcll
fstl
cld
and
lea
adc
sub
jmp
aam
jmp
pusha
hlt
bound
jle
push
scas
jnp
sub
push
icebp
bound
insb
js
inc
add
flds
inc
popa
rcrl
mov
loopne
jbe
mov
into
jge
xchg
lods
cli
aas
adc
pop
push
jecxz
mov
out
mov
mov
daa
add
push
pushf
jl
ds
and
aam
jno
leave
mov
aad
pop
inc
and
mov
fsubrl
jne
int
arpl
cmp
adc
jecxz
cmp
shll
cwtl
sbb
inc
mov
sub
testb
repz
push
mov
jbe
and
loop
xor
adc
pusha
pushf
mov
add
in
mov
adc
subb
scas
cmp
inc
add
xchg
push
sahf
andb
loop
test
cmp
into
pop
fwait
xor
jp
mov
test
dec
or
dec
cli
test
sar
adc
imul
jl
and
add
cmc
in
fldpi
dec
sub
sti
xchg
lods
mov
hlt
syscall
aam
shrl
xor
rol
stc
mov
push
scas
push
insl
xchg
ret
fistl
gs
and
lds
sub
jg
jo
inc
mov
mov
sub
push
sbb
ficoml
mov
mov
aas
lret
push
xor
dec
mov
std
fstl
mov
and
pop
jp
stos
sbb
aad
mov
inc
mov
pop
dec
enter
or
daa
push
mov
mov
inc
rcll
jl
imul
and
fnsave
push
push
jo,pn
pop
mov
ret
mov
clc
mov
or
mov
sub
fmuls
hlt
int3
mov
adcl
lds
push
test
sarl
pop
movsl
push
xchg
push
insl
jl
xchg
cmp
inc
loopne
hlt
out
inc
push
or
in
js
mov
mov
popa
icebp
add
xchg
test
push
xor
stos
mov
xchg
leave
outsl
mov
rorb
adc
lret
pusha
into
dec
out
jnp
xchg
pop
inc
cmp
cwtl
push
popa
jecxz
aaa
xor
push
mov
fsubl
in
push
jb
xchg
add
fdivr
pop
push
das
lcall
inc
addb
cltd
mov
push
jecxz
stc
mov
mov
xlat
mov
add
add
ljmp
in
scas
inc
idiv
sbb
push
add
fwait
add
popf
shlb
into
push
sbbl
scas
or
mov
aas
jnp
pop
pop
xchg
lahf
inc
lahf
inc
inc
sbb
push
jb
into
inc
inc
pop
xchg
rcr
mov
test
xchg
outsl
push
inc
loopne
push
or
pop
sub
scas
push
jge
test
out
leave
lds
pop
pop
dec
add
cmc
mov
mov
add
cltd
push
mov
fsubl
xchg
fimuls
lods
clc
rclb
and
gs
ljmp
pop
push
lret
mov
jbe
adc
sbb
insl
dec
inc
push
push
xchg
mov
pop
pop
cmpb
xor
mov
inc
lds
sub
repnz
xor
push
sbb
mov
sti
scas
xchg
sub
bound
sti
and
daa
aas
popf
daa
loop
jne
dec
enter
or
addb
in
sub
imul
or
jb
sub
pop
jg
xor
fcmovnb
cmp
jge
sub
testl
pushf
or
mov
cmp
xor
out
shll
int
int3
loopne
xchg
dec
jbe
sahf
sbb
cmp
or
test
push
adc
leave
pop
dec
adc
mov
add
mov
mov
pop
fbstp
sub
sub
or
aaa
lahf
inc
lcall
lret
mov
int
cmp
xchg
int3
sub
in
sbb
lcall
jns
cli
cmp
cld
or
xor
out
jnp
add
mov
mov
pop
inc
push
inc
test
inc
inc
cmp
and
sub
cmovs
sub
js
xchg
adc
pop
fcmovne
add
dec
add
xchg
jne
cmp
pop
sbb
repz
test
popf
pusha
xchg
dec
repz
cmp
or
fnsave
mov
dec
dec
stos
adc
adc
lds
rcrl
gs
mov
sbb
add
or
xor
mov
push
repnz
mov
push
jne
pop
push
xor
push
dec
subb
iret
and
ficomps
pushf
popa
js
pop
addr16
push
lcall
pop
cmp
cmp
test
popa
cmp
in
fadd
cs
lcall
test
insb
cmp
cmp
sbb
mov
mov
pusha
jp
adc
daa
fnstsw
pop
sbb
ret
and
nop
movsb
jmp
movsl
cmp
je
int3
cld
push
aaa
test
dec
lods
xchg
xorb
gs
call
ror
push
imul
push
and
mov
push
repnz
fcomps
rolb
lds
dec
pop
cld
out
shl
lret
add
cmp
les
sub
jl
cmpsl
aad
sbb
outsl
xchg
inc
in
or
push
sti
lahf
test
push
inc
xor
test
pusha
sti
lret
mov
ret
fidivs
mov
fildll
nop
sbbl
or
adc
mov
arpl
mull
and
mov
xor
jnp
mov
mov
in
xchg
into
mov
shlb
ljmp
aad
mov
ss
pop
mov
push
pushf
cwtl
cmp
jle
mov
add
add
scas
and
hlt
imul
fwait
jae
outsb
xorb
cs
xor
clc
ja
push
mov
sbb
ds
addb
cmc
mov
sub
sub
test
dec
movsl
ret
jo
inc
mov
jbe
push
inc
mov
ja
xor
lret
fsubrl
int3
push
fmull
outsb
cli
stc
arpl
push
mov
test
cmp
add
or
mov
shlb
xchg
mov
test
test
push
cmp
incl
xchg
or
pop
jae
adc
data16
std
pop
adc
je
lahf
aaa
rep
dec
jl
adc
ret
mov
lods
ss
pop
sti
mov
insb
stos
fdivl
adc
push
bndldx
sbbb
stos
push
ficompl
xlat
inc
ljmp
sbb
push
into
inc
mov
aad
cmp
in
lock
and
ffreep
mov
insb
call
inc
xor
xchg
std
lahf
test
xor
xchg
mov
lods
sub
hlt
add
repnz
repz
pop
pop
adc
cltd
push
adc
imul
andl
stc
pop
or
pop
ljmp
jecxz
ljmp
xchg
stos
mov
test
inc
in
scas
jno
push
mov
or
push
cmc
in
in
aaa
mov
sahf
mov
lret
test
fdiv
ret
je
and
call
inc
inc
cmp
adc
sub
movsb
cmc
out
xchg
gs
std
rcrb
repz
test
xchg
or
in
cmp
imul
jecxz
out
mov
int
mov
adc
jmp
inc
imul
sbb
test
iret
push
testl
xor
jns
ljmp
scas
lea
xchg
ljmp
jge
clc
mov
lock
addr16
loopne
add
lods
sub
mov
xchg
icebp
orl
push
mov
inc
add
shl
mov
jb
jl
push
inc
aam
sub
ret
imul
shlb
xchg
mov
mov
jns
mov
mov
xor
cmc
cld
sub
cmp
add
das
loope
or
xor
sti
mov
and
xchg
cmp
and
sahf
loope
outsl
ret
stc
xchg
jno
sti
stos
cmp
push
inc
mov
push
mov
add
pop
mov
aad
sub
xor
and
cmp
jne,pt
adc
test
jno
call
dec
mov
hlt
xor
outsb
xchg
jmp
in
movsl
in
sahf
add
leave
adc
sub
adc
shrb
imul
fnstenv
outsl
inc
sbb
xor
jecxz
sarb
dec
push
push
out
repz
insb
in
jecxz
in
sbb
out
push
jnp
mov
das
mov
les
mov
push
fists
sub
mov
xlat
jno
stc
popf
mov
xor
dec
xor
mov
jnp
push
daa
mov
pop
sbb
int3
mov
cltd
cmp
out
icebp
cmp
mov
mov
dec
fsubl
bnd
dec
or
xor
pop
mov
add
jge
shll
movsb
les
jp
xor
xchg
inc
sub
push
imul
inc
mov
fistps
js
add
xor
int
test
sar
fwait
add
rcrb
mov
fs
scas
mov
imul
or
jl
out
push
adc
shr
push
push
out
pop
push
fnsave
scas
imul
mov
outsb
in
push
ret
popa
cmp
lea
mov
cltd
dec
mov
and
xlat
fists
xchg
push
sub
and
add
jg
pop
arpl
adc
and
push
add
lods
sbbl
loop
xchg
xchg
lods
out
and
jae
std
out
adc
or
pop
loope
or
jnp
imul
andl
lds
loopne
mov
cmp
loope
psadbw
push
adc
pop
in
test
inc
out
mov
scas
imul
mov
cs
mov
fisubl
mov
std
je
and
mov
test
xor
sbb
jne
push
push
leave
add
push
mov
das
lds
and
out
iret
mov
clc
test
roll
cs
adc
jle
mov
in
adc
loope
es
xor
andl
fists
cmp
test
push
mov
in
leave
inc
or
push
dec
cmp
cmp
add
dec
pop
and
add
out
and
dec
mov
mov
lret
cwtl
test
and
enter
push
repz
cmpsl
cltd
add
inc
inc
ret
sub
cld
pushf
loope
lahf
fsts
and
lahf
mov
stc
jl
dec
pop
sub
sub
push
in
adc
fstpl
mov
arpl
adc
inc
and
inc
lock
pop
adc
pop
inc
enter
into
ljmp
sbb
mov
cmpsb
aaa
nop
in
notb
mov
push
xchg
mov
orl
mov
jae
ss
xchg
imul
mov
mov
mov
xchg
imul
call
call
mov
push
inc
pop
cli
mov
pop
mov
cmp
clc
xor
fdiv
dec
lret
aad
stc
andb
lea
fnstcw
inc
sbb
dec
xor
xor
out
sbb
lods
jbe
push
stc
jmp
addr16
test
jecxz
jno
sub
xchg
mov
xor
jle
pop
pusha
inc
enter
and
iret
lds
dec
arpl
sahf
push
mov
nop
out
ucomiss
push
mov
sub
pop
xchg
push
std
and
xchg
loope
and
jg
dec
jecxz
mov
repz
xlat
pop
mov
loope
imul
push
fisubrs
fisubl
mov
cmp
mov
mov
mov
leave
push
mov
xchg
pop
outsl
insl
stos
mov
jb
loope
xchg
rcrb
dec
lods
mov
ret
or
sbb
enter
mov
push
push
xchg
call
inc
fbld
test
sub
pop
sub
aas
out
add
jg
mov
jo
jp
inc
test
and
xchg
test
sub
cmp
scas
lods
stos
outsl
mov
loop
xchg
dec
lret
jno
cli
fisubl
and
cs
fwait
and
std
push
dec
sub
cs
addb
call
sub
shlb
mov
gs
push
outsb
inc
aaa
ss
mov
mov
jae
jne
jns
out
mov
adc
movsb
ja
insl
clc
and
mov
or
cmp
add
popf
addr16
adc
mov
nop
xchg
stos
into
cmp
idivb
dec
test
xchg
dec
push
inc
movsb
idivl
sahf
mov
mov
adc
cmp
dec
pop
enter
and
lahf
inc
sbb
and
jge
hlt
add
and
lcall
push
movsl
sub
adc
shll
mov
iret
lret
add
outsl
xchg
iret
sub
dec
or
adc
inc
aam
nop
dec
add
shl
repnz
in
les
push
mov
cmp
hlt
xchg
push
mov
mov
or
push
nop
popf
rcrb
les
xor
repz
sbb
mov
mov
lahf
stc
lcall
mov
cld
mov
lcall
cmp
in
mov
arpl
leave
or
rcrb
and
imull
outsl
jno
adc
and
mov
sub
mov
pop
lahf
cmpsb
iret
fistps
es
jge
push
aas
inc
mov
jecxz
clc
inc
test
lods
mov
push
dec
insl
cmpsb
movsb
hlt
jp
sub
adc
test
push
mov
je
push
cs
ror
insl
jp
and
std
mov
sbb
pop
gs
sbb
inc
mov
js
add
jnp
fmulp
or
andb
in
mov
push
out
jp
jg
scas
mov
dec
lahf
movsb
out
mov
daa
xchg
jp
mov
adc
push
mov
or
cltd
hlt
fmull
leave
jno
stc
cmpsl
cmpsb
add
loopne
fnstenv
dec
js
iret
jge
imul
jo
xchg
push
ret
and
addr16
or
cld
sbb
es
jne
mov
out
sti
mov
pop
imull
mov
testl
arpl
inc
push
ja
test
xchg
and
dec
imulb
inc
sbbl
das
and
and
ja
repnz
xchg
cmpsb
add
push
pop
cs
jle
popf
test
insl
jae
fs
pushf
inc
push
mov
mov
dec
add
inc
push
ss
ljmp
pusha
pop
nop
push
rolb
push
lods
out
pop
pop
mov
push
pop
pop
xlat
push
cmp
mov
fisubl
in
addr16
imul
sub
iret
add
int
leave
cli
ret
cmp
dec
rolb
loope
cmp
insb
sub
xor
push
lahf
mov
pop
xlat
loop
xchg
dec
xchg
push
fbld
or
insb
sbb
out
js
mov
add
in
pop
xor
inc
xlat
rcrl
jb
pushf
flds
adc
std
in
or
jo
push
jo
add
stos
outsl
xchg
pop
outsl
ret
es
insl
gs
fprem
test
mov
mov
cmp
mov
sbb
add
jecxz
and
movsl
rcrl
push
arpl
dec
pinsrw
fs
and
inc
inc
inc
sub
mov
fisttpl
xchg
xor
into
lds
mov
jl
sahf
sbb
pusha
adcb
bound
mov
sti
jecxz
or
mov
in
mov
dec
stos
push
fsubl
adc
mov
mov
mov
inc
mov
movsb
mov
or
nop
mov
outsl
ja
mov
or
sub
mov
fs
push
enter
js
mov
inc
mov
xor
ljmp
push
xor
rcrb
push
mov
push
sbb
cmpsl
jp
sub
loopne
xchg
jne
sti
xor
or
lcall
push
andl
mov
test
clc
add
ljmp
std
xchg
outsb
xor
out
cmp
jg
add
imul
imul
sbbb
andl
jg
or
testb
cwtl
adc
sub
sub
push
scas
in
in
mov
and
aam
pop
aad
add
out
xchg
inc
xchg
std
stc
incb
test
cwtl
ret
mov
fsubl
and
sti
sarl
addl
lea
dec
std
iret
dec
lret
mov
popa
xor
in
pause
sub
roll
xchg
add
push
mov
cmp
xor
xor
sub
popa
xor
int
jmp
repnz
jne
int3
add
inc
inc
cwtl
into
daa
cld
sub
aaa
push
pop
lods
das
inc
pop
icebp
or
lea
cs
inc
test
push
xor
jno
lahf
mov
adc
nop
stc
push
je
mov
or
inc
mov
fadds
sti
mov
ss
jnp
pushf
dec
call
jmp
mov
fstps
push
scas
movsl
fscale
sbb
les
inc
mov
mov
xor
aad
cmp
inc
sti
out
pop
test
lahf
pop
cld
push
out
mov
ffree
sbb
hlt
aad
cmp
sahf
sub
dec
dec
mov
dec
out
or
mov
jno
loope
or
test
add
jecxz
inc
xor
sub
imul
shrl
add
xor
jnp
dec
jmp
aaa
gs
rorb
mov
pop
lret
xor
or
cmp
ret
adc
mov
jnp
jle
gs
jne
or
movsl
mov
std
test
ret
sub
and
push
push
ja
pusha
push
mov
sahf
xor
lods
bound
sti
jl
cs
icebp
pop
and
mov
jnp
std
ljmp
cld
insb
or
scas
pop
rol
leave
xlat
mov
in
sub
pop
decl
push
daa
dec
add
sbb
cmpsl
jbe
xor
daa
pop
push
mov
mov
bound
mov
loop
adc
in
inc
xorb
xchg
sbb
stc
adc
jo
out
xchg
shlb
lcall
mov
cmp
gs
mov
xchg
test
dec
add
insl
pop
fwait
mov
mov
xchg
jae
lea
cmp
nop
in
pop
outsl
and
aad
call
mov
adc
enter
push
das
out
sub
cmp
or
dec
add
cmp
std
xchg
pop
ficoml
daa
sbb
xorb
or
call
add
movsl
roll
dec
leave
insl
pusha
jb
sub
scas
test
mov
loope
mov
pop
sub
cmp
jae
inc
dec
in
lcall
adc
fcompl
mov
inc
loope
or
adc
push
ret
add
pop
fistps
leave
rorb
pop
xor
pushf
clc
pop
sbb
imul
icebp
mov
adc
xchg
outsl
lods
adc
stos
add
jne
fsubs
leave
add
lret
xchg
lock
mov
je
jge
mov
add
xchg
or
into
mov
xchg
in
movsb
jecxz
and
iret
movsb
ret
mov
cwtd
stos
add
out
scas
jae
inc
mov
loope
cmpsl
xor
insl
lcall
jp
pop
dec
aad
inc
lock
nop
inc
inc
dec
adc
rcrb
fs
sbb
ret
and
in
and
ja
mov
call
pop
inc
sub
aam
mov
add
shl
push
les
sbb
or
imul
imul
ret
xlat
jecxz
repnz
cmp
enter
mov
inc
dec
lret
std
lods
cmpsb
nop
dec
mov
jle
cmp
stos
pop
mov
push
and
pop
test
lds
push
out
or
adc
rcrl
daa
enter
lock
addr16
dec
dec
icebp
xor
mov
loope
into
es
cmpsb
sahf
jl
int
int
mov
or
push
ret
ffreep
pop
jns
and
addr16
adc
push
inc
sbb
xor
inc
stos
data16
sub
and
jne
jg
pop
sub
cld
sub
push
clc
xchg
xchg
mov
shll
jmp
loop
and
das
pop
jp
leave
cmp
divl
cmp
xchg
out
jp
pop
aas
cmpsl
push
sti
inc
out
sbb
sti
mov
iret
stos
les
xor
xor
push
or
je
bnd
dec
inc
sahf
xchg
push
xchg
inc
xorb
bound
and
dec
sub
lea
sbb
aas
adc
and
jecxz
outsb
lret
pop
jae
in
ds
je
xchg
fsub
adc
xchg
xchg
popf
add
loopne
lods
xlat
sbb
push
push
aaa
sbb
out
mov
cmp
dec
mov
hlt
lahf
cmp
jmp
aas
imul
xor
pop
jmp
rcr
rorb
mov
mov
push
cltd
push
in
cltd
out
mov
fidivrs
fiadds
out
push
dec
cmp
leave
fidivl
mov
pop
and
sbb
push
out
ljmp
jne
std
ja
and
jl
les
subl
xchg
push
inc
aaa
mov
add
jecxz
movsb
fdivrp
push
test
sub
cmp
stos
stc
roll
sbb
add
jge
pop
enter
mov
and
mov
mov
xor
js
sbb
into
jne
neg
push
scas
fstpt
sti
push
inc
xchg
xlat
mov
jnp
aad
jnp
fsubrl
daa
adc
sahf
mov
and
cmc
cmp
int3
cmpsb
into
dec
or
lss
enter
xchg
lds
mov
push
pop
xchg
sbb
data16
call
lahf
lret
adc
or
loopne
bound
subb
fcoml
sbb
cld
out
mov
gs
xchg
add
cs
loop
jb
fwait
out
xchg
ljmp
dec
xchg
cmp
les
data16
and
push
xor
pop
or
xchg
jae
push
jne
cmp
insb
add
scas
jecxz
add
int3
cmp
add
jle
sbb
mov
jnp
add
jg
enter
shlb
mov
push
jle
sbb
inc
mov
loop
cmpsl
xlat
xchg
push
loop
sub
mov
dec
xorb
and
stc
mov
cmp
sub
imul
or
gs
xor
pusha
cmc
icebp
cmp
and
sbb
mov
addr16
dec
xor
mov
pop
les
xlat
adc
sub
sbb
inc
add
cltd
pop
in
lock
lock
fsubrs
in
mov
pop
insl
pop
insl
xchg
cmp
jl
mov
leave
stc
cmpsb
dec
jns
mov
jmp
cmpsl
mov
or
sbb
xor
pop
cltd
fisubs
cmp
imul
cmpsb
dec
in
lods
leave
lock
aam
mov
sbb
rcrl
and
dec
clc
ss
adc
rorb
jae
xchg
pop
dec
push
mov
jne
or
xchg
sbb
into
sub
std
mov
dec
or
xor
and
lea
call
sub
in
mov
adcl
push
mov
mov
ljmp
pop
popa
pop
dec
jae
lds
or
pop
sti
pop
loopne
les
insl
dec
out
loopne
inc
jns
and
xchg
mov
out
lret
or
icebp
arpl
jmp
pop
xchg
ljmp
jmp
xchg
mov
push
pusha
push
test
xor
or
loopne
mov
loopne
shll
jno
jns
repz
test
and
fcomip
lods
or
mov
in
sahf
jge
jecxz
jns
add
sbb
push
fcomps
push
addr16
sub
stc
cld
aas
data16
jns
addb
xchg
stos
sub
or
leave
pop
pop
enter
jl
cmp
cmc
stc
js
and
sub
pop
mov
sbb
leave
repz
movsb
pop
mov
sub
jmp
push
mov
ficoml
or
leave
fmul
or
jecxz
add
aad
or
icebp
aam
test
enter
push
dec
test
ss
fisubrs
xor
jne
out
mov
loope
aaa
js
pop
add
mov
test
pop
jne
cmpsb
add
mov
adc
or
enter
dec
inc
push
push
imul
mov
out
pop
inc
fidivrl
dec
out
mov
pushf
dec
sub
ds
push
mov
addb
aam
ljmp
push
lcall
js
push
mov
inc
sub
push
xor
xor
xor
and
inc
pop
cld
imul
jg
sub
sbb
imul
sub
pop
xor
imul
or
bound
leave
xorl
fidivl
inc
xchg
push
mov
cmp
xchg
pop
adc
xchg
or
xchg
out
into
push
inc
lcall
pop
cs
sahf
inc
sahf
das
add
mov
in
std
xchg
push
je
leave
arpl
ret
aad
xchg
popf
or
outsl
sti
push
mov
jno
fcoml
sub
lret
clc
divl
push
adc
pop
adc
and
int3
test
jmp
and
sub
ret
adc
dec
mov
das
imul
xor
xor
orl
ljmp
scas
sub
dec
and
inc
pop
enter
ret
inc
mov
push
test
dec
sahf
in
dec
cmp
xor
push
je
test
out
jo
mov
jnp
stos
std
movsl
add
sbb
pop
adc
mov
xchg
call
adc
dec
pop
shrb
jb
dec
mov
fldt
mov
cmp
xor
call
and
or
scas
popa
ja
xor
xor
int
cmpsl
mov
and
es
or
stos
stos
bound
outsl
cmp
pop
out
cs
dec
add
cli
fsubs
int3
dec
test
cld
xor
fistpl
mov
lock
inc
pop
dec
mov
rorb
push
imul
fstpt
test
lds
cmpsb
sahf
mov
idivb
loopne,pt
ss
cmp
rcrb
xchg
or
xchg
cmp
stc
adc
lock
xchg
xchg
adc
push
icebp
pop
cwtl
mov
or
mov
pop
jmp
inc
sub
in
pop
xchg
adc
adc
pop
xor
aam
psubw
jne
loopne
jne
pop
insb
subl
push
int3
mov
cltd
cmp
cmp
jnp
sbb
imul
dec
adc
int3
push
into
xor
push
fdivs
adcb
test
add
movsl
inc
mov
pushf
sub
push
xor
mov
mov
icebp
adc
xchg
xchg
jmp
shrl
das
sub
jge
cmp
jb
lds
lcall
xchg
lcall
or
into
jmp
lcall
push
ja
and
jmp
daa
xor
sub
outsb
loop
in
cmp
icebp
mov
js
test
mov
push
cmp
jne
lock
iret
gs
and
add
scas
cwtl
add
inc
adc
push
test
dec
lock
and
movsb
push
cmc
popa
int3
sub
cmp
imul
in
cs
mov
pop
not
fistps
jmp
in
clc
loope
inc
or
repz
outsl
adc
push
add
stos
fcoms
mov
hlt
sbb
lahf
or
loopne
sub
and
inc
xor
inc
jecxz
or
mov
sub
std
lahf
mov
out
outsb
mov
pop
mov
movsb
pop
pop
dec
out
jbe
xchg
mov
cltd
test
addb
dec
call
dec
fs
fnstcw
dec
pop
sub
arpl
cmp
or
ds
push
cmp
pop
stos
sbb
arpl
in
call
fldt
sub
rolb
xor
stc
adc
add
js,pn
adc
push
dec
jns
cli
mov
jp
sbb
or
mov
stos
lods
fstpt
shrd
repnz
bound
or
hlt
rorl
inc
inc
xchg
mov
adc
jno
test
jmp
xor
push
popf
mov
pop
repz
enter
and
in
cld
test
dec
leave
fisttpll
pop
sti
dec
pop
mov
es
loope
inc
cmp
or
inc
mov
int3
popa
cmp
popa
push
pop
fbld
mov
mov
frstor
das
lret
iret
jecxz
insb
mov
adc
mov
insl
das
lret
sub
mov
inc
outsb
or
mov
imull
xchg
sti
int
test
loopne
pop
ss
push
xchg
aaa
sub
xchg
fstps
mov
and
dec
inc
outsb
lea
leave
adc
incl
or
mov
dec
in
and
dec
adc
outsl
jecxz
int3
xor
lret
imul
jle
push
imul
mov
fs
jb
jne
lds
or
jp
pushl
or
dec
outsl
push
dec
pop
add
subb
mov
out
lock
sbb
fisubrs
cmp
sbb
ror
outsb
clc
mov
push
inc
mov
pop
test
inc
push
cld
jae
and
lret
mov
leave
jecxz
and
insl
lods
insl
ljmp
push
fs
cmpsl
ss
xor
ljmp
xchg
and
pop
jb
sbb
lahf
cwtl
xor
sub
jnp
outsl
dec
mov
pop
cwtl
or
inc
jo
rcl
dec
jnp
das
xchg
or
or
sbb
jns
sbb
loope
cwtl
pop
cmp
mov
fsubrl
sbb
fists
stos
repz
fstpt
lods
dec
pop
ss
mov
push
cmp
popl
sbb
std
mov
sbb
xchg
fcompl
getsec
out
push
test
loope
popf
in
sahf
scas
inc
mov
mov
jo
fsts
js
inc
ret
call
fs
rcrl
sbb
call
jae
and
jno
cwtl
lods
sub
adc
sbb
shrl
filds
add
sbb
dec
mov
push
xchg
repz
push
mov
adc
adc
sbb
lahf
ror
es
inc
sub
jl
jmp
push
rcl
xor
xchg
jnp
pusha
sbb
mov
dec
jg
jo
mov
jl
jmp
cltd
cmp
movsl
mov
mov
push
pusha
test
pop
adc
inc
decb
lret
iret
inc
enter
fs
or
ret
mov
negb
mov
jae
outsl
mov
mov
ss
int
dec
jg
iret
add
sahf
insb
mov
inc
out
cmc
arpl
inc
and
jae
xor
mov
imul
sbbl
test
lods
mov
jecxz
filds
movsl
das
or
mov
mov
xor
pusha
test
pop
test
rcl
fwait
loopne
lods
test
push
adc
ja
punpckhwd
shrl
sar
push
push
inc
adc
cs
mov
loopne
cmpsl
pop
jns
adc
pop
mov
inc
std
stos
add
es
mov
pop
jnp
mov
outsb
or
ret
jg
xchg
sbb
mov
push
push
and
mov
pop
fsubr
jl
andb
pushf
stos
sahf
scas
into
scas
lods
add
jp
push
push
das
insl
in
bound
adc
repz
pop
and
in
mov
cwtl
jecxz
cmp
out
insl
sub
or
mov
gs
mov
add
movsb
or
xchg
int3
xor
xor
ljmp
stos
jb
leave
jp
jge
lods
andl
jmp
arpl
xchg
aam
addr16
adc
mov
movsb
or
pushf
outsl
push
imul
pop
pop
mov
out
test
and
mov
lock
cwtl
ret
std
adc
xor
xorl
mov
idiv
adc
cvtps2pi
xchg
push
bound
push
dec
dec
iret
sub
mov
scas
push
das
fcomps
mov
lret
outsb
xor
mov
mov
test
jmp
orl
js
sbb
lret
jnp
xchg
sbb
rorl
into
scas
push
or
or
sarb
dec
jnp
out
cli
cs
push
imul
fnstcw
mov
ja
loope
mov
cmc
sahf
leave
push
sub
xchg
mov
pop
in
cmp
lcall
enter
adc
lret
dec
add
sbb
xchg
sub
mov
imul
jl
test
and
push
lret
push
xchg
pop
sub
shrl
sbb
shrb
jecxz
scas
sbb
cmp
in
lahf
test
push
hlt
mov
pop
mov
or
cmp
xchg
dec
movb
dec
xchg
xchg
daa
lcall
and
adc
fmul
inc
pop
cwtl
out
divl
insl
movb
adc
pop
and
ds
ret
movsb
push
lahf
in
fcoml
pop
mov
dec
scas
xorb
mulb
sbb
cmpsb
loopne
out
or
cmp
rorl
pop
push
popf
mov
mov
mov
cwtl
sahf
mov
mov
leave
ja
test
sub
ss
repnz
add
es
xchg
xchg
push
loopne
mov
negb
notb
xchg
imul
lods
mov
or
insb
sub
jno
cmp
and
ret
ret
xor
test
jg
addr16
ret
xchg
xchg
xor
push
ss
add
cmp
cmp
mov
in
aad
js
or
das
test
dec
pop
mov
fidivl
mov
mov
sub
dec
sbb
xchg
mov
jno
inc
aas
mov
lods
aam
add
xchg
xchg
fsubr
or
fcomps
movsl
test
push
and
push
sub
jl
pop
in
push
cmc
js
add
push
std
clc
jle
xor
xchg
xor
outsl
cmp
inc
xchg
mov
sbb
gs
and
call
xor
ret
icebp
dec
pushf
xchg
fdivrs
aam
xor
xor
sbb
ret
out
mov
fmuls
dec
mov
cld
fnsave
mulb
sbb
mov
pop
mov
aas
aad
in
mov
pop
or
scas
pop
mov
jp
or
jb
or
or
inc
inc
jns
dec
jne
jno
mov
lods
leave
xor
cmp
mov
mov
mov
adc
mov
push
sbb
in
jo
gs
call
cwtl
test
mov
inc
dec
icebp
out
mov
test
aaa
shl
xchg
mov
lods
shr
xor
mov
scas
lock
pop
push
add
and
xchg
cmp
lea
add
sbb
and
pop
jno
das
push
sub
mov
push
addr16
stos
push
xor
popf
xor
xchg
add
sub
loope
mov
sbb
in
fnstsw
cltd
inc
mov
dec
inc
out
cmp
cli
pusha
push
push
cwtl
fs
rcll
sub
mov
adc
xor
push
fdivrl
push
andl
cwtl
sbbb
lret
data16
mov
das
jnp
inc
rcrl
xchg
lcall
cmc
push
jge
lods
or
aas
dec
fs
ss
outsl
test
dec
push
enter
dec
xchg
jae
imul
push
ret
imul
gs
rolb
inc
js
or
or
cmp
xchg
cltd
fwait
pusha
aas
roll
jmp
aaa
iret
leave
lods
dec
inc
pop
cld
and
pop
mov
aam
mov
xchg
outsb
fcompl
je
mov
and
cmp
xchg
leave
je
push
xor
xor
cmpsb
cmp
mov
clc
mov
jp
push
cmpsl
mov
mov
adc
xor
fnstcw
dec
push
push
cmp
fimuls
in
and
push
and
lahf
xor
fs
mov
ds
xchg
mov
mov
xchg
xorl
pop
mov
ret
les
adc
bound
out
add
jg
mov
les
in
mov
nop
push
xchg
pop
pop
test
lods
mov
fptan
decl
jg
add
or
dec
push
lret
pop
imul
jns
jmp
add
mov
jmp
shll
push
test
enter
adc
out
cld
into
xchg
xchg
mov
xchg
sbb
ror
jmp
lods
inc
sbb
and
sahf
add
pop
jne
ljmp
dec
push
pop
mov
cs
inc
mov
xchg
sub
and
lds
leave
xchg
out
jecxz
fs
adc
xor
mov
jbe
mov
fidivrs
mov
cli
les
sbb
sbb
adc
shlb
insb
jae
push
or
cli
cmp
mov
jbe
jo
jb
sub
or
popf
lods
add
push
out
decl
lret
mov
les
xchg
fwait
lea
lcall
in
xchg
jle
rcrl
sbb
mov
xchg
int
pop
or
inc
sti
enter
out
ss
scas
fsubs
movsb
or
rclb
and
jecxz
ss
sub
jmp
adc
nop
movhlps
xlat
mov
stos
call
rorb
cmpsb
mov
out
test
inc
pop
push
xor
stc
mov
ret
clc
cmp
jae
push
push
push
sub
and
inc
cmp
dec
jb
inc
sub
pusha
adc
inc
push
lea
xchg
and
sti
je
sahf
push
lret
imul
rcll
nop
mov
test
add
lret
mov
call
ret
cmp
sbbb
cmp
cmp
or
jns
add
sbb
xchg
cwtl
mov
jo
movsb
push
out
or
xor
mov
sub
or
cmp
sti
in
ja
test
jns
inc
into
jnp
or
cmpsb
pop
xchg
jo
jl
test
mov
mov
scas
fidivrs
sbb
or
jmp
sti
rclb
fdivrl
mov
ror
xor
pop
inc
mov
arpl
push
lret
lea
add
xlat
xorb
hlt
push
mov
pcmpgtb
jg
call
add
add
out
loope
test
inc
inc
ja
jne
fwait
xchg
cmpsb
or
daa
sti
fs
and
adc
mov
outsb
fs
jg
js
adc
lret
jnp
mov
clc
sbb
xor
and
movsb
mov
adc
insb
loopne
daa
arpl
mov
pushf
aas
add
std
addr16
clc
xchg
lcall
mov
andps
xchg
aas
inc
sbb
lahf
aas
pop
add
sbb
and
loope
lret
addr16
sub
dec
cmp
andl
frstor
lret
or
arpl
pop
push
fisubs
dec
clts
sub
dec
mov
cmp
ror
arpl
inc
out
inc
out
sub
lcall
outsb
je
dec
sub
jae
pusha
iret
push
cmpsl
pushf
shlb
and
in
out
imul
jp
xor
outsw
int3
pop
add
jbe
cltd
push
fs
fistpll
sub
mov
fidivrl
sub
bound
push
jp
mov
int
sbb
fs
and
ljmp
sbb
pop
dec
mov
and
dec
or
subb
scas
fstpl
inc
loopne
and
push
and
test
popf
dec
lea
fdivrs
loop
add
xchg
xchg
xorb
fidivl
sub
lcall
xchg
ret
jb
mov
jl
mov
xor
cmp
nop
xor
rcll
sub
cmpb
or
dec
lea
loope
pop
sbb
ud2
je
dec
xlat
cmpsb
sahf
xchg
push
mov
push
adc
cmp
sbb
xor
idivb
mov
jae
mov
inc
or
push
fs
jns
in
insb
fucomp
into
loope
jo
js
jecxz
mov
cmp
jle
daa
stos
sahf
push
cltd
sbb
push
fists
push
js
push
pop
loop
repnz
mov
jle
outsb
das
ja
pop
ss
mov
sub
and
xchg
fidivl
push
fbld
mov
data16
mov
out
xchg
loop
orb
jmp
das
xor
lcall
daa
jle
adc
int3
mov
pushl
mov
ljmp
repz
aad
sub
je
inc
popf
aas
xchg
xchg
inc
mov
or
loopne
mov
aas
sub
ds
dec
push
dec
jg
cmc
adc
outsb
jo
adc
cmp
cmp
insl
ret
ret
leave
cmp
push
or
call
shll
pop
jo
pop
cmp
xchg
jle
or
inc
rsm
xor
sar
push
lods
sub
or
pop
bswap
and
loop
je
fildl
mov
xchg
xchg
loop
pusha
loop
data16
loop
jbe
and
jl
pop
sub
jno
leave
jae
adc
add
pop
add
inc
fldl
mov
push
test
or
pop
sub
dec
test
mov
scas
cli
addr16
imull
cmp
movsb
jecxz
lret
adc
rolb
lcall
push
rcll
mov
xchg
cmc
push
ja
adc
aaa
movl
adc
movsl
test
mov
push
sub
pop
stos
fsts
mov
inc
jo
iret
lcall
dec
je
cmp
dec
mov
mov
push
xchg
outsl
sub
mov
outsl
push
dec
in
loop
insb
mov
orb
xor
enter
iret
iret
xchg
test
push
mov
lods
mov
jmp
xchg
push
outsb
rorb
lret
push
pusha
cmp
pushf
mov
fs
sub
into
push
dec
fists
vaddsubps
adc
cmpsl
loop
mov
inc
stc
dec
mov
push
cmpl
sub
fisubl
popa
sarl
push
and
repnz
cmc
cmpsl
pop
jns
cmp
enter
clc
pop
inc
adc
add
pop
mov
in
cmp
mov
roll
sbb
push
pop
mov
adc
nop
mov
inc
add
lds
cmpsl
sahf
xor
cwtl
pop
jmp
pop
js
addr16
push
insb
test
icebp
cmp
punpckldq
out
cmp
inc
mov
adc
xlat
lds
add
fs
pusha
inc
icebp
leave
push
es
adc
mov
sbbl
jno
int3
push
lret
pushf
in
mov
pop
and
mov
mov
insb
repnz
jbe
jl
es
fsubrs
push
sbb
dec
fs
xchg
pop
fnsave
xchg
fisubl
mov
and
jecxz
mov
cld
insl
pop
loope
ret
aam
add
lahf
out
or
stc
test
or
mov
push
jae
int
sti
mov
ds
mov
fcompl
and
sub
mov
std
flds
inc
push
mov
inc
pushf
shll
push
es
jge
and
shlb
and
and
addr16
mov
sub
or
pop
dec
mov
mov
aaa
scas
and
mov
dec
jl
fsubrs
pop
scas
pushw
mov
movsb
fiadds
and
inc
rcrl
fisttps
mov
in
popa
adc
lea
inc
pop
xchg
popa
in
popa
lret
mov
sub
lods
and
in
sub
adc
loop
pushf
rorb
push
xchg
jmp
mov
sarb
test
jnp
cli
and
hlt
pushf
shl
lahf
into
cmp
insl
jno
pusha
sti
mov
push
cmp
jne
inc
outsb
mov
jge
add
mov
sti
xchg
mov
jnp
stos
inc
mov
dec
cld
jo
mov
xchg
add
clc
pushf
adc
std
loop
xor
push
jbe
xor
notb
pop
ror
mov
cwtl
pop
and
insl
mov
ja
mov
or
mov
ret
test
roll
loopne
insb
jmp
out
cltd
insb
sub
add
xchg
lods
in
in
add
repnz
rcll
xor
mov
fmull
and
mov
cmp
and
mov
stc
sub
les
cmpl
stc
adc
jns
xchg
test
jne
fdivs
aam
inc
mov
jg
pop
pop
hlt
hlt
and
fs
imul
lret
test
enter
sub
jb
xchg
push
xor
mov
sub
xchg
jb
pop
add
repz
outsl
int3
sub
pushf
enter
sub
lcall
xchg
sbb
add
ss
ror
push
push
scas
in
jo
mov
aas
adc
jns
dec
repz
cli
aaa
ljmp
cmp
mov
sbb
mov
lods
loope
fildll
fisttps
mov
mov
lods
ss
fcompl
xchg
cmp
lods
mov
movsb
std
jmp
out
das
std
jmp
aaa
add
push
dec
fisttps
adc
in
dec
xor
addl
dec
sub
popa
aas
ljmp
mov
pop
mov
int3
adc
insl
mov
arpl
add
dec
ret
xchg
gs
fscale
lds
mov
stos
sub
popf
lcall
add
jbe
mov
ret
ret
push
aad
adc
push
stc
pop
fwait
rorl
pop
pop
push
and
push
push
xorb
fs
imul
out
push
fsts
sub
mov
jmp
sub
and
imull
xchg
lcall
icebp
lea
inc
mov
add
out
movsb
mov
mov
xchg
or
push
ja
mov
add
sub
scas
enter
test
adc
and
jne
xchg
mov
pop
xchg
mov
movsb
std
out
ja
sti
xchg
jge
lahf
push
xor
enter
rorl
flds
cltd
or
movsl
jp
in
or
psubw
add
pop
cmp
jb
ljmp
xor
call
daa
xor
pop
inc
mov
dec
out
sub
lods
outsl
idiv
mov
inc
add
xlat
inc
pop
add
and
fdivrl
add
enter
test
xor
inc
sbb
jmp
push
fmull
dec
cmc
lds
inc
daa
and
lahf
rorb
push
in
jmp
pop
and
sbb
dec
repnz
faddp
lahf
add
leave
xor
shrb
mov
dec
bound
pop
adc
or
mov
subb
rcr
dec
js
jae
int3
idiv
ja
fists
ficomps
xor
mov
mov
data16
xchg
mov
lahf
dec
cmpsb
cmpsb
or
outsl
popf
ror
push
mov
movsb
ret
cmpsb
jge
jecxz
pusha
andl
and
notb
lahf
mov
pop
jns
mov
cmp
fistpll
and
aad
cmp
dec
iret
push
cmp
xor
mov
lahf
xchg
jne
insl
inc
ds
and
fmul
dec
add
sbb
nop
popf
dec
cmp
cmp
mov
or
outsl
mov
push
cmpsl
daa
arpl
pop
adc
xor
stos
mov
in
cld
dec
pop
xor
loop
lret
outsb
push
jne
sub
and
icebp
push
in
jmp
mov
jnp
aad
adcb
mov
push
sahf
movsl
and
leave
jns
add
mov
cwtl
mov
cmp
inc
jp
adc
stc
mov
mov
adcb
or
pop
pop
push
call
dec
jns
inc
inc
test
movsl
and
out
hlt
cld
popa
movsb
fmuls
xor
adc
stos
adc
mov
add
ror
push
out
xchg
jo
xlat
mov
inc
cs
mov
lret
xchg
xlat
and
push
push
jecxz
cli
fwait
lods
cmp
into
sbb
ret
cmpsl
cli
mov
pop
mov
cld
jne
js
dec
fildll
aad
cmc
sub
inc
movsl
mov
jns
hlt
xor
pop
hlt
and
stos
lds
jl
pop
sub
mov
lea
cmp
push
cmpsl
mov
jmp
jmp
outsb
pop
movsb
iret
inc
fcom
arpl
test
xchg
es
aaa
inc
push
test
and
iret
stc
pop
jecxz
mov
fisttpl
inc
test
sub
sbb
mov
sub
xor
inc
push
lock
push
icebp
add
stos
push
mov
pop
in
mov
stos
mov
aam
shrl
xor
sub
popa
cs
cmp
in
or
xor
sub
cmp
sub
and
js
or
test
inc
pop
imul
cmp
sbb
jnp
and
cmp
ss
and
std
dec
jb
adc
in
adc
out
lock
in
sub
stc
mov
movsl
cwtl
mov
cmpsb
lods
inc
and
mov
outsl
mov
pop
xchg
mov
sbb
call
add
mov
popf
stc
dec
push
fnstsw
mov
xor
adc
push
inc
cmc
jo
fsubrp
and
lcall
pop
into
mov
xor
scas
dec
insl
sub
mov
xor
cmp
arpl
xor
test
and
xlat
cwtl
xchg
mov
push
ja
mov
sti
dec
les
ficoms
adc
cmpl
sarl
repz
xor
mov
inc
es
rorl
sbb
into
cmp
cmp
or
cmp
adc
or
adc
xor
decb
int
jbe
and
xor
and
bound
jecxz
mov
ja
sub
push
js
jae
sub
cmpsb
xor
jl
aam
out
fstl
fists
arpl
repz
pushf
xchg
outsl
xorl
add
ds
push
mov
cmp
jmp
cli
pop
hlt
jp
imul
mov
pop
cmpb
int
daa
add
xorb
cmp
outsl
loopne
adc
mov
addr16
push
loopne
dec
ja
adc
cltd
ret
inc
clc
cmpsb
push
pop
fiadds
mov
loop
inc
jle
jnp
push
in
pop
mov
xchg
stc
xchg
jmp
test
aas
and
mov
mov
sub
adc
das
and
jne
mov
inc
jns
adc
les
outsl
and
cld
pop
xchg
out
enter
lret
jmp
mov
mov
dec
ret
or
push
inc
sbb
jmp
nop
jbe
cs
xchg
fwait
mov
orb
cmp
push
shlb
dec
fmul
stos
stc
stc
ret
fldlg2
mov
data16
stos
bound
or
loop
pop
dec
xchg
mov
stos
or
shrb
mov
push
aaa
mov
push
subl
mov
js
mull
mov
push
mov
inc
repnz
in
lret
mov
ljmp
xorb
jae
dec
mov
xorl
jbe
cltd
outsl
arpl
test
or
inc
sub
lahf
mov
js
jmp
xchg
bound
sbb
mov
ret
jb,pn
sbb
inc
jne
push
fmuls
jmp
adc
ror
lods
out
pop
cmpsb
fisubs
mov
hlt
mov
mov
sbb
jbe
sub
fsubr
push
in
jne
movl
mov
test
jmp
int
push
add
pushl
cmp
mov
mov
fldenv
shlb
popa
aas
adc
stos
lret
shl
adc
fst
jb
sbb
fstps
push
sbb
sub
adc
jmp
sar
sbb
inc
mov
mov
and
popa
outsb
call
push
mov
sbb
cmp
fdivl
lcall
mov
fidivrl
sub
into
out
sbb
pushf
lret
jle
test
jnp
push
mov
xchg
and
inc
inc
adc
out
bound
mov
xor
lock
mov
lret
jl
push
jmp
pop
push
xorl
xchg
pop
pop
faddl
add
adc
mov
divb
aaa
push
jmp
dec
call
icebp
sub
sub
fs
sbb
cmpsb
xor
mov
popa
or
mov
xlat
mov
sbb
test
cld
mov
aam
pop
dec
cmp
add
ja
stos
pop
xchg
nop
sahf
push
or
in
scas
inc
adc
sbb
add
loop
loopne
mov
pushf
jo
pop
shrb
and
sub
mov
into
js
mov
jmp
sbb
int3
push
push
int3
mov
pop
fbld
sahf
xchg
call
movsb
or
int
jp
les
pop
pop
les
lcall
sbb
je
loopne
add
test
push
add
das
push
and
popl
pop
pop
ja
xchg
jno
xor
es
mov
cmp
sar
call
or
and
movsl
inc
xchg
mov
daa
jno
mov
fisubl
pop
xchg
push
bound
aas
add
jae
xchg
push
sbb
mov
nop
outsl
pop
neg
inc
mov
aas
push
and
rolb
andb
in
test
inc
sbb
les
push
movsb
popf
mov
in
int3
cmp
ret
dec
dec
jne
lahf
nop
insl
xchg
push
mov
sti
popl
test
jne
out
cmpsl
rcrb
cmp
adc
ja
sbb
pop
bound
xchg
mov
pop
rcr
enter
hlt
outsb
loopne
cwtl
dec
dec
xchg
jbe
push
inc
mov
push
xchg
dec
mov
mov
fbstp
lea
or
cmpsl
adc
add
movsb
xorb
push
or
lcall
inc
ja
sti
stos
out
or
mov
push
jne
fwait
jno
in
mov
js
je
stos
popa
or
int
nop
mov
or
pop
test
pop
dec
test
cwtl
lods
sub
sbb
pop
adc
jmp
dec
push
addl
xor
jo
xor
dec
lods
add
ss
test
jno
popf
test
and
adc
pop
mov
mov
sub
mov
insb
adc
movsl
cmc
lds
add
xor
mov
cltd
xor
xchg
std
add
gs
ljmp
lds
not
push
int
push
sub
push
xchg
jae
test
sub
or
shlb
std
mov
arpl
mov
push
outsb
fsubr
clc
inc
stos
jmp
icebp
jmp
leave
inc
add
shll
cmpsl
das
mov
xchg
xchg
cmp
dec
test
in
test
push
ret
sbbb
jle
xchg
push
jge
call
sti
fstps
lahf
out
fiadds
add
xchg
mov
jb
movsb
cmp
pop
shrl
fistpll
adc
and
imul
push
adcb
xor
dec
inc
fbstp
inc
into
or
ret
subl
sahf
lahf
fstpl
mov
lret
lret
shld
sbb
mov
testb
insl
in
shlb
and
or
es
arpl
inc
clc
sbb
roll
stos
mov
fwait
bound
imul
xchg
mov
pop
lahf
test
xchg
pop
pushf
inc
xchg
leave
mov
iret
lods
mov
sub
pop
sub
int3
gs
scas
push
in
push
jae
xor
mov
dec
jg
loope
sub
sbb
int3
mov
into
cmc
insb
aas
mov
push
push
stc
mov
sub
lcall
mov
icebp
shll
push
add
mov
test
mov
insl
inc
fists
add
js
fisubl
pop
and
ret
ss
mov
dec
inc
and
pop
repnz
repnz
jmp
xor
mov
mov
sysret
xor
cmp
mov
mov
cld
movsl
popf
inc
sahf
gs
cwtl
int
dec
pop
mov
push
xchg
mov
or
and
out
sbb
push
mov
insb
sub
mov
lods
rolb
fdivl
lahf
leave
pop
mov
icebp
xchg
sti
aam
jecxz
mov
and
sbb
mov
lock
out
loop
fcmove
lcall
ret
imul
ficomps
cmp
adc
or
xchg
pushf
and
les
inc
sub
xchg
incb
divb
pusha
jb
mov
mov
pop
jl
icebp
xchg
mov
cmp
jge
int3
in
notb
xchg
cmp
clc
dec
push
push
popf
negl
bound
mov
jns
sahf
gs
jg
pop
jle
push
adc
pop
sub
into
pop
xor
cs
push
aad
imul
fimuls
pop
sbb
mov
cmp
add
jge
mov
std
and
push
lock
jns
xor
fisubl
xchg
ss
sahf
pushf
sahf
mov
scas
push
xchg
pop
bound
das
or
imul
jnp
pop
push
push
icebp
xchg
jns
cmp
popf
and
xlat
xor
mov
dec
jle
fstps
daa
in
add
pop
sbb
outsl
push
dec
cltd
cmpsb
lahf
mov
push
pop
push
push
pop
aam
sub
in
pop
sahf
rcr
sbb
sub
je
xlat
jmp
je
les
pushf
aam
fildll
mov
test
jno
cli
xchg
or
mov
scas
adc
adc
test
clc
in
fsts
mov
add
and
hlt
pop
clc
dec
fistpll
aad
xchg
sti
and
xchg
fldenv
or
in
in
pop
gs
sbb
js
pop
mov
or
aas
xor
nop
pop
test
imul
push
out
subl
cmp
repnz
cmp
jecxz
inc
cli
push
daa
fisubs
gs
xchg
push
dec
sarl
push
add
cmp
sbb
xor
xor
mov
push
sbb
adc
mov
push
xor
loopne
mov
fisttps
and
in
fstl
jp
inc
pop
dec
push
cmp
push
insl
or
daa
fists
inc
mov
das
lds
adc
scas
sbb
sub
pop
sbb
in
mov
adc
dec
cld
cmp
test
ds
enter
into
pop
add
call
fisubl
pusha
les
jae
jnp
xchg
hlt
std
sub
jl
les
and
jmp
xchg
in
cmpsl
xchg
in
mov
push
ficoms
add
shr
cmp
mov
int3
fcompl
dec
xor
lods
or
and
sbb
or
ljmp
mov
sbb
in
sub
test
jl
in
jmp
mov
aas
xor
cmp
test
xchg
repnz
sub
movsb
pushf
sub
mov
mull
sbb
in
aad
push
cmpsl
jae
mov
or
mov
pop
notb
and
xchg
lea
mov
movsl
sub
xor
jae
push
pop
out
cltd
fnstcw
rcr
inc
mov
push
inc
or
inc
add
les
mov
push
sbb
jle
std
cmp
popl
pop
xlat
cltd
pushf
pop
fs
jg
add
xchg
and
xor
push
rcrb
push
repnz
adc
fpatan
cmp
lods
cmp
xchg
xchg
dec
arpl
push
addr16
mov
inc
cmp
add
flds
sahf
ljmp
idivl
es
shlb
dec
dec
jecxz
or
jo
dec
addr16
add
int3
in
inc
fisubrs
ss
sbb
mov
rcll
and
jae
stos
das
mov
add
push
xchg
sub
ret
rcll
lea
push
fadd
dec
push
scas
jno
mov
dec
pop
sarb
insl
dec
into
stos
int3
or
lods
jbe
xchg
mov
xor
dec
adcb
dec
in
jb
adc
jle
jmp
arpl
fsubrl
dec
test
sbb
les
jmp
sbb
popl
enter
pusha
jnp
adc
movsb
jmp
in
sub
das
xor
enter
outsb
imul
aaa
and
inc
mov
xchg
dec
sbb
sbbl
sbb
inc
add
jg
xor
stc
pop
or
int
pop
jbe
mov
out
mov
inc
cld
sub
xor
mov
mov
repz
imul
xchg
cmpsb
adc
push
mov
adc
cmpsl
hlt
xor
mov
je
cmp
pop
dec
jg
and
fs
sbb
pop
or
mov
lods
cmpsb
ficoms
mov
iret
push
stos
or
fstpt
and
jno
push
dec
dec
dec
mov
mov
les
rcr
jge
xchg
and
cmpsb
in
out
pop
cltd
adc
mov
mov
xor
sbb
xchg
lods
jnp
xchg
repnz
dec
cmp
in
pop
stc
aas
in
mov
and
sbb
insb
mov
cmp
scas
in
mov
movsb
dec
xor
js
mov
or
stos
adc
aas
mov
js
mov
in
inc
add
mov
jp
push
add
mov
leave
inc
add
sti
xchg
xchg
ss
and
cmc
or
mov
loopne
push
sbb
loop
mov
pop
pop
movsl
popa
and
popf
jbe
pop
dec
ds
lods
mov
outsl
fwait
mov
lret
iret
and
mov
cs
je
xor
mov
stos
push
sbb
or
les
pop
and
sbb
lret
cmp
in
add
jb
test
rcll
inc
rcr
leave
mov
es
push
xor
popf
mov
or
adc
repz
lods
fsts
xor
xor
and
aas
jmp
jnp
or
push
lret
cld
repz
jns
xchg
cli
and
ret
out
addr16
jno
sub
fstpl
sbb
cmp
enter
iret
pop
ja
dec
or
cmc
pop
out
and
sbb
mov
push
faddl
data16
pop
mov
sbb
stos
jb
mov
sti
jb
jl
or
mov
js
dec
dec
mov
pop
sbb
mov
inc
adc
shr
dec
or
fmull
inc
sbb
fidivrs
mov
and
int3
imul
or
pop
lods
nop
leave
jl
fldenv
mov
push
cmp
push
nop
les
mov
out
inc
mov
xchg
xor
mov
iret
push
push
xor
pop
mov
xchg
cmpsb
cmp
cmpsl
mov
push
iret
sub
arpl
xchg
pop
pop
mov
sub
lcall
and
shrl
test
add
cmpsl
mov
pop
pop
inc
pop
movsl
sarb
ret
jno
aas
popf
lods
xchg
sarb
inc
es
adc
sub
sbb
in
adc
cmp
das
jne
or
test
test
aaa
mov
adc
bound
jbe
enter
in
xor
adc
pop
push
adc
cmp
fisubs
pop
jle
shll
cmp
cld
jmp
jg
inc
cmpsl
add
ja
lock
add
dec
lret
mov
xchg
xor
dec
loop
dec
adc
pop
cmp
mov
or
jbe
adc
sahf
rorb
mov
insb
pop
cli
or
and
or
and
push
fiadds
mov
fcmovbe
push
adc
imul
leave
gs
cmp
mov
adc
pop
pop
les
pushf
inc
push
xor
mov
add
das
adc
pop
jbe
and
push
pop
add
push
testl
cmp
jne
mov
lock
das
loop
mov
ljmp
push
cmp
out
imul
fdivp
out
shll
xchg
cmc
mov
mov
lods
xchg
or
shrb
dec
xor
jns
push
stc
xchg
jae
sbb
mov
call
and
repz
jp
mov
dec
sbb
inc
xor
push
mov
shl
adc
inc
jae
leave
mov
pop
mov
add
add
xchg
movl
test
fisubrs
daa
mov
nop
mov
pop
sub
or
out
outsl
aas
mov
jl
or
mov
aad
dec
int
nop
test
shrl
mov
adc
mov
negl
cltd
es
cmp
lcall
loopne
and
imul
lahf
adc
lock
cmp
test
daa
jb
pop
jnp
inc
ret
rorb
icebp
addl
cmp
orb
call
pop
adcl
pop
loopne
mov
mov
nop
fwait
shll
push
pop
mov
mov
loope
mov
add
inc
push
adc
fisubrl
outsb
dec
out
adc
iret
icebp
pop
cmc
in
xchg
dec
aad
js
cli
mov
cmp
aam
insl
cmp
shlb
in
mov
gs
dec
in
in
or
pop
cmp
ss
mov
mov
dec
pop
inc
xchg
std
test
xor
xor
jge
ss
flds
outsl
daa
sub
lds
jg
adc
add
cmpsl
add
mov
loopne
ficompl
outsl
sbb
lods
or
nop
jae
movl
jno
xor
es
cltd
clc
stc
inc
adc
sbb
push
sub
cmp
aaa
lret
insl
outsl
sbb
int
dec
negb
pop
xor
and
pop
ret
in
add
gs
call
fcoml
pop
cmp
dec
mov
cwtl
push
out
in
push
insb
gs
aam
dec
pop
sahf
cltd
insb
fwait
jle
andb
and
js
xchg
stos
bound
sbb
xor
mov
inc
push
xchg
adc
push
push
mov
pop
add
mov
jmp
sahf
mov
jp
sub
stos
je
xchg
dec
cltd
loope
ja
mov
repz
dec
leave
and
fdiv
cmp
andl
jmp
lret
or
xor
xor
inc
call
outsl
dec
aaa
push
push
and
addr16
rolb
out
sbb
add
lret
or
popa
enter
int
push
sub
xor
hlt
shrl
lcall
scas
jbe
fcompl
imul
xchg
cwtl
mulb
cmpsb
cmp
or
adc
push
stc
sbbb
test
nop
pop
add
rclb
pop
stos
insl
push
mov
xor
inc
movsl
lret
mov
pop
mov
in
outsl
insb
repnz
xchg
rcrl
hlt
sbb
xlat
push
sub
sub
test
test
fnstenv
lods
mov
push
adc
loope
inc
bnd
jecxz
fs
mov
popf
mov
mov
cmp
jl
mov
imul
and
pop
sahf
test
inc
dec
out
test
ret
push
cld
mov
add
sbbb
adc
std
in
dec
jmp
test
jg
xor
pop
js
cmpsb
cmpl
cmp
cltd
shlb
dec
or
in
cmp
jns
jns
mov
repz
jmp
push
pop
cmp
add
hlt
sti
push
daa
push
jmp
jnp
jge
das
ja
jne
adc
jb
fidivs
push
dec
icebp
outsb
sbb
or
or
cwtl
or
dec
mov
ja
imul
jb
test
sti
mov
xchg
adc
sbb
mov
loope
shll
in
ja
cmp
outsb
xchg
fcmovnbe
shl
and
lods
xor
xchg
into
pop
stc
ret
icebp
or
nop
rcrb
push
pop
imul
sub
hlt
xor
cltd
aam
test
adc
jle
mov
inc
lret
push
mov
add
push
ljmp
mov
mov
popa
and
gs
imul
mov
fwait
repz
inc
push
iret
xchg
fsubl
mov
push
pop
mov
in
jg
cmpsb
inc
and
push
scas
push
bound
insl
sub
inc
lods
mov
jl
outsl
cmp
ffree
mov
sahf
out
pop
inc
mov
or
mov
fiaddl
pop
imul
adc
cmpsb
sub
mov
or
push
fcoms
addl
imul
adc
sub
add
mov
iret
xlat
jmp
xor
sbb
ljmp
jno
cwtl
cmp
fadds
loope
cmp
mov
lret
jmp
jge
punpcklbw
fmul
xor
jg
imul
outsb
inc
stos
cmp
test
pop
repz
cltd
sub
cmp
mov
imul
in
add
sbb
mov
out
jle
sbb
stos
imull
pop
push
or
dec
adc
cmpsl
inc
sbb
dec
test
pop
sbb
loope
leave
inc
movsl
cli
sbb
push
xchg
xchg
adc
sbb
adc
jae
notl
rcl
cmp
loopne
and
cld
inc
push
popf
loopnew
push
cmp
ss
mov
dec
add
inc
or
gs
push
pop
pop
fistpll
movsb
mov
fadd
mov
das
popf
call
sbb
xchg
dec
xchg
adc
mov
cmpsl
jne
pop
dec
loopne
in
jl
cwtl
xor
and
add
inc
sti
call
in
dec
mov
xchg
arpl
hlt
dec
inc
ret
js
pushf
and
testl
and
out
or
ret
cmp
sbb
xchg
fisubrl
imul
les
stos
adc
xor
jg
push
cmp
call
xlat
pop
pop
faddl
je
or
enter
scas
mov
inc
adc
mov
insl
sub
leave
add
fucom
call
push
jb
sti
into
enter
mov
push
clc
iret
movsl
subl
incb
push
push
cmp
in
cmp
mov
pop
cmp
and
je
in
xor
sub
js
into
push
in
add
or
test
mov
fwait
inc
jmp
mov
mov
pop
incl
mov
aam
cmp
jnp
jmp
cmp
into
pop
mov
fcomip
mov
in
test
sti
icebp
sub
pusha
xor
cli
daa
enter
jg
sets
pop
xor
movsb
xlat
push
inc
sahf
jge
adc
test
cmp
rorb
mov
cmp
cmp
mov
push
imul
jne
scas
outsl
sub
gs
jb
call
dec
enter
push
insl
jae
into
test
inc
inc
or
sbb
shrb
popf
or
mov
pop
aam
jnp
inc
dec
neg
mov
in
jae
rcll
negb
pop
mov
mov
movsb
and
insl
arpl
aad
mov
ljmp
and
mov
cmp
pop
mov
pop
pop
dec
inc
out
xor
add
shld
mov
push
sbb
shl
jmp
add
sub
pusha
outsb
sbb
push
sub
and
outsb
push
push
add
or
jmp
mov
clc
cmpsl
xor
movsl
pop
leave
addb
dec
movl
add
cmp
test
xchg
repnz
inc
loope
jnp
sub
sub
stc
mov
scas
adc
sbb
xlat
xchg
mov
or
cltd
mov
lock
ja
int3
or
repnz
outsb
mov
mov
jo
pop
inc
xchg
xchg
sbb
add
testl
out
pop
push
push
pushf
push
bound
sti
adc
movsl
cmpsl
add
ljmp
loopne
lcall
mov
jmp
xor
mov
mov
popf
mov
imulb
adc
nop
pop
push
dec
outsb
mov
adc
jge
xor
stc
test
dec
fstpl
mov
inc
xchg
sub
and
lahf
mov
das
inc
arpl
mov
addl
int
or
cmp
xor
scas
and
push
enter
icebp
cli
cltd
jnp
mov
rcl
pop
dec
jb
js
push
inc
xchg
movsb
pop
loopne
sbbl
lret
or
sbb
and
dec
jg
mov
adcl
dec
push
lds
js
aaa
and
cmpl
mov
fildll
cmp
shl
arpl
or
ss
out
xlat
mov
in
addb
mov
pop
stos
cwtl
dec
lret
adc
pop
and
in
addl
lret
out
xchg
fiadds
int
js
inc
mov
or
push
or
jno
nop
mov
je
jbe
outsl
data16
add
fnstsw
adc
and
es
xchg
add
inc
or
ret
out
jno
push
clc
scas
loope
inc
dec
test
lcall
and
fstl
or
testb
clc
fwait
cwtl
dec
jl
ror
lea
sub
out
sahf
flds
mov
pop
sub
push
outsl
mov
jnp
add
dec
adc
push
in
ret
add
sbb
inc
adc
icebp
xlat
push
adc
pop
ja
push
cld
fisubs
aad
mov
mov
push
sbb
sub
sar
or
add
or
aam
mov
cld
xor
xor
lods
mov
call
adc
dec
enter
imul
mov
adc
fucom
or
jne
rcrl
inc
lcall
pusha
mov
cmp
cmc
in
arpl
ret
mov
jle
dec
sahf
or
push
in
sbb
ss
or
sub
or
jg
dec
mov
mov
cmpsl
movsb
rolb
xlat
lods
sub
adc
pop
sub
xlat
mov
jbe
cmpsb
and
out
ret
mov
xchg
in
repnz
sbb
push
jmp
inc
sub
dec
cmp
shrl
out
lock
inc
xor
std
adc
shll
movsl
add
add
lods
mov
int
lret
xlat
test
outsl
mov
out
rcll
popa
and
hlt
test
mov
ret
arpl
inc
std
mov
sub
icebp
jle
mov
pop
dec
movsb
ljmp
in
mov
dec
push
xor
fs
adc
inc
xchg
push
stos
inc
pusha
and
es
outsb
cmp
jnp
pop
xchg
mov
in
jg
jns
idiv
pop
scas
xchg
arpl
xchg
mov
push
aad
out
mov
xor
scas
adc
pop
cmpsl
sbb
xor
sbb
or
jo
cld
jl
out
cld
shr
sub
fidivrl
fstps
subl
cwtl
leave
aam
pop
add
repz
fs
repz
fnstcw
fildl
cmp
inc
scas
bound
and
add
push
addr16
adc
add
loope
data16
mov
add
movsl
sbb
or
adc
add
sbb
lahf
push
test
lds
je
mov
leave
sbb
jae
aad
cmp
push
push
cmp
lcall
es
pop
inc
cmp
adc
jge
dec
pop
sbb
and
push
jo
dec
insb
insb
outsb
xchg
cmpsb
add
fsubp
or
and
testb
insl
push
mov
dec
jle
jne
cmc
inc
out
or
xchg
pop
mov
add
push
jmp
sbb
fs
adc
pop
or
and
jae
mov
or
mull
cmovs
cwtl
mov
jp
mov
por
inc
cmpsl
sub
xchg
inc
xadd
mov
cmp
negb
xchg
sbb
sbb
rorb
dec
loopne
or
sbb
stos
repz
das
push
mov
sbb
aaa
fnstsw
inc
jmp
cmp
je
xchg
xchg
sbb
add
cmpsl
mov
inc
push
test
fisubrl
fidivs
push
push
xor
adc
push
mov
in
jb
jo
xor
mulb
mov
pop
mov
cmpsb
shlb
or
jb
pop
jp
add
jge
cmp
fsubs
in
in
enter
fisubrl
dec
xor
push
lds
sarl
pop
mov
in
lahf
cld
mov
cmp
or
test
lds
mov
ja
movzbl
push
loop
add
in
push
pop
jns
xchg
das
call
pushf
mov
cltd
stos
ficoms
pop
inc
cld
stos
dec
mov
xor
add
outsb
sub
sub
add
jo
lock
leave
inc
xor
int
xchg
xlat
popf
loop
inc
ljmp
jns
jns
and
data16
iretw
pop
mov
testl
and
mov
jo
xor
cld
popa
xchg
add
cld
cli
movsb
cld
dec
jg
leave
mov
xchg
test
imul
popa
dec
imul
and
lahf
xchg
std
xchg
movsb
cltd
out
cltd
cmpsb
mov
sbb
ja
test
sub
test
fcoms
pop
pop
sbb
adc
mov
popf
int
rclb
test
sti
mov
mov
lahf
repnz
enter
mov
mov
cmp
adc
stc
push
adc
xorb
dec
cmp
out
mov
lcall
daa
cwtl
xor
stos
jo
lea
add
add
xorl
jl
adc
sub
mov
ret
test
roll
pop
sbb
aam
test
xor
test
sbb
push
add
pushf
ret
pop
cltd
ret
daa
push
jns
and
cs
inc
cld
mov
jnp
orl
and
call
pop
xchg
jb
pop
mov
push
or
and
push
xorl
hlt
dec
cmp
sub
repnz
mov
jp
inc
leave
jmp
outsb
mov
push
jns
in
xchg
shll
adcb
adc
ja
out
adc
clc
mov
inc
xchg
scas
pushf
loopne
rorl
shl
clc
mov
inc
mov
je
loop
ds
xor
add
adc
and
and
sbb
fnsave
mov
dec
adc
cmpsl
inc
nop
inc
adc
rolb
lock
and
mov
pop
or
sbb
push
data16
and
icebp
sbb
pop
into
ss
sbb
push
mov
rcrl
scas
add
fld
or
push
idivb
sti
xor
nop
ret
sbb
add
mov
xor
shll
ret
shl
or
aaa
popf
jge
cmp
bound
xchg
leave
mov
sbb
dec
cmpsl
jo
insb
mov
lods
or
ja
inc
jae
inc
shll
cs
ret
or
fsubs
add
gs
out
add
leave
arpl
ret
frstor
adc
outsl
mov
jns
sub
xchg
scas
push
dec
sbb
arpl
mov
cmp
loope
test
adc
jge
lret
sbb
cwtl
and
jmp
lds
jmp
test
in
fidivrl
inc
out
jle
xchg
roll
mov
sbb
imul
call
sbb
jno
hlt
mov
mov
xlat
pop
xor
sbb
ss
movsb
pop
dec
cli
loope
ret
inc
andl
int
cmp
cmpsl
jns
dec
add
mov
aaa
in
or
stc
jno
arpl
xor
add
scas
int3
imul
adc
sbb
ret
popf
add
inc
jne
and
nop
lds
xlat
or
clc
or
sub
and
and
shl
pushf
xchg
sbb
push
xchg
jp
jbe
jg
inc
pop
aaa
sub
aaa
jb
dec
xor
ljmp
cmp
pop
je
and
cmp
mov
mov
js
sbb
inc
cwtl
add
xor
cmp
pop
insb
imul
call
mov
push
jmp
mov
dec
repz
ret
add
jle
mov
inc
outsl
adc
push
push
and
push
es
rorl
cmc
and
mov
jns
cmp
and
push
push
dec
pop
lret
fldl
sbb
nop
repnz
xor
push
loopne
dec
jno
lock
ret
xor
jg
dec
jmp
lods
mov
pop
push
add
or
push
in
icebp
adc
or
cmp
cmp
inc
movsl
into
mov
xlat
stos
xchg
fidivs
sahf
arpl
gs
sti
and
fwait
aam
add
test
sbbl
in
mov
mov
mov
aam
insl
testl
std
mov
pop
jmp
movsb
inc
fstpl
imul
cmp
ficomps
and
movb
jns
add
fcomps
cmp
sbb
popf
out
and
jno
fdivl
jbe
push
in
cmpb
jle
insb
sarl
mov
xor
lret
cltd
out
sbb
xchg
fcmovbe
movb
mov
lods
mov
int3
inc
pop
lret
mov
inc
pusha
adc
xor
jb
xchg
ret
inc
mov
and
inc
leave
pushf
mov
push
lea
fdivs
enter
xchg
lret
lods
sub
cmpl
adc
pcmpgtd
loope
cmp
pusha
dec
test
out
mov
push
lcall
add
mov
ficoms
fwait
out
mov
mov
dec
outsl
outsb
pop
mov
popa
ficomps
gs
aam
push
sbb
mov
ret
and
push
pop
popf
clc
xchg
sbb
mov
aaa
jmp
jae
outsl
fdiv
adc
aas
in
adcl
clc
imull
mov
fdivrl
xchg
fs
sbb
pop
lds
lret
sub
gs
or
jg
orl
icebp
loop
lret
insl
and
add
fnstsw
lods
jmp
daa
mov
xor
xor
cltd
test
lods
sub
cmc
xchg
and
movb
popf
movl
mov
mov
ljmp
jns
lahf
inc
ret
jecxz
iret
scas
cmp
ds
jg
mov
add
outsl
fdivrp
hlt
punpckhbw
dec
cmp
testl
sub
lret
pop
cmc
xchg
dec
sub
in
inc
mov
cmpsl
lods
lock
mov
jge
icebp
and
lods
daa
ja
xchg
mov
mov
into
and
jno
and
pop
mov
or
adc
push
mov
xchg
cmp
lret
test
jbe
push
outsb
or
sub
xchg
inc
dec
lods
push
lods
dec
andb
push
movsb
in
fs
into
lods
pop
pop
loop
or
loop
jns
cwtl
sub
cmc
mov
mov
push
push
pusha
out
dec
ja
je
aas
push
stos
outsl
jb
push
stc
cmc
sahf
cmp
shl
or
push
popl
mov
jl
xlat
dec
adc
mov
sahf
adc
popf
ffree
arpl
test
ds
ret
lret
xchg
in
pop
filds
repz
stc
and
mov
incb
outsb
pusha
xchg
lods
scas
push
jne
dec
movsb
fwait
test
dec
push
cmc
pop
or
das
sti
jl
add
xchg
xchg
cmpsb
hlt
ret
mov
jmp
jb
xlat
sahf
ret
ret
call
mov
mov
sbb
gs
stos
inc
popa
push
mov
cmp
inc
add
rcrb
inc
cmp
xchg
mov
stos
int3
shll
push
enter
push
dec
sbb
popf
sub
mov
and
add
dec
push
cmp
or
add
insb
adc
es
aaa
test
jg
xor
iret
or
inc
cli
shr
outsl
adc
add
mov
or
test
inc
inc
outsl
in
dec
push
push
xor
movsb
popa
sarb
divl
cld
mov
addr16
jmp
inc
test
cmpsb
sbb
mov
cli
nop
cmp
pushl
pop
sahf
pushf
out
movsb
imul
xor
xchg
mov
repz
push
jno
gs
lcall
fsubr
out
fcoms
out
ficompl
dec
cmp
mov
mov
ds
mov
or
fdivrs
sbb
dec
mov
mov
outsl
imul
sbb
inc
data16
loop
loop
add
cmpsl
aaa
in
les
sub
push
out
inc
pop
scas
dec
xchg
aas
daa
rorl
dec
popf
hlt
mov
loope
pushf
mov
mov
loope
cmp
mov
fldt
cld
sbb
rcrl
dec
push
movhps
pop
mov
sbb
lcall
cmp
nop
mov
arpl
push
ss
inc
push
sub
xchg
mov
sub
inc
add
mov
aad
mov
fwait
pop
mov
mov
rol
sti
sbb
pop
cmp
in
sub
popf
out
ja
js
push
mov
and
addr16
xchg
mov
stos
das
cs
xchg
jle
scas
sub
ret
mov
clc
mov
pop
loope
mov
add
scas
stos
dec
sbb
leave
xchg
sub
pusha
or
cmp
jmp
fmul
out
call
jp
jb
pop
imul
jg
lret
mov
sub
clc
int3
mov
out
mov
xchg
add
jle
mov
xor
dec
daa
shll
or
lods
mov
shlb
negl
clc
gs
jne
xchg
inc
mov
bound
push
pusha
lcall
dec
push
stos
dec
lret
mov
pop
cmpsb
sahf
lods
push
inc
jnp
cld
pop
add
lea
sub
lcall
cmp
inc
lahf
push
popf
cwtl
in
ror
sub
mov
inc
out
imul
jo
out
shlb
pop
xor
xor
mov
nop
inc
jmp
sbb
cld
mov
dec
sbbb
inc
push
mov
pop
cmpl
add
es
sub
and
hlt
aad
call
jno
ljmp
fisttpl
ljmp
xchg
or
sub
aaa
dec
dec
sub
mov
inc
push
call
jnp
je
push
or
cmp
ss
cmc
add
xlat
std
mov
popa
ror
and
mov
pop
xchg
adc
popa
stos
aas
mov
dec
jg
fisubs
mov
xor
mov
xchg
scas
and
or
adc
xor
xchg
mov
pusha
ss
ret
cmc
mov
cmp
inc
pop
nop
jno
popa
or
or
loopne
shr
fdivr
cmp
pop
mov
pop
cmpsl
mov
mov
jno
cmp
cs
add
int
jecxz
xor
mov
fsubrp
movsl
insb
xchg
push
rcrl
testb
shlb
fidivs
out
inc
pop
ds
adcl
xchg
adc
mov
pop
xor
daa
add
imul
push
pop
dec
pop
stos
pusha
inc
ret
sbb
add
into
cmc
mov
adc
dec
aaa
cmp
jne
bound
fstl
popa
popa
sbb
mov
out
inc
sbb
movsb
or
or
insl
and
push
rcrb
orl
int3
mov
ljmp
add
fsubrs
ds
push
mov
push
push
cld
xor
cli
je
shr
and
sub
push
inc
roll
fsubrl
jle
mov
adc
and
pop
data16
mov
aaa
enter
xchg
imul
in
cwtl
add
lahf
dec
ljmp
sbb
jp
fdivs
push
cld
aad
adc
push
cmpsl
xchg
int3
in
psubusb
cmp
cmp
sbb
cmp
or
inc
std
cmp
xor
jmp
jp
add
std
pusha
cli
xor
add
sub
mov
sub
jmp
cmp
jg
pusha
mov
out
andb
inc
fstps
pop
lods
lea
fcomi
out
add
insb
xor
jp
xor
fcompl
mov
add
dec
inc
xchg
out
ds
push
push
aas
mov
and
mov
pop
jnp
pop
push
adc
je
and
mov
adc
movsl
push
lods
inc
sbb
push
scas
mov
pop
mov
xchg
sbb
andb
pop
cwtl
mov
xor
push
dec
sub
lcall
adc
out
jno
xchg
push
aad
out
mov
adc
ret
into
sbb
out
or
fsts
jns
xchg
add
aas
add
rcl
mov
cmpsb
insl
and
xchg
fidivrs
cmp
into
jecxz
jb
je
leave
dec
mov
xor
cmp
push
xchg
pusha
mov
cmpsb
mov
ja
imul
gs
pop
add
adc
push
xchg
mov
cmp
or
insb
fidivrl
loope
fs
clc
jp
and
cmp
sub
sbb
mov
aad
movsl
mov
iret
xor
movsl
mov
int3
pop
mov
pop
repnz
xchg
jge
cltd
imul
lock
add
mov
ja
xlat
cltd
test
in
mov
cmp
mov
out
addr16
sbb
out
pop
stos
fwait
sub
jecxz
testl
mov
fnstenv
repnz
xchg
dec
aad
jns
pop
lret
pop
sbb
jl
add
stos
cmpb
scas
adc
outsb
iret
notb
leave
mov
sub
lret
out
fimuls
fiaddl
testb
loope
fucomip
mov
mov
jnp
mov
out
mov
mov
sahf
mov
inc
fistps
int
ficomps
outsl
inc
sub
jbe
xchg
push
iret
mov
mov
sub
je
mov
mov
test
adc
pusha
lods
rorl
daa
fmuls
sarb
mov
adc
subb
fstp
and
pop
sub
mov
cmp
inc
cli
ljmp
jg
je
mov
leave
in
imul
mov
inc
sub
mov
xor
push
adc
movsl
fidivl
fwait
popf
sub
and
shlb
mov
es
imul
jns
jge
sbb
cmp
lds
icebp
cld
and
or
imul
test
ljmp
es
sbb
sbb
and
xor
or
push
pop
jo
dec
jae
lods
pushf
xor
inc
lret
xor
mov
mov
cli
or
pop
push
pop
es
cmpsb
jmp
jbe
adc
sahf
pop
ret
dec
cmp
dec
xchg
gs
dec
xchg
lods
sub
in
mov
fs
push
aaa
outsl
mov
or
cmp
test
cmp
cmp
les
fnstenv
push
sarl
in
jg
call
and
decl
mov
cmp
std
sbb
lea
xchg
cmp
in
nop
ja
call
fnstsw
xor
popa
shll
sub
mov
ret
mov
cld
fisttpll
das
shl
inc
repnz
mov
cwtl
cld
inc
fdivrs
mov
push
ss
fcomps
inc
stos
inc
mov
cwtl
insb
mov
popa
loope
or
mov
jns
loopne
adc
inc
mov
pop
addb
loop
or
xchg
shlb
sahf
aam
cmpsl
fsubs
mov
sub
xor
dec
push
cmp
fwait
icebp
inc
add
sub
dec
xorl
dec
ret
loopne
cmp
xchg
adc
adc
push
jbe
imul
test
mov
xor
pop
cld
shl
jge
mov
add
dec
lea
mov
rorl
and
ret
loop
dec
sti
arpl
mov
dec
outsb
test
mov
push
shlb
popl
ficoms
xlat
dec
adc
or
jo
int3
dec
mov
push
ja,pn
test
test
mov
orl
cmp
inc
xchg
loopne
jp
and
add
sub
lahf
dec
scas
repz
xor
gs
lret
and
sub
lahf
stc
jo
dec
es
push
push
jecxz
jno
cmc
xchg
test
dec
sub
inc
pop
out
in
mov
iret
mov
scas
cmpl
pushf
lret
stc
and
xor
shlb
xchg
arpl
in
icebp
adc
test
mov
fs
and
inc
or
push
out
imul
xchg
scas
sbb
mov
hlt
insb
movsb
pop
jp
push
and
mov
mov
cmp
xlat
fs
cli
pop
mov
inc
arpl
push
adc
popf
filds
push
movsl
dec
lahf
aas
pop
jbe
pop
inc
mov
repnz
adc
pop
test
fisttps
pushf
addb
xchg
loope
and
xchg
in
outsl
cmc
cs
mov
sbb
and
sub
mov
loop
mov
rcr
cld
notb
loope
ljmp
adc
jg
rol
ret
push
sub
in
insl
xchg
cmp
dec
ficompl
insl
push
cli
inc
inc
jae
cwtl
jle
pop
pop
xchg
mov
adc
push
or
stos
js
cmp
push
cmpb
add
mov
adc
cli
cld
imul
outsb
and
inc
push
cli
mov
pop
jnp
xchg
jo
pop
mov
test
lods
adc
xorl
cmp
popf
fstl
nop
std
jl
loop
and
out
loop
xlat
lahf
pop
cmp
cmp
and
jg
lea
in
adc
sub
cmp
mov
icebp
das
cmp
lock
iret
ficoml
mov
inc
lahf
repnz
add
add
pop
push
add
mov
orb
or
ret
sbb
or
loope
inc
iret
add
add
insb
stos
mov
stos
lock
and
sbb
jg
jp
into
pusha
inc
mov
mov
sub
adc
add
xchg
popf
jmp
in
pop
adc
shrl
icebp
clc
clc
rorb
pop
xchg
push
sub
aaa
leave
push
xor
xor
inc
int
aam
mov
inc
sti
je
mov
push
fldcw
shrb
jae
sahf
xchg
stc
das
xor
push
xchg
xchg
xchg
decb
clc
pop
add
inc
leave
cmc
repz
or
enter
xchg
cmp
mov
jno
mov
shr
xor
js
ss
movsb
test
mov
inc
int3
bound
std
pop
push
push
pop
pop
and
lods
mov
push
pushl
mov
cmp
adc
dec
mov
div
jle
loop
pop
popa
add
repnz
jo
sbb
or
xor
dec
adc
testl
js
pop
add
xchg
je
sbb
xor
aam
push
push
dec
mov
ficoml
adc
add
mov
cmc
cmpsb
sub
jno
or
std
or
jo
xlat
pop
xor
sub
in
imul
sahf
jne
dec
xorb
push
pop
fnstcw
pushl
js
mov
xchg
iret
push
adc
shll
sub
lahf
test
loop
mov
add
notb
pushf
inc
js
push
sahf
mov
addr16
sti
fwait
popf
nop
jb
cmp
adc
movsb
xchg
popl
inc
sbb
mov
rcl
pop
in
add
xlat
lea
jecxz
jp
cmp
data16
xor
inc
xor
mov
sbb
ret
xchg
and
loopne
das
mov
orl
cmp
jl
mov
pop
sbb
std
ja
aas
add
push
dec
and
movsb
daa
pop
sub
and
mov
sbbb
in
nop
mov
xor
sahf
rcr
push
fsts
arpl
add
cmp
sbb
jg
gs
call
adc
sti
xorl
repnz
jbe
sub
out
addr16
cmpsb
add
sahf
kandb
add
pusha
push
mov
mov
pop
adc
scas
loop
mov
fstl
inc
mov
and
jecxz
lods
stos
and
rorb
sub
push
mov
push
rcrb
inc
push
and
mov
lods
inc
or
adc
xor
popa
inc
push
xchg
rcrl
dec
lret
mov
add
lds
and
cltd
sbb
mov
insb
sarl
lret
cmpsb
push
inc
lret
mov
xchg
mov
cs
push
call
sub
mov
xor
mov
push
js
pop
lods
adc
into
sbb
jae
add
imul
rol
add
dec
rcrl
aam
cmp
push
sbb
int3
xchg
movsw
mov
sub
push
jp
outsb
xchg
mov
pop
mov
sbb
push
jg
movsl
imul
inc
js
adc
pop
mov
sub
xor
dec
sub
jb
mov
out
ret
mov
and
insb
sti
jno
repnz
pop
dec
sub
pop
sub
push
pop
xchg
or
xor
daa
xor
jo
fs
popa
pop
mov
cmp
out
adc
lock
popl
lret
mov
pop
sti
iret
fwait
push
out
fdivs
icebp
push
nopl
sbb
clc
mov
add
inc
adc
mov
stos
bound
into
test
aaa
outsl
mov
fimull
stos
int
mov
loopne
pushf
test
stos
xor
cld
xchg
sbb
jp
lds
sub
test
pop
jo
mov
xchg
lahf
lock
in
jge
cltd
inc
mov
loope
aam
rcll
adc
clc
dec
mov
cmp
pop
mov
sti
imul
or
inc
or
lahf
out
shll
fidivs
daa
fcompl
cmpsl
and
addr16
sarl
loopne
frstor
adc
lds
and
stos
insl
sarb
mov
cmpsb
incl
jnp
and
fidivrl
dec
xor
leave
lahf
into
clc
arpl
ja
cli
lock
out
aad
jl
outsl
lahf
imull
mov
and
mov
pop
xor
add
lods
in
xchg
sbb
push
hlt
or
stos
xchg
dec
xchg
push
sbb
inc
jns
dec
lret
jns
scas
idivb
cmp
push
dec
fs
sbb
sub
cmp
mov
jbe
pop
in
rorb
add
jo
outsl
pop
adc
push
stc
cld
cmpsl
cmp
nop
lahf
sti
mov
fnstenv
aam
data16
push
out
adc
jo
dec
mov
gs
pusha
cmp
jge
sbb
xlat
mov
pop
ss
in
stc
or
dec
enter
adc
mov
add
jns
pop
fs
decl
lahf
cltd
push
mov
push
jl
jae
sub
jbe
test
pop
lahf
shll
out
and
in
adc
pop
dec
sub
cmp
je
aas
and
xabort
loopne
xor
out
push
add
xchg
mov
sti
xchg
mov
stos
or
mov
sub
push
lds
sbbl
xor
add
mov
test
cmp
lcall
stos
mov
out
adc
jo
pop
and
aam
adc
mov
out
int3
sarb
mov
cmpsl
in
pushf
mul
mov
or
or
iret
call
iret
repz
cld
bswap
sub
loopne
push
sbb
cli
aas
loopne
push
cmpsb
xorl
test
push
icebp
gs
nop
mov
cmpsb
lcall
imul
lahf
fldt
push
out
jl
push
in
sbbl
pop
mov
inc
ret
shl
lret
mov
test
inc
jne
out
pop
sbb
bound
sub
xchg
sub
jb
jl
cmpsb
mov
test
in
dec
aas
das
ffree
mov
ss
stc
fcoml
sub
jge
scas
pushf
xor
adc
out
xor
imul
adc
pop
jl
cmp
icebp
jp
addr16
scas
mov
dec
or
sbb
mov
and
push
push
pop
push
clc
cwtl
jecxz
rorl
xor
mov
push
lock
add
adc
insb
inc
ljmp
ffreep
xchg
mov
out
xchg
jns
and
or
cltd
inc
hlt
cwtl
pop
scas
pushl
scas
jb
cltd
sbb
jl
cmpsb
pop
dec
or
imul
fcompl
cltd
xchg
cmpsb
lcall
repz
add
fnsave
lds
cli
dec
scas
jb
adc
mov
mov
sbb
mov
cmp
inc
ret
cmc
iret
jno
pushf
mov
and
outsb
loop
cwtl
adc
xchg
cli
jb
loopne
loopne
subl
cmp
shl
push
in
data16
xchg
andb
push
mov
stos
clc
adc
mov
fwait
int
sbb
lds
call
pop
or
fildl
addl
sti
lods
xchg
popf
xor
flds
mov
jmp
fadds
mov
iret
adc
out
pop
lahf
stos
mov
ja
mov
and
mov
hlt
dec
jle
mov
lahf
testb
inc
xchg
pop
mov
out
or
cmpsb
push
xor
adc
jbe
push
clc
mov
cmp
sahf
call
cmp
les
adc
test
repz
rclb
push
addl
push
je
pop
pop
xchg
sahf
scas
push
aam
pop
sub
movsl
addr16
call
cli
mov
pop
sbb
mov
xor
rcr
mov
outsb
nop
int
mov
jle
das
sbb
cmp
sbb
je
mov
jno
sbb
mov
jp
xchg
cmc
ljmp
inc
rolb
dec
movsb
fs
fcoms
test
sahf
movsl
orb
push
mov
cmpsl
dec
push
es
outsb
cld
push
cmp
jl
push
pop
mov
test
outsl
enter
aam
fisubl
into
test
enter
mov
mov
outsb
iret
loope
inc
insb
cmp
leave
pop
pop
lds
inc
int3
push
push
popf
arpl
cmp
fdivr
enter
ja
imulb
test
in
loop
shlb
sbb
sbb
jnp
add
rolb
repz
mov
and
or
cwtl
and
pop
insb
mov
push
xchg
inc
sub
test
push
xchg
ficompl
xor
cmp
sub
push
loope
sbb
dec
arpl
inc
test
push
jne
aam
push
vpmadcsswd
push
mov
orb
lods
loop
jg
lea
popa
push
cmc
or
fildl
mov
loope
pop
pusha
adc
in
icebp
ret
inc
sbb
jne
xor
sbb
imul
es
imul
cmp
dec
fldl
dec
bound
inc
xor
pop
or
inc
insl
xchg
fsubs
into
insb
xor
sbb
outsl
inc
mov
popa
fwait
push
adc
rorb
adcl
insl
jbe
inc
jbe
jno
xor
sub
mov
movsb
outsl
jns
stos
lods
pop
fisubl
int
fsubrl
jns
xchg
ficoms
in
sbb
cld
pop
lds
sbb
or
fsubrs
push
mov
sbb
js
negb
mov
lret
pusha
jle
add
inc
test
adc
mov
and
push
push
mov
gs
mov
sbb
loope
and
test
stc
mov
inc
dec
out
dec
cmc
pop
pop
dec
xor
hlt
cmc
xchg
or
in
aaa
sbb
ret
add
aad
fwait
sbb
cmc
loopne
push
add
xor
push
outsb
cmp
outsb
out
xor
imul
cld
arpl
adc
inc
jne
inc
addr16
fstpt
lretw
cmp
loopne
push
sub
jb
mov
lahf
or
les
shrb
sub
test
icebp
clc
pop
mov
fnsave
sbb
xchg
lods
mulb
pop
iret
insl
in
sarl
testb
sbb
popf
vhsubpd
imul
jns
mov
iret
sbb
adc
decb
xchg
cmpsl
xchg
test
and
cmc
push
in
mov
push
xor
mov
cmp
sub
and
adc
fbstp
xchg
pop
lods
mov
xchg
roll
in
movsl
std
push
js
adc
mov
xchg
idiv
cmp
push
xchg
idivl
loop
into
mov
outsb
fldt
fwait
or
ja
lcall
adc
adc
mov
insl
stos
sti
int
push
out
xor
mov
cmp
insl
out
cmp
flds
push
push
lods
sti
mov
ret
cmp
mov
sti
cmp
js
push
mov
xor
xor
cmp
cld
adc
test
dec
and
cmc
cmpsl
test
ds
loope
pushf
sbb
inc
add
sub
jl
cmp
ds
je
into
sbb
popa
xorl
mov
push
jg
fsubrl
test
call
adc
and
push
sahf
mov
repnz
subb
xchg
xchg
fcomip
adc
jmp
dec
ror
mov
js
outsl
and
xchg
int
and
out
xor
xor
push
loope
in
pop
rcrl
cli
and
hlt
push
mov
lods
cld
insb
cltd
icebp
jp
cmp
add
xchg
push
sbbb
jmp
int
imul
js
adc
imul
jne
es
xchg
enter
movsb
jns
push
xor
sbb
fidivrl
adc
ljmp
sbb
mov
dec
pop
jmp
mov
xchg
cmp
sbb
pop
arpl
aad
jae
jp
daa
aaa
fldcw
dec
mov
cwtl
push
les
rcl
push
mov
mov
popl
fwait
inc
xor
mov
sahf
or
popf
icebp
mov
into
arpl
int
movsl
push
pushf
loope
mov
xchg
mov
jle
dec
mov
xor
sarb
pop
js
dec
xlat
cmp
popl
and
sarb
idiv
mov
xchg
js
or
shll
xchg
mov
or
and
inc
ss
xor
push
ja
add
aam
fcomps
xor
mov
cmpl
lods
rorb
adc
aaa
test
push
adc
mov
es
imul
mov
in
xchg
xchg
adc
xchg
nop
das
cmp
mov
movsb
pop
jbe
rcrl
cmpsb
cli
std
mov
fistpl
dec
mov
fidivrl
mov
fistpl
inc
jp
dec
lcall
in
lds
popa
addr16
xchg
outsl
jle
test
sbb
mov
out
fchs
orb
adc
clc
dec
xlat
mov
int
push
ret
jge
mov
in
hlt
sar
pop
mov
ret
mov
dec
loope
into
adc
jp
imul
mov
push
and
mov
mov
mov
lods
ljmp
add
push
sub
rorl
mov
mov
mov
shll
mov
lret
xchg
loope
push
mov
pushf
adc
sub
add
sbb
mov
dec
sbb
leave
xlat
mov
mov
ficoms
int3
add
jl
push
sub
adc
jb
and
movsl
fcmovb
lea
imul
mov
push
in
lds
mov
pop
fwait
mov
sub
jo
dec
out
dec
ret
rcr
inc
dec
lods
mov
adc
mov
sbb
notb
push
cmp
scas
stos
fs
in
ret
mov
outsb
jmp
outsl
adc
popf
sbb
and
and
cmp
pushf
jecxz
jb
sahf
xor
xor
lcall
xchg
mov
push
push
mov
iret
outsb
pop
jo
jns
jb
mov
jb
fnsave
add
inc
fadd
xchg
pop
jp
decl
neg
sbb
xchg
cmp
mov
and
fcoml
mov
imul
add
cmp
hlt
and
inc
xchg
inc
dec
sahf
add
xchg
pop
jecxz
decb
push
nop
stos
repnz
lahf
movl
sub
sbb
in
cld
sbb
dec
pop
notl
faddp
les
in
repnz
add
js
mov
inc
jno
cmpsb
cmp
pop
sub
mov
insl
jae,pn
cmc
mov
in
xor
adc
cmp
jle
mov
or
test
xchg
in
jg
xchg
popa
or
or
fsubp
cwtl
jp
addr16
mov
ja
aaa
mov
pop
mov
inc
sub
loop
cmp
cmp
jno
adcl
imul
mov
hlt
stos
arpl
ficomps
sbb
cmc
mov
inc
add
mov
mov
mov
sub
jo
insb
push
jmp
lcall
sub
clc
jmp
mov
inc
fimull
adc
jmp
loop
or
jge
dec
dec
std
add
sbb
pop
push
pop
sbb
imul
mov
aad
mov
add
cld
jmp
inc
mov
sub
add
xlat
cmp
dec
mov
adcb
sub
je
mov
dec
loopne
push
into
jnp
div
ja
ret
add
popf
loope
adc
dec
inc
enter
and
imul
mov
mov
pop
jge
sbb
into
les
mov
std
mulb
dec
xorl
loop
out
int3
in
dec
cmp
push
sbb
in
das
les
imul
ds
in
data16
and
push
mov
adc
cmp
inc
scas
mov
out
add
imul
push
cwtl
push
push
imul
add
scas
je
in
cmp
outsl
mov
repnz
mov
xchg
add
cwtl
add
mov
pop
or
ret
xchg
add
arpl
xchg
push
xchg
sub
dec
mov
scas
neg
cli
aad
xchg
andl
ficoms
jecxz
fsts
xchg
add
mov
jo
clc
imulb
addb
mov
stc
xchg
int3
ja
lcall
xchg
insb
sbb
pop
loope
jg
and
or
ja
jnp
insb
sbb
smsw
jo
lret
push
mov
sbb
jbe
xchg
in
fimuls
sub
cmp
pop
icebp
xor
cmp
add
add
inc
add
insb
addr16
and
mov
rcrb
push
mov
ja
cmp
pop
jnp
repnz
das
shlb
or
mov
std
mov
lcall
dec
jmp
lea
mov
icebp
stc
shlb
test
push
or
jne,pt
xor
sub
js
test
sbb
shlb
lcall
sub
mov
fsub
orl
mov
es
add
pop
aas
jno
ret
or
sbb
dec
xlat
push
in
xchg
fwait
scas
cmp
inc
aas
sub
pop
mov
jge
int3
sbb
push
rclb
popa
jb
adc
icebp
pop
hlt
nop
mov
mov
test
enter
sub
sbb
and
lods
jl
mov
adc
sbb
or
scas
repz
xor
cmp
data16
ljmp
icebp
or
pop
sub
sahf
mov
adc
sti
lock
add
bound
push
and
adc
test
add
cmp
ss
fiaddl
mov
mov
rcr
sarb
std
rclb
inc
mov
sbb
cs
sub
sti
lret
push
call
dec
nop
xlat
lret
addr16
sub
jnp
cmp
push
sbb
mov
mov
cmp
cmp
lock
shl
xor
push
add
inc
sub
lahf
push
inc
les
test
or
stos
adc
xchg
rorl
repnz
imul
ret
add
scas
or
xor
pop
aam
mov
fldenv
cmp
push
imul
push
fdivrl
hlt
call
inc
shlb
dec
fisttpll
scas
hlt
notl
mull
or
or
jb
cmp
xor
mov
in
dec
out
sub
fcompp
inc
dec
loopne
in
jl
lcall
ret
and
mov
fisttpl
dec
jge
cmc
mov
test
xchg
daa
push
stc
cvtps2pd
dec
push
add
inc
inc
dec
loope
adcb
out
dec
jmp
das
jmp
pop
and
jecxz
lea
test
in
pslld
scas
cmc
shll
fistl
mov
jp
adc
aaa
jge
cmp
testb
gs
lds
shrb
js
push
jge
push
cli
xor
inc
in
and
inc
adc
sub
pop
inc
add
add
xor
ret
fcmovnu
pop
sbb
adc
cld
insb
mov
xchg
mov
out
pop
shlb
arpl
mov
leave
ja
pop
pop
push
or
stos
push
mov
pop
sub
fsubl
stc
out
pop
leave
or
jno
stos
mov
lret
mov
dec
inc
push
mov
jmp
out
enter
mov
inc
xchg
and
repz
int3
jnp
fdivrp
push
pop
jno
pop
cwtl
scas
mov
arpl
mov
push
lock
call
std
lret
jmp
decl
repnz
push
jle
shll
sbb
aaa
in
in
out
pop
cwtl
xor
repz
cmp
push
ss
lret
sbb
push
lock
xchg
mov
xor
test
mov
sbb
adc
lods
inc
test
ja
dec
pop
adcb
mov
or
outsb
and
or
outsb
sub
dec
dec
jns
outsb
adc
and
and
cld
pop
mov
lret
and
xchg
cmpsb
cmc
ret
xchg
pushf
fcmovnbe
pop
add
jo
dec
sub
lds
mov
in
fstps
mov
test
movsl
mov
add
jp
icebp
imul
pushf
nop
in
or
fsave
xor
insb
aaa
mov
dec
testb
cmp
pop
lcall
jae
cmpsb
jle
xchg
stc
xchg
mov
push
repz
insb
sbb
sub
mov
mov
icebp
and
int
pop
lret
incl
int3
inc
out
sub
lods
jo
loop
add
or
loop
jmp
dec
or
xchg
movsb
mov
imul
sbb
sbb
lahf
push
lahf
jbe
inc
mov
sub
das
xchg
xchg
xchg
lea
sbb
pavgb
movsl
push
mov
adc
cmp
push
or
dec
xor
int3
ret
ret
push
push
enter
loopne
or
push
push
bswap
pop
imul
test
and
jb
enter
xchg
lahf
inc
subl
jp
add
sbb
je
xchg
mov
cmc
inc
shl
js
fnstsw
jecxz
cmp
mov
shll
mov
imul
fisubs
outsl
pop
cmpsl
pusha
outsl
loopne
int
cltd
add
cmc
shll
inc
inc
add
aam
test
ret
push
xchg
inc
div
sbb
push
or
insb
ret
mov
pop
ret
sub
lcall
mov
xlat
mov
jl
xor
mov
cmp
dec
fldcw
sbb
jo
divl
adc
mov
and
leave
sti
vminps
cmpsb
movsb
js
ja
push
leave
insb
cmp
inc
aam
inc
scas
inc
and
jp
sub
loop
rorb
push
mov
sub
pop
adc
sbb
addr16
adc
cmp
push
xchg
cmpl
ret
cld
sbb
out
xor
adc
add
push
pop
jge
push
fidivl
or
shrb
lahf
xchg
mul
jecxz
je
cs
cmp
pop
push
jle
adc
ret
notl
xlat
stos
pusha
sbb
jg
out
fdivl
mov
pop
mov
cmp
jg
fs
popa
and
pop
jb
pop
mov
test
fnsave
fcoms
mov
je
xor
aam
adc
xor
jne
stos
sbbl
clc
testb
iret
sbb
inc
push
jns
outsb
lcall
daa
shl
push
push
pop
hlt
lret
mov
and
mov
negl
stos
out
mov
push
pop
rol
sbb
push
add
dec
dec
jl
pop
mov
jecxz
or
pusha
out
stos
stos
mov
add
push
add
adc
cli
fs
push
add
jl
inc
pop
repz
ret
pop
mov
mov
pop
push
sbb
xchg
inc
cmc
cmp
lds
push
xchg
loopne
xor
cmp
jecxz
xchg
inc
sbb
mov
rclb
pushf
xchg
stc
insb
mov
test
mov
in
rcrl
or
lret
sbbb
ds
ss
sahf
mov
js
scas
cltd
and
mov
int3
movsb
loopne
repnz
sbb
xchg
push
scas
mov
popf
xchg
rclb
ljmp
jmp
sbb
cmp
std
or
jmp
add
pushf
inc
enter
pop
or
div
push
ret
test
inc
test
adc
jae
mov
or
sub
inc
stos
lock
cmp
cmp
pop
lock
sub
enter
and
stc
out
shll
shl
das
movsl
mov
mov
cmp
cmp
bound
adc
fstpl
popf
add
flds
xor
cmp
or
sub
push
or
loopne
cmp
add
gs
pop
xchg
push
jno
push
or
sbb
or
mov
daa
lea
in
addl
sub
rclb
xchg
dec
rcrl
push
mov
pushl
loopne
dec
ljmp
xor
mov
fdiv
jge
adc
add
mov
jl
mov
add
sbb
pop
jo
push
sarb
mov
popf
and
fdivr
add
out
pusha
cwtl
adc
ljmp
mov
mov
std
lods
xchg
pop
dec
dec
test
in
leave
movsb
xchg
mov
inc
and
add
mov
subb
push
or
jb
in
repnz
jo
lcall
into
sub
adc
adc
sub
cmc
lret
dec
bound
into
cmp
test
test
andb
sub
jne
add
dec
dec
pop
or
push
cli
and
popf
xor
pushl
mov
pop
xchg
mov
lods
faddl
jnp
lcall
mov
jge
fldenv
scas
rcrl
fstps
push
cmp
mov
push
aaa
pop
mov
pushl
fadds
pop
jns
scas
push
lret
repz
mov
fwait
ss
inc
movsb
or
arpl
cmc
dec
xchg
and
shlb
iret
pop
pop
fbld
mov
out
jl
mov
into
loope
sarl
jmp
xorl
popa
add
pop
movsl
jae
or
gs
jo
xor
out
cmp
or
fstpt
cmp
xor
xor
pop
popf
lock
popf
pop
hlt
rclb
fists
adc
jne
stos
inc
mov
add
icebp
fistl
cmp
mov
sbb
mov
push
jp
std
fsts
in
es
push
sub
loopne
push
cmpsl
in
push
imul
notb
mov
mov
jnp
sub
xor
out
lret
loope
stos
sub
cs
xchg
lock
mov
hlt
es
xor
pop
rcrb
out
pop
mov
shl
int
cmp
lahf
cmp
or
mov
sub
xor
cmpsb
and
orl
pop
mov
pop
sahf
xchg
inc
gs
push
aas
inc
jne
rorw
inc
nop
fdivp
mov
mov
cmp
lods
xor
daa
and
push
ds
iret
setg
nop
popa
xor
out
adc
dec
mov
sbb
outsb
nop
fbstp
scas
sub
nop
shlb
mov
mov
shlb
cmp
xchg
icebp
mov
ret
cmp
sarl
cs
inc
cli
mov
cmp
adc
pop
inc
push
jb
jp
aam
jno
jg
dec
xor
jecxz
adc
sub
push
add
fstpl
scas
sub
sub
mov
inc
fdivrl
push
push
jbe
pop
shll
push
cli
sub
or
fwait
jge
stos
or
mov
bndldx
insl
dec
xchg
adc
out
int3
outsl
push
loop
sub
pop
clc
shll
stc
xchg
cs
cmc
lret
ja
rorl
das
jbe
movsl
dec
jmp
shll
xchg
lea
in
loop
hlt
jmp
ret
sar
sub
push
mov
jmp
insl
dec
mov
aas
add
mov
jecxz
inc
dec
xchg
inc
adc
jno
adc
add
faddl
and
inc
lds
cmp
loopne
mov
sub
addr16
leave
push
leave
pop
test
mov
push
or
jnp
xchg
push
dec
outsl
sbb
repnz
pop
pop
pusha
int3
test
or
xor
lret
mov
push
add
imul
add
lcall
inc
add
mov
xchg
push
xor
hlt
push
xor
push
mov
inc
mov
mov
popf
cli
fiaddl
in
adc
xor
lahf
adc
and
jg
movsb
inc
repnz
lock
ret
lods
sbb
outsb
imul
sbb
jp
add
outsl
mov
lahf
or
rcl
inc
loope
into
jge
pop
sbb
mov
and
lret
mov
xchg
jl
sub
mov
inc
push
orl
or
mov
inc
cmc
push
sub
mov
inc
lods
pusha
inc
adc
jecxz
je
push
enter
outsl
arpl
movb
imull
jge
pextrw
sbb
and
jnp
jle
sbb
scas
push
ss
popa
inc
call
inc
xchg
popf
test
repz
inc
add
test
out
mov
movsb
or
vmaskmovdqu
jmp
add
outsb
scas
sbb
in
rolb
int3
sbb
cmpsb
mov
push
lret
lret
push
sarb
cmp
stc
add
jmp
sahf
fidivs
fstpt
adc
sub
aaa
ret
xchg
inc
add
jl
testb
inc
dec
les
mov
pusha
xchg
jge
out
jae
and
cli
cmp
push
pusha
sahf
aas
and
push
js
xchg
popf
js
cwtl
fstp
out
mov
ds
push
inc
int3
jno
jbe
dec
pop
aam
add
lret
cs
xchg
sbb
mov
js
pop
dec
pop
ljmp
or
mov
dec
jbe
sbb
cmp
sbb
adc
pop
jmp
gs
and
test
push
dec
mov
push
lods
into
in
in
adc
xor
push
fs
dec
or
sub
mov
pusha
mov
inc
fldt
ficoms
jmp
sbb
jno
inc
sbb
in
int3
push
cmp
dec
and
inc
js
repz
sub
js
xlat
sbb
jg
aas
xchg
popa
icebp
mov
inc
shlb
outsl
fisttpl
test
inc
fs
fdivr
call
test
and
mov
pop
xchg
push
mov
sub
add
and
pop
insl
dec
imul
je
push
iret
ja
or
and
pop
dec
or
cwtl
aam
push
sub
lods
sub
fnstsw
int3
push
dec
cmp
jbe
inc
and
ljmp
insl
test
mov
ljmp
in
popf
dec
pop
inc
push
loop
push
mov
jp
adc
sub
dec
pop
jge
es
fwait
bound
push
inc
enter
cmpsl
mov
xor
cmpsb
movsb
or
jge
gs
mov
test
push
sbb
rorb
int3
sbb
enter
ljmp
adc
mov
xchg
and
jno
shrb
fsubl
outsb
mov
adc
daa
cmp
aad
and
adc
aas
push
test
je
insl
mov
testl
outsb
lea
and
clc
andl
mov
sahf
push
movsb
test
dec
xor
movsl
xchg
sub
insb
cmp
sub
pop
dec
sub
ret
cmp
and
xor
ljmp
sarb
jo
add
xor
fwait
inc
mov
icebp
test
or
aad
insb
pop
and
inc
jg
loop
mov
loop
ljmp
nop
das
jp
xlat
fwait
dec
mov
xchg
cmp
cli
xor
jle
sbb
fmul
cmp
sbb
cmpsl
cmp
or
adc
ljmp
jle
mov
and
std
sub
push
and
cmpsb
cmp
adc
mov
or
out
sbb
shl
add
loopne
push
gs
xor
mov
dec
sbb
or
arpl
push
mov
ret
pushf
jae
ret
gs
popa
xchg
pop
fwait
lahf
sbb
mov
sbb
adc
dec
repnz
sahf
jmp
sub
loope
mov
inc
data16
cmp
push
xchg
xchg
in
mov
movups
cmpsl
ficompl
stos
cli
jne
push
data16
scas
data16
xorb
jns
std
and
cmp
mov
add
out
pop
out
inc
scas
dec
aad
and
mov
cmp
inc
shlb
test
jecxz
lret
pop
sbb
pop
push
pop
dec
sahf
mov
and
and
lret
rcrb
mov
add
sub
or
aaa
jnp
mov
lock
jnp
adc
or
and
mov
popa
aam
xchg
cli
pop
and
addr16
lret
xor
es
loopne
call
rorl
addb
pop
test
jno
std
xchg
pop
cmpsb
ss
dec
loopne
insl
sbb
cmp
add
aam
scas
aaa
cltd
pop
dec
inc
je
scas
mov
subb
out
pop
fldt
je
in
or
clc
xchg
xor
ret
stos
int3
ficomps
inc
cmp
adc
clc
cmp
pop
mov
dec
or
icebp
dec
adc
mov
xchg
frstor
pop
mov
xchg
jbe
and
or
and
pop
and
clc
and
pop
mov
mov
jle
xchg
pop
lea
aaa
jp
test
subl
mov
shlb
add
fdivrl
add
lret
push
jl
cmp
or
shll
les
cmpsb
in
mov
add
pop
aas
enter
jg
mov
adcb
xchg
ror
bound
mov
test
imul
pop
mov
cmpsb
loop
es
adc
call
into
jne
imull
sar
sahf
mov
inc
movb
mov
mov
fdivr
into
aam
push
out
ret
ficoml
out
fincstp
adc
mov
adc
pop
nop
addr16
jge
popa
jnp
push
in
cmp
xorb
pop
nop
push
xchg
xor
adc
dec
mov
adc
mov
sbb
popa
pop
cmpsl
scas
cmp
push
cmpsl
dec
mov
xlat
lea
jae
add
loopne
dec
insl
sub
xor
jecxz
imul
xor
push
fidivrl
int3
arpl
mov
push
push
addr16
sbb
std
ret
fstl
mov
mov
stos
mov
je
jecxz
mov
add
mov
dec
sbbl
es
ffreep
scas
shl
mov
dec
nop
mov
mov
and
popf
sbb
js
pop
cmc
arpl
sahf
aaa
sub
add
adc
aas
cmova
push
cmpsb
xlat
loope
jle
in
out
push
sti
mov
int
jp
les
pop
jbe
xchg
pop
aad
push
xchg
daa
lods
nop
push
dec
stc
sbb
cmp
push
push
imul
add
dec
mov
das
ss
adc
jb
cmc
pop
jge
clc
adc
cmp
idiv
inc
hlt
inc
mov
jne
cmc
icebp
je
push
push
mov
add
aad
jb
xor
xlat
cmp
inc
es
inc
sti
lods
loopne
bound
orb
and
stos
sti
sbb
loope
sbb
jge
xor
popf
dec
jbe
pop
mov
sub
leave
loop
xchg
add
fcmove
jg
aad
cltd
stc
cld
int3
inc
hlt
imul
push
jg
clc
pushf
sbb
mov
lock
pusha
fisttpl
daa
push
pop
mov
jo
pop
xor
dec
les
jno
in
push
inc
pop
es
fcoms
dec
in
xchg
add
cmp
scas
xor
add
sbb
cmp
xchg
jbe
inc
xchg
adc
jmp
cmp
fmuls
mov
sahf
nop
mov
xchg
and
int3
jnp
add
mov
popf
aaa
cmp
mov
mov
scas
test
push
sub
pop
inc
sub
lea
scas
fistps
xor
push
cld
icebp
aad
pop
pop
imul
push
push
dec
imul
imul
mov
add
sub
nop
out
pop
out
push
adc
call
movsl
test
sub
mov
xchg
inc
add
call
lahf
add
dec
adc
cmp
xor
jle
test
jno
arpl
lea
ds
in
fistpl
icebp
aas
pop
mov
push
inc
cmp
aaa
hlt
xchg
cmpb
scas
jmp
popa
cmp
sti
jge
std
mov
push
mov
ljmp
int
sub
mov
push
sbb
loop
rol
sub
inc
lcall
mov
insl
push
leave
stc
pusha
aad
cwtl
lcall
ljmp
ficompl
jo
mov
bound
mov
pop
sti
xchg
jmp
in
and
push
cmp
push
or
scas
cmp
lahf
ret
cmp
adc
dec
fistpll
lods
or
push
mov
ja
ss
adc
imul
rorl
mov
lods
aam
push
pop
sbb
out
scas
and
int3
pop
mov
xchg
out
fcoms
insb
mov
test
jge
imul
out
mov
and
jmp
icebp
stos
jbe
add
pop
jae
dec
movsb
in
xchg
jp
or
mov
mov
push
lea
push
mov
movsb
push
insl
ss
dec
jge
pop
xchg
movsb
in
mov
push
jp
pop
lret
lcall
pop
hlt
stos
pushf
sbb
pop
and
js
xor
add
outsb
xchg
fcoml
adc
outsl
sub
clc
lods
mov
or
std
cmp
lods
mov
and
lcall
dec
jno
and
mov
xor
nop
mov
ja
lods
push
iret
lret
leave
js
mov
jne
sbb
loop
and
stc
mov
and
jae
and
stos
les
imul
sarl
imul
push
addr16
inc
cwtl
loop
jle
test
fdivl
mov
arpl
arpl
enter
filds
mov
and
pop
shrb
mov
add
fdivl
ljmp
xchg
cmpsl
mov
lock
daa
roll
add
pop
adc
das
lahf
xchg
das
and
pop
bound
lods
pop
xchg
pop
mov
xlat
add
cld
jb
push
push
adc
enter
push
push
or
sar
test
push
ss
lcall
mov
jno
ds
cmp
cwtl
sub
adc
rcrb
pushf
in
out
xchg
les
lret
stc
fiaddl
push
sub
testb
lds
dec
adc
sbb
push
push
rcrl
mov
aas
in
and
dec
movb
add
outsl
xchg
mov
adc
fisubl
sub
jbe
xor
sbb
out
pop
add
mov
sub
sti
pushf
in
sbb
adc
fs
leave
scas
sub
and
lods
push
or
icebp
jecxz
out
fimuls
imul
sbb
sbb
and
jno
fcmovnb
stc
jnp
cmp
jg
scas
rolb
fdivrl
cs
test
sub
scas
or
les
adc
inc
cmp
pop
es
push
xor
mov
into
call
xchg
fcom
jg
and
push
cld
adc
sti
jns
add
orl
fldcw
or
cmp
xchg
arpl
cwtl
popa
push
popf
xchg
push
jp
dec
sbb
aad
jmp
pop
arpl
dec
cmpb
out
scas
jmp
stos
and
arpl
imul
in
mov
loop
mov
test
mov
adc
pop
mov
dec
sahf
sahf
movsb
enter
pusha
loope
mov
jmp
xchg
in
mov
outsb
xchg
hlt
pusha
gs
inc
xor
and
enter
inc
mov
xchg
jnp
mov
repz
ljmp
out
std
jns
cmp
pop
mov
lret
mov
enter
lods
mov
pop
in
push
test
add
push
push
mov
jo
aas
sub
pop
push
subl
inc
shrl
cmp
ljmp
lds
lea
or
mov
mov
pop
cmc
leave
pushf
jb
movsl
mov
dec
mulb
inc
mov
inc
cmpsb
jbe
jecxz
mov
jns
enter
mov
push
sub
es
aas
or
movsb
aam
sbb
int
add
xlat
mov
dec
loop
ret
leave
stos
and
pop
ds
dec
andl
xchg
setge
sub
scas
inc
fisttpll
adc
imul
ret
cmp
inc
repz
cltd
nop
insb
ret
in
inc
xor
adc
call
in
jns
ret
sbb
mov
pop
inc
adc
inc
ja
mov
cli
sbb
pop
hlt
test
scas
mov
in
xorl
daa
sbb
mov
fwait
lods
std
xor
sub
pop
jge
loopne
lret
stc
mov
and
shr
hlt
test
inc
pop
adc
bound
inc
jg
and
inc
pop
add
mov
jmp
inc
test
dec
subl
cs
mov
lahf
jo
and
add
dec
incb
cmpsb
sbb
add
leave
jno
shrb
lret
cmp
pop
pop
jb
inc
ret
xor
and
jmp
lret
push
fbld
inc
push
or
mov
sub
mov
test
arpl
roll
jne
outsl
sub
sbb
data16
or
cli
rcl
icebp
mov
ss
lds
mov
aam
add
push
roll
mov
adc
pushf
sbb
arpl
je
adc
lret
dec
dec
in
dec
lahf
dec
sbb
addb
cmp
jle
pop
inc
aas
dec
clc
test
test
nop
jnp
out
clc
xchg
imul
add
push
andl
cs
std
das
stos
push
add
jle
fdivl
fwait
aad
ja
cltd
mov
test
insl
test
cs
rcrl
jae
repz
and
je
cmp
dec
lock
test
into
sub
ss
jne
mov
int
popa
pop
pusha
pushf
push
je
cli
push
test
pop
jae
das
aas
sbb
lahf
cltd
in
adc
inc
jle
jbe
out
pop
and
hlt
inc
sub
jg
stos
out
inc
jne
jg
mov
jle
pushf
lods
and
pop
sub
push
inc
mulb
and
push
test
inc
in
bswap
out
jg
cmpsl
ljmp
cli
sbbl
xor
mov
nop
aad
sbb
dec
pop
inc
aaa
fld
add
adc
fsubl
imul
cmp
mov
out
xchg
inc
fnstcw
mov
cmc
add
pop
xchg
inc
or
mov
xchg
stos
inc
pushw
insb
jae
nopl
aas
aas
test
pop
xor
lcall
sbb
int3
daa
jnp
ja
mov
dec
popa
das
bswap
push
push
leave
mov
inc
mov
ja
mov
jg
popa
movsl
jg
push
in
add
call
out
push
xor
dec
hlt
cmp
rcll
sti
mov
sbb
repnz
aaa
ja
outsb
mov
mov
mov
enter
shrl
add
in
add
pop
movsl
sar
xlat
movsl
xchg
mov
addr16
dec
mov
fcomps
mov
aam
ds
sub
loopne
xor
jmp
in
adc
ficompl
mov
stos
mov
push
lock
dec
pop
aad
pop
nop
ret
push
mov
in
neg
pushf
sub
lret
out
cwtl
jbe
add
hlt
aas
std
aas
dec
adc
es
add
cli
out
nop
inc
inc
dec
movsb
jo
lds
dec
mov
mov
push
dec
cmp
inc
or
aam
aad
lods
inc
push
addr16
xor
or
jmp
es
fldcw
in
adc
lods
test
iret
mov
popl
lret
sbbl
sub
xchg
dec
nop
mov
ljmp
lock
ret
push
xor
mov
in
mov
fdiv
sbb
xlat
call
add
mov
add
sti
aas
and
dec
xchg
mov
sbb
mov
incl
clc
sub
jmp
cs
and
stc
cmp
fistps
fiadds
aaa
loop
cmp
ja
xchg
push
fcmovnu
fwait
lods
lods
cmp
clc
test
dec
test
sub
addps
and
xchg
aad
lds
stos
rcll
sbb
fnsave
mov
cmp
movsl
mov
cltd
enter
pop
sbb
das
jl
add
xor
cmp
mov
dec
and
mov
std
mov
dec
pusha
flds
lods
fidivrs
jl
cltd
sub
mov
dec
or
cmp
cs
jmp
call
std
and
sbb
mov
jnp
shl
push
xor
icebp
mov
add
in
push
push
jle
xorb
sbb
jge
jae
adc
sbb
cmp
jnp
out
mov
xchg
rorl
in
jnp
outsb
cmp
frstpm(287
cwtl
xlat
xchg
xor
outsb
insl
loope
ds
fisttpl
mov
sub
sbb
insl
inc
push
mov
xchg
inc
in
clc
mov
mov
push
jmp
mov
push
jge
mov
mov
cwtl
mov
mov
jo
adcb
dec
lods
pop
ja
xchg
sahf
test
or
mov
lods
mov
mov
addl
dec
jp
loop
xchg
adc
fdivrs
fbstp
or
sub
push
dec
mov
adc
sub
pop
call
lock
mov
sbb
jg
mov
inc
push
jmp
scas
fildl
scas
pop
add
sbb
cltd
ret
sahf
dec
fwait
and
into
jnp
int3
fnstcw
aam
scas
frstpm(287
jns
and
lret
mov
movb
mov
xchg
ret
popf
les
jae
jp,pt
lcall
rorl
pushf
push
pushw
ret
repz
xor
mov
pop
adc
xchg
pop
pop
popl
adc
mov
stos
dec
outsb
pushl
jge
xchg
pushf
jge
js
mov
pushf
inc
cld
aad
mov
jge
pop
mov
jnp
xchg
xchg
inc
jg
decb
mov
sahf
lahf
mov
stc
sahf
jo
mov
outsb
pushf
lods
mov
lods
dec
dec
outsb
jbe
sub
jge
adc
sarl
add
in
xchg
jl
add
daa
mov
and
jbe
loopne
cmc
adc
lock
inc
int
dec
or
sub
push
inc
ds
inc
outsb
push
jo
dec
imull
mov
xorb
jae
sbb
outsl
and
sbb
int3
xor
arpl
add
sahf
pushf
lcall
push
enter
adc
dec
popa
mov
xchg
add
jge
mov
fdivrs
dec
dec
jmp
cmpsb
or
gs
push
xchg
fnstenv
ja
push
add
js
pop
aas
xor
and
jo
bound
push
jnp
setbe
pop
cs
mov
bound
dec
in
sbb
ss
mov
jmp
pop
pushl
jnp
clc
insb
in
xchg
pshufw
or
int3
pop
ljmp
outsb
pusha
loopne
jge
fldl
lret
mov
xchg
adc
test
clc
das
inc
jmp
sub
out
sbb
adc
rcrb
mov
mov
jno
jnp
or
sbb
cs
xchg
and
jne
xor
lock
cmp
loop
xor
enter
bound
dec
out
imul
lahf
cmpsl
outsb
mov
dec
or
mov
mov
fnsetpm(287
push
repz
xor
sub
pop
int3
jg
inc
pop
icebp
ss
xchg
jb
xor
jge
cltd
xchg
xor
out
cmp
pop
push
push
inc
dec
add
outsl
pop
push
test
jo
in
jbe
ffreep
sub
adc
push
mov
add
test
pop
pop
jmp
lock
cmp
mov
cmp
mov
cwtl
push
sbb
stos
xor
sub
pop
or
inc
lahf
xlat
frstor
addr16
inc
sarb
inc
shl
pop
sub
outsb
add
fs
pop
pop
loope
loopne
lods
cmpsl
add
lret
xchg
xor
pop
and
lret
mov
aad
push
jne
mov
cmp
cwtl
nop
repnz
mov
test
inc
cli
leave
xchg
fdivrs
jg
or
shrl
xor
inc
xchg
shll
fwait
push
movsl
fldpi
rol
stos
pause
pop
xor
popa
xchg
add
adc
jb
pop
and
in
fdiv
jl
lds
cwtl
out
rcll
sbb
cmp
push
dec
inc
imul
ret
mov
cmp
xor
das
aam
js
mov
sahf
adc
pop
movsl
ret
call
push
nop
cmpsb
adc
pop
mov
sahf
jmp
fldcw
sub
out
mov
xor
sbb
cwtl
push
mov
mov
daa
adc
mov
jno
mov
sub
sti
xchg
dec
movsb
icebp
pop
xor
mov
add
cmp
or
pop
fwait
sub
dec
popa
adc
xchg
xor
pop
push
xchg
decl
xchg
and
out
mov
je
popa
add
inc
in
or
adc
ret
sub
idiv
inc
cmpsb
rclb
push
inc
or
scas
adc
out
ja
imul
jmp
jns
pop
stos
sbb
lods
mov
mov
ficoml
fnstenv
inc
jmp
xchg
les
pop
stos
fs
movsl
add
push
cmp
xchg
call
push
pop
jp
dec
mov
mov
call
dec
fildll
dec
lods
lock
movnti
xchg
and
xor
fimull
sti
cmp
cmp
push
aad
into
mov
dec
pop
ljmp
movsl
mov
pop
shrb
dec
push
add
xchg
int3
jne
ja
or
sbb
fimull
hlt
sub
and
bound
fildl
dec
mov
mov
sub
jae
cmp
mov
mov
sbb
jns
cmp
imul
imul
shrl
clc
lock
in
ficoms
icebp
pop
sub
aas
pop
repz
mov
sub
fucomp
hlt
out
inc
popf
ret
stos
mov
xlat
dec
faddp
loopne
fadd
ja
lret
sub
dec
dec
sub
push
xchg
lea
ficoms
jmp
dec
mov
sar
mov
gs
out
sbb
out
imul
and
jg
add
adc
xor
aam
jg
and
into
fldl
mov
lea
sti
add
xchg
xchg
adc
dec
adc
xlat
inc
push
xlat
or
mov
xchg
scas
repnz
gs
dec
std
into
popa
cmp
dec
fnsave
scas
fsubr
insb
cmp
and
pop
sub
out
insl
push
pcmpeqw
int
int
inc
and
cmc
dec
or
in
add
aaa
xor
xchg
mov
push
add
rol
inc
arpl
daa
insb
out
test
movsl
adc
mov
call
rcrb
fisttps
cltd
loop
adc
or
xor
sub
cs
dec
adc
ret
mov
pop
pop
test
repz
lahf
mov
dec
sub
jae
and
xchg
stos
inc
sub
test
mov
data16
jle
pushf
xchg
or
jbe
jp
add
xor
loope
test
xor
cmc
es
sbb
fnsave
lcall
insl
outsl
mov
sti
fwait
in
popa
das
cmp
aam
out
or
xchg
addr16
int3
jns
cwtl
cmp
xchg
std
cltd
or
xor
mov
sub
fstpt
jbe
cli
sbb
fisttps
xlat
enter
cmp
enter
adc
lock
icebp
pushf
sub
dec
add
add
lods
pop
add
push
cmc
mov
iret
sbb
iret
mov
adc
push
mov
cld
in
sti
jl
pop
imul
mov
and
dec
lret
or
inc
jle
sti
cmp
loop
in
xor
lea
mov
sub
addr16
sub
lahf
scas
fadds
aam
dec
icebp
outsl
out
pop
dec
aam
int
int
test
mov
scas
inc
imul
and
cmp
roll
mov
subl
pop
inc
add
mov
dec
mov
scas
and
lea
ds
xor
adc
shll
ja
std
jne
sbb
push
lcall
mul
mov
pop
ficompl
rcll
lea
andb
sub
icebp
pop
dec
cwtl
enter
pop
nop
mov
sub
mov
mov
dec
ds
shl
movsb
js
sub
ja
iret
aad
not
mov
rcll
cmp
outsl
nop
les
mov
outsl
sahf
xor
repnz
and
or
out
mov
push
sbb
shlb
out
dec
mov
sarb
test
out
es
sub
sarb
xchg
daa
popf
or
dec
icebp
subl
loop
sbb
dec
and
push
aas
or
push
inc
mov
out
sahf
ret
inc
mov
enter
sbb
pop
cltd
inc
imul
pusha
aaa
or
jb
movsb
inc
push
les
cmpsb
mov
les
or
xor
add
cltd
sbb
adc
jb
test
cmp
fwait
mov
fists
mov
push
and
les
iret
dec
movsl
test
xor
cs
jns
xchg
pop
cmp
into
int
jl
adc
repz
sub
cmpsl
repz
or
pop
fxch
sarb
cmc
arpl
lds
insb
and
mov
xor
inc
jns
inc
sbb
jne
mov
fcomps
pushf
push
xchg
rcl
add
xor
sub
or
push
or
cs
jg
xchg
and
into
jle
insb
jge
push
outsl
ret
lock
mov
mov
jo
mov
fisubs
test
sub
in
daa
in
adc
sar
data16
fisubrl
inc
adc
lods
movsb
movl
std
stos
add
jns
cmp
fisubl
dec
insl
in
mov
xchg
test
inc
mov
xor
movhps
mov
mov
hlt
lcall
and
xorl
cmp
add
inc
mov
inc
add
fdivp
or
mov
inc
mov
cmp
mov
jne
xchg
andl
ds
xor
std
outsl
or
xor
push
mov
cmp
pop
xor
sub
pop
xchg
xchg
push
jnp
mov
or
push
clc
xchg
push
mov
loop
lcall
in
popa
jl
push
fstl
cmp
sub
add
sbb
pusha
xchg
iret
std
xor
loopne
xchg
dec
dec
cmpsb
fstpl
add
in
in
and
int3
fiadds
bswap
pop
adc
ja
repnz
cltd
icebp
sbb
push
add
rcrl
add
or
mov
xor
add
push
cmp
jae
inc
stos
mov
shrl
cmp
arpl
pusha
loop
mov
xor
jo
mov
loope
pop
inc
imul
aas
and
ds
fnsave
inc
nop
int3
jecxz
popf
in
dec
jb
rorb
jbe
ljmp
pop
ret
adc
scas
cmp
mov
cmpsb
nop
xchg
dec
lcall
lock
cmp
leave
rorl
inc
loop
or
mov
outsl
push
iret
ret
inc
icebp
lret
mov
mov
bound
pop
sub
xor
jmp
popa
add
xchg
sbb
adc
cmpsb
or
xchg
test
jecxz
xor
push
lcall
or
push
inc
add
insl
cmp
pop
xchg
jb
jno
push
jp
ja
sbb
adc
loope
push
mov
fstps
pop
sub
push
dec
clc
in
es
jle
dec
cltd
shrl
mov
insl
cld
sub
add
pop
dec
icebp
inc
cmc
xchg
and
or
out
xchg
outsl
std
mov
test
lods
jge
xor
cwtl
xchg
or
pop
xor
jge,pn
cmpsl
lds
adc
jge
jge
add
mov
loopne
xchg
cld
dec
cli
pop
or
mov
roll
jns
out
rcl
int3
enter
jecxz
cld
xor
sahf
dec
lret
out
insb
dec
pop
js
and
jg
insl
xor
xor
jl
fcoml
xchg
and
clc
jp
rorb
cmpb
and
int
inc
sub
sub
scas
jp
pushf
jmp
add
and
lds
popf
inc
xchg
pop
fdivrl
jo
pop
xchg
jbe
dec
xor
cmpsl
loopne
mov
mov
xchg
mov
lcall
jp,pn
sub
das
push
push
mov
movsb
pop
or
movsb
call
jne
sbb
mov
ss
mov
fs
pop
pushl
xchg
lods
addr16
inc
add
mov
dec
push
jo
dec
addb
and
add
scas
jge
xor
cmp
fsubs
mov
movl
sub
sub
cmc
arpl
popa
dec
nop
leave
sahf
aad
and
shl
push
and
ds
pop
jmp
or
inc
cmc
sbb
or
mov
pop
xorb
mov
shl
xchg
aas
ja
pop
mov
jb
repnz
adc
in
enter
cli
imul
jge
rolb
inc
mov
std
js
je
or
pop
movsb
or
arpl
or
push
test
dec
add
dec
xor
mov
pop
push
pushf
add
or
in
insl
and
frstor
lahf
push
shll
push
stc
cmp
lahf
iret
push
into
mov
mov
sub
addr16
incl
ret
nopl
std
ds
fcomps
mov
or
int
call
jns
ds
push
sahf
lahf
in
ds
xor
pop
orl
gs
shll
repnz
scas
shll
inc
mov
xor
cli
nop
shr
hlt
lret
add
scas
jmp
push
test
fdivrp
add
mov
ljmp
add
aam
outsl
pop
push
push
mov
push
push
dec
inc
insb
fisttps
or
leave
or
movsb
lret
fldt
dec
aas
pop
pop
add
sbb
pushl
jns
push
imul
adc
outsb
jmp
psubsw
shll
xchg
mov
or
pop
cmc
jg
xorb
sarb
and
cmpsl
adc
enter
and
in
test
dec
adc
cli
xchg
repz
loop
jbe
jno
push
mov
cmpsb
mov
xchg
or
je
adc
imul
test
stos
and
stos
mov
out
dec
repnz
dec
repz
jmp
ss
jns
notb
sbb
xchg
mov
rolb
push
mov
lcall
popf
loopne
inc
stos
inc
jecxz
push
xorb
push
cmpsl
ljmp
jae
dec
cli
in
xchg
jne
cmp
daa
adc
jp
xchg
loop
scas
dec
loop
push
sub
cmp
inc
pusha
mov
call
lret
cmp
fucom
jmp
inc
fwait
dec
and
arpl
xchg
jae
and
shl
xchg
bound
imul
sti
imul
dec
mov
jno
sti
mov
mov
xchg
push
mov
gs
sub
shlb
aaa
sub
cld
pop
dec
nop
imulb
cmpsl
dec
sahf
sbb
and
popf
les
jns
mov
movsb
adc
xchg
imul
xor
mov
pop
aas
in
xchg
inc
les
pop
sbb
adc
andb
sbb
and
outsl
lea
outsl
or
gs
pop
js
inc
and
add
repz
jge
jmp
sbb
out
xor
pop
aam
outsb
add
insl
mov
jg
xchg
lahf
repz
sub
inc
loope
mov
rclb
mov
mov
sub
iret
sbb
xchg
jns
test
ljmp
cmp
push
sub
and
das
adc
cmp
inc
loop
loope
pop
fildl
mov
nop
outsb
fildll
scas
add
movsl
rclb
outsl
adc
insl
subb
cmp
add
addr16
adc
daa
psadbw
jmp
dec
inc
xor
mov
int3
push
push
sub
or
mov
jno
ja
test
cmp
clc
dec
dec
dec
cmp
xorl
js
push
push
mov
mov
dec
pop
and
pusha
test
clc
lcall
in
adc
ja
adcl
sbb
je
out
popf
stc
loopne
jae
mov
cltd
mov
adc
adc
cmp
iret
xchg
and
pop
into
aam
test
pop
pop
inc
push
out
dec
or
pushf
hlt
in
jl
cmpsl
pop
imul
fcmovnb
mov
lds
ret
mov
inc
pop
pop
imul
es
jecxz
lret
inc
add
cltd
mov
subl
in
inc
mov
mov
sub
test
mov
xor
repz
xor
mov
das
roll
mov
shr
pusha
xchg
or
pop
xchg
aad
dec
imul
dec
jns
mov
sbb
sbb
adc
xor
push
in
xor
sub
jl
jmp
and
cli
jmp
rcll
or
inc
sub
mov
popa
and
jecxz
cmp
loop
jbe
dec
fadds
jmp
stos
bound
sbb
mov
mov
insb
jmp
nop
add
adc
cmp
pop
jae
jmp
cvtps2pi
xor
ret
push
stos
and
in
fstpt
push
sbb
outsb
cld
cld
mov
pop
cmp
mov
jp
or
mov
or
enter
repz
pop
mov
xor
sub
test
call
push
ret
and
pusha
mov
inc
sbbb
negl
inc
aam
xchg
inc
xor
dec
cmp
dec
pop
dec
call
or
imulb
or
ljmp
js
je
es
cmp
aam
jnp
mov
jge
jnp
test
sahf
mov
test
lcall
cmp
std
xlat
xor
mov
sub
adc
fwait
shl
cmp
rclb
decb
lods
out
mov
rolb
stos
call
shrl
add
les
outsb
lds
test
into
or
jne
sbb
push
mov
testl
dec
and
or
pop
pop
pop
mov
cmp
or
push
jnp
mov
ja
jne
xchg
fstpl
test
arpl
ljmp
insb
mov
mov
dec
jnp
jmp
call
xchg
fidivrl
pop
insb
loop
scas
jne
stos
push
adc
hlt
xor
jecxz
rolb
mov
nop
out
and
scas
xlat
loopne
sahf
push
pop
iret
gs
xor
xor
jg
inc
dec
les
jb
ljmp
ljmpw
inc
orb
lret
sti
sbb
cmp
stos
lahf
pop
fdiv
fwait
int
lcall
jmp
stc
cld
mov
mov
add
pop
inc
push
ret
mov
mov
xchg
cmpsl
inc
push
test
std
and
mov
mov
lcall
adc
add
xchg
dec
adc
das
pushf
lea
sti
cltd
loopne
icebp
xchg
adc
xor
and
das
aas
cwtl
xchg
in
dec
and
bound
cmp
cmp
mov
cmp
stc
notb
mov
xorl
sti
movsb
fistl
add
jne
pop
imul
adc
mov
push
jmp
in
mov
pop
mov
cli
cmp
add
insl
lret
imul
xchg
add
and
jne
mov
movsl
cmpsb
push
push
mov
xchg
lds
addr16
lods
xor
enter
or
inc
outsb
add
xor
adc
mov
push
mov
jo
out
leave
add
cmp
jbe
pop
sub
pop
inc
inc
sub
jae
test
dec
addr16
bound
add
xchg
lcall
fldl
rorb
scas
std
hlt
popa
out
fs
leave
inc
push
mov
cmp
sahf
cmp
lret
sbb
lret
or
sbb
jmp
call
xor
jmp
jne
in
aaa
sbb
movsb
xchg
sub
out
inc
ret
cld
outsb
out
jge
sahf
testb
dec
jno
inc
push
mov
imul
add
int3
js
into
and
inc
push
mov
xchg
add
cmp
mov
pop
shr
xlat
push
dec
cmpsl
pusha
enter
push
stos
loopne
adc
cmpsb
aad
xchg
push
jbe
mov
loope
std
or
push
out
lods
negl
mov
push
mov
out
add
inc
pop
int
and
or
nop
scas
cmp
inc
push
fbstp
jbe
cmc
and
and
jl
add
mov
imul
and
inc
mov
imul
dec
cs
dec
es
jo
push
xchg
jns
cmp
or
inc
or
data16
xchg
push
aad
in
xchg
sarb
xchg
lods
mov
int3
hlt
sbb
je
int
shrb
mov
and
ss
mov
pop
ror
enter
out
into
lea
add
dec
and
jbe
shrb
and
adc
fwait
sarb
out
dec
adc
and
or
lret
movlps
dec
pop
in
xchg
jecxz
push
adc
push
mov
hlt
out
sbb
test
aad
xor
xlat
fimull
shr
flds
sub
inc
mov
pmovmskb
push
fadd
fs
cmc
push
or
in
daa
mov
inc
cmp
inc
aaa
hlt
stc
sarb
imul
fadds
in
and
xorl
sub
cmp
mov
js
shlb
shrl
ss
xor
andl
sbb
inc
ja
add
adc
adc
mov
ret
aas
movsb
test
adc
lret
mov
insb
and
cmp
rcl
mov
push
push
and
xchg
jno
ds
xchg
mov
xor
lret
imulb
and
mov
xchg
fmuls
aas
pop
inc
insl
push
mov
movsb
stos
into
mov
inc
scas
imul
ljmp
pop
push
lcall
mov
icebp
je
and
outsl
sub
xchg
add
daa
mov
in
movsb
adc
xchg
and
sub
xor
lea
xor
add
jne
sbb
push
mov
and
add
or
fisttpl
sbb
sti
ret
out
inc
pusha
jb
mov
pop
ja
mov
sub
mov
cmc
loopne
in
stos
test
rcrb
xchg
sub
xlat
loopne
jns
xor
dec
lock
pop
mov
jmp
mov
rcrl
cmpb
xchg
fdivrs
mov
adc
mov
imul
jp
cmp
fnsave
fs
int
jns
loopne
testl
data16
adc
xor
mov
mov
dec
mov
xchg
andb
shr
pop
or
fs
and
mov
ja
or
into
enter
leave
jno
popf
adc
lcall
sub
cmp
jg
jge
fimuls
fisubl
sub
push
or
dec
add
mov
pop
mov
out
test
push
imul
sbb
mov
daa
loopne
adc
jl
sub
pop
inc
in
and
or
pushf
or
mov
jne
push
mov
cmpl
pop
cmp
fldcw
outsl
lcall
mov
mov
nop
daa
inc
in
jb
and
outsb
inc
xchg
ljmp
xor
mul
cmp
fs
mov
test
pop
and
clc
sbb
repz
lret
gs
xor
push
mov
sub
int3
rcrb
push
xor
adc
sub
loopne
cmp
inc
or
push
sub
sti
mov
addl
into
sub
arpl
flds
pop
pusha
xchg
repnz
call
cli
test
cmp
add
pop
adc
imul
in
inc
sub
jmp
insl
stos
icebp
icebp
lahf
ds
sub
push
fs
push
addl
clc
test
cmp
es
out
add
jae
pop
fistl
lods
dec
adc
xchg
mov
push
je
lcall
loopne
rol
adc
inc
test
ja
shl
mov
inc
xlat
jp
xchg
cmp
and
xchg
dec
adc
fadds
cmp
sub
fists
jmp
mov
movsl
lock
jae
mov
mov
scas
or
sub
mov
popf
or
cmp
js
cmc
testl
sub
push
aad
and
sub
push
mov
sahf
cmp
pop
sub
js
setns
sahf
into
cmpsl
inc
addr16
loop
ror
pop
push
dec
frstor
js
lods
dec
adc
sbbl
inc
and
ja
out
enter
lock
jns
inc
divl
and
out
xchg
xchg
jae
push
and
sbb
or
cmp
int
pop
call
sbb
std
repz
pop
mov
insl
pusha
inc
xchg
xor
mov
pushf
addr16
jp
add
int
lahf
out
mov
mov
cmp
add
imul
into
push
push
jbe
fs
cmp
mov
or
scas
mulb
pop
mov
mov
push
loope
subb
xor
adc
mov
hlt
aad
inc
lahf
and
roll
xchg
xor
mov
stos
xchg
or
dec
xor
jae
pop
andl
cmpsb
stos
ret
mov
leave
hlt
je
lcall
push
dec
int3
xchg
bsf
idiv
hlt
cli
aam
jmp
je
mov
xor
mov
lret
push
jl
mov
cmp
arpl
stos
cmp
outsb
pop
mov
hlt
movsl
mov
jp
mov
aas
pop
adc
iret
mov
push
mov
cs
xor
cwtl
dec
shll
inc
mov
sub
ja
es
sub
sub
wbinvd
dec
in
mov
das
or
pop
dec
insb
mov
pop
or
and
mov
scas
mov
inc
adc
mov
mov
stos
stc
pop
hlt
outsl
das
mov
aad
int3
clc
xchg
pop
cwtl
xchg
inc
lea
mov
popf
push
movsb
jb
leave
bound
jmp
sub
push
cmp
or
faddl
xchg
and
or
in
jnp
sti
addr16
movsb
sub
int3
xchg
jge
push
push
dec
pop
push
jl
lahf
rclb
cltd
xchg
sub
add
lds
xchg
cmp
fiaddl
outsl
dec
push
lret
stos
xchg
cpuid
fstl
ss
sub
or
push
out
pop
or
add
int
call
dec
mov
out
add
push
sarl
mov
loopne
leave
mov
add
div
mov
test
push
xchg
lret
mov
rclb
and
dec
ds
clc
sbb
xchg
inc
xor
push
jb
test
movsl
fxch
adc
fildll
fmul
inc
jns
shl
fcmove
cmp
mov
dec
pushf
es
out
xor
xchg
cmc
and
jnp
lret
mov
fidivrs
inc
pop
lcall
negl
inc
mov
rclb
xchg
out
es
lcall
repz
push
xchg
sub
push
dec
mov
ljmp
sti
mov
test
jo
movsl
mov
add
xor
lcall
js
cmp
dec
push
nop
mov
aaa
adc
es
idivl
inc
xor
and
mov
sbb
inc
jge
xchg
lods
sbb
push
lret
in
jae
add
lods
aad
add
jge
cli
movsl
roll
jb
or
repnz
push
pop
insb
mov
sti
rcr
pop
addr16
pop
xor
inc
shrl
lock
add
dec
out
dec
add
jbe
jmp
mov
rorl
mov
lret
mov
std
sbb
lea
cld
push
enter
insl
mov
out
js
add
lods
imul
adc
mov
loop
jb
mov
adcl
loop
js
in
ss
int
pushf
rorl
xor
shrl
scas
clc
xor
gs
shrl
mov
mov
jp
mov
cmp
arpl
jbe
xchg
sbb
and
fildll
out
sub
clc
push
gs
sti
cmp
addl
jge
pop
and
inc
xchg
pushf
xor
ja
out
jp
movsb
in
mov
xor
or
daa
stos
test
cmpsb
push
rcrb
aaa
js
out
mov
push
and
push
pop
mov
xchg
jae
or
pop
push
ret
mov
aas
push
dec
repz
inc
lcall
xor
sub
mov
js
xor
addr16
add
ret
loopne
cmp
push
xor
fcoml
ss
clc
and
mov
lcall
xor
in
pop
push
bound
pop
ja
gs
push
stc
cmpsl
xchg
test
popa
imul
arpl
and
shll
stos
cltd
cltd
lret
sub
adc
sbb
bound
das
iret
and
mov
xchg
in
dec
stos
sbb
adc
arpl
imul
or
jl
fs
and
jne
into
les
mov
movl
jnp
mov
leave
idivb
sahf
mov
outsb
pop
jno
sbb
jb
add
jp
xchg
cltd
leave
lea
mov
sub
and
mov
cli
shr
lods
shl
and
ret
jb
in
popf
sbbb
out
sub
mov
iret
fisttpl
jns
in
cwtl
cwtl
mov
xor
pop
std
out
add
mov
or
stos
mov
inc
mov
cld
repz
in
aad
pop
call
inc
cmc
iret
inc
shlb
out
int
dec
mov
add
cmp
xchg
xchg
fsubr
add
push
cmp
daa
xlat
xchg
lds
ljmp
clc
add
xor
cmp
dec
dec
pop
cs
mov
pop
rorb
cld
jg
adc
nop
and
scas
dec
popf
xor
and
mov
lock
mov
add
stc
out
rcl
scas
or
sti
out
sub
test
test
es
js
mov
inc
fisubs
push
inc
sti
push
popf
or
movsb
out
aam
jmp
xchg
adcl
lods
add
in
xchg
out
ja
out
pop
cs
and
sub
dec
mov
int3
fnstenv
push
ljmp
sbb
scas
cmpsb
mov
adc
dec
pop
je
adc
cmp
pop
push
outsb
adc
jp
in
test
arpl
loop
incl
daa
cmp
push
push
es
dec
xchg
pop
jns
rorl
pop
jmp
mov
xchg
adc
ljmp
aas
fiadds
add
rcll
mov
test
fucomi
ljmp
popl
add
jge
notl
stc
lret
fiaddl
push
loop
rep
ret
imulb
push
cmp
lods
cwtl
in
jg
int
sti
repz
mov
ret
hlt
sti
pop
sbb
cmp
and
mov
xchg
mov
shlb
or
push
sub
dec
orl
mov
mov
mov
test
mov
fistl
add
jns
rol
pop
jb
fs
lods
insb
or
ret
dec
into
inc
je
sbb
sub
or
and
pop
loop
jnp
inc
fisttpl
jle
aam
mov
insb
dec
in
das
pop
in
dec
adc
cmpsb
sub
or
push
cmp
cs
dec
sbb
fbld
cmp
adcb
add
push
sbb
mov
sbb
lret
lcall
xor
addr16
testb
mov
rclb
repz
dec
push
push
xchg
rorl
xchg
push
mov
xchg
push
xchg
loop
dec
int3
push
movb
cmp
push
les
and
inc
mov
sub
sbb
and
jmp
neg
jns
pop
cmp
pop
lcall
cmpsb
adc
ja
push
jmp
cmpsl
dec
mov
mov
push
imulb
xor
pop
stc
mov
mov
xor
rcll
mov
xor
leave
sbb
and
sahf
adc
adc
scas
inc
cmc
xchg
sbb
les
mov
inc
les
popf
push
std
dec
add
ja
popl
ret
and
pop
sbb
dec
roll
stc
cmpsl
xchg
fistpll
lock
nop
mov
sbb
jnp
xlat
addb
jmp
fs
loope
mov
movsb
ss
dec
jbe
les
and
scas
jo
push
je
sahf
pop
imul
sbb
fs
clc
shl
aaa
sbbl
xor
fwait
bound
jle
shll
mov
xchg
addr16
cmp
xchg
pop
movsl
push
cmp
pop
out
and
push
pop
dec
dec
imul
add
xchg
lret
mov
outsl
idivl
and
cmp
sub
nop
jno
cmpsl
add
mov
adc
sbb
mov
xchg
mov
imul
mov
imul
mov
xchg
clc
mov
add
mov
arpl
insb
dec
add
xchg
xor
sub
cmc
push
or
jge
dec
cmp
jno
mov
aad
in
negb
fldl
and
cmp
insb
pop
out
dec
paddsb
sbb
insb
xor
mov
ds
cmpl
int
insb
pop
mov
pop
pop
out
inc
xor
pop
arpl
mov
fyl2xp1
inc
repz
and
dec
mov
es
lods
cmp
jae
aas
pop
ja
addr16
les
mov
icebp
notb
stc
fadd
dec
cmp
cmp
mov
lret
dec
cmp
or
mov
jae
sbb
sub
lock
jb
cwtl
lcall
pop
cmp
mov
dec
xlat
jne
enter
movsb
xor
cmpsl
idivl
outsb
jge
add
push
fsts
pop
mov
dec
xor
xor
jae
push
movsl
sbb
in
and
and
dec
inc
filds
push
push
cmpsb
push
popa
mov
add
lds
jb
notl
pushf
lret
add
jb
lahf
add
inc
sub
pop
push
es
addr16
lcall
jno
and
subl
rclb
adcl
rorl
mov
xchg
mov
aas
stc
shrl
fildl
mov
andl
fsubrs
punpckhdq
cmpb
jg
pop
lcall
push
add
jno
push
add
push
mov
fs
lods
repz
adc
jnp
sti
mov
test
push
xchg
jo
pop
push
inc
std
insb
push
addl
enter
xchg
icebp
push
das
and
sbb
mov
or
lcall
push
loopne
sbb
dec
aas
in
mov
push
dec
cltd
mov
mov
js
iret
call
ret
shll
enter
sbb
jmp
jbe
cld
adc
jmp
in
repz
loopne
fsub
adc
push
loopne
xor
lea
add
out
repz
mov
adc
mov
in
das
out
sub
mov
aam
xchg
sbb
gs
call
rorl
repnz
lret
enter
pop
int3
imul
aas
mov
dec
push
test
repnz
mov
inc
jmp
outsl
cmpsl
gs
call
fstps
adc
call
cmc
lahf
jmp
cmp
stos
shll
or
ja
out
jae
stc
add
leave
mov
pop
popa
inc
nop
in
jle
test
sub
inc
test
lods
push
xchg
sbb
addr16
inc
in
negb
inc
aas
xlat
xor
sbb
sbb
nop
je
jmp
xor
mov
loope
adcl
cmp
pop
cmp
es
sub
test
repz
outsb
cld
sti
cld
cmp
icebp
dec
outsl
popf
jmp
pop
repnz
push
pop
xchg
inc
mov
ret
jno
lock
stos
or
rcll
or
mov
insb
pop
mov
mov
push
jecxz
pop
xchg
adc
cmp
push
push
cmp
std
ljmp
fwait
movq
lods
hlt
push
push
lock
jb
std
cmp
pop
stos
aam
scas
inc
cmc
cltd
mov
xchg
pop
mov
add
into
test
lcall
stc
mov
mov
mov
mov
cmc
orb
jbe
int3
popf
fistl
xchg
fstpt
mov
lods
jno
or
inc
dec
push
inc
idiv
jmp
cmpsb
xorb
cli
mov
xchg
daa
loop
inc
xor
es
inc
sbb
arpl
push
fcompl
mov
loopne
dec
in
in
daa
mov
sub
dec
push
adc
icebp
cmp
or
in
xchg
fstpl
adc
iret
pushf
icebp
int3
jmp
push
mov
test
cli
dec
mov
enter
xchg
cmpsl
pop
cld
add
or
cmpsl
mov
or
xchg
sub
rcl
ret
stos
jnp
pop
jmp
pop
loop
add
push
jno
mov
xchg
fisubl
call
sahf
hlt
into
vunpckhps
out
or
sub
fidivs
in
jae
xchg
push
aas
xor
add
sbb
sbb
fistps
mov
ljmp
cs
negb
xchg
dec
int
push
inc
aaa
loop
sbb
pop
xor
in
cmp
push
lret
jecxz
mov
inc
popf
mov
pop
and
sbb
daa
mov
andl
push
into
aaa
add
sbb
in
sbb
mov
xchg
push
xchg
mov
dec
ljmp
loop
sahf
add
int
jno
fsubrp
and
aaa
push
or
call
out
lock
xor
push
sub
or
sbb
cs
xchg
rcrl
sbb
cld
out
ucomiss
cs
dec
ja
xchg
icebp
jns
pop
cmp
mov
push
iret
das
inc
xchg
fstp
sbb
mov
out
aaa
movsb
outsb
add
inc
movsl
cs
sub
divl
repnz
inc
jnp
push
int3
faddp
or
addb
sbbl
sbb
xorl
cmp
js
cmpl
adc
mov
dec
arpl
fcomi
push
gs
inc
pop
ds
ret
ss
fistl
out
xor
hlt
or
push
rorl
lahf
mov
daa
ret
xchg
adc
xchg
jb
lahf
mov
sub
fsub
rorl
sub
into
ficomps
outsb
sbb
dec
push
mov
lock
cli
pop
jmp
icebp
jl
cmpsb
inc
test
mov
fsubs
add
xchg
in
inc
inc
push
hlt
ret
adc
push
mov
subb
scas
fsubrl
pop
mov
cmpsl
mov
inc
or
xor
mov
in
movsl
add
and
or
into
mov
shrl
xor
mov
pusha
lds
insb
arpl
mov
rolb
es
filds
xor
pop
nop
sub
fidivrl
scas
xor
insb
adc
dec
cmpsb
mov
inc
cmp
scas
mov
adc
pop
incb
mov
dec
pop
test
mov
mov
mov
cwtl
xor
nop
cs
dec
mov
mov
stc
mov
xchg
negb
sarb
dec
or
stos
xchg
sbb
das
outsb
popf
xchg
jbe
xchg
js
cmpsb
cmc
rol
in
imul
xchg
mov
pop
mov
mov
push
jno
loopne
lds
pop
ss
jecxz
pop
adc
push
mov
push
ss
hlt
test
push
mov
in
mov
pop
add
lret
aam
pop
xchg
add
mov
mov
push
lods
fidivrl
mov
repz
sbb
mov
add
inc
fcom
inc
insb
pushf
cmp
loopne
xchg
cmp
push
xchg
dec
cld
adc
popa
xchg
xchg
jbe
mov
out
loopne
cltd
aas
mov
jg
inc
add
add
and
ja
adcl
or
incl
fidivrs
lods
popf
adc
cld
inc
push
rcll
and
mov
or
dec
and
hlt
das
shl
jb
dec
bound
xor
mov
push
loop
dec
xor
cmp
cmp
out
jecxz
jno
sbb
ljmp
ret
adc
rol
push
fdivp
xchg
pop
cld
in
cmp
bound
xor
int
lock
sbb
jns
sbb
fisubl
fldenv
je
repz
and
or
jo
cmp
scas
mov
sub
lods
clc
adc
mov
and
insb
push
xchg
xchg
outsb
jae
mov
dec
cmp
scas
jg
jns
cmovno
daa
jg
push
rcrl
shr
mov
ror
xor
out
jp
das
and
ss
in
jge
mov
xchg
jo
cmp
fcoms
test
add
mov
sbb
push
mov
cld
adc
jno
and
ret
subb
add
add
jns
cs
xlat
loop
fwait
sub
cmpsl
je
add
push
or
jno
xor
popa
dec
outsl
bound
subl
lds
inc
push
jg
scas
out
lcall
push
cmpsl
xchg
sbb
clc
les
outsb
mov
adc
and
scas
or
data16
sbb
mov
cs
lods
andb
out
push
cld
sbb
es
mov
fisubl
ret
xchg
jb
jo
mov
xchg
ss
mov
into
cmp
outsb
nop
mov
imul
notl
cmp
mov
aad
dec
mov
imul
sbb
push
inc
push
loope
dec
popa
fisttpl
les
push
add
sub
and
and
add
cmp
mov
sahf
sub
mov
movsb
aam
test
aas
sbb
pop
xchg
mov
and
mov
and
jb
pushf
call
fisttpl
pop
push
inc
xchg
popfw
xor
bswap
jne
pop
and
adc
inc
sub
addr16
jecxz
xor
xchg
cmp
cmp
test
jno
mov
ss
push
cli
rcrl
mov
cmpsl
insb
xor
xlat
adc
stos
mov
test
dec
push
and
mov
lods
call
mov
scas
dec
sbb
fstpt
gs
push
or
dec
inc
mov
pop
scas
push
sub
inc
pop
jl
jbe
ficompl
xor
jmp
mov
xor
rcrb
leave
sbb
mov
cmp
cmpsb
fisubl
push
add
lods
jp
notl
mov
das
aam
out
cwtl
orb
test
cmpsw
cltd
fnstsw
inc
adc
iret
mov
pop
enter
sub
in
std
les
add
xchg
shll
mov
xchg
stos
outsl
out
cmp
cmp
mov
in
popf
inc
sub
push
sub
ja
neg
sub
inc
add
mov
addr16
jo
sbb
fwait
xor
cmp
rcrb
jno
or
jecxz
in
rcll
int3
and
push
mov
fwait
adc
adc
mov
xor
imul
and
int
push
adc
mov
jp
stos
pop
and
movsl
sub
sub
in
nop
bswap
data16
cs
pop
jmp
inc
inc
xchg
test
out
or
inc
shl
stos
clc
cmpsl
fs
mov
stc
xchg
ret
repz
sti
loopne
aam
into
or
bswap
sbb
nop
push
pop
jle
sub
pop
mov
loopne
insb
push
cltd
loopne
lods
addb
xchg
iret
das
cmp
cmc
bound
stos
cmp
addr16
dec
xchg
pop
dec
pop
adc
push
cmp
iret
imul
arpl
test
sub
stos
addr16
push
jo
shll
xor
push
mov
loope
sarb
fisttps
into
cmpw
xchg
xchg
push
shrl
dec
out
xchg
rorb
jo
movsb
mov
push
dec
fcoml
fildll
cmp
fsubl
btr
sub
stc
dec
sbb
lahf
cmpsl
cmp
pushf
pusha
jecxz
dec
jo,pn
mov
and
add
push
gs
and
das
adcb
popf
pop
or
aas
cs
mov
scas
lcall
jmp
les
push
xchg
hlt
imul
inc
inc
test
jg
mov
mov
add
add
mov
pop
shlb
adc
ja
xor
into
stos
adc
jnp
sbb
out
adc
cltd
dec
je
mov
sub
into
pushf
test
and
or
call
or
rorl
rolb
inc
push
dec
dec
repnz
lret
es
dec
stc
pop
mov
out
push
inc
xchg
fstenv
ss
mov
lds
or
mov
push
repz
lds
dec
addl
bound
cmp
or
jle
nop
icebp
nop
daa
fnstcw
aaa
push
sub
pop
clc
pop
pop
loop
insb
stos
jae
aad
add
lods
or
jne
mov
fmuls
test
mov
adc
je
adc
ja
or
lcall
lock
xor
pop
mov
rcrl
mov
ret
add
stos
adc
push
jecxz
lods
push
mov
jg
iret
mov
jge
rcr
push
sbb
in
test
mov
push
lret
mov
inc
rcrl
mov
mov
scas
cmpsl
mov
lahf
lcall
lcall
fsts
sar
xchg
push
scas
mov
mov
push
fildll
and
test
or
push
push
pushf
xor
mov
add
test
mov
lea
enter
sarl
movsl
mov
sbb
std
scas
mov
mov
xchg
lcall
push
xor
insb
xchg
push
mov
out
cmc
iret
pop
adcl
inc
loop
sub
loopne
add
jne
in
stos
pop
adc
mov
call
dec
lahf
mov
and
lods
mov
xchg
sysret
loopne
mov
andb
push
add
loopne
add
xor
sti
out
pop
mov
cmp
inc
popf
mov
sbb
and
fdivs
jp
sarb
shrl
stos
mov
testb
and
xchg
mov
xchg
dec
sub
daa
dec
sar
sbb
adc
sbb
mov
test
mov
ret
sbb
mov
push
lret
jmp
jno
jns
add
jl
int3
sub
lret
or
inc
dec
xchg
push
andl
jl
push
sub
movsb
mov
outsl
jno
cwtl
dec
mov
aad
mov
cltd
mov
sub
hlt
jmp
or
into
repnz
out
out
cmp
xchg
je
sbbl
pop
cmp
pop
jne
lock
dec
mov
sub
push
xchg
xor
push
neg
xchg
fsubs
cmp
mov
xor
in
ja
mov
mov
add
inc
cmp
xor
push
sete
and
dec
push
lods
shll
js
jno
mov
mov
xchg
xor
test
int3
fcmovu
push
bound
popa
stos
sub
mov
mov
inc
loop
faddl
cmp
jge
movsb
xchg
cmp
and
lods
inc
out
xor
push
inc
dec
mov
pop
cmc
xor
xor
clc
xchg
mov
xor
xchg
sub
insl
scas
adc
xlat
sbb
cmpb
mov
leave
xchg
jo
out
loope
pop
lods
jecxz
js
fimuls
daa
push
leave
xor
xchg
leave
mov
movsl
movsl
lcall
push
pop
dec
mov
and
mov
xchg
xchg
xchg
in
test
xchg
push
push
lea
inc
push
shlb
ja
xor
out
add
xor
pop
dec
bound
sbb
mov
fildl
add
jae
inc
sub
dec
fisubl
into
sub
std
out
aam
dec
jns
pop
sbb
and
mov
push
xor
sub
fsubs
xor
in
gs
mov
sub
xchg
test
fistl
push
imul
lock
push
aaa
lods
cmp
lock
or
dec
cmp
pop
mov
ja
add
loopne
add
mov
movsb
bound
imul
or
clc
adc
adc
int
mov
adc
out
cmp
es
sbb
in
xchg
xor
mov
sbb
mov
xlat
std
daa
adc
xchg
gs
pop
sbb
xchg
mov
add
lret
dec
pop
mov
orb
sbb
and
mov
js
xor
sbb
inc
scas
push
mov
mov
testb
sub
aas
sbb
jle
push
ret
in
pop
leave
sub
push
stos
aam
dec
dec
fsub
shrb
leave
add
mov
stc
mov
xchg
lods
mov
psllw
add
cmp
insl
jecxz
push
fcmovnu
cs
mov
xchg
pop
clc
adc
fisubrs
lcall
jnp
dec
sbbb
icebp
nop
jmp
mov
jge
xchg
into
and
inc
cltd
mov
pop
sti
ficoml
fsubrs
push
push
daa
xchg
mov
push
loopne
out
sahf
pop
scas
pop
rcr
aas
out
or
xchg
hlt
adc
and
sub
xor
arpl
mov
popf
push
repz
popf
push
mov
gs
mov
out
hlt
imull
sub
mov
and
mov
cmp
and
shl
mov
loopne
jno
pop
dec
adc
lahf
cmc
movups
out
dec
popf
mov
mov
sti
inc
xor
ljmp
scas
mov
xchg
mov
jg
sbb
pusha
outsl
push
dec
push
xchg
mov
or
ret
out
xchg
aaa
xor
fmull
xchg
xchg
xchg
xchg
insl
enter
xchg
push
sub
xchg
hlt
xor
dec
fnstenv
sbb
imul
loop
xchg
aaa
incb
and
push
loopne
mull
lahf
xchg
adc
lret
pop
push
sub
bnd
jne
mov
adc
outsb
or
dec
inc
popf
mov
cmp
stos
jno
push
das
movsb
push
notb
shrb
pop
jl
adcb
mov
xchg
mov
cmp
ljmp
mov
arpl
cmp
push
cli
outsl
and
mov
pshufw
popf
push
dec
push
test
cmpsl
and
pop
repnz
pushf
test
push
test
dec
mov
xor
mov
sub
mov
stc
insl
inc
pop
divb
xorl
sub
inc
ljmp
outsl
mov
adc
lods
or
pop
jns
insb
dec
mov
jae
std
xchg
idivl
cltd
leave
pop
and
pop
dec
mov
inc
fcmovnbe
orl
cmp
nop
jbe
mov
test
sbb
fwait
xchg
mov
insl
and
inc
or
cmp
pop
movb
ret
jno
in
sbb
inc
jo
outsb
jl
sbb
insl
mov
add
arpl
mov
les
out
stos
add
cli
pop
lret
jl
mov
lret
sbb
mov
and
sti
loopw
imul
cmp
movsb
add
popa
imul
push
sub
pop
pop
xor
lret
mov
outsl
insb
enter
inc
mov
cmpsl
int
lret
xchg
divl
mov
in
push
cs
xor
lret
cmpsl
pop
inc
imul
or
in
dec
add
dec
mov
stos
pop
int3
popf
mov
stos
imul
pop
pop
mov
pop
ret
pop
jl
pushl
sbb
dec
push
aas
push
jno
mov
push
jle
xchg
aad
mov
adc
and
call
xor
push
std
jns
jo
pushf
jnp
loope
sbb
xor
jnp
and
fsubrs
ss
test
xchg
mov
adc
cmp
cs
mov
jno
outsl
fnstenv
jp
rorb
lods
pop
movsb
cmp
sub
xor
xchg
dec
in
in
test
fs
pushf
xor
sub
mov
ds
bound
dec
lret
iret
sti
adc
jne
mov
mov
ja
in
js
cmp
cltd
xor
sbb
aaa
sub
sbb
xchg
test
sub
popw
mov
sbb
jne
pop
iret
cmp
andl
and
mov
test
jo
ljmp
das
mov
outsb
cmpsl
popa
fisubs
dec
dec
jae
adc
adc
scas
in
fsts
not
cwtl
cli
add
adc
xchg
xchg
and
pop
jbe
fidivrl
jmp
inc
mul
mov
in
xor
incb
aam
xchg
mov
xchg
inc
mov
dec
fstp
sub
sbb
and
loopne
lcall
mov
icebp
iret
xchg
push
faddp
or
xchg
loop,pt
sbb
pop
stos
loopne
sbb
dec
xchg
xlat
add
mov
leave
jg
stos
or
xor
fmuls
and
out
cwtl
jb
add
pop
aas
pop
test
std
xchg
rcrb
push
xchg
lret
fs
cmp
sbb
pop
and
mov
in
xor
fwait
jg
mov
movsl
sub
out
lds
cs
movsl
mov
fimull
les
push
out
mov
cltd
jne
rep
sti
lret
ja
iret
mov
nop
addr16
test
sbb
mov
or
push
mov
xor
cmc
and
xchg
js
std
aaa
jo
pusha
ljmp
popf
lahf
pop
cmpl
hlt
loope
sbb
icebp
xchg
test
push
repz
and
aam
push
mov
testl
dec
hlt
push
mov
sbb
pop
or
lret
insl
popa
imul
setae
push
outsl
dec
lds
fistpl
insl
roll
cwtl
movsl
lret
cmc
sti
movsb
cmp
xchg
inc
add
lea
cld
add
lea
test
lock
pop
aam
je
push
test
ja
sub
stos
loop
arpl
notb
cmp
stos
jle
add
cmpb
hlt
jl
shr
push
in
sbbb
sub
inc
mov
xchg
dec
pushf
xchg
inc
test
add
sub
pop
les
iret
bound
add
add
push
sbb
sbbb
push
mov
mov
dec
dec
call
popa
mov
mov
sti
lods
neg
pushf
test
dec
out
pop
jae
and
out
mov
fwait
das
xor
pushf
daa
xchg
add
or
add
rolb
test
popf
sbb
out
xor
inc
scas
incb
inc
xor
inc
xchg
lock
xlat
or
mov
jb
push
jg
pop
sub
inc
std
sub
in
test
in
insl
pop
push
or
ret
xchg
sub
mov
out
cmc
sub
dec
xchg
jne
cmp
cmp
fbld
mov
xor
xchg
jnp
mov
adc
fcmovnu
push
sub
sbb
inc
sar
add
jnp
dec
xorb
test
scas
loop
xchg
mov
fimull
jno
cs
xchg
pusha
cltd
add
notb
mov
push
out
jle
repz
sbb
sbb
xor
cmpsb
jo
fisttps
insl
sub
cmc
out
shl
fcoml
xchg
addr16
scas
insb
cmp
mov
clc
fiadds
fcmovb
test
cwtl
repz
inc
mov
xchg
fucomi
push
pusha
mov
scas
aas
sbb
imull
ds
ja
jle
inc
pusha
ror
aaa
ljmp
fldenv
std
test
inc
adc
cmpsl
sbb
jl
xchg
jge
jmp
mov
in
movb
sahf
in
mov
sahf
icebp
hlt
jns
sbb
pushl
push
mov
std
shlb
or
cmp
inc
movsl
mov
adc
mov
pop
lret
ret
fidivrl
xor
insb
lea
inc
cmp
jo
xchg
enter
pop
push
jmp
in
adc
xor
xor
pop
push
daa
lret
pushf
mov
push
xchg
insl
int3
fucompp
add
inc
data16
xchg
dec
fiaddl
das
fabs
push
call
shlb
pusha
cmp
push
jns
ret
scas
sbb
adc
scas
cs
mov
sarb
add
repz
stos
mov
cmc
test
or
popa
bound
in
mov
pop
sub
mov
fsts
xorb
mov
popf
outsb
push
adc
ja
jmp
or
lahf
fisubrs
out
push
inc
pop
subl
jge
in
imul
jnp
scas
cmp
out
push
lods
test
mov
xchg
in
xor
shlb
test
stos
jne
js
lods
inc
xor
cmpsb
push
jno
dec
insl
call
or
adc
lret
in
inc
repnz
and
cli
or
inc
xor
cmp
mov
or
outsl
sub
push
xchg
add
cli
xor
pop
adc
pop
loope
cmp
in
pop
jmp
cmc
pop
push
jno
das
pop
add
outsl
sub
cltd
lahf
and
aaa
gs
jne
push
sbb
adc
out
or
int3
mov
inc
call
fists
jp
adc
ror
xchg
or
scas
cmp
cmp
cmp
and
sarb
lods
jno
inc
lock
lock
stc
or
xlat
inc
push
das
int
mov
xor
sub
inc
sub
lahf
hlt
mov
xor
pop
aam
fs
jmp
shrl
lods
pushf
notl
cld
jle
adc
mov
xchg
push
in
inc
sbb
test
imull
loope
push
xchg
cmpsl
xchg
fwait
aas
cld
xchg
sarl
jle
and
cmp
cmc
sub
test
pop
loopne
xchg
loopne
fimuls
arpl
dec
cmp
scas
subb
xchg
cs
pop
pop
adc
push
and
xchg
enter
mov
repnz
cmp
sbb
shll
adc
dec
push
push
sti
enter
sti
test
cwtl
fidivs
rdmsr
clc
mov
psllq
jmp
fucomi
adcb
jb
lods
push
mov
pushf
push
sub
jb
rol
fwait
mov
mov
push
lret
dec
popf
lret
je
and
add
inc
aaa
iret
imull
movb
orb
repnz
cmp
jmp
ds
aaa
repnz
add
or
hlt
push
sbb
adc
cmc
jbe
push
mov
out
inc
pop
daa
pop
push
and
cmc
xorl
mov
mov
adc
rclb
push
push
call
sub
and
push
icebp
xchg
ja
jp
xchg
test
stos
insl
mov
imulb
daa
aaa
mov
add
hlt
push
xchg
cmp
iret
mov
out
jmp
call
cmc
push
lea
dec
inc
sti
push
movsb
lods
dec
adc
rep
xor
push
cmp
xor
test
and
dec
jns
rcl
xor
dec
mov
push
pop
cmc
fimull
push
jo
inc
sbb
mov
stc
rorl
mov
cmp
inc
scas
mov
push
push
fdivs
arpl
xor
test
pop
pop
and
movsb
mov
sbb
mov
lea
pop
lods
mov
ja
outsl
mov
dec
pop
cmp
mov
cmp
sub
xchg
stos
ret
push
js
mov
lcall
sbb
inc
out
xchg
push
mov
scas
test
sub
bound
xchg
lock
and
cmp
ret
lret
not
shlb
dec
or
mov
scas
out
outsl
pop
and
dec
mov
sub
sbb
lea
push
cmp
adc
and
and
push
lods
add
cmp
enter
mov
or
flds
jne
clc
and
aam
sub
push
push
fwait
sbb
xchg
inc
adc
testl
sbb
mov
dec
sbb
push
push
iret
lcall
adcl
mov
test
les
jecxz
jo
in
or
add
inc
das
pop
xor
cmp
scas
pop
cmp
inc
scas
sub
aas
sbb
sarb
and
adc
dec
push
call
mov
sahf
mov
pop
lock
mov
call
rorb
adc
lea
fs
xchg
fsubl
ficoml
out
and
rorb
out
add
fs
ljmp
in
cmpsb
sbb
stos
bound
adc
mov
jbe
stos
mov
icebp
xlat
js
dec
push
pop
push
popa
inc
and
decl
xchg
insb
rorb
gs
pusha
addb
xor
pop
cltd
inc
insl
lods
ja
cmp
out
decb
sub
hlt
lea
mov
in
cmp
insl
inc
inc
cld
mov
and
out
faddl
inc
pop
notb
jge
xchg
sbb
aad
cwtl
or
dec
sbb
adc
shl
cmp
fistl
dec
ficoml
jb
ret
pop
mov
or
fsubl
enter
sahf
push
lods
sbb
add
mov
idiv
and
mov
fisttpl
outsb
adc
sbb
mov
jle
push
mov
fiaddl
add
arpl
test
ljmp
pop
pop
lock
pop
pusha
movsb
or
adc
loopne
js
or
sti
jae
pminsw
mov
pop
mov
cmp
push
mov
call
popf
cmc
dec
pop
scas
xor
std
les
lret
xchg
mov
mov
xchg
xlat
mov
xor
jl
mov
inc
mov
or
inc
loopne
ja
push
lods
imul
push
test
push
dec
addl
mov
stc
pop
jge
lcall
pop
aam
ficoms
jnp
push
mov
cmp
sub
sbb
fstp
inc
xchg
mov
and
hlt
pop
movsb
mov
stc
test
repnz
push
jg
adcb
inc
std
push
mov
mov
psraw
jmp
cltd
repnz
lock
cs
sub
fs
cli
dec
shll
lret
mov
mov
clc
notl
out
imul
mulb
mov
push
scas
add
add
pop
cmc
cld
jne
push
push
or
out
test
fisttpl
jb
dec
arpl
loopne
and
push
cld
push
push
and
ds
inc
xchg
mov
dec
mov
repnz
lret
push
adc
in
inc
loop
mov
jo
adc
xchg
pop
add
cmp
jae
jns
lods
sub
dec
test
mov
or
inc
sub
xor
pop
in
lea
mov
and
loop
xchg
jecxz
std
xchg
mov
and
shlb
pop
mov
mov
stos
decl
sub
dec
mov
lods
push
xchg
jmp
mov
push
jb
nop
pop
mov
xor
stc
mov
jmp
fnsave
and
add
aas
out
out
inc
scas
jns
mov
imul
sbb
cmp
loopne
jns
adc
mov
mov
adc
insb
xchg
es
jno
pop
mov
sub
jg
jnp
inc
or
cmp
popa
mov
ficompl
add
pusha
sahf
xor
stos
cmpsb
xchg
inc
ljmp
xchg
pop
mov
xchg
dec
shrb
pop
push
imul
mov
sahf
jecxz
arpl
lret
jno
sarb
xor
add
insb
pop
leave
andb
lods
js
adc
cltd
icebp
sbb
pop
sarl
iret
pop
lods
pop
and
dec
insl
repz
cmp
fcmovb
rcl
inc
mov
or
sbb
arpl
jno
inc
dec
mov
cmp
fwait
add
mov
loopne
dec
out
xchg
push
or
sbb
incl
inc
shr
aad
imul
or
fbstp
sub
inc
inc
mov
fs
push
sub
scas
push
or
inc
lret
mov
mov
test
aam
pop
je
jl
lahf
add
ljmp
jns
xchg
jge
jp
loopne
xchg
inc
jae
pop
xlat
add
dec
push
pop
push
imul
pop
out
xchg
notl
mov
loope
dec
pop
dec
xchg
xchg
sub
test
sbb
mov
jmp
mov
rcr
jl
xor
inc
mov
out
data16
xchg
dec
sbb
testb
fxch
arpl
out
scas
test
daa
fcomp
icebp
push
iret
rolw
or
enter
mov
mov
mov
andl
mov
in
or
jl
cs
jne
xor
notb
stc
nop
pop
mov
fcompl
int3
jb
dec
push
lahf
dec
movl
adc
adc
mov
push
dec
dec
mov
pop
fwait
cwtl
push
add
aad
and
dec
mov
lods
push
xor
bound
mov
mov
imul
or
subb
lock
rcr
xchg
movb
jmp
popa
std
popf
lods
sti
stos
add
mov
and
fcomps
imul
xor
ret
sub
sbb
mov
fs
shl
pop
repnz
dec
inc
jl
cmp
fists
pop
jl
cvtps2pd
ror
adc
jg
xorb
lods
jge
pop
sub
mov
stos
ret
dec
mov
pusha
loopne
dec
jg
mov
mov
shll
imul
dec
xchg
sbb
dec
mov
inc
test
dec
mov
cmc
sbb
int3
jns
adc
sub
ljmp
ja
or
roll
movsl
gs
sti
enter
decl
mov
push
les
test
jno
loopne
incl
sbb
xor
lods
sbb
enter
cld
cmp
rcrb
or
mov
flds
cmpsb
adc
cs
xor
jns
fwait
jb
jle
or
push
pusha
push
mov
mov
cmp
imul
cmp
dec
ret
lds
fs
pop
dec
pop
popf
xor
inc
sbbb
fidivrl
adc
je
and
or
mov
and
mov
sbb
sbb
inc
stos
adc
adc
ficomps
out
stos
out
lods
adc
loop
jo
stos
and
ret
sbb
call
xor
mov
das
sub
xor
lret
icebp
dec
push
add
dec
stos
shrl
test
ret
sub
shlb
cli
mov
inc
or
adc
rclb
xchg
sub
frstor
push
popf
cmp
js
data16
out
adc
mov
inc
loopne
sahf
inc
dec
push
fbld
pop
push
mov
fimull
add
pop
repnz
jle
lock
mov
cmp
mov
aaa
pop
fbstp
add
pop
stos
into
sbb
clc
scas
sbb
lods
lcall
push
loop
inc
cmc
addb
pop
mov
jecxz
jbe
mul
lods
xor
js
popa
xchg
fildl
and
xor
inc
cmp
mov
clc
divl
shrl
mov
data16
rcrb
pop
arpl
mov
leave
fs
mov
add
push
inc
clc
xor
cmc
lret
cmp
sbb
insb
outsb
sbb
mov
dec
insl
in
and
stos
mov
xchg
inc
mov
add
mov
jmp
adc
fwait
ds
iret
and
xor
clc
sbb
mov
inc
adc
mov
pusha
pop
ret
dec
mov
outsb
cmp
loope
add
dec
ss
aam
cmpsb
add
iret
out
sbb
add
iret
mov
mov
xchg
mov
je
inc
jmp
push
popf
daa
mov
xor
sbb
lcall
mov
int3
fwait
bound
sub
imull
mov
jmp
pusha
mov
addr16
movsl
popa
mov
adc
pop
ds
xchg
fildl
shll
ficompl
daa
les
mov
push
scas
mulb
jmp
mov
xchg
push
scas
add
cmpsl
mov
jne
mov
add
add
xlat
or
sub
and
in
jge
or
rorb
out
outsb
scas
adc
jmp
in
outsl
mov
sbb
gs
int
movsl
jecxz
add
test
push
scas
or
inc
xchg
sbb
aaa
hlt
lcall
inc
xor
pop
scas
js
mov
jne
xchg
push
mov
idiv
xor
push
shl
sub
fisubs
push
mov
xchg
mov
pusha
loopne
push
mov
cwtl
stc
lahf
jno
fdivrl
cmpsb
cwtl
jae
cs
js
outsl
sub
gs
xchg
cmpsb
fcmovu
xchg
mov
pop
fidivrs
fisttps
and
insl
jnp
sbb
dec
and
xor
mov
ret
jp
movsl
lcall
cwtl
loop
mov
fs
push
insl
and
shlb
mov
dec
push
or
xor
dec
pop
aaa
adc
xor
sbb
lcall
in
dec
out
orl
in
cmp
lret
je
sbb
cmp
loope
rcll
mov
das
lods
or
dec
out
loope
fimuls
mov
cmp
lods
cmp
pop
popa
xchg
cmpsl
movsb
mov
jbe
ljmp
dec
aas
call
lods
mov
xchg
push
ljmp
lret
add
cmp
aam
enter
std
movsb
push
jne
fildll
sbb
sbb
cmp
dec
inc
dec
ljmp
lock
xchg
mov
jecxz
andb
aaa
mov
mov
xchg
cmpsb
sti
jns,pn
push
fisttpl
stos
inc
fstl
fidivs
das
mov
dec
pop
push
inc
add
pop
out
mov
cltd
into
insw
adc
shr
sti
scas
fldcw
in
pop
add
adc
lcall
out
lods
xchg
dec
xchg
cltd
jle
popf
and
cli
pop
daa
fcmovnb
mov
jmp
test
inc
sbb
les
fistpl
jne
popf
jg
aam
popa
js
mov
pop
pop
push
arpl
add
dec
call
mov
xor
adc
sub
mov
mov
test
mov
cmp
cmc
int3
push
cwtl
pop
out
loope
mov
stos
addb
sti
ja
mov
insb
push
movsb
push
lcall
mov
fcomp
jl
in
jns
fdivl
cmp
pop
mov
aad
xchg
adc
stc
aad
dec
lcall
cmc
push
dec
sbb
rcr
imul
cmp
icebp
inc
pop
icebp
lret
pop
add
iret
mov
out
lret
outsl
push
jmp
mov
es
adc
and
lret
add
jo
js
mov
popf
jae
int
mov
mov
and
cltd
adc
fists
mov
pushf
roll
icebp
cmp
dec
push
test
repnz
sbb
shl
movsb
popf
cmp
push
jnp
xchg
jae
inc
sub
cmp
jb
mov
jmp
ljmp
xchg
xor
sbb
mov
cmp
inc
cli
std
mov
lea
sahf
stc
add
inc
idivb
jb
outsl
cmp
test
mov
inc
scas
int
and
mov
repz
ror
adc
adc
stos
dec
sub
jne
push
fsubrl
mov
and
adc
push
pause
int
fprem1
add
xchg
mov
sbb
xchg
cltd
xor
popf
push
inc
mov
stc
pop
insl
mov
outsb
push
data16
repnz
mov
sbb
lods
mov
lret
shll
dec
mov
inc
mulb
out
les
test
push
iret
mov
jne
xor
cli
mov
data16
rcrl
mov
pop
jge
adc
jl
hlt
jmp
in
and
stc
sub
cmp
sbb
out
leave
stos
decb
inc
jmp
inc
fmuls
sti
mov
adc
or
pop
lods
mov
cmp
shl
in
lods
mov
dec
jae
xorl
push
cmp
mov
xor
movsb
mov
inc
dec
jle
mov
call
sbb
mov
ret
or
mov
in
push
jns
sub
pop
push
cmp
pop
jnp
sub
push
and
add
aam
mov
test
sub
xlat
xlat
push
fcompl
pop
dec
jne
and
popf
lods
daa
call
inc
xor
xor
pop
imul
push
inc
insb
ljmp
sti
fcmovnu
cwtl
stos
lea
imul
sbb
aam
arpl
and
push
ret
orb
shl
mov
sbb
loope
push
and
subl
jae
mov
jae
jne
add
std
adc
adc
mov
aad
sbb
pop
sbb
shll
xchg
dec
cmp
call
xchg
cmp
or
jns
or
mov
inc
loope
fisttps
cs
stc
cmc
push
xor
es
or
out
dec
mov
xchg
mov
mov
cmp
lea
rcrb
cltd
iret
std
mov
testb
inc
daa
ja
adc
sub
mov
sbb
test
or
call
adc
sbb
mov
xchg
test
push
sbb
fstpt
dec
cwtl
xchg
cmpsb
inc
sbb
and
jecxz
les
and
adc
loop
out
add
cmc
jmp
mov
ljmp
mov
push
iret
pop
add
shlb
fs
xor
popa
lahf
stos
sbb
adc
and
xchg
jmp
inc
and
js
cmp
sub
push
mov
and
push
xor
mov
loope
jae
xchg
inc
sbb
xor
lock
dec
int3
mov
or
mov
out
imul
jp
adc
iret
xor
xor
ret
xchg
cli
jp
push
sbb
ss
out
aam
lods
mov
cwtl
outsb
inc
xor
ja
es
ljmp
cmp
push
cmp
xchg
mov
pusha
out
shl
inc
ss
push
or
and
adc
dec
aas
cltd
xchg
fwait
mov
pusha
adcl
repz
xor
sub
jb
call
arpl
mov
ret
dec
loop
imul
jmp
adc
ret
clc
mov
xchg
xchg
sub
sub
jae
loopne
pop
lahf
fcoml
or
xor
sub
aaa
shll
or
jae
push
divl
loopne
and
dec
xchg
jo
test
jmp
mov
test
add
arpl
rcl
aam
fcoml
rcrl
clc
cmpsl
sbb
and
xor
jecxz
sub
imul
push
loop
in
out
inc
xor
sub
pop
sbb
mov
lea
fnstsw
pop
xchg
cmpsl
movsb
pop
pop
mov
leave
stos
lods
sbb
data16
jp
data16
mov
mov
pop
cmp
push
xorb
rorl
cmp
pop
pop
fstl
bound
cmp
fnstenv
stos
ljmp
loopne
pop
cmp
xorb
mov
sbb
push
mov
mov
adc
mov
loopne
mov
sub
xor
sbb
ljmp
mov
hlt
inc
xchg
test
xlat
dec
cmc
call
daa
pop
pop
jmp
into
js
inc
imul
mov
jmp
push
std
mov
cwtl
xchg
sbb
repz
aam
cmp
lds
jo
inc
add
scas
loope
cmpl
insb
and
add
je
jl
add
fimuls
scas
mul
enter
dec
inc
sub
sub
lods
xor
movsl
inc
repnz
mov
sub
fists
popa
test
imul
push
lods
sub
inc
bound
jg
icebp
repnz
into
xor
push
icebp
xchg
mov
lret
pop
cmp
testb
xchg
int
scas
mov
mov
ficoml
scas
jp
or
cwtl
test
xchg
aam
jge
xchg
andb
cmc
or
cmp
in
and
imul
sub
cs
fwait
orb
dec
jae
gs
aad
pop
push
jge
pop
dec
leave
mov
sahf
js
mov
outsb
scas
test
repz
aas
xlat
push
jl
roll
xorl
xchg
sbb
imul
test
mov
and
mov
cmp
ljmp
bound
sbbb
inc
pop
fwait
push
inc
mov
andl
jo
fcmovu
cli
mov
iret
imul
inc
pop
stos
das
xchg
rolb
adc
hlt
inc
jb
imull
outsl
fcmovb
mov
xor
mov
arpl
fs
adc
ss
xchg
sbb
lock
push
mov
addr16
mov
lods
cwtl
out
cs
pop
mov
je
popf
adc
mov
scas
mov
cmp
mov
cmp
mov
scas
mov
test
cmpsb
and
addr16
packuswb
or
add
sbb
push
pop
movsl
cmc
imul
out
hlt
xor
or
inc
push
and
jnp
mov
divl
in
mov
lret
stos
jae
or
adc
movsl
sub
mov
sarl
jmp
test
and
adc
cmp
pop
imul
and
rcl
pop
imul
sbb
test
jae
orl
fwait
mov
push
inc
inc
cltd
jo
and
out
stc
xchg
mov
popa
push
movsb
inc
dec
mov
daa
lods
jae
fsub
mov
xchg
xor
jmp
shll
and
adc
cmovno
and
sub
cs
sub
shll
push
xor
test
movsb
imull
dec
or
inc
jno
adc
dec
incb
jp
push
cli
in
lcall
jmp
outsb
lea
mov
ret
stc
mov
jb
push
add
das
mov
or
push
cmp
inc
jecxz
jecxz
or
jg
jge
icebp
xor
sub
jno
out
sbb
or
fwait
scas
in
xchg
fs
mov
aas
cltd
aad
mov
lahf
pop
in
imul
xchg
out
stos
out
push
xchg
push
adc
adc
xor
addr16
in
scas
ss
pop
call
ret
test
inc
jb
arpl
cmc
cmp
cltd
repnz
jecxz
add
and
dec
mov
mov
inc
dec
ret
aad
xor
into
and
adc
inc
fists
sbb
scas
fisttpll
sbbb
ja
decb
jge
jmp
inc
lret
pop
std
xor
cmp
jb
pop
jno
pop
ffree
iret
mov
lahf
hlt
aaa
in
sbb
sbb
and
mov
pop
jne
cmp
mov
gs
push
cltd
hlt
mov
fcoml
outsb
ss
adc
inc
sbb
bound
xchg
outsl
dec
inc
jb
insb
pop
cld
insl
add
pop
xchg
call
inc
sub
lods
jecxz
adc
mov
push
mov
xlat
lret
mov
adc
into
push
inc
mov
push
xchg
sbb
ret
loope
lret
add
add
sbb
and
xchg
add
pop
mov
sub
push
mov
mov
insl
outsb
add
es
mov
cltd
mov
addr16
mov
int
repnz
fisttpll
xchg
mov
out
jg
call
cmpb
enter
adc
pop
repz
or
sbb
xchg
adc
push
jl
jge
iret
push
cli
negb
mov
xchg
xlat
ficomps
xor
push
bound
sub
imul
jle
std
sbb
sbb
aad
mov
sahf
inc
addr16
cmp
adc
xor
mov
cwtl
ret
lahf
mov
cmp
stc
or
sbb
add
test
add
adc
cmp
aaa
add
xchg
outsl
and
jno
mov
mov
loope
sahf
and
arpl
or
int
cmp
cmp
push
dec
pop
mov
cwtl
sbb
iret
rcr
stc
jmp
jmp
xor
fiadds
push
lcall
push
outsb
inc
andl
add
cmp
imul
cmp
push
pop
adc
movsb
roll
scas
fwait
xchg
daa
and
out
push
inc
fisubs
jns
movsl
mov
mov
xchg
lea
sub
or
sahf
shlb
sarb
int
mov
xchg
and
lods
rcrb
addr16
cmp
fildll
std
xor
call
inc
or
loopne
enter
inc
pop
bound
enter
repnz
ret
push
jg
mov
jmp
pushf
xchg
popa
roll
fdivp
subb
cmp
add
push
inc
sahf
test
jp
jp
mov
mov
ret
and
cmp
add
xlat
std
in
lahf
push
sub
xchg
lds
pop
sti
jl
sub
xor
out
xor
rclb
imul
mov
jo
or
inc
fdivl
lods
pushl
outsb
aad
iret
jecxz
cltd
enter
adc
cmp
subb
pop
out
mov
xorl
mov
hlt
cmc
and
stos
imul
repz
sbb
jecxz
sbb
in
scas
add
cli
dec
or
imul
ds
out
pushf
push
jns
dec
sub
daa
or
lods
and
dec
popf
insl
dec
adc
mov
add
jmp
mov
jnp
pop
xchg
cmp
imul
lock
out
adc
xor
sbb
out
shrb
dec
hlt
pop
aas
and
xchg
and
shl
sbb
ds
adc
inc
sub
pop
call
xchg
push
inc
xchg
in
mul
push
mov
inc
xchg
imul
mov
lret
mov
dec
lods
sbb
lds
push
movsl
inc
push
out
in
cmc
xor
cwtl
jmp
inc
hlt
mov
xchg
push
out
sahf
adc
int3
sbb
lret
mov
js
aas
in
sub
daa
std
mov
in
repnz
clc
cli
mov
rorb
jns
cmpsb
in
cmp
cli
mov
loop
js
and
jo
push
cs
xlat
push
pop
rclb
aam
movsl
fcompl
iret
push
leave
mov
repnz
inc
push
inc
pop
popa
fmul
adc
inc
dec
add
push
in
aam
jle
cwtl
and
movsb
dec
loope
cmc
push
pop
mov
mov
in
adc
mov
divl
add
or
nop
out
sahf
pop
sahf
jb
test
push
mov
mov
out
inc
scas
aaa
or
cli
jo
not
and
pop
push
mov
test
mov
cmpsl
mov
xor
inc
clc
scas
jno
jb
out
xchg
push
inc
cmp
hlt
mov
out
roll
push
xor
dec
imul
imul
xor
mov
lcall
cwtl
test
push
and
int
leave
lcall
sti
jp
inc
pushf
shld
adc
sub
cmc
imul
mov
mov
and
sbb
jne
mov
dec
cmpb
loope
pop
test
push
movsb
xor
mov
xor
add
mov
in
ljmp
cmp
ds
bound
cmp
inc
dec
mov
push
fsubrs
mov
loope
mov
movsb
rcrb
cmp
pop
pop
push
xchg
bswap
addb
je
mov
fisttpl
mov
or
in
out
jmp
pop
mov
iret
iret
xchg
enter
mov
popf
xor
and
movq
cld
inc
das
pop
int3
sbb
mov
outsb
adc
pop
js
push
cmpsl
cmp
cltd
adc
aaa
scas
xor
pop
addr16
std
mov
jns
add
and
das
cmp
adc
xchg
sahf
in
call
insl
xchg
stos
xchg
xor
adc
leave
dec
sbb
jbe
add
pop
mov
fidivl
popf
xchg
cmp
pop
and
push
faddl
mov
leave
pop
ljmp
cmp
mov
pop
bound
push
sub
jmp
and
outsl
sub
push
fcomps
add
cmpsb
pop
divb
adc
test
inc
cmpsl
in
pusha
int3
xor
xchg
add
inc
mov
and
add
xor
push
push
pushf
sub
in
push
mov
xchg
sbb
daa
sarl
cmpsb
jle
imul
push
cld
mov
into
mov
cmp
in
mov
stc
cmp
push
leave
je
mov
sub
xchg
in
or
sub
aaa
mov
popa
and
rclb
mov
aaa
push
or
jmp
in
and
pcmpeqb
jg
or
mov
sahf
dec
mov
push
xchg
mov
mov
dec
sti
sbb
add
pop
mov
mov
rcr
mov
sbb
inc
imul
adc
pop
test
icebp
nop
inc
jmp
sbb
stos
pusha
sub
jae
sub
pop
or
outsb
mov
inc
sarl
scas
insl
push
loope
test
or
ja
mov
mov
fcoml
add
in
cld
mov
jno
or
push
jns
lock
shrl
lahf
jb
pop
movsl
loopne
cmp
cltd
dec
mov
mov
fadds
adc
jae
lds
mov
sub
jae
ds
mov
lock
mov
xchg
daa
inc
leave
fcompl
popf
hlt
pop
lods
insl
fwait
bound
sbb
in
add
int
std
addb
cmp
outsb
sub
stos
pop
mov
mov
sbb
and
aam
add
lods
cmp
in
jp
scas
movsl
add
or
and
movsl
cmp
xor
and
popl
jo
cmp
xchg
ds
mov
lret
jmp
and
clc
hlt
sti
mov
cli
pop
popa
pop
outsb
jle
mov
jns
mov
les
scas
mov
pop
scas
jmp
imul
in
repz
repnz
sbb
cmp
inc
hlt
push
xchg
aaa
shr
sbb
jo
mov
loope
sbb
ror
sti
jbe
or
gs
lods
jle
mov
lret
jmp
fidivl
cmpsb
xor
lods
dec
cmp
or
xchg
mov
push
jecxz
rcll
dec
or
jmp
in
ret
pop
aas
repnz
jb
int3
imul
dec
pop
nop
mov
xor
into
sbb
xchg
icebp
sti
jecxz
repnz
jbe
fisubl
ret
movsl
mov
adc
popa
sub
adc
loopne
movsl
outsb
push
aam
sub
test
shlb
pop
jl
stos
xlat
stos
pop
dec
loop
push
pop
fidivrs
add
cltd
out
add
jbe
je
mov
and
cmp
sbb
cmp
and
cmp
bound
popf
mov
pop
inc
push
dec
adc
adc
push
dec
aad
push
push
adc
pop
shrl
mov
xor
push
add
cs
hlt
jnp
insb
scas
ja
pop
out
mov
inc
pop
pop
jl
into
inc
jge
pop
jmp
testl
mov
xor
addl
aas
dec
adc
aas
adc
stos
popf
mov
push
in
xchg
xchg
jns
cmp
imul
add
and
stos
mov
mov
push
inc
xchg
es
xchg
mov
and
cltd
sub
sti
sub
jmp
movsl
adc
push
cmp
push
fnstsw
sbb
ficoml
shlb
icebp
enter
orl
leave
jnp
ret
icebp
nop
push
mov
daa
es
xchg
mov
faddl
xchg
ret
test
inc
out
inc
pop
inc
sahf
mov
pop
test
mov
subb
push
mov
cmpsl
jl
fnstcw
cmp
arpl
nop
xchg
xchg
mov
pushf
sbb
adc
push
int3
lcall
cltd
jnp
and
jb
xlat
je
loope
push
aam
push
jnp
pop
cltd
int3
mov
fs
xor
je
rclb
mov
push
push
loope
mov
clc
into
fldenv
mov
imul
mov
ja
sub
enter
ljmp
loop
cmpb
stc
sbb
xchg
mov
xor
dec
mov
jmp
push
dec
dec
xlat
outsb
gs
loopne
popa
mov
int3
fwait
mov
mov
dec
addr16
and
xchg
xchg
into
fs
ljmp
mov
add
cltd
xchg
pusha
repz
aad
xchg
inc
inc
adc
mov
fmuls
add
lahf
pop
push
andb
sti
xchg
add
xchg
and
or
icebp
fstpt
push
jns
sub
cmpsl
inc
loop
mov
add
push
outsb
lret
xor
inc
and
jle
mov
cmp
mov
dec
imul
sbb
loop
inc
lahf
mov
ss
xchg
ss
adc
into
xor
lret
or
repnz
insb
hlt
xchg
outsl
push
xor
push
dec
push
ficoml
or
push
mov
fdivrl
add
movsb
jb
adc
lret
push
pushf
and
cmp
push
test
adc
mov
inc
enter
pushf
mov
fwait
sbb
shlb
daa
adc
rorl
mov
lahf
adc
jnp
jbe
bound
out
mov
lret
fisttpl
mov
movsb
enter
dec
dec
mov
push
jae
cs
dec
fldz
sti
mov
aas
aas
push
pop
in
hlt
aas
test
xchg
adc
lret
mov
test
aad
jnp
stos
into
mov
sub
jge
mov
enter
scas
js
frstor
fcomps
mov
add
lcall
mov
sub
mov
out
fnstenv
shlb
les
xlat
mov
popa
inc
orb
jmp
dec
out
or
jmp
insb
das
fwait
iret
adc
pushf
cli
adc
nop
je
fs
bound
int
cmp
add
call
popf
push
imul
aam
pop
mov
setns
xor
dec
cmpsl
popa
mov
lcall
arpl
or
shlb
iret
lea
xchg
xchg
test
adc
test
and
mov
outsl
stos
cmpsb
lods
xchg
rcrb
pusha
mov
ficompl
data16
fisubl
inc
cs
je
push
xor
pop
mov
lds
and
insl
mov
jb
mov
int
fsubrl
xchg
push
je
jle
or
sub
out
hlt
pop
sub
sahf
mov
arpl
jle
mov
jne
pusha
ficoms
push
cli
movsb
out
jmp
sbb
fsubs
sbb
insl
dec
xchg
jno
sub
cmp
add
jl
mov
stos
sbb
sbb
cmp
adc
cs
sbb
out
shlb
push
pushf
ss
lcall
insb
out
sbb
adc
arpl
test
mov
cmp
stos
mov
lds
and
mov
jle
or
andl
cmp
cltd
push
repnz
inc
push
jle
and
sub
lret
fistl
out
sbb
sbb
aad
ret
inc
lcall
sbb
popa
xor
mov
cld
scas
xor
aaa
fwait
outsl
xor
add
test
dec
ss
sub
lds
xor
out
mov
fsubs
cmp
cmp
rclb
push
and
jge
pop
xchg
mov
in
sub
sbb
pop
mov
stos
push
cmpsb
inc
inc
es
cwtl
mov
ret
mov
into
inc
push
adc
enter
xchg
icebp
cltd
lods
sbb
push
aaa
add
pop
in
daa
xchg
pusha
xor
pop
sti
mov
std
ljmp
pop
inc
aam
mov
ds
lods
cmp
sub
ret
mov
insl
dec
and
dec
xchg
mov
mov
fcomps
pop
xor
jb
jb
mov
sub
pop
enter
scas
dec
sbb
test
idivb
push
xchg
push
leave
add
mov
xchg
mov
and
les
lret
push
dec
mov
addr16
or
push
and
lret
ret
fadd
xor
fwait
add
push
mov
out
xchg
fmull
ret
inc
das
add
stos
cld
loop
test
movsb
dec
mov
roll
call
es
out
ds
lds
test
jbe
add
jns
out
mov
mov
arpl
dec
stc
mov
jle
push
inc
and
or
mov
aad
jecxz
mov
mov
lahf
pop
and
sbb
push
adc
inc
add
xor
cmpsl
aas
pusha
clc
dec
lret
mov
pop
pop
mov
mov
insl
add
adc
push
aam
mov
icebp
pop
xchg
sub
sub
cltd
aas
jb
inc
fdivrs
les
mov
cmp
rorb
pop
adc
sub
xchg
fbstp
xlat
scas
loop
je
cmp
pop
push
mov
xor
cmpsb
mov
add
sahf
cmp
gs
xchg
push
leave
pusha
nop
fcomp
cli
scas
mov
cli
out
mov
or
clc
popf
fimuls
stos
enter
loop
xchg
xor
sub
aas
sub
aas
sbb
cmp
push
repz
mov
cmc
or
ds
mov
loop
mov
lds
ds
rorl
nop
or
xchg
call
mov
xchg
fnstenv
sub
pop
inc
andb
push
add
pushf
or
jge
or
mov
jns
dec
test
enter
gs
mov
ffree
mov
std
mov
xchg
adc
imul
ficoml
ret
inc
std
sbb
xchg
ds
cmp
xor
fldenv
ret
ds
lahf
xor
dec
or
aad
repnz
push
mov
and
push
mov
mov
fsts
hlt
adc
movsl
movsb
dec
fwait
cmp
mov
jae
addr16
or
fnstcw
fadds
in
shll
out
test
ja
pop
in
fmull
fdivrl
in
aaa
mull
pop
and
mov
sub
or
inc
adc
jmp
insl
icebp
in
add
cmp
out
rorl
push
dec
rolb
push
mov
xor
jmp
icebp
test
dec
xchg
jns
xor
jb
js
jecxz
std
jl
sbb
pop
push
shll
fnstcw
push
loopne
xor
mov
out
ret
nop
mov
jnp
icebp
xor
push
mov
inc
imul
and
lahf
aas
mov
ds
push
out
jns
sub
add
xor
jae
mov
pop
rcrl
cmpsb
cmp
out
jp
xor
sbb
test
jb
repz
mov
test
fwait
push
push
xchg
aad
mov
xchg
push
mov
push
cli
sahf
push
add
popa
push
rorl
nop
sub
adc
aam
out
sbb
fmuls
cmc
xchg
jno
xchg
or
cwtl
cmp
lea
adc
sub
rol
enter
stc
lock
pop
stos
push
pop
mov
fstl
mov
les
in
jg
mov
imul
fnstcw
push
into
loop
and
cmp
inc
xchg
test
push
out
mov
cmp
sub
mov
jbe
pop
dec
xorb
ljmp
and
in
test
leave
ds
jnp
xchg
inc
icebp
cli
es
sarb
mov
cmc
in
out
jge
pusha
loop
popf
stos
leave
jmp
and
lahf
mov
jb
add
push
sbb
mov
fcomip
mov
xor
push
add
xchg
je
addr16
lret
mov
and
pop
pop
out
mov
fdiv
iret
outsb
push
ljmp
xchg
cmpsb
in
and
xchg
adc
inc
ljmp
ret
cmpsl
pop
arpl
adc
aas
mov
cmc
bnd
sbb
fdiv
sbb
push
and
ljmp
jge
rorb
out
loope
xchg
or
sbbl
popf
fs
xchg
out
pop
icebp
inc
or
cmp
add
jns
leave
loop
filds
fmul
jmp
sub
xchg
dec
add
dec
movsb
dec
bound
movb
cmp
mov
mov
movsl
jae
js
nop
out
jmp
push
insb
arpl
jp
std
sub
lahf
cmp
mov
dec
cmp
test
add
mov
out
ljmp
adc
adc
jmp
nop
dec
outsb
rep
fcoml
test
fsubrl
fidivs
test
xor
mov
es
es
data16
mov
mov
aas
fxtract
aaa
ret
adc
xor
mov
arpl
or
add
pop
pusha
dec
mov
cmp
mov
inc
scas
xor
or
sub
add
mov
je
jl
icebp
mov
or
test
ret
shrb
popa
push
fsubs
xor
mov
xchg
mov
pop
inc
add
jno
bound
pop
mov
test
lret
insl
incb
dec
mov
pushf
mov
negl
scas
daa
xor
mul
jp
iret
je
dec
add
lea
inc
and
popf
int
cmp
mov
ss
jae
push
mov
dec
sbb
lods
mov
unpckhps
ret
ret
repnz
shlb
cmp
jnp
mov
repnz
not
lcall
mov
add
mov
dec
cmpb
cmp
jmp
or
push
mov
push
xor
xchg
out
push
push
mov
shl
cmp
arpl
sbb
or
push
cmp
lods
cltd
inc
dec
sub
dec
ja
xchg
push
movsb
pusha
sti
or
movsb
into
add
stc
cmpsl
cltd
or
pop
inc
sarl
sbb
push
sbbl
inc
dec
ljmp
in
adc
js
popa
lea
cmpsl
jae
mov
pop
dec
rorb
add
out
sub
imul
dec
out
es
idivb
lret
mov
mov
filds
xor
sub
rorb
cmpsl
sub
or
rcll
shr
cmp
sbb
outsl
adcl
in
ret
lock
dec
add
xchg
nop
mov
mov
lods
or
ss
xchg
mov
fsubs
and
dec
hlt
in
push
and
mov
pop
pop
sbbl
sbb
mov
adc
into
daa
fstl
repnz
xchg
in
and
fbstp
outsl
cwtl
inc
mov
jo
mov
adc
push
dec
xor
inc
shrl
sbbb
imul
inc
push
xor
mov
ja
jge
test
in
pop
mov
shlb
loope
jl
and
sbb
jne
out
out
aad
cmp
mov
sahf
xor
dec
shrl
push
inc
dec
mov
xor
into
pop
stos
jp
and
repz
add
and
jo
jmp
cmp
xchg
stos
or
shr
cmp
cmp
inc
inc
push
in
repz
dec
nop
lcall
fldcw
dec
scas
jmp
mov
notl
sarl
and
xchg
push
or
xchg
xor
sbbl
call
add
cmp
mov
jbe
in
subl
sbb
in
sbb
mov
mov
jns
sbbb
test
loopne
pop
dec
add
out
stc
inc
xor
xchg
and
test
clc
mov
sbb
inc
mov
mov
lcall
pop
jge
pop
fimull
jge
push
mov
xor
arpl
mov
cld
lcall
push
sub
adc
or
setp
arpl
xchg
lods
jae
aam
push
push
out
sub
loope
aaa
push
jnp
negb
mov
dec
test
inc
cmp
xor
xor
repnz
pop
sbb
sbb
dec
xor
fisubrs
fisubrs
mov
push
cmp
out
xor
cli
cld
in
shlb
xchg
fistps
fisttpll
rcll
mov
inc
lret
cmpsb
movsl
imul
mov
sub
rsqrtps
jno
lds
jns
in
ficomps
jno
xchg
hlt
les
movsb
and
dec
mov
das
mov
cmpsb
xchg
mov
addr16
test
faddl
mov
test
xchg
out
sbb
pop
xchg
outsl
arpl
mov
fdivr
jne
leave
mov
jns
push
ja
test
movsl
mov
xor
sbb
inc
cmp
cli
mov
je
jmp
lods
adc
mov
pop
rolb
inc
test
faddp
jb
push
aaa
call
pusha
dec
push
bound
out
mov
shll
cmp
out
pop
popa
pusha
ret
outsl
mov
shll
mov
imul
cli
mov
dec
addb
fcompl
lret
lods
push
int
gs
fisubrl
in
cltd
push
xchg
xchg
mov
inc
pushf
stc
fiadds
fistpl
dec
jp
bound
outsl
cmp
push
cmp
xor
push
ljmp
and
lds
jmp
fldcw
xorb
lcall
and
cwtl
and
pop
mov
dec
dec
add
in
iret
cld
mov
insb
movsl
sbb
sti
rcrl
and
js
inc
cltd
jecxz
mov
xchg
pushf
pop
cmp
out
out
adc
add
outsl
xchg
jl
stos
inc
sar
xchg
jnp
cmp
lret
xchg
test
jl
fdivl
test
andb
xchg
dec
sbb
lock
fwait
jbe
das
pop
mov
shrl
xlat
outsb
dec
jmp
cli
adc
mov
mov
mov
call
test
test
scas
jns
cltd
add
xor
xor
mov
mov
jno
loopne
mov
or
mov
cwtl
push
dec
idiv
test
sub
rcrb
sub
out
sbb
hlt
cmp
and
xchg
cmp
jle
shlb
jp
pop
int3
lahf
loopne
or
xchg
int
xor
mov
lea
imul
rolb
mov
sub
outsb
ljmp
sarb
dec
pop
enter
push
dec
fsubr
rcrb
enter
popf
mov
andb
push
or
sub
sarl
fstpl
clc
xchg
ljmp
and
inc
imul
jb
jmp
push
aas
xor
cmpsb
int3
fwait
push
inc
cmpsb
inc
or
cmpsb
sbb
push
cli
xor
jnp
jno
add
mov
mov
push
mov
int
out
lock
ret
push
pop
dec
gs
dec
xchg
aas
lret
mov
popf
mov
sar
std
push
or
push
mov
mov
test
push
mov
add
jge
sub
loop
xor
sarl
int
sub
mov
push
shr
sub
jmp
ss
addr16
imul
xor
mov
cmp
sarl
inc
cmp
fimull
hlt
fisubs
mov
mov
scas
scas
xchg
jmp
mov
aas
sub
push
stos
pop
shrl
fldcw
mov
cmp
sub
adc
jg
subl
inc
jecxz
and
adc
push
loopne
out
pop
xor
sub
push
aam
lock
in
scas
jmp
dec
cltd
push
mov
mov
ja
stos
jne
sub
dec
in
orb
xchg
jnp
and
in
xor
roll
nop
adcl
call
in
andl
dec
in
xor
add
cmp
mov
mov
dec
fcomi
cld
js
aaa
ss
add
sbb
jb
sub
daa
push
inc
ss
mov
sub
push
insl
cli
sub
sub
xchg
or
imul
lods
loop
fimull
arpl
pop
mov
cmp
inc
mov
jecxz
or
sub
inc
xor
cmp
adc
pop
or
out
repz
cltd
out
mov
aas
pop
pop
clc
add
adc
out
jbe
mov
add
or
cmp
dec
cld
hlt
pop
pop
pop
push
jmp
jne
add
les
or
cli
call
inc
mov
push
outsl
and
and
xor
mov
outsl
mov
insb
and
sub
icebp
fildl
jmp
mov
mov
ljmp
push
mov
jne
push
in
cmc
pop
pop
sub
test
xlat
hlt
into
fbstp
sbb
and
mov
lock
js
shr
adc
dec
fcoms
loop
das
dec
cltd
mov
fcoml
testl
dec
sub
loop
shlb
push
adc
xchg
pop
rorb
xor
mov
into
sbb
int3
ret
xor
xchg
lea
out
leave
in
sbb
out
lods
movsl
mov
rolb
dec
ss
mov
pop
dec
lods
test
dec
xchg
sbb
iret
xor
repz
outsb
repnz
fidivrs
cmp
dec
sub
adc
in
ja
sbb
pop
xchg
cltd
ficompl
adc
fwait
dec
and
mov
cltd
pop
not
call
jno
aaa
and
nop
adc
pop
lods
ret
and
sub
pop
iret
movl
stos
iret
pop
xchg
or
push
stc
out
ljmp
adc
lret
and
jns
mov
ljmp
sbb
ret
or
push
addr16
mov
fwait
xlat
add
insl
out
fdivrl
in
mov
daa
in
ffree
test
jmp
and
adc
cwtl
jle
aam
ss
push
scas
cs
xchg
mov
xchg
mov
ret
push
jmp
pop
xchg
daa
sbb
inc
das
sub
ja
std
cltd
jae
mov
enter
out
mov
mov
test
rcr
xor
mov
pop
data16
pop
push
mov
mov
aas
sbb
cltd
jmp
rcrl
pop
ja
sub
or
data16
xchg
cmp
daa
outsb
int
sbb
mov
cmpsl
xchg
jae
xchg
cmc
fmulp
rorl
out
push
out
cmp
mov
shlb
pop
mov
fpatan
sub
test
adcl
pop
xor
ja
cmp
mov
out
jb
mov
in
into
roll
dec
ret
data16
add
stos
mov
inc
mov
pop
faddl
xorl
shlb
cld
ds
out
add
add
stc
add
sbb
inc
mov
push
jl
sahf
xor
jp
sub
xchg
mov
je
mov
je
or
mov
shrb
pop
adc
xchg
fsubrl
test
pop
test
popf
daa
pshufw
inc
scas
pop
mov
hlt
pop
out
mov
push
popa
push
mov
inc
mov
xor
aad
jecxz
test
mov
adc
inc
dec
lret
xlat
mov
rorb
out
fsubrs
repnz
sbb
nop
add
push
fdivrl
sbb
rcll
mov
fimull
mov
decl
dec
je
and
jne
adc
nop
fcomps
pop
cmp
xchg
flds
addb
pop
mov
jmp
cli
das
cmp
dec
out
dec
mov
dec
cmpsl
cld
cmp
lcall
rcr
das
and
lret
aas
xchg
in
sub
icebp
pop
fnsave
fcoms
jno
xchg
add
or
jge
rolb
jmp
lock
sub
mulb
cmp
jne
xor
jmp
push
mov
cltd
lret
inc
scas
add
jne
imulb
push
sbb
rolb
loope
stos
sub
sub
in
jp
scas
mov
test
jo
or
mov
imul
mov
in
xor
mov
mov
lahf
aam
cwtl
in
cmc
psubq
adc
scas
call
cltd
jb
pop
fsubrl
cwtl
sub
add
loop
pop
cmp
cmp
cs
cwtl
mov
mov
or
jmp
pop
lods
imul
enter
mov
push
jo
dec
inc
loop
or
dec
stos
sbb
pop
pop
mov
mov
xchg
push
inc
scas
test
jne
add
dec
das
and
test
fucomi
out
lcall
dec
inc
loope
callw
sti
in
push
jmp
inc
test
daa
xor
ds
ja
jae
js
std
jg
rolb
cmp
sub
push
nop
mov
xchg
or
jns
jmp
cwtl
mov
or
mov
push
data16
mov
pushf
in
mov
addr16
test
push
in
shll
pop
and
fisttpl
xchg
sbb
sub
mov
leave
jo
mov
mov
test
lcall
in
jl
sub
stc
jae
or
les
mov
push
cmp
push
js
mov
cmp
push
xchg
ret
clc
addr16
push
fadd
mov
jmp
mov
aam
and
and
aam
popa
sub
adc
sarb
cmp
sub
jmp
cmc
insl
xchg
cli
dec
movsb
cmp
fists
push
cmp
fistpll
lock
mov
imul
sahf
fdivs
not
pop
xor
outsl
data16
adcb
mov
icebp
leave
xchg
xor
test
sbb
decl
sub
jae
sbb
jne
pop
push
sahf
xchg
xlat
xchg
mov
ja
fsts
add
dec
jae
out
lahf
add
adc
jo
lds
mov
mov
out
cmp
push
mov
in
in
insb
hlt
push
aaa
dec
cmc
scas
ret
cmpsb
sub
pushf
push
aam
xlat
add
sarl
inc
out
lods
shrl
and
loopne
cmp
inc
jae
mov
inc
pop
push
or
stc
mov
xor
and
push
out
inc
ret
cmpb
pop
pop
adc
sub
nop
inc
lock
push
bound
dec
push
movsl
aas
mov
pop
push
jl
out
jnp
sub
repz
xchg
imul
shrb
dec
inc
adc
aad
gs
xor
icebp
adc
js
mov
inc
js
sbb
ljmp
je
leave
ret
das
fistl
in
or
loop
dec
sbb
jle
add
and
or
fstps
jno
push
fmull
lods
jae
dec
out
subb
leave
jp
dec
inc
and
sub
stc
xor
sbb
sub
xchg
jae
mov
ret
cmp
ss
cmpsb
cli
cltd
lcall
mov
pop
dec
pop
addr16
cmp
pushf
pop
mov
mov
cmp
ret
push
fstpl
xchg
pop
int3
fisttpl
out
out
cld
add
cltd
or
out
mov
push
leave
mov
out
fildll
push
cmp
in
and
mov
jb
js
repnz
mov
imul
clc
arpl
inc
repz
stos
dec
add
repz
pushf
xchg
call
jmp
stc
shll
in
stos
and
cmpl
cmp
mov
cmpsl
inc
lds
ret
fmuls
idiv
cltd
scas
push
les
push
pushl
jne
dec
or
fdiv
std
pop
xchg
cli
inc
iret
pop
lods
sbbb
fisubs
jle
xchg
or
std
jg
mov
jno
repnz
imul
sub
test
js
cld
push
mov
scas
or
iret
fdivrl
sbb
sub
popa
gs
pop
inc
pop
cwtl
and
ss
dec
roll
inc
jae
sub
mov
in
and
scas
pop
jg
xor
popf
or
outsb
insl
mov
add
enter
fistpll
cmpsb
out
and
pusha
adc
xor
and
mov
std
pop
sub
xor
fidivs
jo
popf
loop
mov
repz
lods
int3
mov
jns
adc
sub
aaa
aad
divl
cs
or
push
push
sbb
inc
setge
jno
fldl
sti
and
xchg
in
sbb
aaa
xchg
mov
cs
pop
icebp
cmp
add
jmp
test
pop
insl
jne
dec
push
sub
mov
jl
sbb
jge
mov
shrl
stc
lods
add
ja
pop
lea
or
dec
div
inc
loop
mov
mov
inc
cmpsl
fiadds
dec
int
stos
inc
mov
das
lret
mov
out
jl
dec
jecxz
xor
aam
push
and
mov
xlat
mov
or
add
aaa
xchg
rolb
iret
dec
pop
imul
mov
in
dec
mov
pop
lods
cs
mov
jge
in
clc
jns
push
push
mov
test
sub
push
pop
add
cmp
mov
fs
imul
jne
inc
cmc
dec
xchg
mov
or
jae
pop
cmp
sahf
nop
rol
add
mov
ficomps
cmp
mov
and
push
hlt
dec
pop
in
imul
ss
mov
jle
push
mov
or
repz
out
ja
out
mov
mov
popa
loope
outsb
jg
add
bound
add
aam
inc
or
mov
dec
sahf
push
fmuls
insl
push
ja
adc
mov
mov
cmc
jge
outsl
or
mov
dec
mov
insb
pop
or
je
or
hlt
or
adc
aaa
push
push
mov
movsb
fisubs
mov
lea
dec
shll
out
and
jp
xor
ss
mov
sub
jmp
jb
add
xchg
scas
popa
fdivl
inc
jmp
and
lcall
stos
adc
xchg
nop
push
int
inc
sti
cmp
push
test
inc
cld
cs
adc
ret
jl
clc
xor
mov
and
ret
sub
mov
push
shll
jg
adc
sbb
jecxz
dec
adc
imul
in
lcall
sub
iret
add
jmp
stos
ret
sub
sbb
mov
fldcw
xchg
andl
add
mov
adc
push
pop
pop
aaa
fnsave
lods
pop
out
dec
sbb
lcall
jne
or
out
dec
stos
pop
mov
pop
fsubl
push
ja
mov
lret
sub
int3
add
xchg
das
cmp
jp
or
jle
dec
xchg
enter
inc
dec
adc
repz
pushf
mov
pop
mov
jo
arpl
std
orb
int
pop
pushf
outsb
pop
mov
dec
test
jmp
push
dec
jg
clc
test
addr16
ja
sub
jge
or
insl
mov
mov
or
adc
ret
pop
xor
mov
sbb
sub
and
enter
mov
jle
mov
scas
fcomp
addr16
lods
sti
sbb
sbb
sarb
dec
mov
xor
pop
jmp
clc
aam
std
mov
js
pop
in
push
sarl
rol
sti
inc
std
repnz
je
iret
out
aam
ret
vpunpckhwd
add
inc
and
mov
lcall
ret
mov
mov
out
mov
aam
lods
inc
mov
jns
or
adc
and
sbbl
dec
aas
sbb
sub
inc
push
cmp
frstor
ljmp
nop
stos
subl
dec
cld
sti
orb
adc
push
loope
inc
pop
xchg
hlt
inc
sub
push
aaa
cltd
xchg
pop
xchg
push
sbb
dec
push
and
sbb
popf
cmpsl
fdivrs
mov
loope
jnp
ret
mov
cmp
xchg
cmc
xor
mov
fidivrs
leave
iret
jg
mov
inc
jae
jnp
loopne
push
sahf
das
stc
jp
sub
sub
push
inc
mov
mov
jmp
or
out
sub
xchg
lcall
stc
mov
dec
cmp
cmc
hlt
jns
push
nop
leave
shrb
jmp
rsm
jmp
das
lahf
iret
push
pop
or
mov
pop
std
push
aam
xchg
push
ljmp
adc
out
and
add
incl
shll
subb
in
mov
dec
les
inc
cmpsb
jo
pop
mov
fidivrl
enter
xchg
cltd
clc
xchg
jecxz
push
les
sbb
ljmp
adc
xor
movsl
sbbb
paddq
push
sbb
and
inc
shrl
repnz
ja
lds
mov
sub
insb
add
rclb
icebp
push
lods
mov
outsl
aaa
cmc
pop
sti
cmp
xchg
add
les
push
cmpsl
pop
aam
rcr
jo
iret
inc
in
sub
sarb
test
popa
call
ret
pop
and
mov
imul
xchg
neg
test
push
mov
inc
adc
and
and
xlat
pop
cwtl
xchg
add
cmp
pop
std
cmpsb
hlt
mov
mov
or
mov
push
negl
in
insb
orb
stc
cld
repz
sti
imul
dec
or
dec
push
add
push
repnz
movsl
fsubrs
cmpsl
push
mov
dec
mov
mov
push
enter
mov
das
pop
ja
xchg
sbb
adc
pop
push
dec
or
das
dec
test
sbb
mov
cmp
mov
sub
push
and
mov
xor
cmp
pop
jbe
in
adc
lock
fwait
jns
jnp
xchg
sub
arpl
call
and
aaa
cmpsb
add
fistpl
mov
lret
loope
jno
mov
rorb
cmp
es
addr16
cmp
dec
mov
call
pusha
xchg
mov
mov
add
push
andb
dec
dec
out
nop
mov
xor
pop
stc
mov
sbb
lcall
ja
ss
xchg
icebp
pusha
inc
ljmp
lcall
inc
mov
inc
jb
cmp
mov
leave
fwait
inc
or
mov
push
icebp
scas
mov
repnz
pop
in
xor
sti
jb
pop
push
aaa
js
mov
lock
pop
mov
adcb
inc
imul
leave
fimull
fcmovne
pop
and
test
test
cmp
or
rcl
aas
testb
lahf
cmc
mov
jg
jl
dec
jo
bound
scas
inc
mov
push
mov
dec
rcrb
jmp
jo
cli
daa
mov
aas
cmpsb
clc
adc
xor
sbb
mov
int3
mov
orb
fdivrl
dec
or
jp
into
jp
aad
xchg
icebp
lods
xchg
mov
mov
sahf
dec
mov
bound
daa
in
mov
xchg
push
push
sarb
scas
bound
pop
subb
notb
push
pop
repz
out
cmp
or
xchg
bound
scas
addl
mov
inc
lcall
fsubr
enter
inc
cmc
data16
cmp
cmp
mov
cmpb
jg
sbb
xchg
out
lret
cwtl
or
cmp
fcomps
fldt
push
loopne
inc
lods
cmc
sbb
lahf
mov
lods
insl
mov
jne
dec
sub
cmp
or
incl
fs
stos
xchg
cld
jno
mov
mov
inc
lds
js
repz
sahf
jle
or
push
outsb
push
inc
cmp
aas
ja
div
cmc
jns
loope
fs
and
sub
mov
notl
pop
mov
fadds
inc
mov
and
sub
jae
or
or
icebp
pop
lock
in
mov
imul
fs
aam
es
pop
mov
pop
mov
mov
in
sti
mov
xchg
mov
pop
mov
cmpsb
mov
inc
iret
fisubs
jp
cmp
movb
inc
daa
daa
cmp
fldl
test
pop
dec
pop
das
sbb
cmc
cld
loope
in
adc
jl
rorl
and
xchg
test
cmp
mov
stc
lret
inc
popf
aam
xchg
aam
dec
inc
cmp
and
cmp
push
adc
xor
dec
fcmove
movsb
scas
xlat
fildll
xchg
xor
mov
nop
sbb
mov
xor
lret
sub
cmpsl
stc
add
mov
loop,pt
rol
sub
xchg
adc
mov
dec
inc
xorl
repz
aam
inc
into
adc
pop
xor
movsb
lock
daa
mov
test
icebp
call
pop
push
inc
pop
shl
icebp
push
fnsave
in
dec
and
or
fcompl
fists
mov
leave
pop
test
add
jb
int
sub
hlt
adc
inc
xor
adc
call
sti
shll
mov
scas
xor
inc
pop
dec
or
repnz
aad
in
jge
jl
insl
orb
cmpb
mov
fbstp
psrad
push
enter
popf
outsb
mov
xchg
pop
push
sub
fwait
add
add
and
jmp
out
orb
sub
push
je
or
retw
xchg
push
mov
lcall
lock
sub
les
fnop
and
jl
loopne
push
sbb
imul
jno
dec
rolb
aad
push
lahf
inc
outsl
mov
pop
xor
test
cmc
stos
dec
inc
pop
popa
ljmp
or
or
cmp
out
rorl
push
mov
xchg
fwait
js
push
enter
add
mov
icebp
outsb
shrb
pop
lds
enter
fisubs
jmp
loope
xor
dec
test
adc
jno
in
inc
rcrl
iret
mov
fsts
add
and
std
mov
dec
out
mull
clc
cmpsb
cmpsl
pop
pushl
xchg
hlt
je
cs
lods
and
fstpl
out
fwait
xchg
pop
xor
push
push
or
das
mov
add
cli
subb
ja
outsl
mov
dec
enter
data16
scas
push
rorb
lods
inc
aad
int3
or
test
inc
fmull
jne
xor
add
lods
sbb
lock
mov
jbe
pop
in
movsb
rorl
sbb
roll
sub
xchg
xorb
movsb
mov
shl
repz
adc
clc
or
popf
jae
and
cltd
lock
jle
dec
xor
jno
pushf
pop
loope
and
xchg
and
jbe
mov
adc
mov
nop
outsb
hlt
or
push
lahf
mov
dec
pop
je
mov
imul
xchg
subl
mov
in
fadd
fldln2
or
sub
xor
out
pop
pop
pushf
cmp
lcall
bound
mov
pushf
jmp
sub
outsl
imul
nop
or
lahf
test
sub
mov
adc
insl
lods
clc
in
sbb
mov
cmp
jmp
rcr
lods
mov
stos
cmpsb
loopne
adc
mov
cld
or
insb
sub
dec
sbbl
fs
mov
into
inc
cld
in
push
push
cmpb
pop
negb
push
mov
xchg
push
or
push
push
mov
adc
aaa
lret
dec
or
fistl
lret
aas
xlat
rclb
les
push
das
pop
jge
outsl
addr16
adc
scas
jl
imul
jle
cmpsl
and
je
mov
mov
mov
dec
and
jnp
or
ds
mov
lds
push
sub
cmpsl
cwtl
fsubrs
js
sub
subl
loopne
mov
xchg
jnp
or
scas
mov
fstp
fstpl
out
sbb
je
push
add
mov
sbb
popa
insl
addr16
insb
jecxz
outsb
pop
dec
lcall
fstps
push
cltd
jl
push
add
pushf
insb
iret
mov
mov
xor
mov
or
inc
loop
mov
push
mov
lock
jmp
xchg
test
push
inc
xchg
xchg
out
ret
xchg
jb
bound
and
in
mov
fs
test
add
scas
jno
repnz
leave
mov
mov
rcrl
cmc
shl
dec
sbb
pop
and
mov
test
test
call
add
popa
lds
arpl
jno
xchg
cmpsl
and
mov
mov
daa
ja
icebp
out
pop
std
pop
cmc
jp
fsubrp
mov
mov
pop
arpl
or
xorb
sub
mov
mov
icebp
xchg
pop
lcall
ficompl
lds
dec
jle
imul
fisttps
add
int3
xor
je
fldlg2
sbb
out
sub
or
cmp
sbb
leave
int
jbe
add
sbb
cli
sbb
or
test
pop
mov
jmp
int
cmpl
aaa
clc
mov
in
mov
in
or
mov
xchg
xchg
cmc
enter
dec
addr16
leave
dec
fildll
pop
fstpt
test
popf
lcall
cmp
xlat
xchg
mull
test
enter
adc
dec
cmp
pop
push
rolb
mov
cmp
fbld
cltd
sub
push
jmp
mov
mov
lea
sbb
sbb
pop
push
jl
pop
jbe
sbb
cmp
inc
popw
in
mov
rolb
cmp
mov
incb
or
cli
sbb
sub
es
inc
popf
add
add
or
cwtl
xchg
pop
rorb
je
pop
outsl
daa
adc
sub
ret
mov
or
mov
stos
adc
sti
jge
dec
aam
pop
mov
dec
stc
push
xor
jb
jns
andb
outsb
mov
adc
cmpsb
in
xchg
jne
insb
pop
jb
mov
iret
imul
cs
jo
mov
xor
pop
scas
iret
or
cmp
fnstsw
jge
std
push
dec
xchg
sar
mov
xlat
pushf
add
in
sbb
xchg
cmp
aaa
pop
xchg
daa
cmp
dec
sub
pushf
loopne
aaa
mov
jbe
jmp
cli
sbb
popf
aad
xchg
dec
orl
mov
cmpsb
insl
scas
jp
imul
pop
nop
pop
hlt
lea
fs
jne
sub
cmpsl
leave
daa
call
adc
rcrb
fs
pop
and
or
xchg
lods
stc
push
aas
mov
adc
in
outsb
adc
js
into
aaa
and
in
pop
jo
dec
popf
mov
lods
inc
enter
fimuls
inc
pop
loope
out
mov
xchg
xor
add
push
std
in
lock
cmp
push
cmp
lea
inc
cmpsb
adcl
outsb
sub
outsb
xor
cld
ret
or
ja
out
xchg
imull
outsb
scas
addr16
ret
or
popa
inc
das
fwait
sbb
adc
and
mul
int
mov
mov
adc
addr16
adc
xchg
mov
pop
lcall
in
outsb
sarb
xchg
sub
mov
scas
jae
mov
mov
movsb
jmp
or
call
or
mov
movsl
jge
lods
ret
sbb
mov
inc
sbb
push
sbb
jmp
pop
cmp
sbb
cli
dec
sbb
test
jb
push
add
clc
lahf
mov
jnp
aam
lea
insl
jle
mov
test
cmp
rorl
dec
and
enter
jge
lods
mov
sbbl
mov
mov
jne
cmp
sti
dec
cmp
or
add
imul
stos
pop
adc
lds
mov
fidivrs
in
fcomps
mov
or
subb
test
cmpsl
mov
cmpsb
add
popa
mov
test
subl
mov
loope
cmp
jb
shll
xlat
test
or
fcmovne
dec
aad
add
jmp
mov
mov
adc
jp
cli
jp
push
fldcw
mov
in
mov
int3
fldt
jmp
int3
xchg
dec
inc
insl
inc
jbe
and
pop
imul
das
mov
and
scas
mov
pop
outsb
outsb
add
inc
test
sbb
outsb
les
add
push
jle
lcall
jbe
mov
das
mov
pop
cld
pusha
push
rcll
in
pop
push
jae
cmp
push
inc
xchg
adc
pop
pop
jb
mov
div
mov
out
lahf
jecxz
sub
mov
xchg
mov
xor
das
push
out
movsb
mov
xchg
mov
xchg
into
test
imul
push
jg
dec
call
sarb
out
mov
in
jmp
cmp
stc
movsb
inc
call
arpl
iret
je
gs
enter
ja
dec
into
or
movsl
jae
enter
dec
and
xor
xchg
out
add
ret
xor
push
out
clc
adc
into
push
fidivl
lock
pop
xor
arpl
fnstcw
push
xor
dec
xchg
jbe
mov
mov
xlat
mov
out
jecxz
lds
mov
lahf
ss
imul
or
sub
xor
jecxz
sub
hlt
fwait
lret
cmpl
mov
xlat
push
loopne
xchg
pop
xor
enter
outsb
movsl
notl
mov
test
mov
push
pop
xchg
dec
push
inc
insb
add
sbb
add
lcall
into
es
fs
cmp
mov
xchg
jo
sahf
push
push
dec
cli
fstcw
pop
cmp
or
jl
sub
xchg
test
sub
dec
xchg
jl
and
and
xchg
adc
push
mov
mov
jbe
inc
loopne
fiaddl
das
xor
ret
lahf
push
inc
mov
ja
push
jne
in
add
insl
incl
xorl
jns
and
popf
push
mov
sahf
mov
jno
mov
cmp
inc
test
ss
mov
xchg
xor
cltd
outsl
iret
jne
sbb
and
pusha
mull
fiadds
push
inc
outsl
mov
test
push
testl
jb
push
movsb
fcomip
jnp
add
cmp
mov
mov
lret
call
in
mov
test
repnz
arpl
add
jle
sub
and
add
ja
in
jp
sub
mov
shrl
inc
sbb
push
dec
adc
jge
mov
mov
in
rol
aaa
mov
jl
inc
jne
inc
in
jg
lcall
lods
dec
adc
add
add
repz
add
insb
adc
add
add
adc
add
add
add
adc
add
add
add
lcall
add
adc
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
popa
cmc
add
add
add
add
mov
xchg
xor
cmpsb
fsub
jg
jns
mov
les
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
push
sbb
add
and
or
ret
popa
add
int3
xchg
add
mov
add
jo
xchg
push
mov
adc
inc
ss
adc
gs
mov
mov
dec
sbb
movsb
pop
mov
jo
cmc
cwtl
decl
inc
sbb
fs
cmp
xor
cmp
push
push
mov
in
xor
pop
lea
inc
cld
add
add
lock
inc
or
orb
mov
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
scas
jnp
test
rep
out
iret
and
cmp
das
sbb
push
arpl
in
sbb
push
call
jmp
je
push
test
or
add
cmp
push
cmp
and
call
test
cmpl
enter
mov
cmp
adc
dec
add
lea
push
inc
xchg
xor
adc
test
push
adc
negb
idiv
sub
xchg
mov
sub
or
lret
add
lcall
daa
mov
push
adc
push
inc
cmpsb
jnp
mov
fldl
leave
jne
int3
ja
add
icebp
test
push
push
and
push
lea
push
cmp
mov
sbb
xchg
inc
lds
aas
shrd
adc
sarb
push
dec
inc
jns
inc
addr16
jne
mov
pop
dec
inc
add
add
movb
sbbl
jae
mov
adc
movsb
add
push
clc
sub
sbb
fdivl
xor
add
pop
or
pop
ret
adc
cld
xchg
std
jo
mov
mov
loopne
orl
xchg
and
dec
xor
jle
ret
ror
sti
and
push
push
jne
ret
pop
push
xchg
pop
add
jmp
popa
push
xchg
leave
push
andl
xlat
mov
shll
adc
call
aas
add
add
xor
push
call
aam
jb
leave
pop
or
or
dec
and
pop
and
pop
loopne,pn
push
clc
ud2
mov
adc
out
cmp
xchg
insb
push
fdivrp
inc
ds
adc
add
cmp
jge
xor
cs
cld
add
add
sub
not
jge
add
enter
sbb
sub
ret
shr
int3
rclb
xchg
push
mov
add
lret
out
cwtl
inc
jmp
and
pop
mov
xor
xor
push
xor
mov
pop
jmp
notb
mov
sbbl
add
jbe
push
push
call
pop
mov
dec
aas
adc
out
shl
lods
jle
pop
imul
test
inc
int
int
loope
leave
loopne
xchg
sub
dec
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
test
fidivl
cmp
ret
add
pop
mov
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pop
test
dec
push
hlt
push
fs
or
cmp
test
mov
push
fistps
mov
in
mov
lock
and
adc
adcl
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
add
decl
dec
stos
adc
or
loopne
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
lret
sti
inc
add
rorb
cmp
ljmp
lahf
inc
inc
rcll
ljmp
jmp
jnp
push
push
push
es
call
sbb
mov
ret
adc
dec
cmc
inc
sbb
or
adc
mov
adc
inc
testb
xchg
mov
aas
daa
push
in
imul
je
in
test
cmp
jmp
and
fdivrl
mov
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
adc
push
jmp
pusha
das
add
jns
lock
jno
xchg
cmp
pop
push
dec
sbb
xchg
add
inc
xchg
lods
jmp
inc
popf
push
xlat
sub
mov
sbb
sub
mov
shr
push
add
sbb
dec
or
push
inc
jmp
pop
ss
pop
and
pop
jmp
sbb
shl
cmp
mov
jl
sbb
iret
shr
push
loope
push
lea
push
je
add
shrl
mov
test
testb
mov
pop
mov
sbb
test
mov
decb
imul
and
xchg
or
and
std
test
dec
xchg
insb
add
sub
xor
pop
lods
cmpsb
jmp
dec
add
jbe
lret
scas
add
mov
cmp
add
and
outsb
je
idivl
lds
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
push
jne
xchg
xor
popa
xchg
js
pop
ja
testb
cmp
mov
aas
inc
js
sub
aaa
dec
push
inc
cwtl
shrl
outsb
fs
add
xlat
mov
movl
mov
sbb
jl
pop
imul
hlt
arpl
orb
out
bound
jne
lret
and
jo
and
adc
xchg
inc
imul
dec
fisttpll
popa
push
lods
dec
outsb
inc
xlat
insl
inc
and
pop
call
push
jne
jns
sbb
mulb
sbb
cltd
lahf
and
xchg
or
jecxz
cmc
adc
jbe
sub
je
pop
push
or
xor
mov
jmp
or
cmpsb
xor
test
adc
sbb
in
addb
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
adc
add
add
add
add
adc
add
push
add
add
and
push
add
push
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
