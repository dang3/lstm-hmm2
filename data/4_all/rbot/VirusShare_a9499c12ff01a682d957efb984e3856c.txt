out
pushf
loop
cmp
imull
jno
pop
inc
jns
pop
dec
adc
push
in
or
inc
cmp
and
xchg
mov
ljmp
add
fmuls
sbb
ds
push
and
pop
pop
lea
sbb
sub
mov
adc
icebp
and
je
ret
sub
stos
mov
jp
sub
mov
adc
icebp
fisttps
pusha
stos
outsl
pop
sbb
and
dec
mov
shl
adcb
popf
adc
inc
loope
xchg
lcall
mov
add
pushf
adc
les
inc
std
sbb
nop
xor
mov
fwait
mov
bound
and
out
mov
cmp
daa
sub
fildll
nop
mov
push
jmp
mov
lahf
stos
fwait
add
test
lret
and
cmc
adc
aas
mov
pop
dec
jnp
mov
insl
arpl
inc
pushf
std
mov
popf
jg
sbb
imul
bound
xor
mov
jno
ret
les
sub
outsb
mov
push
adc
test
loopne
sub
sarb
and
xorl
adc
popf
dec
mov
push
pop
clc
fs
mov
sub
addr16
mov
in
adc
lds
js
mov
daa
cmp
out
xor
lds
loopne
inc
in
clc
les
inc
and
push
in
and
and
mov
xlat
sti
and
xor
mov
xor
test
lret
popf
or
loope
aaa
loop
mov
cmp
xor
dec
out
sbb
loop
add
add
push
inc
cli
movsb
cmp
cmp
xor
and
iret
cli
add
das
movsl
std
push
inc
cmp
jns
movsb
clc
scas
mov
jb
adc
cmp
sbb
sti
xor
pop
mov
jmp
mov
movsb
pop
xchg
test
add
sahf
imul
dec
mov
subb
xor
fs
and
and
push
icebp
jno
lret
leave
rorb
unpcklps
inc
jp
add
push
mov
push
inc
gs
xchg
clc
ret
enter
rcl
mov
nop
and
or
sbb
movsb
add
sub
pop
jmp
jmp
icebp
in
mov
jecxz
fucomip
je
cld
fwait
mov
mov
push
mov
sub
psraw
jmp
and
push
sbb
xchg
pop
iret
into
add
mov
cmp
gs
int
int3
sbb
sbb
or
mov
adc
movsl
sbb
cmp
push
leave
movsb
add
stos
std
imulb
dec
cmp
insb
and
lcall
ret
loope
jg
sub
push
pop
adc
ss
sbb
pop
fsubrs
iret
jp
xor
lea
repnz
sub
pop
add
mov
cmpsl
outsl
icebp
jb
sub
sub
ljmp
negl
pop
jne
dec
xchg
sbb
ret
lret
inc
in
sbb
dec
xchg
pop
lods
mov
jb
fmuls
int3
orl
adc
scas
lds
aas
pop
xor
jl
out
roll
jmp
adc
mov
xor
das
ret
sbb
adc
sbb
inc
in
lock
mov
shlb
mov
sarb
test
stos
lahf
pop
cmc
es
imul
gs
sub
mov
xlat
add
pop
mov
lcall
push
mov
leave
pop
push
mov
push
ljmp
mov
push
mov
std
sbb
cmp
js
int
pop
mov
js
push
mov
repnz
mov
lods
push
je
xchg
and
fdivrl
jmp
pop
lcall
imul
rolb
or
dec
push
inc
mov
pop
cmpsl
mov
inc
in
mov
stos
or
cmp
int
cltd
mov
sbb
test
and
adc
dec
mov
mov
jae
int3
mov
sub
loop
or
aas
negl
cmpsb
push
adc
in
sbb
daa
cmp
push
mov
xchg
push
xchg
stc
jne
roll
jge
imul
andl
jmp
mov
insb
aaa
repnz
jae
jmp
xor
lods
notb
xchg
and
and
mov
pop
dec
loop
mov
ficompl
xor
inc
inc
lret
lahf
jmp
sub
sti
in
xchg
outsl
cmc
cmc
pinsrw
insb
sub
pushf
mov
fisubs
mov
nop
stc
push
mov
into
jecxz
and
icebp
dec
enter
scas
iret
out
inc
nop
lahf
push
pop
mov
hlt
loopne
mov
adc
push
mov
bound
shlb
inc
ret
jl
push
inc
mov
arpl
icebp
pushf
add
imul
mov
push
in
sub
cmc
cwtl
sti
inc
cltd
sbbb
dec
mov
push
jecxz
push
xor
jecxz
das
inc
cmp
stos
pop
iret
cli
inc
ret
ljmp
lret
pop
xor
aaa
das
push
lahf
and
insl
sub
and
adc
lds
sub
fwait
mov
jae
mov
jmp
push
test
int3
dec
mov
scas
test
rcrb
mov
pop
and
pop
int3
or
gs
aam
or
sbb
dec
divb
dec
icebp
in
sbb
jne
inc
addb
or
cmp
fdivl
lods
adc
hlt
sti
jp
fsubl
insb
xor
lea
mov
shr
fs
cmp
xchg
lahf
popf
clc
sub
adc
std
adc
push
int
rcrl
out
movsb
lcall
je
jno
sti
daa
xor
les
aas
insb
xchg
sbb
dec
stos
jg
pinsrw
mov
pop
imul
push
pushf
mov
rcrb
int3
dec
push
in
mov
xchg
das
stos
repz
mov
sbb
jecxz
pop
pushl
in
loope
add
xchg
aad
or
sbb
push
mov
inc
inc
sbb
adc
leave
pushf
adc
add
insb
sbbb
imul
cwtl
repnz
mov
iret
add
mov
aas
mov
loope
cmp
test
iret
cltd
loop
xor
call
daa
out
jge
sahf
sbb
inc
sub
iret
adc
cli
xor
xor
pop
negl
fwait
mov
xor
faddp
lods
push
fnstenv
test
loop
inc
xlat
cwtl
sahf
stc
or
clc
inc
outsl
mov
hlt
repnz
aam
pusha
and
mov
pop
and
mov
lahf
pop
mov
fwait
shll
jne
lds
aas
daa
js
loope
pop
mov
lock
mov
jp
leave
inc
dec
push
pop
lods
scas
mov
add
cmp
unpcklps
xchg
pcmpeqb
cmp
addl
sarb
pop
pusha
pop
arpl
mov
adc
test
mov
dec
mov
daa
or
mov
or
ror
pushf
enter
lea
jne
stos
js
mov
hlt
loope
pop
loop
sbb
add
stos
mov
push
gs
aaa
pop
mov
mov
fistps
pop
mov
ss
and
fiadds
lret
and
sahf
fcom
sbb
adc
aaa
mov
mov
ljmp
cmp
cmp
addr16
jl
mov
jmp
jb
jge
or
ret
jmp
push
iret
popa
jno
fwait
adcb
mov
ret
cmp
inc
adc
popa
xchg
movsb
mov
repz
or
fwait
dec
mov
inc
mov
cmp
adc
jle
xchg
test
cmp
push
test
and
sti
pop
pushl
push
xchg
scas
cs
lret
mov
lds
xor
push
lahf
and
lds
shll
mov
or
adc
ljmp
int
movsl
mov
loope
stos
adc
dec
outsb
cltd
jb
pop
push
push
test
push
js
cmp
enter
pop
out
or
xor
imul
sarl
mov
cmp
push
inc
faddp
ss
movsb
aaa
in
add
iret
adc
in
cmpsb
sub
dec
lock
inc
mov
ljmp
mov
jo
ret
mov
and
mov
fs
cwtl
adc
mov
ja
dec
or
and
xorb
das
pop
sub
out
jbe
div
cmp
pop
pop
loop
jae
lret
daa
mov
arpl
pusha
xchg
mov
rcrb
pop
out
fwait
outsb
mov
mov
pop
push
xchg
cmp
push
cmc
imul
jne
lret
enter
es
cltd
in
call
xor
cld
popa
sahf
xor
mov
pop
mov
scas
mov
pop
mov
add
clc
rcrb
lds
mov
loopne
xor
mov
hlt
add
dec
out
js
cmpsl
rorl
jmp
cmp
sbb
gs
push
into
movsl
mov
xor
mov
push
xchg
aam
lret
repnz
push
add
pop
pop
cmp
fnstcw
inc
sub
rcrl
sub
xor
or
mov
cltd
mov
mov
movsl
mov
mov
int
sub
mov
jb
lcall
clc
xchg
popa
mov
mov
lret
jns
and
jmp
sti
xor
cmpsl
fwait
sahf
xor
pop
sub
ja
daa
fsubr
sahf
sub
hlt
fildl
push
push
mov
mov
mov
popa
movsl
repz
into
in
jmp
je
fcmovnu
dec
sub
adc
test
mov
mov
and
cmp
push
in
and
mov
or
andb
jae
mov
into
xchg
sub
repnz
leave
cmp
test
push
xor
mov
inc
mov
std
add
xor
test
push
or
lea
insb
cli
pusha
xor
add
mov
lods
ja
cli
fsubrl
and
jl
sti
push
ja
mov
aas
es
xor
mov
jmp
mov
ljmp
cmpb
jne
js
stc
xlat
loop
insb
pop
mov
sbb
movl
faddl
pop
inc
outsb
outsl
and
sbb
dec
pop
mov
arpl
jne
int3
sbb
fs
jg
aad
mov
and
push
push
nop
sarl
data16
dec
lret
push
mov
adc
data16
mov
xchg
sahf
jae
push
sub
std
in
add
adc
stc
mov
mov
test
sbb
inc
push
ljmp
adc
addr16
loope
sti
lock
sti
rcrl
aaa
cli
mov
push
imull
mov
fs
and
mov
fidivrl
popa
in
in
scas
mov
jno
mov
xor
xchg
sbbl
inc
lds
add
xlat
and
jnp
cmpsb
xor
and
loopne
mov
mov
test
push
es
clc
and
adc
fisubs
xor
mov
xchg
pop
nop
jecxz
add
xor
sub
add
adc
sub
inc
pusha
mov
add
call
jge
std
push
lds
fldl
pop
aas
xor
jmp
into
pop
or
shll
sbb
packuswb
sahf
scas
les
push
xchg
lea
xchg
xlat
pushf
inc
leave
dec
cmp
dec
gs
adcb
clc
sub
xchg
scas
jecxz
xchg
repnz
rclb
std
dec
adc
xor
adc
aas
in
cmp
jae
push
lret
test
ret
pusha
jp
scas
push
push
aas
mov
pusha
and
push
cmp
cwtl
xchg
std
out
movsb
jb
cli
push
add
testb
jbe
xor
mull
jecxz
xor
jmp
lock
pushf
std
fbld
sti
sub
scas
mov
inc
push
mov
cmp
adc
sub
cld
adc
mov
xchg
push
aam
mov
insl
stc
sbb
dec
in
mov
stos
mov
push
sbb
inc
lret
int3
add
sbb
mov
inc
xlat
mov
lret
repz
dec
insl
outsl
out
subb
ja
push
pop
fnstsw
mov
in
pop
cld
call
fmuls
pusha
pop
aam
xlat
rorl
addl
fdivrl
pusha
lret
push
xchg
outsl
clc
leave
xor
ret
movsl
mov
dec
sub
loope
lods
and
dec
in
clc
adc
or
out
aaa
rclb
pop
insb
mov
call
or
pop
mov
les
test
imul
mov
cmp
inc
mov
enter
cmp
cmp
loope
shll
push
mov
jecxz
xchg
mov
push
icebp
test
sub
jne
pusha
mul
xchg
lcall
in
inc
aam
push
popf
add
lods
je
repnz
push
in
push
jbe
sub
in
and
xor
dec
sub
sti
or
test
inc
push
and
fmulp
scas
jae
fwait
inc
ss
shl
out
fadds
cmc
inc
add
dec
fcomps
fsubl
mov
lea
mov
test
sub
das
push
mov
int
mov
push
ljmp
pop
notb
movsb
in
nop
adc
int3
sub
push
push
fstl
movsb
je
test
test
je
stos
loop
sub
mov
xchg
pop
mov
mov
jmp
push
pusha
ja
mov
jnp
push
aaa
test
add
insl
fistpl
pushf
mov
xor
iret
xchg
jg
loop
sbb
es
loope
ds
insl
mov
je
daa
lret
sub
inc
loope
push
jbe
dec
mov
jnp
adc
test
leave
lgs
lahf
push
mov
or
sub
jmp
jl
ja
dec
adc
in
in
in
gs
in
mov
push
sti
neg
sti
jp
cmp
leave
lods
js
pushf
mov
xor
subl
movsl
jae
mov
or
hlt
in
mov
jecxz
or
fistpl
add
push
mov
lea
jno
mov
sti
call
pop
sub
pop
sub
adc
mov
popf
xchg
jo
jmp
loop
bound
xor
pop
adc
lods
cmpsw
inc
les
and
out
js
in
jecxz
push
push
xor
or
lea
mov
adc
dec
mov
jo
lret
push
and
sbb
pop
sub
mov
mov
sbb
mov
mov
and
pop
pop
in
push
fisubrs
fidivs
and
call
pusha
jl
mov
insb
in
divl
cmp
aam
inc
ljmp
shl
mov
jns
mov
mov
xor
in
and
jo
lret
std
out
pop
lock
push
jp
sub
lods
loopne
ret
lahf
cmc
sbb
test
dec
subb
xor
jae
lods
in
shll
pop
xor
cs
mov
loopne
loopne
pushf
xchg
test
xor
pop
sub
cmc
mov
aaa
mov
jnp
int3
dec
popa
adc
inc
inc
nop
test
jmp
mov
in
rcrb
and
test
and
insl
adc
cld
lds
inc
and
pop
popa
mov
mov
clc
filds
mov
adc
enter
xor
ljmp
lods
inc
add
popf
ret
mov
test
or
enter
loopne
mov
jbe
mov
sub
mov
sti
scas
cmpb
inc
leave
jle
ss
cmp
mov
jmp
mov
and
xchg
mov
insb
out
mov
ja
sbb
aas
xlat
hlt
pop
shrb
xor
jl
add
push
push
mov
push
sbb
cmp
pop
cmp
or
cmp
mov
jle
pop
mov
and
cld
enter
fmul
mov
and
pop
mov
dec
outsl
adc
test
pusha
cmp
es
dec
daa
adc
mov
xchg
jae
mov
push
shll
adc
call
ficompl
or
mov
out
in
mov
add
pusha
in
arpl
sbb
fucomi
cmp
stc
add
in
mov
cmpsl
mov
xchg
lds
jne
enter
lret
mov
and
adcl
insb
orb
mov
hlt
xorl
lret
mov
out
popf
sti
cmp
stc
inc
cmp
sbb
out
jbe
andl
lahf
mov
gs
fwait
lcall
in
xor
aas
mov
bnd
push
enter
cmpsb
mov
les
xchg
inc
pop
inc
leave
es
fbstp
jnp
data16
sub
ret
fildll
push
filds
seta
add
xlat
cmpsb
leave
data16
cli
sub
cld
dec
data16
and
icebp
push
push
add
iret
repz
in
jb
out
or
movsb
cmp
and
mov
faddp
idivl
iret
cs
cwtl
fwait
cmpsl
cld
sbb
bound
addb
jae
sbb
pushf
das
jmp
fldenv
or
mov
adcb
mov
mov
mov
jmp
pushf
icebp
and
shrl
out
negl
cs
push
push
sub
cwtl
mov
fwait
cli
gs
cmpsl
in
mov
mov
fwait
add
cmp
enter
cltd
push
xchg
lds
pop
cmpb
fists
ret
popw
sbb
and
jl
pop
xchg
notb
je
cmp
mov
mov
stos
in
push
idiv
sti
shr
imul
ja
push
mov
xor
in
mov
hlt
sbb
push
adc
mov
dec
scas
jle
cld
les
sub
sub
movsb
mov
and
das
outsb
out
rorl
rorb
out
test
aad
movsl
fwait
ja
arpl
lret
or
push
dec
movsl
jmp
enter
dec
lahf
andl
pop
ljmp
jle
test
les
inc
fs
rorb
xchg
lock
gs
dec
and
mov
sub
mov
ret
inc
std
int
inc
mov
in
mov
adc
repz
add
aas
mov
mov
or
jge
stos
sbb
stos
sub
imul
mov
sahf
hlt
int
sbb
and
insb
jns
lock
fwait
mov
fbstp
sub
scas
push
sub
xchg
push
test
ret
pop
clc
xchg
push
or
push
sbb
lea
cmc
inc
pop
mov
lret
in
out
sarb
mov
movsl
xchg
jo
hlt
notb
add
dec
fidivrs
mov
jp
jmp
sub
push
and
rcrl
ljmp
hlt
xchg
dec
mov
shrb
jl
out
in
jp
pop
loope
push
cs
adc
and
jne
ret
xor
mov
nop
mov
aam
push
out
sub
push
sub
in
fstl
add
stc
sar
push
mov
dec
pop
int
xchg
sbb
mov
jns
jnp
inc
mov
cmp
adc
push
push
call
jne
xchg
fidivl
cmp
leave
cmp
xchg
sbb
aaa
daa
xchg
dec
sbb
int
or
clc
sahf
lahf
subl
xor
jecxz
mov
cmp
mov
or
aad
mov
sbb
sti
mov
sti
es
mov
adc
mov
sbb
jns
jp
mov
stc
jmp
leave
dec
adc
andb
xchg
clc
inc
and
jnp
pop
nop
adc
test
pop
and
sbb
push
xor
mov
xor
lcall
xor
sbb
xor
pop
das
ja
jbe
cmp
loope
jle
jno
and
pop
rol
mov
fwait
data16
mull
mov
outsb
test
cmp
cmp
and
ret
dec
xchg
repz
cmpl
lcall
out
test
mov
xor
rol
xor
or
lods
aam
lahf
fwait
shrl
mov
and
mov
add
cltd
shl
test
push
dec
inc
dec
sarb
rcll
lock
pop
movsb
xchg
sahf
std
das
sti
repnz
sti
sbb
pop
idivl
xor
int
les
adc
out
inc
test
test
out
xchg
add
mov
mov
jo
cmp
dec
ss
mov
sbbb
lods
adc
sub
jmp
int3
ffree
fisubs
mov
movsl
test
and
dec
xor
imul
adc
cmp
push
mov
mov
mov
xchg
cmpsb
sbbl
jle
arpl
jp
sub
xchg
les
movsb
int3
lea
pop
test
shll
aam
mov
xchg
sbb
mov
wrmsr
aas
xchg
pop
decl
iret
daa
pop
lcall
add
adc
fdivrs
ret
mov
pop
mov
pop
popf
dec
inc
add
jmp
call
xor
adc
filds
fwait
inc
stc
test
push
sar
rcrb
mov
jl
ss
cmp
das
in
add
mov
icebp
loope
insb
pop
ficoml
in
divb
mov
or
insb
movsb
xor
rcrl
in
andl
sub
mov
enter
jecxz
mov
rep
jl
negl
mov
adc
leave
xor
mov
repnz
xchg
fisttps
icebp
xchg
and
sarl
adc
jmp
mov
mov
sub
cmp
rcrb
pop
cmp
jb
cltd
ret
xchg
cmp
xchg
cwtl
aam
inc
mov
clc
and
jo
mov
add
pop
pop
test
push
stos
jnp
cld
insl
and
pop
adc
sub
out
test
and
mov
adc
int
xchg
sbb
mov
xor
je
ja
rdpmc
add
jae
incb
push
imul
aad
jo
and
and
xchg
mov
mov
mov
rep
rol
std
loop
xor
andb
in
push
xchg
out
jo
je
addps
aaa
adc
adc
pop
notb
int
pop
jle
lret
ss
sub
cs
pusha
adc
and
lods
outsl
out
pop
imul
icebp
pusha
jl
adc
jne
xchg
inc
sbb
mov
xor
pop
mov
ljmp
scas
lea
cld
repz
xor
dec
sbb
and
adc
das
pop
stc
ja
out
sbb
out
lahf
mov
std
mov
and
fucomp
sub
cs
insb
and
xorb
xchg
push
mov
loope
jnp
jnp
aaa
push
iret
push
inc
cli
testl
lret
inc
lods
jg
outsl
and
mov
inc
dec
aam
cmc
add
mov
lock
cmp
icebp
testb
loopne
in
fisubs
push
loope
and
sub
and
and
inc
das
adc
aam
mov
mov
movsl
dec
into
out
cmp
loop
pop
and
push
mov
push
mov
insl
adc
in
jecxz
xchg
xor
std
add
imulb
int3
jmp
lods
dec
adc
test
test
push
lock
clc
jns
mov
pop
repnz
lods
and
dec
sbb
in
pop
or
and
jmp
mov
fstps
and
clc
arpl
popf
mov
inc
mov
fld
movsl
sbb
cmp
cmpsl
xchg
cwtl
pop
icebp
fldenv
mov
fists
jecxz
repz
mov
dec
sub
mov
shlb
cmp
lods
call
sbb
fdivrp
lods
push
in
fs
bound
mov
push
lods
add
xor
lcall
inc
dec
lret
std
cli
jae
push
sub
or
ficoml
popa
fs
je
ss
loop
add
cmc
mov
fidivrl
sbb
stc
dec
jb
jmp
repz
push
imul
adc
hlt
xchg
jo
das
pusha
sahf
imul
int3
add
or
or
or
mov
and
mov
mov
adc
stc
loope
and
js
test
pusha
adc
or
or
call
push
daa
loope
xchg
mov
push
adc
jo
dec
push
ss
lret
add
jle
outsl
add
sub
pop
in
pushf
or
sbb
jnp
iret
sub
fmuls
push
adc
add
push
xor
xor
scas
cmpsl
lahf
push
arpl
xorl
mov
shrl
shrb
pop
jle
and
adc
sarl
xchg
cmpsb
loop
and
cmp
lcall
lahf
pop
adc
xor
aaa
lods
mov
cmc
lods
pop
cmp
push
ss
push
jg
sti
divl
daa
lahf
and
pop
push
and
jns
xchg
int
sbb
les
or
in
add
les
insl
sarb
push
push
leave
mov
aam
xchg
iret
pop
sub
cmp
movsb
and
daa
ss
dec
test
push
icebp
out
enter
xlat
clc
imul
cmp
shlb
dec
cld
jmp
js
or
clc
adc
dec
mov
in
inc
or
mov
dec
xor
cmp
push
gs
in
test
jmp
ret
cltd
mov
in
ja
jp
insl
sbb
adc
xchg
popa
xor
in
jae
add
addb
fcoms
push
add
in
pusha
xchg
test
das
popa
xchg
mulb
fisubrs
jg
fwait
nop
sbb
shrb
xor
xor
add
jbe
inc
and
out
in
pop
mov
sbb
insl
inc
push
idivl
clc
int3
mov
cmp
aaa
cmp
jno
push
lods
adc
test
jns
push
test
hlt
cmpsl
inc
jbe
push
cmp
fimuls
hlt
ret
dec
xchg
repnz
adc
je
fstp
xor
pop
sbb
out
push
inc
nop
cmp
cmp
inc
push
push
cmp
stos
mov
push
add
lock
test
imul
aaa
gs
orl
loopne
leave
stos
and
icebp
fdivrp
lret
or
sti
insb
mov
lods
lret
ja
in
and
in
scas
sub
push
sbbb
daa
adc
push
leave
jbe
mov
ficoml
mov
sub
sub
aas
jecxz
dec
inc
xchg
ret
lods
mov
mov
dec
adc
add
jmp
sahf
int
dec
dec
subl
push
dec
or
dec
xor
xor
in
mov
xor
mov
xor
rolb
orb
mov
add
int3
jle
adc
cmp
xlat
pop
sbb
lods
out
push
getsec
loope
test
icebp
out
dec
mov
mov
mov
jo
cld
mov
aaa
xchg
aas
aaa
arpl
xor
sti
ds
push
mov
stc
xchg
lahf
das
insb
jno
loope
cli
mov
fs
jp
int
insb
mov
sub
in
sub
jno
push
sbb
jb
lds
roll
lret
aam
mov
mov
mov
stc
pop
insb
mov
sub
fsubl
add
jmp
push
jae
je
in
mov
lcall
lret
js
mov
mov
mov
xor
das
sub
mov
rcl
mov
roll
std
jge
imul
push
aam
xlat
mov
call
push
out
sti
jg
jb
je
gs
call
pop
jmp
pop
inc
jecxz
add
fs
cli
insb
mov
or
adc
sub
insl
push
cmc
mov
dec
xchg
cmc
add
mov
in
push
sbb
popa
sub
sub
int3
fnstsw
das
and
test
lock
nop
pop
lret
lods
loop
dec
daa
sub
xor
push
arpl
loop
mov
mov
jo
orb
xchg
cs
cmpsl
aas
mov
mov
pop
fs
sahf
sti
int3
or
mov
dec
mov
ret
fsubs
test
jbe
sub
add
mov
xor
mov
sub
adc
outsl
xor
mov
lods
jl
mov
push
outsl
adc
lods
mov
inc
cltd
test
jno
xor
cwtl
stc
mov
mov
sbb
adc
add
xor
jmp
test
aam
push
jge
insl
aas
lcall
dec
push
js
fcompl
and
call
aas
in
imul
pop
jo
dec
lods
inc
xlat
and
cmp
popa
xlat
xor
pop
loope
jnp
ret
aas
push
xchg
test
leave
jno
daa
pop
cli
imulb
imul
int
pop
pop
fwait
inc
clc
fdivr
xlat
je
dec
xchg
movsb
sbb
shl
out
mov
cmpsb
in
or
xchg
data16
iret
mov
pop
fstpt
imul
orb
sbb
lret
lds
jle
repz
je
xor
mov
mov
xchg
popf
mov
adc
stos
push
fldcw
daa
iret
fstps
aaa
stos
shlb
push
jb
mov
jecxz
sub
test
jns
cltd
adc
in
jmp
inc
cmpsl
push
mov
push
and
in
rcll
push
aas
inc
pop
xchg
add
stos
aas
pop
cwtl
shrb
jmp
jmp
je
hlt
andb
pop
mov
fcompl
fistps
and
pop
testl
mov
mov
add
jecxz
js
or
pop
add
pop
cmpsl
js
aad
mov
fst
loopne
jns
std
ljmp
icebp
mov
sub
jge
cmpsb
int
popf
mov
mov
dec
push
sub
add
negb
xor
and
cwtl
cmpsl
sahf
inc
and
mov
adc
mov
dec
mov
sub
cmp
push
xchg
out
sub
and
adc
push
rolb
pushf
aaa
out
lods
imul
jmp
xchg
call
andl
push
xorl
pop
popf
rcll
iret
icebp
mov
das
mov
cmp
addr16
or
out
push
sbb
and
in
inc
testb
adc
mov
cmc
xchg
xlat
pusha
cmpsb
movsb
stos
ret
je
insl
test
enter
in
pop
or
out
pop
mov
sti
cwtl
stc
pop
mov
in
fwait
sub
jmp
jne
mov
mov
imul
fs
and
adc
dec
stos
addr16
jnp
or
lods
dec
stc
xor
pop
in
xchg
adc
idivl
inc
mov
in
sbb
cwtl
xor
loop
push
outsb
mov
sbb
mov
xchg
or
jbe
cmpsl
icebp
pop
mov
sub
mov
sar
sti
stc
in
xor
lods
sarb
adc
jnp
cmpsb
es
add
push
dec
cmp
push
mov
int3
icebp
insb
sub
repz
sti
inc
jle
xchg
in
sbb
das
push
fwait
mov
movsl
push
mov
insl
pusha
je
loop
fnstsw
jmp
jb
jb
lea
pusha
arpl
stc
in
orb
pop
loop
arpl
les
xor
pop
inc
jb
leave
inc
mov
pusha
fs
push
sbbl
mov
je
cmp
and
fdivl
jge
cmc
enter
stos
cmpsb
lds
push
mov
out
repz
and
insl
mov
fwait
icebp
movsl
sbb
aam
fstl
fbstp
jae
shrb
jmp
jo
or
cltd
daa
lds
imul
inc
ret
pop
lcall
dec
and
cmc
shll
not
cmp
add
out
push
pop
ret
jb
ffreep
cmp
mov
in
dec
int
push
mov
pop
lods
add
push
pop
sbb
cmc
xchg
addr16
mov
fcompl
pop
xor
cmc
cmp
enter
ss
lcall
test
sbb
mov
test
sbb
push
std
test
jmp
stc
mov
sahf
mov
mov
sub
lds
cmc
in
sti
mov
clc
push
xchg
or
fs
or
fisubl
gs
add
das
test
popa
mul
jo
and
jmp
loope
mov
clc
inc
and
pop
pop
lods
inc
pop
fiadds
cmp
pop
add
imul
mov
fimuls
stos
cltd
pop
or
and
scas
int3
pusha
out
out
daa
or
pop
rol
lret
cmpsb
clc
dec
xchg
push
lock
orl
jnp
das
push
mov
mov
sbb
or
out
std
int
inc
cmpsl
xorl
add
pop
imul
hlt
ss
incl
pop
movsl
data16
addr16
iret
sbb
mov
fdivr
roll
rdpmc
jne
iret
dec
dec
xchg
lds
popa
and
add
fldt
mov
stos
stc
xchg
loopne
roll
int3
clc
pop
fdivs
push
jo
divb
insb
std
enter
out
in
sbb
nop
pop
inc
jne
mov
mov
testl
and
add
inc
cmc
mov
insl
jno
imul
fidivs
push
rcr
sti
pop
cltd
cltd
mov
mov
int
xchg
popf
inc
xchg
imul
cs
imull
iret
mov
cmp
subb
cmpsl
xor
inc
jp
mov
in
je
sahf
cli
mov
lds
sub
out
xchg
push
repz
mov
sarb
and
sbb
adc
repz
mov
adc
push
and
mov
add
sub
lcall
pushl
in
pusha
stos
cwtl
in
xchg
dec
mov
pop
insb
stc
pusha
dec
pop
and
loop
out
pusha
test
mov
mov
mov
dec
in
xor
or
ljmp
aad
add
mov
stc
cmp
es
shrb
es
jb
mov
pop
cmpsb
imul
fistpll
pop
scas
outsb
and
loopne
leave
lahf
stc
inc
fiaddl
rorl
addr16
inc
ja
aad
repz
cli
xor
pop
mov
jno
mov
mov
sar
pmulhuw
jae
es
repnz
jo
mov
in
dec
lcall
fldl
mov
out
sbb
scas
jno
pushf
nop
or
jne
dec
gs
xlat
jp
test
popa
jbe
nop
and
push
and
push
outsl
xchg
xor
ret
inc
cld
push
pusha
daa
call
int3
xchg
xchg
imull
and
jg
jl
stc
xchg
iret
xchg
adc
and
adc
gs
xchg
std
push
cmp
aam
pop
adc
xchg
jb
sub
or
inc
cmc
dec
mov
into
fdivrl
push
jge
pop
cwtl
lock
imulb
mov
jb
fidivl
push
push
fs
ja
push
adc
aam
dec
jae,pn
xor
and
stos
inc
dec
test
inc
sti
dec
inc
push
stc
inc
into
sub
stc
jecxz
inc
push
repz
enter
testl
addr16
test
in
mov
repnz
ds
pop
push
scas
push
cmp
mull
pop
sti
add
dec
mov
lods
xor
scas
mov
repnz
or
les
mov
aas
pop
and
inc
in
int
mov
or
pop
sub
shl
and
lods
rorl
leave
sbb
push
fs
jle
call
pop
xor
hlt
outsl
orb
in
mov
lods
add
mov
xchg
mov
mov
mov
sbb
sbb
sub
pusha
aas
xlat
ljmp
pop
aas
cmp
mov
sti
cmp
cmp
addr16
sub
shrb
sbb
sahf
outsl
cmp
sub
jo
or
xlat
or
paddw
sbb
sub
jecxz
dec
xchg
inc
and
pop
xor
ja
loope
add
and
shr
lds
cld
jne
mov
nop
iret
jnp
in
and
inc
lret
and
mov
test
mov
push
add
mov
mov
lds
jge
rcl
scas
in
int3
adc
sbb
lea
jae
push
inc
jo
test
adc
push
scas
sub
aad
mov
push
stc
aaa
adc
inc
or
and
sub
add
in
jmp
or
pop
inc
sub
scas
xchg
into
test
out
xchg
push
test
sbb
ss
adc
bnd
xchg
mov
sbb
jge
hlt
inc
outsb
enter
sbb
pop
push
sub
mov
xchg
jbe
or
add
add
mov
pop
mov
push
mov
lret
leave
push
mov
test
sub
jno
cmp
jmp
test
das
xor
lea
xor
mov
js
flds
cmp
pop
add
sbb
add
dec
in
or
leave
or
jle
in
ljmp
ret
ss
in
sarb
daa
jbe
sub
mov
and
push
sub
scas
fldl
pop
jmp
lea
mov
movsl
add
pop
gs
cmp
dec
out
sub
jmp
faddp
mov
aas
add
dec
pop
xchg
outsl
bound
pusha
sbb
mov
mov
lcall
stos
jae
fptan
jb
inc
inc
fimuls
jns
xor
pop
jne
cmp
rorl
aaa
xchg
jmp
push
loope
pop
push
pop
enter
cmpsb
push
lret
xchg
clc
inc
xorl
leave
cmp
in
daa
xor
pop
xchg
pop
les
dec
jb
imul
mov
cmp
xor
insb
mov
lahf
cmp
imul
es
lods
push
test
jnp
mov
je
popa
sbb
notb
clc
mov
mov
movsl
cmp
test
mov
loopne
mov
stos
and
arpl
mov
mov
jns
cmp
sub
pusha
and
ret
cmpb
pop
popa
cmp
repnz
mov
dec
push
cmp
clc
inc
mov
and
xor
jmp
xor
push
out
lcall
or
jo
pop
push
cmpsl
cmp
mov
add
aaa
mov
xchg
scas
mov
test
or
pushf
cmp
sbb
dec
ljmp
imul
lea
cmp
mov
rcrb
loope
push
lret
movsb
ja
ret
cmpsl
inc
pop
jae
mov
mov
test
sbb
fisttps
push
repnz
or
je
repnz
fldcw
cmp
cmpsl
in
popa
idivl
lods
mov
in
imul
lods
mov
pop
out
out
pop
jae
cmpsb
cld
test
mov
and
lods
pop
or
fs
push
dec
sarb
mov
rolb
mov
xlat
mov
inc
pop
cmp
lret
and
xor
aam
les
fdivs
out
jae
mov
cmp
sub
loopne
dec
mov
sbb
xchg
popf
bswap
lcall
mov
inc
mov
xchg
push
adc
popf
mov
and
cmp
add
out
mov
push
test
cwtl
dec
mov
pop
in
inc
sahf
out
int3
inc
mov
jnp
out
aas
movsb
outsl
mov
and
pop
outsl
sbb
jbe
pop
sti
sbb
jg
jl
add
pop
les
sub
cmpb
ret
dec
lods
mov
cwtl
data16
mov
push
jle
addr16
cli
cmp
mov
data16
push
loop
mov
mov
int
addr16
test
rorl
xor
mov
mov
gs
mov
jns
orb
dec
mov
lahf
dec
adc
daa
test
xor
ss
push
sbb
push
mov
xlat
stos
mov
push
dec
sub
mov
in
inc
or
jge
es
cmpsl
or
testl
hlt
ja
addr16
mov
cli
mov
inc
push
pop
ss
xchg
and
jmp
mov
fwait
int
cmpsb
scas
pop
xor
aad
push
inc
mov
jae
insl
sti
jl
inc
std
sub
out
stc
mov
ljmp
clc
jp
sub
jmp
jno
inc
push
sbb
pop
les
shr
push
mov
sbb
dec
andb
jle
cld
fcomip
cmp
pop
jno
inc
push
push
pop
fildll
push
lods
jae
pop
adc
and
arpl
cmp
je
inc
test
cmp
dec
push
lcall
xor
mov
sbb
add
or
div
test
add
xlat
jne
or
movsbl
aad
cli
jmp
or
push
or
loop
mov
dec
mov
subb
sbb
mov
pop
loope
rcrb
gs
rep
jge
stc
dec
pop
jns
inc
cmpsl
js
aaa
jbe
dec
xor
popf
cmpsb
into
xchg
stos
push
insl
cmp
gs
jno
out
outsb
mov
add
sti
loop
sbb
addb
ret
addr16
dec
lds
into
mov
je
sub
inc
out
cwtl
iret
push
sbb
loopne
jg,pn
aam
aaa
das
dec
insl
dec
or
test
scas
mov
mov
in
mov
push
xchg
stos
in
sbb
ljmp
add
jne
sub
sub
pop
or
push
andl
add
pop
fucomip
test
cmp
addr16
aas
or
or
jge
mov
adc
or
repnz
sbb
in
push
std
arpl
out
ljmp
je
xchg
aas
mov
sub
lret
pop
mov
test
adc
fwait
inc
lds
mov
jle
dec
mov
xor
nop
daa
aaa
flds
addr16
popa
sub
test
pop
push
adc
ret
pusha
xor
cmp
cmp
lcallw
dec
iret
enter
jle
ds
xchg
fnstcw
push
outsb
mov
push
mov
bound
push
lods
xchg
sbb
xchg
pop
mov
repz
mov
cmp
sub
ds
jg
sbb
pushf
xor
fisttpl
push
aad
mov
orb
fldenv
pop
into
sahf
mov
xlat
add
lea
jge
das
xor
xlat
sbbb
iret
rcrb
mov
xorl
cwtl
retw
cmpsb
jbe
insl
or
jo
push
and
or
push
push
inc
test
mov
jbe
push
into
scas
xlat
xor
mov
in
and
movsb
repnz
loop
mov
inc
enter
lock
pushf
pop
lea
lock
loopne
insb
je
cmpsb
out
std
xchg
pop
arpl
cmpsl
mov
jmp
sti
test
aas
inc
ljmp
test
mov
outsl
inc
nop
movsl
enter
inc
add
insl
repnz
mov
jmp
jno
fsubs
fdivs
ss
iret
loop
mov
adc
insl
pushf
pushf
stos
lock
hlt
in
repnz
cmc
and
inc
lds
lds
pushf
aaa
aad
shrb
pop
jle
pop
in
les
and
popf
negl
mov
ss
or
xor
mov
dec
xchg
fidivl
insb
cld
jmp
loop
fsubrs
call
andb
inc
mov
sub
inc
inc
sti
lea
sub
jl
fs
adc
add
ds
lock
fwait
sbb
xchg
and
cmp
loopne
push
sbb
out
test
loop
loope
pop
repnz
pop
pusha
test
pop
xchg
inc
lods
jecxz
mov
int
hlt
loop
sbb
sub
stos
inc
repz
sbb
inc
cmp
add
or
int3
scas
fistpll
pusha
mov
popa
jo
pop
fisttps
push
mov
mov
dec
call
push
ja
ss
xchg
xor
enter
jmp
cmpsl
mov
mov
pop
mov
cmp
cmp
pop
push
adc
fnstenv
pop
sub
sub
xor
and
mov
and
rclb
and
std
sbb
and
movsb
xchg
out
inc
jge
add
mov
mov
inc
lret
pop
les
jge
int
pop
mov
stos
je
pop
jl
rorl
xchg
enter
push
out
push
xchg
sbb
jp
push
dec
jl
dec
inc
jp
lods
add
xor
jne
pop
nop
leave
add
mov
and
xchg
add
and
dec
loop
or
push
adc
or
mov
mov
mov
daa
cmp
pop
sub
aad
or
shl
push
pop
adc
out
jmp
mov
in
int3
jno
imul
jo
inc
test
sub
rcrb
fsub
sbb
popa
lcall
xchg
inc
cmp
sub
dec
adc
test
mov
dec
ret
les
aad
out
add
and
loopne
sbb
cmp
push
das
fs
mov
dec
insb
aaa
out
fsubl
xor
insb
subl
call
mov
stos
jne
xor
cmp
movsb
push
jg
orb
mov
cli
divb
gs
out
and
test
inc
daa
cld
and
and
test
roll
xor
pop
test
leave
push
shrb
inc
arpl
xchg
loope
xchg
mov
mov
daa
sub
xor
data16
lock
ficompl
or
test
mov
cmpsb
int3
xchg
sbb
jns
pop
cmp
ja
and
sbb
in
lahf
sbb
and
addb
je
lods
cmp
mov
mov
jne
jecxz
adc
xorps
sub
inc
sbb
mov
in
xchg
and
movsl
adc
pop
call
xchg
jmp
cli
dec
mov
xor
hlt
mov
leave
and
lcall
int3
ret
and
ds
mov
sti
mov
dec
push
jp
mov
sub
pop
mov
push
aas
push
andb
or
mov
sahf
cli
int
mov
test
movsl
out
stc
testl
fcompl
cmpsl
add
inc
fidivrl
sbb
and
scas
sub
sbb
in
push
adc
and
arpl
movsl
pushf
mov
out
and
push
jnp
or
dec
inc
pushf
in
negl
pop
movsl
push
sub
sbb
mov
test
or
and
aam
sub
mov
int
and
sbb
and
push
inc
mov
mov
push
mov
pop
lret
jb
cmp
and
inc
std
pop
divb
xor
push
push
stos
jg
and
fistl
neg
xor
nop
icebp
xchg
jg
subb
lds
movsl
jb
inc
scas
repz
idivl
dec
dec
ficoml
xchg
psrld
pop
mov
cmp
lods
pop
cmc
std
aas
lods
popf
or
repnz
dec
jge
shrb
adc
pop
aam
or
xor
jno
lret
loope
cmp
cld
adc
sub
cmc
sbb
loop
mov
dec
repnz
jae
mov
daa
push
cmp
js
xor
adc
inc
jle
mov
jae
mov
dec
loope
mov
mov
or
mov
daa
jl
mov
mov
rclb
cli
sarl
pop
sbb
mov
adc
jge
jno
les
pop
dec
sbb
adc
cmp
add
push
jnp
fwait
sbb
int
bound
cmpsb
daa
pop
sbb
adc
xchg
mov
push
out
fxch
sbb
mov
testl
insl
xlat
cmp
dec
cld
cmp
mov
bswap
xchg
mov
leave
jmp
mov
mov
or
int3
jmp
or
outsl
data16
test
mov
aaa
xor
stc
orl
rcl
pop
mov
lea
aaa
ds
mov
adc
sarl
push
iret
adc
pop
arpl
jmp
mov
ret
mov
sbb
int3
daa
jb
bound
fmull
pop
pop
les
loope
testb
lret
pop
daa
daa
jecxz
ja
sub
pushf
aad
lahf
fs
or
push
pushf
enter
mov
aas
fnstsw
mov
jae
imul
pop
cli
mov
mov
mov
negl
sbb
pop
pushf
adc
pop
insl
dec
push
mov
pop
add
ja
inc
or
fwait
stc
aad
mov
int3
sbb
ja
mov
mov
movsb
mov
loopne
arpl
mov
mov
mov
xor
int
shl
xor
filds
cli
fstps
fcoms
jecxz
pop
adc
inc
sbb
ret
out
push
cmpsl
xor
jno
push
mov
cmp
bnd
iret
outsl
dec
mov
and
inc
xor
jne
imul
add
subl
mov
jl
jns
add
lock
push
sbb
jns
mov
popa
pop
cmp
jno
leave
pushf
mov
lds
xor
les
loop
das
jl
mov
jne
pop
leave
mov
cmc
int3
arpl
dec
leave
sti
mov
dec
enter
dec
xchg
xorb
cli
push
pop
sbbb
push
sbb
imul
addr16
adc
xlat
mov
lods
push
sub
and
dec
jo
rorl
lds
mov
sub
daa
xchg
iret
cld
jo
xchg
pop
scas
push
xchg
jl
xcrypt-ctr
cmpsl
pop
add
ja
fcoms
sub
clc
ljmp
ret
insb
mov
mov
or
add
pop
sbb
add
adc
push
fnstenv
jl
addl
and
pop
add
lea
mov
mov
adc
sti
in
pop
or
cmp
test
test
and
ljmp
out
and
nop
xchg
sub
in
mov
insl
or
mov
pop
sub
int
mov
jmp
mov
rolb
aam
hlt
adc
gs
int
inc
ja
mov
push
sbb
aas
in
repz
cli
pop
inc
divb
subl
iret
or
shlb
pop
mov
cltd
in
nop
and
mov
and
sbb
and
adc
in
arpl
inc
xor
stos
js
vpshab
scas
mov
addr16
adc
and
fwait
insl
and
mov
rcll
lods
outsb
stc
xchg
aaa
insb
fldcw
dec
pushw
pushf
sti
add
mov
pop
xor
jae
daa
xchg
fwait
add
lds
mov
pop
mov
int3
inc
sub
movsb
sbb
gs
adc
jo
mov
xor
stc
xlat
xchg
xchg
cmp
adc
out
and
in
or
xchg
inc
in
arpl
pop
das
ds
mov
pop
xor
add
xorl
cmpsl
sub
in
in
dec
dec
push
iret
mov
xchg
fs
filds
cmc
inc
imul
leave
pop
dec
lea
inc
lret
xor
movsl
ja
or
and
in
and
ret
out
aam
xchg
test
mov
mov
ret
fdivrl
or
outsl
mov
aam
nop
in
fidivs
stos
inc
mov
pop
std
cmp
data16
and
out
sub
or
and
mov
xchg
std
repnz
sarb
pop
in
and
inc
or
int3
jmp
cs
mov
adc
xchg
pushl
jnp
push
mov
jp
in
or
adc
jle
cmp
loopne
test
stos
pop
xchg
mov
sti
mov
leave
jl
and
mov
and
jo
adc
mov
jp
mov
jo
sbb
addr16
dec
movsb
sbb
divl
movsb
sbb
jl
cmp
sbb
and
and
xchg
sti
iret
rol
mov
jns
add
addr16
jbe
in
xchg
imul
and
add
push
das
push
cmpsb
jno
xor
enter
cmp
loopne
sub
adc
dec
ficompl
cmp
mov
push
jle
dec
pop
push
pushf
inc
push
cwtl
add
add
push
int3
mov
mov
xchg
jl
push
jmp
mov
inc
in
mov
add
dec
mov
xchg
cmpsl
jmp
pop
fildl
jg
inc
aas
sub
sbb
or
xchg
gs
mov
xchg
popa
sbb
fndisi(8087
dec
repnz
fsubp
sub
xchg
shll
mov
inc
push
testl
mov
mov
pop
jno
movsl
push
push
loop
jns
sar
int3
cmp
in
pop
test
dec
and
pop
and
push
mov
fnstsw
scas
mov
cmp
push
fs
xor
jae
imul
and
and
lods
pop
lcall
das
inc
ljmp
vdbpsadbw
push
jge
cmp
lret
or
lods
iret
mov
and
repz
and
stc
pop
je
mov
add
pop
sti
push
or
jg
lret
dec
dec
shlb
mov
shlb
fcmovnbe
mov
mov
fcmovnb
nop
je
inc
mov
inc
dec
into
int3
cmp
dec
ret
or
push
call
stos
loope
cmp
push
bound
jnp
movsb
push
fwait
in
cmpsl
stc
mov
ljmp
iret
lret
pushf
cmp
adc
pop
mov
add
add
push
ror
cs
pop
call
sbb
hlt
pop
loop
in
jg
scas
xchg
call
lea
inc
call
xchg
pop
xchg
lock
imul
mov
jmp
scas
cmpsl
mov
mov
cmp
test
repz
mov
repnz
sbb
fstps
dec
scas
mov
mov
js
aam
push
and
sbb
pop
mov
enter
mov
mov
sarb
dec
scas
addr16
xorb
cmp
std
sbb
sub
xchg
mov
pushf
sbb
add
inc
aas
add
dec
in
mov
sub
pop
in
mov
in
mov
les
add
cwtl
xchg
nop
push
cmp
loop
xchg
es
or
sbb
mov
lret
aam
test
sub
cmp
out
movsl
add
adc
push
mov
mov
mov
mov
mov
stos
pop
jnp
adc
ljmp
outsl
xchg
mov
arpl
jns
lds
pop
xchg
push
enter
add
push
mov
fdivrs
paddb
mov
scas
fimuls
and
mov
xchg
and
pop
movsl
ss
jo
jb
cmpsl
jbe
jbe
pop
testl
ja
inc
int
mov
xchg
push
mov
gs
xchg
or
pop
loope
xor
pop
xor
clc
jae
xchg
xlat
ljmp
addr16
dec
xchg
dec
sbb
cld
pop
pusha
aas
movsb
jle
inc
pop
sub
inc
dec
orb
clc
or
dec
negl
cmpsl
negl
sti
push
enter
inc
movsb
cmpsb
mov
and
cmp
scas
mov
js
inc
mov
insl
scas
jno
adc
sbb
xor
add
cmp
push
mov
mov
lods
fs
loope
jo
jae
ljmp
addl
mov
out
mov
clc
fistpll
pcmpeqd
lods
in
fnsave
aaa
xor
adc
jle
pop
inc
cmp
xchg
out
js
mov
das
je
mov
mov
cmpb
or
fisubrl
push
sub
jb
ja
fldl
inc
mov
xor
mov
mov
stc
cmp
sub
pop
loope
dec
xchg
pop
xchg
adcb
add
dec
lret
xor
aam
inc
fs
lods
xchg
test
cmp
cld
call
push
mov
add
mov
out
outsl
inc
int3
insb
cmp
jb
popf
icebp
push
mov
test
add
xchg
adc
xor
dec
test
int
cmpsl
pusha
lods
pop
xchg
pusha
pop
add
loop
sub
rcrb
xchg
dec
mov
mov
int
add
loope
xchg
call
push
aad
and
or
in
test
mov
cltd
loop
xor
mov
mov
sub
mov
lret
loop
adc
or
or
stos
mov
mov
adc
js
fisubs
lods
stc
test
mov
cli
push
push
aas
pop
push
push
stc
pop
int3
or
cmpsl
mov
mov
pop
pop
pushl
loopw
adc
sub
leave
sbb
aam
push
icebp
subb
bound
or
pop
jg
out
mov
scas
jge
call
lea
pusha
pop
and
orb
mov
adc
dec
arpl
add
jl
lret
pop
dec
sbb
sbb
pop
pop
les
fidivrl
dec
test
mov
xorb
xchg
fcompl
push
push
add
scas
and
cmp
pop
dec
and
leave
popa
xlat
fisttps
mov
pushf
imul
lock
aaa
and
sbb
mov
call
sbb
mov
inc
in
ret
sub
stos
mov
cmp
fucomip
fbstp
pop
dec
cmp
cmpsl
push
pop
xchg
into
cmp
aas
mov
cmp
dec
and
cmpsb
pop
jp
sbb
xchg
jns
sbb
xlat
cmpsl
sti
aam
sub
mov
mov
scas
and
sarl
pop
pop
fbstp
in
mov
pop
in
daa
faddl
jno,pn
mov
inc
jle
dec
frstor
movsl
sbb
fsubl
adc
mov
nop
adcl
into
cmp
fistl
cmpsb
mov
dec
in
in
mov
out
aas
das
jecxz
push
paddb
pop
xchg
xor
jg
pushf
arpl
orl
sarl
add
clc
push
cmp
inc
jg
and
fstpl
dec
jbe
xor
leave
xchg
push
sub
fisubrl
push
movsl
repz
xchg
out
pushf
shll
or
aam
pop
mov
inc
aas
or
ret
and
or
pushl
int
cmp
add
sbb
popa
dec
or
loope
sub
test
jg
push
mov
popa
mov
imul
loopne
lahf
fdivl
in
iret
push
ja
push
adc
enter
icebp
loope
outsl
pusha
mov
mov
push
dec
pop
in
inc
cmp
out
testl
mov
cmc
mov
js
sub
sti
enter
out
loopne
insl
add
xchg
lock
jnp
cmp
push
cld
daa
sahf
cmp
enter
scas
int3
mov
lcall
xchg
cltd
add
mov
in
pop
push
popa
jecxz
idivl
fimuls
arpl
icebp
xchg
cmp
or
int3
loop
fisubrl
mov
jmp
les
push
adc
lds
jbe
clc
sarl
aam
pop
mov
cli
push
jae
loope
imul
into
mov
lods
cmp
das
mov
int
out
lds
add
in
pop
sub
mov
dec
sbbb
sub
push
lock
sbb
jge
iret
lret
daa
les
xlat
clc
gs
cmpsb
lea
sub
flds
dec
adc
xlat
dec
xor
imul
add
fnstenv
xchg
testl
lret
repnz
or
xor
inc
adc
adc
ss
in
mov
or
repz
and
mov
lods
or
sti
xor
data16
lcall
js
and
fwait
mov
rcl
fdivrl
mov
mov
or
or
sub
cli
dec
data16
fsubp
xchg
xor
mov
incl
clc
scas
jle
jge
xor
dec
pop
sbb
jg
jp
mov
movsl
xchg
cmpps
and
cmc
movsb
fstps
es
push
ljmp
pop
fnstcw
shl
dec
inc
ss
jl
test
fdivr
jnp
mov
sub
aam
fstp
insl
pop
mov
sbb
xchg
and
pop
sub
mov
lahf
leave
pop
xchg
jmp
push
add
pushf
sbb
in
push
cmp
pop
aaa
xlat
add
cmc
sbbb
ja
pushf
addr16
pusha
add
incl
or
or
into
cmp
pop
pop
outsl
jg
adc
loope
dec
fnstsw
pop
hlt
mov
es
xor
xchg
adc
mov
icebp
outsl
fs
jnp
or
popa
dec
sub
movsb
and
in
ljmp
push
dec
dec
mov
lods
xor
mov
fsubs
lds
xchg
enter
add
or
int
insb
cmp
jnp
outsl
adc
jno
mov
clc
pop
leave
xchg
es
out
mov
push
mov
sbb
js
add
pop
ss
push
das
lahf
mov
cmp
adc
fstl
pop
xchg
mov
int3
xchg
loopnew
cmp
or
movsl
sbb
lds
popf
mov
jbe
sbb
sub
inc
das
gs
mov
fs
add
adc
inc
inc
in
loop
and
int
shlb
imul
testl
or
ret
mov
xchg
mov
push
and
insb
inc
ja
popf
cmpsb
or
cmp
cmp
cmp
push
scas
mov
leave
enter
mov
lods
sbb
pop
sub
mov
mov
test
aam
inc
xorb
mov
pop
push
stos
mov
push
xchg
sbbb
cmpsb
cmpb
xchg
adc
les
movsb
sub
leave
xor
pusha
xchg
rolb
push
mov
clc
pop
xor
lods
pop
nop
or
pop
movsb
jp
add
adcb
mov
xchg
push
push
outsl
jns
test
js
movsl
call
pop
sbb
or
pop
sahf
loope
inc
fdivl
mov
mov
les
ds
test
and
mov
les
push
cmp
int
sbb
int3
sbb
mov
jecxz
push
pop
movlps
loop
loopne
mov
or
mov
or
paddsb
jle
stos
xor
add
and
out
ljmp
dec
pop
rcr
lea
int
loopne
popa
mov
adc
mov
pop
stos
sahf
addr16
lods
xchg
jg
fs
push
stos
add
inc
and
andl
jl
iret
sbb
xchg
out
test
shrl
test
mov
sub
jns
add
cs
ss
and
jno
cmpsl
ret
adc
rcrb
mov
shl
leave
inc
out
repnz
lea
mov
mov
mov
mov
enter
pop
notb
dec
pop
mov
nop
add
iret
jecxz
popa
add
mov
add
and
mov
jmp
fs
mov
mov
cmp
inc
mov
stos
mov
das
xor
in
jo
cwtl
inc
cmp
cs
in
mov
mov
lds
scas
mov
mov
xor
push
xor
icebp
enter
in
sub
out
daa
loopne
mov
call
lds
inc
jne
dec
lods
shll
pusha
push
push
lcall
sbb
adc
inc
test
xchg
in
outsl
push
adc
cmpsl
push
mov
pop
mov
sub
mov
or
aam
or
push
fidivl
lds
bound
lret
jnp
adc
lcall
shrl
cli
mov
jb
mull
and
sub
cmpsb
sbb
push
lea
aas
xor
lock
pusha
jge
xor
jnp
mov
dec
xchg
andb
clc
sti
fstp
xchg
mov
fs
jg
mov
push
push
jg
push
sbb
arpl
add
lock
fisttps
out
negl
cmp
inc
adc
cmp
in
jl
fsubrs
lods
xchg
fwait
jns
aam
xor
fmull
pop
loope
fs
in
push
scas
dec
std
fcomps
and
les
lods
fmull
int3
hlt
imul
add
pop
or
cli
aas
lret
divl
xchg
sub
mov
pop
shr
aas
mov
mov
cmp
out
mov
stos
inc
mov
ret
inc
jmp
add
cmpsb
fcom
cmp
icebp
add
repz
xor
shrb
jbe
push
test
in
mov
push
mov
leave
outsl
sbb
mov
jno
inc
test
faddl
pop
or
add
hlt
mov
daa
jb
sub
or
scas
mov
cld
imul
jecxz
inc
insb
push
xchg
pop
mov
pop
repnz
dec
or
addb
add
dec
out
inc
clc
xchg
jnp
mov
pop
insb
into
cmpsb
push
mov
test
bound
ret
or
add
ljmp
cmpsb
mov
cmpb
mov
mov
mov
pop
test
insl
sub
shl
cli
or
inc
pop
movsb
or
sub
test
insb
icebp
and
in
and
addb
or
cld
stos
cmp
cld
lds
jl
std
cmpsb
popf
gs
add
sti
sti
xchg
push
xchg
push
je
rorb
jecxz
ret
repz
cli
push
fs
das
cmp
int
mov
aas
repz
adc
int
in
add
clc
addr16
inc
test
hlt
mov
bswap
out
das
fwait
jmp
xchg
test
imul
repnz
je
sub
inc
pusha
sahf
mov
xchg
adc
add
cmpsl
and
add
jae
xor
inc
fdivr
test
jge
jg
mov
sbb
jmp
lds
xor
repnz
mov
stc
mov
add
dec
lods
mov
mov
out
mov
dec
imul
outsl
cmp
xchg
cmpsl
ss
and
push
mov
mov
insb
loop
push
jo
testb
pop
cld
mov
scas
and
subl
sbb
sbb
fwait
mov
ja
clc
aas
clc
bound
and
inc
out
mov
ss
rorb
scas
xor
inc
test
flds
xor
inc
and
es
add
mov
push
jns
xchg
movsl
mov
mov
movsb
insb
and
inc
iret
in
pushf
mov
aas
mov
adc
cmp
add
popa
pop
pushf
sar
and
shrb
adc
pusha
ja
lds
mov
adc
repnz
and
jg
jno
or
clc
in
mov
ss
adc
jno
xchg
xchg
das
fwait
jmp
clc
addr16
ja
sub
jmp
jl
sbb
mov
inc
fmulp
xor
jnp
andl
lods
scas
movsl
fisubrs
addb
xchg
lea
ljmp
mov
lret
push
mov
bound
fbld
loope
mov
cmp
shr
jecxz
aad
xchg
xor
and
bnd
xchg
test
mov
mov
lods
pushf
mov
lods
mov
nop
xchg
mov
pop
int3
jbe
int3
sbb
add
jmp
xor
xchg
imul
outsb
pop
adc
lds
stos
mov
or
cltd
pop
xchg
mov
sbb
rcll
mov
push
lret
je
xchg
test
sbb
pop
cmp
sub
lds
es
fld
mov
pop
call
xchg
add
adc
mov
jo
adc
and
push
test
and
xchg
inc
rclb
sbb
cld
lret
cld
mov
imul
ljmp
lea
pop
or
jae
push
dec
adc
pop
int3
out
add
pop
insl
sbb
cmc
adc
mov
adc
xchg
or
shrl
sahf
shll
mov
mov
sub
int3
xlat
test
loopne
cmpl
xchg
mov
or
jge
out
push
mulb
sbb
stos
sub
movsb
int
adc
mov
mov
movsl
dec
xor
mov
icebp
daa
jb
sub
fistpl
pop
enter
imul
mov
xchg
pop
ficoms
popf
adc
outsl
add
adc
int3
push
or
mov
lahf
cld
flds
fistpll
outsb
jecxz
repnz
adc
mov
jno
jns
les
inc
lret
jnp
mov
icebp
fnstsw
ss
push
sbb
push
enter
sbb
push
xchg
mov
xor
cmp
clc
xchg
mov
xor
test
cmp
sbbb
mov
sahf
scas
outsl
push
pop
lahf
and
pusha
and
int3
cmp
mov
mov
and
les
xchg
mov
xor
sub
mov
fcoml
or
mov
rorl
sub
xor
scas
and
dec
int
sarb
cli
or
or
cs
out
add
ljmp
stos
or
mov
jl
les
jbe
jge
cmpsb
xchg
mov
loopne
roll
js
inc
sti
and
mov
fwait
sbb
sahf
push
mov
add
lret
ljmp
imul
sbb
lods
fwait
lds
and
mov
dec
dec
xor
or
push
hlt
scas
in
mov
imul
insl
loop
jg
movsl
enter
ja,pt
aam
roll
test
mov
roll
inc
add
scas
test
jmp
xchg
sbb
sub
gs
jb
std
insl
push
addr16
push
xchg
jno
and
sbb
shll
cmp
rcl
mov
je
sub
js
icebp
cltd
mov
adc
xchg
nop
push
and
lcall
sub
idivl
popf
push
movsb
xchg
xor
mov
sbbb
int3
or
mov
ljmp
gs
mov
jno
jecxz
loope
mov
dec
xor
adc
and
or
jle
ljmp
ret
fcmovnb
int
imul
lahf
xchg
sbb
fimull
rcll
xchg
int
mov
add
mov
and
js
fwait
jmp
adc
aam
scas
push
lret
mov
jecxz,pn
outsl
les
mov
enter
es
jg
fiaddl
std
xor
jle
or
pop
jg
or
aaa
dec
adc
jns
stos
dec
outsb
pusha
mov
or
pop
aas
push
adc
xlat
test
push
sub
sbb
icebp
les
inc
repz
jl
jle
pop
fnsave
int3
jbe
mov
adc
sbb
lahf
sahf
xor
push
jmp
push
dec
push
js
notb
cwtl
xor
pop
loop
ljmp
xor
adc
popf
adc
and
and
sub
jle
xor
sub
outsl
call
cmp
nop
mov
lods
push
mov
xlat
lds
ljmp
sbb
cmp
stos
mov
rol
lock
mov
push
icebp
mov
xor
jno
scas
les
or
xchg
les
xchg
stos
xor
cmp
mov
divl
out
test
test
xor
cs
mov
sbb
and
add
dec
and
jbe
mov
jbe
gs
and
and
sub
ret
fnstcw
xchg
fcmovnb
daa
popf
xlat
jno
and
add
fnstcw
mov
leave
outsl
mov
pop
pop
mov
adc
subl
inc
arpl
test
mov
and
and
ret
cmpsb
pop
mov
int
bound
pop
sarb
test
jg
xlat
fwait
enter
sti
in
into
je
fs
jb
enter
mov
mov
fldl2e
dec
push
or
leave
sbb
dec
cs
cmp
dec
pusha
cltd
mov
adc
imul
into
sub
sbb
mul
jge
jp
adc
add
jmp
push
insl
mov
dec
sbb
jle
popa
mov
add
clc
push
xchg
jo
sub
sub
aaa
sbb
cli
popf
sbb
cmp
and
out
jmp
enter
pop
sub
or
mov
mov
in
dec
xchg
push
repnz
dec
fwait
mov
sub
pushf
inc
leave
ds
push
in
ds
adc
push
mov
fmulp
aam
and
jl
maxps
out
movb
test
inc
fcomps
inc
loope
nop
std
push
sub
imul
ss
mov
sub
xchg
lahf
adc
arpl
ffree
ja
fcoms
idivl
mov
lods
sti
data16
xor
loope
popa
jns
mov
shll
int
xor
dec
jb
sbb
scas
sub
cld
les
loopne
fwait
xor
nop
movsl
hlt
frstor
iret
sub
and
push
test
lret
pop
popa
push
adc
pusha
push
add
cmp
fbstp
pop
enter
push
mov
push
pop
mov
popf
push
mov
mov
sub
iret
pushl
and
aad
aas
mov
test
xor
push
and
ss
push
pop
sbb
movsl
cmpsb
lock
inc
xor
mov
out
enter
in
or
lea
lods
xor
sbb
or
cmp
in
fadds
mov
push
cmp
lret
pop
jae
push
cmp
cmp
popa
jmp
in
lods
and
mov
push
cmp
mov
sti
ja
adc
outsl
push
sub
lgs
sub
push
add
jns
icebp
push
cld
ljmp
sbb
adc
xchg
idivl
mov
and
loop
in
pop
jecxz
mov
fwait
pop
sbb
and
loop
inc
inc
or
test
ss
sahf
and
xor
inc
dec
shl
pop
cwtl
sbb
js
int
shl
mov
xor
push
push
outsl
movsl
daa
push
cmp
pop
push
pop
xchg
and
js
mov
xor
push
in
sub
sbb
sub
mul
mov
and
mov
fnstcw
add
sub
ds
mov
cmp
test
xchg
cmp
scas
fsubl
add
lods
and
jle
push
call
lcall
pop
lods
stos
cmpb
adc
inc
pop
test
repnz
setp
insl
lds
xor
push
js
popf
fs
inc
jbe
cmp
xorb
mov
pop
sub
das
mov
inc
fcmovbe
in
out
popa
cmp
stos
in
jb
cmpsl
mov
ss
mov
sahf
push
lea
or
push
test
or
rcll
xor
lea
ss
js
or
jb
and
test
mov
mov
sbb
pop
enter
inc
and
add
and
xchg
sti
mov
sub
imul
pop
lds
aam
jnp
mov
xchg
pop
mov
mov
addb
movsb
inc
scas
rol
popa
mov
inc
pop
outsb
mov
sub
xor
and
adc
pop
sbb
lret
pusha
and
fdivrs
add
push
out
mov
push
and
test
add
std
mov
out
popa
stc
test
adc
in
cmp
imull
adc
imul
rolb
cmp
bound
int3
mov
jge
jmp
ds
xchg
push
lret
movsb
mov
add
dec
sti
dec
dec
xor
clc
mov
cmp
std
sar
and
shll
cmp
and
test
icebp
and
adc
cmp
mov
push
mov
addr16
mov
dec
pop
mov
jge
dec
fstpt
dec
inc
test
lock
int3
and
pop
loope
and
cmpsl
jp
fcoml
push
adc
xor
add
adc
jb
ret
pop
or
lea
sbb
test
das
push
push
pop
cmpsl
js
je
push
add
push
cmp
mov
int
add
add
inc
mov
or
daa
aad
aas
sbb
adc
dec
sbb
or
xchg
and
jmp
or
clc
lea
test
jnp
mov
jecxz
sbb
dec
shrl
pcmpeqw
js
repnz
add
fistpl
mov
push
pop
sbb
std
scas
addr16
es
sbb
into
mov
subb
test
or
mov
inc
sub
inc
popf
push
jge
sub
in
imul
mov
pop
hlt
test
xchg
xor
cmp
cs
int
imul
icebp
and
mov
sbb
adcb
xchg
mov
pop
movl
mov
sbb
xor
jns
sbbl
sbb
insl
sub
lret
add
mov
xchg
inc
xchg
mov
insl
mov
sub
cli
scas
loope
pop
jg
daa
adc
mov
xchg
adc
sub
inc
pop
sub
mov
ja
adc
testl
add
sar
jo
lock
aas
das
adc
lcall
std
aas
jno
push
adc
jb
inc
and
add
mov
inc
mov
add
es
std
dec
jno
push
and
lds
es
mov
and
mov
mov
and
add
loopne
jg
mov
push
adc
sub
pop
ja
xchg
mov
fisttpll
and
outsl
adc
insb
xchg
pop
lock
cmp
jne
inc
cli
sub
fistpll
push
jecxz
fidivrl
push
cmp
je
and
es
int3
fimuls
or
or
and
sbbb
jmp
or
push
cmp
jp
xor
js
push
xchg
xchg
sub
or
lcall
adc
cwtl
add
xchg
pop
xor
cld
jmp
mov
pusha
mov
mov
inc
es
mov
mov
ljmp
sub
mov
movsb
pop
shrb
repnz
dec
loop
ret
sbb
insl
sbb
roll
iret
dec
adc
and
push
or
jnp
jnp
fwait
and
pop
stos
fisttpll
neg
jno
jg
insb
fwait
and
add
addr16
dec
adc
lret
aas
mov
sti
sub
add
loope
add
jecxz
cli
js
aaa
repnz
push
fiadds
repz
jl
push
add
loop
ja
or
insb
aad
jnp
js
cmp
adc
cmc
mov
mov
inc
out
sti
sbb
add
xchg
sar
in
cmpsb
int3
jno
pop
jecxz
push
adc
sub
push
insl
sbb
cmpsb
fnsave
and
fimuls
lock
jmp
ret
add
and
cmp
addr16
xchg
mov
fistpl
sbb
popf
cmpsb
pop
mov
outsl
into
mov
xchg
push
test
aaa
xor
mov
ds
jo
das
adc
mov
fistpll
hlt
dec
jbe
lds
xchg
std
imul
repz
xor
push
in
pushf
lahf
call
and
sbb
ficomps
in
insb
dec
push
dec
and
push
inc
rcl
cmp
mov
or
imul
bound
mov
cmc
lds
nop
clc
sbb
sbb
xchg
mov
jecxz
repnz
fsubs
std
fsubl
and
in
lahf
jb
lret
in
int
cmpsb
ret
jae
pushf
mov
xchg
lahf
popf
mov
xchg
cmc
push
and
lret
popf
daa
pop
xchg
inc
adc
dec
pushf
mov
jno
out
jb
inc
out
mov
adc
mov
pop
fbstp
sahf
jmp
and
adc
or
jbe
mov
xor
add
or
repnz
orl
popf
out
mov
inc
leave
rcrb
add
mov
loopne
pusha
stos
mov
inc
aas
movsb
out
jno
movsl
mov
es
cmp
jl
xor
sub
std
or
lea
mov
mov
loop
xchg
and
and
inc
cmp
lahf
mov
add
fdivl
lock
pop
push
repz
sub
mov
int
or
pop
jno
stc
mov
idivl
lret
xchg
imul
sti
fistpll
jb
es
fidivl
and
es
int3
out
inc
cmp
mov
sti
lret
mov
repz
or
leave
add
xor
add
push
lahf
shl
mov
imul
pop
adcl
xchg
rcl
andb
rcll
xchg
mov
ficoml
cmp
hlt
stc
or
cmp
dec
frstor
xchg
mov
sub
cmp
jmp
add
jmp
add
pop
mov
adc
xor
shl
sub
add
inc
les
sbbl
lods
sub
dec
push
lock
insb
mov
leave
fildll
sbb
hlt
std
push
stos
clc
xchg
shl
jecxz
data16
div
js
mov
rclb
jge
and
pop
and
cmp
lock
mov
stc
in
xor
pop
jae
leave
adc
mov
pop
test
sub
ret
xchg
jbe
pop
xchg
inc
add
dec
xchg
aam
ret
popf
add
mov
insl
lds
and
movsb
mov
pop
inc
cltd
or
divb
push
inc
xor
jmp
scas
scas
ds
mov
es
mov
ja
sub
sbb
and
mov
xorb
sub
add
xor
xor
test
in
and
lds
push
and
pop
adc
cmp
je
add
and
mov
enter
test
cmp
fstpt
sarb
out
jno
inc
dec
fistpl
and
dec
out
jno
stc
sar
imul
mov
std
in
jge
lret
xchg
push
fwait
jmp
push
mov
in
and
leave
iret
mov
sbb
stos
lea
jl
fnsave
jae
fldl
lea
mov
movsb
dec
push
sti
xchg
and
adcb
mov
cmp
mov
and
and
movsl
daa
inc
popf
mov
mov
inc
sbb
xchg
icebp
mov
mov
bound
dec
scas
daa
xor
jae
push
mov
outsl
jbe
add
movsb
dec
dec
and
xchg
dec
sahf
push
lods
fstp
mov
mov
mov
cmpb
jmp
or
incl
adc
call
ret
pushf
aam
jns
leave
add
lods
add
aam
and
or
test
sti
add
jnp
outsl
ds
dec
loop
lods
das
insb
aas
or
xchg
icebp
mov
mov
mov
jnp
add
add
mov
jb
mov
ds
lods
inc
jp
outsl
xchg
loope
rcll
nop
cli
shll
jge
repnz
das
mov
popa
inc
data16
lock
cmp
adc
or
mov
ss
loop
int
cmp
adc
loop
rolb
sbb
add
shlb
je
lret
ljmp
sbb
mov
ret
mov
lea
cmpb
pop
mov
jp
int
jne
int3
xlat
dec
mov
mov
ret
or
in
mov
rcl
pop
lret
daa
push
in
sbb
fnstsw
divl
jns
int3
fcompl
jns
cmpb
ret
sti
shr
cmp
loopne
mov
dec
add
arpl
pushf
daa
lods
add
cmp
cld
jno
mov
fwait
icebp
push
shr
sbb
cmp
xchg
fucom
pop
cmp
pusha
xchg
lods
and
mov
lock
adc
test
xor
inc
mov
or
mov
popa
push
dec
mov
mov
and
pop
mov
lret
and
push
mov
adc
jno
add
xchg
mov
and
aas
adc
es
jecxz
scas
mov
outsb
xchg
jo
mov
mov
add
fwait
xor
xchg
mov
mov
cld
sbb
mov
rorb
mov
pop
jmp
mov
jbe
cmp
add
sub
jnp
jnp
daa
cmp
leave
add
inc
sub
inc
popa
pop
mov
sti
popf
lret
pushf
jge
sub
push
movsb
outsb
cltd
and
subl
aaa
imul
ret
lahf
and
loopne
sbb
and
out
cmc
hlt
dec
js
push
cmp
and
adc
lea
aam
push
mov
movsb
cmp
daa
repnz
sub
inc
inc
mov
or
pop
sbb
push
xor
in
adc
imul
sar
scas
xacquire
es
jl
test
jl
lods
cmpl
std
push
sub
mov
add
sbb
cmp
ret
stos
or
js
and
aam
lock
xchg
and
mov
loope
stc
adc
andl
cld
int3
mov
xchg
mov
xor
frstor
jmp
rcl
in
adc
mov
stc
jnp
sub
pop
fwait
jge
inc
lds
xchg
pop
mov
fstl
fistpll
test
mov
cld
pop
cmpb
fsubs
loope
ja
add
rorl
mov
pop
pusha
in
loope
fsubs
push
mov
lahf
popf
and
mov
in
ja
negb
sti
push
int
hlt
or
jae
push
inc
and
test
sbb
jp
inc
sub
sti
lods
gs
int3
hlt
mov
adc
and
xlat
bound
adc
arpl
or
mov
adc
in
and
and
out
les
mov
push
xchg
in
loopne
sbb
lret
jmp
ja
and
cmp
mov
stos
ffree
pop
lock
push
sbb
jg
cmpsb
iret
clc
inc
fwait
pop
rolb
scas
xchg
cli
add
je
mov
adcl
clc
ds
test
dec
mov
and
cwtl
add
pop
add
dec
jo
jnp
mov
std
lock
mov
aas
int
ss
mov
xlat
movsb
clc
mov
mov
pop
push
adc
mov
push
pop
rcrb
jle
push
mov
loope
jmp
cmp
int3
sbb
rcrb
je
gs
mov
inc
enter
dec
jno
sbb
cmp
fwait
gs
xchg
or
mov
iret
pop
push
imul
in
out
je
xor
xchg
mov
add
mov
mov
xor
dec
cmovnp
movsl
rcl
jl
lret
mov
enter
test
jg
or
xchg
sub
xchg
ja
xchg
jmp
int
sbb
mov
pop
loop
sti
and
add
mov
push
sbb
scas
jns
pushf
fistpl
rcrl
xchg
dec
movsl
fcoml
mov
bound
adc
sahf
cmc
xchg
lea
mov
add
cmp
adc
popa
pop
sub
nop
jo
into
test
sbb
pop
xor
out
in
sbb
or
mov
std
cmc
in
lods
sub
jo
mov
push
xor
fs
mov
cmp
mov
ds
test
inc
ret
mov
clc
dec
pop
aad
jmp
fwait
int
mov
shll
aas
lock
push
push
cmp
push
xchg
mov
loopne
std
bound
adc
fisubs
testb
sahf
sub
loopne
mov
mov
xchg
call
test
add
scas
icebp
in
inc
dec
mov
push
mov
and
sti
addr16
or
test
or
pop
jae
testb
notb
jg
loop
sub
scas
mov
scas
out
in
mov
testl
stos
cld
sahf
js
adc
xor
iret
call
xchg
pop
or
pop
xor
sbb
rcr
lods
adc
and
popf
loope
popf
lds
jp
sbb
mov
lock
push
popa
jl
and
cmp
dec
jbe
sub
xor
lds
lret
data16
jecxz
loopne
xchg
and
lods
repnz
pop
fwait
push
inc
ljmp
fs
loopne
pop
loopne
adc
leave
sbb
fbstp
xchg
or
push
dec
pop
mov
adc
je
test
pop
or
push
hlt
mov
or
mov
in
pop
push
icebp
jmp
jnp
jbe
das
lds
mov
inc
fsubs
pop
ss
mov
mov
dec
dec
push
xor
je
dec
inc
push
mov
inc
jge
mov
sbb
mov
jle
ljmp
mov
xchg
das
repnz
lods
jg
mov
scas
add
fst
enter
ffreep
push
lahf
test
jne
or
or
cmp
lret
add
adc
ja
pop
push
push
dec
jb
push
cmpsl
cmp
hlt
bndldx
leave
xorb
movb
rcll
adc
mov
sbb
sbb
daa
push
icebp
ds
scas
or
andb
pop
addr16
in
loope
cmp
arpl
clc
arpl
jle
je
push
incb
push
pop
ljmp
dec
mov
adc
xchg
mov
lahf
call
loop,pn
lock
je
imul
dec
in
cld
repnz
cli
xchg
and
lahf
testl
inc
js
pop
jle
mov
cmp
pushf
pop
add
sub
in
out
cmp
bound
mov
popa
pop
imul
ja
loope
pop
add
movsb
push
adc
xlat
lcall
in
sub
mov
in
dec
int
je
adc
mov
shl
daa
sbbl
fnsave
dec
pop
inc
insl
push
stos
mov
fcmovbe
scas
sub
sti
sbb
ja
fwait
test
adc
push
repz
and
arpl
mov
lahf
adc
shr
and
repnz
out
jbe
pop
cld
mov
sub
or
stc
int3
popl
dec
sbb
inc
les
mov
ret
cli
mov
cmp
cltd
out
pusha
lahf
sbb
push
inc
fldcw
mov
rcrb
movsb
pop
and
outsl
sti
fptan
mov
pop
aaa
jbe
sub
cld
sub
stc
pop
mov
movsb
dec
pusha
xchg
nop
sub
pop
xchg
mov
push
je
sbb
mov
loop
lods
sbb
ret
cmp
push
scas
loopne
mov
mov
shrb
pop
mov
pop
sbb
pop
jno
stos
shl
jns
pxor
xchg
push
imul
adc
icebp
in
popf
add
sbb
insb
mov
iret
out
jae
jae
or
push
rolb
cmp
jmp
xchg
mov
push
pop
mov
sbb
call
mov
sahf
mov
lret
add
ret
mov
cwtl
int3
or
mov
lret
mov
sbb
imul
jmp
je
mov
adc
mov
and
out
pop
cli
addb
or
lcall
mov
aad
pop
cmc
iret
fstpt
xor
push
bswap
and
cld
les
inc
sub
fwait
xchg
into
push
push
lods
jo
fisttpl
ret
inc
outsb
mov
mov
lcall
movsl
jb
xlat
or
add
cmp
and
mov
test
fldcw
ret
jp
faddl
pop
inc
inc
jge
mov
lcall
xchg
nop
cmpsl
notl
or
bound
adc
xor
pop
data16
pop
sahf
add
cmc
nop
xor
push
ds
cmpsb
mov
nop
push
xchg
mov
inc
cli
lea
outsl
sbb
jg
sub
inc
les
enter
jle
jns
mov
lods
lods
mov
outsb
mov
pop
mov
lret
rclb
movb
dec
or
rcll
dec
jne
rcrl
pushf
lea
ret
sbb
fmull
bound
jecxz
out
enter
mov
das
mov
insb
mov
loop
outsl
pop
dec
and
test
jl
sbb
add
call
mov
stos
inc
mov
lahf
pop
jle
lds
imul
daa
cs
popf
add
test
mov
je
mov
daa
sbb
testl
mov
in
mov
in
mov
mov
into
mov
mov
and
mov
int
lea
push
xchg
mov
adc
sub
xor
xor
jge
jmp
jns
jns
mov
aaa
mov
jns
push
cmp
xchg
push
jo
out
popf
mov
sub
and
mov
dec
mov
and
sbb
and
insl
lahf
mov
fwait
mov
sbb
mov
xchg
mov
scas
bound
xor
sti
cmp
enter
rorl
mov
gs
cmc
and
in
or
inc
sbb
decl
xchg
movsb
push
aad
sbb
inc
cmp
out
and
xchg
xor
adc
mov
mov
jle
shll
cmp
andb
jg
in
dec
cmp
aaa
iret
les
insb
out
outsl
push
sub
insl
mov
incb
and
ja
push
push
lcall
adc
mov
mov
insl
adcl
push
popa
jo
dec
hlt
cmpsb
push
test
xchg
or
xor
mov
cmp
mov
sub
les
xchg
lea
mov
sbb
stos
iret
mov
lret
outsl
inc
rolb
cmp
mov
pop
mov
fldl
pusha
dec
and
adc
and
push
fistpll
movsb
dec
pop
mov
cmp
nop
mov
insl
daa
aas
sti
fdivs
scas
stos
jl
rcrl
lods
mov
ss
add
bound
add
mov
pusha
adc
push
or
xor
pusha
scas
cmp
cld
ss
sub
pop
or
inc
daa
pop
push
pop
movsl
add
xor
or
das
shlb
push
or
les
inc
inc
in
repnz
or
cmpl
dec
jne
ret
stc
movsl
scas
add
dec
sbb
or
fwait
lcall
mov
mov
js
pop
dec
and
out
cltd
daa
push
add
in
lcall
scas
int3
outsl
jg
push
cmpsl
repnz
mov
cmpsb
icebp
fnstsw
sbb
or
push
and
fnstcw
push
inc
les
loop
mov
fwait
jb
mov
insb
shll
das
les
xchg
fisubrl
mov
pop
test
in
fldcw
mov
rol
lock
sbb
jo
repz
cmpsl
lods
mull
andb
push
dec
aas
and
or
in
mov
inc
out
mov
lahf
jb
adc
cmp
jnp
and
sbb
inc
orb
leave
int
push
jno
pop
mov
sbb
ds
push
mov
cmp
dec
pop
scas
out
loopne
mov
lret
ja
pop
and
mov
divl
inc
mov
repz
mov
dec
fsub
repnz
xor
jle
pop
loop
mov
inc
sub
dec
loope
jae
rolb
movsb
sbb
hlt
idivb
mov
xchg
push
sub
insl
icebp
mov
sbb
adc
sub
nop
fadd
mov
pop
cmp
mov
cltd
insb
out
xchg
mov
xchg
lds
loop
out
mov
ljmp
in
mov
dec
sub
push
jbe
jecxz
push
inc
mov
jecxz
mov
sbb
dec
test
pop
add
cmp
add
or
dec
subb
add
and
mov
sbb
mov
scas
lret
xchg
xorb
imul
pop
mov
xor
out
jo
into
jg,pt
in
data16
das
imul
ja
lahf
mov
in
lds
sub
jb
mov
mov
and
aaa
dec
and
cwtl
adc
arpl
lret
outsb
inc
jl
in
rclb
lret
std
les
cmp
leave
in
cmp
mov
rcrl
mov
push
mov
jl
and
out
enter
add
into
repnz
hlt
jg
fisttpl
sbb
jecxz
jecxz
cmp
or
test
pop
neg
test
sbb
ljmp
test
imul
in
or
test
add
jecxz
shlb
xlat
inc
xor
or
or
mov
push
mov
adc
rcll
adc
into
or
fiaddl
mov
adc
cmpl
pop
idiv
jmp
and
mov
ficoms
jge
outsb
insb
pop
sbb
xchg
cmp
adc
pop
jno
stc
push
mov
and
movsl
cltd
push
xchg
mov
add
scas
and
aam
sbb
xor
dec
iret
or
push
pop
mov
mov
lock
mov
in
sahf
xor
jle
mov
push
outsl
enter
jg
repnz
add
ja
xchg
xchg
dec
mov
pop
pop
rcrl
inc
xchg
aas
scas
sub
mov
mov
mov
push
scas
inc
movsb
shlb
shlb
fwait
test
jnp
outsb
mov
mov
pop
jmp
add
sbb
dec
lds
pop
idivl
divb
sahf
lcall
sbb
push
inc
jbe
movnti
jbe
mov
xchg
sbb
lahf
shll
cltd
xor
in
ds
dec
mov
js
mov
popa
popa
fistps
test
mov
xor
pop
repnz
mov
push
pop
inc
inc
popa
pop
into
lods
not
cmp
outsb
adc
mov
pop
mov
mov
imul
push
push
fimull
pop
mov
push
std
je
pop
adc
pop
jmp
imul
std
ret
and
ret
sub
lods
xor
xor
and
ss
mov
addl
fwait
js
xor
or
arpl
inc
push
or
adcl
clc
xchg
les
push
adc
lret
fs
jg
pushf
gs
std
add
sbb
xor
movsb
sub
sbb
dec
ret
xor
movsb
cmpsb
sarb
pop
inc
push
jbe
jp
and
in
fwait
cld
popa
pop
mov
mov
and
roll
or
popa
adc
int
insl
mov
inc
add
insb
xor
out
int
test
jne
xchg
and
cs
inc
inc
xlat
sbb
mov
mov
sbb
call
cmp
and
test
add
es
and
and
pop
stc
outsb
lret
cmp
mov
dec
jo
push
subl
je
adc
or
fdivs
mov
dec
xchg
jl
stos
aam
pop
and
push
cmp
sbb
mov
sub
xlat
scas
std
repz
jl
inc
lds
div
out
pop
adc
jp
jp
loopne
ljmp
lret
xchg
push
jecxz
and
push
fildll
mov
ret
sub
rcr
fs
int
rorl
cmp
mov
mov
jp
adc
stc
adc
sti
insl
jno
jge
aad
out
mov
inc
rcll
sbb
je
out
mov
repz
cmp
xor
add
push
call
sbb
mov
cmp
fisttpll
adc
getsec
sub
dec
in
mov
lcall
mov
rolb
fildll
mov
pop
pop
int
inc
xor
xchg
cld
cli
jl
xchg
or
sbb
inc
sbb
jp
xchg
mov
cmp
and
and
inc
mov
cmp
fldt
cmpl
enter
int3
lods
test
addb
mov
js
jmp
mov
frstor
mov
jecxz
push
and
jnp
fistl
mov
sub
insl
or
inc
movsl
cmp
add
adc
fs
add
cld
dec
cli
adc
cmp
jmp
jnp
push
aad
push
xor
jp
pop
mov
enter
sbb
inc
jge
popf
add
cld
inc
sub
push
cmp
int
mov
fs
insl
out
pop
lret
aam
ret
in
int3
into
imull
jg
nop
das
jecxz
sahf
cmp
push
jns
in
loopne
mov
jns
sti
sbb
jge
jmp
rcpps
adc
push
fs
lret
jmp
jbe
dec
clc
test
mov
cmp
lock
adc
lds
or
xor
cld
add
push
jb
adc
jb
pop
fisubl
mov
sub
in
mov
movsb
xchg
or
std
push
lock
or
inc
rcr
jb
rcrl
cld
aaa
or
mov
push
fucomp
aaa
rcr
mov
scas
jmp
jg
negb
out
lock
jge
push
add
xor
mov
xchg
push
sub
push
enter
jnp
or
mov
sub
ljmp
mov
jmp
repz
jnp
pop
lods
mov
jge
push
mov
je
or
add
or
cmp
pop
mov
jmp
shlb
mov
cld
mov
aaa
xchg
outsl
sbb
cmpsl
mov
jg
mov
fstps
daa
mov
or
jne
nop
cli
fidivl
jns
mov
push
stos
dec
xchg
sub
push
cmp
mov
cmp
movsb
sbb
ss
push
test
xlat
xchg
rolb
lds
sbb
inc
sbb
mov
xchg
add
popa
pop
fsubs
push
imul
xchg
fwait
adc
insl
shll
xchg
popa
fdivrl
push
ret
inc
mov
ds
aad
mov
mov
xor
inc
test
js
inc
xor
xchg
pop
std
adc
out
bound
jge
push
in
mov
and
je
ret
xchg
sbb
inc
jmp
mov
adc
fmull
jae
jg
leave
aas
xchg
in
int
jecxz
and
jno
mov
cmp
cmp
cmp
jne
dec
ret
adc
scas
sub
inc
sub
mov
fisttps
xchg
add
cmp
cmp
mov
or
mov
mov
mov
push
jmp
inc
mov
repz
pop
jnp
hlt
and
iret
pop
lea
sub
iret
mov
cmp
sub
jne
shlb
test
add
push
loop
int3
sbb
add
mov
lock
int
sub
stc
push
and
fldl
jb
sub
leave
mov
leave
add
scas
push
inc
cmp
push
push
inc
mov
test
incl
push
pop
add
dec
sar
ja
push
sar
hlt
arpl
ficompl
mov
roll
dec
push
xor
loopw
testb
mov
inc
push
ret
loopne
sahf
mov
sbbl
add
inc
aas
pop
pop
mov
xchg
xlat
imul
les
jmp
adc
xchg
sub
cli
ret
mov
push
pop
insb
lock
pushf
sbb
jge
lret
enter
imul
push
push
shrd
xchg
rol
clc
or
fs
inc
sti
add
add
push
adc
je
int
lds
dec
rclb
iret
rorl
add
add
mov
std
idivb
sbb
sbb
cwtl
xchg
cmp
jmp
sbb
loop
and
fcmovu
std
dec
faddl
nop
fwait
or
cli
xchg
and
fcmovbe
mov
pop
cli
dec
nop
pushf
pop
das
mov
and
loop
mov
arpl
add
cmp
sub
xchg
in
xchg
dec
cmp
push
ljmp
sub
cmpsb
push
out
mov
mov
repnz
js
mov
test
mov
dec
out
adc
add
or
cmp
outsl
mov
stos
scas
imul
das
mov
js
xchg
pop
adc
ja
out
lcall
fld
mov
out
pop
icebp
push
inc
call
jmp
ljmp
jo
mov
loope
or
jle
ret
stc
mov
adc
pop
cld
repz
mov
and
or
lahf
loop
rclb
jae
incl
es
cli
lods
imul
xchg
insl
cmpsl
ja
mov
fdivrs
arpl
shrb
push
pusha
dec
in
ja
enter
jo
call
jbe
iret
je
push
cmp
out
dec
cmp
push
fnstcw
sbbb
scas
lods
das
inc
cli
clc
jecxz
and
leave
lock
mov
push
in
notl
and
std
je
daa
jo
sbb
xor
push
js
movsb
mov
sbb
push
inc
cwtl
mov
jle
inc
push
scas
popa
loop
add
sbb
mov
jp
xor
sbb
pop
dec
out
xchg
test
es
mov
test
adc
iret
stc
mov
push
mov
fimuls
nop
shrb
add
int3
sbb
mov
outsb
mov
or
movsb
leave
jmp
xchg
jmp
popf
ficompl
pop
sub
loopne
stos
inc
and
or
imul
shlb
xor
data16
ds
insb
rol
scas
mov
fsubs
dec
push
loope
test
mov
scas
and
js
lcall
push
sahf
add
cwtl
pop
or
imul
or
or
sbbb
push
and
pop
pop
dec
mov
mov
stc
lds
inc
cmpsb
adc
jne
or
mov
arpl
pop
mov
mov
and
loop
cmc
ss
das
xor
pop
xor
push
adcl
int3
adc
cmp
int3
add
out
clc
pop
xor
leave
jnp
fdivrs
mov
sbb
jl
dec
dec
arpl
leave
and
push
pop
inc
outsb
in
sub
clc
leave
mov
and
mov
pop
cmp
mov
jae
test
jb
arpl
inc
lea
aad
je
pusha
or
sbb
mov
cmp
in
rorl
outsb
dec
mov
out
rcr
lahf
leave
jno
cmp
and
mov
add
stos
pop
and
push
xor
and
sub
lods
mov
jge
jnp
mov
repz
shll
in
sub
mov
sub
loope
imul
rol
orl
pop
push
add
dec
jno
movsl
push
iret
sub
addl
push
nop
aam
and
sub
icebp
mov
test
test
add
mov
mov
push
scas
pop
xor
pop
fimull
mov
into
adc
cmp
in
sbb
lods
push
subb
xor
cli
ret
fildl
fnstcw
dec
and
outsl
adcb
fs
mov
jl
aad
test
mov
fdivrl
push
imul
push
pop
fistpll
lret
and
push
daa
mov
inc
or
inc
push
push
scas
push
inc
xor
inc
jmp
mov
mov
pusha
lds
out
mov
jno
mov
cli
or
insb
dec
xor
xor
clc
into
repnz
int
xor
int
mov
pop
js
daa
jns
into
add
test
outsl
jmp
mov
add
popf
decb
inc
sarb
in
mov
aam
pop
inc
jg
add
adc
test
test
movsb
insl
push
out
mulb
repz
ja,pt
mov
int3
add
jnp
push
xor
cmpsl
hlt
insb
sahf
pop
pop
xchg
push
pop
cwtl
icebp
mov
mov
stos
fstpt
inc
sbbb
in
jecxz
into
sub
es
pop
rorb
sbb
mov
outsl
jge
aaa
mov
xor
movsl
fwait
xor
push
pop
js
insb
lds
mov
std
adc
sbb
push
icebp
sbb
xor
adc
xchg
and
mov
adc
jae
fisttpl
push
fadd
xchg
push
insl
nop
fmul
jbe
sbb
test
xchg
aad
or
adc
mov
xchg
jo
or
adc
in
mov
loope
lret
jns
mov
daa
fadds
shll
jl
mov
test
repnz
cli
pop
xor
xchg
fildl
mov
jg
cmp
cli
inc
push
loope
sbb
xor
ss
lds
fldenv
pop
mov
leave
shrb
jl
or
movsl
jmp
repz
or
mov
fsubl
inc
arpl
mov
mov
add
jmp
jb
or
xchg
icebp
mov
test
fldl
stos
pop
testb
pop
sub
dec
cwtl
mov
std
int3
pushf
cld
sbb
xchg
push
popf
sub
cld
notb
jmp
arpl
int
jbe
push
repz
repnz
jae
shl
aam
push
imul
loopne
insb
insl
ds
movsb
popf
cmpsl
ds
adc
lds
repz
out
cld
sub
ffreep
in
push
push
or
jbe
or
or
sbb
pop
subb
enter
dec
mov
imul
jl
xor
sbb
sbb
daa
xchg
cmp
repz
pop
mov
cmp
cmp
xchg
and
repz
clc
jne
push
add
dec
sbb
cwtl
pop
lret
or
mov
push
iret
jne
jo
and
lock
lods
dec
mov
dec
and
sbb
iret
imul
cli
dec
xchg
jmp
paddd
push
or
sub
in
hlt
push
sbb
mov
or
outsl
nop
jg
lret
stos
xchg
push
or
mov
shl
js
cmp
stc
dec
movsb
mov
or
mov
das
adc
mov
shlb
das
mov
aad
or
xor
int3
jno
lods
cmpsb
dec
push
dec
jg
daa
mov
and
jg
xchg
mov
and
aam
imul
dec
rcr
repnz
and
lea
pusha
fstpl
adc
push
outsl
cwtl
das
cmpsb
idivl
mov
push
ja
inc
dec
mov
or
dec
adc
xchg
ss
xchg
add
dec
lds
jo
lret
iret
dec
inc
sub
adc
arpl
mov
out
pop
fwait
sahf
lret
rol
push
mov
inc
loop
call
out
adc
jmp
and
jmp
xchg
lods
jecxz
push
adc
xchg
int
js
out
jnp
mov
stc
fs
adc
jge
mov
pop
sub
push
fldcw
mov
fdivrs
sahf
pushf
and
pop
sub
mov
dec
lret
loope
jbe
and
add
lods
dec
xchg
fs
and
jmp
pop
lcall
lret
and
cmpsl
sahf
cmpsl
push
in
movsl
and
sub
test
cwtl
sbb
pop
mov
gs
xor
jecxz
sub
insb
adc
jle
aaa
ja
aad
or
inc
sarb
ss
scas
out
gs
ja
mov
mov
adc
mov
std
data16
push
sbb
push
cmp
jae
std
xor
aam
ja
pusha
push
pop
lock
in
push
fnstenv
jg
mulb
xor
add
and
dec
ss
daa
adc
cmc
pop
adc
stos
jnp
scas
inc
and
jno
das
inc
sub
push
cwtl
mov
inc
sub
sti
and
jmp
das
inc
dec
add
mov
out
adc
outsl
arpl
movsl
data16
dec
cmp
ret
fldt
cmp
stos
lock
fcoms
mov
sbb
xor
xchg
test
daa
cmp
in
movd
fidivrs
imul
inc
int
in
jns
scas
inc
jnp
xchg
idivb
ss
in
add
push
pop
pop
xor
xor
test
pop
and
cld
xchg
in
lret
mov
insl
lods
stos
mov
mov
push
stos
sti
and
jno
lret
inc
adc
and
xor
mov
push
or
enter
jns
into
scas
cmp
xchg
mov
cmp
sbb
add
push
js
popf
adc
dec
cmp
imul
sub
rcrb
or
mov
add
cmpsl
sub
rclb
pop
in
cmp
adcb
inc
mov
repz
xor
mov
repz
icebp
int3
mov
sbb
loopne
in
mov
jg
pushf
jge
inc
pop
repnz
ret
push
xor
adc
cmp
stc
fcoml
leave
int3
and
inc
and
nop
pop
int3
iret
sti
jg
scas
fistps
test
mov
inc
mov
mov
mov
fwait
rcll
or
mov
push
pop
das
mov
rclb
mov
jg
arpl
icebp
loope
cmpsl
sub
in
out
xor
or
dec
das
adc
ds
jmp
cltd
inc
pop
inc
imulb
add
xchg
pop
lcall
push
dec
popf
cmp
lea
lea
mov
sub
push
je
fsubl
sbb
jae
mov
push
mov
push
pop
jl
sbb
push
pop
and
xchg
movl
xor
addr16
jecxz
inc
pop
mov
scas
fisubl
push
aam
xchg
push
add
fsubrl
xlat
mov
test
js
enter
lods
mov
notl
dec
jb
sbb
insb
cmp
dec
mov
add
sti
adc
gs
pop
lret
sub
js
push
mov
in
mov
sub
inc
inc
loopne
dec
gs
in
js
sti
fisubrl
mov
outsl
xchg
popf
dec
adc
lret
adc
icebp
jp
in
mov
cs
xchg
je
sbb
or
shlb
daa
int
pop
add
mov
loop
sbb
sub
negl
lods
and
lods
fnstsw
cmp
cmp
pop
pop
jae
mov
jnp
pop
pop
xchg
test
pop
fs
pop
popf
push
xchg
lcall
lret
push
jp
mov
fs
incb
fisttpl
mov
pop
dec
aaa
cmp
std
sub
push
lret
mov
enter
or
jmp
repz
sub
pop
divl
mov
pushf
sahf
insl
dec
les
rolb
in
ja
in
jle
mov
incb
loope
lds
imull
imul
leave
fidivs
jns
fisubl
or
add
jnp
mov
dec
test
int
pop
pop
clc
stos
sbb
and
loopne
divb
adc
pusha
rcrb
mov
out
and
and
test
std
out
and
aam
push
jecxz
xchg
enter
xchg
adcl
outsb
cmpsl
rcr
add
js
ret
dec
cld
jne
cltd
adcb
xor
loop
mov
mov
xchg
xchg
sarl
pop
mov
mov
xchg
aaa
push
or
add
mov
dec
stc
sbb
std
and
mov
cli
pop
sub
data16
jae
adc
loopne
loope
gs
xor
fisttps
and
int
sti
ds
sbb
test
xchg
pusha
mov
pop
add
jnp
out
mov
cld
lods
in
mov
mov
int
les
mov
daa
mov
xchg
aaa
xlat
jle
mov
daa
loope
loope
cli
pusha
sbb
xchg
and
test
mov
pop
xchg
cmp
mov
das
rclb
adc
mov
in
push
movsl
mov
lcall
enter
aaa
popa
in
ss
jbe
shll
push
scas
jle
cmp
cmp
sub
xor
mov
cmpsb
sub
repz
nop
lea
imul
mulb
xchg
cmp
mov
mov
es
mov
notl
je
sarl
jns
jmp
push
dec
les
mov
mov
mov
scas
les
out
mov
fildl
sub
adc
js
jnp
test
mov
ret
inc
in
add
fs
pop
cmpsb
scas
push
push
lds
mov
arpl
pop
add
push
les
mov
dec
lahf
dec
mov
xor
adc
mov
out
rorl
imul
jge
mov
pushf
into
fs
sub
lcall
cmc
inc
and
pop
mov
daa
out
mov
daa
cmpsb
pop
and
lods
sub
es
mov
add
vmread
fsubr
jbe
loop
test
cmpsb
insl
jecxz
lea
mov
js
xor
leave
cmp
and
lret
ss
pop
and
pop
testb
adc
fcmove
lods
in
mov
jl
int
shll
mov
jae
mov
push
xor
dec
mov
andl
xchg
dec
sbb
mov
and
push
loopne
jl
stos
scas
sti
std
test
push
sbb
popf
or
test
in
xor
ljmp
mov
or
adc
out
movsb
lahf
loope
sbb
iretw
adcb
pusha
cwtl
cmpsb
fsubl
pop
popa
xor
lock
mov
out
jno
mov
ret
jo
bound
xchg
push
adc
jbe
mov
and
call
dec
mov
or
enter
inc
adc
jmp
cmpsb
mov
dec
cmp
imul
mov
dec
xchg
ret
cmpl
mov
sahf
jae
push
adc
mov
cmpsb
jo
mov
jecxz
push
test
leave
or
push
std
pop
es
imul
or
sbb
mov
cwtl
cltd
xlat
ficompl
das
inc
call
shll
dec
ret
sub
icebp
cmp
dec
outsb
loopne
insl
or
and
gs
cmpsb
push
jnp
push
fcmovbe
clc
fs
decl
insl
stc
push
mov
sub
fisttpll
mov
dec
int3
arpl
pop
dec
enter
into
fildll
add
dec
fwait
aaa
pop
ret
mov
xorl
repz
repnz
pop
divl
xor
jp
ror
popf
test
aam
push
sbb
add
lock
inc
rorl
ret
push
dec
gs
dec
jb
dec
aam
inc
insl
loop
aaa
jbe
call
adc
adc
push
inc
aas
and
jne
ljmp
pop
shlb
xor
mov
push
adc
sub
mov
ljmp
push
jmp
incl
push
jge
jbe
add
sahf
loopne
add
out
ficoml
insl
and
movsl
stos
lret
dec
inc
popa
cmp
testl
sub
std
rcrl
or
scas
fbstp
je
repnz
in
out
push
jbe
adc
cmpl
push
ljmp
mov
iret
scas
push
dec
int
add
sbb
dec
mov
test
loopne
ret
push
sti
mov
fidivl
hlt
aaa
cmp
rcr
pushf
test
push
jnp
je
into
nop
fnstcw
sub
add
sub
inc
mov
and
les
cmp
and
outsl
cli
inc
aad
jnp
mov
inc
cltd
inc
sbb
adc
pusha
xchg
cmpsb
or
pop
iret
xchg
mov
fdivrl
lds
sub
inc
xor
inc
jnp
outsl
cmp
inc
xor
dec
pop
lds
and
mov
mov
jle
pop
mov
scas
mov
in
push
cmp
add
imulw
cmovns
out
sbb
jle
enter
or
imulb
sbb
and
pop
pusha
sub
jmp
mov
dec
sbb
push
inc
hlt
push
loopne
loope
dec
push
mov
insb
gs
sbb
or
adcb
test
or
in
pusha
cmp
outsb
sbb
insb
xor
dec
testb
add
out
dec
pusha
inc
cmp
push
inc
and
sahf
sarl
fmuls
call
adc
in
xchg
dec
fsubrs
xchg
xor
stc
push
arpl
ret
and
push
mov
xor
lea
je
dec
hlt
push
lret
or
leave
mov
adc
xlat
dec
sub
pop
das
jb
and
fwait
incb
ret
movsl
fstps
pextrw
and
fsubl
out
lock
lods
push
ja
sbb
mov
shll
jmp
pop
xchg
gs
cmpsl
jecxz
test
jae,pt
jecxz
sbb
pop
add
clc
aas
xor
std
popf
pop
pop
pop
cmp
mov
loop
jo
xlat
xorb
pop
push
mov
imul
into
mov
lods
jl
imul
negb
or
push
call
mov
fcmovnu
mov
xor
call
aam
popa
repnz
and
mov
mov
dec
push
lea
enter
push
repnz
out
loop
leave
and
dec
scas
mov
adc
adc
in
xchg
sbb
xchg
and
cmpsl
outsl
test
sti
sahf
or
in
fwait
subl
repnz
xchg
mov
sbb
or
mov
cmp
into
sti
bound
pusha
and
mov
mov
xchg
je
mov
push
or
adc
push
clc
push
outsl
sbb
stos
in
sbb
incl
cbtw
shr
xor
pop
and
xlat
jg,pn
jl
inc
fists
cmp
decl
sub
and
in
jmp
and
mov
test
mov
scas
fstpl
rcrb
arpl
add
sbb
mov
mov
inc
jnp
testb
cwtl
xrelease
loope
jmp
lods
sub
sbb
mov
out
dec
scas
lods
mov
addb
sbb
lahf
outsl
out
addr16
or
dec
add
xchg
xor
in
addl
and
xor
mov
addr16
test
adc
and
xchg
scas
push
sbb
out
lds
lea
outsb
sub
cmp
sub
dec
push
imul
hlt
push
lea
sub
pop
ret
out
inc
jle
sub
test
int
stos
jbe
lcall
movsl
int3
jp
push
insl
rorl
dec
adc
xlat
sub
dec
movsl
sbb
mov
fwait
inc
testl
sbb
pusha
xchg
pop
sub
xor
movsb
call
xlat
mov
out
mov
sub
push
xor
stc
xchg
iret
popl
mov
lcall
inc
pop
dec
les
cltd
cmpsb
aam
mov
aad
push
mov
inc
xchg
dec
jno
add
jge
add
js
jge
roll
xchg
cmpl
mov
cmp
insb
clc
daa
and
pusha
cmpsl
in
sub
aad
test
cmpsb
adc
les
push
mov
shlb
pop
cld
repnz
rcrl
mov
and
cmp
repz
hlt
jmp
dec
movsb
rorl
push
jae
aad
aas
sahf
loope
sbb
xor
xlat
or
cmpsl
dec
insl
fwait
nop
mov
cltd
fisubrs
ds
jge
stos
stos
insb
sub
lock
jne
es
sbb
adc
cmp
aad
inc
add
sahf
outsl
es
stos
sbb
inc
xlat
out
sbb
roll
dec
add
cmp
dec
xor
shll
fwait
imul
out
ret
mov
xchg
push
lret
pop
pop
inc
push
mov
inc
test
nop
and
dec
les
cmp
jmp
repz
fs
ffree
lds
or
orb
mov
insl
jnp
push
mov
xor
jno
xor
xchg
aaa
adc
adc
pop
insl
test
call
mov
bound
sub
add
add
pop
in
sub
and
popa
inc
or
mov
ljmp
out
jg
fisttpl
lods
dec
jns
gs
iret
mov
stos
data16
scas
std
inc
add
int
repnz
sbb
mov
test
mov
adc
psllq
lods
inc
mov
cld
int
inc
xchg
xor
icebp
cmp
sub
mov
and
cmp
jp
fidivl
addr16
icebp
xchg
xor
in
cmp
and
js
mov
push
add
repz
pushf
dec
add
je
push
aam
test
stc
jo
addr16
mov
mov
jp
sub
pop
loopne
leave
cmp
jmp
xchg
out
mov
dec
mov
and
sbb
in
in
movsl
sub
pop
mov
insl
aas
pop
mov
arpl
ret
in
xor
adc
sub
sarl
and
jnp
or
ljmp
or
pushf
std
test
mov
and
sbb
adc
call
cli
inc
jl
cwtl
idiv
mov
repnz
ss
inc
fwait
dec
pop
sahf
sub
addb
sub
add
test
leave
cmp
les
add
mov
idiv
jecxz
int3
push
add
and
int3
pushf
inc
push
add
fldenv
sti
sub
jnp
cwtl
shlb
jecxz
sbb
cmp
subb
mov
sub
lret
iret
mov
push
imul
mov
loopne
inc
stc
ret
inc
sub
movsb
movsl
add
mov
cmp
ljmp
jp
cmpsb
loope
aam
adc
xchg
cmpsl
stos
cmp
fldenv
decl
insb
cmc
adc
ds
dec
xchg
sub
test
ficompl
sti
ljmp
push
lods
push
sub
ljmp
push
ficomps
push
fnstenv
fs
mov
mov
out
lds
adc
pusha
xchg
cmc
mov
jno
cmp
xchg
cmp
test
mov
dec
mov
jecxz
push
push
mov
sub
js
je
lds
adc
shll
nop
fcomp
jmp
cmp
dec
aas
and
xchg
mov
mov
mov
lret
jbe
jae
dec
sub
into
insb
andb
incb
arpl
mov
emms
aaa
cli
jge
pusha
sub
add
sub
sub
mov
ret
out
jo
inc
das
mov
mov
es
lods
cmpsb
xchg
in
loopne
sub
adc
adc
jecxz
shrl
jae
cmp
push
scas
fmul
stos
int3
sbb
inc
loope
mov
push
adcl
ljmp
sbb
cmc
mov
push
adc
pop
pop
pop
fs
mov
cmpsl
add
xchg
fcmove
cmpsl
daa
scas
ret
sbbl
mov
jns
mov
and
ja
in
xlat
add
out
popf
stos
lods
mov
jnp
adc
xchg
cmp
cmc
lock
push
movsb
in
cmpsl
fidivrl
hlt
adc
mov
fwait
fwait
cmp
addl
sahf
sti
addr16
dec
sub
xchg
iret
push
xor
sub
dec
stc
stos
dec
or
popa
push
pop
jns
out
test
inc
dec
mov
inc
mov
nop
jp
xchg
mov
push
cmc
push
dec
pop
gs
push
pusha
mov
ja
lods
sahf
fwait
and
xchg
testl
push
mov
mov
in
jbe
jge
pusha
push
hlt
add
mov
mov
in
push
in
out
adc
cltd
sbb
mov
or
cli
lds
outsb
fsubrs
pop
in
gs
test
add
xchg
fnstenv
dec
enter
mov
dec
xor
cltd
add
jne
mov
adc
loope
in
xor
aad
sarb
push
xchg
inc
outsb
xor
aad
lods
pusha
repnz
mov
int
add
xor
jae
xor
out
sub
sysret
stc
mov
pop
mov
dec
movsl
and
out
pusha
js
test
pushf
jecxz
fwait
and
mov
xchg
add
sti
mov
mov
fwait
clc
fwait
enter
outsb
dec
loop
mov
adc
xchg
mov
xchg
mov
cmp
lods
pushf
sub
lret
sub
mov
js
andl
sub
imul
xor
ror
add
sarl
mov
icebp
xor
dec
stos
aam
mov
jle
notl
sub
mov
adc
decb
loopne
les
sahf
lea
mov
mov
jbe
test
sub
das
push
cli
sbb
test
lods
jg
orb
clc
cmpsb
icebp
mov
jnp
imull
mov
push
rorl
cmpsb
jno
lea
sbb
sbb
mov
add
fs
nop
stos
shl
jb
sbb
lds
fucom
fidivrs
xchg
stc
gs
mov
js
fidivrl
sbb
lea
adc
jp
or
sub
outsb
jns
cmp
roll
js
in
pop
scas
mov
mov
sbb
stos
jg
in
orl
xchg
add
and
aam
push
add
les
pop
inc
iret
and
sbb
mov
clc
push
mov
or
cmp
mov
pop
mov
daa
repz
into
or
jb
add
scas
xlat
movb
jp
jp
ds
mull
lea
and
sub
sub
mov
xor
ret
out
cmpsl
jb
jmp
out
adc
mov
int
xchg
orl
push
jnp
repz
mov
and
aaa
das
sbb
push
test
xchg
mov
adc
test
pop
fstps
fdivs
adc
mov
xor
lahf
cmp
out
adc
or
xchg
jle
or
insl
sbbb
data16
and
lods
jle
jg
out
enter
mov
jl
cmpsl
mov
mov
in
adc
bnd
ret
scas
out
fistl
and
sbb
fstl
jnp
xchg
popa
mov
sub
or
imul
out
test
mov
lahf
rcrl
mov
sub
aam
adc
push
push
adc
cmc
xlat
scas
ror
je
mov
mov
in
insb
aas
add
mov
jnp
aad
mov
movsb
cmp
push
mov
xchg
xor
stc
xchg
jl
cmp
xchg
testb
fwait
push
das
cmp
cmp
cmp
sub
popf
loope
and
sarb
lods
inc
decl
mov
jl
xchg
jge
je
les
or
aam
ret
mov
outsl
mov
or
rcl
fcomps
adc
adc
push
repz
mov
xor
pop
idiv
xor
add
ret
out
lds
push
loop
imul
mov
test
adc
ja
and
cmpb
pushf
cmpsl
dec
pushf
roll
sbb
mov
lds
aad
sbb
loop
imul
insb
mov
dec
mov
mov
sub
jns
cld
outsl
adc
icebp
and
sub
pushf
and
dec
dec
mov
or
loope
cmp
sub
push
add
push
daa
repnz
and
punpcklwd
mov
std
and
and
sub
and
jp
or
xor
inc
imul
inc
shld
inc
cmp
stc
push
std
push
push
and
in
mov
mov
repnz
arpl
xchg
hlt
dec
mov
imulb
lock
jbe
aad
lret
leave
cmp
orl
sbb
aas
xchg
fadds
add
jmp
mov
subl
lods
mov
mov
arpl
lods
aaa
scas
popa
filds
pop
xchg
fnstsw
jns
outsl
pop
mov
das
cmpsl
jle
adc
test
cmp
lret
jns
mov
dec
mov
xchg
daa
faddl
dec
cmp
jg
dec
movsl
push
mov
sub
mov
push
fsts
fnsave
mov
notb
xor
jecxz
mov
adc
clc
xor
inc
hlt
vminss
flds
sbb
iret
mov
mov
or
cmp
sub
add
adc
sbbl
push
fs
jo
lahf
pcmpeqb
jl
bound
dec
movsb
push
push
or
and
in
xchg
aas
xchg
adc
jecxz
lods
fildll
movsl
arpl
dec
das
gs
dec
arpl
cmp
int3
lahf
sub
jl
pop
ja
loop
pop
dec
ret
dec
cmp
jp
xchg
sub
mov
jmp
mov
add
not
sbb
xchg
shll
sbbb
stos
dec
jb
xchg
stos
add
and
mov
jbe
xchg
std
push
xorl
dec
ds
jo
mov
ss
add
mov
cmp
mov
mov
test
pop
loopne
leave
leave
int
pmullw
aam
movsb
lock
push
push
jl
mov
scas
xlat
jnp
pusha
in
cmp
or
loope
sub
hlt
push
cmpsb
dec
faddl
push
scas
pop
aad
ljmp
pusha
repnz
sub
or
lea
xchg
and
dec
sub
arpl
or
fidivrs
arpl
lret
adc
xor
hlt
pop
popf
pusha
addr16
ja
imul
xchg
clc
pop
ds
mov
sbb
in
lret
lret
nop
mov
xor
cli
sub
jnp
aad
out
sti
movsb
jl
push
mov
sbb
out
xchg
lods
adc
rcrl
flds
or
add
adcb
mov
xchg
and
xchg
mov
and
idiv
xchg
mov
clc
jg
adc
out
addr16
sbb
ljmp
js
stos
mov
loop
jmp
div
jp
rcr
in
inc
xor
out
std
xchg
in
mov
and
cli
and
lods
jbe
cwtl
pop
jmp
mov
fisubrl
std
sub
or
scas
imul
sti
push
cmp
and
xchg
mov
fwait
test
dec
test
dec
add
movb
jbe
fs
sbb
push
into
xor
out
adc
add
adc
mov
push
lcall
sahf
leave
dec
pop
sub
in
jle
jo
popa
sub
jbe
mov
les
cmp
fcoms
adc
insb
popa
dec
leave
cmc
repnz
mov
pop
push
mov
mov
lea
mull
sbb
das
fs
ss
test
scas
sub
mov
daa
push
cmp
jne
loopne
push
std
inc
call
das
daa
es
repz
pop
xor
movsb
cmp
and
xor
mov
push
shlb
in
popf
inc
inc
cmpsl
scas
xchg
mov
loope
in
testl
mov
mov
mov
dec
sub
mov
jmp
xchg
mov
inc
gs
out
pop
test
addr16
pop
inc
lods
in
mov
ja
sahf
cltd
fbstp
andb
dec
cmpsb
movsb
mov
push
rcll
addb
lods
insb
pop
cmpsb
out
sub
mov
mov
in
out
shrb
cmp
test
cmp
int
mov
adc
mov
imul
loopne
push
jecxz
jecxz
rorb
dec
dec
lea
das
ss
loopne
sub
or
ja
push
sub
icebp
add
int3
jne
sub
test
enter
outsb
xchg
in
mov
inc
and
imul
in
testb
sbb
xorl
push
stos
push
mov
pop
cld
jnp
popf
mov
cltd
sbb
bound
mov
out
mov
scas
clc
mov
fs
icebp
int
jb
cmpsl
pop
push
lods
add
cli
jo
pop
mov
rcl
popf
add
add
mov
adc
jg
dec
mov
mov
insl
clc
fimull
gs
lods
sub
movsb
test
push
mov
aaa
and
sub
test
stos
sub
int3
pop
ret
cmp
or
scas
shll
sbb
rcll
cmpsl
sub
in
out
scas
rcll
dec
jmp
data16
pop
add
push
sbb
adc
xor
inc
cmpsb
cli
std
in
stc
lret
cmp
popa
daa
lcall
cmp
divb
shlb
or
out
imull
or
cmp
cs
idivb
out
addr16
add
int
repz
das
lahf
fwait
incl
ret
jmp
sub
aaa
sbbb
inc
dec
and
test
push
jno
insl
data16
xchg
popa
pop
or
cs
xor
xchg
mov
push
adc
push
loopne
aas
rorb
imul
dec
mov
cmpsl
fimuls
cmp
cli
sarl
and
cmp
mov
jmp
xor
ljmp
sbb
mov
rorl
ret
daa
call
repz
push
testb
ss
aaa
and
jge
cmp
add
fstpt
and
fidivs
stos
movsl
shlb
shrb
pop
lahf
lret
aas
jo
add
dec
aad
cmp
add
adc
pop
push
sbb
cmc
lods
scas
xor
cmp
in
jae
cmc
fildl
in
int
insl
sti
pop
mov
dec
insl
sbbb
dec
pop
sbb
adc
add
adc
rorb
sahf
xchg
adc
add
adc
jmp
cmp
fsubrl
push
pop
cwtl
leave
ret
mov
sahf
lods
add
lea
push
dec
fcmovu
mov
addl
shlb
lret
fstl
dec
gs
fldenv
xchg
fs
add
add
pop
pop
mov
sbb
jl
cltd
test
lods
mov
repnz
pop
jb
fistpll
xchg
nop
pusha
sbb
mov
inc
xchg
je
mov
sbbb
jb
and
inc
cmpsl
fldcw
int3
int3
dec
inc
cmpsl
cmpsb
and
mov
xchg
sarl
inc
stos
mov
push
add
xlat
pop
jb
insl
mov
or
sub
insl
sub
movsb
or
mov
cmp
cmp
movsl
mov
mov
inc
push
sub
or
and
jne
dec
xchg
int3
pop
xchg
repz
xchg
stos
ffreep
and
pushf
loopne
movsl
mov
mov
ret
das
popf
sub
nop
in
aas
mov
dec
cmp
addr16
inc
add
pop
imul
jl
cmp
dec
stc
imul
cli
inc
aad
adc
ret
pop
std
sbb
and
sub
addr16
push
cmp
or
or
pusha
push
inc
inc
jp
dec
pextrw
push
ficoms
out
dec
rcl
lds
xchg
jg
push
lds
adc
cmp
fcmovnbe
push
enter
adc
mov
jecxz
adc
jno
in
imul
shr
test
cmp
scas
xchg
lcall
imul
xlat
js
adc
sub
sub
or
dec
push
loope
or
or
popf
je
adc
mov
adc
mov
int3
and
repnz
xor
lock
inc
das
movsl
js
or
push
xchg
xor
mov
pop
sub
ds
pop
repnz
gs
xor
push
sbb
test
or
nop
icebp
lret
out
cmp
leave
int3
jbe
sbbb
movsl
js
lea
mov
cmp
imul
mov
xchg
das
movsb
lds
aaa
push
add
jnp
lock
mov
or
dec
jb
mov
flds
rcrb
jp
inc
fidivs
aaa
shll
scas
insb
add
insl
xchg
addr16
jmp
sti
bound
xchg
push
les
pop
adc
push
push
mov
es
jmp
out
jnp
add
test
sub
jnp
pusha
cld
jg
sbb
orb
inc
imul
and
push
dec
and
imul
jnp
sub
push
cmp
pop
rcl
call
fstpl
jg
pop
pop
insl
out
jecxz
adc
out
jb
mov
xchg
xor
push
cli
mov
fwait
and
bound
pop
pop
jb
ss
shll
dec
mov
mov
rcll
and
mov
adc
in
pop
add
add
scas
push
aam
stos
dec
jae
std
flds
dec
test
aam
xchg
xor
out
cmp
fldcw
pop
andb
jle
adc
mov
ljmp
cmp
arpl
cmp
pop
mov
mov
sbb
jmp
mov
or
out
mov
push
xchg
data16
push
mov
test
jmp
pop
mov
and
jb
gs
push
xlat
test
loopne
pop
scas
add
shll
sub
fnstsw
mov
cmc
test
mov
ror
jg
stc
xor
push
mov
inc
or
cmp
and
mov
mov
mov
lcall
into
ret
mov
pop
mov
sub
movsl
mov
cmp
pop
stos
cs
jnp
jne
pop
and
enter
jbe
xor
fs
dec
sub
xchg
rcrl
insl
sti
xor
hlt
mov
dec
aas
imul
push
test
in
loopne
popf
push
mov
rcl
lret
rolb
dec
out
sbb
adc
hlt
cli
in
shll
xchg
and
movsb
lret
test
lcall
cmp
sub
mov
sub
adc
or
xchg
test
sub
and
loop
leave
sbb
jo
sbb
add
cli
xor
pcmpeqb
rcll
daa
daa
cli
push
dec
js
mov
sub
or
mov
test
jmp
jge
cmp
push
dec
incl
add
ret
mov
push
pop
xor
mov
jecxz
cmp
push
push
rcr
bound
fiaddl
mov
icebp
push
test
test
fcompl
push
dec
stos
and
imul
lods
sti
dec
repnz
jne
sbbb
repz
and
xor
aam
fnstcw
mov
adc
insb
shrb
call
addr16
popa
cld
cmpsl
push
sbb
jno
mov
popf
mov
pop
in
jl
mov
jmp
mov
repnz
mov
shlb
push
das
das
movsl
hlt
and
cli
repz
pop
pop
aas
fbstp
dec
xorb
stc
out
leave
push
in
sbb
mov
lret
sub
popf
scas
and
push
inc
and
push
int3
cmp
rolb
outsl
cmp
xchg
lret
repz
or
cmp
aam
push
jnp
pop
arpl
das
aad
stos
je
pop
sub
adc
dec
lahf
ljmp
mov
mov
xchg
dec
aas
lock
xchg
aam
addb
repz
mov
leave
test
adc
xor
loopne
arpl
push
es
and
and
inc
or
fiadds
fs
aad
das
jbe
loope
test
in
mov
pop
cmp
add
sub
lods
mov
es
into
cmp
jns
aam
pop
adc
fcomi
in
mov
popf
sarb
or
aaa
xor
mov
ljmp
iret
imul
mov
mov
repz
mov
add
sbb
es
jmp
loop
xchg
je
jb
arpl
shl
lahf
push
fists
sbb
push
mov
les
sbb
push
mov
out
ljmp
xchg
or
imul
mov
dec
add
testl
mov
insb
push
in
jecxz
push
sbb
std
xor
decl
fstl
fcoml
cmp
divb
pop
pop
insl
std
cmp
loopne
call
inc
repz
cmpsl
hlt
mov
sub
push
jno
inc
dec
inc
fcmovnu
out
mov
mov
jns
fucomi
add
les
into
inc
arpl
in
mov
out
aam
stc
mov
adc
add
je
dec
shl
pop
bound
mov
xchg
les
sbb
sub
mov
lcall
mov
int3
lds
adc
fmuls
sub
xchg
sbb
mov
inc
sbb
push
jecxz
xor
cmp
imul
imul
fstpt
cli
movsb
and
jp
push
and
mov
jmp
mov
das
test
ret
enter
jle
mul
adc
in
sbb
dec
stos
ss
mov
in
mov
dec
loop
cmpb
jns
adc
pushf
addl
negl
or
cld
cwtl
inc
add
fwait
scas
in
push
ja
cwtl
and
mov
jle
add
mov
sbb
sub
mov
cmp
testl
jg
jnp
push
sbb
arpl
jmp
dec
xlat
xor
push
cli
cmpsb
popa
mov
jne
icebp
bound
shrb
jge
jns
and
and
loop
imul
mov
push
xor
inc
push
cmc
lods
subb
sti
jne
test
loop
push
xor
sti
cmpsl
mov
aaa
fists
sbb
out
iret
inc
jp
push
loop
add
sub
and
gs
pop
mov
lcall
aad
jecxz
aam
jp
call
imul
jl
cmp
aas
pop
sub
xchg
clc
out
push
decl
popf
jecxz
push
enter
aad
call
inc
pop
cwtl
gs
mov
sbb
or
push
testl
je
pop
fdivs
in
loop
movsl
insl
hlt
in
jae
daa
rorb
or
js
sbb
popf
xor
fistpl
sbb
mov
xlat
lahf
in
jl
arpl
dec
adc
pop
jge
fnstenv
mov
mov
mov
test
cmpsb
ret
test
dec
test
gs
jecxz
hlt
mov
iret
insb
and
dec
xlat
jns
lret
cmp
enter
roll
xchg
jae
and
pop
sub
inc
popf
adc
stos
sbb
xlat
or
jg
adcb
push
inc
mov
ds
jno
js
push
movsb
aas
pop
insb
pop
hlt
sub
jnp
imulb
in
leave
push
jl
sub
pop
lcall
mov
lret
mov
mov
inc
in
cmp
rcr
imul
mov
sbb
push
into
andb
mov
leave
cmp
ljmp
and
sbb
movsl
lock
aas
lahf
ss
out
sub
adc
or
incl
clc
test
sub
mov
mul
mov
std
and
dec
in
adc
lods
add
fcompl
inc
cmp
jle
repz
jecxz
mov
bound
out
cmpsb
ret
cmp
fstps
gs
out
jecxz
dec
shld
jmp
aam
and
jge
nop
mov
cli
orl
mov
add
xor
cli
lock
or
fsubl
gs
int3
lahf
sub
enter
pop
jae
bnd
cmp
pop
adc
mov
data16
cmp
lea
int3
push
icebp
js
popw
stc
pop
mov
adc
fnsave
or
in
movsb
sbb
gs
mov
frstor
jbe
adc
dec
dec
push
jnp
cmc
fcmovbe
gs
mov
mov
and
adc
jmp
xchg
mov
and
pop
aaa
outsl
cltd
cmpsb
mov
inc
int3
std
incb
enter
sbb
mov
cwtl
cmp
mov
mov
xlat
rorl
fnstcw
cmp
pusha
xchg
mov
lock
out
mov
dec
pop
lcall
stos
sub
mov
push
jmp
pop
push
xchg
pop
cmp
jg
aaa
add
jo
scas
orb
mov
gs
jno
dec
js
xchg
push
cld
or
jmp
das
lods
push
fwait
test
mov
sub
mov
add
sub
pop
adc
out
mov
mov
add
testb
push
shlb
pop
insb
sbb
xor
test
ret
jb
xchg
dec
pop
fs
loopne
dec
push
pop
pop
mov
jg
test
or
mov
lods
xchg
cs
dec
les
cmp
adc
pop
sub
pushf
dec
fcmovne
xor
call
xor
jge
mov
cmpsl
sbb
add
sub
inc
imul
push
dec
jle
lods
sarb
iret
lahf
fcom
sbb
cmova
or
xchg
or
push
rcrb
mov
daa
xchg
cld
movsl
push
insb
stc
cmp
cmp
and
jo
cli
insl
pusha
dec
adc
stos
imul
cltd
sub
push
repz
sbb
jge
scas
sub
fnstcw
mov
ljmp
scas
in
scas
or
sahf
shl
inc
mov
xlat
pop
push
jl
jecxz
inc
add
sbb
sub
pop
insl
stos
fmuls
sti
lock
inc
std
sub
xchg
jmp
fldenv
bound
sbb
imul
pop
sbb
dec
sub
mov
movsb
ja
stos
lea
lahf
and
loopne
mov
dec
daa
jmp
in
and
ficoml
stc
sahf
cmp
stc
jo
sub
out
in
ja
sub
scas
jb
xchg
aaa
or
xor
jg
pushf
test
lret
mov
in
mov
int
mov
cmp
outsb
jmp
cld
sbb
clc
jge
fucomip
repnz
scas
std
push
idivl
outsb
leave
lock
xchg
and
stos
enter
loop
movsb
out
aam
nop
xor
into
mov
insl
loopne
sbb
mov
es
mov
add
sbb
in
pop
jb
icebp
or
xor
sti
pop
mov
jb
mov
jmp
adc
mov
mov
pop
cmp
adc
cmp
shr
fisubrl
ja
adc
push
in
xchg
fldl
lock
int3
in
mov
outsb
insl
jmp
ss
andnps
pop
push
je
sub
mov
cmp
hlt
adc
idivl
inc
xchg
or
jnp
addr16
sub
jb
cld
and
and
iret
cmp
mov
cmp
hlt
mov
cmp
pop
adc
fisubrs
jl
imull
ret
xlat
lea
and
movsl
and
cwtl
insl
sbb
mov
mov
lods
fcoms
in
push
inc
adc
jns
cmpsb
pop
test
mov
push
mov
cli
xchg
lods
mov
xor
fucomip
les
aad
loopne
mov
cld
inc
movsl
gs
xor
mov
sub
jbe
repz
xor
shlb
sub
cmc
insb
xchg
notl
pop
mov
stos
mov
out
aas
inc
sarl
mov
pop
movsl
xchg
test
jle
cld
add
xchg
movsb
push
xchg
mov
cmp
arpl
imul
pushf
push
sub
pop
mov
out
sbb
push
sub
pop
repnz
lea
fwait
sub
sbb
sub
sahf
test
xor
or
ficompl
movsb
daa
mov
movsl
inc
and
adc
xchg
mov
nop
rorb
mov
loopne
mov
xor
pushf
lock
sub
mov
adc
fisubs
or
adc
sbb
es
int
adcb
xor
xchg
in
insb
imul
cmpsb
int3
jp
or
dec
cltd
push
sub
mov
repnz
adc
cli
cmp
xor
xor
sub
int
inc
int
lods
jne,pn
hlt
lock
dec
and
outsl
push
subb
adc
cmp
xchg
and
xorl
jne
mov
pop
je
cmp
sbb
mov
enter
cmp
dec
jmp
jmp
gs
ret
mov
repz
pusha
xor
cld
lea
fcomp
add
mov
mov
jmp
pop
jecxz
cmp
dec
mov
lcall
ja
or
jb
inc
mov
adc
jne
in
pop
cwtl
push
clc
sti
and
arpl
scas
and
in
mov
lret
test
decb
sub
xor
lds
mov
push
imul
mov
shl
adcb
push
cmp
clc
adc
insb
lret
cmp
int
ljmp
add
sti
shlb
add
adc
aas
xchg
sub
cmp
or
addl
sbb
mov
xchg
add
push
ja
add
es
aad
sbb
jge
mov
push
movsl
pushf
adc
pop
push
and
data16
lods
push
fucompp
fwait
adc
into
aas
cmp
js
xor
mov
xor
jbe
ret
out
roll
cmp
out
mov
fwait
test
sub
or
ljmp
adc
adc
add
test
inc
lods
cmp
loop
movsl
push
jo
popl
push
lods
lea
add
imul
inc
sbb
stc
enter
cmp
std
insl
roll
mov
loopne
sarl
or
lds
shl
insl
pop
mov
test
or
mov
push
adc
cmpsl
cwtl
adc
push
pop
sub
sub
out
mov
inc
gs
lock
stos
fisttpll
inc
xchg
jns
pop
inc
cmp
and
jne
xlat
stc
mov
mov
decl
mov
fisttps
pop
pop
mov
lcall
fnstsw
in
insl
push
add
shll
or
sahf
push
pop
lods
mov
and
cmp
aad
mov
cmp
fnstenv
es
cmp
mov
jns
adcl
repnz
lcall
adc
jno
fstps
add
es
or
int3
cmp
push
fninit
jg
add
pushf
shlb
in
or
stos
sbb
into
or
mov
mov
mov
test
out
and
sbb
hlt
sub
rolb
sbb
sub
adc
mov
in
stc
in
mov
pop
das
mov
mov
ret
lahf
mov
xor
imul
loope
aad
and
cmp
pop
and
lods
pop
xor
push
lock
je
inc
mov
insb
test
cmpsl
inc
xchg
mov
mov
dec
jg
js
adc
mov
mov
fsts
push
mov
leave
add
dec
adc
pop
lahf
aas
pop
pushf
cmp
pop
pushf
sahf
jnp
and
push
cli
and
fldl2t
bound
sub
pop
mov
push
leave
stc
mov
nop
inc
add
or
or
jp
cltd
nop
add
sub
push
rcr
fucomip
sti
movsb
mov
push
dec
inc
divb
sub
inc
mov
cmpsl
jg
adc
dec
cmc
and
jecxz
jns
test
or
ja
or
mov
test
imul
adcb
sbb
dec
out
in
mov
sbb
roll
and
jp
and
dec
pop
mov
aad
jecxz
jg
lcall
and
ljmp
or
bound
in
data16
outsb
jne
jae
hlt
dec
test
mov
mov
sbb
fdiv
xor
adc
xchg
push
popf
fists
inc
and
lahf
out
push
and
xchg
cmc
cltd
and
mov
adc
test
and
fisubl
sbb
jmp
bound
in
and
call
fnclex
fstpt
das
xchg
adc
cmpsb
pop
pop
ja
insl
push
negb
sub
jp
inc
stc
outsl
adc
or
xchg
mov
mov
add
and
mov
cmp
mov
mov
sub
adc
adc
xlat
int
in
fcom
fcmovu
mov
or
in
lock
and
add
jmp
pusha
xchg
or
orb
and
jae
mov
sub
mov
dec
test
lods
xor
mov
and
aam
or
mov
mov
out
repnz
jmp
xchg
mov
addr16
add
ja
pop
jnp
hlt
cmpsl
jb
loop
int3
repnz
rcr
shlb
movsb
push
xchg
add
iret
sub
push
stos
mov
push
stos
and
cli
adc
lods
add
mov
push
rcrb
jae
add
and
pop
fidivrs
movl
xor
ja
icebp
aam
add
adc
call
add
std
mov
jnp
xchg
xchg
in
insb
add
inc
mov
aaa
aaa
icebp
mov
pop
push
mov
bound
sarb
call
add
shll
adc
sub
mov
xor
sbb
push
sub
cld
sti
and
mov
mov
pop
pop
daa
arpl
enter
mov
aam
ret
into
fisttpl
loope
aaa
cmp
pop
xor
test
sbb
add
cmp
and
mov
push
and
out
fcomps
mov
mov
mov
mov
iret
mov
mov
mov
xchg
mov
mov
cmp
fsub
mov
cmp
cmp
lret
inc
cmp
add
mov
aad
sbb
adc
push
pop
adc
arpl
and
hlt
add
mov
jle
push
mov
xor
mov
or
mov
jg
mov
std
fs
out
pop
dec
mov
mov
xor
scas
pop
sbb
daa
das
jle
jl
xrelease
in
jno
mov
dec
sbb
lret
and
stc
jp
pop
pop
xorl
jmp
mov
in
cltd
dec
in
inc
fimull
je
or
push
cmpsb
mov
fildl
dec
loope
sub
clc
pop
fcomi
inc
je
pop
xchg
int3
jl
sbb
add
push
pop
and
mov
repnz
out
enter
ret
cmp
aaa
aas
pop
jno
addr16
mov
cmp
sbb
mov
add
test
and
xchg
adc
xor
xor
fcoml
sbb
lcall
cli
int
or
xchg
push
cmp
lds
push
clc
mov
in
lret
push
inc
jle
fxch
subl
jg
ljmp
bound
aam
leave
or
mov
into
jns
adc
hlt
mov
subl
adc
mov
cld
fisttpl
pop
sub
mov
sbb
std
pusha
inc
shrb
push
jmp
in
aad
mov
and
sbb
cmp
aam
xchg
adc
cmp
idiv
ds
iret
jne
push
push
and
insb
cmp
andl
lea
test
jnp
adc
rolb
scas
loope
mov
sub
lds
cmp
test
ljmp
sub
les
dec
aas
pop
sbb
xchg
in
pop
les
mov
mov
and
add
sub
aam
cmp
add
xor
or
clc
mov
sbb
sbb
inc
int3
fildl
mov
pusha
xor
jmp
pop
push
add
out
sub
pop
cli
shll
adc
arpl
pushf
xor
adcb
add
clc
xchg
cli
sub
jb
pop
std
out
adc
ja
adc
fwait
cmp
loopne
jl
pop
mov
stc
aad
xchg
or
jne
data16
pminub
xchg
rol
cmc
jo
cmp
inc
mov
cmp
pop
add
lods
mov
mov
mov
jo
lds
add
stos
and
push
pop
sbb
dec
sub
in
mov
jmp
cmp
jecxz
pop
in
push
sahf
mov
in
cmpsb
lcall
jno
add
add
inc
test
xor
pop
out
in
lods
sub
cli
xchg
xchg
imul
andl
sub
xchg
cmp
test
pop
in
inc
outsl
xor
lret
pop
jne
or
into
push
and
pop
mov
jecxz
dec
addr16
jno
cmpsl
mov
jecxz
mov
push
jno
enter
aam
add
popf
out
js
jae
sub
shr
lods
cwtl
fwait
cltd
and
js
mov
xchg
mov
cmpsb
sub
push
aad
and
jp
inc
test
mov
das
sbb
pop
and
sub
stos
sub
gs
stos
push
jbe
push
cltd
mov
cmp
inc
cmp
out
cmc
leave
xchg
ret
adc
out
out
jge
jmp
mov
or
loop
and
sub
mov
out
bswap
pop
popa
mov
cmp
mov
and
adc
inc
aaa
lock
jnp
push
call
or
popf
arpl
jle
neg
mov
adc
xor
xor
rcll
push
sub
mov
mov
mov
pop
dec
rorb
add
jns
sbb
mov
lock
jno
cmp
test
je
xor
hlt
std
sub
or
sbb
mov
das
bound
and
dec
loopne
pushf
jl
dec
inc
mov
xchg
cli
sub
mov
sub
add
push
lea
mov
addr16
es
or
jno
adc
jg
sub
mov
jns
xor
add
int
jmp
push
mov
rcrb
addr16
or
adc
adc
mov
inc
push
gs
mov
adc
jmp
popf
fldl
push
cmovns
and
mov
adc
fsubs
mov
fimuls
loop
sbb
mov
jmp
push
mov
jo
idivl
jl
decb
shlb
aad
aas
xchg
scas
ja
sbb
add
shl
or
and
incl
xchg
or
loope
and
jl
test
push
fisubs
cltd
cmp
add
cld
xchg
sbb
jnp
xchg
lcall
in
jns
xchg
jmp
ja
sbb
adc
pushf
fstl
sbb
sti
sbb
mov
jle
xchg
jbe
je
pusha
mov
cmp
cmp
sahf
inc
cmp
push
pop
cmp
sbb
sub
rorl
mov
inc
scas
mov
or
cmpsb
mov
cld
jp
sub
movsb
addr16
cmp
iret
movsb
insl
sti
jnp
popa
sub
loop
rorb
repnz
and
testl
notl
mov
xchg
pop
lds
cmpl
add
lds
cld
lods
aad
icebp
or
test
pop
sbb
cli
push
jns
movsl
push
stos
pop
or
mov
mov
inc
jne
mov
in
fwait
inc
jl
mov
pop
rcrl
test
jno
lods
cld
mov
mov
rorl
jmp
cmc
adc
pop
jno
push
movsb
dec
int3
xchg
scas
sbb
and
imul
loopne
mov
pop
mov
jp
lock
cli
adc
push
mov
mov
loope
jl
pop
arpl
or
lea
and
leave
mov
imul
fistpll
fcomps
addr16
xchg
push
int3
imul
enter
rcr
push
add
in
inc
cli
inc
fildll
out
daa
dec
inc
push
or
mov
idivb
lds
or
push
mov
cmp
mov
cmp
out
sbbb
cli
adc
call
pop
sub
xor
fdivrs
push
dec
jbe
jae
jns
mov
enter
out
repz
test
popf
cli
lods
mov
jl
mov
fs
sub
cmp
std
mov
and
jae
fxch
jl
lcall
gs
jmp
xor
push
jl
leave
xlat
subl
mov
jnp
lock
xchg
inc
jmp
fmul
rol
sbb
sti
das
stos
sub
loop
inc
or
shlb
ret
scas
je
xor
lret
roll
add
add
out
data16
mov
and
xchg
push
imul
mov
aad
mov
movsb
adc
daa
hlt
arpl
sti
pop
inc
mov
movsb
dec
shlb
cmp
movsl
or
cltd
push
sub
mov
pusha
lock
es
mov
outsb
cli
push
imul
xor
jne
pop
lahf
imul
mov
imul
or
fisttpl
cmp
cmp
or
ret
jo
and
sbb
xchg
add
test
cmp
push
and
lea
sbb
push
push
mov
lret
sbb
cwtl
mov
shll
mov
in
sti
mov
xchg
repz
cli
mov
sub
inc
jbe
movsb
xchg
aaa
in
sahf
insb
cwtl
xchg
sahf
jae
mov
idivb
jno
ret
test
jno
xchg
cmp
sub
jle
aam
sbb
xchg
jae
push
loop
or
stos
aas
mov
mov
lock
and
dec
lods
lods
loopne
loopne
adc
hlt
mov
arpl
dec
or
arpl
jp
pop
and
jnp
xor
arpl
aam
in
adc
push
test
or
stc
mov
and
and
out
int
data16
shl
andb
dec
pop
jne
xchg
mov
cmp
out
jl
sbb
add
mov
push
out
divl
outsb
lcall
jne
gs
popa
fsub
or
inc
xchg
bound
outsl
mov
add
lods
or
inc
aad
jo
scas
imul
or
pop
pop
pop
roll
and
out
mov
les
mov
out
movsl
shlb
mov
nop
mov
sub
in
rcrl
cmp
jb
int
and
pop
fwait
cmpsl
lea
incb
mov
sahf
jmp
dec
enter
rol
cmp
cwtl
shll
add
and
push
lcall
and
jle
aad
fisttpl
and
lcall
mov
and
xor
pop
jecxz
push
mov
das
mov
xchg
jp
xor
stc
es
add
lea
not
sub
push
add
cmp
fidivrl
mov
and
test
sahf
movsl
push
das
xlat
xchg
orl
gs
repz
outsl
rcll
das
sub
out
push
sub
mov
fs
out
and
and
bound
dec
push
pop
loope
out
jmp
aas
pop
mov
fbstp
xchg
data16
jb
xchg
mov
pop
cmc
out
or
pop
push
pop
cmp
nop
fisttpl
dec
loope
mov
inc
call
push
fxch
icebp
out
or
and
or
xor
out
imul
loopne
jecxz
enter
cmpsl
sub
rcrb
mov
test
jmp
rorb
arpl
out
ret
test
or
out
mov
repnz
adc
roll
in
mov
sbb
push
orb
bnd
jmp
or
movsb
dec
dec
mov
or
outsl
lods
lret
arpl
add
in
pop
ja
and
stc
mov
repnz
sahf
std
cmp
movsb
andb
je
pop
dec
and
push
stos
mov
das
jne
cmp
adc
sbb
mov
popf
popf
pop
push
inc
push
out
insl
dec
mov
mov
jle
or
jg
mov
xchg
mov
jge
mov
jne
aad
mov
ret
sbb
es
push
std
or
pop
shl
adc
jnp
inc
fucomi
loope
enter
adc
adc
in
popf
loopne
lds
int3
jecxz
loop
mov
cmp
cli
mov
cli
mov
cwtl
gs
pop
test
pop
pop
int3
cmpsb
mov
cmp
mov
xchg
sub
std
mov
push
iret
aam
mov
mov
mov
pop
stc
pop
inc
push
jno
mov
fstpt
cmp
mov
sbb
imul
mov
and
cmpsb
ficompl
jo
aaa
loopne
mov
call
add
xchg
xchg
sbb
adc
inc
push
cli
lahf
cmp
mov
sti
outsl
jns
lahf
lods
sub
loope
push
xchg
scas
jmp
cmp
push
outsb
movsl
movsb
push
add
jae
je
mov
testb
mov
fcmovnb
incb
sub
cmp
das
into
jle
test
adc
mov
das
push
mov
cmpl
pop
adc
lcall
mov
adc
sar
das
jmp
xchg
lock
jecxz
test
xchg
push
jg
inc
in
lds
push
aam
in
rcr
cmp
out
or
icebp
lods
popa
imul
xlat
dec
and
ret
daa
data16
xorl
out
adc
ficoms
mov
lock
sbb
pusha
sar
jb
faddl
xchg
lea
mov
je
mov
fbld
xchg
jns
mov
mov
cmp
sbb
addr16
loope
js
cmc
je,pt
fstpt
pop
popa
scas
lea
adc
mov
xchg
in
jbe
decl
das
scas
adcl
jl
dec
cmc
lahf
xchg
jo
gs
jo
push
outsb
cmp
mov
mov
sub
call
das
jp
cmp
mov
test
outsl
xorb
jo
mov
mov
mov
scas
and
jge
dec
int3
lods
incb
adc
xchg
xchg
dec
loopne
cmpsl
xor
out
pop
mov
pop
xlat
dec
daa
inc
xchg
or
mov
sub
sbb
aas
sub
xchg
xlat
jmp
in
lret
popa
mov
cmpb
jae
add
sti
repnz
xchg
jo
loope
jne,pn
fcmovu
jmp
jae
mov
fdivs
jae
adc
out
je
fstps
pop
push
adc
xlat
add
and
daa
jo
lret
stos
sbb
fwait
dec
int
push
lods
adc
movsl
lcall
rcll
sbbw
pop
jecxz
and
jo
pop
andl
mov
ret
in
cmpsl
icebp
inc
push
daa
in
out
aaa
into
adc
adc
adc
sub
repnz
jg
sub
pop
leave
lock
loopne
xor
inc
sub
mov
test
xor
inc
call
test
cmp
std
push
das
jmp
inc
mov
insb
xlat
out
idivb
std
addb
imul
push
add
mov
xchg
xchg
dec
xchg
sub
sub
sub
addr16
add
jbe
xlat
dec
je
push
and
mov
cs
pinsrw
imul
sub
iret
jno
dec
stc
cmpsl
pop
dec
mov
subl
sti
add
aaa
jmp
pop
cmp
add
adc
addb
xor
inc
sti
test
fldl
cld
dec
sbb
push
cmc
inc
xor
dec
sub
sub
insb
leave
push
mov
test
pop
outsl
ret
mov
ficoml
push
cli
fidivrs
jbe
mov
xlat
jno
xchg
fucomi
rcl
add
xchg
loop
sub
xchg
mov
lea
outsl
cmc
std
xor
aad
xchg
mov
cld
jno
into
push
insb
cmp
fsubs
int
es
push
fisubl
outsb
lock
test
sbb
or
sbb
cmpsb
clc
in
inc
fstps
mov
insb
in
pop
push
inc
cmp
rcll
imul
push
xchg
fbld
mov
cltd
ficompl
pop
inc
jbe
decb
pusha
aad
int3
push
push
pop
or
fdivl
loop
out
xorb
mov
fnsave
lock
sbb
shlb
push
mov
pop
adc
dec
vpand
dec
sbbl
or
mov
mov
jns
or
out
and
std
sti
and
movsl
pop
cmpsb
xchg
adc
hlt
leave
mov
mov
xor
in
int3
fadd
test
mov
out
lret
cltd
ja
movsb
xor
lods
jge
dec
mov
int3
xchg
mov
jle
add
push
lock
notb
pop
bound
in
dec
addr16
mov
enter
jb
int
jl
rcr
lods
addr16
push
loop
cmpsl
fisubrl
push
ret
ret
or
mov
sahf
std
pop
in
mov
add
jne
mov
push
movsl
je
push
jae
in
mov
popf
cmc
loope
daa
inc
imul
loop
int3
out
movhps
test
adc
mul
mov
loop
add
cmp
pushf
xorb
out
or
out
inc
fists
scas
daa
push
aaa
mov
lds
cli
fwait
jge
adc
xor
jno
in
stos
dec
sbbb
push
test
test
inc
jo
ljmp
mov
out
movb
bound
mov
adc
mov
pop
sub
xchg
inc
arpl
push
or
movsb
sbb
cli
jecxz
sbbl
push
in
jmp
jo
mov
jle
lock
jb
add
dec
test
inc
mov
lods
or
and
and
pop
jmp
loopne
loop
and
jmp
sub
aad
cmc
and
lcall
imul
add
rcll
gs
gs
loop
and
jge
sarb
xor
xchg
mov
mov
xor
jge
pop
and
xchg
out
in
testl
mov
lods
ja
aas
sbb
insl
test
adc
jae
inc
add
popf
mov
addr16
or
movsb
movsb
push
cld
push
icebp
mov
daa
sbb
clc
fidivrs
push
ljmp
js
mov
xor
mov
push
repnz
daa
cmpsl
mov
xor
lahf
fisubl
test
cltd
ficoml
push
inc
adc
pop
add
push
jl
fisttpl
dec
xor
loop
xchg
or
call
shll
cmp
add
mov
pusha
out
inc
sub
je
and
out
mov
mov
out
mov
mov
pop
cmc
jmp
imul
or
cmp
sbb
mov
mov
cs
je
repnz
lret
mov
push
jnp
cld
mov
and
sbb
notl
adcl
xchg
lahf
jp
jge
ja
jno
ljmp
xchg
add
ret
pop
pushf
xor
jecxz
cli
adc
cmp
stc
out
add
sub
xchg
pop
sbb
js
or
rclb
aam
mov
repnz
divb
lcall
je
add
aaa
cmp
jno
ljmp
enter
out
inc
fwait
jecxz
adc
cmpsb
std
or
sarb
pop
inc
scas
push
lds
stos
jmp
cmp
add
xchg
movsl
das
xchg
xchg
or
in
out
je
jg
jg
mov
mov
mov
adc
loopne
mov
out
mov
and
loope
cmp
pushw
pushl
push
or
pop
mov
cmp
roll
dec
inc
xor
outsl
loopne
pop
pop
sahf
inc
mov
test
popf
or
rclb
into
sbb
insb
scas
fisubs
pop
fdivs
insb
out
add
in
mov
adc
jg
dec
inc
mov
cmpsl
mov
mov
lret
mov
outsl
sbb
mov
outsb
pusha
jp
adc
stc
pop
imul
and
imul
push
sbb
cs
and
mov
inc
xchg
push
adc
aas
and
imul
mov
sbb
pop
fcmovnb
sub
out
bound
test
mov
or
arpl
aaa
push
pop
cwtl
jo
fstpt
cltd
xchg
pop
mov
shl
dec
jno
std
or
push
xchg
or
leave
pop
in
shrl
inc
sti
mov
repz
loop
jne
mov
push
xor
repnz
movsb
out
in
lods
ja
pop
cmp
push
inc
mov
or
test
mov
outsb
popf
scas
cltd
dec
iret
jecxz
xchg
push
jp
ljmp
aad
daa
lcall
cli
lods
mov
loop
cs
mov
xor
outsb
xor
cmp
orl
pop
mov
in
aad
push
jnp
sarl
push
mov
cmp
mov
popf
imul
ss
fcom
hlt
adc
stos
rcll
jl
std
mov
mov
mov
sbb
pop
enter
das
fmul
aad
out
fwait
in
push
test
fisubl
add
lods
pop
sub
ret
cli
sub
xchg
add
or
ja
cld
xchg
fsubr
adc
bound
adc
das
sub
ret
mov
lock
and
and
lods
pop
outsl
xor
in
dec
mov
fsubrs
mov
lea
and
cmpsl
clc
cltd
enter
sti
es
sti
and
loopne
sbbb
cmp
scas
enter
xchg
sbbl
cmp
mov
call
pop
inc
sbb
inc
and
push
ret
scas
shll
sbb
push
loope
pop
jmp
cmpsl
or
mov
fsubl
clc
out
cmpsb
sbb
popa
push
call
xor
lret
mov
fldenv
in
movsl
sbb
jge
ja
lods
adc
loope
sbb
xor
mov
aam
fisttpl
pop
sub
add
into
sarb
xor
fdivs
dec
aad
lods
pushf
cld
mov
sub
es
enter
fs
push
mov
sbb
test
mov
imul
mov
and
popa
push
fldl
push
scas
in
jo
add
inc
out
insb
aas
lret
aam
cmpl
push
in
lods
ficompl
sbbb
mov
pusha
and
cmp
icebp
nop
jbe
mov
adc
mov
lods
lods
lahf
aaa
dec
sub
adc
ja
loopne
jle
pop
call
add
or
pop
subl
std
mov
icebp
mov
es
inc
loope
fsubs
lods
subl
test
je
add
outsb
adc
rorl
mov
and
pop
ss
out
rolb
enter
int
xor
mov
js
jecxz
cmp
mov
cmpsl
mov
inc
xchg
inc
in
repnz
add
pop
mov
popa
and
je
push
movsb
dec
push
test
or
enter
dec
xchg
or
and
and
pop
or
loop
mov
les
mov
negb
gs
cmp
sub
repz
aas
movups
dec
sti
fimuls
movsl
xchg
jge
mov
scas
or
fidivl
lea
cmpsl
pop
mov
rcrb
sbb
inc
inc
out
xchg
repnz
pop
lret
nop
dec
and
cmpb
pushf
pushf
adc
in
insb
push
mov
movsb
popf
cmpsl
adcb
ljmp
mov
int
jnp
sub
adc
sub
roll
and
inc
sub
mov
dec
mov
add
and
test
xlat
negl
lods
jge
sbb
push
jecxz
dec
and
and
xor
sbb
scas
loop
push
hlt
lods
and
inc
mov
pop
inc
loopne
adcl
add
repz
or
mov
push
add
jl
imul
sbb
addr16
lock
dec
push
cld
xlat
cmp
gs
push
into
hlt
cmp
sbb
push
jg
flds
cmp
pushf
sbb
xor
out
xor
mov
repnz
push
xor
imul
jle
push
jno
cmpb
push
cmp
xlat
outsl
daa
gs
inc
in
gs
mov
pop
shll
or
testb
jmp
cmp
mov
and
xchg
fnstsw
xor
mov
sbbl
mov
adc
out
movsl
jnp
lock
test
mov
sbb
aad
loopne
mov
pusha
fildl
popa
lock
add
mov
xchg
dec
xchg
int3
addr16
sbb
lods
adc
jl
cmp
sarl
aad
push
sbb
test
mov
daa
jnp
les
mov
push
jg
pop
and
popf
xchg
or
lahf
pop
and
pop
and
stc
je
push
sti
popf
xor
insb
cmp
fisttpl
xchg
or
cli
sub
and
pop
mov
or
orl
je
mov
rclb
in
mov
icebp
movsb
mov
mov
ds
dec
mov
mov
imul
pop
imul
push
jne
int3
lock
dec
lcall
stos
insb
adc
jne
idiv
fisubrl
add
and
inc
stc
cs
inc
adc
sub
xor
mov
inc
popf
mov
lea
jnp
jp
or
bswap
add
cmp
insl
test
test
jns
jb
aam
mov
fadd
mov
sbb
sti
push
ljmp
jo
adc
push
int3
ret
and
cmpsb
into
mov
push
call
mov
xorl
ret
jmp
inc
push
pop
pusha
popa
mov
lahf
mov
mov
cld
out
mov
push
mov
popf
int3
push
or
fistpll
pop
mov
push
jl
je
call
push
jge
jns
mov
mov
into
sub
icebp
add
test
and
mov
rorb
cmp
cmpsb
femms
xchg
or
jg
mov
sbb
or
es
inc
int
pop
dec
cmpsb
fs
ss
adcb
cmc
push
adc
adc
icebp
jmp
lret
cmp
test
test
aam
add
inc
fcmovnu
adc
clc
mov
js
lods
cld
das
outsb
sti
push
in
mov
sub
mov
cmpsb
and
stos
aam
mov
sar
movsl
xlat
mov
loope
cltd
smsw
mov
lret
and
xor
loopne
add
stos
push
int3
movsl
lods
lods
bound
out
sbb
pop
arpl
leave
fidivrl
push
mov
iret
rorb
int3
addr16
sbbl
mov
addb
cmpsl
es
or
add
adc
xchg
jle
push
xchg
mov
pop
dec
popa
mov
adc
cli
sbb
ljmp
into
xchg
mov
in
jb
je
and
pop
xor
jge
pop
xor
loope
pop
push
and
pop
imul
cmp
outsb
int3
lret
test
and
xchg
scas
cmp
sarb
pop
push
ja
pop
je
mov
adc
popf
in
out
cli
or
lea
add
pop
aas
lock
shr
add
xchg
cltd
jns
mov
add
jo
cmc
add
out
mov
fnstsw
popa
jp
mov
pushw
adc
cmp
cmp
aas
sbb
sbb
ret
xchg
sar
sub
mov
divl
fldt
inc
jp
inc
or
sahf
cmpl
js
aam
repnz
xlat
xor
scas
into
stos
push
xor
mov
cmp
gs
dec
clc
cmp
jbe
cmp
mov
push
dec
fs
mov
pop
sub
cld
sub
sub
sahf
jbe
cwtl
gs
js
add
xchg
sbb
lds
rclb
sbb
aam
cmp
push
xor
sub
stos
jmp
cmpsl
inc
lods
cmp
repnz
cmc
movsl
sub
stos
inc
clc
push
xlat
fs
dec
sbb
add
mov
lahf
stos
lods
in
imul
outsb
add
gs
or
scas
repz
adc
xor
sub
in
xor
inc
es
push
pop
cmpsl
xor
sahf
jge
dec
mov
inc
xor
adc
pop
cmpsl
or
push
jne,pn
jne
aam
xorb
jns
lea
cmp
rol
adcl
mov
out
mov
pop
fimull
add
cmp
xor
sbb
sub
cmp
call
pushf
push
clc
add
in
jecxz
cmp
push
sub
add
pop
push
jg
xchg
xor
mov
out
dec
ret
dec
movsb
or
push
push
pop
mov
push
dec
mov
inc
movsl
ss
mov
mov
movsb
call
mov
inc
pushf
mov
xchg
sub
pusha
popf
addr16
jns
mov
and
lock
cmp
mov
das
test
lahf
push
sub
push
and
outsl
and
adc
stos
into
inc
or
out
jns
movsb
loopne
push
int3
sbb
jle
loop
clc
sbbl
or
jg
mov
sti
fs
mov
push
das
cmp
clc
int
in
es
into
or
ficoms
fmull
in
inc
inc
adc
mov
cmpsl
fs
cs
lret
mov
add
sbb
sti
out
push
rolb
cmp
mov
pop
test
lock
push
jnp
shrb
jnp
test
sti
data16
cmp
cmp
call
stos
xor
and
fwait
mov
leave
repz
jmp
movsb
xrelease
test
xchg
test
sub
sub
adc
stos
inc
cld
icebp
movsl
call
mov
lds
ret
mov
loop
push
and
inc
mov
xor
lods
or
and
cmc
or
add
xchg
fld
jbe
imul
loop
and
cmp
pop
sbb
mov
sbb
nop
xor
cmp
mov
clc
shlb
frstor
sbb
cld
sti
jecxz
mov
addr16
stos
pop
loopne
and
jp
sub
ret
popa
mov
add
mov
adc
mov
mov
pop
sub
inc
xor
add
mov
mov
xchg
mov
fadds
push
outsl
inc
mov
dec
pop
scas
icebp
xor
es
pop
aas
mov
aaa
xlat
insl
mov
in
mov
cmp
lret
shrb
xchg
add
js
mov
and
in
mov
cmc
das
je
jg
mov
rcrb
das
sub
pop
jecxz
aad
pop
je
inc
xchg
push
mov
repnz
jecxz
add
add
fbstp
inc
jne
inc
mov
mov
push
mov
je
mov
adc
fwait
or
mov
xchg
loopne
stos
dec
scas
sbb
ret
es
push
jmpw
mov
cmpsb
int
mov
daa
bound
scas
cmp
scas
in
dec
pop
sub
ficoml
cmp
shll
xchg
adc
fisubrs
test
xchg
mov
add
adc
inc
ret
leave
div
push
rcrl
sbb
and
nop
mov
xor
push
mov
and
pusha
sti
lret
inc
fistps
mov
mov
icebp
and
loop
bound
es
cmpsb
icebp
movsl
xor
icebp
sub
jmp
inc
xchg
fdivrl
sti
and
and
xor
ljmp
repz
out
scas
push
pop
popa
lods
std
sahf
mov
lods
std
pop
repz
xlat
jecxz
mov
movsb
sub
or
int3
or
fcmove
popf
sub
push
add
dec
mov
mov
out
ds
mov
inc
jp
or
mov
ret
jl
movswl
cmp
xchg
sahf
stc
pop
xchg
cli
add
push
dec
xacquire
cmp
add
ficoms
int
cld
je
ds
loop
clc
xchg
sbb
jl
mov
es
jmp
mov
mov
pop
das
mov
fldl
lods
mov
jns
push
pop
xor
into
das
mov
insl
shll
sbb
ret
repnz
cmp
andl
or
fidivrl
or
in
mov
inc
ja
mov
test
jp
movsb
jbe
stc
or
mov
mov
inc
push
inc
jb
in
or
adc
in
pop
mov
and
out
and
imul
in
jle
cmp
mov
and
or
daa
mov
es
mov
aaa
bound
push
movsl
movsb
test
clc
and
dec
mov
clc
fbstp
lcall
in
cli
pushl
push
jns
lds
pusha
sub
xchg
nop
mov
testb
mov
fdivrl
and
cmp
stc
add
adc
loopne
xchg
stc
popl
rcr
outsl
cli
mov
jge
mov
adc
arpl
adc
mov
xor
movsl
sub
push
icebp
lahf
ss
ljmp
js
fadds
push
mov
testb
cmpsb
inc
sub
xchg
bswap
or
pop
std
xor
dec
divb
and
fisttps
pop
mov
xlat
add
aad
inc
imul
lret
sbb
ret
je
das
scas
cmp
xor
xlat
ret
out
leave
imul
dec
pop
inc
inc
mov
fsubrs
mov
sbb
xchg
push
shlb
jno
xchg
das
fwait
popa
idivb
and
cmc
aad
pop
mov
xchg
jno
pop
ja
sahf
scas
inc
ret
out
les
in
add
sub
adc
mov
ljmp
stc
push
sar
cltd
test
dec
xor
mov
hlt
or
cltd
lret
mov
or
mov
mov
lret
bswap
inc
adcb
xchg
test
mov
ss
gs
out
pop
inc
repnz
inc
js
dec
add
cmp
test
cli
insb
lods
stos
cli
je
ljmp
leave
stos
sbb
and
xor
out
and
push
leave
shrl
daa
or
lret
xor
and
mov
fmuls
jge
mov
adc
lods
out
mov
cmp
divb
pop
mov
add
cmp
cld
ret
ffree
icebp
and
cmpsl
mov
daa
push
pushl
inc
dec
cmp
push
in
sbb
cmpb
aad
aam
lea
pop
dec
fisttps
xlat
cmp
loopne
pop
inc
dec
push
les
js
jmp
ja
cli
test
adc
cmp
add
jp
cltd
or
push
cmpsb
pop
and
aad
test
iret
cs
mov
xorb
add
mov
in
test
xor
inc
and
xchg
jl
fcmovb
test
sub
xor
es
jae
and
mov
test
in
dec
push
add
lcall
test
jnp
push
pop
mov
int3
sbb
fildll
sti
mov
mov
arpl
adc
xorb
popa
mov
sbb
int3
out
loope
int
aad
fcomps
cmp
pop
and
dec
pop
cmc
imul
dec
test
loopne
clc
push
cmpsl
mov
negl
add
mov
clc
and
sbb
cmp
push
dec
test
sbb
mov
negb
cmp
jbe
shll
arpl
mov
adc
pusha
ss
loop
es
fnstenv
inc
mov
fisttps
and
sarb
cmpsl
movsb
jb
add
sub
push
outsl
out
jecxz
mov
clc
out
jmp
xchg
pop
sbb
dec
enter
sbb
push
jno
cmp
mov
cmp
and
addr16
rcrl
loope
and
sbb
fildll
and
xor
mov
cli
out
dec
ret
cmp
rcrb
pop
jmp
out
dec
in
push
in
cmp
insl
stos
sbb
mov
mov
in
mov
jl
test
mov
loope
iret
sub
inc
rcll
inc
aad
aam
in
das
or
inc
and
inc
ds
mov
test
and
cmp
push
daa
sub
xchg
clc
or
dec
ss
xchg
stos
inc
or
fldlg2
jl
mov
in
push
fisubrl
add
inc
rol
jmp
iret
sbb
xor
mov
ds
dec
cmp
jg
call
or
iret
aam
jp
cmp
pop
mov
pop
pop
clc
sub
dec
pop
or
in
movsb
pop
cmp
and
mov
test
dec
fildl
pop
lock
in
imul
sbb
outsl
jo
insl
push
inc
jp
add
ds
adc
xchg
lret
repnz
xor
mov
push
insl
lea
mov
xchg
fsub
sti
arpl
aam
sbb
sbb
jmp
leave
lock
jo
cmp
and
stc
sbb
repnz
loop
sbbl
jne
nop
je
mov
out
into
xchg
sub
lods
lret
enter
stc
mov
into
sbb
mov
push
cli
lret
out
cmp
xchg
cwtl
aas
sub
sub
xor
add
pushf
bound
fs
incl
scas
lcall
cmp
push
je
fimuls
and
pop
js
iret
cmp
out
dec
je
mov
sbbb
xchg
jge
xor
sarb
mov
fists
hlt
push
scas
fistpl
jmp
mov
outsb
sbb
lcall
lcall
mov
mov
and
popa
js
xchg
and
fwait
inc
or
fwait
xchg
in
lahf
dec
or
aam
adc
adc
int
sbb
inc
dec
cmp
adc
sbb
cmpsl
stos
pop
inc
ret
push
lds
adc
add
adc
push
and
faddp
cmp
sti
popf
pop
xchg
fimuls
or
mov
stos
mov
ret
dec
jg
sbb
mov
mov
ljmp
jne
pop
in
xor
mov
or
lods
mov
jne
imul
aas
xor
or
xorl
mov
fwait
cmp
stos
and
cmp
xchg
mov
in
insl
xlat
in
push
push
mov
or
aaa
cwtl
test
in
in
das
shll
add
or
mov
push
jmp
xchg
movsb
mov
sub
mov
mov
inc
pop
xor
sbbb
insb
mov
ljmp
adc
cmc
mov
cmp
mov
jnp
hlt
and
inc
push
fdiv
jo
push
hlt
pop
icebp
pop
aam
shrb
lock
insb
and
in
inc
in
jl
add
pop
mov
stc
jmp
cmp
mov
add
rclb
mov
js
into
xchg
not
repnz
mov
scas
int
in
js
sub
lcall
dec
and
pop
shrb
add
push
gs
mov
stc
mov
pop
mov
pushf
and
cwtl
cmp
stos
dec
neg
sub
movsl
adc
jae
xor
pmaxsw
add
pop
sbb
imulb
into
jne
jg
shll
imul
aas
or
adc
icebp
imul
xor
mov
fwait
and
cmc
repz
int3
jbe
jmp
dec
in
test
sub
lock
incb
xchg
sub
in
jno
nop
bound
push
dec
mov
or
add
xor
or
sub
aad
adc
aaa
pop
pop
je
mov
ret
push
mov
fisubrl
div
mov
xchg
mov
mov
jo
or
and
lahf
cmpsb
jne
faddl
iret
sub
dec
xor
xor
mov
push
pop
testb
push
mov
aam
fiadds
inc
hlt
adc
fstpl
sub
incb
mov
lret
repz
push
push
mov
or
js
addr16
rcll
test
dec
popf
fiaddl
dec
mov
mov
lods
push
jecxz
jl
das
cmp
lret
lahf
push
jbe
popf
ja
test
pusha
push
pop
xor
inc
out
sahf
mov
mov
gs
cmp
fisubrs
or
mov
jmp
stos
mov
sub
int
hlt
jl
sahf
ljmp
add
mov
fnsave
clc
sub
xchg
pop
sbb
jo
cld
ljmp
lods
sbb
xlat
mov
sub
add
adc
push
aaa
add
inc
stos
movsb
xor
int
adc
and
hlt
das
cli
mov
in
adc
cli
adcl
push
pop
mov
mov
pusha
imul
aaa
in
sbb
mov
cli
xchg
mov
sub
sub
js
xor
or
or
fstpt
or
cmp
js
gs
mov
js
xchg
popf
fldt
lds
push
push
mov
movsl
inc
pop
jb
cmc
mov
cmp
mov
adc
movsb
sub
outsb
je
leave
push
mov
mov
leave
movhps
mov
sahf
push
fldl
stos
stos
jmp
clc
cmc
clc
mov
out
out
pop
push
or
clc
jle
inc
stc
mov
ret
mov
mov
repz
xor
or
inc
xchg
ja
pop
cmp
xchg
daa
and
sub
mov
push
sub
out
sbb
push
add
mov
and
repnz
push
mov
sub
add
xchg
cs
movsb
sub
mov
push
jle
scas
push
je
mov
into
inc
jge
lds
insb
mov
iret
mov
or
stc
xlat
sbb
pop
jns
shl
mov
mov
fs
add
mov
sbb
mov
loope
xchg
sbb
loope
dec
loopne
rcl
movsb
icebp
gs
push
movsl
xor
call
add
sbb
lods
stc
mov
push
pop
int
pop
das
test
rcrl
clc
lods
add
and
clc
addr16
lods
cmp
cmp
pop
and
sub
adc
adc
and
dec
jb
inc
rcl
stos
mov
nop
adcb
xchg
popf
lods
daa
ds
shll
int
sahf
gs
arpl
lahf
pop
cmpsb
push
mov
imulb
outsl
sbb
cmp
push
cltd
loop
mov
and
in
adc
popa
negl
sbb
sahf
and
outsb
add
cmpl
popf
mov
dec
fsubs
dec
pop
lods
add
jne
sub
jl
cmp
pop
bound
test
xor
push
dec
xlat
jb
push
aas
imul
pop
jl
adc
enter
sti
fisttps
ja
insb
xlat
sbb
jp
sbb
repz
cld
pop
push
mov
cwtl
pusha
jmp
mov
jecxz
push
rcrl
fldenv
repz
mov
jae
push
mov
inc
mov
imull
inc
insb
les
inc
jns
xlat
jo
sti
or
add
push
mov
aad
pop
movl
lea
cmp
inc
in
in
sub
xchg
dec
testl
cltd
xchg
jp
movsb
pop
ret
imul
xlat
cmp
pop
mov
jae
xchg
sub
pop
pop
fstpl
pop
enter
xchg
cmp
jge
xchg
xor
adc
fsubl
clc
clc
add
ret
rcll
xor
add
cmpsb
sub
inc
dec
lcall
loop
add
cmp
mov
cmpsl
mov
mov
negl
jle
xor
push
pop
stos
cmp
fisubrs
lds
xchg
or
std
jecxz
ds
in
das
int3
test
inc
push
int
bound
add
int
in
add
cli
pop
fcmovb
lea
rclb
mov
clc
icebp
jge
mov
mov
jecxz
sbb
repz
cs
cmpsb
in
jnp
add
enter
cltd
out
mov
add
int3
xor
sub
lret
mov
repz
ret
inc
shl
popf
pop
test
dec
loopne
ja
std
inc
mov
mov
xor
shlb
xchg
adc
aam
xor
xchg
adc
inc
jmp
ds
mov
mov
movsb
lahf
dec
incl
and
sbb
dec
jno
arpl
stos
icebp
test
call
or
mov
sarb
mov
push
and
mov
mov
popf
jmp
aad
and
fldcw
sub
ss
out
fwait
mov
add
xchg
insl
xor
lcall
ror
loope
lds
xchg
ret
lahf
cs
test
add
loope
push
or
dec
loop
fmull
mov
outsb
loope
mov
and
leave
je
ja
mov
aaa
lods
push
decb
dec
repnz
dec
bound
xor
roll
xchg
daa
jnp
popf
sub
sub
inc
loop
enter
add
nop
mov
popa
cmpsb
dec
mov
mov
or
mov
mov
loopne
push
cld
xchg
out
sub
push
xchg
popf
scas
repz
add
in
mov
inc
pop
std
mov
jb
xchg
dec
idivb
dec
mov
mov
push
movsl
inc
sbbl
mov
mov
jge
cmp
in
jle
xchg
mov
cmpsb
xchg
jge
xchg
jns
in
jns
xor
js
outsb
cltd
dec
daa
stc
and
jnp
sar
mov
out
fs
fisubrl
xor
jb
repz
gs
out
xor
cli
stos
jae
addr16
pop
int
adc
push
pushl
test
mov
push
outsb
and
pusha
inc
ret
jnp
push
jecxz
mov
jmp
jle
dec
lcall
lods
push
pop
inc
mov
dec
and
push
push
sbb
into
sub
repnz
out
sbb
test
mov
cmp
lods
push
sub
daa
jp
pop
mov
push
jge
adc
xorl
fnstenv
xchg
iret
xor
xchg
jle
jns
mov
jecxz
inc
out
mov
fs
rorb
adc
push
or
rclb
test
jb
cmp
js
cld
push
mov
pop
loopne
add
lds
push
fwait
lahf
fmuls
mov
in
xchg
inc
xor
pop
xchg
pop
cmc
pop
psubd
sahf
test
cmp
cld
pop
daa
fadds
xchg
gs
repz
or
cmp
mov
xchg
adc
in
das
push
test
dec
popf
and
pop
in
popa
or
jns
push
stos
cmp
jmp
lret
and
mov
xchg
gs
and
cmp
inc
jp
and
jnp
xchg
xor
add
jo
stc
sti
je
mov
into
cmp
mov
repnz
loopne
testb
aad
js,pn
in
ss
cmp
jecxz
push
je
mov
xchg
sbb
mov
mov
sub
nop
push
adc
jno
xor
sub
jg
addb
idivl
test
outsb
mov
mov
movsl
pop
mov
cmpb
mov
and
or
sarl
jecxz
inc
jl
jae
imul
sahf
fwait
lods
pop
xchg
mov
divb
mov
mov
xlat
aas
xlat
jae
pop
and
and
cmp
mov
std
stc
pop
call
dec
and
xchg
out
andb
in
lods
adc
sbb
xchg
repz
mov
push
xlat
sub
mov
pop
inc
in
frstor
imul
mull
ficomps
jno
mov
lahf
xor
hlt
sbb
jne
cmp
sub
mov
loop
das
sub
out
mov
mov
aas
aad
push
jp
pop
add
jo
out
push
loop
les
daa
out
xchg
repnz
imul
cmpsl
dec
jae
mov
jo
movsb
flds
fistl
repnz
fnsave
stos
outsb
or
ret
sub
jp
mov
push
push
push
and
or
add
dec
dec
xchg
jecxz
and
stos
mov
and
jp
js
les
repnz
sub
xorl
fwait
aas
or
mov
push
mov
jae
data16
pop
add
stos
js
push
cmp
mov
andb
push
mov
inc
fldl
subb
add
push
push
mov
and
jns
call
sbb
loope
jb
bound
pop
adc
inc
push
ss
in
adc
out
sub
sub
push
pop
xlat
jg
sbb
sub
pop
xlat
aad
mov
mov
pop
and
cmp
ret
out
lock
xchg
adc
jno
or
lret
adc
in
mov
pop
int3
les
xchg
mov
sbb
mov
mov
repz
call
mov
inc
cltd
andl
sti
cmc
xor
sbb
es
loopne
jmp
jp
add
rcr
mov
fcomps
popa
enter
add
mov
xchg
or
pusha
fdivp
adc
cmp
pop
rcrb
pop
sub
inc
add
ret
arpl
mov
mov
out
negb
xchg
fwait
push
mov
sub
das
dec
jp
xlat
icebp
repnz
jmp
popa
add
pop
mov
jecxz
insl
dec
pop
pop
shll
imul
xchg
mov
or
leave
loop
mov
xchg
jae
push
ficompl
jnp
lret
or
xchg
in
xor
or
xchg
fwait
inc
mov
into
lahf
push
dec
int3
mov
imul
or
scas
jae
mov
imulb
inc
mov
jg
push
icebp
lcall
adc
fstps
jne
cltd
cmp
sbb
sub
pop
sbb
fsubr
inc
mov
mov
bound
inc
mov
out
fnstenv
les
mov
add
xchg
mov
mov
and
mov
mov
pop
push
std
out
sbb
in
jb
cmp
mov
fs
cmp
push
stos
xchg
dec
shrl
das
stos
loopne
or
lea
jmp
mov
jnp
add
sbb
pop
push
mov
mov
jg
cs
add
pop
lcall
enter
adc
loop
or
lea
fcompl
js
pop
mov
sbb
fs
push
jmp
out
insb
or
mov
dec
sahf
push
xchg
clc
outsb
jnp
repnz
xor
dec
leave
xchg
mov
and
iret
les
test
daa
fsub
lods
mov
lret
sbb
cmc
mov
sbb
mov
and
mov
aaa
insb
sbb
lcall
nop
push
fsts
dec
ds
sbb
pop
sbb
mov
xor
dec
mov
das
push
mov
push
lea
in
ror
xbegin
mov
sbb
inc
and
notl
cmpsl
and
loope
push
fcmovu
mov
imul
push
mov
ret
mov
sub
mulb
sbb
cmp
test
add
cmp
aaa
sbb
cmp
cmp
jmp
cltd
psadbw
jno
or
add
sarl
loope
mov
repz
es
leave
pop
adc
jge
jo
test
imul
mov
dec
out
pop
xchg
push
jl
xchg
fwait
push
push
out
mov
sub
addl
and
sub
xor
mov
shrl
cmpb
mov
xor
in
out
adc
xchg
mov
and
icebp
shlb
sbb
mov
xlat
aaa
xorb
push
in
icebp
inc
in
pop
dec
pop
cmp
jns
into
dec
xchg
mov
pop
arpl
xchg
cmp
cmpsb
movsb
and
les
popa
add
pusha
cmp
pop
lret
je
cmp
ljmp
xor
and
in
in
cs
inc
outsl
imul
shll
push
xor
dec
test
mov
mov
imul
lock
mov
jl
outsb
jge
jno
jmp
mov
sub
inc
push
jmp
shl
lret
mov
icebp
jl
int3
xor
xchg
mov
test
lcall
mov
cs
lock
push
mov
pop
ffree
lret
daa
or
mov
repnz
sbb
call
mov
lock
adc
movsb
aad
or
push
out
testb
cmp
push
fisubrl
ljmp
inc
insl
cs
frstor
test
mov
mov
cld
inc
xor
adc
jp
jl
cltd
xchg
in
inc
sub
loopne
rorl
push
leave
add
or
jge
sub
faddl
push
or
aad
lcall
adc
push
push
mull
add
mov
sbbb
mov
cltd
out
rcl
push
stos
popa
sbb
rcll
es
sub
mov
jg
mov
popa
xor
clc
jl
xchg
hlt
in
mov
sahf
imul
lock
into
scas
popa
jle
cltd
sub
shll
or
shrb
push
in
roll
ret
test
int3
jbe
and
mov
pop
aaa
fstl
push
push
xlat
dec
out
filds
test
loope
loopne
cmc
and
mov
addr16
clc
cmp
loop
scas
stc
lea
push
add
jb
ljmp
roll
mov
push
pop
icebp
lea
sbb
test
mov
cmp
loope
fcmovnb
sub
pop
sbb
leave
fimull
xor
mov
ret
loop
dec
lods
arpl
mov
mov
mov
dec
ja
push
test
sub
aad
fcompl
add
and
xor
enter
cmpsl
push
les
jbe
add
les
push
xorl
sub
movsl
insl
or
in
in
adc
out
xor
pop
in
sbb
jbe
sub
inc
lods
and
cmc
pop
push
pop
pop
dec
scas
xchg
aas
add
mov
mov
add
push
sub
mov
aad
dec
mov
std
int
add
add
stc
or
and
jbe
cs
loope
push
mov
sahf
ret
xor
enter
subl
pop
or
mov
mov
push
adc
fidivl
pop
lds
sub
jecxz
test
cmpsb
popa
and
cld
pop
mov
lods
cmpsb
mov
xchg
adc
lods
push
jecxz
into
int3
push
sbb
pop
test
xchg
push
or
es
xor
sahf
sbb
jl
fxam
mov
mov
sbb
inc
loope
mov
add
xor
jns
mov
adc
mov
fsts
and
xor
scas
or
jle
and
aad
or
adc
or
mov
pop
push
jnp
cmp
repnz
fs
repz
imul
pop
lods
icebp
movsb
mov
add
movsb
pop
addl
repnz
sahf
fdivrs
jge
add
daa
flds
pop
aam
int3
sub
mov
pop
xchg
sbb
lahf
jp
mov
dec
int
outsl
dec
push
popf
out
jo
push
cmp
iret
lea
add
int3
xor
lock
push
cmp
movsl
aad
mov
fs
in
xchg
mov
pop
movsl
xor
lret
fildll
cmp
mov
lods
push
fildll
out
mov
cmp
insb
push
jl
je
jge
sar
xchg
fsubrl
mov
add
jmp
mov
jle
push
pop
adc
jmp
pop
pop
shrd
add
jo
fstps
gs
sub
xchg
mov
js
bound
adc
push
xor
mov
int3
adc
adc
popa
pusha
mov
cld
or
jmp
sbb
or
push
pop
leave
jne
cltd
pshufw
insb
push
cmp
cmc
mov
sub
iret
push
cmp
in
mov
stos
and
adc
xor
jns
cmp
movsb
lret
in
pop
aad
cld
leave
sbb
je
xor
sarl
int3
ss
out
jmp
call
xchg
ret
xor
add
push
lods
mov
mov
pop
mov
inc
mov
mov
shl
test
pop
ficompl
mov
push
jo
out
adc
in
adc
insl
aas
out
int3
pop
std
and
and
cmp
pop
aad
xor
daa
add
mov
jne
fcompp
sbb
nop
test
sbb
adc
xor
jb
addr16
cld
lock
add
xor
lcall
dec
cmp
pusha
jae
sbb
mov
xchg
imul
sbb
jne
and
push
cmp
mov
int
adc
mov
cmp
shlb
insb
mov
jb
rcl
xchg
imul
xor
loop
push
pop
fwait
mov
lods
out
gs
imul
xchg
dec
ljmp
repz
notb
repz
jle
outsb
xor
xor
bound
out
add
gs
lods
sarl
cmp
inc
std
je
sbb
add
call
je
mov
xchg
loop
out
imul
and
nop
lea
fldcw
pushf
add
cmp
pop
mov
insb
sbb
cmp
sahf
xor
fisttpll
sti
sahf
cmp
scas
insl
sbb
adc
mov
xor
jl
rcl
mov
adc
or
mov
loop
sti
add
les
mov
mov
xchg
loopne
movsb
or
dec
stc
into
rolb
push
sub
scas
call
dec
pop
sbb
out
scas
sbb
mov
push
mov
push
inc
pop
stos
push
xorl
and
add
and
jp
data16
in
push
dec
js
jns
lret
or
sbb
xchg
jge
cmp
shl
test
sbbb
repz
fdiv
nop
cs
push
sub
test
xor
mov
movsb
cmpsb
in
push
add
sbb
loop
negb
mov
jle
mov
xor
or
xchg
mov
insl
out
nop
cli
idiv
mov
gs
test
fs
jb
mov
and
adc
ds
js
cmc
adc
pop
mov
sub
add
es
mov
mov
in
lods
icebp
rolb
mov
ds
outsb
imul
cmp
inc
mov
cmp
mov
in
jmp
sub
mov
stos
pusha
scas
imul
or
jmp
pop
iret
mov
mov
inc
dec
movl
loopne
dec
jnp
add
add
mov
jg
mov
cli
lds
cmc
mov
stos
int
test
aam
ret
mov
enter
lock
xchg
xlat
fs
in
lods
loopne
mov
dec
sub
data16
push
pusha
push
xor
jb
call
repnz
or
data16
xchg
out
faddl
clc
sub
and
mov
xchg
jne
rolb
xlat
xchg
imull
stc
jne
inc
addl
mov
mov
fsubrs
out
inc
jns
fildl
shl
jge
leave
sub
push
and
shrl
mov
xchg
push
or
leave
push
push
das
scas
jmp
xchg
mov
sbb
popa
lods
in
add
lods
xorb
scas
clc
pop
subl
jmp
cmp
mov
xor
loope
mov
lahf
gs
incl
pop
mov
jne
xor
lods
mov
movsb
and
jg
jl
pop
jmp
jnp
pop
ds
pusha
repnz
mov
lret
repz
loope
lock
push
mov
iret
loopne
jno
loope
mov
adc
dec
mov
stc
enter
insl
and
scas
cmpsl
mov
lret
das
je
out
push
lods
cmp
or
mov
push
in
loop
sub
test
inc
shrl
pop
sub
nop
das
pop
mov
push
sub
mov
lret
or
mov
dec
mov
movsb
adc
mov
popf
aaa
xchg
iret
sahf
push
mov
sbb
in
aas
jge
add
sub
and
popa
lods
push
pop
test
add
xchg
mov
mov
add
mov
mov
inc
data16
lret
dec
sahf
into
xchg
xchg
sub
fdivl
push
rcrb
cmp
or
cmp
lods
mov
icebp
mov
sub
stc
sub
in
and
cmp
jbe
push
xchg
out
push
scas
xor
lahf
sub
into
xor
test
cmc
das
popa
fwait
push
or
rcrl
sub
sub
scas
andl
popa
sbb
inc
dec
daa
aad
sub
hlt
sahf
ljmp
push
out
pushf
mov
cmc
push
adc
pushf
les
sub
loopne
mov
ret
mov
xchg
sbb
rcr
xor
xor
cmp
dec
rorl
les
cmp
mov
mov
mov
fsubrl
enter
dec
jp
scas
shlb
sti
jae
jge
cmp
loope
int3
cli
mov
stc
adcl
mov
int
cld
adc
sub
rcr
add
cwtl
out
mov
cli
das
imul
xchg
aam
or
push
sub
mov
pop
shlb
mov
adc
vmovaps
xlat
ret
xchg
nop
mov
sbb
push
lahf
sub
pop
sub
or
adc
into
dec
sbb
mov
cmpsl
adc
popa
out
xor
sbb
add
pusha
filds
mov
popw
mov
sbb
test
sbb
mov
cmp
jmp
in
scas
push
aam
adc
fcoms
adc
enter
add
xor
aaa
mov
shlb
mov
test
xor
insl
xlat
xor
sbb
mov
push
rcrb
je
in
das
mov
mov
sub
xchg
mov
mov
jb
repnz
push
pop
aaa
cmpsl
dec
xchg
pop
stos
mov
xchg
mov
inc
jns
adcb
adc
push
inc
and
lea
lahf
loopne
imul
insb
cmc
bound
fadds
sti
loope
cmp
cmp
cmp
lods
inc
in
and
mov
and
loope
push
addr16
jge
inc
outsb
outsl
cmp
rcl
popa
xor
imul
jns
mov
adc
mov
xorl
adc
lret
lods
adc
subl
jecxz,pn
pop
mov
sti
std
xchg
mov
sub
dec
adc
add
ljmp
and
lods
sbbb
pop
inc
into
out
push
xchg
mov
or
lret
pusha
jp
out
sti
mov
push
xor
or
iret
ss
rcll
ljmp
cmp
xchg
xchg
jle
jmp
sarl
dec
gs
xchg
lods
push
cli
mov
pop
in
jb
in
bound
inc
mov
fnstenv
pop
hlt
fwait
pushf
dec
mov
enter
xchg
repnz
or
adc
push
call
ret
test
int3
inc
push
xchg
idivl
fstpt
sbb
xchg
testb
push
or
mov
movsl
adc
out
add
sahf
push
notl
or
aaa
dec
dec
dec
fs
jo
jle
and
ja
sub
jmp
in
inc
rorb
or
shll
pop
imull
pop
out
add
or
outsl
cmp
jbe
decl
rol
int3
jns
jne
pop
jae
cmp
leave
repz
and
cmc
lahf
fldl
pop
aas
aad
out
mov
fnstenv
push
cmp
add
xor
and
xchg
add
pushf
xor
xchg
jns
xchg
mov
ds
add
cmpsb
push
imul
movsl
loope
hlt
dec
push
clc
ljmp
mov
mov
mov
loop
int3
test
sbb
rorb
dec
fdivrs
sub
das
cmp
iret
fbld
inc
pop
mov
es
xor
vpsubsb
mov
imul
inc
ja
jmp
xchg
inc
loope
xlat
fisubs
notl
bt
outsb
rclb
je
test
sbbl
jle
dec
in
pushf
rolb
cmp
mov
mov
xor
or
dec
inc
cmp
push
pusha
orb
mov
aam
push
push
jno
ja
clc
arpl
mov
leave
xchg
test
rolb
sbb
loop
mov
sbb
pop
cmpsb
test
cmp
push
mov
lret
imul
sub
dec
jg
mov
call
mov
pop
cmp
xor
fs
sbb
push
sub
pop
stos
in
xchg
out
add
loope
cli
or
pop
dec
cmc
mov
mov
lods
clc
pushf
mov
insb
popa
sbb
orl
mov
std
pop
lods
push
mov
cwtl
sub
in
inc
rcll
es
mov
and
sbb
and
or
xchg
mov
dec
into
mov
insl
push
xchg
insl
fisubrs
mov
sub
fdivs
mov
into
jle
cmp
paddsb
push
ss
sbb
pop
loopne
dec
in
xor
sbb
xchg
xchg
push
frstor
pop
or
or
adc
leave
jnp
and
roll
jns
or
and
sti
leave
xchg
sub
ja
fwait
js
push
cmp
repnz
stos
fdivrl
mov
and
and
int3
outsl
cld
popa
xchg
out
add
adc
push
enter
test
cwtl
mov
aad
test
push
iret
mov
mov
mov
mov
dec
stos
mov
cmp
fwait
push
out
lret
xor
and
arpl
movsl
out
inc
loope
outsl
mov
mov
xchg
add
add
dec
push
or
sub
repz
lahf
cmp
and
mov
js
push
cmp
repnz
stos
add
test
cwtl
call
stos
or
addl
or
cmc
das
xor
arpl
cmp
xor
xlat
mov
js
push
cmp
repnz
ss
pop
insb
mov
cmp
xor
cmp
xor
xchg
or
pop
jmp
dec
arpl
es
loopne
loop
sub
pop
sbb
enter
cwtl
jnp
sbb
outsl
xor
cmpsl
push
and
outsl
enter
mov
jnp
xchg
jne
add
ret
clc
pop
push
push
ss
ds
aad
sbb
das
repz
in
dec
sahf
pop
xchg
test
jecxz
