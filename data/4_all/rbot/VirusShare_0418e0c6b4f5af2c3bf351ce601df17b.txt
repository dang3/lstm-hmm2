std
call
in
sub
lea
push
xor
push
push
pop
cld
call
mov
je
xor
jmp
push
push
push
push
push
xor
decl
cmp
je
lea
push
push
call
add
fistpl
data16
and
add
jo
mov
add
scas
jns
xor
out
pop
imul
lock
cmp
out
add
pushf
or
push
inc
add
or
std
pop
mov
mov
add
subb
lcall
cld
push
fmuls
xor
mov
jns
xchg
push
push
push
aaa
inc
xor
cli
push
or
pop
dec
mov
push
cmp
rcll
mov
addl
pushl
sub
mov
pop
mov
ja
pop
js
sbb
prefetch
js
push
imul
add
outsl
xor
adc
xchg
int
cmp
je
jp
mov
sar
imul
add
pop
adc
popf
mov
pop
sbbl
mov
int
mov
cmp
and
pusha
outsb
mov
test
clc
lods
lea
mov
cmp
sbb
ret
adc
adc
aas
mov
loope
lods
mov
sub
outsl
clc
mov
imul
dec
pop
push
push
gs
add
out
mov
push
adc
xor
sub
mov
mov
fisttpl
dec
push
pop
mov
es
test
push
inc
leave
rep
jmp
mov
mov
jmp
and
jecxz
dec
jae
in
pushf
dec
inc
lret
mov
repz
adc
xlat
lcall
push
mov
pusha
imulb
xor
test
or
jb
daa
lahf
add
xor
ljmp
cmp
int3
pop
cmpsl
add
es
loopne
insb
add
in
mov
push
and
cmc
repz
loopne
add
fcomp
cld
in
ss
adc
sbb
sbb
jl
jge
mov
fs
pop
mov
xchg
and
jge
imul
mov
sub
iret
call
push
push
nop
xchg
or
jecxz
outsb
or
push
push
cs
mov
sub
ja
enter
sbbb
daa
push
loop
mov
add
insl
stos
lea
push
rcll
xor
mov
inc
xchg
shlb
add
push
adc
repnz
pop
sbb
pushf
and
sti
dec
sti
mov
add
jle
int
ret
ljmp
mov
pop
jb
fiaddl
xlat
ret
movsb
adc
pop
sbb
popf
lock
xor
flds
add
xchg
jne
add
fiaddl
fs
call
pop
jmp
je
sub
popf
clc
daa
clc
push
loopne
jae
in
mov
movl
jb
pushf
rcrl
divb
test
scas
ss
imul
and
subl
js
cmpb
dec
adc
popf
push
pushl
add
jmp
sbb
jne
push
jmp
push
inc
fdivrs
dec
push
xor
jmp
movsl
xchg
add
pop
mov
lds
mov
add
movsl
out
push
fistpll
out
movsl
movsw
jns
mov
stc
rep
stos
mov
mov
pop
xor
loop
fsts
push
jl
lds
dec
lcall
mov
pop
pop
xchg
mov
idivl
in
adc
nop
into
and
adc
repz
sarb
je
cmp
jne
push
jl
jge
push
push
das
je
and
add
ret
inc
nop
and
rcll
pop
lds
adc
inc
or
ret
mov
or
inc
prefetch
xchg
loopne
xlat
inc
nop
pop
std
add
ja
inc
adc
cmpsl
fsub
mov
std
cmp
cld
iret
adc
idivb
stos
or
push
mov
xor
fisttpl
mov
sub
int
xor
jno
nop
sub
rcll
ds
jae
lea
jo
out
lcall
cli
or
inc
mov
xchg
inc
xchg
les
cmp
int
mov
je
xor
mov
mov
adc
add
pop
fldenv
and
pop
jne
push
push
mov
int
aam
test
xchg
or
jo
push
loop
pusha
mov
or
push
push
adc
xor
sbb
daa
mov
pop
jbe
push
cld
out
cmp
push
mov
sub
sub
sarl
add
add
lea
mov
jbe
push
or
jl
sbb
fs
xchg
dec
mov
mov
sbb
fs
int3
mov
lea
xchg
xchg
dec
sbb
outsl
js
mov
loopne
xchg
push
push
imul
push
icebp
pop
xor
mov
mov
pop
mov
cmp
cmpl
jne
stc
xor
jecxz
or
add
int
inc
sahf
insb
ds
and
enter
jns
insb
je
loop
int
push
aaa
xchg
cmp
mov
adc
push
xchg
pusha
mov
jle
mov
inc
cld
or
or
sbb
push
fistpl
pop
lea
push
inc
mov
mov
mov
rep
cmp
push
sarl
mov
je
mov
out
adc
push
arpl
mov
mov
dec
push
daa
imul
add
add
fidivrs
or
sbb
daa
lock
fincstp
shlb
sub
pop
pop
in
insb
sbbl
sbb
int3
push
dec
mov
pop
cwtl
xchg
pop
xchg
sub
or
roll
gs
cmp
test
into
fistl
dec
adcl
fcompl
add
jge
dec
lock
loopne
dec
ret
lods
xchg
jg
add
clc
jne
pop
jmp
mov
ret
orl
jne
push
jmp
push
jae
xlat
outsl
and
sub
jmp
ret
mov
cltd
push
pop
hlt
adc
push
clc
jmp
dec
sub
stos
mov
cmp
neg
push
cld
daa
mov
std
lock
call
sub
xor
push
mov
inc
inc
inc
popa
stos
adc
cltd
push
jl
jmp
sub
pop
push
adc
int3
add
je
ss
cmp
es
jo
adc
iret
movb
mov
cmp
add
mov
pop
es
cmpsb
add
xchg
sbb
out
or
icebp
sub
js
ds
lods
out
hlt
xor
xchg
dec
test
inc
lcall
dec
sbb
xchg
shll
fstpl
popa
inc
sub
dec
push
mov
daa
mov
push
fadds
in
arpl
shl
or
sub
out
lock
mov
jo
and
insb
out
xor
xor
jo
movsb
mov
js
pop
imul
pop
mov
pop
out
testb
mov
inc
push
ss
in
rcrb
sbb
mov
jne
gs
add
adc
in
and
leave
add
xchg
or
fcoms
out
jg
dec
cs
rol
int
xchg
les
or
mov
out
add
enter
movsb
rcrb
jle
call
sti
paddusb
orl
lock
push
xor
fldl
push
push
push
sbb
xchg
inc
adc
sub
jnp
push
jbe
adc
jle
jecxz
sub
in
cs
loopne
roll
loop
lahf
xor
add
add
iret
mov
cmpl
test
cmp
push
or
mov
add
add
gs
mov
scas
cltd
add
dec
pop
sbbb
pop
popa
and
push
or
shrb
mov
nop
lods
pusha
jecxz
jmp
sbbb
incl
pop
pop
cmp
in
jb
push
sti
in
xchg
adc
cld
jno
inc
mov
mov
mov
addr16
push
ss
mov
mov
in
xchg
push
cli
hlt
and
jp
mov
push
hlt
lea
sbb
popf
or
enter
mov
call
jae
sbb
push
mov
mov
mov
cmp
add
xchg
inc
cltd
dec
rol
pop
inc
pop
test
popf
aam
inc
cli
push
push
popf
sbb
scas
scas
cltd
jl
pop
das
push
inc
push
sub
pop
jg
ret
push
xor
call
jmp
dec
add
sub
xor
aas
into
insl
lret
les
arpl
ffree
les
das
jle
add
push
int3
inc
in
cmpsb
or
add
cmp
xchg
lsl
cmpsb
jae
mov
and
xor
xor
and
es
jg
movl
sbb
inc
add
push
mov
aam
dec
pop
pop
rcrb
sbb
in
mov
cmp
clc
je
push
ljmp
int3
mov
cmp
jae
mov
dec
push
neg
scas
adc
ja
in
popa
enter
inc
sbb
andb
outsl
smsw
mov
xor
inc
bswap
push
add
sub
dec
xchg
mov
inc
xchg
movl
push
push
dec
inc
stos
add
cmpsl
adc
mov
pop
call
cmpsl
push
push
scas
push
push
dec
push
sbb
aam
cmp
outsb
test
jg
adc
in
cld
fmuls
add
jp
aas
mov
adc
push
lock
je
loopne
sbb
sub
int3
lds
fadds
push
pop
rorb
xor
cli
add
mov
pop
sub
outsb
inc
add
imul
popa
dec
cmp
mov
pop
icebp
adc
sbb
pop
mov
cmpsl
xchg
test
outsb
xchg
jne
roll
add
xor
jmp
inc
lahf
or
mul
jno
mov
xchg
mov
mov
fsubs
adc
scas
dec
xchg
scas
push
call
test
std
in
dec
xor
decl
loop
lcall
jl
push
cmp
sub
pop
jo
jge
shl
pop
dec
xchg
dec
sub
jl
mov
jg
or
arpl
inc
jg
icebp
mov
add
popf
shl
mov
repnz
pop
in
test
cmp
inc
inc
inc
mov
test
mov
xor
add
xor
ret
sbb
dec
mov
push
jmp
fisubs
lods
or
mov
inc
imul
call
mov
leave
sub
insb
fsubl
jmp
js
ret
mov
jns
jmp
push
out
cmp
xlat
imul
and
and
imul
ret
pusha
xor
xor
lock
cmp
jl
mov
jbe
push
push
mov
cwtl
ja
or
push
test
xchg
xor
push
sbb
inc
inc
out
in
lock
dec
repnz
icebp
inc
js
sbb
adc
test
mov
outsl
mov
push
int3
movsl
pop
scas
fisttpll
mov
or
popf
mov
pop
push
cmp
cli
add
mov
rorl
mov
mov
pushf
fcmovbe
inc
push
loop
inc
jb
mov
loope
push
mov
cld
insl
and
cmp
mov
jo
das
adcb
enter
shlb
xchg
xchg
push
stc
pop
pop
mov
push
pusha
rol
dec
cld
jo
jnp
sbb
pop
add
popf
fmull
mov
mov
mov
fbld
jb
cld
aam
jno
out
nop
movsb
fistpl
and
push
pop
stc
sbb
clc
or
je
popa
jl
sub
dec
xchg
push
dec
mov
adcl
test
xor
mov
pop
arpl
xorl
jae
adc
lahf
loop
pop
enter
mov
jno
repnz
adc
jb
push
sahf
aaa
jns
subl
inc
dec
fimuls
jnp
xchg
or
test
push
jle
call
outsl
pop
push
push
jmp
mov
pusha
js
push
sbb
lea
cmp
push
inc
inc
add
or
add
movsb
inc
inc
cmpsb
in
lret
sub
push
pop
push
dec
test
loopne
sub
push
int3
call
xor
mov
mov
repnz
ds
fdivrs
pop
faddl
lret
hlt
lock
mov
lods
in
cmp
pop
push
push
push
mov
inc
arpl
push
sbb
rorl
imul
sub
test
das
xor
repz
push
add
push
mov
cmp
lock
into
in
in
sbb
dec
call
xor
or
popa
dec
movsl
push
sub
js
nop
and
loop
xor
dec
adc
dec
add
imul
cmp
dec
dec
insb
lahf
or
push
jae
cmp
sbb
rolb
cmp
jne
jl
pop
rolb
mov
pop
stos
jecxz
stc
mov
icebp
mov
push
and
or
test
sbb
fnstcw
and
enter
pop
ret
pop
sub
add
adc
cmp
in
dec
xor
or
xor
int
rorl
mov
add
sub
rcrb
pop
and
dec
stc
aas
je
subl
jge
sbb
sbb
clc
mov
pop
in
in
inc
mov
jle
sbb
xchg
sub
ret
or
pop
or
int3
into
jge
adc
mov
xchg
sbb
inc
mov
fxtract
lds
fsubs
repnz
mov
push
push
push
sbb
mov
inc
xor
and
mov
pop
das
inc
cmp
fwait
dec
testb
push
jne
arpl
sbb
cwtl
jl
cmp
and
lock
fdivs
ds
aaa
jnp
fistpl
or
dec
je
adc
ret
cld
and
xchg
cld
cld
movnti
and
lods
ret
das
jnp
push
mov
push
mov
dec
loopne
add
jge
add
sbb
push
fdivrs
outsl
and
sbb
sub
rcrb
stos
jbe
fsubl
inc
into
dec
inc
in
or
lock
cltd
lods
mov
shlb
shl
jns
imul
addr16
movsl
sbb
mov
test
mov
sbb
sbb
adc
cmp
jne
js
add
aad
xor
aad
inc
jecxz,pt
fwait
cltd
aaa
or
sbb
add
fdiv
addr16
add
mov
cmp
lcall
sbbb
andb
push
lcall
int3
ret
jmp
sarb
dec
clc
push
xor
pop
sbb
out
mov
repz
inc
sbb
loope
shl
rcr
movsl
js
xchg
js
pusha
ljmp
pop
dec
int3
push
fcoml
fdivrs
je
xor
xor
mov
pushf
imul
adc
nop
ja
mov
pop
fcoms
test
in
mov
ljmp
sti
mov
push
jg
pop
les
leave
dec
xchg
sub
sti
mov
pop
ljmp
dec
hlt
pop
cmpl
shlb
xchg
mov
aam
ret
push
call
shl
movsl
and
sub
mov
test
sub
pop
out
pop
jno
lods
cmp
dec
aam
pop
outsb
ret
or
in
xor
or
push
jp
addb
lds
and
push
out
cmp
mov
and
mov
mov
adcb
or
mov
jnp
dec
sbb
andl
sub
pop
mov
rcrl
push
or
inc
cmp
mov
cmp
je
cmpl
pop
inc
jo
push
lock
cmp
call
push
rcrb
jne
mov
adc
xchg
and
pop
pop
ss
push
es
les
addl
jecxz
add
es
sbb
or
cld
sbb
sbb
nop
adc
dec
repnz
xorl
xchg
js
push
sbb
mov
fimull
jge
or
in
add
sbb
xchg
mov
cmp
mov
lea
sbb
and
ljmp
inc
add
xchg
into
dec
jbe
adc
fildll
dec
lock
push
push
and
rcr
repz
inc
or
add
and
sub
aaa
sbb
pop
jbe
and
or
rcrl
jmp
jle
pop
xchg
test
pop
movsl
add
add
xor
sbb
cmp
inc
push
dec
pop
sbb
clc
jp
mov
cli
xor
cmp
jne
mov
inc
rol
dec
iret
pop
pop
aad
add
jnp
jp
pop
repnz
call
cwtl
xor
imul
test
daa
and
adc
sbb
cmp
shlb
mov
lds
pusha
repnz
bswap
mov
lea
cmp
cli
jmp
sbb
neg
push
ss
fists
fcomps
mov
push
daa
lock
adc
test
push
sub
fidivl
jle
jns
int3
xor
xor
test
subb
stos
xlat
jecxz
dec
shlb
imul
adc
or
unpcklps
gs
xchg
pop
mov
add
sbb
out
add
pop
and
xchg
adc
in
out
fs
in
inc
in
hlt
push
sbb
lahf
shl
cwtl
cmp
push
adc
sub
std
cltd
dec
cmp
mov
andb
pop
pop
mov
mov
cs
fwait
nop
add
sub
test
lret
inc
xor
xchg
movsl
out
pop
test
mov
std
sbb
fmull
cmp
push
cmpb
lea
add
arpl
cmpsb
sarl
stos
inc
dec
and
xor
aam
mov
xor
sbbl
mov
rorb
push
lock
lahf
sbb
loopne
enter
repz
sub
popa
pushf
scas
adc
pushf
outsb
pop
rorb
add
jno
pop
mov
inc
mov
xchg
dec
cwtl
push
push
push
fwait
in
stos
popa
icebp
sub
mov
sti
add
push
stos
addb
imul
int
sar
mov
imul
inc
and
sbb
inc
ficompl
push
mov
sub
movb
adcb
dec
cmp
test
in
xor
sub
jae
daa
inc
pusha
out
and
popa
mov
fisttpll
mov
push
push
or
pusha
cmp
jns
lods
push
loopne
lds
xor
test
add
adc
mov
cmp
nop
add
mov
mov
sbb
test
or
fiaddl
push
pusha
test
sbb
mov
lods
test
hlt
adc
adc
push
xor
hlt
call
or
insl
xlat
mov
inc
or
jne
push
xor
push
fs
jmp
loope
sbb
add
add
pop
adc
in
int3
js
lods
adc
scas
pop
push
test
mov
mov
imul
scas
mov
or
test
sbb
call
xor
mov
xchg
adc
and
rorl
jb
push
clc
push
jb
dec
mov
repnz
rolb
ret
add
push
push
add
mov
sbb
cld
mov
jnp
dec
fisttpl
xor
pop
pop
icebp
and
pop
jne
adcb
les
nop
lret
sub
jns
in
xchg
jns
add
test
and
xchg
xchg
loope
mov
pop
nop
ret
loopne
cmp
push
stc
nop
mov
add
add
shll
xchg
inc
push
shr
loopne
push
stos
sbb
xor
jne
adc
mov
or
jns
sbb
dec
mov
outsl
das
push
ja
pop
mov
dec
push
lock
clc
mov
mov
gs
inc
aaa
mov
mov
mov
pusha
outsl
ret
pop
jbe
cmp
jg
xchg
mov
sbb
dec
add
mov
stos
ret
xchg
xor
in
fisubrl
add
add
jl
je
iret
mov
xor
mov
sbb
std
ds
je
push
mov
loope
ficoml
xchg
popf
cmpsb
pusha
cld
jo
and
cld
mov
add
xchg
cmpl
movb
xor
in
cwtl
push
jg
mov
xchg
dec
xchg
jae
aam
and
insl
add
pop
sbb
inc
add
add
mov
jmp
xor
mov
mov
mov
bnd
sub
sub
out
sbb
push
pushf
push
int3
add
cmp
mov
ret
movaps
xorl
cld
adc
cmp
inc
xor
or
xorb
pop
push
inc
es
movsl
lahf
sub
mov
push
fwait
hlt
push
loop,pn
add
insb
rcrl
aas
test
jne
popf
jl
pop
andb
popl
lock
and
jg
inc
and
add
lock
sbb
or
mov
sbb
int3
adcl
add
std
mov
arpl
int
or
pop
push
jl
cmp
pop
filds
xor
or
aam
sbb
clc
pop
xchg
ss
xchg
or
rcll
pushf
dec
notl
pop
outsl
pop
repnz
ret
roll
pop
mov
pop
mov
dec
pusha
and
daa
enter
and
push
enter
pusha
les
xchg
dec
leave
pusha
add
jb
mov
fidivrl
cmp
popa
lret
sarb
push
push
xor
popa
push
inc
ljmp
push
cmp
add
add
dec
cwtl
xor
xor
xchg
push
push
push
lar
adcl
xor
xchg
xor
jo
inc
sbb
mov
inc
nop
sahf
add
outsl
in
mov
mov
mov
xchg
sbb
orb
leave
xchg
add
faddl
cmc
xchg
push
mov
add
pop
daa
into
rcll
andb
das
scas
sbb
scas
icebp
or
testl
lret
pop
and
adc
mov
adc
rcr
lds
pop
mov
sub
hlt
add
insl
cld
bound
aaa
jno
or
repz
inc
mov
dec
subb
cmp
jne
jl
xchg
sbb
outsb
dec
mov
clc
cld
cld
repnz
jne
sbb
and
adc
or
xor
call
mov
out
add
mov
loop
push
push
or
les
push
cmp
adc
and
inc
cmp
les
imul
mov
pop
addr16
pavgb
jg
mov
push
lea
clc
or
cmp
setg
mov
push
ds
dec
lea
das
movsl
mov
movl
fsubl
pop
imul
loope
ja
cmpl
push
in
scas
jge
dec
je
lods
cmc
loop
out
mov
jmp
push
push
mov
fistps
mov
adc
push
in
jg
and
sbb
xor
stc
test
sub
push
insl
gs
inc
adc
loopne
jnp
inc
push
and
pop
call
mov
jno
cmpb
inc
fucomi
mov
jne
daa
add
in
shlb
add
aad
pop
ds
stos
lock
mov
movsb
pop
add
enter
icebp
sub
fnstsw
mov
mov
movsb
popf
gs
test
xchg
jb
data16
les
pushf
shr
sbb
cwtl
lea
mov
xchg
in
cmp
ja
push
das
int3
ja
sbb
pop
lea
jmp
and
out
arpl
dec
push
add
aaa
fisttpll
and
push
dec
lods
imul
sbb
ss
mov
rorb
shl
cmpsl
and
cmp
mov
xor
inc
les
xlat
sub
push
lock
ret
aam
mov
xor
sbb
fwait
sbb
subb
aad
sub
mov
push
nop
movsl
pop
in
or
jp
dec
imul
shll
mov
pop
add
out
dec
imul
pop
or
push
call
dec
data16
jmp
lods
fildll
mov
inc
cmp
rcll
lock
mov
xor
or
pop
and
insl
ror
js
add
push
push
movsb
cmp
xor
insb
adc
add
sbb
mov
mov
xchg
mov
mov
or
nop
aam
mov
ja
push
mov
andl
out
push
inc
out
mov
pusha
inc
movb
jno
cmpb
push
xor
psllw
inc
mov
idivb
inc
jp
imul
frstor
push
mov
push
push
push
pop
adc
ss
and
add
inc
pop
and
add
push
nop
dec
iret
pop
inc
adcb
xor
xor
std
lea
push
aas
cmp
dec
pop
xchg
mov
ja
std
and
clc
lods
subb
push
inc
jge
add
mov
out
dec
dec
lock
les
push
mov
mov
pusha
fidivrs
test
mov
lods
xlat
push
test
sub
cmp
jge
movzwl
push
push
cli
or
jecxz
sahf
clc
lock
negl
orl
pop
sub
sbbb
addb
mov
sahf
and
adc
mov
std
xor
mov
add
repnz
push
mov
mov
je
adc
or
push
push
cmp
mov
adc
lock
scas
or
mov
movsb
adc
sbb
push
in
daa
js
rcrl
into
push
fs
pop
mov
in
xor
pop
cmp
push
cli
int
aas
adcb
mov
call
inc
cmpsl
jns
inc
or
fcomps
pushf
pop
xor
cmp
enter
lods
add
xchg
xlat
in
inc
sbb
clc
sbb
imul
sub
fstpt
jne
ja
je
push
jmp
aaa
mov
inc
sbb
mov
cmpsb
jnp
cld
nop
outsb
fidivl
lret
divb
push
xor
test
cmp
jns
call
lahf
popf
push
cmp
popa
mov
mov
add
lods
pop
push
push
mov
ja
pushl
pop
in
call
je
pop
call
adc
sub
in
inc
movsl
adc
xchg
call
mov
shrb
push
mov
push
cmp
mov
scas
xor
xor
add
sti
cmp
add
pop
or
ja
sbb
jae
jge
scas
fisttpl
add
lock
mov
fists
and
data16
or
pop
int3
pop
imul
add
call
mov
mov
cwtl
mov
mov
sbb
in
sbb
shlb
and
push
ret
sbb
jl
sti
jo
xor
sbb
xorl
jg
fimuls
jge
or
aam
aas
jge
stc
mov
shr
shl
call
lea
add
adc
push
adc
and
scas
mov
jp
inc
or
in
repz
shll
fcom
test
dec
lods
xor
mov
push
jo
lock
mov
test
jne
pop
scas
mov
lea
push
or
push
push
cmpsb
mov
cmp
pop
push
in
xchg
push
ljmp
sbb
mov
mov
lret
imul
and
cwtl
pop
adc
lock
in
in
clc
mov
in
jmp
adc
jmp
adc
mov
fwait
push
xor
xchg
cmp
js
sbb
adc
fcomps
mov
mov
pop
dec
cmp
adc
pop
dec
or
or
sbb
push
fisubrs
pop
jnp
adc
sub
push
push
cmp
pop
xchg
je
je
inc
mov
lret
scas
dec
push
jmp
push
rolb
or
out
clc
sahf
push
fdivs
push
mov
fldcw
adc
xor
and
dec
adc
clc
push
clc
lret
jg
mov
pop
pop
fildll
mov
add
inc
or
inc
mov
out
rorl
add
add
gs
add
pop
sub
cltd
subb
sub
lods
and
sbb
and
cmp
mov
and
or
mov
addr16
testl
jns
shll
cmpsl
jo
mov
dec
adc
dec
adc
sub
enter
icebp
cld
push
mov
rcr
cld
dec
xchg
cmp
nop
sub
cld
adc
add
add
pop
push
jmp
xlat
push
shrb
adc
jmp
daa
call
mov
jmp
aam
pushf
push
jnp
cmp
inc
mov
pop
adc
leave
jnp
xor
jno
xchg
imul
and
mov
jge
xlat
xor
in
mov
hlt
xor
int3
mov
mov
mov
cld
push
jge
xor
lock
sbb
sub
xor
xchg
je
das
cmp
in
sub
push
sub
in
ret
or
lock
xor
into
sub
in
and
lea
jle
rcll
loop
push
rcrl
xor
jle
push
xor
loopne
mov
mov
xlat
sub
push
test
adcb
add
outsb
jbe
push
push
add
adc
mov
adc
fdivrl
cmpb
push
and
sub
hlt
lea
push
or
jno
push
testl
mov
loop
and
sub
mov
and
and
mov
ret
shr
das
xor
loope
push
inc
dec
jne
pop
pop
rcrl
ret
or
js
push
lds
lock
fildl
dec
shlb
loope
testb
mov
xchg
sbbb
sub
xchg
notb
inc
push
ds
dec
dec
add
push
mov
xor
fcom
push
cmp
mov
jmp
dec
jp
pop
dec
lock
cld
cmp
inc
repnz
mov
adc
mov
notl
adc
and
push
pop
dec
or
add
adc
incb
shr
mov
xchg
mov
add
daa
push
jecxz
out
out
cmpsl
insb
xchg
in
jnp
aaa
sub
cmp
cmp
test
dec
repz
sbb
adc
xchg
xbegin
xor
jmp
aad
mov
jmp
push
or
xchg
pop
rcrb
adcb
cmp
cmp
jl
push
cmpsb
and
das
jg
add
and
push
dec
push
cmp
test
or
jb
xchg
or
xor
pop
sub
icebp
pop
fstl
aad
test
jo
or
leave
mov
cli
jne
push
sbb
cmp
pop
rclb
sarb
aaa
stc
js
mov
jnp
cmc
nop
push
add
cs
jno
or
out
aam
rclb
cwtl
cld
out
sysexit
cs
mov
mov
mov
jg
and
push
pop
leave
movsbl
mov
pop
daa
out
inc
pop
dec
cmp
pop
jbe
test
cmc
pop
insb
xchg
push
push
push
mov
bound
clc
jne
sbb
repnz
xor
das
sub
cld
roll
insl
shll
sbb
sahf
or
add
dec
cmp
bound
ret
enter
mov
sub
add
adc
sbb
loope
xchg
and
ss
aaa
lods
push
push
sbb
sbb
in
mov
add
jne
push
add
and
jo
sbb
push
xlat
fisubs
loope
dec
sbb
cmp
int3
outsb
loopne
jge
int3
cld
cmc
jl
scas
and
push
fisttpl
loopne
dec
pusha
and
gs
push
daa
mov
ret
push
mov
or
push
aaa
adc
loope
ss
mov
outsb
jns
jecxz
mov
call
dec
iret
add
outsl
adc
push
je
cs
jge
cld
movsb
xchg
jne
or
ret
lea
in
lea
cltd
pop
fdivl
inc
test
data16
push
movsl
add
and
mov
xchg
push
les
add
aad
dec
fistpl
das
inc
ret
cmp
fnstsw
je
cmp
or
popa
or
jbe
daa
dec
sahf
out
data16
mov
adc
rcrb
les
xor
dec
hlt
xchg
les
xor
loopne
dec
cwtl
in
sbb
xor
aam
jge
jno
jo
aad
xchg
jnp
jmp
nop
adc
imul
movsb
sbb
addr16
inc
push
jns
mov
cmpsb
mov
sub
dec
shl
push
das
jmp
pop
aaa
dec
mov
ljmp
inc
aaa
mov
and
in
lock
add
movl
cmp
negl
insl
fdivr
sbb
sub
push
push
pop
in
add
or
sar
inc
and
or
arpl
adc
jecxz
leave
xchg
add
movsl
js
jae
std
and
nop
add
std
sbb
push
add
je
insl
shr
into
hlt
inc
pop
loope
and
aad
aam
adc
xchg
cmpsl
mov
ss
sub
ficoms
insb
xor
shl
xchg
xor
test
push
mov
push
dec
mov
or
std
pushl
mov
pop
push
and
decl
dec
aam
lret
cli
clc
out
dec
shrb
jmp
dec
dec
faddp
aas
adc
jne
rolb
outsl
test
insl
mov
stos
inc
js
sub
mov
pop
mov
into
pop
jge
pop
rol
inc
cs
push
dec
fcoml
sub
xor
cltd
mov
mov
add
adc
in
jo
mov
dec
dec
movsb
cwtl
adc
dec
mov
or
xor
add
push
push
jmp
push
sbb
inc
add
mov
sbb
and
add
mov
movl
test
cli
outsl
mov
incb
push
dec
aaa
cmp
mov
repnz
test
add
mov
push
call
insb
cld
roll
jl
iret
jmp
sti
sub
test
sarb
jg
out
adc
clc
push
aaa
ss
jo
aad
add
loopne
fdivrl
pop
nop
inc
xchg
push
hlt
pop
or
mov
push
xchg
xchg
dec
add
aad
pushf
lods
and
push
int3
mov
je
dec
jb
push
mov
pusha
ss
add
dec
sbb
dec
push
adc
test
pop
fwait
mov
and
add
or
jg
movhps
xor
in
jae
push
and
pushl
fidivl
dec
inc
repz
ret
push
js
and
outsl
insb
fucomip
adc
loop
sbb
mov
and
fdivr
dec
outsl
pop
inc
add
dec
push
ss
test
and
add
sub
mov
add
xchg
call
pop
stc
lcall
xor
das
pop
adc
stos
pop
add
movsb
inc
sbb
dec
mov
adc
pop
mov
adcb
mov
ret
mov
add
in
fs
flds
fs
pop
inc
jae
xor
lock
push
lcall
lock
aam
adc
mov
std
xor
adcb
push
gs
mov
pop
xlat
mov
rclb
addr16
pop
fidivl
or
xorb
dec
call
or
je
fstps
add
es
outsb
pop
ficoms
lahf
sbb
loopne
jae
dec
sub
cmp
sub
add
push
jno
add
lods
les
jge
ja
cmpl
mov
je
loope
imul
call
add
movzbl
jmp
and
cltd
test
mov
jno
fwait
push
xchg
jo
daa
adc
jge
dec
mov
inc
daa
incl
in
push
push
ret
lcall
in
jo
xorl
icebp
adc
enter
adcl
enter
cmpsb
das
test
sub
pop
adc
or
enter
adc
in
dec
mov
lods
aaa
add
mov
sub
jne
fildll
mov
div
push
push
mov
fmull
fstpl
xor
mov
xor
ror
jp
nop
sbb
rcrb
pop
orb
outsl
in
mov
movsb
sarb
mov
dec
jmp
adc
cmp
pop
sbb
adc
mov
hlt
sbb
inc
xor
pop
push
arpl
add
inc
movl
mov
push
lret
push
xor
add
mov
cmp
in
test
adc
jl
cmp
push
add
cwtl
or
pop
pusha
inc
sti
mov
aaa
inc
jb
test
jb
aaa
lock
push
sbb
mov
push
decb
jle
mov
add
push
jl
ret
mov
xor
pop
mov
rorl
jo
push
push
xor
sbb
pop
or
jmp
or
in
xchg
sbb
mov
inc
and
ret
inc
clc
mov
je
push
push
cld
pop
cltd
idiv
test
push
mov
sub
jmp
dec
leave
lea
cmp
jb
mov
mov
inc
dec
loope
and
and
in
jle
adc
sub
and
scas
xchg
in
sbb
push
mov
mov
enter
sbbb
into
js
sbb
mov
or
outsl
orl
sbb
sub
fiadds
lock
pop
clc
call
dec
mov
loope
mov
sub
xor
int3
sbb
add
fadds
std
out
pusha
xor
jge
push
test
and
mov
lock
inc
push
inc
mov
mov
nop
xchg
mov
push
xor
xchg
xchg
mov
pop
mov
adc
push
std
gs
lock
call
and
xor
mov
pop
sbb
mov
pop
inc
push
sub
les
pop
inc
adc
adc
test
pop
mov
std
pusha
jno
sbb
and
xor
push
push
dec
mov
xchg
pop
out
cmp
dec
jmp
sub
pushf
test
mov
add
sub
sti
orl
fwait
cmp
adc
pushf
cmp
pop
test
scas
inc
sub
jo
push
or
outsl
daa
cmp
mov
jns
sub
adc
mov
xchg
or
pop
push
xor
pop
jae
push
das
or
dec
cwtl
aaa
lods
pop
add
in
or
leave
sahf
pop
outsl
les
xor
jne
xor
rcll
pop
jns
ficomps
adc
out
loope
std
movl
mov
sbb
fsubr
test
mov
fs
mov
sbb
sub
xchg
push
inc
push
pop
je
int3
test
roll
xor
js
pop
adc
push
mov
mov
pop
pop
or
shrb
pushf
add
int
call
js
sti
lds
cmp
pop
imul
xor
pushf
das
mov
sahf
pop
sbb
adc
cwtl
dec
inc
mov
shll
xchg
hlt
push
mov
xchg
cltd
inc
pop
dec
negb
push
imul
call
adc
cli
xor
xor
jae
notb
idivl
xchg
mov
loope
adc
adc
xlat
in
inc
pusha
and
cmp
fdivr
adc
mov
adc
add
ljmp
call
mov
adc
adc
jnp
sub
sbb
int3
insb
push
loop
mov
sbb
and
pop
adc
jl
inc
in
je
rcll
cmpsl
or
push
test
mov
cmpl
mov
ljmp
cmp
sbb
and
mov
test
and
push
add
repz
sub
add
pusha
popf
adc
std
addr16
push
push
inc
lret
and
mov
sub
les
std
or
push
push
jns
aad
mov
sbb
pushf
movsb
int3
sbb
mov
mov
mov
fwait
or
push
filds
cmpb
xchg
mov
push
fld
dec
push
movsb
stos
sbb
sbb
mov
sbb
add
dec
insb
mov
imul
dec
mov
cmp
cmp
sahf
cwtl
in
stc
popf
and
jmp
icebp
pop
jns
nop
xchg
pop
pop
push
jmp
push
dec
push
pop
leave
or
mov
pop
xchg
mov
pop
jmp
push
sbb
mov
cld
fs
push
stc
jmp
pop
jnp
int3
fs
add
xor
push
lock
rolb
push
ficomps
out
pop
cmp
inc
push
push
xchg
hlt
inc
push
sbb
pop
cs
inc
jge
xor
pop
dec
jle
int3
dec
mov
pop
sbb
push
jno
outsl
sbb
shr
xor
cmpsl
das
mov
imul
cmpw
jne
pop
push
mov
pop
push
shlb
or
lods
scas
jae
ret
mov
inc
pusha
push
lea
jecxz
negb
xor
rcrb
pusha
adc
sbb
out
mov
push
jbe
xor
push
insb
les
addr16
jl
and
jbe
mov
adc
inc
sbb
cwtl
popf
rcr
jl
sahf
inc
push
inc
lret
adcb
cmp
jb
cmp
arpl
or
pop
pop
movb
lock
inc
dec
push
adc
call
cltd
mov
xchg
das
xchg
lock
mov
faddl
sub
mov
push
repz
lea
sbb
push
repz
pop
inc
lock
jg
rcrl
fistpll
xchg
shrb
jo
lahf
cmpsl
push
jae
fdiv
imul
sub
cmp
jne
jno
inc
aad
aam
int3
ja
imul
mov
imul
and
pushf
dec
mov
cmp
or
pop
add
push
leave
pop
sub
fidivs
int3
in
inc
add
inc
cmp
jae
jmp
jmp
outsb
rolb
sub
mov
in
and
adc
or
shr
and
mov
and
or
or
sbb
mov
ljmp
mov
jmp
inc
packsswb
adc
aas
pop
mov
pop
fisttps
adc
cmpsb
push
dec
shll
or
and
mov
in
movsl
lahf
cmc
pop
add
fdivr
andl
push
icebp
fcoms
cmp
xor
je
mov
in
mov
pop
ret
aas
cld
and
cmp
jne
jecxz
add
push
xlat
mov
js
fiadds
addl
aad
xlat
imul
push
xlat
pop
cmp
xor
xlat
jmp
pop
cmc
loopne
movb
cld
cmp
andb
add
push
pop
stc
add
daa
es
xor
mov
fs
add
or
inc
cmpb
adc
xchg
mov
test
mov
pop
divl
push
lea
inc
or
pop
dec
adc
pop
fsubl
or
pushl
mov
mov
adc
mov
out
sub
lods
popf
and
mov
push
sbb
negl
sbb
mov
int
call
mov
adc
hlt
jo
lret
js
xor
sub
rcrl
push
in
push
test
dec
xor
push
dec
inc
inc
in
ret
pop
std
das
mov
mov
adc
cmpb
cmpb
jo
cmpb
jbe
jge
iret
adc
jg
add
int3
xor
fildl
enter
jmp
xor
fwait
or
sub
out
xchg
xchg
adcb
ret
adc
int3
nop
das
iret
mov
mov
sub
or
dec
jo
push
adc
add
data16
fnstcw
repnz
mov
and
ret
mov
jmp
pop
adc
idivl
dec
push
je
testl
push
ror
andl
rclb
jmp
iret
jp
add
iret
mov
lahf
adc
mov
push
jo
cwtl
mov
sub
add
adcl
xor
jbe
pusha
sahf
in
fcoml
add
mov
sti
repz
inc
jns
xchg
repnz
xchg
cltd
pop
jge
sbb
inc
xorl
jae
je
imul
inc
adc
data16
push
call
or
sub
and
das
setge
inc
jmp
dec
fdiv
mov
lods
or
in
pop
inc
xor
cmp
jle
add
mov
mov
test
cld
mov
fcom
mov
cli
stc
lahf
mov
push
mov
push
loopne
or
push
shlb
test
add
add
jmp
sbb
repz
jo
shr
push
jno
push
mov
push
push
and
jl
jo
lret
xor
mov
das
sbb
or
loopne
popf
mov
mov
mov
mov
pop
addl
jl
dec
lods
mov
adc
push
rorb
cmc
xlat
mov
loop
icebp
or
push
and
push
xchg
outsl
sbb
incl
jns
add
push
les
test
jmp
data16
lcall
ds
leave
cmp
jbe
lea
in
sti
pop
movl
sub
pcmpeqw
cmpl
jae
mov
cmp
cmp
std
es
inc
mov
fldenv
pop
hlt
xor
push
mov
jbe
aas
fnstcw
je
fistpll
pop
ror
hlt
jmp
dec
or
mov
dec
jo
in
inc
mov
arpl
jb
call
dec
clc
int
out
fisubl
dec
and
shr
add
xor
jl
loop
or
mov
xchg
enter
adc
clc
mov
and
or
and
testb
les
push
nop
pushf
and
mov
cwtl
adc
jne
nop
and
inc
insb
fs
cmpb
and
cmp
cmp
stc
movsw
cmp
jns
jge
rcll
das
fs
aaa
gs
repz
mov
je
cmp
sbb
scas
sub
inc
mov
pop
aaa
or
fsts
pop
call
jbe
mov
fidivrl
push
cmp
sub
xchg
push
insb
xor
mov
and
push
mov
repz
mov
push
testb
and
sub
cltd
or
add
lods
lahf
lcall
push
xchg
jns
lea
jbe
adc
nop
mov
push
imulb
and
add
in
scas
shlb
mov
mov
lret
and
or
and
sub
and
jmp
imul
jne
or
push
or
inc
aad
pop
loopne
push
jl
mov
push
hlt
jo
adc
push
or
fldcw
or
adc
pop
inc
cmp
es
push
int3
or
mov
or
fdivs
inc
dec
push
pusha
addr16
dec
lods
rclb
add
dec
dec
xor
mov
push
test
add
movsb
fidivrl
outsl
decb
pop
cld
test
pop
je
jne
push
mov
push
xchg
dec
testb
inc
add
inc
or
cld
pop
insl
std
dec
dec
js
leave
pop
jge
or
sub
xor
sahf
cmp
enter
in
adc
and
xor
mov
rcrb
sbb
sbbb
bound
orl
popf
jnp
jmp
rcr
lods
push
xchg
sbb
jae
test
pop
rorl
or
sub
push
and
out
out
vzeroupper
mov
and
call
mov
inc
testl
sbb
pop
adc
jae
push
mov
adc
sbbl
ret
ficoms
mov
dec
imul
add
lds
push
xor
and
int3
mov
lcall
leave
test
jbe
lea
jae
or
jb
pop
jne
cmp
jae
adc
mov
sub
ret
pop
pop
jbe
jp
es
or
iret
adc
dec
pop
mov
xor
cmc
xlat
push
lahf
jg
hlt
push
xchg
pop
push
cmpsl
not
popf
inc
xchg
daa
pop
xor
lds
clc
in
enter
int3
sbb
cmp
sub
in
dec
cmp
pop
xor
lock
sub
ret
daa
hlt
into
adc
jl
cmp
cmp
mov
pusha
test
mov
xchg
push
lret
fisubrl
mov
mov
sub
mov
nopl
ret
cltd
loope
pop
pop
push
ret
add
mov
or
xor
push
dec
adcl
lock
jb
inc
sbb
xchg
inc
jge
and
icebp
jmp
jge
lea
push
add
jns
mov
adc
cld
add
pop
cmp
inc
imul
mov
cltd
test
inc
popa
push
jl
push
pop
pushf
movsb
sub
cmp
aad
or
sub
mov
xchg
lock
mov
mov
out
add
cmp
mov
sbb
and
adc
bound
mov
push
jb
loopne
mov
sti
out
add
int3
push
cmp
loope
and
cmp
sub
es
push
jnp
cmp
cwtl
pop
mov
mov
popf
xchg
js
lock
daa
pusha
or
cmp
cmpl
mov
mov
pcmpeqw
in
push
pop
mov
mov
je
mov
mov
jno
xchg
arpl
mov
js
xchg
addl
pop
jmp
sti
es
mov
sub
ljmp
dec
call
in
rolb
lock
jbe
cmp
and
cmpb
je
sbb
or
add
adc
push
scas
insl
sbb
sbb
dec
or
jg
lahf
decl
push
pushf
and
mov
rcr
mov
adc
xor
divb
jne
inc
movb
and
sub
imul
das
pop
inc
mov
clc
fincstp
inc
decl
inc
mov
nop
mov
iret
pop
test
or
push
jns
mov
daa
jmp
ret
adc
or
shll
inc
jle
pusha
cmp
sahf
aam
mov
sbb
inc
mov
cmp
cld
call
adc
pop
sub
popa
mov
inc
nop
in
push
sarb
adc
mov
je
les
cmp
shlb
popa
insb
dec
pop
adc
pop
stc
sbb
dec
sub
push
mov
inc
and
aad
xor
push
cmp
mov
jp
ficoms
push
shl
sub
cmp
push
out
sbb
and
or
aam
xor
mov
dec
out
xchg
push
outsl
push
mov
mov
pop
mov
sbb
cmp
and
test
das
mov
mov
xchg
mov
ret
insl
xchg
add
fldt
pop
popa
and
lods
xor
ja
xchg
sub
push
dec
adc
or
test
popa
orl
and
mov
add
pop
cmp
insl
push
mov
rclb
in
std
push
push
add
outsl
das
movb
pop
xchg
xchg
stos
mov
pusha
xchg
sbb
or
or
cmpsl
push
push
mov
add
imul
call
int
cmp
xchg
insb
vmaxsd
dec
jne
inc
push
xor
inc
insl
and
or
sub
out
or
add
rcrb
mov
leave
frstor
jmp
gs
mov
mov
enter
mov
cmp
xor
jecxz
add
sub
dec
mov
or
ja
pop
push
adc
mov
add
sbb
repnz
ljmp
cmpsb
and
cmpsl
dec
outsb
cmp
adc
or
dec
cmp
outsb
xchg
cmpsb
xor
cmpsb
jo
add
cs
inc
js
je
sbb
mov
loope
pop
vpcmpeqd
nop
push
repnz
stos
stos
xchg
jmp
ret
mov
push
pop
pop
jbe
add
loope
cmpsb
sbb
and
pop
push
or
or
rcrb
inc
shl
loope
leave
mov
cmp
xorb
mov
lcall
mov
arpl
sbb
cmp
enter
loopne
add
movsl
and
mov
mov
pop
xchg
fsubs
add
inc
push
xchg
daa
call
cmp
scas
pop
sahf
cltd
fldenv
and
xor
sbb
and
add
movsb
addl
adc
xlat
inc
xor
mov
arpl
push
adc
or
sub
or
lods
fs
es
lcall
add
mov
pop
or
insb
cmp
ljmp
jge
mov
outsb
dec
ret
or
jmp
hlt
fs
mov
push
es
rolb
test
xchg
push
fldenv
clc
adc
xor
jl
or
and
ljmp
push
push
cmpb
jne
movb
push
inc
xchg
mov
rcl
or
inc
pusha
xchg
sub
fsub
sbb
add
sbb
mov
inc
fnstenv
jecxz
jo
jg
es
mov
callw
repnz
xchg
and
and
xchg
sbb
lock
imul
cs
les
sub
lds
mov
push
es
push
movsl
fsts
pop
mov
call
sub
rorl
or
rolb
pushf
sahf
sti
jne
mov
inc
cld
shrl
mov
push
insb
fcoml
mov
dec
sub
leave
inc
cmp
xlat
xchg
xchg
enter
ja
and
pop
adc
pop
hlt
adc
icebp
je
das
popf
aam
arpl
fcoml
pop
xchg
popa
iret
pop
enter
and
mov
pusha
or
dec
mov
adc
inc
sbb
or
test
or
cmp
ja
or
aam
add
shll
aam
mov
fmull
cmp
orb
rcr
je
dec
fadd
jecxz
adc
aaa
out
xchg
inc
das
xchg
in
jmp
out
and
pop
xchg
push
fildll
xchg
mov
jb
dec
fsubrs
add
inc
unpckhps
neg
sbb
hlt
and
jnp
sbb
or
std
push
xchg
inc
adc
iret
ret
mov
xchg
add
push
push
and
mov
jmp
test
popf
mov
dec
divl
shr
push
add
adc
test
xchg
pop
sbb
movsb
cmp
out
or
add
sahf
inc
add
add
adc
mov
add
or
mov
mov
xchg
pop
xor
gs
lock
pop
lods
loopne
cs
jns
pusha
push
xor
adc
sbb
add
pop
pop
cmp
add
push
imul
cwtl
xchg
iret
and
nop
mov
sbb
divb
ja
ss
dec
gs
push
mov
mov
cmpl
pop
aaa
jb
cld
fs
and
arpl
pop
mov
or
fmull
fisttps
xchg
and
ficomps
and
add
add
mov
sub
pop
push
rep
fwait
push
dec
push
cmc
mov
int3
mov
jno
inc
add
jnp
jg
jne
push
arpl
insl
sub
and
les
gs
in
and
ss
push
pushf
fprem
fs
mov
je
test
popa
add
mov
mov
test
cmp
adc
mov
sub
pop
cld
test
je
push
cmp
call
bound
outsl
jle
cmp
jle
or
push
clc
jge
movl
das
push
push
test
push
add
nop
arpl
cmp
add
mov
cmp
add
mov
sub
add
aam
dec
hlt
jecxz
mov
andb
mov
and
das
outsl
and
mov
mov
arpl
jmp
xchg
or
cs
pusha
mov
inc
int
test
push
cmp
je
or
repnz
je
add
sbb
mov
add
pop
add
cmp
sub
jge
sub
jl
inc
pusha
adc
dec
xchg
xchg
pop
loopne
or
shrl
daa
push
ret
sub
mov
inc
aad
xor
adc
mov
push
xchg
out
pop
fildll
sbb
pop
daa
daa
mov
push
dec
xor
mov
sub
mov
xchg
sub
sbb
sbb
cltd
popf
fcompl
in
rcrb
in
cmp
sbb
je
clc
sahf
imul
pop
xor
push
cs
sub
out
out
pop
mov
paddsb
cwtl
daa
movl
test
sub
ljmp
adc
add
mov
rolb
orl
mov
xor
jb
fs
mov
dec
jo
incl
xor
jl
mov
mov
fistpll
shl
mov
add
test
clc
or
add
daa
out
leave
cld
lock
jns
shl
inc
mov
push
sbb
adc
cld
sbb
pop
data16
mov
daa
fisttpl
lods
mov
data16
and
mov
push
js
xchg
xchg
or
cmp
pushf
sbb
mov
mov
push
cmp
daa
pop
cmp
pushf
add
pop
mov
inc
adc
outsb
lahf
inc
mov
pushf
mov
cmp
or
mov
mov
sbb
mov
pushf
mov
leave
inc
sahf
sub
and
sbb
mov
xor
pop
enter
mov
int3
push
or
sbb
pop
add
dec
repnz
push
js
pop
mov
in
in
pop
mov
inc
sbb
leave
enter
cmp
enter
or
mov
idiv
mov
js
sbb
mov
out
xchg
dec
les
inc
outsl
jns
addr16
cmp
pusha
ds
leave
mov
mov
or
in
cmp
int
mov
add
enter
mov
aam
xor
jb
jb
sub
xor
js
insb
cmp
sbb
mov
fs
pop
dec
sbb
jb
fmuls
pushf
int3
es
mov
xorl
mov
insb
and
xor
cltd
sbb
adcb
fs
xchg
or
or
sahf
in
pop
adc
pop
lock
pop
dec
xchg
xchg
xchg
rclb
leave
enter
aam
mov
leave
enter
mov
call
mov
push
xchg
pop
add
dec
mov
sbb
sbb
ss
sbb
mov
fxch
insb
fdivs
xchg
xchg
xchg
xchg
jo
xor
sub
je
jo
imul
jp
or
push
js
fs
inc
mov
daa
pop
sbb
inc
mov
in
mov
lock
repnz
movsb
mov
add
jns
enter
or
lods
pushf
add
add
enter
mov
push
mov
or
push
iret
repnz
xor
clc
je
cmp
mov
mov
add
dec
sbb
push
lock
fildl
push
xchg
loopne
mov
in
test
sbb
pop
mov
jl
test
and
leave
dec
fs
bnd
sub
and
in
and
inc
mov
inc
xor
sub
or
sbb
or
cltd
sbb
sarb
sbb
sbb
jb
jb
add
cwtl
cwtl
adc
xor
xchg
aaa
loopne
or
leave
leave
enter
mov
jns
mov
mov
shl
nop
sub
xchg
adc
sub
enter
xor
and
xor
mov
enter
push
xchg
test
and
enter
push
loope
mov
fcomps
rol
xor
cwtl
fdivs
enter
sarb
inc
push
ret
inc
lfs
in
xchg
mov
movsb
movsb
xchg
push
sbb
fs
dec
mov
mov
popa
cmp
jb
insb
push
mov
add
hlt
mov
or
xor
insb
sarb
inc
fistpll
mov
dec
push
push
sahf
daa
pmulhuw
mov
mov
enter
mov
pop
shlb
and
pop
mov
pop
ds
aad
add
or
loop
adc
xor
push
sub
mov
mov
enter
xor
and
data16
dec
push
and
mov
leave
and
or
push
jb
or
adc
pop
xor
sbb
and
and
push
jb
and
xchg
pop
xor
xor
and
cmp
leave
and
adc
leave
and
dec
clc
mov
push
push
loopne
push
cmp
pop
dec
xchg
push
pop
roll
adc
fadds
push
sbb
cmpsl
sbbl
jmp
je
test
es
and
cwtl
or
mov
xchg
out
test
je
fiaddl
popf
call
push
push
or
dec
push
orb
test
and
test
jp
push
mov
xor
dec
and
inc
jns
xchg
or
mov
clc
mov
lods
push
roll
jge
jne
push
xchg
lods
mov
sbb
movsl
push
push
mov
cmp
je
or
ficoms
xor
inc
cmp
jl
and
sub
mov
repz
cmpb
jne
cmpb
dec
or
das
ss
cmp
cmovae
sarb
insb
faddl
je
call
andl
mov
cld
mov
stos
lea
jl
repz
adc
decl
fisubl
dec
and
mov
dec
cmp
jle
pop
jg
xchg
push
ret
movsbl
mov
sub
jp
pop
movl
ljmp
add
adc
shl
out
cmp
loop
mov
jne
into
popf
enter
cmp
out
out
dec
xchg
popf
cld
ret
or
scas
push
fstps
pop
mov
mov
sbb
sub
arpl
mov
add
add
jge
xchg
lea
cltd
rclb
outsl
ljmp
clc
cltd
lahf
push
shll
dec
jmp
movb
xchg
and
xor
pop
gs
sub
push
popl
movlps
dec
jg
int
mov
cmp
jg
or
jne
inc
xchg
fbstp
dec
dec
lea
cmp
je
and
xlat
mov
pop
push
push
mov
mov
mov
add
mov
out
sub
and
loop
ret
sbb
add
add
inc
daa
add
nop
lock
test
mov
ret
push
mov
lahf
ja
xor
je
jge
into
jnp
adc
subb
insl
pop
sti
push
or
mov
js
popf
fcoms
in
inc
test
aad
jl
dec
pop
sbb
sub
es
insl
lcall
sbb
out
in
cmp
out
xor
xchg
add
xor
lea
mov
pop
addr16
aas
test
xor
clc
into
dec
pop
sbb
adc
mov
lea
jl
add
sub
add
outsb
rolb
mov
adc
pop
sbb
mov
hlt
push
sarl
cmpsl
movb
mov
and
xchg
cmp
jbe
je
pop
jne
int3
rcll
insb
inc
fwait
pop
in
add
and
ficoml
std
int3
mov
cwtl
add
jbe
js
jo
test
and
shl
cmpsl
mov
xor
mov
and
test
push
push
jge
mov
sub
sbb
insb
gs
lods
clc
push
inc
dec
lods
sbb
repz
adc
dec
mov
lods
nop
inc
sbb
xlat
push
in
jne
adc
cld
ficompl
cmpsl
insl
aaa
insb
sbb
push
lds
inc
push
push
dec
push
pop
xor
push
ret
imul
dec
dec
lea
aad
out
cwtl
pop
addr16
ds
shlb
jmp
fsubl
mov
mov
jmp
push
cmpsl
outsb
adc
cwtl
cmp
cmp
loopne
mov
fcmovu
data16
int3
mov
bound
mov
dec
dec
inc
xchg
and
js
fidivrs
jne
inc
fsubr
jne
incl
adc
fsubrs
sbb
repz
dec
mov
pop
sub
add
aaa
or
xor
adc
jmp
js
ja
sbb
ret
addl
or
sbb
cmp
xchg
xchg
insb
sar
ja
je
mov
sub
out
idiv
jmp
das
add
adc
and
test
mov
inc
sbb
ret
mov
adc
dec
es
xor
aam
sbb
scas
orl
lods
sbb
adc
pushf
push
ror
in
push
push
push
push
sarb
insl
je
lea
adc
movzbl
mov
mov
adc
aas
aas
aas
mov
or
push
sub
and
lahf
lahf
lahf
fwait
mov
push
add
fwait
sub
mov
xor
adc
daa
enter
imul
dec
pop
mov
jne
popf
add
add
add
push
test
fisttps
add
add
or
jno
mov
dec
adc
cmp
ret
push
mov
push
faddl
xchg
push
sub
shl
adc
and
cmp
and
js
mov
testl
inc
add
pushf
mov
jge
in
xchg
xor
ret
fadd
lea
jb
ret
mov
push
test
popa
adc
ss
push
add
imul
or
ret
cld
rclb
inc
add
add
mov
in
loopne
aam
adc
mov
cmp
pop
pop
and
nop
add
sub
mov
push
jmp
pop
push
push
lds
cld
dec
cmpl
cmp
push
pop
cld
jno
add
push
pop
add
push
std
in
mov
add
push
mov
ret
xchg
push
dec
fwait
push
dec
sahf
cmp
jne
arpl
pop
in
push
pop
push
and
inc
push
sbb
aaa
cmp
pop
ret
sub
pop
push
xor
out
push
xor
inc
mov
lock
dec
mov
hlt
pop
add
xlat
testb
pop
addb
push
orb
out
decb
mov
xor
and
out
mov
pop
and
sub
lahf
add
and
sub
dec
xchg
enter
and
loope
lea
and
mov
and
add
sub
adc
fsubs
insb
push
sahf
add
lahf
dec
push
add
rclb
mov
mov
lea
sub
adc
push
push
xor
or
aam
and
mov
or
mov
dec
add
loopne
dec
push
push
pop
push
adc
adc
lcall
clc
lock
or
push
outsl
outsb
mov
or
lret
mov
das
or
cmp
mov
insl
push
shrl
and
pop
les
shr
mov
lahf
mov
jo
jbe
adc
inc
fcoms
fbstp
jg
add
in
push
cmp
xor
ret
lods
shr
rorl
push
inc
pusha
imul
movsl
sete
hlt
lret
js
fstpt
fbstp
xchg
adc
lods
pop
sub
je
mov
push
jo
pop
xor
scas
xchg
and
pop
pop
cmp
push
xorl
adc
add
mov
or
repnz
mov
add
les
dec
fwait
push
in
fdivrs
inc
inc
dec
dec
enter
les
add
arpl
ja
fdivrl
flds
mov
call
dec
xchg
dec
in
push
lahf
pop
inc
mov
fcoml
lea
les
sbb
jb
add
sarl
leave
inc
into
add
cli
push
jmp
mov
push
mov
sahf
pop
push
ret
insl
add
add
scas
outsl
add
mov
xor
sbb
shlb
gs
js
mov
aaa
push
test
jb
or
dec
ret
pushl
or
xor
push
or
lds
dec
push
cltd
add
mov
leave
fiaddl
add
or
mov
lds
fmuls
leave
and
movsb
sbb
push
leave
and
sbbb
push
leave
and
and
push
xor
leave
and
sub
and
and
in
push
leave
or
les
fs
test
and
daa
stos
dec
int3
scas
xchg
popa
push
inc
push
mov
inc
movsb
dec
pop
pop
jmp
push
or
ret
push
test
ret
dec
mov
popf
adc
mov
adc
pop
add
fwait
mov
movsl
ret
push
sbb
and
cmpsb
nop
rolb
mov
pop
xor
xor
mov
cwtl
fwait
hlt
je
cmp
test
ljmp
jnp
insb
loop
test
mov
mov
jbe
das
jno
sti
jno
pushl
xchg
aas
cltd
ret
mov
movl
jb
jmp
stc
cmp
ja
push
je
lcall
inc
nop
push
cmpsb
cmp
rcll
iret
pop
test
aad
in
inc
pop
add
mov
xchg
cmp
ja
je
cld
lcall
xor
clc
xor
clc
lahf
pop
es
mulb
leave
mov
push
sbb
dec
cld
enter
clc
pop
sarl
enter
dec
imul
js
dec
test
sbbb
push
xor
mov
outsb
jg
xor
lods
adc
push
dec
adcl
iret
iret
out
test
inc
dec
push
movsb
ds
std
fisubrs
pop
je
or
out
shrl
or
xbegin
cs
mov
les
push
data16
repnz
add
dec
or
lea
mov
popf
xor
add
pop
into
rolb
cld
ja
push
mov
mov
pop
dec
sti
xchg
inc
sbb
call
out
pushf
mov
dec
jnp
xorl
or
jl
pop
mov
push
ret
leave
add
inc
pusha
sub
imul
add
mov
scas
icebp
lods
mov
or
je
call
mov
xor
xchg
jno
xor
cs
test
enter
and
pop
xchg
xor
xchg
and
outsb
in
dec
ret
scas
js
cmp
insl
mov
push
jmp
xchg
and
mov
push
add
add
inc
fstl
mov
jmp
push
and
pushf
lret
sbb
add
add
cmc
and
and
repz
jmp
and
jbe
lea
adc
std
inc
add
cmp
stos
rcl
adc
idiv
xchg
imul
sub
and
loop
mov
repz
mov
sub
or
lock
add
loope
adc
idiv
dec
sbb
mov
push
shr
mov
neg
lea
outsl
inc
cmp
in
inc
dec
jne
pop
jmp
and
test
pop
je
xchg
or
enter
jmp
adc
enter
call
inc
scas
push
lret
add
fcoml
add
ret
push
daa
or
sbb
sarb
sbb
adc
repnz
push
cmpl
pop
sbb
in
sarl
lret
aaa
icebp
mov
mov
mov
push
jmp
test
sbb
push
adc
or
call
fadds
mov
les
jge
jge
or
sarb
shll
pop
fwait
pop
js
jne
push
fsts
xchg
mov
jl
sbb
add
fs
sbb
push
push
adc
pop
mov
insl
push
push
subl
push
decl
pusha
xor
aad
jne
cs
loop
arpl
push
push
int3
iret
subl
int3
and
int
mov
mov
loopne
sbb
dec
sbb
adc
or
fwait
aaa
sbb
cmp
out
fsub
cmp
push
test
hlt
adc
das
add
xchg
xor
jl
shlb
xchg
jge
jle
push
jl
mov
xchg
xor
add
or
push
push
push
pop
pop
add
cmp
aam
ret
jecxz
add
call
inc
test
enter
mov
mov
sub
popl
cmp
mov
xor
scas
sbb
adc
add
dec
rcl
loopne
xchg
mov
sub
clc
add
mov
push
int3
and
adcb
pusha
pushf
mov
mov
shlb
push
repnz
loop
mov
adc
adc
insb
mov
and
mov
enter
sti
fiaddl
pop
pop
cltd
out
mov
js
push
push
push
push
negb
rclb
or
movb
sub
or
add
add
adc
mov
shrb
add
fldcw
call
test
mov
fmul
fldenv
mov
and
dec
insb
xchg
mov
lcall
or
filds
jb
xchg
dec
mov
adc
mov
mov
or
fstpt
stc
jg
cmp
add
adc
andl
push
mov
repz
leave
sub
add
sbb
stos
in
adc
xor
and
add
xor
cwtl
mov
push
dec
lret
or
dec
stos
sbb
mov
pushf
inc
or
pop
fs
jle
hlt
insb
push
xor
das
jae
cmp
xor
stos
std
pop
push
jbe
or
mov
pop
gs
das
sub
test
fwait
sbb
push
push
out
stos
movsb
cmpsl
loope
push
push
or
sub
mov
push
xor
xor
andb
addb
adc
push
adc
push
mov
push
mov
and
xchg
cmp
add
pop
cld
aaa
sbb
dec
sub
or
mov
lock
sbb
xor
adc
dec
shrb
ret
in
das
mov
mov
adcl
adc
shrb
clc
stc
inc
nop
or
add
mov
adcb
mov
jmp
and
sbb
loope
push
xor
jne
out
add
insl
sbb
mov
je
aam
pop
aas
sbb
popf
mov
xor
inc
hlt
gs
cmp
inc
mov
lret
call
inc
pushf
dec
jp
mov
or
sbb
ret
cmc
hlt
add
or
mov
cltd
popa
mov
or
adc
adc
push
pop
fcmovb
nop
add
push
xchg
cmp
pop
scas
mov
adc
adc
cmpsb
mov
adc
pushf
or
inc
icebp
loope
fbld
pop
xor
fs
mov
jne
and
dec
loope
adc
jae
inc
mov
nop
cmpsl
je
iret
shrb
push
inc
stos
cmp
push
fwait
or
cmp
orb
in
or
mov
mov
push
mov
add
xor
pop
out
ss
mov
add
cltd
inc
sub
cld
ret
inc
and
xchg
xor
mov
push
dec
enter
std
cmp
lea
lds
push
test
cmpsb
shlb
push
adc
les
je
jo
or
mov
and
push
ds
push
cwtl
xchg
dec
inc
inc
cmp
jb
mov
pop
sbb
lock
cmp
test
sbb
or
je
push
in
push
mov
inc
xchg
sub
je
or
add
pop
add
cmp
fcomps
jmp
and
adc
divb
inc
sbb
xlat
mov
in
pushf
pop
push
push
pushf
addb
fxch
cs
jecxz
xchg
mov
enter
inc
xchg
jo
adc
lea
rclb
fdiv
shrb
in
push
xchg
mov
sub
dec
mov
fcoms
shrl
pop
bound
fsts
fucomip
or
mov
jno
push
lret
cmpl
inc
mov
sbb
aad
fldenv
sub
fnstcw
cmp
je
pop
cmp
xrelease
push
xor
sbb
adc
int
pop
ret
mov
test
and
and
add
push
insl
sbb
or
jbe
inc
sti
pop
or
cmpsb
in
jg
inc
mov
enter
pop
sets
mov
aad
cld
sahf
pop
aaa
sub
in
pavgw
sbb
adcl
push
sub
cmp
cmpb
sub
pop
mov
mov
xchg
cmpb
aas
je
decl
popf
or
and
jge
push
jl
or
xchg
cmp
je
outsl
gs
push
and
inc
repz
cmp
leave
leave
test
pusha
lock
addb
add
add
mov
enter
add
jo
mov
inc
in
add
mov
inc
mov
add
imul
push
bnd
aam
or
in
pushl
mov
leave
mov
stc
int3
out
roll
push
add
imul
add
jae
adc
test
mov
or
inc
or
filds
hlt
and
push
cs
mov
jo
jl
push
push
push
hlt
dec
and
sbb
adc
mov
js
xor
push
mov
or
or
add
jecxz
mov
dec
fdiv
add
mov
and
jb
lods
outsb
adc
inc
loope
mov
jl
sub
mov
xchg
push
mov
imul
pusha
ret
adc
jne
xor
inc
pusha
clc
sub
push
add
cmpsl
je
sbb
stos
xorb
mov
loope
mov
jmp
mov
jge
jo
imul
pop
inc
fsubrs
add
and
jle
popf
cmp
sarb
pop
and
mov
shl
and
inc
sub
fs
lret
leave
lcall
mov
std
je
or
je
daa
xchg
mov
inc
fdivrp
adc
add
fistpll
enter
mov
lock
int3
out
mov
sub
clc
push
loopne
fsubs
popf
xor
push
sub
sub
cld
and
or
cs
sbb
idivb
das
or
mov
mov
ss
jecxz
push
lock
dec
sbb
jle
int3
notb
push
sub
popa
sub
push
push
out
dec
test
jp
xor
mov
xor
mov
push
push
inc
pop
push
aas
loope
popf
loopne
pop
pop
lock
jne
mov
arpl
lret
mov
insb
ja
add
adc
or
pop
mov
dec
cmp
cmpb
jne
cmp
inc
jge
mov
add
pop
add
dec
xor
dec
sub
cmp
jge
cmp
sar
mov
push
or
sbb
push
add
sub
and
movsb
add
aam
push
jne
and
in
jle
or
jns
push
inc
or
push
or
jbe
cmp
mov
dec
addl
jg
rdtscp
lods
cld
add
dec
pop
inc
inc
cs
clc
xor
sub
cmp
push
or
sahf
adc
adc
or
cmp
lret
jo
push
shll
lea
push
mov
xor
cs
into
sbb
scas
ret
mov
hlt
lods
mov
inc
dec
add
imul
jne
jns
enter
xor
dec
or
inc
sub
cmp
adc
and
test
or
jl
int
pop
js
pop
fst
and
cmp
and
add
mov
addb
lods
xor
pop
jb
sub
pop
shll
dec
sarl
into
push
or
push
mov
pop
filds
dec
and
shll
add
inc
scas
xchg
sub
cmp
push
push
je
fstpt
mull
and
push
aas
inc
outsb
xchg
sub
push
jne
mov
xor
sub
je
movsl
cmpsb
push
dec
sbb
lahf
xor
imul
xchg
mov
xor
cmp
je
xor
je
outsb
aad
inc
add
and
jl
jmp
dec
or
jg
lods
sub
cmp
pop
ja
cmp
out
xor
lcall
push
ret
inc
sti
xchg
ret
or
nop
push
enter
cmc
or
inc
inc
stos
inc
xor
std
pop
pop
xor
inc
push
sub
mov
jl
mov
add
lods
mov
cmp
sub
xor
cmp
sbb
lahf
push
subb
mov
sbbl
sub
mov
mov
xor
addr16
xor
mov
cmp
sahf
cmp
ret
sub
or
es
push
in
adc
push
jb
xchg
dec
shrl
add
dec
xor
pusha
inc
xlat
cmp
mov
adc
pop
pop
mov
lock
mov
lret
jle
out
mull
adc
add
lret
ds
dec
add
aad
mov
add
add
clc
loope
sbb
sbb
popa
lods
jno
nop
addr16
adc
pop
loopne
scas
clc
or
adc
in
or
sbb
cwtl
mov
xor
adc
and
adc
sbb
jg
insb
repnz
or
add
ret
cmp
pop
pop
dec
add
les
mov
or
pop
and
inc
loope
pushf
and
adc
shrl
pop
sub
mov
bound
xchg
or
cmpb
je
add
fstpl
xchg
mov
testb
cs
fldl2t
jnp
adc
test
test
add
aaa
xor
jecxz
cmpb
je
mov
or
in
cmp
or
push
adc
test
push
loopne
mov
test
cmp
xchg
sbb
xchg
iret
nop
and
adc
imul
xor
fildll
enter
ljmp
in
les
add
ficoml
push
fwait
loopne
fpatan
dec
add
mov
shl
loopne
sub
fists
mov
add
pop
pop
xorb
je
xlat
stc
mov
sarb
addr16
add
ret
inc
ficoms
out
sbb
add
or
rcr
fiadds
or
lea
mov
cmp
fcoml
mov
lods
xchg
add
jge
xchg
add
test
push
lods
nop
add
or
nop
je
dec
cmp
inc
das
xlat
push
divb
xchg
push
xor
lock
outsb
sbb
stc
ja
xchg
daa
sub
sub
adc
sti
imul
fists
mov
outsl
mov
repz
push
out
roll
imul
or
fistpl
pop
mov
loopne
jo
popf
push
ret
inc
xor
lcall
jbe
lds
and
mov
je
mov
negl
lea
hlt
pop
pop
dec
and
jo
hlt
and
aaa
xchg
pop
cmp
or
insl
xorl
pop
push
sti
sub
mov
addr16
push
sbb
decl
subl
jnp
push
sub
sarl
clc
jne
mov
xchg
test
mov
lahf
adc
or
mov
stos
jno
push
xchg
and
aad
pop
and
and
mov
imul
sbb
cmpl
mov
jo
loope
ss
lahf
jmp
lods
popa
and
pop
test
fisubl
cmp
push
adc
in
inc
dec
stos
icebp
daa
and
sbb
dec
pop
jo
int
push
add
out
ret
divb
jl
adc
jle
push
dec
dec
insb
popa
in
mov
pop
mov
sti
mov
mov
jmp
insb
pop
cltd
push
cmp
mov
inc
popa
pcmpeqd
or
sub
add
mov
xchg
and
push
inc
test
test
push
add
xlat
xor
les
cltd
inc
nopl
mov
push
push
push
mov
or
sbb
iret
push
clc
cmovge
pop
jne
mov
mov
add
mov
mov
sub
mov
jbe
cmpsl
sub
xor
iret
push
lods
ja
pop
sub
test
outsb
push
imul
pop
enter
sbb
jb
iret
xor
sbb
or
and
pop
or
repnz
add
fs
in
fldcw
addb
in
push
movsl
cmp
and
mov
mov
mov
movsb
sbb
cwtl
mov
adcb
jo
inc
jns,pn
pop
or
mov
cmp
push
jns
and
push
jns
add
push
nop
xchg
inc
in
incl
adc
imul
push
enter
lds
sub
mov
lods
sbb
fmul
ja
stc
pop
in
pusha
xchg
sbb
mov
mov
pusha
or
mov
inc
pop
rorl
inc
idivb
mov
in
xchg
xchg
jno
pop
enter
sub
and
adc
dec
or
or
mov
sbb
nop
add
decb
adc
mov
xorl
cmp
lods
or
cmp
or
and
sbb
xchg
loop
mov
mov
cmpsl
cwtl
jb
inc
cs
pop
nop
mov
push
inc
mov
pop
enter
jl
inc
nop
xchg
or
mov
xchg
or
mov
sbb
xor
iret
testl
sahf
pop
mov
mov
push
jno
mov
fs
xor
inc
sub
nop
xchg
or
or
sbb
adc
or
or
mov
cld
std
lret
add
xchg
mov
std
iret
pop
std
dec
insb
xchg
push
xor
std
fcoms
sbb
mov
nop
sbb
xor
adc
pop
rcll
xchg
lea
jb
inc
push
mov
xorl
andl
fnstsw
testb
sub
mov
enter
aas
sub
mov
dec
js
nop
xchg
or
and
repnz
and
xor
push
addb
and
out
cmp
insb
cmp
iret
or
mov
adc
in
and
cmp
arpl
movsl
ret
xor
hlt
cld
pop
aam
xlat
repnz
clc
sbb
adc
fildl
add
in
cld
stc
shrl
xchg
aad
cld
enter
cmp
sub
aam
xor
and
jno
in
pop
insb
push
add
int3
jne
or
and
sub
xor
cs
test
xor
fisttps
mov
mov
lods
mov
xor
test
in
in
xchg
sub
mov
daa
das
fs
cmp
jl
nop
test
and
xchg
pop
xor
add
inc
push
mov
popa
mov
in
test
nop
insb
dec
sub
enter
inc
dec
pop
enter
push
nop
or
in
inc
add
daa
das
fs
in
das
cmp
test
jnp
fs
sub
sub
inc
dec
pop
sti
cs
sub
and
sbb
sbbl
in
test
lahf
sub
mov
add
or
and
clc
sti
pop
hlt
cs
test
mov
loopne
jb
inc
repnz
test
pop
sub
ss
sub
add
mulb
pop
jg
or
xor
xor
jl
test
sti
icebp
add
sti
cmp
adc
aad
add
test
mov
adc
xor
cltd
inc
cs
xor
inc
xchg
adc
adc
jne
mov
add
sti
sti
fcmovnb
out
aaa
cltd
push
sti
call
pop
enter
inc
fiadds
add
jb
or
test
psubd
add
pop
leave
sahf
je
and
cli
adc
xor
test
xchg
lock
cli
cmp
and
mov
sub
pop
dec
inc
vpsubw
fidivrl
push
sub
and
pop
or
inc
jb
ret
or
movsb
bound
jb
and
nop
mov
inc
cli
jns
add
adc
popf
xor
push
or
popa
aas
and
or
cmpsb
cwtl
mov
mov
pop
jl
push
ljmp
loope
stc
ljmp
cmp
movsb
test
int3
jp
icebp
pop
or
and
mov
movsb
dec
pusha
in
pop
stc
inc
or
out
cmp
or
js
or
and
test
fadds
sbb
fisubrs
ficoms
jmp
das
subb
je,pn
jmp
jae
xchg
push
sub
adc
in
sbb
sbb
mov
test
insb
push
or
pop
sub
popf
cmp
adc
es
pop
and
xorb
out
test
mov
dec
xor
pusha
ret
scas
std
inc
fsts
xchg
inc
movsb
enter
sbb
xor
adc
or
or
adc
lock
jl
cmp
jo
adc
pop
repnz
push
cmp
ja
or
psrlw
inc
mov
xchg
add
or
icebp
inc
and
cmp
dec
push
enter
clc
add
pop
enter
in
and
dec
test
and
cmp
mov
cltd
loop
lcall
cwtl
sub
nop
nop
icebp
and
test
sbbl
js
or
jns
pop
je
nop
inc
cs
pop
push
inc
pusha
ret
and
jb
stos
push
jns
sbbl
sbb
dec
jne
mov
cmp
sbb
inc
push
cmp
xor
or
jns
andl
and
fs
or
jb
daa
adc
or
in
test
add
cld
negl
clc
or
in
inc
in
sbbl
pop
call
jns
lods
push
fsubl
das
fs
xchg
sarb
enter
and
aas
js
bound
xchg
or
rclb
push
xor
cmp
pop
adc
and
mov
sub
lds
mov
and
jb
inc
seto
inc
dec
pop
enter
test
or
in
js
or
jo
fs
inc
dec
pop
fmuls
pusha
rorl
mov
loopne
pop
pop
or
or
ja
sub
enter
push
inc
or
in
flds
das
fs
ret
add
and
xchg
pop
xor
inc
sbb
add
mov
into
aam
jo
fs
or
icebp
add
push
jmp
or
sbb
shlb
lds
jl
xor
sbb
xchg
jle
push
rcrb
adc
sbb
in
xorb
int3
movsl
mov
lock
ret
stos
fadds
fwait
inc
inc
call
mov
sbb
sbb
sub
ljmp
push
mov
mov
add
push
rep
xchg
fcoms
dec
rorb
mov
je
jbe
out
add
push
cwtl
idivb
xor
outsb
mov
addb
mov
int
sbb
jp
rcrb
pop
pop
in
cmp
insb
icebp
movsl
and
jp
fwait
and
icebp
xlat
imul
push
add
adc
arpl
out
xor
xchg
push
inc
repz
in
hlt
pop
adc
nop
mov
js
rorb
xchg
fiaddl
test
xchg
xor
call
mov
adc
movsb
pop
mov
fs
jg
or
xor
fadds
or
pop
sub
add
and
push
push
das
add
mov
cmc
or
pop
mov
mov
test
ja
mov
inc
dec
shr
jmp
out
lea
clc
pop
mov
loopne
sub
lods
sarb
add
stc
jg
test
push
pop
jnp
push
call
cmc
mov
or
int3
or
push
les
sub
cmp
sbb
mov
mov
lahf
jle
push
sub
ret
and
fmull
mov
or
push
mov
push
cmpsl
jo
test
sub
jo
loope
insl
inc
cmp
add
pop
jp
push
popa
or
and
test
push
repnz
bound
mov
nop
dec
jle
push
mov
cld
clc
xor
xor
repnz
push
add
mov
xor
addr16
lret
repz
sbb
filds
std
cld
cld
inc
push
add
insb
sub
xchg
sbb
in
dec
arpl
xchg
pop
or
sbb
jae
inc
dec
jb
mov
test
sbb
clc
cld
and
dec
out
in
leave
jb
cmp
cld
add
xor
shlb
dec
test
fidivl
imul
or
je
mov
stos
dec
or
aam
repz
mov
sbb
orps
xchg
rcr
mov
fcompl
daa
bound
sub
add
xchg
leave
push
sub
xchg
dec
out
repz
mov
insb
sbb
add
pop
rcll
cmp
push
sub
shlb
stos
mov
mov
mov
inc
roll
loope
out
jae
push
pop
adc
divl
jbe
lea
dec
cmp
push
fcomp
jbe
push
bound
testl
sub
mov
cld
mov
xorl
incl
mov
imul
fucomip
sbb
inc
enter
cmp
mov
ja
or
adc
jmp
aas
and
pop
sti
inc
xor
fs
js
push
push
cmp
add
mov
js
mov
mov
fisubrl
mov
mov
movb
les
jbe
mulb
or
and
mov
mov
inc
sub
lock
je
sub
xor
ficompl
and
mov
dec
ja
mov
mov
jle
push
movb
ss
mov
incb
icebp
movsbl
cmp
jl
sbb
ret
mov
xorb
sbb
and
test
dec
shll
je
rorl
loope
out
subl
add
cmpb
jne
push
jmp
mov
adc
fldt
iret
or
add
repz
jns
dec
fildll
lea
roll
adc
addl
mov
rclb
insl
lcall
mov
add
cwtl
fsubrs
fs
fdivrl
sub
dec
mov
lock
add
rclb
adc
push
les
loop
ret
add
lods
adc
iret
add
xchg
fistl
mov
repnz
sbb
dec
cld
and
sbb
xor
rcll
fiadds
mov
dec
lods
jle
imul
mov
aaa
sub
or
jns
inc
enter
add
repnz
std
sub
and
orb
push
stc
mov
and
lds
push
push
in
enter
sti
orb
push
jge
jl
or
cld
cmp
inc
dec
jae
cld
sbb
adc
mov
pop
mov
std
mov
mov
js
and
sti
rolb
cld
cli
add
cmp
pop
gs
push
add
inc
inc
mov
and
pusha
orl
add
jmp
ret
add
or
inc
cli
test
mov
push
ret
and
test
adc
mov
loopne
cmp
xchg
sbb
pop
stc
add
adc
adc
and
sub
incl
popf
test
decl
addb
mov
jo
push
icebp
or
mov
push
mov
aad
cmp
movzbl
sub
movsl
xchg
cli
clc
push
sbb
filds
pop
or
and
xorb
and
inc
orb
loope
jno
jmp
addl
xchg
pop
push
jg
or
and
ja
jecxz
dec
xchg
or
cli
jge
sub
mov
xor
or
push
mov
mov
fidivl
in
dec
or
dec
and
pop
nop
icebp
popa
inc
push
lods
movsb
adc
sub
cmp
das
xor
dec
sahf
jl
push
sbb
and
jb
clc
sbb
or
inc
jae
ret
aad
es
jbe
les
clc
lds
cltd
xchg
adc
adc
in
jns
inc
push
adc
stc
gs
push
cwtl
lock
sub
sbb
pop
dec
or
pop
test
lret
xor
dec
push
icebp
ret
cld
fnstenv
sub
dec
fwait
push
aaa
test
inc
sti
push
addr16
mov
sar
push
push
add
pop
repnz
cmp
movsb
mov
jo
push
lods
pop
js
adc
pop
pop
test
arpl
xlat
or
stos
sbbb
mov
rcll
or
and
inc
cmp
add
ds
sbb
call
push
in
add
mov
jb
arpl
aas
enter
ret
jb
or
cwtl
rcl
mov
outsl
inc
or
fwait
and
popa
jne
and
out
lods
stc
cmp
dec
pusha
xor
or
or
insb
jno
stos
inc
test
mov
adc
xor
sub
mov
xchg
add
add
fbstp
in
or
sub
or
ja
pusha
negb
mov
subw
adc
cwtl
adc
jne
add
ret
or
or
jmp
push
jo
jg
xchg
push
outsl
aaa
lock
lea
adc
cmpsl
sbbb
int
stos
dec
xchg
jmp
arpl
xchg
add
push
sti
and
mov
push
add
into
cmp
pop
mov
pop
push
xchg
push
pop
sahf
ret
flds
mov
jge
push
roll
push
sbb
out
popf
push
xlat
adcl
lds
push
push
aad
mov
leave
cmpsb
out
adc
xchg
shlb
inc
insl
dec
push
xchg
fs
ljmp
push
scas
or
scas
movsb
sub
pushf
mov
jle
ret
sub
inc
rcl
inc
or
add
and
inc
pop
lock
inc
rorb
adc
pop
mov
push
sub
call
inc
push
pop
mov
mov
pop
xchg
jle
rolb
out
rol
or
jnp
jnp
add
xor
data16
sub
and
lea
cmp
fs
add
rcll
xchg
adc
in
nop
inc
jb
repnz
loopne
cmp
add
hlt
fsubr
mov
and
lds
xchg
or
sub
adc
rcll
and
pop
and
push
and
mov
sbb
add
repnz
mov
xor
push
xchg
int
cwtl
push
inc
and
jae
pop
aad
ret
pusha
or
je
jns
dec
cmpsl
adc
jge
leave
inc
orl
jb
enter
dec
inc
or
jns
or
pop
mov
and
inc
adc
sbb
and
shrb
insl
sbb
fwait
push
dec
jmp
xchg
push
test
loop
inc
xor
into
or
add
jbe
pop
and
jle
sub
repz
test
lods
push
sbb
cwtl
dec
pop
mov
jns
cmp
ret
aam
scas
adc
lock
enter
scas
lcall
jmp
insb
nop
les
push
das
jecxz
push
rolb
add
inc
xchg
cmpb
lods
push
xchg
or
xchg
adc
push
push
cmp
in
mov
add
and
push
push
xor
push
in
les
stc
sbb
sbb
pop
push
shl
test
or
rclb
fwait
pusha
add
insb
fwait
xor
push
mov
fildl
in
jmp
sub
push
inc
sbbb
and
enter
inc
push
sub
jmp
sti
cli
imul
inc
mov
ret
je
aas
fldenv
mov
fistps
js
ret
add
jns
dec
mov
jmp
test
jb
jmp
add
loope
sub
jae
pop
sub
xchg
inc
sbb
fimull
inc
out
push
jne
adc
inc
pop
adc
or
ds
or
ljmp
adc
push
cmp
push
inc
test
cmp
pop
mov
jmp
jmp
sbb
loop
ljmp
dec
adc
mov
movsb
mov
les
or
mov
in
enter
adc
and
xchg
sbb
or
cmp
adcb
jmp
add
adc
adc
jmp
je
jg
outsb
sbb
out
repnz
cli
adc
leave
scas
adc
pop
pushf
or
es
mov
repnz
fisttpl
or
aaa
or
push
xor
push
jg
ret
jae
and
or
imul
pusha
mov
xchg
mov
cld
enter
scas
pop
jmp
inc
sbb
out
xchg
pop
nop
fists
push
das
jmp
push
rcll
ljmp
mov
pop
xchg
nop
mov
push
loop
stos
dec
lock
or
and
aaa
std
xor
sub
jae
push
fsubr
push
jo
xor
mov
push
or
jge
xor
add
sbb
mov
xor
xor
bound
xchg
call
outsb
add
adc
cmp
jmp
push
stos
xchg
lea
popa
push
xor
pop
stos
push
jo
jp
aaa
mov
adc
scas
xor
push
mov
in
and
je
xor
mov
mov
push
leave
stos
inc
fsubr
out
popa
inc
adc
inc
xchg
or
inc
xor
cmp
imul
add
or
fwait
lods
mov
xchg
mov
es
out
add
xor
in
stos
inc
jno
mov
xor
ror
push
mov
add
add
push
push
mov
loopne
hlt
mov
outsl
ljmp
hlt
xor
add
shll
in
pop
pop
mov
cld
mov
mov
loope
adc
sbb
jns
out
out
and
in
add
xchg
pop
dec
jo
jb
test
mov
iret
cmp
cwtl
jno
xor
push
add
sub
push
mov
test
or
jge
mov
test
sti
inc
clc
mov
ret
mov
xchg
jae
dec
lret
and
mov
jne
xor
xchg
mov
mov
pop
mov
mov
ret
xor
loope
inc
jmp
aas
pop
mov
add
out
and
sarb
aam
jne
dec
inc
ret
mov
and
testb
add
push
add
cmp
jne
std
cmp
xchg
js
sbb
sbb
or
cmp
add
pop
ret
int3
test
stc
push
add
push
outsl
cs
lock
mov
mov
pop
and
ret
push
dec
sub
loopne
adc
mov
sbb
jbe
jne
lea
or
stos
cmp
add
cmc
push
adc
out
xchg
pop
enter
lcall
pusha
xchg
or
inc
loopne
jl
push
mov
add
add
sbb
orb
jbe
pop
xor
fcoml
lahf
call
cmp
jg
xor
out
mov
sub
inc
jo
sbb
mov
pop
add
rcll
mov
adc
push
add
add
jne
scas
adc
and
cmc
popf
adc
mov
jg
mov
push
in
addr16
mov
or
add
adc
xchg
add
leave
add
pop
repnz
or
int3
ss
pop
outsl
in
fisubrl
sub
jb
ja
add
ret
or
cwtl
sub
das
cmp
je
ret
add
xor
jmp
or
or
jecxz
sbb
aaa
inc
adc
repnz
mov
or
adc
hlt
mul
sahf
sbb
cmp
iret
or
nop
cli
test
cld
andb
xor
add
div
xchg
push
push
or
pop
add
mov
dec
jmp
aad
sbb
test
pcmpeqw
nop
xor
pop
dec
rolb
xchg
outsl
sub
std
js
sub
xor
in
add
or
aam
andl
push
pop
mov
sbbl
enter
or
nop
xor
fiaddl
daa
cwtl
icebp
adc
aam
inc
dec
sub
out
mov
dec
jo
pop
push
dec
fs
mov
clc
cld
aaa
pop
add
mov
sarb
in
imulb
push
cmp
cmp
movsl
push
hlt
rorb
ljmp
dec
dec
xchg
pop
and
cmc
inc
orl
push
test
sbb
push
mov
mov
gs
inc
pop
iret
dec
aaa
sbb
sbb
adc
insl
xchg
popf
xor
add
enter
outsb
or
jno
fcom
jmp
xchg
mov
jmp
scas
or
add
jae
adcl
mov
mov
sub
push
push
and
jecxz
dec
adc
imul
add
jo
jecxz
arpl
pop
jmp
cmp
pushf
mov
cmp
rcll
sti
push
repnz
inc
cmp
or
ss
cltd
rcll
add
sub
push
push
in
jae
sti
and
jecxz
nop
and
jb
or
int
cmp
mov
xor
inc
jecxz
cmp
or
inc
scas
inc
push
std
fistl
jle
push
dec
inc
sub
mov
in
arpl
mov
cli
add
push
frstor
cmp
test
sub
sbb
lds
add
adc
xchg
sti
test
xchg
dec
leave
adc
sbb
imul
jge
and
enter
stos
push
jle
cmp
int3
loop
jmp
inc
loop
mov
xchg
repz
push
push
xchg
mov
popa
pop
pop
pushf
add
xchg
pop
enter
leave
and
dec
cwtl
loop
jge
sbb
insb
jne
xchg
pop
and
call
adc
sbb
ret
add
dec
dec
jmp
shrl
and
and
xchg
inc
rol
push
mov
xchg
and
inc
jmp
mov
xor
add
or
cmpsl
push
jle
enter
loope
push
fs
fs
jne
adc
ss
xor
mov
sti
es
or
adc
sbb
sbb
xor
mov
sub
enter
insl
pop
adc
sbb
push
sbb
adc
pop
cmc
cs
or
fucomi
fadd
sbb
lds
adc
out
in
fldcw
hlt
or
arpl
push
lods
pop
pop
jno
loope
sbb
jno
adc
mov
pop
mov
cmpsl
lds
cmp
mov
fcoms
jns
or
repz
cmpsl
aad
loop
and
scas
sbb
rcll
cld
loopne
sbb
xchg
or
adc
dec
inc
je
jns
sbb
loopne
repz
aam
mov
mov
cmp
scas
push
push
mov
push
jo
aas
cmp
incl
sbb
lea
je
jp
or
push
in
push
rclb
test
inc
jo
xchg
sub
adc
jnp
push
or
xor
adc
push
popa
adc
dec
mov
fsubl
or
cmpb
mul
pop
stos
adc
imul
in
sub
sub
dec
loopne
push
or
aad
add
adc
clc
test
sbbb
mov
push
imul
push
inc
sbb
loopne
adc
pop
push
test
gs
adc
fidivrs
xor
lock
push
sbb
arpl
sub
sub
push
and
aad
xor
fcmovnu
lods
out
jne
rolb
jb
int
and
jnp
and
xchg
cwtl
mov
clc
cmp
jne
mov
add
aam
pushf
clc
outsb
add
jg
push
repnz
lods
fxch
xor
icebp
or
inc
fistps
adc
enter
inc
cwtl
nop
daa
js
mov
and
leave
dec
push
or
adc
cmp
jl
pop
dec
add
push
push
addb
dec
pop
pop
push
push
jns
dec
inc
sarb
push
adc
cmp
mov
mov
lea
adcb
push
nop
add
push
mov
loope
jmp
jg
lret
data16
pop
mov
mov
dec
les
inc
loopne
les
faddp
xor
clc
and
aad
xchg
rolb
mov
inc
test
fs
and
dec
ds
les
or
cmp
icebp
iret
cmp
sbb
push
push
aaa
enter
repnz
aam
test
sub
loopne
mov
scas
jge
adc
fimull
arpl
cltd
rol
std
push
leave
roll
inc
adc
pop
dec
pushf
add
rcrb
dec
cmp
push
jno
and
xor
add
jge
push
test
fs
call
fisttpll
data16
sub
pusha
fisubs
mov
or
mov
les
push
aad
xchg
cltd
movsb
loop
loopne
in
mov
fwait
push
and
movl
cmp
push
adc
add
je
cltd
cmp
inc
mov
rclb
adc
or
sbb
ljmp
and
cltd
pop
xchg
out
push
xchg
mov
xor
cmp
add
ret
sbb
xor
test
xor
add
imul
sub
jp
or
dec
fdiv
in
sbb
imul
sbb
das
add
out
and
inc
loopne
lcall
fisubl
cmp
int3
xchg
push
dec
sub
je
in
add
in
testl
es
hlt
push
and
es
push
inc
fstps
fimuls
cltd
push
outsl
xor
loope
rorl
dec
and
push
pop
addl
aad
add
jo
jecxz
and
jnp
pop
les
aaa
add
dec
xchg
or
jg
inc
cs
lcall
mov
inc
jle
hlt
std
xchg
adc
das
sbb
sub
rorb
add
rorb
jne
pusha
cmp
dec
sbb
andl
jge
mov
mov
sbb
mov
bound
shll
cmp
jb
sbb
or
stc
hlt
cmp
sbb
das
sti
push
xor
add
sbb
insl
sub
and
xor
outsb
mov
int3
jo
push
mov
and
int3
cmc
xchg
into
and
push
push
dec
js
imul
shl
adc
pop
or
add
inc
stos
push
and
mov
mov
sub
ret
cmp
sbb
loope
or
xor
push
or
xlat
pop
cwtl
push
inc
int3
sub
cmpl
push
and
xlat
xor
push
pusha
popa
in
xor
aam
add
les
enter
sarl
mov
mov
cmpsl
xchg
push
inc
add
test
add
jp
call
inc
push
xchg
sbb
popf
lock
mov
imulb
mov
inc
cmp
inc
xchg
or
xchg
hlt
arpl
add
cld
pop
dec
sbb
faddl
leave
jl
xor
jo
add
jmp
pusha
jae
and
xchg
jp
cmp
mov
jno
jns
adcl
or
xlat
aam
push
sub
dec
js
inc
add
sub
xchg
push
in
fcompl
dec
push
add
shll
icebp
lea
push
fsubs
scas
popf
or
push
push
test
push
mov
es
ss
or
sahf
adcl
or
or
adc
pop
sbb
inc
fidivs
loop
cmp
mov
pop
mov
cld
test
cmp
mov
les
es
and
push
add
mov
aad
xchg
and
call
lea
jne
imul
mov
jmp
pushl
pop
jo
push
fisubs
xorl
andb
jne
jl
push
loop
test
fs
std
popa
sub
adc
push
jno
or
pop
sbb
pop
rorl
and
rcll
add
or
loopne
test
lahf
adcl
add
xor
shrb
cld
decl
je
shll
pop
test
or
rorl
out
push
xorl
push
xlat
lds
sbbb
ds
movsb
sbb
and
dec
in
mov
mov
xor
mov
cmp
test
add
dec
inc
enter
sub
sub
jb
pop
jne
inc
mov
icebp
xor
loop
in
je
mov
cmp
mov
mov
out
xlat
sbb
jge
inc
lock
fldl
shrb
test
nop
or
push
and
dec
or
fisttps
xor
and
lret
inc
data16
or
jns
je
xchg
mov
fwait
enter
mov
mov
dec
mov
xchg
sbb
push
mov
sub
inc
and
cwtl
les
push
outsl
add
test
adc
pop
jle
jae
adc
adc
les
xchg
shl
push
cmp
cmp
pop
push
ficoms
push
xor
mov
sub
pushf
push
add
in
orb
pushf
fs
sbb
push
test
nop
mov
inc
loope
jle
mov
push
cmc
adc
mov
arpl
inc
cmp
fiaddl
ljmp
jge
lods
out
and
jge
incl
push
jne
and
mov
jmp
cmp
jl
andb
dec
dec
fs
dec
out
or
popa
jp
or
mov
pop
pop
pop
and
insb
add
inc
and
sub
add
mov
or
cmp
jl
push
pop
pop
jnp
cmp
sub
rorl
cs
pop
or
loope
cmp
xor
sbb
repnz
cltd
fcom
rcrb
mov
push
xchg
in
int3
mov
sbb
out
jge
cmp
daa
subl
adc
int
adcl
mov
ficompl
add
mov
or
mov
repnz
dec
pop
jne
mov
cs
jns
lahf
push
call
int3
imul
sbb
and
pop
repnz
lock
mov
jne
cwtl
jg
js
loope
div
icebp
inc
mov
inc
or
idivl
add
or
fistl
cld
or
in
and
ljmp
push
data16
and
pop
jbe
jns
je
fistpl
std
jp
fwait
xor
aas
adc
dec
push
nop/reserved
or
inc
hlt
dec
adc
add
jmp
mov
aad
cmpsb
outsl
cmp
cmp
xchg
nop
jle
push
add
addr16
jb
fldcw
rorb
out
mov
and
jbe
icebp
cmc
jge
xchg
sarl
es
pop
ret
nop
push
add
sarl
sub
cli
dec
jb
in
int3
jnp
push
push
dec
jle
cmp
je
in
add
repz
adc
hlt
je
mov
xchg
add
mov
mov
xor
loopne
xor
adc
lahf
cwtl
fisubl
jo
pop
pop
or
xchg
xor
fwait
mov
pop
inc
rolb
jae
push
dec
clc
mov
andl
inc
or
aaa
rcrb
inc
inc
pop
movsb
notb
dec
mov
or
je
mov
cld
ss
into
jg
push
enter
hlt
jne
push
and
adc
pushl
jo
mov
adcb
xor
lock
pop
push
mov
sub
daa
add
push
and
dec
xchg
test
fnsave
push
jmp
inc
je
pop
xchg
mov
add
cmp
movsb
mov
sub
sarb
pop
mov
loope
dec
mov
cli
push
mov
fs
popa
jecxz
adc
push
mov
test
inc
andb
jl
inc
in
fldt
mov
dec
fsubrs
inc
shll
sbb
in
test
mov
std
ss
enter
push
mov
sbb
dec
lods
add
push
fisubrl
add
jle
cmp
or
push
bts
xchg
dec
lds
shr
lret
bound
sub
add
mov
and
clc
fiaddl
pop
call
jno
inc
xor
mov
subl
test
movsb
push
cmp
adcb
pop
inc
int
push
and
or
or
push
inc
or
jae
mov
addb
addw
paddd
and
jne
adc
jb
push
or
rolb
mov
aad
push
pop
inc
cld
jbe
stos
shll
neg
mov
mov
or
add
inc
dec
nop
or
push
jmp
pop
jns
lcall
inc
adc
push
adc
jae
add
push
hlt
or
or
and
pop
add
test
loopne
xchg
push
inc
push
cltd
andb
into
aaa
mov
insb
aas
xor
imul
aas
sbb
sbbb
sbb
push
nop
mov
rclb
hlt
or
in
mov
pusha
xor
js
adcl
inc
mov
sbb
add
mov
sti
sub
ljmp
jbe
loope
pop
or
call
sub
mov
add
sbb
adc
pusha
add
push
mov
pop
iret
inc
roll
cld
leave
push
arpl
cmpsl
inc
or
pop
xor
cltd
xchg
loopne
push
sarl
cmpsb
xor
mov
fbld
loope
test
inc
sub
xor
jl
and
mov
push
jo
or
je
mov
std
sub
dec
dec
or
cmp
jns
push
addr16
adc
sub
nop
mov
gs
jnp
adc
scas
push
xor
mov
push
unpcklps
in
xchg
sub
shlb
out
push
dec
push
dec
cmp
lods
enter
add
out
shlb
jae
lods
xlat
or
jmp
push
jmp
lock
mov
aad
jbe
pop
push
cwtd
adc
daa
xor
jo
or
adc
add
lock
or
shlb
push
inc
sbb
push
inc
dec
imul
pop
iret
sbb
aad
push
push
inc
xor
int
jge
loopne
shll
dec
insb
sti
push
in
outsb
jge
push
inc
add
dec
jb
insl
roll
loope
jmp
popf
or
mov
clc
mov
push
push
gs
enter
hlt
cmpl
aas
mov
testb
mov
inc
scas
add
push
fcomp
add
fists
jecxz
or
push
push
push
mov
icebp
pop
addr16
pop
xor
movb
push
and
pusha
adc
sahf
pop
xor
sub
push
jnp
xchg
add
mov
or
lods
add
sub
xor
movsw
mov
or
xadd
and
dec
push
mov
dec
adc
add
fwait
pop
push
xor
ja
adc
and
xchg
dec
push
or
mov
aas
scas
inc
add
adc
xchg
jmp
jnp
push
sbb
pop
loope
das
mov
add
sub
mov
sbb
jno
fdivs
cmp
loope
mov
aaa
adc
xor
mov
jbe
mov
and
and
jns
or
test
jle
or
inc
inc
mov
cmp
xchg
cmp
fbld
lea
test
clc
add
cwtl
mov
jg
clc
insl
je
or
xor
mov
adc
and
clc
push
ja
or
aas
ja
xchg
add
sti
mov
dec
lock
mov
mov
testb
cmp
jo
push
cmp
je
cmp
test
add
or
mov
adc
and
stc
pop
shlb
cli
sti
cld
or
jecxz
pushl
cmp
inc
in
or
outsb
daa
and
bound
sub
jg
cmp
jbe
dec
xchg
and
lcall
adc
sbb
cwtl
dec
sub
jecxz
add
mov
add
pop
daa
sbb
dec
jl
in
cmp
mov
or
data16
mov
inc
aas
scas
xor
jae
rcll
dec
push
dec
dec
loopne
xor
cmp
pop
pop
ja
inc
or
ret
rcll
inc
jns
pop
jnp
jle
in
lea
mov
add
dec
xchg
pop
icebp
aaa
pop
push
sub
push
pop
push
out
xchg
xchg
arpl
je
mov
data16
and
imul
pop
add
aaa
inc
xor
jg
inc
les
adc
dec
mov
add
push
push
pusha
int
push
out
pop
or
pop
dec
add
test
adc
push
push
loop
jle
pop
cmp
sbb
jo
push
add
push
adc
cmp
out
adc
push
ljmp
pop
pop
pop
hlt
jecxz
dec
test
leave
jne
inc
mov
jle
push
cmpsb
or
adc
int
addl
or
push
sbbb
aaa
jb
incl
push
mov
jge
mov
push
or
dec
ljmp
mov
cmpb
mov
push
aas
jo
lea
nop
dec
and
das
std
dec
mov
and
int
decl
mov
add
xor
cwtl
mov
mov
ret
cmp
in
into
mov
and
push
jl
sbb
pop
sub
das
lds
fistpll
jmp
add
inc
pop
insl
sbb
in
or
clc
xor
imul
insl
push
or
sar
sub
lret
mov
xchg
adc
addl
inc
pop
mov
sub
add
mov
pop
ljmp
das
adc
or
mov
adc
and
in
push
xchg
and
and
scas
enter
adc
pop
sub
xor
and
mov
jecxz
and
ret
sub
cwtl
flds
ljmp
ret
fwait
sub
push
mov
mov
cmp
stos
hlt
add
jno
mov
ret
adc
or
lock
pop
jmp
arpl
dec
add
adc
xchg
xchg
stos
dec
orl
nop
mov
xchg
mov
mov
jp
add
adc
pop
lea
mov
or
dec
mov
mov
sbb
sub
in
cli
add
loopne
jno
sub
mov
bound
shrb
orb
sub
sub
lcall
add
in
sbb
add
push
mov
mov
xchg
shrb
sub
adc
push
sub
popf
lods
movb
add
push
xchg
and
dec
and
pop
inc
pop
mov
insb
ficoms
dec
cmpsl
sbb
les
inc
loop
inc
or
mov
test
push
jb
das
js
dec
imul
push
xchg
fnstsw
enter
xchg
pop
or
xchg
inc
pop
push
sub
in
fidivrs
das
or
and
jle
and
jnp
adc
xor
cmc
and
call
cmp
jb
or
movsl
mov
pop
les
rcrl
and
mov
and
push
je
push
data16
pop
in
test
cld
cli
je
jnp
push
add
xchg
dec
mov
sbb
popa
inc
imul
adc
test
in
push
and
adc
stos
insl
dec
sahf
or
dec
in
push
ds
in
lock
inc
push
nop
inc
in
jo
push
xchg
popf
xchg
sub
add
push
cmp
ds
je
in
enter
push
push
int
jae
adc
pop
push
stc
daa
mov
jne
movb
loop
in
gs
movb
push
ljmp
cmpsb
dec
into
sub
inc
cli
mov
pop
flds
mov
fimull
les
inc
adc
clc
mov
adc
and
push
in
cmp
shrb
xchg
lods
xchg
sbbb
sbbb
in
inc
pop
adc
int3
push
fadd
mov
shrb
mov
ljmp
and
daa
clc
xchg
sub
sub
test
cld
imul
inc
enter
adc
int
inc
enter
daa
nop
jg
push
mov
mov
inc
adc
push
mov
push
std
mov
mov
push
sub
call
xor
div
pop
mov
adc
pop
push
sbb
or
inc
es
or
repz
or
outsl
cltd
xchg
xor
rclb
add
les
jl
mov
cmp
les
xor
jbe
test
mov
inc
mov
js
popf
fiadds
sbb
pop
or
add
or
push
bound
pop
pop
fisubl
inc
cmp
xor
mov
mov
push
sbb
lret
pushl
push
sub
ja
jb
cmp
ja
push
popf
or
fs
orl
test
pop
ja
jb
push
jae
push
and
movsb
jns
pop
and
push
inc
inc
cmp
sub
and
lcall
jae
icebp
jg
adc
sub
sbb
add
adc
insb
xchg
test
add
movsb
lcall
xor
movsl
test
stc
enter
popf
cmp
inc
xor
push
inc
push
add
arpl
test
roll
mov
push
nop
outsl
dec
repz
jne
in
inc
mov
jne
out
jns
push
call
xchg
adc
inc
fcoml
clc
fdivl
or
pop
daa
mov
sti
loopne
adc
dec
dec
jmp
popa
mov
xchg
push
jae
cmp
cmpsb
std
mov
dec
imul
pop
fsts
sub
push
call
dec
xchg
cwtl
mov
xor
mov
add
xor
pop
andl
push
stos
cmpsb
cltd
push
pop
inc
lods
and
push
cmp
and
repnz
lock
push
push
push
mov
loop
sub
add
adc
inc
pop
outsb
push
and
sbb
in
adcb
cwtl
stc
movsb
insl
fisttps
sbb
or
pop
mov
rep
std
rep
rcll
add
movsl
ret
and
push
push
or
clc
enter
cwtl
aam
insl
jecxz
imul
bound
lock
cltd
push
idivl
push
or
add
jne
cs
das
rolb
mov
xchg
mov
test
loope
insb
ja
jne
daa
aaa
rolb
repnz
incl
adc
rclb
notb
mul
or
push
iret
mov
test
sbb
adc
je
adc
repnz
adc
rolb
sbb
out
dec
sub
outsl
enter
popa
inc
jo
fadd
mov
pusha
ret
mov
movsb
ss
test
je
mov
enter
mov
inc
pop
inc
sti
dec
aaa
adc
inc
les
fs
rol
lds
dec
mov
or
int3
cmp
sti
mov
imul
mov
mov
xchg
add
rorb
jo
sbb
in
mov
mov
jae
bound
in
sub
mov
ja
pop
sub
xor
mov
pop
sub
aaa
fcmovb
inc
fdivr
mov
sub
or
pop
movsb
add
add
dec
sub
mov
pop
dec
insl
sbb
sarb
mov
jae
fs
pop
inc
loope,pn
push
mull
inc
imul
test
cmpsb
sahf
into
divl
or
jne
add
pop
aas
aam
enter
adc
cmp
xor
pop
div
lcall
add
testb
mov
or
stos
insb
cli
push
dec
mov
mov
push
cmpsb
lea
pusha
mov
gs
es
xor
inc
aam
jl
mov
aaa
je
leave
mov
jmp
fs
sub
xor
pop
cmp
jecxz
jb
mov
std
in
mov
js
insl
arpl
bound
fcoms
pusha
insl
cli
sbb
test
mov
addb
test
fdiv
xchg
in
mov
in
movsw
lahf
lret
shlb
mov
adc
and
ret
inc
stc
inc
mov
adc
jmp
push
jne
shrl
mov
cmp
cmp
mov
and
repnz
test
fsubl
jns
cmp
decb
fcompl
xchg
mov
das
jne
int
push
les
pop
and
lea
daa
insb
fs
testb
or
clc
jne
fists
fistps
mov
leave
ret
rorl
roll
mov
js
movb
and
inc
add
push
fdivs
cmpl
fisubs
push
mov
out
mov
sub
xorb
mov
popa
mov
mov
sahf
cmp
orl
push
arpl
dec
aam
sub
and
addr16
mov
stc
add
popf
sub
add
lahf
aad
sub
pop
add
mov
in
sub
xor
jmp
mov
xchg
in
cltd
test
dec
jae
mov
dec
in
inc
adc
rclb
mov
jne
jge
icebp
sub
insb
test
mov
mov
xor
mov
mov
loopne
xlat
lea
xchg
std
int3
shrl
pop
push
push
shrl
les
pop
jnp
dec
sbb
sarl
movsl
fidivrs
fstps
mov
mov
gs
hlt
adc
adc
xchg
push
shlb
jo
xchg
mov
stc
ds
lds
jne
inc
xor
in
mov
jmp
inc
pop
lea
mov
add
dec
ficoms
or
push
movsl
js
loope
mov
sbb
sar
cmp
inc
add
mov
push
out
inc
jns
sbb
sub
and
arpl
push
jbe
xchg
jg
test
repz
push
sub
sahf
sub
movsl
lods
dec
cmpl
std
ss
push
xor
inc
lea
xorl
add
and
add
out
jmp
push
mov
popf
push
adc
xchg
pop
test
dec
shlb
iret
int
scas
es
enter
cmpsb
fcomps
inc
jl
xchg
out
push
dec
test
jecxz
test
lret
mov
inc
movsl
add
scas
xor
ds
cmp
cmp
cmpl
push
adc
std
xor
xor
cmp
xchg
mov
xor
mov
sbb
jno
mov
mov
cld
pop
jp
lods
mov
push
pop
pusha
data16
fmull
sahf
rorb
pop
insb
in
mov
jbe
lret
inc
push
out
sub
or
xorb
dec
rolb
clc
inc
inc
test
or
lds
sub
or
mov
pop
in
add
inc
inc
sub
xchg
or
mov
cli
inc
adc
or
and
or
push
cld
xchg
inc
push
and
jge
inc
add
jle
cmp
out
aas
inc
dec
jne
inc
add
dec
jmp
cmp
rolb
cmp
je
push
fmull
pop
ret
mov
pop
mov
jg
and
dec
pop
adc
mov
sbb
sbb
aaa
sbb
and
adc
sbb
cmp
test
loope
sub
stos
cmpl
push
sbb
outsl
jmp
aam
rol
enter
mov
add
into
mov
push
mov
inc
jne
fst
lcall
orb
mov
mov
push
pop
repnz
test
imul
in
loopne
lret
cmpsb
out
arpl
fs
mov
test
xchg
sbb
sbb
leave
pusha
lret
repz
xchg
push
jne
outsb
mov
cmpsl
inc
shrb
in
adc
test
popa
imul
or
or
pop
mov
mov
pop
mov
dec
fisubs
hlt
in
arpl
out
test
and
imul
pop
dec
xchg
push
andl
add
and
xchg
add
aam
aam
cmpsl
nop
push
enter
cld
aam
in
inc
and
repnz
cld
mov
mov
and
enter
mov
movsb
gs
xor
rcrb
cmp
xchg
fs
sbb
or
and
xchg
movsb
stc
push
ret
clc
das
pop
push
daa
sbb
jge
call
test
dec
into
loopne
mov
inc
jae
das
pop
xchg
or
lock
push
or
ret
stos
das
test
data16
xor
jnp
sarb
fdivs
aam
cmp
sbb
xor
fmull
push
iret
call
outsb
push
jmp
adc
mov
cmpsl
add
mov
insb
sub
push
sub
sti
push
jecxz
fdivr
pushf
in
and
fdivrs
add
dec
push
jnp
sub
or
data16
and
pop
adc
mov
pop
pop
xor
pop
mov
fldenv
movsb
cli
pmulhuw
insb
xor
test
movsb
movsb
cli
xchg
shlb
push
add
push
adc
jo
adc
xchg
add
jae
fcomp
inc
or
pusha
leave
ficompl
dec
lret
popa
push
mov
rorb
mov
sbb
pop
sub
push
mov
push
sbb
push
or
sub
inc
outsb
enter
pop
lods
xor
scas
test
xchg
je
push
pop
je
push
push
mov
push
jnp
add
xor
cld
sbb
and
add
ds
cli
lahf
pop
sub
lea
inc
inc
shr
shll
jle
push
push
daa
sub
push
cld
push
aam
push
out
adc
sbb
in
sub
add
pop
jo
mov
stos
aaa
nop
inc
jmp
cmp
push
push
ja
movsb
push
rcr
add
js
xor
in
xchg
mov
add
xor
dec
cmp
add
clc
xor
mov
adc
loopne
or
sub
cmp
mov
add
sbb
outsl
jo
mov
dec
sub
pop
int
seto
mov
std
fdivr
mov
and
add
decb
pop
repnz
jmp
inc
daa
push
or
adc
sub
aas
je
pop
sbb
lret
cmp
pop
lea
inc
fmuls
jo
mov
cltd
push
mov
dec
inc
inc
jmp
cmpb
jne
mov
aad
rclb
sbb
ret
inc
add
or
mov
cmp
push
add
pop
cmpb
add
inc
jg
sub
or
sub
addl
jne
cmp
sbb
jne
mov
jno
mov
cmp
jge
cmp
je
jmp
cwtl
push
mov
mov
cmp
jl
cmp
jg
mov
xor
or
add
sbb
pop
incl
loopne
adc
sbb
xor
and
outsb
mov
mov
mov
call
stos
mov
aas
call
and
icebp
push
mov
sub
dec
addr16
or
mov
pop
repnz
loopne
push
shrl
lods
aas
test
mov
cmp
mov
cmp
je
lock
or
or
sbb
pusha
mov
lret
jmp
ret
jge
outsl
pop
popa
cmp
push
arpl
mov
adc
shll
jmp
xor
adc
ret
mov
pop
ret
and
jne,pt
testl
mov
inc
aas
or
rolb
jecxz
mov
inc
xchg
mov
stos
cmpl
loopne
xchg
aam
add
in
js
adc
cmp
dec
jmp
push
or
xchg
mov
adc
mov
add
jb
cmpb
jne
inc
pop
fwait
js
and
std
push
sahf
mov
inc
jmp
push
iret
int3
test
xchg
les
sbb
jg
adc
movzbl
testb
inc
mov
sbb
pop
jno,pn
and
movsl
xor
sub
adc
add
iret
subb
sub
sbb
out
jb
pop
sub
cmp
jb
mov
daa
sahf
cmc
es
pop
add
lcall
test
and
xor
dec
cmp
jb
jge
adc
repz
or
pop
sbb
pusha
mov
lock
push
fwait
imull
shll
sub
pop
sub
fdivs
stc
sbb
cmpsb
or
int3
add
das
inc
lret
test
add
sbb
jle
pop
or
cmp
and
pop
imul
inc
add
nop
ds
roll
jne
mov
ret
nop
adc
loopne
ret
pop
xchg
mov
sarl
jmp
cmpsl
jns
lahf
add
ror
push
lcall
int3
add
or
sti
sub
test
inc
mov
inc
and
das
or
add
jb
neg
and
je
mov
rorl
cli
imul
dec
imul
lret
or
add
stos
je
inc
dec
scas
sarl
ret
mov
fimuls
inc
sub
jne
sar
cmpsl
jle
add
add
xor
insb
jle
ret
add
add
push
xor
and
adc
or
testl
sub
ret
adc
or
leave
and
cld
incl
scas
or
ljmp
roll
jmp
adc
std
jb
adc
jmp
cmp
jb
pop
and
enter
xlat
test
mov
xchg
filds
dec
pop
add
das
test
test
pop
repz
pop
lock
inc
addr16
aaa
faddl
and
mov
mov
mov
or
lods
adc
leave
insb
jns
mov
int3
lea
cmp
xor
add
add
nop
inc
inc
inc
inc
jle
dec
rcrl
mov
push
pushf
xchg
mov
jl
inc
mov
mov
call
call
cmpsb
imul
jle
cld
lea
clc
adc
sbb
in
loopne
push
in
add
loopne
outsl
nop
cmp
les
or
and
ret
out
arpl
xor
jl
cld
pushl
or
pusha
xchg
adc
pop
stc
pushf
sbb
sub
pop
cmp
ficoml
rcr
jne
fsubrs
mov
lods
mov
aas
nop
negl
inc
out
add
xchg
mov
nop
dec
dec
push
pop
add
popa
xchg
add
mov
adc
sbb
and
sub
dec
shll
inc
push
xchg
lcall
sbb
imul
inc
lcall
fdivs
mov
pop
lsl
pop
inc
xor
mov
adc
scas
aas
push
cmp
add
adc
icebp
xchg
sub
out
and
mov
sbb
add
cmc
inc
add
fs
pop
ss
push
sbb
lock
movzbl
mov
dec
orb
or
add
test
or
call
shrb
aaa
mov
or
mov
add
xor
xchg
outsb
outsl
pop
stos
orl
aad
movsl
ss
shlb
test
std
test
jne
push
inc
sub
call
movsl
pop
and
and
cmpl
push
xchg
aaa
dec
inc
cmpw
inc
mov
mov
mov
and
ret
sbb
fcomip
pop
imul
mov
loopne
and
shrb
push
cmp
je
daa
lahf
mov
fidivs
mov
jnp
fs
adc
ja
dec
ja
hlt
jp
inc
jb
hlt
pop
or
and
or
lock
out
mov
adc
cmp
inc
pop
mov
shll
rolb
aam
push
jmp
xor
call
push
and
and
lods
daa
scas
and
jo
pop
addr16
lret
push
push
in
repnz
mov
add
mov
inc
cld
adc
dec
popf
sbb
ret
cmpl
loope
in
insl
lods
iret
enter
jne
lea
lahf
add
in
clc
sbb
or
test
jne
sbb
and
fbld
push
je
mov
inc
pop
cmp
mov
roll
aas
and
push
or
dec
out
test
pop
mov
pop
add
adc
addr16
push
iret
cltd
or
jmp
mov
inc
pop
ret
xor
and
jmp
mov
test
imul
inc
cmp
add
cvtdq2ps
fbstp
adc
adc
dec
lock
aas
mov
inc
mov
mov
inc
fidivrs
test
test
inc
adc
inc
mov
sti
adc
push
add
xor
jg
mov
movsb
and
xor
sahf
adc
sub
dec
or
xchg
mov
jns
imul
jmp
pop
mov
pop
std
jmp
cld
inc
mov
sbb
or
xchg
fs
out
cmp
add
clc
repz
xlat
push
rclb
loope
xor
sbb
xlat
aam
jno
adc
loope
divb
outsl
sbb
cltd
mov
cmp
sar
repz
sub
clc
adc
jmp
cmc
mov
lods
and
xlat
test
mov
jecxz
push
and
mov
in
mov
jge
iret
inc
xchg
cwtl
push
ja
call
fwait
or
or
sub
sub
adc
mov
test
sbb
jp
popf
xchg
and
notl
imul
or
mov
lds
push
test
dec
adc
test
dec
aaa
sub
stc
movsb
pop
adc
push
ss
mov
les
sub
sub
add
add
adc
jg
jmp
cmp
jb
inc
mov
je
sbb
mov
cmp
fs
or
mov
ss
xor
add
jmp
daa
pop
mov
sub
mov
inc
push
adc
or
jbe
adc
lret
or
or
psrad
frstpm(287
inc
loopne
insl
jl
call
or
daa
insl
arpl
sub
js
ret
push
sbb
jno
pop
jo
add
mov
shrl
xchg
rclb
mov
testb
lcall
pushf
add
shrb
filds
xchg
out
pop
push
mov
push
pop
cld
roll
pop
in
add
mov
out
and
shr
shl
lea
test
aad
sbb
in
test
mov
divl
fists
lock
pop
push
shl
shr
sub
loopne
fnstenv
add
pop
mov
adc
inc
push
dec
xchg
clc
jnp
pop
shl
dec
shll
and
inc
lods
adc
ret
iret
mov
push
ret
pop
jg
std
decl
pushf
rolb
neg
dec
mov
std
adc
pop
or
cld
shll
push
mov
test
clc
imul
mov
xor
adc
jno
mov
cmc
das
pop
stos
cli
pop
iret
sbb
lock
mov
decl
les
mov
mov
je
jmp
pop
push
xor
add
movl
lahf
mov
or
mov
shrb
stos
outsl
jmp
sarb
je
stos
sub
push
and
fdivs
das
dec
jecxz
push
sbb
or
add
je
and
push
cmp
insb
xor
cmp
sub
and
loop
out
and
xor
push
add
shlb
call
pop
mov
test
inc
dec
add
xor
pusha
adc
push
push
movl
movsb
popa
lahf
popa
loopne
mov
adc
inc
lcall
pop
lea
call
fcomps
add
mov
out
shlb
push
xor
sti
fdiv
ret
shl
push
adc
jle
and
stc
xor
sahf
iret
xor
out
loope
xor
and
cmp
addb
out
mov
mov
clc
mov
cmp
imul
dec
rcrl
iret
and
faddl
aam
xchg
daa
int
jo
arpl
outsb
or
cld
pop
das
jge
push
jge
or
sti
and
xchg
or
mov
test
js
rcrl
add
add
push
jmp
and
push
jmp
leave
add
daa
jmp
cmp
jmp
pop
or
dec
mov
sbb
test
mov
or
test
lret
popa
cmc
push
add
subl
lahf
in
sub
add
dec
test
sti
rorb
aad
sub
jl
ds
je
mov
cld
dec
cmp
xor
push
inc
push
cltd
test
iret
insb
loop
push
test
mov
and
fs
push
nop
lea
cmp
jecxz
jne
cmp
sbb
adc
jmp
popf
xchg
or
jecxz
adc
add
adc
divb
cmpsl
mov
loope
lods
cmp
test
dec
scas
dec
daa
dec
ret
mov
pushf
push
mov
shr
push
or
aaa
int3
or
mov
scas
add
mov
ret
sbb
imul
xor
pusha
jo
insl
jne
pusha
mov
push
jae
push
dec
inc
orl
cmp
adc
shll
mov
dec
add
ds
sbb
and
sbb
mov
jb
rorl
cs
in
or
push
das
mov
or
fistpll
cltd
xchg
ja
test
cld
pop
push
mov
add
sti
pop
adc
out
in
dec
sbb
int3
inc
lods
pop
or
inc
mov
jns
jns
mov
mov
sti
sub
jmp
sti
ds
pop
mov
add
fdivrs
jb
cwtl
sub
movsbl
and
lock
dec
dec
mov
push
cmpsl
push
dec
mov
test
js
loop
sub
shrb
adc
mov
jp
adc
enter
das
jno
aas
mul
push
test
mov
sbb
fildl
adc
add
pop
xor
sbb
pushl
mov
js
adc
mov
sti
jle
and
xlat
adc
fnstcw
shlb
push
addl
enter
ret
rcrb
or
cmp
push
icebp
adc
shr
inc
pop
imul
jl
add
rcr
shr
rcr
or
shl
mov
in
aas
mov
inc
push
out
shll
cmp
addl
or
cmp
add
pop
xchg
imul
mov
push
jmp
fdivl
push
fcmovb
shrb
xchg
or
jo
xor
xlat
or
or
cmc
shlb
or
mul
or
jnp
fiaddl
stc
push
push
push
push
xor
ljmp
dec
push
sbb
in
and
mov
mov
pop
jb
sbb
sbb
dec
adc
xor
lock
dec
fcomi
orl
sbb
cmp
shll
dec
sbb
pop
pusha
decb
mov
adc
and
push
add
mov
inc
test
mov
inc
jmp
clc
and
sbb
jmp
push
in
mov
fisttps
lret
fstps
enter
sti
je
push
mov
ljmp
dec
lahf
aam
xchg
pop
push
xor
insb
mov
xchg
sbb
into
xchg
jne
xchg
inc
cs
repnz
mov
push
or
adc
pop
push
push
cmp
jne
inc
inc
dec
je
adc
jne
mov
mov
icebp
imul
call
push
add
jmp
sub
cmpsl
je
repz
mov
dec
adc
cmc
pop
pop
fcmovu
jnp
adc
ljmp
in
cs
mov
les
lret
lea
jg
sbb
out
jne
or
xchg
idivb
int
mov
mov
movaps
mov
pop
jb
sbb
lea
loope
ret
movsl
sub
add
sub
push
mov
inc
jmp
int
jne
push
jg
pop
adc
jmp
lds
cs
adc
dec
adcl
cmovbe
or
stos
icebp
sar
pop
xor
or
mul
push
cmp
add
and
adc
add
jne
push
jne
aas
add
mov
inc
mov
mov
adc
test
jns
and
aam
pushl
sub
loope
or
jle
lcall
dec
ret
push
into
sub
or
add
cmp
jae
xchg
or
jb
jl
mov
or
or
pop
pop
fisttps
scas
sbb
icebp
test
movsb
add
xor
push
push
xor
xchg
test
pushf
add
loopne
cld
sub
add
dec
sub
push
jne
adc
jne
and
loope
ljmp
ja
test
sub
jbe
mulb
push
sbb
fiaddl
jmp
mov
pop
neg
sbb
neg
add
loope
imul
mov
pop
out
push
or
mov
rorb
mov
mov
or
pop
mov
add
int3
add
dec
dec
and
sbb
xor
imul
add
call
out
out
and
in
cmpsl
imul
jmp
imul
js
hlt
popf
sub
adc
jge
test
faddl
loopne
sub
pop
mov
test
fmul
xor
fdivp
test
pop
stos
out
inc
xchg
mov
or
or
bound
aad
stos
mov
and
pop
jo
jp
mov
pop
or
loope
pop
push
into
mov
inc
loopne
mov
push
fmulp
repz
mov
mov
push
inc
js
sarb
xor
pop
jge
cmp
enter
sbb
push
pop
and
rorb
adc
lea
mov
add
movsl
or
pop
or
mov
or
adc
sub
add
push
add
mov
mov
xchg
lea
mov
fistpll
filds
pushf
sbb
dec
adc
dec
sub
inc
adc
dec
cmp
dec
imulb
rcl
dec
ljmp
jns
ds
or
mov
adc
lds
mov
sub
xchg
xor
or
fnsaves
mov
fnsave
andb
lods
in
adc
xor
sbb
pop
push
push
or
add
push
mov
jp
lret
loopne
dec
cltd
sub
outsl
lea
cmp
imul
mov
leave
add
inc
push
in
mov
dec
ficoms
ret
cmp
mov
pop
or
push
shlb
pop
lcall
adc
or
orl
fsubs
loope
dec
push
push
call
push
dec
fsubrs
or
mov
add
mov
rcr
dec
enter
add
push
inc
pop
sub
cmp
add
aam
xchg
pop
or
pop
inc
in
cmp
pop
out
mov
cmp
jmp
adc
jno
jb
mov
push
std
add
cmp
push
daa
or
sub
and
mov
pop
icebp
hlt
loopne
lods
aad
sbb
rcll
push
jae
scas
lea
pop
inc
sub
mov
jg
inc
mov
and
cwtl
sbb
push
testl
lahf
xor
cli
test
shl
cmp
mov
cmp
cmpsb
mov
mov
inc
sub
imul
sar
pop
xlat
jo
push
sbb
or
pop
das
sbb
push
loope
and
push
mov
add
mov
and
fcoms
jecxz
fildll
test
pop
and
lahf
fimull
adc
adc
les
or
adc
inc
sbb
xchg
adc
sub
rolb
or
push
and
mov
ret
lds
jmp
add
lcall
insb
pushf
orl
dec
enter
aam
adc
mov
lods
sbb
loope
add
adc
movsb
xchg
leave
push
cltd
lret
movsb
dec
dec
insl
push
ret
fadds
fwait
test
push
mov
and
mov
shll
push
shr
movsb
outsb
andb
idivb
jp
adc
iret
je
add
or
das
mov
movsl
pushf
mov
mov
cmp
scas
imul
xchg
cwtl
push
push
or
push
lock
pushf
jb
jne
cmp
lret
in
in
add
in
sbb
add
xchg
add
cmp
cwtl
cltd
and
cmp
dec
dec
lods
jl
ss
pop
sub
pop
adc
pop
xchg
lret
cmp
andl
mov
hlt
movups
fisttps
and
ret
decb
out
test
loop
fisttpll
test
and
sub
push
pop
or
inc
mov
fst
mov
nop
pop
or
fdivl
xchg
or
push
je
test
ds
ret
jne
push
mov
dec
in
dec
add
adc
rorb
or
push
xchg
push
stos
mov
lret
sar
loope
aas
mov
test
popa
enter
or
mov
add
je
dec
jp
sbb
xor
mov
mov
mov
cltd
sub
mov
add
cmp
out
ret
and
jle
movsb
int3
push
cltd
rorl
lock
jmp
movsb
addr16
aaa
or
pusha
fildll
push
mov
and
psubsb
cmp
jl
and
cmc
inc
cld
or
push
sub
loopne
roll
test
adc
xchg
add
or
dec
jmp
pusha
out
sub
sar
test
int3
add
sub
in
fcoml
cltd
fcoml
or
je
ret
cmp
sbb
sub
xorb
dec
adc
inc
xchg
flds
and
pushf
lock
sub
xchg
pop
add
mov
lea
lea
loope
pop
mov
dec
ud0
orb
in
jge
xchg
loopne
inc
lock
cwtl
fnstcw
add
insb
imul
repnz
adc
add
adc
xor
adc
jg
xor
push
inc
inc
dec
sub
sbb
jecxz
adc
cmp
mov
mov
push
out
les
fisttpl
int
mov
pop
sbbb
sbb
mov
test
pop
add
js
call
lods
and
jo
insb
and
and
inc
cld
xor
cmp
adcl
lods
add
stc
xchg
sbb
adc
sbb
mov
add
cmp
inc
jmp
jae
push
and
or
or
jle
dec
test
inc
aam
xchg
inc
inc
jmp
inc
int3
add
es
fisubl
lea
xlat
mov
push
iret
ss
fadds
sarl
gs
adc
mov
fwait
inc
push
add
mov
in
xor
into
jge
mov
sti
jle
call
or
stc
call
je
outsb
sub
mov
mov
pop
sbb
sbb
inc
add
push
mov
sub
add
add
add
call
xchg
repnz
mov
rcll
test
add
dec
ljmp
add
mov
idivl
xchg
dec
mov
shl
mov
je
fistpll
add
and
xchg
add
inc
ror
mov
pop
mov
jns
js
lods
sub
mov
ret
stc
icebp
nop
dec
xor
roll
add
sahf
or
std
stos
sbb
ret
data16
mov
mov
andl
mov
in
dec
inc
sti
clc
in
xor
orl
pop
adc
jle
dec
cld
jne
aad
sahf
jp
sbb
mull
test
mov
popa
fistpll
xor
and
add
inc
xchg
mov
sahf
or
test
jmp
das
ss
mov
mov
jmp
adc
mov
push
or
imulb
imul
mov
ja
jnp
jmp
jp
and
inc
sub
pop
imul
cltd
jmp
pop
mov
jmp
inc
pop
xchg
or
loopne
xor
xor
jg
das
mov
jae
ja
add
jg
aad
rorb
or
jne
and
or
mov
fs
sti
je
notb
lcall
jne
in
mov
cmc
jp
sub
xchg
fsubp
xor
pop
hlt
das
push
push
aam
pop
or
jmp
add
loope
xchg
imul
dec
mov
sti
cmp
jle
add
cmp
addr16
sbb
mov
sub
add
mov
jae
cmpb
fisttpll
aaa
movsb
push
pop
inc
push
movb
clc
shll
mov
jge
hlt
es
cld
test
mov
movl
fists
je
and
jne
sub
add
mov
fcoms
shr
cmpsb
xor
cmp
jnp
jl
nop
add
add
pop
addl
jle
sbb
dec
xchg
mov
push
inc
subl
xor
daa
and
mov
dec
mov
ret
iret
mov
mov
je
sbb
add
repnz
jmp
adc
jle
ja
inc
add
insb
lcall
repz
and
or
dec
add
push
mov
mov
arpl
push
shlb
cmpsl
cmpsl
jo
mov
sbb
incl
pop
mov
push
jle
ret
sbb
add
jae
ds
push
sbb
inc
jg
adc
dec
jno
es
shll
mov
push
push
inc
sbb
insl
aas
ret
dec
call
jl
addl
bound
sbb
flds
jo
jle
push
cld
cmp
add
add
ja
rolb
out
xor
pop
in
push
repz
mov
or
sti
jb
addl
jl
or
jbe
xchg
add
addr16
jmp
mov
call
stos
stos
add
push
out
adc
lock
add
adc
mov
scas
xor
inc
cltd
sarb
ret
xchg
dec
mov
pop
sti
cmp
lea
and
shl
stos
lea
mov
sub
push
add
sti
xchg
cmc
cli
cmp
ja
cld
mov
mov
lock
jg
jbe
inc
inc
daa
jne
aas
push
push
push
lock
or
add
add
or
adc
mov
jbe
shlb
mov
mov
rcrb
jbe
jmp
cmpb
dec
and
inc
or
outsb
les
int3
jb
push
jae
test
sti
sbb
lock
stos
add
or
jnp
push
pusha
hlt
or
push
mov
dec
and
adc
dec
fcoml
aad
mov
enter
into
sbb
jmp
movsb
shll
mov
or
pop
or
je
pop
out
cmp
test
xchg
or
pop
or
push
fstps
shrb
das
mov
pusha
mov
lds
iret
add
push
push
mov
mov
push
scas
movsl
dec
popa
repnz
mov
mov
shll
jle
sbb
push
jg
or
inc
mov
stos
rep
inc
inc
mov
pop
cmc
mov
test
pop
pop
push
movsl
mov
outsb
jmp
ss
in
das
mov
mov
push
cmp
imul
dec
iret
pop
fisttpl
in
adc
ret
leave
outsl
repz
adc
nop
loopne
sbb
add
call
jmp
andb
loope
add
jg
mov
jb
jae
xchg
enter
mov
mov
pop
xor
adc
insl
in
outsl
cmp
and
loopne
xchg
mov
xorb
std
push
inc
sub
ficomps
cmp
push
data16
lods
jmp
shll
jmp
dec
adc
cmp
mov
testb
mov
je
inc
inc
xor
sub
adc
push
adc
jne
jmp
andb
lahf
fimuls
popf
or
inc
dec
std
pop
enter
popa
lea
mov
shrl
and
cmpsb
mov
add
sbb
xchg
mov
inc
divl
lock
mov
daa
sbb
stc
ja
pop
shrd
out
gs
mov
cld
mov
push
repnz
das
cld
dec
test
xor
or
enter
idiv
fnsave
test
or
inc
or
mov
jmp
rclb
add
push
movb
lahf
dec
aas
cmpw
cmp
dec
call
rorl
sbb
mov
lods
and
or
pop
push
mov
popf
or
das
sub
adc
add
mov
mov
in
in
nop
adc
pop
sbb
or
inc
cmp
and
add
jl
daa
add
pop
add
fisubrs
subl
mov
sub
or
xor
js
stos
pcmpgtb
mov
fldl
stos
xor
test
xchg
ds
push
jecxz
pop
dec
je
inc
inc
cmp
and
cmp
adc
xor
jmp
repnz
inc
cmp
scas
jge
dec
in
sbb
and
jno
mov
rcr
cmpb
hlt
xchg
std
add
push
jecxz
dec
jb
cld
jo
in
shlb
or
shrb
movhps
mov
pusha
jae
push
mov
add
shrb
syscall
pushf
and
push
adc
push
or
mov
add
ret
aaa
or
fbld
lods
into
or
movsb
lcallw
cmp
or
mov
aad
add
jae
add
push
or
cli
add
imul
rolb
sbb
lods
movl
incb
or
out
jnp
add
mov
inc
add
ds
push
dec
lods
adc
or
adc
lea
mov
mov
clc
mov
incl
jne
sar
dec
cmp
test
aad
jbe
push
pop
mov
cmp
dec
pop
and
loopne
call
pop
subb
add
shll
pop
mov
sub
sub
stc
loopne
cmp
pushf
mov
pop
add
cld
idiv
mov
or
hlt
mov
push
or
and
mov
push
push
inc
cs
pop
dec
imul
ss
clc
and
sti
add
mov
jnp
add
roll
jo
and
cmp
je
mov
and
sti
sbb
lret
shr
not
and
rcll
dec
add
sbbb
dec
loopne
cmp
fs
xchg
xor
xchg
repnz
pop
or
cmpl
or
jmp
push
pop
roll
xchg
ja
jbe
pop
bound
outsl
or
lret
pusha
mov
mov
mov
mov
push
jae
dec
jbe
mov
sbb
mov
jmp
dec
adc
lock
cmp
dec
stos
push
mov
sub
adc
push
mov
cld
cmp
or
mov
pop
inc
or
movsb
shl
inc
testl
mov
mov
push
call
aas
gs
push
or
xor
movsb
mov
dec
xchg
hlt
mov
push
decb
adc
inc
xchg
dec
lahf
jno
pusha
add
and
ss
dec
mov
or
and
adc
push
mov
sub
push
and
insl
loope
aam
cli
push
pop
dec
adc
push
lea
mov
loopne
lea
cmpsb
dec
aas
ror
or
inc
mov
popf
add
int
popa
cli
dec
sub
and
lock
xchg
cli
outsl
inc
sar
dec
cmp
jge
sub
daa
lock
mov
shl
call
pop
pop
mov
push
push
jmp
sbb
and
decb
add
das
mov
jno
jns
insl
xor
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
in
int3
jno
jle
outsb
jmp
es
xor
out
pusha
test
sub
test
je
cs
addl
shrl
push
cmp
scas
test
mov
mov
mov
mov
inc
mov
mov
jo
push
mov
lcall
pop
mov
arpl
xor
and
or
je
mov
xor
rorl
jge
xchg
dec
scas
into
jne
int
and
mov
pop
test
jl
shl
inc
jmp
mov
stc
xchg
sub
cmc
mov
incb
cmp
jle
pop
repnz
adc
or
lret
ret
jge
add
sub
sbb
loope
movsb
cltd
fdivrp
add
pop
mov
decb
jne
repnz
and
jmp
dec
sub
adc
or
push
insb
xor
sub
mov
jp
jp
sahf
pop
je
jns
ljmp
jp
enter
jle
mov
scas
xchg
fisttpll
cmp
jge
mov
sub
dec
sti
or
into
shr
or
adc
push
or
das
push
or
pop
addb
mov
sbb
dec
push
xchg
mov
lret
sbb
add
inc
add
cld
ds
sarl
lea
jne,pt
cmp
cmp
or
gs
mov
lea
adc
lahf
and
jne
mov
ret
jge
push
mov
mov
jle
and
les
cltd
pushf
mov
xor
pop
or
fucomp
jmp
mov
jne
add
fisubs
or
cs
repz
add
dec
inc
mov
gs
mov
add
test
xchg
addr16
rclb
addb
sbb
inc
xor
test
imul
add
xor
outsl
inc
or
sti
ds
or
out
jns
pop
adc
inc
fwait
test
notl
les
jo
cli
ja
lea
dec
in
pop
or
orl
or
inc
cld
lock
mov
roll
sub
loope
sahf
and
add
xorl
add
in
add
mov
dec
or
pop
inc
std
clc
mov
fs
inc
test
mov
pop
test
and
ja
mov
jne
or
mov
and
pop
add
lret
ret
imul
push
mov
lea
sub
mov
shr
or
cwtl
ds
add
mov
dec
cli
ss
mov
pop
in
jle
cmp
add
stos
or
xor
push
ret
jbe
popf
pop
jp
pop
jl
ds
dec
or
lea
inc
lcall
test
inc
jmp
in
dec
or
cmpb
mull
and
stos
sar
dec
mov
xor
push
pop
dec
hlt
lea
mov
xchg
pop
jg
or
gs
pop
pop
fwait
daa
fsubl
pop
add
xchg
adc
add
dec
push
stc
jae
cmpb
lret
repnz
jno
and
and
mov
pop
test
in
pop
or
inc
xor
add
xor
inc
and
hlt
lods
jmp
xchg
arpl
sub
mov
dec
addr16
mov
jbe
mov
mov
adc
mov
ss
inc
cmp
inc
movsl
dec
lahf
arpl
je
repz
and
mov
xlat
dec
push
in
fs
add
bnd
outsl
sub
and
and
or
fstpt
test
jo
aam
add
pop
mov
add
cmpps
xchg
xchg
nop
add
xchg
dec
bnd
mov
add
inc
seta
lods
add
pop
push
sub
jl
imul
sbb
or
data16
pop
cmp
sub
jmp
inc
push
aad
xlat
sbb
jo
push
dec
add
push
push
xor
mov
jnp
fnsave
jecxz
lds
jg
mov
push
jmp
mov
mov
mov
outsb
xor
pusha
xor
insl
dec
aad
adc
mov
mov
std
adc
popf
ret
rorl
mov
add
lock
cmp
jmp
jecxz
mov
xchg
je
cwtl
and
clc
add
fistpl
ljmp
lock
cmp
fdivl
or
es
jle
cmp
lea
mov
cli
pop
pop
mov
in
frstor
cmp
mov
mov
adc
push
mov
push
dec
push
mov
jns
or
mov
jle
fs
adc
mov
jbe
lock
lods
aas
jb
cmp
cwtl
add
pusha
push
or
syscall
add
and
ret
stos
or
test
push
cli
fucomip
pop
sub
test
jge
inc
lahf
mov
je
outsl
loopne
ret
imul
inc
push
push
loop
and
or
mov
lock
popa
cwtl
scas
xor
xchg
or
and
pop
ret
mov
cmp
jbe
or
or
dec
je
jmp
test
jne
lods
mov
xchg
xor
xchg
mov
les
adc
lock
fcompl
mov
sub
sbb
outsl
leave
loope
or
mov
mov
scas
stc
or
lock
push
or
mov
adc
repz
movl
add
jnp
or
notl
bound
mov
loop
pop
push
dec
sbb
sahf
cmp
sbb
fwait
mov
ret
or
ret
fbstp
mov
dec
lahf
icebp
lcall
cmp
jbe
push
dec
mov
or
fcompl
add
xor
into
inc
pusha
outsl
jb
or
xor
daa
dec
jle
test
inc
xorl
jl
cwtl
adc
subl
es
orl
mov
mov
cmp
into
jle
je
adc
sub
test
cld
mov
shl
and
inc
jg
push
or
push
push
xchg
cmp
pop
pop
clc
lret
rorb
xor
out
lea
out
add
cmp
pushf
cmp
adc
aam
popa
pop
or
je
movsb
movsl
add
pop
adc
lods
push
jo
jne
mov
notb
cli
rcrl
jo
mov
jle
loop
rorl
sbb
push
sbb
mov
xor
adc
inc
cmp
add
xor
jne
mov
or
insb
mov
push
clc
icebp
fstpt
jmp
sbb
shlb
inc
or
push
mov
or
add
mov
push
lret
xchg
xor
sbb
mov
pop
fldenv
xor
jmp
jmp
shll
cmp
cmpsl
inc
shrl
push
sbb
in
stc
arpl
jmp
xchg
int
cmp
shll
sbb
scas
and
dec
jae
add
sub
js
pushf
inc
stc
sub
xor
loop
add
test
xor
mov
test
jne
mov
pop
add
jne
inc
inc
jmp
mov
dec
dec
add
push
jge
or
push
imul
inc
addl
lea
shrb
cmc
push
pop
jae
mov
pop
jle
cmovo
inc
inc
lea
sbb
or
push
sbb
jb
xor
ret
sub
add
shlb
fucomip
scas
jmp
andl
inc
mov
mov
outsl
or
pmullw
or
sub
inc
inc
loope
add
jne
pop
hlt
stos
jecxz
jle
add
or
sar
std
lea
jbe
adc
enter
psubb
jle
lahf
shr
jae
movsl
add
cmpsl
jb
mov
stc
push
push
jne
imul
mov
mov
cmp
ja
cmp
jbe
push
lock
ret
mov
cmp
lret
inc
cmpb
pop
lcall
inc
add
mov
rcrb
movsl
cmp
cmp
mov
lea
sar
flds
fdecstp
inc
xor
je
sub
daa
pop
mov
popa
aam
jecxz
push
jns
sub
aas
pop
cmp
add
subb
loop
fdivrl
icebp
or
dec
push
in
and
out
idivl
in
mov
andb
je
push
add
sbb
push
jmp
jecxz
andl
add
or
jae
jecxz
negl
jae
pushl
stc
hlt
rclb
clc
data16
sti
or
call
or
ss
cmp
and
ret
sub
inc
je
cmpsl
imul
xlat
in
adc
push
pop
out
add
or
rorl
pop
xlat
enter
iret
mov
cmp
aaa
test
xor
xchg
icebp
test
es
push
inc
pop
test
mov
int
std
pop
enter
pusha
jb
add
mov
sbb
sbb
mov
or
dec
mov
push
mov
mov
cmp
pop
jno
add
add
push
push
mov
sbb
fnstcw
add
xor
inc
cmp
jl
jno
lret
pop
sbb
scas
push
mov
xabort
mov
or
xchg
punpcklwd
test
or
rclb
or
dec
ret
paddd
mov
ret
xor
clc
dec
mov
decl
repz
cmp
cmp
jmp
mov
and
fwait
push
les
pop
push
or
jno
jle
pop
and
add
sbb
dec
into
mov
and
pop
xchg
xchg
push
adc
std
movsb
mov
rcll
das
sbb
pop
add
test
jl
pusha
or
fidivl
mov
pop
add
mov
lds
iret
xchg
das
iret
add
popa
fsubl
and
inc
jmp
fisttps
cmpsl
stos
and
add
adc
mov
ret
je
push
sub
pop
push
pushl
lds
scas
test
ret
xchg
add
inc
pushf
les
mov
cmp
cs
ret
add
or
dec
pop
mov
popl
xchg
cmpsl
daa
inc
xor
cli
stos
inc
pop
or
add
mov
push
xchg
mov
push
inc
loope
movsb
lds
cmp
dec
out
adc
jmp
push
test
mov
dec
cmp
inc
adc
cmp
xchg
push
sbbb
or
fmuls
push
add
mov
cmc
adc
je
adc
repz
mov
inc
mov
jmp
mov
jne
mov
add
sub
cmp
inc
das
xor
jle
aad
add
xchg
adc
add
add
sbb
adc
or
lds
and
adc
cmpsl
jp
push
decl
sbb
lods
cmp
les
ja
clc
mov
mov
add
or
lea
mov
inc
and
push
and
cld
mov
jge
sub
je
or
je
push
fiadds
cltd
lods
pop
cld
adc
xchg
or
jmp
sub
lods
mov
cmp
jmp
dec
jne
sbb
pop
cld
rorb
cld
pop
add
mov
ja
jne
or
dec
mov
jo,pn
cmpb
mov
adc
cmp
and
mov
mov
pop
into
mov
sub
adc
subb
pusha
and
in
mov
lret
jge
or
add
sbb
add
sbb
or
aas
lock
in
adc
jg
rcl
push
jle
mov
dec
decl
adc
inc
add
mov
in
jmp
mov
jmp
mov
push
shl
add
pop
mov
iret
cmp
cmp
je
idivl
cmc
fidivs
test
add
or
or
inc
pusha
mov
xor
jge
inc
inc
cmp
pop
es
push
inc
cmp
adc
movsb
fbstp
or
sbb
imul
ret
cmp
lret
int
dec
or
arpl
aad
push
enter
fsubp
mov
jmp
xchg
sahf
push
mov
test
or
add
sahf
nop
int
es
or
cwtl
ret
dec
ss
push
out
aaa
sub
inc
inc
add
jmp
cmp
push
and
jecxz
ds
lret
push
call
imul
iret
insl
loopne
sti
jo
loopne
and
insb
repz
rorb
push
aaa
add
sbb
hlt
out
loopne
adc
pop
hlt
jmp
cmp
jg
xchg
fucomip
je,pt
or
inc
je
dec
je
dec
jne
std
std
fbstp
inc
jmp
cmpb
jne
or
xor
inc
stos
and
pop
cld
jnp
andl
fsub
jmp
inc
xchg
lahf
in
bnd
insl
push
je
icebp
jmp
mov
psubq
push
decb
sti
adc
xchg
movsl
nop
fwait
cmp
dec
cmpsb
jno
add
daa
mov
roll
xor
sti
xor
push
cltd
cmp
les
out
jne
pop
adcl
mov
xor
stos
outsb
push
out
les
arpl
in
xor
inc
mov
sbb
add
pop
in
jge
out
push
cmp
je
or
roll
mov
outsl
jg
add
arpl
sub
incl
pop
fsubr
cmp
imul
mov
add
jmp
push
push
jle
cs
pop
das
in
jmp
inc
jle
xchg
js
sbb
or
lahf
sub
pop
inc
call
fisttpl
mov
adc
cmp
js
push
mov
pusha
or
dec
leave
and
mov
loopne
popf
mov
jle
nop
pop
add
mov
and
mov
inc
mov
mov
push
pop
add
rolb
mov
push
inc
fcmovnu
insb
cmp
in
mov
sti
gs
repnz
add
push
gs
pop
aaa
or
xor
add
sub
push
daa
and
fs
add
dec
adc
inc
stos
stos
shrl
push
daa
inc
mov
inc
rcrb
add
jbe
dec
adc
andb
lods
shll
or
and
jo
out
mov
sub
loopne
jle
ljmp
dec
inc
shlb
jo
xchg
mov
adc
call
mov
shlb
lea
aas
push
jmp
add
adc
ds
cmp
ret
inc
imul
jp
addb
fdivrs
xchg
add
adc
pop
stc
push
ret
imul
jae
add
cmc
mov
mov
cmp
pop
ret
and
test
js
outsl
sbb
imulb
pop
mov
cwtl
fisubs
xor
outsl
aaa
mov
pop
test
inc
add
and
push
pushf
inc
jge
jnp
mov
pop
jne
mov
inc
push
cmpsl
and
mov
dec
jg
lret
cltd
pop
je
inc
cmp
out
popa
sub
pop
ss
cmp
jae
mov
jmp
pop
loop
pop
ret
cmp
ja
and
movsl
lcall
sub
inc
mov
mov
and
mov
mov
jg
or
inc
dec
jne
xor
jmp
arpl
push
frstor
xor
add
inc
ret
jo
add
add
int3
jne
imul
test
dec
push
push
mov
cmc
idivb
enter
pop
push
pop
call
out
andl
pushf
xor
test
je
pushf
jne
sbb
push
or
xchg
nop
mov
shlb
insl
in
mov
or
incl
mov
ret
rolb
call
daa
pop
adc
filds
add
adc
push
push
pop
outsl
fwait
and
jg
lret
pusha
or
jb
lahf
aam
js
jp
iret
scas
mov
pushf
xchg
jne
stos
arpl
outsb
jmp
jns
outsl
cmp
add
lmsw
pusha
inc
fsubs
jp
dec
sub
push
fidivrl
or
and
fmuls
repnz
ret
insb
push
mov
xor
xlat
pop
sbb
rorl
jne
outsl
cmp
lahf
add
xor
faddl
inc
jns
and
sbb
leave
add
ficomps
arpl
and
loopne
inc
fldl2t
add
ja
dec
sbb
roll
lods
neg
mov
mov
ret
in
sbb
jo
cmp
iret
add
jbe
insb
shl
add
incl
jmp
lea
shl
jmp
fwait
inc
pusha
js
jnp
add
cmp
add
mov
lock
fists
inc
and
xchg
into
popf
sub
rolb
sti
aam
pop
and
or
jmp
ret
fsubrp
call
cmp
or
inc
jmp
or
adc
adc
inc
jns
outsb
push
in
jb
or
adc
dec
daa
sbb
js
dec
dec
push
enter
in
adc
loopne
jne
ljmp
jne
mov
daa
sbb
push
lock
mov
and
xorb
xchg
cltd
inc
movsl
int
dec
fsubrp
mov
cltd
int3
xor
cmp
xor
jmp
or
hlt
push
jle
xchg
jae
addl
je
jnp
test
jmp
pop
ret
ret
rolb
fwait
cmp
dec
add
or
push
insb
mov
testl
test
inc
mov
adc
clc
push
xor
dec
sahf
adc
stc
cmp
jns
dec
xchg
cli
xor
xchg
push
movsb
out
scas
mov
lds
and
je
push
fprem
cwtl
lea
add
pop
outsl
in
mov
lods
rorl
test
xchg
and
xor
sub
fisubrs
pop
add
test
cwtl
or
adc
movb
or
or
sti
xor
cmp
dec
popa
add
clc
repz
sbb
sbb
das
addb
incl
add
jl
lret
cmp
leave
inc
inc
adc
add
daa
aas
rorl
or
dec
lcall
mov
adc
sbb
xor
xchg
fnstenv
xlat
leave
or
mov
cmpsl
pop
pushf
outsb
sbb
rol
pop
cmp
daa
lea
call
push
jmp
jmp
add
inc
cmp
lock
mov
hlt
cmc
les
cs
add
and
pop
clc
adc
lock
fdivl
fmull
insl
lock
mov
int
cwtl
mov
in
xchg
pusha
and
clc
adc
mov
dec
aaa
rol
add
mov
aam
xchg
movsbl
repnz
je
aas
mov
pop
sbb
mov
cmp
aam
or
adc
out
daa
push
mov
or
add
cmpsl
mov
cmp
or
xor
scas
std
or
hlt
and
sub
or
sbb
in
sbb
incl
cli
cmp
jne
dec
mov
inc
stos
mov
in
in
adc
aad
jb
mov
inc
or
jle
ret
jb
sbb
fwait
out
icebp
mov
clc
cld
and
adc
push
mov
inc
adc
pop
dec
mov
mov
das
std
sub
dec
and
ss
cmp
adcl
mov
cwtl
add
or
fnsave
or
sahf
movsb
sahf
ret
push
stos
inc
add
scas
jge
in
pusha
shlb
rolb
divb
lret
dec
std
xor
push
add
sbb
ss
xchg
adc
inc
jl
adc
or
sub
enter
jnp
add
enter
dec
inc
jle
pop
dec
cmp
pop
add
jns
neg
daa
sub
adc
call
movsl
fs
pop
idiv
jnp
cltd
or
mov
sub
or
dec
xchg
add
adc
cmp
fsubs
mov
add
inc
push
lods
sub
loopne
sbb
jns
xor
adcl
jmp
xchg
adc
imul
adc
pop
pusha
add
jne
movb
pushl
sbb
call
mov
sbb
incl
xor
jmp
add
cmp
dec
push
aas
jmp
pop
mov
out
xadd
pop
je
neg
jmp
pop
cmp
jl
test
jnp
pop
push
push
sub
outsl
ret
mov
push
or
shrb
lock
push
push
aad
icebp
push
iret
sahf
in
arpl
xchg
push
cmp
pushf
rcrl
add
mov
pop
mov
sub
sbb
jo
jae
stc
and
push
adc
dec
inc
lret
inc
movsb
add
xor
addl
xchg
jne
pushf
andb
jns
or
leave
rcll
xor
or
sub
jne
out
fsubs
sbb
loop
sbb
lret
pop
bound
and
and
xchg
sbb
addb
dec
pushw
mov
insb
inc
pop
pop
mov
enter
aaa
sbb
adc
bound
pop
sbb
enter
pusha
jbe
stc
push
jns
and
inc
jmp
and
bound
lods
mov
arpl
add
loope
movsb
adc
adc
outsb
mov
std
dec
adc
cmp
sbb
int
xchg
jmp
and
rorl
pop
into
jns
out
pop
and
sbb
pop
jg
sub
inc
cmp
mov
mov
into
or
xlat
les
adc
nop
loopne
call
adcl
adc
sbb
mov
dec
and
lods
loop
je
repnz
inc
scas
push
or
xor
add
fisubrs
inc
add
sbb
push
cmp
es
dec
shl
aad
xchg
decl
stos
fldenv
xchg
fs
fmull
jnp
mov
cli
fbstp
enter
xor
pushf
je
push
adcl
repz
or
or
lret
cmpsb
inc
pop
aad
or
jecxz
cld
or
rorl
inc
push
lea
inc
add
lahf
or
add
add
repz
add
movsl
adc
aaa
inc
jg
movsl
xor
mov
test
into
icebp
popa
rorl
sbb
or
sub
leave
sbb
push
dec
out
cld
xor
movsl
xor
cmp
xchg
cmp
push
and
dec
jmp
test
inc
lret
jb
mov
popa
push
fwait
xchg
and
inc
rdtsc
add
or
lods
pop
fcmovne
pop
jle
inc
lret
push
lea
int3
sar
xchg
push
push
push
lsl
lsl
mov
lea
in
inc
sbb
enter
shr
aad
or
std
and
add
jge
push
jl
je
sub
dec
or
inc
or
pop
pop
jne
repz
adc
push
ja
xchg
loopne
insb
mov
addb
cltd
cmp
add
add
adc
push
clc
adc
and
cmp
xor
add
lea
shlb
inc
call
add
push
pop
cltd
inc
adc
pop
xchg
shr
pop
or
jge
mov
aaa
icebp
fimuls
fbld
dec
or
adc
cwtl
push
pushf
pop
add
pop
into
or
and
call
rcl
adc
andb
andl
lock
push
or
jecxz
enter
pop
push
and
dec
or
adc
jae
ds
js
lea
testb
xchg
repz
dec
leave
add
and
cmp
xor
or
lock
pop
fs
inc
mov
pop
dec
imul
cmpsl
xor
les
fisttpl
fsub
inc
mov
jg
adc
mov
push
movsb
push
xchg
inc
jge
jno
mov
insl
iret
inc
fsubrs
fdecstp
ret
xchg
lock
clc
push
mov
sar
jecxz
mov
das
into
adc
rcr
add
mov
cmp
jae
cmpb
shr
sbb
jmp
popa
xorb
and
mov
pop
push
addr16
sbb
cmpsl
mov
xorb
imul
and
sub
or
aam
cmp
adc
and
mov
jg
inc
or
fwait
adc
adc
popa
cmpsl
arpl
and
xor
cld
arpl
ds
insl
ja
dec
ljmp
roll
int
orb
mov
or
sbb
add
cs
push
insb
and
pop
or
sub
sbb
pusha
popa
mov
mov
xchg
call
test
pushaw
or
add
out
jnp
sbb
cmp
inc
or
dec
adc
adc
rorl
mov
repz
and
dec
jne
mov
push
icebp
push
pop
inc
cmp
adcl
cmp
cmp
sbb
cmp
lea
leave
repz
shlb
adc
shl
push
cmp
je
inc
jmp
hlt
push
and
dec
andl
sub
ret
xor
fsts
adc
mov
or
rol
jnp
lock
jne
add
pop
lea
add
mov
je
cmpsl
xor
sahf
mov
movsl
push
dec
and
mov
aaa
add
pmuludq
jle
dec
arpl
inc
neg
mov
or
jbe
inc
sbb
movsb
out
and
imul
popf
outsb
insb
mov
mov
xor
dec
cmp
je
cmp
je
inc
imul
inc
mov
jmp
lea
inc
mov
adc
bound
ss
or
xchg
cmp
xchg
cmpsl
cmp
sbb
call
xchg
and
push
dec
lods
add
lret
pop
add
outsl
jne
pop
jmp
dec
insb
and
push
pop
je
popa
jae
paddsb
sti
jnp
inc
inc
icebp
mov
jno
cmp
icebp
mov
inc
gs
jp
popa
push
xchg
push
into
aad
mov
mov
test
pop
inc
or
imul
push
push
imul
test
dec
mov
cmp
pop
bsf
and
adc
lock
pop
inc
fimull
mov
das
cmp
aaa
inc
mov
add
cli
jge
push
rolb
jnp
inc
incw
mov
inc
inc
pop
aad
into
mov
sub
inc
cmpb
inc
xchg
fisttps
inc
mov
testb
sbb
lret
or
cli
sub
int3
popa
dec
ja
rol
daa
jo
lcall
xchg
test
loopne
push
add
xchg
pop
das
enter
dec
clc
mov
add
scas
mov
mov
inc
filds
dec
sbb
add
cmc
and
sub
and
imul
add
push
mov
sbb
xchg
in
ds
or
jmp
rorl
push
inc
adc
push
adcl
rcrl
add
pop
add
and
jnp
insb
sbb
fidivl
sbb
push
aas
pushf
or
addl
pop
and
adc
add
cmp
xchg
xchg
mov
adc
data16
pop
push
push
or
sbb
xlat
lcall
ret
cmp
out
inc
inc
ljmp
repz
or
dec
push
adc
ret
push
out
mov
mov
or
call
clc
sbb
cmp
fstpl
jmp
xor
or
jge
and
push
test
dec
or
andl
dec
push
push
push
cmp
cmp
push
test
pusha
inc
inc
or
cmp
jge
lahf
rorl
or
pop
bound
sub
inc
aad
popf
and
or
push
outsb
push
iret
sbb
inc
std
add
and
pop
aam
inc
xchg
sbb
jne
mov
xor
sbb
test
pushf
or
pop
dec
and
push
xor
inc
fs
add
les
mov
movb
mov
push
addb
ret
cltd
dec
fcoml
inc
or
daa
rorb
pushf
pop
mov
fists
mov
sbb
push
or
mov
mov
in
xchg
shl
cmp
pop
lea
aas
shll
pusha
or
pmaxub
pop
sar
stos
xchg
jl
mov
dec
xchg
fwait
adc
outsl
push
ds
inc
mov
loop
mov
xchg
cmc
cmp
std
dec
and
inc
inc
or
jmp
mov
or
adc
mov
inc
inc
sub
add
mov
lea
jne
and
loope
test
add
negb
inc
lahf
or
cmc
mov
sub
iret
pop
push
int
lds
push
push
orb
filds
jne
or
add
addb
out
clc
sti
add
jno
xor
int
and
pop
inc
push
imul
push
ljmp
add
pop
decb
mov
mov
call
test
sub
add
push
and
sti
push
push
mov
mov
and
mov
cmp
je
int
mov
mov
gs
das
jl
add
out
or
mov
fisttpl
call
sbb
ret
popl
js
jle
fs
cmpl
cld
sarb
in
add
cs
mov
add
or
loopne
rolb
or
pop
ret
push
inc
xor
pop
inc
mov
and
hlt
and
pop
mov
leave
sbbb
dec
enter
or
mov
pushl
orl
popa
lea
arpl
lea
testb
push
pop
pop
pop
orb
xor
dec
mov
mov
fidivl
add
push
sbb
jb
sub
mov
out
pop
stos
or
or
mov
jmp
fidivl
pop
jmp
xchg
jmp
mov
cmp
push
sub
and
sti
sub
sbb
ret
insl
add
inc
mov
sub
addr16
push
gs
mov
mov
dec
ljmp
pop
clc
pop
lret
sbb
mov
stc
push
mov
cmp
icebp
cwtl
cmp
xchg
xor
sbb
flds
loopne
xor
cmpsl
es
cmp
xchg
push
packssdw
das
cld
cmp
mov
sub
arpl
mov
inc
cmp
sub
nop
in
jmp
cmp
add
push
mov
pusha
fcompl
xor
frstor
cmpsb
sbb
pop
pushl
je
sub
loopne
nop
popa
dec
mov
xchg
inc
push
sub
ss
aad
adc
adc
inc
sbb
inc
xchg
lock
jg
ss
jmp
or
btc
push
ja
adc
pop
dec
fsubrl
and
insb
adc
push
pop
lods
mov
cmpsb
movsl
jb
add
mov
ds
mov
add
gs
mov
and
jl
xor
cmpsb
push
cmp
jge
add
in
xor
loope
pop
mov
and
or
cmp
loope
pop
pusha
dec
sbb
rcrb
adc
push
rclb
cmp
inc
mov
bnd
or
inc
or
ret
xchg
or
popa
and
jo
aam
ret
shlb
cmpb
lahf
jmp
pop
test
rcrb
or
push
adc
daa
push
ja
push
insb
mov
lea
gs
jo
xchg
jb
push
push
test
jmp
mov
push
or
enter
cmp
mov
push
pop
mov
jb
addb
inc
cmp
mov
sbb
aad
inc
fmulp
jp
push
jns
xor
pop
orb
fbld
xchg
and
sbb
add
ss
push
and
push
xchg
pop
sbb
push
pop
andl
loop
push
xchg
arpl
lea
adc
push
or
or
imul
xor
xor
loopne
mov
cmp
jns
scas
sbb
int3
lcall
cmp
fistpll
mov
repnz
loopne
or
xor
and
mov
xchg
jg
cmpsb
imul
add
fwait
je
icebp
fbld
jmp
rolb
faddl
mov
fists
into
and
and
repz
repnz
pop
sti
pop
nop
push
repnz
adc
sub
push
repz
or
adc
imul
and
psrlq
pusha
or
js
ret
mov
push
lret
add
add
jl
pop
ret
lea
sbb
arpl
lds
stc
icebp
movntps
sub
clc
sbb
lds
cmp
in
xchg
or
test
lea
test
pop
push
bound
jmp
nop
xchg
leave
clc
shl
mov
add
mov
jae
imul
mov
call
lcall
dec
je
dec
jne
push
push
jmp
or
jmp
imulb
adc
dec
pop
mov
mov
pop
in
dec
or
imul
sti
and
aaa
xchg
xor
pop
stos
inc
repz
dec
push
push
push
orl
xchg
in
xchg
mov
lahf
testb
rol
in
mov
add
jge
shll
pop
jge
pop
add
arpl
fmuls
cmp
adc
lods
and
mov
out
ss
push
shl
roll
in
pop
call
call
jmp
andb
xor
lods
in
mov
test
jl
adc
push
dec
xchg
dec
incl
imul
cmp
loopne
sub
pop
repz
sbb
or
inc
jmp
out
aad
dec
xorb
and
sbb
je
ret
mov
add
or
pop
and
cmp
pop
sbb
and
mov
mov
lret
je
cmp
je
rcll
mov
push
add
fcmove
clc
aaa
adc
and
lcall
sbb
push
shrb
aam
pop
out
dec
add
imul
pop
stos
je
mov
dec
adc
sahf
add
mov
or
test
pop
addr16
or
cmpsl
or
insl
push
idivb
mov
pop
jecxz,pt
inc
cmpsl
or
iret
dec
adc
adc
ds
jae
lods
xor
jecxz
lock
and
inc
pop
xchg
push
pcmpeqw
adcl
shrb
jb
outsl
aaa
dec
clc
sbb
out
jmp
dec
or
in
pop
mov
dec
repz
or
in
mov
lret
cwtl
repz
dec
jl
fdivr
mov
je
icebp
add
inc
push
add
call
jne
cmp
push
inc
dec
jmp
insl
adc
je
or
push
xchg
jne
loopne
ret
sbb
lock
sbb
dec
sub
adc
lahf
sub
jle
cmp
pop
sbb
aas
xchg
int3
repz
and
add
icebp
subb
xor
adc
adc
cmp
add
rcrl
add
mov
push
cmp
lcall
and
or
loope
mov
leave
rorb
mov
std
or
jle
cmp
jl
xor
andb
xchg
xchg
rcll
imull
add
jb
cmp
xchg
cvtps2pi
mov
test
jnp
cmp
inc
fisttpl
push
push
xor
nop
push
lods
std
rcr
inc
pusha
xor
mov
inc
jae
or
jae
shld
shl
push
rcl
and
shl
ret
cmp
dec
or
or
je
xlat
adc
mov
add
adc
push
inc
or
inc
or
fnstsw
jmp
inc
mov
notb
adc
push
add
cs
je
and
sti
sahf
adc
and
add
out
loopne
shl
cs
jle
fstcw
add
and
inc
not
and
pop
or
dec
mov
orl
shrb
mov
or
icebp
push
call
stc
sub
test
push
jnp
push
int
mov
or
add
aad
and
aam
or
movsb
xor
add
mov
in
pop
pop
cwtl
out
fmuls
adc
not
jne
es
or
xchg
or
jns
int3
jnp
xor
push
sub
int
mov
fisttps
pop
pop
test
pop
mov
jno
pusha
jbe
push
hlt
insl
or
mov
adc
fsubrl
and
ret
sbb
inc
dec
lock
or
pop
scas
fwait
add
cmp
scas
lret
int3
or
push
rcrb
add
lods
sub
scas
or
dec
or
pop
or
sarl
ret
add
add
fidivrs
xchg
popa
push
ret
adc
cld
pop
aas
jg
push
not
test
jne
cmc
add
das
add
jge
lea
mov
mov
xor
rolb
bnd
cmp
xchg
nop
sti
scas
int3
in
pushf
cltd
adc
mov
pop
pop
push
mov
icebp
cmp
mov
dec
js
rcrb
insb
and
push
cmp
push
out
arpl
adc
jmp
testb
pop
fcomps
int3
ret
pop
cltd
daa
les
addr16
or
inc
pop
lods
and
loope
je
repnz
das
loop
mov
js
cltd
jmp
mov
cmp
test
mov
js
and
sar
cmp
dec
aam
add
std
enter
inc
btr
stos
xchg
ret
fisttpll
rclb
xor
ret
dec
add
sub
das
dec
or
aad
dec
arpl
push
jge
and
sahf
test
lret
cltd
push
mov
push
popf
inc
and
scas
out
jl
cld
and
out
dec
enter
subb
and
or
rorl
cltd
push
outsb
jne
xchg
gs
mov
mov
cmpb
out
cmp
jl
xadd
flds
pop
or
iret
int
add
dec
aas
jns
mov
sbb
mov
pop
add
add
add
rclb
adc
and
jge
aas
cmp
clc
sti
add
push
jno
dec
pusha
inc
or
cltd
or
stc
ja
mov
es
push
nop
lcall
sti
enter
sub
mov
ja
inc
jmp
inc
clc
pushf
add
add
inc
scas
pop
popf
ds
sub
loope
jge
cmp
mov
clc
cmp
jg
sub
adc
mov
test
inc
mov
scas
div
in
mov
loope
jg
movsl
popa
or
dec
testl
add
inc
push
sarb
test
idivl
add
inc
pop
mov
push
and
daa
pushf
into
add
fincstp
leave
mov
pop
or
or
inc
xlat
push
sub
fisttpll
call
jne
or
sub
xchg
mov
ret
mov
std
in
pop
call
jnp
dec
jecxz
add
sbb
clc
repnz
push
in
jnp
fucomp
lds
leave
pop
adc
imul
dec
or
jle
movb
test
mov
jle
loopne
ds
mov
fistl
test
adc
pop
mov
inc
outsl
popa
pop
movsl
inc
jmp
lock
cld
adc
cmp
jmp
popf
xor
sub
inc
add
mov
sub
shll
push
cmp
mov
pop
lock
lea
pop
or
js
push
adc
cld
stc
pop
ret
jno
shlb
add
sbb
or
mov
mov
mov
and
ss
pop
and
cmp
mov
mov
andb
iret
inc
sub
bsf
pushf
mov
add
je
arpl
or
cmp
jno
or
enter
pop
adc
rcrl
jns
mov
jmp
dec
add
xor
adc
adc
or
inc
or
or
and
dec
loopne
into
dec
adc
leave
mov
shr
movl
jle
fbld
lret
jmp
and
push
mov
iret
cltd
dec
or
dec
sub
ss
add
xor
mov
push
mov
mov
inc
jl
pop
inc
inc
or
test
and
insb
push
inc
xchg
test
add
push
adc
and
or
cmp
mov
xchg
mov
imul
add
daa
dec
outsl
aaa
mov
mov
je
or
pop
jecxz
lock
rcr
push
int3
jmp
sub
pop
lods
test
or
les
jnp
cmp
je
mov
pushl
inc
leave
cs
andb
or
push
xor
jae
call
addb
xchg
push
fisttpll
push
loopne
inc
es
arpl
ja
test
cmp
mov
jo
cmpl
ss
mov
push
mov
push
mov
xchg
mov
lock
loopne
jne
inc
pop
push
mov
out
inc
mov
aad
leave
adc
inc
and
cmp
movsl
cmp
jl
cmp
jg
inc
jmp
popa
cmp
inc
lea
pop
mov
enter
jns
push
repz
add
lock
jo
lods
xchg
je
and
dec
jno
adc
xlat
xor
es
add
xor
inc
test
mov
dec
test
scas
inc
hlt
mov
pop
es
cmp
pop
addss
add
jecxz
int3
or
cmp
cld
pop
cmp
xor
sbb
sub
xor
jbe
iret
and
push
push
jmp
daa
push
sub
cltd
insl
cmc
add
add
pop
or
aam
push
and
nop
xor
jne
adc
pop
mov
or
xor
incl
push
popf
mov
inc
cmp
and
incb
jmp
push
add
icebp
mulb
pop
mov
add
mov
push
pop
ja
mov
clc
jg
dec
sbb
sarb
cmp
jl
fcomip
enter
push
lret
enter
ret
adc
mulb
jg
jle
push
xchg
sarb
xchg
push
xchg
xchg
nop
ja
xor
xlat
out
adc
rcrl
cltd
or
ja
adc
push
daa
in
add
push
jp
andl
mov
aam
pop
jmp
adc
sbb
rcl
imul
incb
sar
stc
pop
aas
test
push
add
lea
notl
sbb
push
sbb
push
pop
sub
add
cmp
jmp
sbb
and
movsb
cmp
mov
rolb
sarl
cwtl
cmp
jle
sub
jmp
adc
sarl
or
adc
inc
sbb
dec
fnstenv
sbb
insb
add
inc
sub
sub
dec
xor
adc
mov
pop
or
das
mov
add
or
add
iret
sbb
adc
inc
sub
adc
mov
lret
push
notb
mov
loope
andb
test
sbb
inc
push
xchg
std
sbb
sbb
aad
add
js
add
repnz
es
insl
cmpsl
and
push
add
pop
mov
jl
jle
shlb
push
movsb
mov
push
dec
stc
rcr
mov
icebp
mov
and
int3
inc
pop
pop
lods
push
cmp
pusha
ss
jmp
push
fiadds
xor
stc
loopne
mov
fiaddl
ja
adcb
fwait
sbb
jge
and
cs
insl
jne
jmp
in
or
cmp
cmp
mov
aas
push
imul
and
xchg
dec
aas
sbb
mov
dec
pusha
xchg
mov
sbb
cmc
adc
pop
rclb
das
testb
jge
mov
push
scas
icebp
adc
pop
inc
pushl
pop
sbb
andl
icebp
mov
add
jmp
cmp
cmp
testb
rorb
aad
das
jmp
mov
or
dec
bound
or
lock
adc
or
xchg
sahf
loopne
adc
and
inc
pusha
jnp
push
push
xor
mov
adcl
or
pop
dec
lcall
jge
and
push
push
adc
cmp
loope
pusha
popf
mov
push
and
xchg
push
imul
adc
loopne
sbb
lahf
push
sbb
jp
jmp
aas
cmpsb
out
xchg
mov
push
and
xorb
add
jae
outsb
adc
pop
mov
inc
mov
into
aaa
test
test
xor
mov
cltd
dec
mov
loop
cmp
mov
int
das
or
std
scas
mov
mov
mov
add
push
decl
xor
shr
or
mov
xlat
mov
rcl
and
ljmp
arpl
mov
repnz
into
mov
fidivrs
out
shr
or
push
aas
mov
cmp
cmp
adc
xchg
mov
cld
dec
inc
adc
push
add
or
push
adc
lea
movsl
movsl
push
movsl
pop
add
fstl
movsl
or
jbe
hlt
arpl
xor
add
cmp
adc
xchg
test
ds
cmc
enter
dec
add
loopne
jl
mov
out
push
sbb
out
adc
loope
mov
out
add
imul
jmp
mov
mov
cmp
icebp
jmp
cs
sti
jecxz
data16
inc
enter
mov
jge
lds
jge
pop
ffreep
pop
mov
gs
lock
aam
add
in
mov
test
pop
cwtl
and
mov
add
stc
or
push
inc
jmp
push
pop
in
sbb
or
xchg
movsb
psubusb
out
pop
sbb
xor
cmp
iret
dec
and
cmp
add
add
je
test
aam
xor
xor
pusha
sub
pop
jmp
add
popf
dec
pop
pop
adc
push
cmpsl
jl
mov
mov
mov
or
push
lret
repnz
inc
jle
jle
arpl
popf
shlb
gs
dec
mov
or
dec
or
inc
xor
jbe
scas
pop
push
lcall
ret
push
cli
cmp
out
shlb
add
sbb
test
xchg
jecxz
xor
sbbb
inc
xorb
xchg
ficoml
mov
fldcw
adc
sub
cmpsl
out
xor
je
or
loope
inc
inc
scas
sbb
sbb
ficomps
mov
jnp
lea
mov
rol
leave
mov
adc
push
dec
adc
rorb
addl
jmp
mov
cwtl
add
mov
fs
jmp
aas
pop
inc
push
or
pop
dec
adc
in
fstps
jmp
cmp
fcos
mov
fdivs
lds
sbb
pop
pop
dec
pop
xchg
movsl
xor
or
dec
mov
xor
xchg
rclb
sbb
dec
and
mov
test
jg
shll
push
push
pop
xchg
sbb
rorb
push
mov
pop
dec
xor
pop
xor
mov
mov
cld
jbe
cmpb
jl
incb
hlt
jbe
jns
fld
inc
dec
adc
jp
aaa
add
xor
sub
insb
cmpsl
mov
in
sub
mov
out
xlat
add
loopne
prefetchnta
lock
fsubrl
inc
sbb
cmpb
cmp
cmp
aam
adc
leave
aam
xor
mov
dec
mov
lock
fdivrs
pop
cmp
loope
and
rol
in
lret
jnp
jo
fwait
add
ret
xlat
and
lret
jno
orb
adc
push
icebp
scas
push
jne
in
lds
jno
mov
add
inc
or
adc
insl
or
push
adc
cwtl
prefetch
outsb
adc
dec
shl
sub
sbb
enter
jle
push
rep
test
push
lcall
in
out
imul
outsb
ljmp
sarb
incb
inc
add
or
and
sbb
sti
xchg
mov
andw
xor
add
add
jmp
lret
pop
data16
mov
out
data16
sub
add
lock
jl
xchg
sar
mov
sub
push
inc
rcrb
mov
jne
push
and
sbb
add
test
into
add
pop
shlb
push
loope
mov
std
subps
iret
inc
jmp
dec
push
cmovg
or
lea
mov
cli
imul
mov
lea
sar
icebp
clc
add
jae
lock
sub
cmpl
mov
sbb
xor
push
movb
outsl
sbb
xor
adc
loopne
loopne
xor
inc
and
clc
or
adc
out
pop
add
mov
cli
adc
inc
js
sub
pop
cmc
add
icebp
pop
pop
neg
sub
xor
or
xor
xor
inc
mov
push
mov
mov
repz
movsl
movsl
sbb
jo
stos
xchg
frstor
jg
mov
mov
mov
xchg
decl
out
mov
jne
xlat
mov
xchg
add
mov
lea
jl
test
repnz
dec
jmp
test
inc
lcallw
add
ret
sub
mov
mov
sbb
pop
lcall
pop
hlt
fldenv
add
andb
inc
sbb
jecxz
inc
sub
sbb
xor
enter
xchg
push
xor
push
cmp
and
mov
and
nop
cmpb
das
xchg
mov
pop
and
xorps
xor
cmpsb
dec
repnz
imul
add
test
add
push
rorl
icebp
and
jo
mov
cmp
jne
and
jmp
andl
adc
or
cmp
outsl
rolb
sub
repz
xchg
ret
adc
jo
pop
ret
sub
push
scas
ficomps
in
inc
leave
stc
mov
sti
clc
and
and
and
lea
aaa
or
cmpl
adc
cli
std
mov
aas
ja
test
test
mov
mov
ja
aaa
addb
lea
test
enter
outsl
push
cmp
push
cmp
into
fs
iret
leave
mov
dec
jno
adcb
call
in
xchg
lock
lock
sahf
jle
add
shlb
and
imul
push
adc
movb
pop
rcl
sar
adc
and
inc
mov
or
or
cmpl
adc
lods
pop
aaa
or
jg
and
shrb
jle
xchg
out
push
mov
or
jg
or
sub
lea
add
fsubs
faddl
fsubrp
xorl
sbb
mov
inc
mov
cmp
mov
xor
sbb
add
loop
loop
xchg
pop
or
or
push
jmp
xchg
por
push
mov
loop
ficoms
cmc
pop
icebp
dec
jae
in
or
add
movhps
add
in
sbb
pop
jg
neg
sbb
ret
sbb
cld
add
sbb
add
pop
loope
rolb
sub
outsb
arpl
mov
ss
movsb
fldcw
or
js
inc
dec
cs
outsl
ret
call
jmp
ljmp
add
xor
pop
add
xor
testb
mov
sub
movsl
xor
in
jl
sti
sub
mov
in
pop
ret
cmpsl
pusha
and
inc
int
ficoms
test
inc
sub
lahf
adc
jae
pop
mov
aas
fld
pop
insb
xchg
enter
rcrb
add
dec
mov
sbb
sub
adc
out
je
dec
js
daa
das
cmp
jne
ss
sub
into
or
jno
mov
pop
push
jne
sub
and
pop
jmp
mov
xor
push
mov
jne
push
mov
cld
movsbl
xor
mov
and
xor
add
push
mov
cmp
jle
push
mov
mov
push
inc
call
inc
inc
jle
mov
imul
or
popf
add
ret
movsb
xor
xorl
shlb
push
inc
test
push
jg
xchg
cmp
je
adc
xchg
repz
icebp
das
add
bound
jb
cmp
jbe
inc
loopne
inc
xchg
and
mov
in
jp
popa
movsl
popf
xchg
adc
or
xchg
imul
add
repnz
or
inc
sub
lock
pop
es
and
fsts
inc
jbe
and
cmp
xchg
pushf
in
and
mov
xor
cmpb
out
pop
inc
or
popa
mov
repnz
dec
cld
mov
fistl
icebp
aam
xor
loopne
dec
aam
lds
int3
shrb
inc
outsl
mov
cmpsb
mov
push
mov
or
pop
and
decl
and
into
xchg
jo
xchg
sete
cmp
lods
jnp
xor
sti
pop
mov
inc
clc
ljmp
adc
lds
cmpsb
outsb
cmp
test
add
jno
cmpl
xor
fistps
jno
dec
ds
xchg
add
fsub
mov
aas
imul
xor
xor
lea
or
rorb
or
inc
add
dec
inc
jmp
das
loopne
clc
fwait
les
or
jmp
sbb
mov
jmp
jnp
jp
jbe
loop
xchg
fdivrp
mov
jae
ret
xor
xchg
inc
pop
or
clc
es
or
andl
das
pusha
mov
mov
inc
adc
fmuls
jbe
je
jecxz,pn
or
pop
sub
pop
loope
or
arpl
fistpl
fcomi
shll
fcom
xor
add
test
imul
sbb
or
adc
mov
scas
and
add
imul
int
add
sbb
bnd
pop
cmc
or
cwtl
stos
leave
xchg
ret
xor
loope
and
je
mov
scas
roll
or
shr
pop
rcll
add
out
add
dec
fbld
adc
jg
lea
xor
mov
pop
mov
jmp
push
les
jne
xchg
rorb
pusha
mov
add
movsl
data16
xlat
cwtl
test
pop
movsb
add
rolb
ret
jnp
jmp
and
cmp
or
ja
mov
fisttpll
adcb
pusha
sub
ret
adc
jno
push
and
and
push
gs
stc
pop
int3
add
and
xor
adc
xlat
cmp
incb
or
pop
ja
or
add
sbb
cmp
cmp
adc
sub
add
cli
xchg
xchg
into
jmp
imul
xor
xchg
push
inc
push
inc
dec
cwtl
mov
add
pop
inc
push
inc
pop
pop
cld
push
push
outsl
fwait
pop
faddl
enter
roll
popa
mov
xor
or
leave
aad
fistl
lock
repz
out
adc
ljmp
lcallw
repnz
add
ja
popa
mov
add
dec
das
xchg
aaa
dec
sarb
idivb
fs
out
pop
es
push
mov
ss
pop
es
push
push
push
stc
xchg
xchg
iret
mov
jne
movlhps
add
sbb
add
push
add
cmp
and
int3
jmp
adc
std
or
sub
jmp
add
or
mov
lods
in
mov
pop
jo
movsb
mov
dec
dec
movsl
xchg
mov
in
push
inc
jge
aam
adc
sub
fdiv
or
fidivs
push
stos
rorb
pop
dec
or
jne
das
ljmp
or
cmc
cmp
mov
sub
adcl
jle
gs
pop
xor
in
mov
dec
xor
inc
xor
repz
sbb
pop
sar
test
adc
jno
test
push
push
adc
xor
cs
push
add
pop
mov
out
sbb
dec
cmc
gs
or
test
xchg
stc
pop
es
cmp
adc
cmp
push
dec
add
pop
pop
xchg
pop
sbb
mov
dec
sbb
fwait
adc
pop
sbb
imul
icebp
dec
ds
loop
jge
push
push
dec
imul
aad
subl
test
roll
test
mov
or
xor
sbb
push
enter
pop
pop
cld
lea
lea
insl
push
jnp
jbe
call
jmp
in
outsb
mov
xor
adc
adc
loopne
cmp
lea
add
add
pushl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
mov
aad
mov
rclb
mov
sub
mov
sbb
jmp
mov
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
ljmp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
call
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
lcall
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
incl
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
or
and
or
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
jmp
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
sti
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
cmp
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
movl
jno
insb
sbb
push
imul
aam
loopne
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
jmp
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
pushl
ficompl
int
mov
mul
ja
outsl
ja
mov
out
sti
jg
xorb
cmp
pop
or
adc
sahf
gs
incl
imul
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
pop
popa
cld
pushl
push
scas
mov
fidivrs
mov
jmp
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
jmp
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
iret
add
lcall
inc
add
push
add
repz
xor
push
add
add
add
xor
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
and
int
pop
add
pusha
push
jo
or
sub
sti
aas
mov
add
sbb
sub
outsb
add
insb
add
jg
pop
sub
sub
insb
insb
adc
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
xor
inc
inc
push
inc
inc
cs
push
push
inc
push
push
jnp
icebp
or
aas
pusha
jle
push
inc
push
sub
jg
incl
dec
jae
jb
arpl
jae
jb
gs
je
jb
sbb
in
div
outsb
je
dec
inc
push
dec
xorl
sub
sub
push
in
fdiv
std
mov
lahf
push
push
mov
jne
imul
orl
mov
push
push
sbb
or
dec
dec
inc
sbb
inc
and
pop
push
xor
cmp
sub
insb
je
imul
mov
movsl
jne
jp
push
mov
outsl
dec
aaa
outsb
outsl
je
or
push
divl
popa
arpl
out
insb
cmpsl
imul
sbb
xchg
jns
je
xor
out
lock
jb
inc
addr16
arpl
cmpsb
nop
xchg
mov
mov
push
gs
das
mov
mov
imul
divb
fs
push
cmp
lock
dec
arpl
fisubs
inc
aaa
insl
and
mov
push
outsl
arpl
ret
push
or
imul
pop
add
add
bound
mov
insl
inc
xchg
insl
insl
pop
iret
jo
divb
cmp
dec
and
sbb
pop
push
cmp
addr16
push
jae
push
xor
shll
add
and
ret
in
dec
decl
shll
ds
jg
push
imul
push
cmp
jb
sbb
imull
sub
aaa
mov
cmp
add
fldenv
lret
rorl
prefetcht0
imul
xor
gs
or
inc
imul
jmp
jb
push
popa
sahf
lods
outsb
bound
aas
clc
out
mov
dec
dec
add
gs
jg
loop
xor
jbe
aas
xchg
push
pop
pop
inc
gs
pop
stos
mov
jbe
add
mov
daa
pop
push
shll
mov
std
stos
insb
popa
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
lss
das
ds
sbb
cmp
pop
pop
push
push
leave
int
pushf
pop
push
adc
pop
push
nop
xchg
rcrb
and
jmp
cmp
cmpsb
scas
inc
add
in
add
decl
stos
sub
shrl
sub
mov
mov
daa
sub
das
xor
sbb
pop
and
mov
js
insb
outsl
imul
pushw
jo
das
das
sbb
add
repnz
ret
bound
insb
xor
xor
ret
cmc
sub
dec
add
ret
or
pop
dec
cmp
mov
xorb
loop
sub
das
sbb
cltd
cwtl
cltd
cltd
ret
and
cltd
adc
test
fsts
movsl
lcall
out
loope
out
lcall
iret
into
enter
imul
shrb
xchg
sti
jg
rol
pop
popf
fdivrl
adc
mov
lcall
sbb
lret
test
fwait
sbb
adc
pop
xchg
adc
fdivp
mov
in
cltd
sbb
ret
shl
popf
and
imul
repz
repz
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
mov
repz
lret
xor
sbb
adc
repnz
fildll
test
jnp
adc
mov
fbstp
pop
xchg
adc
mov
iret
lret
lret
movsl
cli
hlt
std
and
outsl
lock
jb
leave
pop
jno
xor
enter
jg
ret
shlb
ja
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
stc
jmp
clc
in
cld
sbb
cltd
fsub
lock
mul
jg
std
aad
sti
jmp
jmp
xor
ljmp
fmul
cmp
out
idivl
lock
cmc
lock
jmp
in
cltd
add
dec
dec
dec
push
dec
and
xor
leave
dec
mov
jae
pop
xor
cs
insb
jae
das
mov
incl
arpl
arpl
das
roll
inc
addr16
push
aaa
cld
aas
inc
jle
jnp
jno
aad
ja
fs
jo
pusha
or
iret
xor
sbb
stc
ss
push
data16
push
xor
ja
sub
bound
shll
jne
jecxz
or
es
gs
gs
cmp
or
jae
jb
aam
fisubs
cmp
arpl
and
std
add
es
jne
pop
and
add
sti
add
daa
addr16
bound
gs
xor
in
pop
jno
imul
fwait
sub
and
sbb
je
imul
inc
outsl
outsb
outsb
shll
das
xor
aaa
dec
jge
sti
repz
xor
xor
cs
add
outsb
in
cmp
ljmp
jo
and
xor
add
fisubrs
stc
xor
xor
cmp
insl
popa
dec
cmp
cmp
gs
dec
jo
mov
adc
sahf
or
adc
jl
ds
dec
jg
push
rclb
push
ja
or
add
imul
leave
adc
adc
add
sbb
add
add
addr16
sbb
xor
std
int3
inc
fs
mov
pusha
pop
out
in
fnstenv
jl
add
call
into
adc
outsb
jb
dec
inc
insl
std
std
fcoms
addr16
test
or
sub
out
test
aas
inc
dec
push
add
ja
ficoml
cmp
xchg
xor
sub
add
notb
adc
adc
add
data16
add
les
xchg
sub
jg
mov
rcrb
movsl
cmpsb
leave
nop
or
movsb
lods
stos
cmpsb
imul
pop
nop
inc
or
lcall
dec
sti
push
dec
mov
and
add
enter
mov
push
or
loopne
orl
vmread
or
decl
data16
jo
cwtl
xchg
cwtl
dec
rclb
test
dec
mov
imul
daa
sbb
punpcklbw
out
push
cmp
incl
add
cltd
icebp
mov
jp
add
fwait
popa
inc
xchg
xor
xchg
cmp
fimull
add
cwtl
dec
or
loopne
dec
adc
cs
mov
push
lret
rorb
pop
and
sbb
add
inc
add
push
mov
add
mull
push
adc
add
das
and
mov
or
add
sub
jmp
pop
jnp
mov
into
int3
loopne
jg
xchg
add
rcll
add
push
fstpl
clc
sbb
push
pop
push
inc
push
push
loopne
test
pop
inc
imul
pop
js
js
inc
jo
je
fwait
movsl
cmp
outsl
pop
subps
jo
pop
gs
out
bnd
popa
jo
pop
call
inc
cmpl
fildll
cmpl
jne
add
nop
orb
sub
test
movsb
sub
aaa
outsl
adc
pop
xor
inc
mov
bound
pop
ljmp
nop
aas
jmp
add
jl
mov
push
ja
mov
cmovno
cld
ja
dec
dec
push
dec
push
inc
inc
pop
and
les
je
xlat
pop
bound
add
mov
popl
cmp
and
pop
dec
and
jmp
std
cmp
repnz
das
int
icebp
xchg
adc
add
icebp
and
cmp
stos
cltd
icebp
mov
jno
sbb
jmp
cmp
int
fisubl
mov
out
lahf
xor
lea
inc
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
fwait
cmc
pop
out
mov
lret
fst
icebp
or
fistpll
ljmp
movsl
mov
pop
fnstsw
movsb
adc
fnsave
in
lds
adc
int
enter
pop
xlat
xchg
frstpm(287
out
test
data16
lcall
xchg
enter
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
in
xchg
pop
push
xchg
lcall
in
jle
adc
mov
xchg
rclb
test
push
ljmp
fwait
push
xor
rcrb
add
xlat
xchg
jne
lock
jmp
xor
pushf
push
jbe
jns
push
je
mov
jne
xor
jle
pop
loopne
int3
test
jge
jl
mov
jg
adc
xchg
push
inc
add
jb
inc
jle
shlb
popf
dec
add
repz
imul
dec
jne
popf
iret
mov
addl
add
or
stc
ja
jns
cmp
in
jns
in
xchg
push
add
adc
test
cmc
imul
sub
out
mov
pushf
inc
test
cmp
call
jb
enter
test
jmp
add
and
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
add
jbe
roll
dec
inc
dec
dec
add
pop
jae
push
pop
imul
jne
sbb
clc
fidivl
popa
dec
dec
inc
xor
gs
out
xor
dec
dec
and
xor
pop
leave
enter
pop
shll
inc
add
or
aam
imul
pop
push
or
xlat
jnp
sbb
dec
outsb
xchg
ja
jae
jmp
push
adc
cmp
inc
pusha
pusha
and
enter
or
ficoml
shlb
lahf
add
ret
inc
inc
cmovo
add
lahf
cmp
adc
add
inc
sbbl
lock
in
sbb
scas
xor
ret
pop
out
dec
and
mov
inc
mov
test
mov
lcall
add
push
out
xor
inc
sahf
arpl
add
mov
or
add
add
mov
push
sub
loopne
mov
push
xor
adc
insb
movsb
mov
jo
pop
push
enter
and
stos
jle
pop
aaa
push
es
mov
add
pop
es
pop
inc
mov
xchg
inc
jl
test
pop
add
ljmp
addl
sub
cmp
rclb
fwait
test
rorb
cmc
mov
inc
and
hlt
vmwrite
mov
mov
add
ss
in
setne
mov
ljmp
ud0
in
inc
xchg
js
adc
stos
pop
cmpsb
adc
repz
daa
adc
das
jmp
push
inc
add
or
xchg
in
incb
mov
or
paddd
fdiv
dec
ds
sbb
jo
je
pop
xchg
sldt
jo
cmp
stc
insb
lidtl
in
push
xchg
push
popf
lods
fprem
add
pop
push
and
arpl
jnp
inc
adc
add
outsb
jne
jae
add
jle
pop
and
mov
roll
ja
imul
ljmp
add
std
cmp
adc
imul
testl
ja
push
xor
rolb
add
inc
add
push
inc
mov
jno
xchg
pushf
add
imul
push
inc
pop
jmp
add
subb
or
loope
les
sub
and
pop
jno
xchg
sbb
add
inc
inc
sti
and
sub
arpl
insl
fs
gs
jg
and
and
fistpll
addl
and
inc
push
dec
push
inc
push
cmp
out
push
orb
push
and
add
enter
push
dec
inc
adc
push
push
or
inc
popa
fs
push
dec
outsl
je
iret
mov
test
cmp
mov
sub
lahf
lcall
pop
push
mov
push
outsl
and
dec
or
sub
jb
push
pop
add
cmp
arpl
ja
mov
js,pn
jae
ret
xor
outsb
je
and
inc
and
xchg
popa
or
in
sbb
pop
xchg
and
sub
mov
push
or
sbb
test
jl
imul
inc
cmp
rol
test
push
dec
out
xor
rcll
shlb
add
xor
stc
pop
add
lock
lods
sbb
sbb
or
js
or
arpl
xchg
aaa
cmp
popa
pop
sub
and
push
into
ret
pop
das
pop
inc
inc
pop
inc
fisttps
fwait
sub
xor
rdmsr
xor
jbe
sbb
xor
inc
clc
popf
idivb
pop
outsl
jne
insb
imul
mov
sub
and
inc
sbb
fmull
sbb
fwait
daa
xor
loope
dec
ja
push
xor
sub
inc
add
push
out
cs
fists
xor
xor
xor
ss
cmp
aaa
xor
int3
outsb
shll
sbb
add
shlb
aad
jmp
inc
pop
xor
mov
inc
fbstp
jbe
sbb
jae
dec
inc
add
and
ss
adc
mov
dec
push
push
ja
and
les
in
cmpsl
xor
add
sbb
xor
psubusb
xor
in
mov
ja
add
es
xor
inc
addr16
jmp
add
jae
jae
insb
dec
dec
in
or
push
xor
add
cs
jno
pop
jb
inc
in
dec
push
jae
cltd
add
es
cmpsl
adc
lea
dec
fs
fcmovnu
jg
xor
shl
and
scas
inc
addr16
and
aaa
aaa
or
sub
xor
dec
push
push
lods
adc
mov
ja
cmp
ja
mov
push
outsl
jo
js
dec
adc
addr16
and
hlt
jne
outsb
jo
push
push
dec
push
stos
test
inc
push
jbe
xor
inc
adc
mov
add
cmp
loopne
jge
mov
mov
adc
xchg
idiv
imul
xor
out
outsb
mov
hlt
and
jne
aaa
adc
jb
dec
ja
push
inc
jno
sub
sub
push
arpl
push
leave
add
sub
mov
je
insb
std
pop
gs
or
ret
and
pop
push
inc
inc
dec
pop
shr
cmp
in
add
inc
cmp
or
ret
push
outsl
inc
jne
jb
add
seta
push
inc
mov
popa
jge
fwait
pop
aam
ficomps
inc
jae
sub
xor
out
mov
nop
pop
inc
sub
lahf
mov
jno
hlt
insl
inc
imul
test
test
int
mov
push
ret
push
mov
inc
fs
je
jl
rorl
inc
push
gs
xor
push
rcrl
sbb
pop
mov
cs
inc
jne
mov
mov
dec
lret
insl
and
inc
fidivl
cs
pop
fcompl
xchg
sbb
sbb
dec
les
ss
jne
sub
shll
mov
or
imul
ret
data16
mull
movsl
lods
and
mov
arpl
sbb
sub
mov
jecxz
inc
cmp
dec
dec
outsb
scas
mov
sub
sub
imul
pop
bound
fistl
cmp
jb
daa
ficoml
addr16
sub
das
jle
xor
inc
gs
lahf
orb
decb
int3
add
push
push
dec
inc
pop
add
das
rclb
cltd
mov
pop
dec
lcall
test
add
xchg
rclb
xchg
mov
nop
je
cmp
xchg
pop
sbb
inc
cs
int
lock
in
les
nop
xchg
pop
js
inc
sub
push
xor
cld
xchg
push
push
mov
das
nop
and
fs
sbb
xchg
test
jl
dec
push
sbb
hlt
nop
fs
or
nop
xchg
push
sub
sbb
inc
sahf
mov
fs
and
mov
push
mov
xor
les
pop
daa
xchg
pop
lea
lock
dec
push
mov
nop
and
fs
dec
sbb
fmuls
nop
or
nop
jl
testb
dec
loopne
das
xor
das
js
enter
cmp
enter
mov
mov
imul
imul
add
cmpsb
mov
xchg
mov
cs
xor
nop
mov
test
int3
and
sbb
hlt
rolb
gs
cmp
or
push
jo,pt
dec
lea
data16
mov
mov
outsb
sbb
subl
enter
push
rorl
push
addr16
sti
iret
xor
outsb
arpl
cs
xchg
gs
push
jb
daa
dec
outsl
arpl
leave
jp
sbb
or
cmp
push
dec
push
dec
pop
imul
je
ja
insl
stos
insl
data16
jo
xchg
cmc
mov
jae
insl
jo
lea
mov
cs
lods
ljmp
imul
and
and
pop
into
lea
fs
gs
adc
out
mov
lock
insb
push
add
xorb
shrb
pop
mov
in
fs
es
xorl
ja
cmp
mov
jne
and
cmp
pop
outsl
inc
push
push
pop
out
pop
dec
jne
bound
xchg
push
shrl
popa
in
fs
push
mov
pop
aas
push
fidivl
outsl
aas
sub
ret
jecxz
stos
dec
or
push
and
lods
push
ja
xchg
ja
imul
push
jne
xlat
jl
fadds
adc
jnp
sbb
sbb
push
mov
pop
cmp
das
icebp
ja
push
shrl
outsb
lcall
xor
inc
push
inc
dec
push
dec
dec
inc
dec
inc
inc
mov
arpl
arpl
mov
in
mov
inc
insb
outsl
lock
imull
mov
jnp
inc
movsl
jo
adc
arpl
pusha
lahf
xor
add
dec
sub
pop
sbb
xchg
jge
mov
inc
dec
inc
inc
mov
add
jg
nop
mov
jae
loop
addr16
in
and
cmp
insb
scas
xor
fstpt
dec
inc
push
pop
mov
orb
sbb
shlb
adc
rorb
adc
bswap
mov
push
or
mov
jg
push
jne
jae
imul
xlat
xchg
rorl
inc
dec
and
lods
push
pop
cltd
jp
push
sbb
add
sbb
into
js
push
mov
push
cltd
xchg
leave
imul
testl
push
add
call
add
add
mov
aas
inc
inc
cmp
in
mov
dec
xchg
xchg
mov
add
imul
inc
jno
mov
lods
push
insb
mov
movsl
dec
lahf
in
loope
jnp
inc
outsl
pushf
stos
aaa
cmp
inc
lcall
push
dec
jnp
mov
adc
pop
popf
js
and
xlat
fwait
sbb
xchg
push
inc
jbe
testb
imul
jecxz
mov
arpl
jnp
je
data16
xorl
sti
and
or
xor
add
fstl
inc
xchg
sub
push
dec
dec
daa
or
js
cwtl
notl
xorb
ljmp
xor
push
sbb
pop
sub
mov
gs
cwtl
arpl
dec
inc
inc
das
inc
mov
bound
pop
bound
data16
dec
inc
dec
cmc
test
std
jo
enter
cli
push
imul
imul
push
outsb
xchg
ret
daa
adc
mov
loopne,pt
sti
xor
inc
icebp
aad
mov
or
fcmovnu
pop
cmp
jo
jae
push
arpl
xor
jbe
mov
daa
in
mov
adc
jne
xor
sub
insb
outsb
sbb
imul
popf
push
mov
push
sahf
popf
dec
pop
xor
mul
outsb
imul
popa
cmp
gs
add
jg
push
ds
gs
fs
mov
rorl
imul
or
jbe
pushf
pop
mov
xor
cmp
push
imul
mov
push
xor
jo
jbe
loopne
xor
outsl
outsl
inc
imul
mov
sub
xorb
xor
cmova
fimull
mov
xchg
jae
ja
inc
stc
adc
jno
inc
insb
dec
or
in
mov
jo
dec
inc
outsl
jne
shrb
inc
aas
gs
sub
mov
cmp
pusha
lock
das
inc
add
adc
pop
xchg
test
mov
mov
outsl
test
xchg
and
jmp
testl
xchg
dec
fwait
xor
dec
ret
nop
bound
sbbb
add
jb
push
sbb
pop
push
pop
arpl
cs
push
xlat
xchg
push
and
pop
push
pop
pmaxsw
and
loopne
mov
mov
out
fldt
sti
cltd
flds
outsl
add
inc
dec
inc
cmpsb
or
popf
cmp
imul
jmp
daa
pop
js
imul
fldl
dec
imul
stos
pusha
jnp
jg
sbb
dec
dec
push
lcall
ss
pushfw
push
ja
pop
inc
add
call
mov
dec
pop
rclb
imull
outsl
loopne
jmp
ja
push
cwtl
cmc
cmp
inc
das
jae
arpl
jo
xor
addl
cltd
jae
call
dec
pop
or
das
jae
outsb
add
mov
dec
inc
add
test
inc
xlat
push
push
dec
adc
loopne
dec
push
dec
sahf
dec
or
cmp
push
jo
mov
cmp
loope
jge
imul
imul
add
idivb
xchg
or
rolb
movsb
cs
pusha
ja
lods
fsubrs
in
jo
les
mov
and
imul
pop
and
fs
and
ds
sub
add
adcl
ret
mov
cwtl
in
sbb
dec
inc
or
outsb
mov
sub
gs
lahf
push
shll
fs
add
cltd
out
push
mov
xchg
jbe
add
xchg
jb
out
cld
rcll
sbb
push
inc
dec
add
or
loope
dec
shrb
mov
or
add
mov
test
adc
adc
adc
mov
jp
outsl
mov
sub
stos
or
lock
jl
lahf
pop
inc
cmp
inc
dec
pop
dec
inc
xlat
testl
addb
inc
imul
test
fisttpll
dec
scas
divl
pop
lahf
jbe
pop
pop
sub
inc
push
push
cmp
aaa
dec
gs
xchg
push
add
shlb
addr16
pop
mov
iret
insb
or
add
mov
nop
pop
imul
pop
lods
insl
inc
sbb
ljmp
ret
mov
push
sbbl
inc
sub
ret
mov
add
fistl
push
das
gs
and
pop
push
add
imul
aaa
push
pop
mov
inc
ficoml
das
sub
insl
dec
es
adc
push
je
pop
mov
popa
lods
sbb
cmp
aaa
xor
mov
jns
and
xor
inc
jne
xor
sub
add
mov
dec
arpl
inc
sub
or
dec
je
sti
mov
pop
imul
push
cltd
mov
outsl
inc
add
mov
dec
daa
jns
jne
xchg
xchg
mov
and
mov
ljmp
add
and
loop
mov
dec
das
inc
test
mov
add
cmpb
adc
add
stos
mov
sti
lcall
add
lret
adc
or
mov
sbb
jg
incl
jns
cmpsb
xor
xor
inc
sub
or
bound
mov
and
jl
add
mov
xor
xor
shlb
ret
mov
daa
lock
mov
rclb
lea
ret
out
mov
loop
xorl
push
pop
jge
lcall
inc
push
push
xor
sub
push
push
scas
dec
push
push
mov
jne
test
jne
cmp
add
pop
js
daa
sub
negb
pop
sub
or
scas
add
xor
inc
nop
dec
dec
push
inc
mov
sbb
dec
lods
inc
ret
fwait
cmp
and
mov
push
jns
rorb
mov
je
pop
dec
das
dec
pop
xor
outsb
push
pop
push
inc
xor
and
push
inc
adc
and
xor
mov
push
loop
call
jns
je
fs
call
das
xor
pop
shll
shrb
out
or
adc
mov
gs
dec
cmp
add
push
sub
cmp
mov
ja
loope,pn
iret
push
or
sub
pop
sub
loop
push
je
adc
dec
dec
mov
ret
mov
test
mov
out
cmp
mov
inc
pop
sbb
arpl
out
fcmovu
mov
aam
cmp
sub
jae
loopne
sbb
adc
js
insb
in
out
sti
xchg
cmp
adc
mov
loop
and
or
imul
jo
push
rcl
cltd
fadds
push
shrl
add
js
push
and
adc
xor
fs
inc
lahf
rorl
pop
sub
add
mov
pop
inc
mov
mov
aad
cmp
pushf
stc
inc
stos
repnz
and
out
rolb
insb
imul
movsb
cmpps
ja
sbb
das
push
jbe
inc
mov
outsl
push
dec
mov
es
test
jg
mov
xchg
inc
xor
rol
sub
imul
sbb
push
push
sub
out
adc
inc
and
dec
push
orl
xor
ds
sub
dec
cmp
sub
inc
adc
ret
jl
inc
dec
inc
pop
adc
dec
dec
push
gs
push
jmp
fcoms
cmc
jae
and
pop
dec
daa
das
sub
sbb
es
repz
inc
push
out
or
orl
es
in
jmp
jae
dec
std
es
roll
inc
test
fadds
movsl
add
inc
ds
das
shll
dec
add
cmp
lret
adc
jae
aaa
mov
sub
stos
lock
das
push
jns
mov
xor
cmp
jbe
daa
add
jecxz
dec
inc
and
inc
inc
sbb
js
sub
sub
pop
push
das
or
inc
adc
jbe
sbb
push
push
inc
int
add
psubsw
add
popa
mov
push
adc
test
jge
test
pop
fsubs
popa
dec
push
or
inc
or
rcll
inc
push
push
pop
jmp
andl
xchg
lret
stos
stos
mov
sbb
push
test
and
cmp
mov
xor
mov
cmovne
dec
push
dec
jge
stos
mov
and
add
lock
push
gs
add
adc
cmp
dec
outsl
dec
lds
testl
mov
out
in
or
adc
dec
cs
cmp
mov
inc
push
xor
sbb
mov
mov
or
ss
fs
fcmovnb
outsb
addl
popf
push
and
inc
lods
and
push
outsb
xchg
xchg
mov
push
fldl
aaa
xor
je
repz
push
adc
inc
loopew
inc
pop
lcall
ret
mov
out
mov
xchg
push
dec
jge
add
es
repnz
sbb
inc
push
inc
pop
in
cmp
pop
or
in
xor
jb
in
in
xor
xor
in
in
xor
in
ss
in
in
aaa
ja
cmp
in
in
cmp
jns
in
mov
daa
jp
jne
fs
jnp
or
mov
movsl
rolb
or
xor
and
push
in
fimuls
and
and
xor
es
pop
leave
fmuls
jns
and
movsb
push
pop
pop
es
repnz
pop
sub
pop
xchg
sub
sub
push
xchg
imul
out
adc
test
push
imul
ds
fsubs
rcr
loop
adc
lea
in
das
ds
testb
imul
adc
fidivl
daa
fistpl
sbb
mov
fisttpll
sbb
push
cmpsb
adc
pop
imul
adc
aam
push
mov
dec
dec
dec
push
lcall
int
pop
adc
cltd
dec
adc
movsb
cmp
cmp
daa
and
jbe
pop
push
adc
xchg
adc
mov
insl
adc
add
lods
imul
add
outsb
adc
push
inc
adc
dec
jae
cmp
cs
dec
jae
das
cs
fdivrl
in
pop
jl
or
inc
push
push
dec
pop
in
push
addr16
push
push
mov
push
sub
push
or
xchg
dec
sub
push
push
sbb
push
xchg
inc
dec
dec
pop
or
es
loopne
sbb
es
dec
inc
pop
or
fdiv
inc
push
push
pop
or
out
adc
jbe
repz
sbb
and
aaa
icebp
mov
inc
push
pop
or
es
dec
daa
shrb
or
pop
jle
or
test
dec
sbb
xlat
nop
xor
punpckhdq
insl
mov
sub
sub
pusha
aaa
or
popa
cltd
fs
dec
xor
fs
dec
push
arpl
fs
dec
push
cltd
xor
xor
data16
fisubl
push
pop
je
dec
cmp
xor
cs
dec
inc
pop
jl
fs
enter
out
bound
cmp
inc
pop
inc
popa
daa
sub
dec
mov
xor
inc
push
lcall
add
fdivl
aam
cmp
mov
lods
fldl
out
adc
gs
add
mov
imul
dec
fcoms
sbb
lcall
inc
gs
jecxz
arpl
jbe
adc
sub
cld
pop
push
gs
outsb
jbe
je
jb
mov
fisttpll
and
and
loopne
dec
fwait
dec
outsl
push
push
inc
outsb
inc
cmpsb
jl
gs
push
push
jo
pop
dec
fdivl
arpl
cmp
rcrl
xor
das
inc
fildll
jge
fs
daa
push
insl
jo
bound
lock
jo
inc
cltd
popa
test
cmpb
push
test
jo
insb
jo
aas
xchg
jae
cltd
test
jns
daa
outsl
dec
xchg
bound
jle
pop
inc
aas
adc
mov
sbb
lods
lea
insb
add
sti
rclb
pop
pop
mov
dec
nop
es
lods
pop
outsb
xor
sub
iret
sub
mov
scas
nop
daa
push
or
ljmp
insl
es
outsb
in
add
mov
mov
scas
arpl
loopne
dec
arpl
inc
mov
inc
lea
inc
push
icebp
int3
push
imul
outsl
jp
insb
popa
das
xor
sub
adc
sub
mov
xchg
daa
push
scas
xor
jb
push
jb
add
fsubrs
and
daa
inc
adc
dec
xor
imul
pop
daa
data16
ja
or
pop
ret
mov
push
push
dec
pusha
add
xor
cmpsb
inc
mov
pop
out
jo
popa
push
ss
xchg
iret
bound
cmpsl
cmpl
jle
cmp
outsb
fs
mov
adcb
mov
out
mov
xchg
or
scas
push
jbe
pop
push
add
insl
fsubrs
xlat
outsl
rorl
jae
push
outsb
push
push
nop
pop
pop
or
mov
pop
push
xchg
or
imul
dec
inc
cld
in
xchg
dec
jbe
jnp
lret
cmp
jle
mov
inc
inc
dec
jae
push
inc
and
jo
push
outsl
inc
pop
add
cmpsb
dec
arpl
push
add
arpl
mov
jle
inc
mov
je
lahf
pop
insb
rcrb
dec
inc
insl
and
aad
frstor
add
outsl
outsl
out
fidivl
fimull
push
cli
jno
mov
pusha
fs
stos
imul
push
and
xchg
xchg
jae
data16
aad
sub
int
insl
outsl
scas
push
mov
jae
arpl
xor
pop
sub
mov
testb
nop
xchg
jnp
inc
sbb
fcompl
mov
dec
fwait
call
mov
pop
out
outsl
imul
testb
jo
mov
inc
pop
jne
xlat
imul
push
shrb
jb
inc
arpl
lds
data16
fidivl
mov
andb
mov
sbb
mov
ret
xchg
or
push
stos
sub
add
jge
lret
popa
push
cmpsl
and
js
jno
stos
xchg
xchg
add
or
sub
mov
fs
push
xchg
andl
add
sub
adc
sbb
out
and
or
inc
sub
or
mov
das
shlb
pusha
adcl
ffree
push
ret
aaa
cmp
int
adc
cmp
call
add
shrb
dec
fsubrs
jae
inc
mov
daa
and
push
pushf
push
or
pop
inc
xchg
pop
pop
xor
pop
inc
xor
dec
jns
or
cmpl
push
es
nop
out
iret
mov
shll
xchg
mov
cmp
das
sbb
mov
fmuls
stos
popf
dec
xor
sub
jo
xor
ret
iret
xor
test
dec
rorl
sbb
adc
das
push
daa
mov
mov
xor
mov
cmpsl
inc
fs
or
negb
xor
call
xchg
xor
cmpxchg
sub
xlat
insl
dec
push
pop
push
add
int3
shrb
cmpsl
lret
jne
outsl
pop
mov
and
imul
adc
das
arpl
adc
data16
negl
out
test
adc
std
and
xor
fbstp
and
and
mov
dec
jae
ss
jp
popa
bound
pushf
mov
jg
mov
test
and
and
push
xor
shll
dec
inc
add
or
inc
shrl
xchg
sbb
nop
popa
push
or
stos
push
pmaxsw
jo
push
inc
sbb
and
movups
mov
fisttpl
mov
fstpl
dec
pcmpgtd
test
movb
inc
push
jo
push
push
test
xorb
inc
ljmp
cmp
inc
daa
sbb
aaa
pop
ret
scas
outsb
push
mov
test
mov
adc
cwtl
insb
out
nop
xorl
xchg
sbb
inc
test
scas
jbe
mov
pop
mov
cwtl
mov
ret
bound
and
out
push
stc
dec
inc
cmp
cld
andb
ret
xor
shlb
outsb
jbe
imul
je
sub
mov
sbb
push
inc
cs
imull
rcrb
cmp
cli
fs
cmpb
pop
addb
andb
push
addr16
les
mov
or
inc
mov
loop
fadds
movsl
lret
orl
adc
pop
rol
fs
rclb
inc
popa
mov
jb
sbb
or
sub
adc
pusha
xor
mov
xchg
jg
test
push
sbb
rolb
scas
push
loope
cmp
push
push
les
jns
sbb
aas
imul
mov
scas
or
or
insb
nop
pop
xchg
push
xchg
inc
adc
mull
in
bound
insb
sti
and
mov
adcl
xor
imul
or
icebp
jmp
mov
push
es
mov
inc
mov
cmp
ljmp
xor
popa
adc
mov
iret
addr16
mov
jg
xor
adcl
cmpsl
and
xchg
shll
adc
or
adc
rcrb
dec
push
arpl
mov
mov
mov
pop
sub
xchg
popa
es
ja
xchg
mov
jb
adc
lock
aaa
movsl
or
aas
rcr
mov
jecxz
and
stos
addr16
ss
int3
and
xor
sub
ss
xor
cmp
ja
fstps
and
push
js
push
loopne
jge
jno
mov
in
dec
xor
inc
push
add
jae
mov
and
xor
xchg
push
xchg
imul
or
test
sbb
lea
mov
roll
sbb
mov
mov
js
movsw
or
daa
mov
jne
adc
sahf
imul
pusha
pop
dec
gs
cwtl
es
outsb
mov
and
xchg
mov
mov
xchg
cltd
in
int3
sbb
mov
xchg
mov
ja,pn
cmpsb
insl
or
xor
inc
addr16
inc
ret
mov
adc
push
sbb
jne
inc
insb
movsl
movsb
sbb
ret
out
xchg
mov
fldcw
ljmp
mulb
cltd
imul
mov
mov
shll
push
ret
fbld
mov
outsb
mov
adc
xorl
aas
sub
ret
lods
test
push
and
arpl
ss
inc
pusha
rolb
pop
add
cmp
and
lcall
pop
iret
pop
in
andl
add
mov
sbb
add
inc
lods
dec
out
mov
xlat
mov
cmp
mov
outsb
loop
add
mov
pusha
outsl
jo
sarl
add
loopne
cmp
sub
sahf
xor
mov
aad
nop
or
pop
inc
test
mov
outsl
jge
xchg
loopne
shrb
mov
jl
or
sbb
sub
jnp
mov
inc
xor
sbb
ljmp
mov
rorl
push
leave
mov
mov
mov
ret
cs
popl
cltd
cmp
jb
inc
add
cs
inc
jne
inc
or
dec
jmp
ret
mov
test
jo
mov
rorb
push
popf
mov
and
dec
jae
movsb
pusha
add
stos
outsl
repz
mov
loope
sbb
sbb
adc
sub
sbb
push
dec
inc
dec
cmovp
adc
push
call
mov
xor
push
imul
mov
xchg
jo
jns
clc
es
popa
in
or
cmp
push
cmp
mov
nop
or
cmpxchg
inc
push
xchg
xchg
ficoml
and
xchg
dec
or
add
lret
push
dec
inc
addr16
sub
push
imul
push
pop
inc
aas
cmpsb
aad
out
test
loopne
inc
add
aam
shll
sarb
cs
mov
das
sub
enter
inc
and
test
and
adc
sub
xor
inc
enter
enter
aas
daa
test
inc
pusha
jle
loope
xor
cs
cmp
inc
xchg
and
inc
and
inc
xchg
and
sub
sub
xchg
aas
or
inc
daa
pusha
inc
xchg
push
sbb
imul
nop
and
inc
and
and
sbb
nop
pop
sub
sub
sbb
das
pop
xchg
daa
or
inc
pusha
jle
xchg
nop
test
and
sbb
and
mov
les
jae
lods
mov
or
adc
les
and
mov
repnz
mov
test
and
icebp
mov
xchg
and
xchg
inc
dec
dec
and
dec
dec
inc
dec
pop
cs
push
inc
push
or
sbb
out
das
and
pop
imul
cmp
dec
mov
pusha
cmp
inc
idivb
jo
jns
insb
pop
add
mov
das
pop
jae,pn
inc
jle
pop
cs
dec
dec
mov
xor
das
rep
imul
das
fs
sub
add
subb
push
rorb
cmp
push
insl
inc
inc
jnp
daa
mov
ljmp
jae
imul
push
jg
or
mov
pop
test
or
mov
push
fists
mov
popa
xor
arpl
dec
and
or
add
cmp
inc
mov
cs
pop
inc
roll
add
inc
push
add
pop
jo
aam
daa
push
pop
pop
xchg
jb
adc
repnz
dec
fucom
insb
je
scas
cmp
pop
repnz
in
push
cmp
cltd
test
outsl
mov
cmp
inc
popa
addl
sbb
cmpb
sbb
push
or
and
or
jl
jp
pop
sti
inc
mov
test
sub
xor
cmc
aas
xorb
outsb
imul
ss
shll
cld
frstor
pop
in
mov
lcall
adc
mov
push
pop
imul
dec
inc
aaa
inc
fisttpll
arpl
or
test
mov
insb
lcall
cmp
push
imul
and
adc
clc
fsubl
jmp
hlt
add
cmpsl
cmpsb
imul
fcom
les
mov
imul
imul
insb
lcall
cs
imul
jbe
clc
loopne
dec
shll
lods
movsb
xor
shll
nop
mov
jo
pusha
pop
push
imul
xor
imul
insb
lcall
in
lcall
loopne
fcom
int3
shll
mov
lods
lcall
nop
test
lcall
push
dec
shll
sub
fstpl
lods
jns
adc
push
add
fld1
fnstenv
cmpsb
aam
fsts
lods
imul
nop
xor
shll
cmpb
xor
shrl
pop
push
dec
int3
jne
popa
inc
fnstenv
sub
mov
sub
mov
cmp
and
outsb
bound
into
ja
ljmp
outsb
push
daa
cmp
nop
push
inc
pushf
into
pop
aam
mov
lcall
into
bound
rorl
xor
mov
pushl
xor
xor
push
add
scas
inc
es
insb
insl
aaa
pop
bound
push
ljmp
aas
pop
pop
pop
push
dec
push
jbe
push
add
lock
jne
bound
push
and
into
jne
subl
mov
je
mov
je
jno
lret
jp
cs
movq
popf
gs
imul
shrb
gs
and
lods
inc
pop
jae
daa
adc
inc
fbstp
test
dec
fisubrs
push
and
mov
ds
outsl
bound
jno
jp
in
sub
adcl
popa
jp
jbe
add
xor
sub
cmp
gs
pop
sbb
gs
push
add
add
sahf
push
jmp
jnp
pop
push
lds
mov
mov
mov
push
mov
adc
xchg
std
insb
or
cs
pop
jb
mov
cmp
lock
add
sub
insb
jmp
cmp
mov
outsb
fs
les
aas
mov
cmp
push
sbb
xor
xor
xor
pop
pusha
adcl
push
push
push
pop
das
aas
push
xchg
jb
adc
mov
outsb
inc
xchg
dec
pop
loopne
mov
imul
jne
dec
inc
addr16
xor
xchg
out
daa
test
popa
pop
xlat
callw
adcl
lds
xor
lret
cmp
adc
dec
jno
addr16
movsb
jecxz
pop
stos
adc
xchg
movhps
jbe
mov
aaa
and
mov
pop
insl
cmp
cs
push
rcrb
and
dec
xchg
addr16
fisubl
das
xor
pop
fadds
xchg
xor
jbe
inc
add
cli
aaa
pusha
adc
adc
mov
and
sub
inc
sub
adc
test
inc
lds
fs
adc
dec
ficompl
pop
jecxz
call
sbb
enter
mov
dec
jae
sbb
ds
dec
push
push
and
sbb
push
lahf
xor
sub
adcl
push
adc
mov
and
pop
add
dec
inc
inc
xorl
mov
push
rcrl
test
add
out
subb
cmpsb
push
push
popf
imull
rsqrtps
mov
add
sub
sub
es
pop
mov
or
pop
jae
cmc
outsb
mov
xor
das
jmp
popf
push
pop
dec
mov
and
and
inc
push
push
inc
cmp
cmp
and
aaa
fisubrs
push
adc
add
pop
pop
dec
imul
and
outsl
mov
cs
outsl
daa
jns
rorb
add
sbb
add
fistpll
pop
lret
mov
lds
pop
bound
pop
fiaddl
or
popa
das
cs
mov
enter
cmpsb
into
mov
das
stos
and
daa
dec
inc
or
inc
outsl
sub
stc
inc
inc
push
imul
outsl
push
jo
pop
dec
dec
lret
nop
imul
xlat
jmp
in
push
iret
add
aad
adcl
loope
inc
mov
shlb
andnps
ret
mov
ja,pn
lea
cmp
outsl
or
call
inc
inc
call
fldcw
ss
inc
pop
push
push
and
cs
inc
loopne
adc
dec
imul
test
push
push
dec
fisttpll
jecxz
test
push
fdivs
inc
jg
imul
inc
inc
fidivl
data16
aaa
xor
bound
jle
sub
dec
jne
mov
inc
insb
nop
sub
shrl
cmpsb
js
aad
shrl
fildll
pop
sub
aam
push
cwtl
mov
xorl
nop
mov
mov
push
scas
insl
mov
out
inc
insb
mov
cmpsl
or
outsl
push
adc
out
inc
cmp
dec
adc
aam
ja
ret
add
fs
mov
dec
outsl
adc
push
and
xlat
cmp
mov
popa
ja
add
popa
outsl
iret
fildl
imul
into
adc
insb
aas
add
adc
add
inc
sbb
inc
sbb
rorb
loop
adc
jmp
xor
adc
pop
outsl
dec
xor
fimuls
dec
dec
nop
pop
sbb
aas
adc
cli
xor
xchg
inc
jge
sbb
add
pop
pop
fimull
inc
mov
imul
push
es
mov
leave
inc
or
sub
bound
push
pop
adc
xchg
add
cmp
mov
xchg
es
cmpsl
out
and
dec
outsl
lock
shl
imul
push
push
sub
shll
ja
xchg
popf
push
push
xor
insb
mov
push
sbb
xor
sbb
push
sahf
gs
es
or
xchg
cmp
punpcklwd
stos
jecxz
pop
aas
aas
mov
test
cmp
inc
push
push
or
pop
cmp
jb
pop
je
mov
gs
insl
pop
inc
or
hlt
ja
push
rolb
sub
dec
aas
in
cmp
dec
jae
jbe
add
sbb
adcb
adc
and
cltd
sub
data16
pop
mov
or
or
ss
sub
xor
and
add
pop
add
inc
mov
adc
push
mov
mov
push
xchg
mov
xchg
mov
scas
cmpsl
arpl
sbb
mov
xor
xchg
inc
rorl
xor
xlat
aad
out
sub
insl
jae
cs
inc
push
rclb
imul
cs
adc
out
popa
add
inc
dec
dec
dec
dec
sbb
loope
das
js
mov
mov
ja
push
push
imul
add
daa
jmp
lods
inc
mov
sbb
sub
inc
addr16
jae
add
lds
cmp
inc
inc
bound
and
and
and
pop
xchg
adc
test
aaa
xchg
mov
mov
fiaddl
outsl
push
add
insb
inc
dec
mov
inc
inc
add
mov
pop
adc
test
inc
add
das
lds
pop
cltd
cmpsb
mov
adc
das
adc
outsb
imul
out
sysexit
and
test
mov
adc
subb
psubq
rcr
adc
addr16
mov
push
jbe
addr16
adc
inc
insb
mov
js
cs
aaa
push
mov
enter
mov
daa
cmp
rclb
pop
and
or
jg
mov
push
jg
test
pop
dec
mov
add
leave
mov
pusha
stos
or
xlat
fiadds
pop
add
fisubs
sub
inc
in
mov
out
rorl
pusha
jg
inc
push
addr16
and
xor
outsl
cltd
mov
fs
bound
jae
cmp
and
adc
dec
sub
dec
inc
sbb
ja
mov
sub
addr16
lods
arpl
push
aad
popa
sub
fs
mov
sbb
loop
addl
or
pop
add
outsb
adc
sbb
ret
mov
pop
aad
inc
bound
jae
sub
inc
bound
ljmp
mov
loope
addb
dec
jp
in
mov
sbb
sbb
and
sbb
pop
rorl
mov
pop
outsb
adc
inc
pusha
and
sbb
pop
and
stos
push
repz
inc
jo
arpl
dec
jo
lretw
dec
or
imul
scas
jb
add
push
sbb
push
aam
je
repz
loope
loope
inc
imul
sub
add
adc
pop
or
add
or
or
mov
mov
popa
or
bound
popa
or
pop
jne
xlat
lock
pop
inc
inc
push
or
jnp
push
notl
and
xchg
sbb
add
or
jecxz
jbe
or
jb
jo
sbb
or
insl
mov
sub
push
adc
or
lock
add
je
test
lret
xlat
out
sub
insl
rorb
jne
add
into
fs
aas
jmp
push
add
popa
push
inc
fdivs
cs
pop
jo
psubusb
imul
mov
orb
adc
xchg
insb
bound
sbb
jns
push
xlat
pop
jmpw
add
fmuls
cmp
xchg
dec
mov
rcrb
addl
into
lods
scas
ret
xor
mov
adc
inc
mov
jo
call
push
ficoms
push
cmpl
push
mov
into
add
ficomps
notl
insl
push
and
jb
popa
ja
fnstenv
mov
mov
xor
cmp
xor
sub
rep
or
popa
add
push
iret
punpcklwd
dec
daa
and
inc
pop
cwtl
inc
insl
das
shlb
inc
in
xor
pop
push
aaa
xor
out
pop
insl
sub
sub
test
loopw
or
pop
insb
mov
ret
adc
xchg
gs
mov
add
adc
sub
outsl
addr16
test
mov
or
aas
pop
aas
mov
mov
mov
push
imul
jo
adc
dec
cs
mov
sbb
and
test
pop
adc
fiadds
test
ja
inc
xchg
pop
adc
imul
jno
or
cmpsl
aad
xchg
gs
arpl
popa
out
jne
fs
jb
addb
push
popl
pop
xchg
cltd
jb
out
je
or
and
push
imul
jae
xor
pop
jo
ja
push
dec
mov
jbe
lret
lods
cmp
aas
outsl
mov
sbb
jg
jno
jne
sbb
push
adc
mov
dec
sub
jg
int
mov
push
or
xchg
imul
popa
dec
mov
add
out
push
lods
bound
fcoms
or
sbb
pop
push
ja
imul
mov
sub
insb
xchg
dec
jbe
ja
push
mov
push
pop
enter
xchg
push
arpl
mov
arpl
inc
adc
pop
mov
mov
xchg
cmp
push
cmp
insb
inc
push
call
mov
jp
push
or
cmpl
popa
xor
xchg
adc
rclb
xchg
push
dec
or
mov
dec
out
push
mov
jae
pop
cmp
clc
push
jb
xchg
repnz
int
ret
into
mov
push
xor
addr16
loop
mov
shll
or
and
adc
lock
push
sbb
arpl
lahf
daa
stos
adc
mov
jne
lds
xor
cmp
imul
cli
sbb
jne
jno
or
inc
arpl
sbb
mov
or
pop
xchg
cltd
xchg
das
daa
push
pop
sbb
adc
pop
inc
movsb
or
rolb
scas
inc
ss
mov
mov
into
popa
sbb
daa
data16
adc
xlat
pop
xchg
data16
jbe
cs
dec
push
aam
clc
aad
fisttps
les
jns
ss
xchg
outsb
getsec
and
jbe
popw
or
enter
data16
add
nop
xorb
dec
or
pusha
jae
xlat
es
fistps
pop
ja
nop
movsl
push
rdpmc
out
pop
mov
xlat
xor
out
xor
nopl
push
test
or
jo
jbe
xchg
sbb
and
fimuls
andl
add
dec
and
adc
inc
sbb
or
adc
jne
and
push
and
cmp
popa
outsb
mov
ja
pop
and
loope
dec
inc
mov
pop
cmp
pop
adcb
test
push
ss
inc
pop
jp
mov
pop
pop
or
jmp
stc
jbe
pop
sbb
mov
shll
shll
sub
out
and
adcl
or
add
add
inc
int3
add
sbb
mov
test
mov
mov
xchg
pusha
insl
cmp
adc
add
fadd
xor
lea
test
scas
pop
movb
movsb
xor
mov
mov
dec
int3
mov
or
insb
addr16
inc
xor
insl
fs
out
add
jns
xor
pop
adc
sbb
test
add
jecxz
popa
adc
pusha
daa
xor
out
loope
bound
rorl
idivl
sub
ja
fwait
dec
subl
push
or
mov
or
cmp
or
xchg
andb
lahf
pop
shrl
xor
xor
pop
push
sbb
insl
sbb
push
ficoml
scas
cmp
xchg
js
rcrl
xlat
add
pop
mov
mov
in
lahf
in
movsb
in
xor
rcrl
mov
pop
or
adc
dec
cwtl
and
sbb
mov
loopne
dec
xor
adc
and
cld
shrl
dec
inc
daa
pushf
movl
mov
addr16
mov
jg
rol
add
mov
daa
cs
movq
scas
arpl
pop
int3
pop
cmp
and
sub
or
imul
xchg
cmpsl
cmp
and
jne
fmull
add
add
pop
add
mov
mov
je
jbe
add
fildl
sarl
and
xchg
pop
sub
imul
jl
jl
mov
sahf
mov
xor
outsb
in
cltd
cmp
mov
sub
int
push
xor
test
test
popa
out
or
jo
push
adc
mov
lods
sbb
cmp
cmpb
popf
mov
xor
inc
cmp
les
inc
inc
dec
dec
dec
xchg
sbb
jae
push
cmp
inc
jae
iret
je
dec
sub
xchg
pusha
and
and
cmp
arpl
jge
jae
and
and
lods
or
xor
gs
mov
sub
xor
outsl
inc
popf
push
or
sub
jb
cmpsb
movb
outsl
inc
or
js
sub
xchg
test
mov
scas
inc
mov
bound
sbb
mov
inc
sub
add
es
js
lods
cmp
mov
adc
and
push
and
dec
dec
xchg
fs
dec
xchg
das
jb
adc
mov
add
adc
ja
push
rcl
jg
pop
add
xor
push
outsb
sbb
xor
rorb
jae
adc
scas
lock
sbb
sub
pop
fsubs
or
add
mov
iret
inc
cwtl
rol
sub
mov
push
rcll
add
fisttpl
mov
test
test
shll
jl
jae
enter
test
add
stc
xor
in
jg
or
incl
stc
das
inc
push
cmpsl
dec
mov
or
out
cvtps2pd
add
js
jo
lods
or
fucomip
or
xor
inc
jl
inc
cmp
rolb
lret
js
inc
and
insl
xor
and
adc
jl
xor
add
sub
cli
insb
test
je
adc
pop
xchg
mov
cli
push
call
in
je
and
adc
adc
pop
leave
mov
repz
ret
call
add
or
pop
pop
pop
push
sub
cmp
daa
or
xlat
rep
mov
stos
push
push
push
push
adc
push
or
jno
shlb
push
test
ret
mov
push
pop
ficompl
or
test
outsl
test
orl
xchg
adc
xor
jg
or
pop
inc
arpl
ja
adc
test
adc
sub
ret
addr16
insb
push
or
into
lods
push
or
daa
das
add
pop
push
dec
sti
push
add
pop
inc
push
push
les
xor
dec
dec
jp
and
out
movsl
or
lods
and
cltd
add
dec
cmp
dec
mov
inc
xchg
inc
jne
imulb
inc
shll
sbbl
and
push
inc
mov
ss
mov
push
repnz
imul
sbb
loopne
dec
cmp
int3
add
pusha
or
and
pop
or
and
inc
cltd
jb
push
dec
loop
rcl
add
popa
add
sub
roll
ja
mov
or
adc
add
inc
mov
mov
addr16
add
add
js
fadds
adc
pop
imul
mov
int3
aas
dec
inc
iret
popa
lods
mov
cmp
push
daa
test
iret
or
sub
inc
icebp
rorb
inc
inc
outsb
sub
lods
inc
loope
cli
in
mov
and
push
or
stos
lcall
mov
cmpsl
or
cs
jnp
pop
test
arpl
ret
cmpsl
arpl
cs
pusha
xlat
nop
lea
and
aas
and
sub
sub
mov
xor
decb
jmp
xchg
mov
insb
inc
cmp
add
and
add
adc
movsl
sbb
addr16
inc
inc
push
cmp
cltd
add
inc
jno
adc
push
ret
and
inc
jo
cmp
and
cmp
outsb
imul
pop
das
popa
adc
add
pop
loop
andb
fstpt
or
pop
sub
sub
push
inc
dec
and
pop
pop
fwait
jl
cmp
cwtl
jae
xchg
inc
add
aas
and
rclb
ret
sahf
inc
out
ss
icebp
cld
outsb
testl
movsb
leave
testb
fisttps
mov
stc
sbbl
mov
test
cmovo
pop
inc
push
enter
mov
sbb
in
call
jg
mov
adc
push
ficompl
mov
xor
fcomp
loopne
jae
jle
xor
mov
orb
adc
xor
xor
and
adc
and
addb
lods
bound
pop
cmpxchg
sub
adc
nop
addr16
pushf
push
xor
add
andb
mov
adc
ss
mov
add
punpckhwd
add
lcall
or
mov
or
or
jbe
imul
daa
adc
mov
pop
nop
adc
and
enter
addr16
fdivs
xorps
xor
insl
push
and
andb
jb
pop
andb
or
aas
adcl
xchg
sub
mov
popa
sbb
add
into
aas
xlat
pop
enter
sbb
and
sub
add
outsb
adc
shrb
xor
xorl
lea
add
dec
or
xor
and
xchg
add
jg
insb
xor
icebp
sbb
add
inc
add
cmp
dec
shll
or
mov
cmp
mov
sahf
push
xor
xor
adc
sub
push
sbb
aaa
sbb
cmpsb
push
mov
pop
mov
mov
es
add
bound
lidtl
adc
or
lods
ss
push
add
mov
xor
xor
sbbl
xorb
lods
daa
lock
out
push
cmc
lods
mov
mov
jg
mov
fldenv
jno
push
add
test
push
lcall
js
mov
ss
imul
insl
add
cmp
pop
ja
mov
fisubrl
inc
shl
dec
das
push
dec
jb
inc
push
insb
xor
add
cli
or
or
ret
mov
in
and
adc
out
cld
and
leave
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
incl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
inc
cld
mov
push
pusha
les
add
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
incl
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
or
gs
std
orl
pop
ficomps
frstor
inc
xor
add
add
movsb
movsb
mov
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
inc
xor
mov
push
add
add
add
pushf
lret
add
push
outsb
sub
daa
xchg
xor
and
jo
cmpsb
cmc
push
popa
jb
push
inc
xor
jb
xchg
das
push
pop
inc
jno
subb
dec
pushw
add
adc
pop
ss
fnstenv
push
fs
push
push
dec
jmp
cmp
push
pop
lcall
and
imul
nop
xor
cmpsb
adc
cmp
mov
inc
jns
jae
das
pusha
or
dec
jge
pop
xor
add
testl
insl
pop
mov
pop
push
insb
jo
pop
inc
add
dec
inc
jns
push
imul
cmp
rolb
add
add
fcmovnu
xorl
xchg
insb
sbb
add
mov
movb
xchg
lods
adc
repnz
or
sbb
jp
push
mov
push
imul
test
jo
xchg
sbb
xor
shll
jns
inc
js
dec
or
add
jbe
cwtl
mov
sub
xor
add
inc
xor
inc
rcll
addr16
dec
cmpsl
test
rorb
outsl
and
mov
or
adc
and
add
or
lcall
insl
iret
sbb
mov
dec
sbb
xchg
xor
push
pop
xchg
adc
dec
or
das
inc
mov
mov
negl
mov
xchg
jo
jbe
add
gs
ja
pop
sub
xchg
add
shrl
call
sub
or
sbb
fs
push
add
leave
add
xchg
add
ret
lret
push
dec
daa
aaa
mov
inc
bound
je
inc
adc
add
test
insb
push
and
andl
mov
mov
outsl
xchg
imul
jo
mov
cmp
rcrl
fidivl
jo
ret
inc
add
pop
lods
sbb
roll
jo
pop
bound
leave
sbb
jne
push
jb
and
into
inc
inc
push
outsb
push
pop
test
and
pusha
lret
je
arpl
add
push
adc
mov
fidivrl
lods
add
test
cmp
aaa
fs
add
jo
test
imul
repnz
nop
lcall
mov
gs
int
add
adc
sbb
pop
xchg
test
out
jbe
inc
lds
outsl
fcmove
jbe
ret
jbe
rcl
mov
add
inc
or
push
cmc
sbb
dec
fnstcw
sbb
dec
pushf
dec
xchg
mov
jl
push
adc
fnsave
adc
sub
popa
sti
pop
push
lcall
adc
dec
inc
sub
mov
stos
sbb
push
rcrl
js
jo
adc
xchg
inc
pushf
mov
mov
and
add
or
lret
mov
lret
adc
adc
mov
adc
outsb
inc
faddl
jg
std
push
fmuls
sbb
add
add
add
add
cmp
push
sbb
add
daa
test
fcomi
daa
xor
adc
addr16
ja
outsl
xor
sbb
add
mov
imul
or
add
fadds
nop
cmp
add
cs
push
js
dec
jb
add
add
lock
jb,pn
inc
adc
cmpsl
push
push
mov
add
dec
shlb
das
dec
cld
jmp
clc
sti
jo
rolb
aaa
or
dec
xchg
and
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
sub
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
push
pop
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
test
je
push
pop
jns
movzwl
inc
push
inc
mov
push
call
test
je
mov
add
jmp
call
popa
jmp
