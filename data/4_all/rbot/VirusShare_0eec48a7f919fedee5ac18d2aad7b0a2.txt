mov
push
add
repnz
adc
dec
mov
jl
mov
mov
in
and
lea
enter
lds
into
out
icebp
stos
fwait
mov
push
jbe
dec
push
sti
inc
pop
test
push
dec
cmp
in
inc
or
dec
and
test
and
movb
mov
xor
xchg
out
cmp
lea
ret
sub
sub
lret
inc
cltd
ret
pop
cmpsb
mov
push
xchg
push
loop
mov
pop
loope
push
xchg
loop
mov
roll
imul
test
inc
stos
mov
scas
xorl
je
mov
push
sub
pushw
test
or
dec
cld
and
aaa
jns
fisttpl
popf
xor
out
scas
in
cmp
inc
push
sub
sar
stos
push
jp
xlat
setle
sub
clc
mov
cwtl
mov
mov
into
sub
aam
cs
loopne
mov
xchg
xchg
pop
mov
and
sbb
mov
cmp
imul
out
subl
addl
int
push
push
pop
fcmove
lds
aad
sub
clc
jo
dec
push
cld
inc
adc
adc
xor
mov
imul
negb
inc
jle
lret
sub
js
push
repz
pop
push
cltd
adc
and
lcall
mov
fs
and
negl
sbb
mull
jno
verw
shr
mov
dec
inc
jnp
out
push
sbb
jmp
mov
out
packssdw
lcall
scas
cmp
fdivl
out
dec
pop
pop
jb
mov
aaa
or
add
and
jl
fucomi
mov
mov
jb
lds
repnz
fisttpll
clc
push
push
mov
adc
inc
push
ficoml
sub
or
rclb
mov
and
loope
test
sbb
ss
test
mov
leave
adc
xchg
adc
jmp
cmp
aaa
dec
sub
add
jge
push
shrb
inc
add
sbb
arpl
cmp
jmp
ja
dec
aam
fwait
nop
add
mov
xor
pop
loop
pop
call
rorl
movsb
mov
mov
mov
pop
mov
ds
mov
jne
imul
mov
dec
and
xor
jb
jmp
fdivs
cmp
leave
sub
and
out
jg
repz
out
or
xchg
cmp
ljmp
dec
outsb
lcall
add
shlb
xchg
out
xor
and
add
popa
negl
in
xchg
jne
cmp
popf
lods
roll
into
mov
loopne
push
clc
pop
out
sbb
outsl
mov
or
jmp
mov
or
mov
inc
in
dec
movsb
filds
mov
mov
push
cli
jae
hlt
cltd
mov
and
lret
cmp
sbb
xor
sub
sarb
and
stos
jne
faddl
out
adc
add
and
lret
insl
pop
push
in
jbe
push
sub
iret
xchg
dec
sub
xor
pop
aad
sub
fisttps
scas
cmc
clc
mov
cltd
push
adc
sbb
pop
in
dec
adc
push
mov
xor
mov
push
push
fbld
adc
rcrb
and
jg
jns
iret
add
cmp
addr16
inc
inc
hlt
lcall
test
sub
sub
pop
aaa
jmp
popa
add
fistps
mov
push
lret
mov
sub
lds
add
roll
movsl
mov
fimull
push
pop
shlb
addr16
xchg
push
seta
xor
ficomps
cmpsb
data16
xchg
jno
push
xor
mov
cli
sti
inc
cmpsb
sti
cmp
jns
fs
cmp
aad
daa
cmpsb
adc
scas
ficompl
pushf
jae
fbstp
pushl
xor
cli
push
push
mov
sarl
inc
ljmp
inc
outsl
popl
mov
outsb
dec
sub
shll
dec
pop
insl
mov
sahf
fsubs
push
xor
adcl
inc
jmp
jl
sub
loopne
int3
and
fstl
and
mov
cs
out
adc
sbb
push
mov
mov
pushf
insl
jmp
cmpsb
aad
pop
bound
mov
xchg
and
adc
pop
sbb
popl
clc
adc
scas
pop
xchg
iret
cmc
and
and
out
adc
orl
aad
fs
jnp
add
xchg
sarb
sub
mov
sbb
scas
cmp
sarb
jns
mov
stc
fimull
sbb
ljmp
decl
in
sbb
and
mov
mov
jnp
shlb
sub
cmpsl
ja
mov
and
mov
inc
xchg
daa
lock
inc
push
out
and
mov
dec
pop
xchg
aam
in
repnz
dec
inc
cmpsl
das
pusha
lret
sarl
ja
xchg
das
popl
iret
call
xor
pop
inc
scas
or
int
mov
aam
mov
jns
push
cmp
loop
outsb
shll
repz
dec
mov
dec
test
idiv
push
lock
jbe
ja
jl
in
lcall
or
cmpsl
lock
enter
loop
adc
inc
dec
aam
sub
sub
inc
inc
lds
dec
xchg
inc
and
pop
and
dec
and
xor
mov
mov
push
dec
dec
mov
xchg
int3
adc
push
ret
movsb
lcall
call
dec
jp
dec
je
mov
jecxz
and
aas
and
xorps
mov
nop
mov
jnp
lret
pop
clc
outsb
jbe
es
mov
cmp
push
addl
scas
pop
add
inc
popa
fscale
aaa
je
shlb
sahf
je
jns
sbb
xor
mov
jbe
mov
sbb
pop
shrl
sub
xor
fprem
pop
pop
jmp
or
cmpsl
mov
sub
sbb
xchg
aad
xchg
sbb
les
cmp
xor
add
repz
inc
fldcw
nop
movd
dec
shl
test
add
lcall
in
mov
mov
cli
stos
and
es
fistps
xor
jl
mull
jbe
sbb
jo
ficompl
inc
dec
or
and
hlt
imul
icebp
stos
push
adc
imul
shll
jns
flds
mov
sub
lods
cmp
iret
cmpb
xor
inc
pop
fcmovu
shlb
mov
icebp
jecxz
dec
cmc
sbb
or
popa
popa
es
movsl
popa
lock
cmp
lret
sbb
and
and
push
push
cmp
ss
lcall
imul
in
std
pop
dec
jo
mov
sub
sahf
ret
stc
mov
pop
push
int
stos
inc
fidivrl
pop
int3
jmp
xor
mov
xchg
mov
pop
mov
aaa
cmp
pushf
and
and
dec
pop
enter
add
addl
fwait
jno
mov
movsl
dec
xor
sbb
icebp
push
inc
sbb
cs
push
pop
divl
lea
les
cs
pop
jns
xor
mov
or
mov
in
pop
or
jb
out
lahf
dec
add
dec
ss
pop
clc
sbb
cmp
mov
sbb
add
pop
push
adc
fcmovbe
inc
int
cmpsb
pusha
data16
mov
ljmp
and
push
xor
lret
jnp
inc
ljmp
xchg
dec
adc
mov
enter
inc
sbb
and
aaa
es
cmpsb
xchg
mov
fildll
xlat
jnp
mov
jmp
cmp
push
scas
pop
and
in
jg
cld
cwtl
add
sahf
ljmp
cli
out
xor
adc
out
cmp
dec
sub
push
cs
push
rcl
jl
scas
jp
mov
cmp
sbb
adc
xchg
or
sub
bound
inc
pop
jbe
jo
dec
sub
pop
stc
and
pop
mov
mov
xor
enter
sbb
or
jecxz
sti
push
sub
cmp
sarb
shl
or
pop
aam
je
adcl
jle
pop
push
mov
and
mov
lods
insl
lret
jp
lcall
add
inc
loope
in
mov
mov
adc
stos
dec
inc
adc
or
mov
pop
imul
pop
push
sbb
add
loopne
lods
pop
push
repz
dec
push
xchg
push
cmp
mov
movsb
xchg
xchg
dec
mov
fstpl
mov
mov
xchg
jg,pn
push
jmp
pop
mov
aas
popa
mov
sti
push
ja
js
pop
jno
cmc
rorl
cmc
push
testb
adc
dec
ja
mov
sbb
push
xor
pop
daa
mov
shr
xchg
insb
jle
push
notl
cwtl
cltd
or
and
jle
mulb
adc
and
insl
add
jecxz
mov
or
sbb
xorb
mov
or
dec
lods
cmp
pop
pop
out
sub
pop
or
cld
push
pop
xor
cmp
lret
or
test
xchg
int
call
dec
inc
cs
add
aam
jbe
sbb
push
mov
xchg
push
aad
xchg
ss
jl
test
scas
clc
jnp
and
or
and
hlt
movsb
outsl
mov
mov
test
arpl
pop
dec
loopne
out
xchg
or
je
int
lcall
xor
rclb
lods
fs
xchg
nop
mov
ret
inc
dec
xchg
sub
mov
lret
rorb
iret
test
jne
adc
jg
jns
adc
cmpsl
push
mov
call
xchg
outsl
lea
imul
sar
out
test
or
fsubrs
fcmovu
mov
cmp
adc
loop
lock
inc
xor
cmpsb
jbe
mov
test
leave
sbb
xor
lretw
test
adc
mov
cmp
repnz
cmp
sbbl
or
loop
xchg
xchg
sbb
cmp
sub
and
sbb
mov
sbb
mov
pop
ljmp
or
push
mov
push
sar
paddusw
add
mov
aaa
test
shl
push
sub
mov
inc
movsl
sbbl
xor
pusha
push
pop
push
cmp
imul
xchg
cwtl
push
mov
sub
data16
jecxz
loopne,pn
mov
mov
lahf
inc
test
sub
xorb
jo
xchg
gs
jnp
movsb
fprem
inc
scas
addr16
push
and
jnp
rolb
imul
fsubs
cmpb
aam
stos
pop
xor
sbb
and
inc
das
rcr
pop
add
xorl
sahf
pop
xor
push
outsl
cmp
je
cmp
push
push
pop
xlat
cmc
jne
fists
xchg
in
xchg
xchg
cltd
mov
imul
push
or
pop
xchg
add
sahf
sub
mov
xor
mov
popl
mov
adc
pop
jmp
sub
out
lock
cmp
xchg
add
imul
xchg
jle
imul
inc
hlt
or
jb
sbb
push
cmp
arpl
mov
sub
jb
mov
and
add
or
xchg
xor
push
fwait
cli
lret
cli
mov
sbb
das
je
cmp
inc
and
cmp
out
mov
out
in
jecxz
or
and
aad
std
stos
or
in
cmp
mov
pop
ret
pusha
jno
outsl
in
sbb
fisubl
std
adc
lea
scas
inc
mov
sub
xchg
xor
inc
out
dec
push
mov
lret
popa
mov
dec
ja
dec
lods
pop
call
nop
bound
xchg
lcall
mov
testl
dec
mov
cwtl
mov
pop
sarl
cmpl
lcall
scas
sbb
imul
sti
pop
adc
into
or
sbb
dec
shll
mov
in
cmpsl
xor
pop
mov
or
or
lods
or
xchg
fucomip
mul
or
pusha
repnz
xchg
sub
xorl
jmp
aam
add
test
xchg
inc
push
add
and
xlat
test
stc
pop
sbb
mov
pop
xchg
xchg
mov
dec
pop
xor
sub
loope
inc
adc
add
jae
aas
push
push
out
stc
in
sbb
nop
push
pxor
or
inc
xor
fists
mov
aaa
and
pushf
and
cmp
sbb
filds
and
add
bound
imul
inc
push
lods
adc
scas
lds
sub
xorl
out
stos
cmp
or
outsb
sahf
mov
and
add
push
dec
push
xor
outsb
scas
or
dec
inc
xchg
ss
icebp
lcall
pop
test
sbb
cmp
sbb
fdivs
hlt
pop
pop
sahf
dec
xor
out
clc
sti
pop
cmp
dec
imul
mov
dec
mov
push
enter
test
incl
and
stos
xor
call
sbb
shl
fdiv
add
sbb
cwtl
push
mov
loope
shr
push
in
jmp
fsubr
pop
and
adc
push
xchg
and
pop
data16
fwait
dec
jle
adc
hlt
mov
jl
push
xchg
lock
movsl
rclb
dec
nop
out
ljmp
push
test
cmp
out
pusha
mov
loop
test
stc
stos
popa
std
arpl
xor
popf
leave
jmp
stc
xor
out
cld
dec
int3
ret
jmp
or
xor
adc
pop
dec
adc
cmp
dec
fucomp
insl
and
sahf
and
push
mov
scas
imul
nop
xchg
jp
or
data16
gs
mov
out
push
dec
jne
stc
mov
clc
ds
imul
mov
adc
sub
push
cmp
pop
cmpsl
xchg
cmpsb
das
ljmp
out
or
fidivrl
and
cmc
mov
repnz
xchg
push
xchg
test
mov
sub
idivl
sub
add
cltd
sbb
mov
jle
cmp
int3
mov
sbb
das
inc
repz
sbb
outsb
rcrl
xor
iret
rol
xchg
jmp
shl
cmp
leave
xor
xchg
or
sbb
aas
dec
lods
roll
inc
popa
test
sbbl
sbb
push
push
lcall
pop
aam
js
xor
mov
mov
in
jne
ret
shlb
sarb
loop
js
dec
adc
or
jns
cmp
mov
sbbl
pop
movsl
out
stc
lcall
popf
inc
jne
hlt
mov
jno
and
stc
hlt
mov
xorb
outsl
sub
sbb
jp
roll
jae
mov
lds
shrl
les
pop
ljmp
jmp
push
pop
sahf
mov
aaa
lods
push
inc
popf
adc
cwtl
sub
stos
nop
push
out
jne
inc
lret
or
push
cmp
fstl
xlat
daa
push
in
arpl
lret
aaa
pop
mov
shr
int
push
cwtl
or
sub
insl
cmp
ret
pop
testl
clc
xor
pop
test
inc
mov
mov
ljmp
mov
and
ret
add
pop
stos
loope
lcall
sti
or
jnp
pop
adc
in
adc
mov
or
mov
push
jae
adc
shlb
mov
ja
xchg
out
add
pop
cmp
xor
pop
sbb
pusha
lods
ja
add
push
ds
dec
icebp
dec
xchg
sbb
sbb
mov
sub
sbb
outsb
sbb
pop
scas
jg
enter
lock
add
mov
or
loopne
xchg
lret
in
rorb
inc
cmpl
hlt
lahf
sub
cmp
stos
fwait
and
ret
test
push
sub
inc
add
test
inc
mov
loopne
xchg
mov
loope
aam
push
push
loope
arpl
pop
or
add
fwait
jns
lret
ret
hlt
arpl
cmp
xlat
popa
jg
in
cs
sub
out
xor
push
or
arpl
imul
jnp
aad
je
pop
push
cmpsl
loop
leave
push
js
aaa
shrl
pushf
pushf
icebp
push
cmp
orl
mov
es
fldl
rclb
ja
decb
iret
and
popa
xchg
nop
inc
cmp
lock
outsb
add
js
push
imul
sbb
jecxz
mov
mov
arpl
jb
shrl
je
stos
test
push
push
mov
pop
jns
out
xchg
or
loop
jbe
and
push
xchg
xchg
adc
lds
pop
ret
repnz
fs
mov
add
mov
aas
lret
mov
inc
sbb
imul
cld
imul
popa
ss
aaa
pop
xlat
inc
adc
dec
movsb
jo
pop
xorb
adc
or
and
test
cmp
add
inc
mov
rcll
sbb
aam
push
push
cmpsb
cmc
cmc
push
fs
clc
pop
rorb
je
sub
add
arpl
pop
aaa
xchg
imul
ja
addb
in
or
and
out
cltd
imul
mov
movb
loop
out
mov
arpl
mov
aaa
push
inc
jns
pop
arpl
mov
push
xchg
iret
jb
clc
stos
lock
adc
xchg
push
test
lock
mov
movsb
mov
push
push
std
sti
and
inc
or
and
lods
inc
cmp
outsb
mov
dec
ljmp
xor
aas
shlb
dec
repnz
ficoms
cltd
out
mov
sub
jo
mov
cmp
in
das
jmp
loop
jbe
loope
fsubl
sbb
mov
fisttpll
xlat
fisubrs
data16
rcll
repz
xor
in
push
ret
lahf
fdiv
outsb
sbb
enter
iret
aas
inc
mov
imul
ljmp
dec
ss
xchg
cmp
in
pop
ljmp
outsl
jl
mov
or
jg
mov
ret
sbb
xchg
dec
inc
daa
cmc
push
jo
pusha
jge
es
mov
shrl
add
jb
mov
sahf
int3
dec
push
aad
out
movsb
pop
jae
in
push
jg
call
lock
jo
aam
cwtl
js
or
xorb
sbb
mov
mov
or
ds
jmp
add
cwtl
adc
xchg
subb
loope
lods
mov
dec
outsb
in
sbb
jae
fs
das
sub
aas
dec
imul
dec
pop
mov
icebp
xchg
add
pop
pop
loopne
sub
push
sti
lret
test
fidivs
sti
pop
outsl
js
js
aas
outsb
xchg
xchg
or
movsl
adc
mov
push
jns
aam
test
in
test
sub
dec
lods
cld
push
popl
sub
xor
mov
popf
xchg
xlat
les
popa
dec
dec
jp
dec
pop
pop
xor
ss
arpl
inc
jnp
fs
in
insl
mov
negl
sahf
pusha
mov
out
ret
pop
xor
fwait
mov
mov
xor
outsl
shlb
mov
into
mov
mov
jns
sub
aam
dec
jbe
das
jl
xor
sbb
in
lods
mov
adc
adc
stos
sbbb
mov
mov
adc
loop
in
cld
icebp
fdivs
mov
sti
add
pop
push
xor
and
movl
push
xchg
mov
mov
sbb
pop
add
inc
cmc
push
lcall
data16
fcmovnu
xor
and
inc
gs
dec
adc
jmp
xchg
test
repz
add
int
test
popa
gs
inc
adc
out
loopne
xor
xlat
dec
or
lcall
cmpsl
or
lahf
call
imul
jmp
cmpsl
jnp
pop
jp
les
pop
mov
out
add
sti
mov
cltd
jl
inc
lcall
add
or
cltd
jne
jo
push
int3
mov
rcrl
or
xchg
dec
mov
jns
fstl
add
ja
dec
fwait
insl
add
into
cmp
push
mov
scas
lcall
stos
idiv
int
lcall
popf
loop
mov
out
sub
xchg
pop
enter
xlat
and
cli
sub
or
jecxz
dec
inc
adc
shll
dec
nop
rclb
mov
call
pop
xlat
dec
fs
push
sub
cmpsb
inc
mov
push
in
xor
test
inc
xchg
and
push
xor
iret
sub
or
mov
and
sub
mov
pop
add
in
fs
pop
push
lock
test
or
or
pop
mov
mov
daa
imul
sarl
mov
mov
add
mov
dec
sbb
fcmovu
xchg
nop
roll
inc
adc
pop
cltd
out
adc
dec
daa
test
or
add
dec
pop
enter
push
int3
sbb
test
in
fstpl
or
lcall
push
filds
shrb
mov
fadd
inc
xchg
lds
sbb
addb
ljmp
cwtl
ret
push
out
rcll
dec
xlat
es
mov
es
popf
cld
mov
lods
movb
sbb
pop
cmpsl
popa
mov
popf
cmpsl
mov
sub
xlat
jp
lea
mov
cmp
jno
sub
lods
pop
mov
lods
fwait
mull
dec
push
mov
and
add
scas
sub
inc
cmp
cmpsl
cmp
xor
fs
in
add
dec
dec
call
inc
add
hlt
push
fldenv
add
push
push
fisttps
aaa
cmpb
inc
bound
pop
fisubrl
fnstenv
xchg
mov
xchg
in
cmp
sbb
fmuls
fs
sti
xchg
jge
scas
pusha
daa
ret
in
out
cmpsl
lea
xor
push
inc
gs
xor
xor
xchg
fs
lcall
dec
adc
ljmp
sbb
icebp
jg
arpl
fidivrs
dec
cmpsl
mov
out
aaa
mov
ret
enter
fs
dec
pushf
test
lahf
push
mov
pushf
sbb
mov
or
imul
mov
mull
hlt
pop
xchg
in
xorl
push
cld
lahf
cmpsb
and
scas
lock
imul
fimull
push
mov
dec
push
loopne
shlb
pop
rcrl
jle
push
jp
jb
out
jle
ljmp
shl
and
xchg
sub
mov
cmpsl
sbb
jnp
pop
loope
or
pusha
test
xchg
push
enter
add
sbb
pusha
push
arpl
les
inc
fstp
into
pop
xchg
push
adc
sbb
pushf
xchg
mov
mov
pop
pusha
jmp
xchg
dec
xor
imul
jl
sub
inc
rcrl
lods
inc
inc
sub
mov
mov
xchg
clc
push
dec
cld
or
fs
leave
fisttpl
xchg
adcb
stos
push
push
xor
imul
cmp
stc
cmpsb
test
out
addr16
pop
int3
cmp
mov
loope
pop
fsubr
fidivs
jb
popf
dec
add
pop
mov
mov
mov
scas
cltd
jl
cltd
cwtl
pop
add
out
lock
cmc
adc
jno
jo
dec
or
and
mov
xchg
pop
pop
xor
pop
ret
aas
aam
lea
repnz
imul
bound
inc
pop
lcall
lret
mov
insb
negb
cmp
mov
fldenv
and
inc
mov
mov
and
nop
jge
pop
loopne
jnp
dec
and
inc
push
out
scas
xchg
xor
gs
and
orb
jg
jb
mov
fsubr
xor
cmp
and
adc
add
ja
push
jnp
xor
bound
xorl
das
mov
shr
and
push
xchg
je
dec
loop
jae
je
xlat
fistl
scas
lahf
mov
lret
inc
mov
jae
xchg
nop
hlt
cmp
movsb
ret
adc
jle
inc
push
faddl
insb
lods
lods
icebp
xchg
enter
inc
iret
fs
jecxz
popa
and
sbb
xor
sub
aaa
add
dec
mov
std
xchg
xor
and
std
loop
xor
bound
incl
das
rcr
sbb
add
cld
lock
fsubrl
mov
sahf
mov
push
mov
ret
adc
mov
xchg
and
cmp
adc
or
cmp
pop
pop
xchg
xor
movsl
lcall
xchg
dec
sub
mov
repnz
call
mov
out
rol
sub
jge
out
push
nop
xchg
mov
xor
push
push
inc
xor
cmp
add
inc
pop
or
add
add
xchg
push
xchg
push
aad
repnz
mov
add
in
rorb
push
rclb
bound
push
mov
mov
jo
adc
shrl
jo
rolb
lods
mov
inc
test
add
invd
xor
jecxz
cmc
adc
mov
jnp
stos
mov
dec
xchg
cli
adc
xchg
jg
xor
adcb
iret
loopne
and
fnstenv
lods
add
ja
push
aam
add
xchg
push
lock
pusha
lret
shll
mov
dec
inc
out
imul
dec
dec
sbb
popf
ljmp
pop
xor
jl
push
cs
jo
cmc
fsub
xor
aam
pusha
add
lea
decl
addr16
popa
or
pop
test
shl
icebp
dec
sbb
inc
repz
mov
subl
aaa
fs
mov
jmp
mov
xlat
jmp
add
and
outsb
mov
push
cwtl
jbe
call
gs
test
sub
test
pop
lds
daa
jecxz
pop
in
mov
or
pop
je
sbb
adc
scas
inc
cmp
or
daa
jb
push
and
into
cs
push
repz
mov
xor
cmovg
xchg
out
push
push
xchg
aaa
adc
sub
notb
neg
lret
jno
dec
fwait
pop
mov
test
pop
jecxz
outsb
xchg
sbb
data16
cmpsb
testl
inc
loope
inc
jbe
addb
loope
aad
jb
mov
dec
fwait
adc
addr16
popa
clc
loope
jge
mov
lods
scas
pop
cmpsb
daa
add
mov
xchg
mov
cmp
int3
mov
mov
ficomps
out
clc
sub
push
arpl
jge
pop
in
imul
cmpsl
pop
in
pop
lahf
jecxz
arpl
loopne
movsl
je
incl
mulb
jnp
inc
sub
lahf
je
jo
mov
mov
fwait
mov
stos
call
aaa
pusha
push
js
es
testl
sbb
sub
loope
icebp
sub
fadds
cmpsl
pop
faddl
sbb
lret
filds
jge
test
test
adc
jnp
icebp
lahf
cmp
and
lret
imul
stos
and
sub
jp
pop
mov
sti
push
sub
int3
mov
and
adc
jge
lcall
mov
mull
mov
sub
sub
sbb
fimuls
cld
or
idiv
test
js
fstpl
enter
loopne
data16
sub
outsb
mov
mov
fldt
fcompl
js
stc
xor
adc
jns
in
mov
inc
cli
push
mov
jb
imul
xchg
cld
mov
or
jle,pn
dec
bound
or
push
aad
pop
inc
shlb
mov
sub
xor
cli
xor
sub
xor
mov
add
test
push
add
jl
ds
es
mov
mov
dec
sahf
dec
gs
fs
arpl
insl
mov
cmp
imul
lock
push
dec
pushf
clc
out
sbb
jl
cmp
sbb
hlt
in
pop
sub
out
or
adc
mov
lds
jmp
sahf
xor
xchg
test
pop
xchg
std
ret
mov
jmp
mov
xor
ja
pop
lret
xchg
push
sbb
and
ja
fsub
adc
in
stos
push
add
or
nop
cld
jl
dec
outsl
add
out
pusha
dec
cs
repz
sbb
inc
cld
add
jae
xor
add
xor
and
test
mov
pop
mov
dec
in
push
popf
sbb
jno
ljmp
sbb
mov
pop
sub
repnz
cmc
cs
jo
outsl
pushf
cmpsl
aaa
sub
push
sbb
dec
adc
mov
movl
bound
mov
mov
mov
cltd
mov
mov
loope
mov
xchg
and
mov
lea
pop
xor
inc
jmp
xchg
std
add
adc
cld
aad
and
mov
push
addr16
and
jo
push
loop
mov
int3
cmpsl
push
sub
ret
jge
adc
cltd
dec
pop
sbb
cltd
in
cwtl
or
cmp
popa
mov
in
repnz
sub
dec
fdiv
fcom
dec
mov
sahf
loopne
jle
mov
decb
and
adc
fsubs
dec
aaa
pop
push
pop
push
pop
ja
clc
jne
sbb
iret
adc
pop
movsl
addr16
push
xchg
cmp
jecxz
fwait
xor
leave
les
and
inc
push
sub
hlt
jmp
fcmovnb
push
and
cmpl
loopne
mov
mov
mov
jmp
xchg
insl
mov
sub
lods
ds
out
xchg
xchg
test
add
cwtl
ljmp
mov
mov
dec
mov
pop
inc
adc
fs
icebp
or
push
andl
fistl
pop
dec
push
repnz
fwait
sbb
jg
dec
dec
stos
int
sub
aas
stos
gs
lods
or
test
test
pop
cmp
jl
lock
xor
cld
cmp
movsl
jmp
jbe
mov
sarl
pop
jp
and
or
int3
inc
add
jle
or
push
fs
popl
call
pop
repz
inc
mov
pop
pusha
enter
add
sub
cmp
out
add
push
test
push
std
sti
pop
repnz
loop
mov
ja
imull
cmp
add
lock
pop
es
mov
out
shrb
into
imul
mov
or
mov
mov
ds
mov
fisubrl
cmp
or
xchg
inc
mov
dec
sub
add
xor
les
js
clc
xor
jle
cmpsl
adc
mov
cltd
xchg
dec
in
pop
or
xor
jle
mov
mov
movl
xchg
xchg
mov
xor
xchg
jo
outsl
sub
int
pop
cmp
jl
jl
jnp
dec
fcmovb
js
ret
mov
cmp
pop
into
rol
mov
push
xchg
mov
and
fldcw
mov
jecxz
pushf
add
ds
xor
cmpsl
sahf
cmp
aas
mov
or
insl
or
pop
fwait
pusha
std
ds
mov
fs
insl
imul
cwtl
jns
pop
jns
enter
push
je
dec
int3
out
push
sbb
pop
stc
mov
dec
xchg
or
clc
mov
test
decl
popa
adc
lret
std
lods
ret
jo
int
push
adc
xlat
lcall
mov
iret
dec
icebp
fstps
dec
jg
popf
aaa
scas
das
add
pop
or
add
std
ja
sub
add
inc
xchg
adc
out
xor
add
or
roll
fldl
int3
sbb
into
aad
aad
cli
mov
pop
ljmp
jl
push
call
xorb
sub
lret
pop
repnz
andl
xlat
lods
push
pop
push
jne
test
fs
add
sarb
sub
mov
mov
or
dec
mov
mov
jmp
xchg
test
adc
inc
sub
add
pusha
into
mov
lea
in
push
stos
ds
cmpsl
mov
cmp
xor
sarb
rolb
notb
das
ficoml
inc
lods
loop
gs
dec
sti
ja
imul
ret
sub
nop
dec
rcrl
xor
mov
dec
int
dec
cmp
pop
cli
into
scas
xchg
cwtl
out
addl
cmp
lea
inc
dec
cmp
cli
in
jecxz
aaa
xchg
rclb
aad
pop
lock
or
and
pop
stc
jle
fdivr
movsb
inc
mov
jae
inc
push
fisubl
movsl
cmp
pop
lock
repz
rorl
xor
or
fidivrs
icebp
cmpsb
clc
mov
movl
cmp
sub
cmc
test
pop
fnstsw
and
inc
xlat
lods
in
mov
scas
push
test
fcompl
lods
std
xchg
in
lret
xchg
push
cli
mov
sarl
sbb
jne
add
mov
cs
sub
pushf
ret
cwtl
xor
jge
sbb
mov
ja
inc
frstor
fildl
mov
cwtl
dec
mov
lret
pop
xor
pop
roll
ficompl
push
and
je
add
pop
gs
in
adc
into
adc
and
je
or
sbb
shll
xchg
aam
add
jb
sbb
lahf
icebp
fildl
inc
cmp
les
push
imul
gs
iret
dec
in
push
ss
ds
jbe
mov
mov
mov
ret
add
pop
add
leave
popl
pop
fdivrp
call
aam
sbb
popa
jb
popf
out
jae
dec
out
scas
dec
arpl
sub
les
int3
jmp
mov
subl
mov
aam
int3
or
jns
pop
shll
or
es
pop
scas
das
push
les
sbb
ret
lret
mov
mov
mov
stos
add
filds
jl
pop
ljmp
sub
loop
fidivrs
add
fdivl
pushf
ret
notb
lret
sarb
orl
in
icebp
lahf
push
in
dec
xchg
sbb
cli
bound
push
inc
push
scas
nop
dec
adc
dec
dec
pop
ljmp
aam
call
jae
shll
stos
sbb
xchg
sbb
inc
inc
mov
pop
ret
cmp
sbb
sub
sub
sbb
movsb
mov
test
mov
mov
add
int
pop
iret
stos
std
inc
mov
fisttps
pop
sub
sbb
bound
push
lock
lock
aas
cmpsb
mov
sarl
loopne
and
shll
pop
xchg
or
repz
pop
cs
icebp
xchg
fcoml
push
into
or
lock
repnz
xor
fs
popa
xchg
push
int3
repnz
adc
adc
incl
out
sub
sub
and
inc
outsl
test
push
imul
bswap
std
add
xorb
xchg
mov
pop
dec
shll
add
mov
jg
cmp
iret
or
jecxz
add
sti
pop
pop
stos
dec
lcall
test
imul
aad
fucomp
cld
insb
inc
cld
das
ret
xchg
daa
push
cld
push
inc
cltd
mov
sub
sub
pop
push
dec
mov
leave
sbb
jae
xor
inc
lea
and
xchg
xchg
push
push
pop
inc
cmpsl
sbb
adc
push
js
pusha
mov
dec
xchg
mov
hlt
xor
and
mov
mov
push
pushf
adc
and
adc
xchg
inc
in
inc
or
adc
mov
pop
sti
inc
xorl
call
scas
testl
xor
out
in
outsb
cmpsb
fstl
sahf
arpl
adc
int3
cmpsl
and
into
add
fcomps
mov
negb
dec
fldenv
mov
out
ret
push
ja
push
ja
adc
cs
subl
loope
loop
cmpsb
ret
cmp
sub
pop
mov
dec
xlat
pop
sub
test
cmp
movntq
icebp
aam
in
and
xchg
addl
mov
je
jecxz
or
arpl
imul
dec
xorb
ljmp
mov
jmp
daa
cld
pop
aaa
pushf
out
dec
loopne
and
ja
pinsrw
test
push
xchg
mulb
ficompl
jne
jmp
dec
jno
or
jb
and
jnp
sub
popa
dec
dec
shrb
enter
mov
sbb
ja
pop
jne
mov
fmull
icebp
fisubrl
and
shl
addr16
fisttps
push
pop
pop
inc
mov
inc
push
sbb
cld
sbb
inc
inc
subb
push
pop
lcall
jmp
add
or
ds
mov
pop
pushf
call
leave
test
movsb
ss
pop
xchg
mov
pop
testb
gs
sub
std
das
andl
pop
or
lods
mov
aaa
lahf
push
lods
lcall
inc
out
sub
shr
adc
push
scas
or
or
mov
jmp
and
outsb
xchg
mov
lret
cmp
push
jge
push
ss
pushf
inc
mov
jnp
mov
push
fadds
mov
pop
mov
fidivs
and
xor
ds
pop
sti
inc
xor
sti
or
mov
testb
xor
out
nop
adc
out
lretw
lds
jb
rclb
movsl
loopne
or
dec
je
and
in
loop
mov
int3
outsb
mov
jnp
ljmp
xchg
add
in
call
or
pop
mov
push
test
ret
fdivs
sahf
pusha
insl
rcll
mov
or
sti
loope
xchg
mov
mov
or
ja
push
mov
dec
jle
xor
mov
das
push
rcrw
or
mov
jbe
lahf
pop
pop
scas
loopne
sbb
push
fnsave
int3
cmpsb
jae
imul
cli
inc
dec
or
cwtl
sbb
xchg
hlt
xor
fldcw
iret
std
mov
or
mov
add
daa
fdivl
icebp
fisubs
inc
cs
mov
inc
aam
outsl
mov
or
sbb
pop
notl
jnp
sub
jnp
jl
add
insb
cwtl
pop
xlat
test
jne
cltd
ljmp
inc
test
mov
pop
loope
les
jbe
in
xchg
jl
cwtl
xor
and
insb
mov
sahf
mov
dec
inc
mov
rcr
rcrl
fidivs
inc
jb
mov
test
loop
jg
and
lcall
aas
loope
dec
out
loope
xorb
pusha
inc
pop
mov
fadds
xchg
mov
out
clc
stos
call
mov
mov
fdivl
dec
mov
mov
ret
bswap
sub
jmp
add
pop
cmp
sbb
lret
sbb
nop
jle
jg
test
xor
fistpl
add
jnp
sub
cli
les
jno
hlt
outsl
imul
rolb
cmp
pop
mov
cltd
add
inc
push
lret
add
mov
cltd
popf
lds
movsl
add
adc
int3
xor
and
dec
cmp
or
mov
test
stos
jmp
outsb
push
rcr
or
arpl
fmuls
pop
das
jne
adc
ret
pop
sbb
sbb
adc
repnz
cmp
inc
dec
cmp
cmp
push
jb
xchg
push
jmp
loop
lods
addb
jnp
add
mov
xchg
lods
adc
js
test
xchg
pop
mov
xlat
cwtl
lahf
xchg
js
or
jge
mov
adc
lods
push
test
mov
sbb
std
xor
cltd
sub
cmpsb
das
sub
push
cli
cmpsb
ret
inc
sbb
cmpsb
aaa
push
jno
addb
cmc
add
jne
fwait
or
addr16
cli
pop
mov
jp
rclb
xchg
xchg
jmp
sub
mov
jb
adc
jno
cmp
lea
lret
pop
pop
mov
mov
jne
fildl
stos
cli
mov
mov
xor
mov
int
mov
mov
add
cwtl
jno
xchg
push
add
add
lods
outsb
and
sbb
int3
or
adc
jo
lods
sbb
ja
mov
dec
xchg
xchg
xor
pop
dec
xor
xor
xchg
xlat
sub
sub
loop
repz
ljmp
loop
stos
push
js
fsubl
cmpsl
pop
dec
into
scas
mov
mov
cmpsb
lret
cmpl
xor
das
mov
lods
jae
fnstenv
ret
lret
das
pop
test
jb
cmc
ds
jno
sbb
popl
dec
xchg
hlt
and
jcxz
push
and
fsubrp
arpl
dec
inc
adc
adc
jbe
cmp
sbb
in
inc
pop
notl
je
ja
rol
rcr
push
loop
adc
mov
faddl
and
dec
pop
out
adc
fwait
mov
cmp
or
adc
push
mov
in
adc
sahf
leave
mov
scas
in
cwtl
sbb
mov
test
inc
sub
ja
mov
lcall
movsb
sbb
popf
ja
dec
adc
fwait
les
lods
popf
fs
and
jae
das
movsb
xor
iret
jl
rcrb
sub
ljmp
mov
jo
jno
lods
mov
popa
cld
es
arpl
in
cmp
rolb
inc
mov
jo
std
inc
or
inc
xchg
xchg
cmp
push
pusha
mov
add
insb
lcall
aad
aaa
rorb
cmp
xchg
jo
mov
jl
adc
mov
out
int
pop
cli
je
sbb
aas
dec
cmp
adc
test
or
leave
xor
pop
adc
sti
cmp
cwtl
sbb
pop
sarb
jge
sub
insb
cmp
dec
cli
or
decb
loopne
fcoml
mov
jne
push
adc
and
testl
ret
pop
into
xor
in
jmp
int
lcall
es
pop
mov
fnsaves
and
or
daa
mov
cmp
sub
sahf
scas
adc
push
add
insb
jb
pusha
sbb
sub
stos
testb
pop
jecxz
dec
mov
repz
test
outsb
mov
out
sub
mov
push
loope
fisttpll
fists
cmp
sub
loop
addr16
jns
fldcw
or
push
stos
scas
rol
lahf
aam
notb
sahf
jle
test
arpl
mov
sub
jo
add
lcall
mov
clc
pop
inc
add
push
mov
or
mov
sub
repnz
push
jno
adc
push
mov
dec
xorl
sbb
lret
pusha
push
and
enter
arpl
inc
and
mov
or
or
lods
out
addr16
cli
outsl
orb
mov
push
arpl
daa
mov
sub
setg
sub
in
jb
ljmp
inc
aaa
test
mov
rorl
int3
sbb
or
sub
mov
jp
pop
in
loop
int
push
xor
jmp
sub
mov
cmc
dec
sbb
fnsave
xor
or
inc
test
pop
imul
es
inc
push
jb
es
jge
ret
push
icebp
das
jne
jnp
cltd
sub
and
push
popf
gs
or
ds
lock
xor
or
or
lahf
mov
add
inc
in
rclb
add
mov
adc
into
mov
pop
lods
sbb
jl
fists
cmpsb
lea
pop
xor
adc
lods
fcmovbe
inc
imul
mov
sqrtps
cli
imul
mov
loopne
mov
mov
ds
in
mov
sar
mov
fdivl
ffree
lock
sub
clc
mov
mov
push
xor
decl
cli
cmp
sbb
sub
inc
lods
shlb
das
lds
push
int3
scas
fisubs
fisubl
mov
or
inc
pop
sahf
cli
mov
imul
js
jmp
sub
push
adc
lret
sbb
mov
inc
xchg
fstpl
outsl
ja
inc
xorl
add
push
out
pop
daa
inc
jmp
jmp
je
push
testb
lea
mov
popf
pop
xchg
roll
cwtl
mov
bound
inc
jle,pn
lahf
sti
mov
outsl
inc
in
icebp
nop
mov
dec
movb
mov
stc
out
xor
aam
cmp
div
stc
shl
outsb
cmp
out
loopne
pop
add
das
int
test
pop
les
fadd
push
jmp
lcall
popf
push
out
addl
push
push
jae
or
cmpsl
jl
ja
test
repnz
aaa
dec
adc
inc
or
aam
inc
stos
and
shll
dec
pop
mov
and
test
push
or
cs
daa
dec
sub
outsl
icebp
lahf
dec
inc
lahf
mov
sbb
adc
jnp
ret
out
daa
add
inc
dec
sub
pop
xorb
push
push
xchg
cmp
mov
insb
leave
shlb
jbe
pop
lret
add
mov
push
lods
lcall
test
add
icebp
movsb
mov
sahf
lahf
pop
or
lods
enter
ror
mov
lret
mov
adc
dec
push
and
fildll
jecxz
stos
jnp
inc
jge
in
pusha
push
cmpsb
and
bound
dec
in
jne
mov
ss
mov
sbb
xchg
cs
mov
hlt
mov
xchg
pop
push
je
cmp
leave
mov
push
ss
js
push
push
sub
bound
fimull
iret
ret
adc
jl
fs
std
outsb
repnz
in
jbe
or
mov
sbb
cmpsl
enter
cmp
fists
mov
jmp
or
xor
shr
add
in
adc
jg
aad
mov
cmp
out
je
aad
add
sbb
sbb
fwait
mov
xchg
xchg
pusha
pop
mov
into
in
push
jle
mov
push
clc
mov
nop
sub
or
popa
addr16
es
mov
dec
data16
stos
std
sub
sub
xor
jns
jl
inc
ljmp
push
push
and
dec
je
aas
lret
sub
icebp
mov
xchg
movsb
aaa
jp
imul
stc
cltd
ss
xor
or
xor
sahf
push
and
pop
mov
ds
add
repnz
repnz
je
jmp
push
stc
mov
mov
push
xlat
ja
fs
push
in
pop
ret
mov
lahf
lret
push
dec
mov
shrl
sub
inc
loop
pop
xor
adc
mov
and
loopne
les
xor
in
and
test
pop
sub
xchg
xor
lcall
push
xchg
cmp
insb
sbb
les
push
pushf
jns
mov
mov
popf
cmpsb
cmp
push
mov
imul
and
sbbb
push
xlat
js
jge
push
mov
xchg
in
imul
xchg
rcrl
cltd
data16
mov
les
mov
jns
and
mov
xor
xchg
shrl
xchg
sbbb
les
adc
daa
mov
xor
andl
enter
test
inc
lock
mov
or
and
rcrb
pop
or
insb
sbbb
jp
or
fstpl
lret
add
cmp
rcr
rcll
mov
addr16
push
lock
xchg
ja
repnz
nop
xchg
xchg
sti
jno
cmp
adc
aas
xchg
sbb
pop
test
arpl
add
add
sub
mov
xchg
lcall
ret
push
hlt
lret
push
idivl
cmpsb
negl
mov
mov
lret
and
rclb
pop
pushf
jo
pusha
dec
and
push
push
das
fiadds
sub
scas
or
mov
push
or
jnp
xchg
jle
or
or
and
adc
das
es
xor
scas
js
call
dec
fsubl
xchg
sub
push
popf
pushl
adc
scas
inc
daa
xor
stos
ret
xor
or
sbbl
pop
sub
jae
rol
dec
xchg
out
inc
push
or
sub
pusha
inc
ss
mov
mov
mov
mov
sub
add
mov
dec
popf
iret
lods
shlb
and
shrb
pop
cmpsb
cmpsl
pop
es
xor
add
and
and
movsl
mov
leave
call
jno
or
or
cmp
or
clc
lods
das
popf
icebp
xchg
nop
int
xor
ret
in
ficomps
stos
cmp
jnp
ret
lods
lret
loope
push
push
fisubs
iret
das
stos
cwtl
sahf
mov
scas
pop
xchg
lret
scas
add
and
sarl
pushf
add
add
mov
mov
jbe
bound
lock
sbb
adc
jne
roll
es
sbb
inc
mov
pop
test
movsl
sbbl
cmc
inc
fstpl
clc
xlat
sub
cmp
or
out
mov
mov
jmp
fiadds
shlb
inc
jge
repz
adc
lcall
mov
jb
mov
pop
xor
fs
add
dec
jns
lret
mov
add
dec
lahf
icebp
test
cmp
pop
mov
out
push
jns
cmc
in
sbb
cmp
push
pop
cmpsl
fadd
mov
ret
push
scas
cmp
inc
cmp
push
sarb
inc
test
push
adc
leave
fwait
mov
and
or
into
repnz
jl
lods
inc
xchg
mov
mov
es
cmp
pop
aaa
mov
jle
xor
pop
inc
popl
jecxz,pn
lea
lods
pop
cmp
subb
push
test
inc
push
loopw
hlt
jecxz,pt
std
sub
adc
mov
mov
filds
push
pop
xor
xor
fs
inc
sbb
or
add
stos
pusha
lods
leave
push
clc
bound
lods
scas
sub
cmp
popf
and
cmp
cmc
adc
lock
xchg
mov
pop
sbb
jno
cld
mov
scas
inc
mov
push
push
xchg
pop
or
stos
jb
jno
adc
adc
test
mov
cmp
sbb
adc
loop
je
add
data16
jge
and
mov
into
les
lcall
pop
vpcmpgtw
leave
sbb
cmp
jle
popf
sarl
or
cltd
xchg
jne
fwait
test
and
ja
mov
mov
nop
ret
arpl
mov
ss
mov
push
adc
roll
jno,pt
imul
mov
mov
jmp
jp
push
andb
stos
ret
loop
daa
pop
lods
jo
lcall
idiv
daa
xchg
les
jl
inc
inc
cmpsb
dec
jb
call
xchg
fcoms
cltd
jp
mov
add
adc
mov
ror
stos
aas
sub
pop
aad
test
out
js
in
mov
jne
xchg
je
mov
lock
sbb
test
or
xor
sbb
outsl
push
cld
imul
mov
adcb
ret
std
into
dec
cmpsl
sti
sti
xchg
cmp
lret
mov
mov
aad
pop
adc
sub
cld
mov
sub
das
std
pop
adc
mov
cmp
inc
js
xor
pop
jl
loop
jnp
in
xor
stos
dec
fdivrs
sbb
es
addr16
aad
rcrl
adc
mov
adc
or
arpl
mov
lret
lret
fdivl
sti
clc
mov
add
sbb
mov
mov
lret
js
loope
cmpsl
testb
add
mov
push
mov
shr
push
loop
inc
test
cli
mov
cmp
insb
pop
adc
push
mov
push
je
sbb
fadds
pop
push
pushl
push
mov
mov
mov
add
adc
mov
lea
xor
in
push
je
xor
sub
mov
hlt
mov
adc
shll
adc
in
fdivr
imul
jge
adc
out
inc
push
int3
mov
pop
add
jb
imul
xor
pop
jge
jecxz
xor
mov
jl
cld
pop
sub
lock
or
xchg
mov
dec
and
pop
mov
lret
dec
in
mov
dec
outsb
out
insl
jae
ja
inc
loopne
push
idiv
popa
pop
and
push
mov
mov
adc
mov
shr
and
mov
in
sub
sarl
cmp
arpl
pop
dec
pop
mov
lods
into
sbb
daa
mov
mov
adc
jge
jmp
mov
mov
lods
lret
outsl
ljmp
cwtl
pop
cs
or
push
push
lahf
mov
dec
pop
xor
cli
std
jp
cmp
and
cs
cmpsl
stos
cmp
push
cwtl
adcl
gs
sub
vcmpps
fs
in
stos
xchg
cmp
adc
rorb
in
scas
ljmp
sbb
and
mov
mov
lea
add
rorb
mov
js
mov
xor
orb
movsl
fisttpll
push
or
jg
jo
or
jns
inc
jp
xchg
xchg
adc
mov
xchg
mov
fnstcw
out
outsl
adc
sbb
jo
arpl
loop
pop
add
lods
fnstcw
jg
or
xor
push
aam
mov
adcl
xlat
cmp
loop
push
repnz
adc
jne
jg
es
mov
shrb
jne
mov
jne
mov
imul
out
pop
jae
fmull
fs
sub
push
dec
nop
ljmp
and
push
push
jbe
outsb
cltd
adc
cmpsb
adc
imul
xchg
sbb
inc
jge
or
incb
test
xor
jb,pt
ljmp
inc
test
mov
push
sbb
cmp
xchg
test
add
or
mov
adc
push
cs
add
mov
repnz
jne
mov
jmp
or
fwait
pop
mov
cmpsb
arpl
and
lods
adc
ja
movsl
fcoms
stos
lahf
fdivrs
sbb
ja
push
xchg
fistps
dec
icebp
mov
pop
xchg
mov
push
jns
pop
test
or
or
cmc
aad
adc
xor
jbe
or
shll
dec
lcall
aad
add
inc
sti
push
cli
test
mov
inc
or
pop
xchg
roll
xchg
pop
mov
adc
fldl
add
daa
push
call
add
bound
or
sub
lahf
pushf
adc
cmpsl
adc
jl
sbb
xchg
jo
cmp
mov
bound
test
mov
movsl
mov
cmp
cmpsl
gs
jne
push
arpl
and
inc
iret
xor
in
push
pop
pop
ret
pop
or
sub
mov
in
aaa
jae
cmp
rorl
roll
aad
iret
push
inc
enter
and
xchg
xor
mov
mov
jns
inc
sub
dec
and
lock
pop
mov
popf
xchg
mov
pushl
pushf
inc
dec
sub
outsb
and
test
add
cmpsl
inc
mov
mov
and
decb
or
test
mov
mov
ret
das
repnz
sbb
cmpsb
cmp
repz
insb
orl
push
aaa
push
fstp
and
dec
and
inc
dec
adc
out
mov
ficompl
lahf
loope
mov
daa
sub
pop
test
popa
dec
mov
xor
fmul
mov
popf
je
mov
adc
push
test
loopne
dec
jo
ds
and
test
into
loopne
fmull
rorb
movsl
sti
push
sti
push
testl
xor
aaa
xchg
call
in
mov
icebp
xchg
sarl
or
sbb
test
ds
xor
push
jnp
cs
lcall
test
lds
mov
loop
xchg
and
insb
mov
dec
repnz
fnstenv
test
jb
inc
fdivrs
sarl
inc
movsb
pop
andb
push
xchg
cltd
and
stos
cmpsl
addr16
int3
pop
loope
pop
dec
jae
dec
cmpsb
jnp
mov
inc
ror
ja
ljmp
lret
addb
lahf
and
adc
fstpl
fdiv
shrb
sahf
push
mov
xchg
jbe
das
fstl
pop
icebp
test
enter
mov
fsubs
movsb
nop
cmp
adc
fisubrl
jge
in
stos
ret
pop
pop
ret
enter
cmp
mov
mov
jae
add
mov
fdivl
sbb
sbb
aas
mov
sub
and
and
int3
in
push
inc
mov
jle
inc
insl
xor
ror
mov
jne
stos
lock
leave
and
cwtl
add
mov
jno
or
ljmp
jle
pop
loop
jno
pop
add
jl
sbb
aas
fiaddl
push
ss
arpl
ja
pop
ss
mov
sarb
cmp
call
pop
lods
xchg
jl
aaa
pusha
add
and
jae,pt
inc
push
es
mov
int
addr16
repz
shlb
mov
add
lods
sti
push
mov
icebp
pop
dec
jae
loop
cmc
outsl
pop
jns
add
test
ljmp
pop
push
pop
xchg
loop
aas
inc
dec
jno
mov
jno
add
test
adc
jno
mov
outsb
fistpl
xchg
scas
sub
pop
sti
xlat
inc
jbe
and
hlt
inc
arpl
push
add
fwait
pop
xchg
arpl
mov
sbb
push
or
mov
mov
pop
in
lds
popf
cmp
or
jae
inc
les
add
das
mov
js
jmp
sub
sbb
ds
xor
in
aas
fwait
xchg
and
sbb
pop
dec
sub
mov
je
or
leave
or
in
mov
pusha
outsb
xor
xor
xchg
push
seto
lea
push
lds
and
outsb
pushl
pusha
sti
mov
jno
jge
addr16
jb
cmp
mov
inc
push
leave
jl
je
aad
or
sbb
dec
push
and
int3
data16
addr16
aaa
inc
and
add
jo
lahf
fnsave
mov
mov
mov
insl
inc
mov
imul
test
bound
imul
or
or
add
rcrl
mov
sub
xor
mov
mov
shlb
or
sar
icebp
loopne
jecxz
cmpsl
mov
outsl
sub
and
or
sub
jmp
cltd
sbb
cmpsb
cmc
xchg
or
test
int3
loopne
sbb
push
idivl
pop
xchg
pop
lods
adc
jle
inc
xchg
jno
fbstp
jp
and
push
adc
cs
mov
and
leave
lock
xor
gs
dec
movsb
mov
jbe
fwait
cmc
out
testb
push
cmp
cmp
dec
pushf
add
inc
mov
fimull
jge
in
jb
int3
push
ficoms
scas
and
jnp
fists
sub
inc
xchg
mov
xchg
jmp
pop
inc
xor
cmp
sub
inc
inc
xchg
jl
cmp
inc
mov
dec
add
insl
cwtl
inc
add
adc
test
fistpl
negb
add
lds
test
sbb
addr16
jnp
xchg
lahf
jl
xor
sub
jns
jecxz
sub
mov
daa
sahf
push
mov
outsb
test
inc
aaa
test
pusha
je
xchg
jmp
xor
mov
and
testb
data16
inc
aas
push
fdivrp
mov
sub
adc
jmp
adc
lods
out
or
bound
sahf
adc
rcr
add
lcall
xchg
mov
leave
push
mov
out
xchg
cltd
jnp
aaa
pushl
push
jb
adc
xchg
mov
iret
clc
and
fimuls
jns
adc
mov
inc
ficoml
movsb
add
gs
mov
fwait
xor
mov
cmp
das
ss
dec
inc
cwtl
jb
push
push
pop
cli
movsb
aam
jbe
pop
sbb
pop
pop
mov
jae
mov
fwait
xor
test
lods
mov
shr
dec
inc
fs
mov
cmp
jg
lods
xchg
fsubrs
cmp
sbb
insb
or
xchg
fldt
jmp
fldenv
test
scas
fdivrl
mov
jo
movsb
mov
jne
rclb
sbb
pop
pop
or
mov
jg
adc
or
je
cmp
ret
cltd
pop
dec
call
and
jg
dec
cltd
mov
fs
and
ret
sbb
jnp
scas
xchg
test
imul
daa
call
repnz
push
shll
xchg
repz
xchg
add
xor
ret
icebp
push
dec
mov
sarb
shlb
scas
mov
in
mov
insb
inc
gs
cld
lods
imull
cmpsl
int3
pop
xchg
xchg
mov
adc
sub
test
incl
ret
xchg
and
je
and
jge
dec
aas
mov
pushf
hlt
xchg
dec
fnstenv
test
repz
leave
insb
mov
sub
insl
clc
stos
mov
roll
in
inc
push
imul
mov
movsl
push
ja
rcrb
jo
sbb
je
pop
cmpsb
testb
aas
inc
jo
and
mov
cmp
fcmovu
loopne
or
xor
xor
loopne
out
ljmp
leave
push
jno
pop
inc
mov
int3
inc
xchg
out
jb
frstor
ja
cli
add
in
imul
sbb
mov
jo
mov
cld
inc
icebp
repnz
cmp
adc
mov
and
imul
push
leave
out
fldl
outsl
rorl
add
fists
movntq
mov
xchg
out
fdivrs
dec
xchg
mov
movsl
jge
push
inc
loope
pop
push
mov
xor
addl
inc
shr
inc
xchg
jae
orb
lods
imul
adc
adc
loope
es
lea
daa
cmc
out
sahf
testl
nop
mov
pop
leave
mov
cwtl
imul
mov
sbb
cmp
shll
popf
out
push
add
cmp
movsl
sarb
cmp
into
inc
or
int
sub
popa
out
loope
mov
mov
or
faddl
xlat
add
out
rorl
mov
xor
hlt
adc
insl
dec
jbe
rcll
in
jbe
pop
push
pop
adc
jnp
lock
icebp
mov
sbb
jmp
lods
repnz
call
sarl
adc
movsl
mov
pop
cmp
popa
sub
dec
xchg
mov
inc
push
inc
jl
xor
pcmpgtb
xor
mov
jge
int3
repnz
repnz
jmp
std
dec
jg
test
pop
clc
js
mov
sbb
xor
fnstcw
jne
jmp
fists
push
neg
les
or
push
jno
pop
outsb
jns
stos
fwait
mov
xchg
xorb
xchg
push
adc
mov
inc
aam
xchg
jl
sbb
nop/reserved
inc
es
pop
and
icebp
inc
and
cwtl
sbb
ffreep
xor
xor
jl
lcall
js
outsl
stos
insl
mulb
enter
dec
sbb
ljmp
push
xchg
or
inc
sti
xchg
loope
mov
pop
xchg
arpl
cld
cmp
addb
dec
xchg
lret
mov
movsb
ds
jmp
popa
inc
xchg
dec
out
rolb
out
dec
shrl
push
xor
jbe
mov
sarl
cli
mov
out
xchg
sbb
pop
bound
adc
mov
popa
arpl
in
push
mov
lahf
out
or
adcb
lret
sbb
sub
xor
arpl
mov
loope
adc
mov
mov
ja
stos
cmp
data16
or
das
and
pop
sbb
rcr
dec
neg
mov
cmpsl
mov
sti
ljmp
push
inc
jecxz
push
movsl
mov
mov
push
cmpsl
sbb
inc
sbb
inc
lahf
and
clc
or
jmp
fwait
jns
dec
dec
dec
push
mov
leave
push
shrl
imul
inc
or
push
fwait
movsb
xor
in
leave
pop
into
stos
out
fsubrs
out
and
push
xchg
jne
fs
jecxz
movsb
mov
mov
nop
jo
movsb
fs
sub
in
mov
pushf
push
mov
outsl
inc
loope
mov
mov
bound
in
lret
jp
mov
inc
lods
inc
push
faddl
jo
mov
sub
jp
cmpsb
mov
mov
fsubrl
xchg
xor
fdivs
jno
push
adc
rol
cld
sub
dec
leave
fsubrl
aas
jae
popf
sahf
nop
adc
das
adc
dec
mov
orb
or
mov
andl
imul
and
pop
outsl
mov
je
fldenv
cli
mov
lcall
sbb
lahf
mov
and
push
jns
les
jge
adc
das
bound
ret
xor
xchg
cmpsb
mov
stc
push
add
push
xchg
sbb
pop
fldt
dec
jb
xchg
jnp
mov
jns
movsl
shrb
pop
ret
cmpsb
int
push
xor
xor
mov
andl
mov
pop
mov
int
mov
shrl
mov
xchg
jg
push
std
out
jbe
push
and
fbstp
mov
xchg
imul
jb
in
add
repnz
and
mov
in
push
in
mov
int3
pop
dec
or
iret
in
and
and
jnp
je
push
jg
mov
in
in
outsb
cld
jge
sub
cld
into
and
mov
and
cmp
adc
jmp
ret
movsl
add
gs
xchg
xchg
jae
add
push
enter
leave
mov
add
and
xchg
in
in
push
lods
pop
cld
or
imul
and
adc
add
neg
iret
das
gs
inc
pusha
cmp
cmpsb
and
push
sbb
mov
sbbb
sbb
jp
test
fmuls
lds
or
stos
bound
or
add
out
jmp
daa
in
cmpsl
xor
xchg
cmp
bound
and
mov
pop
repz
lahf
idivl
add
jle
int3
mov
fiaddl
cltd
repz
push
clc
fs
sbb
andb
pusha
out
call
xchg
pushl
aaa
cmp
fldln2
in
cmc
outsl
mov
aaa
mov
fstp
pop
adc
push
or
mov
inc
fnstenv
imul
rolb
cmc
mov
lods
sub
lcall
jge
and
pop
xchg
and
xor
addb
mov
sub
lds
cwtl
xchg
cmp
lea
leave
xlat
lahf
int
shrl
mov
xor
pop
jne
xchg
pop
cld
aad
push
insl
pop
push
sbb
sub
sbbb
pushf
xor
jae
stc
pop
mov
imul
xor
inc
and
cmc
scas
mov
in
cmp
jmp
popf
movsb
iret
js
sub
push
sub
sub
mov
xor
dec
imulb
or
and
mov
outsl
add
fildl
cmc
in
std
xchg
jae
mov
mov
aad
sbb
mov
nop
jb
in
dec
sbbl
call
mov
and
data16
jns
loope
lds
xor
addl
sti
aas
lods
out
shlb
xchg
les
ds
test
fsubrl
xor
sub
xor
popa
inc
shl
cmpsl
jmp
addr16
jb
fxch
hlt
mov
testl
loope
lret
dec
and
inc
aad
xchg
test
ret
mov
mov
or
rcr
add
cwtl
stos
or
mov
jnp
mov
pop
icebp
js
xchg
leave
es
stos
fisubs
test
aaa
in
lret
arpl
mov
sub
push
jbe
jl
sub
pop
aas
das
dec
mov
mov
adc
push
xchg
mov
dec
xor
test
pusha
hlt
lret
mov
outsl
mulb
xchg
jnp
sbb
idivl
cmp
mov
mov
pop
mov
cld
jg
daa
cmp
and
rorb
adc
xor
test
ja,pt
mov
dec
repnz
data16
in
notb
out
xor
mov
je
aad
cmp
clc
arpl
xor
dec
mov
popl
push
push
mov
int
lods
xchg
fldenv
push
das
loopne
mov
pop
xor
loope
xor
lret
testb
or
ds
pop
ret
adc
xchg
dec
add
cltd
popf
lock
adc
or
lret
bound
push
rcrl
cltd
mov
ss
lock
adc
xchg
aaa
dec
imul
popa
arpl
lods
xchg
out
dec
sbb
or
sarb
iret
adc
pop
lock
jae
mov
loope
out
hlt
and
xchg
fsubs
mov
push
int3
push
in
dec
mov
dec
stos
outsb
mov
xor
es
test
add
je
stc
or
xor
inc
es
or
jle
pusha
in
fistl
add
js
push
out
movsb
scas
enter
pop
lret
in
pop
nop
and
sbb
ss
cwtl
movsb
push
ror
rol
test
dec
repnz
loopne
xor
jo
out
sub
pop
pop
movsb
paddsb
cld
insb
cmp
adc
in
cmp
jb
ljmp
adcb
fs
add
sub
xchg
xchg
out
shlb
fcoms
rorl
cmp
test
mov
add
cwtl
xor
cmc
je
and
inc
test
xchg
lahf
aam
mov
mov
mov
mov
out
movsl
push
inc
or
push
and
insb
addr16
lcall
pop
mov
test
cmc
mov
mov
mov
cli
lods
adc
push
incl
push
mov
loopne
jp
cmp
mov
push
lahf
cmp
jno
push
xchg
testb
mov
icebp
mov
mul
das
inc
push
sbb
addr16
jae
cmp
insb
and
xchg
dec
sub
cmpsl
add
cmp
dec
cltd
lea
aam
jmp
or
daa
or
pop
pop
jbe
dec
in
sub
lret
sbb
jno
mov
xchg
sti
mov
inc
aaa
mov
enter
mov
xchg
sbb
popa
xchg
ljmp
add
push
inc
mov
jb
movsb
imul
xor
repnz
iret
mov
xchg
mov
xlat
out
sub
je
pop
sub
cmp
dec
add
pop
sub
cs
mov
xor
xor
shrb
hlt
in
jne
daa
ret
mov
imul
mov
adc
ja
cmc
sub
mov
xchg
push
pop
pmulhuw
popa
repz
xchg
nop
fstpt
inc
inc
cs
cmp
push
add
in
xlat
bound
sahf
or
les
bts
movsl
pop
loope
fisubs
mov
iret
jl
sub
cwtl
jecxz
sarb
xchg
xchg
mov
inc
fsubrs
mov
mov
test
test
aam
inc
mov
mov
stc
pop
inc
rcrl
sub
mov
movsl
inc
mov
lock
fsubs
hlt
jge
push
scas
pop
pusha
push
xchg
repnz
sahf
push
fistps
inc
mov
sub
fs
stc
xor
negb
sarl
cmpsl
and
in
mov
mov
lock
in
iret
and
dec
mov
push
mov
mulb
push
lcall
lock
clc
sbb
sub
mov
test
sbb
push
in
cltd
and
jle
sub
aam
jle
ds
stos
inc
lock
fwait
fnstcw
or
data16
ret
jp
ss
and
ret
je
pop
and
test
and
roll
or
dec
sbb
sub
popa
mov
pop
dec
pop
ss
jns
subl
je
outsl
adc
xor
lahf
jbe
mov
imul
push
lea
dec
cwtl
or
outsb
or
rcll
imulb
push
outsl
adc
xor
adc
or
int3
aas
dec
push
lods
jne
mov
std
push
pop
mov
daa
mov
mov
sub
xlat
xor
rcl
jbe
pop
orl
pop
in
sub
xorb
sti
lods
lds
daa
push
lds
stos
cwtl
ret
cmp
sbb
insb
mov
dec
test
dec
pop
ret
pop
or
mov
jb
iret
fimull
fdivl
pop
mov
mov
xor
ljmp
stos
mov
cmp
lcall
push
inc
lds
test
pop
aad
hlt
test
xor
xorb
or
pop
stos
loope
dec
xor
test
push
sbb
jno
fwait
outsl
mov
and
xor
add
je
pop
inc
aaa
int3
lret
push
in
sbb
in
outsl
sbb
push
sbb
xchg
repnz
lret
shlb
add
and
sbbb
fdivrs
mov
adc
cmp
aad
sahf
sub
push
sbb
xor
out
cltd
fdiv
imul
or
mov
popa
in
stc
lret
sbb
rol
adc
mov
mov
insb
lds
rorl
mov
cmpsl
movsl
xchg
jl
es
shlb
mov
out
les
fidivl
sbb
inc
jb
xchg
mov
add
iret
les
cmpsb
adc
pop
pop
repnz
mov
in
dec
jmp
and
pop
iret
adc
push
imul
inc
push
data16
pop
xor
scas
push
dec
pusha
push
mov
mov
pop
std
mov
daa
jg
inc
aaa
dec
fwait
jno
xor
jbe
mov
out
stc
mov
arpl
xor
insb
xor
mov
out
daa
rcl
xorb
outsl
in
cmp
outsl
push
repnz
sarl
arpl
in
das
sti
cmp
in
movsl
add
cmp
push
jp
xchg
cltd
adc
aad
nop
div
pop
push
ret
popf
test
adc
sbb
cmpsl
mov
adc
lcall
aas
imul
dec
insb
push
jl
outsb
imulb
inc
mov
xor
mov
sti
cmp
rcr
mov
cmpl
mov
ja
insl
jne
bound
out
stos
push
sahf
or
mov
fucom
das
mov
lret
sahf
into
aam
pop
cmpb
xor
movsb
fsubr
add
test
fwait
xorl
rol
je
jmp
mov
mov
and
cmp
push
xlat
les
push
ss
mov
xchg
and
outsl
je
in
scas
add
mulb
inc
inc
mov
inc
cld
lret
in
inc
xor
lahf
in
dec
push
rorb
lods
loope
cld
mov
jnp
rcl
das
orl
fcmovne
fdiv
cmp
sbb
jl
mov
sti
lret
cld
fwait
mul
inc
mov
fnstenv
pop
add
movsb
idiv
test
mov
movsl
hlt
push
mov
mov
and
int
sub
out
sub
sbb
add
push
push
ja
sbb
je
data16
sbb
cmp
imul
push
add
jne
inc
mov
xchg
add
mov
ja
pop
push
stc
adc
into
sub
mov
jl
push
mov
xchg
lcall
subb
cmpsb
inc
xchg
sbbl
nop
aas
int3
dec
lea
int
sbb
xchg
ret
lea
popf
push
test
jbe
divb
push
cmpsb
cmpsb
push
mov
xchg
cmpsb
and
pop
xchg
repz
lds
adc
mov
ret
lret
sub
rorb
idivb
inc
jmp
or
pushf
lds
stos
inc
pop
adc
adc
sbb
mov
mov
loop
aad
out
rcr
mov
pop
fsubs
adc
imul
mov
pop
sbb
dec
mov
xor
bound
mov
pop
rclb
inc
sarb
add
push
cld
movsb
cmp
xor
sub
sub
xchg
cmp
stos
sub
rcrb
gs
dec
outsb
xchg
pop
mov
pop
pop
add
pop
xchg
and
in
and
sarl
dec
sub
and
and
ret
pop
ds
push
mov
mov
sub
push
push
jb
mov
pushf
sbb
lea
xor
fadd
in
sar
dec
push
adc
pop
nop
fldenv
addb
repnz
pop
push
xor
push
inc
pop
ss
mov
movsl
scas
xchg
sti
imul
call
jle
inc
cmp
cmp
mov
sahf
jbe
ds
pop
xchg
aas
inc
into
cmp
sar
mov
push
addr16
inc
cmpsl
imul
hlt
jbe
mov
insl
pop
xlat
lods
pop
mov
dec
and
andb
jge
iret
loopne
sub
popf
cmpsb
int3
int
push
dec
out
inc
fst
mov
addl
pop
int
mov
mov
jl
cwtl
or
jns
ljmp
and
leave
dec
mov
daa
jmp
mov
xor
dec
mov
mov
je
rclb
aad
push
xchg
sub
jmp
sbb
sub
scas
icebp
sbb
js
lret
outsl
icebp
mov
jns
ss
or
pushfw
cs
xchg
enter
das
movsb
into
fldcw
mov
subl
aad
xchg
xor
xlat
loopne
mov
mov
pop
inc
aam
add
xchg
mov
mov
hlt
mov
jno
aad
inc
xorb
or
shlb
add
or
push
lea
pop
or
dec
dec
jbe
xor
mov
push
test
sub
aam
fidivrl
ret
popa
test
ja
ljmp
sarb
ds
cwtl
cli
mov
stos
sbb
repnz
notb
mov
lcall
das
xchg
shrb
mov
or
sbb
inc
mov
enter
jno
loope
xlat
push
icebp
jae
sub
cmp
sbb
shlb
or
jb
dec
dec
and
pop
mov
outsl
lcall
jno
cmc
subb
xchg
mov
lods
jl
xlat
or
or
lock
in
cmpsl
out
add
sbb
jae
out
insb
repnz
in
inc
push
mov
sbb
lret
jge
cmp
imul
pop
pop
pop
mov
xor
jne
out
mov
jns
hlt
or
adc
fldenv
out
pop
in
jb
jl
push
call
iret
push
mov
test
adc
js
orl
or
inc
cwtl
pop
lods
out
cmp
mov
sti
mov
insl
xchg
add
nop
mov
xchg
ret
inc
mov
cmp
ljmp
jmp
jmp
loope
icebp
loop
push
jp
push
xchg
push
sbb
mov
jl
fsub
dec
mov
lods
push
mov
mov
jo
imul
adc
test
mov
jle
mov
mov
mov
mov
inc
cs
lcall
int3
sbb
and
pop
push
adc
pop
mov
shll
jge
sbb
movsl
testb
xor
in
mov
inc
pop
and
ljmp
mov
jecxz
aam
pushf
lcall
and
jnp
jno
std
mull
and
call
dec
or
sahf
jg
cltd
mov
loopne
push
jno
adc
bound
cmp
enter
adc
jge
gs
fwait
xor
jle
mov
std
jns
push
shrl
ljmp
sbb
push
fwait
and
cmp
fstps
mov
pop
adc
data16
stc
dec
out
pop
imul
iret
add
loopne
push
leave
data16
mov
jge
out
cwtl
adc
and
loope
sub
and
jns
sahf
add
pop
pop
dec
jge
mov
movsl
dec
xchg
add
fistl
cmpsl
add
inc
jne
aaa
mov
xchg
enter
add
dec
cmp
movsl
test
cs
sbb
cld
cmp
rorl
mov
fldl
cmpsl
push
jle
mov
imul
fcoms
lret
push
or
dec
dec
mov
clc
sbb
and
sub
push
nop
or
inc
js
data16
insl
in
loope
ljmp
mov
jno
insl
mov
test
pushf
jge
mov
adc
cld
adc
cmp
cmp
mov
and
std
inc
jno
mov
out
push
rorl
cwtl
jmp
push
pop
push
loopne
inc
daa
xor
insb
and
push
jns
hlt
sbb
movsb
adc
jg
mov
ret
shll
pop
xchg
push
pop
cs
cwtl
and
lcall
inc
out
into
lods
cmp
jae
in
pushf
push
or
dec
aam
ljmp
sub
adc
sbb
fwait
arpl
lock
inc
test
sbb
imul
aas
jae
hlt
mov
jbe
sti
or
insb
cltd
jno
outsl
mov
inc
rorl
insb
and
or
inc
push
out
out
call
movsb
xchg
fstl
xor
mov
jns
es
lcall
xor
and
nop
scas
rorb
add
mov
add
jnp
push
mov
jmp
inc
xchg
sahf
mov
es
ja
outsl
cmpsb
in
stos
jno
push
pusha
xor
adc
js
pop
es
pop
dec
sti
ss
xchg
jne
test
or
cmp
aad
mov
stos
add
jl
inc
add
repnz
outsl
ss
bound
xchg
adc
cltd
fisubrs
syscall
lea
repnz
stc
xor
loop
dec
xor
mov
movsl
scas
add
cmpsb
loope
cltd
push
push
push
mov
scas
inc
mov
sub
out
stc
xor
testl
cli
js
mov
addr16
xchg
aaa
and
mov
and
jg
or
push
into
push
adc
pop
popa
sbb
push
add
rolb
fimull
jae
aaa
mov
movsb
mov
scas
test
dec
daa
add
cmp
jb
loop
mov
iret
dec
cltd
pop
mov
out
jg
aaa
lods
inc
adc
je
add
mov
sbb
or
rcrb
ds
jge
rcll
insl
leave
ret
mov
enter
adc
movb
jae
mov
xor
lods
push
inc
pop
sub
popf
xchg
pop
xor
test
jmp
and
cmp
pop
inc
add
fwait
aam
sbb
jecxz
loope
je
test
or
jo
cs
xchg
inc
gs
xlat
fwait
imul
sub
sti
in
and
icebp
or
xor
mov
mov
pop
test
out
xchg
sub
int
jnp
popa
mov
xchg
fwait
out
add
inc
add
inc
ja
mov
mov
push
mov
test
jne
call
pop
xor
insl
dec
sbb
xchg
mov
mov
cwtl
sbb
lcall
es
enter
aam
xor
adc
jl
jge
cwtl
mov
lods
ja
int3
test
pop
pop
fmulp
or
aad
mov
aas
sub
xor
push
sti
pop
in
xchg
fsubp
cmp
pop
sub
insb
rcrl
lea
popf
out
inc
mov
sub
jl
cmc
inc
mov
push
lods
push
xchg
and
dec
dec
lods
aas
adc
pop
outsl
lahf
jecxz
xchg
cmp
addb
ja
cs
jge
test
cli
jbe
sub
cmc
fcomp
imul
sub
roll
push
in
aaa
xchg
inc
shlb
or
mov
mov
ret
js
jg
xchg
push
dec
iret
cli
outsb
cmp
insb
xchg
outsb
ficompl
mov
repz
idiv
sub
int3
lret
mov
ficoml
cmc
shl
enter
stos
sub
stos
cmc
lods
jae
and
fxtract
dec
mov
sub
cmp
sbb
sub
mov
fwait
ret
push
lahf
daa
cltd
js
inc
orb
sub
ljmp
mov
xchg
mov
or
lret
or
push
in
out
pop
xchg
popa
dec
mov
dec
jmp
adc
add
aam
ret
dec
sub
dec
rolb
les
ljmp
in
sub
clc
test
test
test
push
fdivl
sbb
loope
aaa
cmpsb
sahf
cmp
or
mov
sbb
in
mulb
push
pop
mov
mov
jae
psubusw
lods
ficoml
mov
into
mov
dec
or
sub
fsubl
mov
xorb
cmc
jbe
into
add
push
mov
fwait
dec
sbb
xchg
mov
pusha
sbb
addb
push
cld
sub
stos
pop
push
xchg
pop
ja
lea
out
popl
daa
daa
cli
out
cmp
es
mov
cmpsb
add
xchg
jp
lock
sbb
or
mov
mov
mov
out
outsb
inc
loopne
lret
fcmovnu
pusha
xor
inc
sbb
jno
sbb
testb
stos
sub
pop
adc
repnz
xchg
pop
popa
rcl
test
xchg
pushl
and
inc
sbb
fcoms
ds
dec
or
jmp
dec
andl
inc
in
xchg
inc
loop
cld
push
test
int3
in
lea
jae
cltd
dec
jb
nop
loop
jmp
inc
imul
std
jecxz
xor
dec
sbb
or
icebp
cmp
xor
and
pusha
dec
stos
sub
scas
xchg
pushf
shrb
push
bound
and
sub
jb
sti
adc
jp
mov
lahf
nop
fs
orb
cmp
cmp
test
jo
push
les
sub
int
fcomp
cmpl
cmp
sbb
js
add
test
cmpsl
jne
xchg
xor
test
sti
pop
enter
mov
mov
leave
repnz
xchg
test
pop
aaa
iret
push
and
outsb
or
pop
inc
add
shrl
and
inc
sbb
and
dec
ret
popa
adc
push
out
bound
mov
arpl
das
lds
and
xchg
push
jbe
xor
lock
add
lea
scas
in
mov
in
test
inc
jo
outsb
in
idivb
int3
in
mov
cs
mov
jecxz
and
push
add
arpl
lret
ret
mov
sub
mov
sub
push
push
and
push
push
or
jbe
jle
test
pop
rclb
clc
dec
and
mov
mov
push
subb
aam
imul
cmp
iret
cmc
into
push
pop
rcll
push
add
cld
pop
adc
push
mov
xor
ljmp
push
jp
je
sub
and
lret
jno
scas
lret
movsb
sbb
mov
lods
outsb
mov
inc
fwait
jae
jecxz
mov
sub
imul
mov
sub
pop
xlat
lret
add
fucomp
xor
sbb
mov
inc
cld
ja
iret
out
scas
imul
cld
data16
in
push
cs
jle
pop
fidivl
adc
jg
in
push
and
mov
test
loop
mov
add
data16
mov
xor
cmp
loop
adc
xor
jo
dec
orl
mov
je
movd
cmc
xchg
ss
scas
imul
xchg
push
cmp
adc
or
push
scas
adc
cli
push
add
testl
lds
mov
sub
enter
push
jp
enter
push
stc
mov
xchg
loop
arpl
ljmp
jge
lret
xchg
mov
jecxz
push
fnstenv
outsb
rorb
jg
jmp
lods
iret
mov
ljmp
adc
xor
xchg
jnp
sub
pushf
and
clc
sbb
loop
rcr
iret
xchg
sarb
gs
pop
mov
fs
push
mov
ficoml
fwait
aaa
fidivs
pop
loop
inc
xorb
fildl
cmpsb
push
idivb
stos
xchg
mov
jae
ss
mov
hlt
mov
push
xchg
jbe
sbb
push
shll
sbb
jnp
popf
lret
das
outsl
hlt
fimuls
push
lds
rorl
lds
cld
lea
jno
add
push
mov
jp
xor
sub
fiadds
sbb
mov
xor
pop
es
mov
and
mov
jno
mov
insl
iret
ret
jbe
and
out
mov
inc
pop
in
mov
add
mov
add
sub
jmp
lods
je
inc
xlat
and
jl
adc
jo
nop
stos
ljmp
push
in
mov
push
adc
dec
mov
push
bound
mov
dec
and
icebp
mov
sub
out
aaa
add
adc
sbb
adc
pop
or
pushf
popf
repz
pop
ja
hlt
pusha
ret
mov
pop
push
loopne
icebp
mov
mov
mov
arpl
pop
sub
jae
inc
push
jb
adc
pop
adc
test
ja
test
jno
fdivp
inc
in
lock
pop
push
lock
fldcw
jbe
and
xchg
cmp
xor
out
int
imul
shll
jmp
inc
repz
mov
hlt
cmpl
mov
sub
ficoms
in
dec
sub
pop
mov
inc
pop
cmp
fs
dec
ret
or
adc
arpl
pop
push
add
mov
pop
leave
inc
in
cmp
mov
lods
fidivs
mov
pop
lods
nop
aam
xchg
scas
mov
int
mov
mov
cmp
sub
sub
stos
xchg
mov
xor
sahf
mov
dec
inc
addr16
mov
xor
cmp
out
or
sbb
xchg
dec
test
ljmp
mov
scas
jbe
mov
push
sbb
repnz
test
aad
pusha
inc
mov
fnsave
jmpw
mov
lcall
add
pop
and
in
popf
es
xlat
xchg
lods
and
mov
sahf
stc
inc
punpcklwd
int3
adc
jb
xchg
cmp
addr16
fdivrl
mull
dec
repz
stos
jl
dec
outsl
jp
or
data16
shrl
rol
nop
repnz
cld
out
fstps
jo
ljmp
mov
int
fsts
push
xchg
xchg
jmp
adc
dec
das
shl
adc
cld
pusha
cmp
mov
lods
pop
and
ret
shll
lods
lods
jecxz
loope
rcrl
push
inc
and
mov
ss
sbb
movsl
push
dec
jb
jle
pop
mov
hlt
fdivrs
pop
cmpsb
sbb
xlat
push
pop
in
lcall
mov
pop
mov
les
sub
mov
ljmp
loopne
arpl
data16
sub
rcll
dec
les
push
pop
cmpsl
jle
cmpsl
inc
xchg
imul
adc
and
add
inc
jns
daa
xor
andl
stos
lret
pop
jae
jl
test
lods
sub
imul
mov
mov
sahf
cmpl
add
test
sbbb
push
jnp
icebp
push
fchs
addr16
js
lahf
std
mov
sbb
push
arpl
xor
shll
mov
movsl
iret
inc
mov
inc
xchg
orl
pop
js
scas
mov
cmc
bound
ja
mov
mov
push
dec
xor
aad
mov
push
stos
adc
fs
bswap
ja
rclb
add
add
and
ret
sub
loopne
mov
fidivl
adc
jg
lods
xchg
xchg
jge
push
cltd
mov
jecxz,pt
in
and
inc
xchg
fsubrs
mov
xor
dec
xchg
jne
xor
scas
xchg
xchg
into
mov
xchg
adc
aad
lock
dec
out
jb
or
mov
out
arpl
adc
int3
jne
dec
dec
shl
mov
mov
scas
shl
add
cmp
ljmp
mov
test
mov
pop
sbb
fdivp
push
xchg
loope
cwtl
jge
mov
aaa
scas
mov
push
xchg
pushf
pop
xchg
adc
pushf
dec
push
jmp
nop
insl
scas
pusha
in
dec
dec
outsl
repnz
jmp
pop
loop
iret
outsb
imull
cmp
mov
mov
and
loope
mov
adc
inc
and
mov
icebp
pop
fldt
and
fcmovnu
adc
push
cmp
mov
ja
lds
xor
cltd
xchg
es
push
out
xor
inc
and
mov
mov
test
xchg
push
out
jae
mov
dec
and
popa
in
in
sub
mov
pop
mov
bound
push
lret
pop
or
scas
popa
notl
sub
xor
add
add
push
mov
xchg
jns
test
inc
mov
mov
push
insl
inc
fnstenv
aaa
push
add
mov
ret
stc
aas
push
movq
cli
aaa
pop
cmpsb
mov
mov
cmp
cld
pop
pop
mov
cli
dec
jne
insb
pop
jnp
stos
xchg
pushl
cmp
aad
cmpsl
jne
shl
test
hlt
lret
push
sub
or
pop
dec
jge
ja
lcall
out
mov
pop
or
mov
sbb
sbb
test
pop
mov
xor
mov
inc
inc
push
repz
adcl
pop
pop
jns
movsl
or
mov
lcall
into
cmpsl
sbb
push
and
call
iret
xchg
xor
add
ds
dec
int3
and
sub
cmp
mov
pop
fs
stos
scas
movsb
xor
cmp
pop
lock
lods
add
es
jnp
pop
pusha
inc
jle
lcall
rcr
cmp
jg
pusha
aam
push
add
adc
imul
lret
pop
inc
xor
ljmp
es
xor
dec
mov
movsl
dec
ljmp
lock
mov
mov
sbb
ret
jbe
dec
jae
xor
jae
cmpb
and
sub
cmp
mov
add
cmpsl
call
repnz
icebp
ds
loope
cmp
adc
pusha
xchg
fldt
hlt
adcl
adc
ds
xor
ficoml
push
sub
mov
dec
xchg
add
xlat
nop
pop
outsb
loopne
push
push
push
packssdw
and
inc
pushf
sahf
enter
lods
iret
repnz
bound
mov
sub
push
jecxz
daa
and
fsubrs
push
inc
jne
fwait
sti
sbbb
adc
int3
in
cld
jecxz
sbb
punpckhbw
mov
imul
roll
repz
lea
jp
js
test
add
scas
xlat
hlt
xlat
lods
mov
repz
test
adc
or
enter
ret
mov
stos
push
mov
xchg
fsubrs
lods
aaa
cmpsl
ja
movsb
daa
ljmp
or
jge
cmp
enter
lret
jo
xchg
mov
dec
aad
enter
pop
fs
sbb
hlt
lods
pop
cmp
out
mov
stc
cmpl
adc
cs
mov
fiadds
imul
out
mov
mov
jne
mov
movl
inc
cli
test
lcall
cmpsb
flds
xor
xlat
xchg
aas
mov
jno
push
cwtl
adc
mov
push
popl
mov
sub
mov
repz
cwtl
or
dec
int3
cltd
in
xchg
sbb
les
cltd
and
pop
inc
mov
sbb
sub
ss
loopne
push
inc
adc
jle
daa
dec
push
adc
out
mov
repz
stos
pop
stc
data16
xchg
and
rcrb
mov
lods
jae
fbstp
push
rcl
ficoms
dec
pusha
daa
mov
mov
ds
icebp
in
test
jle
adc
lahf
mov
push
test
test
aad
out
cmpsl
jno
iret
and
mov
sbb
cld
repnz
inc
pop
daa
icebp
push
testb
lret
add
addr16
pop
adc
fldl
add
mov
mov
sub
out
cmp
std
negb
push
in
mov
nop
sbb
mov
xchg
pop
sub
jg
sub
mov
aam
add
cmp
jnp
push
shrl
out
jne
cmp
cmp
lds
popa
inc
fsubrl
fildl
jge
leave
sbb
pop
sub
sbb
clc
xchg
pop
cmp
cmp
xor
cltd
jns
je
pop
and
cmp
sbb
pop
mov
cwtl
loop
es
sbb
gs
cmp
adc
cmp
add
add
sub
cmc
leave
and
xor
dec
mov
popa
in
xlat
test
push
test
push
xor
xchg
ljmp
dec
decb
and
add
out
mov
xor
into
sub
mov
dec
movsb
lahf
jecxz
stos
movsb
jns
fildl
out
test
sub
enter
test
sarb
push
adc
loopne
lret
adc
push
pop
shl
cmc
fsubr
lods
je
call
adc
xchg
mov
cmc
sub
mov
fdivrl
add
fstpt
mov
enter
cld
pop
lcall
mov
adc
adc
sahf
shlb
mov
fdivs
jp
lock
test
int3
push
cmpsb
icebp
cltd
sarb
lock
mov
fdiv
enter
addb
std
and
lret
nop
cmp
fidivrs
loope
scas
js
cmpsb
dec
insl
sub
pop
xchg
inc
lret
mov
and
cwtl
push
push
mov
sub
or
add
aam
mov
adc
dec
mov
jnp
cmp
out
add
test
jg
push
movsl
mov
pusha
inc
imull
mov
xchg
mov
imul
sbb
in
aam
arpl
mov
popf
addl
dec
and
int
dec
add
mov
in
jb
popf
mov
jecxz
sbb
push
shll
icebp
into
into
in
lcall
ja
aad
jl
loop
mov
loop
mov
dec
daa
cltd
sbb
mov
sahf
or
mov
pushf
ret
daa
xchg
mov
hlt
mov
fdivl
ffreep
andb
test
xchg
hlt
mov
xor
cmpsb
dec
xchg
je
push
fsubrs
test
cmp
in
hlt
mov
push
and
or
pop
je
mov
stc
roll
jne
jmp
repnz
sbb
cmp
ljmp
inc
fidivrl
sbb
pop
mov
xchg
loope
hlt
push
jle
mov
dec
adc
xor
idivl
fstpt
pop
mov
bound
roll
and
iret
frstor
push
inc
and
je
pop
cmp
dec
cwtl
pop
or
pop
icebp
push
mov
insb
inc
jnp
mov
push
popf
cmp
xchg
inc
jg
pop
mov
cwtl
mov
pop
repnz
cmp
outsb
add
hlt
cmp
in
mov
shlb
sbb
sarl
jle
test
or
mov
xchg
adc
out
or
xor
jg
fwait
pop
nop
hlt
sbb
stc
cltd
shll
aas
fwait
roll
loopne
inc
mov
mov
jmp
fs
adc
pop
cmp
sbb
fmull
dec
ss
jb
repz
pop
add
jae
hlt
xor
addr16
or
pop
in
or
or
sub
jno
stos
jge
push
and
ds
adc
shll
sahf
stos
testl
aas
lret
cmpsb
xor
out
cli
in
jecxz
add
cmpsb
scas
stc
imul
pushf
cmp
or
jl
jo
shr
mov
xchg
nop
adc
andb
mov
test
lcall
pop
xor
pop
out
mov
jmp
add
dec
mov
clc
popa
mov
xchg
mov
rcrb
adcl
jp
loope
and
ds
ss
js
mov
mov
cmp
mov
push
test
jp
aad
lods
mov
outsb
xchg
ret
test
mov
mov
std
xchg
das
cmpl
mov
push
xor
test
push
cmp
ret
popf
pop
icebp
sbb
mov
out
mov
adc
imul
dec
jmp
add
mov
hlt
enter
jle
outsb
push
mov
cmovns
mov
scas
stos
cmpsl
add
clc
sbb
or
in
js
out
xor
shll
imul
pop
or
rolb
lahf
xchg
aas
outsl
sub
bound
jp
lds
mov
lock
daa
xchg
dec
inc
adc
xor
sbb
add
aam
in
aas
push
xor
mov
insl
sub
cmp
in
in
push
sub
xchg
and
add
mov
enter
adc
jmp
in
jecxz
shll
dec
and
xor
dec
xor
cwtl
xchg
sub
adcb
fildll
sub
adc
cmc
neg
in
mov
insb
popf
push
xchg
push
aad
or
test
test
push
das
jbe
sbb
jmp
punpcklbw
dec
rorl
xchg
call
pop
test
jbe
movsb
ss
shr
cmpsl
dec
xor
dec
mov
shrb
xor
out
shr
sbb
shll
mov
push
shll
mov
test
mov
sbb
push
lods
pop
sub
lcall
jne
mov
sub
leave
gs
lock
and
fidivrl
mov
mov
jo
pusha
xchg
pusha
add
xchg
negl
stos
mov
cmp
es
inc
xchg
mov
aad
ret
int3
push
or
xchg
cwtl
aas
inc
jae
jns
adc
adc
pop
xchg
adc
lcall
cli
out
sbb
scas
test
lock
xchg
xchg
or
jnp
or
fidivrs
out
movsl
stos
jg
xor
popf
cld
rcl
cmp
mov
test
mov
push
mov
icebp
or
daa
jl
push
ss
mov
xchg
dec
repz
push
cmp
ja
inc
cmpsl
repz
imul
inc
arpl
xchg
repnz
add
aam
gs
cmp
iret
xchg
test
xchg
stos
xchg
out
cmpsl
cmpsl
ror
insb
or
outsb
nop
out
inc
jo
sahf
sub
xchg
jnp
jns
imul
sahf
xchg
add
out
incb
outsb
jge
aad
sahf
test
inc
xchg
mov
mov
inc
loopne
nop
sbb
idivl
add
cli
and
cmp
dec
sub
lret
aaa
dec
xchg
dec
push
xchg
jne
ds
mov
fbstp
xchg
adc
outsb
xor
push
pop
lret
inc
push
cmc
or
pop
clc
les
cmc
dec
jg
out
pop
mov
inc
add
imul
pushf
xchg
insl
out
fistps
push
jb
fcoml
and
add
loopne
mov
das
les
jl
mov
out
dec
pop
testl
enter
outsl
int3
inc
inc
jae
or
insl
pop
pop
imul
xor
addr16
xchg
xchg
popf
cmp
dec
push
repnz
test
js
stos
repz
mov
cmp
out
mov
jmp
popf
rolb
mov
das
cmpsl
mov
sahf
jo
in
mov
jle
pop
mov
int3
loopne
loopne
repz
dec
adc
into
lret
and
dec
or
xor
jp
cwtl
aad
rorb
or
outsl
push
arpl
pop
mov
gs
shll
mov
aam
std
lea
insl
mov
xchg
inc
cmpsl
js
and
push
arpl
pop
sahf
fsubrl
int
push
pushf
cmp
xchg
test
or
pushf
adc
add
out
pusha
movsl
ja
repnz
mov
pop
sub
pop
shl
pushf
test
mov
in
outsb
push
iret
cmp
jb
push
pushf
sbb
les
mov
pop
cmp
mov
adc
jl
aad
add
rcrb
dec
movsl
or
rcll
scas
jb
sub
bound
cmc
and
pop
sub
and
dec
stc
mov
f2xm1
cmp
mov
pop
cmp
pushf
dec
sub
cmp
sbb
mov
lds
xchg
sub
push
nop
fidivl
adc
xor
jo
and
xchg
aad
sbb
jns
cmp
test
stos
pop
mov
pop
mov
add
shrb
icebp
xor
jo
stos
xchg
sahf
dec
fbstp
push
scas
and
lds
mov
add
ds
cmpsb
and
bound
jle
sarb
cmp
push
clc
int
jae
jg
add
in
pushl
cmp
or
push
ss
add
test
xlat
cmpsl
inc
push
sti
les
pop
add
inc
lea
fcoms
xor
jmp
jno
and
mov
xlat
jp
inc
dec
sub
sub
cli
loopne
xchg
xchg
push
das
and
cmp
repnz
iret
mov
sbb
sti
or
jbe
jno
nop
pop
sub
push
aad
lahf
mov
mov
lds
cmp
mov
pop
push
sub
mov
add
push
fs
popf
iret
sub
ja
fstpl
fidivl
rcrl
push
fadd
push
cwtl
inc
rcrb
stc
rcll
outsl
test
add
xchg
fmuls
imul
add
inc
dec
cli
in
scas
xchg
mov
or
inc
mov
mov
mov
scas
dec
xor
icebp
loop
mov
loop
dec
in
pop
lods
pop
cmpsb
loopne
out
es
ja
and
push
shlb
mov
cmp
iret
cli
mov
push
xlat
frstor
ficoms
jae
scas
lcall
mov
movsb
nop
pop
mov
mov
insb
sahf
adc
insb
aaa
test
sysret
mov
out
int
fcom
enter
cli
scas
fistps
fyl2x
ds
ljmp
insb
xor
out
cs
mulb
bound
rcll
push
fucom
sub
jl
out
movsb
stc
gs
jmp
dec
sbb
std
mov
lahf
insb
aad
faddp
lods
jbe
mov
fs
sbb
mov
jae
test
mov
in
fisubs
or
xchg
je
fs
xor
mov
addr16
fstl
mov
daa
notl
sub
fisubrl
jge
mov
dec
push
jecxz
xor
aas
mov
call
jno
test
fs
pusha
pop
sahf
scas
leave
adc
lret
lcall
dec
mov
dec
es
sub
pop
int3
dec
or
push
popf
pop
pop
insl
xchg
mov
pusha
in
push
sbb
push
or
ret
shrb
popf
sub
nop
in
xchg
xchg
push
push
and
xor
pop
xlat
cmp
imul
mov
xor
stc
sub
jp
push
rolb
aad
ja
push
test
mov
or
jns
adc
xchg
dec
loop
in
xchg
ljmp
fidivs
out
mov
out
jge
push
lock
fucomi
je
fcmovu
xchg
push
push
push
push
push
icebp
and
bound
dec
ret
jno
bound
ja
sahf
cmpsl
and
aad
pop
push
cmp
and
shll
mov
add
pop
iret
arpl
addr16
insl
xchg
pop
sub
mov
and
std
icebp
gs
ljmp
ja
mov
cmc
mov
out
ficoml
js
lea
fistl
out
loope
fwait
cli
dec
mov
bound
aaa
lock
and
into
roll
dec
pop
mov
adc
inc
and
test
subl
lcall
lret
outsb
cmp
insb
cs
enter
ret
dec
add
imul
jp
popa
mov
hlt
mov
dec
aaa
pop
rcrb
scas
daa
push
mov
mov
mov
aas
enter
xchg
push
setne
gs
jbe
cli
cmpb
mov
jp
cli
loope
jl
jae
scas
in
dec
dec
data16
sub
jns
pushf
rol
int
sbb
call
mov
and
mov
ss
jp
xchg
loopne
dec
cmp
mov
and
push
arpl
push
fdiv
and
and
dec
mov
mov
mov
pop
adc
jg
inc
cs
mov
sub
fdivrl
dec
test
dec
scas
cwtl
pop
xchg
sbb
jb
sbb
cmpb
cmp
mov
movsl
test
or
lea
push
pop
push
es
add
pop
adc
call
sub
inc
or
and
pop
pop
jns
mov
enter
test
addb
call
and
and
in
dec
mov
mov
ja
stc
and
sbb
cs
adc
adc
out
dec
dec
adc
inc
aas
push
je
xchg
dec
sub
xor
adc
stc
mov
cmp
add
inc
arpl
jne
outsb
pop
push
sbb
imul
dec
repz
xchg
sbb
jo
adc
inc
je
pusha
jl
lahf
or
subb
sarl
mov
icebp
lcall
repz
lahf
das
jns
daa
mov
add
xchg
add
leave
jns
das
insb
leave
imul
mov
test
mov
shrb
cmp
lret
or
clc
lods
sbb
push
push
gs
rcrb
mov
mov
xchg
lea
bound
push
xchg
aas
sar
inc
xchg
fistl
pusha
inc
xor
jae
daa
das
cmpsb
mov
inc
mov
add
hlt
mov
push
loopne
pop
gs
repz
sub
mov
mov
iret
call
pop
add
cwtl
fists
xchg
cmpsb
lods
test
repz
push
mov
cmp
jbe
xlat
pop
inc
adc
cmp
pop
test
adc
cmpsb
popa
pop
push
push
xchg
xor
arpl
push
cmp
into
fbstp
or
loop
add
jne
popa
pop
xchg
adc
jbe
jmp
notl
sbb
lods
popa
dec
add
and
jno
mov
movsb
and
mov
mov
sub
subb
adc
das
sbb
dec
repnz
pop
test
scas
gs
lahf
xchg
arpl
test
inc
mov
pop
das
mov
stos
cli
inc
std
shlb
jle
test
or
int3
jne
mov
xchg
cmp
popa
fwait
icebp
jl
add
mov
lret
mov
lods
and
ljmp
sub
ja
inc
ficompl
xchg
mov
push
mov
xchg
or
xchg
std
xchg
sbb
setbe
jecxz
call
addr16
daa
add
pop
sahf
jp
sub
out
fwait
cld
or
mov
in
adc
ljmp
xchg
xorb
ret
stos
fcoms
mov
in
push
xlat
ja
mov
push
cld
push
insb
movsb
add
or
inc
pusha
mov
sub
sbb
jne
mov
inc
rcll
dec
or
jmp
fisttps
cli
aad
mov
adc
bound
fldenv
scas
aaa
rcr
add
ret
or
adc
jp
push
dec
ret
cmp
mov
push
insb
sbb
aas
xchg
adc
pop
push
jmp
outsb
push
inc
call
sbb
xchg
lds
out
outsb
hlt
sti
aas
pop
aam
sub
push
sub
pop
stc
sbb
sub
mov
repz
mov
rorb
aad
adc
shl
shlb
cmpb
lahf
call
xor
and
jmp
mov
xchg
or
or
into
inc
cmp
shll
out
and
arpl
pop
jle
insb
stos
testb
outsb
int3
arpl
cmpsb
movsb
dec
test
popf
pop
jne
fidivrs
push
sub
mov
mov
cmp
and
popa
int3
cmp
fisubl
push
aaa
rep
xor
sbb
or
fidivrl
decb
pop
int
sbb
xchg
xchg
ret
inc
fdivrs
sub
pop
test
mov
xchg
mov
shll
add
xchg
mov
jbe
mov
jge
adcl
or
push
rcll
mov
fildl
lods
jb
sbb
mov
inc
data16
lods
dec
rolb
test
rorb
lock
xchg
cmp
ftst
cmpb
test
jge
leave
mov
in
inc
imul
rcr
test
sub
xor
dec
xchg
mov
mov
cmp
push
adc
dec
cmpl
or
enter
int3
xchg
jge
or
mov
imul
mov
jmp
mov
movsl
pop
fistpll
jg
push
fnsave
jb
mov
sub
aad
dec
pop
xor
push
push
add
testb
cli
mov
inc
pop
rolb
mov
pop
push
cmp
lock
add
ljmp
nop
icebp
mov
mov
in
sbb
xor
inc
xchg
sbbw
mov
sbb
jo
inc
add
lret
ds
outsb
jg
push
loop
xor
pushf
shr
fdivrp
insl
cmp
pushf
sbbb
and
sarl
adc
and
push
push
lock
dec
ret
or
inc
push
popf
pop
pop
mov
in
ret
lretw
xor
push
and
jbe
lods
popa
gs
xchg
xor
mov
xchg
cmp
and
fistpl
in
and
push
std
test
ljmp
or
sbb
and
popf
lret
mov
inc
xor
stc
fisttpll
imul
rclb
movsb
push
push
nop
adc
lods
sbb
mov
out
push
xchg
lahf
or
mov
add
jb
push
test
mull
inc
push
adcl
lods
push
aas
xchg
shll
mov
mov
fildll
fmull
xchg
adc
jne
jae
xor
stos
pop
jo
cltd
sub
sub
xor
fimuls
mov
cmc
imul
into
scas
pop
pop
xchg
imul
pop
daa
push
test
add
adc
scas
jg
bound
pop
repnz
mov
ret
pop
mov
rcll
adc
fwait
test
jno
dec
ja
repnz
das
in
fs
xchg
jbe
bnd
jo
int3
jbe
cmp
sbb
and
push
fld
dec
sub
dec
loop
sub
cmpsb
jle
aaa
leave
ljmp
cmp
adc
adc
pop
jbe
std
lods
es
sub
or
push
dec
lods
insl
test
mov
scas
cmp
daa
mov
pop
add
dec
adc
xor
in
jb
mov
int
jge
mov
faddl
jne
cmp
xchg
fcompl
lret
mov
neg
xor
stos
ret
and
sar
ficoms
lahf
or
pop
std
testb
jbe
inc
mov
push
push
adc
dec
and
orb
inc
push
sti
mov
fisttps
mov
insb
pop
addl
mov
push
lods
ja
add
std
ljmp
xor
dec
cli
sbb
cld
out
mov
mov
shrb
sbb
or
push
ret
pop
pop
and
popf
or
sub
sub
jne
leave
and
decb
mov
sbb
repnz
movb
in
in
xchg
aaa
in
mov
xor
in
js
nop
fucomip
shrb
pop
pop
cmp
xchg
sti
icebp
and
cmp
adc
imul
mov
imulb
mov
je
lds
mov
jp
idivl
mov
dec
cmp
lods
test
movsl
pop
cmp
aam
push
jmp
xchg
inc
call
cmp
mov
or
mov
push
mov
mov
mov
and
dec
sbb
fmuls
out
jb
in
pop
mov
adc
xchg
sbb
lahf
pushl
mov
cmovne
add
jbe
dec
jp
xchg
ds
jb
das
jmp
test
add
scas
ret
out
fidivrs
test
jb
subl
pusha
insl
xchg
imul
jp
dec
jo
iret
and
xchg
dec
mov
ficomps
sub
sbb
mov
xchg
add
lock
rclb
jmp
push
adc
xor
lcall
and
data16
cwtl
popf
mov
int3
xchg
adc
ljmp
sbb
out
sub
jg
fmuls
push
cmp
sti
inc
jbe
cmp
in
pop
hlt
mov
leave
mov
ficoms
or
enter
int
push
jmp
push
jmp
jle
mov
xor
outsb
xchg
push
out
pop
push
loopne
scas
sahf
insl
push
lea
mov
mov
ljmp
call
add
xorb
and
sbb
adc
cs
ret
repz
sub
and
stc
mov
ffreep
arpl
lret
add
add
push
sbb
mov
xchg
lds
xor
jns
push
mov
mov
fisubrl
jp
mov
xor
in
cmpsb
mov
loop
mul
or
int
out
shlb
stos
ja
pushf
shrb
ret
cmp
sub
adc
push
pop
inc
fimull
fstpt
adc
mov
lods
pop
cli
fs
in
xchg
sahf
cs
dec
cmp
mov
sub
add
push
fldenv
cmove
insb
push
xor
xor
loope
nop
jl
sbb
mov
pushf
cmpsb
sbb
inc
iret
inc
ljmp
insb
adc
pop
and
shl
pop
xchg
andl
mov
addr16
fcom
out
je
pop
push
or
jmp
ret
lds
push
ss
mov
mov
dec
mov
out
pop
rorl
fildll
aam
and
cli
shrl
ja
sub
ficoml
out
jge
push
clc
rorb
in
push
pop
out
into
lock
das
or
pop
pushf
cld
pop
roll
or
inc
dec
fdiv
lods
ss
aaa
stc
pop
inc
mov
adc
sub
inc
mov
mov
ljmp
jge
adc
mov
aad
adc
mov
iret
pusha
and
repnz
fmuls
and
cmp
icebp
ss
add
and
fdivs
mov
aam
jg
jae
addr16
loope
stos
mov
sar
ficoms
adc
mov
jnp
jae
or
inc
mov
mov
pop
enter
dec
add
loop
push
vpshufd
add
pop
xchg
cmp
pop
or
ret
out
popf
lods
sub
jge
jmp
pop
push
dec
mov
add
mov
cltd
std
mov
jbe
addr16
xchg
adc
es
sbb
mov
shlb
xchg
bound
fistps
mov
cmp
mov
jge
and
icebp
mov
call
aas
cld
push
pusha
sti
cmpsb
cmp
mov
pop
stc
xor
cmp
xor
adc
call
rcrl
or
lods
inc
push
adc
js
fstpl
mov
pop
cmc
mov
inc
adc
into
pusha
loope
fs
outsl
pop
xchg
cltd
frstor
iret
pop
pop
sub
pop
add
rcll
arpl
cmpsb
outsl
or
sarb
push
adc
test
int
bnd
or
dec
xor
pop
add
pop
iret
inc
in
or
ss
int
imul
insb
fdivrs
xchg
enter
nop
xor
gs
js
pop
or
push
pop
fcoml
fdivp
jns
xor
push
xor
push
dec
mov
inc
cmpsb
inc
push
fwait
lock
adc
call
pop
mov
and
fistl
xchg
leave
add
cltd
rclb
mov
ret
sbb
mov
jb
adc
sti
jecxz
push
imul
bound
mov
mov
popf
arpl
loopne
jl
push
sbb
faddl
jns
adc
fs
out
adc
xor
das
adc
xor
cmpb
in
adc
or
sub
test
in
fiaddl
int3
out
insb
push
lahf
jb
xchg
loop
or
imul
in
pop
cmp
mov
outsl
in
lods
cli
jl
sbb
ss
inc
imul
pop
mov
repz
sahf
stc
ret
cmp
popf
push
lahf
mov
and
js
bound
jg
cs
cmpsb
mov
inc
push
bound
cli
dec
dec
cmp
push
ja
push
sbb
out
mov
shrl
xor
arpl
mov
xchg
sub
mov
repz
add
push
sti
mull
test
imul
xchg
stc
xor
lea
movsl
adc
pop
push
jecxz
jmp
in
pop
arpl
cmp
aas
sbb
rcrl
inc
cmp
mov
jns
std
xchg
call
dec
xor
icebp
jbe
inc
cmpsl
orb
faddl
push
adc
sbb
adc
sub
stc
test
add
fsts
popf
jno
add
sbb
push
pusha
mov
sbb
and
in
sarl
xchg
mov
cmp
dec
mov
xchg
mov
arpl
loop
mov
push
jp
or
adc
mov
cs
test
xlat
xchg
test
sbb
sub
jno
sub
lods
sub
jge
les
sti
mov
xor
add
sar
sub
nop
stc
out
jecxz
es
loop
mov
jmp
xlat
shlb
xchg
jmp
mov
xchg
aam
xor
push
std
addb
or
ljmp
int3
add
test
ret
arpl
add
stos
das
inc
scas
jb
aad
adc
sbb
cmc
stos
jne
insb
or
sub
mov
popf
cmp
in
mov
rclb
sub
sbb
lods
push
pop
jmp
test
xor
mov
or
mov
shrb
dec
fs
sub
fwait
jecxz
mov
shl
pop
leave
adc
int
lret
pop
stos
inc
in
cmpsl
dec
or
pop
outsl
pushf
divl
lcall
cli
dec
cwtl
push
movsb
inc
outsl
dec
pop
lea
pushf
mov
mov
dec
arpl
push
rcl
sbb
cmp
les
lock
xchg
repnz
jne
inc
aaa
ss
out
test
pushf
test
fcom
and
push
xor
in
icebp
jge
cmpl
pop
mov
adc
btl
in
push
rorb
arpl
js
popf
adc
xchg
lret
mov
mov
mov
into
add
xor
inc
in
movsb
dec
push
inc
filds
sub
push
dec
lock
add
or
adc
xor
cld
dec
jecxz
in
jg
in
xchg
mov
pop
out
push
test
cmp
roll
sub
mov
sti
dec
jge
inc
xorl
mov
mov
enter
popf
push
movsb
call
lods
pop
std
cltd
mov
test
push
push
outsl
aaa
push
stos
cld
and
imul
ljmp
xchg
jbe
or
lock
lea
sysexit
sbb
aas
addb
dec
and
inc
shll
cli
fistpl
fsubl
mov
lea
movsl
and
add
mov
jmp
movsb
ss
adc
sbb
add
push
lock
dec
xchg
out
sbb
ljmp
add
ljmp
pop
pop
adc
cmp
dec
dec
mov
inc
add
push
fisubl
in
into
dec
or
sbb
hlt
lock
dec
cmp
pop
mov
xchg
mov
jp
push
mov
fs
lods
scas
add
push
xor
cmp
cmp
in
arpl
push
push
ret
jp
xchg
mov
pusha
cmp
jno
sti
paddw
pop
cmpsl
and
xlat
pop
ss
fsubs
fidivrs
test
bound
mov
jle
push
sbb
pusha
pop
sbb
dec
addr16
repnz
pop
inc
int
xchg
into
scas
push
inc
loop
dec
add
rolb
mov
imul
sbb
not
jb
xor
adc
jmp
nop
dec
pop
popa
lret
inc
dec
aas
add
add
or
js
divl
inc
or
jno
lret
arpl
sbb
xchg
dec
dec
fwait
into
je
jo
xchg
xchg
xchg
dec
sarb
pop
pop
mov
jmp
inc
inc
jmp
outsb
sbb
mov
test
sbb
pop
fcompl
shll
dec
adc
fistps
mov
test
inc
mov
out
mov
inc
sbb
inc
filds
arpl
lea
mov
lcall
fs
pop
inc
shr
xchg
data16
das
sub
mov
sarb
nop
int3
or
sahf
jecxz
xchg
adc
test
sub
xchg
daa
push
mov
cld
test
push
scas
sbb
or
test
jbe
adc
sub
and
std
or
test
outsl
popl
jmp
ja
stos
repnz
arpl
pop
sti
es
je
in
cmpsb
aad
sub
push
ss
sbb
loope
adc
cmpb
cmpsb
push
ss
aam
xchg
data16
dec
pop
pop
mov
cs
or
push
sbb
or
daa
add
out
xor
push
mov
arpl
out
push
adc
stc
mov
test
and
mov
pop
mov
cs
stc
cld
nop
jge
inc
mov
in
lock
sbb
sbb
jnp
aas
jno
pop
stos
mov
shlb
mov
cld
out
mov
sbb
outsl
and
mov
mov
sti
movsb
pop
lcall
sarl
clc
inc
dec
pop
les
xor
cmp
outsl
addl
lods
daa
mulb
xchg
ret
push
pop
push
stos
mov
cmp
lock
cmp
lods
aaa
hlt
outsb
shl
xchg
fidivs
cmp
and
cs
bound
outsb
cmp
imul
push
cmp
push
addps
jmp
add
inc
ds
pushf
push
lcall
mov
mov
xor
test
inc
mov
sahf
xor
mov
lcall
rcr
mov
sub
jp
ss
mov
push
icebp
inc
lret
in
adc
das
stos
mov
cmc
ljmp
lret
gs
int
sarl
addr16
jge
and
jp
mov
flds
imul
outsl
mov
pop
mov
jle
jg
add
xchg
sbb
in
dec
jae
sahf
in
dec
je
aas
test
push
scas
cmp
jne
fcmovbe
out
divb
sarl
mov
cmpsb
push
or
inc
xor
bound
mov
stc
lock
mov
fdivrs
lret
cmpsl
mov
ss
jo
out
fs
cmp
lods
inc
sub
test
mov
imul
lret
lret
jnp
jp
push
push
pusha
loop
test
enter
out
inc
dec
inc
popf
inc
push
outsb
lahf
xor
pop
aaa
inc
jg
or
ret
cwtl
mov
mov
mov
test
iret
xchg
dec
call
add
sub
lret
inc
jle
sbb
test
mov
imul
ja
je
ret
rcr
scas
sub
xlat
rol
sbb
mov
xchg
das
mov
xchg
shll
fldcw
or
sbb
rol
mov
add
jg
mov
adc
mov
incl
addr16
cli
mov
xor
jbe
or
jb
fisubrs
mov
out
cwtl
out
jno
int3
pop
fwait
xor
cwtl
cld
jp
push
mov
clc
imul
push
pop
int3
inc
pusha
sbb
jnp
cmp
mov
sub
sub
pop
shr
out
inc
cmpsl
into
adc
outsb
rcr
cmp
jbe
mov
imul
gs
xchg
jp
adc
jo
cmp
push
sub
stos
lock
jns
dec
jmp
inc
cld
fld
xchg
fsubl
out
ja
out
inc
inc
in
test
ret
mov
rcrb
mov
fiaddl
xor
outsb
lods
test
cmp
lock
inc
out
add
imul
ja
adc
lods
mov
hlt
push
outsl
sub
movsl
push
inc
xchg
or
ficompl
mov
jg
adc
addb
aad
mov
call
je
mov
sbb
sbb
fisubrl
xor
push
mov
inc
mov
rclb
add
ds
jb
fdivs
sbb
mov
lds
cltd
call
movsl
mov
scas
inc
mov
xchg
dec
addr16
ss
jae
in
movsl
das
cmp
shll
jge
pop
aam
pop
pushf
push
call
repnz
add
add
mov
and
arpl
add
mov
add
or
mov
inc
std
shrl
stc
sahf
mov
push
sti
sti
push
stos
mov
mov
std
shlb
dec
cmp
sbb
dec
das
push
js
mov
and
pop
adc
pop
repz
cs
push
adc
cmpb
enter
das
pop
cs
push
scas
ret
dec
and
hlt
and
cwtl
cmpsl
lret
mov
popa
stc
add
aaa
xchg
push
pushf
je
mov
daa
movups
pop
dec
sbb
jae
lcall
dec
sbb
pop
pusha
xlat
loopne
sbb
pop
repnz
mov
orb
jnp
cmp
lea
add
sub
jmp
mov
and
and
pop
add
fwait
and
int
jg
sub
xchg
fcom
repz
sub
jl
leave
repnz
int
lea
dec
movsb
aaa
pop
adc
roll
mov
cmpsb
fldl
lret
dec
push
sbb
ds
adc
int
repz
hlt
fisubrs
ficomps
sub
and
popf
jg
mov
sub
stos
fwait
cmpsb
test
adc
pop
mov
aas
lds
testl
pushf
adc
push
outsl
push
insb
lock
mov
mov
insl
push
push
or
int3
or
adc
enter
loop
imul
fwait
jle
xor
jnp
inc
sarb
and
repz
cmp
rsm
sbb
in
sub
mov
mov
xchg
mov
sar
mov
cmpxchg
sarb
lea
cmp
lock
insl
or
lret
ja
pop
xchg
aaa
ja
lret
push
push
aad
bound
bound
jl
fwait
jge
popf
negb
sub
dec
mov
loop
icebp
jne
cwtl
jae
inc
sbb
sbb
faddl
dec
stos
aad
mov
std
push
daa
or
sti
jns
outsb
insb
es
or
fwait
inc
fcmovnb
fxch
ret
das
fcompl
cmp
rorb
jnp
push
clc
roll
or
daa
fs
inc
add
mov
int3
inc
nop
out
std
jb
popa
xchg
xchg
jns
fsubl
aas
ja
and
adc
cmpsl
popa
pop
nop
aad
pop
push
out
xchg
in
or
add
mov
jmp
lods
hlt
pop
sub
enter
es
test
fiaddl
mov
cmc
sarb
pop
lret
cwtl
loopne
push
addl
fmulp
fbstp
fdivl
sahf
outsl
and
inc
mov
sub
mov
in
cmp
add
lahf
cwtl
push
test
divb
fidivl
lret
clc
xchg
and
inc
jae
cmp
addb
sub
sbb
outsl
cs
aas
das
scas
sahf
test
and
xchg
xchg
pushf
pop
push
push
lods
call
xorl
lahf
dec
insb
lahf
sub
enter
mov
dec
inc
push
adc
inc
mov
scas
cmp
fwait
aad
adc
aaa
rep
push
fsubr
popf
mov
movsl
jnp
cs
mov
mov
hlt
dec
jno
add
hlt
push
bound
out
test
nop
lods
dec
clc
or
movsb
movsb
subb
loop
ss
sti
sub
faddl
mov
add
push
loop
lret
lds
push
mov
rcr
fdivl
cmp
mull
push
out
mov
push
jl
or
iret
add
loope
inc
or
out
or
xor
xchg
stos
repz
seto
rcr
in
call
xor
sub
inc
rcrl
sbb
rcrl
roll
loope
lods
dec
sub
mov
mov
popf
lret
push
pop
add
in
pop
jb
xchg
push
inc
lods
pusha
dec
sbb
mov
cmp
and
adc
sub
xchg
mov
faddp
ja
jge
adc
repz
in
clc
mov
push
pop
sub
cmp
aad
mov
or
mov
aad
inc
cli
rorb
adc
xchg
mov
sub
push
push
sub
mov
out
sahf
popa
xor
jg
lock
mov
lock
mov
cmp
mov
cmp
and
xchg
mov
jl
add
mov
sub
dec
sub
fisttpl
out
or
mov
in
mov
sbb
jmp
shrl
sbb
sub
xchg
mov
xor
outsb
es
mov
syscall
inc
and
xor
repz
xchg
xor
fiadds
xchg
pop
xchg
data16
ficoml
mov
sbb
push
in
sti
fldt
mov
popf
rolb
jp
dec
mulb
aaa
fdivrl
push
mov
push
lret
or
addl
iret
adc
lock
popf
sti
call
jge
scas
push
psrad
push
push
movsb
cmp
jbe
inc
jle
mov
lods
gs
mov
mov
xor
jb
popf
sbb
sbb
jo
outsb
mov
pop
ljmp
loop
lret
test
jno
sub
xor
xor
dec
cltd
jo
add
xacquire
jl
xchg
mov
pop
outsl
lods
jecxz
lods
push
sbb
ret
stos
imul
stos
add
dec
xchg
insb
loop
pop
out
call
or
mov
adc
xchg
ss
add
shl
mov
inc
rorl
inc
sub
std
xchg
in
and
or
add
out
icebp
or
icebp
shll
pop
xor
add
sti
orl
jno
push
repz
sub
leave
and
mov
add
loope
daa
lret
mov
cmp
mov
pop
xor
push
mov
adc
sbb
mov
aaa
xchg
and
fistpll
sbbb
mov
xchg
xlat
push
popa
out
mov
mov
add
ds
ja
jno
add
or
test
inc
xlat
je
data16
into
jg
xchg
inc
in
roll
xchg
mov
in
fucom
enter
cmp
movb
lods
pop
and
mov
cwtl
sbb
fidivs
std
dec
mov
mov
add
pop
icebp
jnp
mov
loopne,pn
arpl
mov
push
cmp
aas
mov
or
scas
jl
sbb
fisttpl
arpl
les
jnp
pop
mov
repz
subb
mov
inc
xchg
and
mov
adc
mov
movsb
xor
in
dec
pop
adc
movsl
mov
xor
dec
in
pop
movl
pop
mov
lfs
pop
push
mov
sub
sbb
adc
ja
mov
out
lods
mov
hlt
rcr
push
xor
shlb
je
hlt
aaa
pop
and
aad
je
pop
fnstsw
fiaddl
aas
dec
orb
aas
in
add
fmul
in
xor
mov
mov
fbld
jge
sub
sbb
call
pop
xchg
repnz
pop
mov
cwtl
cmp
inc
mov
pop
adc
jns
sbb
pop
adc
subl
outsb
xor
gs
push
push
adc
inc
lods
loop
xchg
pop
std
xchg
loop
cmp
and
fsubs
add
hlt
and
cmpsb
jecxz
jo
test
xchg
in
clc
test
mov
add
pushf
scas
adc
ret
call
cmp
mov
or
ljmp
adc
cmpsb
jbe
sahf
mov
mov
and
lock
popf
add
sub
jle
mov
push
pushf
add
push
mov
out
hlt
jno
xchg
mov
mov
nop
jb
imul
add
dec
adcb
adc
lret
iret
jo
mov
xor
bswap
adc
loop
pushf
jmp
popa
mov
and
nop
mov
aas
lds
sub
movsl
mov
call
add
cmp
add
sarb
add
std
or
xor
subl
xor
mov
add
movsb
enter
xor
cld
aad
int
aam
inc
orb
jno
add
inc
or
mov
adc
cltd
dec
rcr
or
orl
pop
mov
add
push
idivl
cmpsl
out
and
arpl
dec
jge
pop
stos
movsb
jge
cmp
push
outsl
and
and
mov
lcall
inc
mov
cmp
std
mov
pop
xchg
mov
aad
mov
pop
out
dec
push
xor
xor
xor
js
cmp
ja
mov
pushf
dec
pop
arpl
cmp
mov
rcrb
cwtl
cmp
and
jg
mov
out
leave
int
jp
dec
test
pop
ss
fmul
mov
push
add
in
dec
push
mov
aaa
in
ret
push
ret
push
leave
xor
ja,pn
cmpsl
or
pop
and
mov
aaa
mov
mov
mov
mov
adc
ret
mov
sbb
pop
jmp
fistpll
mov
dec
data16
test
cmp
xor
push
and
dec
scas
mov
push
fisttps
repz
out
rclb
dec
pushw
movsb
jo
clc
push
mov
jb
pop
mov
ds
daa
dec
stc
adc
fnstenv
ja
movsb
dec
mov
mov
in
jle
sub
sub
inc
andb
fnstsw
mov
inc
cli
cmpsl
xor
testl
out
jge
mov
mov
push
jp
jmp
fs
mov
adc
lods
adc
add
mov
test
lock
inc
xor
xor
test
out
sahf
xor
pop
lods
imul
fnstenv
sbb
test
push
fsubs
sti
pop
std
sbb
aaa
mov
divl
push
jl
lret
movsl
xchg
adc
and
mov
nop
pop
imul
jne
aad
mov
icebp
push
add
ret
dec
dec
adc
inc
aaa
mov
pop
es
dec
inc
inc
into
mov
push
dec
mov
add
loopne
loop
xchg
test
xor
mov
inc
lea
push
adc
shll
push
xor
inc
cwtl
fistpl
popa
scas
repnz
add
mov
adc
std
orl
pop
or
cmp
test
aas
scas
mov
enter
push
aad
imul
or
mov
call
push
mov
xor
test
outsb
aaa
push
mov
jp
sbb
add
push
mov
sarw
dec
mov
jg
test
sbb
dec
push
adc
test
sub
jle
mov
stc
in
mov
cmpsb
jno
sbb
movb
jmp
inc
fs
aad
jne
or
sahf
sbb
pop
inc
jmp
inc
aaa
leave
adcb
sub
scas
clc
mov
notb
in
cs
das
loop
and
xchg
add
adc
imul
xchg
inc
adc
dec
int3
std
pop
xor
call
push
jns
inc
aas
and
ss
cld
mov
mov
xor
sub
sarb
gs
hlt
inc
mov
push
btr
aam
add
sbb
arpl
cs
shl
push
inc
inc
sub
loope
sti
pop
jp
inc
cltd
cmp
imul
fistps
xor
jecxz
mov
jbe
dec
lods
push
xor
cltd
add
add
and
cmp
imul
es
repz
jle
xchg
outsb
push
pop
out
mov
push
mov
icebp
test
jmp
or
arpl
xor
pushf
push
pop
push
in
and
push
mov
decb
inc
sbb
orb
data16
xchg
pop
pop
mov
cltd
jl
adc
cmp
mov
jae
loop
vandps
bnd
xor
sahf
out
mov
addb
push
sahf
push
clc
lea
testl
sarb
mov
cmp
mov
xlat
les
inc
popf
test
rclb
jo
lcall
inc
das
adc
imul
ret
test
mov
iret
jle
xchg
jp
in
addl
ficomps
jo
loopne
jl
cmpsb
sbb
mov
sbb
dec
mov
xchg
pop
sti
cltd
cwtl
xchg
jp
orb
jl
jl
jle
imul
std
pop
add
push
cltd
mov
cmp
fdivr
loopne
inc
add
ja
idivl
cmp
fs
sbb
nop
mov
sar
push
or
into
pop
lret
jecxz
push
pop
outsb
cmc
mov
jg
and
fdivl
rorl
inc
stos
enter
mov
test
mov
aas
push
outsl
dec
cmp
mov
cmpsl
les
xchg
mov
cmp
popa
dec
arpl
mov
sbb
and
and
push
adc
xor
cmpsb
add
les
fldt
movsb
aaa
cmp
out
lret
aas
pop
mov
cmp
mov
jecxz
loopne
xchg
cmp
or
fstpt
adc
xchg
sarl
call
repnz
adc
xchg
and
rorb
cwtl
fs
or
insl
cld
jecxz
inc
fcoml
rcll
mov
sub
aaa
out
mov
nop
sbb
divl
lahf
jb
xchg
imul
push
in
fs
add
rorb
or
add
mov
cmp
lods
inc
into
jne
gs
cmpl
inc
rcrl
add
and
pusha
cld
fs
addr16
in
aam
xchg
dec
mov
cmpsl
lods
pop
pop
scas
ljmp
cmpsb
mov
fiaddl
decl
shll
test
pop
insl
mov
sbb
adc
push
imul
xor
push
push
adc
loopne
xor
adc
arpl
dec
mov
add
test
mov
mov
jns
jle
jl
jl
stos
adc
mov
mov
fsubr
jnp
push
addl
mov
jl
push
aas
addr16
push
je
mov
rcrb
int3
cli
pop
inc
push
mov
ficoml
inc
mov
sar
sub
sarb
or
jl
pop
sbb
or
push
js
mov
dec
stos
xor
stc
pop
frstor
cmpsb
xor
adc
test
loopne
fsubl
das
adc
testl
jp
cmp
int3
or
popa
push
mov
push
lock
cmp
nop
cltd
mov
jnp
pushf
mov
jp
mov
cmp
pop
add
add
mov
dec
mov
mov
mov
fwait
int
sub
push
xchg
fistpl
lods
jp
mov
cmp
inc
push
push
cmpsl
cld
mov
dec
fidivl
ret
jae
xchg
mov
je
les
dec
xchg
cs
lods
xchg
into
xlat
out
xor
lea
fnsave
inc
mov
cmp
je
mov
cs
mov
add
loopne
subb
fs
es
test
ds
xor
pop
ret
mov
mov
jmp
pop
push
in
xchg
mov
je
xchg
stos
sbb
aas
ret
push
inc
leave
popf
addr16
mov
mov
cmpsb
lret
loop
rolb
lock
stos
xchg
in
mov
aaa
ds
clc
imul
dec
sub
mov
adc
mov
js
mov
dec
add
jmp
cltd
test
jp
mov
jmp
sti
sub
inc
mov
and
mov
idivb
lcall
xor
lret
rorb
jnp
xchg
jge
das
jns
test
popf
dec
fisubl
inc
int3
push
rolb
inc
je
xchg
shrl
punpcklwd
cmpsb
inc
popa
jne
lds
in
cld
xor
adc
and
nop
mov
roll
mov
or
or
and
or
add
out
cld
scas
mov
xor
add
pop
lcall
dec
out
jmp
fisubl
sti
jecxz
ret
movsl
fisttps
sbb
nop
push
out
sahf
out
popa
push
roll
inc
cmp
dec
lahf
mov
pusha
dec
aas
popf
add
dec
data16
mov
scas
xor
lds
add
dec
hlt
hlt
movl
test
mov
arpl
cwtl
cmp
push
aam
pop
pop
imul
jmp
mov
or
fstl
movsb
repnz
and
repz
cmc
loope
sbb
sysret
fsubr
jo
dec
mov
imul
mov
jg
ret
mov
sahf
pop
or
popa
xchg
mov
ljmp
fcmovnu
mov
mov
shrb
push
xchg
test
stc
and
push
addr16
aaa
stc
stos
sub
insl
or
add
add
xorb
leave
fmul
int3
sbb
push
push
popa
push
ds
repnz
pushf
add
dec
add
sub
mov
sbb
call
mov
jne
xchg
test
fdiv
stc
sti
and
std
push
or
jmp
ror
andb
cmp
cs
mov
fucomp
aam
add
cli
add
popw
addr16
iret
xchg
mov
stos
ficoml
sbb
je
xor
insl
scas
mov
in
js
mov
xchg
push
cli
test
sar
and
cmpsb
dec
inc
std
cld
or
xchg
lds
lods
enter
enter
call
mov
lods
and
not
mov
adc
int
xchg
push
xchg
jmp
mov
fst
mov
or
in
jae
jg
cld
lock
cmpsl
pop
rorb
add
hlt
gs
jo
rorb
fsincos
cmp
sbb
fisubrs
repz
rcr
sahf
addr16
and
loope
mov
xchg
inc
mov
jg
push
inc
pop
cmp
cmp
insl
dec
cmpsb
dec
aam
cmp
jnp
movsb
insb
cs
lds
dec
fnstcw
mov
mov
xor
daa
aad
ficoml
fmull
pop
adc
push
popf
pop
js
scas
addr16
xor
insl
mulb
mov
jmp
push
fs
xchg
outsl
out
jle
call
push
xchg
pop
push
inc
sbb
push
shll
cmp
pop
sub
dec
adc
cltd
add
iret
and
mov
pusha
adc
mov
xchg
xor
inc
pop
out
ja
or
mov
js
and
add
xchg
lods
push
mov
cld
mov
lods
jecxz
nop
or
lock
inc
sbbl
icebp
cld
xchg
mov
lods
lret
shlb
jge
lods
lods
repz
push
fstps
jns
push
or
sahf
jns
int3
pop
js
inc
mov
and
xchg
adc
ja
dec
push
mov
fldl
imulb
mov
adc
out
lret
dec
mov
aaa
jge
sahf
dec
push
inc
mov
test
ret
pop
sbb
jecxz
dec
lods
repz
dec
inc
mov
mov
or
aaa
push
ret
fdivs
ret
or
adc
dec
xor
cmc
in
out
call
mov
cmpsb
jmp
ret
adcl
ret
fcmove
cmpsb
cmpsl
repz
adc
mov
inc
lods
sbb
lret
pop
add
push
xchg
mov
sarb
inc
xor
cmpsb
mov
cltd
fnsaves
xchg
sbb
push
sub
xchg
jg
and
adc
and
enter
lods
adc
pop
add
sbb
cli
dec
mov
xor
test
pop
push
out
xor
sub
cmpsl
fstpl
sarl
scas
fld
popf
pop
inc
sbb
popf
cmp
add
scas
inc
inc
push
loope
lds
mov
xchg
je
add
test
fimuls
stc
sbb
mov
jmp
dec
jo
sub
and
pushf
pop
mov
mov
je
or
std
mov
arpl
add
call
xor
sbb
mov
movsl
testb
inc
push
cmp
push
fsub
mov
sbb
xchg
and
jno
cmc
jne
cmp
mov
scas
lret
js
pushf
push
jecxz
push
mov
jp
cmp
ret
push
mov
outsl
dec
movsl
sti
fcoms
movsb
outsb
or
and
cmc
dec
mov
fstl
ret
xchg
xor
out
rorb
shlb
insl
outsb
mov
jle
addb
sub
bound
shr
lret
test
rclb
lds
lret
scas
insb
cmc
push
jmp
das
sub
cmc
lcall
mov
pop
jno
outsb
cmpsl
sub
sbb
sbb
cmp
popf
pop
push
ficoml
jle
fisubrs
or
movsl
hlt
dec
inc
jmp
xor
xor
xchg
dec
sahf
xlat
jne
adc
cmpsl
int
insb
jno
outsl
lds
call
ficompl
pop
jmp
loop
or
push
test
pusha
mov
push
xchg
adcl
pop
jl
sarb
js
rcl
push
push
xor
fsubrs
fcmove
fstpt
mov
push
imul
mov
test
mov
pusha
mov
mov
dec
push
ja
in
jle
push
push
pop
xchg
stos
incl
xchg
enter
mov
and
or
nop
sub
dec
iret
inc
cmc
mov
rcl
mov
std
loop
out
xor
andb
push
mov
fidivrs
sub
cwtl
rcr
pop
push
push
loope
mov
mov
fptan
shrl
mov
outsb
bound
out
inc
lods
cmpsl
push
lahf
mov
dec
or
repnz
lea
push
mov
jecxz
popf
jl
das
mov
popa
sub
push
daa
pop
shll
icebp
adc
fistl
adcl
mov
inc
lret
scas
gs
pop
dec
mov
sarl
jns
loope
mov
pop
cmc
enter
xchg
and
xor
cwtl
or
xchg
loope
jecxz
or
subb
cwtl
jmp
adc
hlt
mov
jg
fdiv
xchg
fcom
pop
adc
xor
mov
jecxz
cli
in
sahf
outsb
or
and
test
pop
dec
mov
sbb
mov
pop
xor
jl
rcrl
inc
mov
hlt
inc
pop
push
popf
mov
outsb
sbb
stc
cs
push
aad
inc
pushf
and
adc
call
mov
das
popf
cmp
lods
insl
xchg
lret
cmp
pop
mov
lock
test
jge
xor
test
hlt
ljmp
sub
aas
mov
ja
adc
adc
mov
xor
jb
dec
inc
pop
mov
sbb
out
push
ret
roll
in
mov
xchg
outsb
jno
inc
mov
js
fdivr
dec
sbb
orl
outsl
push
and
pop
sbb
mov
iret
jmp
mov
sbb
cld
pop
adc
cmpb
xor
sbb
aad
cltd
lods
pushf
add
or
fcomps
notl
push
jb
out
pop
adc
sub
adc
mov
scas
les
cs
enter
xchg
imul
mov
insl
push
lret
enter
sti
cmp
pop
daa
rcrb
sub
jns
loopne
or
out
xchg
lahf
adc
mov
dec
ja
mov
push
test
adc
fs
lods
mov
ss
push
jb
jle
lahf
dec
aaa
std
mov
dec
xchg
stos
pop
cs
mov
andl
jecxz
xor
ja
xlat
out
adc
or
push
and
subb
and
and
cmpb
repz
mov
xchg
dec
sbb
scas
sbb
jmp
sbbl
mov
dec
ret
dec
dec
mov
cwtl
roll
inc
mov
scas
das
dec
dec
cmp
fadd
push
hlt
mov
loopne
es
fdiv
in
popf
lock
rcr
insl
sub
mov
int3
pop
cmp
adc
add
mov
xorl
hlt
and
sbb
icebp
cmp
pop
enter
ds
stos
inc
dec
out
js
and
insl
lock
dec
rcrb
inc
push
mov
sub
or
shl
cmpsl
pushf
outsl
mov
pop
lahf
repz
int
int
call
mov
jo
lcall
jmp
mov
cmp
pop
andb
inc
es
dec
mov
ja
in
jmp
ret
fimuls
in
ss
inc
jge
jle
sub
int3
xchg
mov
std
out
clc
loope
addr16
cmp
cmp
or
add
outsb
cmpsl
sti
icebp
add
repnz
into
xor
lar
pushf
cld
cmp
pop
push
clc
xor
cs
push
cwtl
and
cmc
mov
mov
pop
sbb
jge
outsl
imulb
ret
es
mov
ljmp
testb
icebp
jae
roll
test
jnp
call
pop
jo,pt
add
pop
push
mov
dec
push
movsb
lock
ljmp
in
sbb
or
pop
pop
into
dec
roll
add
shll
ds
add
fcmovb
in
hlt
cmpsl
and
push
add
push
sub
cmp
xor
sub
sub
outsb
mov
ljmp
xor
fists
imul
mov
aad
loope
sub
cld
ror
outsl
jo
lret
xchg
inc
lcall
xor
jle
lcall
jnp
test
js
andl
adc
out
pushf
push
out
out
test
cmpsb
outsl
inc
bswap
cs
add
dec
xchg
ret
push
mov
fldl
dec
enter
lods
std
test
dec
jb
mov
mov
jp
xchg
das
scas
cli
aaa
mov
mov
ja
shrl
and
in
cmp
sub
fwait
cmc
stos
test
testl
int3
cmp
popa
aaa
jge
mov
adc
clc
jae
mov
js
into
mov
ret
jl
xor
push
push
iret
cmpsb
in
xor
insl
xor
sbb
inc
xor
cmp
add
xchg
inc
jbe
mov
icebp
mov
mov
fs
mov
dec
pop
into
fldl
inc
dec
aaa
push
cmp
cmp
adc
dec
sbb
rcll
scas
push
pop
xor
cs
push
push
test
and
push
cmp
cwtl
push
ja
mov
das
ljmp
loope
adc
lock
and
out
dec
leave
test
fwait
adc
popa
sbb
jmp
sbb
outsl
add
add
lcall
inc
repz
je
shll
sub
enter
pop
add
dec
push
sub
adc
cmpl
dec
popa
iret
pop
rorl
pop
dec
push
js
pop
mov
pop
leave
jbe
bound
and
mov
push
cmc
xchg
leave
stos
int
mov
push
xchg
and
or
inc
and
inc
or
gs
xorl
mov
mov
push
mov
inc
lds
push
leave
aam
dec
jae
jae
dec
in
inc
push
add
push
inc
insl
stos
push
add
xor
xchg
outsb
loopne
aaa
mov
pop
aad
sbb
add
test
je
jl
jnp
fldenv
mov
lods
xor
aad
pop
arpl
imul
mov
inc
pop
out
cmp
push
inc
shll
push
inc
pop
xor
sbb
in
aaa
imul
dec
scas
xor
mov
jmp
mov
dec
divl
into
bound
inc
pop
fiaddl
push
xchg
stos
xor
sbb
inc
fldcw
add
lds
or
and
cmp
sbb
dec
jnp
or
inc
mov
lods
test
imul
decl
mov
pop
pop
aam
xchg
divl
icebp
xlat
clc
in
cmp
adc
cmpl
inc
out
or
jb
pop
pop
in
rcrl
and
into
leave
adc
mov
pop
cmp
stc
roll
pop
and
cwtl
sbb
shll
insb
xchg
inc
shrl
and
or
aas
pop
adc
fadd
sub
lret
adc
je
stc
mov
je
lods
adcl
pop
dec
out
aam
out
aaa
cmp
dec
nop
lods
mov
mov
and
push
jl
jmp
cld
lret
mov
movsl
lcall
mov
mov
xchg
xchg
pmaxub
jb
aas
adc
testl
dec
test
pop
fbstp
hlt
imul
inc
addr16
fistps
fdivrs
mov
sbb
add
pop
lret
jns
xor
mov
adc
je
cmp
test
jb
dec
orl
ds
mov
sub
pusha
and
inc
inc
scas
mov
repnz
outsl
add
xchg
push
push
mov
call
and
gs
sub
dec
xchg
cmp
test
sahf
out
jo
sbb
and
jb
out
loopne
pusha
mov
mov
das
out
repz
std
push
mov
push
sub
ret
std
xor
das
out
adc
dec
fimull
testb
fcoms
cmp
cmp
mov
cmp
fstp
insb
inc
cmp
imul
and
sti
lock
mov
jnp
mov
out
gs
lods
rolb
fdivs
fstpl
cmpsl
cmp
jle
out
xchg
ss
xchg
test
test
fildll
mov
mov
push
push
std
push
sbbl
mov
cmp
ss
add
adc
mov
call
pop
cmpsl
adcb
stos
inc
or
js
outsl
mov
jns
xlat
jmp
sarl
mov
in
xchg
pusha
push
add
pop
movsl
sbb
push
enter
add
push
scas
cmp
mov
cwtl
bound
insb
rorl
xchg
out
rcll
fadd
hlt
mov
mov
loop
adc
sbb
das
jp
clc
pop
sahf
mov
push
mov
mov
arpl
jno
cmpsb
idivl
or
lret
xchg
sbbl
fmul
cmpsb
jecxz
lret
das
mov
pop
inc
cmp
dec
leave
in
pop
xchg
sarl
xchg
out
add
pop
mov
stos
jg
movsb
test
adc
popa
stc
xchg
add
call
scas
inc
or
or
clc
cmp
or
fdivs
outsl
aad
fstpt
movsl
das
cwtl
ljmp
inc
pop
aas
dec
mov
popl
sub
cwtl
mov
lahf
pop
inc
in
jmp
xchg
scas
neg
in
mov
gs
insb
out
into
lods
mov
call
negl
push
cltd
xchg
in
scas
inc
out
outsl
lods
out
dec
test
xchg
repz
cmpsb
lret
fisubrl
push
imul
add
cmp
scas
call
maxps
mov
divb
xor
mov
inc
sbb
adcb
inc
jge
vcvttsd2usi
shrl
js
fisubrl
das
imulb
or
inc
xchg
add
iret
scas
mov
aam
xor
jmp
and
push
mov
jecxz
mov
adc
cmp
adc
xchg
sti
mov
mov
ret
pop
repnz
sbb
test
cld
daa
aad
and
sub
neg
sbb
filds
pop
mov
insl
ds
int
pop
ljmp
iret
pop
insl
cmc
cmp
lea
xor
dec
ss
popf
fdiv
scas
mov
jo
xchg
jns
add
add
into
cmp
jmp
rcr
or
test
mov
hlt
aaa
adc
adc
mov
rorl
push
mov
mov
fnstenv
and
cltd
inc
divl
in
adc
adc
adc
mov
mov
pop
test
fld
or
mov
cmp
dec
hlt
sbbl
mov
sbb
fs
lcall
repz
ja
iret
sub
mov
cmp
jb
sti
mov
lcall
push
mov
sahf
je
notb
mov
cmp
add
xor
inc
test
or
pop
inc
aam
or
cmp
adc
icebp
sbbb
dec
jmp
mov
mov
filds
jns
push
pop
push
dec
popa
mov
pop
cli
xchg
inc
pusha
in
sbb
xor
xor
cmpsb
hlt
sbb
cmc
sbb
fwait
scas
outsb
mull
sub
int
mov
xor
xor
lods
adc
inc
mov
out
sub
ffree
loope
cmpsb
jns
je
imul
fbstp
mov
adc
adc
and
je
adc
add
push
push
rcr
js
iret
inc
fistpl
std
pop
sahf
push
ret
rol
dec
pop
sbb
cmp
out
pushf
and
out
inc
scas
daa
addr16
mov
roll
mov
fcmovnu
cmp
cwtl
sarl
fcomp
cmp
iret
inc
xor
xor
dec
add
fistps
or
lret
mov
jo
push
pop
stos
pop
divb
add
movsl
jno
dec
fists
sub
push
scas
mov
xchg
scas
mov
icebp
xlat
fcoms
or
out
dec
dec
mov
jp
test
jecxz
lea
jmp
addr16
cmp
push
ja
jmp
imul
ret
lea
jnp
out
mov
js
pop
cltd
adc
fucom
pop
jae
pop
xor
adc
cmp
add
fwait
lahf
or
enter
or
imul
movups
push
or
cmc
shlb
and
inc
fwait
adc
cli
enter
xchg
dec
shrb
push
mov
mov
test
jo
cli
xchg
xchg
mov
mov
xchg
pop
or
push
or
sbb
adc
cli
push
int3
iret
jno
adc
imul
cmc
mov
mov
mov
mov
pop
inc
outsl
sbb
jno
fs
mov
sbb
push
jnp
mov
paddb
adc
mov
loopne
or
inc
ret
adc
shl
inc
cmp
sub
rcrb
sub
mov
push
in
hlt
cwtl
jo
pop
fucomip
dec
movsb
jnp
or
shrb
add
cmp
jnp
shlb
mov
add
je
lahf
pop
lret
cmp
xchg
mov
xchg
push
aam
jle
jne
shr
and
jg
icebp
test
add
ficomps
xor
lods
subb
or
shlb
fisubs
pop
shll
push
pop
xchg
pop
pop
nop
lcall
in
mov
test
test
mov
xor
cld
and
push
fstpl
xchg
int3
sub
out
mov
jg
out
dec
jmp
aad
rcll
loope
jge
fnstenv
lret
test
mov
cmp
pop
jg
or
out
cmp
test
xchg
iret
sbb
xchg
lock
sbb
mov
sub
call
cmpsl
cli
rclb
add
mov
adc
fwait
movsl
ret
lock
sarb
mov
adc
xchg
fwait
setne
repnz
aaa
mov
push
cmpl
call
sbb
push
mov
xchg
sbb
mov
xchg
sbb
jae
push
cmpsl
je
push
pop
scas
sub
ss
pop
xchg
jns
popa
cwtl
iret
fsubrl
icebp
adc
rcl
loop
repnz
sbb
xrelease
and
pop
inc
aam
imul
movsl
mov
lods
mov
call
sbb
push
lds
dec
mov
dec
xchg
adc
lock
stc
loop
std
imul
mov
mov
daa
pop
adc
push
xor
in
bound
dec
push
xlat
or
adc
cmp
stos
enter
mov
ljmp
sbb
adc
loop
xor
push
cli
push
fwait
repz
test
fcmovbe
insb
jg
testl
xchg
sbb
pop
int3
xor
lds
cwtl
jo
shlb
outsl
or
out
rcll
pop
imul
call
pop
inc
jae
sub
insb
pop
pop
pushf
testb
mov
sbb
out
jp
xor
cld
outsb
nop
pop
or
fdivl
in
inc
pop
movsb
adc
aaa
call
adcb
pop
pop
jnp
xchg
loope
inc
add
and
mov
push
jnp
fsts
cltd
push
or
sub
movsl
cs
inc
loopne
dec
xor
cmp
es
mov
mov
sahf
pop
adc
sub
jg
scas
push
cmp
stos
pop
mov
fisubs
outsb
lcall
aas
in
ljmp
cmc
bound
sub
rorb
jmp
movsb
pop
add
xor
adc
push
loop
ror
mov
inc
and
cmp
jae
inc
adc
fptan
lds
cld
and
pop
cwtl
mov
jns
das
arpl
pop
filds
add
pop
mov
jecxz
or
arpl
adc
int
xchg
sbb
adc
lds
xchg
mov
lret
jl
inc
clc
in
xchg
mov
aam
sbb
push
lock
fistpl
xchg
xor
mov
icebp
pushf
pop
outsl
pop
mov
ret
inc
mov
dec
movsl
lret
pusha
repnz
push
sub
aas
and
push
fadd
cmpsl
cmc
fwait
adc
or
cwtl
jbe
fxch
push
push
xor
and
incl
mov
mov
cmp
xchg
cltd
jl
imul
xor
mov
pop
mov
and
jns
mov
leave
cmpl
movsl
mov
lret
and
push
imul
add
push
mov
mov
push
fsts
loope
sbb
sbb
scas
jnp
ret
fdivs
adc
insb
fwait
cltd
mov
cmp
or
pop
cmp
cltd
adc
sbb
cwtl
jb
call
cmp
lock
and
jle
aam
dec
push
sbb
pop
ficompl
jae
sbb
ja
pop
xor
push
push
fidivs
push
adc
idivb
push
lods
pop
mov
mov
xorl
inc
jno
mov
sbb
push
push
lods
pusha
sub
in
pop
or
leave
cmc
mov
adc
mov
pushf
fmull
js
jnp
fwait
das
mov
mov
mov
add
and
xchg
clc
mov
call
mov
xchg
cmp
bound
xchg
add
inc
incl
and
inc
mov
xchg
mov
stos
mov
add
int3
push
mov
adc
adc
inc
call
in
outsl
andb
das
insl
or
add
jge
stc
out
jmp
sbb
or
imul
inc
dec
push
mov
or
jno
mov
sbbl
stos
outsl
icebp
iret
out
stos
sub
mov
push
push
mov
xchg
add
inc
mov
imul
imul
jecxz
cmp
in
xor
and
imul
cmpsl
cmp
movsb
imul
xchg
jecxz
fldenv
mov
pushf
in
scas
test
dec
arpl
cmp
gs
and
sub
outsb
mov
inc
ljmp
jl
in
das
push
jnp
sarb
add
sbb
jmp
push
inc
sbb
dec
aaa
push
out
mov
or
mov
ja
sbb
push
movb
xor
data16
sub
lret
stos
mov
adc
jmp
outsl
lret
shl
sub
jne
ja
scas
addb
pop
sub
xchg
xchg
jo
dec
dec
lret
xchg
stc
fdivl
pop
lods
out
add
aas
pusha
mov
inc
adc
mov
xor
push
div
movsb
mov
add
in
stos
or
pushf
mov
xchg
in
mull
xor
mov
loopne
cwtl
lret
adcl
jb
xchg
cs
nop
insb
xlat
stos
lret
aaa
sub
add
fs
stos
xchg
cmp
ljmp
adc
icebp
lock
rcl
push
dec
aad
pop
pop
outsl
iret
dec
scas
sbbl
dec
dec
leave
inc
lods
jno
dec
mov
fildll
add
pop
mov
aam
lds
roll
mov
cmp
xor
dec
std
jmp
mov
aas
aas
shll
xchg
cs
frstor
adc
sub
aaa
hlt
addr16
jmp
imul
repnz
jne
rcll
aam
adc
test
inc
push
xor
cmp
mov
les
cmp
add
and
jno,pt
js
gs
xchg
movsl
adc
daa
mov
popf
scas
lds
pop
jmp
jnp
sub
push
jbe
inc
mov
fwait
lret
push
push
stos
fadd
xor
jbe
lock
sub
pop
sub
test
sti
imul
nop
stos
cmc
mov
mov
ljmp
dec
shlb
mov
xchg
jns
push
adc
jmp
push
in
mov
scas
or
divb
cwtl
scas
xchg
inc
ret
inc
jecxz
loope
cmp
or
mov
aad
out
inc
stos
outsb
sti
bound
fdivl
shrl
mov
pop
out
test
pop
rorl
pop
dec
stos
xor
orb
jo
hlt
inc
cs
nopl
add
fisttpl
push
pop
dec
hlt
push
and
stos
pop
sbb
rcr
dec
mov
std
ds
push
mov
sti
pop
lcall
cmp
dec
mov
adc
dec
adc
mov
mov
sbb
jbe
into
xchg
scas
rclb
in
aas
hlt
je
outsb
out
cmpb
dec
mov
sbb
sbb
mov
and
mov
mov
push
and
mov
subb
fcomps
lds
pop
daa
pop
push
nop
aas
aam
addl
xchg
add
das
sbb
test
cmp
lds
mov
mov
push
push
and
xchg
bound
pop
repz
sbb
mov
lahf
jno
cli
in
sbb
jno
movsl
and
jo
add
cmc
jno
popf
mov
add
and
jne
in
mov
push
inc
and
mov
in
dec
cmp
or
dec
or
fcomps
lret
cmp
inc
fnstcw
mov
mov
aaa
cmp
outsl
out
jb,pn
leave
rorl
or
cwtl
dec
rcr
adc
fs
jg
hlt
push
push
xchg
inc
clc
mov
xchg
sbb
les
fisttpl
int
ss
sbb
loopne
jmp
aas
into
test
mov
xchg
jle
repnz
sub
lea
jns
outsl
push
mov
dec
jnp
out
or
popa
pop
add
mov
jne
mov
mov
lds
and
fnstcw
cmc
or
adc
mov
adc
add
mov
mov
jno
cld
and
sbb
add
pop
cwtl
push
es
das
call
jbe
aam
xchg
xchg
cmp
mov
popf
mov
sarl
mov
scas
xlat
push
push
jg
cld
pop
loope
cs
cmp
cs
sub
adc
lret
sti
sub
das
shl
imul
and
test
imul
sub
push
aam
insb
jae
mov
fwait
jne
loope
and
xor
outsl
out
fwait
and
xchg
and
out
dec
xchg
out
inc
in
das
mov
movsl
push
mov
mov
push
jge
push
pop
leave
fcomip
das
push
aad
or
insb
xchg
icebp
nop
adc
fldl
ret
daa
iret
std
daa
daa
data16
push
mov
mov
fiaddl
ljmp
cmpl
imul
sbb
sti
lds
cli
stos
push
cwtl
xchg
or
adc
push
mov
dec
mov
push
cmc
dec
and
lds
push
sub
fwait
xor
jno
sub
or
jne
in
xchg
iret
rorl
out
or
add
fimull
and
push
outsl
xchg
mov
std
push
cmp
mov
fistpll
rcr
pop
insl
pusha
mov
xor
pop
test
sbb
dec
jge
mov
faddl
xlat
in
and
sbbb
push
into
hlt
add
idivl
sub
cmpsb
jb
psubsw
insb
imul
aas
sbb
rclb
sub
popf
in
mov
xor
inc
push
cwtl
dec
jo
pushf
pop
adc
sbb
ja
les
je
stos
and
mov
fs
in
pop
mov
pop
dec
fwait
add
push
cld
fidivrl
mov
sbb
dec
test
inc
loopne
mov
pop
lret
sub
adc
push
push
inc
inc
cmp
mov
sbbl
enter
and
std
addb
fdivrl
fnstsw
xor
loopne
lea
mov
mov
cmp
jne
clc
aaa
adc
or
push
adc
adc
imul
pop
jbe
repz
jae
ds
test
dec
pop
sbb
mov
mov
fs
lahf
pop
jmp
adc
iret
lods
sub
mov
mov
das
cmp
lods
cli
sub
or
loopne
push
mov
or
rcr
call
loop
decl
inc
iret
popa
sub
ljmp
sub
test
loopne
sub
push
mov
cmp
ret
push
xchg
add
push
mov
pop
xlat
leave
jecxz
mov
adc
sarl
jmp
test
mov
gs
xchg
cltd
call
mov
es
xchg
or
dec
arpl
lock
mov
sbb
fwait
inc
xor
subl
lods
out
mov
mov
mov
pop
xor
imul
icebp
fsubrs
movsb
pusha
nop
mov
not
cltd
test
fcmovne
std
lea
leave
mov
std
jg
push
cmp
shll
pop
cmp
push
xor
push
out
leave
lret
pop
cmp
fwait
push
mov
dec
sub
xchg
mov
xor
clc
add
pop
inc
lcall
push
pop
jns
jp
loope
pop
add
aad
test
adc
mov
rcrl
xor
js
mov
jae
dec
neg
sub
es
add
jo
mov
sbb
notb
popf
push
arpl
xor
or
pop
cmpb
jnp
inc
int
adc
mov
mov
jle
out
std
sbb
imul
cmp
push
push
inc
add
in
pop
lock
cwtl
mov
cmpsb
fucomp
out
jnp
fisubrl
cmpsl
mov
outsl
sbbb
or
stos
inc
jl
js
lods
enter
or
ja
pop
jle
loop
mov
int
insl
lods
decb
fistps
cs
out
add
dec
or
xchg
sti
fucomi
sub
push
pop
xor
leave
mov
gs
stc
mov
and
xchg
mov
dec
mov
pop
sub
add
fcoml
fsubrl
xchg
jmp
mov
pop
in
lods
push
inc
mov
aaa
jl
in
add
jnp
loopne
xchg
dec
adc
hlt
mov
test
and
add
jno
pop
mov
outsb
iret
rolb
rcl
sti
popf
and
shll
arpl
sub
sub
jge
mov
adc
popa
dec
insl
movsb
xor
sub
popf
mov
je
pop
and
add
inc
fisubs
push
ss
xchg
inc
adc
cld
dec
adc
lock
push
ljmp
push
push
dec
inc
pop
and
data16
subb
sbb
pop
add
xor
pop
or
imull
out
xor
ret
pop
sbb
mov
lret
pop
popf
popa
dec
dec
stos
scas
push
xchg
fildl
stos
ds
out
sahf
or
leave
icebp
inc
in
lods
mov
pop
or
inc
jb
mov
hlt
xchg
xchg
and
pop
lods
inc
mov
mov
adc
xchg
push
ret
add
test
je
mov
lods
scas
inc
ljmp
mov
pop
mov
test
negl
mov
out
add
sub
lret
popf
in
inc
sarb
dec
pop
imul
pop
loope
loopne
xchg
decb
test
sub
sbb
pusha
sbb
loopne
jle
fidivrs
ds
imul
loope
mov
sub
out
in
adc
loope,pt
cwtl
sub
xchg
sbbb
lahf
roll
cmpsb
iret
xchg
xchg
mov
mov
jmp
adc
fiaddl
sbb
jge
or
sub
sub
dec
mov
repnz
in
mov
add
in
data16
or
sbb
lock
jno
jbe
mov
lock
into
fwait
cs
ja
inc
repnz
je
push
push
pop
cmp
into
call
les
fimuls
inc
test
mov
sbb
scas
push
andb
xor
pop
outsb
inc
cmp
xor
imul
add
cvtdq2ps
in
and
test
mull
imul
adc
jp
cmp
jle
testb
and
inc
xlat
lret
push
arpl
pop
call
xor
jl
test
scas
bound
out
push
not
lcall
imul
fcmovnb
std
sub
sbb
std
jge
inc
call
pop
lods
jnp
inc
pop
fxch
and
lods
mov
aam
sbb
shll
sub
insb
mov
mov
jnp
out
dec
inc
fmull
in
jnp
in
iret
testb
fcmovnb
fs
xchg
add
sub
dec
add
les
lods
and
testb
outsl
and
mov
push
jae
pop
jns
test
stos
mov
iret
xchg
lcall
adc
xchg
xor
jns
shlb
mov
mov
aas
fmuls
ljmp
inc
xchg
sub
cwtl
mov
mov
mov
sbb
adc
hlt
stc
mov
mov
test
loop
pop
jne
sub
jbe
jle
test
inc
xchg
addr16
sbb
out
lret
pop
jns
xor
fcoms
xor
imul
sbb
mov
imul
xchg
addr16
imul
pop
mov
xchg
dec
fldln2
fwait
xor
clc
add
enter
pop
fwait
cmp
stos
sbb
and
mov
cmp
adc
shlb
or
jecxz
scas
arpl
pop
iret
xor
enter
pop
test
or
cmpsl
aam
ret
push
insb
fwait
inc
mov
pop
loopne
js,pt
sub
inc
pushf
mov
adc
cmp
push
fs
pop
push
cmp
sub
or
call
lahf
xlat
ss
lret
nop
pop
xor
push
mov
test
mov
test
and
sbb
lods
push
roll
test
or
inc
cli
call
out
ss
push
cltd
add
cmc
or
ficoms
enter
adc
jo
or
adc
sbb
inc
movsl
lods
imul
cmpsb
repz
adc
mov
mov
add
xchg
xchg
xchg
out
fdivr
dec
inc
in
test
orb
or
inc
add
imul
icebp
mov
bound
and
cmc
fidivs
fbld
xor
cmp
add
test
fcoml
lahf
sub
js
lods
adc
clc
xor
mov
cmp
cmpl
sub
sub
fistl
dec
and
inc
jl
and
cmp
imul
movsb
mov
inc
mov
push
mov
mov
mov
xorl
add
xlat
test
fs
xor
std
mov
out
ror
repnz
je
jae
sub
in
add
pop
push
bound
fwait
iret
popa
movsb
ds
and
or
or
or
lods
lahf
pop
out
cmp
push
cld
out
popf
push
or
fisubrs
fcoms
lcall
adc
scas
aaa
shl
pushf
outsl
vpunpckhqdq
mov
int3
fbld
mov
xchg
jg
dec
stc
mov
adc
mov
dec
inc
psubq
loop
xchg
dec
jo
std
enter
add
aad
lcall
into
mov
cs
stc
loopne
lahf
xor
out
movsl
mov
dec
roll
sarb
mov
xchg
and
and
lods
hlt
je
mov
bound
int
xchg
add
mov
pop
push
sbb
testb
adc
dec
clc
adc
lahf
sbb
ret
push
mov
mov
repz
cmp
call
test
pop
fs
push
add
adcb
test
icebp
sub
clc
xchg
xor
mov
dec
lret
push
repnz
icebp
int
imul
add
scas
cmp
pop
mov
outsb
jmp
push
fistpll
icebp
fldcw
fwait
jae
loopne
and
xchg
mov
dec
cmpsl
fwait
mov
hlt
xchg
mov
or
mov
push
js
push
xchg
popa
cmp
shll
popa
sub
inc
nop
mov
mov
clc
xchg
pop
popa
push
jmp
adc
pop
mov
jp
ret
out
fadds
addb
fs
imul
xchg
lea
xor
xor
scas
mov
cmp
mov
add
cmp
and
lods
in
nop
inc
sbb
lds
sub
ljmp
fstpt
jmp
imul
icebp
sahf
push
gs
dec
mov
or
movsb
in
sub
ret
mov
xor
negl
jge
xchg
mov
divl
dec
fmull
add
pop
out
sbb
sbb
pop
lods
cmp
insl
push
adc
mov
sub
orl
out
cli
gs
mov
fcomps
js
arpl
mov
outsl
fs
data16
push
sti
aaa
jge
adc
push
mov
mov
xor
push
add
sbb
jnp
aas
rclb
cli
xchg
cmp
ret
test
inc
mov
mov
sarl
mov
leave
adc
ja
xor
out
xchg
cld
or
mov
mov
ljmp
and
andb
shr
push
outsl
mov
pop
mov
sti
pushf
movsb
or
pusha
xor
push
add
push
jns
popf
sub
mov
daa
dec
mov
shll
out
imul
jb
fnsave
je
or
dec
cwtl
hlt
out
sbb
add
xchg
ret
or
rorl
mov
mov
sbb
inc
jge
outsl
sbbl
loopne
cmp
es
out
lahf
pop
inc
cld
xor
pushf
xchg
loop
add
dec
push
push
mov
hlt
jmp
cli
xor
pop
out
add
jmp
imul
xchg
add
mov
inc
push
repz
cmp
add
sbb
je
shll
xor
shlb
adc
inc
sbb
sarl
lcall
call
push
inc
les
test
adc
jp
cli
dec
or
inc
mov
push
pop
cmp
jle
jge
lea
push
sbb
sbb
cmpsb
dec
inc
in
xorps
fstpt
push
leave
mov
stos
mov
fsubr
xchg
shlb
ss
adc
aad
push
pop
xorl
mov
or
imul
mov
xor
movsb
add
jo
out
sbb
scas
or
aas
jbe
sbb
stos
arpl
out
push
cmp
or
sub
adc
fst
sti
and
mov
mov
push
inc
lds
shlb
pop
sub
lods
fstpt
mov
sti
fs
out
fdivl
adc
push
dec
pop
xor
mov
lcall
pop
pop
lcall
xlat
push
insb
sub
push
xchg
testl
add
dec
jbe
in
ficompl
movsl
aad
pop
and
mov
jecxz
mov
les
pop
adc
push
pop
test
xor
pop
outsb
jbe,pt
lea
scas
and
ljmp
mov
xor
xchg
fwait
rolb
xchg
cs
jg
mov
or
lock
push
jnp
mov
pushf
insb
andl
push
adc
lods
xchg
cmp
loopne
scas
std
jmp
cmp
add
inc
outsb
lahf
jo
fdivl
call
insl
shll
fisubrl
lcall
cmc
add
jb
xchg
pop
movsl
jb
xchg
and
movsl
lock
roll
jb
add
jo
cmp
cmp
sub
pop
add
lahf
shrl
aas
push
popa
rcrb
outsb
dec
addr16
push
inc
aam
lea
cmp
push
or
add
jge
loope
mov
mov
mov
mov
pop
mov
jle
cwtl
add
mov
lcall
lea
jge
push
stos
adc
outsb
loope
je
push
inc
fcomi
mov
loopne
mov
test
loope
jge
call
ret
push
mov
push
or
dec
data16
dec
fdivl
or
popa
leave
lret
das
inc
mov
fwait
ja
mov
lea
cltd
jnp
mov
and
sbb
mov
mov
dec
inc
ds
jle
and
filds
outsb
ret
jl
adc
sbb
mov
mov
sub
in
jl
lods
pop
pop
rcl
bound
clc
push
jb
dec
addb
push
bound
cmp
leave
jp
fldl
inc
sub
arpl
jg
sub
or
xchg
sbb
mov
jns
lret
aam
jle
or
mov
push
out
pop
adc
ds
lahf
add
cwtl
aaa
lcall
push
jno
cmpsb
jae
mov
pop
mov
push
cmp
icebp
fcmove
lock
fdivs
sbb
fmull
aad
shlb
ficomps
popf
or
jecxz
shr
fistps
mov
outsl
adc
jne
mov
fstl
stc
sub
iret
cmp
push
push
popa
sbb
jnp
lods
ljmp
adc
add
mov
subb
shrl
mov
inc
sbb
test
xchg
pusha
and
jmp
lcall
aam
mov
ret
xorb
movsb
inc
dec
in
mov
mov
test
xchg
jmp
fstl
js
add
dec
push
xchg
insb
cmp
jnp
orb
sub
rcrb
subl
mov
sub
dec
and
in
scas
repz
mov
out
push
pop
subl
mov
aam
je
jne
shll
add
lds
cmp
std
jg
insb
xlat
les
popa
or
inc
loop
jmp
out
inc
lea
or
inc
into
das
aas
xor
sub
mov
ret
push
cs
and
cmp
sub
ljmp
fisubrl
lret
fs
mov
loop
push
lret
dec
sbb
into
push
iret
jmp
out
sub
jmp
test
hlt
popa
mov
dec
jle
or
and
dec
mov
sub
sub
dec
cmpl
insl
iret
mov
pop
mov
dec
push
jno
lahf
sbb
arpl
loope
bound
stos
or
repz
ljmp
test
sub
test
pop
mov
mov
xor
cli
mov
rcl
pop
pushf
adc
aas
ljmp
jecxz
ret
pop
int
pusha
fnstcw
sub
and
mov
jecxz
test
jmp
or
add
mov
mov
cmpsb
sub
test
loope
jmp
pusha
fsubrl
pop
jg
xchg
jmp
popa
roll
lcall
jae
mov
mov
std
fildll
dec
inc
mov
fs
inc
test
sar
push
aam
sub
clc
xchg
out
sbb
stc
xchg
xchg
cmp
add
sbb
shll
jae
orl
mov
xor
mov
cmpsl
das
hlt
ds
in
push
pop
mov
pop
popf
data16
mov
mulb
test
jg
outsb
push
mov
lret
lret
sahf
jp
cmpsl
lret
sub
jb
dec
out
pushf
fiaddl
fstp
imul
aam
jbe
insb
rorl
pop
dec
popf
jmp
jae
repz
sub
mov
add
into
pop
adc
dec
daa
xor
pop
xor
jns
push
push
pop
stc
jnp
or
pop
fwait
mov
jle
and
int3
mov
shll
mov
or
push
lods
insb
sub
or
sbb
inc
testl
mov
popf
mov
fldt
inc
imul
sti
sbb
out
cmp
in
int3
je
or
inc
out
cmpsb
in
mov
pop
mov
mov
faddp
xor
loopne
adc
push
cld
adc
stos
ja
inc
lea
fisubs
add
inc
cmc
int
mov
or
lcall
inc
enter
push
js
adc
negb
ds
dec
loopne
shr
jnp
inc
daa
sbb
dec
mov
and
cltd
jb
mov
int3
sahf
pop
inc
repnz
and
movsl
fwait
pusha
dec
jle
mov
call
loope
add
add
mov
lock
ficomps
xor
cmp
dec
push
jae
xchg
movsb
add
mov
mov
xchg
mov
das
aaa
adc
ret
or
clc
pop
pusha
add
xchg
pusha
arpl
mov
iret
cmc
lahf
or
sbb
xchg
xor
and
pop
push
adc
pop
sbb
or
fsub
or
pusha
dec
jae
or
xchg
out
fwait
xchg
leave
and
outsb
cmp
divl
into
shl
push
out
push
js
stc
cmp
or
mov
jns
cmp
leave
pop
mov
jmp
pop
arpl
sahf
sub
cs
adc
imul
mov
xchg
ds
add
add
xchg
mov
shlb
pop
sbb
repz
xchg
or
inc
out
flds
in
pushf
mov
cmp
sub
ja
mov
mov
mov
test
aad
jge
mov
inc
dec
mov
sub
mov
cs
imul
jo
mov
dec
mov
add
ljmp
pop
scas
arpl
into
fwait
adc
vmovhps
dec
ret
imul
sbb
pusha
sub
sahf
add
test
mov
scas
mov
ljmp
push
cmp
loopne
sbb
ret
mov
fdivr
sbb
jns
hlt
cmc
xchg
add
jb
fistpl
inc
adc
xor
imul
lret
and
adc
es
mov
add
ljmp
nop
sub
fisubrs
dec
adc
dec
gs
push
mov
cmc
in
mov
popf
ret
mov
iret
xchg
push
cli
mov
fiaddl
cltd
or
push
xchg
out
cltd
pop
stos
xchg
test
scas
and
test
je
fs
test
ljmp
loopne
sub
or
and
jecxz
sub
int3
sub
mov
jecxz
pushf
mov
push
jmp
mov
cltd
push
shl
ja
jnp
dec
mov
jecxz
dec
lcall
insl
jl
lahf
adc
aaa
dec
jl
sub
jb
out
pop
imul
fildll
pop
xchg
or
xorb
cmpsl
cwtl
or
fsubrl
push
int3
shlb
xchg
and
iret
pop
lds
jmp
lds
shlb
pop
pop
ss
xchg
add
adc
aaa
xlat
mov
mov
out
mov
jl
jb
fisubl
xchg
jle,pt
lret
popl
mov
add
cmc
iret
fcompl
and
movsb
mov
scas
testb
in
cld
pop
and
call
cmc
push
ret
push
popa
xorb
lods
cmpsl
push
jge
xchg
mov
jp
insb
sbb
mov
adc
pusha
pop
mov
cmpsl
sbb
in
inc
xor
js
shrb
and
ret
or
lahf
aam
sbb
arpl
pop
nop
sub
lahf
cmp
fcoml
aaa
sarl
ds
cmp
insb
jae
adc
movsb
les
push
mov
xor
addl
push
out
jl
cmp
inc
fst
add
lods
cmp
les
aad
lret
push
sub
aas
inc
sub
mov
jbe
pop
sub
add
mov
out
jle
cmp
vpaddusw
pop
cld
jns
loopne
mov
and
incl
jle
shl
adc
aad
sbb
lods
pop
adc
inc
in
mov
in
mov
call
nop
popf
sbb
push
push
add
push
fnstenv
lock
and
push
jmp
adc
dec
pop
mov
jnp
mov
sub
cwtl
repz
mov
xchg
or
bound
add
adc
rcr
test
jno
lcall
das
adc
mov
pop
cmp
pop
xlat
aas
lret
in
xchg
popf
or
pop
lods
std
cwtl
test
cltd
mov
pop
mov
push
les
cmc
jno
cmp
and
lret
inc
stos
mov
idivl
popf
sub
adc
cmp
sub
imul
cli
mov
arpl
xor
bnd
loop
sub
dec
pop
jle
xchg
push
out
popa
cli
loopne
cmp
sub
inc
in
bound
mov
pop
insb
sarl
cltd
add
enter
inc
ljmp
hlt
mov
xchg
es
mov
or
push
xorl
pop
enter
xchg
and
mov
adc
andb
addr16
xor
clc
test
adc
stos
out
pop
push
cmp
add
lea
out
hlt
repz
xchg
dec
adc
or
dec
xor
outsl
mov
in
clc
adc
lcall
movsb
ss
dec
mov
xor
cltd
push
aas
push
les
loope
fwait
mov
xchg
cs
mov
mov
mov
out
inc
inc
adc
ds
xchg
popa
daa
iret
jbe
inc
fnstcw
in
gs
loop
pop
lods
mov
jmp
enter
hlt
inc
mov
pop
push
pop
out
test
mov
mov
lea
int3
loopne
jl
add
ja
mov
mov
and
inc
xor
in
adc
lret
cmc
pop
aas
dec
or
icebp
jo
push
or
jmp
push
pop
xor
xor
and
mov
inc
jg
and
cwtl
daa
mov
mov
inc
mov
mov
mov
sub
or
test
pushf
or
in
das
adc
push
callw
sahf
sbb
mov
mov
mov
scas
pop
fists
mov
lds
pop
in
push
pop
sti
mov
inc
or
sahf
cwtl
gs
dec
iret
mov
lcall
sbb
adc
nop
pop
in
pop
arpl
mov
add
jo
aad
xchg
xchg
pop
scas
shlb
cmc
cmp
sbb
jb
cmp
inc
add
movsb
xchg
sub
aam
mov
mov
shrl
imul
mov
or
push
push
xor
lcall
jecxz
lcall
subb
and
lods
sbb
decl
les
xor
push
iret
dec
fs
mov
add
xchg
pop
push
mov
xor
out
xor
cmp
adc
addr16
xchg
outsl
in
rcrb
movsl
adc
movsl
mov
xlat
mov
shr
push
xor
pop
sub
in
rcrb
and
pop
imul
negb
inc
jne
cpuid
dec
das
sahf
xchg
int3
je
sub
pop
in
and
sub
push
cwtl
and
ds
sub
xor
fstl
out
inc
lcall
and
enter
xchg
push
or
sub
adc
in
jno
repz
push
inc
pop
in
sbb
push
and
mov
cmp
jns
call
sahf
jl
cmp
lock
mov
mov
pop
add
pusha
mov
add
xchg
stc
fsub
mov
int
jecxz
gs
sahf
mov
push
add
mov
js
xchg
sub
in
mov
enter
loop
outsl
repnz
jbe
xor
fnstcw
rcrl
in
and
loop
or
fs
push
xor
pushf
ret
scas
sahf
xor
mov
pop
jecxz
xchg
jecxz
sbb
lret
lea
or
enter
or
lea
popa
cld
xor
xchg
sbb
fnsave
test
daa
pop
sub
or
mov
mov
fdivs
mov
jne
dec
pusha
in
ja
pop
push
insb
leave
js
clc
adc
cmp
int3
out
dec
or
dec
out
or
jnp
ret
fldln2
dec
mov
xchg
notl
pusha
mov
es
test
stos
repnz
mov
jbe
adc
push
dec
jne
inc
repnz
or
pop
in
inc
push
xor
add
daa
sti
out
jmp
mov
fisubrl
xor
mov
into
dec
pop
cmc
jo
cli
sahf
loopne
push
shr
cld
shll
cmpl
sbb
enter
dec
mov
dec
or
push
or
sub
push
out
pushl
rorl
or
fimuls
repnz
jge
or
imul
test
xor
add
ja
xchg
inc
cmc
mov
mov
mov
xchg
pop
test
push
idivb
xchg
mov
inc
int
push
popf
xlat
stc
jge
inc
addr16
xlat
mov
push
rolb
add
jb
mov
mov
flds
and
hlt
or
sub
push
ja
push
in
sbb
mov
sbb
call
loopne
push
xor
out
sub
je
sub
fadds
mov
jmp
loopne
cmp
pop
pop
or
mov
ss
lock
adc
imul
jo
icebp
rcrb
in
pop
add
and
subl
in
lret
pop
cwtl
idivl
decb
jno
fcmovu
lds
mov
and
or
dec
hlt
leave
lock
or
mov
sub
push
sub
mov
sub
mov
loop
lahf
lds
gs
and
fcomi
push
out
das
jge
or
pop
test
xchg
ljmp
out
daa
std
or
ljmp
jno
xor
loope
aaa
roll
fs
inc
arpl
cmpsb
jne
sbb
dec
das
pop
jne
pop
stos
xchg
and
fidivrl
mov
cmp
jae
movl
mov
in
push
xor
xchg
and
hlt
jo
mov
fstl
cmp
and
mov
xlat
lahf
pop
outsl
push
shrb
lret
inc
sub
jns
pusha
xchg
in
and
cmp
das
adc
arpl
rolb
into
pop
xor
cmp
sbb
mov
pop
cmc
add
adc
mov
outsb
mov
mov
adc
std
mov
inc
push
xor
fstps
sbb
and
add
xchg
cmpsb
icebp
xchg
jp
cmc
push
dec
or
cmp
ljmp
push
dec
mov
adc
cmc
sub
jno
inc
aad
std
sbb
stc
push
pop
cs
scas
loope
pop
inc
or
adc
xor
xlat
ret
mov
sbb
fldl
out
push
mov
jns
movsb
lahf
jl
outsl
sarb
pop
dec
jnp
test
or
sbb
pop
nop
lock
mov
mov
push
push
cmc
dec
fs
xchg
loopne
clc
in
pop
mov
push
jecxz
and
mov
mov
pop
push
sub
pop
sbb
loop
adc
lahf
pushl
cmp
sbb
call
test
fdivrs
hlt
add
arpl
cld
test
inc
push
std
jb
xor
sbb
jge
lcall
jp
test
or
jns
shl
test
jg
xlat
adc
add
push
je
es
jg
mov
sub
push
add
negb
pop
or
orb
repnz
vmwrite
inc
fsqrt
pop
rcr
int
jne
cld
test
lods
fisubrs
inc
loopne
jne
push
fs
push
loopne
push
aaa
fmull
dec
mov
xlat
push
outsl
jecxz
adc
int3
ret
push
add
xor
dec
or
cmp
int3
bound
mov
cmp
add
adc
loopne
test
cs
pop
push
mov
jecxz
in
cmc
cmp
aad
mov
mov
shll
in
js
jb
mov
divl
filds
jo
jnp
negb
xlat
fdivrp
push
lret
pop
mov
inc
dec
fisttpll
test
popl
call
push
pop
or
notl
mov
pop
imulb
js
inc
cmp
cmp
outsl
xor
adc
dec
pusha
in
lea
mov
sub
adc
jl
test
ds
ljmp
andl
adc
and
mov
push
adc
sub
mov
fimuls
or
jnp
mov
lret
popf
adc
sarl
mov
inc
int
je
add
out
inc
and
sbb
or
jmp
inc
in
imul
push
mov
lods
or
jo
cmpsl
enter
sti
insl
dec
lret
cwtl
mov
sbb
lret
dec
or
pop
test
dec
add
ret
sub
fidivrs
in
sub
ret
sub
sub
mov
xlat
push
scas
cmp
add
movsl
adc
daa
addr16
adc
inc
pop
sub
add
sub
movsb
negl
jp
sbb
iret
jns
sbb
push
pop
adc
mov
inc
cmc
dec
jle
mov
nop
ss
xchg
popa
mov
mov
std
sahf
lcall
dec
cmp
int
mov
cmp
loope
sarb
xlat
mov
add
pusha
adcl
pop
imul
insl
push
addr16
jnp
and
mov
mov
movsl
loopne
mov
adc
dec
pusha
insl
test
xchg
movsb
leave
mov
push
std
jmp
jb
adc
mov
or
movsb
pop
int
adc
lock
rcll
xor
out
dec
movsb
push
mov
mov
pushf
ficoms
sbb
popa
lods
mov
lret
data16
in
xor
es
call
add
nop
push
lock
dec
and
arpl
add
jbe
sbb
xchg
cmp
enter
cmp
dec
je
cs
ja
ret
cmp
popf
jbe
mov
inc
jg
push
jg
jl
inc
xor
and
ljmp
xchg
inc
hlt
inc
adcl
sub
je
pop
and
or
nop
in
cmp
cwtl
lods
push
std
psubb
adc
aas
cmpsb
int
mov
out
ss
pmaddwd
scas
sti
ds
sbb
xor
sbb
push
ss
test
arpl
sbbb
test
loopne
cmp
stos
in
pop
add
mov
cld
fmuls
cmpsb
push
sbb
add
push
xchg
inc
mov
out
mov
inc
dec
xorl
loopne
iret
inc
jl
nop
pop
mov
int
aad
icebp
mov
mov
cmp
imul
dec
adc
fidivrl
popa
push
data16
lds
jo
scas
mov
sbb
insl
push
or
mov
out
shl
xchg
cmp
movsl
add
jp
test
leave
icebp
jge
ss
cmp
lret
inc
mov
mov
pop
xchg
out
or
dec
icebp
outsb
mov
rcrl
mov
dec
cmp
arpl
cmp
push
pop
and
movsl
fnsave
push
dec
fsts
addps
int3
aas
add
sub
sti
or
cmp
push
push
mov
mov
sub
fidivrl
push
or
xchg
call
jne
xor
lods
in
orl
outsb
data16
and
out
enter
or
into
bound
mov
xchg
push
lret
cmp
sti
movsb
jle
jb
xchg
jle
mov
jo
xorl
pop
xchg
out
cltd
mov
push
pop
in
shrb
mov
iret
sub
xor
push
mov
jmp
xor
lcall
sub
add
cmp
dec
xor
sbb
sub
fildll
xchg
sbb
add
imul
pop
lcall
cli
jl
dec
shlb
sub
jno
mov
mov
popa
addr16
mov
jb
pop
push
push
cmp
mov
imul
adc
and
icebp
cmp
xlat
xchg
pop
mov
fwait
popa
das
xchg
push
jo
insl
sbb
cmp
add
mov
pop
add
xchg
daa
leave
sub
adcl
jecxz
cmc
sub
sarb
in
xor
hlt
jp
lods
ret
clc
xchg
cli
jmp
into
xchg
and
ret
int3
lahf
outsl
out
pop
subb
mov
mov
out
adcl
mov
cmc
or
add
xchg
add
mov
ret
sub
data16
push
stos
or
icebp
push
pop
out
pusha
mov
add
mov
ret
jl
push
cmp
jmp
push
cmpsb
int3
mov
repnz
cmp
mov
les
adc
inc
push
clc
pop
loop
pop
add
push
imul
out
arpl
adc
xchg
fstps
testl
bound
call
sbb
pop
lods
push
and
les
pop
out
xlat
cli
inc
mov
xlat
and
outsl
xor
daa
pushf
inc
ret
fwait
dec
mov
nop
hlt
dec
ret
pop
loop
jg
les
sub
jae
out
rolb
clc
aam
jno
sbb
cmpl
dec
fidivrs
shrb
sbb
sbb
push
in
mov
jp
cmp
std
pop
test
mov
mov
sub
loope
jp
sub
fcmovu
aaa
orb
and
pop
mov
hlt
mov
das
inc
lahf
call
dec
out
cmp
rcrl
and
mov
pusha
pop
iret
xor
roll
mov
test
lods
cmpsl
jle
int3
xchg
insl
dec
pop
fidivrs
mov
lcall
sti
lods
cmpsl
jecxz
stos
ds
sbb
lahf
jno
pop
outsb
lret
jbe
aad
cmc
jo
inc
jmp
inc
nop
lea
mov
jl
push
inc
push
test
pop
lea
fnstsw
outsb
xor
add
lret
test
lods
mov
data16
xor
xor
gs
rcrb
dec
add
arpl
js
psllw
inc
pop
ja
pushf
icebp
pop
sti
push
gs
jne
lret
jno
jmp
pop
clc
dec
scas
push
cmpsb
pop
pop
inc
es
stos
jae
mov
sbbl
sbb
inc
lcall
inc
fidivrl
jo
loop
rolb
lock
push
cmc
pop
in
push
sahf
repz
sti
cmc
mov
in
push
inc
or
xor
clc
mov
ret
jmp
ja
cld
xor
jle
ss
mov
or
rol
icebp
push
push
ss
faddl
pop
gs
iret
fs
ret
sbb
jb
lret
movsb
xor
hlt
jo
xor
daa
mov
mov
cld
xchg
push
add
xor
sub
js
sub
repz
sbbb
sbb
dec
mov
sub
inc
dec
pop
iret
dec
sbb
pop
popf
mov
dec
jns
sti
jmp
test
das
mov
fisubl
or
xchg
xor
sub
xor
push
les
movsl
pop
orb
loop
fcmovbe
sub
fistl
idivb
test
es
mov
dec
inc
lahf
in
cmpb
scas
dec
ljmp
and
ja
pushf
cmp
jp
rclb
enter
adc
fs
cmpsb
iret
adc
dec
fstpl
adc
or
test
in
ss
xchg
in
popa
sbb
enter
cmp
icebp
loope
stos
stos
mov
mov
ljmp
int
jmp
mov
jbe
sub
inc
inc
cmp
shrb
ret
ss
xchg
sti
out
leave
into
pop
xchg
push
lret
and
std
repz
sub
sub
out
dec
cvtdq2ps
mov
ds
enter
pop
pop
ljmp
sti
xor
mov
jg
aas
aas
fisttpl
push
add
test
repz
push
cmp
push
into
popa
pop
ret
or
lcall
fstl
or
or
xchg
sub
xor
cmp
xlat
mov
jnp
aad
xor
lea
bound
jb
in
sub
movsb
sub
ss
mov
clc
or
or
inc
mov
fsts
push
pop
cmp
push
in
mov
pop
ja
cmc
cltd
enter
loope
xchg
mov
enter
add
sti
cltd
push
ljmp
jge
jmp
je
scas
jnp
popa
aad
loop
cmp
or
popf
dec
or
xor
xchg
sbb
sub
mov
xchg
mov
jns
add
lret
roll
movsl
mov
push
sub
outsb
aas
dec
mov
mov
pop
pop
or
xchg
int
inc
popa
in
push
jp
lds
jecxz
ds
push
mov
hlt
xor
pop
loop
sub
and
ficoms
cmp
push
je
enter
ljmp
add
cmpsl
xor
add
dec
jbe
test
gs
jo
dec
pop
mov
aam
outsl
das
mov
mov
lds
icebp
xchg
xchg
dec
testb
mov
rcll
fdivl
das
repnz
call
popf
adc
out
jno
mov
adc
inc
inc
scas
mov
cli
in
out
sub
sbb
rcr
shrl
push
xor
in
iret
inc
fwait
shrb
push
fcompl
fimull
inc
sbb
or
or
sbbb
add
jo
lock
mov
push
dec
std
int3
int3
cmp
pop
bound
cmp
outsb
out
mov
nop
dec
outsb
fcoms
ljmp
dec
dec
les
es
xchg
push
push
sbb
push
jno
pop
xchg
das
out
inc
push
cmpsl
dec
adc
ljmp
pop
insb
fstl
and
mov
push
arpl
lahf
push
or
stos
jnp
jp
orw
pop
mov
push
add
add
and
in
bound
test
ljmp
push
mov
int3
dec
adc
xchg
test
test
mov
je
jle
test
sbbl
lahf
push
inc
mov
sbb
mov
adc
ss
xchg
push
xchg
mulb
adc
inc
inc
adc
mov
cmp
xor
mov
pop
mov
lgs
in
daa
pop
mov
add
filds
push
inc
inc
test
nop
pop
mul
mov
mov
movsb
mov
add
jmp
sbb
cltd
enter
loop
and
hlt
jmp
xor
clc
jle
add
push
jae
adc
mov
or
jg
or
push
mov
or
inc
negb
ret
lcall
scas
push
dec
add
test
add
adc
outsl
int
jecxz
adcl
xchg
or
jne
mov
bnd
test
adc
sub
jmp
jmp
fwait
mov
jbe
mov
or
dec
add
fidivrl
movsl
imul
mov
test
bound
inc
out
mov
flds
scas
andl
cld
repnz
test
shlb
xor
pop
sbb
mov
add
push
sbb
xchg
or
loope
inc
mov
lods
sub
pop
clc
fistpl
loop
push
in
pop
cli
std
clc
std
push
loopne
lcall
loopne
outsl
adc
inc
cmp
leave
shlb
stos
cmp
fidivs
pop
add
aaa
dec
leave
ret
adc
dec
int
cmp
mov
pop
or
xor
cltd
cmp
jno
fstl
mov
jae
scas
ljmp
lods
xchg
mov
xchg
pop
pop
xor
clc
imul
jae
repz
push
pop
sub
into
sbb
sub
jbe
adc
jge
add
cli
data16
sub
push
mov
aaa
and
dec
add
push
bnd
xor
ror
cmc
push
add
lret
dec
and
pop
sbb
fs
adcb
xor
sbb
push
mov
sub
pushf
daa
int3
inc
sbb
cmp
dec
daa
or
adc
jecxz
pop
arpl
jno
and
ret
inc
lds
mov
fwait
mov
std
or
iret
aas
jl
push
enter
in
addr16
ret
in
out
dec
sahf
mov
lock
leave
addl
ds
push
sarb
out
test
sbb
movsl
lock
jns
mov
adc
sbb
cli
pop
addb
adc
or
ja
mov
inc
sbb
loop
dec
dec
adc
adc
test
mov
cli
mov
adc
insl
sbbb
mov
xor
rorb
cmpsl
jp
cwtl
mov
popf
das
ds
in
cmp
and
ss
or
lcall
mov
call
adc
xor
test
int3
sbb
push
dec
sub
in
add
insb
in
dec
sbb
inc
cmp
mov
insl
gs
push
cmp
hlt
fstpl
cmp
adc
sbb
lock
bound
ds
xchg
dec
add
imul
xchg
loopne
sbb
addr16
addr16
pop
test
sub
out
mov
inc
mov
mov
mov
push
addr16
jb
test
and
rolb
hlt
sbb
add
dec
mov
out
mov
mulb
mull
add
lret
mov
pop
inc
and
adc
or
fcomps
leave
icebp
push
sahf
push
cmp
mov
mov
mov
inc
mov
test
mov
fstpl
mov
in
push
jge
jnp
cmp
xor
jbe
sti
cmp
shll
or
mov
fwait
xlat
push
inc
dec
test
enter
pop
and
xchg
or
mov
mov
pop
sub
dec
iret
push
mov
repnz
in
jp
cwtl
hlt
pop
cmp
sub
pop
cld
sbb
cmp
les
xchg
inc
lcall
xor
nop
cmp
add
int
daa
mov
jmp
mov
flds
fnstsw
push
ficompl
imul
leave
sbb
gs
movsl
ret
jp
mov
sbb
shl
xor
or
or
stos
adcb
call
push
movsb
cld
cltd
ljmp
rcl
jecxz
fdivl
push
insb
sbb
sbb
ja
push
dec
push
leave
lods
imul
std
into
lds
sbb
push
stos
sub
mov
rcr
xor
fidivrs
lds
nop
push
inc
das
or
add
jecxz
das
cs
enter
push
mov
pop
xchg
inc
enter
push
sub
or
not
sub
xlat
sub
xlat
enter
push
cmp
or
pusha
mov
or
mov
sbb
fisttpll
in
pusha
pop
and
xorl
adc
ljmp
sbb
cmp
sarb
insl
into
mov
call
push
and
add
jle
fwait
push
push
push
shlb
jl
jmp
idiv
sbb
rcrl
push
test
fcomp
movsl
sbb
sub
arpl
adc
ror
xor
xchg
xchg
mov
ret
pusha
je
popf
into
std
adc
in
dec
inc
iret
out
add
push
lds
pop
xor
inc
neg
divl
jp
nop
les
sbb
lods
xchg
mov
imulb
mov
js
dec
xchg
push
xlat
sahf
sbb
adc
pop
push
sbb
repnz
ljmp
leave
mov
das
push
pop
adc
jo
cmpsl
sbb
mov
and
lds
push
out
scas
es
fildl
ds
into
call
sub
cmpsb
insl
mov
out
fldcw
mov
jmp
outsb
movb
cli
scas
jecxz
jmp
jne
mov
lods
dec
ficompl
and
xchg
xchg
fstl
arpl
sub
or
enter
sbb
lea
test
or
inc
add
fildll
testl
je
jnp
mov
mov
mov
leave
ret
sub
fs
in
jne
xchg
push
test
xorb
pop
iret
fld
fldl
subl
push
fsubl
xchg
sub
imul
mov
repnz
jnp
lret
dec
pushf
in
pop
dec
push
push
rorb
std
sub
cli
jle
jns
inc
in
out
cltd
insb
sbb
cmpsb
sub
js
wbinvd
xor
mov
push
mov
and
popa
mov
xchg
sub
imul
jno
or
cmpl
icebp
mov
cmp
nop
lcall
jno
lcall
or
mov
dec
ret
mov
lods
mov
mov
addr16
mov
nop
mov
and
sahf
inc
pinsrw
test
dec
shll
mov
ljmp
insb
int3
cmpsb
adc
data16
adc
in
imul
pushf
pop
lds
pop
ljmp
ret
pop
js
aam
xor
mov
test
inc
pop
xchg
js
xor
stos
popa
add
addr16
push
in
leave
movsb
jge
mov
imul
shr
or
test
ret
enter
in
jae
and
repnz
inc
dec
dec
mov
add
int3
adc
cld
test
mov
cmpsl
sub
add
in
sbb
and
adc
loopne
sub
inc
bsf
cmpsl
jbe
lcall
in
outsb
arpl
lret
insl
jp
mov
icebp
aaa
lret
int
push
sub
das
xor
repz
shlb
push
arpl
out
das
inc
in
call
jg
fdivl
loop
or
out
ljmp
inc
js
lock
mov
sbb
cmpsb
xchg
jae
cmpsb
out
jo
push
pop
xor
or
int3
or
jns
inc
mov
xchg
push
push
push
or
mov
sahf
or
push
pop
addb
and
jae
jge
and
aaa
dec
aaa
or
cltd
fistpl
mov
add
and
or
push
mov
jecxz
jecxz
cmpsl
orl
pop
imul
xlat
dec
fldcw
nop
mov
je
shll
or
sbb
add
adc
lea
dec
mov
jbe
sub
mov
xor
jecxz
rcrl
fisubs
push
rcll
in
pop
les
inc
inc
repnz
mov
mov
repnz
adc
dec
sbb
andb
stos
inc
nop
sub
adc
outsb
into
push
int
out
mov
lret
enter
add
and
rol
xor
and
insl
adc
and
inc
mov
push
popa
scas
mov
cli
jae
and
mov
xchg
pop
sub
add
adc
aas
adc
cmpsl
or
stc
mov
jae
xor
rcll
or
add
adc
inc
sbb
push
cmp
xlat
shlb
cmpsl
jns
mov
mov
outsl
add
orl
or
cmp
in
push
mov
pcmpeqb
mov
sbb
and
sbb
in
or
push
and
daa
in
movsb
sbb
jmp
push
sub
andl
outsb
sub
mov
outsl
mov
movsl
jae
pop
lret
push
adc
sbb
mov
cmp
pop
or
cmpsb
fsubrs
jle
inc
inc
push
cmpl
mov
fwait
sbb
sbb
cmp
inc
aaa
xchg
push
out
pop
les
push
mov
mov
pusha
outsl
rclb
je
add
not
sbbb
inc
fwait
repnz
push
push
xchg
mov
bnd
mov
lds
scas
cmp
les
jno
std
dec
pop
add
cmp
sub
lcall
dec
xchg
mov
test
xor
pop
inc
sbb
shr
in
into
or
imul
aad
cmp
dec
cli
fnstsw
adc
or
xchg
in
mov
call
testl
ss
scas
pop
pop
fwait
movsb
jno
jo
cmc
arpl
cmp
icebp
cs
aaa
and
jl
pop
pop
inc
fs
mov
pushf
ret
neg
jbe
jle
pop
or
cmp
mov
mov
cmpsl
pop
jp
ret
pop
ja
dec
and
in
xchg
dec
jbe
jns
or
jne
inc
push
sbb
std
test
sbb
loop
sbb
add
aad
xchg
xor
jl
or
sbb
ljmp
dec
sub
pop
ja
call
fdivrs
mov
cmp
inc
add
adc
mov
call
je
xor
mov
push
test
call
mov
cli
fisubs
sub
test
mov
jnp
sar
repnz
jmp
jbe
cld
scas
or
mov
xchg
addr16
sub
add
cwtl
sahf
cmp
adc
and
lret
mov
lds
mul
loop
cmpsb
in
pusha
gs
or
or
pop
cmpsl
loope
fstps
dec
mov
mov
jg
enter
push
lds
cwtl
mov
mov
push
addr16
or
rorb
mov
inc
sub
pop
inc
adcb
shrb
xor
lea
mov
sub
push
das
fwait
in
testl
fbld
mov
xchg
mov
mov
psllq
mov
test
xor
mov
jae
mov
add
rcrl
fsubrs
push
repnz
xlat
jno
inc
dec
movsb
lock
pop
test
shll
pop
push
ds
adc
mov
mov
jbe
jl
loopne
aam
add
jno
nop
outsl
pop
xor
push
cld
test
and
in
imul
rclb
fnstenv
jns
out
mov
jae
mov
adc
add
mov
pop
cld
xchg
out
leave
sbb
lods
aaa
push
jae
rcrb
push
xchg
mov
int3
decb
scas
mov
outsl
inc
in
repz
shlb
mov
pop
int3
cmp
int3
data16
out
orb
fcomps
int
outsb
adc
pop
dec
shr
cltd
mov
push
data16
ficompl
aad
insl
mov
push
lods
dec
clc
fbld
rolb
mov
fucomp
adc
out
loop
data16
fildl
loop
arpl
xor
lret
mov
and
dec
lods
sbb
sar
jns
int
dec
out
js
into
mov
test
lods
in
in
callw
sub
fldl
shr
jo
stos
push
imul
adc
jbe
sbb
xor
mov
mull
cwtl
mov
push
test
and
push
add
push
lods
and
imul
icebp
into
cmp
addr16
ja
xor
sbb
ficoml
mov
daa
jl
in
mov
xor
lahf
test
jno
mov
leave
jb
pop
les
out
mov
lahf
jecxz
in
outsb
test
cmc
jecxz
std
mov
mov
adcb
xor
repnz
pop
inc
pop
leave
repnz
cmpsb
test
bound
xchg
mov
dec
mov
in
lret
inc
jle
movsl
inc
sarl
jae
mov
out
imul
xor
and
mov
test
mov
and
popf
clc
or
fcoml
lods
aad
pop
cmp
ljmp
mov
into
gs
sbb
xor
and
jne
push
shrl
sbb
mov
xlat
push
mov
and
jns
adc
rclb
inc
insb
mov
pushf
aam
mov
cmp
ds
stc
ret
mov
inc
insl
pop
cmp
mov
and
mov
dec
and
mov
out
stc
fs
into
sub
sahf
adc
pop
xchg
in
adc
cmpl
push
push
mov
ret
cltd
clc
incb
add
pop
xchg
push
cmp
push
lret
inc
fisttpl
jo
xchg
pop
jle
ret
lods
les
push
lea
jle
pop
cltd
sub
inc
arpl
popa
pop
xor
mov
aas
sbb
add
xor
pop
cld
sti
cmp
lret
inc
shlb
mov
adc
dec
sub
sub
leave
in
adc
or
jg
push
rcr
stc
pop
cltd
pop
shl
out
fcmovne
push
mov
and
lahf
aaa
cmp
pusha
cs
adc
push
dec
pop
mov
lahf
add
push
outsb
mov
xorl
inc
push
ret
lea
test
aad
or
jb
inc
and
mov
mov
arpl
xchg
cmp
and
aaa
bound
lods
int
arpl
and
stos
push
mov
mov
add
mov
arpl
sti
jl
fucomi
and
and
inc
cmpb
sbbl
and
fisttpl
and
mov
mov
sahf
sub
mov
mov
pop
push
mov
cmp
dec
not
pop
ret
cwtl
int3
sub
insl
outsb
mov
dec
or
imul
lea
and
adc
icebp
xchg
mov
xor
inc
sub
jne
jo
leave
lea
js
cmp
lods
xor
outsb
out
in
or
mov
and
fmuls
sub
dec
jl
lea
and
push
mov
sbb
stos
mov
dec
mov
jae
insl
mov
cmpsl
push
mov
hlt
sbb
jne
pop
push
xchg
xchg
sahf
mov
mov
cmpsb
push
and
dec
test
adc
movsb
dec
inc
or
cmc
scas
pop
adc
shrb
sub
jle
movsl
cwtl
mov
rcrl
sbb
or
push
pop
mov
fwait
or
cmpl
dec
pop
rol
out
xchg
inc
adc
cmp
inc
jae
orb
repnz
xor
movl
jg
jle
jp
out
fisttpl
mov
xor
mov
xchg
mov
repnz
mov
push
hlt
adc
xlat
mov
push
lret
repz
sbb
shl
call
inc
pop
ss
imul
inc
push
inc
jnp
and
cmp
push
xchg
xchg
dec
ja
test
fiaddl
and
pop
stos
sbb
pop
cmp
pop
xor
cs
mov
inc
testl
fisttpll
and
in
xchg
push
jecxz
inc
jo
aad
out
mov
cltd
mov
mov
popa
scas
in
pusha
xlat
scas
or
mov
dec
inc
call
lret
and
fisttpll
in
dec
fs
loope
test
mov
inc
mov
fcmovbe
out
jmp
sbb
mov
sahf
inc
xchg
sti
push
sbb
pop
stos
movsl
scas
mov
ss
mov
cwtl
pop
jle
movsl
pop
push
dec
lods
les
xchg
pusha
outsl
add
pusha
jno
and
movsl
iret
addb
js
or
nop
jp
mov
ds
in
dec
sbb
dec
lcall
int3
mov
es
test
pop
sbb
rolb
or
xchg
mov
push
push
pop
jg
sbb
dec
mov
dec
jne
dec
jg
jmp
cmpsl
sti
sbb
pusha
xchg
mov
xlat
and
sti
pop
in
and
fdivl
arpl
out
pop
lret
jg
sub
das
int3
jecxz
js
push
and
mov
into
sub
cli
pop
jle
xlat
push
dec
shll
insl
sbb
mov
xchg
cs
dec
or
jno
xchg
movsl
xor
daa
out
pop
xchg
shrl
push
push
mov
leave
or
call
cmp
add
dec
out
sbb
mov
popa
jle
mov
icebp
js
or
pop
in
jl
push
mov
cmp
xor
jge
iret
negb
inc
xchg
push
dec
mov
or
clc
bound
imul
pop
cmp
xchg
not
out
mov
sbb
and
shrb
pop
pop
mov
repnz
cwtl
mov
dec
mov
xchg
jmp
pop
inc
or
sti
or
pop
in
cmp
pop
or
cs
aad
and
or
push
xor
test
sbbl
mov
push
das
cs
out
mov
mov
shr
adc
mov
adc
test
mov
pop
xchg
cmp
sub
inc
repnz
cmp
cli
sbb
lods
sub
xchg
repnz
or
movsb
add
mov
mov
add
add
loopne
xchg
rcll
ss
pop
scas
shufps
imul
cmp
xorb
rorl
aas
imul
loop
ret
lods
nop
xchg
cmp
in
in
add
jp
imul
mov
rcrb
repz
cmp
dec
push
lcall
bts
sbb
dec
or
pop
lret
fdivrs
stc
xor
imul
jo
lret
out
mov
xor
sbb
test
dec
sub
sbb
rorl
fs
sub
out
arpl
sub
jnp
inc
pop
mov
or
fists
or
push
add
push
mov
lret
dec
push
mov
stos
mov
test
subb
push
jb
sarb
pop
mov
std
shrb
xchg
mov
je
ljmp
and
adc
sub
icebp
aaa
out
int3
inc
and
push
and
cmp
mov
sub
ja
roll
lret
nop
mov
imul
dec
sub
shrb
or
cld
divl
test
fs
jne
dec
loop
jge
js
mov
xchg
add
mov
ds
mov
fwait
xor
jns
stos
xchg
jne
and
repz
cltd
in
dec
pop
mov
outsb
pop
cmpsl
jmp
aaa
xor
testb
insl
push
hlt
inc
in
mov
aam
imul
add
jbe
inc
xor
outsl
addl
pop
outsl
cmpsl
lcall
scas
push
xor
xor
adc
loopne
in
jge
xor
scas
int
pop
sbb
mov
pop
or
mov
mov
insb
sbb
iret
sub
adc
inc
test
vaddss
rcll
cmp
jne
xchg
sbb
scas
int3
push
push
inc
push
adc
lea
imul
aam
out
out
gs
setae
cld
sub
inc
jno
hlt
test
mov
push
outsl
jmp
and
stos
pop
or
jae
xlat
dec
xchg
pop
shlb
sbb
or
popa
sbb
fwait
pushf
addr16
mov
out
pop
xchg
ret
inc
imul
and
and
fimull
mov
pop
and
loop
in
push
cmp
cltd
add
cmp
stos
fsubs
jbe
xchg
pop
pop
mov
stc
inc
js
sbb
xor
shlb
sub
sarb
adc
dec
outsb
xlat
ja
cmovnp
insl
out
push
arpl
sub
into
sbb
ret
jge
sub
or
mov
jge
imul
xor
iret
sti
mov
out
inc
fmuls
insb
ljmp
add
push
inc
js
push
sbb
lods
and
adc
insb
jnp
xchg
movsl
push
jge
cmpsl
lret
pusha
rcrb
fcmovnu
in
fcmove
icebp
into
aas
jo
filds
lcall
or
lds
std
mov
dec
xor
sbb
and
jge
push
pop
xchg
out
mov
cmpsl
ror
jecxz
int
out
add
adc
xchg
cmc
xchg
mov
xor
lcall
xchg
les
push
aaa
stos
ss
lea
test
sbb
leave
pop
cmp
xadd
push
jecxz
push
nop
test
lock
cmp
fiadds
xchg
sbb
sub
cwtl
push
mov
sbb
push
dec
rclb
xchg
jns
add
js
pop
and
xchg
arpl
insl
hlt
ret
icebp
xlat
js
bound
xor
jb
mov
das
jae
push
xor
mov
sub
push
js
mov
rcr
aad
popf
sub
aas
xchg
sub
sub
scas
adc
xor
paddusb
xor
int
aam
inc
sbb
push
enter
ret
stos
ljmp
cld
dec
cmp
shrb
and
add
andb
mov
mov
cli
xchg
cmc
ss
stos
xchg
push
jb
mov
add
pop
mov
in
lods
jae
push
xchg
ja
xchg
stos
or
repz
repnz
outsb
les
add
gs
sbb
mov
push
inc
and
or
mov
mov
fdivrs
mov
xor
inc
repnz
js
lret
and
inc
inc
mov
fs
shll
aas
sbb
jg
mov
jge
call
insl
push
insb
sahf
push
mov
loope
cmp
loopne
pop
bound
out
lret
iret
dec
ljmp
ja
jl
add
mov
mov
ja
fbstp
cli
push
loope
ret
push
xlat
jbe
loop
add
das
in
push
icebp
cmp
in
add
jo
aam
ljmp
sahf
pop
idiv
jae
je
scas
imul
andb
push
loopne
and
cmp
xor
rolb
outsb
out
fs
rcl
mov
push
mov
test
pop
add
and
push
dec
push
popa
xor
cmc
movsl
push
or
jl
pushf
inc
lret
sub
mov
test
add
jns
insb
add
lds
and
push
xchg
pop
inc
and
and
xor
dec
mov
sub
push
insl
scas
and
lods
cmp
jb
cmp
cltd
or
fldenv
pop
sti
cmpsl
mov
cld
or
in
pushf
fsubl
je
jnp
mov
fsubrs
ja
test
mov
mov
fsubl
ret
pop
mov
loop
push
lahf
and
and
sub
jge
jl
repnz
mov
sar
add
aaa
adc
mov
shll
mov
enter
pop
mov
inc
sub
mov
out
sbb
sbb
cmpsb
xlat
lahf
cld
es
sbb
pop
dec
and
mov
and
dec
mov
dec
jle
jl
jns
lock
orb
cmpsb
sbb
mov
dec
mov
adcl
add
loopne
jge
sub
imul
lea
fnstsw
pushf
dec
ret
sarb
xchg
fisttps
js
sti
inc
xor
cmp
insl
push
lahf
fiadds
fwait
es
fsubl
or
sub
add
std
mov
mov
sbb
imul
mov
sub
rcll
cmp
pop
jmp
dec
movsl
pop
les
js
shrl
xor
clc
push
push
jl
sbb
jmp
insb
stos
popa
inc
pop
sarb
sbb
xchg
jp
into
push
xorb
add
xchg
and
fcmove
aaa
xchg
test
insb
xchg
mov
dec
cmc
dec
jno
cwtl
ss
xchg
cmp
or
inc
jg
mov
test
icebp
push
push
cli
bound
jae
je
int
dec
call
fisubl
sbb
mov
testl
sub
xchg
push
or
push
mov
test
jno
push
out
stc
data16
dec
mov
cli
sub
pop
xchg
xor
dec
scas
jne
xor
mov
fistpl
rol
mov
mov
icebp
outsb
cli
push
push
out
mov
xchg
jp
jle
and
adc
popf
sub
inc
cmp
hlt
add
sbb
ljmp
pop
pop
sub
cmp
add
arpl
xchg
or
pop
insb
xchg
idiv
adc
mov
xchg
add
xor
cli
cmc
sub
pop
frstor
iret
and
fisttps
and
xor
icebp
cmp
lcall
pop
or
and
das
dec
mov
add
or
mov
rcr
lretw
daa
subl
out
push
popf
and
cmc
xor
cmp
int3
out
out
mov
add
cltd
fcmovbe
js
out
inc
inc
or
arpl
mov
idiv
shll
stc
loopne
imul
inc
gs
push
dec
adc
int3
or
push
cmp
or
dec
iret
iret
dec
adc
mov
mov
cmp
push
std
add
out
push
xor
or
ljmp
cli
push
addr16
pop
hlt
jge
data16
ja
mov
inc
ret
jg
adc
add
lods
ficoml
movb
push
les
push
or
add
and
push
dec
dec
stc
add
sub
adc
dec
movsb
sbb
push
das
shl
cmp
call
inc
add
mov
je
cmp
and
rorl
les
mov
adc
mov
cltd
rol
scas
push
aaa
lret
and
fs
addr16
fisubrs
cmpl
cmpl
mov
push
dec
movsb
mov
fnsave
cwtl
sbb
pusha
pop
pop
adc
inc
jmp
or
sbbb
movsl
jb
jmp
push
movsl
push
inc
je
popf
pop
mov
inc
dec
fwait
mov
cltd
out
jne
mov
cmp
and
xor
mov
lock
jmp
fs
mov
aas
push
xor
bnd
and
adc
lods
jnp
sarb
xchg
push
mov
incl
adc
fs
int3
mov
mov
in
sbb
sub
inc
push
and
cmp
adc
into
mov
pop
loopne
adc
icebp
mov
xor
mov
push
inc
xchg
pop
aad
mov
cmp
rcrl
jno
push
mov
push
fst
mov
imul
sub
outsl
lds
ficoml
adc
in
adc
shr
add
scas
cld
in
aam
jno
ss
imull
in
mov
jmp
inc
pusha
clc
mov
xor
dec
xorl
ret
ds
cmp
int
inc
sbb
out
out
test
push
and
in
mov
adc
jnp
divl
rorb
les
cli
inc
mov
jnp
mov
nop
mov
out
mov
mov
fstl
push
xchg
push
pusha
enter
xor
xchg
lret
push
jmp
add
jb
in
jmp
jnp
fistl
inc
icebp
jmp
push
xchg
mov
mov
mov
xor
pop
icebp
push
mov
sbb
mov
cwtl
test
mov
data16
mov
repnz
cmp
ret
xchg
cs
je
xchg
and
rcl
dec
cmpb
jns
leave
fsubrp
sub
cltd
ret
xor
xchg
and
mov
mov
rcr
xchg
jo
popf
dec
imul
es
repnz
daa
mov
mov
or
inc
inc
xchg
push
sbb
fists
push
sbb
jo
jmp
test
and
and
xor
stos
bound
cmpl
jo
sub
cmpsl
ret
mov
sbb
push
pop
sti
xlat
mov
jb
adc
xlat
insb
dec
stos
fisubrs
inc
in
push
pcmpgtw
sub
jp
sbb
aam
sbb
jge
stos
push
aad
push
jbe
sbb
ja
cmp
loopne
push
xlat
scas
lods
sbb
cs
leave
fsts
stos
jmp
sub
js
lods
mov
scas
jge
testb
xchg
add
je
shlb
or
mov
jl
pop
add
rorl
addb
sti
jle
cli
enter
gs
adc
aam
sti
mov
xchg
lcall
outsl
sbb
or
imul
dec
in
or
dec
imul
xlat
insl
sub
sub
pop
shr
jmp
sub
pop
stos
fcomi
imul
shll
out
out
adc
insl
pop
das
push
sarl
push
sub
ja,pt
das
into
scas
movsl
sub
imul
daa
sub
mov
mov
sbbl
scas
movsl
jnp
das
adc
or
fmuls
outsl
sbb
xor
or
push
jmp
jp
stos
ret
lods
fwait
lods
dec
mov
and
test
popf
les
imul
mov
je
sbb
mov
jmp
sub
inc
push
int3
repz
scas
outsb
add
or
inc
fmuls
daa
pop
fisttps
sub
sub
arpl
nop
dec
cmp
ret
push
std
adc
lock
gs
mov
xchg
jmp
out
pop
add
andb
adc
fdivs
push
inc
inc
and
inc
lock
mov
nop
inc
repz
pop
lahf
shr
sbb
jbe
cli
stos
jle
jnp
arpl
adc
cwtl
bsf
icebp
ret
and
scas
xchg
fnsave
mov
stc
adc
adc
shl
cmpl
jno
push
jl
stc
sub
dec
xchg
test
push
int
sbb
ljmp
jmp
in
das
stos
mov
das
inc
cmp
lods
out
movsl
loopne
or
and
push
movsl
popa
aad
cld
imul
fisubl
adc
fs
or
xor
push
cmp
push
sub
daa
jns
sub
push
mov
add
xchg
pop
xchg
sub
dec
iret
and
mov
inc
and
lret
push
ret
mulb
lds
add
jg
mov
pop
stc
ss
mov
pop
dec
es
popa
in
and
data16
push
mov
sbb
dec
rolb
mov
sti
leave
data16
lods
decl
in
movsl
notl
mov
sbb
cmpsb
in
mov
dec
sub
push
popa
out
pop
testb
jno
fstps
addb
jle
and
stos
adc
je
xor
aam
and
pushf
pusha
fwait
xlat
jmp
sqrtps
add
adc
or
daa
out
std
mov
push
jp
xor
jne
imull
repz
stc
fstl
out
xor
cli
pop
arpl
cmp
stos
shl
cwtl
addb
shr
repz
sub
test
adc
adc
and
fcomi
adc
sbb
fisttpl
xor
mov
dec
and
mov
mov
in
xor
into
arpl
and
mov
jns
sub
cld
jge
pop
jno
adcb
fs
xchg
fsubs
pop
jp
mov
gs
aas
dec
and
rcrl
stc
xor
sub
mov
ja
scas
loop
cmpsl
xor
fcompl
mov
cmp
or
sub
and
xor
add
icebp
loop
or
enter
add
lret
sub
cmp
xchg
adc
mov
ss
ds
daa
xchg
sahf
sti
mov
int3
push
lea
sub
call
int3
imul
mov
test
clc
cmp
in
in
fs
insl
lds
mov
push
or
fdivrp
xorb
xchg
in
and
jae
dec
cmp
xor
das
idivb
js
dec
sub
cwtl
adc
and
clc
out
dec
out
ficoml
push
adc
lcall
mov
pop
jb
ja
xor
push
mov
jnp
pop
mov
loope
bound
inc
sbb
and
push
negb
shlb
es
std
xchg
or
xchg
lock
add
ffree
lods
sbb
mov
inc
in
jmp
mov
sbb
xchg
jecxz
fwait
pop
push
mov
xor
bound
mov
push
xchg
ja
mov
xchg
in
cmpsb
cmp
or
mov
xorl
mov
inc
xchg
out
dec
in
jge
mov
into
sub
jno
adc
aas
mov
ljmp
push
pop
xchg
stc
out
nop
ret
pop
imul
fnstsw
inc
test
and
adc
or
cmc
lods
fstpl
xchg
xor
icebp
cmp
ja
mov
imul
jp
dec
lds
cmpsb
and
loope
mov
ret
push
dec
nop
stos
adc
clc
scas
inc
add
inc
rclb
cmc
repnz
push
mov
sbb
mov
cmp
fsubl
mov
scas
ljmp
jbe
shlb
sbb
jg
sbbb
and
mov
lods
mov
aaa
pop
push
fs
sub
pushf
pop
shll
loope
push
mov
in
cmp
insb
or
mov
xchg
dec
xchg
lock
pop
adc
fdivrl
xorl
stc
insl
mov
jge
pop
adc
inc
jg
push
ljmp
pop
xlat
push
loope
dec
enter
jge
orb
insb
add
dec
iret
dec
enter
ss
dec
mov
shlb
inc
push
pop
push
test
std
mov
lock
movsb
dec
mov
sarl
inc
js
xchg
jecxz
lods
inc
je
lock
mov
bound
fstl
notl
xor
jnp
or
loopne
test
std
test
dec
add
nop
incb
shrl
jmp
or
push
jne
lahf
pop
call
sbb
cmp
or
iret
in
dec
add
mov
lcall
pusha
add
xor
cld
sub
ljmp
pop
pushf
or
sarb
add
insl
jmp
inc
leave
mov
lcall
mov
out
push
cmc
jne
ja
stos
xlat
lock
lret
mov
bound
push
lods
add
xchg
jae
dec
movsl
jge
icebp
pop
arpl
mov
daa
mov
insl
ret
cmp
xchg
mov
ret
jo
scas
add
insb
arpl
mov
dec
shr
insw
and
dec
sub
xor
inc
ret
aad
ss
pop
jl
mov
out
jle
rcr
push
sub
dec
out
push
in
and
scas
ret
fcomps
dec
push
fisttpl
xchg
data16
aad
sar
xor
fsubrl
testb
fwait
stc
push
shlb
cwtl
mov
and
adc
cli
enter
shlb
xchg
mov
mov
sti
ja
xchg
mov
rcll
mov
scas
int3
in
and
dec
xchg
sbb
inc
in
cmp
xchg
loop
cmpsb
sub
aam
or
outsl
out
jb
test
scas
push
pop
cli
in
movsl
mov
add
insl
dec
or
je
je
inc
pop
iret
push
fwait
hlt
cmp
dec
lods
insl
stos
inc
cmp
cmp
js
inc
ja
dec
fst
lahf
pop
lahf
jbe
or
pop
mov
and
or
push
fbstp
shll
xchg
adc
adc
and
mov
insl
movsb
pop
ret
mov
lcall
ja
xchg
pusha
adc
dec
pop
push
xorl
and
mov
fdivl
mov
push
lcall
loopne
or
testl
pop
je
dec
rolb
pop
stos
mov
sub
jp
dec
jo
rcrb
push
test
lret
ds
fisttpll
lods
das
sbb
lods
repz
mov
adc
mov
jo
test
mov
sti
and
xorb
jge
das
mov
cmp
inc
mov
out
xchg
pop
insl
dec
std
cld
pusha
sbb
imulb
mov
jl
pop
jg
jg
mov
cmp
adc
fistpll
insb
adc
adc
pop
fcmovbe
cmp
inc
jb
stc
sub
mov
adc
pop
mov
aad
inc
sbb
incb
inc
inc
pop
stos
fxch
test
dec
leave
inc
stc
icebp
mov
les
mov
aam
mov
cli
out
movsl
or
jne
cmp
daa
inc
pop
rcr
and
gs
push
sahf
sahf
out
adc
jbe
mov
adcl
sbb
es
jecxz
jle
aas
mov
leave
cmp
or
jne
mov
mov
ja
jbe
mov
xor
push
test
dec
push
ficompl
xchg
jp
xchg
add
fbstp
mov
dec
ja
mov
and
push
dec
xor
adc
or
cmc
leave
hlt
js
fsubl
enter
pop
sub
imul
sbb
lcall
popa
dec
sti
pop
and
aas
outsb
adcl
call
adc
pop
lds
xchg
sub
cmpsl
idivl
or
pop
fldt
mov
mov
mov
cwtl
xor
fcompl
jp
push
add
clc
inc
cmp
xor
or
aad
xchg
out
or
push
lods
and
xor
lahf
aas
adc
cmpb
pop
dec
rorb
mov
lret
mov
jae
xchg
orl
push
push
xchg
cmp
pop
in
rcr
dec
dec
movsl
xchg
or
or
daa
ret
fwait
jg
sarb
adc
push
pop
lods
xchg
mov
repnz
inc
inc
inc
adc
outsb
lds
je
icebp
notl
mov
jbe
inc
push
call
mov
mov
adc
packsswb
mov
arpl
int
and
xor
call
push
pusha
pop
incl
movsb
xor
sbb
jnp
cld
fisubl
xchg
adc
mov
push
pop
repz
jno
cld
adc
popf
fwait
dec
and
jle
mov
and
ja
outsb
and
aaa
aaa
inc
mov
xor
pop
pop
or
shrd
out
ljmp
lea
xchg
sahf
jle
and
daa
clc
icebp
and
enter
loope
test
orb
lods
add
inc
movsb
sub
add
mov
xchg
jb
fstps
lret
jne
cli
ljmp
sbb
cmpl
out
jge
inc
jb
jb
pop
test
inc
loopne
sti
cmp
pushf
fwait
xchg
shll
mov
or
xchg
ret
pop
imul
sarb
pop
aad
cli
dec
mov
mov
dec
shll
cld
pop
mov
stc
and
add
pushf
jp
adc
shlb
jmp
mulb
arpl
sub
aam
jb
mov
mov
loope
mov
in
xchg
and
cmp
add
jno
push
int
cmc
or
in
or
repz
add
xchg
scas
sti
adc
jae
sub
mov
enter
mov
mov
cmp
adc
sbb
clc
lock
jp
out
les
mov
pop
adc
sarl
mov
pop
out
mov
les
xor
loop
mov
dec
stc
cmp
jp
pop
sub
std
pop
xchg
sbb
jae
icebp
jl
popf
jae
int
popa
icebp
adc
inc
cli
pop
sub
add
add
xor
push
aaa
xlat
and
add
lahf
movsl
pop
test
test
lods
inc
jmp
inc
icebp
jle
roll
sbb
or
andl
xchg
lea
mov
cmpsb
mov
mov
leave
outsl
ret
mov
dec
cli
shrl
or
adc
mov
add
xor
xchg
jae
test
aas
loope
jns
jmp
xchg
sbb
mov
jg
adc
xor
daa
pop
cmp
dec
les
popf
xchg
xchg
inc
inc
push
movsl
or
mull
out
or
inc
add
fidivrs
imul
shl
pop
jns
mov
sub
jl
and
mov
std
lahf
push
addl
outsb
iret
cli
adc
lods
icebp
f2xm1
mov
sub
dec
sahf
pop
js
popf
mov
sub
fsts
or
clc
orl
mov
cs
sub
lret
movsl
cwtl
and
adc
inc
add
and
mov
jl
push
outsl
jnp
mov
adc
add
pop
ja
push
xchg
bound
cs
insl
cmp
jmp
xchg
popf
jle
lea
lcall
mov
sti
rorl
mov
test
sbb
cmpl
mov
pop
adc
jp
pushf
push
cmc
inc
int
push
sub
dec
cwtl
adc
sbb
ret
mov
cs
insl
mov
cmpsb
jbe
stos
shrl
pop
pusha
in
add
push
sarb
pop
inc
and
fildll
into
pop
add
cld
aas
mov
or
outsb
and
mov
test
inc
mov
jne
push
aaa
add
inc
cmp
dec
cmp
pop
arpl
fiadds
and
mov
push
ss
cmp
sbb
in
std
xchg
popa
jle
dec
mov
cli
sti
mov
mov
xchg
cwtl
pop
inc
jecxz
push
insl
lds
lcall
andl
push
jae
lcall
lods
iret
les
or
fsts
ja
mov
repz
mov
and
shll
adc
clc
xor
in
cmp
jle
int
jecxz
mov
mov
mov
push
ret
shlb
jl
adc
mov
xor
inc
jl
push
clc
push
cmp
inc
ljmp
sahf
loopne
dec
fnstsw
scas
xor
adc
gs
cmp
dec
dec
pop
add
adc
push
adc
repz
ja
sbb
sub
mov
es
pop
push
xchg
add
dec
pop
mov
cwtl
pushf
xchg
pop
jecxz
in
jbe
xor
popf
cs
xchg
ljmp
ljmp
cltd
cltd
xchg
arpl
lcallw
cmp
stos
add
and
add
inc
scas
and
mov
je
ljmp
xchg
gs
pushf
jne
push
repnz
cmp
leave
mov
insl
call
inc
lods
into
out
push
jmp
sub
add
or
jae
cmp
xchg
js
jb
xchg
mov
or
push
mov
hlt
fistpl
pop
pop
loop
into
lock
xor
adc
jne
daa
es
xor
sti
cmp
xchg
jnp
sub
mov
sbb
adc
sti
mov
mov
mov
cmpsl
adc
dec
xchg
cmc
lcall
out
test
mov
fsts
ficoml
push
into
push
cmp
mov
popf
movsb
fldt
rolb
test
pop
mov
inc
out
jbe
jle
cwtl
pop
daa
mov
test
in
loope
test
aas
or
test
fcmovnu
testb
in
and
icebp
ja
ja
lcall
lods
pop
dec
cld
mov
cmp
popf
xchg
xor
fsubrp
and
push
aas
push
sbb
stos
aam
add
aad
pop
xor
mov
stc
mov
lods
lds
sub
cmp
stc
movsb
jg
push
leave
adc
pop
dec
sub
rcrl
mov
lea
loop
sbb
jns
cmp
mov
aas
and
testl
mov
loopne
data16
mov
mov
sti
test
repz
inc
lods
sbb
dec
xchg
dec
outsb
mov
lods
adc
dec
decl
aaa
adc
add
ja
iret
int3
mov
dec
out
sub
mov
mov
aas
mov
xor
cmp
adc
jae
sub
or
mov
add
loop
addl
dec
sbb
sbb
leave
xchg
fimuls
gs
rclb
pop
pushf
adc
gs
stos
xor
dec
mov
aaa
in
arpl
test
test
std
fistpll
subl
mov
shll
inc
repnz
in
adc
jns
add
dec
inc
sub
fisttps
sbb
jmp
mov
inc
std
ror
dec
xchg
adc
sub
sbb
aas
pop
out
hlt
xchg
pushf
lahf
sub
leave
adc
mov
mov
ds
or
fwait
push
or
js
cmp
xor
out
push
mov
scas
into
push
into
sub
test
sbb
jb
cmp
jb
mov
insb
inc
out
loopne
fwait
and
out
lods
adc
dec
pop
out
cmpsb
mov
es
cmp
scas
mov
js
notb
mov
pop
sub
xchg
jecxz
sbb
mov
ret
mov
dec
sub
add
and
cmpsl
push
iret
xlat
lea
enter
aas
mov
sbb
xor
insl
adc
mov
pusha
loope
xchg
mov
outsl
lock
jb
inc
xchg
xlat
sub
mov
daa
and
insb
fsts
and
shll
aaa
jle
push
and
lea
sbb
add
push
dec
nop
xor
cs
fsubp
mov
out
lds
cwtl
test
gs
xlat
sbb
push
sub
inc
popf
add
icebp
lock
outsl
test
adc
popf
iret
pop
mov
cmp
push
jae
subb
fdiv
fnsave
popf
je
std
cltd
add
and
hlt
rcl
inc
or
rcll
push
shll
lcall
and
mov
pop
mov
sbb
adc
int3
and
and
mov
mul
aad
and
dec
cmp
dec
cli
push
fisttpll
cwtl
outsb
xor
jb
out
adc
cwtl
nop
cmp
test
xlat
test
mov
or
push
cs
scas
pop
ds
xor
dec
mov
mov
cmp
js
inc
sti
mov
jno
pop
sar
xor
hlt
pop
sbb
cmp
jb
fwait
in
and
jnp
fldcw
sub
cli
jnp
adc
in
xor
push
jecxz
or
je
mov
mov
rorl
mov
xor
inc
leave
aaa
mov
fwait
ret
jp
cmp
cmpsl
push
fistpl
xchg
adc
insb
fs
adc
push
ficompl
xchg
mov
lahf
cs
xchg
jbe
leave
jecxz
mov
sbb
sti
stos
rcrb
cmp
xchg
and
adc
pop
insb
add
xlat
movsl
dec
xchg
inc
inc
or
add
and
xchg
stc
lods
sbb
mov
aas
jo
xchg
ret
shl
sbb
push
push
hlt
inc
jo
sarb
aas
pcmpeqw
cmp
xchg
dec
adc
shl
add
mov
and
lret
lcall
mov
inc
test
push
stc
mov
lret
outsb
fucomp
loop
inc
adc
ret
xor
jae
loop
mov
stc
es
cmp
repnz
icebp
adc
test
and
loopne
xchg
nop
fsubl
or
sahf
and
and
bound
jnp
enter
cmpb
mov
popf
test
xor
mov
sub
mov
or
push
in
in
and
je
mov
inc
cmp
stos
mov
xchg
and
cmp
in
andb
outsl
out
sarb
xchg
pop
fsubrl
xchg
js
or
shrb
ds
test
xor
roll
jbe
cwtl
xor
mov
fadds
stc
repz
or
add
andl
inc
push
lcall
mov
ret
xchg
xchg
xchg
adc
inc
stos
test
clc
sbb
leave
lret
fwait
mov
pop
ja
xor
sbb
jno
or
pop
add
rcrl
dec
hlt
sbb
mov
adcl
in
inc
into
mov
adc
pop
lahf
jnp
fcmovnu
es
in
inc
movsl
jecxz
pushf
mov
and
mov
jb
roll
mov
aad
xchg
inc
push
xchg
scas
mov
leave
loopne
adc
cs
mov
shl
cmp
and
lcall
adc
nop
cmp
xchg
dec
xor
sarl
mov
add
and
out
out
popl
js
or
ret
adc
sub
ss
test
push
jno
movsl
sub
push
stos
sub
ja
ret
mov
addr16
adc
cmp
mov
dec
and
or
ds
jns
out
cltd
inc
push
jnp
inc
je
xchg
jnp
sti
arpl
dec
xchg
add
mov
shll
les
addr16
mov
xor
xor
cmpsl
sahf
lds
andb
or
pusha
jns
or
dec
mov
cltd
test
or
jmp
lods
daa
data16
int3
test
test
repnz
lret
xchg
cmp
rorb
lahf
inc
lods
clc
mov
push
roll
sbb
add
add
dec
jo
ds
dec
insl
inc
pop
pusha
add
jb
ret
aaa
inc
arpl
int3
cltd
sbbb
lods
hlt
dec
loopne
jnp
inc
or
mov
push
adc
pop
pushf
push
push
clc
dec
repnz
dec
jns,pn
xor
lret
cmp
lahf
pop
pop
inc
movhps
mov
xchg
pop
std
cmp
or
mov
inc
mov
dec
mov
aad
lock
add
cmp
iret
jmp
cmp
push
popf
push
push
aam
sti
mov
add
jne
fdivrs
mov
dec
imul
lods
andb
and
sub
xchg
mov
popf
fsubl
addb
aaa
adc
loopne
and
cmp
movsl
pop
lds
inc
cmp
dec
xchg
xor
in
ja
mov
lahf
lock
xchg
sub
cli
mov
scas
fldl
popa
mov
or
xor
fiaddl
jge
lret
mov
sbb
and
insb
mov
out
and
mov
test
hlt
imul
xchg
enter
lods
xchg
dec
fdivs
xor
jno
jecxz,pt
pop
push
mov
or
jmp
andl
pop
pop
sub
ja
je
test
shrl
dec
inc
dec
loopne
les
adc
mov
adc
adc
sbb
loope
int3
push
jb
shlb
insb
fistps
pop
inc
lock
pop
inc
jecxz
arpl
or
jns
fisttpll
popa
sarb
mov
mov
loope
jg
cmpsb
clc
pop
jl
pushf
lds
bound
fisubs
push
out
push
xlat
jns
inc
in
and
pushl
pop
dec
sub
cmc
subl
mov
xchg
sar
jno
pop
je
adc
xchg
insb
lahf
arpl
les
lock
add
in
sbb
lods
xor
lods
dec
push
inc
lret
movl
fisubrs
mov
and
jmp
mov
sub
xor
enter
mov
mov
cltd
dec
movb
ret
pop
sub
roll
imul
jmp
dec
outsb
pop
cmpsl
sub
scas
dec
and
sub
fidivrl
push
lret
push
adc
push
addr16
dec
jae
movsl
sbb
loope
xchg
pop
fildl
push
addr16
jmp
push
outsb
xchg
and
push
mov
gs
push
adc
push
inc
mov
push
mov
mov
inc
cmp
sbb
push
dec
popf
jbe
ret
pop
xchg
loopne
ret
icebp
fldenv
add
or
popf
bound
rclb
idivb
addl
aas
loope
lret
enter
insb
or
sbbl
adc
cmc
imul
pop
adc
roll
outsl
idivl
cmp
jmp
sub
hlt
adc
and
inc
ret
mov
data16
jmp
rcl
shrb
pop
xchg
pop
jge
mov
push
push
data16
ror
inc
stc
aam
mov
push
cld
mov
and
mov
xchg
jmp
cmpsb
push
mov
lods
es
stos
mulb
add
int
mov
popa
sbb
jg
daa
sbb
cmpsb
xchg
adc
sub
fnstcw
jno
repz
mov
loope
aad
xchg
mov
cmpsl
adc
xor
jno
outsl
mov
cmp
leave
lahf
divl
cmp
mov
jmp
mov
imul
mov
dec
cmp
sub
pop
cwtl
push
inc
pop
pop
cmpb
push
aam
andl
lahf
js
mov
loop
xor
daa
add
cwtl
ret
lahf
inc
lahf
leave
inc
arpl
fiaddl
repnz
shrl
mov
enter
shr
and
jmp
in
pop
and
jno
clc
loopne,pt
arpl
sbb
imul
arpl
mov
notb
repz
add
jno
in
push
cmp
leave
push
push
jno
push
out
mov
orl
jo
sub
gs
movsb
scas
ljmp
sub
out
hlt
rol
pop
push
out
sbb
push
mov
mov
mov
jno
inc
insb
mov
adc
fstps
rorb
roll
adc
inc
adc
or
test
adc
sbb
mov
lock
stos
xor
inc
cmp
imul
js
mov
out
xchg
ret
stc
and
fildl
sahf
das
mov
lahf
sub
filds
pop
mov
lock
iret
mov
xchg
lea
pop
xor
push
mov
pop
sub
fildl
and
jecxz
cs
mov
movsl
mov
and
mov
mov
pop
inc
shl
inc
add
inc
inc
mov
xorl
pop
imul
mov
hlt
cmpsl
in
rclb
cli
mov
fwait
sub
pop
negl
test
sarb
cmpl
jb
push
test
xchg
sarb
mov
lock
cmpsb
jge
and
jnp
jle
fnstcw
jmp
cmpsl
add
jo
nop
xchg
and
repz
repz
mov
lds
std
hlt
push
jbe
adc
dec
mov
into
xor
jnp
xor
mov
aaa
fwait
in
dec
cld
mov
pop
cld
in
or
adc
adc
dec
pop
sbb
ljmp
add
or
xor
out
sbb
and
xor
sbb
jecxz
lods
aam
lret
scas
es
ja
repz
lcall
jne
xchg
jg
inc
dec
mov
mov
xlat
std
fstpt
xchg
enter
cmpsb
push
mov
mov
add
stc
push
arpl
pop
pop
out
outsl
dec
arpl
fimull
pusha
repnz
or
and
xchg
dec
sbb
cwtl
push
sub
adc
into
into
cli
xchg
dec
mov
ss
in
mov
test
xchg
push
rorb
mov
cmp
xchg
jno
jb
mov
dec
aaa
loopne
fucomp
xchg
leave
inc
jmp
push
xor
test
and
jecxz
xor
clc
lea
lds
cmpsb
sbb
mov
xchg
test
xor
cmp
and
popl
es
pmulhuw
lea
test
in
bound
cmp
adc
lret
mov
lahf
adc
ror
push
mov
add
insb
into
pop
sbb
pop
push
stos
jb
test
xchg
and
cld
mov
out
call
add
shll
pop
cwtl
inc
insl
ss
jno
lahf
into
add
jne
lods
icebp
dec
xchg
and
out
clc
es
scas
add
mov
add
fs
pop
push
xor
dec
sbb
leave
push
xor
mov
rcll
std
sub
xchg
push
shrb
sbb
cs
or
nop
fdivr
mov
dec
mov
arpl
inc
stos
pop
leave
mov
adcl
adcb
push
aas
cmp
jecxz
jge
jecxz
dec
push
sub
adc
loopne
sbb
sbb
push
shl
es
mov
push
shl
stos
adc
adc
push
outsl
fidivrl
repnz
jmp
stos
jecxz
repz
sahf
sbb
mov
push
enter
jnp
push
mov
xor
xor
inc
int3
lock
xchg
fnstsw
clc
lods
cmc
sub
lcall
jae
iret
inc
jmp
jbe
adc
xchg
push
test
push
cmc
shlb
rcrl
sbb
fistpl
jns
or
out
fcomps
sub
jle
push
xlat
je,pt
ret
ret
push
jbe
xor
mov
mov
jp
mov
mov
push
jmp
fimuls
inc
cmpsl
xchg
decb
jae
arpl
jg
aas
fists
push
xor
fldcw
fwait
adc
pop
stc
mov
stos
jnp
adc
mov
repnz
mov
out
xchg
or
inc
sbb
xor
mov
xchg
xchg
stos
dec
fstl
arpl
dec
out
scas
and
fs
push
mov
push
fwait
cmpsb
addr16
sub
test
sub
test
cmp
xor
sub
dec
fadds
sbb
loopne
ret
xchg
scas
pop
jg
sahf
pop
xor
mov
xor
xorb
add
push
sbb
in
into
aas
mov
jecxz
out
mov
sti
daa
fsub
jg
sub
lods
or
shr
jmp
dec
rcrb
xchg
cmpsb
fisttpl
popa
lahf
dec
test
inc
sahf
das
fsub
int3
pop
jmp
pop
punpckldq
xchg
jg
sbb
mov
cmpb
adc
ds
push
mov
out
insb
fiadds
aaa
xor
xor
daa
xchg
and
cmpsl
cmp
xlat
fnstsw
and
sub
mov
cmpsl
pushf
cmpsb
dec
shl
fsubl
shl
cmpsb
pop
lds
ret
xchg
aas
arpl
jg
jbe
in
dec
decb
jmp
pop
ds
in
xor
and
jl
sbb
push
incl
fs
mov
ret
sbb
and
movb
xchg
and
xlat
inc
push
add
pop
inc
jne
aas
stos
in
imul
jbe
or
push
dec
imul
pop
push
imul
stos
pop
sub
hlt
rcrb
mov
jg
jecxz
sbb
in
rorl
outsl
add
lea
aam
pop
sti
jbe
push
pop
adc
sti
inc
sbb
in
push
dec
sbb
loopne
call
out
movsb
mov
adc
aaa
or
sub
es
and
ret
xor
xor
cmp
lea
sub
das
add
push
cmp
out
hlt
jns
push
inc
in
fwait
push
pop
sbb
push
scas
cmpsb
sbb
push
jb
daa
out
inc
pushf
sub
cld
xlat
adc
sbb
movsb
popf
and
leave
jge
addr16
fnsave
push
cmp
xor
pop
out
pop
in
jle
sbb
xchg
lods
pop
mov
sbb
sbb
aam
outsl
test
adc
hlt
or
divb
pop
xchg
jbe
jecxz
je
and
repz
data16
sub
ja
ja
xchg
aas
mov
mov
mov
push
popf
daa
hlt
std
aas
psubb
in
jle
lock
sahf
repnz
sbb
adc
orb
xor
cs
add
and
lret
cmp
fsubrl
add
clc
pop
xor
mov
lea
jne
dec
into
and
xchg
in
jmp
xchg
pop
add
sahf
push
arpl
stos
shrl
xchg
loop
vpsrlq
shll
out
aad
sub
push
pop
fbstp
in
jle
imul
ja
jne
mov
mov
xchg
xor
xor
sub
mull
icebp
jge
jb
pop
into
icebp
cltd
pop
mov
xchg
clc
or
int
sub
cmpsl
and
jle
shrb
ja
pop
sub
inc
and
pop
mov
ss
fbld
imul
mov
les
icebp
popl
ret
xchg
or
or
cmc
mov
push
cmp
pop
lock
fs
dec
sub
push
pop
shll
dec
pop
nop
js
lret
insl
gs
inc
scas
mov
repz
mov
leave
in
inc
jb
adc
icebp
push
inc
jle
inc
je
aad
gs
sub
and
test
mov
gs
mov
adc
mov
adc
cmp
outsl
pop
push
or
mov
mov
cmpsb
test
or
test
mov
sub
mov
test
xor
loopne
sbb
push
fstpl
insb
adc
pusha
jle
push
mov
inc
sbb
push
dec
cwtl
dec
lods
jp
pop
sbb
or
or
mov
or
pop
sbb
adc
fst
imul
pop
mov
sub
xor
lods
and
stc
cmc
jmp
and
adc
inc
out
dec
repz
jno
mov
rcrl
cmp
add
je
popf
ret
leave
or
cmpb
sti
aad
fwait
pop
shlb
push
ficoml
jnp
nop
and
ljmp
push
inc
sub
rcll
sbb
xchg
or
jb
push
mov
sbb
cs
les
ficoms
cmp
cld
test
dec
inc
rcrl
out
hlt
jnp
sub
jl
aad
repz
jb
cmp
adc
clc
adc
lcall
push
cmp
shl
in
sbb
mov
gs
adc
aas
movb
sbb
adc
aas
aam
add
sbb
cld
inc
cmp
pop
jg
jns
push
test
xchg
or
enter
cmp
push
mov
xchg
pop
shll
mov
mov
insl
or
lcall
lret
push
in
cld
push
xchg
or
cmp
in
sub
dec
dec
pop
mov
and
xchg
or
add
jecxz
add
mov
pop
insl
pop
mov
and
in
stc
dec
data16
icebp
pop
movsl
mov
cmc
jbe
ret
cmp
and
dec
mov
ret
jae
mov
shl
je
fdivs
rol
push
arpl
jbe
or
aaa
addr16
popa
stos
stc
movsb
jmp
mov
iret
fldt
imul
xchg
bound
popa
in
addb
loopne
xor
jmp
push
add
jne
add
scas
movsl
mov
imul
pmulhuw
or
pop
sahf
mov
es
btr
enter
xor
jnp
mov
sbb
jno
pop
inc
sbb
mov
rcrb
iret
jo
into
stos
mov
fbld
adc
out
jle
das
stc
push
xor
inc
sub
or
iret
cmp
ljmp
inc
xchg
cmp
push
xchg
scas
push
xor
sbb
lods
test
or
dec
outsb
jle
sub
mov
imul
push
mov
nop
pop
xchg
mov
pop
stos
dec
lret
shll
mov
cmp
or
nop
jno
push
test
pop
in
lret
sub
sbb
cmpb
iret
sub
dec
jne
pop
xchg
ret
inc
inc
pop
repnz
jae
adc
mov
and
and
sbb
push
repnz
push
stc
jecxz
pop
sbb
lret
out
shll
mov
mov
pop
mov
xor
add
fdivl
leave
iret
lods
mov
in
mov
pop
xchg
out
aad
aad
icebp
jmp
lods
mov
jecxz
jne
inc
shrb
in
clc
das
and
adc
inc
ret
push
inc
aas
scas
jns
sub
fsubl
and
pop
test
out
movsb
adc
stos
mov
inc
mov
sbb
adc
pop
pop
inc
or
mov
bound
out
daa
pop
lahf
fwait
cmpsl
shlb
inc
mov
xchg
test
inc
mov
pop
cmp
call
add
push
push
xchg
xchg
imul
mov
dec
mov
iret
push
push
mov
scas
icebp
leave
ret
or
mov
push
outsl
and
adc
mov
adc
push
mov
ficoms
push
dec
mov
lods
cld
or
ljmp
mov
inc
dec
inc
loope
int
jp
push
addr16
leave
testl
push
lods
push
loop
mov
xchg
std
xchg
cmpsb
sub
idiv
testl
pop
xchg
inc
divl
test
xchg
cld
faddl
shll
movsb
clc
dec
mov
in
mov
out
dec
jg
push
fadd
sub
sbb
and
stos
insl
sub
ficompl
out
sbb
dec
jl
sbb
mov
adc
cmpsl
xchg
hlt
mov
cmp
das
testl
ret
shrl
loope
adc
mov
jle
cmp
xchg
fistpll
aas
jl
fcmove
or
inc
and
sub
adc
outsb
dec
fistpll
lock
mov
negl
sarb
adc
mov
jge
cmp
aam
in
iret
jp
leave
mov
mov
roll
add
mov
popa
mov
sub
pop
mov
shrb
int
stc
aas
ljmp
in
data16
cmp
ja
ljmp
cs
push
add
xlat
push
jns
inc
mov
mov
aas
push
rcl
mov
test
mov
pop
dec
cmpsb
cwtl
pop
shll
push
mov
test
sar
loopne
jo
pop
into
jecxz
imul
imul
push
push
js
loope
lods
ret
out
cmp
xchg
jns
push
out
inc
push
xor
or
mov
sub
xchg
cmpsb
xor
or
pop
lods
aam
movsb
sahf
pop
and
fisttps
std
xlat
outsl
xchg
mov
out
mov
jmp
sbb
jge
insb
or
int
pop
cmp
mov
xchg
or
addl
js
sub
repnz
roll
ds
scas
sub
out
push
cmp
ljmp
in
jno
xchg
xchg
shlb
lds
scas
sub
test
shll
repz
ret
scas
imul
xor
js
xchg
jmp
sbb
iret
dec
movsl
jp
sbb
aam
jle
test
imul
xorl
sbb
cmp
jp
push
adc
scas
scas
std
popf
push
movsl
data16
loope
mov
arpl
sbb
nop
push
jbe
cld
mov
sub
cwtl
add
adc
mov
sbb
add
aaa
xchg
rcl
in
les
mov
jge
icebp
shlb
cli
cmpb
push
insl
pushf
aaa
insb
or
sub
jg
push
dec
aaa
push
sti
jl
xor
xchg
data16
xchg
repnz
aam
xchg
mov
sub
lret
call
push
leave
imul
xchg
or
notb
xor
push
cmp
dec
test
add
dec
mov
dec
cli
in
popa
mov
mov
and
aad
cs
orb
mov
push
adc
cmpsl
call
movsb
jmp
xor
sbb
jno
jne
ret
mov
stos
mov
cmpsl
loopne
das
es
sbb
dec
sbb
mov
andb
int3
test
pop
and
xor
jle
stc
cmpsl
sub
stc
xor
xchg
jae
jae
sbb
clc
or
dec
jmp
jle
fldcw
push
cmp
inc
out
push
sub
mov
cmc
sbb
imul
shll
cmpsb
negb
cli
jno
lret
popa
int
jecxz
sub
xchg
dec
mov
lods
lret
popf
pop
pop
cmp
pop
mov
cmpsl
jl
call
cmp
cmpsb
dec
cmp
xchg
jo
sub
inc
cwtl
dec
sub
pop
xor
jns
dec
xchg
dec
jo
jae
dec
add
lods
jbe
into
test
outsl
inc
xchg
sbb
jb
aam
add
test
mov
stos
packuswb
xchg
fstpl
mov
jmp
mov
pop
jp
jnp
cmpsb
xchg
stos
insl
dec
pop
popf
or
add
jb
inc
mov
dec
cld
add
rcll
push
fldcw
leave
adc
fdivrl
sbb
mov
push
rcll
xorl
inc
xchg
xchg
outsl
in
pop
outsl
lods
sarl
out
jge
or
sarb
mov
cmp
push
xchg
mov
ret
imul
cmpsl
pop
mov
loopne
iret
add
lret
std
fsubs
aad
in
and
addr16
sarb
js
clc
fsubs
inc
popa
sub
adc
dec
mov
dec
loope
sbb
jae
push
sub
sbb
mov
and
mov
arpl
sub
and
dec
add
adc
jbe
sub
out
push
jbe
xor
pop
hlt
inc
cmp
rcrl
cmpsl
or
pop
cmpsl
push
outsl
pop
pop
js
lahf
outsb
cltd
fmulp
mov
outsl
jns
lret
rcll
add
repz
mov
fwait
jle
shlb
or
inc
xchg
jns
in
pop
xor
movsl
test
repz
incl
outsl
mov
cli
enter
pop
lock
sub
lods
adc
popf
dec
xchg
cs
sbb
orl
xor
gs
leave
sbb
xchg
cltd
xor
ss
and
mov
ljmp
shr
add
je
mov
dec
sub
or
pushf
sub
stos
mov
jbe
push
mov
lds
jge
cmpsl
scas
movsl
mov
mov
add
hlt
mov
jge
jmp
xchg
and
mov
xor
mov
sub
loopne
lock
fidivrs
jbe
mov
outsl
cmc
cwtl
cmp
shrb
out
lock
leave
sub
out
stos
sub
sbb
sbb
push
dec
and
cmp
dec
or
xor
int
xor
fcmovnb
ret
push
or
cmp
xor
cmp
mov
add
dec
jl
pop
clc
mov
lcall
push
xchg
ret
sti
cld
xchg
addr16
fldenv
ljmp
mov
lods
push
enter
or
cwtl
ret
sub
sub
fisubrl
push
sub
xor
sub
ret
sbb
jnp
dec
mov
sbb
shrb
jne
sub
fnstenv
add
xor
out
jmp
push
das
imul
hlt
outsb
lea
hlt
and
mov
jo
addr16
push
and
out
or
test
mov
rcrb
into
out
xchg
gs
push
ja
or
jp
cmp
mov
pop
lods
xchg
je
jg
cmp
lods
cmp
adc
cmp
jmp
lds
mov
add
jb
shlb
mov
mov
sbb
data16
gs
arpl
xlat
mov
pushw
jnp
psllw
decb
xor
adc
subb
jbe
arpl
jae
and
xchg
xchg
cli
sbb
add
xor
jbe
jmp
dec
dec
aad
inc
xor
in
lods
sbb
push
ss
pop
call
xchg
and
arpl
std
xchg
xchg
or
lods
outsb
fsts
mov
pop
sbb
sub
movsb
push
push
bound
pop
popa
cltd
je
add
mov
push
test
dec
adc
cmpsb
data16
xchg
mov
dec
jnp
or
loop
clc
xchg
aam
mov
insb
push
mov
daa
add
mov
add
mov
pushf
ss
inc
cmc
pop
sub
lcall
pop
push
inc
leave
mov
sub
pop
divl
outsl
lret
call
pop
jecxz
cmp
nop
loope
ss
push
add
je
std
aaa
xor
int3
icebp
push
loopne
ds
mov
mov
ficompl
mov
pop
loope
add
movsb
mul
pop
push
pop
mov
push
pop
gs
sbb
lods
jmp
adcb
add
pop
mov
shlb
adc
xor
inc
xlat
adc
test
movsb
test
hlt
sbb
mov
sub
and
mov
mov
add
jle
addr16
out
clc
inc
push
push
imul
sbb
pop
ljmpw
ror
inc
push
gs
cmc
mov
loopne
das
and
mov
pop
pusha
stos
adc
sbb
mov
sar
out
cmc
push
mov
fadds
cltd
pop
std
sbb
jmp
je
dec
mov
or
dec
leave
ja
push
aas
lds
push
mov
jmp
psubd
push
pusha
bound
mov
clc
add
push
lds
sub
dec
into
mov
mov
lds
xchg
enter
aas
addr16
lahf
inc
pop
test
rcrl
jmp
jns
mov
pop
arpl
xchg
mov
adc
stos
sbb
xchg
les
dec
mul
iret
dec
jge
sahf
add
fwait
xchg
outsl
xchg
rcl
stos
ljmp
je
and
and
incb
add
adc
adc
aas
data16
repz
mov
test
in
add
cli
sub
test
iret
fstpl
sbb
test
pop
and
fsubrs
decb
jle
adc
ret
pop
stos
adc
add
push
push
ret
call
jg
ret
pop
fisttps
mov
sarb
dec
leave
push
movsl
scas
sbb
outsl
add
push
pop
sub
sub
dec
sbb
sbb
pop
insb
sahf
mov
scas
mov
adc
adcb
cwtl
jecxz
jo
in
jp
lds
pop
lods
xchg
push
sbb
sub
cs
xor
xchg
mov
sub
mov
out
push
mov
sarb
jne
clc
aas
sub
adc
sub
pop
jns
stc
push
sbb
icebp
sbb
cmp
enter
cmpsb
mov
mov
popf
andl
mov
stos
aas
es
fcmovne
pop
jge
mov
movsl
notl
pop
sub
cmp
and
sub
jae
out
outsb
add
aaa
inc
dec
vmwrite
js
pop
shl
or
pop
add
pop
lods
sub
lods
mov
pop
sbb
dec
testb
es
sub
ja
lcall
mov
adc
dec
mov
loopne
scas
stos
je
and
enter
cmp
sub
popf
mov
sbb
enter
push
xchg
div
jae
or
outsb
movsl
inc
xor
push
divl
mov
or
cltd
cli
mov
push
nop
ds
jg
aad
popa
fwait
cmpsb
repnz
mov
push
addr16
xor
arpl
jae
loope
pushf
pop
inc
mov
adc
ficomps
repnz
bnd
addb
or
fisubs
xor
lcall
insb
ljmp
xchg
cmc
lea
nop
or
pop
dec
push
out
push
cmp
and
xchg
mov
jo
push
aam
fistpl
dec
hlt
lret
sub
xor
fcmovb
mov
jle
fstps
jns
gs
mov
mov
enter
in
inc
mov
jno
dec
int
lds
iret
xlat
xchg
aad
xchg
pop
lods
ficoml
ss
imul
test
imul
cmp
mov
mov
sbb
pushf
mov
jg
adc
or
bound
or
push
add
addr16
push
lds
xchg
mov
add
adc
in
arpl
adc
loope
mov
pop
jge
pop
xchg
stos
fadd
pop
xor
mov
stos
push
sub
dec
inc
mov
out
dec
clc
repz
data16
mov
mov
mov
fs
push
push
push
inc
mov
mov
mov
or
iret
jge
out
jge
sub
aad
jns
das
xchg
ret
push
pusha
xchg
cmp
leave
ljmp
fstl
pop
sub
aas
aas
xorb
adc
pushf
popa
sbb
faddp
add
xor
sbbb
repnz
mov
jb
and
xchg
sbb
outsl
xchg
xchg
hlt
testb
mov
jae
pop
imul
pop
js
pop
flds
sbb
cmp
or
cmovge
mov
inc
jo
jbe
in
jmp
addr16
jo
stos
push
xor
inc
xlat
cmpsl
lea
pushf
cmp
in
cmp
sbb
ror
mov
mov
mov
ljmp
jp
leave
cmp
push
or
into
pop
inc
cmp
sbb
aad
mov
cli
add
push
outsb
or
aas
lock
jne
xchg
xlat
test
pop
xchg
push
pop
mov
xorb
mov
add
cmc
sbb
cmovp
nop
push
xor
mov
int
test
push
mov
js
xchg
cmp
sub
cld
bound
pushf
jmp
sub
jnp
or
cmp
sub
lods
cmp
popa
dec
mov
mov
jecxz
div
mov
stos
dec
add
inc
in
mov
mov
cmpsb
lods
or
jle
lock
xchg
adc
jle
or
mov
daa
cmpb
sbb
add
ja
or
aaa
rorb
lds
cmp
ret
jo
das
xor
sbb
push
jle
je
xor
lret
mov
xchg
xchg
cmp
leave
aam
pop
mov
jne
push
aam
in
pop
ljmp
xchg
scas
hlt
cmc
pop
xchg
orl
lds
xor
jno
stos
call
lds
fwait
inc
dec
jae
cmp
or
and
or
jno
lods
xchg
dec
jne
jecxz
cmp
faddl
pop
imul
mov
aad
ficoms
enter
dec
pop
mov
sub
mov
std
lods
mov
shlb
mov
fdivs
bound
adc
adc
mov
loope
push
adc
push
and
out
add
xchg
fildl
sub
push
sbb
fcomps
jo,pn
repz
ljmp
sbb
shll
inc
shr
push
jle
mov
push
repnz
adc
mov
pop
adc
mov
xchg
pop
mov
lahf
push
sahf
movsl
pop
js
jmp
push
dec
mov
jmp
repz
inc
xchg
cld
xchg
mov
ror
jle
xor
sahf
das
xor
imul
dec
cmp
xor
lret
mov
sbb
xchg
inc
aam
in
push
test
xor
int3
or
punpckhdq
sub
adc
adc
fstps
push
faddp
adc
jnp
addb
stos
or
pop
clc
push
ljmp
sbb
cmp
jnp
aas
nop
dec
inc
adc
aad
xor
shlb
add
jne
pusha
dec
xchg
or
cwtl
rorb
insl
out
mov
xlat
push
fcoms
js
xchg
or
jae
dec
fsubrs
push
push
xor
icebp
in
xchg
inc
inc
clc
clc
fstps
andl
mov
jmp
test
xchg
shll
or
fists
insb
into
jmp
jp
xor
pop
jo
clc
xchg
outsl
out
stos
xchg
jns
cltd
ficoml
mov
sbb
mov
jecxz
sub
arpl
js
mov
add
adc
cmp
ret
mov
push
scas
dec
in
insl
scas
and
xchg
inc
inc
fildll
or
or
mov
stc
dec
fsubrl
test
dec
call
mov
js
ds
nop
push
repz
and
jno
and
test
xchg
inc
shlb
lcall
mov
je
xor
add
dec
pop
imul
or
rcrb
movsl
repz
lods
repz
ja
push
dec
add
das
push
test
pusha
pushf
out
lret
mov
andl
fisubrs
lock
jbe
outsb
dec
sahf
xchg
jno
imul
shlb
mov
pop
cmp
inc
jnp
adc
sti
sbb
dec
addl
fcomps
cmp
push
push
jno
rcrl
pop
jb
jb
xor
jbe
imul
lock
xor
loopne
loop
mov
mov
fsubrl
cmpl
ret
and
or
lahf
movsb
sti
outsl
movsl
fldenv
pop
repnz
pop
adc
into
cs
rcrb
xor
addr16
dec
mov
push
dec
jmp
xchg
popa
mov
and
dec
lods
cmp
push
lods
push
mov
test
sbb
xor
repnz
nop
call
lds
xchg
xor
lds
inc
imull
or
out
xor
lods
incb
jns
imul
push
pop
lods
out
repz
dec
nop
loop
stos
push
xor
mov
sbb
popf
clc
repz
adc
out
daa
outsl
lcall
mov
sbb
fidivs
std
in
popf
in
or
mov
mov
inc
test
lods
cmc
icebp
movsb
movsb
mov
cmp
aaa
mov
aam
pop
push
push
dec
dec
or
jnp
adc
push
pusha
cmp
and
inc
adc
mov
push
xchg
call
xchg
int
sub
sub
adc
lahf
pop
push
test
mov
xor
pop
xlat
push
stos
jb
sub
bound
aam
cmp
lods
fisubs
fistpl
jns
punpcklwd
loopne
bound
xchg
dec
mov
frstor
aad
fisubrl
in
pop
nop
addr16
leave
mov
hlt
adc
mov
rcrb
dec
int
jae
shrb
adc
add
jae
lahf
in
inc
jb
xchg
bound
pop
es
rcll
callw
pop
sbb
inc
mov
pop
mov
scas
mov
jge
stos
lods
xor
int
pop
or
dec
test
out
lcall
add
adc
cwtl
lods
cmp
inc
rcl
xor
and
pop
stc
pop
fidivl
xchg
push
adc
cld
mov
push
das
xor
repnz
cld
addb
call
pop
cmp
pop
adc
cmp
lea
ja
mov
idivl
pop
push
in
loopne
rol
pop
std
rorl
out
pop
fdivs
or
pop
jp
xor
std
mov
fidivs
adc
je
jne
jo
mov
ds
fistpll
cmc
mov
inc
test
les
inc
adc
jnp
jns
mov
std
ljmp
push
xchg
push
hlt
adc
xchg
inc
outsb
or
mov
add
mov
inc
sti
add
and
push
ja
jp
mov
or
movsb
out
add
jbe
xchg
pop
mov
inc
mov
test
jbe
ror
mov
adc
fnstenv
xor
and
popa
dec
fidivs
sbbb
ljmp
faddp
ljmp
rclb
stc
aam
mov
xorb
fstpt
or
jne
aas
xor
scas
jge
adc
add
lret
jbe
push
ret
mov
mov
insb
mov
mov
pop
call
ret
test
ret
mov
and
add
sahf
xchg
mov
xchg
es
pop
in
mov
mov
icebp
inc
adc
lds
fldl2e
loop
mov
sahf
xor
cwtl
test
dec
test
adc
xchg
dec
cmp
sbb
cwtl
mov
std
cmp
dec
sti
js
inc
or
cltd
cli
popf
popf
inc
cltd
aaa
incw
sbb
lods
or
testl
cli
pusha
add
push
jbe
adc
and
cmpsb
mov
fwait
cmp
test
and
ret
jbe
leave
jno
in
push
adcl
testl
aad
fistps
xchg
jbe
mov
jo
out
sbb
pop
mov
rcrl
adc
mov
icebp
loop
lahf
in
push
add
jo
repnz
inc
loop
sti
mov
cmp
pop
mov
ljmp
push
cmpsl
out
adc
jp
dec
call
mov
ja
sub
rsqrtps
or
mov
jmp
cmp
pusha
and
push
ret
decb
sub
daa
mov
addb
push
inc
outsb
ds
or
jg
xor
aad
sbb
dec
sbb
aad
jmp
lret
cmc
das
mov
pop
stc
push
jle
rclb
popa
mov
movsl
mov
pop
cmp
sti
inc
rolb
ljmp
daa
rcrl
ljmp
mov
mov
jb
push
ret
ret
dec
and
pusha
jge
popf
rcl
adc
insl
xor
test
loop
icebp
pushf
outsb
xor
sub
inc
andl
dec
or
pop
mov
aas
pop
pop
mov
add
inc
lahf
and
dec
setge
je
adc
inc
dec
jle
scas
xor
lret
shrb
jecxz
shlb
ret
add
xchg
pop
insl
mov
add
sbb
lea
mov
loopne
popa
lahf
pushf
dec
sub
push
sub
add
mov
and
rcrl
ljmp
ds
xchg
gs
aam
mov
pop
inc
sbb
mov
sbb
int3
jl
fcoms
ret
popa
lahf
xchg
mov
inc
imul
xchg
out
outsl
sub
fs
iret
add
fnsave
xchg
or
loopne
outsl
mov
jb
sti
push
or
xchg
mov
mov
push
ds
in
lahf
adc
or
adc
xchg
xchg
fisttpll
sub
loope
imul
and
add
add
ret
mov
inc
mov
jmp
xor
xor
sub
mov
xchg
cmp
or
push
repnz
adc
mov
in
test
lahf
es
jno
adc
stos
leave
aas
adc
mov
push
ds
nop
cltd
int
movups
rorb
or
xor
aad
repz
in
inc
in
fwait
xor
or
dec
dec
cld
das
movsl
mov
iret
fwait
push
xchg
mov
ljmp
adc
test
pushf
imull
adc
sub
fcomps
jne
or
add
mov
test
nop
cwtl
movsl
pop
xchg
das
mov
jno
inc
dec
dec
add
pop
pop
sti
push
imul
testl
mov
nop
push
push
mov
cli
xorl
dec
cmp
sub
nop
aad
push
lds
ret
insl
xchg
shll
test
xor
sub
cmpsl
inc
pop
imul
xor
push
cwtl
fs
mov
sti
in
into
pop
sub
loope
pop
pop
cmp
lret
imul
jmp
ja
xchg
orl
lret
out
xchg
jle
mov
pop
ds
je
test
mov
or
call
enter
ds
mov
outsb
fldl
mov
mov
outsb
xchg
mov
sahf
mov
addr16
or
jae
pushf
jmp
call
cmpl
or
or
push
out
sub
fstpt
push
push
cltd
ret
imul
push
xchg
lret
jp
mov
pop
add
sbbl
mov
jne
data16
or
enter
mov
lods
cli
lods
sbb
inc
out
fsubr
sbb
repnz
lcall
lahf
pop
inc
test
cld
dec
xor
int
push
add
sti
push
adc
dec
push
notb
imul
jp
sub
mov
leave
outsb
jne
aaa
jp
inc
lods
cmp
icebp
jmp
add
mov
orb
call
inc
mov
push
xchg
repnz
xor
cs
icebp
js
xchg
das
je
cmp
dec
iret
lret
ret
incl
mov
adc
inc
ds
sbb
iret
xor
cmp
adc
sbb
mov
inc
mov
adc
cmc
or
xor
xor
xchg
inc
pop
pop
jae
cmpl
in
mov
dec
loop
imul
or
js
adc
push
mov
subl
enter
in
push
and
pop
shrb
sarl
cmc
shrl
arpl
mov
sub
add
adc
call
ss
dec
xchg
add
add
and
mov
enter
bnd
ss
arpl
xchg
cmpsl
jp
dec
test
lret
xchg
cwtl
push
and
aam
ss
loopne
mov
adc
inc
hlt
loopne
fisttpl
call
lock
pop
jecxz
bswap
xor
fwait
push
adc
fistpll
incl
inc
mov
je
cmp
leave
aam
jecxz
mov
sbb
stc
mov
and
movsb
aam
pushf
xor
xchg
pop
fisttps
and
inc
sbb
iret
cltd
js
cltd
push
stos
and
xchg
mov
decl
les
in
loop
testl
adc
adc
test
test
clc
outsb
arpl
mov
leave
outsl
repnz
xchg
jb
mov
add
fsubr
imul
or
loope
jl
pop
pop
in
jo
pop
xchg
xor
mov
loopne
int3
push
rcrl
and
inc
push
scas
es
pop
arpl
jg
arpl
test
mov
int
dec
add
jp
in
addb
mov
push
push
push
inc
call
push
scas
cmp
pop
ret
adcb
or
ja
js
in
jae
pop
lds
jne
fbld
fwait
in
pop
test
jnp,pn
jle
jp
pop
les
add
sbb
lock
in
push
stos
cmpsl
inc
divb
inc
je
xor
xchg
mov
pop
mov
jns
add
xor
ud1
mov
ss
xor
mov
mov
mov
jnp
jbe
cmovne
shr
mov
cmpsl
js
mov
mov
push
cmp
das
repz
outsb
rcl
daa
loop
mov
nop
add
dec
add
xlat
insl
xor
pop
push
iret
inc
cmpsl
sub
sub
sarb
repz
pop
or
xor
in
and
push
add
xchg
movsl
xchg
mov
jp
fwait
mov
mov
cmpb
cmp
in
jle
mov
lcall
cwtl
pop
and
mov
hlt
mov
dec
in
lahf
jg
dec
inc
repnz
mov
push
sahf
push
test
addr16
notl
xchg
gs
repnz
add
cwtl
stc
jg
push
jge
das
inc
and
xchg
mov
jle
push
and
dec
xchg
mov
cmp
stos
and
fcoms
out
pusha
roll
add
adc
cmp
inc
sarb
mov
aas
sbb
ds
dec
roll
mov
fdivs
cmpsb
add
adcl
pusha
je
ljmp
nop
add
push
int
adc
lcall
jp
sub
adc
test
push
in
xor
cmc
push
pop
das
repz
or
jg
adc
mov
mov
fidivrs
pop
push
aad
movsb
mov
jbe
ss
xchg
add
dec
mov
jnp
sbb
imul
orb
popf
sahf
add
repnz
js
mov
nop
and
bound
cwtl
dec
lds
stc
cmp
aas
mov
or
mov
ret
mov
mov
aaa
aaa
in
daa
xor
sbb
scas
add
test
orl
push
or
ret
sub
mov
xor
pop
jmp
mov
enter
fdivl
jb
mov
scas
iret
dec
jo
sbb
pop
adc
mov
jmp
insb
sub
dec
in
xchg
xchg
pop
ret
aaa
outsl
into
mov
jno
orl
dec
loope
shll
scas
es
pop
aas
movsl
cmpsl
andl
push
out
stc
in
rcl
popf
aam
push
mov
sahf
or
cmc
rcrb
lock
in
fmull
test
push
lods
imulb
push
jge
mov
cltd
repz
shl
xor
test
mov
mov
pop
and
stc
je
popf
and
loope
and
stos
arpl
pop
rolb
test
scas
iret
jno
stc
stc
jle
das
loopne
test
push
pop
jmp
sarb
andl
shll
push
push
push
mov
add
sbb
cwtl
scas
je
xor
inc
mov
mov
into
test
out
pop
icebp
test
leave
pop
mov
lcall
push
daa
cltd
dec
aas
loope
test
out
push
mov
outsl
in
push
xchg
popf
lea
loop
enter
fst
shrb
es
inc
or
jne
decb
pop
int3
scas
or
cli
aaa
push
inc
pusha
incl
sbb
cld
int
std
jl
sbb
mov
imul
popf
fnstsw
pushf
sbb
andl
fwait
push
dec
mov
xor
xor
pop
and
jae
and
out
add
mov
xchg
pop
ds
mov
outsb
shl
jae
outsb
movsb
test
pop
nopl
out
add
insl
or
push
gs
cli
jp
movsl
pop
out
idivb
xor
loopne
insl
int
dec
jns
ror
imull
adc
fwait
pusha
sahf
adcb
adc
shrl
in
pop
xchg
mov
daa
inc
xchg
push
pop
lods
pop
movsb
std
aaa
emms
xchg
mov
jbe
enter
out
sti
adc
fldcw
sahf
insl
inc
lret
jle
clc
xor
inc
xchg
rcr
push
push
sbb
push
xchg
mov
loope
mov
jge
ret
add
outsb
orl
fiaddl
imull
mov
xchg
push
rolb
test
dec
prefetcht1
test
adc
repz
test
pop
cmc
push
in
faddp
repnz
fwait
cmp
jne
aas
jnp
insl
imul
cli
mov
sbb
into
ds
sbb
scas
jno
stos
mov
rcrb
dec
pop
dec
dec
jnp
stos
xor
daa
mov
and
jecxz
ret
jbe
and
in
shll
cltd
fiaddl
ret
mov
fcoms
pop
pop
icebp
pop
and
and
mov
sbb
push
sub
sub
jp
sbb
xor
in
call
cmp
int3
fidivs
cmp
jnp
iret
xor
fdivl
lcall
inc
jns,pt
mov
jge
mov
scas
out
subl
and
mov
popa
jg
fcomps
fiadds
add
mov
or
xchg
adc
inc
and
aad
les
cmpl
add
sbb
mov
repnz
ss
dec
mov
push
outsl
scas
mov
cvttps2pi
orb
dec
notl
lds
out
ja
ss
aaa
pop
ror
cmp
mov
std
das
adc
adc
or
push
mov
pop
mov
xor
xchg
imul
add
push
sbb
jg
xor
and
dec
adc
inc
and
iret
pop
fistpll
jle
xor
sbb
add
ret
fs
ret
add
into
cmpb
lock
inc
mov
cmp
mov
hlt
aas
sbb
jae
push
out
dec
jbe
xor
stos
xchg
enter
ljmp
mov
cmp
pop
rorb
outsl
clc
mov
fisttps
inc
out
jle
xor
stos
jmp
mov
stos
aas
sbb
popa
dec
xchg
cmpsb
arpl
loopne
shll
gs
adc
ljmp
mov
mov
iret
or
mov
dec
shl
add
cltd
out
cmc
push
inc
testl
cs
decb
out
push
fisubs
mov
and
nop
or
idiv
cmp
negl
or
pop
movsb
push
cmp
idivb
mov
enter
dec
es
sub
scas
cmpsl
repnz
ficoml
fwait
jecxz
shl
xchg
lods
pop
push
push
xchg
data16
fs
clc
add
cs
movsl
xchg
int
fnstenv
inc
push
mov
and
in
mov
xchg
scas
dec
nop
fbld
jne
jns
lcall
enter
ret
mov
bound
cmp
dec
push
shlb
loopne
sub
test
dec
loopne
or
repnz
sbbl
push
xor
ds
sub
stc
push
jo
fs
mov
mov
mov
stc
mov
daa
xor
adc
sbb
mov
enter
lret
add
cltd
pusha
cld
fldl
mov
sets
lds
adc
test
xchg
sub
add
dec
les
add
aam
ja
add
mov
cmp
jmp
mov
add
xchg
and
stos
mov
sbb
ficoms
mov
mov
xchg
or
inc
idivb
cli
cmp
imul
popf
test
lcall
push
insl
mov
nop
inc
jmp
lret
insl
subb
js
not
mov
out
icebp
xor
pop
and
aas
sub
and
inc
leave
cmp
pop
fucomp
call
pop
xchg
xchg
bound
hlt
sbb
or
cli
cmp
movsb
cli
mov
test
or
mov
xchg
idivb
fnstsw
inc
test
mov
fwait
inc
adc
lret
mov
dec
xchg
jp
sub
sbb
movsb
mov
push
das
and
popa
add
sti
adc
adc
test
enter
pop
jp
pop
popa
dec
lahf
jge
fwait
adc
scas
push
insb
call
sbb
aad
and
mov
xchg
mov
mov
pop
pop
loopne
add
push
push
cmp
bound
cli
mov
mov
fwait
add
gs
lcall
mov
jp
loope
xor
push
hlt
loopne
adc
test
mov
aaa
pop
jo
shll
lahf
ljmp
movsb
out
notb
dec
cld
mov
pop
fs
in
stos
jae
in
fadd
imul
cmpsb
mov
hlt
repnz
fnstsw
and
adc
mov
cmpsl
imul
mov
pop
mull
inc
add
mov
xor
mov
rorb
loop
loopne
int
inc
cmc
pop
jg
cld
stos
push
icebp
mov
cli
cmp
pop
xchg
jecxz
cmp
cmpsb
arpl
push
dec
icebp
pushf
jge
inc
fmull
push
stos
adc
ret
jae
mov
add
mov
inc
pop
lods
jb
pop
repnz
mov
mov
mov
add
int
sahf
out
pop
mov
pop
jne
pop
ds
jns
and
ret
or
arpl
fcoml
push
cmp
or
loop
data16
adc
dec
cmp
sub
iret
in
pusha
add
sub
adc
adc
mov
das
pop
mov
mov
ss
or
xor
fwait
mov
test
sub
fwait
and
data16
out
cmp
dec
mov
lcall
aad
jp
les
add
in
xchg
fst
mov
xor
mov
push
or
idivb
mov
jge
fnstsw
and
stc
inc
cld
mov
std
sti
push
adc
dec
mov
mov
inc
jp
int
lods
fidivl
addr16
mov
lahf
pop
fs
push
add
and
adc
mov
jl
xchg
sub
icebp
mov
aaa
sbb
xchg
icebp
inc
xor
push
stos
add
loopne
stos
push
xlat
add
push
subl
cmp
push
xchg
xchg
stc
dec
out
inc
sbb
test
mov
push
jmp
adc
loope
jp
aam
pop
xchg
rolb
jmp
mov
ja
pop
mov
scas
mov
or
xor
icebp
jmp
or
xchg
push
mov
mov
rcll
jns
add
inc
fstps
popa
or
cmc
pop
iret
sbb
movsl
mov
mov
lods
daa
sub
cli
or
loope
mov
xchg
std
fistps
xchg
fsts
sbb
or
push
hlt
xor
sarl
mov
and
jnp
adc
lahf
popa
ss
xor
add
and
push
jae
or
testl
mov
loopne
xor
fisubl
mov
stos
mov
or
add
mov
lcall
cli
lcall
negl
lock
jle
mov
add
xor
lahf
cmp
or
insb
sahf
or
fimull
lahf
add
iret
sbb
repz
pop
pop
mov
adc
mov
fsubr
enter
add
shll
in
jge
icebp
xchg
sti
shrl
add
or
loop
mov
mov
and
adc
dec
ss
aaa
cltd
add
test
adc
xor
jle
mov
adc
cs
test
dec
sub
out
test
ficompl
or
adc
psllw
mov
cmp
lahf
lret
sti
mov
call
lods
movsl
call
loopne
add
pushf
in
sti
fsubs
pop
push
stos
je
adc
sub
sub
dec
sbb
call
icebp
push
std
test
add
jo
fwait
and
add
imul
imul
jno
outsl
pop
mov
xchg
push
pop
adc
mov
out
mov
mov
jmp
push
and
xchg
je
dec
xor
aad
pusha
lock
mov
mov
mov
push
fnstenv
rcll
and
lret
cs
std
mov
sti
inc
push
sbb
jg
mov
xor
popf
mov
sbb
sub
iret
shr
add
popa
adc
adc
int
add
push
test
inc
jno
fs
sahf
psubd
mov
xor
mov
sub
mov
pop
in
push
aaa
sub
inc
aaa
nop
call
icebp
push
adc
in
pop
lcall
pop
test
mov
or
loop
sbb
cltd
cli
jmp
mov
inc
rcrl
and
sbb
negl
jnp
pusha
mov
sbb
fistpl
fildl
or
mov
or
popa
adc
or
scas
sub
orb
dec
sub
jbe
mov
mov
push
inc
outsb
mov
inc
cli
pop
cmp
das
mov
fnsave
imul
aas
leave
sbb
cltd
ja
js
sbb
shll
mov
shlb
pushf
icebp
push
or
je
popa
aas
add
sbb
ljmp
es
mov
lahf
mov
movsl
fdivr
sbb
pusha
dec
push
xchg
jmp
imul
movsb
sub
mov
mov
mov
loopne
cmp
rorb
cmp
push
daa
lret
cmp
aad
out
nop
jge
fst
add
xchg
popa
mov
fstpt
clc
pop
into
inc
mov
xor
shrb
jo
shrb
jecxz
push
pop
mov
mov
aad
cmp
pop
hlt
ficoms
inc
mov
lahf
dec
xchg
loop
inc
lods
gs
mov
xchg
fucomp
movsb
cmp
jo
loopne
jns
test
aad
cmpsb
stos
in
jl
xchg
mov
mov
shll
lea
mov
addr16
int
repz
in
mov
jecxz
dec
stos
inc
mov
and
cmpsl
inc
adc
jne
push
inc
xchg
sbb
stos
out
in
sbb
pop
pop
pop
push
sub
movsl
call
cld
mov
cmp
ds
movsb
das
int
xchg
jmp
xor
inc
xor
ss
loope
mov
sbbb
jns
cmpsl
push
aam
jmp
mov
xchg
les
push
movl
mov
repz
outsb
rorl
xchg
mov
xor
shrl
test
add
dec
insl
or
fwait
push
or
stos
push
jnp
popa
imul
or
xchg
mov
xor
xchg
test
sub
add
lret
sbb
adc
push
mov
insl
pop
aad
push
mov
lods
jnp
divl
mov
pop
into
mov
xchg
hlt
mov
xchg
clc
push
es
inc
pop
mov
lcall
in
insb
test
mov
ftst
lret
adc
fst
jg
enter
aaa
and
arpl
stos
and
in
ret
mov
mov
js
mov
shr
in
fbstp
pop
rol
js
push
mov
jne
imul
data16
jnp
lret
fisttps
ss
fs
adc
lods
insl
lea
sbb
mov
test
mov
push
data16
fldcw
xor
lcall
pop
pop
inc
or
rcr
out
leave
enter
cli
imul
mov
repnz
call
cmp
adc
sbb
insb
inc
fnstenv
bound
dec
sbb
sbb
xor
mov
xchg
loopne
adc
fcomip
mov
mov
cmp
das
dec
out
fsubp
sar
dec
inc
xor
xchg
leave
fldcw
add
cmpsb
push
inc
sub
outsl
ss
add
hlt
add
decl
mov
jo
mov
xor
xchg
and
test
enter
repz
mov
ja
dec
xchg
sti
mov
shrb
sub
cmp
pop
xchg
stc
gs
mov
mov
insb
dec
xor
add
push
loop
push
cld
mov
cmpsl
scas
aad
xchg
add
xlat
lds
cmp
push
mov
add
fsubrp
dec
data16
iret
pop
in
mov
and
fcmovb
filds
sbb
lcall
js
or
mov
sub
in
inc
xchg
shlb
fidivl
jnp
out
loopne
rolb
lahf
or
lock
int3
dec
pop
sub
jnp
xchg
jns
mov
pop
mov
mov
xlat
xchg
xchg
scas
xor
jb
dec
idivl
pop
xor
xchg
xchg
mov
std
pop
shlb
inc
jne
stc
fprem1
jg
mov
or
sbb
pop
sub
jg
lea
mov
xor
ds
nop
mov
popf
popa
jl
stos
cwtl
xchg
subb
test
out
xor
sti
dec
andl
lods
orl
lods
cwtl
rcr
xchg
mov
call
imul
shrl
xor
jnp
pop
adc
xorb
cmp
iret
sbb
cmp
leave
push
lret
cmp
pushf
xchg
xor
pop
sub
push
scas
and
inc
loop
jmp
pushf
mov
and
loop
pop
pop
pop
insl
jge
jle
dec
lret
loop
adc
stc
or
lock
aaa
xor
inc
xor
leave
sub
mov
leave
mov
rolb
stos
shrl
shrl
pop
mov
pop
and
ret
pop
push
cmp
dec
in
insb
notb
push
stos
cmpsb
add
sahf
popf
sti
jl
push
pop
negl
xor
push
out
pusha
jns
aaa
jmp
or
mov
add
and
pminub
xor
jnp
push
cltd
mov
jne
push
enter
mov
lock
out
mov
sbb
or
hlt
stc
mov
notb
xor
test
insl
xor
addr16
loopne
mov
jl
ficompl
pop
inc
adc
mov
testl
jp,pn
mov
sbb
mov
mov
push
pop
mov
fildl
popf
xor
enter
lret
dec
enter
xor
sti
inc
ror
mov
adc
repz
cmp
adc
mov
arpl
sbb
or
imull
ret
push
inc
ret
test
cmc
or
pop
xor
push
push
xchg
inc
imul
stos
inc
rolb
repz
rcr
into
scas
cltd
aaa
inc
push
push
imul
das
mov
inc
xor
push
test
jne
push
and
mov
jnp
test
inc
adc
stos
push
mov
cmpsl
xlat
dec
stc
cmp
add
xchg
test
andl
and
xor
xchg
loopne
and
data16
js
lods
insb
add
xchg
xor
stos
outsl
inc
fldenv
ja
imulb
or
jl
lretw
rorb
sbb
orl
popa
and
fnstsw
and
and
or
mov
inc
lock
rcr
pop
push
int
add
sub
jno
mov
repz
push
jae
into
pop
pop
mov
out
mov
dec
adc
dec
scas
jg
xchg
cltd
aas
cmp
mov
shl
cmp
push
dec
jno
lret
push
outsl
pop
addb
mov
mov
and
push
in
cmp
sbbl
and
jae
xchg
shl
sbb
fdiv
test
jg
mov
pushf
std
jl
aam
repnz
repz
jmp
inc
jnp
cs
dec
sub
cmpb
pop
subl
mov
sub
jae
sti
in
cmc
mov
movsl
push
fldl
jno
pop
xchg
outsb
rolb
imul
jp
cli
jnp
jbe
mov
js
in
adc
pminsw
mov
enter
xchg
cmp
and
test
shll
or
addr16
ds
out
sbb
aas
mov
push
jmp
rcrl
cmp
ss
jne
aam
jle
arpl
hlt
mov
xchg
push
inc
pop
pop
dec
test
adc
sbb
test
popa
and
or
cmc
out
pushf
stc
sarb
das
sbb
or
mov
jb
sub
data16
sub
imulb
sub
pusha
push
or
adc
roll
adc
sbb
add
push
aad
das
nop
adc
cmp
jmp
pop
imul
lret
dec
add
popa
mov
sbb
mov
xchg
inc
in
dec
call
lcall
iret
adc
jecxz
inc
cwtl
je
repz
out
fisubl
pop
jae
aad
xor
dec
adc
and
mov
sbb
sbb
sub
cwtl
jge
inc
inc
mov
adc
jne
aaa
adcb
cmc
out
push
mov
cmpsl
jnp
add
repz
repz
sti
and
cwtl
jo
call
pop
push
inc
hlt
sbb
add
cli
mov
and
ret
repz
add
insb
outsb
or
jb
cmovo
fwait
test
inc
ja
frstor
pushf
jmp
mov
int3
mul
fxch
stos
repz
ja
ds
loop
mov
push
xchg
std
pop
pop
xor
jl
inc
pop
test
ja
mov
add
dec
aad
sbb
stos
mov
push
stc
inc
in
cli
fcomip
and
mov
mov
xor
fstl
sbb
dec
mov
sbb
pop
iret
insl
cmp
dec
icebp
jecxz
stc
sbb
dec
int
mov
imul
mov
lcall
mov
repz
int3
adc
popf
lds
xchg
push
cmp
mov
mov
mov
or
or
mov
sub
es
hlt
out
clc
stos
stos
add
lcall
adc
sbb
jmp
xchg
jge
lret
add
call
push
and
outsb
mov
test
in
cld
lods
cmp
mov
adc
push
jo
test
pop
cmp
add
mov
push
jp
push
dec
ljmp
adc
cs
mov
dec
ja
dec
outsl
leave
cmp
into
aaa
in
stc
js
mov
int
jnp
pop
sti
insb
pop
hlt
ja
ret
mov
mov
mov
push
dec
push
addr16
aaa
xchg
loope
jb
sub
test
fimuls
je
add
ret
push
jecxz
repnz
mov
pop
pop
enter
xchg
mov
gs
fistpll
mov
aam
aam
mov
sbb
sbb
in
push
mov
repnz
cld
pop
dec
mov
cwtl
or
push
inc
aad
pusha
lret
clc
cld
clc
scas
push
add
aas
mov
inc
test
in
inc
sbbb
pushf
and
hlt
out
addb
cmc
lods
ret
sub
imul
xchg
adc
xor
mov
mov
xor
or
xor
iret
pop
popl
fucomp
xor
jbe
hlt
inc
loope
icebp
popa
out
dec
cwtl
xchg
pop
sbb
adc
mov
in
inc
sub
adc
cmp
test
je
add
and
inc
and
rclb
int3
repz
cmpsl
inc
ret
adc
xor
cwtl
jge
icebp
sbb
stc
and
lds
mov
pop
sar
push
bound
add
mov
cmp
mov
popf
pusha
xchg
arpl
dec
popa
mov
jle
cltd
movb
inc
jbe
dec
popa
or
nop
mov
push
pop
shrb
lret
or
neg
sbb
std
das
je
fcmovnu
clc
cmp
mov
lds
out
imul
jo
mov
daa
sbb
lret
push
mov
add
dec
xor
xor
mov
aad
inc
leave
and
aaa
arpl
loopne
std
inc
and
pushf
mov
das
repnz
mov
sbb
add
mov
pop
pushf
cmp
or
xlat
or
xchg
dec
ss
push
lock
fcoms
fidivs
mov
lock
push
jl
aaa
adc
xchg
pusha
mov
sbb
sbb
bnd
jnp
pop
cmp
jl
insb
dec
inc
push
test
repz
add
sub
sub
loop
jp
pop
sub
and
pop
int3
adc
scas
lea
push
ret
lret
in
cli
jae
push
sti
cmpsb
jns
xchg
mov
push
push
inc
pop
pop
stos
dec
scas
sub
sub
data16
sti
lcall
push
inc
xor
cmp
test
test
xchg
pop
cli
clc
sub
jecxz
jp
add
xchg
psllq
or
xchg
js
pop
jle
adc
jne
mov
mov
jg
sahf
xchg
dec
push
imul
adc
cld
outsb
insl
imul
pop
xor
test
std
xchg
pusha
data16
cld
movsl
roll
mov
dec
fbld
mov
jo
jo
xchg
add
sarb
mov
add
sbb
push
xchg
push
insb
aaa
dec
dec
imul
in
mov
jne
pop
aam
xchg
jmp
jecxz
inc
repz
pushf
or
add
es
sub
pop
sub
nop
push
mov
push
dec
jnp
add
loopne
fcoms
and
jnp
inc
lcall
out
inc
dec
or
ret
mov
pop
jo
das
in
popa
aam
idivl
fnstenv
cmp
adc
je
ja
xor
adc
incl
cld
pushf
pop
pusha
cli
mov
jmp
pop
imul
out
jl
stos
mov
call
jb
push
pusha
xchg
lds
cmpb
xor
call
xchg
gs
les
pushf
mov
mov
ja
push
or
xchg
je
jae
in
test
push
sbb
scas
sbb
movsb
xlat
icebp
or
lret
mov
aaa
popf
cmp
sub
repz
cld
aas
xchg
push
and
xor
jecxz
int
or
mov
das
mov
leave
das
shr
call
cmp
and
mov
pop
fsubrl
cmp
mov
lcall
jns
pop
cwtl
stc
jg
or
xor
push
lret
imul
addr16
ds
lods
add
gs
pop
adc
pusha
imul
or
push
dec
enter
stos
fstps
inc
or
or
movsl
push
mov
xor
lods
xchg
jge
lods
mov
imul
xchg
cwtl
loop
and
pop
scas
movsb
jg
jo
jb
jmp
fstpt
mov
aad
adc
add
mov
sbb
push
in
adc
sbb
xlat
jo
js
and
call
dec
sbb
js
inc
mov
xchg
push
cmc
jecxz
mov
iret
sti
nop
jg
xor
or
cmp
mov
adc
or
jae
shrb
pop
inc
iret
lods
fwait
imul
shl
push
inc
mov
dec
inc
in
jecxz
fdiv
add
data16
pusha
xchg
inc
pushf
les
loopne
and
and
cmpsl
cli
sub
arpl
in
sub
pushf
pop
mov
ljmp
dec
pop
fmull
std
ljmp
xchg
adc
push
mov
inc
and
out
pop
xor
loope
push
out
and
mov
pop
pop
and
call
les
outsl
add
pop
mov
jb
pop
shll
push
gs
jbe,pt
into
jbe
xchg
cltd
dec
pusha
adc
movsl
rcrl
push
sbb
outsl
mov
xchg
movsb
push
addr16
fiaddl
adc
dec
ret
aas
inc
mov
cmp
clc
xchg
repnz
into
punpckhdq
pop
sbb
mov
jecxz
mul
inc
mov
js
fwait
iret
cmp
sarb
sub
and
jmp
repz
xchg
js
arpl
enter
sbb
xor
inc
dec
jp
scas
out
andl
or
insb
mov
sub
andl
testb
xchg
ja
leave
push
mov
adc
fcomps
mov
inc
dec
push
shl
imul
mov
filds
jle
push
jge
popa
mov
adc
jnp
jmp
mov
stos
sahf
adc
cli
pop
dec
cmc
cmp
in
or
aam
dec
cmpsl
movsb
pop
push
adc
push
lret
cmp
xchg
xchg
xlat
mov
ds
lret
inc
jnp
pop
pop
cld
dec
pop
xchg
and
rclb
lahf
mov
pop
push
pop
enterw
push
scas
sub
aam
mov
jg
je
aam
sub
jp
mov
lea
out
xor
int3
lret
sbb
cmpsb
push
pushf
dec
jb
sbb
jl
xor
inc
fmul
sub
adcb
stc
mov
cmp
jecxz
xchg
cmp
shlb
inc
adc
fisubl
fs
call
stos
inc
fists
mov
stos
shrl
pop
jg
popa
push
mov
or
ret
jg
ja
jne
xchg
mov
mov
inc
lcall
add
jo
mov
popa
repz
add
cld
cli
mov
xchg
ss
rcrb
mov
add
test
xchg
shl
outsb
mov
cs
popa
mov
insb
cmc
sarb
data16
fidivrs
out
or
xchg
jb
push
push
fisttps
jno
xlat
ret
lahf
loop
sbb
mov
lods
out
les
hlt
cmpsb
ja
sarb
cmp
test
adc
test
mov
les
sahf
jp
arpl
jno
repz
adc
leave
pop
push
call
fs
mov
jae
ss
pop
sti
and
fdivs
cmp
inc
rcrl
jge
mov
dec
mov
mov
jecxz
bound
xor
mov
adc
mov
mov
fisubl
push
inc
jne
mov
movsl
dec
into
and
nop
imul
js
call
cltd
fistl
sub
mov
in
enterw
dec
sar
lock
ja
mov
stos
shr
adc
aad
cltd
rcrb
adc
mov
xchg
les
or
jp
dec
add
dec
rorl
or
aas
aas
mov
xor
fwait
aas
jg
fists
dec
mov
fucomi
push
and
lret
inc
mov
dec
pop
push
and
mov
mov
lahf
mov
pop
push
dec
call
mul
mov
sbb
pop
xor
dec
and
pop
cwtl
cwtl
sbb
mov
push
xor
mov
sahf
mov
ds
add
mov
mov
pop
inc
pop
out
jle
push
leave
mov
xor
loop
aaa
movsl
mov
adc
inc
mov
daa
xchg
lahf
xchg
xchg
pop
mov
sbb
pop
xchg
cmp
out
pusha
xorb
mov
test
and
mov
pop
lret
mov
pop
or
inc
mov
adc
mov
sbb
ss
dec
jo
in
mov
nop
int
xchg
pop
mov
loop
sub
jns
gs
xlat
std
mov
stos
xchg
out
std
sahf
cltd
dec
idivl
xchg
mov
and
clc
movsl
es
jge
xor
xor
lods
pop
xor
sub
and
cld
mov
jmp
xor
push
pop
in
in
ret
inc
mov
jge
es
xchg
mov
movb
pop
rorl
or
or
bnd
fdiv
jle
addr16
jmp
inc
xor
pushf
je
inc
test
aas
jo
stos
mov
jecxz
xchg
xor
sub
push
stos
in
in
pop
cli
push
push
rolb
clc
pop
or
jae
adc
outsl
popf
mov
xchg
dec
ss
push
sub
xor
inc
scas
jg
inc
sub
and
test
jmp
jno
pop
imul
and
lock
pop
mov
outsl
cmp
or
jbe
dec
shr
push
jl
jle
lret
or
jecxz
sahf
rolb
push
outsb
in
push
ljmp
lods
sub
sub
es
mov
inc
pop
push
sub
xchg
loope
inc
add
repz
jmp
xchg
adc
mov
aas
xchg
inc
loop
std
xchg
jnp
and
in
loopne
lods
or
pop
imul
jo
pop
pop
arpl
sbb
pop
cltd
add
aam
std
xchg
popa
mov
cltd
movsl
push
insl
xor
mov
divb
fadds
int
aam
in
fwait
push
mov
cli
or
cwtl
inc
cmpsb
jne
xor
fs
pop
jge
out
xchg
fiaddl
sbb
addr16
pop
arpl
or
in
hlt
sub
insl
dec
mov
jle
xor
inc
pushf
dec
dec
sub
add
call
enter
and
mov
and
lahf
je
test
mov
dec
jo
inc
mov
pop
push
out
xchg
xchg
xchg
in
cmp
sub
add
inc
push
stos
mov
adc
mov
stos
cmpsl
hlt
ja
cmp
loopne
pop
jo
call
inc
add
mov
pop
and
adc
rcrb
je
orb
cmp
movl
push
ficompl
inc
push
orl
or
divb
ficoms
inc
push
sahf
jmp
clc
sub
jmp
xor
negb
aad
inc
imul
adc
sbb
andl
add
push
sub
cmp
jp
fs
ret
mov
mov
shlb
int
mov
mov
jle
hlt
ret
dec
das
lock
in
mov
jns
jb
cmp
mov
daa
pop
dec
ret
test
loope
or
dec
lock
cmpsb
mov
jl
insb
or
aam
sarb
aam
or
inc
ror
ja
pushf
dec
in
cwtl
addr16
fistpl
xchg
push
out
gs
loope
nop
ret
js
icebp
enter
popa
mov
xchg
mov
rorl
cmp
mov
jno
fcomps
inc
fcmovne
leave
xor
pop
adc
leave
push
add
mov
repnz
test
js
add
sti
lock
sub
xchg
fisttpll
div
fistps
pusha
and
add
ds
bound
int
xchg
test
fdivl
jno
adc
popa
jne
out
ja
fstpt
inc
lahf
or
lret
outsb
and
test
pop
pop
sub
aaa
jnp
ljmp
repz
push
loopne
or
mov
imul
push
inc
mov
or
mov
enter
add
and
hlt
out
xchg
sub
repz
fs
jcxz
pop
scas
bound
cld
xlat
xchg
pusha
cwtl
push
sub
xor
inc
mov
es
cld
jbe
mov
andb
leave
mov
push
rcll
test
leave
fiaddl
mov
pop
adc
jbe
cwtl
fidivrl
inc
mov
sbb
stos
inc
outsl
xlat
xchg
fstl
loope
jne
mov
bswap
in
or
fwait
pop
loopne
lods
repz
mov
iret
xlat
add
jg
jle
mov
mov
jae
fs
imul
cmpsb
add
ja
mov
ds
sbb
daa
mov
cs
xchg
dec
and
mov
test
xlat
and
aas
dec
inc
sub
xor
stos
cwtl
cmp
fnsave
mov
cmp
jns
popf
pop
cs
inc
xchg
xchg
push
sbb
xchg
xchg
sub
cld
add
pusha
sub
in
lods
enter
push
stos
add
aas
mov
addl
fisubl
and
cmp
test
call
inc
and
add
cmp
mov
imul
cmp
cmc
cmp
mov
push
mov
mov
jnp
loopne
xlat
mov
adc
cmp
mov
data16
pop
fisttpl
cmp
mov
mov
repnz
cli
sbb
jno
add
ds
push
nop
xlat
mov
rol
push
cmpsl
pop
gs
fisubrl
outsb
mov
sub
xchg
lret
jle
pop
jg
mov
sbb
dec
jmp
push
push
adc
push
jae
push
rorb
out
stos
popa
movsl
xlat
enter
xor
sti
ljmp
add
scas
decl
xchg
popa
ret
dec
and
cmp
and
sbb
mov
fs
icebp
mov
xor
bnd
cmpsb
out
decl
rorb
lahf
sbb
cmpsb
loope
mov
or
dec
insl
shll
xchg
dec
xor
cld
jmp
call
add
mov
inc
cmpl
test
mov
jp
push
mov
pop
and
in
push
xchg
dec
in
xorb
lret
mov
hlt
out
mov
jp
imull
aam
xchg
loopne
mov
jecxz
sbb
js
out
cs
inc
rcrl
fsubs
out
inc
inc
ret
adc
jb
adc
cmpsb
or
arpl
or
mov
das
shll
mov
fcmovu
mov
imul
loope
sub
in
popf
sbb
xchg
cmpl
fbstp
out
arpl
mov
or
or
inc
sub
enter
out
and
and
dec
data16
jbe
stc
mov
sbb
rorl
out
lcall
cmp
adc
push
jno
dec
leave
mov
pop
insl
lock
out
push
not
fs
insb
flds
xchg
inc
add
add
lcall
int
mov
inc
mov
and
push
or
enter
lcall
jg
xor
les
mov
enter
adc
inc
or
pushf
cmp
inc
jp
mov
push
push
jns
fstpt
mov
pop
adc
sbb
mov
pusha
pop
cmp
aaa
scas
or
dec
xchg
xchg
fistl
push
pop
xchg
adc
add
rcrl
pop
push
lods
lahf
out
filds
add
lock
jno
mov
negb
and
xor
add
push
sbb
add
xchg
sub
add
jbe
pusha
add
lods
jl
mov
sub
addr16
mov
int3
xor
test
inc
adc
icebp
sarb
sbb
push
ret
push
pushf
out
xor
cmc
outsb
push
call
adc
inc
ds
icebp
scas
or
pushf
xchg
cmpsb
jge
daa
movsl
lea
jg
push
das
adc
adc
jl
and
jo
sbb
fwait
lcall
cmp
and
addr16
mov
jecxz
mov
jle
xor
inc
add
push
xchg
sub
mov
jle
out
push
and
jle
cld
iret
hlt
push
rorl
xchg
test
cmp
icebp
stos
xchg
pop
roll
mov
pusha
out
imul
and
dec
and
test
mov
sbbb
test
sub
push
pop
xor
add
test
out
xchg
sub
cltd
or
mov
data16
ja
and
push
shl
stos
jns
fstps
mov
cmp
outsb
in
dec
fcoms
imul
nop
fucom
sub
addr16
xor
mov
mov
mov
pop
lds
mov
adc
dec
mov
xchg
jle
mov
andb
loopne
icebp
add
mov
ret
fs
push
push
fcomip
and
stos
sbb
insb
mov
dec
dec
mov
xor
js
cmp
or
movsl
inc
sub
sbb
aas
inc
das
stc
add
pusha
into
mov
sbb
retw
adc
fists
cmp
push
jns
jb
stos
and
push
sbb
mov
mov
test
imul
jl
push
or
call
andl
fisubrl
xchg
lret
das
enter
fistpll
mov
ret
aad
mov
in
or
lea
cmp
fldl
cmp
xchg
xor
mov
ljmp
pop
pop
adc
inc
mov
scas
fisubrl
fwait
add
les
std
inc
andb
jmp
lds
int
inc
nopl
dec
push
mov
pop
das
enter
or
xor
xor
mov
lret
adc
inc
pop
sub
mov
mov
icebp
rcr
adc
adc
and
shll
adc
dec
pop
jecxz
daa
jle
jmp
psrad
push
adc
cmp
inc
xchg
add
in
fnsave
aam
mov
push
stc
xchg
or
cltd
cmpsb
dec
js
and
push
dec
fstpt
sbb
sahf
aad
adc
and
mov
sbb
add
pusha
dec
leave
aaa
bound
nop
sub
rsqrtps
mov
push
add
pop
bound
test
cmp
inc
mov
sub
dec
push
adc
push
xchg
shll
inc
add
test
and
cltd
rcrb
lea
cmp
add
push
push
xor
fs
movl
or
les
orb
data16
sbb
and
xor
subl
pop
cmp
jne
adc
imul
dec
cli
notb
lock
aas
push
imul
adc
add
pop
les
jbe
xchg
push
push
out
or
mov
mov
lcall
movsb
imul
cwtl
mov
and
idivb
push
xchg
dec
movsl
aaa
addr16
sub
jp
lods
ljmp
add
inc
cmp
adc
rcll
dec
cmp
dec
dec
aad
sub
sbb
jne
inc
sbb
xchg
inc
aaa
insb
jge
aas
js
jmp
push
arpl
icebp
into
testl
sbb
or
imul
stos
push
daa
movsl
inc
sub
xchg
addl
ffree
in
adc
pop
mov
sahf
repnz
dec
fadds
data16
shlb
stos
cmpsb
lods
push
rcrl
mov
out
sub
lods
xor
mov
imul
mov
ficoms
mov
pop
insl
xchg
dec
sub
fistpll
and
cli
sbb
ss
repnz
dec
es
lcall
mov
ret
imul
test
dec
mov
adcb
aaa
ret
xchg
mov
jnp
jecxz
movsb
fisubl
sbb
jg
push
fwait
int
cltd
arpl
ds
xchg
sbb
mov
movsb
sub
xor
loop
out
inc
push
js
imul
mov
aas
xor
pop
rol
ss
arpl
inc
outsl
out
sbbb
add
mov
mov
lock
mov
or
push
mov
inc
push
jb
test
xchg
or
out
dec
jne
sbb
push
shl
pusha
aas
int
adc
jnp
pop
push
jecxz
insl
inc
inc
mov
mov
jae
jbe
and
cmpsl
pop
xor
inc
pop
je
les
daa
cltd
movl
mov
adc
lea
movl
int3
lds
dec
jnp
push
mov
mov
mov
mov
xorb
push
mov
mov
pop
stos
jg
xor
sub
gs
mov
jle
jbe
pushf
scas
xchg
sbb
push
mov
ja
lods
mov
or
iret
pop
cmp
popf
mov
ret
mov
dec
call
loopne
add
dec
push
push
aaa
sub
dec
xbegin
insb
xchg
std
and
lcall
pop
pop
and
in
stos
dec
adc
inc
ja
or
mov
sbb
int
push
jl
mov
pushf
xchg
push
int
loope
inc
outsl
push
fsts
ret
arpl
jb
push
and
sti
mov
cli
or
jp
mov
popf
daa
gs
aaa
addb
fdivl
adc
sub
movsl
ror
pusha
xchg
add
mov
pop
push
movsl
outsb
push
add
xchg
sarl
cld
pop
jbe
pop
out
in
cwtl
sub
xor
sbb
inc
fnstcw
jns
in
dec
popa
fiadds
fisttpl
ret
dec
sub
dec
negl
dec
outsb
in
out
jnp
mov
bound
cmpsb
rcrl
hlt
out
inc
pop
stos
push
or
rcrb
push
insb
cmp
jbe
dec
lea
call
adc
cmp
sub
sbbb
push
jl
xchg
or
pushf
inc
push
inc
stos
mov
repz
or
cmp
mov
pop
adc
or
orl
and
cmp
scas
inc
xchg
push
es
fwait
repnz
rclb
loopne
xor
dec
and
add
ja
ret
int
movsb
rorb
pop
lahf
mov
dec
mov
sub
out
pop
cltd
cmp
imul
push
jnp
jmp
out
je
test
mov
js
push
mov
pop
leave
test
popa
divb
push
cmc
sub
mov
and
ret
sbbl
adc
xor
or
mov
test
mov
aas
jmp
or
mov
dec
daa
out
mov
mov
mov
push
outsb
mov
xchg
loopne
dec
adc
fisubl
cmpsb
jo
call
or
lods
sub
scas
ss
lret
lret
xor
adc
movsb
xchg
shrb
es
adc
movsl
sub
add
add
sub
mov
lahf
ret
out
add
push
or
add
mov
mov
ds
jae
dec
mov
pmuludq
push
mov
add
pop
jp
sub
mov
negb
sub
jnp
adc
iret
stos
add
enter
bswap
sahf
setne
mov
push
loopne
pop
repz
sahf
cld
push
movsb
xlat
ret
stos
sub
hlt
add
and
into
inc
cmp
sub
adc
push
jbe
dec
add
inc
xor
xor
andnps
out
and
sub
xor
rolb
jmp
in
add
adc
xor
das
mov
mov
das
jmp
sub
mov
sahf
inc
jnp
and
dec
push
add
pop
movsb
or
sub
incb
es
inc
ret
test
lret
pushf
jmp
movsl
mov
sarb
sub
inc
push
mov
icebp
xor
push
adc
mov
pusha
imul
xor
inc
ja
in
or
sti
cmp
adc
jnp
gs
add
push
add
mov
sub
stos
or
notb
xchg
enter
ret
cmpsb
aas
add
lods
sbb
jle
jmp
lods
sti
pop
mov
into
mov
cmpsl
and
shll
add
aas
rorl
cmp
xchg
xlat
add
push
sbb
cs
ljmp
sub
and
movsb
out
imul
popf
cmp
in
xchg
xor
xor
and
out
or
jmp
sbb
stos
nop
jae
mov
adc
mov
mov
pop
aas
sub
jns
insl
aas
push
cmp
push
or
add
jnp
xchg
test
popf
clc
lock
insl
mov
push
aad
mov
scas
xorl
fildl
aaa
mov
movsl
adc
data16
push
add
movsl
cmp
adc
repz
cli
mov
es
add
aaa
xor
test
fldt
rcrb
rcr
jno
cmp
mov
repnz
cmc
inc
push
mov
xchg
arpl
dec
jo
xchg
and
mov
and
rcrb
xchg
test
add
or
data16
and
sub
iret
aaa
and
jae
outsl
test
inc
and
adc
fwait
addr16
das
in
fisttpll
mov
inc
imul
or
sub
or
or
je
and
inc
repz
lock
mov
jmp
pop
sahf
out
movsb
gs
jmp
addr16
int
xchg
in
movups
fsubrl
test
mov
adc
loope
xchg
push
pusha
lock
push
cli
rclb
cli
lret
popa
testl
cltd
ljmp
outsl
xor
ds
push
fisttpl
repnz
pop
arpl
pop
lcall
mov
xor
roll
dec
sahf
stc
sysexit
mov
or
add
mov
push
lahf
dec
hlt
mov
in
mov
lcall
mov
inc
call
jmp
dec
test
icebp
lea
rolb
xor
fcmovnb
or
add
or
cmp
aad
xor
lret
xlat
mov
add
in
fucomip
xor
frstor
scas
jne
scas
imul
mov
int3
rcrb
dec
mov
loopne
dec
xchg
or
push
adc
push
ja
mov
aas
popa
add
pushf
xor
push
daa
cltd
stc
iret
fmull
or
lea
xchg
xor
sahf
dec
or
call
xchg
push
sub
dec
sub
outsl
insl
stos
jmp
cld
or
outsl
inc
inc
mov
dec
lret
notl
ss
mov
and
mov
ret
lahf
dec
mov
int3
std
inc
xchg
inc
movsl
fmul
lea
lret
adc
imul
pop
sbb
and
fwait
mov
mov
push
fcomps
orl
inc
insl
mov
xchg
enter
xchg
sbb
ja
sbb
dec
ret
int3
outsl
dec
movsl
cmp
pop
cmpsb
push
mov
mov
mov
xor
imul
arpl
pop
mov
cmc
add
shrl
push
push
sahf
xchg
lds
inc
addr16
push
loope
cmp
xlat
test
inc
and
xchg
pop
or
mov
xchg
dec
sub
out
cmpsb
inc
int
pusha
or
sub
ret
jo
mov
xchg
xchg
lcall
bnd
outsb
cmp
inc
xchg
mov
scas
enter
push
sbb
jmp
insl
adc
sahf
shll
fwait
loopne
roll
jb
push
mov
call
sub
cmp
sub
leave
pop
dec
push
inc
and
xor
mov
cmpsb
mov
leave
add
scas
nop
cs
cltd
xchg
nop
hlt
adc
mov
arpl
cmpsl
jmp
cmp
sbb
dec
sub
mov
pop
mov
cmp
cmp
pushf
push
es
cmp
stc
sbb
ja
dec
repz
sub
mov
inc
jo
pop
js
mov
dec
mov
xchg
mov
fs
cmp
ret
int
dec
cmpsl
fcompl
out
add
add
lock
testb
mov
xchg
adc
mov
and
cmp
or
out
lcall
inc
icebp
push
dec
lock
pop
inc
mov
les
and
mov
push
fwait
sub
std
into
je
les
mov
add
sahf
jne,pn
sub
shrl
xorb
mov
fstpt
add
or
push
sbb
xor
cli
leave
in
ljmp
stos
shll
xchg
and
cmp
and
cmp
mov
adcb
loopne
mov
sub
push
mov
xchg
sbb
push
gs
cmpsl
xchg
popf
xor
inc
loope
inc
lods
add
mov
jne
nop
addl
dec
jmp
cmp
mov
cs
adc
insb
popa
negb
mov
sbb
xchg
sbb
jae
leave
faddl
cli
push
fadds
adc
push
jge
xchg
or
out
xorl
inc
mov
popa
push
repz
ss
fsubrs
pop
mov
and
or
lods
decl
mov
mov
and
or
mov
jnp
repnz
fdivrs
inc
roll
hlt
hlt
inc
xor
out
mov
mov
scas
mov
imul
push
test
push
idiv
popa
imul
cwtl
test
jp
and
nop
add
and
jnp
mov
adc
sbb
cld
popf
xchg
mov
imul
bound
xchg
fmull
es
inc
xor
jmp
push
jmp
lea
or
xchg
jo
test
mov
fstl
mov
mov
fistpll
and
mov
test
ret
inc
cli
push
sahf
neg
gs
dec
jo
pop
fcoml
into
xlat
ljmp
das
enter
leave
ss
aad
rorb
jmp
push
jns
mov
mov
ds
in
ja
lret
idiv
data16
jmp
lock
sbbl
sub
inc
sub
sbbb
sbbb
cltd
push
mov
mov
ror
push
pushf
lea
lcall
mov
aas
jb
subl
or
push
fcompl
stc
dec
pushf
movsb
xchg
push
sbb
xor
cmp
incb
shll
in
mov
sbb
fists
pop
lret
sti
sub
scas
inc
sub
adc
xor
sbb
inc
add
inc
cmp
cwtl
insb
cmp
jb
aam
inc
jns
pop
mov
adc
sbb
pop
in
or
pop
cmc
and
in
das
push
sbb
in
add
pop
adc
stc
outsb
xor
sbb
fisubl
xchg
and
fst
add
fisttpll
and
adc
ret
pop
cmpsb
sub
data16
fsts
xor
pop
jecxz
xchg
mov
in
inc
jecxz
fcompl
xor
fsubl
cmp
jb
cmp
add
roll
outsl
ss
inc
aad
inc
add
inc
daa
push
sti
movsl
xchg
push
inc
pop
jmp
in
xor
mov
stos
adc
mov
enter
loop
sub
xchg
sbb
pop
ficoml
jae
clc
adc
rol
repnz
inc
mov
pop
lds
inc
mov
jmp
mov
into
fidivrl
stc
pop
sub
int3
lea
fiaddl
stos
xchg
xchg
sbb
sub
xchg
cld
xchg
xor
shlb
jg
jne
mov
insl
lret
stos
xchg
imul
push
mov
inc
into
lcall
push
insb
fld
mov
or
or
adc
repnz
push
outsl
pushf
and
push
pop
sub
adc
mov
es
mov
inc
push
push
arpl
jo
leave
sbb
push
or
repnz
and
outsl
sbb
mov
addr16
sub
fwait
dec
xor
xchg
sbb
cmp
in
mov
mov
hlt
xor
jne
and
sahf
mov
push
fldt
or
loop
mov
cld
repz
mov
sbb
faddl
ja
mulb
mov
stos
xchg
in
lea
cmp
xor
xchg
push
sti
enter
outsl
adc
addl
dec
test
hlt
xor
fisubrs
inc
subb
jne
mov
sub
add
mov
xor
nop
in
mov
fwait
push
and
or
dec
repz
das
cmp
mov
movsb
pop
xchg
or
cmp
ret
cmp
dec
dec
hlt
cld
imull
rol
mulb
jge
je
in
lahf
cmp
insl
lret
leave
aam
xor
sub
into
sarl
xor
mov
dec
and
xor
call
push
call
addb
fnsave
ret
pop
push
das
iret
mov
pop
xchg
or
xchg
sbb
leave
in
or
fdivrl
sub
dec
inc
jns
xchg
int
fimull
stc
jge
das
xor
push
sbb
into
imul
lods
ss
dec
es
jecxz
bound
nop
cmp
inc
aad
sub
rcrb
mov
inc
jg
mov
in
int3
adc
or
jne
push
cmc
mov
xorb
popa
xor
fdivs
cmp
ficoms
pop
repnz
outsl
xor
push
ficoms
jecxz
fsubrl
adc
aaa
dec
mov
mov
faddl
pop
pop
aas
or
mov
mov
int3
adc
mov
rorb
cld
sahf
fsubrp
mov
jne
pop
cmp
dec
fbld
mov
aad
jno
cltd
in
push
stc
mov
ret
aam
ficomps
mov
pop
jle
enter
cmpsl
repz
rorl
mov
sahf
mov
mov
mov
push
mov
mov
adc
loope
fisttpll
cltd
ret
push
mov
jnp
pop
push
push
push
fcoml
int
xchg
lods
mov
mov
or
and
out
push
rorb
mov
and
shrl
mov
insb
data16
icebp
or
or
cmpsl
lahf
aam
lcall
mov
pop
adc
inc
jmp
je
les
adcl
cmp
int
fucom
int
push
mov
and
lea
cmp
mov
cmp
xchg
jmp
mov
jno
dec
stc
jae
push
loop
mov
mov
adc
and
xor
sarb
inc
in
lock
cmpsb
in
sub
adc
popf
fsubrl
mov
mov
cmp
es
mov
outsl
out
jbe
dec
and
aas
test
jb
adc
je
xor
xor
jae
addr16
sbb
orb
aas
push
xchg
sarb
ds
adc
nop
and
sbb
daa
insb
sbb
xor
push
clc
mov
fs
out
push
add
add
and
aam
sub
pop
pop
xor
mov
ret
cmp
scas
test
nop
or
pop
mov
xor
sub
push
and
xchg
movsb
mov
inc
sub
hlt
sbb
jbe
mov
andl
cmpsl
jge
out
xor
repnz
nop
ret
adc
cli
or
and
popf
jbe
sub
dec
aas
cmc
popf
inc
repz
stos
mov
xchg
ret
mov
sub
enter
inc
imul
sub
cmp
xchg
lea
cmc
add
dec
cltd
inc
pop
testl
jg
in
mov
rolb
sbb
pop
js
popf
stc
cltd
push
adc
pop
push
sbb
mov
loope
mov
xor
mov
ret
or
test
aad
sub
push
inc
mov
push
fldenv
adc
jbe
cwtl
and
pop
fdivrs
jne
rol
in
add
jmp
das
bound
inc
push
jne
adc
sahf
mov
cltd
pop
int
add
push
inc
sbb
dec
pop
mov
or
xchg
pop
sbb
in
xor
ret
hlt
mov
cmp
iret
inc
lret
popa
jecxz
xchg
cmpb
shll
mov
iret
pop
pop
pop
sti
jae
jns
sub
test
nop
add
cmpsl
lds
lcall
or
fs
xor
cmp
in
pusha
dec
push
pop
xchg
ljmp
cmpsb
dec
sbb
sub
xlat
imul
sbb
adc
mov
in
xchg
bound
leave
lds
cmc
dec
push
mov
repnz
cmc
std
inc
xchg
xor
mulb
cmpsb
mov
cmpsl
pop
pop
xor
test
and
loopne
add
jns
push
mov
pop
jnp
inc
sbb
add
sub
shlb
fisubrl
pop
test
cmp
int
push
inc
lds
les
push
pop
sti
popa
cltd
or
add
dec
sub
lahf
fcmovbe
cmpsb
jge
roll
add
cwtl
ja
lock
cmp
pop
jnp
out
in
jno
daa
scas
jno
movsb
xor
xor
jbe
mov
mov
or
jp
mov
push
xor
pop
xchg
jnp
data16
sbb
icebp
xor
cmp
mov
sbb
pop
inc
aas
out
push
mov
inc
mov
sub
xchg
add
call
push
pop
and
add
lret
inc
pxor
test
movlhps
mov
lea
fwait
push
mov
jl
in
popa
pop
add
cmp
sahf
cmpsl
push
pop
mov
icebp
jno
inc
cs
lea
mov
shl
mov
push
mov
pushf
cmp
mov
xor
xor
add
mov
pop
sbb
add
test
dec
iret
push
xor
pop
int
mov
outsb
cmp
jmp
mov
lods
aad
ss
jecxz
jmp
out
popa
lcall
sbb
or
test
imul
and
push
jns
mov
adc
inc
into
out
or
dec
outsl
rorl
mov
ret
int3
sbb
outsb
mov
bound
ja
push
addl
jmp
pop
lahf
inc
cmp
shrl
out
xchg
fmuls
add
add
sti
outsl
std
push
into
jne
jbe
mov
xchg
shrl
fisubs
in
sub
in
xchg
rorl
inc
or
jecxz
sub
dec
sbb
data16
jnp
mov
arpl
jnp
pop
sbb
xchg
in
ja
xor
cltd
popa
fildll
testl
add
stc
pop
cmpl
xlat
mov
movsb
aaa
arpl
add
js
mov
sbb
leave
xchg
rolb
jle
pusha
subl
mov
inc
lret
mov
and
in
rcll
bound
adc
sbb
or
adc
cmp
add
int
dec
or
lds
cmpsl
jne
fiaddl
inc
sub
mov
fwait
test
xchg
mov
lock
adc
xor
int
and
movsb
mov
aam
pop
jnp
mov
and
and
in
mov
fcoms
cmp
shlb
lahf
sub
or
xchg
and
sub
xor
out
xchg
push
xchg
mov
addr16
cmpsb
jg
test
pop
fs
mov
adc
pop
pusha
imul
pop
xchg
lods
out
or
xor
adc
push
rclb
pop
sub
sub
enter
lea
loop
cld
xchg
shll
pop
leave
ret
inc
out
cwtl
push
mov
inc
fdivrs
ret
push
mov
mov
dec
inc
sbb
dec
mov
lahf
ljmp
inc
inc
jo
leave
adc
mov
cld
iret
int3
and
mov
rcll
pop
jg
sub
jnp
jmp
cmc
xor
dec
lret
and
mov
sbbl
jnp
movsl
xchg
aas
out
push
xchg
jne
aam
fisubs
push
mov
repnz
and
mov
lds
imul
fmuls
sbb
xor
cmpsb
push
push
loope
or
into
loop
popa
push
imul
pop
sub
add
add
push
int3
clc
fabs
xlat
lahf
cmp
or
xor
test
loope
shl
adc
adc
add
loop
outsb
ret
and
or
je
into
mov
daa
dec
pop
or
cmp
dec
xor
pusha
mov
stc
dec
lcall
pop
jns
and
dec
cmpsb
shrb
mov
sti
push
xchg
int
sub
shr
inc
mov
xchg
cli
and
xor
sbb
mov
test
aam
push
fwait
cmp
pop
xchg
clc
sbb
mov
sbb
shrb
pop
mov
jg
jo
sbb
cli
les
xor
xchg
push
popf
sbb
xor
mov
in
dec
shll
jno
aad
icebp
lahf
nop
xchg
pusha
add
insl
xchg
in
dec
lret
mov
xchg
jle
dec
insb
and
xchg
push
aaa
testb
arpl
out
movsb
pop
outsl
sub
imul
pop
jnp
jne
stos
sub
adc
pushl
push
push
xchg
data16
push
pusha
pop
xchg
inc
lret
repz
outsb
hlt
push
and
dec
pop
sub
jl
addr16
subl
cltd
add
cmpsl
sahf
mov
fadds
cmp
movsb
fsts
lds
mov
xchg
lds
insl
scas
popa
cmp
es
xor
test
cmp
stos
dec
mov
pop
fwait
addr16
scas
pop
std
xchg
pusha
cmp
ret
sbb
dec
fbstp
jns
aaa
test
xor
pop
repnz
aas
jp
loope
pushf
addr16
add
xchg
loopne
int3
add
lret
pop
mov
cmp
scas
ds
mov
aam
stos
sub
sub
pop
repz
xchg
push
dec
lock
fsubrl
leave
lret
inc
test
xchg
xchg
xchg
popa
sub
std
shrl
sahf
adc
xor
arpl
ficoml
idivl
add
lods
mov
and
lcall
xchg
loope
ljmp
add
fiadds
push
jl
sbb
fidivrs
inc
xchg
loop
in
daa
inc
sbb
in
aam
mov
mov
loop
test
out
stos
sbb
leave
movl
and
pop
out
push
xchg
cmp
rol
hlt
mov
test
push
mov
outsl
push
xor
jno
sub
cwtl
xor
mov
aam
cmp
cmp
stos
pop
cmpsl
testl
sbb
cmc
dec
xor
dec
fidivs
out
mov
lock
xchg
movsb
jge
lret
mov
add
repz
sbb
out
and
xor
icebp
out
mov
and
mov
pop
push
fs
adc
adc
sbb
into
adc
orb
js
imul
mov
dec
les
xlat
xchg
push
push
and
cwtl
mov
push
fs
data16
imul
jle
mov
iret
dec
xor
pop
and
ljmp
mov
add
rcr
and
clc
cmc
mov
imul
or
fisttpll
aad
jg
xchg
push
dec
add
pop
cli
insb
loop
lret
mov
jecxz
pop
mov
nop
test
xchg
jge
out
add
cmc
xor
scas
mov
push
in
testb
cmc
loope
cmp
or
lods
ret
xchg
sbb
add
mov
sbb
cmp
ljmp
inc
lahf
cs
std
xchg
dec
test
outsl
inc
inc
pop
ficomps
mov
scas
pop
push
mov
or
pushf
or
cmc
or
insb
enter
push
scas
lret
jb
jg
push
popa
insb
add
aas
jg
int3
test
cmp
add
pusha
lcall
adcl
or
cmpsb
icebp
jo
dec
mov
pushf
pop
scas
outsb
movsb
ret
shll
nop
int
idivb
bound
push
mov
pop
rclb
stos
in
lea
aas
mull
int
mov
mov
mov
xor
xlat
cmp
outsl
adc
xor
add
test
aas
loopne
rclb
test
jmp
aad
lea
lods
fsubrl
jae
jmp
stos
fcoms
mov
cmpsb
pusha
xchg
subl
push
and
rcr
shl
xchg
xchg
or
push
mov
push
jbe
imull
push
insl
loop
push
das
ret
lods
adc
and
sub
add
out
jno
sbb
jbe
mov
movsb
dec
jb
stc
mov
jnp
mov
cmp
cmc
stos
fisttpll
sbb
jg
sub
cmp
sub
push
movsl
gs
das
push
xor
arpl
pop
les
and
xchg
pop
mov
ljmp
pop
cmp
lock
mov
int
push
mov
inc
jns
inc
out
xlat
stc
xchg
enter
sti
outsl
jmp
adc
clc
mov
sti
lret
mov
test
arpl
popf
sbb
in
stos
test
mov
mov
sub
cmpsl
mov
sub
jge
sbb
leave
lret
mov
xor
inc
pop
clc
jbe
sub
movlps
rcll
mulb
sub
jg
es
jns
jmp
sub
dec
mov
lds
cld
add
sub
dec
sbb
or
orl
add
pop
cmc
push
cmp
stos
adc
mov
pop
cwtl
and
push
or
test
cmp
ljmp
test
fwait
mov
cwtl
sub
or
flds
in
ds
inc
pushf
mov
push
rolb
sub
stos
out
sub
pop
shll
and
mov
adc
or
or
push
sub
scas
xchg
faddp
cwtl
mov
add
cmpsb
or
lea
pop
push
bound
jecxz
dec
fidivrs
sub
lods
pop
repz
iret
pop
add
aas
sti
mov
lahf
pop
out
addr16
fistpll
jle
jns
rcll
and
mov
sub
and
insl
fs
cs
xlat
dec
sahf
xor
arpl
mov
push
mov
sbb
jmp
sub
xchg
or
mov
cmp
cmp
jp
pop
ror
xchg
cli
std
pop
xchg
loopne
mov
bound
jnp
jge
xlat
push
cmp
addr16
repz
xor
pop
sub
inc
icebp
outsl
inc
cmp
sbb
pop
lret
call
dec
fisubs
aaa
mov
pusha
push
xchg
push
xor
lock
sbbb
pushf
cmpsl
mov
xchg
mov
push
out
std
scas
push
mov
pop
jb
call
ljmp
bound
xchg
mov
jp
adc
loopne
inc
test
mov
or
out
or
push
in
iret
jl
lcall
pushf
push
and
stos
call
cwtl
mov
enter
scas
jle
inc
pop
stos
rclb
push
mov
jecxz
add
sub
xlat
cmp
xchg
test
adc
inc
fld
mov
sbb
lret
popa
or
aam
sbb
sub
lock
mov
stc
roll
jl
adc
lahf
xor
xchg
lods
add
stc
cmp
stos
out
push
movswl
jns
arpl
add
fstpt
sub
pop
ja
aad
cmp
daa
sub
sub
fcompl
cmp
add
cmp
and
imul
fnstsw
cmpl
shrb
push
mov
int
sarb
add
fsubrl
inc
repnz
mov
sbb
int
add
xchg
out
sar
popa
cmp
and
pop
int3
sti
push
add
xchg
adc
push
sub
add
push
push
xchg
and
inc
bound
repz
cmp
inc
push
and
int3
sbb
js
rolb
clc
pop
in
mov
pop
cltd
aad
pop
outsb
add
lea
add
scas
lcall
pop
pop
jmp
add
pop
pop
xchg
leave
lcall
mov
mov
out
cltd
int3
call
dec
sbb
add
in
inc
mov
ss
xlat
lock
rep
jbe
or
push
pop
xchg
inc
call
xchg
enter
mov
fisttpl
add
stos
and
or
leave
pop
cmpl
ljmp
imul
lea
mov
loope
sbb
shld
jno
scas
pop
lods
stos
fidivs
pop
jle
sub
mov
add
jns
push
lahf
sbb
and
pusha
popl
test
addl
jnp
jge
aaa
js
shld
sbb
inc
and
cld
and
pop
cmp
aas
ljmp
dec
lods
mov
pop
fs
clc
and
gs
cld
mov
pop
pop
test
xchg
adc
lahf
sbb
inc
jmp
cmp
cld
jge
arpl
jmp
cmc
mov
std
adc
lcall
push
movsl
add
shrb
mov
sarl
fs
push
jo
cmp
outsl
and
das
dec
xor
sarl
lods
pop
movsb
sbb
jmp
lahf
addr16
adc
aad
and
shl
outsl
xorl
enter
movsl
cmp
push
add
mov
sub
dec
dec
mov
test
adc
dec
stc
add
ret
stos
movsl
sbb
scas
mov
adc
in
es
mov
xchg
pushf
inc
push
hlt
nop
es
fwait
shll
dec
cmpsl
xchg
loop
xchg
or
rclb
sbb
arpl
lret
pushf
inc
insb
cwtl
outsb
xchg
mov
xchg
mov
loop
popa
push
pop
sub
ss
jne
jle
or
stc
cmovnp
jne
cld
adc
int
sti
icebp
pop
paddsw
lret
push
pop
shlb
adc
add
pop
add
fnstcw
clc
jno
aam
xchg
leave
and
sbb
movsb
adc
pop
adc
xor
dec
pop
sbb
xor
cmp
jbe
xor
in
or
in
jns
jo
lret
xor
xchg
jecxz
fisubrl
leave
cmp
pop
xchg
and
clc
ret
and
faddp
push
jmp
pushl
aad
push
xchg
icebp
or
aad
push
push
pop
ds
ret
xor
or
sti
pop
add
mov
fsubs
jl
jp
push
mov
mov
jge
pop
mov
and
mov
lret
aaa
out
scas
pop
imul
push
pop
xchg
outsb
add
fnstenv
pop
mov
hlt
jne
pop
pop
gs
push
test
mov
inc
mov
mov
push
jnp
enter
cmp
mov
inc
inc
lds
fwait
cld
into
xor
out
or
je
sti
ret
add
sub
push
inc
inc
sbb
adc
xchg
xchg
mov
pop
ss
loopne
shll
jp
addr16
js
stc
xor
mov
outsl
pop
mov
mov
clc
mov
adc
adc
pop
enter
jo
add
push
cmc
dec
outsl
dec
and
jcxz
and
rolb
xor
adc
adc
cmp
xor
sub
push
js
out
lods
stos
test
mov
mov
adc
cmpsl
pop
fistpll
loop
frstor
jbe
popf
ja
pop
decb
xor
int
pop
and
mov
adc
inc
imul
push
sub
add
dec
inc
decl
popa
in
popl
outsl
ja
outsb
push
mov
out
aam
cwtl
push
lahf
into
mov
mov
mov
add
cld
cmpsl
ds
inc
out
fstpl
xchg
movsl
dec
mov
test
leave
pop
push
lcall
xchg
push
jmp
lcall
fdivrs
ss
vpcmpgtw
xor
lcall
lret
bound
loopne
or
mov
subb
test
fcmovne
adc
dec
inc
push
xor
sbb
adc
rcr
nop
in
movb
pushf
and
push
pop
cmpsb
xchg
or
mov
sub
cmpsb
iret
push
pop
icebp
cmpsb
test
adc
xor
loopne
bound
inc
enter
popa
mov
xchg
sbb
mov
jge
or
cli
or
mov
mov
lods
into
and
nop
int3
les
mov
imulb
ror
and
out
fiaddl
insl
pusha
add
out
kmovb
pop
test
icebp
fbld
jge
mov
roll
loope
mov
jns
testb
jg
xchg
stc
push
pop
push
ficoms
inc
ds
pop
push
and
cltd
cmp
mov
sti
enter
ret
les
and
jecxz
push
mov
or
daa
cmp
out
cmp
pushf
addb
arpl
fcmovne
sbb
scas
sub
pop
dec
scas
fwait
xor
in
or
divb
repnz
xchg
mov
aas
fldenv
mov
push
cmpsb
add
mov
inc
icebp
or
das
mov
sub
push
divb
jle
adc
xchg
cmp
icebp
pop
mov
movsl
push
push
adc
andl
flds
push
lods
insl
sub
cs
sahf
push
sarl
adc
mov
movsb
jmp
push
addr16
stc
pop
int
mov
adc
jmp
lds
jl
push
lret
cltd
mov
arpl
lcall
push
mov
adc
xchg
fstpl
dec
pop
iret
cs
aad
iret
test
repz
jg
xchg
flds
daa
lods
lcall
mov
sahf
dec
push
sar
mov
mov
xchg
outsb
int
cmpsl
inc
xchg
pop
shl
push
pop
int
mov
lret
push
jo
iret
xor
mov
outsb
sbb
cmc
ljmp
mov
push
mov
inc
movsb
xor
sbb
fdivrp
mov
pop
pop
insl
std
or
data16
pop
andb
cmp
and
xlat
mov
aad
push
jle
pop
pop
adc
lea
or
xchg
movsl
or
cmp
push
xchg
idivb
push
shlb
std
jp
mov
jecxz
or
inc
adc
repnz
cwtl
popa
cmp
and
xchg
cs
sbb
mov
sbb
jecxz
enter
lock
or
sarb
sbb
mov
lock
jns
dec
inc
cmpsb
mov
xor
loop
mov
adc
ss
fidivrs
mov
pop
and
mov
iret
ficomps
jge
ffree
push
outsl
dec
add
inc
pop
mov
dec
inc
jp
ljmp
mov
rolb
cmc
mov
jo
mov
ficompl
jne
pushw
les
and
mov
imull
cmc
fldln2
xchg
stos
in
js
push
jl
and
push
mov
inc
xchg
adc
addb
mov
sbbb
out
mov
push
fidivl
inc
push
je
stos
cmp
out
xchg
xlat
lock
out
sbb
xorb
dec
rorl
pushf
not
in
std
push
mov
sbb
mov
sbb
jge
cmp
push
push
and
test
pop
fldl
dec
nop
out
stc
cwtl
cmpsl
ljmp
test
arpl
adc
sti
mull
mov
or
push
mov
cmp
mov
cmpsl
sarl
mov
das
jecxz
ja
adc
fildl
pusha
add
jns
outsl
rorb
imul
sub
fidivrl
jns
jecxz
cmp
lcall
push
xor
inc
adc
je
movsb
mov
ja
leave
mov
sub
mov
cs
inc
mov
popa
mov
sbbb
pop
movsl
jl
xor
mov
and
aad
fmull
ret
in
mov
sti
leave
mov
push
jbe
sub
lret
sub
or
testl
test
shrl
imul
jbe
mov
scas
out
lock
sbb
push
cmp
aam
dec
xchg
or
into
adc
enter
dec
mov
inc
xchg
mov
cmp
inc
jl
jecxz
mov
xchg
mov
iret
push
arpl
test
mov
xchg
ret
in
enter
hlt
push
lret
mov
or
daa
aam
lods
addb
outsl
in
xor
or
xchg
dec
pushf
movsl
xchg
or
mov
enter
adc
cs
stos
repz
dec
hlt
xor
mov
xor
out
aad
xlat
fistl
jmp
cmpsl
rclb
jae
ret
jge
mov
and
ss
or
mov
mov
daa
add
push
shrl
cwtl
xor
out
stc
scas
ljmp
ss
shll
mov
xchg
testb
adc
pop
les
pushf
cmc
cmp
xor
out
nop
iret
testb
push
fists
scas
xchg
mov
nop
loope
dec
loopne
out
cwtl
adc
int
inc
xchg
pop
pop
and
iret
or
test
xor
jns
lcall
or
sub
clc
dec
sub
jae
dec
mov
cmpl
loop
xor
sbb
nop
dec
mov
jle
adc
std
push
ret
jb
push
push
pop
enter
loopne
call
mov
pop
mov
aaa
and
gs
js
out
jp
pop
push
in
xor
fsubrs
add
adc
mov
popl
fucom
in
dec
nop
rorl
push
lods
jns
cmp
das
notl
ja
sub
das
fcomp
mov
cs
adc
loope
dec
mov
pop
xchg
add
cmc
out
cmp
cmpsl
mov
clc
rol
or
int
push
stos
xchg
push
daa
imul
cwtl
adc
mov
test
xor
in
mov
inc
adc
or
cmc
jg
dec
std
loope
fstps
and
fwait
add
in
cmc
sbb
inc
inc
sub
add
imul
gs
mov
xor
and
gs
cmp
mov
push
push
mov
add
into
repnz
dec
ss
sub
pop
xchg
jns
inc
xor
aaa
jae
fs
stos
lea
sub
test
cmp
pop
and
jb
andl
inc
mov
orb
push
fnstsw
add
pop
popf
cmpsb
mov
cmp
xor
cmp
cs
jae
fs
xchg
push
testb
adc
push
jne
test
dec
sbb
test
sbb
sub
sub
fisubrl
add
xchg
inc
pop
sub
add
cmp
out
pop
add
pushf
and
inc
mov
pop
sahf
out
fisubrl
jno
mov
mov
sub
in
add
sbb
movsl
shlb
ljmp
movsl
xchg
and
lahf
jo
jae
cmp
icebp
lea
xchg
fimull
and
int3
xchg
js
sub
fucomi
insb
scas
mov
push
xor
mov
popa
sbbl
cmp
pop
jnp
mov
ffree
adc
and
inc
les
dec
outsl
pop
adc
push
std
mov
jle
mov
sub
sahf
aas
xchg
inc
pusha
add
xor
mov
andl
xor
dec
lea
std
fwait
sbb
mov
cmpsl
adc
dec
ror
fsubrl
ja
inc
lds
das
inc
insb
fiadds
daa
loope
mov
subb
push
xor
test
cld
leave
xor
cs
push
or
dec
jge
cs
jp
pop
std
loope
sbb
xor
push
sar
cmp
sub
cmp
mov
loop
cmp
push
xor
shlb
stos
enter
paddb
mov
mov
adcl
inc
xchg
in
cmp
jmp
jp
add
and
jle
fwait
dec
mov
cmpsl
mov
push
add
je
out
movsb
sbb
sarl
xchg
fildl
subb
mov
jge
jno
jge
js
xchg
outsb
cmp
mov
mov
sbb
loope
sbb
dec
dec
add
subb
arpl
sbb
std
jl
scas
mov
negb
inc
scas
rclb
adcb
or
inc
push
and
cmp
or
fnstsw
test
mov
out
out
fdivl
dec
add
fdivrp
xchg
outsl
mov
cmp
rorb
adc
fwait
and
dec
mov
inc
into
pushf
cli
push
mov
adc
jl
insb
stos
ljmp
mov
in
mov
add
pop
push
push
fcmovbe
mov
pop
popa
in
pusha
mov
test
sub
sbb
jge
lret
std
pop
cltd
aam
jnp
sub
lock
sub
mov
ss
mov
dec
imul
fbstp
pop
or
test
lods
popa
bound
cltd
jle
div
xor
popa
mov
idivl
pusha
outsb
mov
outsl
enter
pop
cmc
inc
out
xchg
jno
into
jg
fbld
shlb
cmpsl
dec
and
int
repnz
ss
mov
sarl
mov
ja
lds
jecxz
jno
cmpsb
xlat
pop
lods
xchg
mov
daa
cmpl
loop
rcrb
pop
enter
sar
es
les
popa
xlat
jmp
mov
xchg
in
fadd
in
add
inc
sarb
xchg
xorl
push
stos
xor
xchg
push
push
jnp
mov
mov
jmp
cmp
test
adc
push
push
jmp
mov
and
aaa
cs
or
or
and
notl
in
and
insl
add
insl
or
data16
or
sub
scas
es
add
icebp
imul
mov
lods
and
aad
sub
cmp
test
push
push
add
and
jmp
imul
in
cmp
adc
sbb
fcoms
jbe
or
pop
dec
pop
negl
lds
push
gs
cmpb
mov
lea
push
push
adc
sbb
test
shrb
into
or
inc
imul
xchg
or
dec
jecxz
dec
ljmp
cmp
mov
lret
fimull
jne
pusha
fldl2e
in
mov
js
and
mov
lcall
aas
inc
sub
imul
add
jno
sub
sbb
adc
movsl
dec
cli
jge
stc
push
inc
mov
adc
ror
call
insl
add
in
cmpsb
aad
add
xchg
inc
fidivrl
or
jle
dec
cmpl
fwait
xor
dec
push
popf
mov
push
les
dec
fwait
outsl
mov
aaa
or
pop
outsb
aad
arpl
je
cmc
int
test
movsb
add
mov
push
mov
sub
xor
mov
xchg
gs
out
mov
xchg
push
ds
daa
sbb
cmc
pop
repnz
arpl
pop
dec
push
push
filds
iret
shlb
repnz
aam
int
and
dec
inc
ja
mov
ror
cmp
into
data16
mov
sbb
push
inc
sbbb
inc
mov
pop
cli
mov
aas
or
push
fistl
add
repz
cmp
inc
sbb
mulb
pop
test
mulb
pop
idiv
aas
pop
or
ja
mov
inc
popa
jmp
negb
pushf
in
xor
div
sbbb
lock
pop
scas
add
mov
xor
bound
sub
mov
cli
lds
in
out
imulb
mov
fsub
int3
push
mov
pop
jbe
pop
addr16
push
dec
popa
add
jle
mov
in
xchg
test
nop
dec
out
sahf
push
pop
clc
mov
lea
stos
or
adc
sbb
lea
push
mov
sarb
dec
and
xor
aas
imul
in
out
cltd
jno
push
jmp
cmp
mov
or
xor
and
cmp
test
and
xchg
sub
and
dec
out
mov
aad
pop
or
ret
lcall
into
inc
xchg
or
jmp
sbb
in
mov
sub
dec
ss
cmpsl
mov
das
push
xor
xchg
add
popa
push
adc
call
push
xlat
js
push
xchg
arpl
inc
jbe
dec
pop
lock
addr16
push
fldcw
add
movsb
lret
and
aaa
mov
mov
addb
mov
push
addr16
loopne
fmul
dec
pop
adc
movsl
cmpb
inc
dec
pop
jbe
sbb
dec
es
xchg
outsl
clc
ss
aam
iret
lods
xor
insl
adc
adcb
das
lock
or
xchg
out
or
aas
sub
xlat
inc
div
mov
arpl
enter
and
xor
aas
mov
insl
aam
jmp
stos
in
inc
cli
js
jl
push
jp
in
push
pop
mov
popf
cwtd
xchg
jne
stos
inc
lea
daa
jp
in
je
dec
sbb
pop
dec
dec
sbb
fadds
mov
xchg
je
int
xor
pop
in
jmp
stos
aaa
jmp
add
pop
xchg
jge
xchg
fimuls
insb
mov
adc
adc
jb
popf
insl
push
inc
std
add
pop
inc
add
loop
xor
sbb
lea
xor
xor
add
cld
into
or
inc
rcll
adcb
movl
inc
mov
pop
sub
pop
or
mov
pop
lret
sbb
arpl
push
add
jecxz
push
xchg
sub
cmc
cmp
jle
out
cmp
out
addr16
jbe
and
sbb
movb
push
subb
mov
dec
cld
lods
stc
cltd
scas
mov
fldcw
xor
add
aad
loopne
out
clc
fwait
stos
sub
cmp
lds
js
or
shll
xchg
imul
es
cmc
mov
push
int
mov
pusha
pop
subb
leave
dec
std
aas
xchg
mov
mov
es
push
test
pop
icebp
daa
outsb
ficoml
fists
push
cmp
mov
popa
pop
add
adc
js
pop
dec
out
outsl
fdivrl
xor
mov
xchg
lods
push
mov
cmp
fistps
fmull
jmp
jns
incl
mov
in
mov
int3
ljmp
cmpsl
pop
out
jne
lods
sbbl
test
or
jecxz
stos
inc
icebp
xor
lods
ret
mov
xchg
out
push
xlat
inc
mov
fcomip
loope
sub
fbstp
sub
pop
push
mov
xor
negb
pop
mov
loopne
inc
jge
fs
jmp
mov
int
jg
outsb
pop
sub
fcoms
je
fidivrs
mov
and
std
sbb
adc
push
and
movsb
adc
jnp
xchg
push
lods
movsb
sub
mov
sti
mov
in
popf
test
mov
push
dec
out
imul
in
movsl
loope
les
aam
xchg
ret
aas
inc
dec
adc
iret
or
addr16
aad
push
out
mov
sbb
ret
test
jge
fs
je
pop
dec
jns
sub
lret
mov
pop
or
push
pop
jg
fwait
jmp
maskmovq
mull
stos
unpckhps
mov
scas
shlb
pop
pusha
mov
xor
mov
sbbb
rclb
xor
int3
es
sbb
pop
fmull
lds
or
mov
jb
and
leave
ret
aad
jmp
sbb
ret
jge
mov
sub
mov
imul
dec
into
sbb
jp
dec
aas
dec
mov
mov
adc
iret
inc
push
iret
adc
ficoml
xchg
cmp
les
aad
mov
sbb
inc
sbb
mov
stos
jmp
sbb
and
cmpsl
adc
mov
into
xor
outsl
mov
inc
mov
inc
sbb
adc
je
dec
scas
subl
fistpl
push
xchg
dec
mov
in
jge
and
jb
ret
push
orb
lahf
test
ljmp
icebp
push
xor
lea
jmp
push
lock
lret
lods
xor
je
stc
push
call
xor
faddl
push
push
lret
mov
cs
movsl
xor
icebp
adc
inc
dec
mov
pop
stc
arpl
out
cli
les
pop
mov
inc
xchg
xor
pop
rep
dec
mov
cwtl
test
stos
or
les
leave
test
out
push
cli
pop
mov
cmp
popa
mov
dec
mov
data16
xlat
add
insl
fists
inc
aam
add
dec
test
repz
mov
jge
popf
cmpsl
adc
fmuls
inc
and
xchg
dec
push
jns
sbb
dec
int
fdivl
gs
fsubl
xchg
sahf
lds
sub
sbb
imul
push
in
push
in
xor
icebp
int
outsl
cli
jb
out
dec
movsb
sahf
adc
lock
jge
in
mov
pushf
lock
sbb
arpl
xor
in
mov
mov
lcall
mov
push
or
adc
xor
sub
inc
sti
aaa
pop
jle
loope
ljmp
es
sub
sbb
ss
inc
xor
ret
xchg
ja
mov
sarl
fadd
cwtl
adcb
out
xchg
cmp
test
inc
pop
sti
addb
adc
daa
push
in
loope
dec
adc
mov
sub
dec
lds
mov
ljmp
cld
rol
adc
test
stos
idivb
lea
sbb
sub
ja
arpl
aam
push
fdivs
andl
sbb
adc
xchg
iret
pop
sahf
out
pop
mov
inc
cld
lahf
shl
pop
cmp
leave
rclb
push
lds
pop
xchg
leave
mov
xchg
adc
mov
lahf
out
mov
orb
stos
mov
or
inc
arpl
out
pusha
mov
add
cmpsb
lods
dec
mov
in
insl
adc
ss
lret
adc
loope
sub
dec
fstps
cmp
aam
mov
les
in
std
es
sub
push
and
ret
xchg
out
sbb
inc
sbbl
fadds
lods
jp
fisttps
adcb
mov
test
std
in
jbe
leave
cmpsb
call
xlat
mov
dec
pop
je
mov
test
enter
mov
repz
bound
insb
and
arpl
mov
sbb
mov
rorb
fisubrl
fiaddl
into
push
bswap
lods
cmp
mov
in
mov
xchg
stos
mov
cld
js
out
dec
and
mov
scas
shll
mov
adc
inc
adc
repz
mov
enter
jg
stos
inc
or
fs
test
cmp
inc
pusha
mov
cmp
pop
sub
cmp
inc
repnz
sub
lods
mov
out
xor
mov
inc
rclb
and
incb
testl
inc
fdivl
or
pop
or
prefetch
in
push
dec
nop
push
lods
out
lods
adc
push
inc
cwtl
jl
outsb
xchg
mov
test
add
xchg
jae
fwait
xchg
pop
mov
sbb
scas
xor
jg
xor
jne
pop
loope
mov
sbb
js
imul
or
jecxz
mov
pop
fimuls
or
jb
mov
xchg
dec
arpl
bound
nop
add
adc
lret
dec
bound
cmc
lahf
mov
push
push
push
addl
ds
shlb
push
push
or
daa
hlt
inc
mov
test
push
xor
push
mov
jecxz
pop
xor
mov
cmp
cmp
sub
dec
mov
fs
idivb
test
jno
in
dec
out
cmp
in
sub
lret
les
inc
dec
imulb
mov
out
dec
pop
mov
lods
cltd
cs
mov
sbb
dec
aam
xlat
cmp
arpl
adc
pushf
mov
adc
xchg
pop
dec
lret
subl
sbb
jne
push
mov
je
gs
xorb
pop
cld
lods
outsb
cltd
xchg
in
mov
loopne
xchg
popf
cmc
mov
pop
mov
out
push
fwait
test
cmc
jne
in
rorb
pop
out
cltd
adc
sbb
cmp
cmp
jp
inc
sbb
adc
insb
sbb
lock
inc
mov
nop
shlb
cmp
mov
xlat
and
jecxz
inc
sbb
je
aam
add
mov
sbb
icebp
sub
pop
movsl
int
movsb
mov
xchg
cli
cltd
and
imul
dec
adc
mov
or
mov
data16
loop
jb
add
cmp
push
adc
mov
pop
xchg
fsubl
mov
test
das
push
or
mov
lods
xchg
rcrl
add
jo
cmp
cmp
dec
in
sub
ds
es
push
addr16
sbb
fsts
mov
pop
loop
jl
ret
addl
fisttpll
lods
in
adc
xchg
icebp
lret
inc
add
or
mov
ja
ljmp
das
pushf
inc
fidivl
call
inc
es
es
cmpsb
pusha
mov
sub
add
flds
add
cmp
lret
fdivl
stos
and
lahf
cwtl
fildl
dec
cmp
adc
fisubs
and
xor
adc
sub
das
jg
fistps
xor
jp
pop
dec
and
ret
repnz
and
in
pop
mov
push
mov
or
popa
lds
cmp
fists
fisttpl
cmpb
adc
inc
push
mov
insb
adc
mov
pop
cmp
cld
lcall
loop
lret
popa
jne
icebp
mov
shlb
adc
jle
adc
nop
fsub
xor
jnp
and
fisttpl
xchg
insl
iret
or
leave
cmp
sub
pop
jbe
movsb
mov
sbb
push
cmc
and
inc
inc
sbb
inc
sub
mov
sbb
jae
lods
insb
lahf
and
pop
pop
fmul
aam
sub
xor
push
mov
call
loop
xlat
adc
adc
xor
mov
cld
pop
iret
pop
daa
sub
push
jno
jae
sub
insb
sub
mov
data16
enter
out
faddl
add
mov
cmc
push
imul
mov
mov
xor
mov
or
mov
or
les
mov
scas
arpl
and
sbb
jle
lahf
rep
loope
in
sbb
scas
xchg
fs
sbb
in
jnp
inc
test
or
mov
mov
mov
int
add
lahf
or
lock
insb
lods
ljmp
sbb
clc
or
push
dec
xlat
addb
jp
mov
into
js
jmp
push
or
xlat
inc
loope
fbstp
add
mov
fstpl
lds
or
push
jae
incb
add
cmp
cld
xchg
loope
ror
push
adc
cmp
dec
and
lahf
stos
out
lea
mov
imul
inc
mov
js
hlt
cmc
mov
mov
test
dec
pandn
mov
xchg
fs
fucomi
fbld
push
pop
jmp
xchg
pop
stos
aad
pop
mov
movsb
leave
pop
aad
xchg
inc
dec
mov
mov
push
and
scas
repnz
enter
ljmp
sub
cmp
xchg
push
cmp
outsl
outsl
sar
arpl
shrb
xor
rorb
pop
ret
xchg
sub
dec
push
push
out
push
movsl
sub
in
data16
daa
outsb
loopne
add
int3
shll
jbe
aaa
jecxz
hlt
xor
ret
push
jb
dec
pusha
dec
and
pop
cs
ret
cmp
pop
mov
pushf
or
mull
fucomp
mov
ret
insb
test
bound
pop
aad
mov
pusha
mov
jne
incl
lods
aaa
sarb
lahf
dec
mov
pop
jbe
jbe
adc
divb
fs
loope
pushf
frstor
pop
adc
and
lret
cmpsb
inc
fldt
enter
jl
test
push
jno
dec
mov
insb
imul
sbb
push
xor
push
into
stos
inc
adc
pop
jns
popf
mov
fldt
ss
andb
out
sbb
nop
push
mov
lahf
cwtl
cmpl
mov
and
jbe
xor
out
dec
mov
xchg
push
add
mov
scas
xchg
fcoms
add
xor
pop
adc
cli
push
xchg
push
pop
lods
cmp
dec
or
dec
fisttpl
pop
push
jae
adc
mov
lock
sub
fld
or
mov
push
jecxz
sti
sub
in
mov
xchg
dec
aam
ds
ret
js
cmpsb
mov
adc
lods
xchg
fstpt
mov
cltd
xchg
jno
stos
in
jnp
xchg
cld
in
sar
push
xchg
xchg
test
iret
xlat
xor
add
stos
les
push
icebp
lahf
and
jb
arpl
add
in
mov
mov
test
adc
scas
test
mov
inc
xchg
nop
mov
leave
arpl
imul
xor
xor
pusha
dec
pop
cltd
cmp
fiadds
pusha
xchg
mov
mov
repnz
fldt
frstor
add
push
pusha
cltd
and
jae
loopne
sti
pushf
mov
mov
push
inc
sub
pop
xor
cmpsb
out
lods
mov
popf
imul
scas
push
mov
insb
or
rclb
mov
mov
dec
adc
out
push
push
and
sub
xchg
jmp
lcall
andl
mov
repnz
je
inc
and
sbb
pop
test
mov
jg
fstl
fstp
xor
dec
jo
jp
hlt
and
fcmovbe
in
scas
in
pop
fwait
aad
sbbb
insl
aaa
jg
cmpsb
out
shl
gs
adc
push
adc
inc
arpl
pop
sahf
mov
push
mov
sbb
stos
iret
adc
enter
pop
xor
imul
movsb
dec
mov
xchg
insl
add
jmp
hlt
data16
cltd
fisubrl
fisubl
push
mov
adc
push
aad
push
xchg
cmp
std
pop
jb
popa
and
add
std
icebp
insl
ja
adc
adc
ret
or
cs
xchg
jbe
mov
xor
insb
mov
adc
jno
jle
and
mov
popa
pop
inc
xchg
dec
mov
scas
inc
mov
cmp
clc
pop
ret
adc
pop
mov
pop
inc
cs
mov
aaa
xchg
adc
add
lds
mov
test
mov
aam
hlt
loop
fisttpll
cld
repnz
cmp
jne
sub
push
mov
ljmp
dec
mov
int
in
xchg
out
inc
test
int3
dec
ss
ret
sbb
jle
stos
add
ljmp
dec
mov
out
jb
into
aas
mov
add
shrb
sbb
aaa
fsts
add
sahf
push
mov
mov
imul
cmpl
fdivl
bound
inc
mov
jne
mov
enter
mov
dec
jnp
mov
sub
cmp
push
xor
mov
mov
movsb
sbb
push
fbstp
mov
popf
repnz
cwtl
pusha
cmp
ja
movsl
pop
pop
push
inc
jmp
cwtl
sub
aas
iret
mov
into
push
dec
push
xchg
mov
rcrl
xchg
pop
mov
movsl
or
fsubrl
jns
inc
xchg
cmp
repnz
or
in
mov
cs
movsb
xchg
xchg
jle
rorl
mov
shrb
fsts
sub
xor
lret
jge
stos
xchg
subb
add
sbb
insb
stos
in
fcompp
mov
aas
loop
aas
cmc
movsl
shll
lock
dec
push
cmc
jecxz
cmp
jae
pop
sub
sarb
inc
ja
clc
pop
std
sbb
pop
nop
xor
and
and
fwait
jbe
add
das
xchg
inc
sahf
leave
mov
xchg
in
pop
sub
addl
iret
cmp
loop
sbb
sub
xchg
sti
out
add
xor
jg
sbbl
mov
shll
fdivl
out
fmuls
inc
nop
push
insb
mov
fs
and
sbb
and
and
adc
sub
repnz
mov
adc
ret
fcoms
and
stos
fwait
cmc
dec
xor
lock
imul
leave
lock
sbb
xlat
jmp
cmp
sbb
xchg
mov
stos
or
inc
jle
pop
or
push
jmp
icebp
sbb
fbstp
js
pop
adc
add
sbb
xor
divl
xchg
cmpsb
test
xchg
aas
stos
cltd
add
js
ds
inc
mov
or
in
dec
xor
dec
xchg
mov
fdivrl
lea
pop
cld
nop
and
out
sub
into
jl
mov
sti
push
jae
dec
cli
jno
mov
adc
imul
push
mov
pop
jmp
mov
sub
dec
gs
hlt
xchg
insl
shlb
fiaddl
jg
pushf
xchg
pop
lret
in
rol
sti
nop
sbb
xchg
and
inc
xchg
std
lret
push
pop
cld
cmc
pop
add
and
cmp
test
scas
andb
sbb
xchg
push
je
add
mov
cmp
push
shlb
adc
daa
dec
xor
mov
pop
adc
add
shlb
cmpsb
cli
aaa
cmp
ljmp
mov
sub
inc
rcrb
cld
mov
lcall
mov
push
mov
scas
push
incl
adc
or
and
inc
add
mov
mov
fsubl
ret
add
test
decl
loopne
pop
jns
sti
sub
add
inc
test
xchg
addr16
rcrb
out
outsl
sub
inc
sub
cwtl
adc
rol
add
icebp
fisubrs
aad
arpl
xchg
outsb
ret
dec
ljmp
sub
mov
pop
inc
or
nop
push
hlt
in
dec
sti
fisubl
or
repnz
jb
mov
sub
jmp
nop
ljmp
xchg
dec
les
cli
inc
jl
push
ficompl
int
ljmp
lds
pop
mov
cmp
sub
inc
xchg
jbe
sub
daa
test
jmp
xchg
repnz
pop
push
outsb
jge,pt
fldenv
and
int
jecxz
push
inc
add
fs
cltd
ret
sbb
jge
or
mov
arpl
aad
inc
fidivrl
and
cmpsb
dec
sbb
cli
jecxz
rcrl
loopne
mov
push
test
popf
cmpsl
push
test
fmull
arpl
cs
jnp
inc
inc
dec
xchg
lods
test
lahf
fcoms
js
pop
mov
xor
sbbl
aaa
nop
icebp
mov
sbb
cmp
mov
fsubs
std
mov
lods
xchg
xorb
mov
repz
loop
out
inc
dec
cld
jne
cli
sbb
push
fisttps
and
xchg
arpl
sar
jp
insl
push
aad
enter
fisttps
adc
lret
and
or
test
inc
js
mov
push
fwait
outsl
loopne
jne
mov
int
fimuls
sub
cmpsl
pushw
in
sub
in
sar
in
mov
sahf
and
popf
pop
shll
lret
movsl
cwtl
pop
jmp
pop
push
add
dec
popf
loop
or
mov
sbb
and
insb
test
js
xchg
sahf
and
xor
cmp
push
push
fsubrl
jnp
fwait
adc
mull
and
lahf
lret
pop
test
inc
adc
inc
mov
inc
pop
ja
sti
dec
ret
cmpsb
lret
mov
pop
pushf
push
das
test
jne
push
ret
insl
insb
lods
jge
mov
jno
push
push
pop
xchg
cmpsb
je
pushf
push
in
pop
pusha
stos
rcrl
stos
mov
inc
in
ds
pop
and
push
iret
xor
xor
sub
or
ss
icebp
das
orb
mov
addr16
xchg
mov
shll
push
and
xlat
mov
and
and
rol
ja
sub
sahf
cld
inc
aas
scas
and
jo
outsl
cmc
push
push
ret
popf
xchg
addr16
insl
xchg
ret
lods
mov
fwait
pop
pop
inc
mov
jl
fsubp
lahf
pusha
push
mov
pop
fs
xchg
in
and
xchg
sbb
rolb
imul
jae
lock
shll
stos
xchg
xchg
adc
jno
pop
test
xchg
outsb
add
adc
mov
mov
and
popa
ss
adcl
push
stos
xor
cmp
mov
sbb
movsl
and
push
movsb
aam
push
lods
fdiv
pop
xchg
jecxz
iret
push
push
cmp
mov
sbb
xor
pop
adc
in
fst
cmp
adc
xlat
lds
in
cmp
cmp
push
pop
outsl
lret
ds
cmp
adc
jmp
xor
in
jle
notb
mov
mov
sub
mov
add
pop
mov
push
mul
mov
pop
xchg
mov
xchg
ja
mov
enter
dec
adc
leave
scas
fcomps
pop
dec
aaa
inc
lock
inc
push
mov
jnp
push
dec
jae
adc
lods
xor
pop
test
cmpsb
cli
sbb
cmpsb
out
lock
aaa
lods
xlat
push
sarl
fidivrl
xor
movsl
jo
adc
lahf
dec
imul
pop
mov
mov
xor
leave
or
xchg
add
setns
dec
cli
fnstenv
sbb
lods
shll
insl
lahf
popa
clc
or
jg
mov
shr
test
mov
imulb
fcmovbe
add
pop
jp
dec
inc
add
adc
or
rorb
cmp
cmp
icebp
jbe
cmp
daa
xorl
xchg
aas
icebp
mov
repnz
notb
ret
sahf
aad
mov
test
stos
fisttpll
test
popf
mov
inc
xchg
test
sub
push
xor
lahf
mov
mov
jne
aaa
loop
mov
push
lret
popf
imul
icebp
sbb
push
add
jnp
inc
pop
or
mov
push
inc
out
dec
jg
ja
xorb
sub
jle
sti
sbb
lss
test
shll
xor
roll
sub
push
sahf
jecxz
inc
cmpsb
cmp
push
adc
test
adc
arpl
bound
inc
jg
stos
imul
add
sbb
inc
rorb
add
jns
mov
pop
jp
pop
jle
push
daa
inc
imul
mov
sbb
push
pop
fcoml
mov
jge
inc
je
in
inc
sbb
or
dec
mov
fsubr
mov
or
es
es
test
shr
push
outsb
bound
push
imul
call
lea
insb
aaa
jb
incl
stos
stos
or
aaa
es
dec
mov
cwtl
sub
jge
pop
sub
ret
push
sahf
andl
push
bound
adc
cmp
in
lds
test
mov
adc
negb
pop
test
in
imul
test
scas
cmp
cmp
and
fwait
sub
sbb
mov
xor
mov
or
nop
jg
sub
das
enter
or
inc
push
aam
std
pushf
lock
pop
mov
or
pop
dec
push
gs
mov
lcall
jae
shlb
or
shrb
cltd
lret
subb
xchg
xchg
cmp
inc
adc
dec
in
pop
sahf
mov
negb
in
sub
jp
sub
inc
out
pop
pop
mov
jmp
arpl
in
jmp
pop
xchg
push
sbb
mov
mov
mov
jns
pop
mov
jae
rcl
inc
stc
lahf
mov
jge
gs
out
xchg
stc
sub
mov
lea
lods
mov
stc
mov
pop
and
lock
jno
aaa
push
xor
dec
fbld
cmpsl
push
adcb
clc
cmp
ljmp
mov
sub
xor
stos
ss
jl
mov
xor
cmp
std
cwtl
push
cli
sbb
add
sbb
ljmp
dec
insb
lds
in
push
mov
fsubrs
lret
aaa
pop
imul
fldcw
cmpsl
push
out
adc
adc
cwtl
out
clc
mov
lret
mov
dec
mov
aaa
movsl
mov
shll
nop
cwtl
daa
sbb
andl
cmovge
xor
pop
mov
add
lcall
push
xchg
adc
cmpsb
into
and
rorl
inc
out
fsubr
jb
mov
dec
sub
push
xor
or
sub
subb
xchg
sub
push
js
movsl
dec
jbe
lods
jmp
movsl
js
sub
mov
loope
decl
add
imul
pop
or
jp
loop
cmp
add
cltd
jp
rclb
cmp
mov
repz
out
jl
sbb
inc
outsl
pop
lret
mov
repnz
pop
mov
mov
fsubrl
mov
push
pusha
mov
loop
test
cmp
cmc
mov
outsb
and
in
aad
sub
jnp
fcmove
adc
mov
mov
dec
inc
dec
jne
jbe
cld
pop
xor
lea
mov
mov
sbb
mov
in
dec
sub
stc
test
xlat
fcomps
psrlw
push
mov
hlt
jl
and
and
inc
icebp
push
dec
jge
push
push
out
mov
outsl
dec
je
shll
dec
loop
cmpsb
mov
sbb
push
lahf
ret
stos
popf
jecxz
pusha
lock
int3
dec
inc
and
in
cmpsb
ja
aaa
sbb
adc
in
xchg
cmp
js
arpl
loop
lret
push
xchg
cs
adc
insb
or
sbb
imull
inc
les
push
in
mov
mov
inc
inc
ret
mov
mov
fstpt
outsb
jp
push
inc
sbbl
sbb
or
cltd
push
and
adc
mov
or
fimull
inc
sahf
pop
ss
hlt
test
push
push
cmp
add
lret
subl
imul
daa
lods
or
fdivrs
push
mov
mull
adc
lret
dec
imul
push
sbb
or
dec
xor
incl
inc
pop
addr16
aaa
dec
mov
sbb
cli
loope
pop
cmp
insl
push
int
ret
mov
mov
test
add
shl
fdivrl
jg
loopne
xchg
xor
fldt
les
inc
xchg
push
pushf
jg
cmp
in
jg
dec
enter
pop
pop
adc
fimull
stos
add
add
xchg
push
push
mov
lret
loope
inc
mov
lahf
mov
push
pop
pop
je
mov
in
mov
mov
enter
sbb
pop
outsl
cwtl
test
xor
inc
mul
sti
rorb
outsl
test
inc
mov
mov
pop
cwtl
loopne
pop
sbbl
je
xchg
je
cld
call
push
inc
add
push
mov
sub
xchg
pop
loopne
add
pop
mov
pop
sbb
shll
sub
dec
mov
std
mov
xchg
jns
inc
add
dec
aas
dec
dec
psubsw
dec
sbb
insb
jb
jne
cmpsb
das
sbb
ret
add
imul
or
test
cmp
mov
test
mov
add
push
into
loopne
mov
test
sbb
pop
js
ja
sub
rorb
add
xchg
inc
mov
jbe
fisubl
pop
fildll
push
aam
out
push
inc
inc
pop
sub
mov
test
stc
fistpll
mov
stc
clc
cmpsl
xchg
jne
lock
add
orb
push
and
or
push
adc
fwait
dec
jmp
movsb
or
jo
xor
rclb
or
mov
push
repz
bnd
arpl
icebp
clc
or
sub
xchg
sub
out
or
inc
pop
aas
incl
movsb
push
xchg
enter
pop
inc
jl
sahf
inc
cmc
or
push
cmp
mov
dec
test
pusha
popa
sub
mov
popa
cmpb
nop
adc
inc
mov
mov
stc
pop
test
std
shrl
xor
xchg
test
lds
mov
mov
pop
cmc
insl
pop
xchg
cmp
xchg
push
and
xor
xor
inc
push
popa
cmp
inc
loope
rclb
sahf
xchg
call
ds
loop
push
popa
loope
pop
xlat
cmp
repz
mov
out
jne
inc
stos
idivb
out
push
aad
ror
inc
inc
sub
stc
es
clc
xchg
add
orb
call
or
inc
mov
sbb
into
fwait
jbe
lods
call
cld
decb
jp
dec
xchg
inc
gs
push
push
pop
in
jbe
ret
lds
or
cmpsb
popa
dec
mov
das
push
jl
int3
sbb
jge
sub
mov
jmp
test
cmpsl
sub
jae
add
cmpsb
push
out
sarb
or
lods
cmpsb
fmull
scas
mov
fstpt
adc
cmp
push
jmp
cmpsl
roll
jp
incl
add
xchg
fisubrl
fwait
nop
cwtl
test
pop
mov
add
test
test
jnp
repnz
into
push
and
mov
sbbl
movsb
xchg
out
xor
jmp
cmpsb
dec
cmpsb
and
cmp
lock
mov
sti
xorl
add
enter
sbb
and
in
icebp
cmp
and
inc
ret
mov
es
mov
pop
inc
adc
sbb
pusha
sahf
xchg
and
rol
mov
fmull
call
xor
es
pop
xor
mov
cwtl
cmpsl
jecxz
mov
xor
stos
fs
inc
xor
push
mov
pop
prefetch
xchg
pop
inc
sbb
fsubs
pop
scas
and
mov
xchg
int3
mov
mov
mov
jno
mov
lods
push
ret
out
dec
pop
add
test
mov
add
or
jo
mov
shr
faddl
sub
dec
pop
and
push
jo
add
push
insl
rorb
shrl
std
sub
ljmp
pop
mov
push
std
jns
dec
lods
push
movsb
sub
lcall
cmp
jnp
movq
mov
pop
xchg
andl
push
sub
fwait
lods
cld
adc
cmpsb
cmpl
ljmp
dec
test
in
push
mov
mov
adc
daa
inc
aas
lahf
mov
clc
and
mov
adcl
push
pop
xor
stos
pop
and
decb
dec
repz
loope
iret
push
popf
push
fxch
es
sahf
jmp
ljmp
sbb
leave
pop
jmp
mov
mov
enter
and
pop
je
lahf
ljmp
cmp
xchg
sub
hlt
inc
fidivs
push
xchg
dec
mov
pop
push
adc
scas
inc
cmp
testl
push
neg
sbb
popf
adc
inc
mov
adc
and
popa
dec
roll
mov
lods
xchg
mov
enter
mov
das
xchg
jecxz
sub
cwtl
pushf
imul
repnz
in
mov
jecxz
enter
and
jbe
dec
lcall
mov
cwtl
jecxz
mov
pop
dec
les
leave
in
lea
iret
fidivs
shrl
orl
jp
xchg
loop
xchg
in
jo
pusha
push
insb
mov
rolb
clc
xchg
aas
cmp
add
enter
xor
jae
in
mov
shlb
lahf
cmc
lret
add
push
daa
mov
mov
jae
add
imul
or
loope
pusha
jg
addr16
js
pop
mov
jbe
mov
dec
push
in
shlb
clc
add
sbb
daa
rdtsc
sahf
cli
mov
loope
cmp
je
cs
ljmp
jno
mov
and
ret
out
aad
and
pushf
mov
insb
stos
or
push
loope
mov
cmpb
imul
bswap
lret
repnz
and
dec
mov
adc
stc
das
es
loopne
lret
mov
lods
fbld
call
add
and
mov
mov
out
out
pop
mov
mov
jbe
loope
xchg
int
add
imul
xorb
sbb
push
jecxz
lds
inc
filds
lock
mov
push
out
sti
xor
xor
mov
xor
xor
bound
leave
jl
int
pushf
adc
cmp
mov
xchg
and
mov
repz
or
out
call
adc
sbb
imul
out
enter
mov
sbb
gs
add
or
mov
add
adc
fidivl
clc
movsb
test
aad
add
aad
push
inc
into
dec
enter
rcrb
pop
mov
and
or
add
or
pop
xor
xlat
pop
nop
je
push
mov
dec
fildll
iret
adc
fcompp
pop
shl
stos
cli
cltd
nop
imul
mov
jo
jg
xchg
xor
push
add
icebp
push
mov
mov
jne
int
inc
and
lods
in
pop
ret
outsl
rorb
sub
pop
push
mov
xor
subb
std
stc
mov
outsb
xor
stos
xchg
repz
add
dec
jg
call
xor
shll
scas
insl
inc
popa
notb
out
rolb
or
in
into
jns
push
lahf
cmpl
scas
add
mov
jno
ljmp
xchg
lock
nop
scas
iret
gs
repnz
jne
or
inc
jb
xchg
inc
arpl
xchg
outsl
fs
fnstcw
mov
mov
xchg
rclb
sbb
cmp
or
xor
sbb
stc
pop
cmp
pop
shl
sub
xchg
inc
fnsetpm(287
xchg
adc
lahf
adc
addr16
into
addr16
mov
scas
push
xor
mov
aad
out
jno
jae
jo
cwtl
push
xchg
inc
loope
xchg
in
test
ret
rcl
je
push
dec
cmp
lea
adc
push
inc
fdivl
test
dec
shl
pushf
or
stos
mov
test
mov
pop
sub
cwtl
adcl
mov
dec
rclb
fdivr
xchg
lahf
cmpsb
adcl
es
and
pop
mov
mov
jl
push
dec
add
stos
xchg
lret
xor
dec
sub
enter
and
testb
movsb
push
rcrl
mov
dec
xor
addr16
inc
xchg
push
dec
push
sub
mov
rol
ss
clc
pop
stos
add
decl
es
imul
sbb
jge
jbe
aaa
data16
xchg
hlt
scas
out
mov
ss
lea
pushl
aad
lret
push
not
lods
dec
fsubrp
cld
repz
adc
aaa
repnz
xor
mov
push
sub
mov
mov
loope
rorl
idivb
mov
int3
fildl
out
in
mov
sahf
pusha
fwait
inc
cmpsb
loope
sbb
das
or
xchg
aas
pop
roll
sbbl
cmc
jno
outsb
insb
lea
xchg
stos
push
xchg
sti
jecxz
scas
gs
out
sbb
icebp
sub
aas
movsl
fcoml
sbb
pop
icebp
jmp
inc
sbb
xchg
iret
push
mov
mov
dec
adc
lret
popa
sub
and
pusha
cwtl
lods
mov
sahf
movl
mov
lea
repz
outsb
lods
push
jne
inc
out
mov
and
or
lods
adc
fisubs
or
and
and
and
shr
rcll
aaa
sub
js
ds
cltd
insl
loopne
lock
fimuls
cld
mov
cld
fcomp
scas
repz
pop
cmc
push
adc
add
add
inc
imul
pop
cli
xchg
pop
imul
enter
add
aas
cmc
loope
popa
inc
sub
jle
into
sti
add
cmp
rol
or
inc
pop
xchg
les
sub
fs
xchg
gs
pop
lds
dec
ja
jp
mov
xchg
xchg
jb
je
in
mov
pop
mov
push
jns
xlat
xor
outsl
movntps
xchg
pop
xchg
mov
cmp
fistpl
jmp
jnp
or
sbb
sub
popf
sahf
xor
dec
jp
mov
popf
and
in
ud2
cli
fisttpll
fistpll
shlb
test
in
jbe
fsub
pushf
pop
imul
jg
stos
fucomip
cmp
xchg
xchg
aaa
and
out
push
nop
and
lcall
aam
outsb
push
sub
dec
dec
sbbl
les
ret
sub
mov
lahf
movb
test
adc
xor
icebp
push
call
fdecstp
and
mov
fmul
pop
or
mov
mov
inc
insl
insl
mov
mov
mov
push
loopne
movlps
inc
add
daa
xorb
mov
mov
addb
mov
jge
in
jecxz
dec
loop
jmp
arpl
mov
cmpsl
das
jle
fnstenv
xor
dec
loopne
mov
add
xchg
popa
push
inc
fwait
int3
stos
fistpll
mov
dec
shll
and
cs
loopne,pt
push
gs
int
dec
or
xchg
or
fwait
cmpsb
mov
sub
loope
imul
inc
lret
sbb
cs
sub
pop
mov
fisubrs
lahf
cli
scas
or
mov
in
sub
out
mov
test
push
aam
ja
or
in
jno
cmp
aad
test
stos
inc
clc
push
mov
sub
jb
int
cld
jns
push
insb
sbb
adc
xchg
flds
je
stos
ret
test
roll
sbbb
mov
push
iret
xchg
movsb
push
jg
mov
loopne
and
out
jno
sub
imul
mov
push
sub
mov
daa
ret
push
mov
mov
ja
mov
mov
lahf
cwtl
add
out
dec
adc
stos
jbe
pop
inc
or
scas
mov
jae
inc
fwait
cmp
stc
aas
jge
out
popa
jns
pop
add
jmp
insb
loope
ja
in
sub
pop
inc
movsb
and
mov
lret
lcall
pop
push
jns
and
xor
out
mov
sti
push
scas
int
sti
push
inc
jae
repz
and
push
push
xchg
das
clc
jne
mov
outsb
in
sbb
test
mov
insb
jmp
inc
orb
aas
push
xor
sbb
mov
aaa
mov
jae
sbb
repz
mov
mov
cmpsl
ret
mov
movsl
cmp
adcl
push
sbb
or
loope
leave
fiadds
or
loope
outsb
xlat
js
xchg
loop
push
aad
mov
lods
mov
pop
rolb
or
hlt
mov
scas
xor
dec
xor
xor
jne
cmpsb
scas
dec
arpl
sub
xchg
stc
aas
sub
out
inc
mov
xor
pop
push
test
arpl
in
ret
sbbl
aam
jge
cmp
test
cmp
xor
adc
into
insb
fs
and
ljmp
pop
mov
aam
test
scas
mov
hlt
pop
lret
sub
add
inc
fstpl
das
popw
jle
and
and
imul
jl
shll
xchg
pop
fwait
jge
xor
push
push
xchg
jb
mov
jns
dec
punpcklbw
push
divl
pop
nop
xor
jno
mov
inc
js
je
xor
push
cmp
adcl
std
pop
clc
shrb
ds
in
cld
or
xchg
icebp
cmc
dec
and
int
inc
pop
addr16
adc
iret
frstor
jnp
dec
cmpsb
rcll
mov
into
and
and
jns
fmul
push
in
jno
xor
dec
mov
or
incb
hlt
mov
ds
xchg
mov
loopne
shrl
xchg
adc
pop
pop
addr16
fstpt
inc
out
cltd
xchg
in
fiaddl
fdivl
call
ja
repz
adc
cmp
xchg
sbb
cmp
cmpsl
mov
mov
fdivl
test
push
fwait
ljmp
scas
mov
jbe
ret
push
mov
dec
and
out
mov
out
mov
jg
into
dec
jle
pusha
sub
icebp
adc
jp
sarl
add
mov
insl
es
mov
mov
xchg
jl,pn
mov
xlat
loop
pop
sbb
jo
popf
sub
add
mov
push
sub
fdiv
insb
pop
fidivrl
or
inc
pop
or
aad
arpl
out
fsubrl
add
out
mov
add
lods
mov
jle
mov
dec
adc
out
loopne
std
sbb
subb
es
and
jl
aaa
sbb
arpl
mov
lret
sub
scas
sub
fwait
add
shl
jno
pusha
sub
inc
je
inc
jle
in
js
jno
sti
ficompl
imul
mov
xor
jmp
pop
aaa
in
adc
push
xchg
push
mov
fdivs
push
lods
mull
int3
and
bound
idiv
flds
shlb
jns
int3
jo
ss
ret
lahf
xor
push
dec
dec
push
push
inc
pop
pushf
movsb
fdivrl
jo
fisubrs
mov
int
gs
ret
fdivrl
clc
mov
cltd
mov
inc
pop
loop
xor
sahf
xchg
lock
xchg
xor
mov
int
push
pop
push
sub
and
fldenv
cmp
imul
mov
aad
mov
in
mov
pop
call
pop
lea
je
sub
pop
lcall
push
arpl
gs
xlat
ret
popa
adc
data16
add
ficoml
adc
loop
mov
adc
add
ja
add
pop
dec
fcoms
mov
or
mov
cmpsb
xchg
clc
sarb
sbb
push
fisttps
lods
in
cs
sbb
push
lahf
push
pop
imul
jae
or
pusha
movsb
sahf
aad
shlb
orb
test
inc
sbb
cmpsb
jne
push
mov
lea
leave
mov
das
sub
push
xor
push
fldcw
mov
and
sbb
pushf
jge
sub
mov
repnz
mov
fldl
and
add
fisttpll
push
mov
adc
dec
in
leave
scas
jnp
pop
jmp
setge
and
mov
cmp
dec
jae
insl
imul
fistpll
mov
pop
in
ficomps
adc
cmp
push
pop
fldl
dec
test
cmp
or
mov
and
inc
lcall
mov
gs
mov
mov
les
cmp
cmp
movsb
add
pop
xlat
dec
lea
dec
into
ljmp
lcall
xchg
inc
jb
jecxz
gs
sbb
xor
scas
xchg
pop
out
mov
mov
cmpl
test
dec
js
stc
sub
call
loopne
mov
jnp
andl
fcomps
cmp
aaa
fstl
pop
cli
fists
pop
mov
pop
xchg
jmp
mov
mov
rcrl
push
dec
jo
testl
mov
ret
std
push
fs
cli
mov
inc
push
dec
pop
stc
lds
xchg
jne
jge
es
add
pop
stos
mov
or
leave
xor
jl
inc
lods
sub
push
movaps
arpl
sarl
mov
repnz
mov
xor
call
add
jbe
sbb
push
test
pop
add
ret
pop
daa
loopne
pop
dec
outsb
pop
cmpl
jecxz
je
out
scas
push
adc
adcb
cmp
add
subb
mul
out
mov
adc
dec
cld
enter
mov
mov
addr16
mov
fisttpll
aas
movsl
mov
jo
enter
adc
mov
sti
lea
dec
cmpsb
loopne
insl
pop
ja
lds
xor
pop
mov
jge
mov
int
and
mov
xlat
jge
cmp
xor
into
les
jl
gs
popa
pop
pushf
mov
jmp
icebp
and
inc
js
and
and
pop
rorb
xchg
mov
sahf
pop
pop
call
cmpsb
int3
stc
mov
dec
pop
lret
pop
push
in
nop
hlt
inc
add
adc
adc
hlt
adc
push
loop
fdivrp
rcll
dec
sub
mov
xchg
jne
or
sbb
jb
pop
push
sbb
mov
xor
jl
pop
jmp
xchg
imul
mov
imul
and
pop
jmp
inc
xor
inc
fsubl
xlat
cmc
add
pop
insl
mov
push
push
scas
call
out
dec
cld
xchg
fucomip
pop
cmp
push
arpl
sub
inc
bound
movsl
jo
jae
stc
jae
sarb
push
in
mov
addr16
jecxz
movsb
call
jmp
std
mov
roll
lcall
movsb
and
or
push
popa
in
xor
xchg
and
repnz
insl
xor
push
mov
int
sub
outsb
jne
cmp
bound
jp
adc
sub
jne
cmp
dec
dec
xadd
aad
xchg
xchg
pop
test
and
or
pop
scas
jge
int
test
fnstsw
cmpsb
add
push
or
shrl
es
pop
shlb
and
hlt
mov
mov
jecxz
mov
xchg
dec
mov
adc
mull
sbbl
pop
push
jge
or
push
sbb
repz
mov
jbe
cmpsb
dec
aas
or
lds
or
push
push
jmp
adc
mov
sbb
jno
cmp
call
in
mov
fs
inc
dec
int
sti
adc
or
movsl
pop
repz
mov
jnp
mov
clc
movsl
adc
cmc
mov
into
xchg
iret
loopne
mov
int
jbe
sub
push
ret
inc
mov
rorl
rclb
mov
sbb
pop
mov
adc
jnp
sub
orl
jle
out
lock
nop
je
add
jle
mov
lret
jge
mov
lret
ret
jb
add
jae
std
enter
sub
and
in
in
leave
fwait
je
stos
jg
inc
xlat
cmp
lea
push
out
dec
jbe
mov
ds
aad
add
pushf
repz
andl
xor
mov
cs
clc
push
cmp
adc
aaa
sub
test
jbe
inc
rcrb
cmp
scas
push
jns
cmp
xchg
push
std
adc
mov
push
sbb
mov
and
push
stc
iret
inc
pop
test
jbe
cmp
sub
sub
xchg
cli
mov
cmp
inc
inc
cmp
cmp
int3
icebp
sbb
pusha
in
dec
data16
pop
pop
sub
jb
xor
mov
xchg
int3
adc
mov
cwtl
nop
push
pop
sahf
pop
fisubl
lds
in
sub
xchg
mov
xor
inc
aad
pusha
fcomip
int3
cmp
dec
jp
jp
pop
jbe
pop
in
pop
cmp
jns
xchg
imul
pusha
jl
cltd
pop
lcall
addr16
mov
fs
sbb
rolb
movb
fldl
mov
and
icebp
push
jns
xchg
mov
adc
cmpsl
adc
movb
hlt
aas
repnz
lea
push
adc
ret
push
cmc
jb
push
jo
or
adc
adc
lcall
pop
sbb
negb
out
sbb
push
lret
or
sar
pop
idiv
repz
das
adc
push
adc
test
push
faddl
sahf
lock
cli
pop
sub
jb
int
adc
stos
mov
inc
jne
jb
test
mov
add
jg
inc
les
sbb
int
cmp
fsts
cmp
mov
pop
mov
pop
sub
pop
mov
dec
leave
aam
and
cmpsb
dec
add
cmp
cmc
movsl
xlat
pop
mov
cmp
lods
cmpsb
cmp
adc
scas
lret
lds
cmp
xor
xchg
mov
ljmp
in
pop
mov
jns
bound
mov
or
xor
sub
push
fucom
jne
inc
imul
lods
out
push
dec
adc
movl
jb
rcll
clc
repz
mov
es
xor
orl
xor
inc
dec
in
enter
push
push
repnz
cmp
add
pop
sbb
sarb
inc
sti
jae
xor
pop
je
fisubs
and
jo
mov
jb
jne
std
movsl
xor
xchg
sub
jbe
cmp
or
hlt
mov
mov
xor
movsl
stos
push
xchg
rol
mov
mov
hlt
out
cmpsl
mov
and
inc
outsb
testb
lcall
xorl
sti
mov
xchg
inc
jb
dec
lret
mov
movsb
mov
xchg
out
bound
gs
jns
inc
fs
xchg
or
cmp
xor
fiaddl
cmp
xor
jge
mov
and
dec
fwait
call
xchg
repz
insl
push
inc
out
loope
push
xor
hlt
dec
stos
and
int
push
pop
add
int
mov
out
mov
push
imul
rcrl
inc
and
shll
mov
jle
dec
ja
testb
das
mov
jno
lods
cmc
jg
sub
scas
fidivl
cmpsl
mov
pop
cmp
addr16
cmp
loopne
push
dec
int3
iret
xchg
popa
fisttpll
lcall
push
sti
push
test
mov
imul
test
pop
sbb
cmc
jge
ret
stos
into
add
adc
out
pop
xor
mov
int
lret
int
mov
sbb
mov
js
int
pop
cltd
lds
mov
push
outsb
mov
imul
scas
jb
push
je
xchg
jl
rcll
enter
jne,pn
hlt
inc
mov
mov
data16
jb
lea
jnp
fwait
cmc
out
dec
notb
scas
fwait
add
lock
dec
lds
mov
add
shlb
lret
bound
loope
das
popa
arpl
or
in
mov
cmp
push
cmp
popa
xor
mov
mov
int
cmp
test
fs
push
or
mov
cli
mov
pusha
rcrl
sbb
lcall
push
mov
mov
pop
popa
mov
cwtl
nop
fdivrl
loopne
xor
cli
bound
mov
and
cltd
add
outsl
jmp
mov
rcrb
clc
xchg
inc
mov
jge
xchg
imul
data16
shr
push
or
cmpsb
cmc
movsb
lock
test
add
shll
or
mov
out
xchg
sbb
aas
popa
jo
cmp
adc
cmp
shl
das
mov
or
sub
pusha
loop
jne
sbb
inc
jmp
jo,pt
mov
add
loope
imul
jns
movsl
cmp
pop
popa
jnp
cmp
aaa
xchg
push
xchg
sub
dec
add
push
movsb
lret
push
popf
or
ss
xor
and
lods
hlt
lock
int
jp
divl
xchg
jno
stos
cmpsl
pop
cmp
push
in
adc
push
repz
notl
clc
inc
jno
dec
sub
pusha
out
shl
lock
mov
push
pop
xchg
sbb
cmp
inc
fisttpll
iret
xchg
je
mov
jmp
xchg
jnp
lahf
mov
lret
ror
test
dec
push
rcr
pop
pop
fildll
insb
popa
jb
sbb
loope
ficoms
out
jge
jg
xor
loope
fmuls
test
or
loope
call
cmp
inc
je
stos
mov
dec
sbb
pop
cwtl
rorb
pushf
ja
pop
loope
dec
shrl
mov
sbb
or
imul
loope
add
sbb
sbb
int
xor
mov
and
dec
in
push
int
or
aaa
int
scas
lea
and
mov
pop
je
or
loop
insl
mov
roll
rorb
loop
jb
jo
xor
mov
stc
push
mov
pop
mov
xchg
ror
push
cli
in
and
sub
stos
movsb
jecxz
inc
sti
mov
mov
dec
jnp
sbb
mov
add
sti
cld
dec
push
lds
or
and
ss
mov
adc
rcrl
adc
insl
jg
and
movzbl
ret
stc
ret
aas
ss
jmp
mov
scas
or
outsl
aaa
fmull
push
clc
xchg
adc
scas
flds
inc
out
sbb
pop
imul
shlb
cwtl
and
pop
stos
popa
mov
arpl
inc
and
xchg
hlt
jl
adc
push
imul
and
fwait
mov
or
testb
mov
cmp
xchg
dec
gs
shr
mov
cli
ljmp
stc
fbstp
int3
pop
inc
ret
push
lods
add
pop
int
push
push
hlt
out
xor
das
lods
cmp
xor
inc
push
test
adc
jbe
push
and
sub
mov
xor
int3
and
stos
mov
cmp
scas
ss
clc
mov
rcrl
xchg
jg
jne
sub
fdivrs
mov
cmp
and
push
insl
test
idivb
es
imul
inc
fsubrs
divl
or
xor
cmp
pop
test
aam
mov
ss
push
pop
in
push
stc
or
sub
dec
ja
int
inc
sbb
fs
fsts
aam
xchg
adc
sbb
lock
xor
push
dec
mov
mov
das
fnstenv
lcall
stc
pop
cmp
mov
or
xchg
insb
and
imul
sarb
xor
jno
pop
pop
pop
cmpsl
sbb
cwtl
add
or
xchg
cmp
mov
mov
mov
dec
xor
mov
fnstenv
jo
sub
add
mov
and
incl
in
push
shl
enter
fidivrl
mov
push
sbb
push
xor
stos
dec
out
stc
xchg
jnp
inc
dec
xorb
push
je
push
cld
in
adc
outsl
outsl
sub
add
push
push
cmp
cmp
xchg
fists
xlat
mov
inc
jae
aam
sbbb
clc
add
lret
out
subl
mov
pop
rclb
inc
jp
jno
mov
xchg
movsl
rcrb
test
add
ljmp
nop
xchg
addr16
push
ret
adc
jmp
mov
jge
movsl
andl
add
rorl
mov
mov
sub
jecxz
rcll
mov
mov
clc
lock
bound
test
push
jbe
push
xor
lret
sahf
ss
add
cmp
or
dec
jno
gs
js
pop
lret
int
xor
mov
int
in
pushf
lret
cmp
je
mov
out
fbld
sbb
repnz
or
adc
cltd
xor
jg
jno
xchg
loope
jl
mov
adc
pop
mov
and
sub
cli
scas
xor
jnp
sub
repnz
lret
xacquire
jns
lods
aas
push
adc
mov
lcall
jp
movb
into
mov
mov
xchg
mov
fisubrs
scas
add
pop
scas
subl
add
pop
xchg
dec
andl
insb
dec
clc
jle
ret
and
cmp
mov
loopne
or
outsb
lret
jge
rorb
mov
cwtl
xor
divl
or
jae
fwait
jnp
jno
mov
pop
cmpsb
test
mov
ficoml
out
pop
mov
and
add
add
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
imul
add
addb
add
jp
cwtl
cli
icebp
stos
stc
mov
mov
aaa
adc
jo
incb
fisubl
mov
in
mov
or
int3
shrb
je
push
jl
movsb
clc
ret
add
sub
mov
cmpsb
cmp
dec
pop
dec
push
out
cmp
or
inc
into
lds
push
lret
leave
xchg
aam
add
addr16
mov
mov
nop
addl
adc
test
xlat
sub
lea
sbb
pop
repz
xchg
inc
lcall
popf
insb
or
sti
sub
mov
dec
das
sub
imul
push
jecxz
pusha
js
sbb
push
inc
jnp
jbe
mov
out
dec
lock
inc
xor
daa
adc
adc
ret
scas
mov
mov
xor
adc
cmp
push
sbb
xor
fcoml
vpcomq
pop
push
cs
dec
pop
ficoms
xchg
sbb
fstpt
rol
in
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
