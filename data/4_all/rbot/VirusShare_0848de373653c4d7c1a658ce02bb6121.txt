aas
xor
mov
or
mov
and
sti
mov
aas
inc
mov
cld
pop
pop
pushf
ror
sbb
test
shl
jecxz
lret
cmpsl
mov
mov
movswl
xlat
inc
push
dec
inc
std
out
sbb
pop
pusha
mov
ja
dec
gs
sahf
lds
lret
inc
xchg
push
jl
mov
jg
lahf
xchg
mov
bound
or
xchg
dec
leave
mov
loopne
scas
xor
insb
sub
lcall
mov
fimuls
scas
cli
jge
ss
mov
imul
daa
dec
adc
out
mov
jp,pt
dec
pop
loop
or
xchg
sti
or
lcall
popa
mov
arpl
sbb
ds
arpl
jle
cmp
lods
sbbb
jae
pushf
and
leave
shl
sbb
mov
jb
jmp
cmp
stc
and
clc
cmpsl
sbb
outsl
cmp
cmp
nop
lcall
aas
xor
loopne
js
and
mov
and
icebp
ljmp
pop
cmpsl
sub
jno
addr16
repnz
mov
popa
neg
mov
repz
ret
sub
dec
ja
push
out
or
rcrl
jle
mov
pop
mov
imulb
sub
jnp
loopew
out
mov
and
or
lcall
jp
ja
mov
xor
or
mov
into
sbbl
lcall
out
mov
ret
inc
add
mov
inc
pop
cmp
aas
mov
add
in
lcall
sbb
fbld
adc
movsl
test
negl
mov
inc
fdivrl
mov
mov
in
pop
das
push
dec
andb
mov
jecxz
daa
sarb
mov
test
fdivs
jp
mov
repnz
pop
ja
lds
inc
int
jbe
and
pop
adc
pop
outsb
lcall
nop
cli
ds
push
mov
jge
aas
jno
and
out
or
mov
fsubrl
or
lods
dec
out
lahf
pushf
sub
fimull
scas
aaa
jl
push
adc
scas
xchg
stos
and
imul
lods
push
leave
das
jl
mov
pop
imul
add
or
jmp
loop
xchg
mov
add
pop
out
repnz
and
int
pop
xchg
mov
loope
lods
es
outsb
ret
push
dec
inc
cmpl
mov
out
push
ret
pusha
sbb
xlat
ljmp
ret
movsl
cmp
repnz
jl
ror
mov
sub
out
mov
mov
dec
mov
mov
add
jae
test
xor
push
cmp
inc
mov
cmpsl
cmpsb
cmp
test
cltd
outsb
inc
or
jge
cwtl
pop
push
cmp
mov
clc
rcrb
mov
mov
stc
test
xor
inc
ret
push
inc
inc
fucomip
dec
dec
adc
mov
cltd
jb
int3
pop
daa
or
out
and
push
push
inc
mov
mov
pop
mov
aam
jne
add
cwtl
daa
sbb
pop
sbb
je
jle
mov
push
sub
mov
std
cmpsb
lret
fadds
xlat
ret
sub
arpl
and
jg
adc
lcallw
push
shrl
call
sub
aam
xchg
dec
ret
subl
xchg
add
sub
iret
add
adc
andl
jp
in
lds
pop
sbb
decl
fs
xchg
pop
bound
rorl
inc
push
mov
arpl
xchg
and
pop
jg
jns
mov
push
xchg
jnp
and
jnp
or
cmp
mov
scas
js
cmp
inc
dec
sahf
fists
aas
fucomip
test
cmp
jl
add
movntq
out
das
xor
out
mov
lahf
push
jge
add
jnp
mov
or
sub
into
adc
or
ficoml
cmpsl
add
add
ja
pop
das
aad
cmp
das
mov
and
add
fnstsw
dec
sbb
push
aaa
xchg
aam
mov
pop
adc
pop
or
shll
cmpsl
mov
xor
loop
and
outsb
movl
not
xlat
es
outsl
and
and
aad
pop
sub
jecxz
in
sti
mov
add
xchg
push
out
test
cmpsb
mov
lds
mov
shrl
fs
lret
imul
loop
mov
stos
pop
jmp
pushf
addr16
mov
cli
jg
jae
bound
aas
adc
jae
movhps
jb
inc
adc
movsb
mov
out
jne
jle
leavew
mov
and
xchg
insl
outsb
stos
fistpl
clc
ja
sub
inc
xor
pushf
stos
jp
dec
dec
imul
xchg
mov
sub
push
xchg
jmp
fsubp
pusha
rorl
loopne
mov
mov
sub
shll
cmp
clc
jle
jecxz
int3
or
xor
pushf
mov
ljmp
and
add
sub
cli
inc
mov
sbb
pop
cmc
jb
insb
dec
clc
push
adcl
cs
sti
xor
stos
into
sub
orb
scas
jae
cld
lcall
sub
rcrb
es
mov
fidivrs
loop
cli
dec
out
xor
mov
sbb
sahf
mov
fcomp
mov
sbb
rcrb
cmpsb
jg
xor
dec
test
inc
inc
repnz
and
or
xchg
ja
pop
pop
dec
das
mov
adc
cmc
sti
ja
lcall
outsl
mov
jecxz
aad
cld
ret
mov
in
movd
add
pop
lret
imul
ds
pop
dec
roll
pop
jge
mov
inc
pop
adc
mov
lods
seto
xchg
jbe
cmp
cs
jb
fnstsw
mov
add
pop
out
jmp
add
hlt
xchg
popa
decl
inc
and
add
arpl
ss
adc
data16
orb
jno
scas
xchg
sub
sub
mov
xorb
movb
sbb
xor
and
sbb
pop
mov
pop
mov
test
cld
fwait
rcrl
inc
sbb
mov
int
mov
jg
sbb
or
loop
adc
pop
test
dec
push
xchg
lret
out
cmp
and
rorb
inc
cmp
cltd
fsubs
inc
inc
inc
mov
nop
mov
mov
roll
loopne
pop
sub
stos
aaa
xor
adc
ja
rcll
fcoml
movsl
iret
movsb
dec
movsl
push
stos
pop
mov
sti
std
add
jp
sahf
ds
mov
xchg
shrl
jbe
nop
push
push
and
loope
mov
cltd
mov
and
arpl
push
movsb
xor
int3
push
jmp
and
out
mov
and
insb
jg
mov
add
rorb
mov
mov
or
mov
xchg
push
inc
movsl
push
jnp
incl
mov
gs
sub
cmpl
fiaddl
lea
mov
inc
aam
mov
shlb
aas
add
mov
and
pop
mov
adc
lds
inc
jl
dec
int
mov
push
leave
in
mov
push
pop
in
jmp
insl
scas
push
rorl
push
push
sbb
adc
rclb
into
dec
xor
pop
jg
push
adc
sbb
pop
cmc
jae
xor
lret
sahf
lea
or
adc
xchg
add
test
push
xchg
mov
mov
push
and
push
insl
mov
sub
imul
push
cmp
pop
dec
xor
mov
cld
sbb
mov
xchg
jmp
pop
test
ret
lret
mov
mov
repnz
scas
inc
mov
adc
int3
lods
cmpsl
add
sbb
push
ja
enter
fisttpl
mov
aam
jmp
lret
cmp
pop
pop
test
lock
inc
out
jecxz
cmp
mov
pop
mov
mov
mov
ja
repz
daa
mov
dec
cmp
testl
jns
jbe
pop
xor
mov
xchg
inc
inc
xor
scas
aaa
push
ret
sub
outsl
sbb
mov
fs
and
push
fidivl
mov
xchg
rcrb
jle
lahf
push
mov
dec
or
xchg
decl
das
dec
adc
jns
sub
lret
mov
lods
aaa
cwtl
adc
lcall
xor
cwtl
out
jnp
mull
or
xchg
mov
gs
loop
sahf
das
stos
jle
mov
es
dec
mov
jg
scas
adc
cmp
push
mov
mov
mov
push
nop
add
inc
mov
cmp
xor
shll
sbb
stos
dec
or
mov
cltd
call
rolb
fwait
dec
ss
push
scas
and
rorb
mov
mull
fcmove
les
int
jmp
push
outsb
cmc
rclb
jo
lcall
xchg
inc
mov
sub
jecxz
test
test
cmp
pop
sub
clc
mov
sub
xchg
add
das
ja
jne
movsb
jns
dec
adc
or
jb
jg
jg
stos
inc
lret
mov
leave
pop
fs
jge
je
fwait
arpl
add
xchg
xchg
out
sub
sub
mov
ret
out
and
popf
push
sub
rolb
cmpsb
div
out
jmp
mov
pop
iret
push
xlat
xchg
cmp
aaa
ja
mov
cmpsl
and
les
scas
sub
cmpsb
stos
dec
dec
imul
movaps
daa
jbe
ffreep
in
lods
daa
mov
mov
pop
repz
xchg
cmp
cmpsl
sbb
add
daa
je
or
adc
jecxz
fdivrl
cmp
pop
xchg
inc
mov
pop
xchg
sub
aad
out
fxch
js
fistl
pop
xlat
lock
dec
xchg
hlt
lss
push
mov
cli
pusha
repz
in
jg
cmp
push
push
sub
and
dec
icebp
pop
adc
loopne
call
ja
je
dec
pushf
jb
clc
subl
push
stos
push
cmpl
xchg
hlt
and
bound
fs
sbb
hlt
jl
sti
inc
dec
xchg
xlat
xor
dec
jmp
mov
dec
dec
in
jle
jmp
mov
xor
xor
mov
ja
mov
aaa
xchg
outsb
push
insl
inc
inc
jns
push
add
dec
dec
jmp
lret
stc
xor
adc
dec
xor
repz
push
add
lods
call
or
add
std
clc
mov
divl
add
mov
jne
lock
xor
lahf
outsb
push
sbb
shll
mov
add
jnp
pop
push
out
push
aas
inc
xchg
sbb
xor
movsb
dec
dec
sub
lcall
inc
je,pt
sarl
lahf
test
mov
sahf
xor
xchg
loop
fisttpll
fidivrl
je
out
fcom
out
add
loop
xor
mov
cltd
shlb
mov
test
mov
pop
lds
adc
and
pop
loop
xchg
imul
and
fldl
pop
pop
mov
cmp
cmp
adc
inc
ret
jbe
pop
fdivp
out
rcrl
xchg
inc
mov
ds
jno
add
data16
jmp
and
xlat
stc
sarb
or
xchg
shll
lret
outsl
movsl
loope
addl
pop
pushf
stos
pop
out
xlat
addr16
sub
arpl
movsl
and
inc
dec
mov
cs
mov
outsb
loope
daa
add
mov
pop
jne
insl
jbe
js
arpl
nop
adc
fwait
sbb
and
inc
jmp
mov
mov
cmc
pushf
adcl
sub
ret
sub
je
xor
pop
xor
addl
int3
mov
popl
pop
jmp
shlb
jns
cmp
xchg
test
xchg
jecxz
pop
mov
push
rcl
jg
lods
popa
xor
sub
test
es
and
mov
pop
loop
push
sub
mov
inc
mov
add
sti
cli
cmp
or
sbb
cmp
stos
sub
dec
mov
mov
mov
add
orb
out
scas
test
pop
xchg
negl
or
xchg
adc
imul
xchg
lcall
inc
test
push
cmp
mov
mov
outsl
lahf
les
in
push
cwtl
mov
shlb
pop
add
cli
xor
andl
insl
std
mov
add
cmp
jo
push
adc
and
outsl
inc
lret
add
sub
dec
cwtl
lret
int
outsl
lret
jnp
in
xchg
fwait
adc
dec
pop
shl
inc
jg
out
push
dec
js
sub
cs
pushf
inc
jle
sub
popa
pop
inc
pop
jae
jno
lock
or
dec
outsb
bound
fcmovu
aaa
jnp
stos
lret
je
cmp
pop
push
pop
ret
mov
mov
jo
hlt
or
imul
out
aad
push
in
pop
out
rorl
mov
arpl
mov
add
ljmp
cld
push
es
stos
pop
aas
xchg
mov
add
mov
cmp
mov
lods
and
xor
jo
push
inc
addb
in
pushf
insl
cmp
insl
clc
hlt
jp
mov
enter
mov
mov
std
ja
nop
shlb
xchg
sub
add
mov
dec
loopne
imul
xlat
lret
inc
sbb
pop
fwait
insb
insl
stos
xor
sub
pop
mov
and
cmp
ret
jecxz
not
sti
out
mov
push
mov
inc
mov
jb
imul
push
sbb
and
cmp
and
sbb
cwtl
cmp
adc
mov
xchg
mov
push
ds
scas
arpl
xchg
mov
lret
and
jg
mov
lods
roll
ficoms
in
sub
lea
bound
imul
dec
cltd
pop
js
mov
aaa
dec
xchg
xchg
out
push
xor
adc
dec
cmp
pop
rcr
ja
mov
xchg
jmp
pop
jp
sub
scas
popa
mov
stc
pop
sub
jle
and
mov
fbld
mov
or
gs
xchg
cmpsl
jb
mov
push
jne
add
cmp
rcrb
ja
out
add
push
xchg
data16
or
cmpsb
mov
scas
arpl
and
lret
adc
lods
mov
mov
xchg
jg
scas
pop
imul
es
shrb
pushf
jmp
jp
mov
bound
sub
mov
hlt
das
popf
dec
sub
push
lahf
lock
jno
pusha
or
mov
mov
imul
cmp
cli
shrb
jp
inc
sbbl
idivl
cmc
sbb
mov
adc
jmp
xor
rorl
cmp
mov
cli
cmp
push
and
sbb
test
adc
sub
test
bnd
sub
and
out
scas
bnd
fisubrl
pop
out
outsl
adc
ffree
adc
out
or
ljmp
xor
adc
xor
pop
outsl
loope
test
and
jmp
iret
mov
dec
push
insb
fcmove
movsl
bound
pop
stc
imul
mov
mov
inc
leave
pushf
mov
xlat
mov
jg
xchg
pop
mov
jno
mov
sti
dec
repnz
fbstp
outsb
xor
shlb
adc
inc
mov
sbb
test
sub
pop
pop
out
pop
pop
out
xchg
pop
adc
ss
push
daa
ljmp
inc
aad
test
push
fwait
jp
movsl
outsb
mov
pusha
push
push
inc
lahf
sbb
call
or
or
add
push
lods
mov
sub
jge
in
je
mov
push
add
jae
fstl
dec
mov
test
sarb
loopne
testl
fnstenv
lods
jb
rol
xchg
clc
pop
dec
daa
fdivrs
mov
mov
jmp
jg
rcll
jecxz
fisubrs
jecxz
cmpsl
stos
clc
loopne
xor
xchg
loopne
push
cmp
mov
jp
loop
mov
xlat
pop
mov
mov
into
add
sub
add
arpl
dec
aaa
xchg
ret
cmp
imul
scas
mov
add
pop
mov
dec
push
xor
dec
push
xchg
cmp
push
subl
in
push
mov
les
mov
mov
scas
insb
scas
adc
loope
dec
orb
inc
push
ret
clc
push
aad
notb
sub
out
insl
push
scas
cmpsb
pushf
fwait
inc
or
cwtl
mov
mov
mov
fs
cmp
leave
dec
dec
sbb
mov
xor
inc
jmp
inc
inc
dec
xlat
repnz
push
scas
xchg
jmp
mov
jg
ds
mov
adc
push
cmp
test
rolb
sub
mov
mov
xor
movsl
cmp
cltd
insb
xor
xchg
daa
and
jo
mov
xor
imul
inc
lock
lahf
jmp
sbb
mov
ljmp
push
adc
or
mov
popf
pop
icebp
shl
mov
and
dec
dec
pop
outsb
daa
xchg
mov
js
mov
cmp
mov
lret
push
inc
repnz
mov
test
xor
out
add
adc
push
das
cmp
jae
sbb
adc
push
xor
inc
es
push
jg
hlt
jg
test
fcomps
push
jb
or
scas
adc
jge
adcb
jecxz
push
and
jnp
mov
shrb
data16
cmpb
dec
adc
cmp
das
xor
or
js
and
xchg
mov
dec
pop
loopne
dec
xlat
sub
inc
aaa
or
pusha
test
and
dec
inc
mov
je
ret
push
dec
push
sti
mov
sub
push
lea
dec
adc
cmp
jb
mov
add
mov
mov
ss
cld
loope
mov
les
jge
nop
cmp
or
cmp
jg
fs
mov
movhps
xchg
cmp
dec
dec
cmp
pop
inc
sub
sub
xchg
outsl
dec
sbb
fidivs
pop
ret
dec
add
cmp
inc
sbb
adc
push
inc
or
inc
addr16
push
adc
mov
test
xorl
insb
nop
aas
ds
add
push
mov
out
loope
js
dec
mull
test
jns
adc
push
popf
pop
out
call
jecxz
ss
xor
xchg
cli
push
dec
inc
push
cmp
mov
ret
xor
mov
les
inc
xchg
mov
js
imul
jmp
mov
inc
mov
loopne
enter
mov
xchg
xchg
into
jae
and
jnp
out
mov
jb
sbb
push
jo
mov
lahf
sti
push
mov
jno
pop
fld
mov
pushl
jo
arpl
jns
retw
stos
lcall
inc
adc
jmp
repz
ret
dec
cwtl
adc
xor
sub
mov
es
cmp
ja
jmp
dec
add
mov
mov
dec
cmpsl
stos
jecxz
jle
adc
jb
lret
mov
sub
inc
js
into
pop
bound
sbb
xlat
cmpsb
scas
jbe
pop
or
hlt
hlt
fisttpll
lock
out
pop
or
nop
mov
sub
mov
mov
js
aad
loope
fs
pop
lahf
shl
arpl
test
int
lods
jl
sub
lods
jmp
addr16
or
push
into
call
ljmp
pop
and
mov
and
sbb
add
jecxz
mov
adc
int
filds
mov
subb
aad
stos
nop
out
push
push
cmc
mov
imull
adc
and
imul
fwait
loopne
or
stos
xchg
ja
mov
lahf
mov
and
and
movsb
lret
lods
inc
stc
daa
insb
pop
popf
mov
push
loop
faddp
sar
loopne
jb
add
xchg
std
adc
sbb
arpl
int3
cmpl
movsl
push
popl
stos
incl
fnstenv
cmp
dec
jne
dec
in
imul
ret
dec
insl
mov
push
inc
ret
add
out
or
jnp
and
inc
mov
popf
lds
std
imul
mov
call
mov
or
xor
mov
pop
mov
rorb
fcmovnbe
cltd
in
adc
sub
in
adc
out
inc
push
pop
sbbb
push
cmc
into
xor
in
add
cld
xor
xchg
mov
mov
lret
loop
scas
lcall
lret
js
push
cmp
adc
lret
lcall
out
fbstp
pop
push
push
mov
repz
scas
sub
jo
jcxz
pop
inc
pop
lret
jmp
fstpt
xchg
pop
nop
jmp
add
pushf
sub
les
in
rorb
shrl
ja
sahf
jp
lds
and
push
hlt
cmpsl
jle
jl
and
adc
test
dec
outsl
out
lret
in
imul
jne
inc
or
inc
xor
mov
das
xchg
cmpsb
sbb
bound
adc
jae
xlat
ficompl
jno
enter
inc
hlt
inc
movsb
inc
and
daa
xchg
cmpsl
push
int3
inc
loopne
inc
lret
clc
and
repz
cli
clc
mov
test
jo
lds
cltd
or
out
adc
mov
daa
lret
and
nop
pop
out
or
jmp
fsubrs
cmc
pop
sub
lds
in
pop
xchg
int3
out
inc
loop
iret
in
xor
and
dec
add
addr16
test
test
out
inc
mov
mov
fwait
cmp
or
sub
mov
jle
cmp
sub
sbb
in
ret
push
pop
add
movsl
cmovle
clc
cmp
mov
loop
repnz
fistpll
mov
fadds
sub
adc
xchg
scas
cmp
cli
imul
xor
sbb
hlt
je
cmp
pop
and
inc
cmp
addl
cld
mov
sti
fstpt
insl
inc
push
incb
imul
mov
ja
cmc
and
push
test
insb
sbb
cmp
and
inc
mov
ss
jp
addb
dec
pop
test
testl
push
aas
xchg
repnz
imul
mov
lods
enter
nop
fwait
scas
cmp
test
inc
mov
jg
call
lods
sbb
test
cmp
cwtl
fwait
pusha
mov
mov
in
pusha
xor
lea
fcoml
mov
jo
jno
pop
outsl
mov
sti
lods
mov
inc
and
sahf
xchg
dec
push
sbb
adc
xor
lret
mov
or
andb
sbb
loopne
sbb
ja
sub
mov
inc
dec
jge
jbe
and
fwait
ljmp
cmpsb
push
jmp
inc
out
out
sti
in
pop
rorl
test
insl
push
enter
jge
pop
fs
in
add
out
or
cld
lahf
ret
push
add
sub
aaa
dec
scas
fisubs
mov
jle
xor
jp
cmovae
xchg
lret
cmp
mov
lahf
xchg
stc
lods
bound
jmp
mov
lods
fdivrs
inc
pop
jo
ja
jl
cmp
repnz
sti
out
nop
fs
add
pop
roll
fdivl
fcmovnbe
sbb
mov
sub
test
cmp
xlat
mov
ret
jp
mov
inc
jg
push
xchg
mov
pusha
push
push
add
int
xchg
rorb
mov
js
push
imul
pop
mov
subb
sub
popf
xor
push
leave
in
aad
jae
dec
mov
lods
cmp
jl
push
stc
lahf
imul
mov
add
dec
cmpsl
addr16
out
aad
cltd
xchg
dec
inc
pushf
xor
mov
cs
ss
jecxz
popf
lcall
inc
push
scas
push
and
out
xchg
sub
pop
mov
insl
outsb
jecxz
cmp
cli
ficoms
das
dec
lds
popa
or
dec
adc
mov
xchg
pop
inc
jmp
sub
inc
popf
loope
into
stc
stos
daa
fidivl
inc
mov
mov
pushf
inc
xor
lds
hlt
ds
xchg
jbe
arpl
dec
push
setbe
xor
insl
cmpb
popf
push
mov
xchg
outsb
test
pop
xchg
rclb
lock
scas
jnp
jecxz
jmp
mov
stos
arpl
sbb
add
int3
mov
jmp
cli
and
test
jge
bound
mov
push
ret
sub
testb
scas
cwtl
push
mov
jge
sbb
pop
iret
aas
dec
mov
movsl
orl
scas
stos
push
hlt
es
mov
mov
xchg
adc
movsb
adc
mov
xchg
inc
sbb
into
sub
lea
inc
js
cli
xchg
scas
add
dec
ret
push
jp
enter
mov
adc
fwait
xchg
fiadds
loopne
inc
stos
sub
or
addl
shll
jae
pop
cld
jne
adcb
push
mov
repnz
data16
into
cmp
insb
fwait
test
jmp
movsl
xchg
outsb
add
and
adc
mov
xor
adc
icebp
fisubl
mov
jecxz
dec
pop
ret
jecxz
pop
cmc
jnp
jecxz
fldt
xchg
push
fstpt
xor
add
insb
xlat
jl
mov
pop
dec
push
mov
jg
rcll
int3
xchg
add
mov
je
sysret
jnp
je
imul
mov
pop
push
sbb
cwtl
jb
aam
lret
cmp
mov
sbb
jno
popa
dec
xchg
fstpt
and
pop
jmp
jecxz
out
lods
and
add
dec
pop
cmp
movsb
mov
jb
insl
leave
xchg
pop
fistl
jp
insb
push
bound
sub
jae
test
inc
ds
popf
arpl
jmp
jl
fwait
data16
adc
fwait
inc
push
mov
add
or
xchg
int3
mov
jbe
sbb
sbb
lods
or
fsubrl
imul
or
mov
inc
cmp
push
sahf
adc
aas
or
jmp
dec
sbb
push
andl
pusha
xchg
out
insb
and
and
iret
cmp
jg
dec
add
out
ret
lds
jb
or
aad
jae
pop
or
lret
jnp
push
push
test
or
push
mov
addr16
mov
ds
push
xchg
xchg
mov
add
or
movsb
xchg
xlat
in
insb
pop
pop
add
and
pushf
loopne
cmc
int3
mov
mov
lret
clc
dec
or
mov
leave
sbb
jbe
pop
cld
rolb
les
sub
andb
lret
pop
jge
mov
and
xor
hlt
sbb
bound
mov
jnp
iret
jmp
xchg
loopne
pusha
pop
adc
jbe
adc
add
ljmp
dec
pop
add
shrl
pop
or
and
ret
push
dec
enter
mov
cltd
pop
push
push
mov
xchg
mov
popl
and
fisubl
jb
jnp
pop
pop
out
pop
adc
xchg
cmp
add
xchg
xor
jecxz
loopne
pop
mov
filds
cmp
cmpsl
dec
subl
fwait
scas
cmpsl
jbe
inc
cmpb
or
pushf
or
enter
push
ucomiss
bound
mov
std
insl
out
imul
insb
negl
call
sub
xor
and
xor
daa
inc
dec
inc
insb
lret
jecxz
jle
sub
jecxz
shll
mov
aaa
outsl
cmpsl
sbb
jecxz
ret
jmp
ss
push
cmp
sub
outsb
lods
stc
jg
mov
jno
push
adc
push
out
xor
pop
idivb
mov
xchg
jae
dec
dec
push
out
xor
fs
rorl
sti
movsl
sub
aam
repnz
in
xchg
or
mov
mov
push
fsubl
fadd
xchg
dec
jns
clc
aaa
add
pop
pushf
lahf
hlt
xchg
mov
out
mov
outsb
imul
mov
aad
les
cltd
pop
cmp
lods
loope
xchg
out
dec
push
shlb
mov
and
test
push
sti
xchg
or
xchg
mov
sbb
cmp
lds
movsb
cli
les
jmp
notb
clc
push
loop
fcmove
sub
nop
rcrl
nop
mov
xchg
out
jl
out
je
xchg
test
fwait
xor
fsubs
push
fmul
push
mov
orb
fwait
iret
pusha
jl
mov
aas
mov
test
adc
in
inc
cmp
jmp
inc
mov
add
mov
stos
push
xor
fdiv
hlt
adc
aam
test
lods
adc
push
dec
in
clc
movswl
pop
or
sub
ljmp
popa
sti
cmp
ret
mov
or
notb
cmc
jnp
cld
leave
jns
lret
add
in
popf
push
add
std
xorl
lock
jmp
sub
test
push
xchg
sarl
sub
subl
imulb
cmc
mov
mov
scas
enter
pop
repnz
mov
mov
in
int3
int
fnstenv
jo
adc
push
mov
jmp
test
xchg
pop
orl
cmp
and
mov
cli
mov
sub
rolb
sbb
sub
push
xchg
pop
lret
cmp
loopne
sbb
mov
lret
push
pop
xor
hlt
fs
and
mov
bswap
call
mov
cmpsb
add
test
outsl
push
fwait
ja
adc
pop
mov
add
test
adc
aad
stc
cmpsl
xor
sbb
repnz
lock
inc
sbb
lods
or
xchg
push
in
ret
insl
mov
loopne
into
and
push
loop
cmp
loop
xor
xchg
push
pop
add
loopne
sub
popf
dec
jle
repz
push
les
cmp
cmp
test
sub
outsb
and
cli
rcl
jmp
and
and
fstl
mov
inc
inc
loope
jge
in
les
cmp
inc
lock
aam
xchg
xchg
das
or
stos
fwait
sbb
cwtl
mov
mov
outsl
aaa
movsb
dec
pop
dec
push
push
cwtl
aaa
lock
mov
inc
dec
inc
inc
and
xchg
cmpsb
xchg
ss
mov
jne
dec
mov
mov
repnz
push
out
cwtl
pop
mov
fcmovnu
xchg
fcmovnb
loop
pop
mov
iret
mov
mov
push
fstps
and
sahf
sbb
roll
adc
movsb
or
push
xor
arpl
xchg
pop
mov
decb
repnz
or
mov
popa
and
testb
dec
aas
movsb
cmp
iret
push
jle
xchg
ret
xchg
xor
ret
test
mov
pop
and
sar
and
sub
icebp
mov
movsl
cmp
mov
enter
jbe
pop
out
push
insb
into
pop
mov
inc
cs
sub
lods
inc
jae
inc
sbb
cmp
iret
and
outsl
scas
gs
inc
or
mov
insb
mov
pusha
sub
hlt
call
orl
aas
add
test
data16
es
mov
xchg
or
cmpsb
push
sub
fwait
pop
lahf
aas
add
scas
xor
stos
jg
shll
xor
rcrb
jo
inc
jne
popf
mov
outsl
addr16
jle
mov
out
insl
outsl
loopne
pop
xchg
xor
pop
adc
add
inc
lods
pop
dec
lods
int3
dec
pop
in
popa
push
mov
ss
pop
cmp
pop
stos
adc
adc
ja
mov
int3
ss
push
mov
fldcw
cs
jno
dec
dec
xchg
cmp
adcl
or
loopne
les
pop
lods
jmp
cmc
fwait
or
mov
mov
lcall
xor
loop
and
add
ds
pop
sti
mov
mov
jno
xchg
das
cs
stos
lret
lods
push
fldcw
pusha
adc
fstpl
fildl
out
push
xchg
sub
xchg
and
mov
mov
mov
gs
xchg
leave
es
and
in
aaa
lret
cmp
mov
int
push
divb
adc
inc
mov
xchg
adc
dec
hlt
push
add
and
push
add
loope
mov
jle
mov
cli
les
insl
cmp
movsl
push
jns
pusha
rol
aam
push
shll
cmpsl
sub
or
hlt
mov
cld
xor
lahf
push
es
aam
mov
outsl
inc
jg
mov
xchg
insl
lahf
rcrb
ret
imul
inc
daa
sti
sbb
sbb
and
adc
in
ret
mov
pop
jle
imul
pop
imul
mov
hlt
lret
lods
test
push
ror
addr16
stos
imul
daa
cmp
addb
push
test
push
mov
adc
cmpsb
loopne
js
bound
lret
mov
dec
lret
movsb
clc
rcrl
sbb
jae
lcall
pop
dec
repnz
cmp
imul
push
inc
out
ret
std
stos
jae
stc
fcomps
out
sbb
mov
popa
scas
sti
xor
dec
nop
dec
ljmp
pop
rcl
addl
cltd
pop
add
scas
jecxz
clc
pop
cmp
fstpt
testb
stos
test
or
scas
loope
cltd
repnz
push
sbb
test
mov
mov
shlb
xchg
lret
pop
mulb
and
xor
out
jge
scas
xor
jnp
xchg
insb
sbb
and
int3
mov
loop
mov
inc
shrl
out
out
mov
fidivl
cmpsl
sbb
mov
fwait
daa
notb
mov
repnz
jle
lea
mov
lods
jmp
and
scas
aad
daa
sub
test
sub
mov
es
dec
sbb
lods
fdivrl
fsts
push
adc
fsubl
pop
cwtl
xchg
subl
inc
push
lds
dec
cltd
clc
stos
push
push
sbb
mov
notl
or
or
dec
mov
push
sahf
sbb
sub
mov
dec
cmp
fsubl
cmpsb
and
shll
jnp
sub
jg
xchg
pop
push
jmp
pop
movsb
and
or
jne
sub
sbb
lret
test
fnop
cmpsl
int3
outsb
test
in
xor
xchg
push
sub
jnp
pop
popa
mov
enter
and
pop
xchg
lods
sub
arpl
cmc
call
ret
push
xchg
mov
mov
xchg
dec
pop
xor
mov
pop
cmp
rcll
lods
jns
ret
cld
mov
add
lods
lahf
or
movsl
insb
pop
push
add
xor
dec
mov
jb
gs
loopne
sbb
mov
push
push
out
scas
int
call
iret
or
ficompl
mov
lret
cmp
mov
out
scas
adcl
addb
sbb
fdivs
xchg
popf
dec
adc
pop
idivl
out
stos
cli
out
fnsave
pop
jae
mov
nop
test
mov
add
in
pop
sahf
out
push
jae
inc
jne
push
mov
imulb
jnp
outsl
and
pop
leave
ficomps
and
jmp
lret
ljmp
notl
ret
mov
sti
mov
aaa
stos
add
inc
add
ret
mov
in
mov
jno
shlb
adc
inc
mov
xchg
lret
push
push
fs
push
or
mov
rorl
xor
ret
xor
dec
jns
push
push
push
clc
sbb
sbb
mov
cmp
pop
fs
jg
xlat
push
sbb
cwtl
shlb
in
repnz
xor
xchg
mov
decl
lahf
inc
stos
fadds
rcl
cmpl
jle
fnsave
or
repnz
xchg
push
je
lods
mov
mov
add
dec
pusha
fstpt
insb
jl
pop
and
sbb
ja
pop
lods
orl
lahf
mov
mov
adc
adc
and
mov
jg
lret
outsb
int
xchg
lret
dec
cld
testb
mov
test
adcl
es
popa
jge
aas
hlt
xor
xchg
and
dec
jnp
push
add
sti
adc
mov
ds
dec
add
mov
adc
push
mov
xchg
mov
xor
push
add
arpl
sbb
inc
sbb
inc
fnsave
ja
lret
adc
cli
stc
pop
stc
popa
mov
inc
cmp
cld
push
test
aaa
lret
and
pop
mov
dec
cmp
lcall
icebp
decb
and
pop
bound
fdecstp
sarb
xor
push
popf
push
nop
xchg
cmp
pop
mov
cmp
mov
loop
mov
and
mov
mov
sub
faddl
mov
clc
mov
pop
jbe
fdivs
stos
sub
pop
dec
adc
fnsave
mov
in
and
pop
in
rorl
push
xchg
ret
xchg
iret
mov
ja
push
dec
xchg
scas
es
nop
pavgw
pop
inc
xchg
icebp
or
scas
mov
sub
das
sbb
fstpt
inc
fs
fnstcw
js
fwait
je
mov
fstl
jae
insl
ss
out
movsb
pop
inc
and
inc
dec
and
jo
adc
or
cmp
popf
mov
loope
ja
mov
sub
push
mov
xor
jmp
lahf
mov
adc
mov
mov
arpl
out
mov
aas
in
xchg
pop
test
fcomps
dec
dec
ds
adc
mov
mulb
sub
test
pop
ja
in
xchg
loopne
push
sbb
daa
mov
jl
jg
rcll
orl
xor
ss
sbb
adc
enter
test
fimull
sub
imul
leave
in
stos
andb
fsubrp
or
fsts
movsb
fsubl
cmp
int
pop
add
sub
cmc
mov
sub
cmp
test
hlt
testb
fstpl
sbb
dec
adc
jo
lock
aad
lea
sub
outsl
mov
push
in
xor
jp
or
pop
shlb
and
mov
scas
daa
andb
ret
mov
outsl
mov
lahf
inc
mov
or
cmp
jecxz
fisubs
add
ret
ja
xchg
lret
mov
push
fndisi(8087
nop
bnd
inc
adc
push
push
cmpsl
add
mov
and
push
mov
mov
jmp
mov
inc
cmp
lods
ficoml
sbb
fistps
jge
je
sub
ret
idivl
or
cwtl
imul
dec
xor
test
dec
mov
fimull
mov
mov
sti
cmpsl
mov
mov
ljmp
adc
sub
in
orl
leave
mov
mov
test
sub
hlt
fstps
les
in
lcall
and
inc
add
ds
lcall
imul
addr16
repz
push
and
aaa
xor
xor
mov
js
xchg
dec
mov
icebp
mov
nop
jp
xchg
xchg
xchg
mov
aaa
sahf
addr16
scas
je
les
loope
xor
sub
jg
daa
mov
add
adc
fwait
je
mov
loopne
and
pop
mov
jle
pop
addr16
divl
cli
and
jge
mov
jo
fidivl
mov
rcrb
daa
lahf
jg
cld
dec
pop
rcll
inc
dec
or
mov
nop
and
and
int
out
push
jnp
orb
jno
loop
aas
mov
repz
jmp
ljmp
pop
push
sbb
pop
ret
js
mov
xchg
aad
dec
dec
daa
daa
mov
dec
clc
cmc
pop
xadd
push
mov
std
pop
jmp
mov
inc
imull
rorb
push
jle
xchg
jle
mov
addb
push
cltd
xor
push
push
loopne
es
push
adc
push
sub
pop
cmpsb
ljmp
xchg
dec
sub
mov
dec
leave
xor
push
lret
adc
je
shr
nop
dec
jbe
scas
jg
mov
mov
push
jg
xor
inc
sbb
jae
in
cmp
fsubs
mov
dec
out
jp
in
inc
push
xchg
mov
fstpl
ret
inc
imul
arpl
daa
fwait
pop
out
outsb
test
outsb
push
pop
adc
sbb
jo
loopne
test
rcll
getsec
jbe
mov
stos
nop
sub
and
iret
cmp
add
in
jle
add
sti
mov
dec
or
aad
ja
or
imul
out
outsl
sub
mov
lret
imull
dec
pop
mov
lret
sbb
pop
pop
std
push
jmp
jle
jbe
inc
fmull
jg
mov
clc
scas
imul
das
arpl
lret
sub
enter
mov
xor
inc
pop
ret
in
inc
mov
and
jp
fldt
lods
sti
subb
dec
mov
cld
lret
fdivs
dec
out
aam
aam
cmp
adc
lret
push
mov
das
mov
int3
push
repz
stos
sbb
xchg
cmp
pushf
and
ficoms
stos
mov
mov
and
scas
mov
addb
mov
xor
xchg
pop
daa
mov
xchg
dec
mov
xchg
cmp
enter
xor
aam
inc
fsub
int3
das
loop
je
cmp
jle
adc
fildl
js
call
aaa
ds
mov
repnz
rorb
xchg
xchg
and
stos
sub
push
and
mov
cs
mov
loop
xor
jg
adc
sub
push
mov
scas
test
xchg
out
push
scas
out
xchg
push
jecxz
das
mov
add
cmp
loopne
iret
sbbl
fcmovnu
lds
xor
cmp
loope
sub
mov
add
sti
push
fmull
notl
adc
in
pop
pusha
ja
sarb
clc
jae
pushf
jg
xor
or
icebp
stos
xlat
out
mov
fldt
inc
scas
insb
fwait
xor
sub
push
jmp
mov
dec
subb
adc
lret
xchg
cwtl
dec
daa
sbb
add
fsubrs
ds
repnz
mov
int3
sahf
inc
lcall
xor
sbbl
ljmp
lea
mov
int3
push
insb
inc
out
mov
stc
sbb
push
test
sub
imul
xchg
jnp
inc
pop
lea
mov
mov
lret
ja
in
int3
and
xchg
sub
and
lds
pop
jnp
mov
pop
push
shl
or
filds
lea
testl
mov
sbb
inc
mov
movsb
test
inc
ficoms
stos
cmpsl
push
bts
sahf
leave
push
sub
jns
and
test
or
push
pop
mov
add
or
mov
pop
rcrb
cmpsl
and
dec
xchg
sub
dec
adc
push
adc
in
into
clc
stos
jne
repz
and
xchg
cmc
sbb
scas
adc
int3
lret
push
push
ja
lods
mov
in
mov
insl
xchg
jp
lods
and
je
dec
sbb
cmp
adc
mov
add
testl
lret
loopne
lock
imul
and
rorb
adcb
pop
dec
add
mov
mov
lcall
rdseed
add
test
inc
jle
lret
dec
mov
insb
sbb
mov
sub
jnp
cld
adc
in
flds
cmc
addr16
inc
mov
xchg
out
mov
xlat
mov
fimull
mov
jbe
ret
pop
push
fidivrs
jg
jcxz
pop
scas
sub
loop
int3
jg
outsb
testl
mov
add
ret
nop
lret
cwtl
daa
addr16
inc
xchg
xchg
jo
jp
adc
mov
shrl
sbb
add
and
xor
jbe
aad
sub
notl
mov
pop
mov
mov
cmc
dec
add
mov
xchg
xor
adc
pop
lret
enter
xor
ja
cwtl
sub
xor
pop
loop
dec
sbb
test
push
xchg
lcall
imull
sub
mov
jecxz
es
jmp
jmp
jg
mov
sub
mov
sub
or
jae
mov
out
dec
fwait
inc
or
adc
fcomip
mov
fistpl
push
jo
push
fists
xor
int3
fwait
ret
rcll
subl
ja
lahf
jae
test
stos
lret
clc
pop
iret
iret
testl
cmp
pusha
cmp
into
push
jne
sub
add
scas
notl
ret
lds
dec
inc
roll
pusha
loopne
xor
fildll
pop
xchg
push
jb
out
addr16
and
mov
data16
test
int
push
push
cmpsl
mov
lret
fldenv
and
andb
push
out
pop
sti
popl
dec
adc
fmuls
inc
cmpsb
or
divb
dec
lods
mov
push
hlt
movsl
inc
ds
and
xor
div
and
cmc
xchg
sub
inc
das
jle
cmc
dec
sti
cmp
in
iret
cmp
js
test
ret
and
fistps
ljmp
sbb
dec
and
mov
xchg
aam
outsl
jmp
scas
sbb
adc
ja
adcb
jo
mov
mov
push
dec
xchg
outsb
andl
mov
push
xlat
adc
les
scas
jp
nop
cmpsl
sbb
push
mov
jg
jle
test
or
mov
bound
orb
cmpsl
adc
fdiv
cs
inc
icebp
stos
shlb
sarl
mov
data16
cmpl
cmpsl
inc
hlt
bswap
lret
add
pushf
push
mov
ja
inc
iret
repz
xor
out
pop
mov
stos
aam
inc
scas
cmp
pop
arpl
loopne
mov
loope
pop
mov
xchg
nopl
mov
sbb
sub
je
arpl
inc
ljmp
popa
in
add
iret
inc
test
push
daa
inc
insb
pop
lcall
add
ss
cli
push
aam
outsb
mov
popa
sahf
jecxz
dec
push
stos
arpl
dec
stos
or
test
pop
stos
stos
loopne
jle
cmp
insl
cmp
mov
or
and
fcoms
xchg
and
cmpsb
cmp
insb
pop
push
repz
mov
stos
mov
fnop
cmc
jmp
inc
mov
xchg
fwait
ds
dec
stc
jle
dec
je
arpl
or
jo
lea
sbb
stos
out
int
xchg
add
dec
iret
mov
xchg
cmp
push
sbb
mov
fmull
jnp
scas
lahf
xor
fmuls
pop
sbb
or
adc
str
mov
pop
pop
and
xor
xorl
push
sbb
fcomps
xlat
lahf
divl
outsl
mov
scas
sbb
les
sub
jg
out
iret
call
mov
testl
icebp
mov
sbb
rorl
and
popa
fs
cmc
xor
push
in
mov
push
in
imul
cmp
inc
lea
fwait
aad
lahf
imul
inc
add
xchg
sub
xchg
xor
in
xchg
ret
ljmpw
xor
pop
xor
shlb
imul
inc
hlt
outsb
lcall
push
bound
jle
sbb
fs
or
fisttpl
pushf
stos
call
xor
push
inc
inc
mov
imul
jl
jg
aam
fs
insb
mov
dec
ss
add
adc
daa
cld
movlps
jnp
dec
xor
lret
fstpt
jae
pop
pop
mov
jb
outsb
xorb
sarb
cmp
stos
stos
imul
aas
jb
pop
mov
dec
clc
shrl
xchg
pop
out
push
jg
jg
fisubrs
sbb
cld
jg
fmul
xchg
addl
dec
cmpsb
test
mov
std
hlt
inc
mov
fdivrl
push
jp
ljmp
and
inc
xchg
or
fadd
mov
jg
call
dec
add
add
stc
setae
pop
mov
mov
ljmp
sub
push
shrl
imul
add
repz
gs
xlat
lret
fisttpll
mov
movsb
inc
push
andb
jp
out
mov
rol
outsb
xchg
xor
or
xchg
test
cwtl
sub
es
adc
pop
inc
jecxz
mov
leave
mov
adc
mov
mov
push
cmp
out
ss
dec
out
push
repz
movsb
iret
scas
inc
xor
jnp
adc
les
push
aas
sub
cmc
or
push
outsb
sub
cmpb
hlt
mov
inc
or
not
clc
int
adcb
or
pop
scas
loopne
popf
lret
push
les
les
and
or
int3
gs
movsl
cmpsb
aad
cli
sbb
push
or
dec
test
idivl
cs
inc
daa
dec
xchg
xchg
ljmp
lahf
inc
adc
pop
inc
jle
clc
adc
push
imull
mov
push
pop
add
jge
push
add
repz
adc
push
mov
test
fildl
cmpsb
clc
clc
mov
pusha
aas
repz
popl
cli
adcw
test
arpl
add
sbb
ja
aaa
or
xor
fwait
sbb
setne
shl
jnp
mov
sub
jnp
mov
fdivrs
push
imul
test
clc
push
outsl
lock
clc
mov
push
notb
or
enter
subb
and
adc
xor
and
cld
xor
dec
mov
lods
imul
stos
xor
imul
lahf
dec
stos
lock
int
xchg
dec
jmp
xchg
ja
jge
jg
adc
je
jne
aaa
outsl
xchg
jo
lods
sbb
mov
and
cmpl
mov
add
mov
pop
or
aas
stos
fisttps
lock
sbb
cmc
jmp
mov
add
fdivp
addr16
adc
nop
add
pop
rorb
fdivs
mov
dec
roll
push
jp
aaa
inc
sbb
les
push
dec
lods
fs
sbb
sbb
aam
adc
add
cmp
imul
imul
dec
roll
arpl
inc
pop
mov
call
and
fdivrs
pop
insb
adc
push
add
fldl
dec
out
in
pop
mov
movsl
mov
jmp
imul
aaa
out
add
fsubrp
pop
xchg
mov
sarb
mov
push
int3
popl
outsb
cmp
push
push
mov
mov
cltd
stos
cmp
or
test
sti
das
and
lcall
or
out
outsb
push
int3
jnp
cmp
sbb
int3
and
xlat
incl
add
xor
pop
xor
loop
mov
movsl
lock
iret
loop
push
sub
scas
movl
dec
push
fs
out
jmp
inc
test
out
gs
mov
lret
sub
inc
pop
jb
adc
jae
mov
sahf
sahf
mov
fwait
cmpsl
or
test
inc
test
or
jg
inc
pop
stc
mov
mov
xchg
mov
out
pop
pop
inc
imul
pop
mov
movsl
aam
push
sbb
inc
push
xchg
bound
mov
pusha
cs
push
xchg
cmp
into
pop
js
insb
ror
pop
dec
sub
xor
add
gs
sbb
lahf
jecxz
ja
add
aas
mov
into
imul
pop
call
call
clc
push
inc
loopne
jl
pop
xchg
nop
push
stos
mov
ds
adc
andb
adc
and
dec
mov
sub
sbb
xor
sbb
es
jne
push
xor
jp
test
sub
fs
pop
mov
jecxz
add
ret
sbb
imul
fisttps
dec
inc
inc
ds
imul
and
out
in
pop
test
push
in
mov
sbb
out
add
mov
pop
call
xor
and
das
pop
outsb
cmpsb
mov
shl
add
pushf
inc
xor
out
movsb
imul
mov
stos
jg
and
pop
dec
xor
pop
fistl
ja
cmp
mov
cld
mov
sub
outsl
mov
push
data16
lret
jne
adc
loopnew
sbb
leave
xorb
loopne
pop
mov
jns
aaa
xor
fst
add
mov
mov
inc
daa
mov
bound
js
out
mov
rcrl
mov
testl
mov
jb
fimull
adc
decl
popa
jnp
hlt
cltd
jl
jg
push
sub
lret
jbe
push
mov
pop
and
push
addr16
sbb
xchg
outsl
sub
ljmp
cmp
adcl
cmp
jmp
dec
push
and
sub
jmp
pop
jl
cltd
mov
arpl
ret
pop
test
mov
int
addr16
mov
movl
and
arpl
xchg
jnp
sub
mov
ud2
and
jns
xchg
jb
mov
ja
cs
dec
mov
lods
jbe
rorl
xor
push
ret
or
lcall
mov
pop
mov
inc
cmp
jecxz
pushf
clc
cli
and
mov
push
outsl
fstpl
cmp
push
cmp
sbbl
cmpsb
inc
mov
sbb
popf
or
push
imul
rcrb
movsb
cmp
mov
or
loop
and
add
sub
pop
enter
mov
lods
iret
ss
sub
loopne
add
ret
in
iret
cmpsl
cwtl
imul
lcall
jge
aas
xor
aaa
mov
mov
adc
out
nop
xor
fidivrs
pop
mov
popa
mov
loopne
pop
in
add
daa
sti
test
icebp
faddl
mov
lods
inc
cmp
aad
and
pop
imul
bound
repnz
inc
xor
mov
mov
adc
mov
xor
dec
out
stc
xlat
cmp
sub
push
ljmp
jle
enter
mov
jmp
or
out
jecxz
sub
pop
fprem1
pop
das
inc
adc
into
lcall
lret
pop
shrl
pop
call
daa
push
push
sahf
push
push
adcb
lods
and
pop
lea
pushf
and
in
loop
jo
jle
xor
in
sbb
std
xchg
pop
ljmp
movsl
mov
arpl
push
sbb
lods
push
cmp
mov
xlat
sbb
cmc
mov
frstor
rorb
fsubl
adc
or
movsl
sbb
rdpmc
adc
mov
mov
cltd
lret
push
cmp
adc
roll
pusha
testl
push
push
cmp
push
aas
sbb
jecxz
dec
mov
jecxz
loop
aad
cmp
ret
mov
int
cmp
lea
xchg
jecxz
fldenv
aas
push
aaa
scas
sti
fcomi
ljmp
in
mov
mov
cmpsb
sbb
call
in
lret
mov
inc
mov
fs
xlat
cmpsl
xchg
and
add
call
pop
xchg
loope
cmp
test
es
mov
jle
add
cmpsl
outsl
mov
mov
sub
sub
lock
push
xor
fwait
imul
clc
mov
lret
mov
push
pusha
cltd
loop
mov
pop
enter
push
das
ret
inc
push
or
adc
mov
idivl
pushf
mov
pushf
cmp
xchg
jne
adc
mov
jbe
push
test
or
scas
xlat
lcall
inc
cmp
mov
jnp
scas
cmp
cmpsl
sbb
inc
test
adc
push
jmp
jmp
mov
sub
xor
icebp
lahf
test
ja
outsl
mov
fwait
mov
das
cmc
mov
add
ss
push
loopne
dec
hlt
mov
mov
outsl
clc
lock
jge
dec
fs
pop
or
or
cmc
pop
mov
add
jb
aaa
fwait
add
cmp
lret
fmull
jle
mov
inc
fcmovb
leave
mov
push
cs
fmull
stos
les
mov
dec
mov
mov
lods
push
adc
sbb
cmpsl
mov
mov
imul
fistpl
out
mov
push
sub
adc
cmpl
jne
andb
cmp
or
fidivl
lahf
pop
mov
push
shlb
cmp
push
jecxz
insl
ret
ljmp
leave
xchg
push
dec
negb
repz
daa
mov
outsb
adc
aas
jp
sbb
cmp
movsl
sahf
insl
in
xchg
push
aaa
out
inc
or
and
cmp
add
ljmp
mov
out
xor
imul
pop
inc
cwtl
jns
mov
cmp
or
mov
sbb
cmp
cmp
shl
inc
inc
mov
ja
rorb
cmp
mov
xchg
pushf
ss
arpl
pop
outsl
es
std
mov
lret
fs
pop
leave
rcrb
popa
testl
mov
adc
ret
pop
cmp
and
pop
lcall
sub
push
lahf
outsl
push
aaa
inc
xchg
loop
pusha
test
sbb
sahf
jnp
xchg
jae
ret
xor
or
int3
add
pop
xchg
push
fimuls
lret
mov
lea
outsl
pop
jbe
fs
jae
insb
lret
cmp
push
xor
mov
andl
cmove
inc
decl
jle
pop
setp
std
sbb
imul
testl
jb
lcall
mov
jbe
aas
xchg
loop
or
pop
push
jl
mov
dec
cmp
or
mov
js
pop
and
out
andl
push
jne
pop
outsb
arpl
jmp
cltd
fstpt
push
cwtl
cmp
stc
mov
push
stc
pop
push
repnz
inc
sahf
sub
adc
test
jle
das
jbe
mov
rcll
cli
push
push
and
stc
test
jmp
imull
xor
je
xor
mov
or
jge
idivb
fs
mov
add
cwtl
lods
sahf
out
leave
scas
adc
or
mov
lret
mov
and
nop
in
mov
aaa
pop
out
jg
mov
sbb
jmp
dec
das
sbb
mov
push
lahf
cmpsb
icebp
fbld
sahf
sbb
push
xor
nop
clc
xlat
insb
sub
pop
mov
push
test
mov
adc
loopne
faddp
mov
or
call
xor
lods
mov
inc
cli
sbb
gs
aaa
jmp
push
push
in
idivl
dec
mov
cwtl
imul
mov
in
mov
clc
out
lcall
jno
sti
gs
repnz
fwait
sbb
jle
jp
xchg
pop
scas
pop
pop
mov
pop
xchg
arpl
fwait
popa
ret
ja
fwait
mov
mov
call
xor
fisttpl
or
push
mov
jo
shl
mov
pop
in
rol
cmp
into
dec
fsubs
repz
mov
ret
jle
add
mov
mov
out
dec
aaa
fidivrs
pop
ficomps
dec
aam
mov
daa
pop
add
sti
adc
pop
pop
sbb
inc
loope
or
mov
out
fistpll
pop
rcr
bound
aaa
jmp
cmp
ret
ret
push
div
imul
mov
mov
push
ljmp
pop
mov
sbb
dec
and
test
into
mov
jg
dec
lea
cwtl
xchg
ljmp
lahf
or
push
add
jg
mov
inc
jns
sub
or
inc
mov
rcrb
push
fildl
xlat
pusha
mov
push
sbb
outsb
push
cmpsl
inc
nop
stc
inc
out
int3
popf
jbe
pop
mov
fdivrl
es
sbb
mov
out
mov
adc
sahf
std
dec
ret
aaa
adc
les
dec
fwait
idivl
aam
fmulp
in
xchg
rcr
out
loopne
jmp
push
loopne
adc
ljmp
or
mov
cmpb
or
dec
mov
fildl
std
inc
fidivs
int3
subb
icebp
icebp
mov
outsw
adcb
movsbl
xchg
pop
pusha
add
cmp
adc
inc
lret
popl
push
push
add
orb
outsl
out
inc
int3
mov
daa
xchg
daa
sbb
sbb
and
scas
dec
aas
scas
xor
add
push
cltd
pop
les
lods
jnp
lods
mov
mov
pushf
js
push
out
mov
aad
enter
pop
adc
sti
mov
ficomps
add
dec
pop
xor
xor
inc
adc
ja
jg
movsb
call
cmp
pop
sarl
xor
daa
fildll
hlt
inc
ja
call
and
mov
add
lock
jg
out
mov
sub
dec
out
popf
adcb
lods
xchg
push
lret
in
fnstcw
out
xor
xchg
imul
out
jo
decl
cmp
mov
sub
js
mov
movb
adc
cmp
les
sbb
jo
mov
jnp
cmp
or
test
lcall
popa
les
pop
xchg
cmp
xchg
add
das
ret
and
aam
idivl
fs
js
adc
and
ds
xor
in
in
bound
sbb
test
in
sub
test
mov
or
pop
sti
orl
rcll
and
mov
cmpsb
out
cld
repnz
loop
xor
pushf
cmp
and
lods
in
leave
dec
add
mulb
mov
lods
mov
ficomps
jle
mov
xor
pop
dec
call
and
add
adc
aaa
or
scas
jns
test
add
dec
push
fwait
aaa
pop
lods
mov
xor
ficoml
cmc
loopne
mov
stos
mov
jno
add
push
mov
mov
inc
mov
cmp
mov
dec
decl
frstor
aaa
lea
mov
push
fbstp
xor
icebp
or
jg
sub
stos
ljmp
movsb
xor
cltd
push
in
test
cmpsl
aad
jle
mov
jmp
imul
movnti
aam
dec
hlt
arpl
int3
adc
shll
add
xlat
orl
loop
push
pop
sbbl
aas
in
dec
mov
lcall
loope
sbb
cs
xchg
cmp
jbe
pop
stos
fucomip
je
sub
xor
xlat
daa
fwait
mov
cwtl
clc
mov
xchg
ret
cltd
or
ja
mov
aam
add
cmp
ret
mov
lods
mov
jae
mov
ja
movsl
pop
loop
or
data16
sti
test
pop
push
mov
push
push
mov
loope
ja
push
cmp
nop
pop
fistpll
aam
js
lret
aam
dec
je
outsb
inc
cmp
mov
outsl
ja
mov
fidivs
leave
inc
out
mov
jnp
jg
xor
mov
loop
jo
mov
cmpsl
push
iret
xchg
dec
sahf
dec
jg
stos
popf
dec
sub
outsl
sbb
outsl
jg
jo
push
lcall
mov
fisubl
xchg
bound
subb
jl
adc
aas
cli
xchg
stc
lahf
sar
cwtl
into
enter
repnz
lcall
cmc
out
stc
loope
addr16
inc
fwait
xchg
push
xor
mov
hlt
xorb
stos
aaa
pop
fwait
inc
mov
scas
dec
cmp
mov
inc
inc
adc
mov
push
mov
jno
xor
pop
sbb
mov
arpl
xor
jle
stos
sbb
mov
shll
into
add
push
mov
ljmp
mov
inc
xor
jnp
dec
pusha
jmp
mov
std
aaa
clc
mov
xor
cli
mov
sbb
add
jnp
and
daa
dec
cmp
daa
push
aas
ret
in
push
add
pushf
xchg
data16
lcall
adc
cmp
and
lcall
cmc
lcall
sti
inc
add
and
imul
mov
nop
xor
inc
popf
sub
dec
rcrb
nop
push
push
rorl
in
lret
clc
insl
inc
mov
xchg
pop
aam
out
mov
mov
cmp
mov
push
insl
cmp
pop
faddl
out
ss
cmc
jge
sbb
xlat
or
pop
and
and
mov
jbe
pop
mov
pop
cmp
pushf
push
neg
mov
inc
jge
add
xchg
lcall
mov
push
jle
and
mov
cmpsl
pushf
mov
rorl
hlt
pop
aaa
fldt
andb
repnz
sub
in
movsb
out
ds
lret
jmp
pusha
int3
inc
ret
popf
add
lods
pop
mov
outsb
iret
sti
les
mov
cmc
sub
icebp
mov
lret
xor
fwait
iret
or
fcomi
mov
ljmp
adc
out
loope
loope
mov
xchg
cmp
dec
and
dec
ja
push
arpl
movsl
repnz
and
jg
cmc
dec
lret
push
mov
cltd
test
adc
mov
or
or
add
out
pop
test
fimull
call
or
cmp
mov
mov
insb
push
jbe
pop
lret
sbb
subb
pop
sbb
jp
pusha
adc
shlb
pushf
jle
sbb
cmp
sbb
jne
ret
inc
fcmove
and
test
push
sbb
data16
inc
cld
pusha
shr
cmp
or
inc
jmp
adc
mov
mov
push
sbb
nop
pop
xor
shll
arpl
out
data16
mov
fsubr
inc
xchg
and
adc
jns
daa
xor
fcomip
ret
mov
dec
ss
bound
push
int
mov
lods
and
or
outsl
push
test
fidivrl
cmp
push
mov
divl
push
arpl
pop
gs
movsb
aam
adc
dec
dec
test
sub
xchg
imul
jg
or
push
or
mov
movsb
jge
cs
pop
mov
jmp
scas
loop
mov
mov
inc
sti
pop
into
ja
lret
out
insb
jle
mov
out
popa
pop
lret
outsl
xor
ja
dec
stos
xchg
stos
sub
aad
in
icebp
sbb
lret
jp
pop
push
inc
in
scas
ss
sti
clc
outsb
jnp
push
fildll
fs
outsb
scas
loope
orb
sub
jae
roll
mov
dec
mov
iret
divl
or
data16
ret
cmp
sbb
jle
ljmp
repz
cmp
call
cs
dec
insl
adc
loope
mov
outsb
clc
in
xchg
jp
std
adc
mov
push
out
ret
jb
cmpsl
subb
call
xchg
adc
add
hlt
lcall
xor
lods
mov
mov
adc
bound
int3
insb
call
mulb
cmpb
jmp
cli
xor
neg
subb
sahf
aaa
loope
rorb
rcrl
aas
sahf
fildll
or
arpl
sbb
fxch
pushf
xor
enter
in
cmp
cmp
fnsave
jle
mov
mov
int3
lock
lds
cli
sub
int
movsb
movsb
stc
sub
shrl
xchg
out
dec
mov
sub
dec
dec
cmp
in
sbb
fstpt
jbe
pop
pushf
or
sbb
inc
addr16
jbe
push
imul
jmp
xchg
mov
mov
push
cmp
cmp
rep
imul
dec
lret
inc
in
pop
push
pop
jmp
ret
fdivrp
pop
sti
cmp
jnp
stc
pop
push
push
mov
xlat
jg
icebp
aas
ja
test
out
xchg
dec
icebp
pop
daa
mov
mov
sub
out
cli
jl
das
hlt
xchg
and
or
rorb
mov
popa
fcoms
les
fldt
pusha
fisttpll
pop
xchg
sub
jecxz
dec
test
or
aaa
jae
clc
jnp
or
lods
subl
inc
pop
movsb
sahf
push
xchg
xor
xchg
jge
cli
mov
dec
pop
push
dec
jge
adc
inc
cmpsb
lahf
adc
xchg
mov
into
mov
sub
jp
cmp
add
enter
push
pusha
addr16
lock
out
sbb
jo
data16
in
pop
imul
test
std
in
mov
mov
cmp
test
push
fdivp
pop
xor
adc
aam
sbb
sub
xor
aad
dec
fdivrs
scas
cmc
daa
or
outsb
insb
shlb
testb
xor
gs
mov
jmp
pushf
adc
int3
ja
mov
adc
jne
ds
rcrl
int3
mov
arpl
xchg
pop
fwait
orl
cmp
fcomp
sub
cmc
subl
outsb
dec
push
iret
push
movsl
xlat
jecxz
jbe
int3
out
data16
pop
ret
or
sub
sub
fldt
xor
mov
and
adc
loop
insb
imull
mov
test
fcmovne
inc
mov
dec
pop
scas
movsl
push
push
or
jo
in
stos
mov
push
xchg
cmpsl
sbbl
cwtl
adc
pusha
rorl
mov
mov
lock
push
aam
pop
sub
ss
fdivl
daa
sub
sbb
pop
cmpxchg
jp
mov
call
inc
sub
sbb
cmp
and
push
add
andb
testl
sbb
js
cmpb
pop
xor
in
bound
int
stos
add
in
out
pop
jbe
gs
jp
dec
inc
into
lahf
das
nop
pushf
repnz
push
jge
or
addr16
sbbl
sub
and
gs
adc
ret
pop
add
sbb
js
or
mov
and
stos
and
pop
mov
sbb
clc
push
arpl
pop
dec
inc
insl
dec
scas
testl
bound
xchg
xchg
sbb
popf
enter
enter
lods
jno
pop
fistl
sbb
xchg
popf
add
jb
push
add
xorl
lahf
pop
and
stos
jno
jnp
xchg
mov
sbb
sub
cmpsl
lret
js
and
dec
mov
aam
cwtl
add
inc
out
scas
icebp
aad
aaa
sub
insb
mov
mov
xchg
stc
xor
cwtl
loopne
je
movsb
dec
sarl
pop
out
setle
sbb
jnp
adc
push
and
jbe
jg
xchg
mov
sbb
ja
das
cmpb
and
sub
push
jecxz
cwtl
lret
or
pop
int
lret
cmpsb
pop
xor
cmp
jge
mov
or
cwtl
scas
inc
aas
pop
dec
xlat
push
rorb
loopne
pop
aaa
dec
sbb
sti
mov
dec
out
subl
outsl
sahf
xor
imul
and
add
pop
push
xchg
jbe
jnp
aam
cmpsl
pop
pop
xor
jne
data16
je
cmc
cmc
mov
pop
stos
lahf
scas
out
fistpl
or
add
test
daa
fldt
add
add
shl
aas
mov
mov
mov
lret
fnstcw
shrb
jne
mov
icebp
jae
imul
ljmp
leave
in
mov
pop
push
or
push
mov
mov
xchg
push
popa
add
xor
add
mov
dec
cs
inc
lods
lods
adc
xor
mulw
push
arpl
flds
jae
push
mov
pop
mov
jae
je
jnp
mov
aas
push
pop
push
fwait
push
int
cltd
add
add
lret
jmp
jecxz
jge
or
scas
mov
adc
jmp
xor
push
mov
es
pop
pop
xchg
mov
lahf
fdiv
ficompl
mov
into
push
adc
dec
push
cld
add
dec
jbe
mov
lret
nop
cwtl
outsl
add
inc
bound
mov
daa
add
push
mov
inc
mov
mov
jns
pcmpeqb
jae
dec
add
xchg
adc
int
inc
popw
mov
sub
inc
and
mov
mov
in
adcb
push
jge
or
lcall
inc
scas
leave
jbe
aaa
jo
push
fld1
sarl
cmp
push
or
and
notl
xrstors
icebp
jle
adc
add
dec
aas
movsb
add
mov
cli
fcomi
inc
lea
add
mov
mov
adc
xchg
jecxz
jmp
lock
mov
pop
sub
push
lret
int3
mov
push
pop
nop
scas
bound
movsl
sub
mov
je
outsb
dec
loopw
lret
cmpsb
outsl
fbld
push
and
and
xchg
mov
push
lahf
pusha
mov
cmpsl
pop
out
jp
test
cmp
push
push
jae
mov
pushf
movsb
out
cmp
mov
pop
mov
std
scas
f2xm1
cmp
cmp
test
jb
clc
icebp
xor
mov
xchg
sti
or
dec
adcl
mov
push
cmp
cmp
call
call
sbb
sub
mov
aad
adc
sub
imul
adc
xchg
dec
je
mov
mov
sbb
adc
xchg
int
inc
sbb
cmpsl
lahf
ja
xor
in
mov
imul
mov
jae
dec
mov
pop
pop
cmp
movsl
xor
std
xchg
test
jp
cli
adc
fisubrs
mov
inc
push
push
dec
or
push
mov
stos
xchg
lahf
inc
xorl
hlt
mov
jae
mov
push
loop
aam
fwait
popf
add
mov
aas
mov
or
jae
call
jb
mov
pop
cmp
add
jle
addb
push
pop
in
cli
jg
lds
sbb
jg
out
jo
mov
xchg
xchg
out
insb
pusha
ljmp
in
cmp
jl
mov
inc
mov
sub
aaa
or
pop
addr16
fs
lfs
mov
dec
mov
adc
clc
roll
inc
and
into
mov
pop
aaa
inc
lcall
das
mov
adc
or
jecxz
aam
pop
inc
push
movsb
adc
mov
mov
mov
pop
mov
push
orl
into
push
adc
cmp
sti
mov
push
fisttpl
std
push
orb
fisubl
pop
push
repz
cli
jmp
or
cmp
push
stos
popa
xor
lods
adc
dec
jecxz
je
xchg
mov
mov
adc
inc
jg
pop
and
pop
jg
jb
mov
xchg
cmp
into
jnp
add
aas
shl
mov
push
bound
dec
lret
mov
inc
ss
or
aas
in
jl
push
test
jae
mov
addr16
gs
adc
pop
clc
ds
inc
shll
aad
pushf
stos
popa
mov
adc
cwtl
hlt
adc
xchg
pop
pop
notl
xchg
es
inc
pop
out
fildll
pop
add
and
push
adc
adc
lods
push
jle
imul
mov
jb
iret
js
scas
push
in
pop
cmp
mov
xor
push
ljmp
push
xchg
sti
sub
fadds
adc
mov
dec
mov
sub
fistpl
shlb
mov
jmp
cmp
stos
mov
dec
loope
xor
dec
inc
xchg
mov
mov
stos
cwtl
push
mov
hlt
jmp
cmp
addr16
and
jnp
mov
popa
push
cmp
test
es
ss
ret
jbe
add
fdivl
sti
mov
loopne
jmp
fsubrs
mov
repnz
das
fnstsw
mov
dec
daa
in
push
aad
xlat
lea
mov
fcmovne
flds
push
mov
adc
iret
push
cmp
jno
fimuls
in
jmp
stos
sub
push
mov
mov
mov
sub
decl
call
sub
jnp
push
xlat
arpl
mov
xor
sbb
sub
mov
sahf
sti
sub
repz
cmp
adc
movsl
cltd
or
in
fs
ljmp
pop
data16
pusha
mov
cmp
or
cmc
fdivr
cmp
out
out
push
pop
ljmp
orb
jae
inc
cs
xchg
and
pop
fldlg2
addr16
mov
inc
rol
test
xlat
outsl
jmp
inc
sub
aad
mov
popf
dec
inc
mov
add
xchg
std
loop
mov
ret
arpl
stos
jp
adcl
sahf
cmp
lods
ss
into
push
mov
and
hlt
cmc
daa
jl
rclb
jle
push
and
enter
imul
cmp
cmove
cmc
addr16
lret
sbb
in
inc
and
filds
sbb
mov
call
mov
test
jnp
fs
imul
hlt
pop
bound
jo
sub
pop
ret
scas
jg
imul
dec
mov
ljmp
jl
push
cmpsl
mov
jae
jnp
xlat
jecxz
test
loope
jne
xor
inc
lock
ret
and
fwait
add
cmpsl
ror
pop
sub
mov
shrb
sub
jb
jnp
inc
fwait
daa
dec
in
push
dec
loopne
scas
mov
mov
fstpt
mov
adc
push
xor
adc
lret
pop
mov
enter
aad
sahf
dec
inc
pushf
dec
aas
pop
jnp
and
mov
xor
cmpsl
loop
and
cwtl
xchg
mov
cmp
sbb
stos
js
jecxz
xor
cmpsl
in
and
enter
mov
pop
jmp
insb
pop
pop
out
sahf
mov
inc
out
addl
in
mov
loop
hlt
out
sbb
adc
sub
lret
outsb
into
insl
pusha
mov
mov
mov
ret
add
mov
fcomi
cmp
rolb
sub
imul
pop
imul
mov
pop
call
shr
cmp
inc
loope
cmp
stos
je
loopne
das
dec
pop
je
xor
adc
pop
inc
aas
daa
add
outsl
fs
fnstcw
or
jo
ss
ljmp
fs
push
adc
sbb
sti
in
gs
movsl
sub
sub
cli
and
cld
loopne
mulb
stos
and
add
out
xrelease
pop
and
es
and
cmp
pop
sahf
jge
and
inc
pop
add
ja
aam
fwait
push
xchg
mov
xchg
fwait
lods
mov
test
sbb
mov
pop
fcmovnb
aad
cmp
hlt
imul
inc
pop
loopne
pop
and
lahf
pop
add
sbb
or
or
fs
enter
sub
rcll
sbb
mov
jae
cld
and
sbb
sub
mov
jo
xor
xchg
mov
dec
out
aad
fisttpl
imul
mov
sub
push
jmp
movsl
mov
es
or
xchg
pop
sub
cmp
loop
mulb
xchg
sub
mov
dec
inc
loope
loope
sahf
dec
mov
fwait
roll
mov
outsl
mov
cli
orl
in
sarl
add
imul
shlb
setbe
out
scas
out
aaa
roll
adc
inc
clc
jo
ret
out
lea
dec
mov
mov
pop
pop
lahf
sahf
in
jg
mov
dec
sbb
jne
sbb
imul
out
lahf
jg
es
clc
sbb
repz
push
repnz
mov
or
sub
negl
dec
pop
and
das
adc
push
and
cli
or
enter
xchg
pop
mov
mov
sti
xchg
testl
leave
out
add
cmpl
in
fcoms
insb
or
je
xlat
mov
hlt
out
in
mov
stos
sti
xlat
les
inc
and
fcoml
imul
dec
lahf
dec
daa
pop
mov
mov
pop
dec
add
adc
push
xor
out
cltd
fmuls
mov
lret
cmp
jno
mov
sub
test
add
fcoms
testl
repnz
mov
cmp
push
add
movsb
nop
outsl
repz
jmp
and
pop
into
jbe
cmp
mov
inc
aaa
fstpt
push
xchg
cwtl
inc
and
clc
add
xlat
fs
push
adc
sbb
int
add
mov
popf
push
dec
in
ret
lods
test
movsb
or
imul
adc
inc
xchg
in
jo
insl
iret
aad
or
shl
lods
jae
iret
mov
ds
pushf
jb
ja
mov
js
mov
nop
mov
into
jnp
cmpsl
cmp
lahf
pop
addb
push
mov
mov
rcl
cmp
pop
mov
xor
in
int3
or
adc
lahf
mov
cmp
stos
add
pop
sub
inc
jb
scas
outsb
cmp
sti
sbb
aad
cmc
and
or
cs
notb
xchg
movsl
repz
cmp
ds
and
push
addr16
lds
adc
mov
fisubs
push
inc
inc
icebp
add
nop
push
jge
fdivrs
mov
or
je
test
loope
insb
cmp
push
cmpb
push
add
les
stos
in
cli
mov
xor
add
sahf
pop
cmp
das
adc
lahf
test
sbb
mov
shll
sbb
sbb
out
pusha
mov
rorl
mov
inc
rol
test
pop
jbe
push
shr
lock
loop
aas
pusha
test
mov
push
mov
mull
xchg
jg
inc
pusha
jmp
bound
dec
jnp
add
xchg
cs
sbb
inc
repz
mov
mov
into
data16
mov
inc
lock
std
inc
movsb
push
ficoms
push
jle
dec
test
stc
stos
xchg
daa
rolb
ficompl
jbe
xor
push
mov
lcall
mov
clc
out
push
mov
jb
mov
xchg
lret
xchg
sbb
pop
sti
in
lcall
outsl
xchg
mov
pushf
push
xchg
data16
xchg
sbb
shrl
sub
or
cli
xchg
loop
scas
ror
lds
adc
xor
mov
dec
cwtl
into
mov
movsl
mov
add
repz
inc
add
mov
cmpsb
sub
mov
sub
dec
mov
mov
dec
and
push
sahf
cmovnp
nop
iret
pop
push
add
cli
push
add
ror
pcmpgtd
cmp
iret
imul
cwtl
adc
arpl
push
insb
jbe
fucomp
cmp
mov
shll
cli
sahf
and
pop
xchg
jns
add
imul
ret
inc
es
das
sub
sub
or
jg
jecxz
dec
call
pop
scas
leave
rol
repnz
xor
pop
jge
push
mov
outsb
cmp
daa
aas
and
xchg
sub
subb
push
inc
mov
and
xchg
notb
xchg
lods
mov
aaa
mov
daa
not
pop
or
pop
adcb
dec
mov
adc
lahf
daa
iret
lcall
test
cmp
sbb
pusha
adc
sbb
ja
push
xchg
inc
dec
jp
stc
mov
jp
into
cmp
jl
int3
xlat
sub
mov
xlat
jnp
jne
dec
inc
pop
pop
das
or
mov
fucomi
or
loopne
adc
add
imul
xrelease
sbb
test
sbb
sub
xor
xor
movsb
dec
gs
mov
stc
lret
sbb
int3
loop
fistpl
adc
dec
sbb
add
xor
push
adc
fisubrl
cltd
mov
cli
xlat
dec
mov
xorb
jl
call
cmp
mov
mov
stos
push
xchg
jo
insl
mov
jg
mov
rcrl
add
test
push
adc
test
mov
or
rcll
mov
mov
into
scas
mov
imul
mov
sub
pusha
lock
outsb
cmp
dec
adc
inc
arpl
sub
fs
call
xchg
subl
add
jbe
jae
aas
push
shll
test
dec
cmp
add
out
mov
or
mov
mov
sbb
dec
mov
stos
outsb
pop
shlb
push
mov
mov
in
fwait
hlt
popf
cwtl
popa
xor
push
mov
repz
ja
adc
sbb
mov
push
sub
call
jg
mov
mov
add
repnz
mov
sub
and
out
das
testl
sbb
or
lcall
ljmp
sbb
lret
pop
pusha
mov
sbb
outsb
adc
inc
out
push
lret
sbb
dec
rcrb
jp
and
add
adc
inc
mov
add
divl
lret
push
sub
mov
mov
inc
aas
pop
cmp
jge
ljmp
jnp
bound
popa
and
xlat
cmp
insb
test
push
cmp
sar
lds
jmp
push
and
cs
mov
jmp
pop
out
sub
sbb
icebp
mov
push
test
jb
out
aas
sbbl
mov
mov
addb
or
cmp
in
sub
xor
pop
and
inc
fsubl
pop
fs
mov
jae
cmpsb
out
xlat
ja
test
nop
in
dec
arpl
lret
iret
inc
mov
xchg
out
jae
xorl
daa
shll
xor
mov
pop
pop
sub
repz
int3
jl
xchg
cs
ljmp
and
dec
push
scas
fsubrl
add
and
jge
adc
aaa
shlb
movsb
push
ljmp
aas
push
mov
or
jecxz
jo
out
jl
cmp
jnp
or
aas
addr16
mov
mov
inc
pop
outsl
stos
xor
sub
xlat
mov
push
pop
sbb
pop
sub
es
mov
or
mov
fisubs
sub
ret
daa
movsb
pop
inc
cmpsl
add
shr
pushf
pop
inc
dec
lods
jbe
inc
into
imul
lahf
mov
int
push
aas
mov
ror
lahf
rcll
inc
inc
pop
icebp
andb
cld
incb
fiaddl
rorb
outsb
lahf
aaa
mov
aaa
push
push
ljmp
sub
out
out
cmpsb
outsl
mov
repz
cmc
or
fmulp
cwtl
cmovno
push
push
jb
adc
pop
jle
jno
ret
jnp
ss
inc
lock
mov
ljmp
xchg
sub
sub
lret
daa
and
out
inc
in
in
pop
mov
out
sti
int3
sbb
notb
out
xchg
les
icebp
xchg
sub
jp
mulb
insb
cmp
shl
push
push
out
mov
ret
and
out
mov
push
adc
xchg
push
pop
pop
bound
mov
fistpll
push
mov
mov
imul
imul
mov
dec
imul
xlat
imul
and
pop
enter
mov
sbb
and
xor
hlt
shll
mov
xlat
out
mov
addr16
inc
iret
xlat
lahf
mov
or
adc
fs
orl
mov
in
mov
rcrl
inc
daa
push
adc
add
xchg
out
push
xlat
je
mov
sub
dec
mov
push
mov
mov
mov
std
jl
mov
xchg
dec
or
in
ds
addr16
cli
jae
mov
imul
inc
mov
jnp
sbb
je
lret
mov
inc
es
dec
xor
popf
xlat
mov
sub
js
repnz
lock
imul
or
dec
mov
jg
sub
out
or
sbb
xor
clc
mov
sahf
jo
into
insb
dec
push
inc
jno
cmp
outsl
mov
mov
dec
subb
adc
inc
push
jmp
cmp
call
hlt
cmp
jmp
xchg
lds
lret
clc
jg
lahf
xchg
inc
cwtl
push
rcrl
movsl
shrb
jge
inc
push
cmp
mov
and
and
mov
fwait
jg
pop
cmp
pop
out
ret
cmp
add
and
jge
sbb
outsb
adc
add
jle
ja
into
jno
rcrb
add
das
push
roll
shll
pop
xchg
push
fisubrs
jmp
fsub
push
mov
mov
scas
outsb
mov
insb
or
jp
jnp
mov
inc
js
femms
sbb
ljmp
push
pop
adc
jo
loop
movsl
movl
std
ret
jae
scas
lods
out
pusha
pusha
movsb
pop
loope
addr16
inc
scas
dec
mov
cmc
adc
movsb
lahf
lods
mov
punpckhbw
sbb
cli
dec
gs
mov
hlt
sbb
mov
add
or
int
in
inc
xchg
inc
je
fninit
push
sbb
inc
jecxz
inc
push
pop
ret
insl
shl
das
pop
mov
repnz
movsb
cs
pusha
stos
sbb
pop
outsb
call
jae
and
mov
and
mov
adc
cmp
ds
dec
pop
adc
sti
xor
inc
xorl
clc
inc
lahf
inc
sub
repnz
fstps
in
fdiv
or
lret
xchg
ret
int3
xchg
loopne
shll
sub
sub
in
jecxz
arpl
sbb
xchg
daa
xchg
pop
ds
in
out
mov
test
push
cltd
cli
pop
inc
push
jg
pop
test
repnz
clc
fisttps
cmp
mov
xchg
test
dec
jecxz
xchg
pop
jg
push
mov
shld
dec
loopne
das
popf
test
repz
mov
aam
push
xchg
scas
sbb
shrb
movl
addr16
out
movsb
push
jmp
sbb
dec
jg
adc
cld
pusha
icebp
add
mov
dec
rep
insb
mov
mov
sbb
push
les
nop
xor
or
mov
pop
into
sub
addr16
sbb
dec
fwait
pop
dec
popa
fstl
jne
adc
sub
scas
xchg
fildll
test
mov
call
jg
loop
out
push
sbb
sahf
popa
dec
inc
sbb
add
cmpsl
mov
incl
push
fisttps
jnp
sub
sub
fisttps
or
add
dec
or
ror
insl
sub
idivb
jmp
out
mov
fdivrs
daa
mov
fcoms
test
lods
cmpsl
pushf
jmp
sbb
iret
sub
popf
daa
loope
pop
fsubrl
loope
adc
mov
fdiv
test
fildl
mov
push
addr16
dec
push
sub
add
push
cmp
cmp
lock
inc
mov
inc
push
jp
xchg
and
movsl
push
mov
sub
pop
adc
out
mov
fisttpl
imull
loop
pop
movsl
cwtl
sti
push
inc
sti
jae
repnz
lret
xor
pop
lock
jae
dec
mov
cmpsl
pop
add
push
sub
jbe
and
cmp
xor
es
roll
out
lahf
pop
jl
cmpsl
mov
aaa
xchg
pop
pop
sahf
push
jae
mov
push
dec
mov
mov
enter
inc
add
jmp
ds
xchg
ja
jb
roll
rol
mov
test
in
idivl
cmp
jecxz
pop
sub
sarl
aas
lcall
inc
add
fs
enter
aam
xor
lock
ljmp
xchg
mov
mov
adc
xchg
sub
insl
fwait
sarb
add
add
mov
dec
xchg
xchg
arpl
jb
sub
lahf
sub
push
mov
nop
cwtl
inc
hlt
call
mov
and
cmp
sar
movsl
sbb
frstor
nop
jg
mov
adc
lock
mov
imul
cmp
imul
cmc
mov
sbbl
jmp
lcall
nop
scas
mov
add
stos
pop
adc
test
cmp
or
daa
push
into
mov
or
in
cld
pop
mov
push
cmp
adc
fcoml
adc
out
push
sbb
bound
test
and
aaa
pop
lock
cmp
sti
pop
rcrb
push
idivl
enter
jmp
mov
cmp
dec
ja
stos
in
out
inc
mov
xchg
sub
out
jae
shrb
rcll
pop
dec
push
test
pushf
fsubrs
mov
out
imul
and
scas
repz
jecxz
add
sub
ja
inc
in
mov
jle
inc
xor
pop
mov
mov
sub
pop
out
cmpsb
mov
xor
stc
and
in
cmp
inc
mov
test
add
ljmp
dec
repnz
push
lock
jle
shr
scas
xchg
jne
cmpsl
jb
cmp
mov
lret
js
push
jne
mov
lods
imul
imull
mov
xor
push
imul
xor
mov
push
add
dec
loopne
pop
or
add
jmp
cmpsl
lods
aam
data16
ret
fiadds
pop
roll
out
int
xchg
jmp
mov
mov
and
xor
dec
sub
add
clc
pop
ljmp
mov
dec
test
leave
cmovg
pop
sbb
pop
jbe
jbe
in
pop
imul
lods
lock
sbb
pop
dec
aas
mov
xchg
adc
outsl
sarl
and
insb
or
adc
mov
loop
mov
pop
push
cmpb
shrb
enter
sub
mov
sbb
popf
scas
inc
and
cmp
jnp
gs
add
pop
xchg
stos
cs
push
mov
cmpsb
repnz
dec
add
testb
add
lahf
jecxz
divb
jmp
iret
in
pop
pop
add
sti
dec
and
xor
stos
arpl
mov
push
pop
fidivrl
dec
imul
xchg
dec
xor
ja
xor
jmp
daa
int3
push
std
fcomp
sub
popa
jl
outsb
repz
mov
jecxz
lea
and
mov
out
cmp
lock
fstpt
cmpsl
xchg
imulb
fs
icebp
add
imulb
jl
jl
in
adc
not
out
cmp
xor
cmp
into
mov
mov
pusha
and
mov
je
scas
rolb
pop
pop
and
mov
and
inc
shll
movsl
sbb
or
jg
aas
in
out
adc
mov
xlat
mov
stos
xchg
mov
push
icebp
sbb
call
jge
cmpsl
loop
jmp
aad
mov
mov
add
jbe
imul
and
inc
mov
sbb
jbe
cmp
scas
pop
and
mov
adc
iret
xor
inc
test
dec
stos
daa
iret
pop
ljmp
jg
cmp
mov
lahf
ret
cmp
xor
sarb
test
cld
xchg
mov
mov
jne
jno
pop
lock
push
in
and
adc
mov
add
bound
push
dec
into
push
adc
cmp
mov
aaa
push
loopne
stos
lahf
jle
outsl
jge
lret
jp
mov
sbb
das
lods
cmc
mov
cmp
test
dec
mov
sbb
test
fdivrs
loop
xor
cmp
arpl
out
call
push
cli
loope
cmp
mov
stc
dec
mov
sbb
or
ret
int
sbb
inc
cmp
clc
gs
int3
sub
scas
std
clc
sub
rcl
or
mov
lret
loope
push
jg
hlt
lahf
pcmpeqw
js
fsubs
mov
inc
lahf
movsb
inc
jo
dec
jg
xor
inc
popa
add
addb
fidivrs
dec
pop
mov
mov
and
jo
ja
mov
cmpsl
lret
imul
pop
out
pusha
gs
jo
enter
int
or
lods
xchg
outsl
sti
test
push
mov
sarb
cmp
les
sbb
and
imul
pop
lods
dec
sbb
lods
and
and
call
inc
pop
ljmp
out
mov
mov
sub
cmp
sbb
negl
negb
mov
dec
push
inc
xlat
ret
cwtl
xchg
dec
and
rorb
cwtl
mov
mov
nop
mov
mov
cld
xor
gs
sbb
dec
outsb
sub
stc
ret
sahf
jo
xchg
lods
push
lcall
loop
push
or
pop
xchg
dec
and
xchg
lahf
loopne
das
stc
dec
rorl
jg
sbb
dec
lock
inc
sub
out
in
xchg
lret
mov
mov
cmp
adc
xor
jae
test
imul
outsl
xor
int3
and
fldl
jbe
aad
jg
jo
push
sub
lret
mov
cmc
scas
pop
mov
mov
sub
fdivrl
sbbl
lahf
pop
shrb
mov
lret
sti
jnp
pop
sbb
adc
outsb
addr16
andl
faddp
cwtl
push
ret
imul
or
ss
ja
xchg
lea
fwait
inc
cld
jae
stos
pop
adc
add
jno
add
lods
xor
insb
pusha
ret
insb
dec
pop
sbb
mov
outsb
mov
adc
lcall
adc
repz
xor
ror
data16
sub
out
movsb
fsubrs
mov
pop
and
jg
push
ja
pop
loop
pop
daa
inc
add
out
mov
push
push
jmp
adc
pop
xchg
fiadds
push
lret
xchg
inc
scas
das
push
or
loop
sbb
or
sub
push
jecxz
add
pop
lret
mov
sbb
adc
xor
push
shll
inc
sub
cmp
cltd
or
test
push
addr16
push
lret
xlat
xchg
mov
sbb
push
sub
test
pop
xlat
cld
push
add
scas
repz
and
sub
fwait
notb
in
ja
nop
push
das
xor
in
lret
add
stos
and
mov
es
call
sti
jnp
pop
dec
mov
add
lahf
add
mov
out
dec
cwtl
push
xchg
mov
popf
ror
mov
mov
lahf
daa
out
add
xchg
loopne
stc
outsb
xor
pop
in
ds
cmp
jne
pop
imul
pop
clc
xor
xchg
inc
shl
fists
mov
out
inc
or
sub
fisubrs
cld
aad
pop
sahf
aaa
enter
ja
mov
inc
scas
insb
add
xchg
dec
lret
scas
mov
repz
pop
jge
iret
in
fnstcw
out
adc
jae
or
cmpsl
mov
into
das
dec
add
test
jno
inc
dec
ja
sub
aam
cmp
stos
popf
push
sahf
jo
test
sbb
or
jmp
sub
add
imul
repnz
mov
scas
cmp
ret
lods
bound
pop
mov
mov
mov
pop
aam
or
sbb
aam
cmp
jo
xchg
in
xchg
sbb
pop
mov
mov
xor
iret
mov
cmpsl
rorb
loop
cmp
dec
test
loope
popa
cmp
dec
outsl
loope
add
addl
dec
xchg
addl
xchg
jl
add
fsub
adc
cmpsl
xor
xor
jno
pop
test
aas
xchg
mov
int3
jb
and
jle
xchg
divl
or
jo
push
jl
inc
mov
push
out
and
int
pop
inc
jge
in
dec
dec
mov
pop
mov
adc
test
push
bound
adc
sub
add
sub
mov
dec
stos
sti
clc
frstor
sub
inc
stos
pop
cmp
pop
addr16
add
jnp
sbb
rorl
xlat
pop
and
out
repz
pop
je
gs
pop
push
mov
pop
or
lret
adc
xor
hlt
pushf
xchg
pop
mulb
xor
ja,pt
xor
lret
add
outsb
cmpsl
pop
insl
fcom
lret
mov
and
hlt
imul
inc
mov
adc
inc
mov
mov
std
xchg
int
or
call
mov
call
cmpsb
jle
xchg
cmp
int3
std
daa
lret
fs
jbe
out
and
icebp
jg
test
cmp
push
les
mov
xchg
out
paddusw
mov
mov
dec
popf
jge
jg
adc
js
sarb
cmp
fs
pop
jae
loop
arpl
sbb
incl
cmp
inc
push
push
push
sbb
shll
sub
xchg
and
jl
adc
ret
add
outsl
xor
sub
sbb
or
jbe
push
cmp
cmpsl
sub
je
mov
adc
out
scas
jnp
jns
std
lods
cs
rcll
repnz
cmp
dec
shrb
push
out
pop
jbe
in
inc
jecxz
inc
fisttpll
ja
pop
pop
xor
test
fs
adc
arpl
lods
pop
pop
mov
mov
cmpsb
xacquire
fpatan
dec
inc
sub
imul
and
loope
aas
ret
nopl
xchg
popf
enter
inc
inc
ljmp
rol
xor
mov
mov
andl
sub
inc
mov
mov
int
fstps
int
push
inc
adc
cmp
arpl
sub
add
testb
xlat
or
mov
iret
adcb
push
cmpsb
or
loopne
pop
and
push
xor
adc
xchg
or
inc
push
xchg
inc
or
xor
adc
adc
mov
in
cmp
mov
loop
mov
test
add
cmpsl
mov
dec
adc
jp
testb
lds
pop
popf
add
or
cwtl
dec
pop
push
shl
sub
dec
dec
and
movsl
movsb
std
fistpll
mov
and
push
mov
push
subb
mov
jnp
loop
rcll
jo
inc
pop
xchg
mov
mov
adc
add
xchg
movsl
and
xchg
cmp
pushf
ss
imul
xchg
dec
iret
out
jmp
arpl
test
pop
xchg
fs
movsl
xchg
fcmovnu
andl
fldenv
fadd
sbb
dec
adc
sub
cwtl
xchg
jbe
test
or
mov
negl
negb
test
out
push
insl
aam
sete
dec
sub
xor
adc
jp
stc
sti
jae
sub
idiv
ja
pop
and
fdivrs
xor
shrl
cmp
or
push
mov
jg
daa
pop
jbe
fisubrl
xchg
mov
sbbb
sbb
je
xchg
stos
ds
jae
test
adc
xchg
mov
cmpsl
das
pop
out
aam
iret
pusha
fwait
leave
and
dec
sub
push
ret
rcrl
inc
xchg
xor
inc
jb
daa
sti
pop
jnp
les
xor
xchg
sti
xor
or
mov
jl
adc
add
pop
fistpl
xor
daa
rcrl
adc
and
imul
sti
je
or
lahf
mov
sub
popf
pop
es
lahf
aad
daa
inc
add
cmp
aaa
push
cmpsl
mov
cmp
sub
jo
pop
call
out
mov
aas
sbb
lahf
inc
je
out
pusha
push
xchg
dec
out
xor
fdiv
fcmovnb
xchg
rorl
out
lret
push
adc
or
inc
lahf
andb
in
push
ljmp
int3
insl
inc
xor
bsf
inc
xor
adc
add
cmpsl
mov
sbb
shrl
int
lcall
xchg
cmp
lea
arpl
mov
sub
in
int
mov
mov
cmpsb
jo
or
scas
pop
mov
sbb
inc
jecxz
mov
push
cmp
aad
inc
fiaddl
lcall
fcmovbe
data16
shl
test
xlat
push
jl
repnz
bound
xchg
mov
pusha
cmp
jae
outsb
cmc
push
bound
mov
pop
fwait
enter
sti
addr16
cmpsb
mov
push
jns
mov
into
pop
sub
out
lahf
jae
jl
imulb
das
and
cmovns
outsl
cmp
pushf
cltd
cld
push
jnp
out
jae
neg
adc
xchg
mov
imul
mov
sbb
and
cld
mov
shll
add
add
out
adc
repz
pusha
mov
ja
push
cmp
mov
popa
dec
and
in
ja
dec
test
mov
orb
testl
pop
int
xchg
mov
lcall
jge
mov
pop
pop
popl
movb
pop
test
push
jl
shll
jp
fdivrl
scas
mov
movsb
cld
out
imul
test
out
xor
inc
mov
les
int3
sahf
inc
ffreep
jnp,pn
mov
adc
push
cltd
adc
mov
fisttpl
data16
cltd
adc
fcoml
inc
and
out
pop
imul
clc
push
fists
fildl
pushf
or
gs
push
scas
faddl
and
xchg
repnz
pop
int
out
add
roll
dec
mov
cmp
cmpsb
mov
jp
jns
xor
nop
addr16
test
aaa
pop
dec
arpl
cmp
adc
mov
xchg
mov
add
push
mov
ret
sarl
xor
mov
xchg
inc
enter
jae
ljmp
call
imul
inc
push
sub
xchg
inc
dec
imul
or
dec
sbb
test
lods
repz
subb
add
inc
jb
sti
div
fisubrs
xchg
mov
or
push
out
inc
xchg
push
jno
mov
mov
hlt
xor
push
loop
hlt
cmp
scas
sti
sub
push
divl
jb
xlat
mov
cmp
std
pushf
jo
inc
jecxz
repnz
iret
out
fdiv
push
push
cmp
out
rorl
outsb
mov
shll
inc
outsl
stos
xor
dec
jg
ret
add
dec
pop
xchg
pop
in
push
or
idiv
dec
ja
add
cwtl
xor
pushf
mov
jmp
call
lods
jecxz
sysret
pop
ljmp
aas
leave
mov
jae
repz
loop
inc
out
aad
and
sbb
push
sub
lods
sbb
jnp
push
add
pop
mov
push
fdiv
push
movsb
push
sub
jbe
ss
xorb
pminsw
dec
jp
in
notl
or
mov
inc
cmp
add
ds
jp
out
out
push
xchg
out
jl
jecxz
call
mull
daa
in
push
xchg
mov
inc
dec
xchg
push
jb
xor
cmp
cmpsb
call
pop
cmp
rcrb
fistl
pop
push
aaa
push
push
lret
rorl
mov
jae
popw
xchg
cwtl
xchg
fcmovne
scas
mov
test
adc
nop
xor
xchg
cmp
into
xchg
cmp
push
lcall
xchg
or
xchg
outsb
jg
sbb
cli
scas
pop
cmp
sbb
xchg
aas
aas
inc
mov
adc
idiv
xchg
outsb
shl
cwtl
loopne
adc
loope
cmp
or
xchg
stc
andb
mov
test
lods
xchg
cmp
jmp
insl
mov
fsubrl
ficompl
cld
cmp
mov
aam
sahf
aaa
jno
repz
cmc
incb
je
insb
xchg
inc
push
cmp
stos
cmpsb
add
inc
in
lcall
mov
or
test
je
sbb
xor
and
xor
fadds
mov
loop
lods
popl
inc
or
rcrb
call
test
test
and
xlat
mov
mov
call
ljmp
push
pop
jp
xor
adc
or
jnp
or
inc
dec
mov
cmp
dec
xchg
repnz
push
gs
xor
push
jg
fwait
cmp
outsl
and
mov
cmp
testb
in
hlt
jl
icebp
shll
and
scas
add
clc
in
pop
sub
mov
call
xor
outsl
mov
push
js
xchg
sub
sub
pop
je
add
adc
sti
fsubr
fucomi
rcpps
std
jne
sub
pop
xchg
ror
or
mov
sbb
movsl
or
xchg
push
jl
cmp
inc
sbb
cmpsl
dec
push
xchg
outsb
lret
xchg
fsubrl
sub
sbb
das
hlt
scas
add
aam
inc
js
out
stos
std
sbb
jp
cwtl
sub
mov
and
ret
sbb
add
sbb
cld
rcll
negl
dec
pop
or
arpl
sbb
faddl
addr16
cld
rol
jg
or
xchg
jg
in
mov
mov
mov
fucom
sti
xchg
dec
mov
pop
dec
xor
cld
mov
mov
mov
aaa
push
popf
sub
fwait
and
shrb
or
int
inc
ret
mov
ret
stos
dec
jb
pop
mov
mov
mov
and
pop
jecxz
fs
add
lea
xor
jbe
jecxz
fnstsw
jp
bound
mov
jmp
jbe
and
popf
icebp
outsb
jmp
cmpsl
popf
or
pop
jo
add
xor
loop
out
lahf
cmp
rolb
adc
or
inc
pop
leave
pop
loop
xlat
scas
push
arpl
out
add
cmp
mov
add
or
xlat
in
and
or
loopne
fcomps
shlw
push
xor
lahf
in
mov
lret
movsl
cmp
ret
sub
bound
scas
daa
fists
jecxz
imul
jae
movswl
mov
fwait
cwtl
neg
clc
mov
jnp
loop
jb
adc
fnstenv
es
push
out
mov
mov
jb
notl
in
mov
pop
incb
clc
push
je
movsb
in
inc
out
call
pushf
ja
xlat
mov
iret
insb
daa
xor
insl
pushf
pop
sbb
in
adc
jne
ja
cmp
mov
pop
or
xor
dec
and
mov
pop
mov
not
push
cmp
cmp
cld
jl
cwtl
pop
jmp
out
movsb
xchg
shrl
cmp
mov
mov
add
pushf
adc
push
mov
fisubs
jl
lods
mov
leave
dec
fiaddl
mov
jp
mov
sahf
test
add
mov
push
das
jb
ret
pop
out
nop
mov
stos
outsb
cmp
fwait
arpl
jg
arpl
mov
mov
in
divl
fisttpll
xor
add
imul
pushf
das
insl
int3
ret
adc
scas
pop
test
pop
icebp
mov
daa
pop
jmp
testl
fdivrs
sub
inc
lods
cmp
add
mov
sub
pop
or
mov
stos
add
add
fcmovu
inc
movsb
xlat
mov
or
dec
jne
ljmp
inc
out
pusha
cld
leave
aas
push
fcmovnb
mov
mov
cmp
lret
fwait
pop
sbb
cmc
pop
jecxz
cmpsl
and
inc
mov
sahf
cmc
sbb
cmc
arpl
jnp
iret
fildl
pushf
imul
call
lret
fisubl
popa
xchg
iret
shlb
test
mov
cli
scas
es
jae
das
scas
testl
lret
aaa
aas
mov
adc
aam
mov
sti
xchg
aam
adc
adc
push
or
fistl
in
mov
pop
inc
or
cmpsb
xchg
mov
addl
repnz
jg
or
aam
mov
loope
out
fs
stos
jns
iret
cwtl
jnp
pusha
in
jge
jle
jmp
lods
mov
jne
std
push
mov
sbb
sarb
cmp
sbb
adc
add
xor
xorl
scas
lret
ret
xor
fcmovbe
lock
jae
jno
insl
out
icebp
mov
aaa
mov
int
xchg
xchg
xor
ja
pop
cmp
mov
mov
adc
mov
sarl
shrb
mov
push
fcoml
push
sahf
mov
test
stc
movsb
adc
test
vmovsd
ja
notb
xor
lods
fisubrs
loop
and
inc
xor
or
adc
ss
iret
andl
inc
mov
jb
xor
or
movnti
lcall
test
add
adc
push
cwtl
and
add
es
push
mov
fists
je
push
repz
sbb
mov
jae
scas
in
pop
aam
mov
inc
pop
test
scas
sbb
sbb
loope
movsl
or
sub
jnp
cmc
push
andb
add
gs
adcl
mov
stos
insl
push
scas
arpl
jo
rcrl
test
dec
in
int
jno
iret
jbe
push
loope
push
js
add
lahf
imul
js
cld
fucomi
repnz
movsl
adc
shlb
xchg
sarl
les
xchg
leave
cwtl
or
push
sub
mov
scas
test
mov
mov
ljmp
adc
popf
sahf
jmp
mov
stos
push
xchg
lock
in
pop
pop
pop
scas
inc
adc
ret
fsubrs
jo
push
mov
and
push
mov
nop
mov
or
lods
ss
cmp
mov
in
jmp
mov
inc
jno
aaa
jle
push
pushf
faddl
fidivs
test
mov
ret
mov
loop
and
push
inc
das
mov
cmp
mov
and
pop
jl
leave
push
out
popa
xchg
dec
shrl
jle
add
xor
pushf
sbb
lea
nop
dec
jb
jmp
jl
mov
lods
and
inc
jb
mov
mov
movsb
outsl
mov
pusha
mov
cmpsl
and
into
mov
pop
xchg
lcall
push
jb
sub
jecxz
and
stc
mov
adcl
pop
loopne
loope
ds
pop
repnz
xor
ds
and
out
xchg
dec
hlt
fistpll
js
push
jmp
orl
mov
add
and
iret
cmp
mov
and
push
xor
and
fldlg2
add
pop
xchg
mov
sbb
adc
or
aaa
test
aas
bound
std
cwtl
jmp
cmp
adc
sbb
mov
or
lods
es
subb
loop
sub
dec
mov
pop
in
fnstcw
xchg
lret
test
fldt
adc
movl
rclb
test
or
arpl
mov
fwait
sub
mov
stos
xorl
pushf
xorl
inc
xor
out
andb
sbb
mov
dec
and
jno
dec
shl
and
cs
outsb
jns
jae
adc
sbb
or
push
dec
or
mov
cltd
add
sbb
or
mov
inc
cmp
and
sti
dec
shr
jnp
xchg
push
loop
fstl
sbbb
dec
mov
addr16
daa
pop
mov
js
lcall
jp,pn
arpl
adc
fldenv
push
xchg
fstp
test
bound
pop
push
mov
inc
icebp
push
and
aas
lds
pop
adc
pop
pop
inc
sub
or
push
dec
jle
into
fldenv
jl
mov
push
sub
mov
pop
mov
pop
stc
push
jle
mov
je
test
nop
fs
sahf
push
dec
lods
in
imul
fcoms
ss
les
inc
aam
jo
aas
xchg
enter
xchg
icebp
bound
mov
ret
jnp
fistl
or
jbe
xor
in
jp
pop
mov
sub
mov
or
cmpsl
cmp
int
mov
mov
pushl
mov
sub
arpl
je
mov
add
lcall
test
mov
cs
std
subl
jge
in
xchg
pushf
mov
repnz
xor
hlt
outsb
out
adc
pop
addb
mov
mov
rcrl
call
ss
rcr
movsb
shl
je
nop
mov
leave
insb
daa
push
imul
xchg
jp
adc
adc
ret
pop
jge
push
xchg
sub
fiaddl
xor
add
jge
sub
mov
cmp
xlat
adcb
sub
fistl
mov
shl
and
mov
stos
push
fcmovbe
mov
movsb
sub
rcrl
pop
aas
jb
je
mov
sub
xchg
adc
in
shlb
sti
push
subb
xchg
sbb
mul
lds
not
and
lods
dec
scas
mov
shlb
orl
rcrb
or
mov
push
data16
pushw
aaa
cmp
mov
mov
es
aam
scas
cmp
mov
fmuls
dec
flds
cmpsb
in
add
pop
xor
fiadds
fs
xchg
movsb
xchg
or
mov
xchg
sbb
ret
push
xchg
mov
jae
sbb
fisttpl
mov
fcmovnu
xchg
int3
stos
test
adc
add
xor
push
sbb
outsb
push
dec
test
mov
stos
pop
mov
jae
stc
fstl
pop
sbb
add
ljmp
clc
nop
push
pop
je
push
push
fistps
out
and
push
stos
daa
filds
push
out
pop
push
sub
clc
in
push
cld
pop
ss
daa
xlat
gs
test
adc
xchg
cmc
mov
out
sub
jge
sub
xor
loop
shl
adc
pop
pop
imul
int3
mov
fbld
rcrl
je
add
test
inc
mov
or
jl
les
inc
push
dec
pop
test
ds
int3
pop
push
pop
cmp
movl
cmpsl
fistpl
insb
xor
aaa
xchg
mov
or
sub
xor
or
or
ror
sbb
inc
or
mov
pop
cmp
ret
aas
movsb
jnp
sarb
or
jp
xor
cmp
push
inc
inc
iret
pop
out
stc
inc
inc
inc
or
xchg
movsb
aas
pop
inc
push
push
push
test
cmp
outsl
mov
adc
xchg
inc
or
jb
test
and
dec
test
gs
mov
insb
arpl
and
pop
repz
adc
les
mov
mov
mov
mov
lret
xchg
imul
adc
fldcw
sti
fcoml
enter
enter
mov
cmp
insb
scas
pop
addr16
imul
jp
mov
jae
lods
mov
iret
pop
inc
lds
mov
repz
fimull
jl
mov
xchg
or
test
sub
mov
lret
and
ret
add
aas
pop
int
pop
imul
xor
xchg
cli
mov
xchg
sub
pop
scas
mov
xlat
negb
xor
daa
cli
test
push
mov
adc
inc
das
lods
mov
insb
mov
imul
or
dec
jne
and
cwtl
cld
outsb
fwait
jmp
icebp
pop
pop
push
jno
out
ret
dec
cmp
xor
mov
adc
fcomi
lahf
cld
mov
sarb
shll
adc
stc
sbb
inc
iret
and
pop
bound
cmp
out
cli
fsubr
pop
sbb
mov
mov
inc
cld
leave
out
xchg
enter
in
mov
jnp
or
jecxz
inc
das
rclb
add
insb
mov
jae
cmpsl
push
xor
shlb
cmp
dec
push
js
aam
popf
mov
mov
pop
addr16
pop
pop
loop
or
nop
dec
loopne
stc
or
iret
loope
scas
mov
mov
dec
aad
cmp
ds
sbb
mov
ja
mov
adcb
push
loopne
dec
mov
sahf
sub
ret
sahf
pop
les
or
xchg
push
in
adc
mov
inc
pop
das
pop
enter
inc
push
arpl
add
push
not
iret
mov
inc
push
cwtl
pop
pop
jg
jnp
in
jp
pop
test
jmp
push
adcb
dec
dec
cmpsl
mov
push
cwtl
mov
enter
cmpsl
inc
or
xchg
sarl
ja
imul
xchg
rorl
enter
push
xchg
jae
or
cmp
cmpl
mul
stos
nop
xor
mov
sbb
movq
pop
mov
jmp
das
add
add
xchg
cmp
pushf
pop
inc
cmp
iret
fdivrl
test
pop
mov
dec
mov
pop
mov
sbb
enter
pop
mov
out
ljmp
mov
xor
stos
sub
addr16
dec
arpl
lea
xchg
mov
fs
dec
scas
ja
dec
mov
dec
daa
adc
lret
out
xchg
or
sbb
mov
push
andl
cltd
xchg
jge
xor
inc
dec
cld
or
ficomps
cmp
sub
lea
pusha
out
rcrl
inc
loopne
inc
out
mov
inc
pop
xchg
adc
adc
inc
int3
je
out
and
fistpll
addr16
fsubs
out
fisttpl
ja
xchg
subl
push
stos
out
xor
out
and
cmp
dec
xchg
ds
or
in
test
mov
dec
mov
fwait
add
cmp
fsts
fucom
push
cmc
push
fnsave
mov
pop
rcll
jl
sub
inc
pop
movsl
hlt
out
ss
or
pop
and
pop
je
mov
xlat
jb
pop
xor
xor
icebp
hlt
fildll
iret
pop
cmp
cmpsl
shlb
mov
sub
lods
stos
sarl
jns
jge
out
jo
idivl
push
push
add
mov
ljmp
inc
ljmp
pop
mov
xchg
add
les
popf
fwait
or
inc
xchg
xor
or
incb
int3
popf
outsl
xchg
mov
movsb
repz
jmp
js
cwtl
jmp
stos
nop
shlb
pop
ror
jb
sbb
inc
pop
ljmp
adc
pop
push
pop
cmp
jge
jl
shl
xchg
test
hlt
lcall
icebp
pop
push
dec
mov
lock
xor
dec
imul
jnp
data16
inc
into
mov
lret
add
repz
inc
or
adc
imul
add
inc
call
jae
ja
mov
jmp
fisubrl
test
xchg
mov
ret
mov
scas
push
movsw
inc
xchg
xor
repz
insb
fmul
dec
cwtl
cmpsb
mov
jb
adcl
jne
adc
fisubl
push
repz
jno
and
mov
add
jmp
pop
movsl
pushf
pushf
jb
out
add
les
push
das
rcrl
jne
push
mov
div
mov
fsubr
adc
pop
sbb
push
jae
push
jne
insl
popf
rol
jo
rcll
iret
out
xchg
out
pop
add
rcll
bnd
hlt
pop
jp
add
or
loope
sub
test
pop
popa
and
mov
insb
addr16
insb
cmp
mov
or
dec
inc
and
dec
je
out
inc
and
andl
push
int
add
push
adc
pop
rolb
add
mov
repz
sbb
mov
enter
dec
cwtl
sub
aaa
dec
push
leave
js
shrb
stos
xor
inc
call
or
sbb
popa
push
cmp
pop
mov
sbb
ja
push
xchg
rorl
sub
frstor
arpl
xchg
ret
inc
imul
stos
pop
ret
pop
dec
lret
jl
pop
stos
scas
mov
pop
cmpsl
inc
mov
mov
push
out
lret
or
push
push
dec
stos
jo
ja
jg
cli
inc
jnp
add
mov
ljmp
std
leave
lods
jbe
movsl
daa
movsl
fs
jbe
sbb
mov
fildll
insb
dec
add
stos
int3
inc
add
xor
mov
adc
ret
cld
adc
adc
setp
jnp
push
iret
pusha
add
imul
stos
jno
lret
stos
sti
sbb
aad
adc
cmpsl
adc
xchg
jge
or
sub
pop
ljmp
cmp
cmp
push
xchg
pop
sub
inc
xor
ret
leave
imul
ljmp
jp
pop
xchg
repz
movsl
insb
out
pop
jae
xor
xor
mov
mov
jecxz
out
mov
push
xchg
imull
out
leave
int
or
cli
or
xor
fildll
sbb
mov
insb
dec
inc
dec
dec
adc
pop
fwait
out
nop
fidivs
xchg
in
jo
pop
sbb
sbb
hlt
aas
int
repnz
and
movsl
mov
fs
ja
cmpsl
sbb
push
inc
pop
paddb
cmpsb
std
push
icebp
ja
lods
or
xor
movsl
shlb
lds
jp
test
fisubrs
lods
xor
arpl
dec
mov
stc
lret
xor
cmp
pop
mov
pop
pop
lds
stos
mov
inc
xchg
sub
cld
daa
hlt
and
arpl
sbb
cwtl
sti
in
arpl
add
inc
movsl
divb
push
pop
xchg
mov
jmp
ficoms
cmp
push
aas
xor
ret
xlat
rcll
mov
lahf
sub
mov
rcll
jp
sbb
int
arpl
or
sub
mov
cld
mov
mov
test
or
out
inc
fildl
or
sub
lret
jo
std
lods
js
outsb
hlt
add
inc
nop
pop
and
pushf
dec
rcr
hlt
and
fs
lahf
mov
lret
cmp
or
pop
inc
inc
cmp
subl
cltd
das
push
pop
sbb
cmp
mov
xor
mov
push
mov
popf
push
inc
or
jb
mov
add
push
ds
sahf
cmp
cwtl
and
and
aam
iret
push
test
add
dec
xchg
pop
add
adc
add
je
insb
jne
scas
daa
test
and
inc
shrl
xlat
and
jae
sbb
pop
jns
in
push
std
xor
pop
xchg
lahf
es
push
pushf
imul
into
fbld
ja
inc
and
stos
outsb
adc
add
sbb
sub
jne
mov
adc
out
call
mov
sub
repz
sub
xrelease
mov
and
movsb
jbe
fdivrp
or
inc
cld
ret
sbb
aas
into
xor
or
mov
lods
cmp
push
adc
std
popa
and
xor
pop
jae
addr16
rol
adc
aaa
jb
data16
imul
fwait
out
inc
or
mov
or
jmp
sub
out
pop
sbb
cmp
sub
mov
mov
xchg
mov
insb
cwtl
sarb
neg
dec
mov
fucomi
mov
push
les
dec
jo
insl
stos
sbb
mov
aas
je,pn
mov
xchg
iret
iret
and
pop
movsb
xor
jp
mov
int
popf
jnp
ljmp
adc
mov
cmp
std
sbb
cmp
pop
lods
sti
push
cmp
repnz
dec
push
out
push
push
jnp
push
jmp
das
ja
add
xchg
jno
les
cwtl
shrl
xchg
cld
ret
jecxz
dec
inc
inc
cmpsb
jle
je
or
add
push
dec
push
mov
lcall
outsb
mov
cwtl
loope,pn
test
sbb
ss
out
inc
out
in
js
mov
aaa
push
popf
enter
mov
enter
fs
movsb
and
xchg
sub
js
je
push
pop
push
lea
dec
icebp
stc
cmpsb
repnz
aad
mov
xor
cwtl
out
js
testb
xchg
or
sub
dec
sub
xchg
inc
cs
testb
xor
das
mov
cs
jle
out
ret
ljmp
sbb
sbb
ljmp
das
ss
mov
sbb
stos
cmpsb
xchg
scas
add
nop
repz
lret
mov
stos
cli
sbb
outsb
sbb
pop
xor
adc
dec
out
pop
fisttps
push
push
scas
inc
stc
mov
push
mov
push
addr16
mov
loop
insb
push
insl
bnd
xchg
fnstenv
mov
pop
or
xlat
xchg
loop
sub
sub
push
leave
or
ds
push
push
addr16
pop
test
mov
gs
repnz
push
push
cmc
stos
jne
push
into
sbbl
test
sub
sbb
repz
popa
dec
xchg
mov
mov
popf
xchg
cmc
adc
sbb
push
xor
cmpsl
and
push
inc
push
mov
fcoml
sbb
pop
fimuls
dec
fwait
into
sarb
pop
mov
imul
mov
mov
clc
bound
cwtl
jp
dec
dec
das
mov
cmp
inc
sbb
mov
mov
lods
test
cli
fisubs
dec
xlat
cmc
jp
data16
cmp
sub
push
jns
mov
jle
adc
dec
jno
popf
push
aad
pop
push
push
lock
das
arpl
cmpsl
add
sbb
and
push
add
jae
lea
sbb
test
ja
enter
out
inc
aas
shll
mov
xchg
popa
or
add
add
sub
in
inc
jecxz
mov
jg
insl
mov
inc
aam
hlt
lds
xchg
mov
dec
add
mov
adc
push
fisubrl
sub
add
rol
jbe
sbb
add
imul
pop
mulb
push
cmp
pop
test
sti
sti
dec
xchg
lret
pop
int
in
stos
jno
cmp
fdivl
mov
repnz
adc
push
movsl
rclb
add
jl
and
dec
fs
push
repnz
stc
pop
shll
ljmp
xchg
scas
or
pop
cmpsl
fucomip
lock
das
lret
inc
fiaddl
xchg
rclb
out
add
ret
xor
mov
imul
pop
lahf
cmp
xchg
mov
jle
sub
test
cltd
or
out
aad
call
or
sub
cli
jge
and
mov
mov
iretw
mov
jmp
dec
mov
fbld
xchg
fstpl
rorb
mov
test
cs
mov
fcoml
xor
push
mov
es
jb
xchg
sbb
loop
into
pop
out
stos
imul
mov
or
cli
add
pop
or
push
subl
cltd
out
fbstp
movsb
inc
jnp
push
pop
dec
aas
jp
jl
mov
dec
mov
jnp
push
popf
xor
mov
lret
out
jae
int3
nop
xor
cwtl
das
roll
xor
int
imul
mov
movsb
and
push
inc
mov
lea
sar
push
lret
je
jl
jp
std
sbb
stc
out
dec
pushf
mov
call
lock
cmpl
pop
push
sub
pop
pop
xlat
xchg
sub
mov
clc
jle
mov
xchg
in
jge
je
hlt
pop
cli
aam
jmp
and
jno
sub
ficomps
les
es
mov
test
pop
cltd
sub
scas
int
ret
addr16
stos
push
stos
ss
lcall
add
fildl
fcoms
ss
ja
out
icebp
aaa
fistps
mov
imul
mov
in
xchg
imul
in
sbb
push
dec
cld
repz
dec
hlt
xchg
imul
daa
cld
adc
bound
or
jmp
push
fstpt
push
pop
jg
cmp
adc
outsb
add
in
inc
xchg
xor
sbb
fldenv
mov
popa
scas
aaa
xchg
push
les
arpl
ljmp
rcr
xchg
xchg
mov
mov
lock
gs
out
in
or
cmp
in
pop
dec
lods
int
jmp
insb
inc
pop
sub
rorb
push
test
sbb
jae
movsl
lock
jge
jne
aad
mov
mov
and
fnsave
test
or
add
push
stos
mov
jnp
lods
mov
cmp
aaa
xor
or
inc
push
out
sbb
stos
jae
cmc
addl
imul
fmull
jb
mov
and
jbe
xchg
call
push
mov
xor
jbe
or
ror
lret
sub
pushf
hlt
fidivl
or
and
test
into
stc
jno
loopne
out
cmp
outsb
mov
or
mov
lea
inc
ja
insb
aaa
jae
sahf
xor
repnz
inc
jl
add
movsb
insl
adc
aas
fisubrl
inc
or
fildll
lret
adc
clc
sub
adc
lret
popf
ret
les
sbb
ret
lcall
xchg
dec
int3
lods
arpl
add
roll
sub
int3
in
in
outsl
out
or
movsl
fprem1
fadd
or
lods
test
inc
ror
ret
mov
pop
mov
aad
sbb
jb
xchg
scas
jmp
pop
bound
or
mov
stc
dec
and
ja
jmp
imull
push
dec
and
ret
cltd
fists
xor
xor
inc
ret
fwait
outsb
pop
lock
lcall
scas
push
int
std
add
dec
mov
mov
jb
push
xlat
cs
lahf
xchg
jmp
and
adc
lahf
inc
in
outsb
jmp
arpl
cltd
inc
pushl
repnz
cmp
xchg
pop
or
and
nop
stos
mov
cmp
and
sti
in
jecxz
cmp
inc
fisttps
sahf
js
pop
and
ficomps
js
mov
jl
or
cmp
jne
mov
jge
add
stos
loope
loopne
call
dec
jno
lret
adc
fs
rorl
jbe
in
movsb
add
pop
cmovo
mov
push
and
push
sbbb
dec
test
push
sahf
outsb
fistpl
sbb
or
mov
shrl
add
push
inc
mov
lock
dec
sahf
cmp
lahf
xchg
iret
mov
imul
and
push
sub
push
lds
ja
mov
loopne
cwtl
push
bound
shr
loope
add
sbb
mov
jecxz
sub
scas
add
lcall
cmp
std
fdivrp
test
cmp
cs
nop
popa
imul
inc
push
or
fists
ds
in
bound
mov
ljmp
push
stos
lret
imul
nop
xor
add
stc
mov
or
jo
outsb
movsb
sbb
cld
out
jl
imul
cmp
ljmp
loopne
cmp
xor
pop
push
push
ljmp
push
call
js
popa
cltd
cltd
lea
pushf
inc
pop
and
push
cmp
or
out
fisttps
ja
pop
mov
mov
in
dec
jne
mov
fcmovnb
or
dec
xchg
sbb
inc
push
push
xchg
fldcw
add
xor
adc
adc
movzbl
jo
add
push
pop
in
fldl
ret
or
idiv
nop
aam
je
inc
movsl
pop
loope
adc
jbe
rolb
lcall
hlt
call
or
push
jp
mov
out
addr16
push
leave
pop
jmp
data16
push
movsl
adc
pop
paddusb
pop
not
shll
jae
fnstcw
mov
jnp
mov
xor
adc
adc
dec
das
popf
imul
out
mov
ja
dec
out
lock
out
cmp
cmp
xor
inc
data16
imul
lret
or
cmp
adc
and
push
add
jg
repz
rcrl
aas
jle
sbbb
loopne
pop
dec
ret
pop
int3
sbb
cld
dec
sbbl
arpl
fcoml
pusha
cli
cmp
test
push
ds
mov
pop
and
inc
leave
pop
cvtdq2ps
rcll
adcb
dec
aam
xchg
push
jg
test
sbb
sahf
cwtl
das
or
sub
push
adcb
lock
stc
addr16
mov
imul
mov
cmpsl
cmp
cmp
je
in
push
jecxz
cmp
jae
fcmovnbe
mov
pop
dec
dec
sub
sbb
loope
add
data16
push
inc
movmskps
data16
mov
mov
xor
ljmp
hlt
cmp
addl
jb
inc
sub
ljmp
ja
in
cli
inc
in
int
les
sbb
push
jg
lahf
test
into
stos
popa
sub
out
int3
mov
sbb
lahf
call
adc
insb
jns
adcb
push
mov
xchg
and
inc
pop
or
fcompl
insb
sbbl
lods
and
arpl
xlat
adc
inc
push
add
ds
xor
jae
lea
xchg
pop
bound
add
add
negl
pop
push
cmp
sbb
icebp
enter
cmpsl
jo
pop
stos
and
dec
cmp
add
sbb
cmp
adc
fstp
imul
out
add
mov
insl
stos
dec
ficompl
repnz
icebp
aas
dec
shrb
nop
jns
lret
hlt
fildl
sub
lret
popf
ljmp
xchg
sbb
icebp
leave
add
jns
pop
xor
ret
pop
es
dec
clc
into
mov
cld
mov
test
and
push
xor
push
pushf
aaa
js
sbb
and
imul
lock
dec
fwait
popf
mov
dec
inc
push
push
and
push
xchg
test
enter
in
stc
sar
inc
adc
fadds
jecxz
jo
jp
fstl
mov
int3
push
mov
nop
loop
lret
aas
or
sbb
daa
subb
or
and
sbb
les
or
jno
lret
pop
outsl
mov
sbb
or
adc
mov
cmp
sahf
in
sbbb
lock
ret
xchg
out
sbb
fwait
jbe
mov
sub
xor
das
mov
out
lcall
pop
pop
mov
and
xchg
push
adc
lds
adc
cmp
add
repz
inc
cli
cmp
cld
and
roll
cmp
xor
mov
mov
mov
fwait
divl
add
mov
ss
cli
dec
cmpsb
and
or
bound
outsl
cli
mov
xchg
xchg
sub
pop
stc
out
fisttps
das
or
pand
add
pusha
jmp
or
addr16
jecxz
scas
loope
push
fisttps
shll
orb
fwait
popa
clc
cmp
or
pushl
in
cmp
adc
flds
push
out
out
xchg
js
stc
nop
pop
sub
cmp
or
sahf
mov
pop
fbld
cmpsb
js
sub
aas
xchg
cmpl
inc
int3
stos
lea
add
fidivs
popf
sub
and
in
int3
xor
ljmp
in
and
jbe
sub
jns
and
lea
mov
add
jl
mov
mov
mov
cltd
hlt
fcompl
jbe
sbb
mov
jl
das
push
lods
push
out
jae
shr
push
fcomip
notl
add
aaa
in
mov
pop
mov
push
div
negl
xor
lret
not
push
stos
stos
ret
sub
iret
add
roll
ja
repnz
insl
scas
arpl
das
mov
xor
push
mov
and
or
aam
pop
mov
daa
fst
mov
fldl
sub
mov
vmread
mov
cld
gs
cmp
pop
clc
imul
or
and
cmc
in
jb
and
int3
stc
and
add
add
cmc
and
cs
in
inc
or
movsb
mov
scas
into
adc
mov
sbb
jg
les
loopne
pop
in
daa
nop
mov
out
stc
and
mov
bound
fisubs
dec
frstor
jbe
mov
dec
rsqrtps
sub
sub
fidivrs
dec
mov
imul
xchg
jl
mov
xchg
mov
dec
lods
dec
jb
jae
xchg
cltd
and
scas
mov
enter
std
adc
daa
pop
popf
movsb
jle
cmpsl
push
adc
lret
ret
sbb
lock
das
adc
subb
fidivs
sub
push
out
xor
movsl
lret
scas
icebp
xchg
addl
lret
push
adc
pop
mov
mov
push
test
in
shrb
in
movsl
bound
push
sub
rorl
hlt
xchg
popf
adc
mov
ret
mov
xor
clc
stos
cmpsb
dec
repz
push
inc
sbb
test
in
scas
ljmp
sbb
sarl
test
mov
jb
lock
dec
std
cld
outsb
loopne
inc
xchg
xchg
or
mov
std
push
cmp
cwtl
cli
push
in
out
mov
pop
and
scas
cs
xchg
cs
adc
leave
loop
adc
aad
inc
ds
fwait
and
xchg
pop
ret
dec
sub
test
loope
lods
adc
jae
mov
sbb
mov
aas
test
sub
ljmp
dec
xor
dec
fsubp
dec
cld
dec
enter
bswap
ret
pop
xor
loope
mov
mov
xor
sub
stc
xchg
fsubr
int3
ja
sbb
jecxz
inc
mov
popa
pop
mov
aaa
ds
popf
dec
push
fiadds
sub
mov
xchg
cld
repnz
fnsave
data16
cld
xor
loope
stc
dec
pop
pop
mov
sub
stc
adc
cltd
incl
lcall
sti
arpl
lcall
cld
jle
outsb
shll
jae
lret
loop
int
push
into
movsb
outsl
pushf
push
xchg
pop
test
sub
shrb
inc
pop
xchg
xchg
dec
dec
push
xchg
jbe
xor
cmpsl
cmp
out
add
and
or
mov
mov
mov
ds
jns
cmp
mov
add
push
mov
sbbl
pushf
mov
sub
or
loop
dec
xchg
lock
inc
xlat
jp
es
imul
fldt
xchg
loopne
loopne
lock
enter
imul
and
psubw
rcll
jle
jge
bound
rorb
repnz
pusha
xor
cmp
and
movsl
add
xchg
inc
inc
add
cltd
xor
cs
dec
lds
pusha
outsb
sub
cs
jb
in
cmp
xchg
or
popa
test
push
rcll
inc
lret
dec
out
movsl
into
add
nop
push
aas
pushf
orl
and
nop
inc
inc
sub
test
adc
in
pop
xor
jge
int
add
adc
jmp
or
mov
aas
xchg
pop
call
mov
mov
lcall
scas
push
loope
sbb
insb
lret
cmp
or
mov
ss
test
jl
jmp
cli
fs
icebp
repnz
repnz
pop
ds
mov
push
pushf
pop
sub
lahf
stos
mov
mov
mov
sub
sbb
ret
loopne
inc
filds
pop
cmpsl
xor
xorb
mov
lea
arpl
xchg
aas
cmp
or
sbb
xor
push
std
testb
mulb
test
imul
mov
dec
xchg
add
mov
shlb
clc
out
lahf
in
pop
ret
stos
bound
arpl
subb
shl
int3
xchg
jo
sub
mov
mov
inc
cmp
lcall
sahf
out
fmuls
in
or
jb
mov
stos
and
cwtl
mov
repz
cmp
in
scas
insb
pop
pop
test
push
lcall
ret
daa
and
loopne
mov
movsl
into
xchg
jb
jns
pop
push
add
push
jo
push
in
xor
and
daa
sub
sbbb
jb
clc
adc
adc
addr16
dec
jp
out
in
ds
or
mov
std
jo
dec
hlt
mov
es
repnz
rorb
or
std
jae
cmpsl
sub
xchg
dec
sub
add
imul
out
push
jg
dec
xchg
sti
mov
aad
mov
shlb
fistpl
mov
enter
ljmp
les
addr16
adc
loopne
inc
call
fadds
or
inc
and
aad
ret
push
fwait
sub
and
mov
imul
aam
fwait
and
lods
jne
stos
lahf
repnz
jge
or
andb
sbb
ret
and
fs
imul
or
xlat
adc
mov
push
shrl
and
and
inc
mov
mov
push
imul
or
xchg
out
out
pop
test
xchg
fidivl
push
cmp
add
jp
mov
jg
testl
cwtl
mov
nop
push
insb
mov
mov
das
std
hlt
sub
je
xor
mov
ret
mul
pop
lcall
sub
in
mov
dec
rcr
jl
loope
xor
push
add
pop
or
pop
xchg
loope
and
aas
adcb
adc
inc
icebp
sbb
sub
jb
fst
push
mov
fisubs
fildll
dec
adc
leave
mov
aas
add
sub
lods
pop
dec
push
ja
jmp
ret
push
xchg
pushf
aas
mov
and
mov
sbb
xorb
xlat
aaa
movsb
test
int
int
mov
scas
out
movsl
xlat
add
mov
sub
jle
out
xchg
ljmp
shl
lea
jno
mov
push
aas
mov
adc
je
push
psrlw
lcall
lock
lds
push
sbb
jg
push
dec
fwait
ds
adc
jp
aad
pop
mov
push
aaa
sarl
insb
pop
add
arpl
inc
shrb
les
push
lods
push
jne
mov
xlat
fwait
sub
insb
lods
fstpt
xlat
xchg
jl
lret
movsb
xchg
dec
lcall
sbb
pop
sbb
xlat
ss
push
xchg
pop
js
add
mov
sahf
in
loope
mov
adc
mov
cmpl
aad
pop
cmpsb
dec
in
cs
ja
mov
aad
clc
mov
jle
xor
in
stos
dec
dec
adc
scas
movsb
or
adc
mov
inc
movsb
int3
jl
das
popf
aam
mov
jns
inc
mov
cmp
cmp
bound
dec
loopne
cmpsb
inc
or
lock
lods
push
mov
jmp
sub
push
rcrb
aas
mov
jno
inc
adc
rcl
and
mov
xchg
cmp
imul
pop
mov
inc
aas
ds
xchg
enter
pop
imulb
int
repz
cmp
xchg
mov
insl
mov
dec
sub
xlat
add
jb
jg
in
ds
in
sbb
gs
lcall
push
loop
pusha
adc
aaa
cmpsb
filds
pusha
add
jg
mov
jnp
out
mov
das
mov
cmc
shll
stos
movb
fidivrs
xlat
adc
lret
inc
jo
mov
mov
sub
or
and
int3
bnd
mov
inc
push
ja
movsb
add
adc
roll
dec
pop
orb
cmp
mov
stc
cltd
outsb
dec
mov
mov
pop
adc
push
fisttps
cli
mov
push
iret
lret
sub
pop
les
shl
dec
dec
inc
fdivrs
cmpsb
aad
cmp
jle
sbb
jmp
push
out
faddl
je
add
inc
icebp
mov
mov
in
mov
dec
adc
inc
in
xor
iret
fiadds
scas
repz
cmp
mov
jb
pop
add
mov
enter
test
icebp
movsb
std
test
mov
mov
je
test
outsl
push
mov
xchg
movsl
into
mov
or
xchg
ja
das
stc
fdivrs
shlb
outsl
jae
push
pop
movsl
in
divl
filds
aaa
and
in
jmp
out
adcb
rclb
inc
cmc
or
popl
fwait
pop
int3
cmp
add
ret
cmpsb
push
repnz
sub
sarb
mov
sub
mov
ret
imul
stos
ja
mov
lahf
or
xchg
or
out
push
test
sub
je
sahf
test
xor
pop
push
leave
imul
int3
std
push
add
push
pop
cld
repz
sub
jp
lock
clc
push
out
sub
xor
lods
negb
mov
xchg
mov
xchg
xchg
cmc
bound
lret
and
dec
sbb
ret
hlt
rcll
push
and
addb
cld
push
push
out
rclb
mov
fdivr
in
xchg
scas
xor
pop
leave
ret
test
sbb
adc
inc
push
or
add
jno
ljmp
in
or
push
dec
mov
cmc
add
rorl
int
pop
adc
xor
pop
icebp
add
pop
push
shll
inc
test
js
addr16
jo
push
fmull
sbb
xchg
jecxz
shl
cli
test
dec
dec
mov
inc
cld
clc
inc
call
ss
adc
cmpsb
into
in
insl
inc
adcl
shrb
rolb
push
add
dec
push
xchg
dec
cmp
xchg
lock
jne
jae
or
push
sahf
inc
fildl
cli
push
mov
push
dec
nop
lahf
cs
and
test
fisttps
outsl
mov
pusha
fldenv
mov
mov
and
adc
jg
pop
test
cmp
xor
sti
cmp
into
repnz
dec
add
cli
clc
inc
sbb
mov
push
adc
aam
cmp
adc
pop
mov
pusha
or
push
into
aaa
int3
cmp
or
es
mov
das
subl
sub
lds
loop
mov
sarb
push
mov
lods
insl
leave
push
mov
aaa
and
dec
xchg
fwait
sub
movsl
cmp
jbe
jg
stos
rclb
jbe
inc
clc
adc
cmp
repz
adc
mov
sahf
lds
leave
or
dec
fistps
push
pop
pop
das
in
sub
shl
xchg
out
cmp
cmp
out
or
adc
xor
in
cltd
mov
push
movsb
lret
arpl
insb
add
and
cltd
lret
int
sub
add
or
mov
and
ret
inc
sahf
rol
xchg
in
adc
jns
loopne
aaa
pushf
sti
cmp
push
push
dec
xchg
cwtl
lret
movsb
bound
rorb
cmp
das
xorb
pop
jmp
xchg
es
xchg
cld
bextr
aam
prefetchnta
mov
stos
xchg
or
xchg
out
jp
insb
pop
rcrl
inc
inc
ficomps
cs
ljmp
sbb
out
test
in
sarb
jl
cli
or
out
or
cmp
sbb
push
or
dec
in
ror
sub
lock
pushf
xchg
pusha
inc
int3
cmc
cs
dec
pop
lcall
fwait
push
xchg
mov
nop
arpl
xor
and
sbb
push
push
stos
mov
not
push
loope
mov
rcr
jbe
popa
xor
fildll
or
mov
xchg
rolb
sbb
test
mov
lret
gs
jge
push
lods
in
pushf
pop
jae
mov
jl
add
arpl
fidivrs
repz
test
call
mov
daa
gs
int3
mov
stos
cmp
js
xchg
adc
lea
repz
cmp
mov
mov
cld
aas
inc
sahf
push
fcmovnu
orb
sub
add
ffreep
imul
sahf
or
xchg
imul
mov
cmp
cmp
std
insl
js
negl
sbb
dec
xchg
adc
aaa
test
mov
or
ds
ret
lock
stc
jno
int3
aas
sbbl
xor
or
or
pop
dec
test
jns
std
add
mov
xor
mov
insl
cltd
rcl
xchg
dec
mov
push
scas
je
pusha
lcall
loope
xchg
xchg
jbe
adc
bound
pushf
sahf
scas
in
cs
push
or
xorl
dec
push
xor
xor
lahf
xchg
cwtl
pop
divb
sub
in
movd
aas
sub
fwait
add
and
es
xor
je
out
nop
xor
pop
sti
les
stos
nop
or
aaa
call
hlt
cwtl
mov
dec
in
jp
inc
sahf
lret
dec
add
outsl
jmp
in
enter
data16
push
mov
repnz
push
cld
loop
into
loope
push
leave
cmpsl
sub
jae,pn
mov
ljmp
push
pop
jb
or
je
insb
stos
cmp
cmpsb
rcrb
je,pt
cmp
and
fs
int3
mov
lret
cli
adc
dec
das
jb,pt
pop
shr
pop
popf
hlt
cmpsb
add
test
or
adc
fidivl
dec
scas
pop
push
insl
int
jne
mov
sbb
push
out
mov
inc
aas
stc
cltd
sti
mov
push
pop
and
cmpsb
cltd
xchg
fs
xchg
fiaddl
xchg
sbb
adc
ror
sub
test
cmc
pop
adc
mov
out
push
in
jmp
jne
faddl
xchg
das
cmp
inc
pusha
jecxz
adc
mov
iret
lods
sub
cwtl
inc
gs
insb
testl
into
pushf
pop
ret
test
xlat
dec
push
add
je
jne
loop
stos
inc
icebp
jno
jge
outsl
stc
mov
inc
nop
test
or
aaa
lahf
mov
lcall
gs
add
cmp
bnd
incl
cmp
pop
cmp
mov
push
mov
fcmove
lock
in
mov
mov
push
or
pop
in
add
iret
cmp
and
push
xchg
fildl
xchg
pop
roll
fs
mov
jo
arpl
test
mov
jmp
sahf
sbb
loop
xchg
out
inc
fidivs
lds
jecxz
cmpsb
mov
pop
or
lcall
jle
jo
cmp
lods
mov
adc
int
mov
xchg
sub
xlat
xor
pop
loop
push
xor
test
enter
mov
cmpl
sub
ficoms
in
and
ret
fbld
lock
lret
ja
scas
shll
shrb
jg
pop
notl
jns
lock
pop
lods
jno
pop
xor
pop
ret
jl
mov
aaa
sahf
xchg
pop
xor
add
jmp
pusha
arpl
and
decb
cmp
dec
in
lock
cld
xchg
shlb
call
xor
clc
pop
mov
jbe
push
mov
xchg
push
insb
push
lcall
push
rolb
enter
in
mov
push
jg
dec
cwtl
imul
leave
jg
out
inc
fucomi
xchg
icebp
loop
dec
stc
sub
rol
mov
lcall
das
divb
add
outsb
and
mov
xchg
mov
shrl
sub
push
shr
lret
out
jmp
scas
addr16
in
sbb
pop
push
mov
fwait
mov
mov
test
lods
ret
repnz
orb
mov
inc
aas
test
stc
add
insl
aas
adc
xchg
jg
scas
jo
test
iret
stos
imul
xor
ret
adc
icebp
popa
xchg
mov
add
jp
daa
sub
imul
push
insb
xor
aam
in
xor
dec
cmp
push
inc
mov
das
loopne
push
xor
xchg
or
leave
repnz
in
or
leave
ljmp
lahf
push
fwait
sub
sub
mov
xchg
sbb
sub
pop
push
inc
nop
loop
xchg
pop
in
ds
aaa
cmp
or
mov
outsl
test
dec
std
push
add
inc
cwtl
aaa
dec
out
xchg
mov
aas
hlt
mov
dec
push
stos
sbb
jb
and
inc
icebp
repnz
cmp
pop
call
outsb
in
ss
leave
movsl
leave
stc
ss
cmc
lods
cmpsb
mov
rcr
int3
sub
mov
mov
mov
inc
rcll
mov
or
scas
imul
push
mov
por
fimuls
and
adc
mov
xor
test
jg
aam
call
push
outsl
outsl
jo
pop
mov
ds
inc
ret
cmp
adc
out
inc
inc
jmp
nop
aas
nop
jb
pop
cmp
xchg
enter
data16
insl
pop
cltd
sahf
int3
xor
lret
sub
scas
add
test
int3
out
stos
sub
scas
lret
cwtl
pop
fdivr
mov
mov
mov
or
cmp
dec
lahf
rcrb
nop
js
sbb
sbb
clc
xor
xor
sub
lock
cld
sub
lahf
ret
sarl
addr16
lods
inc
pop
cmp
andb
mov
int
push
jb
jmp
mov
adc
push
out
sub
xlat
xchg
and
sub
mov
xchg
imul
fxtract
add
dec
stos
scas
cs
sub
cmp
loop
lea
outsl
je
das
mov
cmpsb
adc
dec
push
mov
outsb
movsl
adcl
mov
bound
int3
adc
les
jno
dec
add
mov
stc
cmp
fcoml
cmp
out
mov
mov
movsl
xchg
out
mov
xlat
sub
stos
inc
in
sarl
sbb
and
test
adcl
sbb
or
push
mov
and
adc
pushf
mov
rcll
dec
push
and
aad
xchg
popa
mov
pop
mov
push
ret
adc
fldenv
jae
aad
mov
cmc
pushl
mov
mov
dec
test
mov
js
sub
jle
push
pop
push
xor
or
jae
sub
jns
loope
cld
push
sbb
sahf
out
pop
in
jno
arpl
xor
data16
insl
jbe
xchg
xor
jnp
push
dec
or
jo
in
pushf
test
loopne
mov
cs
shll
add
push
dec
ja
jne
loope
daa
push
lea
sti
push
push
sbb
in
inc
lods
out
xor
ljmp
sub
int
mov
push
xlat
sub
mov
and
xor
xor
adc
push
dec
subl
mov
xlat
mov
jecxz
push
xchg
les
lcall
push
ret
arpl
sbb
mov
inc
jae
mov
sahf
pushf
xor
out
push
fsubrl
repnz
int3
pop
jle
mov
mov
fwait
ds
scas
xchg
xor
jecxz
ficoml
lret
jnp
dec
pop
jo
aam
sub
mov
and
addr16
ds
scas
sbb
sub
sub
movsl
pop
scas
and
dec
fnstenv
push
or
mov
mov
xchg
not
lds
enter
xor
inc
sub
fidivrl
pop
dec
aad
and
ss
pop
adc
or
out
fs
sbb
inc
hlt
lret
into
push
push
cltd
jl
pop
xlat
scas
icebp
daa
xchg
cmp
push
push
cmp
incl
stc
xor
xchg
mov
push
imul
imul
xchg
insl
jbe
or
decl
xor
cmpsl
push
sbb
fcoms
ret
jecxz
and
xor
enter
arpl
stc
neg
lret
cmpsb
mov
xor
mov
scas
sbb
fsubrs
push
jnp
push
pop
popa
ss
out
inc
test
xchg
or
repnz
sbb
lcall
and
in
repnz
xchg
neg
ja
sbb
test
int3
std
in
pushf
out
rcrb
jle
mov
movsb
cmp
jp
loop
hlt
xchg
pusha
jl
mov
lret
xor
xlat
cltd
lods
xor
dec
adcl
push
das
jne
data16
mov
fadd
aam
and
sbb
jne
sti
es
sub
scas
and
out
cli
outsw
mov
jg
jge
cld
ret
pop
adc
jge
or
inc
fcomps
push
imul
nop
push
enter
lret
lea
iret
sub
xor
fidivrs
test
and
ffree
xchg
sbb
aam
insl
cli
into
dec
ffreep
ret
mov
push
pop
pop
jns
sub
add
sbb
js
stos
iret
cmpsb
mov
add
pop
mov
ljmp
push
stc
cld
cmp
pop
cmp
jmp
ret
lds
inc
pop
movsb
je
das
mov
mov
sbb
push
leave
and
shl
pop
sar
mov
mov
ss
xchg
jmp
mov
dec
pusha
adc
xchg
mov
push
loope
fcoms
add
push
testb
nop
dec
cmpsb
mov
stos
xor
inc
dec
gs
mov
movsb
inc
shlb
enter
mov
sub
inc
mov
push
test
mov
inc
or
xchg
mulb
xor
pushf
addb
lock
clc
ja
inc
daa
in
pop
cld
ds
imul
mov
cmp
aam
dec
cmp
jp
aaa
outsl
sarl
cmp
call
or
jmp
es
sub
fisubrl
cmc
in
push
dec
add
dec
fcoml
in
sub
pop
mov
aas
lcall
xor
fwait
jge
adc
fucomi
negl
ret
int3
xchg
lcall
xchg
cli
sub
lret
jnp
push
in
ss
xchg
scas
dec
ds
adc
andb
fisttpll
sbbl
stos
push
mov
cmp
sahf
or
push
mov
cmp
mov
repnz
shl
ret
add
mov
mov
sbb
pop
push
pop
cltd
mov
pop
lahf
orb
mov
sub
xchg
cwtd
inc
mov
mov
jnp
fstl
cmpsb
mov
sbb
daa
sahf
jne
xor
lret
push
jecxz
and
and
dec
mov
mov
aad
fcmovu
or
outsb
mov
mov
lret
xchg
xchg
insb
lock
decl
pop
dec
jp
out
scas
sbb
popa
push
add
dec
dec
cwtl
ret
xchg
mov
imul
call
pop
jae
add
scas
push
mov
inc
jl
and
dec
mul
outsb
dec
xchg
push
pusha
pop
cmp
push
adcb
add
mov
xchg
addr16
imul
jmp
out
lret
daa
pop
sub
mov
loop
es
and
aad
inc
xchg
xor
sbb
push
jl
push
jb
lock
xchg
inc
dec
mov
push
push
leave
push
xor
mov
in
outsl
das
clc
push
subl
sarb
or
pop
push
xor
sbb
fsubrp
fs
or
int3
jno
mov
mov
xor
call
arpl
push
mov
orb
aam
dec
fsubl
mov
nop
mov
bound
pop
pop
and
push
movsb
pop
mov
das
leave
sub
stos
and
test
divl
cld
in
cmpsb
jo
sub
or
lret
or
dec
adc
xor
fidivrl
lret
cmpsl
jno
xchg
mov
out
and
in
mov
push
andl
push
mov
sbb
push
fldl
aam
add
pop
cs
xor
outsl
xchg
xchg
cmp
sub
mov
sbb
mov
push
mov
lcall
push
pushf
sub
js
ss
push
bts
lds
scas
clc
mov
pushf
xchg
xor
jl
addr16
les
and
sbb
adc
incb
xor
test
in
mov
jae
xor
cltd
xchg
ret
xor
cmp
lods
cmp
aaa
or
bnd
lcall
mov
loope
fbstp
push
xchg
loope
push
xor
addb
or
jb
or
les
mov
sub
call
dec
fildl
mov
xchg
enter
jl
xor
xor
fsubs
jae
addr16
jg
or
dec
cmc
pop
in
sub
mov
push
sbb
mov
ss
pop
cmp
push
xchg
jo
ret
pop
std
aad
das
paddw
das
jle
mov
repnz
mov
jo
pop
dec
enter
repz
pop
aas
les
repnz
jecxz
jbe
mov
or
pusha
ljmp
cmp
mov
xchg
popa
std
push
inc
and
push
outsb
xor
dec
sbbl
sbb
add
sbb
xor
xchg
sbbl
push
mov
xlat
jo
rcrb
inc
or
addr16
imul
mov
mov
stos
pop
push
push
jl
mov
inc
xchg
cmpsb
cmp
and
sbb
mov
in
push
adc
lods
bound
mov
lcall
inc
push
pop
push
jp
enter
cmpsb
lret
push
adc
xchg
pop
push
adc
inc
je
add
orl
xchg
int3
xchg
in
aaa
mov
add
sub
mov
xchg
cmpsl
jns
lock
enter
daa
insb
and
cli
ja
mov
pop
jae
mov
cmpsb
xchg
mov
test
and
adc
mov
stos
cmp
fadd
sarl
decb
mov
imul
jp
xor
call
lock
and
test
into
dec
or
fwait
dec
pop
xchg
sbb
dec
mov
jp
inc
xor
jo
mov
dec
enter
hlt
sahf
sahf
pop
xchg
mov
mov
stc
cli
pushl
xchg
add
loop
or
jp
pop
jecxz
dec
pop
imul
xchg
pop
lret
push
outsl
dec
mov
dec
dec
popa
and
lahf
xor
xchg
lret
sbb
cltd
enter
mov
jbe
cmp
xor
pop
ds
pop
and
fsubrl
jbe
lret
xchg
sbb
push
mov
xor
pop
sub
add
xor
sub
movsb
stc
push
stc
push
inc
cmc
lcall
repnz
adc
dec
test
or
mov
push
arpl
in
pusha
adc
fcmovu
stos
dec
mov
jbe
mov
loop
xchg
mov
cmp
jo
into
cmc
lahf
pusha
outsb
popa
mov
lret
hlt
and
fstpt
cld
aas
jne
pop
mov
sbb
loope
cmp
cwtl
dec
xchg
pop
stos
aas
adc
jl
inc
pop
enter
jne
sbb
fstpl
ret
push
iret
or
insb
ror
cmpsb
inc
jge
repnz
jle
mov
out
mov
loop
jbe
mov
xchg
and
add
mov
arpl
jae
push
ret
push
sbb
xchg
enter
pop
outsb
adc
mov
mov
test
inc
das
xchg
jecxz
fcomps
or
fisubrl
stc
cmc
pop
mov
xchg
dec
sbb
shlb
mov
fwait
ds
outsb
out
outsb
jb
ljmp
sub
cmc
cmp
dec
xchg
fs
std
jmp
push
dec
push
orb
push
mov
cmp
push
pusha
in
jno
aaa
test
mov
mov
imul
cmp
inc
sbb
dec
insl
lds
jno
xchg
or
xchg
fisubrl
jo
daa
je
ja
cmpsb
inc
pusha
dec
ljmp
cmp
jmp
sub
andl
pop
roll
or
stc
and
and
mov
and
xchg
sub
sbb
rcrl
pop
dec
cmpsl
stos
je
jg
mov
ret
sahf
inc
push
jne
sarl
icebp
insb
lret
enter
push
outsl
es
les
mov
cmp
jmp
sti
repnz
sub
loope
jl
stos
xchg
lret
insb
jg
mov
lock
add
iret
fwait
inc
jecxz
jp
outsb
sarb
mov
pop
loope
fadds
dec
div
xchg
xchg
xor
sub
xchg
push
inc
mov
cmp
lods
mov
and
pop
imul
test
daa
scas
mov
addb
jae
insb
rcrl
stos
iret
mov
push
dec
inc
push
jl
into
cmp
lahf
push
filds
add
stos
xlat
js
pushf
outsl
scas
mov
subl
ffree
adc
jg
add
cld
std
fimull
push
xorl
ja
sti
loopne
in
lret
daa
lahf
dec
mov
push
imul
aas
clc
and
mov
sti
bound
cld
fiadds
lret
pop
xchg
and
or
arpl
pop
and
rclb
lods
mov
sahf
stos
aad
jge
jnp
or
jb
out
js
mov
sbb
mov
mov
xchg
pop
cli
out
jae
mov
xor
mov
cmp
insb
loop
dec
js
ret
adc
inc
lcall
cmp
testl
out
or
ds
enter
dec
sti
dec
pop
push
fisubrs
mov
loope
dec
rcrb
jbe
adc
adc
mov
into
add
xchg
push
ret
loopne
insb
add
jmp
or
ljmp
out
ficoml
lahf
mov
mov
and
imul
int3
out
mov
test
inc
cltd
rolb
dec
gs
es
adc
cmp
pop
int
clc
ret
xor
mov
les
inc
lods
fmull
int3
xchg
fwait
imul
or
mov
ret
adc
repz
out
mov
jmp
sbb
xor
jl
in
cmp
cli
lcall
dec
ja
mov
mov
lret
mov
fnstsw
ljmp
xchg
sbb
or
add
xchg
sub
xchg
nop
ljmp
mov
mov
fisubrs
stos
mov
xchg
mov
push
mov
push
rorb
and
imul
mov
mov
movsb
bound
clc
pop
and
loope
xorl
xlat
push
and
addr16
push
sbb
cmpsb
in
out
push
add
in
loop
pop
cmp
push
push
pusha
push
fwait
or
cmp
push
mov
xlat
push
enter
push
inc
out
push
or
dec
jl
test
cmpl
or
aam
or
jns
xor
pop
xor
sub
loopne
jge
push
cmp
iret
mov
sub
lret
dec
mov
adc
stos
fdivrl
iret
cli
or
mov
cmp
aas
mov
dec
fs
sub
mov
mov
mov
iret
aad
dec
les
aam
jle
cld
dec
pop
gs
xchg
test
mov
adc
cli
inc
dec
fisttps
mov
repnz
out
mov
jbe
loope
and
iret
adc
sbb
cmpsb
adc
push
mov
jp
stos
adc
daa
add
fwait
push
mov
adcl
call
int3
dec
insb
out
and
dec
fidivrl
cwtl
pop
pop
loopne
jns
in
enter
pop
inc
lea
xor
xor
mov
lret
add
inc
mul
shrb
cmp
rcl
jbe
fimull
dec
in
sbb
and
jo
stc
push
sbb
add
int3
mov
xlat
mov
inc
repnz
ja
sbb
ds
jmp
push
fnstsw
sti
mov
pop
xlat
les
xchg
push
sub
xor
filds
mov
mov
xor
mov
out
nop
and
test
insl
push
inc
aam
cli
xor
inc
xor
mov
push
push
outsl
loopne
mov
inc
ja
pusha
mov
and
mov
pushf
mov
movsb
sub
push
and
or
push
repz
mov
cmc
xchg
xor
rcrl
xor
xchg
xchg
jg
loope
mov
pop
cmp
xchg
imull
jb
sub
cmp
push
idivb
pop
push
shll
xadd
or
test
mov
mov
rcrb
mov
mov
push
jbe
add
sub
enter
mov
lock
int
fidivrs
scas
or
call
pushf
ja
dec
sbb
stos
xchg
out
lahf
dec
and
scas
test
sub
clc
dec
or
nop
xchg
pop
cmp
cmp
mov
ja
cmp
shlb
xor
in
pop
or
mov
push
aaa
cmc
movsb
mov
das
inc
cmpsb
scas
or
pop
roll
scas
outsb
jbe
sbb
inc
push
ja
aad
je
or
daa
jae
loope
adc
jmp
sub
bound
mov
scas
cmp
and
or
cmp
jb
gs
fwait
sub
lcall
insl
sub
sbb
fs
icebp
mov
inc
mov
loope
xor
xchg
sahf
jle
fadd
dec
push
mov
dec
dec
dec
popl
arpl
inc
stos
or
out
push
xchg
shrl
mov
push
pushf
add
mov
popf
xchg
mov
out
pushw
add
or
pop
mov
push
adc
lret
cmc
aam
jl
sbb
lods
es
xchg
mov
adc
push
call
jl
xor
jl
sti
sbb
mov
add
xor
mov
hlt
test
out
cs
jmp
in
stc
das
call
pmaddwd
xor
mov
push
in
bnd
mov
arpl
jecxz
rcrb
fadds
data16
and
les
jg
mov
in
jo
les
jecxz
pop
enter
ret
lock
inc
loop
dec
add
fwait
cmp
cs
out
lret
pop
sahf
imul
push
xchg
jle
les
mov
jle
movsb
add
add
inc
dec
aas
icebp
or
mov
lret
mov
mov
adc
and
jbe
icebp
lds
ljmp
or
push
shlb
fst
leave
adc
aad
rorl
jnp
add
bound
jno
ljmp
mov
rclb
nop
jb
out
sbb
ljmp
popf
filds
push
jg
xorl
insl
rcll
daa
add
add
sub
outsl
das
jg
dec
test
sahf
jae
pop
cli
xor
cmp
sub
sbb
bound
fdivrl
mov
pushf
dec
loopne
xchg
in
iret
test
mov
into
rorl
inc
outsl
mov
sbb
xchg
jne
js
iret
pusha
xchg
cmp
das
fcomps
insl
ja
mov
push
test
lods
push
fwait
inc
cwtl
inc
mov
outsb
ret
mov
aad
sbb
negl
mov
fwait
jo
add
dec
std
xchg
data16
neg
mov
rorb
cmp
lret
push
ss
mov
sub
jae
push
out
pop
arpl
add
inc
clc
push
fidivrs
cmpsl
inc
test
aam
sti
adc
outsl
stos
jne
xlat
inc
sub
adc
jo
push
mov
hlt
out
jae
daa
jae
or
pushf
lret
mov
test
adc
nop
stc
into
fnsave
inc
or
mov
adc
mov
lcall
cwtl
cmp
pop
mov
outsl
aam
aaa
sbb
sbb
cli
push
mov
sub
and
out
dec
lahf
sti
imulb
incl
popf
lahf
sti
das
sbb
ljmp
fwait
ds
roll
xchg
inc
int
inc
cli
scas
push
dec
cmp
mov
stos
andb
inc
outsl
mov
out
lods
push
jecxz
cmc
sub
pop
sbb
and
mov
out
and
call
andb
push
filds
stos
popf
sub
or
push
add
mov
or
cmpsl
xchg
jl
xchg
cmp
decl
pop
mov
xor
pop
add
xor
ror
jp
mov
push
jnp
stos
mov
out
repz
xchg
jae
mov
jp
push
subb
push
scas
aas
jg
mov
xlat
loopne
pop
xchg
hlt
nop
mov
fsubrp
cmp
and
loopne
outsb
aas
stos
sub
pop
ja
push
and
fs
ss
test
popf
xchg
in
iret
ljmp
add
faddp
into
lahf
push
mov
push
xchg
mov
mov
cmp
push
jns
popa
imul
movntps
jmp
mov
sub
out
inc
inc
ss
ret
ds
sbb
int
fidivrs
rorb
fucomi
or
repnz
ret
pop
out
lods
cs
sarb
lds
leave
xchg
cltd
leave
and
jge
push
inc
push
pop
adc
fisubl
mov
fs
push
xchg
inc
stc
xchg
fisubl
loop
or
nop
pop
xchg
adcb
shlb
pop
mov
lret
fiadds
xchg
xlat
int
notb
and
jb
mov
adc
ret
cltd
daa
rolb
mov
xchg
mov
jb
mul
out
aam
lahf
xor
cltd
mov
push
jg
mov
pusha
arpl
inc
dec
pop
das
and
mov
mov
push
push
or
outsl
call
test
adc
mov
push
pushf
insl
test
adc
push
mov
cmpl
push
repz
adc
fbstp
pop
mov
repz
sub
or
cmc
hlt
push
jne
push
inc
jl
divl
dec
push
cmp
push
aad
dec
jecxz
sub
sti
dec
decl
xor
xchg
push
enter
iret
jae
or
push
sbb
inc
loope
rcr
test
aad
pop
int
sbb
add
stos
fidivrs
outsb
cli
ljmp
test
xchg
fistl
out
aaa
pop
fstpl
out
sub
imul
aad
mov
inc
pop
push
rolb
lahf
ret
push
add
jne
pop
sbb
cmp
jmp
and
aam
aas
sub
adc
pop
adc
shll
inc
dec
dec
fldcw
sub
cmp
adc
inc
lret
inc
sti
mov
popa
xor
add
loope
or
mov
clc
push
mov
and
jg
inc
jb
pop
mov
int
cmc
dec
push
sub
mov
test
cmp
repz
ss
cmpsb
daa
dec
outsb
pop
push
xchg
mov
adc
clc
jne
lea
xlat
jge
pop
out
fldcw
imul
rcrb
sub
scas
pop
repnz
jbe
mov
shrl
push
and
push
pop
pop
mov
or
inc
bound
push
sbb
inc
sbb
sub
cs
jecxz
fsubs
loopne
fsubr
stos
add
dec
sub
xor
pop
orl
jle
std
add
xor
sub
mov
sahf
jecxz
push
aaa
pop
dec
sbbb
add
lret
inc
jle
hlt
cmp
cmp
mov
or
in
cli
arpl
pop
das
push
sub
dec
lret
mov
loope
fcoml
mov
mov
and
lcallw
inc
or
mov
jne
xor
xor
add
and
adc
les
jnp
sub
jle
dec
ret
je
lods
jle
jo
cmp
lret
xchg
mov
pop
das
fistl
ds
add
or
rorl
pop
and
scas
jae
test
jl
jl
and
mov
inc
inc
rolb
outsl
pop
add
icebp
lods
cmp
xor
out
subl
test
sub
fisttpll
mov
push
stos
add
jae
jbe
mov
mov
es
jo
movsb
inc
outsl
pop
imul
subb
icebp
cmp
pop
jg
cmpsl
mov
cmp
mov
push
push
jp
xor
inc
scas
xchg
cwtl
push
out
mov
lods
or
popa
daa
jg
xchg
movsb
lret
sub
dec
hlt
lcall
sar
subb
push
and
jmp
aam
mov
jnp
adc
adc
test
adc
fists
pushf
mov
and
bound
daa
ds
ret
and
dec
xchg
sbb
cmpl
and
sub
adc
or
jne
mov
adc
inc
xchg
sahf
arpl
pusha
sub
push
scas
in
jns
and
stc
sarl
adc
mov
aam
mov
cmpsb
lods
fwait
in
mov
mov
lahf
sbb
in
mov
cmp
push
inc
xchg
pop
push
daa
les
mov
out
add
sub
filds
and
fsubs
pop
and
pop
lods
insb
xlat
out
pop
mov
ret
ret
xor
scas
pushf
sub
enter
mov
xor
leave
or
inc
xor
push
pop
mov
test
ljmp
inc
adc
cmpsl
jns
and
jmp
cmp
subl
icebp
lea
adc
rcrb
aad
loopne
mov
and
insb
loop
push
and
or
daa
sbb
jg
pop
jecxz
jmp
push
mov
ss
adc
xor
bound
mov
mov
lret
ds
xchg
inc
jb
lcall
aaa
jp
xchg
push
mov
enter
and
es
inc
sbb
or
rcr
test
xor
inc
mov
adc
fwait
orl
sti
scas
pop
out
insb
xor
cmpsb
hlt
jl
insb
and
cmp
shrl
adc
imul
lret
incb
outsb
mov
mov
push
pop
repz
sbb
int3
mov
subb
or
sbb
jmp
xchg
mov
sbb
mov
jg
jae
pop
scas
adc
mov
pop
push
insb
mov
push
pop
outsl
sub
in
out
inc
scas
movsl
jo
lods
pop
in
pop
ja
movsl
shlb
xor
push
jl
xchg
mov
and
inc
lock
insl
push
cmp
push
jecxz
mov
lea
mov
adc
xor
daa
addl
sbb
mov
pop
fwait
sbb
adc
lahf
fdivs
mov
mov
lret
push
add
cmp
pop
cmp
xchg
sarl
test
insb
lahf
mov
in
pop
and
xchg
fimull
repz
inc
push
std
shl
iret
lahf
in
cs
xchg
add
cli
inc
dec
outsl
sub
jnp
ss
push
or
nop
jecxz,pt
pop
flds
mov
cltd
jno
insb
cltd
sbb
clc
lods
rorl
in
jle
enter
push
jne
arpl
xchg
ja
push
popa
pop
dec
les
pusha
adc
test
nop
packsswb
jbe
push
pusha
sub
popl
add
loope
push
inc
dec
cwtl
sbb
pop
or
cmc
movups
jne
filds
out
cmp
mov
sub
ja
xchg
mov
add
insl
test
mov
loope
stos
or
les
pop
adc
testl
and
sbb
pop
cltd
in
add
push
dec
fs
daa
ficoml
stos
lods
aam
sbb
dec
loop
mov
pop
sbb
mov
jmp
push
mov
pusha
sbb
sub
jae
push
push
jle
push
enter
sub
call
fbld
pushf
xlat
and
or
test
adc
outsb
xchg
jo
sbb
pushf
adc
aas
pop
repz
push
mov
push
mov
mov
push
or
sbb
movsb
sbb
shll
jge
lods
js
gs
fdivr
fisttps
jnp
fisubs
subb
mov
aad
ljmp
cmp
in
cmpsl
xchg
cmpsl
sbb
sub
mov
mov
and
dec
paddw
fldz
movsb
inc
inc
flds
sbb
xchg
cmp
push
and
out
fisttpll
loopne
data16
popa
push
xchg
insb
push
cmp
sbb
xchg
push
loopne
in
adc
jle
ja
mov
ja
cld
xlat
cli
leave
popf
sub
add
xchg
jle
mov
mov
scas
icebp
mov
daa
ja
mov
jge
pop
xchg
fadds
outsb
cmp
sbb
notb
push
push
daa
mov
in
add
cmp
push
stc
mull
pop
push
xor
leave
cltd
mov
xchg
mov
add
sti
nop
push
mov
sti
adc
push
pop
push
out
pop
cmpl
jmp
and
in
jmp
shll
mov
scas
mov
ret
jae
mov
pop
fidivl
sbb
fcmovnu
dec
int3
out
bound
xor
cmp
xchg
fstps
push
jp
call
iret
add
js
sbb
xor
cmpsb
mov
ljmp
and
test
arpl
cmp
lock
push
iret
push
jecxz
and
push
enter
cwtl
pop
fidivl
push
adc
cltd
cwtl
add
xor
dec
jl
sarb
sub
mov
sbb
add
aas
aas
sti
out
adc
mov
sarl
xor
out
jbe
rcr
int3
mov
jecxz
imul
fiaddl
xchg
xor
and
enter
mov
xor
daa
and
or
push
mov
xchg
or
mov
popa
jno
movsbl
rcll
lcall
inc
add
xor
popa
inc
push
cwtl
mov
jnp
mov
adc
inc
arpl
not
negl
mov
data16
clc
xchg
and
jo
jecxz
sti
test
push
cmp
sub
xor
and
mov
mov
testb
jae
sub
cmp
inc
inc
fwait
sub
daa
jnp
test
xchg
and
jecxz
lcall
and
scas
mov
lret
and
adc
iret
mov
dec
xchg
iret
inc
sub
loope
pop
pop
jbe
and
aad
cmp
es
pop
jge
rcll
mov
incb
aas
mov
lods
pop
scas
cs
aam
cmp
addl
data16
mov
sub
dec
rorl
lcall
sub
sub
mov
das
sbb
fdivrl
dec
in
jecxz
mov
call
push
inc
pop
xchg
ret
insb
fdivrl
add
pop
leave
xchg
sub
clc
cld
mov
mov
mov
pop
pop
mov
cmp
pop
jl
repz
add
mov
cmp
jb
je
fwait
pop
sub
xchg
pop
jge
mov
scas
and
push
xchg
and
pushf
nop
adc
or
sbb
sarl
mov
xlat
xchg
or
xor
jge
push
pop
pop
inc
mov
test
stos
lret
dec
inc
mov
adc
cmp
loop
cmpsb
add
cmp
sub
xchg
rcr
mov
arpl
outsl
out
es
stos
dec
cmp
sub
sub
popf
inc
pop
loope
and
test
fwait
and
lret
fcomps
in
cli
les
fildll
add
mov
idivl
cld
lods
js
adc
in
lret
pop
sbb
push
mov
shrb
aas
mov
and
dec
das
js
aaa
lods
xor
out
adc
loop
push
sbb
psllq
lret
mov
adc
fwait
push
dec
xor
daa
xchg
pop
dec
xor
icebp
mov
lcall
ret
fdivrs
sbb
loop
or
aad
loope
sbb
mov
mov
lret
sbb
xchg
xchg
popa
add
mov
sbb
add
mov
pop
xorl
cmp
icebp
gs
pushf
sub
idivl
jecxz
hlt
insl
ret
stos
cmp
add
popa
or
nop
dec
sarl
lahf
xor
push
imul
gs
or
repnz
xchg
inc
cmpsb
mov
cmp
mov
fisubrs
add
sbb
dec
out
lods
int3
or
bound
rolb
lcall
stos
pop
rcll
mov
cmc
and
in
js
push
popa
mov
ficompl
push
xchg
xchg
xor
mov
or
lods
sbb
loope
arpl
lods
adc
lods
jo
rcll
dec
mov
movsl
push
and
xchg
nop
repz
or
jecxz
mov
pop
xchg
pxor
inc
outsb
jge
je
scas
daa
jmp
xor
mov
mov
xchg
enter
popf
fstpt
cmp
cwtl
jo
scas
jo
das
push
inc
adc
jge
leave
aam
pusha
lock
in
adc
cmp
popf
faddp
in
push
dec
int3
pop
stos
mov
fdivl
xor
sbb
or
incb
adc
cltd
push
ds
mov
push
xlat
jno
push
pushf
jae
shr
stos
adc
arpl
movsl
imull
aad
enter
ljmp
adc
lret
mov
mov
or
lret
fwait
jg
mov
mov
xchg
popa
or
xchg
mov
cwtl
shlb
and
aad
sbb
sti
fs
das
cmp
or
ret
fcom
jp
and
xor
mov
mov
adc
push
mov
mov
cmp
mov
das
dec
mov
lret
stos
out
ljmp
arpl
sbb
and
sbb
add
int
aad
std
cld
pop
sbb
mov
and
mov
cmp
pop
daa
push
gs
movl
inc
test
mov
lcall
cwtl
lret
xorl
push
inc
ja
inc
xchg
in
movsb
sbb
out
jae
notl
lret
and
pop
out
in
int3
aam
cmp
cmp
dec
pop
nop
mov
pop
add
cmpsb
insb
xor
push
or
movsl
adc
or
cmp
outsl
or
lahf
stc
jle
icebp
mov
addl
mov
jle
lock
and
movsb
sub
mov
loop
divl
xor
xor
sarb
roll
pop
stos
inc
idivl
movsb
xchg
lahf
add
movsb
shl
mov
mov
imul
out
pop
stos
and
jge
les
xchg
or
jo
xor
sti
dec
into
cmpsb
les
dec
mov
rclb
sub
cmp
sub
jg
add
sub
mov
jbe
xchg
jno
mov
add
outsl
mov
lret
xchg
adcl
add
mov
add
mov
pop
aas
pop
pop
inc
push
addr16
jnp
int
fcomps
cmp
fstpl
push
outsb
xchg
arpl
imul
cmpsl
add
popf
push
imul
cld
addb
test
xorl
push
cmp
mov
jae
mov
cmp
lods
rcll
pusha
push
xchg
cmpsl
dec
xor
in
push
mov
js
gs
mov
jle
clc
aas
rcrl
mov
xor
push
mov
imul
mov
pop
mov
iret
aas
enter
jecxz
imul
jb
pop
lds
xchg
jecxz
fists
dec
pushf
dec
icebp
mov
xchg
mov
hlt
int
lret
and
adc
test
aad
sahf
lcall
je
sbb
dec
push
scas
pop
jle
pop
stos
jle
and
pusha
adc
adc
les
test
mov
inc
insb
mov
jae
dec
pop
adc
push
sbb
cmp
xchg
or
mov
or
lods
fs
mov
or
and
jg
cli
push
sub
pop
xchg
leave
movsb
jecxz
call
and
into
or
jp
jno
xorb
pop
mov
and
aad
dec
push
lret
dec
pop
movl
sbb
jp
xchg
lods
ret
pop
ss
jmp
imul
icebp
mov
decl
inc
inc
idiv
adc
sub
icebp
dec
and
xlat
fcoms
sbb
sahf
jns
sarb
pop
adc
pop
jge
mov
in
fdiv
inc
mov
iret
jg
fcoml
repz
aad
cmpsb
mov
scas
jmp
outsl
cli
or
pop
pop
sbbl
pop
pop
lods
push
das
popa
jg
push
jl
fildll
movsl
dec
hlt
repz
test
data16
or
lret
movsl
idivl
jae
shrl
jecxz
push
mov
fwait
and
les
lret
fs
gs
adc
lds
in
xlat
push
mov
arpl
xchg
sub
stos
sub
test
aaa
stos
or
adcb
mov
or
mov
jb
mov
loop
pop
jbe
mov
mov
cmpb
dec
cmp
idivb
jg
cld
das
and
dec
ret
out
dec
jnp,pn
and
xchg
ja
mov
insb
mov
or
mov
push
jg
jae
dec
ja
fidivrl
mov
incl
data16
test
repnz
cmp
xchg
cs
add
sub
call
nop
inc
jmp
and
lret
inc
into
inc
movl
addb
idivl
outsl
mov
adc
mov
pop
ja
push
insb
lahf
and
and
or
and
push
and
jb
adc
add
fdivrl
dec
aas
xor
sub
shl
ret
ror
mov
adc
sbb
and
fs
xchg
pop
stos
adc
fwait
leave
jno
push
lret
enter
popa
pop
out
bound
xor
jl
lcall
bound
fwait
xor
rorl
rorb
fisubrs
js
scas
mov
xor
xor
sarb
xchg
push
outsl
ljmp
mov
jg
lcall
test
dec
jbe
inc
daa
pop
push
xor
ret
incb
fidivrs
rcrl
inc
into
out
sub
ret
notl
cmp
cwtl
mov
cmpsl
in
outsb
dec
jl
fildl
popa
loop
push
or
gs
mov
or
in
and
aad
inc
push
and
mov
jno,pn
ss
mov
sub
mov
lods
add
xchg
or
push
repnz
mov
sqrtps
xor
pop
inc
fwait
lea
mov
xchg
inc
mov
sub
jmp
adc
adc
xchg
lahf
jmp
rcll
popa
scas
pop
sub
jb
pop
outsb
insb
mov
sub
cmp
cmpsb
bnd
inc
mov
mov
sbb
mov
mov
cmp
shl
push
cmp
fsubrl
jbe
pop
jae
cltd
add
push
lods
in
mov
lds
scas
sti
loope
popa
push
in
mov
jl
ljmp
cmp
arpl
pop
dec
bound
std
dec
movl
cmp
mov
insb
xor
sbb
ret
pop
cmp
cwtl
stos
cld
dec
clc
sub
and
pop
cmpsb
outsl
mov
push
mov
insb
cmp
ja
mov
dec
jmp
scas
leave
xor
data16
push
jmp
jecxz
mov
and
nop
adc
jae
ja
iret
push
xchg
into
jns
add
inc
xlat
fisttpll
cmpsb
jmp
inc
movsl
adc
and
repz
pop
movsl
xor
imul
jnp
adc
sub
je
popa
cmp
ficomps
mov
jecxz
mov
je
mov
mov
in
and
insb
inc
lahf
xchg
and
sub
add
stos
loope
xor
jbe
iret
dec
jns
ret
bnd
ret
outsb
add
xor
jae
call
sahf
cmp
ss
fsubs
icebp
mov
outsb
add
repz
jl
ljmp
outsl
lahf
sbb
ss
testb
addl
or
dec
es
into
push
das
push
mov
or
je
addr16
ret
xchg
dec
lret
mov
ds
cltd
loope
dec
idivb
sti
in
dec
push
out
inc
repnz
lock
add
lea
into
lcall
scas
subb
inc
out
mov
xchg
sub
data16
mov
xor
movsl
sub
repnz
mov
mov
inc
stc
ja
cmp
das
sbb
pop
repnz
lods
sahf
icebp
xor
push
xor
inc
pop
in
or
out
mov
jl
push
daa
fwait
pop
clc
popw
repz
and
movsb
sbb
ja
fistps
scas
dec
cmp
ret
lock
pop
popa
mov
mov
push
hlt
sbb
push
adc
add
insl
dec
sub
jns
lahf
xor
les
push
mulb
in
mov
lret
test
loopne
out
pop
jle
stos
mov
push
hlt
or
out
sub
outsb
popf
xchg
cmp
sbb
mov
subl
nop
movsb
lahf
fisttps
in
bswap
and
and
lods
adc
lds
out
sub
out
pop
or
mov
dec
aas
pop
bound
xchg
les
outsb
xchg
mov
mov
int
mov
leave
mov
gs
lods
adc
jo
dec
jnp
mov
sbb
js
and
stc
adc
loop
jne
lock
mov
jl
dec
mov
xchg
ds
cmp
insb
sub
test
outsl
mov
leave
push
jo
cli
lods
xchg
fisubrl
ret
xchg
addr16
xchg
push
cmc
lret
cld
sub
xchg
mov
les
sub
push
dec
push
out
sub
push
fiadds
dec
push
push
out
mov
rcr
mov
pop
push
cwtl
pop
pop
pop
inc
and
loopne
mov
andb
push
shlb
mov
in
sub
pop
loopne
std
lret
sti
xor
in
inc
mov
in
mov
mov
sti
mov
jae
lds
pop
xor
sub
pushf
mov
clc
mov
rolb
stc
xorl
fs
inc
cmp
and
das
add
ret
sub
sbb
xor
mov
test
lods
push
mov
ficompl
pop
test
lcall
ret
mov
mov
dec
cmc
mov
add
xchg
cmp
dec
mov
ret
lods
and
mov
fsubrl
jne
xchg
pop
cs
push
sti
xlat
jp
xchg
pop
clc
or
div
icebp
out
mov
aam
mov
icebp
ss
and
scas
jl
mov
mov
cltd
fxch
stc
cld
fs
mov
pushf
and
push
js
or
pop
xchg
test
mov
adc
cld
cmpsb
mov
pop
imul
clc
out
mov
xchg
jge
mov
ret
cmc
daa
int3
in
loopne
rorl
sarw
add
xor
dec
jmp
sti
push
mov
outsb
negl
mov
ljmp
mov
mov
and
jp
xchg
and
cmpsb
xor
sub
nop
cmp
adc
in
popf
aaa
mov
clc
stos
mov
stc
mov
cmp
xor
adc
adc
sbbb
cmp
shrb
mov
pop
pop
mov
rclb
mov
xchg
inc
add
test
es
addr16
cmpsb
pop
pusha
out
xchg
pop
pop
mov
sub
push
add
xchg
in
jmp
xchg
es
loop
mov
push
inc
arpl
dec
adc
and
mov
cmpb
sarl
out
push
mov
cmp
mov
push
repnz
lods
add
inc
loop
fidivrl
fistl
leave
mov
test
fxch
mulb
into
arpl
popa
mov
test
push
xchg
fdivs
jno
ret
jnp
rorb
inc
mov
sbb
scas
add
jb
movsl
sub
cli
jp
inc
or
stc
bnd
and
out
movsb
adc
call
fildll
loopne
push
xor
jbe
movsb
jecxz
lds
ss
cli
cmp
jle
and
xor
jg
sub
dec
fisttps
sbb
cmp
lock
ficoms
addr16
dec
cmpsl
sub
pop
sti
mov
iret
cmc
fdivr
mov
inc
in
ret
cmp
pop
iret
xor
push
cmp
gs
test
jmp
cs
bound
pop
insl
nop
rclb
mov
dec
sub
and
dec
dec
lods
cmpsb
xor
addr16
aas
sahf
ss
jle
sub
sub
mov
addl
sub
pop
jne
cmpsl
sbb
and
mov
inc
lcall
jbe
cmp
imul
dec
pop
pop
fisubl
pop
cmpsl
sbb
push
inc
push
pop
sbb
adc
xchg
ficoml
out
pop
or
pushf
mov
aaa
sub
inc
repz
lock
xchg
outsl
xchg
les
mov
and
mov
sub
adc
stos
mov
mov
jle
mov
mov
setb
nop
pop
outsl
pop
and
xor
popf
cmp
outsl
std
pop
int
pop
adc
into
cltd
add
sbb
lods
xlat
push
pushf
pop
iret
pusha
mov
dec
dec
push
jg
jl
jns
testb
hlt
clc
bnd
mov
dec
iret
fcomps
or
mov
iret
negl
xor
sub
cmp
or
sub
adc
std
pop
dec
xchg
dec
lahf
sbb
hlt
ljmp
xor
or
mov
aas
cmpl
cli
rcrl
xchg
shrl
adc
fwait
jae
cmp
or
es
xchg
or
push
aas
or
cli
ja
pop
pop
sahf
fwait
xchg
scas
mov
repnz
ja
in
pusha
das
movb
lods
insb
out
pop
lahf
lahf
xchg
icebp
sbb
and
je
test
cltd
iret
test
sub
std
adcl
adc
bound
test
mov
sub
outsl
jge
mov
xchg
dec
push
and
adc
fs
dec
rol
mov
sub
sub
sbb
dec
add
andl
ja
sub
jle
push
jp
mov
sbb
test
add
cmp
lods
mov
ja
jecxz
xchg
jmp
into
dec
xor
in
ljmp
shrb
jbe
je
mov
ret
inc
pusha
in
rolb
add
and
jge
sub
aad
ja
inc
cmp
push
dec
in
sbb
emms
sbb
xchg
jge
shlb
adc
arpl
pop
push
orb
inc
imul
mov
rcrb
lock
jmp
int
rolb
mov
outsl
mov
mov
add
pop
pop
inc
mov
jae
cmp
pop
add
adc
xchg
adc
stos
add
mov
out
out
jne
add
jo
out
es
gs
jne
sub
ret
nop
and
dec
ja
rorl
mov
test
add
dec
mull
sbb
dec
jmp
aaa
jbe
jmp
jns
outsb
dec
sti
cli
adc
jae
int3
add
addr16
stc
and
push
mov
movsb
in
pop
pushl
mov
pusha
mov
testb
pusha
out
adc
mov
jo
iret
and
ret
scas
int3
jnp
lods
loopne
add
push
stc
add
sbb
pop
sar
test
xor
fwait
pushf
add
icebp
clc
cmp
mov
inc
or
testb
xor
int3
jns
and
in
popf
mov
aam
jae
outsl
mov
adc
jecxz
mov
and
fidivl
stc
adc
add
andb
push
push
daa
xchg
in
mov
inc
mov
xor
orl
lahf
js,pn
in
jno
inc
imul
sti
int3
dec
mov
lock
adc
fwait
ljmp
mov
adc
mov
jl
rdpmc
stc
sbb
and
or
mov
mov
or
imul
pop
pop
ss
add
stos
ret
divl
cmp
cmpsl
cmpsl
add
ret
add
js
adc
pop
cmp
sub
push
jg
out
dec
jo
inc
sub
cmp
outsb
in
inc
lea
push
data16
sub
pop
jecxz
inc
add
cmpsl
enter
imul
pusha
cli
data16
ss
xchg
aaa
add
xchg
lcall
mov
ds
jae
test
inc
aaa
mov
push
dec
ret
push
ds
add
jno
xchg
fs
mov
push
out
jp
xchg
push
adc
pop
ret
out
inc
addr16
fbstp
xor
in
jnp
ja
lret
scas
pusha
popf
int
jmp
or
mov
ss
les
iret
push
inc
xchg
mov
gs
mov
pop
out
pop
sub
stos
movsl
loopne
pop
xchg
mov
loop
orb
rorl
movsb
push
xchg
mov
or
rorb
mov
jae
lahf
or
popa
andl
orl
and
dec
clc
dec
movsb
push
mov
jns
pop
mov
sbb
add
call
mov
es
jl
dec
mov
movsl
cmp
outsl
fistpl
nop
or
pop
jo
jns
je
mov
mov
data16
mov
dec
pop
lds
inc
lods
lcall
test
jns
mov
data16
in
xor
sub
jmp
xor
mov
movsb
push
jo
mov
subb
inc
jle
int
lock
adc
addb
cld
jbe
cmp
jne
aam
aaa
popf
or
hlt
xchg
add
mov
inc
nop
jmp
and
push
aad
pop
pop
cmp
and
cmp
sub
cmp
mov
movl
mov
cld
mov
inc
fstpt
stos
or
push
ja
mov
hlt
mov
xchg
inc
push
ret
fistpl
mov
inc
pop
or
jmp
outsl
xchg
and
and
lods
push
jecxz
push
ljmp
cmp
mov
popf
jae
pop
nop
cld
fisubrs
jg
adc
arpl
adc
cmpl
jo
inc
cwtl
adc
aam
add
or
pop
pop
push
cmpsb
cs
inc
sub
js
aaa
jo
jmp
dec
cmp
fistpl
push
jo
repnz
jmp
call
or
jp
mov
xchg
mov
insb
dec
popa
ret
test
add
push
sbb
lods
or
add
add
dec
adc
push
outsb
jmp
and
xchg
xchg
cwtl
cwtl
cwtl
hlt
sbb
xchg
lcall
cld
add
xor
popf
aad
rcrb
popa
out
mov
and
fdivrs
jecxz
cs
or
push
sbbl
jmp
lea
pop
lcall
int3
pop
int
out
cmpsb
jbe
pop
out
push
xchg
cmpsl
push
in
mov
jmp
dec
cmp
sbb
mov
out
mov
scas
stc
into
lods
in
loop
push
int3
nop
hlt
mov
cmp
mov
movb
fcomi
dec
rclb
xchg
adc
fmul
repnz
jle
testl
sbb
scas
mov
or
xor
or
dec
cmp
dec
push
inc
rol
fwait
sbb
mov
repz
ss
repz
jle
xchg
mov
mov
repz
aad
popa
xchg
adcb
dec
mov
sbb
test
pushf
and
xchg
negb
loope
mov
sub
inc
jne
popa
inc
lea
jecxz
xor
sbb
shll
jns
pop
inc
mov
push
cli
in
xor
js
lcall
cmc
or
test
mov
dec
sbb
out
or
jmp
push
xchg
push
aas
imul
adc
adc
lret
lods
subb
push
push
jmp
push
jge
nop
ror
in
mov
and
cmp
out
cmp
adc
mov
dec
scas
adcb
shr
inc
fimull
lcall
ss
fsubl
mov
cmp
insl
aad
sbb
add
mov
cs
jge
adc
cld
pop
push
mov
lret
fldl
iret
addl
out
mov
repnz
and
sub
sahf
xorb
addr16
jns
lret
ret
cld
mov
and
mov
cltd
std
enter
mov
loop
fcmovnu
pushf
fstpt
call
sub
ss
dec
cmp
mov
not
shrl
out
xchg
and
adc
mov
push
cltd
sbb
and
pop
mov
adc
pusha
aas
in
cli
in
lods
push
jns
push
scas
jge
pop
imul
stos
mov
in
add
lods
xor
sub
fstpl
cmpsb
std
lahf
pusha
movsl
clc
adc
ss
movsl
in
divb
sahf
xchg
lret
gs
dec
or
scas
rorl
push
rolb
push
ret
xchg
adc
cmp
push
jb
sbb
jle
pop
push
push
and
adc
pop
cs
inc
ss
outsl
add
shll
sbb
out
ficompl
cmpsl
mov
sti
mov
jle
and
lock
mov
and
add
cwtl
mov
gs
push
and
movsb
aas
xor
dec
xor
pop
push
out
or
sbb
push
sbb
add
adc
or
incl
imul
adc
cmp
iret
imul
clc
or
test
pushf
jnp
cmpl
mov
jmp
mov
sbbl
outsl
loope
pop
sub
pop
push
bound
fs
jle
jl
cmpsl
cmpsb
lret
pop
mov
jns
adc
xchg
cwtl
adc
std
std
cmp
pop
prefetch
scas
mov
addr16
dec
sahf
mov
lret
push
adc
xor
add
mov
xor
jae
dec
mov
inc
inc
mov
int3
icebp
push
loopne
dec
in
test
aam
les
sub
cwtl
sti
or
out
mov
or
or
lret
inc
cmpsl
rorb
pop
xchg
push
jle
cmpsl
js
mov
mov
cld
push
xchg
fs
pop
sub
ss
stos
push
adc
loopne
inc
cmp
and
lock
jbe
stos
push
orb
jo
add
xor
xchg
aas
mov
adc
daa
stos
cmp
push
sub
xchg
stc
std
push
add
push
loope
test
filds
aaa
insb
insb
loopne
push
pop
xchg
int
pop
in
in
add
adcl
xchg
mov
dec
add
mov
aam
push
pop
inc
out
mov
popf
int3
pop
movq
fdivs
push
lods
add
xor
arpl
adc
dec
lahf
jo
sbb
dec
cld
dec
and
lcall
movsl
rcrb
push
scas
cmp
cmp
push
gs
iret
inc
imull
rcll
mov
sub
sti
inc
cmp
enter
mov
lods
popf
or
xor
xchg
jp
aaa
insl
sub
popf
nop
int
adc
jp
insl
sbb
cmpsb
jnp
clc
and
imul
pop
les
cld
dec
imul
loop
ja
inc
in
sbb
pop
loop
mov
je
xchg
push
add
push
xchg
loop
inc
push
iret
and
movsb
pop
push
jmp
ficomps
push
sbb
xchg
pusha
dec
jno
dec
stos
or
scas
sbb
ret
dec
out
lcall
sbb
xchg
aaa
repnz
push
imul
cmp
jecxz
faddp
or
mov
shlb
dec
add
push
sbb
xor
ficoms
test
loopne
hlt
lock
int
idiv
negl
fs
aam
fwait
jb
pop
aas
out
test
cmp
sahf
push
aam
add
mov
or
idivl
jbe
mov
adc
sbb
jbe
cmp
dec
imul
jecxz
mov
out
xchg
loop
jae
sub
inc
jecxz
push
jo
nop
int3
sub
lahf
ret
mov
into
pop
inc
fisubrs
mov
imul
mov
cmpsb
jo
aad
std
mov
sbb
dec
fistpl
repnz
js
dec
push
test
lods
popf
outsl
xor
mov
cmp
incl
imul
out
mov
jg
or
ficoml
xchg
int
dec
dec
lret
scas
popl
pushf
dec
stos
inc
xor
dec
add
push
mov
cli
dec
inc
jo
stos
ss
jmp
lock
mov
xchg
sub
jo
jno
and
mov
xchg
enter
cli
cmc
sub
lahf
das
push
test
cmp
mov
and
dec
into
and
or
inc
push
mov
jno
mov
sub
sub
nop
mov
mov
lock
aam
aaa
movsl
faddl
xor
rcrb
add
popa
mull
in
aam
push
outsb
cld
add
call
iret
adc
adc
jg
mov
inc
push
add
ficoms
cmc
push
orb
bound
and
mov
outsl
lods
arpl
pop
bound
push
bnd
cmpsl
stc
icebp
lret
faddl
lahf
ja
enter
xchg
aas
fcmove
daa
repnz
jl
xor
mov
mov
test
xchg
cwtl
jecxz
xchg
rorl
adc
lahf
xchg
repz
dec
cs
or
or
adc
jbe
lcall
pop
bound
sub
loop
and
stos
push
mov
sbb
mov
call
into
mov
cmp
xchg
adc
xor
add
aam
mov
sahf
lcall
xlat
inc
movsl
cmp
pop
fcmovu
push
insb
stos
xchg
pop
add
mov
clc
xor
ret
nop
push
jg
fisubs
fmulp
enter
adc
xchg
push
jmp
sub
cmpsl
imul
inc
mov
orl
add
mov
inc
out
xor
fucomi
fs
int3
out
cmpsb
clc
js
ljmp
insl
add
sub
jnp
add
imul
or
and
mov
iret
fimuls
test
jl
nop
bound
jae
sbb
data16
cmp
inc
bound
cmpb
and
adc
mov
or
inc
inc
add
mov
fcmovnu
jbe
rcr
mov
push
and
sbb
cs
dec
sar
add
repz
or
fwait
mull
xchg
add
lahf
xor
rol
push
movsl
adc
out
fsubr
mov
and
jb
pop
mov
cwtl
fadds
addb
movsl
fadds
adc
insl
jae
rolb
add
outsb
mov
or
add
xchg
pusha
pop
cmp
sub
mov
leave
int
mov
xor
nop
jle
movsl
xchg
xor
ja
dec
out
dec
cmp
mov
rolb
xor
and
add
dec
jp
iret
icebp
adc
cs
pop
ljmp
inc
out
iret
jle
mov
imul
aam
cmp
pop
jne
cmp
jno
jbe
call
sbb
dec
push
push
ds
je
xchg
sub
push
pop
mov
sub
das
dec
mov
cs
push
xchg
roll
test
loop
push
lret
ljmp
sub
sarl
out
sbb
xlat
pushf
mov
imul
cli
mov
xchg
jae
push
push
sbb
xchg
and
ja
test
xor
jne
dec
push
xchg
es
sahf
lcall
cmp
int
ret
enter
jl
dec
lods
sub
jecxz
dec
or
push
cltd
cmp
pop
mov
sahf
mov
je
lea
pop
cmc
loop
aaa
sub
or
std
scas
mov
rcrb
testb
mov
jno
adc
outsl
adc
std
mov
mov
mov
daa
mov
mov
xchg
rol
adc
add
stc
pop
mov
push
add
nop
sbb
mov
pusha
mov
push
test
push
xchg
cli
and
mov
push
mov
pop
fmuls
jns
dec
stos
sahf
scas
sub
xchg
aad
repnz
fldt
divl
or
adc
sub
bound
sub
ja
mov
enter
mov
mov
ss
test
cmp
xor
ds
imul
and
data16
pop
inc
push
xor
cmp
inc
stc
pop
cmp
mov
mov
mov
dec
out
dec
sub
pusha
pushf
cli
in
push
xor
adc
mov
push
aas
scas
mulb
dec
ljmp
mov
lea
mov
repz
in
into
inc
cmp
imul
inc
jmp
mov
ss
pop
rcrb
cmpsb
cmpsl
push
das
mov
ret
addl
inc
mov
addr16
adc
das
dec
stos
arpl
push
aaa
aas
fildl
fimuls
and
pop
daa
ret
add
fmuls
imul
stos
and
ds
sbb
testb
aas
cmp
fs
mov
mov
divl
cmp
pop
imul
repnz
imull
data16
ds
jge
hlt
mov
sub
xchg
dec
cmpsl
ds
mov
stos
push
test
lea
adc
lret
scas
push
mov
mov
dec
nop
xchg
std
int3
mov
mov
dec
push
jmp
lahf
mov
cmpsb
lret
push
adc
lahf
fs
xchg
sub
xchg
adc
jae
xor
scas
pushf
jo
data16
out
mov
popf
in
ss
scas
cld
cmp
shr
lods
out
cmp
adc
aaa
push
fs
mov
push
negl
sbb
insl
mov
ret
jbe
or
inc
addl
mov
jae
shl
rolb
in
push
lcall
dec
mov
cmp
aad
push
sbb
xor
lret
mov
insl
inc
imulb
in
pop
and
nop
scas
scas
aas
js
cmpsb
inc
push
push
fcmove
icebp
sub
mov
jecxz
insl
clc
clc
or
adc
pop
nop
insl
cld
cltd
xchg
adc
lcall
lahf
mov
sti
jl
outsl
cwtl
out
fs
sbb
negb
xchg
shl
lret
sub
cld
push
xor
add
push
out
mov
mov
insl
js
mov
fwait
or
lea
loop
rorb
or
jle
xchg
push
clc
ds
sti
pop
xchg
dec
sbb
outsl
ss
jb
xchg
adc
repnz
lcall
xchg
fwait
adc
cmp
adc
fstpl
loope
mov
push
mov
testl
test
pop
bnd
xchg
jmp
js
dec
xchg
in
das
and
jns
jle
or
cmp
rcrb
lret
pop
repz
movsb
sbb
data16
add
cmp
cmpsl
mov
adc
jl
push
adc
stos
inc
arpl
jns
leave
mov
test
xor
cmp
adc
adc
rcrl
iret
pop
and
add
push
adc
cmpsb
xor
sub
adc
push
and
fs
inc
push
mov
inc
and
ffreep
sub
mov
ja
pop
pop
daa
cmp
and
ljmp
subl
aam
sahf
add
push
inc
mov
out
out
rol
jg
lds
and
inc
pop
adc
push
repz
sbb
rorl
or
pop
cs
push
pop
jecxz
mov
cmp
arpl
jbe
xchg
xor
mov
xchg
repnz
pusha
sahf
jbe
xchg
jns
sbb
inc
jns
imul
sub
stos
fwait
or
xor
xchg
lds
xchg
or
jb
movsb
int3
push
sbb
or
vhaddpd
push
xchg
mov
sti
loop
cmp
pop
pop
inc
cltd
sub
aas
push
push
adc
shll
inc
cli
je
push
call
and
mov
mov
xchg
mov
inc
add
in
sbb
mov
lcall
outsb
out
pop
cli
insl
pop
pop
mov
js
testl
dec
scas
insb
lods
stos
sahf
scas
cmc
ljmp
add
js
push
in
mov
in
popf
in
lcall
mov
pop
push
inc
sbb
mov
mov
dec
insb
dec
pusha
lds
repnz
ror
loopne
push
sbb
mov
mov
cmp
bound
jbe
sbb
mov
pop
xor
fimuls
and
out
push
dec
sbb
fidivs
movsb
jbe
std
arpl
lock
xor
xchg
xchg
aas
push
mov
jl
add
in
loopne
dec
dec
add
push
mov
xor
or
and
lret
pop
xchg
ljmp
jmp
popf
fidivrs
add
enter
xor
adc
jnp
arpl
mov
les
iret
repz
bnd
es
mov
add
or
outsl
mov
dec
jle
mov
sub
dec
xor
inc
inc
cmp
lahf
add
ds
stos
jecxz
cltd
and
ret
out
out
xor
push
loope
or
loop
add
push
popf
jne
xor
mov
incl
dec
push
insb
in
mov
aam
adc
pop
or
hlt
push
pop
cltd
add
dec
pop
stos
mov
or
xchg
aas
addl
shrw
ljmp
inc
loopne
xor
call
aas
shll
sbb
pop
les
fisubs
mov
packuswb
int3
mov
mov
sub
pop
lahf
pushl
pushf
test
push
dec
pop
std
hlt
mov
push
sub
push
setbe
js
arpl
push
xchg
frstor
or
cltd
orb
mov
push
mov
push
cmpsb
lret
push
push
sti
pop
movsb
in
jle
test
das
jbe
cmpsb
sbb
jne
test
xchg
push
sbb
pop
adc
or
and
and
jbe
int3
jns
imul
jl
mov
jnp
out
push
or
scas
jecxz
push
jae
stc
xchg
mov
stos
loopne
jle
xlat
mov
hlt
std
imull
adc
out
cmpsb
add
std
in
mov
lahf
out
lock
sbb
mov
pushf
sbbb
sbb
xor
gs
mov
pop
popf
sarl
addl
fsubrl
outsb
daa
cmp
mov
pop
out
loop
push
repnz
pop
mov
loop
icebp
dec
dec
pushf
orl
repz
dec
ja
out
mov
jle
test
inc
push
lea
clc
mov
xchg
ds
pushf
popl
fwait
jl
ror
or
cmp
je
fstpl
dec
aaa
jcxz
pop
rorl
fiadds
das
jno
aaa
inc
add
pop
out
scas
addr16
cld
imul
addr16
mov
push
mov
fs
stos
push
lahf
xchg
or
cmove
inc
or
jl
push
sub
push
mov
cmp
out
std
lods
and
inc
imul
pop
pop
mov
arpl
add
repnz
stc
repz
test
lea
hlt
push
sti
icebp
pop
pop
aas
jp
cmc
in
cmp
pop
jge
ja
ss
dec
repz
sbb
in
cmpsb
js
jecxz
and
push
enter
xor
mulb
cmpsl
fisubrs
sti
ljmp
mov
mull
mov
out
call
cmp
fstpt
int3
ljmp
and
mov
sub
xchg
into
test
inc
subl
pop
cmpsb
hlt
mov
insl
jns
sub
fnsave
popa
lock
loop
es
lret
mov
aad
xlat
xor
es
mov
push
and
or
jno
push
mov
inc
scas
pushf
test
and
pop
or
scas
fucomi
int3
sbb
movsb
stos
dec
lahf
adc
inc
in
cs
outsl
inc
xchg
pop
loopne
popa
xchg
int
jo
dec
testl
or
or
out
test
in
jnp
cs
jnp
mov
or
pop
jb
out
pop
stos
pop
add
lea
sbb
ljmp
cmpsl
out
repnz
mov
xchg
enter
jae
and
mov
shll
adc
push
jle
loop
jae
pop
bound
inc
jp
jns
mov
lea
dec
in
push
je
xchg
repnz
jmp
insl
fdivl
test
add
inc
mov
and
or
in
jmp
sbb
xchg
dec
aas
mov
lea
hlt
fchs
xor
jg
fmull
mov
ds
call
das
mov
jnp
cmp
mov
imul
cmp
hlt
cmpsb
out
jns
gs
out
mov
push
and
fcmovne
out
filds
push
inc
xchg
outsb
mov
jne
mov
mov
dec
sbb
cmp
orb
popa
stc
push
outsl
pop
cmp
push
xchg
or
popa
dec
arpl
adc
pop
jp
jbe
enter
out
cmp
aad
sub
in
push
mov
in
test
fistl
sub
and
or
ss
sub
mov
and
notb
or
cmp
ja
mov
sbb
and
shrl
xor
in
fists
into
ds
jno
sahf
cld
adc
jl
and
f2xm1
xchg
mov
jg
mov
and
loop
xor
fwait
push
fwait
xchg
adc
xlat
xor
test
rcrl
out
and
mov
insb
fstl
bound
sub
into
dec
pushf
xor
push
cltd
adc
scas
aad
shll
or
adc
lods
sub
and
xlat
popa
enter
xchg
ret
xchg
dec
push
shlb
sub
sbb
adc
in
cmpb
or
ficoms
inc
or
mov
insl
mov
xlat
cmp
sbb
lss
mov
inc
add
fisubrl
mov
mov
and
scas
test
jge
jmp
adc
xchg
mov
push
or
into
xchg
jo
rorb
not
lret
mov
sbb
adc
xor
inc
pop
loope
bound
cs
xor
dec
dec
pushf
dec
mov
inc
lods
test
inc
sbb
sbb
add
xor
into
out
outsl
mov
adc
jecxz
and
ror
and
js
adc
loopne
or
cmp
jg
outsl
and
pop
fwait
inc
iret
and
decb
subl
inc
es
push
sub
xor
inc
out
inc
inc
loopne
pop
in
cmc
mov
pusha
mov
fldenv
add
pop
pop
push
sti
pushf
xorl
rorl
imul
iretw
scas
into
cld
xchg
jnp
outsl
and
xchg
push
jo
outsb
andl
call
xchg
inc
mov
test
cwtl
sbb
mov
or
sub
ljmp
outsl
daa
hlt
pop
ret
adc
into
sar
jge
xor
shlb
mov
std
adc
xor
xlat
ss
fdivl
movsl
mov
pop
call
inc
push
ffree
pop
jae
in
xor
xchg
adc
or
arpl
movsl
mov
lock
cmpsl
and
lea
cli
or
dec
mov
int3
nop
and
mov
adc
lods
cmpsb
int3
test
shlb
push
mov
loop
dec
mov
mov
mov
arpl
or
cmpb
out
pusha
dec
fstl
or
lea
stos
mov
das
arpl
enter
dec
rorb
dec
mov
mov
loop
xchg
lahf
daa
jp
mov
pop
mov
bound
jns
mov
jg
loope
mov
push
hlt
js
sbb
pop
fiaddl
pop
push
push
mov
pop
fisubrl
ss
and
fcomps
pushl
in
mov
scas
mov
loope
rol
cmp
pop
pop
jg
lock
adc
sub
sub
shr
sbb
dec
popa
dec
lcall
push
stos
out
inc
and
cwtl
sbb
or
sarb
adc
ds
sub
cmpsb
popa
fucomip
inc
iret
lret
mov
outsb
jbe
fsubr
movsb
shrl
or
mov
mov
test
stos
xchg
lret
sbb
lret
jp
mov
out
sub
cld
and
sub
jae
aam
xchg
cld
lret
fwait
popf
popa
inc
mov
xchg
int
ds
hlt
fwait
push
aas
sub
rolb
mov
andl
dec
sub
xchg
and
mov
lods
rorb
sub
mov
test
sub
leave
lahf
mov
daa
cmp
mov
dec
lock
popf
adc
mov
jns
dec
cmp
pop
mov
call
jge
lock
mov
add
movsl
jns
imul
in
outsb
inc
cld
mov
addr16
pop
js
cmova
push
ja
mov
push
stos
jl
mov
call
inc
popf
jmp
inc
ret
mov
lahf
daa
pushf
jno
sti
in
jmp
mov
xchg
mov
fcomip
pop
fisubrs
push
inc
popf
rcrb
xor
or
mov
or
mov
add
in
cmpsb
cmpb
dec
lret
xor
das
jle
jecxz
and
push
out
push
fildll
pop
xchg
mov
mov
jecxz
js
pop
pusha
int3
repz
xchg
sub
adc
cmpsl
push
jns
js
mov
sti
mov
push
mov
popf
lret
scas
addb
cmp
insb
mov
push
add
dec
adc
xchg
fidivl
mov
xor
and
inc
jecxz
out
test
jge
les
push
test
dec
xchg
stos
pop
in
cld
fwait
push
out
es
pop
daa
dec
add
cs
jl
add
les
mov
jnp
inc
xchg
loopne
insb
jmp
dec
dec
out
sub
push
sub
clc
and
inc
pop
rcrb
imul
sti
lcall
dec
out
xchg
cli
pop
rcrl
rol
sub
mov
ret
jae
test
pop
mov
insb
fistpl
das
dec
repnz
aas
pop
push
fildl
ds
outsb
pushf
mov
mov
dec
pop
push
xchg
leave
xlat
dec
sbb
mov
shl
outsl
dec
inc
sub
add
mov
hlt
mov
and
in
adc
cmp
and
and
in
jle
push
cltd
rcll
cmp
xchg
jae
pusha
jecxz
push
insb
sbb
rol
pushw
jp
lret
scas
cmp
inc
sarl
and
out
rorb
fs
orl
xor
pushf
fs
or
xlat
push
sarb
jmp
mov
cli
add
fldl
and
sub
jmp
int3
mov
cwtl
aaa
inc
sub
loope
pop
bound
jmp
fwait
and
cli
pop
xchg
dec
stos
mov
pusha
test
movsl
loop
js
add
lret
inc
or
test
and
jae
cmp
fmuls
push
jb
sub
out
repz
sbb
jg
je
inc
jmp
mov
aaa
bound
sub
pusha
clc
inc
mov
test
mov
cmp
mov
fbld
dec
push
rcrb
xchg
jle
int3
js,pn
lock
ret
pop
dec
and
xchg
outsb
jbe
inc
fst
pop
jne
je
into
les
xor
sub
cmp
std
lret
mov
dec
hlt
and
cmpsl
jne
outsb
fwait
ss
psubw
mov
add
fistl
add
xor
ljmp
xor
dec
cmp
out
add
add
cmp
incb
jmp
fisubrl
ficompl
push
xor
xchg
pop
mov
sbb
fs
in
imul
mov
cmp
fimull
fcmove
pop
repz
fsub
repz
xor
jns
adc
jp
mov
mov
fmull
add
dec
into
pop
repnz
stos
dec
clc
popa
push
ja
test
cld
cmp
and
call
push
cs
cli
ljmp
xchg
ljmp
mov
sub
jae
mov
jno
pop
add
popf
add
shlb
push
dec
fsubl
call
in
inc
mov
or
sbb
lret
shl
fidivl
push
scas
sbb
int
cmc
add
lock
and
inc
dec
dec
pop
pop
test
mov
ds
clc
ljmp
mov
mov
cmp
jle
das
ret
aaa
jno
jae
or
dec
cmp
jo
xor
insb
xor
xchg
loopne
jno
dec
pop
sub
pop
shrb
int3
add
dec
jl
in
or
xor
das
addr16
into
ret
enter
ja
or
dec
push
popa
ret
dec
push
in
popa
mov
cs
xchg
jp
sti
mov
cmpsb
mov
pop
mov
movsl
adc
lcall
pop
sub
pop
push
mov
cmp
adc
xchg
push
dec
fs
push
popa
pop
xor
test
out
fbstp
push
pusha
imul
repnz
flds
mov
jle
das
mov
sbb
mov
cmpsl
les
xor
add
cli
lcall
out
sub
stc
sti
lods
inc
or
repz
shrl
push
stc
ret
vmwrite
add
call
push
cmp
lock
ljmp
xchg
inc
dec
mov
call
fs
sub
daa
arpl
xor
cmp
ljmp
rcl
add
push
stos
push
fildl
test
inc
xchg
push
xor
mov
in
iret
sub
jne
sbb
test
jo
punpckhbw
sub
pop
loopw
in
lahf
ds
loopne
sub
sarl
cltd
sbb
and
inc
hlt
shl
fwait
and
xchg
mov
xor
dec
pop
inc
icebp
loop
ljmp
xchg
arpl
push
push
dec
sub
inc
hlt
test
cmc
adc
out
sub
movsb
dec
inc
shlb
scas
dec
xor
dec
jae
pop
pop
sbb
sub
sbb
mov
mov
scas
push
mov
aas
lcall
mov
mov
sbb
jecxz
pop
jae
xchg
xchg
mov
xor
mov
test
jb
test
aas
daa
jge
flds
and
cld
sub
cmp
test
mov
fwait
push
mov
not
ja,pn
add
test
pop
sbb
mov
rolb
push
mov
dec
scas
xor
cwtl
jp
xor
pushf
icebp
lods
push
fmul
fwait
and
filds
jecxz
inc
call
sub
pop
rolb
xor
test
cmp
icebp
dec
rcrl
out
mov
out
xchg
cltd
pop
outsb
or
inc
ss
stos
and
inc
mov
and
bound
aad
roll
cmpsb
xchg
in
jbe
sti
sub
or
in
iret
add
pushf
or
out
adc
imul
jmp
inc
repnz
and
push
dec
pop
les
cmc
das
out
cli
pop
dec
aaa
pusha
push
jo
maxps
sub
jmp
test
out
add
xchg
imul
push
sub
fdiv
xchg
lahf
push
jb
inc
xor
and
xchg
xchg
pop
fwait
pop
addl
ss
xchg
out
pushf
movb
nop
and
insb
mov
leave
rolb
int
push
cld
std
out
loope
je
test
lea
sbbl
add
sahf
sarb
pop
stc
mov
xor
bound
dec
jg
pop
inc
mov
mov
clc
addr16
sti
jnp
fistpll
in
mov
fsubrs
out
gs
dec
xlat
xchg
push
insb
fnstcw
sbb
bound
mov
dec
fs
js
cmp
or
cltd
pop
or
es
sub
ss
dec
insl
pop
sbb
loopne
or
jb
pop
nop
adc
out
and
xchg
or
les
pop
std
adc
mov
cmpsl
sub
jp
fsubp
mov
pusha
xchg
in
inc
xchg
pop
test
test
inc
cmp
fistpll
cmc
add
push
lods
jns
add
aad
pop
pushf
jp
pushf
mov
mov
pop
negb
enter
push
mov
call
nop
mov
sub
xor
cmpsl
sbb
call
pop
pop
jno
arpl
jmp
cmpsl
or
xchg
sub
cmpsb
jl
addps
inc
mov
push
or
dec
mov
xor
das
out
xchg
stos
dec
in
in
mov
pop
dec
int3
arpl
sbb
or
sub
jnp
mov
std
jmp
dec
loopne
icebp
nop
dec
loop
mov
es
sub
adc
enter
jg
outsb
out
int
loop
sub
lret
mov
loope
sbbb
push
xchg
jne
sub
mov
adc
ja
pop
and
push
mov
pop
dec
add
xchg
clc
outsb
sbbb
xchg
ljmp
dec
mov
jl
xor
mov
hlt
fbstp
call
mov
mov
int
pop
and
mov
xchg
clc
shlb
mov
pop
adc
xchg
add
lret
xchg
fisubs
testb
fiaddl
gs
xchg
shrb
adc
cmp
stc
xchg
dec
xor
push
or
pop
sahf
sti
sbb
adc
add
adcl
or
mov
cmpsl
adcb
cwtl
ljmp
mov
add
fimull
xchg
imul
xchg
push
pusha
ds
leave
jmp
mov
and
jl
cmp
jno
fs
bound
out
mov
scas
cmp
cmp
je
or
add
cmp
add
ljmp
insb
push
jo
es
fdivl
jno
jl
insb
dec
jbe
daa
mov
repnz
add
call
in
push
test
push
cwtl
adc
and
gs
and
andb
mov
int3
mov
jge
jns
lods
addl
inc
mov
and
out
mov
push
dec
adcl
inc
jns
sub
es
movsb
add
stos
fidivs
cltd
push
arpl
mov
inc
dec
loopne
js
shrb
add
enter
rcrl
dec
pop
push
mul
adc
ss
lock
cmp
xor
cltd
into
xlat
movsl
lahf
adc
jg
adc
lcall
cmpsl
arpl
dec
scas
imul
les
loope
arpl
xchg
cmpb
inc
push
cs
enter
push
in
sbb
mov
pop
push
movsb
mov
cmp
sub
mov
jnp
xor
insb
jl
ret
mov
mov
aam
jl
ja
movsl
lret
mov
insl
dec
add
inc
add
jo
sbb
leave
fcmovb
dec
add
bound
fsubr
push
push
inc
push
or
push
int3
jno
scas
push
sbb
or
loopne
ds
cmp
xlat
dec
adc
lods
and
rcrl
sbb
sahf
mov
push
push
cli
sarb
dec
int
mov
push
dec
jbe
ficoms
mov
ss
aas
mov
add
aaa
insb
inc
push
and
out
xchg
movsb
fwait
mov
and
jnp
sub
cmpsl
sbb
push
test
xchg
add
aad
mov
mov
aad
imul
push
out
rorb
xor
ret
rorb
cli
jbe
ja
daa
movsb
xchg
mov
sahf
cs
pop
xor
out
jp
fsts
pop
mov
dec
in
add
mov
inc
je
push
mov
cmp
dec
xchg
fisubrl
cs
or
push
aaa
add
hlt
pusha
inc
test
cmp
lret
shl
call
push
mov
movsb
inc
push
mul
mov
pop
push
pop
scas
and
adc
and
in
jge
dec
sub
add
jbe
push
or
lds
and
call
push
ja
lcall
xor
xor
push
sbb
jl
or
mov
mov
shr
popf
and
fcomip
mov
lods
or
das
dec
test
ret
xor
xor
mov
adc
out
add
mov
aaa
xchg
popf
sub
dec
cmp
ret
adc
pop
decb
inc
outsb
dec
mov
test
push
push
shll
jge
jp
hlt
es
xor
mov
add
pop
or
bound
mov
out
je
xor
and
push
push
cmp
aam
ljmp
popa
sar
call
and
je
idivl
cmp
lods
shlb
sbb
mov
aas
sahf
pushf
pop
or
js
mov
and
inc
pushf
inc
in
and
jg
or
aaa
push
sub
dec
mov
in
jp
ret
xchg
dec
xchg
movsb
jg
pop
sbbb
js
push
jns
orl
cs
mov
fisubrs
out
jle
push
mov
pop
jmp
mov
movsl
inc
cmpsb
jp
repnz
sbb
mov
xor
fldenv
push
scas
lret
mov
sub
xor
data16
jle
pop
dec
inc
cmp
out
inc
stos
incb
jmp
jae
rcrb
mov
fidivs
adcb
repnz
jecxz
pushf
add
jle
cmpsb
insb
nop
fistl
cmpsl
pop
cmpsb
popa
or
out
ss
test
enter
add
and
mov
pop
pop
cmpsb
icebp
loope
filds
jmp
shl
mov
cmp
sbb
icebp
iret
inc
xchg
pop
pop
or
sbb
int3
mov
lea
xchg
ds
jne
jl
imul
ret
ds
add
and
jl
cmp
pop
xchg
bound
jmp
insl
in
xchg
jl
adc
jne
gs
pop
out
inc
loop
loopne
sub
mov
push
shrl
lods
push
sbb
or
scas
or
inc
mov
mov
test
ds
cli
mov
lds
ret
jl
adc
fsubl
xchg
cmc
je
out
pop
or
or
lods
jmp
inc
stos
pop
movsb
lock
test
xor
stc
push
sub
pop
jmp
add
mov
testl
mov
jge
pop
les
insb
mov
xchg
cmp
dec
push
imul
mov
lods
div
pop
lods
stos
fxch
dec
push
dec
js
mov
dec
movsb
or
push
mov
fdivp
pop
in
enter
sbb
xor
mov
adc
xchg
movsl
cmc
or
push
shr
push
daa
sub
arpl
mov
pop
pop
je
scas
ret
clc
jo
xchg
movsb
test
arpl
aas
and
fsubr
lret
jmp
fsubl
or
and
inc
outsl
popl
andb
pop
xor
insb
les
mov
ret
lock
int3
dec
xchg
pusha
sarl
lds
dec
cmp
mov
fs
cs
out
cmc
daa
scas
scas
xor
cmp
dec
pop
test
adc
jmp
mov
mov
loop
jp
or
mov
xor
mov
scas
and
pop
jno
pusha
push
adcb
sbbb
mov
shr
mov
jbe
cmp
mov
dec
inc
jp
xchg
outsb
add
adc
xchg
out
cmpb
js
xor
dec
es
xor
and
pop
aad
insb
sub
or
mov
ljmp
stos
xchg
jmp
jge
pop
test
shl
mov
jb
scas
xor
sub
cmc
rol
mov
test
pop
repnz
inc
pop
push
fnstenv
mov
popa
lock
icebp
sub
fs
pop
cmp
pusha
mov
xchg
sahf
cpuid
xchg
js
shlb
lods
xor
push
nop
scas
imul
sbb
bound
sub
sbb
push
and
rclw
mov
cmpsb
data16
aaa
mov
and
cmp
sbb
shlb
adc
repnz
sbb
in
mov
insl
and
je
sub
cmp
xchg
fwait
in
js
mov
inc
adc
xorl
xchg
jle
mov
dec
mov
sbb
xchg
cmp
fdivrl
xor
rcrb
sub
jmp
cmp
sub
inc
or
mov
jl
nop
dec
mov
test
sarb
in
push
push
je
scas
mov
pushf
fmull
je
jmp
mov
dec
jle
or
out
adc
adc
nop
in
or
xchg
pop
icebp
ficoms
aaa
mov
into
ret
add
push
addr16
ror
or
test
mov
fnstenv
dec
and
mov
pop
mov
movsb
pop
inc
sub
mov
inc
test
loopne
adc
icebp
out
inc
mov
dec
adc
push
aad
pop
or
fimuls
je
popa
repz
lock
in
fstp
pop
frstor
fwait
xchg
roll
cli
iret
jae
pop
dec
iret
add
cmp
inc
pop
stos
fadds
rorb
sarb
jb
mov
arpl
cmc
xlat
ficoml
xchg
push
or
and
adc
hlt
xchg
push
ror
imul
jo
lret
repz
fnstenv
inc
mov
sbb
test
xchg
dec
iret
jne
rol
mov
int3
xchg
loope
mov
mov
pop
outsb
fcmovbe
jo
fisttpll
or
pushf
mov
cmpsb
out
data16
shr
push
movb
stos
jp
lods
into
rcrb
mov
xor
jae
xchg
mov
cmp
imul
jmp
xchg
add
movsb
add
lods
xor
push
enter
fdivrs
sbb
aam
shrb
cmpb
rcr
int3
ret
sbb
fdivl
popa
scas
xchg
push
lret
or
xchg
loop
jmp
mov
nop
cmp
push
pop
jecxz
bswap
xchg
fiadds
ss
inc
jecxz
stos
pop
pop
ljmp
xchg
mov
push
cmpsl
mov
fistpll
sti
ds
xor
int
sbb
das
xchg
add
add
cmpsb
int3
dec
mov
ja
in
jle
mov
out
mov
jp
push
movsb
xlat
sbb
fsubs
dec
dec
sbbl
out
cmp
sbb
out
push
das
mov
repnz
push
je
test
inc
xchg
or
out
imulb
subb
enter
jl
xor
scas
jl
pop
fnstsw
test
in
push
push
dec
mov
jg
mov
enter
xor
xchg
jp
enter
scas
mov
add
jb
in
mov
in
repz
roll
rolb
mov
mov
lods
fldenv
pusha
ja
dec
push
movsb
dec
mulb
push
aam
and
cmpsb
popf
adc
bound
arpl
lock
pop
lahf
ffreep
jle
xchg
xchg
das
fs
pushf
sahf
adc
cmp
lock
int3
pop
jge
pushl
icebp
mov
pop
sbb
les
ja
roll
leave
push
rclb
or
das
dec
jg
xor
int
stos
xchg
rolb
out
dec
adc
repz
aaa
sbbl
scas
stos
push
insb
xor
mov
int
test
add
es
aad
pushf
lods
push
xor
and
xchg
ficomps
pop
loop
sub
outsl
ret
lcall
aas
mov
pop
and
loop
outsl
pusha
cld
rcll
rclb
mov
and
push
pusha
popf
les
outsb
mov
cmp
fmulp
cmpsl
ja
mov
xor
leave
pop
dec
cmpsl
nop
add
push
sbb
pop
lea
dec
cs
adc
xlat
imul
jecxz
sub
mov
gs
xchg
int
and
sub
xchg
lods
inc
inc
inc
jg
and
fmuls
lret
dec
dec
fbld
ret
mov
jge
addr16
daa
and
addr16
out
aaa
jnp
xor
xor
call
jno
jle
iret
jg
pop
push
and
xor
sbb
cmp
movsl
aas
rolb
je
sub
or
ljmp
int
fwait
outsb
xchg
xor
xchg
aam
mov
pop
mov
rcll
push
push
or
out
movsb
jbe
arpl
push
pop
rcrl
dec
ja
mov
mov
lret
lods
cwtl
insb
rol
dec
fsubrs
aam
and
sub
jae
inc
cwtl
dec
pop
aas
push
sbb
lea
mov
stc
adc
std
mov
rcl
xor
rolb
push
mov
andnps
inc
das
fstpl
cltd
ja
add
stos
mov
mulb
mov
test
test
sbbl
pop
insl
sbb
enter
dec
fstpt
xchg
hlt
push
pop
ja
addr16
add
insb
ds
pop
loope
outsb
cmp
xchg
mov
inc
cli
shrl
fldl
add
xchg
roll
cmp
jmp
cwtl
fstl
dec
enter
cmp
loop
jne
insb
flds
outsl
loope
sti
movsl
fiaddl
add
scas
pop
fisubrs
dec
cmp
mov
sbb
xlat
int
pop
xchg
mov
jmp
mov
aas
mov
push
add
pop
repz
xor
lret
pop
sub
imull
scas
pushf
mov
add
ficoms
push
inc
je
sti
stos
in
and
pop
pop
cmp
das
add
cltd
pop
jae
cmp
rcrl
movsb
sub
jmp
add
xchg
stc
pop
push
arpl
mov
add
test
ss
aad
lds
shlb
mov
outsb
cmp
fdivrl
jno
ljmp
mov
xor
scas
push
setbe
jle
inc
cmpsl
add
fildll
dec
xchg
xor
imulb
loopne
fcmovne
out
jmp
xchg
pop
fs
loope
das
push
cwtl
xchg
clc
cmpsb
mov
ljmp
pop
xchg
mov
bound
pop
in
scas
int3
mov
dec
repz
mov
pusha
fsts
lds
xchg
mov
pop
bound
jno
dec
sbb
and
cmp
mulb
adc
ret
mov
pushf
mov
push
mov
adc
push
nop
adc
inc
mov
movsl
mov
ljmp
adc
test
mov
sub
jg
push
rolb
shlb
xchg
jmp
aad
cmp
mov
sbb
es
std
decb
pusha
jmp
fbld
cld
adc
sbb
loopne
cmp
jno
test
xor
mov
push
ret
or
sbb
insb
sbb
aam
scas
fbstp
jmp
xchg
mov
test
jecxz
mov
test
mov
out
inc
jle
xchg
clc
xor
mov
int
movsb
cld
test
das
dec
out
push
inc
std
lret
lret
aaa
orl
adc
cmc
das
push
inc
stc
sarb
stos
ret
pusha
shll
inc
cmp
int3
les
adc
insb
sbb
fisubl
dec
jb
stos
lods
jbe
sbb
lea
and
leave
aaa
push
rorl
mov
into
dec
pop
aam
xchg
push
inc
sub
xlat
cmp
adcl
das
scas
movsb
or
test
fisttpll
inc
or
mov
jge
sub
mov
jp
je
inc
and
cli
push
out
xchg
inc
inc
dec
bound
inc
jp
add
mov
ret
push
adc
sahf
insl
push
imul
fldcw
ja
cmp
sbb
push
int3
out
iret
bound
fwait
lock
scas
or
push
cmpsl
or
push
pop
or
shl
enter
ja
push
jnp
adc
or
ds
lods
out
in
jno
fsubrl
addr16
xlat
xchg
cmp
adc
inc
lcall
cmp
xchg
into
mov
outsl
push
enter
cmp
cld
xchg
mov
std
add
stos
mov
adc
das
dec
daa
lods
sub
cmp
mov
mov
das
mul
cltd
js
sub
enter
jle
mov
movsb
cwtl
add
call
out
mov
fwait
cmp
negl
xchg
ss
mov
or
mov
sbb
dec
push
mov
shrb
loop
out
mov
int
hlt
sbb
sub
iret
sbb
push
xchg
negb
ss
xor
sub
insb
fldcw
xor
stos
pop
push
push
pop
mov
scas
pop
shlb
xor
sub
hlt
mov
js
stos
mov
add
test
inc
mov
rolb
add
fdivrl
xor
pop
dec
out
in
adc
xchg
sub
cwtl
jne
and
xchg
adc
imul
lret
rcl
or
xchg
call
rorl
fwait
hlt
jp,pn
mov
or
mov
das
lret
cmpsb
inc
fs
fadd
dec
out
jg
or
sbb
xor
ljmp
hlt
fistpl
jg
stc
data16
mov
or
xchg
fstpt
mulb
lock
call
xor
in
imul
jns
scas
push
sarl
stos
mov
aas
roll
scas
and
pop
in
iret
fstl
imul
dec
movsb
call
fsubl
sbb
insb
and
xchg
mov
xor
push
outsb
xor
js
mov
lods
pop
scas
mov
movsl
cmpsl
or
jae
xor
push
inc
ret
xlat
dec
fiadds
arpl
xorb
pop
popf
shll
cltd
add
mov
scas
or
and
nop
into
sub
out
iret
das
hlt
xchg
dec
adc
mov
addr16
xchg
mov
fadds
mov
clc
orl
insb
jnp
inc
in
dec
push
mov
and
mov
aas
sbb
inc
jae
xchg
add
ljmp
jnp
sbb
rolb
mov
out
or
std
fsubl
sbb
sub
xor
and
mov
push
or
pop
repnz
imul
xchg
push
sub
lea
js
idivb
fists
sahf
inc
cs
outsb
xor
ds
sub
pop
js
inc
push
and
mov
cmp
xor
inc
popf
out
lds
stos
adc
rorb
pop
fnstsw
add
pop
xchg
cmp
in
scas
dec
out
pusha
repnz
sbb
dec
cmp
and
dec
aaa
outsb
push
cmp
ja
adc
mov
mov
out
dec
inc
mov
mov
test
shrl
jns
pop
ficomps
dec
pop
hlt
inc
xchg
xchg
insl
mov
xchg
movsb
pusha
mov
insl
popa
popf
push
outsb
cmp
js
jmp
int
cmpsb
pop
test
inc
mov
repnz
mov
outsl
and
inc
pop
adc
dec
aas
xor
cmp
into
mov
inc
test
test
or
addr16
push
xchg
jb
shl
add
mov
cmp
icebp
inc
mov
les
ret
inc
and
push
xor
jmp
jl
cmp
inc
enter
das
jmp
mov
mov
push
sarb
stos
std
fmul
scas
and
push
les
push
pop
add
push
adcb
or
scas
aad
xchg
std
js
jle
fwait
popf
scas
repnz
stc
pushf
add
mov
cltd
ret
mov
cli
imul
bound
dec
xlat
andb
gs
negl
cli
jg
jmp
lret
ffreep
sub
dec
or
das
pop
sti
jecxz,pt
pop
add
pop
push
mov
dec
cltd
add
xor
inc
ss
add
sbb
push
pop
and
pop
adc
das
mov
sub
mov
test
shll
repz
pop
adc
sbb
sbb
jnp
sbbl
daa
mov
shlb
into
iret
pop
sbb
movsl
into
repz
cmpsl
or
fldl
fcoms
push
stc
out
cmp
imul
fisttpll
loope
pusha
cmpsl
jg
daa
xchg
jmp
out
xlat
sar
movsb
enter
xchg
dec
call
shll
imul
out
xchg
mov
xchg
and
sub
les
xchg
dec
mov
imul
cmc
sub
imul
fistpll
into
notl
repnz
fwait
cwtl
test
int
sbb
sub
and
cltd
and
loope
mov
stos
and
adc
aam
inc
or
push
xor
adcl
jo
xor
test
cmpsb
mov
jae
in
push
shll
cmp
jge
das
push
xchg
outsb
in
lea
or
and
push
mov
cs
hlt
mov
movsb
cmp
clc
inc
pop
dec
push
xchg
scas
fs
repz
stos
add
scas
pusha
jp
icebp
scas
or
test
cmp
mov
or
jle
inc
jg
pop
movsb
push
les
scas
shll
rclb
mov
mov
int
jp
jp
jl
sub
xchg
sub
mov
push
jnp
jb
popf
in
loope
repnz
fiadds
je
fistps
aad
lods
js
out
pop
mov
or
test
pusha
pop
out
hlt
dec
das
pop
dec
stos
outsb
pop
test
jge
stos
mov
sti
mov
hlt
jb
jle
mov
mov
cwtl
cltd
and
xor
sub
xchg
out
cli
popf
push
add
and
mov
xchg
xor
xchg
cmc
pop
push
fistps
adc
cmpsl
and
addr16
movsl
and
scas
xchg
das
mov
xchg
add
dec
cmpsb
aam
mov
adc
cli
pop
pop
out
dec
scas
dec
jb
sub
std
pop
xor
lds
loope
int3
add
mov
jae
dec
add
aas
push
mov
pushf
sbb
test
jb
loopne
push
inc
outsl
cmc
push
cmp
pop
dec
mov
mov
mov
and
sub
push
mov
pushf
shr
out
sti
push
add
push
mov
push
stos
lods
push
fs
adcb
insl
in
or
ljmp
pop
je
test
lcall
push
cli
shrw
icebp
or
push
or
fmulp
xor
mov
mov
sub
sub
iret
xor
jmp
xchg
les
imul
mulb
fiadds
jns
or
push
imul
jnp
dec
or
cmp
test
cmp
xchg
push
fisubrs
arpl
sbb
fs
hlt
mov
lret
and
arpl
ljmp
mov
ss
daa
das
popf
hlt
fidivrl
sarl
out
sbb
mov
cmp
cmp
xor
loopne
into
sti
or
xor
jp
pop
stc
mov
mov
pop
shlb
lahf
sub
push
imul
ljmp
out
fcompl
lods
popa
mov
es
and
mov
in
xor
pop
mov
and
xor
lahf
icebp
sub
addr16
addr16
jl
push
cmpsl
and
add
mov
in
mov
xchg
jae
sbb
jb
and
mov
pop
inc
and
push
fs
mov
pop
lret
pop
dec
sbb
inc
cmp
mov
daa
pop
mov
loop
cmp
lea
fcoml
pop
jno
imul
pop
mov
sti
adc
leave
sbb
cmp
aaa
xor
pusha
lret
pop
dec
pxor
adc
pushf
dec
std
xor
shlb
mov
fsts
cmp
mov
shll
shll
inc
pop
xor
lahf
insl
mov
pop
or
enter
rorl
sub
pop
lods
push
fsubs
push
iret
inc
mov
imulb
push
and
pop
lahf
das
dec
push
lret
xor
movsb
or
dec
inc
mov
clc
xor
sub
mov
push
scas
mov
cmp
pop
sbb
cmpsb
mov
rcr
das
cmp
sbb
out
sbb
pop
leave
rolb
and
xchg
adc
xor
out
mov
push
jle
push
fisubs
cmpsl
dec
popa
pop
xchg
jnp
repnz
out
push
cld
roll
add
imul
jmp
push
jg
les
lret
dec
lret
sbb
rcll
lds
xchg
aas
ja
and
xchg
jecxz
lret
and
mov
addr16
jl
mov
test
pop
out
sub
push
pop
popf
sbb
add
sub
sbb
test
mov
mov
loope
cmpsb
out
ret
scas
xor
repnz
aad
out
rcl
adc
and
push
mov
add
out
out
mov
mov
xchg
ds
fldt
pushf
jmp
jge,pt
or
in
dec
push
mov
sbb
and
movb
add
outsl
dec
fists
jo
or
add
cwtl
dec
or
cmp
and
sbb
xor
mov
mov
out
lret
push
fiaddl
adc
andl
jp
mov
or
xor
or
dec
ds
push
push
pushf
sbb
and
xchg
scas
clc
xor
push
adc
sbb
push
dec
mov
mov
sub
ds
mov
pop
sbb
sahf
out
mov
dec
iret
pop
aaa
cmp
cmpsb
adcb
mov
int
or
ja
cwtl
inc
sub
daa
xchg
inc
call
std
cmp
out
js
testb
enter
mov
sbb
push
or
xor
loopne
xor
xchg
int
out
push
insl
push
data16
rclb
pusha
push
add
andb
pop
in
pop
cmp
mov
cmovns
es
mov
or
and
adc
popa
into
aaa
adc
sub
bound
cmpsb
cld
mov
or
xor
enter
mov
mov
push
inc
cwtl
or
inc
lods
push
int3
adc
xchg
cltd
addr16
ja
xor
push
insl
and
lahf
ss
add
fcmovnb
sbb
xchg
push
or
sub
adc
jp
clc
lahf
xchg
movsl
pop
loopne
fstp
and
dec
lock
xor
mov
cmp
sbb
xchg
hlt
mov
mov
or
xchg
rclb
cmp
test
int
addr16
add
fisubs
add
cmp
mov
or
jne
sub
cld
jmp
push
fs
int3
arpl
vorpd
subb
mov
mov
inc
adc
add
fists
push
mov
rol
sub
pop
inc
and
movsl
lahf
sbb
push
push
frstor
icebp
aam
out
pop
stos
lds
sarb
cmp
xlat
pop
cmp
mov
aad
test
xor
jbe
pushf
mov
repz
add
scas
scas
pop
insl
xchg
add
cld
mov
xor
inc
shlb
ror
fs
test
jae
lcall
sub
scas
movsb
sub
rcrb
into
orb
lock
mov
lcall
dec
dec
lcall
push
cs
imul
cmp
movsl
mov
outsb
mov
sub
and
outsl
pusha
xchg
in
mov
imulb
hlt
pop
repnz
pop
or
xchg
push
leave
subl
adc
testb
shrb
jbe
cld
pusha
xchg
adc
push
repz
pop
imul
mov
jb
cmp
hlt
mov
adc
outsb
sub
xchg
fsts
add
outsb
pop
mov
rcl
push
dec
push
xchg
nop
mov
into
sarb
xchg
sbb
cmc
mov
cltd
fisubs
mull
adc
xor
out
xchg
add
mov
mov
int3
dec
cmp
sbb
cmp
jl
sti
fimull
aam
clc
mov
daa
pop
push
xor
pop
jg
xor
pop
adcl
loopne
mov
inc
js
movsl
stos
and
jb
lods
push
jbe
cs
repnz
cmp
stos
out
popf
push
pop
repnz
dec
jmp
xor
repnz
push
outsl
add
scas
inc
xchg
jecxz
inc
out
adcl
or
enter
or
jo
push
lahf
rorl
push
shll
dec
mov
out
sahf
fwait
dec
in
xorl
sub
in
sub
adc
dec
push
add
xor
lock
push
insl
add
lret
shl
and
addr16
and
xor
dec
jg
hlt
xchg
pop
xchg
xchg
xor
dec
hlt
mov
imul
xor
in
dec
imul
leave
add
orb
ficoms
inc
pop
add
repz
popf
enter
push
ljmp
pop
out
push
mov
dec
je
mov
push
les
lock
xor
xchg
cmc
xchg
fcmovne
mov
dec
fdivrl
dec
jg,pt
adc
dec
mov
xchg
pop
and
popf
int3
es
pusha
inc
cmp
cmp
xor
push
mov
inc
lcall
movl
push
shrl
adc
or
mov
out
push
mov
aad
insb
out
ja
jne
inc
sub
xchg
or
repz
pop
sti
mov
rcll
in
lret
mov
repnz
das
jg
cwtl
iret
mov
lods
sbb
mov
pop
stos
mov
mov
push
xor
call
push
adc
xchg
ret
adc
xor
fsubrs
xor
xor
cmp
das
lea
mulb
inc
mov
adc
xorb
std
xchg
xor
repnz
cltd
and
lods
xor
rclb
jne
es
stc
imul
jle
pop
xchg
jne
adc
ret
inc
mov
add
dec
inc
repnz
dec
pop
fisubrl
mov
repz
sbb
sbb
aas
sbb
push
push
test
mov
out
fstps
jp
add
sub
das
add
dec
das
jmp
xor
outsb
mov
inc
lods
dec
stc
js
cmp
es
rcll
ss
push
jl
or
fldenv
xor
cmp
inc
cli
xor
push
shrl
subl
push
sahf
loopne
movsb
sub
call
mov
mov
xlat
fwait
aad
test
and
lods
cmpl
fucomi
inc
lds
cwtl
shll
xor
inc
mov
idivl
xchg
mov
and
stc
jbe
xchg
push
pop
fldt
mov
push
shrl
mov
outsb
inc
mov
inc
jl
inc
push
popf
push
hlt
scas
mov
mov
cmpsb
and
add
cmp
int
sub
pop
mov
add
repz
dec
mov
insl
xchg
mov
or
shrb
dec
push
mov
icebp
add
inc
dec
test
mov
xor
mov
movsb
outsl
dec
cli
shll
xlat
adc
in
cli
push
imul
or
into
xchg
shl
and
dec
and
lods
movsb
inc
xchg
dec
sbb
cmc
loop
mov
fbld
leave
cmp
mov
cmp
cmp
stc
dec
out
scas
lea
mov
mov
push
daa
dec
mov
add
es
repz
lock
mov
push
jae
nop
add
cmpsb
addr16
out
mov
jo
lahf
je
mov
dec
inc
xchg
pop
cmp
out
xor
mov
lods
das
enter
xchg
dec
aaa
jp
dec
push
jo
out
push
push
push
je
and
and
inc
jns,pn
mov
add
mov
adc
jo
ret
cmp
mov
xlat
dec
cmp
add
movntps
test
andl
test
iret
rolb
jmp
xor
add
in
xchg
pop
test
repnz
lret
xor
pushf
leave
mulb
mov
test
rcll
mov
leave
ret
mov
cmc
es
sbb
mov
jecxz
dec
call
outsb
int3
cli
push
adc
rclb
out
and
or
cmpsb
ss
adc
popa
mov
jmp
inc
fld
mov
pminub
imul
mov
mov
addr16
imul
xchg
dec
es
dec
daa
cmp
add
jo
xor
iret
aas
into
lcall
add
jle
clc
xor
pushf
lret
inc
adc
fsubrs
ja
pop
fidivrs
jno
cmp
ds
adc
add
insl
mov
ds
fisubrl
loope
addr16
and
popa
xchg
jg
pop
data16
decl
ret
clc
jmp
push
imul
mov
xor
adc
adc
mov
dec
jg
push
repz
xchg
or
push
add
ficoml
xchg
cmp
pop
aaa
fbstp
adc
repz
pop
out
xor
add
aad
jge
ds
es
or
fcoml
cli
sbb
mov
in
lcall
push
mov
scas
mov
sarb
push
mov
xchg
out
mov
lret
dec
aad
js
repnz
mov
pop
lcall
sarl
lret
nop
or
cmp
mov
popa
add
dec
xchg
push
in
mov
das
aaa
test
fisubl
lods
pop
gs
out
loop
lock
sti
mov
or
mov
shl
inc
jmp
btc
sub
psubsb
pop
xchg
inc
ljmp
pop
insl
out
es
lret
sahf
mov
xchg
fcmovnb
jmp
out
popa
or
stos
push
cs
sbb
cli
jae
jmp
lock
xchg
pusha
mov
ja
cmp
pushl
ja
sub
pop
out
insl
adc
loope
gs
adc
dec
iret
lods
jg
arpl
cmp
jmp
out
jnp
adc
scas
add
pop
cli
add
lods
xchg
outsb
das
jno
loope
scas
push
mov
lret
push
into
cmpsb
mov
pop
push
stos
sarb
stc
sahf
inc
jp
xchg
fldenv
pop
and
out
push
enter
scas
stos
inc
je
orb
fisubs
jecxz
dec
jle
adc
add
dec
xor
push
jle
xor
xor
adc
push
jge
dec
aam
movsl
mov
xchg
mov
xchg
aas
lahf
loop
sub
mov
push
mov
test
inc
push
fs
dec
outsb
les
cmp
xor
iret
mov
das
mov
jns
sbb
outsl
ja
dec
stos
fistpl
cmp
jp
shll
xor
sub
cmp
sub
hlt
xchg
xchg
scas
push
das
pop
fmulp
in
dec
movsl
ret
xlat
mov
in
cmc
dec
push
jbe
sub
test
sub
pop
inc
adc
out
fldl
adc
stos
push
push
sub
sub
stos
add
mov
jne
sbb
pushf
lret
cmpsl
add
pop
xchg
xchg
push
push
bound
mov
movsl
push
sahf
pop
and
imul
sbb
cmc
bound
adc
std
sub
jbe
les
or
lds
lock
dec
clc
aas
cmp
jg
sbb
sbb
push
std
ds
aam
in
sbb
lods
mov
and
mov
inc
jg
push
lods
pop
push
iret
out
mov
jae
mov
mov
xchg
mov
push
adc
gs
cltd
sub
xchg
adc
sbb
repnz
and
div
mov
int
cmp
dec
push
xor
jb
aaa
sub
lods
dec
mov
loopne
int3
inc
cmpsl
aas
sub
sub
rorl
mov
aas
clc
mov
aas
idiv
stos
sub
loopne
xchg
add
push
sub
loop
sbb
hlt
in
push
add
mov
scas
arpl
lock
aas
mov
inc
push
pop
outsl
scas
in
addr16
pop
sbb
dec
and
jmp
xchg
out
adc
mov
jle
ja
dec
rcrl
jmp
pop
jecxz
adcl
je
ljmp
jo
and
or
inc
mov
pop
or
mov
fdivp
mov
push
push
mov
sbb
or
jl
pop
fbstp
xor
inc
cs
call
dec
jbe
fisubl
xor
push
cld
pop
jge
jge
stos
cmp
jle
sub
rol
jle
sub
cmpsl
shll
je
add
sbb
inc
aad
xchg
mov
mov
push
xor
mov
mov
inc
pop
arpl
adc
cmp
xchg
adc
add
pushw
cmpsl
gs
and
and
cmp
pop
cmp
addr16
or
ds
and
add
in
lahf
ret
mov
mov
ds
push
xchg
jg
sub
cwtl
loop
jge
test
jb
in
js
sub
mov
push
testb
insl
cld
pop
xor
mov
xchg
pop
sahf
scas
jmp
push
idiv
aaa
jb
shrb
movsb
stos
push
dec
jle
pop
aad
cwtl
and
inc
loopne
push
test
pusha
lods
addb
jb
fisubrs
bound
inc
mov
test
cmp
in
ja
test
clc
sub
aad
xor
nop
mov
dec
inc
fnstsw
add
int3
pop
lock
or
xchg
arpl
into
and
scas
nop
les
call
nop
out
cmpsb
dec
js
frstor
mov
test
sti
xor
mov
cld
jno
xchg
and
das
xchg
repnz
mov
movsb
push
mov
clc
jge
xchg
aas
dec
pop
es
dec
xlat
mov
jecxz
sub
shll
dec
mov
enter
push
shl
xor
xor
sub
push
ds
daa
mov
mov
shrb
add
pop
loop
cmp
iret
push
dec
mov
js
adc
scas
stos
pop
xor
js
lock
xchg
xchg
gs
jnp
push
add
jecxz
lret
repz
decb
sbb
dec
ss
push
xchg
and
dec
lea
mov
out
fwait
xlat
test
stos
xor
adc
je
dec
inc
jg
mov
arpl
fs
loop
shrb
lods
dec
es
xchg
neg
fs
outsl
mov
repz
addl
sub
out
imul
pop
sub
sbb
mov
loop
cmp
push
sub
cli
orl
pop
add
mov
ffree
cs
push
sbb
into
cmovae
add
fsqrt
push
dec
out
jle
leave
fs
movsl
xor
call
ret
push
sarl
je
movsb
sub
mov
repz
scas
out
or
inc
popf
adc
sahf
xor
leave
mov
push
scas
mov
xchg
mov
sbb
mov
or
push
dec
inc
push
inc
divl
add
and
fdivl
loop
pushf
imul
sti
or
sub
enter
pop
pop
ret
ret
and
mulb
call
push
jno
cmp
in
fwait
sbb
push
ss
mov
loope
pop
js
jnp
push
inc
arpl
inc
mov
cltd
and
jle
pusha
insl
sahf
ss
scas
push
mov
mov
fisttpll
add
xor
pop
dec
iret
push
imul
xchg
cmpl
into
mov
outsl
movsb
inc
inc
bound
shlb
or
jo
das
adc
inc
repz
adc
cmp
and
insl
inc
mov
adc
lods
arpl
inc
pop
jae
pushfw
cmpsb
jo
addr16
fwait
jmp
adc
loopne
mull
adc
mov
sbb
shl
sti
jns
loop
adc
iret
lods
push
repz
mov
mov
mov
pop
jecxz
mov
pop
daa
mov
or
pop
cmp
or
pop
mov
xor
sbb
mov
sbb
rorl
in
pusha
mov
pop
das
xchg
push
jne
inc
ljmp
add
fldt
pop
nop
rcrl
jno
js
xchg
mov
add
fs
mov
fwait
pop
inc
jp
int3
clc
jmp
push
arpl
xchg
lahf
test
sub
dec
ffree
nop
inc
cmpsl
or
pushf
xchg
hlt
sub
adc
xor
xor
cld
insl
xlat
rolb
rclb
hlt
xchg
lcall
sub
sbb
mov
popaw
and
decb
mov
stos
mov
jnp
sub
dec
or
sub
insb
dec
ficompl
adc
pop
ds
dec
lods
cmp
in
out
jae
lahf
nop
sahf
ret
push
or
into
adc
std
push
fdivl
call
add
add
imul
xchg
push
mov
psubd
int3
push
and
adc
mov
add
cmp
and
or
pop
pop
push
stos
stc
xchg
add
clc
popf
cmpsl
cmc
xchg
shl
dec
inc
hlt
or
not
mov
cmpsl
lret
mov
aas
into
insb
push
in
xchg
test
adc
add
and
mov
daa
pop
cmp
jae
popf
mov
cmp
loope
and
subl
xor
xchg
inc
fisttpll
jne
insb
xchg
xchg
bound
int
push
xor
inc
or
push
out
ret
outsb
add
jns
push
dec
inc
sub
pop
pop
js
in
and
mov
in
stc
sub
push
or
xchg
cwtl
int
inc
sbb
mov
pop
adc
aaa
in
stos
adc
jb
in
lds
xchg
repnz
and
xchg
dec
lock
mov
add
scas
xor
icebp
rorl
and
arpl
mov
cwtl
fstps
xchg
stos
daa
jmp
add
sub
gs
jno
pop
adc
lcall
aas
mov
ss
lret
and
inc
ss
ljmp
add
or
outsl
mov
adc
or
mov
mov
mov
inc
push
add
jb
pop
pop
stos
xlat
jmp
repnz
jmp
add
imul
push
pop
arpl
mov
ret
push
pop
shlb
out
sub
cmp
jo
mov
push
dec
pop
fisubrl
insl
mov
xor
sarl
push
addr16
roll
std
mov
div
jge
mov
inc
mov
stc
mov
std
mov
jno
shr
arpl
jg
lcall
cwtl
push
mov
push
cmp
jb
and
jnp
xor
faddl
mov
xchg
inc
adc
aas
mov
fnstenv
jns
pop
push
ret
push
mov
push
stos
int3
daa
mov
test
adc
lahf
in
xchg
cmpb
sub
test
aad
cmp
loope
mov
push
daa
daa
fidivrl
xor
push
or
xor
inc
clc
sti
xchg
jecxz
lcall
int
test
popf
imul
pushf
fs
cmp
adcl
sub
lahf
dec
mov
push
ljmp
testl
dec
and
cld
loopne
out
jno
jg
lods
cmp
xchg
je
and
mov
jne
or
sbb
js
into
mov
add
imul
addb
add
dec
mull
cltd
adc
mov
mov
dec
xor
add
dec
fdivr
add
cwtl
js
mov
add
jnp
add
cld
jns
xor
pop
fld
mov
push
jno
loop
test
xchg
ds
outsb
negb
sub
xchg
mov
sti
inc
mov
bound
mov
sbb
dec
mov
adc
inc
jp,pn
loopne
lcall
dec
xor
push
call
xor
and
test
mov
jnp
xchg
cli
mov
add
cld
out
imul
jbe
mov
jb
in
jl
or
xor
mov
ret
rcll
mov
sub
loopne
inc
jae
or
jl
lcall
sti
aas
jp
xchg
adc
fcmove
pop
cs
loop
jmp
xor
push
sub
sub
subb
sbb
adc
push
bound
dec
icebp
movsl
sar
inc
dec
sub
stc
mov
call
cwtl
dec
scas
out
loop
out
cmp
mov
adcb
mov
inc
inc
ret
push
test
je
adc
repnz
push
je
adc
jp
mov
inc
int3
mov
xchg
std
aaa
adc
lds
push
scas
push
shl
in
sub
sbb
mov
loope
mov
popa
xchg
in
or
setle
insb
les
lcall
mov
testl
jp
mov
jle
mov
dec
or
jo
out
data16
inc
adcb
sub
push
lock
mov
sub
rcll
inc
stos
scas
xor
loop
mov
jle
inc
push
andb
pop
dec
test
xor
aad
idiv
rcll
mov
and
into
cmpsb
rol
popf
or
shrl
negl
jb
rorl
mov
imul
jb
mov
mov
loope
jne
ljmp
adc
or
sahf
fcoml
std
dec
aas
shrb
jle
adc
aaa
mov
lea
cmp
and
mov
xor
cmp
in
or
or
icebp
icebp
jno
jmp
cmp
pop
jg
shll
add
call
aad
xchg
jmp
call
lds
dec
aam
dec
stc
xlat
or
add
or
xor
mov
xor
mov
clc
sbb
mov
and
push
xor
sbb
add
add
jg
sub
aam
push
sbb
pusha
enter
addb
je
xor
or
int
loope
insb
push
mov
jnp
test
leave
or
adc
mov
mov
push
jge
jmp
add
and
mov
lods
sar
aad
movsl
pop
jecxz
or
add
jne
mov
pusha
pop
ljmp
roll
pop
push
aad
lds
push
leave
xlat
pop
add
dec
fadds
sbb
cltd
cld
je
int3
inc
and
cld
das
js
arpl
pop
xor
aam
aad
imul
xchg
push
test
xor
je
xor
fscale
mov
pop
sub
and
sub
push
mov
cmp
and
add
xor
fdivrs
mov
jae
lods
shlb
je
push
fs
push
and
jg
movsb
add
or
push
sarb
lods
loope
sub
dec
enter
std
mov
cld
inc
hlt
xchg
push
dec
pop
clc
clc
andb
in
movsl
mov
jmp
and
int
lock
mov
inc
shrb
das
jl
dec
popf
jmp
pop
in
inc
xchg
in
push
test
aas
xor
mov
gs
xor
pop
adc
sub
sbb
xor
push
mov
fcomi
clc
in
leave
mov
and
loopne
sub
mov
push
fnsave
or
test
loope
sti
cltd
sub
popa
lds
adc
loopne
lds
or
adc
mov
mov
in
test
jae
add
or
hlt
mov
cmc
inc
mov
adc
or
dec
jge
push
and
sbb
dec
jg
clc
enter
iret
mov
inc
jns
inc
rorb
repnz
in
enter
add
add
imul
popf
mov
jns
lods
roll
adc
pop
pop
rcrl
pusha
pop
clc
lods
mov
popf
and
in
mov
sti
mov
and
adc
push
loopne
lods
mov
decl
mov
loope
hlt
jns
mov
inc
jmp
int
jnp
enter
cmp
shll
movsl
mov
mov
add
aad
push
lret
int
mov
leave
fidivrl
jne
cltd
test
lods
movsb
insb
outsl
test
sar
inc
or
stc
lds
and
inc
outsl
jmp
mov
stc
lea
popa
dec
hlt
or
dec
mov
jae
sbb
pushf
add
add
cmc
or
rorl
clc
lock
insb
mov
push
dec
in
jne
test
mov
scas
jge
cmc
pop
xor
nop
mov
add
lods
leave
andl
cltd
mov
int
lods
push
cld
push
mov
and
mov
pop
mov
jno
fldcw
inc
push
scas
fiaddl
mov
daa
andb
push
or
xchg
and
xor
pusha
cmpb
clc
sbb
sub
mov
jbe
arpl
inc
mov
fstl
ljmp
cli
dec
imul
jmp
jns
and
or
push
and
es
outsl
sub
insl
dec
mov
orb
xchg
fwait
xchg
xchg
test
sub
xor
ror
lods
jg
cmp
loop
lcall
into
mov
pushf
and
push
lock
xchg
nop
movsb
lock
dec
adc
push
sub
popa
sbb
mov
arpl
mov
jg
pop
jmp
out
sub
into
insb
lahf
ds
push
and
enterw
test
cmp
cmpsb
fcmove
xchg
loopne
outsb
cltd
fwait
sarb
or
xchg
int3
cmpsl
insb
xor
stos
jg
je
mov
lret
cld
bound
push
mov
je
lret
mov
mov
test
mov
popf
pop
jo
shrl
jl
filds
xor
fs
adc
push
lea
xchg
ret
inc
push
cmpsl
mov
fimuls
test
aaa
xor
imul
add
int3
sub
rcrb
xor
test
test
pop
pop
ds
mov
push
enter
xor
pusha
push
fsub
lods
push
out
cld
ja
mov
arpl
int
imul
rolb
and
add
jne
into
test
mov
scas
sub
cmc
imul
sbb
popa
aam
outsl
and
or
add
sbb
rorb
jecxz
and
dec
out
inc
movsl
add
out
xor
lret
iret
inc
inc
arpl
shlb
pop
or
movsb
in
out
sti
stc
data16
fldt
pop
xchg
push
addr16
inc
mov
addr16
inc
aad
jo
push
mov
adc
push
xor
js
in
xchg
dec
push
push
in
xchg
mov
fidivl
outsl
imulb
cwtl
dec
inc
movsb
and
cmp
jnp
ds
ret
sahf
or
adc
push
xchg
xlat
mov
push
idivb
xor
mov
jp
in
sarb
pushf
mov
dec
pop
add
pop
sbb
xchg
push
add
pop
out
mov
sarl
sbb
enter
sub
shlb
subb
adc
adc
mov
les
pop
fcoms
movsl
out
in
loopne
push
xor
sbb
out
iret
ficoml
jmp
out
es
dec
es
insl
jo
dec
mov
mov
int
aas
pop
pop
js
jl
jnp
dec
cmp
fcmovne
movsl
icebp
sbb
stos
je,pt
das
mov
aas
cmpsb
inc
mov
and
lds
test
data16
stos
icebp
in
scas
cwtl
mov
sti
jae
fsubs
jae
mov
push
mov
out
jnp
ds
sbb
ret
xchg
mov
xchg
jge
lods
sub
insb
jo
push
enter
les
movsb
les
or
mov
sbb
nop
fisubs
addb
pop
add
sbb
test
les
aaa
dec
scas
xor
jo
movsb
fsts
pop
loop
int3
pop
imul
fxch
xchg
out
push
inc
lret
mov
mov
jl
mov
mov
pop
or
in
lea
outsb
mov
hlt
push
test
dec
sti
mov
setns
sarb
sub
xor
cmovb
mov
ret
repz
in
jns
popf
call
in
inc
or
cmpsl
psubq
dec
dec
cmpsb
addb
mov
fucom
add
add
add
add
add
add
int
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
