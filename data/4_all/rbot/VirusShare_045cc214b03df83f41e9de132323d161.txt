or
add
add
add
add
or
add
add
xchg
rorl
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
adc
or
and
or
xor
or
inc
rorl
add
add
or
add
add
je
add
cld
rorb
add
add
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
sbb
add
adc
add
add
add
sbb
add
xor
add
lret
js
jge
stos
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
add
add
or
add
mov
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
cmc
jg
call
sub
push
fs
shr
mov
cmpsl
test
repnz
mov
out
add
ds
add
decb
pop
xor
insl
xchg
in
xchg
fnstcw
cmp
mov
rcrb
jp
mov
mov
add
xlat
insb
in
sub
loope
repnz
aam
mov
imul
dec
mov
popa
cld
sahf
or
jmp
or
aad
and
aam
int
mov
aam
add
and
aas
push
jae
aas
xchg
add
sub
sub
ret
fnstenv
dec
sub
fimuls
mov
xchg
cmc
sub
add
jmp
insl
jne
xor
xor
aam
push
xorb
aam
outsb
dec
iret
mov
lret
out
or
int3
pop
push
imul
fstpt
loopne
imul
dec
xor
adc
sub
mov
ret
mov
inc
lods
dec
out
repz
mov
call
mov
lea
ret
jns
xchg
and
pop
adc
add
or
sub
xor
add
data16
fisttpll
lds
cmpsb
insb
lahf
fdivr
in
cmp
imull
insb
stos
js
push
mov
jns
push
fcompl
adc
mov
jo
lea
jecxz
leave
sub
sub
pop
cmp
mov
enter
aad
xor
adc
in
xchg
in
mov
ret
jmp
imul
incl
fdivr
les
or
ret
jg
gs
lea
mov
hlt
push
hlt
rcll
sub
pop
out
inc
xchg
sub
push
lret
in
daa
jl
mov
xchg
imul
jns
mov
lret
dec
dec
mov
out
sbb
inc
cmpl
jb
enter
fs
push
jl
mov
or
stos
int
push
pop
mov
cli
mov
popf
std
bound
scas
mov
into
test
subb
mov
mov
push
out
je
lsl
sbb
sub
je
cmp
sahf
add
sbb
xchg
rorb
ss
jo
fisubrl
xchg
inc
repz
add
pusha
sub
loope
cwtl
movsl
aad
pusha
or
gs
inc
fdivl
lret
fstpl
test
jno
jp
mov
sbbl
scas
andb
in
sbb
repz
xchg
xor
scas
popf
add
jmp
sarl
jp
push
pop
in
inc
scas
dec
iret
pushf
pusha
roll
fwait
mov
jns
int3
push
and
or
mov
inc
fwait
cld
stc
add
pop
pushf
fimull
pop
scas
outsb
xor
dec
in
xor
dec
leave
scas
add
in
je
push
stos
sub
aaa
lret
adc
jb
stos
lcall
fs
out
fbld
fistl
repz
sub
out
add
cmp
cs
and
std
fsubl
cmp
jge
pushf
fisubl
sbb
mov
test
into
sbb
sbb
cmpl
cmpsl
jnp
or
and
es
sub
icebp
mov
out
out
push
jno
lods
xchg
cwtl
in
pop
fldenv
rcll
dec
repz
test
repnz
inc
fs
mov
sub
jge
jecxz
addb
ja
xchg
cmc
aaa
adc
lahf
movsb
jle
pop
xor
jnp
orl
rorb
mov
insb
fnsave
in
scas
xor
ja
mov
jge
call
fucomp
inc
xor
daa
and
in
stc
insb
and
mov
add
lds
or
sub
adc
das
ja
mov
test
cmp
std
adc
push
das
adc
inc
mov
jb
xchg
lcall
mov
or
xor
and
cmp
insl
movsb
cli
pushf
pop
jmp
movsl
fcmove
adc
data16
mov
jne
lcall
and
or
and
and
mov
xchg
inc
insl
and
mov
xor
mov
clc
pop
fisttpll
push
fldt
xorb
xor
mov
add
sub
test
out
add
enter
data16
push
cltd
lds
mov
adc
push
lahf
xchg
xor
sub
cmp
xor
pop
sub
jbe
xor
imul
dec
arpl
adc
cmpl
sub
stos
push
lret
adc
mov
mov
sbb
sahf
popf
xchg
sub
mov
xchg
fidivrl
movsb
call
lcall
xchg
imulb
stos
or
mov
pop
inc
test
push
scas
push
je
push
xor
testb
push
push
mov
sub
das
ret
loop
data16
ret
arpl
fmuls
mov
imul
sbb
xor
push
stos
psllw
pop
js
ds
stos
or
lods
dec
mul
dec
dec
outsl
in
cmpsl
mov
dec
mov
leave
hlt
lock
lods
clc
int3
xchg
fwait
cvtps2pd
inc
in
mov
sub
leave
cld
fcoml
sub
cwtl
clc
data16
cltd
cmp
fildl
loopne
mov
inc
push
ffreep
lcall
xlat
andb
pop
ret
movsl
bound
movsl
fimull
or
in
setle
dec
cmc
and
inc
stos
add
pop
mov
pop
jb
pusha
mov
js
test
xchg
jno
dec
ljmp
scas
call
mov
dec
movsl
sbb
adcb
push
aam
cmp
pop
nop
movsb
xor
push
ljmp
ds
cmp
mov
mov
sub
test
aam
sub
xchg
ret
jmp
mov
jg
sub
je
arpl
repz
or
aas
jecxz
lods
inc
sarl
push
fisubrs
mov
fiadds
cmp
test
jno
mov
add
mov
scas
or
cmpl
in
mov
into
mov
mov
jno
loop
add
cmp
pop
or
mov
mov
lods
icebp
and
push
sub
test
pop
mov
xor
jne
adc
mov
test
jge
sub
orb
pop
mov
sbb
dec
insl
push
mov
ret
scas
rorb
cli
xor
sub
addr16
pop
push
cmp
es
push
adcl
nop
push
pushf
bound
pop
adc
inc
loope
cmp
sbb
sub
js
sbb
fcomp
inc
jae
jo
sub
in
pop
ja
mov
or
aam
mov
aas
sarl
pop
jmp
ror
cmp
in
pop
ljmp
dec
pusha
and
sbb
ret
inc
dec
mov
data16
pop
cld
mov
inc
xor
lock
and
sub
add
cmp
jl
push
jge
int3
out
sub
cmpsb
in
cmp
xor
cltd
mov
movsl
in
sbb
sarb
sbb
pushf
pop
jb
xchg
rolb
inc
mov
or
cmc
cmp
pop
pop
repnz
or
ljmp
notb
lahf
inc
mov
fisubrs
in
mov
mov
push
lods
js
sbb
xchg
push
xchg
stc
aad
adc
xchg
mov
and
pop
into
inc
or
insb
or
jb
lods
loope
xchg
jo
push
aas
lds
mov
add
dec
cld
roll
add
and
int3
push
or
xor
mov
sbb
lcall
repz
jmp
movsb
dec
js
pop
xchg
and
fadd
pop
call
ljmp
pop
mov
into
adc
in
ret
push
mov
adc
fcom
lret
dec
insl
and
or
fstl
xchg
add
and
loope
int
push
cmp
push
mov
push
push
aas
fs
and
sub
into
shrb
shlb
test
ror
dec
stc
jmp
or
push
in
xor
dec
xchg
enter
cmp
pusha
add
or
movsl
push
add
shl
push
in
imul
sbbb
cltd
or
fcmove
push
pop
xor
push
inc
xor
xchg
loopne
xchg
mov
mull
mov
cltd
sbb
dec
inc
mov
lcall
scas
push
std
pop
sbb
sbb
jle
movsl
loope
jnp
push
xchg
repnz
movsl
xor
push
jno
xchg
sti
pop
scas
mov
mov
cwtl
sahf
lea
xorb
rcrl
fmuls
fnstenv
pop
inc
and
cwtl
mov
dec
pop
data16
inc
int
lods
imulb
repnz
ds
rcrl
pop
int
inc
ret
addr16
pop
leave
pop
in
and
popa
popa
mov
popf
dec
cmpsb
push
dec
adc
sbb
sahf
push
les
mov
add
pop
xor
arpl
fidivrl
ret
clc
cmp
mov
mov
jmp
mov
loop
dec
loopne
sti
lea
dec
cmp
roll
aad
sbb
xor
ljmp
jge
fisubrl
fs
out
xchg
clc
add
cmc
mov
pop
cmc
popa
sbb
pop
push
testb
sbb
push
mov
push
jg
ds
in
fsubr
fstpt
xchg
fwait
xchg
mov
mov
mov
gs
mov
mov
push
and
add
test
pop
xchg
daa
mov
lret
test
and
dec
inc
mov
jbe
das
jg
std
and
pop
xchg
jge
jl
sub
leave
fs
out
dec
jg
jb
cmp
push
jo
mov
add
sub
inc
in
clc
js
mov
insl
pushf
pop
and
xor
sbb
sub
mov
xchg
cld
nop
and
cld
mov
inc
jmp
dec
xlat
and
add
scas
outsl
fldl2e
adc
fcmovne
or
pop
aas
mov
jp
pusha
movsb
push
out
mov
add
arpl
test
shll
and
pop
xorl
jecxz
enter
adc
xchg
mov
xchg
pop
aam
rol
dec
scas
test
subb
cmpl
ljmp
cmp
insb
out
and
popa
pop
fisttpll
pushf
pushf
mov
sub
fmuls
rorl
mov
insb
dec
popa
dec
inc
dec
and
or
mov
cmp
mov
fldcw
cmc
jae
loop
shr
cwtl
cmpsl
adc
push
sub
stos
hlt
stos
js
dec
pop
fildl
pop
inc
inc
jae
loope
jns
fsub
scas
push
fwait
cld
imul
jbe
push
mov
inc
pop
hlt
fdivrl
mov
and
add
nop
lret
test
mov
mov
loop
and
push
jl
push
cmpsl
jo
cmpsl
cmpsb
inc
dec
mov
test
out
dec
daa
adc
mov
pop
adc
out
in
mov
mov
repnz
push
pop
xor
push
mov
inc
inc
xchg
lret
and
shl
mov
inc
dec
xchg
push
fcmovbe
aaa
stos
loope
loop
divb
mov
inc
add
mov
jne
fidivrl
mov
adc
je
lret
jmp
aad
je
call
mov
sub
pop
out
pop
cmp
fwait
movsb
lret
lcall
sbb
mov
sbb
lret
mov
jle
int
jl
cmp
inc
pop
lcall
dec
mov
imulb
and
shlb
repz
cltd
mov
and
clc
mov
push
aam
jb
sbb
xchg
outsl
stos
xor
aaa
mov
out
push
das
cmp
mov
and
data16
adc
scas
pop
roll
pop
pusha
loope
pop
mov
sti
inc
sub
add
out
stos
cmpsl
leave
int
jno
bound
add
inc
dec
sbb
sub
cmp
popf
mov
push
lea
adc
rclb
push
test
jmp
lea
repz
test
inc
adc
push
sub
mov
pop
hlt
js
xor
xor
int
sbb
sahf
pop
push
aad
inc
lret
and
mov
je
xor
daa
inc
clc
lea
popf
arpl
out
shll
adc
lahf
scas
xor
in
rcrl
test
xchg
or
movsb
jbe
pushf
pop
fbstp
and
dec
pop
int3
sub
and
sbb
loop
cmp
icebp
popa
int
cltd
sti
pop
xchg
mov
cmp
sub
mov
mov
pop
stc
sub
clc
xchg
test
aas
leave
mov
xorb
or
xor
mov
pop
stos
dec
lock
fsubrl
mov
rorb
push
sbb
xor
and
cmp
fcompl
inc
add
cmp
loop
out
xchg
iret
or
and
fildll
scas
imul
daa
icebp
lods
insl
icebp
push
subb
rolb
jns
dec
test
clc
in
shlb
lahf
ss
xor
push
lahf
sub
push
dec
add
out
jbe
into
sub
mov
sub
dec
stos
cli
rcrl
cli
sbb
mov
xor
sub
sbbl
cmc
inc
inc
sti
or
fiaddl
jbe
or
add
jecxz
into
and
enter
gs
jg
es
sbb
cmp
cwtl
mov
jg
in
std
bound
out
inc
mov
dec
jae
pop
fstpt
into
mov
sub
aaa
repz
dec
inc
ret
out
xchg
cs
mov
push
stos
bnd
in
imul
pop
push
dec
push
or
subb
xchg
adcl
jnp
jge
mov
cmpsl
fstps
xor
push
nop
jae
inc
push
xor
je
adc
mov
mov
pop
loopne
lock
rcr
out
add
push
xchg
jno
cmp
sbb
insl
xchg
movsl
mov
adc
pop
sub
movsl
in
mov
cmp
imull
or
mov
or
jnp
ja
je
rcrb
clc
xor
push
cmpsl
shl
ljmp
nop
scas
int3
pop
lcall
mov
mov
sahf
mov
mov
lahf
lahf
or
or
scas
dec
and
cltd
mov
cmp
clc
mov
test
inc
mov
mov
test
lret
inc
pop
dec
adc
mov
adc
in
adc
jno
add
fnop
sub
push
mov
cmp
dec
adc
mov
add
cmp
cmpsb
jne
xchg
lret
mov
mov
clc
push
or
leave
xor
push
xchg
mov
popa
out
bound
add
pop
scas
pop
not
mov
test
inc
loop
call
dec
jbe
jl
push
ret
dec
sbb
jle
outsl
aas
jns
call
fstl
pop
or
test
sub
push
pop
leave
inc
out
sahf
dec
cmpsl
add
pop
stos
in
push
icebp
pop
mov
out
pushf
inc
mov
cwtl
dec
test
jo
add
inc
jno
fiaddl
movb
mov
xor
xor
mul
aam
adcb
repz
sub
and
adc
fistpl
fdiv
sahf
adc
bound
mov
in
mov
out
xor
out
leave
popa
adc
jnp
pop
or
scas
pushw
mov
ret
pop
insl
sbb
jne
mov
jnp
mov
cs
negl
or
in
jl
fndisi(8087
mov
jns
leave
hlt
bound
int3
sub
nop
push
std
or
mov
push
jno
daa
stos
loope
cmp
jno
add
and
negl
and
jno
cmp
mov
xchg
ficoml
lcall
push
bound
xchg
mov
xor
cltd
xchg
adc
pop
das
iret
sub
or
mov
add
push
or
mov
aas
mov
arpl
or
inc
cmp
scas
mov
mov
sbb
addb
and
or
adc
xchg
add
mov
or
add
add
hlt
or
mov
ret
jne
add
loop
jnp
pushl
mov
push
pop
or
lock
fcoms
push
repz
test
lret
shr
scas
push
jae
lcall
shlb
sbb
and
aam
dec
test
popa
mov
hlt
cmpsb
xchg
or
subl
pop
xor
lds
stc
movsl
aas
mov
inc
mov
jne
mov
mov
pusha
dec
inc
pop
and
daa
xorb
pop
rcl
mov
lret
mov
pop
test
jne
outsb
mov
shll
push
lods
fidivs
jns
je
mov
incl
pop
xor
sub
mov
pop
add
outsb
in
jo
pop
push
out
sbb
jns
dec
call
cmpl
fsubl
lcall
stos
in
mov
addr16
mov
and
push
and
mov
mov
mov
ljmp
test
testb
stos
popa
hlt
push
mov
jp
jnp
nop
cwtl
sub
sub
dec
fists
cld
psrlw
arpl
and
inc
loop
std
xor
mov
out
push
sub
jnp
insl
push
ret
mov
pop
mov
jl
add
dec
sti
incl
das
rol
ret
push
loope
cmp
lods
jl
sti
insl
movsb
sbb
les
movsl
mov
ss
lret
cwtl
pushf
xor
jg
jno
sub
lock
xor
lock
jmp
inc
xchg
push
pop
and
in
cmp
shrb
pop
add
lods
mov
out
pop
jecxz
xor
out
push
pop
mov
rol
mov
scas
xlat
pop
rorl
in
mov
xor
leave
inc
xor
cmp
and
cmp
jnp
push
mov
lea
jb
adc
iret
mov
test
insb
or
shlb
imul
pop
dec
jno
fwait
xor
dec
je
cmp
lahf
into
pop
add
dec
aaa
pop
mov
lret
clc
mov
xchg
mov
lcall
sub
les
data16
dec
push
push
adc
inc
nop
cltd
inc
adc
cmc
push
mov
repz
xor
inc
inc
and
lret
dec
repnz
stc
shl
jb
jmp
sbb
out
es
lods
add
push
lret
pop
xor
jmp
push
mov
dec
or
sbb
sub
rol
xchg
xor
lods
push
push
aam
push
jne
jae
je
call
shll
frstor
and
xlat
dec
addr16
iret
xor
subb
imul
test
cmp
testb
xchg
jge
xchg
leave
mov
cs
in
mov
icebp
fmull
push
xchg
cwtl
fwait
dec
cmp
mov
pop
inc
repz
xor
and
add
popa
mov
outsl
pop
push
mov
xor
sarb
dec
popf
push
dec
sub
icebp
pop
or
imul
cmp
push
xor
in
int
xchg
sbb
lcall
lcall
loope
cld
movsb
sbb
das
aam
mull
pop
add
mov
sbb
ja
dec
dec
test
mov
mov
mov
dec
and
out
imull
pop
and
int3
call
and
mov
scas
adc
iret
scas
testb
cmp
dec
shrl
arpl
mov
dec
fnstsw
mov
int
jb
pop
stos
pushf
add
repnz
aam
ljmp
mov
mov
fildll
or
gs
ds
xchg
or
aam
test
push
cld
adc
and
lods
adc
xchg
dec
daa
mov
pop
mov
add
mov
outsl
aad
adc
scas
fsubrl
ja
push
pop
stmxcsr
adcl
loop
mov
add
sahf
sub
insl
sub
and
loopne
xchg
jg
sub
xchg
sbb
scas
mov
stos
jmp
adc
shrb
cmp
mul
push
xchg
push
add
add
leave
jbe
repz
sbb
les
mov
arpl
nop
dec
aas
jbe
mov
repnz
dec
jnp
cmp
lcall
sbb
fcomps
dec
mov
jns
dec
stos
test
push
jl
pop
cmp
mov
cmpsl
cs
out
push
mov
push
bound
in
sbb
out
mov
mov
test
cltd
or
cmp
and
addb
jbe
sub
lea
fisttpl
xlat
push
lods
outsb
cmp
fists
idiv
sbb
inc
ss
test
or
movb
push
ret
mov
sbb
xor
cmp
mov
nop
mov
movsb
mov
mov
cmp
add
prefetch
or
or
adc
imul
push
jmp
add
lcall
xor
das
xchg
lahf
inc
cmpsb
mov
hlt
ljmp
rcll
and
shrd
loope
into
lock
enter
aad
pop
jb
cmp
xorl
enter
in
and
push
nop
and
push
pop
add
in
mov
out
add
imul
hlt
sbb
or
aaa
jb
out
xchg
xchg
lahf
pop
dec
and
mov
inc
pop
gs
sub
mov
hlt
repz
and
push
cwtl
sbb
aaa
ds
pop
cltd
lods
and
dec
int
scas
mov
sub
jg
outsb
jle
xchg
pop
inc
mov
in
gs
out
or
lock
stos
jo
rcr
pop
add
movl
cmp
dec
inc
std
repz
mov
pop
fsubs
add
mov
mov
add
pop
or
scas
mov
sahf
and
pop
mov
mov
cs
xchg
or
inc
cmp
imul
dec
pop
jl
add
dec
xchg
pop
mov
les
xchg
std
jge
jb
push
mov
cld
mov
jg
adc
imul
pop
add
push
loop
pop
test
jle
repnz
sub
stc
dec
fs
sub
xchg
in
hlt
push
cltd
pushf
mov
mov
xor
call
bound
add
loop
gs
mov
out
xchg
bnd
add
jns
lret
push
xlat
mov
pushf
test
ljmp
push
call
out
stos
andl
pop
cli
dec
shl
test
push
and
rcll
enter
jo
shrl
pop
push
jne
test
test
and
std
stos
repz
scas
mov
cltd
sbb
jns
fldcw
pusha
pop
mov
adc
insb
xor
std
scas
xorb
je
sbb
dec
std
inc
pop
pushf
lds
in
dec
xorl
aam
lods
xlat
sbbb
jae
fidivl
xorl
jb
push
stc
push
lret
lcall
idivl
loop
pop
stos
xchg
push
push
rorb
cmp
clc
add
sar
add
mov
pop
cltd
push
mov
push
test
mov
mov
nop
std
jge
pushf
mov
stc
add
std
js
fld
hlt
mov
sti
rcll
aaa
mov
xchg
push
sahf
jg
add
pusha
jae
adc
mov
arpl
push
or
cmp
decl
shlb
or
or
in
jb
mov
divb
lcall
and
cwtl
jecxz
jmp
adc
jle
fcompl
into
cmp
fs
push
in
popa
mov
mov
out
adc
fdivl
dec
ljmp
enter
jne
or
mov
cmp
adc
aam
and
jecxz
push
in
jno
das
addr16
push
les
ret
mov
inc
cld
mov
das
rcrl
je
or
xor
and
push
jb
mov
fcmovb
in
jae
xchg
aaa
sbb
dec
dec
cmp
rolb
out
adc
out
inc
mov
lds
imul
fsubrl
outsb
xchg
cmp
fsubl
sbb
jae
ret
nop
data16
adc
xor
ficoml
aad
mov
aaa
xchg
cmpl
fsubrl
add
aaa
pop
rorb
mov
orl
dec
decl
push
pop
ss
xchg
mov
pop
add
repnz
mov
into
ljmp
sbb
jecxz
add
and
add
sub
xor
out
mov
mov
xor
negb
push
fsubrl
xchg
addr16
cs
jle
push
mov
dec
test
cld
inc
test
mov
andb
cmp
lods
push
cmp
cmp
inc
jno
inc
push
cs
pop
sahf
jae
and
js
push
mov
je
push
inc
in
fiadds
mov
and
or
js
xlat
sti
mov
jl
mov
mov
add
push
ljmp
int3
mov
ficomps
popf
add
outsb
ljmp
fnstcw
mov
mov
stc
lcall
add
xor
mov
enter
inc
mov
mov
lret
sbb
cld
push
mov
nop
mov
inc
fldl
push
and
mov
push
in
out
xchg
mul
lret
push
call
addb
cmp
cli
xor
jmp
mov
xlat
sbb
int
mov
push
or
lods
pop
adc
jecxz
pushf
cmpsb
stc
iret
mov
mulb
pop
cmp
pop
daa
cmp
scas
insl
divb
mov
push
faddl
and
sbb
sub
sbb
or
pusha
mov
frstor
add
mov
sbb
ja
out
sbb
and
fwait
and
sub
outsb
das
call
push
push
sar
lahf
push
mov
adc
sbbl
insl
mov
rcll
xchg
inc
in
cmpsb
lds
cmp
adc
add
jno
bound
inc
mov
mov
inc
mov
adc
xor
insl
bound
push
sbb
sub
cmp
push
add
bound
ss
repnz
pop
pop
int3
jne
pusha
sub
sbb
push
xor
jbe
inc
mov
cmp
aam
add
inc
cmpsl
inc
repnz
mov
jo
mov
jp
filds
mov
push
ds
jecxz
sbb
and
dec
jp
pop
test
adc
stos
popf
jp
xchg
int3
push
imul
or
cmp
inc
fimuls
add
repz
hlt
inc
and
adc
or
sbb
es
fisubrs
enter
dec
push
adc
mov
jns
scas
js
xchg
cs
adc
cmp
mov
popl
je
sub
or
out
loope
sbb
shrl
jg
dec
and
lds
cld
mov
in
fmul
xor
js
or
inc
push
pop
orl
mov
xchg
test
inc
fisubrl
jno
push
or
jl
pop
sbb
push
nop
xor
into
mov
add
cmp
and
ret
stos
xchg
mov
pop
xor
daa
sti
popa
cmp
xor
pop
mov
nop
jmp
pop
mov
xchg
push
fmull
mov
outsb
out
push
call
push
or
int3
in
pop
jae
out
dec
mov
and
inc
fildl
jae
cmp
mov
xor
inc
xchg
mov
or
mov
push
aas
add
ret
or
popa
rclb
lret
pushf
into
jb
hlt
inc
xchg
push
mov
push
stos
and
lea
test
iret
mov
popf
lods
jmp
dec
std
push
arpl
stos
dec
jecxz
in
fsts
or
pop
aam
out
loopne
test
loopne
cli
dec
or
sub
push
fcmovnbe
decl
and
gs
ret
pusha
outsb
ret
mov
int3
mov
push
insb
push
sarl
lcall
sub
leave
fwait
jle
push
jecxz
testl
jb
inc
mov
jg
xchg
inc
adc
cmp
imul
loope
inc
lea
je
gs
adc
cld
sub
das
rcr
add
nop
pop
jne
jo
cmc
into
inc
addl
imul
xchg
cltd
testb
loop
fs
add
jae
dec
ja
loope
ret
leave
push
sbb
mov
sbb
and
and
movsl
arpl
rolb
aaa
maxps
xchg
daa
in
loopne
mov
add
sbb
pop
dec
mov
fs
mov
dec
inc
cmp
lods
push
xor
fisttps
sbb
iret
vcvttps2dq
fxam
cmc
xor
fxch
aaa
jmp
in
adc
pop
lods
inc
fidivrs
pop
or
imul
jno
ficomps
pop
pop
xchg
mov
andl
adc
jmp
mov
dec
xchg
sub
mov
mov
cmc
inc
or
push
inc
mov
mov
out
xor
nop
jg
push
icebp
cmp
sub
mov
int3
and
mov
mov
dec
jle
mov
jo
jns
loope
adc
stos
arpl
inc
xchg
mov
jl
push
dec
adc
mov
lret
mov
insl
daa
pop
inc
fildll
xor
cs
and
and
cmp
idivl
xor
push
jo
outsl
add
pop
out
inc
addr16
out
and
adc
fwait
daa
stc
cmpsb
xchg
loopne
dec
mov
jle
into
iret
mov
mov
sbb
jno
add
lret
mov
add
daa
dec
lahf
fucomi
push
loopne
clc
xlat
test
jnp
fwait
loopne
xor
fsubrl
lods
fs
das
iret
cwtl
jmp
cmp
mov
call
test
dec
pop
push
test
sub
int
cwtl
pop
pop
jo
les
xchg
adc
xor
insl
push
pop
pushf
jg
jmp
cmpsl
sub
inc
inc
rolb
in
into
in
jne
das
sarb
pushf
dec
scas
icebp
das
push
insl
ficompl
and
cmp
jo
stc
cmp
sbb
xor
fs
xadd
sub
mov
sub
mov
or
push
adc
es
ja
adc
and
stos
jp
adc
aad
or
or
xor
dec
mov
xor
xchg
pop
push
rcrb
xchg
push
adc
gs
mov
pop
test
inc
and
dec
sarb
test
cmp
cmpsl
pop
popa
notl
push
fcomp
dec
add
jmp
movsb
push
cmp
mov
sbb
add
aad
ret
sub
push
addr16
js
adc
test
sub
out
or
mov
push
loope
fstps
das
mov
mov
sub
movsb
xor
sub
and
sti
mov
sbb
icebp
incl
cltd
mov
jnp
jecxz
loope
fsubrs
xor
stos
dec
pusha
or
xor
and
push
mov
call
cmpsl
adc
leave
push
xchg
xchg
rclb
and
sub
lret
mov
sahf
data16
jno
jae
lods
sub
pop
push
test
mov
ret
lods
xchg
pusha
pop
das
cmpsl
push
test
jecxz
mov
fcmovbe
decl
js
pop
xchg
mov
gs
into
scas
daa
xor
mov
loop
xchg
jge
mov
jg
lahf
or
fisttps
dec
jmp
jns
je
idivl
subb
in
je
sbb
sbb
aas
out
inc
es
jp
cmp
mov
sub
roll
rolb
outsl
icebp
pop
push
fiadds
js
cmp
and
fdivrl
adc
icebp
fcomps
push
xor
addr16
repnz
mov
xchg
xor
fisubs
ret
xor
pop
aad
push
push
and
mov
dec
push
imul
cli
pop
add
jge
movq
and
and
ds
hlt
xlat
lahf
jl
cmc
sbb
insb
inc
mov
arpl
sahf
sar
test
aaa
pop
test
mov
addr16
xorb
xchg
add
int
push
mov
xchg
mov
stc
popf
sub
cmpsl
dec
fs
mov
mov
mov
add
or
jne
test
stos
data16
jge
jecxz
cmp
xlat
rcrb
es
add
or
or
push
sub
mov
sbb
mov
gs
adc
loop
ljmp
mov
mov
adc
adc
aam
jg
lret
jg
adc
in
inc
fiaddl
push
sbb
sub
into
cld
out
outsl
mov
movsl
jge
imul
shrb
xchg
aad
scas
jp
or
mov
lahf
scas
inc
scas
sbb
cmc
xchg
addr16
cmc
sub
ljmp
mov
mov
das
fs
mov
push
xchg
xchg
icebp
mov
or
rolb
popa
sub
pusha
nop
sbb
mov
sbb
xchg
jl
inc
shlb
lods
and
dec
sti
inc
leave
bound
mov
je,pt
dec
loopne
dec
adc
imul
fsubrl
xchg
testl
cmc
lret
scas
pop
xchg
fstpt
cmp
or
call
xor
inc
push
stos
cld
loopne
loop
test
xor
sbb
and
testl
mov
clc
and
jmp
sahf
test
sti
dec
mov
lahf
ret
add
jne
mov
stos
repnz
xlat
jne
add
in
dec
scas
push
xchg
sub
push
out
idivb
pop
dec
inc
pop
pop
das
fdiv
movsb
fstpt
lss
ss
cmpsb
mov
jle
jl
loop
xlat
aam
ljmp
inc
je
sti
pop
lcall
pop
or
shrl
add
in
cmp
lahf
sub
call
mov
lret
leave
int3
faddl
iret
ret
roll
pop
cld
pop
call
dec
aaa
ljmp
jmp
cmp
lea
add
or
fwait
call
dec
js
add
cmc
jbe
pop
lcall
inc
sbb
pop
mov
cmpsl
jge
mov
pusha
jge
test
addr16
ret
jecxz
pop
push
xor
sarb
fcomps
leave
push
fmuls
scas
mov
jo
test
xor
sahf
fiadds
rcl
inc
test
push
cs
stos
mov
mov
jg
pop
jno
sbb
pop
inc
scas
push
ret
push
xor
and
mov
mov
and
jae
sbb
lds
insl
adcl
jmp
xor
sahf
push
xchg
shll
popf
xchg
xchg
nop
loopne
pushf
xchg
in
in
out
aam
arpl
pop
cmpsl
and
je
aam
rol
adc
sbb
cs
push
jb
arpl
ss
or
test
push
pop
mov
cwtl
mov
mov
lret
adc
mov
pop
xchg
out
push
leave
add
xchg
xor
sub
jl
adc
xchg
jmp
aaa
frstor
cs
and
das
xor
aaa
ljmp
fs
push
sahf
push
bound
maxps
inc
add
adc
insb
mov
cmpps
rclb
xor
sub
popl
xor
cmp
dec
sub
shll
fld
mov
xchg
mov
mov
insb
or
add
lret
mov
jmp
fldenv
mov
stc
cmpl
popa
int
adc
sub
scas
adc
test
xchg
dec
add
loopne
push
push
movsl
lret
sub
stos
orb
xchg
cmpb
mov
xchg
call
test
adc
mov
cmpl
les
scas
and
ret
out
jg
sbb
insb
mov
cltd
add
xor
push
fcmovu
and
arpl
sbb
and
pop
jmp
mov
pop
je
movsb
sbb
dec
jge
adc
daa
sub
in
loope
mov
mov
das
lret
aas
jnp
xchg
jmp
outsb
arpl
and
dec
fcmovnbe
mov
out
lods
mov
insb
dec
sub
or
scas
xchg
fst
jns
fsts
xchg
loopne
sbb
and
incl
cwtl
mov
sbb
push
inc
jecxz
sbb
add
daa
xchg
hlt
inc
jae
and
leave
adc
xchg
les
xor
cli
xchg
mov
mov
and
inc
stos
js
mov
inc
push
cmp
sub
adc
mov
aas
xchg
add
push
data16
icebp
cmp
test
jle
enter
dec
leave
cmp
adc
jae
mov
push
rorb
adc
stc
jmp
add
adc
and
pop
in
aad
or
dec
dec
adc
loope
arpl
pop
es
hlt
insb
mov
push
dec
and
xor
mov
arpl
inc
cmpb
nop
push
ja
mov
dec
mov
mov
pusha
push
ja
or
inc
inc
mov
sbb
push
enter
dec
xor
test
jnp
mov
rorb
lods
pop
mov
ds
pusha
icebp
push
adc
rorb
mov
testl
xchg
imul
mov
fstl
ret
mov
repz
add
pop
mov
imul
mov
roll
sbb
mov
xchg
push
jne
mov
je
lret
dec
repz
les
pop
roll
cmp
clc
adc
jb
js
xchg
sub
daa
inc
xorb
cmp
test
aad
cld
sub
xor
fsubs
lcall
push
lret
pop
or
push
pop
jle
inc
sub
adc
ja
dec
test
dec
fucompp
sub
xchg
fistps
pop
fnsave
ret
mov
inc
inc
flds
pushf
stos
shrl
add
cld
or
stos
jg
jecxz
test
push
int3
jmp
adc
out
xchg
mov
or
add
inc
dec
pop
cwtl
cmp
lret
xor
dec
jne
sbb
stc
fldl
cmp
push
ret
fwait
outsb
ret
add
add
mov
mov
push
push
dec
mov
sahf
pop
mov
lahf
jne
mov
add
scas
out
push
leave
jecxz
sub
inc
xor
jmp
inc
add
jne
and
adc
mov
ffree
imul
mov
ss
jle
add
push
testb
cld
jno
mov
sub
and
pop
mov
xchg
and
or
sbb
lds
sub
std
std
push
or
xchg
mov
add
push
xchg
or
sub
movsl
pop
sub
inc
loope
lds
mov
mov
sbb
dec
mov
loopne
ret
pushf
cltd
fs
dec
add
sarl
ficoms
frndint
in
fisubs
insl
popf
fldl
aad
dec
jnp
sbb
jno
mov
cs
jle
pop
push
push
inc
xchg
fdivs
inc
insl
dec
lahf
movsb
aad
cltd
cmpb
jg
xchg
lods
mov
mov
imul
dec
pop
dec
dec
cmpsl
add
jp
cmpsb
outsl
add
es
lret
xchg
sbb
xchg
cwtl
gs
mov
push
mov
stc
cmpsl
pop
or
adc
jge
cld
adc
and
repnz
insl
inc
xor
sbb
mov
mov
mov
loopne
cwtl
in
xchg
add
xchg
mov
in
rolb
jb
pop
mov
fisubs
fcmovnbe
push
push
mov
js
mov
ja
subb
mov
mov
inc
popf
jl
jae
cmpsl
ljmp
icebp
ds
fistpll
cmp
mov
mov
data16
clc
ret
popa
mov
lods
ja
pop
jns
scas
inc
movsb
lock
dec
int3
call
das
ficoml
jg
push
rcrl
aam
and
jge
arpl
dec
lods
loopne
leave
push
repz
add
push
mov
pop
lods
dec
lods
dec
mov
stos
jb
repz
sbb
lret
pop
mov
es
dec
std
popf
pushf
and
cmova
ds
xchg
ja
mov
or
pop
cld
mov
out
js
sbb
or
lds
cmp
dec
mov
das
jmp
dec
or
sub
dec
jge
int3
cld
sbb
jge
icebp
stos
bound
xor
hlt
xor
jne
pop
andb
jb
popf
pop
cld
and
fldl
rolb
adc
rolb
outsb
xchg
sbb
dec
jne
aam
xor
adc
cli
outsl
js
sub
mov
adcb
lods
or
adc
pushf
mov
ja
cld
xchg
outsl
dec
or
das
inc
sub
jmp
insl
es
stos
add
jl
mov
mov
sub
xor
jae
pushf
pushf
adc
sub
dec
jmp
or
enter
je
dec
xchg
jne
jg
mov
rcrl
fs
shl
pop
cmpsl
je
lahf
sub
int
fisttpl
cmp
lcall
iret
call
gs
testl
cld
adc
addr16
sbb
sub
and
loopne
jmp
mov
scas
fs
pop
pop
cmp
fiaddl
jns
xchg
jl
and
loopne
aad
loopne
xchg
cmpsb
mov
mov
push
or
outsl
xchg
gs
xor
add
xlat
aaa
popa
and
shrb
in
sbb
cmp
aam
or
jecxz
pop
idivb
repnz
jp
add
sub
out
stc
lods
dec
insl
add
fmull
jmp
insl
or
ror
cmpsl
pushf
pop
fwait
pop
cmp
mov
stc
insb
stos
hlt
sbb
xchg
jl
aad
in
outsl
addr16
ret
cmpsl
or
push
out
jmp
aaa
inc
fs
repz
xor
sub
mov
mov
lret
aas
add
pusha
fistl
repnz
cmp
cmp
popf
push
adc
mov
ja
jbe
push
or
pop
cli
repnz
test
adc
andb
scas
dec
xlat
dec
repz
xor
pop
mov
test
add
jnp
jnp
xor
enter
push
pop
xorb
cmp
xor
clc
cld
jae
xor
fists
test
jne
fsubrp
into
pop
sbb
fstpt
in
das
mov
cmpsl
sub
insl
sbb
sub
stc
add
daa
pop
loop
sub
and
xchg
bound
xor
mov
push
imul
ret
or
shrl
nop
shlb
aad
xor
outsb
push
mov
jecxz
xchg
sub
jmp
dec
adc
or
mov
cs
sub
aad
fbld
jb
out
mov
call
hlt
inc
cmp
and
call
fnstsw
lods
movsl
ja
jns
mov
std
and
push
imulb
sbb
push
test
rcrl
stos
xchg
mov
addl
xchg
xchg
xchg
in
idivb
nop
mov
inc
ljmp
push
int
inc
push
or
xchg
mov
mov
xchg
sub
es
movsl
addr16
shlb
popa
iret
stos
lea
mov
adc
scas
xor
cmp
sbb
mov
out
dec
fistl
scas
shl
addr16
mov
dec
mov
push
inc
stos
popa
aad
cmpxchg
bound
and
mov
push
sbb
inc
mov
int
mov
push
fsubrs
xchg
sub
mov
sub
mov
dec
fnstcw
mov
fimull
and
shrl
mov
mov
lret
pusha
cmp
and
icebp
gs
rorl
test
inc
rcll
and
add
sarl
adc
outsb
mov
arpl
adc
cs
pminsw
mov
xorl
dec
movsl
jns
jp
mov
insl
mov
mov
or
adc
jg,pt
insl
loop
and
inc
add
imul
jne
ja
xor
push
aaa
dec
mov
insl
mov
push
fildll
mov
repz
jl
cwtl
inc
cli
imul
mov
or
or
mov
xor
cmp
push
xchg
xchg
mov
cli
call
and
cltd
mov
shr
pop
daa
add
pop
push
rcrl
stos
pusha
ret
iret
mull
mov
push
jae
mov
leave
mov
stos
ds
stos
ret
dec
xchg
xchg
in
addr16
in
sub
dec
push
movsb
lret
fcmovnbe
jl
ljmp
xor
push
test
xchg
cmp
mov
outsb
xchg
testl
sub
adc
out
fisubs
jp
cmp
push
stos
add
jae
lcall
cli
sti
jnp
or
ja
bound
mov
xor
dec
push
arpl
fbld
mov
cmp
push
sub
or
ss
xchg
sti
jb
insb
pop
pop
jle
pop
push
enter
shlb
aas
push
test
out
sbb
gs
mov
sbb
fwait
add
dec
lret
adc
and
lea
addl
stos
xchg
mov
data16
arpl
mov
mov
inc
mov
or
out
into
push
jmp
loopne
sub
testb
sub
flds
add
and
jb
cwtl
sub
and
pop
push
mov
test
repz
xor
lahf
addl
push
mov
xchg
aaa
sub
mov
aad
ds
jnp
sar
xorl
pop
rcrb
nop
imul
mov
xchg
push
inc
sbb
popl
inc
fldl
mov
jge
add
jle
dec
dec
mov
ret
sub
xor
jb
mov
pop
adc
gs
and
loopne
stos
sub
dec
lds
popa
jo
adc
push
call
pop
jmp
add
imull
inc
fsubrs
pop
fs
inc
loop
loopne
testb
andb
or
push
imul
mov
popa
lret
hlt
test
fucomp
lea
cmpsl
sub
mov
and
mov
outsl
les
adc
in
inc
or
loopne
sub
bound
rorl
xor
pop
or
and
insl
addr16
jg
dec
adc
scas
pop
inc
inc
pop
adc
sbb
andl
shlb
clc
add
inc
shll
jnp
les
mov
cli
mov
xor
push
repnz
push
scas
cmpsb
loope,pn
stos
roll
stos
popf
push
cmp
sub
test
es
ror
fisubrl
mov
hlt
mov
sarb
ss
jb
or
test
xor
bound
xchg
fbld
mov
in
jns
mov
or
sbb
fs
pop
mov
test
aaa
sub
iret
xor
js
pop
push
cltd
mov
mov
cmp
dec
in
gs
lret
stos
cld
xor
mov
adc
repz
rcrb
xchg
sub
pusha
mov
xchg
stos
jle
and
jnp
aam
push
shll
lcall
fisubrl
fsubl
rorl
mov
test
and
jbe
dec
stc
andnps
xchg
ja
cwtl
xchg
lcall
fists
push
nop
scas
inc
push
xchg
call
test
movl
dec
je
ljmp
inc
push
nop
jno
mov
jge
mov
and
les
stos
movsb
cmpsl
inc
sbbl
outsb
leave
ljmp
pop
push
vpunpckhqdq
cmp
mov
mov
mov
sub
adc
xchg
xchg
mov
xchg
xor
imul
fisubs
xchg
pushf
or
cmp
fisubrs
iret
push
mov
inc
or
out
lods
push
orb
out
out
pop
fmull
lea
fwait
lock
push
dec
iret
imul
adc
daa
je
inc
xor
movsl
fcoms
jl
pushf
cwtl
pop
sahf
es
mov
jmp
mov
ret
shll
dec
popa
call
es
dec
ret
std
outsb
lahf
cmp
jp
insb
iret
stc
inc
je
inc
jge
movsb
mov
push
lahf
pop
loopne
in
cmp
adc
subl
cs
sub
mov
dec
insb
sti
dec
loopne
push
repnz
cmp
fwait
icebp
aad
jg
jno
sahf
add
cmp
push
test
inc
or
pop
or
xchg
add
add
mov
lods
add
inc
mov
nop
sti
jnp
adc
ret
xchg
jo
add
dec
loope
cld
sbb
push
ds
scas
push
fwait
sti
jno
cltd
fs
cld
cs
mov
pop
dec
sub
push
mov
stos
cli
sub
lahf
imul
ljmp
mov
stc
insb
adc
enter
inc
movsb
loop
inc
mov
mov
movsl
xorb
enter
jp
mov
xchg
or
movsb
mov
lea
les
popf
adc
xchg
icebp
mov
sarb
dec
mov
or
popf
sbb
frstor
push
pop
fnsave
pusha
xor
push
ss
outsb
push
or
or
xchg
popf
mov
hlt
popl
inc
cwtl
in
popa
out
pop
dec
ret
mov
pusha
push
int3
popa
lar
test
es
sbb
leave
lahf
or
add
int3
push
lock
imul
adc
lret
or
rcrb
push
lahf
mov
push
daa
mov
bound
rcll
test
jnp
sbb
sub
push
jbe
popa
enter
aad
inc
xchg
mov
mov
mov
mov
negb
mov
cmp
test
and
jo
test
dec
pop
lods
insb
xor
scas
cli
mov
xchg
js
inc
or
adc
dec
push
into
fwait
in
pop
stos
push
outsl
push
push
push
mov
xor
mov
mov
xchg
cmp
mov
add
pusha
rcrl
or
xor
and
ja
testl
jp
cld
pop
mov
aaa
arpl
int
jns
pop
sbb
cmp
xor
sbb
fbld
mov
out
add
inc
jp
cmp
out
sbb
xchg
test
cmp
rcll
push
lock
arpl
popa
cmp
xlat
daa
and
call
and
xchg
mov
xor
dec
add
sub
sbb
mov
test
xor
movsl
xchg
xor
aad
fwait
aad
std
jecxz
jmp
fisubrl
inc
sub
cmp
add
and
subb
mov
subb
rcl
or
ret
icebp
sti
add
sarl
add
shl
jp
call
mov
sbb
subl
rcll
jne
inc
inc
adc
jno
mov
ds
adc
pop
mov
cmpb
cwtl
push
pop
xchg
fldl
mov
fsts
enter
icebp
mull
and
lods
add
and
dec
popf
out
adc
sar
add
fistps
js
in
mov
mov
test
jp
or
test
test
jge
imul
mov
icebp
stos
mov
adc
shrb
rorl
lock
je
int3
outsb
push
push
push
fcompl
jae
lea
xchg
pop
sub
inc
mov
iret
cwtl
clc
test
loopne
jbe
ficoml
xor
inc
fbld
addr16
xor
or
cmp
inc
mov
aam
mov
js
pop
repnz
sub
xor
popa
in
aaa
mov
cmp
sbb
aam
xchg
xor
xchg
loopne
cs
int
arpl
notl
add
cmc
dec
mov
inc
xchg
fstps
jp
arpl
fisubrs
jl
mov
lret
pop
test
ljmp
add
pop
in
in
es
fwait
lcall
adc
dec
xchg
test
pusha
ret
jle
leave
xchg
sti
das
out
cltd
nopl
mov
dec
sbb
enter
push
adc
push
sub
shrl
sub
add
inc
imul
ds
xchg
pop
jle
xchg
xor
mov
cmp
adc
mov
sub
add
xchg
jb
jp
ja
pop
sbb
fmuls
push
and
shrb
aad
push
cmp
inc
outsl
xor
gs
inc
shll
scas
repz
rcrl
movsl
arpl
mov
or
sub
nop
cmp
push
dec
push
jmp
pop
sub
sbb
dec
not
add
ret
sbb
mov
pusha
jg
cmpsb
lahf
mov
nop
jne
in
test
inc
adc
aaa
mov
inc
adc
test
ds
sti
loope
rorb
cs
outsl
xchg
xor
and
ss
into
adc
adc
aad
pop
cmc
cli
xchg
mov
enter
xchg
mov
mov
je
lock
int3
fdivl
test
inc
push
pop
xchg
mov
movsb
sub
movsb
mov
push
add
daa
mov
xor
sarl
jbe
outsl
sub
enter
inc
lods
and
mov
sub
xchg
sbb
xlat
mov
mov
cli
xchg
cli
into
mov
stos
mov
push
leave
mov
stc
push
jb
adcb
enter
jmp
mov
pop
aad
int3
or
adcl
jbe
in
out
jb
mov
jb
lock
jae,pn
or
aas
lds
in
cltd
add
push
scas
test
jge
fdivrl
cld
and
popf
push
dec
inc
jbe
ss
xlat
xor
test
insb
xchg
xchg
and
aaa
mov
xchg
je
or
sbb
or
stos
imul
cmpsb
mov
mov
popf
push
cmp
sub
push
sti
pushf
xchg
stos
or
push
or
scas
int3
out
lods
and
imul
xchg
jg
nop
lahf
movsb
pop
test
call
call
xor
dec
nop
sub
pop
mov
std
addr16
cmpsb
xchg
push
sbb
lret
push
cltd
or
mov
mov
loope
cmp
js
sarl
pop
xlat
xchg
lods
imull
outsb
push
adc
lahf
loop
pop
ss
dec
adcb
sti
sub
jae
xor
xor
cmpsb
in
sbb
jg
push
sub
inc
mov
xor
aaa
les
xchg
movsb
sub
push
sbb
in
sub
js
and
xchg
ret
mov
push
mov
dec
or
mov
lcall
or
shrb
cmp
mov
adcb
mov
inc
cmp
aaa
bound
push
add
adc
test
scas
mov
or
in
sahf
xchg
mov
xchg
cmp
cwtl
notl
inc
repnz
vmovdqu
pop
pop
repz
clc
push
test
and
lea
mov
movsb
sub
mov
lds
lds
xchg
sub
test
outsb
adc
sbb
or
pop
loop
lods
mov
mov
pushf
fs
insl
cmpsl
iret
dec
dec
jae
sub
sbb
mov
jns
sbb
adc
xchg
xor
test
outsb
push
and
sbb
test
cmpsb
jae
adc
repnz
lret
jmp
xchg
adc
or
push
and
in
fwait
xchg
sahf
repnz
lds
movb
push
lahf
lret
add
mov
dec
xor
push
lea
clc
pop
pop
test
loope
mov
jmp
and
outsb
in
or
push
pop
push
stc
xor
sub
arpl
sub
iret
aas
jne
cld
jle
mov
cmp
scas
or
addr16
in
icebp
rclb
jo
cmpsl
jp
push
add
test
cmp
test
pop
pop
dec
push
and
ljmp
fwait
int
clc
pop
push
sbb
andb
and
orb
and
and
and
test
fwait
sbb
out
mov
xchg
xchg
fildl
pop
sbb
mov
and
outsb
mov
cmp
and
pop
pop
loop
push
dec
jp
popf
add
das
out
inc
ret
out
xchg
cmp
mov
xchg
ret
jg
fdivrl
bound
out
imul
loopne
sub
pop
in
sbb
rcr
nop
or
loope
mov
dec
xor
movsb
fadd
mov
gs
adc
test
push
aam
aad
mov
sub
mov
push
cmp
sahf
inc
rcrl
jbe
popa
lock
mov
leave
pop
adc
int
aaa
enter
sarb
loope
or
jae
pop
push
shlb
or
push
arpl
int
popf
inc
outsl
or
cmp
pushf
movsl
test
sub
imul
cmp
sahf
xor
adc
shrb
and
pop
sbb
jle
push
fisttpl
mov
stos
out
lods
xchg
mov
imul
add
and
push
xor
insl
lahf
insb
lahf
mov
xchg
fsts
xor
loopne
sbb
push
or
xor
push
icebp
popa
mov
fsubs
gs
pop
or
cmpsl
xchg
popf
aaa
ficomps
arpl
dec
mov
xchg
iret
xchg
test
cmpsl
int3
xor
hlt
inc
lods
push
or
lcall
stc
ljmp
mov
sub
test
push
lds
jo
pop
fidivrs
loop
xor
icebp
ffree
addl
loope
inc
data16
push
sub
bound
push
aad
out
xor
or
jns
push
jbe
adc
dec
fs
sbb
dec
repnz
jle
sarl
mov
ror
xchg
push
insl
cmp
cwtl
push
and
int3
test
xor
psllq
nop
pop
adc
push
xlat
inc
lock
inc
out
ret
arpl
cwtl
xor
cmp
cmc
and
repnz
popf
test
jmp
push
sbb
mov
ds
ds
insb
insl
adc
jno
shrl
pop
scas
stos
mov
cmp
cmp
cmp
lds
mov
fsts
mov
and
sub
mov
fsubp
xchg
dec
or
mov
pop
cmpsb
hlt
push
pushf
pop
enter
test
sti
enter
cld
dec
sub
fisubl
lods
xchg
cmp
ror
adc
or
int3
negb
inc
scas
pop
lcall
stos
movsl
mov
mov
sahf
cwtl
movsb
jae
push
jmp
arpl
inc
xlat
jnp
andb
ret
inc
lcall
cltd
add
cltd
mov
adc
loop
mov
mov
mov
stos
jns
mov
cld
leave
cmp
call
imul
dec
cmc
stos
xor
jmp
fdivl
pop
ret
inc
mov
loope
push
cmp
loop
mov
cmp
xchg
pop
jmp
repz
repnz
and
out
pop
mov
mov
pop
arpl
aam
mov
inc
cmp
bound
sub
add
mov
inc
sub
mov
iret
movsb
fwait
push
loop
pop
xorl
jno
in
sub
jne
rcl
test
pop
negb
xchg
adcb
lcall
js
or
and
mov
popf
rorb
inc
sbb
int3
fnstsw
jb
cli
js
xor
and
xor
repz
scas
cmp
xchg
out
leave
movsb
xor
into
mov
les
mov
inc
jns
sti
xor
nop
movsl
pushf
out
add
sbb
inc
inc
shrb
icebp
dec
dec
cmp
jo
dec
dec
cwtl
add
ja
sub
cwtl
mov
jno
cmp
push
les
repz
xlat
bound
jnp
sub
add
sub
xchg
stos
and
outsl
js
push
mov
stc
adc
and
std
fistl
subb
stc
push
push
xor
scas
sbb
ficomps
imul
shll
movsl
xchg
mov
int3
jl
sarl
repnz
push
arpl
inc
pop
icebp
jb
sub
push
push
mov
fistl
shrl
fcmovu
push
and
mov
in
jbe
aad
sar
inc
cli
stc
movsl
mov
mov
inc
mov
test
xor
in
pop
dec
repnz
lahf
mov
add
movsb
xchg
dec
xchg
push
fiaddl
ret
inc
xor
jae
fiadds
or
stos
pop
sub
scas
mov
aam
rolb
xor
adc
cli
jo
sub
adc
popf
clc
jp
jns
push
push
repz
pop
cmpsb
cmpsb
mov
imul
adcb
push
xchg
call
cmc
add
aaa
vmread
and
dec
push
mov
sahf
jne
leave
popf
sbbb
ja
push
neg
dec
push
test
out
sti
les
xchg
jmp
aam
lods
out
adc
inc
test
int3
push
cmp
mov
adc
xor
add
sarb
dec
testb
adc
into
dec
rorl
xchg
push
lcall
fcmovnbe
cmp
xlat
inc
test
mov
test
and
mov
pop
loopne
shlb
cwtl
shlb
xchg
lret
push
out
push
test
sub
xchg
leave
fdiv
notb
negl
les
add
les
inc
inc
out
call
test
out
inc
insl
push
jne
clc
ja
js
lea
fsubp
pop
xchg
out
cs
add
jg
adc
jge
mov
xor
fisubl
push
mov
lods
loope
stos
insb
lcall
cli
push
push
adc
dec
push
mov
mov
in
push
push
xchg
inc
sarl
scas
fidivrl
lret
inc
lods
and
cmp
inc
inc
mov
lds
mov
or
mov
push
dec
xchg
xchg
in
ss
dec
sub
jl
lahf
push
cmp
or
dec
and
push
and
xor
lods
cmpsl
rolb
xor
sti
mov
mov
xor
aam
lods
pop
scas
filds
adc
std
inc
sbb
sti
mov
jp
mov
imul
push
lret
mov
jle
push
push
add
insl
ret
ja
sub
es
lods
jae
fs
xchg
in
add
test
sub
sub
adcl
sbb
or
xor
fwait
movsb
jg
les
das
xchg
cmpsl
xor
adcb
mov
xchg
fnsave
mov
push
das
pusha
addr16
stos
adc
mov
jp
or
adc
lcall
cmp
sub
lods
xlat
orl
sbb
add
ss
clc
popf
arpl
push
cmc
je
inc
mov
xor
mov
scas
or
in
mov
xor
scas
pop
fstl
cli
push
sub
adc
bound
dec
pop
push
mov
stos
test
dec
in
fdivs
mov
push
pop
insb
inc
pop
lods
das
inc
sub
divl
filds
cmpsw
push
mov
push
push
add
icebp
jns
sub
lar
adc
push
popl
outsl
inc
test
mov
adc
pop
std
inc
jg
cli
leave
loopne
dec
cmc
dec
jge
pop
inc
loope
xor
je
mov
xor
out
scas
test
pusha
or
xor
adc
fisttpl
sbb
jns
cs
dec
into
jge
das
inc
mov
rorl
bound
jl
xor
adc
lods
mov
xchg
xor
gs
xlat
push
sub
inc
push
insl
jne
add
and
or
jae
fldt
movlps
mov
push
dec
jns
adc
enter
cmpsl
dec
pop
sub
inc
rcll
sbb
adc
adc
add
mov
enter
push
aam
sti
mov
or
and
xor
int3
lcall
xor
mov
shll
int
fisttps
stc
mov
mull
hlt
shrl
jb
pop
fistpl
xor
adc
or
dec
test
push
sbb
pop
mov
lret
fiaddl
int3
mov
xor
aas
inc
mov
lret
push
jmp
cmp
jle
sub
icebp
fiadds
into
sub
mov
sub
sbb
and
add
push
outsb
stos
scas
jae
mov
mov
testb
xchg
sti
mov
rcrl
or
jge
push
pop
imul
cmp
cmp
mov
dec
inc
fcomp
push
mov
mov
mov
mov
xchg
cmp
mov
or
or
enter
in
inc
pop
xchg
sti
gs
mov
inc
dec
loopne
mov
repz
fs
inc
inc
rcll
push
imul
in
mov
bound
subb
arpl
gs
lret
jnp
sbb
sub
jmp
xchg
sbb
xchg
imul
jo
hlt
lcall
cmp
adc
sub
lea
int
lds
jno
adc
jp
pop
push
jno
pop
loope,pt
int
mov
jge
sub
adc
ret
adc
icebp
shr
cltd
cld
and
mov
in
mov
test
xchg
xor
add
movsb
lcall
lret
nop
dec
shl
mov
jbe
loop
inc
add
out
jmp
push
xor
push
call
aaa
pop
add
pop
adc
fs
insb
scas
fwait
das
and
adc
cld
or
test
xchg
cmpsb
push
mov
mov
mov
minps
repnz
aaa
jno
cs
and
movsb
lea
repz
mov
test
or
dec
cs
ficoms
mov
push
xor
decb
and
mov
pusha
pop
jno
sahf
js
mov
xor
lock
xchg
repz
xor
xchg
mov
sbb
xor
jge
sbb
dec
lods
in
mov
jle
push
or
mulb
add
adc
inc
int
cs
lds
lock
push
outsb
xchg
push
bound
push
cmpsl
enter
stos
mov
mov
mov
jl
jmp
mov
sbb
sub
pop
data16
mov
or
xchg
jnp
jmp
inc
enter
test
fdivl
sti
popf
js
add
xor
jecxz
jmp
ret
xor
mov
aas
sbb
out
xchg
cmp
out
mov
mov
icebp
ljmp
out
sub
imul
sbb
in
cmp
jno
mov
cwtl
repz
cmp
sbb
xchg
jecxz
out
faddl
xor
add
imul
xor
lock
lds
pusha
cmp
je
add
imul
daa
iret
xor
dec
dec
movsbl
mov
lcall
pop
fsubr
pop
ret
sti
gs
push
lret
in
sbb
jl
je
jg
in
jno
xor
fcom
rcr
mov
pop
xchg
push
add
add
jbe
mov
movsb
push
push
cltd
outsb
add
push
shrl
add
xchg
jl,pt
pop
aam
push
pop
pusha
xor
icebp
or
mov
lock
or
stc
nop
jecxz
das
fsubrl
mov
bound
and
sbb
push
addr16
and
jbe
in
pop
ja
xor
inc
hlt
dec
ficoml
enter
push
xchg
mov
rcr
scas
mov
mov
mov
lahf
push
dec
nopl
mov
cmpb
cmp
xor
out
jnp
movsl
fdiv
push
mov
cltd
aaa
lret
xchg
cld
leave
and
js
push
dec
in
cmpsb
mov
cmp
ret
jge
sbb
sahf
jmp
mov
xorl
or
lahf
push
ljmp
out
jne
insl
push
pop
inc
jo
push
xor
je
in
das
test
mov
inc
fidivl
imul
mov
gs
mov
aaa
push
xor
fiaddl
pop
pusha
js
pushf
push
inc
jne
inc
push
sahf
cmp
dec
xor
pushl
xorl
adc
sbb
popf
pop
bnd
nop
xor
nop
cmp
pop
dec
test
ja
lahf
cmp
push
das
push
xchg
inc
xchg
inc
xor
pop
jecxz
xlat
adc
add
es
xor
faddl
xchg
test
ja
test
mov
popa
test
mov
and
mov
dec
add
fwait
mov
arpl
ljmp
xor
decb
adc
jns
lret
xchg
ret
adc
cmpsl
scas
imul
mov
xchg
stos
das
rolb
xchg
jp
xchg
lock
jnp
cvttps2pi
pop
in
and
push
sub
push
stos
nop
lods
dec
fld
push
jle
xor
add
arpl
sbb
orb
xor
call
scas
or
pop
mov
sub
pop
add
cmc
gs
push
aam
or
mov
adc
cmpsb
add
xor
ret
inc
iret
xchg
cmp
push
push
jp
mulb
mov
mov
or
ret
stc
lds
pop
outsb
in
push
pop
xchg
sub
inc
mov
insl
xlat
scas
inc
add
aad
scas
insb
push
xchg
in
pop
jns
nop
mov
imul
xor
xchg
xor
js
ss
jnp
cmp
sub
push
jo
cld
mov
bound
mov
repnz
jb
sbb
push
mov
aas
sbb
adcb
jle
pop
cmpsl
bound
pop
jge
sub
pop
pusha
loopne
mov
jg
popa
out
pop
mov
and
mov
push
adc
insb
dec
mov
imul
pop
xlat
scas
aam
dec
mov
push
push
xor
push
out
sub
bndldx
inc
ficomps
or
sbb
mov
rcr
popa
and
mov
mov
sub
mov
pop
push
js
or
sbb
mov
push
rcll
fisubs
inc
xchg
inc
insl
sbb
insb
ror
rcrl
push
mov
lea
jg
movsl
xchg
fsubrs
js
ljmp
imul
xor
lock
es
dec
jae
adcl
cmpb
sub
jmp
push
test
cmp
mov
and
xchg
xor
insb
push
sub
loop
adc
clc
xor
scas
stc
sbb
push
xchg
xchg
mov
sbb
fnstcw
and
popa
lea
mov
jno
mov
cmp
inc
std
aam
ss
sbbl
idivl
xor
xor
adc
pop
mov
jp
in
mov
ljmp
lea
icebp
add
and
add
mov
inc
mov
fistpll
or
dec
and
sbb
int3
mov
adc
or
mov
and
push
cmp
addr16
pop
cmp
lret
popf
test
repnz
sub
lea
mov
fwait
jmp
lret
loope
push
jnp
fsubs
cmp
ljmp
jle
int3
inc
xchg
iret
test
xchg
ljmp
fld
mov
and
mov
adc
add
sbb
test
cltd
je
ret
fistl
iret
cltd
adc
stos
add
mov
aaa
dec
pop
pop
outsl
jge
test
inc
dec
or
mov
incb
pushl
mov
js
pop
sbb
std
pop
and
inc
shll
aam
fidivs
and
add
mov
or
fs
outsl
cmp
rolb
mov
and
gs
cltd
adcl
mov
push
dec
sbb
mov
push
scas
out
pop
fsubrl
in
repnz
out
dec
pop
out
cli
mov
adc
iret
test
pop
sbb
lahf
jecxz
flds
imul
lock
fdivs
pop
clc
mov
pop
std
add
adc
int3
in
dec
roll
movsb
xchg
push
add
mov
aaa
js
add
pop
scas
xchg
aad
lahf
mov
outsb
aaa
push
into
out
movsb
test
dec
not
jne
fsubr
cmp
xor
sbb
insl
leave
cmp
fnsave
sub
cmc
pop
xchg
push
jge
adc
lds
cmp
dec
inc
mov
out
mov
fs
dec
out
out
lods
cmp
add
inc
test
xor
push
js
dec
dec
push
adc
movsb
sub
xchg
inc
jno
dec
ds
aas
push
sbb
int
ds
mov
sbb
pop
loop
ss
jge
xchg
pop
sub
inc
xor
mov
or
test
sub
ret
mov
mov
inc
es
inc
cmp
and
outsb
add
int3
mov
in
repz
sbb
dec
mov
mov
dec
mov
loop
dec
push
incb
ret
es
sub
pop
push
inc
push
loopne
or
pop
adcl
mov
add
repz
es
pop
jecxz
divb
inc
fistl
jl
in
cmp
fldt
shrl
xchg
test
xchg
jns
cs
mov
dec
and
fdivrl
negl
mov
cmp
mov
int3
jne
jp
lahf
jne
sub
sbb
idivb
in
mulb
adc
push
sub
inc
dec
cmpsb
iret
daa
in
jns
cs
push
fwait
sbb
push
mov
out
cmp
mov
sbb
enter
mov
rorl
movsb
adc
mov
push
in
test
movsb
nop
icebp
mov
ret
outsb
cmp
or
sbb
scas
xor
cmpsb
adc
xor
mov
movsl
cmp
and
es
xchg
roll
fidivl
inc
xchg
inc
pop
and
inc
cmc
in
pop
lahf
cmp
push
adc
ret
ljmp
aam
movsl
mov
add
es
sbb
pop
xchg
in
jmp
shrb
adc
mov
addr16
aad
mov
dec
clc
push
xchg
ja
sub
inc
sbb
mov
jnp
outsb
cmp
add
pop
sub
sbb
lock
gs
out
cmp
movl
pushf
and
hlt
js
shr
outsb
pop
xor
icebp
xor
loop
ret
and
inc
test
inc
pop
pop
pusha
aas
add
sub
ret
rcll
imul
dec
xor
js
dec
or
or
sub
loopne
adc
mov
mull
xor
arpl
and
mov
adc
mov
cwtl
adc
notl
stc
rolb
lea
cld
adc
or
xor
hlt
add
jne
mov
mov
mov
daa
jmp
mov
int3
leave
xchg
int3
pop
sub
cmp
pop
push
xor
andb
and
fmulp
test
sub
aas
gs
int3
hlt
pop
sahf
clc
xor
pushf
imul
xchg
daa
lods
xchg
xor
repnz
lock
pop
fwait
push
jne
xor
and
clc
sbb
mov
call
adc
movsl
jne
mov
sbb
cmp
or
pop
cmpxchg
adc
cltd
mov
and
and
dec
inc
xor
dec
popa
xchg
pop
sbb
fsubp
je
lea
int3
fstpt
and
xchg
imul
inc
mov
sahf
cli
mov
clc
shll
inc
pop
addr16
fistpll
mov
xchg
cltd
add
ret
mov
mov
imul
fs
dec
jno
pushf
pop
sahf
or
xlat
lcall
push
and
dec
mov
lds
pop
das
jle
into
xchg
jecxz
fwait
repnz
out
int3
mov
mov
enter
inc
insb
jmp
adc
push
cmovbe
bound
dec
enter
test
rcll
flds
lods
push
shr
rcll
and
and
mov
and
xor
popa
out
fdivs
sti
push
imul
hlt
fwait
pop
iret
cwtl
xchg
cmp
dec
sbb
in
push
jmp
or
inc
inc
xor
aas
cld
dec
inc
xchg
fistl
inc
sub
cmp
xchg
adc
mov
xlat
out
cld
shr
int3
mov
lea
int
adc
aas
mov
jmp
xchg
sub
jg
mov
inc
movsl
rcll
outsl
pop
rorb
cltd
dec
mov
add
insl
push
and
ret
cmpsb
mov
inc
fwait
repz
push
add
lods
xor
adc
xchg
xchg
sub
std
jge
movsb
aaa
test
ret
es
jns
cmp
xchg
xlat
inc
scas
cli
in
adc
add
loope
ds
jno
mov
push
in
call
and
aam
shrb
popf
stos
and
dec
or
inc
andb
or
jnp
aas
sub
jmp
fdivrp
pop
ds
lret
shll
inc
test
and
cmc
out
push
test
fisubrs
je
ds
ss
jmp
inc
jp
into
rolb
mov
rcr
in
iret
int
sbb
cmp
pusha
cmp
sub
in
jo
xor
xor
pop
mov
sub
rcr
xchg
and
and
inc
mov
cmp
push
or
daa
lcall
lods
sbb
mov
cmp
fldl
sub
inc
or
stc
les
mov
mov
cmpsl
je
add
mov
inc
lret
stc
jno
xlat
xor
xlat
xchg
ret
mov
imul
adc
stos
cmp
ds
loope
rorb
mov
ljmp
fnstsw
mov
mov
xor
stos
jo
cmp
xchg
or
cmpsb
pop
stos
nop
btc
inc
add
hlt
loop
and
int3
imul
scas
out
lret
xchg
sub
mov
lods
cmp
movsb
cmc
add
and
lods
jne
in
in
xchg
ret
sahf
pop
inc
rclb
jns
imulb
push
pop
cmp
pop
and
jecxz
sahf
outsl
fdivr
jmp
data16
xor
inc
adc
in
pop
movl
xchg
mov
addl
jg
test
das
push
dec
jl
dec
lret
repnz
add
int
jae
mov
dec
xchg
or
sub
jno
mov
mull
lcall
or
mov
hlt
cmp
test
xlat
aaa
jnp,pt
push
jb
out
mov
jns
xor
jecxz
pusha
fidivs
rcrb
push
add
jmp
push
jae
lret
ljmp
sbb
sub
or
cmp
jae
inc
sub
ljmp
sbb
in
push
cltd
jle
cmp
jb
insl
pop
iret
push
push
cltd
ret
pop
jge
jnp
inc
lahf
pop
pushf
jbe
rclb
mov
jg
int3
mov
mov
outsb
xchg
pop
adc
addb
pop
pop
mov
pop
add
xor
lock
dec
push
push
add
dec
leave
pop
cmp
mov
adc
out
lds
imul
mov
mov
stc
xchg
call
popf
pop
mov
adc
cs
jae
mov
push
and
mov
aad
adc
dec
pop
sahf
test
lret
xchg
pop
roll
mov
sub
or
jge
mov
add
mov
mov
lods
add
dec
pop
std
xchg
mov
jecxz
cmp
outsl
dec
inc
add
lock
les
xor
cltd
inc
scas
xor
or
lcall
fs
cmp
jecxz
push
dec
mov
jmp
mov
cmp
loop
mov
sbb
out
icebp
jp
mov
ss
loop
xchg
pop
das
cwtl
jp
imul
addr16
sub
push
insb
or
push
adc
jno
xchg
sbb
scas
pop
push
iret
int
xchg
adc
mov
in
outsl
repz
pop
sub
ret
or
dec
add
je
xor
dec
pop
push
dec
xchg
aas
fs
dec
les
xchg
cltd
test
xchg
inc
push
outsb
xorb
inc
stc
movsb
dec
jecxz
enter
add
mov
mov
xor
scas
jmp
mov
rcl
fmul
add
adc
sub
push
dec
xchg
push
and
cmp
orps
pop
dec
pop
mov
repnz
mov
data16
cmp
cmp
mov
cmc
iret
cmp
sarb
into
push
roll
out
les
mov
pop
rdmsr
aam
mov
dec
cmp
xchg
sub
mov
pop
add
test
cmp
xor
xchg
test
dec
inc
repz
jp
scas
inc
pop
decb
adc
pop
addl
dec
push
sub
aam
cld
inc
push
add
in
outsl
and
std
sti
jecxz
sub
hlt
jo
push
push
sub
shl
adc
cli
push
shll
fwait
adc
es
mov
mov
nop
xor
push
cmp
jg
dec
int3
inc
int3
push
imul
sti
test
or
leave
cmp
lods
into
pop
dec
lds
inc
jo
shll
movsl
cmp
sbb
inc
arpl
sub
xor
shl
lods
mov
stos
lods
movsb
lods
imul
dec
push
dec
adc
jae
or
lahf
sub
imul
testb
repnz
loop
inc
sbb
popf
mov
lcall
xchg
cli
fisubrl
and
mov
cld
cmpsb
fldcw
pop
or
inc
sbb
mov
cltd
cmpsb
add
repnz
nop
stc
inc
xchg
in
or
mov
xor
lcall
mov
xor
push
arpl
mov
bound
xchg
flds
push
dec
sub
test
xor
hlt
aaa
xchg
and
dec
insb
in
pop
jb
mov
sbb
jle
in
insl
imul
mov
mov
sbb
out
inc
inc
les
xor
inc
pop
test
mov
bnd
push
sbb
xlat
jnp
pop
outsl
cmp
sbb
and
mov
call
test
adc
inc
es
test
pop
jecxz
jecxz
xor
pop
add
divb
xor
add
rcl
pop
push
unpcklps
jmp
xchg
out
sub
mov
dec
js
nop
mov
lret
push
push
aam
sbb
outsl
jp
sbb
out
les
or
xor
scas
arpl
ficoms
test
clc
pop
inc
lds
push
or
jecxz
fs
pusha
dec
sub
mov
out
scas
or
cwtl
int3
lret
in
mov
repz
sti
fisttpl
push
mov
aas
or
mov
sbb
sub
ljmp
clc
or
mov
fbstp
or
lds
sar
setg
addr16
cmp
in
mov
mov
punpckhbw
in
enter
xchg
aaa
add
sbb
lcall
dec
dec
fistpl
orb
lock
cmp
fistl
rorl
sub
mov
or
in
xlat
movsb
cmp
mov
dec
dec
call
popa
or
dec
push
sbb
pop
in
or
cmpsl
dec
pop
mov
fstpl
fiaddl
adc
sbb
scas
sub
xor
lahf
call
subl
lock
and
and
iret
and
xor
cmc
aas
imul
mov
mov
mov
or
jge
cltd
or
adc
pushf
sub
ja
mov
das
mov
mov
ljmp
stc
jae
push
aas
ss
lret
and
je
mov
xor
mov
jne
popa
in
pop
fdiv
xchg
jo
dec
dec
in
mov
js
pop
jg
sahf
repnz
push
cmp
mov
sub
mov
lret
mov
std
leave
sub
dec
push
pop
dec
fidivrs
cmp
and
push
push
test
orl
stc
push
xor
push
mov
adc
aaa
test
in
adc
out
add
mov
ret
lahf
pop
adc
mov
and
int
adc
and
lcall
xor
add
xchg
incl
push
out
push
jo
mov
jmp
mull
mov
clc
push
jecxz
dec
push
mov
or
clc
push
sbb
adc
iret
cld
cmpsl
jl
test
shlb
adc
lea
mov
mov
lds
ret
pop
rclb
and
ljmp
dec
inc
and
mov
xchg
pop
sbb
mov
clc
or
adc
in
std
pop
cmpsb
jne
inc
imul
popf
or
sbb
into
inc
jmp
sub
jg
imul
and
pop
sbb
dec
cmp
and
xchg
adcl
push
mov
out
jecxz
push
adc
shrb
insb
mov
xchg
stos
pop
mov
ja
das
jl
stos
arpl
and
inc
xchg
mov
jb
xchg
push
mov
and
mov
mov
rclb
sbb
xchg
test
dec
subb
ljmp
xor
aaa
cwtl
xchg
push
test
and
fmull
je
shlb
inc
fwait
negl
mov
nop
lock
adc
xor
rcll
push
dec
and
mov
movsl
ficoml
push
mov
push
in
pop
sti
push
enter
push
mov
imul
sub
out
fsubs
lds
pop
andl
mov
icebp
insb
cmpsl
fisttps
jb
xchg
push
or
adc
mov
jecxz
std
imul
scas
mov
mov
add
cmp
lret
push
jbe
je
cli
jle
sub
xor
es
pop
mov
fnstsw
cmp
shll
or
dec
cmp
push
and
mov
fstpt
jl
xchg
mov
scas
popa
or
out
imull
and
dec
clc
ret
shl
push
adc
lds
pop
ja
xchg
lea
outsl
rolb
and
int
sar
push
inc
pop
push
add
adc
xor
lcall
sub
jbe
and
cmp
mov
or
loop
nop
mov
mov
out
repnz
cmp
pop
addb
mov
rolb
lds
mov
dec
sar
outsb
lret
or
mov
clc
xchg
adc
ds
xchg
inc
add
inc
cmp
dec
cmp
sbb
mov
hlt
int
dec
cli
push
aaa
imul
gs
and
fistpll
aaa
pop
or
out
adc
pop
jg
repz
jp
pop
mov
frstor
imul
xchg
sbb
or
dec
popa
shlb
daa
xlat
inc
push
jne
ljmp
frstor
jbe
xchg
sub
add
jb
mov
loop
or
into
fnstcw
sub
lock
jg
sub
jns
repz
js
sti
adc
clc
rolb
xor
in
les
pop
icebp
sti
rcl
mov
inc
cs
jns
adc
pop
sahf
jl
or
test
inc
ret
testl
test
insb
cmp
enter
cwtl
jg
imul
or
jnp
sub
scas
push
lods
or
ds
inc
sbb
push
rcrl
test
mov
mov
dec
and
jmp
outsl
sub
and
rolb
scas
insb
cmc
mov
cs
fdivl
or
sbb
add
pop
adc
cltd
cmc
lods
aas
stc
es
inc
loope
inc
jo
mov
outsb
xor
sahf
outsb
xor
lret
aas
jp
jp
sbb
inc
subb
inc
fsubrs
imul
mov
push
es
sbb
push
xor
inc
insl
idiv
lods
shlb
cmp
sbb
stos
push
je
inc
sti
xor
ds
pop
leave
dec
cmp
cltd
adc
mov
cltd
pop
loop
xchg
int
ja
cmpsb
repnz
dec
sbb
xchg
pop
inc
push
jno
sbb
push
pop
add
pop
cmp
sbb
lret
lahf
rcrb
inc
aad
outsb
mov
push
js
and
inc
sbb
loop
pop
or
sarl
mov
subl
inc
cs
movsl
adc
mov
aaa
movsl
out
adc
cltd
fs
jmp
out
bound
in
adc
mov
add
mov
and
fld
push
mov
movb
push
adc
stos
test
lds
push
and
popa
mov
das
das
adc
les
pop
ret
jbe
hlt
je
jge
out
add
dec
jg
lds
mov
std
xor
jnp
popa
imulb
lcall
lds
int3
xchg
je
out
lods
rcrb
idiv
and
push
lock
pushf
fwait
mov
ja
int
cmc
mov
dec
add
int
dec
inc
stos
stos
dec
pop
outsb
movsb
mov
cmpsb
mov
stc
inc
push
aaa
inc
scas
jl
push
lcall
jb
lock
int
cwtl
int3
xchg
mov
lea
adc
hlt
and
mov
xor
std
nop
add
subl
dec
pop
dec
insb
mov
or
sub
lret
jmp
loop
xor
dec
or
mov
popa
add
in
ret
inc
lods
cmp
push
aam
pushf
ja
sbb
lods
and
adc
test
cmp
sub
mov
jmp
add
arpl
fistl
sub
xchg
push
add
push
pop
sbb
rcr
xor
xlat
pushf
mov
loope
test
mov
xchg
add
int
fldt
xor
pop
or
xor
xor
jae
or
cmpsl
inc
xor
add
jno
shll
int
xchg
mov
xor
loope
lret
cmp
cmpsl
dec
or
test
loop
push
mov
cmp
push
idivb
or
test
xor
mov
pop
dec
or
or
out
cmp
mov
inc
lret
fcoml
and
sbb
jae
cltd
fstl
mov
push
test
add
divb
add
std
mov
mov
sahf
into
mov
and
loopne
xchg
sbb
mov
cmpl
and
out
std
add
mov
mov
mov
xchg
pusha
mov
sbb
mov
dec
int
shl
pop
pop
movsl
lcall
fldpi
dec
jbe
std
clc
sub
xchg
push
lcall
jmp
orb
push
sub
and
ds
lds
or
adc
mov
cmp
rclw
movsl
push
add
daa
nop
ds
push
mov
dec
xchg
in
movsl
jns
adc
repz
sbb
cmc
testl
jmp
xor
cmp
xchg
sbb
sub
cwtl
xchg
sbb
inc
inc
notl
push
loope
pusha
notb
pop
movsl
jg
repz
out
fiaddl
iret
test
jmp
inc
outsl
std
xchg
ret
adc
cmp
pop
sahf
filds
rcll
iret
jb
icebp
push
imul
shl
push
daa
mov
push
pop
leave
sub
dec
fld
enter
mov
dec
repnz
sbb
jmp
push
cmp
pop
sbb
outsl
xchg
dec
add
out
jae
mov
iret
jnp
shll
jnp
mov
test
dec
and
sbb
lods
or
push
imul
add
and
mov
shrl
pop
cs
lock
rcrl
cmp
stc
add
ljmp
sahf
lret
jl
push
jle
or
lahf
xchg
call
cmp
add
scas
xchg
push
cs
dec
out
arpl
push
repnz
mov
neg
mov
es
lods
xchg
hlt
mov
in
mov
test
dec
sbb
movaps
mov
xor
sbb
cli
iret
add
pusha
out
sub
lods
aaa
jmp
inc
add
outsl
inc
cmp
sub
pop
jl
and
test
adc
add
add
cmp
gs
imul
in
popf
mov
lahf
sub
jl
mov
push
add
adc
and
lcall
mov
push
cmp
cmp
leave
or
push
push
stos
mov
sti
aad
das
or
rclb
call
sti
cmpsb
or
sub
jg
mov
sub
icebp
and
xchg
cmp
inc
scas
or
pop
dec
addr16
pop
pop
ja
push
mov
xor
xor
or
mov
jbe
rcr
inc
push
xchg
popf
je
cld
xlat
xchg
dec
aam
add
xor
iret
mov
cmp
adc
je
fs
addl
scas
sahf
arpl
and
cmp
add
pop
jbe
sti
jmp
mov
out
adc
mov
je
pop
jg
mov
popf
mov
pop
fidivs
ss
mov
addr16
lods
mov
in
inc
xchg
lahf
bound
neg
das
cmpb
push
xchg
in
mul
test
xor
and
dec
and
test
fistps
test
dec
in
out
fistpll
pop
movsl
test
rcrl
sahf
ljmp
sbb
nop
xchg
nop
scas
loope
mov
shll
add
mov
cmp
rolb
outsl
cmpsb
jle
push
push
sbb
mov
mov
movsl
xor
icebp
sub
ret
jecxz
sbb
dec
add
add
mov
inc
insl
sbb
les
and
inc
scas
aaa
mov
pop
lds
pop
jnp
cs
fnstcw
mov
aad
push
out
enter
mov
nop
fcmovne
inc
pop
adc
mov
jbe
push
jne
mov
popf
std
enter
aam
in
leave
nop
push
pand
add
and
ret
pop
mov
sbb
xor
cmpsb
xchg
icebp
sbb
xchg
sub
int
dec
push
enter
jmp
push
xchg
dec
jle
add
sub
or
mov
xchg
sbb
cmp
pop
sbb
in
xor
popa
adc
xchg
mov
pop
out
in
push
xor
shl
dec
mov
mov
addr16
pop
xchg
jmp
xchg
sub
mov
jns
xor
jmp
xchg
lods
rol
mov
fidivl
sbb
push
cmp
mov
lret
sbb
mov
push
aaa
jp
mov
adc
insl
mov
mov
and
dec
cmpsb
pop
out
popf
test
enter
cli
in
push
ficompl
stos
and
popf
jo
ret
sbb
movsl
inc
or
and
xchg
imul
pop
scas
dec
mov
cmp
fiaddl
loop
push
gs
pop
repz
mov
inc
push
lret
push
push
mov
cltd
fwait
loop
pop
sti
push
push
pop
test
inc
mov
mov
sahf
cmp
data16
shlb
mov
shlb
xchg
test
or
in
xchg
scas
dec
incb
sub
sti
or
fmull
popf
es
and
aaa
cmp
sbb
push
loop
inc
push
mov
xchg
shrb
pop
fbstp
sub
les
jle
pop
dec
out
fiadds
leave
cltd
fstps
push
add
lods
or
mov
push
sub
jo
in
out
mov
xchg
cli
push
cld
jbe
ucomiss
and
repnz
inc
mov
inc
sbb
dec
cld
addb
mov
xchg
in
popf
pop
test
sbb
adc
ljmp
xlat
dec
js
dec
leave
and
in
push
cwtl
jnp
sub
dec
fnsave
outsl
ds
jp
xor
xor
test
push
ljmp
sbb
and
mov
ret
mov
push
hlt
push
mulb
orl
daa
mov
jb
dec
cmp
adc
incl
cbtw
lods
mov
and
xchg
jge
xor
lea
sbb
fistps
ljmp
inc
mov
jle
jmp
add
pusha
sub
xor
mov
sub
out
js
xor
add
sbb
pop
fs
mov
dec
movsb
loope
xchg
jno
lret
push
dec
lcall
or
repnz
dec
aaa
xor
adc
inc
push
mov
pushf
imul
xchg
xchg
xor
jecxz
lods
fldl
or
in
inc
aaa
pusha
loope
adc
jns
mov
cmc
or
mov
add
bound
or
pop
pop
mov
mov
stc
int3
loop
mov
mov
sub
test
adcl
push
jno
or
lods
lcall
pop
mov
fldcw
in
icebp
cmp
xchg
dec
push
dec
fldl2e
lea
mov
aas
jb
std
dec
push
es
arpl
mov
cmp
jg
add
cmp
inc
pop
jecxz
adc
dec
add
lods
test
push
fdivrs
push
sub
movsl
push
add
jp
mov
jno
pop
icebp
pop
mov
insb
push
jne
daa
mov
in
js
call
loopne
or
stos
call
daa
in
imul
call
jo
jl
inc
cli
pop
test
jbe
or
adc
xor
fwait
push
pop
jmp
lcall
sahf
int
xchg
mov
imul
shll
addr16
loope
add
outsl
inc
fmuls
int3
icebp
lret
pop
xchg
mov
rcrl
and
mov
adcb
cmp
mov
fcoml
fnstsw
push
jmp
lods
cmp
jmp
ja
dec
sahf
or
shrd
cli
dec
insb
xchg
shrb
mov
xchg
fldl
aas
dec
mov
xchg
leave
xor
pushf
and
jle
lods
inc
mov
mov
stos
and
mov
push
or
add
gs
push
xchg
cmc
leave
push
or
sbb
and
xchg
mov
jg
mov
pop
dec
or
js
jl
mov
sbb
shl
aad
mov
movsl
dec
sbb
inc
push
inc
jge,pn
out
cli
hlt
jns
outsb
jle
cmp
push
std
xchg
jmp
xchg
jge
sbb
add
lret
in
inc
call
lods
into
cmpsl
dec
and
mov
push
jnp
stos
fwait
mov
adc
cwtl
xor
jecxz
loop
push
enter
pop
inc
mov
xchg
xchg
loope
clc
ljmp
and
adc
or
xchg
sub
int
add
imul
pop
pop
pop
and
addr16
jbe
aas
imul
sti
mov
push
sbb
fucomi
pop
addb
int
insl
cltd
addl
hlt
sbb
das
out
add
jo
test
xor
pusha
andb
gs
adc
push
mov
push
or
mov
aaa
adc
fs
push
fisttpl
push
pop
sbb
test
mov
adc
or
enter
cli
mov
mov
pop
xor
mov
call
cmp
and
mov
xchg
sbb
add
or
sahf
push
push
inc
fidivrs
push
mov
sbb
fnstsw
mov
inc
cmp
inc
inc
mov
mov
movswl
xchg
jae
push
cmpsl
push
mov
push
xlat
xchg
jno
mov
adc
dec
xor
ljmp
jae
inc
adc
mov
mov
or
cmpb
les
loopne
out
sahf
sub
into
sbb
pop
enter
fsubl
mov
aam
shrb
mov
xor
test
gs
pop
xlat
aas
push
mov
in
sbbl
leave
mov
xchg
xor
ret
lret
lret
fisubrs
dec
dec
xchg
clc
and
inc
fildll
call
mov
mov
mov
or
sbb
mov
push
and
movsb
mov
fwait
clc
out
jno
lret
mov
push
bound
jmp
jecxz
loop
xor
cmp
pop
sbb
ljmp
out
fwait
push
lret
push
hlt
adc
push
stc
fdivl
push
lds
push
cld
dec
pop
sbb
fldcw
xor
and
sub
in
xchg
imul
pushf
cli
jo
jbe
mov
jnp
xchg
mov
data16
push
add
ret
push
shrl
push
sub
leave
sbb
sub
sbb
jbe
loop
std
sbb
int3
push
xor
inc
jns
mov
xor
int3
ds
and
sahf
adc
pop
mov
and
cmpsb
pop
add
pop
dec
fs
in
dec
iret
mov
push
dec
mov
out
mov
out
aam
pusha
inc
rorl
stos
jg
and
sarl
sbb
sub
mov
dec
iret
push
nop
aas
dec
rorl
popa
add
pop
add
inc
out
xor
xchg
sbb
lods
mov
in
and
ror
imul
mov
dec
mov
sbb
adc
inc
cmp
mov
dec
sub
pop
cmp
push
adc
jge
data16
jno
xor
or
cwtl
sbb
jo
pop
cmp
out
mov
jne,pt
sbb
stos
mov
sub
mov
cmp
arpl
pop
js
push
jge
into
jbe
mov
movsb
sub
in
rcrl
sub
mov
xor
xchg
cld
das
scas
es
into
dec
aaa
inc
jns
inc
mov
addr16
and
add
cmp
cmp
xor
jecxz
jo
fcmovbe
dec
jb
xor
fisubrl
inc
stc
iret
ljmp
fdivs
or
mov
push
in
pop
lods
pop
stos
lcall
inc
fxch
pop
pop
movsl
shlb
inc
scas
into
xchg
dec
lea
mov
adc
sti
cmpsl
aad
jbe
add
pop
adcl
inc
cld
adc
mov
add
or
push
lds
fimuls
test
add
xlat
mov
sub
ds
sub
push
push
pop
adc
xchg
sub
stos
add
cwtl
lahf
sbb
aad
push
add
movsl
outsl
js
pushf
jg
cmp
push
adc
out
cmp
add
and
std
mov
adc
cmp
and
dec
sub
mov
shll
shlb
mov
jg
dec
ret
mov
mov
outsl
lret
cmp
jg
jl
lea
sbb
shlb
adc
aas
mov
jp
cmpl
iret
testl
cmp
mov
jge
jno
and
push
loopne
cmc
push
movsb
insl
add
mov
cmpl
xchg
fs
lods
jmp
mov
mov
ds
xchg
sbb
sar
cmp
and
lock
or
cs
repz
scas
jg
stc
es
pushf
lret
xlat
or
push
xchg
pop
jle
xor
xchg
cmp
add
inc
subl
adc
into
or
cmc
in
inc
mov
xor
shlb
clc
cs
gs
jne
inc
push
call
and
iret
idivb
ljmp
and
test
fcomi
test
push
mov
sub
cld
frstor
cwtl
shlb
mov
loop
cmp
fcompl
jp
add
inc
aad
push
cltd
adc
in
dec
repz
push
in
fldenv
mov
add
xchg
call
pop
outsl
xchg
mov
adc
js
add
ret
bound
sub
imul
ret
jp
mov
je,pn
pop
cmc
push
jmp
cmp
xchg
dec
sub
pop
subb
lods
imul
mov
cmp
cs
push
mov
cs
mov
push
arpl
push
and
ret
jmp
div
sub
orl
add
mov
into
add
add
push
sub
jecxz
mov
inc
insl
pusha
xchg
psraw
mov
mov
inc
lahf
jnp
pop
dec
lods
mov
cwtl
into
jp
lods
pop
nop
popa
call
and
cmc
mov
push
add
out
sub
or
cmp
mov
mov
cmpsb
aad
mov
rcrb
jl
mov
xchg
xchg
xor
mov
mov
cs
jae
stos
in
outsb
movsb
rcrb
out
ret
or
jecxz
sbbl
mov
mov
in
sbb
out
sbb
sahf
mov
push
popa
adc
adc
xchg
lcall
ljmp
lds
pshufw
dec
test
call
sbb
pop
outsl
movsb
nop
mov
pop
adc
xchg
dec
jns
jle
movsb
xor
hlt
test
aaa
bnd
int
mov
and
out
outsl
or
push
sbb
lods
inc
hlt
leave
xor
sub
add
icebp
aad
lret
icebp
push
daa
stos
lods
fcoml
push
in
xchg
xor
mov
add
and
fs
inc
ljmp
out
xorb
xor
movsb
xor
lret
sahf
inc
xchg
add
add
dec
scas
jno
iret
mov
scas
pop
xchg
mov
add
dec
jbe
mov
jnp
jge
je
mov
push
cmp
fwait
daa
lock
int3
sahf
adc
je
or
xlat
test
mov
push
mov
mov
inc
inc
insl
pop
out
imul
fs
fs
loop
sbb
mov
mov
jmp
mov
div
jnp
xlat
rolb
pop
sub
mov
fcompl
popf
mov
imul
mov
ret
sub
ja
xchg
das
cmp
lcall
std
movsl
jmp
or
sbb
dec
loopne
xchg
pop
sti
jmp
push
es
movsb
or
sub
loopne
cli
xchg
fldt
push
loop
cs
sbb
or
lds
pusha
subb
push
push
insb
lock
jno
sti
fbstp
sarb
int
push
enter
sbb
icebp
les
cmp
xchg
jo
leave
test
and
dec
sub
jge
int3
popa
jmp
push
int
push
sbb
pop
xchg
lods
inc
les
xlat
clc
or
aaa
dec
dec
push
add
ret
bound
lret
orb
jmp
mov
fisttpl
add
mov
pop
jle
and
mov
xor
fcmovnu
push
adcl
pop
xchg
addb
pop
push
adc
mov
inc
fsub
sub
mov
ss
jle
addr16
mov
mov
scas
add
popa
xor
cmp
popa
push
lods
push
cld
call
lret
movsb
mov
inc
icebp
sahf
lcall
or
xchg
popa
add
repz
inc
xchg
movsl
ja
lods
ftst
jbe
inc
orb
mov
imulb
repnz
inc
pushf
push
jp
xlat
sub
ja
lcall
and
inc
out
out
into
cmp
enter
mov
in
xchg
pop
sbb
loopne
mov
out
push
xchg
rolb
xor
lea
insl
ret
mov
push
shr
sub
dec
cmc
mov
dec
je
or
mov
scas
or
add
sub
clc
cmp
cmp
xchg
psubusb
icebp
imul
aad
nop
push
inc
nop
dec
push
cmp
mov
push
loop
pop
pop
js
in
add
pop
je
mov
loop
jl
jae
in
loopne
pop
cs
push
test
add
icebp
pop
lahf
aad
dec
popa
in
fsubl
mov
das
lods
out
int3
shlw
je
loop
jb
ss
mov
dec
mov
pop
jb
dec
test
sub
scas
in
sbb
sub
adc
lock
int
in
lret
sub
xchg
cmp
nop
xor
mov
daa
pusha
insl
xchg
outsl
mov
test
mov
jp
in
stos
pop
rcl
popa
jae
inc
mov
nop
adc
pop
iret
cmp
ss
jno
js
push
jno
add
push
lgs
dec
js
mov
jg
orl
xchg
jo
rol
add
popa
stos
push
mov
pushl
arpl
inc
mov
mov
nop
inc
mov
imul
aaa
aam
push
loopne
addr16
iret
cmp
rcrb
mov
out
sbb
xor
cmpsl
push
std
pop
out
mov
add
sub
xor
stos
cld
jmp
push
call
enter
push
js
mov
pop
and
mov
lret
popf
loopne
jecxz
out
sub
bound
pop
cmp
rcll
ror
sub
daa
jne
mov
sub
std
nop
test
sub
imul
ds
inc
loop
lods
pop
mov
and
mov
add
xchg
sub
scas
or
and
lods
int3
ljmp
cmp
js
pop
nop
cli
addb
mov
sahf
in
cwtl
inc
and
fildll
cmpsl
fisttpll
decl
cmc
inc
in
cmpsl
mov
jle
xor
in
dec
arpl
mov
fsubp
pop
dec
aaa
loop
mov
ret
lods
and
mov
xor
pop
mov
cld
xchg
loope
cld
xchg
jnp
push
outsl
lret
jne
cmpsl
aad
andl
nop
sub
push
loopne
movsb
test
push
cli
dec
jbe
jb
dec
push
ljmp
cmp
dec
bound
add
mov
fs
mov
adc
out
jmp
push
mov
inc
int3
mov
lock
inc
shlb
mov
mov
add
mov
or
das
sub
pop
repz
jae
push
xchg
loope
cmp
jae,pt
stos
test
repnz
inc
jmp
lret
addr16
mov
bound
int3
cs
and
pushf
jge
cmpsl
pop
mov
roll
cmp
mov
dec
sbb
das
fists
or
add
ja
popf
inc
ljmp
mov
repz
push
mov
imul
pop
sbb
cmp
pop
mov
in
data16
aaa
adc
rcll
mov
ret
adc
jecxz
subl
jge
sbb
add
out
lret
ja
jp
xchg
adc
scas
sbb
arpl
xchg
push
les
pop
push
push
xlat
cmp
fwait
enter
mov
mov
in
mov
cmpl
out
xchg
sbb
add
mov
sub
mov
push
mov
pop
test
xchg
jmp
mov
outsb
or
clc
mov
pop
push
imul
or
dec
sbb
adc
cld
scas
push
adc
jb
fstpl
ljmp
jp
dec
fs
push
dec
ds
xor
jge
imul
sub
add
pop
aam
mov
je
inc
and
xchg
mov
jno
sub
dec
sub
inc
cmp
int
pop
fnstcw
cmp
push
addr16
mov
pop
ljmp
dec
insl
jge
call
lock
int
pop
jmp
dec
mov
scas
or
jmp
loope
xor
adc
test
jns
and
div
xchg
pop
loope
push
pop
and
inc
jb
mov
sbb
mov
dec
shlb
loopne
lret
ret
ljmp
lahf
out
and
in
mov
dec
sub
repnz
push
in
out
adc
and
pop
clc
in
test
out
or
lds
ljmp
sub
mov
add
or
fcmovbe
ss
sbb
sbb
mov
mov
sbb
fwait
adc
mov
and
jbe
in
aas
jge
repz
lods
xchg
pop
rolb
mov
cmp
outsl
imul
cmpsb
idivl
mov
adc
rclb
and
lea
jno
inc
lock
fldt
push
fistl
rclb
push
fmull
out
cltd
icebp
sbb
filds
test
aam
int3
hlt
ret
sbb
push
inc
adc
imul
adc
int
orb
fxch
push
pop
loop
nop
pop
dec
sbb
je
sub
jns
jae
test
and
push
inc
mov
and
sub
xchg
mov
jle
adc
and
sbb
out
clc
mov
or
sub
movl
mov
in
sub
dec
push
xchg
jp
fs
roll
arpl
cmp
imul
mov
jae
mov
or
and
push
jmp
ss
fidivs
xor
test
repnz
jbe
dec
and
cwtl
pop
movsb
pusha
mov
jb
das
inc
xchg
or
dec
mov
add
xchg
sub
pop
add
or
mov
stos
fnstsw
xlat
rorb
ljmp
ficompl
ds
mov
mov
xchg
sub
push
jns
sub
or
loope
add
aaa
lahf
dec
mov
mov
pushf
fcmovnb
pop
pop
ret
mov
addr16
mov
jl
sub
or
xchg
call
mov
loope
ss
out
mov
into
xor
cmp
fidivl
inc
imul
adc
and
dec
das
js
push
stc
addr16
ss
repz
dec
sub
lret
and
jg
xchg
test
rcl
test
stos
dec
jecxz
pop
addr16
xchg
jecxz
xor
pop
out
pusha
jno
sti
popf
push
mov
dec
fdivr
adc
loop
mov
and
movl
jno
daa
jne
mov
xor
dec
push
mov
sub
sub
jmp
push
bound
ror
jge
lahf
sahf
mov
mov
jl
jp
cmp
orl
or
shlb
aas
and
int
dec
out
cmp
sbb
pop
out
push
in
sub
cmp
sub
test
les
and
insb
jnp
xor
aaa
xchg
mov
push
mov
in
lret
pop
imul
inc
add
cmovp
lods
dec
jl
add
sbbb
dec
scas
add
ficomps
mov
add
cmp
mov
xchg
aad
data16
ss
cmp
and
push
adc
test
int
push
arpl
jg
es
cmc
jnp
bound
js
insl
out
cmpb
inc
mov
stos
sbbl
mov
xor
dec
fcoml
lret
movsb
dec
dec
xchg
mov
xchg
and
mov
insl
sub
loop
sahf
hlt
lahf
pop
adc
bound
divl
xchg
movsl
cmpsb
pop
test
and
mov
movsb
inc
out
stos
cmpsb
outsb
mov
inc
mov
mov
into
out
add
sub
xor
fnsave
cltd
movsb
mov
scas
pop
cmp
dec
movl
out
pop
dec
pop
js
hlt
mov
stc
sbb
pushf
insl
mov
fnstsw
rcrb
dec
xchg
and
cld
add
jb
shll
call
add
in
sbb
and
dec
cmc
inc
xor
shrb
sbb
rcll
outsl
movsl
mov
outsb
xor
mov
sbb
aaa
add
lret
adc
rcr
xchg
cmp
test
inc
sbb
aam
icebp
mov
outsl
mov
lahf
loop
add
mov
xchg
mov
push
cmp
adc
mov
pop
hlt
jae
mov
inc
sbb
shll
in
or
xorl
daa
ds
or
sbb
fisubrl
push
sub
xchg
test
jmp
and
and
std
mov
setns
aas
pop
push
and
xor
in
mov
lods
out
jmp
mov
repnz
outsb
cmp
sub
sahf
jb
aaa
pop
sub
imul
mov
jnp
inc
adc
and
ficoml
negl
and
xchg
mov
addr16
or
cld
sbbb
inc
cmc
out
xor
out
xchg
aad
in
out
push
sub
push
adc
hlt
and
icebp
test
hlt
xchg
jbe
dec
aaa
je
mov
adc
dec
lock
and
sbbb
push
sub
cmp
out
fwait
mov
les
aam
std
push
and
xor
adc
rolb
pop
shrl
test
insl
jbe
rcll
insl
gs
cmp
or
and
push
xorl
mov
cmpsl
push
pop
test
int3
push
dec
out
or
cmp
and
dec
lea
hlt
inc
fwait
pusha
adc
mov
xor
iret
movsb
mov
pop
movsb
dec
lahf
mov
scas
sti
pop
pop
fisttps
ljmp
cmp
sbb
or
repz
loopne
xchg
js
imul
pop
insl
jg
shrb
ss
add
rclb
xor
out
sti
test
cmpsl
mov
fistps
mov
lret
pop
int
loope
jle
gs
jnp
sub
mov
stc
fnstenv
inc
sti
push
inc
fbld
cmpl
outsb
call
jbe
push
dec
mov
hlt
adc
and
enter
inc
mul
testb
and
cmp
mov
and
mov
das
divb
push
stos
test
cltd
pop
aaa
xchg
andl
mov
jge
pop
add
lods
adc
scas
subb
cmp
gs
add
js
jecxz
es
fiadds
cmpsb
cs
or
push
pop
add
pop
mov
fdivl
inc
push
pop
cmp
xchg
push
inc
daa
lret
test
adcl
lods
sahf
testl
push
xor
sub
lock
lea
sbb
jnp
int3
lret
add
add
adc
xchg
js
pop
testb
xchg
or
popa
lret
lret
sub
shrl
inc
pandn
xchg
add
mov
ret
add
or
sub
sbb
xrstors
cmp
jl
loop
or
xor
xor
push
aam
mov
push
add
mov
cltd
das
inc
inc
jge
push
sub
les
fs
shlb
fldenv
jl
mov
pop
xchg
inc
push
imul
cmp
loopne
les
fld
fisubrl
pop
or
mov
or
xlat
mov
adc
loope
cmp
jmp
imul
outsl
push
add
lcall
repnz
test
jl
mov
shrb
mov
out
jns
fisubs
and
ss
ficompl
push
jns
lods
shl
push
mull
push
mov
sti
nop
inc
std
sub
shlb
cltd
insl
or
enter
and
iret
fsubrl
xor
pop
xor
pop
fs
mov
ljmp
cltd
xchg
pop
sbb
cli
das
push
push
inc
mov
es
mov
out
xchg
pop
bound
or
sbb
lods
push
jle
test
outsb
xchg
or
clts
push
in
outsl
add
lea
ja
shrl
pop
out
inc
ljmp
shl
std
push
out
pop
push
je
andl
pop
and
pop
mov
aaa
adc
insb
mov
scas
pushf
fimuls
js
mov
setle
xor
push
loope
lea
stc
hlt
imul
sub
push
add
pop
cmp
cmp
mov
repnz
mov
jne
xchg
mov
dec
jp
push
xchg
fmuls
rorl
je
add
fsub
in
push
cmpb
lds
cld
scas
insl
sbb
mov
insb
mov
in
inc
in
out
xchg
mov
pusha
fistpl
push
xchg
jnp
push
pushf
aam
pop
das
and
aam
push
mov
push
add
xchg
inc
push
and
jo
jge
adc
push
cs
push
or
cmpsb
or
mov
mov
mov
mov
in
in
pop
imul
les
or
mov
icebp
mov
popf
sti
int3
adc
cwtl
and
jmp
and
xor
xlat
xchg
bound
sbb
aaa
pop
push
insb
cmpsb
loopne
add
in
fisttpl
add
cmp
shll
clc
mov
ljmp
shl
inc
jo
cmpsl
mov
mov
fldenv
popa
stos
scas
sbb
mov
scas
xchg
push
outsb
pop
ds
or
mov
addr16
push
js
es
std
push
mov
fabs
or
daa
sahf
ljmp
cwtl
popa
dec
imul
mov
xchg
dec
in
mov
rclb
aas
aas
aad
cmpsb
fiaddl
adc
push
push
mov
shll
repz
leave
mov
fmull
mov
repnz
push
sbb
aam
daa
and
andb
call
sbb
leave
mov
mov
jb
dec
sti
stos
mov
add
aad
jge
xor
jecxz
push
fdivs
sub
adc
xor
int3
leave
inc
push
aaa
sbb
out
mov
popf
or
test
sbb
push
cmp
int
jl
stos
stos
sbbl
inc
stos
xchg
mov
test
mov
mov
sub
aad
stos
lods
xchg
ret
xor
bound
mov
rolb
lods
mov
les
les
cltd
and
out
adc
jo
mov
std
repz
and
push
negb
xor
in
xor
jp
movsb
sub
mov
imul
dec
ss
and
lcall
lcall
and
imul
sub
or
sub
push
xchg
mov
mov
jbe
imul
test
cld
out
sub
xchg
pop
jg
push
push
or
aas
call
cmc
std
stos
mov
mov
imul
std
xchg
aad
rcl
push
xor
jb
pop
xchg
and
push
dec
jle
inc
push
cltd
call
mov
fnstcw
fimuls
dec
and
insb
or
pop
xor
push
lret
mov
pop
popl
std
add
sub
adcb
shrl
inc
jae
fsubl
scas
popa
aam
sub
into
dec
and
push
jmp
jle
sbb
repz
in
outsb
jbe
lds
xorb
inc
clc
das
cmp
dec
pop
aam
scas
pop
sbb
sbb
lret
pop
or
mov
jle
js
ljmp
or
inc
xlat
sub
imul
pop
mov
cmp
and
test
es
dec
cli
pop
push
cmp
test
or
scas
mov
test
gs
xor
add
arpl
push
push
and
stc
cwtl
loope
xchg
and
dec
stos
repz
shll
mov
mov
pop
into
and
push
pop
adc
sahf
cltd
inc
pop
sub
out
push
rolb
add
xor
mov
mov
bound
dec
stc
enter
ret
sub
adc
jne
and
cli
fildll
cwtl
imulb
sahf
jb
call
lret
inc
in
xchg
mov
leave
jbe
outsb
ffreep
movsb
push
jmp
lods
loop
or
shll
popf
xchg
adc
daa
repz
movsb
pop
test
ljmp
push
sub
mov
push
das
pop
mov
aas
dec
sub
cmp
and
jg
or
xchg
clc
and
xchg
jbe
xchg
adc
lret
inc
jl
mov
cmpsl
inc
mov
cmp
xchg
xchg
add
xlat
mov
adc
mov
shrl
push
and
mov
pusha
ljmp
lds
mov
pop
cmp
or
xchg
lcall
lods
adc
and
cli
add
xchg
enter
fucomp
ret
push
jmp
sti
out
xchg
sbb
cli
mov
adc
shlb
inc
pop
cld
push
xor
xor
push
fsin
fsubrl
and
test
add
push
adc
push
je
jbe
dec
cmp
or
mov
test
adc
push
xor
lock
mov
pop
cmp
cmp
and
or
jle
adc
and
pop
or
sti
mov
sbb
lret
mov
sahf
inc
and
xchg
fcmovu
test
in
inc
stos
stos
testl
pop
aaa
sti
and
js
sbb
in
or
hlt
incb
fnstsw
inc
jnp
sti
push
mov
insl
cli
lods
and
push
push
cmp
std
xor
and
stc
or
je
lods
in
cmpsb
lret
call
in
xchg
lea
dec
addb
insl
lcall
xchg
js
dec
in
dec
pop
push
rep
jl
popf
inc
push
insb
xchg
and
and
das
dec
in
lods
dec
add
outsb
dec
mov
mov
test
xor
xchg
pushf
inc
arpl
pop
sbb
andb
imul
outsb
cs
fwait
test
out
addr16
lds
xchg
aaa
daa
jns
mov
pop
xchg
mov
xor
dec
mov
xor
pop
movsb
cmp
leave
jl
ljmp
jl
xchg
repnz
dec
adc
ror
jecxz
fwait
xor
loopne
or
popf
dec
xchg
js
xchg
int
add
lret
scas
xlat
je
popa
js
in
rcll
mov
imul
sbb
cmp
arpl
lods
push
ja
insb
testb
cmp
sub
push
enter
enter
xchg
cs
loopne
add
into
or
dec
pop
out
and
xchg
sub
pop
adc
dec
test
inc
cmpsl
in
inc
je
mov
rcl
push
mov
adc
lds
popf
or
mov
mov
inc
cli
cli
jns
lods
mov
outsl
adc
push
stos
std
add
fisubrl
dec
push
fldcw
pop
popa
pushf
dec
mov
xchg
stos
sarb
into
loopne
push
push
repz
js
movsb
shl
arpl
pop
popf
cmp
pop
fstpl
jg
inc
pop
sbb
push
test
out
pop
dec
into
lock
vcvtsi2sd
popa
inc
popa
sbb
mov
cmp
push
fsubrl
mov
pop
xchg
inc
pop
add
or
pushf
mov
pushf
cmp
jp
xchg
pop
int
pushf
pop
xchg
push
aas
mov
mov
jnp
ds
pop
pop
pop
ficompl
push
jbe
or
adc
mov
jbe
inc
cld
sub
sbb
push
imul
mov
popa
push
jno
xor
adc
stos
jp
mov
cmp
loopne
sarb
jg
and
push
lahf
fdivrl
stos
xchg
ljmp
in
or
jo
sarb
mov
push
pop
push
xchg
dec
sbb
mov
cld
sub
dec
adc
out
adc
jecxz
jnp
cli
cmp
pop
daa
inc
rcl
outsb
jge
push
mov
nop
push
leave
inc
and
mov
int3
cmc
push
ljmp
inc
fists
filds
gs
or
jge
adc
sbb
sub
pushf
adc
mov
dec
stos
int3
pop
loop
pop
sub
or
into
add
les
nop
or
lea
xchg
or
mov
lds
insl
shll
divb
std
movsl
inc
sbb
dec
push
ljmp
negl
in
xchg
push
shlb
dec
xor
shlb
pop
mov
loope
jmp
lcall
inc
loopne
movsl
jbe
scas
nop
jg
repnz
enter
xlat
inc
jg
lret
mov
jge
push
cmp
cmc
mov
bound
repnz
incb
pusha
scas
mov
shrl
sub
fisttps
xchg
cmovl
outsl
push
xor
clc
shlb
stos
in
rcrb
xor
adc
repnz
lods
fwait
jae
addb
arpl
mov
rcrb
out
out
mov
sbb
ror
movl
shlb
adc
mov
pop
jle
push
inc
pushf
jge
scas
dec
cmc
xchg
jb
out
push
pop
in
add
push
mov
imul
js
insl
clc
inc
scas
and
cs
adc
mov
pop
xor
addr16
push
mov
stos
dec
mov
pop
push
mov
dec
in
dec
jg
lcall
mov
shll
jb
cmp
jb
scas
sarl
xor
arpl
faddl
aas
mov
mov
lds
cmp
inc
cmp
xchg
nop
inc
les
loope
dec
sub
cmp
sahf
fcoml
ja
out
push
xchg
rcll
mov
inc
pop
dec
or
mov
popf
iret
adc
and
cwtl
aam
test
cmp
scas
push
insb
xchg
inc
push
sbb
pop
outsb
lods
jmp
adc
mov
adc
fdivp
dec
lods
mov
rclb
clc
repz
ljmp
push
push
insb
fs
dec
xchg
mov
mov
mov
jg
dec
pop
arpl
jle
jae
xchg
jne
inc
mov
xchg
xor
enter
shll
mov
jb
shlb
ret
pushf
inc
pop
inc
repz
icebp
or
sub
imul
test
shl
or
mov
add
jbe
mov
mov
rolb
cltd
push
andl
mov
xchg
imul
sti
shufps
lret
insl
mov
addl
filds
sbb
jmp
add
push
int3
cmp
hlt
jl
scas
dec
cmpsb
popa
cmp
mov
sbb
push
or
mov
outsl
nop
sub
das
push
aaa
sti
clc
test
pusha
aas
in
xor
pop
sbb
mov
xchg
std
aas
xchg
fldenv
inc
jb
add
repz
mov
mov
iret
loopne
cmpb
cmp
sbb
jge
xor
fidivrs
stos
mov
fisttpl
push
inc
scas
xchg
in
testl
shlb
cmp
pop
ja
push
repnz
push
inc
iret
cltd
out
test
pop
pop
fisubl
or
mov
mov
xor
jl
rcl
imul
outsb
out
pushf
dec
iret
pop
test
or
xor
xor
call
pop
test
adc
arpl
out
push
xchg
push
out
mov
test
adc
mov
mov
sti
push
fmuls
in
cltd
mov
xlat
in
inc
jo
push
jb
and
pop
jmp
mov
nop
cmp
jns
sub
push
xchg
xchg
shlb
cwtl
loop
pop
sbb
imul
xchg
xchg
mov
sbb
pop
pusha
ja
inc
mov
das
xchg
xor
lahf
cmpsl
movlps
popa
push
mov
push
test
bound
shrb
dec
push
cmpsb
sti
pop
dec
loopne
sub
jnp
daa
xchg
push
mov
lea
cmp
addl
pop
mov
cmc
sub
and
add
fcoml
adc
xor
je
cld
and
mov
sti
fbld
inc
mov
add
hlt
iret
outsb
xchg
inc
lds
pop
ficoml
mov
insb
cld
push
data16
icebp
mov
sub
stos
mov
adc
aas
je
out
dec
add
imul
ja
jl
mov
mov
pop
shl
jmp
push
imul
sbb
daa
sub
es
fisttpl
mov
test
out
xor
jnp
addr16
lcall
sahf
clc
scas
orl
mov
popf
mov
in
loop
xor
popl
fsubr
cwtl
add
mov
push
pushf
mov
lods
jmp
mov
rcr
cwtl
mov
mov
movsb
sti
loope
pop
pop
xor
and
lsl
jo
xor
inc
cs
out
jno
push
jmp
inc
cmovne
mov
dec
or
mov
mov
bound
or
test
mov
aad
movsb
dec
mov
fs
lds
adc
loope
cwtl
gs
inc
mov
xchg
data16
xchg
shl
push
xorb
sub
imul
into
inc
or
jne
dec
dec
jne
in
cmp
mov
xchg
push
dec
and
ds
mov
inc
xchg
dec
mov
cmp
das
pop
push
or
mov
out
push
xor
jmp
inc
add
clc
outsl
and
fs
jo
pushf
xchg
cmpsl
cwtl
repnz
xchg
mov
test
sbb
cmpsb
and
xor
xor
add
sbb
sub
xlat
fs
xor
jecxz
out
mov
sbb
das
sbb
je
xchg
stos
lods
or
push
and
aad
imul
insl
jg
adc
and
call
idivb
test
icebp
and
cmp
mov
aad
xor
mov
aaa
ds
fnstsw
popa
pop
inc
roll
in
push
pop
pop
adc
sbbb
cmp
mov
sbb
xlat
pushf
mov
and
mov
mov
addb
fwait
in
mov
in
inc
sub
lret
cmpsb
loope
cmp
call
mov
pop
out
xchg
cmp
lret
push
cli
jbe
sub
dec
mov
in
mov
popf
jmp
sub
sub
xor
shlb
mov
add
test
cmp
inc
sbb
idiv
push
cmp
adc
lcall
popa
aas
pop
ret
xchg
cs
add
mov
enter
aam
ds
sahf
loop
xor
mov
inc
xchg
pop
outsb
pushf
mov
and
pop
js
int3
pop
insl
les
ljmp
xchg
jae
pop
fs
mov
roll
cs
imul
jmp
aam
mov
push
dec
lds
pop
xor
jmp
test
in
and
dec
mov
jbe
pop
cmp
cs
ret
fs
aad
fcomps
ret
jnp
or
mov
adc
xor
sub
test
iret
scas
push
or
jb
in
sbb
scas
xor
into
sarb
adc
hlt
mov
cmp
mov
jbe
leave
and
lds
fs
xchg
mov
fistpl
jnp
sbb
out
inc
addr16
sub
sbb
jb
shll
clc
stc
cmc
movsb
cmpsl
and
push
pop
lds
movsl
jo
xchg
sub
jl
xor
xchg
insl
test
fnstcw
testb
je
ljmp
notl
mov
in
xchg
and
jg
mov
mulb
cmpl
icebp
ret
adc
lret
jle
xor
push
inc
sub
jp
jb
mov
arpl
dec
dec
repz
or
std
cmp
or
or
push
mov
jne
outsl
mov
and
psubq
lret
into
out
loop
adc
test
jecxz
mov
ljmp
pop
pop
cld
cmpsl
cs
mov
iret
push
xor
push
fs
mov
sahf
sbb
push
push
and
push
xor
shl
mov
test
or
mov
xor
out
mov
inc
push
mov
aas
mov
je
ss
xchg
insb
mov
push
scas
mov
jmp
fiaddl
dec
add
cli
jbe
xchg
mov
cmp
lret
ljmp
out
or
adc
icebp
push
or
movsl
fwait
leave
inc
sbb
and
pop
ret
push
add
xchg
xchg
out
xlat
dec
sbb
inc
pop
add
int
mov
nop
jle
mov
popa
cmp
ret
ret
xchg
xchg
jno
loopne
pop
imul
orl
sbb
ds
pop
sahf
adc
cmp
ds
stos
fidivl
fstps
add
adc
lock
push
cs
or
inc
pop
rclb
je
cmp
lods
mov
ljmp
dec
cli
xchg
xor
jne
xor
inc
lods
nop
cmpb
les
pop
cmp
inc
jge
rorb
push
gs
imul
xchg
cmp
mov
das
std
cs
sub
sti
adc
cmp
cli
jmp
por
mov
jecxz
imul
pop
and
fists
testl
jb
xchg
push
into
cmp
addr16
lea
leave
sub
ds
mov
stos
scas
xor
mov
hlt
loop
adc
std
mov
lea
orl
mov
stos
mov
loope
push
xor
and
inc
cmp
in
mov
sbb
and
shlb
pop
ret
ljmp
mov
mov
daa
sub
xlat
arpl
and
push
xor
jne
pop
rdmsr
or
rcrl
push
js
shlb
das
stos
xor
inc
mov
and
or
xchg
sub
mov
cli
xlat
sbb
sub
bound
push
add
jmp
and
xchg
xchg
mov
cwtl
lahf
push
inc
movsl
test
inc
xchg
xchg
fstpl
pop
pop
scas
icebp
xchg
mov
xlat
cmp
dec
jbe
xor
lret
sub
or
cmpb
sbb
shll
jnp
xor
popf
fistpl
push
scas
and
or
add
lods
scas
ror
ds
xor
inc
aas
call
push
call
dec
cmp
xchg
insl
out
xchg
fidivs
mov
dec
jo
mov
in
popa
in
xor
outsl
mov
xchg
pop
pop
xlat
push
int
pop
jns
sub
mov
call
gs
cltd
dec
or
addr16
inc
test
outsb
mov
imul
add
push
mov
or
push
insl
push
fwait
sub
mov
sbb
push
loop
inc
push
es
mov
and
dec
pop
data16
dec
xchg
repnz
adc
xchg
test
out
jnp
mov
pop
xchg
fs
pushf
dec
sar
mov
inc
sbb
adc
or
enter
sub
mov
stc
xchg
add
pop
jnp
sahf
dec
add
popa
ja
pop
into
mov
btr
sub
insl
xchg
xchg
mov
dec
cmc
cli
lods
bound
lea
dec
mov
shlb
pop
dec
mov
pop
mov
hlt
es
lahf
sbb
pop
fcoms
jl
xchg
pop
rorb
and
xchg
jnp
jns
mov
and
jbe
or
xor
imul
adc
push
lcall
fs
fbld
adc
lds
xor
popa
mov
mov
ljmp
dec
aaa
scas
inc
mov
cmpl
dec
or
pop
cmpsb
jmp
cmpsb
test
pop
out
sahf
cmpl
in
shld
scas
and
jecxz
inc
loop
fisttpl
mov
movsl
mov
test
cmc
insb
add
inc
in
mov
and
adcl
mov
mov
scas
push
adc
sub
popa
popf
push
loop
gs
loop
jl
mov
xlat
test
leave
jg
addr16
mov
cmp
jae
add
outsl
cs
loopne
and
add
stos
push
lret
sarb
dec
add
xor
out
movsl
xchg
pop
popf
dec
dec
push
jp
inc
or
inc
cmp
sahf
sub
cmp
sub
jb
test
cmpsl
or
outsl
mov
js
mov
test
nop
jbe
lock
push
mov
lea
stos
add
mov
pop
sbb
add
pop
rol
gs
gs
xchg
inc
mov
push
pop
loopne
addb
inc
popf
enter
mov
sti
push
jmp
fdivrp
les
or
or
mov
scas
ja
jo
int
pop
or
fldt
les
js
xchg
pop
cmp
mov
cmp
popf
jmp
imul
pop
adc
xor
cwtl
sbb
test
mov
arpl
dec
inc
xlat
rcrb
jp
daa
dec
ss
jmp
push
pop
inc
out
or
or
lea
jl
mov
push
mov
cmp
jo
push
or
loopne
in
mov
sub
daa
pop
adc
push
mov
test
test
or
and
mov
incb
push
adc
xor
cmp
popa
cmp
lea
out
enter
cmp
enter
and
and
jnp
mov
fidivrs
and
out
sub
xlat
mov
ds
adc
adc
dec
cmp
dec
lds
cs
dec
inc
inc
fistl
fdivs
xchg
das
imull
and
insl
dec
lcall
mov
adc
adc
or
imul
jns
jmp
xchg
pop
cs
jae
mov
imull
daa
cwtl
sub
fidivs
jg
jl
call
insb
push
lcall
cmp
icebp
xchg
push
jnp
add
clc
stc
dec
das
xchg
xor
xor
shll
mov
mov
and
popa
add
cmp
or
mov
out
sub
mov
mov
and
in
mov
ja
and
inc
dec
sub
bound
inc
daa
lahf
or
push
mov
lods
cmp
push
clc
xchg
push
pop
and
mov
xchg
lds
pop
push
jl
popa
sub
inc
xchg
jecxz
adc
fcom
push
arpl
push
dec
add
daa
cld
inc
mov
or
xor
leave
mov
lea
jmp
sbbb
mov
stos
es
mov
shll
ss
and
iret
jecxz
xchg
mov
lcall
roll
mov
outsb
outsb
jmp
push
aaa
xchg
sub
mov
mov
int
cmc
loop
sub
dec
ficompl
shlb
int
stc
pop
jp
in
jbe
mov
out
sub
enter
mov
lods
push
sbb
fwait
mov
push
or
es
cmp
in
xor
sahf
inc
fnstenv
pusha
push
rcr
mov
stc
fdivrl
cwtl
in
xorb
pop
fdivrs
hlt
xlat
stc
jae
in
jmp
andl
mov
sbb
lret
lds
xchg
adc
jge
mov
rolb
or
neg
add
mov
ret
and
xlat
or
sbb
adc
gs
pop
gs
mov
pop
push
cld
into
in
pusha
aaa
xchg
scas
movsl
imul
pop
push
mov
adc
mov
mov
ss
cmp
cmp
lret
dec
jmp
mov
adcl
dec
test
xchg
stc
mov
sub
in
test
lods
adc
sub
aad
scas
xchg
mov
lock
repz
outsl
lahf
mov
push
dec
bound
fwait
notb
data16
push
clc
and
shl
fidivrl
inc
push
icebp
aad
stc
xchg
and
pop
les
imul
xor
inc
das
mov
sub
push
or
fcmovu
xchg
fld
mov
push
xchg
repnz
sub
push
dec
pusha
dec
pop
std
in
jo
fs
test
inc
arpl
aad
xlat
adc
or
xor
xchg
out
mov
lret
cltd
sbb
ss
std
pop
inc
daa
les
divb
clc
icebp
mov
in
sub
jne
sbb
imul
enter
or
out
push
insl
ficoms
xor
jle
pusha
pop
stos
mov
fsubl
adc
test
pushf
jp
inc
jle
dec
add
inc
inc
sbb
les
or
insb
aam
das
pop
mov
mov
les
fld
or
jnp
movb
jge
clc
push
in
idiv
inc
or
add
mull
or
pop
mov
mov
stos
inc
mov
fists
push
fxch
pop
mov
xorl
filds
in
popf
in
add
pop
xlat
jno
dec
and
jno
icebp
pop
shr
leave
ja
jge
jecxz
xor
cltd
xchg
and
scas
dec
push
out
cmp
pop
push
adc
and
cmpsl
dec
les
fstpl
inc
mov
pushf
ret
lea
lahf
xor
outsl
or
subl
adc
inc
cli
dec
loopne
cmp
orl
sub
push
sub
xchg
addr16
dec
xchg
dec
filds
es
scas
lock
cmc
lods
sub
sub
xor
and
fcomps
lods
dec
or
jae
call
iret
loop
or
test
pop
sar
adc
push
push
cmp
fcmove
cmp
imul
mov
ficoms
leave
jle
out
insl
das
and
aas
aad
jno
cmp
loopne
pop
inc
mov
cmpsl
sbb
sbb
in
pop
sbb
mov
xor
bound
divl
outsl
test
js
sub
inc
fsubr
sahf
sbb
or
ljmp
shll
jp
push
insl
pop
lret
andb
mov
mov
test
pusha
adc
mov
cmp
sti
mov
inc
sbb
lret
dec
fldcw
mov
scas
lods
jnp
int3
nop
cmp
fcmovbe
add
pop
dec
mov
jp
xor
jnp
stos
fwait
pop
xchg
imul
loope
stos
pop
stos
pusha
int3
das
jno
js
and
out
inc
add
cs
add
xchg
pop
push
pop
hlt
dec
adc
sub
push
arpl
mov
cmpb
pop
inc
inc
sahf
rcrb
cmp
dec
subb
jl
popf
popl
and
aaa
lds
leave
data16
mov
or
loop
int
leave
or
and
in
fs
cmp
sub
dec
loope
push
lock
sti
mov
dec
jns
adc
jb
in
mov
jns
and
hlt
jl
mov
pop
push
shr
je
push
mov
sbb
mov
mov
test
cltd
and
ljmp
mov
rorl
mov
sbb
mov
push
outsb
xchg
lds
mov
sub
adc
xrelease
or
push
and
sbb
idivb
ficompl
dec
fsubr
out
mov
jg
pushl
jge
xchg
sti
push
inc
pop
stc
stos
sub
xchg
sarb
insb
mov
push
mov
mov
xchg
aam
insl
mov
pop
dec
lds
movsb
push
mov
dec
fistps
xor
xchg
lcall
fldt
pushf
sahf
jl
cmpsb
ljmp
das
adc
into
fists
add
out
pop
cltd
daa
cs
mov
mov
xlat
in
hlt
adc
push
divl
out
pushf
sub
push
push
jb,pt
sub
mov
out
dec
sbb
pop
jb
in
jl
outsl
test
or
sbb
mov
out
ja
adcb
sub
jmp
icebp
inc
mov
cmpl
or
jl
test
sub
sub
fs
dec
xchg
aad
add
incl
loope
inc
mov
outsb
cmp
pop
mov
jmp
rorb
daa
call
jl
ja
pop
sbb
movsb
push
add
push
xor
je
js
aaa
mov
lock
test
mov
pop
test
push
push
mov
rcr
icebp
push
loop
pop
das
aam
mov
xor
lea
cli
scas
divl
lret
xchg
mov
push
dec
xchg
adc
in
sbb
jg
popa
jl
stos
push
addl
xchg
jl
ss
xchg
sarb
xor
imul
insl
ss
sbb
push
repz
adc
xchg
push
imul
jne
xchg
idivb
aaa
ds
jbe
addr16
xchg
and
enter
repnz
out
sub
cmc
push
insl
addr16
scas
scas
pop
mov
outsb
stc
lea
xchg
adc
repz
add
sbb
imul
arpl
push
cwtl
jo
inc
in
sti
fxtract
pop
dec
xor
int
sti
lods
sarb
daa
fwait
movsl
push
or
lahf
mov
test
adc
imul
loopne
lahf
clc
repz
jmp
addb
mov
xchg
mov
xchg
push
iret
pop
movsb
insl
mov
ret
out
or
xchg
push
mov
xlat
dec
push
cmp
dec
test
lret
push
pop
ss
sbbb
push
add
stos
cli
inc
test
and
push
cld
sbb
xchg
inc
out
add
cmp
sbb
mov
sbb
pop
jbe
popfw
fistl
and
cwtl
and
jg
cmp
call
lock
fsubrs
dec
jnp
cmp
push
pop
in
xor
mov
or
test
je
pop
stos
add
icebp
sub
fistps
sbbl
dec
sbb
sbb
ficomps
scas
stos
push
fnstsw
outsb
fsubrl
popa
cmp
call
ds
aaa
mov
mov
pop
pop
xchg
add
shr
arpl
cltd
push
jno
shr
fwait
addr16
scas
sbbl
cmp
ret
stc
cmpsl
adc
in
jl
xor
mov
mov
outsl
xor
or
lds
add
movsb
jno
push
jns
dec
fcmovnu
jno
int3
js
adc
push
add
rcll
pop
and
movb
xchg
ret
aam
adc
sbb
xor
out
insl
dec
mov
mov
pop
sub
pop
or
cs
ret
and
insb
out
xor
push
lret
lcall
and
mov
movsl
std
outsb
pop
mov
lock
mov
cmp
cmp
inc
xchg
dec
mov
das
push
je,pt
dec
daa
dec
cli
shr
ret
outsb
test
mov
jns
gs
dec
xchg
push
stos
out
mov
test
mov
test
mov
inc
mov
jg
mov
sbb
fistpl
fs
rcrb
dec
imul
sub
jp
ja
xor
xchg
sub
in
nop
lods
cmp
mov
repz
ljmp
mov
cmc
or
and
xchg
adcl
stos
fistpll
push
dec
jl
addr16
sbb
add
stos
clc
aas
out
rorl
pop
pop
push
jl
les
js
xchg
lds
test
and
enter
fmulp
or
xor
arpl
adc
loope
dec
or
mov
xor
jecxz
mov
jae
and
xchg
repz
orb
jmp
int
inc
sbb
leave
lcall
aaa
sahf
pop
repnz
mov
mov
insl
rorl
adc
push
mov
int3
jl
push
add
sahf
cmp
mov
outsb
xchg
sub
addl
sub
mov
adc
incb
rcrl
enter
pop
fnstenv
std
int3
frstor
test
xchg
call
push
ds
jb
xlat
mov
push
test
pop
adc
incl
mov
jne
mov
jb
xchg
out
aam
or
out
adc
shlb
jo
rcll
cmp
out
xchg
stos
sub
mov
and
stos
sub
repnz
push
push
scas
mov
jo
andl
or
add
lcall
cmpsl
mov
jmp
jo
testl
xchg
dec
bound
or
pop
xor
aas
cmp
enter
loop
sbb
scas
dec
xor
arpl
push
and
add
xor
jae
jmp
dec
push
or
sbb
sbb
and
call
push
xor
gs
sbb
adc
fldt
xchg
xchg
pop
nop
inc
loope
adc
fstpl
outsb
mov
jmp
push
mov
jl
push
aam
int3
jecxz
jmp
outsb
scas
jne
arpl
popf
gs
dec
xchg
insl
cmp
lahf
sub
mov
cli
lods
sub
push
add
popa
imul
mov
mov
sti
jmp
push
sub
shrb
in
ret
andl
out
lods
xchg
inc
inc
rcrb
enter
shrb
adc
cmp
mov
aam
adc
jecxz
ret
push
dec
in
cwtl
hlt
fdivrl
outsb
aad
in
xor
negb
in
xchg
or
sbb
pop
cli
adc
xchg
adc
imul
loopne
icebp
movsl
cmpl
adc
pop
sub
arpl
mov
and
sub
nop
pop
gs
inc
cltd
mul
jne
adc
cmp
sub
push
mov
rcll
mov
cmp
pmaxub
lods
jecxz
imul
sti
sbb
inc
and
stos
mov
lret
inc
mov
push
cli
in
mov
jg
sub
sbb
cld
push
push
ss
mov
scas
lret
pand
data16
shll
xor
cli
out
fwait
pop
ja
adc
std
mov
repz
call
mov
mov
leave
mov
sub
ja
adc
pop
mov
sub
push
loopne
xchg
and
dec
cmp
stos
and
shlb
fldcw
incl
ror
inc
or
mov
insl
je
pop
adc
push
sahf
sub
in
mov
cli
and
test
mov
xor
mov
aad
jno
cmp
cltd
fld
dec
adc
xor
outsl
or
test
xchg
inc
inc
cmp
jae
inc
mov
sub
xchg
fldt
sub
pop
jnp
xchg
push
mov
imul
mov
inc
inc
in
dec
hlt
mov
push
mov
cltd
mov
xor
mov
movsl
xchg
imul
push
add
mov
sarl
outsl
sti
lods
xchg
clc
cmpsl
cs
jbe,pn
sbb
pusha
and
sbb
pop
xchg
push
jbe
push
imul
mov
loop
push
stos
cmp
sbb
xchg
addr16
test
ds
std
enter
mov
sbb
add
pop
enter
or
mov
in
ss
loop
mov
xlat
push
push
sbb
pop
out
jmp
arpl
jp
loope
xchg
pusha
jmp
lods
or
xchg
out
push
dec
loopne
andb
into
and
adc
pop
loope
dec
lret
icebp
inc
outsb
dec
fdivl
mov
dec
adc
ret
mov
aam
xor
pop
mov
fmuls
sbb
xchg
out
mov
push
or
hlt
jne
or
add
xchg
xchg
add
aas
fcoms
push
xor
sbb
add
lret
int3
and
in
sbb
xor
push
mov
or
pop
stos
icebp
mov
in
sbb
aaa
xchg
shl
mov
sub
outsl
xorb
push
jns
mov
mov
shrb
lcall
jmp
aad
push
dec
gs
dec
cltd
inc
and
iret
mov
outsl
sub
inc
dec
setle
out
out
cmp
sub
sbb
cmp
sahf
iret
sbb
aaa
in
rolb
dec
out
fcompp
ljmp
fs
shl
dec
mov
xchg
push
inc
loop
sbb
sbb
je
lret
scas
pop
push
pop
mov
mov
and
add
cmp
inc
cmp
jmp
sub
rcl
push
orl
ja
xor
in
test
loope
hlt
stos
push
mov
adc
sub
lret
mov
pop
mov
push
push
cs
ds
mov
add
mov
inc
ja
jl
cmp
das
fcmovne
xchg
or
dec
mov
icebp
fs
and
xorl
mov
mov
fbstp
jmp
xchg
mov
cmp
cmp
push
insb
sub
add
add
jae
sub
iret
ss
mov
cmpsb
mov
push
leave
addr16
push
std
mov
scas
dec
jmp
mulb
filds
addr16
hlt
into
std
pop
cld
ss
lret
out
test
idiv
xchg
xchg
out
and
push
loope
sbb
addb
jns
cmp
cmp
fbstp
rorb
cwtl
jo
scas
ficompl
or
ja
cmpsb
aam
xchg
lcall
lock
jecxz
sub
mov
adc
adc
push
xchg
imul
dec
flds
dec
dec
arpl
sub
xchg
push
les
pop
mov
inc
movsb
push
sbb
cmp
vmread
xchg
outsb
movsb
cmpsb
int3
test
cmpsl
inc
xchg
push
scas
ffree
iret
add
adc
mov
mov
enter
lods
and
dec
mov
outsl
shll
mov
cmp
arpl
inc
cltd
adc
fdivs
jnp
fwait
loope
lret
stos
aam
lds
mov
or
and
xor
sub
add
int
icebp
cmp
cmc
aaa
or
and
mov
ret
in
or
xor
in
shll
inc
out
rcll
or
xlat
pop
inc
in
addl
mov
es
cmpsb
and
fnstcw
je
adc
push
mov
mov
test
jne
xor
loopne
loope
push
mov
jecxz
or
xor
lods
dec
fisttps
int
jne
sti
ret
push
insb
lods
in
add
mov
shl
gs
adc
dec
cmpsl
loop
in
insb
bsf
lret
mov
mov
xchg
ds
push
pop
dec
movsl
mov
mov
aas
divw
push
adc
mov
jo
mov
push
mov
cmc
push
fstl
nop
sti
fmuls
arpl
xchg
icebp
add
ss
jae
cli
mov
cmp
in
lcall
rcrb
scas
mov
loopne
add
add
outsl
inc
ljmp
and
push
lds
call
mov
std
sub
into
mov
cmpsl
fistl
inc
mov
add
sbb
mov
les
sbb
aad
xchg
inc
mov
xchg
sbbl
rorl
mov
leave
and
dec
fs
lods
aam
lahf
gs
clc
data16
push
mov
push
xor
ret
outsb
addb
rorb
out
ljmp
arpl
ds
jo
sarb
ret
pop
mov
mov
aad
test
mov
and
and
or
test
notl
xchg
add
lret
scas
pop
add
mov
addr16
and
sub
outsl
popa
or
ret
repz
and
fildll
pop
lock
and
sub
adc
pop
pop
popa
lock
pop
icebp
aaa
mov
xor
fdivr
xor
pop
mov
mov
jecxz
jp
scas
fsub
adc
mov
mov
push
sub
push
xor
ficompl
inc
jnp
mov
lcall
std
xchg
mov
daa
adc
jno
imul
fildll
cmc
adcl
mov
xchg
in
mul
push
ret
add
xchg
mov
sbb
addr16
or
sahf
xchg
jl
mov
int
jne
xchg
aam
lret
je
add
daa
js
insl
sbb
and
fbld
and
or
mov
stc
les
jns
dec
dec
sahf
jns
pop
pop
xchg
sbb
mov
stc
inc
sub
subl
push
mov
xorb
or
dec
sbb
sub
fwait
or
jge
sbb
not
aad
mov
sub
lds
ret
jle
call
push
out
loopne
outsl
sbb
or
pop
pop
mov
xlat
jmp
inc
inc
lret
mov
mov
out
repnz
mov
mov
dec
xchg
icebp
sti
ss
mov
mov
sub
leave
add
int
aaa
repnz
pop
stos
xchg
cs
cmp
adc
xchg
push
gs
outsl
fnstsw
and
jecxz
add
sbb
add
lcall
pop
std
in
hlt
inc
test
pop
das
push
sub
or
add
les
sub
out
in
gs
inc
fisubl
and
add
aas
jmp
sbb
jno
divl
aaa
add
mov
fdivr
pop
scas
mov
mov
mov
orl
add
jae
push
or
push
sub
jl
sti
jl
sub
fisubrl
cmpsb
xlat
inc
push
xlat
mov
mov
movsl
call
fmuls
dec
movsb
mov
cmc
cmp
sbb
sbb
dec
fstps
cmc
cmpsl
daa
pop
cmp
movsb
or
neg
pop
outsl
xor
out
popa
rorl
test
test
sub
sbb
cmp
xchg
mov
jb
xor
sub
jbe
xlat
sti
cmp
add
add
ljmp
clc
dec
pop
jg
lods
cwtl
jl
cli
mov
lcall
in
dec
jl
pop
xor
inc
repnz
jo
cmpsb
jle
pop
add
sbb
sbb
sub
pop
in
les
push
push
das
xor
fldt
mov
sub
mov
push
sub
and
setae
popf
sub
mov
xor
out
jp
shlb
aaa
mov
mov
mov
xchg
pop
adc
mov
mov
popf
imul
in
pusha
xchg
mov
out
jne
lods
xor
pop
mov
cmc
push
imul
inc
adc
push
adc
shl
sbb
bound
aas
cld
push
mov
mov
ret
enter
call
sbb
nop
cmp
mov
pop
test
cmc
jl
rcl
and
iret
test
dec
dec
fstpl
mov
pop
xchg
adc
inc
scas
cmp
xchg
sahf
or
sbb
jle
rcrl
insb
jmp
insb
addl
push
bound
clc
nop
out
add
jbe
and
push
sub
push
add
out
cmp
leave
cmp
das
cmp
test
outsl
insl
cmpsb
adc
ffreep
ret
in
inc
sbb
add
lahf
inc
addr16
aam
jno
sti
sti
cmp
jp
int
mov
mov
sbb
sbb
mov
scas
aad
sahf
je
add
sub
clc
jmp
sub
cmp
dec
push
add
jae
les
cmp
loope
or
xor
aaa
sub
daa
mov
or
mov
push
xor
push
iret
jl
dec
mov
mov
mulb
mov
pop
jo
shr
sub
test
pop
xor
inc
std
xor
das
and
cmp
dec
out
adc
and
or
pushf
dec
sub
test
add
add
adc
mov
and
xchg
imul
xchg
mov
mov
push
stos
idivb
mov
or
test
xlat
sub
mov
es
xchg
stos
cmc
std
repnz
dec
add
fistpll
xorb
mov
sub
mov
addr16
add
lds
not
into
jo
pushf
dec
jmp
imul
xchg
hlt
and
insb
push
fldenv
fisttpl
imul
xchg
inc
lods
popa
rorb
out
pop
jae
aad
cltd
and
add
lods
into
rolb
repnz
ja
pop
sub
adc
ja
mul
pop
andb
in
sub
lock
cmp
ja
ror
mov
fcoms
push
shl
out
and
bound
sahf
test
cli
sub
lret
or
test
rclb
jae
xor
cltd
push
aad
insl
pusha
les
inc
sub
sub
fsubr
outsl
mov
mov
cmp
repnz
dec
adc
or
movsb
dec
or
incb
shl
mov
cmp
subl
dec
rcrl
jne
push
enter
mov
add
adc
push
inc
or
push
addr16
push
push
cltd
fdivr
sub
test
mov
mov
ret
adc
or
das
or
fsubl
stos
orl
pusha
outsl
dec
adc
mov
in
mov
push
rolb
push
enter
cmp
jb
dec
inc
jne
push
lea
push
or
mov
dec
popa
and
ret
mov
fisubs
sets
popf
mov
jne
pop
jns
or
inc
xchg
gs
cmpl
cmc
out
and
push
or
jp
rorl
enter
mov
or
mov
pusha
imul
fnstsw
sbb
insb
xchg
int
lods
loope
lds
sub
xor
daa
mov
push
and
cld
neg
jle
adc
popf
or
lahf
jle
adcl
cmp
leave
movsb
stos
push
push
add
aad
push
mov
out
xchg
cltd
lock
jmp
cmp
pushl
shll
push
pop
mov
adcb
lcall
bound
cli
lods
pusha
cmp
sbb
mov
into
push
pop
or
lods
push
in
aaa
mov
iret
jo
mov
sbb
mov
movsb
inc
pop
jb
leave
jmp
push
test
adc
or
jb
inc
or
sbb
xchg
push
mov
sarl
jle
mov
lret
cmc
sbb
sub
stos
stos
pusha
dec
pop
ret
jge
adc
xor
cmp
mov
popf
mov
daa
daa
inc
fcompl
cli
mov
push
addr16
dec
scas
fistl
inc
add
jp
add
les
gs
and
scas
sub
cmc
shr
aad
adc
imul
mov
sbb
ljmp
xor
addps
bound
jmp
enter
enter
aad
leave
imul
cs
xchg
mov
jecxz
inc
push
lea
test
fs
enter
sub
inc
lcall
add
in
mov
or
movsb
push
icebp
push
out
xchg
orb
imul
mov
sub
pop
int3
sbb
insl
mov
es
jne
icebp
stc
lds
dec
dec
cld
xor
imull
xchg
lock
lods
popl
repz
repz
ja
rcrb
gs
pop
outsl
je
jge
xchg
cltd
mov
out
pop
push
and
xchg
out
stos
pop
mov
sbb
jp,pn
scas
nop
imul
imull
cmp
jns
fnstenv
movsl
daa
into
sub
into
inc
jb
cmp
mov
push
lock
xor
sbb
cltd
pop
push
pop
int3
outsl
cmp
test
sub
in
ret
bound
xchg
pop
enter
dec
add
loope
rolb
dec
gs
movsl
out
shll
test
cs
std
addr16
cmpsb
leave
iret
mov
sbb
cmpsb
or
inc
or
pop
das
imul
and
movsb
mov
pop
or
mov
out
insb
roll
out
lds
in
xchg
enter
out
jle
sti
dec
add
mov
scas
repnz
test
jle
sub
dec
push
nop
movsb
popf
mov
adc
jo
cwtl
es
sbb
xchg
xchg
fwait
mov
lret
jg
sub
jo
adc
fimuls
shll
push
inc
insl
mov
jg
adc
test
sbb
and
add
stos
dec
add
push
loope
and
cli
xor
sub
lods
test
ja
test
and
inc
xchg
inc
je
negb
out
int3
add
in
push
jmp
mov
lds
mov
pop
pop
les
inc
in
aam
mov
std
adc
xlat
add
xorb
push
push
jle
xor
test
fnstcw
xlat
imulb
imul
mov
xlat
and
cmpsb
and
mov
mov
jmp
cmp
xchg
pop
dec
ds
cmp
lahf
cli
xor
cwtl
cwtl
ret
lret
jno
pop
nop
fisubs
mov
in
data16
sarl
mov
pop
xchg
inc
sbb
mov
outsb
in
cmp
pop
xchg
cltd
xchg
lahf
jno
push
push
popl
in
fwait
mov
aad
mov
minps
and
jb
pop
sbb
or
in
mov
popa
inc
inc
cmpb
dec
or
ds
inc
mov
popa
and
lods
ss
mov
dec
andl
dec
adc
inc
jae
rcrl
adc
addr16
push
fisttpll
ret
xor
dec
out
mov
aad
shr
test
add
push
add
inc
aam
xchg
pop
test
jae
les
cmpsb
test
lcall
ljmp
mov
scas
lahf
shlb
jg
cmp
mov
mov
aam
sub
or
int
icebp
hlt
dec
inc
subl
icebp
movsl
dec
mov
aaa
pop
outsb
and
xchg
call
dec
adc
jge
xchg
push
push
sub
shlb
leave
popf
stos
xor
fwait
push
cwtl
out
loopne
xchg
lret
mov
xchg
pop
mov
mov
jb
aaa
sbb
clc
aam
or
sbb
lea
push
loope
mov
and
dec
movsl
adc
adc
or
sahf
stos
insb
stos
js
lock
mov
aam
cmpsb
jmp
repnz
inc
cs
sub
fs
sbb
out
xor
in
add
dec
jge
test
stos
mov
cs
or
push
mov
stos
nop
cmp
repz
cmp
jg
fsubrl
sti
xor
inc
test
out
mov
jmp
sub
adc
sahf
lds
int
ficoms
int
stos
loopne
pop
ja
ja
jne
cs
or
xchg
lock
shll
mov
insb
xlat
rcll
pop
mov
mov
lret
subl
jg
jle
test
rcl
arpl
iret
les
ss
lret
xchg
mov
or
sbb
dec
daa
inc
int
sub
fldl
and
fisubs
xor
push
clc
sub
mov
call
test
pop
mov
sub
pop
jecxz
popf
sbb
or
rcrl
iret
popf
dec
mov
test
aad
into
out
cwtl
mov
mov
xor
insl
inc
lea
mov
jmp
lcall
mov
decb
or
jne
stos
aaa
mov
cltd
xchg
inc
mulb
outsb
pop
imul
dec
add
sbb
loop
fnsave
sub
cmp
sbb
sarb
dec
dec
sbb
lea
mov
pop
or
cli
jg
filds
js
fiaddl
out
add
addr16
adc
xlat
lods
add
cmp
es
nop
fmull
loope
lret
fistpll
out
bound
cmc
push
dec
cmp
cmpsl
or
mov
jb
jmp
pusha
cld
lcall
not
and
adc
inc
in
sub
adc
sbb
or
sbb
mov
push
sbb
mov
outsb
jl
mov
fmull
stos
out
mov
ret
aam
push
fstps
ja
daa
mov
das
xor
mov
xchg
push
js
pop
out
ljmp
lock
and
jo
scas
inc
daa
mov
lods
ds
cmp
push
pop
sub
scas
mov
cltd
fisttpl
es
sbbb
fldt
jmp
dec
dec
adc
rolb
es
lods
aam
imul
stc
cmc
lods
jne
xchg
sub
shl
outsl
pop
in
shl
push
pop
or
cmp
movsb
lret
enter
pop
dec
jo
xchg
inc
or
shufps
xchg
lret
push
fidivrs
xor
dec
mov
sahf
inc
test
and
mov
gs
jg
push
daa
stos
jp
cmp
cld
dec
aas
pop
mov
adc
and
adc
out
dec
iret
pop
or
and
mov
mov
jbe
loope
cli
movsl
cmpsl
test
xchg
leave
cmpsb
jnp
adc
xlat
fsubr
cli
dec
ret
dec
or
push
jo
and
cmc
imul
mov
test
divb
add
out
ja
xlat
mov
js
dec
repz
pop
push
repnz
insb
iret
jns
xchg
push
push
fisttps
push
iret
jne
leave
mov
fwait
pop
rolb
mov
aaa
push
jo
mov
popf
aaa
ss
mov
mov
jno
cmc
addl
repz
mov
cmc
xchg
cwtl
xchg
fidivrl
inc
imul
lret
mov
sar
xor
pop
mov
pop
sbb
cmc
arpl
cmp
insl
data16
jbe
lcall
mov
mov
jg
orb
xchg
add
lret
xchg
fxch
sub
mov
in
sub
hlt
test
scas
adc
jb
mov
subl
ror
xor
mov
mov
mov
mov
stos
jmp
push
xchg
inc
out
sub
adc
push
dec
dec
sti
call
or
mov
imul
and
mov
rcll
inc
out
xchg
jo
mov
subb
and
mov
shlb
movlps
cmp
mov
add
xor
in
cmpsl
inc
pop
jnp
add
pop
mov
pop
xchg
testb
rorl
add
jg
xchg
lods
into
rcrl
das
dec
push
lahf
sub
push
jne
shll
and
mov
push
xor
mov
rcrl
and
fadd
enter
rcrl
clc
cmpsl
lret
loop
iret
stc
mov
adc
push
out
stos
lret
fstps
cld
mov
loopne
icebp
dec
popf
push
jb
fidivl
xchg
push
pop
xchg
xor
cltd
mov
inc
add
xchg
flds
stos
sbb
in
mov
negb
inc
in
inc
andb
cs
mov
mov
gs
push
pushf
shll
stos
es
mov
add
sarb
stos
out
shlb
sarl
xor
fsubl
sti
jle
fwait
pop
fwait
movsb
inc
xor
jp
push
movsb
mov
sbb
fs
sbb
daa
sbb
sbb
scas
scas
xchg
ret
jecxz
lahf
shl
dec
sbb
repnz
mov
int
test
pop
dec
sbb
xlat
or
push
and
mov
mov
pop
loopne
cmp
jecxz
add
roll
mov
leave
cmp
sbb
loopne
and
or
ja
in
inc
ret
push
fnstcw
into
hlt
aad
jge
cmp
jns
mov
mov
jge
inc
out
insl
jb
add
rcll
jle
fwait
out
xchg
mov
mov
dec
in
cmp
loopne
pop
aam
repnz
pop
test
add
call
subl
lret
mov
hlt
pop
or
cmp
andl
repnz
jmp
sbb
loopne
push
loop
arpl
jp
push
xchg
insb
push
nop
push
xchg
je
xor
lds
mov
or
ljmp
shll
add
dec
pop
dec
sbb
push
jecxz
dec
mov
jp
add
out
xchg
outsl
sub
and
xchg
dec
add
ficoms
ret
mov
xchg
rcrl
stos
sub
bts
push
ds
cmp
inc
out
int
int3
cmp
pop
cmpl
inc
test
mov
mov
daa
addr16
ret
sarb
pop
inc
popa
adc
lods
movsl
maskmovq
xchg
mov
inc
xchg
mov
hlt
repz
xchg
mov
and
lds
xchg
xchg
loope
outsb
mov
adc
or
add
adc
ret
mov
push
cmpsb
and
aaa
movsb
bnd
cmc
mov
rclb
add
push
push
jo
cmc
jecxz
loope
xor
shlb
pop
lret
sbb
mov
pop
repnz
mov
pop
jle
pop
jmp
push
dec
cmovle
lret
lcall
clc
sbb
inc
xor
fnstcw
lods
repnz
mov
repz
insb
cwtl
and
jge
in
les
cmp
jne
sub
lods
jb
mov
call
int3
mov
inc
adc
fiadds
mov
add
mov
sbb
repnz
xor
test
call
popa
xor
rolb
ljmp
add
mov
mov
scas
mov
mov
or
test
enter
pop
fadds
movsb
icebp
jle
lock
call
jno
sbb
subb
mov
jg
das
add
lret
dec
push
shld
sbb
iret
lods
pop
sbb
cs
dec
cmp
xor
incl
push
fnsave
in
jp
inc
paddsb
push
mov
not
mov
mov
mov
mov
cmp
repz
negb
loope
push
ljmp
sub
and
inc
into
rcrb
mov
iret
sbb
les
scas
idiv
daa
push
fcoms
insb
insb
imul
arpl
jge
js
push
mov
test
jb
fadd
and
mov
sub
stc
iret
dec
adc
ljmp
call
mov
ss
js
imul
mov
fwait
dec
cmp
inc
and
sarb
sub
jmp
lods
fsqrt
push
inc
popa
push
addr16
sub
mov
cltd
out
push
rcr
aad
sbb
repz
lcall
sbb
and
xchg
cmc
inc
xor
mov
shll
loop
lea
mov
mov
idivl
jno
jbe
in
cmpsl
jb
loopne
popf
lods
push
and
out
lock
xchg
int
add
ljmp
imul
jb
dec
and
and
ret
xor
jg
sarb
push
dec
enter
add
xchg
stos
add
xchg
pop
out
pop
test
push
movsb
shl
cld
insl
mov
mov
movsb
push
adcb
repnz
lods
mov
mov
mov
jmp
cs
pop
mov
cwtl
add
jo
sub
push
insl
cmp
mov
imul
insb
pusha
mov
sarb
ja
fsubs
test
movsb
add
adc
not
pop
and
dec
arpl
jg
cltd
mov
in
leave
fstl
mov
icebp
cwtl
push
and
lds
mov
pop
sub
addr16
imul
xor
sub
xchg
sahf
add
jo
xchg
lods
jp
or
xchg
vmovsd
jnp
loopne
jmp
adc
adcb
mov
or
mov
push
das
inc
daa
adc
lret
lret
adc
les
fsubr
mov
pop
popa
fcmove
loopne
sbb
jo
sahf
sub
lock
into
sbb
pop
jnp
iret
or
cmp
stc
ja
jbe
push
das
and
leave
adc
rol
dec
push
dec
lea
sbb
jnp
lret
pop
jo
out
ds
in
xor
xchg
sub
dec
adc
mov
adc
jns
sbb
pop
shlb
cmovno
fists
aad
push
test
dec
dec
jp
mov
das
test
mov
mov
stos
dec
stc
xchg
movsl
dec
sub
loopne
mov
andb
pop
inc
inc
aaa
pop
mov
add
lret
and
fwait
mov
std
inc
loope
loopne
lds
shlb
iret
mov
sub
dec
sarl
mov
lret
add
push
jo
mov
sbbb
stos
pusha
cmp
cmp
fsubrs
repz
roll
mov
fstpt
or
imul
outsb
sti
push
inc
mov
xor
mov
jmp
fbld
push
pop
lcall
sub
mov
scas
xchg
orb
sarl
push
andb
int3
popf
cmp
mov
lahf
xchg
jp
insl
sbb
outsb
jmp
adc
pop
adc
addr16
std
mov
sub
cli
icebp
sbb
adc
outsb
xchg
test
jecxz
cs
jmp
sarl
cmc
insl
pop
push
imul
and
fistpl
lods
jae
xor
sar
mov
or
xor
inc
dec
sub
pusha
call
xor
xor
clc
sub
daa
imul
add
inc
dec
mov
and
xor
xchg
push
dec
dec
popf
incl
in
jno
mov
and
mov
jo
ret
or
aaa
outsl
aas
inc
pusha
out
jb
pop
fdiv
inc
insb
adc
push
and
xlat
movsl
adc
daa
cmp
aam
push
cmc
mov
mov
scas
scas
iret
lds
add
cmp
sbb
iret
popf
inc
add
xchg
ds
cld
mov
cltd
enter
xchg
andb
nop
inc
jbe
pextrw
insb
jno
jae
gs
dec
cltd
xchg
adc
bnd
xor
fcoms
adc
imul
mov
sbb
sahf
push
rorb
or
mov
pop
dec
imul
outsb
and
std
loope
xor
lret
cmp
mov
jbe
sbb
mov
das
jae
sub
daa
mov
jmp
adc
or
subl
insl
ds
jg
mov
rcl
cmp
pop
lea
add
dec
jecxz
jne
mov
ss
push
inc
out
repnz
arpl
cmp
jecxz
icebp
inc
je
adc
ja
xchg
mov
addl
or
movsl
adc
je
adc
jae
fstpt
ret
pop
push
sub
dec
int
sbb
in
lret
popf
fimuls
pop
fildl
jnp
subb
push
test
or
imul
xor
je
js
out
or
push
addb
test
lds
pop
incl
adc
out
nop
dec
sub
mov
or
mov
inc
js
xchg
ret
pusha
inc
xchg
jge
sbb
imul
aas
js
pushf
mov
push
jbe
fstp
pop
jmp
or
movsl
das
jae
clc
int
shrl
mov
xor
xor
idivl
mov
adc
adc
in
adc
ja
std
movsl
xor
lock
pop
cmp
lahf
inc
fstl
jne
inc
xor
xor
or
mov
repnz
dec
inc
dec
sarl
sbb
cvtps2pi
add
fdivs
mull
pop
repz
fwait
inc
jle
cmpsl
scas
js
orl
into
jmp
movsl
shrb
pop
cwtl
xchg
test
add
mov
mov
mov
orb
lock
test
aas
push
adc
add
roll
inc
in
push
mov
inc
in
mov
aam
les
aad
movsl
pop
sbb
fisubl
mov
mov
or
outsl
lds
ljmp
iret
lret
out
sarl
cmp
jb
xor
cmp
sarb
stc
cmp
and
mull
dec
and
mov
mov
cwtl
stos
push
sub
sub
out
or
orl
xchg
jnp
xchg
mov
in
jbe
cmp
mov
ljmp
and
rol
mov
in
adc
cmp
pop
and
mov
ss
cld
jg
rcrb
xor
or
shl
mov
jno
int3
ds
orb
pop
or
loop
mov
sbb
jb
loope
fsubrs
mov
mov
fst
scas
add
push
arpl
movsl
cli
insb
ja
in
into
aam
add
push
loopne
mov
sub
ds
ljmp
addr16
add
repz
int
icebp
outsl
out
inc
int3
pop
popf
cmp
sub
push
mov
insl
test
adc
xor
dec
fsts
sub
mov
punpckldq
aad
mov
dec
mov
jno
imul
xor
mov
push
js
mov
cmp
pop
pushf
loope
gs
cld
or
mov
testl
and
cld
dec
mov
aaa
mov
je
out
adc
xchg
sbb
xchg
ficompl
stc
ret
mov
sub
ja
js
hlt
jno
ret
inc
imul
fs
gs
or
in
nop
add
jg
and
int3
dec
xorb
sbb
lret
pop
pop
ret
adc
sbb
mov
mov
fs
pop
pop
sti
enter
shl
sti
data16
mov
mov
pop
inc
repnz
push
dec
pop
push
dec
hlt
aam
arpl
sub
xor
push
cmpsl
dec
add
or
hlt
test
nop
je
rcl
and
add
jns,pt
call
mov
icebp
push
xor
xor
pop
cmp
pushf
ret
dec
cltd
sub
jl
mov
adc
icebp
cmp
aad
ljmp
and
inc
jnp
addr16
lret
scas
sbbl
push
rcl
xor
js
mov
cmp
fadd
inc
stc
movsl
add
and
movl
or
push
cmp
push
scas
cld
scas
inc
or
sub
jbe
pop
imul
or
les
test
jno
mov
lret
jnp
mov
mov
xlat
add
cmpsb
or
xor
mov
push
push
lgs
adc
aad
lock
add
lock
out
push
addr16
stos
cld
jno
sub
pop
add
inc
jbe
xor
insl
xor
cmp
cmp
pop
popa
and
push
aaa
add
fs
add
aam
fld
push
dec
lods
cs
jae
push
or
cli
jae
roll
cmp
jl
push
aam
xlat
xchg
pop
arpl
push
test
and
mul
sub
mov
je
or
and
push
out
lret
jns
das
test
dec
aad
sbb
push
rcr
mov
pusha
and
fucomip
adc
lret
aad
adc
push
adc
rorl
scas
lahf
push
adc
xor
push
jle
or
popf
aas
and
lea
or
fnsave
cmpsb
sbb
xchg
pop
mov
sbb
xchg
inc
dec
cmpb
gs
bound
sti
aaa
cmp
jb
lods
aas
mov
xchg
sbb
fwait
jns
pop
in
sub
ss
mov
mov
popf
call
or
push
sbb
pop
xchg
jecxz
jo
jmp
lret
cld
and
xchg
cmp
sbb
pop
cli
roll
sbb
mov
push
cmp
iret
inc
jecxz
cmp
lcall
fisttps
test
or
testl
pop
nop
arpl
push
hlt
or
andb
cmp
aas
mov
cld
repnz
into
int
pop
jg
test
movsb
out
jg
cmpb
sti
mov
test
sub
xorl
lds
push
push
mov
insb
addl
shl
add
jmp
jnp
loope
pop
sub
lahf
pop
cmp
shll
and
inc
pop
dec
push
lret
or
movsl
cli
test
inc
popf
bound
sbbl
jb
push
jg
add
jnp
mov
shlb
push
mov
stos
xchg
inc
out
out
cmp
xor
in
dec
xchg
cli
jnp
daa
push
imul
xchg
stos
scas
and
pusha
push
dec
test
or
movsb
xchg
adc
arpl
dec
ss
xor
fcoml
fstl
pop
inc
cld
cltd
mov
and
rcr
sub
ret
cmpsb
fsub
xchg
push
xor
out
adc
js
mov
jae
or
inc
ficoml
pop
mov
lods
jne
mov
cmpsl
xor
popa
out
aad
inc
cmpsb
inc
sarl
jbe
pusha
fidivl
ss
and
pop
hlt
or
mov
push
into
les
jne
push
ss
mov
mov
xchg
cmpsl
mov
xchg
cld
in
mov
mov
enter
cmp
push
subb
and
xor
mov
xchg
lahf
mov
iret
inc
iret
jne
xchg
add
jbe
inc
test
or
out
jns
popf
lcall
adc
cwtl
leave
mov
mov
mov
inc
push
xor
push
repnz
jmp
mov
and
leave
jae
add
sub
jecxz
scas
test
cmpsb
aad
or
cli
pop
call
or
jecxz
sub
cmp
stos
sub
or
sub
mov
insl
xor
aam
loopne
adc
push
idivl
in
inc
dec
es
dec
cmpb
fnstenv
les
inc
fwait
mov
ljmp
fistps
or
hlt
push
mov
repnz
test
push
sub
mov
lods
jl
lret
adc
mov
dec
xchg
or
ret
push
jnp
in
call
mov
ja
fndisi(8087
xor
test
pop
dec
jp
mov
cmp
adc
dec
cmpsw
adc
pop
js
push
cwtl
push
lods
jl
call
jo
movsl
add
dec
mov
mov
inc
lcall
cmp
ja
mov
jae
push
xchg
add
xor
fst
mov
sbb
scas
out
or
inc
push
pop
cmpl
adc
adc
push
sbb
fcmovnbe
sbb
outsb
out
sub
cmp
pop
mov
leave
ret
push
add
mov
cmc
adc
dec
js
mov
sti
ljmp
mov
faddl
in
jo
mov
push
lret
sar
scas
stos
repz
gs
mov
outsl
jne
push
pop
inc
sub
inc
je
andl
negl
pusha
shll
icebp
iret
ret
sub
addl
mov
sbb
mov
mov
mov
fsubrs
pushl
into
push
adc
rorl
mov
jno
aad
cli
or
adc
xchg
call
sub
cmpb
push
in
imul
ret
and
dec
push
andb
sub
jg
or
enter
notl
mov
movsb
mov
out
negb
int
loope
cmp
fidivl
mov
ljmp
rcrl
imul
int
pop
scas
test
repz
negb
mov
mov
jnp
mov
lea
xchg
mov
adc
pop
popa
push
cmp
xor
and
mov
xchg
jmp
and
xchg
dec
pop
adc
jp
outsb
jmp
and
sbb
mov
add
adc
int3
push
ftst
inc
lcall
mov
cmp
lcall
cmpl
int
jp
lret
inc
and
pop
add
xor
inc
dec
push
sti
movsl
lods
addr16
icebp
jl
pop
popf
nop
out
cmp
jecxz
and
add
popa
int
rol
ja
inc
ficompl
jns
lods
adc
xchg
call
adc
jns
int
negl
jle
sbbb
out
push
arpl
inc
sub
jl
ss
stos
mov
xor
inc
leave
loop
pop
outsb
ja
shll
and
stos
pusha
lcall
or
daa
icebp
cmpsb
pop
fsub
mov
mov
call
push
push
xlat
lods
dec
pop
push
mov
xor
push
lock
or
push
mov
or
out
rorl
rcrb
cmc
orl
jecxz
test
movsb
pop
fxch
inc
rcrb
inc
in
jo
out
imul
sbb
insl
sub
sbb
mov
sub
xchg
pop
mov
mov
and
cmc
mov
outsl
adc
std
orb
or
inc
repz
xchg
push
jno
dec
mov
outsl
arpl
rclb
mov
popf
inc
inc
cwtl
or
dec
fdivrl
jecxz
push
scas
lock
add
xchg
xor
inc
sub
mov
shrb
add
fmuls
push
ljmp
fwait
xchg
ret
rolb
mov
pop
and
stos
imul
addr16
lahf
push
xor
jae
fisubrs
ljmp
pandn
fnstsw
pop
imul
aaa
jne
shl
orb
cld
pop
sbb
and
cmpb
add
mov
lds
rep
inc
or
sar
loope
movsl
inc
or
mov
aaa
repz
or
int
lods
dec
push
mov
fcmovnbe
fwait
xor
inc
fcom
and
ret
aaa
adcl
sti
jle
xchg
lods
imul
jnp
in
sbb
cmp
pop
ja
imul
xchg
or
loope
or
cmp
mov
addl
scas
jp
mulb
lea
push
cmpsl
push
test
mov
adc
adc
pop
jp
xor
and
jno
inc
and
lods
adc
push
add
dec
sub
jle
pushf
fnstcw
es
repnz
insb
std
arpl
jle
mov
xchg
lret
adc
cwtl
cmpl
mov
inc
xor
bound
mov
pop
pop
xchg
inc
aam
or
xchg
and
in
xchg
sub
dec
sub
arpl
int3
loope
adc
mov
jmp
jecxz
fstl
roll
mov
hlt
imul
jle
dec
outsl
lcall
dec
or
int
lds
jnp
clc
push
inc
imul
xor
cli
pop
jp
movsl
sub
repz
jge
xchg
mov
mov
lea
into
ss
mov
jle
lret
push
mov
xorl
xchg
jno
loop
xchg
in
in
repz
sub
dec
dec
int
fiaddl
call
daa
scas
out
out
imul
aaa
xchg
jge
das
push
xchg
mov
pop
xchg
adc
mov
xchg
sbb
rclb
xchg
adc
cmp
stos
test
mov
sti
bound
loope
fiaddl
out
mov
sbb
enter
out
in
and
mov
dec
adcb
std
xchg
mov
sbb
daa
mov
jle
sub
pop
repz
fldt
adc
fcomi
jbe
int
dec
in
pop
sbb
and
cwtl
pop
push
mov
xchg
sbb
cld
fisubrs
sahf
xchg
lods
push
fwait
fwait
push
sbb
inc
int3
pop
lret
popf
out
adc
ss
dec
das
rorb
lahf
lea
xor
mov
or
cli
inc
jmp
or
out
sub
test
fstl
movsb
push
pushf
dec
add
and
and
sub
fmull
pop
fwait
push
cltd
notb
dec
xor
jae
dec
sbb
addr16
dec
sbbb
cmc
sub
movsb
cmp
in
data16
js
jg
adc
mov
mov
mov
dec
xor
hlt
pop
mov
xchg
lea
test
aaa
fcoml
mov
ljmp
add
daa
adc
push
mov
and
negb
lods
pop
push
jecxz
mov
adc
subl
mov
hlt
dec
xchg
mov
loop
outsb
cld
cmp
dec
jae
pop
fcoms
jno
subl
iret
push
iret
add
out
test
addl
js
or
dec
mov
mov
push
bound
jle
jno
call
push
aam
lods
lret
or
dec
mov
nop
pop
ror
icebp
lahf
jge
add
adc
and
push
sbbb
inc
mov
fwait
push
inc
pop
popf
and
dec
sbb
xchg
data16
sub
xor
cs
or
sub
mov
mov
sbb
out
inc
mov
inc
xchg
insb
scas
in
stc
testl
fisubs
pop
ret
adc
dec
push
lret
jb
clc
scas
cld
fwait
dec
cmp
out
dec
mov
push
nop
cmpsl
in
adc
sbb
sub
rcrl
adc
lret
push
gs
stc
sbb
mov
pop
add
fiaddl
aaa
popa
or
cmp
mov
fwait
mov
fistpll
sbb
imul
cld
test
scas
xchg
xchg
fiadds
and
mov
mov
sub
sahf
cmp
dec
mov
cmc
insl
das
shrb
imul
popa
sbb
in
mov
nop
fdivrp
lea
push
and
push
xchg
adc
inc
stos
and
jno
lods
insl
mov
lds
gs
sub
pop
sbbb
andb
pop
aad
sahf
inc
fistps
jmp
xchg
insl
fimuls
movsb
xchg
jmp
xchg
pop
dec
aas
test
pop
jne
dec
inc
mov
push
fmulp
pushl
inc
and
or
inc
xchg
add
stos
ret
out
rclb
rcrl
or
out
add
pop
mov
repz
outsb
jge
jmp
sbb
fisttpl
push
mov
adc
mov
sbb
cmp
outsb
movsl
jne
inc
lds
pop
pop
jo
bound
aas
mov
popf
inc
fwait
out
pop
fidivrs
sbb
pusha
jne
ss
inc
pop
cmp
das
dec
daa
pop
idivb
cld
loop
pop
les
and
fwait
fs
sub
in
rcll
inc
mov
mov
popf
in
dec
cmc
jecxz
mov
inc
notb
bound
cld
icebp
icebp
cld
mov
dec
roll
jns
out
adc
adc
adc
push
fwait
rol
ljmp
xchg
cwtl
inc
in
pop
mov
sti
mov
ljmp
mov
sbb
jmp
sub
xor
jae
ljmp
in
vandnpd
xor
jno
xor
dec
movsb
andb
xor
dec
arpl
sub
inc
subb
or
sub
pop
mov
xor
mov
cmp
popl
jge
insb
add
mov
pusha
into
cmpsb
dec
fcoms
pushf
mov
pusha
xchg
jne
add
jg
fwait
shll
add
mov
mov
mov
or
sar
mov
inc
sub
insl
mov
in
sbb
in
mov
lahf
sbb
jno
repz
jle
in
adc
or
xor
dec
cmc
lds
dec
imul
pop
mov
adc
sub
sbb
sub
arpl
sbb
and
xchg
mov
sbb
pushf
xchg
jne
sub
insb
shrb
lods
add
outsl
push
sahf
add
adc
imul
sub
sbb
xlat
xor
mov
sub
mov
bound
sbb
imul
in
test
add
xchg
sbb
movsl
mov
add
aas
jo
stc
push
xchg
inc
xchg
pop
and
into
xlat
call
shrb
imul
inc
cli
out
cmp
mov
cltd
cltd
popf
lea
hlt
call
mov
xchg
dec
loopne,pn
std
adc
paddb
push
push
loop
sub
in
fdivs
jle
cmpsl
lods
call
pop
out
dec
cs
jo
stos
frstor
dec
mov
cltd
inc
push
mov
pop
lcall
shrl
dec
int3
mov
push
test
cli
mov
fistps
jl
xlat
js
ret
aam
cli
lods
mov
fcomps
frstor
in
push
sarb
int
pop
clc
lcall
mov
movsb
into
and
push
ds
leave
mov
push
sbb
pop
in
or
inc
xor
dec
aam
push
insl
or
sub
iret
movsl
or
jbe
pop
push
imul
jcxz
sahf
ss
mov
xchg
inc
inc
jo
mov
cmc
leave
push
dec
inc
hlt
sub
fcomp
aad
insb
mov
add
and
aam
in
and
cmp
sub
rcll
loope
ja
pusha
rcll
xchg
divl
cmp
sbb
movsb
mov
popa
out
sub
jg
les
sbb
gs
adc
stos
sub
aam
mov
data16
push
mov
das
ljmp
mov
insb
and
ret
je
iret
std
clc
sub
aas
or
push
shll
lods
fcompl
fs
adc
cwtl
sbb
popf
cmc
bswap
cmp
test
push
sub
in
pop
cmp
xchg
scas
addr16
mov
push
xor
cmp
lret
pop
inc
or
and
mov
push
add
outsl
mov
fmull
mov
mov
cltd
leave
sub
lahf
jbe
xlat
inc
repnz
and
jl
clc
mov
pusha
popf
sbb
jge
lods
imul
dec
frstor
cmpb
xchg
jo
mov
lcall
mov
pop
insl
shll
add
mov
jge
call
ret
jg
mov
sti
ja
jo
or
pavgw
mov
mov
xor
cmp
inc
mov
aam
cmc
popa
push
cmp
fistl
cmpsl
push
or
outsl
push
mov
in
and
sub
out
dec
stos
out
jecxz
mov
inc
push
out
aas
cld
mov
pusha
lds
out
pop
sbbl
js
mov
fstl
push
xchg
rcll
in
cmc
jno
or
dec
jne
xchg
popa
lea
pop
mov
pop
mov
shl
ja
lahf
cmp
sub
in
ss
in
pop
in
inc
pop
mov
mov
or
push
into
dec
scas
cwtl
mov
cmpsl
fisttpl
adc
push
dec
imul
jnp
push
mov
mov
addr16
push
xlat
js
mov
adc
add
cmp
ja
and
sbb
mov
or
sahf
pop
xchg
and
mov
mov
mov
mov
imul
sub
pop
bound
lret
ja
sub
mov
mov
inc
aam
in
stc
mov
addr16
mov
faddp
aas
movb
js
jae
add
fsubrs
fnstenv
in
nop
pop
inc
icebp
fimuls
cwtl
cmc
int
stos
mov
cmp
cmpsb
mov
cli
pop
enter
or
shrl
lcall
dec
jb
lcall
loop
fwait
les
push
call
mov
insb
ret
mov
roll
sarb
jge
add
cmp
xor
scas
fistpl
fwait
imul
push
fadd
push
mov
inc
lcall
adc
adc
and
dec
jl
mov
xor
les
xor
cmp
fs
sar
pop
sysret
jecxz
cmp
mov
stc
sbb
push
lods
stos
jge
das
sahf
call
repnz
add
mov
dec
and
mov
enter
xor
scas
shrl
in
add
and
out
ss
mov
imul
repnz
rol
stos
and
push
xor
pop
mov
pop
repz
xlat
sub
or
sbb
lcall
aad
pop
stos
sbb
cmpl
loope
sbb
in
jecxz
adc
popa
and
dec
pop
jns
bound
test
mov
cmp
loope
clflush
das
push
jp
jbe
sub
adc
mov
xchg
adc
aam
in
xchg
aas
imul
jmp
mov
dec
fcmovbe
xor
mov
icebp
jle
imul
add
loop
inc
mov
mov
in
ret
iret
mov
dec
fs
shlb
idivb
jl
ljmp
popa
mov
add
cmc
jo
repnz
mov
sub
lret
adc
xor
into
inc
add
movsb
rcll
addb
test
jecxz
pop
lret
dec
cmc
ret
mov
test
outsl
mov
mov
clc
or
add
xchg
mov
dec
sub
nop
aam
push
lret
je
adc
icebp
mov
sub
xorb
mov
inc
cmpsl
mov
add
imul
or
sbb
fnsave
jle
pop
dec
mov
enter
repnz
or
push
idivl
lcall
ljmp
xchg
leave
cltd
or
enter
pushl
mov
stc
add
popf
push
lahf
imul
popf
daa
and
xchg
and
mov
ficoms
pop
push
popa
fildll
insl
leave
fdivr
push
scas
and
inc
mov
lret
and
test
cld
fiaddl
pop
adc
mov
xor
inc
out
push
sbb
jo
std
mulb
test
pop
das
fmulp
sti
ja
in
cmpsl
dec
daa
idivb
mov
pop
jecxz
jbe
xor
mov
push
ljmp
xchg
pop
dec
loopne
mov
sti
aam
jns
sbbb
sarl
bound
fcoms
push
icebp
inc
lds
inc
xchg
pop
out
fsubl
lahf
fs
js
sbb
or
pusha
dec
jo
fbstp
xor
popa
xor
dec
sbb
or
xor
loop
cmp
test
dec
js
lret
scas
mov
mov
stos
sarb
pop
imul
movsl
push
pushf
sub
loope
shrb
lret
int
mov
cmp
lcall
rol
mov
inc
lods
insl
mov
ret
nop
dec
insl
call
sub
pop
ja
sbb
icebp
lods
daa
push
inc
mov
lods
jne
inc
movsb
lcall
sbb
sub
xor
ja
xlat
mov
mov
mov
mov
test
or
pop
jle
pop
xlat
push
pop
addl
xchg
out
mov
adc
lret
mov
xchg
sub
mov
xor
cli
dec
push
pusha
in
lea
stos
loope
dec
leave
jmp
jne
pop
mov
inc
arpl
cmp
mov
mov
dec
mov
pushf
adc
push
scas
movsb
leave
rcrb
insb
cmpsl
push
adc
xor
in
lods
sub
cmpl
xchg
xor
imul
je
xchg
jl
std
dec
or
mov
jbe
shrl
add
call
cmc
and
push
in
xchg
ret
insl
ficoms
and
mov
icebp
push
mov
lcall
xchg
mov
test
xchg
xchg
push
psrlw
mov
aad
jle
or
jo
sbbb
notl
inc
shl
push
clc
cmc
cmp
sbbl
push
arpl
enter
adc
mov
cmp
xchg
and
addr16
popa
in
sbb
mov
scas
inc
and
outsb
aam
insl
and
stos
ret
mov
aas
and
fcoml
jp
enter
mov
icebp
xchg
fnstcw
sub
push
insb
and
cmc
in
cmp
inc
fdivr
js
jmp
mov
test
sbb
cld
mov
lcall
ss
xchg
xor
movsl
inc
lock
daa
inc
sahf
vmovlhps
cltd
or
pop
sbb
les
shlb
sbb
movsl
pop
ficomps
adc
and
lods
push
test
mov
sbb
cmp
and
daa
lret
sub
lahf
xlat
xchg
in
push
or
test
test
jae
movsb
push
jl
dec
push
jne
inc
dec
sahf
jbe
xor
pop
ja
or
or
mov
clc
and
adc
fwait
daa
mov
movsl
cmpsb
cwtl
fs
xor
mov
lcall
adc
imul
shll
sbb
es
mov
shrl
arpl
xchg
lea
xchg
ljmp
hlt
pop
jmp
das
xchg
ss
dec
fsubp
xor
or
inc
out
jne
pop
dec
sarb
add
leave
and
dec
lea
add
fdiv
xchg
xchg
sbb
sub
je
xchg
jg
sub
jge
into
adc
ja
addr16
push
aam
mov
pop
mov
push
test
xor
movsb
idivb
pop
jp
pop
loop
jbe
out
call
or
or
outsb
pop
push
push
push
lahf
cmp
mov
add
mov
cld
xlat
in
pushf
sub
and
xchg
out
sub
add
adc
jmp
xor
mov
subl
sub
push
mov
lcall
stc
pushf
cmp
jmp
aam
jecxz
sub
lret
leave
cmp
sub
aam
pop
int
sub
mov
jmp
incb
or
pop
xor
xchg
out
rclb
jne
jge
mov
cmp
aam
xor
mov
jnp
sbb
mov
and
push
test
sar
push
stc
push
outsb
push
test
push
xchg
xor
mov
ss
add
jmp
jl
add
scas
xchg
mov
sbbl
jo
cwtl
mov
popa
sub
bound
add
or
pop
mov
xor
inc
cmp
push
popf
and
jp
filds
pop
fnstenv
movsb
mov
sbb
dec
jae
mov
and
push
pop
sahf
shl
subb
subl
inc
pop
jns
outsl
lret
sti
sub
out
out
and
sbb
ja
ds
popf
or
pop
jnp
jbe
adc
fcmovnu
addr16
jne
hlt
mov
add
dec
jle
dec
int
mov
xor
mov
inc
das
pop
jnp
jg
push
inc
outsb
negb
test
rol
pop
add
xor
outsb
jecxz
inc
xchg
xor
divl
mov
mov
and
sarl
jne
idivb
jb
dec
in
xor
dec
outsb
es
roll
jnp
fisubl
or
adc
fcmovne
mov
push
lock
out
cmp
aam
sub
in
xchg
call
aaa
enter
stos
les
adc
mov
mov
jle
scas
cld
cmp
xchg
dec
punpcklbw
outsb
pop
stc
mov
lea
pop
jns
add
mov
ja
pop
mov
pusha
xchg
fldcw
cmpsb
push
js
ret
movsb
hlt
fstpl
jbe
subb
adc
mov
jns
jns
adc
test
int3
inc
mov
aam
xlat
jg
fdiv
loope
cli
mov
mov
imul
hlt
inc
cwtl
pop
cmp
outsb
loope
mov
icebp
sarb
test
ljmp
sbb
sub
jb
pop
in
pop
repz
je
cmpl
in
or
jmp
or
inc
mov
cmp
push
mov
pop
sub
adc
push
push
mov
in
push
rclb
or
int
cmp
push
or
jge
mov
push
rcrb
mov
sub
jg
mov
das
inc
sub
inc
test
push
bound
mov
stc
stos
xor
jnp
and
imul
out
cmp
stos
jmp
push
mov
inc
or
and
sbb
mov
xor
and
and
jns
push
jno
xchg
sti
dec
repnz
push
cltd
out
jo
jns
iret
outsb
subl
enter
sbb
and
repz
enter
lcall
fwait
jne
in
in
stos
adc
mov
mov
mov
jae
out
jns
std
pushf
sbb
out
aaa
shufps
pop
inc
mov
cmp
dec
test
or
insl
adc
push
rcrb
in
movsl
rol
mov
mov
hlt
add
push
mov
cld
aas
shrb
imul
sub
push
xor
ret
mov
jge
loope
cld
jne
lret
add
push
jp
pop
push
rorb
mov
and
mov
gs
imul
lret
lea
and
pusha
cmp
xor
in
pushf
in
xor
lahf
das
pop
cmp
loop
fimull
mov
or
add
cmp
dec
fbld
mov
sbb
push
xor
lds
movsl
js
rcl
mov
fdivs
jns
rcrb
mov
add
jns
ljmp
scas
pop
mov
fmull
add
movsb
add
test
in
jge
inc
jb
aad
int3
js
imul
and
push
lret
push
add
adc
mov
xor
es
xchg
jae
mov
idivl
or
fsts
hlt
jmp
cmp
xchg
fdivrp
lahf
pop
rcll
mov
xor
push
jae
out
or
fildll
dec
push
sti
sub
adc
mov
add
jge
or
cmp
data16
inc
add
dec
stc
leave
adc
dec
jno
mov
sbb
adcb
loopne
cmpb
out
addr16
sbb
add
xor
pop
dec
cmpsb
daa
in
fwait
outsl
movsb
jb
fwait
std
or
mov
mov
movb
xor
xchg
arpl
inc
stos
xchg
inc
push
les
gs
fwait
pop
inc
mov
and
inc
call
shll
inc
or
mov
aaa
mov
inc
test
ret
push
mov
in
adc
inc
mov
and
push
pop
sbb
add
xor
pop
pop
push
xchg
dec
jecxz
sbb
mov
call
scas
aam
inc
push
pop
test
data16
imul
cmp
adc
jbe
xor
insl
or
push
test
jmp
popl
cwtl
jmp
fldl
je
mov
push
loopne
xchg
movsl
jg
add
xlat
add
jb
shll
enter
in
and
pop
adc
frstor
popa
jne
ja
cli
sub
outsb
push
lods
jg
jo
int3
in
ds
mov
scas
dec
dec
js
push
push
or
into
cmp
mov
adcl
inc
jne
xchg
and
sbb
outsb
push
fcmove
loop
cmp
imul
lcall
xor
std
push
cmc
frstor
xchg
pop
mov
imul
jecxz
jmp
subl
and
add
pop
enter
push
arpl
out
imul
inc
stos
xor
cs
lds
cmp
imulb
push
aaa
das
or
add
cmpsb
outsl
mov
std
xor
repz
aam
pop
in
dec
and
imul
push
adc
sbbl
xchg
out
dec
jns
lea
stos
enter
pushf
aas
xor
mov
arpl
fstpl
mov
fsub
xchg
movsl
dec
mov
ds
in
movsb
push
int3
cmc
in
dec
and
movsb
push
inc
jae
mov
pusha
push
loop
inc
and
shr
jp
add
jle
andb
xor
jnp
lahf
rcll
test
dec
xlat
cltd
stos
es
inc
lock
jmp
add
sbb
inc
pop
sub
gs
adc
loop
dec
out
mov
mov
xchg
fnsave
push
add
daa
push
xor
lret
mov
pop
nop
mov
push
div
inc
aas
push
leave
cmc
scas
mov
cmp
jo
jne
add
xor
and
sti
out
xor
inc
jmp
jl
dec
inc
or
pop
loopne
cs
add
pop
in
cmp
mov
sbb
mov
fsubrp
push
lock
xchg
adc
ret
xchg
xor
fisttpl
loope
adc
stos
mov
js
cmp
adc
fistl
jbe
aam
fdivrs
bswap
fists
mov
scas
aaa
out
xchg
xor
imul
jbe
outsl
xor
push
xor
icebp
add
movsb
fistps
sub
sub
push
inc
add
push
dec
call
aas
iret
out
add
shlb
mov
fdivrp
jae
jns
push
add
fildll
and
add
sahf
fcoms
dec
mov
cmpsb
rorl
mov
push
in
bound
mov
mov
out
sbb
cmc
xchg
mov
aas
sub
idivb
insl
popf
jb
and
arpl
xchg
shlb
data16
roll
lea
inc
in
rsqrtps
adc
mov
enter
movsl
out
movsb
inc
mov
cltd
pop
xor
sti
ja
jne
je
push
pop
push
pop
scas
mov
pushf
cmc
test
cs
inc
adc
lcall
push
stos
fidivl
out
adc
clc
aad
sub
or
movsl
ljmp
gs
or
cmp
daa
dec
fldenv
lods
xor
mov
fucomip
ja
inc
pop
je
loopne
rcrl
fldl
ret
rclb
push
cmc
out
fisubrs
inc
daa
movsl
addb
or
ja
push
cmpsb
add
daa
add
jmp
imul
call
mov
fwait
out
or
cmc
out
lcall
fmull
inc
push
inc
xchg
das
inc
push
push
jmp
loopne
push
sbb
lahf
and
jae
js
mov
xor
lock
cmpsl
xor
gs
arpl
xlat
popf
or
cld
cwtl
and
ja
lret
and
xor
or
jecxz
pcmpgtd
sub
insb
xchg
add
mov
jl
sbb
dec
pop
xchg
and
pop
inc
sub
std
jp
inc
movsl
popf
add
mov
dec
add
mov
sbb
add
addr16
cmp
sub
sbbb
leave
adc
sbb
popf
add
sbbl
xlat
inc
out
push
jg
sbb
pop
and
or
pusha
lcall
dec
inc
xlat
mov
or
cmp
inc
inc
push
jp
fisttps
ret
push
cli
repz
std
pop
scas
pop
push
push
adc
loope
data16
sub
mov
mov
ret
and
cmp
stc
lahf
sub
xchg
shrb
mov
fwait
sahf
aaa
enter
shl
push
dec
xor
xor
push
adc
stos
sbb
fstpt
icebp
mov
scas
test
lock
movd
jnp
mov
or
xor
cmp
clc
add
add
mov
pushf
sbb
sbb
ret
in
mov
fnstsw
mov
add
cwtl
mov
fistps
xchg
fidivrs
lret
sub
or
pop
dec
mov
pop
repnz
mov
inc
push
fisubl
fdivrs
cmp
bound
xor
xchg
jo
lea
int
loopne
insb
xor
jp
outsb
cli
daa
sbb
cmpsb
fmulp
and
fadds
push
popf
stos
mov
mov
xchg
pusha
inc
outsb
inc
or
jo
orl
push
imul
enter
sbb
or
fwait
cmpsl
inc
pop
or
xor
adc
mov
mov
out
andb
or
and
xor
lods
cli
stc
add
dec
pop
das
outsl
xor
outsb
outsl
mov
cs
sub
adc
xchg
jae
enter
std
or
push
shll
inc
mov
jb
mov
pmaddwd
fildl
insl
and
mov
repz
iret
jne
pop
test
xor
pop
push
stc
ljmp
cmc
cltd
mov
jl
mov
inc
mov
movsb
es
das
mov
cmp
insl
jo
fcoml
push
mov
leave
test
cmp
cmp
lcall
jae
sub
mov
add
add
push
cmp
sub
xchg
lret
inc
sub
in
in
sbb
mov
jl
mov
xchg
out
mov
jne
stc
jge
repnz
jg
daa
mov
popa
mov
push
loope
pop
icebp
insl
mov
test
lods
mov
fisttpl
pusha
in
sub
rclb
ret
cmpsl
call
fisttps
outsl
sub
adc
clc
or
jg
sbb
mov
adc
inc
fsubrs
js
mov
test
push
adcb
js
mov
mov
push
popf
outsb
mov
mov
not
scas
adcb
and
dec
inc
bound
jecxz
jo
adc
jg
and
dec
add
repz
clc
subb
mov
ljmp
jmp
mov
andb
in
mov
sbb
mov
sbb
retw
cmpsb
fisttps
cs
push
inc
int
mov
rcr
leave
jns
mov
sub
adc
lcall
pop
sub
jg
mov
std
xchg
push
pop
pop
jge
dec
cld
xchg
sbbb
inc
mov
shr
sub
and
fdiv
out
dec
rclb
sbb
nop
inc
aaa
ss
jne
fstps
aam
in
xlat
sub
sbb
ret
push
xorl
in
sbb
jb
xor
icebp
jo
push
imul
jb
jmp
sbb
aaa
and
ss
xor
xlat
loop
sbb
cwtl
fisubl
cld
es
jg
les
xchg
fmull
cltd
xchg
cmp
shr
xor
jecxz
rcll
mov
jecxz
insb
mov
neg
cmp
add
xorb
xor
in
lcall
mov
sahf
and
shrb
jnp
aam
addb
mov
addr16
push
leave
aaa
ficoml
pop
xor
stos
inc
mov
les
mov
xchg
adc
test
add
lahf
mov
or
adc
mov
mov
mov
sarl
pushf
cmp
fwait
add
sub
inc
or
add
pop
mov
lods
pusha
lods
jg
or
jl
pushf
inc
stos
jmp
push
push
cmp
sub
insl
mov
xchg
cmp
cmpsl
ror
xor
cmp
pop
mov
add
test
push
imul
out
jg
cmp
addl
pop
cwtl
or
arpl
sub
aas
cmpsb
lret
and
loop
int3
pop
cli
test
push
dec
push
rcll
xor
push
fidivl
and
inc
cmp
out
sbb
fwait
inc
pop
jae
mov
mov
cmp
cmp
arpl
lods
xchg
aam
scas
sahf
movsb
mov
push
sub
in
cwtl
add
jp
xchg
sarb
push
mov
or
jnp
dec
inc
cmpsb
pop
jb
or
or
mov
in
sub
adcl
adc
cmp
mov
sub
aad
xor
sbb
adc
adc
arpl
mov
loop
dec
ret
repz
enter
pop
aad
add
sbb
push
stos
xchg
sahf
shl
fldt
xor
subb
mov
in
xchg
inc
add
add
rolb
mov
lods
mov
addr16
cs
test
outsb
sti
cmp
xlat
shll
jne
iret
int
aam
pushf
test
popa
mov
xor
jp
cmp
mov
mov
lea
int3
cli
jge
mov
cmpsb
lcall
jbe
push
cmc
test
sub
push
pop
dec
dec
rol
adc
movsl
adc
pop
push
jno
cmp
stc
aam
sbb
xor
mov
je
stos
mov
jnp
xor
out
mov
mov
dec
pusha
jno
xor
out
clc
lahf
jb
push
pop
test
mov
xor
pushf
insl
add
cs
mov
or
in
cltd
loop
pop
insl
inc
lret
fyl2xp1
push
arpl
jo
aaa
or
cwtl
dec
das
push
pop
fcom
push
call
fidivrl
add
pop
js
or
outsb
push
xchg
cltd
in
movsl
xor
push
outsl
loope
sbb
mov
push
sbb
pop
clc
subl
pcmpeqw
rcrb
xchg
mov
in
dec
sbb
out
pop
iret
dec
call
pop
cltd
hlt
popa
inc
lods
inc
mov
jns
xchg
dec
in
mov
or
clc
fldenv
or
nop
mov
aas
xor
sti
pop
pop
insb
mov
mov
mov
nop
sbb
jg
xlat
or
insb
and
jp
test
clc
addl
push
repz
jnp
test
lret
cs
fadd
adc
sub
cmp
insb
mov
lret
cltd
and
xor
out
movsb
in
add
in
movsb
or
movsb
mov
movsl
filds
dec
iret
adc
cwtl
push
mov
scas
fisubrs
cwtl
cmpsb
push
enter
loopne
mov
sub
fadds
ja
scas
push
jns
out
shr
xchg
shll
mov
push
mov
push
mov
js
loopne
sub
shll
sub
scas
and
and
xlat
pop
repz
jb
std
jnp
pop
add
divl
sbb
or
arpl
mov
imul
ss
out
pop
lods
push
pushf
std
sarb
and
pop
or
mov
mov
sbb
mov
pop
and
mov
mov
push
rorb
xchg
jno
je
cltd
xchg
fneni(8087
mov
xor
nop
lods
or
sbb
lea
push
xlat
ljmp
sub
gs
flds
shlb
std
pop
pop
xchg
test
mov
subl
cmp
cmpsl
mov
inc
cmpsb
in
lea
ss
xchg
jmp
lahf
arpl
out
sahf
aam
sub
sbb
cmp
pushf
ja
decb
sbb
std
xchg
cs
in
je
nop
aad
int
adc
icebp
xor
in
shll
push
int3
out
loopne
dec
pop
sbb
mov
rorb
push
fs
insl
add
fwait
sbb
mov
les
lds
test
mov
pop
jg
jmp
roll
mov
rcrb
aam
mov
in
dec
dec
lret
fsub
ret
xchg
dec
insb
ss
shr
xchg
push
arpl
dec
inc
fs
adc
or
test
rcr
pusha
adc
les
mov
in
shrb
xchg
and
pop
adc
mov
mov
jnp
push
cld
stos
push
cmpsb
add
mov
mov
inc
aad
inc
popf
ljmp
mov
xor
fcom
sub
cmpsb
dec
adc
mov
mov
clc
mov
sub
cwtl
stos
xor
sbb
and
inc
xchg
divl
push
fcomps
cmp
lea
mov
xor
in
mulb
rorb
xlat
sbb
jb
mov
test
adc
repz
out
cmp
cltd
push
or
jne
insb
mov
imul
push
fisubrs
sbb
cmp
mov
mov
ds
into
sahf
shll
jo
and
aad
mov
repz
movsb
movsl
lods
jbe
adc
adc
test
jb
into
scas
adc
mov
mov
test
in
test
leave
adc
sarl
sub
push
inc
out
mov
push
stos
push
ds
mov
repz
cli
ret
into
inc
dec
lock
addr16
jb
cmp
in
add
test
out
or
jp
aam
mov
sub
sbb
add
stc
aaa
inc
sub
add
daa
out
and
jmp
enter
das
push
cmc
into
lahf
xchg
lcall
test
cmp
mov
lds
das
lret
sbbl
loop
jo
push
add
jmp
aaa
sbb
mov
push
cmp
pushf
mov
rclb
mov
mov
pop
adc
mov
test
xor
divb
mov
cmp
insb
and
push
and
add
es
fld
sub
out
imul
xor
mov
adc
sbb
push
xor
cmp
xchg
shll
dec
and
aad
jecxz
cs
jb
shll
add
aas
or
adc
loop
bsf
xchg
rcl
or
scas
arpl
rorb
imul
push
pop
pop
dec
repnz
inc
in
mov
push
leave
xchg
arpl
dec
xchg
xor
sbb
les
mov
mov
test
add
lds
mov
je
xchg
push
dec
push
dec
arpl
sub
or
mov
repz
pop
jbe
outsb
rcrl
out
movsl
cmp
pop
add
mov
orb
sbb
test
mov
fwait
mov
jp
xor
fwait
out
cmp
jno
xchg
rcrl
imul
add
stc
dec
incl
xchg
xchg
ds
dec
insb
ret
in
mov
test
sbb
in
add
addr16
outsb
test
xchg
push
jae
testb
xlat
iret
jmp
xor
dec
or
enter
out
jb
dec
movsb
push
adc
lea
pop
out
adc
iret
inc
xrelease
pop
outsl
xchg
cli
lret
mov
mov
pop
loope
or
or
xor
out
shr
sub
stos
pop
loopne
movsb
adc
cmp
movsb
movsb
jle
xor
push
jne
xchg
je
inc
mov
pop
mov
sbb
fnstenv
scas
jle
fs
adc
dec
or
aad
hlt
fadds
aas
push
and
pushl
adc
into
xlat
add
fiaddl
adc
mov
push
jle
aaa
leave
fcoml
lock
or
mov
jb
or
rorl
aas
je
aaa
enter
rcrb
jmp
dec
fwait
pusha
imul
imul
aam
loop
and
repz
jge
cmc
aas
test
movsl
divb
inc
dec
mov
aad
inc
jne
fdivl
ljmp
add
loop
jecxz
hlt
les
rclb
cmp
add
lock
out
lods
dec
or
repz
adc
mov
mov
cmp
int3
push
xor
xor
jae
jb
sbb
popa
cmp
lcall
fld
dec
scas
mov
pusha
test
out
adc
jbe
mov
int
push
or
scas
call
jnp
jbe
push
bound
add
xor
xchg
mov
popl
stos
arpl
int
inc
outsl
sarb
push
fisttpl
fimull
repnz
rclb
and
jno
cmp
xchg
cltd
sbb
movsb
lcall
push
movsl
xor
test
inc
jnp
mov
fwait
and
adc
rol
mov
aad
shlb
orb
fildll
pop
into
ss
daa
int
push
pop
and
in
push
call
cmp
repz
arpl
imul
and
adc
arpl
orb
into
les
xorl
dec
xor
test
jne
adc
int
std
daa
jge
or
xor
into
sti
push
xor
mov
sbb
xchg
push
or
ret
mov
std
jo
icebp
je
mov
mov
add
ds
adc
and
xor
jb
pop
xor
pop
fisttps
mov
pop
out
dec
mov
mov
push
xchg
fmuls
dec
sahf
cmp
das
cmp
mov
gs
insl
aaa
adc
scas
inc
mov
pop
out
int3
inc
jge
out
adc
mov
out
in
mov
shll
imul
jno
popf
cs
xchg
daa
xchg
inc
fildll
mov
mov
or
hlt
movsl
sbb
inc
and
pop
and
xor
out
xchg
fdiv
scas
push
lret
ret
xorb
int3
lea
std
movsl
in
outsl
add
and
ss
push
push
in
jbe
xchg
lods
aad
push
fs
xor
add
inc
inc
adc
cs
xchg
mov
sbbl
ds
sti
je
inc
push
jmp
inc
jno
pop
sbb
testl
mov
add
mov
jp
aaa
cwtl
mov
jecxz
xor
mov
popf
or
jbe,pn
dec
push
sahf
push
int3
cmpsl
cmp
push
notl
add
push
dec
popw
inc
into
xorb
push
xchg
aad
cltd
sbb
mov
mov
jb
pop
and
lods
subl
or
daa
dec
dec
lods
dec
std
dec
add
pop
mov
jge
mov
jge
dec
fildl
xlat
xchg
jne
inc
test
lahf
jp
jno
lea
cli
out
jo
add
jns
outsb
mov
out
sub
repz
xchg
inc
ja
xchg
pushf
pop
sbb
int
shr
stos
mov
and
dec
pop
mov
cmpsl
fcoms
nop
mov
pop
scas
call
aas
push
jl
pushf
adc
and
ss
mov
scas
jnp
mov
cmpsl
cmc
cwtl
stc
or
lcall
enter
and
add
insl
stos
xor
mov
mov
shr
test
or
or
mov
sbb
push
adc
jae
mov
dec
cmp
lahf
fmuls
push
dec
int3
js
push
push
repnz
out
outsl
repz
xchg
jbe
outsb
addr16
adcl
iret
repnz
inc
leave
loope
lret
ror
dec
pushl
push
mov
and
cmp
mov
and
xchg
out
ss
push
pop
sub
push
movsb
adc
add
icebp
outsb
mov
in
fisttpll
repz
bound
xchg
jns
enter
jecxz
stc
sub
fisubs
pop
xor
pusha
cmp
xor
mov
add
or
fisubl
orl
lods
aam
mov
popa
add
ficoml
or
dec
arpl
xchg
stos
mov
adc
jecxz
out
mov
mov
lods
cmpsl
arpl
push
outsl
insb
aaa
sarl
push
xor
rcl
imul
jmp
fldt
lret
mov
lds
add
pusha
ss
jl
inc
lcall
mov
push
mov
nop
sbb
lock
lcall
in
xchg
stos
loope
push
push
inc
jp
dec
adc
adc
aas
pop
push
lea
xor
jne
inc
and
cmp
cmp
fisttpll
arpl
and
push
stos
cmc
test
pop
xchg
ljmp
sbb
mov
test
notl
aas
inc
jo
dec
sub
jge
and
popf
out
xchg
adc
mov
push
in
cmp
jg
mov
lcall
push
and
dec
xor
fcmovb
les
cmp
push
adc
xor
lcall
call
jbe
sub
xchg
pop
jae
dec
test
sbb
call
sub
ljmp
push
lods
insl
cld
xorl
jnp
xchg
decl
add
aas
and
dec
test
dec
dec
sub
push
out
aaa
fcmove
sub
lds
xchg
call
inc
scas
cli
inc
xor
test
cltd
mov
mov
jns
fisttpl
jnp
pop
shll
lcall
mov
jno
pop
mov
xchg
cmpsl
or
pushf
sbb
flds
das
and
scas
cmp
cmpsl
jno
int
add
insb
or
test
lret
movsb
dec
lods
cmpsb
dec
stos
or
or
xchg
and
push
ds
vsqrtps
je
xor
ja
dec
imul
mov
xchg
mov
gs
mov
lret
jecxz
lods
sub
nop
aam
shrb
sbb
call
mov
leave
loopne,pt
stos
scas
decb
sbb
xlat
adc
test
or
push
cmpsb
int
jge
into
xor
inc
jge
push
iret
cmp
push
mov
sub
adc
mov
xor
in
inc
decb
adc
int3
xchg
or
mov
int
dec
ret
push
aaa
ljmp
mov
xlat
pop
ret
mov
clc
pusha
pop
or
popf
loop
mov
in
mov
dec
and
dec
cwtl
scas
xchg
sbb
sub
and
xor
jge
test
push
xor
adc
dec
das
cmp
jb
push
outsl
outsl
dec
push
dec
pop
sbb
xchg
push
jno
data16
cs
shrb
cmc
movsb
call
in
add
fisubl
mov
jmp
pop
jmp
shlb
sub
rcrb
add
cs
daa
insb
jno
mov
cwtl
repz
sub
cmpb
ss
cmpsl
mov
and
addr16
movsb
or
stos
icebp
jo
jl
shlb
jo
pop
dec
dec
sbb
ljmp
inc
jo
leave
cwtl
pop
das
mov
cmc
and
movsb
cmp
mov
shrb
sub
push
insb
je
dec
movsl
stos
scas
popa
push
and
cmc
jns
or
pop
jnp
aas
fisubs
pop
sub
mov
dec
bound
lea
pop
and
clc
rcll
inc
xor
xor
bnd
pushf
sub
iret
sub
sbb
hlt
mov
and
cmp
es
mov
mov
lock
in
je
push
stos
dec
xchg
sub
cmp
xchg
jo
xor
jp
int
xchg
ljmp
out
xchg
mov
or
mov
dec
sub
fwait
pop
or
jne
jno
cmp
sbb
test
ret
jo
in
stos
mov
push
jecxz
or
adcl
jg
out
jp
pusha
divb
cld
pusha
cmpb
aam
jnp
aas
and
outsl
jl
cmp
test
mov
xchg
arpl
pop
add
xchg
push
out
enter
inc
sub
xor
inc
mov
lret
lods
stos
movsl
daa
push
insl
push
ret
jl
fwait
ljmp
mov
pusha
es
pop
fwait
cmp
inc
mov
orb
stc
aaa
lret
and
sbb
pop
mov
ffree
pop
adc
cmp
cli
xor
out
fs
xchg
lock
movb
rcl
sbb
and
bound
or
arpl
jl
jp
push
sub
sar
testb
insb
lea
mov
cmp
mov
aas
es
and
xor
cmc
aam
icebp
add
and
push
or
xor
es
inc
cltd
pop
cmc
mov
fimull
cli
add
call
leave
xor
je
ret
push
sbb
sbbl
mov
xchg
dec
fcom
mov
daa
jg
sub
jl
xchg
sarl
scas
jg
addr16
stos
popf
imul
sbb
leave
ds
mov
popf
dec
out
jg
push
xor
xchg
sbb
clc
cwtl
mov
add
fidivrs
xor
xchg
mov
in
adc
lods
mov
pop
jae
sbb
scas
test
push
adc
push
pop
inc
cmpsl
test
sahf
int3
adc
std
adcb
pushf
mov
loop
add
andl
inc
js
sub
iret
ret
jle
inc
pushf
mov
in
inc
or
cmp
xor
xchg
mov
adc
incl
jmp
test
jo
and
lds
pop
hlt
out
ret
stos
rcrb
jns
cmpsl
xchg
pusha
adc
clc
sbb
push
inc
adc
jp
pop
clc
xchg
add
lock
mov
icebp
inc
dec
loopne
rorb
clc
aaa
aad
push
aas
or
mov
mov
std
lret
jle
dec
adc
popl
adc
jmp
addr16
imul
cmpl
imul
push
dec
cmp
jecxz
sbb
mov
cmpsl
and
sti
mov
jg
xor
int3
out
idiv
lods
mov
sahf
mov
jle
lea
or
push
jge
push
xor
hlt
xchg
inc
mov
popa
ss
xchg
call
aam
xchg
adc
lods
js
xor
cmpsl
pop
in
pop
movsb
fs
cltd
or
ficompl
fldt
insb
push
daa
cltd
scas
idivl
push
ret
cmc
jno
lcall
push
add
in
or
mov
adc
addr16
jle
mov
and
sub
jmp
clc
das
add
fsubl
dec
icebp
bound
scas
xlat
dec
adc
push
cld
mov
push
xor
test
and
loop
fsubrl
push
cmp
ss
adc
jmp
ds
loopne
xlat
seta
add
roll
lahf
dec
out
cmp
cmp
push
fcmovne
hlt
mov
lret
sub
mov
loopne
pop
enter
decl
out
dec
repnz
mov
add
aad
lret
stc
pusha
and
divl
aad
les
fisttpll
fs
repz
and
mov
cs
shrb
dec
sbb
dec
xchg
jno
push
into
or
inc
or
std
xor
xchg
cmc
xor
mov
out
addr16
repnz
pop
int
jle
sahf
out
aas
mov
sbb
push
jne
cli
rep
push
ret
add
inc
xor
jnp
es
and
pmaxub
dec
or
or
dec
xor
popa
lods
sub
in
out
jg
jae
mov
add
fisubrl
popl
dec
or
bnd
or
cs
imul
mov
push
sarb
aaa
xor
xor
lea
stc
and
add
inc
das
mov
xchg
ja
cmp
and
push
into
decl
and
adc
jmp
insb
inc
ja
cld
mov
push
cmp
jle
cmp
je
add
mov
nop
pop
inc
sub
pop
lock
faddp
rcll
pop
out
mov
fists
push
ljmp
out
add
out
mov
pop
jecxz
xlat
mov
aad
out
rorl
mov
lea
fcomps
sbb
inc
mov
add
pop
test
stos
sti
add
addr16
pop
idiv
clc
loop
mov
dec
push
dec
cwtl
push
clc
mov
xchg
repnz
dec
insl
std
pop
imul
jmp
pop
dec
pop
iret
xor
jo
stos
pushf
inc
fdivrs
jl
jecxz
cmp
add
mov
push
and
pop
insl
lcall
pop
imul
cmp
jb
mov
dec
or
fstl
test
cs
out
push
dec
sbb
fbstp
mov
fidivrl
xor
ljmp
xchg
jo
out
mov
ljmp
sbbl
pop
or
cmp
xchg
out
dec
movsl
mov
fcmovnbe
xor
pop
cmc
cmpb
push
stos
aaa
xlat
jmp
in
push
rcrl
rol
inc
xor
and
cmp
mov
mov
fmull
jp
out
aad
jo
jo
leave
pop
lret
jae
xchg
decb
mov
inc
das
enter
test
fwait
lock
xor
and
mov
dec
cmpl
insb
setbe
push
movsl
aad
repz
daa
jns
popf
out
or
sub
sbb
popa
ret
enter
pop
jbe
jg
repz
cwtl
adc
push
outsl
jb
jns
fidivs
push
cmpb
out
cmpsb
test
out
mov
and
movb
lret
cmp
adc
mov
adc
xor
popf
in
in
lcall
add
xchg
xchg
loop
nop
stc
cmp
push
popf
push
mov
mov
mov
sub
inc
pop
out
push
fmuls
xchg
sbb
push
sbb
push
add
icebp
imul
test
movsb
or
xor
fs
jg
add
ss
add
test
jns
loope
js
pop
dec
rcr
outsb
arpl
pop
inc
adc
pusha
negb
sahf
sti
push
push
rcll
jns
rolb
lcall
sub
andb
sbb
pushf
into
and
mov
mov
lods
fs
push
stc
adc
xor
cs
shr
mov
and
xchg
dec
aad
mov
dec
aaa
mov
cwtl
jns
cmp
xchg
adcb
les
sub
mov
jbe
lret
add
pushw
lret
out
test
addl
mov
les
mov
std
fs
jne
pusha
hlt
inc
arpl
jo
cwtl
lods
stos
popf
adc
xchg
fwait
jns
sub
mov
in
aam
sbbl
mov
push
cmp
das
popf
xchg
scas
xor
jl
pop
iret
leave
lahf
cmpsb
loop
test
pop
sti
pop
inc
mov
pop
jmp
aam
pop
jp
push
nop
dec
repz
dec
or
and
cwtl
xchg
dec
bound
adc
orb
jnp
add
add
push
in
outsl
shrl
cli
out
pop
inc
push
in
mov
leave
sub
jb
cmpsb
mov
cld
mov
insb
mov
jnp
pop
daa
inc
mov
jnp
jecxz
jge
out
push
adc
cmpsl
iret
icebp
xchg
rcrb
and
dec
dec
mov
mov
xor
dec
cbtw
dec
jo
test
push
aad
push
stc
cmpsl
andb
in
stc
enter
jl
sbb
and
mov
pop
jmp
xchg
mov
and
jo
and
adc
mov
out
mov
sub
dec
jbe
es
mov
les
xchg
divb
dec
outsl
loope
xchg
int3
sub
lock
sbb
inc
insl
fnstcw
or
dec
insl
outsl
test
jo
add
pop
shrb
inc
jbe
jmp
popa
pusha
pop
aaa
inc
ljmp
mov
xchg
fdivrs
fists
sub
cmp
nop
repz
stos
xlat
movsb
int
loope
mov
mov
hlt
popa
dec
pusha
xchg
lcall
mov
jmp
daa
in
aam
xchg
jo
cmp
out
sub
lods
jbe
dec
xor
movsb
popa
adc
dec
lods
sar
scas
jno
ss
jp
or
pop
faddl
mov
mov
incb
insl
xor
inc
scas
mov
sbb
cmp
in
adc
test
mov
xor
jb
jp
mov
xlat
xchg
clc
sub
aam
std
cs
jo
pop
mov
and
xchg
bound
insl
fs
aad
and
xor
iret
push
negb
aas
jg
push
pop
mov
js
loopne
lret
mov
jle
add
push
in
push
sahf
push
pop
lret
or
xchg
insb
push
out
cltd
out
jecxz
xchg
push
call
push
int
push
nop
mov
inc
xor
lock
das
xchg
addl
or
cwtl
mov
js,pt
jno
in
mov
sbb
ds
popl
sbb
add
inc
mov
jp
cmp
test
cmpsl
in
add
cwtl
sbb
xchg
pop
jecxz
mov
inc
mov
aas
mov
adc
iret
adc
xlat
pop
pop
push
push
outsl
or
imul
fistps
scas
fwait
insb
stos
je,pt
lods
lahf
out
push
imull
adc
add
jecxz
dec
cli
jecxz
lods
xor
mov
lcall
push
and
mov
leave
jl
leave
mov
sub
jns
ret
jle
lods
data16
das
out
or
loope
clc
sub
push
mov
lret
xchg
fimull
stos
lea
and
mov
jp
rolb
cmp
sbb
dec
sahf
outsb
ret
test
adc
or
xchg
mov
mov
fs
hlt
inc
push
jbe
rorb
jg
mov
xchg
pop
addb
push
xchg
lcall
pushf
adc
test
lea
jmp
pop
std
aam
xchg
out
mov
in
push
std
xchg
mov
out
test
test
movsl
cmp
mov
pop
in
insb
clc
cmp
fdivrl
xchg
in
xor
xor
daa
push
jmp
adc
jmp
popa
xchg
arpl
js
sub
add
xchg
cvtps2pd
pop
mov
iret
fldl
xchg
pop
pop
loop
push
shlb
xchg
and
pushf
jns
or
outsl
and
fs
xor
movsb
push
jmp
icebp
mov
sbb
sub
mov
or
mov
test
lods
pop
fcompl
cli
pop
add
test
mov
mov
daa
ret
pop
mov
inc
xchg
ja
iret
push
mov
test
push
mov
out
or
adc
jb
push
std
rorb
jb
or
xchg
std
mov
rcll
mov
out
repz
outsb
cs
inc
mov
mov
push
mov
loope
push
fisttpl
pop
dec
in
xchg
cmpsb
cmp
fildll
sub
push
lds
in
pop
dec
xor
mov
mov
in
fiaddl
imul
cld
inc
mov
and
out
and
xor
sbb
lret
testl
adcb
cltd
adc
ljmp
pop
aas
arpl
lret
cmp
lods
mov
int3
pop
popa
inc
xorl
mov
popf
out
pop
out
in
je
inc
sbb
mov
jle
movsl
test
add
sub
push
push
fiaddl
adc
dec
or
sub
push
out
xlat
fdivp
push
jg
xchg
lods
dec
push
add
int3
test
dec
mov
or
hlt
inc
leave
ja
daa
push
pushf
mov
jbe
sub
scas
dec
and
push
inc
fists
ficompl
cmp
jnp
orb
push
xchg
outsl
mov
and
add
and
cmpsb
pushf
mov
xchg
cmp
xor
and
stos
mov
int3
xchg
aas
cltd
jl
rcrb
cmp
push
mov
jl
xchg
in
xor
int3
pop
and
lods
dec
add
aas
in
mov
xor
push
dec
arpl
sub
js
xchg
mov
mov
loopne
xor
sub
mov
lret
cmp
addr16
jo
mov
dec
adc
cmpb
imul
mov
cmp
xchg
mov
adc
jge
or
aas
or
movsl
pushf
xor
shrb
stos
imul
insl
sub
cmp
lds
scas
fdivrl
and
jp
or
cmp
fidivrs
nop
push
shrb
xchg
shrb
lcall
xchg
cmc
xchg
lahf
out
jecxz
js
loope
icebp
or
ljmp
popl
movb
popa
stc
gs
sub
mov
in
or
add
orl
inc
int
mov
jnp
outsl
fistpl
jns
scas
sbb
stos
ds
leave
stos
in
mov
mov
jmp
test
xchg
out
xchg
imul
and
sbb
mov
sbb
cltd
cli
xchg
mov
daa
xlat
clc
xchg
add
mov
dec
enter
xchg
sub
data16
fidivs
mov
jecxz
xchg
outsl
inc
addr16
bound
push
add
lods
pop
cs
or
dec
pop
out
inc
xlat
and
add
cmp
je
lock
shrb
int
in
int
and
mov
data16
aaa
jmp
jle
repz
daa
scas
and
imul
sbb
insb
test
cmpsl
negb
or
xchg
xchg
mov
lea
and
sarl
inc
out
out
faddl
mov
pop
fisttps
mov
xor
adc
vpackuswb
push
in
mov
sub
dec
je
sub
int3
mov
mov
js
stos
and
ret
imul
sahf
test
or
cmp
xor
and
movsb
mov
jb
in
inc
int
lret
addr16
mov
mov
in
pop
test
imul
enter
imull
xchg
sub
cld
inc
xchg
jp
inc
mov
pusha
and
mov
adc
pop
inc
or
mov
add
outsb
jg
fdivrs
xchg
pop
add
pop
sahf
mov
iret
repnz
push
in
mov
add
dec
xchg
pop
pop
mov
push
jno
fistpll
idivl
fsubp
jnp
xchg
outsl
sub
lahf
inc
movd
mov
dec
mov
std
xor
pop
fiaddl
mov
mov
mov
enter
into
inc
out
ds
ds
ds
addr16
pop
add
add
inc
xor
and
insl
mov
xchg
xor
jnp
sub
aaa
inc
xor
sub
dec
shrl
cltd
sub
pop
push
sbb
pop
mov
mov
add
stos
adc
jbe
shrb
sub
jmp
mov
enter
fists
aaa
or
jp
leave
lret
add
into
jbe
add
cmc
push
in
or
adc
into
sbb
test
push
mov
lds
data16
mov
mov
divl
mov
sbb
mov
repnz
loopne
movsb
or
mov
push
lcall
fs
xchg
mov
loopne
fistpl
cmp
push
test
and
imul
xor
xor
lods
gs
xchg
xchg
out
lods
xor
mov
adc
dec
scas
mov
push
sbb
mov
out
and
and
push
das
inc
clc
mov
pop
sbb
or
or
sbb
ja
aaa
sub
mov
stos
movsl
shrl
arpl
push
outsl
cmp
cltd
add
pop
mov
xchg
rorl
imul
loope
pop
adc
lock
sbb
mov
fs
cmc
std
adcl
mov
add
je
jl
xchg
dec
mov
imul
inc
pop
les
outsb
in
mov
lods
add
sub
pop
sar
push
dec
fdivrs
test
movsl
xchg
loope
ljmp
cmp
jo
mov
shl
mov
aas
pop
dec
xchg
lea
dec
adc
inc
jge
subb
int
popa
in
dec
sub
je
inc
outsl
fnstenv
push
insb
push
push
std
std
movsb
dec
push
xor
and
sub
pop
jmp
xchg
aad
adc
xor
dec
mov
mov
add
xor
call
cmpsb
xchg
dec
out
shlw
inc
and
and
sbb
or
dec
or
xor
lods
and
and
cmpsl
jae
popf
push
push
inc
mov
out
sahf
pop
into
je
jb
jp
xchg
out
inc
or
mov
arpl
jne
arpl
fsubr
ljmp
addr16
dec
add
cmp
lock
sbb
cli
stos
outsl
cmp
stos
mov
repz
loope
and
mov
mov
ror
cmp
fsubr
es
cmp
cs
aad
addr16
cmp
das
xor
dec
sbb
add
arpl
cmp
repz
mov
sub
fsubrp
inc
insb
insb
inc
cli
dec
dec
hlt
mov
into
fistps
test
push
icebp
fsts
pop
xor
fsubl
hlt
push
loopne
jg
ret
push
in
in
je
clc
sti
frstor
push
mov
insl
adc
cmp
sub
sbb
push
into
jl
mov
mov
shlb
ja
cmp
mov
xchg
hlt
imul
fwait
popf
push
mov
fwait
and
clc
add
stos
loope
inc
jno
mov
push
cmpsl
int3
xor
sbb
aas
imul
sbb
push
push
mov
add
sahf
push
popa
pop
jns
imul
mov
inc
adc
sbb
and
xor
lcall
and
jno
sub
xchg
xchg
lock
cli
sbb
xchg
enter
mov
ljmp
pop
outsb
test
lea
jne
gs
xchg
into
cs
popf
push
loopne
jecxz
cltd
loop
scas
mov
push
out
outsb
dec
in
and
das
lds
dec
cld
lods
and
cli
xchg
popf
push
dec
mov
jne
cs
xchg
push
add
loope
clc
shlb
test
inc
std
cs
in
ja
xor
lahf
sbb
aam
and
mov
sub
fistl
and
pushf
xchg
add
sub
sahf
and
ds
jo
lods
mov
and
lcall
lret
insb
mov
jns
test
sarl
mov
ret
popl
int
sub
cmp
adc
testl
or
push
mov
mov
mov
push
cs
rol
mov
mov
clc
cltd
sahf
shlb
mov
roll
or
imul
mov
xor
les
jno
scas
lods
out
fistps
cmp
jl
mov
mov
jecxz
mov
fdivrs
andb
loop
and
xor
ficompl
lahf
mov
mull
sti
xchg
gs
mov
push
sub
mov
popa
out
xor
popa
test
sub
sbb
into
mov
fistl
mov
xchg
cli
mov
stos
dec
imul
lock
fadd
lret
mov
xchg
bnd
bound
xor
insl
insl
jmp
insl
xor
stc
stos
dec
jg
ljmp
sahf
mov
imul
pop
mov
outsb
hlt
jbe
cmpsl
fucomp
js
adc
cmp
fsubrs
sti
nop
jmp
ss
xor
cmp
push
sbb
mov
sub
sub
clc
hlt
or
sbb
pop
jae
cmp
scas
push
adc
cli
add
xor
enter
adc
jno
inc
aaa
aaa
neg
xchg
pushf
rolb
jns
out
data16
mov
aaa
int
into
push
cmc
jo,pt
pop
cmp
add
xchg
xchg
mov
and
adc
and
je
and
sar
fsubrp
dec
sbb
call
jae
or
xchg
jge
xchg
push
mov
in
ret
ss
inc
mov
jo
maskmovq
notl
int3
adc
cmp
test
xor
ret
add
fdecstp
bound
iret
inc
test
or
mov
lock
adc
xchg
movsl
mov
mov
and
push
push
push
cmp
dec
pop
outsl
mov
jno
sbb
jle
dec
jno
fucom
addr16
xchg
cmp
popa
mov
rorb
icebp
outsb
mov
repnz
ljmp
nop
push
test
sub
cmp
dec
leave
add
les
mov
call
sub
cld
inc
inc
dec
dec
jmp
addr16
arpl
jmp
mov
inc
pop
insl
repz
dec
cwtl
mov
dec
lods
push
push
jmp
mov
cld
in
mov
cltd
inc
ret
sbb
pop
or
xchg
jb
out
out
gs
sysret
dec
xor
mov
aas
aas
sbb
fbstp
es
jmp
in
mov
fistpl
and
jp
adc
sbb
test
out
mov
aam
cltd
xor
fsubl
xchg
cmp
fwait
inc
xlat
sbb
outsl
cmp
push
mov
mov
push
imul
inc
fnstenv
cmp
add
mov
popf
and
ja
pushf
movb
dec
dec
sbb
or
inc
push
aaa
sub
sbb
stos
pop
adc
ljmp
sub
cmp
jle
xchg
sub
mov
and
lds
xor
sub
or
fimull
jne
and
in
addr16
cld
lock
aad
push
mov
jnp
add
aam
movsl
xchg
enter
dec
push
cmp
sbb
insl
mov
adc
rcll
and
ds
sbb
aam
add
or
lock
jecxz
mov
lods
lahf
filds
lret
adc
mov
push
dec
cwtl
push
push
push
xor
cmc
imul
repz
fwait
shrl
mov
push
popa
push
mov
orb
inc
adc
in
nop
cli
loope
imul
jge
jg
clc
jne
sbb
scas
sbb
and
dec
cmpb
pushf
adcb
push
outsb
push
lods
push
imul
jle
aaa
or
fs
push
addr16
xchg
dec
cmpsb
jne
daa
das
xor
mov
ja
enter
sub
xchg
dec
or
inc
ss
mov
mov
push
mov
xchg
sub
xlat
repz
or
arpl
sarb
scas
shlb
pop
pop
pop
mov
imul
sbbb
movsl
aam
test
push
test
xor
mov
or
push
add
cwtl
cltd
and
jmp
fsubs
xchg
test
cmp
sar
call
cwtl
fsincos
xchg
cli
loope
push
xchg
icebp
add
mov
pop
ja
in
aam
test
xorl
mulb
adc
add
xlat
icebp
cltd
mov
ret
mov
ja
push
pop
mov
xchg
push
mov
es
or
push
stc
or
mov
mov
rep
aaa
imul
xorb
jae
out
pop
cmc
mov
div
mov
movl
fisttpl
dec
push
stos
mov
xchg
mov
cmp
push
dec
xlat
pusha
mov
xor
dec
xchg
sbb
pusha
je
dec
jecxz
rcll
sti
addb
and
and
mov
adc
in
std
cli
mov
fstl
movsb
cmp
test
in
in
les
sub
xchg
xor
xor
pop
adc
xchg
push
nop
xchg
cmp
mov
or
lahf
mov
mov
mov
gs
mov
and
aaa
les
arpl
push
or
push
adc
cld
addr16
lods
push
insb
mov
stos
xchg
popl
jo
mov
rcrl
clc
int3
lret
cmpsb
arpl
or
mov
sub
xlat
in
je
mov
scas
dec
jnp
dec
lods
cmp
add
dec
aaa
dec
mov
js
outsb
daa
inc
inc
pop
xchg
lds
sbb
pop
loopne
push
adc
out
cmp
cltd
xchg
pusha
mov
mov
jne
adc
mov
inc
mov
mov
push
mov
hlt
sub
xchg
das
mov
bound
push
test
and
nop
cmp
xor
aam
pop
push
jp
fldlg2
mov
jmp
mov
inc
inc
out
clc
mov
jp
pop
rcrb
or
add
sub
sub
std
jp
inc
or
aas
lds
test
adc
clc
arpl
fnstcw
add
stc
nop
leave
test
jecxz
or
iret
push
shll
dec
push
pushw
int
cmp
mov
sbb
lds
inc
loopne
gs
add
mov
fxch
cmpsl
pop
mov
or
adc
lret
test
call
and
and
aas
loop
cmpsb
ficompl
fwait
call
scas
sub
pop
push
popa
xchg
push
jp
xchg
xchg
bound
sub
push
fs
and
push
or
sub
scas
mov
in
and
fstsw
sahf
xor
sbb
fistpll
jl
ret
je
xor
sbb
int
and
nop
mov
dec
mov
push
jb
shr
loop
mov
insl
clc
pop
nop
loope
lcall
and
enter
cmp
jo
imul
adc
xor
out
sbb
xor
push
test
mov
xchg
xor
clc
mov
jb
push
xlat
icebp
sub
sub
cmpps
pop
push
xchg
cs
xchg
aam
cmpsb
scas
stos
and
pop
inc
int3
je
lods
aad
pusha
xchg
sahf
inc
or
lahf
mov
pop
mov
and
dec
sub
insl
dec
loope
ret
dec
xor
inc
mov
xchg
xchg
adc
sbb
adc
push
xchg
ret
pop
idivl
lahf
pop
loopne
add
lock
mov
aaa
out
lahf
imul
js
sbb
pusha
arpl
lahf
add
mov
or
cmp
pop
jbe
rol
jmp
inc
mov
jp
add
out
lcall
int
mov
xor
stos
jnp
repz
pmulhuw
pop
test
mov
mov
je
push
add
add
add
es
scas
idivl
dec
push
icebp
divb
ret
pop
shrl
mov
cld
push
jp
out
lds
xor
sbb
mov
push
loop
sub
pusha
ljmp
lds
lret
or
cwtl
push
loope
pusha
pushf
lds
mov
les
fsub
pop
push
je
fcmovu
imul
subb
mov
movsb
fidivrl
test
cmp
add
repz
sbb
call
inc
jb
popf
xchg
jecxz
inc
movsb
mov
ljmp
movsl
xor
cmpsl
adc
repz
stc
cmp
dec
outsb
or
fisubrs
lods
cmp
pop
icebp
lahf
mov
sti
add
test
jo
inc
dec
sbb
mov
sub
ds
mov
andl
shrl
dec
dec
jp
jle
pop
xchg
pop
mov
mov
inc
xor
push
fsubr
lret
add
xchg
inc
retw
aad
jbe
cmpsb
sbb
clc
das
mov
in
data16
out
roll
xchg
pushf
popa
pusha
in
add
out
aaa
in
lcall
xchg
es
xor
push
and
lds
jno
dec
add
cwtl
inc
aas
push
mov
test
out
rorl
rclb
xor
js
popf
mov
sub
or
xor
in
inc
stos
dec
shrl
sti
rclb
xchg
test
mov
repz
mov
cmc
test
xor
aas
adcb
icebp
adc
inc
mov
imul
loopne
js
addl
gs
test
pop
xor
fistl
fimuls
inc
minps
mov
add
or
outsl
inc
popf
stc
or
pop
repnz
xor
adc
loope
or
cmp
mov
add
insb
or
sbb
push
sti
lcall
sub
mov
push
sbb
mov
xlat
mov
sub
sub
in
in
jmp
aas
dec
clc
pusha
cld
push
ja
es
adc
int
pop
and
mov
aam
call
into
add
test
jmp
hlt
push
in
xchg
and
les
and
push
sbbb
dec
loope
int3
scas
inc
pop
loop
cmp
loopne
je
or
xor
dec
push
aam
cmp
je
testb
add
scas
shll
call
in
sbb
jb
ret
lahf
and
jg
in
xchg
jl
aad
jg
inc
xchg
aad
inc
fs
xchg
fisttpll
pop
rclb
xor
jecxz
bound
call
mov
ficompl
scas
sbb
aaa
add
dec
loopne
cmp
rcll
pop
stos
xor
cmp
mov
clc
data16
mov
out
std
hlt
cld
mov
xor
arpl
in
add
mov
cli
fnstsw
enter
mov
cmp
xchg
stos
inc
fisubs
js
decb
and
insb
and
and
cmpsb
iret
das
repz
cmpsb
lods
mov
lret
sbb
add
fldenv
cmp
jl
test
fstps
lret
sti
in
inc
sub
mov
or
sub
fst
jp
add
dec
mov
pop
fwait
pop
pop
dec
and
pop
adc
test
cmpsl
call
mov
cltd
adc
neg
jmp
movsb
repz
sub
or
sub
sub
mov
push
jg
cld
fwait
mov
lods
pop
mov
sub
mov
mov
inc
fisttpl
lock
jnp
in
jo
pusha
lcall
arpl
mov
jne
fwait
aam
ds
leave
addr16
jecxz
xorb
out
aad
mov
fwait
hlt
icebp
push
mov
inc
jge
pop
arpl
ja
leave
sbbb
mov
stos
sarb
lods
in
sbb
cmc
xor
jp
pop
int3
pop
sbb
inc
push
push
xchg
xchg
mov
add
popa
add
mov
shrb
int
push
and
push
push
pop
enter
push
mov
mov
mov
outsl
inc
lods
aam
inc
add
call
mov
cs
andb
mov
lahf
hlt
imul
stos
pushf
mov
pop
or
pop
sahf
lret
out
or
push
int
lret
les
inc
dec
jle
pop
mov
test
lock
sub
sbb
aad
xchg
shrb
popa
inc
rorl
ret
stc
add
cmp
hlt
or
testb
movsb
imul
loope
mov
pop
jge
popf
xor
sbb
cltd
sbb
add
jae
xchg
and
and
and
jb
call
hlt
jecxz
dec
fwait
std
or
xor
adc
or
sub
mov
aad
add
xchg
or
test
das
sbb
xchg
cmp
cmpsl
push
je
mov
mov
int
sarb
mov
dec
xor
out
ja
mov
daa
roll
enter
inc
mov
scas
xor
jo
shll
pop
add
jmp
mov
aaa
mov
mov
fucom
push
dec
stc
sahf
repz
pop
cmpsl
push
push
faddl
lcall
or
mov
sbb
dec
sub
fbstp
push
data16
mov
shl
inc
popf
push
inc
outsb
jo
lea
xchg
loopne
in
push
pop
stos
push
push
scas
sbb
mov
or
mov
out
into
adc
and
mov
dec
lcall
or
pop
sbb
ja
lea
and
push
fdivrl
pop
and
inc
dec
adc
dec
xor
aam
shlb
pop
push
int
sub
sbb
or
push
rorb
in
aam
mov
fisttpll
mov
call
sbb
lret
push
loop
sub
inc
lock
push
and
ficoml
inc
xchg
jl
cld
push
jle,pt
stc
push
clc
aas
cli
fwait
js
stc
xchg
xor
mov
or
xor
mov
test
jp
xor
ja
xchg
push
mov
sub
outsl
int
stos
mov
clc
push
push
xchg
shll
mov
pop
jecxz
insb
in
sahf
xor
vpsubq
fimull
movsb
mov
mov
mov
lcall
lds
loopne
xchg
imul
xchg
or
int
jle
out
cmc
es
xor
fstpt
popa
jge
xadd
push
inc
sub
rolb
xor
jge
jl
aas
add
dec
es
mov
enter
add
or
loope
jns
sti
mov
inc
adc
pusha
repnz
adc
ljmp
test
lahf
inc
fldl
int3
push
jge
adcl
add
jbe
add
xchg
pop
cmp
daa
sbb
push
and
add
adc
dec
lods
mov
pop
ror
jnp
cs
movsb
mov
pop
mov
cmp
inc
dec
cmp
pusha
push
or
jp
lret
sti
imul
adc
and
dec
repz
jns
push
loope
adc
mov
rcr
cltd
divb
or
daa
call
lea
imul
sub
leave
sub
sar
int3
add
jge
ljmp
idivl
sub
xchg
shll
inc
nop
adc
pop
mov
inc
dec
ljmp
inc
fcoms
pop
jno
dec
add
movntq
out
repnz
lds
lahf
rcll
loope
add
hlt
imul
movsl
mov
notl
call
sbb
test
call
adc
lds
lods
xchg
lret
les
add
insb
or
test
stos
inc
push
jmp
decb
sub
rol
adcb
jae
inc
das
fidivrs
jo
test
sbb
cmp
dec
mov
movsl
addl
xchg
test
and
or
addl
scas
cld
mov
outsl
imul
lahf
xchg
arpl
cs
push
in
push
ds
mov
popa
add
shl
aad
push
imull
lahf
push
dec
fs
cmc
shr
scas
xor
in
mov
test
mov
arpl
push
push
negl
iret
sub
sbb
je
add
repz
and
add
test
adc
pusha
adc
sub
inc
lods
add
jno
sahf
dec
ljmp
mov
add
xor
lahf
mov
test
ret
stos
iret
cmp
or
sub
inc
ja
pop
inc
sub
outsl
cmc
mov
mov
adc
loope
and
ret
push
mov
shll
xlat
add
or
mov
and
pop
jne
inc
inc
cltd
cmp
dec
xorl
xor
push
or
in
sub
into
dec
pop
mov
adc
adc
push
mov
std
mov
mov
mov
inc
adc
mov
add
out
add
insl
pop
and
xchg
push
pop
movsl
cmp
sub
cmp
inc
add
cmp
mov
aaa
pop
stos
add
mov
push
pop
jb
rolb
pop
cld
mov
xchg
outsl
adc
loop
gs
xchg
ret
test
jmp
jae
cli
dec
int
cli
in
mov
sbb
mov
inc
or
cmc
jns
fcmovu
loop
or
cli
mov
xor
mov
add
or
pop
rcr
mov
mov
out
std
clc
and
popa
aas
xchg
int3
das
push
or
rorl
fcomip
fwait
das
stc
and
xchg
mov
mov
aas
xlat
icebp
jb
inc
lret
in
lcall
mov
push
mov
pop
testb
inc
pop
jb
fidivs
pcmpgtd
lods
sbb
cmpsb
pop
out
mov
adc
jmp
mov
or
xor
fcmovnb
repnz
jge
mov
xor
in
push
pop
subb
push
test
pop
fsubrl
jnp
imul
scas
outsb
or
jns
insb
daa
mov
stos
xor
scas
mov
aaa
mulb
inc
jg
adc
jecxz
test
cmc
bound
xchg
aad
cltd
out
or
pop
push
add
sar
or
dec
sub
dec
jmp
mov
adc
and
pusha
pop
dec
gs
and
push
out
repz
std
loope
sub
fcmovbe
clc
ficoml
xlat
adcb
lods
aam
jle
push
jns
cmp
xor
lahf
cmpsl
fcoml
lods
mov
loop
mov
aas
or
and
repnz
es
sub
mov
testb
xchg
or
cs
jp
inc
xchg
sbb
fisubs
outsb
xlat
sub
out
filds
in
inc
scas
cmp
add
ja
aas
push
xchg
aam
push
or
xor
lods
fstp
gs
iret
jno
lret
jp
xor
xchg
xor
lock
shlb
add
or
dec
scas
inc
clc
jl
lds
mov
cmp
cld
imul
fdivl
aaa
fisttps
push
rcll
inc
push
dec
outsl
jle
mov
int3
cmpsl
divb
in
and
jmp
js
lea
hlt
aas
lds
push
mov
xor
shll
getsec
ret
cmpsl
enter
ss
adc
push
adc
adc
xchg
inc
hlt
scas
jg
stc
or
stos
cmp
inc
inc
into
clc
es
test
adc
sbb
movsb
jg
adc
outsb
pop
mov
sub
jle
pop
pusha
or
out
adc
mov
jb
jle
add
or
sub
sbb
add
jl
mov
xchg
jnp
mov
inc
push
hlt
sbb
test
sbb
shlb
push
popf
shl
pushf
sbb
push
cmc
xor
dec
mov
push
jg
push
push
xchg
sbb
in
out
scas
xor
call
fistl
mov
adc
xor
es
loop
leave
jge
gs
dec
in
and
test
psllw
jbe
pop
mov
test
mov
or
dec
sarl
pop
pop
sbb
cmp
and
push
test
xor
loopne
or
or
into
sbbb
dec
sarb
js
aaa
xchg
nop
or
es
or
inc
int3
je
jns
sub
xchg
fsts
bound
inc
test
sub
xlat
dec
sbb
ljmp
or
adc
cld
push
xchg
scas
jmp
adcl
add
ret
popf
fimuls
push
push
inc
out
jb
in
inc
adc
test
xchg
lds
cmp
dec
cltd
and
adc
mov
sbb
adc
fs
sbb
inc
arpl
add
dec
sub
scas
and
je
addl
xchg
xor
rcrb
out
pop
in
enter
and
imul
xchg
inc
push
xor
scas
inc
bound
shll
or
xlat
sub
adc
push
movsb
pop
mov
jbe
inc
into
xchg
cmpsb
or
cli
iret
inc
orb
cmpsl
std
loope
decl
adc
icebp
fsubrl
test
pusha
mov
cli
jo
inc
adcl
xlat
push
add
cltd
ret
cmp
push
arpl
jbe
xor
or
dec
cmp
popa
pushf
stos
int3
lds
jno
aam
cmp
cmpsl
pop
pop
jmp
rcl
sarb
call
movb
or
mov
bound
pop
cld
jo
sbb
mov
add
dec
sbb
test
insb
in
stos
lods
cltd
pop
jmp
aam
pop
cmp
inc
adc
out
imul
inc
inc
add
pusha
cmpsl
std
mov
mov
adc
cmpsb
inc
or
push
inc
cmp
push
test
lock
jbe
sub
sbb
jo
jle
stos
insl
ret
bound
lret
outsb
push
out
cmp
mov
mov
and
mov
arpl
adc
loope
mov
push
icebp
sahf
or
lret
dec
lahf
inc
mov
adc
pop
xor
testl
sub
into
scas
out
xchg
bound
repnz
divb
xor
push
nop
bound
jp
jge
or
xchg
in
js
mov
mov
jo
popa
test
rorl
and
sbb
pop
arpl
mov
ljmp
add
cmp
ds
rcll
out
in
and
inc
adc
push
jecxz
mov
fstl
jg
cmp
fnstsw
mov
and
cltd
callw
pop
inc
int
fcomi
push
aam
int
mov
cmpsb
jbe
cmp
lods
cmp
call
xchg
xchg
mov
sbb
add
mov
xor
adc
xchg
lcall
or
sub
filds
jp
je
jo
mov
cmp
and
sbb
jo
xchg
mov
pop
out
jmp
push
sub
loopne
mov
add
test
xchg
loopne
jg
out
dec
mov
push
pusha
insl
mov
xchg
mov
stos
mov
rclb
cmpb
sbb
pop
ja
mov
mov
pusha
and
push
or
sub
movsl
pcmpgtw
adc
enter
dec
ss
dec
movsl
mov
test
or
hlt
ret
jge
inc
ret
adc
dec
cmovb
sub
imul
gs
push
fmul
sub
out
push
neg
and
out
ss
xchg
lock
cmp
push
popf
fidivrs
out
aas
jns
ss
cmpsl
inc
xor
aas
jmp
fndisi(8087
xor
or
lret
loop
insb
xor
rolb
ffreep
cmp
pop
int
into
fwait
inc
repnz
sti
aas
mov
pop
test
notb
or
pop
add
mull
sub
test
or
mov
mov
xchg
inc
iret
dec
xor
push
fsub
push
xchg
jno
cli
ljmp
aam
jne
xchg
ja
daa
mov
mov
cmpl
scas
sub
lahf
jne
xchg
cs
add
jnp
ljmp
add
movsl
test
aas
cmp
mov
shrl
inc
popf
or
fcmove
or
adc
cmpb
jl
add
xor
insl
popf
sbb
inc
pushf
pop
xor
mov
add
sbb
int3
fistpll
fnstenv
mov
lea
out
cmp
push
loope
and
scas
stos
pusha
add
mov
pop
fwait
and
stos
std
mov
push
stos
es
cld
dec
adc
and
test
push
fs
not
pop
xor
cmp
inc
ja
test
aad
cmc
daa
mov
scas
fimull
pop
fcomps
ss
outsl
mov
imul
fxch
hlt
cmc
loope
out
mov
test
push
rcrl
jge
xor
sub
mov
bound
mov
test
ss
xchg
sub
jnp
je
pop
es
xchg
cmp
in
cmpsl
pop
jp
jnp
xchg
pop
and
xchg
and
jge
pusha
dec
insb
mov
jecxz
add
fstpt
arpl
jo
or
stos
sub
mov
pop
clc
repz
xchg
fisttpll
cmp
scas
mov
repz
sub
lret
mov
pop
pushf
xchg
pop
in
mov
or
addr16
fmull
jmp
xchg
in
dec
sarl
mov
bnd
bnd
rcll
mov
xor
in
mov
pushf
lret
mov
or
mov
in
imul
add
mov
pop
cmp
lock
cs
mov
sahf
jnp
adc
xchg
pop
mov
push
hlt
dec
mov
mov
xchg
or
jecxz
sub
scas
sub
jl
stc
inc
xchg
ja
xlat
xchg
fs
fbstp
mov
dec
lods
loopne
lret
pop
loopne
mov
idiv
adcl
into
das
das
mov
xchg
cs
mov
imul
pop
sub
rorb
adc
data16
sbbl
loope
fimull
mov
cmovb
stos
loop
add
add
pusha
xor
leave
sub
repz
scas
ljmp
push
add
sbb
lea
fs
mov
sub
push
shr
sub
lock
jo
mov
jecxz
xor
addl
push
negb
sbbb
push
xor
sbb
pop
jae
jnp
xchg
les
test
fimuls
mov
push
xor
scas
jb
jl
imul
mov
mov
mov
push
cmp
xlat
push
dec
aaa
out
in
mov
sbb
imul
mov
movsl
xor
sti
fs
pop
jl
lds
xchg
sub
add
and
adc
lret
fistps
sbb
dec
add
jne
pusha
test
std
arpl
sahf
daa
loope
xor
call
in
lret
inc
mov
fs
dec
cmp
mov
out
xor
int3
sub
inc
or
aas
js
scas
pusha
inc
std
cmc
sbb
jns
aas
push
lret
in
scas
inc
jle
cmp
mov
sti
or
add
aas
out
lods
dec
data16
inc
in
or
sbb
out
pop
lret
push
mov
pop
mov
movsl
dec
or
loope
sti
in
sub
pop
mov
mov
mov
out
push
imul
cmc
dec
fildll
jb
jnp
mov
mov
mov
xchg
mov
pop
std
cmpsl
adc
adc
lea
push
js
das
sti
xchg
pop
inc
jecxz
nopl
or
mov
lret
sti
stos
outsb
and
xchg
movd
loope
out
jb
adc
mov
push
push
push
insl
ret
jnp
fldt
loop
dec
enter
inc
jp
test
js
sbb
xor
push
lar
jno
into
negb
mov
leave
push
mov
jmp
mov
shrl
pop
mov
xor
and
push
mov
and
es
imul
push
mov
insl
dec
sbb
inc
clc
bound
sub
and
cmp
and
mov
outsl
fiaddl
jmp
fisttpl
xor
and
dec
lahf
dec
test
jge
stos
outsb
push
sub
cmp
inc
or
pop
sahf
mov
or
mov
sbb
xchg
mov
push
mov
loopne
jge
jl
ljmp
sahf
sahf
mov
fstl
test
fisubrl
xorl
jl
jp
int3
sub
fwait
xchg
loop
xchg
out
popf
aas
lea
sub
pop
cmpsl
jae
or
fnstenv
xchg
push
mov
idivl
das
daa
sti
cli
push
cmp
xor
jb
insb
lds
pop
dec
and
mov
popa
repnz
jo
lret
dec
jo
and
cmpsb
adc
dec
out
jmp
jecxz
sub
pop
mov
pop
adc
popa
add
hlt
xchg
int
mov
shrb
push
mov
ficompl
lods
mov
shlb
sarl
push
stos
fisttpll
mov
pop
and
or
loope
outsb
cld
aaa
and
and
sub
cmp
aam
or
push
subb
inc
ss
jmp
aas
or
sbb
sbb
dec
adc
push
mov
mov
shr
ds
mov
popa
jmp
out
psrad
add
pusha
std
jnp
fiadds
lret
not
dec
scas
cmp
cli
ret
and
mov
notl
or
scas
shlb
les
mov
movsl
in
cmp
inc
repz
push
pop
mov
movsb
inc
imul
jns
xor
imul
decl
xchg
into
cmp
adc
xchg
pop
mul
cmp
fwait
inc
movsl
cmpsb
xor
xchg
jb
jne
mulb
mov
or
gs
aad
fldenv
bound
mov
xchg
and
cltd
fidivrs
loop
mov
xor
sub
mov
scas
repnz
cmp
call
cmp
out
pusha
ds
sahf
test
aas
test
inc
jecxz
jo
jns
fsubr
lret
shr
mov
xchg
xor
je
add
jo
jne
xchg
xor
pop
dec
stos
sbb
lods
sar
repnz
lds
push
pop
in
in
or
mov
cli
and
hlt
jnp
jle
fldenv
jg
inc
xlat
xor
cmpsl
pcmpeqw
mov
adc
add
and
mov
jecxz
adc
cld
jbe
jbe
inc
lcall
and
sbb
aam
jp
xchg
std
outsl
add
cmp
pop
xor
lds
cltd
aam
and
outsb
fldenv
lods
cmc
mov
and
or
icebp
outsb
inc
inc
mov
les
push
es
jne
mov
sub
push
push
adc
mov
sahf
stos
push
sub
pop
mov
or
inc
adc
pop
ds
xor
push
sbb
data16
jl
rorl
enter
sbb
push
packuswb
arpl
movsb
jle
subb
push
lods
cmc
jbe
aaa
lahf
popf
and
out
push
inc
stc
int
rcrb
aad
add
cltd
jo
notb
pop
jo
jo
shrb
lods
jb
rcrb
or
fxch
push
fmull
dec
sub
jge
xchg
int
mov
das
pop
adc
jge
sbb
push
add
in
fcoms
jge
int3
leave
fs
nop
loopne
mov
idivl
rcrl
int3
mov
stc
orb
inc
xor
jns
scas
popl
jo
movsl
insl
xchg
dec
add
into
inc
push
or
popa
into
inc
mov
mov
scas
or
pop
sub
cmp
sahf
bound
jg
cmp
stos
cld
aad
jo
das
add
clc
scas
xor
and
mov
sti
rclb
push
loope
pop
inc
or
lods
inc
mov
xchg
mov
cmpsl
aaa
mov
cmp
sub
xchg
sti
dec
and
lods
mov
mov
mov
lods
sbb
adc
push
into
and
cmpl
lds
enter
test
jno
repnz
inc
ficoml
add
and
scas
sbb
out
fwait
jbe
sub
clc
test
xchg
jns
jnp
sub
test
mov
enter
repz
xchg
or
xor
push
push
inc
pop
loop
pop
shrb
cmp
xchg
sub
das
adc
fstl
xchg
popf
inc
inc
cs
jne
jl
and
enter
fs
mov
mov
jp
jg
xor
push
mov
jno
mov
dec
stos
sub
test
dec
mov
push
inc
sub
les
sub
cmp
faddl
mov
pusha
xchg
or
push
push
cmpsl
push
lods
jge
imul
fimuls
xchg
andl
movsb
xor
lock
test
popf
adc
sar
mov
les
js
sub
popa
xchg
adc
xchg
dec
dec
dec
icebp
mov
fidivs
imul
aaa
sti
sub
movsl
push
mov
fucompp
add
mov
lods
inc
dec
inc
rcrb
adcb
lret
stos
mul
insl
into
dec
movsl
pop
fsubrs
imul
mov
pop
aas
icebp
lea
jp
push
daa
pop
push
push
addr16
adc
jb
xchg
pop
jo
aam
movsb
loop
xchg
cmp
subb
inc
lret
ret
mov
inc
pop
sub
scas
cmpsb
hlt
test
outsb
fwait
cmovp
mov
pop
jbe
inc
sbb
mov
xchg
stc
cltd
xchg
mov
fdivrs
cwtl
and
jecxz
and
xchg
mov
jnp
jns
mov
cli
and
push
and
int
push
stos
aam
mov
rcl
loope
mov
inc
shrb
icebp
adc
scas
sub
mul
adc
mov
sbb
pop
dec
inc
insb
mov
inc
inc
shl
add
fcmove
mov
rolb
pop
adcl
mov
clc
or
pop
movsl
dec
dec
xchg
jne
faddl
test
sbb
mov
pop
ss
cmp
movsl
cltd
ss
mov
mov
pop
sbb
mov
mov
shlb
inc
fbstp
out
aas
push
outsb
push
data16
or
sbb
test
pop
and
lea
aas
in
or
jns
dec
push
fidivrs
xchg
cmc
or
aaa
cmc
lock
repnz
rolb
push
daa
ja
bound
push
sub
int3
cmc
or
jge
shrl
dec
ret
and
jle
xor
xchg
out
jecxz
sbb
mov
mov
repnz
mov
test
pusha
aaa
sub
jo
test
adc
clc
stos
mov
sbb
xlat
cmp
cmpl
insb
lods
movsb
xchg
shll
cwtl
mov
lods
and
and
movzbl
dec
jp
xchg
out
js
repz
fidivl
push
and
add
push
sub
loope
mov
mov
outsb
sub
xchg
adc
loop
int
mov
ret
leave
pop
cmc
jmp
push
mov
pop
cmp
test
add
inc
mov
push
add
fdivl
arpl
xor
inc
mov
sbb
mov
in
adc
in
sbb
sub
jmp
test
xor
add
adc
cmp
push
stos
cli
jge
xchg
jne
pop
or
into
pop
mov
jl
sub
out
lock
push
ss
or
sbb
pop
push
les
ror
push
int3
push
xor
test
mov
stos
lds
jle
lret
rol
int
and
fmulp
and
pop
loope
jbe
fs
push
jmp
jp
sub
insb
inc
sbb
int
push
add
push
scas
inc
dec
sti
mov
push
xor
shrl
es
mov
adc
cmp
xchg
and
cs
push
sbb
or
pop
jmp
imul
add
daa
mov
inc
mov
ds
mov
daa
inc
data16
push
fildl
cwtl
or
xor
rolb
sub
sub
mov
push
pop
leave
add
cmp
dec
jg
loop
push
enter
sarb
icebp
in
test
inc
frstor
test
mov
cld
movsl
out
xchg
or
dec
cld
shrl
pop
push
jb
dec
mov
outsl
jnp
adc
fs
and
lcall
out
fistpll
ljmp
xchg
jns
nop
jg
pop
lds
jae
adc
cmp
sbb
out
repz
pushf
lret
push
imul
pop
mov
inc
gs
push
aas
mov
cmpsl
fcomip
loope
repz
fldenv
stc
dec
or
mov
lcall
ficomps
fdivr
cltd
cli
mov
and
or
or
test
mov
ljmp
loopne
mov
imul
fsubl
out
aad
clc
aad
cmpsb
dec
inc
int3
jge
mov
cmp
sub
cmc
out
lock
jecxz
and
shlb
ret
jnp
inc
scas
dec
popa
mov
inc
das
or
mov
loop
ja
xor
inc
sbb
lods
jnp
call
movsb
pop
aad
jecxz
inc
mov
sbb
pop
jecxz
out
dec
jno
ret
jp
adc
or
popf
ja
sbb
mov
sub
add
sti
fistpl
sti
movsl
mov
adc
mov
test
lcall
dec
add
adc
nop
mov
xor
mov
xchg
jno
cmp
add
test
sub
jl
pop
inc
cli
mov
ret
pop
lahf
sbb
sub
jo
cmp
das
pop
ja
mov
sbb
adc
scas
adc
mov
xchg
jg
rorb
sub
mov
sub
mov
cmp
dec
jbe
pop
into
sbb
push
shll
dec
aam
rcr
scas
jno
inc
inc
mov
sbb
sbb
sbb
xor
lret
inc
sub
imul
xor
ljmp
daa
loope
fldenv
mov
mov
xchg
sub
outsl
sub
xchg
lock
jo
popf
mov
add
cmp
idivb
cld
jge
ret
push
jb
pusha
pop
jo
fsubs
rcr
out
not
jl
ljmp
cmp
icebp
cmpsl
fsts
xchg
or
movaps
dec
cmc
adc
sbb
cmp
mov
jecxz
sti
mov
xchg
push
inc
add
daa
mov
nop
or
xchg
adc
xor
stos
testb
dec
negb
cmp
flds
stos
fistps
out
lret
xchg
dec
jecxz
pop
movsb
je
cmp
push
imul
pop
and
mov
or
int
mov
push
daa
mov
sub
out
mov
call
stos
out
xor
inc
push
call
shrl
inc
mov
pop
aaa
mov
pop
aas
add
inc
cltd
inc
adc
add
hlt
adc
push
shrb
daa
sub
add
lock
sbb
jmp
jl
xlat
add
pop
enter
aad
pop
in
inc
jnp
xchg
pop
inc
push
mov
int
adc
cwtl
mov
xchg
sbb
insl
hlt
loope
imul
mov
add
aaa
pop
dec
cmp
jecxz
cs
sub
mov
xor
mov
mov
fnstsw
out
into
loopne
aaa
rol
and
adc
xchg
movsb
inc
cmc
insl
movsb
xlat
jb
leave
leave
mov
push
pop
out
sbbl
xchg
in
mov
and
xor
mov
fldcw
movsl
mov
js
shll
dec
pop
mov
jmp
jg,pn
out
sub
repnz
mov
jg
xor
and
mov
not
sub
cmp
mov
adc
pushf
pusha
test
jge
mov
lahf
xor
pusha
sub
pop
push
das
xor
cmp
mov
jae
sahf
push
push
push
jae
mov
push
int
jae
hlt
pop
pushf
xchg
sbb
fbstp
popa
push
and
sarl
and
in
cmpsl
mov
push
in
aad
clc
jnp
dec
push
lods
scas
pop
pop
imul
in
fidivs
cmp
inc
es
add
xor
cmp
ret
out
and
fisttps
movsl
iret
and
sahf
xlat
add
loop
cmpsl
xchg
dec
iret
mov
scas
and
fdivs
test
mov
aam
and
jns
sub
dec
push
xchg
loopne
and
lea
out
adc
push
sti
fucomp
dec
mov
repz
ds
xchg
cmp
nop
dec
mov
sarb
mov
mov
mov
std
sub
dec
sub
es
sub
and
sarb
mov
inc
sti
hlt
xchg
daa
jae
pushf
inc
sub
test
cmp
mov
gs
inc
enter
imul
cmp
mov
dec
mov
mov
mov
push
fisttpll
lds
pop
cli
arpl
mov
mov
jno
adc
cmp
dec
pop
test
inc
aad
xor
cmc
pop
lock
dec
mov
sub
push
push
push
rclb
ja
sub
das
xor
dec
xchg
dec
pop
mov
dec
std
insb
mov
shll
mov
lahf
xorb
fcmovu
jns
jo
les
outsl
cwtl
inc
and
sub
fstpt
jns
movsb
mov
in
je
inc
xor
ds
mov
jge
xor
mov
cmp
rcrb
cmpsb
daa
out
push
dec
or
push
pusha
insb
sti
sbb
stc
or
enter
fucom
bound
dec
inc
lods
ss
sti
mov
daa
pop
mov
sub
sbb
mov
jg
push
aam
cmp
jmp
aas
das
xchg
inc
dec
sahf
mov
std
mov
and
fimull
xchg
inc
dec
stos
mov
pop
jne
add
pop
adc
mov
out
sbb
or
lret
and
mov
lret
cmc
nop
mov
adc
jo
or
sti
mov
mov
add
xchg
in
rcrb
push
out
sub
scas
add
hlt
mov
push
subb
clc
mov
add
testl
add
addr16
push
fldt
idivb
fstp
inc
out
in
pop
adc
jge
or
loopne
cmpsl
sbb
fwait
in
shll
repnz
cmp
shl
sub
dec
scas
gs
mov
std
mov
je
int
bound
ss
ljmp
and
jns
pop
jo
stc
movsl
cmp
mov
fucomi
dec
inc
cli
rclb
int
lret
and
dec
insl
iret
mov
ljmp
aaa
xlat
sbbb
notb
int3
daa
data16
dec
inc
jmp
stos
mov
or
sarl
ds
add
fistpll
mov
cmp
lods
push
sub
pop
sub
aad
negl
fnstenv
lahf
xor
add
and
xchg
mov
push
mov
jb
jl
sub
jno
push
mov
fs
adc
sbb
add
mov
push
imul
push
xchg
push
mov
xor
inc
jle
das
popa
or
xchg
shlb
mov
cmpsl
sbb
mov
adc
popf
and
xor
insl
imul
inc
lcall
idivl
mov
jg
movsb
pop
imul
fcmovnb
pop
dec
hlt
pop
pcmpgtb
test
xchg
xor
add
out
out
jmp
jno
in
arpl
sbb
adc
adc
lcall
pop
sub
and
pushf
cmpsb
in
dec
int
xchg
adcl
ja
imulb
push
lods
sbb
bound
hlt
pushf
outsb
insl
xor
xchg
scas
push
les
mov
push
or
dec
xor
inc
clc
and
sub
jns
outsl
fwait
cmp
add
sub
cli
cltd
rcll
sub
mov
pop
push
cltd
mov
jl,pt
imul
mov
add
test
mov
jmp
inc
mov
ret
sub
sbb
cmp
cmp
cld
into
and
add
mov
sbb
push
stos
je
sbb
xchg
loopne
mov
mov
fs
push
xchg
sbb
jmp
cmp
adc
lods
mov
imul
faddl
dec
in
cmp
seto
sub
arpl
lret
adc
popa
mov
push
pop
out
div
rep
sub
adc
push
xchg
cli
clc
cmp
and
lods
dec
in
adc
push
dec
cld
cmc
dec
mov
mov
xor
mov
mov
aas
data16
sbb
pop
ret
mov
add
lret
dec
and
mov
mov
cmpb
adc
push
cmp
sbb
lods
bound
sahf
andl
xchg
imul
mov
sub
roll
jns
dec
je
xchg
or
cwtl
cmp
ret
and
movsl
lea
hlt
ret
xchg
test
push
sub
rcll
xlat
addr16
pop
daa
xchg
sbbl
cmp
div
xor
dec
pop
icebp
cmp
cmc
and
mul
push
stos
loop
lea
mov
faddl
add
cld
and
test
cmc
inc
jne
aaa
mov
or
imul
aaa
lods
stc
xor
sbb
add
cmpsl
sti
or
adc
insb
fidivrs
dec
test
lret
cmp
sbb
popf
push
add
and
jnp
pusha
adc
xor
in
in
push
pop
xchg
mov
addr16
mov
inc
rclb
jnp
xor
shr
es
and
or
mov
js
pop
jg
popa
cmp
dec
ret
mov
add
stc
xor
dec
push
es
push
les
fmuls
test
cmpl
jnp
popa
push
sub
adc
cmpsb
lret
shr
cmp
ret
push
icebp
cmpsb
inc
sar
bound
dec
xchg
and
mov
ljmp
cmp
imul
jnp
adc
add
jne
mov
das
mov
adc
int3
and
mov
out
ret
mov
ret
pusha
mov
adcb
inc
jb
add
aas
loopne
xchg
test
cmp
sbb
push
test
in
mov
adc
int3
mov
xor
outsb
push
cmc
inc
inc
lods
pop
in
push
call
and
rcrl
xor
stos
adc
fdivl
cmp
pop
jns
into
outsb
insl
fmull
out
add
mov
pop
xchg
aad
or
lahf
mov
lock
stos
push
out
aam
aas
repnz
cmp
adc
lcall
mov
fnstcw
sbb
jno
xchg
outsl
and
jmp
pop
dec
fwait
xchg
aam
jne
mov
adc
cltd
xchg
aam
xchg
fmuls
incl
jne
mov
cmpl
xor
dec
das
mov
movsb
xchg
cli
bound
inc
jo
xor
sub
icebp
and
jle
subb
xchg
push
push
mov
in
jl
int
sarl
lock
ljmp
pop
mov
ror
and
jns
in
es
jle
out
mov
push
xor
aam
push
nop
cmpl
movsl
out
mov
test
out
ret
iret
push
aam
ds
and
les
cmpsb
ss
mov
insb
jo
pop
js
pop
inc
cld
out
xlat
insb
fwait
es
fbstp
mov
jecxz
ret
bound
js
mov
fldl
shlb
daa
sub
xor
mov
pop
add
mov
push
in
xor
inc
mov
adc
cmp
cltd
mov
mov
xlat
pop
inc
aaa
stc
movd
aam
pop
pop
loop
adc
lcall
ljmp
mov
es
pop
pop
push
lods
ja
lds
fsubrl
jbe
imul
inc
cltd
mov
push
mov
add
sbb
push
in
sub
out
dec
sbb
or
and
stos
pop
jno
into
adc
cld
xor
in
cmp
scas
fwait
lret
into
rorb
jg
jle
pop
dec
jo
sub
cli
mov
adc
adc
fs
in
pop
inc
sbb
xlat
mov
adc
dec
pop
sbb
lods
push
adc
aaa
insl
mov
mov
cltd
mov
lahf
loopne
stc
es
lock
in
sub
and
sub
sbb
cmc
pop
inc
jo
rol
inc
arpl
dec
aam
sbb
dec
xlat
sub
jno
in
cwtl
jne
aam
sbb
test
or
fwait
mov
pop
orb
add
xor
cmpsb
xchg
jg
and
jnp
leave
inc
and
lret
sbb
sbb
inc
es
mov
sub
gs
jecxz
dec
fdivr
sbb
inc
mov
and
jb
mov
lahf
cli
ror
add
loope
cmp
lock
pusha
push
fstpt
sbb
hlt
cmpsb
or
aad
popf
push
loop
scas
sub
faddl
outsb
arpl
lret
jle
fnstsw
repnz
insb
cmpsl
pop
lea
rcrb
shrb
jecxz
add
mov
xor
and
fildll
fsubr
popf
pop
in
imul
pop
sbb
mov
or
jl
mov
in
out
ja
add
and
ja
add
jb
mov
pop
jnp
sub
shll
sbb
fstpl
ss
push
scas
gs
sub
inc
mov
pusha
lgs
insb
inc
stos
push
in
push
js
addr16
cmp
insl
pusha
out
dec
sbb
ljmp
lcall
push
cld
xlat
lds
iret
shld
sub
mov
push
lods
jle
xchg
dec
lcall
mov
aas
popf
mov
jns
pusha
stc
mov
rolb
xchg
mov
ds
rolb
and
dec
repz
and
or
out
repz
fnsave
add
pop
ss
lds
fwait
clc
jae
push
and
jecxz
cmp
mov
push
divb
cmpsb
push
addr16
repnz
fisubl
divb
fwait
jbe
cmpb
mov
cmc
xor
test
jb
push
pop
mov
rcrb
shrl
mov
popa
sar
movsl
xchg
aas
rcrb
pop
dec
lahf
xchg
cmpsb
cmp
push
pushf
jle
addl
jecxz
jb
fsts
imul
rolb
inc
in
cli
in
out
xchg
shlb
adc
add
gs
loopne
mov
insl
dec
das
dec
mov
fadds
inc
test
mov
xchg
pusha
or
mov
out
push
stos
repz
lds
sub
push
mov
dec
inc
xchg
mov
push
mov
or
xor
leave
insl
pop
mov
sarl
jmp
lret
fwait
sbb
loop
jl
lods
sub
push
push
and
sub
and
jne
fldenv
sub
ljmp
jo
rcrb
daa
scas
mov
add
pushf
iret
sub
jno
je
popf
stos
dec
or
add
pop
xor
adc
into
dec
enter
jl
push
fidivl
shlb
jmp
das
dec
in
xchg
lahf
pusha
add
mov
popf
sbb
mov
and
add
je
cmp
enter
mov
mov
pop
cld
push
cmp
push
push
cmp
inc
jecxz
adc
cmp
and
xor
fsubrl
mov
rcrb
xorb
jno
cmc
jg
cmp
imul
and
inc
ds
int
jg
add
sarb
xchg
push
int
rol
ja
cmpb
movsb
jge
push
sbb
add
fidivs
dec
mov
inc
pop
or
pop
adc
jmp
sub
nop
mov
xchg
sub
leave
mov
icebp
xor
cmp
shlb
sbb
lods
data16
cs
dec
aad
call
