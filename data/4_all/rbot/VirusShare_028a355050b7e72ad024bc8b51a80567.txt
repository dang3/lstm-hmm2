call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
rcrb
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
push
std
fistl
cmp
les
jle
add
pop
pushl
adc
mov
das
add
push
push
jnp
mov
sbb
jne
push
pop
or
or
dec
inc
xchg
or
cmp
cmp
leave
ret
xchg
add
mov
stc
out
test
pop
jle
mov
pushl
call
popa
mov
jnp
jmp
sub
mov
xchg
nop
in
sbb
fwait
popa
in
add
test
add
jbe
or
fcompl
imul
mov
cwtl
bound
movd
jb
add
test
mov
push
rcr
out
mov
add
push
push
mov
sbb
mov
notl
inc
das
add
sub
mov
or
sbb
popf
cwtl
verr
iret
andb
push
mov
sbb
push
cltd
mov
movl
mov
jns
aas
mov
pop
push
add
cld
std
pop
aam
push
or
push
and
mov
clc
dec
inc
cld
mov
push
push
push
imul
mov
cmp
xor
cmp
mov
sti
loopne
je
cltd
js
and
jmp
sbb
mov
fldt
daa
in
sti
xchg
shrl
test
test
add
push
xchg
nop
nop
nop
push
enter
popl
push
enter
sbb
leave
xchg
pop
repnz
nop
sbb
xchg
nop
repnz
and
lock
nop
pop
inc
outsb
push
orb
and
loope
push
pop
push
and
rcrl
mov
push
push
in
or
repz
pop
sti
sti
inc
out
cmp
xchg
adc
sub
mov
cmp
int3
dec
call
or
fbstp
mov
into
ljmp
jne
add
clc
cld
lock
or
iret
mulps
xor
xchg
ja
push
pop
cld
clc
hlt
pop
jbe
iret
adc
fs
cltd
inc
cmp
pop
es
jnp
hlt
sbb
clc
cld
daa
cld
mov
sbb
and
orl
adc
or
sbb
add
mov
pop
jmp
ficoms
push
pop
fstpl
rcll
add
mov
subl
cmp
jp
movl
ret
loope
in
adc
pop
int3
sti
pop
bound
data16
push
addr16
add
push
jg
xchg
adc
imul
pop
clc
pop
jle
pop
or
jg
mov
fistl
mov
mov
jge
cmp
cmc
jg
cmp
setg
pop
pop
pop
and
addl
mov
mov
movl
fsubs
pop
sub
divb
ficomps
orl
cmp
out
stos
xchg
jge
dec
testb
mov
pop
pop
jmp
push
lock
test
add
pop
adc
mov
adc
push
xchg
in
or
je
enter
fcomp
das
orl
bound
popa
sub
add
fcmovnbe
int3
rcr
loopne
jnp
rorb
add
movsb
imul
cmpb
cmp
add
flds
loopne
push
outsl
rclb
cwtl
fwait
push
mulb
inc
jns
aad
pop
sti
lcall
clc
dec
into
data16
add
imul
sbb
in
sahf
push
fstpt
mov
in
inc
pop
mov
adc
in
test
xchg
sub
int3
dec
pushf
adc
xchg
mov
mov
jb
das
aad
xchg
pop
cwtl
lock
les
rolb
add
dec
dec
or
xchg
xchg
add
ret
xchg
jae
testl
sbb
inc
ss
mov
cmp
arpl
shr
sub
mov
test
jp
imul
test
adcb
pcmpeqw
xor
movd
mov
aad
pop
cmp
jne
pushf
pop
jl
push
xor
in
push
aas
les
test
xchg
ss
xor
mov
mov
cmp
rorl
insl
subb
push
mov
inc
xchg
fs
push
imull
std
adc
dec
push
add
imul
daa
out
and
mov
add
dec
fdivr
pop
orl
push
call
jmp
nop
fs
dec
fistpll
incl
mov
dec
lods
xlat
inc
cmp
rcpps
dec
jg
mov
outsb
addl
cmp
push
or
js
add
push
adc
inc
xor
mov
in
adc
push
pop
and
mov
test
int
fsts
out
sbb
mov
push
mov
jbe
push
inc
pop
fsubr
icebp
out
ds
push
andl
mov
jmp
sarl
and
scas
pop
scas
stos
or
pushl
scas
jle
add
cmp
inc
jp
imul
mov
sahf
je
pop
pop
push
jo
jl
mov
cmp
xchg
daa
or
jecxz
scas
mov
add
mov
sub
mov
adc
mov
lea
imulb
xor
ret
dec
xor
sbb
push
out
ss
jbe
push
jo
sbb
rolb
inc
xchg
or
adc
out
inc
mov
pop
push
push
dec
insb
mov
mov
sub
jg
and
frstor
push
jge
sub
cmp
jge
movntq
xchg
mov
push
push
cli
or
lock
ds
div
imul
inc
push
push
xor
or
insb
subb
pop
addb
testl
push
mov
or
cmpl
and
push
mov
push
add
jo
and
push
or
push
push
push
fildll
in
loope
pop
ret
dec
andb
xchg
add
loope
lahf
fs
sbb
stos
fnsave
pop
jae
or
xlat
push
inc
in
add
inc
pop
lock
or
insl
xor
pop
cmp
iret
mov
pop
pushl
cld
mov
push
in
or
mov
cmp
jns
call
ja
lock
cmpb
adc
or
push
imul
icebp
or
in
sbb
jge
pop
cmp
sbb
cld
lds
mov
xorl
jle
rorl
mov
add
cld
and
test
and
out
call
xchg
cmp
lds
lahf
jo
jno
add
mov
sub
push
pop
push
push
add
ja
clc
lods
lock
inc
fabs
or
psadbw
adc
pop
jmp
jmp
pop
dec
push
adc
add
outsl
mov
test
jns
add
cld
pop
pushl
lds
push
add
test
imul
jmp
es
pop
jg
outsl
insb
dec
cld
push
push
pushl
add
ret
test
pop
adc
jne
daa
clc
pop
jbe
or
aad
cwtl
mov
clc
push
cmp
mov
nop
iret
ret
mov
js
and
sbb
je
arpl
dec
lret
inc
nop
push
mov
in
data16
mov
xchg
flds
sub
sub
shrl
xor
adc
inc
push
adc
inc
sbb
pop
cld
push
push
stos
ffree
lods
and
pop
movsb
xor
sub
xor
std
dec
insl
rcrl
cmp
xchg
lock
jno
sub
hlt
push
cmp
push
jno
xchg
cmpb
inc
and
ljmp
stc
mov
mov
mov
and
and
xor
shr
lcall
enter
inc
dec
jne
pop
pop
mov
pop
not
ret
lock
out
push
notb
jp
adc
push
in
clc
negl
pop
ljmp
testb
jne
inc
push
sub
repnz
cmpl
lea
insb
ds
and
movsl
jmp
aad
mov
dec
pop
cmp
fdivs
jbe
jmp
int3
adc
ret
pop
gs
add
mov
push
std
push
xor
adc
pop
int
cs
lret
in
and
dec
rorb
shrl
rorb
and
cmp
daa
sub
xchg
lret
xlat
pop
fsubrs
fstps
fisubrl
in
jg
sbb
pmaxub
loopne
outsl
mov
loope,pn
loop
jecxz
adc
in
pop
cs
push
out
out
call
lret
in
ljmp
out
push
lret
in
stc
pop
out
dec
lock
adc
inc
repz
hlt
aaa
cmc
sbb
stos
outsl
int
clc
sub
cli
push
sti
pop
mov
sbb
add
and
mov
sar
sbb
inc
or
out
mov
incl
shll
pop
adc
push
jns
adc
add
idiv
mov
mov
inc
mov
sbb
lahf
enter
int3
aaa
test
call
dec
icebp
sub
mov
mov
pushl
add
and
inc
mov
or
mov
lea
jb
test
jge
mov
xor
jbe
inc
and
xchg
inc
orl
and
mov
jne
mov
mov
mov
mov
mov
mov
lret
inc
lods
jmp
xor
inc
cmp
cmp
dec
push
push
rorb
js
jge
sub
push
mov
call
pusha
out
push
pop
fildl
sub
das
call
mov
clc
test
add
inc
enter
sub
adc
bound
das
sub
inc
enter
push
pop
orb
mov
mov
cmp
jle
mov
inc
adc
cltd
mov
add
dec
jne
push
sbb
enter
decl
cmp
fnsave
and
pop
inc
xchg
push
fistps
std
adc
cmp
mov
mov
add
lods
movsl
movsw
call
mov
stos
stos
mov
test
lcall
stos
lea
push
rclb
sbb
loope
jo
xor
mov
rclb
jge
idivb
inc
adc
xor
push
or
pop
mov
add
call
cmp
mov
xor
cmp
das
je
and
mov
test
ret
mov
in
mov
add
cmpsb
pop
scas
inc
nop
lods
int
xor
and
mov
pop
xchg
adc
jmp
jmp
or
pop
mov
mov
add
add
scas
mov
cmpsl
pop
lret
sar
test
rorl
in
or
in
movsl
push
dec
filds
push
fisubs
adcb
push
jge
gs
and
mov
into
mov
adc
cli
or
inc
add
xchg
push
popf
test
in
aas
je
xor
mov
mov
enter
rolb
and
pop
jne
push
push
int3
out
inc
adc
and
add
push
aaa
mov
repz
in
and
push
int3
xor
paddsb
mov
push
cld
out
out
xor
outsl
movl
fwait
xchg
std
cltd
sub
sar
add
add
fs
jbe
in
inc
xor
mov
push
or
sbb
adcb
mov
cltd
fs
int3
mov
xchg
dec
lahf
lea
sbb
and
loop
pop
inc
mov
push
push
imul
outsl
ds
sbb
movsl
les
sbb
push
mov
cmpl
jne
repz
or
adc
or
inc
in
add
and
enter
rorl
mov
push
cmpsb
push
push
jae
and
add
mov
adc
insl
pop
fistpl
mov
sub
xchg
adc
inc
cmp
jecxz
pop
test
les
cmp
rcrl
je
mov
out
lock
je
pop
sbb
adc
mov
pop
or
push
mov
cmpb
jne
inc
in
cmp
lock
jl
push
push
aam
int3
mov
sub
pop
pop
cmp
addr16
sbb
dec
shrl
push
push
pop
mov
jl
pop
xchg
sub
add
cmp
test
push
xor
add
fisttpl
lcall
adc
add
mov
ja
rorb
push
and
xchg
jmp
loopne
dec
rorb
in
repz
pop
jmp
mov
ret
popf
pop
ja
clc
jne
push
jmp
push
jae
jmp
sub
jmp
enter
enter
imul
outsl
pop
xor
dec
jne
sbb
fdiv
insb
sub
adc
push
inc
bound
ret
sbb
mov
pop
mov
int3
std
in
imulb
or
xchg
jl,pt
fwait
mov
push
je
xor
push
jl
jmp
jp
mov
mov
sub
loope
cmp
cmp
push
xor
mov
or
std
cmpsl
pop
test
add
pop
xor
shl
mov
movsl
push
add
shrl
adcb
arpl
and
push
aam
add
lahf
pop
insl
dec
sti
addb
scas
into
jo
test
jb
or
xchg
insl
fdivs
sti
inc
xchg
into
sbb
jo
lock
push
jae
add
std
sbb
fisubrs
popf
dec
ljmp
or
rcrb
push
add
pop
imul
lret
pushl
out
ja
cmp
lret
dec
shrb
xor
sub
cmp
pushf
sete
shll
push
xchg
stos
das
lods
lret
imull
test
into
pop
jge
pop
add
jb
rcrb
jg
inc
and
std
out
out
mov
imul
cltd
mov
push
xor
adc
in
sbb
call
adc
inc
out
xor
and
jmp
push
int3
cmp
adc
cmp
and
out
push
mov
sbb
sar
add
ficompl
rolb
mov
repz
arpl
push
xor
jmp
lods
push
lock
mov
push
mov
cwtl
stos
in
mov
pop
add
cs
add
mov
ficoms
outsl
leave
enter
iret
jmp
aas
add
push
mov
nop
cmp
or
mov
ss
out
repnz
sbb
fcomp
push
or
pop
or
xchg
push
xchg
lods
inc
mov
add
inc
ds
dec
jo
cmp
int3
xchg
add
push
addr16
scas
inc
mov
inc
dec
leave
and
mov
dec
imul
mov
clc
and
js
loopne
pop
sub
inc
adc
jg
imul
cmp
mov
andl
push
jg,pt
mov
decl
jne
xchg
and
jmp
iret
push
xor
ret
nop
pop
inc
inc
ret
xchg
dec
adc
dec
das
shrl
fs
in
loop
enter
and
fsubs
pop
or
dec
push
ss
test
sub
pop
add
sbb
mov
add
call
add
add
stc
add
jno
icebp
add
movsb
mov
pop
pushf
ds
cmp
out
rcrl
dec
ret
inc
add
pop
cmp
incb
inc
cmp
repz
fcoms
jae
xor
cli
jae
imul
shl
cli
xchg
nop
xchg
int
cmp
xor
jo
xchg
mov
or
mov
shlb
xorl
test
adcb
mov
hlt
aad
mov
mov
int3
je
fldenv
ret
pop
adc
das
ds
jae
dec
sub
cmp
daa
jbe
push
add
push
add
sar
jg
les
jge
ja
cmpl
mov
je
shr
pop
mov
lock
adc
int3
rolb
jo,pt
int
mov
ja
or
cmpsb
xlat
je
push
mov
inc
jge
loop
xchg
push
pushf
test
ss
lods
pop
jnp
sub
mov
dec
aam
icebp
pop
mov
addr16
mov
sub
pop
sub
cmp
enter
test
je
add
dec
or
adc
push
ret
xchg
mov
in
lods
push
loopne
lret
bound
call
test
fildll
push
push
mov
fmull
in
fidivl
xor
xor
sub
lock
test
sti
rcrb
or
push
inc
cmp
inc
fs
cltd
push
movsb
aas
mov
fdivs
shll
data16
push
and
out
sbb
and
inc
xor
pop
push
arpl
mov
cld
adc
push
and
add
mov
sahf
pop
mov
fidivs
xor
sub
push
addr16
jo
lret
cmp
xchg
jne
stos
jl
rep
fcoml
push
sub
pop
pusha
inc
aam
sti
mov
aaa
lret
call
xlat
add
push
mov
adc
pop
add
leave
movsl
or
mov
popf
xor
inc
cmp
jl
fimull
push
pop
mov
icebp
dec
jle
pushaw
dec
loopne
mov
jno
fs
push
push
or
xor
shr
xchg
mov
test
and
psubq
add
add
mov
cmpsl
flds
inc
and
or
mov
je
std
out
out
jp
push
cld
pop
cltd
idiv
test
outsl
movb
inc
jmp
dec
std
lcall
leave
lea
dec
or
dec
jmp
andb
cmp
shlb
and
je
dec
je
dec
pop
and
mov
push
mov
js
jo
and
and
pop
push
loope
daa
cmp
sbb
sub
dec
imul
add
mov
loopne
adc
push
pop
clc
call
pushf
inc
shlb
clc
jae
addl
xchg
lock
xor
and
aaa
adc
jge
push
jne
and
dec
add
rclb
cld
mov
test
pop
loope
test
mov
adc
add
or
add
mov
jne
mov
pop
data16
add
sbb
lock
xchg
mov
push
dec
call
jns
push
int
lcall
sbb
sub
scas
arpl
fisttps
or
jecxz
pop
xor
adc
mov
out
cmp
mov
pop
pusha
ja
pop
sbb
and
mov
xor
cmpsl
pandn
and
push
mov
pop
xor
pop
ret
cld
sti
loopne
lea
xorb
movsl
imul
jg
popa
sti
add
lea
loopne
cmc
push
inc
pusha
aaa
sub
imul
test
push
mov
push
stc
ds
in
jne
jg
cmp
mov
addr16
and
mov
push
xchg
mov
cmp
cmpsl
and
push
dec
pop
ret
or
pop
add
push
call
jo
outsl
sbb
cmp
fs
xor
scas
push
scas
and
sti
inc
lods
pop
push
sbb
pop
loop
jb
mov
inc
mov
mov
fsubrs
in
xchg
add
sbb
push
xchg
push
insl
out
xor
sub
xchg
push
inc
push
mov
mov
xor
jp
mov
test
sub
push
movl
add
or
cmp
push
and
into
xchg
inc
cmova
adc
jle
in
inc
mov
jle
fdivr
lock
fistpll
jl
xor
clc
jg
mov
push
dec
push
je
imul
sub
pop
dec
xor
sub
or
xor
jno
dec
stos
call
or
fcomps
rolb
xchg
inc
movsb
and
iret
mov
add
hlt
sub
and
mov
lock
je
arpl
jno
repnz
pop
mov
pop
cmp
mov
rorb
jno
jmp
mov
mov
and
xchg
ja
sub
mov
jge
sbb
push
stos
mov
push
outsl
je
imul
inc
or
xchg
dec
adc
adc
cmp
inc
jmp
dec
test
or
mov
aas
ret
pop
jmp
or
mov
test
pop
add
xchg
cmc
inc
std
add
stos
loop
fadds
std
xor
enter
sbb
xchg
pop
sbb
and
mov
into
dec
and
lods
mov
add
sub
xchg
mov
and
dec
cwtl
push
dec
movsl
loop
push
pop
enter
out
sub
sub
js
mov
mov
xor
push
pusha
shll
movsb
mov
mov
pop
js
push
fs
inc
fmuls
inc
jecxz
and
adc
out
cld
push
mov
pusha
scas
iret
mov
pop
imul
jl
push
loopne
sbb
and
std
adc
pop
outsb
stos
ss
and
imul
cmpl
hlt
jne
add
adc
test
in
aad
leave
cmp
sti
pop
jbe
lea
inc
add
cmp
in
jb
pcmpeqw
cmpl
lea
test
lahf
lock
cmp
add
push
push
push
inc
mov
push
addr16
mov
mov
push
mov
jbe
mov
mov
je
ror
hlt
jmp
dec
data16
lea
mov
arpl
xchg
cltd
xchg
loopne
in
call
or
and
adc
sub
sub
cwtl
mov
fdivrl
sbb
pop
push
push
dec
mov
jb
adc
movsb
pushf
xchg
and
or
or
xchg
xchg
inc
insb
jo
inc
repnz
push
cmp
insl
aam
inc
adc
inc
xor
les
and
scas
mov
or
mov
push
dec
movsw
push
test
pop
jns
mov
lcall
and
push
mov
imul
popf
sbb
scas
test
mov
inc
scas
lock
loopne
in
sub
in
nop
repz
stos
xchg
dec
out
sbb
shlb
push
cmp
aad
je
mov
push
push
sub
into
push
xchg
dec
sbb
in
inc
mov
mov
gs
sbb
nop
or
cmpsl
and
in
push
mov
cld
int3
lcall
sbb
mov
push
jb
cmp
in
push
adcb
pop
push
jo
sub
divb
divl
repnz
jne,pn
push
cmp
nop
iret
outsl
fdivs
sti
and
cmp
jmp
and
xchg
xor
xchg
pop
xchg
mov
or
push
add
jbe
mov
and
rolb
sub
cld
pop
xor
pop
pusha
add
adcl
je
jns
sub
fs
orb
add
pop
xchg
add
push
lods
dec
cmpsl
test
inc
adc
dec
loope
and
leave
push
mov
xchg
push
sbb
out
inc
ret
xchg
and
adc
inc
aas
ds
mov
aam
xchg
dec
cli
inc
add
pop
stos
pop
mov
fisttps
xor
jg
je
pop
push
dec
cmp
pop
mov
leave
xchg
xor
adc
mov
outsb
sbb
or
jns
or
cld
repz
jne
push
add
or
cmc
jno
mov
fdivl
push
ss
sahf
dec
add
inc
in
cmp
dec
enter
add
dec
hlt
cmp
add
add
inc
jne
add
in
mov
dec
fcoml
addr16
xchg
pushf
enter
enter
in
mov
arpl
adcl
push
ljmp
test
call
or
sub
clc
pop
jmp
rorb
xchg
add
adc
inc
push
aam
mov
adc
sbb
inc
mov
orb
mov
or
shl
adc
das
adc
repz
mov
sbb
std
rcrb
test
mov
add
add
push
iret
add
mov
cwtl
shlb
and
gs
push
sub
test
fs
push
std
push
cli
jp
cltd
in
rol
inc
cmp
shrl
nop
mov
movb
cs
sub
sbb
cmp
or
cmp
enter
jne
shr
push
add
inc
mov
aam
jg
adc
add
jne
and
in
fsubrl
roll
sbb
lods
jle
add
adc
es
inc
mov
test
mov
or
imul
add
push
dec
jae
mov
insl
and
add
stc
sbb
je
pushl
adc
cs
insb
and
xlat
and
fdivr
fstpl
lods
and
loopne
std
pop
je
jne
outsb
loop
cmp
mov
mov
repz
shrl
cmpl
xor
cld
lods
daa
sbb
push
outsb
add
lret
imul
inc
mov
idivl
add
add
fmull
addl
les
xchg
xchg
fstl
bound
push
cmp
push
rep
cmpl
xchg
dec
mov
pop
jl
xchg
test
mov
rcrl
ret
je
dec
sub
test
std
and
or
inc
mov
cmp
insb
xorl
psraw
mov
jne
pusha
add
sub
mov
negb
imul
mov
add
push
pop
mov
les
mov
mov
sbb
sti
cmp
jle
or
adc
test
subl
test
push
in
or
add
nopl
pop
add
mov
mov
clc
insl
sub
xchg
add
rorl
jne
andb
addr16
and
outsl
and
jbe
rcll
push
data16
hlt
jmp
xchg
or
sub
inc
data16
insb
xor
loope
cs
je
add
mov
sbb
rolb
pop
cltd
inc
add
adc
jge
cmp
mov
push
sbb
and
test
jnp
xor
push
add
add
imul
sbb
clc
xor
cmc
test
cmp
int
std
popa
xor
push
sbb
dec
xchg
and
and
lock
outsl
fcmovne
xchg
sub
aad
addr16
push
les
repnz
cmp
sbb
pop
xlat
enter
xor
lods
dec
or
sbb
sub
outsb
je
sbb
out
sysenter
jns
repnz
in
sub
and
push
xchg
out
out
sbb
pop
adc
mov
xor
les
es
push
mov
mov
push
call
jmp
add
mov
sbb
xor
push
dec
sbb
cmp
sub
sbb
cmp
pusha
sbb
push
andb
inc
dec
test
xor
sbb
or
dec
xlat
dec
mov
cmp
adc
leave
xchg
daa
test
mov
fcom
addb
clc
add
imul
add
mov
xchg
enter
push
and
mov
sbbl
nop
testb
cmp
out
test
dec
inc
fs
mov
dec
inc
xchg
je
sbb
daa
adc
call
adc
xlat
xchg
sbb
not
enter
push
inc
in
sub
negb
adcb
jae
add
pushf
add
add
enter
in
rcl
mov
fxch
enter
mov
xor
dec
data16
pushf
dec
loopne
mov
or
int3
aad
shlb
or
jp
or
loopne
jo
cmp
mov
mov
cmp
sbb
push
cmp
sub
in
sbb
sbb
sbb
stc
cmp
add
xlat
in
lcall
aad
repnz
fstps
je
in
cmp
iret
hlt
sub
pop
leave
sbb
enter
out
xchg
add
mov
rorb
sbb
jl
leave
in
fs
push
cmp
or
push
mov
inc
sahf
sbb
sbb
mov
jo
imul
inc
push
cmp
or
aad
sub
enter
aam
shlb
mov
xorl
add
add
out
pop
nop
pop
sbb
enter
in
aam
fs
enter
jb
fs
mov
xlat
lods
in
jbe
xchg
mov
fs
test
fs
jl
call
leave
sbb
adc
daa
mov
dec
pop
sbb
in
mov
outsb
dec
and
and
cmp
dec
data16
mov
xor
and
mov
daa
and
inc
or
cld
cmp
add
sbb
cmp
cwtl
dec
aam
or
pop
mov
add
out
int3
pusha
pop
add
mov
inc
sahf
in
je
inc
enter
aad
pop
leave
xchg
xchg
fxch
xchg
mov
xchg
xchg
xchg
test
mov
in
lea
call
pop
je
cmovs
jno
imul
popa
aas
mov
xor
int3
mov
jne
les
jl
fdivrl
enter
addr16
loope
xchg
pop
nop
add
in
mov
push
xchg
fsts
inc
mov
push
cmpl
in
or
in
jl
lret
add
mov
imul
lods
xor
jle
sub
in
aad
dec
repnz
aad
push
test
mov
xor
push
repz
mov
mov
in
aas
in
mov
int3
add
mov
push
and
int
add
std
mov
sbb
mov
xchg
popa
iret
and
data16
enter
sbb
sub
pushf
int3
dec
cmp
pusha
sub
xlat
inc
inc
into
inc
and
cmp
inc
dec
or
shrl
push
xchg
fcom
add
das
jp
adc
mov
mov
inc
lods
mov
push
pusha
xchg
push
xor
ret
shrl
adc
pushf
aam
inc
xor
xchg
pop
jb
enter
jl
xor
and
je
in
dec
ds
jo
add
add
fs
das
sbb
push
test
int
cwtl
or
scas
cli
or
pusha
mov
xor
inc
pusha
out
or
decb
in
fdivr
push
jnp
jns
push
insb
xchg
adc
leave
and
adc
jl
mov
lods
aad
inc
mov
jl
inc
dec
inc
fs
adc
push
inc
fs
adc
in
shrl
adc
nop
inc
inc
sbb
inc
inc
push
sub
cmp
mov
enter
and
insl
mov
mov
push
xor
cmp
jg
adc
xor
adc
or
xor
popf
and
pop
repnz
pop
data16
call
sbb
int3
int3
in
inc
mov
aam
mov
fcompl
in
dec
push
cmp
in
xchg
inc
mov
nop
mov
jns
sub
fadds
cmp
sbb
or
mov
push
repnz
adc
pop
sbb
pop
xor
and
xchg
or
mov
mov
cwtl
or
sbb
leave
mov
ficoml
clc
popaw
xor
mov
or
jne
mov
mov
in
sbb
xor
lea
mov
movsl
jge
mov
jno
adc
or
adc
push
mov
imul
dec
or
icebp
sbb
test
imul
jbe
xchg
hlt
jmp
sub
mov
mov
jbe
cmp
pop
stos
cld
pop
addb
popa
adc
sbb
mov
loop
add
icebp
push
pop
pusha
inc
shrb
sub
adc
or
adc
push
mov
push
push
xchg
add
movsl
les
mov
ljmp
add
movb
dec
pop
fnsave
lea
push
loop
hlt
pop
popf
sbb
lods
fisubs
arpl
cmp
pop
test
push
daa
bound
loopne
dec
mov
mov
jb
cli
pop
je
push
fadds
movsb
lea
inc
xchg
int3
test
xchg
fisttpl
adc
jl
imul
je
movl
cmpb
insb
push
loopne
jmp
push
xchg
in
fcomps
push
adc
mov
push
jmp
mov
andb
mov
push
and
push
mov
xchg
loop
arpl
pushf
mov
mov
push
pop
rolb
rcr
push
add
or
test
and
clc
xchg
add
lcall
cmp
jge
xchg
jmp
add
aas
fmull
push
mov
cmp
je
or
pop
and
add
enter
rclb
sub
dec
cmpb
jne
cmpb
or
inc
pop
fldl
or
add
cmp
jl
fcomps
jle
jge
add
add
add
mov
mov
xchg
or
jl
push
mov
cmp
mov
cmpsb
pop
push
fs
inc
pop
inc
or
mov
dec
cmp
jle
mov
mov
mov
pop
stos
sbb
cmp
pop
jl
cmp
jg
daa
rolb
dec
jle
dec
or
push
ret
loop
jbe
pop
movsb
nop
mov
ljmp
sub
into
or
dec
mov
cmp
xchg
popf
cld
ret
jns
sbbl
jnp
outsl
aas
pop
loope
in
dec
mov
mov
fnstsw
jmp
add
jge
xchg
lea
fdivp
mov
cltd
rclb
outsl
mov
cltd
arpl
dec
sar
push
shll
dec
jmp
mov
and
dec
and
int3
add
gs
and
push
dec
adc
push
ficoms
push
inc
inc
out
mov
or
or
iret
inc
xchg
adc
lea
xchg
fisttps
je,pn
and
push
push
mov
mov
icebp
push
iret
movsl
or
push
or
sub
sbb
cmp
lods
adc
dec
frstor
popf
inc
test
pop
sbb
mov
popf
scas
adc
call
mov
fidivs
adc
int
pop
cmp
adc
fwait
lods
pop
dec
dec
fcoms
repz
out
enter
push
lcall
gs
js
xor
add
out
rcll
in
xchg
add
adc
lock
test
xchg
and
or
test
pop
jle
sti
sub
push
cmp
clc
lock
ret
mov
xchg
xchg
mov
mov
ss
out
inc
imul
or
add
pop
aad
push
pushf
stos
in
or
add
add
sub
pop
mov
or
mov
fnsave
push
sahf
xchg
cwtl
in
fmul
leave
aam
ret
push
and
mov
lods
fwait
es
in
rcrb
jl
jbe
outsb
inc
push
xchg
rorb
add
and
pop
int3
sbb
jl
in
insb
mov
push
test
push
push
jge
mov
pusha
push
movl
xor
jne
movsb
xchg
shlb
xor
aas
shlb
adc
addb
rcll
pop
adc
stc
ss
enter
cmp
inc
cmp
inc
jne
adc
mov
and
inc
ljmp
xchg
push
imul
shlb
sbb
fadd
sbbl
jae
les
xor
pop
push
test
mov
push
jle
pop
push
je
and
das
arpl
rclb
xchg
xchg
cltd
cli
jb
push
sub
sbb
outsl
push
jl
mov
xor
or
or
sarb
clc
sbb
loop
xor
mov
movsb
sbb
sbb
xor
lea
cmp
and
xlat
decl
jne
inc
in
push
cmp
jne
jl
jmp
orl
inc
dec
push
in
pop
dec
and
es
call
jmp
sbb
push
inc
inc
pop
lret
test
nop
int3
or
rcrb
rolb
adc
and
mov
jns
sbb
data16
sbb
das
pushl
pushl
mov
sbb
pop
and
rolb
jmp
repz
adc
or
out
jmp
in
sbb
sti
icebp
mov
add
fistps
add
fildl
add
and
je
lea
inc
shl
or
pop
mov
dec
dec
adc
out
xor
sbb
sub
loopne
inc
jle,pn
push
or
push
jmp
push
push
mov
lds
sub
jmp
lea
sbb
inc
or
or
jae
hlt
aas
subl
dec
cmp
ret
fdivr
jne
iret
fsubr
add
stos
jne
incl
cmp
imul
aad
repz
dec
das
fiadds
xabort
sub
add
cmpb
jg
cmpsb
jne
push
mov
inc
jmp
sbb
in
xor
pop
adc
or
ss
or
mov
jbe
ja
clc
in
sar
ja
je
mov
sub
sti
mov
dec
je
add
adc
and
ds
shr
push
loopne
mov
push
rcll
pushf
push
dec
call
pop
cmp
pop
jp
sbb
jl
push
iret
int
fwait
mov
or
push
les
ret
mov
je
lea
pop
inc
stc
adc
movzbl
jmp
fstpl
adc
or
push
or
sub
and
sbb
adc
or
pop
jg
or
mov
push
adc
mov
insb
daa
imul
ret
xchg
fcompl
imul
std
fwait
rolb
or
add
or
add
add
or
out
add
inc
push
mov
adc
inc
mov
inc
and
push
je
jp
sub
or
dec
dec
pop
xor
dec
scas
cwtl
xchg
mov
xchg
lock
cwtl
mov
cld
jle
xchg
js
inc
or
inc
add
gs
and
mov
adc
inc
adc
enter
adc
and
insb
adc
inc
popa
adc
sbb
push
pop
pcmpeqd
inc
cld
nop
leave
and
or
or
cld
std
mov
pop
sub
jl
gs
adc
mov
data16
inc
lods
mov
adc
js
dec
adc
out
dec
jne
push
push
add
add
pop
dec
adcl
cmp
push
cmc
cwtl
fmuls
push
pop
stos
jle
js
bound
call
pop
repnz
sbb
push
dec
cltd
sbb
sarl
jne
arpl
test
and
and
lret
ds
faddl
pop
and
pop
xchg
or
push
cs
or
or
cli
inc
jg
rcll
dec
lock
insb
or
icebp
hlt
add
sub
mov
mov
lcall
add
fcomps
das
test
or
call
add
dec
push
sbb
pop
mov
push
pop
sar
lea
cmp
je
push
push
push
xor
pop
add
mov
add
scas
sub
nop
pop
mov
sub
jae
out
cmpsb
adc
ss
sbb
mov
or
aas
add
lock
mov
lahf
adc
cmc
add
jp
notb
xor
cmp
mov
pop
js
call
jno
adc
test
and
insl
pop
cmp
jb
push
cmp
rorl
push
mov
and
mov
add
in
push
add
jge
sub
gs
or
xchg
sbb
push
and
call
xchg
shrb
push
cmp
or
and
xchg
sub
je
inc
dec
xorl
pop
je
rcrb
and
xor
jns
test
mov
add
inc
pop
repnz
mov
inc
add
lods
xlat
dec
inc
movsb
xchg
adc
mov
adcb
and
pop
jne
fidivrl
add
sub
xchg
bound
leave
cli
or
add
pop
fcoml
push
je
lea
inc
mov
push
mov
jae
lods
add
push
or
mov
into
mov
jmp
or
sbb
rol
sbb
jne
in
xor
jne
imul
aaa
push
sbb
or
shlb
jo
popa
jo
aam
and
or
push
or
rolb
push
mov
adc
xor
int
std
mov
adc
xor
or
adc
or
xchg
sbb
clc
adc
call
xchg
inc
aam
xchg
inc
scas
xchg
mov
inc
xchg
sub
xchg
inc
test
inc
scas
xchg
jo
pop
scas
xchg
inc
xchg
dec
dec
inc
xchg
ret
scas
xchg
and
sbb
xlat
pop
jecxz
pop
jmp
push
push
in
adc
es
add
test
pop
add
jb
add
mov
sbb
adc
xchg
push
arpl
stc
in
inc
aam
notl
push
and
jne
jmp
sub
jl
loope
je
cmp
sub
adc
popa
test
jno
add
loopne
std
xor
imul
cmc
cmp
aaa
xchg
lods
and
jge
out
and
gs
inc
incl
imul
jmp
stc
fsts
es
lock
rorl
mov
cmpl
mov
cmp
jo
mov
subb
push
pop
xor
imul
cli
pop
or
xchg
clc
jnp
pop
je
cmp
or
in
je
xor
clc
xor
dec
test
shrl
xchg
dec
cmpsb
adc
or
dec
xchg
jl
sub
add
lahf
or
dec
out
add
mov
push
aas
ror
pushf
jo
lds
xor
lods
adc
push
ja
mov
or
out
out
out
dec
push
or
push
lret
mov
jle
pop
je
or
xchg
adc
add
adc
sbb
fisubs
xchg
adc
pop
aaa
cmpsb
shll
add
or
sub
push
sub
add
clc
decb
jmp
pop
cld
fnstsw
mov
loopne
and
fdivrs
xchg
xor
test
mov
sbb
or
lea
lret
adc
pop
fcoml
popa
jecxz
or
jbe
inc
mov
add
out
pop
daa
aas
and
add
or
lock
test
je
call
mov
mov
pop
popa
xor
and
out
pop
jnp
jle
test
enter
jmp
mov
xchg
and
outsb
pop
sti
and
jmp
sbbb
push
xchg
push
push
mov
pop
mov
adc
in
nop
cmp
mov
push
popfw
xchg
push
mov
xor
dec
jecxz
sub
mov
int3
cmp
jbe
lea
push
cltd
jo
xchg
sar
add
cmp
jb
jmp
jnp
loop
scas
imul
in
testl
or
into
inc
out
mov
repz
mov
push
or
dec
ret
push
shl
fstpl
imul
loopne
sarb
sti
jle
mov
push
shr
mov
neg
lea
add
inc
inc
dec
jne
loopne
div
pop
jmp
and
test
pop
je
xchg
or
mov
and
add
mov
shr
rcll
and
mov
and
add
dec
ffreep
std
jl
mov
inc
push
insb
dec
rorb
or
pop
xchg
lock
dec
cmp
adc
adc
jl
cwtl
mov
jge
sub
sti
pop
shl
cmp
jne
push
xor
repnz
sbb
aam
mov
and
lret
or
or
jmp
inc
lock
and
loopne
dec
call
cmp
rol
jge
jge
sbb
lret
std
sarb
add
imul
mov
cld
xor
and
inc
out
sarb
inc
sbbb
push
cltd
inc
cs
adc
je
xchg
pop
pop
mov
std
pop
push
push
outsl
fadds
inc
push
push
imul
mov
xor
push
mov
inc
sbb
loopne
sub
call
and
cmp
adc
pop
dec
loopne
fnstcw
add
inc
xchg
or
add
outsl
repz
inc
push
cmp
iret
sahf
inc
add
push
adc
outsb
jg
fdivrl
mov
xchg
inc
shlb
ss
rcr
xchg
jge
jle
mov
jo
mov
push
cmpb
push
push
pop
fists
shrb
pop
xchg
cmp
pop
rorb
sbb
dec
insb
dec
dec
jne
pusha
mov
push
dec
inc
jmp
adc
in
outsl
sbb
bound
push
push
pusha
gs
enter
jno
pop
sbb
or
mov
jns
pushf
lea
call
or
clc
add
sarb
aas
dec
std
push
push
mov
movsl
lcall
dec
mov
xor
repnz
sbb
or
sbb
aam
popf
jbe
stos
aas
lahf
dec
cmpl
mov
fisubl
mov
in
pusha
sahf
aad
cmp
loopne
ds
push
std
adc
cmpl
jne
or
dec
sub
cmpl
dec
ss
xor
cmp
mov
push
sbb
cld
push
sub
arpl
out
insl
fildll
add
jge
sbb
loop
push
adc
insb
sub
adc
sbb
pop
jnp
xor
add
test
divl
and
xchg
push
mov
jbe
test
mov
sbb
jae
and
xor
push
and
or
push
add
insb
out
jmp
and
add
inc
sbb
pop
jo
jmp
imul
ret
jns
xor
arpl
sub
mov
andl
cmp
or
xorps
add
mov
test
iret
jmp
cwtl
add
push
push
test
xchg
pop
xchg
add
push
sub
add
insb
fisttpl
dec
jb
lcall
dec
cmp
inc
outsl
inc
cmp
shr
lahf
sti
pop
push
or
lcall
jmp
test
in
popa
cmp
inc
or
xchg
or
mov
das
call
daa
jns
push
or
incl
imul
adc
xor
ret
add
mov
aaa
cmova
mov
call
nop
lock
cwtl
bswap
dec
scas
loopne
loopne
add
push
cmpb
add
addr16
push
pop
pop
push
mov
js
int
and
lock
std
dec
je
jne
cmp
pop
dec
rorb
sub
cmp
int3
addr16
das
inc
int3
push
arpl
push
cmp
push
jb
cmp
fs
inc
jl
outsl
sub
int3
xor
fmull
andb
sub
add
adc
mov
adc
mov
outsl
xor
push
and
sti
lods
cmp
push
xor
jne
mov
sarb
pop
xor
add
jne
jns
popa
icebp
dec
add
pop
mov
fdiv
adc
add
inc
cmp
pop
sbb
mov
js
repz
outsl
mov
arpl
imul
xchg
and
divb
pop
hlt
testl
fiadds
sbb
mov
enter
cmp
cmpsl
xchg
pop
rcrb
cmpl
gs
xchg
sub
aad
pop
imul
mov
lods
into
mov
and
pop
lock
fists
ja
leave
add
test
mov
test
or
arpl
dec
pop
and
add
add
adc
loopne
adc
cmp
jne
push
adc
sbb
push
mov
clc
cwtl
sbb
inc
push
or
and
clc
out
testl
add
mov
sbb
outsl
movsb
dec
pop
cmp
test
sbb
inc
adc
xchg
pop
pop
ret
or
push
popa
and
test
pop
mov
push
sti
cmp
push
addr16
sbb
mov
das
push
inc
pop
je
adc
add
pop
call
dec
jnp
cltd
jecxz
push
add
mov
clc
jb
and
fnsave
loope
add
adc
add
adc
mov
das
push
dec
sbb
inc
loopne
and
adc
je
and
testl
std
mov
mov
jne
jmp
and
pop
pop
test
jb
push
sub
pop
into
ja
jmp
cmp
test
popa
mov
loopne
mov
and
ret
stc
fstpl
sahf
call
shlb
dec
lcall
xchg
jl
sbb
sub
push
loope
test
sub
mov
scas
sub
bound
jg
cmp
cmpl
inc
mov
test
xchg
mov
mov
dec
or
aas
cmp
or
imul
sbb
jg
adc
or
cld
cmpsb
loopne
xor
insl
mov
mov
push
pop
mov
and
popa
sbb
adc
xor
addl
test
clc
xor
ds
jne
jge
imul
or
rol
sbb
pop
adc
push
pop
out
enter
in
fsts
stos
in
leave
mov
aam
pusha
aas
sbb
mov
in
xor
jg
add
add
mov
or
or
aas
mov
push
sahf
addr16
push
aaa
rcrb
add
leave
push
adc
push
add
test
jmp
push
in
adc
inc
pop
and
std
jmp
jp
in
sub
nop
int3
push
or
add
add
pop
mov
je
decl
push
mov
jl
mov
or
add
fdivp
je
adc
gs
pusha
orl
mov
cld
push
mov
inc
repnz
lods
or
add
cmp
mov
or
leave
lret
in
push
fwait
imull
repnz
sbb
jo
pusha
add
jmp
pop
lret
push
outsb
add
sub
xchg
sbb
mov
in
xchg
sbb
jmp
enter
and
int3
xchg
pop
clc
sub
push
add
mov
pop
imul
loop
mov
popl
sbb
jmp
les
fs
addr16
rolb
inc
or
orb
sub
pusha
jo
mov
add
inc
idivb
adc
mov
cli
jmp
cmp
cwtl
pop
add
mov
xchg
inc
or
pop
aam
sbb
and
cmp
arpl
push
sub
loopne
je
push
add
shll
aam
test
jne
ret
xchg
pushf
sub
xor
lcall
popa
and
sbb
push
push
adc
fwait
cmp
out
and
mov
test
dec
int
es
mov
imul
dec
popa
ljmp
out
xor
sbb
inc
dec
stos
or
push
pop
jle
pop
pushl
mov
orl
jle
mov
cmp
je
or
je
out
dec
cmp
fimuls
ja
sahf
loope
lock
jns
xlat
jmp
push
mov
xchg
cmp
arpl
imul
std
outsb
cmp
mov
pop
inc
out
ret
cld
pop
cmp
add
sbb
stos
and
fsubs
xor
xchg
insb
icebp
push
dec
sbb
pop
push
sbb
pop
sub
push
push
out
lret
ja
mov
mov
enter
rolb
imul
aaa
dec
pop
bound
mov
mov
lock
jne
mov
mov
repz
adc
mov
hlt
push
cltd
jg
cld
add
push
pop
mov
das
sub
cmp
ljmp
cmp
jne
movsbl
mov
cltd
movb
sti
mov
mov
add
add
sarl
cmp
sahf
push
scas
or
add
out
jp
cld
cmpb
je
push
push
xchg
adc
xorl
and
gs
or
inc
int3
out
and
les
mov
xor
cmp
mov
ss
loope
adc
jne
insl
out
mov
push
test
adc
jae
xchg
and
dec
sub
push
cwtl
movsb
mov
mov
sbb
cmpsl
inc
add
add
and
in
dec
fucomip
xchg
jne
sub
add
loopne
push
rorl
inc
scas
cmp
jl
mov
inc
push
test
in
pusha
fistps
pop
andb
test
mov
mov
mov
cmpsl
jmp
cmp
add
xchg
mov
fadd
cmc
lea
fs
andl
dec
push
push
fistl
and
inc
push
mov
mov
mov
arpl
and
and
add
xlat
repz
scas
loopne
jne
xor
sub
push
sbb
in
jp
fwait
inc
je
jle
jp
movb
sub
incl
inc
lods
loopne
fisubrl
repz
ds
or
push
loop
out
cs
xor
xchg
je
and
test
add
loop
lock
sub
inc
lea
imul
cmp
jle
sti
add
flds
out
cmp
sbb
push
aam
pop
adc
aad
mov
and
sbb
mov
xor
add
sbb
js
add
addl
cmp
jg
cmp
out
xchg
inc
jae
mov
jnp
and
pusha
cmp
push
sbb
mov
or
sbb
push
outsb
mov
nop
gs
jne
icebp
adc
pusha
ljmp
pusha
inc
lds
outsb
addr16
mov
stos
cmp
shll
xor
ret
clc
push
mov
push
mov
repnz
cmp
mov
push
dec
mov
jge
in
fwait
sub
add
js
mov
mov
mov
dec
orl
fildl
mov
cmp
dec
add
test
mov
sbb
cmpsb
sub
fiadds
sbb
add
or
loope
xor
mov
clc
push
fmul
std
sub
inc
add
cmpl
add
push
fdivs
pop
or
sub
or
jge
cli
or
shrb
mull
and
out
adc
fdivs
cmp
dec
adc
dec
push
sbb
fwait
and
ficomps
idivb
or
push
mov
mov
addl
xlat
out
jmp
test
testb
xor
mov
fbld
add
push
push
push
xor
mov
and
add
xchg
sbb
xor
test
data16
lea
jmp
adc
mov
mov
sbb
add
adc
xor
adc
jo
icebp
mov
mov
adc
push
lret
hlt
ret
in
iret
push
je
outsb
pop
jl
idivb
fwait
cmp
xchg
mov
push
xor
jo
mov
adc
dec
int3
call
sub
jne
cs
inc
mov
adc
add
sbb
subl
cmp
or
or
jb
push
pushf
mov
mov
jne
lods
ljmp
jg
fwait
xchg
dec
das
ret
mov
dec
loop
sbb
rorl
in
push
out
push
in
das
dec
sbb
and
push
in
push
jl
in
aad
jp
sbb
je
mov
and
daa
or
sbb
iret
pop
loopne
adc
es
push
adc
jge
jge
xor
cmp
push
cmp
mov
lods
cli
jno
jle
jae
ret
imul
adc
aaa
add
mov
ds
les
adc
and
cmp
stos
andl
movsb
test
mov
mov
fsub
les
push
lret
xor
adc
jae
lfs
dec
add
jp
sbb
jmp
aas
popa
jns
lret
popf
adc
insl
addb
mov
add
mov
pop
inc
pop
or
inc
sahf
pop
xor
push
cmp
fs
dec
incb
pop
enter
cmp
aas
nop
xchg
or
stos
sub
or
mov
repnz
sbb
jg
and
lods
push
sub
out
push
push
push
pushf
or
cli
xor
or
cld
nop
adc
fsubr
mov
pop
and
push
xchg
sbb
push
outsl
xor
xchg
push
cwtl
or
xchg
cmp
js
push
cmp
pop
add
pop
imul
push
inc
cs
cmp
cmp
ret
bnd
notl
push
repnz
adcb
or
push
lock
xchg
xor
inc
push
push
lds
adcb
int3
sub
enter
sarl
je
inc
pop
insb
in
mov
xchg
or
iret
or
mov
pushf
pop
xor
stos
cwtl
xchg
xor
and
pop
xor
xor
or
adc
mov
testb
divl
ret
fisubs
mov
inc
and
dec
icebp
out
cmp
sub
xor
xor
movsl
xor
sub
aaa
sub
inc
inc
jbe,pn
dec
inc
inc
cs
adc
or
add
enter
add
fs
mov
push
cs
lock
in
and
fneni(8087
push
lahf
nop
xchg
add
fldl
fadds
in
divb
sub
loope
cs
scas
les
mov
inc
cs
lods
add
inc
das
movsb
out
xor
and
add
dec
insb
adcb
jne
mov
push
dec
in
dec
and
cmp
push
mov
jge
mov
and
aam
cli
enter
or
cmp
xor
and
xor
sub
xchg
xor
and
add
and
dec
rolb
pop
xor
jno
call
pop
xchg
mov
data16
sbb
sub
push
aam
enter
sarb
enter
xor
test
and
add
mov
pop
or
sub
fs
sbb
or
and
inc
cs
jecxz
nop
int3
test
mov
pop
mov
enter
inc
dec
nop
popa
pop
xor
xor
je
xor
test
dec
sbbl
or
cmp
hlt
sub
cs
adcb
mov
leave
or
in
inc
adc
inc
dec
pop
enter
xor
or
in
sub
nop
inc
cs
and
inc
push
mov
shll
pop
jb
dec
or
lock
iret
adc
jmp
mov
adc
push
dec
daa
mov
out
imul
cwtl
push
or
out
out
std
clc
cmp
adc
push
sub
or
cmpb
xchg
outsb
and
jo
jo
popa
roll
or
xchg
mov
jl
nop
mov
jge
movsb
jo
lea
push
cmp
sbb
lahf
ljmp
jmp
sbb
mov
push
mov
dec
packsswb
or
cltd
nop
dec
pusha
je
and
inc
cmpsb
jbe
cmp
bound
fmull
dec
loop
push
jno
and
xchg
movsl
pop
aad
icebp
jno
and
or
sub
mov
dec
dec
lea
xor
jb
mov
js
adc
nop
inc
leave
inc
test
or
add
sbb
and
test
dec
test
cmp
loop
test
cmovno
mov
cmc
lock
mov
jp
or
je
push
popa
push
insb
test
push
pop
ja
jne
fadd
dec
out
jno
and
or
cmp
jl
js
pop
push
mov
inc
jno
sbb
das
pop
pop
ret
dec
repnz
mov
pop
pop
rolb
das
mov
and
jmp
test
push
xchg
xchg
sub
enter
dec
dec
add
es
xchg
cmp
popf
pop
or
mov
adc
and
or
sarl
lcall
pop
pop
sbb
xchg
mov
pop
ljmp
and
insb
or
jne
and
pop
add
lock
sbb
and
lahf
test
and
add
subb
add
or
cmp
add
pop
dec
sub
pop
ret
dec
insb
add
push
addl
pushf
jbe
sbb
or
hlt
dec
and
fs
in
dec
repz
call
sub
in
fidivl
adcb
and
sbb
sub
and
sbb
int3
sub
les
leave
or
in
mov
pop
enter
enter
pop
test
nop
xchg
pop
xor
inc
push
mov
leave
or
nop
stc
sbb
jno
pop
xor
test
sbb
pop
push
jo
sbb
in
dec
insb
jne
pop
enter
sbb
cmp
sbbl
push
das
fs
or
orl
enter
sub
nop
xchg
pop
xor
jbe
xor
mov
mov
adc
in
pushf
and
adc
movsb
adc
or
loop
jle
enter
and
sub
cmp
out
inc
aad
jo
nop
inc
cs
lds
or
jns
sbbl
je
clc
dec
inc
cs
in
or
mov
loopne
pop
xor
lods
aam
or
xor
jo
mov
lret
adc
jb
pop
mov
mov
mov
sbb
inc
push
mov
movsb
pop
enter
add
and
in
test
mov
pushf
nop
inc
addb
or
push
aaa
or
pop
ret
pxor
xor
sbb
nop
cmc
loopne
rclb
sbbb
inc
iret
inc
cmp
mov
fadds
fistpl
mov
sbb
negb
xor
addb
popa
dec
sbb
inc
loop
sbb
xor
inc
sbb
xlat
push
imul
insb
sub
pop
test
mov
dec
mov
gs
push
inc
jo
mov
sub
out
mov
dec
pop
add
mov
xchg
pop
add
adc
mov
loope
sbb
mov
cmp
es
ret
mov
mov
jne
mov
out
sub
and
aas
push
push
or
mov
aaa
add
les
jp
xor
decl
push
jns
and
out
sbb
dec
cmpl
push
pop
jo
mov
dec
and
rcrl
imul
fsubrl
sbb
int3
sbb
cmp
imul
fcmovne
js
cmpsl
test
sti
mov
mov
nop
mov
mov
test
inc
push
icebp
sbb
adc
push
push
sub
push
pop
or
mov
jns
imull
das
xchg
push
and
xchg
ret
dec
cmp
push
mov
dec
add
das
push
dec
shll
movl
pop
jge
and
mov
xlat
mov
cli
sti
mov
add
jbe
iret
xor
loopne
outsl
pop
arpl
movsl
out
and
mov
sub
xchg
xchg
movsb
xchg
clc
je
xchg
sbb
sub
popf
inc
dec
nop
clc
adc
sbb
je
or
test
emms
in
pop
cmp
and
jecxz
sub
cmp
xchg
cld
clc
jo
mov
cli
cwtl
cli
cmp
add
mov
add
mov
pushf
sbb
pop
leave
cmp
push
out
sub
mov
push
add
or
add
sbb
add
dec
push
lock
and
in
mov
mov
mov
mov
inc
sbb
sub
dec
or
dec
enter
or
clc
cli
push
jbe
jns
or
sbb
in
or
jmp
lods
mov
das
or
mov
xor
adc
add
push
jl
mov
and
inc
je
push
out
int
and
mov
loope
imul
inc
cmp
fnsave
cmpb
or
sub
or
adc
stos
add
lret
cmp
sbb
das
mov
scas
push
xor
aas
xlat
xor
andb
movsl
and
mov
into
in
lock
and
jae
push
pop
adc
mov
cld
test
cmp
jbe
lea
pusha
repz
cmp
cmp
adc
clc
jnp
sub
je
movl
add
xor
pop
in
adc
adc
fucomip
sbb
leave
cmp
loopne
push
mov
test
sbb
inc
push
push
or
je
decb
loope
je
cmpb
je
dec
adc
cmp
cli
fcoms
lods
add
push
andl
mov
cltd
dec
aad
movsl
cmp
loope
notl
fsts
addr16
xchg
push
outsb
or
sub
dec
and
inc
js
mov
jbe
mulb
add
mov
test
sbb
ret
je
testb
push
jle,pt
xor
inc
inc
mov
dec
mov
cld
sar
pop
mov
jle
mov
icebp
jbe
movb
ss
cmp
inc
cmpsl
call
mov
jl
cwtl
xchg
push
and
sub
loopne
add
push
in
add
adc
cli
xchg
xchg
es
inc
mov
je
jne
dec
mov
inc
sub
cli
mov
or
push
jmp
mov
js
enter
cmp
insl
rolb
jge
cmp
sarb
cmp
mov
rcl
test
pusha
inc
leave
push
repnz
stos
lock
sar
push
add
sti
adc
jbe
insb
lcall
iret
popa
daa
pop
cmp
test
mov
inc
fstl
pop
xchg
scas
and
popa
sbb
lock
aam
xor
jl
movsl
es
inc
jne
push
adc
cld
repz
xchg
test
mov
orb
cwtl
dec
jle
lea
mov
in
call
andl
pop
cmp
xor
imul
xchg
push
adc
test
stc
and
and
out
adc
repz
dec
stos
and
test
test
add
add
repnz
pushf
ror
push
jne
and
jle
in
inc
adc
adc
sbb
sbb
mov
rorl
mov
rcll
sub
dec
dec
pop
mov
and
mov
add
enter
pcmpgtb
or
sbb
lods
xorb
adc
sbb
mov
ljmp
cmp
mov
std
js
mov
and
out
cmp
daa
xor
adcl
loope
repz
adc
adc
sbb
lea
push
jg
push
std
test
aas
push
movzbl
jae
fisttpll
daa
cmpsb
adc
popa
xchg
and
ss
lods
mov
push
adc
js
stc
cmp
out
hlt
test
nop
js
add
xorb
fs
xchg
mov
rcl
pusha
or
or
lods
lea
mov
adc
cmp
shlb
xorb
addl
mov
mov
shrl
or
mov
push
jb
inc
das
cmc
mov
xchg
cmp
cmp
inc
sahf
add
cli
popf
aad
and
jb
nop
clc
adc
or
nop
stc
push
inc
xor
sbb
or
jns
test
inc
enter
or
push
or
xchg
inc
push
or
or
push
or
push
cmp
popf
sbb
in
cli
xchg
in
xchg
imulb
stos
out
sub
out
mov
pop
adc
mov
pop
push
mov
push
mov
leave
jecxz
js
adc
xchg
and
adc
mov
test
shr
inc
adcl
inc
xor
mov
aas
push
sbb
xor
sbb
sbb
mov
sbbl
inc
loope
cmp
jns
and
out
dec
pop
cmp
dec
call
lahf
add
cld
push
mov
mov
sbb
inc
cs
je
ja
add
movsl
push
and
sub
inc
or
les
jl
je
push
push
hlt
cld
dec
cmp
mov
cmp
popa
and
into
xchg
or
test
add
dec
sbb
and
mov
out
mov
xchg
lret
mov
out
or
repz
in
push
loop
incb
test
add
sbb
faddl
repnz
cld
dec
and
and
add
push
xchg
dec
dec
mov
test
subl
xlat
push
jb
push
push
jo
push
mov
adc
and
or
mov
add
and
and
movsl
in
sbb
in
or
inc
sbb
jno
ljmp
pop
inc
adc
inc
xchg
nop
jae
out
mov
dec
arpl
fwait
jne
mov
inc
jle
nop
inc
cli
xchg
adc
movsb
push
loop
nop
jle
cmpsl
and
add
ret
push
hlt
test
xor
push
xor
mov
and
push
dec
popa
mov
pop
and
shll
pop
adc
insb
adc
lods
and
adc
sbb
js
push
dec
xor
jnp
fwait
or
and
int3
xor
loope
jae
lods
movsb
test
mov
in
push
imul
add
sbb
and
adc
insl
jl
mov
dec
adc
sub
repnz
push
shl
pop
je
push
inc
push
jo
pop
xchg
popa
pop
xchg
adc
dec
push
iret
add
mov
test
mov
push
xchg
pop
cmpl
pop
sbb
and
enter
outsb
stos
mov
xchg
mov
dec
and
inc
push
icebp
sub
adc
xlat
push
pop
lahf
cwtl
jns
jmp
jg
mov
push
inc
xor
jmp
inc
or
mov
mov
adc
adc
inc
and
xchg
ficompl
adc
and
fwait
adc
enter
outsb
adc
push
inc
dec
subb
push
and
sbb
int3
inc
fildl
sbb
jno
ret
push
mov
adc
mov
add
out
call
loope
jg
xchg
shlb
pop
pop
in
add
pushl
add
aaa
call
cltd
push
das
push
push
rcr
shlb
add
cmpsb
jae
pusha
sub
je
addl
push
nop
out
adc
addr16
and
je
pop
sub
and
iret
xchg
or
jg
push
into
push
xor
adc
lahf
insl
add
lcall
mov
mov
cs
divb
add
dec
pop
push
xor
sub
test
iret
cmp
mov
dec
js
scas
test
push
xor
jmp
push
sbb
or
lea
or
orl
mov
push
inc
movq
outsb
leave
and
dec
add
inc
and
in
arpl
aas
mov
or
sbb
jnp
jmp
add
jo
sbb
inc
mov
jmp
xchg
rolb
addb
test
xor
push
pop
jnp
mov
dec
pop
or
xor
pop
push
dec
aas
pop
push
xor
push
xorl
adc
std
jl
jmp
xor
insl
jge
in
aas
dec
push
test
adc
push
pop
sub
pop
adc
lret
push
and
sbb
xchg
sarb
and
sbb
leave
mov
push
pop
je
movsb
test
jbe
adc
mov
mov
pop
pusha
sub
cmp
jmp
adc
sbb
inc
fwait
mov
cmp
test
decl
xor
dec
add
and
dec
mov
push
add
dec
rolb
aaa
shll
enter
fists
sbb
xor
mov
add
dec
ds
fimull
ficoms
push
ds
add
or
add
jo
hlt
call
lea
cmp
jae
mov
mov
pusha
dec
push
jmp
insb
sub
das
clc
loop
mov
ret
aam
cmp
mov
inc
pop
jb
sbbb
push
and
or
jg
test
mov
insb
mov
push
aaa
in
jne
xor
test
nop
mov
pcmpgtb
ret
sbb
add
ret
cmp
inc
inc
sbb
push
adc
cld
imull
push
bound
adc
mov
and
in
sbb
push
insl
stos
xor
jp
or
mov
jns
popf
or
mov
mov
cltd
mov
aaa
mov
out
mov
xchg
adc
repz
sbb
cmpb
or
mov
arpl
xchg
jmp
scas
cli
push
inc
bound
outsb
dec
imul
sldt
mov
sbb
mov
lock
adc
ja
stc
lods
or
push
push
cli
fs
cmp
cmp
popf
xlat
stos
cmp
in
jo
cmp
cmp
dec
mov
jno
xor
adc
sub
das
stc
rcr
add
mov
lahf
pop
ja
cmp
xchg
push
data16
rcrl
imul
daa
icebp
or
cmp
add
jl
stos
mov
push
add
jae
adcl
or
ret
push
repnz
pop
xchg
cmp
adc
and
mov
or
or
push
sub
mov
or
pop
cmp
xor
ret
mov
and
adc
ret
mov
mov
sub
push
ret
inc
sub
test
cmp
sbb
fs
adc
xchg
lea
add
filds
xlat
icebp
xor
in
cmp
cmp
or
push
pop
push
test
ja
add
repnz
sbb
sbbb
cmp
push
mov
orl
push
push
sbbl
sti
mov
push
inc
shrb
sbb
jns
es
jae
sti
inc
repnz
or
adc
imul
adc
and
xchg
nop
lret
push
cmpl
sbb
add
push
cmpsb
mov
xchg
jo
enter
push
adcl
ret
cmp
jl
add
inc
sub
push
leave
xchg
sbb
inc
inc
cmp
jecxz
enter
inc
fldcw
push
adc
cmp
nop
pop
or
pop
mov
jae
sbb
and
in
fdivs
fdivl
and
cmp
xchg
cmova
sbb
shlb
aas
push
jnp
scas
dec
pop
movsl
cmp
nop
cmp
popa
adc
scas
or
pop
in
inc
pusha
xor
inc
mov
cmp
jl
mov
push
push
daa
push
adc
je
aaa
je
sbb
leave
fcoms
add
shrb
mov
into
xor
repnz
or
movsl
lret
and
loopne
rcrl
jne
fsub
inc
mov
sbb
std
jmp
subb
loop
mov
mov
fwait
arpl
push
and
sub
and
fs
in
push
sbb
mov
out
inc
and
jl
sahf
popf
push
mov
cmp
inc
and
add
jecxz
dec
lods
cwtl
push
shll
lds
iret
loopne
aam
rclb
adc
mov
ljmp
dec
clc
xor
leave
mov
jg
dec
push
imul
mov
rcll
loope
cmp
lea
je
lea
mov
andl
cmpsb
mov
in
lret
xchg
jmp
push
inc
ljmp
add
loop
clc
mov
xor
mov
mov
jo
loope
insl
push
or
add
mov
jp
mov
mov
and
ret
daa
dec
cmp
and
or
movsl
jne
repz
mov
jne
into
fsubp
mov
rolb
mov
pminsw
push
sbb
dec
inc
sbb
into
cmpsb
xchg
jne
sarb
sub
xchg
and
mov
cmp
imul
daa
hlt
or
dec
push
pop
aaa
jae
loopne
sbb
add
pop
sub
xchg
sub
xor
and
jl
sbb
push
jno
jns
aaa
jl
rorb
cmp
mov
pop
jne
popf
jno
push
xchg
in
aam
aaa
push
arpl
jg
jg
adc
push
push
cmpsl
xor
push
pusha
and
or
and
sub
in
sub
xchg
add
test
dec
popa
out
mov
lock
xor
add
and
sbb
dec
adc
mov
sbb
push
mov
add
xor
xor
or
xor
test
xor
cmpsb
add
adc
adc
pop
aaa
lret
and
insl
loope
fstpt
repnz
jg
push
or
cld
rorb
and
or
push
cltd
cmp
xor
test
scas
add
mov
ret
push
xchg
movsb
sub
adc
add
std
or
dec
dec
push
cltd
add
or
imul
dec
popf
std
bound
cmpb
cmp
add
jb
cmp
jno
push
das
sti
je
jns
mov
push
das
pop
mov
or
pop
lret
bound
scas
push
cmp
cmp
int3
js
pop
mov
and
and
insl
pusha
aam
dec
push
mov
shl
lea
fcoml
gs
sbb
dec
aas
hlt
jo
jg
negl
cmp
rolb
push
pop
inc
push
inc
clc
or
pop
cwtl
push
inc
pop
adc
cltd
pop
sub
or
not
test
pop
adc
jb
xor
rol
in
les
hlt
js
mov
mov
int3
push
mov
les
mov
cmp
sahf
and
push
add
mov
adc
or
ljmp
lock
mov
paddq
cmp
or
xchg
js
xchg
mov
or
add
cld
shl
dec
pop
add
sbbb
xor
fadd
add
or
inc
nop
push
adc
ss
rclb
dec
fildl
push
add
adc
cmp
jmp
jb
pop
adcb
xchg
mov
and
gs
add
push
add
test
mov
or
js
sbb
push
testb
fildll
jle
jg
testb
dec
inc
add
inc
inc
cmp
fisubl
sub
adc
adc
mov
jmp
repnz
outsb
add
push
dec
push
out
push
dec
adc
inc
cmp
jl
andb
push
sbb
out
into
dec
push
mov
or
cs
fsub
add
outsb
movsbl
pop
jg
icebp
and
cmp
stos
pop
sti
jl
push
pop
pop
jnp
lods
inc
push
adcb
push
sarl
mov
lods
cmp
push
pop
sbb
iret
clc
xor
rcrb
ds
insb
jle
movl
xor
push
ret
lock
jne
adc
jnp
stos
adc
mov
ficompl
add
mov
daa
out
outsl
dec
or
mov
jne
mov
fstpt
add
dec
and
xchg
cmpsl
mov
add
loope
jns
cmp
push
and
lock
add
div
push
or
lock
fs
mov
ret
stc
inc
out
fs
push
push
lcall
into
gs
cmp
sub
dec
aad
add
adc
adc
jns
mov
mov
sub
pop
inc
mov
push
and
je
movsb
mov
dec
dec
adc
pop
adcl
or
mov
mov
add
outsl
and
jno
pop
jl
jmp
dec
add
call
push
icebp
flds
adc
jg
rcrl
pop
ret
or
cmp
in
add
pop
mov
incl
lahf
add
xchg
movsb
pop
xchg
sub
int3
jnp
push
bnd
push
pop
inc
hlt
je
rorb
pop
and
movb
iret
aam
mov
cs
subb
add
mov
push
cmp
test
or
xor
add
mov
loopne
cmpsb
mov
xor
or
push
sahf
fwait
mov
pop
jae
cmp
faddl
sbb
aam
adc
push
and
xorb
sub
rol
iret
push
sbb
lock
cmp
xchg
push
push
bound
lea
rol
or
cmpl
mov
pushl
dec
or
scas
xor
lea
xchg
pop
inc
loopne
rclb
shll
orl
add
mov
stos
rolb
ss
es
je
mov
inc
js
sbb
fsubrs
adc
and
adc
push
dec
sbb
daa
fsubrs
and
pop
pop
xor
daa
xor
sbb
push
mov
mov
cli
int
mov
mov
lods
push
shlb
das
xorb
ljmp
test
fcomps
push
and
cmp
cmpsl
push
or
pop
jne
or
mov
loope
add
pusha
push
sbb
popa
rclb
pop
shlb
aaa
push
cmpb
add
dec
pop
and
pop
push
jb
push
js
aad
and
inc
aad
ljmp
test
pop
enter
jnp
pop
fcomps
xchg
xchg
or
cs
in
pusha
push
jo
dec
jmp
xor
jbe
push
mov
pop
sbb
sub
add
out
dec
pop
push
sbb
ja
lods
or
nop
aad
or
lock
dec
insb
inc
add
inc
call
jge
pop
add
je
jno
nop
jo
mov
push
xor
xchg
lret
ret
adc
mov
xor
sbb
jmp
cmp
dec
mov
cmp
leave
xchg
jb
mov
push
inc
ds
cmpw
pop
test
add
and
addl
mov
notl
push
ss
cmp
addl
or
jo
inc
repnz
and
or
rclw
and
shlb
dec
inc
clc
sbb
jge
jecxz
xor
scas
push
jbe
or
jmp
mov
scas
addl
sti
add
adcl
out
pop
loopne
nop
add
loopne
scas
ret
or
xbegin
cmp
add
jmp
js
mov
adc
mov
push
daa
shrl
jns
adc
or
pop
in
xlat
xlat
pop
pop
pop
pop
loopne
pop
leave
test
dec
pop
loopne
push
orb
xchg
lret
push
sbb
lcall
push
stos
inc
or
mov
out
xchg
pop
gs
ljmp
dec
loop
jo
add
mov
cmp
lcall
add
hlt
out
or
and
mov
xchg
test
mov
add
dec
or
sbb
pop
add
add
ret
fs
in
loopne
insl
cld
pop
inc
push
sub
sbb
bound
push
mov
stos
test
mov
std
or
add
mov
ret
mov
scas
inc
and
inc
rorl
xchg
mov
push
fadd
cmp
mov
push
xor
out
mov
or
lea
mov
mov
or
or
je
push
pop
push
fimuls
jnp
outsl
inc
je
repz
je
arpl
xchg
jecxz
data16
and
sub
cmpsl
pop
add
or
aas
les
adc
dec
cmp
repz
dec
push
and
ret
push
enter
int3
fiadds
lea
or
mov
mov
rolb
cmp
out
mov
lock
push
out
or
pop
push
scas
add
shlb
pop
pop
pop
rol
sbb
dec
and
test
jne
inc
ret
outsl
ss
adc
rol
add
add
in
mov
pop
or
or
push
or
ficoms
divl
sbb
or
pop
rcr
fisttpll
dec
cmovnp
dec
jo
and
mov
lea
fistps
dec
adc
mov
imul
add
xor
cwtl
mov
outsl
je
add
cmp
in
into
mov
and
adc
cmp
mov
adcl
cmp
in
enter
test
or
pop
xor
pop
fwait
mov
jbe
push
or
jp
pop
lock
mov
push
adc
repnz
inc
pop
mov
aam
pop
add
hlt
pop
lea
pop
adc
or
xor
pop
test
in
rolb
sbb
mov
sbb
push
push
in
lods
xlat
push
cmp
add
int3
and
dec
and
adc
pusha
add
popa
dec
adc
pop
nop
push
push
dec
loopne
ljmp
xchg
nop
cmp
sti
fmull
les
mov
jg
sub
mov
in
push
sbb
addb
xchg
mov
imul
scas
add
dec
enter
xor
jmp
arpl
ficompl
aas
in
jp
or
sbb
ret
mov
xor
aaa
mov
add
sub
mov
or
mov
mov
lods
mov
pop
dec
cmpsb
mov
das
outsb
and
mov
bound
push
or
andb
pushl
loopne
je
cltd
or
lods
adc
push
dec
or
lds
add
cmpb
add
in
sbb
add
rol
cmp
je
adc
sub
repnz
je
inc
sub
js
andl
lods
movb
je
sub
into
dec
sub
xchg
cltd
inc
call
insb
dec
push
es
xor
add
imul
xchg
cmp
mov
sub
or
inc
dec
dec
pop
inc
push
cltd
bound
sub
push
sub
sub
mov
das
pusha
mov
mov
or
ja
sbb
cmc
and
fwait
pusha
cld
and
mov
or
xchg
add
add
lods
pusha
mov
insl
insl
les
out
xor
add
sbb
shlb
add
sti
aad
xchg
shlb
aaa
sub
es
mov
jnp
jg
test
xchg
imul
sub
sbb
sahf
pushf
sbb
adc
in
adc
xchg
xor
mov
jo
sub
sahf
lock
inc
jne
and
repnz
faddp
in
std
in
sti
lock
sub
call
adc
inc
pop
jb
xchg
and
enter
lock
sub
inc
dec
mov
js
cmp
mov
mov
adc
pop
jge
pop
out
ret
call
imul
mov
sub
imul
flds
sbb
lea
fdivrp
les
inc
adc
clc
mov
adc
xor
fisubrs
nop
sbb
shrb
pop
add
add
mov
push
fdivrl
addr16
mov
sbb
xchg
mov
mov
addr16
or
daa
clc
rorl
dec
int3
push
enter
stc
clc
cmp
out
aam
inc
and
and
hlt
and
xor
or
in
add
adc
dec
and
sbb
push
adc
mov
mov
push
fldt
dec
call
xor
div
pop
mov
adc
xlat
fimuls
or
inc
adc
mov
mov
or
inc
inc
comiss
push
mov
ret
and
int
dec
icebp
sbb
push
sti
push
sbb
test
ja
jb
cmp
ja
cmp
push
scas
mov
adc
cli
lock
pop
ja
jb
push
jae
push
lcall
ja
push
inc
inc
cmp
xor
es
movsb
jns
sbb
sbb
sbb
mov
or
pop
sub
sbb
add
adc
adc
sub
dec
mov
xor
jg
movsl
scas
inc
add
push
cmp
ja
and
jo
mov
mov
es
dec
sahf
testb
or
push
push
pop
jne
dec
repz
add
popf
cmp
into
sub
and
pusha
leave
pop
loop
xor
clc
cmp
add
xor
push
mov
lea
loopne
popa
xor
inc
jecxz
inc
and
mov
les
iret
movsb
std
outsb
adc
out
fbld
icebp
cmp
jne
sbb
shll
loope
fbstp
push
call
adc
push
clc
push
add
xor
dec
int3
or
iret
pop
lea
inc
nop
out
mov
add
aaa
sub
movsb
mov
sub
fcmovne
cmp
push
rcrl
xchg
and
inc
ss
fmuls
sarb
out
and
clc
pop
loop
pop
in
clc
adc
cwtl
stc
mov
outsb
insl
jecxz
movsb
or
sbb
std
rep
or
stos
rorl
inc
in
pop
inc
decl
cmp
clc
mov
aam
add
cmpsl
push
dec
dec
and
cmp
cmpb
cmp
cld
and
sub
pop
inc
call
adc
and
jo
cmp
mov
dec
add
sub
dec
daa
aaa
out
cmp
ljmp
add
inc
pop
cmpsl
adc
in
and
lods
es
outsl
and
in
mov
lods
xor
sub
sub
sub
addl
or
ret
mov
add
add
or
push
fistpl
popa
mov
mov
mov
jge
cmp
ret
push
push
jb
xor
data16
mov
orl
push
cmp
cmp
cmp
add
ret
cmp
ret
sti
push
int3
pop
test
and
std
or
xor
pop
loope
and
rcr
mov
mov
and
mov
das
sub
mov
daa
movsb
sbb
fidivrs
xor
ja
ror
roll
push
mov
lret
pop
popa
adc
data16
adc
fidivs
lock
adc
sarl
inc
jle
pop
jmp
mov
xor
pusha
inc
loopne
hlt
push
cmp
cmp
in
fs
js
ss
push
sbb
nop
pop
popf
ljmp
call
xchg
xchg
inc
or
ss
sub
jmp
cmp
sub
add
pop
aas
push
dec
inc
push
stc
add
jmp
dec
nop
mov
xor
sahf
insl
pushf
es
mov
mov
pushf
mov
sbb
ss
cli
push
cmp
testl
dec
movsl
push
cmpsb
lea
pop
jb
adc
call
xchg
lret
and
inc
aam
adc
je
orps
leave
insl
mov
fidivs
fmulp
and
push
xchg
xchg
add
out
pop
mov
xchg
jmp
mov
mov
fs
xlat
pop
add
push
inc
mov
push
xor
inc
sbb
mov
and
enter
lock
test
lds
in
mov
movd
pop
jae
lea
adc
jne
mov
mov
lods
adc
mov
and
lock
push
imul
clc
test
jb
cmp
and
leave
add
cld
cmp
aam
fsubl
mov
das
je
mov
test
adc
sbb
aaa
js
xor
shlb
insb
testl
outsl
andb
sbb
jne
fbld
mov
dec
fildll
inc
add
or
add
jo
rol
and
jo
mov
addl
idivl
fwait
and
sub
push
xchg
push
lahf
mov
mov
adc
iret
test
push
fdivrl
jle
sub
mov
mov
fsubs
lods
adc
or
daa
sbb
mov
arpl
dec
sub
or
jae
xchg
test
jae
popf
sub
sub
xchg
out
add
sub
pop
popl
ret
mov
jnp
add
push
sub
adc
xor
and
aad
rorl
push
cmp
in
inc
adc
cmp
and
lea
mov
add
push
and
andl
lea
xchg
aad
mov
or
rcrb
les
dec
es
lds
mov
cmpl
xchg
idivl
imul
mov
sub
bound
cs
sub
int3
ud2
add
lea
or
cmp
jne
inc
xor
ret
jl
in
mov
pop
lea
jp
movzbl
add
and
push
movsl
mov
and
hlt
loopne
xor
pop
inc
add
lds
adc
xchg
movntps
nop
repnz
repz
mov
insb
sub
in
jg
adc
push
sbb
inc
pop
push
jmp
jne
jne
and
lret
mov
repnz
fistpl
bound
nop
syscall
rcrb
outsb
inc
cmp
dec
push
mov
es
test
and
ret
lcall
cmp
and
mov
adc
nop
inc
cmp
out
das
xchg
andb
jo
ret
push
sub
dec
jno
dec
and
xor
add
inc
push
arpl
testb
dec
js
or
cmp
js
sub
xor
sbb
ret
sbb
and
aaa
cmp
nop
jp
mov
ja
loope
mov
pop
jns
aam
pop
adc
gs
mov
test
sbbb
in
xchg
dec
stos
pop
mov
sub
mov
movsb
or
jbe
mov
inc
xchg
mov
or
xorb
mov
push
add
lds
shrb
adc
fisttpl
fimull
add
loopne
xchg
push
mov
add
rorb
mov
ret
or
mov
sar
or
cmpsl
fbstp
push
xchg
cs
orl
mov
xchg
nop
arpl
and
mov
cmp
mov
sti
jne
inc
add
dec
jmp
arpl
mov
adc
inc
and
ret
add
sarl
and
and
add
mov
dec
sub
sbb
sbb
cmp
xchg
mov
sbb
cmp
and
add
lods
jae
enter
or
ja
mov
fs
xchg
cwtl
pop
mov
daa
pop
push
xchg
inc
movsb
cld
pop
pop
negl
mov
add
sub
fs
push
imul
dec
stos
and
mov
aas
jno
xchg
pop
sbb
cltd
js
sbb
test
movsl
sbb
mov
xchg
test
lea
lock
adc
subb
fisubs
xchg
out
jne
cmp
repz
in
xor
aam
xor
shll
dec
fsubr
call
mov
ljmp
fucomi
mov
cmp
mov
adc
cmp
clc
and
sub
les
pop
sti
mov
lock
add
fimuls
inc
or
data16
mov
sub
sbb
jnp
mov
add
jns
mov
xchg
movsb
cli
ficoml
test
movsb
jno
ret
test
or
mov
das
ja
das
pusha
js
std
das
jno
stos
rol
xchg
mov
cs
movsb
xchg
jae
js
push
mov
inc
pop
mov
test
adc
sub
mov
insb
test
mov
cmp
jmp
inc
mov
sub
add
loope
jno
cli
aas
mov
aaa
movswl
cmp
sbb
push
dec
outsb
lds
hlt
pusha
test
mov
cld
push
dec
push
adc
stc
add
je
movsl
mov
sbb
in
push
xor
shr
insb
pop
and
lahf
or
mov
xchg
jae
xor
shll
mov
mov
jge
xchg
push
inc
les
xor
imul
dec
xor
inc
inc
inc
cmp
jl
mov
movsl
mov
and
imul
les
and
arpl
sub
sbb
fstp
arpl
jbe,pn
movb
jg
in
or
loopne
test
int
out
pop
cmp
inc
inc
jns
rorb
mov
cmp
xor
aas
push
js
mov
data16
fstpl
fimuls
mov
mov
les
xor
hlt
or
adc
lea
mov
jo
and
mov
push
push
xor
mov
jmp
sahf
pop
mov
and
andl
imul
ret
pusha
xor
les
mov
jbe
mov
fwait
push
rcll
or
xchg
inc
or
and
xor
and
pop
pop
data16
lock
inc
and
mov
push
xchg
icebp
fs
shl
add
push
sti
push
call
sub
lods
pop
rcr
fnsave
arpl
rclb
arpl
sarb
add
mov
add
sahf
mov
xchg
mov
pop
je
inc
push
jbe
pop
push
test
sbb
test
sbb
insb
xchg
cmp
and
mov
xchg
xchg
mov
jo
and
nop
enter
sarb
xchg
push
mov
dec
sbb
dec
xchg
testb
pop
out
pop
add
call
lods
mov
std
jb
xor
mov
cld
aam
nop
movsb
fistl
pop
mov
imul
xchg
pop
or
or
sbb
and
scas
add
push
or
or
cmpsl
xchg
das
test
setne
insl
sub
es
stos
in
pop
inc
or
push
adc
cwtl
repz
out
or
dec
and
mov
jo
push
leave
and
jb
subl
dec
and
repnz
sub
imulb
test
push
sub
add
popa
outsl
mov
jmp
mov
pusha
pop
pop
push
test
adc
cmp
cltd
xchg
jo
push
repz
je
mov
and
xor
bound
nop
outsl
ret
loope
add
mov
dec
es
icebp
push
pop
push
jnp
jle
xchg
sbb
push
test
je
mov
daa
gs
std
call
mov
test
je
cmp
je
or
je
pop
and
jmp
shrl
js
jmp
push
inc
xchg
xor
sbb
es
inc
inc
jmp
cmpb
jne
sbbl
sbb
or
or
call
xchg
or
pushl
and
jge
pop
cmpb
imull
inc
and
icebp
sub
push
decl
jne
cmp
cmp
mov
test
incl
lea
mov
cmp
jge
cmp
je
cli
push
add
call
mov
mov
cmp
jl
cmp
jg
adc
xchg
jle
xor
or
add
sbb
subb
pop
incl
outsb
add
jg
rorl
xchg
jo
mov
ret
inc
adc
inc
pop
or
stos
outsl
sub
jl
call
mov
lock
pop
or
mov
fldcw
mov
mov
aas
jmp
push
dec
testl
jmp
mov
cmp
jne
mov
cmp
ficoml
sbb
or
sbb
pusha
int
loope
mov
cmp
outsl
icebp
std
je
adc
shll
jmp
xor
arpl
mov
add
mov
jne
adc
jbe
or
jnp
pop
mov
int3
add
or
test
adc
sbb
cmpsl
inc
jl
mov
movl
pop
inc
pop
cmp
jne
mov
mov
add
andl
pop
insl
test
je
inc
cld
dec
pop
test
je
test
adc
repnz
jg
iret
dec
jmp
sub
jmp
or
jmp
add
cld
iret
incb
or
jne
jmp
push
inc
lahf
or
cmp
xor
and
jmp
mov
cld
fldl2e
and
add
add
cvtdq2ps
jbe
popa
lret
daa
push
adc
adc
or
jge
aas
jmp
inc
int
movb
aaa
rcr
rolb
inc
adc
inc
fstpt
mov
xchg
xor
sbb
xchg
push
cwtl
dec
xchg
inc
loopne
popa
bound
pop
inc
incl
addr16
xchg
add
mov
jg
in
lock
les
jecxz
dec
or
ret
in
push
mov
lods
incl
sbb
je
push
push
jmp
ud0
outsl
jmp
mov
add
pop
or
or
inc
push
and
popa
lret
push
inc
inc
cmp
dec
inc
insl
mov
lods
sbb
je
iret
dec
ficompl
insb
xor
and
scas
mov
push
or
sbb
adc
sahf
call
shrb
add
clc
pusha
jne
inc
call
mov
adc
aad
das
jmp
add
cmp
jbe
add
cmpb
movl
or
push
or
xchg
mov
mov
or
push
jb
jl
imull
add
das
test
nop
push
sbb
sahf
sbb
faddl
add
and
pop
jns
out
pop
icebp
mov
mov
or
lods
adc
insb
mov
dec
xchg
cmp
xor
add
cmpsb
nop
cmp
inc
inc
jle
jg
xor
rcrl
push
fs
pop
push
dec
inc
imul
inc
in
call
in
in
lock
sti
cmpsb
imul
add
mov
arpl
lock
adc
loopne
push
lods
add
xlat
shlb
pop
xor
mov
repz
sbb
ret
out
arpl
je
iret
jl
cld
jmp
mov
xchg
or
and
fsts
rcrb
pop
stc
pop
sti
and
nop
cmp
pop
push
subb
jne
add
dec
lods
mov
sbb
fiaddl
lcall
push
fmull
out
loop
lds
xor
rcr
aam
faddl
in
hlt
cld
dec
xor
add
pop
sbb
sbb
sbb
adc
adc
xor
rorl
or
add
outsb
pop
dec
add
xor
cmp
in
adc
das
lsl
fistl
sub
mov
inc
insl
ret
mov
inc
icebp
add
pusha
xor
addr16
clc
adc
adcb
pop
xorl
sub
lahf
jmp
push
aas
add
rcll
sbb
add
inc
test
cmp
add
sar
pop
lcall
jmp
lea
es
ljmp
std
daa
adc
cld
incl
push
test
inc
mov
icebp
or
rcrb
cmp
sub
mov
dec
mov
pusha
or
lods
mov
adc
push
rep
je
inc
dec
add
jp
jnp
cmp
or
scas
cmp
mov
sbb
add
jae
pop
mov
les
mov
mov
inc
add
ret
push
add
sbb
mov
pop
stc
or
add
add
or
pop
filds
aad
cmp
and
dec
sti
sub
sbb
adc
mov
sub
xor
sbb
xchg
inc
ret
jbe
mov
popa
ret
add
jmp
add
mov
mov
lret
or
xlat
rcll
inc
or
adc
sbb
mov
mov
push
cmpsl
test
scas
pusha
lahf
push
push
or
mov
jge
cmp
jle
movzbl
push
aaa
cmp
std
sahf
pop
sbb
or
inc
push
or
add
shrb
aaa
inc
cmp
mov
loopne
ja
repnz
push
xor
xchg
in
insl
imul
push
dec
movsb
icebp
fwait
lea
pusha
jmp
adcl
ret
jne
neg
mov
pop
add
adc
xor
xchg
cmc
jnp
mov
test
je
negl
je
scas
cmp
das
sbb
insl
loop
bound
scas
mov
in
jge
iret
adc
into
or
add
movsl
jno
sbb
adc
jmp
or
ja
inc
arpl
cltd
lea
inc
jg
out
pop
pop
mov
mov
mov
mov
and
and
shl
lea
jecxz
push
aad
mov
xlat
adc
sbb
push
lock
pop
push
shl
shll
sarl
iret
loopne
fnstenv
add
fisubl
lret
fiaddl
push
inc
push
dec
pop
shl
dec
pop
ffreep
jne
andb
inc
and
ret
adc
pusha
mov
inc
pushl
and
lea
push
stos
inc
and
mov
pop
xchg
cmp
testl
in
hlt
ret
or
push
stos
shl
push
adc
push
add
scas
divl
lret
mov
repz
call
and
or
shll
pop
out
jne
or
mov
inc
cld
cmp
je
nop
out
cmp
xor
hlt
fdivl
dec
out
adc
dec
push
aam
xchg
pop
arpl
outsb
or
add
dec
std
cld
pop
xchg
loop
xchg
mov
inc
and
sbb
mov
sub
xor
pop
inc
cmp
movsl
or
adc
idiv
add
daa
cmc
pop
pop
pop
add
lock
lea
mov
fsubr
adcl
and
inc
add
fstp
lcall
fucomip
mov
ja
fbstp
adc
add
mov
cmp
jg
lea
mov
pop
aad
jmp
push
dec
add
dec
xchg
clc
pop
push
add
push
jmp
scas
cmp
and
add
mov
daa
jg
cmp
jne
sub
dec
cmp
sbb
aas
movl
shll
jae
push
sbb
push
ss
out
inc
data16
test
or
cmp
rorb
add
mov
icebp
xor
inc
pop
inc
xor
mov
add
xor
adc
mov
jge
jl
iret
test
roll
mov
ret
adc
out
cmpsl
jne
or
je
inc
or
mov
mov
adc
fmuls
ljmp
enter
add
pop
adc
add
or
sar
jmp
cmp
jb
adc
mull
jae
or
mov
and
push
movl
sub
sub
pop
outsb
imul
sbb
inc
mov
adc
addb
inc
push
adc
or
movsl
mov
orl
jmp
or
xor
cmp
in
pop
enter
sub
jne
es
mov
or
sbb
push
leave
cli
inc
inc
ss
ja
add
xchg
mov
xchg
in
scas
adc
xor
sbb
ja
push
mov
into
outsl
dec
pop
icebp
jmp
push
roll
and
xchg
lods
mov
dec
cmp
sbb
push
pop
pusha
adc
inc
xchg
add
icebp
pop
sbb
push
nop
mov
push
cmp
nop
imul
jmp
jg
xorl
sbb
inc
mov
ret
lea
mov
rorb
inc
shl
icebp
adc
push
xchg
add
ja
sbb
rcrl
popa
jp
jbe
je
daa
xchg
jne
mov
xchg
jmp
sbb
adc
or
adc
sti
inc
icebp
or
mov
jle
push
mov
mov
and
icebp
push
mov
out
xchg
adc
enter
pop
and
push
or
jbe
or
iret
add
loope
rcrl
outsl
inc
xchg
cwtl
or
mov
xor
ret
ret
mov
xorb
mov
adc
and
imul
fs
inc
mov
nop
and
icebp
andb
adc
sbb
push
sbb
test
sbb
push
mov
lods
jne
loop
mov
lods
dec
xor
add
xor
or
ds
or
jbe
fsubs
xchg
or
shr
jmp
pop
xor
call
rcr
shr
rcr
or
jne
div
mov
fcmovu
incb
xor
add
jb
cmp
or
cmp
xor
jbe
in
pop
push
mov
mov
mov
push
pop
icebp
ss
fdivl
push
in
popa
push
mov
outsl
lcall
or
jbe
testb
jnp
adc
or
neg
sbb
stc
pushf
push
xchg
or
or
inc
stos
dec
push
sbb
mov
fiaddl
mov
mov
sbb
sbb
dec
sbb
outsl
js
cltd
adc
xor
jmp
dec
xor
rcr
dec
fcomi
sbb
or
leave
sbb
dec
or
roll
gs
pop
imul
movsb
inc
scas
icebp
daa
jbe
cmp
lods
or
jns
xor
cmp
mov
cmp
jne
inc
inc
dec
jmp
shll
cmp
incb
dec
add
and
call
loopne
idiv
daa
ljmp
dec
cld
mov
dec
adc
cmc
mov
sti
sbb
sub
sbb
jbe
mov
js
sbb
pop
cmc
ljmp
les
lret
addr16
lock
sbb
out
jne
or
pop
clc
fiadds
int
aad
push
pop
shll
ret
rolb
xor
inc
add
sbb
ret
aas
inc
pop
sub
add
sar
xchg
mov
push
adc
jmp
sbb
pop
cwtl
adc
or
ds
test
adc
jp
adc
popa
jl
in
xor
or
xor
aas
shlb
mov
cmp
je
cmp
and
adc
setbe
testb
aas
add
pop
pop
add
pusha
mov
adc
or
jns
or
repz
mov
jmp
push
push
mov
out
adc
push
dec
ret
pop
mov
push
dec
add
aaa
cmp
jae
add
fidivl
nop
loop
adc
pop
cmp
jbe
add
shl
jmp
imul
add
fisttps
mov
sbb
das
out
das
or
xchg
shl
shll
inc
pop
add
dec
sub
icebp
outsl
add
jne
and
xchg
pop
mov
ljmp
jbe
testb
push
sub
ja
and
jmp
push
mov
pop
neg
sbb
neg
add
mov
mov
aad
add
mov
ffree
outsb
add
or
mov
pop
inc
add
xor
cs
sbb
and
inc
inc
push
test
lcall
mov
cmp
xor
rcrl
call
dec
repz
and
ret
rorb
aas
pop
mov
cmp
sbb
mov
cmpw
or
mov
or
cwtl
movsl
jmp
iret
repz
mov
push
outsl
pop
mov
loop
adc
lock
pop
cwtl
jns
fistpll
leave
xchg
inc
sbb
sbb
push
nop
fisubrl
add
clc
sub
sbb
push
sbb
cs
push
or
push
mov
jb
ds
mov
inc
or
xchg
mov
jns
or
ret
mov
jmp
js
mov
lret
scas
fs
popfw
jne
out
frstor
leave
add
add
xlat
loope
dec
enter
daa
aam
jno
shrb
jge
adc
mov
inc
fimull
sbb
push
pop
pop
fwait
xor
or
jecxz
inc
data16
sub
sar
dec
push
lea
pop
js
push
inc
adc
push
or
inc
jl
mov
shlb
outsl
inc
jmp
fwait
cmp
pop
jge
cmp
lock
push
push
inc
or
and
scas
mov
jmp
mov
fildll
popa
mov
testb
lret
andb
clc
cmp
mov
xor
sbb
or
adc
dec
jp
mov
je
sbb
xor
nop
cmp
scas
add
jmp
arpl
test
add
roll
add
pusha
mov
scas
add
popl
call
push
mov
fdivrs
fistps
mov
sub
xchg
xor
or
data16
ja
lock
pop
dec
mov
inc
ret
add
jb
clc
push
jl
les
into
sub
push
push
inc
and
popa
push
sbb
pop
lret
data16
xor
mov
xchg
aad
lea
ret
mov
mov
leave
out
jp
cmp
or
push
sub
stos
mov
push
mov
scas
ret
or
push
xor
popf
movsb
xchg
add
mov
mov
orl
inc
sub
in
jae
loope
dec
into
cmp
cmpsl
xor
mov
jmp
mov
add
cmpsb
call
push
mov
loop
push
pushf
shrb
push
mov
add
push
pop
push
lcall
sub
jo
xor
add
punpcklwd
add
mov
adc
testb
jno
push
and
lea
cmp
jb
cmpl
mov
das
sub
cmp
push
rclb
sahf
sbb
pop
std
hlt
sbb
andb
cmp
or
mov
jp
cld
jnp
stos
or
aas
sub
cmpb
jne
shr
sub
jmp
pop
andb
inc
fcoml
pusha
in
sbb
sub
fimuls
fisubl
shl
orb
sub
sbb
mov
stc
pop
ds
add
lea
inc
inc
push
iret
pop
xlat
mov
and
sub
sbb
sub
dec
add
aam
push
sub
test
pop
js
add
inc
add
cld
je
cmp
jb
enter
jge
adc
or
inc
sub
jae
call
hlt
push
shrl
and
or
pop
push
adc
cmp
aas
stc
sbb
jle
cld
aas
aam
out
or
repnz
inc
neg
dec
mov
clc
adc
pop
movb
or
cmp
insb
jnp
stos
adc
and
mov
add
jnp
loopne
add
fnop
ja
sarb
jle
jp
cmpsb
mov
cmp
dec
cld
mul
fisttps
not
mov
mov
or
out
call
xorl
or
sbbb
and
cmp
mov
jne
rcrb
add
fidivl
dec
cmp
mov
fdivrs
inc
jmp
repz
lock
les
inc
sbb
aam
mov
sbb
dec
dec
adc
and
test
pusha
rcll
jae
clc
in
les
in
pop
cmpb
pop
sub
sahf
imul
aam
adc
inc
dec
fstpt
ret
or
pop
push
sub
call
negb
movswl
pop
pop
mov
pop
fidivrl
fwait
dec
mov
xchg
push
pop
jne
sbb
pop
sub
pop
outsl
jns
or
lea
push
push
inc
push
xor
sub
adc
push
lock
adc
pop
or
xchg
sahf
jecxz
push
fistpll
jl
loopne
pop
pusha
dec
inc
or
sub
xchg
mov
cmpl
in
sbb
adc
inc
sbb
pop
cmp
push
pop
dec
dec
loop
ret
stos
mov
jno
sub
pop
adc
jg
or
add
data16
cmpsb
clc
adc
dec
or
mov
jb
sub
bound
pop
fisttpll
test
sub
ss
cmp
inc
cmp
xor
mov
mov
or
push
je
test
ds
jmp
push
mov
dec
jns
add
adc
dec
dec
scas
gs
pop
int
ds
xor
adc
jecxz
sar
loope
jns
pop
inc
pop
cmpl
add
dec
scas
inc
testb
je
lods
cmp
mov
dec
or
insb
adc
or
xor
pop
or
mov
cmp
jle
jmp
dec
mov
mov
inc
jmp
jl
pop
loopne
mov
test
push
loop
push
jbe
lock
or
mov
mov
cs
jl
or
push
jle
mov
mov
sysenter
pop
test
fdivl
call
mov
add
lcall
lret
mov
lgdtl
add
pop
sub
ja
xchg
xchg
icebp
push
jle
add
pop
lahf
cmp
sbb
jae
or
cmp
and
addb
sub
fimull
or
inc
pop
int3
pop
xor
cmp
loopne
push
sbb
int
lea
and
push
shr
jmp
mov
jb
rorl
jae
xor
insb
imul
and
je
insb
jno
sti
ja
sub
adc
cmp
jno
mov
aas
ss
cmpb
jne
inc
inc
dec
adcb
adc
or
ret
cmp
test
sbb
jbe
rcll
shrb
mov
mov
xor
sub
clc
addr16
jo
test
or
js
call
xlat
sbb
jo
insb
and
cmp
inc
cld
xor
jne
adc
push
mov
mov
mov
jb
inc
adc
pop
push
push
mov
add
dec
dec
ja
jae
and
or
rolb
iret
jnp
xchg
lcall
inc
int3
subb
es
lea
out
pusha
ret
push
iret
cmp
mov
xchg
daa
lcall
out
push
cmp
or
adc
enter
add
hlt
shlb
dec
push
or
add
scas
call
or
stc
call
mov
mov
mov
xchg
sbb
add
je
mov
jge
mov
add
mov
ror
movsl
clc
fchs
imul
cmp
mov
je
push
sbb
jg
mov
addr16
mov
jg
shlb
lock
xchg
dec
mov
nop
sbb
cmp
bound
mov
insb
cmc
lcall
pop
mov
popf
and
int3
inc
ret
jne
je
mov
and
dec
dec
xor
popf
in
sbb
add
ret
ds
add
std
data16
inc
mov
inc
jo
and
cmpb
cmp
sti
dec
lcall
dec
nop
pop
and
sbb
pop
fwait
ja
aam
push
mov
or
out
inc
xor
and
add
inc
or
test
jmp
das
and
data16
in
adc
mov
pop
jmp
push
or
aad
js
sarl
scas
jge
imul
jp
and
inc
sub
in
ret
jle
pop
ja
cltd
jmp
pop
mov
jmp
inc
loopne
jnp
or
loopne
xor
xor
test
pop
jl
jae
dec
rolb
out
out
setg
jmp
pop
or
jne
clc
sub
mov
sti
movsb
idivb
jno
testl
lods
hlt
in
outsb
mov
pop
aaa
push
xor
pop
hlt
cltd
push
dec
mov
les
xchg
sbb
add
jge
ffree
das
les
add
pop
aam
lods
std
repnz
mov
sub
add
addb
mov
cmpb
fucomp
add
loopne
inc
push
movb
aas
jp
ss
jge
inc
hlt
es
cld
test
mov
pop
movsl
es
adc
jmp
mov
adc
je
and
in
loopne
jne
add
icebp
test
or
mov
cmc
and
ljmp
sub
sub
arpl
xor
inc
xor
inc
rol
loopne
or
jle
sbb
inc
btc
inc
mov
push
inc
mov
mov
rcl
bound
mov
dec
mov
movsl
mov
daa
mov
lock
je
sbb
inc
dec
div
dec
pop
jo
out
adc
push
in
and
in
ss
add
xor
adc
sbb
ss
or
dec
add
push
mov
ds
jp
mov
lcall
popa
or
scas
cmpsl
or
subl
pop
ret
incl
pop
jb
das
sbb
push
jle
mov
rclb
or
inc
outsb
int
cmpl
pop
inc
jg
out
inc
nop
add
dec
jno
es
mov
push
movsbl
push
inc
sbb
insl
aas
jge
add
ret
dec
loop
js
add
jae
add
movsb
sbb
fsts
out
fimull
cmp
adc
popf
aam
gs
push
icebp
xchg
mov
mov
mov
or
jecxz
rclb
add
outsl
rcrb
shlb
lret
loopne
push
out
push
and
std
out
push
sub
add
push
add
out
cmpb
dec
rorl
push
mov
call
shlb
ljmp
sti
int3
add
scas
fdiv
add
and
and
sub
sarb
stc
std
imul
je,pt
or
inc
je
incb
inc
or
dec
jne
inc
jmp
cmpb
jg
jnp
sub
add
jnp
jne
push
or
inc
bnd
lahf
aaa
cmpsb
jno
mov
mov
icebp
jmp
jbe
sti
jmp
decb
sti
cmpb
dec
or
cmp
jp
mov
inc
jmp
lock
adc
or
jge
fwait
adc
push
cltd
cmp
jge
ljmp
addl
xchg
xor
outsb
shrl
std
add
add
pusha
call
fists
shld
in
cmc
outsb
jecxz
in
push
mov
hlt
ja
fdivr
outsl
jg
daa
les
mov
fs
mov
clc
add
mov
addr16
or
add
adc
incb
filds
dec
add
aam
lock
pop
hlt
push
mov
jle
lods
les
popa
sub
fistpl
mov
jecxz
push
lahf
and
inc
or
mov
dec
dec
mov
add
push
cmp
pop
cmp
sub
cmp
mov
jbe
mov
pop
mov
cmpsl
adc
jle
mov
push
inc
mov
mov
push
idivb
mov
inc
fcmovnu
jo
add
push
add
sti
mov
dec
in
shll
movb
insl
pop
jb
xchg
pop
jno
dec
mov
push
daa
and
xor
add
aad
das
ds
daa
pop
push
inc
loop
pop
incb
cmp
dec
adc
andb
test
shlb
inc
push
xchg
das
jl
aam
scas
test
jo
out
mov
lea
imul
add
pop
cli
add
hlt
jo
test
xchg
sbbl
mov
out
and
add
dec
stc
aas
sub
jmp
ret
mov
je
mov
loope
clc
sbb
cmpb
popf
cmpsl
movl
hlt
and
mov
jmp
sub
rcrb
pop
xor
xor
cmp
pop
mov
mov
outsl
pop
mov
hlt
ds
jae
xor
into
pusha
js
rcr
subb
iret
pop
cmp
call
jp
mov
xor
mov
or
and
mov
mov
sbb
pop
inc
cmp
sbb
jg
out
test
inc
cmp
jae
mov
jmp
ret
cmp
iret
ret
ja
gs
mov
mov
cmp
cmpsl
lock
mov
outsl
pushf
or
inc
dec
jne
xor
jmp
jnp
aas
add
cmp
jo
mov
cmp
inc
sbb
pop
jmp
es
test
imul
ljmp
mov
push
enter
call
ds
stc
add
lret
test
je
pushf
jne
or
or
inc
enter
add
cmpsb
lea
push
andl
cmpsl
xchg
push
pop
ret
ja
add
cmp
jmp
rorl
punpckhbw
inc
push
cmp
jg
push
cmpsb
add
and
pop
ret
push
scas
setl
jne
jmp
aad
fnstsw
rolb
out
add
arpl
cmp
jecxz
jnp
dec
stos
dec
rorb
xchg
fs
ficomps
cmp
imul
repnz
adcl
adc
mov
adc
in
cmp
lahf
add
adc
mov
mov
cltd
add
adc
cwtl
mov
pusha
and
arpl
in
push
jb
fldl2t
add
dec
fmull
aaa
cmp
in
roll
lods
neg
mov
mov
add
daa
je
or
cmp
jbe
insb
shl
jmp
lea
shl
jmp
fwait
and
push
imul
rorl
mov
jl
sarb
xor
je
neg
pop
inc
inc
or
xorl
sub
aam
adc
cmp
or
inc
ds
repz
cmp
or
inc
jmp
cmp
sbb
mov
cmp
clc
aaa
lea
pop
adc
dec
daa
sbb
push
enter
pop
popa
add
push
jne
cld
pop
xor
sub
outsb
jne
mov
mov
andb
insb
out
test
mov
lea
jg
mov
cmp
push
dec
das
fnstsw
mov
mov
cmp
push
jno
ret
jo
and
jmp
jle
mov
in
push
jl
addl
out
clc
adc
pop
out
pop
mov
inc
decl
js
mov
mov
js
or
sbb
loope
or
in
dec
push
pop
dec
mov
push
mov
loopne
test
mov
or
mov
inc
jmp
jmp
xor
sbb
stos
xchg
push
shr
mov
adc
scas
dec
loopne
mov
push
pushf
std
clc
xor
lea
movl
push
pop
adc
les
inc
loop
add
jmp
mov
pop
inc
aad
xchg
mov
jg
lahf
push
out
lea
out
add
xor
je
sahf
pop
les
and
and
sub
mov
adc
lds
sbb
adc
roll
mov
cmp
mov
add
mov
fs
in
imul
jmp
push
adc
and
xchg
imul
pop
pop
xchg
sbbl
sbb
jbe
mov
fidivrl
jne
push
mov
add
adc
or
and
and
xchg
bound
inc
or
test
inc
sbb
mov
mov
shl
loopne
pop
lahf
mov
test
xor
dec
rolb
std
pop
es
movb
ja
push
push
pop
inc
push
and
pop
sbb
mov
jmp
pusha
xchg
dec
sbb
add
push
dec
push
rcrb
idivb
js
jns
jle
mov
inc
xor
mov
cmp
dec
ret
aad
xor
loope
movmskps
cmp
sub
inc
add
xor
rorl
clc
lahf
cltd
jl
jno
inc
or
iret
mov
pushf
daa
push
mov
cmp
adc
or
loope
loope
inc
pushf
push
iret
sbb
pop
ret
roll
out
mov
ret
xor
dec
adc
add
stc
and
stc
sar
cmp
jle
mov
add
pop
and
fwait
pop
push
or
mov
cmpl
sbb
enter
adc
push
dec
into
mov
mov
sub
imul
mov
push
enter
push
xor
sub
mov
xlat
popa
je
cmp
sarl
ss
add
xchg
cmp
test
add
or
sarl
out
mov
cmp
cltd
addb
shll
sti
out
outsb
loopne
push
jg
pusha
sub
je
or
je
js
push
scas
dec
cltd
lods
pop
cld
out
xor
mov
or
pop
enter
mov
mov
jmp
lods
inc
rol
mov
jne
adc
cwtl
pop
jne
das
mov
cld
pop
add
mov
int3
enter
enter
bound
xorb
ud2
pop
push
jne
daa
movsl
sub
int
cmp
inc
or
cmp
sub
sub
aam
je
rclb
push
mov
das
addl
mov
xchg
test
pusha
add
sbb
inc
pusha
xor
add
lret
mov
add
sbb
or
adc
mov
aas
sar
aad
jle
mov
cmp
je
testb
loope
cmp
jl
jmp
mov
rcrb
loopne
jmp
in
and
out
jmp
pop
mov
std
je
out
pop
sbbb
cmc
fiadds
add
sub
or
aad
adc
lods
mov
push
mov
pushf
mov
mov
push
ljmp
or
ret
push
push
adc
outsb
clc
int
fistpll
lock
hlt
pop
mov
pop
div
in
test
xor
jbe
addr16
push
sub
cli
add
jb
rclb
fmuls
sub
and
inc
sti
inc
es
adc
pop
ffree
cld
push
shr
mov
push
inc
std
into
mov
imul
movsb
xor
mov
pop
add
test
add
or
jle
jmp
sbb
push
dec
pop
pop
test
loope
orb
or
ljmp
cld
imul
lea
not
popa
aas
insb
jmp
jl
inc
decb
jne
ljmp
cmp
pop
inc
mov
jns
fsincos
mov
mov
adc
push
orb
or
xchg
jge
dec
or
or
cmp
testl
in
mov
sub
and
and
inc
int
pop
ficoms
jbe
mov
lret
sti
out
rcl
cmpb
cmc
cli
jg
imul
andl
in
inc
inc
ljmp
inc
pop
cmp
cmp
enter
jg
jge
pop
loopne
jb
or
and
loopne
jb
push
jbe
xor
lock
push
dec
in
mov
or
das
dec
push
jg
clc
arpl
mov
jo
jl
call
jae
cmpb
mov
adc
or
sbb
fcomps
fldpi
sub
lea
xor
add
xor
push
cmp
repz
sbbb
decl
xchg
cli
push
in
inc
fisttps
mov
shl
add
movsl
cmp
jbe
or
xlat
aas
rclb
push
or
push
bound
dec
inc
adc
jno
jns
push
pusha
add
and
adc
cmp
sbb
adc
dec
xchg
mov
clc
loop
enter
mov
mov
and
dec
pop
pop
cmp
jnp
outsl
fmull
inc
imul
dec
add
or
mov
or
fldt
mov
push
int
rclb
cwtl
ds
pop
ss
pop
in
lock
cmpsb
jbe
aam
push
js
cmp
adc
jbe
loope
js
shr
sbb
adc
jns
cli
jnp
inc
popa
jae
mov
cmp
push
and
or
cli
sbb
ret
adc
xor
jne
mov
nop
testl
xor
in
loope
jne
dec
jae
cmpl
or
outsb
jmp
xor
cmp
es
mov
inc
xor
test
je
push
sbb
movb
add
lods
or
das
mov
cli
scas
push
lahf
lock
mov
xchg
ja
add
aaa
mov
pop
adc
mov
and
mov
test
decl
test
pop
mov
and
or
je
mov
lret
imul
mov
outsl
xchg
scas
into
jne
int
and
pop
test
jl
shl
inc
jmp
mov
push
stc
xchg
sub
icebp
test
add
cmp
jbe
aad
jle
pop
cmp
aaa
or
fidivl
inc
jge
and
sbb
sub
cmp
int
pop
mov
fists
fldl
decb
jne
pop
in
and
jmp
adc
sub
test
push
adc
pop
pop
push
cltd
arpl
inc
adc
jp
pop
xor
pop
jp
adcl
inc
push
add
or
or
inc
test
sub
fs
decb
jge
mov
test
add
into
sbb
and
or
adc
jmp
push
pop
pop
aad
or
jnp
bound
sub
out
or
aam
dec
jg
pop
or
fidivrs
lock
inc
add
cld
mov
mov
inc
dec
jne,pt
cmp
in
adc
shll
or
inc
enter
in
shll
inc
cltd
jle
mov
pop
adc
adc
popa
loope
adc
andb
mov
adc
les
push
jns
dec
mov
xor
cmp
pop
pop
xlat
xchg
dec
insb
outsl
ljmp
push
or
stc
push
jp
or
add
jnp
mov
add
test
loope
loop
or
cli
mov
inc
jge
mov
loopne
ret
outsl
imul
add
xor
xchg
inc
or
push
push
loopne
sti
or
out
jns
pop
adc
add
xchg
clc
mov
add
cli
ja
pop
mov
in
mov
or
lea
cld
lock
mov
and
sarl
lock
inc
decb
add
subb
or
pop
icebp
pop
inc
fs
inc
test
mov
out
out
cli
pop
test
hlt
mov
jne
or
mov
lock
sub
imul
mov
lea
sub
xlat
cmpsl
stos
aad
ffreep
ljmp
rolb
rorl
mov
mov
pop
cmp
ret
jle
jo
sbb
fldcw
inc
add
aas
sbb
inc
stc
adc
popf
pop
mov
add
pop
incb
clc
jl
and
test
pushf
nop
mov
pop
mov
adc
ffreep
jns
jg
sub
add
push
movsb
sahf
sub
clc
push
cmp
adc
xchg
mov
cld
adcl
lea
mov
jg
or
pop
test
mov
pop
pop
in
popf
adc
cmpb
jnp
sbb
jno
and
and
aad
test
jmp
mov
cld
ja
test
add
cmc
mov
push
or
sub
into
ficoml
aas
cld
inc
rorl
lea
mov
inc
dec
insl
or
xor
and
shll
ljmp
add
ss
pop
push
push
inc
movsl
dec
inc
mov
push
pop
ret
gs
je
repz
jne
in
enter
dec
in
push
into
bnd
in
bnd
sarl
add
adc
frstpm(287
loope
jo
mov
dec
ret
pop
cmpsl
pop
inc
xchg
dec
dec
push
decb
mov
cwtl
xchg
push
pextrw
xor
rol
cmp
setb
push
lret
ret
dec
setne
je
xchg
sbb
jmp
cmp
push
lds
repnz
push
shl
leave
push
sahf
mov
add
mov
test
sahf
push
adc
xchg
test
mov
mov
add
or
jl
adc
test
popf
outsb
and
test
jge
lea
inc
inc
xor
sub
dec
xor
test
inc
cmp
mov
push
inc
adc
inc
mov
les
insl
jecxz
movsl
jne
sbb
hlt
add
xor
inc
and
mov
add
push
mov
or
jmp
and
fs
rorb
or
push
sbb
aaa
xchg
es
mov
cmpb
cwtl
scas
adc
mov
jmp
mov
dec
shll
fists
test
or
add
je
pusha
sti
pop
movb
inc
mov
jae
push
adc
xorl
lock
inc
outsl
int
xor
aas
adc
mov
inc
mov
cs
inc
xor
jne
xchg
inc
add
out
or
sbb
popa
xorl
and
lock
rorl
inc
jno
mov
pop
out
test
enter
sub
popf
or
rol
xor
sub
xor
push
cwtl
loope
pop
push
int
add
pop
lds
testl
pop
clc
adc
mov
fldl
fdivl
fmull
insl
lock
sti
call
fnstsw
sahf
jbe
popf
or
pop
xchg
push
dec
pop
sti
loopne
push
mov
xchg
push
bswap
stc
mov
mov
daa
sub
xchg
mov
sbb
stos
mov
mov
aam
or
or
push
inc
jge
js
xchg
push
mov
or
repz
dec
add
mov
mov
mov
inc
cmp
and
movsl
lock
or
stc
inc
or
jg
in
mov
dec
fbstp
je
cmp
jne
dec
mov
inc
xchg
xorl
fldl
aad
add
jno
in
adc
sbb
push
add
mov
add
cld
and
mov
adc
cmpb
addr16
mull
mov
xor
jecxz
setg
push
mov
cmp
dec
or
or
cmp
in
adc
ret
fs
mov
mov
shlb
cwtl
lods
test
rolb
lret
arpl
xor
push
sbb
sub
sbb
cmpsl
ss
mov
xchg
mov
push
sub
enter
sbb
cmp
ljmp
cmp
pop
add
jns
neg
clc
das
cld
loop
sub
adc
cltd
pop
idiv
xor
mov
or
or
adc
rcrb
add
adc
ret
pop
cmpb
sbb
xor
test
inc
push
lods
add
int
roll
sbb
and
cmpsl
loope
push
inc
add
ret
adc
fucom
paddw
movb
jmp
imul
push
mov
xor
pop
inc
pop
add
cmp
movsb
or
and
pop
lcall
xchg
sub
neg
jmp
or
push
pop
cmp
jl
push
pop
push
insl
sub
adc
mov
lods
fs
mov
scas
push
dec
lds
push
dec
fimull
aad
cmp
jl
icebp
push
arpl
xchg
push
cmpsl
xlat
sti
mov
dec
setl
mov
pop
mov
mov
sbb
mov
and
scas
or
push
shlb
xchg
pop
and
or
sub
adc
xchg
mov
movb
repnz
andb
imul
cmpsl
mov
or
sbb
jne
out
pop
dec
push
jne
sub
adc
repz
push
xchg
or
pop
or
push
inc
cmpsl
roll
push
push
add
push
inc
inc
pop
sbb
movaps
dec
mov
je
sub
add
jl
adc
std
icebp
cmp
jb
or
sbb
imul
jb
sbb
dec
or
xor
lea
mov
jg
cmpsl
lods
popa
jl
cmpsb
lfs
lret
jecxz
sti
daa
lock
add
dec
jae
xor
xor
add
push
pusha
pushf
in
jnp
fisubrl
das
or
lods
sbb
sbb
jns
cmp
push
dec
jmp
add
xor
mov
inc
xchg
in
xchg
xor
fwait
xchg
sub
shll
mov
sti
or
testl
inc
lret
jmp
std
push
lea
imul
imull
add
mov
outsl
rcrb
rolb
pop
sbb
or
or
popa
cltd
clc
add
push
dec
sub
pop
cld
pop
adc
mov
addb
sub
jge
repz
outsl
stos
mov
jl
inc
push
push
ja
out
or
loopne
sbb
mov
cwtl
je
sbb
mov
iret
mov
pop
xlat
arpl
xchg
loop
and
test
ljmp
stos
icebp
mov
js
rcl
sub
ret
or
cmp
sbb
fdivrp
mov
mov
jle
ds
orw
adc
dec
push
pop
pop
pop
shr
cmp
and
adc
incl
or
data16
js
mov
sbb
arpl
pop
pop
test
das
and
sbb
andl
shlb
enter
mov
test
cmp
push
sbb
cmp
mov
add
add
sbb
add
movsl
movsb
and
notrack
add
cs
sub
ljmp
mov
xor
cmpsb
add
mov
out
and
or
movsb
movsl
add
in
pop
pushf
leave
jp
push
push
add
inc
add
push
mov
scas
mov
popf
jbe
es
add
adc
mov
cld
outsb
mov
fdivl
fadd
fsubrs
call
sub
dec
adc
movsl
fsubr
std
jbe
or
sbb
push
cmp
adc
mov
or
jns
jmp
fldenv
popf
decl
mov
cmp
fmull
outsl
or
fbstp
enter
push
adcb
push
addr16
shr
lock
jmp
sbb
and
fcomp
inc
jno
cwtl
mov
mov
xor
mov
mov
imul
pop
mov
call
pop
xor
jae
and
rorl
out
cmp
add
and
out
xorb
mov
jne
xchg
repnz
out
jo
das
or
clc
xchg
scas
wbinvd
xchg
and
mov
lret
inc
sti
test
clc
and
cmp
out
fyl2x
sub
in
jnp
push
shlb
into
scas
add
movsb
pop
in
cs
sbb
xchg
scas
xor
repz
mov
je
sbb
inc
cmp
addb
ds
test
sbb
jns
icebp
and
inc
scas
add
sbb
mov
mov
stos
stos
std
les
mov
cmp
dec
out
mov
test
add
mov
xchg
pop
sti
mov
out
movsl
xchg
lea
xchg
shl
add
add
lea
je
mov
fistps
cmp
mov
imul
jmp
ja
xor
mov
mov
cli
jbe
inc
inc
fldenv
add
jmp
or
inc
cmp
sti
xchg
mov
lea
push
movsl
push
fildl
mov
push
cmpb
push
cmp
add
scas
inc
testl
aaa
js
insl
pop
test
ror
test
sbb
sub
je
pusha
dec
or
jo
inc
mov
sub
out
aam
cmpsl
xchg
push
ljmp
std
sub
pop
pop
stos
fbstp
pop
push
lds
out
sub
pop
les
push
jecxz,pt
je
sub
sahf
out
adc
or
push
xchg
xor
stos
imul
mov
jp
add
add
jp
inc
adc
push
push
sar
aas
jb
mov
movb
loope
add
push
shll
rcr
int
repz
push
inc
mov
stos
fdivr
adc
rep
inc
inc
mov
jne
pop
pop
mov
enter
sbb
dec
ret
fsts
insl
bound
push
cmp
fs
ss
imul
sub
dec
cli
jne
in
mov
lds
in
stc
std
adc
nop
shr
xor
je
out
mov
jecxz
mov
jo
jns
mov
push
sbb
push
xchg
rdtsc
jnp
enter
mov
divb
notb
jns
push
popf
cmp
and
loopne
mov
ret
mov
sbb
repnz
add
std
push
push
aaa
pop
stc
or
mov
pop
mov
inc
jae
adc
arpl
sarl
test
push
inc
cld
test
mov
dec
mov
addr16
testb
inc
inc
xor
sub
sub
xchg
punpcklwd
inc
push
adc
jmp
andb
mov
adc
clc
popa
inc
scas
js
lea
mov
shrl
adc
mov
mov
cmp
std
push
mov
fdivrs
xor
xor
push
push
push
cmp
jmp
mov
xor
je
xor
test
xchg
or
pop
std
dec
push
loop
addr16
or
mov
mov
xchg
mov
cmp
hlt
mov
setno
lds
jl
mov
test
jbe
mov
pop
mov
clc
call
ja
fsubrs
fprem1
addr16
clc
je
mov
mov
sar
sbb
aas
mov
xchg
scas
fimull
sub
inc
clc
pop
das
cmp
jae
cmpb
jo
inc
jmp
or
icebp
popa
subb
sbb
daa
lods
int3
sbb
sarb
push
add
and
and
or
loopne
sub
sbb
jno
cmp
xor
jg
inc
xlat
or
jae
fs
sti
pop
xor
inc
or
arpl
xor
nop
dec
or
scas
repnz
ja
int3
mov
xchg
lock
or
dec
jge
loopne
popl
roll
mov
pop
aam
dec
lahf
add
test
jecxz
adc
clc
sti
add
adc
jnp
jmp
imulb
sbb
jno
je
dec
and
push
fldenv
dec
mov
cmp
jg
ret
xor
or
rcll
lret
lea
sub
or
jle
in
mov
and
or
jne
mov
cld
js
das
mov
sbb
nop
jo
nop
and
iret
cmp
test
xchg
test
cmp
enter
and
xor
adc
mov
inc
call
push
rcrl
adc
jbe
adc
jmp
hlt
push
and
xor
movb
push
lcall
push
shll
and
fidivrl
inc
lahf
adc
rorb
cmp
test
cmc
lea
pop
pop
lea
mov
je
adc
sbb
mov
mov
ja
std
or
jne
fwait
inc
vmwrite
notl
xorb
testl
ds
or
jbe
inc
or
ja
imul
je
pop
ret
mov
scas
dec
das
mov
decl
ret
je
cmp
je
inc
fcmovnbe
cs
mov
test
mov
add
mov
call
adc
rcrb
or
icebp
inc
inc
cmp
add
out
inc
or
aas
xchg
and
pop
push
imul
aas
dec
xchg
pop
fwait
pop
add
outsl
jne
pop
fcompl
mov
add
pop
sub
popa
popa
push
jnp
inc
or
mov
jo
dec
jmp
daa
xor
ror
das
or
mov
pushf
popa
cmpsb
inc
or
arpl
push
push
imul
sbb
hlt
dec
sti
lock
mov
sub
adcl
dec
cmpsl
jne
shrb
movsb
adc
das
or
aaa
mov
cmp
lds
inc
mov
inc
cmp
sub
rorb
mov
mov
mov
addr16
mov
cmp
into
sbb
cmp
inc
data16
add
pop
sbb
testb
xchg
pop
jae
je
or
or
popa
dec
loopne
cmp
ja
inc
sbb
dec
inc
xchg
insl
loopne
push
cwtl
cltd
add
enter
adc
push
adc
or
or
add
mov
jge
sub
pusha
imul
loop
or
test
cld
stc
ret
outsl
sbb
mov
sete
or
jmp
rorl
sbbl
xor
inc
adc
push
pop
inc
arpl
dec
dec
mov
stc
adc
or
or
push
je
push
sbb
push
or
aaa
jno
pushf
sub
loopne
lods
popa
mov
sbb
mov
andl
adc
xchg
adc
pop
inc
sub
sbb
stos
xor
ja
inc
push
adcl
scas
mov
sub
push
sub
xchg
jb
ljmp
xor
sbb
pop
sbb
xlat
hlt
in
sbb
fyl2xp1
or
mov
call
sbb
dec
fnstsw
sti
mov
jmp
xor
adc
xchg
rclb
and
inc
ljmp
cmpb
dec
adc
push
cmp
jp
push
les
or
cmp
div
mov
idiv
or
sub
inc
aad
scas
mov
push
popf
mov
jmp
jne
or
push
jnp
xorl
gs
rolb
inc
in
inc
hlt
xchg
dec
lcall
loopne
inc
cmp
test
dec
and
add
cmp
jae
fildl
ljmp
or
rcrb
ret
ja
test
sub
inc
scas
mov
mov
xchg
lea
adc
pusha
jg
jge
mov
fldcw
lods
cmp
pop
lea
andb
xchg
movsl
or
vmwrite
fwait
push
mov
rcll
arpl
or
mov
mov
inc
adc
dec
sub
and
sub
fxch
fdivr
mulb
or
dec
add
inc
js
pop
pop
aad
mov
das
fnstcw
decl
test
add
rorb
xor
ret
dec
daa
add
mov
sbb
or
rclb
das
push
mov
mov
unpckhps
mov
repz
or
addb
add
rol
add
insl
xor
adc
sar
das
add
es
sub
push
xchg
xchg
and
mov
push
testl
jmp
movsb
setns
mov
pop
sbb
les
push
push
js
popa
xor
jbe
clc
or
cmp
pop
mov
sub
jbe
or
mov
xor
jl
add
sbb
cld
std
mov
sub
push
adc
ret
fs
jmp
mov
mov
fstpl
cmpl
adc
push
or
cmc
add
cs
mov
add
rclb
mov
sub
pop
pop
ret
push
inc
xor
pop
inc
xor
xchg
sbb
clc
and
hlt
cld
jo
stos
add
test
rolb
mov
inc
jae
or
outsl
lock
pop
arpl
lea
push
pop
pop
mov
mov
orb
xor
dec
mov
imul
add
push
sbb
idivb
es
mov
or
mov
pusha
xor
xor
jmp
sbbb
fisttps
xchg
jmp
mov
sub
sub
jne
mov
push
pop
sbb
aam
mov
dec
ret
jl
add
jne
or
inc
mov
or
push
mov
jl
mov
scas
mov
or
xor
sbb
or
movsl
aaa
or
cmp
mov
out
cwtl
cmp
dec
sbb
flds
mov
inc
loopne
and
push
test
ljmp
inc
mov
pusha
adc
cwtl
mov
push
aad
and
sbb
pop
adc
push
fildll
or
sub
push
in
add
sub
push
add
push
ficoml
adcl
cmpsb
sbb
fwait
loopne
mov
cmpsb
sub
sbb
dec
dec
addb
cld
inc
sub
jmp
fisttpll
fucomp
call
push
inc
mov
jl
or
mov
pop
sahf
cmp
push
cmp
rcrl
insb
js
inc
fsubrs
test
jge
xchg
push
mov
test
fildl
push
mov
movsl
rcl
sarl
mov
je
out
xchg
push
andb
jg
dec
cmp
or
jmp
jne
mov
test
or
sub
mov
lea
fldenv
cmp
and
popa
adc
mov
imul
jl
inc
mov
xchg
jl
leave
jmp
push
cmpsl
cmp
mov
and
cmp
std
dec
test
add
sub
and
cs
jmp
hlt
mov
pop
pop
add
leave
or
insl
xchg
mov
push
or
inc
pop
cmp
add
aaa
fsubrp
ljmp
sbb
cmp
test
pushf
jl
add
dec
adc
mov
add
std
test
cli
orl
shll
jmp
sbb
push
int
and
out
adc
jmp
jb
push
xchg
gs
dec
pop
add
mov
arpl
sub
mov
or
cmp
mov
xor
add
push
dec
add
mov
dec
and
xchg
cmp
inc
sbb
pop
mov
mov
mov
mov
adc
cwtl
and
cmp
aam
add
ret
sbb
push
cmp
adc
dec
lds
xor
out
lea
aaa
add
imul
loop
sub
aam
mov
je
shll
insl
das
pop
jne
push
and
cmp
xchg
test
sti
jnp
inc
pop
or
lret
push
add
push
add
xchg
rolb
mov
mov
or
jae
shld
shl
pop
rcr
and
pop
shl
ret
scas
mov
push
je
jne
cld
lods
fnstcw
sbb
popf
call
pop
inc
std
adc
ja
daa
dec
adc
mov
notb
mov
decl
das
arpl
and
ret
and
add
out
int3
cs
push
ljmp
enter
mov
jo
pop
xor
or
add
cli
int
cmp
push
iret
sbb
iret
sbb
ss
mov
xor
scas
or
ss
jo
xchg
sbbl
add
ss
das
loopne
mov
xchg
pop
sbb
insl
pop
inc
sbb
andl
adc
adc
das
orb
push
mov
sbb
js
insl
jge
fdivrl
cwtl
mov
daa
fs
dec
inc
es
xchg
loopne
mov
cmp
pop
push
rcrb
dec
ret
mov
int3
push
in
adc
pop
rcrl
mov
ret
pop
dec
jl
sbb
cmp
sbb
clc
inc
jg
cmpsl
dec
dec
daa
mov
and
xchg
adc
adc
mov
xor
test
adc
xor
xor
add
jmp
shl
fists
inc
in
cmp
push
push
sahf
and
jae
jmp
rolb
imul
dec
jne
out
lahf
mov
je
dec
repz
push
jmp
or
adc
lret
jmp
negb
mov
mov
xchg
gs
jns
in
dec
or
jne
cmp
sti
test
cltd
cwtl
and
in
ret
sbb
stos
sub
repz
dec
push
sbb
orl
or
jno
int
sbb
jo
testb
add
orl
jge
subb
cmp
jge
pop
xor
push
mov
rolb
jp
rolb
test
inc
mov
adcb
or
out
xchg
dec
pop
cmp
call
pop
andb
lahf
aaa
aas
mov
test
mov
flds
incl
aas
rcrl
sub
sub
adc
outsl
psadbw
adc
fistps
lods
xchg
pop
orb
je
loope
xchg
sbb
je
ret
mov
push
jmp
xchg
add
call
test
pop
sbb
lahf
icebp
inc
das
and
mov
push
lret
je
adc
sbb
mov
add
outsb
sub
lea
adc
repz
add
lods
imul
shrb
push
mov
add
mov
sarl
je
mov
and
outsb
push
or
add
aaa
mov
test
or
idivb
gs
stc
or
mov
pop
shlb
in
push
mov
mov
fwait
jecxz
loop
mov
aaa
movsb
hlt
pop
shl
rcr
or
repz
add
sbb
add
leave
or
ret
fcom
mov
iret
mov
mov
or
les
mov
or
in
les
or
in
dec
pop
mov
jne
mov
je
adc
fnstsw
xchg
sbb
jne
orl
dec
jmp
insl
adc
adc
and
aaa
adcb
push
dec
jl
js
sbb
sub
mov
and
lods
adc
lock
mov
or
repz
adc
adc
xor
mov
add
aas
enter
sub
and
push
or
addb
das
and
sub
nop
cmpl
shrl
add
xor
in
or
adc
push
adc
loopne
push
dec
pusha
adcl
adc
jo
enter
fcoms
clc
push
and
in
add
shll
jl
test
pushf
movsb
mov
in
xchg
adc
aas
rorb
fsubs
and
cmpb
push
add
rclb
fnstcw
popl
jae
xchg
add
or
pop
or
push
add
out
scas
or
fldcw
pop
dec
inc
mov
xchg
ja
idiv
push
fwait
jae
and
test
loopne
rclb
movsl
aad
das
ljmp
int
mov
add
cmp
add
hlt
ljmp
mov
mov
mov
cltd
cmpsb
fisttpll
adc
jne
les
decl
jmp
or
jmp
or
and
outsl
cmp
fisttps
jnp
insl
pop
pop
test
pop
mov
and
hlt
jb
mov
and
add
add
clc
pusha
jo
test
mov
das
pop
cmp
adc
into
pop
out
xlat
xchg
sbb
int3
or
or
or
add
stos
push
jo
cld
add
or
imul
jne
or
add
adc
movsl
or
and
fldenv
pop
sub
lret
call
loop
rolb
test
add
jge
sti
mov
sub
push
sbb
add
jl
jbe
cmp
xchg
addr16
in
pushf
cltd
adc
cmp
sub
jl
daa
adc
aaa
cltd
addb
test
insb
sub
add
jecxz
int
nop
clc
inc
add
pop
sub
in
mov
mov
insl
mov
pop
cltd
addr16
dec
shrb
add
out
pop
add
das
push
ds
and
je
add
jle
pushw
push
sbb
je
mov
push
add
and
call
lret
ja
push
pop
mov
roll
rorl
sar
mov
xor
hlt
lds
pushf
cltd
and
sahf
cmovp
or
push
jge
pop
lea
push
pushl
popf
out
cmp
inc
cmpsl
and
out
outsl
adc
enter
and
or
addb
imul
fidivl
xchg
pop
dec
call
pop
mov
push
pop
div
add
cmp
jl
orb
xor
enter
mov
jns
mov
sbb
rcrl
js
icebp
dec
or
loopne
mov
dec
push
or
add
mov
and
aas
cmp
and
add
ljmp
stc
sub
dec
push
push
jne
ror
sbb
jo
and
nop
ja
and
call
mov
push
jmp
add
inc
mov
fcmovbe
xchg
loope
jge
cmp
fdivrs
sub
lock
mov
add
inc
inc
in
sarb
xor
jbe
cmp
jl
movsl
popa
or
dec
testl
add
fincstp
outsw
inc
push
fdivrs
andb
inc
add
inc
or
cmpb
cmp
icebp
aaa
jg
daa
xchg
testl
or
incl
sub
push
push
aas
mov
or
push
and
xor
cmpsl
mov
outsl
movl
jecxz
and
mov
add
or
mov
xor
and
pop
ja
push
and
pop
mov
push
mov
sahf
dec
or
sar
dec
cmpsl
jle
movb
test
mov
jle
add
das
add
mov
xchg
inc
xor
adc
or
insb
mov
sbb
adc
cld
dec
or
jae
mov
mov
sahf
and
xor
incl
jmp
push
aam
mov
jge
jns
movsl
sbb
in
push
std
fcom
and
jns
in
hlt
pop
push
and
movsl
movsl
sbb
mov
mov
les
mov
pop
movswl
or
pop
or
jne
dec
push
mov
pop
cmp
push
mov
xor
and
inc
sub
mov
inc
les
add
adc
sbbl
add
hlt
cli
dec
in
jno
or
dec
adc
rcrl
movsb
or
cmp
xchg
jmp
outsl
jne
jns
add
and
dec
ud2
or
inc
or
loop
sub
enter
into
cmp
adc
leave
mov
shr
or
lea
mov
fbld
lret
push
mov
jmp
and
iret
cltd
dec
or
subl
fistps
push
jp
incl
dec
lahf
hlt
fs
daa
push
adcb
rcr
sbb
js
aam
add
mov
icebp
mulb
add
aam
lods
lahf
mov
push
jl
add
pop
inc
mov
mov
push
adc
dec
loop
jno
push
mov
addr16
imul
add
daa
inc
bound
jno
fstpl
jo
cmp
je
sub
dec
insb
ja
dec
xor
mov
push
mov
add
sbb
xor
imul
pop
rolb
scas
loopne
cmp
das
je
cmp
xchg
fstp
out
leave
mov
xchg
or
test
jae
and
or
add
xor
push
test
xchg
xor
es
arpl
push
push
out
insb
and
xor
jno
leave
lcall
ss
in
mov
and
fstl
adc
sbb
add
sub
adc
inc
imul
mov
jecxz
mov
aad
leave
sahf
mov
push
ret
cmp
movsl
cmp
jl
cmp
jg
inc
jmp
popa
cmp
inc
pop
xchg
mov
mov
dec
add
pop
push
repz
mov
dec
xchg
es
xor
or
xchg
je
jno
in
adc
xlat
add
mov
jmp
rorb
cmp
testl
jnp
js
dec
add
pop
pop
cmp
xchg
push
pop
cmp
cmp
sbb
je
jns
fs
xor
bound
adc
push
sub
ja
push
repz
and
add
ret
and
clflush
sbb
adc
sub
adc
cli
or
xor
push
pushl
cmp
pushf
mov
inc
cmp
adc
inc
push
jmp
push
add
icebp
sti
mov
xchg
leave
push
sti
and
push
xchg
mov
pop
pop
mov
or
jge
cmp
xchg
hlt
lret
mov
mov
lret
xor
clc
daa
enter
adc
or
fsubp
jg
jle
push
xchg
mov
js
mov
xchg
push
repz
xor
xlat
xor
or
popf
rorl
sbb
pushf
sbb
xor
sub
je
cwtl
push
add
shr
cmc
sub
xlat
sti
mov
faddl
les
mov
imul
jp
inc
call
clc
das
stc
push
add
lea
orl
sbb
push
sbb
push
pop
sub
arpl
inc
call
stc
jmp
sbb
push
ret
add
jns
pop
pop
mov
rolb
enter
and
loopne
jmp
adc
mov
add
adc
icebp
jecxz
sub
cmp
mov
fiadds
outsl
mov
sub
adc
mov
jmp
cltd
push
mov
add
loop
lret
add
iret
sarb
adc
or
mov
and
inc
xchg
add
out
scas
or
mov
ja
xlat
pop
pop
adc
jp
sub
aaa
jno
lcall
pusha
add
jg
xor
and
sbb
sub
sub
iret
clc
insb
rcrl
mov
inc
rclb
mov
or
adc
fadds
pop
adc
pop
inc
pushl
mov
pop
add
pop
andl
add
xchg
mov
inc
mov
sbb
scas
adc
fdivs
and
mulps
jmp
cmp
jg
mov
add
mov
inc
dec
jp
pop
das
je
mov
and
fistps
ret
push
je
ds
push
push
jae
sbb
xlat
or
push
fdivr
rorb
icebp
mov
and
mov
movsb
fcom
sbb
add
gs
cwtl
inc
cltd
adc
jae
pop
adc
adc
add
cmc
add
dec
mov
das
and
fwait
or
jmp
sub
pop
xchg
pop
xor
outsl
fidivrl
adc
lock
sbb
fs
test
js
inc
or
cmp
jge
or
mov
ljmp
jmp
andl
std
insb
fcoml
scas
push
lcall
jge
and
or
lcall
pop
arpl
push
xchg
into
pop
xchg
pop
jnp
adc
add
lahf
xchg
adc
add
or
fildl
lea
cmpsl
leave
into
loopne
shll
or
sub
cmp
mov
mov
pop
xor
inc
loop
cmp
call
pop
rcrb
das
or
ljmp
and
js
mov
add
mov
clc
call
decl
pop
or
mov
xlat
mov
shr
shl
or
pop
ficomps
roll
pop
bnd
cmp
into
mov
or
out
repz
shr
or
push
aas
mov
adc
xchg
add
xor
jl
dec
inc
loope
mov
add
jnp
outsl
add
lea
movsl
movsl
push
movsl
sub
push
or
outsl
insb
sub
arpl
addr16
mov
mov
scas
inc
leave
loopne
je
shld
pop
shrb
dec
inc
loop
test
test
inc
push
mov
out
adc
loope
mov
add
and
jae
add
rcr
idivb
cmpb
cmp
mov
jmp
jnp
data16
inc
out
push
inc
dec
pop
cmc
inc
and
rcrb
rclb
lock
sarb
xchg
mov
je
test
and
push
and
stc
or
xchg
mov
or
inc
clc
and
xchg
mov
cwtl
adc
sti
xor
cmp
divl
xchg
rcrl
mov
sub
aad
sbb
push
adc
xor
and
testb
pop
jmp
pushf
pop
adc
add
jl
mov
sahf
sbb
xor
sub
mov
inc
jle
jle
arpl
gs
imulb
sti
dec
push
cmovp
data16
outsb
je
pop
add
insl
push
pop
daa
mov
ret
cmp
cmp
je
js
adc
jmp
inc
and
xchg
mov
rorb
lea
aam
sbb
adc
sbb
mov
mov
test
cltd
leave
mov
dec
and
push
mov
loope
adc
or
in
mov
push
cmpsl
or
mov
rcrl
and
dec
xor
das
push
dec
adc
fidivrs
lods
dec
fsubrl
jmp
mov
sbb
push
cwtl
add
mov
test
lahf
jmp
or
call
dec
adc
jmp
push
aam
imul
add
fcos
mov
outsb
adc
pop
pop
dec
pop
dec
lret
pop
dec
pop
decl
fadds
andl
and
xor
or
sbb
mov
je
test
cmp
test
icebp
sub
pop
stos
xchg
outsl
rorb
lock
dec
or
cmp
adc
jo
fnstenv
sbb
jbe
cmpb
dec
jge
add
mov
sub
and
xchg
iret
add
repnz
insb
sbb
mov
jge
js
mov
xchg
in
fiadds
loopne
fsubrl
inc
pop
add
rcrl
push
sbbb
adc
lret
ret
fwait
leave
aam
xor
mov
inc
and
in
add
or
pop
cmp
sahf
push
ss
js
mov
out
insl
ljmp
lret
pop
test
ss
jmp
adc
jbe
adc
sub
cmp
lds
jno
mov
push
or
adc
lret
cmpsb
mov
mull
xchg
jl
fnstenvs
sub
add
inc
dec
or
push
mov
mov
cld
push
outsl
test
push
movb
in
cmpsb
imul
cmpsb
imul
aas
pop
add
int
stos
inc
add
jmp
or
ljmp
cmp
cld
push
icebp
sbb
jne
andw
in
add
pop
add
add
fmuls
loope
or
xchg
data16
sub
outsl
jne
maskmovq
push
loop
test
inc
inc
test
or
adc
out
dec
mov
inc
xor
and
sbb
adc
lea
inc
sti
mov
xor
push
add
sar
rol
mov
iret
inc
jmp
dec
lock
in
out
or
lea
cmp
cli
imul
mov
lea
sar
pop
or
jae
lock
inc
add
sahf
cmpl
mov
add
inc
xor
imulb
int
adc
mov
ret
inc
jns
xchg
test
insl
mov
and
pop
rcl
cli
xchg
cli
sub
loope
rolb
aas
add
sbb
sbb
jne
mov
neg
jnp
sbb
xor
or
cmp
xchg
mov
mov
js
jno
push
repz
imul
movsl
dec
stos
xchg
lahf
jbe
or
sbb
mov
mov
adc
push
xchg
fistps
decl
jne
arpl
ret
popl
add
xor
movsl
push
iret
in
mov
dec
jmp
push
ljmp
add
ret
sub
mov
xchg
cmp
ss
std
xor
int
flds
add
andb
jmp
add
inc
push
xor
cmp
rclb
xor
xor
adc
call
ret
dec
jl
cmp
or
jnp,pt
inc
lea
push
xor
clc
scas
roll
and
ucomiss
jae
dec
mov
icebp
xlat
dec
loopne
push
shll
lea
ret
xor
pop
imul
pop
lea
mov
cwtl
ds
jmp
arpl
and
jmp
jg
addl
dec
test
cmp
or
rcrb
mov
pop
dec
xchg
and
clc
pop
jmp
dec
mov
push
insb
xchg
in
ljmp
xor
and
and
and
mov
and
jae
inc
inc
jg
lods
cli
std
mov
push
inc
lahf
mov
adc
push
mov
jne
or
dec
test
leave
inc
outsb
shr
daa
push
cmp
mov
in
scas
or
push
cmp
xchg
cmp
iret
scas
or
dec
push
call
dec
outsl
or
xchg
lock
and
or
jle
sarl
outsl
add
loopne
arpl
adc
outsb
add
sbb
or
push
mov
scas
sbb
xor
inc
cmp
insl
jo
clc
icebp
subl
loope
jne
and
push
jl
mov
pushf
andl
pop
jne
mov
orb
pop
or
cmpsl
mov
jbe
loop
cmp
gs
in
mov
jno
and
dec
fdivrs
add
xor
out
dec
dec
xor
stos
js
or
sbb
jnp
cmp
jp
js
sti
xor
xchg
in
sub
sbb
adc
outsl
or
out
fistps
jl
jmp
xchg
por
inc
loop
loop
stos
ficoms
jae
test
out
jmp
or
add
pcmpeqw
or
mov
outsb
push
sbb
fistps
out
push
inc
mov
movl
mov
pop
mov
jmp
cmp
je
jge
mov
orl
mov
mov
inc
inc
dec
cs
outsl
and
jae
push
mov
cmpl
pop
lock
adc
ffreep
testb
test
xchg
push
jl
jmp
mov
pop
ret
mov
pop
adc
add
leave
daa
loop
popa
pop
sbb
push
stos
pop
loopne
pop
add
ja
add
or
jmp
sbb
leave
push
pop
out
je
add
das
cmp
mov
sub
sbb
stos
xchg
sub
loop
jne
scas
ret
inc
into
and
cmc
push
push
mov
xor
sbb
mov
pop
jne
push
mov
xor
stc
jge
dec
cmp
adc
or
or
and
inc
faddl
nop
push
cli
fwait
jle
dec
and
xor
cltd
xchg
jns
xchg
xchg
pop
sbb
mov
insb
ficoml
aad
mov
pop
dec
xor
add
jmp
or
or
lods
pop
notb
lock
mov
clc
idivl
xor
test
call
cmp
je
and
icebp
out
movsb
lock
mov
jb
cmp
jbe
inc
cltd
sbb
push
jmp
jp
popa
movsl
sbb
push
popf
xchg
sbb
insl
data16
xchg
imul
add
inc
addb
jb
iret
dec
jb
or
cld
inc
aaa
and
lahf
push
cmovnp
xor
xchg
sbb
leave
mov
push
jo
rcr
mov
lock
xchg
out
repnz
popa
cltd
dec
enter
fldt
leave
in
out
fcomp
adc
fucomi
or
test
pop
cmp
jne
sub
mov
mov
sti
mov
inc
ret
and
rclb
dec
push
or
or
dec
jg
sbb
add
in
jne
sub
ret
scas
es
and
push
push
idivl
jno
negl
and
outsl
and
mov
bound
sete
cmp
lahf
orb
pop
mov
jp
push
fbstp
cmp
and
dec
or
jae
test
fstps
jno
fisttps
add
mov
xor
sti
pop
cmp
mov
out
push
sarb
inc
js,pt
jmp
xor
xor
lea
mov
or
loope
or
jmp
mov
loop
mov
mov
adc
es
xor
xor
mov
jnp
jp
jmp
push
mov
dec
cmp
leave
dec
daa
xchg
loope
sub
and
andl
popa
or
inc
adc
add
xchg
push
cs
pushf
adc
sub
pop
xchg
push
mov
neg
sbb
not
and
pop
add
sub
outsb
ds
xchg
mov
pusha
sub
sub
enter
aaa
pop
jp
add
xchg
push
pop
fcomi
add
sbb
sub
int
add
jbe
clc
jae
xor
leave
mov
jl
ret
xor
cmp
adc
push
push
jmp
pop
lods
or
mov
push
pop
movsl
fbld
adc
mov
mov
pop
daa
ljmp
pop
hlt
mov
pushf
xor
pop
sarb
or
push
insl
sbbb
shlb
lock
test
shl
ret
cmp
and
cmp
push
adc
clc
or
jmp
sarb
adc
pop
in
or
subl
lock
insl
rcrl
xor
sbbl
js
loope
inc
pushf
inc
jecxz
lcall
pop
pop
shlb
aas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
lods
xor
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
sahf
mov
add
and
or
adc
stos
sbb
data16
call
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
cld
mov
stc
dec
test
xchg
sbb
push
jg
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
ljmp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
inc
jmp
sub
rorl
popa
mov
into
pop
cmp
mov
mov
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
mov
orl
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
decl
lock
add
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
call
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
pop
sti
jo
lret
pop
or
adc
jg
lcall
clc
sar
imul
push
js
or
push
addl
decl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
fists
lock
aaa
push
scas
mov
fidivrs
mov
jmp
dec
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
jge
in
add
incl
xor
sbb
push
add
pop
cmpsl
addb
add
push
add
add
add
xor
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
fistpll
pusha
push
jo
or
pushl
mov
xor
sbb
sub
outsb
add
fdivs
sub
sub
insb
insb
adc
mov
add
push
cmp
inc
inc
dec
jae
jb
arpl
jae
hlt
xchg
ljmp
inc
gs
je
jb
sbb
pop
add
cmp
incl
dec
inc
dec
xor
add
xor
jl
cmp
scas
outsb
bound
push
and
neg
mov
push
jb
test
and
mov
das
jmp
or
push
dec
dec
push
push
and
push
dec
dec
inc
mov
inc
dec
dec
inc
and
xor
mov
mov
xchg
popa
bound
imul
lods
sbb
pop
jo
out
out
out
aaa
outsb
outsl
je
or
push
arpl
or
insb
dec
imul
sbb
ss
fs
iret
inc
xor
imul
inc
addr16
arpl
arpl
insb
push
testl
push
gs
roll
cmpl
mov
cmpb
outsl
jo
mov
dec
fwait
or
insl
push
fs
push
cmp
dec
arpl
nop
mov
je
push
js
fs
arpl
das
addr16
ret
push
imul
clc
push
inc
inc
jb
add
addr16
insl
inc
mulb
mov
xor
lahf
sbb
jo
and
dec
and
pop
push
cmp
addr16
jae
or
xor
fsubrl
in
shll
jne
dec
fs
jnp
ret
dec
pop
shll
push
imul
inc
sub
and
dec
imul
cmp
sub
push
add
aaa
mov
add
mov
dec
pop
imul
adc
aaa
movzbl
push
push
sub
jg
push
jne
push
add
inc
jb
push
popa
sahf
dec
fnsave
shrl
bound
inc
mov
jns
dec
lds
jle
add
gs
sub
jbe
aaa
jno
lret
orl
pop
inc
gs
popa
add
aad
jbe
std
jne
daa
pop
pop
xor
fs
scas
insb
popa
addr16
outsl
jb
idivb
push
dec
inc
dec
add
dec
dec
inc
add
inc
ss
das
ds
sbb
ja
je
test
push
pop
or
inc
cs
pop
sti
cmpsl
jmp
daa
fs
xchg
mov
arpl
xor
xor
fs
xchg
sub
xor
xchg
inc
in
adc
add
divb
jno
adc
push
push
dec
jae
or
ret
bound
jnp
pop
mov
adc
jmp
inc
ja
nop
add
adc
imul
ja
xor
adc
cltd
pusha
out
aas
add
pop
dec
xor
mov
xorb
loop
jg
sub
cltd
cwtl
cltd
cltd
ret
and
push
jg
cltd
adc
test
fsts
lcall
mov
lea
je
into
enter
imul
shrb
xchg
rol
pop
popf
fdivrl
adc
repnz
call
mov
lcall
sbb
out
std
pushl
adc
arpl
outsb
sbb
adc
lcall
xchg
ficomps
data16
gs
shl
popf
and
cwtl
repz
idiv
push
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
xor
or
leave
sbb
adc
inc
xor
adc
add
movsl
fstps
mov
xchg
adc
mov
iret
lret
mov
pop
fisubs
movsl
jb
leave
pop
jno
pop
sbb
xor
enter
ret
shlb
ja
jno
addr16
jmp
fdivrp
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
sbb
ljmp
sti
fcomps
xor
idiv
std
aad
sti
jmp
jmp
xor
ljmp
stos
stos
cltd
dec
fmul
cmp
xchg
sti
lock
negl
in
cltd
lods
sti
sarb
je
insb
cmp
and
cs
inc
mov
pop
push
inc
inc
dec
pop
sbb
outsl
pop
add
jae
arpl
lahf
shlb
shlb
sbbl
outsl
inc
jne
jb
sbb
push
cmp
sub
popa
imul
mov
gs
jb
insb
fidivrl
jecxz
cmp
ds
push
aaa
mov
data16
push
inc
je
out
in
adc
mov
jne
inc
mov
lods
insl
lret
push
rcrl
fmuls
fnstenv
cs
dec
ficoms
mov
and
inc
cmp
mov
push
jne
sub
pop
cs
outsb
xchg
push
xor
testl
sub
retw
fcmove
push
andl
pop
push
ja
imul
and
inc
addr16
mov
and
sub
add
inc
add
addr16
cmp
inc
dec
popa
sbb
add
pop
and
or
repz
pop
bound
fldenv
mov
daa
and
ret
pop
loopne
and
xor
repnz
daa
idivb
lcall
js
int
add
push
dec
jns
cmpsb
sbb
add
add
in
hlt
call
ror
inc
shrb
or
push
cmp
add
cld
out
out
sbb
jo
xchg
and
hlt
out
mov
mov
inc
nop
das
pop
inc
test
and
in
in
inc
xor
mov
dec
push
leave
or
in
in
nop
or
je
or
leave
or
in
jecxz
jecxz
xor
or
dec
add
repnz
push
in
nop
loop
pop
enter
pop
loope
in
jbe
lods
push
pushf
push
jl
cmp
pop
sbb
jb
dec
push
shl
lods
loopne
xor
nop
or
cmp
enter
fucomip
fistpll
lods
jo
inc
xor
nop
and
insb
testb
mov
inc
mov
pop
cmp
mov
or
hlt
fnstsw
xchg
fdivrs
xor
jo
push
sbb
int
xor
aam
shlb
in
fcoml
or
and
xor
mov
xchg
cmp
les
mov
or
shrl
test
jl
sub
push
dec
shll
lock
call
inc
orb
cli
push
cmp
push
mov
pop
das
pop
push
bound
sub
sti
adc
mov
jo
jb
jae
inc
inc
dec
dec
dec
inc
testb
inc
dec
popa
jbe
insb
outsl
repz
inc
clc
cmp
push
jns
push
jae
mov
xor
xor
add
mov
addr16
shlb
jne
jns
dec
inc
dec
inc
pop
imul
sub
outsb
jge
push
loopne
std
popl
outsl
jne
and
je
xor
jle
jg
lret
jnp
dec
loope
test
std
aad
ret
popa
bound
gs
cmp
jbe
gs
imul
je
and
dec
outsl
jb
gs
je
cltd
push
jno
test
outsb
xor
out
sub
popa
pop
jo
sti
iret
in
adc
xor
outsb
arpl
mov
lea
xchg
dec
outsl
arpl
rorl
scas
inc
and
and
pop
imul
fdivrp
jnp
insl
stos
insl
data16
jo
bound
daa
bound
push
insl
jo
adc
imul
cs
jne
adc
sub
test
in
dec
gs
imul
shr
push
add
pop
add
dec
in
out
add
and
ja
and
cmp
mov
scas
dec
shll
and
mov
ret
jae
outsl
inc
push
push
xchg
push
daa
stc
dec
jne
bound
hlt
mov
notl
xor
jo
in
push
mov
pop
aas
fstps
pop
push
fwait
les
sub
inc
insl
pop
xor
mov
ret
inc
insb
insb
mov
push
ja
xchg
inc
pop
jg
push
imul
push
jne
xlat
adc
insb
rorb
adc
jnp
sbb
sbb
push
mov
pop
cmp
roll
push
je
xor
push
das
inc
push
inc
dec
push
dec
dec
inc
dec
inc
stos
and
jge
arpl
arpl
xor
mov
jne
js
out
or
xorl
movsl
jo
add
mov
arpl
and
and
dec
dec
add
pop
sbb
xor
xor
pop
shlb
mov
insl
dec
cmpl
xor
pop
scas
imul
and
cmp
insb
scas
fs
in
mov
xor
inc
lcall
push
pop
mov
xor
rol
or
add
adc
adc
pop
add
iret
jnp
mov
jg
push
stos
jg
push
jne
jae
imul
fisubrl
xchg
dec
and
jbe
outsb
sbb
adc
bound
aaa
ficomps
cmp
push
lds
fwait
cltd
xchg
lret
test
inc
jb
push
les
add
incl
add
mov
mov
inc
mov
and
sbb
movl
push
insb
mov
movsl
leave
push
mov
jae
outsl
pushf
sbb
lock
aaa
cmp
imul
jns
or
cmp
push
and
pop
popf
js
dec
rorb
xchg
insb
popa
arpl
mov
mov
push
push
push
ret
mov
arpl
adc
gs
insl
add
cmc
xchg
imul
cmp
inc
xchg
jno
jno
mov
loope
dec
dec
daa
fwait
xor
push
in
loop
xor
and
test
push
sbb
fcom
xlat
add
popf
inc
gs
mov
arpl
inc
sub
imul
cmp
dec
std
cmp
lretw
movsb
cmpsl
inc
push
loopne
and
mov
jo
fstl
daa
adc
sub
sets
pop
inc
mov
or
std
mov
sbb
jae
push
arpl
mov
xor
ja
jbe
out
lds
xor
mov
jne
inc
pop
cmpl
daa
fxch
icebp
ds
subb
jae
xlat
inc
addr16
lcall
mov
jb
ffreep
or
pop
pusha
aas
mov
bound
fs
jb
mov
mov
jb
int3
pop
dec
outsl
push
xor
mov
mov
and
dec
imul
pop
inc
fimull
xor
sub
push
or
ja
jno
les
dec
pop
push
mov
mov
sbb
lea
gs
aas
jecxz
add
sub
mov
insb
adc
faddl
pop
pop
jnp
or
and
mov
and
faddl
loop
out
bound
or
adc
mov
outsb
xchg
push
jg
push
add
xchg
mov
add
outsl
ss
mov
lahf
call
dec
pusha
add
add
add
add
mov
and
std
int3
inc
fs
mov
je
xchg
shlb
or
jl
add
sar
mov
icebp
sub
adc
xchg
hlt
or
mull
into
inc
push
inc
addr16
test
or
pusha
fisubs
aas
inc
dec
push
add
ja
imul
add
add
or
arpl
fcmove
add
lret
push
filds
pop
les
int
fs
int
ds
dec
xchg
movsb
test
lods
stos
shrb
out
push
pop
nop
or
dec
xor
scas
push
dec
mov
and
add
xor
add
dec
pop
data16
repnz
or
adc
call
xor
sbb
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
cmp
xor
xor
bound
sbb
punpcklbw
out
push
enter
cmp
jg
mov
orb
dec
cltd
cltd
icebp
mov
jp
add
push
fs
add
mov
outsb
inc
fcomp
or
add
rcl
pavgb
adc
ss
in
sub
cmp
pop
and
mov
add
or
and
mov
xor
xor
xor
mull
inc
es
add
and
sub
insb
mov
testl
pushl
dec
add
pop
pop
adc
into
int3
loopne
jg
xchg
add
out
rcll
push
fstpl
or
add
mov
xor
popa
cmp
add
jl
enter
jae
arpl
pushf
pop
cmpsl
jecxz
clc
add
jo
jo
popa
jo
stc
adc
das
inc
inc
outsl
or
lea
inc
loopne
fcoms
outsl
fs
imul
fadds
insl
inc
push
mov
adc
adc
jbe
insb
inc
cmp
sarb
jns
jns
jg
dec
dec
dec
inc
inc
and
sub
mov
dec
push
bound
jb
inc
fwait
dec
mov
cmp
fdivp
or
dec
idivl
jne
insl
mov
add
imul
xchg
outsb
inc
cmp
push
xor
add
inc
or
pop
popa
sbb
pop
sbb
dec
outsb
fsubrs
mov
mov
and
arpl
sbb
movsb
pop
and
fs
jbe
push
xorl
pop
mov
or
sbb
sbb
inc
jmp
or
or
mov
fs
pop
and
outsb
mov
je
aad
add
or
add
cmc
inc
imul
pop
fs
sub
lahf
mov
add
xor
add
sub
mov
sbb
and
arpl
adc
jp
inc
and
ret
je
movsl
mov
pop
call
inc
cmp
test
or
jge
adc
pop
mov
mov
fistps
ljmp
adc
mov
push
xchg
lret
adc
or
adcb
push
sbb
stos
jns
imul
xor
and
add
sbb
or
push
push
dec
push
push
sub
jle
xor
xor
sub
push
push
gs
fisubrl
stc
out
and
push
xchg
call
mov
roll
pop
and
shrb
add
std
dec
lock
push
push
xchg
addr16
dec
push
push
mov
push
jne
add
jne
aaa
out
cmp
pop
js
daa
lfs
sub
and
sub
or
loope
and
add
dec
dec
push
pop
in
add
movsb
adc
cmp
adc
lcall
push
inc
push
push
outsl
lea
sub
shlb
inc
pop
dec
das
cli
and
inc
inc
outsb
push
pop
push
inc
xor
and
push
mov
imul
jns
push
push
inc
add
mov
push
test
jne
mov
push
mov
subl
jns
je
add
pop
das
xor
dec
and
addr16
outsl
mov
pop
push
xor
xor
cmp
lahf
jge
jno
call
bsf
sbb
cmp
and
sbb
das
jo
mov
bound
inc
cs
add
add
add
sarb
add
dec
inc
adcb
xor
bound
popf
dec
mov
push
push
and
loopne
orl
mov
xchg
xchg
jnp
or
outsb
sub
shr
fnstenv
mov
in
shrb
fnstenv
popa
rcr
push
jmp
sahf
outsl
and
and
dec
push
dec
dec
jno
rclb
push
xchg
jecxz
lcall
or
mov
gs
pop
inc
pop
cmp
adc
mov
xor
leave
leave
enter
xor
enter
jb
xor
enter
xor
xor
xor
leave
leave
enter
ja
enter
cmp
dec
jnp
leave
cmp
xor
daa
leave
enter
xor
jnp
xor
into
xor
rolb
fsubp
pop
jle
push
xor
and
pop
es
xor
xchg
es
outsl
cmp
insl
pop
es
push
jns
and
pop
es
jbe
fildl
sub
pop
sub
mov
xor
sub
sub
dec
sbb
sub
push
inc
inc
pop
or
dec
push
jno
push
jne
push
es
xlat
mov
jbe
adc
add
adc
mov
jbe
add
mov
out
adc
dec
imul
shll
daa
fistpl
outsl
cmp
jnp
or
daa
int
popa
popa
push
cmpsb
lcall
inc
adc
dec
adc
jo
int
addr16
xor
dec
push
fstps
cs
adc
movsb
cmp
movsb
cmp
fisubs
mov
cmp
and
adc
imul
push
mov
arpl
loope
jne
add
inc
daa
dec
jb
imul
adc
adc
adc
nop
xchg
sub
mov
nop
ds
enter
pop
jl
or
iret
xchg
pop
inc
push
push
dec
pop
push
push
push
push
or
mov
sub
push
push
sbb
push
xchg
mov
dec
pop
ja
out
or
push
or
fildll
lahf
and
dec
dec
inc
pop
or
orl
outsl
inc
push
mov
or
and
pop
or
ja
inc
dec
or
out
mov
push
pop
or
mov
mov
dec
daa
push
inc
dec
arpl
fdivs
or
push
test
add
punpckhdq
insl
mov
push
imul
xchg
cmp
push
aaa
or
popa
xor
leave
and
arpl
leave
and
and
and
aaa
call
or
push
mov
cmp
dec
loope
fucomp
lret
insb
xchg
xchg
cmp
and
popa
pop
adc
mov
or
jle
ss
jne
bound
jbe
insb
xor
inc
push
jmp
js
fbld
popa
jo
mov
push
mov
loop
gs
jo
inc
aaa
inc
fstp
sbb
je
inc
adc
ja
popa
jbe
xor
cs
dec
sbb
sub
push
shlb
inc
lea
mov
pop
mov
arpl
inc
ficompl
test
jb
pop
mov
setae
jbe
je
jb
and
arpl
movsl
lahf
bound
push
dec
fwait
mov
cmp
outsl
push
es
mov
movsl
jo
push
pop
out
sbb
or
xchg
arpl
rcrl
fcomps
push
jge
inc
inc
fs
daa
push
mov
push
insl
jo
mov
add
dec
ja
and
lock
jo
insb
jo
imul
jl
cmpsl
dec
push
popa
arpl
popf
or
aas
cs
push
xchg
push
mov
jecxz
pop
pop
fiaddl
data16
add
outsw
pop
mov
add
pop
fs
lods
sbb
xchg
gs
dec
push
or
insb
aaa
fmul
scas
nop
daa
push
bound
scas
gs
outsl
bound
add
mov
mov
ficoms
lahf
popa
pop
dec
arpl
fdivrs
cmp
inc
mov
jecxz
jae
push
icebp
ffreep
int3
push
mov
outsl
jp
insb
popa
xchg
push
xor
enter
xor
out
movsb
popa
mov
pusha
mov
push
push
jb
inc
daa
mov
out
push
and
jo
adc
rclb
sbb
xchg
lret
daa
nop
jbe
in
data16
ja
jge
cmovbe
xchg
fdivrl
aaa
in
inc
sbb
sbb
mov
fisubs
push
rol
ja
push
xchg
iret
bound
fs
pop
mov
push
and
aaa
mov
mov
lea
cltd
sahf
cli
aaa
insb
repz
inc
mov
mov
jbe
les
push
shll
outsl
movzwl
rcr
pop
fidivl
outsb
push
mov
rol
nop
pop
inc
pop
push
mov
jae
or
mov
mov
sti
adc
insb
ret
jo
mov
rcrb
dec
fs
pop
sbb
dec
jae
push
inc
fwait
mov
push
push
push
movsl
inc
pop
and
adc
cmpsb
ja
xor
loop
notb
dec
bound
pop
inc
xchg
mov
imul
sbb
xchg
lret
iret
frstor
push
mov
addl
out
mov
in
push
pop
mov
xlat
hlt
jecxz
outsb
fisubs
fs
dec
shrb
aaa
push
outsl
pop
mov
sti
das
aam
insl
das
aad
push
push
dec
mov
pop
cmpsb
jnp
mov
cmpsb
mov
inc
push
ucomiss
or
dec
outsl
outsl
imul
xchg
push
movsb
outsb
jge
pop
cmp
xchg
mov
les
iret
fiadds
mov
fbstp
mov
sbb
add
mov
mov
outsl
mov
xor
jae
gs
sub
ljmp
mov
mov
sbb
call
loopne
pop
inc
dec
fwait
dec
jb
icebp
or
push
ret
test
shl
movswl
das
ds
sub
jne
faddl
and
out
adc
push
inc
ljmp
paddw
xor
and
jle
jbe
mov
andb
int3
sbb
or
push
fs
scas
test
ret
shll
adc
sahf
push
jle
adc
arpl
out
and
popa
sbb
jno
mov
sbb
sti
std
jb
jg
inc
out
xchg
push
jae
add
mov
lea
mov
add
add
xor
jne
fwait
test
dec
xor
mov
mov
push
pop
sub
or
and
or
mov
scas
aaa
add
and
into
out
movsb
daa
push
or
addl
sub
pop
dec
dec
dec
cmp
push
jae
test
push
and
roll
jae
sub
mov
inc
jns
or
and
jge
push
outsb
push
xor
imul
pop
inc
dec
dec
mov
sbb
icebp
jne
mov
jno
stos
popf
inc
sub
testl
out
add
jb
pop
insl
and
dec
pop
xor
out
xor
add
das
rclb
push
outsl
xor
cmp
xor
scas
adc
outsl
jbe
call
cmp
rorb
outsb
and
or
jo
adc
push
push
sub
mov
jecxz
jnp
insl
mov
iret
push
sub
outsl
cmp
sbb
inc
inc
push
push
inc
ret
lock
clc
and
jae
and
xor
push
jo
push
gs
pop
sbbl
pop
jecxz
gs
insl
dec
or
test
xor
add
add
outsl
add
je
aad
and
loopne
adcl
rcrl
filds
inc
sbb
fnstsw
or
test
repz
insl
and
and
adc
pop
and
inc
dec
jae
shrb
ss
bound
add
inc
inc
sub
sub
sbb
xor
jl
pop
stos
and
pop
popf
fs
jns
jl
daa
aas
fisttpll
sub
jo
sub
push
and
add
xchg
xchg
jge
pop
fldln2
lret
shll
sub
push
dec
inc
adc
push
push
or
add
loop
ljmp
or
adc
cld
or
in
rorb
int3
shll
lods
add
and
push
subl
shlb
rsqrtps
and
xchg
mov
pop
test
dec
shrd
fs
and
and
cmp
mov
js
andb
repz
mov
mov
mov
arpl
pusha
dec
dec
cmp
rcl
sbb
clc
aaa
or
xchg
mov
outsl
arpl
loope
add
insb
in
inc
inc
pusha
inc
cmc
ss
inc
cmp
inc
xchg
cmp
frstor
out
jbe
mov
ret
cld
jns
push
cltd
or
pop
andb
cmp
out
mov
and
mov
arpl
in
pusha
inc
cs
insl
mov
shlb
stos
lds
mov
push
test
push
ret
pop
popl
and
test
sub
or
enter
jbe
loopne
pop
and
inc
mov
test
push
pop
fcmove
adcl
faddl
push
pop
cmp
inc
test
andb
mov
inc
popa
mov
jb
sbb
jg
filds
lods
fadd
xchg
add
ret
or
and
shl
pop
add
test
adc
popa
hlt
xor
jle
popa
insb
sarb
in
mov
imul
rcr
lret
es
or
cwtl
dec
daa
jo
mov
incl
nop
mov
xor
das
in
cmp
adc
in
pop
cmp
mov
inc
adc
es
xor
pop
mov
sbb
xchg
push
pop
pushf
add
shr
pop
push
and
or
icebp
jmp
push
push
mov
mov
pop
add
loope
jns
push
inc
imul
ljmp
int
lea
pop
addr16
lds
sub
ljmp
faddl
dec
arpl
stos
lea
jne
xchg
lods
cmpsl
and
adc
add
test
pop
arpl
jo
push
dec
push
dec
das
outsb
fstps
and
in
adc
es
xor
mov
ja
rcr
cmp
xor
jb
aaa
add
inc
test
aaa
pop
push
insb
imul
outsl
addr16
in
test
xor
and
xor
mov
xor
fstps
xchg
sbb
icebp
lock
mov
cmp
cs
ret
scas
cmp
xor
cli
add
jae
into
mov
mov
fcompl
or
add
push
xchg
lods
lea
adc
jecxz
xor
test
sarl
imul
insl
cld
or
popa
js
jbe
jae
sbb
xchg
daa
sbb
cmp
cmpsb
cmp
fs
push
pushf
mov
stos
stos
je
daa
push
imul
jge
popa
movsb
xor
je
outsb
xchg
rolb
mov
insb
daa
pop
xchg
mov
and
add
daa
ret
lock
xor
daa
jb
adc
push
andl
mov
lods
inc
insb
movsl
rorb
out
cmp
dec
jmp
sbb
es
mov
and
mov
pop
xchg
dec
mov
add
push
jne
cli
and
enter
sbb
and
mov
int
lock
xchg
sub
test
jge
mov
mov
cmp
test
adc
insw
xchg
or
daa
cmp
push
sub
ret
iret
pop
dec
or
mov
jmp
jno
sbb
bound
mov
sbb
xlat
mov
inc
adc
xor
sub
mov
pop
outsl
test
pop
cmp
sub
or
xchg
xorb
or
loopne
jae
pop
inc
or
lea
add
shrb
jo
movl
sbb
or
cmp
out
insb
orl
mov
mov
push
sbb
ljmp
mov
sbb
push
adc
mov
leave
fldcw
sub
ret
rorb
jb
cwtl
and
iret
inc
inc
nop
add
cmp
jmp
add
loopne
pushf
xor
mov
and
insl
push
scas
sub
popf
mov
mov
jae
pusha
jno
int3
stos
outsl
xlat
roll
xchg
insl
aam
ds
sbb
mov
aas
pusha
mov
push
jne
inc
dec
push
mov
xchg
push
dec
sbb
mov
xchg
pop
bound
push
pop
jecxz
jo
mov
arpl
icebp
sbb
or
fbld
sub
lock
jo
loope
pusha
mov
aas
clc
shrl
mov
push
dec
dec
add
lahf
mov
scas
push
shrb
cmovl
mulb
mov
dec
pop
push
inc
push
xchg
rclb
or
cmpsb
imul
pop
xor
inc
add
sbb
dec
shll
clc
sbb
fmul
mov
xor
xchg
mov
shll
xor
cmpsb
imul
cmpsb
imul
cmpsb
imul
push
add
add
pop
cmp
bound
jb
mov
sbb
ja
inc
xor
xor
xor
xor
inc
jne
fcom
sbb
mov
xchg
pop
sbb
rcr
int3
push
popw
stc
jle
notb
pop
push
bound
insb
int3
into
xor
imul
pop
je
filds
cmp
orl
push
inc
test
jae
jbe
rol
xchg
mov
xchg
fistps
or
and
pop
je
jae
push
nop
icebp
xor
adc
sti
aam
mov
lods
xor
pop
arpl
clc
decl
jge
imul
sbb
insb
jae
pop
or
adc
jbe
mov
sbb
mov
subl
adc
insb
js
push
sti
fcmovnbe
mov
pop
inc
jle
addr16
cmp
pusha
insl
pop
iret
in
ljmp
cmp
bound
push
xlat
push
dec
inc
aas
fsubs
ret
aas
mov
add
dec
test
mov
add
or
dec
mov
lcall
inc
enter
das
sub
xor
inc
enter
xchg
or
or
sub
and
adc
test
lcall
shr
xchg
and
sbb
cs
mov
das
adc
test
and
pop
inc
enter
cs
or
and
sbb
and
fimull
out
xor
out
nop
and
inc
and
inc
xchg
pusha
enter
and
nopl
push
pop
and
nop
and
and
sbb
and
dec
sub
pop
es
inc
insb
sub
adc
test
or
inc
aas
daa
inc
enter
jle
shrb
sub
xchg
or
inc
and
inc
xchg
and
sub
sub
xchg
aas
or
inc
daa
pusha
inc
xchg
push
sbb
sub
xchg
or
and
sbb
nop
pop
sub
sub
sbb
das
pop
xchg
daa
or
inc
pusha
jle
xchg
adc
push
aad
push
das
and
fimull
or
iret
ja,pn
xchg
and
inc
and
pop
enter
and
xor
stos
mov
sbb
and
cmp
and
dec
dec
push
or
sbb
and
dec
dec
inc
dec
pop
cs
push
inc
push
jmp
das
cmp
adc
lret
and
test
pop
imul
cs
das
xchg
pop
orl
pusha
adcb
sbbb
add
push
or
pop
das
popf
xor
pop
nop
and
sbbb
aad
add
mov
dec
push
dec
push
inc
das
push
sarb
cs
dec
adc
enter
pop
rcrl
pop
xor
dec
inc
pusha
pop
and
insb
pop
jle
das
xor
or
push
scas
das
push
add
sbb
ds
sbb
jns
insb
mov
pop
add
fiaddl
orl
inc
dec
dec
adc
push
das
pop
ljmp
outsl
imul
das
cmpb
dec
push
push
push
inc
push
dec
push
push
dec
add
mov
inc
dec
push
out
in
inc
inc
fs
add
pusha
lret
adc
into
popa
std
push
arpl
xor
and
and
sbb
icebp
das
adc
push
push
sbb
roll
sbb
xor
pop
adc
incl
add
ret
add
or
inc
pop
call
dec
scas
jg
sahf
inc
adc
sbb
incl
cwtl
or
xchg
mov
test
fildl
pop
dec
lea
out
std
dec
push
pop
mov
int3
mov
clc
mov
pop
mov
int3
mov
icebp
jmp
in
ja
fwait
push
jnp
push
dec
lods
or
inc
xchg
push
or
mov
stc
insl
or
andps
outsl
dec
jg
std
push
push
xorl
pop
pop
lea
adc
cmpsl
incl
gs
insb
xchg
dec
push
mov
inc
mov
jmp
xchg
loope
lods
aas
pop
loope
gs
lods
fcmovne
dec
fistpll
mov
aas
lods
cmp
pop
roll
push
mov
fdivl
pushf
push
or
movsl
xor
inc
pop
leave
pop
imul
fstps
insl
cld
call
mov
arpl
cwtl
stos
loop
sub
pushf
inc
mov
inc
dec
mov
mov
mov
fwait
test
adc
jle
iret
inc
jo
cmpsl
js
call
fwait
je
rorl
lahf
mov
lock
xchg
mov
pop
jnp
insl
push
insb
push
pusha
pop
xlat
xor
mov
or
inc
cmp
cmpsb
imul
into
sub
add
xor
add
lock
in
fcom
xor
rcl
les
dec
mov
test
cwtl
nop
xor
shll
jl
fs
shll
cmp
imul
or
add
clc
xor
xor
roll
loopne
aam
les
xor
mov
mov
jo
pusha
shll
inc
inc
imul
and
imul
fdivl
int
hlt
in
xor
in
push
xor
imul
mov
shll
movsb
push
pushf
nop
lcall
push
cmpsb
imul
out
dec
sub
xor
add
xor
aam
xor
enter
cs
clc
dec
shll
mov
xor
jo
pusha
pop
icebp
xchg
push
dec
inc
xor
xor
push
incb
lcall
inc
data16
push
scas
test
add
or
cmpsl
push
and
push
add
pop
jo
push
mov
bound
js
push
jae
adc
sbb
pop
inc
cltd
lea
cmc
or
arpl
mov
test
mov
or
mov
adc
jg
bound
xor
xor
push
add
mov
lods
or
fcom
popw
bound
push
add
pusha
push
pop
pop
pop
push
dec
push
out
push
mov
lock
insb
jne
bound
mov
jne
xor
insl
es
aaa
dec
cwtl
test
test
les
adc
pop
dec
loopne
in
adc
movq
sub
adc
push
xor
movsb
xchg
outsb
pop
dec
jne
adc
cmpsb
push
xchg
pop
fs
pop
out
outsl
push
ljmp
cmp
xchg
sub
incl
outsl
bound
jno
jp
in
push
xor
dec
mov
cmp
mov
mov
aam
imul
cmp
adc
fisubl
test
adc
insb
and
push
jae
sbb
mov
jb
add
sbb
insb
in
or
cmp
insb
pop
jb
push
ret
outsb
jne
and
mov
and
iret
jnp
mov
mov
mov
outsb
aas
sub
push
xlat
inc
push
sbb
push
xor
xor
in
pop
popf
xor
xor
xor
das
mov
rolb
nopl
mov
mov
aas
push
sbb
jle
subl
mov
lahf
push
xchg
sbb
pop
xor
xor
outsl
ljmp
sarl
fmuls
ret
inc
iret
sahf
in
pop
aaa
xor
fsubrl
jne
movsb
pop
or
loop
and
sub
mov
sarb
pop
mov
aaa
jno
frstor
js
push
sbb
add
fisubrl
push
loop
outsl
push
dec
jmp
mov
fwait
pusha
mov
mov
pusha
or
mov
outsb
push
mov
inc
push
das
inc
push
and
inc
mov
push
dec
sahf
es
mov
inc
outsl
je
push
mov
insl
mov
int3
push
mov
test
push
sub
je
dec
dec
mov
xor
lods
cmp
fsubr
aaa
inc
cmp
inc
cmp
sti
xchg
ret
dec
dec
push
push
and
mov
add
push
dec
bound
dec
aaa
pop
or
push
das
nop
bound
inc
ret
and
dec
cmpsl
hlt
and
movsl
fists
dec
inc
inc
ss
lret
mov
adc
out
lahf
pop
dec
and
mov
pop
mov
cmpsb
push
push
and
jle
jmp
push
test
imul
popa
in
mov
sub
push
mov
orl
inc
les
lods
popa
pop
and
mov
dec
xchg
std
mov
clc
jecxz
push
dec
push
adc
dec
push
xor
sbb
adc
mov
xchg
mov
popl
add
mov
adc
add
cmpl
stos
xor
jg
sub
jno
das
xor
mov
dec
sub
out
dec
push
cwtl
push
push
xlat
pop
insl
inc
jg
pop
mov
pop
push
dec
xchg
inc
inc
arpl
xor
xchg
xor
pop
dec
dec
lret
mov
sbb
sub
lods
and
adc
or
and
dec
xor
inc
imul
jne
sbb
mov
xor
inc
pusha
mov
and
xor
xchg
mov
xor
mov
je
add
ss
mov
and
inc
out
fldt
lahf
imul
outsl
and
cmpsb
outsb
xchg
xorl
arpl
inc
jg
xor
inc
insl
sbb
sub
add
sub
and
data16
inc
mov
ss
push
and
sbb
xchg
cs
pusha
mov
fildll
fildll
xlat
nop
inc
push
mov
and
mov
loope
adc
mov
icebp
aas
mov
jno
pop
xor
cmp
inc
stos
aas
mov
lock
mov
dec
pop
push
sub
pop
or
adc
in
les
fldl
arpl
cmpsb
mov
and
jnp
cmp
shll
daa
fimull
dec
dec
test
aam
ss
mov
xor
and
adc
dec
enter
inc
jle
and
lods
popa
push
sbb
vphaddwd
sub
out
lds
push
outsb
bound
adcb
mov
mov
mov
dec
dec
ljmp
push
dec
push
sti
mov
adc
shl
mov
icebp
das
ror
subb
mov
and
inc
ret
movzwl
in
xchg
into
gs
andb
inc
cmp
andl
add
js
xchg
fcomp
push
popa
rcr
jno
xor
mov
mov
pop
ret
pop
outsl
jb
push
inc
xor
xchg
xchg
mov
scas
popa
aaa
adc
insl
jae
imul
jbe
aaa
inc
sbb
sbb
sub
call
sbb
pop
mov
jp
inc
dec
dec
dec
sub
insb
in
push
sbb
js
ja
adc
aas
jns
push
bound
aaa
das
inc
or
pop
mov
or
push
cmp
les
inc
lds
aaa
pop
daa
xor
mov
xchg
popa
xchg
aad
cmpl
inc
push
inc
xor
inc
pop
and
dec
jmp
sbb
loope
cmp
xchg
movsl
xor
mov
pusha
sub
mov
mov
inc
pop
xorb
addr16
dec
or
scas
pop
adc
insl
lods
add
or
or
mov
cmpsl
cmovo
or
jne
sub
and
xor
jecxz
add
and
movsl
cmp
cmc
push
and
sub
pusha
and
sub
in
mov
push
mov
arpl
mov
outsl
push
cwtl
ret
xorl
insb
pop
mov
or
jg
addl
dec
mov
addr16
outsl
leave
add
lds
iret
inc
add
mov
dec
mov
push
or
roll
push
dec
inc
mov
cmpsl
cltd
addr16
insl
inc
pop
inc
test
cmpsl
sbb
out
inc
and
cmc
inc
push
dec
dec
add
out
push
or
fmull
mov
xor
orb
popa
cmp
shll
faddl
mov
and
dec
mov
pop
add
testl
adc
push
mov
mov
pop
mov
gs
stos
pop
xor
dec
daa
pop
bound
xor
mov
fiaddl
in
fbld
arpl
add
cmpsl
mov
and
and
int3
pop
movsb
xchg
push
mov
sbb
ja
test
and
sbb
or
rolb
sub
push
add
out
inc
xchg
mov
bound
stos
stos
cmp
push
mov
cmp
adc
lret
dec
mov
ret
scas
jb
hlt
push
or
sbb
movsb
dec
mov
pop
push
inc
popa
orl
mov
sub
sub
iret
push
or
bound
or
shl
imul
mov
ja
mov
dec
and
sbb
fnsave
jb
mov
or
mov
or
jo
sbb
xchg
or
int3
or
dec
imul
gs
xchg
push
mov
inc
sub
aaa
rorb
xchg
jbe
arpl
jne
fs
jnp
or
popa
push
popa
fistps
insl
cmovle
adc
mov
scas
push
push
fs
add
lahf
test
jp
test
add
loope
jbe
lret
dec
or
ds
xchg
pop
jb
push
testb
jp
call
push
dec
pop
push
testl
outsb
mov
cli
ficoms
pop
push
jb
popa
ja
mov
cs
dec
or
mov
mov
rorb
xor
popa
pop
dec
or
mov
fisubrs
xlat
cs
push
insl
stc
adc
mov
push
xchg
sub
jg
sub
jno
shlb
arpl
or
lds
dec
mov
aaa
lods
in
insb
ret
jge
rolb
lret
inc
pusha
cmp
sub
jns
daa
pop
or
call
outsl
and
sbb
sbb
lds
jecxz
lods
push
lods
aaa
push
imul
test
arpl
lods
dec
add
cld
jge
pusha
mov
pushl
daa
fiadds
shll
insl
sub
stos
mov
adc
add
inc
out
mov
push
divb
cmpsb
aad
xchg
push
cmpsl
jg
in
push
pop
arpl
ds
mov
insl
imul
push
mov
xor
out
scas
xor
pop
fsubrl
push
in
jo
lret
jb
push
aaa
into
test
xchg
testl
gs
out
out
int
and
pop
jno
jne
jmp
sbb
push
sahf
sbb
cmp
stos
ja
out
out
pop
stos
push
or
or
notl
inc
mov
and
data16
or
scas
sbb
mov
xchg
arpl
sbb
cmp
sar
mov
arpl
xchg
cmp
sahf
and
das
shlb
ja
aas
push
push
aaa
add
cmp
lds
fsub
adc
mov
or
push
xchg
ret
push
loop
cs
pop
jo,pt
nop
dec
sarl
and
test
push
mov
cmp
jae
push
push
jae
inc
jbe
or
notb
mov
addr16
xor
cs
or
test
dec
sbb
das
loopne
jae
das
bound
das
call
mov
mov
sbb
mov
pop
xor
enter
mov
mov
mulb
xchg
movsl
pop
outsb
adc
cwtl
mov
dec
xchg
add
mov
fbstp
test
push
shrb
or
fwait
lock
inc
out
fmuls
or
cmp
mov
cmpsl
adc
mov
iret
push
outsl
jnp
adc
in
pop
aas
insb
mov
imul
mov
into
ss
push
outsb
push
aaa
or
mov
cmp
or
xor
orl
neg
test
pop
xchg
jae
jns
add
mov
push
sub
xor
inc
and
push
mov
ds
push
lods
out
sub
or
sub
sub
repz
add
aaa
popa
outsb
jl
stos
test
and
pop
and
jmp
and
sbb
mov
mov
pop
push
and
add
and
adc
mov
adc
pop
outsl
push
sbb
adc
xor
add
push
jbe
rcrl
or
pop
ss
xchg
xor
adc
add
xor
mov
push
xor
pop
dec
imul
add
and
and
inc
and
cmp
sbb
fsubl
mov
sahf
pop
pusha
mov
sub
mov
inc
mov
or
pop
mov
dec
sbb
aam
sbb
das
fst
pusha
pop
inc
das
fwait
dec
pop
aaa
roll
fidivs
pop
daa
add
sub
cmp
daa
fidivs
int
mov
xor
mov
and
xchg
mov
add
add
mov
xor
out
add
into
cmovae
int
cmp
dec
push
xor
lods
pop
pop
aas
and
or
xchg
pop
xchg
mov
rcrb
lock
inc
call
cmpsb
imul
pop
and
sbb
lahf
push
movsl
mov
xchg
ja
push
jmp
imul
adc
push
sub
aaa
shrb
mov
lea
cmp
xchg
adc
adc
in
leave
jae
and
leave
sub
jnp
outsl
pop
add
add
sbb
push
mov
shrl
jne
mov
imul
mov
movsl
sbb
pop
dec
xor
push
pop
sti
leave
cmp
ja
imul
push
addr16
outsb
sub
pop
add
imul
lods
cwtl
mov
mov
cmpsl
or
rclb
dec
jmp
lods
dec
sub
fldenv
ja
pushl
xor
insl
mov
add
cmpsl
mov
pop
pop
mov
add
shll
adc
movsb
mov
add
mov
adcl
nop
or
outsl
outsl
adcb
dec
pop
xorl
mov
adc
mov
inc
mov
cmc
cmp
pusha
and
jmp
arpl
inc
subb
pop
dec
icebp
out
jmp
pop
jmp
xor
test
pop
mov
add
add
add
outsb
aaa
mov
sub
jg
sub
mov
loop
inc
or
gs
xlat
loop
sbb
jmp
call
test
sbb
xorb
inc
loop
das
mov
or
clc
arpl
add
js
fucomip
and
jo
lods
or
xor
inc
jl
inc
cmp
rolb
mov
pushl
lret
js
inc
and
pop
jg
lock
push
push
and
adc
jne
mov
adc
inc
pop
sbbb
ret
rolb
je
sti
xlat
add
add
push
mov
stc
call
roll
sbb
pushf
and
or
mov
ret
call
add
dec
ret
pop
pop
pop
push
sub
pop
xchg
push
nop
aaa
mov
decl
inc
stos
push
push
push
push
push
mov
clc
or
jmp
push
test
ret
dec
or
sbb
sti
test
arpl
push
inc
cmp
daa
pusha
inc
ret
sub
adc
add
test
ss
std
xchg
mov
xchg
rclb
push
and
insl
les
movsb
xchg
cli
das
outsb
test
loope
repz
or
subb
test
push
or
adc
inc
adc
push
daa
pop
push
les
inc
dec
push
pop
inc
push
push
sbb
ss
dec
dec
jp
and
or
inc
lods
cmp
cmp
push
imulb
cmpb
cmp
in
xor
dec
mov
sub
mov
sub
dec
ret
pop
nopl
mov
push
inc
dec
repnz
call
push
imul
sbb
fs
mov
mov
sbbb
cmp
add
lods
xor
jmp
mov
inc
pop
andb
lahf
cli
jb
insl
mov
dec
das
aas
jp
pushf
dec
or
and
or
sub
inc
bswap
sbbb
pusha
or
int
int
xorb
test
add
pop
adc
lea
les
fwait
mov
iret
mov
add
int
push
push
pop
addr16
movsl
and
inc
icebp
and
je
sub
sub
cli
lds
add
inc
sub
addb
mov
sub
repnz
mov
rcll
dec
add
push
insl
cmp
adc
dec
and
test
add
xchg
movsl
jns
xchg
and
mull
add
std
cmp
das
popf
push
jle
icebp
xchg
adc
add
icebp
notl
or
adc
in
in
notl
cwtl
bswap
icebp
cwtl
or
mov
add
sti
sti
add
lea
inc
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
lock
xorl
out
movsb
adc
test
movsl
mov
insl
sar
std
pop
fnstsw
movsb
adc
mov
adc
int
pop
jle
leave
enter
pop
out
test
data16
jg
xchg
lcall
fsubl
lcall
insb
stos
push
call
fdivs
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
xchg
idiv
adc
fwait
push
xor
rcrb
ljmp
add
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
ja
loopne
lock
insb
xor
pusha
xor
jle
pop
loopne
nop
xchg
jb
add
out
mov
or
in
xchg
push
leave
xchg
add
pushf
shlb
popf
dec
mov
iret
jae
insl
popa
xchg
mov
out
pop
popf
iret
mov
outsl
or
push
or
inc
sbb
or
scas
bswap
jns
lret
in
pop
orb
jge
mov
negb
insl
es
sbb
cli
cmc
imul
mov
cltd
cld
adc
outsl
lods
test
push
dec
inc
jb
push
enter
test
cmp
push
inc
les
imul
sbb
and
das
mov
sbb
fwait
jle
xchg
xchg
aam
sbb
dec
dec
inc
lret
ret
aam
xor
xor
xor
sarl
xchg
xor
add
bnd
adc
or
inc
ja
inc
clc
add
or
aam
das
dec
mov
subb
jns
idiv
push
in
xchg
orb
add
adc
mulb
flds
jae
fwait
add
sbb
jnp
idivb
add
add
cmp
ficoml
and
popa
xchg
dec
push
push
lahf
add
inc
jne
insb
inc
fimuls
inc
push
add
adc
pop
gs
ds
add
sbbl
and
in
sbb
scas
xor
ret
pop
fstl
push
add
inc
lods
pop
cmp
mov
pop
ret
push
ss
into
add
push
out
xor
enter
aas
add
mov
or
add
add
add
dec
enter
dec
lahf
add
cmp
ss
adcl
testb
mov
sbb
mov
in
fisubrl
mov
add
fwait
loopne
imul
xchg
inc
lret
inc
cmp
dec
mov
jg
push
sbb
or
rclb
fwait
test
rorb
cmc
add
xchg
pop
sub
hlt
pusha
cmp
xchg
jl
or
or
or
cmp
addb
or
orb
cld
add
add
add
xchg
adc
lahf
dec
roll
idivl
dec
orb
sbb
inc
mov
js
adc
stos
pop
cmpsb
jmp
iret
adc
das
decb
test
incl
or
adc
sub
cmpsb
xchg
mov
jns
and
adc
sbb
jo
seto
jns
test
xchg
ltr
jo
insb
lmsw
sbb
lcall
rorb
mov
scas
stos
test
push
inc
iret
pop
add
clc
push
jno
inc
jae
pop
and
push
jp
push
rcrl
jns
add
ja
imul
push
js
sbb
xchg
add
das
mov
dec
arpl
push
xor
pushf
icebp
jbe
add
and
xchg
add
sbb
add
push
lds
outsl
sub
sbb
daa
cmp
add
and
daa
xorb
xor
loopne
jbe
jl
or
stos
fwait
or
loopne
sub
test
fmull
jmp
add
imul
sbb
jmp
stc
out
mov
jae
and
jo
ss
hlt
cs
cmpsb
dec
aaa
lock
push
and
sub
cmp
push
outsw
inc
insb
add
xor
sub
dec
add
enter
test
adc
orb
orb
addb
les
push
stos
stos
sbb
fs
push
adc
clc
add
inc
movlhps
add
add
add
lcall
or
or
aaa
or
xchg
imul
daa
adc
in
imul
pop
adc
or
inc
scas
ss
fdivs
xorps
pop
imull
push
and
imul
popa
inc
xor
aas
xor
xor
addl
rcrb
xchg
cmpsl
mov
into
aas
xlat
dec
cmp
or
sbb
loopne
add
adc
adc
aaa
add
mov
pop
adc
daa
xchg
jbe
movsb
add
jns
lahf
lahf
mov
pop
movsl
sbbl
subb
mov
or
cmovo
sbb
mov
sbb
in
call
jnp
jle
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jae
jle
out
ficompl
push
sbb
fs
lea
mov
fs
nop
fs
push
fs
xchg
xchg
arpl
mov
cmpb
sbbl
pop
add
repz
mov
or
shll
jl
shll
cld
mov
cmpsb
imul
cmpsb
imul
shll
in
aam
shll
add
mov
xchg
add
xor
dec
or
add
js
or
jg
jo
pop
mov
push
xor
push
inc
jg
ja
xor
mov
jns
insl
add
push
push
cmp
pop
xor
shll
xchg
mov
repz
dec
insl
add
dec
shll
mov
push
adc
das
dec
insb
leave
imul
inc
pop
enter
daa
jns
or
or
ret
ja
hlt
adc
aas
jmp
mov
leave
sbb
into
sbb
rorl
and
lcall
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
lcall
inc
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
jmp
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
call
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
call
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
jle
pusha
les
add
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
incl
mov
addr16
push
mov
xchg
aas
and
loop
mov
sbb
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
out
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
incl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
and
and
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
or
fs
push
mov
xchg
fistl
in
xchg
lods
jmp
push
mov
std
cwtl
addr16
popa
jb
sarb
nop
add
inc
jb
fisttpll
add
pop
dec
add
mov
jno
dec
mov
loopne
add
lret
and
fs
and
jnp
inc
pop
xchg
push
pop
xchg
sub
je
push
outsb
ja
xor
jbe
dec
mov
add
cmp
inc
in
insl
mov
sub
sbbb
and
adc
inc
add
mov
or
jmp
or
add
enter
or
cwtl
inc
jecxz
add
dec
or
and
stos
dec
adc
sub
mov
sub
dec
mov
xchg
add
push
adc
add
push
mov
mov
xchg
dec
outsl
clc
push
or
jb
inc
sub
js
insb
outsl
push
imul
pusha
test
dec
add
xchg
gs
mov
out
ret
call
push
imul
sti
cmp
add
mov
and
inc
xchg
and
sbb
mov
sbb
inc
imul
dec
outsb
fisttpl
mov
pop
inc
mov
mov
add
fiaddl
mov
outsb
mov
push
push
out
clc
mov
mov
fbld
daa
push
jo
imul
add
fnstenv
jo
rcr
xchg
and
lods
push
shll
imul
xchg
gs
adc
addl
xchg
add
lret
imul
pop
mov
and
jnp
loope
scas
insb
jae
arpl
cmp
xchg
add
mov
outsl
dec
fs
jo
adc
sub
ds
popa
push
xchg
push
xchg
xchg
add
and
dec
cld
js
mov
pop
adc
or
frstor
pusha
add
negl
je
mov
xlat
dec
dec
mov
push
mov
inc
and
mov
add
lds
pop
data16
cmp
push
cmp
cmp
aaa
dec
fbstp
adc
mov
inc
add
sbb
sbbl
outsb
rolb
arpl
adc
pop
sbbb
xor
add
shll
rolb
cmp
sbb
inc
je
adc
pushl
mov
fsts
adc
mov
dec
adc
push
outsl
imul
ljmp
fchs
sub
cmp
mov
out
jg
andb
add
jae
mov
lret
pop
adc
aad
mov
adc
xchg
push
adc
add
outsl
cmpsl
ds
add
sub
cmp
jp
adc
or
push
adc
adc
push
adc
mov
ja
inc
push
mov
fildl
sti
prefetchnta
jnp
fiaddl
cmp
adc
adc
repnz
dec
popa
push
rcll
les
cs
shll
sub
mov
loopne
mov
and
jb
jns
add
add
mov
mov
cs
cmp
push
ds
add
out
xchg
and
pop
data16
add
add
dec
incl
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
