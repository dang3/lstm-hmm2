cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
pop
push
push
mov
pop
inc
and
sbb
add
sahf
pop
push
add
add
dec
adc
push
mov
movsb
mov
xorb
fwait
inc
and
jne
sti
stos
pop
fwait
mov
adc
pop
xor
fidivrl
es
push
and
lea
dec
cld
rolb
in
ret
insl
dec
pop
iret
test
jge
push
lods
aas
iret
out
leave
inc
xorb
dec
mov
fs
mov
lods
call
pop
push
and
mov
push
push
mov
pop
mov
sahf
dec
pop
jecxz
inc
add
adc
lcall
xor
ret
rclb
cli
movsl
mov
shl
add
mov
cmp
mov
enter
add
subl
jb
dec
orb
pop
adc
sbb
jo
jbe
int
mov
mov
adc
jo
xor
mov
insl
cmc
jmp
cmpsb
jle
enter
mov
dec
adc
std
push
int
inc
cwtl
mov
inc
adc
scas
fiaddl
or
daa
adc
pop
dec
or
mov
jle
mov
pop
int3
jle
and
mov
repnz
into
mov
hlt
add
xor
push
sub
add
jmp
cld
or
inc
imul
jbe
and
dec
fsin
insb
jge
shl
push
divb
popa
scas
lods
mov
push
jmp
xlat
out
pop
mov
es
test
cld
sub
sbb
sub
sub
vsubss
dec
out
pop
sub
fisubrs
jp
and
in
leave
insb
and
push
adc
push
shlb
or
je
sub
sarb
jmp
int
dec
aam
fldcw
sbb
jno
jle
xchg
ficomps
jg
pop
sahf
ljmp
loop
fwait
lea
iret
fnstsw
jnp
jmp
push
push
dec
nop
dec
inc
cmc
clc
cmp
mov
mov
dec
inc
aas
repz
push
mov
inc
xchg
adc
pop
mov
jecxz
ret
leave
movl
mov
mov
fiaddl
mov
cmpsb
int3
mov
pushf
jbe
add
stos
mov
aaa
mov
dec
pop
mov
xor
jne
sahf
jge
aam
inc
lods
pop
pop
xchg
in
cmp
js
add
bound
xor
add
stos
pop
add
add
pop
mul
push
xchg
shlb
push
add
mov
test
cmp
jle
add
out
or
jl
rcr
mov
or
es
jmp
mov
adc
movsb
enter
rclb
dec
jp
scas
add
stos
loopne
sub
sbb
clc
clc
xor
bound
ds
cmp
xor
xchg
test
sub
test
mov
add
mov
imul
fsubs
cwtl
rcll
pop
mov
cmc
add
sub
sbb
dec
jmp
or
or
jl
gs
push
lods
xchg
sub
adc
push
mov
fildll
fs
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
adc
leave
call
mov
and
pop
sub
clc
mov
pop
mov
fdivs
dec
adc
pop
cli
mov
pop
push
mov
les
testb
fwait
lahf
lds
popa
add
imul
add
add
mov
pop
dec
sbb
mov
dec
xor
cmp
cmp
pop
xor
shll
xor
ja
repz
sub
mov
add
pop
popf
in
nop
mov
imul
mov
xchg
adc
xchg
sbb
cmp
xchg
test
cmp
xchg
add
xor
xchg
int
xor
jb
loopne
or
mov
repnz
jecxz
pushf
sahf
xchg
fwait
push
in
mov
sbb
add
or
inc
test
sub
aam
xor
adc
jp
mov
rcrb
movsb
inc
add
xchg
cltd
out
xchg
fimull
mov
and
jae
cwtl
push
push
cmp
mov
je
cmp
imul
test
mov
ret
fs
mov
mov
cmp
into
fwait
lahf
sahf
je
popf
mov
cmp
jp
add
in
push
mov
cltd
inc
arpl
mov
mov
notl
add
inc
cli
cmpsl
sub
lret
mov
stc
mov
xchg
mov
popf
lret
mov
sbb
leave
pop
dec
int
xchg
sbb
xchg
out
xchg
or
or
sub
lods
jle
mov
fidivs
test
loop
xchg
loop
iret
sub
imul
mov
lret
in
cmp
mov
out
dec
aam
inc
fbstp
push
adc
mov
xchg
pop
xchg
fwait
ljmp
inc
js
xor
bound
cmpb
je
test
ljmp
jne
dec
adc
jb
mov
pop
push
mov
pop
jecxz
in
mov
loopne
pop
daa
into
xchg
jecxz
mov
iret
sbb
mov
cltd
addb
mov
xchg
in
xlat
in
sbb
jg
lds
xchg
sub
adc
js
in
test
pop
and
pop
dec
push
dec
push
dec
mov
pop
std
in
jmp
fmul
pop
inc
mov
dec
adc
lcall
mov
mov
add
xchg
sbb
lds
mov
out
sub
out
dec
js
shr
or
dec
xchg
add
cwtl
rorl
sub
mov
movsb
pop
jae
xchg
inc
fstl
jmp
loopne
sti
sub
cmpsl
sti
mov
or
leave
ds
out
cmpb
xchg
sub
test
adc
mov
xor
aaa
mov
imul
jecxz
cmp
dec
lahf
lds
add
mov
jecxz
pop
loop
inc
sbb
sahf
test
ret
test
nop
push
divb
xchg
leave
sbb
push
xchg
xchg
pop
mov
mov
xchg
jmp
cmpsb
aaa
in
std
in
mov
pop
sub
les
xchg
rcll
ljmp
out
sbb
add
xor
pop
fs
lods
xor
lea
leave
in
mov
cli
jnp
inc
mov
pop
jns
adc
mov
mov
mov
sbb
mov
add
loope
cmp
mov
fwait
adc
clc
xor
enter
rcll
dec
or
in
dec
xlat
or
cltd
sahf
ret
imul
ljmp
pop
loopne
std
icebp
push
inc
sahf
shll
jp
aas
in
mov
add
pop
add
leave
cmp
lock
cmpsl
push
sarb
imul
mov
pop
movsb
fisubl
jge
popa
sub
popf
inc
loop
jae
sbb
mov
push
jl
sbb
sub
or
stos
jge
dec
fadd
push
cld
adc
mov
jbe
jb
lods
rcrl
mov
push
pushf
rorb
mov
pop
jo
cmpsl
xchg
les
loope
inc
or
cmovbe
mov
add
jge
xchg
sub
mov
push
or
inc
rorb
xchg
xchg
cltd
inc
lahf
push
pushf
pop
test
repz
mov
inc
inc
mov
add
xchg
xchg
fwait
cmp
das
in
cmc
mov
leave
dec
psrld
push
jne
pop
push
cmp
outsl
inc
mov
mov
call
jmp
jnp
mov
adc
ss
jae
divb
cwtl
lret
inc
sub
rcrb
cli
fnsave
aad
aaa
mov
inc
sbb
pop
sub
sahf
popf
in
xchg
push
cmpsl
insl
shll
ljmp
sbb
cmp
xchg
test
cmp
xchg
add
repnz
sub
scas
xchg
lcall
inc
or
cmp
mov
popf
sahf
xchg
fwait
inc
repnz
jg
sbb
dec
xchg
cwtl
add
cmp
movsb
rcr
mov
out
data16
mov
test
in
xchg
jmp
ret
push
adc
xchg
std
bound
sti
sti
and
in
sbb
inc
mov
pop
mov
sbb
dec
adc
pop
js
dec
sbbb
push
mov
les
cmpsb
mov
arpl
inc
lret
xchg
sti
daa
sbb
sbb
mov
inc
cmp
add
std
fmuls
adc
lret
repz
inc
gs
sbb
jecxz
sbb
incl
push
test
cwtl
mov
aaa
stos
xchg
mov
das
lahf
popf
stos
mov
jae
cli
jo
mov
out
mov
nop
pop
mov
add
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
mov
dec
inc
sbb
scas
popa
fwait
inc
in
jg,pt
adc
inc
xchg
cwtl
add
pop
adc
and
mov
stc
mov
dec
mov
jae
xchg
cmpsb
lret
jmp
jno
sub
sti
sub
cmpsl
sti
xor
popa
ret
repz
jle
mov
pushf
test
imul
mov
sbbl
jle
addl
call
imul
fucomip
hlt
cmp
fists
iret
int3
lahf
aaa
hlt
add
mov
sbb
jg
ret
inc
sub
int
xor
dec
xchg
jo
push
cmp
jne
les
mov
sub
cmc
sbb
std
fistpll
arpl
lds
mov
les
xchg
fisttpl
sahf
sub
adc
add
sub
mov
sub
mov
lcall
incl
enter
adc
dec
icebp
sub
mov
adcl
dec
cmp
dec
pop
popf
out
loope
fwait
xor
jl
sub
cmpsb
fidivl
test
insl
fwait
out
cltd
sbb
adc
mov
jmp
lret
gs
movsb
dec
out
sub
sbb
jb
push
fidivl
dec
adc
pop
clc
mov
pop
push
mov
les
mov
ret
arpl
inc
out
jae
adc
or
mov
cltd
addb
mov
test
scas
add
divb
adc
cwtl
pusha
sahf
and
ja
xchg
cld
mov
pop
icebp
sub
xchg
jmp
pop
aaa
mov
mov
ret
pop
sbb
test
roll
in
dec
or
push
stos
rcrb
jne
inc
pop
mov
mov
mov
sbb
lods
inc
pop
lcall
mov
es
scas
inc
fdivl
mov
arpl
rcll
pop
in
mov
jns
dec
mov
in
mov
jnp
inc
push
mov
xchg
sbb
shlb
stos
cmp
jb
pop
mov
mov
shlb
hlt
fldl
jle
lcall
or
sub
mov
rol
pushf
push
sahf
dec
movsb
adc
fsts
jmp
pop
mov
loopne
pop
daa
setae
jecxz
std
daa
cld
divl
out
mov
inc
cmp
add
std
sbb
adc
mov
fs
out
mov
dec
sbb
xlat
or
shrl
leave
test
insl
sahf
popf
mov
mov
mov
or
bound
sbb
stos
xchg
sbb
test
sub
fistl
cs
lods
jge
shrl
cmpsl
push
test
jmp
push
enter
mov
rclb
andl
loopnew
test
and
and
inc
add
mov
call
xchg
cltd
test
cmpsb
jnp
call
fldt
add
xchg
or
lea
fdivp
lret
sbb
add
outsb
mov
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
jecxz
mov
lds
adc
mov
mov
sbb
leave
js
lret
movsl
ret
insb
test
sahf
sbb
test
push
in
xor
xor
pushf
lds
arpl
jo
test
jl
sbb
mov
push
outsb
les
push
mov
xor
add
jnp
xchg
sub
push
mov
iret
js
mov
jecxz
pushf
repnz
or
fwait
add
shlb
or
push
or
lret
dec
testb
fsubs
xchg
imul
arpl
fdivs
mov
xchg
pusha
cltd
enter
rcll
dec
or
loopne
dec
pop
mov
shr
and
pop
push
adc
adc
stc
loop
mov
pop
loopne
in
mov
mov
mov
mov
lock
loop
cmp
mov
xchg
ljmp
sbb
iret
jbe
xchg
adc
mov
sbb
test
dec
sub
push
lahf
push
lret
aaa
insl
dec
stc
mov
xchg
xchg
push
scas
icebp
add
inc
dec
retw
pop
mov
inc
scas
ja
add
push
ja
lds
ljmp
sbb
loope
dec
mov
mov
push
jmp
lahf
adc
pusha
adc
dec
fs
adc
inc
mov
fdivs
sub
or
add
xchg
cwtl
and
pushf
xchg
test
push
xchg
adc
fs
xchg
and
mov
cltd
in
cmovae
fnstcw
mov
mov
cwtl
push
andb
sub
sub
mov
push
dec
mov
repz
addb
pop
loopne
call
rclb
mov
jecxz
pop
mov
jp
add
loopne
push
jno
sbb
mov
cltd
inc
arpl
mov
mov
testl
dec
test
push
in
dec
pop
dec
je
dec
stc
loope
push
lret
into
xchg
adc
insb
inc
mov
cmp
xchg
add
jo
push
mov
cltd
stos
inc
xchg
fsts
mov
sub
xchg
mov
jecxz
pushf
sahf
xchg
fwait
inc
repz
or
jo
mov
pop
jb
movzbl
nop
inc
pop
adc
sub
mov
out
loope
fwait
xor
insb
push
sub
and
and
cmpsb
sahf
mov
cmp
fnsave
bound
fldcw
add
xchg
dec
push
or
cmpb
or
cmp
or
pop
hlt
ss
mov
into
xchg
jecxz
add
pop
iret
adc
mov
cltd
xor
std
pop
inc
pop
adc
mov
fs
out
push
jecxz
cli
push
dec
sbb
cwtl
shrl
leave
test
adc
pop
popf
scas
mov
jae
ljmp
sbb
cmp
stos
xchg
or
inc
mov
movsl
sbb
jecxz
mov
xchg
sbb
or
xor
iret
jno
pusha
mov
scas
mov
lahf
fists
fcmovne
pop
jle
shrl
pop
repnz
sbb
dec
shrl
xchg
pop
pop
lahf
stc
repnz
movsl
ret
inc
mov
pop
mov
pop
jae
gs
fcmovu
sti
sti
and
mov
stos
inc
mov
pop
mov
xchg
inc
xlat
mov
sub
test
fninit
test
push
push
popa
pop
mov
aam
sti
stos
mov
jnp
mov
out
jnp
mov
adc
sub
ret
adc
lcall
iret
negw
sbb
or
dec
push
lahf
push
lret
push
dec
push
dec
fcoms
fucomp
jmp
aad
jl
sbb
and
or
stos
arpl
shlb
sbb
sbb
fisttpll
xchg
adc
test
scas
std
leave
loope
mov
add
mov
sbb
cwtl
add
cmp
xchg
cwtl
mov
xchg
adc
xor
push
sub
movsl
fidivl
test
fldcw
mov
arpl
jmp
and
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
addr16
fpatan
call
negl
dec
adc
fucomp
movsl
imul
fucomip
hlt
cmp
fists
iret
ret
fdivp
lds
fwait
add
aas
add
mov
test
ret
test
lcall
rcrb
ret
jo
pop
movsb
fisubl
stos
sub
pop
pusha
mov
inc
push
mov
cmp
push
cmp
ret
or
mov
jge
dec
or
cld
jp
add
sbb
popa
inc
or
or
dec
mov
or
out
push
xchg
sbb
mov
sub
inc
mov
mov
mov
xchg
jmp
inc
gs
fnstsw
mov
cltd
inc
push
push
sbb
ret
or
sbb
ds
cmc
lods
dec
dec
xchg
test
mov
mov
mov
xchg
pop
push
mov
shr
xor
aam
sti
add
mov
jno
mov
movsl
add
lret
arpl
or
cltd
inc
arpl
xor
mov
imull
sub
lret
add
inc
cli
cmpsl
sub
lret
mov
dec
inc
jne
jns
mov
mov
mov
inc
lods
retw
pop
repz
ja
inc
xchg
jl
xor
imul
movb
loope
fwait
loope
inc
pushf
shlb
lret
cmp
jnp
jg
scas
loope
pusha
repnz
and
adc
inc
mov
fdivs
sub
je
fildll
adc
push
mov
xchg
sbb
iret
clc
xchg
push
pop
and
cwtl
insl
push
inc
push
dec
mov
psubw
call
aam
push
and
rcll
int3
dec
inc
push
int3
sub
mov
fsubr
push
and
repnz
loopne
adcl
neg
pop
dec
mov
daa
hlt
ds
mov
or
aas
add
cmp
push
and
mov
popf
xchg
or
push
pop
ret
sbb
sarb
das
es
mov
inc
fists
stos
or
cli
mov
cld
mov
jge
popa
fisubrl
jno
inc
fmuls
fmuls
lcall
in
pop
mov
inc
lcall
pusha
cmp
fsub
sbb
ret
scas
cs
icebp
leave
es
fcmovnu
adc
mov
in
xchg
andl
xchg
loopne
shlb
mov
les
sbb
mov
pop
push
fisubs
xchg
imul
cmp
dec
cmp
lret
jge
out
dec
aas
sub
sbb
or
inc
inc
and
mov
xchg
cmp
xor
or
les
jle
ret
arpl
lds
cmp
jg
aam
lock
testb
pusha
inc
imul
insl
movsl
es
push
out
push
hlt
mov
jne
xlat
dec
sub
ret
xchg
bnd
loope
sub
lret
sar
xor
sti
mov
fidivs
pop
mov
add
xchg
lret
rcll
sub
lret
stos
xchg
fimull
cli
outsl
sub
mov
lds
dec
mov
jecxz
fwait
sahf
xchg
fwait
inc
fcoms
cmp
or
pop
xchg
cwtl
add
mov
mov
mov
jb
addr16
adc
sbb
xchg
mov
mov
mov
and
fstl
jmp
ret
out
xor
fsubl
pop
bound
dec
fmull
enter
or
fidivl
testb
and
sub
xor
mov
sbb
dec
rcr
mov
jle
cmc
lret
push
adc
mov
jns
mov
lock
adc
lret
lock
add
lods
xchg
sub
adc
jle
icebp
mov
push
lret
push
dec
push
dec
js
fldt
jmp
cmc
push
jl
sbb
and
or
stos
arpl
mov
movsl
ja
lds
ljmp
fisttpl
loope
inc
mov
ljmp
int3
scas
loope
out
js
mov
adc
rorb
add
sub
mov
mov
adc
and
mov
loopne
mov
cltd
in
cmovae
mov
push
flds
mov
out
adc
hlt
add
xchg
sub
enter
dec
fnstenv
icebp
shl
pop
and
xorb
divb
popa
or
mov
jno
mov
aaa
in
add
mov
sbb
inc
mov
inc
sub
pop
adc
cmp
dec
pop
leave
fdivs
fsubrl
loop
clc
stos
add
xchg
dec
sbb
mov
mov
dec
sbb
punpckhwd
mov
prefetchnta
xchg
in
inc
sbb
adc
and
cmp
stos
jecxz
loopne
fistl
cltd
xchg
or
sub
xor
and
push
icebp
adc
gs
sbb
out
dec
adc
adc
mov
or
lret
js
mov
test
mov
mov
xchg
sbb
inc
mov
cltd
inc
inc
push
cltd
outsl
push
ret
sbb
sbb
mov
cmpb
sbb
es
push
xchg
out
ja
xor
adc
daa
movsb
out
and
push
xchg
mov
cmc
xor
adc
popf
sub
mov
jns
into
jge
pop
int3
xchg
mov
sbb
movsl
sbbl
push
sub
lods
xchg
sub
adc
xchg
pop
mov
mov
xchg
jmp
push
aaa
div
imul
rcrl
test
roll
in
inc
pop
xchg
adc
cmp
fisubl
push
outsl
les
imul
cwtl
fstl
stos
lahf
scas
std
fabs
cmp
fwait
pusha
lock
sub
mov
or
mov
adc
sub
cmp
test
push
xchg
imul
add
xchg
pop
cmpsb
enter
ds
jmp
std
mov
sti
and
jb
cmp
mov
pop
mov
xchg
inc
divl
test
fadd
mov
add
mov
shlb
cmc
lret
push
adc
mov
jns
mov
lock
nop
addr16
jbe
xlat
xchg
cmpsl
test
aas
and
mov
inc
stos
adcb
mov
ja
cmp
js
leave
shlb
stos
xchg
movsl
ljmp
jmp
popf
ljmp
addb
popa
xchg
addb
sub
dec
dec
sahf
aam
adc
or
and
lods
jge
shrl
and
jmp
popf
test
jno
js
lods
lods
fbstp
mov
or
sbb
mov
adc
dec
and
inc
add
inc
jae
test
dec
xchg
cltd
mov
cmpsb
jnp
call
adc
cwtl
pop
scas
rcll
int3
dec
pop
xchg
jmp
cmpsb
dec
out
imul
fsubp
xchg
int
js
repz
dec
call
cmp
test
xor
push
add
mov
jbe
test
test
lcall
dec
and
iret
mov
dec
movsl
dec
and
mov
test
rorb
lret
pop
xchg
scas
movl
fldl
test
or
mov
mov
loop
add
into
movsl
adc
mov
mov
xchg
sbb
dec
lods
ret
rcl
xor
fildl
repz
loop
inc
mov
pop
jb
incb
mov
add
jge
jb
pop
mov
sbb
test
in
fwait
jmp
ret
xchg
and
sahf
jno
cmp
fnsave
in
sub
and
clc
mov
dec
dec
mov
jb
inc
fildll
push
negl
iret
adc
sbb
movsl
sub
pop
mov
daa
out
ds
mov
lock
add
andb
xor
outsl
addl
lahf
mov
pushf
dec
and
ror
sbb
lods
push
cli
mov
pop
mov
mov
xchg
jmp
sub
lret
punpckhwd
xchg
cmpsl
xchg
data16
imul
jge
dec
or
cld
jp
add
sbb
data16
popf
adc
fimull
aas
add
push
nop
pop
xchg
scas
inc
xchg
ret
sub
pop
xchg
add
cwtl
inc
mov
loope
outsb
test
mov
popf
inc
jns
adc
lret
sub
fisubs
lret
push
xchg
aad
jb
push
adc
sbb
jecxz
enter
or
fidivl
mov
out
loope
dec
mov
mov
incl
lea
pop
mov
jns
ds
mov
push
add
mov
je
mov
sbb
add
lret
lds
dec
jb
lahf
mov
repnz
stos
mov
jnp
inc
in
xlat
xor
movsb
leave
test
xchg
mov
push
lret
into
ret
xchg
push
fcoms
sbb
xor
xchg
add
mov
fwait
adc
loopne
cmp
mov
pop
push
lods
inc
pop
lcall
fwait
out
adc
xorl
rclb
xchg
andl
addr16
rcrl
sub
and
push
mov
xchg
fisubl
and
std
bound
pop
data16
xor
fcomps
jnp
int3
inc
cmp
sbb
add
sub
popf
out
mov
mov
lcall
xchg
shl
ret
loopne
mov
add
mov
repz
pop
and
cwtl
pop
lock
xor
aaa
or
mov
cwtl
or
fst
lret
mov
sbb
xchg
dec
mov
mov
lcall
dec
rcr
jae
add
ds
stos
dec
push
push
inc
push
stos
rcrb
jne
inc
pop
mov
mov
sub
icebp
mov
push
lods
inc
pop
lcall
mov
es
jle
scas
inc
fdivl
cmpsb
jo
arpl
rcll
rclb
rorl
dec
shlb
fiaddl
inc
or
xchg
push
fsubs
and
std
bound
pop
inc
in
out
cmp
xchg
out
pop
sub
dec
cld
xchg
xchg
jmp
cmpsb
dec
iret
imul
fisubs
fsubrs
adc
loopne
mov
shll
jp
aas
in
mov
add
in
lock
jg
loop
cmp
sub
leave
sarb
imul
mov
sbb
pop
test
dec
sub
push
lahf
push
sub
xchg
scas
sarb
pop
clc
mov
mov
fnstenv
mov
or
cmp
adc
lcall
adc
loopne
fistl
cltd
xchg
sub
lods
fidivs
test
loop
xchg
inc
fwait
imul
mov
out
and
xor
push
mov
sub
mov
push
xchg
imul
mov
rcll
dec
sbb
cmovae
mov
psubw
call
mov
out
movsl
dec
pop
or
cltd
sahf
inc
sbb
sub
daa
in
test
push
fildl
les
fstl
dec
mov
daa
dec
sti
iret
fisttps
mov
jp
add
movl
shrl
sbbb
sbb
push
jmp
lds
push
cli
mov
xchg
outsl
xor
sbb
push
dec
mov
push
fldl
test
or
or
or
lods
xchg
fisubrl
pushf
lods
testl
inc
jb
lods
rcrl
nop
push
push
pushf
rorb
cmp
push
nop
sbb
scas
inc
xchg
cli
stc
and
pop
xchg
in
cmp
mov
and
inc
xchg
dec
and
sbb
dec
inc
fwait
imul
lahf
xlat
mov
dec
jmp
lds
mov
les
loopne
ljmp
adc
enter
mov
add
insl
sub
xor
mov
pop
xor
mov
cli
cmp
mov
clc
sti
pop
es
rcr
repz
mov
in
popa
mov
xlat
cltd
or
mov
fwait
bnd
lret
inc
sub
pop
xor
shlb
jne
testl
pop
sub
lahf
popf
ds
xor
push
xchg
frstor
fisubl
mov
xor
push
sbb
xor
scas
add
rcl
cwtl
pushf
xchg
sbb
pop
dec
adc
loop
xchg
loop
iret
xor
imul
js
or
cli
hlt
pop
jno
push
pop
adc
sbb
mov
mov
dec
and
inc
or
inc
gs
fnstsw
mov
cltd
fdivs
pop
xor
or
enter
push
adc
or
cmp
xchg
sub
imull
mov
fsubp
cmpsl
mov
xor
jle
dec
add
repnz
mov
in
ljmp
mov
jae
mov
pop
add
mov
orb
mov
testb
gs
popf
fmull
repnz
stos
mov
jnp
inc
in
xlat
xor
dec
xor
mov
sar
xor
sti
lret
into
xorb
mov
mov
xchg
cltd
adc
sbb
jmp
sbb
jnp
pop
sahf
mov
aad
mov
add
dec
popf
push
push
fwait
test
mov
mov
sbb
add
mov
add
inc
mov
sbb
add
mov
call
or
mov
jae
jge
cmovae
or
xchg
mov
out
cmp
mov
daa
sub
mov
push
dec
mov
in
int
mov
repz
mov
imul
leave
mov
and
push
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
hlt
xor
add
loop
clc
jp
out
inc
in
std
test
and
fnstenv
inc
mov
or
cmp
adc
lcall
adc
loopne
cmp
add
sbbb
inc
pop
lcall
fwait
out
pop
cmp
xor
ss
rclb
andl
addr16
sarl
xchg
adc
cmpsl
pop
jae
xchg
cmpsb
dec
aad
pop
rcll
fsubs
lahf
pop
cmp
mov
ret
hlt
mov
inc
inc
mov
repz
daa
push
shrb
in
fcomps
push
and
mov
pop
mov
mov
call
jp
pop
dec
pop
dec
jns
sti
mov
imul
add
add
mov
jae
sbb
mov
ret
and
iret
inc
sbb
push
jmp
lds
out
stc
dec
inc
lahf
push
lock
adc
cli
mov
cld
mov
imul
pusha
inc
jo
shlb
or
cld
mov
es
shrb
rorl
xchg
out
pop
mov
ret
xor
pop
cmpsl
pop
pusha
ja
lods
loopne
and
jmp
popf
test
popf
bnd
lods
das
fbstp
mov
or
sbb
inc
jns
dec
xchg
lock
mov
cltd
xor
mov
and
fisubl
and
std
bound
scas
je
pusha
and
mov
or
cmp
xchg
sub
xor
mov
fsubp
cmpl
or
add
dec
call
dec
lcall
int3
out
aaa
cmc
add
mov
sbb
sub
push
pop
adc
dec
cmp
test
mov
sbb
sub
lods
jmp
mov
scas
or
ljmp
subb
jns
inc
outsb
cmpsb
sub
dec
movsl
or
jle
push
fstps
leave
lds
sti
mov
jecxz
pushf
sahf
xchg
fwait
inc
ljmp
push
insb
xchg
cwtl
add
adc
dec
add
fwait
jmp
loope
jp
imul
push
jns
enter
pop
cltd
lods
mov
jnp
call
adc
cmc
orl
sbb
mov
mov
inc
addr16
mov
sub
ret
int3
sbb
out
add
mov
shlb
shll
or
sbb
lcall
js
ret
mov
mov
push
and
iret
icebp
scas
dec
inc
dec
and
mov
test
jns
inc
jecxz
inc
mov
test
pop
cmp
mov
or
cmp
adc
lcall
adc
loopne
fistl
cltd
xchg
rcl
jb
lods
fidivs
test
loop
xchg
inc
fwait
imul
mov
andl
stos
into
popa
add
dec
mov
pop
repnz
and
mov
int3
fs
xor
inc
jge
sbb
inc
mov
cltd
inc
test
jecxz
bound
cmpb
out
xchg
je
dec
dec
mov
and
cmp
dec
sahf
inc
sub
xor
mov
arpl
mov
popa
jecxz
loopne
mov
push
cmc
lret
daa
add
ds
ret
repz
pop
and
cwtl
pop
lock
jl
ud2
movsl
stc
inc
loope
xor
mov
notl
sbb
test
push
in
dec
push
dec
shrl
xchg
sub
inc
enter
mov
das
or
adc
mov
jl
or
or
sub
lods
jle
mov
cltd
inc
cmp
push
push
mov
out
popa
jnp
pop
jo
cmpsl
xchg
fwait
leave
in
loope
inc
or
or
pop
mov
add
jge
xchg
sub
mov
movsb
flds
dec
mov
loopne
and
es
repz
shrb
push
adc
or
cmp
xchg
sub
jl
cmp
pop
push
mov
shr
xor
pop
out
mov
and
idivb
lock
cmp
add
mov
orb
mov
testb
push
divb
nop
xlat
dec
sub
ret
aam
mov
out
sbb
mov
sar
xor
sti
sub
mov
xchg
rcll
sub
jne
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
cld
ret
xor
dec
insb
jnp
scas
jg
leave
cwtl
das
je
or
mov
ss
shlb
or
sbb
inc
jns
dec
xchg
lock
ret
mov
cltd
xor
mov
insl
xchg
popf
mov
mov
cltd
inc
push
push
sbb
inc
sti
repz
mov
inc
inc
mov
sbb
data16
stos
sbb
enter
sbb
or
sti
mov
shrb
stos
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
inc
pushf
sub
or
and
mov
push
xlat
int3
dec
mov
or
jg
shll
fisubl
stos
inc
push
fwait
out
adc
rcrb
push
repz
ret
pop
sbb
mov
add
push
pop
push
stos
rcrb
jne
inc
pop
mov
add
icebp
mov
push
lods
inc
pop
lcall
fwait
pushf
jne
jnp
inc
mov
add
dec
fmuls
add
cwtl
rcl
or
sar
push
movsl
ret
jb
xor
push
jne
sbb
mov
call
popf
jle
sbb
mov
or
ds
xchg
fwait
or
cmp
das
in
cmc
xor
mov
out
adc
ret
xorb
divb
jp
iret
ret
clc
jmp
pop
mov
repz
pop
and
addb
mov
pushf
mov
stc
inc
loope
xor
mov
xor
shl
ret
mov
jle
in
xlat
xor
in
adc
lods
popf
inc
in
jae
sbb
movsb
xchg
push
fcoms
sub
xchg
add
bound
push
subl
xchg
mov
add
and
stos
mov
jecxz
popf
sahf
xchg
fwait
pop
jo
and
cmp
inc
data16
cwtl
add
or
inc
mov
sbb
mov
adc
mov
xchg
mov
out
sub
ret
mov
jmp
lret
jne
cmpsl
movsb
inc
out
sub
sbb
dec
dec
dec
mov
inc
xor
test
cmp
cmp
lsl
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
insb
push
repnz
pop
icebp
sub
nop
jg
adc
andb
hlt
cmpsb
adc
mov
ja
jmp
xchg
sbb
inc
and
xchg
frstor
fisubl
or
mov
push
sbb
nop
lcall
fnsave
imul
pop
mov
push
inc
sbb
scas
popa
pop
inc
in
sbb
xchg
loop
inc
mov
pop
jb
or
sub
inc
pop
adc
sub
mov
out
loope
fwait
xor
lock
sub
and
and
lods
mov
jnp
clc
jno
jecxz
stc
push
adcb
gs
add
xchg
lret
lret
sbb
or
cld
mov
shrb
stos
popa
or
mov
jno
mov
push
inc
lahf
inc
loop
testb
int
test
jp
lcall
mov
sbbl
test
push
test
cwtl
mov
aaa
stos
xchg
mov
insl
sahf
popf
mov
mov
mov
or
ljmp
lret
addb
test
pop
sahf
fistl
cmp
cltd
shrl
cmpsl
push
xchg
fucomi
cmc
mov
enter
mov
rclb
andl
addb
and
and
inc
or
sub
pop
rcll
ljmp
push
ret
xor
testl
or
jne
cwtl
pop
dec
push
lods
in
mov
popf
out
push
adc
xchg
adcb
pop
test
pop
dec
and
mov
test
fwait
lahf
aas
popa
pop
mov
lcall
js
ret
mov
mov
pushf
and
insb
inc
movsl
mov
mov
dec
sbb
cmovne
sbb
dec
ficoms
ficomps
dec
cs
fbstp
and
dec
jl
or
mov
push
sbb
add
scas
xorl
xchg
sbb
movb
jnp
xchg
sub
mov
lahf
jecxz
enter
adcl
dec
shrb
mov
test
or
ja
or
in
mov
jnp
inc
push
mov
dec
or
movsl
inc
pop
mov
and
std
bound
pop
add
repz
mov
inc
inc
mov
mov
xchg
xchg
jmp
cmpsb
inc
inc
imul
fsubp
mov
dec
fisttpll
mov
add
dec
call
sbb
test
lahf
lds
add
mov
testb
jp
rolb
pop
adc
mov
leave
fmuls
fsubrl
loop
clc
mov
lahf
inc
stc
cmpsl
or
lret
mov
ja
jo
jg
cmpsb
push
rcrl
add
cmp
or
cmp
adc
lcall
adc
loopne
fistl
cltd
xchg
loope
push
xor
ficoms
xor
icebp
xor
icebp
std
data16
pop
jecxz
rorb
dec
mov
mov
fwait
jmp
data16
push
aaa
and
ljmp
movsl
cli
xor
cmpsl
ret
mov
jmp
lret
jge
out
inc
into
sub
sbb
movsl
dec
inc
mov
inc
and
test
ret
lock
add
decb
test
cmp
mov
or
sbb
sar
repz
mov
imul
sbb
jg
lds
xchg
sub
adc
xchg
pop
mov
mov
xchg
jmp
jge
xchg
mov
arpl
test
sub
jae
les
xchg
fisttpl
sahf
out
fistl
fimull
jae
aas
fwait
lods
jge
shrl
cmpsl
pop
push
fucomi
cmc
mov
enter
adcl
dec
shrb
adc
pop
mov
adc
dec
mov
xchg
fmuls
movsl
cli
jg
inc
insl
xchg
imul
adc
int
xchg
cltd
inc
push
sbb
ret
sbb
and
mov
cmpb
sbb
or
push
cld
addr16
cmc
clc
dec
mov
int
orb
xor
mov
pop
dec
and
mov
test
fwait
lahf
aas
call
sbb
negl
or
dec
add
and
insl
movsl
test
jbe
int
xor
adc
add
jno
mov
mov
test
lahf
fisttpll
test
or
sub
sub
lods
xchg
aam
imul
adc
fldt
popf
adc
fmuls
mov
dec
js
mov
out
push
fmul
fsubr
mov
dec
and
push
dec
mov
sbb
pop
xor
adc
and
mov
inc
sbb
cmovae
sbb
mov
mov
cwtl
push
addb
pushf
test
shr
mov
cmpl
daa
mov
repz
mov
imul
std
imul
inc
stos
repz
cmp
mov
hlt
leave
add
sbb
test
lcall
jg
enter
dec
pushf
inc
stos
cwtl
adc
mov
or
push
ret
sbb
mov
scas
movl
rcrl
les
sbb
test
dec
xchg
mov
scas
testl
push
sbbb
adc
in
add
leave
shll
jmp
pop
jo
cmpsl
xchg
leave
in
and
add
push
sbb
jecxz
mov
nop
lock
cmp
add
adc
sbb
cmpsb
addl
int
mov
cmpb
je
inc
icebp
leave
cwtl
pop
dec
push
sub
mov
cmc
clc
pop
mov
cmc
xor
pop
cmp
mov
popa
push
mov
aam
sti
stos
mov
jnp
mov
push
lcall
mov
pop
bound
or
ret
insb
adc
ss
aad
cld
int
cmp
sub
cmc
sbb
clc
jmp
xchg
frstor
cmp
xchg
orl
xchg
dec
bound
push
dec
lcall
cmp
xchg
stos
jge
jns
adc
imul
mov
mov
movsb
mov
test
scas
push
fdivl
cld
jo
arpl
add
or
mov
rorl
dec
aam
adc
fisubl
sbb
ret
pop
cs
xlat
pop
into
clc
xor
popf
jb
xchg
or
sbb
daa
loopne
ljmp
adc
enter
mov
add
insl
sub
ret
incb
sahf
ret
mov
pop
test
cmp
mov
lock
in
ret
rcrl
movd
mov
lock
pop
xor
or
aas
push
icebp
imulb
js
sub
and
stc
sti
inc
fists
stos
sbb
lret
fucom
cli
mov
cld
mov
or
xchg
mov
dec
bound
push
dec
push
stos
rcrb
jne
vsubss
jle
mov
sbb
lods
inc
pop
lcall
fwait
pushf
jne
jnp
inc
mov
add
inc
push
test
xchg
sub
jl
adc
movsb
pop
jae
xchg
cmpsb
or
pop
pop
rcll
fsubs
lahf
pop
sbb
mov
ret
lock
inc
inc
mov
fmull
xchg
jmp
cmpsb
inc
mov
mov
mov
mov
int
mov
add
dec
call
lahf
stos
and
jge
mov
mov
cmp
outsb
inc
add
subb
cwtl
sbb
add
leave
lds
dec
mov
ret
sbb
add
mov
mov
jnp
inc
in
xlat
xor
in
cmp
xchg
xchg
fucomp
je
push
lret
into
sub
fcoms
sbb
movsl
xchg
test
cmp
xchg
add
mov
fwait
adc
loopne
fistl
cltd
shrb
test
fidivs
test
ficoms
fwait
lods
and
stc
icebp
xor
push
mov
add
inc
mov
dec
aam
inc
fbstp
cmp
xchg
imul
imul
lahf
xlat
cltd
into
clc
xor
cmpsl
pop
push
stc
loop
cwtl
rcll
dec
add
adcl
cmp
xchg
sub
mov
sbb
loop
pop
push
mov
shr
xor
pop
repnz
lcall
mov
mov
cmp
dec
subl
popa
mov
add
testb
push
divb
nop
xlat
dec
sub
ret
mov
mov
out
sub
xor
pop
fstpl
bound
sbb
add
nop
stos
pop
dec
scas
xchg
fisttpl
sahf
push
fistl
fiaddl
jae
xor
shrl
and
jmp
popf
movsl
dec
in
bnd
lods
lods
fbstp
shlb
or
sbb
arpl
inc
cwtl
adc
dec
and
inc
add
jl
push
popf
push
dec
adc
dec
fdivs
fwait
psubusw
call
lods
add
lcall
or
sub
mov
sbb
js
test
xor
or
les
inc
mov
arpl
inc
and
pop
mov
jecxz
push
xchg
mov
jbe
add
mov
out
movsl
ja
jb
mov
hlt
mov
xor
lret
adc
sbb
stos
fildll
stc
mov
adc
fwait
into
fidivl
pop
mov
or
xchg
lret
rcll
lret
or
inc
mov
push
stos
fnsave
sbb
adc
in
add
cltd
lods
jle
mov
add
dec
cmp
sbb
mov
add
mov
mov
sub
mov
push
xchg
adc
mov
mov
movsl
pop
repz
int
pop
mov
out
test
je
and
jb
mov
push
dec
mov
sbb
dec
inc
inc
je
mov
lods
imul
les
cmp
enter
sbb
int
les
dec
mov
ret
mov
mov
pushf
and
insb
dec
movsl
mov
mov
xor
jno
mov
mov
test
lahf
fisttpll
test
or
mov
lods
xchg
fisubrl
pushf
lods
testl
adc
adc
popf
adc
ret
jge
inc
push
dec
mov
or
out
push
addb
inc
sbb
mov
mov
jb
addr16
sbb
sbb
xchg
mov
mov
mov
and
mov
out
sti
xor
fsubl
ret
out
jbe
jle
mov
xor
and
sbb
mov
push
dec
mov
sbb
xor
mov
call
push
sahf
rorl
jne
push
adc
mov
jns
mov
add
mov
xchg
dec
sbb
mov
lods
ret
cmp
pusha
outsb
and
ja
xchg
pop
ret
xchg
dec
pop
scas
mov
sti
fisubl
fisttps
lret
ja
cli
in
test
cmc
or
test
push
or
xchg
lcall
lds
ljmp
cmp
fstl
pop
rclb
mov
leave
loope
mov
out
js
mov
adc
rorb
add
sub
mov
push
xchg
adc
dec
xchg
and
mov
cltd
in
cmovae
gs
aad
jb
jecxz
fwait
je
or
and
mov
dec
dec
mov
rorb
loopne
push
negl
iret
adc
cmp
xor
mov
jmp
pop
mov
hlt
mov
adc
adc
mov
mov
stc
inc
arpl
cwtl
or
lcall
sbbb
jb
mov
adc
mov
xchg
xchg
popf
lret
mov
lret
xchg
push
fsts
pop
inc
push
lods
sub
stos
std
cld
sub
std
mov
add
inc
mov
loope
dec
xchg
aad
mov
jmp
lahf
adc
out
js
aas
mov
mov
add
arpl
shl
fwait
push
dec
mov
or
xchg
jp
adc
xor
movsb
inc
add
ljmp
sbb
cltd
jmp
and
mov
inc
inc
mov
ret
add
xchg
push
hlt
dec
addr16
mov
shl
pop
and
cmp
cld
divb
jle
iret
ret
clc
jmp
pop
mov
repz
pop
and
addb
mov
add
adc
lret
dec
push
leave
jns
lret
movsl
ret
insb
test
lahf
sbb
test
push
in
xor
stc
mov
xchg
mov
popf
lret
mov
sbb
retw
pop
mov
inc
scas
ja
add
sub
lret
std
xor
mov
inc
mov
fstl
pop
pop
add
pop
aad
xchg
fwait
inc
ficoml
cmp
lods
push
jmp
mov
andl
pop
adc
dec
loopne
xor
fsubs
sbb
mov
and
int
jl
cmpsl
sti
dec
popa
jge
outsl
or
xchg
add
push
sbbb
pushf
test
out
mov
cmpl
jle
addl
call
icebp
imul
inc
out
repz
cmp
incb
repnz
sbb
pop
mov
inc
sub
push
pop
adc
insl
movsl
sbb
mov
xchg
sub
adc
inc
clc
cmpsl
adc
sbb
mov
int
inc
xor
pushf
lds
arpl
jo
inc
pop
xchg
xchg
fsts
pop
inc
push
sub
xchg
stos
std
cld
pop
mov
jecxz
sub
mov
aad
mov
add
inc
mov
lock
iret
push
adc
xorb
add
or
dec
xchg
shlb
or
push
mov
adc
mov
add
fldenv
xchg
xchg
fld1
jne
xchg
out
push
ret
add
adc
andl
sub
sub
mov
push
dec
mov
int
mov
repz
mov
imul
cmc
mov
pop
pop
dec
pop
dec
mov
add
in
imul
sbb
ret
mov
adc
lret
cmp
daa
adc
clc
fs
and
ja
xchg
mov
pop
icebp
dec
mov
xchg
jmp
shlb
div
imul
rcrl
test
roll
in
inc
pop
xchg
adc
cmp
cmp
les
fistl
mov
sub
sahf
jp
scas
rcrb
ss
xlat
fdiv
sbb
andl
mov
add
or
inc
test
sub
aam
xor
aas
fwait
lret
in
mov
mov
xchg
cltd
cmp
sbb
fldenv
pop
gs
adc
js
jecxz
enter
or
fidivl
movsb
out
and
push
xchg
mov
repz
adc
popf
sub
mov
jns
into
cmp
aas
int3
jmp
mov
jl
adc
mov
mov
stc
inc
arpl
cwtl
or
popf
loop
les
shrl
push
in
dec
push
dec
shrl
xchg
movsb
jno
inc
enter
mov
das
or
xchg
out
mov
sbb
orb
aad
pushf
xchg
sbb
testb
jnp
xchg
sub
mov
iret
js
mov
jecxz
pushf
repnz
and
fwait
add
shlb
mov
js
sbb
and
mov
xor
cwtd
sub
jmp
jne
sbb
mov
fldenv
pop
gs
adc
js
jecxz
enter
or
fidivl
sbb
mov
jne
imul
test
fiaddl
les
fstl
dec
cmp
movsl
sbb
jp
add
add
mov
inc
add
add
lods
movsb
sbbb
cmpsl
cwtl
jecxz
and
ja
xchg
pop
ret
xchg
sub
scas
mov
sti
fisubl
fbstp
mov
fucom
jmp
hlt
pop
sub
les
xchg
rcll
roll
sub
out
sbb
add
or
pop
fs
lods
loopne
and
jmp
popf
movsl
dec
out
bnd
lods
das
fbstp
add
adc
insl
ret
cmp
andl
lock
and
and
push
mov
xchg
cmpsb
or
push
pop
leave
xchg
sub
cmpsl
sti
fsubs
lahf
outsl
movnti
in
sbb
orb
mov
lret
cmpl
or
idivb
shrb
and
imul
inc
in
repz
cmp
loopne
mov
ret
mov
adc
lret
cmp
sub
imul
mov
ja
xchg
pop
iret
xchg
sub
scas
mov
sti
fisubl
fisttps
lret
xchg
add
xchg
hlt
test
inc
or
cmp
adc
lcall
adc
loopne
cmp
mov
pop
fldcw
sbb
aad
sub
mov
loop
in
nop
xchg
sbb
mov
call
les
xchg
sub
xor
inc
dec
test
stos
icebp
mov
dec
sbb
dec
js
fwait
psubw
call
cwtl
push
push
mov
mov
test
sub
sub
inc
popl
adc
fsts
clc
cmp
sbb
adc
stos
loopne
jmp
aas
divl
jecxz
enter
add
std
imul
scas
inc
aam
xor
test
fs
push
cmp
sub
cmc
sbb
std
fistpll
arpl
lds
jnp
add
or
pop
lock
data16
sahf
xchg
out
sbb
add
sub
pop
js
enter
and
jmp
popf
movsl
dec
loope
bnd
lods
das
fbstp
shlb
or
sbb
add
dec
xchg
lock
mov
cltd
xor
call
mov
mov
cltd
inc
mov
pop
movsb
sti
repz
mov
inc
inc
mov
mov
jmp
cmpsb
dec
imul
fsubp
push
mov
jne
jae
pop
mov
jecxz
pop
mov
adc
sub
hlt
mov
hlt
leave
add
sbb
test
lcall
push
xchg
push
hlt
xor
lret
rorl
dec
add
mov
sbb
dec
sbb
jp
pop
das
xchg
stc
cli
in
test
or
daa
push
cld
xor
add
mov
stos
ja
test
movsl
mov
pop
mov
enter
jmp
sbb
push
xchg
sti
gs
inc
sarb
sub
mov
test
dec
aam
cld
iret
mov
cmp
xchg
call
pop
test
and
movsl
cli
xor
ds
jmp
std
mov
sti
and
xchg
enter
cwtl
jle
inc
inc
fwait
testl
jo
insl
or
xor
mov
lods
lea
into
push
fidivs
imul
popa
xchg
mov
fistps
pop
adc
shll
sbbb
mov
or
test
push
jbe
and
iret
inc
push
pushf
cmpb
adc
push
test
test
andb
out
pop
pop
movsl
mov
jns
lahf
cmp
cwtl
adc
ret
nop
dec
mov
inc
inc
leave
add
inc
sub
xchg
push
mov
icebp
pop
icebp
dec
pop
sub
sbb
shr
sbb
iret
js
jle
xor
icebp
stc
sbb
mov
add
mov
inc
mull
push
push
out
and
addr16
push
jecxz
inc
jmp
cmp
jae
inc
int
jns
mov
mov
rcr
call
aas
sti
sti
and
push
mov
xchg
inc
add
sbbl
lea
cmp
pop
movsl
adc
pop
dec
and
mov
test
sbb
loopne
div
jmp
adc
dec
and
lock
add
movsl
mov
arpl
add
cli
lret
push
jne
xchg
lret
test
sbb
nop
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
leave
ret
subb
add
out
mov
stos
xchg
push
fadds
movsl
xchg
aaa
push
divl
xchg
stc
stos
jbe
pop
jp
mov
ficoms
mov
lret
sub
or
sbb
mov
fwait
push
dec
mov
repz
mov
dec
daa
sub
push
aas
fwait
lret
in
mov
mov
xchg
cltd
jl
cmp
lret
call
cmp
or
cmp
xchg
sub
cwtl
adc
sbb
xchg
mov
cmp
and
mov
test
fwait
lahf
in
mov
and
sub
sbb
test
lcall
fs
xor
and
ss
sub
cmp
sub
cmc
sbb
pop
sti
lock
imul
pusha
push
out
test
andl
andl
push
mov
int3
pushf
mov
adc
test
xor
mov
jmp
mov
imul
jnp
inc
mov
adc
addl
rorb
or
out
xor
mov
and
jno
xchg
jnp
push
cmp
jle
mov
xchg
cltd
jl
xor
lret
gs
add
sbb
add
andb
js
sbb
sahf
gs
adc
mov
add
cwtl
dec
and
mov
mov
test
fwait
lahf
jg
clc
sti
mov
in
inc
hlt
leave
add
sbb
test
lcall
repnz
xchg
roll
dec
and
ss
sub
cmp
sub
cmc
sbb
mov
cmp
in
test
or
pop
sbb
outsb
or
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
sbb
xchg
test
xor
addr16
jle
scas
das
out
leave
cld
icebp
jg
sbb
push
subl
in
js
sbb
je
xchg
ja
rcr
ja
xor
je
out
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
xchg
mov
cmp
and
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
clc
lods
pop
imul
movsl
mov
and
call
iret
imul
xchg
cwtl
mov
mov
xor
add
push
dec
add
rorl
test
xchg
pop
test
fdivrs
icebp
add
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
pop
sarl
jle
ljmp
xor
xchg
adc
daa
bound
inc
inc
popa
movd
decb
js
push
lret
lods
je
or
int
push
dec
in
xor
aam
lea
iret
inc
fbld
mov
test
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cli
dec
movsl
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
jle
test
cld
mov
pop
xor
addr16
dec
push
cmp
leave
lock
jl
das
dec
iret
shl
divl
adc
stc
jp
scas
scas
loope
sti
jnp
out
scas
mov
dec
scas
insb
lock
mov
mov
mov
xchg
adc
jbe
gs
jnp
movb
or
xlat
adc
int
int3
fwait
mov
in
and
xor
pushf
scas
jnp
in
cld
push
pop
add
add
add
mov
sbb
sub
push
testb
mov
dec
and
xchg
push
ss
push
movsl
pop
arpl
scas
mov
xchg
inc
scas
jmp
repnz
sbb
xor
ret
rcll
ret
iret
xlat
mov
fdivl
fistl
fdivrs
mov
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
arpl
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
inc
dec
adc
xchg
adc
je
xchg
and
addr16
and
movnti
mov
xchg
mov
dec
addr16
inc
push
dec
jo
nopl
fs
jecxz
sbb
cs
cmpsb
ret
pushf
in
iret
cmp
xor
inc
mov
push
mov
scas
iret
pinsrw
push
cld
test
mov
pop
icebp
icebp
or
cmp
mov
cli
and
mov
dec
xorl
xchg
and
into
add
roll
or
scas
sub
cs
sub
sub
and
es
fidivrs
stos
xchg
lods
xor
cmc
adc
xchg
test
fs
mov
lret
push
outsl
mov
mov
mov
negl
popa
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
fwait
negl
mov
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
sub
push
insl
mov
jne
pop
test
push
stos
xchg
sbb
push
jmp
imul
inc
jns
ds
movsb
ret
xor
dec
inc
sub
sub
inc
jb
insb
shlb
movsl
out
stc
add
mov
inc
lcall
cmp
cmpsb
cmp
pop
and
movsl
jge
jo
popf
dec
fistpl
jno
je
mov
pop
cmp
ret
cld
jae
cld
out
daa
dec
lock
jge
sub
jno
int
xchg
test
repz
jp
lds
out
stos
loopne
cmp
pop
jb
or
cmpb
repnz
dec
inc
inc
inc
pop
jle
or
and
dec
sbb
cmp
xorl
mov
fmul
call
mov
outsb
js
std
popa
mov
mov
cli
mov
inc
xchg
enter
xor
or
push
xorl
sbb
push
cmp
je
stos
ret
call
add
push
lret
popl
inc
popf
imul
xchg
mov
inc
ret
dec
roll
xor
xchg
xchg
fistl
test
add
or
lea
pop
lds
push
stos
push
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
frstor
jb
ret
jno
adc
jecxz
fs
mov
insb
mov
pop
outsb
repz
cwtl
add
or
pushf
add
imul
lds
test
test
push
dec
xor
loop
mov
pusha
arpl
rorb
test
popa
jecxz
shr
mov
outsb
fbstp
jmp
ss
movnti
sub
lcall
sbb
outsb
jns
stc
xor
fisttpll
frstor
mov
xchg
jp
jmp
into
push
add
lret
rcll
adc
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
outsb
mov
jne
sahf
fidivrs
sub
dec
testl
cs
mov
inc
mov
mov
jge
dec
xor
cld
xor
fidivrs
fmulp
xchg
repz
jns
popf
adc
xchg
pop
cli
cmpl
push
mov
aaa
xchg
fstpl
pop
xor
xchg
aad
cwtl
mov
test
lahf
push
fwait
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
sub
in
mov
cmp
sub
pop
fnstenv
inc
dec
xor
mov
das
mov
mov
cmp
das
push
roll
and
es
fidivrs
jo
rorl
ret
lret
and
push
pop
outsl
jae
inc
pop
dec
push
pop
sbb
jo
shrl
fwait
jmp
les
mov
cltd
or
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
add
mov
sbb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
and
jle
mov
lods
push
xlat
pop
div
xchg
push
jg
int3
add
arpl
in
es
shlb
jns
inc
mov
lods
or
js
push
cmpsl
pop
pop
mov
inc
xchg
dec
scas
iret
dec
movsb
ljmp
frstor
js
fidivs
jo
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
dec
inc
inc
lahf
sub
push
movl
push
mov
jg
bound
dec
lds
xchg
movsl
aam
jns
mov
aas
roll
shll
push
int
add
decl
ret
lret
movsl
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
pop
mov
fnstcw
scas
in
mov
jmp
pusha
xor
rorl
dec
and
mov
adc
cmp
pop
iret
fxtract
cmc
jge
outsl
dec
push
sti
in
lret
inc
pop
sub
loope
call
cmc
jmp
mov
arpl
dec
inc
int3
pop
cmpsl
adc
cmp
pop
loopne
les
fdivrl
jge
jl
xor
dec
push
inc
push
pop
cltd
subl
test
push
xor
xor
daa
mov
out
inc
mov
sub
mov
sub
push
mov
insl
aad
insl
ficomps
fldcw
loop
dec
pusha
sub
push
ljmp
pop
pop
xor
mov
mov
aam
or
dec
icebp
cltd
sub
dec
in
mov
xlat
adc
push
and
pop
lods
das
mov
inc
test
pop
pop
xlat
insb
fstpt
mov
lock
jle
dec
mov
push
js
ret
dec
sbb
enter
iret
fsubrs
sbb
mov
sbb
rcrb
push
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
std
or
stc
inc
pushf
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
stos
lea
push
mov
mov
cmp
sub
push
fwait
mov
rclb
inc
jno
inc
in
jg,pn
shl
mov
cmpsb
dec
fdivrl
mov
adc
pop
mov
xchg
mov
cmp
ss
arpl
pusha
mov
xlat
fmull
sti
add
or
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
mov
xchg
imul
jle
ds
jmp
std
mov
sti
and
test
pop
sub
cmp
mov
popa
dec
mov
mov
push
test
js
ret
iret
sub
repnz
jp
inc
inc
loopne
push
aas
pop
lcall
xchg
rolb
xchg
ret
add
sbb
outsb
jns
stc
xor
fisttpll
frstor
mov
xchg
jp
jmp
iret
push
add
lret
rcll
adc
mov
push
lret
fisubs
aad
pushf
xchg
pushf
xchg
sbb
movsb
inc
sbb
scas
mov
push
int
push
sbb
sbb
ret
xchg
mov
cmp
cmp
pop
mov
sub
fs
lcall
stc
in
mov
and
add
xchg
pop
add
sub
add
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
aam
inc
mov
les
cmp
mov
fsubr
jne
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
push
sahf
jns
jecxz
fldenv
add
and
ja
in
jg,pn
shl
mov
fcomps
mov
rol
mov
lods
mov
mov
push
jb
inc
lcall
int3
xchg
xchg
test
push
inc
jg
jle
xor
dec
out
leave
cld
icebp
jg
or
adc
jo
imul
xlat
xor
hlt
inc
cld
cmp
pop
mov
divl
sar
negl
fisttpll
js
out
push
pop
arpl
cmp
call
movsb
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
add
mov
sbb
xchg
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
push
mov
outsl
mov
call
into
in
daa
push
jle
mov
mov
shrl
dec
sub
int
add
jmp
dec
and
data16
ss
clc
mov
aaa
outsb
ret
jge
dec
dec
add
imul
lea
jo
into
push
adc
push
add
scas
sar
sbb
pop
or
xchg
fnstsw
js
addl
add
pop
push
ja
mov
push
jns
lret
sbb
in
jp
movsl
iret
lods
xor
push
sbb
pop
inc
insl
hlt
xor
xchg
shl
data16
sbb
mov
orb
dec
mov
out
mov
shlb
xlat
push
int
sarl
ret
xchg
add
movl
lds
mov
push
mov
mov
push
leave
push
loopne
xchg
iret
cmpsl
insb
and
lods
mov
sub
push
add
inc
push
mov
lea
cmp
aaa
pop
jbe
dec
movb
clc
lahf
shll
xchg
add
mov
add
cwtl
mov
sub
lds
add
inc
pop
fmull
scas
dec
xchg
jp
cmp
sub
movl
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
nop
cs
or
cmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
arpl
filds
mov
mov
add
jo
push
inc
push
inc
jo
nop
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
or
pop
test
je
or
or
outsb
fldcw
push
xor
sub
xchg
mov
pop
pop
inc
push
push
sub
mov
movsb
mov
push
gs
addl
mov
inc
out
add
or
movsb
and
xor
xor
mov
enter
jp
sbb
jnp
mov
mov
ficoms
xlat
mov
ljmp
sbb
mov
fwait
push
dec
mov
sahf
dec
dec
aam
inc
addr16
cltd
xor
fcom
push
fdivrs
lret
sbb
paddq
add
test
xchg
add
and
xchg
and
jo
sbb
sub
push
add
lea
add
bound
mov
and
shrb
push
bound
pop
xlat
pusha
push
pop
add
xor
mov
adc
sbb
xor
in
jns
aad
push
cmpsb
jae
push
mov
mov
xchg
jo
push
stos
lea
dec
ljmp
push
sub
pushf
imul
jno
jecxz
push
orb
mov
inc
or
dec
rorl
lds
adc
lcall
push
js
jbe
xor
fnsave
sbb
dec
and
add
and
cmp
dec
xchg
xchg
add
and
mov
inc
fmuls
sti
adc
test
inc
xchg
mov
jbe
iret
test
iret
push
push
fsubl
out
sbbb
aad
dec
dec
mov
nop
sub
movsb
data16
fsubrs
mov
cs
fwait
pusha
xor
or
mov
xchg
test
or
push
cld
inc
or
adc
cmpsb
mov
sbb
pop
int
mov
jecxz
icebp
addr16
cltd
loop
les
inc
scas
dec
ret
jbe
jo
mov
or
jmp
lods
leave
push
sbb
lods
cld
xchg
adc
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
bound
xlat
in
repz
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
or
add
mov
out
movsl
jmp
inc
call
mov
jnp
out
mov
pop
sub
pusha
mull
fdivrl
sti
icebp
or
lds
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
lods
jp
movsl
pop
in
rclb
jns
pop
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
mov
pop
imul
fsubs
jp
rolb
cmp
dec
dec
lret
data16
imul
mov
mov
push
cltd
push
int3
sahf
pop
and
movsl
adc
pop
and
in
loop
xchg
subl
inc
sbb
lret
lock
jge
inc
iret
shl
ja
std
pushf
out
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
shlb
data16
bound
jbe
shrl
inc
jae
lds
inc
iret
mov
dec
inc
lds
or
mov
jbe
sbb
adc
xorl
sub
mov
cmpsb
mov
jle
mov
outsb
and
xchg
sbb
aaa
fisubl
shr
xchg
push
hlt
lds
ret
xchg
mov
lcall
mov
mov
mov
or
inc
jns
loope
lret
aam
scas
adc
lret
lcall
ficoml
lds
cmp
push
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
imul
ror
xor
fwait
inc
out
pop
adc
mov
dec
clc
xor
ret
ret
loopne
add
mov
push
xor
xor
mov
inc
cmpsl
jg
addr16
push
pop
ljmp
cmpsb
sub
jb
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
cmp
fisttpl
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
fwait
jmp
stos
xor
mov
fstl
out
daa
dec
lock
jge
inc
iret
shl
ja
decl
jbe
xor
xor
jle
mov
xlat
repz
mov
jge
and
negb
and
xorl
std
cmpl
decb
inc
sbb
adc
out
lods
dec
adc
cld
movsb
clc
test
xchg
cmc
xchg
popa
xlat
dec
adc
mov
sti
add
imul
sub
and
inc
adc
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
cmpsb
cli
imul
rolb
jb
dec
ss
repz
inc
mov
iret
test
repz
cmp
push
sub
das
inc
out
adc
and
mov
and
addr16
add
and
movsb
lret
jbe
out
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
test
popa
mov
inc
adc
rolb
mov
add
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
loop
popf
push
adc
lret
insl
dec
mov
xlat
mov
movsb
xchg
sub
stos
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
sub
btr
outsl
jno
lahf
data16
push
jl
inc
dec
imul
pop
out
fdivr
push
gs
fadds
mov
test
xchg
sub
and
push
cmp
mov
enter
rorb
arpl
lret
xchg
repz
fildll
dec
sbb
les
mov
shrb
inc
negl
mov
clc
dec
sahf
mov
push
cmp
and
subb
inc
mov
testl
rclb
jmp
ds
add
or
mulb
mov
cmp
pop
iret
sahf
das
push
pop
insl
sub
les
test
aaa
pop
push
lods
xchg
jae
lret
inc
fiadds
jle
mov
lcall
adcl
cmp
cli
xchg
add
jns
and
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
int3
scas
inc
fs
add
and
cwtl
lock
sarb
add
or
scas
scas
data16
hlt
xor
cmpsb
scas
mov
lock
das
lds
mov
lea
jo
mov
aad
push
addr16
adc
int
jo
pop
sbb
adc
and
mov
mov
inc
mov
sahf
add
mov
xor
push
cmp
cmc
mov
sbb
and
and
mov
mov
aad
lret
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
ret
cltd
jae
mov
in
in
inc
mov
or
cmp
adc
mov
les
fsts
fisttpll
jbe
mov
jbe
pusha
mov
pop
repz
cmp
pop
mov
ss
or
repnz
xchg
leave
add
mov
lcall
add
dec
loopne
iret
rclb
jp
scas
push
rcrl
shrl
js
cs
xchg
aas
movsl
dec
fistl
cmpsl
sbb
and
rolb
ss
xchg
test
push
subb
or
xchg
xchg
gs
mov
adc
mov
xchg
inc
pop
sbb
mov
out
iret
xchg
jp
call
mov
mov
pop
test
xor
ret
add
lcall
leave
xchg
xlat
stos
mov
xchg
cmpsl
loope
mov
int3
jmp
cmp
inc
push
stc
inc
repnz
popf
lret
push
or
dec
gs
jno
push
mov
xchg
sub
sub
jge
dec
pop
fwait
mull
into
add
bound
sbb
ret
sub
sub
adc
int3
pop
jno
mov
sub
int3
pop
dec
sarb
sbb
pushf
lcall
setp
jmp
cmc
fdivrs
xchg
imul
hlt
sub
xor
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
mov
mov
add
ret
cmp
and
mov
test
add
in
mov
jns
mov
cltd
jo
lock
jge
or
or
adc
push
cwtl
push
test
and
ja
lds
sub
mov
cmp
ljmp
fisubrs
addb
add
add
test
sub
test
mov
inc
ret
icebp
shlb
dec
les
test
sahf
movsb
push
sub
outsl
les
fs
mov
cmp
clc
mov
xor
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
test
icebp
mov
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
test
pop
sub
push
hlt
mov
mov
daa
dec
mov
ds
xchg
clc
inc
mov
mov
rolb
out
inc
sbbl
mov
sbb
addb
fnsave
and
fstpt
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
cs
push
push
lock
or
call
psrld
ss
dec
pop
mov
js
cs
icebp
in
mov
sbb
mov
cwtl
shll
or
add
jle
adc
pop
inc
popa
sub
adc
and
in
inc
inc
xchg
adc
lret
loopne
add
jmp
add
test
pop
stos
jns
sub
out
insl
mov
or
sub
xlat
sbbb
ja
jp
enter
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
arpl
lds
adc
mov
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
leave
xchg
jo
enter
dec
loopne
call
push
rcl
test
mov
pop
cs
icebp
fcomi
movsb
dec
int3
lahf
stc
cwtl
shll
or
add
insb
adc
inc
shlb
vmovdqu
faddp
pop
jae
push
xchg
dec
jnp
and
push
cwtl
add
test
pop
stos
jns
sub
out
insl
mov
or
sub
xlat
sbbb
ja
jp
leave
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
arpl
lds
adc
mov
adc
lcall
jo
cmp
adc
jne
cmp
xchg
stos
sbb
sub
ret
lea
jmp
imul
xor
jno
jle
add
or
dec
cli
lock
dec
dec
mov
xor
inc
aam
shll
sarb
push
popf
mov
test
incl
gs
daa
inc
popf
cwtl
or
mov
inc
inc
and
mov
xchg
cmp
or
pop
out
arpl
cmc
loopne
ret
loopne
dec
xchg
xchg
mov
mov
jo
mov
xor
mov
cmp
popa
iret
sbb
cli
dec
inc
xchg
enter
pushf
in
adc
dec
adc
jnp
jns
mov
stos
push
negl
je
cmpsl
lods
cmp
sar
xor
cwtl
adc
outsb
or
pop
and
ret
int
inc
jo
decb
fwait
int
xor
jb
fisttpll
cmp
lds
cmp
das
pop
icebp
or
cmp
andl
mov
in
testl
mov
fsts
pop
add
and
push
xor
loopne
outsb
mov
or
out
scas
mov
lods
pop
aam
into
repz
lahf
lods
xlat
xor
mov
mov
push
test
push
andl
divb
push
lret
shrl
pop
sbb
test
arpl
call
int
push
sub
push
xor
leave
pop
ret
and
aam
mov
fistl
sbb
or
mov
lahf
cmc
gs
sbb
fwait
aam
sub
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
cmp
mov
cli
xor
dec
sub
stos
les
aam
add
imul
lods
arpl
pop
jg
repnz
aam
cmpsl
adc
cwtl
lock
das
pop
mov
es
lret
inc
inc
pusha
test
stos
fcoms
jbe
fldl
jns
lret
sbb
pcmpeqw
mov
andb
movsl
data16
and
enter
mov
nop
add
and
jecxz
add
mov
mov
addr16
test
sbb
inc
mov
pop
inc
inc
dec
jae
inc
mov
aaa
scas
stc
aaa
push
outsl
jne
jne
ret
fadd
cmp
mov
cltd
xor
lods
ja
lret
mov
push
push
mov
mov
xchg
flds
xchg
shll
cmp
xchg
cld
or
bound
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
stos
push
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
add
sub
addl
mull
lret
stc
dec
movsb
dec
push
test
push
cmp
lock
lds
iret
lret
scas
enter
mov
sub
xor
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
inc
push
dec
mov
add
dec
and
cmp
and
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
inc
xorb
int
pop
pop
inc
push
push
sub
pop
dec
ret
ret
adc
into
mov
lds
xchg
sbb
cmp
dec
or
sub
sub
ja
insl
jb
sahf
cmpsb
and
arpl
cmp
lods
fmull
outsb
adc
lret
rorl
les
js
xor
xchg
popf
addl
xchg
lods
sarl
cmc
pop
adc
popa
test
fdivrs
cli
jno
movsb
imul
jb
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
subb
inc
push
push
cwtl
cmpb
xor
les
pop
test
aas
push
cmc
or
mov
jmp
aad
sbbl
mov
sub
inc
sbb
into
push
mov
insl
mov
jne
pop
test
movsl
xor
push
int3
sub
test
sbb
dec
pop
pop
cld
repnz
fists
jae
into
nop
pop
movsb
outsb
mov
pop
sub
mov
xor
xchg
dec
jecxz
ret
pop
mov
push
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
pop
sarl
jle
stos
ret
cltd
call
jns
outsb
lcall
adc
enter
and
lds
pop
shrl
pop
sbb
mov
add
test
jne
lahf
mov
jb
pop
inc
jle
sbb
mov
or
jl
loop
jg
or
lods
jnp
leave
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fiadds
sub
movl
sti
stc
cli
in
test
or
test
sbb
adc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
sub
add
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
subl
sbb
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
push
cmpb
sub
sahf
imul
jns
loope
sub
add
push
adc
jp
pop
xchg
addb
mov
insl
outsb
pop
cltd
enter
sub
xchg
push
shrb
xor
xchg
sub
pop
mov
adc
repz
xchg
inc
sbb
add
je
sbb
adc
ds
push
test
mov
xor
sub
je
pop
adc
test
and
std
lods
xor
lods
fistl
outsb
out
sti
cwtl
inc
data16
add
add
insb
adc
ja
inc
push
and
or
clc
and
xchg
adc
sub
pop
adc
inc
mov
mov
pop
sub
push
xor
mov
xchg
daa
and
int3
mov
pushf
mov
fidivrl
stos
pop
push
in
addr16
shrb
mov
lahf
stc
pop
pop
dec
and
imul
cmc
test
sti
cmpsl
pop
or
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
mov
je
inc
mov
pop
jb
add
mov
out
push
test
or
fistpll
cmpsl
cmc
jmp
scas
xchg
sbb
xchg
mov
mov
mov
jle
fildll
or
and
rolb
push
xchg
movsb
mov
inc
in
mov
xlat
xchg
test
push
dec
movsb
les
pop
inc
cmpsl
lcall
mov
pop
or
sbb
gs
and
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
stos
push
adc
mov
out
cmp
out
mov
out
loopne
ret
out
mov
outsl
mov
aaa
fnstenv
pushf
adc
and
jg
dec
es
test
insl
inc
xor
dec
or
adc
cwtl
mov
cmpsl
addr16
lahf
lcall
mov
mov
add
setle
xor
mov
cltd
pop
or
std
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
stos
sub
xchg
gs
outsb
pop
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
xchg
dec
iret
ror
cmc
arpl
xchg
mov
fistpll
mov
js
call
iret
adc
ret
and
popf
int
mov
mov
int3
pop
nop
xchg
test
popa
mov
xorl
subb
jmp
jnp
dec
cmpsb
mov
xor
dec
int
adc
test
xor
arpl
iret
inc
fistpll
mov
test
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
fimull
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
mov
push
adc
shl
arpl
lds
sbb
insl
idivb
out
sub
sub
mov
dec
pop
sahf
cmpsb
and
sbb
icebp
mov
lret
imul
fstpl
mov
pop
adcl
jle
in
out
add
ret
jge
outsl
cmp
xchg
mov
enter
test
leave
push
fidivrl
jp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
cmpb
xchg
sub
popf
out
mov
xor
push
jne
les
loopne
ret
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
sub
mov
xchg
push
push
aad
or
push
pop
or
lea
mov
push
jno
fbld
mov
loope
pop
lods
push
xchg
mov
push
and
push
xor
dec
adc
adc
sub
lods
pop
sbb
jo
fists
xchg
and
lods
inc
addr16
inc
mov
cmp
inc
xchg
cmpsl
or
mov
ficomps
arpl
or
push
cmp
test
xchg
sub
mov
in
push
mov
jb
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
dec
scas
addr16
pop
add
cwtl
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
movsl
or
cmc
pop
into
push
dec
or
lret
movsl
gs
or
pop
push
stos
xchg
scas
lods
pop
imul
pop
adc
popf
ljmp
mov
mov
push
aam
sbb
jge
dec
inc
sbb
shlb
jnp
xchg
and
in
mov
sti
and
mov
and
mov
push
mov
jle
lds
pop
movsl
arpl
incl
or
cmp
jae
or
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
pop
movsl
inc
mov
negb
aas
sti
sti
and
test
jl
adc
push
hlt
mov
popa
dec
mov
into
aaa
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
adc
ss
sahf
add
mov
push
mov
push
cmpsb
lret
outsb
mov
in
and
push
scas
sti
sbb
push
add
jae
pop
lods
cmp
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
test
inc
stos
jge
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
mov
cmp
je
inc
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
cs
lahf
jmp
loope
lahf
stc
cwtl
shll
pop
xor
jnp
sbb
xchg
andnps
sbb
push
inc
push
pop
lock
or
xchg
xchg
adc
adc
xor
divl
rol
les
mov
shlb
fsts
inc
pop
mov
push
sarb
adc
mov
adc
sbb
mov
enter
pushf
ss
pop
fnstenv
mov
or
cmp
adc
lcall
jo
mov
push
mov
aad
negb
roll
in
mov
das
sub
out
fists
out
inc
cli
xchg
adc
mov
mov
dec
sub
or
test
adc
mov
xchg
mov
xchg
test
jae
inc
jmp
test
sub
ret
enter
fs
add
cmpb
xchg
sub
popf
out
mov
xor
push
jne
les
loopne
ret
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
sbb
dec
mov
insb
push
sub
dec
dec
pop
insb
push
in
ficomps
fnstcw
sub
insl
mov
movsl
sub
loopne
stos
mov
sahf
jns
jecxz
sub
add
roll
adc
push
push
and
mov
nop
sbb
ja
test
loope
movsb
fstl
fdivl
lock
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
push
push
sub
cmp
and
mov
inc
insb
je
out
xor
negb
out
cmp
mov
xchg
sbb
sar
lahf
pop
stc
cmp
jno
aad
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
cmc
mov
mov
test
jp
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
mull
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
data16
cs
movsl
icebp
xor
mov
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
rcrb
xchg
dec
xorl
lret
add
mov
xor
push
jne
les
jg
cmp
mov
stos
js
std
scas
xchg
sahf
xor
and
adc
push
or
int3
jecxz
cmp
insb
push
sub
push
mov
jb
sbb
mov
and
push
dec
test
sbb
mov
rcr
mov
fildll
push
sahf
jns
loope
pop
fisubrl
inc
dec
fsub
ja
in
jg,pn
shl
je
gs
nop
push
loope
leave
insl
dec
mov
jle
int3
cmp
repz
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
test
cmp
inc
jmpw
mov
lret
in
mov
mov
or
mov
add
aad
bound
cltd
add
mov
out
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
cmpsl
push
test
push
mov
and
in
xlat
jnp
aas
xchg
push
fninit
lock
arpl
fmull
testl
loop
sbb
outsb
movsl
aam
cmp
test
mov
mov
repnz
inc
push
int
add
decl
ret
lret
movsl
jno
adc
test
mov
sbb
mov
push
inc
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
outsl
addr16
adc
outsl
iret
fxtract
cmc
jge
outsl
dec
and
imul
mov
popa
stos
add
xor
jb
jmp
xlat
xchg
push
add
daa
sti
add
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
lds
mov
les
cmp
lock
rcr
jecxz
movsl
mov
cltd
jo
or
inc
imul
dec
sbb
es
push
xchg
inc
jmp
ficomps
adc
lret
push
sbb
mov
and
call
dec
inc
lret
jp
and
lods
add
fsubl
mov
mov
int3
mov
scas
roll
adc
dec
lods
cmc
xor
xor
mov
nop
fidivs
lds
xchg
adc
mov
add
rcrl
repnz
fwait
push
dec
mov
and
adc
push
adc
and
insl
out
sbb
inc
add
pop
stos
ret
mov
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
lahf
out
xor
aam
adcb
shl
fwait
loopne
test
and
sub
jb
mov
cmc
cmp
cmc
mov
xlat
dec
push
jmp
adc
ljmp
and
jl
adc
and
mov
dec
sbb
mov
push
lcall
mov
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
cmpsb
lds
xlat
and
inc
movsb
xchg
insl
int3
push
test
iret
iret
jo
fists
and
outsb
ljmp
cmp
enter
ret
inc
scas
dec
repz
ljmp
inc
cmpsb
js
lock
xchg
xchg
cltd
xor
les
or
cmp
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
rorl
mov
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
icebp
fldt
jnp
cmpsl
mov
xchg
xlat
stos
mov
xchg
cmpsl
loope
mov
aaa
pop
push
lods
xchg
jae
lret
inc
fiadds
jle
mov
lcall
adcl
cmp
cli
xchg
add
jns
and
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
stc
out
je
inc
mov
pop
jb
add
mov
out
push
out
loope
xchg
movsl
out
or
out
xlat
xor
sub
mov
iret
rorl
movsl
ds
mov
push
lock
mov
pop
arpl
mov
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
sbbl
arpl
sahf
je
popf
mov
cmp
jp
add
add
mov
sbb
sub
orb
xor
mov
pushf
dec
and
inc
xor
lcall
rclb
jg
inc
in
repz
ss
popf
lret
push
lds
inc
es
iret
push
mov
fsubl
add
inc
inc
mov
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fdivs
fsts
aam
or
sbb
mov
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
pop
sub
or
pop
cmpsb
dec
xor
neg
inc
fwait
divl
inc
les
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
pop
adc
shlb
adc
test
push
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
pop
subb
adc
mov
mov
or
cmp
jb
pop
add
call
in
cmpb
shrb
mov
in
jge
adc
push
inc
sub
aas
js
jnp
inc
orl
andl
push
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
and
testb
fucomi
hlt
std
mov
sti
and
test
stc
sub
push
hlt
mov
movsl
mov
sahf
subb
dec
pop
mov
js
inc
repnz
mov
test
gs
pop
sub
les
popa
stos
int
dec
mov
jle
dec
inc
popf
ja
lret
inc
in
dec
sbb
jne
addr16
flds
sub
sahf
jp
add
test
jl
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
test
pop
mov
mov
enter
in
xchg
incb
jmp
xchg
xchg
mov
scas
mov
out
dec
cld
lods
xlat
xchg
test
mov
mov
lds
jg
lahf
lods
xlat
lret
cwtl
shll
sub
mov
nop
lds
cmpsb
dec
pop
or
mov
pop
xor
xor
mov
popf
movsl
dec
sbb
jmp
popa
mov
cmp
rol
pop
add
rcrb
xlat
fs
orb
lds
xchg
movsl
aam
cmp
test
mov
mov
repnz
inc
push
int
add
decl
ret
lret
movsl
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
and
test
xor
movl
fld
out
daa
inc
ret
rolb
scas
cwtl
cld
inc
jge
pushf
repz
out
lock
mov
xor
je
fidivl
pop
push
sub
inc
faddl
pop
aad
fwait
mov
mov
xor
add
test
dec
and
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mov
outsb
xor
push
inc
push
push
or
and
das
push
jno
xlat
jbe
sbb
lock
iret
push
nop
sub
add
push
xchg
ja
in
addl
xchg
and
sub
dec
stos
inc
in
pop
lods
mov
mov
fwait
mov
popa
shr
pop
sub
cmpxchg
out
jno
insb
out
pop
mov
out
or
cld
icebp
mov
or
enter
cmp
mov
ret
dec
fcoms
outsl
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
mov
dec
adc
je
mov
jo
xor
je
jo
xorl
lds
fldt
iret
ret
adc
or
push
dec
push
push
std
sbb
insb
jne
inc
xor
jmp
lret
inc
ret
add
jnp
mov
es
test
sahf
mov
in
mov
cli
fwait
lret
repz
jp
ss
push
out
mov
inc
pop
push
addb
mov
mov
add
push
xor
stos
add
pop
or
mov
iret
js
jle
cmp
leave
test
pop
enter
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
cwtl
xor
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
push
movsb
mov
aad
push
inc
test
mov
jno
popf
sti
push
add
lods
adc
dec
push
adc
mov
push
in
lock
popa
shrl
push
cmp
push
cmpb
mov
cmp
xor
sbb
loopne
mov
je
mov
push
xlat
imul
lods
mov
push
pop
call
imul
fsub
jbe
lods
push
outsl
sbbl
pushf
mov
out
fxch
loope
ror
ret
rcrl
fwait
lods
jle
dec
xor
pop
rcll
inc
pop
xor
cmp
repnz
fimull
cmp
xor
pusha
cmp
das
rorl
adc
sub
add
cmc
test
xchg
loopne
push
mov
lret
cmc
shrl
jbe
jp
fisubrs
ljmp
popa
push
jecxz
xorl
add
stc
mov
and
inc
push
inc
cmp
ret
mov
dec
in
pop
and
fmull
pop
outsl
cs
xor
add
ret
les
push
add
dec
cmpsl
cmp
sbb
aas
ja
int
push
inc
inc
add
mov
jne
gs
cwtl
ret
cmpsb
ljmp
and
and
sti
sbb
pop
jne
push
sahf
loope
lret
xor
jmp
mov
and
cmp
imul
or
xor
lret
jnp
lret
pop
jmp
rolb
dec
push
jbe
lods
ret
aad
mov
add
inc
mov
leave
pop
jg
fs
in
xchg
jl
sbb
fistl
popl
push
jo
lods
dec
subb
mov
pop
jb
mov
or
xchg
and
movsl
inc
mov
push
xabort
mov
data16
out
or
dec
sbb
les
or
dec
fisttpl
xchg
shr
mov
ss
data16
push
cmpb
bound
sub
xchg
add
mov
xchg
sub
pop
call
iret
lahf
pop
push
jne
pop
loopne
incl
sub
jo
flds
hlt
dec
inc
sbb
rolb
popa
lcall
jmp
fmul
inc
mov
int3
xchg
sbb
std
fistpll
cmc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
gs
pop
xor
mov
cs
pop
cld
xor
cs
fadds
mov
dec
xchg
jge
xchg
or
test
shrb
movsl
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
xor
push
jne
les
loopne
ret
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
push
mov
insl
aad
or
push
data16
lea
ljmp
push
pop
adc
inc
aas
lea
jns
jmp
push
pop
fsub
ja
in
addl
imul
scas
push
and
sub
jno
xlat
fs
mov
call
jo
lret
mov
popf
push
push
sub
aas
js
cli
hlt
inc
orl
andl
push
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
and
insl
sbb
fucomi
hlt
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
testl
ficoml
xorb
mov
dec
decb
aad
aad
xchg
mov
cmpsb
shlb
mov
pop
or
lea
cmp
mov
adc
inc
cmp
movsb
shll
lock
dec
push
mov
aam
add
or
xchg
addb
mov
fsubrl
or
mov
lcall
stos
lods
xchg
das
scas
int3
sub
in
xchg
aas
cmpsb
cs
push
dec
add
jb
rorl
cld
in
and
add
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
aam
pop
mov
enter
aas
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
insl
aad
push
fistl
addb
ljmp
and
adc
cmp
adc
xchg
xor
dec
mov
cmpl
add
add
add
push
xchg
int3
xchg
filds
adc
mov
lds
xchg
or
inc
fdivrs
iret
ror
mov
push
rcrb
in
cmp
mov
and
adc
mov
push
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
subb
or
add
mov
add
push
test
cs
push
test
or
shrl
int3
push
xor
lds
loopne
shrl
stos
or
mov
iret
cmpsl
mov
data16
sbb
outsb
aaa
adc
mov
xchg
ret
push
iret
ljmp
xlat
int
loopne
cmp
fisubs
test
ret
cli
test
dec
roll
xor
xchg
xchg
fistl
test
add
or
lea
pop
lds
pop
stos
push
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
cs
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
movl
xchg
fnstcw
lods
mov
jge
pushf
cmp
mov
or
sbbl
jmp
stos
std
cld
jns
rcrl
rorb
jb
fisttpll
cmp
push
dec
pop
movsb
ret
sahf
sahf
xchg
sbb
js
xchg
xor
in
or
or
jns
dec
sti
mov
inc
fisttpll
adc
popl
pop
or
testb
jle
mov
or
pop
add
mov
mov
cmc
sbb
cwtl
and
jo
pop
test
movl
faddl
jp
mov
mov
ret
dec
sbb
mov
nop
mov
dec
and
mov
mov
test
add
inc
sbb
shl
jecxz
movsl
mov
cltd
jo
pusha
aas
js
push
shl
xor
in
pop
jbe
fwait
ds
push
inc
in
es
push
or
jmp
mov
outsb
mov
rorl
imul
jb
cmpsb
ja
mov
sbb
or
dec
lret
dec
ret
out
mov
or
movsb
js
jbe
xor
fisttpll
mov
cmp
std
cli
jnp
inc
mov
cwtl
add
and
xchg
xchg
pop
inc
mov
jno
pop
icebp
fs
lcall
dec
fsts
pop
pop
mov
arpl
jle
scas
pusha
mov
sub
adc
push
loop
je
mov
jecxz
sbb
pop
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
lods
cli
pop
test
cmp
adc
mov
mov
cmp
jp
add
cltd
sub
adc
push
daa
add
lods
cmpsb
sbbb
or
cmpsb
ljmp
ret
mov
in
imul
dec
and
mov
scas
das
cmpsb
in
enter
sub
sub
pop
mov
mov
je
mov
repz
xchg
aaa
jp
add
dec
and
adc
fs
push
inc
mov
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
push
stc
and
loopne
mov
mov
sbb
xor
nop
sub
sbb
inc
rcrl
ja
rcr
add
push
pop
add
fisubs
jnp
std
xor
cmpsl
jecxz
jns
cmc
mov
cwtl
cmp
xchg
adcb
incb
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
js
adc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
out
outsl
or
clc
cmc
inc
in
out
das
dec
cmpsl
cmp
or
idivl
sbb
lret
xchg
mov
fsubrp
scas
mov
sub
adc
sbb
popf
outsl
pop
into
add
and
hlt
xor
xchg
pop
push
add
xchg
cwtl
inc
xlat
adc
ret
mov
pop
jp
call
clc
test
adc
mov
hlt
xor
adc
ret
ficomps
mov
push
sub
shll
testb
pop
mov
pop
adc
fsubs
adc
test
push
jnp
lea
orl
mov
and
jecxz
ljmp
test
xor
shlb
dec
sub
or
inc
pop
sahf
enter
dec
xor
ljmp
jo
sub
les
pop
mov
scas
add
ret
jg
sbb
add
out
cmp
xor
adc
dec
mov
adc
lret
inc
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
rorl
mov
loopne
add
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
bound
push
push
push
push
mov
inc
ret
pop
ficomps
pop
push
fimuls
mov
pop
mov
and
into
and
adc
inc
ds
lret
ljmp
push
stc
and
pop
mov
add
vandps
jg
imul
push
es
ret
out
das
cmpsl
jb
test
scas
data16
filds
push
inc
imul
jecxz
fnstcw
inc
std
rorb
mov
in
sub
push
xchg
xor
sbb
ret
lret
into
loopne
pop
outsl
jae
dec
inc
nop
loop
out
lahf
js
fldl
mov
movl
int3
test
push
popa
inc
imul
inc
inc
push
push
xor
ret
xorb
inc
test
test
lds
jge
xor
or
mov
orl
xor
pop
or
jl
loop
jg
or
xchg
jnp
leave
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fisubs
jp
movl
sti
stc
cli
in
test
or
pop
sbb
outsb
or
and
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
dec
push
xchg
shr
jo
sbb
xchg
into
pop
mov
repz
cmp
rcrb
cmp
les
push
mov
dec
je
xor
push
or
pop
iret
rorl
mov
rclb
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
adc
pop
add
inc
cwtl
dec
and
mov
mov
test
add
in
mov
js
mov
cltd
jo
lock
jge
jg
cmp
pop
mov
lds
sub
repz
and
adc
and
lods
fisubrl
or
and
lahf
aad
movsb
push
out
xor
movsb
shll
lock
loope
pop
pop
mov
addl
mov
sub
mov
movsl
insl
outsb
pop
cltd
and
stos
add
jmp
scas
sub
fisubl
jg
rolb
arpl
sub
lock
das
pop
mov
es
push
inc
das
push
iret
xlat
hlt
jbe
mov
call
test
sub
scas
push
movl
in
jle
fildll
or
and
sub
dec
ret
xchg
insb
adc
push
subb
xchg
dec
dec
xor
adcb
jno
pop
dec
fwait
jno
sbb
xchg
xchg
adc
sbb
inc
or
aas
xchg
daa
and
int3
mov
or
movsl
dec
shrb
ds
inc
orb
pop
fwait
vandnps
and
inc
sbb
scas
mov
mov
jno
dec
add
cmp
add
imul
lods
test
push
daa
sub
lcall
fisubrs
push
jbe
sub
lea
mov
fisttps
mov
mov
pushf
jmp
jo
mov
pop
jb
add
inc
pop
or
jmp
imul
ds
je
out
pop
int
inc
mov
jns
mov
xor
movl
call
int3
pop
sub
pushf
add
jmp
add
and
pusha
pop
add
mov
sbb
lds
push
pop
xchg
push
popa
push
test
sahf
fwait
inc
push
loopne
cld
sub
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
testl
sbb
jns
lds
nop
lds
push
push
mov
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
pop
insl
dec
pop
xchg
jbe
or
push
push
push
xchg
push
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
xchg
rcll
loop
push
popl
scas
out
cmp
out
mov
xor
jbe
jae
test
popf
icebp
lfs
xchg
xchg
jle
push
jo
or
xor
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
xchg
mov
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
sub
xor
repz
sbb
push
cmp
je
test
stos
xchg
push
aam
ljmp
sti
cmp
int3
es
mov
popf
ljmp
cli
sub
cs
stos
and
dec
cli
es
stos
lds
das
mov
enter
dec
mov
iret
dec
movsb
ljmp
inc
repnz
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
pop
xchg
gs
push
aas
fwait
lret
in
mov
mov
or
mov
add
fucom
bound
cltd
add
mov
int3
out
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
iret
shll
add
jae
and
mov
popa
jmp
mov
add
faddl
sbb
sarb
jb
rcrl
stc
lds
test
fbstp
je
pop
iret
sbb
rcr
loopne
cmpsl
dec
add
xchg
mov
cmp
adc
mov
xchg
mov
sbb
mov
cmpsb
int
mov
pusha
cmp
lahf
clc
loopne
jno
out
pop
mov
xor
outsb
adc
das
jo
sbb
je
jge
cs
sub
test
push
stos
and
xchg
mov
sub
mov
jns
ds
sub
out
mov
lahf
lea
testb
cmp
mov
and
adc
shll
popf
cltd
mov
addr16
imul
pusha
mov
or
mov
pop
orb
cmp
fists
add
fiaddl
pop
out
mov
flds
je
mov
xor
dec
sbb
sub
cmp
stos
push
insb
sarl
repnz
cmc
sbb
out
push
cld
mov
bound
data16
scas
pop
rcl
cltd
imul
mov
lods
sahf
xchg
lea
jae
pop
les
sub
insb
xchg
xchg
and
cltd
pop
cmp
loop
dec
movsb
jecxz
mov
add
arpl
testl
in
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
jbe
fwait
sub
adc
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
jecxz
inc
dec
mov
cli
ret
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
out
lahf
movsb
leave
pop
subb
mov
mov
fmul
cwtl
in
jae
push
cmp
push
xchg
add
inc
inc
mov
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fmuls
decl
jg
fsts
aam
or
sbb
mov
fwait
push
dec
mov
mov
adc
and
sahf
xchg
sarb
out
inc
sbb
pop
in
lock
std
pop
push
xchg
int
jno
jecxz
pop
push
rclb
add
xorb
add
insb
cmpsl
xchg
ret
dec
sahf
dec
movsl
sbb
pop
inc
inc
lods
aad
adc
inc
ret
mov
xlat
pop
pop
inc
or
in
clc
sti
popf
arpl
lock
ds
adc
inc
push
adc
les
orl
mov
push
pop
jbe
fwait
ds
push
inc
in
stos
mov
push
or
jmp
into
inc
inc
fbstp
jns
loope
lret
aam
gs
xchg
cwtl
nop
std
pop
mov
mov
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
lea
ret
sahf
ficomps
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
call
fldcw
test
loopne
test
aas
sbb
bound
lea
mov
mov
xor
insb
loop
loope
xchg
fdivrs
mov
daa
lahf
pop
movsl
ficomps
stc
lea
mov
insl
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
cwtl
inc
xor
test
aas
movsb
lds
nop
lds
clc
mov
sahf
xchg
mov
mov
inc
addb
lods
mov
test
roll
push
outsl
test
loop
xor
add
aam
adc
ja
test
je
arpl
pop
test
pop
aam
xor
and
inc
outsb
sub
push
sub
mov
loop
add
sarl
cli
repz
fnsave
bound
sbb
mov
jmp
aad
jmp
out
jno
lods
pop
jae
adc
sub
jno
dec
movsb
imul
jne
out
sub
mov
xrelease
mov
dec
sbb
lea
js
or
cmp
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
pop
int
or
jns
cli
aam
mov
lret
add
shll
or
test
xchg
and
cmp
sbb
adc
xor
push
add
add
andb
js
sbb
mov
mov
xor
push
jne
les
loopne
ret
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
push
mov
insl
aad
or
push
data16
lea
lahf
jno
pop
cmp
mov
xlat
movsb
rol
mov
pop
lods
push
xchg
mov
addl
mov
cmpsb
dec
sub
cmpsl
pop
pop
mov
lods
scas
das
test
inc
mov
rcrl
ret
add
js
jle
cmp
jge
pop
enter
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
cwtl
xor
inc
int
jns
mov
mov
or
cmp
adc
incb
clc
lock
lock
or
add
mov
sub
or
mov
adc
and
push
dec
push
adc
jo
push
sbb
push
and
add
mov
and
daa
xor
mov
push
or
sub
or
mov
into
push
mov
shlb
adc
movsb
xchg
test
push
fucomp
dec
pop
inc
rorb
xchg
repz
test
out
popa
xlat
icebp
add
inc
fsubl
cltd
rcr
nop
std
pop
adc
les
and
sub
fcompl
aad
xor
xor
fwait
movsb
pop
das
jle
scas
jb
ss
inc
pop
sub
push
sbb
inc
imul
iret
aad
inc
scas
mulb
sbb
pop
dec
icebp
iret
test
pop
nop
pop
aam
sbb
push
outsl
cmp
ret
xchg
shl
cmp
bound
gs
js
insb
push
inc
inc
mov
imul
in
cmc
nop
outsl
mov
orb
or
imul
fwait
add
iret
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
dec
sbb
mov
call
push
xlat
sub
jbe
pop
mov
dec
adc
jg
shl
je
pop
jne
pop
pop
aam
add
push
scas
push
and
sub
popf
mov
sahf
pop
and
xchg
xchg
test
push
inc
jg
jle
xor
rcll
pop
inc
or
cltd
push
push
mov
sti
adc
dec
notb
add
js
xlat
mul
jle
mov
jne
mov
nop
fs
cld
xor
or
and
or
mov
add
in
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
ret
call
sti
arpl
adc
out
in
add
sbb
int3
sub
push
or
hlt
adcb
pop
imul
fisubs
test
push
lcall
loop
orl
cltd
outsl
aad
sbb
bound
push
xchg
in
inc
mov
test
sub
popa
or
xchg
xchg
iret
lret
lret
lds
fsubr
jb
sbb
je
push
sarb
add
mov
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
push
leave
pop
jecxz
in
push
cmp
sbb
daa
adc
rcrb
mov
es
push
insl
aad
dec
and
stos
lea
push
gs
mov
loope
fwait
aad
lahf
cmpsl
jo
fnsave
mov
add
jnp
mov
inc
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
int3
testl
jmp
enter
fisubrl
jnp
inc
mov
add
adc
sub
repnz
mov
jbe
adc
scas
lahf
push
lds
xchg
inc
test
daa
dec
leave
movsl
jno
pop
fstpl
jge
pop
dec
not
lahf
std
cwtl
sar
shl
xchg
and
push
andl
mov
andl
leave
lods
push
iret
push
inc
cwtl
jo
fdiv
aaa
sub
sbb
shll
push
xchg
mov
sub
mov
orl
aam
dec
fmull
xchg
mov
leave
jp
lods
cmp
push
test
dec
sbb
pusha
mov
out
stos
sbb
movsb
pop
imul
lods
push
fmuls
xchg
test
push
push
fisttpll
mov
stos
les
aam
add
fs
mov
adc
sti
xchg
inc
xlat
pop
mov
dec
out
and
mov
or
sbb
cs
xchg
mov
dec
xchg
jo
sub
in
jp
cmp
in
loopne
lea
vpshuflw
or
dec
test
pusha
enter
rclb
add
enter
mov
mov
push
hlt
mov
rorl
jg
mov
adc
mov
sbb
or
in
test
jne
push
xchg
xor
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
ds
inc
xorl
int3
add
mov
mov
dec
cmp
int
imul
in
mov
scas
sarb
das
cmpsb
mov
mov
push
rorl
and
dec
xchg
sub
mov
mov
xchg
incl
or
cmp
jae
fnsetpm(287
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
dec
pop
movsl
inc
mov
negb
aas
sti
sti
and
test
jle
adc
push
hlt
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
mov
hlt
push
aas
push
xorl
xor
mov
dec
ficomps
test
push
data16
test
jns
popa
and
adc
and
mov
in
push
mov
scas
mov
int3
stc
dec
push
out
and
add
aam
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
fwait
movsb
pop
das
jle
scas
inc
mov
popa
das
jg
iret
gs
andl
add
inc
cltd
push
shlb
xchg
xor
cli
pop
test
ds
mov
or
fidivrs
sbb
imul
mul
inc
outsb
pushl
fldt
mov
rorl
nop
test
mov
lret
insl
cmp
out
and
mov
mov
jg
cmp
adc
mov
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
pushf
dec
and
inc
mov
test
rclb
jg
inc
in
jmp
popf
shl
or
testb
mov
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
repz
popf
fimuls
mov
jae
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
aad
jns
mov
call
sub
jge
pop
lods
test
sbb
xor
or
add
lock
or
add
mov
sub
or
dec
js
mov
bound
dec
cmp
push
mov
cld
mov
sbb
xchg
xchg
adc
sbb
xchg
and
daa
adc
mov
cmpsb
sbb
mov
sub
mov
xchg
sub
push
mov
mov
adc
imul
sub
push
aaa
push
lea
mov
ljmp
in
mov
mov
adc
sbb
insl
cwtl
and
pop
shrl
test
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
mov
ret
and
sahf
xchg
sarb
jae
add
and
mov
xchg
aas
movsl
dec
fistl
sbb
xor
insb
dec
xchg
xor
aas
scas
or
es
pop
cs
add
and
push
lret
inc
ret
mov
pop
or
cwtl
es
and
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
and
cltd
lret
lcall
sbb
out
push
cld
mov
sarl
cmp
aam
or
sub
lods
cmpsl
sub
sub
jne
insl
jle
popf
enter
lods
sahf
lds
lea
fildl
aaa
jp
scas
mov
enter
jmp
testl
pop
leave
inc
xchg
mov
inc
icebp
addr16
fdivrs
rcr
nop
outsb
mov
out
cld
cmp
cmp
jnp
testb
fucomi
hlt
std
mov
sti
and
test
jns
adc
push
hlt
mov
fimuls
imul
in
int
lret
sti
xor
inc
xchg
in
mov
push
mov
xchg
into
or
cmp
cltd
fcoml
das
xchg
leave
addr16
cwtl
pop
push
setno
imul
fstl
aad
push
orb
aaa
adc
and
xor
ljmp
mov
mov
mov
mov
mov
sbb
pop
add
pop
sbb
pop
mov
xchg
sbb
xchg
stos
ja
or
jl
loopne
into
xor
das
movsl
int3
ljmp
dec
pop
jo
lret
sti
out
test
xor
jae
jg
and
fadds
jg
out
das
add
xchg
lcall
idivl
sbb
bound
jecxz
jns
ret
push
jae
fidivrs
xchg
inc
jl
xchg
add
fadd
pop
arpl
out
xchg
test
test
ret
addr16
sub
or
sub
adc
rcrl
dec
mov
or
fucom
cli
xor
roll
xchg
std
xor
call
scas
push
pop
stos
gs
add
cli
jecxz
cmc
add
and
rcll
in
outsl
in
push
dec
ret
scas
arpl
push
int
inc
test
jne
call
iret
imul
xchg
pushf
mov
mov
je
xor
xchg
mov
and
sub
outsl
push
lods
and
cmpsl
fistpl
ret
inc
sbb
sbb
sahf
xchg
jl
call
je
dec
add
xchg
popf
pop
xor
adc
rolb
sub
xchg
xchg
aas
inc
mov
xchg
and
jbe
aad
cmc
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
arpl
es
mov
cs
add
and
push
inc
push
adc
inc
mov
sbb
cmpsb
and
add
push
mov
mov
push
aam
ss
mov
cmpl
mov
insl
cmc
imul
test
movsl
je
push
les
push
int
inc
mov
and
lahf
jp
add
repnz
inc
jno
jno
dec
movsb
mov
jecxz
xor
xchg
dec
int
ret
pop
and
push
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
push
adc
and
insl
out
pop
sarl
jle
adc
lea
outsb
jmp
in
add
xor
outsb
add
jmp
lds
xlat
invd
mov
push
add
bound
lods
lret
push
pop
push
test
mov
out
push
xor
push
cmp
or
dec
push
fs
inc
mov
mov
adc
dec
mov
inc
mov
insb
movsl
sub
pop
mov
adc
inc
mov
xor
dec
les
sub
pop
mov
jno,pn
sub
movsbl
pop
repz
outsb
mov
daa
and
int
jae
cmp
pop
or
mov
iret
js
jle
mov
jge
pop
enter
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
cwtl
xor
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
inc
and
push
idivl
int
loop
lret
and
push
sbb
and
add
mov
mov
add
outsl
hlt
jmp
decb
push
insb
jne
inc
xor
cmp
je
imul
call
mov
add
sbb
xchg
std
pusha
and
fmull
into
sahf
jg
stos
xorl
push
jg
shlb
jnp
lock
mov
data16
mov
in
in
xchg
paddusw
xchg
cmpsl
dec
cwtl
xchg
xor
fucomi
mov
adc
dec
repnz
sbb
inc
mov
imul
fstl
out
daa
mov
stc
fildll
ror
jg
dec
movl
jno
pop
rcrl
push
jecxz
in
fsts
out
mov
popf
jae
adc
adc
movsb
iret
out
xor
nop
lret
cmpsl
mov
sbb
cli
inc
mov
ja
sbb
test
loopne
inc
fcomip
fsubr
loopne
sbbl
ret
inc
sahf
fistpll
rolb
gs
rcrb
repnz
mov
int
inc
sbb
xchg
jns
bnd
in
and
int3
xchg
sbb
std
fistpll
cmc
mov
mov
test
in
andb
cmpsb
mov
aam
movsb
xor
jmp
sarb
stos
pop
xchg
repz
ret
cmpsl
inc
and
in
jge
pop
adc
in
add
iret
jne
cld
jae
sub
xchg
push
fcmove
xchg
hlt
ja
std
outsl
addr16
call
rcrl
mov
add
push
pop
into
vpshuflw
mov
jno
popf
push
sbb
gs
clc
push
dec
inc
dec
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
sub
imul
call
push
popf
mov
cmp
jp
add
add
mov
sbb
xor
mov
arpl
mov
jg
sbb
push
push
mov
sub
jne
adc
call
orl
hlt
cwtl
rolb
push
sbb
jg
out
sub
sub
out
sub
dec
mov
stos
movsl
pop
jno
lds
inc
lds
mov
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
mov
je
decl
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
cmp
popa
dec
pop
mov
sbb
jae
nop
and
xchg
inc
gs
sbb
jp
out
outsb
jp
add
pop
mov
or
lahf
ret
adc
adc
xchg
xchg
daa
sub
into
rcrb
fucomi
mov
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
or
fisubl
cmp
inc
push
ret
call
ds
mov
push
lret
jo
fnsave
leave
roll
and
dec
inc
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
fdiv
dec
lods
jle
cltd
je
dec
enter
fisubrl
jnp
inc
mov
add
adc
cs
add
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
fs
outsl
data16
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
and
ret
lahf
sbb
int3
push
xor
push
cmp
insl
or
jmp
add
das
mov
paddusb
xchg
dec
les
test
std
pop
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
rolb
fmuls
cmp
add
or
xor
jb
fisttpll
cmp
lds
sbb
das
pop
icebp
or
cmp
fcmovne
loop
add
sub
addl
mull
lret
jne
gs
sub
rol
push
adc
xchg
int
loopne
dec
sub
pushf
int
bound
icebp
movl
call
int3
pop
rorb
test
popa
inc
imul
popa
or
enter
adc
jp
incb
mov
sbbl
dec
int
jle
pop
mov
add
add
test
lock
clc
add
pushf
cld
ds
dec
push
pop
ljmp
cmpsb
sub
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
test
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
leave
xchg
jo
enter
dec
loopne
call
push
rcl
test
mov
pop
cs
icebp
fcomi
movsb
dec
int3
lahf
stc
cwtl
shll
or
add
insb
adc
inc
shlb
vmovdqu
faddp
pop
mov
mov
xchg
sarl
lods
xor
or
cmp
or
add
lock
add
mov
cmc
sub
mov
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
aad
push
sahf
aaa
push
testl
roll
arpl
jge
les
in
mov
pop
insl
xchg
sub
mov
push
inc
ret
out
adc
jnp
cmp
sub
inc
sbb
dec
ret
xlat
pop
mov
dec
out
push
testl
pop
leave
inc
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
sbb
adc
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
repnz
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
mov
fcompl
aad
xor
xor
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
sbb
je
jge
in
push
iret
hlt
ss
outsl
jae
fsubrp
cmp
scas
xchg
scas
out
cmp
and
push
adc
mov
outsb
inc
scas
andb
mov
sbb
or
hlt
mov
aad
imul
popf
mov
sbbl
int3
loop
lods
imul
mov
into
add
nop
sub
sbb
test
lcall
inc
mov
or
and
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
pop
shll
push
jg
shl
je
sub
in
stos
xchg
mov
scas
push
and
sub
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
jecxz
cmove
jae
xchg
adc
movsl
movsb
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
dec
sub
cld
cltd
outsl
sbb
and
test
cmp
adc
push
hlt
mov
popa
dec
mov
into
aas
stos
shll
inc
xchg
in
mov
insb
push
sbb
inc
mov
mov
test
dec
js
icebp
pushf
mov
fsubrl
push
mov
shlb
test
push
stos
subl
cmpsl
pop
sub
adc
lcall
loop
arpl
aaa
jl
cli
je
mov
and
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
adc
adc
fisubrl
jnp
inc
mov
mov
inc
out
bound
clc
dec
mov
fs
mov
adc
xchg
je
movsb
lods
addr16
outsl
mov
enter
ljmp
adc
imul
push
push
sarl
fs
adcb
in
imul
loopne
dec
scas
je
jo
xorl
jg
aas
in
and
testl
xchg
pop
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
fwait
movsb
jle
movsb
fisubrl
inc
cmc
sbb
std
fistpll
cmc
mov
mov
test
add
pop
inc
inc
or
push
inc
lcall
sbb
or
ljmp
pop
mov
mov
arpl
xor
mov
pop
out
imul
repz
sbb
and
imul
leave
pop
iret
shl
idivl
sbb
lret
xchg
mov
lods
push
jae
mov
rcll
loope
jg
lahf
lods
xlat
xor
into
add
and
hlt
xor
xchg
pop
lock
aaa
call
subb
xchg
dec
inc
insl
sub
clc
mov
in
gs
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
add
rolb
adc
popa
push
sub
lods
xchg
sub
adc
std
and
mov
jmp
dec
das
mov
xchg
cld
loopne
xor
ret
shl
outsl
xchg
bound
sbb
andb
stos
lds
sbb
mov
xor
aad
in
cmpsb
aas
stos
sbb
sub
mov
jne
jns
cmpsb
out
or
and
pop
jge
sub
or
fdivs
jmp
sbb
rcrb
push
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
mov
cmpb
les
and
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
push
es
leave
inc
add
add
sbb
into
in
xor
test
and
mov
xor
xor
jbe
xchg
mov
mov
inc
orb
ljmp
sub
sub
bswap
aam
ja
in
xor
cmpsb
add
sbb
jns
pop
mov
mov
lds
xorb
dec
subl
jae
and
mov
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
jne
mov
addr16
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
stos
stc
sbb
mov
insl
lcall
push
out
jle
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
fisttps
fldcw
ljmp
lds
sbb
mov
adcl
jbe
sub
sub
add
enter
rcrb
add
imul
lea
jo
cmp
pop
out
cld
jb
mov
mov
sub
lcall
adc
xchg
data16
out
cmpsl
mov
jg
repz
lods
lret
aam
ret
cmp
mov
sbb
jo
or
mov
add
push
add
xchg
sarl
in
adc
xchg
cltd
mov
ljmp
test
sbbb
mov
jp
movsl
add
test
jp
lcall
daa
and
iret
mov
sbb
insb
mov
push
lcall
scas
cmp
mov
out
stos
mov
lods
imul
adc
pushf
xor
imul
mov
scas
stos
rcr
cmpsl
mov
stc
insl
mov
into
add
push
lahf
pop
test
es
rcrb
adc
pop
and
repnz
fmull
sti
add
or
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
fildl
xchg
imul
jle
ds
jmp
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
rclb
pop
inc
shrl
fs
mov
data16
test
pop
test
push
stos
lea
inc
push
mov
push
sub
mov
fildll
push
mov
mov
outsl
mov
loope
data16
add
push
mov
adc
or
mov
sub
es
sub
bound
xchg
push
xchg
hlt
lea
in
or
jns
mov
cmp
rorb
cmpsl
or
repnz
lret
inc
add
xor
stos
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
cmp
mov
and
sub
cs
js
mov
shl
repnz
pop
push
cltd
add
cmp
push
sbb
push
cli
sub
push
xor
push
sbb
daa
xor
mov
push
or
sub
lret
es
test
sub
jge
jge
adc
jg
sbb
pop
mov
fstpl
je
fisubrl
or
mull
imul
fdivl
ljmp
repnz
loope
fnsave
fwait
and
pushf
sub
push
fstps
pushf
xchg
pusha
or
sti
fstps
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
lds
fs
out
pop
sbb
push
inc
push
pop
cltd
test
or
push
sub
push
xor
iret
push
cmp
or
outsl
aam
sub
dec
aam
dec
into
pop
mov
repnz
loop
in
jno
lds
inc
in
lods
cld
xchg
rcrb
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
cmc
mov
mov
jns
jp
add
cmp
lds
sbb
push
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
out
dec
loop
std
inc
out
out
scas
mov
sub
ljmp
cltd
xor
into
add
les
outsb
add
addl
fs
popa
sub
adc
rcrl
ret
and
in
inc
inc
xchg
adc
inc
mov
fstps
jnp
gs
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
mov
pop
leave
jae
pop
jbe
mov
add
out
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
sbb
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
cmc
jl
das
dec
xor
mov
fwait
scas
fsubl
adc
push
rcl
ss
cmp
ja
mov
stc
in
loop
vaddsubps
mov
enter
lea
or
and
dec
mov
add
ja
jge
push
xchg
jb
sbb
mov
fiaddl
or
and
lret
test
mov
lods
add
mov
fistl
or
ret
gs
cltd
fs
hlt
sub
sbb
lds
jge
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
jp
jge
scas
xchg
iret
stc
push
mov
pop
push
sahf
loop
push
and
into
xor
das
movsl
int3
ljmp
dec
ficoms
pop
dec
icebp
pop
dec
aam
pop
mov
dec
repz
out
lcall
xchg
jl
das
dec
xor
cmpb
scas
inc
jecxz
call
push
jmp
push
sbb
sub
adc
jg
lahf
cmp
hlt
repz
pshufw
dec
or
sbb
lret
and
daa
adc
mov
addr16
inc
and
push
dec
push
adc
inc
mov
mov
inc
negl
xor
xor
mov
add
outsl
hlt
jmp
add
ds
hlt
movsb
dec
ljmp
stos
imul
pop
ret
inc
pusha
jnp
sbb
xchg
fildll
jnp
movsb
fildll
push
sahf
jns
jecxz
xor
cmpsb
xchg
mov
mov
je
subl
or
mov
push
dec
popa
insl
mov
iret
pop
mov
sbb
ret
fsubr
and
inc
xlat
fmull
sti
add
or
cmp
pop
pop
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
sub
xchg
imul
jle
ds
jmp
std
mov
sti
and
test
cmp
adc
push
hlt
mov
popa
dec
mov
into
scas
stos
shll
inc
lahf
aam
add
mov
dec
popa
mov
xor
sbb
daa
and
sbb
lock
lahf
mov
mov
jne
ja
das
mov
pop
push
sub
and
mov
adc
inc
mov
cmpsl
xlat
inc
lret
push
mov
push
cmp
ret
and
lds
fcom
dec
sub
insl
mov
leave
jnp
pop
cld
sub
adc
shrl
mov
cmp
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
xor
jae
mov
adc
jge
adc
push
sbb
lcall
test
xchg
mov
cmpsl
inc
sbb
and
xor
ja,pt
fs
sub
inc
ret
mov
cmp
and
jns
mov
jno
lds
jecxz
aaa
rcrl
inc
mov
jecxz
sbb
or
sub
negb
mov
xchg
jp
or
inc
cltd
lret
lcall
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
lock
dec
xchg
cltd
xor
les
or
xor
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
rorl
mov
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
leave
jl
adc
mov
mov
add
daa
insb
xor
mov
cmpsb
ret
xchg
xchg
push
xchg
ret
push
inc
push
mov
pop
or
cmc
cli
sbb
test
lret
sub
mov
lods
lret
or
popf
rcl
xor
inc
into
xor
insl
push
rcrl
dec
mov
rorl
inc
movsw
inc
pop
mov
outsl
lea
push
and
sahf
xchg
jl
call
je
cmp
xchg
popf
pop
xor
adc
rolb
sub
xchg
xchg
aas
inc
mov
enter
xchg
cmc
mov
jp
fst
in
mov
mov
or
mov
add
aad
bound
cltd
add
clc
mov
pushf
sbb
mov
sbb
or
sub
xchg
lods
loopne
mov
pop
mov
adc
sahf
popf
jecxz
fwait
pusha
sbb
mov
rcll
sbb
and
jl
jne
cli
mov
fcmovnbe
lret
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
push
cltd
jae
mov
bound
sbb
outsb
or
push
and
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
or
and
iret
xchg
shr
jo
sbb
xchg
xchg
xor
addr16
clc
push
sub
leave
cld
icebp
jg
out
ud0
lock
xchg
mov
imul
rolb
push
adc
mov
jno
fdivrs
cli
jno
movsb
imul
jb
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
gs
stos
jns
gs
cs
adc
js
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
clc
xchg
test
push
leave
push
rcrb
daa
hlt
xchg
scas
sbb
sub
out
dec
movl
mov
cmpsl
pop
sub
adc
dec
mov
scas
pop
pop
cmpsb
loop
orl
inc
stos
sbb
fildl
add
xchg
aad
xchg
test
dec
mov
dec
xor
xchg
xchg
mov
push
inc
jmp
frstor
js
fidivs
jo
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
lret
inc
dec
push
adc
dec
xor
xor
div
call
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
adc
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
jecxz
mov
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
push
mov
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
loope
int3
scas
mov
cmpsl
jno
dec
rol
inc
mov
or
pop
mov
push
js
inc
movsl
xchg
mov
xchg
test
shll
test
fucomp
inc
repz
fists
pop
adcb
dec
gs
pop
cs
addl
xchg
fildl
push
mov
sub
shll
out
cmpsl
push
jecxz
popl
mov
popf
jae
into
cmpb
jns
hlt
and
andl
inc
lahf
mov
jae
gs
das
in
cmc
idiv
inc
fwait
divl
sarl
add
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
pop
adc
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
data16
rclb
adc
inc
push
adcb
add
or
je
sub
in
stos
xchg
mov
scas
push
and
sub
push
bound
or
ret
iret
in
popf
gs
inc
stos
int
and
push
stc
and
in
or
ret
inc
or
stc
xor
or
cmp
jmp
int
add
fcomp
movswl
jmp
std
mov
sti
and
sbb
lret
dec
sbb
mov
cltd
sbb
and
je
jge
pop
jo
or
jmp
mov
rcrl
pop
xor
add
data16
xor
dec
stos
cmp
rol
pop
or
jl
loop
jg
or
scas
jnp
leave
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fidivrs
jp
movl
sti
stc
cli
in
test
or
pop
sbb
outsb
or
pop
and
ret
int
lcall
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
in
pop
addl
idivb
in
sbb
std
cmp
jl
das
inc
iret
shl
aaa
jge
pushf
jecxz
nop
loop
jp
scas
mov
jp
scas
fcomi
xlat
repz
mov
mov
movsb
enter
js
pop
popa
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
fwait
negl
mov
cmp
sub
mov
iret
add
mov
repz
mov
sbb
stc
pop
int
rcrl
or
lret
xchg
dec
xchg
test
cmpsb
aam
les
or
stos
popf
push
dec
rcll
mov
mov
pop
arpl
pop
mov
cmc
mov
mov
in
fxch
pop
or
movsl
mov
sbb
loope
dec
ret
jge
sub
xchg
nop
dec
pop
pop
rorl
movsl
lods
adcl
jmp
fidivs
aad
rorl
xchg
cmp
fs
lods
cs
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
arpl
add
inc
push
sbb
xchg
xchg
jmp
popa
shll
orl
rorl
fs
push
dec
xchg
mov
shll
roll
sub
sbb
lds
scas
jge
mov
inc
sbb
sub
cmp
pop
dec
sbb
and
fcoms
stc
mov
inc
push
sbb
stc
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
das
pop
icebp
or
cmp
fs
loop
data16
lods
rcrb
adc
bnd
sbb
add
jns
jl
das
pop
jbe
push
cmpb
outsl
and
xchg
xor
sub
in
sti
jnp
out
mov
js
fisttpll
jg
decl
int3
lahf
stc
test
jns
sub
sbb
push
adc
lret
rcl
test
adc
mov
std
aaa
jns
mov
jne
les
cmpl
sbb
imul
pop
adc
mov
jg
aad
pushf
ret
pop
mov
hlt
mov
arpl
stos
sbb
lds
push
clc
stos
outsl
enter
fbld
pop
xor
inc
cmp
dec
pop
push
bound
fidivrl
orl
add
jns
scas
cmpsb
dec
sub
stos
les
enter
and
xchg
push
dec
mov
loopne
pop
arpl
inc
imul
sub
jno
mull
clc
jo
in
dec
add
inc
xor
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
sbb
sti
mov
in
and
sbb
lret
dec
sbb
push
addl
mov
inc
fstpt
fwait
idivl
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
popa
push
push
rcll
daa
push
rcll
cmpsl
adc
mov
in
fsubrl
fwait
scas
cmc
stc
mov
inc
fistpl
pop
mov
movsb
pop
sbb
mov
mov
xchg
repz
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
sahf
inc
mov
leave
xchg
fistpl
jo
cmp
cmp
push
inc
push
movsb
ret
sahf
sahf
xchg
sbb
js
sbbl
fnsave
add
jns
in
and
bsr
adc
cmc
jmp
cmp
scas
loopne
stos
or
call
mov
jnp
or
in
mov
pop
fdivrl
sti
icebp
dec
test
jg
add
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
lods
jp
movsl
pop
in
rclb
jns
pop
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
push
push
mov
mov
stos
mov
stos
test
rclb
int
ljmp
lret
fstl
out
cmp
dec
dec
rcrb
jno
mulb
push
ret
insb
mov
xor
xchg
dec
rorl
lds
mov
push
xchg
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
adc
and
sahf
xchg
sarb
out
ret
xor
lahf
cmpsl
mov
jae
mov
loope
jno
jecxz
fmuls
adc
adc
add
aam
and
imul
pop
push
push
push
adc
test
pop
cmp
repz
sti
jge
pop
dec
divl
daa
cmc
dec
inc
test
cld
push
pop
lock
in
iret
imul
inc
inc
xor
sbb
in
jmp
test
aaa
jns
pop
push
pushf
cmpsb
jg
in
mov
sti
stc
cli
in
test
or
test
cmp
adc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
mov
scas
data16
add
inc
xor
or
sti
dec
iret
push
call
subl
cmpsb
jmp
loopne
mov
push
jo
sub
xor
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
fisubl
push
xchg
mov
push
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
repnz
mov
stc
push
mov
sbb
insb
scas
stc
ret
xchg
rcr
mov
and
mov
das
sbb
dec
movsl
or
sbb
fistl
ljmp
shll
or
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
and
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
lcall
fisttps
stc
in
jns
test
inc
mov
xor
enter
pop
int3
aaa
adc
ja
rcll
add
mov
push
push
cmp
push
xchg
push
mov
cwtl
ja
mov
xchg
mov
decl
aas
cli
add
fdivrp
sbb
sbb
rorl
or
sub
aas
outsb
xor
test
ljmp
mov
stc
push
jmp
dec
das
mov
sahf
das
xchg
stc
cli
in
test
or
test
jnp
adc
outsb
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
roll
push
xor
movsb
fs
lahf
jo
fists
xchg
push
insb
testb
mov
pusha
pop
jl
jnp
bound
insl
mov
out
lcall
ja
bound
push
inc
mov
cli
pop
lods
inc
insl
jmp
movsl
inc
adc
mov
ja
scas
mov
cmp
enter
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
push
sbb
ret
js
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
add
lcall
jge
inc
sub
jg
xor
jno
call
add
cmc
push
mov
scas
iret
bswap
stc
dec
push
out
lods
jl
lret
int
rol
scas
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
bound
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
push
mov
push
xchg
dec
mov
push
lods
shrb
loope
call
fbstp
xor
mov
xor
enter
pop
int3
aaa
adc
psraw
push
push
and
testb
fwait
divl
xchg
xchg
cmp
fistl
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
call
test
dec
dec
lret
mov
push
leave
loop
sub
idivl
mov
mov
cmp
cmpsb
xchg
lods
out
cmp
out
mov
ret
loop
ja
pop
jns
mov
jg
repz
jns
outsb
out
fndisi(8087
sub
or
or
outsb
add
fadd
faddl
movsb
adc
adc
or
pop
das
idivl
leave
mov
sti
xor
inc
xchg
in
mov
and
test
mov
mov
outsb
je
test
je
or
iret
sbb
stos
data16
push
mov
push
cmpsb
ljmp
jnp
stos
loope
mov
adc
sbb
mov
xchg
lcall
lcall
inc
test
mov
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
xchg
xor
jge
pop
xor
mov
mov
jl
je
inc
mov
pop
jb
add
add
or
por
inc
dec
mov
scas
mov
jp
mov
out
hlt
xor
sub
cmp
cmp
ret
cmpsb
ret
fldcw
cmpsb
pop
es
pmulhw
test
mov
dec
jmp
push
mov
mov
clc
lcall
in
test
arpl
call
add
and
sub
inc
enter
sahf
rcrb
out
mov
cmpsb
jg
or
icebp
aaa
mov
sbb
jge
les
xchg
mov
dec
add
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
sub
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
push
sahf
pop
jg
sub
repz
mov
shll
xor
sub
pop
sub
out
jns,pt
outsl
adc
out
adc
add
rorb
stc
lock
pop
xchg
inc
add
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
lods
test
pop
and
add
add
sbb
mov
dec
sbb
xchg
mov
pop
adc
adc
mov
mov
jle
mov
inc
jge
pop
rcrb
adc
cmp
adc
sub
add
data16
aas
mov
notb
stos
subl
push
adc
mov
sbb
sahf
jb
and
mov
shlb
or
inc
mov
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
in
jnp
cli
jnp
inc
mov
add
adc
cs
add
and
mov
mov
negb
ret
push
jae
lret
sub
inc
xchg
pop
xor
lods
cmp
jle
lods
out
std
inc
arpl
out
fxch
lds
add
stos
xor
or
cli
dec
in
insb
sahf
dec
mov
or
fucom
cli
xor
roll
ret
add
mov
push
xor
icebp
mov
push
cmp
mov
jno
pop
hlt
fs
arpl
pop
inc
xchg
mov
xchg
lods
jns
dec
add
stos
aam
lahf
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
cmc
mov
mov
sub
jl
sbb
mov
xchg
mov
sbb
mov
out
in
ret
das
loope
mov
outsb
or
leave
loop
arpl
jne
cld
jae
cld
out
daa
dec
sub
das
inc
iret
ror
jmp
scas
mov
out
jb
fsubrl
data16
out
cmpsl
inc
lret
adc
pop
mov
dec
mov
imul
lea
es
xchg
aad
fisubrs
push
dec
mov
lcall
and
or
adc
popf
je
nop
mov
sti
dec
mov
stc
clc
jp
add
add
mov
sbb
xchg
orb
xor
mov
cld
mov
shl
or
shrl
dec
fcompl
pop
inc
jle
movsb
inc
fwait
pop
dec
inc
mov
mov
cmp
pusha
ja
or
xchg
popf
mov
dec
dec
lds
fwait
enter
pop
push
ficoml
inc
add
xchg
mov
fwait
ss
sti
fcmovnu
xchg
stc
stos
push
inc
repz
mov
js
sahf
add
and
es
fidivrs
mov
fbstp
loopne
outsb
imul
sbb
add
and
mov
pop
into
cmp
add
out
ror
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
sbb
mov
les
jns
pop
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
and
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
push
cmp
lods
or
add
dec
dec
adc
je
sub
and
xchg
nop
xchg
mov
outsl
xor
push
and
inc
cld
ja
adc
fadd
push
bound
cmpsl
xchg
scas
mov
and
or
xlat
or
inc
cmc
add
inc
inc
xor
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
in
pop
cmpsb
jnp
fcom
mov
cmp
or
cmp
xchg
sub
popf
out
mov
xor
push
jne
les
pop
mov
pop
stc
mov
in
xor
leave
xchg
fistl
repz
fcoml
xchg
leave
arpl
cwtl
pop
push
jno
fstl
cmc
fwait
pop
dec
mov
and
lods
fldcw
ljmp
xlat
iret
xlat
add
lods
mov
test
loope
and
cltd
mov
jbe
sbb
xchg
add
and
rcrl
mov
sbb
adc
lods
scas
out
sub
pop
and
mov
and
out
sar
mov
cwtl
repz
imul
shl
idivl
outsl
outsl
xlat
icebp
cmpsl
lret
scas
loope
sti
jnp
out
scas
mov
pop
cs
popf
jmp
loope
lahf
icebp
cmpsl
ret
stc
lret
push
ficompl
cs
nop
js
or
pop
ret
subb
push
mov
push
jp
or
lods
jl
and
mov
mov
cmp
roll
add
decb
push
in
je
xor
test
imul
push
adc
int
pop
pop
inc
push
push
sub
push
fsubrl
mov
sti
sti
rol
shlb
adc
inc
stos
xchg
roll
fsts
aam
repnz
outsl
xor
and
jns
or
shl
sbb
cmp
mov
in
jnp
cli
jnp
inc
mov
add
adc
xchg
add
and
mov
mov
negb
xor
jae
mov
adc
jge
adc
push
test
into
add
xchg
nop
pushf
inc
cld
jo
or
lds
push
pop
mov
fiaddl
jg
je
popa
push
test
sahf
clc
inc
push
loopne
cld
mov
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
mov
jns
ret
push
fcompl
jne
jns
lds
nop
lds
push
push
lret
push
cmpsl
inc
and
stc
inc
jae
sahf
dec
popf
lret
cmpsl
xchg
test
mov
adc
inc
xchg
push
xchg
in
inc
mov
lds
adc
lret
test
push
push
or
mov
iret
mov
jne
in
jno
insb
into
pop
mov
repz
adc
or
andl
push
or
fsubrs
data16
cs
movsl
icebp
xor
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
inc
sbb
xchg
dec
xorl
lret
add
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
inc
into
push
mov
insl
cmc
imul
test
movsl
je
xor
xorl
jle
mov
sti
cmp
and
outsl
xchg
and
in
xor
shlb
jmp
mov
rolb
aam
xor
pop
pushf
jbe
mov
insl
cmc
inc
mov
outsb
loope
lds
or
mov
mov
inc
out
loop
sub
and
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
in
test
add
push
cmp
daa
outsb
or
scas
or
and
or
call
or
int
push
dec
add
or
cmc
and
lods
mov
cmp
and
jl
jp
push
fs
jecxz
nop
pcmpeqb
xlat
inc
aad
enter
pop
aas
jle
lahf
dec
and
push
in
rclb
cli
sub
mov
xchg
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
lds
cmp
push
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
cmc
les
push
and
and
dec
and
fldl
cmpsl
in
decl
inc
push
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
push
mov
cmp
and
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mov
outsb
xor
push
inc
push
push
or
and
das
push
jno
xlat
jbe
sbb
lock
iret
push
nop
sub
add
push
scas
mov
int
pop
dec
xchg
aam
jne
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
fs
in
mov
jmp
jecxz
xchg
cltd
js
dec
std
rorb
mov
cmc
push
sbb
int
fsubs
pop
xchg
outsb
mov
ret
inc
jge
imul
stos
cmp
mov
fwait
insl
add
test
add
sbb
add
andb
js
sbb
sahf
es
shrl
sbb
mov
xchg
jb
sbb
mov
mov
xor
test
iret
lcall
sarb
popf
pop
jbe
inc
lods
dec
inc
push
popf
lock
mov
fcmovnb
inc
pushf
outsl
and
mov
mov
dec
test
lds
xchg
mov
aad
stc
dec
data16
pop
xor
test
mov
cmpsb
sub
add
add
cld
jp
add
cmp
push
dec
pop
movsb
ret
sahf
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
cs
inc
xor
je
jmp
pushf
jecxz
nop
loop
mov
jno
pop
adc
stos
fldt
js
cs
jae
sbb
lahf
repnz
add
fnsave
imul
lock
or
movsb
jo
mov
loop
enter
mov
loop
enter
xchg
add
and
push
push
push
xchg
push
in
or
push
lcall
mov
add
jecxz
inc
mov
jl
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
xchg
jns
bnd
inc
dec
jge
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
hlt
and
outsl
ljmp
cmp
enter
mov
inc
scas
outsb
or
mov
imul
dec
add
and
mov
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
andb
and
cmpb
xchg
sub
popf
out
mov
xor
push
jne
les
jg
cmp
mov
pushf
incl
push
aas
mov
adc
mov
push
imul
fadd
cmp
cmpsb
ret
outsb
xor
adc
sub
cs
in
mov
cld
repnz
push
mov
popf
cmpsl
xlat
cmp
xchg
dec
xor
ret
adc
je
sub
data16
mov
mov
mov
xchg
inc
and
mov
sahf
pop
and
sub
and
dec
stc
xchg
mov
rclb
mov
out
xchg
call
pop
notl
cmc
mov
negb
adc
jae
mov
adc
jge
adc
push
test
into
add
add
add
mov
push
scas
or
and
or
call
xlat
in
fiaddl
mov
cmp
sbb
into
pop
cwtl
es
and
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
cmc
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
add
pop
and
mov
imull
clc
icebp
jle
pop
mulb
inc
xchg
cmpsl
or
mov
ficomps
dec
xor
scas
mov
nop
ja
jp
scas
sbb
xchg
mov
loopne
js
scas
insb
lock
stc
inc
iret
pop
inc
loope
xchg
rclb
mov
hlt
xor
daa
jp
dec
mov
mov
je
mov
je
pop
mov
mov
mov
das
mov
mov
mov
das
orb
jmp
xchg
out
cmpsl
pop
push
test
jbe
push
leave
cmpsl
inc
icebp
xchg
jle
sbb
roll
stos
das
and
movb
push
pop
iret
push
in
jnp
xor
ljmp
push
xor
dec
inc
sub
sub
adc
and
aam
push
mov
mov
sub
inc
sbb
imul
add
cmp
leave
ret
mov
mov
jo
cmc
cwtl
mov
leave
stc
and
in
or
ret
inc
or
stc
xor
or
cmp
jmp
int
add
testb
fucomi
hlt
std
mov
sti
and
test
cmp
adc
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
mov
xchg
bound
js
test
sti
cmpsl
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
add
mov
jle
fcoml
aad
xor
xor
mov
mov
pop
out
je
inc
mov
pop
jb
add
mov
out
push
scas
sar
xor
jbe
mov
pusha
or
dec
aaa
xor
lods
inc
mov
lret
xchg
jae
sbb
aam
and
push
lds
dec
test
outsl
mov
rcr
push
rcl
hlt
cmp
or
lret
rcll
sub
or
dec
adc
lds
pop
mov
mov
pushf
sti
add
inc
jp
mov
je
in
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
rcrb
and
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
adc
outsb
cmpsb
sub
mov
dec
lcall
pop
test
lods
cmp
dec
mov
jge
adc
push
les
inc
mov
sub
or
test
pop
mov
ficoms
ja
daa
sub
mov
or
pop
ss
xchg
jl
aam
ja
xchg
pop
ds
int3
fwait
nop
xchg
xor
gs
rcll
add
ds
sbb
test
add
popa
lret
sub
js
test
or
pop
out
arpl
arpl
jmp
stc
jae
inc
ret
rolb
jecxz
imul
into
rorl
cmc
lahf
push
sti
cmpl
ret
dec
jbe
xchg
test
and
pop
pop
pop
sbb
or
cmpsl
loope
lret
cmp
xlat
enter
sub
pop
jo
shl
sbb
ja
lret
or
lcall
jl
rcll
pushf
adc
push
mov
ret
sahf
inc
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
xchg
add
and
mov
mov
negb
ret
push
jae
dec
sub
pushf
push
push
bound
lret
cmpsb
clc
lods
cmpsl
xor
into
add
outsb
setl
mov
pop
jnp
sbb
lret
les
fwait
movsl
gs
hlt
xchg
jnp
and
and
cli
mov
ret
add
mov
push
cmp
cmpsl
xor
dec
inc
test
xchg
add
rcrl
in
incb
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
fs
data16
scas
pop
rcl
ja
mov
sub
adc
inc
pop
popf
jb
sub
and
inc
popa
mov
shr
sbb
pop
loop
lret
popf
shll
loope
jecxz
xchg
das
ss
add
mov
imul
mov
pop
xchg
mov
push
out
mov
rolb
mov
pop
ds
fadd
mov
add
fucom
bound
test
and
sub
popf
out
mov
xor
push
jne
les
pop
and
imul
ret
add
sti
mov
mov
mov
adc
outsl
mov
xor
mov
xchg
or
cmp
hlt
xchg
mov
fisubrs
es
mov
ja
lds
movsb
ret
enter
outsb
shll
mov
fwait
and
in
js
or
ret
push
mov
or
lods
outsb
xor
dec
les
inc
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
fwait
clc
and
add
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
lods
xchg
popf
sub
xchg
inc
gs
imul
push
inc
push
xorl
in
cmp
jecxz
push
rcrb
mov
or
aaa
dec
sbb
mov
sbb
loop
mov
lret
jecxz
aaa
and
push
jae
pop
imul
mov
or
dec
push
mov
add
add
push
mov
movsl
nop
add
lret
pop
scas
mov
leave
ljmp
and
inc
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
cld
jae
jl
or
cmp
scas
fs
lret
ds
scas
out
shr
mov
test
fs
mov
lret
push
outsl
mov
mov
mov
negl
popa
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
fwait
negl
mov
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
cmp
lods
data16
dec
cmpsb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
sub
or
stos
fs
orb
dec
pop
sbb
jp
jns
dec
lds
fwait
enter
lods
xchg
xorl
push
loopne
sbb
sub
repz
xor
push
jp
ljmp
inc
push
xchg
push
js
ret
dec
cmpsl
imul
sahf
movsl
movsb
sbb
cmp
dec
xor
mov
push
pop
pop
imul
add
mov
xchg
ds
iret
inc
test
push
and
adc
cmp
or
cmp
xchg
sub
popf
out
mov
xor
push
jne
les
pop
and
or
inc
ret
add
fidivl
sbb
mov
jbe
orl
jmp
lods
rcrl
aas
and
ficomps
shll
fistl
lea
sub
jb
fstl
movsb
shll
lock
jp
ss
push
out
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
mov
movsb
into
fsubrl
lret
popa
jno
fcmovne
push
lret
or
popl
sarl
add
add
xchg
adc
mov
and
or
insb
int3
mov
in
pop
popf
xor
jmp
std
mov
sti
and
test
fldcw
adc
push
hlt
mov
xchg
test
push
lds
inc
dec
pop
pop
inc
mov
mov
adc
jmp
popa
xchg
fwait
jl
push
and
push
insl
sbb
nop
jle
sbb
dec
dec
xlat
insb
inc
or
lahf
xor
and
xchg
movsl
push
jno
rcrb
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
pop
sub
fsub
ja
in
jg,pn
shl
je
sub
push
add
and
into
push
mov
xor
jae
and
mov
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
jne
mov
addr16
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
pop
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
mull
stc
cmpl
ss
cli
mov
adc
push
imul
enter
mov
outsb
movb
insl
int3
imul
mov
repz
inc
cmp
int
pop
movsb
and
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivrl
dec
sub
fistps
jno
jnp
inc
mov
add
adc
cs
add
and
mov
xchg
jne
pop
ret
xchg
and
jbe
inc
sbb
sbb
in
jns
popf
jg
into
add
xlat
sub
push
lock
or
add
jae
or
inc
out
pop
sbb
push
inc
push
pop
cltd
test
or
mov
sbb
jo
and
daa
adc
rcrb
sub
insb
push
arpl
push
lds
and
and
sub
sbb
xchg
mov
mov
push
adcl
pop
xchg
test
jmp
mov
inc
xor
xchg
inc
scas
push
xchg
inc
mov
push
and
and
popa
xchg
std
insl
stos
add
cli
in
cmpsb
aas
stos
shrb
sub
repz
mov
xlat
dec
les
mov
rclb
mov
out
xchg
call
pop
notl
cmc
mov
negb
xor
jae
mov
adc
jge
test
test
jp
mov
xchg
scas
jb
and
test
mov
push
ret
ret
or
out
rolb
mov
nop
fwait
pusha
mov
or
and
sar
mov
pop
inc
inc
dec
fisttpll
icebp
mov
push
cmp
mov
jno
pop
mov
mov
out
mov
aaa
pop
dec
dec
push
cmpsb
mov
push
dec
test
dec
sarl
pop
push
mov
xchg
repz
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
sahf
inc
mov
leave
xchg
sar
cmp
add
cmp
lds
fldt
das
pop
icebp
or
cmp
andl
mov
in
testl
mov
fsts
pop
add
and
push
xor
loopne
outsb
mov
ficomps
dec
sahf
lods
pop
aam
jg
lahf
dec
mov
sarb
rolb
ss
push
andl
xchg
sub
mov
adc
and
push
inc
push
pop
inc
xchg
fwait
add
inc
jge
pop
mov
sub
push
dec
xchg
dec
vcvttss2si
incb
jns
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
push
dec
fisubs
aad
pushf
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
inc
lock
fnsave
cmp
xchg
ja
mov
mov
std
push
lret
mov
add
pop
dec
add
popf
loopne
out
push
or
cld
and
mov
sbb
out
enter
cwtl
stc
add
lcall
xlat
adc
or
lods
inc
add
pop
add
cmp
lock
inc
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
and
push
sti
popf
ficoms
shr
jae
pushf
ficoms
jno
pop
aas
adc
jns
push
sahf
jno
jecxz
push
enter
mov
pusha
pushf
mov
lret
not
or
andb
mov
test
fwait
dec
pop
stos
punpckhwd
sub
in
mov
scas
shrb
ret
mov
sbb
inc
cs
cmp
jl
jnp
repz
leave
or
push
jge
mov
mov
rorb
mov
push
jno
mov
mov
les
mov
in
push
lret
jb
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
test
addr16
xor
cmp
and
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
cmpsb
ret
xchg
xchg
pop
dec
and
xor
jbe
jno
and
out
cmpsl
mull
call
pusha
or
mov
in
adc
jecxz
mov
int3
sub
lods
xchg
aas
cmpsb
int3
sub
in
mov
scas
aam
je
sub
dec
out
sbb
jg
xlat
adc
decb
pop
movsl
arpl
add
mov
es
add
xchg
adc
mov
and
or
insb
int3
mov
inc
mov
popf
pop
popf
xor
jmp
std
mov
sti
and
sbb
lret
dec
sbb
pop
addl
mov
inc
fstpt
fdiv
mov
inc
pop
sbb
xchg
pop
add
ret
mov
aad
jno
sbb
xchg
mov
sub
mov
and
leave
fsubl
repz
jns
stc
xor
fisttpll
frstor
mov
xchg
jp
jmp
dec
push
add
lret
rcll
adc
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
data16
test
xor
pusha
xchg
jle
scas
pop
adc
dec
addr16
push
cmp
orb
xchg
test
ret
imulb
inc
lret
sub
adc
xor
inc
sarl
push
scas
std
int3
inc
aas
repnz
jmp
adc
mov
push
addr16
fwait
test
aam
mov
cmp
decl
add
inc
sbb
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
pop
adc
shlb
adc
test
push
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
pop
shll
push
jg
outsb
out
sub
xchg
xor
xchg
inc
and
psubd
leave
out
pop
xchg
cs
test
xchg
incl
or
std
jae
and
test
imul
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
hlt
xor
cmpb
je
test
push
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ret
imul
sub
mov
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
sbb
xchg
int3
pusha
xor
rorl
leave
cld
icebp
rcrb
cmp
inc
iret
fxtract
cmc
rcrb
insl
xchg
inc
adc
adc
rcrb
repz
lahf
in
pop
repz
int
iret
inc
add
add
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
xor
jbe
ficoms
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
in
fcompl
imul
test
push
je
inc
test
push
iret
lods
pop
inc
push
push
push
jae
pop
imul
fsubs
js
push
outsl
mov
arpl
in
es
shlb
jns
inc
dec
xchg
aam
jne
insl
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
btr
outsl
jno
insb
out
mov
pop
xchg
js
inc
int3
sub
movsl
por
fstpt
add
stos
in
pop
lret
fwait
adc
dec
les
pop
movsb
pop
push
scas
fcomp
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
testb
and
and
and
and
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
and
test
push
stos
leave
pop
imul
adc
mov
lods
push
outsl
sbb
scas
movsb
mov
xchg
xchg
and
pop
adc
pop
cltd
enter
lods
mov
pop
arpl
out
in
jae
inc
stos
int
and
push
stc
and
in
or
ret
inc
or
stc
xor
or
cmp
jmp
int
add
testb
fucomi
hlt
std
mov
sti
and
test
lahf
sub
cmp
mov
popa
dec
mov
into
push
stos
shll
cld
xchg
adc
jl
mov
xor
aaa
cmp
daa
sub
sti
add
jbe
lea
push
mov
outsb
xor
ret
scas
arpl
mov
testl
scas
dec
inc
or
push
leave
inc
sub
rcrb
dec
in
mov
mov
mov
clc
dec
add
ret
cmp
pop
dec
out
cmp
xchg
inc
lea
nop
ds
mov
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
test
icebp
mov
cli
ss
lds
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
jle
jl
out
mov
icebp
push
mov
add
mov
pop
and
push
dec
push
adc
jo
push
sbb
push
and
add
mov
mov
mov
lock
push
icebp
nop
jle
sbb
data16
sbb
lahf
mov
mov
aaa
mov
inc
dec
push
adc
jno
xchg
sahf
movsb
shll
lock
inc
mov
and
push
outsl
xorl
or
push
jecxz
dec
gs
nop
xchg
xchg
stos
xchg
mov
jb
jns
push
in
in
xchg
dec
popf
adc
scas
hlt
mov
adc
mov
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
mov
leave
stc
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
stos
aam
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
aam
stos
dec
sbb
adc
into
test
and
ds
add
and
fists
add
inc
andl
sbb
out
mov
flds
je
mov
xor
dec
sbb
sub
mov
insb
sarl
adc
test
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
lock
xchg
xchg
dec
push
fidivrl
jp
sub
andb
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
xlat
mov
and
enter
scas
arpl
mov
ja
lds
lret
mov
ret
or
and
mov
ret
cmp
add
xor
mov
xchg
int3
xchg
pop
test
pop
jecxz
adc
mov
lds
xchg
or
inc
fdivrs
iret
ror
mov
push
rcrb
in
cmp
mov
and
adc
outsb
mov
push
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
sub
popf
sub
xchg
inc
lret
dec
pop
sbb
push
inc
push
push
cltd
sarl
es
repnz
enter
fists
add
ljmp
bound
test
sti
add
je
mov
xor
dec
sbb
sub
and
stos
push
insb
sarl
adc
test
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
and
fwait
lods
ss
pusha
fcmove
pop
rcrb
test
and
mov
push
or
cld
add
movsb
out
inc
mov
inc
repz
testb
jnp
out
dec
call
cmp
subl
pop
mov
sub
gs
add
push
inc
inc
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
xor
jnp
cmp
sub
mov
iret
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
enter
cmp
dec
dec
lret
movsw
cwtl
push
push
push
fsts
fs
push
inc
mov
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
stos
aam
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
cmp
or
mov
xorl
xlat
insl
aad
insl
ficomps
fists
in
dec
pusha
lods
fldenv
mov
jmp
push
add
cmp
add
add
dec
jmp
js
scas
mov
xchg
sub
add
dec
fidivrs
add
fstpl
icebp
xchg
jp
fisttps
mov
mov
cmp
je
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
and
xchg
mov
xchg
rorl
gs
dec
inc
pushf
mov
jg
imul
xor
dec
mov
jo
add
add
jle
nop
inc
fs
inc
xor
jb
xor
ja
mov
dec
pop
inc
add
int
cmp
loopne
cld
cmpsb
clc
test
push
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
popf
test
leave
sarb
push
fcompl
jne
jns
lds
nop
lds
push
push
mov
inc
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
dec
xchg
das
cmpsb
int3
push
aas
scas
shlb
ss
mov
aas
scas
shrb
sub
in
mov
and
xlat
insb
loop
mov
out
out
ret
jg
out
and
lret
and
mov
pop
out
inc
mov
push
in
imul
sbb
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
test
imul
movsl
mov
jne
jae
imul
add
repnz
inc
jno
jno
dec
movsb
mov
daa
cwtl
test
inc
stos
divb
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
xchg
add
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
add
jle
nop
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
les
pop
inc
cmpsl
lcall
push
jb
cmp
and
cwtl
adc
inc
add
jecxz
aaa
rcrl
inc
mov
jecxz
sbb
or
sub
negb
mov
xchg
jp
or
inc
cltd
lret
lcall
sbb
std
fistpll
cmc
mov
mov
test
sbb
subb
imul
cmp
adcl
mov
pusha
ds
mov
push
pusha
mov
popf
push
push
sub
aas
js
jmp
inc
orl
andl
push
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
lret
and
insl
sbb
fucomi
hlt
std
mov
sti
and
test
fisubrs
cmp
mov
fimuls
cmp
lods
into
pop
stos
movsb
cltd
repz
push
pop
push
outsl
xlat
sti
ret
in
test
lahf
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
dec
vcvttss2si
incb
jns
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
push
add
mov
xchg
pushf
xchg
lcall
sbb
cmovns
and
inc
fwait
leave
cld
mov
das
and
bsr
adc
cmc
jmp
movq
clc
xchg
cmpsl
cwtl
incb
fnsave
divb
aas
xor
xchg
ret
fdivrp
pop
pop
iret
rorl
adc
in
add
mov
shll
loopne
hlt
mov
xchg
mov
add
orl
sub
xchg
rorl
pop
stos
pop
add
cwtl
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
stos
pop
test
cs
sbb
shlb
insl
and
jnp
lea
subl
clc
fldt
roll
lds
lods
xor
inc
in
adc
shlb
je
out
cmpsb
enter
sahf
repnz
in
jae
pop
xchg
int3
sub
in
mov
imulb
lea
addr16
fimull
lahf
adc
clc
int3
ds
mov
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
test
icebp
mov
cli
ss
lds
mov
or
mov
add
aad
bound
cltd
add
xorl
mov
mov
fldpi
mov
push
and
movsb
xor
inc
rcll
or
mov
or
and
shr
xor
stc
push
mov
push
cmp
mov
jmp
cmp
mull
mov
insl
in
popa
ficomps
sbb
stos
adcl
ljmp
fwait
lcall
dec
movsl
cmp
and
into
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
dec
scas
std
stc
in
adc
cli
jnp
inc
mov
add
adc
xchg
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
test
add
data16
nop
lds
pop
pop
xor
sbb
cli
orb
pop
mov
sub
adc
pop
hlt
mov
sbb
mov
adc
cmpb
test
fcomp
xlat
ret
pop
cmp
les
pushf
dec
xor
stos
aas
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
sti
out
mov
adc
es
shlb
jns
inc
dec
xchg
aam
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
adc
mov
das
sbb
push
scas
pxor
cld
repz
or
insl
bswap
jg
cmpsb
push
sbb
jbe
mov
fs
lcall
mov
xlat
imull
rcrl
test
mov
fistps
mov
inc
and
es
jbe
gs
jnp
add
mov
sbb
adc
int
int3
fwait
mov
in
and
xor
xchg
scas
jnp
in
cld
push
pop
add
add
add
mov
sbb
xchg
orb
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
mov
pop
mov
and
cmpsl
jnp
or
adc
sbb
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
jo
fdiv
aaa
fsubrl
sbb
ror
sub
push
xor
push
cmp
sub
xchg
lock
lret
xchg
in
push
dec
xchg
div
subb
cmpsl
arpl
rcll
stos
out
mov
test
popa
in
jg
div
rcrb
pop
jne
push
sahf
loope
lret
xor
imul
push
jb
popf
push
aad
pop
fdivs
push
ja
shrl
fsubrl
mov
dec
cmpsb
cmpsl
push
insl
mov
popa
shrb
jecxz
aas
and
enter
pushf
add
adc
cs
sub
or
and
ja
pop
inc
fimull
pusha
adc
lds
mov
xlat
shrb
movl
cld
add
mov
sbb
out
enter
cwtl
stc
add
lcall
xlat
adc
or
scas
inc
add
outsl
int
cmc
test
cmp
mov
fucomp
jne
push
xchg
xor
leave
add
mov
or
cmp
cmpsl
mov
arpl
lcall
push
mov
scas
shl
jae
pushf
pop
pop
pop
loope
std
lahf
and
adc
inc
cmp
fwait
push
sahf
jno
jecxz
fsubrs
ret
loop
cmp
addb
andl
hlt
cltd
pop
add
dec
loop
dec
push
mov
fcoml
dec
cltd
lods
je
int3
test
iret
mov
out
mov
lock
jle
dec
mov
loopne
push
repz
cmpb
int3
mov
idivl
outsl
outsl
and
lahf
xor
sub
in
sti
jnp
out
scas
mov
pop
fisttpll
mov
outsb
out
lahf
stc
cwtl
shll
or
add
insb
adc
fs
insb
mov
outsl
stos
sbb
cmpsb
ja
test
shlb
filds
movsl
push
mov
out
mov
clc
sti
jne
jp
mov
addb
jbe
push
aaa
scas
stc
aaa
sbb
insb
jne
inc
xor
imul
inc
ret
add
jnp
mov
es
test
sahf
cmpsl
mov
adc
enter
cmc
movsl
testb
in
aam
dec
mov
adc
lret
dec
sbb
adc
push
stos
fnsave
inc
mov
sub
push
cltd
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
sahf
or
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
movsl
inc
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
push
push
push
push
adc
test
pop
sub
fucomip
repz
sahf
in
cmc
mov
push
rcrl
enter
sbb
loopne
mov
cmpsl
mov
data16
sbb
ljmp
jnp
stos
inc
js
lea
jnp
dec
pop
pop
cmp
add
jnp
fsubrp
les
xchg
adc
push
dec
fwait
push
daa
je
sbb
xchg
roll
add
jge
and
fwait
lret
push
cld
fs
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
int3
andl
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
mov
pusha
push
sub
push
xor
xor
mov
or
outsl
aam
sub
push
inc
arpl
mov
sbb
test
sbb
enter
fists
outsl
and
adc
inc
mov
xor
xchg
outsb
mov
pop
sub
inc
and
test
test
movsb
aad
pop
jne
xor
imul
add
xor
mov
mov
in
mov
inc
or
push
xchg
add
cmp
repnz
xchg
out
stos
mov
cwtl
inc
stos
adc
imul
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
cmp
imul
mov
cmc
mov
mov
add
cltd
sarl
push
ret
mov
ss
leave
idivb
les
shll
clc
mov
push
mov
cmpsl
sbb
sarb
jb
rcrl
sti
lds
test
fbstp
je
pop
iret
sbb
rcr
loopne
mov
mov
push
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
int
cld
jb
scas
repz
jo
cwtl
ret
jg
lret
jle
rorb
mov
nop
pusha
lgs
leave
scas
out
jo
arpl
mov
cli
scas
cli
shrl
ret
jae
sbb
ljmp
cmp
jns
hlt
and
orl
fcoms
inc
pop
bound
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
push
xor
in
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
jecxz
enter
jg
cmp
xchg
sub
mov
fldenv
xchg
add
int3
jp
test
fidivl
repz
cmp
testl
xor
scas
add
ret
das
adc
sbb
pushf
lcall
cmpsb
js
lock
xchg
xchg
cltd
xor
les
or
mov
inc
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
rorl
mov
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
xchg
ja
ja
std
addr16
push
lret
xchg
xlat
stos
mov
xchg
cmpsl
loope
mov
int3
jmp
cltd
cld
push
idivl
fs
jno
dec
add
mov
ficoml
sbb
lret
sbb
daa
sub
lcall
jg
xor
jbe
sub
stos
aad
xor
xor
mov
bound
xlat
in
repz
nop
xchg
lahf
push
cwtl
lock
mov
or
push
mov
push
xchg
dec
mov
push
lods
shrb
loopne
js
jnp
sahf
lods
xchg
xor
into
pop
push
subl
mov
iret
mov
pop
popa
or
aad
cwtl
mov
mov
into
lahf
sub
push
mov
mov
add
setle
xor
mov
cltd
lcall
lock
aad
pushf
ret
pop
mov
hlt
mov
arpl
ficompl
jb
lds
push
clc
stos
outsl
enter
fbld
pop
xor
inc
cmp
dec
imul
inc
and
scas
jp
ja
push
inc
je
faddp
lcall
leave
cmp
inc
sbb
in
push
dec
insl
dec
lret
outsl
fistl
xlat
jg
test
lret
push
testl
pop
leave
inc
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
dec
mov
cmp
jnp
testb
fucomi
hlt
std
mov
sti
and
test
jns
adc
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
and
add
loope
jl
and
mov
pop
sub
push
les
add
data16
jne
inc
into
push
mov
cmpsb
ret
in
iret
cmp
xor
inc
mov
push
mov
scas
mov
andl
dec
pop
addb
arpl
pop
outsb
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
bound
loop
in
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
test
hlt
je
lods
outsl
jae
fdivrp
xor
lahf
adc
cld
lods
jnp
outsb
repz
cwtl
add
test
or
fsubr
and
nop
add
dec
adc
pop
sbb
jo
out
jp
and
mov
cmc
cmp
cmc
mov
xlat
dec
push
jmp
adc
ljmp
and
jl
adc
and
mov
dec
sbb
mov
push
lcall
mov
sub
cmc
sbb
mov
push
adc
shl
arpl
lds
sbb
insl
idivb
out
sub
sub
mov
dec
pop
sahf
cmpsb
and
sbb
icebp
mov
lret
imul
fstpl
mov
pop
adcl
jle
in
out
add
ret
jge
outsl
cmp
inc
aam
lret
fwait
adc
dec
shrb
movsb
pop
push
scas
fcomp
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
idivb
addb
pushf
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
add
pop
test
push
stos
lea
stos
int
push
fistl
sub
mov
fildll
pop
xor
dec
inc
mov
in
push
outsl
and
pop
inc
add
in
pop
sub
sub
push
mov
mov
xchg
push
es
cmp
pop
mov
sub
ud1
in
ljmp
inc
mov
dec
ljmp
mov
out
cs
xchg
scas
cmp
js
lock
dec
xor
jno
xchg
jnp
stc
xchg
push
mov
pop
cmpsl
lock
xchg
jae
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
inc
mov
mov
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
push
or
adc
into
push
mov
insl
aad
insl
ficomps
fldcw
and
sbb
ljmp
and
adc
cmp
sub
push
bound
sub
cld
pop
sub
fsub
ja
push
push
sahf
mov
fisubrs
pop
jmp
dec
stos
aam
xor
sbb
jae
in
mov
mov
adc
inc
arpl
lds
fcoml
lret
mov
mul
jns,pt
outsb
repz
call
push
sbb
xor
mov
pop
andb
fidivl
pop
push
sub
inc
fcompl
pop
aad
fwait
mov
mov
xor
add
test
dec
and
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mulps
adc
ret
scas
lods
adc
mov
pop
adc
dec
xor
and
div
dec
inc
sub
sub
add
fsub
ja
push
scas
cmpsb
mov
xchg
gs
xchg
push
mov
scas
push
mov
das
mov
sbb
jo
sub
cmpxchg
out
jno
and
cld
mov
lcall
scas
push
repz
fimuls
stos
hlt
sbb
call
pop
stos
jnp
out
mov
loop
mov
shll
inc
outsl
loope
loope
pop
rcll
addl
pop
mov
pop
adc
sbb
gs
sub
test
cmc
xor
movsb
sbb
pop
add
mov
and
inc
mov
and
imul
xor
mov
cmp
jp
add
add
mov
sbb
orb
xor
mov
arpl
mov
clc
ljmp
push
imul
dec
and
push
mov
in
lret
cmp
subb
pop
imul
push
xchg
ja
push
mov
mov
sub
aam
xor
dec
popa
push
in
int3
fs
roll
popa
inc
outsl
mov
pop
mov
popf
int
xor
ret
add
into
hlt
sbb
mov
mov
ficoml
dec
sarb
inc
jmp
push
js
xlat
pop
movsb
jp
cwtl
hlt
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
test
sbb
adc
push
hlt
mov
popa
dec
mov
push
test
push
push
push
lds
push
inc
scas
repz
mov
push
icebp
cmpsl
test
mov
and
mov
jg
push
mov
popf
mov
nop
or
cmpsb
stos
push
pop
adc
movsb
jmp
pop
inc
jb
pop
jle
pushf
push
ret
pusha
mov
adc
fwait
shll
adc
adc
xchg
jnp
push
or
mov
in
mov
mov
and
inc
xchg
fdivl
adcb
sarl
add
loop
add
roll
mov
sarb
mov
cmc
or
or
pop
movsl
cli
jg
in
popa
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
ljmp
adc
add
and
clc
mov
push
inc
sbb
shrb
out
inc
rcrb
fucomi
mov
lds
xchg
movsl
aam
lcall
push
mov
mov
repnz
inc
push
int
add
decl
ret
lret
movsl
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
int
cld
jb
scas
repz
cmp
jl
xor
hlt
jbe
aas
dec
call
cld
sub
divb
std
lods
dec
jae
fdivrp
scas
cli
jb
ret
repnz
jns
outsb
ret
cmpb
repnz
dec
inc
outsb
or
aaa
xorl
xchg
jle
push
insl
mov
stc
sahf
xchg
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
fdiv
mov
xchg
aad
xchg
sub
pushf
ret
pop
mov
mov
sbb
push
xor
in
scas
jge
dec
pop
mov
pop
inc
cmpsl
lret
fucomp
add
fldt
repnz
dec
inc
sar
or
jg
test
sbb
mov
les
loopne
pop
dec
mov
jb
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
cmp
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
inc
and
leave
shr
mov
adc
dec
int3
les
add
and
push
inc
push
push
push
lds
int3
inc
lds
cltd
jb
sub
jae
enter
gs
jl
loop
jg
or
mov
fcmove
push
in
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
fsubrp
sub
movl
sti
stc
cli
in
test
or
test
cmp
adc
outsb
cmpsb
sub
mov
addb
rcrb
inc
sub
push
enter
bound
fcmovne
bnd
out
movsl
mov
inc
sub
jle
mov
repz
sub
daa
dec
lock
jge
inc
iret
shl
ja
std
outsl
addr16
call
pop
data16
jbe
fnstenv
sti
push
pop
mov
dec
fistl
ficomps
xchg
fistpl
cmp
je
inc
jl
outsb
xorl
jns
cmpsl
test
push
xchg
insl
cmp
in
into
cld
pop
mov
push
fidivrs
imul
xor
loop
sti
pop
es
sub
cmp
mov
sub
pushf
ret
pop
pushf
daa
lahf
iret
push
hlt
mov
inc
mov
nop
xlat
arpl
fcomip
push
push
inc
rorb
mov
pop
sub
mov
fisubrs
push
sahf
jge
loopne
adc
adc
lret
add
xor
mov
ljmp
pop
iret
sub
adc
inc
push
cld
xchg
cwtl
mov
sbb
mov
incl
mov
pushf
sbb
js
xor
int3
adcl
ret
jmp
pop
stos
aam
mov
jnp
inc
push
mov
or
mov
lock
inc
daa
popf
sti
xor
imul
fwait
lea
mov
inc
adc
sub
ficomps
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
inc
out
mov
enter
sbb
xchg
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
addr16
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
fucomip
jl
adc
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
lcall
inc
call
cmp
ret
loopne
dec
pop
inc
bnd
clc
sbb
and
lahf
lret
jecxz
gs
ror
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
jp
mov
adc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
pusha
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
pop
xchg
mov
test
cmp
or
sbb
push
cwtl
sub
das
push
pushf
dec
and
xchg
and
pop
stos
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sub
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
imul
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
rep
mov
mov
stos
mov
ja
xchg
test
test
inc
mov
pushf
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
aas
fildll
fdivrs
mov
bound
dec
lcall
sbbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
nop
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
popa
sub
inc
sarb
js
add
sub
sbbb
cmovle
mov
shll
cmp
jb
pusha
repz
push
enter
mov
cs
mov
mov
imul
push
adc
pop
cwtl
rclb
aad
js
xchg
icebp
scas
int3
sbb
scas
jns
fcmovnbe
dec
inc
fwait
call
xor
jp
aas
in
and
cmc
mov
insl
xchg
sti
aaa
negb
adc
mov
sbb
ss
out
fcmove
cmpb
js
ja
mov
inc
stos
xchg
adc
sub
pop
push
dec
push
dec
or
sbb
pusha
cli
lods
mov
mov
xchg
test
dec
mov
mov
dec
nop
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
adc
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
sbb
jno
aad
mov
push
adc
ret
outsb
pop
dec
push
bnd
int3
xor
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
jo
jb
dec
scas
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
invd
addl
add
push
aas
negl
mov
ret
and
sbb
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
mov
push
popl
cmc
sbb
call
or
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
cmp
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
mov
filds
inc
or
test
jle
movsl
aam
mov
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
iret
fisttps
fimull
jecxz
test
dec
shlb
jo
and
add
pop
mov
scas
sbb
fcomps
stc
leave
mov
dec
lods
mov
jnp
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
sarb
sbb
mov
sbb
test
adc
test
sub
cmp
sbb
dec
ret
fld1
std
jge
aam
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
cltd
sub
popl
lahf
jle
dec
call
cmp
inc
jb
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
gs
cmpsl
mov
fwait
lea
mov
inc
adc
sub
ficompl
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xchg
fildl
mov
mov
test
enter
sbb
jae
inc
fisubrl
fmuls
in
lcall
pop
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xlat
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
adcl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
cwtl
call
cmp
inc
por
clc
sbb
and
lahf
lret
jecxz
gs
aad
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
pop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
push
fnsave
push
test
lret
mov
repnz
stos
loopne
push
xchg
push
jae
cld
ret
pushf
pop
mov
xchg
test
cwtl
data16
xlat
jns
inc
scas
push
pop
jo
movsl
or
xor
mov
xchg
dec
ljmp
fcoml
adc
ljmp
stc
jmp
js
or
xchg
hlt
sbb
cwtl
int3
dec
and
test
pop
aam
test
ret
adc
xchg
mov
pop
push
rep
icebp
mov
xor
insl
or
hlt
pop
mov
jmp
mov
sub
push
hlt
es
lea
cmp
lea
test
or
pop
mov
xor
mov
jp
mov
in
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
lods
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
aam
mov
lds
cmp
add
aas
push
cwtl
sub
das
inc
pushf
dec
and
xchg
loope
pop
stos
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
pusha
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
fbld
lcall
sub
test
test
inc
mov
jne
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
scas
mov
imull
mov
mov
bound
dec
and
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
xchg
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
imul
xchg
dec
jb
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ss
scas
inc
movsl
fcompl
xchg
cwtl
or
insl
add
jbe
dec
cltd
push
aas
jb
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
cmp
jmp
sbb
repnz
xchg
jp
dec
push
test
sub
cmp
inc
out
mov
ret
fld1
std
jge
pop
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
dec
xchg
mov
sub
ret
inc
and
call
cmp
inc
adc
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
cs
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fmull
fistpl
mov
mov
test
enter
sbb
je
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
arpl
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
orl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
jmp
jne
or
repz
ret
loopne
dec
pop
inc
imul
clc
sbb
and
gs
fxch
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
sar
inc
mov
imull
orl
push
jl
jae
mov
adc
iret
xlat
cwtl
pop
cmp
pop
push
jmp
adc
or
mov
cmp
ret
mov
cltd
lret
jmp
add
pusha
add
fcomip
cli
cmc
xor
jle
outsl
cltd
stos
jecxz
inc
inc
sbb
jo
push
mov
sbb
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
in
into
ret
test
cmpsb
mov
and
es
fcoms
add
sbb
fdivl
adc
sbb
jne
cmpsl
call
cmp
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
inc
enter
int
lods
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
add
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fnstcw
pop
out
mov
leave
mov
mov
add
nop
push
cwtl
sub
das
mov
jne
pop
stos
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
imul
dec
cmpsl
mov
imul
lahf
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
lock
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aas
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
xor
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jno
scas
mov
imull
mov
mov
bound
dec
imull
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
fsubrl
cmpsl
xchg
test
dec
mov
and
dec
lods
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
xchg
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
in
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jne
jo
jb
dec
xchg
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
or
pop
cmp
stos
addl
add
push
aas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
pop
popl
and
adc
xchg
jp
dec
mov
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
cmp
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
mov
filds
inc
or
test
jle
movsl
aam
mov
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
iret
fisttps
fimull
jecxz
test
dec
shlb
jo
and
add
pop
mov
scas
sbb
fcomps
stc
leave
mov
dec
lods
mov
jnp
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
subb
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
stc
xchg
mov
sub
xchg
lahf
jle
dec
jae
jb
js
cmp
cltd
enter
jle
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lods
push
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ljmp
lret
out
mov
enter
sbb
xchg
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
push
cmp
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
inc
call
cmp
ret
loopne
dec
pop
inc
jmp
repz
sbb
and
lret
jecxz
gs
jns
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
jp
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fmul
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
stos
mov
pop
cmp
mov
js
cmp
sbb
push
cwtl
sub
das
pop
pushf
dec
and
xchg
xchg
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mulb
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
or
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aad
mov
mov
stos
mov
ja
test
test
inc
mov
mov
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cmpsl
fildll
mov
mov
bound
dec
sub
xchg
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
or
fidivrl
jo
cs
mov
inc
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
lds
xor
ret
mov
jge
rcll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
push
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
ljmp
cmpsb
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
lahf
loop
xchg
dec
lcall
xchg
sbb
add
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
call
fcompl
xchg
in
addl
add
push
aas
ficomps
mov
ret
js
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
test
xchg
sbb
into
and
xchg
jp
dec
fs
sub
cmp
sbb
in
ret
fld1
std
jge
test
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xor
sub
mov
inc
inc
and
call
cmp
inc
popl
cltd
iret
mov
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
cwtl
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
out
mov
enter
sbb
fwait
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xorl
jge
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
xchg
call
cmp
loopne
dec
pop
inc
mov
in
and
lahf
inc
enter
int
sub
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
arpl
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
hlt
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pushf
mov
pop
sahf
mov
pop
mov
mov
add
test
xor
pushf
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
repnz
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
arpl
lcall
sub
test
test
inc
mov
xchg
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
hlt
fildll
clc
mov
mov
bound
dec
adc
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
shrb
test
jo
ret
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
pop
test
xor
sbb
cmp
fucomi
jge
rcll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
jno
inc
push
cmp
ret
outsb
pop
dec
mov
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
mov
adc
pusha
sarb
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ss
scas
inc
movsl
fcompl
xchg
sub
addl
add
push
aas
ss
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
inc
es
mov
sbb
lds
adc
test
sub
cmp
mov
ret
fld1
std
jge
popa
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
movsl
xchg
mov
sub
adc
cmovge
call
cmp
cltd
enter
loope
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
outsl
push
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fisttps
fistpl
mov
mov
test
enter
sbb
xchg
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
ret
mov
call
cmp
ret
loopne
dec
pop
inc
por
clc
sbb
and
lret
jecxz
gs
fs
int
mov
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
adc
mov
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jle
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
add
pop
inc
mov
sahf
mov
mov
add
mov
hlt
das
mov
jle
pop
stos
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
cld
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lcall
sub
test
inc
mov
stc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
aaa
fildll
push
pop
mov
bound
dec
mov
shlb
or
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
sbbl
in
dec
test
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
ret
xlat
rorl
pop
mov
fldenv
divb
popa
imul
xor
hlt
cmp
test
sahf
js
rcr
add
push
mov
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
das
sub
cmc
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
dec
test
xor
sbb
mov
cmp
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
gs
xor
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
loop
xchg
dec
out
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
das
or
cmp
add
push
aas
or
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
int3
test
sub
cmp
sbb
loope
fld1
std
jge
mov
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adc
sub
push
loope,pt
and
call
cmp
enter
lret
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
decb
fistl
je
inc
enter
sbb
jp
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lahf
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
addl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
adc
repz
ret
loopne
dec
pop
inc
out
jmp
clc
sbb
and
lahf
lret
jecxz
gs
jle
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jle
mov
fadd
mov
xchg
mov
mov
add
fs
cwtl
sub
das
xor
pop
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
xor
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
cli
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lods
movsl
mov
mov
stos
mov
ja
xor
cmp
mov
iret
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
sub
fistpl
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
call
fsubl
stos
inc
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
subl
mov
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
stos
inc
movsb
pop
sbb
jno
pop
push
cmp
ret
outsb
pop
dec
out
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jb
jo
jb
dec
fsubrs
adc
pusha
sarb
sub
push
mov
rclb
movsl
ret
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
or
addl
add
push
aas
or
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
mov
fdivrs
fcompl
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jno
mov
sub
testl
in
jb
js
cmp
testl
sbb
cltd
xchg
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
push
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
das
push
or
int
imul
push
sub
jg
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sbb
fistl
test
enter
sbb
cs
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lret
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
adcl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
idivl
fs
cmp
ret
loopne
dec
pop
inc
jnp
repz
sbb
and
lahf
lret
jecxz
gs
jb
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
loope
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fmul
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpl
and
jbe
movsb
mov
mov
add
lods
push
cwtl
sub
das
sbbl
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
in
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sti
movsl
mov
mov
stos
mov
ja
cld
test
test
inc
mov
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
stc
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
cmp
sbb
xchg
adc
data16
push
fidivrl
into
ss
xorb
or
and
pop
cmpsb
fcomi
sti
jne
loope
enter
out
pop
lret
rcl
dec
inc
sbb
xor
cmp
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
in
movsl
mov
mov
stos
mov
ja
adc
push
cmp
inc
mov
loope
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
stc
fildll
stc
mov
mov
bound
dec
adc
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
ret
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
arpl
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
jmp
xor
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmp
jo
jb
dec
push
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
nop
jp
mov
jbe
adc
leave
mov
sbb
jecxz
fisttpl
pop
or
xchg
jns
xor
pop
clc
bnd
loope
jne
std
xor
fnstenv
mov
push
cmp
jns
test
inc
test
mov
or
xor
lock
test
add
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
gs
xchg
dec
sbb
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
adc
pop
jne
andl
addl
add
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
popl
mov
adc
xchg
jp
dec
pusha
test
sub
cmp
sbb
push
ret
fld1
std
jge
enter
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xor
sub
push
lods
inc
and
call
cmp
cltd
enter
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
pop
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
and
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
loopne
cmpsb
inc
cmpsl
fstp
dec
out
mov
enter
sbb
jle
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xor
fucomip
jl
cmpl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
sbb
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
lahf
lret
jecxz
gs
xor
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
add
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
in
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
rorl
inc
add
dec
push
cwtl
sub
das
jbe
dec
and
xchg
lcall
repnz
sbb
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sahf
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
lods
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
leave
movsl
mov
mov
stos
mov
ja
stc
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
adc
fldt
arpl
mov
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pusha
lods
mov
mov
xchg
test
dec
mov
cltd
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
jno
cmp
adc
ret
outsb
pop
dec
fs
xor
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
pop
sub
or
cmp
sub
push
mov
rcrb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
cmp
pop
in
andl
addl
add
push
aas
jle
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
sarl
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
outsb
mov
in
iret
inc
sbb
pop
sbb
idivb
aad
mov
cs
lret
fisttpll
lcall
pop
in
mov
testl
xchg
mov
xor
ret
cmp
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
add
fcompl
xchg
nop
or
add
add
push
aas
jae
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
fsubr
mov
mov
dec
cmp
cs
aam
cmp
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
cmp
cwtl
jbe
mov
jbe
push
xchg
add
mov
iret
add
mov
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
pop
subb
insl
lods
mov
rcl
lcall
jb
mov
xor
inc
xor
fdecstp
js
cmc
popf
scas
inc
movsl
fcompl
xchg
sti
or
mov
or
push
aas
ret
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
inc
es
mov
sbb
mull
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rcll
or
xchg
mov
lds
lahf
jle
dec
and
jb
js
cmp
cltd
enter
popa
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
test
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
lea
aad
mov
mov
test
enter
sbb
test
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
adcl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
jne
aas
call
cmp
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
jecxz
gs
test
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
scas
mov
mov
add
sub
cwtl
sub
das
inc
pushf
dec
and
xchg
mov
in
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
jns
inc
scas
push
pop
lock
test
stc
pop
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
out
es
dec
or
pop
sbb
xor
fptan
jnp
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
out
cmp
fdivrl
repz
mov
hlt
sbb
cmp
decb
aad
int
cmp
mov
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
in
mov
cmc
mov
mov
add
jae
xor
pushf
dec
and
xchg
lret
stos
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jo
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
or
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
cld
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cmp
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
loop
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
jne
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
jns
bnd
int3
xor
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
sbbb
adc
jle
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
push
mov
and
inc
inc
fcmovnu
loopne
outsl
mov
mov
mov
sbb
push
outsb
sbb
ret
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
int
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
cmpb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
cmpsb
jmp
xor
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
aad
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
adcb
pop
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
stos
jmp
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
outsl
loop
xchg
dec
cmp
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lcall
pop
jb
andl
addl
add
push
aas
dec
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
andl
mov
mov
and
xchg
jp
dec
xlat
test
sub
cmp
sbb
movsb
ret
fld1
std
jge
mov
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
dec
inc
and
call
cmp
cltd
enter
in
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
icebp
pop
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
iret
lea
mov
mov
mov
test
enter
sbb
test
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
xor
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
leave
idivl
ja
repz
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
lret
jecxz
gs
fxch
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xlat
mov
pop
ret
mov
or
cmp
sbb
push
cwtl
sub
das
je
dec
and
xchg
xor
pop
stos
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
adc
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
or
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sbb
lcall
sub
test
test
inc
mov
outsb
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cmp
scas
mov
imull
mov
mov
bound
dec
sub
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
and
dec
popf
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
push
test
xor
sbb
or
fucomi
jge
rcl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
stos
inc
movsb
pop
sbb
jno
push
push
cmp
ret
outsb
pop
dec
jg
bnd
int3
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
adc
jo
jb
dec
or
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
dec
popf
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
aas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
inc
es
mov
sbb
sub
adc
test
sub
cmp
sbb
iret
ret
fld1
std
jge
lock
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sub
sub
ds
and
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jle
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
or
fisttpl
out
mov
enter
sbb
sbb
inc
imul
daa
add
push
xchg
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xor
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
adcl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
imul
cmp
ret
loopne
dec
pop
inc
fsubrp
repz
sbb
and
gs
push
enter
int
cmp
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sbb
pop
mov
mov
pop
mov
mov
add
insl
push
cwtl
sub
das
dec
pushf
dec
and
xchg
lods
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
jne
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
sub
cmp
inc
mov
mov
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
aaa
lods
mov
mov
xchg
test
dec
mov
test
dec
inc
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
aam
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
push
jmp
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
fldcw
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jge
scas
inc
movsl
fcompl
xchg
sti
or
mov
add
push
aas
rcrl
mov
ret
pop
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
out
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
cmp
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
mov
filds
inc
or
test
jle
movsl
aam
mov
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
iret
fisttps
fimull
jecxz
test
dec
shlb
jo
and
add
pop
mov
scas
sbb
fcomps
stc
leave
mov
dec
lods
mov
jnp
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
rcrb
mov
into
popl
jno
mov
and
xchg
jp
dec
subb
adc
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
and
sub
xchg
mov
dec
inc
and
call
cmp
inc
cli
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
pop
push
or
int
imul
push
sub
jle
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fistl
je
call
sbb
outsb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
stos
call
cmp
ret
loopne
dec
pop
inc
cmp
repz
sbb
and
lret
jecxz
gs
sbb
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
inc
mov
nop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
pop
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
out
mov
pop
pop
mov
jmp
sbb
ret
iret
push
sbb
push
cwtl
sub
das
cmp
out
pop
stos
fsubr
test
xchg
leave
pusha
fldt
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
std
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
movsl
mov
mov
stos
mov
ja
xchg
test
test
inc
mov
jl
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
inc
fildll
sub
pop
mov
bound
dec
int
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
cmp
cmpsl
xchg
test
dec
mov
lcall
out
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
popa
sub
inc
sarb
js
add
sub
sbbb
cmovle
mov
shll
cmp
jb
pusha
repz
push
enter
mov
cs
mov
mov
imul
push
adc
pop
cwtl
rclb
aad
js
xchg
icebp
scas
int3
sbb
scas
jns
fcmovnbe
dec
inc
fwait
call
xor
jp
aas
in
and
cmc
mov
insl
xchg
sti
aaa
negb
adc
mov
sbb
ss
out
fcmove
cmpb
js
ja
mov
inc
stos
xchg
adc
sub
pop
push
dec
push
dec
or
sbb
pusha
out
mov
mov
xchg
test
dec
mov
je
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
iret
test
xor
sbb
xchg
fucomi
jge
shrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
mov
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
nop
jp
mov
jbe
adc
leave
mov
sbb
jecxz
fisttpl
pop
or
xchg
jns
xor
pop
clc
bnd
loope
jne
std
xor
fnstenv
mov
push
cmp
jns
test
inc
test
mov
or
xor
lock
test
add
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
std
loop
xchg
dec
outsb
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
out
scas
inc
movsl
fcompl
xchg
and
addl
add
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
ret
popl
je
mov
and
xchg
jp
dec
jo
push
sub
cmp
sbb
movsl
ret
fld1
std
jge
jecxz
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jo
mov
sub
mov
lahf
jle
dec
fld1
jb
js
cmp
inc
fwait
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
mov
repz
lea
mov
inc
adc
sub
cli
push
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cli
lea
pop
out
mov
enter
sbb
test
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
cmpl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
lods
call
cmp
inc
inc
jmp
clc
sbb
and
lret
jecxz
gs
push
enter
int
loopne
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
lret
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jno
mov
mov
jbe
push
mov
mov
add
loop
xor
pushf
dec
and
xchg
cmp
in
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mulb
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
adc
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
int
shrl
inc
mov
test
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
pop
mov
mov
bound
dec
xlat
sub
xor
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lds
fidivl
jo
lea
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
test
xor
sbb
cltd
fucomi
jge
rcll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
loopne
bnd
int3
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fsubp
jo
jb
dec
dec
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
test
pop
or
stos
pusha
or
out
add
jbe
dec
mov
aam
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loope
mov
popf
adcl
push
lods
fwait
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
sbb
mov
sbb
jae
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
sti
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
pop
test
jecxz
cli
mov
inc
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sahf
xchg
mov
sub
mov
cmovge
call
cmp
inc
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
icebp
mov
loopne
xchg
pop
push
add
fcomi
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
test
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
movsb
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
test
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
mov
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
xor
inc
pop
mov
repz
lods
cmp
cmpsl
pop
insb
ja
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
loope
rolb
call
mov
mov
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
int3
push
or
int
imul
push
sub
jg
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
lds
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
stc
lea
lods
out
mov
enter
sbb
or
inc
aaa
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
les
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
je
mov
mov
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
xorl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldcw
inc
in
mov
insb
jnp
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
inc
idivl
ss
cmp
loopne
dec
pop
inc
imul
repz
sbb
and
lahf
lret
jecxz
gs
jp
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
ret
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
add
xchg
dec
rcrl
adc
push
mov
inc
mov
dec
mov
pop
or
pop
movsl
cmp
push
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
rcl
int3
add
sub
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
jp
mov
fdivrp
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ret
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
leave
adc
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
or
ficomps
mov
inc
mov
mov
add
std
push
cwtl
sub
das
aas
pushf
dec
and
xchg
xlat
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
lcall
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
enter
push
loope
cmpsb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
rorl
lods
mov
jbe
xor
stc
ret
bound
sub
xor
mov
or
pop
xchg
mov
inc
sub
add
or
pop
movsl
jp
mov
pop
scas
fsubr
pop
fisubs
movb
lods
fcmovnb
enter
scas
test
pop
aam
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cli
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
andl
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
adc
mov
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
lcall
sub
push
cmp
inc
mov
and
cld
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fidivl
sbbl
jge
subl
adc
sub
push
inc
add
test
fcoms
cmp
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
movsl
fildll
repz
mov
bound
dec
subl
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int
pop
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
stos
pop
dec
mov
flds
dec
shrb
dec
les
cmp
cmpsl
or
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
lea
clc
and
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
scas
rol
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
push
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jp
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
aam
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
iret
adc
test
inc
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
lods
jmp
xor
mov
popf
dec
stc
jmp
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
stos
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
out
loop
xchg
dec
shrb
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rcll
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
sbb
bnd
movsl
mov
stc
and
fucomi
testl
lea
xchg
shl
pop
cmp
xchg
imul
out
mov
movsb
inc
sbb
pop
cmp
jmp
cmpsb
sti
cmc
stos
fwait
iret
sbb
int
aam
js
arpl
mov
push
or
xchg
dec
push
lret
dec
xchg
fildll
test
repz
stos
jmp
mov
pop
sbb
pop
iret
cmp
dec
lahf
vpcmpd
mov
mov
roll
test
decl
push
push
loope
stos
clc
rdtsc
pushf
mov
sub
sahf
mov
icebp
pop
mov
dec
add
popf
xlat
fcomps
bound
call
mov
imulb
sbb
jge
pop
xor
movsb
in
vpandn
stos
bound
push
bnd
lods
scas
loope
out
test
jl
nop
stc
and
or
or
getsec
xchg
int
push
mov
lret
call
sahf
out
adc
inc
and
mov
cli
test
iret
insl
popf
xchg
js
mov
adc
cld
jl
push
or
xchg
dec
pop
or
pop
lds
test
insb
ss
fdivs
rolb
dec
cltd
jmp
fucomip
call
lock
call
pop
inc
sbb
jge
pop
ret
cmp
pop
dec
idiv
jl
pusha
sub
xor
stos
push
sub
push
inc
cli
jne
repnz
lods
add
adc
mov
ficoml
lcall
xchg
test
iret
scas
push
mov
scas
xchg
orl
movsb
stos
fnsave
jnp
or
fstpl
jl
cmp
fildl
adc
fists
js
add
js
adc
sbb
inc
sbb
mov
jnp
add
inc
sub
mov
out
push
test
sub
cwtl
out
out
or
cmpsl
ret
push
cltd
int
inc
cmc
fisubs
push
aam
or
mov
and
xor
int
pop
sbb
inc
int
mov
movsb
sahf
divb
pop
out
xchg
mov
ret
repz
or
pop
adcb
ret
jecxz
mov
and
loop
mov
pushf
dec
and
shll
jo
jno
stos
push
sub
lods
mov
scas
movl
jo
lcall
pop
sub
test
inc
scas
xchg
ficompl
and
push
cmp
test
add
lahf
add
mov
xchg
inc
xchg
leave
loop
js
mov
enter
inc
sbb
pop
dec
loop
push
daa
xchg
xchg
lock
inc
test
cltd
push
mov
sub
in
jbe
inc
mov
mov
cmp
jmp
mov
mov
jp
and
mov
popf
dec
inc
hlt
mov
jp
adc
lret
cwtl
dec
daa
imul
mov
fisubl
and
mov
idiv
mov
call
lock
ljmp
pop
mov
jmp
in
pop
fisttpl
pop
xchg
insb
sub
push
stos
push
clc
cmpsl
sbb
lret
into
lods
add
adc
pextrw
cmp
mov
ljmp
lds
sbb
fildll
pop
jnp
movsl
icebp
lcall
lods
jae
pop
and
xchg
leave
add
push
mov
jmp
push
mov
rcr
enter
adc
mov
lret
ret
subb
aaa
aas
lret
inc
nop
lret
xor
leave
rcl
movsb
inc
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
or
loopne
je
dec
and
gs
xchg
jns
ret
scas
add
pop
push
test
sbb
ljmp
push
cmp
iret
xchg
adc
js
push
inc
lahf
lret
jecxz
add
scas
push
neg
add
mov
fildll
or
ret
dec
xchg
xchg
push
hlt
sub
idivb
jb
jns
ljmp
push
sub
out
mov
mov
je
fnsave
mov
cld
xor
movsb
xor
mov
cmpsb
xor
jb
fisttpll
fwait
enter
leave
bound
fcomi
js
mov
sub
jo
mov
add
rclb
sub
adc
mov
imul
mov
fwait
sbb
xlat
pop
stc
mov
fwait
push
fwait
jmp
xchg
cmp
or
sub
mov
cltd
adc
lret
sbb
or
xor
mov
xchg
mov
aam
test
loopne
popl
xor
mov
add
mov
mov
cmc
sub
ja
mov
notb
mov
cli
jns
lds
nop
lds
clc
sub
lret
push
xchg
push
into
cmp
sub
retw
inc
cmp
test
aam
lds
add
dec
mov
pop
icebp
pop
lds
sbb
sbb
push
je
int3
xor
icebp
cmp
cmp
sti
add
push
sub
mov
inc
test
dec
xchg
mov
push
in
imul
sub
cli
ss
and
mov
jmp
std
mov
sti
and
or
loopne
je
dec
and
gs
xchg
jns
jo
daa
jmp
adc
jo
sub
mov
push
sahf
xor
test
lcall
mov
mov
mov
lret
mov
add
lret
cmpsl
cmp
cwtl
hlt
lods
ret
sbb
stos
dec
lahf
mov
test
mov
sbb
dec
push
or
mov
je
fcomi
add
push
sbb
roll
push
lcall
push
stos
xchg
fwait
adc
out
xchg
adc
test
fstl
jl
inc
jo
pusha
or
repnz
sbb
bnd
mov
or
sbb
mov
fwait
push
dec
mov
mov
out
jmp
call
cmp
push
popf
mov
cmp
or
mov
xchg
in
pop
bound
sub
imul
fldt
testl
push
mov
mov
rclb
jns
pop
mov
test
add
dec
jns
sti
mov
jecxz
dec
lods
mov
je
loope
dec
sbb
orb
ret
xor
lret
aas
mov
hlt
dec
neg
xlat
incl
pop
jecxz
mov
xor
stos
into
and
pop
lahf
lcall
les
mov
jl
xchg
stos
xor
sub
add
inc
test
pushf
sub
push
movsb
mov
gs
outsl
cld
push
out
fistl
fadds
scas
fbstp
cmp
rcrb
bound
or
adc
xchg
imul
or
and
into
xor
add
andb
pop
insl
icebp
mov
add
call
xchg
sbbl
inc
cmp
sub
pop
push
or
out
idivl
mov
push
dec
jbe
testl
test
lcall
xchg
clc
sub
lret
call
sbb
mov
ret
mov
add
push
enter
dec
pushf
mov
test
jns
push
ja
inc
in
std
dec
sbb
sub
mov
rcrl
les
sbb
shlb
or
pop
lahf
scas
lret
ljmp
rep
pop
and
mov
sar
mov
push
fcom
orb
daa
leave
loop
mov
mov
shl
sub
sbb
mov
xchg
lock
mov
popf
xor
push
js
cmp
sbb
xchg
lcall
rcrb
bound
sbb
lods
rorl
sbb
andl
push
negl
dec
add
mov
lods
fwait
jmp
iret
pushf
dec
cmc
clc
sti
xchg
add
sub
pop
arpl
pusha
inc
mov
xchg
and
adc
dec
inc
xor
sbb
sarl
and
push
stos
dec
in
xchg
xchg
cli
sbb
adc
test
outsb
pusha
mov
mov
popa
shlb
mov
test
enter
xchg
push
adc
mov
jae
mov
icebp
stos
jbe
cmp
movsb
jns
mov
in
bnd
jg
or
push
addl
mov
sub
inc
fwait
and
jmp
sbb
dec
and
stos
clc
jbe
jmp
movsb
cli
jno
xchg
imul
in
outsl
xchg
pop
mov
xchg
and
int3
pop
sbb
stc
dec
push
movsb
xchg
pop
insl
xchg
out
fisubrs
fsubr
dec
mov
jo
imul
adc
or
cltd
mov
add
mov
cmp
jp
add
add
cmp
cmp
or
inc
cmc
retw
lds
inc
aas
mov
pushf
fs
or
add
sbb
mov
stc
mov
pop
das
xchg
stc
cli
in
test
or
pop
sbb
imulb
jge
lcall
loop
and
xchg
sbb
call
aas
pop
ret
movsl
xchg
dec
and
in
into
xchg
add
push
pop
xchg
cmp
test
mov
or
pop
jns
dec
js
add
dec
aam
mov
sbb
pop
ret
cmp
or
lahf
popl
push
out
mov
push
cmp
hlt
xor
test
test
jp
adc
pop
mov
daa
popa
cmpsl
mov
sahf
shlb
add
std
xlat
movsl
aad
sub
dec
or
push
adc
pop
sti
mov
mov
mov
aad
pushfw
es
pop
xchg
jge
sub
js
movsl
mov
imulb
outsl
pop
sti
jle
movsb
sub
jnp
dec
mov
outsb
lret
out
jae
fisttpl
sahf
mov
arpl
bound
cwtl
mov
outsb
dec
das
sbb
add
jl
cmp
pop
or
fwait
lods
mov
xchg
cltd
push
adc
mov
pusha
mov
jmp
push
push
sbb
je
inc
sarb
or
or
push
js
xchg
xor
pop
push
and
xchg
jp
lea
push
sub
cmp
jae
pop
jne
sbb
sbb
in
scas
jmp
pushfw
ret
mov
push
adcb
pop
or
int
imul
sahf
dec
cmp
ret
lcall
cmp
shll
iret
xchg
push
jae
mov
sbb
aas
mov
xchg
xor
cwtl
adc
popf
cltd
stos
jl
lret
push
sbb
xor
mov
ret
push
dec
sahf
cmpsl
inc
sub
dec
lahf
sbb
jae
mov
pop
daa
jecxz
sub
dec
sub
addb
xor
fisubrl
rorl
jg
hlt
sahf
fs
enter
mov
lods
mov
mov
jmp
mov
lock
mov
or
aaa
push
push
test
dec
mov
mov
xchg
scas
pop
movsl
pop
jae
inc
insl
ret
imul
pop
mov
xchg
or
dec
mov
negl
or
inc
hlt
jb
jo
adc
xchg
imul
popa
inc
fadds
inc
inc
dec
daa
mov
in
repz
cmp
add
repz
mov
jns
pop
fisttpl
pop
sub
add
rcrl
lds
xchg
fs
mov
cmp
lret
dec
clc
xchg
jnp
sub
mov
mov
rcr
into
add
jb
pushf
loop
xor
sbb
mov
leave
insl
stos
aam
and
xchg
out
idivb
stos
dec
xchg
out
shrb
test
rcrb
ret
cli
mov
and
push
push
jle
mov
fs
and
and
adc
out
into
mov
jmp
adc
mov
inc
jecxz
fcmovnb
pop
cmpsb
fldt
mov
inc
and
fisubrs
gs
push
fidivrs
and
jnp
xlat
sahf
gs
push
cmp
inc
call
jmp
and
mov
mov
into
sbb
mov
shlb
aad
in
lock
jns
outsl
pop
adc
push
hlt
cs
jecxz
mov
xchg
pop
popf
int3
jcxz
adc
adc
stos
adc
imul
in
int
test
adc
jge
push
pop
adc
das
push
mov
xchg
test
cmpsl
dec
add
xchg
lahf
lods
lret
cmp
femms
enter
sub
lods
inc
dec
fstpl
sbb
or
inc
fwait
pusha
loop
inc
aas
cmpsl
imul
js
cmp
or
pushf
pop
shl
je
scas
mov
xchg
call
lods
jp
add
lret
sub
popl
enter
inc
stos
out
enter
dec
fldl
xchg
mov
jb
bound
adc
stos
cmpb
adc
mov
les
pop
popl
fcomps
repz
inc
out
mov
dec
stos
adc
movhps
and
out
cltd
ror
sub
mov
bound
cmpsl
add
jecxz
fisttps
dec
and
ror
lods
cmp
push
test
mov
loop
mov
cmpsl
rorl
push
dec
in
mov
movb
fsub
lds
pusha
insl
pop
lea
or
inc
mov
insl
test
pop
inc
xchg
xchg
push
cld
mov
in
data16
xor
jo
cmp
pop
pop
sbb
mov
stc
loope
mov
push
aaa
fwait
iret
pop
inc
mov
push
fcmovnu
and
xchg
imul
mov
pop
das
cmp
lahf
mov
aaa
sarb
jge
out
popf
ljmp
loope
xchg
push
cltd
leave
inc
xor
xor
cmpsl
dec
xor
xor
imul
repz
fdecstp
jne
popa
pop
jne
mov
clc
adc
inc
inc
divl
push
xchg
or
adc
pop
dec
mov
pop
sub
xor
mov
xchg
aad
icebp
mov
clc
movsl
imul
sarl
xchg
inc
pop
scas
mov
imull
clc
lcall
shrl
cmp
xchg
sbb
movsl
xchg
or
lea
add
mov
add
test
jecxz
pushf
xchg
enter
jne
add
xchg
aas
bnd
pop
or
and
mov
andl
stos
aas
add
add
popf
sbb
fadds
clc
ja
pop
pop
xchg
dec
and
xchg
stos
dec
arpl
sbb
mov
cmp
test
iret
inc
aad
fcmovne
sbb
mov
fildll
mov
clc
inc
daa
adc
inc
sbb
mov
xchg
js
sub
fildl
or
cmp
pop
inc
inc
pop
push
leave
ss
mov
fisttps
mov
sub
idivb
xchg
lock
adc
test
in
ds
inc
mov
lret
mov
fs
fistpll
mov
pop
jno
test
dec
mov
dec
jge
testl
gs
outsb
sub
sbb
add
sub
pop
pushf
ret
fsubl
sub
ds
add
enter
incl
xchg
mov
add
mov
xchg
mov
arpl
cltd
movsl
push
aas
fwait
lret
in
mov
mov
xchg
cltd
test
cmpsb
int
int3
bound
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
out
loope
dec
stc
dec
mov
repnz
and
mov
test
fwait
mov
jmp
jecxz
movsl
mov
mov
sub
pushf
jg
negb
adc
cwtl
jnp
and
inc
cltd
lret
lcall
sbb
xor
pushf
lds
arpl
inc
sbb
test
mov
sbb
lcall
cmp
fcoml
sbb
add
lods
jle
cltd
lds
test
repnz
fstps
mov
ds
dec
push
mov
sub
iret
inc
add
rol
and
fmuls
adc
aas
call
mov
mov
pop
mov
gs
mov
inc
cltd
enter
push
movsl
fdivr
sbb
inc
or
cltd
cmp
test
js
test
or
aas
lea
ss
pop
sbb
ljmp
sti
pop
es
fimuls
jnp
mov
mov
in
or
int
nop
pop
stos
push
lods
xchg
sub
adc
leave
push
push
clc
stos
ss
dec
push
dec
push
dec
mov
pop
mov
loope
in
sub
pop
movsl
outsb
xchg
mov
lods
test
pushf
test
pop
push
fistl
movsb
pushf
inc
jnp
js
lcall
xor
aas
repnz
jnp
jle
mov
mov
loop
xchg
fsts
andb
dec
mov
and
jns
push
hlt
fiadds
mov
mov
pop
mov
gs
outsl
aad
xor
pop
sbb
add
andb
js
sbb
sahf
dec
sub
fbstp
stos
sbb
mov
pop
adc
call
shr
lret
mov
repz
or
sbb
mov
cltd
jo
fcomps
je
cmp
pop
pushf
dec
test
icebp
fsubrl
adc
sub
sbb
shrb
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
xor
lods
fisttpl
lcall
push
lcall
mov
pop
xchg
jbe
mov
jno
shrl
lahf
scas
xlat
fildl
repz
pop
mov
cmp
cwtl
lock
clc
or
adc
mov
je
pop
push
mov
test
xchg
xor
inc
daa
int3
or
mov
negl
inc
sub
test
cmpsb
sbb
inc
aaa
in
loope
test
dec
shll
cmp
xchg
sub
shr
mov
inc
clc
cmp
adc
cmp
pop
jae
pop
jb
mov
mov
repz
fdivrl
or
lret
pop
xor
sbb
test
lcall
inc
xor
sub
mov
lret
push
stos
adcl
mov
sbb
jge
insl
aad
push
fldt
cli
in
test
or
jo
inc
clc
shrb
sbb
mov
shlb
fnsave
xor
jecxz
sbb
pop
test
jp
scas
jg
leave
in
cltd
push
cmpsl
inc
add
test
add
add
cmpsl
add
inc
cmp
rclb
les
adc
xor
test
sub
std
aad
pop
cmpsb
enter
sub
or
pop
fsubl
jne
jae
dec
insb
test
inc
sub
fimuls
cmpsl
adc
mov
lds
dec
mov
sbb
ljmp
std
jne
or
push
adc
fsubr
aaa
gs
mov
pop
sub
addl
push
adc
mov
sbb
pushf
push
sub
mov
mov
xor
scas
dec
sbb
gs
pop
or
test
mov
dec
fisttpll
push
fldt
out
ds
lahf
sbb
jae
cld
int
or
scas
xchg
ficoml
lcall
dec
ret
and
adc
shrb
mov
aad
mov
mov
mov
fwait
out
sti
cli
mov
add
inc
subl
xchg
xchg
pop
dec
enter
addb
int
xchg
mov
xchg
sbb
or
popf
and
dec
int
fwait
xlat
xchg
flds
cmp
fadd
push
rolb
push
lock
ret
and
imul
add
lock
arpl
mov
mov
jae
or
jle
sbb
sbb
adc
retw
mov
pop
mov
lret
mov
out
xor
fldt
sbb
les
addr16
dec
push
pop
sbb
test
sbb
lds
arpl
push
mov
mov
or
dec
rcl
mov
outsb
shrb
xor
and
or
sub
pusha
mov
loopne
dec
shl
stos
leave
fs
jo
mov
iret
or
or
mov
loopne
fidivrl
std
xchg
mov
push
sbb
xchg
mov
jp
cmpsl
ret
test
gs
sbb
out
cmp
mov
adc
jb
pop
rcll
ret
push
jp
out
sub
pop
push
dec
mov
shlb
ljmp
lea
les
jmp
mov
std
dec
gs
cmp
leave
xor
pop
pop
or
je
cmpsl
mov
xor
fisttpl
xor
fmuls
mov
nop
stos
inc
xor
mov
jae
add
arpl
incb
or
cmp
adc
lock
cmc
pusha
roll
nop
test
add
mov
cltd
lret
inc
push
pusha
fidivrs
cwtl
cmp
sbb
dec
dec
sub
andl
or
adc
incb
test
dec
xlat
adc
scas
inc
mov
out
inc
sbb
sarl
mov
xor
lea
add
mov
cmp
sbb
lret
dec
mov
inc
sbb
push
xchg
sti
mov
das
es
xor
stc
mov
mov
cmc
xchg
adc
mov
pop
and
test
xchg
push
or
pop
cld
subl
xor
popa
pop
clc
xchg
mov
sbbl
xchg
lahf
inc
cmpsb
push
test
cwtl
xor
frstor
jmp
mov
aaa
sbb
pop
push
test
roll
fcoms
cmpsl
xchg
mov
stos
jp
push
lahf
fs
shr
rol
mov
xor
scas
scas
inc
fmuls
add
iret
add
popa
inc
sbb
mov
dec
cmp
fcmovbe
push
mov
or
and
sbb
scas
xchg
test
mov
lahf
inc
pop
mov
jb
sbb
bound
mov
adc
test
inc
dec
mov
xchg
xor
and
mov
jns
cmpsl
test
jle
flds
divl
add
mov
mov
lret
pause
ret
lock
dec
fcompl
mov
push
sub
subb
popl
fmul
sbb
call
push
and
js
pushf
lret
mov
rorl
or
cli
sub
sti
stos
fs
test
pushl
jo
pop
cmp
inc
or
vandnps
sbb
shlb
test
jmp
int3
fidivrs
xchg
xor
sbb
pop
dec
lret
sbb
je
add
add
incl
inc
js
mov
or
dec
xchg
sbb
mov
and
xchg
mov
fmull
or
cltd
inc
aam
jl
mov
inc
lds
cmp
clc
shlb
mov
and
adc
jb
jb
dec
test
mov
push
sbb
rorb
int3
push
js
inc
call
inc
and
pop
jne
mov
jns
ds
mov
push
jbe
pushf
int
pop
dec
mov
cmp
xor
sbb
jns
adc
ret
mov
fwait
adc
scas
push
cmc
or
jb
cmp
ficompl
inc
push
jae
fldt
arpl
mov
mov
cld
xor
xor
mov
cmpsb
xor
jb
fisttpll
jp
lcall
xchg
cwtl
mov
dec
mov
xchg
pop
out
js
inc
cmp
dec
popf
jecxz
dec
inc
cmp
mov
lock
sarb
push
out
dec
push
inc
imul
inc
enter
cmp
sti
bound
jle
bound
out
sti
je
fcoms
inc
push
pop
inc
mov
sub
out
lcall
cmp
sti
int
js
xor
sti
arpl
jno
lds
ds
mov
mov
cmp
add
cli
movb
xor
imul
push
idivb
cltd
lret
lcall
sbb
mov
popf
push
call
nop
cmp
xchg
dec
mov
sub
jge
dec
mov
sub
add
loop
cmp
jb
mov
adc
xchg
inc
js
es
sub
imul
pop
push
cmp
addl
cli
mov
int
testl
adc
movsb
xor
in
inc
cmp
inc
popf
push
mov
cltd
call
sbb
loop
hlt
pop
cmp
add
hlt
jl
movzwl
adc
mov
jne
pop
mov
cltd
add
xor
std
push
or
lea
pop
jo
pop
cmp
mov
mov
lahf
lret
call
xchg
jnp
in
ja
adc
adc
mov
fs
dec
iret
or
push
popf
lods
leave
test
lock
jbe
adc
dec
popf
les
pop
fsubrs
icebp
and
data16
push
cmc
add
out
push
lea
ret
inc
fidivrs
scas
dec
mov
add
jbe
xor
add
jnp
popf
mov
jmp
lds
call
add
fwait
and
subb
test
xor
mov
loopne
je
cli
xchg
push
push
dec
out
ja
movsl
not
xchg
fs
scas
fiadds
cmp
cmp
or
rcrl
push
jne
mov
decl
jmp
jp
cmp
mov
les
jle
sub
adc
stos
lock
jbe
pop
adcl
or
test
and
mov
sbbb
jno
push
and
mov
sbb
add
pop
popf
in
mov
xchg
lret
gs
daa
push
push
cmp
ret
cmpsl
repz
idivb
add
dec
sbb
hlt
mov
gs
scas
dec
fs
pop
ja
das
xchg
dec
test
jno
in
iret
and
xchg
fsub
xchg
mov
mov
in
push
push
mov
clc
jb
fs
pusha
pop
rcr
stc
inc
push
cmp
push
mov
or
mov
xlat
xchg
imul
test
insl
jecxz
or
mov
xlat
pop
pop
pop
bound
out
aaa
int
push
bound
dec
inc
mov
sub
inc
ffree
sahf
inc
fsubrs
dec
sahf
dec
movsb
lods
icebp
mov
shr
je
push
mov
rcr
mov
mov
std
sti
std
mov
pop
mov
cltd
js
repnz
shlb
adc
mov
ret
sub
lcall
lahf
sbb
cld
mov
neg
inc
aam
xor
shll
jge
pushf
repz
lcall
inc
cmp
les
jne
add
add
movsl
xchg
mov
pop
and
sbb
inc
push
pusha
mov
ljmp
xor
xor
sub
mov
sbb
inc
cmp
mov
dec
pushl
stos
sbb
fsubs
xchg
imul
dec
lahf
insl
or
xor
outsl
lar
imul
fiadds
sbb
sub
mov
shrb
in
cmc
mov
and
xor
mov
dec
cmp
pop
inc
inc
inc
xchg
repz
enter
adc
ds
push
pusha
lahf
jecxz
inc
mov
out
xchg
insl
pushf
lock
or
sub
movsb
dec
fmull
pop
test
imul
jmp
xor
jo
mov
clc
adcl
inc
adc
fwait
pop
gs
fs
xchg
into
jp
push
pop
mov
jmp
mov
push
popa
cmp
clc
and
addr16
sbb
js
mov
jbe
popf
adc
gs
jg
ficoml
sub
inc
xchg
ljmp
push
mov
inc
aam
fdivs
xchg
xchg
sub
loope
popf
cmp
pop
repnz
data16
fistps
movsl
pop
repz
lea
xor
lret
mov
in
mov
mov
mov
test
orl
or
fstp
mov
call
shlb
ret
in
ret
jno
xchg
sbb
mov
add
mov
mov
shlb
push
inc
push
cmpsl
xor
pop
xlat
fs
jb
lea
cmp
add
mov
inc
inc
sahf
xor
mov
cld
or
inc
arpl
lret
in
mov
jns
and
sbb
push
jge
lret
mov
add
adc
cmpsl
pop
push
lret
sahf
sbb
or
sbb
stos
movsb
mov
and
ja
inc
xor
jle
lret
pop
pusha
cltd
fistpll
jge
int
mov
stos
sbb
in
imul
cmpsb
mov
stos
cmp
adc
call
int3
es
mov
sbb
xchg
gs
ffree
jne
inc
aam
ss
popf
flds
pop
into
xchg
cmp
push
pop
jmp
cmp
mov
mov
pop
pop
roll
mov
mov
pop
inc
xchg
mov
imul
sub
movsl
iret
dec
push
inc
rclb
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
mov
dec
or
ret
addb
mov
mov
dec
xchg
mov
inc
pop
dec
rorl
cmpsb
lods
xchg
shll
lods
sbb
out
jmp
cmpsl
test
out
mov
fimull
rorb
leave
or
push
jge
dec
jnp
in
dec
mov
inc
stc
dec
push
out
add
mov
insl
out
inc
push
int3
inc
mov
out
xor
lock
mov
or
adc
sub
test
ret
add
xchg
popf
fcompl
push
bound
mov
les
lea
and
popf
fistl
dec
xchg
mov
jnp
fwait
shl
or
push
mov
xchg
fsubrl
outsl
mov
dec
sbb
and
int
add
mov
popf
insl
inc
push
pop
mov
jne
or
test
push
fsub
or
hlt
pop
add
xchg
sar
add
dec
dec
gs
nop
push
loope
xchg
frstor
movsb
ss
mov
cmp
add
enter
rcrb
cld
and
mov
js
das
inc
cwtl
mov
lea
jnp
jno
out
in
js
sub
shll
inc
add
lret
add
icebp
xchg
ret
adc
xchg
rcr
test
adc
mov
leave
repnz
out
add
pop
pop
pop
rclb
add
sbbb
loopne,pn
push
negl
iret
daa
jno
insl
xchg
in
jge
sub
loope
mov
and
mov
jns
add
mov
fdivs
add
mov
stos
xchg
xchg
mov
pop
pushf
dec
xor
mov
mov
push
jb
mov
sbb
stos
jae
jp
in
lea
and
and
mov
xor
mov
mov
mov
stos
xchg
stos
inc
cmp
adc
ds
pop
push
cmp
pop
dec
shr
bnd
xor
cmp
lret
add
or
pusha
shlb
jmp
inc
jne
insl
jle
insb
pcmpeqb
lret
and
bound
xchg
pushf
call
mov
movsl
call
cmp
aas
mov
push
out
les
mov
hlt
mov
xchg
test
jle
push
dec
lret
pop
fisubrs
pusha
xor
sub
add
stos
imul
mov
cli
xor
test
clc
cmp
inc
pop
filds
enter
mov
repnz
jo
stos
adc
mov
xchg
and
mov
inc
add
xlat
push
fmul
add
lds
stc
ret
xchg
lret
das
scas
mov
sti
cli
fs
mov
lret
mov
sbb
test
mov
sbb
pop
inc
cmp
les
sbb
pop
cld
ret
lcall
aas
lahf
scas
jg
sbb
xchg
leave
loop
and
andl
rol
cmp
cwtl
in
sarb
jb
and
or
lret
xchg
imul
pop
scas
call
repz
outsl
jl
es
pop
add
clc
sub
xor
mov
ror
dec
sub
pop
adc
xchg
shlb
aas
xor
mov
fstps
cmp
mov
in
dec
pop
test
rclb
imulb
clc
imul
add
test
aam
or
and
xchg
xor
and
pop
adc
das
lods
adc
sbb
add
aad
insb
inc
pop
cmp
jmp
repz
mov
cmpsb
jno
dec
push
scas
insl
dec
mov
add
addr16
rol
out
push
jo
mov
dec
inc
dec
dec
xor
or
pushf
xor
mov
mov
and
xchg
mov
pop
adc
mov
idivl
push
out
idiv
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
mov
rclb
jge
and
sub
fwait
outsl
push
addl
enter
popa
leave
push
or
jmp
das
in
cmc
hlt
mov
mov
lods
lea
dec
pop
mov
repnz
and
iret
sbb
sbbb
aas
cli
or
mov
insl
adc
mov
fsubrl
addr16
mov
xor
mov
xchg
fistl
dec
pop
push
cld
mov
dec
jmp
mov
idivl
mov
sub
inc
sbb
xchg
adc
fisubrl
fcoms
addr16
fs
pop
xor
cmp
sbb
aad
xchg
js
fs
int3
xor
pop
loop
adc
inc
movl
ret
push
dec
mov
push
mov
repz
jg
ss
inc
mov
cmovae
fidivrs
mov
idiv
jae
jecxz
adc
add
dec
rclb
popf
sahf
movsb
and
dec
ret
xorl
stos
lret
mov
adc
mov
xchg
cmp
jbe
sbb
in
adc
mov
xchg
mov
hlt
scas
lock
sbb
xchg
loop
addr16
sbb
jno
mov
push
lods
sbb
or
sbb
mov
cld
sub
negl
jo
aad
add
sbbb
mov
out
mov
dec
pop
dec
push
xchg
test
jbe
xor
or
xor
xchg
sbb
xchg
lahf
xchg
pushf
out
pushf
inc
sarb
lock
pop
add
jo
lea
or
add
rclb
dec
cmp
xor
xor
inc
ret
gs
imul
inc
popf
stos
and
call
into
or
es
sbbb
adc
inc
ds
iret
xor
xchg
jne
mov
ret
aam
xchg
fcmovnb
add
sub
mov
repnz
mov
aad
sub
mov
lcall
jmp
adcb
cli
repnz
mov
dec
lock
ret
stos
mov
pop
mov
pop
adc
mov
lds
in
xchg
sahf
inc
test
or
push
sbb
lret
sub
sub
mov
add
sbb
lods
jle
cltd
xorl
mov
ds
jo
cltd
and
add
or
xchg
stos
fisttpll
pop
sbb
hlt
jp
fs
dec
repnz
or
add
lahf
dec
jno
out
repz
fld1
xchg
out
pushf
pop
popa
mov
and
sbb
addl
pop
test
lock
lds
jp
push
mov
push
loopne
fisubs
adc
fdivr
jge
xchg
outsb
aaa
mov
mov
xchg
orb
stos
and
dec
mov
jbe
mov
cmc
dec
mov
shl
inc
dec
sbb
out
mov
sahf
sub
push
pushf
loop
mov
int
cs
mov
push
push
leave
pushf
aam
push
dec
lcall
pop
das
loop
push
cltd
lret
inc
push
pusha
fidivs
adc
mov
inc
mov
mov
pop
adc
inc
mov
cmp
cli
pushl
mov
xchg
inc
stos
jge
addr16
cmpsl
adc
xor
int
pop
mov
and
push
fwait
pop
adc
mov
enter
das
ror
adc
enter
jl
out
stos
sti
jae
ret
popa
popf
xchg
stc
sahf
in
push
sub
cmp
inc
mov
iret
inc
fistps
pop
mov
sbb
add
stos
movl
xchg
mov
add
or
scas
out
xchg
jns
int3
sbb
pushf
insb
sub
test
dec
adc
push
stc
dec
dec
mov
dec
xor
adc
mov
mov
sahf
dec
pop
xchg
mov
shrl
inc
scas
xchg
out
popf
mov
pop
stos
jne
add
jne
dec
mov
push
inc
mov
inc
mov
fisubrs
cmc
jmp
inc
pop
and
or
mov
out
mov
shll
loop
test
dec
loopne
ja
xchg
mov
inc
add
adc
jno
add
sti
xor
in
test
mull
das
xchg
enter
hlt
mov
je
adc
fstl
dec
lret
movsb
pop
das
xlat
fs
jbe
sbb
or
mov
jnp
ret
insl
cmp
and
mov
clc
gs
pushf
dec
aaa
into
sbb
cmp
pop
dec
dec
jecxz
xor
push
into
mov
pop
push
outsb
movsl
aam
mov
call
push
dec
fldt
fwait
adc
mov
mov
cwtl
sti
jbe
cmpsl
mov
into
insl
and
shrl
int
sub
lret
stos
xchg
fimull
cli
arpl
dec
imull
int3
push
sbb
xchg
push
push
nop
or
scas
inc
xchg
cli
repz
clc
and
sub
out
add
in
lret
seta
dec
cmp
inc
cwtl
inc
stos
adc
es
movsl
push
mov
dec
je
jo
inc
stc
in
jb
pop
out
scas
fsubl
rcrb
sbb
aad
xchg
dec
sub
jg
lods
ds
out
mov
xchg
pop
orb
or
dec
mov
add
lock
or
pop
call
loopne
loop
pop
mov
add
add
inc
push
sti
or
add
add
mov
cld
xchg
repz
mov
outsb
movsl
mov
js
fnsave
fwait
mov
in
sbb
stos
push
lret
ffree
pop
sub
sahf
fcmovnb
add
xchg
mov
pop
mov
or
sub
arpl
mov
lds
inc
lds
mov
test
jae
adc
mov
in
std
dec
mov
aas
cmpsl
popa
ret
adc
ds
sbb
pop
shll
or
jae
xor
mov
xchg
mov
push
out
push
push
cmp
xchg
jae
cmp
mov
aaa
popf
xor
sahf
sub
aam
mov
arpl
aas
adc
dec
adc
inc
cli
mov
xor
movsl
aad
push
popf
cli
sbb
inc
iret
adc
or
sti
mov
adc
cmp
test
mov
pop
dec
pop
and
js
pop
and
fsubrl
or
push
mov
cmp
jns
repnz
mov
in
sub
mov
sbb
fldt
arpl
mov
sbb
mov
or
sub
push
mov
dec
fs
pop
mov
shrb
pop
ds
ja
rcrb
lock
jg
jbe
push
mov
clc
jl
aas
and
cmp
mov
or
or
insb
xor
mov
adc
pop
ja
nop
and
outsb
jmp
dec
cmp
jmp
inc
sbb
dec
fbstp
sub
dec
pop
xlat
and
hlt
cmpsl
leave
xor
lods
xchg
fwait
dec
rcrl
sbb
xor
mov
dec
ret
loopne
jl
lret
iret
ret
jb
hlt
out
dec
lahf
lret
xor
jmp
clc
add
ret
pop
push
adc
stos
sahf
int3
vpsubb
sbb
ret
push
hlt
mov
cmp
xchg
cli
stos
dec
mov
mov
jl
out
mov
inc
filds
aam
divb
inc
movl
push
xor
test
xchg
or
xchg
daa
repnz
inc
jne
lret
flds
into
stc
or
mov
frstor
or
flds
adc
out
lcall
mov
and
cmpsb
in
adc
mov
divl
pop
cmp
inc
jb
fwait
jb
or
in
fcmovne
push
push
inc
flds
xchg
enter
dec
pop
mov
shr
and
psubsb
xor
cmp
nop
lret
imul
movsl
mov
push
nop
mov
test
xor
enter
loop
fwait
mov
or
int
xchg
leave
fsubrl
or
jl
or
jns
stc
cmc
cmp
inc
xchg
cmp
and
xchg
lds
jo
shrl
or
inc
int3
mov
sbb
cmp
xor
mov
test
lds
lcall
and
xor
lahf
popf
mov
sub
adc
aas
jmp
or
mov
add
inc
inc
xor
mov
out
inc
lret
dec
popa
in
out
pop
movsl
cmpsb
cld
push
mov
sbb
mov
test
lea
jge
jg
inc
cmp
enter
cmp
xchg
sub
fsubr
call
xor
leave
add
imul
mov
or
shll
mov
sti
pop
adc
jbe
mov
lret
jnp
xor
sub
mov
inc
loop
lods
cmc
xor
sbb
mov
popf
push
call
nop
movsl
sub
in
test
mov
bound
scas
cmc
add
pushf
inc
pop
xchg
inc
cmpsl
dec
mov
cmp
js
and
jl
pusha
test
xchg
pop
pushl
lods
bound
adc
loop
mov
xor
or
cld
jle
push
pop
push
test
add
call
out
sbb
or
movsl
mov
inc
mov
out
pop
lea
fidivrs
xor
push
and
xor
aas
mov
fsubrl
in
cmc
hlt
clc
lds
pop
test
mov
mov
mov
test
adc
mov
cmovge
adc
ret
leave
das
addr16
or
jge
pop
mov
lods
xchg
sub
adc
push
test
xchg
mov
sub
cli
lret
sahf
sti
push
ret
arpl
cmp
jp
jae
div
sbb
or
subb
stos
xchg
push
adc
and
lds
jae
in
dec
pushf
jle
xor
jo
cmc
inc
iret
mov
mov
jg
rorb
add
inc
xchg
imull
call
repnz
xor
mov
push
test
sub
mov
sbb
cmpsl
ret
xchg
add
fwait
lea
mov
mov
sub
mov
mov
jle
adc
cmpsb
dec
mov
pop
mov
pop
addb
pop
in
xor
fsubrs
sub
test
cmp
dec
lahf
lds
mov
in
aaa
mov
push
dec
mov
test
ret
test
decl
sbb
outsb
sub
pop
push
jns
ljmp
dec
fidivl
xchg
repz
repz
add
les
pop
adc
jl
sbb
jp
cmp
scas
xchg
inc
lcall
mov
sub
cltd
lods
cmp
push
pusha
mov
iret
push
inc
cmp
xor
lret
adc
arpl
jp
xchg
push
mov
or
xor
enter
mov
enter
ret
push
sbb
mov
aaa
dec
js
popa
mov
aaa
imul
adc
mov
xchg
cmp
or
pop
mov
adc
fcmovbe
dec
inc
sahf
fldt
orl
icebp
imulb
add
rcrb
in
popf
fnstsw
cli
sar
sbb
mov
dec
packuswb
shrb
xor
pop
stos
xor
inc
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
xchg
mov
mov
add
xchg
lcall
les
lret
jns
inc
pop
cld
add
or
cs
popa
mov
div
mov
icebp
sub
mov
loope
dec
add
jecxz
andb
clc
dec
mov
pop
repnz
push
nop
dec
xor
loop
std
mov
sbb
xlat
into
call
and
and
cmpsb
hlt
pop
and
ret
sub
push
adc
pusha
mov
inc
mov
sbb
sub
out
int3
sbb
ljmp
mov
hlt
cmp
fists
rol
adc
add
or
and
js
push
mov
faddl
or
repnz
test
dec
ljmp
lods
push
lahf
mov
jge
mov
fucomp
movsb
mov
sub
into
jo
fnstenv
or
jp
mov
pop
adc
jne
dec
xchg
sub
shlb
out
pushf
and
push
sbb
jmp
mov
repnz
push
repz
into
sbb
addl
adc
mov
pop
mull
push
aam
sar
js
or
lods
push
cmp
popf
aad
fiadds
mov
cmp
std
xchg
mov
mov
sbb
inc
clc
dec
push
and
sti
push
hlt
mov
sahf
dec
mov
mov
out
adc
and
xchg
pop
retw
imul
ror
int
add
call
cmpsl
lock
scas
lock
and
int
inc
sbb
das
adc
sbb
popa
aaa
adc
ret
sbb
sub
lcall
repnz
fimuls
mov
testl
push
inc
shrl
lret
ret
adc
daa
or
fiaddl
mov
lock
jne
jb
xor
sbb
sub
popf
mov
jecxz
sahf
leave
lret
test
in
sarl
test
jnp
inc
mov
adc
or
dec
hlt
sub
movsb
sbb
test
mov
mov
ret
jb
adc
cmpsb
call
int3
sub
cmp
cmp
cltd
mov
hlt
js
inc
enter
ret
add
xchg
push
hlt
enter
xlat
adc
fisttpll
shl
and
add
push
mov
imul
fwait
clc
lds
push
pop
adc
or
mov
cltd
jl
lock
shlb
mov
xchg
mov
test
or
ror
lods
cmp
push
test
sbb
mov
out
cmpsb
cld
xchg
or
pop
in
leave
insb
xor
sbb
jno
add
ljmp
fiaddl
mov
cmp
push
jb
mov
dec
mov
cmpb
shl
ffreep
dec
mov
mov
outsb
divl
adc
lahf
push
cwtl
fdivl
es
aam
mull
lahf
stos
cmp
mov
shll
cmc
add
flds
mov
decb
xchg
xchg
pop
xabort
sbb
cmpsl
sbb
sbb
mov
dec
push
mov
mov
je
sbb
jge
pop
push
pop
or
mov
pop
xchg
mov
adc
imul
jecxz
mov
inc
ja
xor
movsb
mov
pop
repnz
ret
das
and
mov
scas
inc
mov
adc
test
push
pop
clc
lods
int3
sbb
cld
scas
ficomps
dec
cs
mov
mov
add
nop
dec
mov
inc
push
mov
out
mov
push
stos
fildl
dec
mov
pop
jno
add
jno
pusha
mov
cli
loop
fcmovnb
stos
cmp
andl
dec
inc
or
insb
in
xchg
pusha
or
xor
xchg
cmp
add
mov
mov
jb
std
cmp
mov
bound
adc
cltd
int3
pop
add
das
lret
adc
enter
fldpi
push
and
mov
dec
fists
mov
call
pop
mov
imul
sbb
dec
push
jne
mov
xor
jecxz
lock
sbb
bound
pop
fsts
leave
xchg
xorl
rcrb
clc
mov
fmul
add
je
sbb
lahf
sbb
jecxz
and
push
dec
popf
lret
cmpsl
xchg
test
sbb
inc
or
out
insl
mov
leave
xchg
sbb
jne
push
mov
test
lods
inc
sbb
cmp
fbld
enter
jmp
cmp
sub
add
shlb
popl
ret
xchg
sub
and
push
mov
movsl
sbb
pop
pop
out
test
ja
hlt
jb
fwait
ja
sti
xor
jno
mov
sub
sub
ss
shll
mov
dec
into
dec
mov
sbb
sti
mov
jae
ret
imul
inc
sub
icebp
clc
cmp
jnp
popf
rol
imul
mov
add
orb
mov
in
int3
pmuludq
jno
mov
sbb
adc
dec
mov
movsb
jmp
out
ljmp
bound
test
int
mov
inc
push
mov
popf
mov
pop
stos
jne
push
fsts
mov
sub
arpl
pusha
mov
test
scas
pushl
jl
lret
add
jle
sbb
cwtl
in
dec
sarb
rcll
xchg
cmc
mov
xchg
xchg
mov
mov
or
sbb
cmpsl
jnp
dec
mov
and
mov
popf
out
in
xor
nop
test
xchg
xchg
pop
subb
outsb
repz
or
xchg
mov
push
fidivs
or
jecxz
pop
or
js
hlt
movsl
ret
aaa
rcrb
mov
cmp
adc
leave
sbb
xor
imul
fmul
xchg
mov
sbb
loop
cmp
dec
lcall
xor
lret
mov
mov
mov
ficoml
push
sarb
insl
mov
ret
inc
gs
sbb
or
fdivrl
jecxz
lcall
int
xor
xchg
dec
adc
xchg
pop
jb
add
pop
pop
sub
xor
xor
sbb
pop
inc
adc
test
pop
mov
mov
test
xchg
arpl
dec
pop
lea
mov
mov
lret
out
int
fstp
imul
popa
fwait
hlt
stc
sahf
in
rcl
idivl
inc
call
pop
mov
or
inc
inc
xor
pop
adc
push
aad
mov
jecxz
mov
or
orb
push
mov
movsl
ret
dec
cmp
lret
sub
jbe
rcrl
lahf
pop
aad
pop
ud2
lret
fucomp
cmpsl
mov
push
out
sbbl
inc
or
xchg
dec
mov
dec
mov
test
inc
pop
cmp
addl
adc
xorb
lods
cmp
mov
and
movsb
ret
pushf
mov
cmp
mov
mov
repz
les
jno
dec
movsb
incl
and
add
sbb
js
mov
jecxz
lods
pop
iret
jbe
add
cmpl
fnstenv
movsl
inc
ret
enter
scas
fdivrs
sbb
mov
mov
dec
adc
lods
mov
sbb
xchg
mov
hlt
sbb
lds
inc
filds
mov
pop
mov
or
out
pop
imul
cli
ret
ret
leave
cmp
inc
or
cmc
in
ss
dec
fdivl
fs
das
sbb
in
dec
sbb
add
dec
jp
jae
lods
stos
fsubrl
add
or
add
sbb
or
jge
mov
ret
dec
mov
stos
ja
jge
sbb
mov
lcall
pop
cli
dec
push
pusha
jp
test
sub
scas
inc
or
and
push
mov
or
imull
sub
mov
inc
out
add
cmp
cmpsb
cld
jnp
mov
mov
or
xchg
mov
mov
fs
enter
cmpsl
inc
popf
mov
mov
pop
loope
ret
mov
xor
xor
cwtl
xor
cmc
mov
jnp
or
mov
das
xchg
jno
xchg
mov
xor
mov
jp
ret
mov
add
fsubrl
adc
sub
pushf
cmp
xlat
stos
mov
out
ret
pop
jbe
movsl
fwait
push
pop
aad
sbb
xor
popf
sbb
sarl
rolb
jno
lock
add
and
ret
adc
push
int
pop
sub
inc
xchg
stos
mov
lods
cmp
sbb
and
dec
push
pusha
dec
sbb
mov
mov
push
push
sahf
or
jo
int3
or
ja
mov
add
inc
xor
lock
add
adc
cmp
jge
mov
popf
arpl
incl
jb
and
call
int3
adc
addb
mov
mov
push
dec
int
sub
dec
lcall
push
jne
rcrb
sahf
mov
out
jns
jecxz
xlat
dec
repz
mov
push
sub
dec
adc
js
iret
cmpsl
mov
jg
push
addr16
pop
adc
pop
push
mov
pop
stos
stos
pop
clc
dec
adc
mov
pop
enter
rcrb
shll
sub
dec
pop
fcoms
cli
add
ss
testb
shlb
adc
inc
stos
adc
fwait
lret
test
leave
dec
lods
and
mov
bound
movsl
arpl
andl
xchg
mov
data16
nop
dec
jne
inc
cwtl
dec
test
sbb
add
inc
xchg
negb
ja
push
jo
fwait
jae
jb
xchg
in
mov
cmpl
enter
push
hlt
jmp
xor
push
xchg
jmp
sbb
cmp
pop
push
xchg
mov
cmp
fs
pop
test
cmp
stos
lret
out
mov
inc
sbb
sbb
jecxz
fstps
mov
lock
add
mov
loop
cwtl
movsl
mov
mov
and
add
push
inc
int
lds
jge
jge
lcall
mov
int3
xor
xor
pushf
jnp
jmp
push
sbb
and
lcall
push
subl
adc
inc
jbe
mov
test
cmc
add
sbb
stos
lret
incl
or
xor
or
mov
inc
fdivrl
jbe
in
rcrl
repz
push
lret
cmp
jmp
movsb
cli
sahf
scas
ds
cmp
xabort
pop
sbb
and
and
cmp
daa
and
xor
nop
xchg
push
adc
jb
push
dec
orb
xor
jbe,pt
cmp
scas
jecxz
adc
push
xchg
mov
adc
mov
pusha
pop
jbe
lahf
sbb
scas
mov
sbb
adc
mov
dec
out
or
dec
and
sub
push
ret
push
jne
mov
icebp
mov
insl
nop
mov
sbb
mov
mov
fs
or
pusha
data16
sub
js
scas
or
sbb
stos
push
mov
or
pop
fstpt
xor
movsb
sbb
mov
out
cli
inc
adc
repz
pushf
or
xor
adc
and
daa
or
xchg
subb
pop
in
pop
mov
push
lea
xchg
jl
pop
cmpsb
int
mov
ret
inc
lods
movsb
arpl
mov
push
movsb
xlat
cld
mov
and
ror
mov
mov
push
sahf
cmp
jne
mov
filds
scas
add
mov
hlt
out
jbe
cltd
jl
test
push
pop
adc
lret
cmp
popf
and
sbb
nop
cld
xchg
push
jae
stos
inc
in
aad
lods
out
movsl
sbb
scas
push
popf
stc
test
popf
cmp
sar
cmp
push
adc
push
pop
jae,pt
push
hlt
add
pop
pop
cmp
fldl
scas
dec
jnp
push
ja
xchg
sub
dec
lods
add
and
lahf
add
push
sbb
es
lret
push
setne
jecxz
fmuls
mov
xor
pop
mov
test
adcb
movsl
push
mov
xchg
and
mov
clc
and
mov
aam
mov
imul
mov
cltd
cmp
and
call
sub
test
mov
call
ljmp
sti
pop
es
int3
jae
mov
mov
inc
sub
in
or
icebp
cld
jg
enter
xchg
xor
dec
inc
add
imul
fiaddl
lahf
mov
jo
mov
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
or
cmp
lock
or
or
imul
push
dec
fidivrs
test
cwtl
ljmp
loopne
cmp
fchs
inc
bound
fs
arpl
and
call
arpl
cmpsl
mov
jo
rclb
out
or
mov
inc
push
fisubs
xchg
imul
fwait
fwait
mov
mov
mov
fsubrl
mov
icebp
hlt
jl
or
mov
xchg
xchg
jns
ret
cmp
mov
repnz
and
mov
test
add
inc
lret
jne
test
insl
mov
repz
ret
inc
sbb
inc
popf
mov
add
lods
xchg
sub
adc
fldenv
mov
scas
push
push
lret
fucom
idivb
scas
xchg
jp
jmp
stos
add
test
in
andl
lods
testl
imul
and
sbb
into
cs
icebp
sub
xor
sbb
cmc
xor
sbb
pushf
jl
pop
js
dec
adc
into
dec
inc
mov
inc
les
adc
mov
jp
mov
shrb
pop
mov
pop
jne
gs
dec
sub
mov
loop
push
je
test
adc
outsb
mov
push
cmp
xchg
cs
push
dec
mov
popf
cmp
and
lods
les
push
stos
lret
imul
fwait
pop
int
lock
mov
lock
add
rcrl
pop
or
cltd
jno
cmp
leave
push
jmp
lds
and
int3
xchg
sbb
les
push
lds
and
test
pop
repnz
or
cmp
xchg
lret
jno
and
int
rol
cmp
adc
jne
pop
ret
mov
aaa
push
mull
mov
data16
push
sub
ficoms
jle
xchg
mov
pop
sub
cwtl
dec
icebp
sbb
enter
test
dec
mov
inc
push
std
les
nop
cmpsb
std
sbb
shll
jb
int
fcomp
dec
jecxz
arpl
add
push
sub
shl
in
push
loopne
int
or
int
mov
insl
mov
sub
inc
movsb
hlt
outsb
sub
push
xor
mov
push
js
mov
mov
push
inc
icebp
movsl
iret
cltd
pop
in
sub
mov
es
or
mov
mov
sub
inc
sti
xor
mov
xor
lret
lret
stos
xchg
fimull
mov
lret
mov
push
mov
or
call
inc
or
adc
fidivs
or
jmp
outsb
pop
mov
leave
pop
mov
jne
cmpb
mov
mov
xlat
push
inc
sub
add
stos
stos
cmp
lds
sbb
mov
adc
fists
js
and
cmp
insb
and
xorl
add
dec
sahf
inc
sub
xor
mov
or
imul
arpl
sub
ds
sahf
push
in
or
xor
sti
sbb
loopne
negb
lock
add
mov
jb
sbb
imul
cwtl
das
push
mov
fildll
or
fisttpl
or
fistpll
adc
repnz
mov
pop
push
ja
test
mov
pop
xchg
add
out
sbb
popf
and
push
push
aam
mov
cltd
dec
ljmp
out
lods
lea
and
std
flds
pop
pop
subl
mov
sbb
inc
dec
xchg
xchg
xchg
sbb
fistpll
stos
icebp
mov
enter
ja
imul
movb
jmp
cmp
test
push
loope
cmpl
add
sub
mov
rcrb
sub
stc
lea
cli
and
mov
idivl
xor
mov
hlt
das
push
sbb
xchg
subb
leave
fsubrl
adc
ret
sbb
stos
in
mov
xchg
lds
cmp
xchg
fucomp
jae
push
dec
or
bound
sub
std
daa
sbb
imul
fstps
call
lods
jle
cltd
aad
iret
and
xchg
fcompl
repz
loop
inc
mov
fidivrl
test
inc
sarb
call
les
xchg
add
mov
push
fidivrl
push
jg
sub
mov
xchg
pop
sahf
fcom
mov
mov
hlt
in
add
add
andb
js
sbb
popf
test
xchg
jmp
mov
aam
imul
mov
jo
inc
inc
push
sbb
loopne
out
mov
sbb
push
dec
repz
xchg
push
mov
fldenv
lock
xor
jg
cmp
rcl
lret
mov
sbb
enter
push
icebp
inc
bound
mov
add
pop
out
inc
mov
repz
sahf
dec
pop
xchg
mov
adc
stos
dec
hlt
dec
dec
sti
leave
ret
inc
lds
nop
jb
mov
movsb
push
jo
and
lods
inc
pop
lcall
jo
xchg
mov
fwait
push
rcrb
stos
jle
test
mov
imul
jae
adc
imul
orb
pop
mov
shll
cmc
fcmovne
sbb
add
insb
dec
xorl
aas
sub
cmpsl
and
xchg
mov
imul
jmp
loopne
enter
repnz
inc
mov
jns
mov
mov
pop
dec
jmp
filds
mov
mov
xchg
lret
push
bound
cld
sub
dec
movsb
leave
inc
push
lahf
xchg
push
idivl
sbb
sub
xchg
lret
xchg
xchg
sbb
mov
test
xchg
dec
fcomp
xchg
add
stos
das
xchg
dec
cli
sbb
in
jbe
jmp
and
jmp
push
fs
jecxz
and
in
sbb
lcall
rcr
loop
mov
and
pop
or
je
jmp
fisubs
in
fsts
pop
mov
mov
lahf
iret
sbb
mov
enter
adc
lock
dec
sbb
inc
mov
dec
mov
pop
fwait
add
xor
or
add
mov
xor
jmp
clc
into
mov
sbb
out
pop
adc
iret
pop
adc
jo
jg
repz
cwtl
sbb
mov
outsl
pop
mov
jle
add
imul
out
mov
fucom
xor
fcoms
fnstsw
test
shlb
push
mov
mov
pop
ret
fistpl
jo
stos
push
shrl
dec
movsb
aad
xor
xor
fwait
test
shlb
scas
jg
fstps
loope
cmp
sbb
mov
fwait
push
dec
mov
xor
xor
pop
xchg
inc
mov
arpl
mov
loopne
jg
movswl
jmp
std
mov
sti
and
xchg
and
mov
mov
jnp
push
hlt
sub
dec
sahf
ja
sbb
mov
mul
xor
mov
push
test
iret
and
lret
out
aaa
gs
mov
pop
sub
addl
push
adc
mov
sbb
add
movsl
sbb
push
cmpsb
test
fwait
pop
jno
test
cld
sub
aaa
jns
lods
scas
adc
lret
cmpl
xchg
loopne
xchg
movsb
fisubrl
xchg
ret
add
sti
outsl
or
cmp
fistl
aaa
fwait
lods
pop
xor
cmp
pushf
enter
lahf
scas
jg
cmp
xor
out
js
mov
mov
rclb
jp
rcll
pop
js
pop
call
dec
and
push
xchg
push
sub
mov
cltd
lret
or
loopne
cmpsb
sbb
sbb
pop
addr16
test
mov
mov
int3
mov
jns
or
dec
ret
orl
stos
add
imul
mov
cli
sti
mov
jecxz
fincstp
call
ret
jo
cmp
cmc
jmp
gs
push
mov
cwtl
or
add
jno
les
adc
lret
xchg
call
push
jae
jae
cld
mov
stos
xchg
cmpsl
pop
mov
mov
test
xchg
push
mov
stos
cmc
add
push
xor
cmp
pop
test
lods
jne
sbb
mov
repnz
lret
lahf
dec
xorps
loop
mov
aas
je
xlat
cmp
xchg
sub
push
mov
fwait
xor
hlt
push
fdivrl
icebp
mov
scas
imul
jb
cmp
push
push
je
test
test
adc
mov
cmc
hlt
cmp
add
pop
push
jb
ret
loopne
in
movsb
ficompl
or
loopne
sbb
add
sub
add
push
mov
sub
mov
ficoml
sbb
movsl
mov
mov
and
push
leave
sbb
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
inc
fwait
mov
in
jns
push
cmp
and
loop
jg
stc
cmc
and
out
add
and
sbb
pop
nop
cmp
jl
cwtl
out
fldz
push
test
and
inc
inc
mov
xor
mov
mov
mov
int3
pop
test
mov
add
and
and
mov
jg
es
mov
mov
lock
jne
inc
inc
xor
mov
enter
dec
jo
enter
ret
xor
in
rcr
mov
mov
je
rcl
lret
mov
mov
les
fstpt
push
cmc
fstpt
dec
lcall
lods
js
imul
dec
lds
sbb
mov
dec
outsb
les
and
fwait
sbb
push
sbb
or
dec
stc
mov
loopne
xchg
mov
in
cmp
mov
and
or
sub
fidivrl
jp
in
xchg
push
fsubl
push
cmp
jb
imul
sti
and
xchg
enter
clc
push
or
lea
xor
faddl
sub
iret
cmp
push
sbb
xchg
or
dec
aam
sub
or
push
sbb
mov
aaa
gs
scas
and
sub
sbb
adc
insl
lcall
or
sub
in
scas
xchg
xlat
stos
mov
lods
cmpsl
mov
hlt
sarb
push
mov
mov
dec
sbb
rcr
dec
arpl
xor
push
sub
xchg
pop
dec
lock
or
shrl
jne
imul
movsb
xchg
scas
push
test
aad
int
push
cmp
out
lock
jge
jno
fs
pushf
inc
xor
mov
loopne
scas
out
mov
jo,pt
rclb
out
dec
test
stos
mov
movsb
test
cmpsb
fcom
aaa
jo
dec
pop
lds
test
inc
fbld
pop
popf
adc
jne
mov
mov
and
frstor
repz
and
rolb
clc
stos
jo
dec
fsubl
lfs
rcrl
int3
jae
cmp
fcoms
pop
aad
lock
jae
jo
adc
mull
stc
cmpl
ss
lea
in
shrb
inc
lahf
addr16
xor
push
shll
mov
mov
subb
inc
ret
pop
scas
mov
loop
xchg
cmp
ljmp
sub
gs
int
mov
xchg
add
xchg
pop
push
sub
xchg
pop
inc
pop
mov
mov
dec
mov
std
cli
jnp
inc
mov
xlat
inc
sbbl
mov
pop
data16
xlat
xchg
addl
mov
sbb
mov
push
push
popf
and
pop
lods
sbb
sub
inc
aad
mov
and
sub
ljmp
lret
sbbl
mov
dec
cli
xchg
inc
call
loopne
sub
cltd
in
xor
mov
jecxz
mov
or
aaa
lcall
push
sub
inc
add
int3
and
into
lea
pop
inc
dec
pop
cmp
mov
inc
push
adc
push
inc
loope
lret
js
sbb
inc
jbe
js
push
leave
sbb
mov
sbb
xor
xchg
stos
popf
testb
xchg
ds
inc
push
inc
popf
adc
gs
pushl
jmp
add
lods
fldl
jle
es
mov
add
or
mov
adc
jae
sub
or
into
push
jmp
cmc
jno
or
jb
sbb
mov
pop
cmp
xor
and
mov
cmpl
mov
cmp
repz
insb
sub
repz
or
subl
jl
mov
lahf
mov
mov
inc
stc
mov
loopne
cmc
or
adc
adc
cmp
in
dec
and
mov
call
jp
shll
adc
push
loop
xor
addl
mov
mov
sbb
pop
adc
mov
repnz
pop
adc
pushf
cmpsb
mov
lock
es
rcll
inc
pusha
or
mov
aad
sbb
test
mov
pop
xchg
fucompp
test
inc
les
pop
inc
or
pop
lret
cmp
imul
ret
dec
iret
pop
xchg
filds
out
repnz
cmpsl
or
xor
popa
cltd
lock
shll
stc
lea
dec
std
jb
inc
jnp
push
repnz
repnz
mov
adc
fs
test
mov
mov
adc
cs
negb
or
fstps
cld
lods
js
lret
jmp
aam
sbb
jae
dec
and
add
jbe
lea
pushf
dec
and
mov
fisttpl
lahf
push
loop
imul
into
js
sbb
or
mov
mov
insl
dec
pop
out
inc
insb
jecxz
and
lds
pop
pop
pop
mov
test
out
xchg
push
notl
out
idivb
popa
fisttpl
mov
or
mov
cmp
mov
sbb
lahf
mov
les
inc
cmc
add
cltd
inc
dec
pop
xchg
jae
int3
mov
cmpsl
push
xchg
cmp
dec
pushf
add
mov
mov
dec
mov
lock
xlat
jbe
std
cmpl
pop
out
dec
add
inc
cmpsl
inc
xor
sbb
lock
xchg
test
xor
push
mov
test
std
mov
or
or
imul
jmp
add
cmp
out
leave
test
clc
sub
inc
cmp
push
shl
pop
shlb
ret
xor
daa
int
cmp
push
jae
ret
ss
imul
sub
lds
sub
push
ss
fs
cmp
ljmp
fldt
cld
add
addr16
leave
cmp
xor
pop
cmpsl
xlat
adc
addl
jmp
jge
int
or
adc
push
fists
outsl
je
ret
mov
in
or
jl
mov
cmp
hlt
repz
add
sbb
fiaddl
rol
mov
dec
cmp
cmp
push
add
rol
mov
je
jle
in
aam
in
xor
leave
pop
ret
and
enter
loop
ret
repz
cld
sar
pop
dec
cwtl
mov
hlt
sub
sbb
in
daa
lods
push
in
push
test
in
mov
inc
mov
stos
rorb
jecxz
mov
dec
popf
lret
xchg
shl
les
jg
mov
outsb
loop
ss
jns
push
sbb
popf
sahf
dec
cmpsl
add
lret
jne
pop
add
sub
push
sbb
ret
jge
mov
fdivrs
dec
scas
jge
adc
add
addr16
ret
pop
sti
pushl
sub
popf
fnstsw
test
xor
cmp
insb
jbe
sbb
filds
into
aas
hlt
sub
cmp
add
inc
inc
inc
mov
pushf
pop
cli
add
jnp
or
xchg
outsl
movsb
int
or
dec
ret
sub
jg
stc
pop
dec
imul
fstl
push
pop
mov
jecxz
movl
pop
mov
cld
jg
popf
loope
fsubrl
pop
int
add
jnp
fadd
jecxz
inc
jle
push
jns
jmp
mov
lods
lods
jno
push
lods
inc
mov
mov
inc
lock
inc
iret
test
nop
pop
push
jnp
mov
cli
or
adc
push
scas
dec
push
inc
push
mov
int3
dec
frstor
mov
adc
jno
std
mov
pop
cmc
xor
ror
je
andl
js
ror
stos
and
clc
dec
cmp
clc
jp
stc
mov
out
out
push
test
cld
call
cwtl
and
ret
ret
fnstenv
mov
sar
pop
faddp
jmp
fmuls
sbb
inc
and
mov
pushf
dec
inc
negl
mov
fdivs
mov
sub
push
mov
int
adc
pop
into
adc
mov
loopne
xchg
add
mov
fstpl
cmp
jmp
adc
inc
or
iret
cmpsl
mov
lret
push
adc
rcl
lds
jmp
lds
mov
jmp
sub
lods
mov
xchg
mov
mov
pop
mov
jae
or
lods
jne
fisubl
ret
inc
dec
pop
mov
fildll
xchg
xorb
pusha
jle
das
pop
imull
push
dec
lods
ss
rcr
mov
out
into
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
repnz
jnp
or
dec
movsl
or
pop
sub
xor
add
stos
roll
je
push
inc
clc
je
arpl
sbb
sub
and
pop
ret
mov
repnz
lret
clc
jg
out
incb
jns
dec
add
stos
rcrl
dec
call
push
sub
cmpl
sarb
mov
inc
jnp
int3
stos
jecxz
enter
lods
in
adc
mov
sbb
cmpsl
mov
movsb
int
push
inc
sbb
pop
or
or
pop
std
cmp
xcrypt-cbc
cmpsl
xlat
fs
repz
ds
fists
je
dec
addr16
out
push
call
inc
cmp
daa
cwtl
push
and
fisttpl
or
in
inc
xor
mov
adc
outsb
mov
inc
cmp
fisubrs
fcomps
push
nop
mov
or
stos
sbb
or
push
movsb
xchg
jmp
inc
test
push
and
jge
insl
rolb
test
pop
adc
push
pusha
fbstp
inc
rcr
or
xchg
cmp
fsubr
les
or
add
fisttpll
insl
inc
popa
pop
int
push
jle
jae
sub
and
lret
sbb
and
xlat
cli
aad
clc
sbb
inc
stos
movsl
inc
inc
cmp
inc
stos
dec
mov
xchg
dec
push
clc
subl
add
enter
dec
fdivl
xchg
popf
adc
push
mov
push
jl
mov
imul
jae
test
fwait
push
cwtl
out
jmp
fldl
pop
xchg
lea
mov
jb
fdivrl
dec
movsl
fldcw
clc
addb
fisttpl
or
addl
cmp
je
test
addr16
mov
ja
cmp
push
mov
jnp
ret
pop
jne
mov
clc
je
inc
inc
leave
pop
cmc
jne
add
and
mov
mov
mov
sti
xchg
faddl
mov
dec
pop
arpl
lret
loopne
stos
test
push
in
stos
jge
mov
lret
inc
mov
lea
imul
cmp
jmp
sub
inc
cwtl
icebp
aam
stos
popf
xchg
push
mov
popf
ss
scas
dec
rsqrtps
jecxz
std
repnz
push
inc
ret
in
bnd
popf
pop
lahf
xchg
es
clc
pop
sub
test
mov
cld
ds
leave
xor
mov
shr
je
dec
loopne
push
sub
and
movsl
jnp
ret
cli
test
lea
popa
cmc
sahf
jecxz
sbb
pusha
mov
aaa
and
mov
aad
or
das
sub
popa
mov
aam
mov
es
or
icebp
dec
loopne
inc
xchg
pop
mov
xchg
cmp
and
lcall
lret
in
cmp
std
dec
dec
or
test
out
leave
cmpl
loopne
push
dec
out
mov
test
daa
pusha
sub
imul
xchg
mov
dec
data16
xchg
dec
repnz
lret
in
and
movsl
dec
xorl
inc
test
fs
inc
imul
push
dec
push
lahf
xchg
movsl
sub
jmp
fists
mov
adc
xlat
in
pusha
addb
inc
dec
or
xchg
cmpb
ds
lret
mov
or
xchg
ljmp
out
jbe
inc
mov
pop
lods
stos
mov
cmp
dec
jns
fs
ud1
pavgb
cmp
mov
call
fwait
int
pop
test
nop
dec
inc
pop
int
pop
lds
test
out
ljmp
imul
jnp
mov
inc
mov
lcall
adc
ret
pop
adc
daa
add
or
mov
and
mov
in
daa
lods
push
in
push
test
stos
lds
sbb
xchg
faddl
cli
cmpsl
mov
lret
shr
push
cmp
aas
dec
mov
outsb
fstps
test
push
rsm
mov
mov
pop
dec
lods
push
sub
adc
ret
mov
loopne
bound
xchg
sbb
xor
out
mov
jmp
or
mov
push
mov
inc
jo
mov
push
jno
jl
mov
cld
popa
outsb
dec
jmp
jp
movsl
or
nop
clc
enter
js
adcl
adc
ljmp
sub
and
ds
dec
movsb
adc
pop
adc
aad
stc
push
mov
imul
loopne
pop
daa
dec
rcrb
push
mov
pop
mov
adc
jno
jo
fdivr
ret
ret
inc
clc
enter
insb
divl
push
lock
addr16
adc
jg
pushl
rorl
xchg
subb
scas
mov
jae
cli
je
stc
cs
and
sub
xchg
adc
imul
push
mov
push
lret
and
mov
outsb
dec
fmul
pop
js
and
ja
mov
xchg
in
cli
mov
std
inc
mov
sbb
cmp
in
jle
mov
je
mov
jg
mov
in
mov
jp
imul
mov
fwait
pop
cmpsb
in
aaa
dec
sbb
popa
mov
mov
xor
mov
aad
inc
pushf
std
stos
and
pop
test
push
rclb
roll
loopne
mov
fwait
cmp
repz
sti
fimuls
les
xor
jns
getsec
mov
aad
aaa
lcall
push
sub
inc
add
int3
and
into
lea
pop
inc
dec
pop
cmp
mov
inc
push
adc
push
inc
loope
lret
js
sbb
inc
jbe
js
push
leave
sbb
mov
sbb
xchg
push
and
and
popa
xchg
jle
pop
aas
and
icebp
sbb
mov
pop
ds
lcall
loopne
jl
cmp
fsubl
jmp
mov
int
mov
addl
out
lret
stos
mov
icebp
push
or
sbb
add
mov
cwtl
enter
loop
xchg
pop
cli
mov
test
push
add
cmp
lds
ljmp
jle
add
fiaddl
jmp
in
cmp
pop
cwtl
and
addl
out
or
xor
outsl
fldt
cmpsb
pop
jecxz
inc
cmp
jne
jno
jp
ror
data16
dec
and
pop
stos
pop
jp
clc
push
and
push
test
and
scas
mov
or
mov
cs
je
icebp
dec
rol
sbb
into
xchg
sahf
les
outsb
out
stos
orb
cwtl
fs
inc
stos
divl
aam
jnp
outsl
sar
pop
sbb
jbe
xor
dec
sbb
in
addr16
push
icebp
xor
rolb
loope
jnp
cs
inc
sbb
jmp
lcall
adc
out
xlat
out
sti
jns
es
movsb
test
iret
rcll
mov
push
loope
sti
jb
mov
fs
push
popf
dec
add
pop
xor
popf
add
adc
outsb
movsb
cltd
sub
xor
shlb
aas
mov
outsl
test
repz
ja
jbe
imul
pop
addr16
sub
mov
and
mov
call
jo
sbb
mov
cmp
jne
pop
push
mov
lret
call
nop
xlat
ret
sub
pop
stos
cmp
xor
test
and
in
ljmp
pop
adc
add
mov
lcall
mov
testb
mov
outsl
int3
clc
cmp
pop
jmp
dec
pop
mov
pop
sti
out
push
inc
inc
inc
adc
mov
pop
fxch
stc
mov
ja
push
into
popa
mov
idivl
add
cmc
jo
rcll
push
mov
sbb
dec
and
mov
test
repz
in
dec
pop
lret
sbb
lea
push
insl
jmp
lods
call
or
jecxz
cmc
dec
jb
adc
adc
inc
out
mov
sub
das
or
mov
and
fistpll
jmp
stos
or
mov
std
je
jecxz
enter
jg
mov
inc
fnstcw
test
fmull
adc
sbb
dec
pop
cmp
add
test
jne
xchg
scas
add
push
jl
or
push
rolb
add
aaa
inc
andl
adc
fs
sub
subb
lcall
ret
inc
xchg
out
mov
cmp
lods
mov
daa
lahf
inc
push
or
ja
jl
inc
fwait
out
lock
pop
jb
sub
inc
xor
adcb
jo
rcrb
mov
mov
je
jbe
xor
leave
mov
fstl
pop
lret
adc
test
inc
push
rcrl
add
addr16
xor
shlb
jge
repnz
lods
push
and
shl
add
mov
sbbb
add
inc
roll
jp
push
mov
jmp
push
ja
push
mov
mov
jmp
push
pop
out
std
ret
testb
mov
ljmp
rcrl
addl
dec
icebp
lds
cwtl
pop
mov
push
mov
cwtl
inc
and
add
xor
out
pop
adc
pop
sbb
notb
cmp
xchg
xchg
outsl
mov
ss
std
sahf
push
cltd
sbb
arpl
test
xchg
ss
sub
mov
loope
xor
sbb
jl
aad
mov
inc
fsubp
xchg
lret
push
xchg
jae
and
xchg
jns
ret
or
shll
out
mov
movsl
test
push
mov
into
inc
xor
xchg
mov
sub
aas
adc
and
fsubrs
aam
adc
mov
jp
test
dec
xchg
jo
insl
mov
pop
add
push
lock
scas
add
movl
push
mov
add
addl
push
popa
push
pop
enter
cmp
xor
stos
dec
adc
sub
icebp
push
stos
pop
pop
imul
mov
push
mov
stos
cmp
movsl
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adcb
adc
ljmp
adc
idiv
subl
adc
movsb
sbb
push
arpl
push
das
dec
arpl
ja
das
jmp
sub
test
or
add
pop
daa
pop
test
adc
cs
adc
movsb
adc
mov
pop
stos
rcrl
cvtdq2ps
jae
test
out
cmp
stos
nop
and
mov
pop
adc
add
push
jge
pop
rolb
in
inc
cmpsl
mov
cli
pop
rcrl
fistpl
add
repnz
lods
test
mov
push
mov
rorb
add
fimull
lods
push
xchg
add
arpl
cmc
insl
int
push
cmp
sbb
subb
jne
iret
jne
dec
cltd
fcoms
scas
and
dec
fsubs
jb
mov
arpl
cmp
scas
jg
imul
inc
std
repnz
fwait
leave
jecxz
add
and
ret
hlt
sbb
jp
pop
lret
cwtl
cmp
hlt
lret
push
test
push
adc
aam
fimuls
jbe
fldenv
lods
rcll
inc
lds
dec
mov
sub
loopne
mov
daa
push
mov
jmp
cmp
gs
fistpl
icebp
out
repz
and
addr16
bound
jl
add
jmp
jnp
cltd
popa
mov
lret
or
pop
mov
jl
out
sub
jae
jnp
dec
in
iret
out
mov
xchg
push
out
es
dec
xor
pop
ret
stos
push
lods
sub
mov
xchg
and
dec
mov
dec
je
out
sub
cmp
xchg
dec
and
jge
push
xchg
ficoml
lock
gs
aad
out
cmp
cltd
loop
inc
mov
xchg
fnstcw
dec
scas
aam
mov
jno
push
sub
outsb
pusha
loopne
outsl
out
add
mov
sbb
adc
ret
enter
dec
mov
sbb
xchg
cmpsl
jb
mov
lods
aad
pop
mov
inc
mov
dec
aam
fsts
pop
sub
inc
lret
mov
imul
inc
xor
sar
repz
cmp
push
jl
mov
stos
sbb
cmpsl
out
sbb
lea
shl
imul
cmpl
into
cli
add
iret
mov
int
mov
jmp
mov
and
pushf
mov
inc
into
lret
popa
bnd
xor
gs
xchg
push
icebp
sub
lds
cmpsb
movsb
icebp
lcall
push
mov
out
jecxz
mov
jne
fidivl
lcall
loop
or
imul
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
xchg
idivl
fdivrs
mov
stc
sahf
lahf
test
xchg
sbb
je
xchg
push
pop
mov
out
jg
lahf
cwtl
cmp
pop
pop
or
xor
jnp
movsl
adcb
shlb
jecxz
add
mov
lret
les
nop
xlat
push
lds
testl
mov
test
arpl
popa
mov
xor
mov
vmovntps
jge
scas
push
xchg
xchg
lret
cli
outsl
test
ss
popf
sahf
push
cltd
sbb
arpl
test
xchg
ss
sub
mov
loope
xor
sbb
jl
aad
mov
inc
fsubp
xchg
lret
push
xchg
jae
and
xchg
jns
ret
or
shll
out
mov
movsl
test
push
movsl
mov
inc
xor
xchg
mov
sub
aas
adc
and
fsubrs
shrb
bound
mov
jp
test
dec
xchg
jo
insl
mov
pop
add
push
lock
scas
add
movl
out
mov
add
addl
push
popa
push
pop
enter
cmp
xor
stos
dec
adc
sub
icebp
pop
xchg
inc
and
stos
pop
pop
imul
mov
push
mov
stos
cmp
movsl
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adcb
adc
ljmp
adc
outsl
mov
sbb
push
jnp
push
das
dec
arpl
ja
das
jmp
sub
test
or
add
pop
daa
pop
test
adc
cs
bound
movsb
adc
mov
pop
stos
rcrl
cvtdq2ps
jae
test
out
cmp
sub
and
mov
pop
adc
add
dec
jp
pop
rolb
in
les
rep
stos
clc
repnz
cli
or
xchg
test
xchg
jne
mov
xor
ret
rcrb
cmp
inc
pop
insb
test
dec
mov
idivb
sub
test
jecxz
addr16
cld
into
fs
fisubrl
std
in
push
mov
mov
out
sbbb
je
inc
loopne
out
cmpsl
xlat
adc
add
nop
subl
xor
icebp
xchg
cs
xorb
frstor
sub
xor
ja
daa
lahf
mov
icebp
leave
jne
out
inc
sub
inc
jg
out
ds
out
enter
arpl
hlt
mov
loope
mov
adc
dec
lret
inc
dec
pop
jge
arpl
popf
fistpl
pop
or
mov
sbb
jp
jl
movsb
pop
or
seto
pop
call
mov
lret
pop
imul
sub
lods
int3
lret
sti
xchg
push
sbb
sub
ljmp
add
push
dec
push
mov
and
push
inc
pop
daa
jae
jmp
shll
repnz
loope,pt
les
push
es
inc
sbb
push
repnz
arpl
jmp
out
mov
add
add
mov
push
popa
outsl
jns
stc
enter
jg
mov
adc
addl
mov
js
stc
adc
xor
je
or
mov
adc
jp
xlat
insb
mov
dec
mov
sbb
or
mov
sbb
lcall
test
and
adc
sub
sub
and
mov
inc
jmp
xor
test
pop
or
jge
test
sar
or
push
add
pop
and
push
ds
test
and
daa
add
push
add
xchg
int3
hlt
or
mov
lock
inc
xchg
sbb
lods
push
cli
dec
add
push
mov
jg
fsubrl
lods
push
dec
pop
ficoml
mov
jae
test
sub
pushf
mov
pop
mov
and
xchg
xchg
insl
cli
dec
mov
repnz
shrb
xlat
sbb
mov
cmp
fcomi
stc
loopne
bound
fwait
leave
loop
add
fdivrl
push
mov
dec
in
inc
scas
xchg
int
add
mov
pop
movsl
icebp
icebp
pop
mov
xchg
jmp
subl
into
ret
inc
cld
fwait
dec
ds
rclb
sbb
xor
shlb
lds
aas
mov
sbb
das
xor
out
aam
cli
fwait
push
mov
push
loopne
fidivl
adc
mov
mov
incl
adc
add
sbb
mov
mov
aad
lret
imul
mov
pop
mov
movsb
push
dec
repnz
movsl
jmp
arpl
mov
fdivr
popf
push
dec
pop
push
inc
test
mov
stc
mov
inc
mov
jge
sub
xchg
int3
adc
jae
cmpsb
sub
lds
mov
leave
pop
fisubs
js
fidivs
jo
leave
icebp
std
test
jl
jnp
add
add
ret
subb
mov
sbb
pop
xchg
inc
add
sbb
lods
lret
scas
dec
inc
call
sti
xchg
jae
inc
pop
enter
add
xlat
js
or
inc
hlt
mov
gs
jnp
addb
jmp
fwait
aam
sahf
insl
mov
inc
call
inc
mov
iret
inc
pushl
pop
sbb
sbb
add
sub
push
sub
mov
dec
test
and
push
aad
js
movsl
cwtl
shufps
mov
test
sbb
jbe
rcrb
mov
ljmp
out
dec
mov
sub
stc
add
jnp
stos
lock
mov
push
inc
stos
pop
negb
or
mov
jb
gs
lods
jne
jp
sub
push
or
repz
add
mov
inc
and
or
std
mov
inc
jl
insb
cs
adc
mov
cmpsb
push
inc
and
cmpb
sahf
and
aaa
lods
data16
jne
mov
int3
jg
mov
fcmovnb
adc
and
xchg
lods
outsb
imul
fbstp
out
int
or
mov
cltd
imul
push
sub
test
xor
lret
push
insb
imull
popl
arpl
ds
inc
jb,pt
dec
leave
inc
push
adc
iret
jp
fwait
sub
mov
jne
icebp
pop
sub
adc
mov
jae
pop
int3
std
or
cs
int3
mov
mov
add
or
lds
add
inc
lcall
test
push
vpmullw
push
mov
sbb
and
stc
push
jmp
rcrb
test
jge
out
inc
shl
push
mov
xchg
add
popa
shr
movsl
jp
mov
mov
sbb
les
shl
std
xor
lock
mov
or
adc
sub
test
ret
add
xchg
popf
fcompl
jg
es
mov
add
pop
mov
pop
pop
pop
mov
mov
pop
sbb
sub
jecxz
or
xor
dec
dec
sbb
add
inc
add
xchg
int3
sbb
icebp
fsubrl
les
fcmovnb
dec
add
sub
les
fxch
scas
adc
lret
mov
cs
cmpsb
pop
xchg
jbe
and
sbb
in
mov
push
mov
lods
js
xchg
dec
les
jle
shl
lods
and
cmp
pop
mov
mov
xchg
out
xchg
lds
fsub
sbb
jge
dec
dec
push
shr
shlb
push
jge
int
fs
sbb
push
add
mov
pushf
sub
cmp
lea
icebp
sbb
fadds
mov
pop
jecxz
enter
mov
pushf
dec
inc
jne
sti
outsb
daa
adc
or
test
fidivl
and
fdivrl
mov
xor
add
clc
sti
mov
pusha
pop
sub
fstpl
inc
cmp
push
sbb
data16
xchg
std
ror
addr16
sub
arpl
sub
test
movsb
push
dec
repnz
scas
mov
mov
mov
scas
dec
pop
jno
xchg
mov
stos
int
ljmp
mov
pop
mov
jnp
shrb
and
adc
lret
mov
ja
repnz
fstps
popl
and
test
cmp
push
cmp
cmp
push
mov
shlb
out
ret
fcoms
rorb
jp
test
jge
cmp
incb
cmpsl
mov
adc
jb
loopne
adc
jno
popa
fisttpl
cmpl
popa
dec
mov
jbe
sub
pop
or
in
push
fldl
xchg
mov
lea
add
or
sub
movsb
fs
icebp
fsubrl
test
jns
jmp
stc
movsl
jmp
arpl
jae
jp
inc
and
xor
pop
sbb
mov
repnz
sub
jae
pop
insl
idivb
dec
xchg
lcall
lock
gs
push
jge
xor
xchg
dec
les
mov
pop
lahf
inc
jge
pop
jnp
in
mov
lret
inc
mov
push
or
jle
clc
mov
xchg
cltd
int
dec
out
scas
addr16
sbb
mov
jp
js
xlat
insb
imul
into
pusha
jo
adc
in
add
cmp
movsl
std
or
movl
inc
mov
inc
xlat
out
mov
mov
cmpsl
stos
dec
testl
jmp
or
jae
mov
push
pop
into
pop
jle
or
cmp
xlat
repz
or
mov
pop
mov
dec
jb
jnp
rclb
adc
inc
pop
xchg
or
mov
ja
cmpsb
test
sbb
insb
xorb
mov
cmc
add
mov
jb
rcrb
adc
sub
shrb
xchg
and
and
mov
les
ja
pop
xchg
dec
lea
jecxz
sahf
mov
xchg
xor
dec
xor
fcoml
pop
loope
jno
jle
inc
shrl
lock
fsubs
ljmp
push
or
ror
mov
loop
pop
cmpsb
lret
repnz
ja
xor
inc
xchg
jo
sbb
popa
popf
les
xor
xchg
movsb
in
aad
lods
mov
push
pop
mov
add
xchg
cmp
int3
ret
or
push
mov
lret
loopne
stos
inc
ret
inc
mov
lcall
xor
xlat
push
ljmp
les
mov
pop
mov
mov
push
aam
ret
loope
jnp
push
push
in
lds
icebp
mov
push
aaa
insb
scas
mov
les
and
repz
ljmp
inc
cmp
mov
cs
or
xchg
lahf
cmpsb
ljmp
xchg
sarb
movsb
call
lods
jle
mov
push
cmp
jmp
test
sti
dec
xchg
popa
in
sbb
lcall
sarl
xor
cltd
arpl
jo
mov
xchg
jno
pop
inc
outsl
push
pop
flds
stos
iret
es
bound
and
shr
neg
pop
mov
fnstenv
leave
push
push
addl
sub
cmp
and
mov
pop
mov
xor
or
add
enter
inc
ja
mov
pop
add
in
jg
jecxz
cmp
adcb
les
or
inc
sub
arpl
add
outsl
adc
inc
mov
stos
adc
scas
adc
lret
test
pop
mov
cli
mov
mov
cmp
dec
cmpsl
ds
sub
out
mov
ja
seta
add
jne
jb
and
cli
in
xchg
mov
clc
xchg
in
negl
test
xor
js
stc
fisubrs
lea
pop
mov
lea
cmp
insb
jbe
lret
sbb
sahf
jne
jge
jmp
and
cld
mov
loopne
xchg
imulb
popa
rcr
lds
loop
pusha
jbe
lret
rorb
mov
lret
mov
xor
fdivrl
mov
cmp
mov
movlps
xor
pop
pushf
scas
sbb
xchg
mov
loopne
push
cmp
stos
es
hlt
lahf
or
push
cld
call
rolb
inc
xor
cmp
enter
jp
scas
xorb
es
add
imul
push
jne
popf
popf
mov
sub
jg
sbb
jecxz
cmpsl
sarl
cmp
and
sbb
shlb
cmpsb
out
adc
ds
xchg
int
mov
adc
mov
fwait
push
mov
cmp
test
mov
push
pop
movb
xlat
add
dec
mov
dec
jecxz
js
orb
inc
mov
sbb
lret
ret
push
mov
dec
pop
dec
dec
rolb
inc
std
pop
jle
xchg
cmc
movsl
jge
ja
daa
out
inc
ret
inc
sahf
fisttps
loope
addl
dec
or
dec
sub
in
add
ret
inc
or
inc
and
lret
movsl
mov
sub
mov
lods
xor
mov
xchg
sub
push
mov
movsb
inc
and
push
xlat
and
add
jno
mov
int3
mov
and
push
jecxz
or
movsl
add
sti
add
dec
push
inc
fdivrs
mov
mov
xor
out
jb
jns
add
into
sbb
js
xchg
js
sahf
sar
stos
ljmp
ror
out
test
les
and
cmpsb
xchg
aas
cmp
dec
push
dec
inc
ja
test
es
lods
je
mov
mov
add
add
mov
dec
roll
popf
adc
xchg
lods
sbb
in
dec
and
or
add
sbb
dec
sarl
mov
xor
push
xlat
bound
adc
pop
shll
mov
scas
lea
ja
xor
lods
xchg
add
fdivs
cwtl
add
cmpsb
test
dec
pop
div
add
call
pop
popa
das
movsb
cmpsb
aad
sahf
xchg
xchg
mov
int
lock
pop
out
or
jl
pop
cltd
jo
outsb
push
inc
inc
aas
mov
cmp
push
adc
inc
jne
inc
push
mov
fwait
inc
lret
arpl
xchg
inc
fisubrl
xchg
js
loope
sahf
add
pop
aas
cmpsl
and
or
stc
add
or
and
mov
push
mov
cmp
data16
fidivl
fbld
adc
fwait
lea
xchg
xchg
dec
inc
adc
adc
hlt
jl
out
mov
mov
les
mov
inc
mov
scas
pop
stos
les
les
add
xchg
shrl
mov
lcall
xor
xlat
push
ljmp
les
mov
pop
mov
mov
push
aam
ret
loope
jnp
push
push
in
lds
icebp
mov
push
aaa
insb
scas
mov
insb
ret
int3
jle
movb
rol
add
insl
mov
lds
popa
inc
pop
jecxz
push
push
arpl
xchg
stos
jge
imul
push
sbb
push
decl
stc
sbb
push
mov
mov
fwait
push
mov
inc
mov
repnz
jbe
mov
incl
stos
in
sbb
lods
pop
movsl
cli
push
lods
adc
cli
jne
test
inc
dec
dec
clc
and
xlat
imul
lock
xor
idivb
inc
push
sbb
add
loope
or
dec
outsb
sub
ljmp
add
cmc
adc
inc
fdiv
cmp
xor
fwait
pop
push
push
pusha
or
sbb
xor
mov
fimuls
pop
jno
pop
jo
push
negb
sbb
pop
sbb
scas
adc
mov
jecxz
mov
cmpsl
xchg
fildl
jecxz
push
push
mov
mov
dec
fs
dec
in
add
cltd
lods
jle
cltd
shl
in
push
cmp
bound
scas
jle
xor
dec
hlt
or
cltd
mov
push
jmp
dec
lcall
stc
ret
out
test
ret
xor
dec
das
xchg
shrl
add
inc
je
repnz
loope
addl
jmp
or
jae
xchg
adc
cltd
add
popa
gs
pop
sbb
call
sub
push
loopne
fisubrs
dec
fistpll
in
xchg
sbb
aaa
pop
sti
or
or
cld
adc
subl
in
movsl
cmp
rcrb
push
mov
and
push
mov
xchg
pop
jno
inc
repnz
mov
je
bound
push
cmc
insl
dec
mov
sbb
lcall
or
lock
mov
cltd
movsb
push
aad
xor
int3
adc
mov
stos
cmp
ds
fwait
leave
outsl
jne
popf
enter
mov
adc
add
outsl
inc
xor
clc
jle
adc
mov
cmpsb
push
repnz
movsb
inc
add
movsl
js
lods
cmpsb
cmp
or
xor
divb
jg
mov
sbb
adc
int
jle
es
inc
in
lds
or
xchg
mov
pop
insl
movsl
les
jnp
sub
stc
test
jne
xor
in
ja
cmc
mov
jecxz
repnz
ret
mov
xor
shl
jb
mov
inc
pop
push
rolb
ljmp
lcall
dec
push
out
mov
jb
arpl
stos
hlt
sub
or
out
nop
insl
and
punpckhwd
jne
pop
jae
dec
popa
xchg
mov
dec
cltd
lods
inc
sbb
fsubr
jge
sarb
and
jae
jg
lods
stc
fs
jge
ds
sbb
inc
test
mov
sub
int
or
test
pop
movsl
icebp
jno
mov
inc
mov
mov
pop
sub
pop
sti
icebp
sub
aad
lea
movl
dec
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
mov
add
push
xchg
push
lret
pop
stos
icebp
cmpsl
aaa
push
mov
leave
xor
imul
rclb
xchg
repnz
pop
adc
iret
jns
and
roll
sbb
pushf
mov
push
mov
sti
add
mov
sbb
sbbb
scas
mov
lock
repz
xchg
add
jl
mov
bound
and
pop
daa
push
mov
fnstsw
lret
movsl
ret
dec
lods
adc
pop
mov
lahf
xlat
mov
jb
sti
adc
inc
xor
push
sbb
mov
shr
mov
and
dec
inc
dec
ret
cmp
inc
xchg
jbe
pop
mov
loopne
pop
nop
pop
mov
or
sti
jle
push
xchg
lret
jecxz
add
jl
rol
ljmp
mov
in
imul
inc
into
xchg
mov
fstl
mov
fsubs
mov
js
fildll
push
cmp
pop
mov
pop
sti
mov
xchg
pop
xchg
cwtl
xchg
xchg
inc
stos
popf
testb
or
add
mov
in
out
bnd
lods
scas
inc
mov
mov
or
mov
call
les
xchg
dec
mov
cmp
in
pop
xor
in
pop
cli
test
adc
lods
es
addr16
mov
sbb
push
popf
iret
sbbl
sbb
or
getsec
mov
push
inc
xchg
sahf
dec
mov
inc
popf
shlw
fldenv
mov
std
data16
iret
subb
inc
rcr
sbb
mov
daa
push
pop
push
int
push
movsl
shrb
xor
in
xchg
std
add
mov
insb
pop
or
shrl
mov
add
adc
and
lret
mov
flds
sbb
push
pop
cwtl
and
sbb
pop
add
sets
cwtl
cmp
dec
sbbl
js
andl
adc
pop
out
add
and
les
push
pop
pop
or
enter
push
hlt
xchg
daa
data16
gs
out
stos
adcl
pop
movsl
mov
insb
or
gs
movb
xlat
push
flds
inc
xor
or
dec
inc
or
aaa
mov
push
mov
pop
xor
jno
fiaddl
ret
pushf
cmpsb
ret
mov
adc
and
orl
xor
aaa
gs
outsb
aaa
mov
or
mov
xchg
xchg
cmc
cmp
repnz
pop
adc
and
pop
xchg
mov
pop
scas
push
sub
mov
jmp
mov
xor
adc
mov
bound
push
xchg
fdiv
add
mov
cmp
adc
mov
subb
shrl
mov
pop
xor
inc
mov
es
mov
lock
mov
cli
jnp
inc
mov
mov
int3
fcmovb
add
push
in
adc
sub
or
xchg
outsl
dec
sub
push
mov
pop
jne
inc
jbe
push
jns
insl
xchg
inc
mov
jne
and
loop
jmp
cmp
hlt
xor
xchg
xchg
imul
fdivrs
jnp
imul
inc
fimuls
inc
lahf
pop
dec
rcrl
adc
pop
pop
dec
sbb
push
pop
mov
es
inc
orb
mov
stos
bound
loopne
insl
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
subb
mov
gs
or
hlt
dec
dec
in
mov
xor
subb
pop
aad
imul
fstpl
dec
pop
in
jb
loope
shrb
push
and
test
push
jns
jle
inc
cli
or
mov
pusha
out
or
pop
jnp
in
jmp
cld
lret
mov
pop
push
sub
idiv
pop
xchg
enter
cmpsl
ret
test
lret
into
lea
mov
push
or
daa
je
sbb
inc
pop
pop
add
dec
mov
lods
ret
pop
divb
dec
hlt
mov
xchg
mov
add
test
xchg
jle
imul
lea
jmp
mov
stos
jne
stc
popa
int
inc
mov
iret
pop
adc
push
inc
pop
das
push
fwait
sub
fwait
cmp
cwtl
mov
call
repz
jnp
sub
push
mov
shlb
mov
or
in
cmp
test
mov
nop
outsb
sub
add
mov
sbbb
bound
xchg
rclb
mov
icebp
and
lock
cmp
pop
mov
pop
out
xchg
int3
inc
jl
cmc
cmp
xchg
fs
rcrl
fldl
jne
pop
xchg
clc
loop
add
fistl
pop
jbe
push
dec
fdiv
mov
inc
pop
push
dec
pop
or
lock
les
xchg
repz
leave
addr16
aad
jno
xor
inc
insb
and
sarl
cwtl
cmp
pop
xchg
sahf
roll
jecxz
xor
jle
sbb
dec
xor
mov
daa
in
dec
lahf
xchg
je
test
mov
rcr
icebp
mov
xchg
lret
xor
adcb
lret
xorl
xor
pop
movsl
mov
shll
mov
sub
pop
mov
enter
pop
shl
add
gs
arpl
out
loope
into
adc
clc
xchg
and
jno
mov
rclb
inc
or
add
cmp
out
test
rclb
scas
cmc
pop
ficoml
mov
movsl
fcmovb
push
out
cmp
addr16
inc
adc
jecxz
inc
cmc
adc
or
xor
inc
std
andl
mov
daa
pop
dec
adc
call
pop
mov
mov
int
rcrb
push
inc
dec
out
mov
sub
xorl
xchg
ficomps
je
push
xchg
xchg
pop
push
shlb
aad
lcall
inc
pop
stos
dec
pusha
fmuls
ficoms
cmp
and
into
mov
pop
or
lret
cwtl
in
inc
stos
std
mov
pop
inc
filds
jae
xlat
pop
inc
decl
adc
jns
and
lods
fadds
jns
pop
pop
push
loope
les
filds
jg
decl
stos
loopne
adc
mov
push
inc
ret
fld
clc
enter
mov
in
mov
fsubr
add
sbb
movsb
test
dec
or
mulb
das
jge
xchg
pop
cld
push
mov
loope
cs
filds
jae
mov
inc
sbb
mov
inc
cmp
xchg
push
addr16
cmp
ror
fsubrl
fmull
xchg
mov
jnp
pop
mov
popa
jmp
test
fwait
adc
int3
sub
jmp
imul
jp
xchg
mov
inc
inc
repz
mov
push
push
and
xor
inc
inc
push
mov
fwait
inc
lret
arpl
xchg
inc
fisubrl
xchg
js
loope
sahf
add
enter
adc
fwait
adc
add
mov
xchg
or
jle
popf
jmp
cs
mov
imul
pop
gs
psubw
mov
fmul
dec
mov
call
dec
mov
inc
fstpt
or
dec
xor
add
dec
rcl
pop
loop
vcmpss
cmp
inc
cmp
mov
mov
or
enter
mov
daa
add
insl
movsl
sub
cmpsb
mov
lret
testl
sahf
sbb
testl
mov
add
and
mov
and
xlat
aam
sub
popf
push
aad
pop
fdivs
push
jne
dec
insl
inc
mov
and
mov
ret
in
int3
mov
sbb
xchg
mov
sbb
push
inc
into
sbb
cltd
xchg
jg
lds
loopne
ret
fdivr
int
cmp
aad
jnp
lahf
jg
mov
fildll
sbb
repz
xor
ja
mov
xor
inc
add
xor
ret
push
aam
iret
jae
pop
dec
pop
jge
push
rcl
mov
pop
popf
cs
sbb
mov
std
and
mov
fildll
pop
test
jmp
fiaddl
inc
mov
sbb
dec
adc
jb
lods
xor
sbb
in
daa
inc
or
mov
outsl
mov
or
ror
inc
adc
lret
test
gs
push
sub
std
jb
imul
and
adc
dec
rcrl
add
das
push
dec
mov
sub
mov
dec
scas
push
out
scas
adc
test
cs
pop
iret
rolb
inc
mov
fiadds
mov
loopne
mov
dec
mov
daa
sbb
mov
or
les
mov
movsl
ret
mov
jp
mov
xlat
pop
lret
sub
cmp
cltd
xlat
xchg
pop
adc
xor
mulb
mov
cmpsb
movsl
movsl
inc
push
or
mov
push
and
shl
mov
adc
add
int3
push
pop
pop
loop
jge
ret
push
adc
jl
fs
fcmovne
adc
inc
pop
ljmp
rcll
arpl
fisttpl
push
lcall
push
lods
push
sub
push
lea
push
lret
mov
mov
inc
mov
or
cmp
adc
fadds
push
dec
lods
sub
dec
dec
sbb
popf
add
cld
cmpsl
call
jmp
add
cwtl
add
add
sub
adc
cmp
jb
fstps
adc
mov
inc
test
test
cmpsb
push
jnp
ret
sbb
in
mov
mov
jae
int3
testl
push
dec
popf
or
mov
pop
mov
pop
scas
mov
push
inc
cmpsl
dec
loopne
popa
je
jne
or
and
or
xor
sbb
adc
rcll
ret
loop
sti
pop
sti
divb
add
mov
pop
cmp
add
stos
mov
sub
push
enter
leave
mov
inc
fists
scas
adc
lret
sbb
cmp
pop
adc
mov
lret
cli
repnz
xor
insl
test
sub
outsl
or
lds
dec
mov
test
add
rcrl
daa
jl
gs
jns
or
in
scas
push
pop
jecxz
or
and
add
pop
pop
lcall
pop
push
mov
ds
sub
sarl
test
ret
xorb
mov
jne
pop
in
orl
add
inc
sahf
popf
dec
push
pop
or
pop
repnz
cmpsb
cmpsb
cmpsb
push
mov
mov
scas
mov
xchg
scas
int3
push
mov
std
divb
fisubs
xor
leave
mov
sbb
cmp
stos
sub
or
mov
imul
lds
push
push
cmp
ret
jle
jnp
lds
xchg
jp
push
jmp
pop
cmpsb
sbb
cltd
gs
cmc
add
cmp
pop
mov
mov
xchg
dec
xchg
pop
mov
or
add
push
pop
mov
ljmp
push
clc
push
out
pop
pop
mov
orb
lds
repnz
mov
and
out
add
pop
adc
xchg
add
or
pop
out
xchg
int3
inc
jl
cmc
cmp
xchg
fs
rcrl
fldl
jne
pop
xchg
clc
loop
add
fistl
pop
jbe
push
dec
fdiv
mov
inc
pop
push
dec
pop
or
test
mov
ja
cmp
push
pop
and
js
jae
fucomip
xor
fwait
loopne
icebp
aaa
test
jge
decb
fists
les
xchg
cmc
sub
xorl
aam
xchg
clc
addr16
fwait
push
sbb
mov
pop
pop
mov
loopne
push
movsl
mov
bound
xchg
fsts
lods
and
xor
ja
imul
js
scas
xor
bound
inc
jmp
hlt
inc
jmp
fadds
sahf
mov
stc
add
adc
add
ffreep
iret
cmc
int
mov
jl
pop
notl
cmpsb
iret
pop
call
outsb
lds
mov
popf
jp
out
adc
das
xor
pop
dec
orb
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
ret
inc
aaa
stos
dec
xchg
fdivr
pushf
xchg
sub
mov
jne
mov
dec
mov
cwtl
fnstcw
int3
stc
pop
jecxz
cmp
fidivs
jl
add
mov
xchg
inc
ss
aaa
jge
lcall
mov
add
arpl
xorl
and
inc
outsb
aad
mov
repnz
fisubrs
out
js
sarb
inc
aad
fsubl
test
adc
adc
orl
mov
pop
fs
adc
cld
and
and
mov
mov
xorb
scas
out
bound
andb
push
xchg
push
mov
jne
push
fmulp
xor
rorl
add
xor
mov
call
daa
xchg
dec
or
mov
push
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
xor
mov
incb
dec
ss
ficoml
mov
xchg
stos
inc
sbb
icebp
es
movb
repz
sbb
jecxz
ret
push
mov
lret
inc
fcoms
dec
stc
add
sarb
orl
lret
inc
in
and
inc
add
arpl
mov
xchg
frstor
sub
cmpsl
lret
add
in
cmpsl
pop
repz
in
sahf
inc
sbb
bound
pop
cmp
mov
cmpsl
xor
xchg
lea
sub
hlt
enter
fsts
add
jae
fwait
jp
lret
test
in
scas
inc
leave
lret
pop
mov
in
inc
mov
les
mov
mov
pop
out
push
sub
inc
mov
leave
testl
dec
pusha
sub
lds
pop
or
push
jp
or
loopne
push
clc
mov
lcall
shll
push
jge
mov
jno
dec
sub
stc
jo
mov
xchg
scas
ret
adcl
bound
xchg
js
push
mov
mov
jl
nop
test
sbb
push
mov
or
in
mov
repz
shrl
repnz
orl
les
shll
xchg
mov
xchg
dec
jae
aam
les
push
cmp
mov
lahf
iret
cmpsl
ret
xchg
std
stos
rcrl
std
mov
int3
add
inc
loop
sbb
test
xor
cltd
aad
fisubs
mov
fwait
divl
add
xchg
popa
push
mov
lcall
into
lcall
iret
fwait
js
loope
insl
pushf
shl
or
je
cltd
rcrl
sbb
jne
icebp
cmp
xchg
dec
pushf
mov
inc
incb
push
push
cld
mov
mov
lods
movsl
push
mov
mov
mov
gs
add
adc
xlat
or
test
adc
and
and
mov
add
mov
jo
push
fs
inc
movsb
lret
or
and
push
xchg
jae
aam
push
dec
pop
push
inc
sub
fwait
jge
and
sub
fildl
sbb
xchg
mov
ja
add
add
loop
push
sbb
mov
pop
mov
mov
sbb
mov
jne
push
mov
pop
add
inc
mov
push
aad
jnp
lcall
sbb
or
mov
add
dec
repz
sbb
imul
jmp
stos
in
xchg
pop
pushf
push
push
sbb
mov
add
dec
in
push
dec
xchg
mov
jae
adc
in
stos
enter
mov
jmp
and
call
arpl
pop
mov
xchg
fadds
gs
add
push
mov
xchg
xor
add
xchg
roll
mov
jne
ret
xchg
js
push
aaa
xchg
dec
data16
pop
cmpsl
fcom
les
jg
out
loope
fnstsw
mov
mov
xchg
fiadds
mov
inc
aad
fdivs
mov
dec
jmp
dec
and
fisttps
mov
and
out
insl
lahf
in
sub
enter
mov
int3
pop
add
movsb
and
les
jge
fsubr
mov
jle
sahf
cmpsl
cmp
fcmovnb
hlt
lret
daa
in
cmp
sahf
pop
inc
fistps
adc
sbb
push
pop
dec
test
fsubrl
adc
inc
fwait
outsb
cld
sbb
rorb
push
dec
icebp
cli
pop
and
iret
inc
adc
sub
sbb
iret
lahf
cmp
jne
clc
sub
fwait
xor
sbb
push
jns
add
out
in
cmp
imul
inc
xor
sub
mov
movsl
and
pop
push
xor
xchg
cli
mov
mov
adc
cmpb
xor
sub
xchg
pop
pushf
repnz
ds
xor
sahf
sar
stos
ljmp
inc
sbb
lock
mov
fcoms
imul
mov
and
cmc
jmp
ss
fidivrs
iret
sbb
adc
add
sbb
xchg
mov
sub
lods
mov
xor
jle
xorl
stos
ljmp
ret
gs
loop
lret
in
xor
popa
mov
and
and
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
push
mov
imul
leave
fmuls
js
mov
xor
inc
dec
popf
lret
inc
outsb
xchg
shl
jecxz
pop
enter
jb
in
shl
enter
add
int3
clc
cmp
jb
push
sbbl
fwait
ds
outsb
stos
lock
orb
inc
ljmp
arpl
imul
inc
mov
xchg
fisttps
push
stc
adc
xchg
sub
iret
pop
xchg
imul
dec
mov
mov
xchg
sahf
cmp
std
fmuls
lock
xor
popf
add
adc
outsb
movsb
cltd
sub
xor
shlb
aas
mov
outsl
test
repz
ja
lds
sbb
jns
pop
mov
test
lock
in
ret
rcrl
inc
fucomip
mov
rol
movsl
and
inc
sbb
cmpb
insb
outsb
movsl
ret
or
mov
idivb
cltd
lret
lcall
sbb
inc
fldt
mov
cmpsl
icebp
add
push
sbb
jae
scas
pop
daa
inc
sbb
imul
inc
pop
or
or
xchg
clc
jbe
lods
cmc
xchg
push
aam
sbb
iret
js
dec
sbb
xchg
cmp
js
jb
rclb
clc
push
mov
clc
dec
les
or
addr16
inc
inc
enter
or
jne
mov
cld
shll
stos
cmp
mov
push
outsb
cmp
jne
fwait
dec
sbb
and
adc
cmp
xchg
sub
push
dec
mov
ret
in
pop
das
mov
lea
ret
loopne
cld
and
xchg
xlat
dec
xor
hlt
in
push
fmul
shlb
and
fsubrl
cwtl
sbb
test
inc
ljmp
dec
mov
push
mov
scas
mov
jae
fidivl
fnsave
mov
jnp
mov
and
sbbl
push
stc
xchg
pop
sbb
xchg
ja
mov
mov
data16
cli
cli
fld
and
inc
ret
mov
add
sbb
je
pop
push
dec
aam
jns
or
push
mov
sub
mov
mov
and
out
inc
sbb
cmp
xor
dec
adc
adcl
enter
adc
sbb
enter
ret
or
fwait
mov
int
inc
cmp
divb
test
js
mov
add
stos
lcall
sbb
fsubrs
popf
mov
cmp
jp
add
adc
popa
mov
cld
jg
xchg
mov
negb
cmp
sbb
sub
test
pop
clc
stos
bnd
loope
cmp
jnp
push
nop
push
mov
aaa
stos
add
sarl
cli
add
cmp
inc
stos
popf
mov
enter
enter
cli
sub
cltd
sub
mov
cmp
std
cli
jnp
inc
mov
adc
push
mov
mov
call
sbb
jl
lahf
xor
test
xchg
dec
adc
sbb
jge
dec
lcall
enter
rorb
into
mov
insb
lcall
or
inc
je
mov
sub
out
xchg
sbb
or
data16
loopne
arpl
sbb
das
dec
xchg
sub
or
ret
cmp
adc
ret
mov
fldl
jne
stc
sbb
xchg
add
xlat
sbb
or
add
inc
mov
push
xchg
lret
xchg
fwait
mov
hlt
hlt
mov
and
or
movsb
mov
xor
adc
daa
lret
add
mov
ret
push
movsl
or
mov
lahf
data16
sbb
adc
mov
push
xchg
sbb
rolb
pop
callw
xchg
ds
ret
notl
outsb
dec
dec
scas
aad
jp
std
add
xor
loop
mov
adc
jecxz
insb
jbe
push
cltd
mov
insl
cltd
out
sahf
xor
shlb
fwait
out
or
or
pop
out
ror
add
mov
es
hlt
xchg
inc
jl
mov
and
add
jno
rcr
and
outsb
jns
lea
andb
incl
mov
xor
sbb
push
std
push
inc
mov
mov
xchg
fidivrl
jle
scas
add
adc
sub
push
mov
lds
popf
ret
push
in
dec
mov
and
mov
mov
mov
jp
xchg
or
ficoml
scas
ja
pusha
gs
cmpsl
mov
or
adc
hlt
xchg
cmp
xchg
mov
ficomps
sbb
fwait
add
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
cmp
insb
incl
out
xor
push
fidivrl
jno
sub
lahf
popf
xor
jmp
std
mov
sti
and
xchg
enter
clc
push
or
mov
cltd
sahf
inc
mov
mov
inc
sub
jo
cmpsl
xchg
leave
jp
arpl
int
aas
into
cmp
xchg
or
stos
loope
dec
ret
sahf
repz
mov
repz
ret
mov
xlat
orb
mov
and
mov
sbbb
adc
scas
push
test
bnd
repnz
mov
lahf
cli
roll
xchg
mov
les
jno
lret
insl
jae
xchg
push
fs
add
push
xor
mov
pop
adc
jo
cmp
cmp
mov
iret
cltd
sub
es
idivb
mov
js
andl
addl
mov
inc
dec
xor
pop
mov
clc
or
movsl
ret
dec
out
xor
int
testl
pop
adc
hlt
xor
loop
hlt
mov
xchg
mov
inc
or
jge
and
jne
sbb
inc
aad
jns
xor
inc
mov
test
add
loopne
jmp
jno
push
jbe
mov
inc
or
lds
ret
xor
imul
lahf
jb
mov
push
pop
lods
cli
sbb
clc
out
or
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
xchg
push
adc
imul
std
xor
stos
dec
rorb
leave
push
xchg
clc
push
mov
lock
adc
outsb
pop
dec
pop
jmp
xor
leave
bound
pop
push
cwtl
clc
pusha
sarb
mov
sub
xor
xchg
xchg
inc
push
mov
pop
xor
insl
in
imul
loope
lsl
mov
sbb
dec
shrb
popf
aam
aaa
and
shlb
gs
pop
jmp
mov
inc
idivl
xor
ja
inc
pop
popf
dec
push
loopne
adcl
out
repz
cmp
jmp
cmp
pop
and
test
mov
mov
out
dec
cwtl
fisubrl
mov
pop
in
mov
lcall
xchg
testb
into
lcall
clc
add
push
repz
sbb
or
sbbb
jne
push
cmp
xchg
gs
mov
fwait
mov
ds
push
and
les
bound
mov
xchg
cwtl
cmp
mov
pop
mov
mov
bound
push
mov
clc
fistps
ret
inc
sub
mov
ljmp
xchg
lods
imul
mov
int3
fsubl
push
push
sbb
adc
lock
dec
sahf
dec
mov
lcall
cmp
loopne
mov
repz
sti
pop
adc
or
xchg
xor
pop
int
inc
pop
fimull
lret
inc
xchg
push
jbe
and
int
ret
popf
sti
pslld
mov
and
lds
jge
inc
mov
mov
pusha
stc
fstps
push
pushf
dec
shlb
mov
fs
movsl
add
or
xor
jb
fcoml
mov
into
jno
pusha
jmp
popf
in
icebp
fxam
xor
jmp
mov
in
cmp
mov
mov
aad
and
jp
sbb
xchg
mov
ret
iret
cmpsl
ret
or
push
add
add
mov
hlt
js
cwtl
adc
aaa
lds
or
das
int
imul
lret
dec
mov
repnz
xlat
fwait
add
iret
add
pop
scas
bound
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
lret
movsl
mov
mov
repz
mov
test
inc
mov
std
dec
jae
fldt
arpl
cmpsl
insb
mov
mov
xchg
dec
out
jnp
xchg
dec
fwait
rorl
ficoml
xchg
push
xchg
mov
xorb
pop
aaa
test
and
cmpsl
lods
jmp
popf
fisubs
sti
addb
leave
loop
mov
fistl
or
pop
lea
mov
mov
xchg
test
shrb
inc
outsl
cltd
js
add
push
shlb
jl
movsb
shl
call
cmpsb
inc
cltd
shlb
cltd
das
xchg
enter
cmp
push
scas
int
imul
pop
dec
mov
into
test
scas
icebp
fistl
xchg
repz
mov
in
std
sti
mov
jmp
gs
mov
inc
add
jo
f2xm1
clc
adc
jl
pop
shl
test
in
ret
pop
jbe
sbb
xchg
jae
push
mov
stc
rclb
sub
into
dec
mov
enter
mov
mov
mov
jno
add
lahf
xchg
mov
push
sub
cmp
test
sbb
mov
sbb
aam
sub
and
test
inc
out
fnstenv
push
sahf
or
adc
clc
sbb
clc
pminub
mov
mov
outsb
xchg
mov
cmc
add
in
shl
lods
push
insb
adc
int3
pop
or
and
mov
movl
mov
das
push
rolb
xor
add
dec
cltd
push
es
subb
inc
mov
mov
sti
in
test
test
call
fdivrs
add
mov
or
xchg
enter
add
adc
pop
sub
std
mov
leave
add
fcompl
dec
movsl
mov
mov
ss
push
movsb
sahf
mov
clc
imul
cltd
pop
fimuls
mov
lcall
fbstp
pop
popf
leave
lret
push
cmp
jo
push
dec
sbb
or
inc
clc
xchg
dec
push
imul
scas
push
pop
sbb
negb
jmp
adc
adc
jp
adc
jp
divl
or
pop
or
add
add
daa
sbb
inc
aaa
adc
inc
sub
adcl
stc
add
dec
lds
icebp
xchg
xor
mov
mov
outsb
ss
ja
push
push
push
mov
ficompl
inc
movsl
std
cmp
lret
pop
push
inc
in
scas
sbb
fcomps
pop
movsl
inc
mov
push
adc
mov
adc
add
add
cld
pop
lahf
pop
push
aad
cld
outsb
inc
rclb
in
stos
ret
sub
xor
xchg
imul
mov
xchg
pushf
into
jmp
stc
jnp
out
xchg
and
mov
shll
adc
mov
mov
addl
and
push
inc
loopne
mov
popa
lock
roll
rorb
gs
ret
mov
je
jecxz
inc
inc
shr
cmp
sbb
out
xor
mov
xor
aaa
cmp
inc
pop
lea
add
cmp
fs
mov
mov
ds
xor
push
and
xor
stos
loope
fstl
xlat
sbb
test
push
mov
sub
mov
jb
inc
rol
rorb
push
hlt
mov
rcrl
xor
mov
enter
push
push
push
rclb
sub
sub
ja
push
les
jmp
xchg
int3
hlt
outsl
pop
dec
subl
dec
mov
xlat
mov
sbb
fldcw
inc
dec
and
mov
inc
addb
int
xchg
dec
scas
lret
add
mov
sbb
push
xchg
hlt
popa
clc
shrl
stc
jae
adc
dec
lcall
stc
bnd
xlat
push
mov
push
imul
push
and
out
add
dec
neg
jb
inc
subl
cltd
jb
data16
fs
mov
mov
or
ss
push
ret
fldlg2
cld
push
pop
pop
sub
inc
fst
cmp
cmp
add
jl
rol
nop
aad
push
or
jne
repz
mov
in
pop
fcomi
mov
dec
mov
pop
dec
mov
aas
push
or
test
pop
or
pusha
stos
aad
jne
add
cwtl
xchg
lret
hlt
xchg
dec
fwait
jg
fcomip
subb
cmp
icebp
dec
push
repz
stos
mov
rep
andl
hlt
mov
ret
js
js
push
xor
and
arpl
mov
mov
sbb
lret
aad
mov
ds
cmpsl
insb
or
jmp
ret
popf
dec
mov
out
sbb
push
sub
mov
repz
shll
ror
and
faddl
out
cmpsl
jg
jb
inc
aad
adc
push
ret
pop
pop
push
daa
inc
pop
or
xor
sbb
in
jb
pop
sbb
lock
inc
adc
jg
jnp
add
pop
test
mov
sub
mov
jmp
sub
sahf
in
mov
dec
jl
inc
outsl
movsb
add
cmp
or
add
icebp
aam
inc
push
and
cmpsb
cld
jno
roll
dec
in
jnp
adc
mov
and
mov
sarb
inc
scas
mov
testl
les
xchg
mov
mov
jl
add
jb
imul
push
push
or
jl
jecxz
jnp
enter
lahf
jnp
mov
ja
xchg
mov
push
cmc
ds
les
push
aas
test
andl
sarl
xchg
andl
mov
sub
xchg
add
lahf
popl
pop
mov
xchg
iret
popf
iret
out
or
sub
sub
je
roll
lods
outsb
stos
xchg
cmp
in
adc
jmp
sub
pop
scas
ret
loopne
inc
mov
clc
sti
jno
lret
push
shll
lods
pop
push
cmp
xor
sti
sub
add
scas
mov
shrb
imul
out
jge
add
mov
in
lds
pop
add
jmp
movsl
mov
pop
test
lret
cmp
mov
dec
add
cld
test
dec
leave
lods
or
ds
outsb
push
mov
fistl
lds
test
popf
pop
adc
add
lock
cwtl
xchg
mov
xchg
and
repnz
andl
paddq
mov
ljmp
data16
jl
sbb
cmpsb
ret
or
inc
inc
rorb
ss
imul
shll
stos
fs
cltd
out
nop
in
mov
inc
jle
insb
dec
mov
mov
dec
lods
push
sub
fisubrs
daa
jmp
push
cs
mov
cmpsb
pop
repz
je
test
add
xor
add
mov
shrb
test
scas
mov
stc
int3
outsb
leave
sbb
sub
adc
lds
sub
lds
add
mov
and
sbb
in
gs
mov
xor
dec
inc
imul
sbb
jp
mov
jns
int3
lret
and
in
add
test
frstor
js
dec
cmp
push
mov
sbb
or
inc
fwait
sbb
repz
por
and
js
sbb
out
in
rcl
jno
and
push
and
xchg
pop
js
inc
outsb
test
mov
sahf
jnp
outsl
outsb
add
filds
cmp
jecxz
fbstp
sbb
out
mov
inc
mov
lret
test
xor
repz
test
je
xor
ret
fsubrl
jg
enter
xchg
hlt
cmpsb
out
orb
xor
lock
or
sub
std
cmp
sbb
scas
fsub
leave
aaa
fiadds
mov
and
mov
inc
sub
mov
scas
pop
xchg
pusha
jmp
sbb
pop
jns
pop
sub
addb
imul
adc
mov
shr
mov
inc
lcall
idiv
loope
jecxz
mov
lds
in
insb
jp
mov
jecxz
pop
sti
in
adc
xlat
or
push
xor
dec
and
xchg
and
mov
rcll
sub
add
pop
or
push
inc
test
sbb
cmpl
sub
adc
jo
js
sub
test
and
mov
fsubr
xor
sahf
shll
sub
nop
in
jo
addr16
push
xchg
lods
adc
out
sti
mov
jecxz
andl
mov
bound
rolb
adc
jne
rcl
xchg
int3
cwtl
lret
and
pop
pop
and
push
dec
push
test
push
mov
and
ret
pop
outsb
pusha
inc
sbb
cmc
mov
mov
dec
adc
xchg
cs
xchg
fldcw
push
addb
mov
pop
stos
ja
ret
and
inc
push
xchg
rolb
mov
mov
test
pushf
test
mov
popf
jg
ret
lock
sti
test
fcmovne
add
bound
fcoms
inc
inc
movsl
gs
xchg
jno
jle
test
push
movsb
jmp
mov
mov
aad
sbb
xchg
ficoms
and
shl
push
and
cmpxchg
inc
sub
push
dec
int3
lods
mov
popf
je
mov
out
sub
mov
pop
jne
pop
mov
aad
leave
stos
push
scas
mov
dec
lahf
in
pushf
add
cmp
and
cwtl
mov
outsb
mov
lods
adc
lahf
push
cmp
lret
movsl
mov
scas
sti
xor
lret
or
or
test
outsl
mov
pop
pop
sbb
lods
mov
jmp
mov
aad
xor
pop
mov
aas
mov
in
stos
mov
call
push
lods
lock
es
push
aad
and
shl
inc
ljmp
or
mov
andl
cli
pop
ds
jno
out
cwtl
shll
push
sub
pop
push
lret
sbb
mov
ja
dec
pusha
sbb
mov
fwait
lea
or
test
dec
inc
les
xchg
jle
xor
into
jmp
lret
dec
lods
insl
fwait
xchg
mov
cmpsl
fwait
repz
mov
sti
mov
mov
and
sahf
outsl
xchg
jmp
sahf
add
jg
pop
push
ds
and
jnp
cmpsb
add
scas
xor
push
xor
sti
adc
add
test
lret
ffreep
pop
cmp
repnz
aad
xor
les
imull
sub
insl
and
idivb
iret
ja
xchg
jns
int3
lret
mulb
inc
xchg
out
sub
jp
mov
sub
xchg
inc
mov
pop
fiadds
loope
mov
test
xlat
mov
mov
popl
sbbb
adc
in
add
imul
fstps
enter
jmp
xor
clc
scas
rorb
lods
pop
fsts
jp
jns
xchg
ljmp
sbb
mov
or
icebp
push
imul
or
mov
inc
cmp
jo
arpl
add
mov
repnz
xor
jecxz
clc
test
sbb
dec
push
or
mov
cmpsl
mov
aam
fbstp
mov
stos
clc
add
shrl
fstpl
dec
bound
mov
mov
icebp
mov
test
push
loop
aaa
sub
lcall
aam
mov
lahf
arpl
lcall
push
lock
and
das
mov
add
fmuls
rorb
pop
lea
mov
mov
jne
xor
pop
movsl
mov
xchg
mov
pop
inc
cmp
jae
insl
dec
add
adc
cmp
or
icebp
sub
xchg
xor
pop
mov
or
sub
mov
mov
jmp
add
pusha
push
xchg
mov
stos
sahf
inc
dec
call
pop
add
jnp
mov
in
fstps
add
leave
inc
jg
fadd
mov
call
pop
push
leave
push
add
imul
mov
lcall
test
mov
jl
sbb
inc
test
mov
xchg
fisttpl
outsb
add
or
cmpsl
push
cmc
adc
xchg
push
mov
ret
cmp
arpl
sub
fsts
xchg
inc
add
cmp
adc
push
inc
add
mov
cmp
in
jno
sub
xchg
mov
pushf
mov
xor
pop
movsb
sti
imul
push
mov
sbb
xor
les
out
push
hlt
cmp
hlt
clc
mov
fsts
in
xchg
push
fildll
sti
push
test
mov
inc
cmp
ds
pop
cltd
push
mov
enter
cwtl
ret
mov
sbb
leave
sbbb
nop
loope
popf
pop
fs
xor
stos
dec
dec
lret
arpl
xor
test
push
push
pushf
out
inc
mov
cli
sub
fs
push
adc
mov
in
jl
rcll
lret
add
mov
cmc
test
mov
sub
jbe
fucomi
in
stos
jge
inc
fbld
test
ret
cmpsl
repz
add
inc
xor
sbb
add
aam
fwait
iret
cwtl
inc
movsl
fnstcw
ret
xor
ret
fwait
lcall
inc
sbbl
pop
sbb
jae
divl
frstpm(287
push
shl
pop
xchg
or
push
inc
or
xor
dec
inc
mov
cmpb
lret
mov
hlt
les
mov
mov
test
adcl
mov
imul
add
and
push
push
nop
push
outsb
dec
add
fildl
mov
gs
or
lods
push
mov
hlt
mov
sahf
sub
or
mov
sub
add
mov
fucomp
fs
movsl
outsb
pusha
dec
call
cld
or
in
xchg
sbb
jo
mov
scas
mull
cmp
adc
push
jnp
mov
pusha
cmp
outsb
out
cld
andl
outsl
inc
fwait
out
push
inc
mov
pusha
add
xchg
loope
popa
pushf
push
push
sub
imull
and
pop
loop
mov
mov
pop
push
push
mov
inc
sbb
es
jmp
adc
add
and
dec
mov
xor
jb
jo
or
cmpsb
ficoms
inc
adcb
inc
adc
lcall
andl
fists
sti
aas
psubusb
hlt
xor
cltd
mov
jbe
add
and
adc
mov
leave
mov
mov
pushf
ret
mov
mov
test
mov
das
ljmp
mov
movsb
les
jo
sub
das
sbb
sbb
jbe
pop
push
mov
jns
inc
pop
mov
in
roll
lahf
mov
leave
in
stos
jg
pop
fsubr
icebp
xor
sub
jl
mov
sbb
neg
inc
pop
dec
mov
je
mov
adc
movsb
cli
jg
inc
outsb
lahf
inc
repz
and
jl
daa
ret
fld1
mov
add
popa
gs
out
outsl
pop
hlt
mov
xchg
mov
and
mov
pop
add
adc
push
test
xor
bound
pop
mov
inc
imul
mov
sahf
add
dec
sbb
call
mov
cld
test
sbb
fsubrl
int
inc
sub
cmp
push
vandnps
sbb
and
stos
mov
in
jae
das
sbb
xor
or
mov
pushf
das
sub
addr16
lods
stos
mov
std
call
xchg
fstpt
and
inc
mov
jmp
cltd
lret
mov
xchg
and
popa
or
jl
aas
jo
dec
ror
xchg
xchg
out
test
mov
gs
je
or
jo
movsb
inc
add
mov
xchg
jle
clc
rcrb
cmp
stos
leave
gs
mov
xchg
or
xchg
enter
je
or
int
repnz
sahf
jecxz
mov
sub
js
je
stos
rcr
pop
pop
adc
addr16
lret
loope
fstl
addb
push
ret
hlt
mov
imulb
cltd
push
xor
sti
xchg
mov
mov
hlt
test
fsubrp
les
fs
clc
stos
in
jnp
mov
or
and
sub
mov
shrl
jae
add
sbb
popa
add
pop
add
fsubrs
sbb
push
fwait
pop
and
cmpsl
push
sub
mov
push
inc
push
lods
pop
cmp
sti
add
cli
jo
dec
cwtl
js
fisttpl
add
adc
pop
repnz
add
sbb
outsb
mov
lods
iret
aam
pop
inc
lock
lret
aad
lahf
stos
dec
xor
scas
fistpll
bound
pop
add
push
sbb
mov
aaa
pop
mov
stc
hlt
outsl
fcomps
dec
aas
shrb
mov
popf
icebp
adc
push
sahf
sub
jp
je
mov
imul
jg
repnz
fwait
mov
jecxz
les
cld
into
lret
mov
cld
nop
jbe
ret
push
sbb
sbb
addr16
rcrb
mov
int3
jnp
dec
dec
lret
mov
lret
xchg
lret
sbb
in
out
test
movsl
daa
add
and
fisubrl
addb
lcall
popf
sbb
sbb
rclb
rorb
cmpsb
test
sub
xchg
leave
lret
pop
test
nop
inc
push
scas
inc
cld
repnz
movsb
test
mov
push
nop
cmp
inc
inc
sbb
std
and
or
sub
lock
mov
pop
int3
mov
sahf
xchg
sti
jecxz
pop
ret
mov
rcll
or
vmovaps
sbb
push
fsubs
dec
mov
xorl
xor
or
jb
rolb
jecxz
ja
mov
adc
repz
jae
pop
mov
cmp
stos
push
test
cltd
jg
lahf
in
clc
add
mov
push
ljmp
sbb
add
jno
adc
clc
daa
cwtl
lret
inc
sbb
xorb
ss
sub
mov
sub
int
les
dec
dec
jnp
push
fs
xchg
dec
mov
add
mov
or
shll
clc
frstor
push
sub
pop
push
mov
jmp
fsts
jmp
jg
mull
push
cmpsl
add
or
fisubs
dec
dec
imul
or
add
pop
mov
jle
shrl
push
test
ret
nop
js
xchg
sbb
dec
pop
xor
in
rcr
iret
cmpsb
inc
shll
jle
and
cmpsb
jnp
add
sub
imul
sahf
mov
sub
dec
mov
lahf
inc
adc
add
push
xor
cmpl
xor
pop
sbb
mov
nop
cld
lds
leave
clc
pusha
xchg
cmpb
xchg
leave
fsubl
sbbl
mov
pop
test
call
mov
scas
mov
testl
shll
fldl
mov
and
pop
or
xor
stos
cmp
dec
sub
fnsave
add
imul
lea
jle
cs
jmp
popf
scas
jg
icebp
add
inc
fdivrl
add
xor
add
mov
fwait
push
pop
fistl
add
imul
js
jp
mov
xor
inc
and
cmp
sbb
outsl
mov
das
and
aad
mov
ss
das
in
aam
mov
ret
loopne
sub
pop
or
mov
mov
lahf
lret
in
mov
or
mov
lock
mov
mov
dec
hlt
imul
out
pushf
les
push
xchg
cmp
jne
xchg
sbb
xchg
push
xlat
and
xor
ds
in
fbstp
hlt
push
xor
addb
push
fwait
push
pop
test
call
fiaddl
test
mov
and
in
mov
stos
push
sbb
pop
jmp
sbb
outsb
and
xlat
pop
shlb
or
dec
add
in
rcr
mov
adc
xor
fldenv
xchg
repz
sbb
pop
mov
outsl
dec
out
cltd
cwtl
enter
jo
sub
daa
push
hlt
sbb
sub
or
push
inc
int
jb
jecxz
stos
mov
bound
push
adc
pop
movsb
xchg
pop
insb
jno
mov
ret
call
rcll
popl
cmpsl
rorl
imul
sbb
fcoml
out
dec
movsl
mov
idivb
sbb
add
sub
pop
push
pop
mov
adc
mov
sahf
das
fiadds
fcoms
mov
push
and
cmp
mov
xchg
add
loop
sub
pop
xchg
fisttpl
cltd
lods
jno
aaa
pusha
push
dec
xchg
push
lcall
insl
js
xchg
loope
xchg
loope
and
fbld
mov
mov
adc
push
cmp
or
scas
jle
fidivrl
sub
les
sbb
imul
ret
fnstenv
inc
test
sub
sbb
push
inc
pop
pop
lcall
clc
popf
jbe
dec
adc
push
adc
push
inc
sbb
sub
xor
fnstsw
bound
xchg
dec
shr
movsl
inc
arpl
in
and
push
jo
cwtl
pop
lret
std
je
and
xchg
and
push
mov
cltd
xor
iret
cli
cmp
dec
adc
iret
je
dec
inc
imul
pop
jb
cmpsb
rorb
sbb
and
scas
mov
add
rorl
xchg
xchg
imul
pop
cmc
insb
or
pop
xor
shll
push
es
outsl
sub
js
or
and
mov
mov
sub
or
scas
inc
dec
or
mov
or
fmuls
cmp
andb
je
cmpsb
orb
movsb
inc
inc
mov
inc
pop
fidivrl
mov
lret
mov
and
xor
mov
jb
pushf
jmp
push
adc
push
cwtl
cmpsb
addr16
shlb
sub
jbe
lea
xor
mov
fsubrl
cmp
sti
cmp
dec
lahf
in
nop
add
pop
pusha
lret
dec
add
xor
jg
and
iret
push
mov
nop
and
adc
mov
imulb
shl
iret
sbb
loop
pop
fucom
stc
push
pop
into
mov
sbb
test
inc
cmp
leave
stos
jne
dec
xchg
dec
mov
jae
cmp
lds
scas
jnp
test
in
aad
mov
enter
cmpsb
ffreep
enter
mov
test
ja
and
es
push
dec
push
sub
dec
popa
xchg
cli
scas
dec
fdivr
mov
aam
ret
subl
aad
mov
and
mov
mov
cwtl
aas
fld
ror
inc
mov
rcrb
les
mov
test
adc
push
add
mov
int
aaa
mov
and
dec
cmpl
push
sbbb
jbe
scas
xor
out
pop
cli
add
mov
pushf
and
es
stos
adc
adcl
push
hlt
stos
lret
subl
mov
mov
fwait
push
and
rorb
lods
iret
enter
fwait
shll
les
adc
arpl
pop
dec
ja
add
jmp
inc
and
imul
push
xor
imul
adc
arpl
aad
xor
fcoml
push
mov
or
rcr
loope
or
xor
xchg
dec
movsl
ret
sub
inc
mov
jle
inc
pop
mov
cmp
movb
mov
mov
addr16
enter
enter
stc
jb
aad
ret
fsubrs
jge
dec
mov
mov
fbld
dec
loopne
and
and
pop
and
or
neg
test
mov
pop
les
sbb
add
call
cmpsb
xchg
fisubl
sbb
sub
and
dec
sub
imul
sbb
in
imul
jae
lret
insb
add
ret
sub
fwait
shll
inc
pop
test
dec
aam
mov
mov
xor
pushf
pop
test
add
mov
xor
mov
push
hlt
arpl
loope
dec
push
mov
inc
adc
out
add
inc
cmpsl
gs
mov
dec
rclb
loopne
movsl
ret
stos
daa
enter
fisubs
push
dec
mov
jb
mov
lret
fs
movl
add
jns
jno
aaa
in
lea
sub
shrl
adc
jge
jbe
out
ljmp
fwait
iret
orb
pusha
sub
ja
lds
pusha
rcrb
mov
sbb
dec
mov
ret
inc
scas
mov
hlt
mov
push
test
cmp
fwait
mov
or
cltd
clc
testb
jmp
cmp
lret
dec
test
xor
cwtl
mov
pop
mov
pop
sub
arpl
fsts
and
pushf
xchg
lret
in
cwtl
daa
or
and
pushw
enter
adc
xorl
sbb
add
cld
xor
mov
dec
rcrl
mov
ret
sbb
loopne
sbb
fidivl
push
outsb
xchg
push
mov
je
pop
rcr
adc
ret
call
add
xor
hlt
clc
in
cs
hlt
sub
add
fistl
imul
imul
pop
idiv
cmp
sub
add
cld
scas
jo
or
or
lds
sbb
mov
mov
dec
sbb
or
dec
sahf
jp
inc
fsubrl
mov
fisttpll
mov
jge
jno
test
cmp
xor
stos
jge
lcall
jbe
mov
push
negb
data16
icebp
dec
es
icebp
push
cmp
xchg
rcr
cmc
out
or
sti
test
adc
push
adc
mov
mov
cli
xchg
mov
outsb
lahf
imul
ja
push
aam
fdivrl
adc
add
sub
jno
jg
and
jg
and
pop
mov
push
inc
push
xchg
movsb
jae
cmc
dec
pop
int
call
push
and
add
pop
fucomip
repz
mov
pop
loopne
mov
cmc
mov
sbb
or
ret
push
pop
cwtl
xor
lods
icebp
loop
loop
xor
aad
mov
mov
lock
shrb
cmp
stos
cmpsl
rol
lret
sub
xchg
mov
push
js
idivb
out
push
cmp
xchg
fistl
std
outsl
es
jb
xor
xchg
ja
sub
jmp
add
or
mov
xchg
adc
cmpl
xor
pushl
rclb
dec
xchg
and
repnz
xor
imul
add
sbb
sub
movsl
xchg
mov
loopne
jg
imul
loopne
hlt
cmc
sub
sbb
xchg
fdivrs
mov
cmp
inc
inc
xor
pop
ret
arpl
fnstcw
aas
movsl
jns
push
mov
cmpsl
icebp
std
jne
xorl
lock
sub
xlat
inc
pop
mov
mov
add
dec
lahf
sbb
dec
hlt
xchg
mov
mov
mov
js
repnz
flds
dec
jo
jbe
add
fldt
lock
xchg
stos
adcl
test
mov
cli
jg
sub
jne
test
lods
lods
xchg
arpl
push
mov
add
int3
repnz
scas
leave
test
shll
jg
shll
xchg
sub
mov
fisubrs
insl
and
add
movsb
xchg
jnp
inc
mov
int
cmp
sbb
fmul
loope
fs
push
xchg
sbb
jecxz
rolb
mov
and
out
xor
mov
or
mov
jbe
jmp
sub
mov
cmp
repnz
jge
mov
call
int3
std
cmp
cld
mov
das
pop
cmc
mov
or
mov
loopnew
ret
dec
xchg
leave
dec
fwait
jle
push
push
jecxz
xor
lds
jnp
mov
fldt
out
popf
push
dec
scas
mov
and
loope
les
inc
stos
loope
pop
mov
lds
dec
dec
out
scas
lods
shrb
int3
lods
pop
dec
popf
shll
fs
push
mov
jge
inc
sti
out
cmp
sub
xchg
aam
sbb
mov
outsl
neg
inc
inc
cmp
push
inc
push
mov
mov
mov
mov
jae
cmpsb
jo
cmpsb
dec
movsl
mov
xor
or
enter
movl
dec
xchg
test
cmp
mov
push
add
dec
out
sbb
pop
pop
aas
xchg
sbb
mov
ret
imul
xchg
in
xor
pop
lret
jne
dec
fmul
lds
jg
adc
or
mov
movsb
imul
nop
adc
arpl
inc
mov
jg
es
and
push
lret
push
leave
pop
xchg
jl
jg
xlat
push
xchg
into
add
scas
jne
not
outsb
gs
xor
mov
mov
xor
adc
jge
lahf
cltd
xchg
fs
xor
mov
adc
push
xchg
cmp
or
xchg
inc
in
xor
mov
stc
push
dec
testl
xlat
xchg
mov
int
sbb
push
pop
fs
mov
test
and
mov
mov
dec
xchg
aaa
sub
addl
xor
aam
mov
dec
mov
pop
sbb
je
jge
pop
iret
lods
xchg
cld
xor
jns
inc
ret
mov
cmp
subb
sbb
inc
jb
in
inc
test
lret
or
adc
push
cmpsl
mov
add
fisttps
xlat
orb
lcall
repnz
mov
or
or
adc
fisttps
mov
mov
mov
movsb
jg
test
add
loope
sub
jg
jns
std
rol
into
je
sbb
test
ret
xchg
jge
pop
aad
pop
adc
shrb
adc
dec
mov
lcall
test
adc
aam
cli
xor
mov
cmp
mov
arpl
or
lea
nop
das
xchg
enter
popa
push
or
push
cmpsb
jns
fldpi
mov
repnz
ja
push
ja
mov
call
pop
mov
imul
test
sub
inc
iret
lcall
cmpsl
cltd
pop
sub
inc
mov
add
fld
xchg
xor
imul
push
pop
push
add
or
add
dec
pop
add
and
xorl
add
repnz
ret
stos
sub
and
mov
mov
inc
push
aam
xor
xchg
cmp
test
ret
adc
mov
test
add
mov
inc
rcll
add
rcrb
sbb
xor
pop
test
lret
pop
inc
cwtl
xchg
iret
fwait
je
fwait
cmp
or
push
stos
loop
pop
push
es
lea
cltd
enter
mov
in
sub
ret
out
shrl
pop
cmpsb
push
outsl
mov
push
pop
es
movsl
jbe,pn
pop
movsl
aad
aad
jb
pop
and
jle
pop
movsb
push
push
push
jp
pop
and
shl
push
inc
pop
push
mov
inc
sbb
add
mov
dec
sbb
push
bound
mov
push
adc
inc
pop
pop
adc
push
fidivs
pop
adc
pop
repnz
es
dec
scas
rclb
fdivr
lcall
xor
push
outsl
iret
mov
dec
xor
iret
lret
int
ja
cmp
sbb
adc
and
idiv
stos
cmc
jno
inc
mov
sarl
jge
sub
iret
std
add
mov
xchg
push
xchg
rcrl
call
iret
xchg
pop
rcrl
aad
cmpsl
ret
or
jo
fwait
inc
js
aad
gs
in
pop
mov
push
mov
repz
icebp
cs
cmp
mov
lret
sub
dec
pop
mov
test
pop
aaa
xchg
sub
pop
mov
push
stos
cmp
out
sti
mov
jecxz
hlt
push
mov
mov
ss
mov
sbbb
sbb
xlat
stos
aad
test
mov
xchg
mov
int
ljmp
popf
lret
test
ja
jae
or
stos
inc
adcl
add
xchg
stos
out
push
adc
inc
push
xchg
inc
inc
fdivrl
outsl
fs
es
and
lcall
lds
or
mov
mov
adc
and
lods
test
testl
xchg
or
cmp
jnp
fdiv
push
mov
inc
mov
movsb
jns
imul
or
ret
pop
xlat
mov
shrb
mov
mov
jp
mov
hlt
jl
mov
enter
in
push
and
mov
rclb
rorl
sub
cwtl
es
push
stos
mov
sbb
jp
movsb
fsts
jecxz
daa
shrl
xor
push
xor
scas
addr16
push
lds
mov
adc
nop
or
lret
lea
mov
rcrb
xchg
xchg
int3
pop
cmpsl
sbb
mov
add
xchg
popf
icebp
add
lea
push
scas
adc
ret
cmpl
rcrb
call
rorl
push
sbb
je
pop
adc
lds
xchg
or
mov
mov
cmp
jnp
mov
test
or
pop
sub
jmp
add
in
pop
mov
daa
in
mov
xrelease
lahf
les
into
cld
je
pop
mov
cmp
pop
mov
lea
adc
clc
sti
and
pop
push
sbb
push
cld
cs
lds
stc
jmp
or
sub
das
dec
les
adc
push
sub
flds
repnz
cmp
fsubrl
pop
inc
cwtl
imul
sub
or
rorb
sub
push
movsb
fisubrl
rcll
adc
dec
mov
mov
lock
sub
or
xchg
pushf
mov
test
adc
push
adc
js
js
imul
insb
test
test
and
dec
out
daa
mov
xchg
mov
gs
aad
movsb
inc
sbb
cmp
in
push
roll
jge
mov
sub
dec
mov
mov
xchg
add
test
inc
pop
push
movsb
repz
dec
pop
call
cli
mov
iret
jo
push
loope
add
cmpsb
out
lahf
lret
xor
hlt
pop
loope
or
adc
ss
mov
fadd
xor
push
mov
das
lret
clc
mov
adc
sub
outsl
pop
dec
push
jns
divl
stos
cmp
xor
xchg
loopne
pushf
rcrl
inc
ja
in
push
xchg
lcall
inc
inc
pop
pop
pop
icebp
subb
xchg
sti
add
jmp
mov
pop
sbbb
icebp
cmp
mov
flds
add
or
in
rcr
sub
aad
insl
loope
dec
xor
ret
in
jl
frstor
xlat
nop
out
fld
fucomip
ljmp
mov
mov
je
jnp
push
mov
jnp
aas
iret
mov
dec
jle
adc
scas
xchg
lea
dec
mov
jg
scas
add
sarl
xor
lds
enter
das
lret
jecxz
jge
int3
imul
mov
das
inc
les
mov
and
xchg
and
sbb
mov
mov
jne
pop
scas
mov
dec
jp
pop
lods
mov
aaa
jns
xor
xchg
test
fcomps
sti
push
scas
xchg
out
add
or
mov
fwait
subl
lods
jle
out
jecxz
fwait
pusha
lahf
imul
mov
mov
xchg
bound
and
or
nop
pop
add
inc
pop
js
mov
test
rcr
mov
push
and
popf
mov
mov
mov
sbb
imul
mov
fwait
lea
xchg
jae
in
mov
stos
push
dec
loop
jecxz
fdivs
in
mov
outsl
mov
sti
dec
sahf
gs
cld
mov
test
outsb
dec
lea
and
sub
jmp
push
adc
fists
dec
fwait
es
add
cmp
jb
sbb
cmp
sahf
dec
add
and
sbb
push
push
test
mov
aam
ss
pop
pop
fsubr
mov
xor
inc
pop
xchg
arpl
ljmp
inc
sub
sub
movsl
and
lods
mov
mov
push
xchg
jnp
jnp
cmpsl
push
push
imul
xrelease
loop
ret
test
jo
arpl
push
popl
add
sbb
cmpb
cmpsb
aad
addr16
inc
sbb
popl
mov
jne
lcall
into
loop
test
out
sub
mov
or
loope
imul
jne
pop
xchg
stos
ret
shll
dec
inc
negb
psubsw
lds
in
mov
lret
repnz
pop
pop
mov
add
and
xchg
mov
pop
cwtl
lret
pop
mov
pop
in
push
in
xchg
js
cwtl
push
sbb
mov
xor
push
les
sarl
ret
sbb
adc
push
aam
dec
aas
xor
stos
add
mov
mov
mov
icebp
shrb
xchg
out
fildll
pusha
mov
call
ffreep
fninit
ror
mov
add
inc
out
sub
inc
shll
inc
cwtl
dec
test
movsb
leave
mov
jmp
dec
cltd
or
mov
inc
mov
and
push
jg
xchg
push
xor
aas
cmp
and
test
or
enter
js
xor
push
cmpsl
fwait
js
sahf
imul
jo
cmp
dec
inc
push
push
cmp
cmp
pop
arpl
sbb
sbb
sbb
cmpl
add
insb
repz
test
add
mov
aad
imul
pop
int
add
jae
cld
dec
imul
sarl
ret
lahf
xchg
stc
int
push
addb
mov
fdivrs
movsl
and
sub
inc
mov
mov
aam
cltd
lods
mov
stos
insl
arpl
lods
out
int3
sub
loop
lret
lods
arpl
pop
xchg
fcomi
sbb
add
inc
pop
pushf
lcall
xor
test
or
dec
fnstenv
sbb
and
testb
movsb
cmp
mov
aaa
sbb
jae
push
add
dec
cltd
jecxz
inc
cmp
mov
sub
fstpt
addl
mov
cs
inc
mov
shlb
lods
cmp
out
sti
mov
jecxz
add
in
enter
or
jo
iret
cmpsl
ret
dec
or
pushf
dec
fisttpll
lret
shr
pop
loopne
imul
sub
add
lods
mov
inc
in
mov
movsl
xor
iret
stos
or
dec
aas
xor
and
dec
movsl
test
lock
dec
jecxz
insl
lock
pop
cmp
push
mov
js
mov
cmc
and
sub
andl
add
dec
xchg
mov
mov
add
fwait
cmp
sti
in
cld
sbb
lahf
imul
pop
cmp
clc
mul
xchg
sub
enter
aam
stc
scas
shr
stos
push
outsb
imul
xacquire
pushf
dec
loope
sbb
and
loopne
cltd
test
fucomip
in
lcall
lret
jnp
cmpsb
loopne
xchg
jb
mov
mov
sar
adc
xchg
and
adc
test
popa
out
inc
mov
call
js
cwtl
push
adc
pop
call
lret
inc
xchg
cwtl
dec
mov
outsb
sbb
bound
popf
inc
scas
xchg
fimull
xor
mov
pop
fucomi
adc
mov
inc
inc
shlb
jp
sub
outsb
mov
xchg
loop
inc
xchg
mov
dec
mov
add
push
popl
or
dec
mov
fstl
imul
loop
jge
jp
inc
push
mov
or
adcb
jne
scas
sub
int3
pop
mov
sub
rep
scas
or
inc
cmp
mov
dec
jnp
mov
or
dec
or
mov
cmp
cmp
imul
mov
scas
call
add
or
sub
push
test
iret
dec
test
imul
sub
push
lea
push
xchg
and
mov
test
sbb
mov
cli
sti
and
addr16
lret
xor
inc
sub
mov
jmp
lods
movb
cli
loop
mov
inc
sbb
sub
loopne
sbb
clc
mov
ror
mov
xchg
and
repnz
lcall
and
sbb
dec
pop
adc
adc
in
pop
xor
mov
lret
lahf
pop
aas
xchg
lds
fwait
dec
jo
sbb
add
xor
pop
sub
sbb
push
mov
movsb
push
mov
mov
mov
in
loop,pt
cld
in
icebp
mov
push
imul
jae
pop
or
clc
sti
pop
mov
lret
test
mov
pushf
push
mov
lock
sub
sbb
and
adc
mov
test
scas
lock
in
and
add
sub
les
sahf
fstl
and
xchg
sub
pop
mov
stos
nop
sarl
lret
add
dec
lret
dec
stos
xchg
fistl
push
lods
sahf
int
js
mov
push
pusha
jp
cmp
push
push
cmc
hlt
lds
jp
in
ja
js
or
add
scas
bound
mov
mov
add
add
imul
dec
xchg
lock
sub
mov
and
test
repnz
jnp
repz
loop
jne
fcmovne
mov
jno
xchg
xchg
jo
xor
push
mov
mov
shlb
mov
addr16
mov
pop
aas
push
sarb
pop
mov
sti
xor
jl
ret
std
inc
insl
adc
mov
mov
mov
outsl
add
testl
cmpsb
shrl
out
sbb
xchg
mov
lcall
push
dec
loope
mov
daa
mov
cmp
cmp
dec
mov
cmp
in
leave
push
cltd
lods
mov
adc
mov
repz
inc
fwait
out
mov
xor
adc
mov
jne
out
pop
jb
fisubrl
sub
add
push
mulb
pop
test
jge
push
xchg
sbb
jb
pop
cltd
and
pop
sub
out
cmp
mov
mov
inc
rcll
shrb
cmp
mov
test
cs
mov
iret
push
sbbb
add
adc
adc
adc
inc
sub
sub
adc
push
ret
mov
adc
les
enter
inc
jo
pop
and
pop
stos
xchg
imul
inc
ljmp
mov
repz
adc
pop
mov
and
dec
cmp
mov
inc
mov
faddl
xchg
negl
pusha
mov
test
jae
icebp
jmp
insl
pop
or
movb
popl
and
andb
leave
push
movsl
ret
inc
sub
scas
push
xchg
xchg
cmpsl
jbe
out
clc
pop
das
xor
cltd
enter
mov
pop
pop
and
cltd
mov
mov
sub
jmp
mov
movsl
jae
int
jg
and
int
fcmovbe
add
imul
sub
cmp
iret
mov
mov
nop
mov
add
movsb
lret
cmpsl
pop
cmpsl
push
leave
mov
pushf
inc
rcrb
fisttps
add
mov
dec
adc
mov
pop
lcall
test
mov
inc
push
ljmp
xor
mov
movsl
rcll
cmp
movsl
lock
lods
pop
cmpsl
xchg
aam
cltd
lods
inc
roll
jg
movl
mov
mov
add
addl
mov
xchg
mov
dec
xchg
and
sbb
sub
je
addl
es
pop
jns
xchg
sub
cltd
cmpsl
sti
pop
sarl
push
inc
fisubs
mov
adc
cmp
sbb
cwtl
ficoms
or
push
jnp
movsb
jns
test
or
or
stos
pushl
push
cmc
sbb
pop
push
push
ret
cmpsl
repz
xor
xchg
push
mov
repnz
pop
push
mov
repz
insl
xchg
lcall
cld
mov
or
cmp
pushf
sub
mov
cwtl
push
mov
sbb
jae
pop
sub
fsubrs
nop
mov
dec
in
inc
iret
xchg
pop
lock
lret
or
arpl
test
xor
jbe,pt
lods
sub
lods
hlt
popa
das
jle
lahf
xchg
jl
in
lea
cmp
or
inc
sbb
orb
cmp
jns
sbb
adc
scas
sbbl
lods
push
sahf
lds
scas
enter
movsb
inc
jns
jb
outsb
or
jnp
data16
jge
add
out
cmpsl
insb
cmc
sub
push
adc
arpl
sbb
mov
fistpll
les
mov
loop
dec
aas
pop
xlat
jmp
jl
stos
cmp
lahf
lret
sbb
xchg
es
jo
sti
addl
or
add
les
sbb
rcrb
hlt
stos
repnz
push
test
arpl
repnz
negl
sti
jg
push
cltd
inc
cli
test
mov
sbb
xchg
stos
jge
call
fwait
jge
sbb
cli
pop
xchg
arpl
jbe
lahf
jp
sub
sbb
popf
scas
rol
out
xchg
add
cmpl
mov
xchg
and
fmuls
xchg
movsl
inc
mov
cltd
xor
jp
mov
cmp
mov
into
pop
mov
test
cmp
bound
pop
sub
sbb
lock
daa
or
cwtl
pop
nop
xor
ja
or
dec
mov
ljmp
hlt
outsb
push
movsl
add
mov
je
pop
andb
sbb
mov
mov
cmc
adc
lds
sbb
les
sbb
stos
inc
in
xlat
dec
into
les
mov
adc
gs
test
pushf
dec
or
inc
test
sbb
cltd
ret
in
stos
lds
mov
push
jno
mov
xorb
mov
dec
hlt
push
or
loope
test
mov
je
mov
mov
push
loope
sbb
call
icebp
xor
and
jns
or
fwait
ret
push
movsl
ret
clc
mov
inc
stos
cmp
lahf
xlat
pop
mov
fsubrs
outsl
or
lds
mov
fsubp
mov
dec
mov
mov
inc
ds
dec
cwtl
loope
mov
lret
idivl
jmp
ss
sub
pop
mov
cmc
sarl
push
cmp
iret
lock
cmp
mov
ja
sbb
sub
ds
rcrb
xor
fdivrs
sbb
add
dec
ret
mov
std
ds
movb
dec
sbb
push
pushf
mov
test
jae
or
cld
add
jb
scas
lret
inc
lret
push
push
jge
mov
or
lods
inc
cltd
sub
push
xchg
and
pop
imul
xchg
or
sub
mov
add
pop
dec
add
ret
jb
inc
ret
outsl
or
cltd
ljmp
jno
jne
stos
sub
ja
xor
jo
add
stos
fs
nopl
xor
mov
ja
sub
pop
push
or
pop
fisubrs
push
cs
enter
jmp
movb
jmp
jnp
test
fucomip
out
cmpsl
cmp
js
mov
test
or
lret
test
flds
movsl
dec
jge
mov
mov
inc
mov
jbe
sbb
sub
std
rorl
or
dec
scas
mov
pop
daa
adc
jae
and
mov
push
sub
lcall
mov
push
sub
inc
sbb
cmc
lahf
scas
pop
jne
jmp
push
mov
ret
rolb
push
addl
mov
inc
mov
add
mov
sub
fcoms
ds
idivl
in
fisubrs
and
push
leave
pop
out
sub
dec
dec
sub
cwtl
push
mov
into
jmp
jbe
add
mov
sub
dec
mov
idiv
mov
in
lock
jne
repz
jl
add
pusha
mov
outsl
adc
mov
fs
mov
jb
cld
aas
push
cltd
jns
aad
xor
shrl
lock
adc
fisttpll
mov
jno
arpl
cmp
shrb
cmpsl
inc
fiaddl
sub
testl
sbb
mov
dec
int3
mov
stc
adc
and
loope
sarl
pop
sti
mov
push
mov
inc
sarb
dec
jecxz
push
xchg
pop
lret
xchg
lods
mov
pop
push
aas
xchg
push
jle
into
js
jmp
dec
inc
mov
repz
insl
outsb
inc
mov
fdiv
add
out
jle
loope
adcl
inc
int3
lea
pop
push
popf
jbe
inc
out
mov
mov
xchg
gs
es
add
rcrl
int
aas
mov
movsl
xchg
jno
addl
mov
pop
lds
sbb
mov
popf
mov
pop
loop
cwtl
adc
aam
aas
repnz
insb
inc
sbb
insl
adc
out
sbb
xchg
xlat
stos
shl
dec
in
and
mov
popf
mov
lea
jns
mov
iret
pop
inc
rcrl
scas
adc
dec
mov
ret
jo
pushf
test
xchg
pop
mov
pop
loope
in
inc
ficoms
lods
fimull
aad
xor
push
or
xor
jge
pop
add
add
cmp
xchg
jno
mov
add
xchg
fsts
aas
insb
cwtl
in
pop
and
bnd
jmp
jae
inc
imul
jg
cmpsb
fsubrs
fidivrl
mull
int
mov
loopne
xor
test
inc
jae
add
je
loopne
imul
out
cmp
shlb
add
les
push
mov
xchg
xlat
sahf
xor
out
sti
lock
jmp
xor
and
mov
imul
popf
cld
inc
test
mov
jne
xchg
pop
cli
outsb
fldcw
out
push
push
pop
ljmp
jae
add
in
or
fsts
mov
or
pop
add
cmp
mov
push
ret
jmp
lcall
rcl
cld
add
and
add
push
jb
adc
xor
dec
xor
mov
or
les
push
ror
dec
cmp
sub
fdecstp
shlb
pop
aas
in
call
icebp
repz
clc
insb
lea
inc
or
loop
pop
add
hlt
call
jp
xor
pop
adc
cmpsl
add
mov
jae
ja
adc
imul
lds
inc
push
int
inc
sbb
inc
adc
xor
lods
shll
jnp
dec
sbb
add
mov
mov
mov
pop
bound
popf
cmp
loope
das
inc
mov
lsl
adc
and
push
jge
dec
gs
iretw
jmp
pop
cmp
loop
dec
test
mov
shlb
lahf
mov
pushf
jp
xor
andl
ljmp
pop
mov
adc
cmp
popa
test
enter
sahf
addr16
cmp
fwait
cmpsb
dec
xchg
test
sbb
out
aam
push
jns
fdivrs
lcall
addr16
mov
push
add
sbb
outsb
mov
dec
inc
ds
add
ja
push
shr
mov
dec
mov
rcll
loopne
test
pop
xchg
push
jae
shrl
push
fists
mov
repz
jns
mov
mov
and
nop
dec
sbb
xchg
nop
or
xor
xor
call
inc
mov
cmp
test
inc
mov
jae
sbb
jns
sahf
xchg
je
popf
inc
in
push
cmp
jnp
sbb
push
pop
xchg
push
xor
add
sub
sbb
jno
push
xchg
mov
lret
xchg
cwtl
inc
sbb
inc
xchg
fsub
icebp
sbb
lcall
push
cwtl
cld
cmp
adc
dec
pop
xchg
cltd
inc
fisubrs
subl
push
aam
jp
enter
or
imul
jb
outsl
test
inc
cltd
add
ja
inc
mov
ds
mov
mov
test
push
aam
xchg
out
imul
pop
jo
aaa
sbb
cmpsl
push
pop
add
or
jl
adc
rcll
test
jae
icebp
scas
adc
shl
inc
cmp
dec
test
scas
nop
jnp
test
lea
dec
mov
mov
mov
mov
pop
ficomps
mov
xchg
cmp
movsl
sub
out
inc
cmp
imul
adcl
mov
shrl
adc
push
dec
fwait
mov
push
in
sbb
lahf
cwtl
out
jmp
movl
insb
mov
add
inc
icebp
inc
fidivrs
add
jge
xchg
sub
test
push
mov
mov
jle
push
push
pop
fisubl
fiaddl
jnp
xchg
fcmove
jno
cltd
shl
xor
ds
inc
dec
sub
mov
jg
fcom
mov
inc
pushf
in
pop
shl
mov
dec
in
mov
stc
lcall
aas
aas
bound
pop
inc
je
outsb
mov
mov
les
cmp
insb
mov
repnz
stc
xchg
inc
sbb
ss
sbb
out
jns
aaa
ret
loopne
sbb
sbb
arpl
jae
inc
jmp
repz
jo
lods
icebp
add
sbb
fwait
push
push
add
add
out
jae
jne
add
sbb
fldl
js
loop
and
push
mov
cmp
std
rolb
movsb
test
roll
addl
into
decl
inc
push
push
jmp
mov
rolb
lret
pop
aad
movsl
ret
fsubrs
movsb
cli
jae
pop
xchg
popf
fists
xor
cmp
popf
iret
and
and
add
or
loop
mov
adc
int3
fidivrs
lret
cltd
jge
pop
xor
jbe
xchg
sub
push
addl
mov
mov
ret
ficoms
lcall
out
fwait
arpl
mov
or
lds
and
mov
mov
dec
xor
adc
rclb
stos
sbb
xchg
mov
movsl
in
mov
cmp
cmpsl
cwtl
nop
cmp
adc
lret
mov
pop
outsb
iretw
leave
xchg
scas
cmpsb
ss
in
out
mov
push
mov
mov
fists
mov
mov
repz
mov
adc
xchg
jg
sbb
pop
push
cmp
jle
aam
cltd
mov
or
in
push
popf
insl
cmc
cmpsl
cwtl
ret
sub
cmc
loope
adc
jae
je
test
sbb
in
rcr
arpl
aad
xchg
pop
push
lods
push
sub
pushf
gs
mov
add
push
inc
sbb
repz
imul
mov
repnz
adc
cmp
xchg
orb
scas
mov
mov
scas
into
ss
xchg
or
xchg
add
mov
scas
movsb
mov
jg
dec
xor
mov
push
mov
movsl
insl
adc
arpl
or
mov
push
lret
stos
xchg
push
and
jb
ljmpw
lds
xchg
adc
fucomi
stc
mov
xor
xor
adc
cli
out
addr16
adc
xchg
add
sub
pop
subb
dec
cmpsl
faddp
dec
and
cmpsb
push
sub
sbb
xor
push
pop
jle
loope
fwait
lea
mov
je
dec
cmovbe
orl
and
mov
xchg
cmp
mov
jbe
cmp
insl
lcall
sti
sahf
cmpsl
cwtl
outsl
in
push
clc
jnp
mov
mov
mov
enter
cwtl
pop
mov
add
int
xchg
mov
fs
icebp
cmpsb
xlat
push
fcoms
push
push
dec
mov
divb
pusha
xor
shlb
stos
xlat
xlat
add
mov
rolb
push
xor
cmc
push
mov
xchg
add
xchg
inc
stc
xchg
pop
dec
cmpsb
xor
jb
inc
mov
adc
cmpsl
inc
jmp
pop
ja
sub
loop
pop
decb
jnp
add
sbb
or
push
and
sarl
push
cmp
xor
dec
cmp
push
rcrl
mov
inc
mov
ror
outsl
sti
repz
bound
jno
mov
inc
mov
je
rcll
ds
lahf
ja
inc
and
mov
mov
jge
stos
push
mov
adcl
scas
ret
add
in
mov
fistl
pop
jle
cmpsl
loope
icebp
xorl
outsb
and
push
sub
ret
push
pushf
mov
adc
cmpsl
mov
adc
mov
roll
jl
adc
cmpsl
int
cld
mov
test
sub
idivb
jae
sub
int3
and
cmovno
jmp
in
mov
scas
or
test
aaa
mov
jecxz
lret
lods
rol
ret
int
inc
add
repnz
iret
scas
ret
loop
cmp
mov
andl
lret
mov
push
jecxz
test
jbe
fwait
mov
mov
mov
cmp
mov
mov
cs
mov
sarb
cmp
inc
push
mov
jne
out
push
inc
xchg
out
movb
sbb
jmp
outsl
mov
dec
scas
out
test
je
xchg
in
jb
lahf
pop
out
iret
repnz
inc
sbb
push
orb
mov
sub
or
mov
je
icebp
mov
lahf
iret
xor
adc
outsb
stos
and
and
xor
xchg
loop
pop
pop
dec
mov
push
cwtl
inc
jne
push
xchg
jmp
push
cmp
test
fisttps
mov
dec
cmp
inc
lcall
pop
movsl
test
clc
lods
ret
cld
test
cmp
iret
scas
sarl
loopne
shll
fld
push
sarb
sub
les
fcompl
jg
push
aam
ret
push
mov
pop
xchg
inc
stos
mov
lret
pop
ss
out
gs
jecxz
test
sarl
fwait
push
or
rcrb
xor
das
rcll
sar
gs
aam
jb
inc
jle
insb
shr
mov
sbb
pop
test
push
push
jno,pt
add
mov
mov
repz
ljmp
add
mov
aaa
dec
xor
outsl
and
jg
imul
dec
aaa
repnz
mov
sub
dec
mov
call
pop
xor
dec
xor
mov
jo
jl
adc
cld
cmp
xchg
leave
lea
clc
push
mov
popf
mov
fwait
int
inc
dec
sub
rcrb
cmpsl
cmp
inc
xor
repnz
in
loop
and
daa
xor
add
mov
mov
dec
xor
andb
rcrl
jp
mov
ja
jns
ljmp
outsl
jecxz
cmc
jbe
mov
out
cmp
fs
sbb
add
andb
js
sbb
cmpb
lcall
gs
jb
rorl
mov
popa
add
int
lods
sbb
lahf
lret
or
insb
shll
push
jnp
mov
mov
sub
push
pop
dec
movsl
mov
aaa
push
mov
cli
inc
dec
inc
fcmovb
push
add
jnp
movsl
jae
add
fldt
jnp
xlat
push
leave
dec
movsl
mov
test
cmp
stos
aas
or
andl
xchg
mov
add
leave
lods
inc
test
rorb
cmp
mov
outsl
jmp
mov
in
fs
rcrl
loope
sti
push
jle
sbb
cmc
nop
add
mov
nop
or
push
xchg
out
es
xor
aad
dec
cmpsb
push
mull
fisttps
call
lretw
mov
leave
stc
hlt
pusha
das
xchg
xor
sub
lret
push
in
push
mov
aam
mov
xor
jmp
sarl
int3
jmp
ret
ret
and
in
mov
jae
push
and
mov
add
loope
sub
or
add
push
push
rclb
jmp
je
sbb
or
and
or
sarb
mov
sub
fucomp
jne
pop
xchg
dec
or
ficompl
test
ret
test
loope
cmpb
jge
dec
push
pop
dec
gs
fistl
cmpsb
repz
mov
shll
aas
jge
inc
sub
out
stos
jmp
cli
movsb
ret
mov
push
add
clc
xor
mov
sbb
lret
xchg
mov
cmp
adc
mov
fwait
ret
mov
xorl
pop
cmp
aaa
sub
xor
xchg
inc
add
fmuls
test
in
sub
cmc
fldenv
adc
or
outsb
mov
adc
jmp
ret
in
ret
loopne
in
mov
sub
iret
pusha
sbb
inc
dec
fadds
add
lcall
adc
mov
xor
call
push
and
push
dec
mov
stos
adc
hlt
jb
addb
cmpsb
adc
jl
inc
leave
enter
lret
test
fstps
xor
ret
mov
inc
dec
in
jmp
loopne
mov
sub
jne
scas
mov
testb
cmp
sub
push
mov
jns
scas
sbb
repnz
iret
scas
add
shll
je
shll
xchg
iret
aad
jns
push
or
mov
push
jp
mov
es
cmp
movsl
jnp
shrb
mov
bnd
lds
je
adc
xchg
ds
fcmovnb
mov
popf
stos
fstps
jmp
shll
mov
mov
imul
cmp
jge
cmp
je
hlt
xor
adc
loopne
mov
orb
pop
das
push
mov
xlat
push
or
sbb
movsl
ds
js
testl
sbb
lds
xchg
push
lcall
and
push
inc
sub
and
out
inc
lcall
sbb
lods
ret
mov
mov
js
adc
stos
loop
add
jo
popa
cmpsl
jae
stc
ljmp
movsb
in
add
push
or
mov
adc
mov
stos
leave
inc
sub
mov
movsl
lret
cmc
xor
out
sub
mov
jo
dec
jle
xchg
mov
outsb
xchg
push
stos
sbb
add
xlat
and
or
xor
mov
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
xor
leave
data16
into
xchg
ljmp
mov
inc
dec
push
pop
into
mov
fucomp
insl
push
jecxz
push
and
xor
jns
repnz
inc
repnz
in
vandps
dec
ret
push
lock
das
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
addr16
js
xor
ja
jg
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
sbb
inc
cwtl
retw
xlat
movsb
test
dec
jb
pop
and
push
adc
aam
sti
pop
lcall
pusha
rclb
jle
repz
daa
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
dec
inc
stos
shl
test
std
mov
push
mov
push
divl
hlt
add
adc
shlb
fadds
cmp
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
push
enter
fdivrp
data16
sub
adc
lret
mov
sub
pushf
in
imul
fmulp
jnp
jb
notl
daa
mul
cmpsl
and
dec
lret
jmp
outsl
mov
lods
pop
jle
add
xchg
incl
dec
jno
test
notl
cltd
arpl
sbb
lods
mov
xchg
nop
pop
add
rol
pop
ficoms
fcompl
data16
lock
lahf
aaa
pop
sbb
inc
cltd
out
and
mov
xchg
jmp
outsb
dec
sahf
cmpsl
fs
jnp
xchg
imul
mov
test
out
pop
stos
int
lret
std
pop
and
jb
xor
addr16
xor
jne
pusha
add
sub
xchg
outsl
daa
stos
ss
ficoms
inc
mov
arpl
scas
push
test
add
jnp
push
icebp
mov
push
cmp
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
and
push
xor
sub
mov
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
pushf
xlat
fucomi
in
into
sbb
sub
popf
mov
mov
repz
sub
out
in
hlt
inc
adc
push
pusha
mov
sub
pop
icebp
xchg
adc
rcrl
inc
fwait
arpl
jb
sbb
test
loope
shlb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
enter
mov
push
fbld
and
jne
les
cmp
add
push
inc
ret
pop
sub
and
outsb
push
jae
loop
je
mov
pop
sub
cmp
arpl
lods
push
push
cmpsl
mov
ja
es
clc
add
sahf
mov
pop
pop
mov
je
gs
pushf
sub
cmc
xor
imul
sub
rcrb
dec
popa
in
cmc
in
mov
lods
inc
sbb
sub
dec
aad
or
gs
cwtl
out
adc
lret
inc
xchg
ret
mov
xor
sbb
scas
daa
ret
cmp
lret
push
ss
cmp
ljmp
pop
subb
xchg
xor
adc
test
fimuls
or
or
js
shll
push
movsb
pop
leave
jb
or
out
and
fnstcw
jbe
add
fisttpl
xchg
lcall
jle
inc
inc
jg
jl
cmp
mov
adc
mov
fsubrl
enter
pop
aas
cmp
fistpll
mov
pop
gs
adc
mov
js
popa
fcoms
push
pop
jge
pminsw
jmp
insl
hlt
lcall
sub
jne
popf
insl
mov
jbe
das
or
jnp
xchg
addr16
sbb
xchg
jge
add
xor
lahf
cmp
test
ret
popa
push
aaa
adc
test
cmpsl
push
xor
out
xor
mov
out
addr16
inc
or
jae
and
rolb
sub
add
sbb
sbb
lea
mov
popf
iret
sbb
lret
adc
cltd
pop
jnp
or
je
loope
cmp
and
pop
stc
das
or
faddl
int
pop
add
popa
mov
add
leave
fstpl
add
loopne
sub
call
cmp
jmp
xchg
mov
insl
cmp
popa
sub
ret
retw
inc
inc
adc
xchg
bound
push
push
mov
stos
fstpl
jmp
xchg
mov
fmull
or
sub
sbb
bnd
sub
movsl
sbb
sub
add
test
push
stc
loope
jecxz
clc
jb
aaa
repz
lahf
inc
pop
jns
lods
aad
sub
push
lock
add
push
in
xor
testl
clc
jo
inc
stos
pop
xlat
sub
and
outsb
cmp
ret
inc
cmp
cli
cmp
cld
or
in
pop
inc
cs
lea
push
sbb
cmpsl
aam
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
dec
imul
ret
mov
out
xor
push
mov
in
cmp
pop
pop
out
sbb
inc
push
mov
jp
sbb
or
inc
jmp
jle
int3
adc
icebp
fsubrs
push
ds
sub
or
movsb
insb
inc
out
mov
lret
imul
inc
and
nop
sbb
pop
orb
lock
testb
dec
scas
pop
mov
int3
push
clc
daa
out
xchg
in
enter
hlt
jbe
outsl
in
adc
outsb
lods
sbb
orb
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
out
push
cmp
add
sub
adc
sti
loopne
mov
xor
dec
jno
data16
imul
mov
jo
loopne
jp
aaa
es
mov
push
xchg
movsb
mov
mov
imul
pop
ss
jns
out
test
cld
and
stos
std
xor
fcompl
fstl
int
jp
in
gs
sbb
call
mov
add
mov
lahf
mov
cmpsb
subl
scas
scas
adc
push
mov
fs
sbb
push
adc
cmp
and
xor
addl
sub
sbb
shrb
jbe
pop
dec
pop
jne
xor
movsb
xchg
cs
add
scas
xchg
cmp
test
andb
ja
sub
sub
mov
std
lods
pop
pop
cwtl
into
std
jle
fcomps
stc
sub
lcall
inc
xor
sub
sub
push
dec
sahf
cmp
shrl
and
pop
xor
iret
sub
add
out
fldt
outsl
enter
sbbl
adc
je
shll
pop
dec
test
dec
cmp
ret
jne
repz
popa
add
loopne
movsb
dec
xlat
sahf
test
aaa
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
clc
jnp
pop
push
mov
arpl
inc
adc
pushf
sti
mov
stos
mov
jl
push
dec
cmp
mov
stc
or
dec
or
ja
cmpsb
and
imul
pushf
lds
push
cmp
cmp
inc
cs
sbb
in
sbb
push
jno
divl
movsb
cmp
sub
out
and
mov
push
cmp
or
or
sbb
int
repnz
mov
icebp
aad
push
xchg
aas
jns
inc
cli
add
in
push
out
mov
push
pop
xor
sub
fdivrp
lret
sbb
fisttpll
arpl
or
enter
adc
in
sub
cld
or
ljmp
cld
mov
rcll
loopne
lods
repnz
iret
pusha
rol
push
add
vzeroall
push
mov
sti
xchg
movsl
jmp
dec
or
cmp
in
mov
adc
pop
into
lahf
sbb
add
int
inc
pop
adc
pop
pop
add
push
dec
adc
sbb
push
sbb
popa
insl
ret
jbe
ss
push
push
jge
mov
fisttps
pop
pop
hlt
add
test
aad
pop
pop
ljmp
sbb
arpl
dec
lods
pop
push
in
into
adc
lret
push
inc
ds
cmp
mov
decb
out
test
inc
adc
xchg
int
mov
cltd
fcomps
int3
aaa
inc
test
test
push
pop
mov
es
xchg
mov
dec
aaa
popf
aas
mov
outsb
jb
lcall
iret
and
or
sub
pop
adc
jo
mov
daa
jno
sbb
xor
xchg
enter
out
jge
or
sbb
mov
cmp
iret
lret
push
jle
mov
cmpsb
add
mov
pop
addr16
sbb
imul
push
inc
clc
sub
jne
jg
push
cmpsb
insb
popa
fiadds
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
mov
int3
push
clc
daa
out
xchg
in
enter
aam
cmp
aaa
outsb
lods
sbb
orb
fisttps
jg
xor
test
xlat
add
sbb
out
std
decl
sub
out
push
cmp
add
sub
adc
sti
loopne
mov
scas
sahf
scas
das
pop
sbb
iret
push
fstps
push
punpcklwd
outsl
lret
loope
jbe
imul
add
mov
mov
shlb
mov
movsl
aad
test
leave
cld
fisubl
push
fnstsw
fdivl
jge
jle
dec
push
xor
lcall
loopne
mov
sbb
popl
pop
add
sbb
jecxz
fsubrl
push
mov
push
inc
adc
dec
push
pop
dec
out
adc
mov
mov
fmull
cmp
icebp
xor
cmpl
and
sub
aaa
daa
fstpl
mov
mov
in
scas
adc
pop
jns
cmp
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
nop
iret
out
sbb
mov
inc
stos
push
lahf
fs
cmp
imul
das
jecxz
xchg
inc
fidivs
das
les
adc
nop
test
fimuls
mov
aam
cmp
xor
and
rcrb
xor
sbb
push
testl
xchg
jge
cmp
pop
lds
and
test
jae
popa
cmp
std
inc
mov
xchg
cld
dec
insl
ljmp
mov
andb
arpl
push
mov
jmp
push
pop
aas
mov
les
inc
and
xor
arpl
mov
ja
pop
outsl
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
lea
and
leave
xchg
cmp
pop
jns
or
je
fisttps
jg
and
cmpsl
push
mov
push
aad
pop
repz
repnz
mov
adc
adc
loopne
cmpsl
popf
mov
mov
pop
mov
insb
dec
jno
out
xchg
dec
adc
sbb
hlt
pop
repnz
cwtl
ds
jbe
lea
push
enter
lock
nop
mov
out
mov
jp
dec
mov
mov
and
andb
decl
adc
int3
aad
jp
and
daa
xor
sbb
subb
mov
in
lahf
mov
call
fwait
mov
sbbl
icebp
xor
xor
dec
mov
adc
jp
loop
pop
cmp
pop
int
adc
jg
push
imul
iret
and
pop
jnp
cmp
aaa
sbb
push
negb
lods
mov
mov
xchg
stc
mov
pushf
sub
mov
lahf
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
repz
sbb
je
jl
je
jp
adc
in
or
aaa
xor
in
jp
adc
pop
xor
dec
and
push
out
jmp
dec
inc
mov
mov
inc
jg
mov
fs
incb
jae
int
bound
mov
push
and
js
xchg
rolb
push
and
mov
jge
daa
dec
jo
cmp
xchg
and
jecxz
outsb
lock
fs
in
inc
imul
push
adc
test
gs
clc
push
and
into
dec
push
rorl
repnz
and
testb
ficomps
xor
aaa
int
push
pop
push
push
sbb
push
push
sbb
enter
mov
jno
dec
mov
inc
jge
lahf
insb
aad
in
inc
bound
or
jg
xlat
aas
jb
stc
cmp
ljmp
push
xchg
out
hlt
mov
popf
xor
pop
mov
adc
popf
add
cmp
cmp
lods
mov
pop
jnp
inc
jbe
loopne
js
mov
mov
sbb
mov
fdivl
pop
test
jge
mov
push
pop
nop
jbe
popa
repnz
mov
or
pop
and
movl
sub
add
mov
dec
loop
inc
out
nop
jmp
sbb
dec
repnz
xchg
mov
sbb
pusha
inc
cmp
ficoms
jno
dec
sub
gs
loope
pop
add
test
in
out
lea
push
jl
xchg
mov
repz
sub
sub
push
jl
loop
add
ret
sahf
xor
hlt
sahf
mov
jno
divl
js
inc
cmc
and
incl
clc
inc
push
insb
je
decl
adc
je
inc
sub
mov
shr
cld
xor
push
xor
mov
pusha
insl
stc
fwait
outsb
aam
insb
loope
pop
mov
or
jle
cli
mov
mov
mov
cwtl
xchg
out
lret
arpl
sub
pop
adc
les
and
push
je
and
loopne
fstl
add
pop
adc
lock
xor
and
sbb
lcall
or
and
cwtl
push
aas
mov
es
push
mov
jmp
push
pop
aas
mov
les
inc
add
cmc
xor
insb
push
arpl
mov
ja
pop
outsl
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
mov
and
leave
xchg
cmp
pop
jns
or
mov
repz
jg
jg
icebp
dec
incb
nop
les
in
mov
push
out
cmp
popa
add
mov
cmpsb
push
inc
js
inc
mov
jge
xchg
out
jno
testb
inc
cld
sbb
hlt
pop
repnz
cwtl
ds
jbe
push
pop
cmpsb
push
lock
shl
fsubl
nop
mov
out
mov
jp
dec
xorb
mov
cmp
andb
decl
adc
int3
aad
jp
sbb
adc
sar
dec
or
jo
sbb
add
dec
in
adc
loop
and
pushf
scas
scas
sbb
rcll
stc
mov
testb
and
sbbl
jp
cmp
pop
int
adc
jg
push
imul
iret
and
pop
jnp
or
aaa
sbb
push
negb
lods
mov
mov
xchg
stc
mov
pushf
push
mov
xchg
insl
xor
sbb
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
cmp
in
in
mov
ljmp
das
push
aas
push
xchg
gs
shrb
inc
xor
push
repz
lret
shlw
mov
push
jg
mov
fs
incb
jae
int
bound
and
js
xchg
and
or
and
mov
jge
daa
dec
jo
cmp
xchg
and
mov
outsb
lock
mov
imul
push
adc
pop
pop
push
enter
jne
push
out
push
mov
loope
shlb
adc
lock
movsl
pop
ja
mov
xor
push
jge
scas
les
push
mov
das
or
pop
in
xchg
pop
jb
out
fnstenv
pusha
fsubrp
divl
in
std
jb
push
mov
add
mov
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
sbb
outsb
dec
jae
movb
sbb
sbb
lcall
sbb
mov
jl
fisttps
lds
fprem1
fisubs
rcrb
in
and
xor
jns
adc
cmove
fnstsw
or
push
push
ret
jl
xchg
sub
add
mov
dec
loop
inc
out
nop
jmp
sbb
lret
out
xchg
rep
jnp
mov
insb
mov
ficoms
jno
dec
sub
gs
mov
mov
and
and
mov
cmp
int
jg
popa
and
xor
push
jge
sbb
pop
lock
jno
out
cmp
bound
sub
stc
nop
inc
pusha
faddp
adc
push
addl
dec
incl
clc
inc
push
insb
je
decl
adc
je
inc
sub
mov
shr
cld
xor
push
xor
mov
pusha
insl
stc
fwait
outsb
aam
insb
jecxz
pop
mov
or
jle
cli
mov
mov
out
lret
mov
pop
jb
inc
mov
xchg
inc
sub
push
xchg
add
pusha
cmp
push
or
addr16
inc
insl
aad
inc
ja
inc
test
mov
add
cmp
iret
mov
jle
cmp
jge
jg
imul
imul
or
add
xor
sub
bnd
push
aad
insb
popa
mov
js
fsub
mov
lret
mov
dec
sbb
or
aad
mov
pop
ds
test
push
stc
loope
jecxz
clc
mov
aaa
mov
jns
lret
aad
cs
add
push
in
xor
testl
push
add
fs
lods
inc
pop
loopne
adc
pop
jne
dec
mov
ljmp
pop
cmpsl
ret
test
bound
xchg
hlt
jb
aaa
ffree
pusha
cwtl
or
xchg
mov
mov
cltd
imul
xchg
out
movsb
jg
out
pop
xchg
in
sub
or
inc
insl
pop
movsb
aad
in
dec
fdivrl
repz
mov
jle
push
adc
pop
test
inc
dec
inc
jmp
jle
int3
adc
jbe
rcll
arpl
push
or
lds
pop
movsb
fldcw
into
mov
js
mov
in
inc
jno
push
or
frstor
test
xchg
sub
andb
cmpsl
xchg
dec
mov
insl
stos
fs
insb
mov
mov
cmc
lret
lods
outsb
lahf
lods
ret
int
mov
int3
repnz
jle
scas
js
in
loop
int
mov
push
inc
shll
test
mov
ror
xlat
mov
out
fldenv
adc
frstor
xchg
pop
fbld
out
loope
add
sbb
add
andb
js
sbb
xchg
sbb
sbb
rorb
arpl
out
negb
lods
lret
les
hlt
mov
clc
push
daa
cmp
jp
add
sub
mov
cld
or
scas
xor
movsl
cmp
enter
push
mov
stos
shrl
mov
and
adc
sbb
loopne
jae
mov
push
clc
inc
ret
add
mov
xchg
mov
lods
ljmp
push
inc
call
enter
rol
ja
cmp
xchg
mov
inc
fwait
leave
or
rcr
push
cmp
js
or
rorl
mov
sbb
mov
adc
rolb
push
fsubrs
cli
xchg
xchg
and
popl
mov
sbb
xchg
mov
xorb
sub
mov
cmp
pop
jmp
xchg
push
into
movsl
movsb
pop
popa
js
xor
pop
testb
aaa
lea
mov
idivl
and
push
das
xchg
lret
add
adc
frstor
stos
push
lods
xchg
sub
notb
xor
sbb
sbb
mov
cmpsl
fs
cmp
jae
push
test
ret
lock
lret
es
in
in
shlb
mov
stos
xchg
add
ret
fistl
rol
jmp
jbe
test
jp
leave
jnp
sub
cmpl
test
js
rorl
add
nop
pop
clc
pushf
add
movntq
sbb
fsubs
adc
cmp
call
enter
fnstsw
lcall
imul
scas
sbb
lods
js
cmp
sub
movsb
and
int3
xchg
add
test
es
les
test
sti
add
push
ja
lret
xchg
cmp
iret
inc
pusha
ljmp
ss
add
jo
push
jae
cmc
cmpsb
aad
andl
mov
mov
pop
imul
pop
into
dec
sbb
pop
pop
mov
pop
push
jbe
mov
js
lds
xchg
fmul
imul
sbb
mov
dec
lret
mov
aaa
sub
or
lds
sahf
outsb
fstpt
jbe
jae
divb
pop
jmp
xchg
das
mov
mov
popa
jno
mov
and
das
adc
addl
add
push
es
cwtl
dec
and
scas
push
push
clc
push
mov
jno
xchg
and
popl
mov
mov
dec
cmp
imul
mov
xchg
mov
push
hlt
imul
les
fldenv
inc
sub
jmp
dec
pop
pop
shll
enter
xor
and
out
and
jnp
rcrl
dec
daa
cmp
jp
loope
xor
mov
adc
or
xor
mov
shl
cmp
push
test
push
push
loop
test
mov
aad
mov
inc
jbe,pt
jbe
xchg
test
xchg
inc
jmp
adc
pop
inc
inc
xchg
push
cli
movsl
jb
shrb
jne
push
mov
popa
lea
mov
push
dec
arpl
lret
cld
sti
pop
fstp
fsts
andl
sbb
clc
psrlw
xor
ja
fwait
jle
or
inc
xor
adc
imul
jnp
in
mov
lds
mov
adc
add
imul
pop
mov
aam
add
dec
adc
jle
dec
push
and
repz
rolb
mov
and
bound
ds
ret
cmpsl
inc
mov
lcall
jne
pop
pusha
shlb
rolb
les
out
xor
dec
icebp
mov
jl
jb
cmp
push
stos
mov
aad
gs
mov
lods
xor
dec
aas
or
fdiv
out
jno
xchg
pop
jge
mov
and
lcall
mov
pusha
ss
insb
push
clc
test
subl
stos
sub
in
test
out
mov
andb
addl
insb
dec
add
inc
fwait
dec
scas
sbb
push
lds
lods
paddq
jns
les
push
fwait
stos
adc
lahf
xchg
mov
sbb
dec
mov
jle
add
sbb
push
shr
mov
test
nop
movsl
mov
xor
cmp
aas
scas
add
ss
lret
imul
loopne
clc
push
pop
and
mov
sbb
sbb
call
xchg
cs
pop
mov
mov
push
sbb
stos
mov
jnp
test
sbb
insb
popa
mov
repnz
je
ret
mov
adc
lock
push
test
xchg
dec
cs
imul
movsb
js
pusha
jnp
mov
lret
mov
sbb
rolb
leave
sbb
rcrb
and
sbbl
rorb
and
fwait
jp
push
mov
inc
sbb
xchg
notl
les
mov
movsl
inc
movsl
call
jp
repz
add
fdivs
pop
mov
hlt
cmp
or
stos
jmp
loopne
fisubrs
sbb
mov
rorb
cs
roll
out
xor
les
std
jno
lea
sub
or
pusha
add
imull
xchg
sarl
push
int
cmp
sub
or
sbb
sbb
sbb
scas
ror
mov
lcall
or
xchg
shr
inc
sti
scas
pop
add
in
cltd
daa
cltd
push
orl
subl
test
pop
arpl
enter
fldenv
mov
mov
lods
enter
pusha
jle
sub
mov
ror
stos
inc
shlb
add
add
sbb
ret
xchg
or
mov
and
cmpsb
jns
sub
int3
test
jnp
lock
ret
lcall
fs
enter
dec
inc
xchg
pop
dec
and
gs
rcrb
xor
arpl
inc
fwait
divl
pop
les
xor
enter
jno
call
jno
mov
jmp
mov
stc
lods
ret
mov
sbb
iret
cmp
sbb
inc
mov
jp
inc
testl
shrl
pop
mov
xchg
pop
mov
push
sub
cwtl
adc
out
stos
outsb
pop
out
adc
xor
sub
and
mov
cmp
clc
clc
and
mov
jo
jp
sahf
nop
fmull
fisubrs
sbb
cmp
or
call
mov
das
pop
test
lret
lret
jbe
dec
mov
popa
out
ja
jns
leave
ja
or
lea
imul
insb
and
dec
add
mov
sbb
mov
rcrb
out
inc
leave
pop
sub
push
aam
hlt
lret
ret
xchg
sti
and
repz
push
dec
mov
xor
mov
pop
test
add
mov
cmp
fstpt
mov
push
rcrl
fimull
stos
xchg
loop
lret
xor
jae
stos
adc
sbb
flds
sub
push
sbb
cs
jns
xchg
pusha
lret
adc
mov
jle
pop
adc
mov
jge
js
sub
fwait
push
xchg
jns
repz
subl
sub
push
test
cwtl
dec
xor
sbb
jae
ja
sbb
lahf
dec
pop
jl
inc
fwait
fimuls
dec
jg
je
mov
cmp
inc
pop
lret
int3
adc
inc
pusha
ret
push
leave
mov
mov
jle
pop
cmc
arpl
mov
xor
push
jbe
xchg
mov
loopne
jmp
cmpsl
hlt
mov
jge
jne
cmp
rorl
aad
cmpsb
scas
jae
inc
test
sbb
mov
dec
jns
fisttpll
stos
xor
sub
movsb
mov
and
movsb
es
and
js
pop
sbb
lret
xchg
into
cmp
xchg
iret
add
lahf
inc
push
arpl
lahf
fistpll
inc
loope
inc
jo
lods
or
scas
aaa
mov
cli
jnp
jnp
iret
xchg
pop
iret
push
jnp
inc
adc
xchg
mov
cli
push
mov
jo
je
pop
lods
imull
jp
or
adc
or
jb
mov
jbe
test
arpl
jnp
pop
sub
jae
mov
or
dec
adc
dec
lds
roll
mov
xchg
adc
popf
cmc
ficoml
popf
xchg
dec
add
inc
inc
cmp
sub
inc
arpl
lock
xchg
mov
ss
rcrl
xor
les
pop
daa
loop
fbld
scas
into
jp
int
jg
pop
or
xlat
fisttpll
rcll
lret
fstl
mov
or
sub
pop
test
test
cmp
mov
sub
fcmovne
xchg
fldt
push
in
sbb
push
mov
sahf
push
lret
inc
or
push
mov
test
cmp
sbb
mov
fwait
cmp
leave
jns
clc
jb
mov
pushf
jecxz
xor
mov
jae
xchg
lret
iret
cmpsl
ret
test
mov
std
add
mov
insb
inc
les
sbb
jmp
xchg
dec
push
leave
mov
outsl
fbstp
test
idivb
mov
push
std
jnp
jno
mov
xlat
add
mov
enter
pushf
add
add
or
and
mov
pop
mov
fidivrl
mov
mov
ret
jp,pt
mov
subl
pusha
test
hlt
inc
mov
notb
inc
ret
push
mov
jo
gs
adc
popf
inc
and
imul
lahf
shrb
jnp
ret
dec
or
int3
sub
adc
shr
lahf
xchg
fdivs
call
pop
push
icebp
cltd
push
stos
icebp
mov
xchg
cmp
jnp
js
add
dec
xchg
jnp
enterw
inc
mov
mov
dec
leave
mov
movsb
fisubrs
mov
mulb
aam
dec
fisttpl
sahf
or
or
int
jg
outsl
call
push
dec
xchg
dec
sbb
or
cmpb
repz
mov
xor
dec
mov
out
dec
xor
jnp
add
mov
repz
cmp
sti
dec
mov
bound
mov
cltd
xor
in
nop
dec
push
pushf
mov
stos
jge
dec
mov
push
or
cltd
push
jns
test
push
sbb
jns
pop
imul
pop
dec
xor
mov
cmp
adcl
cmp
ror
add
xor
inc
popf
mov
movsb
jmp
ret
push
gs
mov
and
cmpsl
ret
fucomi
sarb
lea
popa
stos
into
adc
out
mov
dec
mov
xor
jbe
pushf
inc
cltd
imul
insb
rolb
adc
and
call
pop
test
sbb
fcoml
pop
adc
insb
ret
outsl
mov
inc
sbbl
cltd
fcmove
xchg
xorb
mov
ror
inc
lods
adc
lahf
cmp
ficoms
loope
xchg
jmp
out
pop
push
test
mov
bound
xchg
mov
mov
das
or
lock
enter
roll
pop
push
jne
dec
fdivl
adc
js
icebp
mov
mov
pop
sti
addr16
or
jecxz
inc
xlat
and
lret
pop
dec
loope
test
adc
and
test
fucomp
jbe
fidivl
or
ds
mov
popa
pop
mov
mov
cwtl
dec
inc
pop
sbb
enter
sbb
mov
xor
rol
jmp
mov
idivl
pop
xrelease
mov
out
cmp
mov
iret
ret
mov
xchg
mov
jno
inc
scas
lret
add
rcr
xor
dec
pop
fwait
add
lret
les
js
push
dec
xor
scas
push
dec
fbstp
mov
mov
adc
mov
mov
push
pop
adc
and
or
scas
xchg
cmpsl
outsl
les
jge
lret
mov
mov
xchg
push
sub
mov
leave
jge
jg
iret
push
inc
arpl
loop
sub
xchg
pop
push
cwtl
faddl
cmp
repz
jne
xchg
mov
lock
sti
pop
mov
push
cmp
jle
sbb
js
es
add
fwait
lea
xor
mov
divps
inc
ficomps
push
and
cmpsb
mov
imul
xor
mov
pop
in
xchg
dec
pop
out
les
xlat
repz
push
fists
add
pop
dec
inc
adc
adc
lahf
jb
subb
xor
push
xor
fidivl
adc
xchg
push
mov
stos
push
test
dec
pop
pop
xchg
cmpsl
inc
divb
pop
je
jne
fisttpl
sbb
imul
sbb
mov
sbb
push
daa
aam
push
push
adc
repnz
lea
mov
jle
push
aam
rorl
xor
pop
add
xchg
sub
adc
and
pop
mov
aaa
or
jo
dec
and
test
stos
cmp
xor
adc
std
sbbl
in
test
push
mov
mov
mov
repnz
enter
push
popa
sub
out
loope
push
mov
mov
mov
pop
mov
jmp
mov
mov
sbb
jmp
into
xor
xchg
ds
lea
rcrl
jecxz
imul
pop
jae
xchg
frstor
lret
mov
pop
movsb
lret
movsl
cltd
fsubl
push
dec
inc
add
imulb
dec
mov
mov
insl
std
dec
dec
mov
das
arpl
cmp
mov
sbb
fsubrl
lds
mov
inc
sbb
icebp
dec
mov
pushf
cmpsb
xchg
or
jne
cltd
aam
adc
outsb
scas
lret
popf
repnz
jge
fwait
out
jb
out
mov
add
or
inc
xchg
jno
popf
jmp
lret
cltd
inc
xchg
notl
mov
insb
imul
pusha
jo
iret
adc
movsl
mov
xchg
xchg
pop
int3
pop
and
enter
push
ret
sub
cmp
xorb
mov
pop
ja
movsb
jp
jp
pop
dec
mov
cmp
push
pop
xchg
repz
cmpsl
sti
lahf
les
aas
cltd
or
mov
mov
shlb
pop
dec
pop
xorb
leave
movsl
cwtl
xor
xlat
xchg
arpl
clc
dec
mov
dec
jne
pop
movsb
mov
jge
scas
sbb
mov
scas
je
mov
sub
shlb
or
shll
stos
lds
xchg
fisttpl
cwtl
ljmp
xchg
push
int3
iret
xchg
mov
fbld
jp
cs
pop
nop
xor
andl
cmp
mov
pop
or
cmp
pop
jecxz
out
fs
inc
addr16
push
jecxz
inc
ret
shll
aam
lcall
lods
cmp
js
shlb
lret
shrb
jg
jae
push
hlt
scas
mov
lods
push
or
arpl
repnz
and
jnp
sahf
insl
lods
push
adc
push
inc
les
ss
jge
aam
in
mov
jb
aam
aad
adcl
adc
mov
or
add
or
aam
dec
cmp
decb
xchg
loop
mov
test
cltd
jg
dec
mov
mov
lds
enter
test
inc
sbb
cltd
adc
push
mov
stos
ja
or
xor
mov
les
stos
dec
test
push
pop
addr16
jbe
ss
and
cmp
shlb
push
fdivrl
clc
loopne
out
xchg
xchg
pop
inc
mov
fnstenv
movsl
inc
cli
mov
insl
jmp
mov
or
es
pop
adc
hlt
xor
add
dec
xchg
mov
fwait
stc
and
cmp
xchg
ja
xlat
sbb
int
fldpi
shl
mov
sub
cmp
mov
aas
and
xchg
sahf
jl
push
dec
lods
negl
aas
stos
filds
loope
add
sbbb
sbb
stc
and
sbb
push
xchg
shl
inc
popa
inc
inc
pop
arpl
jns
cld
mov
lds
dec
rorl
mov
and
mov
xchg
add
movsb
adc
jno
mov
jbe
mov
jno
and
jns
ss
sti
pop
cltd
lahf
nop
sbb
arpl
cmp
inc
andl
rcll
mov
int3
dec
shll
lcall
pop
mov
push
fisubl
cmp
and
call
cmpsb
jo
enter
and
adc
push
pop
and
mov
fisubrs
dec
outsl
filds
jno
and
repz
dec
sub
sbb
cmp
jb
xchg
mov
inc
jl
lret
outsl
push
int
jecxz
push
mov
js
mov
call
sahf
sarl
cmp
jbe
dec
jno
inc
mov
fldl2e
jae
jg
ret
sub
jno
adc
movsb
bound
xchg
xor
xchg
rorl
fcmovne
pop
mov
rclb
push
xchg
mov
sub
dec
ret
aaa
inc
add
xor
cmc
add
push
aad
inc
testl
push
es
mov
fwait
jmp
mov
stc
sub
cmp
push
jne
dec
mov
enter
sti
jb
jne
xchg
dec
sub
fwait
jle
push
pop
mov
aad
addl
lret
cltd
mov
mov
jns
jb
and
xor
stos
cmc
ficompl
pop
es
fdivp
sbb
inc
pop
or
filds
add
rcll
pop
jae
inc
ljmp
hlt
mov
jbe
xor
stos
dec
sbb
jns
sub
sub
filds
fs
pusha
mov
adc
dec
rcrl
cwtl
adc
fdivrl
or
vcvtps2dq
and
jge
stos
adc
daa
and
bound
mov
repnz
std
and
ror
incl
push
cwtl
or
push
sbb
mov
mov
mov
cmc
cwtl
sub
jmp
sub
push
sbb
jae
cmp
jb
sbb
push
xchg
add
push
xchg
leave
jecxz
mov
shrb
mov
cmp
addr16
das
or
aam
rorl
aad
dec
adc
jmp
in
loope
dec
jo
pop
adc
pop
xchg
cld
sbb
jmp
lret
push
sar
xor
mov
cwtl
outsl
jns
iret
mov
test
inc
mov
lcall
or
jmp
mov
mov
xchg
dec
inc
mov
add
nop
pop
stos
xchg
shlb
adc
pop
push
pop
dec
cli
xchg
or
pusha
push
pop
sub
loope
mov
lret
popf
stos
loopne
andl
inc
adc
or
movsl
ret
mov
addb
and
xchg
mov
adcl
imul
xor
pop
mov
adc
popa
mov
push
loope
mov
inc
dec
jne
and
push
test
arpl
shl
js
xor
rcr
xchg
fwait
sub
fildl
inc
call
mov
jecxz
xlat
mov
or
js
sub
xchg
pop
xlat
mov
add
mov
popf
add
sub
push
dec
bnd
aad
push
jns
inc
mov
xchg
mov
testl
gs
xchg
aam
sub
add
jge
lods
hlt
sbb
mov
addl
pop
inc
mov
mov
adc
fs
test
bnd
mov
stos
in
xchg
adc
mov
sbb
daa
repnz
sub
ds
mov
push
ret
or
mov
movsl
lret
jmp
int3
mov
cltd
enter
hlt
cltd
int3
pop
test
pop
push
or
roll
cmc
mov
dec
or
adc
pop
push
cmp
ffreep
mov
mov
push
sti
push
fwait
cli
in
iret
add
xchg
pop
xchg
aas
insb
or
aam
shll
pop
shlb
xor
or
test
jle
xchg
sub
and
xchg
cmp
jae
aas
pop
sti
mov
jmp
sti
cmpsl
test
inc
jmp
xchg
test
fisttpll
sbb
adc
stos
add
addr16
cmp
add
sub
insl
inc
push
roll
adc
lahf
scas
sti
mov
and
popf
scas
rolb
pop
lods
pop
repz
leave
inc
mov
add
jo
rclb
in
push
loopne
fcomip
sub
test
sbbl
jbe
xlat
adc
mov
inc
test
inc
lea
and
pusha
ds
sbb
inc
ret
add
adc
lcall
mov
pop
sbbl
mov
sub
pop
add
aaa
pop
or
mov
sbb
pop
aad
mov
jae
lret
idiv
jmp
or
lods
icebp
xlat
stos
enter
insl
xchg
aaa
add
push
stos
push
test
in
sub
mov
dec
stc
dec
push
mov
lcall
xchg
jo
scas
es
sbb
ret
lahf
mov
add
jge
leave
loope
mov
cmc
jne
pop
xchg
sbb
xchg
movsl
mov
andb
leave
test
cmp
add
fucomi
negl
mov
jns
or
mov
mov
test
adc
and
push
push
movsb
gs
xor
jno
cmp
enter
and
cld
bswap
dec
sbb
je
dec
imul
popa
pop
inc
mov
daa
mov
mov
pop
mov
insl
pop
mov
jl
add
in
sbb
leave
insl
cltd
cmpb
cmc
test
dec
sbb
add
mov
push
cwtl
or
pop
mov
xchg
sbb
out
sub
push
adc
fbstp
push
lds
pushf
dec
shlb
mov
iret
ret
xchg
lcall
aad
dec
cmp
mov
lret
lds
call
push
or
outsb
lock
mov
repnz
mov
add
dec
add
adc
jae
icebp
dec
je
idivb
mov
xlat
insb
adc
mov
xchg
subb
jb
test
adcb
add
mov
je
xchg
dec
inc
mov
aad
aas
adc
xor
or
sub
or
gs
mov
sti
mov
in
stc
xchg
pusha
xor
mov
rcr
add
add
insl
test
dec
push
sub
pop
in
jne
lret
data16
mov
adc
xlat
out
fwait
xor
jne
imul
gs
scas
adc
pop
test
test
dec
cli
jge
push
cmpsb
jge
dec
arpl
push
push
fnsave
pop
cmp
add
jge
pusha
mov
xchg
cld
cwtl
jo
popa
dec
inc
add
cmc
lods
inc
dec
mov
call
adc
mov
adc
jno
xlat
sbb
ret
push
pop
insl
outsl
inc
xor
jae
nop
inc
inc
fidivrs
mov
sbb
in
rorl
outsb
xchg
aaa
pop
xchg
mov
fcoms
dec
mov
into
pop
add
add
test
sbb
pop
xlat
pop
sbb
mov
pop
iret
or
mov
inc
cmp
ret
ret
insl
test
ss
add
dec
clc
mov
sbbb
clc
xor
notl
stc
pop
mov
dec
dec
jmp
pop
sub
test
mov
fstpt
jo
aad
test
pop
out
stos
xchg
adc
or
xchg
add
fisubrl
mov
rorb
lret
mov
jnp
fwait
arpl
sbb
sbb
lahf
and
inc
bound
cmp
cmp
pop
into
or
add
jp
out
adc
rcr
pushl
adcl
test
inc
mov
and
call
cmpsb
inc
fsubs
xchg
mov
cwtl
pop
mov
fsub
mov
je
jp
mov
mov
in
lea
fsubs
mov
mov
adc
sub
mov
cmp
sub
fucomip
xchg
adc
in
sbb
aas
dec
add
jb
ret
mov
jno
jne
ret
push
cwtl
push
aam
cmp
leave
cmp
inc
in
push
lods
push
lea
lds
jmp
arpl
or
cs
xchg
clc
mov
add
mov
pop
stos
xchg
mov
or
mov
pop
or
dec
xchg
inc
xchg
inc
pusha
mov
clc
adcb
fildll
mov
cmp
rcrb
pop
cli
jle
clc
sub
add
vprotw
fbld
mov
xchg
decl
repnz
pop
mov
lahf
mov
mov
aas
enter
jb
int3
xchg
push
xchg
mov
push
or
cltd
aam
mov
jo
inc
push
popa
mov
mov
cmp
ffree
rclb
pop
pop
loope
jl
pop
mov
test
sbb
pop
js
int3
add
mov
ds
aad
jmp
and
fistpl
rclb
repnz
push
dec
pop
cmpsl
shr
repz
das
inc
pop
or
push
jae
and
and
lret
mov
cmp
inc
sbb
add
adcl
fistpl
xchg
sbb
inc
add
pop
test
int3
inc
in
push
data16
movsl
adc
add
jo
dec
scas
add
out
cmc
out
rol
ja
jae
subl
test
lcall
adc
int3
les
adc
test
js
jl
cmpsl
repz
jbe
xchg
and
xor
sti
jo
cmpb
inc
mov
xor
enter
inc
mov
push
imul
mov
mov
mov
lods
mov
cmp
fildl
imulb
mov
loopne
fisubs
das
into
cmp
stos
sbb
mov
add
inc
shrb
push
jns
leave
jg
and
leave
les
inc
push
pop
mov
test
cs
pop
inc
mov
daa
lahf
lds
mov
sbb
mov
cltd
fwait
inc
stos
sub
stos
adc
push
mov
sbb
dec
fisubrs
dec
and
lahf
inc
leave
fidivrs
pop
pop
das
rcr
je
repz
pop
mov
or
sbb
dec
out
jnp
xor
sbb
and
xchg
imul
pop
ss
jns
ds
sti
scas
mov
imul
xor
jge
push
clc
push
test
aas
adc
cltd
stc
je
and
dec
inc
mov
inc
mov
push
repz
inc
mov
test
push
cmp
movsb
inc
jns
popf
sbbb
pop
rcrb
inc
imul
xchg
addr16
mov
std
pushf
fs
lods
push
xchg
jns
scas
mov
pop
lock
add
xorl
xchg
mov
adc
push
pop
mov
mov
mov
add
test
or
push
out
and
pop
das
adc
inc
push
mov
dec
scas
lcall
sbb
bound
mov
loop
in
jl
cwtl
pop
stc
add
sbb
lret
cmp
push
mov
lret
sbb
cmpsb
mov
aaa
fiadds
out
fists
repz
sahf
jb
add
aaa
ret
mov
jl
adcl
hlt
jl
inc
inc
jno
ja
dec
xchg
jmp
sbb
adc
fisubl
xchg
push
mov
in
mov
repnz
test
or
add
push
inc
cmp
hlt
jo
jecxz
enter
mov
mov
jecxz
iret
inc
lods
xchg
imul
mov
dec
lret
mov
orb
mov
dec
xor
xor
test
bsf
fbstp
mov
dec
mov
hlt
adc
push
sarb
rolb
sub
gs
inc
lods
adc
sub
mov
mov
repnz
pop
pop
xor
jo
mov
in
cmp
pop
or
pop
int3
les
test
jg
mov
push
mov
test
jmp
int
add
pop
pop
xchg
jb
scas
mov
fcomps
int3
sbb
dec
sbb
orl
lret
je
test
push
rorl
mov
pop
enter
cld
pop
add
mov
push
sbb
mov
cmp
mov
inc
jns
popf
xchg
enter
inc
mov
movsb
or
iret
call
pushf
dec
movsl
push
xchg
jns
lret
and
jnp
shrb
sub
pop
push
xchg
cltd
jg
inc
imul
mov
push
les
add
xor
ret
int3
test
inc
imul
cmp
arpl
movsb
pop
pop
scas
dec
fs
dec
imul
inc
sbb
outsl
fisttpl
rcrb
loop
sbb
push
jecxz
pop
ds
mov
dec
cmp
sbb
xor
adc
adc
adc
movsl
inc
filds
dec
inc
fs
mov
jmp
mov
aaa
sbb
xchg
mov
leave
arpl
and
xor
cmpsl
mov
outsb
push
push
xor
test
int
in
test
ds
inc
xor
mov
es
shlb
int3
cld
sbb
push
mov
cmpsl
ret
jl
xchg
mov
mov
pushf
fs
mov
fwait
cmp
sub
lahf
repnz
cmp
in
mov
inc
ja
jle
mov
mov
movsl
and
sbbb
test
lods
push
cmp
inc
ds
movsl
and
sbb
push
mov
imul
cmp
add
sub
xor
mov
in
adc
mov
or
or
xchg
xor
lret
inc
mov
enter
mov
das
cmp
lock
mov
cmp
pop
mov
in
imul
je
xchg
enter
stos
jge
jl
jle
cmpsb
inc
or
mov
aaa
inc
mov
in
jbe
sbb
adc
addl
loope
or
add
inc
shrl
lock
cltd
dec
jbe
aad
pusha
stc
jecxz
dec
or
add
jne
sbb
repz
push
pushf
mov
iret
aam
out
add
lock
mov
sbb
mov
pop
xchg
adc
arpl
repz
jb
mov
or
les
sbb
jb
push
dec
lods
mov
push
and
scas
push
pusha
adc
xor
sub
xor
sbb
cmpsb
jecxz
subl
cld
sub
dec
in
cmc
push
mov
shrb
test
jmp
int
adc
mov
or
inc
fbld
jnp
pop
cmpsb
add
insb
call
ror
cmpsb
jns
fsubr
mov
push
sbb
addr16
pop
xchg
ficoml
mov
cmp
add
and
test
and
or
mov
push
sub
fdivrs
pop
dec
mov
fsqrt
lret
iret
dec
lods
push
xchg
fdivs
pop
dec
mov
test
sub
cs
dec
jb
lret
mov
out
mov
push
stc
cmpsl
insb
mov
outsl
push
mov
shrl
dec
and
dec
jbe
ret
stc
into
pop
xchg
in
enter
mov
inc
mov
cmp
mov
inc
ss
int3
sti
inc
or
divl
movb
xchg
and
dec
mov
jge
push
xor
mov
cmp
xchg
pop
pop
xchg
pop
fsubrp
shr
jecxz
mov
and
pop
pop
das
xchg
enter
sbb
orb
mov
cmp
push
xlat
adc
nop
mov
mov
int
mov
or
mov
sbb
mov
jmp
mov
and
aam
jg
inc
insl
fnstenv
repnz
pop
mov
sbb
xor
test
or
scas
mov
sti
push
js
test
insl
cmp
fdivp
mov
dec
aas
xor
les
fidivrl
ficoml
mov
jle
cmp
sbb
jne
gs
popf
mov
icebp
jl
inc
pop
loopne
xchg
int3
jg
pop
add
notl
inc
sbb
repz
inc
xor
shrb
jb
mov
sub
cmp
add
mov
mov
or
mov
pop
jno
ret
fld1
insb
mov
fimull
cmp
pop
sub
dec
mov
insl
mov
cmpl
adc
jbe
mov
in
jae
mov
loopne
and
push
mov
mov
jne
add
lret
mov
ret
mov
scas
push
sarb
stos
mov
add
mov
push
sub
in
pop
decl
or
xor
out
scas
and
mov
les
hlt
xchg
jns
add
mov
mov
pop
xorl
leave
nop
sbb
or
addr16
shrl
cltd
fmull
mov
test
sub
fwait
imul
adc
jno
pop
test
or
or
push
clc
push
sbb
sarb
xchg
cmc
mov
jle
sbb
int3
rolb
inc
pop
push
pop
negl
mov
hlt
js
inc
sti
mov
pop
into
adc
and
mov
adc
mov
hlt
std
scas
or
mov
shlb
in
cmp
push
stos
inc
lods
jne
fnstenv
mov
test
jnp
adc
mov
push
xor
fdivrl
jno
ret
scas
mov
push
divb
mov
movsb
imul
scas
stos
imul
pop
jl
add
sbb
cmpsl
subb
push
xchg
mov
ljmp
lds
xchg
stos
mov
ret
lahf
mov
pop
mov
sub
sbb
push
mov
and
mov
inc
out
lahf
cmc
add
sbb
subl
and
fs
daa
mov
addb
adc
inc
mov
xchg
cs
mov
add
adc
mov
test
push
jbe
push
xchg
cwtl
sbb
enter
jle
das
gs
sbb
daa
cmc
mov
pop
in
xchg
lods
jp
push
stc
inc
dec
imul
inc
iret
cwtl
loop
clc
sti
jno
cmp
ds
sub
adc
iret
fwait
into
cmpsl
jecxz
xlat
sahf
mov
lret
int3
cwtl
lret
movsl
scas
lock
fmul
jnp
sbb
jp
adc
pop
dec
sub
fwait
scas
fldt
xchg
lds
test
sbb
inc
orl
adc
imul
cmp
pop
lods
loope
les
cltd
xchg
aaa
mov
ja
movsl
inc
test
scas
inc
movsl
leave
cli
jo
adcl
pushf
jnp
xor
jo
pop
xchg
aas
xchg
int
je
addl
xor
repnz
test
inc
xchg
mov
mov
xor
enter
cld
mov
ret
enter
out
fcmovne
sbb
mov
rcrl
push
dec
out
adc
cs
les
lea
pop
xor
jmp
jae
mov
mov
aad
enter
xor
pop
sub
dec
sbb
sbb
cmpsl
mov
jo
xor
rcrb
jns
icebp
sub
shll
and
mov
out
fdivr
aam
mov
int
clc
mov
dec
pop
sub
inc
sbb
mov
scas
xchg
stos
pop
negb
mov
stos
fs
xchg
dec
mov
pop
test
cmpsb
fidivs
mov
pop
iret
mov
push
nop
or
mov
and
es
add
shlb
mov
xchg
sbb
xor
out
retw
out
sbb
sahf
fdivr
mov
movsl
inc
movsl
call
es
outsb
cmp
mov
popa
mov
shlb
mov
mov
popa
mov
push
or
or
mov
push
adc
mov
addb
pop
loopne
enter
std
jb
sarl
cwtl
out
pop
sub
push
ds
sbb
icebp
and
popa
adc
mov
jbe
lcall
cmc
sti
mov
aaa
ja
inc
jmp
fxch
sbb
inc
fs
outsb
push
sbb
fmull
xor
scas
mov
gs
nop
or
test
stos
jb
sub
lahf
inc
pusha
fiadds
cli
leave
push
icebp
mov
ss
sti
mov
add
lods
jno
xor
subb
dec
mov
sub
lods
or
inc
mov
adc
lcall
mov
jecxz
ds
sarl
or
std
and
add
jmp
inc
jno
inc
xchg
test
iret
push
rorl
xchg
jb
lea
popa
mov
lea
mov
jge
push
mov
add
mov
cmp
jp
loope
xor
stc
popa
inc
add
mov
pop
jg
cwtl
jno
aam
scas
dec
rorl
push
test
imul
fisubrl
std
cmpsb
aaa
jae
sbb
pop
inc
sahf
or
xchg
jge
pop
adc
jmp
adcl
mov
push
outsb
subl
mov
cmc
inc
stos
adcb
jo
sbb
lods
or
scas
aaa
mov
cli
jnp
inc
mov
fildl
fwait
stos
push
or
mov
pop
data16
and
dec
pop
lahf
test
mov
insl
jmp
rolb
mov
sub
call
cmpsb
inc
fwait
enter
dec
inc
hlt
js
cwtl
or
in
sbb
add
mov
dec
fisubrs
fcomps
inc
sub
xor
stos
fwait
sub
or
daa
pop
andb
adc
mov
movsb
lahf
lahf
lret
jecxz
imul
mov
sub
mov
call
sub
jne
fcomip
push
jne
push
mov
cli
stos
or
mov
pushf
ds
xchg
pop
das
int
inc
icebp
mov
insb
pinsrw
ret
sbbl
test
lods
movsl
icebp
lcall
pop
jo
sub
mov
pusha
push
pop
icebp
or
cmp
fwait
leave
loop
inc
sarb
or
jno
mov
mov
mov
sub
push
mov
out
jecxz
sbb
push
mov
mov
mov
jmp
sti
pop
aam
aas
mov
lahf
iret
sbb
out
xchg
and
stos
sub
dec
xchg
dec
cmpl
inc
and
xor
enter
int
xor
fs
mov
pop
sbbl
clc
add
fistpl
sti
lsl
or
lret
mov
dec
adc
push
test
add
cmp
inc
jmp
and
jbe
adc
dec
popf
les
sbb
hlt
mov
or
sub
imul
pop
jae
mov
xchg
mov
sbb
sbb
fbstp
mov
lds
dec
insb
fsubl
jbe
popa
sub
pop
or
roll
jno
inc
mov
in
add
jne
sbb
xchg
fwait
xchg
cwtl
mov
mov
lds
in
cli
mov
scas
ja
mov
mov
cmp
call
idivb
sahf
mov
jp
clc
sti
mov
jecxz
cmpsl
nop
mov
mov
int
cmc
inc
add
out
sti
es
lret
movsl
dec
cs
std
test
jecxz
mov
loop
push
in
stc
xchg
jbe
jge
and
xchg
movsl
jnp
aam
sub
cmp
subb
jle
mov
fisubl
sbb
xchg
fistl
pushf
aad
xchg
jmp
sub
jecxz
pushf
enter
and
mov
mov
mov
ret
js
push
cmp
jno
adc
or
add
enter
or
test
ret
mov
pop
icebp
cmpsb
mov
cli
repz
fistpl
push
test
cmc
push
lcall
icebp
fnsave
lds
pop
mov
jl
xchg
aad
inc
repnz
pop
int3
sub
mov
or
xor
aad
rorl
jnp
push
test
or
or
imull
inc
lods
cmp
ficoml
sarb
xor
mov
xor
cwtl
lret
imul
xor
add
adc
out
ds
xorb
push
ds
sti
mov
adc
push
sbb
inc
and
dec
inc
scas
xchg
stos
rcrb
add
test
rorl
mov
shrb
xlat
add
mov
push
arpl
mov
js
sbbl
sub
pop
jb
adc
js
and
add
add
js
cmp
mov
lods
jp
cmp
sti
js
add
mov
pop
jno
xchg
test
push
fcomi
mov
ror
add
dec
inc
mov
loopne
cmp
test
inc
mov
pop
xchg
cltd
inc
movb
sub
aaa
cmp
jo
pop
add
hlt
add
loopne
mov
pop
inc
fwait
lcall
stos
jo
cltd
add
lret
cmp
int3
addr16
fdivs
sub
inc
fcoml
lret
or
int
int
add
push
inc
rcl
stos
add
out
or
cwtl
sub
or
and
lea
stos
repz
inc
push
cmp
push
dec
nop
movsb
ret
testl
movsb
movl
dec
pop
pop
mov
in
cmp
pop
or
ror
add
ds
fildll
ret
pushf
cld
jg
pop
dec
int3
shrb
pop
mov
jo
or
popf
and
xchg
fcmovbe
lcall
aad
ror
subb
das
shrb
xchg
into
xchg
jl
stos
mov
xchg
stc
inc
adc
mov
mov
mov
hlt
lock
xorb
pop
orb
push
ret
insb
leave
inc
inc
movsl
mov
aaa
push
cwtl
sub
movsl
int
stos
push
int
test
mov
lds
pop
sbb
cli
iret
cmp
rcll
cld
sub
rol
add
dec
dec
lods
mov
dec
xchg
mov
dec
movsl
push
mov
fisttpll
push
mov
cltd
mov
mov
pusha
push
mov
mov
cmpsb
mov
mov
push
sbb
shl
inc
sbb
sahf
or
jl
test
mov
jns
mull
add
fisubs
push
and
repz
or
fldenv
ret
repz
mov
sbb
sbb
out
mov
lds
cmp
sbb
add
xchg
dec
jbe
mov
fdiv
sti
push
jnp,pt
shr
repz
je
inc
jae
test
fnstsw
lods
mov
xlat
in
fistpl
in
insb
mov
lahf
cmp
push
mov
mov
mov
ret
inc
fisttpll
or
mov
lea
sub
push
add
jge
mov
add
fxch
mov
mov
mov
adc
sub
or
fildl
aaa
fcmovne
xchg
fcmove
gs
call
adc
mov
cmpl
dec
push
pushf
mov
js
jge
xchg
fcompl
dec
cmp
sub
pop
pop
mov
sbb
adc
jl
clc
dec
lret
aad
ret
lods
popa
xchg
xchg
stos
inc
fistps
dec
jno
xchg
insb
xchg
fldcw
dec
in
inc
mov
inc
inc
sub
pop
xchg
sub
push
movsl
jae
inc
sub
scas
in
mov
jnp
or
imulb
out
dec
in
jg
push
add
frstor
test
lds
jo
mov
adc
movsb
leave
inc
dec
inc
enter
push
jne
aaa
push
repnz
push
dec
repnz
add
mov
and
mov
jnp
push
icebp
js
mov
cmp
stc
mov
inc
or
test
xor
addr16
push
mov
lods
mov
insl
lcall
mov
fwait
loope
sar
add
xlat
sbb
stc
cmp
push
clc
call
mov
adc
mov
inc
insl
jecxz
pop
iret
lods
xchg
fucomp
mov
test
sub
push
mov
lret
xor
dec
sbb
or
addl
es
and
add
sub
sub
jbe
mov
movsb
in
inc
adc
sbb
mov
pop
inc
mov
pop
inc
mov
jne
cmpsb
cmp
sbb
lods
mov
int3
icebp
cwtl
cli
imul
and
dec
imul
lret
mov
xchg
test
sbb
stc
cmp
bound
dec
subl
push
xchg
fmull
push
adc
sbb
jp
mov
add
inc
xchg
pushf
cmp
xchg
int
xchg
int3
mov
inc
fdivrs
xchg
lahf
xchg
mov
xchg
mov
mov
ret
repz
cmp
pop
fisubrs
call
xor
sarl
mov
xchg
decb
dec
lret
dec
xor
popa
test
mov
fistl
das
sarb
test
stos
in
jae
insl
mov
xor
push
ffreep
rcrl
dec
dec
pop
add
in
loope
rcll
sub
sahf
mov
push
iret
into
xchg
into
inc
sahf
adc
aaa
in
mov
rclb
xchg
and
xchg
or
lret
jecxz
cwtl
adc
inc
pop
sti
outsl
or
test
mov
fwait
dec
les
frstor
stos
push
sub
xor
and
inc
mov
xchg
xchg
jge
fcmovne
pop
lds
pop
dec
les
or
sbb
cmpl
jns
and
inc
mov
sub
imul
cmp
mov
test
and
mov
fdiv
mov
xor
or
mov
add
cmp
xchg
xor
sbb
fidivrl
stc
arpl
mov
sub
das
or
lahf
xchg
fiadds
xor
lcall
inc
mov
sahf
jecxz
sub
loopne
mov
xchg
in
jge
mov
push
jbe
lret
mov
dec
pop
stos
add
cmp
lock
fists
inc
fildll
test
lock
lock
leave
adc
pop
mov
inc
sbb
sbb
cmpsl
loop
cmp
jnp
or
push
movsl
rcll
clc
test
pop
stos
push
and
mov
sub
repnz
ret
push
out
pop
int
jge
push
mov
pushf
iret
pop
insb
cwtl
adc
xchg
das
add
mov
xchg
sub
mov
xchg
sub
push
mov
sub
mov
sub
arpl
sub
sti
dec
jge
popf
lahf
adc
ljmp
scas
inc
ja
fimull
clc
mov
xchg
roll
or
lret
push
jnp
and
fildll
stos
inc
jne
dec
xor
xor
push
xchg
mov
jb
lret
bound
mov
pop
mov
cmp
clc
cmpsb
push
in
jmp
xor
sub
movsb
ljmp
inc
pushf
imull
lret
loopne
lahf
out
loope
loop
sti
mov
in
mov
xchg
lahf
pop
sbb
fs
mov
mov
cmp
push
sbb
dec
and
pop
xor
mov
lods
mov
sbbb
jns
mov
ss
pusha
std
rcll
or
xor
jge
push
dec
fstpt
fists
mov
leave
stc
add
and
lret
test
jle
scas
pop
icebp
lcall
xchg
leave
loop
jae
rol
es
push
add
xchg
or
frstor
jp
vdivps
adc
xor
fldt
or
dec
jb
fwait
lea
pop
decb
movsb
fs
sub
inc
mov
idivl
push
dec
mov
or
mov
popa
push
mov
imul
push
lock
xchg
mov
xchg
ds
push
mov
mov
addb
jbe
jmp
add
aam
jne
and
movsl
mov
shll
and
add
out
test
shrl
mov
stos
dec
xchg
adc
testb
xchg
shlb
jns
pop
sub
push
ljmp
fisubl
aas
sub
mov
test
xchg
ja
cmpsl
inc
mov
mov
pusha
mov
idivb
mov
in
loope
repz
pop
xchg
add
call
hlt
imul
inc
mov
xor
fwait
sahf
mov
xor
mov
fld1
jb
fisttps
inc
test
mov
add
mov
inc
inc
mov
aaa
nop
subl
jne
inc
sbb
rol
dec
mov
popa
fs
das
push
sbbl
int
sbb
loop
jne
lret
jecxz
push
inc
pop
push
xor
call
xchg
loop
jecxz
and
popf
mov
xor
fwait
dec
scas
je
mov
dec
add
push
cmpsl
push
pop
mov
imul
jmp
fistps
pop
into
mov
cmp
cwtl
imulb
imul
fdivrs
push
stos
lret
or
pop
scas
sbb
mov
aad
mov
mov
adc
roll
leave
jo
jmp
mov
xchg
mov
dec
repz
int3
jne
dec
jl
jo
mov
adc
inc
mov
jecxz
jns
cmpsb
int
clc
aas
fbstp
cmp
hlt
mov
mov
popf
iret
add
movsl
dec
pop
sub
pop
add
add
and
xlat
test
inc
jb
jo
xchg
ficomps
pop
lods
test
push
dec
or
jmp
clc
jl
xchg
popf
mov
jae
popa
rorl
cmp
add
and
mov
mov
fisubrs
dec
dec
mov
lods
adc
pop
adc
dec
push
jg
aam
insb
inc
mov
add
ret
jno
jno
or
and
repnz
pop
outsl
orl
pop
jb
ljmp
imul
push
movsb
pushf
adc
jge
jg
cmp
dec
push
jge
dec
fwait
cmp
mov
mov
lds
inc
fdivrs
add
and
addr16
icebp
xchg
adc
push
lods
push
sub
mov
loopne
push
mov
pop
fdivrl
addr16
sbb
pop
and
lahf
aam
imul
in
movl
insl
xor
xor
mov
std
jae
popf
cltd
dec
cmp
sbb
test
jae,pn
ss
jmp
out
mov
and
movsl
shrl
in
ret
stos
repnz
stos
inc
in
mov
xchg
shll
ret
scas
cmp
and
xchg
xor
mov
xchg
dec
mov
or
pushf
std
stos
aad
jno
sbb
fisttps
push
aam
mov
add
subl
je
pop
or
fstp
scas
fcmovnb
dec
mov
jno
sysexit
repz
cmpsl
std
mov
and
je
jo
rorl
dec
fidivrl
pop
repz
mov
out
popl
popf
rolb
inc
inc
adc
es
popf
mov
mov
sbb
lods
xchg
adc
repnz
orb
adc
test
push
cmp
pop
js
lods
je
adc
ret
loopne
mov
rcrl
out
pusha
push
ret
nop
add
cmp
adc
jecxz
stc
sbb
icebp
sbb
aad
pop
iret
cltd
sarb
adc
sub
adc
push
jg
sbb
jge
aaa
mov
into
push
xchg
clc
mov
jae
add
fmul
dec
cltd
rclb
jg
xchg
xchg
push
push
add
add
dec
mov
inc
xchg
jle
fwait
lds
push
push
lahf
lret
jmp
cmp
repnz
mov
mov
scas
xchg
pushf
and
in
mov
mov
jge
xchg
dec
mov
sahf
and
mov
test
sbb
cmpsl
cltd
mov
jb
jge
cmpsb
mov
in
bound
loope
fldcw
push
xchg
inc
test
mov
xchg
les
mov
sub
mov
out
xchg
dec
pop
lock
call
pop
mov
inc
mov
loopne
jmp
lret
jecxz
movl
addb
xor
test
lock
inc
insb
es
and
fldcw
sub
cld
jae
hlt
or
pop
and
mov
mov
lods
jg
imul
aam
sub
mov
mov
fisubrl
pop
push
test
fistl
mov
mov
adc
jge
test
scas
mov
into
ss
aas
fistpl
in
js
jle
add
std
pushl
cmp
xor
cmp
sub
sbb
test
mov
orl
pop
aam
dec
pop
fs
psubw
jae
les
ret
jg
outsb
repz
js
adc
sbb
bswap
push
ret
roll
addr16
fistpl
jne
jge
inc
cmp
mov
into
add
pop
xchg
sti
daa
mov
lock
cltd
rorl
lods
outsb
test
inc
mov
dec
mov
cmp
sub
pop
dec
jno
jp
push
shrl
lret
lcall
hlt
dec
aas
mov
dec
aas
or
pop
repz
sbbl
mov
cmp
lcall
fnstcw
fisttpl
arpl
les
cmp
lods
jg
jp
mov
jb
adc
mov
xor
xor
ss
aam
mov
jnp
inc
mov
mov
or
and
mov
cmp
and
aad
sub
and
imul
xor
adcb
xchg
jp
les
mov
dec
enter
dec
add
inc
push
inc
call
inc
rolb
mov
mov
cmpsb
rorb
mov
xchg
imul
cld
fldenv
imul
xchg
and
lret
xor
fldt
jle
cmp
mov
test
pop
mov
inc
in
xor
mov
dec
movsl
and
nop
int
and
push
pusha
jmp
rcrl
jae
sub
mov
fisttps
and
add
test
mov
andb
je
push
or
or
ret
mov
jp
fstl
or
out
ja
xor
clc
fsubs
sti
pop
ficomps
pushf
fsubl
or
fdivs
mov
mov
out
aam
inc
imul
sahf
xchg
movsl
push
xchg
inc
int
mov
pop
inc
mov
data16
iret
and
mov
push
fadd
test
movl
ja
push
fwait
xor
jns
je
rcl
lret
movl
push
sub
movsb
mov
ds
in
out
inc
adc
mov
xchg
mov
sti
sub
rcl
jns
sahf
test
or
adc
out
aaa
mov
imul
pop
pusha
test
dec
and
add
pop
cs
sub
xchg
orl
adc
dec
push
push
rcrl
mov
fwait
jmp
inc
sub
jle
scas
mov
pop
push
loop
push
jmp
cmp
repnz
ret
out
mov
insl
cmp
aaa
mov
and
cmpsl
inc
sub
insb
aaa
jp
lahf
cltd
pop
sub
int
xor
mov
mov
cmp
inc
xor
sti
rcrb
xor
inc
sahf
xor
mov
or
pandn
shrl
add
pop
fidivrl
inc
movsl
inc
iret
and
jo
pop
ret
stos
cltd
insb
in
push
sahf
lcall
mov
ja
cmc
sbb
test
mov
push
sbb
fcmove
pushf
dec
pop
lds
or
jbe
arpl
xchg
dec
sbb
das
push
mov
dec
stc
jge
push
ret
and
in
xchg
xchg
add
cmp
mov
movsb
shll
mov
mov
jne
mov
or
repz
push
icebp
cwtl
mov
pusha
outsl
aas
sbbb
and
clc
mov
enter
test
in
cmp
nop
dec
inc
cmc
clc
pop
jne
cmp
das
dec
mov
lret
inc
pop
and
xchg
inc
fucomip
repz
mov
jecxz
xchg
cs
lds
sub
cmp
addr16
cltd
faddl
mov
push
dec
push
imul
and
rol
orl
je
dec
inc
int3
std
outsb
push
cld
cmp
lods
repz
fdivl
mov
pushf
ljmp
out
sbb
mov
xchg
sub
pop
paddd
cmp
inc
mov
fnsave
popa
bnd
repz
and
or
imull
call
fisubs
dec
adc
xchg
jp
mov
adcb
push
xchg
sahf
scas
push
sbb
call
dec
ret
mov
dec
aaa
mov
ret
or
adc
pop
enter
mov
inc
push
lcall
pop
jbe
scas
mov
sub
mov
jge
pushf
sub
cli
inc
test
dec
sub
adc
lock
jae
jnp
out
cmc
ret
inc
stos
ss
add
cwtl
lret
stos
adc
js
add
xor
push
or
pop
xchg
lret
pop
inc
push
xchg
shl
push
scas
jo
in
rol
push
test
out
roll
push
fistl
jl
and
sbb
push
sbb
push
movsb
stos
pop
iret
popf
ss
movsl
aad
and
cmc
mov
repz
push
mov
mov
test
cmp
add
cmp
mov
push
mov
xor
adc
int3
sub
and
mov
sti
shrb
dec
inc
push
mov
pusha
and
mov
dec
cltd
jecxz
sbb
aad
ja
mov
and
out
cmp
push
scas
shr
rep
popf
div
stos
les
xchg
decb
js
xor
xchg
mov
dec
cmc
cmp
sub
mov
push
or
movsl
loop
cwtl
bound
test
nop
movsb
shl
das
test
jg
mov
test
jae
fisubl
and
aaa
ret
xchg
shrl
sub
jp
into
aaa
inc
mov
cmpl
dec
pop
imul
pop
push
jbe
xor
pop
push
shlb
jecxz
inc
sbb
das
add
cmp
ds
popa
addr16
test
sahf
jo
mov
adc
rolb
subl
xor
push
ffree
inc
scas
push
xlat
add
test
add
adc
mov
mov
and
mov
jg
incl
xchg
mov
sub
jge
lods
jmp
mov
push
adc
adcl
out
mov
xor
add
loopne
mov
mov
shrl
aas
call
int
cmpsb
ret
mov
jmp
mov
ret
xchg
mov
mov
fs
sahf
cmp
xchg
sub
pusha
jae
xlat
scas
and
mov
rclb
repz
dec
xor
test
adc
push
and
hlt
mov
inc
cwtl
movsb
shll
cmpsb
js
lds
xchg
mov
or
fs
mov
or
add
add
mov
push
add
dec
jo
pop
movsl
test
bound
push
pop
mov
xchg
push
test
cmp
jmp
loop
hlt
js
jmp
jnp
and
inc
cli
int3
inc
inc
sbb
xor
and
nop
push
sub
mov
fstpt
pop
inc
pop
out
scas
rcr
adc
fdivr
sbb
cmp
inc
inc
cmp
rclb
cld
sbb
imul
fcmovb
xor
lods
inc
insl
movsb
sarl
cli
aas
stos
cmc
std
clc
jl
cltd
sahf
dec
aad
inc
pop
shll
lock
mov
mov
mov
cmpsb
mov
fisubl
and
xlat
fistpl
xchg
movsb
sbb
popa
or
push
aaa
fwait
ret
push
rcll
ret
push
rclb
mov
andl
loopne
popa
jo
xchg
jo
xor
mov
insl
repnz
inc
ds
shrb
sbb
ja
cltd
or
jp
dec
add
or
mov
int3
data16
adc
dec
shll
mov
cli
aad
dec
in
mov
fwait
lret
xchg
inc
arpl
push
ds
fnstcw
mov
jle
les
pop
and
sbb
jae
sbb
jno
jo
hlt
xchg
ljmp
ja
mov
xbegin
xor
jge
movsb
inc
mov
push
lahf
sbb
loope
fmulp
xchg
sti
mov
clc
jl
fidivl
xor
mov
cld
and
ds
mov
enter
lret
inc
ficompl
cs
adc
push
sets
cmp
es
mov
adc
data16
or
pop
lcall
push
mov
push
xchg
mov
inc
cmpsb
mov
sub
das
mov
and
lahf
add
jmp
mov
jl
roll
repz
push
iret
lods
enter
inc
cmp
jbe
pop
add
xor
fcmovnbe
aaa
call
ret
loopne
xorl
push
fadds
jmp
mov
dec
aaa
xchg
dec
sbb
repnz
iret
lds
aam
lods
add
push
and
jge
push
mov
dec
test
mov
icebp
repz
ficomps
sub
xlat
cltd
call
ds
sub
in
clc
movsl
test
shll
inc
push
and
xchg
jbe
in
outsb
jecxz
and
rorb
dec
mov
or
ds
jl
arpl
dec
inc
adc
xor
in
add
dec
xor
pop
imul
inc
lods
mov
ja
aaa
fistl
dec
loope
icebp
xor
mov
test
aam
sub
adc
ds
jns
rcll
jo
movsb
gs
dec
jp,pt
pop
hlt
pop
mov
adc
ret
push
ja
sar
inc
lea
pusha
lret
hlt
xor
pop
stos
jns
and
jge
pop
adc
xchg
daa
add
mov
dec
ss
cmp
push
mov
jmp
fcmovnbe
lret
cld
mov
lea
mov
add
aad
jle
filds
cmp
repz
pop
push
inc
mov
xor
insl
cmpsl
and
mov
mov
add
dec
fs
repnz
inc
aam
cmc
inc
push
mov
mov
scas
cmp
adc
mov
add
or
idivb
js
not
in
js
std
jb
jmp
and
adc
push
cmp
dec
addl
pop
sbb
in
stos
sub
imul
fs
call
ja
aam
or
sbb
lods
push
das
xchg
fwait
xor
and
int3
sub
and
push
dec
test
test
dec
icebp
jle
lods
inc
rcrl
inc
repz
lret
jecxz
cmp
mov
dec
adc
add
push
and
dec
cmp
and
lds
sbbb
test
test
sti
mov
icebp
fisttps
pop
stos
mov
xchg
test
or
fisttps
inc
pop
push
xor
push
les
shrb
data16
inc
stos
fisttpl
mov
pop
adc
gs
enter
jmp
cmp
xchg
add
mov
movsb
sbb
mov
mov
push
mov
xchg
fsubrp
lods
cmp
inc
popf
stos
adc
aaa
cwtl
aas
les
inc
inc
addr16
push
out
pop
je
sub
fsubs
mov
sbb
adc
sahf
stc
mov
roll
mov
sbb
aad
inc
pop
mov
lret
movq
repz
iret
mov
arpl
enter
or
mov
add
int3
iret
imul
lret
push
adc
cmp
and
inc
test
fnstcw
fwait
inc
push
xor
movsb
ss
pop
cli
pusha
dec
cmpsl
xchg
stos
leave
or
nop
arpl
add
mov
ja
inc
sub
pop
sbb
jb
nop
cltd
aad
int
push
mov
mov
test
mov
lock
popf
scas
fcomip
or
jle
ds
rclb
loopne
sbb
sbb
rcrl
and
into
les
xchg
pop
cmp
jmp
into
je
and
clc
add
lahf
shr
jnp
dec
adc
sti
xchg
add
xor
and
rcrl
push
dec
mov
fadd
cmp
push
cmp
icebp
das
lds
mov
loopne
std
adc
push
mov
inc
clc
add
jo
fsts
or
sbb
loop
ret
dec
xchg
nop
psadbw
xchg
repnz
ljmp
dec
pop
lds
add
push
xchg
mov
lock
dec
movsl
or
icebp
sbb
ds
jb
or
or
testl
xchg
sub
lret
cwtl
lret
push
pop
pop
mov
inc
xchg
js
fucomi
repz
jg
jp
push
dec
push
mov
and
jge
arpl
rclb
aad
dec
push
mov
cmp
stos
cmp
dec
fistps
or
sub
mov
pop
stos
clc
gs
outsl
mov
mov
test
fwait
mov
add
fisubrl
fsubrs
out
xchg
decb
mov
fnstenv
rcr
popa
dec
mov
and
cmp
jl
lret
sbb
std
push
daa
inc
out
lret
pop
mov
mov
mov
adc
xor
inc
sbb
aam
push
nop
xlat
stos
movsl
jb
in
and
frstor
mov
pop
fsub
pop
push
lods
mov
cltd
test
jp
push
test
xchg
test
push
inc
push
int
mov
mov
jns
leave
movsb
mov
in
dec
cltd
lods
inc
push
sub
sub
mov
decl
jbe
sbb
mov
dec
addl
or
xchg
out
add
and
mov
stc
rcrb
pushf
cmpsl
jnp
test
xor
test
hlt
out
mov
test
push
mov
jmp
ja
int
dec
xchg
pop
push
gs
aam
shll
nop
testl
pop
mov
cmc
mov
inc
mov
int3
lret
sbb
cmc
arpl
enter
stc
mov
fwait
sbbb
rorl
push
loopne
or
dec
jne
adc
ret
mov
test
lods
movl
mov
gs
cmpsl
push
sub
xor
mov
inc
pop
pop
stos
or
jne
inc
enter
testl
cli
push
leave
cli
and
or
adc
adc
push
je
cmp
sti
fistpl
sbb
shl
js
add
loopne
vpshld
movsb
mov
mov
add
cmp
add
movsb
cmpl
adc
hlt
scas
fadds
mov
ret
lcall
mov
out
sbb
add
jo
mov
mov
int
lret
jecxz
push
mov
mov
divl
push
insl
fwait
cmp
or
mov
jecxz
mov
gs
push
pop
into
stos
fbstp
into
add
aaa
je
cmp
ret
inc
js
add
cld
or
ljmp
dec
xor
cld
dec
fwait
lret
out
in
push
imul
std
loop
mov
xchg
lret
cmp
add
movlps
subl
xor
add
xchg
xchg
cmp
inc
push
pop
sbbl
jge
test
inc
aaa
mov
push
aaa
jmp
scas
inc
fwait
leave
xchg
mov
ds
push
xchg
fs
popf
xorb
dec
xchg
mov
pop
mov
cmp
xchg
jmp
xlat
insb
js
lea
fwait
daa
mov
fwait
mov
inc
cltd
fsubl
out
nop
fwait
add
cmpsl
sbb
jae
push
pushf
jnp
cltd
out
repz
shrb
pop
push
mov
rcr
or
lea
lcall
push
cmp
jmp
nop
dec
jl
adc
andb
jno
pop
pop
das
push
sbb
sti
inc
cli
pushf
adc
mov
push
ljmp
inc
jg
sub
pop
jns
outsb
out
in
imul
cmp
or
jnp
fsubrl
dec
popa
aad
dec
or
xchg
push
test
dec
push
xor
enter
test
popf
fists
and
xor
inc
aad
cmp
les
mov
aad
cwtl
dec
and
jg
jp
dec
dec
adc
arpl
or
pop
ja
jnp
dec
loopne
adc
das
fwait
aas
or
sub
or
lods
sbbb
inc
mov
mov
xor
cmp
xchg
neg
xchg
into
inc
mov
push
add
push
or
jl
or
lret
hlt
lea
aad
movl
into
cli
testb
cmp
pop
ficoml
sbb
xchg
xchg
adc
xor
icebp
xlat
lret
fisttpll
inc
out
dec
sub
pop
std
push
shll
fidivl
cs
cld
movsl
test
movb
adc
cmp
imul
dec
jno
mov
dec
repz
into
inc
mov
fldcw
iret
jno
fucomi
push
xchg
jle
scas
xlat
push
fyl2xp1
hlt
iret
mov
rcrb
call
sbb
xlat
or
pop
lret
xchg
test
outsb
mov
jp
cwtl
dec
outsb
adc
in
lea
fsubrs
xchg
fldenv
roll
cmp
out
enter
jns
and
clc
cwtl
pushf
jbe
lret
insb
dec
fmul
push
gs
push
test
or
outsl
push
push
xchg
lcall
add
adc
mov
add
xchg
scas
add
jnp
or
lret
mov
sbb
add
jbe
ret
lds
in
enter
xchg
cmp
aam
sub
clc
add
aaa
xchg
outsl
or
dec
sbb
and
pushf
mov
popf
xor
movsb
jno
inc
push
dec
lcall
daa
insb
inc
imul
jge
dec
movsl
pop
test
pushf
adcb
pushf
xchg
fldt
jae
test
push
pop
nop
jge
mov
pushf
lahf
repz
adc
inc
aad
js
cmp
push
xchg
add
and
sub
hlt
cmc
shrb
xchg
push
es
push
pop
xchg
imul
mov
jbe
pop
cltd
int3
add
out
and
mov
sub
mov
dec
dec
mov
pop
pop
mov
dec
bnd
push
mov
sar
call
dec
clc
xorl
xor
call
lret
push
ret
cmpsb
cmp
add
add
mov
pop
fwait
orb
push
icebp
shrl
lea
push
outsl
and
ds
sbb
cmp
les
push
fildll
dec
xor
xchg
pop
in
movsb
lods
subb
or
jae
rclb
xchg
mov
dec
mov
jae
fcmovnb
inc
jle
cltd
cli
and
arpl
pop
cs
sub
pop
or
inc
scas
icebp
sub
xchg
std
movsb
jecxz
popa
iret
rcrb
push
subl
adc
test
push
adc
sbb
cwtl
movsl
jl
cmpsb
movsb
and
fdivs
pop
fsubs
dec
adc
jne
and
popf
sti
or
insb
push
or
xor
lret
jns
inc
shrl
int
mov
sti
dec
call
lahf
test
pop
cmp
and
cltd
mov
ret
lock
cli
stos
push
mov
push
inc
sbb
sbb
and
mov
sahf
jnp
mov
imul
rclb
add
pop
test
test
mov
jne
addr16
int
mov
xchg
cmpsl
icebp
add
cmp
test
inc
xchg
int3
out
stos
sub
addb
jne
add
pushf
cmp
cltd
out
decb
pop
nop
jp
xchg
sub
shl
xchg
pop
enter
dec
test
pop
xor
or
and
jne
addr16
ret
add
fisubl
out
cmc
fwait
xor
sti
push
fidivrs
jo
stos
lret
lods
das
sub
cmp
xlat
xchg
icebp
rclb
rolb
cmp
add
test
lea
icebp
rcll
pop
pop
mov
inc
in
push
jns
fwait
pop
test
sbb
pop
testb
sti
jno
mov
pop
clc
add
mov
js
adc
jo
loopne
jae
subb
pushf
psllw
icebp
into
pop
xor
rorl
mov
cmp
stos
mov
enter
repnz
out
lds
jl
les
test
inc
xor
inc
scas
xchg
mov
movsb
das
mov
sub
aaa
nop
adc
mov
lods
dec
test
rcrb
mov
sbb
mov
jmp
xorl
and
and
or
orl
mull
dec
orb
pop
pop
jmp
stos
mov
xor
in
pusha
xchg
or
push
sbb
clc
int3
jp
cmp
and
mov
jl
orl
mov
bound
jno
jnp
pusha
test
inc
pop
cmp
mov
cmpl
jae
mov
mov
arpl
mov
sbb
and
sahf
jp
ror
mov
mov
sub
xor
push
jg
js
sbb
push
dec
xor
ret
fistl
in
iret
imul
cltd
pop
outsb
cmpl
sbb
test
mov
inc
lcall
xchg
sub
adcb
test
add
add
out
dec
cmp
mov
lret
cmp
mov
std
xor
ja
jo
das
repz
jmp
fidivrl
mov
xchg
xchg
cmpsb
push
cmpsb
xlat
sub
popl
call
jb
fwait
nop
xor
out
cltd
fwait
sub
adc
sbb
and
fmul
ror
les
add
dec
jb
sbb
test
push
sbb
sbb
lods
movsb
or
sbb
dec
cmpsl
insb
jbe
inc
mov
nop
xor
cmc
aam
push
call
xor
sbb
sbb
sub
lahf
shlb
or
cld
cmp
scas
mov
lock
test
mov
sub
xchg
test
sar
inc
xor
jae
mov
stos
push
inc
adc
iret
jns
dec
fwait
sub
icebp
test
das
dec
fsubrs
jecxz
fmuls
sub
xchg
adc
mov
jge
rcr
je
sub
pop
adc
or
xchg
mov
lds
lcall
jne
jmp
xor
sbbb
cmp
sbb
adc
jns
pop
fdivs
rcll
cwtl
mov
ret
adc
idivb
jne
das
fsts
mull
data16
pop
in
sbb
xchg
add
push
push
add
sbbl
cmpsl
mov
cld
mov
dec
mov
dec
lret
xchg
dec
fwait
mov
repz
pop
test
add
ljmp
dec
lods
xor
popf
lret
bound
push
xor
xchg
into
sbb
jnp
test
push
xor
fistpl
test
inc
mov
fwait
jae
mov
lods
push
sbb
xorl
decl
rolb
add
add
push
loopne
sbb
add
push
out
repnz
inc
cli
mov
adc
jp
push
ja
gs
inc
lahf
inc
add
pop
inc
sbb
xchg
xor
mov
inc
dec
pop
lcall
aaa
mov
mov
cmc
sbb
pop
push
cmc
mov
pop
pop
test
dec
add
adc
inc
pop
push
xchg
pop
mov
mov
push
out
bound
jge
add
ret
mov
pop
sbb
imul
cwtl
lret
cmp
out
fwait
xchg
inc
dec
arpl
cltd
sbb
imul
mov
aad
jl
xchg
test
xchg
outsb
push
testl
adc
fisubrl
cwtl
scas
testl
or
and
inc
mov
mov
add
mov
or
pop
popf
cmc
jmp
xchg
lock
adcl
out
jmp
xor
xchg
lahf
xchg
out
dec
fcmovnu
repnz
cmp
ja
movsl
ret
fsubs
mov
rcl
std
jp
frstor
call
inc
cltd
enter
dec
pop
dec
in
jns
sbb
cmp
sbb
and
dec
das
cmpsb
jle
sub
test
jmp
div
mov
testb
sbb
add
jp
movl
pusha
les
hlt
dec
push
mov
xor
sbb
inc
inc
dec
push
cmp
mov
push
sbb
lods
dec
lcall
cmp
mov
sub
rolb
adc
imulb
test
xchg
fistl
stos
fnsave
mov
cmp
movsb
mov
cwtl
adc
test
fucomi
andb
mov
popa
js
js
dec
xchg
or
sub
pop
bnd
dec
inc
cwtl
dec
and
xchg
jge,pt
sbb
repz
xor
dec
aaa
jle
call
lar
aaa
mov
iret
dec
pop
into
sbb
and
movl
jne
pop
push
xchg
jmp
shlb
dec
mov
jle
adc
adc
mov
movsl
push
or
iret
fists
mov
test
or
int
mov
ret
pop
dec
lock
out
hlt
and
add
sub
shlb
sub
xchg
jnp
outsl
rcr
cmovp
xchg
lret
adc
dec
sbb
xchg
pop
push
push
cmp
mov
mov
jge
aad
add
cmpsl
rcrb
mov
dec
push
cs
cmpsl
push
adc
enter
xchg
push
nop
mov
popf
fisttps
sbb
repz
pop
sub
call
gs
pop
jp
pop
xchg
cmp
and
xchg
je
inc
cmpsb
cld
lret
mov
dec
sar
stos
push
sbb
mov
fcmovnbe
pop
push
and
inc
loope
adc
aaa
xor
imul
aam
push
dec
pop
push
sub
cmpsl
sbb
mov
sbb
out
int3
add
repz
dec
mov
lret
inc
inc
cwtl
sahf
add
cmp
leave
pop
pop
dec
mov
movsl
dec
pop
jl
pop
jl
pop
ret
test
push
push
icebp
imulb
mov
testl
gs
sub
ds
mov
inc
pop
into
out
sbb
lret
fadds
vpmovusqw
push
mov
lret
mov
sbb
popa
sub
repz
xor
mov
mov
mov
push
bound
jmp
into
sbbl
pop
rcrb
lret
add
pop
inc
sbb
add
dec
fsubrs
and
popf
xor
adc
fwait
mov
sbb
xor
push
aaa
push
mov
push
addr16
int3
jns
sbb
leave
ret
in
inc
cmp
mov
xchg
dec
inc
mov
push
stos
rcrl
loopne
aam
bound
push
loope
push
sti
mov
roll
pop
hlt
xchg
sti
add
or
add
mov
xchg
add
sub
jmp
lds
imul
dec
cmpsb
icebp
jmp
xor
pop
xor
roll
sub
outsl
idivb
or
movsl
pop
popa
add
push
mov
mov
fsub
sbb
sbb
add
pushf
mov
mov
push
sbb
inc
out
dec
jae
dec
cli
push
sub
xchg
cwtl
dec
std
jne
xchg
pop
xchg
sbb
inc
add
test
sub
ds
repnz
lods
pop
cltd
jbe
inc
out
pop
fbld
pop
pop
js
pop
cmpsb
lock
out
inc
fs
lods
rcl
insb
xchg
es
or
jns
aas
fwait
sub
and
mov
pop
push
adc
xorl
jp
cmpl
or
cmp
mov
cmc
inc
adc
pusha
push
lret
cmpsl
dec
lahf
cmp
daa
jbe
pop
rolb
stc
jl
mov
xor
repz
mov
lret
jns
push
test
push
jp
pop
cmp
pop
and
dec
lcall
mov
mov
lds
jnp
mov
outsb
add
jecxz
push
push
shll
jno
pop
scas
dec
push
test
xchg
dec
add
enter
lahf
inc
add
xchg
leave
jno
sbb
dec
repnz
jb
std
pushl
and
stos
int
je
movsl
iret
jno
fucomp
push
push
xlat
push
mov
xchg
or
jo
cmp
stc
mov
mov
mov
sbb
mov
dec
push
lret
inc
xor
fidivl
sub
and
in
fiaddl
sbb
inc
mov
or
or
inc
inc
xor
sbb
inc
mov
push
sub
pop
dec
aaa
out
fwait
ret
pop
dec
mov
lret
rorb
pop
dec
outsl
mov
dec
mov
stos
repnz
push
dec
xor
add
dec
jb
mov
lcall
add
js
cmp
xchg
mov
idivb
hlt
mov
mov
push
push
cs
dec
mov
cmp
lods
enter
lahf
inc
xor
insb
bound
cs
dec
cmp
andl
mov
push
pop
mov
xchg
mov
stos
icebp
subb
cmpsb
stos
add
out
jns
jo
jle
sbb
insb
pusha
xchg
mov
xor
jg
dec
xor
xorl
dec
subl
pop
test
mull
mov
or
ja
lods
movsl
sub
sti
fisubs
sub
jg
data16
mov
imul
cltd
dec
and
movsl
xlat
sbb
xor
mov
addr16
jp
inc
pop
add
fisttps
xor
sub
lahf
repnz
ljmp
jle
rcll
push
dec
mov
in
lods
cmp
stos
pushf
add
jp
mov
xor
mov
and
xchg
push
mov
scas
sbb
test
cltd
and
test
pusha
test
pop
mov
dec
daa
mov
js
repz
cmp
std
push
adc
dec
and
and
jl
xchg
adc
jae
mov
jp
sarb
mov
insb
ret
add
bound
jae
in
shrb
xchg
dec
mov
jecxz
int
mov
mov
test
cmpb
mov
test
fldcw
mov
sbb
icebp
mov
dec
add
pop
movsb
or
mov
jno
dec
ss
rcrb
push
cmpsl
add
shlb
cmpsl
jl
ret
mov
sbb
push
aam
or
jne
stos
filds
test
add
adc
test
sub
test
dec
dec
ret
jecxz
cmp
jae
les
lods
push
cmp
cli
fsubs
aam
cltd
or
fsubrl
xor
push
and
call
sbbb
sub
mov
mov
cwtl
pop
or
push
int3
inc
and
mov
cmp
cwtl
pop
fisubl
mov
push
or
out
enter
insb
mov
dec
dec
xchg
pushf
in
dec
mov
sbb
xor
mov
add
xchg
mov
mov
test
fldcw
mov
sbb
icebp
mov
dec
add
pop
movsb
or
inc
int3
adc
daa
stos
push
cld
inc
scas
xchg
push
inc
xor
out
sub
sub
out
lods
cmc
sbb
out
scas
mov
mov
push
aam
sub
sbb
lock
das
fisubrl
xor
mov
pop
and
fmull
inc
int3
in
psubusw
sbb
repnz
inc
sub
jnp
xchg
in
mull
and
fisubs
ret
add
ljmp
xor
xor
mov
inc
sub
sub
pushf
pusha
jo
or
fnstenv
cmp
popf
iret
and
pop
xor
ret
jl
xchg
cmc
xor
scas
lods
rol
or
mov
out
enter
ret
xchg
cmc
movsl
lods
inc
test
pop
pop
nop
test
sbb
push
xchg
or
lods
xor
xor
jmp
xor
jae
scas
jb
mov
outsl
dec
mov
push
pop
test
mov
inc
icebp
stc
sbb
fwait
ljmp
js
rol
in
ss
sbb
pop
add
sub
dec
sarb
lret
sbb
stos
xchg
sbb
xorl
stc
push
jno
into
lods
inc
fwait
dec
loop
movsl
jecxz
rcrl
or
xchg
enter
cmp
lret
inc
movsb
je
lds
cltd
outsb
out
incl
pop
jae
mov
xchg
fs
lods
dec
or
movl
aaa
mov
sbb
stc
dec
bound
jl
jb
nop
mov
pop
enter
mov
imul
cmpsl
jo
addr16
mov
outsl
test
mov
popa
jl
sbb
jnp
cmp
in
int
mov
dec
adc
sbb
xor
sub
leave
imul
js
adc
lret
sub
push
les
mov
pop
cli
jmp
xor
sti
into
push
icebp
js
call
cmp
stc
mov
inc
or
test
aas
in
imul
xchg
adc
sbbb
imul
cmc
mov
mov
ret
pop
and
inc
mov
loop
add
add
push
or
popl
xor
dec
shrb
insl
lods
adc
pop
test
sub
mov
test
pop
fst
stos
and
and
stos
int3
pop
sub
jb
fcmovb
out
mov
xchg
cmp
fmuls
in
pop
sahf
dec
mov
into
pop
test
lods
lea
jnp
ret
loopne
out
scas
imul
inc
inc
xchg
mov
in
rol
lds
aas
mov
inc
mov
add
or
and
cmp
lea
pop
add
out
sub
pop
stos
xchg
loop
jmp
jae
fcmovu
xor
xchg
pop
in
mov
mov
xchg
fdivrs
adc
xchg
dec
lahf
stos
xlat
stos
inc
lcall
cmp
stc
leave
and
fmul
cmp
movl
ror
xor
add
xchg
mov
jmp
inc
aaa
adc
ja
mov
sbb
lcall
xor
jmp
pop
jg
cmp
adc
data16
dec
and
and
test
mov
push
inc
lea
cmc
fildll
mov
dec
inc
xor
pop
gs
or
call
xchg
cmp
cmp
pusha
in
xchg
sbb
xchg
dec
aaa
bound
add
cmpsb
push
lods
push
sarb
scas
inc
stos
push
push
pop
cmp
test
and
test
int
xchg
aad
bound
xor
movsl
ss
inc
mov
push
sub
sarl
and
daa
push
std
mov
adc
ret
insb
scas
pop
int3
rcll
dec
lret
cwtl
push
nop
jnp
sbb
shrb
xor
xor
clc
jl
clc
jle
add
jecxz
dec
inc
pusha
shll
fmuls
mov
xor
push
fdivrs
cmp
jo
cmp
cltd
cmpsl
ret
test
lret
mov
mov
pop
mov
popf
repz
mov
enter
xchg
jnp
push
cmp
dec
mov
jp
mov
cmp
sub
mov
fmul
jno
mov
push
jmp
mov
jno
xchg
sbb
in
ret
cmpsl
fnstcw
cwtl
pop
sub
jns
lods
in
add
cld
or
popf
mov
and
js
pushf
adc
nop
xlat
xchg
out
push
push
insb
mov
scas
dec
mov
cmc
ljmp
gs
bound
xchg
dec
jb
mov
sub
dec
xor
adc
jno
mov
bound
cmp
cli
test
mov
out
nop
ljmp
sub
or
mov
jl
movsl
ljmp
inc
sbb
rcll
pop
stc
cmp
int
test
adc
in
pop
add
out
sbb
mov
clc
xchg
fld1
jns
aaa
dec
ss
enter
push
xor
jle
lea
mov
aas
adc
or
rcll
sbb
xorb
inc
lea
xor
jns
xchg
cli
pop
popf
inc
out
mov
std
push
mov
popf
adc
lahf
imul
inc
inc
mov
icebp
ret
ret
inc
sbb
sbb
js
dec
cmpsl
mov
cmpb
push
clc
jbe
outsl
push
stos
mov
jbe
push
inc
push
dec
sbb
mov
ljmp
int
dec
jno
cmp
rcll
andl
or
xor
lock
or
or
pop
jbe
push
ss
aam
mov
stos
xor
xchg
cmpsb
ds
stos
xchg
fucomi
cmc
cmpb
jle
or
sbb
imul
js
cmp
fld
push
ss
or
add
push
jns
leave
adc
fbld
jp
dec
fnsave
inc
sbb
bound
jp
xchg
enter
xchg
xor
and
fisubrs
push
push
pop
mov
ret
cltd
jmp
mov
dec
inc
bound
pop
pop
fsubp
repz
cmp
scas
dec
out
fdiv
mov
jb
mul
add
jl
add
lock
cmp
test
mov
pop
xchg
pop
dec
shrb
inc
scas
cltd
push
test
and
mov
les
adc
fs
and
lock
mov
or
outsl
or
test
mov
cmp
scas
rol
pusha
mov
or
mov
dec
in
ret
subl
or
pop
inc
shlb
add
cmp
mov
push
fldt
inc
jno
push
adc
mov
mov
ret
fld
jl
jp
scas
add
mov
je
pop
cmc
mov
iret
sub
fdiv
imul
mov
imul
cld
jne
fsubs
imul
repz
adc
pusha
fiadds
addr16
pop
ja
xchg
je
cld
lds
jg
sbb
mov
pushf
dec
movl
push
mov
ror
sbb
lahf
rcrl
test
jne
push
mov
mov
pop
pop
sbb
and
mov
test
xchg
stos
jge
stos
in
in
sbb
mov
mov
pop
test
dec
push
testl
loope
jecxz
jle
xchg
leave
loop
and
sub
pop
sbb
add
lret
rclb
inc
push
pusha
xchg
dec
out
xchg
ljmp
sub
mov
mov
lret
push
js
sbb
pop
outsb
aaa
fs
das
inc
je
sbb
cmc
dec
jb
stos
nop
aam
xchg
daa
icebp
jne
sbb
mov
xchg
shr
ss
mov
js
sti
jmp
mov
inc
fnsave
loopne
aad
ja
arpl
test
cmpsl
mov
idiv
sub
dec
sarb
xchg
stos
adc
mov
fwait
sbb
sub
jno
push
xor
and
lea
js
nop
pusha
test
sbb
mov
sub
xchg
pop
add
cmc
in
lock
sbb
mov
or
js
push
xchg
faddp
ret
scas
popa
cltd
shl
sbbl
dec
mov
out
dec
aam
inc
les
mov
lods
push
sub
mov
or
jb
sti
nop
xchg
lcall
mov
mov
sbb
jle
dec
push
adc
sub
sub
sbb
mov
mov
cmp
jmp
mov
pop
jecxz
sbb
adc
jecxz
cmpsl
mov
adc
xchg
mov
adc
mov
mov
adc
shll
ret
xor
aam
sbb
pop
xchg
mov
and
mov
ret
insl
das
movsl
and
cmp
ficoml
adc
mov
fs
mov
mov
rcrl
jle
push
jns
inc
js
adc
fistps
push
lock
cmp
lock
ret
mov
inc
xor
inc
push
mov
jmp
or
push
xlat
insb
imul
push
fld1
jb
pushl
lcall
inc
or
cltd
in
jmp
test
jge
dec
mov
fmulp
daa
adc
mov
xchg
mov
or
and
inc
lods
aam
pop
rcrl
aas
fnsave
fnstsw
fstpl
and
mov
mov
and
fs
gs
or
fcoml
mov
stos
test
and
inc
pop
push
faddp
dec
mov
lret
cmpsl
xchg
mov
mov
insl
sarl
or
dec
mov
stos
ja
or
xor
push
xchg
sbb
es
cltd
xchg
popf
repz
jmp
push
mov
mov
or
add
es
mov
adc
out
add
dec
xor
aaa
in
pop
test
imul
sahf
and
pushf
mov
mov
in
xor
mov
sahf
jp
fbld
std
sub
xor
dec
sbb
mov
inc
sub
jbe
pop
stos
add
inc
inc
jbe
inc
ret
push
xchg
mov
sti
jge
cmpsb
cmp
and
fwait
mov
inc
lods
dec
out
add
mov
shrl
aam
les
in
test
scas
dec
sbb
cmp
add
aad
mov
std
stos
mov
adc
push
and
icebp
push
inc
dec
mov
push
inc
mov
jecxz
cmp
push
add
lret
pushf
test
mov
loop
and
lods
clc
xor
sbb
lahf
sahf
pop
lret
out
pop
jp
cs
push
ljmp
scas
push
je
pop
xchg
adc
sbb
cli
dec
jle
ja
mov
stc
mov
mov
andb
xlat
test
cwtl
dec
loopne
setbe
jp
repz
ret
enter
jg
sub
sbb
jecxz
test
pop
in
adc
inc
push
daa
mov
adc
daa
jge
dec
jb
cmp
inc
repnz
cmpsb
ret
fildl
dec
cld
mov
pusha
std
imul
addr16
cmp
rcl
outsl
ret
pop
dec
push
outsb
cmp
add
cmpsl
cwtl
sub
fs
add
addr16
ss
cmp
mov
popf
lret
xchg
fldl
push
dec
jae
jp
cmp
scas
mov
popf
lret
bound
rcrb
pop
aam
push
inc
or
pop
cwtl
jg
pop
ss
movsb
jae
lods
sbb
cltd
sub
pop
adc
fwait
movsl
dec
fmuls
or
dec
lcall
rolb
sub
popa
lahf
add
or
add
out
gs
je
incb
adc
int3
mov
inc
mov
stos
mov
xor
and
mov
data16
es
pusha
sub
int
hlt
jl
lea
xor
lret
mov
jno
enter
pop
movsb
faddp
mov
dec
flds
pop
dec
adc
call
incl
push
lret
jbe,pt
pop
fdivr
xor
sub
cmc
daa
orb
in
push
hlt
mov
sbbb
xor
call
jne
lret
inc
cmpsl
aad
ret
xchg
adc
xor
jno
enter
gs
sub
mov
sbb
lods
fucom
xchg
stos
inc
test
aam
call
pop
lret
stc
test
insb
xor
cmc
mov
fs
jo
andl
jl
or
dec
aam
stc
shrl
fwait
jge
xchg
or
inc
push
fisubs
xlat
insb
adc
cmpsl
add
jae
in
mov
pop
mov
mov
pop
ljmp
pop
adc
out
je
fldpi
mov
into
je
mov
xor
mov
add
je,pt
pop
cmp
fiaddl
pop
xchg
jnp
pop
push
adc
pop
mov
clc
mov
jno
leave
fs
and
aad
aas
mov
dec
fwait
sahf
imul
adc
mov
cmp
inc
mov
arpl
mov
pop
inc
ret
mov
pop
jno
test
jge
push
or
lcall
dec
rsqrtps
jp
mov
sub
jle
sub
fsubrs
filds
add
pop
inc
lret
adc
rolb
inc
orb
push
push
mov
inc
jl
mov
push
cmp
popf
insl
push
mov
mov
jl
or
inc
add
fcmovnu
sbb
fcoms
xor
xchg
std
mov
dec
dec
push
lds
out
hlt
jge
mov
addr16
shll
fistl
xchg
inc
movsb
testl
dec
iret
rol
call
mov
cmp
mov
push
lcall
cli
cmpsl
mov
addr16
scas
out
pop
dec
and
js
fidivs
and
mov
dec
mov
fucomp
jae
ret
or
mov
insl
sbb
cwtl
test
loope
jp
mov
push
stos
nop
pop
ljmp
mov
lods
jp
shrb
xchg
lods
xchg
pop
inc
movups
pop
out
mov
andl
sbb
or
mov
cmp
addr16
xchg
call
pop
sbb
xchg
fs
mov
in
and
test
fcmovnu
clc
gs
ds
fwait
out
xchg
leave
jecxz
leave
or
mov
jne
movsl
mov
dec
rcll
push
aaa
stos
shr
repz
and
in
jne
data16
xor
jmp
clc
sti
fstl
lock
rcr
add
test
mov
xor
add
push
test
stc
push
andps
jns
jb
cmp
jbe
test
lods
xchg
lods
jne
mov
jecxz
lods
mov
sbb
mov
xchg
xchg
push
cmpl
jge
xchg
test
cmp
add
jge
stc
xchg
push
iret
ja
pop
cli
pushf
mov
xchg
xchg
sub
push
frstor
and
cltd
xchg
scas
cmp
mov
in
cmpl
add
ss
xchg
shrl
mov
into
pop
jge
rcr
pop
mov
lahf
dec
mov
mov
rorb
and
test
dec
add
sub
push
push
ficoms
imul
jne
enter
hlt
mov
popf
push
pop
fs
inc
mov
stc
call
es
jmp
xchg
mov
xchg
or
je
cld
mov
push
jno
jg
lds
xchg
jg
data16
dec
dec
and
mov
stos
pop
jg
xor
or
mov
xor
gs
cmpsl
insb
or
iret
pop
push
adc
clc
sub
test
pop
popa
push
shlb
fs
cmp
mov
cmp
in
cmp
fisttpl
xchg
mov
test
mov
nop
inc
sbb
arpl
mov
iret
lahf
xchg
fucomp
jbe
cmpsl
inc
fidivrl
les
out
push
mov
pop
jns
and
cmp
pop
mov
out
enter
jle
in
movsl
lods
lret
cltd
sbb
int
gs
clc
loope
mov
shl
mov
sbb
sbbl
lret
push
inc
adc
mov
fcomps
sbbb
mov
sbb
imul
mov
inc
stos
pushf
adc
fistps
out
jne
stc
sbb
sub
cmp
clc
stos
add
les
inc
pop
xchg
outsb
push
jno
pop
sub
inc
sub
inc
push
jge
sub
sub
in
ficomps
or
outsl
jle
mov
jo
pop
das
inc
shlb
ja
leave
sbb
rclb
clc
add
xchg
cmp
sbb
jns
sub
ret
mov
inc
push
ljmp
xor
fbld
mov
mov
adc
popl
and
mov
daa
in
cmp
test
fisttpl
ficoms
cmc
pop
in
pop
dec
mov
fildl
test
inc
mov
test
popf
fiadds
repz
sbb
shll
lods
mov
add
cld
jg
jmp
and
ret
inc
arpl
shl
jb
mov
push
jg
je
out
mov
lret
fisttpll
or
push
xchg
pushf
lcall
les
jo
fmul
mov
test
push
inc
push
fisubl
cmc
mov
leave
ret
inc
stos
test
xchg
cmp
enterw
lahf
adc
mov
and
sets
sbbl
cmpsl
xlat
popf
or
or
in
push
js
std
lahf
ficoms
je
sub
out
sub
push
lods
mov
lcall
cmp
into
jle
pop
jl
outsb
xor
mov
test
inc
mov
dec
inc
mov
int
imul
hlt
call
mov
gs
xorl
sub
ja
dec
hlt
cmp
inc
pop
notl
pusha
mov
mov
xchg
ds
iret
cmpsl
push
mov
lret
movsl
mov
ja
and
push
dec
sbb
push
push
pop
mov
mov
jge
movl
xor
int
xchg
sbb
cmpsl
fcoms
sbb
and
imulb
add
loopne
fcoms
mov
xchg
mov
rcll
pop
fisubs
gs
repnz
pop
mov
sbb
popa
or
sub
js
loop
iret
dec
add
push
dec
aam
aam
xchg
rorb
dec
jmp
push
stos
dec
lods
and
pop
mov
pushf
dec
jno
push
inc
fs
rcr
jo
loop
enter
sbb
sub
es
je
lret
inc
sbb
xor
sub
lcall
adc
pop
add
mov
out
dec
pop
inc
imul
and
mov
mov
and
setne
mov
pusha
inc
les
aas
ljmp
aas
fisubrl
inc
dec
cmpb
repz
test
adc
repz
lahf
sub
fildll
repnz
in
test
push
fcoms
pop
push
pop
adc
xor
xchg
pop
les
and
mov
pop
jno
xor
xchg
mov
movsb
lahf
and
out
sub
push
ss
mov
sub
or
idiv
sub
mov
pop
push
cmp
fwait
mov
and
icebp
jg
pop
test
push
cltd
xchg
and
pop
jnp
or
cmp
out
cwtl
int3
and
hlt
xchg
cltd
xchg
enter
cmp
push
sub
ds
inc
cmc
hlt
clc
movsb
adc
inc
mov
call
addr16
lret
mov
fnstcw
stc
jb
insb
ret
xor
inc
sbb
test
or
imul
dec
jbe
or
add
movsb
pop
mov
xchg
jbe
rclb
mov
lcall
dec
xor
mov
xchg
cmc
stc
lods
fisubrs
jbe
mov
dec
jp
inc
shrb
sbb
subb
imul
rorb
add
lgs
ret
mov
dec
ljmp
bnd
scas
push
je
push
or
fdivs
in
mov
arpl
xchg
cmpl
pusha
jmp
mov
or
icebp
jno
cmc
xchg
lods
xchg
pop
scas
xor
xchg
push
test
mov
bound
cmp
adc
fdivr
leave
sbb
mov
jle
push
mov
mov
sahf
xchg
fcom
jne
lcall
ss
pop
int
pop
mov
cmp
outsb
ret
sti
mov
add
push
sbb
loope
fadds
call
mov
xlat
adc
ja
fistpll
arpl
mov
pop
stos
push
dec
sbb
sub
xor
push
inc
js
fwait
daa
rcr
lcall
and
fs
mov
dec
fidivrl
fiaddl
mov
scas
jle
jmp
popf
inc
pop
jl
pusha
test
xchg
jl
xor
inc
push
mov
popa
mov
mov
popa
cmp
pop
int3
sbb
std
push
mov
pushl
mov
lret
inc
dec
cmp
hlt
pop
cmp
jb
aad
add
lea
pop
pop
dec
or
mov
jne
popf
adc
lea
xchg
aad
ss
imul
in
jne
dec
mov
jmp
dec
or
add
fcmovnb
jae
cmp
push
mov
hlt
js
xchg
jl
push
inc
ret
outsb
adc
int3
lret
sbb
aad
cld
enter
ja
inc
sub
pop
adc
push
pushf
xor
fisttpl
sbbl
xchg
mov
test
hlt
mov
aaa
popa
inc
pop
push
mov
repnz
dec
scas
mov
loop
cmc
fldl
insl
adc
aaa
ja
stos
inc
sub
push
imul
cwtl
sahf
dec
pop
mov
or
mov
popf
adc
cmpsl
dec
je
std
pop
lret
pop
icebp
sbb
test
xor
add
jecxz
or
popl
movsb
sbb
mov
xchg
imull
inc
rolb
or
adc
lods
cmp
fmuls
testl
and
and
xorl
xor
fsubrs
mov
fidivl
mov
jle
add
es
mov
nop
sub
pop
test
push
fbstp
dec
and
sbb
add
stos
mov
sbb
push
sub
dec
fistpll
fdivs
xor
lret
jnp
aas
stos
mov
stos
daa
dec
ss
sbb
outsb
push
or
dec
mov
push
enter
sub
dec
lods
cmp
mov
pop
mov
imulb
jge
dec
push
nop
cmp
mov
cmpsl
lahf
enter
cli
push
ret
aam
shrb
and
xor
mov
hlt
cmp
or
cmpsb
out
fmuls
je
subl
test
add
xchg
int3
iretw
es
fwait
jns
insb
mov
and
lahf
aas
push
cmpsb
lods
dec
xchg
dec
subl
inc
pop
or
cmpsb
sbb
jmp
xchg
mov
pop
push
pop
pop
shll
iret
fwait
js
js
fistpll
aaa
adc
sub
mov
movsb
js
cwtl
lret
movsl
dec
push
cmp
mov
xor
imul
mov
jecxz
pop
mov
clc
xor
scas
adc
scas
fadds
repz
push
imul
out
dec
fs
xor
mov
xor
dec
lds
mov
ss
lea
add
inc
mull
jmp
gs
adc
sbb
jp
inc
and
movsb
ret
fidivrs
add
pop
xlat
test
jge
dec
jo
cmc
std
andl
addr16
mov
push
cmpsb
mov
xchg
jecxz
inc
stc
mov
test
movsb
repz
mov
xor
and
rcrl
in
jae
sub
and
jb
bound
add
dec
fwait
mov
jecxz
scas
in
jns
fdivl
xor
arpl
dec
xor
dec
hlt
xor
mov
push
dec
cmp
movsl
iret
in
cmp
pushf
lds
cld
andb
sbb
add
jns
imul
and
mov
das
add
je
dec
jns
mov
push
mov
pop
out
mov
mov
stc
cmp
lds
cmpsl
addb
mov
in
xchg
add
fiaddl
jae
mov
mov
add
iret
testb
jnp
xor
adc
aam
pop
dec
xlat
add
pop
adc
outsb
enter
aaa
popf
mul
icebp
mov
arpl
mov
add
jl
shlb
cld
sti
mov
cmp
stos
hlt
das
or
into
sbb
test
or
mov
arpl
xor
pop
mov
and
sub
xlat
xor
sbb
les
fmul
in
or
stos
je
sub
mov
lods
add
push
clc
cmp
das
scas
xchg
inc
test
mov
pushf
xor
clc
or
inc
fcoms
test
inc
mov
stos
jge
outsb
inc
pop
outsb
push
dec
push
sti
cwtl
shrb
sbb
scas
nop
push
out
mov
out
pop
mov
adc
xchg
mov
adc
dec
shl
xlat
js
push
adc
insl
or
or
addr16
xor
xor
push
sbbl
mov
pop
jle
dec
icebp
out
daa
jb,pn
sti
mov
mov
mov
cwtl
xchg
clc
push
and
xor
fs
cs
or
add
int3
inc
out
inc
fcomps
rcrl
mov
mov
inc
cmovge
mov
dec
adc
or
cltd
lahf
stos
mov
adc
fsubs
in
dec
adc
call
inc
add
fmulp
rorl
int
xor
mov
gs
shlb
cmpsl
lds
or
addr16
stos
xor
pop
inc
mov
and
pop
movsb
ret
add
push
adc
incb
sbb
enter
cmp
push
mov
dec
addr16
jnp,pt
sahf
xchg
and
lret
inc
aas
je
adc
push
lods
repz
jne
inc
popf
push
stos
cmp
xchg
jb
jg
fadd
mov
pop
sub
push
and
xchg
sub
cmp
add
adc
ror
dec
mov
push
pushf
jb
iret
xchg
inc
cwtl
jg
imul
pusha
in
add
xor
pop
push
cmp
outsb
mov
lds
lahf
push
hlt
lods
jno
mov
mov
xor
je
pop
sub
pop
and
scas
pop
pop
cmp
ret
clc
lret
in
mov
jae
or
cltd
into
imul
daa
loope
jno
adc
sahf
xlat
push
inc
mov
dec
lods
sahf
pop
xchg
or
ror
mov
or
sbbl
faddl
mov
or
add
loop
jnp
pop
ds
lret
imul
dec
and
mov
cmp
push
xchg
stos
popf
add
jo
cmp
jmp
gs
dec
adc
sbb
mov
and
cmpsl
push
jb
rcrl
mov
mov
daa
adc
in
jmp
mov
hlt
incl
fists
sti
and
loopne
les
dec
repnz
pushf
sub
mov
xchg
in
xor
sub
hlt
sub
cs
fwait
shl
stc
xlat
andl
movl
xchg
mov
cli
aas
stos
push
outsb
dec
scas
cmp
inc
mov
cmp
mov
jae
xor
xor
pusha
jae
enter
mov
cmpsl
scas
shlb
sahf
mov
sbb
xor
int3
sbbb
cli
data16
jl
icebp
sbb
xchg
xlat
fwait
leave
loop
and
xlat
in
lret
mov
mov
pop
outsb
push
imul
xchg
int
iret
and
jp
lcall
leave
sub
inc
xchg
push
ja
add
dec
cmc
pop
mov
cltd
insb
int
jnp
iret
dec
cmpsl
movsb
push
adc
insb
dec
xorl
mov
and
cmpsb
inc
aas
fsub
pop
les
movsl
test
xor
cmp
push
xchg
jg
push
imul
lock
adc
sub
mov
ret
pop
dec
adc
outsl
jmp
push
xchg
dec
sub
repz
int
mov
sbb
push
dec
iret
sbb
test
lcall
arpl
shlb
and
dec
pop
pop
push
pop
mov
xorl
add
add
inc
mov
sub
cmp
pop
jno
lods
pop
das
or
cltd
sbb
adc
jge
test
fprem1
or
mov
sbb
aad
in
dec
push
mov
test
or
data16
pop
shlb
inc
push
dec
lods
pop
pushf
jbe
or
in
xor
shlb
aaa
mov
add
dec
pop
cld
push
sub
mov
xchg
xchg
fnsave
cmpb
dec
popa
fwait
ret
xchg
shlb
into
popa
sub
call
cmp
idivb
jecxz
ds
and
xchg
imul
and
les
dec
popf
push
and
das
jno
or
jmp
mov
jae
fsts
ss
shr
fstpl
push
dec
out
jae
or
mov
inc
test
or
pusha
push
ja
sbb
adc
lea
enter
cmpsl
shl
add
outsl
cwtl
mov
mov
adc
push
movsb
std
cld
in
js
fcompl
dec
data16
aas
repz
in
jge
jle
inc
out
sbb
in
xor
fsubrs
loopne
cwtl
and
cmpsb
popf
pop
sub
adcl
mov
inc
inc
mov
cmp
cmp
xlat
inc
vpunpckhdq
pop
mov
sbb
outsb
imul
mov
dec
cmp
cs
les
xchg
cltd
call
pop
inc
adc
bound
cwtl
pop
xlat
cli
into
add
inc
test
lds
adc
lods
sbb
adc
xor
xor
jp
mov
sub
in
shlb
fdiv
jmp
std
inc
mov
testl
test
xor
sub
cmp
je
cmp
in
test
mov
push
adc
adc
and
pop
xchg
fcmovnu
mov
lods
sahf
sub
or
and
or
and
cmp
dec
popa
pop
jb
idivl
repz
or
rcrb
mov
rol
cmp
test
loopne
pop
js
lahf
testl
adc
push
jp
gs
cmp
adc
test
inc
stos
xchg
adc
movsl
std
and
mov
jnp
push
lock
inc
xor
sub
imul
filds
pop
mov
or
aas
in
and
das
push
loopne
cmp
out
in
std
iret
fwait
mov
leave
pop
xor
idivl
add
stos
xchg
rclb
test
idiv
sti
sbb
sub
mov
xchg
and
ja
in
xor
xchg
push
xchg
sbb
or
in
push
cmp
dec
sub
gs
subb
pop
sub
dec
lock
adc
jge
dec
insb
adc
std
cli
jnp
inc
mov
mov
push
repz
inc
fstl
mov
test
inc
add
dec
xlat
mov
lcall
adc
lock
aam
adc
push
pushf
add
mov
loopne
add
data16
adc
movsl
fwait
push
and
iret
mov
xor
xor
mov
cmp
xor
outsb
mov
xorb
dec
pop
mov
pusha
insl
mov
mov
push
xor
push
cmc
sbb
fiadds
in
scas
dec
inc
or
mov
cltd
insb
mov
sub
dec
sbb
shrb
test
push
clc
sub
jg
xchg
push
aam
lods
pop
clc
and
in
inc
push
sbb
pop
inc
inc
mov
je
dec
test
test
pop
push
mov
andb
rolb
jge
xchg
push
mov
jmp
sbb
inc
pusha
movsl
dec
arpl
bnd
lods
lods
pop
popf
cmp
repz
add
sub
pusha
pushf
loope
pop
cmp
cmp
adc
jne
movsb
inc
inc
negb
mov
jbe
or
insb
jbe
xchg
ja,pt
loopne
shlb
aaa
push
mov
mov
mov
inc
mov
jae
enter
cmp
inc
cmc
clc
cmp
lods
jnp
movsb
icebp
fnstenv
add
inc
mov
rclb
adc
or
pusha
scas
lock
push
sbb
stos
aad
ja
loopne
dec
sbb
test
jne
jns
gs
int3
addr16
decl
sub
fcmovnbe
xchg
pop
andb
stos
movsl
mov
xchg
mov
push
dec
mov
into
jae
fisttpl
mov
pusha
arpl
inc
fadds
sbbb
mov
call
imul
mov
inc
mov
mov
aam
fstps
sub
sti
enter
pop
out
jg
nop
pusha
addb
loopne
mov
pop
dec
sarb
loopne
mov
push
addr16
xor
add
pop
cmp
lahf
aad
inc
xor
lret
sub
jge
ja
adc
scas
lcall
loop
aam
test
popa
adc
int
imul
mov
inc
inc
inc
pop
stos
shr
ss
cmp
push
inc
adc
inc
push
pop
add
sub
sbb
add
aad
or
add
sbbl
mov
xchg
push
les
insl
lods
imul
scas
mov
add
dec
test
add
popf
fidivrs
mov
push
cmp
roll
dec
push
shlb
pop
adc
inc
movsb
dec
fsubrl
enter
xor
cmpsl
xchg
xchg
cs
cmp
dec
cwtl
rep
pop
aas
xchg
es
add
dec
loop
test
popf
movsb
scas
subb
fidivrl
stc
mov
and
dec
aam
lods
xlat
push
andl
fld1
jne
divl
cltd
enter
inc
ss
xchg
fcmovnu
lds
ret
aad
inc
lods
jmp
fwait
dec
sahf
dec
or
inc
mov
mov
lock
movsl
push
and
decb
push
mov
mov
push
fildl
cmp
sbb
add
nop
psraw
mov
pop
dec
pop
nop
lahf
lret
sbb
dec
mov
divb
jg
sbb
inc
mov
mov
push
dec
mov
into
jae
fisttpl
add
fsubrs
sbb
jae
or
mov
lcall
jns
addr16
je
jns
push
push
cmpsl
cmp
fwait
and
in
rorb
xlat
jo
popl
push
je
lods
icebp
jbe
adc
lret
in
add
xchg
and
rorl
pop
and
adc
push
fs
int3
lods
idivb
cmpsb
imul
cs
lea
iret
cmpb
mov
xchg
mov
add
inc
xor
mov
cmc
jne
aad
dec
jo
cmp
sub
sub
mov
loopne
mov
or
cltd
mov
or
add
scas
lock
jmp
xor
dec
mov
iret
inc
sbb
adc
inc
jns
mov
jns
adc
pop
pop
pop
ss
frstor
popa
fiadds
mov
test
loop
push
inc
inc
mov
aas
jg
js
es
sub
arpl
insl
lea
rol
mov
push
xor
ss
leave
and
add
mov
mov
jl
jns
dec
cmp
sbb
push
sbb
addl
xor
pop
sbb
sti
add
lock
imul
in
lds
dec
mov
aad
test
mov
mov
outsb
mov
insb
cmpsl
enter
mov
into
stos
aam
dec
xorl
pop
xchg
lods
pop
jbe
cmp
into
stc
jno
lea
mov
push
es
fbld
loope
sub
shlb
in
outsl
mov
das
out
hlt
stos
fs
les
nop
sub
fwait
imul
scas
push
sub
sub
out
cmc
sbb
cmp
ljmp
rcl
inc
gs
sub
jge
push
ss
cmp
xorl
add
pop
mov
xchg
je
xchg
int
imul
mov
mov
cmp
mov
inc
sbb
jl
inc
pop
add
idivl
xorb
mov
test
xchg
dec
mov
inc
cwtl
sarl
xchg
lret
fdivrs
xor
and
cmp
clc
aam
mov
arpl
shlb
mov
stc
jmp
cmp
jbe
sbb
jno
adc
gs
cmpl
adc
test
aam
fucom
iret
inc
test
dec
and
ja
outsb
push
mov
pop
mov
add
xor
add
jg
mov
dec
xchg
dec
and
sahf
imul
adc
dec
dec
pop
mov
jae
jne
jns
sar
cmp
dec
jp
addl
mov
mov
subl
mov
dec
movsl
test
mov
lock
pop
in
loop
add
push
pop
xchg
insb
add
dec
fsts
inc
ds
pop
es
scas
adcb
xor
sub
sbb
xchg
lds
push
sbb
stos
sub
pop
test
into
clc
sbb
scas
inc
ret
enter
addr16
fwait
aam
fmuls
push
dec
loope
xchg
cmp
mov
pop
mov
adc
dec
pop
xchg
ret
jecxz
je
imul
rcr
mov
and
mov
daa
fs
push
mov
cmp
adc
mov
clc
sbb
cld
mov
loop
mov
movsl
ret
insb
test
pop
lcall
jg
jne
pop
and
xor
inc
popa
movsl
dec
es
jge
dec
xchg
test
mov
scas
fsts
push
lret
jno
dec
outsb
test
fsts
fwait
bound
lahf
fs
fmull
scas
adc
stc
bnd
pop
mov
push
ss
xchg
andl
jb
or
sbb
imul
dec
out
mov
and
pop
fnstsw
fnstsw
in
aas
je
pop
cmc
aaa
jle
mov
mov
push
pop
mov
dec
adc
fstps
push
das
or
iret
jae
cmp
pop
insb
push
cmp
inc
iret
cmpl
lret
fwait
repz
mov
inc
mov
mov
jne
pop
jecxz
inc
jg
mov
jge
dec
mov
mov
xchg
outsl
insl
xchg
test
mov
xchg
lahf
xchg
ss
jb
push
add
frstor
xlat
sbbl
cmp
or
add
idivb
mov
mov
push
adc
dec
inc
dec
scas
cmp
cltd
add
dec
push
jle
stc
ret
sbb
xchg
add
or
jnp
inc
mov
adc
add
or
push
mov
sbb
fbld
cs
movsl
icebp
xor
mov
xchg
jmp
mov
movsl
inc
lcall
inc
dec
ds
rclb
add
stos
mov
pusha
mov
mov
jnp
popl
mov
mov
mov
xchg
divl
dec
les
sar
pop
lods
fnstcw
insl
mov
clc
clc
mov
in
jg
enter
outsb
mov
add
fsubl
mov
cltd
shll
scas
pop
dec
mov
jnp
jns
pop
movsl
jmp
int
sub
mov
push
ret
add
add
addr16
sub
repz
sub
stos
div
or
pop
or
loope
xchg
stos
adc
mov
or
push
cmp
call
in
sbb
outsb
jo
mov
sbb
push
pop
imul
xchg
or
sub
pop
movsl
clc
pushf
xor
sub
mov
cmp
pop
cmpsl
lock
xchg
jae
out
pop
mov
ss
int3
jg
mov
pushf
adc
mov
shll
mov
inc
fwait
divl
mov
xchg
dec
xchg
add
dec
ror
and
dec
inc
repz
jge
sar
lahf
in
stc
cmp
lahf
mov
mov
inc
or
loope
fcmove
nop
ds
jle
movsl
movsl
dec
outsb
push
and
pop
pop
enter
jo
adc
mov
frstor
imul
cmpsl
icebp
or
mov
inc
inc
sbbl
or
and
outsl
shlb
ror
or
and
movsb
ret
es
sub
aas
mov
in
inc
add
or
lock
mov
add
ret
subb
mov
lret
inc
aam
jmp
xor
push
sbb
inc
dec
pop
es
cmpsl
stc
sahf
jae
cmp
pop
daa
cltd
add
sub
mov
and
sbb
xchg
cmp
int
aas
subl
xchg
mov
inc
push
and
xchg
pop
addl
mov
outsl
adc
movl
fdivrp
sbb
sbb
jne
bound
mov
jle
dec
inc
test
ja
lret
stos
dec
jbe
mov
xchg
pop
test
jg
es
bound
jno
push
cmc
mov
scas
imul
inc
test
jb
or
inc
mov
rep
bound
sbb
lret
xchg
sbb
ja
lods
cmp
mov
arpl
scas
hlt
repz
adc
mov
in
roll
sub
orl
andl
jne
dec
sub
js
mov
adc
into
es
add
int
push
fsubrl
cmp
jb
sbb
push
negb
xchg
pop
cmp
cltd
fcoml
mov
xchg
jmp
sbb
mov
jmp
push
mov
push
loopne
cli
mov
push
mov
add
mov
pop
adc
rcrl
dec
ror
faddp
iret
imul
inc
inc
xor
pushf
insb
cmp
pop
xchg
test
in
aaa
jge
mov
lret
xchg
mov
mov
andl
cwtl
sbb
inc
test
fwait
xchg
adc
jae
mov
fisubl
stos
jbe
sbb
stc
or
fs
shr
mov
cli
adc
lahf
leave
xchg
sbb
js
fsubrs
rol
push
mov
inc
orl
andl
rcll
add
adc
dec
push
sbb
and
lret
sub
sub
aad
ljmp
xor
clc
push
mov
pushf
hlt
and
sub
imul
mov
cmpsb
ret
pop
cmpsl
lock
iret
inc
mov
fcomps
sbb
jne
add
mov
push
xor
in
iret
imul
inc
inc
xor
loope
fisttpl
or
or
xchg
push
mov
sbb
jge
pusha
fucomi
mov
lret
cltd
dec
rol
jge
scas
push
xchg
mov
jae
nop
lds
movsl
mov
jg
xor
imul
je
dec
lods
jne
fwait
and
mov
bnd
inc
inc
add
xchg
cwtl
in
or
lods
ds
or
lods
push
mov
push
mov
addb
and
xchg
jmp
add
adc
xchg
ja
into
push
call
jle
mov
insl
rorl
imul
mov
int
jbe
jmp
mov
test
hlt
pushf
xor
call
pop
inc
fld
inc
insl
mov
mov
fistps
mov
ret
lds
sti
mov
xchg
orb
mov
or
je
jp
lret
xlat
addr16
or
dec
hlt
out
arpl
leave
inc
jae
pop
mov
jns
push
inc
test
dec
cmp
lods
jae
or
push
mov
ret
cmp
mov
arpl
fsubrs
or
jl
push
push
pusha
arpl
call
je
fadds
xchg
add
mov
pop
inc
jae
xchg
nop
lcall
aas
ret
mov
jno
mov
xchg
inc
add
andb
ret
adc
pop
jg
inc
pop
inc
add
bound
popa
cmpsl
xlat
js
or
mov
shlb
cli
test
int
imul
aaa
push
mov
rcr
jno
sar
pop
inc
leave
mov
lcall
cmp
jno
sti
xor
cmc
ret
ret
ret
adc
out
fdivrs
inc
jae,pt
outsb
movsl
aam
lahf
xchg
mov
stos
and
xlat
js
jns
or
lea
jae
adcl
cmpsl
pop
or
roll
and
das
cwtl
clc
pop
inc
stos
outsb
ficomps
cmp
xor
scas
jb
dec
les
inc
pop
std
stos
push
cltd
mov
push
cmp
and
scas
jge
push
je
pop
subl
cmp
jae
ftst
dec
in
out
xor
add
arpl
mov
xchg
lcall
cmp
mov
lock
lock
push
push
test
in
xchg
orl
jecxz
sbb
es
xchg
aad
fimuls
or
addr16
shrb
mov
std
mov
aad
push
fildll
pop
mov
repz
jns
sar
lahf
pop
jmp
repnz
sub
sbb
sbb
ror
adc
dec
pop
lret
sbb
jbe
rcrb
sbb
aad
sbb
stos
mov
ljmp
mov
test
cmpsl
pop
or
add
jmp
push
push
xchg
mov
sub
outsl
mov
insl
jno
mov
xchg
mov
mov
inc
add
in
cmp
push
mov
add
dec
mov
movsb
sub
push
mov
pop
xchg
jmp
push
xchg
fwait
jo
inc
sbb
push
cmp
in
pop
enter
enter
and
and
sbb
xchg
dec
ror
adc
sbb
add
stos
sarl
leave
call
pushf
cs
loopne
cli
cmp
test
xchg
in
fldenv
dec
rcrl
cmpsb
ror
adc
sbb
or
jbe
mov
pushf
leave
movsl
cwtl
pop
mov
cmp
outsb
jns
stc
xor
lret
adc
sbb
iret
pop
lret
inc
mov
rcrb
pop
pop
cmc
mov
stos
dec
add
jecxz
xor
ja
cltd
or
inc
mov
mov
or
push
mov
or
rolb
sbb
scas
insb
fcomip
jl
and
sub
leave
test
pop
enter
sub
xorl
jne
movsb
cmp
push
mov
adc
scas
mov
fs
or
pop
movsb
jno
sbb
sahf
lds
ret
aad
inc
add
popf
sbb
hlt
mov
xor
push
xchg
jmp
sbb
loope
aam
xchg
push
sbb
sarl
sarl
int
enter
in
dec
insl
lock
out
incl
sub
stc
jge
dec
push
pop
imul
movsb
sarl
fdivr
pushf
xchg
call
pushf
or
test
mov
pop
test
mov
mov
xchg
repz
pop
mov
out
or
jge
cmp
xchg
into
adc
imul
dec
subb
push
inc
stos
jbe
flds
push
or
lret
xchg
mov
xchg
daa
mov
repnz
cmp
out
clc
cmp
push
mov
or
les
adc
xchg
cmp
lock
and
fs
or
pop
movsb
js
sub
and
imul
pop
cmpsb
jo
pop
test
rcrl
mov
push
xchg
jb
jo
xchg
mov
mov
pushf
mov
lock
les
mov
ja
xor
mov
iret
adc
repnz
add
jecxz
inc
scas
fistpll
or
mov
mov
sbb
adcb
incb
jns
dec
rcrb
jmp
jb
mov
fwait
push
mov
dec
cwtl
data16
icebp
sahf
dec
in
pop
mov
jns
push
inc
test
add
and
cli
push
loop
push
xchg
int3
adc
test
jae
mov
mov
xor
and
mov
repnz
or
xchg
inc
ret
add
into
hlt
sbb
sbb
push
mov
sbb
shlb
mov
int3
ret
stos
shlb
mov
repz
inc
adc
and
push
popf
imul
cmp
mov
pop
arpl
mov
aad
test
mov
dec
pop
pop
repz
popf
inc
call
inc
mov
cld
testl
mov
jecxz
sbbl
adc
xchg
add
fmull
mov
out
lods
nop
dec
out
mov
pop
stos
xor
dec
push
fisubrs
jp
mov
mov
fdivr
popf
push
imul
sahf
mov
jg
dec
xor
lds
divb
testl
ljmp
sbbb
cltd
lret
inc
push
pusha
jnp
mov
cmp
scas
je
imul
ret
add
leave
inc
aad
fildl
dec
add
inc
xor
or
outsb
cmp
pop
fisubrs
or
mov
xor
xchg
mov
mov
push
aad
add
xlat
js
out
dec
pop
arpl
shlb
popf
mov
push
addr16
fwait
neg
sbb
sbb
push
dec
xchg
fwait
xchg
pop
mov
gs
aas
clc
test
jo
jb
sti
je
cmc
ret
ret
insl
adc
xchg
popf
fcmove
adc
lods
fmulp
imul
mov
pop
mov
cmpsl
jnp
loope
pop
int
inc
ljmp
leave
jno
dec
rcrl
mov
jnp
lcall
push
inc
stos
lcall
ljmp
dec
lods
cmc
xor
and
movsb
ret
lret
inc
movl
enter
je
inc
mov
dec
mov
mov
add
loope
lret
inc
push
lret
xchg
inc
add
ret
sbb
scas
pop
clc
jmp
cmpsl
push
add
and
add
stc
outsl
ror
adc
and
scas
inc
in
push
xor
mov
mov
ja
call
loope
pop
addr16
les
mov
stos
fstpl
sbbl
lahf
mov
cltd
push
out
mov
in
movb
add
jbe
cli
hlt
fcmovbe
ror
imul
xor
push
adc
xchg
pop
mov
imul
inc
in
mov
sub
add
hlt
pop
mov
inc
push
pop
imul
je
imul
icebp
lcall
cld
pushf
or
popf
push
and
inc
fmuls
scas
hlt
mov
adc
mov
in
lret
imul
es
add
mov
cmp
clc
les
inc
add
mov
dec
iret
data16
inc
push
add
jb
sbb
out
js
adc
addr16
pop
enter
jnp
or
aad
imul
xchg
aas
stos
xor
lods
inc
push
mov
jp
fstps
mov
loopne
mov
jmp
jl
sbb
mov
pop
adc
repz
js
test
repz
aad
pop
cmpsl
movsl
cwtl
pavgb
jo
jp
stc
jne
mov
shll
lea
aad
lret
adc
mov
out
andl
jo
js
out
pop
xchg
or
shrb
repnz
jmp
sbb
mov
pop
xor
enter
scas
std
lcall
and
push
mov
inc
and
adcb
mov
inc
cmp
imul
les
cltd
test
add
movsb
jno
dec
movsb
imul
jb
xor
stos
ja
jg
iret
lds
xchg
sti
gs
cltd
clc
sbb
pop
jle
fdivs
mov
vpackuswb
into
adc
stos
add
stos
dec
xchg
xchg
ret
sarl
sarl
daa
stc
int3
inc
outsl
mov
lock
or
je
in
iret
lds
lea
jle
dec
add
stos
rcrl
pop
in
mov
nop
jle
clc
cmc
sub
mov
out
adc
sub
bt
inc
andl
jno
dec
test
pop
inc
stos
out
pop
sbb
push
fisubrs
jge
inc
lds
sbb
repnz
cmp
call
cli
lcall
xor
les
xor
push
mov
push
mov
add
pop
dec
ret
xor
mov
adc
lret
sub
mov
mov
test
jg
mov
push
xchg
imul
rorl
cmpsl
xchg
jnp
into
inc
inc
mov
insl
mov
mov
gs
push
call
inc
mov
iret
xchg
mov
test
ret
inc
scas
fistpll
sbb
jp
mov
lahf
lods
xchg
adcb
jle
fsubl
mov
hlt
fcmovnb
fcmovnbe
leave
adc
adc
jl
test
and
jp
rcrl
pop
call
adc
add
add
and
jecxz
in
ret
push
or
mov
jb
dec
lods
in
sbb
fisubrl
insl
addl
cltd
and
adc
add
or
push
mov
sbb
mov
and
pop
movsl
icebp
xor
arpl
movsl
inc
lcall
adc
rclb
add
stos
push
add
loop
in
mov
mov
jnp
test
mov
mov
or
xchg
divl
les
sar
pop
lods
fnstcw
insl
mov
clc
clc
cmp
lret
test
leave
jg
enter
popa
mov
add
fsubl
mov
cltd
in
mov
or
dec
pushf
push
mov
jne
movsl
jmp
int
adcl
sahf
or
add
add
addr16
fiaddl
repz
inc
stos
div
mov
or
loope
xchg
sub
das
mov
or
push
cmp
call
in
sbb
outsb
jo
daa
testl
pop
leave
inc
push
pop
imul
xchg
or
sub
cs
movsl
clc
pushf
pinsrw
mov
sbb
es
cmpsl
lock
xchg
jae
out
pop
mov
in
mov
jg
mov
sbb
adc
push
test
mov
fwait
inc
fwait
divl
mov
xchg
dec
xchg
ret
aad
rorb
cmpsl
pushl
mov
lret
jge
sar
lahf
in
stc
cmp
jno
arpl
mov
ss
or
jmp
ds
jno
movsl
movsl
inc
mov
and
pop
pop
clc
push
mov
fwait
sub
cs
frstor
imul
icebp
or
mov
pop
ljmp
movsb
and
outsl
shlb
nop
mov
cmc
jae
xor
mov
or
andb
push
imul
mov
in
inc
add
or
ja
mov
add
ret
subb
mov
sbb
stc
xor
push
sbb
test
negb
inc
dec
dec
es
cmpsl
stc
sahf
dec
in
inc
test
js
pop
popa
mov
and
sbb
mov
aas
fldt
sbb
mov
pop
dec
push
and
mov
pop
add
jae
outsl
adc
inc
mov
sbb
jne
bound
mov
jle
dec
inc
test
ja
lret
stos
inc
jbe
mov
xchg
pop
mov
jns
bound
jno
popa
cmc
mov
mov
mov
in
jl
inc
test
jb
or
inc
mov
ret
pop
inc
inc
add
lret
xchg
fwait
fs
push
inc
mov
hlt
repz
mov
in
roll
imul
orl
andl
jne
dec
sub
push
mov
adc
into
mov
cmp
push
fsubrl
cmp
jb
sbb
push
negb
xchg
cmpsl
sub
cltd
clc
push
gs
xchg
jmp
sbb
mov
jmp
pop
sahf
inc
push
loopne
cli
mov
js
insb
mov
mov
movl
dec
inc
iret
imul
inc
inc
xor
pushf
insb
cmp
fidivs
mov
inc
mov
lret
xchg
mov
mov
andl
cwtl
or
inc
test
fwait
mov
dec
mov
movsl
test
adc
jbe
pop
inc
sbb
test
sar
lret
inc
inc
sbb
adc
lahf
leave
xchg
cltd
and
js
fsubrs
and
adc
inc
orl
andl
rcll
add
add
and
lahf
lret
jbe
mov
out
movsb
jmp
push
lret
sub
sub
aad
ljmp
ss
sti
popa
mov
mov
pushf
shlb
sahf
xchg
std
aaa
fidivl
mov
ret
pop
testl
mov
fcomps
pushf
push
jne
add
mov
call
xor
in
iret
imul
inc
inc
xor
loope
fisttpl
dec
rcl
addr16
movb
sbb
jge
pusha
fcompl
mov
lret
xchg
dec
rol
jge
mov
fwait
adc
jae
cltd
lds
movsl
mov
jg
loop
push
imul
push
or
jne
pop
and
mov
bnd
inc
inc
add
xchg
fwait
in
or
lods
out
inc
or
add
repnz
push
mov
xchg
and
xchg
push
outsl
xchg
inc
add
adc
scas
leave
ja
into
push
call
jle
mov
frstor
pop
imul
mov
icebp
mov
xchg
cmp
orb
xor
mov
test
cmp
test
andb
push
sbb
bound
sub
mov
jo
xor
push
ret
addr16
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
rcrl
test
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
add
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
