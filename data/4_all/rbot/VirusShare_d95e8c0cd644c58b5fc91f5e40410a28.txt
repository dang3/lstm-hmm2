push
pushf
pusha
call
xor
or
inc
jo
add
or
push
jo
add
or
jno
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
jb
jne
insb
push
jb
je
arpl
pop
cmpl
jne
cld
mov
mov
xor
call
mov
jecxz
lea
lea
mov
lea
mov
push
dec
jne
mov
push
push
pushl
call
add
add
loop
add
mov
mov
call
mov
test
je
mov
jecxz
push
call
test
je
mov
mov
mov
jecxz
test
jne
add
inc
inc
jmp
and
push
pushl
call
stos
jmp
add
jmp
mov
lea
lea
lods
xchg
jecxz
push
mov
push
push
push
lods
xchg
lods
push
push
call
pop
loop
pop
popa
popf
ret
sub
mov
mov
mov
lods
test
je
stos
jmp
call
and
je
outsw
jne
add
stos
test
jne
push
push
push
push
call
inc
jb
outsl
jb
pop
lods
stos
test
jne
call
push
push
inc
push
xor
cs
dec
dec
add
push
sub
or
add
dec
gs
popa
addr16
outsl
js
add
push
sub
rolb
enter
pusha
mov
mov
lea
mov
push
xor
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
rep
push
pop
call
dec
jne
push
pop
mov
mov
mov
and
shl
add
lea
call
jae
call
movzbl
imul
xor
mov
inc
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
lea
lea
call
jae
call
add
test
jne
jmp
call
test
lea
je
cmp
jl
jmp
mov
lea
call
jae
call
add
jmp
call
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
call
mov
mov
lea
call
jae
call
cmpl
mov
mov
mov
mov
mov
mov
jge
andl
jmp
push
popl
mov
add
jmp
call
mov
mov
lea
call
jae
call
mov
add
shl
mov
add
lea
call
jae
call
mov
xor
cmpl
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
call
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
call
jae
call
push
shl
lea
jmp
call
add
call
jae
call
shl
lea
push
push
jmp
call
lea
push
push
pop
mov
push
call
pop
xor
inc
mov
shl
pop
sub
add
cmpl
push
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
push
popl
call
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
push
call
shr
add
cmp
jb
sub
or
pop
loop
mov
add
shl
push
popl
push
popl
call
inc
mov
pop
je
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
pop
mov
jmp
pop
mov
jecxz
push
mov
mov
pop
add
cmp
jae
lods
inc
cmp
je
cmp
je
cmp
jne
cmp
jae
lods
inc
cmp
jb
cmp
ja
cmp
je
mov
cmp
jne
xor
bswap
sub
mov
add
add
jmp
popa
leave
ret
cmp
jae
push
mov
mov
movzbl
shl
or
shl
incl
mov
pop
ret
call
mov
mov
shr
imul
cmp
ret
mov
mov
sub
shr
add
ret
call
mov
ret
sub
sub
mov
shr
sub
ret
call
mov
ret
xor
inc
push
call
mov
call
jae
call
mov
add
pop
jmp
call
mov
lea
pop
or
shll
decl
jne
ret
call
add
add
add
inc
add
dec
add
add
add
adc
jg
add
add
add
add
add
sarl
fs
add
add
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
sbb
nop
and
adc
cmp
pop
xor
sbb
inc
lds
inc
pop
loop
mov
jo
adcl
cmp
cmp
push
mov
pop
cmp
loope
dec
shlb
dec
insl
mov
leave
mov
aaa
inc
xchg
nop
add
add
and
mov
scas
cltd
lahf
scas
dec
cmp
fcoms
push
outsb
inc
ret
mov
jns
cmp
mov
bound
imul
jne
lds
mov
and
movsl
movsl
pop
ja
insb
push
mov
jnp
and
int3
hlt
xlat
inc
bound
ret
dec
cmp
cmpb
leave
jo
mov
sub
cmc
and
out
jecxz
xchg
push
adc
add
addl
sbb
loopne
in
push
mov
push
and
sub
jle
mov
ficoms
or
or
repnz
imul
lcall
aaa
push
jmp
mov
xor
xor
jg
lahf
subb
sbb
push
das
leave
bound
test
test
lock
push
popa
pop
mov
mov
cld
clc
js
mov
cmc
mov
xor
int3
jbe
sbb
and
sahf
jl
sub
adc
lahf
adc
sbb
test
mov
rcrl
in
test
ror
mov
xchg
jecxz
xchg
mov
add
andb
repz
xchg
adc
jecxz
lods
or
adc
or
lret
ret
xchg
lahf
out
lret
mov
stos
popa
and
push
testl
mov
pop
jp
gs
jno
add
mov
add
pop
xchg
cld
iret
repz
cmp
cs
cmp
mov
je
mov
push
ret
jp
sub
pop
add
adc
mov
jecxz
push
or
je
dec
rcr
iret
or
mov
shlb
bound
or
std
or
repnz
stc
jns
sbb
insl
lds
je
lock
dec
cwtl
ret
daa
pop
fs
test
aas
ja
out
xchg
loope
aas
jbe
xor
rcrb
jne
clc
sub
stc
xor
pop
cmp
xor
add
ljmp
push
mov
mov
andl
popf
jmp
sub
out
stc
cmpsl
xchg
movsl
inc
scas
push
push
cmp
pop
or
hlt
add
sub
inc
mov
insb
xor
rcll
adc
repz
jle
in
jae
seta
add
cmpsl
nop
inc
dec
dec
movsb
scas
or
lahf
sub
test
pop
sbb
mov
insl
xchg
out
popa
cld
into
loope
imul
xor
enter
mov
mov
ficoml
test
dec
ret
fs
sub
push
cmp
dec
jg
pcmpeqd
addr16
imul
cmpsl
shlb
xchg
and
fs
call
push
imul
js
fldl2e
and
dec
add
jg
fdiv
adc
mov
pop
imul
mov
xorb
dec
adc
push
fadds
test
shl
fidivrs
jb
inc
pop
cmp
shl
mov
push
inc
mov
jg
adc
enter
cmp
shrb
ret
mov
pusha
mov
pop
notb
subb
jge
lcall
mov
or
movsb
jle
mov
repz
push
add
jecxz
push
cmp
notb
mov
mov
test
cwtl
stos
js
ljmp
pop
aam
fcmove
popa
mov
mov
cmp
add
mov
and
sbb
icebp
mov
dec
pop
adcb
dec
or
mov
cmp
jp
jnp
and
icebp
push
and
push
cmp
mov
lcall
mov
fidivl
and
lret
jmp
cmp
pop
pop
sbb
cmpsb
fs
jb
sbb
in
orl
cs
inc
add
ljmp
fidivl
push
aad
sahf
lea
xor
ds
adc
mov
adc
xlat
pop
sarl
mov
sbb
xchg
push
lods
lret
imul
mov
aam
ja,pt
mov
mov
xchg
inc
andl
outsb
dec
xor
sub
and
sbb
popa
xor
mov
loope
cltd
inc
and
adc
inc
and
bound
pop
imul
cmpsl
dec
mov
subl
and
mov
jmp
movsl
adc
sbb
pop
lock
sub
pop
decb
fs
jo
or
out
das
data16
and
sub
sar
sbb
xor
sbb
loop
cmc
sub
jmp
test
loop
scas
jl
pop
pop
pop
mov
adc
dec
adc
iret
fcompl
sub
movsb
insb
je
cwtl
ljmp
aam
jmp
mov
pop
test
sub
pop
sbb
cmp
pop
xchg
cmc
xor
mov
and
aam
xlat
sub
or
xlat
arpl
in
adc
int
loop
adcl
and
xchg
lcall
mov
sub
fsubrp
xchg
cmpsb
dec
cltd
xchg
ret
pop
dec
rcl
mov
shll
cmp
ss
xlat
mov
lcall
xlat
xchg
mov
out
ret
lea
cmp
inc
stc
xchg
out
mov
adc
or
pop
jle
lret
xor
pop
loopne
ss
hlt
repnz
xchg
cmp
mov
out
sub
adc
jmp
dec
cmp
xchg
sub
cmp
dec
stos
push
jns
daa
test
les
das
je
sub
mov
push
pop
cmpsb
orb
fadds
into
ljmp
adc
fstpt
inc
mov
test
push
popa
cli
loope
dec
out
or
fldl
xchg
test
enter
test
or
loope
outsb
pop
and
jp
push
push
sahf
in
out
mov
outsl
rcll
sarb
lcall
pop
mov
nop
sub
push
loope
daa
cmp
insl
xchg
adc
mov
mov
mov
loop
xchg
aad
adc
jbe
cld
stos
sarb
cmp
movsl
sbb
lret
xlat
dec
or
orb
insb
aad
rorl
test
push
incb
cmp
out
push
stc
enter
mov
cmp
inc
push
and
pusha
inc
dec
dec
cmpb
flds
out
cmpsl
fucomi
mov
repz
push
in
inc
movsb
stc
iret
mov
sbb
dec
jle
out
jnp
inc
test
decb
popf
cwtl
push
fwait
mov
lret
cli
mov
jecxz
aam
jnp
call
loope
call
shll
dec
fstpt
mov
nop
ss
inc
and
shlb
ficompl
insb
jo
stos
int
add
add
pushf
or
sub
mov
add
imul
mov
pop
cmp
daa
shrl
sbb
add
setp
rcrb
sbb
add
cmp
dec
mov
inc
and
pop
in
int
cmpsl
int
mov
fimuls
add
jbe
lods
inc
ja
mov
dec
mov
leave
or
icebp
cs
ret
mov
aas
into
in
lods
mov
inc
sahf
inc
lds
daa
jge
pop
fwait
pop
in
cmp
popa
push
lds
jbe
mov
xchg
in
loop
test
pop
xor
popf
fs
mov
add
xchg
loopne
push
push
stos
or
push
imul
fsub
and
ds
push
mov
dec
aad
dec
jo
sub
mov
push
jae
push
and
pop
mov
aas
sbb
popf
rorl
mov
mov
shrb
sbb
stos
lahf
cmpsl
xchg
repnz
imul
imul
fcoml
movsb
fdivrp
xchg
es
or
pop
xor
jo
cld
jg
fdivrl
pop
adc
cmp
jg
pushf
rcrl
pop
and
adc
out
mov
js
inc
xor
cmp
hlt
mov
add
mov
outsl
rolb
loop
push
mov
sar
and
mov
mov
pop
fistpl
imul
mov
int
add
sti
in
or
in
ja
adc
pop
and
cld
inc
cmp
ja
pop
or
and
xchg
insb
dec
rcl
xchg
sar
subb
xlat
mov
iret
fwait
or
add
push
repz
cltd
dec
pop
test
dec
aam
adc
ss
push
cwtl
out
out
popf
mov
clc
pop
movsb
mov
out
cmp
inc
inc
pop
bound
dec
mov
jo
mov
xchg
or
pop
std
sbb
ror
stc
hlt
push
adc
out
je
add
sub
popa
adc
sbb
mov
fstpt
sbb
xchg
jb
push
and
and
mov
mov
cmp
fwait
cltd
test
arpl
mov
add
mov
cmp
or
in
jmp
lret
xor
or
pusha
mov
jbe
xchg
push
or
neg
lock
mov
dec
arpl
cwtl
jmp
in
fisubs
jbe
adc
cmp
xor
movsb
jae
fmulp
fcomps
movsl
xchg
jnp
out
mov
lea
jno
ja
push
in
into
sub
gs
dec
push
xor
lods
or
sti
sbb
push
imul
push
xchg
jecxz
imul
jecxz
add
arpl
xor
jl
or
or
push
movl
dec
adc
aam
pusha
push
sbb
and
sbb
jp
pop
jecxz
and
pop
outsb
arpl
mov
xchg
or
int
sub
dec
pop
stos
lcall
mov
mov
xchg
dec
and
cmp
loop
mov
mov
lahf
rcrb
sti
aad
inc
xor
lret
push
adc
jnp
inc
sub
cmp
nop
add
xor
mov
pop
call
or
or
hlt
scas
jnp
lods
cmpsb
test
dec
fistpl
fsubp
pop
and
aaa
nop
test
lods
xor
rorb
push
cltd
movsl
sub
push
xchg
fwait
sub
addr16
add
mov
clc
popa
xchg
cmc
pop
inc
push
popa
rolb
jl
insl
test
cmp
pop
mov
mov
imul
cld
push
insb
mov
add
pop
add
aam
or
and
daa
sub
xchg
aam
mov
loopne
xor
fisubs
cmp
jae
dec
lcall
test
mov
lret
cld
dec
fadds
out
jns
cmp
or
adc
push
mov
mov
pop
adc
aad
adc
lds
inc
fcomip
aam
rorl
dec
mov
dec
hlt
add
enter
jle
xchg
push
lds
ret
pop
decb
lahf
in
push
imul
fcoms
sbb
int3
gs
mov
dec
push
pop
inc
add
incb
dec
mov
lcall
cwtl
stos
pushf
in
cmpsb
add
and
addr16
into
in
aad
pop
stos
sti
jmp
hlt
or
lds
js
fnstcw
enter
and
pop
shlb
sti
out
cmp
aad
std
out
add
mov
loop
mov
xor
lds
rolb
adc
jo
add
cmp
loop
addr16
es
jg
jecxz
pusha
mov
add
add
and
adc
mov
jbe
insb
pop
sub
ljmp
or
inc
sbbl
in
in
mov
xlat
cmp
push
mov
or
int
mov
stos
push
and
lret
mov
test
dec
ja
dec
xorb
mov
jb
or
jb
insb
aad
sub
scas
push
pop
ret
xchg
lock
imul
pop
mov
int3
jmp
addr16
dec
sub
cs
aas
or
or
sub
and
leave
add
and
or
rclb
in
xor
inc
stc
mov
ficoms
outsb
or
scas
pop
sti
push
adc
fisubrs
push
xchg
inc
and
add
cmp
push
inc
xor
fstps
sbb
xchg
push
fcomp
jnp
loop
lock
jbe
repz
push
movsb
sahf
das
lds
out
orl
js
cmp
daa
out
jle
cli
mov
jbe
mov
xor
xchg
pop
pusha
dec
mov
stos
xchg
rclb
icebp
sti
jnp
imul
leave
mov
addr16
lods
xchg
mov
inc
dec
aaa
pop
sub
pop
lcall
mov
or
jnp
sub
xchg
push
or
jb
insb
push
movsb
gs
mov
out
pop
or
xchg
push
inc
add
cmp
inc
loope
mov
movl
jecxz
addb
addr16
pop
xor
ss
ljmp
sub
pop
cmp
shrl
or
jp
subl
mov
and
sub
aam
aad
cli
jo
xor
mov
daa
adc
inc
leave
rolb
ja
xchg
mov
xor
pop
or
cltd
je
cltd
add
xlat
push
subl
inc
and
inc
and
push
sti
mov
out
inc
mov
mov
stos
ror
dec
loope
inc
aam
lcall
sub
fwait
in
cli
loope
fstps
adc
xchg
sub
mov
imul
mov
mov
jb
push
adc
mov
adc
jbe
cmc
push
adc
cmpsb
dec
cmp
lret
xor
mov
xor
popf
xor
mov
scas
or
pop
fistl
sub
push
inc
or
sub
out
pop
ret
inc
pop
sbb
aam
add
inc
call
sbbl
sub
xor
mov
or
imul
jne
movsl
push
jl
fildll
fs
xor
js
fnstsw
push
loope
sbb
pusha
in
or
push
push
mov
enter
push
push
arpl
cli
mov
cmp
rcrb
sahf
ljmp
xor
outsb
ret
ficompl
pushf
jmp
ss
out
fwait
xchg
push
inc
je
aaa
pop
sub
ds
jmp
mov
loop
mov
stc
pop
test
mov
mov
mov
adc
xchg
jo
push
fisttpl
mov
pop
adc
enter
mov
xchg
pusha
xchg
cmp
adcb
pop
ds
mov
mov
add
cmp
xchg
jp
dec
adc
lret
mov
lock
ret
mov
inc
in
pop
test
jecxz
mov
inc
mov
loope
test
xlat
dec
mov
xchg
adc
mov
push
mov
rorb
shl
cmp
pop
mov
movsl
dec
mov
movsb
pusha
push
lea
dec
jne
sbb
jg
jne
pop
outsb
or
call
cmp
xlat
je,pt
jge,pt
lods
mov
sahf
xor
xchg
imull
gs
shll
shr
fsubrs
test
pop
bound
mov
inc
adc
mov
fwait
mov
sbb
into
mov
push
outsb
cmp
xor
jns
imul
fmull
adc
rol
mov
inc
pop
shrl
sub
xchg
mov
jb
insb
insl
fimuls
push
mov
mov
imul
cli
pop
pop
or
loope
push
stos
add
add
mov
sti
pop
hlt
xor
adc
push
add
addr16
xchg
movsb
cmp
jle
sub
jmp
cmpsl
subl
xor
adc
or
or
mov
lcall
add
or
cmpb
add
fs
push
dec
dec
stc
ljmp
movsb
and
dec
call
mov
fmul
cmpsl
pushf
xchg
cmc
sub
shll
test
and
pop
cmpsb
cmc
push
xor
es
orl
iret
imul
jne
jae
add
push
xorb
stos
adc
jl
gs
shl
xchg
add
push
in
jl
cmpsl
in
cmp
sub
lcall
xlat
dec
repz
mov
add
pop
xor
cmp
mov
push
in
mov
ds
sub
shll
mov
mov
add
insb
pop
repnz
dec
mov
pop
push
lcall
xor
icebp
inc
stos
pop
fs
fcomip
jecxz
and
sbb
decb
add
pop
mulb
sub
push
fwait
testl
sbb
jecxz
and
lcall
lds
mov
movsl
rcrb
in
nop
sti
ret
jl
mov
jae
fisubl
inc
push
bound
dec
mov
adc
or
aad
int3
sub
movsb
shll
pop
mov
xlat
int
sarb
sti
dec
mov
adc
aaa
xor
pushf
add
lret
adcl
mov
loope
outsb
pop
pop
das
push
mov
pop
cmp
sbb
mov
stos
negl
xor
jg
and
sub
mov
jg
and
ret
sbb
pushf
pop
mov
stos
push
fcomps
jno
adc
push
testl
outsl
sub
int3
sbb
xchg
lret
push
in
out
push
mov
lret
pop
test
popf
pop
ja
insb
rcr
cmp
and
xor
xchg
xchg
mov
jae
jne
push
inc
sbb
gs
outsb
orl
loope
fisubl
xor
mov
mov
js
xchg
std
xchg
rol
xchg
cmpsl
lahf
inc
cwtl
xorb
xchg
inc
xchg
jne
sub
in
fisubs
hlt
insl
xchg
call
cwtl
jnp
aas
lret
mov
mov
rcr
cmpsl
ret
ret
xchg
xor
popa
nop
test
mov
stos
mov
jne
dec
mov
loopne
xchg
sub
icebp
scas
out
mov
jecxz
in
pop
dec
push
push
mov
dec
xor
icebp
sub
jg
shrl
outsb
test
addr16
lods
cmp
mov
ss
adcl
cs
sbb
dec
mov
mov
aad
cltd
xchg
out
stc
adc
rcll
mov
cmp
ds
mov
scas
lret
and
js
xchg
inc
jg
mov
testb
dec
std
xchg
shll
test
mov
dec
and
sub
rcrb
cmp
mov
es
into
jl
mov
xchg
inc
in
cmp
xor
push
stos
jg
rcrb
loope
dec
or
pop
leave
lahf
sahf
lret
scas
cmpsl
mov
push
notl
mov
sbb
std
std
push
sub
lret
repnz
and
sti
xor
shlb
dec
cli
sub
add
lods
test
loop
leave
in
idiv
adc
rclb
xchg
push
pusha
mov
inc
pop
std
pop
lcall
lcall
inc
lcall
rolb
push
jb
or
sbb
shll
mov
mov
push
jg
jle
cmp
push
mov
into
jb
dec
ds
adc
mov
add
out
jnp
loop
sbb
sub
push
xchg
inc
mov
mov
mov
loop
cmpsl
sbb
xchg
popf
lret
or
rcrb
test
outsb
mov
xchg
jne
pop
ret
xlat
inc
or
in
xor
jnp
xlat
push
loopne
mov
xchg
add
mov
stos
adc
repz
hlt
add
cltd
fildll
cwtl
jbe
aas
pop
sub
push
xor
ret
out
mov
icebp
jns
ret
inc
jnp
or
sti
dec
hlt
lret
stos
pop
clc
xor
mov
pop
cmp
outsb
mov
sub
push
push
jbe
mov
xchg
mov
xor
xchg
test
cmp
sub
int
jecxz
icebp
adc
aad
mov
pop
cli
enter
aas
mov
sahf
push
mov
cmp
das
mov
lcall
into
xchg
mov
dec
adc
stos
movsb
je
loope
dec
sub
fs
in
daa
roll
push
sbb
cmpsb
mov
mov
mov
mov
aam
in
leave
loopne
dec
push
cmpsl
cmp
cmp
and
cmp
cmp
pushf
into
push
add
pop
fidivrs
mov
pop
cld
xor
cmp
stos
mov
add
scas
icebp
std
mov
sbb
ss
dec
sti
outsb
mov
into
insb
inc
mov
jne
cmc
std
into
mov
jmp
cmc
xor
cld
and
xchg
mov
xchg
push
pop
push
jecxz
sbb
scas
test
nop
pop
std
in
in
add
rol
cmc
mov
mov
mov
andl
jle
cmp
stos
mov
push
sub
outsl
call
xchg
fistl
mov
or
addl
push
in
add
mov
mov
pusha
jle
bound
arpl
dec
arpl
das
cmc
inc
mov
inc
inc
sarl
mov
test
push
mov
xlat
mov
std
and
mov
lret
imul
dec
cmp
test
push
sarl
call
in
aad
nop
je
cmpsb
adc
ffree
jle
inc
popf
mov
test
sub
lods
mov
out
sahf
out
std
leave
sti
xor
repnz
xchg
aam
and
xchg
fldl2t
sub
mov
xchg
jl
push
inc
call
lods
popa
dec
cs
scas
je
mov
movsb
xor
push
sub
in
call
pop
clc
xchg
test
cs
jbe
leave
icebp
fwait
add
fmulp
addb
repz
sbb
loope
add
shr
pop
add
aad
repnz
lahf
xchg
dec
pushf
pop
ret
mov
push
shl
aas
les
into
dec
insb
out
cmp
out
mov
gs
push
jcxz
xor
xor
fs
sub
push
adc
pop
shrb
sbb
sbb
jg
arpl
sub
and
icebp
cmp
mov
adc
fwait
mov
xor
xchg
lahf
sub
test
std
mov
or
push
hlt
aas
jl
mov
pushf
sbbl
mov
leave
xchg
cmpsb
andb
adc
dec
pop
pusha
inc
lock
or
mov
test
sub
psllq
pop
xor
cmp
imul
cwtl
cli
std
insl
inc
and
je
stc
pop
mov
xchg
in
es
imul
test
incb
push
sub
popf
mov
mov
loop
sub
leave
aad
pop
incl
sahf
int3
outsb
dec
out
mov
and
xchg
test
rolb
jge
lods
sti
test
cmpb
mov
cld
idivl
pop
push
xor
or
test
xor
xchg
mov
pop
push
in
insl
jae
cmpsl
lods
leave
aas
add
clc
test
push
roll
in
mov
dec
in
pop
xor
dec
pop
popa
lcall
and
clc
mov
mov
ret
and
mov
adc
push
in
nop
vmwrite
jnp
pop
mov
in
and
mov
dec
hlt
cwtl
aad
sbbb
ret
lds
mov
stos
xchg
in
inc
rorl
push
lcall
ds
repnz
mov
arpl
das
or
adc
loopne
jo
aas
sub
sub
push
adc
mov
sub
imul
in
sti
xchg
inc
cwtl
mov
push
pop
inc
dec
rorl
rcrb
inc
xor
test
jno
mov
xor
and
xor
pop
gs
lcall
cmp
dec
int3
cmp
dec
sbb
shrb
ja
es
and
je
out
inc
jns
fists
jmp
adc
lret
test
dec
and
sbb
and
out
sub
outsb
mov
adc
xchg
shll
out
test
mov
and
lcall
shll
jle
fistps
or
inc
mov
adc
jg
sbb
insb
dec
push
fsubs
ds
mov
sti
daa
mov
dec
jmp
fdivrs
jge
aaa
leave
add
push
jmp
imul
aas
push
mov
lock
je
and
insl
and
jno
push
xchg
mov
xchg
loopne
mov
xor
in
mov
pop
nop
orb
mov
fcomip
or
movsb
pop
mov
lods
pop
out
adc
jmp
inc
lcall
xchg
adc
adcb
outsl
jge
rcll
pop
xchg
jmp
pushf
dec
cwtl
mov
sbb
inc
popa
adc
jl
cwtl
xchg
clc
cmp
push
ds
push
das
push
lods
mov
add
xorb
inc
sahf
cltd
test
cmp
ljmp
push
add
ss
cmpsb
and
ljmp
mov
or
test
inc
orb
loopne
mov
or
mov
psllw
sub
shrl
int3
add
jb
xchg
dec
adc
popa
xor
movb
je
mov
es
aad
adcl
sub
mov
and
fisubl
pop
testl
ljmp
dec
sub
cmpsl
imul
mov
arpl
aas
pop
pushf
int
mov
in
pop
sbb
lods
imul
test
sub
jl
rcl
jae
test
xor
pop
xchg
add
into
outsl
mov
lahf
sub
das
and
push
push
in
jle
shl
mov
xor
jg
sbb
jo
mov
rolb
js
into
mov
add
out
or
xchg
or
dec
mov
ljmp
idiv
sbb
jmp
or
ljmp
add
test
xor
mov
movsb
sub
push
mov
nop
cmp
decl
cmp
xchg
ror
cld
lds
cs
adc
ljmp
popl
mov
les
lds
fcmovnb
inc
jo
and
sbb
lock
or
out
jo
out
add
pop
outsb
sbb
lods
cmp
add
mov
xor
push
aad
jl
in
mov
fildll
cltd
test
add
cmp
jns
dec
negb
pop
cmc
mov
mov
dec
push
or
addr16
fwait
xchg
insl
fsubs
mov
in
push
insl
add
mov
iret
lock
push
sub
inc
pop
and
loope
add
lods
pop
loopne
cmp
jg
pop
aad
jg
jb
jp
pop
inc
stos
mov
dec
leave
imul
int
sti
dec
or
out
test
cmpl
or
mov
stos
jecxz
lods
shlb
xor
xchg
test
xchg
lods
mov
push
jo
and
push
fstp
sub
cwtl
loop
mov
test
and
cltd
lock
lahf
es
push
mov
inc
mov
test
jnp
mov
out
and
sub
mov
add
nop
shlb
jae
jecxz
test
dec
inc
xchg
xchg
xorl
and
aad
mov
push
cwtl
add
pop
cmp
or
or
ja
xchg
lret
dec
loope
int3
movsb
lods
pop
addr16
mov
cmc
jne
lret
scas
mov
xchg
push
sbb
pop
push
iret
enter
dec
andnps
aas
orb
cmp
lahf
mov
aam
pop
dec
sub
dec
adc
push
ljmp
adc
jb
test
movb
and
xchg
fstpl
inc
sub
xlat
rcr
insl
jmp
adc
scas
and
push
sbb
out
daa
dec
ss
cwtl
in
mov
lret
jge
das
aad
fwait
out
mov
push
push
mov
repnz
mov
cmp
or
push
fnstenv
fcmovbe
jno
add
mov
mov
outsl
fstpt
movsb
fs
sub
je
sbb
xor
loop
rolb
pop
nop
mov
adc
int
test
in
xchg
lcall
int
in
lea
ljmp
adc
mov
cs
mov
add
test
idivb
push
dec
mov
js
dec
aad
pop
repz
jg
and
or
aad
dec
ret
ss
out
mov
add
pop
repz
movsl
mov
pushf
jno
mov
mov
lahf
pop
ss
inc
mov
aas
outsl
sub
cs
mov
push
loopne
pop
bound
icebp
pop
push
pop
cmp
mov
scas
push
fnsave
lcall
sub
cs
mov
cmp
loopne
daa
or
mov
or
inc
mov
cmp
inc
dec
jmp
pop
push
push
mov
outsl
or
sub
mov
sarb
loopne
jl
gs
xchg
imul
jle
add
cmc
push
cmp
mov
sbb
mov
out
push
push
mov
lahf
daa
iret
mov
icebp
push
add
inc
aad
int3
or
rorl
test
sbb
and
icebp
or
int
inc
out
push
mov
stos
mov
cmc
mov
scas
rorb
adc
jecxz
or
setl
mov
sbb
and
pop
xchg
add
cmpsb
xchg
int3
xchg
ret
das
insb
or
or
cmp
loopne
mov
mov
and
and
mov
lds
lcall
adc
lock
subl
push
mov
iret
add
push
aaa
sbb
jp
ss
loop
lahf
adc
fs
mov
cmp
mov
cmp
in
filds
and
xchg
nop
adc
cltd
inc
out
push
insl
jb
pop
enter
adc
stos
loope
jecxz
push
or
out
and
mov
dec
rcll
xchg
add
rolb
xor
aam
daa
push
fstpt
cltd
fiaddl
jno
outsl
outsl
mov
lret
pushf
cwtl
enter
movsb
out
sbb
outsl
jo
movsl
or
sahf
cld
inc
jp
andb
push
cmp
xor
into
sbb
into
xchg
xor
dec
push
xchg
out
js
addl
daa
adc
adc
cmp
mov
lds
xor
dec
xchg
jno
push
cld
mov
push
mov
in
subb
out
lret
cwtl
pushf
fists
test
add
inc
faddl
jae
ficoms
cs
inc
stc
nop
repz
or
adc
jp
repz
sbb
xor
sub
sub
lea
add
inc
dec
shrb
fsubl
adc
cmp
mov
fdivr
ss
pop
rorl
fs
shll
aam
adc
pop
push
icebp
out
scas
stos
faddl
daa
mov
jns
mov
pusha
sbb
mov
jb
es
cmp
pop
sub
jl
out
sti
imul
lret
add
add
out
lock
in
mov
push
xchg
pop
stos
lods
mov
jnp
jns
add
xor
push
cwtl
inc
lcall
dec
and
xchg
insl
jp
jb
add
or
js
decb
mov
and
mov
sbb
out
or
les
pop
inc
in
push
push
cmc
xlat
iret
cmp
push
das
mov
cmp
pop
outsb
rcrl
out
mov
mov
add
rcrl
fs
shlb
out
xchg
cwtl
dec
lea
sbb
dec
jo
cs
push
xlat
push
xor
jo
flds
gs
stc
push
popf
pop
rcl
jmp
mov
cltd
je
imul
push
out
inc
data16
mov
mulw
or
jge
in
lock
sbb
aas
insl
cmpb
leave
mov
inc
push
mov
fdivs
ret
cwtl
adc
mov
fistpll
or
cli
jp
in
mov
popa
pop
loope
js
subb
sbb
push
pop
cmp
mov
mov
sub
pop
or
sub
xor
sbb
pushl
and
lea
ret
dec
adc
cmp
and
pop
ja
call
or
push
mov
cmp
pusha
jecxz
jne
xor
inc
in
rorb
sbb
gs
xor
sub
mov
xchg
dec
call
jns
mov
stos
lcall
and
in
aaa
inc
lds
into
orb
cs
iret
jno
lods
pop
bound
test
dec
jae
std
fidivrs
jo
dec
mov
dec
in
add
xor
cld
lahf
into
mov
fadd
jmp
jo
sub
inc
lret
push
test
lret
inc
cmp
repz
push
and
faddp
outsl
fiaddl
mov
and
xor
notl
ret
leave
shrl
cmpsl
test
mov
mov
addb
add
mov
push
lret
cli
dec
enter
xor
or
mov
scas
test
mov
enter
push
js
sbb
xor
repnz
pop
push
sub
adcb
push
adc
or
ljmp
push
add
or
shrb
stos
pop
mov
outsl
xchg
popa
int3
mov
popa
adc
stc
and
xor
movsl
imul
mov
sub
idivl
in
push
mov
aaa
repnz
lcall
movq
and
mov
cmpsb
pop
lods
dec
mov
dec
jl
mov
cmpsl
mov
mov
fisubrs
pop
adc
rorl
sbb
out
mov
and
and
lea
cmp
rcr
jge
xlat
inc
inc
jmp
aas
dec
sbb
cmpb
mov
mov
cmp
and
push
fmuls
push
sbb
mov
add
xchg
sbb
mov
daa
jo
mov
outsl
aas
dec
hlt
adc
fdivrs
mov
test
aas
mulb
ds
out
mov
decl
outsl
mov
pop
sbb
lea
sbb
xchg
mov
mov
aas
fnstcw
dec
xchg
jae
enter
dec
mov
push
sub
fisubs
ficoms
dec
out
iret
and
incb
jmp
repz
pop
mov
loope
xchg
popf
lahf
lods
pushf
add
icebp
ds
shr
js
cmp
stos
dec
aas
push
xchg
and
mov
jle
cmp
or
adc
stc
popa
out
jecxz
pop
out
add
test
iret
pop
xor
lahf
or
xchg
add
aad
cmp
mov
cmp
add
or
fnstcw
jmp
push
call
dec
leave
movsl
icebp
sub
call
scas
adc
inc
mov
sbb
lret
mov
leave
cmc
mov
loop
cltd
imul
nop
dec
leave
hlt
xor
sbb
das
dec
push
ja
add
xor
xor
adc
sbb
cmp
push
aam
jp
into
test
ljmp
push
or
or
mov
dec
or
pop
jmp
stc
shl
sbb
adc
xchg
fcmovu
inc
push
adc
inc
mov
mov
out
xor
and
xlat
or
rolb
pusha
cltd
notb
sbb
js
mov
mov
lcall
xor
fs
mov
aam
xor
pop
jg
jnp
or
jo
inc
clc
push
lret
mov
lea
jmp
jmp
lahf
stc
mov
add
cltd
int
push
enter
add
push
lods
test
repz
out
dec
cltd
js
mov
mov
shlb
mov
sub
outsl
mov
cwtl
fadds
lods
aad
scas
adc
test
inc
dec
js
mov
sub
jp
mov
ret
popf
fsubrp
out
adc
insb
notl
xchg
dec
jg
sbb
xchg
lock
lods
mov
inc
dec
push
dec
outsb
add
ret
lahf
mov
xor
out
cltd
mov
xchg
sbb
push
xor
shll
mov
xor
call
stos
jnp
cmpsb
add
fdivrl
fcomi
xor
pop
imul
imul
loopne,pt
sbb
push
mov
pop
sub
jge
mov
xlat
sbb
cltd
xchg
in
pop
mov
mov
in
mov
loop
repnz
add
xchg
shll
call
lcall
pop
sbb
pusha
enter
aaa
inc
lahf
fidivrl
fnstenv
cmpsl
imul
jo
push
mov
inc
gs
add
fisttpl
les
rcr
sbb
dec
mov
popf
or
jnp
aad
sub
or
push
fdivrl
adc
and
mov
outsl
loopne
xor
fmuls
movsl
unpcklps
imul
sbb
sbb
test
arpl
dec
and
sub
pop
movsb
xchg
pop
out
add
mov
push
inc
inc
and
addr16
adc
outsb
into
push
dec
mov
pusha
mov
sbb
mov
xchg
aas
cmp
cmp
push
js
dec
inc
inc
movsb
cli
fstpt
inc
add
psubsw
fnsave
mov
pop
pop
loope
stos
dec
mov
push
inc
in
add
xchg
push
inc
and
popa
and
cmc
mov
mov
pop
data16
mov
bound
dec
js
push
call
mov
inc
cmp
out
mov
mov
test
jg
push
clc
push
cmp
and
xchg
inc
inc
mov
lahf
pop
jmp
and
int
add
jecxz
pop
push
mov
push
call
adc
cmp
sbb
jae
mov
or
cmp
jp
jmp
lret
repnz
sbb
and
inc
sbb
or
inc
in
xchg
lea
stc
enter
mov
movsl
movsb
icebp
add
out
movsl
mov
sbb
dec
mov
mov
iret
or
loop
mov
add
lret
fisubs
sbb
sub
fxch
lea
sub
sbb
data16
dec
sub
sbb
and
mov
and
pop
in
jmp
jbe
inc
mov
aaa
sbb
or
dec
or
sub
sub
push
mov
fildl
xor
mov
push
jmp
jge
adc
xchg
xor
push
cli
notb
movsb
arpl
jae
popa
or
jp
shll
and
insl
aas
pop
inc
jmp
dec
shrl
cmp
outsb
rclb
inc
test
mov
mov
loope
mov
and
inc
push
mov
popa
pop
in
xor
lcall
call
in
int
test
push
cmp
sbb
data16
shll
cs
xchg
lods
mov
movsb
xor
arpl
mov
xchg
cmc
push
pop
jae
adc
pop
jecxz
xor
iret
into
pop
jae
jno
ret
testb
dec
cmpsb
or
inc
or
es
lcall
adc
add
shrl
push
mov
pop
pop
xor
jmp
ror
stc
inc
into
pop
push
cmp
je
pop
jae
insl
insl
or
int3
call
xor
dec
mov
cmp
push
push
fs
outsb
inc
or
xchg
lock
and
xchg
sti
pop
add
pop
xchg
fwait
cmp
jg
fidivrl
jae
lods
push
cli
mov
insl
pop
pop
xor
add
cmp
xor
pop
mov
aaa
or
jo
movsb
cmp
stc
add
dec
mov
sbb
add
test
or
std
ja
or
pop
testl
push
dec
jle
iret
dec
and
add
sbb
and
jecxz
test
mov
aas
out
xchg
shll
ret
sbbl
push
inc
andl
addr16
xor
in
mov
mov
arpl
movsb
adc
fdivrs
dec
cmp
mov
jmp
scas
out
sub
xorb
and
gs
sbb
jp
and
lds
gs
jge
rolb
mov
lret
dec
test
mov
ja
pop
outsl
divl
jge
dec
xchg
lahf
into
lcall
in
outsl
add
lcall
std
sub
stos
pusha
mov
sub
adc
adc
pop
icebp
xchg
lods
xlat
jle
push
xchg
rolb
xchg
mov
cmp
jo
cmp
cs
mov
test
ret
cs
and
nop
xchg
out
xchg
xlat
inc
dec
adc
or
ss
iret
bound
imul
lret
or
inc
imul
sbb
push
add
adc
mov
push
cwtl
push
cwtl
push
mov
cmc
rcrb
cltd
lret
das
inc
fldenv
out
jecxz
mov
dec
popa
cltd
aaa
adc
adc
or
dec
sbb
aaa
pop
pop
push
icebp
ljmp
adc
cmpsl
aas
test
jp
push
xchg
arpl
inc
mov
sub
cmp
icebp
insl
mov
popf
and
call
sub
in
push
jae
mov
ljmp
sub
xchg
movsl
es
jnp
scas
jns
xchg
push
sub
stos
adc
mov
mov
jge
imull
jge,pn
movsl
mov
mov
sbb
arpl
loop
imul
popl
xchg
sbb
cltd
cli
adc
std
ljmp
arpl
xlat
subb
cmpsb
cmpsl
pop
mov
inc
adc
lcall
cmp
add
lret
popa
inc
fldt
pop
roll
lods
fnstsw
mov
pop
push
imul
fisubrl
jmp
ljmp
inc
mov
jne
adcl
ret
pop
ds
sbb
mov
sbb
and
ljmp
xor
sub
inc
and
pop
jge
invd
and
loop
in
inc
in
sbb
cmpsb
out
rol
fyl2xp1
dec
lock
mov
push
aaa
flds
cmp
push
repz
test
xor
aas
xor
jle
aad
cwtl
aaa
cli
add
mov
ds
push
dec
mov
sbb
nop
mov
into
xor
pop
insb
je
imulb
dec
std
lcall
insb
cmpsl
rorl
in
inc
and
lret
mov
sub
fstps
jge
aad
cmp
mov
mov
ds
adc
jle
ss
and
xchg
jp
xor
in
outsl
lret
es
out
inc
mov
jecxz
pop
ret
int
and
aaa
fisubrs
jb
add
xlat
fs
lock
insb
call
dec
loop
xchg
and
sbb
scas
test
dec
push
and
fbstp
pop
imul
shl
and
shlb
adc
aad
clc
sbb
cmpsb
inc
hlt
sub
cmp
mov
sbb
xchg
dec
sbb
cltd
mov
aaa
push
loop
stos
push
cltd
dec
aam
xor
inc
int
dec
jne
stc
je
sub
aaa
jns
out
inc
and
inc
add
rcrb
shld
popf
and
adc
into
xchg
inc
ficoms
cmc
jge
ljmp
addr16
cmpsl
dec
icebp
xlat
rcrb
pop
dec
lock
inc
iret
jbe
pop
insl
int3
lahf
mov
lods
aas
push
adc
mov
lret
jp
adc
add
je
mov
jge
lcall
sbb
daa
jecxz
cmpsb
rorl
aam
mov
push
gs
fisttpl
mov
mov
fwait
mov
xchg
add
movsb
xchg
in
cmp
loop
fmul
or
imul
cwtl
mov
in
or
test
and
fs
jae
xor
pop
push
sbb
xor
mov
dec
inc
cmp
pop
jle
push
mov
test
xchg
mov
xor
push
lahf
jle
js
xchg
pop
push
push
das
mov
movsl
pop
cmp
imul
outsb
xchg
les
inc
sub
push
or
rolb
mov
fnstcw
cli
mov
dec
cmp
jecxz
stos
movsl
js
inc
jae
mov
aas
push
xchg
or
in
jl
aam
outsl
xchg
xor
cmp
cmpb
push
and
adc
jmp
nop
xchg
ret
mov
xchg
rol
dec
jne
insb
or
into
jne
add
and
das
mov
push
push
nop
test
pop
fs
mov
and
repnz
xchg
jnp
movb
or
dec
add
cmc
loopne
mov
pop
xchg
lret
shlb
or
jae
inc
inc
or
sbb
insb
hlt
and
xor
pop
push
mov
cmp
addb
xchg
fxch
addr16
xor
aas
into
pop
xabort
and
inc
xchg
pop
jge
xchg
xor
lds
shrb
cmp
mov
ss
pop
mov
bound
jmp
dec
mov
xchg
or
dec
pop
out
mov
push
pushf
iret
rol
clc
roll
adc
push
out
jecxz
icebp
add
jnp
out
sbb
nop
mov
push
clc
sahf
mov
adc
pop
xor
mov
and
adc
psubq
push
out
or
xchg
push
aam
in
mov
mov
mov
dec
cmp
add
rcrb
das
in
rorl
adcb
xchg
xchg
icebp
jp
add
jge
pop
mov
mov
hlt
iret
pop
cmc
arpl
lahf
jp
inc
icebp
scas
js
xchg
lds
mov
pusha
je
in
dec
mov
es
xchg
movsb
or
pop
ret
or
jae
mov
sbb
jnp
xchg
fimuls
push
push
test
cmp
mov
cld
lahf
push
test
xchg
movb
mov
mov
jbe
sub
movsb
inc
mov
mov
rolb
xorl
fstl
leave
cld
and
mov
dec
push
dec
cmpsl
sti
mov
lret
dec
in
pop
inc
adc
outsl
mov
cmp
sbbb
clc
xchg
jge
mov
pop
aaa
mov
mov
cmpsl
pop
fisttps
leave
int3
inc
in
push
out
das
inc
les
fcmovbe
cmp
push
add
mov
mov
fcmovne
sub
push
xchg
pop
cld
mov
shlb
mov
mov
inc
xchg
and
xchg
adc
cmpsb
mov
test
repz
dec
fisubrs
subb
cmp
jmp
mov
mov
jmp
jnp
xchg
les
jo
push
push
or
rolb
jno
pop
js
xlat
lea
out
mov
or
cmpsb
shll
or
add
push
jnp
popa
cmp
icebp
add
stc
mov
into
xchg
xchg
or
in
xor
cmp
pusha
sbb
and
and
dec
filds
jns
jmp
das
cmpsl
popa
push
push
adc
fcomps
daa
jb
or
mov
jae
push
cmp
add
fiadds
mov
outsb
loop
push
je
int3
lea
mov
or
loopne
testb
stc
cld
iret
mov
repz
int3
out
fcomip
inc
mov
call
lods
mov
out
push
jo
lret
repz
mov
bound
pop
nop
xlat
fsubrs
inc
pop
movsb
sbb
push
sbb
mov
into
stos
mov
inc
dec
mov
inc
jo
ror
shll
inc
andl
fsts
cmp
push
daa
nop
rcrl
pop
dec
push
sub
and
bound
iret
jnp
and
sub
pusha
jns
inc
in
aam
jb
int
movsb
out
cmp
xchg
incb
jbe
sbb
jb
push
data16
repz
cmpsb
jnp
fdivr
int3
pop
mov
jb
pop
mov
addr16
dec
mov
ja
nop
sbb
nop
xor
or
sbb
sbb
xor
in
sub
shlb
mov
mov
pop
shrl
movsb
fstp
clc
and
lods
fwait
pop
andb
and
scas
mov
sti
pop
xorl
mov
je
mov
leave
add
push
jne
adc
xchg
iret
cs
inc
fwait
xor
xchg
sbb
dec
xor
cmp
in
mov
jnp
dec
ficomps
enter
imul
dec
sub
cmpsl
jl
push
arpl
lods
xor
mov
pop
cwtl
cltd
rcr
inc
mov
lea
push
jnp
mov
jno
jg
enter
test
loopne
rcrb
jbe
sahf
adc
or
loope
in
inc
into
test
inc
pop
cmp
dec
xor
mov
mov
sub
adc
nop
mov
in
int3
jbe
add
cmp
pushaw
xor
cmc
mov
mov
or
lock
stos
mov
jbe
push
sahf
les
in
mov
jecxz
jo
negb
divl
inc
dec
push
cmp
xor
mov
arpl
out
sub
add
pop
loopne
aam
sub
jo
mov
xor
and
xchg
jae
enter
fisttpl
sbb
adc
ret
int
sub
jmp
dec
cmp
xchg
lods
sti
adc
xchg
sti
sbb
dec
ficoml
adc
mov
testl
in
jp
les
cmp
clc
or
movsb
or
fs
loop
andb
or
pusha
cmpsb
addr16
pop
push
mov
add
add
lock
push
mulb
out
push
gs
add
cmp
sbb
and
mov
es
jecxz
pop
repz
dec
push
pop
xor
pop
insl
mov
ds
mov
dec
mov
mov
mov
adc
loope
icebp
ficoms
mov
xor
jle
push
or
jge
nop
push
lcall
sbb
nop
sub
negl
mov
decl
push
call
add
mov
rorl
fsubrl
mov
xor
loopne
fbstp
jmp
dec
ss
int3
jg
call
and
cli
ss
or
push
and
loope
mov
mov
js
jo
subl
nop
out
shlb
shll
ss
mov
rolb
mov
mov
pop
enter
aas
into
pop
rclb
xchg
test
int
adc
or
ds
mov
sbb
stc
clc
mov
inc
adc
jno,pn
pop
jb
mov
int
mov
imul
pop
jle
add
inc
xchg
test
mov
add
sbb
ret
push
shll
push
lods
add
jbe
dec
jbe
fstl
sbb
sub
je
les
mov
rorb
shl
sbb
sbb
fidivl
xor
mov
out
cmpsb
pusha
and
xchg
inc
idivl
sarb
testl
repz
mov
or
lods
cmpsl
sub
lea
loopne
pop
cmp
mov
or
push
fs
xor
dec
jnp
mov
add
mov
addl
dec
dec
dec
mov
js
cmp
lcall
sbbb
subb
jo
sti
pop
jle
inc
or
shl
xchg
jbe
push
fisubl
mov
or
sti
sti
in
push
js
or
stos
arpl
lahf
mov
xor
push
test
jge
ret
add
movsl
idivl
sbb
sbb
xor
xor
lods
xchg
sbb
adc
cmc
inc
out
pop
int
or
cmp
jns
out
fdivrl
inc
ja
pop
fisubrs
or
cmp
inc
repz
repz
xorl
mov
pop
outsb
jns
push
sub
xor
in
jne
xchg
lahf
dec
and
push
add
inc
pop
mov
int
das
push
adc
sub
mov
aam
lods
pusha
mov
inc
ss
push
pop
testb
aam
out
mov
pop
add
jl
cmp
jle
lds
inc
repz
push
fisttps
mov
sbb
sub
out
add
aam
dec
scas
lock
loopne
xchg
xchg
fidivrs
ljmp
fsubl
add
mov
imul
js,pn
out
loopne
addr16
aad
pop
mov
test
mov
aad
pop
adc
pop
xchg
bound
mov
int3
cmc
iret
lcall
imul
xchg
and
xlat
inc
stos
lret
hlt
cmc
xchg
inc
sbb
iret
jb
mov
xchg
lods
xchg
cmp
imul
aam
test
mov
jl
mov
icebp
movsb
and
sub
adc
cmpsb
and
lahf
sub
hlt
lret
push
int3
add
leave
fwait
jo
jnp
popa
sbb
fnstcw
lret
or
pop
cli
cmp
mulb
dec
pop
ret
mov
sub
push
mov
in
sub
mov
je
lds
cmpsb
popf
pop
mov
sbb
sub
movsl
xchg
cmp
lods
loopne
insb
mov
ret
js
adc
test
add
xchg
inc
js
jge
cmp
imul
scas
push
or
sbb
dec
adc
jg
insl
sarl
imul
rcrl
or
xor
pop
stc
inc
jmp
mov
mov
popf
jbe
mov
in
into
push
sbb
xchg
sub
inc
push
test
inc
cmp
pop
stc
cmp
cmc
sti
in
dec
mov
insl
inc
aas
lock
dec
cli
roll
cli
xlat
decb
movd
or
mov
jle
push
div
xchg
xor
outsb
cld
jbe
repz
stos
lods
addr16
out
xchg
jne
jae
fisubs
imul
sub
jbe
cmp
sti
xlat
div
or
cwtl
pop
ds
mov
aad
bound
scas
lock
mov
imul
sbb
sahf
mov
mov
fcomip
lret
dec
jo
push
jne
fsts
popf
jge
push
mov
and
xlat
mull
lods
cmp
into
lahf
fsubrs
push
mov
int3
xor
mov
fldenv
call
in
jmp
mov
jmp
es
out
pop
jecxz
cmovb
mov
mov
rcr
test
sti
or
jnp
stc
icebp
gs
mov
clc
in
jecxz
in
mov
lcall
dec
cld
jecxz
pop
and
adc
popa
mov
out
add
jge
inc
xchg
inc
cwtl
and
das
sub
jl
sbb
lahf
mov
pop
xchg
sbb
fstps
mov
xchg
imul
rorb
jmp
xchg
out
sbb
xchg
xor
in
ret
pop
cmp
aad
adc
shlb
pop
ret
jnp
adc
inc
hlt
push
sub
out
inc
jge
mov
pop
xor
pop
and
inc
les
xchg
mov
jnp
push
les
pop
mov
mov
imul
and
arpl
pop
stc
scas
mov
rorb
mov
inc
push
ficoms
ja
ja
pusha
dec
bound
sub
cmp
cs
xchg
mov
lar
sub
fnstsw
lret
xchg
and
in
out
lea
mov
sbb
fbld
and
movsl
mov
ret
mov
pop
mov
or
mov
xor
mov
push
jge
dec
sub
imul
movsl
out
push
mov
stos
out
rorl
divl
aam
pop
jns
jb
xchg
and
iret
aad
loope
jae
dec
cltd
add
inc
jecxz
cli
add
popf
movsl
mov
fwait
push
adc
jb
mov
fwait
hlt
sbb
mov
and
int
stos
fsubl
mov
sti
or
and
jmp
inc
dec
rcrb
out
mov
push
inc
pop
adc
lcall
hlt
and
stos
lock
add
mov
jmp
inc
cmpb
dec
mov
lahf
ds
mov
mov
mov
and
mov
pop
push
or
roll
adc
cs
daa
js
pusha
jl
iret
in
inc
xlat
cltd
mov
nop
iret
dec
cmp
mov
stc
lcall
or
and
push
and
mov
imul
jns
xchg
sti
and
dec
dec
inc
pop
in
push
cmpsl
mov
stos
xor
cmp
push
cltd
jle
shlb
sbb
arpl
into
inc
mov
push
std
or
cmc
lds
imull
and
lods
loop
sahf
scas
scas
cld
addl
cmp
adc
push
push
add
cmp
dec
sub
das
fcom
sub
xor
mov
push
jg
mov
rolb
in
aam
jne
push
xchg
mov
mov
inc
mov
push
nop
or
mov
xor
push
mov
pusha
aaa
lcall
nop
test
push
and
jno
fxch
jo
mov
out
loop
xor
imulb
push
jg
enter
mov
and
add
mov
dec
push
lods
inc
fists
cmpsl
shll
rorb
testl
adc
xchg
popf
ss
mov
arpl
in
pop
stos
lods
lcall
out
xor
testl
adc
xchg
hlt
xchg
test
loop
pop
push
loope
out
or
notb
add
insl
out
push
cmovb
shll
sub
insl
dec
mov
cmp
push
and
jbe
mov
enter
xor
fs
cmp
lods
rcr
lcall
imul
xchg
mov
add
and
clc
push
icebp
gs
test
outsb
in
adc
outsl
push
sahf
sub
inc
cmp
mov
ljmp
mov
fcompl
xchg
xchg
fs
or
ret
or
pop
xchg
adcb
push
stc
nop
adc
add
lds
dec
inc
xor
shlb
mov
nop
jb
mov
idivb
mov
xor
cwtl
icebp
fidivrl
sbb
stc
push
fcoms
dec
ljmp
dec
mov
shlb
in
xor
dec
out
jecxz
pop
dec
gs
fnsave
out
movb
xchg
shrl
popa
rcrb
or
inc
push
pop
add
insl
lret
cmp
mov
lods
test
out
jge
ret
inc
or
jge
loopne
int
jo
and
jl
mov
add
jnp
or
ds
fsub
mov
mov
mov
movsb
sub
xchg
fs
test
mov
test
xor
test
sub
mov
mov
fstpl
mov
lock
repz
mov
out
outsl
pushf
add
insl
xchg
fs
roll
dec
xchg
dec
and
mov
or
xchg
or
mov
fsubrs
jne
mov
int3
dec
push
push
pop
adc
fnstenv
sbb
std
xor
in
xchg
fildll
dec
push
hlt
xor
adc
mov
pop
pop
lds
add
pusha
dec
xor
cli
shl
dec
outsb
push
pop
fmuls
mov
sub
cmp
mov
out
cmp
and
shrb
cmp
sub
pop
test
in
lcall
mov
stc
add
imul
adc
lret
andb
out
imul
daa
xchg
fsub
stc
add
cmpsb
stos
pop
push
jmp
test
out
xchg
outsb
mov
sub
in
daa
push
jmp
ficoms
xor
mov
xlat
xlat
shrb
lds
stc
lock
jmp
out
pop
dec
in
adc
mov
stc
scas
clc
cmpsb
out
and
xchg
push
daa
jns
jge
aam
sub
lret
dec
in
sub
fcmove
pop
cs
test
icebp
pop
rcr
incb
push
pop
mov
sbb
sub
jecxz
push
jg
movsb
aas
test
mov
outsb
js
repz
sbb
xor
pushf
pusha
sbb
jl
cmpsb
push
pop
lret
insl
and
mov
xchg
ret
outsl
rorl
arpl
dec
inc
jmp
pushf
idivb
and
or
and
cmpb
lcall
in
mov
lahf
mov
sti
mov
lcall
clc
dec
in
add
test
pop
xor
ficoml
push
sub
stos
dec
ret
fs
dec
outsb
test
add
and
sub
mov
daa
lods
addr16
lods
jge
loope
loop
outsb
add
xchg
pop
mov
cmp
sbb
mov
ss
js
loopne
js
lock
cmpsb
cmp
pop
lahf
aaa
mov
push
xor
or
popa
cmpsl
lods
ljmp
jecxz
inc
outsb
cltd
sbb
lahf
push
aas
push
cmc
lods
jno
mov
sbb
enter
xor
adc
pop
sbb
mov
inc
xchg
sbb
ror
sbb
cmpb
lds
shrl
mov
jne
hlt
inc
mov
adc
mov
mov
push
jecxz
sbb
inc
mov
push
insb
nop
cmp
mov
aam
pop
xchg
inc
mov
xchg
push
test
leave
cwtl
test
fiadds
leave
push
add
in
rcr
outsl
mov
fists
sub
dec
add
add
imul
jno
mov
movsl
cltd
bound
and
sub
and
pushf
xchg
cmp
cs
in
pusha
xchg
fsubr
iret
pop
add
adc
pop
dec
dec
mov
jne
repz
sbb
xchg
mov
jno
sub
mov
xchg
jmp
inc
dec
ret
stos
push
jle
sbb
pop
add
call
mov
mov
dec
dec
into
pop
sub
jecxz
jge
pop
push
dec
mov
dec
add
sub
pop
sub
or
lret
push
dec
lcall
inc
dec
adc
and
jmp
sahf
cmp
aas
lods
mov
mov
das
pop
inc
fbstp
repnz
fdivs
jp
add
mov
and
movsl
int
xor
mov
subl
fistpll
out
pop
popa
xlat
repnz
icebp
aas
xlat
repz
xchg
fsubl
movsb
nop
pcmpeqb
xor
cwtl
and
je
imul
xchg
rcl
mov
dec
sbb
mov
test
and
xchg
adc
mov
in
mov
cld
pushf
or
lods
lcall
sti
and
out
fistl
loopne
jp
loopne
int
inc
in
jp
sub
cmp
fucomp
or
and
mov
fnstcw
rcrl
out
xor
pop
movsl
mov
xchg
decl
pop
call
jns
dec
lret
sahf
and
aam
push
pusha
inc
xor
cmp
icebp
rorb
scas
ret
xlat
inc
int
adc
push
xor
cmp
or
gs
shl
cmp
cld
push
pop
add
cmpsb
shrb
mov
cmpsl
sbb
xchg
fldt
mov
jle
daa
add
mov
jo
std
xchg
fstpt
cmp
popf
dec
loopne
mov
mov
jns
pop
ja
jge
mov
loope
rcll
out
ret
pop
frstor
jnp
inc
mov
jnp
cmpsb
mov
inc
adc
pop
xchg
cs
pushf
flds
sub
test
cmp
xchg
sbb
fsubl
rcl
sub
clc
lods
clc
push
mov
cmp
xchg
jp
sbb
pop
gs
inc
lahf
inc
cmp
pop
xor
push
scas
les
jle
adc
sub
stos
pop
cmc
insb
ret
push
into
sti
call
dec
mov
in
fst
jecxz
fwait
add
stos
dec
pop
in
daa
loope
ljmp
loopne
insl
xchg
test
cmpb
aad
and
ss
scas
lret
enter
sbb
mov
xchg
lds
push
insb
adc
cmp
cmp
rcrl
mov
pop
and
pop
imul
call
push
jbe
jns
pop
and
push
lret
adc
mov
and
or
stos
sub
stc
pop
mov
mov
divb
add
imul
hlt
cmp
cltd
loop
imul
in
arpl
cmp
push
dec
sbb
mov
rcl
cs
hlt
sbb
jmp
xor
fdivs
outsb
jp
mov
inc
pop
sub
in
pushf
rcrl
sub
inc
bound
enter
rcrb
inc
aad
ljmp
push
outsl
mov
test
sarl
dec
push
fdivrp
repnz
or
xchg
dec
stc
xor
loopne
cwtl
and
xlat
test
sbb
and
das
int
subl
leave
aaa
bound
outsb
cli
mov
jmp
xchg
out
lea
xchg
xchg
mov
scas
xchg
pop
shlb
lds
dec
jl
dec
test
test
int3
test
pop
mov
and
dec
adc
adc
call
sbb
in
inc
inc
xor
add
movsl
movsb
orl
dec
dec
mov
aaa
xchg
xorb
sbb
pop
vxorpd
xchg
lods
in
jmp
push
mov
mov
into
test
imul
jle
insl
add
xor
insl
adc
or
in
std
mov
mov
call
ret
data16
sub
cmp
mov
dec
fimull
cmpsb
add
repz
or
aam
or
mov
jbe
insb
cmp
sbb
in
scas
ja
sub
and
adcb
int3
sub
mov
pop
inc
xchg
ror
mov
add
into
adc
mov
sub
fiadds
addr16
jne
xor
adc
test
movsb
mov
xor
popa
int3
xor
xchg
mov
fildll
es
in
popf
add
jnp
icebp
pop
pushf
mov
dec
or
jle
rcll
cmpsb
xor
push
jp
xor
out
iret
push
mov
xchg
in
clc
or
aad
das
mov
je
ret
fbld
in
gs
in
fadds
fdivrl
inc
jmp
call
jle
cltd
add
push
test
push
cmpsb
push
lock
push
sub
imul
fcmovnu
cmp
pop
or
fiaddl
in
mov
push
xor
push
jl
pop
sub
or
mov
mov
stos
mov
jbe
int
add
cmp
out
mov
and
aaa
pop
imul
sbb
pop
push
cmp
pop
push
sahf
icebp
addr16
shrb
addr16
lds
push
out
jp
sub
push
stc
bound
push
xor
into
in
inc
dec
stos
inc
ret
fdivs
push
mov
or
inc
pop
mov
jbe
call
sub
inc
rorb
xchg
sub
jno
inc
jecxz
dec
lds
xchg
addr16
adc
jecxz
cmpb
arpl
adc
cmp
and
gs
lods
enter
in
addb
faddl
pop
push
scas
mov
cmp
sahf
out
inc
push
inc
je
push
fwait
test
mov
xchg
dec
into
ret
xor
daa
or
jns
xchg
aam
inc
adc
add
iret
xor
aam
movsb
jge
fcoms
clc
sbb
mov
pop
and
or
push
in
cli
daa
lds
mov
and
push
inc
in
fdivp
sahf
push
out
sub
andb
mov
adc
jno
std
ja
mov
jmp
test
pop
mov
dec
push
cmpsl
lahf
nop
mov
add
lds
inc
jmp
xor
bound
sbb
pop
cmp
push
adc
mov
xchg
cmc
or
loopne
jae
neg
fisubs
cmp
mov
mov
ds
mov
push
movsl
call
xchg
mov
in
loope
or
test
push
push
in
inc
js
cs
lock
pop
dec
testb
idivl
hlt
sbb
hlt
bound
or
or
pop
clc
and
add
faddl
fisubs
out
ret
sbb
sub
sbb
and
int
shlb
repz
inc
mov
add
jae
popa
mov
nop
add
mov
adc
inc
xchg
mov
ret
movsb
popf
and
icebp
fsubl
sti
int3
sbb
fidivl
jl
mov
mov
icebp
xchg
jno
or
dec
push
xor
shll
pop
adc
push
pop
mov
sub
sbb
loope
test
popf
fwait
jmp
ljmp
je
pop
jg
rorl
rcrb
sub
sbb
add
adc
or
and
andb
ret
xchg
pop
jmp
xor
loop
mov
mov
push
jmp
mov
lds
or
or
icebp
pop
ljmp
ret
dec
arpl
add
and
out
pop
jp
dec
popf
enter
loopne
xchg
jne
bound
insb
imulb
std
scas
cmovs
jp
shr
int3
aam
movsl
dec
sub
stos
lret
mov
xor
popa
iret
mov
xlat
push
sti
jl
cltd
mull
insl
outsl
ds
xchg
fs
ja
pop
mov
pop
in
pushf
roll
add
add
sub
std
push
mov
jne
adcl
repnz
or
jle
adc
mov
mov
inc
fwait
mov
test
pushf
fiadds
mov
sbb
jnp
xchg
or
fnstsw
loopne
js
lods
int
ja
push
lods
lcall
pushf
or
jge
sbb
add
push
imul
or
mov
push
pop
loope
ss
jp
dec
decb
lds
add
cs
dec
add
mov
in
jb
pop
pop
loop
lods
add
repz
pop
push
push
dec
pop
xchg
sbb
push
jne
jnp
jmp
call
mov
test
je
mov
notl
adc
push
stos
in
push
adc
sub
sbbl
add
iret
sub
out
cmpb
jl
js
aaa
inc
cmp
push
mov
loopne
test
and
push
mov
imul
enter
cmp
push
ja
mov
sbb
int3
sbb
push
mov
cmp
cld
xor
lret
cmpsb
push
push
loop
sti
jecxz
and
das
push
pop
xchg
out
in
jge
xor
sbb
jle
iret
mov
add
insb
lcall
inc
out
nop
aad
and
add
add
add
lret
test
shr
xchg
lock
dec
mov
sub
loopne
jl
je
pop
or
ss
jne
sub
jp
in
enter
mov
mov
jp
das
pusha
les
sbbb
sub
push
sub
dec
aaa
call
ret
insb
jb
loop
fdivl
cmp
dec
push
jp
xchg
test
pop
jecxz
iret
std
in
nop
dec
movsb
xchg
pop
rcrl
pop
jle
jmp
add
sbb
test
cmc
aam
cmp
dec
stos
int3
bound
dec
lods
cmpl
push
and
scas
mov
movsb
aaa
xor
cmp
icebp
loop
cmp
push
push
dec
stos
mov
mov
xor
test
lds
add
jo
orl
cmp
sti
in
pop
adc
fstps
shlb
bound
xchg
rclb
push
aad
or
cmp
cli
push
push
loop
mov
lret
movsl
or
dec
std
aam
push
pop
daa
test
cmc
xor
stc
sbb
mov
inc
bnd
dec
jecxz
or
shl
jmp
fwait
icebp
enter
cmp
lods
dec
inc
cmpsb
lcall
shl
mov
pop
adc
test
or
jp
jmp
rcrl
out
inc
sahf
sbb
shlb
add
pushf
lea
push
cld
sub
xchg
adc
fistl
or
sub
popa
xchg
adc
enter
jp
add
pop
pusha
mov
inc
out
fwait
into
push
ja
shll
inc
pop
dec
xor
sub
insl
shll
pusha
cld
nop
jmp
lahf
sub
add
out
enter
xadd
jmp
xor
cmp
mov
out
es
scas
repz
add
and
inc
dec
add
std
push
aas
lods
push
cmp
push
nop
jbe
mov
icebp
push
mov
inc
adc
push
movsb
jl
mov
insb
pusha
xchg
lea
jns
push
add
jge
repz
dec
fnstcw
divb
jb
sbb
mov
in
or
xor
mov
sub
add
out
push
clc
cmp
icebp
dec
test
stos
mov
dec
shll
ljmp
outsl
dec
sbb
and
insb
shr
lahf
xchg
aad
cmp
enter
int3
addb
test
out
outsl
push
fstp
xor
push
repnz
jmp
icebp
imul
out
ss
lret
lods
gs
mov
inc
sahf
cltd
js
jg
aaa
cmpsl
jmp
cmp
std
repz
inc
xchg
and
movsb
pop
jb
jb
cmp
jbe
xor
cmp
aad
jae
leave
pusha
or
mov
nop
push
xchg
mov
add
cltd
inc
scas
jo
pop
mov
push
mov
dec
insb
sbb
sbb
jge
in
jl
xchg
adc
icebp
xchg
sub
in
sub
lcall
addr16
fists
dec
cmp
jae
mov
pusha
inc
lahf
jl
inc
cmp
test
mov
sub
jo
fisttpll
sbb
xchg
pop
imul
das
rclb
cmp
mov
insl
push
xor
mov
int
xor
arpl
push
emms
sarb
or
sbbl
imul
push
jno
adc
push
mov
xchg
and
xchg
cmp
sub
add
pop
pop
inc
inc
loopne
mov
call
xchg
fadds
xchg
ljmp
inc
xchg
fbstp
fildll
xor
push
lock
pop
loope
aas
fstpl
inc
xlat
pop
mov
push
es
rorl
sahf
or
stos
xor
xorl
push
cwtl
ja
les
push
and
in
ret
pop
dec
test
loope
test
mov
jns
or
push
out
mov
xor
ja
adc
ret
sbb
mov
insb
flds
pop
test
cmp
sahf
das
dec
sbb
dec
adc
mov
int
xchg
mov
mov
in
pusha
sbb
fsubrl
aad
ret
or
pop
lcall
inc
add
cwtl
sbb
pop
mov
ud1
into
mov
cltd
dec
leave
sbb
dec
lret
loopne
arpl
pop
lock
sub
bound
fs
xchg
outsb
sub
fnstsw
sub
int
xchg
adcb
js
out
add
pop
adc
or
mov
iret
cmp
and
iret
jnp
test
add
jl
clc
cmpsl
scas
into
mov
test
push
mov
test
test
mov
push
and
repz
rcll
lcall
ja
sub
mov
sbb
loope
and
and
mov
enter
mov
daa
dec
or
add
mov
mov
gs
jmp
mov
insb
push
mov
dec
test
sub
lret
nop
ljmp
jo
mov
xor
insb
push
cmp
push
arpl
push
add
xchg
std
add
popa
dec
cmp
cmpsb
ds
lods
outsl
cli
cmp
dec
pop
insl
int
vmread
fstpt
ret
imul
xchg
adc
mov
add
sub
xor
enter
adcl
ds
push
shlb
push
roll
out
add
mov
mov
stos
aam
jp
stos
jae
fldt
lret
lret
popl
xchg
push
and
xchg
mov
xlat
mov
dec
lcall
les
lcall
ficomps
fildl
stos
mov
lds
adc
imul
mov
adc
push
mov
pop
cmpsl
pusha
mov
rclb
xor
leave
lret
fwait
int
add
les
add
mov
ret
sbb
dec
sub
cwtl
mov
jge
xor
jg
inc
bound
call
push
call
dec
in
dec
pop
mov
jmp
or
aas
cmp
repnz
push
mov
shlb
push
xor
sbb
dec
imull
sbb
andb
jnp
and
out
mov
or
add
xor
lods
punpckhdq
es
mov
sub
rol
sbbl
mov
sbb
dec
mov
add
mov
fcmovb
sarb
sti
jae
lret
addr16
add
flds
mov
ret
in
pop
aaa
push
cmpb
adc
mov
insb
sbb
lods
jns
xor
mov
dec
mov
sti
mov
jp
jle
enter
insl
clc
adc
pop
ret
pop
push
xchg
jno
sbb
mov
or
in
shlb
lret
adcl
jmp
add
push
cs
enter
xor
mov
xchg
jo
in
cmp
fidivs
shrb
dec
test
adc
add
mov
mov
adc
addr16
pushf
mov
adc
jbe
cmpsb
mov
rorb
rcrl
sub
dec
frstor
push
pop
xchg
xchg
xor
ret
incl
cmc
adc
sub
dec
ds
or
dec
mov
pushf
loope
arpl
and
or
push
jg
movsb
push
dec
add
loop
lds
movsb
cmp
scas
pop
mov
mov
push
dec
cmp
dec
push
jg
adc
aaa
subb
das
mov
pusha
inc
jl
push
jmp
out
ret
pop
inc
das
inc
dec
inc
je
imul
pop
mov
hlt
mov
icebp
iret
lods
cli
jns
enter
inc
dec
aam
outsl
jecxz
inc
mov
fnstsw
insl
gs
imul
mov
or
xchg
cld
mov
ret
mov
xchg
xchg
in
ja
pop
insl
jo
cmp
jne
pushf
xor
popf
data16
pop
movsl
dec
dec
bound
insb
scas
enter
cmp
lcall
adc
or
lcall
outsl
decb
dec
decb
and
xchg
or
stc
cs
popf
push
fwait
stos
out
jno
dec
stos
out
dec
pop
adc
shlb
jne
test
sbb
dec
or
push
in
lea
ss
jb
xor
jns
pop
inc
cmpb
cmpsl
mov
add
mov
add
mov
sahf
add
pop
cmp
daa
mov
aad
cmp
in
or
push
rclb
sbb
push
pop
out
cmp
add
or
sarl
adc
push
repz
mov
xchg
or
jno
mov
mov
mov
out
add
push
xchg
aas
mov
dec
loop
shl
cmp
inc
mov
fdivr
jo
movsb
cmp
insb
pop
and
push
pop
aam
cmp
or
mov
in
orl
imul
repz
xchg
mov
test
test
fdivrl
popa
cli
xchg
stos
xor
lods
cli
popf
arpl
fucomip
mov
pop
rol
pop
lods
inc
repz
cmpsl
and
call
test
rorl
xchg
add
mov
stc
cmp
lods
fnsave
pop
or
rcll
mov
ja
es
adc
lea
icebp
inc
or
data16
fisttps
shl
pop
sub
call
fdiv
dec
mov
adc
ret
pop
inc
enter
popf
enter
xorb
pop
clc
push
in
les
dec
jo
or
push
or
mov
aaa
sbb
js
pop
lods
gs
loop
pushaw
bound
cmc
pop
aaa
cwtl
xor
mov
pop
dec
and
aas
jge
xor
ret
mov
fwait
sub
fs
out
hlt
jmp
mov
test
or
sub
push
mov
push
add
imull
into
dec
xchg
mov
inc
add
mov
jle
cmp
or
mov
lea
fisubs
lret
sub
aad
popa
dec
lcall
add
ja
shll
push
or
cmpb
inc
lret
pop
add
xchg
mov
mov
mov
add
xchg
repz
inc
loop
xor
scas
xor
sarl
fidivl
mov
testb
mov
aas
push
adc
inc
sub
mov
ss
movsb
int
xchg
lods
ret
lret
aas
push
in
mov
xchg
and
fcoms
movsb
movsl
iret
jb
in
xor
sub
dec
adc
dec
jno
call
mov
adc
ret
or
push
pop
push
fidivs
idivb
adc
nop
out
loopne
push
fmuls
decb
js
insl
mov
or
cmc
inc
jne
lret
in
add
mull
mov
outsb
cli
fwait
sbb
andb
jno
bound
popf
rcr
push
push
jb
adc
push
bound
xor
out
cmpsl
imul
aas
lods
outsl
call
sub
aas
insb
xchg
lods
cmc
sub
shlb
insl
jge
pop
xor
rolb
movsb
inc
mov
push
push
sub
dec
xor
add
gs
iret
fiaddl
loop
xchg
sahf
jb
test
xchg
mov
push
jae
scas
and
out
jbe
std
fcomps
notb
cs
int3
je
ljmp
mov
adc
cli
add
out
cs
jge
mov
rcrb
jp
mov
hlt
mov
or
xchg
mov
ret
xor
int3
push
orl
push
fildll
test
mov
pop
adc
hlt
inc
fbld
lea
jbe
dec
imul
fildll
nop
mov
fcomi
flds
sbb
dec
test
sti
lret
and
lods
dec
add
add
stc
push
xor
cmp
xor
and
and
add
rcll
or
cmp
mov
lret
and
lods
frstor
mov
push
or
fnstsw
out
mov
out
pop
fs
ds
cmp
adc
pop
xor
pusha
mov
insw
push
cwtl
shlb
sbb
arpl
loope
fwait
mov
cmp
mov
sub
mov
xchg
sub
pop
xor
mov
mov
adc
dec
or
in
and
bound
pop
test
pop
nop
xlat
push
xchg
loopne
xorb
pop
enter
push
mov
pop
mov
pusha
push
sub
lea
xchg
jg
incl
ret
push
loope
mov
lock
insl
mov
inc
xchg
stc
and
notl
ja
pop
fidivl
scas
inc
lods
test
push
add
xor
cld
dec
movsb
jae
xchg
mov
ljmp
inc
xchg
jp
je
gs
mov
push
in
sbb
es
bound
push
or
pop
adc
shrl
xor
idivl
sbb
out
popf
pop
dec
add
rcl
in
or
in
jb
arpl
xlat
scas
es
icebp
xor
stc
push
push
dec
out
mov
aad
push
in
dec
addr16
icebp
push
jmp
cli
push
rcrb
fwait
addl
inc
pusha
xchg
pusha
nop
ds
fs
icebp
add
xchg
xchg
mov
mov
xor
mov
cmp
sahf
adc
fmuls
cmovo
stc
sub
jmp
enter
jbe
loop
ss
cmpsl
out
dec
stos
ret
cli
fwait
aaa
pop
pop
mov
mov
insl
and
cltd
xlat
lret
outsb
inc
push
add
adc
addr16
dec
mov
daa
sub
sbb
mov
rorb
mov
xor
push
pop
dec
in
sahf
sbb
nop
idivl
imul
pop
ficoml
mov
and
pop
stc
push
xor
xchg
cmp
sub
sarb
mov
dec
js
jp
jno
cmp
and
xor
jnp
dec
iret
test
pop
mov
push
jae
push
jecxz
pop
lea
jp
sub
xor
das
xchg
sti
dec
push
dec
sub
inc
mulb
mov
jbe
jmp
jo
push
scas
xchg
lret
movb
divl
push
sarl
jg
mov
clc
rcrb
aam
jl
jmp
lahf
enter
push
fxch
dec
loop
in
jne
aaa
pop
sbb
jmp
mov
out
mov
daa
or
shll
fadd
frstor
adc
cmc
aad
repz
xchg
orb
stos
or
mov
sti
or
test
aaa
xorb
movsl
and
mov
lea
mov
push
pop
and
mov
jbe
fucom
mov
adc
pop
jp
jnp
pop
dec
daa
movsb
aad
cmp
jae
sub
fld
movsl
cltd
sub
add
loopne
and
cmpsb
int
mov
xlat
cltd
std
fidivs
iret
stos
cmp
into
lods
test
push
cli
stos
fldenv
in
xlat
pop
rclb
jne
xor
pop
fisttps
jbe
addb
or
lock
lcall
sbbl
push
addb
les
jae
call
scas
inc
gs
xor
adc
xchg
jmp
mov
lret
pusha
dec
mov
lret
aaa
out
or
push
mov
shll
and
pop
out
pop
mov
lret
inc
fcmovbe
pusha
aaa
jmp
repz
lret
mov
into
outsb
data16
mov
dec
adc
jle
pop
jo
jg
out
push
xchg
push
push
add
cwtl
sub
push
adc
inc
and
cmp
sub
mov
sbb
jne
fs
lcall
movsb
cmpsb
test
add
sub
rclb
pop
and
sbb
sahf
pop
jae
repnz
fldcw
adcb
in
cld
mov
mov
jg
sub
mov
gs
mov
fildl
faddl
ficoml
std
aaa
and
ds
or
mov
test
cli
imul
mov
xchg
add
push
cld
pop
dec
aaa
mov
adc
xchg
mov
test
rol
lds
cld
and
add
dec
xor
dec
shlb
push
js
and
in
jecxz
fimuls
stos
jge
xor
push
leave
jb
sbb
sbb
addr16
or
mov
xchg
aad
outsb
inc
lock
or
add
sub
push
adc
fadds
xlat
out
dec
cmpsb
loop
lds
enter
stos
mov
movsl
sbb
mov
shrb
jmp
pop
mov
push
pop
or
push
mov
cmpsb
les
sub
es
pop
xchg
ret
jb
push
adc
in
push
jg
pop
iret
mov
sbb
jge
xor
arpl
das
je
xchg
lock
and
imul
or
fldt
lret
xchg
outsb
fildll
xor
cli
push
addl
adcl
and
iret
xchg
int3
lods
jns
pop
andl
std
movsl
jb
sbb
pushf
mov
jno
add
jl
xchg
mov
xor
les
mov
xchg
rcrl
mov
xor
call
dec
test
lds
mov
add
js
inc
leave
xchg
push
leave
mov
mov
pop
imul
shl
inc
pop
test
push
inc
out
jnp
xchg
inc
jns
sbb
adc
push
push
mov
mov
cmp
out
mov
movsl
jl
pop
jle
fisubrs
insl
mov
mov
sub
int3
lret
test
dec
cli
add
xlat
adc
lret
out
pop
or
sub
sub
sbb
dec
sti
test
adc
cli
js
mov
lea
out
inc
xchg
popa
pop
aas
pop
outsb
aad
incl
test
adc
fwait
or
lahf
ss
mov
lock
fistl
lods
add
mov
pushf
ljmp
fdivs
pop
mov
push
mov
add
addr16
jle
jo
add
sub
jnp
jle
push
lock
lea
inc
sbb
xchg
ljmp
sahf
add
int
outsl
mov
dec
ret
popa
push
inc
xchg
rolb
ss
add
sub
jae
sahf
mov
fucomp
imul
pop
lcall
cmpsl
icebp
scas
pusha
jmp
pop
not
or
inc
movsl
stos
jne
pop
sub
es
notl
js
xchg
mov
sub
jns
inc
mov
push
sbb
shlb
ret
sti
adc
shl
and
mov
jno
stos
mov
pusha
out
fsts
or
cmp
mov
xchg
sti
fcoml
xchg
nop
xchg
mov
or
xor
xchg
les
aas
mov
repz
add
fsubrl
add
xchg
and
jl
xor
xchg
jp
xor
mov
repnz
scas
rclb
push
jp
into
sbb
cmpsb
cwtl
jne
xor
je
sbb
lds
xor
scas
adc
lahf
mov
sbb
xchg
imul
test
movsb
in
sti
pop
fistl
lahf
in
nop
sbb
adc
pop
pushf
push
dec
pop
dec
fdivp
outsl
adc
xor
or
out
hlt
mov
ds
repnz
push
mov
mov
add
rcrb
jns
iret
sbbb
pop
cmp
pop
push
in
or
in
xchg
arpl
jns
lret
add
arpl
mov
lods
sbb
test
insb
pop
sbb
sti
sbb
lcall
add
out
sbb
dec
sub
push
and
ds
jo
addr16
xchg
scas
mov
shr
mov
test
or
mov
stos
dec
jns
in
dec
test
ficomps
stos
jbe
pop
sbb
orl
mov
test
mov
std
push
out
mov
xor
jg,pt
mov
scas
or
or
add
pop
arpl
stc
dec
hlt
mov
mov
add
inc
xchg
les
gs
mov
bound
mov
repnz
or
pop
cmpl
movsl
incb
sub
pop
sarb
pop
adc
arpl
mov
dec
out
call
jne
push
push
pop
lds
sarl
fldenv
sub
sub
repz
clc
or
dec
and
adc
mov
adc
loope
or
sub
sti
dec
lret
lgs
mov
sbb
inc
cmp
inc
pop
cmp
scas
lds
roll
outsl
xchg
lea
fadds
in
mov
pop
add
cmp
lret
lds
in
loopne
lods
test
jbe
js
sbb
mov
dec
lods
stc
fadds
sbb
push
icebp
ja
cwtl
push
je
mov
sti
testb
sub
fnstsw
pop
jl
or
add
stc
js
xchg
ret
ror
out
jne
mov
test
sbb
pop
push
mov
stos
adc
nop
in
ds
xor
stc
add
push
popa
stos
out
sbbb
rcrl
mov
jno
ljmp
mov
pop
jmp
aad
lds
inc
aad
and
cmpsl
das
adcb
sub
dec
push
in
dec
or
jo
xchg
divb
cmp
pop
or
sbb
daa
outsb
sbb
dec
inc
push
imul
xchg
sbb
inc
sbb
test
js
shl
xchg
ret
jnp
imul
sti
dec
test
lcall
lods
fldenv
xor
movsb
and
mov
stos
mov
ret
add
imul
and
aaa
sarb
xchg
and
cmpsb
pop
inc
mov
jo
and
pop
stos
or
loop
out
outsb
jb
add
cli
pop
dec
adcl
stc
mov
sbbl
mov
cmp
adc
add
cltd
cld
jno
jo
outsl
loope
and
jp
les
mov
scas
pushf
icebp
mov
out
mov
push
jg
call
or
fdiv
jno
clc
nop
push
jns
or
jmp
xchg
cld
dec
int3
add
xor
mov
outsb
mov
es
scas
sbb
sub
pushf
mov
lcall
xor
aad
setge
in
dec
bound
mov
xor
shrb
dec
fmull
data16
shll
sub
or
xchg
sbb
xor
jl
scas
andl
cmp
repz
cmp
mov
loopne
or
rol
pop
xchg
mov
xchg
int
inc
adcl
mov
xchg
fsubs
adc
xchg
stos
xchg
cwtl
enter
xor
icebp
les
nop
add
xchg
insb
xchg
addr16
movsb
sub
mov
pop
orl
sbb
jle
stos
adcb
cmpsb
stos
mov
inc
fisubl
movsb
pop
pop
mov
inc
add
push
push
jge
add
std
out
push
pusha
sub
rorl
sbb
das
ret
pop
sub
cmpsl
xchg
mov
shlb
das
popf
movsb
popa
mov
dec
addr16
push
xchg
add
add
test
add
repz
dec
sub
pushf
mov
out
sbb
cmpsl
stos
jne
icebp
pushl
lcall
xchg
add
ljmp
pushf
add
repz
out
inc
shrb
pop
sti
sbb
mov
iret
arpl
lds
jae
lock
mov
daa
mov
addl
mov
push
sbb
popa
in
or
dec
push
pop
push
sarb
scas
push
jmp
pop
mov
je
push
lcall
cmp
dec
mul
or
and
shl
push
sub
cltd
stos
cld
push
fidivs
inc
push
pop
addr16
cltd
cltd
jns
fidivs
ds
lock
xchg
mulb
xor
movsb
adc
mov
cmp
je
gs
movsl
pop
push
push
ss
lds
popa
aas
xchg
jge
stos
aaa
sub
sub
xchg
fistps
mov
insl
je
and
mov
jb
shrl
in
mov
cmpb
inc
loop
push
int3
aam
jecxz
lock
mov
neg
sub
loope
push
daa
mov
mov
leave
add
xchg
fistps
sbb
pop
lods
adc
test
stos
mulb
cwtl
pop
imul
mov
mov
cltd
xchg
lock
subl
push
aad
pushf
lret
push
push
ja
test
rorb
sbb
sub
fildll
icebp
cld
int3
sbb
test
rclb
xchg
or
sub
add
lods
xor
or
pop
mov
enter
mov
jmp
stos
shl
or
fs
and
xor
fstl
jae
outsb
and
xor
xchg
mov
pop
fbstp
adc
aad
ret
adc
stc
ds
into
stos
aad
lds
push
popf
decl
push
pop
lock
inc
rorb
push
in
inc
push
push
fcomps
popf
adc
inc
pushl
pushf
and
cmp
pushf
and
adc
mov
jb
pushf
mov
js
insb
jo
lcall
test
push
sub
popf
lds
inc
loop
in
js
or
popf
jmp
icebp
push
int
pop
fs
xchg
add
aas
dec
aam
je
test
inc
iret
inc
js
leave
imul
roll
out
cmp
cmp
mov
dec
cmp
filds
xchg
into
sub
pop
xchg
cmc
leave
pop
cmp
cmp
jnp
jne
nop
or
add
add
es
jp
cmp
sub
adc
les
mov
jl
add
inc
xchg
aad
and
pushf
inc
test
dec
fs
loop
aas
mov
jp
movsb
inc
dec
inc
cmpsb
xor
aad
xor
cs
xchg
adc
mov
mov
mov
out
in
fs
daa
jmp
add
neg
lods
fisubl
outsl
hlt
jmp
add
enter
cmp
add
cwtl
fwait
icebp
jmp
dec
jp
cwtl
ja
shlb
dec
jmp
cmp
cmp
push
cmc
pop
movsl
pop
push
mov
pop
jmp
mov
mov
xor
cmp
push
push
jl
add
dec
incb
or
jb
in
out
in
stc
les
fldcw
push
repnz
aaa
add
dec
mov
push
add
dec
add
stos
sub
inc
pop
jno
in
ljmp
lods
cmp
mov
add
mov
fisttps
inc
int3
and
stos
aas
cmp
test
lock
xchg
adc
fimull
enter
lods
adc
xchg
outsb
aad
xor
addr16
orb
push
lret
xor
jo
int3
cmp
int
and
mov
sub
pop
mov
or
xchg
xchg
addr16
fwait
add
push
jne
dec
and
mov
inc
orl
xchg
adc
in
pop
negl
pop
xchg
lcall
mov
inc
mov
out
mov
pop
sub
and
dec
xchg
sub
or
lds
scas
lods
and
xchg
xchg
push
aas
inc
mov
aaa
pop
mov
push
mov
pop
gs
in
fstl
hlt
leave
fdivs
hlt
xchg
fimuls
fs
inc
call
jp
or
stos
movsl
rorb
int3
push
adc
dec
repnz
mov
cmp
lcall
mov
mov
push
sti
dec
out
leave
clc
sub
sub
xor
inc
cmc
add
insb
out
sarl
aaa
jg
inc
mov
push
stos
popl
sti
bound
mov
aam
mov
dec
insb
add
mov
and
xor
ss
inc
movsb
sbb
movsb
aad
fadds
xchg
cs
mov
lock
and
xchg
sbb
sub
popa
shrb
xchg
push
inc
sub
mov
leave
cmp
pop
and
ja
cs
dec
mov
ret
fstpt
ds
insl
ret
jbe
xor
in
imul
cmpsb
jnp
scas
push
das
jae
jmp
inc
sbb
iret
ficoms
sahf
rcrb
popa
daa
pop
das
addl
lcall
nop
push
mov
sahf
and
in
jp
xor
imul
psubsw
push
stos
add
lds
stc
dec
xchg
jae
imul
leave
scas
stc
aas
adc
cs
and
in
push
xchg
and
push
xchg
mov
mov
adc
xlat
and
and
lret
mov
fs
or
outsb
add
or
nop
dec
insb
push
cmc
ljmp
js
cmp
shll
and
leave
sbb
mov
push
mov
fsubl
push
jge
mov
fs
aas
shll
jo
lahf
or
out
jo
movsb
icebp
sub
adc
sbb
pop
enter
xchg
sub
pop
loopne
loop
pop
jno
mov
adc
in
insb
push
and
adc
jne
mov
lea
add
cmp
scas
xchg
dec
stos
popa
mov
int3
aam
adc
out
jb
push
push
jae
in
or
pop
sub
scas
pushf
jno
sub
xor
es
scas
dec
xchg
xlat
aas
push
dec
push
cmp
jnp
push
mov
cmc
mov
adc
out
cmp
notb
scas
adc
adc
clc
push
cmpsl
out
pop
fimull
jbe
inc
dec
sub
add
push
pop
xchg
push
adc
ljmp
dec
das
push
dec
cmp
pusha
imul
cs
inc
roll
or
cmc
sub
test
sub
sarb
loop
dec
jmp
jg
lcall
pcmpgtb
aaa
cmpb
pop
mov
jb
push
loop
mov
or
dec
aas
ret
inc
aas
xchg
jb
ficoml
or
bound
mov
out
loop
xor
icebp
scas
sub
inc
out
aam
sahf
jmp
test
scas
mov
nop
out
push
mov
push
xor
jmp
icebp
lret
or
testl
test
mov
adc
push
dec
push
inc
jno
idivb
cmpsl
push
and
dec
xchg
add
into
lcall
jae
fcoml
or
and
push
movsb
sbb
push
pop
mov
fadds
mov
and
lods
dec
push
mull
daa
jno
xchg
sbb
pop
mov
gs
pop
iret
std
cmpsl
nop
jle
gs
ljmp
inc
or
cld
outsl
mov
pop
mov
loopne
aas
sub
insb
imul
push
fnsave
or
test
divps
xchg
call
jl
in
movsb
clc
xchg
ds
clc
daa
hlt
or
pop
aam
and
push
pop
sub
xchg
push
mov
adc
add
sub
push
dec
or
push
in
test
mov
pusha
je
add
push
mov
adc
push
pop
out
sub
lock
push
and
jle
sub
xor
xor
aas
push
scas
cmp
mov
shll
outsl
les
bound
inc
cmp
and
adcb
repnz
iret
das
mov
scas
aaa
sti
movsl
sbb
adcl
arpl
iret
and
cld
jae
fiaddl
xor
jo
mov
loope
xchg
inc
or
outsl
insl
xchg
add
sub
xor
push
shrb
pop
jbe
dec
xor
fcoml
cmp
mov
ficomps
or
pushf
or
cmc
pop
lret
sti
enter
pop
push
push
out
adc
inc
push
jne
cld
push
stos
int
mov
mov
mov
mov
aam
xchg
xchg
cmp
cmpsb
hlt
das
clc
enter
fstpt
sbb
leave
or
cmp
push
clc
and
aad
popf
test
lea
jo
jnp
dec
sti
pop
fwait
sub
pcmpgtb
cmp
mov
cs
jmp
sti
and
push
pop
inc
vpmaddwd
pushf
pop
mov
push
popa
dec
pop
fs
sarb
ret
sub
hlt
or
jecxz
popf
lock
sbbl
pusha
mov
push
fs
test
movsl
sahf
cmc
scas
std
or
fucomi
pop
mov
cli
inc
push
shl
mov
push
push
mov
bound
mov
lods
cli
xchg
je
or
loopne
lret
push
stos
int3
lock
insb
les
or
cli
iret
inc
pop
ds
mov
sub
or
filds
push
lret
outsl
hlt
mov
mov
loop
rclb
fadds
mov
sbb
inc
pop
lods
insl
enter
int3
add
xor
inc
outsb
testl
inc
insb
stos
shlb
mov
stos
pop
mov
sub
outsl
xor
frstor
pop
dec
std
pop
divl
mov
cmpsb
xor
fistl
xlat
or
test
in
int
pop
mov
mov
scas
in
pop
sub
fisubs
into
shl
andl
cwtl
xchg
jo
push
int3
out
push
jecxz
mov
shrl
and
jp
icebp
shll
xchg
pop
cmpsl
pop
outsb
dec
mov
movsl
arpl
mov
sbb
pusha
testb
cltd
dec
pop
inc
cwtl
mov
sbb
cmp
shrl
or
or
add
xor
sti
adc
aad
cmc
add
sbb
rcll
enter
test
call
jp
jb
jge
mov
dec
push
sub
in
inc
inc
sbb
cmp
push
mov
push
xchg
xchg
insb
stos
xor
shlb
pop
jecxz
mov
sub
fildl
xchg
pop
incb
adc
xlat
sbb
sarb
and
mov
mov
mov
lock
ret
adc
dec
rcrl
leave
lcall
enter
jle
dec
cmp
mov
push
stos
sub
mov
jno
sti
cmpsl
and
xchg
push
cmp
xchg
dec
mov
out
mov
cmpsb
and
mov
sub
mov
outsl
jbe
out
mov
xchg
sbb
addr16
add
enter
hlt
aam
jle,pn
clc
pop
mov
loop
push
cmp
add
movsb
add
cmp
xor
jl
dec
push
sub
push
sbb
adcb
push
mov
and
je
add
dec
ss
push
xchg
sub
xor
rol
sbb
push
cmpsb
xchg
bound
sahf
mov
das
in
adc
pusha
adc
les
add
shrl
jg
cltd
cmpsb
dec
mov
cmp
dec
mov
pushf
and
pushf
stc
inc
dec
jb
dec
lods
xor
aam
sti
in
xchg
jae
dec
mov
mov
mov
dec
and
cld
xchg
mov
out
int
das
jge
jle
mov
inc
outsl
aam
aas
test
dec
and
pop
and
mov
cmp
out
nop
inc
fs
sbb
lds
adc
jge
cmpsb
or
ljmp
xchg
out
pop
sbb
adcl
add
dec
mulb
lock
jmp
mov
mov
adc
test
mov
lahf
cmp
cwtl
push
dec
jmp
dec
and
lret
cld
jb
adc
loopne
fidivs
inc
xlat
pop
enter
jne
and
jmp
arpl
sub
outsb
xor
cmp
lods
lods
push
xchg
mov
add
mov
pop
arpl
xor
inc
fdivs
jg
pop
dec
and
xor
mov
mov
adc
xchg
ss
sarb
push
xorl
dec
pop
add
lods
sub
dec
jne
fdivrs
cmp
jmp
cmp
les
clc
imul
sahf
outsb
mov
dec
ss
jp
xor
pop
mov
mov
iret
mov
aas
or
cmp
mov
jp
mov
iret
mov
push
mov
and
mov
in
mov
adc
or
in
jnp
scas
jl
test
daa
fists
or
xchg
pop
mov
mov
stos
std
add
rol
adc
xor
push
mov
pop
inc
and
loopne
cltd
dec
scas
lock
arpl
popa
lahf
jns
lret
and
xchg
xor
pushf
xlat
pop
pushf
adc
jge
pop
orb
loope
jmp
clc
loopne
movsl
aas
pop
push
and
jecxz
cli
fwait
movq
inc
lret
leave
out
xchg
stc
sbb
ret
out
push
out
mov
mov
sarb
into
test
lahf
pop
fidivrs
sbb
jne
out
sbb
dec
pop
dec
aas
outsb
aaa
pop
test
test
dec
popf
jne
aaa
xchg
dec
fcoms
sbb
nop
fstpl
inc
lods
jg
scas
jbe
out
jl
mov
push
xrelease
jno
into
sbb
fisubrs
cmpsl
or
push
dec
dec
sar
incb
jl
rol
jecxz
push
xchg
arpl
inc
pop
test
data16
mov
in
jns
ds
mov
mov
push
fsubrs
call
dec
sub
dec
and
cmpsl
dec
nop
out
sub
cmpsb
leave
ficoml
ljmp
ss
jno
loop
repnz
xchg
mov
xchg
mov
aaa
scas
jae
sbb
lret
mov
imul
mov
leave
adc
fidivrs
hlt
inc
pop
mov
mov
mov
jno
rcrl
pop
stc
decl
jb
ret
mov
adc
push
rorb
inc
jbe
inc
testb
lret
xchg
pop
fbld
stos
int3
add
cmp
push
fistl
jmp
xlat
daa
out
aad
inc
sbb
fidivrs
pop
fmuls
sar
push
repnz
jne
push
xchg
mov
inc
aad
decl
jge
mov
cld
icebp
jge
pop
mov
out
lock
and
mov
mov
mov
shrb
push
sbb
push
jno
xor
sti
jmp
stc
and
or
les
inc
mov
popf
inc
lods
icebp
stos
jp
in
mov
ds
sbb
dec
popa
mov
movsl
xor
adc
or
push
or
scas
arpl
dec
aad
outsl
das
cmpl
jnp
inc
cmp
cmp
pushl
add
xchg
scas
sub
dec
cmp
pop
pop
cld
stos
faddl
sbb
and
cli
sbb
lea
jno
dec
mov
out
xchg
and
dec
mov
jae
aam
xchg
inc
mov
sub
cli
jge
and
inc
imul
popa
push
incl
incb
test
xchg
mov
dec
popf
int
jnp
daa
scas
inc
sub
fimull
pop
rolb
or
sbb
add
inc
xchg
cmp
pushf
xchg
cmc
mov
clc
mov
int3
sbb
jmp
lea
push
scas
arpl
xchg
xchg
pusha
mov
cmp
mov
or
clc
push
flds
outsb
stos
xchg
pushf
xor
inc
dec
mov
push
out
outsb
and
clc
xchg
imul
mov
pop
enter
sahf
shrb
ret
mov
lret
sahf
dec
pmulhuw
adc
cltd
lret
icebp
dec
stos
mov
add
cli
pop
jae
and
and
fwait
jl
out
cmpsl
cmp
pop
mov
sbb
dec
push
stc
and
mov
std
pop
mov
cld
scas
aas
sbb
xchg
pop
adc
js
movzwl
xor
divl
aam
movlps
fldcw
inc
int3
xchg
ss
mov
jecxz
mov
iret
sub
rcll
pop
and
pushf
inc
ljmp
rorb
das
lods
xchg
mov
inc
gs
and
sbb
jno
xor
stos
fmul
or
repz
fistpl
mov
xchg
inc
andb
mov
xor
lods
mov
inc
or
sub
imull
sbb
lret
mov
int3
jmp
dec
jle
sub
inc
adc
orb
push
je
fsubl
test
sub
sub
rcr
repz
arpl
pusha
mov
xchg
sbb
inc
cmp
test
lods
add
fisubl
ss
inc
addl
mov
mov
lods
std
cmp
int
rorl
pop
pop
xorl
and
mov
aas
pop
mov
pop
std
gs
sahf
and
xor
rolb
push
mov
insl
xlat
pop
add
ficomps
popl
xlat
int
mov
adcl
add
add
and
inc
bound
xor
popf
sbb
jae
pop
cli
loopne
sub
pop
dec
rcll
push
jmp
mov
lahf
sub
pop
xchg
test
test
leave
sbb
sub
xor
or
mov
fimull
dec
fdiv
add
pop
scas
in
repz
add
cmp
addr16
aad
stos
fiadds
jb
cmc
xchg
xor
xor
xchg
mov
insb
add
jb
mov
lds
mov
out
arpl
xor
dec
jecxz
movsb
push
xor
out
xchg
and
sarl
mov
les
repnz
cmpsb
pop
arpl
pop
sbb
sbb
adc
mov
mov
in
fsub
adc
xchg
aas
dec
pop
out
in
push
roll
push
lods
stos
out
idivl
add
dec
inc
ljmp
mov
call
pop
mov
xorl
cmp
leave
adc
outsb
push
divb
push
cld
sub
enter
push
mov
clc
es
inc
jge
pop
pusha
cwtl
push
mov
dec
ret
mov
out
mov
outsb
push
inc
sbb
shrl
cmp
sbb
aam
stos
sbb
imul
nop
mov
imul
cwtl
loop
or
dec
jae
lret
jecxz
and
xor
int3
fwait
lret
es
xchg
inc
add
add
es
inc
outsl
cmp
arpl
cmpl
imul
ljmp
xor
jge
adc
aad
scas
pop
cmp
scas
cmp
sar
dec
fisubs
jbe
out
ficompl
lcall
mov
xor
dec
fidivrs
xchg
jno
fsubl
adc
test
adc
jo
jbe
pop
arpl
jo
push
adc
xchg
or
jmp
push
push
mov
mov
outsb
insb
mov
out
push
call
test
and
xor
fwait
cmp
or
sub
xor
ja
or
mov
mov
orb
or
push
cmpl
mov
out
mov
clc
and
jge
movsb
testb
cmp
cld
lcall
int3
pop
pop
push
adc
mov
fisttpll
loopne
xor
pop
fucom
or
jmp
ds
pop
push
repnz
iret
cs
push
fiadds
mov
adc
ret
push
pop
jle
enter
inc
hlt
dec
pop
hlt
test
mov
push
jmp
push
mov
out
sarb
xchg
mov
mov
popf
dec
cmpb
dec
or
cltd
shr
mov
lret
js
shrl
repz
cmpsb
pop
mov
xchg
jbe
js
lea
aam
rcrl
cs
xchg
adc
adc
out
outsl
pusha
xorb
inc
push
jno
insb
xor
xlat
or
xchg
jge
mov
pushf
push
ja
jecxz
adc
shlb
pop
pop
xchg
pushf
fldenv
xchg
push
mov
iret
clc
out
xchg
pop
pop
add
pop
out
mov
mov
cmp
add
outsl
or
mov
sahf
mov
and
out
addr16
pop
mov
outsb
insb
adc
adc
pop
ja
and
mov
mov
movsb
mov
insb
jbe
dec
fsub
jl
insl
testb
ret
xor
hlt
mov
ficompl
roll
nop
xor
pop
fwait
sub
mov
pop
addl
mov
shll
daa
js
addb
xlat
cmc
xchg
push
mov
and
push
dec
jne
bound
ja
insb
xor
pop
gs
jge
lods
dec
out
jae
sub
mov
sub
mov
cmp
scas
jge
sbbl
xor
bound
adc
jbe
dec
cmpsb
dec
push
xor
scas
fbld
dec
or
pop
hlt
mov
and
dec
pop
aas
inc
scas
pusha
or
imul
ja
test
cwtl
pause
push
adc
or
fwait
pop
xor
xorl
aam
dec
xor
shlb
mov
mov
push
loope
cmp
xchg
dec
lcall
sbb
mov
pop
loopne
cwtl
aad
loopne
adc
dec
je
and
xorb
lds
xchg
or
out
andb
imul
and
push
call
add
xchg
out
mov
mov
mov
or
mov
pop
push
fst
stos
push
inc
inc
sub
daa
stc
mov
sbb
pop
xchg
aas
xlat
inc
lcall
mov
cmpsl
push
out
jb
stos
xchg
and
movsl
in
into
sbb
shlb
inc
lea
adcl
popa
test
out
sbb
into
inc
xchg
sbb
pop
ds
pop
mov
std
xor
iret
sub
popa
jne,pt
xorl
int3
pop
ficoml
inc
int
stc
cmp
pop
lahf
sbb
outsl
lret
stos
inc
cmpl
mov
arpl
lret
xor
push
lea
cmp
sub
imul
fwait
aas
jbe
sub
and
shrl
xchg
das
pop
push
bound
repz
xchg
and
enter
out
ss
fisttps
hlt
pop
push
sbb
mov
mov
cmp
lret
adc
inc
loope
daa
mov
divl
sbb
mov
mov
lret
es
call
and
lahf
dec
inc
mov
nop/reserved
sbb
mov
lods
xorl
je
sub
jb
mov
xchg
fidivrs
push
mov
cmp
sub
and
sti
enter
push
ret
jp
sbb
inc
movsl
les
push
iret
repz
and
xchg
stos
mov
add
push
sub
jnp
dec
dec
pop
lock
pushf
add
mov
imul
inc
cs
inc
sbb
push
aam
fwait
mov
lret
arpl
leave
xor
das
sbb
pop
pop
fistpl
out
enter
sbb
cmc
pop
cmc
sub
std
and
jg
mov
add
xchg
enter
sahf
lods
clc
push
mov
rcrl
adc
mov
push
cs
imul
fwait
loop
fs
adc
pop
aam
cmpsb
sub
mov
divl
frstpm(287
clc
adc
jne
jmp
push
push
shr
pop
sbb
imul
ret
lds
and
inc
xchg
jo
push
mov
loop
jg
je
pop
dec
cmpb
xchg
sub
sub
sahf
repnz
lods
movsl
push
in
jne
mov
ret
inc
les
jge
push
or
aaa
jl
pop
dec
enter
jge
aam
flds
dec
scas
dec
inc
js
aaa
adc
jo,pt
and
mov
adc
jmp
or
mov
mov
jnp
int
pop
outsl
mov
les
mov
add
int
push
mov
test
cmp
stc
ret
shl
xchg
push
jo
arpl
loope
dec
lcall
bound
fcom
mov
dec
and
popf
xchg
popa
cmp
sub
cs
push
mov
or
std
push
mov
xchg
jb
repnz
sub
call
aaa
insb
pop
push
pop
sbb
xor
adc
hlt
jge
push
xchg
rclb
insl
mov
pusha
das
bound
idivl
add
sbb
cmp
jle
popf
shrb
and
stos
jle
xorl
or
iret
push
scas
sub
xlat
and
and
repnz
mov
and
ds
dec
lock
cmp
sub
mov
xlat
xor
add
and
push
and
leave
test
test
xlat
fsubrs
filds
test
mov
ret
xor
frstor
aad
jge
addb
mov
call
push
push
dec
clc
inc
jp
int3
sub
jp
mov
pop
scas
and
fisttpll
mov
pop
je
cmp
push
mov
cs
adc
fidivrl
daa
or
mov
movsl
into
or
jnp
add
data16
jo
ss
scas
jno
mov
inc
xchg
cmp
xor
clc
inc
push
xor
jle
outsb
lahf
pop
xchg
pushf
js
movsl
adc
jl
popf
fwait
fs
adc
mov
jp
jg
push
icebp
popf
jle
popf
mov
xchg
push
out
adc
xor
sbb
into
cmpsb
add
or
fildll
push
ret
pop
jl
mov
fiadds
mov
lock
and
inc
pusha
lods
jns
cmc
out
mov
imul
dec
int3
pop
into
out
and
jno
jl
inc
cmp
inc
std
push
mov
push
test
mov
repz
pop
das
xchg
mov
add
dec
jb
das
popf
stos
add
add
push
call
popf
inc
xorb
mov
loope
jl
push
xchg
pop
push
cmc
ljmp
inc
jp
jecxz
hlt
scas
inc
sbb
dec
imull
loope
mov
xor
xor
mov
dec
shl
mov
cmp
std
fucomi
imul
jnp
scas
xchg
out
cli
das
mov
mov
mov
inc
push
adc
outsb
mov
mov
data16
add
sbb
mov
sbb
stc
xlat
adc
push
mov
mov
std
add
ret
cmp
mov
sbb
int3
jmp
and
test
iret
cmp
daa
hlt
push
pop
mov
fs
and
movsl
add
imul
outsl
cmp
push
ds
add
and
mov
scas
leave
es
adc
push
cs
sahf
mov
outsl
dec
push
repz
clc
outsb
pop
sub
sbbl
push
fdivp
ret
ret
imul
jo
and
cmc
popf
xlat
fistpll
aaa
subb
xor
in
mov
js
mov
pop
adc
insl
imul
mul
es
mov
and
jae
mov
inc
mov
mov
pop
xchg
cmp
xchg
mov
cmp
in
rcrb
imul
repz
lcall
add
int
test
sbb
stos
pop
pop
jle
push
dec
jne
mov
mov
xor
stc
pop
mov
in
loop
fstps
clc
xchg
jp
inc
or
pop
dec
imul
pop
dec
decb
mov
jl
out
mov
pop
xor
mov
arpl
dec
lods
jb
test
cmc
adc
pop
and
out
sbb
fimull
aad
bound
test
mov
adc
mov
test
cmp
jge
out
jmp
mov
mov
cwtl
mov
pop
inc
mov
jge
pop
inc
lds
xor
mov
inc
jnp
outsb
les
cmpsl
arpl
push
jnp
cmp
xorl
mov
fs
xchg
negb
lds
insl
mul
or
clc
jge
pop
std
mov
or
adc
out
inc
mov
ja
arpl
aam
or
mov
jmp
scas
add
push
dec
ret
sub
inc
std
add
push
out
sbb
push
push
mov
and
pushf
xchg
pop
not
movsl
inc
aaa
mov
addr16
dec
cli
dec
sbb
inc
pop
enter
dec
pop
add
sbb
or
popf
xchg
aas
sbb
fwait
jbe
inc
fldt
sub
ret
pop
jecxz
xchg
adc
xor
movups
cwtl
test
out
jne
scas
in
movsl
iret
sbb
inc
and
xor
sahf
dec
in
mov
js
fstps
jb
jb
shlb
rcrl
xor
push
mov
mov
sbb
inc
and
rcrl
xchg
push
cs
cld
lret
leave
dec
sub
aaa
sahf
xchg
es
enter
or
outsl
stos
or
arpl
adc
sbb
jnp
shl
cltd
pop
call
out
cmova
out
xchg
mov
cmp
sub
loop
pop
push
pop
or
xchg
imul
or
or
out
mov
ljmp
push
mov
int
pop
pop
ja
lods
push
xchg
stc
mov
movsl
sub
dec
inc
rolb
mov
out
notb
xlat
fldt
lcall
loope
mov
sbb
aaa
popa
or
inc
push
je
je
mov
pop
sbb
or
push
add
xchg
mov
xor
lret
xor
adc
int3
nop
adc
insb
leave
fildll
sub
mov
std
mov
notb
pop
mov
xor
subl
rcrb
xchg
fistl
pop
icebp
nop
xchg
mov
sub
roll
mov
bound
push
int
xlat
push
pop
pop
wrmsr
push
or
cwtl
jb
lods
jl
mov
push
lock
test
cmpsl
movsl
jno
push
jge
mov
or
jmp
mov
inc
lods
test
or
lods
mov
mov
sahf
movsb
call
push
jl
mulb
iret
pop
orl
out
or
clc
xchg
andb
mov
hlt
pop
cmpsl
sbb
dec
fistl
addb
cmpb
repnz
shlb
and
pop
push
xchg
push
ret
sbb
loopne
sbb
lret
fldenv
inc
pop
dec
stc
test
out
leave
fstpt
ljmp
adc
sbb
adc
lds
jge
mov
sbb
and
jae
ja
mov
mov
icebp
mov
or
inc
cmc
addr16
imul
pushf
shrb
jo
rcrb
mov
jns
rcll
cmp
mov
jmp
in
pop
sbb
mov
inc
insl
cmp
popf
mov
in
jbe
jnp
push
mov
push
xchg
mov
sahf
cwtl
arpl
xchg
push
movsl
cltd
adc
adc
andl
jl
lcall
cmpsl
out
inc
shr
in
adc
xchg
push
int
jnp
fidivs
loopne
cli
arpl
movb
loop
adc
cwtl
dec
mov
in
jbe
daa
mov
xorl
stc
cmc
fchs
sbb
mov
sarl
or
test
dec
pop
dec
mov
hlt
outsb
xlat
je
ss
mov
dec
addb
inc
inc
sbb
mov
push
rorl
cli
mov
mov
stos
mov
les
in
shlb
sbb
dec
adc
jb
inc
pushf
aam
arpl
xchg
mov
pop
mov
add
dec
xchg
pop
ret
dec
adc
and
push
icebp
lahf
pop
push
push
jae
dec
cld
sbb
loop
add
add
testl
fstp
pop
out
call
mov
mov
sub
pop
paddusw
lds
enter
aas
xchg
dec
ljmp
shrb
push
push
scas
jl
jne
lea
in
jle
add
out
xchg
push
mov
repz
das
jb
imul
in
xor
out
je
add
mov
mov
and
cmp
insl
or
aas
lods
mov
inc
sbb
adc
and
mov
dec
int3
negb
outsb
ja
fwait
dec
sbb
aam
enter
or
pop
or
in
nop
mov
pop
or
jae
lretw
cmp
xor
jbe
negb
jle
jo
jmp
mov
sti
cwtl
popa
mov
movsb
mov
and
cmp
or
movsl
jle
jbe
out
cmp
lds
dec
ss
xorb
icebp
pushf
push
jnp
sbb
loopne
ja,pt
adc
repz
mov
imul
mov
stos
xor
pop
loop
mov
je
mov
icebp
enter
and
shrl
cltd
lods
popf
jne
das
out
fs
dec
das
pop
ret
movsl
inc
fidivs
inc
popa
xchg
lcall
je
sbbl
sbb
iret
sti
scas
test
in
test
pushf
sbb
stos
jge
in
es
jg
and
aas
scas
sub
dec
and
pop
and
sbb
adc
sbb
das
and
mov
les
cmp
sub
xlat
xchg
imul
jne
push
shr
fildl
sub
inc
ljmp
xor
in
cltd
cmpl
or
mov
icebp
in
imul
fidivrs
mov
or
mov
or
fisttpl
loopne
loope
adc
inc
pop
push
pop
mov
pop
lret
jb
movsl
rclb
ja
insb
add
sub
out
movsb
mov
push
imul
outsb
push
or
outsb
fcompl
mov
add
ljmp
cmp
in
push
pushf
lret
dec
inc
shlb
sub
testb
push
stc
lods
into
cmp
inc
mov
imul
mov
and
mov
xlat
pusha
sarb
push
xor
jo
cmp
out
lahf
pop
xchg
sub
add
mov
add
sbb
cmpsb
adc
cmp
loope
inc
std
cmpsb
pop
xor
pop
les
int
jnp
xchg
xor
cmpsl
stos
push
add
pusha
mov
sbbb
pop
ret
outsb
and
pop
sub
repz
push
cmp
test
pop
sahf
mov
movsl
add
push
clc
mov
les
mov
jae
mov
dec
das
push
sub
sub
jno
adc
mov
xorl
mov
popfw
decl
in
dec
cmpl
xor
pop
imul
xchg
cmp
push
mov
scas
and
mov
mov
gs
pop
out
mov
lock
popf
cli
rolb
cmpsl
pop
jge
fwait
je
cli
jae
sbb
and
xchg
repz
in
test
pushf
nop
add
sar
sub
mov
cwtl
mov
imul
inc
loopne
out
insl
repz
push
shlb
jns
sbb
and
into
and
mov
rorb
movsl
xlat
cmp
addb
scas
lahf
daa
dec
jl
movsl
in
fs
sub
lds
xlat
xchg
mov
scas
bound
mov
jno
adc
jmp
test
aad
out
cs
xor
ja
popf
repz
dec
sub
sub
icebp
lea
dec
pusha
add
and
mov
mov
xor
lret
xchg
ljmp
div
stc
gs
mov
addr16
and
lods
mov
pop
testb
xchg
mov
push
cli
pusha
jb
jb
push
es
cwtl
mov
and
mov
popa
xchg
adc
dec
test
mov
jb
push
sbb
xorb
ret
ljmp
popa
rclb
out
xor
mov
call
xor
call
jnp
push
jl
jp
xchg
stc
test
testb
icebp
sbb
inc
push
adc
jne
jae
imul
sti
mov
mov
jb
dec
inc
adc
xor
test
push
movsb
xchg
jmp
mov
data16
test
ret
inc
jg
test
popf
xchg
pop
imul
fidivs
xor
push
xchg
mov
mov
jecxz
cmp
fidivl
pop
inc
add
mov
pop
bound
pop
das
mov
jnp
inc
jl
lret
lock
in
mov
jg
stc
xchg
and
xor
xchg
mov
into
movsb
es
xchg
addr16
test
or
imul
test
lea
insl
arpl
add
adc
ja
dec
push
test
sti
fwait
jbe
scas
and
sarb
sbb
rclb
xchg
test
adc
sti
sbb
pop
lods
lahf
stc
inc
rol
sub
pop
xchg
adc
dec
or
imul
jl
popf
stos
or
push
insl
aaa
cmpb
add
mov
orb
es
repnz
mov
scas
test
sti
faddl
sub
pushf
cltd
inc
fsubrs
dec
mov
fwait
xchg
xchg
lea
mov
and
pop
dec
dec
negl
mov
sbb
adc
push
es
dec
repz
fsubrl
aad
sub
fstp
pop
mov
jbe
mov
sbb
outsl
int
pop
mov
mov
hlt
and
adc
dec
xlat
aam
jno
ja
xor
jmp
outsb
std
and
aam
cld
dec
mov
pop
lock
insl
jbe
movsb
adc
aad
xlat
jo
negb
sub
shll
ret
mov
xchg
int3
jmp
mov
in
cmp
aaa
adc
lea
mov
std
outsb
mov
pop
push
or
xchg
test
add
popf
ljmp
hlt
sub
sub
lea
rcr
stos
xchg
test
sub
mulb
and
es
push
loope
mov
loope
int
ror
or
xchg
loope
imul
jmp
loope
cwtl
popa
ja
notb
lret
movhps
xchg
cli
loopne
pushf
icebp
xchg
pop
data16
sbb
or
arpl
jnp
out
imul
cwtl
rep
inc
std
ljmp
jmp
xchg
mov
push
in
jae
stos
in
aas
hlt
jae
jg
push
and
cld
adcb
adc
mov
rep
rcl
dec
dec
jmp
pushf
in
mov
popf
repnz
jg
xchg
out
or
shll
mov
icebp
insl
mov
ds
outsb
sti
lods
pop
je
add
xor
leave
cmpsl
outsb
jbe
jp
frstor
mov
mov
push
je
stos
and
iret
aam
jns
cld
sti
test
cmpsb
add
mov
ss
icebp
lods
push
inc
jnp
mov
and
mov
jmp
fs
mov
aad
xor
mov
mov
test
shll
mov
rcl
mov
cmc
inc
add
out
xchg
testl
arpl
out
jmp
jmp
sbb
cld
movsl
and
dec
std
loope
inc
push
bnd
xorl
mov
push
mov
and
xchg
pop
pop
push
dec
and
xchg
ss
xor
std
inc
mov
int
in
add
push
sub
out
adc
inc
adcl
jnp
adc
negb
pop
mov
mov
mov
sbb
mov
jo,pt
jecxz
sub
xchg
mov
movsl
loop
sbb
mov
je
insb
ret
sub
push
add
sub
clc
inc
gs
xchg
mov
repnz
test
rorb
cmc
testl
add
dec
and
movsb
dec
iret
mov
in
bound
mov
divl
or
jne
sbb
shrl
roll
inc
xchg
movsb
pop
adc
test
dec
jecxz
pop
addb
mov
lcall
into
xchg
aam
in
mov
in
xor
out
daa
sub
lahf
icebp
test
cmp
rol
stc
jecxz
sub
push
fidivrs
movsb
dec
test
mov
xchg
mov
notb
lods
push
sbb
cmc
xchg
xchg
popf
int
sub
hlt
push
cmp
jo
xchg
or
mov
inc
lock
mov
stc
adc
jge
fidivl
in
movsb
stc
sti
xchg
mov
or
push
mov
testl
popf
jne
adc
push
lock
sbb
fnstenv
pushf
pushf
pop
es
das
cmp
fsubr
or
shrl
mov
jb
inc
xchg
pusha
push
sub
test
xor
rclb
mov
and
cmp
dec
fsub
add
xor
fisubrl
pop
ffreep
xchg
xor
iret
xchg
ds
mov
daa
divb
push
insb
imul
xchg
adc
mov
fsub
sbb
data16
nop
je
iret
aaa
or
stos
dec
sbbl
int3
mov
cld
fs
iret
lret
jge
lret
iret
inc
or
push
jmp
jne
bound
cld
mov
pop
sub
arpl
dec
int
popa
sbb
dec
push
pop
popl
adc
inc
mov
push
js
pusha
inc
shlb
and
jge
mov
and
sahf
push
xchg
push
mull
push
gs
mov
xor
adc
xchg
adc
push
subb
pop
sbb
dec
xor
loop
lret
dec
bound
xchg
jl
shrb
sbb
mov
outsb
mov
add
sbb
pop
xchg
lcall
adc
mov
inc
clc
dec
mov
pop
mov
pop
lods
mov
sbb
and
cmp
mov
fdivl
es
cmp
es
pop
mov
rcr
add
sbb
xchg
in
dec
push
and
iret
inc
popf
mov
aaa
jno
jle
mov
and
dec
imul
pop
mov
je
loope
xchg
loope
push
xlat
stc
push
cmpsl
mov
repnz
dec
rcrl
inc
shl
lret
pop
dec
data16
jnp
imull
test
imul
jb
and
adc
sub
lods
in
mov
test
sub
test
cmpl
ljmp
adc
mov
cmpsb
xchg
dec
fwait
stos
fistl
clc
xor
mov
push
mov
outsb
dec
cmpb
iret
les
fldt
aam
es
repnz
mov
clc
xor
or
cmp
test
and
jno
cmp
pop
nop
dec
inc
xchg
insl
push
lret
add
xor
mov
jecxz
dec
pop
xor
sbb
shl
mov
ss
xchg
and
aad
dec
in
xchg
or
jmp
ret
stos
pop
pop
fcom
xchg
lcall
jne
pcmpeqb
in
inc
adc
jmp
test
xchg
xchg
add
sub
mov
int3
iret
or
jmp
movsb
xchg
and
dec
repnz
fs
jb
add
loopne
cmp
cmp
fldenv
or
and
push
popa
scas
lret
jle
jns
flds
inc
fidivrs
mov
js
push
out
mov
shll
in
push
or
add
add
push
dec
les
inc
into
xor
ret
repz
sub
loop
lcall
outsl
das
fcmovnbe
out
mov
scas
cld
cltd
idivl
pop
ja
cld
scas
enter
pop
cmp
cmp
and
dec
cmpsb
scas
jmp
jmp
cmp
inc
pop
ret
incl
jo
or
sbb
sub
and
push
cmp
sub
lds
insb
dec
inc
inc
ret
or
int3
dec
outsl
sub
jb
lds
mov
jg
sbb
mov
dec
jb
inc
and
pop
sahf
and
ss
inc
pop
idivb
ficompl
sub
xor
pop
or
mov
cmc
cmp
int3
dec
add
pop
aam
xchg
jge
insl
in
fucom
test
inc
aad
add
or
rorb
mov
fisubs
inc
adc
mov
mov
fprem1
aam
nop
or
stos
dec
lret
popa
or
or
cli
scas
imul
pushf
lods
outsl
pop
clc
dec
out
push
mov
aad
cmpsb
std
or
adc
xchg
xlat
pop
push
lods
mov
push
xchg
adc
push
cwtl
sbb
sbb
pop
sub
jae
test
cmpsb
sbb
push
adc
or
mov
in
into
and
iret
sbb
pop
pop
jb
popa
push
insl
repnz
xlat
ss
lods
dec
xchg
jne
les
hlt
jno
sub
jne
fisttpll
inc
mov
push
aaa
fsubs
fdivrs
test
cld
out
push
push
les
sub
xchg
inc
dec
xor
xchg
adc
js
lcall
jl
cltd
pop
mov
push
adc
pop
or
inc
shrl
aam
cli
je
xor
test
mov
daa
movsl
hlt
or
mov
jo
or
jle
mov
dec
aad
pop
pop
inc
fdivl
lcall
dec
mov
jmp
jnp
bound
jns
aaa
inc
push
cmp
js
aam
das
mov
sarb
fildl
xchg
mov
mov
ja
jmp
inc
enter
jg
test
jp
mov
lock
jmp
dec
cmpsb
jo
push
or
lret
xor
in
inc
aam
sub
sub
into
mov
rcl
cld
sub
xchg
rcrb
das
loope
mov
cmp
outsb
lods
jmp
fsts
test
jae
test
xchg
add
sbb
pop
stos
inc
movsbl
sahf
inc
mov
dec
cltd
inc
push
sbb
pop
xchg
or
ljmp
icebp
test
mov
jl
call
inc
out
mov
pusha
add
popf
cmpsl
sbb
js
out
lahf
push
leave
mov
sbb
repz
das
jecxz
das
jl
test
in
dec
std
into
pop
push
push
ficoms
daa
fidivl
add
mov
in
mov
and
and
pop
adcb
push
xchg
dec
ret
pop
mov
sbbl
push
push
outsb
mov
mov
lcall
jne
jmp
pop
or
jbe
ljmp
pop
popf
mov
inc
aam
sti
cmc
push
cli
call
fidivrs
cli
cmpsb
mov
adc
mov
jge
ja
or
mov
sub
sbb
xchg
mov
inc
scas
insl
inc
sub
xchg
cmpsl
push
imul
clc
nop
rol
sub
mov
pop
sbb
mov
daa
cmp
mov
in
add
jle
jecxz
mov
mov
add
add
js
dec
clc
seto
mov
inc
inc
mov
xor
mov
icebp
popa
jge
jecxz
push
mov
xchg
shrb
sbb
inc
rcl
adc
xchg
loopne
shrb
xchg
lock
adc
sbb
dec
fidivs
xchg
repz
clc
add
sbbl
pop
je
sar
popf
ljmp
cmp
or
push
hlt
js
push
cmpsb
inc
inc
jnp
add
scas
dec
sub
inc
dec
outsl
inc
push
mov
push
lock
sub
fwait
dec
int
adc
in
inc
or
lcall
jecxz
push
sarl
dec
pop
cmpsl
daa
dec
or
and
jo
es
cmp
jge
lods
push
jbe
xor
adc
loope
sub
xor
xor
dec
test
inc
dec
mov
xchg
cmp
addr16
gs
push
jl
inc
into
xchg
or
and
xchg
cmpl
ja
sahf
push
iret
xlat
aam
mov
push
mov
push
dec
mov
ja
lea
fimull
mov
iret
mov
xchg
arpl
cmp
add
mov
mov
cmp
dec
sbb
bound
xchg
add
sub
mov
mov
adc
pop
aam
icebp
dec
loop
stc
int
pop
xor
sbb
aaa
xor
dec
sbb
fadds
mov
pop
mov
mov
and
jo
xchg
aas
and
jo
movsb
nop
mov
or
inc
popf
movsl
and
adc
or
push
push
or
addr16
add
cmp
mov
xlat
test
add
stos
mov
jae
inc
rcr
push
xchg
pushf
lret
cltd
aad
and
jmp
xor
cs
fbstp
xor
shrb
cvtps2pd
and
sti
xchg
xchg
inc
xchg
dec
sahf
add
mov
xor
gs
int
cmp
out
jle
lea
or
jo
movsb
out
push
cltd
add
mov
jp
adc
aas
push
xchg
je
xlat
mov
pusha
inc
or
xor
add
dec
mov
adc
ds
movsb
out
dec
xchg
rol
ret
mov
insl
xorb
mov
dec
pop
lock
sub
cli
pop
mov
and
inc
adc
fnstcw
cmp
xor
ror
lods
mov
inc
and
bound
fnsave
fisubl
leave
imul
fs
leave
sub
test
adc
add
sbb
push
inc
sbb
sbb
into
test
scas
daa
ljmp
data16
cmpsl
push
loopne
aas
dec
test
xchg
test
cmpsl
push
xor
pop
in
dec
jo
call
mov
push
xchg
fcomps
sbb
in
jno
jle
popf
jmp
cmp
sbb
inc
pop
sbb
mov
xor
mov
add
sarb
aas
dec
and
push
adc
and
pop
repnz
cmp
loope
jge
mov
mov
pop
ljmp
mov
sbbb
std
jecxz
sbb
loop
shrb
jno
sub
shll
dec
inc
inc
xchg
mov
iret
mov
or
cld
pop
cmp
and
insb
call
xchg
pusha
jo
dec
pushf
ret
leave
xchg
push
pop
lock
ret
outsl
ror
lods
cmp
xor
adc
or
mov
cmc
in
out
into
shll
leave
repnz
repz
sbb
push
mov
insl
pop
ja
mov
fbld
sub
inc
inc
mov
inc
xor
sbb
adc
insl
sbb
sub
dec
xlat
pop
ret
dec
mov
das
outsb
cmp
gs
rcrb
adc
lahf
jb
inc
add
sbb
add
or
adc
jbe
insb
or
mov
push
loop
ret
mov
stc
or
push
mov
lret
add
xchg
ret
rol
in
mov
push
clc
pop
push
neg
in
negb
adc
add
fwait
xlat
jmp
sbb
cld
or
iret
push
push
adc
mov
outsl
mov
test
in
iret
scas
in
mov
pop
mov
std
sub
jbe
inc
pop
mov
xchg
and
sub
leave
rcl
xor
xchg
std
mov
imul
ficoms
pop
pop
push
int
jecxz
mov
rorb
sti
lds
fidivl
fildl
out
add
mov
dec
daa
xor
sub
insb
push
and
pusha
lds
sub
cmp
push
pushf
imul
mov
mov
push
pop
pop
fisubs
pop
inc
xlat
fwait
jp
iret
push
scas
lea
subb
jno
mov
mov
and
loope
fwait
js
aam
inc
iret
mov
push
imul
xchg
inc
xor
pop
ja
sub
aaa
aas
mov
loop
and
xchg
mov
pop
out
dec
push
xorl
mov
inc
stc
dec
xor
xchg
test
pusha
repz
sbb
int
rcr
cmp
das
dec
jge
pop
adc
add
out
jb
mov
loop
mov
mov
fwait
inc
or
push
pop
in
push
dec
pop
mov
roll
xchg
lea
xchg
cmp
sub
sbb
call
sbb
or
add
std
ret
mov
cwtl
dec
test
push
mov
int
into
lcall
mov
dec
jp
mov
mov
pop
and
jno
lret
and
int3
movsl
stos
mov
fsubrs
js
imul
xchg
lcall
insb
aad
push
pop
mov
sub
int
out
sub
icebp
lods
jp
lods
stc
xchg
cmp
les
xor
mov
dec
jae
cmp
call
insl
nop
lret
ret
in
sti
iret
out
adc
loopnew
xor
stos
xor
or
loop
xor
jo
into
stos
aaa
das
mov
jns
stos
cmp
sbb
pop
test
lcall
out
popa
inc
lock
fisubrs
decb
mov
jnp
cltd
mov
xchg
jl
sbb
mov
jge
push
arpl
mov
daa
sbb
adc
fcoms
jae
fnstcw
adc
cmpsl
push
shlb
pop
jae
jmp
mov
cmp
int
dec
lods
fucomi
leave
fcom
dec
xchg
loope
and
sbb
cmp
sbb
mov
jmp
jl
fsts
cmp
lahf
mov
std
pop
add
ljmp
push
add
test
push
pop
icebp
cli
int
xor
in
inc
lds
les
mov
mov
add
push
arpl
add
pop
jp
jmp
loopne
inc
cmp
jmp
scas
pop
int3
fcompl
mov
int
inc
and
lods
test
inc
lahf
imul
pop
push
sbb
mul
add
inc
sbb
sub
adc
xor
jecxz
inc
pop
sub
addb
mov
push
jp
rcrb
xchg
outsl
sub
ficompl
pop
xor
aam
mov
adc
sbb
in
xchg
data16
mov
aaa
xchg
adc
mov
add
vminps
adc
cmp
push
cmp
inc
repnz
test
test
ret
mov
aam
mov
jle
call
sub
push
adc
sub
icebp
sahf
sbb
sarl
sbb
mov
mov
arpl
xchg
pop
xor
pop
vsubsd
jns
jmp
popa
stc
cli
inc
aaa
iret
pop
outsl
fmull
or
call
cmp
push
lcall
cmp
andb
sbb
les
dec
inc
lock
cs
mov
cmp
data16
add
pop
inc
cmc
mov
mov
lds
fcoml
daa
cmp
fistpll
push
jae
scas
dec
aam
jno
rclb
xchg
sahf
inc
idivl
stos
mov
push
or
pop
push
out
jno
mov
mov
enter
int
stos
mov
sub
xchg
arpl
in
inc
repz
test
ja
cmp
jmp
iret
pop
ret
push
inc
scas
mov
and
in
in
cmp
lret
arpl
gs
nop
test
lock
jae
lahf
js
les
ljmp
mov
loop
leave
push
pop
movl
fwait
clc
mov
pop
daa
and
cmp
push
lea
cmp
sub
hlt
mov
cli
in
jae
cmpsb
inc
movsb
and
mov
cltd
jo
in
ror
jae
bound
repz
aad
mov
sbb
aam
jne
push
xchg
xor
ja
in
mov
push
aad
lock
enter
cmpsb
add
pop
pop
loopne
mulb
cmp
add
movsl
iret
out
jo
add
les
popf
andl
cmc
jmp
sbb
dec
pop
cmp
and
inc
cwtl
xor
mov
sbb
test
sahf
popf
shl
dec
jge
scas
sti
xor
mov
outsb
push
rorl
ret
push
rcrb
mov
xor
jg
jge
sub
lods
loop,pn
mov
fisubrl
sbb
adc
mov
push
cli
aaa
sahf
cmp
add
inc
sub
in
andb
out
sub
fwait
mov
rcll
fs
mov
cld
mov
or
xor
sbb
lock
xchg
popa
outsl
and
test
int3
mov
or
loopne
in
mov
or
lret
clc
inc
sarb
clc
das
lret
test
call
mov
test
xchg
pop
test
push
test
jle
adc
into
cmp
addsubps
jge
movsb
scas
inc
cmp
inc
ficomps
flds
mov
icebp
mov
sar
std
fmul
out
sub
iret
loop
movsl
sub
rol
dec
xor
stos
imul
mov
pop
push
mov
mov
int3
into
pusha
popa
add
xchg
fldenv
or
out
mov
enter
pop
std
dec
test
mov
stos
jp
arpl
xchg
movsb
inc
bound
enter
or
sarl
jae
lcall
dec
clc
jnp
scas
jge
push
mov
sub
fcmovnbe
mull
mov
fbld
mov
ds
sub
sub
sahf
jbe
cmc
sti
push
ja
fnstsw
adc
jmp
add
xchg
enter
leave
movsl
mov
fiaddl
lods
aam
pop
cld
in
jnp
jmp
cld
inc
test
mov
aad
mov
shlb
adc
and
int3
roll
ljmp
icebp
gs
push
popa
jg
xchg
mulb
popa
hlt
and
pop
fstl
std
scas
ss
data16
cmpsl
stos
adc
scas
movb
rolb
fisttps
inc
mov
sbb
or
sbb
pop
daa
cltd
add
repnz
into
sub
adc
jne
bound
stc
jp
cltd
adc
jle
rorb
and
aam
shlb
or
push
pop
push
xor
push
or
mov
xchg
outsb
jl
cmc
dec
sub
dec
push
or
push
xchg
xchg
and
push
push
sbb
adc
cmp
movb
mov
pop
aas
pop
push
dec
mov
in
ret
nop
js
ds
push
mov
and
mov
mov
rcrb
cwtl
pcmpeqw
je
pop
adc
mov
inc
aaa
adc
dec
scas
lock
push
jbe
stc
inc
mov
ljmp
cs
mov
dec
int
mov
jecxz
and
push
add
xchg
arpl
xchg
test
mov
inc
mov
mov
popf
jno
mov
lret
add
js
or
pop
jb
adc
sbb
mov
pop
or
scas
outsb
lret
or
xchg
cmp
fcompl
fmuls
idiv
push
add
and
repnz
adc
sbb
mov
repnz
sbb
repz
test
pusha
sub
shrl
test
adc
lahf
xchg
xor
mov
daa
mov
std
ret
jg
mov
xor
fwait
pop
adc
mov
jb
jle
push
push
xchg
or
test
es
or
pop
cmpsb
jmp
repz
add
jge
cmp
imul
xchg
adc
mov
shlb
xor
and
mov
fsts
in
arpl
push
inc
dec
outsl
leave
fisttps
pushf
xchg
lcall
cmpsb
es
jmp
pushf
mov
test
outsb
jb
cs
test
adc
jns
lods
adc
loopne
enter
inc
xchg
adc
repnz
add
cmp
sahf
adc
pushf
ds
stos
add
and
adc
jmp
outsb
int3
jmp
lret
pusha
out
jno
shrl
xchg
mov
or
loop
movsb
inc
daa
cwtl
sub
enter
fldl
aad
pop
sub
gs
out
dec
xorb
fldt
push
add
push
xlat
push
loopne
sub
push
or
dec
sbb
sbb
shr
jg
pop
jg
cwtl
shlb
mov
adc
movsl
sahf
mov
icebp
inc
cmp
test
xlat
inc
aam
xorb
dec
jno
loop
cmp
rcpps
int
pushf
ljmp
mov
ret
mov
push
cmpsl
aas
mov
out
shll
leave
push
dec
outsb
in
std
inc
insb
pop
inc
and
jo
hlt
fucomp
ret
jno
mov
pop
jnp
mov
ljmp
shrl
sub
sub
and
or
mov
stos
bound
loop
lds
inc
lds
xor
sbb
int3
ret
and
push
inc
adc
nop
in
or
in
add
add
cwtl
push
mov
xor
mov
lahf
pop
sub
pop
mov
in
mov
push
sbb
pop
lods
scas
sbb
xchg
push
jmp
sub
lahf
jg
mov
out
xchg
inc
int3
mov
inc
lock
shll
push
repz
loop
outsl
mov
jae
or
add
repz
movsl
out
stc
in
insl
subl
xchg
out
test
movl
dec
jbe
mov
mov
hlt
mov
sub
push
sbb
xor
push
push
mov
jns
jne
lea
cvtps2pd
fmuls
gs
inc
sub
and
mov
sub
enter
out
je
mov
loope
fdivp
mov
push
or
leave
mov
hlt
aad
pop
xor
imul
call
leave
test
jno
xchg
add
std
push
push
insl
dec
sti
es
fldcw
or
sti
cmp
mov
js
imul
ss
loopne
add
pop
dec
aam
jbe
ret
pop
repz
push
inc
add
mov
push
stos
add
cltd
lock
xchg
fmuls
sti
lock
jnp
aam
mov
inc
fcoms
les
xchg
or
movsl
mov
notl
mov
cmp
dec
push
mov
jb
and
pop
add
loop
xchg
lea
xchg
dec
xor
pusha
std
sbb
mov
fcompl
mov
call
push
jle
int
fdivl
cmp
iret
xchg
cltd
fxch
ja
in
inc
push
ffree
lret
adc
int
pop
sbb
push
out
inc
shlb
les
push
mov
dec
fisttpl
dec
iret
or
popf
sub
push
adc
test
in
jnp
jnp
mov
pop
pusha
xorb
jmp
pop
test
popf
mov
lret
subb
out
dec
or
inc
cmpsb
nop
xor
leave
stos
or
jg
imulb
adc
xlat
mov
sub
mov
add
and
icebp
or
xchg
and
dec
data16
jp
fildll
mov
push
jae
add
sub
cmp
ljmp
movb
aas
fstp
cmc
sub
cmp
loope
fmull
jnp
aad
js
pushf
out
call
add
inc
jo
push
adc
xor
sub
clc
aam
cmc
jmp
es
inc
mov
sarl
mov
aad
nop
dec
dec
sub
aad
ret
sub
shll
addl
xchg
xor
test
cmp
mov
cli
push
xchg
rclb
jge
push
in
xchg
xchg
push
lret
xorb
push
in
push
dec
call
jmp
repnz
push
std
fs
xor
dec
inc
cmp
lds
sbbl
mov
pop
xor
mov
dec
cltd
les
rcr
test
sub
push
pushf
loope
fdiv
jp
and
cmpsl
push
ljmp
test
sub
repnz
xchg
data16
adc
push
pop
popa
cmpsl
insb
fistpl
jbe
dec
push
xchg
or
xor
xlat
cmpsb
cli
dec
lcall
lret
xchg
or
pop
and
bound
jo
xchg
jecxz
mov
mov
mov
sbb
aam
clc
sub
js
push
ret
sub
ds
nop
fst
cltd
ret
fidivrs
repz
push
mov
xor
pusha
sti
and
int
mov
pop
ret
cli
adc
dec
into
xchg
cmp
sbb
in
in
and
dec
lahf
mov
and
or
mov
xchg
xlat
cld
push
mov
jb
mov
push
addb
inc
inc
cmp
dec
cmpsl
or
add
jno
subb
push
out
out
leave
stos
test
and
mov
push
imul
or
jecxz
lahf
or
jb
push
in
movsb
push
test
dec
in
notl
cld
add
fsub
mov
jo
fldcw
xchg
jecxz
pop
xlat
das
into
loop
out
dec
xor
lret
sahf
sub
lock
sarl
mov
scas
insb
xchg
sbb
xchg
decl
imul
or
lods
push
mov
mov
addr16
mov
mov
mov
push
mov
push
mov
add
nop
in
hlt
lret
scas
add
stos
sbb
into
ret
dec
sbb
push
ret
sub
pop
idivl
notb
test
mulb
sbb
add
hlt
fidivrs
inc
jecxz
xchg
jge
cs
out
mov
loopne
cmp
push
loope
and
push
xchg
pop
lods
sub
xchg
sbb
loope
fwait
and
loop
dec
jl
inc
push
call
push
adcl
cmp
push
das
popf
sbb
mov
bsf
xchg
sbb
cmp
iret
or
call
fcmovnu
and
sbb
mov
test
sti
int3
mov
outsb
imul
xor
test
out
pop
lods
insb
mov
and
sub
mov
sbb
sbb
push
jo
xor
sbb
push
test
cmp
int3
xchg
xor
clc
jns
inc
les
jecxz
mov
mov
shl
loope
rcrb
xlat
fldt
push
pop
mov
arpl
pusha
mov
jp,pt
in
inc
loop
movsl
aam
arpl
add
js
aas
adc
jl
mov
sbb
sub
stos
loop
xchg
mov
sub
sbb
movsl
icebp
mov
dec
jmp
jnp
scas
aad
and
test
jp
ja
icebp
cmc
adc
imul
cmpsb
int
in
sub
push
cmpsb
push
xor
cltd
out
addr16
out
inc
in
inc
test
fidivrl
or
sti
lahf
mov
aad
pop
leave
adc
pop
jle
sub
pop
push
in
inc
imul
jns
inc
or
mov
inc
ficoms
in
popa
or
shl
dec
mov
insb
cwtl
mov
inc
inc
mov
or
int
adc
insl
xor
and
fisttps
push
sbb
mov
mov
jl
stc
mov
cmp
or
sbb
adc
mov
cmp
sbbl
test
xor
leave
or
fwait
push
out
loopne
sbb
lock
lea
psllw
adc
fsub
orb
scas
adc
je
aam
sbb
jno
das
mov
push
jle
pop
xor
xor
adc
adc
daa
scas
int
jne
mov
stos
repz
dec
mov
stc
mov
lock
cltd
icebp
imul
cld
push
push
aas
sub
out
lret
add
loopne
push
ficompl
pop
stos
xchg
loope
sbb
jle
call
mov
inc
and
sbb
les
push
add
adcl
adc
xor
or
test
push
data16
hlt
xchg
cmp
xchg
lahf
pop
insb
cmp
lds
xchg
jle
cli
inc
inc
cmp
clc
out
lret
inc
sub
shl
test
in
mov
add
inc
out
clc
inc
es
push
xor
xlat
test
push
shll
fwait
push
xor
xchg
cmpsb
ret
mov
test
dec
icebp
push
ds
add
cmp
popf
add
test
xchg
in
sub
sbb
jnp
dec
loopne
add
lock
arpl
or
pop
push
push
pop
fistpll
icebp
lahf
bound
mulb
dec
mov
or
in
test
add
and
clc
xchg
inc
out
lock
xchg
push
and
mov
adc
scas
jae
or
jle
ja
add
insb
subl
or
divb
sub
and
or
mov
add
adc
shrl
jo
inc
call
mov
or
rorb
jecxz
lret
adc
subb
inc
and
ret
pop
pop
test
test
mov
mov
pop
mov
sub
cmp
in
cmp
mov
scas
jl,pt
mov
cmc
loope
or
stos
push
into
sub
hlt
jo
rcrl
mov
or
data16
bound
push
mov
pop
sti
gs
pop
push
push
adc
adc
mov
faddl
jnp
iret
sbb
xchg
jnp
xor
mov
adc
jle
lock
mov
mov
std
iret
dec
out
mov
jno
xor
lea
inc
and
sbb
sbb
mov
xor
xor
pop
pushf
jbe
sub
in
push
jo
lcall
add
sbb
call
mov
outsl
neg
push
pop
popf
sub
insl
xor
mov
shlb
pushf
xchg
pop
out
js
jnp
int3
jnp
xor
mov
push
insl
in
dec
shll
xor
in
xchg
sub
or
dec
jns
xchg
push
push
mov
jmp
stos
add
adc
popf
and
fnstsw
mov
pusha
cltd
jecxz
test
popf
inc
pop
push
mov
stos
ror
pop
in
neg
shrl
clc
sub
and
mov
rcrb
insl
or
mov
mov
cmp
add
loopne
sub
sub
enter
add
outsb
fsubl
pop
fiaddl
mov
nop
push
add
add
in
add
movsb
mov
ss
inc
add
repnz
sbb
in
dec
sbbl
add
and
in
out
cltd
push
dec
cltd
cld
dec
test
mov
dec
bound
push
pop
shlb
mov
push
xlat
push
mov
insl
mov
std
test
mov
mov
std
jno
inc
mov
mov
push
enter
or
xor
bound
jmp
push
mov
out
or
out
xchg
or
ret
into
and
ds
adc
mov
pop
ror
lods
inc
push
mov
test
scas
lds
mov
mov
xchg
pop
enter
and
lahf
daa
sub
lcall
xchg
pop
jp
xchg
push
add
push
xor
clc
mov
sahf
in
dec
aam
icebp
or
fwait
movsb
xchg
mov
jle
xchg
je
test
mov
les
or
dec
jbe
movsl
lret
pop
out
xchg
rorb
jle
outsb
sub
or
sarl
arpl
mov
stos
dec
int
xor
daa
das
outsl
add
stos
push
xchg
pushw
out
xchg
jg
inc
into
vminpd
fwait
cmp
inc
mov
ficomps
fimull
movsl
push
int
out
repz
std
xor
add
xchg
mov
pop
test
xchg
or
cmp
or
cmpsl
sbb
rcrb
lock
mov
mov
hlt
jae
mov
iret
aad
inc
dec
mov
bnd
jmp
lock
xor
mov
and
in
lea
ss
cmp
lods
xor
dec
add
clc
cmp
adc
rcrb
inc
scas
in
sbb
mov
sub
and
scas
int3
xor
xor
adc
mov
xor
in
mov
loop
inc
inc
mov
push
xor
inc
cli
mov
mov
test
sbb
mov
idivb
lock
mov
mov
fwait
jmp
cwtl
dec
push
and
scas
adc
out
shlb
ret
xchg
movups
in
jg
mov
push
xorl
insl
add
mov
mov
pop
mov
push
and
out
jp
icebp
test
rorb
inc
xor
jp
aaa
mov
cmc
jnp
inc
cltd
dec
es
stos
sub
cmp
sbb
pushf
sub
cli
fsubrs
pop
in
push
pop
scas
icebp
xor
addr16
push
arpl
cmp
dec
mov
sub
aas
lcall
iret
movsl
push
adc
mov
pop
mov
pop
mov
adc
sti
mov
out
jae
xchg
out
popf
jo
pop
roll
dec
mov
jb
or
pop
ficompl
mov
lea
mov
push
add
enter
lods
jl
mov
mov
or
outsl
inc
imul
hlt
jmp
xor
jge,pt
xor
mov
inc
jno
dec
xor
sarl
js
jge
sub
lcall
stc
adc
int
xchg
xchg
sub
or
xchg
loop
jno
mov
cld
pop
pop
dec
or
hlt
jecxz
test
inc
jbe
pop
imul
xlat
scas
pop
mov
xorb
adc
jbe
fistl
push
mov
add
imul
add
xchg
sbb
out
inc
push
lahf
loopne
jmp
mov
cmp
mov
cltd
cmp
jp
cmpsl
cltd
aaa
repz
and
in
push
in
pop
dec
push
pop
adc
dec
jl
sbbb
outsl
shrb
ljmp
sbb
push
inc
sbb
dec
inc
mov
jno
dec
cmp
pop
sub
pop
ss
sbb
ja
imul
cltd
sbb
movsl
push
notb
in
and
adc
movsb
iret
andb
and
lea
addb
bound
sahf
mov
xchg
xchg
ljmp
push
cli
push
mov
jle
scas
jbe
mov
insb
aas
out
cmp
push
push
sarb
xor
aam
mov
jnp
adc
sub
add
dec
add
xor
or
add
not
and
cmp
xchg
stc
sub
push
xchg
cmp
push
jnp
lret
imul
imul
movaps
push
mov
dec
sub
mov
mov
mov
addr16
jb
and
push
pop
clc
in
scas
js
sub
dec
or
lcall
jne
mov
stos
in
xor
lret
test
jb
or
mov
mov
dec
and
stos
sahf
xor
aam
shrl
pop
inc
sub
push
lret
movsb
les
push
or
jo
in
xchg
mov
jg
mov
mov
or
jecxz
lods
ljmp
push
hlt
adc
rcrl
orl
mov
xor
jmp
inc
in
inc
pop
xchg
fs
mov
cmp
iret
and
adc
jge
add
leave
add
subl
jp
pop
sbb
clc
mov
xchg
adc
cmp
adc
jl
jbe
sbb
add
mov
xor
push
push
popf
xchg
xchg
sarb
xchg
sub
imul
aas
push
sbb
xchg
je
test
lahf
dec
xor
or
adcl
jno
in
push
mov
mov
xchg
xchg
es
push
jp
sub
pop
mov
ret
cmp
outsl
jb
adc
scas
addr16
xchg
jne
and
aad
jmp
adc
mov
adc
stc
mov
push
sub
es
mov
sub
loope
xchg
push
leave
lods
push
ret
jbe
or
jb
lret
hlt
divl
or
fs
jl
mov
repnz
outsl
aam
test
xor
push
jmp
lods
pop
in
jo
mov
sub
mov
sub
mov
clc
shll
mov
outsl
dec
int3
imul
push
sub
sub
or
pop
mov
xchg
dec
clc
cmp
aad
cmc
add
mov
loop
rcll
aas
add
mov
rcll
aaa
mov
dec
mov
mov
jp
repz
jbe
push
notl
mov
aaa
stos
stos
stos
jbe
enter
enter
enter
rcr
push
mov
je
or
sbb
or
mov
and
fnstenv
jmp
mov
xchg
pop
rorb
adcb
aaa
xchg
das
or
xchg
insb
inc
sub
pop
mov
ret
inc
lds
xor
xchg
scas
rolb
out
clc
icebp
aad
movsl
ljmp
xchg
into
mov
push
fidivrl
in
call
adc
fstl
mov
mov
xor
push
fldcw
jle
rcll
or
sub
lahf
xchg
mov
mov
test
out
in
imul
lcall
lods
outsb
pop
xchg
adc
out
jnp
or
cmp
ja
pop
daa
scas
in
lret
mov
xchg
fists
enter
cmc
jo
daa
push
push
mov
and
sar
fildl
cmp
inc
outsb
ja
dec
rep
fwait
int
aam
push
xor
jmp
sbb
inc
outsl
and
lea
pop
push
xchg
sub
in
nop
loopne
out
sbb
mov
out
sbb
cltd
dec
sub
int
xchg
jge
xlat
and
sbb
mov
jne
bound
orb
outsb
jmp
ror
push
mov
ljmp
sti
sar
orb
shrb
js
pusha
cmp
sbb
xchg
mov
dec
lods
inc
sbb
cwtl
shrb
in
adc
into
dec
xchg
insb
out
mov
pop
ficomps
push
mov
sbb
mov
xor
pop
mov
adc
sbb
mov
fcomps
call
push
xchg
push
inc
jnp
inc
push
push
stos
push
xor
fs
and
mov
jmp
call
mov
jbe
lods
aam
arpl
cli
out
cmp
rsqrtps
and
mov
clc
fldenv
mov
imul
push
fwait
lret
movsb
loop
lret
inc
mov
xchg
pop
and
jge
pusha
cmpsl
ret
arpl
or
mov
mov
sub
int
stc
sbb
mov
lods
into
insb
ret
add
andl
push
int
movsb
popf
push
shll
loopne
mov
cltd
mull
in
dec
repnz
loop
pop
or
sarb
test
mov
popl
popa
bound
gs
cli
stos
or
imul
push
sbb
pop
jp
sub
dec
xchg
add
clc
imul
inc
push
scas
ljmp
cld
mov
mov
out
movsb
cmp
mov
scas
cli
or
mov
or
ffree
jnp
mov
jo
nop
ljmp
cmp
enter
sub
xchg
jae
popa
mov
inc
sub
out
pop
test
test
fildll
and
xchg
inc
mov
rorb
dec
outsl
test
lea
jnp
add
cmpps
addr16
sub
loope
pushf
dec
dec
ret
sub
movsl
add
xchg
and
xor
xor
cld
add
mov
fcoms
adc
data16
cwtl
push
out
mov
cltd
outsl
lds
fmuls
and
or
mov
and
addr16
cmc
ja
fisubrl
cmpsb
mov
rol
mov
lahf
push
lahf
xor
enter
lahf
movsb
xor
lods
dec
into
cwtl
sbb
push
xchg
cmp
outsl
nop
and
mov
push
or
inc
add
scas
lods
in
std
or
mov
lret
sbb
subl
fstpl
add
xor
inc
cmp
adc
stos
xor
sbb
arpl
fsubrp
and
and
mov
cmp
fdivp
and
sbb
outsl
push
inc
addl
imul
pop
push
add
shrb
shrb
inc
daa
jg
je
inc
dec
or
loope
loopne
sbb
xlat
fnstcw
into
sbb
mov
push
xchg
xchg
dec
daa
out
mov
sbb
jo
pop
pop
lods
aaa
jae
cmc
xchg
add
hlt
and
mov
cwtl
xchg
ret
adc
jge
sub
lret
outsb
and
mov
std
inc
pusha
adc
inc
fistpl
loopne
mov
jmp
inc
pop
and
std
stos
push
fsts
ss
jae
push
or
cmovle
mov
cld
mov
mov
adc
sub
vmaxsd
push
pop
dec
sub
add
movsl
dec
xor
jg
pop
cwtl
sbb
dec
or
movsl
movsl
xchg
mov
xor
js
inc
clc
je
fcompl
sub
mov
jnp
sahf
in
scas
cmc
mov
ret
ret
test
push
pop
idivl
in
jno
push
ds
jno
movsl
or
dec
outsb
mov
inc
dec
loopne
mov
inc
rclb
pusha
icebp
repnz
mov
cmp
mov
fnsave
test
cwtl
or
inc
ret
jbe
jmp
pop
es
in
adc
jge
leave
mov
sbb
mov
and
lds
xchg
cwtl
pop
lods
cmpsb
sub
shll
sti
das
dec
rorl
jo
enter
adc
icebp
lock
push
outsb
cli
or
mov
psubsw
out
sub
or
dec
xor
in
sub
and
mov
loop
fsubl
pop
cmp
test
dec
iret
jne
scas
loopne
test
rcrb
jmp
mov
fdiv
iret
jge
in
sub
mov
push
or
or
inc
inc
and
cmp
sarl
sub
stc
dec
sar
cli
push
mov
out
fmull
hlt
xchg
mov
jge
insb
adc
loopne
test
xor
jne
shll
xchg
inc
xchg
fistps
mov
add
sbb
pop
mov
adc
pop
mov
inc
or
insl
jb
test
mov
mov
xor
mov
dec
loope
pop
mov
mov
setbe
loop
cli
repnz
sub
andl
mov
aam
ret
testb
js
jae
int3
rcll
dec
inc
dec
jl
mov
jmp
fidivs
shrl
sbb
nop
nop
cld
sbb
pop
movsb
imul
push
push
enter
mov
inc
ja
and
jns
mov
insb
cs
pop
je
xor
push
mov
pop
cmpsb
jecxz
inc
lods
outsl
jnp
lds
dec
outsl
jb
das
lret
out
or
loopne
dec
dec
or
je
push
lret
xchg
cmp
bound
inc
adc
out
dec
or
hlt
mov
pand
and
mov
dec
inc
or
push
mov
inc
out
lea
iret
stc
addb
stos
xor
sahf
clc
sub
push
cmp
cltd
cmc
sti
xchg
loope
xor
push
addr16
push
rorb
lods
lds
repz
pminsw
xor
dec
xor
mov
jbe
dec
fnstsw
xchg
in
jb
mov
jmp
dec
aad
movsb
pop
or
cmp
xchg
fcomps
or
cmpsl
push
inc
cmpsl
stos
movsb
test
call
xor
jp
dec
out
in
adcb
jo
xchg
jo
arpl
out
loopne
sub
insl
jbe
inc
push
jmp
sti
js
push
cmpsl
subl
call
xchg
std
mov
xchg
std
mov
ljmp
aas
jmp
iret
cmc
gs
fcomp
mov
mov
mov
dec
cmp
dec
testl
fstpl
ja
rorl
out
or
loope
std
add
and
insl
pop
push
pop
aad
rcrb
adc
add
jg
sbb
iret
dec
push
xor
adc
sub
xchg
adc
lea
lock
imul
xchg
fwait
inc
dec
jp
dec
iret
in
repz
pop
les
stos
pop
xor
adc
jecxz
andl
and
fwait
pop
and
mov
jb
xchg
test
subl
add
in
xchg
mov
mov
call
pop
lock
dec
cmpsb
xchg
lcall
or
xchg
je
xor
stos
pop
mov
xchg
push
sbb
pop
sbbl
movsl
dec
loopne
jle
lret
xchg
and
mov
mov
xchg
jp
loopne
pusha
adc
xor
xor
stc
add
mov
aas
and
sar
sbb
adc
push
adc
cmpl
jb
lods
mov
dec
fcmovnbe
pusha
or
push
inc
loope
stc
sbb
iret
cli
mov
adc
dec
loope
repnz
xchg
and
je
or
push
push
mov
enter
sub
mov
jecxz
pop
dec
jg
push
xor
add
popf
and
lods
dec
out
xorb
cmpsb
imul
jnp
adc
aam
shrl
push
adc
push
test
dec
les
aaa
inc
and
popa
out
pop
loopne
mov
inc
clc
and
popf
sbb
fnstenv
pop
mov
xor
sbb
xor
adc
es
mov
ss
ret
cmp
xchg
int
sub
rorb
xor
cmp
test
sbb
push
pop
xchg
adc
add
sub
outsb
dec
cmp
ret
mov
ficompl
fcmove
test
loope
dec
push
push
mov
inc
xchg
mov
or
sub
stos
ret
dec
mov
test
enter
loop
xor
in
adcb
in
or
dec
arpl
cmp
pop
imul
inc
mov
push
cltd
ds
addr16
je
dec
movsl
das
lock
mov
pop
xor
repz
mov
rol
jns,pt
rol
adc
or
sti
fs
outsb
stos
addr16
adcl
out
pop
ret
pop
test
mov
out
out
in
loope
add
rolb
or
test
rorl
pop
mov
nop
push
imul
add
mov
pop
imul
add
cli
popf
inc
loopne
mov
or
mov
push
aaa
popf
mov
stc
sbbb
sub
jns
or
sbb
aas
stc
jecxz
outsl
fldcw
mov
gs
mov
or
mov
lods
outsb
arpl
aad
inc
jle
mov
push
push
jno
es
out
cli
sbb
or
xlat
cld
xor
mov
fwait
test
jle,pn
lods
call
cmp
mov
ret
xchg
test
sbb
cmpsb
pop
addb
iret
or
jne
mov
leave
nop
fcmovbe
mov
jge
test
jmp
dec
or
xor
loope
ds
inc
in
add
and
cmp
xor
pusha
aas
shr
and
or
fistpll
lahf
lock
roll
cli
hlt
push
mov
xchg
inc
mov
sbb
push
jle
xchg
cltd
mov
pop
jnp
add
test
mov
shld
jecxz
pop
frstor
push
arpl
jne
outsl
call
inc
fmul
in
lock
mov
sbb
mov
jb
loopne
cmp
xor
dec
stos
imul
sbb
jmp
loope
mov
outsl
ret
add
sub
fstpt
pop
xchg
push
pop
mov
or
cwtl
ss
push
int3
adc
jge
push
sbb
les
dec
push
jb
sub
cwtl
popa
decl
aaa
les
inc
scas
push
minps
mov
xchg
dec
cmc
sbb
add
push
pop
mov
lret
cmp
shr
jl
jl
sub
stos
rcrb
pushw
sarl
addr16
sbb
mov
jb
int3
mov
fnstsw
jge
popl
cmp
xor
inc
mov
pop
push
dec
mov
lret
xlat
jae
loop
addr16
mov
xchg
push
mov
pusha
add
mov
call
adc
iret
lcall
jnp
aad
dec
jne
mov
stc
movsl
pop
mov
test
aas
out
mov
jno
stos
dec
xchg
shlb
cmp
rclb
mov
js
in
icebp
iret
or
sbb
out
or
into
stc
cli
movsl
mov
fidivs
push
sub
cmp
push
jnp
inc
cmpsl
xor
pop
lds
mov
mov
dec
sbb
pop
jecxz
in
outsl
test
cmp
out
mov
push
leave
push
mov
mov
mov
sti
jnp
jb
rep
enter
add
cmpb
aam
inc
call
pop
popf
xchg
imul
xchg
xchg
push
sub
add
aam
fidivs
fimuls
pop
sbb
xchg
jo
sbb
imul
es
xor
cmp
lds
xor
xlat
call
sbb
add
insl
in
pusha
push
mov
jle
mull
test
jecxz
aas
jne
hlt
or
fxch
loop,pt
inc
push
mov
adc
shll
dec
add
enter
jge
fxch
dec
xor
outsb
mov
in
push
cs
aas
adc
xchg
cmp
jo
and
ss
rcll
movl
sbb
scas
mov
cli
leave
subb
popa
insb
fildl
mov
jno
std
test
mov
sub
out
imul
pushf
daa
test
adc
nop
add
adc
lcall
fucomp
xchg
push
cltd
cwtl
inc
dec
mov
js
jle
mov
mov
push
mov
jb
es
dec
jb
jns
divl
pop
gs
aas
enter
scas
jmp
inc
popf
push
mov
inc
pop
in
lea
es
sbb
push
outsl
cwtl
xchg
add
sbb
adc
pop
dec
or
or
aas
mov
rclb
lds
adc
or
mov
lret
sbb
stos
ljmp
aaa
pop
sub
je
cltd
fcoml
lea
inc
leave
loop
push
pop
scas
fistpl
jo
les
jnp
mov
pop
add
in
pop
sub
clc
fwait
pop
out
jmp
outsb
outsb
pushf
addl
pop
test
cmp
loope
mov
fmulp
lds
jmp
push
shll
jne
or
mov
fcomps
or
mov
or
or
icebp
cld
enter
xchg
repz
cmp
inc
sub
cmp
sarb
ds
test
ja
add
out
shll
cld
inc
or
aam
push
xchg
cmpl
sbb
jmp
insl
jmp
adc
loopne
das
loope
xchg
mov
or
add
mov
or
scas
cwtl
pop
lds
das
push
dec
cmp
jbe
push
daa
adc
pop
push
push
cmp
addb
lea
xor
sbb
shll
pusha
pushl
stos
stc
imul
test
or
jne,pn
mov
or
loop
pop
or
push
inc
jp
loopne
out
test
pop
mov
outsb
jge
inc
adc
mov
dec
mov
mov
pop
mov
out
adc
nop
sub
and
ljmp
inc
pop
cmpsb
stc
aad
jo
andl
xlat
sub
cmp
xlat
aas
sahf
mov
popf
movsl
stos
jg
jae
out
fidivrl
and
cmovg
xchg
xchg
mov
iret
mov
cmc
or
mov
push
flds
sahf
pop
std
xchg
pop
dec
xor
mov
fs
push
outsl
lock
cmpsb
int3
out
idiv
push
test
stos
clc
shll
ss
sub
js
aam
sti
or
pop
jge
jne
inc
mov
fadds
dec
je
popa
xchg
or
inc
mov
stos
mov
jb
pop
pop
push
sti
pop
movsb
cwtl
scas
mov
arpl
lret
clc
inc
sub
and
repz
stos
inc
dec
insb
loopne
add
iret
aas
movsl
xor
cmpsl
popf
mov
jg
pop
loopne
out
cmc
sub
dec
mov
push
dec
stos
out
enter
dec
fisttpl
sbb
subb
testl
jb
jg
push
jge
sahf
shr
mov
int
arpl
mov
push
xlat
pop
xlat
or
add
loopne
das
in
clc
jbe
std
nop
in
cwtl
push
jecxz
dec
mov
fnsave
mov
clc
hlt
mov
and
ficompl
jecxz
mov
movsb
lahf
adc
test
test
rcr
push
mov
rcrb
or
dec
test
push
test
aam
add
pop
and
sar
xchg
sbb
xchg
imul
loop
lret
dec
loop
push
inc
mov
aaa
int3
pop
jmp
stos
pop
mov
and
xchg
sub
mov
inc
iret
jg
jo
cmp
pusha
adc
rcll
or
xadd
and
xor
dec
inc
add
xchg
push
fstl
mov
adc
ss
iret
stos
rcrl
std
and
in
inc
sub
mov
cmp
loopne
ds
jnp
sbb
clc
addr16
test
icebp
fdivl
xchg
pop
cmc
es
ja
jl
xchg
or
mov
cmp
dec
sub
pop
jle,pn
fisttpll
rcr
or
ja
test
sub
out
fcompp
xor
outsb
cld
cmc
add
test
inc
scas
xchg
pop
iret
mov
cwtl
call
xor
jo
push
movsl
sub
pop
and
scas
aas
and
push
mov
repnz
hlt
mov
cmovs
cmp
into
sarb
mov
mov
jno,pn
sti
sarl
imull
pop
xchg
inc
dec
xorl
ds
add
aad
popf
dec
adc
mov
cmpsb
inc
push
icebp
lahf
dec
lods
test
xor
mov
fidivrl
mov
nop
mov
imul
mov
cmp
lcall
or
xchg
stc
pop
inc
pop
cmpsb
push
sbb
inc
int
mov
push
jp
mov
lahf
xchg
bound
mov
mov
decb
dec
jl
push
cmc
push
das
push
pop
divl
mov
inc
xchg
dec
mov
jno
xor
mov
imul
dec
lret
and
rorl
lret
stos
add
jmp
fisttpl
push
pop
test
mov
inc
cmpsb
mov
lret
adc
mov
add
aaa
pop
jae
push
fdivrs
inc
out
clc
mov
fdivs
inc
loope
std
cmp
jae
xchg
outsl
scas
je
or
xor
test
lds
jmp
movsb
jae
jb
or
sub
popa
dec
push
jge
push
in
add
cmp
scas
and
mov
arpl
pop
cwtl
xchg
stos
xor
lret
sub
push
ror
cmp
mov
sub
rorl
ret
sub
sub
push
cwtl
repz
imul
dec
xorl
addr16
std
jg
mov
lahf
dec
not
mov
jno
adc
jge
rcll
int
lret
adc
mov
xor
rorl
int
push
lret
loope
fstpt
loopne
xor
aaa
mov
js
jp
sbb
aam
inc
xchg
inc
sbb
cltd
push
jle
dec
mov
cmp
pop
pop
scas
addb
add
fldt
nopl
push
jbe
movsl
cmp
dec
jns
cmp
add
inc
cmp
sbb
lock
call
icebp
fwait
cmp
lds
out
clc
dec
xchg
or
insl
scas
dec
sti
lock
jbe
inc
movsl
into
clc
js
rcl
rcr
jns
scas
aam
mov
pop
aad
sub
stos
or
inc
das
adc
mov
movsb
push
in
stc
lods
mov
mov
pop
in
sahf
push
fidivs
jae
inc
xchg
cmp
xchg
push
pop
mov
filds
add
mov
ja
mov
aam
stos
ss
xchg
cmp
loopne
mov
enter
insb
scas
in
repnz
adc
aam
push
cld
mov
pop
pop
ljmp
sbb
sub
jns
rcrb
shlb
mov
lret
jns
inc
imul
loopew
adc
xchg
xchg
outsb
xchg
stc
cmp
sub
xor
popa
outsl
jb
cmp
cmp
lock
outsl
mov
out
cmp
sub
lds
add
sub
add
stc
xchg
int
sub
adcl
mov
mov
jmp
mov
push
cmc
js
mov
xchg
mov
mov
mov
lds
pop
rcr
mov
out
data16
lret
in
sahf
pop
icebp
sbb
push
or
roll
xor
inc
jmp
leave
sub
sti
test
cmp
mov
mov
pop
pop
or
or
sbb
dec
daa
rol
pop
enter
inc
xor
hlt
add
packuswb
ss
pushf
movsb
stc
mov
leave
or
inc
inc
cmpsb
loopne
inc
and
mov
sub
sbb
adc
xchg
out
xor
xor
imul
push
popa
mov
xlat
clc
leave
lds
leave
jge
push
cmp
enter
push
and
arpl
stos
sub
repnz
push
xchg
push
push
inc
sahf
mov
or
movsb
in
bswap
mov
fwait
push
outsb
pop
mov
ja
adc
jae
mov
jle
icebp
ret
faddl
sub
inc
push
dec
pop
fmuls
cmp
arpl
inc
add
sub
test
lret
jg
adc
mov
pop
pop
add
pop
pop
sarl
or
fdivl
pop
adc
sub
jb
lahf
cmp
cmp
cmp
xchg
and
xor
sbb
cmp
mov
imul
out
pushl
pop
mov
sub
dec
sbb
mov
push
cmp
or
and
rcrb
in
insb
jb
ss
nop
cld
sahf
out
mov
inc
xor
pop
mov
jle
mov
add
mov
sbb
adc
lcall
inc
jp
movsl
or
mov
mov
xchg
push
sub
cmp
outsl
js
jne
sbb
incl
xorl
cmpsb
enter
insl
enter
adc
jne
add
mov
and
aad
push
cmpsl
leave
or
push
or
fldenv
arpl
xchg
mov
shrb
cmc
shl
or
leave
arpl
fwait
lock
bound
ds
fmuls
sbbl
sub
shll
ds
inc
cltd
fiaddl
cmpsl
dec
lcall
test
mov
inc
jb
or
or
and
aaa
pop
imul
fs
jb
jg
call
hlt
adc
dec
add
xor
xor
add
les
cld
cltd
jp
fcmovbe
imul
inc
in
loop
imul
push
push
out
pop
push
jo
mov
cmp
and
gs
and
and
int3
addr16
sbb
mov
mov
fildl
sbb
xchg
mov
ss
inc
adc
sub
lret
pop
mov
pop
push
sub
jmp
jecxz
cli
imul
xchg
mov
add
mov
jb,pn
sbb
xchg
inc
and
fisubs
push
std
push
adc
jae
xchg
cli
pop
mov
pop
adc
repnz
push
hlt
aaa
leave
les
jnp
mov
add
pop
xchg
int3
jne
ret
dec
in
inc
push
jbe
stc
fdivl
lcall
fucomi
ficompl
push
mov
lret
push
and
leave
push
pop
xor
inc
jge
add
sbb
pop
lcall
mov
push
cltd
mov
daa
into
add
push
data16
fs
dec
mov
mov
adc
xor
and
fildll
sub
inc
scas
mov
sahf
sbb
cmpsl
jne
pop
xor
pop
adc
dec
xor
cmp
arpl
les
dec
pop
xchg
popf
mov
xchg
outsl
fucomi
adc
movsb
fs
lods
lods
cmc
pop
shlb
je
sub
cmpsl
jbe
push
and
into
insl
lret
push
sbb
cmp
and
cmp
enter
mov
push
pop
pop
inc
push
xchg
xlat
andb
rolb
in
add
mov
andl
adc
push
jl
mov
pop
popa
icebp
mov
ret
hlt
dec
ja
sub
test
dec
adc
lahf
mov
fsub
lods
mov
sbb
clc
ficompl
and
std
adcb
dec
add
xchg
pusha
xor
mov
sti
jg
pop
mov
test
pusha
test
in
mov
sahf
and
mov
push
jbe
add
out
xchg
jns
push
lret
inc
xchg
pop
in
hlt
out
push
sbb
pop
xchg
and
addb
flds
out
push
add
adcl
imul
and
mov
into
loop
adc
cmpb
and
repnz
decb
cmpsb
jecxz
cmpsl
movsl
jnp
mov
and
or
sbb
dec
jo
std
lods
movsb
cmpsb
pop
dec
lock
xchg
mov
js
in
lret
les
pop
and
jle
push
mov
pushf
xor
cld
into
mov
mov
or
nop
inc
sbb
sbb
int
mov
stos
push
leave
lret
jge
ret
aam
imul
scas
or
cmp
popf
cmpl
in
cmp
ret
jmp
ret
cmpsb
mov
shr
addr16
add
sub
fs
fs
xchg
sub
loop
add
incl
add
sbb
inc
push
dec
xchg
cmp
lods
mov
and
scas
adc
pop
div
shlb
sub
jmp
mov
inc
adc
adc
lods
dec
ret
addr16
and
addr16
mov
cmp
insb
je
sbbl
sub
push
push
cwtl
fldt
xchg
stc
add
add
insb
xchg
pop
in
dec
xchg
mov
mov
fidivrs
cmc
fs
into
aaa
sub
jb
iret
inc
xchg
mov
and
aad
jmp
jl
jp
movl
stos
sbb
lods
aaa
shrb
cmc
cmp
or
cs
sti
fiadds
inc
xchg
sub
movsb
inc
lcall
xchg
and
scas
lods
sbb
add
out
push
jmp
mov
fdivrp
push
sahf
cld
stos
jb
movsb
mov
lods
sub
mov
popf
cmpsb
cli
insb
outsb
popf
jo
xchg
out
popa
or
inc
push
jbe
in
cmp
lcall
lret
inc
push
sbb
cmp
mov
jbe
inc
daa
sub
movsl
mov
cmpsl
xorl
loopne
nop
push
int3
jb
lds
cmpl
add
mov
mov
adc
jae
jnp
icebp
jle
out
insb
sub
sarl
cmp
lret
cld
lods
jo
cltd
sbb
aad
pop
xlat
aam
cltd
sub
mov
inc
mov
mov
and
push
mov
cli
iret
fmul
js
mov
lret
mov
sub
push
pop
aas
or
fdivrs
xor
pop
jbe
lahf
adc
movsl
pop
nop
ss
lock
mov
outsl
inc
lock
in
call
and
lret
pop
dec
call
mov
jle
adc
jle
test
mov
mov
jp
aam
nop
cmpsb
cwtl
testl
dec
jmp
ljmp
sub
cwtl
sbb
loope
or
loop
aas
jbe
mov
insl
imul
pop
mov
push
cmp
int3
shll
cmp
int3
add
adc
sahf
push
cmpsl
push
mov
sub
push
int3
jo
inc
sub
cmpl
jb
inc
data16
xchg
cmpsl
add
movhps
inc
push
mov
ret
out
loope
cmp
pop
es
jg
aam
adc
dec
les
fs
mov
jo
loopne
jnp
dec
sbb
or
inc
loopne
fdivr
xor
repz
mull
dec
xor
or
xchg
addr16
push
cmp
loopne
daa
and
sbbb
movsl
out
push
or
xorb
sub
call
xor
jmp
in
or
and
push
imul
inc
sbb
dec
popa
ret
dec
int3
cltd
insb
add
mov
cmpsl
mov
mov
test
pop
mov
push
rcr
