call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
and
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
jl
and
jg
fistl
cmp
les
jle
add
pop
pushl
daa
xchg
popa
outsl
cs
push
jge
push
in
neg
outsl
sbb
jne
push
pop
or
or
xchg
or
cmp
cmp
leave
ret
xchg
add
mov
push
or
daa
mov
pushl
call
popa
mov
jnp
jmp
sub
mov
xchg
movsb
in
sbb
fwait
popa
in
add
test
add
test
xchg
outsb
and
cmp
cmp
add
add
test
inc
mov
mov
adcl
push
mov
sbb
int
pop
or
inc
das
add
xchg
cmp
add
sbb
popf
cwtl
verr
clc
andb
ret
nop
jbe
sbb
adc
mov
add
jmp
lea
pop
mov
push
sbb
dec
or
and
outsl
mov
jge
dec
lret
push
and
cmpl
push
push
gs
add
or
xor
cmp
mov
int3
sub
sbb
add
inc
lods
jmp
testl
add
sbb
mov
push
insl
sbb
mov
push
push
aam
push
outsb
clc
fistps
and
mov
mov
in
jb
repz
sub
or
mov
mov
dec
and
jns
adc
mov
push
sbb
loope
scas
xor
fwait
rcrl
repz
test
dec
push
xor
inc
outsb
xchg
push
inc
cmp
xor
and
adc
sbb
sbb
xlat
dec
hlt
adc
fucom
stos
or
flds
sbb
pop
int3
fucom
jge
dec
pop
je
sub
das
xchg
int3
sbb
cmp
inc
jp
negb
insl
lret
pop
push
dec
pop
pop
jo
in
adc
into
ljmp
mov
out
mov
add
bound
mulps
mov
shr
ja
push
pop
cld
clc
hlt
pop
shll
fs
sub
jne
xchg
sub
sbb
mov
clc
clc
cld
in
mov
xchg
cld
mov
sbb
and
clc
jnp
hlt
adc
or
sbb
add
mov
popa
test
decl
inc
cmp
mov
mov
stos
or
push
pop
jne
outsl
adc
data16
loopne
scas
loopne
in
into
call
out
cmpl
push
push
daa
faddl
in
adc
cld
cltd
xchg
call
clc
pop
sti
inc
jae
sahf
mov
mov
rep
mov
mov
adc
popf
test
sti
setg
pop
and
mov
ds
pop
pop
lea
mov
mov
roll
mov
mov
testb
ficomps
fistpl
cmpl
pop
and
bts
div
pop
jmp
push
scas
pop
negb
push
push
xorl
and
adc
inc
and
adc
bound
sub
add
mov
jge
das
jnp
xor
mov
xor
xor
call
cmpb
popf
sub
call
push
outsl
rolb
loopne
sarb
adc
subl
and
adc
adc
mov
push
add
mov
lock
mov
repz
dec
mov
cmp
test
cwtl
adc
adc
fs
xchg
loopne
pushf
adc
fistpl
jne
add
cwtl
lea
loope
das
aad
jne
nop
pop
mov
popa
add
or
mov
push
cmpl
inc
push
repz
clc
xchg
push
loope
inc
adc
aaa
pop
jb
add
lock
cli
lcall
jno
into
jnp
mov
arpl
sbb
test
arpl
pop
jl
cmp
sbb
imul
pop
jl
in
adcb
dec
jge
incb
xchg
add
pop
xor
cs
push
pop
les
fistpll
int
ret
aam
xor
lock
mov
fwait
jbe
cmpb
push
mov
xchg
or
aam
testl
fsubrs
in
cmp
add
out
mov
loopne
jmp
dec
fdivs
insb
jb
pop
dec
leave
dec
jle
and
push
push
call
inc
cmp
pop
orb
jbe
je
lea
add
shr
pusha
ljmp
push
or
jmp
mov
int3
test
add
rcrb
pushf
mov
int3
push
hlt
lods
push
push
out
adc
mov
popa
sbb
lods
adc
push
pop
test
mov
inc
or
shll
enter
push
lods
push
fcomip
std
loop
gs
jmp
dec
mov
add
test
jl
cmp
jg
fildl
testl
loop
mov
negb
lea
inc
sti
clc
in
push
jo
in
push
push
daa
or
cmp
add
inc
cmp
pop
mov
ret
dec
movsb
dec
adc
or
sti
addl
xor
xor
sbb
cmc
outsb
and
push
mov
add
lahf
cmp
popa
sbb
jge
out
jo
ss
notl
adc
aaa
mov
push
mov
adcb
and
scas
mov
jg
sub
cmp
jge
movzwl
push
push
cli
or
rol
cmp
div
out
inc
push
adcl
in
sbb
pop
addb
dec
jge
and
adc
mov
add
leave
mov
add
repnz
push
mov
ret
mov
jne
push
pushl
push
or
push
push
push
in
loope
sub
adc
loope
lahf
das
xchg
add
jne
sbb
cmpsl
frstor
pop
push
inc
ret
ror
adc
sbb
sbb
in
jo
fidivl
rcrb
mov
scas
cmp
mov
mov
push
in
or
inc
push
daa
inc
adc
mov
or
fsubl
push
pop
fcomi
mov
je
jge
or
in
arpl
pop
cmp
imul
notb
adc
je
push
jmp
sbb
jb
push
push
jecxz
xchg
mov
cmpsb
imul
xor
fwait
mov
xor
jne
push
xor
cltd
call
dec
dec
sahf
imul
push
insl
lahf
addr16
dec
jo
idivb
sub
xchg
cld
xor
add
in
pop
clc
cmp
add
mov
loop
pusha
adc
in
or
jge
je
test
pop
push
push
mov
jecxz
jmp
pop
lods
push
in
aaa
xor
sbb
or
jnp
fcompl
push
mov
rcrl
xor
ss
test
add
pop
stc
mov
js
das
stc
mov
ds
icebp
shll
ret
cmp
pop
les
in
push
lret
clc
je
mov
test
push
adc
push
mov
in
out
popa
pop
dec
mov
adc
and
lock
pop
push
push
ja
loope
cmp
lea
inc
adc
fs
mov
mov
dec
xchg
pop
outsl
jns
aad
cltd
call
inc
lea
rclb
mov
shll
sbb
jecxz
sub
mov
int3
pop
in
mov
aaa
push
push
mov
aad
nop
push
pushf
mov
xchg
cld
or
fildl
cmp
inc
ret
xchg
push
sub
sarb
mov
sti
imul
cmp
jl
scas
mov
adc
popf
or
jo
add
push
mov
push
xchg
pop
shll
call
test
dec
inc
enter
mov
test
cmp
push
push
rcrb
decb
or
dec
xor
or
pop
or
adc
pop
icebp
cmp
enter
sbb
push
movsb
loop
shr
add
fiadds
cltd
mov
orb
movb
cwtl
sub
incl
adc
sub
xlat
and
mov
jne
add
pop
mov
mov
pop
rclb
ljmp
inc
and
adc
and
int3
add
out
sbb
add
xchg
xchg
das
inc
sbb
xor
cmp
fmuls
clc
imul
das
pusha
clc
incl
stc
mov
push
shr
shl
add
lea
jo
cmp
add
das
fidivrl
mov
scas
mov
xlat
push
sbb
rolb
in
rol
jne
push
fcomps
mov
movsb
mov
xor
add
sub
out
add
mov
int3
popa
xor
pop
inc
pusha
js
je
lea
int3
sti
ja
push
or
push
push
push
xor
push
in
or
sub
daa
sbbb
adc
das
mov
aaa
das
int3
sub
and
call
pop
mov
in
or
jmp
adc
jmp
adc
cmp
xlat
adc
dec
mov
outsl
inc
leave
pop
jecxz
push
outsl
outsb
push
push
push
pushf
cltd
cwtl
pop
sti
dec
jne
mov
mov
lds
jle
add
hlt
or
or
pushf
mov
jbe
ret
push
fiadds
int3
push
push
push
je
inc
scas
sbb
adc
push
pop
inc
lock
fwait
in
loope
jmp
stos
or
jl
out
push
je
pop
inc
cmp
arpl
inc
fldcw
fs
xchg
xchg
and
das
rorb
lret
jg
mov
jnp
adc
pop
mov
dec
add
inc
or
subl
inc
push
adc
pop
adc
adc
xchg
divl
and
or
out
sub
sub
jne
push
push
loope
sbb
inc
sbb
repnz
adc
add
push
or
pop
rorl
lock
addr16
add
and
into
inc
jns
leave
adc
push
jno
ficoml
je
dec
adc
sub
mov
xor
cld
cld
dec
xchg
icebp
cmp
cmp
mov
js
add
pop
push
jmp
xlat
push
shrb
lret
pushf
pusha
push
cmp
xlat
add
cmp
cmp
push
cmp
fcom
jnp
mov
pop
push
repnz
mov
xor
sbb
in
sub
pop
dec
mov
dec
sbb
add
jne
add
sbb
jns
cwtl
je
mov
push
mov
or
jno
call
arpl
pushl
inc
xchg
das
lea
loopne
sub
sub
sahf
dec
pop
test
les
sub
dec
jb
mov
cmp
mov
push
insl
imul
outsl
jmp
adc
cmp
data16
jmp
and
daa
pop
ss
and
adc
fldpi
js
cmp
in
mov
jbe
je
or
dec
or
sbb
dec
out
and
adc
push
add
sub
es
std
addr16
pop
jmp
lret
jno
dec
insl
xchg
lea
adc
cmp
lea
cmp
xchg
fstps
push
and
daa
mov
ljmp
and
dec
and
and
xor
push
incl
inc
out
or
xchg
lock
dec
jne
pop
rcrl
xor
cmc
not
pop
ret
cmp
push
push
xlat
mov
add
in
aad
out
sub
es
inc
inc
call
es
imul
push
aaa
cmp
pop
pop
inc
push
or
testb
jae
notl
je
dec
dec
add
adcb
jecxz
cmc
push
jg
mov
mov
mov
js
daa
js
push
and
xchg
inc
imul
sar
aam
les
xor
jecxz
int
mov
sbb
movsl
cmp
cwtl
iret
pop
popf
aas
lock
call
cli
jecxz
divb
sub
in
je
push
mov
push
insb
push
xchg
out
add
jmp
and
jns
adc
ljmp
push
out
movmskps
test
adc
dec
lcall
cmc
pusha
icebp
adc
xor
push
push
xor
cmp
icebp
add
call
xchg
and
in
shlb
nop
dec
jp
aas
lock
aaa
inc
mov
loopne
sub
sbb
clc
fsubp
movl
fwait
lahf
mov
mov
jecxz
out
daa
add
call
jno
mov
mov
mov
pop
stc
shlb
push
inc
sub
int3
or
xorl
nop
xchg
pop
jl
mov
pop
adc
push
lds
stos
sbb
jg
es
mov
pop
inc
or
pop
mov
nop
nop
xor
fmuls
pop
or
sub
add
push
movsb
push
and
enter
sti
cli
ljmp
pop
lret
adc
in
xchg
mov
adc
sti
jle
jnp
mov
imul
or
jbe
call
movsb
and
adc
test
inc
rcrl
xchg
insb
test
rcl
inc
scas
mov
add
push
jmp
push
mov
clc
aad
add
dec
cld
xor
inc
subl
sbb
lea
imul
and
push
test
push
xlat
cmpb
loope
insl
decl
popf
push
push
and
std
push
inc
jmp
sbb
jne
push
pop
jmp
push
pop
cmp
dec
or
cmpsl
adc
jmp
je
pusha
mov
xor
xchg
les
xchg
rclb
jmp
and
cmpsb
hlt
mov
mov
jne
jne
roll
adc
mov
movsl
into
jae
inc
insl
dec
movsl
orb
cmpb
mov
rclb
sbb
enter
cmp
push
jo
xchg
push
out
sub
sub
jge
popf
inc
fdiv
xor
push
xor
xchg
pushf
dec
pop
dec
out
lock
loopne
mov
sub
and
sub
rcrl
xlat
aad
fs
adcb
mov
or
xor
jno
xor
inc
test
fwait
je
or
sub
inc
push
mov
push
roll
loop
add
fstpt
jno
das
push
inc
ja
push
push
pop
cwtl
jl
outsl
pusha
jle
jb
and
mov
jne
push
shl
and
out
rclb
rclb
push
ss
test
cmp
outsl
repnz
fidivs
lods
insl
mov
jmp
iret
xchg
dec
in
adc
repz
flds
jmp
mov
add
movsbl
mov
stc
pop
inc
pop
dec
cmp
mov
ret
pop
jbe
push
lods
push
mov
jmp
arpl
nop
out
jne
adcb
jne
sbb
add
xor
in
imul
mov
or
pop
lods
add
adc
jne
and
and
push
dec
cmp
in
push
out
cmp
push
push
add
push
mov
stc
or
sub
sti
jg
fsubrl
and
lods
push
sub
add
push
push
testb
jb
test
sbb
and
pop
sbb
sbb
xor
xlat
or
jbe
movsl
out
jge
sbb
cld
cmc
mov
inc
push
fbstp
neg
push
pop
xchg
out
pop
and
add
dec
loopne
dec
and
push
push
daa
mov
lahf
ret
outsb
scas
pop
test
cltd
add
cmp
adc
push
push
add
fdivrp
adc
sub
jne
call
add
iret
jns
aaa
mov
sbb
in
sub
add
mov
mov
xchg
add
xor
adc
add
imul
cltd
pop
inc
test
in
or
jo
movsb
mov
push
movsl
push
jmp
dec
adc
pop
push
lcall
inc
testb
sbb
inc
push
int
sarb
add
pop
sub
push
addr16
mov
mov
mov
insb
ret
and
mov
mov
cs
pop
adc
sbb
pop
dec
fadds
loopne
dec
dec
or
cmp
aam
inc
jge
aad
mov
xor
xchg
push
pop
in
cmp
and
lcall
or
inc
mov
clc
add
mov
sahf
sti
popf
hlt
insl
push
fmull
test
jmp
cli
jo
jae
xchg
push
and
call
enter
fsubp
mov
push
inc
and
pop
in
push
in
cmp
jno
push
push
lret
nop
xchg
notl
sbb
mov
inc
in
sbb
pop
in
lods
and
add
pop
test
jl
lods
pop
je
adc
das
jmp
jbe
sbb
add
movsl
xor
inc
jge
testl
mov
jl
ds
mov
adc
stos
mov
subb
test
push
pop
xor
cmpsl
lock
stos
lea
push
fwait
mov
xor
andb
fsts
dec
mov
sbb
mov
add
add
adc
loopne
mov
mov
adcl
jne
aaa
repz
pop
inc
cltd
inc
notl
and
mov
sub
mov
pop
vmovaps
and
lods
int
and
mov
push
push
ret
add
adc
mov
or
shrl
inc
xor
xor
push
in
add
cmp
dec
xor
inc
adc
imul
cmpsb
mov
insb
inc
inc
xor
insb
sub
enter
shlb
push
sub
inc
lea
lea
jns
pop
sti
mov
test
xor
decl
mov
cltd
push
pop
idiv
cmp
jne
cmpl
or
enter
cwtl
data16
and
push
push
dec
push
push
imul
out
xchg
push
mov
inc
sbb
in
imul
jo
push
push
orl
iret
push
cmp
jnp
xor
add
ret
mov
add
jae
xor
mov
jbe
push
or
jl
sbb
fs
xchg
dec
mov
mov
sbb
fs
int3
mov
lea
mov
sbb
pop
cmp
mov
mov
push
push
or
xchg
jne
les
ret
pop
dec
dec
push
xor
mov
mov
mov
lods
sbb
mov
in
sahf
pusha
out
mov
enter
insb
nop
inc
mov
pop
and
pop
pusha
orl
test
pop
jne
es
mov
insb
pop
mov
sbb
pop
lea
mov
dec
sub
jg
icebp
daa
test
bound
rcrl
inc
sub
mov
scas
stc
push
push
xor
cli
cmpb
sbb
ret
leave
xor
xor
and
or
lods
punpckhdq
dec
andb
mov
das
cmp
adc
adcl
xchg
sub
testb
add
xlat
jae
call
fistl
nop
and
fsubl
dec
cmp
fs
mov
loopne
push
ret
inc
rclb
xchg
pop
jmp
mov
ucomiss
jge
ret
add
pop
push
adc
sub
jmp
rcll
enter
in
mov
sbb
sbb
ss
sub
adc
std
mov
pop
imul
adc
mov
dec
dec
repz
std
imulb
inc
movsl
add
mov
push
xor
cltd
push
jl
jmp
imul
sbb
adc
ss
push
mov
popf
andl
push
jns
ret
xabort
adc
jmp
test
in
in
or
sub
out
out
and
shl
ss
lods
out
xlat
cmp
inc
int3
mov
mov
mov
push
ja
fstl
dec
inc
andb
dec
push
xchg
icebp
add
mov
pusha
shrl
add
nop
jo
and
pusha
pushf
jbe
pop
insb
sub
dec
sbb
or
into
sahf
outsl
add
and
insb
out
sbb
sbb
mov
mov
popa
push
dec
enter
pop
test
dec
out
jnp
push
or
int
mov
add
mov
pop
mov
mov
add
mov
in
xchg
and
in
in
fdivs
add
jnp
pop
xor
add
movsl
dec
movsl
clc
lret
mov
movl
loop
pop
mov
hlt
int3
test
pushf
dec
jne
cmpsl
nop
sti
sbb
and
xor
dec
mov
nop
js
ss
std
insb
push
or
or
int
arpl
test
push
mov
mov
dec
ljmp
jl
push
sbb
sbb
jp
incl
sti
call
push
test
or
mov
jp
inc
dec
rolb
sarb
aas
and
jns
test
xor
decl
xlat
sub
stos
mov
movb
pop
repnz
outsl
sbb
pop
jge
pop
rol
inc
aam
sbb
push
dec
fdivl
mov
mov
cltd
mov
push
xor
adc
mov
cmp
dec
adc
mov
or
jmp
leave
pop
xor
mov
cmp
pop
jno
sbb
rorl
mov
sbb
neg
sbb
and
add
mov
push
dec
pop
test
push
push
cli
or
or
decb
loope
in
lcall
pop
mov
mov
fdivl
add
pop
pop
pop
jnp
adc
outsl
leave
enter
iret
jmp
add
rolb
icebp
shl
adc
jmp
ss
mov
pop
fsubl
mov
push
lret
repnz
ja
or
xchg
dec
ljmp
sbb
mov
mul
push
int3
pushf
sub
push
addr16
add
loopne
ret
scas
inc
lahf
inc
mov
loope
dec
leave
mov
cmp
mov
sbb
and
inc
adc
or
inc
enter
mov
xor
in
movups
xor
cmpb
ss
inc
sbb
push
jmp
lcall
mov
pop
xor
sub
mov
add
jb
mov
mov
push
mov
mov
hlt
dec
push
ss
test
incb
mov
enter
add
call
lods
add
ret
out
add
mov
mov
movsb
mov
mov
jl
lock
pop
inc
lret
imul
sbb
ljmp
cmp
pop
xor
lock
mov
jns
jl
shl
cli
aam
std
xor
adc
xor
sti
add
xlat
mov
jo
hlt
mov
add
xchg
xor
in
ja
mov
or
pop
dec
and
mov
pop
mov
int3
je
adc
cmp
leave
lea
pop
ss
mov
jae
xchg
sub
cmp
sti
or
xchg
add
lods
xor
add
aas
mov
shr
dec
mov
xor
jge
add
lock
shrl
xor
add
cwtl
insl
adc
xchg
cli
nop
faddp
mov
stos
je
sahf
je
cmc
xor
pop
fsubr
cmp
push
push
adc
rcrl
ret
or
sarb
cmp
div
pop
mov
pop
inc
adc
setbe
xchg
in
add
pop
mov
pop
mov
cmp
ror
lods
fcoms
and
and
and
arpl
mov
and
jbe
fisubs
fildll
jge
fmull
sbb
jne
insl
mov
push
mov
sbb
ror
mov
adc
test
fmulp
inc
push
dec
mov
aas
xchg
roll
jmp
jmp
lret
dec
xchg
or
sbb
ss
das
xor
cmp
mov
mov
sub
sbb
in
ficomps
mov
or
or
adc
fdivrl
mov
fmul
sbb
jns
adc
or
xlat
add
sahf
std
call
dec
jne
pop
jg
ret
repnz
mov
xor
fstpt
incl
jle
mov
add
push
jl
sub
push
adc
out
mov
mov
push
xchg
rorl
mov
inc
xor
xor
xor
mov
or
sti
jne
aam
insb
sbb
mov
dec
filds
inc
and
outsl
or
mov
je
hlt
jne
push
cld
pop
cltd
idiv
test
outsl
movb
inc
jmp
fdivr
ljmp
inc
dec
lea
cmp
jae
andb
daa
push
sbb
dec
movsl
jl
pop
fdivrp
stos
call
sub
and
out
jp
mov
fmuls
ror
loopne
mov
and
aas
popf
in
mov
mov
mov
inc
mov
sti
lock
pop
clc
call
sbb
ror
push
jns
pop
jae
mov
rep
sbb
cwtl
inc
mull
loopne
jge
push
pop
ret
and
push
cmp
sbb
and
xchg
clc
cld
mov
xchg
push
sbb
sub
int3
imul
sbb
xchg
fld
dec
dec
sbb
lock
in
inc
push
dec
call
leave
clc
push
mov
int
lret
cli
xchg
sbb
pop
aas
xor
jecxz
pop
adcb
pop
xor
adc
add
mov
cmp
repz
std
sbb
gs
mov
lods
push
jno
pop
cwtl
shlb
pop
ret
push
pop
xchg
mov
push
cmp
xor
sti
jmp
sub
xchg
aas
imul
or
lock
and
sti
sub
sti
add
adc
sti
jbe
dec
jmp
inc
jb
adc
inc
cmpl
fistps
pop
jo
push
rcrl
jge
cmp
mov
je
push
jnp
push
adc
pop
cli
test
push
jne
push
gs
xchg
mov
inc
or
xor
inc
in
fiaddl
mov
sbb
xor
push
test
push
inc
lods
pop
push
sbb
lds
std
mov
mov
sbb
or
inc
test
adc
lods
push
insl
jae
sbb
sub
cmp
mov
shrl
mov
push
dec
leave
adc
xorb
add
mov
xor
push
sbb
je
pushf
add
andl
xchg
cwtl
jecxz
popa
subl
add
cmp
repnz
mov
das
test
test
inc
xor
xchg
inc
xchg
push
fcoml
mov
insl
je
mov
cltd
inc
leave
xchg
pop
dec
ds
push
mov
rorl
and
stos
addr16
das
or
push
mov
sub
push
sbb
ret
loopne
sbb
cmp
pop
out
into
mov
mov
push
je
idivb
adc
mov
adc
fsubrl
add
je
sub
mov
sbb
in
sbb
and
mov
sbb
ljmp
sbb
and
mov
or
fidivrl
xchg
cmpsl
add
sbb
or
push
leave
mov
out
adcb
or
push
pop
les
sbb
jge
test
jle
cmp
add
xchg
aam
repnz
fnsave
or
idivl
in
push
jle
sub
mov
jmp
loopne
and
test
xchg
dec
push
je
dec
je
dec
jo
loope
add
adc
ret
push
repnz
sbb
inc
sub
add
fcmovu
iret
mov
pop
or
rol
push
sub
pop
les
push
mov
add
je
in
inc
enter
add
mov
xchg
mov
loope
pop
cld
cmp
cli
jo
dec
imul
adc
lods
neg
or
mov
je
imul
inc
or
xor
dec
jo
jg
test
sbb
cmp
inc
jmp
dec
inc
popf
mov
add
aaa
scas
clc
mov
ret
ret
pop
pop
inc
cmp
sub
in
sub
les
xor
mov
adc
pushf
out
add
mov
push
test
in
sahf
mov
popf
in
subb
push
lahf
rcrb
add
mov
mov
inc
insb
jno
dec
movsb
fldenv
lods
or
sub
stc
in
out
push
imul
stos
fnstsw
cmp
cld
push
pop
out
mov
push
notl
stc
repnz
js
cld
test
sub
adc
push
dec
mov
lea
mov
ja
retw
add
stos
repnz
scas
xchg
aam
loopne
sbb
leave
test
jbe
cmp
cmp
jb
jo
mov
cmp
jae
mov
pop
add
push
cmp
es
pop
or
adc
inc
cmp
jns
imul
push
out
fldl
pop
sbb
or
add
sbb
cmpsl
rolb
cmp
ret
out
inc
cmp
mov
or
adc
shll
and
dec
loope
add
std
jmp
jnp
jbe
push
test
jp
loopne
test
sbb
jecxz
push
fisttps
mov
pop
fdivrs
clc
add
mov
push
pop
or
lret
fidivrl
and
pop
adc
or
xor
shll
sub
in
push
inc
cmp
pop
jb
mov
mov
cmp
pusha
clc
popa
cmp
and
dec
inc
push
lahf
mov
bts
add
pop
xor
lock
xor
jge
loopne
rep
lods
addr16
ss
xor
or
iret
inc
inc
clc
or
mov
lock
hlt
jmp
push
repz
std
jns
addr16
scas
adc
out
jbe
push
rcrl
popf
mov
jne
push
cmp
mov
cli
mov
xchg
negl
test
ret
leave
push
push
imul
cld
loope
shll
arpl
pop
lods
fisubrl
dec
mov
pushf
push
or
jg
nop
iret
mov
cwtl
pop
mov
sbb
in
pop
mov
push
daa
fs
int3
cmp
dec
xchg
aam
push
loopne
ret
bswap
jne
cmpsl
lods
jmp
mov
icebp
je
inc
fsubrl
jns
push
sub
push
pop
nop
filds
inc
xchg
mov
xchg
ss
xchg
jne
ljmp
add
jmp
icebp
push
sub
xor
dec
icebp
or
stc
dec
call
stos
leave
arpl
or
std
outsb
and
and
pop
adc
fwait
or
push
mov
or
add
adc
cmp
add
push
or
movl
dec
sti
stc
dec
js
pop
jae
cmpb
xor
aaa
int
sbb
xor
inc
movb
and
mov
jmp
xor
das
jge
mov
decl
inc
inc
or
xor
jb
mov
jmp
sahf
in
or
daa
xor
dec
adc
jge
sti
sub
pop
add
pop
inc
mov
pop
jne
sbb
cmp
cmp
in
sbb
fisttpl
xchg
je
and
push
mov
push
movsb
call
cmp
adc
pop
nop
xor
sbb
jmp
les
push
mov
jmp
fisttpll
dec
fsubs
push
daa
stos
mov
xchg
test
or
fucom
rcrl
or
inc
mov
inc
add
ja
idivb
cmpsb
jmp
push
es
xchg
push
push
pop
aam
mov
sub
adc
aam
clc
lret
leave
cld
aam
push
lret
adc
xchg
out
lea
cmp
test
mov
gs
punpckhdq
sahf
test
ret
lock
pop
xchg
add
inc
insb
cli
ror
or
push
das
xchg
es
mov
je
xor
mov
push
pop
inc
mov
or
imul
mov
mov
fnstcw
insl
arpl
cmp
imul
stos
jge
adc
or
adc
movsl
nop
lea
repz
or
add
sub
dec
jo
xchg
scas
in
xchg
sbb
inc
or
adcb
lea
inc
imul
hlt
shrl
add
or
and
cmp
das
je
dec
jne
inc
push
sub
inc
insl
or
sbb
dec
inc
xchg
mov
mov
add
adc
fsubs
mov
mov
and
xchg
push
cld
cmpsl
rcrb
and
mov
out
in
sbbl
pop
sub
js
mov
outsb
cmp
ja
sbb
shl
push
push
pop
dec
repnz
pusha
insb
xor
xor
out
ljmp
or
pushf
negb
mov
xor
loop
dec
shrl
push
push
xor
clc
sub
or
mov
sub
and
dec
xchg
push
adc
dec
mov
mov
pusha
pop
fstp
adcb
push
and
add
adc
pop
jnp
jmp
push
pop
fwait
jbe
push
rcrl
pop
sbb
cmpsb
and
jmp
push
and
sahf
xor
push
jo
test
sub
adc
test
and
testb
inc
pop
cld
and
cwtl
xchg
or
xchg
pop
fnstenv
nop
sbb
notl
inc
jb
daa
pop
pusha
loopne
enter
push
mov
call
sbb
cmp
mov
jmp
inc
xor
push
inc
sbb
leave
sbb
aad
stos
stos
mov
int3
dec
test
xor
adc
lcall
mov
pop
aaa
je
sub
addr16
dec
xor
push
dec
push
movsl
inc
and
cmp
rcrl
cmp
stos
cmp
sarl
addb
add
in
inc
fmuls
insb
repnz
push
add
cld
sti
ljmp
pop
or
lea
dec
push
neg
into
jecxz
fmul
jmp
pop
pop
data16
xchg
push
jecxz
insb
and
sub
cmp
clc
fnstenv
sub
xchg
bound
jmp
outsb
cmp
cmpb
jne
adc
ds
push
inc
jns
mov
out
aad
mov
sbb
add
pop
leave
xor
sbb
sbb
add
pop
je
jmp
mov
add
jmp
add
mov
inc
and
fildl
cwtl
pop
sbb
lods
cmp
movsb
sbb
mov
jns
add
jns
insb
in
add
and
push
lods
mov
adc
cltd
jp
outsl
mov
popa
es
inc
incl
and
popf
rep
loop
sahf
arpl
imul
insb
push
xchg
xlat
fwait
mov
sub
sbb
fmuls
loopne
mov
popa
sbb
cltd
enter
mov
push
icebp
push
push
sub
inc
mov
and
mov
rorb
add
popf
and
iret
insb
enter
adc
or
fs
shlb
mov
andl
hlt
push
pop
push
call
mov
xor
mov
in
or
outsl
iret
inc
lock
nop
adc
fadd
jecxz
adc
jle
out
hlt
test
sbb
lds
scas
mov
or
mov
in
inc
popa
add
std
add
xchg
lock
cmp
add
unpckhps
dec
add
push
jmp
push
fwait
push
sub
cwtl
std
push
mov
jmp
mov
xor
div
cmp
pmaxsw
aad
lret
adc
inc
xor
bsf
mov
jne
shr
push
lds
in
xor
inc
cmpsl
xchg
add
mov
and
xchg
loopne,pn
in
push
fistps
cs
out
cmp
cmp
add
test
fwait
imul
push
cltd
push
cmp
pop
ja
aad
icebp
sbb
pop
add
rcll
cwtl
in
mulb
push
push
mov
sbb
hlt
mov
push
dec
arpl
aam
ffreep
daa
lret
xor
and
std
lret
xor
sahf
shlb
enter
leave
mov
test
movsl
pop
sub
sbb
push
enter
into
push
mov
and
or
sub
mov
pop
push
movsl
lcall
pop
cmp
daa
cwtl
gs
pop
fdivs
pop
and
test
shr
in
cmp
mov
jo
pop
cmpsb
dec
push
fwait
or
lods
inc
mov
cmpl
fmuls
jle
mov
mov
popa
xchg
pop
cmpsb
mov
sbb
jbe
das
xor
or
adcl
shll
stc
sbb
push
adc
push
fimull
sbb
sub
dec
sbb
adc
pop
xchg
xor
inc
ljmp
test
jne
inc
jmp
adc
inc
jae
push
xchg
cmp
cmpl
das
xchg
jb
in
arpl
mov
add
push
adc
xor
and
jmp
fmull
andl
xor
cwtl
pop
add
cmp
incl
into
jo
cmp
rep
std
enter
stos
movsb
dec
fwait
daa
xor
push
mov
imul
inc
xor
push
mov
mov
and
repz
nop
mov
cmp
js
sbb
xchg
push
xchg
pop
cmc
roll
pushf
subb
addl
ljmp
cmp
test
and
test
outsb
movswl
mov
push
ljmp
aaa
cmpsw
pop
loope
call
jle
cmp
jle
or
adc
test
sbbl
dec
in
jge
push
add
daa
xchg
jb
pop
add
loopne
mov
pop
andl
outsl
inc
rolb
or
and
in
int
gs
cmc
insl
sbb
xor
inc
pushf
xor
std
jge
jne
xor
in
popa
mov
and
push
push
insb
lahf
and
filds
je
or
je
add
jne
daa
push
lods
sbb
pop
push
rolb
fbstp
lea
sub
jge
mov
xchg
gs
mov
popf
clc
sub
mov
scas
push
lret
or
test
mov
hlt
hlt
enter
push
mov
xchg
movsb
hlt
jg
outsl
cld
sub
arpl
jmp
push
rclb
cwtl
add
test
adc
xchg
add
fs
jl
mov
cmp
add
xchg
rorb
sub
or
mov
in
xor
inc
imul
xor
arpl
loope
ret
mov
push
xor
call
jmp
cs
sbb
sbb
dec
enter
adc
out
nop
enter
pop
or
test
dec
or
repnz
test
cmp
xor
and
add
out
insl
mov
add
push
out
push
cmp
cltd
and
ss
nop
sub
mov
push
inc
inc
sbb
push
loope
adc
das
or
sbbb
and
je
push
ljmp
repz
popa
sbb
test
jae
daa
scas
rcr
js
neg
or
in
or
insb
cmp
adc
cld
stc
clc
xor
adc
sub
incb
inc
xchg
add
dec
inc
movsl
mov
sbb
ret
pop
jg
dec
in
pusha
daa
mov
push
push
dec
push
inc
aad
pusha
orl
cmpsb
xchg
inc
sar
out
sub
pop
clc
push
push
mov
xchg
loope
std
test
sub
pusha
xor
arpl
mov
bnd
hlt
insb
pusha
in
xor
enter
pop
sbb
or
enter
cmp
mov
mov
pop
mov
inc
dec
insb
cmp
je
sahf
cmp
cmp
xor
cs
cmp
and
sbb
mov
adc
clc
or
pop
jns
sahf
xrelease
aas
popf
fisubs
aaa
shr
adc
xor
add
xor
push
sbb
dec
sub
cmp
or
xor
jns
dec
cld
imul
in
cmp
sbb
lock
fcoms
enter
sbb
mov
enter
mov
dec
pop
loopne
push
cmp
lock
adc
in
push
jns
xchg
pop
add
movsb
scas
repnz
xchg
and
and
and
iret
leave
xchg
je
pop
or
shlb
loope
sub
and
sbb
adc
pop
data16
int
imul
mov
out
push
inc
adcb
and
in
in
adc
lock
sbb
div
pop
in
inc
dec
fs
pop
lods
pop
mov
lock
push
and
or
popf
rcrb
mov
xor
add
mov
xor
xor
sbb
pop
xorb
xor
jo
pop
jb
jb
xchg
dec
inc
sub
cmp
xor
fnsave
sub
jb
xchg
pop
mov
add
inc
dec
inc
add
fcoms
lea
dec
push
xor
adc
push
jae
cmpl
xchg
xchg
xchg
sbb
xchg
mov
xchg
fxch
enter
dec
mov
sbb
sub
jns
addr16
dec
les
inc
mov
mov
xor
sub
mov
sbb
sub
or
adc
andb
xchg
cmp
js
movsl
add
leave
enter
mov
xchg
flds
pop
xor
cmp
and
and
sbb
adc
add
pop
xchg
and
iret
cld
push
leave
enter
int3
pop
faddl
aam
or
xchg
les
je
pushf
int3
dec
dec
nop
lods
sbb
pop
dec
or
iret
xchg
push
sub
push
in
aam
and
xor
pop
dec
push
cmp
xor
les
clc
and
cwtl
ret
xor
notb
cmp
pop
add
pop
pop
stc
add
in
xchg
xchg
xchg
xchg
aam
mov
iret
rcrb
mov
int3
inc
mov
int3
movsl
pop
sbbb
sbb
cltd
inc
lea
sti
adc
adc
pop
xchg
addr16
jno
imul
jns
insb
push
js
mov
push
jb
in
pop
clc
push
xor
xchg
and
sbb
daa
lahf
dec
hlt
cld
loopnew
dec
mov
fldenv
adc
xchg
xchg
pop
movsb
mov
xchg
adc
fsubrs
and
and
pop
dec
inc
pop
cmp
mov
dec
jae
cmp
pop
cmp
xor
cld
sub
mov
lret
mov
cmpsb
in
mov
fnsetpm(287
and
xor
push
jb
js
xchg
lock
in
mov
mov
imul
push
out
test
sbb
data16
sub
pop
shrl
xor
in
data16
leave
enter
sbb
cmp
mov
mov
jo
sbb
cltd
popf
sbb
adc
sbbb
call
push
adc
pop
mov
pop
rorb
inc
sahf
js
and
mov
mov
cwtl
cmp
cltd
xchg
mov
icebp
in
cmp
insl
xchg
in
and
cmp
gs
and
pop
int3
gs
and
dec
inc
xor
xchg
sbb
push
push
cmp
call
xor
int3
test
orb
stos
loopne
loopne
test
push
inc
push
in
dec
dec
cmp
sbb
lfs
pop
pop
push
and
enter
gs
jl
in
jbe
sbb
faddl
xor
int3
les
pop
mov
jl
fbstp
or
stc
repnz
iret
pop
and
sbb
and
imul
cwtl
iret
enter
cwtl
jo
push
xor
pop
jmp
cld
push
sahf
add
cmp
sbb
adc
xor
mov
sbb
push
cmc
and
xchg
out
outsl
data16
adc
sbb
sub
pusha
dec
push
cmp
and
and
fs
mov
sbb
sub
or
das
clc
insl
cmp
and
and
jb
dec
les
pop
xor
push
sbb
xchg
or
nop
pop
inc
leave
and
inc
jb
and
sbb
jne
add
imul
lods
and
shrb
inc
cmpsb
xor
ja
dec
xchg
adc
repnz
movsl
inc
or
test
es
xchg
aam
test
push
xchg
mov
mov
in
scas
mov
js
push
add
pusha
sbb
lahf
sbb
cs
nop
mov
add
mov
xchg
stos
xchg
jne
xor
jmp
inc
outsl
add
add
cmp
jno
or
xchg
jnp
push
lds
jbe
test
jne
leave
push
std
wrmsr
inc
mov
mov
inc
cld
xchg
dec
pusha
dec
out
sub
pusha
xchg
mov
shlb
daa
mov
push
mov
jl
mov
push
fdivr
or
inc
jg
sbb
cmp
rorb
int
pop
pop
add
add
jns
rorb
jp
jmp
xchg
xchg
pop
pop
outsb
cli
push
mov
test
jle
xor
xchg
mov
cli
test
mov
mov
lock
push
in
fsubl
jmp
mov
jo
jmp
fcomps
fsubrl
sbb
mov
inc
pcmpeqw
xchg
xchg
push
in
mov
lret
mov
jl
mov
jbe
xor
jle
push
mov
push
addl
and
in
lock
mov
mov
in
insl
push
mov
clc
insl
mov
cmp
es
sub
lods
pop
rcr
movsbl
mov
lea
push
stos
mov
xor
scas
test
push
jne
mov
clc
jbe
push
aas
push
push
inc
bound
cwtl
dec
movsb
push
mov
test
mov
pop
jbe
retw
and
cmp
jo
push
enter
push
nop
enter
xchg
repnz
mov
jne
dec
cmp
dec
cld
in
xorb
push
loope
popf
mov
ja
fmull
mov
jmp
jl
rcr
bound
mov
aam
leave
out
and
movsb
fcmovnb
jne
pop
stc
jno
sbb
clc
or
cmp
jl
divl
daa
sbb
dec
and
sbb
setne
popa
mov
pop
inc
inc
loopne
cltd
push
cmp
jb
sti
out
lahf
in
das
mov
test
jno
sbb
sub
jb
push
xor
notl
test
jb
out
adc
fsubp
mov
and
push
sub
add
or
je
dec
pop
ja
push
jmp
fs
mov
push
jno
les
and
dec
add
sbbb
fs
enter
in
mov
mov
test
loopne
sub
sbb
incl
icebp
or
je
cmp
loopne
jo
je
cmpb
insb
je
andb
jle
mov
jl
xorb
adc
sbb
icebp
in
jp
xor
pop
andb
push
xchg
pusha
lahf
and
pop
sbb
or
mov
inc
cmpsb
mov
int3
shl
push
xor
xor
xor
shlb
cmp
xor
lahf
nop
loopne
rolb
out
mov
leave
aad
push
jle
mov
cmp
je
mov
decl
or
xor
enter
rolb
and
sbb
jge
decb
cmp
je
cmp
mov
jo
inc
cmp
jl
cmp
je
in
sub
inc
xchg
adc
and
or
mov
pop
ja
stos
lea
jl
push
mov
std
lcall
fidivrs
adc
xchg
pop
inc
mov
mov
dec
cmp
jle
add
jno
test
fwait
aas
imul
jg
jae
cmp
pop
jl
cmp
jg
daa
cmp
and
or
mov
adc
hlt
and
push
gs
into
pop
cmp
mov
jmp
sbbb
movsb
jns
or
mulb
pop
fistps
pop
mov
mov
add
sub
dec
jle
mov
add
cld
outsb
scas
repz
xchg
lea
cltd
adc
push
mov
pop
dec
dec
shll
dec
insb
xor
movq
scas
add
mov
nop
int
dec
rclb
out
out
add
aaa
repz
push
jmp
cmp
std
or
or
int3
icebp
out
add
lea
or
or
lret
je
and
inc
mov
pop
pop
int3
mov
js
adc
mov
pop
push
les
aaa
push
add
outsb
xor
sub
sbb
xchg
rcrl
sbb
mov
shll
or
es
jnp
shrl
jge
add
incl
mov
dec
les
pop
fcoms
cmp
mov
push
lcall
push
gs
int3
cwtl
jb
lea
dec
pushf
cwtl
adc
fwait
js
loope
in
pusha
fistl
jo
xor
mov
jae
shll
xor
pusha
mov
popa
and
add
nop
mov
lock
sbb
lods
rcll
push
dec
ret
inc
dec
punpckhdq
insl
mov
imul
in
stc
inc
push
nop
fstl
movsb
leave
and
add
xor
rcrl
pop
sbb
push
nop
loopne
je
cmp
xchg
jne
push
mov
jns
dec
repnz
cmp
or
outsl
leave
mov
jmp
push
xor
xchg
jns
daa
pusha
push
push
sub
sbb
repnz
decb
xchg
push
xchg
xor
jb
dec
xor
dec
mov
pop
out
push
test
push
scas
xor
push
jge
mov
add
jmp
inc
shlb
or
xchg
jmp
int3
adc
lock
sub
inc
mov
cmp
mov
add
es
fidivl
insb
lods
mov
cmp
or
and
push
dec
push
pop
pop
add
sub
addr16
push
xchg
in
shl
in
stc
rcrl
pusha
jp
pop
or
sub
mov
add
pop
movsb
iret
sub
sub
add
and
xor
daa
jg
test
sub
mov
imulb
mov
mov
das
shlb
sbb
jo
lea
jle
mov
sbb
sub
loop
xor
lds
push
mov
fwait
sbb
into
sbbl
cmp
sbb
xlat
jmp
call
push
jne
cmp
mov
sbb
loop
lods
movsb
stc
sbb
fidivl
xchg
lock
incl
cmp
xlat
push
insl
cmpsb
mov
or
or
adc
mov
orb
push
scas
lods
xor
je
aas
test
icebp
dec
mov
adc
push
xchg
adcl
sbb
lea
mov
lods
or
in
jecxz
lods
out
movsb
xchg
lock
adc
adc
push
jl
subl
xor
sub
inc
std
ffreep
mov
testl
push
jecxz
jecxz
movsb
loope
mov
push
outsl
and
or
dec
inc
popa
cmpsb
adc
enter
mov
jo
add
cltd
sti
add
ret
add
xchg
mov
cmp
add
add
pop
cmc
jmp
les
xor
pop
lea
and
mov
and
or
testb
sbb
insl
enter
jl
jnp
jecxz
dec
mov
jg
or
inc
jo
add
jno
shl
shl
dec
add
mov
inc
xlat
icebp
sbb
add
mov
fs
jmp
data16
push
sub
push
sbb
cmp
push
add
sbb
inc
cs
cmpl
and
mov
inc
inc
add
mov
jne
add
incl
rolb
and
cmp
xchg
repz
dec
xchg
cld
ds
or
stc
jle
or
xchg
iret
sub
nop
jmp
xor
andl
adc
pop
lea
mov
cmpsb
and
push
or
sbb
add
rorl
movsb
push
xchg
out
dec
jl
fcmovb
sti
and
daa
enter
cmp
dec
dec
je
add
adc
and
out
js
loopne
cli
andb
test
xchg
arpl
jne
adc
test
inc
es
jl
scas
orl
xchg
je
lods
sbb
or
mov
in
jge
or
push
aas
outsl
push
popa
ja
je
lea
push
push
cmp
ja
movzbl
and
rorl
repz
push
or
push
stc
stc
mov
jl
push
adc
loope
add
or
loopne
sbb
or
jo
push
shrb
push
push
inc
pop
mov
mov
test
shll
push
jbe
xchg
cld
sti
aaa
dec
outsl
mov
add
or
pop
stc
adc
jne
adc
dec
push
and
or
or
mov
fcoml
adc
cld
push
fmull
out
dec
xor
js
lds
mov
or
test
jle
cld
jle
lret
repnz
je
add
psrld
mov
test
fsubp
gs
in
or
pop
xorb
sbb
cmpb
orb
cmp
push
or
rol
push
loopne
pushl
imul
dec
sar
orb
cld
inc
add
push
mov
mov
clc
insl
bndldx
rclb
insb
add
aad
popa
cmc
andb
adc
aad
imul
jne
push
push
cld
outsl
scas
jbe
xchg
dec
cmpl
jne
push
push
and
sub
pop
mov
mov
cmp
addl
jmp
dec
cltd
xchg
cmp
dec
cmp
arpl
mov
and
inc
adc
sbbb
adc
xchg
lock
inc
pop
adc
push
mov
adc
adcl
jno
testb
or
mov
jne
orb
or
inc
pop
mov
push
pushl
fbstp
pop
pop
or
or
add
jmp
adc
inc
sbb
push
and
jg
cld
lock
mov
orl
pmuludq
and
push
movsl
addr16
call
cld
lds
pop
push
pop
mov
roll
jno
addl
dec
stos
mov
mov
inc
call
flds
test
inc
aas
add
push
push
xor
add
pop
pop
mov
or
pop
test
mov
adc
or
outsb
add
xchg
add
add
ljmp
std
pop
scas
lock
ljmp
jp
xorb
jmp
mov
fnstsw
xor
adc
inc
mov
sbbl
ja
jmp
push
inc
add
add
sbb
adc
jbe
push
pop
mov
add
in
push
inc
subl
cmp
roll
repz
mov
fisubs
or
cmp
xchg
cmc
inc
sahf
xor
lcall
ret
pop
adc
loopne
mov
pop
cmp
adcl
adc
nop
test
aad
cmpl
sub
movsl
dec
std
or
xor
inc
dec
in
leave
rolb
and
jge
inc
fcoml
bound
add
lock
fs
daa
bound
cld
mov
push
cwtl
sbb
sbb
repnz
ror
adc
insl
insb
and
cli
push
push
lret
rolb
push
bound
daa
test
push
mov
inc
loope
addl
rolb
pop
xchg
inc
fidivs
mov
bound
jo
popa
add
sub
mov
mov
and
dec
push
jns
add
mov
cmc
inc
add
dec
adc
pushf
lret
mov
addl
fstpt
adc
push
xor
dec
sbb
fs
mov
mov
adc
push
jb
sub
xorb
in
cmp
andb
sbb
sub
in
sbb
cmp
sub
pushf
cmp
dec
je
sub
fs
pusha
inc
push
jg
adc
pop
jmp
push
shl
popa
push
sub
pusha
insb
xchg
movb
pop
ret
es
adc
rclb
push
dec
stc
js
mov
std
test
cmp
inc
test
clc
rclb
mov
push
add
hlt
je
cmp
out
push
call
push
rcl
std
jno
lock
sarb
or
mov
adc
adc
push
xor
sbb
add
sar
push
sub
pop
adc
ret
jmp
cmp
mov
shrb
cld
cmpl
mov
insl
or
in
xchg
int3
scas
enter
adc
inc
jle
inc
adc
add
ja
je
cwtl
lret
outsl
sub
inc
or
je
xor
lea
add
adc
nop
or
xchg
int3
mov
test
cmpl
cld
jl
sub
dec
xor
push
imul
jle
adc
out
xchg
xchg
loopne
jo
lds
xor
lods
adc
idivl
adcl
ret
inc
dec
push
cld
or
push
test
sub
icebp
sbb
out
pop
je
or
aam
stc
jl
mov
test
test
loopne
jb
arpl
orl
push
clc
or
add
and
mov
or
mov
adc
xchg
cs
mov
push
sbb
nop
cld
ja
aas
adc
adc
and
sbb
scas
adc
adc
shlb
push
xchg
sub
jnp
push
or
mov
mov
sbb
inc
fimuls
aas
imul
push
arpl
movsb
andl
mov
mov
mov
and
add
pop
dec
mov
js
int3
and
addr16
adc
pop
dec
xchg
dec
push
sbb
lahf
insl
dec
push
in
out
or
xchg
and
lock
jbe
cmp
pop
mov
adc
mov
cmp
dec
xorb
out
mov
es
fcoms
xchg
rol
cmp
jne
lea
push
aas
data16
jecxz
mov
or
lock
cmp
fiaddl
pop
movsl
mov
sub
mov
cmp
add
push
and
ret
sub
or
inc
leave
push
xor
pop
mov
push
div
adc
inc
sbb
faddl
div
mov
and
mov
cs
pop
shrb
xchg
xchg
inc
xor
cwtl
je
rcl
push
inc
data16
jb
sub
dec
mov
ljmp
or
cmc
mov
sahf
inc
mov
insb
xchg
mov
push
jmp
cmpsb
les
adc
nop
dec
dec
sbb
mov
fstpt
movzwl
add
ljmp
and
je
jg
or
mov
aam
fildl
or
pop
sarb
test
fldt
ficompl
cwtl
adc
loopne
rol
pop
mov
ret
mov
cli
not
sub
xchg
mov
mov
add
call
xor
loopne
and
xchg
cmp
xchg
push
fstl
dec
rorb
nop
inc
add
insb
cld
xchg
dec
add
aam
into
push
push
jle
pop
pop
add
push
shrb
or
in
mov
addr16
or
pop
cmp
inc
jnp
ja
pop
hlt
je
adc
rol
jne
enter
fsub
shll
jbe
sbb
ljmp
mov
lock
mov
dec
movsl
rep
js
daa
scas
push
fcmovnb
xchg
pop
test
pusha
mov
in
lock
inc
push
cmp
movsl
mov
or
fistl
xor
or
xor
mov
or
in
lock
adc
mov
or
mov
int
push
imul
aad
mov
out
inc
mul
or
and
mov
sub
xorl
dec
enter
scas
rcr
push
popf
and
cmp
mov
clc
stos
or
dec
dec
cmp
fsubrl
or
add
in
xor
push
in
sbb
dec
xchg
scas
sbb
mov
repz
inc
in
cli
pop
shlb
sbb
and
mov
and
jle
or
call
xchg
mov
xor
je
inc
imul
and
xor
imul
sub
in
dec
mov
lock
xchg
jbe
test
pop
sub
xor
xchg
inc
add
inc
fwait
arpl
add
daa
call
lock
rcl
sub
clc
mov
imul
test
jl
xchg
movsb
fdivs
inc
mov
and
xchg
not
sbb
pop
and
cmp
adc
mov
mov
or
cs
dec
orl
mov
mov
push
and
inc
ljmp
push
mov
push
pop
push
mov
sbb
test
mov
lret
push
xchg
inc
shr
cmp
ret
iret
sbb
sbbb
sub
mov
fadds
fbstp
int
xor
push
adc
ret
push
xchg
daa
sbb
aaa
add
and
insl
add
faddl
repnz
xor
mov
stos
mov
xor
mov
or
cmp
xchg
pop
ja
mov
dec
mov
adc
mov
adc
add
insb
push
fcmovnbe
and
mov
in
mov
xchg
mov
daa
push
add
inc
push
pop
sbb
les
lock
push
incb
loope
mov
push
adc
push
inc
push
cmp
shlb
mov
popa
icebp
mov
pop
sub
and
sbb
and
outsb
je
cmp
js
xor
out
xor
out
inc
push
mov
lahf
add
mov
xchg
lea
bound
inc
push
xchg
loope
add
cmp
jb
jmp
push
mov
int3
add
sbb
inc
pop
in
sub
test
and
hlt
dec
adc
add
hlt
stos
insl
and
lea
imul
fisttpll
push
mov
push
or
arpl
or
lock
sbb
ret
aas
clc
incl
pop
lea
push
shr
inc
mov
jno
out
sar
decl
mov
add
inc
inc
dec
jne
pop
jmp
and
int3
add
incb
add
mov
and
adc
lret
rol
inc
dec
and
xadd
sarb
push
hlt
cli
cmpsl
es
adc
mov
jne
test
jge
add
mov
pushf
lcall
pop
lea
std
mov
cld
dec
and
sbb
sti
add
and
add
jns
lods
adc
shlb
push
fsubs
xchg
push
and
sbb
add
push
shrb
sub
movb
inc
sub
shrb
test
mov
in
loopne
jae
pop
aam
add
mov
pop
adc
pop
dec
sti
add
push
cs
mov
lods
push
gs
roll
jge
aaa
jb
and
enter
dec
pushf
mov
cld
or
rorb
push
sub
pop
mov
rorl
sbb
les
popa
ret
stos
test
lods
ret
test
test
and
xchg
dec
and
push
int
and
cmp
pop
scas
dec
call
push
or
mov
shll
in
jle
je
dec
fists
inc
inc
dec
xlat
outsb
and
mov
lods
push
mov
jb
add
insl
int
rcll
adc
and
cmp
and
add
jmp
adc
push
nop
and
pop
mov
call
pop
cmp
dec
mov
cmp
aaa
xor
cwtl
or
mov
outsl
xor
ret
adc
les
push
cmpl
pop
sbb
int
cmpsl
mov
jns
sahf
add
xchg
sbb
jae
mov
sub
dec
sbb
cmp
jmp
push
mov
pop
mov
mov
xchg
out
inc
les
or
jge
jge
mov
cmpsb
sub
jle
fwait
pop
imul
loopne
inc
hlt
mov
fstps
cmp
jl
sbb
and
jb
push
adc
aam
mov
rclb
cmc
jp
repz
and
mov
mov
sti
out
pushf
push
push
cmp
xor
in
sub
push
push
int3
lock
sub
in
mov
int3
adc
dec
mov
inc
fs
mov
cmp
and
mov
push
add
jmp
das
mov
fdivr
inc
push
cmp
push
ss
jecxz
sub
adc
adc
xor
mov
jnp
fadds
jne
xchg
jge
jle
loop
push
xchg
mov
aam
xchg
xor
mov
pop
dec
insl
or
aaa
jle
aam
popf
aam
ret
nop
adc
dec
bound
call
dec
jne
cmp
das
fldl
dec
imul
fdivrs
mov
les
out
out
adc
ret
push
cmpsl
and
push
and
xor
add
or
cld
orb
inc
xchg
jne
xchg
clc
sbb
stos
push
dec
clc
add
add
std
push
push
lcall
cmp
movsb
jge
nop
arpl
sub
xchg
lock
rolb
pushf
js
mov
mov
repnz
je
mov
pusha
pop
xchg
dec
rorb
push
pusha
ret
push
in
gs
mov
push
pushf
lock
dec
cmp
mov
loope
pusha
sbb
je
inc
add
sbb
loope,pt
add
movl
cmpsb
divl
icebp
pop
call
decl
pop
sti
mov
mov
shlb
test
fiadds
and
dec
add
int3
xchg
clc
xor
cmp
sbb
jge
and
ss
insl
lock
and
xchg
or
mov
insb
and
cli
cltd
pop
xchg
enter
jns
and
and
adc
or
push
push
es
mov
inc
adc
or
outsl
cltd
and
push
adc
fadd
inc
ret
pop
dec
push
push
insb
cmp
adc
or
rcrl
into
fs
add
adcl
jae
and
mulb
orl
or
clc
sub
adc
fimull
push
inc
cmp
pop
xchg
xor
sarb
in
pop
add
in
mov
add
adcb
xchg
or
jecxz
inc
jmp
and
pop
fs
and
push
inc
push
js
fwait
outsl
bound
in
add
push
icebp
or
mov
push
pop
and
jo
inc
mov
sbb
jne
dec
inc
push
fs
sub
sbbb
mov
xchg
adcl
int3
test
pop
shl
pushf
js
xchg
cld
rorb
aad
inc
call
lods
mov
sub
int
or
dec
aam
dec
and
xor
dec
shlb
adc
adc
in
fs
pusha
dec
lret
addb
add
shlb
mov
and
enter
in
pop
sub
mov
add
mov
pushf
dec
dec
pop
xchg
ja
sbb
add
addr16
cmp
jne
mov
pop
adc
outsl
je
and
popa
pushf
out
ret
mov
push
cmp
xor
inc
out
or
jecxz
sub
mov
stos
outsl
inc
pushf
pusha
or
mov
scas
adc
hlt
add
sub
adc
je
inc
or
xchg
push
or
stos
nop
sbb
div
lcall
mov
adc
aam
sub
loop
or
lock
dec
dec
jge
icebp
pushf
dec
inc
adc
xor
les
in
add
popf
sbb
jno
adc
fsubrs
sub
in
sub
jne
mov
lock
and
loopne
ss
adc
add
stc
js
mov
icebp
push
mov
push
int3
cmp
sbb
lods
mov
test
cmp
out
push
xchg
imul
loop
ds
adc
add
bound
aaa
outsb
inc
pop
and
or
mov
fsubs
stc
and
sub
dec
xor
loope
add
lods
insl
gs
xchg
cmc
add
je
movsl
push
and
mov
cmpsb
xchg
dec
inc
inc
cmp
jb
ja
in
or
adc
adc
in
xor
adc
shrb
sbb
iret
or
sub
lret
and
loopne
xor
cmp
jnp
sub
jo
xchg
addr16
mov
sub
jp
sbb
and
and
cmp
scas
pop
push
and
pop
loopne
pop
fs
fwait
das
and
mov
lcall
lea
fadd
adc
lea
divb
mov
das
adc
pusha
in
jbe
leave
sub
push
push
jae
add
push
push
loopne
cmp
or
cmpl
jg
add
mov
mov
int
add
iret
into
or
aas
cmp
je
dec
test
lods
aaa
imul
pushf
lock
adc
scas
adc
dec
lcall
and
dec
lret
sbb
xchg
roll
or
push
dec
and
xchg
test
fwait
les
loope
push
mov
les
dec
imul
inc
xchg
mov
pop
add
mov
adc
mov
cmp
fldenv
addb
jb
rorl
push
pop
pusha
adcb
lret
push
or
insb
pop
cld
lahf
aad
repnz
and
insl
out
int3
lahf
push
jge
adc
jg
sub
dec
and
mov
jecxz
jecxz
enter
mov
xchg
icebp
jl
add
dec
and
mov
and
adc
lea
clc
frstor
and
inc
test
test
cmp
jbe
into
jmp
adc
pop
cmp
or
or
adc
add
dec
clc
push
test
push
lret
jge
push
jl
push
add
mov
push
lcall
mov
gs
push
mov
ret
outsl
mov
cmp
in
dec
test
nop
sbb
lahf
ss
aaa
push
xchg
or
cltd
sub
adc
iret
js
test
jns
jb
pusha
add
or
sti
add
and
jb
push
xor
outsb
lods
push
add
jne
sbb
sahf
pusha
and
insb
or
mov
and
push
add
je
push
icebp
mov
insb
lods
dec
adc
sub
lock
lods
jmp
mov
or
loope
jne
push
cld
mov
inc
push
test
mov
fidivrs
push
shlb
xor
mov
dec
mov
cmp
xor
pop
push
aaa
mov
mov
out
or
sbb
sbb
add
notb
or
lcall
xor
add
pop
mov
pop
pop
pop
xchg
enter
fnsave
adc
push
iret
ds
dec
pop
les
add
dec
stc
xor
in
mov
and
sub
xor
or
pop
mov
mov
pop
or
lock
loope
xor
and
mov
sub
pop
movl
jle
cltd
add
cmp
and
cwtl
daa
mov
jno
adc
and
pushl
fwait
in
std
mov
dec
and
or
xchg
mov
sub
je
shrb
or
mov
jl
int3
mov
xchg
filds
push
stos
push
pop
notb
and
pusha
sub
lock
and
shrb
add
ficompl
in
xor
cld
cmp
sbb
les
pop
push
or
insb
xchg
mov
xor
pop
jg
cwtl
and
xor
push
push
xor
sub
and
cmp
xor
in
inc
jb
mov
pop
fbld
pop
jl
mov
imul
jo
pop
add
nop
iret
pop
and
inc
cmc
push
pop
lea
xchg
mov
pop
cmpb
sub
pop
add
movsbl
mov
movb
pop
jmp
add
or
popf
mov
cmp
or
scas
push
push
or
aas
dec
jge
cmpb
je
aaa
jae
repnz
dec
out
imul
inc
and
lock
and
ja
add
jns
and
dec
push
adc
nop
loopne
js
mov
cmp
clc
lds
aam
and
mov
hlt
mov
sub
jns
mov
enter
push
les
test
dec
inc
roll
push
and
or
or
cmp
das
push
pop
sub
and
fcom
add
mov
push
mov
adc
pop
jnp
xor
sbb
or
fwait
out
pop
add
idiv
lea
fld
and
mov
inc
sub
cmp
je
and
test
je
sarl
lock
fldl
push
lds
scas
out
punpckhbw
push
or
push
sub
lods
push
cmpsb
push
dec
sub
or
fwait
mov
adc
test
push
mov
mov
outsl
mov
stc
mov
sub
mov
inc
push
ret
sarl
mov
cmp
loopne
outsl
and
or
loope
fnsave
pop
jle
movb
inc
push
stos
fcoms
jl
inc
push
imull
jne
movsl
sub
and
pusha
xor
or
xor
lock
mov
pop
je
sbb
sti
push
inc
add
mov
into
cmp
je
xor
mov
or
ja
jle
out
xor
mov
mov
add
les
ret
or
cmpsb
shll
pusha
inc
mov
je
dec
test
push
adcb
inc
pop
push
loope
push
fimuls
testb
flds
mov
jl
push
and
xchg
cwtl
fidivrl
mov
fs
sbb
test
inc
adc
out
fadds
out
lods
jmp
jbe
pusha
mov
inc
std
loopne
jo
add
xorl
inc
xchg
ret
es
inc
fldenv
sub
ljmp
push
stc
mov
lods
sub
push
dec
xchg
push
fs
xchg
mov
pop
pop
pop
mov
or
pop
pop
jne
out
adc
nop
or
mov
xor
mov
sbb
dec
mov
mov
cltd
fcoms
xor
jns
nop
and
inc
or
adc
sbb
mov
adc
insl
aas
xchg
jno
out
clc
adc
xchg
push
lea
add
fistpll
std
adc
mov
sub
cld
ss
repz
lea
ss
stc
mov
pop
mov
push
mov
jne
add
jb
xorl
rorl
stos
lds
js
cld
cmp
clc
dec
sub
dec
sbb
add
sbbl
fbld
fcompl
push
inc
jno
pop
pop
jge
push
lea
test
mov
or
hlt
les
or
cld
cmpb
je
mov
pop
movsl
test
cmp
or
push
push
pop
mov
ror
std
fldcw
mov
in
movsl
fidivrs
and
jge
xor
sbb
popf
push
stc
and
leave
inc
in
dec
add
arpl
add
jo
xor
cmp
xor
add
lods
and
xor
or
inc
and
jb
jo
or
push
les
cmp
call
mov
push
sub
xchg
aaa
dec
and
push
jbe
lock
xorl
and
les
push
clc
add
mov
sub
push
mov
xchg
dec
pushf
cmpsb
jge
fmuls
test
ret
addb
stc
test
mov
inc
pop
xor
push
push
outsb
sbb
push
jle
sahf
adc
or
testl
mov
mov
jl
push
ror
jl
test
test
rorb
push
jb
jmp
dec
add
push
adc
lock
pop
xchg
clc
inc
loopne
push
adc
test
aaa
int3
sidtl
je
enter
mov
loope
pop
incb
push
bound
hlt
push
pushl
imul
inc
imul
outsb
es
outsl
pusha
movsl
xchg
out
jne
cs
aaa
es
in
mov
adc
pushl
xchg
out
add
dec
xor
inc
shl
inc
bound
sbb
mov
xchg
sub
sbb
negb
mov
test
push
loopne
sbb
in
xchg
mov
cwtl
leave
jno
mov
ret
movsb
sbb
test
insl
xchg
testb
push
dec
repnz
mov
cmpsl
mov
push
adc
fimull
dec
and
sahf
icebp
lds
popl
in
mull
pusha
add
cmpb
adc
std
cmp
push
dec
jl
or
fcmovu
jp
adc
add
xor
fdivrs
xor
mov
inc
addr16
adc
test
out
xchg
push
dec
or
mov
or
adc
data16
add
rcll
jb
call
pop
sbb
out
movsl
dec
sbb
mov
or
jb
sbb
test
inc
jl
rorl
cmp
mov
test
lds
or
out
ret
mov
jns
push
dec
jo
sub
jbe
or
xchg
enter
dec
fs
sub
test
or
repnz
enter
sub
in
sahf
dec
push
int3
inc
in
inc
cs
mov
xor
dec
xor
and
mov
or
sti
popa
sbb
push
sarb
jmp
add
clc
ret
add
enter
fcompl
or
xchg
out
rol
enter
xchg
out
push
in
out
push
in
out
push
in
out
push
in
out
push
mov
push
add
pop
inc
idivb
jns
clc
shrl
in
cs
cmp
and
fadd
in
sar
sub
sbb
stc
add
push
in
jl
jl
pop
sbb
push
nop
and
sbb
in
fimuls
in
sub
inc
inc
cs
jb
inc
cs
inc
or
enter
inc
cmp
ret
enter
xchg
xor
or
inc
push
fs
lsl
lock
mov
mov
sbb
push
cmp
das
in
rorb
in
inc
cs
add
in
inc
aam
mov
rcl
les
rorb
aas
mov
or
mov
test
xor
aad
xchg
jb
and
pop
cmp
nop
and
test
inc
es
sarl
js
fs
and
enter
push
mov
xchg
test
jl
ljmp
push
fldcw
shlb
fsubrs
or
int3
sbb
adc
call
adc
lea
dec
ret
mov
repz
and
sbb
mov
jae
xchg
adc
mov
das
fs
int3
lret
pop
enter
mov
mov
mov
idivl
pop
repnz
mov
jns
and
je
inc
inc
shrb
ss
pop
enter
jo
data16
dec
and
repnz
sub
adc
pop
enter
dec
and
sbb
les
xchg
and
cmp
jb
or
push
nop
fisttpl
sbb
xor
sub
inc
push
mov
enter
sbb
adc
sbbl
xor
or
add
cld
mov
es
pushf
push
push
jb
cmp
movsb
popf
or
fs
pop
hlt
dec
pop
enter
lock
in
or
in
jae
inc
cs
xor
sbb
cmpsl
xor
and
xor
nop
enter
pop
enter
nop
or
jns
das
mov
fs
cs
test
aam
shrl
movsb
mov
mov
leave
or
nop
lods
sub
jns
sbbl
sub
cmp
pop
in
lea
test
add
and
push
pop
or
dec
jge
mov
mov
pop
ror
dec
jg
and
out
sub
rorb
mov
mov
push
js
lret
push
mov
sub
push
add
sbb
pop
and
test
std
xchg
cld
nop
mov
sbb
lock
lock
std
loope
stc
in
mov
js
sti
push
push
rcr
or
mov
repnz
and
xchg
test
test
jne
notl
stos
bound
xor
or
add
jb
std
lock
sbb
testb
ja
movl
int3
lahf
movsl
movsl
mov
dec
enter
pop
sbb
cmp
add
and
mov
nop
adc
sbb
mov
mov
inc
mov
mov
sbb
pop
or
rcrl
or
sbb
or
add
insb
mov
push
jb
fsubrs
cmp
lds
sub
mov
movsb
cmp
pop
insb
inc
pop
and
xor
and
je
sysenter
pop
movsl
xchg
je
cld
mov
stos
scas
jo
or
test
pop
or
and
imul
arpl
hlt
mov
xor
xor
add
stos
push
vshuff32x4
inc
ficomps
pop
insb
and
rcrb
mov
adcl
xlat
mov
fisubrs
pop
int3
add
xchg
das
test
repnz
or
pushf
push
inc
cmpsb
in
enter
jg
adcb
and
bnd
or
and
or
sbb
or
sbb
test
cmp
push
xlat
xchg
adc
xchg
dec
push
je
cmp
jmp
les
pushf
and
insl
cmpl
je
loop
pop
lock
adc
pop
je
and
fiaddl
jmp
sub
mov
cmp
loope
inc
out
push
push
cmpl
cmp
and
popf
pop
dec
nop
sbb
hlt
ja
add
pop
pop
cmp
mov
in
sub
enter
sar
and
xchg
push
loop
inc
in
sahf
mov
fs
or
mov
daa
das
cld
and
test
mov
jecxz
pushf
int3
sbb
inc
push
xchg
jle
das
fs
or
in
or
and
test
jl
xor
test
enter
sbb
inc
andb
nop
inc
pusha
test
push
xchg
pop
xor
mov
push
mov
and
jb
cli
sbb
and
enter
js
jb
push
xor
sub
mov
enter
sub
in
dec
pop
dec
pop
sbb
enter
adc
push
or
dec
sbbl
cmpsl
adc
clc
mov
push
or
aas
lock
jge
xchg
jb
dec
ds
in
push
mov
in
sbb
mov
and
das
sti
adc
cmpsl
adc
enter
sub
dec
pop
orb
imul
pusha
push
mov
and
or
mov
adc
nop
push
or
xchg
inc
inc
jl
push
fimuls
test
movsl
sub
insl
js
pop
and
jo
test
or
nop
inc
cs
mov
repnz
push
mov
enter
dec
scas
inc
inc
loopne
dec
test
add
test
push
idivb
in
cmpsb
mov
and
mov
in
push
clc
mov
add
add
movsl
mov
xchg
xor
out
ficoml
popa
aad
cmp
clc
icebp
orl
jbe
push
xlat
test
xor
push
adc
sbb
mov
fadds
cmpb
xor
mov
xchg
mov
push
shll
sbb
xor
cmp
push
and
dec
mov
inc
es
add
loope
adc
jne
push
jmp
mov
adc
mov
sub
movsb
pop
or
inc
sbb
faddl
test
xor
repz
incl
push
pop
sbb
push
or
or
in
int3
push
or
arpl
add
imul
aad
jmp
adc
js
sub
sbb
sub
sub
imul
sub
addr16
hlt
push
testb
xor
sub
jl
mov
push
pop
sub
push
les
outsb
push
push
jnp
or
jmp
sti
cmp
lahf
ret
pop
fsts
jae
mov
fists
push
jo
test
daa
mov
loop
addr16
pop
push
pop
mov
xchg
hlt
mov
nop
or
das
jns
inc
jno
jmp
mov
call
cltd
popa
pop
sub
sbb
ficompl
add
push
pop
movsb
mov
or
sub
mov
sarb
mov
pushf
ret
addr16
pop
xor
movsb
xchg
push
sub
outsl
in
cmp
adc
mov
sbb
rcll
jecxz
push
mov
cmp
enter
or
test
mov
and
mov
mov
xor
movsl
push
ss
sub
scas
add
and
jno
sbb
adc
xchg
js
mov
cld
scas
aam
push
jge
jg
mov
xchg
adc
or
int3
mov
movsb
sbb
outsl
enter
subb
adc
lods
jnp
out
shll
inc
insb
jbe
sbb
call
xchg
arpl
mov
jl
mov
mov
dec
mov
mov
mov
sti
movsb
loopne
cli
sub
pushf
dec
add
cmp
xor
sub
cld
aas
mov
outsl
rorl
push
mov
mov
ret
xchg
insl
sub
push
dec
jae
enter
push
xor
adc
adc
rcrb
pop
stos
js
xor
adc
mov
fldcw
sub
cwtl
test
mov
adc
sbbb
mov
dec
pusha
mov
and
jne
pushl
adc
shll
sbb
repz
outsl
xor
cmp
fnsave
fwait
adc
lea
add
mov
or
xchg
scas
sub
notl
xorl
incl
test
jmp
imul
ficompl
mov
enter
leave
cmp
mov
ret
pop
xor
ja
mov
pop
or
out
test
je
cmpb
je
je
stc
add
inc
pusha
into
daa
js
add
mov
or
lods
xchg
je
mov
cmc
add
cpuid
adc
mov
call
cld
leave
lret
mov
and
callw
add
ret
rorb
repz
loopne
int3
aad
je
data16
mov
loopne
xor
inc
mov
dec
ja
clc
mov
pop
das
jle
xchg
movb
decl
cmp
inc
das
testl
iret
jl
mov
cwtl
ret
nop
dec
sub
in
jmp
xor
insb
mov
clc
nop
shrl
and
leave
jnp
inc
test
leave
adc
in
test
bound
inc
or
jne
push
jmp
mov
sar
mov
xorb
or
stos
lea
pop
sub
insb
mov
pop
pop
enter
scas
pop
and
mov
stc
inc
mov
aaa
nop
pop
cmp
inc
lods
inc
jb
mov
cli
mov
jae
fwait
adc
call
pusha
mov
adc
or
icebp
lock
mov
add
add
jecxz
leave
add
inc
or
pop
jae
push
mov
and
adc
imul
add
mov
pop
push
lds
push
pusha
aam
mov
in
jne
lret
and
xchg
push
add
popa
and
or
cmpsl
sub
inc
push
sahf
sub
adc
leave
test
orb
push
repz
pusha
jge
adc
push
cmp
js
insb
sbb
cmpsb
pop
sbb
push
outsl
jo
aad
pushf
sub
adc
sti
jnp
jmp
mov
and
inc
pop
nop
mov
js
mov
mov
dec
xor
mov
xor
cld
test
mov
mov
sub
push
adcb
sub
xchg
pusha
inc
sub
jnp
rclb
sahf
repnz
hlt
inc
out
and
out
in
pop
popa
or
repz
out
enter
mov
pushf
ja
or
iret
mov
push
dec
icebp
xchg
inc
cmpsb
fs
and
out
pop
jb
and
in
pop
and
cmp
mov
out
sub
and
add
movb
adc
lahf
xchg
mov
shrb
fldcw
insb
rorb
adc
adc
js
loope
fwait
jl
repnz
lret
fdivs
lods
cmp
movzbl
and
sbb
rcrl
mov
dec
pop
mov
adc
jns
mov
and
mov
jo
sbb
pop
inc
cmpsb
in
jb
repnz
mov
xchg
hlt
adc
cmp
insb
pop
ret
push
push
ja
mov
mov
or
push
shlb
movl
mov
pop
pusha
adc
inc
push
xchg
or
mov
sbb
and
inc
imull
inc
or
and
mov
outsb
dec
and
int
pop
enter
out
loop
jecxz
pop
repnz
lods
jecxz
in
cmp
in
out
xchg
dec
pop
jb
in
in
sbbb
movsb
loop
or
loop
movsb
loop
aas
xchg
or
aaa
cmp
xor
dec
popf
push
loopne
adc
imul
xor
fsubl
call
cs
push
das
jmp
dec
rcll
ljmp
jnp
adc
ljmp
fwait
jmp
frstor
or
leave
popa
das
lods
mov
inc
inc
mov
jmp
in
sahf
ret
push
fdivrl
pop
in
inc
jmp
and
inc
stc
or
iret
mov
and
pop
inc
arpl
clc
cltd
out
mov
inc
sub
mov
or
dec
lret
xchg
shll
jb
stc
sbb
hlt
and
mov
and
dec
add
add
mov
push
imul
push
pop
ficoml
pop
aam
sarb
sar
pop
loopne
lods
sbb
and
in
fsubr
jnp
push
or
jbe
bound
in
in
lock
cmpsl
mov
cmp
shrb
add
cld
adc
push
jmp
dec
xor
push
enter
mov
shrl
mov
nop
aad
fsubp
cld
in
mov
adc
std
adc
subb
mov
xor
or
fcmove
out
icebp
sbb
clc
push
sub
add
adc
imul
adc
push
rcrl
xchg
sub
movsb
ret
mov
pop
or
dec
or
outsl
test
into
dec
in
inc
push
and
add
mov
mov
lods
test
dec
pusha
ret
jecxz
repnz
mov
add
and
es
mov
test
mov
cmp
shl
jo
mov
sti
orb
mov
lds
cwtl
adc
sbb
mov
xor
fiaddl
jl
xor
loop
aad
jle
pop
mov
adc
add
fmuls
or
add
inc
mov
mov
mov
sbb
pop
mov
sbb
adc
outsl
ja
push
adc
push
cmp
adc
mov
cmp
sub
and
js
mov
or
cld
or
xchg
or
jnp
out
sbb
inc
aaa
rcr
and
sub
fisttps
push
add
orb
int
jmp
or
cmpl
aam
mov
jle
pop
test
add
add
shrl
icebp
fistps
adc
call
push
push
jmp
ret
jo
pusha
add
xchg
ret
pop
es
xor
and
adc
nop
scas
and
sarb
add
mov
sub
mov
push
ret
pop
arpl
dec
sub
jg
loopne
jmp
mov
jb
xchg
push
ret
push
mov
dec
test
inc
push
inc
or
lds
push
jmp
sbb
xchg
sbbl
sub
adc
adc
xchg
into
add
or
mov
or
or
mov
mov
idivl
mov
mov
push
imul
in
add
scas
xor
and
mov
mov
test
lds
push
mov
jecxz
adc
scas
inc
xor
push
cmp
mov
leave
adc
punpcklbw
jbe
das
dec
je
or
dec
push
test
sbb
adc
pop
xchg
ret
add
lds
test
xor
in
divl
addl
jo
fdivs
pop
dec
ds
aas
sbb
and
lods
mov
or
insl
or
xchg
inc
imul
mov
sub
lods
xchg
dec
repz
sti
jne
js
jl
in
cmpb
inc
daa
ret
je
arpl
movsl
ret
sbb
push
js
ja
fwait
inc
jns
in
cmp
lods
pusha
lods
sub
inc
mov
roll
dec
loope
and
add
push
or
je
sbb
add
pop
rorl
aaa
lcall
shll
adc
sar
lods
jno
stc
fabs
orb
adc
test
xlat
adc
or
push
and
sub
je
xor
out
xor
imul
pop
push
data16
mov
lods
adc
lods
dec
ds
and
lret
es
mov
jb
outsb
or
add
dec
lds
pop
or
dec
ret
lods
dec
or
pop
jmp
cmpsl
jbe
cmpsb
js
in
arpl
ds
mov
clc
and
testl
pop
xchg
mov
adc
iret
je
cmp
out
bound
aam
pop
call
dec
jle
dec
out
call
nop
mov
adc
rclb
dec
out
adc
and
test
mov
push
pop
push
or
les
mov
stos
add
push
jnp
xchg
test
mov
xchg
lods
xchg
push
xchg
jae
add
sub
or
stos
inc
xchg
xor
stos
mov
aam
test
jb
push
xchg
lock
ficomps
xchg
pop
test
enter
mov
loopne
pop
or
mov
cmp
pop
push
add
mov
mov
stos
lds
add
pop
je
outsl
dec
push
stos
add
test
pop
xor
xor
stos
inc
add
jb
xchg
push
int
aaa
adc
scas
push
add
in
ja
jmp
push
adc
in
mov
adc
and
xchg
sbb
sub
xchg
push
je
lock
rclb
mov
mov
pop
jp
cmpsl
lods
test
push
mov
adc
mov
xor
add
xor
lods
xchg
xchg
mov
shrb
and
inc
sub
adc
pusha
dec
sub
insl
fs
add
cwtl
xor
mov
shlb
dec
sbbb
sbb
shlb
pop
mov
iret
adc
or
mov
insb
mov
lods
mov
push
jl
pop
xchg
jb
xor
xor
add
syscall
adc
and
pop
stos
mov
scas
in
push
fisttps
stc
xor
lock
push
loope
adc
sub
push
nop
pop
sbbl
loope
test
jno
pop
xor
nop
test
jne
push
loopne
xor
ret
in
test
or
xchg
rorb
add
push
outsb
out
and
mov
in
inc
pop
arpl
push
hlt
xchg
or
push
add
pop
pushf
cmp
sti
mov
cwtl
or
mov
insb
add
mov
enter
cmp
in
mov
inc
test
in
hlt
test
and
adc
pop
mov
push
je
sub
mov
xchg
dec
mov
ljmp
or
mov
les
xor
add
test
adc
push
mov
inc
arpl
icebp
mov
and
out
cs
insb
jp,pt
out
adc
test
add
add
test
mov
movsb
repnz
cmpsl
movsb
push
cmp
sbb
adc
cmp
cmp
or
and
or
sbb
jmp
jecxz
jne
xchg
jo
repz
inc
jecxz
js
and
bound
in
pop
sahf
cmp
add
fs
xchg
sbbl
pop
shlb
imul
dec
or
insl
shlb
add
enter
sub
mov
or
mov
aam
jl
xchg
or
cmp
mov
pop
or
cmp
xor
bound
js
jl
or
ror
imul
xchg
ljmp
add
stc
push
xorl
sub
aam
pop
sbb
loopne
outsb
jmp
fmull
pusha
stc
jns
in
lds
or
push
push
mov
rorb
aaa
push
repnz
dec
cmpsb
lret
std
xorl
mov
push
insl
cmp
shrb
or
test
rorb
aaa
mov
add
or
add
jae
popa
xchg
orl
enter
mov
imul
addb
shll
xchg
mov
adc
push
into
xor
mov
popa
or
add
dec
xchg
cld
call
jo
ljmp
popf
sbb
sbb
clc
movsl
push
addr16
sub
adc
orb
stc
loopne
rcl
cmp
dec
add
nop
pop
mov
mov
cmp
mov
shlb
push
je
and
or
scas
and
cmpsl
push
push
jle
inc
sbb
outsl
add
pop
pusha
inc
xchg
mov
jg
xor
xor
call
mov
xor
sub
sub
push
push
dec
push
test
inc
testb
rorl
or
dec
and
xor
negl
cltd
adc
push
and
inc
imulb
inc
mull
leave
adc
sbb
sbb
pop
test
leave
adc
sti
popa
and
cmp
sti
test
inc
push
add
and
inc
inc
cmp
cmp
jae
movsb
mov
nop
push
jl
clc
adc
pusha
jl
leave
and
lods
mov
incb
cld
xchg
or
jae
movsb
push
cmpsb
dec
and
add
sbb
daa
sbb
inc
aaa
shlb
mov
daa
push
movsb
sbb
lea
clc
jmp
push
push
xor
jne
aad
nop
add
shrb
stc
icebp
fcmove
outsl
xchg
push
out
push
sbb
fs
insl
or
adc
sbb
aam
jecxz
aam
add
dec
mov
call
and
mov
lds
adc
sub
pop
leave
jno
pop
loop
dec
jmp
dec
inc
in
mov
cmp
das
mov
dec
push
in
loopne
or
or
cld
jmp
mov
std
adc
or
clc
inc
cmpsl
in
sarl
js
mov
mov
je
dec
addl
pop
adc
xchg
pop
sbb
xchg
lock
sbb
lahf
insb
mov
jl
push
xchg
scas
cmp
ret
xchg
cmp
and
ss
std
push
mov
adc
mov
cmp
scas
push
and
loope
lea
and
sbb
popf
adc
pop
fidivrl
adc
adc
in
mov
pop
push
mov
loop
mov
sbb
sbbb
add
je
imul
fidivrl
or
test
add
jno
mov
mov
push
ret
int3
mov
movsl
adc
jne
shrb
test
stc
test
test
add
mov
mov
inc
cltd
push
inc
movsb
push
out
sahf
sbb
mov
mov
clc
xor
xchg
xlat
and
mov
cs
push
pop
mov
add
je
push
cmpsl
sbb
xor
sbb
pop
mov
jne
add
jge
jb
fsts
scas
xchg
and
mov
xorb
jne
mov
sbb
andb
xchg
push
dec
and
add
loopne
pusha
int3
dec
mov
in
sbb
sarl
sbb
aam
add
sub
sub
cmp
sbb
bound
add
addr16
mov
rolb
jge
or
or
push
inc
adc
inc
sbb
mov
fadds
adc
or
or
and
lock
insb
sub
pop
inc
into
lock
push
cltd
xor
aam
shlb
jecxz
call
mov
rol
pop
rolb
nop
pop
ret
mov
jae
movb
frstor
icebp
psrad
add
inc
call
or
and
sub
jecxz
dec
test
in
sbb
dec
xlat
jmp
lods
pop
je
lret
add
adc
mov
push
sbb
rclb
adc
dec
fiadds
shlb
leave
inc
inc
pop
or
cmp
push
fisttpll
lock
inc
sbb
adc
sub
call
in
fucomip
ljmp
push
pusha
xor
adc
sub
jmp
xchg
popa
bound
or
dec
jb
inc
mov
lret
push
xchg
xchg
mov
ljmp
push
in
mov
mov
js
enter
int3
lea
lods
and
adc
subl
es
inc
push
mov
cvttps2pi
fs
movsb
sti
test
add
and
cld
insl
pop
xchg
pop
adc
jge
mov
mov
cmp
ret
mov
jns
inc
cmpsl
cmpb
dec
pop
movsb
sbb
sub
sub
imul
sahf
mull
mov
lock
out
inc
add
mov
shll
cmp
sbb
xor
mov
fwait
addb
outsl
xor
add
inc
divb
je
xor
dec
cmp
sbb
pop
or
push
mov
rorb
cltd
add
adcb
dec
push
lret
mov
imul
ret
jne
inc
jno
shlb
sbb
lods
imul
and
das
pop
aaa
mov
leave
adcl
pop
jg
and
and
or
lock
ja
adc
lret
hlt
std
adc
pusha
in
jne
sub
dec
lock
or
xchg
cld
jne
sbb
sub
inc
in
orb
pop
pop
cmpl
cmp
outsl
lods
in
std
bound
std
cmpsb
or
cmp
push
fsubs
movsb
jb
cld
stc
hlt
dec
fistl
cmp
out
mov
das
mov
sbb
jb
xchg
scas
sub
ret
push
or
pop
cmpsb
adc
pop
push
sub
inc
stos
sbb
adc
dec
js
and
add
sti
add
in
cmp
sub
fisttpl
lock
push
sub
mov
sub
ret
cwtl
xchg
add
dec
dec
test
out
add
jne
not
ficoms
jno
jo
push
hlt
pop
inc
inc
cs
dec
jb
and
cmp
cmpb
mov
pop
mov
push
xchg
mov
adc
add
add
cmp
push
adc
xor
jl
add
pop
push
pop
test
jnp
lock
mov
sysret
inc
idivl
aam
inc
cmp
js
call
je
jmp
push
push
mov
push
push
lahf
cmp
dec
faddl
fimull
add
pusha
dec
pop
sub
and
cmp
xor
lods
jns
imul
pop
add
aam
inc
sub
fcoml
sub
dec
loope
mov
cld
mov
add
mov
or
add
insb
test
or
or
push
test
ss
or
les
pop
sbb
sbb
faddl
dec
xlat
xor
xor
movl
loopne
sbb
enter
jbe
arpl
inc
dec
mov
call
aaa
and
scas
jmp
mov
xor
push
push
push
js
lea
xorl
in
lods
jl
dec
jl
jge
jbe
adc
or
sbbb
adc
and
inc
push
inc
jge
push
rcll
imulb
xchg
and
sub
push
mov
add
adcl
testb
test
xor
add
imul
je
test
fisttpl
and
and
out
lcall
fwait
sbb
adc
jnp
push
call
ret
add
inc
ret
add
sbb
pop
out
pop
cli
adc
and
cmp
mov
in
hlt
push
push
cld
sub
clc
leave
int
xlat
xor
inc
loopne
nop
out
fchs
mov
or
sbb
fildl
je
cmp
inc
push
xor
inc
jecxz
scas
push
add
es
cmp
sub
lock
mov
call
cwtl
jecxz
arpl
icebp
add
mov
les
push
mov
fwait
movb
lds
lahf
loopne
into
mov
shlb
pusha
leave
xor
mov
and
and
loop
and
sub
data16
cmp
mov
inc
leave
enter
mov
sti
adc
cmp
sti
pop
in
imul
in
sti
inc
lds
and
or
or
pop
add
rcr
popa
dec
inc
pusha
xchg
leave
cmp
lret
orb
js
movsb
test
pop
mov
sbb
or
push
cmp
in
lret
out
push
lret
lret
jo
pusha
push
inc
cmp
ficoml
sbb
addr16
pop
and
jge
orl
jle
cmc
adc
inc
cmp
jl
sbbb
add
lahf
es
or
mov
mov
sbb
jne
or
addl
mov
add
dec
add
inc
stos
xchg
hlt
ror
pop
test
es
xor
sbb
out
jp
cwtl
add
cmpl
dec
jmp
je
inc
repz
outsl
adc
clc
mov
sbb
jne
mov
or
mov
lock
dec
pop
jne
mov
jne
idivb
and
add
mov
sahf
in
add
fmul
inc
or
fdivp
push
loopne
pop
push
adc
pop
es
div
mov
lcall
jbe
pop
add
out
pushf
lret
push
push
cld
push
fiaddl
adc
cmp
mov
add
pop
add
jge
mov
jbe
insl
and
pop
sbb
pop
test
mov
dec
and
xorl
xchg
in
filds
add
pop
lods
jmp
mov
popa
fisttps
sbbb
sbb
add
inc
push
jecxz
jg
add
call
adc
shll
stc
pop
pop
ret
or
repnz
mov
jmp
push
and
inc
mov
int3
lea
mov
mov
hlt
push
je
leave
add
mov
mov
jno
shlb
mov
shlb
mov
mov
mov
or
loopne
sub
sbb
or
xchg
fiadds
leave
ret
sub
fwait
mov
xchg
into
push
inc
andl
cmc
stos
aam
jnp
xor
cs
and
dec
fmull
jbe
push
push
add
jle
lock
fdivr
xlat
jmp
cmp
je
and
cmp
mov
mov
adcb
lret
add
pop
push
mov
out
int
adc
push
loopne
loopne
aad
and
xchg
pop
nop
es
jmp
sub
test
fisubrl
sbb
cmp
push
jle
add
mov
push
push
mov
cwtl
ljmp
push
lahf
int
imul
out
out
cli
pop
adc
add
gs
outsl
xor
and
xor
xor
pushf
int
int3
xchg
jl
or
sbb
adc
or
xlat
lods
movsb
dec
les
dec
in
and
nop
and
adc
push
test
cmp
pop
xchg
push
adc
test
dec
aas
or
int3
sbb
int3
cmp
xor
lea
and
push
jns
jecxz
in
adc
test
add
mov
cmpsb
sub
jmp
jae
mov
shl
mov
loopne
ret
sbb
push
dec
sub
adc
out
push
adc
mov
push
push
push
pop
or
fmull
aad
cwtl
addb
decl
inc
and
jne
adc
lds
enter
and
push
or
lret
inc
movsb
mov
aas
inc
or
in
jbe
scas
ret
adc
cmp
imul
stos
xchg
lret
pop
dec
rcrb
jmp
mov
pop
loope
add
push
dec
adc
jns
iret
push
loopne
nop
and
into
loopne
loopne
sbb
loopne
xchg
add
inc
outsl
or
push
cli
enter
aaa
movsb
into
inc
jo
add
nop
pop
cmp
fs
imul
les
stc
movl
rcll
mov
rcll
cmp
sub
add
int
cmc
pop
clc
mov
xchg
leave
add
das
jo
leave
mov
pop
shld
loopne
cmp
mov
sbb
mov
mov
loopne
or
add
xor
and
loopne
cwtl
dec
rolb
cmp
nop
pop
fnsave
sbb
sarl
sub
pop
in
aad
mov
insl
pop
test
mov
cmp
aas
pop
mov
dec
sahf
ss
push
shll
mov
or
shlb
xor
jne
xor
adc
cli
push
mov
inc
decl
test
out
inc
or
cmp
mov
aas
dec
hlt
rolb
loope
mov
pop
inc
adc
push
iret
and
inc
push
imul
inc
inc
mov
jne
pop
insl
fidivs
adc
adc
or
hlt
lds
unpcklps
in
gs
and
js
push
sub
ret
je
dec
and
inc
or
iret
xchg
ss
lods
xlat
or
jmp
ret
jge
jmp
aad
jbe
test
addl
or
adc
xchg
jb
fsubrs
lret
rcrb
adc
cli
rolb
xchg
pop
iret
rcll
negl
sbb
sbb
mov
ds
ret
adc
push
aad
jge
jnp
push
sub
sar
sbb
mov
jmp
pushf
mov
inc
add
roll
add
dec
mov
mov
out
mov
pop
pop
dec
jg
xlat
js
jle
shl
js
jne
shll
xorl
push
mov
inc
pop
inc
into
add
jbe
dec
mov
mov
and
fists
jecxz
add
icebp
pop
mov
mov
test
fnsave
add
sub
orb
jp
dec
add
sbb
bound
in
mov
or
shrl
fidivl
pop
shlb
in
push
dec
cmpsl
mov
add
pop
add
shlb
jge
out
dec
hlt
mov
adc
mov
jo
mov
jnp
add
inc
add
jl
in
mov
jno
xor
jmp
std
xor
test
repz
push
push
or
je
in
inc
clc
or
test
mov
cmp
cmp
pop
sbb
jle
ja
in
adc
sbb
sub
dec
aaa
scas
call
mov
je
or
mov
loope
arpl
faddl
dec
lods
call
xor
pcmpgtb
or
inc
or
mov
mov
dec
jg
push
cmp
je
cmp
dec
cmp
push
mov
adc
fists
stc
pop
cli
dec
std
gs
cld
or
jmp
clc
bound
das
add
or
sbb
and
or
sar
mov
adc
repz
dec
xchg
and
fcoml
dec
xor
repz
sub
jne
push
test
add
inc
dec
jne,pn
mov
pop
or
or
push
lock
sahf
or
mov
daa
popl
test
cwtl
jl
mov
mov
leave
jns
sarl
fisubs
inc
rcrl
cmp
push
dec
loopne
or
into
hlt
jns
outsb
test
mov
fs
rcll
push
pop
in
lea
mov
mov
call
movhps
sub
push
fadds
mov
jl
in
inc
je
jae
je
rcr
mov
lahf
data16
and
add
or
les
imul
int3
adc
dec
cmp
repz
movsb
inc
sub
leave
out
aad
pop
and
hlt
fnsave
or
adc
push
push
sub
jecxz
pop
cmp
xchg
inc
push
xor
les
dec
push
or
sub
adc
jl
push
xchg
mov
stc
nop
repz
addr16
sbb
pop
pop
push
add
leave
jne
inc
mov
js
add
in
mov
sti
imull
notb
pop
je
shlb
inc
mov
push
mov
mov
shr
cmp
or
inc
rdpmc
call
add
into
inc
push
sbb
xchg
inc
pop
dec
xor
push
mov
rcll
jbe
mov
lock
out
xor
xchg
fwait
or
inc
cld
fsincos
xchg
cmp
jb
xlat
mov
and
push
push
jbe
mov
or
negb
jecxz
jmp
push
push
in
dec
push
mov
mov
sub
adc
popa
push
or
clc
aas
or
or
xor
mov
xor
mov
repnz
xor
cs
xor
cmp
call
ljmp
test
push
test
or
push
loopne
ror
push
imul
jns
push
push
and
xor
adc
out
sub
loopne
inc
adc
push
add
es
repz
mov
sub
cmp
sbb
adc
movsl
mov
or
aam
flds
aaa
ret
nop
sarb
push
adc
inc
mov
data16
lcall
mov
push
sub
mov
imul
push
lret
aam
xchg
or
pushl
out
adc
and
inc
rcrb
insb
imul
test
mov
clc
adc
pop
adc
push
dec
mov
inc
inc
mov
and
nop
mov
sbb
pusha
jg
stc
js
cmpb
xor
imul
pop
mov
shlb
popa
pop
test
jae
cmpl
sub
popf
lods
movb
pop
cmpsl
sub
or
repz
sub
imul
sti
mov
sbb
fwait
int3
xor
dec
popa
sbb
dec
push
ret
das
test
adc
je
dec
out
fstl
adc
xchg
roll
xor
pop
or
sub
rolb
cmp
cwtl
mov
add
pop
inc
mov
add
add
add
adc
pop
sbb
fcoml
and
add
pop
or
cmp
inc
dec
je
enter
clc
adc
lock
mov
cmp
bound
inc
movsb
fistpl
cld
cli
je
jnp
dec
adc
push
add
mov
sbb
sbb
sbb
andl
push
push
lea
push
push
push
inc
and
or
pop
push
adc
sbbl
ja
les
dec
xchg
in
mov
and
xor
push
clc
push
fnstenv
cmp
in
mov
and
inc
inc
ds
cmp
aaa
add
pop
cmpsb
mov
shll
xor
imul
test
mov
push
and
addr16
push
test
push
insl
jnp
push
xchg
or
popa
je
cld
mov
and
jne
jns
add
push
add
je
push
adc
pop
sub
cltd
push
mov
or
cmp
xchg
stc
out
or
inc
nop
popa
sbb
dec
movsl
xchg
mov
inc
xchg
ret
add
cld
inc
hlt
scas
cld
aam
pop
ljmp
adc
cld
rolb
fcompl
fidivs
mov
mov
pop
mov
pushf
imul
clc
roll
xor
dec
sbb
je
inc
ss
mov
aam
lret
jns
adc
jmp
add
addr16
jno
push
or
stos
mov
inc
dec
jno
in
mov
xchg
push
in
jns
dec
add
stc
adc
enter
shr
adc
pop
jp
jo,pn
lock
mov
cmp
sbb
enter
call
dec
shlb
add
add
jb
enter
test
enter
inc
pop
hlt
lret
movsl
out
mov
inc
sub
cld
adc
inc
loopne
loop
jb
mov
out
inc
call
pop
dec
aaa
push
inc
or
into
sub
jnp
aam
sysret
flds
inc
xchg
push
dec
lret
fcmovb
and
xchg
in
les
repnz
jmp
sub
leave
inc
int3
rol
sarb
jne
mov
pop
push
leave
or
in
int3
push
push
adc
addr16
ljmp
mov
repnz
jb
aas
clc
imul
nop
clc
cmp
jb
push
enter
nop
jg
xchg
pop
add
push
add
dec
test
mov
adc
pushf
pop
mov
inc
and
sub
jle
fucomip
jmp
mull
dec
pushf
push
inc
test
out
jnp
or
inc
inc
paddw
push
fdiv
mov
jbe
sub
push
sbb
push
leave
cld
cld
add
ret
jne
testb
cmp
ja
jae
cli
add
push
mov
pushl
mov
leave
pop
ja
jb
and
out
movups
push
and
ja
push
inc
cmp
xchg
inc
cmp
xor
imul
popf
hlt
cmp
or
pop
sub
pop
sbb
add
addb
push
xor
xor
and
lea
cmp
movsl
adc
mov
inc
xchg
fs
andb
add
inc
or
es
jo
stc
in
iret
mov
push
pop
jne
das
enter
inc
mov
jne
push
call
sub
and
pop
xchg
mov
popf
inc
clc
fdivl
hlt
add
das
cmp
daa
xchg
jno
ja,pn
ret
aam
arpl
sub
push
adc
adc
bnd
in
std
mov
cmp
adc
push
jp
dec
push
call
das
dec
pop
or
in
or
hlt
add
xor
shrb
ljmp
mov
pop
sti
aam
inc
push
imul
mov
movsb
dec
dec
ds
rclb
ss
add
xchg
adc
imul
arpl
sbbl
sbb
adc
daa
gs
cwtl
stc
icebp
pop
cmpl
in
movsb
std
repz
stos
rorl
xchg
testl
scas
lcall
aam
and
jmp
pop
lock
mov
test
xchg
sbb
sub
mov
jo
mov
mov
cwtl
mov
les
mov
jne
daa
aaa
and
iret
push
lds
adc
lcall
jmp
movsb
add
sub
outsl
pop
jmp
push
mov
mov
imul
adc
insb
hlt
add
pop
mov
sbb
mov
ss
inc
add
jp
test
std
and
sub
mov
dec
das
loopne
sahf
popa
pusha
mov
jbe
popf
and
xor
inc
cs
cmp
pop
incl
sti
push
push
les
and
rol
outsb
ss
adcl
inc
test
in
int3
sti
call
imul
xchg
pop
loope
and
fstl
cmp
and
cltd
mov
loopne
rorb
pop
jg
mov
sub
sbb
leave
mov
push
fs
and
sahf
mov
push
sbb
data16
je
lods
pop
add
add
rolb
xchg
pop
imul
loopne
lret
dec
inc
mov
cmp
xchg
pop
js
push
shll
aas
and
in
es
call
das
loopne
testl
add
in
add
pop
aas
add
adc
cmp
sub
pop
cld
mov
adc
inc
fcomip
cmc
push
imul
mov
adc
push
clc
loop
repnz
pop
mov
movsl
push
cmpsb
lea
je
cmp
pusha
call
jno
mov
clc
inc
repnz
into
aam
mov
pop
imul
sub
mov
mov
mov
pop
cmp
mov
in
adc
mov
shrb
or
xchg
xchg
mov
mov
xchg
sbb
insl
sub
enter
mov
iret
ljmp
bnd
push
mov
iret
sti
and
adcb
adc
cmpsl
add
in
xchg
xchg
cmp
inc
dec
mov
push
inc
cmpsl
mov
pusha
jo
jp
xchg
jo
dec
lock
push
push
jne
cmp
sahf
inc
xor
and
and
pushf
test
cmp
jnp
das
nop
decb
jne
add
lret
mov
dec
adc
ret
ror
xor
decl
rorb
testb
add
or
fisttps
pusha
or
mov
or
leave
ret
dec
test
jne
sbb
push
sbb
loop
mov
cmp
or
or
pusha
sub
es
or
mov
pusha
or
cmp
into
jl
popl
mov
push
fstps
or
ret
orl
or
push
push
pop
jmp
shl
dec
dec
mov
add
popa
pop
pop
movb
ret
cmp
or
lcall
cs
push
lock
lea
push
int3
xchg
daa
inc
pop
sbb
adc
test
cmp
dec
mov
in
inc
adc
or
mov
test
into
jns
and
or
xchg
xlat
movsb
push
and
push
add
lea
xchg
fwait
cmp
daa
stos
cmp
push
sbb
es
test
jnp
adc
lret
pop
dec
jae
jb
pop
sbb
insb
mov
mov
fstps
sub
sub
mov
add
loope
setnp
xchg
cmp
out
mov
jne
inc
xor
and
rorl
adc
rolb
hlt
or
sub
push
cltd
push
add
pop
mov
add
cmp
hlt
pop
inc
add
mov
mov
sub
sbb
dec
sbb
or
xchg
imul
mov
jle
stos
xchg
add
shl
pop
cmp
xchg
adc
sub
arpl
clc
sti
sbbb
push
insl
mov
and
add
loopne
push
push
mov
xchg
bound
mov
push
jle
xchg
aaa
sbb
cmpsb
aam
iret
sub
xchg
and
sub
daa
fcompl
daa
icebp
pusha
jge
out
dec
jno
xchg
jecxz
mov
and
xor
cmp
mov
jne
je
jle
or
sub
and
rorb
cmp
and
xor
cmp
or
inc
xlat
and
pusha
es
mov
fnsave
dec
cmpl
push
mov
fs
inc
loope
and
inc
mov
sub
mov
xor
dec
imul
pop
inc
fmull
jne
call
jo
push
inc
lods
mov
pop
adc
lds
pop
push
push
iret
mov
daa
jmp
push
out
add
test
inc
outsl
loopne
andb
out
or
mov
bound
or
push
and
cmp
je
fs
xchg
xchg
fildl
cwtl
add
xchg
inc
les
sub
iret
push
mov
jno
in
adc
daa
dec
fucomip
mov
cmp
scas
test
cltd
inc
inc
pop
xor
mov
outsb
inc
inc
inc
pop
ret
mov
pop
xchg
orl
and
or
add
sbb
cmpsl
sbb
xor
mov
sbb
cmp
and
dec
inc
decl
push
cmpsl
std
and
in
rcl
pop
and
and
fsub
pop
mov
cmp
mov
je
inc
notb
nop
add
aam
dec
cli
add
call
mov
cmpsb
loope
xchg
out
add
loope
loop
dec
mov
jecxz,pn
in
in
out
mov
ljmp
sub
mov
inc
lods
jl
aad
dec
cs
jb
lods
push
nop
mov
adc
jmp
push
addb
push
lret
in
or
push
aad
decb
xlat
mov
insb
test
inc
and
and
jmp
test
mov
gs
or
add
dec
mov
xor
push
add
pushf
adcb
aam
cmp
cmp
bound
mov
pop
push
inc
inc
xchg
cld
xchg
or
dec
insb
mov
js
xor
or
fisubl
xchg
cmpsl
xor
sbb
xchg
dec
ljmp
ds
movsb
stc
push
inc
mov
test
sbb
jge
fnstcw
and
add
and
mov
add
mov
imul
comiss
and
movzwl
aaa
and
cmp
xor
aam
xor
fsubr
call
pop
xor
push
mov
outsb
cmpsl
xor
mov
shll
inc
daa
inc
outsb
sub
xor
into
or
push
add
add
add
popf
stc
insb
jecxz
fmul
aam
sub
jmp
xor
mov
scas
xchg
cmp
push
sub
iret
and
shlb
test
movsb
mov
cli
push
dec
dec
aaa
inc
add
lods
adc
sub
and
and
out
push
sbb
fdivrl
dec
rclb
or
push
mov
sbb
xchg
or
cld
pop
jbe
pushl
test
lret
in
sbb
sbb
hlt
aam
test
push
jmp
lret
sbb
xchg
inc
mov
or
cmp
push
imul
movb
lea
lea
pop
xor
sbb
adc
fwait
xchg
add
lods
inc
inc
cmp
jb
mov
sub
pop
aaa
nop
inc
push
mov
or
enter
cmp
jb
sub
add
push
push
jne
cld
fsub
or
push
aas
add
mov
pop
lahf
inc
push
lea
mov
gs
inc
xchg
and
add
in
sub
mov
aaa
push
dec
filds
or
cli
fistl
push
inc
call
add
pop
and
lods
adc
das
pusha
pop
push
add
adc
jg
fcoml
fdivl
or
jle
jg
pusha
bound
test
je
cmp
je
or
je
sbb
pop
pop
dec
cmp
adc
ret
jmp
push
inc
mov
cmp
jle
adc
mov
lretw
sub
pop
dec
dec
mov
inc
mov
ja
mov
or
mov
lock
adc
fwait
mov
and
fsts
xchg
mov
add
outsl
orb
or
jge
inc
cmpb
cmp
pop
mov
mov
jge
fwait
decl
jne
cmp
in
cmp
sub
jg
jno
mov
mov
cmp
jge
cmp
je
mov
adc
cmp
jl
cmp
jg
loope
mov
xor
and
add
incl
idiv
stos
pop
xor
lock
clc
daa
leave
mov
mov
clc
mov
and
dec
push
push
sbb
cmp
push
adc
push
mov
cmp
pushf
std
push
dec
or
sub
adc
pushl
mov
mov
cmp
jne
jmp
inc
mov
leave
jecxz
adc
adc
and
adc
xor
out
pop
push
push
xchg
loope
and
cmp
pop
mov
jmp
pusha
fimull
sbbl
add
jp
jo
mov
sbbb
mov
cld
outsl
inc
and
mov
or
orl
mov
aas
xchg
test
lea
shlb
movl
adc
pop
inc
das
cmp
jne
inc
loop
jmp
jle
rolb
jge
jg
test
je
mov
dec
pop
test
je
and
add
iret
dec
jmp
sub
jmp
or
cs
add
add
test
xchg
fld
jmp
sbb
push
inc
les
mov
inc
dec
je
dec
mov
cmp
xor
jmp
sarb
add
cvtdq2ps
mov
ret
daa
push
adc
adc
nop
loopne
sarb
in
mov
cmpb
fidivrs
test
je
test
outsb
adc
inc
mov
add
add
xor
lahf
or
test
jb
mov
add
mov
add
xlat
insb
in
lock
cmp
jno
push
adc
ficompl
incl
ret
adc
push
scas
inc
imull
mov
std
adc
pop
cmp
cld
call
mov
ret
push
push
dec
mov
or
push
jmp
jmp
das
xchg
sub
gs
mov
mov
int
aaa
je
addr16
in
int3
mov
je
insb
xor
dec
ret
xchg
std
jmp
xor
or
sbb
mov
xor
push
add
or
and
shlb
and
aad
jne
pusha
jne
inc
sbb
aaa
sbb
insb
mov
mov
add
cmp
jbe
inc
jb
js
addr16
and
stc
or
sub
xchg
sbb
jl
cmp
inc
aam
or
add
das
test
outsl
imul
jl
lea
nop
push
lods
outsl
inc
or
pop
sbb
push
and
pop
icebp
mov
mov
or
leave
insb
jns
lods
adc
lret
xor
lea
dec
add
add
outsb
xchg
cmp
nop
inc
inc
inc
inc
jle
pop
cmp
out
push
in
push
jmp
aam
mov
mov
xor
shll
call
xor
shl
hlt
hlt
clc
clc
lock
lea
add
adc
ss
imul
push
and
into
nop
cmp
or
mov
repz
cld
ds
adc
lea
jl
cld
cmp
xor
and
std
cld
out
cwtl
stc
inc
addr16
rcll
leave
push
pop
stc
sub
jge
nop
enter
adc
fildl
jne
and
dec
mov
lods
mov
aas
cmp
stos
sbb
add
push
mov
adcb
mov
pop
add
mov
cmpsb
imul
insb
push
je
dec
mov
lcall
sbb
xor
rcrl
sbb
dec
shll
or
sbb
shlb
add
pop
lds
push
fsubr
jno
lds
add
pop
and
outsl
cld
mov
and
mov
inc
or
fnstcw
icebp
add
sub
clc
adc
sbb
sarl
loopne
fiadds
inc
add
in
aam
push
sbb
cmp
xor
add
rcll
clc
xorb
inc
test
xchg
mov
inc
xor
xor
jmp
lea
stos
sub
ret
and
std
cld
xor
and
push
test
inc
pop
sub
pop
push
pop
arpl
sub
or
sub
mov
enter
test
or
lret
je
rep
je
or
push
inc
dec
sarl
xor
int
cmp
mov
scas
adc
cmpsl
jae
sub
jle
jnp
jae
mov
mov
inc
add
ret
xor
nopl
pop
stc
or
mov
cmp
jne
or
cmp
and
testb
cmp
jne
sub
out
xchg
fistl
sub
rorb
in
scas
sbb
shl
inc
ret
jbe
add
add
jmp
add
lcall
rcll
mov
loope
mov
xor
push
mov
xchg
test
test
pop
xor
out
cmp
jle
movzbl
push
push
mov
sbb
or
inc
push
or
movsl
ja
inc
inc
jmp
sub
cvtps2pi
out
or
jne
push
xor
xchg
in
inc
loope
lcall
or
mov
pop
inc
pop
ss
iret
cmp
ret
jne
pop
xor
cmp
mov
mov
inc
add
rcrl
nop
xor
mov
jnp
cmp
or
fisttps
sbb
stc
rclb
xor
sbb
jmp
sbb
add
or
orl
ret
in
gs
fisttps
andb
add
dec
mov
stc
das
je
or
jne,pn
sbb
fisttpl
mov
in
jno
pop
std
xchg
shrb
ret
sub
cmp
jb
incb
data16
in
pop
and
mov
out
add
test
xchg
lcall
orl
in
jge
adc
sbb
and
addb
mov
dec
lock
push
sarl
aad
adc
sub
inc
and
mov
sbbl
lea
js
jge
mov
push
push
lret
xchg
je
mov
rclb
or
push
inc
mov
add
rolb
adc
js
or
add
nop
stc
sbb
in
mov
out
add
data16
lahf
ret
andl
fimull
push
cmp
imul
je
lret
push
fsubs
dec
jp
adc
sbbl
cwtl
cld
xor
ret
cmp
sub
scas
sub
jae
popl
adc
lods
cld
inc
pop
cmp
xchg
jmp
fdivl
sbb
dec
push
pop
add
sbb
adc
ret
fstl
adc
xchg
push
mov
test
mov
mov
adc
test
jecxz
sbb
adc
jge
push
outsl
jns
iret
adc
mov
rcrb
mov
push
test
out
jmp
cmp
cmp
es
lock
incl
stos
push
pop
mov
mov
cmc
lret
and
cli
mov
jecxz
inc
add
in
mov
fists
mov
mov
pop
push
shl
mov
out
add
fnstenv
lods
inc
jmp
fiaddl
jle
mov
push
inc
push
dec
pop
shl
dec
roll
andb
inc
fldt
ret
pop
aaa
cmp
fmull
cld
xor
leave
lea
mov
push
or
fcomps
jge
push
sbb
dec
je
mov
inc
cmp
roll
push
jne
or
push
cmpsl
shl
push
lahf
lock
clc
adc
mov
xor
jg
and
out
shl
mov
and
cmpsb
jne
and
pop
mov
clc
mul
and
jne
lock
mov
mov
cmp
cmc
mov
cmp
je
dec
pop
loopne
out
out
and
fdivrl
fnsave
aam
xchg
pop
arpl
outsb
aad
pushf
xor
std
cld
shlb
aas
xor
jg
ss
cmp
rorl
jl
pop
scas
or
inc
add
push
jmp
mov
cmp
mov
dec
add
daa
ss
or
lock
xor
js
mov
mov
imul
pop
inc
cmp
pop
arpl
adc
or
pop
ret
jne
lea
loope
scas
loopne
popa
add
loopne
and
add
mov
and
and
fucomip
mov
push
mov
push
sbb
or
inc
bound
mov
pop
shrl
mov
inc
push
inc
dec
add
imul
xchg
cmp
dec
or
leave
cltd
imul
mov
imul
or
xchg
ret
inc
inc
adc
and
test
es
mov
mov
bound
xor
jp
ss
das
shl
add
faddl
ffreep
jmp
cmp
jb
out
sub
sbb
mov
adc
pop
mov
lods
clc
pop
addl
sahf
loopne
cld
xchg
sub
repz
or
sahf
js
add
lods
rcrb
dec
addb
jge
and
test
loopne
ja
mov
push
add
pop
or
iret
jnp
inc
mov
or
lea
and
stc
lods
ja
dec
imul
ja
or
sbb
scas
int3
mov
std
dec
lcall
mov
lods
add
hlt
pop
sbb
loope
sub
cmp
cmp
push
in
sub
dec
push
cltd
test
adc
rcrb
leave
jb
lahf
pushf
and
repnz
insb
nop
lea
int
xchg
and
cmpl
push
push
leave
xchg
repz
imul
inc
adc
adc
jo
div
jbe
cmpsl
movsb
cmp
sbb
push
dec
xor
adc
pushf
nop
or
or
jae
mov
shr
mov
movsb
stos
cmpsb
lret
ret
add
movsb
add
imul
jo
insl
shrl
jae
pusha
popa
push
dec
or
jmp
cmp
inc
inc
mov
pushaw
mov
sbb
jmp
dec
sbb
and
sbb
ljmp
ret
rorl
push
jecxz
aaa
jecxz
xchg
push
inc
sqrtps
xor
enter
push
jns
in
ja
or
std
jmp
add
xor
inc
fs
sbb
out
inc
orl
push
add
test
leave
add
xor
frstor
jno
adc
dec
movsl
or
subl
scas
cli
lods
outsl
fstpl
jb
pop
mov
and
fdivs
and
fmuls
dec
pushl
stc
repz
inc
sbb
mov
or
test
or
jns
lahf
cld
add
je
mov
sti
sub
jmp
sti
add
xor
pop
clc
lret
inc
add
fdivrs
jb
mov
add
mov
movsbl
insb
or
sahf
xor
incl
dec
dec
pusha
in
loopne
dec
push
sti
jne
test
push
sbb
cmp
call
notl
adcl
inc
std
cld
push
fiadds
xor
and
push
test
icebp
pop
test
test
or
nop
push
mov
loope
je
xor
or
cmp
inc
xchg
mulb
add
loope
rcrl
mov
fisttpl
outsl
or
adc
ret
mov
stos
imul
inc
mov
adc
adc
mov
pop
rolb
fwait
rolb
les
aaa
mov
adc
mov
pop
fisubrl
jno
idiv
add
fsub
or
cmp
loopne
jmp
inc
movsb
pusha
cmc
cmpsl
or
xor
loope
mov
arpl
movsb
xchg
enter
jecxz
jmp
rcrl
es
or
jmp
rcr
or
jne
div
mov
ficompl
inc
inc
ja
negb
jb
cmp
or
cmp
add
mov
push
fists
push
mov
mov
push
mov
push
fdivl
push
sub
lcall
or
xlat
or
fisubrl
js
or
jbe
and
or
jg
jnp
neg
sbb
stc
mov
or
pop
sar
outsb
jo
inc
stos
dec
push
sbb
mov
mov
sbb
sbb
xor
xor
jle
adc
jle
mov
xor
jmp
inc
inc
lcall
fs
adc
dec
jmp
pop
pop
imul
inc
repnz
push
pop
int3
or
sbb
sar
jg
push
cmp
jne
inc
inc
dec
jmp
shll
mov
mov
sub
ficoml
adc
ror
add
rclb
loopne
pop
mov
cmpsl
test
dec
mov
dec
adc
cmc
and
sbb
push
push
sbb
cmc
mov
cli
les
lret
sbb
out
jne
or
jp
incb
int
loop
inc
lret
mov
xchg
inc
shrl
sub
shll
int
xchg
popf
test
add
sbb
mov
jl
mov
rcr
inc
cltd
dec
call
and
push
cmp
pop
jge
cmp
nop
jle
push
lea
and
lock
cmpsl
jecxz
sub
sti
jle
dec
add
add
pop
jmp
test
add
and
fmuls
push
add
cmp
xor
popa
in
jne
ret
scas
mov
push
lea
pop
push
or
sar
and
mov
movsb
lea
lea
mov
jg
sub
sar
adc
sbb
mov
push
insl
inc
add
dec
mov
xchg
push
fcomp
sbb
jne
push
xchg
pop
js
cld
xor
or
push
fnsave
sub
mov
inc
cmp
das
in
jne
mov
mov
push
and
je
js
push
or
and
fs
sbb
and
cwtl
outsl
lea
ds
lea
mov
in
ret
sbb
push
leave
add
es
je
inc
or
sub
adc
xchg
daa
push
add
jmp
pop
pop
test
or
sbb
add
sbb
xchg
ret
sub
or
cmpl
add
shrb
mov
push
int
popf
xor
sbb
jle
mov
jne
and
pop
mov
cmp
test
push
add
sub
dec
jp,pn
add
mov
inc
mov
js
inc
or
aaa
adc
std
add
lock
mov
das
sub
cmp
push
push
sub
jnp
rcll
test
pop
xchg
movsb
test
rcll
dec
jnp
push
jae
scas
movb
pusha
pop
fcoml
xchg
mov
data16
push
bound
mov
add
push
push
jns
ret
xchg
mov
or
sub
xchg
lods
cmpl
rol
push
or
incb
add
and
dec
imul
and
mov
jo
push
adc
jp
hlt
stos
xor
pop
xor
or
aas
sbbb
push
cmp
je
cmp
and
pop
pop
adc
add
adc
add
faddl
inc
jns
add
lods
rorb
rclb
add
mov
dec
repz
fdivrl
and
lret
sub
loope
fidivl
in
or
mov
push
dec
or
push
mov
or
cmpl
jae
std
fidivrl
aas
jb
repz
cmp
jbe
std
jle
or
or
scas
sbb
icebp
mov
push
sahf
xchg
js
mov
ja
and
cld
test
cmp
add
aas
scas
and
add
dec
sub
outsb
jne
adc
ds
adc
jle
lcall
or
imulb
pop
jecxz
and
xlat
sahf
ret
adc
sbb
neg
cmp
ficompl
mov
mov
pop
popl
or
xlat
clc
xchg
cmp
mov
pop
sbb
cmp
in
aam
or
inc
cmp
movsb
sti
mov
pusha
adc
fldenv
idivl
repnz
sub
mov
lods
test
jle
repz
mov
leave
cmp
inc
jge
pop
rorl
or
xorl
jne
jno
or
add
adc
sbb
scas
sub
push
test
jle
add
jmp
sbb
test
or
leave
les
inc
sbb
and
aaa
pop
mov
mov
cmovl
shr
inc
push
scas
mov
push
roll
mov
add
inc
xchg
mov
mov
sub
nop
in
push
adc
mov
mov
iret
sti
negb
or
or
lret
call
adc
add
aam
jl
push
test
pop
push
pop
pop
xor
sub
mov
loopne
mov
or
jns
push
rorb
and
push
add
jno
mov
test
mov
pop
add
mov
stos
jmp
or
bound
loopne
daa
or
cmp
rcr
rcrl
mov
cmp
adc
in
jp
in
adc
adc
pushf
lahf
push
fstps
pop
or
lds
pop
adc
xchg
cmp
push
add
data16
mov
fcmovnu
dec
or
mov
jb
mov
inc
fisttpll
test
sar
adc
and
xchg
mov
jne
inc
xor
neg
clc
mov
in
pop
jp
add
fs
outsl
jl
shrb
pop
push
mov
dec
shrl
mov
dec
add
adc
xchg
aam
add
in
in
mov
lret
sar
loope
shlb
cmc
test
enter
sarb
inc
add
in
pop
fidivrl
or
cmp
or
adcb
enter
out
xorb
and
sbb
or
jle
ret
xor
and
dec
addl
inc
cmp
nop
mov
push
push
in
sbb
lock
filds
mov
adc
push
in
jl
jl
or
pop
adc
push
push
mov
roll
test
lods
sbb
add
or
mov
xchg
jge
sbb
int3
add
mov
in
fcoml
jle
fildl
leave
cmp
add
cmp
hlt
pop
pop
rcll
sbb
mov
mov
xorb
dec
adc
dec
push
pop
and
inc
xor
jne
cli
or
xlat
in
rcll
add
push
js
fchs
dec
loope
fcmovu
clc
pop
int
lea
jmp
mov
ficomps
fs
lock
jbe
or
mov
stos
mov
or
and
dec
roll
std
jno
in
jmp
xchg
aas
ss
cmpb
jne
inc
inc
dec
adcb
loope
out
xor
shlb
cmp
scas
rorb
sti
xorl
push
xor
cld
xor
sub
clc
addr16
push
fisubl
xchg
stos
pop
and
mov
cs
enter
push
insb
and
dec
and
fldcw
bound
js
pop
cmp
loopne
dec
pusha
add
add
or
mov
push
ds
sub
jae
and
push
stos
rorl
out
jns
aam
adc
inc
inc
test
out
int3
add
es
lea
push
cmp
fstl
addb
xchg
jg
sbb
arpl
adc
test
aam
lret
add
bswap
jp
inc
hlt
rdmsr
jg
xchg
dec
call
or
enter
stc
call
rcrl
and
stos
sub
inc
add
add
aas
sbb
mov
mov
ficoml
cwtl
ror
movsl
push
fmull
sbb
sbb
mov
loopne
roll
jno
pop
fdiv
mov
test
mov
lock
das
jmp
mov
dec
and
fs
out
notb
pop
ret
dec
out
imul
mov
sub
mov
sub
les
vmptrst
movl
roll
pop
cltd
ja
add
push
aad
psubq
and
iret
pop
ror
mov
leave
adc
pop
in
imul
enter
dec
dec
cld
popf
push
cmpsb
sbb
out
sub
pop
mov
sti
mull
push
mov
mov
jmp
inc
push
pop
lock
cmp
lock
data16
in
cbtw
inc
jno
mov
jmp
push
or
gs
inc
js
sarl
jbe
mov
pop
jmp
jp
and
inc
sub
pop
cmpsb
jge
das
ja
cltd
jmp
pop
mov
jmp
inc
or
jl
dec
jmp
rdpmc
shlb
je
jg
jl
hlt
adc
add
loope
fcmovbe
mov
jmp
pop
or
jne
and
or
jge
sti
cmp
fcmovu
enter
or
jne
in
mov
jp
mov
mov
push
outsl
jo
fstpl
hlt
inc
mov
push
push
push
les
movsl
dec
sub
int
xor
inc
jo
sti
cmp
jle
add
cmp
clc
mov
jmp
mov
jle
sbb
cwtl
mov
cmpb
lods
pop
loope
add
jle
add
inc
jge
popf
hlt
es
cld
test
bound
movl
mov
sub
or
je
and
and
sub
add
lret
add
push
push
pop
subl
data16
ljmp
sub
ds
jge
inc
rol
loopne
or
jle
sbb
xchg
push
mov
push
inc
mov
insb
xor
out
sub
mov
dec
mov
xorb
movsb
and
je
ret
add
repnz
dec
mov
out
adc
fs
xchg
lea
insl
mov
cmpsb
pop
ss
aam
lea
dec
sar
and
decl
js
mov
mov
pop
imul
leave
popa
or
scas
push
sub
add
nopl
incl
pop
mov
jle
ret
sbb
jae
test
bound
mov
or
ret
dec
jno
es
push
movsbl
push
inc
inc
repz
mov
push
insl
aas
ret
dec
loop
pop
inc
syscall
addl
add
or
inc
push
cld
cmp
subl
gs
push
or
pusha
jecxz
mov
sub
js
int3
daa
or
adc
pand
movsl
enter
rcrb
mov
negl
mov
je
inc
add
pop
fmuls
and
out
cmpb
adc
or
lret
push
call
xor
icebp
ljmp
sti
add
lahf
dec
repz
mov
and
add
adc
cmp
or
gs
out
testl
pop
or
inc
je
dec
out
lret
je
dec
jne
inc
jmp
cmpb
jne
or
xor
inc
add
lods
fidivs
jnp
jne
out
cld
jle
add
daa
inc
bnd
insl
push
jg
bnd
or
jmp
jbe
sti
jmp
decb
sti
cs
roll
cmp
mov
inc
jmp
subl
aam
xor
dec
sarl
dec
mov
cli
cltd
cmp
or
xchg
add
incb
or
cmp
add
dec
ljmp
adc
xor
fists
les
sbb
in
sbb
loopne
or
mov
std
or
or
outsl
jg
insb
mov
sub
fs
add
mov
cs
xor
jle
or
loopne
push
clc
inc
rol
jbe
dec
add
ja
lock
das
in
jmp
inc
insl
and
jmp
lea
test
mov
mov
pop
divl
out
adc
cmp
lock
cmp
test
adc
mov
sbb
mov
add
cs
clc
pop
cmp
adc
adc
jg
scas
sbb
cmpsl
inc
sti
daa
adc
in
push
inc
mov
in
cmp
push
pop
inc
mov
out
mov
push
inc
fistl
or
mov
test
movb
insl
or
jp
aaa
cmp
dec
push
push
daa
and
or
push
cmpxchg8b
shll
das
loop,pt
or
gs
testb
aas
dec
adc
andb
xor
scas
mov
out
mov
dec
scas
mov
dec
out
mov
sbb
imul
add
push
add
mov
ja
mov
call
js
ret
mov
sbb
outsl
cmc
stc
aas
sahf
movsl
or
or
jecxz
xchg
cltd
cmp
ret
inc
gs
pop
cld
cmpb
popf
cmpsl
dec
addb
fdivrs
xchg
sbb
lret
imul
jae
add
sub
insl
mov
addps
xchg
mov
push
pop
mov
mov
mov
xor
inc
js
js
iret
pop
pusha
add
pushf
and
pop
cmpsl
pop
jge
jnp
mov
or
xor
call
push
lret
mov
sub
fmuls
imul
ret
filds
pop
ss
cmp
jae
mov
jmp
ret
cmp
ja
gs
js
inc
mov
mov
and
mov
add
pop
dec
jne
or
inc
dec
jne
xor
jmp
inc
imull
cmc
mov
mov
cmp
xor
test
add
inc
lret
xor
inc
mov
inc
ror
sub
mov
test
arpl
icebp
testb
push
pop
call
pop
out
stc
add
lret
test
je
pushf
jne
or
enter
leave
mov
mov
mov
pop
sub
xlat
js
mov
pop
ret
cmp
daa
ja
cmpsb
shl
xor
aam
mov
jo
push
pop
and
jns
aaa
fwait
sub
jg
sbb
jb
xor
les
shlb
xchg
jne
jmp
mov
rolb
out
add
and
icebp
lods
jp
dec
aad
sbb
sub
dec
or
fldl
push
fmull
mov
and
sbb
xlat
pop
das
xor
pop
mov
adc
fdivrs
lahf
add
add
cltd
jns
mov
test
and
sbb
rorl
inc
leave
add
inc
mov
pop
fldenv
in
jmp
fmull
outsb
js
fcmovnbe
add
and
dec
je
or
cmp
jbe
insb
shl
jmp
lea
shl
jmp
fwait
add
jnp
je
push
imul
sbbb
mov
jl
sarb
mov
add
fists
inc
mov
adc
push
xchg
into
popf
sub
outsl
mov
stos
rolb
sti
aam
outsl
js
or
dec
add
adc
repz
out
call
or
inc
jmp
sub
and
pop
in
sar
xchg
cmp
clc
adc
sub
daa
sbb
and
loopne
enter
in
movb
push
jne
xor
cmp
inc
mov
mov
test
push
testb
or
dec
test
cmp
dec
dec
das
mulb
adc
pushf
popa
xorl
add
xor
push
jle
and
out
mov
cmovg
out
out
out
pop
call
add
icebp
scas
decl
js
mov
adc
pop
adc
or
push
iret
xor
jno
hlt
lret
loopne
jmp
dec
enter
rolb
hlt
push
inc
int
bound
sbb
pop
mov
loopne
test
or
xlat
mov
inc
jmp
jmp
xor
sbb
xor
gs
fucom
rclb
cld
mov
push
in
clc
cld
cwtl
pop
rorb
pop
lea
cmp
push
xchg
xor
add
fs
pop
dec
sbb
movsl
sbb
cmp
nop
mov
or
sub
sub
loope
lods
xchg
cmp
adc
mov
mov
jb
shlb
cmp
icebp
sub
add
pop
and
and
fstps
and
call
stos
stos
mov
mov
out
loop
inc
std
imul
mov
test
or
out
das
mov
inc
stc
cmp
ja
jle
jg
inc
jmp
movsl
xchg
lea
out
and
inc
out
stos
lea
je
mov
cmpsl
clc
rclb
and
ja
insl
incl
push
cld
mov
mov
jbe
add
cmc
inc
inc
xlat
adc
sbb
jb
ljmp
inc
push
mov
outsl
push
xchg
pop
lea
push
movsl
movsl
pop
mov
inc
test
push
xchg
pop
add
inc
or
sbb
push
pop
ret
jae
test
aas
sbb
add
ffree
mov
pusha
cmp
arpl
xor
cwtl
and
sub
sub
jl
bound
aad
sub
jne
mov
cmp
xchg
sub
loopne
call
scas
or
je
mov
sub
adc
or
shll
cmp
fstps
shrb
das
mov
mov
add
xchg
dec
adc
ds
add
pushf
inc
jnp
mov
jge
orb
and
mov
aas
and
sbb
push
jg
inc
testb
add
rep
rep
inc
inc
and
movsb
scas
mov
test
insl
jo
iret
jmp
mov
inc
std
xchg
cmp
imul
aam
pop
dec
ja
mov
jg
mov
test
cmc
adc
mov
add
jmp
xor
push
mov
jecxz
mov
adc
dec
sub
movl
push
xchg
enter
sti
add
mov
jb
mov
ja
popf
cmp
and
loopne
xchg
mov
add
push
push
inc
pop
pop
push
and
stc
jo
mov
mov
xlat
push
xor
mov
cmpsl
arpl
movsl
cmp
out
mov
dec
in
testb
sti
pop
je
inc
inc
xor
sub
adc
and
xchg
bts
jmp
andb
ds
inc
dec
mov
pop
jno
std
popa
lea
shrl
add
mov
rolb
cmpl
cli
sub
or
sbb
push
clc
inc
sbb
sub
or
sub
sarb
cmpl
add
aad
add
xchg
mov
aam
nop
adc
push
inc
push
cmp
rolb
xchg
cli
loopw
inc
cmp
popa
jl
inc
pop
pop
adcl
sub
add
out
sbb
push
jge
bound
and
dec
sbb
xor
adc
fstps
and
or
mov
test
std
adc
cli
lods
ds
dec
je
inc
mov
mov
icebp
cmp
jne
sbb
pop
loop
popf
ja
push
pop
xchg
ds
jbe
int
push
aaa
jmp
aas
xchg
lcall
push
pop
lcall
jecxz
sbb
push
fs
xor
pushf
mov
bound
or
jo
out
pusha
jmp
and
ds
cmpsl
in
insl
jo
mov
ret
push
pop
pop
dec
mov
sahf
stc
sbb
xchg
add
xor
or
ja
mov
or
add
addb
cmp
or
mov
clc
xor
ret
or
cli
add
fadd
pusha
jb
fwait
icebp
call
sub
adc
inc
cmc
lcall
cld
sub
shr
mov
imul
push
dec
shrb
adc
dec
ljmp
lea
mov
push
sbb
mov
mov
jne
sar
sahf
incl
cmp
jbe
push
pop
mov
cmp
dec
pop
and
jmp
shr
lea
not
and
decb
jne
gs
pop
add
fchs
inc
mov
pushf
mov
pop
add
cld
push
push
or
hlt
mov
push
or
mov
mov
and
push
daa
cs
and
stc
sub
inc
fsubr
mov
and
sti
add
dec
ja
or
dec
pop
cmp
jbe
sub
in
mov
xchg
and
cmp
je
orb
jnp
inc
cmp
mov
jg
jl
and
add
lea
out
cwtl
gs
push
jb
inc
jbe
xchg
xor
mov
add
addl
or
popf
add
adc
cmp
mov
pop
roll
daa
pop
bound
lret
push
pop
outsl
or
sbb
pop
pusha
mov
mov
rcl
pop
push
jae
dec
jo
pop
sbb
inc
mov
or
jmp
dec
adc
dec
pushf
loopne
jbe
push
mov
or
je
pop
and
xor
fmuls
ljmp
fsubrp
aaa
pop
mov
mov
add
movsl
sti
and
push
call
aas
pop
divb
push
or
dec
bound
inc
std
in
decb
adc
inc
pushaw
add
insl
jp
pushf
and
ss
and
and
adc
pop
mov
out
inc
mov
push
das
loope
mov
aas
decl
push
lea
loope
out
jl
lret
or
jbe
xor
xchg
insl
or
sub
cmp
in
adc
popa
lret
cmp
jg
pop
dec
aaa
mov
inc
sar
dec
cmp
lock
sarb
adc
lret
add
shr
sbb
inc
jmp
fs
dec
mov
sbb
and
decb
iret
or
ret
adc
es
mov
jb
push
jne
mov
cmp
dec
adc
insl
jmp
xor
dec
jae
cmpl
fistpl
in
es
inc
cwtl
out
inc
pushf
add
adc
push
or
jge
mov
mov
mov
push
cmp
pop
test
rcrl
sub
and
or
nop
les
inc
adc
mov
and
pop
idiv
fxch
dec
inc
or
hlt
outsl
xchg
test
cmp
mov
je
xchg
das
xor
rcll
int
std
fisttps
push
enter
jl
shl
inc
jmp
mov
stc
xchg
pop
pop
rorl
sub
pop
mov
add
cmp
jle
sub
push
int3
pop
pop
or
shl
inc
dec
popa
mov
sub
adc
fldl
iret
shrb
nop
movsb
test
pop
mov
decb
jne
bnd
and
jmp
dec
nop
push
sub
or
push
int3
or
fbld
add
in
outsb
clc
mov
ljmp
xlat
enter
jle
mov
add
mov
or
cmp
int
jg
decb
jge
subl
add
into
shr
or
adc
push
or
das
push
or
inc
push
jnp
bound
sub
or
inc
nop
dec
ja
sahf
mov
mov
fimuls
rcll
inc
add
imull
mov
inc
lea
jne,pt
cmp
fdivs
xchg
cmp
cmpsb
dec
fbstp
and
adc
or
xor
popa
cli
mov
cmp
add
and
push
adc
cmc
or
les
add
lea
addr16
dec
push
sub
mov
ret
mov
subl
push
repz
sbb
stc
dec
inc
mov
and
xor
or
test
cltd
cltd
push
inc
loopne
and
push
mov
inc
xor
test
and
rcl
rolb
icebp
xor
in
inc
or
add
cmp
or
out
jns
pop
push
ret
adc
cmpsl
iret
popf
lods
lea
ja
lea
lret
out
dec
in
mov
adc
xor
movl
cmp
add
sub
sub
pop
lock
clc
jge
and
clc
je
dec
mov
dec
or
rcll
inc
fs
inc
test
cli
icebp
inc
inc
mov
pop
test
hlt
mov
jne
or
mov
xor
not
and
ret
imul
sub
xlat
lea
sub
dec
push
stos
mov
or
movsb
cmp
mov
insl
lea
ret
add
dec
addl
popl
xor
loope
sbb
popf
pop
add
push
test
or
pop
cmpsl
clc
lea
adcb
das
inc
jnp
push
or
nop
dec
or
adc
jg
cmpsl
lahf
mov
sub
add
or
stos
loopne
ficomps
incl
mov
das
incl
pop
dec
hlt
lea
adcl
pop
dec
pop
ja
xchg
gs
pop
pop
pop
pop
add
inc
out
xchg
adc
add
and
inc
xchg
iret
lret
jno
and
and
inc
dec
test
or
sub
in
xor
push
cmpsb
push
cmp
or
xchg
test
inc
and
or
and
jge
jp
or
mov
dec
insl
pop
xor
addr16
cmp
xor
inc
test
inc
in
inc
movsl
dec
lahf
mov
jb
xlat
into
je
repz
or
dec
and
dec
push
in
xchg
in
adc
bnd
mov
or
aas
in
loope
nop
fmuls
jmp
jnp
adc
ret
mov
dec
add
pop
xor
xor
cmovnp
push
add
ret
or
into
bswap
ret
xor
jns
lds
mov
dec
pop
sbbb
aam
lcall
mov
inc
cmp
test
lods
push
push
addb
fidivs
inc
push
aad
jmp
notl
fdivl
push
dec
outsl
imul
xor
mov
loope
lock
jecxz
lds
mov
push
jmp
mov
mov
mov
aaa
xor
xor
adc
scas
lea
adc
fbld
icebp
mov
setge
dec
and
dec
inc
mov
addl
cmp
bound
out
clc
cli
pop
adc
ret
cmp
jae
orb
xorb
add
sbb
andb
daa
jnp
inc
pop
fwait
add
dec
cmp
sub
push
pop
fildl
popa
cmp
or
cmp
andb
and
mov
mov
mov
mov
and
jnp
or
jle
pop
mov
mov
aas
lods
aas
lock
push
jb
cmp
cwtl
popa
mov
pop
inc
lods
inc
mov
cmp
arpl
or
add
leave
repz
jmp
sub
test
jge
inc
clc
mov
jbe
je
cmpl
xchg
and
or
mov
cli
out
punpcklwd
fcmovb
mov
or
insb
pop
mov
add
ljmp
add
jecxz
and
cmp
je
jmp
test
jne
lods
mov
push
and
and
push
ret
mov
sbb
notl
sub
sbb
mov
lods
test
dec
lods
inc
sub
mov
or
enter
loope
jnp
add
andb
cmp
inc
add
loopne
les
je
mov
iret
push
mov
mov
adcb
push
imul
rcrl
mov
addr16
sbb
out
or
ret
sbb
ljmp
mov
sub
jl
cmp
jbe
push
dec
movsl
cmpsl
fsub
push
xor
movl
or
daa
dec
jle
test
or
sbb
adc
cld
popf
or
xorl
pop
cmp
mov
cmp
bound
xor
sbb
pop
test
sub
jge
inc
jg
push
or
push
pop
adc
mov
call
mov
xchg
out
loopne
pop
push
mov
cmp
lds
jge
aam
sbb
adc
movsl
add
add
lods
push
jo
jne
lods
faddp
aad
dec
xor
lret
jle
mov
sbb
push
sbb
mov
xor
adc
inc
cmp
push
es
shll
ja
ret
shrl
jae
cmp
add
adc
shlb
inc
or
jg
add
sub
sub
inc
popl
jle
push
rolb
push
sbb
cmp
jbe
jmp
jmp
shll
inc
shrl
push
sbb
test
imul
cmp
ja
popa
in
scas
and
call
jae
adc
lea
sar
sub
cmpsb
push
inc
outsb
jmp
add
cmpsb
das
lea
decb
es
jae
mov
test
jne
jbe
add
idivl
sbbb
add
inc
jmp
mov
lock
or
mov
sbbb
clc
int
fwait
add
jno
divl
inc
loopne
cmc
cmc
push
jecxz
jbe
je
lahf
mov
inc
inc
lea
pop
jo
packsswb
sub
test
jno
jg
mov
jmp
ret
sub
jb
fimuls
adcb
jmp
leave
add
jmp
outsl
push
icebp
and
ret
mov
loope
test
or
psrlw
sbb
or
inc
inc
adc
test
add
cmp
mov
clc
or
lea
jbe
lock
or
adc
enter
setg
jmp
jae
movsl
add
subl
mov
arpl
and
idiv
fldl
inc
imul
daa
push
lock
ret
mov
cmp
lret
inc
cmpb
pop
lcall
inc
add
ljmp
mov
xchg
or
stos
shlb
add
xchg
fucomi
icebp
add
cmp
jae
jns
icebp
rorb
sbb
mov
jmp
xor
je
iret
pop
jge
pop
sbb
inc
push
push
mov
fsts
aas
pop
cmp
sbb
xchg
adc
stos
jo
or
dec
xchg
cmp
lea
clc
mov
je
push
mov
adc
sbb
and
xchg
mov
or
pop
sbb
inc
loopne
and
idiv
pop
dec
daa
rorl
push
adc
cmpsl
dec
or
or
xor
or
or
xor
pop
stos
ret
negl
roll
xchg
enter
iret
aaa
test
mov
cmp
xor
or
frstor
push
push
mov
lret
pop
sbb
in
push
mov
jmp
add
mov
add
dec
sbb
stos
add
cmp
mov
xor
cmp
add
inc
push
xor
add
jge
ret
movmskps
test
sbb
jg
ficoms
pop
inc
add
xor
inc
sub
mov
cltd
jl
jno
add
xor
xchg
outsl
or
jno
sub
pop
data16
pop
push
arpl
mov
testl
les
pushf
push
iret
sbb
push
and
rolb
adc
mov
ret
icebp
xchg
jle
xor
push
cmp
mov
cmp
cmp
jmp
mov
and
out
jle
sbbb
jno
jle
lock
jmp
loopne
inc
xchg
inc
jbe
or
dec
addb
into
jno
xor
and
mov
or
pop
insb
pop
xchg
test
jge
clc
inc
and
jb
cmp
xchg
cmp
adc
cmp
lea
into
add
or
add
inc
add
ret
aas
cmp
scas
xor
lret
clc
push
jg
sub
sub
je
or
je
push
scas
dec
xchg
jo
loopne
lods
mov
cltd
std
xor
fldl
sub
adc
mov
adc
cwtl
pop
jne
das
mov
clc
sub
xlat
into
sbbb
mov
or
mov
xchg
lret
bound
ud2
shl
dec
fs
inc
daa
jnp
add
int
cmp
lock
push
mov
or
pop
into
in
sub
add
pop
addl
movsb
cmp
es
out
jg
fwait
les
lret
or
cmp
jns
sti
lds
lret
pop
add
sbb
or
les
jg
mov
mov
stos
aad
jle
mov
sti
mov
cmp
je
testb
inc
add
aas
mov
jmp
mov
jmp
mov
push
shl
mov
or
pop
sbbb
pop
cmp
je
in
cmp
fiadds
out
mov
add
sbb
mov
pop
bound
fnsave
shrb
pop
lds
movb
add
out
mov
add
mov
das
push
mov
push
stc
sahf
sarb
lds
iret
gs
adc
or
bound
xchg
inc
add
add
shlb
test
xchg
jecxz
or
jo
or
cmp
shlb
cmp
push
pop
sbb
shlb
mov
scas
sub
fwait
xor
shlb
loopne
das
cltd
leave
add
add
xor
mov
push
cmp
cli
incl
or
jmp
and
mov
push
dec
popa
fcoml
leave
inc
clc
adc
xchg
fwait
mov
cmp
adc
or
call
pusha
lods
out
dec
pop
add
fnstenv
inc
pop
xchg
push
push
insb
jg
push
pop
movb
inc
mov
jae
pop
sar
push
test
fadds
mov
mov
xrelease
call
mov
incl
inc
xor
jne
cmpb
add
sbb
xchg
or
cmp
out
jle
jb
inc
xchg
adc
test
mov
push
sub
subb
test
sbb
lea
or
add
push
adc
nop
sbb
out
mov
push
cmp
popf
les
test
and
push
pop
adc
dec
jmp
fimuls
or
inc
sub
and
add
dec
or
sub
and
inc
lods
or
pop
adc
movb
andl
lea
push
sub
cmp
or
repz
pop
and
inc
in
fimuls
jp
out
jl
leave
inc
fldl
push
inc
jb
jno
add
loopne
rorl
cld
filds
inc
mov
aad
ja
fiadds
lock
mov
imul
leave
or
imul
or
loopne
inc
adc
cmp
mov
int
push
ds
inc
scas
sbb
jmp
aas
lock
and
adc
inc
dec
cli
cmpsb
rorb
subl
pop
fldl
decl
fisttpll
dec
add
mul
sbb
push
xor
loopne
jbe
cmp
mov
push
dec
sahf
test
mov
xlat
ds
pop
test
pusha
cmp
add
mov
sbb
sub
mov
push
inc
mov
test
mov
mov
adc
add
jnp
mov
or
repz
mov
cmp
cmp
je
mov
add
hlt
and
sub
or
lea
stc
inc
in
sbb
adc
aas
mov
je
cmp
jne
dec
mov
inc
scas
mov
in
in
adc
aad
jb
push
dec
and
or
xor
mov
aam
and
test
cmp
cmpsl
mov
daa
inc
mov
mov
fisttpl
lahf
rcll
sub
sbb
int
push
or
gs
adc
mov
fcomps
xor
inc
xor
out
pusha
shlb
rolb
lret
int3
sahf
xlat
cmpsb
das
xor
adcl
adc
push
test
xchg
adc
outsl
push
sub
enter
syscall
jmp
enter
ret
and
sbb
cmp
pop
add
jns
xadd
fdivp
sub
adc
icebp
cltd
pop
idiv
jnp
cltd
or
shlb
xor
push
jp
stos
or
inc
sub
cmp
mov
sbb
inc
push
lods
sbb
pop
and
xor
orl
imul
inc
add
ret
adc
push
jne
movb
decl
jg
ss
stc
push
mov
adc
pushl
pop
inc
jmp
add
cmp
or
pop
mov
std
and
jge
pop
je
neg
jmp
pop
cmp
jl
cmc
in
sbb
xor
mov
push
ret
mov
clc
fs
mov
scas
push
dec
es
push
push
aad
icebp
push
iret
sahf
in
arpl
xchg
push
cmp
pushf
rol
add
mov
aas
mov
sub
jge
xchg
or
pop
mov
lods
stc
and
push
sub
mov
repz
cmpsb
adc
rcrb
mov
movb
xchg
mov
andb
push
dec
or
xchg
jbe
dec
mov
inc
pop
int
imul
mov
sub
jne
out
pop
dec
loop
mov
insb
jne
sub
repz
inc
iret
in
push
cltd
or
dec
cltd
add
outsl
jge
notl
dec
inc
pop
pop
aas
jmp
shrb
enter
je
and
mov
xor
xchg
cmp
jb
push
dec
mov
sbb
imul
ret
cmp
lret
fwait
fwait
dec
or
mov
cld
jge
dec
or
scas
sub
arpl
pop
xchg
adc
sub
cmpl
scas
adc
bswap
jne
pusha
pop
dec
add
lcall
scas
sbb
or
popa
jmp
mov
mov
pop
ret
jle
ds
orw
loop
stos
add
scas
daa
and
push
and
addr16
add
or
data16
sbb
push
and
xor
imul
inc
cs
dec
in
test
sbb
xchg
stos
sub
pop
incb
notb
pusha
jne
cmp
mov
inc
push
cmp
push
dec
loope
inc
mov
push
and
out
mov
add
push
pop
jmp
adc
jnp
pop
inc
loope
out
adc
cmp
lods
mov
mov
push
and
lret
rorl
mov
jns
out
andl
aad
sbb
int3
in
adc
ss
sub
and
clc
mov
mov
adc
adc
loopne
and
push
fcompl
fisubrl
inc
scas
call
pop
mov
dec
adc
jg
ljmp
or
fidivs
sbb
mov
stos
jg
popf
shrb
mov
fimuls
lea
arpl
or
jbe
fmull
pop
adcb
cli
fbstp
aam
mov
enter
pushf
push
addr16
or
mov
dec
loopne
lock
push
and
and
or
jecxz
pop
fnstsw
mov
dec
add
xor
dec
sbb
sbb
inc
sub
cmp
repz
jl
cli
jp
cmpsb
adc
lods
fcmovne
cmp
or
add
xor
sbb
jne
and
out
inc
cld
sub
cmc
and
xor
lcall
push
cmp
lods
test
or
enter
testb
add
jmp
and
push
and
sub
jb
or
xchg
sbb
fwait
pop
jle
lods
inc
and
fidivs
jns
xchg
ja
test
jo
mov
sbb
mov
das
loopne
add
pop
mov
and
or
inc
hlt
sub
iret
nop
fsubrs
fdecstp
ret
clc
outsl
popf
mov
sar
jecxz
mov
pop
ds
xchg
mov
sarl
shlb
cmpb
jne
xchg
jle
inc
daa
inc
jmp
popa
xorb
add
loopne
mov
cmpsb
cmp
fsubrl
cmpsl
and
cmc
cmpsb
jle
jae
xor
push
ret
sub
add
push
les
and
push
nop
dec
push
add
jg
inc
arpl
int
push
sbb
or
adc
lds
xor
cld
arpl
or
ja
lds
je
inc
sbb
int
cmpb
and
add
xor
out
adc
add
or
adc
cmpb
icebp
pusha
or
add
push
add
dec
sub
out
ljmp
or
lods
add
push
cmp
jge
lea
sub
or
imull
inc
or
jne
mov
mov
mov
fsubp
out
nop
sbb
and
sbbl
xchg
add
xor
test
cmp
and
and
popl
fucomp
leave
or
pop
mov
mov
xor
push
and
rol
xchg
adcl
int
cmpl
fnstenv
fistl
je
xor
sbb
shl
cmp
jne
lea
pop
ret
testl
je
push
xor
xlat
xor
jp
xchg
fwait
and
and
repz
rclb
push
sti
flds
mov
ds
or
jbe
inc
ret
push
ja
imul
flds
mov
pusha
les
mov
lret
lock
xchg
ret
je
cmp
je
inc
and
jle
add
jmp
lea
and
and
add
rclb
dec
xchg
std
xchg
je
xor
push
sub
call
xchg
and
mov
and
push
pop
push
or
lret
cmp
pop
add
outsl
jne
pop
decl
scas
or
sub
pop
mov
and
mov
test
push
push
push
pop
xor
xchg
mov
arpl
loopne
sarl
test
jb
or
arpl
push
push
imul
mov
cmp
or
cltd
aas
jl
mov
out
adc
adc
jp
dec
push
or
jmp
mov
inc
cmp
sub
and
negb
clc
jnp
addl
adc
cmpsl
push
jbe
aad
into
sbb
cmp
cmpb
inc
cmp
call
testb
imul
je
or
or
popa
loopne
addr16
xchg
pushw
lret
insl
dec
fs
sbb
mov
das
enter
sarb
subl
or
loope
sti
inc
push
sbb
add
and
pop
jmp
ret
cmp
sbb
sbb
xchg
in
loopne
decb
shr
mov
dec
sub
inc
adc
push
pop
inc
xor
or
arpl
pushf
sbb
push
dec
dec
into
stc
mov
ficompl
aas
je
jbe
cs
sbb
xor
lds
aas
aaa
paddusw
sbb
addl
js,pn
xchg
popa
pop
sbb
mov
andl
and
sub
mov
jle
mov
lret
lods
sbb
fsubl
xorl
jb
xchg
jno
sub
cmpsb
pop
add
daa
mull
xchg
xor
adc
sahf
popl
ret
pushf
outsb
cmp
out
cmc
in
sbb
jns
stc
or
inc
out
sub
clc
sbb
mov
mov
pop
rcrl
call
sub
and
push
xor
inc
sub
jae
inc
dec
into
push
push
cmp
icebp
ret
jmp
insb
adc
shrl
adc
arpl
mov
ljmp
sti
or
sub
inc
aad
or
imul
ret
inc
pusha
pop
jg
jnp
inc
fldl
movb
adcb
push
in
inc
scas
xchg
cmpsb
ret
fadds
clc
inc
adc
test
dec
and
xorl
fildl
mov
add
pop
jecxz
dec
ret
jnp
jl
adc
lods
mov
xor
sbbb
xchg
lea
mov
push
xchg
mov
cwtl
pop
imul
pop
lea
andb
inc
ret
mov
scas
sar
mov
xchg
jl
sub
adc
lds
add
mov
movsl
mov
dec
ljmp
int3
or
xchg
iret
cmc
in
inc
pop
int
or
add
inc
js
icebp
xor
pop
lock
lea
jne
test
add
add
or
imul
fiaddl
jle
ret
dec
adc
mov
imul
push
int
pop
aas
test
in
mov
outsb
jle
das
unpckhps
jne
or
add
addb
add
xchg
loopne
fwait
pushl
insb
push
xor
int3
mov
pop
add
sub
rolb
call
jl
cli
mov
scas
testl
cmp
lods
mov
jns
add
mov
push
adc
push
mov
sbb
cmp
pop
imull
mov
mov
and
jl
add
jge
mov
pop
mov
ret
out
adc
ret
popl
xchg
icebp
mov
cmpl
ret
das
pop
push
or
push
jmp
jbe
loope
mov
sub
add
or
mov
out
pop
pop
ret
int3
push
inc
xor
pop
inc
xor
push
or
add
arpl
sbb
testl
mov
add
loopne
or
repnz
jae
or
arpl
je
push
push
lea
push
pop
pop
pop
orb
push
js
dec
push
pop
shll
sbb
or
mov
sbb
pusha
or
pop
fbstp
xor
jmp
adc
sbb
sub
mov
sub
loop
sub
mov
push
pop
sbb
dec
sub
jg
ja
add
cmpl
push
gs
mov
mov
fs
pop
lret
inc
jg
push
jge
sar
loop
lret
pop
adc
je
inc
cmp
icebp
in
loope
in
cmp
fsts
movsb
in
iret
loopne
add
ljmp
mov
mov
in
popf
cli
pusha
adc
xchg
or
mov
push
imul
push
xor
incl
add
push
ss
fnstenv
jb
imul
fidivs
shrl
mov
cmpsb
sub
enter
dec
dec
flds
lock
jmp
lea
dec
mov
cwtl
ss
adc
lea
and
popf
pop
xchg
in
adc
adc
and
in
dec
or
ja
in
xchg
adc
pop
inc
adc
and
pop
insl
adc
insb
adc
mov
mov
mov
inc
int
pop
movsl
jg
sbb
clc
sahf
mov
pop
or
pop
mov
hlt
add
js
jne
mov
dec
add
pop
das
mov
pop
push
add
mov
pop
lods
mov
test
jb
dec
sbb
in
imul
adc
jg
cmc
cmp
ljmp
cmp
mov
mov
sbb
adc
or
or
popa
and
add
pop
jp
pop
ret
call
jmp
sbb
add
es
or
and
cmp
cmp
pop
xor
mov
or
pop
pop
push
aas
movsl
sub
cmp
adc
xor
loopne
pop
adc
sub
xchg
jl
cmp
sbb
lods
sbb
cmp
xchg
movsl
pop
imul
ret
or
rorb
inc
andl
push
jl
add
xchg
rcrl
push
and
pop
mov
cmc
jbe
popf
push
jb
cmp
xchg
cmp
jbe
test
jnp
rclb
sbb
xchg
or
push
push
mov
push
pop
sbbl
push
stc
inc
jae
or
jae
shld
shl
dec
ror
and
shl
je
cmp
fs
test
xor
mov
jnp
test
jne
xor
pop
leave
mov
inc
or
sarb
notb
sub
pop
imul
and
sti
push
rol
and
add
out
int3
lcall
loope
xchg
or
mov
sbb
pop
or
ds
addr16
push
jo
popa
and
sbb
aad
adc
xor
ss
popa
push
xor
sub
push
xlat
mov
or
sbb
add
mov
xchg
ss
pop
sbb
fisttpl
sbb
andl
call
cmpsl
data16
lea
add
lods
test
dec
xchg
or
or
inc
xor
xor
ficoml
lret
shrb
stos
movsb
mov
scas
addb
int3
mov
imul
and
push
in
lea
fisubrl
es
or
and
add
cwtl
fistpl
popa
jg
or
push
je
fs
shlb
pop
xor
mov
es
push
mov
jns
add
fucom
fadd
mov
nop
dec
push
push
repnz
push
or
xor
mov
dec
mov
pop
in
push
hlt
cld
add
or
add
add
daa
insb
pop
mov
dec
push
pop
insb
fst
add
inc
or
and
mov
bound
jle
nop
or
and
add
jae
adc
dec
icebp
adc
and
clc
cmp
pop
and
inc
and
jg
popf
movsl
movsl
push
sahf
sbb
lea
rorb
adc
xor
dec
adc
jmp
shl
mov
and
push
jae
sbb
roll
cmpl
ss
or
inc
ror
aas
dec
punpckhwd
sbb
or
ret
ret
jmp
or
jmp
testb
pop
mov
pop
mov
pop
mov
dec
cmp
push
popf
cmp
or
inc
pop
sti
and
xchg
ljmp
pop
fiadds
dec
dec
push
push
push
adc
icebp
dec
orl
lea
push
mov
pop
testb
shl
add
add
ret
jge
cmp
push
shl
pop
jge
pop
and
adc
mov
mov
and
test
adc
js
pop
test
push
arpl
mov
in
movb
add
pop
mov
in
mov
add
inc
mov
es
push
xchg
dec
incl
sub
pop
and
cmp
mov
sbb
shlb
lret
and
rcrb
fists
inc
jmp
xor
stc
push
push
lcall
je
lods
push
pop
ret
mov
enter
add
sbb
sbb
jp
xchg
add
lret
enter
lret
mov
sub
je
cmp
je
and
cmp
add
outsb
lahf
sarl
fwait
aaa
adc
mov
add
sbb
push
sub
pop
jbe
cmp
testl
push
mov
mov
add
dec
adc
push
clc
dec
loopne
test
andl
push
testb
les
imul
jge
ds
or
mov
pop
leave
push
test
int
iret
test
adc
sbb
ds
or
and
aaa
out
test
pop
aad
cwtl
xor
cwtl
je
in
xchg
push
adc
or
es
dec
cmp
je
jle
incl
or
into
push
fwait
lods
test
dec
repz
or
in
test
sub
inc
or
in
dec
ds
mov
cmp
add
and
add
test
orl
dec
dec
jmp
insl
adc
xor
in
jne
mov
sbb
lock
adc
rcrb
jne
out
cmp
cmp
sbbl
xor
dec
xor
stos
ret
cmp
dec
rcrb
mov
not
and
mov
loopne
inc
shll
arpl
fldcw
pop
push
pop
sbb
mov
out
call
rclb
aad
sahf
inc
push
dec
push
add
lods
adc
int
mov
add
xchg
bound
or
fistps
mov
and
mov
jecxz
and
adc
icebp
sub
jne
or
mov
lds
cmp
or
inc
roll
inc
cmp
ja
insl
pop
pop
test
pop
mov
and
hlt
mov
adc
push
aaa
dec
sbb
or
add
test
or
xchg
mov
inc
aaa
dec
add
adc
into
movsb
cmp
mov
or
or
pop
xchg
add
dec
or
cmp
pop
dec
or
add
adc
push
push
test
pushw
push
lock
adc
pop
sub
lret
call
loop
rolb
push
movb
sub
mov
fwait
sub
cmp
bnd
movsl
jnp
clc
nop
lock
rdpmc
cmp
jmp
mov
pop
pop
push
mov
addl
sbb
pusha
xadd
ret
xchg
cltd
out
and
sbb
out
mov
jecxz
sub
dec
popa
sbb
add
ret
pop
cltd
addr16
pushf
or
mov
cmpsl
and
repnz
jns
ljmp
inc
xchg
sarl
add
call
add
mov
push
sbb
orl
and
xchg
adc
mov
std
enter
mov
mov
stos
loope
out
push
sbb
mov
aaa
mov
adc
add
or
or
xor
push
xchg
out
dec
push
dec
or
push
or
pop
in
popa
icebp
or
adc
adc
mov
popf
daa
add
fs
and
out
inc
adc
enter
and
or
pop
popa
lods
jge
popf
pushl
xchg
cmp
imull
xlat
or
or
jecxz
jmp
rcl
adc
pop
push
inc
or
dec
dec
pop
hlt
sbb
jecxz
mov
or
sbbb
dec
push
or
mov
shrb
pop
xor
decb
and
add
ljmp
pop
push
or
push
xor
shl
mov
xor
or
and
pop
or
ja
dec
add
loop
sub
and
out
test
pop
hlt
add
xchg
inc
mov
sub
jg
ljmp
cmp
jg
sub
lock
in
push
inc
daa
xchg
sarl
inc
inc
xor
sar
push
jb
negb
cmp
jl
movsl
popa
or
dec
testl
add
testl
sbb
idivl
inc
sub
add
inc
js
cmp
icebp
or
daa
mov
jle
lea
or
incl
sub
clc
xor
rorl
add
subl
aad
jbe
nop
addr16
and
mul
push
add
push
jae
inc
test
and
jb
sti
push
and
pop
ss
insb
test
mov
dec
or
decl
jle
movb
test
mov
jle
sti
xor
add
test
cmp
mov
xchg
inc
xor
adc
jmp
pop
mov
cmp
sbb
cmp
sbb
jge
ret
xor
incl
or
and
adc
push
adc
in
inc
lock
sbbl
insl
pop
push
sub
loop
loope
movsl
test
stc
loop
mov
add
or
lods
adc
pop
mov
movsb
ss
pop
imul
lock
push
mov
pushf
rcl
cltd
push
loope
iret
inc
sub
pop
push
rcr
push
inc
setl
xchg
add
adc
test
cmovg
jg
popa
jp
movsl
and
rcrl
mov
pop
jmp
dec
add
adc
or
or
enter
loop
call
into
dec
adc
leave
mov
shr
cmp
pop
or
lea
mov
fbld
lret
jmp
sub
mov
or
cltd
dec
or
and
fwait
inc
inc
fsts
mov
jmp
ljmp
cmpl
xchg
rolb
andb
push
jmp
add
iret
rclb
inc
pop
inc
sbb
loopne
lds
pop
mov
mov
in
mov
pop
xor
and
mov
fmuls
push
idivb
call
sbb
mov
or
add
inc
and
xchg
cltd
adc
pop
adc
arpl
adc
pop
cmp
push
mov
adc
mov
pmaxsw
push
sbb
xchg
andl
jns
shll
jne
cmpl
cmc
adc
add
inc
aas
push
pop
jae
add
das
jne
pop
sbb
and
pcmpeqb
jmp
push
das
or
adc
in
pusha
cmc
movb
fs
xchg
pop
inc
das
testb
les
or
add
sti
jge
jl
inc
pushl
or
inc
imul
mov
mov
add
lret
sbb
pop
push
pop
testb
stc
es
pushf
push
push
or
repz
jmp
sub
shlb
repnz
add
lahf
add
add
adc
push
fs
sbb
add
or
cmp
jge
adc
in
xchg
clc
in
mov
xlat
sub
sbb
dec
les
aas
pop
mov
ret
fwait
xor
push
and
push
xor
inc
int3
sub
ficomps
negb
outsl
call
mov
push
jp
lahf
and
das
and
jmp
ja
adc
shrb
rcrb
xor
cmp
jae
pop
pop
mov
ffree
xor
int
or
add
add
pop
sbb
or
mov
es
fdivs
daa
add
inc
or
das
or
xlat
lahf
rorb
adc
mov
aad
xor
cmp
cmc
mov
ljmp
jo
shr
shl
or
pop
movsb
insb
mov
sbbl
pop
out
jmp
or
out
shr
sti
xor
ja
aas
mov
adc
or
xchg
shll
or
jne
dec
inc
adc
scas
add
jbe
push
sahf
repz
movsl
movsl
push
movsl
out
dec
sub
fsts
loop
jnp
arpl
push
ficompl
or
mov
inc
paddusb
jge
add
mov
pop
cmp
lret
dec
add
mov
decb
or
loope
mov
lods
add
pushl
add
sarl
adc
adc
cmp
mov
adc
icebp
jmp
and
inc
inc
jecxz
adc
add
and
pop
lret
repnz
clc
sub
inc
add
shlb
add
jle
in
mov
and
subb
or
lock
push
inc
jmp
push
pop
dec
add
movsl
sbb
add
cli
std
sub
mov
jl
or
jg
adc
pop
loopne
cmp
aas
add
lret
add
je
add
enter
shll
xor
cs
cmpsl
into
or
sbbl
fisttpl
notb
sahf
pushf
pop
jl
mov
dec
insb
xchg
or
mov
iret
mov
je
xor
jle
pop
sub
jle
arpl
jg
adc
sti
dec
push
cmovp
in
fmuls
scas
pop
push
mov
ljmp
push
ficoms
cmp
add
xchg
outsl
add
fnstsw
adc
xor
jae
or
cmp
adc
add
xor
push
jmp
adc
and
jmp
pop
xor
in
xchg
mov
dec
repz
adc
mov
inc
cmpsl
or
fdecstp
in
fdivrl
mov
jbe
push
lea
int
pushf
mov
je
js
dec
and
out
or
gs
pcmpeqd
cmp
jl
lahf
xchg
mov
mov
std
loopne
loope
pop
dec
adc
jmp
cltd
and
je
xlat
mov
mov
mov
shlb
pop
pop
pmulhw
decl
mull
orb
mov
push
jo
js
notb
mov
mov
je
rolb
jg
fcoms
test
xor
mov
xchg
outsl
rorb
mov
jo
jge
lahf
cltd
inc
push
push
cld
inc
test
pushl
cmpb
jl
incb
hlt
jbe
inc
in
cmovnp
push
xchg
jns
mov
repnz
mov
and
jp
cmc
fnsave
lock
sub
add
lret
pop
mov
sbb
sub
ss
cmpl
daa
loopne
rcr
mov
repnz
leave
aam
xor
mov
and
in
add
cmpb
into
add
sub
pusha
pop
ljmp
lret
mov
xchg
jmp
adc
in
add
sub
jne
or
pop
mov
mov
or
sbb
inc
or
adc
out
dec
mov
pop
jne
push
pxor
xchg
or
inc
mov
fnstenv
outsb
xchg
imul
push
mov
mov
mov
leave
push
pop
int3
pop
in
xor
shll
call
xchg
dec
shr
in
out
sti
out
aas
decb
rclb
icebp
inc
add
pop
enter
sahf
push
sti
ffreep
and
adc
andw
xor
pop
mov
xor
in
data16
sti
lock
mov
outsl
jne
cmp
maskmovq
mov
add
and
or
adc
addr16
and
imul
pop
inc
jne
push
and
sbb
or
lea
inc
sti
popf
lcall
rol
icebp
loope
mov
iret
inc
jmp
add
adc
out
or
xchg
xchg
and
cli
imul
mov
dec
pop
and
lea
sar
test
movswl
jae
lock
shrb
cmpl
adc
in
sub
mov
fistps
add
adc
outsb
cmp
inc
and
mov
jns
orl
stc
clc
cli
dec
sbb
or
xchg
mov
pop
cli
sbb
jne
popa
pop
neg
outsl
or
or
xor
shl
inc
mov
push
mov
enter
and
ret
xchg
jo
jbe
sbb
mov
mov
pop
sbb
adc
jmp
out
mov
jne
adc
pop
popl
add
xor
cmovb
movsl
inc
xor
dec
jmp
cwtl
test
ljmp
ret
sub
mov
testl
mov
fldlg2
and
loop
add
andb
jmp
and
das
scas
mov
mov
outsl
jl
push
rcll
push
add
cmpb
cmp
and
jmp
addl
leave
xor
or
push
xchg
rolb
and
pop
add
add
push
cmp
js
pop
mov
push
sarl
in
inc
iret
jle
jmp
clc
and
and
and
lea
and
test
cmp
lahf
cld
xchg
push
call
std
mov
aas
ja
push
xor
sarb
sbb
push
loope
xor
and
in
hlt
je
dec
pop
sbb
iret
pop
adc
push
sub
out
pop
cmp
push
cmp
into
and
dec
out
jl
jle
lock
cld
loope
add
addl
pop
cwtl
mov
cltd
adc
mov
push
adc
add
mov
pop
add
movsl
xor
mov
daa
push
dec
dec
sbb
subl
out
jne
std
sbb
fsubl
jg
xorl
shlb
jle
push
xor
popf
out
mov
mov
jae
popa
or
jg
or
insl
sub
sub
sbb
mov
or
jnp
add
xchg
mov
jp
ljmp
cld
aaa
mov
jnp
jmp
cmp
pop
movsl
ja
stos
xor
pop
fisubs
loop
loop
push
gs
adc
or
mov
push
jmp
xchg
por
mov
ficoms
jae
loope
ds
fimuls
movl
xchg
divl
add
in
sbb
add
jmp
lods
add
jecxz
sub
arpl
xchg
jp
incl
add
adc
inc
inc
jmp
cmp
je
jge
sbb
lds
cmp
sub
or
call
cs
push
int
roll
icebp
cltd
dec
lret
ja
cmp
rorl
push
xor
testb
jo
outsb
pop
jl
ret
mov
jmp
fisubs
pop
mov
or
jb
or
jg
adc
xor
ja
jmp
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
pushl
repz
test
ficompl
jmp
mov
hlt
movl
imul
stc
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
dec
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
fisttpl
or
mov
cmp
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
aas
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
aas
xor
cmp
lods
insb
mov
mov
lcall
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
mov
incl
imul
xorb
sbb
push
imul
aam
loopne
call
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
lcall
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
ljmp
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
lcall
outsl
lret
pop
or
adc
sahf
call
jmp
imul
push
js
or
push
addl
pushl
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
movups
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
lcall
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
ljmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
push
aas
jnp
inc
add
add
clts
add
add
add
xor
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
and
jl
jbe
add
pusha
push
jo
or
sub
iret
in
dec
pop
add
sbb
sub
outsb
add
insb
fistpll
add
repz
insb
insb
adc
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
or
push
inc
dec
inc
inc
push
inc
inc
cs
push
push
inc
push
push
mulb
or
lock
cwtl
jle
push
inc
push
push
incl
dec
jae
jb
arpl
jae
jb
gs
je
jb
sbb
fsubr
in
outsb
je
dec
inc
push
dec
xorl
sub
pop
ds
pop
push
xlat
fildl
fcmovne
pop
es
push
jb
test
and
in
roll
pop
push
push
sbb
paddsb
or
dec
inc
sbb
inc
and
and
xor
cmp
sub
insb
je
sti
jne
inc
imul
sbb
mov
outsl
dec
aaa
outsb
outsl
je
or
push
and
popa
arpl
out
insb
cmpsl
imul
sbb
ss
xor
xor
ja
and
jb
inc
addr16
arpl
enter
arpl
insb
push
mov
out
jge
gs
das
mov
mov
mov
xor
out
outsl
jo
mov
jnp
loop
inc
push
fs
push
cmp
lea
cltd
xor
and
xor
cld
test
jb
pop
insb
outsl
arpl
popa
sub
xor
pop
add
add
sbb
std
andl
insl
insl
pop
addr16
lahf
and
mov
pop
push
cmp
push
iret
lret
fisubs
push
jae
push
xor
pusha
fnstcw
fcomp
outsb
addr16
and
decl
shll
mov
imul
push
cmp
jb
mov
jnp
jns
or
inc
sbb
lret
sbb
and
cmp
cs
insb
xor
pop
imul
repnz
push
inc
lds
popa
test
jbe
jge
push
outsb
divl
add
pop
push
dec
fs
jle
das
in
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
mov
enter
inc
push
add
and
in
mov
inc
out
mov
aas
mov
ja
bound
adc
jb
pop
mov
push
jle
add
testb
gs
imul
aas
and
mov
popa
jae
adc
push
adc
add
arpl
xor
xor
pushf
pop
push
xchg
fnstcw
add
outsb
repnz
xor
adc
in
add
adc
cld
enter
cmp
jno
dec
push
push
push
dec
pop
jb
test
adc
movsb
std
gs
insb
xor
inc
push
cltd
jbe
in
or
add
pop
lods
inc
xor
outsl
xchg
out
enter
inc
adc
or
icebp
inc
rorb
lock
fbld
ss
std
outsl
jo
imul
nop
lret
push
or
outsb
jo
push
push
pop
ds
fmuls
jae
mov
and
addl
in
mov
out
xchg
jle
pop
enter
mov
popa
jb
cs
sbb
adc
icebp
pop
das
sub
jne
outsb
xor
das
in
sub
inc
cmp
jne
mov
push
add
push
add
jns
or
cld
ffreep
je
insb
cmp
and
das
mov
and
pop
jae
inc
dec
pop
inc
js
ja
pop
ret
push
push
pop
xchg
jae
shl
mov
push
arpl
mov
add
lock
ret
in
imul
inc
jne
test
dec
push
cmp
pop
dec
push
dec
inc
xor
sub
jo
mov
gs
jb
mov
cmp
pop
or
aas
and
ja
or
fisubrs
test
imul
jnp
jns
pop
into
push
inc
int
mov
insl
pop
int
outsb
enter
gs
je
xchg
xchg
mov
imul
out
jno
gs
sbb
cs
out
xor
jp
jae
bound
mov
jge
and
test
arpl
sub
push
xorb
xchg
push
pop
loope
ret
icebp
js
jne
sub
shll
mov
or
aaa
imul
fwait
je
and
mov
daa
rcrl
adc
cli
insl
dec
addr16
cmp
js
sub
sbb
sub
outsb
fidivrl
xor
adc
or
sub
dec
inc
push
fildl
mov
mov
daa
and
and
popa
sti
sbb
inc
gs
addb
daa
dec
aam
lcall
psubsb
pop
inc
mov
add
pop
sub
sub
sar
sub
das
xor
sbb
jnp
jge
insl
inc
mov
add
movsl
cmp
cmp
das
jl
or
or
inc
dec
push
push
dec
inc
pop
add
jmp
cmp
push
rolb
dec
sarl
orl
pop
inc
and
jb
and
cmp
cmp
cmp
mov
push
cmp
cmp
add
mov
cmp
aaa
mov
pop
cwtl
das
or
and
dec
xor
cmp
sbb
ss
cs
sub
ss
cwtl
dec
push
sbb
or
enter
pop
xchg
inc
xchg
add
inc
sahf
sbb
xor
xor
in
and
and
xor
xor
xchg
inc
cs
cmpb
jbe
push
adc
xor
nop
xor
and
inc
das
adc
xor
jns
insl
int3
push
lods
xor
xor
in
inc
add
xor
daa
pushf
push
nop
sub
push
mov
das
das
mov
dec
push
cmp
or
or
dec
lock
enter
lods
push
movsb
das
mov
nop
or
dec
and
cs
inc
xor
in
sub
dec
lcall
shll
add
sub
imul
push
lods
pushf
xchg
das
xor
or
pusha
xor
inc
int3
or
add
jns
cmp
jb
ja
ds
mov
std
jae
sub
jb
gs
data16
sti
add
outsb
sbb
popa
jb
sub
rolb
push
push
imulb
jne
xor
std
outsb
ja
arpl
lds
xchg
test
dec
outsl
arpl
mov
std
ja
pop
addr16
divl
dec
pop
imul
insl
stos
insl
data16
jo
push
bound
aaa
mov
jo
jge
fmull
pushf
push
pusha
cs
lods
jno
icebp
jg
and
and
push
dec
gs
push
ds
dec
outsb
mov
push
idiv
imul
orb
and
fwait
pop
cmp
cmpsb
push
scas
dec
shll
mov
imull
pop
outsl
loope
daa
fiadds
pop
insl
lahf
jle
cmpb
dec
jne
notl
insb
scas
insl
sbb
addr16
push
mov
pop
aas
push
imul
scas
sub
sub
xor
mov
and
rcll
inc
mov
stos
ja
xchg
ja
imul
push
jne
xlat
push
pop
das
ss
push
popa
adc
cmc
sbb
pop
mov
hlt
cmp
ja
jecxz
mov
and
je
ret
jmp
and
das
inc
push
inc
dec
push
dec
dec
inc
dec
inc
stos
shr
and
pop
test
xor
adc
fdivs
xor
inc
insb
pop
jge
or
mov
jo
add
mov
arpl
and
and
dec
dec
add
pop
sbb
xor
xor
pop
shlb
mov
insl
dec
cmpl
xor
mov
and
cmp
insb
les
jb
xor
lods
insl
jmp
dec
inc
push
pop
mov
orb
jb
shlb
adc
add
addr16
sub
jns
mov
adc
jb
jne
pop
mov
xlat
xchg
aam
daa
mov
outsb
push
and
lods
or
jecxz
and
push
add
xlat
fwait
cltd
push
inc
xchg
leave
testl
imul
fsubrs
lahf
push
sub
pop
ljmp
inc
xchg
bound
dec
rorb
imul
push
lahf
iret
inc
or
fiaddl
jns
insb
mov
push
push
jne
movsl
dec
cmp
outsl
aam
lock
pushf
mov
cmp
imul
cmp
mov
cmpl
lods
xorb
fbstp
lahf
mov
inc
insb
popa
arpl
push
push
mov
mov
faddp
inc
pcmpeqb
mov
pop
adc
xchg
clc
add
imul
jno
mov
xchg
je
icebp
and
mov
mov
push
dec
dec
das
fadds
lcall
xor
cmpsb
push
fisttpl
and
add
loop
lahf
sub
push
pop
fsubs
mov
ja
push
mov
popf
inc
gs
loopne
lret
mov
mov
scas
xor
xorl
or
mov
dec
and
cmp
andl
imul
mov
sbb
mov
push
outsb
daa
sub
or
or
sbb
inc
pop
mov
test
pop
in
std
mov
test
jo
jae
push
arpl
mov
xor
enter
aaa
or
fs
pop
inc
andl
fwait
xor
pop
mov
mov
popf
dec
in
imul
pop
push
and
jo
mov
outsl
daa
fiadds
jbe
gs
fs
dec
scas
mov
dec
pop
imul
leave
jbe
out
scas
sub
xor
das
popf
mov
push
mov
adc
aaa
jo
jbe
xchg
pushf
pop
dec
outsl
push
outsl
outsl
inc
imul
mov
sub
in
faddp
jg
sub
xor
popa
inc
jne
loop
push
das
xchg
jae
ja
ds
inc
insb
orb
bound
push
xchg
lods
push
or
shrl
sbb
add
mov
mov
cmp
push
outsl
and
sub
inc
add
rcll
pop
pop
xchg
add
sbb
test
fwait
mov
and
ja
sahf
aas
bound
adc
ret
cmc
sub
or
xchg
adc
dec
cli
decl
leave
mov
xorb
loop
sar
ja
dec
jo
cwtl
cltd
cltd
ret
and
cltd
adc
test
fsincos
in
call
movsl
lcall
mov
lea
adc
jg
repz
shrb
xchg
rol
pop
popf
fdivrl
adc
mov
lcall
push
call
xchg
sbb
cmpsl
adc
sti
jmp
outsb
sbb
adc
lcall
xchg
lret
iret
data16
gs
shr
mov
and
cwtl
repz
sub
pop
fsubr
std
lcall
stos
pop
adc
popf
repz
lret
xor
jns
out
fbld
jne
adc
inc
xor
adc
fbld
or
pop
fbstp
mov
iret
lret
lret
movsl
clc
out
jge
cli
hlt
std
and
jb
leave
pop
jno
xor
enter
aaa
add
dec
ret
shlb
ja
jno
addr16
in
leave
jmp
cli
imul
cld
fdivr
std
jmp
ljmp
in
cld
sbb
cltd
fsub
lock
xor
idiv
std
aad
sti
jmp
jmp
xor
ljmp
sti
fnstsw
fmul
cmp
xchg
sti
lock
cmc
lock
cltd
clc
cli
arpl
in
cltd
jle
dec
dec
dec
push
or
mov
cmc
sub
add
xor
xor
fcoms
jg
das
mov
scas
cs
inc
fisttpl
mov
in
cmp
addr16
push
aaa
sti
jnp
jno
leave
incl
pop
aad
ja
fs
jo
iret
nop
jbe
push
fstpt
nop
or
push
sbb
repz
xor
ja
mov
gs
jne
and
and
es
outsb
test
mov
sarb
cmp
aam
je
je
and
pop
rorl
or
pop
js
dec
or
cmp
and
mov
mov
xor
xor
cs
les
add
int
popa
jp
jo
stc
in
sti
jmp
xor
add
xor
xor
cmp
jge
sbbl
int3
repnz
fisubs
es
dec
adc
daa
testb
add
mov
aad
gs
outsl
je
add
push
sbb
xchg
jmp
addr16
sti
adcb
push
in
pusha
add
cs
mov
and
sti
push
push
jb
jae
sub
faddl
sbb
sub
bound
and
lcall
clc
iret
jle
jbe
jne
outsl
add
inc
dec
inc
cmpsb
add
daa
add
and
outsb
daa
add
sub
popa
xchg
push
xchg
imul
je
or
stos
pusha
lods
sub
jecxz
pop
rcr
jg
xlat
cs
push
idiv
aas
cbtw
addl
inc
mov
push
sbbl
pop
dec
pop
imul
loopne
imul
push
jg
mov
add
cmp
pop
mov
lahf
call
lret
xchg
mov
dec
pusha
add
push
or
cmp
push
mov
xor
std
int3
inc
fs
mov
pusha
pop
or
lcall
add
sub
adc
outsb
pop
sti
pop
movsl
jb
dec
inc
push
inc
addr16
fnstcw
or
pusha
fiadds
aas
inc
dec
push
add
mov
cmp
lahf
xor
push
lret
sub
add
or
add
fcoms
pop
inc
les
int
fs
aaa
fs
stos
pop
movsl
xchg
cmpsb
movsb
lods
loope
fs
stos
out
pop
xchg
imul
inc
and
add
scas
addl
mov
incl
add
xchg
dec
pop
data16
or
push
bndstx
vmread
or
fdivr
jg
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
scas
xor
xor
adc
sbb
xchg
test
pop
out
rorb
add
cmp
add
incl
orb
dec
cltd
cltd
icebp
mov
jp
add
add
mov
dec
repnz
or
movnti
loopne
dec
adc
cs
cs
adc
cmp
push
mov
cld
into
add
or
and
push
add
xor
add
push
add
add
arpl
daa
xchg
adc
das
pop
mov
push
mov
mov
testl
pushl
dec
add
pop
pop
adc
into
int3
loopne
jg
xchg
add
out
rcll
push
fstpl
movsl
jo
dec
add
out
mov
pop
cwtl
je
outsl
cmc
inc
std
inc
std
pop
jo
jo
jo
popa
jo
jg
lods
shll
pop
xor
inc
cmpl
lcall
js
jb
out
add
or
leave
loopne
add
jle
sbb
xlat
xor
xor
fcomps
xchg
adc
fadd
les
idiv
ljmp
add
jl
mov
ja
mov
cmovno
test
jmp
cld
ja
inc
inc
outsl
or
jne
ds
ja
fdivs
fs
dec
inc
das
jae
arpl
dec
bound
adc
outsl
jae
lods
jge
mov
add
jae
outsb
lret
dec
dec
inc
les
fstpl
pop
push
push
dec
sub
mov
dec
push
pop
jnp
sub
mov
sub
jo
data16
push
cmp
jne
fwait
mov
ficoml
imul
mov
pop
popa
daa
aam
ret
and
movsb
cs
or
aam
mov
insb
mov
fildl
mov
lods
rclb
adc
lahf
sbb
ss
cmp
aad
loopne
arpl
int3
cmp
aaa
fdivs
push
sbb
scas
outsl
mov
adc
gs
shrb
outsl
jne
fs
adc
arpl
jbe
add
mov
xorl
je
fs
push
inc
dec
add
loope
sub
or
or
sbb
pop
sbb
adc
les
jbe
sbb
outsl
push
punpckhdq
je
xor
dec
data16
ljmp
pop
jg
xlat
push
mov
inc
xlat
lret
push
test
aas
sbb
pushf
rol
mov
or
jno
inc
xor
pop
sub
add
cmpb
adc
mov
aam
add
xchg
add
das
push
popf
sbb
lret
adc
cld
add
es
sbb
stos
jns
popl
xchg
lcall
sbb
push
xchg
popa
sub
add
push
mov
ds
inc
push
dec
add
cltd
and
xor
divb
out
sub
pusha
nop
insl
jns
loope
scas
fidivrs
gs
add
arpl
sub
mov
loope
insl
popa
js
icebp
cmp
notl
jb
sbb
gs
xor
jo
and
or
imul
fbstp
push
popa
pop
cmp
aam
inc
aam
inc
out
add
dec
push
and
sub
test
cltd
or
les
add
outsl
popa
cmp
adc
mov
dec
insb
cld
inc
dec
cmp
cmp
roll
dec
popf
add
jns
lods
push
cmp
int
es
lea
outsl
jge
movsb
jp
ret
jle
je
push
arpl
cmp
push
dec
movsl
push
mov
sub
pop
mov
je
test
lret
sbb
inc
test
lret
sbb
imul
adc
mov
jae
dec
push
push
inc
dec
cmp
cmp
sub
mov
repnz
sub
adc
dec
inc
pop
adc
dec
dec
ds
push
push
dec
push
add
inc
movsb
cmp
adc
jae
out
insl
and
sub
sub
rolb
inc
imul
dec
inc
push
dec
sub
or
inc
cmc
pop
and
aas
rorl
dec
dec
inc
mov
rorb
add
imul
pop
add
add
fcom
dec
xor
jae
mov
cmp
fists
add
aaa
fsubrl
sub
mov
mov
and
jle
or
popa
bound
dec
inc
and
mov
jle
inc
inc
sbb
idivb
movsl
icebp
out
sub
xor
jnp
xor
inc
adc
or
in
inc
aad
push
add
pop
and
subl
test
or
out
in
push
lods
orb
dec
mov
pop
or
shll
xlat
xlat
push
js
imul
ja
scas
into
push
scas
xor
push
test
and
mov
addr16
fwait
xor
pop
data16
cmc
dec
push
fnsave
ret
test
filds
xor
push
add
mov
cmp
dec
outsl
mov
fnstsw
pop
dec
inc
dec
push
in
mov
xor
jae
sbb
and
inc
in
fsubrs
push
loope
push
daa
add
aaa
js
cltd
add
shrl
xchg
sbb
ss
sbb
fimull
lods
inc
cwtl
sbb
sahf
adc
movsb
add
or
cwtl
sbb
and
mov
dec
inc
mov
orl
and
ja
arpl
push
out
adc
pop
and
popl
js
or
inc
sub
jge
mov
cmp
ss
js
xlat
xor
mov
jbe
adc
sbb
sbb
inc
push
inc
pop
lahf
pop
add
outsb
xor
daa
jno
xor
xor
pushf
pushf
mov
je
pushf
mov
pushf
pushf
mov
pushf
pushf
mov
cmp
mov
pushf
pushf
cmp
xor
mov
xor
add
pushf
xor
sarb
push
xor
and
in
xchg
pop
es
xor
jns
and
and
es
enter
pop
es
aad
xchg
nop
mov
repnz
sub
mov
sub
pop
in
cmp
sub
movsb
cmp
or
and
xor
pop
push
jno
pop
insb
insl
es
lods
cmp
adc
add
add
fidivl
arpl
lcall
adc
sub
pop
cmp
imul
enter
pop
jnp
or
es
popa
popa
inc
imul
xor
adc
xchg
adc
mov
fstpl
adc
sbb
mov
dec
push
mov
ss
dec
adc
push
pop
insb
adc
cmp
cmp
daa
lods
popf
push
cmp
pop
push
adc
add
adc
int3
inc
adc
adc
pop
add
lods
xor
outsb
adc
lret
ss
dec
mov
dec
lcall
int
dec
cs
fcompl
repnz
adc
inc
push
push
dec
pop
push
inc
imul
or
clts
or
fisttpl
es
push
sbb
not
cmovl
or
lea
push
pop
or
inc
pop
mov
mov
inc
push
push
pop
or
push
das
inc
push
or
mov
ja
inc
scas
cmp
dec
or
mov
mov
es
inc
push
pop
or
into
dec
fisttpl
dec
or
pop
push
pop
or
fneni(8087
dec
dec
test
imulb
lcall
lcall
imul
adc
or
enter
popa
xor
and
dec
xor
and
dec
xor
orl
ss
xor
and
push
imul
dec
cmp
in
outsb
cs
dec
inc
pop
cmp
push
popa
fs
add
and
lcall
ret
xor
inc
jne
data16
out
loopne
dec
xor
test
mov
or
aam
cmpsb
arpl
test
adcl
and
push
xchg
jb
gs
jo
js
mov
cwtl
out
pop
inc
adc
gs
xor
xchg
rolb
das
sbb
cs
stc
pop
sbb
andnps
pop
add
ds
arpl
push
inc
jnp
aas
insb
aam
push
gs
outsb
jbe
je
jb
movsb
pop
xor
inc
movsl
mov
js
arpl
push
dec
mov
jmp
in
jbe
push
daa
sbb
jnp
adc
mov
pop
arpl
fmuls
push
dec
xor
das
inc
pop
sub
fs
daa
push
cmp
mov
xchg
mov
inc
daa
xor
icebp
lgs
push
fs
insb
jo
aas
xchg
jae
pop
or
mov
lds
cmp
inc
aas
add
mov
add
setle
add
or
mov
jne
pop
fs
and
movsb
das
lods
pop
jmp
sbb
iret
scas
aas
or
or
dec
lret
outsb
mov
outsl
bound
inc
mov
add
pop
push
xchg
and
scas
dec
arpl
sbb
pop
pop
inc
mov
dec
cmp
sbb
push
icebp
ds
loopne
imul
popa
das
xor
push
ret
sub
xor
movsb
fdivrs
push
bound
fdivrs
dec
push
jb
inc
daa
lds
adc
out
and
mov
adc
mov
dec
xor
inc
daa
adc
imul
sbb
and
dec
enter
jns
aaa
jbe
dec
pusha
addr16
std
mov
or
popa
out
jo
jecxz
es
xchg
iret
bound
cmpsl
cmpl
jle
cmp
add
mov
adcb
movsl
pop
lret
xchg
into
push
mov
xchg
sbb
scas
push
jbe
pop
push
fisttpl
fisttpll
stos
je
punpckhwd
inc
jae
outsl
rorl
jae
push
outsb
push
push
nop
pop
inc
jecxz
shlb
lock
mov
mov
or
in
inc
in
jo
aad
fdivrl
push
pop
adc
inc
inc
dec
jae
push
inc
or
push
push
xlat
fwait
cmp
cmpsb
pop
notb
dec
xchg
dec
bound
pop
cmp
inc
imul
lahf
inc
js
inc
insl
enter
paddusw
pusha
jo
or
outsl
out
mov
mov
mov
daa
je
scas
push
movsl
outsb
fisubs
or
push
adc
ja
jae
outsb
jb
jne
or
insl
outsl
scas
shrb
pusha
push
fs
jae
mov
xchg
or
add
shll
movsl
mov
push
fsubr
call
dec
fwait
xor
lods
add
jb
iret
push
sub
outsl
imul
and
xor
outsl
and
add
imul
inc
push
jp
add
bound
inc
arpl
push
fcompl
sbb
test
ja
pop
push
fisubl
jle
andb
xchg
push
int3
sbb
shlb
gs
test
push
xchg
pop
add
inc
inc
jle
movsb
in
push
cmpsl
and
js
movsl
or
xchg
add
nop
xchg
cmp
mov
fs
pop
sbb
adc
bound
push
jae
jns
mov
cmp
out
arpl
pushl
and
jb
xor
inc
mov
imul
mov
adc
sub
ret
aaa
fisubrl
cs
dec
pushf
int
inc
mov
add
insb
mov
popf
popf
subl
addl
rcrb
jae
sub
mov
inc
or
or
cmpl
push
es
push
sbb
das
adc
jne
inc
dec
dec
and
lods
adc
cs
cmp
mov
dec
xor
gs
jo
aad
popa
xorb
iret
xor
cmpsb
xor
es
rorl
das
insb
mov
cmp
xor
add
mov
jbe
call
xor
xor
pop
dec
and
jecxz
fcmovnb
std
cmp
dec
mov
outsl
loop
xchg
adc
add
iret
pusha
icebp
fwait
cltd
icebp
lods
int
xlat
and
adc
sbb
jne
mov
icebp
lret
mov
push
iret
add
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
sbb
icebp
cld
adc
test
sbb
adc
mov
pop
fnstsw
jge
dec
sti
movsb
adc
mov
adc
int
enter
mov
jbe
pop
out
test
data16
lcall
xchg
enter
movsl
adc
mov
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
jmp
push
xchg
lcall
in
jle
adc
mov
xchg
rclb
test
fwait
push
xor
rcrb
add
xlat
xchg
lcall
std
pushl
sub
pushf
push
jbe
jns
push
cmp
jne
xor
jle
or
add
or
cwtl
xchg
jg
scas
addb
adc
xchg
enter
pushf
shlb
mov
dec
imul
add
popf
iret
mov
add
jmp
adc
stc
addr16
fnstenv
jns
lret
in
ja
push
and
enter
or
jne
lods
fscale
cli
cmc
imul
mov
cltd
inc
test
push
dec
inc
ret
inc
sbb
sbb
loope
jg
sbb
push
inc
and
push
push
dec
push
dec
and
dec
inc
std
sbb
fwait
das
dec
inc
dec
dec
xchg
mov
flds
push
mov
sbb
mov
dec
inc
xor
gs
xchg
fnsave
sub
dec
dec
and
enter
movsb
push
jae
outsb
loop
add
add
inc
add
or
sarb
imul
addr16
stos
ss
lods
xchg
orb
iret
sbb
fwait
cmp
jne
movsb
xchg
mov
xor
mov
iret
mov
ficompl
xchg
dec
xor
add
lods
pop
push
cmc
inc
gs
inc
cli
addr16
push
push
add
adc
ds
incl
sbb
repnz
sbb
scas
xor
cwtl
or
jne
ja
or
incl
jp
mov
ret
push
add
push
add
flds
out
xor
in
data16
into
mov
or
add
add
inc
popa
inc
or
sub
ss
dec
mov
add
jmp
and
push
insb
mov
cmp
push
lahf
fistps
dec
adc
add
mov
es
mov
mov
adc
and
out
mov
push
dec
ljmp
sbb
or
rclb
fwait
test
rorb
cmc
leave
out
jns
or
pusha
mov
pop
mov
leave
mov
mov
add
iret
lock
xchg
adc
scas
jl
inc
in
inc
mov
push
jbe
adc
adc
stos
pop
cmpsb
jmp
out
repnz
decb
pop
sub
or
lahf
xchg
and
add
daa
or
lods
or
stos
psubusb
add
in
jl
je
sahf
cmp
inc
add
test
insb
andnps
orl
test
in
shrl
daa
push
popf
lods
jb
das
mov
pop
push
and
data16
das
imul
pop
mov
jae
pop
and
mov
and
add
jle
xchg
mov
jb
xchg
cld
sbb
adc
or
lds
insb
mov
xor
add
add
fiaddl
je
jge
adc
pop
xlat
sub
push
fistpll
movb
imul
in
sbb
or
and
jmp
in
add
dec
push
out
jecxz
adc
fildl
cmp
jae
push
push
push
and
ret
adc
das
arpl
mull
cmc
adc
add
cmp
test
adc
and
xor
adc
das
notb
push
push
outsl
mov
and
mov
bound
push
ret
pop
idivl
ror
mov
mov
das
or
pop
inc
inc
and
je
xchg
daa
add
arpl
insl
fs
daa
sbb
add
aas
jnp
cmp
adc
pop
jbe
xchg
mov
pop
in
xchg
push
das
cltd
jge
pop
mov
add
push
dec
inc
adc
push
push
or
add
out
push
outsl
outsl
je
xor
cmp
outsb
push
xor
inc
add
and
xor
xor
adc
add
sub
ss
jp
jp
add
xor
in
add
les
pusha
mov
xchg
jne
pop
in
dec
iret
inc
mov
push
fs
ret
and
push
ds
xchg
push
push
data16
aam
xor
pcmpgtb
bound
mov
das
dec
aam
cmp
nop
and
mov
and
insb
daa
pusha
sub
out
cmp
adc
jbe
cmp
insl
int
and
jp
aaa
inc
imul
cmp
add
repz
add
inc
insb
in
sub
jae
jb
mov
dec
pop
xchg
dec
bound
add
jbe
int3
shlb
xor
dec
dec
inc
cmp
aaa
mov
sub
jecxz
popf
test
push
fsubrs
in
je
jbe
imul
sbb
and
clc
inc
cs
ret
pop
insb
ljmp
rcrb
cmp
fs
adc
arpl
and
gs
inc
lds
pop
nop
outsl
push
mov
mov
or
add
ja
test
push
pop
inc
push
sub
lea
jne
or
fs
add
pop
dec
popa
nop
mov
movsl
sbb
xchg
cs
adc
pop
and
addl
sbb
xlat
inc
lret
add
nop
lret
pop
add
jle
or
insb
add
mov
mov
lods
leave
dec
imul
aaa
xchg
add
cmp
pop
and
inc
xchg
mov
mov
mov
in
mov
arpl
pop
add
adc
mov
jno
arpl
jg
pop
dec
mov
adc
pop
push
push
data16
imul
and
or
pop
pop
cmp
mov
test
imul
icebp
dec
jns
pop
pop
pusha
mulb
cs
push
inc
in
imul
out
pop
stos
and
stos
xor
dec
stos
or
add
adc
adc
or
rcl
adc
cmp
xor
das
pop
push
dec
push
adc
pop
subl
pop
sbb
ret
pusha
es
pop
mov
lods
push
mov
sub
sub
push
lea
add
and
ss
test
xchg
xor
insb
or
jne
cmpsl
jo
or
fstps
and
arpl
sub
popf
mov
cmp
sbb
insl
and
xchg
repz
or
in
sub
mov
or
mov
xchg
addb
inc
pop
dec
add
push
aas
push
or
aaa
ljmp
lea
jnp
mov
push
xor
jo
incb
dec
popa
js
xchg
aaa
mov
pop
jns
mov
push
test
sub
push
add
fs
cmpsl
lea
push
pop
mov
or
sbb
jbe
xchg
dec
and
data16
inc
inc
push
outsb
xchg
test
mov
popf
add
push
xchg
ja
mov
push
xchg
add
daa
inc
popa
js
sub
push
xor
dec
or
daa
imul
insb
outsb
pushf
or
movsl
ret
pop
out
cmp
insb
in
inc
xchg
add
ljmp
pop
and
mov
int3
mov
dec
mov
stos
xor
insl
daa
fsubrl
and
jle
cmp
inc
outsb
mov
aad
nop
loope
or
jnp
jno
das
cmp
stos
push
and
iret
pop
ss
or
rcll
jp
and
bound
pop
cmp
jbe
add
insb
mov
or
aaa
pop
lcall
cmp
jne
adc
outsl
ffreep
fstl
mov
add
or
sub
sti
int
mov
mov
pop
cmp
sub
add
test
and
cmp
lret
cmpsb
or
outsl
rorb
mov
add
pusha
rdtsc
into
lock
jns
adc
or
inc
or
addl
pop
and
movsl
inc
xor
sbb
adc
dec
shlb
cmp
push
imul
faddl
sbb
ret
and
stc
test
mov
mov
cmpsl
addb
test
inc
jne
andb
repz
movsl
rorb
push
into
jb
das
adc
jne
insl
inc
pusha
sub
mov
popf
fcoml
bound
shrl
scas
lds
loope
int3
adc
pusha
jno
outsl
repz
xlat
roll
mov
rcrb
sbb
ja
push
sub
sbb
insl
movsb
mov
pop
xchg
xor
je
cmpsl
sub
sub
jmp
lods
jne
and
arpl
ja
jnp
sub
xor
daa
imul
or
xlat
and
push
ret
sub
mov
xor
xchg
dec
mov
cmp
pop
xor
jne
xchg
movsl
pop
jl
imul
xchg
in
push
shlb
jne
push
jl
add
add
leave
cmp
and
addr16
insl
mov
stc
pop
pop
sub
inc
dec
push
push
dec
inc
dec
push
dec
mov
imul
rcl
mov
inc
push
push
and
adc
ss
cs
sub
mov
cwtl
fcmovb
movsl
fdivl
sbb
xor
cmp
and
or
inc
jae
loope
aaa
cmp
cmp
ljmp
dec
dec
and
push
push
pop
inc
inc
pop
xchg
outsb
in
inc
mov
xor
loopne
rdmsr
xor
cwtl
fcompp
cmp
idivb
pop
cld
inc
xchg
ret
gs
mov
add
and
imul
lock
xor
cmp
imul
add
ja
lock
addr16
and
and
mov
pop
mov
mov
push
xor
xchg
xchg
testb
mov
sahf
dec
pop
push
inc
push
xchg
xchg
fcmove
dec
sbb
jo
push
adcl
ss
test
pushf
nop
lcall
pop
inc
sub
fwait
cmpsb
imul
lock
mov
dec
movsb
xchg
mov
xor
jb
xor
dec
ret
test
sbb
mov
xor
pop
jb
mov
sbb
ror
data16
push
popw
pop
dec
push
jo
lods
outsl
add
loopne
sbb
sbbl
pop
je
fldl
dec
push
inc
dec
inc
push
push
inc
insl
jae
jbe
clc
cmpsb
test
aam
xchg
popa
add
cmp
add
scas
outsb
packsswb
pop
je
imul
jbe
xchg
imul
lods
insl
dec
mov
loope
in
fbstp
insl
jno
mov
sbb
and
mulb
jae
xchg
mov
or
addr16
jnp
shll
mov
bound
sarl
push
xchg
inc
and
sub
cmpsl
stos
test
jg
jb
xor
gs
cmp
fmuls
dec
xchg
mov
lods
mov
cmp
push
inc
enter
add
sub
xor
inc
enter
adc
test
sub
inc
enter
enter
pop
cmp
aas
daa
inc
enter
jle
fidivl
fwait
add
and
sub
sbb
nop
inc
and
nop
and
or
inc
xchg
sub
sub
pop
or
inc
cmp
and
pusha
and
jle
inc
cmpsb
mov
imul
sbb
inc
sbb
nop
and
pop
nop
and
sub
sbb
sub
fs
pop
cmp
aas
daa
inc
xchg
imul
or
and
and
int
gs
das
inc
sub
in
cs
and
and
orl
adc
and
and
or
inc
and
xor
nop
and
movl
sti
aam
sub
inc
dec
pop
xor
incb
dec
push
inc
push
mov
das
jmp
mov
push
push
xchg
xchg
xchg
scas
in
sub
jmp
dec
fisubrs
push
inc
push
push
into
jns
ficompl
mov
pop
add
loope
pop
imul
or
cs
dec
dec
scas
mov
push
fwait
outsl
imul
das
add
decb
adc
or
push
das
push
rorl
insl
inc
inc
lahf
pusha
inc
xchg
nop
inc
incl
pop
int
call
jo
arpl
jne
dec
pop
or
sub
sbb
push
sbb
add
push
xor
pop
stos
lcall
pop
jb
daa
inc
push
rcr
insb
add
inc
push
push
push
inc
loopne
fcmovnb
pop
jb
js
bound
pop
shlb
cs
call
cltd
dec
cmp
call
jmp
insl
jo
cs
pop
cmpps
xor
and
jg
push
bound
push
imul
cmp
jo
pop
imul
mov
dec
outsb
pusha
hlt
bound
push
scas
sub
sbbb
cmp
jl
and
adc
push
mov
sub
cmpsb
dec
dec
and
lock
push
ds
pop
sub
inc
xchg
outsl
dec
or
fisttpl
pop
push
push
inc
dec
ja
mov
adc
lods
adc
push
sbb
or
xor
jp
sahf
pop
lock
push
loopne
int3
les
lods
movsb
mov
xor
pushf
nop
shll
jo
imul
inc
cmpsb
imul
mov
or
clc
popf
lock
les
fcom
cs
pusha
shll
lods
movsb
popf
cmpsl
pushf
push
lcall
test
mov
inc
fs
push
inc
cmp
xor
shll
and
adc
imul
dec
shll
shlb
mov
dec
shll
shll
js
push
pusha
pop
push
push
dec
cmp
imul
insb
lcall
in
scas
fdivs
enter
push
mov
lcall
cmpsb
imul
xor
imul
xor
shll
adc
mov
fwait
lcall
sbb
jne
mov
shl
rcrb
jmp
out
and
test
inc
jecxz
mov
push
add
pushf
in
push
push
cmp
pop
cld
jno
add
jne
ja
sbb
into
bound
rcrl
xor
lock
daa
outsl
bound
xor
xor
push
add
in
cs
movl
mov
pop
bound
sub
jecxz
arpl
aas
pop
pop
pop
push
dec
push
mov
ficoms
js
insb
jne
bound
stos
pop
cmp
jne
inc
sbbb
fidivs
pop
inc
mov
inc
outsb
je
enter
or
jb
insb
popa
subb
lret
mov
pop
iret
imul
lock
imul
adc
push
jnp
fstpl
imul
dec
jae
mov
adc
jo
jl
add
fisubrs
push
sbb
push
jbe
ja
mov
jbe
ds
bound
jno
pop
outsl
jo
pop
js
push
xor
lds
jbe
inc
paddq
imul
sbb
jns
cmp
gs
cmp
mov
add
loopne
adc
add
sbb
imul
popl
cmp
sahf
xchg
std
insb
adc
sub
pop
jb
mov
or
push
inc
lock
psrad
insb
fists
or
insl
inc
and
pop
les
aas
es
and
scas
push
xor
xor
push
fcomps
xor
das
popa
popa
addl
aas
push
push
fisttpll
jo
out
xchg
adc
pop
pop
imul
xchg
into
inc
pop
add
popa
adc
pushaw
fmuls
and
sahf
adc
pusha
mov
out
adc
sub
sbb
lret
nop
loop
inc
outsl
inc
pushf
out
push
mov
rcll
pop
mov
frstor
jb
and
daa
popw
insl
loop
ss
dec
cmp
aam
lahf
jno
pusha
outsl
jecxz
inc
test
xchg
mov
push
dec
pop
sub
das
test
xchg
push
sti
out
and
xor
xor
inc
inc
push
push
inc
scas
xchg
pop
insl
adc
jecxz
in
pop
xor
push
dec
push
inc
xor
pusha
add
sub
mov
mov
adc
insb
outsl
xor
pop
shll
dec
mov
das
inc
push
and
into
sub
push
dec
pop
test
add
pusha
dec
inc
adc
fs
inc
push
mov
out
or
push
add
mov
popa
push
pop
dec
dec
dec
cmp
daa
mov
std
xchg
dec
dec
push
push
and
je
mov
mov
mov
or
sub
andl
xchg
pop
mov
inc
insl
nop
xchg
sbb
mov
popa
add
sbb
mov
cmpsl
jg
push
or
insb
cmp
idivl
lock
or
imul
in
nop
add
aas
pop
mov
push
data16
sbb
and
dec
das
lods
popa
mov
or
mov
sub
ds
enter
push
adc
dec
push
xor
xchg
pop
arpl
mov
iret
add
inc
add
add
dec
insl
or
mov
je
in
loope
in
jb
shrb
jg
pop
insl
mov
das
xchg
adc
pop
ja
out
je
pop
dec
test
arpl
mov
test
pop
push
jns
inc
xor
push
fwait
xchg
gs
pop
sbb
dec
lret
jbe
push
xlat
in
sub
in
xchg
push
iret
pop
xor
dec
lods
aad
es
mov
dec
or
push
xchg
cmp
sub
pop
jbe
inc
mov
add
and
sbb
jmp
orb
sub
mov
inc
or
shll
pusha
aam
xchg
xchg
push
and
mov
daa
out
pop
add
ficompl
cwtl
xchg
fstl
bound
mov
and
add
ljmp
mov
sbb
and
test
testl
data16
or
and
out
adcb
fs
fmull
mov
jbe
mov
fildll
push
cmp
mov
adc
test
pop
fldt
insl
addr16
dec
and
mov
aas
mov
outsl
inc
inc
mov
movsb
cmp
and
insl
or
pushf
push
popa
ja
pop
sub
mov
push
add
cmp
mov
xor
loope
pop
or
arpl
mov
xor
fsubrs
push
loope
push
jnp
xchg
cmp
adc
cmp
add
dec
adcl
add
mov
cs
xor
xor
ret
movsl
jb
jbe
xchg
xchg
in
dec
ret
daa
and
movsl
mov
lea
pop
mov
adc
xchg
bound
add
add
mov
dec
and
lods
gs
shlb
lods
iret
pop
xorl
out
push
dec
push
rcr
push
insb
dec
jno
ja
mov
add
out
and
cmp
les
sbb
add
fsubl
hlt
add
push
mov
es
add
insl
inc
cs
adc
xlat
xorl
ret
testb
jns
mov
add
je
or
fs
mov
hlt
ja
in
cs
rolb
xchg
bound
out
rclb
dec
mov
mov
mov
add
mov
sub
and
push
cltd
sub
push
mov
fiaddl
inc
adc
push
fwait
dec
xor
jle
jno
or
inc
lea
cmp
xchg
mov
addr16
push
xchg
or
sub
gs
pop
sbb
cmp
cmpsl
mov
push
je
cmp
xchg
sbb
adc
punpcklwd
adc
push
fcmovbe
mov
jae
push
dec
in
cs
inc
push
xor
idivl
cmpsl
xor
push
cmpsb
push
scas
mov
push
and
inc
add
jo
inc
dec
dec
dec
dec
push
imul
sub
js
fimull
imul
mov
dec
or
pop
push
or
sahf
daa
inc
cmp
repz
mov
push
or
daa
push
cmpsb
les
xchg
popa
out
clc
test
je
add
inc
inc
push
inc
dec
pushf
jne
mov
popf
add
jne,pn
lods
mov
sbb
scas
rorb
scas
xchg
xchg
addr16
dec
pop
jo
out
outsl
inc
orl
add
rorl
add
push
sub
adc
mov
pop
cmp
bound
lcall
mov
dec
xor
inc
dec
push
gs
movhps
add
imul
pop
add
jge
or
pusha
sbb
addr16
mov
addr16
add
push
bound
sbb
call
aas
push
mov
arpl
inc
pop
push
subl
lods
les
fwait
dec
xlat
or
add
aaa
pop
jg
push
jo
data16
test
mov
pop
dec
mov
addr16
pop
or
fimuls
add
inc
mov
idivl
pop
test
or
jg
adc
push
inc
push
lds
mov
or
mov
xchg
xor
inc
cmp
mov
mov
mov
sub
mov
cli
jae
dec
dec
jae
pop
sub
pop
push
dec
inc
sbb
sub
mov
cmpsb
outsl
test
push
push
pop
mov
fldl
inc
bound
add
fs
movsl
leave
ret
sbb
xchg
and
push
pop
and
adc
pop
push
cwtl
sub
sbb
jae
pop
es
pusha
mov
inc
sbb
pusha
xchg
test
sub
cmp
jns
adc
adc
sbb
fadds
push
add
add
add
and
and
inc
loope
lods
sbb
adcl
mov
daa
mov
push
dec
test
mov
add
pop
pop
enter
outsb
adc
stos
imul
addr16
pop
test
fs
ss
in
sub
pop
lret
dec
jo
adc
testl
and
jmp
pusha
pop
pop
fcompl
mov
adc
inc
andl
test
sub
fs
or
rclb
bound
pop
mov
add
iret
mov
dec
and
jne
fildll
mov
or
unpcklps
movsl
jno
inc
or
inc
imul
jb
inc
pop
jo
cmp
loop
decl
add
or
jo
sbb
push
daa
adc
or
mov
xchg
out
or
add
or
imul
xlat
aaa
mov
and
rdtsc
push
dec
cmp
jne
fs
sti
xchg
ret
pop
jg
push
add
popa
push
popa
fildll
insl
jnp
mov
mov
sbb
out
mov
or
lods
daa
movsb
cltd
cmp
xlat
ret
arpl
mov
push
cmp
xchg
nop
sbb
jns
and
push
lahf
or
or
push
sbb
arpl
push
push
push
jo
push
pop
ljmp
push
pop
push
sbb
push
cmpl
add
fiadds
ja
add
fldt
cs
jbe
sbb
sub
sub
xor
popa
xor
fs
ds
push
pop
punpcklwd
ds
lea
insl
popa
adc
inc
pop
rorb
dec
push
pusha
stos
lods
jno
jno
mov
xchg
arpl
aaa
mov
xchg
divl
ret
aaa
xchg
add
mov
add
and
add
sbb
mov
addr16
mov
inc
outsl
xor
sbbl
push
popf
aas
adc
aaa
push
imul
insl
imul
movl
sbb
test
sub
jo
mov
mov
mov
aaa
ffree
aaa
lods
sub
addr16
ret
jmp
imul
call
test
out
std
push
rcrl
dec
pop
lods
lea
jno
movsl
xchg
test
in
test
data16
adc
fstps
push
xchg
jg
data16
mov
mov
cmpsl
jb
push
push
jbe
mov
inc
cltd
push
sbb
jb
mov
cmp
imul
push
loopne
in
jo
outsb
dec
test
nop
sahf
das
nop
add
loopne
xchg
pop
outsl
mov
sbb
aaa
pop
jno
jne
fdivs
lock
xchg
cmp
or
je
or
push
or
jg,pn
push
addr16
jb
or
popf
pop
mov
pop
adc
aaa
adc
push
push
pop
xchg
sbb
jo
push
sub
xchg
arpl
jo
aad
xorl
mov
cmp
adc
adc
ds
push
sub
push
inc
dec
ja
outsl
pop
push
pop
push
mov
pop
dec
andb
loopne
adc
testb
push
xorb
ja
loope
lcall
js
cmp
dec
into
push
jo
pop
jae
insl
cltd
or
push
push
scas
jae
pusha
pop
add
mov
flds
pop
shll
inc
pushf
cmp
adc
sub
les
sub
pop
sti
adc
bound
es
outsb
cmp
outsw
addb
es
out
xchg
pop
pop
pop
fs
mov
adc
outsb
xchg
insl
adc
scas
aaa
mov
xlat
push
jmp
push
cmovb
test
mov
pop
into
cmp
or
mov
data16
mov
or
dec
popf
xchg
jbe
adc
cmp
pop
js
bound
scas
clc
in
leave
outsl
movsb
adc
jns
cmp
and
aaa
ficomps
sbb
sbb
add
add
adc
rcr
pop
pop
call
aas
scas
sub
mov
push
iret
mov
int
mov
pop
dec
add
es
out
mov
xlat
or
xor
popa
and
outsb
nop
je
pop
inc
or
inc
and
sbb
pmovmskb
push
outsl
xchg
push
sub
ret
adc
sbb
adc
sbb
jne
and
push
in
and
mov
popa
outsb
shll
iret
ja
pop
and
pop
outsb
mov
pusha
adc
or
push
int
jnp
dec
jp
jp
rolb
mov
mov
jns
pop
xchg
and
cvtpi2ps
in
mov
mov
dec
inc
push
inc
in
adc
call
cmpsl
adc
mov
push
sbb
cmp
xchg
aas
popa
push
arpl
pusha
xchg
das
scas
and
je
push
and
mov
add
mov
xor
mov
lock
or
xor
xor
pop
mov
dec
int3
mov
fst
sub
mov
xchg
push
or
lret
add
push
in
xor
inc
mov
sbb
push
in
dec
jno
mov
adc
ja
rol
dec
pop
adc
adc
pop
incl
pop
mov
decl
dec
clc
sbb
or
leave
push
cltd
jo
add
inc
int
push
test
mov
repz
push
mov
push
pop
push
add
xchg
std
lahf
ret
adc
sbb
dec
stos
mov
ja
lods
and
pop
movsl
lahf
imul
scas
dec
jb
push
sbb
push
dec
mov
sub
lahf
in
xor
push
jns
mov
movsl
cmpsl
or
fcmovnb
dec
xchg
mov
or
sbb
pop
mov
test
mov
xor
sub
xor
cmp
ja
mov
push
nop
les
mov
sub
push
movups
scas
in
addr16
rcrb
dec
in
movsb
push
sub
xchg
jae
mov
xchg
inc
mov
loopne
mov
dec
mov
les
and
daa
in
inc
popf
int
rdtsc
es
jo
xor
add
imul
xrelease
aam
xchg
ret
add
add
dec
imull
sub
and
dec
push
xor
rcrb
and
adc
push
or
inc
outsb
inc
sub
dec
rcr
movb
lret
testl
je
cmp
jbe
and
push
inc
inc
inc
dec
dec
dec
and
ja
sbb
dec
arpl
out
leave
lods
rclb
push
jp
inc
test
jp
lods
xchg
adcl
cmp
mov
xor
xor
mov
push
mov
movsl
mov
rcrl
out
pop
lcall
sub
les
fsubl
or
push
ss
outsl
inc
outsb
mov
jns
or
inc
push
add
inc
or
dec
cmp
test
sub
xchg
inc
out
es
sub
xchg
add
inc
pusha
and
mov
adc
dec
xchg
stos
fcoms
adc
xchg
das
add
add
jb
sbb
xorb
popa
add
mov
inc
jo
ja
fs
pop
add
mov
pop
push
shrl
dec
adc
dec
adc
test
jae
adc
shrb
mov
shll
add
ss
pop
mov
inc
mov
ret
xor
out
mov
lods
sti
jns
bound
mov
into
and
jno
ret
xor
inc
jno
push
adc
sbb
sub
sbb
xchg
adc
and
xor
aaa
dec
or
inc
loop
das
mov
or
mov
add
js
std
ds
jo
lods
or
xor
inc
jl
inc
sbb
jg
cmp
rolb
lret
js
inc
and
testl
cmpl
mov
adc
add
cmp
ret
movsl
movsb
pop
xchg
push
cmp
cli
push
call
add
inc
add
into
pop
loope
add
call
push
pop
in
aam
aam
dec
ret
pop
pop
pop
push
sub
cmc
inc
cld
decl
rep
mov
stos
push
push
push
push
mov
or
add
xor
add
test
ret
inc
insl
int3
pop
imul
mov
aad
jg
or
adc
xor
jg
or
pop
inc
arpl
ja
adc
xchg
ret
sub
imul
cmovbe
loopne
adc
push
or
mov
aas
cmp
cmpsl
xor
xor
xor
jmp
gs
test
sbb
mov
inc
mov
lods
push
arpl
jecxz
ja
out
daa
pop
push
jnp
push
inc
dec
push
pop
inc
push
push
sub
fdivrl
jne
dec
jp
and
push
lods
dec
rclb
mov
inc
cmp
push
cmp
iret
ret
mov
inc
jne
mov
sub
xchg
outsb
and
dec
push
push
inc
mov
pushf
inc
lret
xchg
test
ret
dec
repnz
push
imul
sbb
cmp
arpl
and
add
push
inc
inc
pusha
or
out
ficompl
inc
cltd
jb
test
and
das
loope
cmpsb
mov
xchg
and
sub
and
dec
mov
cmp
or
loop
jo
ss
addr16
or
add
js
outsb
lds
and
pop
ss
mov
adc
int
add
dec
inc
iret
push
test
int
push
pop
sbb
pusha
insl
inc
icebp
inc
xchg
je
out
pop
add
sub
icebp
and
shlb
cli
add
mov
push
mov
addb
add
cs
orl
popa
popa
sbb
cmpsl
arpl
pop
mov
shrl
nop
sub
dec
mov
or
mov
loopne,pt
pop
pushl
pop
sub
sub
mov
xor
jae
mov
outsl
aas
js
insb
clc
inc
loopne
mov
and
cmp
ret
dec
pusha
pop
stc
mul
addr16
inc
inc
push
cmp
jno
adc
enter
and
in
jo
mov
and
lods
lods
hlt
add
jo
pop
das
popa
nop
rolb
adc
or
sbb
addb
xor
mov
outsl
jecxz
sbb
inc
inc
push
inc
dec
and
out
fsubrs
pop
jae
daa
ss
addb
aas
mov
pop
add
push
popl
and
sub
cmp
repnz
fs
sub
dec
add
nop
add
adc
nop
add
sbb
add
and
add
test
das
push
pop
pop
stc
in
add
movsb
add
jns
and
outsl
pop
movsl
sbbl
insl
test
shll
rdmsr
add
in
mov
inc
or
mov
mov
in
call
jbe
jle
adc
push
ficompl
mov
xor
pop
jecxz
rcr
fsubp
inc
xor
adc
mov
push
mov
incl
lock
mov
or
add
add
scas
cmpsb
in
ss
jmp
roll
push
push
add
popa
addl
add
add
or
or
fs
or
or
or
jbe
imul
in
imul
and
orl
pop
inc
inc
sbb
insb
fcoms
push
das
push
xorps
pop
imull
push
and
dec
shll
sbb
push
pop
fdivs
orl
sbb
pop
xchg
sub
mov
xor
cmpsl
mov
into
aas
out
sbb
xlat
pop
sbb
add
dec
jnp
sbb
xor
xorl
popl
xor
add
xor
xchg
add
mov
inc
xor
mov
add
sbb
and
dec
mov
and
push
hlt
or
enter
shll
adc
dec
pop
ss
rcll
and
clc
pop
sbb
sbb
imul
js
push
lods
imul
push
js
xchg
push
lcall
roll
loope
xor
adc
icebp
insl
mov
mov
inc
aas
inc
adc
imul
xor
je
outsb
incl
addl
outsl
mov
add
cli
or
or
ret
seto
repnz
hlt
adc
out
cld
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
incl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
incl
popa
sar
mov
and
call
mov
outsb
dec
leave
fwait
xchg
and
and
mov
int3
add
sti
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
add
movb
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
outsl
mov
xchg
push
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
stos
mov
int3
or
add
hlt
imul
or
inc
xor
add
or
xchg
xor
jae
rclb
dec
inc
inc
push
aas
dec
or
sub
jbe
inc
pop
add
add
xchg
push
and
xchg
faddp
ljmp
xchg
outsb
fs
addb
flds
xchg
dec
xchg
dec
outsl
and
cmp
dec
pusha
pop
add
pop
xchg
sub
jo
insb
sub
jns
adc
imul
push
push
push
sbb
rcrl
jle
nop
jbe
inc
jns
outsl
push
lret
shrl
push
pop
out
nop
popa
inc
sub
push
imul
int
add
popf
test
sbb
lock
mov
adc
or
in
mov
shlb
je
dec
lcall
out
outsb
gs
mov
sbb
push
sub
sbb
jo
subl
dec
inc
jbe
add
push
adc
sub
inc
and
push
outsb
jmp
sbb
push
jo
mov
and
ja
inc
dec
sbb
xchg
xor
addr16
ret
fiaddl
sbb
jo
inc
add
mov
pop
xchg
or
jo
push
dec
inc
or
mov
adc
pop
cwtl
jbe
or
fwait
add
pop
lea
in
imul
jecxz
subl
sbb
or
mov
rorl
rcpps
add
or
arpl
dec
and
add
ret
mov
ret
shll
imul
xor
inc
outsl
push
push
inc
inc
pop
aad
add
inc
jb
test
xchg
add
mov
fistpl
and
ja
xor
outsb
outsl
fcmove
inc
popa
cmp
add
stos
and
aam
inc
pop
rol
add
jo
adc
insl
gs
mov
shl
daa
xor
ja
fstl
rcl
cmp
adc
inc
pop
cmovg
adc
push
popa
popa
bound
movsb
xchg
sbb
or
imul
das
dec
inc
je
sbb
push
cld
push
inc
addr16
adc
test
js
xchg
xchg
insl
roll
mov
pop
push
fisttpl
mov
fistpll
and
lods
jns
push
je
ja
imulb
int3
in
dec
test
inc
pop
pop
ss
fsubrs
insb
call
add
inc
mov
add
add
add
loopne
sidtl
add
lahf
pusha
ret
cld
xor
add
nop
movsb
mov
fistl
pop
adc
lret
push
stc
rorb
sbb
push
xlat
addb
push
sbb
or
jl
inc
jle
or
add
scas
xchg
add
jne
xorb
movsl
and
jae
rolb
jb,pn
neg
lds
adc
mov
add
mov
int3
in
dec
jo
add
dec
out
add
mov
aas
enter
es
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
