xchg
xor
inc
ja
into
cmc
pop
test
adc
lret
aas
pop
xchg
andb
mov
subb
jge
fsubrs
inc
mov
jne
push
push
jnp
xchg
stc
aaa
cmp
cli
inc
mov
inc
es
popf
popa
jae
test
adc
cld
stc
xchg
repnz
out
iret
jmp
pushf
leave
sub
cmp
cld
or
stos
paddsb
mov
dec
sbb
sbb
filds
ror
xchg
sub
fwait
pop
mov
fcoms
fs
test
cmp
ret
sbb
and
fldenv
sub
mov
or
into
test
add
mov
js
jle
pop
int
divl
and
aad
pop
mov
in
and
cli
mov
test
jne
cmp
lods
mov
jge
push
adc
cmp
jmp
cmp
pop
dec
shrl
xchg
test
cmp
push
cltd
arpl
sbb
in
je
enter
xlat
stos
std
or
push
aaa
mov
arpl
xor
adc
or
inc
push
aam
inc
hlt
jno
cmc
inc
and
inc
mov
jecxz
lds
pushf
or
adc
or
les
dec
sti
jge
scas
mov
hlt
xchg
jle
xchg
lret
adc
jmp
stos
leave
sub
repz
sub
lcall
mov
xchg
xchg
shll
push
cmp
or
mov
repnz
jg
testl
ror
sbb
leave
push
icebp
js
sub
cli
jl
repnz
and
in
add
stos
jo,pn
and
or
jne
aam
test
mov
nop
mov
add
mov
gs
loop
test
cmp
fs
fwait
xor
js
mov
mov
js
roll
add
sub
xchg
xchg
mov
cs
gs
mov
out
ds
add
aas
mov
insl
test
stc
negb
xlat
test
xlat
xchg
ficomps
loope
cli
push
pushf
cmp
in
in
jp
test
lods
mov
add
sbb
ret
test
ret
pop
sarl
or
jae
sbb
mov
mov
push
es
insl
in
dec
mov
push
fisubl
fcoms
push
dec
mov
out
dec
jg
dec
pop
xor
test
push
jp
sbbb
cmp
xor
out
mov
cmp
pop
mov
add
cwtl
dec
lahf
movnti
push
aaa
loop
add
xchg
pop
mov
pop
cmp
xchg
lret
lahf
loopne
mov
imull
push
or
lea
xor
dec
inc
add
cwtd
dec
mov
push
mov
xor
in
sbb
ljmp
into
movb
pop
sub
push
fsubl
sbb
int
inc
xchg
pop
xchg
lret
pusha
lret
sub
inc
andb
or
and
movsb
stos
movsb
out
jecxz
pusha
inc
fisttpll
loopne
jg
repz
repnz
bound
jnp
and
movl
pop
icebp
push
ret
sbb
xchg
jecxz
in
mov
call
cmp
out
mov
inc
and
inc
dec
xor
push
mov
movsl
fiaddl
lcall
out
push
jle
sbb
push
or
repz
aaa
cmpsl
into
arpl
xor
pop
pop
adc
mov
rorl
gs
ret
cmp
rclb
xchg
nop
mov
pop
call
test
dec
or
daa
insb
push
ljmp
and
add
arpl
lret
das
out
jp
adc
pop
daa
add
or
shr
or
xor
xchg
xchg
ljmp
ds
mov
std
cmp
mov
ss
cmc
xchg
xor
test
movl
popa
xchg
mov
xchg
rclb
mov
dec
mov
arpl
fldcw
mov
inc
adc
insl
push
clc
and
pop
or
popa
mov
pop
imul
jp
xchg
mov
fs
pop
sahf
sbb
xchg
sbbb
or
adc
cmp
lock
lret
scas
and
rep
ja
jmp
out
push
or
fiaddl
incl
jecxz
sbb
adc
xchg
rorl
les
lock
roll
test
push
add
enter
stos
inc
xchg
jno
ljmp
jp
mov
lret
mov
mov
xchg
rorl
nop
sub
cli
jo
push
rcrb
cmpsb
xor
inc
leave
push
movsl
stc
cwtl
pushf
into
hlt
sub
xchg
mov
int
and
and
ror
lret
mov
and
ja
sub
adc
add
mov
inc
mov
cmp
popf
inc
jne
mov
fcomps
mov
lcall
add
test
xor
pop
adc
arpl
mov
out
pushf
mov
cltd
xor
push
std
inc
mov
das
aaa
in
cmp
out
and
ret
cltd
ljmp
jmp
cwtl
mov
iret
mov
movsb
mov
mov
xchg
jmp
mov
inc
test
hlt
xchg
lods
fmuls
data16
cmp
in
gs
ljmp
aad
or
push
xchg
mov
aas
jae
xchg
std
data16
push
adcb
cltd
and
or
dec
iret
ficompl
push
and
rcrb
jne
insb
push
cli
or
mov
lret
dec
aad
xchg
pushf
xor
xchg
mov
xor
cltd
mov
mov
nop
cli
adc
jb
jp
lahf
push
mov
insl
and
mov
pop
push
pop
mov
das
xchg
mov
loope
or
repnz
ds
shrb
pop
jno
add
xor
bound
sbb
cmp
fwait
sbb
popf
pushf
into
loopne
cmpsl
nop
aam
pop
sub
push
and
xchg
addl
add
in
inc
cmp
int
cmp
mov
lock
or
xlat
js
cmp
dec
and
dec
mov
adc
pop
fs
data16
cmpsl
test
out
pop
pop
and
dec
xor
or
mov
dec
je
lcall
movsb
inc
decb
movsb
lret
push
sub
imul
mov
xor
pop
pop
lods
into
lret
ja
push
mov
cli
xor
add
mov
insb
adc
out
inc
fisttps
dec
add
ss
cmp
lods
inc
popf
shr
push
ret
cmpsb
mov
sbb
mov
jae
push
sub
mov
jge
pop
pushf
lcall
data16
mov
mov
scas
pop
mov
mov
xchg
xchg
inc
popa
sbb
sbb
pop
js
xor
icebp
lods
pop
mov
mov
jae
sbb
stos
and
pop
cmp
dec
mov
xchg
popa
scas
mov
fdivrl
push
xor
mov
pop
and
mov
loop
nop
stos
add
or
push
test
shrb
pop
jg
push
jl
popf
sub
pusha
and
xorb
xor
jo
and
mov
in
sti
movsb
mov
repz
xchg
sub
js
outsb
lret
sbb
xorl
cmpsb
push
sbb
inc
lea
jo
cld
push
mov
mov
push
sbb
mov
imul
xchg
or
aaa
mov
jbe
sbb
or
enter
xchg
push
sbb
aas
pop
mov
fwait
lock
mov
pop
pop
pop
adc
sbb
add
rcrb
popa
mov
mov
inc
test
dec
dec
cmp
and
push
jbe
and
jae
int3
push
enter
lock
mov
clc
or
rolb
int
xor
mov
iret
dec
push
cli
jp
test
inc
or
movsl
jmp
cmp
jge
jp
iret
cld
mov
fwait
and
mov
inc
jg
inc
and
cwtl
mov
ret
and
cmp
out
andl
int
iret
adc
cmp
jne
js
stos
aaa
or
adc
xchg
insl
dec
pop
roll
cmc
rcr
inc
js
stos
fmuls
scas
leave
pusha
ja
xchg
mov
mov
mov
into
add
push
pusha
push
push
jge
enter
pop
dec
in
add
loopne
loop
inc
mov
cmp
jo
cmp
push
inc
fstp
lock
push
popf
in
inc
adc
pop
jmp
fwait
mov
fs
xor
push
push
fs
jg
cltd
scas
cltd
pop
outsb
push
cmpsl
xor
ret
in
stos
mov
jnp
fldt
mov
loopne
sub
popa
xchg
add
pusha
sahf
cltd
das
lret
repnz
cmpsl
rcll
mov
or
jo
jmp
mov
lock
pop
mov
stos
jno
out
pusha
popa
pop
sbb
inc
cmp
xchg
imul
cmp
testb
mov
shll
push
jl
std
pop
sub
dec
or
fwait
outsb
jb
insl
adc
pop
das
das
sbbb
filds
aad
ror
test
rcl
cwtl
loope
mov
call
and
or
cmp
mov
jecxz
mov
repnz
rcll
sbb
sbb
popa
insl
stos
les
stos
insb
ucomiss
jae
shl
cltd
pop
xor
jp
pop
jge
rcrb
push
lds
int
xor
dec
lret
push
adc
repz
xlat
or
leave
lea
mov
cmp
mov
pop
mov
pop
ljmp
orl
push
push
or
lock
mov
lods
outsb
pop
cmc
mov
inc
shll
cmp
sbb
or
cmp
enter
or
push
in
push
push
mov
clc
int
adc
or
mov
mov
mov
pop
insl
mov
faddl
xchg
xchg
jg
nop
mov
dec
das
inc
fisubl
jmp
cwtl
inc
mov
loop
xchg
test
mov
loope
push
fisubl
inc
orl
cmc
or
jne
jo
test
xchg
xorl
mov
mov
jge
adc
iret
lds
cmc
sti
je
mov
and
arpl
fmull
shl
pushf
dec
and
and
lret
insl
test
aas
mov
pop
and
mov
loop
daa
sbb
xlat
outsb
and
sti
pop
repnz
mov
add
sti
fucompp
lahf
sub
mov
cld
aas
test
and
scas
inc
shll
outsb
outsb
mov
add
ret
not
add
and
loope
dec
lods
enter
sub
sub
push
cmc
std
test
mov
or
pushf
xor
push
sbbl
mov
mov
test
call
cmpsl
sub
test
jl
pop
mov
pop
neg
jbe
test
mov
push
fisubrs
pop
adc
push
mov
ja
ds
ficoms
cmpsb
aam
mov
jle
outsl
orl
mov
mov
call
jns
inc
mov
jnp
rcrl
xchg
xor
ret
cmp
cmpsb
mov
sub
push
mov
cmp
dec
sti
xchg
in
mov
jb
gs
push
mov
out
pop
out
ds
sbb
jnp
rclb
repnz
scas
push
lods
cs
add
mov
pop
push
fwait
in
jae
push
dec
mov
push
sub
mov
repnz
push
lret
addr16
cmp
lret
cmpb
push
jg
aad
push
add
stos
jg
sahf
dec
cli
adc
test
test
push
test
cmp
pusha
scas
pop
push
lret
std
and
jo
inc
lods
sarb
fidivs
add
dec
cmp
jbe
jno
ljmp
mov
sub
mov
test
add
rorl
aad
mov
or
dec
jmp
ror
cmp
pop
xor
push
xchg
call
adc
mov
out
testb
movsl
ds
mov
adcb
gs
aam
rcll
jb
sub
ret
loopne
js
mov
cmp
in
and
inc
psubusb
repz
addl
loope
add
fcompl
xchg
out
fcmovnbe
push
mov
push
call
in
test
jp
test
daa
inc
dec
ja
inc
pop
int
outsl
fbstp
cltd
fildl
mov
jmp
xchg
shr
mov
cltd
ja
lds
fisttpll
mov
out
or
mov
sub
cli
mov
daa
jno
push
idivl
push
fsubs
in
mov
rcll
in
je
inc
int
shll
ja
xchg
sub
pop
push
dec
add
ljmp
pop
outsl
mov
or
movsl
movl
loopne
lret
sbb
lret
and
aam
movsl
ljmp
sub
or
dec
leave
jae
faddl
fbld
iret
push
push
adc
mov
dec
loope
mov
and
fs
push
daa
repnz
adc
popf
ja
clc
je
mov
aam
stc
fcompl
cld
adcb
xorb
ds
dec
push
mov
jne
sbb
test
xchg
leave
notb
in
or
iret
dec
xchg
inc
dec
enter
sbb
ds
add
loopne
addl
stos
and
addr16
cmpsb
adc
jecxz
fstps
push
dec
repnz
mov
int
push
xlat
or
add
mov
fcmovnbe
or
mov
andl
shr
xchg
rcrl
sbb
or
in
stos
mov
pop
pop
xchg
jae
addr16
add
adc
xchg
outsb
es
lods
jbe
inc
js
les
das
fst
push
sub
or
xor
adc
lods
pop
enter
and
cmp
xor
dec
pop
lds
addps
es
in
jge
jmp
dec
ds
xor
test
fldcw
sbb
xchg
xchg
outsb
sbb
sahf
fsubs
push
xchg
inc
dec
adcl
jmp
jno
push
pop
jmp
lds
xchg
ret
push
imul
xchg
rolb
mov
cmpsl
jge
and
out
cltd
pmulhw
lcall
xlat
call
push
pop
pushl
in
hlt
xchg
add
or
adc
and
jbe
stc
jmp
inc
pop
pop
cli
testl
dec
cmove
jne
pop
fcoml
xor
or
dec
roll
sbb
sbb
mov
xchg
sub
xor
fidivl
sub
xor
dec
add
es
sti
or
xor
jp
leave
xchg
xor
lods
inc
pushf
pop
shrl
scas
mov
lcall
js
mov
or
add
sub
insl
sbb
jne
stos
icebp
sub
movsb
mov
xor
cmp
jno
sbb
addr16
insl
in
sbb
adc
enter
xchg
xor
out
xor
xchg
adc
jb
mov
bnd
push
out
cmc
into
sbb
pop
adc
xchg
aaa
mov
test
push
test
dec
inc
pop
fs
sbb
notb
xor
into
out
jl
dec
add
inc
push
aaa
cltd
mov
loopnew
push
stos
xchg
push
fwait
xchg
jnp
lahf
lahf
adc
jp
inc
sub
and
scas
js
dec
pop
sbb
bound
jl
adc
inc
pop
enter
test
pop
xor
loope
sbb
sub
test
notl
add
sub
cmpl
mov
loope
pop
pop
addl
and
ret
mov
cmpsb
jle
ror
iret
inc
clc
mov
and
dec
repnz
adcb
stc
pop
mov
loopne
mov
mov
xor
sub
lods
pusha
movsl
push
mov
icebp
adc
rcl
clc
aad
lcall
in
testl
push
cmp
sub
mov
rorl
stc
ret
ljmp
test
out
pop
pop
pop
cs
xchg
xor
pop
or
call
rcl
add
jo
pop
sbb
fisubl
push
mov
inc
es
loop
jbe
pop
rcll
cmp
dec
mov
in
jb
cli
xlat
jbe
lret
lahf
dec
call
rolb
push
or
aam
jae
bound
insl
cmp
sbb
mov
sub
sbb
cmp
mov
and
fucomi
cli
cltd
mov
std
std
xlat
ss
popf
cmp
ds
mov
das
push
adc
adc
outsl
sbb
mov
push
or
aam
jnp
mov
sub
pop
test
pop
stos
lcall
loope
sbb
push
ficoms
leave
int
fwait
dec
lahf
push
call
and
mov
mov
nop
or
imul
xorb
dec
divb
sub
mov
adc
sbbb
push
mov
stos
push
lret
cwtl
adcl
xor
dec
jae
cmpsl
push
rorb
mov
sub
inc
ss
inc
add
lods
lret
and
mov
dec
ret
outsl
lods
popa
add
loop
pop
jl
jb
jbe
add
adc
cli
fs
out
das
lods
call
jne
xor
outsl
push
daa
lret
aas
daa
cmp
lock
xchg
sbb
test
inc
add
mov
pop
mov
daa
xchg
int3
mov
sbb
xor
clc
pop
xchg
cmp
std
xchg
rorb
insb
pushf
les
loop
in
addb
int
ds
xchg
outsb
or
int3
adc
pop
inc
and
jecxz
fnstsw
adc
lcall
xchg
fcomip
adc
xlat
jne
imul
push
jne
or
hlt
sub
lret
fcomps
xchg
mov
sub
jle
push
test
push
data16
mov
mov
sahf
enter
pop
xchg
push
int
sbbb
data16
mov
mov
pop
pop
cmp
jne
ret
inc
aaa
mov
sub
mov
js
icebp
mov
jmp
pop
test
fbld
ror
stc
push
rcrl
imull
not
cld
stc
add
ret
mov
cli
je
das
out
cmp
fistpl
mov
int
outsl
jp
inc
bound
fstps
lods
in
mov
pop
mov
cmpl
pop
add
push
push
inc
imul
cmp
sbb
and
je
imul
mov
loop
arpl
rcll
jmp
imul
add
xchg
add
repz
imul
jo
imul
sub
push
add
test
sbb
int
out
pop
call
add
out
pop
aad
dec
jns
xor
mov
mov
inc
repz
out
imul
shrl
inc
je
imul
add
add
mov
mov
test
gs
mov
fldt
add
test
std
or
xchg
in
pop
je
inc
xchg
mov
cmc
loopne
push
add
ret
shl
dec
dec
fimuls
inc
out
shlb
lods
lock
mov
pop
pop
jbe
loope
pusha
stos
outsb
int3
ret
std
cmp
inc
jmp
sub
nop
jnp
jle
icebp
and
xchg
dec
jb
leave
inc
out
lret
aad
mov
pop
test
and
addr16
cs
seto
push
pop
out
notl
sbb
test
and
and
lret
mov
sub
push
loopne
add
mov
push
lock
mov
xor
shll
ljmp
sbb
stos
dec
lods
outsl
shll
mov
sub
stos
cld
aaa
push
add
sbbl
push
nop
imul
js
mov
test
and
ja
cmp
cmp
fwait
cmpsl
xlat
and
xchg
call
sub
cmpsb
xlat
mov
lea
dec
pop
ret
mov
dec
xchg
repz
mov
xchg
dec
lock
inc
add
aas
lahf
xchg
inc
xchg
sahf
inc
mov
or
dec
pop
xchg
stos
sub
inc
pop
outsb
mov
in
jg
cs
repnz
sub
or
xchg
pusha
or
repnz
js
and
bound
aas
mov
stos
test
movsw
jecxz
mov
adc
jno
in
orl
sbb
jae
push
jmp
andl
inc
or
jle
aam
mov
cltd
daa
pop
ja
jg
popf
mov
ud2
push
adc
ret
mov
iret
hlt
fdivrs
ss
cli
cmp
cld
mov
lods
push
je
sbb
sahf
xor
loope
mov
adc
outsl
dec
cmp
ss
test
test
aam
sbb
loope
andl
sbb
stos
test
call
sbb
xchg
push
mov
sub
inc
in
pop
repnz
push
xorb
repz
movsb
imul
and
ret
jmp
mov
out
mov
mov
mov
xchg
jae
clc
jg
jge
push
mov
sub
mov
or
ficoms
and
mov
mov
or
mull
cmp
xchg
pop
jnp
sub
mov
cs
sub
inc
lret
cmp
inc
movsb
fcmovnb
les
mov
mov
jg
xchg
cmp
inc
dec
into
sub
inc
or
icebp
or
cmp
mov
mov
xchg
sbb
sub
xchg
push
mov
or
push
push
ffree
and
dec
lods
cmp
mov
cli
cli
xchg
int
lods
push
decl
aas
adc
nop
jmp
mov
les
negb
push
cmp
pop
mov
ror
dec
fadds
push
mov
or
loope
cmp
loopne
popa
mov
and
dec
fistps
loopne
mov
cmpsb
loope
std
mov
xor
inc
stos
dec
pop
or
jg
popf
jne
sti
mov
push
sub
leave
add
ljmp
andl
add
sbb
mov
xor
stc
and
sbb
les
popf
mov
sbb
aad
pop
push
mov
mov
pop
nop
fstl
fidivs
or
and
push
psubsw
lahf
int3
mov
or
aaa
cmp
out
sub
je
and
clc
test
mull
add
imul
test
push
fldt
sub
dec
inc
and
nop
xchg
push
sbb
xchg
push
cmp
or
out
mov
or
out
idivl
das
sbb
jns
xchg
loop
and
xchg
pop
add
sti
mov
xor
ficompl
cmp
mov
or
jecxz
or
cmp
hlt
mulb
movsl
mov
les
cli
xor
add
iret
push
pushf
xchg
mov
jae
daa
mov
xchg
mov
jg
popf
adc
idivb
or
outsb
push
jl
push
movsl
or
jl
clc
fldenv
and
aaa
jl
hlt
inc
adc
mov
mov
movsl
and
daa
jle
add
dec
dec
ljmp
push
sub
dec
sbb
pop
mov
inc
push
lods
shr
and
mov
or
cmp
mov
add
push
icebp
mov
daa
add
out
or
cmpsb
sarl
mov
out
in
adc
subb
push
pushf
pop
inc
cmp
cs
cmp
imul
nop
ja
cmc
int
shrb
in
pushfw
push
jb
inc
int3
les
mov
outsl
or
xchg
push
jle
movsb
shll
pop
in
subl
sub
andb
push
inc
pop
imul
lods
add
mov
inc
xchg
rcrl
mov
push
push
mov
sbb
cs
fmuls
jae
lcall
shl
ds
mov
insb
xor
xor
cmpsl
add
pop
ds
pop
in
dec
or
push
gs
mov
and
out
adc
xchg
test
cmp
add
addr16
and
cs
imul
aaa
pop
mov
mov
sub
sub
fucomi
fdiv
mov
jmp
xchg
mov
and
xlat
cltd
mov
lret
push
iret
in
mov
sub
insb
inc
mov
mov
cmp
leave
xor
adc
and
push
jp
test
mov
mov
jns
dec
sarl
push
inc
pop
pop
mov
lds
es
push
and
outsb
pop
cmpsb
test
and
mov
lret
sub
mov
stos
loopne
outsb
cmpsb
lea
mov
bound
icebp
xchg
mov
jo
sar
mov
mov
pop
mov
ljmp
cmpsb
sbb
push
dec
jle
inc
mov
fistpl
cmp
mov
mov
jae
scas
das
imul
loopne
mov
push
push
setl
xchg
mov
dec
cmp
push
sbb
or
popa
nop
push
gs
ss
jne
lock
lcall
aas
mov
push
test
enter
sbbb
push
mov
add
xchg
aas
mov
aas
adc
int3
xchg
ds
mov
adc
sbb
cld
lret
or
jb
inc
xchg
cmpsb
fsub
nop
dec
mov
pop
or
ret
aaa
or
dec
add
dec
sbbl
xchg
lcall
sub
push
adc
add
or
data16
int3
mov
cmp
adc
jae
and
into
xchg
push
jg
mov
xchg
dec
leave
mov
insl
adc
or
mov
xorl
adc
mov
jns
and
iret
adc
ret
cmp
pop
jle
jb
push
scas
sub
pop
adc
aas
mov
jno
test
mov
or
addr16
mov
call
and
mov
sbb
sub
neg
test
push
sbb
ss
inc
lret
jne
pop
neg
push
inc
pop
cld
or
int3
or
decb
insb
dec
repnz
push
push
sbb
call
push
outsb
xor
and
add
gs
mov
cmp
cmp
mov
or
mov
dec
idiv
into
jp
lret
jg
and
stos
testb
add
mov
outsb
shll
or
jnp
mov
adc
sbb
push
dec
sub
stos
xchg
fists
or
add
push
mov
js
scas
ss
ljmp
cmpb
inc
and
mov
mov
lock
cmp
adc
pusha
int3
call
movsl
and
push
lock
repz
push
out
fstpt
lods
js
mov
cmp
mov
cmp
sub
jmp
dec
push
movsl
xchg
mov
das
and
mov
shl
arpl
ja
pop
sub
movsl
pop
aad
daa
bound
mov
mov
mov
jnp
subb
jp
and
int
cmp
mov
or
push
nop
int
jmp
cmpsl
adc
cltd
sub
xchg
add
mov
jno
aaa
mov
push
into
cs
push
andb
lods
cmp
aad
mov
jae
add
inc
add
cmpsb
add
sahf
iret
inc
jecxz
sub
pop
das
mov
out
add
and
push
adc
cmp
lea
inc
imul
mov
xor
es
mov
sub
in
or
outsl
fwait
testl
cwtl
xor
insl
ret
mov
test
repz
mov
jmp
dec
mov
xor
mov
and
inc
inc
dec
mov
outsl
movsb
dec
arpl
out
inc
sbb
sbb
scas
inc
pop
cmp
pop
rol
inc
stos
mov
xor
ss
cmc
ds
dec
sub
fisubrl
dec
sbb
out
inc
jmp
int
pavgw
xchg
mov
call
sub
aad
cmp
mov
add
mov
outsl
mov
aad
push
mov
push
inc
dec
mov
repz
movsl
dec
mov
call
push
mov
mov
ror
xor
add
adc
arpl
inc
inc
rol
je
pop
fwait
icebp
popa
ds
jae
mov
lea
testb
jmp
lret
lcall
ds
dec
xchg
push
cmpl
inc
fcmove
pop
dec
or
jnp
lds
mov
lods
cld
call
shr
xchg
push
mov
jg
lea
call
mov
fmull
orl
loope
pop
shlb
adc
lods
insl
jnp
lahf
mov
imul
fwait
insb
arpl
add
subl
stos
sub
xchg
cmpsl
cli
adc
add
dec
cld
and
add
cmp
jo
sub
leave
rcll
ss
pop
xlat
je
and
adc
mov
adc
inc
sbb
aaa
cmp
sbb
jne
push
jmp
mov
aam
sbb
call
stc
or
outsb
xchg
cmpsb
loope
pushw
mov
or
push
scas
xor
adc
frstor
mov
inc
nop
jbe
sbb
ret
xchg
and
mov
int
jl
mov
mov
and
xor
arpl
adc
aas
and
cltd
aaa
mov
pusha
lods
jp
pop
xor
notl
xor
shll
sub
ret
mov
outsb
mov
fistpll
pop
push
js
and
cmpsb
xchg
dec
out
cld
fisubl
lods
pushf
push
jle
mov
add
inc
jno
xchg
mov
andl
dec
iret
ret
mov
bound
sbb
and
inc
aam
cmp
sbb
mov
adc
fwait
sti
sbb
xchg
loope
ds
fnsave
mov
xorl
test
fbld
mov
inc
pop
les
in
mov
mov
mov
fmull
aas
push
call
stos
xor
aad
stos
dec
jge
cmp
insl
fwait
movb
shll
rcrb
je
or
xor
lods
sbb
dec
and
add
and
aam
test
gs
outsb
adc
jg
push
ret
inc
jmp
jmp
jb
stos
adc
jg
jb
mov
xlat
pop
push
jecxz
pop
popa
out
ds
sub
in
pop
add
mov
jmp
and
iret
jne
sbb
jae
arpl
mov
lret
ret
nop
out
dec
in
insl
mov
insl
mov
add
scas
loop
add
outsb
dec
jae
sbb
lods
and
xchg
mov
or
stos
add
sbb
out
and
mull
hlt
out
aaa
pop
fstpt
lahf
pushf
outsb
addb
push
jl
jl
cmc
xchg
repz
fs
or
data16
dec
jno
setbe
mov
daa
xor
negl
or
push
add
repnz
xchg
xlat
pop
adc
and
addr16
aas
out
mov
dec
xlat
cmp
sbb
repnz
repnz
push
sub
mov
xor
repz
sub
divl
aaa
mov
cmp
out
jge
aaa
out
pusha
xchg
sub
dec
lods
cmp
shrl
adc
sar
js
mov
fnstsw
in
mov
fadds
ficoms
pusha
scas
cmc
jge
push
mov
push
pop
int
rcrl
std
pop
out
inc
mov
stc
xchg
xor
daa
mov
cmp
jg
sub
fwait
jnp
or
pop
pusha
mov
sti
cmp
cli
into
outsl
loope
push
sahf
cli
call
xlat
scas
mov
pop
pop
dec
int
or
mov
outsl
icebp
fsubr
fwait
sub
sub
push
mov
push
dec
shll
fs
push
dec
sbb
movsb
pop
add
pop
push
cmpsb
adc
pop
aad
xchg
negl
insb
repnz
add
cmp
lods
mov
in
sbb
push
mov
xchg
daa
incb
cmp
outsb
mov
xchg
lcall
in
scas
cli
push
jno
jg
lahf
mov
cli
mov
mov
aad
es
int
int3
and
dec
mov
jns
fisubrl
mov
add
nop
xchg
rcr
adc
movsl
in
in
xor
pop
jne
inc
into
sahf
pop
mov
sbb
rolb
mov
daa
imul
jo
dec
icebp
mov
sarl
push
mov
ljmp
and
loop
insl
fbstp
fistps
sbb
and
mov
gs
push
addl
mov
mov
in
sub
jo
pop
out
imul
ds
pop
xchg
and
test
push
in
shr
or
mov
jg
in
cmpsl
adcl
subl
add
xlat
mull
xchg
aaa
rorl
mov
cmp
sub
lret
scas
cmp
sbb
mov
cwtl
in
fwait
ret
pop
push
sarb
fwait
aaa
fwait
in
sub
test
xor
inc
xchg
push
cmp
and
inc
clc
adc
iret
subps
pop
mov
sbb
sarl
sti
mov
adc
orl
sub
fcom
pop
mov
mov
js
inc
sub
adc
mov
adc
xor
cltd
loopne
xor
xchg
fistps
and
inc
ret
and
jnp,pt
test
fwait
and
out
mov
add
add
mov
cltd
or
sub
lret
jb
fstl
add
jg,pn
sbb
sbb
xorb
jno
xchg
push
imul
out
aas
scas
aaa
xor
cmp
sarl
ds
mov
daa
fwait
das
call
pop
jno
mov
or
push
xor
lahf
js
inc
les
jle
lahf
xchg
popf
popf
enter
cmpsb
xor
idivl
and
std
and
daa
test
push
push
push
not
fbld
negl
in
push
cmpsl
in
std
jo
movsb
sub
dec
mov
stos
jo
xchg
xchg
jmp
push
inc
push
and
jae
cltd
loopne
jp
test
xlat
stos
xchg
jnp
popa
insb
lret
filds
mov
bound
cmovns
xchg
clc
ljmp
fistl
push
jno
adc
js
or
enter
cmp
in
mov
inc
adc
stos
in
js
pop
lret
shl
ret
jno
rolb
roll
cltd
jnp
cmpsl
int3
cltd
jne
ljmp
mov
insl
push
popf
jle
push
lret
mov
pop
stos
stos
ljmp
cmpsb
int3
addl
or
sbb
data16
inc
adc
repnz
pop
addr16
push
mov
jp
sbb
dec
cltd
roll
inc
inc
jp
sbb
shlb
fcmovbe
test
leave
test
mov
and
repz
cmp
fcoms
push
jmp
dec
out
xchg
fldl
add
inc
dec
pushf
and
pushf
xlat
xor
lcall
jbe
test
aam
mov
aas
pushf
lds
pop
jo
out
cmp
and
and
icebp
out
pushf
add
pop
mov
fists
inc
or
pop
call
scas
mov
in
push
std
adc
rolb
mov
sbb
push
xor
cmp
sbb
int3
cmp
test
xor
iret
stos
push
sbbl
adc
jbe
adc
push
xchg
sub
out
aad
imul
les
data16
sti
pop
jo
xchg
mov
mov
lahf
jbe
out
dec
int
jbe
inc
int
push
dec
jg
xchg
test
cld
fidivrs
pop
pop
test
leave
pop
xor
push
mov
repz
inc
loopne
sahf
lds
lds
cmp
mov
cmp
mov
fiaddl
or
inc
inc
xor
sub
push
gs
sarb
mov
ret
jns
scas
sub
inc
ljmp
mov
aam
ffree
jno
jns
cld
push
lret
cmc
sub
inc
out
fimuls
or
fwait
sti
imul
dec
mov
mov
cli
shll
in
xchg
in
cmc
testb
xchg
dec
scas
cmp
push
sub
dec
pop
clc
push
xor
mov
jne
decb
xchg
les
stc
into
sbb
js
xor
push
cmpsl
std
sbb
sub
bound
add
mov
sub
or
push
mov
xor
push
cmp
in
xlat
outsl
pop
or
lret
test
das
pushf
incl
iret
and
lock
lcall
pop
fidivrs
mov
inc
sarb
aaa
aam
sbb
dec
xchg
sbb
add
arpl
int
das
pop
popf
nopl
mov
jg
inc
sub
shrb
ljmp
cld
adc
inc
xchg
cmp
arpl
jb
mov
loop
push
scas
repnz
ret
fwait
ljmp
or
out
xor
outsl
xchg
call
ror
into
push
adc
dec
push
jae
test
aam
mov
ds
sub
jo
sub
inc
cmc
rcl
sub
cli
out
inc
aas
je
inc
push
fldcw
jecxz
xchg
mov
fadds
imul
cmpsb
shl
mov
pop
or
repz
arpl
clc
cs
mov
out
adc
dec
in
push
xor
aam
or
xchg
divl
cmp
popa
xor
mov
divl
imul
fs
mov
xlat
inc
sbb
cmp
dec
ficompl
shlb
movsl
notb
xor
xchg
push
js
adc
mov
sub
icebp
push
xchg
lea
mov
xchg
xchg
adcb
dec
mov
test
xchg
sub
scas
pop
sar
outsb
cmpsb
idivb
test
xchg
xor
enter
dec
lret
mov
daa
imul
cmpsl
into
sbb
and
xchg
je
push
cs
fwait
and
outsb
sahf
jo
ret
inc
mov
ljmp
sbb
clc
cmc
hlt
and
test
in
sbb
roll
lds
imul
insl
rol
fadds
loopne
aam
es
sub
sub
sbb
ds
xchg
pop
inc
cmp
xchg
test
pushf
mov
and
in
mov
rolb
jno
js
add
sbb
loopne
stos
fidivrs
dec
or
inc
ficoms
jb
adc
mov
in
add
shl
es
insl
pop
loop
xor
dec
pop
dec
push
fbstp
mov
mov
xchg
fsubp
call
das
mov
loop
inc
lret
sub
fwait
xor
loop
mov
jp
leave
mov
pop
repz
inc
and
outsb
lods
ds
mov
fwait
push
dec
popa
cmp
cmp
mov
add
rcrb
test
adc
mov
inc
fwait
icebp
loop
adc
out
xchg
lret
movsb
pop
sbb
mov
inc
addl
inc
sbb
jno
sahf
jmp
mov
mov
inc
dec
push
pop
sbb
std
cmc
imul
jp
mov
add
scas
rol
cli
js
sub
mov
repnz
ret
mov
shrl
or
popf
sub
and
mov
idivl
xchg
sahf
out
loop,pt
insl
adc
mov
adc
sub
aas
sub
inc
sti
push
adc
sbb
pop
adc
jo
stos
inc
inc
and
or
mov
push
or
push
xchg
or
das
int3
out
mov
shll
hlt
shlb
pop
sbbl
icebp
xchg
xchg
mov
or
dec
enter
lret
add
mov
and
sbb
fimull
pop
imul
rcrb
jp
lock
mov
add
xor
xor
cmp
push
jmp
xchg
out
pushf
incb
push
test
sub
cli
mov
shll
je
into
mov
js
aam
jge
pop
insb
xor
in
mov
loope
dec
loopne
leave
adc
xchg
inc
sub
je
iret
scas
inc
push
push
loopne
popf
in
mov
lds
scas
jge
sti
dec
adc
imul
adc
xor
and
sahf
mov
clc
or
push
fstpt
xor
or
scas
sub
inc
pop
test
negl
dec
jg
movsl
inc
imul
jecxz
jmp
dec
cmp
loop
or
push
xor
mov
imul
push
fistpll
or
int
aam
mov
out
xor
mov
fsts
imul
sarl
and
add
sub
xor
scas
pop
leave
push
mov
and
pop
push
pop
addr16
out
mov
jns
aam
sti
neg
adc
dec
mov
xchg
out
sbb
pusha
cltd
pop
int
sub
sbb
loope
and
jl
loopne
clc
out
cltd
fidivrs
and
das
inc
or
into
cmpsl
testb
fucomi
mov
xchg
mov
popa
mov
add
xor
push
mov
inc
mov
lods
inc
popl
xor
arpl
jecxz
pop
cmp
sub
adc
jmp
mov
ret
xor
and
jnp
adc
pop
or
pop
paddq
push
ljmp
mov
fpatan
fisubrs
dec
in
clc
xor
jg
cmp
inc
scas
or
es
mov
mov
out
std
xchg
aam
dec
xor
sub
bound
pop
mov
aam
movsl
scas
adc
sbb
sti
jmp
mov
mov
mov
jbe
cmp
enter
in
mov
pop
int
push
mov
lds
stos
stos
mov
and
xor
shrb
in
pop
repz
lcall
cmc
xchg
pop
sub
fnstcw
mov
fisubrl
pop
daa
sub
mov
xchg
dec
jne
scas
mov
mov
fimull
stos
lea
test
mov
outsb
cli
adc
mov
mov
mov
and
ret
repz
pop
popa
mov
adc
idivl
xor
scas
or
mov
fcmovb
xchg
sahf
bound
mov
cmc
test
daa
push
sbb
push
cmpsl
inc
dec
push
fistpl
stos
sbb
addb
jecxz
call
cmpsl
outsl
cmp
mov
xor
rorl
test
add
and
mull
adcb
pop
imul
popf
mov
fs
adc
or
sti
mov
ss
dec
mov
icebp
mov
fprem
ss
stc
xchg
mov
add
pop
sarl
jno
inc
aaa
pop
pop
fwait
cmpsb
iret
scas
fldpi
arpl
or
xchg
enter
scas
xchg
data16
or
popa
adc
ja
or
xor
adc
xor
fnstenv
sbb
xchg
mov
fidivs
pop
xor
pop
pusha
or
stos
ja
loop
in
xor
mov
std
test
outsb
adc
adc
inc
push
adc
mov
add
outsl
xor
imull
jmp
test
shlb
rcll
hlt
daa
pop
inc
repz
or
push
xor
or
adc
cs
mov
inc
rcr
and
xor
rorb
cmpsb
xchg
pop
xchg
and
insb
fwait
das
or
mov
jae
lret
mov
loopne
cmovne
jle
or
push
ret
lds
pop
pop
add
jbe
inc
lcall
sub
lret
cmp
aaa
inc
adc
sti
and
mov
sbbl
mov
mov
jns
cmp
fnsave
mov
lock
mov
xchg
jmp
in
or
addl
cmp
and
or
mov
cli
mov
push
or
mov
int
jno
fisubl
and
ljmp
dec
test
iret
lcall
insb
push
and
js
imul
cmp
push
adc
sub
mov
push
pop
gs
pop
fldenv
outsb
cmpsl
shll
add
cmp
ret
aaa
sbb
shll
retw
aam
scas
pop
dec
push
dec
leave
jno
insb
mov
out
add
cmp
inc
dec
dec
xchg
sbb
ljmp
sub
bswap
cmc
sarb
mov
push
mov
or
test
gs
or
jns
cmp
mov
mov
add
dec
lret
inc
shl
clc
leave
dec
mov
lods
rcll
pop
popa
mov
adc
and
insl
push
pop
lods
sub
mov
mov
gs
sahf
mov
lret
pop
cmp
enter
sbb
mov
and
jbe
cmp
or
sub
test
jecxz
or
subl
aam
add
pop
gs
movsl
pop
dec
scas
popf
pop
aaa
clc
lods
adc
pop
mov
or
sahf
xchg
ret
aam
xor
lret
fldl
mov
sub
es
outsl
jns
push
in
mov
scas
xchg
int
popf
lds
imul
pop
orb
mov
les
int3
push
xchg
or
inc
mov
in
in
push
xlat
cwtl
sbb
sub
lahf
lods
push
jns
les
cmp
lret
icebp
xchg
and
mov
xor
and
fwait
and
adc
push
cmc
lock
xor
xchg
movsl
clc
sbb
pop
popf
jno
push
arpl
push
mov
xor
pop
push
jae
and
popf
sub
jne
in
jp
mov
cmp
inc
lea
mov
pop
pop
add
clc
stos
loop
ja
std
popf
mov
inc
jae
sbbb
inc
out
add
stos
lahf
cmp
repz
xchg
mov
stc
gs
sbb
mov
jbe
notb
popa
fdivrs
adc
dec
push
ret
xchg
push
out
dec
sahf
mov
lea
push
push
sbb
pushf
xchg
add
cmpsb
cmp
loopne
in
movsl
push
jo
lods
jp
sbb
das
jmp
mov
test
inc
sbb
pop
out
repz
testl
arpl
cmp
imul
xor
lcall
pushf
dec
in
xchg
fwait
xor
in
add
sub
fisttps
add
imul
gs
shl
enter
dec
jecxz
pop
dec
mov
addr16
stos
and
out
sub
popf
push
pop
adc
mov
jecxz
sub
ret
mov
fdiv
jecxz
shlb
mov
jns
add
insb
imul
popf
xchg
pusha
mov
jno
in
in
sub
mov
and
dec
hlt
jmp
out
adc
fwait
sarl
adc
xlat
enter
fldcw
lahf
jns
push
or
leave
fwait
lahf
inc
out
xor
mov
call
jne,pn
scas
fwait
cli
xchg
pop
jecxz
dec
mov
cmp
test
iret
cmp
and
push
loop
movsb
xlat
arpl
push
mov
stos
pop
xor
mov
leave
pop
int3
xor
enter
fstps
lods
mov
sbb
outsb
dec
popa
jns
ss
and
lea
out
jbe
ret
int
rcl
je
push
sub
imul
arpl
adcb
andl
imul
es
adc
cmc
pop
sti
inc
shrl
pop
pop
decl
scas
inc
fwait
xchg
dec
loop
clc
adc
sub
push
pop
dec
mov
sar
jecxz
dec
mov
test
xchg
xchg
and
pop
repnz
movsl
call
cld
mov
mull
ret
arpl
das
cmp
cmpsb
xchg
lret
je
cmp
mov
cmp
outsb
les
outsl
cmp
xlat
out
shlb
mov
and
pushf
push
push
sar
pop
out
fnstenv
mov
jmp
or
sub
adc
push
add
repz
insb
inc
call
repz
outsl
test
cld
xor
adc
mov
dec
leave
push
inc
add
stc
mov
cmp
push
pop
xchg
scas
imul
out
jnp
inc
pop
lahf
mov
sub
sub
aam
fstps
scas
dec
aad
xlat
test
cmp
xlat
shl
push
jb
inc
int3
sti
and
scas
lret
and
xchg
mov
in
or
mov
and
dec
test
lods
repz
into
jle
pop
push
xchg
sarb
mov
ja
insl
imul
xchg
pusha
movsl
cwtl
std
fs
inc
add
mov
lret
mov
add
std
pop
lods
mov
cmp
inc
push
sbb
sbb
fbld
sarl
dec
iret
rcrb
dec
ret
das
xchg
ljmp
mov
fwait
aam
ljmp
pushl
push
adc
xor
mov
jl
inc
inc
mov
add
adc
shl
or
jns
fwait
xor
js
mov
enter
or
cmp
or
inc
repnz
or
cmp
push
mov
sbb
xchg
fadds
iret
jle
mov
rcrl
fimuls
xchg
repz
push
xor
jmp
sub
icebp
jmp
lods
adc
sub
cmp
jge
in
stos
jg
in
stos
call
leave
movsb
pop
fimuls
movsl
orb
insb
imul
cld
iret
ficoml
nop
repz
cmp
loopne
inc
fisttpl
sarb
gs
xchg
or
mov
pmuludq
clc
add
lcall
push
fmul
ja
popf
jo
ror
sahf
adcb
sbb
push
mov
stc
icebp
inc
pushf
adc
stos
test
int
jle
cmp
inc
xchg
jg
mov
test
jne
add
lret
dec
lret
inc
imul
mov
jb
das
fdiv
sbb
stc
shrl
dec
xor
jne
cmp
in
inc
test
or
mov
fcmovnu
adc
movsl
lods
bound
mov
sti
pop
push
jecxz
adc
call
inc
cwtl
xchg
inc
push
filds
jmp
and
nop
sub
mov
lock
xchg
fmul
sub
test
push
cld
daa
push
xchg
orb
jo
mov
popa
out
pop
pop
jns
xchg
lock
sub
enter
pushf
sub
add
and
push
jne
leave
orb
loop
nop
dec
mov
movsb
cmpsl
xor
jmp
sti
aam
inc
sahf
jp
xor
xchg
pop
xchg
lret
sbb
push
cmpsb
and
jp
pop
es
loopne
mov
xlat
adc
das
jae
repnz
pop
sub
mov
mov
outsb
push
xor
cmp
jno
dec
rcrb
stc
ljmp
sti
test
imul
repz
aaa
push
xchg
sub
mov
inc
xor
dec
lods
lea
cmc
stc
lahf
adc
cmp
push
mov
loopne
push
cmpsb
sub
test
ret
jns
shrb
adc
subl
bound
rcrl
test
imul
jns
movsb
lea
test
push
in
repz
imulb
push
jae
lock
inc
pop
adc
push
stos
lea
jg
pop
insl
test
push
sub
shl
sbb
sub
add
in
push
jns
mov
xor
cs
stc
xor
leave
jne
sub
shlb
mov
jmp
sub
push
fstps
fs
shll
lds
fwait
sub
mov
push
pusha
ss
xchg
pop
je
push
adc
jb
xor
call
cmp
or
add
cmp
popf
pop
aaa
adc
rclb
inc
arpl
dec
adc
sbb
out
enter
pop
rcl
lret
fbstp
cwtl
mov
sub
idivb
test
repz
outsl
jecxz
xchg
outsb
cmp
push
stc
popf
test
push
jmp
movsl
and
mov
xor
sub
lea
addr16
lret
adc
stc
mov
dec
cmp
leave
adc
or
nop
jns
xchg
fimull
pop
std
lods
loop
loop
outsb
jbe
sub
pop
mov
or
in
daa
andl
xorb
or
cmc
mov
add
test
in
sub
outsb
mov
xor
icebp
or
cli
adc
sti
stos
leave
clc
xlat
xlat
out
bound
and
aam
je
jl
rcll
mov
pop
into
repz
arpl
jbe
mov
inc
cld
ljmp
jb
cmc
add
xchg
mov
jmp
addr16
mov
push
mov
cmc
ret
out
in
pxor
iret
mov
decl
int
xchg
jnp
cld
or
cs
ret
ret
pusha
mov
adc
out
add
and
fldcw
or
rcll
add
lret
jle
ja
jle
push
pop
cmc
and
cs
push
es
xchg
js
icebp
jg
ficomps
fisttpl
outsb
ja
mov
pop
sub
aad
mov
push
adc
mov
cltd
loop
mov
loop
mov
ss
adc
movb
ds
fld
sub
or
loopne
mov
adc
mov
mov
fisubs
and
ja
sub
sub
orb
roll
imul
xor
pop
into
sub
mov
jae
add
push
push
sarb
mov
or
ret
jno
mov
lret
arpl
es
adc
es
ficompl
cmp
stos
push
out
pusha
lods
hlt
test
or
out
aas
sub
mov
stc
lods
clc
dec
lret
pop
or
fs
mov
mov
mov
nop
jbe
std
inc
scas
mov
push
sbb
mov
sbb
push
push
iret
dec
and
test
dec
xchg
push
les
mov
mov
test
out
dec
add
xchg
lea
jecxz
fimuls
in
rolb
lahf
mov
fs
pop
in
lret
pop
jne
mov
cld
fbstp
mov
js
into
push
cmp
push
cmp
cmp
lds
cmp
mov
cmp
sarb
cltd
loop
negl
fldcw
fbld
in
or
les
scas
cmp
cmp
sub
mov
das
inc
inc
jnp
rol
mov
fnstsw
enter
mov
int3
inc
xor
jp
jp
jbe
test
ljmp
cmc
sub
lods
sti
in
mov
sti
push
xor
mov
xlat
sbb
mov
mov
lds
mov
into
scas
les
test
lods
int3
outsl
xchg
fimuls
mov
adc
mov
jb
jne
pop
sahf
shll
and
sub
aaa
fisttpl
lods
clc
addr16
test
xor
and
dec
lods
xchg
mov
xor
mov
sub
in
mov
push
in
rclb
and
int3
push
jno
push
adc
mov
mov
andl
fcomi
sbb
xor
call
xchg
sub
pop
jbe
inc
and
xchg
dec
movl
cmc
pop
jnp
notb
addb
mov
cmp
cmp
xor
das
mov
mov
mov
js
jns
pop
add
xchg
jb
loop
inc
cmpsb
inc
xchg
and
call
and
imul
orb
ja
fs
mov
cmpsb
repz
aam
call
mov
repnz
xchg
pop
xlat
shrb
inc
cs
shll
sub
sahf
fldenv
xor
xor
ffreep
and
pop
xchg
xchg
mov
or
lret
int
cmpsl
cmp
fbstp
mov
sub
xchg
into
cs
jp
popa
add
lock
jg
ret
std
loopne
mov
sti
mov
call
mov
inc
adc
or
dec
cmp
xor
call
lods
out
push
inc
dec
lock
outsb
inc
or
ficomps
xchg
movl
lahf
xor
setae
lret
sub
adc
xor
jle
mov
pop
xchg
xchg
mov
mov
adc
push
lcall
dec
sbb
hlt
outsl
lods
or
push
aad
dec
xorl
dec
test
adc
rorb
fildll
sahf
int
jecxz
idiv
and
negb
sti
pop
inc
pop
lea
loope
adc
icebp
fmull
and
push
imul
mul
or
and
push
lret
js
push
jg
mov
xor
filds
pop
and
hlt
jno
sbb
les
pop
cmp
movsb
lods
inc
lods
add
pop
je
pop
int3
shll
mov
cli
mov
mov
ffreep
shll
and
je
stc
jge
adc
cmpsb
sbb
pop
hlt
fldt
call
mov
out
xchg
mov
lock
lds
into
xchg
cmp
pushf
std
mov
mov
idivl
test
xchg
xor
jle
dec
inc
xorl
dec
imull
dec
sar
daa
test
out
xchg
jecxz
mov
int3
pop
sub
addl
incb
cltd
int
inc
in
pop
xor
dec
pop
jne
mov
dec
dec
pop
lcall
push
adc
xchg
push
cmp
loopne
sub
lcall
loop
aaa
addr16
ja
sbb
adc
mov
or
fsub
push
mov
sbb
das
dec
js
repnz
daa
fwait
xchg
das
testl
add
pop
jno
aam
into
jg
insl
adc
inc
dec
inc
cmpsb
fstl
movsb
jl
xchg
inc
insl
bsr
mov
dec
ds
mov
inc
or
insb
adc
outsb
push
sbb
push
mov
ficoml
mov
insl
jae
fistpl
mov
jae
xchg
popa
push
inc
inc
sub
xchg
xchg
pop
cmp
sbb
icebp
mov
mulb
and
hlt
andl
into
fnstcw
fisubrl
dec
xor
push
mov
fldl
repnz
lahf
dec
xchg
nop
aas
or
inc
mov
jo
adcl
sbb
pop
inc
pop
mov
loopne
mov
xchg
lcall
mov
loopne
xor
aad
lahf
xor
in
cmp
movsl
inc
stos
sahf
stc
pop
mov
rcrb
ss
push
in
in
xor
lcall
mov
mov
mov
outsl
jmp
add
or
mov
sub
pop
in
shlb
call
in
lahf
enter
cwtl
mov
stos
mov
jae
imul
ljmp
push
cmp
mov
lods
cmc
fwait
xor
outsl
xor
in
cmova
mov
jns
iret
adc
int
in
mov
cli
movsl
mov
inc
mov
aas
call
les
adc
jo
push
stos
bound
inc
lods
fs
inc
enter
mov
and
xor
or
mov
jmp
jge
mov
notl
enter
sbb
mov
dec
jge
adc
cmc
jp
mov
jno
xor
push
nop
cmp
popf
mov
xchg
scas
push
add
pop
sub
sbb
push
sub
mov
dec
scas
shll
mov
mov
ret
cld
gs
in
push
cwtl
cmp
jno
cmp
mov
loope
pop
loope
cs
inc
mov
js
ljmp
pop
cmp
pop
pop
mov
sub
mov
sbb
sbb
sbb
cmc
pop
jae
push
dec
xchg
and
jle
out
mov
dec
and
mov
out
ja
in
mov
and
jbe
in
aad
cld
ss
pop
testl
mov
addr16
aam
push
shl
lcall
inc
addl
incl
xchg
xorl
mov
movmskps
sub
insb
xchg
add
inc
rcll
aad
jmp
loope
cmp
mov
mov
dec
outsl
sub
sbbb
mov
or
add
push
repnz
cmp
mov
jg
adc
add
pop
mov
scas
sub
pop
ret
jno
aad
repnz
mov
pop
test
add
mov
imul
push
roll
enter
imull
lods
jb
or
jbe
cmpsb
jnp
std
dec
mov
xchg
xchg
lds
and
sub
fisttpl
push
and
push
fildll
lods
ret
add
jne
sbb
roll
inc
mov
jecxz
lods
in
pop
push
mov
xlat
test
jle
loop
push
rolb
enter
lcall
cmp
stc
cmpsl
inc
xchg
fcoml
sub
int3
cmp
jae
nop
stos
adc
pop
and
mov
sub
mov
fdivrs
jae
outsb
jne
aaa
sahf
ss
es
pusha
insb
sub
dec
fadd
aas
jne
es
insl
outsb
inc
xchg
out
or
adc
mov
je
rol
lret
fwait
inc
shrl
pop
incb
jl
lahf
cmp
mov
test
jg
inc
sbb
push
ss
ss
imul
xlat
xchg
xchg
in
mov
dec
testb
mov
insl
push
mov
bound
inc
bound
sbb
jne
mov
add
fs
lods
jmp
inc
aas
aam
fsubrs
inc
stc
arpl
cmp
in
aad
jns
mov
mov
out
repnz
loope
in
adc
stos
and
jl
xchg
jns
orl
xchg
nop
or
cmp
jne
aas
dec
pop
enter
aam
popf
shrb
fsubs
and
push
insb
adc
imul
pop
pop
add
add
cmpsb
xor
rcrb
out
test
nop
cmp
je
pop
sbb
dec
repz
pusha
out
ja
mov
andb
lret
rorl
divl
pop
enter
pop
fs
rcl
adc
sub
push
jo
sbb
xor
test
das
hlt
sub
xor
ret
push
cs
shlb
leave
dec
pop
xor
mov
or
lret
testl
add
xchg
xchg
adc
xor
mov
cmp
xchg
mov
mov
xchg
mov
add
add
test
mov
in
add
jns
xchg
sarb
jmp
pop
mov
icebp
ret
add
test
mov
cmpb
stc
leave
xchg
push
imul
les
xlat
push
or
cmp
dec
inc
fisttpl
mov
jno
into
pusha
jmp
mov
and
lret
daa
mov
repz
push
add
ja
rcl
mov
or
test
mov
cmc
movsb
sbbl
adc
loopne
loopne
mov
cmpsb
daa
adc
or
push
cmp
ret
daa
cmpsb
nop
adc
cmc
mov
pop
mov
nop
and
dec
movsl
ss
mov
adc
push
test
dec
mov
rorb
sub
and
jo
iret
movsb
adc
mov
push
push
movsl
jnp
out
inc
sub
std
mov
dec
pop
add
and
movsb
cmp
jecxz
sub
cmp
aam
pop
mov
and
mov
push
fnstcw
dec
loopne
lods
push
push
nop
pop
xor
jle
or
dec
loopne
cwtl
lret
jle
loop
cvttps2pi
lock
jo
scas
add
jecxz
jg
test
sti
jle
xchg
adc
adc
hlt
push
icebp
int3
fmul
jmp
stc
movsl
hlt
rolb
iret
cltd
mov
mov
sti
mov
mov
sub
add
xchg
imul
cmpb
in
cli
or
pop
cmp
sbb
sbb
mull
add
insb
addr16
testl
sub
ljmp
push
lock
icebp
xchg
xchg
fs
test
loope
adc
lock
mov
dec
or
aaa
sub
fs
idivl
push
mov
sub
fwait
dec
mov
fisubrs
loop
les
pop
cld
mov
add
sbb
sbb
push
sbb
out
adc
cmp
jmp
orl
scas
mov
pop
and
inc
movsb
das
adc
lods
push
out
into
clc
inc
jp
scas
adc
mov
stos
dec
stos
pop
in
mov
mov
inc
add
or
jmp
adc
jle
xchg
mov
push
adc
icebp
dec
jl
cmpsb
lds
int3
inc
addl
insl
in
into
pop
sbb
xchg
movsb
lcall
push
cmp
mov
stos
add
jg
imul
cmp
mov
ss
or
push
cmc
imul
inc
dec
pop
xchg
cli
rcrb
test
mov
inc
jecxz
inc
push
jmp
jns
out
cmp
jnp
xlat
cmc
pusha
mov
add
sti
xor
mov
xor
das
pop
mov
inc
or
lods
mov
pop
out
jp
shrb
pop
dec
adc
or
cld
bound
mov
sbb
into
push
sub
fildl
cmp
or
pop
fisttps
movsl
pop
sbb
into
dec
sub
cmp
notl
sub
mov
sbb
push
mulb
pop
in
cmc
sbb
jno
mov
sub
push
sub
mov
cmpsw
shll
ljmp
cld
dec
mov
pop
xor
loope
lret
jl
inc
pushf
mov
fstps
ja
je
dec
or
add
out
lret
lcall
dec
jbe
mov
sbb
das
shll
mov
and
push
mov
add
inc
sbb
cmp
fnstcw
clc
mov
mov
cli
into
arpl
stos
aaa
xchg
lahf
aaa
mov
add
and
mov
mov
subl
icebp
and
or
adc
sub
loope
fldt
jo
jp
xor
cmp
inc
lea
push
sbb
xor
pop
ja
fmuls
inc
imul
test
out
dec
xor
add
adc
lahf
dec
scas
ret
pop
sti
mov
addr16
and
xchg
push
mov
mov
in
or
emms
lret
out
std
iret
fs
sub
iret
xchg
out
imul
inc
fs
rorl
rclb
sbb
notl
push
cmpsl
in
imul
in
mov
cmp
jo
cwtl
jnp
inc
pop
mov
dec
int3
xor
mov
dec
cld
mov
daa
sub
sub
test
out
repz
rolb
loopne
enter
jns
arpl
in
xlat
pop
xchg
pop
jecxz
in
mov
shl
loope
xor
roll
or
push
mov
test
sbb
jns
pop
mov
cmpsl
dec
sub
sbb
imul
js
inc
and
push
cwtl
das
xchg
mov
mov
pop
mov
mov
sub
or
loop
fisubrl
add
add
xlat
in
pop
xlat
sahf
dec
pop
fs
mov
fisttpll
cmp
idivl
js
sti
add
jne
mov
leave
dec
adc
lret
aas
ficoms
push
mov
add
call
mov
cmp
dec
jns
push
inc
mov
repz
ret
pop
pop
xchg
in
lea
push
ss
jno
xor
test
stc
and
cmp
jl
cmp
ds
test
jge
xchg
shl
in
mov
push
sbb
mov
or
dec
sub
pusha
sub
loope
mov
lcall
cmp
xor
mov
or
xchg
adc
mov
es
insb
inc
fistpll
cmp
lds
clc
xchg
fs
fidivs
loope
add
push
jmp
mov
pop
pop
daa
cwtl
pop
xor
fsubrs
aam
adc
adc
xlat
in
adc
mov
lret
dec
lods
add
cmp
pop
inc
jnp
xchg
sub
jno
mov
cmpb
subb
into
pushf
iret
lahf
cmpsb
or
sub
jnp
test
repnz
out
test
clc
inc
jo
push
mov
pop
xchg
mov
js
xor
xchg
lock
adc
js
mov
sbb
lock
jns
and
out
loope
aaa
push
jb
out
dec
inc
jno
rorb
add
cmp
sahf
lds
roll
lcall
add
js
in
jbe,pt
sub
adc
jns
inc
mov
add
xchg
mov
icebp
push
aaa
aaa
lret
pop
pop
mov
cmpsl
mov
sbb
lock
shrb
cmp
mov
dec
aaa
nop
hlt
dec
jno
or
mov
add
pop
mov
jo
cmpsl
and
icebp
and
xchg
inc
push
in
mov
mov
hlt
add
cmp
int3
cli
nop
mov
test
movsl
ss
lods
lret
push
jns
scas
mov
out
enter
clc
xchg
pop
jbe
add
fcmovb
arpl
iret
out
fs
out
cmpsl
or
pusha
out
mov
adcb
dec
pop
lea
push
add
xorb
out
nop
cmp
mov
xchg
loopne,pt
pushf
stc
in
pop
xchg
test
sbb
out
call
and
mov
sub
rcrl
flds
movsl
xor
push
push
jbe
jg
idivb
jp
or
or
lcall
mov
push
add
arpl
sub
xchg
out
stc
jmp
jl
aad
loopne
xor
mov
or
cmp
pop
sbb
ret
xor
jge
sbb
sbb
aad
sbb
sub
sbb
mov
mov
lret
dec
mov
mov
testb
enter
adc
ret
and
mov
jo
sbb
pop
mov
iret
push
dec
movsb
xor
push
add
mov
mov
jo
out
pusha
lahf
es
sub
aad
push
mov
mov
jmp
adc
sahf
in
push
pop
xchg
pop
fmull
cwtl
int
cs
into
add
xchg
xor
out
vpmaddwd
pop
rcll
xor
jl
pop
test
xor
mov
int
subb
adc
mov
push
pop
add
mov
shr
aaa
mov
popa
xchg
fmul
and
jne
call
int
lcall
in
mov
pop
dec
push
in
xchg
lret
adc
call
cmpsl
inc
loope
ficoms
adcb
lods
punpcklbw
and
mov
ljmp
call
stc
push
jnp
pop
push
mov
add
cmp
cmp
shll
cmpb
dec
pop
mov
ret
andl
rolb
test
pop
fldt
sbb
sub
int
xchg
jmp
and
xchg
mov
add
dec
jg
mov
inc
or
xchg
cmpsb
inc
popf
jbe
ds
push
cwtl
inc
iret
add
iret
cmpsb
sbb
mov
push
leave
sub
int3
ss
or
add
das
movups
cmpsl
cmp
bound
clc
test
or
jge
outsl
mov
clc
rcll
xor
inc
ds
int
fstps
or
insl
dec
push
gs
jp
xor
sub
scas
enter
mov
xlat
add
icebp
incb
adc
mov
enter
adc
mov
inc
out
pop
jae
xchg
push
out
sbb
xlat
rcrb
mov
push
inc
mov
shl
loope
aad
outsl
int3
dec
mov
pop
addr16
cmp
fwait
add
push
mov
cmp
loop
mov
pop
fdivs
cmc
adc
jo
sub
fdivr
lret
or
mov
and
iret
scas
push
scas
adc
test
jbe
cld
and
mov
rcrl
repnz
les
hlt
push
xor
adc
mov
ror
popl
mov
sti
or
adc
mov
dec
pop
adc
xor
gs
outsb
push
jno
or
mov
std
in
addr16
loope
push
mov
pop
mov
call
and
aas
sarl
cmc
push
push
cmc
push
sub
jecxz
loopne
in
pop
mov
sub
lods
adc
fxch
cltd
cli
jmp
imul
sub
ljmp
sub
push
dec
insb
adc
xchg
aas
xor
out
je
pushf
cmpsb
rcrb
pop
loopne
mov
mov
push
pop
andl
movsb
cmc
mov
js
pusha
in
in
mov
out
test
not
pop
sbb
popa
popf
mov
pop
in
mov
dec
sub
mov
push
xchg
jecxz
fwait
or
daa
jecxz
je
add
mov
lods
pop
int3
out
sbb
push
ja
sti
stc
jmp
jg
in
jg
xor
call
mov
scas
ljmp
xchg
repz
jp
lds
test
outsb
mov
fchs
fdivrs
flds
int
adc
nop
lcall
pop
and
imul
pusha
xchg
inc
shll
xor
xor
movsl
jge
test
aaa
in
cmpsb
xlat
adc
insb
sbb
mov
rcr
cmp
push
mov
mov
aas
std
adc
rol
or
fistpll
xchg
inc
enter
ds
pop
xor
adc
cmp
xchg
cmp
mov
mov
sub
imul
mov
shrl
bound
or
ljmp
jns
cmpsb
push
stos
into
hlt
in
mov
push
mov
test
insl
adc
leave
and
out
push
mov
addl
xchg
mov
push
push
lret
inc
jle
xor
adc
scas
and
rcll
dec
cmp
rol
mov
pop
pop
xor
xor
or
in
stc
pop
cmp
push
add
mov
roll
cmp
lea
dec
sub
jno
adc
or
pushl
repz
fucomi
xor
adc
fiaddl
shlb
sbb
int3
aad
push
sub
and
sub
jno
jg
xchg
fidivrs
lods
jns
leave
dec
mov
rcll
pop
or
pop
fcom
cmp
push
cmp
mov
add
cmp
xor
push
add
push
nop
jns
inc
push
leave
das
decl
jle
clc
les
loopne
sub
ljmp
cmc
pop
xor
out
cld
mov
mov
or
pop
ljmp
push
pop
inc
pusha
jnp
pop
and
add
aas
xor
shll
mov
cmpsl
xchg
lea
dec
inc
test
pop
mov
push
iret
in
dec
xchg
xor
daa
sub
ret
inc
dec
inc
and
test
adc
sub
js
sbbb
sub
notb
mov
inc
fs
call
cltd
xor
bound
iret
loopne
sub
adc
fbstp
jne
or
mov
sub
mov
sti
push
fs
pop
pop
jns
aad
mov
scas
ret
xor
clc
outsl
aam
test
jb
jb
lret
jmp
fcmovnu
loope
cmc
test
and
pop
cmc
lret
inc
lods
mov
add
in
scas
cs
adc
mov
mov
mov
scas
lea
jmp
inc
in
fisttpll
jns
sub
xchg
xchg
xchg
pushf
ds
mov
jmp
xchg
cmp
add
enter
nop
and
inc
pop
adc
push
rorb
rcrb
mov
hlt
jno
inc
call
xor
pop
sbb
cmp
ficoml
leave
jnp
sarl
ljmp
mov
ret
ret
pop
in
dec
scas
leave
dec
fcomps
add
ds
test
mov
dec
int
add
iret
cmp
mov
push
pop
pop
mov
inc
out
stc
shll
xchg
inc
lods
and
mov
mov
stos
xchg
in
sarl
cmpsl
aam
jp
push
adc
or
jbe
or
in
in
loope
aaa
mov
jle
int
inc
xor
xor
dec
adcb
and
mov
es
push
cmp
or
loope
mov
sbb
sub
cmp
push
mov
pusha
out
imul
mov
movsb
mov
mov
push
ss
fdivrs
sbb
jbe
rolb
jbe
ds
shl
fsubrp
inc
sbb
mov
mov
cld
fidivrs
jecxz
pushf
push
nop
rcll
in
fistl
pop
fnstsw
mov
mov
scas
mov
out
inc
xor
dec
cltd
test
cld
mov
xchg
daa
orb
xor
jae
in
pop
cmp
jle
cmp
test
pop
pusha
sub
xor
xor
or
mov
test
leave
rcl
ret
bound
lods
mov
dec
xor
xor
sub
cmp
clc
xchg
push
lds
sbb
jb
fstps
imulb
pop
dec
dec
cmp
neg
and
fnstcw
mov
pop
sub
cltd
pop
movsl
or
je
icebp
fisttpll
test
data16
add
je
into
dec
cmp
sub
in
jmp
repnz
sub
imul
mov
push
mov
sub
aas
scas
lods
jge
dec
stos
xor
in
sub
mov
loope
pop
jno
or
fidivl
sbb
pop
adc
scas
stos
rol
aam
or
div
test
lcall
ljmp
adcl
int
xor
mov
stos
inc
ljmp
addr16
jae
fldt
mov
push
das
aas
xor
aas
das
mov
mov
cmpb
mov
pop
mov
rol
sub
pop
mov
lahf
fmul
cmpsb
test
jp
mov
out
pop
rclb
push
mov
or
inc
outsb
mov
xor
lods
add
mov
mov
lea
jle
sti
imul
int
add
shl
pop
cmpl
in
test
add
sub
bound
adc
jb
out
push
outsl
and
rclb
add
cld
cmp
imul
add
lock
pop
xor
aaa
fisttps
xor
fildll
int
add
outsl
lods
sarb
sarl
xchg
or
inc
cmp
and
pop
push
aaa
imul
sahf
xchg
pop
loopne
out
andb
lds
add
lods
mov
hlt
sbb
lock
push
pusha
mov
sti
jns
into
int
xchg
test
out
jbe
loope
jb
cmp
mov
insb
cli
xor
in
mul
dec
cmpsl
stos
lret
inc
mov
push
popa
leave
add
arpl
mov
fstps
jno
add
int
and
dec
cmp
jno
mov
bound
int
mov
cmp
movsl
xchg
sbbb
ja
xchg
rolb
pop
pop
dec
out
cltd
into
xchg
pushf
adc
enter
xchg
cld
cmp
jne
add
push
inc
inc
jo
pusha
xchg
sbb
or
icebp
inc
jo
push
push
adc
iret
add
mov
in
fs
mov
push
pop
iret
jmp
adc
scas
or
and
jnp
lods
xchg
dec
dec
out
jmp
ja
cmp
dec
cmp
fs
xchg
mov
pop
xor
insl
sahf
and
and
push
sub
mov
sub
mov
xlat
add
mov
sti
sbb
or
les
xor
adc
test
push
movsl
add
fs
les
aad
push
out
arpl
ret
cwtl
nop
fldenv
fwait
jnp
or
mov
push
idivl
fdivr
jp
aas
rolb
mov
or
and
nop
daa
inc
imul
cmpsl
iret
mov
jl
pop
dec
call
and
cmp
loopne
sub
xchg
out
nop
jbe
nop
dec
cmp
push
dec
test
xor
push
pusha
inc
les
xchg
bound
outsl
pop
inc
loop
add
add
lret
adc
mov
pop
dec
xor
sub
into
xchg
lret
fsubrs
mov
mov
dec
cmp
sub
iret
aam
pusha
or
or
lret
xor
insb
jb
pop
int
cmc
popa
push
sti
lcall
xchg
push
div
cs
and
lret
push
fisttpl
mov
pop
in
xchg
lret
mov
ds
insl
aad
push
jnp
sbbl
inc
fwait
aas
scas
push
mov
clc
lret
loope
lret
sbb
mov
icebp
mov
jmp
and
nop
fadd
sbb
aam
je
xchg
out
popf
mov
inc
leave
lret
shlb
in
hlt
inc
lahf
mov
inc
sarl
andl
outsl
std
jb
and
das
mov
loopne
or
cmp
lds
int3
test
sarb
xor
dec
scas
das
push
fsubrl
gs
insb
inc
dec
les
pop
lock
inc
in
add
push
lods
adc
push
sub
push
mov
lret
jge
fsubl
jb
test
jp
ret
sub
pop
sbb
lods
dec
push
ror
shl
push
movsl
jl
xchg
icebp
jl
test
lahf
and
std
call
xchg
insl
pop
pop
sbb
sub
jge
loopne
clc
cmp
xor
fmul
push
add
das
enter
ret
outsl
mov
cld
and
pusha
add
fs
test
icebp
rcl
fldt
mov
jl
pop
rorl
jne
ljmp
xor
mov
xchg
adc
lock
jg
push
stos
fcomps
mov
pusha
mov
push
movsb
cwtl
lcall
sahf
inc
insl
xchg
push
inc
mov
imul
out
pop
ljmp
pop
loopne
out
jne
out
in
add
jecxz
repz
test
cmp
lods
jbe
or
aad
icebp
jge
cmpsb
inc
xchg
jne
xor
inc
int
or
jae
call
shrl
mov
jo
imul
xchg
movsb
mov
dec
cmp
jg
cmp
loope
xor
inc
mov
mov
mov
cmpsl
add
enter
lahf
dec
and
jmp
iret
jo
mov
mov
mov
mov
rolb
inc
sbb
add
push
insb
out
inc
push
xchg
dec
jb
pop
lahf
sub
push
aaa
xor
xchg
jb
std
sbb
sbb
mov
addr16
jns
inc
xor
mov
in
leave
xor
fildl
inc
sahf
sbb
adc
mov
jnp
add
inc
pop
pop
push
adc
xlat
add
pop
shlb
aas
ds
fs
and
rcll
std
dec
testb
sub
pop
mov
adc
jne
ficoml
sub
aas
and
sbbb
xor
pop
imul
inc
popf
pusha
dec
mov
into
or
jbe
cli
sub
dec
inc
sti
xchg
jb
cmc
lods
pushf
lret
jno
sub
mov
or
xchg
sub
loop
js
mov
daa
mov
lret
jae,pn
sahf
or
in
jbe
cltd
xor
pop
mov
scas
ja
add
popf
test
sbbb
lock
int3
outsl
repnz
cld
mov
and
subl
mov
xor
jle
add
inc
pop
ret
scas
lea
inc
adc
cmpsl
dec
shrb
jmp
int3
inc
pop
sbb
cwtl
cmpsb
dec
mov
mov
sbb
in
sbb
cltd
adc
stos
xor
adc
adc
jmp
push
data16
fwait
icebp
jae
sub
dec
adc
movsb
pop
shrl
fdivrs
cli
sbb
sub
mov
roll
mov
and
outsl
mov
pop
inc
mov
sbb
mov
outsl
nop
cmp
mov
or
ret
mov
loopne
sahf
xlat
fisttpl
lahf
aas
imul
add
mov
loope
or
rorl
add
into
js
mov
lock
pusha
mov
ret
dec
ljmp
push
subb
mov
dec
pop
fldenv
mov
xor
icebp
das
sub
test
jno
push
sbb
lret
nop
pusha
mov
cmp
sbb
out
push
inc
sbb
daa
mov
sub
iret
cltd
pop
aad
iret
inc
dec
sub
shrd
xchg
out
pusha
mov
call
gs
sbb
lods
mov
mov
fstps
mov
dec
outsl
inc
in
dec
mov
jns
lcall
ss
lods
pop
mov
mov
xor
inc
int3
jge
negl
movsl
in
imul
lock
xchg
pop
pop
out
stos
xchg
and
int
lahf
imul
sahf
and
adc
xor
pop
shlb
mov
sti
in
leave
pop
push
arpl
xchg
rorb
sbb
lods
dec
xchg
sub
shlb
xlat
jnp
inc
or
inc
mov
popl
xlat
dec
xchg
out
cmp
inc
pushf
loopne
pop
cli
arpl
rorb
pop
stos
loop
mov
loopne
xchg
push
les
sub
push
jnp
hlt
xchg
ljmp
adc
aas
cwtl
mov
repz
in
and
mov
lcall
movsl
adc
fildll
adc
aam
fcmovu
jle
push
mov
mov
imul
cmp
or
out
sarb
mov
int3
lock
mov
mov
jno
cltd
je
sarb
lahf
push
mov
push
push
nop
jae
pop
repz
xor
dec
inc
jle
lods
test
lock
xchg
int3
sub
pop
mov
idivb
sbb
es
shr
jecxz
cmp
pushf
xchg
sbb
jno
orb
sbb
adc
movsl
dec
sbb
pop
or
xchg
dec
fs
mov
cmp
in
lret
xor
ds
lret
dec
mov
cmp
popf
sub
icebp
jg
cli
mov
push
call
scas
pop
pop
push
fcomps
or
sbb
mov
mov
xor
and
cmp
sbb
jmp
inc
mov
inc
push
repnz
aaa
xchg
pop
jg
add
dec
xchg
js
sub
and
jne
repnz
mov
arpl
clc
mov
ds
mov
pop
cmp
mov
mov
push
fimuls
mov
movl
inc
or
add
and
lods
cli
pop
push
push
das
je
aas
push
ljmp
aas
xchg
inc
pusha
mov
xchg
std
lods
shlb
dec
fcmove
loopne
scas
push
xchg
cmp
icebp
rol
out
push
int3
pop
pop
push
xchg
mov
jp
push
insl
mov
xchg
in
sub
pop
pop
fistps
or
xchg
adc
out
rcrb
sti
pop
pop
sub
push
aam
cmp
fdivl
clc
pushf
nop
cmp
lds
fsub
lahf
sbb
mov
je
and
cmp
jo
push
and
iret
lret
movsb
dec
outsb
and
push
sbb
cld
icebp
push
pop
int
xor
leave
jmp
in
mov
lret
mov
shlb
sbbb
gs
jnp
mov
clc
mov
dec
adc
insl
push
xchg
frstor
iret
jae
inc
push
ret
pop
xchg
aad
add
sbb
call
inc
mov
or
jne
roll
cli
repz
mov
xchg
and
mov
mov
out
or
mov
loopne
int
dec
push
push
icebp
stos
sbb
pop
cli
aaa
push
dec
push
mov
imul
and
sbb
fprem
or
les
repz
lcall
jb
enter
push
jl
xor
scas
insl
js
and
dec
sti
sub
out
popf
cmpsl
int
test
or
push
sub
scas
out
push
fs
inc
cltd
jae
pop
outsb
xchg
adc
mov
mov
jg
mov
in
lods
leave
pop
jbe
and
cmpsb
iret
push
xor
sbb
es
add
and
ss
fcomps
jne
fisttpl
or
out
sub
iret
mov
cmp
xchg
mov
push
gs
pop
call
sub
lret
pop
mov
push
insb
sbb
cs
xchg
and
jp
aad
inc
xor
jne
adc
xor
imul
imul
mov
ret
add
push
jmp
repz
stos
fisttps
dec
pushf
test
insl
lds
mov
fnstcw
sub
je
iret
dec
mov
or
scas
mov
xor
xor
mov
inc
call
test
jae
xchg
shrb
in
inc
jne
push
pop
mov
movsl
jns
cmp
bound
sbb
mov
or
sbb
mov
ret
pop
daa
pushf
push
sbb
in
add
ljmp
call
in
aas
fiaddl
in
fistpll
cmpsl
lret
pop
into
nop
mov
mov
stos
jle
dec
insl
and
mov
in
int
sub
inc
cmp
cmp
stos
and
fnstsw
pop
mov
dec
test
mov
jb
sbb
psllw
rclb
inc
jo
mov
inc
pop
sbb
adc
jmp
test
push
mov
dec
cltd
aam
cmp
lret
jb
pop
dec
pop
loope
inc
mov
filds
test
data16
fldl
mov
js
add
dec
stos
mov
movsb
dec
dec
sbbb
lahf
sub
loopne
dec
in
mov
pop
scas
scas
push
sti
sahf
in
mov
mov
dec
cmp
sbb
data16
jg
jge,pn
and
jnp
les
push
out
shrl
push
aam
inc
add
sub
mov
add
fwait
xor
ficoml
stc
hlt
and
mov
jb
jle
cld
pop
subl
call
xchg
test
shrb
xor
rorb
lret
push
xchg
jne
ja
jl
sbb
mov
insl
stos
sahf
lcall
fcoms
xchg
push
adc
imul
and
xchg
xchg
xchg
movsl
fidivrl
dec
adc
ljmp
inc
add
lock
xchg
mov
call
stos
std
arpl
sahf
sti
inc
jmp
stc
aaa
push
je
inc
pop
inc
cmp
cmp
cli
das
xor
test
mov
jne
sub
scas
daa
add
jbe
popa
pushf
xor
add
pop
or
pop
outsl
int
pop
mov
mov
sbb
add
les
popa
int3
push
mov
jl
faddl
inc
leave
fs
xchg
add
dec
pop
mov
or
cmpsl
adc
xchg
mov
fwait
mov
icebp
sbb
imul
mov
loope
dec
nop
inc
mov
or
divb
jb
rcrl
ret
sbb
popa
lock
sub
or
mov
dec
fs
jae
jb
imul
jb
inc
sub
push
ljmp
xlat
fbld
mov
loope
xchg
std
iret
idivl
xlat
imul
mov
in
imul
test
or
inc
stos
sub
adcl
xchg
and
jl
mov
jl
pop
push
xor
or
and
mov
mov
dec
rolb
andb
sub
stc
cmpsl
pushf
popa
test
jo
rolb
iret
or
lret
push
mov
or
xchg
mov
in
mov
fiaddl
fstl
je
dec
cs
aam
add
push
mov
std
setg
ret
data16
add
scas
cmp
jnp
cmp
add
addr16
push
fbstp
xor
nopl
and
cmp
lea
lea
in
movsl
loop
jno
sub
jecxz
mov
out
pop
call
out
sub
nop
ret
sub
xchg
xchg
ficompl
fnstsw
imul
add
mov
enter
fdivrs
inc
xchg
lock
jle
movsb
lods
imul
mov
inc
iret
leave
xor
negl
loope
push
xor
aad
dec
cwtl
out
jb
bound
sahf
adc
dec
stos
pop
dec
call
fsts
ss
xor
popf
jns
std
sbb
add
or
sbbb
cmp
cmp
jge
jecxz
xchg
sub
sti
insb
test
push
inc
adc
and
sbb
inc
call
jo
aam
pop
sbb
lret
jnp
fldcw
add
subb
clc
jp
movsl
and
movsl
add
and
add
sub
lahf
arpl
popa
pop
imul
sub
lods
mov
sub
mov
fisubl
sub
outsb
mov
fbld
std
sti
and
xchg
cmp
and
mov
mov
jle
pop
sub
push
cs
sub
fisubl
out
push
jmp
pop
adc
loopne
fildl
mov
daa
cwtl
adc
test
push
lods
mov
mov
add
push
push
hlt
lods
and
popf
push
jb
adc
add
in
cmp
add
mov
push
loope
sub
dec
pop
mov
popf
or
repnz
or
sub
mov
iret
jne
stos
mov
loopne
xor
push
mov
lods
cli
dec
mov
jb
addl
mov
enter
imul
clc
sti
push
mov
fistpl
imul
xlat
dec
enter
fdivl
sub
sarl
jmp
inc
mov
inc
and
rorb
fcoms
mov
int3
or
mov
out
fidivrl
and
jae
scas
dec
into
mov
clc
ja
jg
adc
pop
test
pop
xor
loop,pn
incl
enter
and
and
cmp
inc
mov
loopne
dec
fisttpl
pop
in
pop
call
jge
jae
push
jle
push
das
xchg
test
jns
jne
into
subb
cld
or
clc
aam
sbb
add
loop
loop
or
push
in
add
fsubrp
push
add
cwtl
addr16
push
push
aam
sub
sub
sbb
sti
gs
scas
les
mov
xchg
mov
sub
push
cmp
mov
outsl
jle
adc
jecxz
sub
add
sarl
clc
test
mov
inc
dec
dec
aas
xchg
aam
test
daa
push
lret
divl
push
sub
push
mov
push
cwtl
mov
lds
out
test
sub
shll
push
mov
mov
sti
aas
fisttps
das
inc
mov
lahf
mov
push
dec
adc
and
jo
jbe
sbb
pop
and
mov
aaa
or
cmp
xor
mov
push
scas
inc
mov
aad
mov
jo
rclb
dec
ljmp
push
and
pop
or
sti
mov
cltd
xchg
das
out
cltd
int3
mov
mov
fnstenv
int3
dec
hlt
je
mov
mov
inc
shrb
in
jl
popa
mov
xchg
add
or
cmc
jno
and
js
xchg
adc
sub
adcl
js
xchg
jl
jge
mov
addl
pop
cltd
sub
loop
les
in
ljmp
pop
lahf
in
stos
fcmovb
cwtl
mov
mov
test
pop
ret
in
mov
push
push
xlat
clc
sbb
jno
dec
movsb
ljmp
pop
aad
int
pop
add
pushl
in
stc
gs
test
pop
sub
pop
inc
xor
lods
fs
test
int
xchg
xor
ljmp
xor
fnstsw
push
es
mov
and
sbb
xor
stos
arpl
sub
iret
sub
test
xor
push
out
and
and
loopne
in
cmpsl
xchg
pop
es
jno
mov
pop
or
leave
arpl
daa
inc
out
pop
push
push
in
mov
mov
lods
and
popf
mov
jg
in
pop
and
mov
inc
sub
int
flds
imul
adc
xchg
lds
mov
loopne
repnz
mov
mov
repnz
jge
out
fcmovnu
jg
int
pop
aas
adc
and
mov
movsb
popf
xchg
imul
aad
fildl
mul
and
mov
xlat
lahf
pop
outsb
fldenv
sub
call
shr
fwait
negb
jb
std
dec
shll
divb
dec
imul
loopne
sbb
mov
fbstp
xlat
ret
push
push
aas
inc
sub
and
or
in
push
jno
cmp
test
sbb
sbb
lods
push
mov
addb
fsubp
iret
clc
push
outsb
lods
std
div
or
hlt
in
call
pop
mov
adcb
inc
std
aaa
cmpsl
movsb
xor
dec
pop
push
aaa
or
inc
mov
aas
nop
push
xor
aad
imul
inc
mov
mov
or
push
cltd
lea
sbbl
sbb
pop
jae
lock
daa
outsb
popf
call
cwtl
and
popf
jb
repnz
sti
mov
or
pop
loop
sbb
mov
sbb
sbb
mov
push
dec
cmc
jbe
xchg
push
fisubrl
jmp
xor
pop
inc
pop
jae
fs
inc
xchg
shlb
mov
push
nop
scas
mov
sbb
and
dec
jno
outsl
add
bound
add
cmp
out
mov
setb
xor
into
xchg
mov
push
test
es
leave
dec
pushf
mov
dec
out
ret
aaa
and
out
pop
jp
out
mov
pop
add
mov
cmp
test
sub
cmp
sbb
mov
cs
popa
cli
mov
imul
popf
xchg
mov
ja
daa
scas
pop
pusha
loop
movsb
lock
inc
loopnew
mulb
pop
gs
lea
sbb
out
mov
negl
mov
stc
and
xchg
xchg
pushf
adc
test
orb
jg
dec
inc
add
fstl
aad
mov
imul
inc
cmc
int3
pop
mov
push
cmp
sti
loopne
aam
clc
cwtl
lods
hlt
movsl
xchg
inc
movsb
pop
and
or
xlat
or
lcall
push
mov
mov
sub
pusha
and
cwtl
insb
inc
fs
in
leave
cmp
mov
mov
xor
or
enter
and
fsubl
cvtps2pd
rcl
push
ja
add
imul
pushf
mov
das
jnp
rcrb
xor
cmpsb
aad
mov
xchg
jns
aas
icebp
lods
mov
arpl
imul
lcall
andl
test
cmp
aas
mov
adc
fnstsw
fstpt
mov
or
aas
sub
leave
mov
lea
dec
adc
cld
sub
xor
fisttpl
cmp
xor
test
adc
cwtl
xor
pop
xor
sbb
and
test
push
cld
imul
add
push
std
or
lret
jnp
dec
add
xchg
mov
mov
mov
lahf
inc
add
cld
sub
sub
jg
jle
pop
not
push
push
stos
sbb
std
rcl
push
pop
dec
pop
cwtl
mov
repz
push
pop
xchg
xchg
cmp
mov
int3
dec
not
test
jl
jb
sbb
icebp
jae
fldenv
jno
mov
xchg
dec
std
pop
jno
mov
mov
lea
jl
adc
adc
cld
hlt
in
sub
roll
mov
test
mov
shlb
xchg
push
add
cmp
ljmp
dec
cmpsl
fld
fisttpll
cld
jae
dec
stos
sub
adc
and
cli
pop
and
icebp
push
cli
je
sbb
sub
push
push
stc
sbb
fisttpl
in
sbb
in
pop
shr
dec
or
in
mov
xchg
lods
dec
dec
sub
lock
cmp
insb
jno
push
adc
xchg
in
jne
adcl
gs
lret
xchg
add
jmp
cmpsl
lock
aam
push
mov
xchg
sahf
add
push
loop
jbe
adc
daa
loop
imul
cmovns
sub
idivl
cld
push
xlat
and
sahf
cmp
idivb
xchg
cwtl
cmp
jl
dec
pop
aam
leave
sbb
jle
aaa
xchg
clc
jns
xchg
outsl
jne
aam
lcall
push
mov
jp
xchg
or
xorb
mov
repz
js
fadd
push
and
inc
repnz
push
push
push
dec
cli
sahf
pop
ja
sub
lea
cmp
insl
sub
arpl
out
shll
adc
sbb
call
or
mov
cmp
cmp
and
mov
mov
js
push
jecxz
stos
add
mov
insb
mov
out
or
fcomps
push
fstpl
adc
xchg
dec
insb
xchg
dec
pop
lret
aam
xor
setae
ja
aaa
xchg
cmc
adc
cmpsl
inc
pop
scas
mov
les
fisubl
xor
fimuls
ljmp
inc
push
pusha
cmp
sti
push
mov
addl
sahf
lahf
add
pop
aas
cwtl
cmc
or
call
sbb
xchg
stc
dec
mov
or
aam
test
das
lahf
inc
pop
lds
inc
jge
cmpsb
sub
incb
das
inc
movsl
xchg
gs
mov
out
xchg
and
je
ds
push
ja
mov
ds
push
test
ljmp
xchg
jnp
sahf
cwtl
or
movsl
jle
dec
mov
iret
sub
rcrl
mov
xor
mov
jl
stos
push
lock
cmp
or
daa
js
mov
cmpb
or
adc
out
pop
dec
pop
mov
add
movsb
dec
add
ds
icebp
js
push
mov
mov
adc
cmp
dec
mov
out
lret
inc
pop
sub
cmp
sbbb
sub
adcb
or
aas
push
push
ret
aas
je
adc
lods
es
jle
leave
xor
xchg
lds
mov
push
addr16
insb
ret
movsl
xchg
xor
arpl
fcompl
inc
cmp
sti
mov
inc
dec
push
hlt
push
xchg
ds
ss
mov
dec
or
mov
adc
xor
lds
inc
push
shll
sar
ljmp
mov
inc
sbb
and
imul
xchg
cmp
js
dec
aas
mov
stos
pop
lcall
loopne
sti
cmpsl
sub
xchg
add
sub
mov
xchg
mov
in
bound
mov
pushf
sbb
pop
mov
outsb
enter
loopne
cld
jmp
cmp
xor
pop
mov
std
cld
out
sbb
shlb
shrb
in
adcb
into
inc
aaa
hlt
mov
or
or
mov
inc
jb
sbb
dec
je
dec
mov
cmpsb
pop
jne
sub
inc
mov
imul
jl
or
ds
in
mov
dec
sub
pop
sub
sbb
int3
mov
lock
pushf
addb
mov
popf
sahf
mov
pop
sub
je
into
or
xlat
loope
rcl
outsl
inc
push
jge
test
add
out
sub
cmpsl
iret
and
pop
push
mov
bound
iret
movsl
ja
xor
int3
xchg
insb
ds
ja
call
add
pop
push
mov
adc
fs
jl
das
or
sbb
fsubs
in
sub
nop
pop
pop
outsb
aad
pop
sub
fdivs
sbb
sbb
mov
loope
pop
roll
mov
push
aam
cmc
jl
xor
mov
test
les
test
into
push
fiadds
lret
or
adc
cmp
ror
jo
mov
icebp
div
mov
sbb
into
js
mov
fldcw
xor
adc
sbb
dec
shlb
nop
clc
push
cmp
pop
sub
std
lahf
pop
jnp
sub
popl
add
fadds
insl
stc
fidivl
pop
sub
aad
pop
pop
sbb
popf
add
and
pop
mov
mov
push
bnd
mov
push
pop
test
idivb
fmuls
outsl
xchg
pop
adc
call
mov
dec
js
pop
popa
lds
sub
int
sub
repz
popa
jg
dec
outsl
sbb
mov
das
in
pushf
out
cmp
test
icebp
pushf
xchg
lret
in
aaa
pop
sub
hlt
or
xchg
stos
shll
aaa
mov
mov
dec
sub
pop
mov
out
dec
rorb
push
fidivl
aas
add
push
xlat
add
pop
cmp
xor
psraw
sub
addr16
lds
cltd
add
cld
std
jo
shrl
sub
fdivl
fwait
shll
movl
inc
inc
dec
sbb
lcall
mov
xor
pusha
push
lret
add
jle
bound
add
adc
push
dec
xchg
nop
jne
data16
call
add
outsl
fs
icebp
mov
jns
inc
int3
dec
mov
inc
loop
jl
fwait
jns
shrl
mov
mov
imul
xchg
adc
jns
fisubl
add
in
xchg
and
dec
arpl
dec
sbb
pop
jmp
pushf
iret
push
arpl
dec
inc
lods
ret
or
push
mov
imul
add
sti
inc
push
hlt
add
mov
iret
addr16
mov
lret
mov
mov
imul
xchg
pop
imul
or
ret
pop
clc
cmpsl
es
call
sub
mov
xor
mov
shrl
xor
ret
insb
inc
sti
insl
and
push
ss
fcmovnbe
inc
jnp
aad
jbe
inc
add
ja
cwtl
or
movsb
cmp
mov
pop
push
add
push
pop
arpl
pop
mov
ds
xchg
push
gs
ljmp
fsubs
jns
xor
dec
or
std
lahf
das
jns
mov
xchg
hlt
inc
dec
in
cmpsb
push
rcrl
push
cmc
loop
loopne
cli
sub
push
hlt
xchg
inc
dec
push
imul
or
cwtl
or
jle
rorb
or
jbe
out
or
sbbl
xchg
les
sarb
xchg
clc
std
cmpsb
cs
inc
test
fidivs
shrl
aaa
cld
xor
xchg
xor
imul
sarl
add
leave
nopl
xchg
adc
mov
jnp
sub
push
test
mov
mov
inc
sahf
lahf
and
shlb
cmp
stos
cmp
xor
sbb
jle
xor
fists
sbb
vcvtsi2sd
leave
stc
xor
sbb
xor
sbb
jno
and
mov
inc
gs
jae
pop
aas
cmovl
aaa
xchg
pop
xchg
xchg
lods
lods
divl
pop
inc
sti
mov
negb
mov
sub
aaa
jnp
sahf
mov
fistpl
imul
sbb
mov
mov
out
inc
leave
sbb
insb
mov
in
dec
inc
mov
int3
mov
sbb
mov
xor
out
arpl
xchg
test
and
inc
outsb
sbb
les
sti
adc
inc
push
dec
mov
notb
jno
mov
pop
xor
insl
mov
sbb
push
in
out
and
lea
push
mov
idivl
mov
out
push
outsl
mov
inc
push
in
ret
into
or
xor
insl
mov
inc
xorl
movsb
jl
icebp
imul
push
xchg
xchg
jmp
add
out
push
ror
int
enter
inc
xor
xor
xor
sub
dec
lods
xor
mov
test
dec
mov
pop
dec
jecxz
fiaddl
daa
femms
pop
pop
sub
cmp
mov
mov
sub
movb
xchg
repz
xorb
pushf
and
outsb
xchg
push
daa
iret
push
xchg
mov
add
mov
jno
push
popf
pop
pop
fmuls
insl
lock
sub
loopne
inc
mov
adcb
or
dec
pop
ja
xchg
sub
insl
nop
mov
in
lds
push
lds
add
adc
pop
ss
mov
jp
add
popf
jecxz
adc
mov
push
xor
add
xor
cmp
cmpsl
jle
mov
push
mov
loop
mov
inc
and
sub
aaa
addr16
movsl
cmp
jl
lds
pop
xor
dec
xlat
lret
and
fldenv
dec
lods
fcmovne
jae
mov
dec
outsl
ljmp
es
and
inc
bound
sbb
push
xchg
jae
xchg
mov
adc
inc
jecxz
cmp
idiv
adc
inc
fs
loopne
mov
adc
lea
out
popf
cmp
dec
repz
xchg
mov
xor
orb
int3
mov
shlb
push
pop
dec
cmpsl
push
fisttps
mov
ss
lahf
inc
sub
je
sbb
aas
test
aad
sarb
sbb
add
stos
inc
cli
je
iret
add
sti
jns
outsb
cmp
jne
xor
cwtl
insb
mov
dec
sti
fstl
data16
decl
insb
test
cld
aad
int3
push
test
cli
push
int3
or
lahf
sbb
dec
movl
xchg
add
mov
es
repnz
pop
xlat
getsec
mov
xor
je
jmp
bound
movsb
cmp
fucomip
add
mov
mov
adc
mov
or
mov
ss
inc
mov
fdivs
test
andl
sub
mov
cli
es
jne
push
gs
jmp
pop
mov
stos
push
xchg
cld
mov
cmpsb
gs
jno
cmp
jmp
push
and
jns
inc
je
das
xor
dec
lret
or
ss
out
sbb
pop
mov
mov
loop
sbb
mov
sbb
pusha
or
cmp
test
outsl
cs
adc
add
iret
clc
dec
das
lea
push
adc
add
sbb
clc
cld
push
stos
aaa
or
push
jo
mov
adc
dec
fisubl
sub
in
pop
mov
aas
push
adc
push
add
fsubrl
nop
lcall
cmp
rclb
add
inc
xor
out
and
lods
mov
fisttpl
pop
pusha
in
popf
andb
stc
sbb
push
and
mov
test
nop
pop
pop
popa
or
mov
pop
in
sbb
xor
cmpsl
fadd
xchg
push
xor
xchg
outsl
cs
inc
mov
inc
stos
dec
cmp
or
loop
pop
lock
les
or
mov
jmp
jecxz
fs
xchg
loopne
iret
inc
or
xor
arpl
sbb
lods
dec
push
dec
push
and
test
int
lock
out
or
jb
or
jns
jl
mov
and
mov
sub
out
imul
les
fsubl
pop
and
cmp
cs
dec
fstl
std
push
xchg
gs
ficoml
inc
js
mov
mov
push
xchg
inc
or
js
xchg
arpl
xor
shll
pusha
mov
xchg
xlat
pop
sbb
push
aad
sub
add
fnstcw
or
xchg
sub
in
dec
or
pop
cmp
nop
stos
loope
imul
push
inc
lods
cld
xor
popa
test
push
into
cmp
je
outsl
sbb
cmp
mov
clc
xor
divb
outsl
fdiv
sbb
insb
int
fwait
inc
movsl
cmpb
out
mov
sti
iret
sahf
cmpb
pop
push
cltd
mov
aad
pop
jo
mov
xchg
nop
jmp
xor
lcall
dec
popf
lahf
mov
jbe
xchg
or
scas
inc
mov
push
mov
xchg
popw
and
gs
mov
int
cli
outsb
xor
jne
mov
sbb
fs
stos
shll
xchg
leave
jg
xor
aad
int
sahf
ja
out
xchg
mov
into
or
popf
js
and
popf
push
imul
js
test
popa
mov
mov
popf
or
push
mov
aad
xchg
push
mov
clc
ret
or
adc
jl
pop
xchg
ja
sub
dec
icebp
cmpsl
popa
daa
push
sbb
pusha
ds
adcb
in
lods
inc
psubusw
das
cmpsl
push
ret
daa
lahf
xchg
push
scas
out
push
cmc
add
jmp
inc
test
ret
and
pusha
in
test
mov
xor
xchg
out
mov
sbb
pop
lods
cld
nop
inc
daa
ficomps
in
sbb
mov
outsb
xor
popa
divb
imul
push
sbb
cmp
into
test
adc
jno
in
idivb
ja
mov
enter
out
cmp
imul
add
aaa
add
iret
cmpsb
cmp
dec
adc
mov
mov
pop
ljmp
int3
dec
ret
fistpl
outsl
jae
pop
and
sub
mov
add
bound
xor
push
shll
adc
push
pop
mov
add
xchg
jp
xor
imul
sub
call
push
push
adc
and
cmp
jmp
adc
xchg
stos
pop
xor
movsb
insb
dec
test
xchg
pop
xor
sbb
imul
mov
icebp
pusha
mov
test
xchg
ret
out
adc
cmc
ss
mov
fisttpl
cmpsl
out
mov
push
testl
xor
out
cmp
mov
xor
jl
jb
fincstp
stos
lret
jmp
and
imul
adc
inc
mov
shrb
adc
rcrl
xorl
sub
or
pusha
xchg
sbb
pop
mov
inc
mov
xchg
pop
adc
cmp
inc
das
adc
movsb
dec
jl,pt
sbb
push
cmp
push
iret
xchg
shll
jne
and
mov
aaa
sahf
dec
scas
daa
cmpsb
testb
mov
scas
hlt
popf
sub
rcrb
dec
jbe
fbstp
mov
xlat
jnp
push
cs
xor
mov
cmc
cs
icebp
andl
movsb
add
out
xor
aam
mov
mov
cmpsl
mov
out
out
push
sub
and
inc
and
loope
in
xchg
int
aad
jb
mov
pop
add
repz
outsl
mov
in
loope
pop
pop
pop
lret
scas
xchg
pop
ljmp
in
outsb
mov
std
push
jo
inc
inc
xchg
pop
fistps
and
pushf
outsb
popa
xor
xchg
add
cmp
adc
xor
jge
or
add
xchg
lcall
or
xlat
pop
xor
dec
adc
push
jo
jg
add
jmp
lret
push
dec
pop
push
fstps
stos
loopne
cld
in
cmp
sbb
pop
mov
mov
pop
sub
imul
roll
mov
xlat
out
ficoms
int3
jge
das
push
jle
jno
mov
out
faddl
test
jecxz
movsl
les
pop
outsl
jo
sti
jecxz
mov
cltd
std
inc
jmp
cwtl
adc
fwait
sbb
or
xchg
mov
das
int3
xor
aaa
daa
xlat
or
dec
dec
icebp
test
lcall
xchg
cli
enter
push
repz
sbb
dec
inc
fadd
lds
inc
mov
mov
mov
in
push
gs
cli
pop
scas
add
dec
das
push
nop
or
pop
rcrb
negl
lea
shrb
out
adc
adc
daa
fmuls
or
adc
inc
iret
scas
push
mov
inc
cltd
fbld
cmpsl
call
jp
ret
mov
or
xchg
jge
fisttps
dec
in
fdivr
sbb
ret
xorl
lock
pusha
jmp
jp
push
int3
notb
push
jge
sub
xchg
and
adc
loope
jns
dec
and
mov
fnsave
sbb
jno
cmp
push
adc
subb
dec
mov
loope
popf
test
ficompl
or
sahf
int
inc
mov
outsb
adc
popa
and
add
rolb
mov
aad
lds
lock
and
pop
insb
test
pop
cli
inc
ljmp
mov
mov
mov
or
push
push
call
mov
push
rclb
add
incb
xor
dec
rorl
outsl
mov
sub
lret
jnp
lds
dec
ret
cmp
jle
and
jno
sub
hlt
adc
and
scas
iret
mov
jmp
xor
clc
lea
pop
xor
cs
and
xlat
pop
push
mov
fldcw
out
jns
fiadds
rclb
cmpsb
inc
les
xchg
pusha
sbb
mulb
lret
mov
aam
call
sub
enter
adc
mov
jecxz
lret
scas
sub
cmpsb
pop
pop
mov
mov
stos
dec
push
test
push
mov
mul
out
add
popa
arpl
inc
xor
aam
nop
adc
xchg
in
loop
xor
add
ja
mov
insl
movsl
je
call
aad
pop
sbb
xchg
mov
add
sbb
push
je
cmp
push
int
adc
test
jle
sub
sti
cld
adc
in
mov
mov
adc
insb
in
sbb
xor
xchg
inc
push
int3
filds
dec
add
das
cmp
push
inc
mov
cli
mov
mov
loop
inc
ja
inc
mov
ret
mov
mov
inc
adc
lcall
adc
mov
insb
push
sti
ljmp
fwait
lods
mov
inc
inc
lods
jne
jae
lret
stos
mov
and
jg
xchg
add
push
aaa
add
fistps
aam
xor
popf
push
je
rorb
sarb
pop
leave
rcll
repz
xor
bound
ss
cwtl
or
jb
loope
stc
icebp
in
inc
inc
or
roll
int3
push
add
scas
clc
aad
jle
push
adc
sub
mov
idiv
imul
sbb
dec
loop
and
nop
sti
sbb
mov
fstpl
lcall
push
cmp
and
mov
loop
int3
push
out
rcrb
pop
mov
movsb
inc
inc
push
hlt
iret
sub
xchg
mov
xchg
xchg
inc
add
xor
ret
mov
xchg
and
xor
pop
and
inc
daa
cwtl
int
and
jae
scas
test
insb
inc
jae
xor
jg
int3
and
or
hlt
cld
xor
xchg
arpl
imul
mov
jmp
scas
sbb
pmuludq
mov
int
mov
sbb
ss
rcll
and
clc
sub
xor
insl
movsl
sub
rolb
scas
sbb
inc
adc
jnp
sub
pop
push
cmp
mov
pop
mov
xor
inc
sub
clc
adc
out
push
push
xchg
pushf
stos
sbb
aam
push
lret
fcomps
loopne
ds
inc
insb
mov
xor
xchg
lea
add
push
jp
jmp
negl
pop
dec
cmpsl
cld
mov
push
xlat
outsb
dec
push
pusha
popf
sbb
fistpl
cmp
addb
jo
dec
jle
ret
lea
sbb
daa
push
mov
mov
scas
jne
lret
cmp
cwtl
mov
idivl
pop
mov
pop
mov
scas
inc
jns
pop
and
int3
and
pop
int
xchg
ljmp
fistl
xor
roll
mov
insl
and
sarl
pop
sub
vpslld
je
addb
mov
and
xlat
cmp
stos
sub
adc
add
cmp
sbb
sti
cwtl
mov
mov
mov
push
mov
out
aaa
sbb
in
mov
or
sbb
sbb
or
pop
loopne
cmpb
push
pop
xor
mov
das
lcall
pushf
and
test
mov
paddusb
fstl
mov
inc
push
mov
ljmp
dec
out
sub
inc
sahf
mov
sub
jg
das
sbb
mov
add
cmpl
pop
dec
fdivrl
mov
lcall
mov
and
xchg
pmullw
fnsave
adc
fs
inc
std
rorb
gs
mov
sbb
mov
je
cmp
cwtl
push
sar
and
add
inc
sub
xor
aam
adc
loopne
arpl
in
mov
mov
add
repnz
icebp
pop
das
xor
popa
das
mov
fisubs
icebp
pushf
xchg
mov
sbb
push
mov
add
testl
xlat
repnz
adc
dec
and
inc
loopne
mov
push
jne
ss
xor
popa
imul
scas
mov
cmpsb
add
popa
xchg
in
xchg
adc
out
movsb
pop
push
mov
and
mov
sbb
leave
lods
sub
push
ja
insb
cmc
mov
insb
and
je
dec
loopne
dec
adc
cmp
push
test
mov
fisubrs
pop
bound
pop
es
sbb
das
fimuls
pop
clc
push
cmp
mov
js
mov
lahf
add
movsb
xchg
jns
pop
rclb
push
inc
dec
mov
test
lods
sbb
push
fidivs
loope
lcall
lea
xchg
jecxz
lods
mov
push
addr16
cmp
push
lock
cld
xchg
sbb
or
mov
and
out
adcl
push
adc
xchg
into
mov
js
xor
dec
sbb
sub
push
pop
dec
add
mov
stos
lods
in
iret
jbe
lock
ja
fcmovne
xor
jo
sub
mov
cmc
imul
mov
aad
jge
push
mov
int3
fistps
sbb
iret
pop
xchg
shrl
fwait
testb
dec
inc
lcall
xchg
ss
xchg
out
mov
push
add
cld
repnz
mov
int3
int3
std
in
push
dec
dec
fcmovnu
pushl
push
enter
aad
pop
sti
lock
ja
int
imul
xchg
data16
cmp
jo
ljmp
xchg
jle
inc
jno
sub
or
js
mov
sbb
enter
xchg
lret
aaa
out
dec
mov
fdivl
imul
sbb
and
test
add
sarb
inc
iret
orl
cmp
mov
xchg
cmp
iret
add
divl
sub
xor
pusha
fisttpl
mov
enter
or
xor
inc
mov
je
cmp
mov
lret
sbb
cmp
rcrb
pop
sti
dec
bnd
push
mov
sub
push
outsb
or
test
dec
out
repnz
push
mov
push
out
stos
sarl
sbb
xchg
in
pop
mov
jl
rcr
jns
and
out
pop
xchg
fisubl
cmp
mov
mov
sarb
push
push
xor
xor
outsb
pop
xorb
aad
dec
in
mov
add
out
sarl
daa
mov
push
js
popa
arpl
pop
lret
icebp
cmp
push
push
jnp
mov
movsl
test
gs
push
mov
pop
addr16
inc
jnp
filds
inc
mov
inc
mov
out
adc
leave
mov
jb
pop
adc
subb
fimull
push
jge
aas
xchg
lods
mov
and
mov
cs
add
cmp
in
subb
rorb
lock
rolb
inc
sub
mov
in
nop
mov
jecxz
pushf
mov
outsl
jg
mov
lock
jle
pop
fidivl
add
aas
in
mov
test
ljmp
sbb
scas
sub
mov
jge
ss
mov
js
dec
mov
xor
jno
jnp
test
jae
in
in
dec
mov
xlat
cmp
movsl
inc
mov
sarl
cmc
movsb
pop
xor
rcrb
push
repnz
mov
pop
xchg
add
and
scas
push
mov
fwait
cwtl
mov
out
shrb
add
inc
fdecstp
mov
mov
sbb
mov
pop
int3
call
adc
sbb
mov
mov
mov
sub
mov
cmp
loopne
shl
pop
mov
push
dec
cmpsb
or
cwtl
std
pop
inc
and
sub
mov
fdivs
shlb
mov
xchg
lock
shl
lret
shll
movsb
outsb
test
out
cltd
xchg
pop
cwtl
add
inc
les
pop
jle
xor
repnz
jle
add
lahf
nop
cmp
push
lret
mov
or
jle
test
scas
pop
andb
dec
push
cmp
inc
or
xchg
xchg
dec
outsl
jp
call
je
pop
fxch
jb
les
jp
push
cmp
in
pusha
fsts
adc
dec
pop
ror
out
nop
xchg
sbb
ljmp
dec
mov
aad
outsl
cltd
cmp
add
lea
popf
incb
add
add
mov
mov
mov
stos
pop
push
cmp
test
popf
test
cmp
cmp
dec
sub
adc
add
pop
incb
jecxz
fwait
cmp
mov
idivb
cmpsb
in
in
testl
jns
je
inc
sub
sbb
fsubrl
das
jae
push
push
not
jno
or
push
arpl
test
aad
repz
dec
gs
clc
mov
dec
add
jg
sahf
jne
sbb
outsl
pop
clc
insl
cmc
pop
jmp
pop
adcb
addr16
cmpsl
or
mov
jb
in
and
mov
loop
iret
push
xor
stos
pusha
lds
jmp
adc
in
aaa
sub
ret
mov
xchg
fdivrs
pushl
push
cmp
mov
and
rolb
dec
cmpsb
fldenv
ljmp
cmp
pop
cmpsb
or
out
jno
mov
mov
and
jge
dec
dec
clc
sbb
sti
cmp
adc
in
xchg
mov
mov
pop
sub
mov
pop
aaa
or
fs
enter
mov
aaa
fsubl
mov
fincstp
and
mov
stos
mov
inc
push
mov
jno
mov
mov
aaa
mov
cwtl
iret
dec
sub
out
push
int3
ficoml
push
jae
rol
push
lcall
or
jp
in
out
mov
pop
fwait
mov
push
cli
ffree
imul
inc
or
dec
inc
mov
inc
out
stos
je
fmul
add
in
cli
mov
inc
jp
cli
pop
int
xchg
test
out
jns
andl
or
xchg
add
iret
xchg
mov
outsl
mov
xor
pop
mov
ret
lret
xchg
cmp
push
imul
dec
mov
mov
pusha
push
dec
push
cmp
out
imul
xchg
xchg
xchg
int3
push
pop
or
daa
inc
pop
pop
sbb
mov
xchg
roll
dec
enter
repz
jecxz
jmp
les
push
adc
mov
push
push
dec
and
in
push
clc
mov
cs
cld
pop
mov
xorb
sub
and
minps
pop
jecxz
push
leave
push
cmp
push
xor
mov
ja
pop
jg
mov
std
push
jns
lods
icebp
cmp
mov
push
hlt
mov
pop
xchg
movsb
mov
into
xor
mov
std
mov
outsl
inc
sbb
mov
add
jl
cmp
push
sub
cmp
cli
aaa
mov
adc
add
das
mov
ret
cmpsb
mov
leave
pop
inc
loopne
out
popf
imul
inc
pop
testl
test
push
or
inc
or
insb
mov
and
int
jno
jne
push
xor
ds
mov
mov
popf
in
dec
subb
rcll
or
jnp
add
adc
mov
jb
subb
in
roll
or
sub
test
pusha
clc
test
mov
mov
xor
push
mov
mov
push
pop
fwait
int3
pop
lods
ss
push
inc
jge
xchg
and
xchg
ljmp
bnd
xor
in
ficompl
or
cli
movsb
das
lods
xlat
mov
dec
addr16
push
mov
jb
out
arpl
inc
pop
shl
nop
pop
mov
hlt
ss
mov
ja
aam
cld
outsl
ss
gs
and
mov
movsb
hlt
fstps
popf
mov
jmp
fadds
mov
data16
pop
pop
push
pop
ja
pop
add
xor
fsubrs
or
xchg
std
in
inc
or
jbe
stc
aaa
add
mov
lcall
and
leave
cmp
sbb
sbb
sub
cmp
adc
mov
push
sub
jge
mov
enter
and
mov
imul
xor
out
dec
testl
into
mov
mov
xchg
jae
push
pop
je
and
dec
sub
pop
dec
clc
jg
xor
push
iret
sub
aaa
stc
xchg
in
or
sbb
sbb
test
insl
loope
jmp
jae
or
jo
mov
out
adc
aas
jbe
add
cli
xor
pop
dec
hlt
push
int3
or
mov
xchg
in
stos
dec
or
add
jo
clc
jl
nop
dec
sahf
dec
cmp
jbe
cli
lea
adc
jae
mov
pop
rcll
xchg
push
jmp
pop
inc
jo
outsb
mov
sbb
or
jp
gs
insb
push
stos
xchg
addr16
push
adc
mov
aaa
jge
add
mov
push
push
in
enter
mov
inc
gs
test
cmpsb
sub
insb
jg
pop
fsubs
int
aam
or
pop
popa
lahf
popl
cwtl
ljmp
mov
test
inc
mov
mov
test
cmp
loope
jno
jno,pn
icebp
mov
dec
sub
mov
lcall
dec
push
inc
xor
push
test
jle
scas
or
adc
or
inc
int3
sbbl
insb
cld
push
mov
pusha
in
iret
mov
stos
mov
cmp
gs
jb
xchg
pop
pop
inc
xchg
add
fstpt
pop
cli
mov
adc
aaa
je
sbb
push
leave
imul
fdivrl
xchg
and
std
xchg
repz
pop
xor
xchg
and
dec
jle
psrlw
cmc
shl
dec
add
and
das
in
cmp
cli
div
jg
outsl
cmp
jns
leave
sbb
ret
mov
jle
lea
dec
mov
pop
inc
adc
data16
test
jp
stos
outsl
js
jno
out
mov
bound
and
xchg
outsb
ss
fsubrs
pop
scas
loope
or
pushf
shlb
and
add
cwtl
mov
js
ss
pop
fsubr
jecxz
xchg
or
adc
add
shrb
dec
xchg
pushf
adc
movsl
jmp
aaa
in
in
xor
into
leave
dec
cmp
jecxz
mov
movsb
jle
xchg
inc
and
scas
mov
adc
shlb
sti
push
and
fs
mov
jp
adc
xchg
cmp
insb
cmpsl
insb
push
cmp
xchg
scas
shll
sub
jno
test
imul
dec
xchg
xchg
push
add
adc
lcall
outsb
scas
ljmp
cli
xor
imul
shlb
outsb
jmp
sbb
cs
jae
sarb
rcll
outsb
inc
aaa
xor
cwtl
inc
push
setp
pop
lods
repz
pop
imul
or
xchg
dec
xchg
fmull
mov
mov
xor
sub
mov
clc
fcomip
or
or
mov
add
ficoms
std
pop
rcl
and
mov
mov
js
mov
inc
jmp
xor
xor
jae
scas
push
inc
mov
mov
std
pop
mov
das
ret
and
push
aaa
scas
fwait
xor
and
imul
int
and
cltd
scas
ljmp
inc
movsb
cmp
jle
les
punpckhbw
and
xor
lock
adc
aam
inc
add
cmpsl
mov
std
loope
jno
push
ss
ss
or
push
sbb
jb
shl
cmpsb
add
adc
dec
add
mov
mov
fwait
xchg
cwtl
lock
stos
lret
xor
daa
dec
cmpsl
stos
decl
out
xchg
xchg
adc
pop
iret
fldcw
sbb
mov
dec
or
jno
popf
mov
test
lods
rcll
pop
andl
out
xor
in
outsl
adc
outsl
fistps
sti
pushf
dec
push
lahf
std
pop
movntq
in
mov
xor
pop
ss
sti
push
dec
imul
iret
orl
rcl
push
repz
inc
dec
subb
mov
sub
in
pop
imul
mov
fistl
arpl
jbe
xor
push
jmp
xlat
jnp
dec
subl
aam
scas
roll
aaa
inc
jo
cmc
pop
dec
cmp
xor
daa
push
push
pop
inc
inc
mov
and
sub
xchg
xchg
mov
dec
out
fistpl
int3
jae
adc
test
sbb
mov
mov
mov
xchg
xlat
cmpb
xchg
addr16
add
inc
push
xor
xor
dec
lret
test
mov
jo
imul
cmpsl
jl
jmp
hlt
or
mov
sub
push
aas
ret
add
leave
dec
push
out
or
jp
push
mov
mov
jmp
aas
cmp
ror
ficompl
into
out
out
js
arpl
mov
lret
mov
out
xchg
daa
dec
sbb
test
lahf
movsl
xchg
cli
mov
and
imul
ss
lods
or
repnz
cwtl
pop
jg
in
sbb
xchg
push
inc
aam
into
jb
andl
shrb
out
xchg
aam
fs
cmpb
scas
out
xor
mov
and
nop
aaa
jmp
ljmp
aad
sub
push
gs
sub
hlt
jl
ret
lods
add
sarb
not
pop
int3
cmp
push
repnz
inc
jp
or
lret
aam
push
pushf
jp,pt
pavgw
ret
std
xchg
mov
mov
movsb
xchg
dec
dec
adc
data16
mov
sbb
loope
lea
sbb
fwait
add
addl
ja
ss
pusha
inc
cmp
pop
aas
inc
inc
pop
adc
and
idivl
mov
out
sub
mov
push
pusha
add
out
jbe
push
and
invd
out
inc
sahf
cltd
sbb
sahf
mov
cmpsl
cmc
and
inc
dec
jl
cmovs
daa
test
outsb
jecxz
jnp
pushf
dec
sub
aam
jne
mov
inc
cmp
dec
dec
test
add
repnz
jmp
sub
int
cmc
xchg
pop
in
bound
clc
movsl
mov
dec
bound
lds
sti
jns
insb
dec
push
enter
mov
push
jbe
mov
lock
pop
lods
cli
cmp
shrl
mov
jmp
or
mov
mov
mov
mov
adc
or
mov
mov
mov
push
mov
xorb
cmc
movsl
repnz
pop
sbb
push
jns
mov
nop/reserved
cltd
pop
push
mov
adc
jns
aas
cltd
cmp
lods
add
leave
cld
inc
dec
inc
cmp
cmp
mov
adc
adc
jns
iret
mov
into
cld
push
ja
mov
adc
cs
std
sub
sbb
adc
pushf
lret
xchg
fwait
dec
mov
stos
out
ds
cs
push
fldenv
bound
or
jecxz
inc
mov
xor
dec
cmpsl
loope
into
mov
mov
sbb
into
imul
mov
xor
out
orb
shr
out
jge
loopne
insb
insl
mov
lcall
and
xor
sbb
add
shrd
rcll
fdivs
cli
push
fisubs
inc
sarl
nop
add
jmp
jmp
ficoml
lds
subl
xchg
icebp
xor
pop
movsb
mov
jno
xchg
in
lods
mov
cmpsl
pop
test
jne
in
push
out
dec
sbb
jbe
shr
pushf
bnd
out
push
setp
mov
cmpsl
xor
sahf
sub
add
imulb
leave
arpl
repz
nop
daa
mov
mov
fwait
pushf
je
ja
xchg
je
fmull
je
mov
push
jge
xchg
jp
int3
out
imul
cmp
or
popa
push
ret
xchg
popf
pop
mov
dec
mov
mov
cmp
movsl
jb
pop
pop
js
mov
mov
cmpsl
xor
ja
mov
pop
data16
mov
popa
or
das
xor
aaa
cltd
arpl
and
push
jmp
pop
ja
ffree
ret
push
ss
pop
push
adc
imulb
sbb
mov
popa
outsl
jecxz
in
jmp
jnp
inc
cli
ret
cmpsb
dec
div
mov
push
stos
rcr
rorb
push
jae
inc
aas
leave
sahf
aam
xchg
push
aad
lods
lcall
ds
xchg
cmp
or
push
xchg
movsl
or
cli
mov
cli
cld
rorl
cli
out
filds
not
jae
ret
pop
into
mov
jae
mov
insl
inc
or
insl
das
mov
push
and
or
mov
xor
dec
cmp
xchg
cmp
or
in
stos
xor
mov
cmc
jb
pusha
cmp
xor
adc
leave
ja
mov
out
rclb
ss
xor
sbb
cmp
pop
xchg
push
call
dec
adc
aas
jle
imul
cltd
cs
dec
mov
mov
add
mov
pop
sub
pop
addr16
and
inc
push
fiadds
adc
fsubrs
repz
test
movsl
mov
in
scas
and
mov
jae
test
cwtl
lods
jne
shll
ficoms
movsl
mov
sub
imul
jbe
fcomip
sbb
sbb
lret
xor
xchg
test
subb
pop
loopne
popf
call
das
clc
jb
aaa
inc
outsl
jge
lahf
rcll
add
insl
cmp
mov
push
cmp
xor
pop
mov
xchg
or
rcll
insb
xor
adc
out
add
sbb
test
pop
fimull
loope
fisubs
dec
xorl
outsb
jge
pop
cs
cmpl
mov
idiv
lods
cmpsb
push
pop
mov
xchg
mov
and
outsb
je
clc
add
mov
cwtl
push
hlt
leave
xor
cltd
xor
iret
in
repz
inc
shlb
xor
xchg
mov
sbb
or
les
jmp
loop
negb
imul
dec
cli
sbb
out
cld
loopne
into
push
mov
lock
inc
stos
gs
pop
xor
lret
jmp
mov
sub
fadd
pop
xor
xor
dec
push
test
cmp
adc
or
sub
add
andb
mov
cmpsb
icebp
mov
push
push
sti
subb
ret
inc
lea
inc
sub
sbb
mov
push
movsb
push
das
aad
lret
mov
test
repz
jmp
stc
int
or
lock
in
mov
mov
cmp
push
clc
cmp
or
lret
lea
pop
xchg
adc
mov
mov
dec
insb
xor
xchg
jae
sarb
inc
int3
adc
out
or
xchg
and
jo
imul
test
sbb
mov
adc
mov
fistpll
int3
mov
sahf
lret
stc
es
dec
int3
jnp
xlat
arpl
xchg
int
cmc
inc
xor
fisttps
xchg
leave
subl
cs
outsl
and
inc
mov
sbb
xlat
lods
or
dec
stos
jp
gs
enter
xor
jnp
fdivr
mov
cmp
jmp
gs
or
gs
add
sbb
sub
test
sarb
aas
jae
ffreep
mov
mov
add
daa
popf
scas
push
jmp
push
fidivrs
shll
inc
mov
push
adc
ss
xor
push
mov
jmp
scas
clc
lret
repz
or
mov
xor
dec
xor
dec
popf
cwtl
inc
pushf
add
mov
pop
mov
jne
imul
loope
movsl
dec
cmp
test
pop
jle
insl
mov
pushf
dec
fadd
testl
bnd
jo
aaa
inc
or
cld
out
jmp
sar
xor
int3
pushf
fldenv
and
mov
in
pop
mov
popa
insb
jecxz
and
idivl
sub
sub
fisttpl
dec
mov
shll
sbb
xchg
pop
jg
or
insl
sahf
push
xchg
push
shll
mov
hlt
out
push
add
sbb
sti
test
fbld
xchg
jmp
in
mov
lock
cmpsl
ret
int
mov
add
fistps
push
pop
mov
sbb
es
test
mov
or
lret
sbb
xlat
rorl
mov
aam
xchg
addr16
leave
inc
xchg
mov
cmp
xchg
je
movsl
js
mov
movsl
outsl
xchg
test
inc
mov
test
rcll
xchg
sarl
jl
in
add
out
inc
sbb
insb
lods
pop
or
adc
daa
dec
das
adc
sub
cmpsl
movsl
in
pop
xor
push
jbe
pop
sub
xor
push
xor
stos
in
sarl
pusha
pop
xor
jecxz
mov
dec
lock
leave
jle
pop
test
xor
out
mov
stc
lods
add
cmp
xchg
rorl
inc
and
neg
ss
jo
outsb
hlt
loop
push
lret
adc
mov
fistps
mov
sbb
sub
lret
sub
xor
cmpsb
add
xchg
sub
adc
iret
fs
cmpsb
dec
xchg
ror
std
fs
bound
int
push
cmp
mov
pop
add
ret
mov
lret
sahf
inc
pop
push
call
lods
or
lock
add
inc
cmpsl
mov
popf
aad
clc
push
call
pop
jnp
pushf
jns
fisttps
test
mov
sbb
mov
pop
cmpsl
cmpsb
add
adc
cmp
and
and
repnz
lods
mov
out
cmp
lahf
xor
addr16
adc
jne
mov
adc
ret
and
imulb
test
insl
ljmp
dec
adc
mov
fistpll
jae
outsl
scas
cmpl
addl
aad
xchg
pop
cltd
and
mov
sar
mov
scas
xor
mov
icebp
adc
mov
or
shll
iret
add
push
add
adc
cwtl
fiadds
scas
in
mov
fcoms
and
popf
lahf
aam
push
cmpsb
mov
je
add
fcomps
jl
or
shrl
xchg
orb
mov
test
push
dec
sbb
xchg
mov
mov
and
push
imul
adc
sub
inc
cltd
inc
dec
adc
mov
cmp
daa
js
pop
in
lock
sbb
adc
jg
jle
scas
decb
out
imul
js
and
cltd
xor
pop
dec
out
xorb
rcl
and
add
pop
mov
fldt
cmpsl
cmp
inc
inc
pushf
aas
pop
xchg
std
adc
mov
push
jns
scas
aad
pushf
sbb
sahf
xchg
inc
sbb
lock
cli
sub
cltd
lahf
std
push
ret
imul
xor
fdivs
mov
dec
mov
jp
and
mov
cwtl
lods
sub
cmp
outsb
add
stos
mov
mov
jbe
rol
clc
loopne
inc
das
outsb
or
shlb
jge
gs
inc
mov
pusha
xchg
js
int
add
std
jb
pop
lods
in
shll
xchg
cmp
pop
mov
rorb
mov
push
sub
ret
movsl
cmp
sahf
xor
out
fstps
stos
jbe
psllq
sbb
push
mov
jbe
and
mov
pop
jge
or
cmpsl
cmp
mov
sti
flds
dec
xchg
mov
push
jno
ficoms
jl
pop
jmp
out
adc
sbbl
mov
mov
dec
loope
mov
stos
cmp
gs
inc
test
cli
gs
and
and
pushf
xchg
push
xor
ds
or
jae
jge
xchg
aaa
les
aam
leave
inc
push
lods
sbb
js
push
inc
dec
or
push
cli
out
mov
gs
xor
lea
pop
inc
lret
jl
inc
in
loop
xchg
icebp
cmp
inc
xor
fs
fstl
jnp
pusha
mov
jo
rol
cmpsl
sti
test
ss
loopne
mov
sub
sbb
mov
add
int3
sbb
cmp
jp
clc
loopne
dec
aas
pushl
xchg
dec
xchg
fsubrl
push
mov
xchg
aad
aad
clc
cltd
arpl
cltd
sbb
jge
mov
ffree
cmpl
mov
sub
mov
xchg
divl
inc
sub
mull
test
inc
enter
rorb
test
test
pop
jg
in
pop
jne
mov
loopne
dec
loope
add
add
sbb
lea
and
ss
push
pop
stc
cwtl
ret
xchg
jbe
test
push
jge
mov
fbstp
iret
aam
stc
incb
movsb
sbb
test
imul
push
xchg
aam
adc
adc
push
int3
push
arpl
in
or
pop
mov
ja
lods
test
xchg
inc
add
pop
test
xlat
inc
adc
mov
lods
pop
imul
sub
pop
cld
push
lret
imul
cmp
push
ret
xor
iret
xchg
mov
pop
repz
out
adc
cld
lods
adc
mov
push
js
std
mov
mov
jecxz
test
repnz
test
push
dec
pop
jo
stos
idiv
inc
cmpsl
insb
cmp
gs
in
jmp
sbb
push
push
mov
in
hlt
dec
cmp
pop
bswap
mov
scas
fstpt
cmp
push
jp
iret
sbb
mov
mov
outsl
ret
pushf
out
inc
sti
je
cmp
xor
aaa
and
xor
mov
xlat
xchg
inc
dec
hlt
sbb
in
mov
rcr
adc
mov
xor
and
popf
and
mov
fsubs
mov
add
mov
or
dec
pop
loop
enter
rcrb
xor
mov
test
pop
movsl
sbb
movsl
jbe
mov
mov
cmpsl
mov
loope
outsb
mov
and
cmp
pop
mov
out
sbb
in
icebp
mov
in
gs
pop
lods
and
es
add
pushf
lret
enter
adc
cmp
sti
mov
pop
mov
xchg
shll
je
addr16
lock
xlat
xor
add
mov
xchg
pop
addb
subb
dec
pop
cld
ja
push
xor
or
fsubrl
push
popf
iret
lock
push
lea
xor
and
adc
pop
and
dec
nop
lcall
lahf
cmpb
or
jae
lcall
xchg
hlt
mov
and
push
stos
addr16
sub
rorl
loope
and
pop
sti
jg
xchg
mov
pop
xor
in
hlt
das
mov
cli
std
xlat
xor
and
imul
pop
sub
mov
dec
sbb
sbb
iret
in
je
adc
cltd
add
adcl
ficoms
cmpsb
jle
adc
adc
lahf
sbb
in
or
sbb
fnstenv
rcrb
pop
popa
adc
mov
ljmp
dec
cmp
aad
add
cmc
enter
or
mov
mov
sub
and
mov
cmp
xchg
pop
push
cmc
cmp
lret
inc
outsb
das
mov
inc
cld
dec
dec
bound
movsb
inc
mov
test
leave
sub
sbb
mov
xor
in
fwait
int
xor
push
pop
movsb
xor
es
cld
push
and
push
or
repz
xor
add
stc
push
jle
sahf
sbb
cmc
and
pop
jne
std
xor
inc
jo
cmp
data16
call
push
mov
rcl
mov
inc
cmp
addr16
movsl
xchg
jnp
sbb
xchg
xchg
inc
je
std
mov
sub
ja
xchg
jbe
shll
sub
push
in
stc
stc
mov
bound
inc
xor
or
cmp
xor
test
pop
cmp
repz
repz
lds
xorl
push
lea
sub
xor
pop
mull
scas
icebp
inc
sub
popf
mov
ret
iret
mov
clc
lock
sbbb
cmp
sub
sbb
loop
mov
call
pop
fists
pusha
mov
cmpsb
outsb
dec
faddp
sub
dec
lahf
pop
cld
std
inc
xlat
mov
jne
adc
pop
inc
js
mov
rcll
jb
ja
jns
mulps
push
inc
sti
rcrb
mov
mov
ret
adc
cmp
jae
push
je
lods
pop
add
push
sub
ja
arpl
std
pusha
add
stc
into
mov
and
nop
movsb
inc
cmp
push
xor
movsl
pop
ret
cmp
cmp
std
mov
sahf
dec
test
leave
adc
out
mov
rcrb
xchg
pop
push
insl
stc
subb
ficompl
iret
xor
insb
clc
inc
adc
mov
mov
push
and
bound
and
insl
lea
or
insl
inc
adcb
adc
jg
je
pop
fmull
mov
mov
dec
jo
pop
rcll
push
in
aas
je
rcll
add
xor
xor
mov
rorl
shr
test
sbb
mov
pop
lahf
loop
movsl
in
rclb
dec
mov
push
lahf
dec
movsb
pop
ficoms
push
in
lea
out
mov
xchg
mov
add
xchg
insl
mov
or
pop
cmc
scas
add
cld
xchg
mov
adc
mov
add
pop
stos
cmc
fsubs
idivl
in
dec
xchg
adc
movsb
data16
popf
lret
mov
jge
and
sub
push
jns
dec
adc
push
out
movsb
cmc
ss
int3
sbb
or
jae
loop
test
sbb
jg
sbb
adc
pop
or
in
jno
stos
roll
mov
xchg
imul
push
xchg
repnz
inc
leave
inc
into
adc
rcrl
pop
add
loopne
lods
shlb
testl
adc
mov
movsb
push
xchg
out
addl
out
ss
ret
xchg
mov
repz
fisttpl
cmc
es
jp
ror
aam
pop
xor
addr16
mov
xlat
aas
push
inc
les
cmp
hlt
stos
mov
shl
adc
inc
xor
stos
ds
or
and
or
mov
add
inc
push
ret
cmp
lcall
dec
push
pushl
into
sti
das
ds
and
mov
mov
mov
xchg
xchg
lcall
sbb
xchg
jge
out
cltd
push
add
shlb
es
mov
mov
inc
das
inc
addb
icebp
add
cmc
insb
fldt
ljmp
mov
mov
dec
test
adc
jl
data16
sbb
inc
inc
jo
dec
lock
call
popa
call
imul
aam
fnstsw
fisttpll
push
sub
cmpsb
and
jne
xor
test
shll
scas
pop
or
pop
xchg
das
mov
les
mov
lahf
cmp
sbb
shll
adc
fcompl
xor
mov
mov
fdivl
call
dec
sbb
es
sub
aam
cmp
push
mov
and
sub
aas
cltd
xchg
mov
mov
mov
imul
jnp
or
cmp
lock
in
jg
stc
cmpsl
jne
mov
leave
mov
inc
subb
jg
fcompl
add
jge
in
pop
out
xchg
mov
rcl
adc
pop
imul
ljmp
int
mov
push
sbb
addr16
stos
or
idivb
inc
cmp
cmc
cmc
xchg
pop
pop
mov
mov
out
push
aam
jmp
push
loopne
sub
pop
sbb
jecxz
testl
sbb
xchg
fadd
push
out
mov
add
in
nop
xchg
outsl
dec
mov
ds
or
adc
inc
out
je
cmovno
jo
inc
fisttpll
or
jb
sbb
lods
fbld
cmp
xor
mov
pop
aaa
decl
ljmp
in
subl
in
enter
dec
mov
add
mov
lds
call
and
movb
test
iret
cltd
sub
out
fldl
adc
and
inc
in
cmpsl
mov
out
idivb
adc
scas
pop
sbbl
stc
je
ljmp
aaa
into
dec
and
mov
lds
xchg
pop
cmpsb
mov
jle
pop
sarl
mov
fdivs
shlb
aas
push
sub
sbb
sbb
add
call
xor
dec
xor
push
and
push
push
sbb
mov
fs
adc
repz
mov
mov
or
add
inc
adc
mov
xor
inc
jnp
jno
jns
mov
cmpl
testl
xchg
or
cld
aas
cmpsl
push
jmp
aaa
mov
mov
xor
mov
inc
imul
mov
aaa
ds
and
cwtl
jmp
push
add
xor
testb
gs
scas
rcll
lret
inc
xor
jo
adc
data16
lock
movsl
xchg
sbb
push
out
cmp
sub
jp
test
addr16
sbb
mov
push
sbb
ret
push
xor
insl
stc
mov
push
test
rcrb
jle
xor
adc
jo
jbe
sbb
push
jp
jns
popa
loop
push
inc
scas
insb
test
rolb
or
dec
cld
sti
es
lods
sahf
or
add
mov
dec
dec
nop
lcall
mov
dec
cmp
xor
insl
repz
in
icebp
enter
repnz
add
jg
cld
pop
dec
outsl
cwtl
js
push
mov
int3
aam
sub
pop
cmp
mov
arpl
in
in
and
mov
mov
sbb
mov
or
les
mov
lahf
xchg
test
into
je
mov
insl
aaa
sub
cmp
aas
push
out
imul
cmp
xor
out
int3
aad
loope
mov
mov
mov
push
or
jns
sti
cmp
xchg
dec
jo
out
mov
dec
mov
lds
sarb
xlat
cltd
sbb
js
imul
pop
fsubs
jo
pop
and
dec
or
sbb
pop
pop
imul
cmp
xchg
and
xor
cli
ret
cmp
jle
xor
loopne
cwtl
in
pop
leave
xchg
add
xchg
lods
ficomps
repz
push
pop
fstpt
and
push
add
cld
sbb
adc
pop
or
fistl
rclb
sti
hlt
gs
mov
push
orb
mov
mov
lods
pushf
dec
mov
int3
jno
xchg
jp
inc
stos
lods
sub
ret
je
pop
pop
gs
cmp
and
xadd
add
cmpsb
cmp
pop
cmp
inc
flds
loopne
nop
insb
adc
pop
jae
enter
out
loopne
aam
xchg
jmp
icebp
push
mov
mov
fdivrs
add
fnstcw
or
and
cmpsb
sbb
loope
jbe
sahf
hlt
pop
divl
adc
push
loopne
add
cmp
push
aaa
sbb
inc
into
rcll
les
roll
pop
jnp
inc
clc
cmp
test
inc
cmc
loop
cmp
mov
mov
and
pop
jb
push
jecxz
adc
mov
xchg
pushf
cmp
mov
xor
ljmp
lret
pop
in
sbb
jp
int
iret
int3
jl
lret
scas
xor
sahf
ds
mov
mov
fwait
in
shll
dec
xchg
cmp
dec
lea
arpl
dec
mov
push
xor
sar
gs
fadds
rorl
mov
cmp
in
or
dec
or
nop
imul
imul
fdivl
sbb
adc
inc
mov
addr16
pop
sbb
jg
fs
mov
cmpsl
inc
sub
jge
pop
or
sbb
out
cmpb
fucomp
inc
xor
jne
dec
mov
dec
sti
notl
aaa
loop
cmp
ss
out
jb
lcall
ja
fbld
xchg
pop
fildl
xor
or
mov
sbb
jg
iret
in
into
cmp
fwait
das
hlt
sub
sub
insb
cli
subb
data16
imul
cmp
or
inc
je
xchg
in
data16
lahf
sbb
clc
daa
cmp
int3
out
loop
ja
shrb
imul
pusha
mov
mov
sbb
jp
sbb
pop
jno
cmp
mov
push
rcr
xorb
and
mov
mov
mov
mov
out
xchg
repz
jns
lods
subl
add
outsb
aaa
mov
jbe
call
add
push
je
test
mov
ljmp
sbb
push
lcall
or
xor
mov
dec
jbe
sub
lahf
sbb
scas
shl
add
pop
inc
cmp
jb
loope
repz
cltd
adc
fdivl
sar
push
push
aas
mov
mov
add
out
mov
pusha
call
rorl
mov
inc
pushf
dec
orl
lret
jo
lahf
ror
sahf
int3
mov
ljmp
lock
in
sbb
push
divb
jnp
arpl
cmc
aaa
orb
adc
xchg
les
fwait
in
repz
lock
push
cmp
stc
jmp
jo
pop
dec
jnp
pop
hlt
lahf
xor
int3
mulb
pop
repz
aas
cltd
in
mov
into
hlt
lahf
mov
shr
mov
sbb
sbb
sub
shll
lds
push
ret
int
xchg
xchg
adc
jg
call
mov
int3
mov
sub
xchg
daa
js
ret
pop
out
fstps
xchg
scas
mov
cmp
fcmove
push
jne
sahf
jne
cmp
jbe
cmp
aam
jbe
loopne
mov
and
mov
mov
imul
imul
sub
xchg
or
aam
add
test
mov
shl
popf
sbb
int
mov
into
stos
dec
pop
movsl
ljmp
test
xor
lret
mov
lods
jne
out
lock
push
mov
inc
adc
sbb
xchg
inc
pop
out
jle
dec
push
jg
and
push
add
inc
icebp
pop
jno
adc
fwait
mov
fdivrl
movsl
cmp
clc
push
notb
iret
iret
push
rcr
and
ret
scas
imul
push
int
mov
push
aas
dec
mov
inc
pusha
es
adc
push
hlt
sbbl
or
mov
mov
pop
icebp
subb
les
jge
sub
loop
add
scas
dec
mov
out
adc
push
xor
testb
push
mov
xor
das
mov
cmp
mulb
inc
xchg
fnstsw
jo
inc
shlb
lret
cmpsb
push
loope
mov
or
mov
or
pop
dec
popf
call
clc
jo
out
leave
enter
cmc
push
lds
add
mov
and
xchg
lea
xchg
ret
or
adcb
or
mov
cld
add
aam
popa
inc
test
xor
icebp
call
mov
mov
pavgw
je
adc
push
jae
mov
dec
ja
mov
sbb
xor
mov
jg
sub
xlat
out
inc
shll
add
mov
cltd
lock
fadds
pop
jns
xor
scas
xchg
and
and
loop
pop
sub
lods
jno
dec
sub
scas
icebp
bound
push
push
imul
xor
ror
cmp
dec
aas
xor
sub
jecxz
or
cmp
xchg
fdivrs
lahf
icebp
inc
test
cmp
mov
call
inc
or
jb
into
out
sbb
pop
mov
outsb
in
pop
mov
mov
movsb
icebp
sub
fwait
out
repz
ret
xlat
repz
cmpb
pop
sahf
test
add
adc
dec
leave
or
push
push
jne
push
ljmp
rolb
cltd
mov
lds
jnp
loopne
xor
test
daa
fs
xchg
xchg
repnz
outsb
xor
lahf
jne
mov
xchg
xchg
test
xor
pop
or
sub
sti
mov
mov
ja
shl
add
mov
jecxz
repnz
push
cmp
scas
cmp
aam
loope
or
mulb
cltd
aam
shrl
mov
and
cs
dec
push
xchg
out
push
push
stos
in
cmp
loop
jecxz
push
dec
inc
punpckhdq
add
xchg
push
call
pop
idivl
mov
cmpsb
pushf
cld
jae
outsb
movd
mov
ret
stos
fistpl
mov
mov
adc
das
jae
xchg
repz
js
push
inc
cmpsl
jae
dec
xchg
inc
andl
rcrb
sub
inc
sub
add
rorl
push
add
dec
imulb
cli
aam
xor
in
lret
jne
inc
ja
and
sub
popf
cmp
jl
jl
xlat
imul
fs
shrb
in
xor
adc
add
jmp
popa
divl
js
mov
pop
out
mov
lret
push
jge
jbe
das
sbb
dec
mov
clc
jae
inc
push
xchg
lret
sub
mov
jge
lret
cmp
fsts
leave
sub
mov
icebp
notb
pusha
leave
pop
fisttpl
bsr
adc
xor
mov
jbe
loop
jecxz
pop
cmp
or
adc
into
pop
in
add
aad
stos
outsb
push
lods
insb
push
imulb
insb
xlat
cltd
mov
dec
add
jge
or
push
ds
adc
les
loop
push
in
pop
lret
das
lock
loopne
les
add
pop
add
mov
add
psubsb
jbe
mov
push
adc
cmp
cmp
lea
aad
popf
inc
lea
push
cmc
inc
cmp
arpl
xchg
cmp
jno
ret
mov
out
pop
or
aad
mov
pop
aad
gs
into
gs
std
pop
xchg
std
adc
stos
fmul
or
inc
xchg
pushf
bound
mov
ficomps
sbb
daa
ficoml
adc
inc
adc
sahf
daa
xchg
test
adc
outsl
xchg
call
adc
jecxz
pop
mov
sahf
enter
mulb
ja
lcall
adc
outsl
xchg
dec
sub
stos
cmp
xchg
lahf
add
jp
jle
sub
inc
test
mov
iret
mov
cld
testl
inc
mov
fwait
pop
in
test
roll
mov
mov
mov
divl
out
mov
inc
dec
cmc
shll
pop
jne
push
jne
decl
xchg
adc
mov
lea
movsb
mov
scas
mov
sahf
call
xor
pop
mov
pop
outsb
fdiv
or
pushf
jl
sbbl
ja
xorl
pusha
and
inc
fcmovb
xor
gs
cmp
inc
in
movsb
out
cmp
shld
mov
imul
push
jbe
out
fiaddl
fcmovbe
jbe
jge
pop
push
subb
mov
scas
sub
int3
cli
ds
aaa
ja
add
lds
cmp
ljmp
jno
scas
das
insb
in
cmpl
dec
sar
stos
fcompl
mov
ja
inc
out
daa
mov
cli
pop
push
mov
inc
mov
sbb
xchg
sbb
sub
pusha
out
push
scas
fbld
push
push
push
add
or
sub
xor
out
and
jae
movsl
dec
flds
ret
sbb
xchg
or
xor
aam
mov
mov
aad
mov
jo
xlat
leave
cmp
lods
out
popf
addr16
mov
jl
ja
enter
push
test
mov
mov
daa
fcomps
out
jno
insl
ja
imul
sbb
imul
cwtl
jp
subl
mov
dec
push
push
adc
leave
sub
mov
addr16
xor
loope
inc
arpl
mov
mov
sbb
xchg
push
push
sbb
xor
rol
outsb
mov
cmp
test
sbb
clc
sarb
xchg
inc
mov
xchg
ds
int
rcr
xchg
add
cmp
sarl
sbb
clc
inc
nop
add
testl
ss
cmpsb
push
sbb
xchg
dec
xor
ret
inc
dec
mov
xchg
dec
dec
inc
leave
scas
scas
mov
mov
and
popf
mov
jno
shrb
lret
dec
mov
mov
rolb
hlt
iret
xchg
xor
xchg
es
cmp
out
xchg
out
mov
sub
and
idiv
mov
jnp
ss
push
and
push
or
int
and
test
mov
gs
adc
dec
or
inc
fldt
sub
xchg
ret
rcr
push
je
dec
pop
xchg
jbe
lea
hlt
mov
addr16
push
inc
mov
fstl
or
imul
sub
mov
jb
xchg
push
loop
push
or
fdiv
popa
in
push
push
ret
fwait
push
push
push
popf
or
adc
movsl
lods
out
sub
loopne
xchg
add
mov
aas
add
sub
xchg
int
pop
inc
iret
cmpsl
mov
mov
mov
add
or
jnp
and
in
pop
inc
js
pop
sbb
movsb
int
mov
movsl
sub
aaa
dec
sub
int
jnp
lods
call
outsl
testb
add
add
sbb
movsb
pop
mov
dec
out
sti
inc
test
jg
shlb
jle
lds
jo
aam
std
inc
and
sub
push
pop
arpl
and
mov
stc
pop
cmp
xchg
int3
jge
sub
sahf
shll
enter
gs
in
hlt
sub
adc
test
xor
inc
mov
test
out
sub
lods
cmp
cmp
in
lret
cmp
push
push
cmc
lods
cmp
fadd
push
add
mov
call
orl
cmp
and
js
cmp
cs
pop
out
inc
popa
testb
cmc
test
leave
jmp
shrb
push
rclb
aaa
sbb
mov
not
cmp
out
mov
add
pop
out
shlb
push
in
push
loope
xchg
mov
loope
aam
aaa
mov
shrl
or
rcll
pop
jmp
adc
aam
cmp
cli
rcrl
roll
shrb
not
cld
pop
cs
dec
std
testl
push
gs
lret
call
scas
xchg
push
pop
dec
sbb
mov
push
ds
or
sbb
sbb
in
mov
cld
mov
sub
mov
xor
insl
cltd
decl
test
add
not
aad
or
mov
fyl2xp1
or
pop
js
shll
push
push
xor
iret
jne
rcll
cwtl
cwtl
das
jp
xchg
jne
jae
sub
mov
dec
fisubs
push
mov
popf
shlb
add
in
imul
jecxz
adcl
notl
adc
bound
imul
sbb
scas
jmp
or
pop
ds
mov
pushf
cmp
mov
ljmp
sbbl
in
mov
mov
or
imul
and
cmp
dec
das
addr16
ret
cmp
pop
cltd
imul
inc
imul
ja
imul
nop
loope
inc
rcl
aam
mov
fcomi
dec
outsb
adc
bound
add
scas
arpl
mov
pusha
sub
lods
push
cmp
dec
pusha
and
mov
enter
or
sub
inc
out
cmp
mov
and
movsl
lea
mov
jnp
dec
mov
mov
int
fdiv
xor
dec
sub
mov
cmp
adc
aam
pop
sti
shr
push
stos
wrmsr
add
or
and
push
neg
lds
mov
ss
jns
into
into
aas
xchg
xchg
xchg
fistpll
adc
adc
scas
mov
and
dec
dec
sbb
mov
push
and
sbb
dec
pop
push
jl
jecxz
push
mov
sub
push
add
mov
sbb
aam
std
adc
adc
js
or
mov
jne
fsubr
mov
xor
cmpsb
inc
mov
mov
push
mov
inc
xor
mov
adc
in
xchg
je
adc
cmp
dec
orb
fsts
stos
in
ljmp
shr
push
dec
aam
pmaxub
iret
push
popa
jne
xchg
pusha
dec
call
mov
mov
lahf
push
xchg
iret
pop
out
pop
mov
cmp
jle
cwtl
dec
xor
rsqrtps
sub
stc
les
stos
push
jp
es
mov
dec
cli
pop
jnp
jge
enter
pop
sub
clc
push
mov
pop
ss
iret
pop
sub
pop
lea
pop
jae
inc
dec
adc
das
push
mov
mov
push
inc
xchg
test
mov
jmp
inc
leave
xor
mov
arpl
and
mov
dec
jnp
stos
jecxz
cmpsb
jl
lcall
xchg
ss
jno
add
enter
jb
cmp
lods
mov
or
jmp
jg
ja
and
lea
test
or
push
sub
in
je
loope
repz
test
xchg
and
or
dec
inc
mov
cwtl
popa
mov
mov
xor
in
sbb
repz
and
stc
icebp
push
dec
dec
cwtl
sub
mov
xchg
dec
jns
sub
mov
adc
std
push
jns
mov
mov
ret
ret
or
dec
rorl
sub
pop
push
fdivl
pop
push
inc
rep
add
push
push
lods
popa
insl
sub
cmpsl
cmp
sub
in
lahf
bound
data16
in
push
repnz
dec
sbb
xor
sub
nop
jle
subb
xor
or
mov
dec
fwait
xchg
lcall
fmulp
pushf
mov
pop
test
mov
js
sbbl
in
xchg
pop
popf
add
ss
in
fdivr
pop
xchg
xchg
and
xchg
nop
nop
je
jb
lahf
ds
inc
add
dec
clc
int
or
cmpsb
pop
pop
rcrl
clc
xchg
les
add
popa
out
inc
enter
push
dec
ja
mov
loopne
cs
mov
rclb
mov
call
sbb
mov
mov
arpl
pop
mov
incb
pop
leave
je
jmp
icebp
movsb
fldcw
push
lock
lds
out
jecxz,pn
int
cmp
mov
leave
jl
cld
adc
mov
bound
push
xchg
xor
sbb
aaa
ret
adc
test
cmpsl
or
lods
les
xor
mov
sub
adc
xor
xchg
xchg
add
mov
jne
jmp
test
lock
aam
lret
sbb
es
jne
adc
dec
add
hlt
jne
arpl
mulps
dec
sbb
test
dec
sbb
insl
cld
mov
into
lcall
je
lret
imul
lea
fwait
scas
mov
dec
iret
push
daa
inc
push
fldt
fdivr
je
movsb
inc
or
sub
shl
pop
xor
in
leave
pop
mov
sub
in
push
testb
loope
and
push
jle,pn
insb
testl
loope
cmp
and
arpl
jae
test
imul
inc
sbb
fists
lcall
enter
dec
xlat
cmp
subb
sbb
xchg
jo
fwait
movsb
insb
xchg
push
sbb
mov
sbb
jbe
jno
sub
ss
mov
sub
inc
fidivl
mov
mov
call
das
xor
mov
sub
push
mov
jmp
push
in
cmp
push
inc
jmp
inc
push
or
xchg
lahf
fidivl
dec
adc
inc
jle
les
std
mov
xor
stc
mov
sbb
outsb
xor
in
loopne
cmc
test
pop
ret
sub
gs
out
in
sbb
sbb
shll
jl
ds
ret
into
cmp
pop
fstpt
add
and
inc
mov
xor
sarl
gs
mov
mov
sub
out
add
lahf
psllq
addr16
loopne
cmp
or
in
xchg
sbb
out
mov
sbb
dec
xor
mov
jl
bound
mov
test
jmp
imul
mov
cmp
lock
jecxz
pop
cmc
in
movsl
lret
or
mov
test
inc
cmc
imul
test
pop
fidivrs
jnp
push
push
cmc
test
rcll
pop
push
insb
loop
sbb
sub
in
mov
inc
sbb
int3
lretw
movl
add
push
repnz
and
mov
xchg
xchg
push
int
mov
test
cli
mull
cli
js
bnd
cmp
mov
pop
faddl
and
sub
xor
mov
lret
fdiv
mov
cmp
stc
imul
fwait
mov
enter
jb
insl
nop
adc
test
es
pop
and
inc
sub
jb
push
dec
pop
dec
rep
daa
outsb
je
xor
push
lret
sub
lret
lea
cmp
and
xchg
ja
cmp
dec
js
inc
fwait
ds
jns
ret
push
mov
push
or
jae
and
pop
xchg
loope
push
std
nop
sbb
mov
outsl
add
test
sub
push
aad
push
rclb
mov
and
mov
push
data16
loop
dec
repnz
arpl
mov
jbe
outsl
sub
je
xor
pop
in
sbb
repz
xchg
adc
push
lret
mov
push
xchg
aad
inc
mov
lcall
fisubs
and
adc
adc
ret
lcall
lods
movsb
clc
pop
rorb
xchg
daa
mov
jg
loope
inc
mov
stc
fisubrs
xor
mov
movsb
and
push
aam
fiaddl
lahf
pop
jecxz
mov
jmp
adc
fs
or
dec
add
push
mov
mov
dec
cmp
rorl
out
testb
out
outsl
sbb
fmuls
cmp
push
add
adc
pop
mov
sti
jne
xchg
adc
in
ja
pop
ret
test
out
out
sbbl
in
jle
pushf
repz
mov
stos
xor
mov
out
lock
xor
shl
sbb
lret
add
pushf
jbe
movb
ds
imul
jns
push
ljmp
leave
outsb
inc
outsl
mov
xor
repnz
in
cld
and
std
rol
dec
and
add
jp
leave
cs
test
mov
popf
jl
scas
les
ja
mov
mov
mov
mov
pop
int3
iret
bound
jmp
out
pop
jbe
mov
mov
sti
push
jl
mov
iret
aas
dec
pop
cmp
push
sbb
cmpsl
mov
les
cmp
out
push
dec
cmpsl
add
repnz
jmp
xlat
lret
lods
pop
movsb
cmp
lcall
fwait
jne
int
inc
push
mov
cmp
repz
push
xchg
scas
shlb
xchg
daa
call
insl
sub
leave
and
rcrb
insb
enter
call
jl
mov
sub
xchg
push
xor
flds
and
into
pusha
sarl
add
sti
leave
shrb
hlt
dec
ret
xor
mov
jbe
xor
je
and
mov
cltd
leave
mov
jp
hlt
mov
sbb
push
jecxz
xchg
hlt
sub
sbb
push
rol
pop
and
cmp
sub
dec
in
cmp
push
pop
xchg
icebp
repz
andb
jo
stos
mov
fxch
imul
ljmp
push
repz
out
movsl
into
jp
add
lods
loopne
daa
jmp
mov
leave
andb
jb
mov
scas
and
scas
inc
mov
mov
add
sub
cmp
xchg
adc
scas
lds
mov
outsl
and
sbb
or
cmp
push
aad
cmpsl
inc
jle
cmpsl
out
pop
jne
gs
jne
cs
aam
add
movsb
jg
popf
aas
cwtl
js
xor
dec
cmp
pop
call
cmp
pop
or
sbbb
inc
push
xchg
pop
and
mov
popa
xchg
sub
jne
insl
clc
gs
adc
adc
ds
mov
cmpsl
negb
iret
mov
repz
jg
in
out
inc
fcmovnb
lret
mov
js
out
sbb
leave
sti
dec
mov
jp
cmpsb
pop
cmp
fistps
cmp
mov
loop
fnstenv
add
xchg
inc
sub
cmp
pop
and
pop
lea
fisubl
pop
lock
repz
lret
rorb
xchg
cmp
call
sahf
fcmovu
test
add
adc
leave
add
nop
mov
mov
or
stos
stc
adc
inc
repnz
into
sbb
pushf
dec
mov
and
push
imul
inc
inc
call
push
xor
psubw
mul
cmpl
test
jns
inc
sbb
inc
xor
aam
cmp
mov
xchg
addl
mov
fwait
div
or
sub
adc
xor
mov
push
mov
ret
jb
pop
push
mov
inc
je
lods
ret
ret
inc
pop
add
lods
and
or
jl
and
stc
je
mov
movsb
rclb
dec
das
nop
lock
ds
mov
test
mov
mov
int
ds
mov
xchg
push
sbb
fmuls
mov
out
sbb
inc
insl
setg
xchg
adc
mov
cmpsb
ds
adc
xor
add
cmp
jnp
in
xor
push
dec
mov
xor
mov
dec
aad
push
adc
das
in
mov
mov
add
xchg
cmpsb
push
pop
push
js
aam
pushf
or
cmpb
sbb
cli
fs
push
jmp
pop
jns
mov
cmc
cmp
pop
lds
add
push
jmp
ret
xlat
jo
hlt
ds
loope
ss
sti
mov
jo
call
jae
das
xchg
sub
jge
pop
sub
push
pop
push
xor
pop
std
sbb
aas
mov
sarb
or
mov
mov
xchg
fnstcw
in
in
mov
adc
mov
scas
scas
adc
jg
cmpsl
jo
inc
dec
mov
or
and
hlt
add
das
ss
add
mov
pop
sbb
inc
xchg
or
cmp
pushf
push
lods
ffreep
jmp
cwtl
lret
jmp
push
gs
fbstp
mov
mov
dec
rorl
mov
and
pop
or
sbb
jle
ljmp
adc
jno
sub
ret
nop
pop
notl
out
out
jmp
fcomps
int3
repnz
in
push
incl
jno
sub
fs
cltd
mov
cmpsl
daa
lcall
movsb
sub
scas
xor
mov
ficomps
sahf
add
test
imul
imull
jmp
inc
shrb
sbb
outsb
test
xchg
cmpsb
sbb
sbb
call
push
cmc
xchg
mov
int3
repz
cmc
sub
and
add
mov
adc
pop
push
pop
jmp
lret
pop
outsl
fldt
adc
and
cmp
xor
push
clc
clc
imul
push
xchg
mov
mov
mov
insb
push
pop
and
adc
pop
cmpsl
sub
and
mov
pushf
testl
xor
in
fisubrl
dec
sbb
test
jmp
cmp
cld
divb
mov
addb
into
inc
add
into
pop
cmp
insb
cwtl
and
jne
arpl
sbb
das
stos
and
cmp
push
ret
std
jmp
mov
cmc
scas
je
push
jnp
outsl
cmp
fdivs
pop
vphadduwq
imul
nop
mov
pop
fsubp
pop
pushf
push
xor
adc
mov
mov
mov
pop
or
jae
cli
inc
pop
xchg
aas
mov
mov
aaa
rcrb
xor
sub
lock
or
jl
cs
mov
in
pop
popa
dec
lods
repz
lods
dec
mov
adc
divl
aas
scas
in
icebp
movsl
cmc
setbe
lret
dec
mov
adc
xor
lds
cld
jl
adc
ss
mov
repnz
mov
jmp
pop
and
cltd
pop
xor
notrack
dec
orl
hlt
shrb
sbb
inc
xor
cltd
mov
jnp
sub
jb
imul
sbb
jmp
pop
push
roll
cmpsb
xlat
push
inc
adc
xchg
fsubr
cwtl
push
cmp
sbbb
clc
jmp
or
cmp
cmp
sbb
adc
xchg
push
mov
cli
push
movsl
jns
lods
pop
ss
ret
and
sahf
xchg
rcrl
out
out
mov
xlat
aam
idivl
dec
and
test
mov
ds
sub
pop
loope
lret
clc
dec
icebp
mov
sbb
cmpsl
test
mov
cmpsb
aad
mov
movsl
enter
ret
sub
sub
inc
loopne
adc
outsb
cld
jmp
jb
insl
mov
jb
inc
repz
jge
iret
fisubrs
inc
xchg
lock
push
out
pop
sbb
mov
cwtl
sti
adc
and
xor
mov
sub
mov
pushf
sti
lcall
add
dec
dec
jl
in
pop
mov
inc
sbb
rcrb
or
daa
mov
in
jbe
mov
push
gs
insl
and
lret
xor
mov
cmp
in
iret
test
loopne
inc
fwait
shl
xchg
mov
and
cmp
and
mov
cld
std
lcall
fwait
das
mov
jnp
insb
mov
data16
int
repz
xchg
aaa
pusha
out
xlat
in
inc
fiaddl
out
push
call
leave
enter
dec
adc
mov
sbb
bswap
out
imul
test
pop
push
push
mov
jo
leave
mov
adc
ret
cmp
or
inc
xor
int
mov
sub
jg
pop
out
into
and
mov
lea
inc
mov
sub
inc
add
mov
test
and
fs
icebp
cmpsb
pop
xor
insb
or
ret
rclb
ret
and
cmp
or
outsl
dec
push
stos
cmp
xchg
mov
push
and
xor
leave
add
js
cmp
dec
leave
dec
imul
fldenv
in
incl
in
xor
cmpsb
adc
inc
or
sahf
das
push
mov
push
in
movsl
mov
out
jle
sahf
mov
stos
xchg
xor
inc
sbb
cmp
or
iret
sbb
repnz
mov
icebp
mov
aas
shlb
xchg
dec
push
xchg
xor
sbb
mov
repz
push
xlat
pop
jge
pop
sub
and
imul
xor
adc
sub
ss
push
cmc
scas
rcrl
hlt
mov
mov
in
fs
or
inc
xlat
jae
mov
aam
lcall
xchg
dec
sub
cli
push
xchg
jne
fs
mov
popa
fwait
sub
xor
rorl
movsb
mov
mov
mov
pop
jo
sub
mov
xor
push
inc
jmp
adc
inc
cltd
cmc
xor
cmp
sbb
push
pop
rcr
rclb
mov
ja
push
leave
add
lods
test
dec
jns
sub
clc
insl
dec
mov
mov
nop
gs
rorb
push
inc
or
mov
cwtl
xor
inc
mov
outsl
add
in
lods
cmp
fnsave
mov
mov
imul
lods
mov
pop
jecxz
frstor
icebp
mov
xchg
xchg
add
movsb
mov
pop
xor
clc
arpl
cmp
xchg
sbb
sub
in
jge
dec
dec
xchg
scas
cmpsl
lea
mov
jb
or
adc
mov
lret
mov
stc
fadds
dec
mov
or
repz
sbb
jp
push
arpl
sub
dec
push
leave
cld
push
mov
mov
inc
adc
pushf
or
jae
aas
inc
pop
ret
xor
inc
jl
jns
imul
loope
jnp
sub
fstpl
shrb
inc
fsubrs
leave
and
xor
mov
data16
sahf
pop
jecxz
in
xchg
cmp
push
loope
leave
dec
aas
cltd
jno
sbb
sbb
pop
negb
sub
ret
inc
mov
sub
out
test
in
xchg
je
jge
add
inc
cmpb
and
arpl
xchg
xchg
cmc
ret
cmpsb
loop
movsw
push
dec
mov
cmp
mov
dec
push
or
imul
out
jne
push
fcmovnb
jle
or
je
pop
mov
bswap
cmp
cs
roll
inc
jns
mov
pavgw
or
dec
mov
mov
mov
xchg
iret
or
or
xor
idiv
outsb
cmc
xor
xchg
xchg
jp
sbb
popf
imul
xchg
rcrb
hlt
sbbb
popf
negb
inc
cwtl
mov
sti
addl
or
pushf
inc
mov
sbb
aad
cli
xchg
jbe
xor
push
addr16
sbb
pop
mov
adc
fisttpl
adc
inc
shr
jmp
dec
pusha
in
or
fldenv
inc
and
insb
pop
or
in
adc
inc
sbb
and
xchg
sub
cmp
or
sahf
faddl
and
cltd
leave
or
cld
and
push
fstl
imul
add
add
int3
test
cwtl
movsl
xchg
ss
jge
clc
mov
mov
fidivrl
test
into
or
mov
xchg
aas
dec
mov
aam
dec
and
arpl
mov
call
add
in
adc
bswap
jae
sbb
sahf
pop
loop
repnz
and
and
bound
imul
add
iret
pop
and
push
arpl
popa
push
mov
xchg
mov
jp
ror
mov
shl
push
into
ja
clc
pusha
mov
andb
dec
sub
dec
pop
shll
or
cmp
cltd
outsb
cmp
sbb
inc
mov
imul
jle
enter
sahf
mov
mov
pop
push
mov
sub
mov
mov
jmp
cmp
or
out
mov
sbb
and
mov
xchg
addl
ficomps
pop
jb
mov
mov
add
mov
ret
pop
ret
cmp
adc
pop
xchg
loopne
lret
push
add
inc
mov
xor
sub
stos
xor
adc
bound
sub
mov
aas
adc
inc
xchg
loopne
xor
jo
mov
negl
mov
adc
jg
cltd
mov
push
dec
leave
imul
mov
sbb
or
xchg
fstps
shr
cmp
jge
scas
add
dec
and
inc
inc
mov
jg
xlat
jl
mov
dec
inc
addb
jg
div
lea
aam
and
push
imul
or
dec
mov
lds
and
loopne
loope
push
adc
mov
adc
int
sub
jo
and
pop
lods
mov
mov
jge
movsb
push
lds
pop
xchg
inc
push
mov
pop
out
push
filds
dec
and
or
ficoml
cli
mov
stos
inc
ret
loope
cmp
push
dec
bound
and
mov
pop
xor
fst
pop
jmp
add
ja
outsb
test
pop
loop
sub
mov
leave
mov
rcll
mov
les
push
xlat
lds
dec
mov
jne
sarl
lea
sbb
mulb
push
inc
lods
mov
xlat
lcall
fstpt
jg
daa
pop
into
mov
ss
jns
mov
lahf
nop
rcr
lock
repz
sarl
mov
jnp
cli
insb
movl
push
cmp
pop
mov
mov
or
xor
push
add
ljmp
ss
or
adc
mov
jo
ds
popa
xor
test
jae
cs
loope
pop
arpl
icebp
mov
or
pop
and
cmc
add
jg
mov
jp
mov
or
add
negl
cli
or
aad
ret
in
xchg
mov
out
enter
push
and
jmp
adc
mulb
and
jg
dec
mov
sti
jae
repz
std
hlt
add
mov
scas
rolb
cs
mov
rolb
test
inc
lret
dec
fmul
popa
aaa
test
ret
pushf
adc
jo
ret
sub
push
dec
test
fcoms
fildl
ljmp
jl
fldenv
xchg
push
jp
jle
ja
xor
sub
scas
pop
int3
imul
lea
lock
data16
mov
pop
sub
scas
mov
jnp
frstor
fisttps
arpl
mov
and
mov
pop
pop
pop
std
pop
xor
sbb
pop
xchg
ret
popf
dec
mov
loope
lea
mov
inc
js
mov
dec
xchg
sub
rcll
sbb
adc
push
mov
pop
jmp
into
lahf
xor
inc
pop
fisubs
int3
push
ds
pusha
lcall
add
sub
xchg
cltd
jo
cmp
or
fildll
lret
and
mov
jmp
or
aam
cmc
daa
out
je
ffree
inc
cmpl
sub
fwait
inc
lcall
sub
inc
push
mov
or
enter
test
xor
insb
jb
fsts
enter
jmp
fwait
xchg
jmp
jb
add
hlt
mov
pop
cmp
cld
pop
movsl
mov
in
int3
or
push
bound
xor
std
addb
loope
jl
jge
nop
add
in
or
iret
sbb
dec
roll
sahf
aas
inc
js
xchg
sub
arpl
mov
pop
push
cltd
ljmp
dec
pushf
dec
cmp
jg
mov
push
push
mov
xor
add
pop
stos
std
fistps
or
stos
lret
fildll
dec
xchg
arpl
xchg
mov
cmp
cwtl
in
or
out
jae
inc
push
mov
add
mov
adc
dec
insb
sbbb
xchg
jmp
pop
mov
add
sub
dec
movsl
imul
cmpsb
lcall
lret
imulb
xlat
mov
cmpsb
xchg
or
and
inc
push
pop
inc
gs
dec
or
or
cmc
pop
les
popa
ret
loop
dec
mov
add
js
push
mov
push
add
inc
mov
repnz
fmuls
outsb
jl
sahf
cmp
push
pop
sahf
xlat
clc
mov
push
test
add
scas
sbb
fwait
std
mov
addr16
push
push
dec
xor
and
mov
scas
sub
xchg
push
dec
xorl
bound
shl
or
adc
pop
repz
clc
mov
mov
sahf
and
std
mov
xlat
adc
push
push
push
in
add
mov
sbb
in
xchg
outsl
repnz
jo
sub
lea
fcompl
daa
rcrl
lods
out
cmp
imul
rolb
ss
incb
js
jge
pop
dec
dec
ret
push
stos
push
test
out
aad
push
dec
adc
or
aaa
pushf
sbb
xchg
std
shlb
lahf
mov
mov
mov
mov
cltd
xchg
mov
sub
dec
lea
repnz
adcl
dec
fistl
sbb
rol
icebp
stos
insl
cmp
xchg
xor
rclb
add
and
shl
xchg
dec
xor
cld
dec
lahf
nop
inc
mov
imul
or
fs
hlt
cmpsb
or
ss
flds
imull
jl
inc
jbe
pop
sbb
sahf
and
dec
stc
dec
cmpsl
pop
mov
shll
test
xchg
andl
aad
adc
cmp
push
filds
pop
mov
fstp
push
mov
mov
jmp
lcall
rorb
repnz
dec
dec
cmpsl
jge
and
and
shl
insb
add
call
jp
dec
sbb
shll
mov
stc
jae
insb
stos
dec
xchg
cwtl
dec
mov
outsl
loope
sbb
popa
xor
out
xchg
subl
mov
sahf
xor
dec
rclb
jg
sub
inc
and
sbb
mov
aas
sbb
movsl
push
sub
xchg
iret
bound
es
fstpl
roll
lods
sarl
lcall
cs
xlat
mov
and
sub
pop
ret
rep
popa
nop
pop
pop
jg
xor
je
in
popa
imul
xchg
and
shrb
out
idiv
lret
cs
out
shrl
stos
jmp
adc
mov
loopne
bound
xchg
pop
mov
xchg
aaa
cli
xor
fwait
lret
mov
imul
mov
lds
or
popf
push
and
lcall
test
std
sti
fcompl
push
adc
push
or
je
in
xchg
and
test
lock
insl
xchg
jnp
inc
in
push
stc
subl
xor
inc
and
and
xlat
push
lret
rcrl
aad
js
inc
aad
dec
push
inc
jmp
out
lahf
xchg
call
pushf
popa
aas
div
sub
push
mov
adc
jb
push
nop
sahf
inc
lock
movb
inc
ret
mov
cmp
stos
or
cs
push
pop
or
sub
mov
push
pop
mov
xor
sbb
jne
movsb
call
fcmovu
pusha
mov
adc
dec
fsub
push
mov
lock
sub
and
lret
add
enter
xor
pusha
outsb
mov
add
and
mov
adc
aad
add
lds
mov
les
jl
pop
xchg
sub
dec
dec
fbld
lds
inc
cltd
out
sbb
mov
and
pop
in
cli
mov
xor
imul
mov
jge
and
pop
or
mov
mov
push
js
scas
into
pop
push
es
cwtl
mov
outsb
xor
test
xor
dec
or
xor
lods
mov
lea
addr16
test
js
cmpsl
inc
movsl
mov
in
stos
insl
adc
nop
movsl
or
lret
nopl
mov
cmpsb
mov
pusha
xchg
fwait
mov
arpl
mov
mov
fildll
inc
int3
pop
mov
imull
xlat
mov
test
out
sub
lret
and
ds
inc
in
sub
sub
pop
ja
fs
dec
jg
push
jbe
push
pop
pop
jb
mov
mov
sub
push
or
mov
lds
loope
jo
lods
fiaddl
aaa
pop
sub
add
pop
daa
cmp
out
add
aas
adc
xchg
and
insl
lods
lcall
mov
sub
pushf
push
inc
jae
jmp
jns
sbb
ja
mov
popf
inc
mov
push
sub
imul
aad
jecxz
mov
mov
sub
in
push
mov
aam
rcrl
or
nop
mov
pop
mov
pusha
iret
or
or
stos
ret
push
cmpsb
aam
pop
stos
leave
cs
mov
out
fdivr
pop
cltd
mov
cli
xchg
push
aas
mov
jmp
mov
cmpb
cmp
shrl
les
stos
rcrb
out
and
and
cmp
cmp
and
movsw
jmp
pushf
and
mov
dec
mov
lahf
adc
rcrl
xchg
jne
adcl
negb
or
fwait
mov
dec
int
dec
std
add
sub
lods
sti
pop
push
ss
jae
pop
mov
repz
push
insb
aam
fimull
cmpsb
out
push
or
pop
movsb
pop
sbb
mov
pushf
push
jnp
add
xchg
or
jmp
je
sub
jae
xchg
cmc
sbb
mov
aad
test
fwait
jo
and
push
imul
mov
dec
neg
mov
sub
clc
add
imul
mov
and
xor
push
addr16
xor
adc
ljmp
in
cld
das
cli
cmp
inc
bnd
mov
jno
retw
push
hlt
hlt
adc
enter
or
xchg
pop
mov
nop
adc
cld
jno
or
mov
data16
mov
mov
ljmp
cld
popf
fsubrs
xchg
dec
lock
inc
xor
fmul
sarb
jecxz
adc
lcall
imul
decb
or
push
xchg
imul
je
inc
pop
cmp
hlt
xor
ret
sub
or
and
or
sub
dec
addl
cmp
sti
mov
xor
mov
iret
cmpsb
fwait
sbb
add
cli
fmuls
pop
aas
push
push
in
jg
jmp
xchg
xlat
cld
enter
repnz
int3
mov
and
pop
mov
mov
jmp
movsl
jmp
mov
adc
inc
das
cld
mov
aas
cmp
mov
sub
sub
fdivr
push
adc
hlt
xchg
mov
xor
std
pop
not
dec
mov
sub
jo
f2xm1
pop
mov
adc
adc
mov
xor
push
pop
pushf
lret
shll
mov
ret
pop
inc
or
aam
pop
dec
mov
test
test
std
mov
orl
imul
xorl
xchg
in
add
daa
cmp
add
mov
dec
push
push
incb
clc
int
jp
insl
xchg
fsqrt
and
call
into
rcll
xchg
ret
mov
out
adc
cmp
aad
cltd
pop
jbe
jl
pop
lcall
xchg
fldl
lea
repz
bound
or
mov
popf
call
jle
push
push
mov
sub
gs
mov
mov
mov
pushf
xchg
xchg
stos
scas
in
clc
cmpsb
pushf
pusha
mov
movsl
inc
outsl
lea
pop
movsb
bound
loope
mov
push
roll
rol
jb
nop
mov
dec
jl
add
sbb
mov
mov
jecxz
sub
cmpsl
mov
adc
inc
sbb
loop
push
pop
sub
inc
dec
and
jo
inc
pop
mov
test
aas
js
rorl
lds
jmp
dec
imul
fcom
add
xchg
push
jmp
cmc
je
mov
movsb
das
inc
inc
add
cmc
lock
in
nop
insl
and
xchg
cmp
fiaddl
lea
mov
std
pop
add
scas
aad
sub
idiv
xchg
pusha
and
out
int
clc
lret
mov
bound
sahf
movsb
arpl
mov
aaa
hlt
mov
ljmp
jo
xor
sbbl
push
into
sbb
nop
clc
xlat
in
daa
mov
lcall
fcomps
jmp
scas
seto
rolb
fildl
stos
stos
aas
out
push
cmp
mov
inc
jb
iret
add
imul
aam
pushf
sub
cmpsl
adcb
sub
mov
out
xlat
xor
fldenv
outsb
stc
pop
xchg
fisttps
xchg
xor
dec
lods
dec
pop
dec
rcrl
xorl
mov
popa
sbb
cs
rclb
xchg
inc
pop
push
cmpsl
loope
mov
std
xor
mov
sahf
or
push
lcall
cmp
mov
xor
mov
mov
inc
sbb
test
daa
dec
adc
rcl
out
fwait
pushf
lahf
mulb
inc
or
pop
dec
icebp
and
test
inc
lret
fldt
jl
mov
scas
es
jb
xchg
mov
dec
in
stc
or
cmc
push
push
xor
cmp
xchg
jno
sti
mov
aad
sub
imul
xor
out
out
shl
aas
cmc
ljmp
outsb
stos
xchg
int
mov
cmp
xlat
inc
jns
push
mov
cltd
sub
cmp
sti
adc
stos
test
fidivs
mov
fstp
push
pop
mov
loope
sarl
cmc
aas
daa
lods
rep
fs
xchg
xchg
jnp
bound
push
pop
bnd
insb
je
or
incb
and
mov
out
in
lret
jge
lret
or
sub
mov
add
jp
in
fsubrs
nop
mov
ja
add
cli
jno
jnp
out
dec
pop
ss
enter
pop
aaa
sahf
jnp
cld
pushf
and
in
lahf
insb
out
lret
sbbl
mov
aad
sbb
mov
pop
sbb
or
cld
cli
mov
addr16
scas
mov
lock
test
push
or
iret
sbb
test
pop
iret
push
insb
int
xor
scas
mov
lret
pushl
jne
mov
mulb
mov
call
sbb
sbbb
pop
jl
clc
pop
stos
imul
jnp
jmp
sub
outsb
icebp
or
xchg
loop
lea
xlat
cli
mov
jne
fwait
repnz
sub
icebp
nop
mov
lods
xchg
decb
xchg
pop
jle
mov
aaa
jb
xor
jne
mov
inc
mov
jne
lcall
push
push
mov
cmp
mov
mov
mov
jnp
pop
shll
es
mov
inc
pop
dec
repz
cmp
ret
jecxz
ret
fdivrl
adc
mov
mov
subb
dec
mov
fadd
adc
leave
mov
push
or
loop
out
aad
das
out
pushf
and
pushf
cli
cmp
lahf
into
mov
cs
and
inc
jl
lcall
push
pop
data16
cmpb
xor
jb
xchg
jl
mov
push
push
lret
mov
or
imul
xor
call
filds
adc
xchg
roll
add
jae
mov
xchg
popf
loope
insl
shrl
push
cld
dec
rcl
dec
call
add
test
cmpsl
aad
or
adc
sbb
out
adc
push
daa
loopne
adc
mov
push
push
mov
pop
mov
leave
es
cli
push
cmovp
icebp
sbb
pop
int3
lds
jp
jno
loop
lahf
popa
jae
lret
jno
push
popa
push
loopne
cmp
leave
fistps
dec
std
call
lock
sub
jl
or
mov
xchg
sub
push
fidivrs
xlat
push
sti
lahf
cmpsb
loopne
icebp
imul
pop
sbb
cmpl
xchg
adc
mov
and
add
pop
shlb
int
lds
pop
lock
gs
xchg
jmp
cmp
aaa
inc
pop
test
sbb
push
in
pop
cmp
adc
push
adc
or
inc
xlat
js
or
sub
inc
inc
inc
push
xchg
xor
mov
cmpsl
sbb
lahf
sub
cltd
pop
dec
jmp
int3
test
adc
jnp,pn
sbb
xor
icebp
sub
lea
pop
xlat
or
loop
mov
negl
jmp
mov
fcoms
and
push
dec
sub
add
nop
cmpsb
push
push
fwait
push
cmp
lcall
add
aam
fs
insb
repnz
fcmovnu
inc
lcall
stos
scas
cmp
ljmp
in
pusha
shll
mov
fiadds
loope
sarb
outsb
pop
lds
rolb
fwait
xchg
add
push
in
mov
enter
bound
and
sbb
mov
aad
sbb
xchg
fs
roll
rclb
frstor
cld
movsb
adc
inc
mov
and
sbb
adc
adc
cmp
xchg
push
dec
mov
inc
mov
adc
int
das
lcall
jne
jnp
push
repnz
pop
mov
jecxz
cmp
orl
cmp
dec
fnstcw
test
push
sub
insb
fstp
and
test
lds
mov
imul
mov
sub
mov
and
mov
push
movsb
rclb
and
aam
adc
and
imulb
inc
decl
mov
test
xor
push
popf
inc
pushf
jno
pop
out
mov
cmp
pop
gs
lods
sbb
test
dec
cld
xchg
sub
fcom
daa
push
mov
ss
pusha
xchg
jbe
inc
mov
mov
mov
or
jnp
dec
loopne
jno
ss
jb
popl
jbe
loope
jo
push
or
sahf
in
stc
lods
sub
dec
sbb
mov
cmc
cmc
dec
mov
jp
cltd
and
dec
test
sbb
fisttps
sti
sbb
mov
adc
adc
adcl
add
dec
dec
sahf
xor
lods
dec
jo
dec
shrb
lds
sbb
mov
jnp
mov
inc
xchg
or
lret
je
js
pop
pop
lcall
lods
fsubl
aaa
mov
cmp
shll
inc
push
or
pop
pop
cld
push
insl
dec
adc
mov
daa
sub
sti
ret
iret
ja
dec
std
xchg
mov
push
je
fnstenv
stos
cwtl
lds
add
or
cmp
inc
je
mov
adc
aaa
adcl
xchg
stc
mov
mov
jl
lock
sahf
push
aas
dec
push
decl
sub
repz
push
pusha
fdivrl
inc
ja
lds
mov
popa
loopne
dec
mov
das
add
mov
arpl
jbe
insl
in
mov
loopne
rclb
jb
gs
xor
and
mov
scas
or
or
addr16
xorb
adc
cmc
jmp
in
jge
and
test
dec
jmp
nop
aam
inc
popa
dec
in
fneni(8087
mov
xor
aas
sbb
rcr
xchg
test
inc
les
into
inc
stc
cwtl
or
mov
or
jmp
sub
outsl
pop
stc
ss
mov
test
shl
jnp
cs
loopne
cmpsl
out
popa
jnp
aad
ret
push
aam
add
jecxz
push
shlb
in
ja
mov
mov
rclb
push
sbb
mov
mov
jmp
movb
ja
out
add
xor
dec
movsb
xchg
xchg
mov
mov
or
mov
call
loop
fists
mov
xchg
add
jl
lret
ret
movsb
jbe
pop
shrb
popa
jo
roll
cli
notl
insl
inc
fbstp
pusha
push
push
cmp
fstpt
and
xchg
fimull
stos
dec
js
push
pushf
out
test
sub
mov
movsl
cmp
fiaddl
ljmp
push
fldenv
or
andl
adc
jge
nop
icebp
dec
sbb
in
cmp
addr16
out
rorb
je
shlb
pop
jg
sub
or
sbb
int3
xor
jge
insb
call
push
jl
outsb
inc
pop
insl
lds
and
cmp
xor
mov
mov
int3
sbb
lahf
call
stc
push
aam
push
mov
addr16
dec
mov
sub
mov
push
outsl
pop
arpl
movsb
xor
jae
addb
pcmpgtd
mov
sub
out
add
fcomp
das
das
xlat
jg
jmp
cmp
bound
and
pop
xor
cmp
gs
in
cwtl
sbb
ret
in
add
sbb
fsubrs
jg
sub
xchg
fwait
or
dec
test
cmc
jae
xor
xor
adcb
in
sbb
mov
mov
adc
cmp
and
cmp
add
test
sbb
cmp
out
xor
mov
sub
repz
loope
mov
divl
xorb
push
aas
data16
mov
lea
cmp
add
ss
xor
add
cli
nop
jge
test
aad
es
xor
mov
push
fs
arpl
add
sub
stc
dec
push
cmpl
pop
inc
mov
sar
mov
stos
test
bnd
out
jbe
mov
mov
mov
cmp
mov
orl
fcompl
mov
fnstsw
mov
aas
jae
and
add
and
fsubr
xor
inc
jp
in
loop
or
fstps
mov
test
and
lcall
or
cmp
xchg
jno
cmc
pop
jle
cwtl
popl
aam
adc
jnp
jnp
push
adc
mov
push
rcrb
xor
cli
loopne
inc
xor
pusha
gs
mov
repz
adcl
ja
xor
inc
in
ja
xchg
xchg
dec
sbb
in
and
mov
stos
int3
lret
sahf
mov
mov
sub
xor
iret
jp
cltd
cmp
std
repz
jae
js
cmp
and
sub
loopne
movsl
sub
pushf
fstpt
pusha
mov
insb
into
inc
call
inc
xchg
sub
test
inc
xorb
adc
mov
xorw
es
repz
xor
je
in
popa
shl
pushf
xchg
and
add
cmp
mov
stc
sub
gs
imul
add
add
or
dec
test
test
ja
mov
xlat
fcoms
insl
repz
das
cli
cmpsl
push
push
and
ja
nop
lret
lret
mov
fwait
jne
sub
mov
fs
loope
icebp
enter
lods
mov
cmp
dec
popf
outsl
mov
movsl
mov
or
insb
scas
or
sub
pop
aad
jl
jae
fs
imulb
or
leave
cmp
bound
sbb
xor
out
sarb
xor
add
lret
vpsrad
add
mov
outsb
imul
sub
pop
mov
pop
mov
arpl
ud0
xchg
xchg
pop
into
push
jecxz
dec
adc
push
bound
fdivrl
negb
fs
pusha
and
cmp
inc
call
inc
lahf
push
test
test
pusha
mov
das
fs
in
mov
icebp
sbb
imul
mov
scas
loopne
repz
rcll
int3
mov
mov
sbb
ds
cmc
lds
adc
jl
mov
inc
minps
push
into
dec
ret
xchg
jne
stos
sub
enter
or
cmp
daa
sub
inc
lea
xchg
fisttpl
inc
cmpsl
fnstenv
iret
pushf
push
js
push
cld
sub
pusha
jmp
ds
cltd
pop
jno
xchg
rolb
fisubs
pop
loopne
popf
sbb
cmp
or
xchg
inc
bound
jg
mov
cmp
mov
sub
sub
test
xor
in
jnp
cmp
mov
cmp
es
divl
push
add
adc
sbb
and
inc
fwait
vunpckhps
cmp
gs
jmp
ret
xor
es
xlat
push
scas
xor
mov
sub
sarl
lahf
in
insl
je
out
jl
sub
fistpll
push
xor
dec
dec
add
iret
pop
pop
and
xchg
xor
fsubs
ljmp
add
sub
mov
das
jo
add
push
jb
aas
pop
loope
mov
mov
sbb
shr
pushf
loopne
out
fadds
imulb
rclb
push
imul
dec
mov
jne
jg
pop
insl
in
mov
pop
or
sbb
lods
dec
fsubl
mov
inc
outsb
pop
adc
repnz
repz
cli
in
adc
jg
lds
loopne
test
shrb
adc
in
lret
cmp
and
rcl
or
xchg
xchg
ljmp
add
mov
or
or
stos
xor
mov
imul
cmp
andl
jg
bnd
sti
outsl
inc
mov
inc
ljmp
into
and
popf
push
les
les
sbb
xor
cmp
ret
pop
ret
shr
mov
mov
mov
cmp
push
cmpsl
inc
jmp
out
insl
sbb
lea
inc
fwait
push
subl
les
int3
popa
sarb
xchg
cs
inc
icebp
xchg
fwait
xor
sbb
data16
adc
popa
cs
pop
xchg
push
push
rclb
push
jl
mov
pusha
orb
pusha
and
pop
lock
sub
mov
repz
cmp
xor
jmp
xor
notl
popf
mov
mov
sahf
push
pushf
shr
push
or
lods
jns
cld
sbb
xchg
mov
inc
mov
mov
es
mov
outsl
push
xor
sbb
pop
out
inc
sub
push
hlt
hlt
push
xor
icebp
in
daa
and
mov
or
repnz
lds
pop
out
ficoms
repnz
jp
and
cltd
sub
dec
test
push
addb
aas
add
fldt
add
mov
js
jl
aaa
xchg
and
cli
cmpsb
imull
and
sbb
add
pop
cmp
cmp
and
hlt
mov
ret
xor
stos
imull
mov
dec
add
add
jae
add
fcompl
or
and
inc
ret
and
cli
je
dec
mov
cmp
push
push
cmp
mov
loopne
pop
mov
fbld
aam
cmp
adcb
ljmp
jp
mov
xchg
sarl
icebp
addr16
outsb
mov
sub
jnp,pt
int3
jl
in
fs
mov
xchg
dec
out
mov
cltd
pop
outsl
dec
mov
push
inc
cli
roll
lea
xchg
inc
icebp
int
xor
rol
jnp
cwtl
dec
pop
loop
fisttps
movsb
jge
lret
cmc
or
icebp
rcrb
xchg
lods
or
loope
cmc
sub
inc
xlat
jno
jno
sbb
data16
push
subl
push
add
add
loope
sbb
cltd
or
std
mov
push
pop
ret
inc
add
push
es
dec
sub
loopne
cwtl
les
ds
cmp
into
xlat
pop
out
nop
mov
add
xor
inc
xor
add
stc
and
out
call
mov
inc
in
lgs
adcl
stos
push
adc
mov
js
mov
out
cltd
enter
call
fbstp
and
mov
ds
cmp
mov
into
pusha
jg
lods
fcomps
out
cwtl
pushf
cld
and
popw
cmp
or
js
push
mul
add
pusha
xchg
xchg
stc
shrb
cltd
cmp
xor
ficoml
cltd
sbb
mov
sbb
xor
rcrb
mov
bnd
sub
jo
mov
lods
inc
cwtl
sub
ret
cmpsl
enter
popf
and
xor
jle
cltd
xor
mov
lods
sahf
xlat
mov
jl
sarl
mov
iret
movsb
pop
cmc
xor
dec
sub
out
sbb
inc
xchg
ror
aad
adc
test
or
adc
cmc
sbb
sbb
enter
jo
ror
pop
mov
imul
sbb
xchg
ds
push
ja
push
mov
jae
lock
pop
cli
test
jp
cmp
xchg
int3
fmull
add
push
sbb
andl
add
pushf
mov
js
decl
jne
shl
xchg
pop
mov
fcomp
mov
mov
in
cmp
pop
subps
out
stos
inc
cmp
sub
or
mov
fisttps
fldcw
mov
dec
add
loope
imul
inc
int3
cmp
cmpsb
cmp
jle
mov
cmpsl
jns
adc
jne
insb
bound
mov
stos
scas
push
mov
fstps
lret
bound
mov
insb
jns
pop
lea
xor
sbb
mov
mov
lcall
pop
push
jecxz
add
repz
push
push
or
sbb
arpl
fchs
out
jp
add
in
insb
iret
add
lret
lret
cs
pop
fldenv
test
adc
cmp
in
mov
ja
lret
dec
ss
loopne
jns
add
das
inc
jnp
pop
push
out
loope
cmc
adc
scas
lods
inc
aas
stos
push
lods
and
lcall
outsl
aad
movsb
iret
or
out
loop
daa
push
divl
dec
add
cltd
cmpl
sti
xor
ficoml
jno
out
test
mov
xor
sti
mov
jg
push
fs
push
sbb
add
out
and
cmp
push
cmpsl
inc
xchg
loopne
in
cmp
orl
mov
xor
stos
fsts
in
ror
dec
ret
outsb
inc
push
cltd
jb
or
sbb
xor
stos
add
push
sub
push
das
dec
rolb
xor
push
push
push
es
sti
repz
insl
outsb
out
rcrb
sbb
push
jle
mov
cltd
mov
rorb
sub
in
sti
fnstcw
popf
lock
rclb
push
push
fildl
mul
cmpl
xchg
sbb
cwtl
out
and
leave
fs
outsl
fwait
jno
jbe
test
jecxz
push
fsubl
mov
inc
jmp
bound
jge
cmp
dec
stos
dec
lahf
imul
xorl
adc
xchg
int3
outsl
cmp
arpl
cmp
mov
inc
pop
std
jbe
dec
ret
test
cmpsb
int3
outsb
sbb
ljmp
sub
sub
popl
mov
or
pop
xchg
nop
mov
lret
mov
scas
scas
cld
dec
call
dec
dec
in
or
xor
sahf
push
pop
xchg
jno
dec
iret
nop
arpl
inc
test
ljmp
std
jns
popf
cld
or
jmp
jne
test
sbb
in
fwait
dec
lahf
xchg
fs
lret
outsl
sbb
je
xor
daa
cmpsl
into
scas
pusha
in
dec
daa
in
xchg
dec
nop
or
rclb
leave
mov
lock
dec
icebp
xchg
sbb
popf
mov
mov
hlt
mov
mov
mov
repnz
push
iret
fimull
out
divl
and
pop
clc
ret
mov
xchg
jno
in
mov
jecxz
cmp
or
xchg
or
loopne
lods
outsb
mov
dec
movsb
adc
shrl
ret
jge
into
pop
or
cmp
idiv
inc
mov
mov
mov
mov
sbb
es
std
lods
lods
roll
popa
leave
fstl
push
out
pop
pop
pop
inc
mov
notb
push
shl
sbb
adc
icebp
push
lock
sarl
stc
leave
jp
and
pop
rcl
push
jnp
scas
lods
cltd
mov
popa
sti
mov
out
sbb
dec
test
xorb
inc
out
pop
sub
sub
dec
and
cmpsb
xchg
cmc
mov
jno
lret
ret
cmc
dec
daa
cwtl
popa
inc
sub
cmpsl
and
mov
or
fstpl
xor
js
loopne
xor
pop
inc
inc
jb
int3
sarb
push
cwtl
mov
aaa
fidivrl
sub
cmpsb
push
mov
ja
fcomps
es
sti
and
int3
adc
jae
mov
in
xor
hlt
arpl
sahf
orb
arpl
adc
mov
jns
out
dec
in
insb
jg
fidivl
clc
mov
repz
mov
jg
lods
sub
fimull
ficoms
insl
push
sub
outsb
stc
dec
xor
jmp
sub
ficoms
in
subl
ds
and
cli
jo
std
xchg
scas
movb
lods
mov
in
push
fldpi
jae
and
and
das
in
jns
sub
nop
or
jns
mov
xchg
xchg
int3
push
fdivrs
push
mov
xchg
push
dec
xorl
fstpl
mov
lods
add
cmp
mov
sbb
sbb
mov
roll
arpl
sahf
loop
shrl
rdmsr
loope
sub
and
call
fiadds
or
cmpsb
dec
rorl
imul
xchg
mov
int
push
shll
adc
repz
inc
and
lahf
sub
test
adc
pop
pop
sub
mov
aaa
jnp
sahf
push
push
push
push
and
imul
sbb
fisubs
daa
mov
push
lods
aas
sahf
test
xchg
in
leave
fiaddl
ret
xor
subl
push
stos
es
shrl
xchg
ljmp
push
enter
nop
stos
mov
jbe
adc
mov
or
cmp
inc
mov
sbb
dec
xchg
push
mov
push
fisubrl
and
mov
subb
cmovs
mov
insb
mov
scas
pop
out
sbb
insl
pop
ret
sub
sbb
mov
cmp
xchg
jo
xchg
scas
icebp
push
cmp
test
mov
js
leave
or
idivl
or
pop
inc
pusha
nop
out
pop
decb
int3
fwait
call
and
lds
cmp
popa
push
xor
jbe
aaa
and
outsb
sub
dec
cltd
xchg
pusha
repz
push
imul
mov
iret
sub
mov
dec
into
and
test
mov
imul
aam
dec
and
mov
jno
cmp
mov
jo
addr16
icebp
jbe
jle
scas
or
or
cmp
mov
sbb
xor
and
lahf
mov
xor
mov
xorl
jp
test
sub
insb
cli
adc
push
or
shlb
gs
sbb
cld
sbb
xchg
sbb
mov
cwtl
lret
inc
adc
push
or
dec
cli
loopne
or
lock
push
lcall
addr16
push
test
popf
cmp
push
sbb
roll
leave
jge
pop
push
scas
inc
pop
mov
imul
in
adc
in
and
test
adc
test
into
in
leave
jmp
mov
push
pusha
iret
ja
push
addr16
pusha
inc
jl
push
out
imul
xchg
test
lods
xorb
dec
push
outsb
fisubrl
stos
cmpsb
test
mov
sbb
or
movsb
arpl
mov
mov
cli
out
push
jbe
adc
std
mov
and
mov
jg
inc
sarb
xchg
add
push
in
rolb
add
movsl
movsl
jmp
cmpsb
sub
pop
stos
xor
xchg
push
push
outsb
lods
pop
dec
scas
leave
sbb
cli
jmp
sbb
and
add
inc
sbb
mov
ljmp
mov
mov
cld
vpmuludq
sar
scas
sub
scas
sbb
into
stos
jbe
roll
out
vcmpps
and
xor
add
mov
push
mov
jb
daa
jne
xchg
jb
jl
jmp
int3
push
sub
lds
push
aaa
xchg
add
pop
adc
dec
fdivrs
scas
rcl
lret
outsb
xchg
pop
test
sbb
insb
dec
das
xchg
out
insl
mov
mov
mov
jge
mov
imul
and
mov
cmp
xchg
or
stos
movsb
mov
mov
adc
sarb
jno
addl
in
movsb
lods
lcall
js
pop
shll
and
inc
loopne
pop
xchg
and
mov
cmpsb
mov
mov
fwait
out
and
lods
popl
addr16
xchg
fwait
adc
addr16
add
xchg
imul
addb
sbb
xor
js
test
hlt
mov
sbb
or
sub
sbb
rclb
mov
and
stos
push
xchg
roll
repz
xlat
adc
sub
movsb
mov
xchg
adc
xor
lods
xor
iret
inc
sub
dec
mov
or
jp
ret
incl
js
push
mov
aas
adc
js
pushf
mov
pop
sbb
adc
scas
into
pop
dec
pop
roll
shlb
mov
and
test
popa
cmpsb
cld
add
outsl
insb
imul
jle
hlt
mov
mov
lods
sbb
hlt
jmp
xor
sarl
xchg
and
inc
cmp
xchg
mov
adc
cltd
mov
stos
cmp
or
nop
fildl
in
jnp
ret
mov
test
fcmove
jb
xor
xchg
push
stos
mov
imul
pop
stos
in
sbbl
divb
aaa
arpl
mov
bound
out
xchg
pop
mov
pop
nop
ret
push
xchg
loop
adc
outsl
adc
sub
xor
pop
xor
sbb
rolb
jl
adc
mov
pop
mov
aaa
shll
out
cmp
insl
xchg
out
xchg
outsb
scas
and
cmp
movl
sbb
inc
test
fsubs
nop
in
add
push
into
mov
movsb
cmp
sbb
fnsave
xor
mov
nop
xchg
sahf
push
ss
and
mov
push
mov
pop
inc
cwtl
push
stc
or
nop
iret
sti
lcall
mov
jmp
cwtl
mov
ja
aas
jae
add
fnstsw
mov
lahf
movsl
pop
mov
ret
stc
jecxz
sub
mov
inc
sbb
gs
leave
xchg
sbb
pop
out
stos
loopne
inc
push
cmc
push
xchg
test
adc
sub
hlt
ja
cmp
add
xor
rorl
cltd
jns
in
pop
mov
in
push
push
add
lds
call
push
mov
psubsb
jae
popf
push
popa
mov
out
pop
adc
jp
add
sti
call
rcrb
in
les
push
dec
lret
aad
sti
in
aad
push
mov
sbb
repz
rcrl
cmpsb
xchg
adc
adc
push
mov
gs
out
mov
mov
stos
sbb
mov
call
cmp
push
orl
add
pop
jae
fdivrs
add
lds
jbe
fsubl
mov
jle
rorb
add
dec
mov
icebp
mov
loop
test
lods
pop
pop
gs
ja
adc
ja
and
nop
jmp
out
push
push
in
cmpsb
sub
xchg
aas
in
sub
into
ljmp
rcrl
insb
adc
mov
arpl
in
out
xor
push
sbbl
inc
out
scas
popf
popa
jno,pn
cli
jmp
loop
xchg
dec
lret
ljmp
mov
jmp
inc
push
cmpsl
ret
xchg
xchg
jg
cld
pop
jge
daa
aas
and
sti
push
mov
mov
pop
out
in
loop
ss
mov
mov
fidivrs
leave
xor
lahf
adc
notb
mov
mov
lret
mov
sub
nop
out
jp
pop
mov
imul
ljmp
add
icebp
pop
sbb
mov
push
pop
popf
adc
and
in
sti
cmp
fistpll
xor
push
stos
int3
repnz
cmp
repz
rcl
sub
dec
sub
pop
enter
pop
data16
outsb
insl
mov
sbb
pop
adc
cmp
and
mov
adc
push
jecxz
mov
mov
mov
adc
in
xchg
clc
subb
pop
cmp
cli
addr16
cmp
int3
out
xchg
ja
sbb
lds
push
dec
into
inc
jb
fdivrs
inc
dec
xchg
mov
add
fisttpl
fadd
sbb
insb
rorl
fsubrs
cmpsb
lods
popf
aaa
in
jb
lods
adc
andl
sbb
test
cld
sub
sub
into
cli
loopne
lret
arpl
jl
icebp
stos
xchg
adc
leave
push
pusha
push
cld
mov
pop
push
xchg
or
adc
int
push
mov
nop
push
inc
push
dec
mov
cmpsb
sbb
pop
movsl
popf
aas
mov
mov
popf
outsb
nop
jnp
push
jne
movsl
js
mov
inc
or
scas
inc
rcrb
xchg
push
daa
jbe
pop
xor
xchg
dec
cmc
fidivl
cmp
jp
out
add
sub
push
pop
std
lret
mov
push
add
pusha
jne
orl
fcom
dec
mov
mov
mov
clc
movsl
sub
ljmp
dec
in
test
lret
cmpsb
andl
ret
inc
addb
mov
inc
cmp
dec
sbb
xchg
dec
mov
add
mov
add
add
popa
sbb
inc
movsb
shl
pop
mov
jns
mov
push
pop
cmp
cltd
sub
xlat
push
dec
imul
lock
mov
scas
mov
popf
xchg
jnp
aad
xor
sbb
test
jmp
lcall
repnz
fldln2
mov
mov
scas
sub
inc
aam
mov
sub
mov
mov
adc
push
lcall
sub
cmp
sbb
popf
arpl
xchg
cmpsb
cmp
inc
mov
push
out
mov
and
sbb
lret
and
and
xchg
push
cmp
fbstp
data16
sar
lock
imul
jbe
jb
xchg
in
imul
loopne
mov
sbb
lea
pop
mov
inc
movsl
inc
push
dec
pop
or
fbld
pop
aam
jo
mov
pushl
jmp
lahf
mov
in
pop
mov
rcl
jmp
aas
mov
mul
lret
push
lret
mov
xchg
mov
loope
clc
aaa
and
insb
lahf
mov
lret
pop
fcom
inc
enter
xchg
mov
and
xchg
dec
insb
xor
jnp
jbe
rcll
into
inc
dec
fcompl
cmpsl
pop
repnz
inc
sub
test
dec
addl
mov
inc
dec
and
or
js
out
imul
add
lds
cmp
mov
inc
mov
jb
add
xlat
push
sbb
pusha
lahf
pop
lgs
aaa
jle
hlt
adc
adc
jmp
fimuls
fs
iret
mov
mov
movsl
imul
lret
and
adcl
imul
in
sbb
cltd
cmp
pushf
push
jecxz
pusha
testl
mov
mov
dec
je
call
jno
jno
or
push
pop
sbb
bound
mov
sub
pop
sbb
dec
enter
je
mov
and
popa
daa
xorb
es
scas
rcr
in
test
adc
jmp
repz
fsts
in
imul
jle
mov
or
or
pushf
adc
dec
sbb
ss
jbe
pusha
adc
rclb
adc
faddl
lret
jecxz
pushf
test
ja
clc
es
out
shll
icebp
fwait
adc
add
mov
shrl
adc
repnz
test
sub
sbb
pop
cli
sub
les
dec
les
jo
mov
sub
add
xchg
add
jno
pop
sub
out
xor
inc
pop
out
jns
cmp
mov
mov
test
push
and
and
out
or
push
push
sub
imul
add
fmull
jg
mov
je
mov
out
popa
aaa
mov
cld
or
sub
in
inc
bnd
ljmp
mov
sub
fldt
mov
repnz
mov
adc
sbb
pop
jp
pop
das
cmp
fisubrl
fildl
add
or
sbb
imul
adc
sahf
add
mov
sti
inc
sub
imul
adc
outsb
mov
inc
cmpsl
inc
mov
lret
inc
and
test
outsl
fnstsw
xor
movsb
and
cmp
iret
sahf
mov
in
rcl
push
stos
push
sbb
ss
rclb
pop
int
out
test
lret
in
stc
dec
aaa
push
cli
jo
in
jp
fsin
pop
push
lds
lret
mov
jne
or
cmp
xchg
pop
mov
fdivs
lods
push
test
xchg
cmp
adc
mov
fdivs
notl
testb
aam
xor
mov
mov
imulb
and
mov
push
and
shll
bound
and
mov
pushf
mov
in
sbb
cmc
mov
jo
repz
mov
jecxz
outsb
adc
push
mov
adc
dec
push
sarl
loopne
rorl
jne
adc
lret
sahf
jmp
push
push
cld
aam
fsubr
pop
add
push
xchg
or
or
fisubrs
loop
inc
push
dec
pushf
inc
or
mov
fidivrl
std
xchg
aaa
mov
iret
dec
scas
loope
shrb
rcll
pusha
pop
sbb
jns
xlat
gs
loop
or
inc
out
fistps
push
iret
adc
gs
push
mov
ljmp
xor
cmpsb
add
pop
jl
cmp
or
and
pop
shrb
jns
inc
rcrb
movsb
add
pop
cltd
mov
jae
mov
clc
jecxz
pop
push
or
inc
outsl
insb
fmul
into
xor
ret
adc
push
sbb
sbb
repz
xor
test
loope
jp
and
stos
inc
add
fstp
dec
xor
sarb
pop
xchg
sahf
sbbb
repz
xor
fsts
jno
push
push
std
repz
ret
lahf
pop
cmp
in
es
sub
pop
cmp
outsb
ds
repz
sub
add
xor
sbb
shrb
js
xor
in
jmp
sub
mov
pop
add
sbb
das
jno
add
add
mov
pushf
aam
insl
das
inc
mov
shr
jbe
sbbl
je
ss
insb
xchg
in
push
mov
aaa
std
outsb
mov
popf
repnz
dec
int
ljmp
into
int
mov
inc
fcmovnu
ret
loope
cmpsb
xor
popl
mov
and
pop
mov
inc
daa
out
movsl
lcall
sub
jb
inc
fisubl
cltd
cld
jno
sbb
arpl
lret
pop
push
adc
mov
ffreep
cld
jae
adc
sbb
mov
push
sbb
push
ret
addr16
push
adc
add
in
gs
mov
into
mov
iret
stos
lds
cli
cmp
pushl
insb
fldcw
pop
stc
jb
dec
mov
bound
push
push
and
push
jmp
mov
push
cld
stos
mov
inc
and
cmp
xchg
cmp
mov
add
push
mov
lcall
push
mov
or
pop
ja
sub
add
pushf
cmp
xor
push
jbe
and
mov
subl
mov
xor
test
aas
xchg
jp
push
sub
pop
xor
shll
jecxz
jne
mov
stc
push
into
dec
mov
xor
push
mov
test
jge
xor
mov
dec
adc
out
cld
pop
pop
xor
movsl
negb
add
and
add
or
mov
sub
or
in
movsb
xor
jecxz
andb
sub
imul
push
subl
fsubrl
jecxz
ss
xchg
repnz
popa
ds
pop
dec
gs
loop
jb
push
into
jl
int3
push
hlt
out
andb
rsm
inc
jmp
int3
aaa
shl
shlb
popa
jmp
mov
mov
outsb
je
pop
sub
rcll
inc
lret
lds
add
sti
mov
mov
or
leave
enter
js
ud0
sahf
lods
inc
fisttpll
mov
pop
dec
iret
cmpsb
loopne
fdivl
lret
and
cmpsb
sbb
pop
push
pop
aad
push
and
sarb
xor
lret
pop
lahf
and
pop
cld
push
cltd
je
stc
cmpsb
add
pushf
punpcklbw
inc
jp
test
add
inc
sub
movsb
fisubl
test
je
mov
ljmp
sub
jecxz
xchg
and
push
mov
push
xor
fucompp
stos
jne
js
cmpsl
mov
push
repz
mov
push
adc
pop
jns
sbb
cmp
sti
aaa
shl
jecxz
push
fldpi
xor
inc
dec
cli
test
cmp
mov
shlb
and
mov
enter
jecxz
mov
daa
pop
out
es
xor
sbb
ja
adc
mov
mov
or
sbb
out
mov
out
mov
shl
sbb
in
mov
out
add
stc
sbb
xchg
lods
popa
and
pop
push
andl
ret
aaa
push
inc
push
mov
cltd
out
push
cmp
dec
dec
mov
insl
call
pop
mov
sub
icebp
enter
and
or
loope
outsl
mov
js
loopne
xchg
jb
xchg
ljmp
xchg
mov
mov
pop
insb
xor
xor
dec
mov
add
adc
mov
cmpsb
sbb
cmc
push
int3
mov
mov
cli
pop
or
xor
imul
mov
mov
and
rorl
gs
in
gs
out
repnz
bound
ss
mov
and
test
inc
push
jle
sub
loop
inc
or
into
lcall
adc
xchg
fisttps
and
fmull
inc
xor
ds
ret
push
addr16
movsb
loope
xor
mov
ficomps
sub
fldenv
xchg
ja
roll
jne
dec
outsb
out
iret
adc
mov
adc
mov
and
push
lahf
mov
test
clc
test
loop
shlb
rcl
enter
ret
mov
divb
cltd
fldcw
adc
mov
scas
mov
xchg
hlt
mov
cmpsl
cwtl
call
and
cmpsb
xor
clc
add
imul
in
lods
or
loopne
enter
and
mov
pop
mov
fs
cld
push
frstor
outsb
mov
rcr
sub
cmpl
mov
lret
xor
pop
ja
jno
sbb
add
or
cmp
test
pop
idivb
ret
test
cmp
mov
inc
test
xor
push
scas
gs
mulb
shrl
sti
mov
jl
mov
mov
mov
inc
add
stos
sub
push
int
andb
rcrb
movsb
mov
pop
or
cvtps2pd
jns
lods
adc
ss
sub
sbb
push
mov
cmpsb
lret
imul
rcrb
mov
jl
dec
dec
dec
xor
jns
jecxz
and
pop
subb
and
sub
test
out
push
sbb
xor
mov
and
push
es
push
testl
sti
aam
pushf
andb
xchg
dec
iret
int3
cmpsb
ret
xchg
or
insl
or
adc
cli
lock
in
cmp
cmc
icebp
fistl
insb
scas
nop
jne
fimuls
xor
dec
and
dec
clc
xor
bound
clc
fcompl
xor
sarl
clc
and
call
sbb
scas
lcall
push
add
pop
or
adc
push
mov
mov
decl
jnp
js
mov
rorl
jl
mov
and
or
cmovp
adc
or
sub
pop
mov
add
push
nop
aad
rcrl
jge
cmpl
push
incl
ds
sub
mov
jle
and
dec
jne
incb
fsts
lret
inc
jbe
stos
push
lods
add
xor
push
or
mov
testb
adc
clc
stos
cld
idivb
inc
jg
sbb
cmp
das
pop
cmp
push
test
test
lods
xor
mov
xchg
xchg
stos
subl
and
push
xchg
xchg
inc
inc
aaa
test
js
sub
outsl
adc
addb
sbb
pop
rorl
push
clc
pop
mov
mov
lahf
js
pop
add
scas
outsl
mov
lret
pop
in
call
into
jns,pt
lds
xor
fs
add
jbe
inc
sub
push
mov
test
push
not
xchg
mov
or
xchg
push
jg
je
lods
cmp
shrl
es
repz
or
dec
sbb
out
jb
movsb
adc
sbb
sub
or
out
rolb
adc
roll
insl
in
jb
sbb
cwtl
lret
cwtl
mov
aam
mov
call
adc
jo
push
popf
es
sbb
out
mov
jecxz
push
loope
stc
into
cmpsl
into
or
arpl
sbb
sbb
cmc
pop
jp
sbb
push
mov
stos
cltd
push
ficompl
imull
ret
mov
lock
push
dec
sbb
adc
or
dec
push
pusha
dec
xor
loop
adc
fs
inc
jmp
aaa
add
or
cmpb
sbb
scas
mov
adc
mov
and
hlt
add
fisubrs
aas
xlat
mov
jns
push
cmp
pushl
je
cmpsb
push
mov
add
sub
fstps
popf
xchg
in
les
and
pop
out
sbb
jge
push
pop
cwtl
mov
inc
dec
mov
jg
aas
dec
iret
rcrb
lods
adc
push
inc
sub
pop
push
xor
movsb
out
dec
xchg
push
test
cltd
in
iret
orb
lret
add
leave
aaa
stos
lods
push
add
xor
ror
jno
mov
inc
dec
xchg
dec
mov
lea
sub
out
loopne
adc
lcall
cmc
dec
xchg
push
mov
mov
xor
push
cmp
insb
or
in
dec
sbbl
inc
lahf
mov
fwait
in
fisubl
xor
push
rol
cltd
push
les
in
and
jl
mov
sbb
mov
xchg
adc
cmp
xchg
insb
dec
sarl
inc
les
std
sti
mov
mov
and
adc
xor
cmp
cmpsb
pop
idivb
inc
daa
pop
mov
test
jg
pop
xorl
inc
xlat
adc
cs
mov
add
inc
cmp
sbb
xlat
pop
pcmpgtw
sub
rcrl
mov
std
xor
les
xor
call
or
insb
pop
int
mov
push
mov
or
cmp
lret
stos
test
mov
pusha
daa
andl
sti
fcomps
jmp
ljmp
scas
and
mov
leave
adc
sbb
enter
popa
enter
mov
movsl
mov
mov
push
mov
xor
xor
mov
push
test
icebp
sbb
mov
mov
sarb
pop
sub
jbe
subl
mov
or
xchg
mov
sbb
mov
mov
mov
loop,pn
loope
nop
mov
inc
in
bnd
mov
mov
aaa
roll
stc
movsb
les
and
faddl
out
xor
xchg
xchg
int3
movsl
insb
dec
insb
cltd
adc
add
or
mov
sbb
test
loope
lret
cmp
ret
jmp
inc
lds
test
sbb
stos
enter
popa
fdivrl
xor
jno
or
out
insl
cltd
dec
nop
sbb
pop
popa
mov
xlat
orl
pop
lds
and
imul
fiaddl
inc
gs
inc
and
inc
cmpsl
repnz
ret
cltd
or
push
lock
nop
in
xor
ljmp
test
push
lahf
push
xchg
aad
pop
shrb
sti
jnp
imul
insb
int3
xchg
testb
adc
in
pop
push
jns
out
or
jbe
pop
lahf
add
divps
adc
pusha
cld
pop
das
rorl
sbb
inc
sub
xchg
fmuls
aaa
in
sti
mov
cmp
insb
lret
popa
scas
mov
inc
jmp
out
vmovsd
mov
mov
jo
adc
shrb
dec
adc
dec
add
pop
insb
jmp
jo
mov
and
stc
push
daa
push
iret
mov
into
adc
jno
repnz
clc
mov
repz
sub
out
jecxz
xor
push
sbb
and
cmc
jl
mov
pop
in
mov
inc
cmp
jg
sbb
in
fcom
push
fcomps
dec
in
push
cmp
lcall
stos
outsl
pusha
fs
pop
clc
push
push
push
push
inc
mov
add
fisttps
mov
fadds
in
mov
mov
mov
xchg
adc
pushf
mov
lods
cmc
in
sarb
iret
xor
jg
pusha
or
and
in
data16
push
mov
sti
xorl
in
sarb
test
and
mov
and
push
sarl
repz
jge
jnp
mov
push
mov
adc
inc
arpl
or
cs
movsb
jbe
jge
cmp
les
aad
xchg
pop
fsubrp
call
inc
mov
sarl
xchg
movsb
ret
sbb
iret
xor
or
fsubrp
adc
aaa
inc
stos
mov
cmpl
fldl
dec
int
scas
sbb
push
pop
cli
popa
pop
lods
ret
pop
mov
daa
and
adc
add
or
inc
lods
out
adc
in
xchg
or
xchg
popf
push
mov
push
add
adc
xchg
cli
mov
test
sub
popf
push
out
stc
sub
sbb
mov
enter
mull
jge
int
xchg
insl
cmpsl
fsub
mov
addr16
stos
sub
insl
dec
add
pop
inc
lret
add
cmp
mov
ss
and
push
jmp
pushf
lcall
dec
inc
imulb
jns
sub
cld
ljmp
stos
lods
loope
adc
in
xor
sbb
sbb
or
mov
movsb
or
and
mov
mov
pop
fistpll
mov
adcb
lret
jle
repnz
pop
bound
jmp
sbb
jnp
popa
mov
lock
or
repz
or
or
pop
mov
mov
sahf
jg
stos
cmc
push
mov
int
mov
cmpsl
ss
iret
and
pop
xchg
call
jae
push
jmp
jbe
mov
hlt
clc
fs
rcrl
ljmp
ss
lods
inc
leave
test
outsl
and
imul
sub
xor
and
push
cwtl
std
or
mov
mov
push
mov
out
cmc
xchg
ds
movsb
and
mov
adc
push
jmp
loopne
icebp
into
xchg
hlt
repnz
dec
in
mov
push
cli
insb
mov
pop
xchg
jmp
mov
rcll
inc
xchg
cltd
jno
inc
sahf
lret
ret
add
lret
adc
jl
push
inc
fnstenv
mov
or
je
inc
loop
jb
jl
out
pop
jp
neg
rcl
dec
push
xchg
mov
fisubrs
mov
ss
xchg
and
bound
dec
and
dec
in
in
cmp
and
jge
mov
mov
sub
sbb
roll
adc
lahf
sub
insl
jmp
out
setns
fildll
in
and
mov
out
adc
imulb
mov
cmp
xchg
sub
js
push
inc
push
add
jmp
shlb
orb
je
jge
pop
ljmp
leave
iret
cld
xchg
enter
vcmpsd
in
mov
jmp
dec
pop
or
mov
sub
lock
in
lcall
jle
movsl
inc
loopne
insb
cmpsl
fiaddl
sbb
jbe
sbb
sar
sub
add
sub
add
mov
add
out
arpl
insl
test
repnz
mov
cmp
repz
pop
xchg
fisttps
sub
dec
imull
sub
lcall
and
sarl
sub
movsb
fidivrs
insl
in
pop
or
repnz
lock
aad
pop
mov
loop
jb
bound
add
pop
push
lcall
cmpsb
repz
insb
push
or
enter
andl
cmp
rolb
lahf
insl
mov
push
ss
adc
fwait
xchg
out
in
mov
sub
mov
adc
cltd
js
push
push
pop
or
mov
dec
mov
jle
rcrb
rorb
mov
xlat
cld
mov
test
orb
shl
adcb
orl
ret
sbb
sbb
cmp
pusha
cmp
or
divl
sbb
add
adc
test
das
jl
fistpl
sbb
or
movsb
imul
pop
aaa
lods
repnz
lock
in
shll
xor
xchg
cmp
mov
sbb
push
in
pop
mov
jge
addb
add
and
addr16
mov
sbb
movsl
fisubs
cs
aad
cmp
addl
cwtl
inc
ja
ljmp
push
xorb
into
cmp
jl
pop
rcll
insb
add
mov
popa
xchg
addr16
mov
jmp
inc
xchg
pop
jno
push
or
in
lock
pop
xchg
outsb
mov
test
inc
loopne
int3
xchg
andb
mov
lods
xor
loop,pn
xchg
push
cmp
bound
adc
aad
inc
inc
mov
popf
sub
jle
mull
shll
xlat
scas
lcall
in
inc
int3
pop
fst
inc
push
mov
pop
clc
cmp
fsub
mov
andl
inc
sbb
nop
mov
fcmovnb
inc
jle
pusha
jle
ds
icebp
xor
icebp
les
inc
dec
pop
push
ja
mov
push
fdivrl
cs
addr16
sub
sbb
data16
xor
divl
outsl
inc
sbb
mov
mov
xor
push
mov
push
jae
ja
in
out
jb
cmpb
fdivrp
icebp
cmp
and
adc
jl
adc
lcall
andb
loopne
dec
rorl
roll
insl
push
pop
xchg
das
jge
stos
es
xor
nop
and
cli
out
bound
and
pop
test
mov
adc
xor
mov
adc
loopne
sbb
sub
sbb
sbb
sub
add
mov
fldenv
repz
xor
ret
aaa
lahf
scas
fistpll
xorl
aaa
mov
adc
pop
xor
cltd
push
fstl
mov
sub
sbb
daa
mov
mov
pop
aaa
and
pusha
push
rorb
addr16
pop
pop
adc
movsb
adc
ss
or
hlt
lods
jg
jno
fsub
lods
mov
sub
cmpsl
out
mov
jmp
adc
jo
cmp
sub
lods
push
mov
jmp
stos
jbe
xor
push
hlt
and
jp
push
dec
cs
ss
pop
cmp
filds
cltd
scas
pushf
pop
push
sti
jg
punpckhdq
ja
mov
pop
lods
xchg
cli
inc
cmpsl
adc
fisubrl
in
sbb
gs
pcmpgtw
lahf
pop
arpl
push
add
sub
cmp
std
sahf
call
fnstenv
test
adc
dec
xchg
sbb
call
cmp
push
rclb
imul
xchg
test
xchg
fwait
push
jo
and
dec
inc
cltd
pop
mov
scas
add
lea
sahf
ss
stc
stos
stos
jmp
jbe
movsl
subb
sbb
lods
std
mov
mov
stc
sti
outsl
popf
add
aad
add
jge
test
mov
xor
xchg
daa
lds
sub
dec
push
lret
in
sub
es
fidivs
mov
jb
test
push
jl
hlt
fst
ror
jge
mov
adc
push
xor
and
insb
dec
es
lea
and
loope
inc
nop
add
call
push
cli
pop
into
pop
test
inc
out
mov
dec
lds
inc
ret
sarb
test
scas
stos
or
insb
pop
xor
sarl
mov
jno
daa
cmp
sub
fisubrs
jp
sbb
aaa
push
xchg
stos
les
jecxz
jno
in
out
cs
test
sub
stos
sbb
push
add
cmc
xorl
call
iret
mov
inc
inc
scas
push
cmc
fldenv
in
mov
pusha
pop
mov
xor
stc
testb
fs
jl
and
lods
pop
outsb
popa
cltd
cli
and
out
mov
rolb
hlt
hlt
addl
je
or
subb
and
mov
xchg
jge
xchg
push
mov
xchg
fcomp
push
sbb
rcr
and
neg
adcl
aad
xlat
icebp
xchg
neg
jnp
nop
sbb
std
mov
pop
sarl
sbb
insl
movsl
scas
in
pop
lahf
js
or
dec
sub
in
outsl
adc
in
in
das
mov
roll
xor
outsb
daa
sahf
push
push
sbb
sub
add
cld
cmp
es
cmpsl
push
add
push
int
sbb
push
ja
push
mov
adc
mov
jnp
adc
cmp
ret
in
pop
sahf
lahf
xchg
popa
adc
sbb
adc
lret
in
gs
xchg
dec
andl
push
lock
adc
xchg
push
dec
movsb
mov
aas
into
outsl
push
mov
push
jne
scas
xchg
adc
int3
jl
pop
call
fisttpll
adc
pop
fadd
and
adcb
cs
inc
addb
sbb
sbb
push
outsl
nop
dec
jg
xchg
sub
clc
insl
cmpb
cltd
aam
in
dec
iret
jbe
xchg
xor
lret
leave
dec
sub
insl
mov
push
mov
icebp
jo
push
add
aam
adc
jae
in
int3
loop
add
cwtl
fcoml
push
notb
mov
mov
rcrl
mov
or
int
mov
sbb
out
cs
stc
aam
sub
in
mov
cmp
fsubrl
es
call
in
in
adc
pop
cmpsb
adc
mov
jmp
icebp
push
adc
leave
lock
inc
jl
xchg
scas
mov
push
jnp
in
mov
outsb
or
fldenv
pop
and
and
dec
or
leave
or
pop
push
rcrl
clc
adc
pusha
dec
in
stos
stos
xor
inc
or
sarb
sahf
add
xchg
addb
sbb
add
xlat
popf
insl
imul
cmp
jae
scas
outsb
mov
xchg
add
xchg
dec
adc
adc
or
outsb
iret
jecxz
mov
inc
cmpsl
or
mov
scas
arpl
hlt
xor
ds
cmp
aam
or
scas
inc
pop
or
mov
push
fsts
fucomi
js
cmp
xchg
jge
ret
loopne
cmp
push
xchg
in
in
arpl
and
fs
xchg
ret
push
adc
push
mov
lea
out
add
add
xor
movsb
adc
call
ja
lcall
out
imul
les
aaa
rclb
pop
fnsave
into
fsubrp
dec
loop
insl
and
lret
pop
stos
mov
cmp
test
inc
ja
fdivs
aas
in
pop
mov
pushf
lods
xor
xchg
jnp
mov
push
lahf
outsb
loop
or
das
mov
or
test
dec
sarl
jb
outsl
jmp
sbb
sbb
xor
scas
push
xchg
call
jne
je
int3
mov
mov
or
rol
ss
in
call
shlb
in
in
arpl
jne
jge
push
jl
xor
fcomps
mov
add
movsb
fsts
and
jg
xchg
sub
stc
and
jnp
inc
cwtl
fisttpl
test
xchg
cwtl
lods
dec
xchg
test
loopne
les
fcom
divl
test
or
fnstcw
sbb
dec
das
pop
and
jg
icebp
out
mov
ud1
in
inc
cmp
bound
push
or
movsb
jo
bound
dec
outsl
fcoml
xchg
mov
inc
cmpsb
shlb
cltd
jmp
div
inc
icebp
mov
pop
cmp
push
xor
aam
fimuls
mov
sub
push
xor
xchg
dec
mov
popa
adc
mov
xchg
mov
or
xchg
cmp
repnz
fcoms
add
sub
jnp
les
mov
sbb
pop
addr16
aas
mov
sbb
out
sbb
or
cli
loopne
out
cwtl
sbb
imul
pop
leave
hlt
popa
sub
mov
dec
ljmp
pusha
out
adc
cmpsl
and
daa
scas
mov
pop
add
inc
jecxz
dec
mov
addl
sbb
inc
sub
lcall
xor
dec
mov
jmp
cmpsl
dec
sbb
add
dec
scas
adc
push
fldenv
cwtl
push
jge,pn
cmp
and
add
int
in
sbb
and
mov
and
sub
push
push
mov
loop
and
sub
xchg
lods
mov
push
out
cmpsb
popa
jle
in
mov
js
ss
push
sub
inc
rol
loop
in
pop
test
test
pop
gs
and
rcrb
into
enter
imul
mov
xchg
sub
adcl
and
xchg
jmp
mov
inc
mov
xor
cld
jo
roll
adc
inc
xor
lea
data16
aaa
iret
outsb
cmp
cmp
adc
sub
in
and
mov
cli
stos
adc
adc
out
jns
cmpsb
je
gs
fsts
dec
es
int
push
sbb
shll
push
mov
xchg
je
and
xor
mov
call
inc
dec
sub
adc
addr16
dec
sbb
cmpsb
test
and
cmp
and
xor
add
ficoms
sub
test
xchg
lahf
mov
cmp
pop
sub
jo
mov
push
ss
outsb
lods
negl
sub
pop
dec
fs
inc
cmp
cmp
push
xor
mov
jnp
mulb
push
mov
pop
push
jmp
out
in
mov
pop
and
pop
jmp
arpl
lcall
xchg
jle
stos
cmp
lret
xor
jmp
lret
cmp
ds
adc
adc
cmp
pop
or
cltd
cli
ss
sahf
mov
enter
cwtl
dec
xor
mov
jp
insb
mov
sub
out
lret
mov
ret
dec
dec
cmp
repz
ljmp
js
add
mov
test
cmp
xchg
movsl
sti
ljmp
icebp
jg
mov
push
sbb
cmp
hlt
cli
cmp
mov
push
sub
or
test
clc
or
hlt
mov
clc
pop
xchg
stos
add
sub
adc
mov
mov
sub
pop
inc
jmp
mov
push
add
push
hlt
mov
in
cmp
jecxz
jo
push
iret
stos
or
jno
cwtl
add
or
jmp
lahf
mull
daa
cmp
jbe
imul
movsb
cwtl
imul
adc
cmp
cmc
inc
add
mov
or
popa
mov
mov
dec
lahf
jle
std
ret
mov
jb
movsl
enter
dec
add
mov
or
or
inc
test
das
cmpsl
aad
aad
lock
mov
test
mov
or
jno
shll
sbb
inc
addr16
push
ss
out
sbb
mov
pop
jnp
fistpll
out
push
popf
push
xchg
xchg
test
fcoms
xchg
push
inc
sarl
or
or
sarb
in
dec
shl
es
jmp
loop
xor
enter
pop
mov
call
sub
cmp
mov
cmp
push
orl
xlat
push
leave
and
lret
lahf
and
mov
sbb
pop
push
add
sarl
lahf
pop
xchg
aam
push
cmpsb
int
in
lcall
dec
mov
push
sbb
imul
sub
fdivr
xor
lret
add
sbb
mov
mov
mov
sbb
xchg
ds
je
jp
fnstsw
popa
sti
push
lret
hlt
sub
xlat
mov
inc
dec
mov
jp
cmp
add
lret
repz
mov
rcrb
je
leave
adc
adc
and
dec
jg
cwtl
cld
scas
outsb
mov
in
xlat
sbb
sub
mov
sub
add
add
and
mov
jmp
adc
add
jle
sub
ss
ss
test
xor
pusha
into
sub
and
xor
popa
xchg
adc
push
and
mov
outsb
and
fstl
jle
jnp
inc
repnz
and
inc
inc
fistpll
sbb
xchg
aad
xchg
cs
shrl
int
shll
sbb
jp
test
repz
frstor
add
pop
push
jbe
in
subb
fisubl
fadds
out
add
xchg
aas
jno
adc
int3
mov
jnp
sbb
mov
jle
add
mov
test
insl
jb
lret
and
out
jmp
fdivr
xor
outsl
xchg
rorb
dec
mov
mov
leave
shll
das
and
ret
dec
dec
add
outsl
pop
sbb
sahf
jp
in
push
jle
push
cmp
daa
in
fdivrl
sub
push
fsub
sub
mov
dec
inc
aaa
lahf
jbe
aam
xor
sahf
mov
pop
js
js
mov
xor
or
rcl
xor
xchg
push
test
jecxz
icebp
mov
mov
cs
fdivrl
sahf
push
fsubl
pop
mov
sub
mov
lahf
stos
inc
xor
inc
cld
je
imul
dec
or
mov
cwtl
cmp
fucomp
push
mov
adc
andl
inc
daa
ja
xor
xor
sbb
sub
aas
das
in
and
sub
out
dec
jbe
leave
std
clc
xchg
jo
insl
cmp
daa
add
stos
xor
pushl
fucomp
movsb
jno
jp
repz
mov
adc
pop
dec
mov
mov
and
push
mov
lahf
pop
add
adc
push
mov
movsb
sbb
mov
lret
jo
scas
lods
xchg
or
sub
cltd
fs
dec
ja
lahf
shrb
xchg
push
icebp
push
inc
pop
lods
lret
cld
mov
popa
scas
sub
cmp
fs
int
fisttpll
clc
mulb
dec
pop
mov
inc
mov
add
insl
lods
adc
adc
incl
das
or
scas
xchg
mov
fsubs
mov
ds
mov
sbb
lret
ret
mov
cmp
and
fcmovb
nop
in
pop
dec
add
jo
sbb
sti
inc
out
clc
cmp
mov
scas
push
mov
inc
xor
sbb
rclb
and
or
call
movsb
fwait
leave
dec
stos
xor
mov
cmp
in
mov
pop
pop
adc
nop
sahf
stos
aas
xchg
jge
adc
out
pop
push
lods
or
fwait
sub
repnz
or
pusha
clc
rol
and
out
xor
inc
mov
fcompl
push
andb
fs
test
icebp
pop
dec
dec
fldl
call
xchg
popf
push
scas
hlt
mov
iret
shll
cli
cs
ja
in
lods
repnz
xchg
aam
rcr
fwait
xchg
scas
ja
mov
ja
cmp
xchg
inc
pop
mov
in
inc
inc
shl
push
lock
push
add
mov
sub
in
ror
sbbl
jo
fdivrl
or
inc
inc
pop
sbb
cmp
aaa
cmp
and
cmp
mov
cwtl
xchg
cmp
xchg
cmpsl
mov
dec
sbb
js
dec
pop
enter
les
sbb
cmp
mov
or
jmp
add
rclb
mov
xor
dec
pop
or
call
and
es
testl
movsl
push
adc
xor
cmp
mov
sti
adcb
jbe
adc
push
shrb
repz
out
mov
push
lock
pop
ret
popa
pusha
sub
and
push
jo
push
mov
clc
inc
rcll
xor
loop
lret
inc
mov
lods
fcomi
xor
push
push
call
jmp
or
sub
pushf
push
inc
int3
push
add
test
xor
or
out
rorl
test
mov
repnz
adc
dec
das
and
sub
add
popf
out
mov
nop
cmp
mov
add
and
movl
mov
inc
mov
fldt
push
push
add
jge
clc
or
sbb
sahf
and
sub
cmp
js
cmpsb
fwait
pop
shll
cmc
test
movsl
and
repnz
cld
cmp
jl
mov
adc
mov
stos
adcb
jnp
aam
mov
lret
imul
ja
push
psllw
sub
xchg
fdivl
jge
popa
or
jne
outsb
inc
lret
scas
dec
cli
jbe
dec
adc
inc
jle
pop
cmp
ret
shll
sbb
test
test
dec
adc
clc
add
push
and
ret
bound
add
aad
je
stos
xchg
insb
xor
movsl
jnp
imul
movsl
jp
and
xchg
fimull
mull
aam
push
jmp
add
pop
cld
push
dec
xchg
push
jle
daa
xchg
xchg
sbb
imul
in
daa
sarl
mov
addr16
out
jbe
or
cmpsb
xchg
xchg
sub
adc
lock
mov
adc
aas
adc
push
or
ja
stc
pop
mov
arpl
shlb
jns
push
call
nop
shll
fwait
mov
ret
jmp
dec
mov
cmp
add
xchg
ret
xchg
or
ds
mov
adc
movups
loop
or
and
mov
lods
out
je
push
sti
mov
inc
lods
fprem1
out
mov
mov
mov
cmp
push
jl
lcall
aam
push
xchg
xchg
mov
imul
dec
mov
fwait
clc
fs
sbb
xorb
mov
xchg
xchg
push
jnp
sarb
pop
stc
xor
cmp
roll
cwtl
push
mov
inc
leave
inc
push
mov
enter
push
pop
mov
cmpl
dec
ret
jne
sub
jo
sahf
sahf
push
out
cmp
rcl
test
fcompl
add
lret
mov
cmp
push
push
jl
sti
jl
mov
test
mov
ret
out
shl
cmp
mov
or
xchg
xchg
sbb
outsb
ja
add
notl
and
jnp
add
clc
inc
faddl
fisubl
nop
clc
add
cmc
pop
inc
add
aas
jnp
or
xchg
frstor
lcall
dec
mov
mov
and
imul
lods
xchg
mov
pop
adc
or
and
scas
flds
or
inc
inc
fildl
jl
cmpl
mov
fnstcw
jmp
fildll
cltd
pop
mov
pop
mov
imulb
lea
sub
pusha
test
inc
mov
jmp
popf
and
stos
mov
outsl
stos
out
or
cmpsl
jo
inc
push
insl
xor
inc
insb
push
lahf
ss
in
incb
data16
ficoms
in
gs
in
sub
xor
popl
pushf
inc
push
push
jbe
pop
sub
push
into
mov
mov
mov
shrl
shrb
cmp
adc
xchg
hlt
dec
push
jne
cltd
and
sahf
xchg
fwait
sbb
test
add
iret
jb
xchg
lock
pusha
mov
test
jg
jb
repnz
push
xlat
adc
inc
push
pop
xchg
add
into
lock
nop
xchg
into
movaps
lret
push
push
insb
jle
movd
mov
xchg
insb
xchg
lds
std
shr
lcall
adc
mov
xlat
sbb
cwtl
adc
add
lcall
xacquire
cmp
and
or
sub
orb
sub
sub
adc
lea
shll
or
mov
mov
mov
cmp
or
pusha
xchg
test
inc
out
cmpsb
pop
jo
js
mov
out
pop
dec
and
dec
in
test
cmp
aas
andl
xchg
jns
sbb
pop
xor
dec
in
pop
and
nop
pop
ret
mov
ss
sbb
mov
pop
addb
jnp
sub
scas
insb
adc
pushf
xchg
pop
sbb
sti
dec
cltd
xor
dec
in
mov
pop
ret
jl,pn
add
insl
scas
movsb
push
sbb
out
sub
outsb
mov
push
xchg
imul
mov
sub
cmp
lds
or
cmp
xchg
jmp
lods
push
cmp
ret
and
sbb
mov
sahf
outsb
mov
jmp
data16
dec
lods
mov
gs
dec
out
cmp
inc
sub
cmc
mov
loop
dec
push
add
das
sub
push
inc
fdivr
xchg
int
mov
lret
adc
jle
mov
jmp
xchg
xor
dec
sbb
jns
daa
int
push
cmc
inc
push
imul
pushf
test
sub
sarb
mov
sbb
inc
pop
jb
xor
cmp
fsubrl
aas
iret
inc
inc
out
or
xchg
or
femms
into
out
xor
mov
sete
adc
jle
hlt
pop
xor
mov
int
cs
mov
movsl
ss
cmp
xchg
pusha
mov
fstp
xchg
test
insb
cmpsb
test
jge
xchg
lcall
arpl
sbb
push
ljmp
popw
or
outsl
or
add
mov
scas
mov
mov
loopne
pop
push
jo
sbb
mov
jno
cmp
sahf
or
notl
mov
mov
pop
sbb
lret
inc
loop
sub
xchg
jge
mov
push
and
mov
arpl
das
push
pop
sub
les
iret
int3
and
adc
out
xor
dec
fcoml
femms
dec
fwait
mov
sub
lcall
insl
leave
pop
mov
push
arpl
dec
out
xchg
lcall
pop
enter
movsb
aaa
ret
in
sub
gs
stos
test
xchg
fdivs
mov
data16
or
ficoms
cmc
or
sub
ss
iret
lods
adc
pop
enter
incl
test
push
mov
arpl
mov
test
insb
into
add
inc
mov
cmc
cmpsb
not
push
int
dec
stc
paddsb
dec
vmovd
fcom
add
mov
mov
jmp
inc
xor
jl
xchg
out
xlat
test
mov
push
mov
mov
push
scas
insb
cmp
ljmp
add
xchg
cmp
xor
inc
ds
xchg
dec
push
mov
das
pop
push
pusha
cmp
inc
lcall
aaa
mov
pop
insl
fisubrs
or
and
out
jbe
push
jb
aas
daa
repnz
mul
push
add
mov
daa
nop
das
jns
lret
dec
faddl
dec
cmp
push
sbb
push
xchg
or
mov
mov
out
push
test
insl
sbb
push
lock
scas
push
xchg
xor
ss
mov
push
rclb
and
dec
pop
mov
cmpl
pop
inc
dec
dec
xor
stos
jae
mov
loope
push
mov
pop
or
cld
push
inc
dec
mov
jmp
mov
int3
adc
lds
cmp
out
je
fldenv
pop
adcl
mov
lea
daa
enter
callw
xor
push
lret
mov
sub
jae
fs
ja
or
and
in
out
shrb
imul
dec
mov
addr16
sub
rcrb
mov
mov
ljmp
and
dec
xchg
push
xor
jmp
cwtl
call
jne
fisttps
xchg
jb
lahf
sub
cmpsl
pushl
jg
pusha
push
jns
and
sbb
add
push
pop
inc
jno
jbe
call
xchg
mov
xchg
test
lahf
and
pop
jbe
out
pushf
mov
lahf
nop
icebp
jecxz
testb
xor
inc
cmpsb
lahf
das
mov
out
mov
sbb
jg
out
imul
imul
jg
mov
js
mov
loop
icebp
pop
aam
rcr
test
push
out
pop
js
add
add
pop
jbe
fidivs
jmp
jecxz
pop
add
int3
pushl
mov
or
dec
mov
dec
std
faddl
fs
dec
std
in
es
fwait
jb
dec
mov
inc
pop
stos
sub
mov
cmpsl
ffreep
or
cmp
mov
xchg
roll
push
inc
cmp
fildll
mov
insb
outsl
jp
fwait
insb
xor
dec
fwait
pop
lahf
fcmovb
imul
dec
or
andb
lock
adc
mov
jg
call
and
mov
and
xchg
jg
lret
dec
adc
into
push
repnz
jbe
iret
pop
sub
xchg
push
lods
lods
in
fdivs
adc
fnsave
push
xlat
psubw
pop
pop
xchg
cmc
jns
pop
out
jle
rorl
fisubrl
dec
out
test
jo
pop
mov
xor
add
imul
cmp
mov
add
mov
xchg
ss
push
cmpsl
inc
mov
push
cwtl
adc
lcall
dec
mov
lahf
fwait
xchg
cmp
leave
fs
adc
mov
sub
mov
cltd
call
test
pop
jno
lock
mov
or
sahf
push
pop
and
dec
mov
cmp
loopne
pop
stos
and
dec
lret
inc
out
mov
sbb
pop
mov
jnp
fiaddl
daa
push
fbld
popf
add
mov
jge
sbb
cld
test
add
or
sub
xor
leave
sub
test
push
pop
jge
mov
add
inc
mov
mov
imul
stos
pop
jne
mov
in
jae
inc
mov
out
mov
inc
dec
sbb
dec
cmpsb
mov
stc
mov
xlat
and
xchg
test
test
mov
jae
out
mov
jns
or
xchg
mov
data16
sbb
jns
pop
pop
jbe
bound
out
adc
xchg
movsl
mulb
pop
cmpb
mov
mov
clc
outsl
movsb
rcr
mov
test
adc
jl
jle
sub
ss
cmc
xchg
loope
inc
add
xlat
rcrl
jne
sub
je
jbe
into
xchg
pop
pop
lock
sub
add
and
push
adc
sub
inc
fs
fcos
push
lret
jp
fstps
popl
xor
mov
out
mov
inc
jg
ljmp
movsb
dec
push
xchg
mov
dec
dec
inc
jne
sbb
cmpb
mov
cli
test
dec
movsb
shll
inc
aad
les
pusha
add
ljmp
test
mov
push
mov
das
push
mov
int3
adc
jbe
pushf
xchg
fdivs
movsl
cs
fsts
xlat
jns
ficoml
xchg
vunpckhpd
push
cld
aaa
mov
mov
mov
sbb
or
into
loope
push
xor
sbb
mov
out
mulb
jns
lods
testl
pop
mov
jns
data16
xor
cmp
jbe
js
or
in
gs
iret
loopne
andb
int3
hlt
js
neg
sarb
sub
sbbb
outsb
test
dec
out
xchg
jns
leave
push
jns
icebp
pop
sub
aam
xor
nop
shlb
lret
cmc
push
cmpsl
jmp
fs
fs
adc
cltd
call
and
mov
rorb
cmp
inc
mov
ficoml
clc
pop
push
cmp
loope
fcmovu
test
mov
push
lret
dec
pop
inc
cvtpi2ps
mov
lahf
fiadds
or
rcll
sub
and
shr
movups
sbb
and
lock
not
popa
jns
cmp
mov
repnz
or
aaa
ror
test
cmpsb
pushf
fdivrs
lret
sar
jecxz
and
mov
pop
pop
mov
rorb
mov
es
test
popf
outsl
dec
xchg
inc
pop
adc
and
lods
sahf
mov
shr
push
lods
dec
loope
jns
lcall
or
dec
sbb
jo
sarb
fdivs
cmpsb
lret
repz
adc
dec
push
jge
cwtl
xchg
cmp
dec
cmp
or
outsl
jae
jo
lcall
mov
jp
cmc
pop
lds
mov
or
xor
pop
pop
jb
dec
stc
lret
jmp
sub
mov
jmp
mov
dec
add
inc
mov
and
sarl
push
pop
pushf
lcall
push
in
push
cltd
shrl
fisttps
sbb
mov
mov
hlt
jnp
out
lcall
in
mov
mov
jl
mov
imul
leave
fdivs
repnz
outsl
xor
and
sub
enter
pop
scas
or
push
adcl
push
clc
ds
xor
data16
mov
shlb
jbe
fildll
testl
shlb
mov
inc
std
test
out
pop
lea
cmp
cwtl
sub
or
nop
outsl
outsb
or
pop
push
add
jp
rcl
and
pop
inc
sub
subl
push
mov
and
scas
dec
jle
jo
add
aad
popa
lcall
jbe
test
adc
cmc
mov
mov
fs
adc
lret
lea
fwait
push
lods
jne
rorl
cmpb
lret
subb
les
xor
adcl
sti
cmp
stc
out
imulb
dec
jg
pop
ds
mov
rcr
inc
sbb
push
jl
out
xor
ja
mov
imul
xor
adcb
mov
inc
iret
jo
push
adc
cld
jno
call
fcomps
test
inc
or
mov
insb
dec
das
pop
xchg
sub
hlt
shrb
adc
xchg
add
jae
mov
lds
fisttps
test
fcompl
jnp
dec
icebp
xor
pushf
decl
inc
outsb
hlt
and
fidivl
push
lods
xor
out
or
dec
outsb
sub
add
fisttpl
cmp
std
int
out
mov
push
lock
adc
xchg
insl
movsl
pusha
ljmp
xor
leave
pop
mov
rcll
dec
sub
aad
movsb
xchg
xchg
ds
das
lock
adc
push
ficoms
mov
shlb
into
cmpsl
xlat
aam
pop
into
fsubs
push
fdivrp
daa
out
mov
in
outsl
adc
add
add
fstps
int
lods
outsb
pop
ret
jae
sbb
xor
pop
and
iret
mov
outsb
cwtl
push
stc
pop
xlat
adc
xchg
push
cmc
pop
hlt
sbb
into
mov
add
aas
cmp
xchg
pop
fwait
or
test
jmp
or
insl
test
jge
or
je
cli
adc
out
ficoms
push
push
or
inc
rcll
je
pop
fidivrs
sbb
inc
ja
ja
dec
mov
sahf
jnp
mov
inc
imul
cmp
in
fdivrs
loop
dec
ja
push
adc
movsb
cmp
mov
pop
addb
cmp
in
mov
adc
push
jge
lea
xor
adc
push
adc
int
inc
adc
lret
mov
cmp
daa
out
in
inc
and
mov
push
xor
mov
pop
pushf
mov
jg
lods
iret
outsl
lock
push
insl
jecxz
loopne
ljmp
sbb
pop
int
jmp
popa
push
or
sahf
hlt
dec
add
adc
dec
das
add
adc
outsl
add
repz
rclb
scas
lods
or
mov
leave
frstor
imul
dec
add
cli
add
lods
movzbl
pusha
in
in
jge
test
ljmp
test
scas
dec
cmp
inc
and
insl
and
jmp
sbb
add
xor
std
orl
sub
jbe
ljmp
mov
sub
ja
sbb
xchg
mov
out
and
or
cmc
das
lds
adc
or
xchg
xchg
mov
loope
jmp
dec
daa
incl
insl
femms
and
sbb
xchg
dec
xor
inc
jmp
jo
cmp
out
ret
inc
rcl
add
inc
pop
push
sbb
dec
aad
add
xchg
cmpsl
add
push
leave
cld
push
cmp
jnp
cmc
pop
mov
loop
into
mov
test
lret
popf
imulb
sbb
add
add
sahf
sub
xchg
mov
addb
imulb
cwtl
loop
xchg
popa
push
leave
dec
data16
ja
lock
incb
pushl
mov
sbb
sbb
jns
into
cmpl
ja
push
and
sub
sbb
cmp
addr16
or
jns
pop
push
test
ret
dec
sub
aas
adc
mov
or
push
scas
mov
shrl
jbe
inc
xor
xlat
jno
cmp
mov
call
adc
dec
nop
adc
mov
cwtl
push
sub
arpl
xchg
xor
push
add
jb
inc
add
jno
rcrb
ret
and
out
cli
je
xchg
mov
sti
ficoms
fmuls
add
sbb
mov
fsubrl
push
push
movsb
aam
xchg
mov
ret
sbbb
fsubp
cld
stc
aaa
and
add
inc
and
or
shl
xor
mov
jb
mov
sahf
js
int3
movsb
xchg
or
push
pop
aad
push
lret
clc
or
xchg
aad
data16
jl
inc
jae
dec
sbb
out
inc
enter
and
out
pop
roll
mov
jns
scas
outsl
jbe
mov
sub
jmp
push
push
or
inc
sbb
jae
and
sub
jg
and
pop
insl
fwait
shlb
nop
push
dec
iret
lar
int
mov
add
popa
xchg
and
pusha
sbb
push
adc
das
jmp
cli
xlat
xor
leave
push
cmpsl
pop
inc
scas
or
sub
in
sub
mov
ds
adc
xchg
mov
sub
imul
lahf
cmp
cmp
jl
popf
pushf
mov
or
inc
xor
mov
pop
jnp
lahf
sub
add
sub
xchg
lret
add
pop
and
subb
js
shll
push
rorb
mov
xchg
sarb
mov
adc
in
inc
inc
mov
jne
sahf
int
push
bound
movl
leave
in
aas
daa
dec
test
jbe
jae
cs
es
dec
addr16
jne
lcall
or
add
sub
mov
sarl
mov
movsl
daa
mov
push
mov
int3
les
dec
cli
ret
es
cmpsb
cltd
adc
es
stos
push
and
pop
scas
push
inc
push
hlt
sub
repz
fwait
cmp
mov
lret
cmc
adcl
cmp
arpl
mov
xchg
or
push
cmp
mov
test
je
out
sub
notl
ror
les
fs
outsb
test
or
popf
movsb
shlb
mov
cmp
jg
fimuls
lret
cmpsb
adc
loop
or
hlt
outsl
mov
dec
icebp
pop
jmp
js
mov
add
sub
push
sarb
push
mov
call
addr16
mov
cmpsl
lret
mov
or
das
mov
lds
pop
loop
push
and
call
ljmp
in
pop
mov
shll
mov
dec
cmp
hlt
in
xchg
inc
gs
out
pop
or
cmpsl
rorl
and
cmpsl
pop
lcall
pop
jecxz
cmc
std
pop
das
cmpsl
sub
push
sahf
aaa
push
je
iret
sub
test
lahf
leave
xor
adc
push
mov
and
push
dec
test
and
and
shr
pop
jo
or
sbb
jae
push
je
sbb
fs
mov
fisttpl
rcll
outsb
adc
es
shl
arpl
lds
cmp
cld
fimull
adc
cmpl
pop
iret
pop
inc
repnz
loopne
in
adc
imul
dec
roll
mov
cmp
popa
fisttps
dec
and
imul
lahf
and
xchg
mov
xchg
cmp
insb
jne
or
add
test
mov
test
adc
jns
inc
pop
mov
pop
fcompl
fisubl
je
push
mov
in
je
cltd
es
lods
fmul
jne
out
loope
lods
movsb
mov
lahf
xchg
fucomi
rorl
mov
mov
xchg
xchg
ficoms
div
lcall
gs
call
ljmp
fcmove
dec
push
out
rclb
mov
push
sti
cmpsb
orl
and
mov
outsl
incl
push
std
scas
int3
pop
test
and
add
andb
jb
pop
inc
inc
push
movsl
xlat
mov
jle
out
fsub
xlat
sub
hlt
hlt
call
outsb
loope
jg
shll
ficoms
call
adc
xchg
cmp
jns
adc
dec
or
push
jbe
dec
cs
aad
je
jge
adcb
insw
imul
js
pop
js
divb
cmp
gs
inc
mov
and
mov
pop
mov
lea
sbb
mov
ss
rcll
push
into
loopne
fldcw
dec
xchg
cmp
cwtl
rcrb
dec
ljmp
les
push
fsub
push
cmp
pushf
sub
lret
stos
sbb
repnz
inc
pop
or
cmp
sbb
xor
decl
lret
sarb
aas
stos
lds
fwait
push
push
jmp
lahf
and
bound
add
inc
jno
dec
sub
xor
and
add
mov
push
fldt
into
test
inc
ds
lods
je
mov
popf
hlt
xor
lret
xchg
mov
ss
shrb
out
fwait
pop
popa
outsb
lds
test
inc
sub
jns
hlt
mov
xchg
pop
push
aad
cli
mov
fildll
xor
das
aaa
pop
sub
cld
jmp
je
iret
xchg
das
es
push
and
test
hlt
xchg
push
into
jbe
or
adc
xor
out
adc
out
les
mov
pop
jne
ss
gs
shrl
jno
ret
and
bnd
mov
pop
clc
popa
jnp
stc
xor
jbe
std
rorl
jl
outsb
and
add
stc
leave
pop
lret
mov
inc
push
fwait
lret
pusha
call
pop
fdivrl
aaa
add
mov
push
push
push
sbb
out
hlt
notl
add
scas
sahf
push
es
xchg
and
jle
adc
mov
into
lods
pushf
sub
add
loope
push
sbb
fisttpl
sbb
insb
dec
call
push
addl
lods
xchg
sbb
aas
or
int
repnz
dec
stos
in
mov
pop
cmc
insb
pop
sbb
mov
xchg
xchg
pusha
icebp
clc
mov
add
aas
xor
insl
imul
std
rcrb
adc
in
test
inc
aam
or
fcmovnu
pusha
je
pop
xor
lret
dec
sub
push
popf
xchg
gs
test
jb
imul
and
push
out
out
pop
push
xor
in
rol
test
lret
pop
and
outsl
jae
jp
lfs
fstpl
mov
in
sbb
or
dec
jl
into
sbb
fsubl
push
lret
out
clc
pushf
add
add
push
scas
aam
sbb
jns
pop
fmuls
cmp
mov
adc
int
or
lea
dec
cmpsb
dec
jge
add
addr16
cli
mov
cltd
mov
jg
pop
push
fildll
in
mov
push
xlat
movsl
dec
add
inc
mov
outsb
in
inc
sub
and
leave
leave
jecxz
les
movsb
imul
xor
mov
xchg
add
and
cmp
jp
scas
push
xchg
popf
scas
mov
in
fdivl
and
jge
ret
cmc
ficompl
loope
xchg
mov
mov
sbb
mov
cmp
or
add
cmc
aaa
sbb
jno
sbb
js
push
ret
xorl
dec
mov
adc
or
cmp
and
jmp
enter
lds
jg
inc
les
and
dec
push
ljmp
ja
loope
lret
push
imul
mov
add
inc
pop
fdivl
push
lret
jmp
jecxz
cld
jnp
ret
lods
movsb
pop
push
fs
lret
loop
xlat
sbb
divl
loopne
je
shll
cltd
out
jmp
je
ja
in
rolb
pop
nop
dec
xchg
xchg
clc
into
out
fwait
lahf
loopne
mov
cmpsl
pop
dec
dec
push
gs
sarb
dec
push
in
jg
pop
cs
or
mov
add
dec
sub
fldcw
int3
shll
push
or
gs
insl
push
sbb
pop
outsb
popa
add
sub
and
in
mov
mov
mov
jg
mov
fcoms
sub
jno
iret
out
outsb
push
repz
adc
rcrl
sti
sub
mov
int
leave
fdivr
sub
jg
fmulp
xchg
sahf
aaa
fdivr
xor
cmp
std
xor
test
insb
sarl
jmp
push
cli
and
mov
fsubs
repnz
jnp
test
jmp
mov
pop
jae
push
pop
lret
negb
cltd
out
sub
fiaddl
xor
mov
lock
sti
push
es
cwtl
pusha
bnd
push
in
stc
fidivrl
dec
cwtl
lds
pop
mov
cmpsb
cmpl
cwtl
mov
negb
push
add
fwait
sbb
jno
sbb
push
mov
mov
push
jg
mov
xor
fnstcw
pop
stos
sub
mov
rorb
int3
pusha
sub
arpl
cmp
mov
mov
sbb
mov
dec
inc
inc
xlat
in
pop
jnp
sbb
lock
add
mov
xchg
xchg
pop
mov
add
imul
and
das
jns
mov
mov
mov
lods
pop
scas
fld
lcall
xchg
inc
movsb
xchg
dec
sbb
ds
lret
cmpsl
mov
xchg
mov
fsubs
mov
ret
sbb
test
inc
xchg
xchg
cmp
andl
ret
clc
js
sbb
jno
mov
and
mov
insb
aaa
xchg
test
arpl
cmpl
mov
loope
or
nop
sub
mov
iret
scas
cmc
stc
xor
dec
and
loope
dec
pop
popf
fldt
sarl
sqrtps
sbb
push
pusha
sub
sub
xchg
leave
mov
mov
daa
lds
mov
mov
jae
ret
jmp
push
ljmp
iret
dec
stos
lods
subl
sub
inc
testb
jbe
daa
aad
or
push
cmpsb
jae
ficompl
pop
imul
push
jbe
fldenv
pop
pop
sub
push
sbb
pop
inc
sbb
push
cmc
data16
loope
mov
xlat
cmp
jae
cli
mov
out
notl
mov
lret
imul
gs
pop
aas
mov
xlat
movsb
jo
dec
add
aam
shl
bound
daa
sbb
or
mov
jl
sbb
and
cmpsb
frstor
or
xor
pushf
push
sub
jge
xor
mov
inc
daa
xchg
out
pop
inc
xor
lea
outsl
ja
mov
adc
divl
mov
inc
cmp
mov
sub
xchg
cs
jge
out
pushf
sbb
repnz
dec
aas
jbe
popf
inc
cmp
cmp
sub
xor
xchg
mov
mov
pop
data16
ds
rclb
push
orps
pop
cmp
adc
mov
sarb
push
lods
repnz
add
arpl
mov
lds
jl
push
fisttpll
data16
fistpll
movsb
xor
leave
icebp
cs
lret
adc
jae
in
mov
mov
data16
mov
rol
lahf
cmp
insb
mov
sti
mov
xlat
sbb
ljmp
repz
das
lods
inc
enter
add
ja
cltd
daa
jbe
cmpsb
fwait
mov
out
stos
enter
movsl
dec
dec
cmpsb
pop
sub
cmp
lcall
jge
les
mov
and
pop
cmp
lea
test
cmc
inc
into
test
xor
into
sbb
movsl
push
xchg
arpl
mov
loopne
aad
aam
test
or
or
pop
pop
xchg
jnp
inc
jno
addr16
sub
fildll
mov
mov
in
pop
loop
int
sbb
data16
stos
loop
inc
outsl
push
cld
cli
arpl
or
push
ret
mov
inc
clc
cmp
arpl
push
push
ret
xchg
leave
popf
das
loope
fmul
cmc
push
xchg
iret
inc
dec
cmpsl
push
jae
xchg
jle
sbbb
in
xor
mov
cmpsb
clc
push
adc
mov
inc
and
jecxz
inc
mov
and
fistpll
xchg
mov
daa
lret
sbb
sbb
sub
outsl
jecxz
push
loop
xchg
xor
and
dec
fdivs
or
cwtl
subb
sbb
clc
rcrb
adc
out
xlat
mov
lods
cld
cmp
fsts
jle
push
ss
inc
fisubrl
sbb
out
leave
mov
xchg
test
loopne
sarl
fs
shrl
roll
mov
pop
pop
mov
negl
in
cwtl
in
push
mov
imul
dec
lds
sub
xor
cmp
cmc
popf
outsb
mov
loop
mov
popf
fisubl
mov
inc
shlb
inc
repz
sahf
xchg
push
inc
xor
xchg
xchg
pop
insl
lods
es
pop
mov
testb
es
in
mov
rorb
sti
dec
pop
nop
movzwl
enter
es
pop
mov
div
fdivl
and
loop
cwtl
mov
insb
lods
shll
adc
mov
adc
sbb
adc
ljmp
or
push
es
sbb
jecxz
push
dec
out
cwtl
cmp
int
inc
out
nop
addl
out
mov
call
and
jge
and
sbb
insl
xor
inc
xchg
xchg
cwtl
call
xor
cmp
inc
xor
outsb
popa
pop
lods
test
ljmp
ret
add
jo
mov
cmp
imul
in
cmp
add
push
in
ljmp
pop
cwtl
inc
and
mov
fdivr
and
lahf
jnp
std
out
mov
movb
or
mov
mov
push
lock
sbb
mov
inc
leave
fwait
and
inc
ljmp
les
into
mov
jecxz
fnstcw
add
inc
sahf
mov
iret
mov
mov
sub
sti
or
lahf
outsb
sbb
or
sbb
mov
mov
push
ja
adc
mov
enter
xchg
test
subl
mov
jl
jne
ss
xor
repnz
out
js
mov
in
cmp
push
addr16
test
jnp
dec
lock
cmp
popa
loopne
add
sub
leave
and
and
lds
xchg
jne
outsb
push
cmp
insl
movsb
dec
add
jb
and
and
js
mov
mov
xchg
test
mov
xchg
jns
xchg
add
cmpsb
pop
je
jno
dec
xor
cld
iret
dec
addl
arpl
aad
or
pop
mov
test
scas
cmp
inc
adc
push
inc
lds
lea
aad
xchg
pop
inc
sti
insb
and
in
stc
pushf
rcrl
andb
inc
adc
jp
jne
sarb
mov
je
movsb
adc
mov
dec
push
jg
fidivs
adc
mov
xchg
jmp
push
mov
pushf
push
xchg
fucomip
gs
sub
movsb
mov
cmp
call
jecxz
lret
cmc
int3
aad
out
jmp
mov
lock
cli
jne
cmpsl
xchg
mov
lea
mov
rcrb
or
iret
mov
dec
inc
imul
push
stc
mov
xchg
call
push
xchg
push
push
or
and
jns
rclb
jl
mov
xor
mov
add
add
int3
popf
add
mov
scas
in
push
mov
dec
outsb
mov
pop
add
int3
and
loope
cmp
xor
sub
mov
xor
mov
cmc
loop
sub
jo
int
jo
xchg
cld
loop
cmpsb
mov
xchg
or
or
sub
ljmp
insl
movsl
stos
push
int3
fists
mov
insb
xor
push
cmp
int3
shlb
inc
xchg
inc
or
mov
cmp
xchg
enter
pop
lahf
push
and
adc
dec
int
pop
loopne
fcomip
sbb
pop
push
or
xchg
inc
xchg
ficompl
data16
scas
mov
cmp
mov
sub
sti
or
adc
add
test
aas
cmpsb
xchg
and
push
incl
test
outsb
add
xlat
stos
xchg
dec
aaa
fldt
lock
scas
insb
hlt
stos
push
cmp
pop
mov
xchg
add
mov
xchg
imul
inc
or
mov
andb
cmp
push
xor
stos
sahf
push
es
add
cmp
sbb
add
mov
or
and
hlt
popa
xor
jecxz
lock
in
fildl
js
adc
xor
ret
push
int3
xchg
mov
jns
pause
sbb
shrl
push
enter
pushf
sbb
hlt
mov
repz
push
push
and
jg
sbb
xor
movsb
inc
loopne
add
enter
lret
inc
lock
insb
push
mov
cld
xlat
aad
mov
add
popf
fld
cwtl
sbb
out
sub
lahf
mov
arpl
test
mov
push
and
sub
in
out
dec
repz
add
cmp
loope
sub
mov
mov
cmp
xchg
adc
leave
mov
cmpsb
sub
xchg
test
fwait
out
pop
push
mov
or
loope
outsb
xchg
addr16
fnstsw
negl
subl
push
xlat
push
sarl
sbb
jmp
jne
add
jle
or
xchg
fmuls
int3
pop
loope
xor
mov
das
push
inc
inc
rolb
div
pop
sbb
cmp
pop
push
pop
sbbb
int
lea
adc
mov
and
and
enter
mov
add
adc
ja
inc
lret
xor
or
cmp
mov
or
push
xor
inc
test
mov
mov
bound
and
aaa
xor
out
cmpb
nop
jg
outsl
jl
add
cmp
mov
jmp
test
lret
mov
mov
jp
stos
jno
adc
cmp
fnstcw
lcall
shrb
scas
pop
ja
in
mov
filds
mov
out
jb
in
ss
into
daa
xchg
je
adc
fwait
xorb
imul
sahf
push
add
lret
addr16
sub
push
sub
aaa
jnp
iret
out
sbb
fmuls
mov
fmulp
sarl
ficomps
push
cmpsl
jle
test
add
repz
pop
test
in
add
stos
xchg
cmp
push
xchg
push
fbstp
andl
xor
xchg
in
sti
lahf
cltd
ja
jno
lahf
sbb
mov
adc
loopne
jp
inc
dec
rorb
popa
pop
call
ret
inc
xor
mov
sbb
adc
xor
inc
nop
lds
in
add
pop
pop
leave
outsl
and
cmp
xor
lock
pop
cs
push
push
dec
jecxz
and
push
dec
xor
popa
aam
fstp
imul
jno
mov
jg
add
pop
clc
jne
dec
push
push
lods
in
popf
arpl
stc
lret
cmova
flds
sub
incb
incb
jae
fildl
ljmp
js
lods
sbbl
stos
xchg
movsl
sub
repnz
xchg
dec
jl
mov
mov
jp
xorb
sub
dec
mov
cmc
fcompl
dec
or
xchg
addr16
gs
lret
pop
inc
push
jo
pop
cld
nop
fadds
mov
mov
inc
ss
mov
mov
cmp
out
jbe
ljmp
in
and
stc
xchg
jle
mov
xchg
fwait
andb
push
pop
xchg
aam
loop
or
add
int3
add
dec
leave
sub
mov
jbe
test
int
inc
fwait
xchg
in
push
fucom
sbb
xchg
jle
jb
lret
xor
pop
lahf
aam
pop
mov
pop
clc
fbstp
mov
movsb
cmp
insb
pop
mov
push
sub
push
aam
adc
movsl
jo
cmp
inc
cwtl
xchg
bound
std
adc
loop
inc
jne
or
imul
pop
mov
enter
out
test
mov
jmp
dec
popf
mov
push
xchg
aaa
jmp
add
lret
xor
add
clc
mov
inc
and
dec
lds
or
push
insw
add
cli
rorl
dec
ds
push
and
mov
add
popf
je
cmp
sub
rcl
push
test
add
jne
xchg
cmpsl
mov
push
cmp
and
mov
pop
adc
dec
or
mov
and
es
inc
popa
sti
cmpsb
push
mov
pop
jnp
ds
pop
mov
and
sti
ror
cmpsb
icebp
add
pop
push
ret
loop
xor
pop
or
add
mov
xchg
lcall
xchg
dec
xor
lahf
push
mov
push
out
jae
jnp
or
sbb
push
mov
mov
fs
out
sub
cmp
and
scas
push
pop
xchg
sarl
ds
scas
add
sbb
inc
jo
lea
jae
fidivl
imul
sti
adc
sub
daa
dec
repnz
sbb
or
aam
pop
mov
add
jge
add
xor
xchg
fs
orb
mov
jae
add
fs
inc
jno
xchg
out
pop
scas
mov
aad
loope
into
jo
jbe
lock
adc
sahf
and
mov
xor
push
outsb
scas
lea
into
lcall
ret
dec
out
loop
push
cmp
inc
cld
cmp
lahf
jp
sbb
shl
adc
cmp
push
pop
std
movsl
fidivs
mov
lods
and
in
jp
push
add
sbb
inc
mov
xchg
repnz
sbb
aaa
outsb
push
pop
mull
sbb
imul
xchg
jp
int
and
gs
sub
push
xchg
xor
or
xlat
aam
pop
mov
push
mov
dec
dec
dec
and
aad
gs
inc
cmp
push
push
in
test
daa
mov
lea
add
push
and
jo
repz
push
jp
outsl
addr16
or
or
mov
rorb
sahf
cmp
ret
cmp
std
test
ss
loop
movsb
mov
jno
in
mov
movsl
jmp
pop
xor
divb
mov
pusha
mov
cmp
loope
pand
ss
cmp
xchg
sbb
add
lods
lock
mov
dec
mov
xor
sti
punpcklwd
jns
enter
mov
adc
pop
insb
sbb
pushf
leave
les
icebp
inc
idiv
pop
add
jmp
rclb
stc
pop
xor
cli
pop
outsl
mov
dec
pushf
jge
ss
sub
or
add
adc
fildl
xlat
shrb
jl
in
mov
out
cwtl
push
or
push
jge
pop
jnp
cs
sbb
scas
add
in
shrb
dec
test
xor
in
out
mov
mov
push
orl
fistpl
cwtl
test
jle
lcall
push
push
popa
orl
mov
dec
mov
mov
enter
add
add
mov
arpl
popa
pop
push
in
sbb
xor
lea
add
add
or
add
sbb
pop
jae
mov
pushf
addb
xchg
fs
insl
mov
pop
lcall
fsubs
in
jb
addl
into
aam
ljmp
lods
push
out
inc
in
adc
jae
add
pop
fnstcw
add
add
and
push
pop
cs
roll
jae
hlt
jne
sahf
adc
loop
push
push
jl
sbb
ss
mov
iret
jg
fsubr
dec
call
xchg
aad
adc
in
mov
cmp
cmp
in
cmpb
and
pop
test
je
sub
sub
nop
pushf
mov
jnp
stos
and
push
scas
inc
adc
lcall
lods
aaa
add
ja
in
mov
data16
push
rolb
mov
jl
dec
xchg
mov
popf
add
out
add
mov
jbe
mov
loope
mov
mov
xchg
and
popa
lock
xchg
add
pop
mov
rolb
mov
test
cltd
aaa
lock
inc
pop
jle
jle
loopne
mov
jo
jns
push
lock
pop
jge
inc
inc
jp
fs
xor
mov
cmpb
out
loopne
lret
cs
xor
ja
orb
ljmp
nop
sahf
dec
add
inc
and
scas
je
push
sbbb
hlt
shll
mov
outsl
and
mov
pop
pop
rol
mov
pop
pop
aad
test
xor
in
sahf
test
ficompl
xor
or
xchg
jbe
xchg
mov
das
pop
and
and
push
lcall
in
in
cmpsl
jno
out
add
sbb
cmc
repnz
mov
cmp
das
or
and
cmp
mov
or
add
test
cmp
sbb
leave
ss
sub
xor
and
into
test
add
loopne
insl
movsl
add
sbb
dec
in
mov
fsubrs
pop
std
lret
xor
mov
push
test
ret
cltd
cs
incb
in
lea
cld
inc
lret
push
mov
pop
inc
inc
pop
subl
mov
push
and
int
adc
push
jg
sbb
inc
mov
mov
mov
imul
jecxz
lods
hlt
js
cmpsl
int3
int3
cmpsl
xor
xor
popf
mov
clc
pop
xorl
cmc
pop
mov
es
jle
xchg
mov
cmp
xchg
repz
cwtl
ljmp
daa
push
inc
mov
aad
outsb
or
mov
inc
push
mov
mov
cmc
sub
cmp
inc
fwait
and
and
jl
jo
inc
jecxz
fs
shl
ljmp
loope
in
xchg
sub
js
add
clc
cli
data16
int3
pand
mov
es
in
insl
aaa
jb
bound
loopne
pop
inc
mov
adc
addr16
movsl
push
in
mov
sub
xchg
movsb
insb
ds
das
or
inc
dec
test
jp
cld
fstl
aas
insl
jae
xchg
xchg
enter
pop
cmp
stos
dec
lock
pushf
adc
lcall
mov
arpl
dec
nop
xchg
aas
pop
cmpsb
loopne
cmp
pop
xchg
out
lret
push
add
rolb
inc
mov
jecxz
sub
aad
jecxz
inc
cld
test
mov
pushf
loopne
or
add
into
mov
cmp
add
dec
pop
mov
inc
dec
mov
push
sub
jae
subb
jne
cmp
mov
xor
inc
popa
sahf
xor
or
pop
out
subb
inc
xor
and
or
popf
jno
mov
sti
outsl
loop
cwtl
fs
jae
stos
lds
fsubrs
pop
mov
inc
jo
inc
fs
and
imulb
pop
popf
inc
pop
repz
sbb
jecxz
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
.byte
push
enter
sbb
jp
mov
and
pop
loop
test
fs
jb
cltd
mov
push
or
jo
jb
mov
mov
jle
add
lcall
dec
lahf
fs
cmpsl
dec
cld
adc
test
sub
mov
fistps
xchg
ds
scas
test
popa
daa
push
push
out
test
aam
jg
xchg
push
push
ffree
push
scas
xchg
adc
push
sbb
fwait
mov
or
lods
leave
mov
lock
jbe
cmpb
fildl
cmp
add
lods
lods
imul
mov
loopne
gs
pop
add
xor
sub
pop
inc
sub
inc
sub
cmpl
push
xchg
lea
mov
pop
fs
add
fwait
stos
pop
pop
mov
add
xchg
aad
push
int
pop
xor
sbb
push
add
push
imul
pusha
je
out
jno
loop
and
xchg
div
and
or
mov
pushl
insb
fstpl
or
pop
fwait
loopne
pop
incl
cmpsb
push
jecxz
js
fwait
jns
dec
int3
rcl
jnp
insb
sbb
add
sub
mov
mov
mov
std
push
syscall
hlt
outsl
push
cmp
jle
aaa
or
stos
inc
orl
ljmp
fidivs
outsl
xchg
ret
mov
lock
dec
dec
pop
mov
xchg
out
xchg
stc
orl
lods
or
movsl
adc
sub
add
es
rcll
test
and
fucomi
xor
lock
sbbb
jbe
daa
pusha
add
test
mov
pop
mov
adc
push
ljmp
repnz
fmul
sub
sub
out
pop
rcrb
push
add
outsb
jae
sub
lea
aaa
cmpsb
out
mov
fbstp
or
push
sub
xor
lcall
jp
repz
mov
pop
mov
mov
cmp
dec
and
imul
imul
jns
dec
xor
sub
jg
mov
pop
int
xor
pop
outsl
xchg
xor
mov
cltd
ja
std
popa
arpl
enter
inc
sub
and
cmp
je
sub
mov
cmp
mov
mov
je
mov
mov
sbbl
lods
in
popa
js
ror
adc
sub
jo
sar
outsl
add
popa
pop
stos
pop
loopne
sub
sub
ja
sbb
sub
or
test
push
insb
in
sbb
lea
inc
pop
sub
and
fldcw
mov
cmp
pop
xor
cltd
mov
nop
pop
mov
lea
sbb
add
mov
push
into
adc
cwtl
cltd
mov
mov
dec
pop
inc
cmp
cmp
out
cmp
std
pushf
fisttpll
bound
shll
dec
hlt
push
lret
or
push
aad
loopne
and
pop
sbbl
cmp
hlt
lret
jg
or
jbe
lock
jb
add
in
lret
jb
icebp
xor
push
pop
lods
aaa
aas
test
inc
cmc
add
lahf
xchg
sub
and
ljmp
cli
mov
jecxz
faddl
popa
push
dec
scas
xchg
xchg
xchg
movsl
sti
push
pop
shll
or
mov
pop
mov
popa
dec
cltd
jnp
and
out
xchg
cmp
packsswb
sbb
movsb
mov
es
out
sbb
xlat
mov
adc
je
je
push
in
in
test
xchg
pusha
sti
push
in
add
inc
pop
mov
cwtl
mov
mov
dec
inc
call
jp
mov
inc
add
int
iret
je
xchg
add
shll
ret
or
xchg
mov
iret
cmp
add
or
popa
dec
je
mov
inc
pop
js
sub
sbb
or
jne
arpl
inc
xor
fnstenv
out
in
pop
sbb
add
in
repz
xor
xchg
in
ret
push
jae
lret
adc
andl
dec
cmpsb
setp
and
in
cwtl
mov
push
outsb
pop
adc
xlat
mov
aam
out
mov
push
daa
lcall
out
mov
adc
mov
xchg
cs
xor
xor
nop
mov
pop
faddl
gs
test
fdiv
sbb
jns
xor
hlt
decb
push
popa
stos
daa
and
and
mov
shll
mov
jo
icebp
dec
xorl
pop
repnz
lret
inc
mov
mov
fists
addr16
xchg
jo
mov
cltd
sbb
pusha
sub
jl
xchg
mov
push
dec
or
ss
mov
ljmp
push
sub
ds
add
repnz
lcall
cltd
sub
jnp
leave
aaa
or
scas
sub
fsubrs
adc
mov
mov
hlt
adc
iret
sbb
adc
sarl
mov
add
ja
cmp
xor
mov
inc
movsl
add
aas
and
es
cmpsl
and
mov
arpl
je
pop
pusha
ds
test
inc
jp
lret
xchg
jae
mov
xchg
sbb
or
mov
cmp
into
daa
jo
adc
mov
and
pop
sub
cmc
out
sarb
mov
xor
mov
enter
lock
in
repnz
adc
nop
lcall
mov
scas
xor
test
pop
testb
lds
or
cmpsb
adc
aaa
ds
fs
mov
test
cwtl
int3
cmp
out
mov
mov
mov
mov
sti
xor
in
dec
out
scas
aas
aad
movsl
addr16
lret
and
dec
xor
movb
out
mov
pop
inc
xchg
adc
stos
fcmovu
jae
inc
mov
sub
jbe
into
test
fldenv
jge
sub
mov
or
adc
xchg
cmp
test
fdivrl
cmp
jae
fdivrl
out
push
xchg
or
push
xor
dec
push
or
cmpsl
mov
push
xor
mov
inc
ret
sbbl
int3
inc
adc
jbe
pop
les
jbe
fstps
pop
out
inc
aam
inc
dec
jne
aad
xchg
mov
add
push
in
dec
push
imul
pop
pop
xchg
dec
lock
mov
fnsave
xor
repnz
jle
pushf
outsb
enter
ja
movsb
pop
js
pop
sub
fildll
mov
pop
stc
les
xchg
push
aaa
sbb
cli
add
dec
xor
pop
lods
mov
imul
sbb
lods
mov
push
mov
scas
dec
push
faddl
lcall
pop
mov
push
mov
adc
addr16
push
in
mov
pusha
cmp
imul
popf
ffree
inc
xchg
lret
or
cmpsb
lods
mov
and
or
mov
jp
jg
stos
stos
and
lret
dec
cmp
push
jl
leave
out
pop
mov
psubsw
adc
xor
imul
and
pop
mov
mov
scas
ret
outsb
mov
int
cmp
stos
xchg
or
cmp
cmp
sub
lods
jge
jmp
push
or
lock
xor
xor
xor
inc
and
test
loope
pop
sbb
jbe
out
jae
sub
inc
or
xchg
fiadds
dec
cwtl
inc
sbb
fldl
or
cmp
lock
cmp
sbb
call
addl
mov
inc
push
jne
shlb
jl
dec
sbb
fwait
or
pop
xor
loope
lods
ss
pop
fcmove
add
and
ja
ret
int3
xlat
push
scas
push
and
popf
pushf
xchg
pushf
dec
pop
push
aam
aad
lcall
dec
movsl
in
pop
xchg
popa
std
mov
ljmp
sub
mov
mov
adc
jne
es
fidivrs
add
jno
das
jno
fdiv
or
jmp
fisttpll
dec
mov
scas
add
add
push
inc
inc
mov
push
movsb
popf
dec
jne
cmp
pop
fs
jne
mov
rorl
pop
icebp
pusha
and
movsl
and
jmp
std
jo
outsb
mov
mov
movsb
lret
test
mov
imul
push
fidivl
addb
rol
and
int
sbb
mov
and
adc
mov
fdivrl
insl
xor
outsb
stos
jmp
adc
lock
mov
imul
arpl
stc
mov
out
int3
jae
fsubl
decb
push
stc
das
popa
sub
fsubl
mov
pop
mov
xor
push
mov
push
cmp
jnp
int
insb
or
loopne
cmp
dec
push
mov
test
dec
lods
jl
insl
icebp
ljmp
push
fnstcw
movsb
icebp
call
jl
enter
mov
in
sub
stc
clc
ficoml
inc
or
ja
sarb
jb
in
mov
mov
int
inc
jo
push
inc
jge
stos
sbb
mov
sub
ja
dec
mov
sub
outsb
in
mov
test
out
idivl
test
mov
and
fldt
out
repnz
inc
adc
leave
imul
loope
inc
push
jb
adc
jp
xchg
iret
stos
mov
mov
mov
mov
xchg
dec
cmp
sbb
test
ret
xchg
fcmovnbe
mov
push
ret
and
push
add
add
sahf
lret
hlt
iret
mov
shlb
pushf
xor
mov
adc
xchg
rcl
pop
out
inc
cmpsl
lds
adc
cmp
gs
add
rorl
lods
sub
lods
dec
push
sahf
loop
scas
cmc
jp
pop
xchg
in
inc
cltd
xchg
stos
loope
dec
inc
cli
inc
jp
mov
sub
adc
movsl
out
push
xchg
cmp
aam
jecxz
lret
and
scas
xchg
mov
jb
adc
mov
test
mov
cmc
mov
mov
jle
push
push
push
flds
xor
stos
xchg
xor
inc
push
sbb
lock
mov
jmp
lods
mov
pop
lret
sbb
cld
or
lahf
sbbb
das
cs
mov
inc
lret
add
and
insl
in
testl
gs
inc
dec
and
into
dec
inc
sbb
aad
mov
push
insl
cmp
jle
sub
and
mov
cmpsb
scas
aad
dec
sti
xor
fistl
in
jmp
fwait
jae
inc
jl
inc
cld
iret
icebp
pop
inc
ljmp
lods
inc
fisttpll
xor
mov
lcall
pop
xchg
repnz
mov
adc
fucomi
insb
inc
jle
and
int3
outsl
inc
xrelease
pop
add
jecxz
imul
inc
in
cmp
xchg
fcmovne
jmp
lcall
push
sub
mov
lods
sar
in
js
and
lods
ljmp
fisubs
sbb
inc
xchg
mov
std
mov
jae
mov
inc
xor
nop
or
xor
sub
sbb
mov
sub
fidivrs
sub
insb
pop
dec
push
push
mov
pop
adcl
sbb
jl
insb
arpl
pop
lock
cwtl
inc
or
lahf
mov
push
push
in
xchg
mov
outsl
mov
aad
cwtl
push
and
nop
inc
inc
out
cmp
mov
and
jp
dec
inc
mov
es
gs
and
and
enter
mov
fwait
ret
nop
repz
pop
jbe
jge
pop
push
clc
lds
and
jae
push
and
imul
into
add
mov
sub
xor
adc
cmc
out
stos
dec
icebp
cmpsb
lret
call
rclb
cmp
outsl
push
mov
or
mov
mov
and
imulb
cmp
inc
icebp
pop
iret
pushl
xchg
in
cmp
jg
aad
mov
add
fwait
pop
inc
je
fnstcw
cltd
add
fsubl
lock
pop
mov
mov
loop
sub
fisttpll
xor
sbb
xchg
int
xchg
into
ret
xor
hlt
mov
movsb
lods
rcr
sub
fcomps
mov
lea
add
insl
or
xor
lret
adcl
pop
lds
mov
jecxz
scas
cmp
aas
in
std
andb
sub
adc
bound
adcl
outsl
and
loop
std
jmp
pop
cmpl
fwait
mov
aad
jmp
lods
fcmovu
das
push
sub
sbb
sbb
sti
push
mov
aaa
daa
pushf
pop
rcrb
add
call
jecxz
call
clc
sub
js
mov
jo
mov
adc
out
aam
jecxz
cmp
insl
enter
mov
cmpsb
sub
ds
mov
mov
xchg
inc
mov
xchg
sahf
lock
aas
roll
int
cwtl
jb
insb
shrb
dec
gs
add
inc
mov
inc
cmp
xor
dec
call
repz
mov
stos
jnp
mov
sbb
sub
pop
sbb
cmpl
mov
dec
sahf
or
out
cmc
cltd
icebp
aad
div
mov
mov
jbe
mov
jecxz
cmpsl
lods
xchg
mov
or
xchg
es
call
xor
push
stos
test
sbb
cmpb
push
fstps
xor
sbb
cli
xor
sbb
das
lods
arpl
mov
mov
jno
jg
inc
and
push
add
fdivp
ss
push
pop
dec
insl
daa
adc
imul
mov
aas
jle
stc
rolb
fwait
sbb
or
mov
mov
and
orb
idivl
dec
jo
xor
roll
dec
push
mov
dec
push
inc
mov
push
dec
pop
int
sub
lods
or
insl
pop
mov
js
pop
cmp
addl
and
pop
int3
sbb
pushf
sahf
das
inc
iret
sbb
dec
bound
xor
test
jge
fstps
dec
cmp
mov
lret
clc
arpl
add
jae
xchg
roll
mov
fcmovne
test
pop
insl
sbb
fldl
arpl
add
stos
jo
add
xchg
dec
cmp
shlb
enter
sub
icebp
and
xchg
inc
aas
loope
push
inc
movsb
push
lods
cmp
mov
andl
push
or
mov
inc
outsl
cmp
sbb
push
leave
inc
sub
adc
dec
cld
mov
mov
add
lcall
jge
or
test
adc
dec
loope
out
sti
xor
fwait
movl
cmc
xchg
imul
jnp
mov
inc
ret
int3
nop
push
mov
in
pusha
push
mov
fsubs
imul
cmc
inc
add
je
and
pusha
shrb
ret
repnz
lea
aad
jmp
shll
mov
imull
repz
mov
das
or
mov
int3
jns
pop
push
test
mov
test
xchg
aas
orl
dec
addl
divb
stos
adc
outsb
push
dec
jp
mov
inc
in
sarl
lods
lcall
lret
sub
sub
jg
cltd
mov
mov
cmp
and
cmc
or
jns
cmp
out
push
sub
pop
jb
push
jmp
rcrl
leave
inc
nop
lods
mov
or
ret
jmp
add
dec
and
sarl
rcrl
sub
mov
out
push
or
sub
pop
loop
or
mov
orl
stos
adc
data16
xchg
dec
lret
adc
into
lahf
int
sbb
int3
or
inc
mov
sub
mov
cmpb
mov
movsb
add
mov
call
data16
cmc
ret
and
pop
lret
lods
subl
push
ds
sbb
addb
scas
cvtps2pi
push
repz
lods
push
mov
enter
xor
fs
add
pusha
cmp
or
lds
and
in
inc
jnp
pusha
test
adc
in
xor
mov
mov
jne
lret
mov
in
rcr
xor
das
loopne
sbb
add
rcl
sub
dec
xor
xor
mov
xchg
mov
jae
sbb
jnp
jle
mov
adc
adc
add
add
mov
pop
call
mov
and
lahf
mov
addr16
push
lds
pop
mov
in
sbb
xor
lret
pop
call
xlat
mov
xchg
js
inc
pushf
xchg
pop
cwtl
push
mov
sbb
mov
movsb
jno
scas
cwtl
add
jo
lods
fsubrp
dec
cmp
mov
lret
mov
and
cli
push
call
aaa
mov
imul
cltd
testl
mov
test
push
scas
and
pop
outsl
loop
sbb
cmp
ds
out
xchg
std
rcr
and
inc
or
nop
fsubrl
push
scas
sbb
jp
xchg
ss
outsb
popa
or
jmp
mov
add
jge
mov
xchg
xor
shll
push
and
add
mov
add
shrb
pop
shlb
jno
psubd
pop
lcall
sbb
pop
push
adc
js
push
push
bound
xchg
nop
push
sbb
faddl
mov
or
pop
dec
cwtl
pop
push
or
inc
dec
lcall
inc
subb
mov
rcrb
sti
ds
data16
outsl
ret
sahf
xor
mov
in
fisttpl
inc
arpl
jae
rcll
popf
dec
jl
sub
je
mov
inc
pusha
scas
scas
jecxz
std
movsb
stc
movsl
outsl
xchg
or
loop
xchg
icebp
pop
pop
xor
popl
or
pop
ficompl
mov
mov
out
lds
or
mov
xor
or
inc
insl
cmp
lds
inc
fadds
in
adc
flds
std
arpl
cmp
xor
mov
add
popa
xchg
mov
cmp
and
stos
cld
mov
sub
or
pushf
xchg
mov
push
cmp
ret
dec
mov
pop
data16
xchg
adc
fs
cmp
bound
sbb
loope
js
sbb
lods
pop
xchg
mov
pusha
pop
sub
mov
sbb
out
push
xchg
and
sub
pop
xchg
jp
mov
cmp
and
or
xchg
push
rcll
mov
inc
add
inc
and
inc
jae
fisubl
sub
xchg
xorps
sub
imul
sub
lcall
xor
shl
notl
lock
fidivs
jb
xor
lret
and
out
add
xchg
pop
inc
repnz
dec
aas
cmc
stos
jge
arpl
cmp
adcl
pushf
ficoms
popa
cmc
stos
and
jp
push
push
outsl
pusha
lcall
mov
stc
sub
negb
mov
adc
cmp
int3
xor
fldl
repz
call
xchg
xchg
lahf
cmpsb
sub
jl
add
cmp
cmp
mov
pop
lret
xor
mov
cli
pop
in
and
cwtl
aad
fcomps
test
in
dec
sub
mov
in
jmp
or
rcll
adc
imull
and
push
popa
sub
add
mov
jnp
add
sub
inc
jno
mov
xor
pop
dec
sarl
jno
xor
or
js
cmp
mov
adc
mov
xor
cmpb
push
xchg
xchg
fisubl
adc
mov
iret
ja
mov
iret
push
popa
push
push
ja
mov
jns
in
and
test
inc
dec
sbb
or
movsl
mov
inc
push
dec
mov
push
call
jae
leave
jp
cli
and
xchg
aad
lret
out
das
lahf
adc
pop
test
add
fbld
cmp
roll
out
cmpsl
cmpsb
add
hlt
dec
jno
scas
mov
mov
fisubs
add
cltd
push
ljmp
xor
shl
outsb
mov
pop
dec
dec
fisttpll
int
push
rolb
mov
insl
jecxz
or
adc
shlb
mov
daa
adc
xchg
lret
xor
lret
pusha
shlb
cmpsl
dec
cmpsb
pop
inc
aad
lds
pop
je
hlt
enter
xchg
xchg
popa
add
and
test
add
scas
dec
inc
rcrl
inc
fildll
imul
adc
cmp
sub
out
sar
mov
fdivr
lock
aas
mov
ret
bnd
fbstp
dec
adc
mov
mov
mov
sbb
jns
mov
je
pop
or
pop
mov
mov
dec
int3
push
push
in
outsb
push
adc
mov
add
sahf
jecxz
inc
stos
fildll
or
daa
cmp
jmp
enter
lock
and
lods
pop
add
dec
mov
stos
mov
lods
push
xchg
sbb
mov
jne
cmc
pushl
cmp
lds
inc
and
inc
icebp
orl
stos
sub
outsl
xchg
mov
cwtl
push
insl
inc
divb
lock
jo
stc
and
push
sbb
adcl
xchg
movsl
add
sub
xchg
test
loopne
pop
icebp
mov
call
stos
inc
ds
mov
in
mov
imul
dec
lcall
stos
stos
ds
enter
clc
sub
jnp
ss
in
filds
mov
mov
mov
xor
sub
test
mov
ja
cltd
lock
and
fsubs
and
xchg
js
dec
test
mov
xchg
mov
lret
xchg
mov
daa
sbb
mov
lods
lods
stc
cmp
int
daa
adcb
xchg
hlt
fisubrs
arpl
sub
inc
mov
stc
add
sub
incb
push
dec
lcall
sbb
addb
xchg
xchg
sti
pop
jno
mov
aas
add
xchg
std
jg
adc
xchg
jnp
xchg
mov
dec
pop
fcompl
xchg
dec
add
lahf
push
push
xchg
repnz
inc
mov
push
movsl
push
ja
dec
mov
loope
and
mov
xchg
int3
andb
jbe
jp
shll
lret
hlt
push
mov
out
jmp
dec
shll
gs
repnz
fisubs
cmp
int
out
jno
push
xor
push
sub
stos
push
test
push
jle
jnp
pushf
in
test
push
into
dec
pop
mov
ja
pop
or
rclb
pop
fdivs
mov
das
pop
pop
rolb
sbb
mov
addl
mov
push
fs
vunpcklps
data16
dec
mov
or
push
jno
sbb
in
push
pop
and
mov
outsb
sti
mov
jge
push
stos
xchg
stos
sub
or
cmp
dec
int
and
xchg
fcmovnbe
jg
pop
sub
cmc
lock
lea
pop
jo
pop
sub
sbb
or
movsl
pop
push
sub
inc
push
inc
daa
or
repz
inc
adcb
fs
aas
popl
cwtl
cmp
movsb
inc
adcl
ret
pop
cwtl
mov
sub
mov
and
jecxz
mov
adc
or
imul
loope
stc
mov
or
add
fcoms
stos
mov
cltd
in
mov
cs
inc
test
aam
loopne
push
hlt
in
negw
and
mov
jo
outsb
and
mov
pop
mov
jb
xor
sub
and
add
xor
mov
push
cmc
xlat
mov
es
push
inc
rorb
jp
pop
test
lods
sar
xchg
and
loope
insb
popa
sub
in
repnz
pop
mov
scas
and
jnp
push
adc
ret
loop
jnp
scas
mov
ja
mov
add
lods
xor
aam
jbe
leave
push
xchg
rolb
aad
test
pusha
sti
mov
fists
xchg
inc
outsb
push
movsl
mov
mov
pop
jnp
and
mov
or
insb
fs
pushf
aad
dec
sbb
fsubrs
fildl
mov
sbb
mov
cmp
cmp
in
repz
and
mov
inc
or
movsl
out
push
pop
mov
es
std
pop
nop
aas
sarb
aam
dec
mov
test
mov
mov
mov
adc
push
inc
dec
ds
ljmp
loop
jl
sbb
mov
imul
sub
sbb
sbb
xchg
sbb
je
inc
shl
mov
stc
mov
pop
sti
insl
add
adc
xor
mov
enter
lods
xchg
jp
add
pusha
stos
ds
mov
mov
scas
shl
push
mov
rep
or
cltd
mov
popf
mov
sub
mov
cmp
and
insb
rcrl
int
and
sbb
ja
stos
and
xor
xchg
popf
add
arpl
dec
lds
mov
push
jg
sbb
ret
scas
sarb
dec
xchg
stos
mov
outsl
sbbl
mov
mov
mov
jo
cmp
push
fsubl
call
sbb
or
or
mov
pop
cmc
xchg
fisubs
mov
sbb
mov
cmp
and
pop
bound
xchg
in
mov
jb
call
inc
dec
ja
push
fcomps
cli
add
jp
jg
xor
sub
or
mov
sub
fdiv
and
lds
sbb
bound
cmp
xchg
flds
mov
arpl
ja
subb
xor
inc
inc
into
test
adc
ja
inc
dec
stos
sbb
inc
in
out
mov
inc
jb
mov
push
sub
lret
movsl
push
ljmp
aam
xchg
push
int3
sub
xchg
mov
xchg
or
ret
inc
dec
addr16
mov
xor
pop
or
in
ljmp
sbb
or
fisubrl
and
clc
js
ret
mov
imul
jle
pop
cmp
or
push
stos
daa
ljmp
popl
push
pop
mov
test
or
mov
jne
inc
insb
int3
test
inc
inc
xor
popf
mov
sub
sbb
push
push
arpl
push
enter
andb
jp
adc
and
push
repz
add
or
mov
adc
adc
dec
and
adcl
sub
fnstcw
xor
repz
xor
adcb
xlat
sub
push
inc
sbb
jge
adc
xchg
daa
aad
mov
jne
stc
aam
mov
incb
gs
loopne
xchg
insb
filds
xchg
or
sbb
jecxz
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
.byte
dec
das
pop
sub
mov
in
jmp
clc
lods
stos
adc
sub
jecxz
mov
xor
movsb
mov
inc
adc
cmpsl
fstpl
mov
fdivl
ljmp
jno
cmpsl
out
dec
adc
and
lahf
sub
mov
es
push
ret
pop
imul
inc
and
push
jae
popa
aam
jmp
scas
cmpsb
mov
sub
sbb
lds
jne
divb
in
sbb
push
in
stc
add
mov
aad
sbbb
cmp
jne
push
inc
pusha
mov
addr16
mov
popf
push
sub
push
shrl
or
popa
movsl
pop
out
test
add
loope
dec
mov
enter
jne
cmpsb
lods
adc
cwtl
jmp
jp
faddp
cwtl
or
mov
adc
push
mov
or
scas
jne
outsl
add
push
dec
fs
dec
fldcw
jns
pop
sbb
scas
lods
pop
add
sbb
pop
mov
mov
mov
mov
test
es
pop
mov
xchg
push
sbb
and
aaa
cmp
pop
outsl
clc
mov
mull
mov
xor
std
pop
mov
insl
in
mov
cmp
xchg
inc
js
nop
outsl
mov
in
dec
sub
pop
pop
push
stos
cmp
stos
scas
fmull
orl
mov
cmp
cwtl
lret
lock
in
jl
mov
out
pushf
dec
mov
loop
nop
sbb
and
bound
push
add
mov
xor
mov
xchg
test
popa
gs
lea
movsl
pop
into
xlat
mov
out
loopne
adc
or
fcmovnb
and
int
add
repz
cs
hlt
fnstcw
aad
inc
inc
ljmp
jbe
enter
mov
push
inc
addr16
inc
push
pop
div
outsb
adc
int3
js
outsl
cltd
mov
push
call
push
mov
clc
push
sti
jb
cmpsb
ja
xchg
sub
push
das
mov
xchg
adc
es
cmpsb
lock
popa
ja
repnz
fsubp
sub
cmp
flds
add
mov
dec
sbb
pop
cli
fs
outsl
ret
xchg
popa
das
jno
xchg
in
insl
xchg
test
test
mov
xor
pop
popf
insl
xor
add
jle
mov
out
cmp
test
push
addl
fidivrs
imul
loop
jecxz
dec
dec
mov
lcall
xchg
subl
add
dec
adc
repnz
push
test
cmp
cmc
lahf
adc
outsb
jns
js
adc
aaa
mov
or
add
lods
dec
mov
lret
add
xchg
cmp
xchg
push
lcall
xchg
cmc
aam
dec
cmp
enter
mov
mov
mov
in
push
or
test
inc
sub
add
mov
inc
rcr
push
sbb
push
fadds
lods
add
mov
enter
fsubr
push
mov
rol
popf
lcall
xchg
pop
xchg
fdivrs
repnz
sub
in
jne
ja
hlt
mov
push
loope
push
lret
les
ret
xchg
cli
pusha
or
and
popf
adc
wbinvd
mov
or
sarl
sarl
mov
imul
mov
bound
push
pop
mov
movsb
pop
arpl
cmp
dec
add
xor
rcr
lret
pop
pop
sub
dec
sub
xor
ret
out
add
jmp
cmpsl
enter
mov
mov
ret
sbb
push
ret
lods
icebp
and
icebp
stos
sar
or
push
pop
ja
iret
jo
dec
jle
leave
adc
jne
xor
aas
cs
sahf
cmp
daa
call
xchg
out
aad
insb
inc
dec
sub
mov
sbb
pop
dec
xchg
jge
sbb
into
add
testl
mov
xchg
push
sbb
stos
enter
hlt
inc
cmp
mov
mov
xor
js
or
mov
icebp
xor
out
adc
iret
xor
pop
arpl
pushf
mov
push
push
sub
jmp
mov
or
popa
sbbb
test
addr16
subl
mov
pop
lock
and
mov
std
daa
fdivrs
gs
clc
and
fisubrs
pop
inc
mov
rolb
mov
mov
add
int
maskmovq
divl
fwait
sti
and
inc
sub
lods
mov
subb
add
gs
xlat
in
pop
leave
fwait
mov
push
gs
or
leave
cmpb
mov
sub
jl
xchg
cmp
mov
xchg
adc
lret
mov
test
jnp
cmpsb
das
xor
xlat
lea
aas
add
mov
fs
hlt
cmpsb
push
ficompl
inc
jbe
mov
jbe
mov
and
dec
shrb
arpl
icebp
pop
loopne
sbb
cmp
sub
ljmp
aam
shll
testb
aam
inc
adcb
outsl
mov
ret
xchg
mov
popaw
out
fisubl
jae
pop
ss
outsl
int
xlat
sbb
jns
inc
cld
fwait
lods
shll
lcall
jmp
xchg
ja
xchg
add
gs
jmp
inc
outsl
mov
push
lock
push
jno
xchg
or
inc
pop
icebp
jo
mov
aaa
add
or
pop
sbb
push
ds
sbb
adc
pop
fstl
and
jle
addr16
ret
mov
jp
lds
adc
out
sahf
mov
sahf
pusha
xor
jo
cs
inc
addb
sbb
mov
push
xlat
dec
jbe
clc
xlat
add
aas
cltd
jnp
mov
sbb
ret
dec
std
mov
and
ret
outsl
cmp
push
xor
sahf
adc
cwtl
pop
mov
dec
cmpsl
hlt
or
mov
mov
dec
xor
dec
inc
shlb
pop
in
push
stos
jno
ficoms
stos
and
fsts
pop
and
cmp
push
movsl
adc
cmpl
jae
scas
out
movsb
aam
dec
lea
adc
add
dec
sub
jle
test
dec
arpl
stos
stos
pusha
xlat
pop
xchg
inc
jb
idivb
stos
xor
in
jl
pop
jns
xor
inc
dec
popf
es
fstpl
mov
inc
inc
jg
fnstcw
adc
hlt
cmp
mov
push
call
jl
mov
lods
pop
pop
push
iret
lret
or
lods
add
inc
lea
mov
out
mov
icebp
aad
es
or
popa
imul
pop
mov
test
adc
mov
xchg
inc
in
xchg
jae
mov
add
mov
sbb
cmc
mov
jmp
xchg
jno
lahf
enter
pop
xor
cmp
fdivr
dec
mov
rolb
sub
mov
mov
scas
adc
jbe
sbb
std
inc
sub
testl
sti
into
adc
daa
int3
imul
ja
inc
xchg
int3
jb
xlat
sub
clc
ret
jns
or
sub
xchg
xchg
bound
and
sbb
inc
add
sarl
inc
fnstsw
xchg
and
cmpsl
jp
dec
jne
mov
out
std
and
loopne
leave
outsb
sbb
adc
popf
mov
or
push
xchg
and
adc
sar
idivl
icebp
mov
out
push
or
icebp
popf
xchg
dec
jecxz
pop
sbb
aaa
jo
mov
cmp
xor
adc
sbbl
jmp
popa
fiadds
jg
cmp
jns
xorl
lcall
stos
jo
push
movsb
sbb
or
cltd
mov
mov
push
rorb
push
jns
adc
xchg
pop
cmp
inc
les
iret
pop
out
mov
loop
loope
mov
push
mov
lds
or
mov
cltd
fmull
test
scas
add
insl
xor
push
ret
je
dec
add
inc
out
lock
cmp
sti
shrb
ss
xchg
lret
mov
aaa
sub
movsb
mov
mov
hlt
iret
dec
inc
and
jge
pushw
mov
jae
mov
jmp
into
push
lret
orl
shll
lea
orb
pop
sbb
mov
jl
mov
scas
je
js
pop
call
fadd
roll
add
cmpsl
jmp
dec
xchg
cmp
mov
sub
loopne
adc
dec
pop
fsubl
inc
int3
inc
adc
sub
sub
icebp
test
mov
nop
dec
scas
pushf
mov
mov
rol
xchg
js
jae
mov
std
loope
in
out
lret
mov
sbb
xlat
mov
test
out
or
subl
mov
mov
dec
mov
add
pop
ret
sbb
mov
outsl
mov
out
pop
inc
sbb
lcall
mov
xchg
fsubrl
leave
nop
jle
movsl
mov
int
pusha
xchg
sub
mov
inc
test
mov
aas
push
xchg
stos
mov
or
shlb
pop
inc
cs
lret
cmpsl
insb
adc
dec
dec
cmpsb
call
pusha
jg
aam
icebp
jae
bound
xchg
mov
pop
push
ljmp
ret
adc
ljmp
sar
arpl
daa
and
out
out
sub
push
and
lahf
cmp
enter
dec
and
push
and
in
sbb
inc
mov
mov
ljmp
mov
xchg
test
imul
sti
into
mov
fs
cmp
push
shlb
mov
imul
arpl
cmp
ret
in
mov
add
repz
and
fistpl
dec
rorl
lret
cmp
bound
fistpll
fwait
test
mov
cmp
dec
sbb
mov
aas
test
ret
lea
fiaddl
mov
je
insb
push
add
int3
stos
mov
ret
jge
aaa
pushf
mov
les
cmp
xchg
push
dec
xchg
out
test
aaa
and
sub
inc
repnz
mov
dec
sub
les
pop
adc
loopne
and
mov
sub
xchg
add
ret
push
push
popf
int
mov
push
sbb
mov
xchg
xchg
cmp
jge,pt
dec
xor
imul
sbb
aad
aas
and
lret
xor
push
pop
das
jo
jle
leave
les
jnp
push
jns
call
popa
push
ds
nop
mov
pushf
jmp
or
les
fwait
in
adc
lock
dec
adc
jle
mov
and
adc
mov
xlat
mov
pop
adcb
loop
add
push
roll
out
mov
in
push
dec
and
dec
mov
loop
push
sub
pusha
popa
dec
cmpsb
ljmp
mov
or
gs
lods
jnp
mov
loope
das
cmpb
roll
and
add
stos
icebp
scas
xor
int3
mov
rcrl
es
mov
testl
xchg
into
lock
push
mov
clc
xchg
pop
mov
mov
cmp
inc
xchg
sbb
clc
pop
call
fisubl
inc
mov
adc
push
pop
push
jecxz
icebp
mov
cmp
in
mov
repnz
push
sbb
mov
aaa
jo
jle
pop
cmc
xchg
in
pop
repnz
popa
aam
stos
cmp
fsts
cltd
lea
in
in
lods
pusha
adc
mov
sbb
sahf
xor
test
jmp
ret
iret
or
decb
movsb
and
inc
and
jno
cmp
mov
call
rcrb
mov
mov
and
frstor
sub
stos
mov
pop
lret
mov
fimuls
mov
mov
sbb
or
lods
sub
into
and
leave
adc
pop
and
mov
adc
lock
xor
xchg
data16
or
mov
and
pop
mov
pop
jo
ja
pop
and
sbb
push
rol
adcb
lss
jae
pop
cmp
out
adc
pop
addr16
pop
lods
test
push
into
mov
lock
mov
mov
mov
out
pop
clc
cmp
mov
xor
lds
mov
fs
ror
mov
mov
pop
mov
cmp
push
xor
push
lods
or
cmp
pop
or
test
add
adc
mov
lock
pop
lret
sarl
jne
cld
and
iret
jne
js
test
aam
cmp
jbe
das
xlat
push
cmp
test
push
cmp
andb
stos
pop
je
lods
int3
adc
daa
adcb
xor
pop
loope
sbb
add
mov
jle
ret
cmp
adc
les
stos
dec
sahf
mov
cltd
cmp
les
dec
iret
icebp
mov
imul
movsb
loopne
sub
lret
xor
cwtl
imul
fdivl
popa
pop
mov
enter
cmp
mov
lahf
test
jb
xor
lods
jbe
jl
mov
xchg
dec
mov
incb
gs
in
push
out
mov
subl
scas
pop
fimull
bnd
das
rcrb
xor
push
aam
adcl
fstpl
enter
push
lods
outsb
sbb
xor
test
jae
insl
push
lods
sub
mov
xor
lea
cwtl
lahf
inc
sub
insl
das
xchg
iret
outsb
mov
pop
mov
stos
and
scas
sti
adc
or
or
xor
test
iret
rcl
add
mov
mov
fisubrl
xchg
int3
jbe
aaa
add
adc
push
pop
mov
adc
add
das
push
sbb
bnd
sbb
jl
pop
sub
sarl
sub
adc
jl
movsb
xchg
jbe
cmc
ss
adc
inc
push
mov
imul
idivb
in
cmpsl
adc
faddl
push
cltd
mov
sbb
pushf
sbb
sar
movsl
mov
xchg
pop
sbb
out
lcall
ljmpw
cmc
sub
pop
push
nop
hlt
inc
or
push
mov
sbb
out
dec
rorl
cld
aad
or
mov
pshufw
inc
push
jae
stos
mov
push
push
lods
mov
in
ds
fsubrs
ss
xchg
stos
pop
lret
mov
add
repz
iret
enter
add
popf
dec
call
out
clc
arpl
and
lds
xchg
ret
loopne
sbb
pop
test
inc
pop
cmp
movl
mov
cmp
lret
sbb
call
leave
into
sbb
xchg
jbe
rclb
mov
jne
pop
xor
test
cwtl
sar
or
fildll
in
dec
cmp
mov
adc
adc
add
lcall
loop
cmp
rcrl
loopne
mov
clc
cmp
addr16
mov
leave
stos
jae
aam
hlt
push
pop
mov
push
hlt
cmpb
test
lahf
sub
imul
repz
adc
fisttps
jmp
pop
dec
ja
stc
pop
inc
arpl
mov
repnz
or
shrb
adc
push
daa
jb
xchg
bound
or
cltd
add
fsubrl
shll
into
ret
daa
je
pop
les
nop
mov
pushf
cmp
shll
rorb
mov
or
mov
xchg
mov
insb
ja
mov
imul
dec
lock
push
adc
ss
dec
pop
in
je
inc
cwtl
xchg
push
pop
pop
push
xchg
push
icebp
movsb
sarl
and
jo
or
shl
orl
push
adc
dec
xchg
jns
dec
lock
pop
dec
jne
negb
jno
rclb
inc
mov
shll
pop
popf
dec
sub
es
add
sub
push
xchg
pop
aaa
mov
mov
fadds
pop
xor
adc
nop
xor
das
call
sbb
inc
fs
stc
inc
leave
aad
cmc
lcall
xchg
leave
cmp
cmp
push
inc
adc
jno
and
pop
push
int3
cmp
daa
popa
fs
subl
mov
mov
sub
add
jge
ljmp
sub
mov
jle
mov
sbb
fs
not
iret
aam
sbb
inc
xor
pop
fdivl
test
xor
test
push
lea
cmp
lcall
pop
jp
int
xchg
scas
fcmovnbe
nop
mov
mov
inc
mov
pop
inc
push
clc
imul
je
bound
sub
ja
popf
roll
jmp
sub
xchg
push
push
cmp
add
adc
inc
jns
cmp
cmp
inc
jle
add
pop
shlb
push
fcmovb
jmp
sar
xor
int
out
jns
mov
or
ret
cmpsl
mov
out
movsb
inc
outsb
movl
push
cmpsb
pop
vinserti128
lret
fincstp
mov
xchg
popa
dec
cmp
idivl
mov
xchg
fcompl
jle
add
and
and
clc
add
push
and
ds
bound
mov
adc
fildl
loope
pop
mov
das
loope
jno
adc
out
cli
test
or
or
pop
push
push
pushf
push
into
cltd
insl
sub
jecxz
cli
adc
inc
lock
and
mov
cli
daa
dec
and
arpl
sub
mov
inc
imul
bound
imul
jns
dec
test
aas
mov
aaa
xchg
inc
fbld
pop
out
or
das
repnz
push
and
adc
pop
mov
or
dec
sub
mov
js
fcmovb
dec
stos
loop
or
cmc
mov
inc
add
or
data16
sub
outsl
int3
push
data16
sbb
cld
sbb
or
pop
or
dec
aam
std
jb
and
pusha
mov
sub
pop
stos
fisubrl
sub
dec
adc
jo
mov
dec
mov
mov
call
ss
aas
loopne
sub
dec
insb
je
mov
mov
int3
insl
mov
int3
dec
xchg
mov
cmp
psubsb
in
jmp
js
cld
jb
lahf
mov
jne
or
jp
pusha
dec
cmpsl
addb
pop
and
jle
jbe
mov
paddw
xchg
lret
dec
ds
or
cmp
scas
add
ror
lcall
dec
movsb
adc
dec
js
lsl
inc
mov
adc
icebp
mov
jno
and
out
push
xchg
lret
ja
in
hlt
je
push
mov
inc
push
cmp
jnp
mov
pop
je
pop
ljmp
cmp
mov
mov
icebp
mov
xor
jmp
push
sbb
sbb
xor
negb
jb
jp
movd
sbb
fiaddl
stc
cli
push
lods
cmpsb
mov
mov
jmp
fisttpl
sub
test
shlb
out
stc
cwtl
mov
dec
cmp
add
xchg
loopne
imul
adc
xchg
lods
cmp
shl
into
test
fmul
mov
inc
scas
testl
jne
stos
pop
cmp
movsb
adc
pop
pop
mov
gs
jae
push
shr
cmp
bound
cmp
mov
add
in
in
aas
rclb
jno
in
js
test
fiaddl
cmp
fsubrl
inc
repz
inc
mov
addr16
rorb
in
adc
bound
pop
pop
mov
jl
mov
popf
iret
push
pop
adc
mov
pop
bnd
jp
scas
shl
pop
or
push
or
call
add
jle
sar
pop
cwtl
sub
mov
pop
call
repz
scas
vorps
repnz
push
mov
jecxz
in
xchg
pop
leave
enter
cmc
rolb
mov
mov
fisubrl
xchg
push
push
inc
shrb
test
cltd
fs
out
mov
loopne
mov
sbb
popf
fwait
adc
pusha
xchg
insb
outsb
mov
lret
mov
out
push
stos
out
mov
jnp
lods
inc
movsl
jp
sarl
sbb
jne
mov
dec
add
add
fldenv
jbe
js
xor
inc
popf
jg
sbb
pop
dec
mov
mov
ljmp
xchg
out
popf
push
in
ss
and
inc
sbb
ficomps
lods
pop
pop
mov
xor
pop
mov
sti
push
out
push
andl
scas
xor
jnp
mov
clc
xchg
and
aam
int3
dec
std
movsb
push
xor
and
sbb
add
cmpb
push
scas
or
stos
leave
lcall
lret
pop
and
adc
push
int3
mov
adc
cmc
cmp
bound
outsb
out
adc
or
cmpsl
push
bound
shll
jo
and
jae
mov
mov
mov
mov
mov
dec
jge
adc
pusha
shlb
push
outsl
xchg
and
insb
mov
jge
or
mov
addr16
fcos
mov
xor
push
mov
sbb
loopne
ror
or
sti
and
pop
out
or
fidivrl
dec
or
call
jge
sbb
testb
push
test
je
daa
cmpsl
sbbb
mov
insl
clc
lea
pop
fisubs
xlat
dec
inc
sti
mov
xor
xor
and
push
in
je
pop
jae
lea
adc
out
js
outsl
xor
mov
xchg
mov
fldenv
xchg
pop
mov
hlt
mov
in
dec
jmp
sbb
jnp
or
cmpsb
pop
ficompl
xchg
pop
daa
into
mov
out
fwait
icebp
mov
ret
addl
mov
mov
insl
and
cltd
cmpsl
test
pop
sar
out
int3
lds
test
mov
cs
lea
push
rorl
pop
or
repz
fcmovnb
call
lds
fdivs
sub
push
aam
mov
or
fldenv
sub
push
je
dec
push
sbb
push
imul
sti
inc
test
cli
out
ret
lea
mov
in
cld
sub
fdivs
or
mov
subl
outsl
lds
dec
into
fisubrl
jecxz
lea
gs
fucomp
stos
mov
int
pop
mov
hlt
test
sub
fldenv
ss
sahf
inc
test
daa
out
adc
cmpsl
xchg
call
cmp
mov
or
fldenv
mov
or
xchg
or
clc
std
dec
ss
nop
mul
mov
sbb
mov
xchg
jmp
jnp
out
and
push
data16
int
add
es
add
xor
test
ljmp
lahf
insb
jp
adc
andb
push
pop
cmp
gs
movsl
mov
cmp
add
out
mov
push
inc
mov
aaa
dec
cmpsb
inc
jle
cmp
mov
push
leave
jb
or
mov
loope
dec
pushf
inc
in
jne
cmp
mov
and
xor
cmp
ret
lahf
xor
cmpsl
xor
rclb
pop
fisttps
aad
mov
scas
pushf
mov
xchg
in
test
xor
ss
sub
cmpsb
mov
fidivs
mov
push
sbb
cmp
adc
mov
hlt
xchg
push
or
dec
adc
js
addr16
mov
ror
ljmp
dec
mov
inc
cmp
jle
sub
mov
ss
sub
cmpsb
add
sbb
scas
cmp
mov
sbbl
loope
cli
mov
add
jmp
lock
fadds
out
orb
jl
add
imull
dec
sahf
push
cmp
inc
fwait
ljmp
rolb
int
push
aam
ljmp
enter
or
insb
mov
pop
aas
out
bound
pop
add
mov
clc
lcall
dec
arpl
and
movsb
lds
repnz
fdivr
and
jg
sti
cld
cmp
inc
mov
jle
std
adc
xchg
jecxz
dec
xchg
out
movsl
jecxz
inc
lcall
adc
orl
cmp
mov
mov
push
dec
sbb
xchg
mov
xchg
inc
int
das
cmp
adc
add
imul
rolb
loope
cs
lahf
sar
clc
jnp
mov
cmp
out
lods
test
cmp
ret
imul
adc
mov
call
popa
imull
fstps
xchg
out
and
dec
fsts
dec
ljmp
rep
add
pop
jnp
sbb
jp
insb
test
jno
inc
push
rcrb
dec
or
ss
imul
es
fs
mov
out
adc
mov
cmpsb
ficoms
adcb
popf
lods
test
push
stos
cld
sbbl
cmpsl
ret
cmpsb
repnz
mov
clc
test
stos
mov
inc
xor
out
hlt
bswap
aad
fucomp
cmp
pop
mov
test
ffree
mov
add
stos
mov
dec
pop
push
jecxz
repz
add
xchg
or
and
push
push
push
sub
xor
imul
mov
xchg
shl
loopne
stc
pop
dec
push
testb
push
sub
inc
out
jnp
inc
pop
mov
addr16
sbb
aad
xchg
or
or
sahf
int3
sub
loope
pop
mov
arpl
xchg
jb
sbb
nop
lret
add
jns
mov
adc
ret
add
loop
mov
je
add
jle
in
outsb
adc
scas
pop
ret
out
fisttps
testl
xor
sub
std
cmp
adc
aam
fsubrs
fs
add
dec
jo
testb
mov
sub
sti
sub
out
fistl
loopne
cs
add
outsb
in
iret
scas
hlt
les
cli
jecxz
xor
adc
jnp
xor
push
dec
es
cmc
js
push
ret
cltd
xor
mov
cwtl
pop
andl
pop
mov
into
inc
popa
xor
leave
cmp
ret
push
fwait
loopne
adc
mov
ret
add
xor
popa
dec
lods
sub
mov
dec
stos
xchg
mov
decb
pop
maskmovq
xchg
xchg
xor
push
jae
xchg
push
xor
aam
aam
cmp
or
std
rcll
rcll
dec
aad
sbb
xor
and
lret
sub
ret
sub
rcl
push
out
or
int
in
pushf
sbb
add
inc
rcrl
leave
adc
int3
insb
cmpsl
mov
xchg
sub
and
xchg
fs
mov
sub
arpl
sbb
outsl
arpl
xor
pop
jne
push
ljmp
cld
push
fcompl
movsb
add
sub
fnstcw
leave
int3
push
jge
rcr
into
outsl
xchg
ja
enter
es
add
xor
mov
test
push
sarl
and
js
inc
ret
mov
repz
adc
jmp
dec
mov
jle
jae
outsl
pop
aad
lret
inc
lcall
jnp
cmp
jmp
outsb
test
cwtl
out
mov
pop
mov
mov
clc
pop
or
shrl
pop
lods
pusha
mov
call
mov
and
hlt
loop
dec
clc
cmp
loop
ja
loopne
xor
jb
push
xor
push
mov
and
or
ret
shrb
movl
push
mov
and
add
scas
push
add
addb
test
or
lcall
stc
jge
stos
xchg
enter
into
scas
pop
push
or
and
xor
jle
or
hlt
fnstsw
jle
pop
or
ror
or
sarl
fisubl
mov
or
movb
or
movsl
into
mov
inc
xchg
cmpb
jb
sub
jbe
scas
sahf
adc
outsl
into
aas
inc
xchg
iret
in
loop
mov
mov
mov
lcall
adc
mov
sarl
inc
in
sbb
sbb
mov
or
xor
jns
or
fs
mov
xor
aam
dec
jmp
ja,pt
js
insl
mov
pusha
push
filds
adc
add
lods
xor
in
push
in
lock
and
xor
add
or
xchg
cmp
out
and
fsubl
testl
sbbl
inc
inc
sahf
stos
pop
rorb
movsl
pop
push
or
mov
add
push
loop
adc
pop
outsl
bound
cmp
subl
fwait
xchg
addr16
inc
fs
sbb
fimull
in
inc
mov
push
out
or
insb
repz
nop
sub
mov
decb
jbe
ss
mov
test
xlat
out
test
fsub
sbb
push
pop
push
lods
out
push
lcall
or
adc
jno
jecxz
push
push
dec
adc
pop
js
push
rcrl
add
pop
or
mov
sbb
xor
cmp
jg
and
decb
fs
jae
mov
mov
adc
iret
sbb
sbb
fwait
adc
sbb
mov
sti
and
xlat
inc
imul
xchg
dec
xlat
xchg
inc
addr16
test
xor
imul
mov
pop
mov
add
or
mov
pushf
popl
in
dec
sbb
xor
xor
ja
outsb
and
dec
addr16
xchg
and
shrb
inc
push
jmp
adc
cmpsl
fsubl
jmp
xchg
mov
pop
inc
push
or
or
into
or
imul
movsl
test
jg
movsb
shlb
stos
out
push
gs
cltd
mov
push
inc
xchg
flds
cmp
sub
dec
fsubrp
shrb
gs
cmpsb
imul
jb
sub
inc
push
es
sar
ret
push
mov
imul
je
hlt
incb
les
ds
scas
lcall
inc
jne
cmp
mov
js
loopne
je
sbb
int
call
jb
lock
aas
insl
dec
or
mov
sbb
cltd
or
xor
pop
in
stc
shll
fucomp
ret
lcall
mov
dec
out
xchg
fbstp
adc
inc
insb
add
mov
xchg
push
cmp
jnp
movb
dec
push
xchg
jo
mov
push
clc
fadds
lods
leave
adc
xchg
mov
push
cmp
imul
and
xchg
out
mov
jp
mov
orl
jecxz
mov
test
and
ds
sub
idivb
punpckhbw
xlat
fwait
sbb
fidivs
int
and
xchg
or
mov
rclb
in
dec
jo
and
inc
xorl
pop
mov
xorl
insb
pop
and
ret
xchg
in
popf
xor
push
hlt
outsb
jnp
pop
add
cltd
and
mov
lcall
or
mov
mov
stos
jl
imul
fnstenv
mov
ss
lret
inc
xchg
dec
cmp
jecxz
and
outsl
vunpckhps
cli
sbb
push
sti
jns
test
fldcw
jns
dec
jmp
dec
cmp
dec
das
pushf
add
push
pusha
rcll
movsb
push
jmp
xchg
fsubl
out
es
mov
rcl
add
xor
dec
out
xor
stos
sbb
loop
orb
pop
mov
jmp
pop
test
ss
test
jmp
fsts
aas
mov
js
lods
pop
cli
cmp
leave
push
les
dec
cltd
mov
iret
adc
jp
xor
mov
and
push
insb
xlat
stos
xchg
in
sbb
pop
sub
hlt
les
pop
xor
aaa
mov
lretw
inc
push
rcrb
inc
add
loope
outsb
cmpsl
mov
out
popf
std
int
and
clc
sbbl
outsl
jb
inc
and
rolb
out
pop
pop
in
jp
in
shl
js
mov
jmp
mov
stc
cmpsl
out
mov
cmp
sbb
mov
fdivl
out
das
mov
lahf
outsb
xchg
loop
lds
repz
js
pop
aaa
sbb
fidivs
les
sbb
sbb
sahf
or
cmp
insl
push
dec
jbe
lea
imul
js
xchg
dec
outsl
inc
pop
sbb
aad
inc
or
jne
mov
sub
cltd
sti
out
cmp
jb
in
inc
push
inc
mov
das
inc
rorl
dec
pop
mov
leave
testb
aad
aad
xor
enter
mov
shl
xor
rcrl
out
lret
or
or
push
lcall
lahf
pop
mov
nop
in
pushf
out
and
lock
mov
sub
jae
xorb
push
adc
daa
lret
fdivrl
adc
xlat
push
cmpsb
cmc
lret
cmp
shrl
dec
repnz
or
repnz
das
orb
mov
sub
mov
xor
mov
mov
mov
addr16
mov
dec
and
filds
jg
mov
out
nop
stc
sub
data16
sti
lret
sbb
pop
pop
fcmove
pushf
mov
and
out
mov
mov
js
outsl
sub
adc
push
int
int3
mov
dec
xor
icebp
neg
mov
shlb
mov
pop
leave
cmpsb
mov
jg
push
test
inc
mov
ror
repz
jbe
out
dec
test
lahf
lods
inc
add
pop
sbb
xor
rclb
push
cmp
out
jl
into
xchg
sub
fcomp
shl
sbb
and
fdivr
sub
imul
push
fnsave
lea
sbb
in
mull
in
ret
out
add
aas
rclb
mov
adc
mov
pop
aad
jo
dec
pushf
test
mov
jg
outsl
or
int
fcoml
or
cmpsb
nop
add
jl
push
jo
mov
arpl
cmp
inc
sub
mov
cmpsl
lock
fildll
dec
pop
xor
outsl
mov
sbb
push
jbe
in
pop
xor
stc
jne
mov
hlt
clc
aam
sbb
cwtl
jecxz
sbb
sbb
ret
sub
test
xor
lahf
mov
sbb
mov
pop
cli
loop
inc
and
cmp
test
pop
xor
aas
mov
scas
pop
jne
popf
in
call
sbb
add
rorb
xor
mov
lds
sbb
sbbl
mov
es
push
push
dec
dec
stc
jp
leave
aaa
aas
mov
adc
or
cs
dec
push
mov
push
in
xchg
pop
mov
adc
dec
movsl
arpl
and
mov
ds
lcall
nop
call
sar
gs
mov
fwait
mov
mov
xchg
mov
mov
enter
cli
inc
jecxz
lods
cmp
js
mov
ja
sti
pop
sbb
ja
sbb
stos
popa
neg
pop
mov
or
xor
stos
ret
lds
ret
mov
je
rclb
push
mov
je
out
mov
mov
cmp
xchg
pop
jns
sub
jge
sahf
test
jo
dec
dec
inc
and
inc
xchg
loopne
jp
pop
popf
xchg
xchg
and
stos
enter
imul
mov
jmp
xor
inc
cmp
push
filds
shlb
add
inc
xchg
lar
sbb
test
gs
jno
add
and
xlat
inc
push
popl
and
push
bound
daa
mov
xchg
cwtl
inc
cmp
jne
repnz
or
setb
jbe
dec
jb
pop
add
xchg
jns
mov
jb
dec
sti
stc
sbb
leave
ficompl
enter
fnstsw
jbe
adc
orb
mov
cmp
or
add
xchg
sti
inc
pop
adc
dec
popf
mov
push
push
xor
add
decb
xor
dec
cmp
add
lods
jnp
movsl
adc
mov
lods
sub
stos
jge
sbb
push
or
and
int3
xor
icebp
xor
sbb
shrb
insl
pop
dec
test
xchg
pop
push
ja
cwtl
lock
mov
lock
hlt
jge
jle
dec
popa
mov
rcr
mov
cmp
scas
mov
push
jmp
adc
push
mov
ljmp
dec
push
cmp
pop
xor
adc
sub
or
push
cmp
jmp
mov
sbb
or
stos
sbb
popf
sub
std
insb
idiv
loop
mov
rolb
aaa
cmp
push
in
pop
pop
and
adc
mov
xchg
jnp
clc
popa
pop
test
add
inc
xor
insl
insl
add
ljmp
adc
ljmp
lret
cli
mov
sbb
xor
movsb
add
push
mov
jp
sbb
out
and
push
ret
ret
jnp
out
dec
popa
mov
out
clc
es
mov
rcrl
pop
add
adc
clc
and
in
sbb
lret
push
adc
pop
dec
dec
pusha
xchg
stc
lret
dec
in
cmpsl
inc
sub
xchg
mov
mov
sub
add
inc
lods
rclb
sti
daa
clc
repnz
inc
out
addl
mov
jg
test
test
add
outsb
and
sti
ret
lahf
outsb
scas
and
lret
xor
arpl
test
xchg
xchg
sbb
adcb
sub
sbb
cmp
mov
mov
adcb
rolb
pop
cmpsb
jo
shl
repnz
loopne
iret
lock
cld
xor
pushf
jb
int3
cmpsb
sbb
in
call
lock
push
shlb
loopne
test
xor
dec
jns
loope
dec
jg
inc
int3
xor
sub
fnsave
jle
in
jecxz
adc
inc
scas
es
xor
jge
iret
dec
das
mov
imul
sub
sub
mov
mov
jbe
insl
mov
imul
inc
mov
inc
push
cmpb
rcr
cmpsl
sbb
and
sar
imul
outsl
sarb
dec
lahf
add
push
cli
sbb
aas
add
add
subl
imul
inc
cwtl
or
ss
popa
cmpsb
cmp
cmp
mov
mov
push
sbb
inc
test
icebp
pop
je
leave
fnstenv
sub
sti
mov
add
inc
push
fstpt
inc
sub
mov
pop
popf
mov
cmp
ja
cmp
shll
sbb
js
inc
jmp
and
pop
int
xchg
mov
outsb
shll
imul
pop
out
xor
clc
loop
jnp
push
imul
lret
stos
mov
cmc
aaa
xchg
movsb
fidivs
lods
mov
push
loopne
into
sbb
sbb
mov
push
jbe
jo
in
shll
pop
fisubs
imul
and
sub
or
mov
shlb
push
dec
inc
rorl
mov
cmp
mov
icebp
sbb
out
fsubp
jmp
dec
fmuls
fadds
movsl
cmp
daa
gs
and
popa
ret
ret
sub
outsl
test
mov
cmpsb
mov
mulb
lock
arpl
and
repnz
push
cmpl
adc
mov
out
adc
xchg
dec
or
pop
push
aad
shll
push
cmp
mov
mov
and
loope
movsb
pop
mov
adc
je
cmpsb
or
cltd
out
scas
outsb
aad
mov
mov
or
or
fcmove
test
cltd
adc
xchg
movsb
mov
mul
enter
or
div
mov
xor
into
lock
push
imul
sub
jg
xor
cmpsl
jle
mov
sub
sbb
jecxz
cli
fwait
cs
js
inc
pop
test
sub
shll
push
fisttpll
pop
cmpl
fisubl
aad
popf
popa
xlat
adc
cmp
and
lds
mov
jae
cmp
mov
jo
lret
test
int3
or
cmc
inc
jno
loopne
cmp
sete
push
push
loop
shrb
leave
sahf
mov
adc
mov
in
faddl
in
rol
test
mov
test
pushf
test
push
addr16
xchg
gs
jmp
xchg
mov
fsubl
xchg
mov
loope
add
out
push
xor
cmp
into
jg
ljmp
and
cmp
movsb
dec
jl
mov
or
lea
movsb
adc
arpl
loope
and
inc
sub
mov
and
mov
ud2
adc
dec
test
aaa
xor
in
xor
std
insl
push
or
mov
mov
sbb
or
inc
mov
fldcw
mov
inc
scas
lds
xchg
or
mov
and
jp
jne
cli
xor
cmp
jno
or
loopne
sbb
push
and
stos
mov
mov
pop
pop
fiaddl
push
pop
pop
lds
or
jns
push
imul
loopne
inc
outsb
je
inc
mov
mov
aad
push
mov
mov
xor
iret
mov
adcl
or
pop
push
addr16
lea
push
pop
xchg
arpl
dec
and
push
ljmp
ret
jl
lods
ds
and
xchg
ljmp
stos
inc
and
popa
lahf
test
das
inc
adc
mov
push
adc
inc
mov
push
jnp
aas
test
or
and
xor
adc
sub
in
pop
test
mov
push
movsb
cmp
fdivr
add
fidivs
xor
cmc
cmp
into
xchg
shrb
gs
push
mov
sbb
pusha
jno
int3
lods
push
push
enter
xor
aad
cs
lcall
mov
or
inc
xchg
lock
push
test
fadd
inc
hlt
mov
orl
sub
push
cmp
scas
cmp
pop
int3
mov
cmp
jno
ret
mov
sbb
fs
inc
mov
dec
sub
pop
ret
repz
mov
adc
enter
and
mov
cmp
jnp
in
test
jne
add
fsubp
sub
es
add
inc
loop
test
movsb
mov
pop
enter
movsl
mov
xor
ds
cmp
cmp
fnstenv
clc
mov
icebp
sub
out
aad
push
inc
jge
pop
daa
sub
hlt
ljmp
mov
push
pop
dec
mov
sahf
cltd
pop
dec
dec
sub
or
jl
cmp
in
lcall
shlb
data16
sbb
push
lahf
and
outsl
mov
test
ds
xor
mov
dec
lret
sahf
lret
inc
add
mov
outsl
adc
sbb
leave
fisubrs
mov
add
fcmovu
inc
cli
sti
inc
inc
xchg
dec
mov
xchg
in
mov
cmpsl
xchg
lock
je
popa
cmc
adc
sbb
inc
cld
push
mov
mov
adc
push
xchg
mov
push
pop
cmp
dec
add
or
shlb
decl
adc
pop
push
movsl
scas
xchg
mov
dec
in
xor
mov
sub
jl
rclb
dec
movsb
cltd
xorb
jno
out
dec
sub
fdivrs
testl
jp
fisubrs
in
repz
leave
mov
imul
inc
xor
add
sub
mov
inc
in
inc
rcrb
inc
aas
or
movsb
lods
std
xor
mov
dec
jne
dec
sbb
jg
sarb
dec
lods
adc
out
xchg
xor
testl
pop
mov
pop
sbbb
inc
push
mov
jmp
popa
and
or
mov
mov
or
mov
outsb
fs
in
arpl
ljmp
gs
fwait
dec
adc
mov
add
cmc
pop
mov
mov
mov
xrelease
shr
shl
xchg
adc
ljmp
outsl
fsubs
sub
rcr
inc
fs
pop
jge
inc
std
jle
pushf
in
shlb
and
jmp
pop
nop
rolb
mov
xlat
mov
pusha
scas
cmp
out
xlat
hlt
pop
shlb
outsl
push
lret
and
or
pop
xchg
jae
pop
pop
inc
mov
add
push
mov
daa
add
jbe
sbb
jecxz
clc
or
lods
jo
pop
outsb
adc
pop
sti
fwait
loope
or
jle
in
ret
movsl
scas
cmpsl
cmc
pop
sbb
lret
and
sub
inc
inc
mov
xor
ficompl
inc
aam
pushf
jae
fidivrs
aaa
sbb
push
lret
mov
adc
inc
in
loopne
push
sub
mov
pop
pop
pop
lret
add
xchg
xlat
outsb
push
lods
aas
xchg
adc
adc
jecxz
push
or
cmc
push
insb
repnz
cmpsb
pushf
jp
fildl
outsb
insb
es
hlt
repz
push
movsb
lods
or
clc
xchg
sti
mov
fbstp
popa
daa
in
test
aaa
jnp
daa
scas
ja
inc
pop
push
jnp
sub
insl
xchg
dec
pop
xchg
push
decb
gs
sarb
lods
nop
mov
inc
call
push
inc
cltd
jle
cmc
lret
dec
mov
js
and
jns
mov
add
lret
mov
xor
ffree
pop
dec
fcmovne
add
inc
loope
xor
daa
inc
mov
jae
push
insl
sub
mov
xchg
jge
mov
pop
sbb
cmp
adc
aas
repnz
mov
fdivs
dec
sti
jno
xor
push
cltd
ret
mov
loopne
dec
adc
daa
movsl
sbb
mov
cmp
jmp
outsb
push
sbb
js
push
fucom
mov
adc
mov
cmp
cmp
push
mov
loope
lods
push
push
or
sub
mov
pop
cmc
mov
iret
push
mov
adc
mov
out
sub
pop
or
jnp
movsb
mov
in
mov
inc
lcall
adc
pop
inc
pop
xchg
inc
add
cmpl
fsts
ljmp
gs
out
jp
inc
js
popf
cmp
mov
pop
aam
cwtl
jno
xor
stos
int
add
clc
mov
pop
lods
ss
cmc
pop
lret
xor
movsl
mov
mov
enter
xchg
sbb
jb
jne
xchg
mov
in
and
inc
aad
js
inc
les
test
sbb
rorb
in
ds
shl
push
xchg
dec
adc
cltd
push
xor
inc
dec
xor
lret
nop
pop
xchg
in
shll
aad
flds
cwtl
mov
fxam
mov
adc
movsb
test
aaa
jo
dec
pop
femms
push
inc
in
leave
lret
cltd
add
fsubr
jne
and
insb
les
cld
fidivrl
adc
jecxz
popf
fcoms
jmp
sarb
scas
and
cmpsb
movsb
andl
cmp
js
mov
ss
add
insb
adc
std
mov
rcrl
fldl
adc
cmp
in
ja
pushf
mov
out
add
pop
in
mov
sti
aam
mov
andb
dec
push
outsb
jne
and
add
jno
movl
inc
push
jmp
popa
fmulp
mov
daa
mov
jne
push
adc
adc
push
fidivl
push
xor
scas
leave
mov
lods
mov
inc
movlhps
jb
jo
push
cld
xchg
mov
push
inc
cmp
jp
push
call
cmpb
in
fisubrl
lea
sbb
mov
data16
pushf
mov
lods
fldcw
das
popf
aam
aaa
cltd
dec
mov
mov
imul
pop
outsl
fwait
sub
jae
scas
das
mov
mov
inc
inc
cli
subb
sbb
scas
insb
and
into
lods
out
lahf
mov
test
jns
adc
and
adc
out
loopne
sbb
mov
push
clc
or
les
out
sbb
into
lahf
add
test
lret
mov
pop
clc
test
sbb
xchg
test
lea
mov
sub
inc
pop
cmpb
gs
cmp
fdivrp
xlat
and
mov
cmpsb
mov
cmpsb
sbb
add
sbb
mov
push
in
out
dec
inc
and
push
enter
xor
cmp
adcb
lods
pop
lods
dec
pusha
mov
mov
mov
push
mov
mov
mov
cld
and
outsl
aad
xor
and
cmp
or
imul
fwait
jle
pusha
loopne
aad
mov
jg
xlat
and
data16
pop
and
popa
sbbb
out
push
xchg
pusha
ds
outsb
jp
mov
push
rolb
mov
jecxz
pop
out
sbb
imul
call
or
hlt
es
add
mov
das
cmp
jno
and
mov
out
pop
push
inc
sahf
add
in
loop
movsb
mov
adc
push
mov
div
sub
rcll
cmpl
mov
sbb
sub
push
fistpl
hlt
loopne
mov
jmp
rorl
pop
sahf
xor
fidivs
rcll
add
and
pop
cmpsb
and
ja
and
jl
sti
out
mov
idiv
pushf
lock
fldenv
pop
push
mov
jle
inc
nop
scas
xchg
dec
hlt
xchg
jo
push
ret
std
pop
repnz
jno
jne
jbe
sbb
stos
jp
inc
cli
mov
cwtl
shll
mov
js
insl
push
repnz
mov
mov
jne
sub
sub
xor
sub
mov
hlt
or
or
xchg
mov
jl
std
sbb
sbb
aad
xor
mov
loop
jge
iret
inc
mov
push
inc
je
sub
sub
mov
xchg
adc
xchg
icebp
xor
arpl
in
jge
pushf
iret
icebp
clc
and
les
xchg
cmc
add
push
insb
pop
inc
loope
xchg
movsl
popa
fidivs
push
sahf
xchg
sbb
imul
cmpl
adc
jb
test
xlat
lock
psrad
jecxz
dec
in
or
mov
mov
mov
cs
iret
or
ja
repnz
lcall
loopne
jnp
outsb
xchg
cli
xor
sbb
leave
mov
inc
push
enter
push
mov
outsb
ret
movsb
inc
enter
aas
shll
leave
push
and
outsb
aad
sbb
ljmp
jbe
loop
mov
cmp
add
jne
fwait
jo
mov
pop
adc
icebp
roll
pushf
or
dec
xor
dec
xlat
movsb
xchg
xchg
add
push
test
push
scas
test
orl
cli
ficomps
push
outsl
fdivrl
add
jb
or
cli
setno
pop
dec
loop
xchg
jle
sub
add
pop
pop
in
inc
pop
inc
faddl
out
xchg
loop
mov
or
aam
mov
pop
clc
test
sub
xchg
mov
mov
xor
xchg
sbb
std
repz
arpl
pop
add
push
push
mov
fstpl
ret
test
mov
sbb
lods
add
scas
add
sbb
cmpsl
bound
or
loop
dec
out
pop
outsl
push
mov
cmpsl
mov
jbe
movsb
jnp
xor
repz
and
hlt
push
test
and
jge
or
xor
jo
lds
push
cmpsl
dec
inc
xor
mov
sub
jge
mov
adc
inc
cmp
push
pop
sbb
lock
push
push
test
dec
xchg
jp
and
adc
movsb
ljmp
clc
in
test
push
add
outsl
iret
stos
push
gs
daa
or
movsb
shrb
push
nop
test
dec
mov
xor
pop
jnp
push
bswap
cmp
movsb
push
mov
mov
icebp
es
push
mov
adc
fildl
push
adc
push
xchg
das
xor
push
dec
mov
stos
jmp
pop
xchg
orb
mov
hlt
jne
fnstenv
jge
add
sahf
cltd
leave
mov
mov
mov
call
jne
jecxz
loopne
fiaddl
xchg
adc
aam
mov
ds
enter
aad
in
inc
sbb
sbb
inc
int
mov
insl
jno
adc
sbb
cmpsb
lea
mov
aaa
add
addl
sbb
mov
or
jge
mov
dec
inc
sbb
fisttpl
jle
es
lock
mov
in
adc
outsl
xchg
aas
pushf
xor
cmp
fistl
lods
push
jb
xchg
or
cld
xchg
jb
mov
and
push
inc
fisttps
dec
cmpsl
repnz
dec
jo
add
mov
inc
fisttpll
add
mov
and
movsb
pop
imul
lahf
adc
mov
into
lea
test
xorb
xlat
push
mov
lahf
jns
adc
xor
inc
das
xchg
pop
sbb
sbb
mov
js
jmp
imul
stos
mov
and
mov
push
sub
jmp
daa
dec
pop
cmpsl
xchg
jmp
and
jmp
mul
testb
and
dec
int3
sbbl
mov
rorb
sub
adc
cmp
sub
adc
add
push
daa
js
push
cmp
cmpsl
rcrb
repz
mov
outsb
in
lods
push
sbb
fsubl
xchg
and
jg
xorl
pop
sub
push
mov
jnp
pop
ret
cmp
es
fmuls
leave
sub
adc
add
mov
cmpsb
inc
mov
cwtl
mov
xor
pop
xchg
push
lock
mov
bound
out
pusha
mov
sub
cld
flds
lret
iret
push
xchg
and
and
jg
and
les
bound
pushf
add
or
aas
push
jmp
jnp
les
cli
jg
push
enter
push
push
pop
inc
aam
cmc
movb
xchg
xchg
insb
cmp
dec
or
in
sbbl
push
out
dec
iret
mov
sar
rcll
mov
ret
arpl
xor
sti
pop
test
jbe
rcrl
push
pushf
bound
js
rorb
arpl
xor
push
ja
cmp
ret
jnp
pop
out
pop
push
add
mov
push
mov
jle
push
loop
icebp
mov
and
mov
lock
lea
sahf
clc
pop
xchg
cmp
aad
push
stc
xchg
sahf
stos
clc
and
aad
divb
pop
inc
loopne
inc
xor
inc
vmaxss
std
xor
jae
mov
fidivl
test
inc
call
insb
rcll
loop
into
inc
push
lods
dec
repnz
and
mov
jbe
inc
pop
scas
fmul
lcall
xorb
push
dec
mov
inc
push
jae
movsb
xor
lock
mov
jns
in
push
sbb
divb
jge
xor
push
lods
xchg
aad
jmp
ds
mov
fstpt
xchg
dec
inc
pop
scas
hlt
mov
in
add
notb
cwtl
sub
mov
push
je
xchg
push
es
push
popa
cltd
jle
out
shlb
rorl
stos
das
cs
and
push
and
sub
inc
pop
push
xchg
mov
pop
jle
xor
cmp
cmc
sbb
xchg
push
pop
cld
or
pminsw
mov
mov
dec
inc
jecxz
fxch
loopne
push
inc
stc
fisubs
scas
stos
pop
imul
dec
rcrl
pop
aad
out
xor
into
jno
imul
pop
adc
push
clc
sarl
mov
xlat
jmp
test
inc
pushf
ja
sub
xchg
mov
lods
xchg
add
xchg
clc
add
push
pop
inc
dec
lds
push
enter
fisubl
dec
mov
jnp
push
test
pop
int
xchg
ficoms
or
jle
arpl
inc
fwait
sbb
adc
xchg
mov
rorl
xor
mov
imul
add
pop
mov
pop
jb
dec
lcall
sbb
les
adc
mov
fnstsw
push
cmp
adc
pop
push
movsl
ret
push
orb
lock
icebp
mov
in
lea
sbb
fwait
inc
div
mov
cld
shrl
mov
sub
arpl
adc
fnstenv
je
mul
pop
mov
mov
std
fldlg2
ja
fsubp
mov
sub
aad
cmp
xor
ja
daa
xchg
adc
aad
lret
in
mov
or
in
sub
push
lock
push
cmp
lds
push
push
jge
movsb
scas
sbb
subl
flds
mov
fists
mov
lret
xchg
mov
cmpsl
push
loope
xchg
shl
xchg
xor
cmp
out
jecxz
shll
enter
mov
mov
xchg
mov
loope
jecxz
jne
hlt
jne
mov
adc
or
ret
mov
out
inc
and
lret
in
les
daa
add
adc
clc
leave
inc
cmp
ds
xor
ljmp
repz
sbb
jle
es
test
xor
push
pop
jbe
cmp
cltd
daa
pop
sub
xor
fnstenv
rorl
out
mov
outsl
adc
jmp
mov
mov
xchg
daa
cmp
insl
test
or
pop
jp
xor
sub
xor
enter
pusha
scas
mov
sub
sub
xor
cltd
push
popa
mov
mov
cmp
and
mov
adc
cs
lahf
scas
ds
mov
roll
mov
xor
inc
rcrb
js
divb
sub
dec
dec
push
shlb
adc
aaa
push
mov
sub
or
popw
pop
sbb
mov
lret
add
xchg
or
sub
fildl
cmp
jmp
xorb
push
mov
sarl
jmp
idivb
mov
cmp
push
cmpsb
in
mov
xchg
xor
fwait
jne
jle
jae
or
cld
jl
push
ss
dec
inc
pop
push
adc
mov
int
in
xchg
mov
gs
repz
movzwl
pop
stc
lret
add
daa
les
clc
xor
mov
into
mov
pop
pop
aaa
sbb
scas
loope
js
leave
test
movsb
pop
inc
mov
push
inc
divl
into
ds
in
jb
xor
xor
imulb
fadds
cs
fadds
mov
fbld
lret
fwait
mov
test
fidivl
subb
add
lea
mov
loop
or
imul
sbb
cmp
loop
mov
aad
inc
out
jmp
pop
dec
cmp
xchg
inc
sub
mov
fstpl
jp
daa
jns
stos
cs
jo
hlt
jmp
mov
dec
dec
dec
out
xchg
popa
clc
xlat
lods
pushf
insb
jns
mov
push
dec
jno
push
call
mov
jns
dec
hlt
xorb
mov
fiaddl
add
pop
xlat
mov
push
pop
pop
pushf
movsl
insl
push
cld
jbe
cwtl
mov
push
and
add
aaa
ljmp
jp
jno
push
cltd
daa
fcoml
mov
lcall
arpl
inc
add
bound
jae
push
jns
push
iret
pop
cwtl
es
mov
xor
pop
push
loop
aaa
stos
fwait
aad
pop
jecxz
pop
adc
xor
imul
addr16
xor
or
and
jg
aad
int3
popf
adc
lods
in
jg
sahf
pop
gs
sub
fmul
daa
push
mov
mov
fldenv
fmul
and
jbe
out
cmp
mov
xor
pop
pop
cmpsb
push
push
fistps
cmp
push
jg
xchg
lret
push
jo
jl
xor
popa
inc
mov
mov
inc
xchg
push
xchg
push
test
cmp
cmp
jne
or
xor
and
mov
adcb
lcall
xor
or
movsb
std
adc
aaa
adc
cld
subb
add
add
rorb
cmpsl
pop
and
aaa
ljmp
sbb
mov
stc
dec
xor
push
mov
pop
enter
not
lods
jge
es
inc
ret
cmp
jmp
mov
mov
mov
mov
ror
or
add
mov
xor
inc
test
jmp
data16
lcall
mov
fwait
repnz
pop
rcl
push
dec
adc
mov
pop
clc
push
popf
push
arpl
sub
fimuls
add
lods
sub
push
inc
les
fcomps
xchg
dec
adc
and
test
js
fwait
and
push
sbb
inc
cwtl
arpl
mov
xlat
xor
icebp
jl
subb
in
jo
stc
testb
jns
cli
mov
adc
cmp
push
sub
fidivl
adc
inc
fdivl
rcrb
movsb
cmp
enter
xchg
les
repz
outsb
das
repz
push
inc
xchg
dec
and
jge
cmp
lahf
jns
or
std
pop
mov
pop
adc
in
insl
push
orb
jbe
inc
and
popa
xchg
notl
push
jnp
movsb
insl
out
imul
insb
scas
pop
mov
sub
inc
inc
movsb
jae
fsubrl
movsb
or
push
push
stos
mov
out
lret
lret
xchg
out
fdivrl
or
sarl
arpl
insb
push
push
cld
jbe
mov
xchg
dec
and
cmp
loop
fwait
add
popf
ret
repz
sbb
repnz
lret
push
push
jle
fs
outsl
int3
and
cwtl
mov
xchg
lds
lock
inc
adc
in
pop
dec
aaa
icebp
sub
sbb
add
mov
fs
ret
jno
cmp
xorb
adc
test
in
adc
inc
faddl
mov
into
xchg
push
shrl
cmp
mov
andb
cmpsb
test
lods
adc
mov
mov
and
lods
pop
cmp
mov
push
add
pop
push
cmp
fisttpll
jne
jecxz
inc
sub
inc
insl
popa
inc
jb
xchg
mov
dec
out
adc
dec
fsubrs
sbb
mov
inc
in
call
sub
test
pushf
mov
std
and
push
xchg
test
xor
aaa
pop
aam
pop
and
xchg
jl
int3
adc
jns
xor
xchg
dec
movsb
clc
mov
je
pop
mov
dec
inc
in
pop
sbb
imul
hlt
push
outsl
push
loope
cmc
xor
les
lea
mov
loopne
scas
sti
mov
or
push
sbb
jb
insl
ljmp
gs
insl
push
push
lods
dec
clc
sahf
pop
das
ret
sbb
push
jb
mov
sub
pop
sbb
sub
xchg
test
div
nop
ljmp
jnp
sub
inc
and
adc
div
outsb
or
pop
outsl
mov
outsl
into
mov
call
push
mov
stos
aaa
jne
cmp
fsts
in
cmp
lahf
push
scas
dec
xchg
adc
sbb
sbb
or
pop
mov
loopne
fnstsw
push
jmp
mull
pop
cmp
test
mov
inc
inc
loop
pop
mov
arpl
fcoml
fstps
push
mov
int3
or
lret
icebp
imul
sbb
jne
loope
mov
fcoml
cmp
sub
jecxz
into
lret
or
fwait
std
pop
add
sbb
cli
xor
and
mov
and
clc
test
push
aad
adc
mov
cmp
and
adc
sbbl
jno
daa
mov
hlt
xor
and
mov
mov
cmp
inc
andl
mov
fwait
jp
xchg
in
pushl
xor
mov
sub
jl
sub
iret
jne,pn
jge
mov
cltd
mov
fdivl
mov
test
or
lret
data16
mov
mov
fbld
retw
or
adc
or
push
mov
into
rolb
out
jl
sub
sub
adc
ja
sub
adc
stos
fmuls
xchg
stos
cmp
cmp
ss
push
fdivrs
adc
mov
cmp
ret
nop
stos
jl
xor
lahf
cltd
incb
pop
jb
xor
outsb
iret
fucompp
mull
lock
push
and
mov
cwtl
pop
vxorps
out
push
in
out
dec
xor
jns
xor
inc
and
dec
out
testl
icebp
cmp
sub
pop
movsb
mov
mov
mov
mov
mov
cli
fcomps
jle
push
bound
adc
xchg
pop
add
shll
ss
dec
push
movsl
lea
push
stos
push
ja
push
loope
orps
adc
sbb
jbe
xor
repnz
test
push
add
xchg
stc
cmpsb
ljmp
iret
clc
and
roll
mov
mov
ret
mov
cmc
mov
lea
les
inc
mov
push
lret
lret
cmovs
jne
ret
mov
add
lcall
inc
loope
dec
push
sub
push
push
fcomps
dec
roll
outsb
cmp
xor
adc
icebp
popf
into
pop
pop
imul
jecxz
adc
test
je
cmp
xor
add
pop
je
aas
adc
lret
aas
push
push
iret
jle
xchg
aas
adc
icebp
push
test
mov
ja
lods
cmpsb
or
mov
div
movsl
fdivl
add
pushf
ljmp
mov
sub
or
loopne
sub
sub
shlb
orl
daa
shl
adc
jbe
mov
arpl
repz
fcompl
add
nop
cmc
aam
push
adc
rcl
cs
push
inc
mov
adc
pop
mov
push
jbe
addr16
push
lret
pop
cwtl
lea
sahf
fidivl
dec
mov
push
ret
mov
out
pop
adc
loope
push
mov
xor
iret
cmp
sbb
pop
aas
lahf
bound
inc
lcall
imulb
and
cld
jns
push
mov
rcll
pop
repnz
or
cld
pushf
scas
pop
cwtl
add
mov
lahf
and
cmp
dec
ds
mov
loopne
dec
push
jbe
mov
cmpsl
pop
mov
sbb
popw
adc
aas
orb
arpl
and
mov
cmp
mov
xchg
and
or
mov
mov
ss
jge
jnp
pop
mov
add
push
and
push
nop
fistl
push
notb
xlat
dec
loopne
aad
pop
fnsave
inc
mov
mov
mov
aam
sub
cmp
addr16
xchg
popf
dec
aaa
enter
sbb
pop
push
jno
pop
add
iret
cwtl
out
jb
xchg
cltd
ljmp
js
cmp
adc
xchg
jne
pop
sbb
xchg
mulb
and
mov
lods
add
mov
pop
jl
inc
sub
sbb
outsl
xchg
in
dec
adcl
pop
lea
fcompl
jp
or
mov
mov
pop
jne
lahf
adc
sbb
int3
out
push
jbe
dec
pop
xchg
push
xlat
add
mov
adc
dec
stc
sti
push
pushf
dec
in
dec
lea
add
xor
pop
icebp
aas
lds
mov
and
idivb
dec
pop
mov
roll
lcall
pop
jb
pop
loop
xchg
add
jp
lcall
enter
lods
ja
int3
sub
sub
rcrl
mov
inc
fistpl
xchg
inc
das
jp
ljmp
push
cmp
lods
daa
int3
or
adc
loopne
and
lds
push
sub
mov
pop
arpl
ljmp
out
push
test
and
pop
push
or
inc
shl
inc
cmp
and
test
pop
adc
jbe
or
es
subl
scas
sbb
or
movsb
movsl
pop
inc
cli
adc
xor
outsl
push
movsl
stos
dec
jnp
or
mov
adc
test
mov
mov
mov
rcr
jae
arpl
sbb
adc
push
lahf
imul
xlat
sbb
dec
jp
orl
mov
pop
inc
insb
push
inc
mov
push
jbe
jge
mov
imul
mov
and
xor
inc
lea
je
lahf
les
cmp
clc
fwait
xchg
bound
lea
imul
cwtl
pop
hlt
xor
dec
mov
push
push
pop
xchg
lods
lods
mov
in
clc
xchg
jle
adc
mov
movl
sbb
jecxz
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
.byte
aad
rcr
sbb
jno
xor
fmuls
mov
mov
in
mov
push
or
sbb
jecxz
mov
lcall
or
sbb
jecxz
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
.byte
dec
cmpsb
stos
adc
add
push
xchg
push
mov
imul
jae
int3
and
data16
int3
cmpsb
mulb
call
xchg
fists
in
push
sbb
xrelease
or
mov
and
std
test
push
out
pop
leave
lock
mulps
push
fdivs
adc
inc
inc
mov
mov
adc
lahf
outsl
cmpb
mov
call
pop
or
mov
addr16
mov
jae
xchg
adc
cmp
pop
ja
shrl
shrb
test
stos
shlb
in
add
xchg
fwait
aas
push
loop
mov
xchg
bound
loop
sub
imul
xchg
je
and
pusha
pop
add
subl
call
sub
jne
leave
dec
add
pop
loope
adc
cmpsb
mov
cmpsl
jno
fwait
jo
sbb
jle
jmp
cmp
sahf
shlb
mov
or
push
lock
or
sbbl
jl
jp
call
call
enter
mov
adc
mov
push
mov
enter
cld
hlt
addr16
imul
dec
xchg
mov
lods
enter
mov
je
bound
and
dec
lods
dec
sub
fstpt
dec
pop
into
cld
mov
sarl
jp
jmp
in
or
adc
and
mov
orb
rclb
in
dec
es
imul
and
iret
enter
jl
push
pop
xchg
add
jbe
into
mov
imul
push
mov
and
jl
mov
pushf
enter
jg
filds
lds
cmc
lret
loopne
mov
lds
jp
mov
fstp
outsl
adc
pop
shlb
xor
das
js
imul
jne
fisttpll
pop
sub
adc
loopne
mov
test
sub
cmp
aam
push
adc
ljmp
cmp
std
nop
out
dec
movsl
aam
in
push
push
jo
aaa
jle
mov
cmp
lcall
sahf
xchg
in
mov
pop
shlb
cmp
popa
ret
push
jns
adc
xchg
fldl
imul
sahf
mov
xchg
xor
mov
jno
ret
cmpsl
xchg
adc
or
xor
or
jmp
cmpsl
xchg
pop
js
pop
pop
daa
fisttpl
jb
xchg
jl
cli
stos
push
popf
sti
movsb
sbb
sbb
gs
and
fidivrs
mov
sub
pusha
bound
addr16
daa
push
pop
sub
outsb
xor
shrb
dec
popf
jl
fwait
repnz
enter
pop
into
xchg
sbb
dec
cltd
sbb
ss
out
pop
or
cld
rorb
xchg
xchg
cmp
stos
push
xchg
loope
popa
jle
and
adc
inc
sub
jg
xchg
adc
pop
cmpsl
dec
add
insl
pop
test
cltd
jne
jno
sbb
cmp
mov
cld
jecxz
jecxz
int3
pop
xchg
daa
call
jmp
ja
sbb
lods
push
aaa
adc
lahf
gs
nop
fisttpll
fmulp
cli
popf
aad
xorl
mov
addb
jle
xchg
addr16
pusha
aad
cmp
add
xchg
imul
clc
mov
testb
sbbb
cmc
inc
pop
push
aad
pop
xchg
loope
and
dec
add
fsts
mov
dec
or
add
mov
inc
cmp
cwtl
repz
xor
mov
mov
call
loopne
sub
mov
out
jle
adc
loopne
es
mov
aas
push
xor
imull
cli
lret
addr16
xchg
dec
ljmp
into
ret
inc
aas
xchg
adc
adc
ljmp
pop
lret
inc
cmp
icebp
sbb
or
rcrw
scas
repnz
test
roll
adc
lahf
fldcw
mov
mov
das
adc
mov
mov
mov
in
loop
shlb
cld
xchg
add
loopne
jp
aaa
stos
ljmp
or
lods
xchg
cmc
xchg
scas
imul
cltd
mulb
mov
sub
stos
sbb
sub
imul
cmp
jns
mov
mov
in
jnp
push
test
imul
dec
sbb
ret
mov
fnstcw
out
or
cmp
mov
jmp
adc
cs
mov
cmpsl
sbb
fistl
lds
icebp
popa
int3
push
daa
sub
jge
popa
add
fdivs
push
mov
push
repz
cmp
mov
push
cmp
test
mov
dec
js
ficoms
subl
pop
int3
ljmp
mov
sbb
sbb
addr16
std
lcall
aaa
push
mov
lret
into
push
fisubs
dec
movsl
fsubl
cmp
push
xchg
push
sahf
xchg
aam
xor
mov
adc
and
ret
pusha
dec
daa
cmp
jp
rep
mov
jp
jmp
push
addb
push
ljmp
out
aaa
leave
into
aas
cmpsb
pop
inc
loopne
lahf
xor
adc
aaa
test
and
xor
out
sub
gs
testl
pop
shlb
lcall
and
pop
pop
ss
insl
jle
inc
orb
arpl
sbb
mov
xor
fstp
xchg
mov
movntq
out
ja
inc
scas
xor
mov
and
mov
sbb
lea
shll
push
or
cmp
orl
cmp
insl
sub
out
jmp
jp
jecxz
jne
insl
mov
fwait
cmp
add
testl
push
dec
ret
aaa
xchg
push
imul
mov
icebp
bound
push
inc
xor
adc
dec
or
cld
lahf
dec
popa
xchg
icebp
mov
add
mov
fnstcw
pop
adc
std
cld
xchg
pushl
leave
jno
add
pop
out
jbe
arpl
je
aad
movsl
addb
and
repz
fdiv
shll
mov
inc
dec
cmp
pop
ss
cltd
lret
frstor
xor
lea
add
mov
cmpb
aam
addr16
and
push
push
repnz
jl
daa
stos
das
divb
inc
test
sahf
lret
xchg
andl
inc
ja
push
add
inc
dec
sbbl
mov
pop
xchg
in
push
xchg
mov
cmc
mov
nop
cwtl
imul
jb
mulb
int3
lods
ljmp
xchg
clc
fsubrl
cmpsb
cld
sub
js
sub
adc
aas
cmp
push
sub
adc
fs
xchg
sbb
dec
or
push
sub
imul
es
jg
and
adc
push
cmp
orl
cmp
xchg
cmp
int
or
and
fisubrs
lret
mov
pop
push
adc
stos
push
aas
lahf
pusha
cmp
repz
mov
mov
dec
jae
decl
dec
mov
sub
pop
inc
cmp
dec
popf
insb
mov
sbb
jnp
int
loop
jne
dec
mov
mov
mov
dec
or
or
shlb
lods
sti
cmp
insl
nop
lods
jp
mov
push
xor
and
mov
fstpt
mov
xchg
outsb
aaa
aas
pop
jns
pop
push
lea
lcall
popf
pop
mov
leave
imul
movsb
or
fs
mov
cmp
xchg
mov
add
mov
sti
adc
jmp
scas
imul
fcomps
jmp
and
xchg
push
mov
data16
scas
jae
sub
pusha
adc
lret
fs
ficomps
ss
cmp
dec
shl
addr16
shll
lahf
outsb
cltd
pop
mov
cltd
mov
xor
xchg
cmp
and
or
sub
test
dec
out
aad
int
js
lcall
loop
lret
xor
mov
loop
or
jmp
mov
mov
shll
es
push
push
xchg
add
pop
or
mov
jnp
pop
pop
pop
jecxz
mov
mov
adc
jbe
mov
cmp
stc
xchg
rorl
mov
or
inc
mov
sub
and
mov
jb
or
out
lahf
or
aam
call
adc
int3
out
mov
jae
out
std
cmp
mov
std
and
sbb
push
mov
cmc
jmp
fs
mov
sbb
jae
fcoml
out
dec
lcall
pop
call
call
div
sahf
add
inc
inc
sub
or
cmp
pop
cmpsl
lods
mov
mov
push
enter
mov
rolb
es
data16
test
divb
into
jmp
mov
sbb
rcrb
dec
addr16
adc
jo
mov
punpckhwd
push
fimull
mov
and
sbb
xchg
std
pusha
mov
pop
xor
push
pop
add
lock
add
lret
mov
push
sarl
mov
jbe
stos
push
or
outsb
mov
mov
and
cmp
enter
mov
outsl
dec
iret
mov
xchg
imul
xor
mov
xor
inc
and
sbb
divb
outsb
add
and
rcll
mov
test
imul
dec
pop
sahf
mov
push
aad
in
xchg
sbb
adc
inc
lds
loope
sub
rcr
aaa
mov
sub
xchg
xchg
xor
pop
or
inc
jno
aad
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
mov
push
add
fsub
out
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
fnstenv
int3
push
mov
fcoml
or
nop
iret
nop
and
orb
js
sti
clc
test
sub
add
insl
sti
clc
test
insl
sti
clc
test
add
pushf
pop
add
jmp
call
stos
into
add
pop
jl
add
push
pop
pop
into
decl
sti
and
and
in
pop
add
add
xchg
cmp
xor
loope
dec
sub
and
mov
and
stos
cwtl
in
xchg
add
mov
cmp
push
shr
scas
pop
dec
fs
xor
scas
mov
cmp
in
push
popf
add
sbb
mov
xchg
enter
jbe
js
sbb
aas
cmp
gs
pop
fwait
dec
pop
fwait
or
mov
out
and
daa
int3
ja
icebp
inc
mov
and
les
bound
mov
cli
lods
lea
outsb
lret
sub
aaa
push
js
dec
adc
mov
xchg
jnp
rcll
in
xchg
mov
dec
jge
dec
jo
pop
xor
inc
stos
lea
int3
fldenv
jmp
leave
mov
sbb
dec
xchg
inc
add
std
popf
push
negl
sbb
adc
aas
add
xchg
lods
add
sub
sub
and
push
xor
ljmp
loopne
fadd
jle
ret
push
imul
ss
mov
fisubs
movsb
jns
jmp
cwtl
pusha
sbb
sbb
adc
outsb
jmp
loope
or
int3
mov
cmp
mov
int
loope
inc
sarb
mov
jns
push
jecxz
js
jecxz
sub
push
or
test
ror
pushf
pop
jmp
push
fwait
icebp
adc
lahf
movsb
push
push
sbb
lahf
sub
fcmove
lahf
addb
mov
rclb
or
xchg
movsl
enter
pop
xchg
pushf
movsb
or
inc
cmp
mov
push
jmp
mov
cmp
jge
nop
sbb
iret
adc
popa
sbb
mov
ds
xor
cmpsb
jge
mov
adc
loope
cs
sub
lret
pop
adc
inc
sarb
mov
sti
xor
andl
mov
lret
in
std
mov
sbb
xchg
inc
mov
fs
daa
or
adc
mov
cmpsl
or
xor
leave
aad
testb
in
mov
in
add
adc
cmp
pop
and
xor
or
sbb
shl
jne
in
adc
and
and
sub
adc
sub
cs
pop
add
mov
push
addr16
or
inc
scas
pushl
pop
mov
sahf
or
or
iret
inc
and
test
cmp
sbb
pop
aas
cmp
and
fwait
scas
mov
pcmpgtb
lds
push
sbb
pusha
dec
or
loopne
jbe
sub
inc
mov
jle
fwait
inc
dec
fsts
lcall
rcrb
cs
rcl
in
call
inc
push
aam
sub
lods
out
icebp
mov
xchg
xchg
imul
cld
fldlg2
mov
rcll
mov
xchg
xchg
xchg
fsubs
xchg
jbe
lea
sbb
in
sub
sbb
or
int3
movsb
fcmovnu
aaa
fsubs
outsl
insl
pusha
cmp
mov
lret
jmp
lahf
lock
or
sub
sub
jno
test
imul
push
lods
mov
push
outsb
int
and
jl
add
testb
arpl
jge
leave
les
or
fs
repnz
das
push
lret
mov
jl
mov
cltd
addr16
out
jns
lods
jmp
jns
fnstsw
adc
addl
divb
mov
dec
inc
loope
mov
sbb
les
incb
into
sub
inc
sbb
ret
imul
cltd
push
in
add
mov
aad
test
repnz
xchg
out
incl
in
sub
addr16
mov
aad
jmp
subl
fmulp
add
enter
scas
cmp
psraw
cmp
aas
gs
lret
push
mov
fadd
sbb
dec
pop
dec
popf
jecxz
xor
xchg
lret
ficoml
ds
pop
negl
std
testb
clc
push
mov
lcall
xchg
mov
ja
fidivrs
xor
push
loope
mov
or
mov
xor
pop
jbe
mov
in
xchg
int3
dec
mov
sbb
mov
or
lcall
addr16
shll
pop
lret
pop
adc
ljmp
mov
ds
sbb
fimull
dec
mov
dec
jg
dec
and
mov
push
imul
outsb
xchg
xor
jns
dec
test
fidivrs
xor
shll
fmuls
pop
ds
fidivs
push
leave
jmp
sbbl
xacquire
fidivl
fdivs
lods
movsl
mov
push
xchg
pop
xchg
inc
xchg
inc
outsl
and
fcmovnu
sarl
mov
pop
je
push
test
outsb
and
lret
or
push
mov
ds
jp
push
jle
add
xchg
call
rcrb
cltd
int3
loope
fisttps
add
xchg
jge
in
jnp
cmp
pop
stc
aaa
inc
scas
sbb
test
incl
aas
jns
add
loop
sbb
fs
loop
cmp
movsb
pop
push
rcl
out
bound
pop
clc
inc
pusha
sub
ljmp
clc
xchg
mov
cmp
inc
decl
addb
cmp
into
mull
fsubs
sbb
mov
out
sub
jne
pop
es
out
push
stc
pop
sti
mov
aam
clc
scas
fstpl
jmp
sub
int3
fwait
pop
subl
push
mov
fldt
fiaddl
dec
scas
inc
inc
push
icebp
sub
mov
pop
out
and
popa
loopne
loopne
ficoms
and
nop
inc
inc
arpl
cmpsb
sub
dec
xchg
imul
cmp
fwait
repz
outsl
pop
mov
push
lea
and
ja
arpl
mov
lea
adc
jp
or
inc
lret
mov
xor
in
mov
loopne
jle
rcll
push
inc
inc
add
sbb
repnz
insl
jge
fs
mov
jno
rol
xor
and
insl
lea
sarb
xor
lds
jae
test
push
cmp
dec
fmull
out
loopne
lcall
call
mov
pop
out
mov
add
es
sti
push
and
adc
out
out
imul
scas
cmc
cmpsl
cmp
jecxz
add
cmp
mov
lcall
test
hlt
push
mov
lahf
stos
mov
scas
dec
cmovl
push
mov
mov
cmp
jnp
jne
sysret
out
aaa
adc
and
fcmovne
adc
in
cmp
sbb
gs
mov
sub
inc
in
rol
mov
and
inc
dec
sbb
or
aad
push
les
sub
psraw
nop
pop
enter
push
addl
cltd
cmpsl
jge
inc
push
sbb
test
dec
dec
sahf
pushf
cli
sub
jno
data16
jmp
inc
fs
mov
rcl
jle
rcr
mov
jg
cltd
push
mov
pusha
negb
push
iret
ficompl
fdivrs
jo
sbb
or
testl
pcmpeqw
jne
add
mov
sub
int
add
sbb
pop
mov
pop
mov
jmp
fnsave
stos
adc
pop
push
negb
adc
inc
icebp
lahf
iret
sbb
jmp
ljmp
sub
mov
outsb
repz
mov
jae
dec
rolb
ja
iret
lock
mov
jecxz
and
in
xor
pushf
out
mov
loope
and
cmpsb
jecxz
loop
icebp
mov
jno
and
mov
push
adc
push
cmp
inc
dec
iret
xor
cld
and
pusha
aaa
repz
pop
enter
add
out
add
fld
or
and
jno
push
push
fwait
sti
cmc
pop
mov
cwtl
jecxz
dec
xchg
test
mov
add
pop
repnz
ret
jae
iret
and
mov
pop
sti
sub
cmp
fadds
mov
push
fcomi
mov
jecxz
hlt
adc
sub
mov
xor
out
and
out
mov
mov
daa
cmp
enter
repz
push
inc
lahf
pop
dec
es
cmpb
cmp
shrl
cmp
cmp
daa
pusha
cmp
sbb
jns
ljmp
pop
lock
scas
mov
mov
aam
mov
add
in
ljmp
test
ret
inc
inc
stc
enter
lahf
pop
mov
rclb
outsl
push
movsb
push
js
stos
mov
sbb
gs
mov
fidivl
mov
mov
mov
lahf
repnz
ret
jg
or
dec
test
dec
cmc
popa
dec
mov
add
outsl
mov
push
imul
daa
jne
fwait
out
rolb
cmpsb
mov
inc
or
xchg
adc
cmp
je
xchg
flds
mov
iret
sbb
pop
mov
and
sub
mov
inc
lahf
inc
imul
mov
inc
insb
js
lds
cs
jae
or
icebp
xor
mov
xchg
sti
mov
sbb
out
nop
fmul
pusha
xchg
repz
addr16
test
jno
mov
stc
mov
insb
fucomip
je
sbb
negl
in
dec
pop
jne
and
sbb
xchg
rolb
pop
cmpsb
dec
sbbl
js
cmp
inc
jns
jg
repnz
in
scas
int
incl
add
pop
movsl
xor
insb
inc
inc
sub
or
loope
cmp
xor
mov
mov
jge
add
es
jmp
sbb
pop
mov
cmpl
test
cltd
sbb
push
addr16
push
bound
aad
push
andl
xchg
enter
add
adc
stos
enter
dec
test
popf
rcrb
cs
pop
push
xchg
test
and
pop
sbb
mov
lcall
mov
sti
arpl
jge
xor
lret
incb
fwait
into
cmp
mov
fidivs
inc
jo
cmp
frstor
int
loopne
adcl
cmpsb
inc
outsl
fwait
xchg
sti
add
andl
jmp
and
push
lcall
clc
fdiv
mov
and
inc
call
jmp
dec
or
mov
xchg
inc
sub
cli
xchg
xchg
mov
mov
movsb
xor
mov
push
ja
icebp
insb
cli
mov
sbb
mov
pop
repz
shl
pop
jmp
ficompl
out
stos
xchg
mov
jb
mov
in
push
mov
lret
adcb
test
out
enter
push
xchg
mov
add
and
or
mov
pop
dec
mov
add
mov
xchg
pop
outsb
mov
inc
fnstenv
push
pop
cli
pop
sbb
icebp
sub
fldl
sub
pop
pop
mov
aam
movsl
add
mov
and
xchg
pushf
pop
and
int3
nop
ret
nop
rol
or
adcl
repnz
sub
inc
test
add
cmp
cmc
les
xchg
jno
outsb
ss
sbb
ss
adc
data16
icebp
lea
sub
xchg
pop
in
iret
push
addr16
or
mov
cmpsl
or
push
xchg
mov
int3
xchg
fldt
mov
dec
sub
xchg
test
add
sub
bound
sti
mov
ds
pop
push
jnp
lods
popf
push
mov
jae
jmp
inc
fisttpll
mov
add
and
inc
push
lods
jnp
sbb
jp
add
mov
frstor
je
or
jb
xchg
inc
arpl
pop
addr16
rolb
adc
xor
and
xor
test
hlt
dec
dec
lcall
mov
scas
inc
xor
or
add
incb
adc
aam
shll
cmp
out
or
adc
mov
cmpsl
fs
pushw
mov
push
jecxz
push
aaa
imul
nop
ja
push
daa
stc
aaa
inc
pusha
cmp
jb
das
fs
shrb
adc
fidivl
sub
aas
sub
addr16
xchg
daa
xorl
pop
add
ffree
dec
push
aas
or
jno
das
mov
inc
fisubrl
leave
push
sub
mov
sub
pop
xchg
enter
mov
pop
cld
jecxz
cmp
mov
fsubrs
or
push
pop
leave
push
mov
mov
xorl
jae
movsl
out
xchg
push
mov
in
lods
fldz
fisttpll
popf
push
mov
leave
mov
adc
push
mov
cmc
stc
sbb
and
jne
sbb
ret
stc
out
lds
push
dec
lock
leave
push
xlat
jle
pop
mov
mov
stc
lock
fsubrl
loope
shl
cli
xor
xchg
xor
lods
mov
dec
jne,pt
inc
pop
rorb
adc
lods
and
imul
sbb
out
adc
iret
sarl
fcom
xchg
cmpb
mov
sub
cli
mov
popf
test
scas
add
rolb
pusha
fcmovnu
sbb
in
test
in
daa
xchg
in
jle
mov
sbb
pop
inc
sub
add
pop
mov
fimull
and
jl
mov
xchg
dec
test
jns
fistpll
mov
rcrl
ds
pop
and
les
and
mov
loop
mov
xlat
lock
lock
add
jae
addr16
popa
les
dec
movsb
dec
xchg
cmp
fdivs
lret
hlt
dec
sub
mov
mov
inc
je
xchg
repnz
mov
sahf
test
and
int3
add
int
mov
sbb
scas
mov
xchg
push
mov
mov
cmp
pop
add
push
jo
push
mov
or
out
xchg
cmp
or
fisubs
pop
arpl
sbb
jle
fldcw
ficoms
adc
stos
out
push
jge
jp
dec
cmp
lods
arpl
int3
inc
xor
adc
mov
stos
pop
adc
hlt
mov
dec
fimuls
cmc
or
push
ror
das
and
jle
insl
jp
inc
inc
arpl
add
jle
push
mov
push
addr16
repnz
jns
loopw
push
adc
pop
sbb
cmp
xlat
mov
xor
js
scas
pop
sbb
inc
fidivl
dec
adc
push
xchg
adcl
pop
fisubrs
push
icebp
push
mov
jno
out
adc
fnstsw
mov
push
movsb
shlb
sub
scas
dec
cld
mov
into
subl
lods
cmp
test
dec
mov
lahf
mov
xchg
orl
add
cmpsb
dec
sbb
jnp
inc
cmp
push
jge
and
dec
mov
std
push
lods
outsb
adc
nop
mov
andb
push
adc
adc
xor
jne
mov
or
dec
sarl
jp
or
jno
push
inc
adcl
mov
ss
cmp
in
bound
adc
inc
fsincos
dec
loop
mov
aam
add
push
lods
dec
enter
adc
jge
push
add
rep
and
outsl
pop
push
jp
mov
push
jge
cmp
xor
ret
ljmp
lods
pusha
imull
cwtl
dec
sub
shrb
fs
jnp
or
push
mov
sub
jmp
or
jns
dec
icebp
sub
jg
dec
xchg
out
mov
xchg
adc
call
call
mov
out
mov
mov
fstpt
mov
jo
popa
pop
dec
and
mov
inc
pop
popf
and
mov
push
cmp
cli
stos
mov
push
jo
push
test
adc
push
lret
or
push
sahf
mov
cmc
dec
rcll
and
mov
cwtl
nop
mov
xchg
xor
mov
mov
inc
mov
adc
cmp
sahf
and
push
lret
cmp
lock
and
test
push
xchg
scas
test
dec
push
loope
mov
nop
sbb
xchg
adc
jb
push
addr16
out
pop
popl
call
cmp
jne
cmpsb
jae
sbb
xchg
sbb
das
mov
adc
clc
or
push
pop
fidivs
outsl
arpl
in
jno
sub
lret
mov
movsl
jb
mov
rcr
jmp
xorl
xchg
leave
sbb
mov
mov
out
pushf
push
cltd
cmp
call
nopl
nop
inc
jo
int
sbb
aam
ja
sbb
mov
inc
aaa
jmp
or
inc
or
sbb
mov
nop
insl
sbb
leave
subb
icebp
dec
xor
mov
fsub
jo
fisubrl
es
lods
test
fmull
in
sub
dec
sbb
js
shll
iret
cs
pop
test
xchg
push
lret
iret
sbb
leave
fiaddl
mov
pusha
pop
lods
xchg
mov
movsb
jmp
sbb
mov
std
dec
fimull
cmp
mov
mov
loop
pop
fcomi
or
loop
xchg
cmpsl
mov
pop
lahf
scas
xchg
pusha
dec
out
pop
xor
jecxz
ds
xor
cwtl
cmp
xchg
aas
decb
and
loopne
ja
in
push
stos
add
clc
ss
pusha
inc
push
fmul
mov
scas
jl
push
xor
neg
call
xchg
inc
int3
cmp
pop
cmc
push
pop
xor
ljmp
xor
gs
xor
jnp
bound
arpl
dec
inc
enter
jmp
inc
test
dec
sub
imul
cmp
int
cwtl
mov
mov
lods
call
ret
mov
scas
clc
inc
gs
cmp
lcall
ror
xchg
outsl
ficomps
jne
adc
js
pop
aad
bnd
jne
dec
das
pop
jae
stos
mov
mov
or
sub
and
inc
sbb
lods
sub
mov
mov
jge
add
xlat
push
jae
hlt
fwait
adcb
push
jg
in
repnz
out
cmp
in
xchg
mov
pop
mov
lds
sti
test
sti
adc
mov
push
in
daa
push
push
dec
mov
mov
fadds
inc
add
adc
rcll
repnz
movl
test
mov
sahf
lds
xchg
dec
mov
stc
clc
in
sbb
leave
outsb
arpl
pop
jmp
call
sbbb
mov
jno
mov
outsl
dec
sub
negl
dec
rcr
inc
fstps
js
lea
jmp
pop
insb
sub
call
cld
cs
inc
xor
js
mov
mov
add
or
xchg
push
mov
fbld
push
ja
mov
cmpsb
xor
js
xchg
lahf
hlt
push
addr16
inc
mov
cmp
add
bound
cmp
push
stc
in
cmp
jnp
cmp
test
sbb
push
inc
jne
je
cmp
xchg
mov
xor
push
add
mov
std
cmc
outsb
pop
ja
test
push
mov
mov
sbb
xchg
cmp
xchg
movsb
cmp
pop
adc
icebp
stc
cmp
mov
cmpsl
lahf
inc
mov
jb
pop
stos
mov
mov
mov
pop
leave
inc
cmp
and
sbb
hlt
jl
cmp
xlat
add
xor
insl
roll
mov
test
cmp
sub
jmp
pop
outsl
mov
mov
iret
divl
sbb
cmpsb
adc
mov
pop
sahf
cmpsl
pop
addr16
int3
inc
jae
mov
mov
addr16
or
out
cli
arpl
xchg
nop
mov
adc
scas
and
mov
xchg
fdivs
out
cli
cmpsl
and
cmp
jb
and
pop
jno
loopne
add
lods
jl
xor
inc
pop
xchg
pop
ret
mov
or
fdiv
push
pop
xchg
imul
out
push
cltd
int3
mov
shr
sbb
jg
dec
pop
xchg
mov
pop
scas
aad
hlt
cli
test
mov
push
xchg
ret
dec
xchg
mov
and
adc
xchg
adc
out
ss
xorb
mov
xor
mov
dec
shlb
cld
sub
testl
mov
outsl
mov
sti
add
dec
and
and
push
jle
cs
movsl
inc
pop
mov
mov
push
push
imul
dec
jmp
xchg
leave
sub
xor
inc
cltd
ds
add
fiaddl
dec
and
lock
mov
decl
dec
xchg
jo
and
sahf
or
adc
dec
dec
xor
dec
mov
mov
jl
push
mov
and
mov
or
pusha
fidivl
repnz
push
std
inc
loope
aaa
sti
aaa
dec
pop
inc
inc
xor
mov
adc
mov
lods
dec
cltd
adc
cmp
je
inc
push
fcoml
and
adc
repnz
in
push
and
fmull
sti
xor
pushf
hlt
push
lret
imul
lock
adc
stos
mov
test
orl
jl
fldl
ret
xchg
test
cwtl
mov
rcrb
loopne
faddl
mov
push
adc
mov
test
adc
ret
movsb
add
dec
lods
testb
xchg
sub
insl
subl
test
ret
add
enter
jge
push
in
push
mov
leave
lcall
sarl
pushw
lds
push
fwait
jecxz
jle
repz
inc
pop
and
sub
mov
sub
and
xchg
jne
fisttpl
cmp
cld
dec
pusha
notb
cltd
pushf
pop
xor
mov
sub
je
jno
xor
push
push
adcb
jle
xor
and
ret
or
mov
and
lea
or
jl
xlat
jo
xchg
outsl
push
sub
push
xchg
dec
sbb
mov
sbb
cmp
pop
ret
inc
pop
push
jno
or
mov
push
push
adcb
nop
sub
lcall
jno
cs
mov
xchg
adc
jnp
jbe
xor
mov
push
or
xor
aam
dec
mov
xor
xchg
and
or
test
mov
std
jb
lea
push
add
mov
inc
cmc
bound
cmpsl
mov
adc
fstl
jg
aam
mov
adc
sbbb
sbb
add
adc
lcall
dec
sbb
or
inc
mov
je
neg
add
pop
push
add
cmp
mov
push
loop
pop
test
jo
xor
mov
fdivl
xchg
cltd
mov
lods
sub
dec
xor
pushf
dec
bound
popa
mov
and
mov
test
clc
mov
movsb
ret
jmp
xchg
push
inc
je
fwait
inc
repz
jg
sub
add
jb
iret
add
xchg
xor
jns
jns
orb
divb
mov
sti
out
xchg
or
dec
inc
test
mov
push
xchg
es
std
data16
ja
stc
mov
add
push
cmpb
fmulp
sub
jno
mov
adc
repz
dec
repnz
in
pop
je
stos
shl
lods
push
enter
mov
pop
popa
repz
insb
inc
inc
xchg
test
xsaveopt
dec
in
push
add
mov
xchg
jle
stos
dec
aaa
loopne
jl
pop
mov
xlat
sub
int3
mov
push
shll
int3
arpl
jb
out
mov
scas
xor
fisttpl
les
sbb
xchg
pushf
pop
out
repz
or
fsubs
mov
push
cmp
sarl
das
aad
pop
sub
or
push
jle
mov
sbb
stos
sti
dec
mov
pop
std
lds
adc
mov
mov
mov
adc
repnz
dec
lcall
or
inc
popa
arpl
idivb
push
push
cmp
sub
or
icebp
js
cmc
add
cli
or
repz
push
jg
ffreep
nop
je
cs
cmpsl
or
jl
sti
sahf
or
mov
jecxz
jno
dec
enter
push
lahf
gs
sub
cmpsb
aad
subb
or
cmp
movsb
xchg
or
mov
inc
test
repz
mov
in
sahf
dec
xchg
stos
test
lea
and
lods
xchg
dec
pop
xchg
aam
add
int3
pop
xchg
inc
outsb
dec
mov
icebp
mov
stc
inc
sahf
xchg
mov
aam
pop
add
arpl
xchg
sub
push
movsb
jno
sbb
cli
sti
mov
scas
xorb
iret
push
mov
cmp
jne
cmp
negl
mov
push
add
bnd
call
xchg
popf
lock
cmp
aad
bound
imul
mov
pop
mov
mov
or
dec
pusha
push
loop
sbb
push
and
xor
and
mov
arpl
or
mov
xchg
scas
jno
dec
mov
into
add
add
or
add
push
into
lret
sti
gs
inc
inc
lcall
shll
pop
fdivrs
fsts
push
jmp
sarb
lahf
sbb
in
out
pop
gs
in
sub
pop
stos
and
pop
iret
loop
sub
pop
incl
mov
mov
pop
test
inc
dec
add
mov
pop
inc
jne
dec
test
not
jp
fs
and
leave
cmp
imul
mov
sbb
sub
xor
lret
sub
arpl
das
or
insl
call
clc
sub
cmc
dec
mov
jb
enter
leave
or
add
clc
mov
mov
shll
mov
ds
cli
mov
loop
jmp
mov
jo
mov
mov
mov
lods
loope
pushf
cmovne
es
and
repnz
vmovntps
or
dec
xor
xor
fs
inc
rorb
mov
push
mov
fldl
add
out
in
cmpsb
sbb
insb
ret
add
and
cmpsl
xlat
dec
ficoms
fnstenv
jae
xlat
add
stos
ljmp
lds
xor
loope
ljmp
inc
ret
xchg
xor
xchg
mov
mov
inc
sbb
outsb
pop
sti
sub
inc
lcall
xor
adc
scas
or
inc
fadds
mov
pop
dec
mov
xchg
arpl
push
cmpsb
mov
mov
jo
or
push
xlat
add
sub
add
iret
sbb
idivl
mov
and
cmp
roll
jmp
lods
gs
loop
dec
fsubl
mov
adcl
jns
add
imul
mov
outsl
repz
lods
lea
out
dec
arpl
inc
and
push
jecxz
imul
movsb
cmp
inc
mov
or
sti
int
push
mov
adc
adc
cmp
jge
sbb
movsb
pop
sub
incb
daa
xchg
jnp
cltd
push
jp
lahf
xchg
jne
inc
add
and
mul
add
pop
jmp
add
jbe
inc
cmp
add
and
pop
lock
mov
sbb
and
pop
mov
in
pop
mov
out
adc
int
or
scas
popf
es
movsl
adc
adc
jp
cmpsb
loope
cld
lahf
jge
pop
je
test
pop
cs
aam
pmuludq
mov
mov
pushf
out
out
xlat
or
xor
or
xchg
sub
sub
sbb
imul
dec
inc
jl
dec
pop
and
push
loop
fdivl
outsl
arpl
popa
inc
sub
pop
cmp
sbb
mov
pop
adc
out
xor
xchg
inc
addl
sti
ljmp
cmp
ds
js
cmp
notb
cmpsl
mov
int
shlb
and
mov
outsb
dec
ja
mov
or
cli
mov
lods
test
mov
sub
jle
lods
sub
push
inc
jae
push
add
or
fninit
out
addr16
aad
cmp
jo
jb
pop
int
push
jle
inc
jle
arpl
icebp
xchg
lods
push
mov
stos
outsb
sub
and
and
pop
pop
push
adc
mov
add
scas
xor
outsl
pop
xor
out
push
jcxz
out
sub
daa
mov
push
inc
leave
xchg
inc
xchg
lds
fwait
lea
movsb
mov
cli
pop
sarl
push
push
shll
loope
sub
mov
adc
sub
je
in
lods
inc
sub
scas
pop
cmpsl
dec
sub
sub
or
movsb
es
popa
jno
fsubrs
test
xchg
enter
mov
aam
push
cmp
addl
icebp
jnp
ja
jmp
cmp
stos
cmp
outsl
data16
sti
push
adc
lods
add
pop
in
mov
stos
pop
jno
sbb
cmp
insb
mov
push
rdtsc
jo
xchg
and
jmp
pop
lods
pop
inc
jns
sbbb
sub
jno
mov
sub
dec
adc
adc
outsb
mov
cld
andb
in
jge
test
shlb
push
outsb
mov
adc
mov
fsts
mov
outsl
and
push
mov
jg
int3
inc
or
add
loop
loop
andb
movb
xchg
or
mov
insl
stos
shlb
push
xchg
mov
jbe
cmpsb
push
dec
movsl
inc
mov
scas
sub
xor
xchg
sub
xchg
clc
jbe
ret
push
int
push
fwait
cmpb
repnz
cmpsb
push
dec
andl
je
cmpsb
push
cmc
or
movsl
arpl
pop
mov
pop
popa
pop
add
mov
jne
xchg
push
das
pop
inc
repnz
xor
loopne
push
jmp
test
aaa
notb
and
sahf
int3
jp
push
shl
in
push
pop
add
mov
push
cli
jle
or
fdivrl
inc
xchg
sbb
push
jb
ds
fdivs
xor
jno
adc
push
mov
push
test
out
lds
mov
push
cmp
or
rcr
arpl
outsb
mov
add
std
or
and
hlt
in
into
lock
fcompl
clc
adc
xor
aaa
loope
mov
push
dec
adc
rolb
xor
mov
push
fdivrl
cmp
rcll
insl
xchg
inc
gs
test
dec
xchg
mov
out
pop
cmpsb
jb
inc
les
jp
xchg
andl
cmp
sbb
fstps
orb
xlat
rorl
lahf
cmp
cmpsl
rol
mov
pop
push
mov
inc
dec
in
out
and
and
out
nop
mov
test
fnstsw
jo
adc
pop
sbb
xor
mov
clc
adc
jne
pop
clc
jmp
pop
xchg
imul
call
xchg
xor
cmpsl
ss
ret
stos
pop
shll
xorb
ficoms
adc
loopne
iret
mov
mov
fisubs
and
push
jne
push
sbb
xor
xchg
ja
clc
cmpsl
sub
sti
adc
cmp
mov
mov
pop
pop
xor
ret
jo
dec
or
inc
xchg
sbb
pop
mov
fwait
sub
loope
scas
subb
pop
jne
cwtl
in
sbb
iret
cmp
cmp
cli
int
mov
jge
mov
inc
insb
icebp
push
sbb
aaa
clc
mov
mov
pop
jmp
mov
scas
mov
jb
sbb
push
jae
inc
push
pop
cmp
into
dec
sbb
sub
cli
cli
xor
std
push
and
cmp
fisubs
adc
enter
pusha
popf
sub
lret
push
and
add
push
popl
push
xor
xchg
loop
push
fistpll
and
loope
xchg
inc
inc
adc
sbbb
in
sbb
testb
and
cld
lock
fisttps
add
test
je
aam
push
dec
jb
cli
adc
sbb
lsl
bound
ljmp
in
inc
cs
xchg
sbb
ljmp
cmp
pop
jbe
pop
jns
loope
enter
sub
jnp
je
ja
or
pushf
ja
test
inc
in
jo
push
enter
sub
je
cli
inc
jb
ds
es
repz
incb
fdivrl
dec
orl
dec
iret
push
ljmp
xchg
mov
or
ds
aas
mov
pop
or
and
int3
cs
dec
out
pop
loop
loop
sub
push
and
sbb
lcall
dec
adc
add
jae
or
mov
pop
or
sub
jns
lock
bound
jmp
mov
xor
mov
std
into
int
push
dec
adc
and
inc
es
mov
aad
mov
jle
in
and
dec
add
cmp
imul
jecxz
push
push
mov
xchg
adc
jecxz
mov
sub
aad
faddl
xchg
lock
pop
cld
decb
sbb
or
xchg
sub
mov
pop
jb
sub
push
xorl
push
mov
or
rol
jo
rcll
stos
shlb
inc
int3
inc
jecxz
sub
lahf
xor
dec
mov
mov
aaa
sub
pop
call
add
lcall
jb
adc
sub
in
sub
addl
push
xchg
cwtl
lock
sub
push
popf
out
cwtl
ss
jmp
in
push
add
pop
addb
arpl
or
sbb
into
mov
fisubrs
jp
icebp
test
inc
inc
insl
nop
jnp
mulb
roll
lods
cltd
push
loopne
rolb
clc
add
lret
inc
inc
dec
insl
mov
add
xor
mov
stos
push
push
xchg
push
enter
jecxz
or
test
mov
sti
mov
repnz
dec
lcall
sub
fldt
ja
fsubrl
rcll
push
jbe
cmpsl
jp
frstor
mov
jne
sub
push
dec
or
clc
dec
jle
inc
imul
fsubr
xor
push
jbe
fwait
int3
sarl
call
outsl
pushl
pop
lcall
in
insl
lret
push
jl
cli
stos
shl
mov
xor
jbe
cmp
enter
or
or
cmpsw
adc
xchg
adc
pop
push
cmp
or
push
aas
jg
xchg
in
fwait
mov
jl
enter
and
divb
push
int
mov
jnp
ret
subb
xor
inc
cmpsb
or
ss
stc
sbb
mov
movsb
xor
in
addr16
inc
push
jmp
jb
mov
out
arpl
jbe
stc
or
add
lret
fs
in
xor
push
and
out
add
loope
inc
add
insb
rcrl
pop
mov
clc
in
outsb
out
or
jne
sbb
jmp
push
push
and
ret
lea
pop
jp
mov
jmp
icebp
bound
sbb
xor
push
add
test
pop
xchg
inc
adc
call
mov
in
insl
mov
pop
xor
subb
xchg
cmpsb
stos
and
jmp
leave
mov
mov
mov
stos
repnz
or
mov
pop
inc
lahf
nop
sub
and
xor
call
orl
mov
popf
or
xorb
xor
xor
movsl
dec
lret
dec
pop
adc
lcall
adc
cmp
or
lea
mov
imul
movsb
daa
push
faddp
mov
sbb
mov
cltd
bswap
shll
or
xchg
sub
mov
inc
cmp
ret
mov
cltd
nop
int3
data16
loop
insb
jp
loopne
sub
mov
clc
inc
cmp
jmp
lcall
cmp
sub
mov
icebp
cltd
dec
outsl
sbb
adc
test
xor
sub
or
rclb
cwtl
push
hlt
ret
gs
ljmp
adc
mov
lock
das
test
jmp
out
sbb
sub
xchg
sbb
cmp
subl
mov
inc
mov
and
out
or
stos
icebp
pop
loop
pop
inc
insb
sbb
icebp
rorl
xchg
pop
sbb
testl
pop
lahf
fnstcw
adc
hlt
cld
int3
loopne
jne
xchg
xor
mov
and
in
push
mov
scas
adc
cmp
out
push
test
mov
shlb
jns
xchg
fmul
gs
pop
outsl
mov
inc
psrlq
nop
cs
cld
repnz
inc
jmp
loopne
mov
mov
int
pop
movl
shlb
adc
dec
push
in
icebp
push
mov
jp
pop
hlt
scas
movsb
xchg
xor
inc
jo
fldt
or
or
mov
sbbb
fisttpll
popf
adcb
pusha
or
jns
daa
repz
fdivrl
cs
dec
inc
jg
adc
popl
jmp
or
fdivl
fistpll
loopne
into
pop
aas
fnstcw
fldcw
mov
inc
cmp
pusha
or
and
stc
pop
inc
mov
test
inc
outsl
fcompl
stos
pop
sbb
movups
cs
sarb
scas
add
shrb
aam
push
dec
sbb
sarb
adc
std
mov
inc
xchg
xor
daa
push
add
ret
fisttpl
adcb
push
or
lods
in
enter
adc
popa
mov
adc
dec
mov
mov
push
adc
pop
aaa
jle
xchg
packuswb
shrb
pop
ret
adc
aas
jbe
cli
adc
lock
xchg
leave
add
lahf
cwtl
mov
cmp
lcall
adc
xchg
outsb
aaa
pop
push
xor
filds
cli
out
or
add
adc
outsl
ficomps
cmpsb
cmp
jno
sbb
hlt
incl
jp
popf
popf
call
dec
sti
inc
jae
hlt
xchg
dec
pop
mov
jae
xchg
push
mov
add
and
or
mov
push
aas
aad
dec
jno
dec
ss
push
and
neg
stos
das
and
cmp
fsubl
rdmsr
ret
cwtl
push
test
sbb
cmc
scas
daa
pop
xor
mov
fs
jae
movsb
ret
pop
and
push
ret
std
outsb
and
bound
clc
push
mov
test
cmc
flds
add
add
or
xchg
ret
dec
ret
addr16
sti
std
sub
mov
add
jae
testb
out
jecxz
or
adcl
out
xchg
adc
mov
pop
jns
shl
ds
or
jns
call
mov
sar
xchg
mov
mov
inc
or
push
imulb
std
repz
and
leave
jmp
add
dec
clc
xor
clc
lods
xorl
cmpsl
sbb
aaa
pop
fs
loop
jns
hlt
mov
mov
mov
jg
fs
pop
fisubrl
sub
mov
xchg
jp
jg
push
pop
pop
in
jae
mov
fistpll
aad
scas
rcll
push
add
hlt
imul
adc
adc
int3
adc
cmpsl
aam
xor
mov
mov
cmpsl
repnz
inc
or
shlb
and
jp
xor
mov
dec
adcl
mov
mov
push
push
or
cmpsb
jecxz
in
adc
shlb
test
in
loop
aam
mov
sar
push
lds
mov
imul
jnp
lock
in
xor
cmp
adc
loopne
adc
movsb
inc
xchg
filds
roll
sbb
pop
adc
xchg
mov
int3
jb
xor
sti
insl
mov
in
test
lods
cli
repnz
dec
or
inc
add
dec
roll
cmpsb
pop
dec
pop
mov
mov
scas
or
jmp
xchg
or
mov
aaa
mov
jle
test
in
and
mov
push
or
mov
xor
fisttpl
ss
cld
mov
mov
stos
inc
fimull
nop
mov
add
add
pop
cmpsl
xchg
outsb
sbb
inc
push
xchg
mov
fistps
sbb
jl
mov
out
jmp
push
cmc
sahf
sub
loopne
jb
les
not
nop
int3
outsb
push
gs
add
push
ljmp
idiv
and
fwait
divb
fisubrs
push
lods
xchg
mov
mov
hlt
dec
gs
fcompl
rorl
cmpsb
pop
popl
mov
mov
lods
inc
divl
mov
adc
gs
adc
cs
scas
imul
bound
and
xchg
sub
mov
std
inc
out
sarb
arpl
sub
push
xor
push
das
jmp
mov
jl
mov
cmp
dec
xchg
sub
inc
mov
aaa
popa
xchg
pop
roll
rorl
in
out
jb
stc
push
fcmovbe
scas
sbb
xor
adc
and
cmpsl
cmpsb
xchg
cmp
cmc
or
repnz
pop
pop
mov
push
cwtl
sbb
incb
xchg
fscale
popf
push
push
sbb
sbb
lock
mov
mov
and
cld
mov
push
pop
jge
mov
jbe
fiadds
pop
data16
js
sub
jbe
cmp
stos
loope
dec
xor
jo
sub
nop
test
push
mov
loop
add
nop
mov
pop
lcall
scas
xlat
hlt
pushf
je
jne
pop
mov
push
test
mov
jp
in
sbb
xchg
mov
ret
ja
sub
inc
jno
xor
ss
mov
icebp
testb
sub
fldl
leave
mov
xor
ljmp
inc
mov
xchg
daa
rorl
mov
jnp
jmp
iret
push
mov
and
fisubs
dec
addr16
push
ret
cltd
add
pop
jmp
push
adc
adc
les
test
out
stc
daa
cmc
jne
pop
inc
daa
shlb
jge
insb
test
mov
cs
loopne
mov
fisubl
pop
sub
dec
add
add
mov
ret
aaa
imul
pop
pop
mov
subb
cmpsb
lods
inc
and
mov
or
test
in
je
mov
mov
dec
and
es
add
pop
jp
movsl
jb
sub
push
cmpsb
bound
inc
or
addr16
push
sub
test
je
or
cwtl
loopne
repz
scas
pop
rclb
nop
mov
nop
mov
outsb
sub
mov
daa
fwait
mov
jmp
lea
sbb
fcoms
dec
loope
xchg
cmp
or
mov
add
arpl
xchg
sub
fdivrl
fsubrp
hlt
fs
jbe
test
out
leave
pop
loope
lds
xchg
call
jb
sub
or
adc
jmp
adc
imul
sbb
cmp
outsb
cwtl
and
cmpsb
mov
scas
imul
fcoms
scas
mov
mov
add
les
mov
xchg
lret
and
add
into
ja
sti
call
icebp
or
pop
idiv
dec
add
or
lret
enter
cwtl
dec
or
push
pop
call
inc
xor
xor
sub
cmpb
jnp
add
out
xchg
loope
sbb
jecxz
jle
xchg
arpl
jl
pop
lret
xchg
cmp
dec
xchg
test
sbb
aam
dec
mov
cli
jg
pop
or
dec
push
cmp
sub
test
out
sbb
pop
jno
mov
jno
in
addb
in
cmp
and
not
stos
gs
push
mov
xchg
sbb
sbb
das
push
data16
inc
push
or
inc
pop
lea
push
sahf
ret
les
lea
add
aaa
enter
dec
idiv
dec
lds
and
test
mov
pop
adc
pop
xchg
dec
add
stos
in
pop
int
lret
les
fwait
xor
test
lcall
inc
mov
cmc
stos
jo
jb
mov
int3
std
xchg
jmp
fcomps
test
pop
out
pop
pop
adc
xchg
aam
and
fimuls
call
dec
xor
mov
mov
sti
loop
xchg
outsl
divb
push
fisubl
addb
stc
xchg
and
push
dec
inc
rcr
xor
es
js
test
sahf
ja
int3
test
loopne
shlb
fdiv
dec
and
mov
add
pop
mov
out
xchg
sub
xor
fnstenv
push
add
in
inc
pop
pusha
pop
mov
repz
push
inc
ficomps
cwtl
mov
arpl
les
push
fldenv
xor
or
mov
xor
push
cs
shl
in
arpl
add
js
cmp
pop
push
lods
dec
repz
sbb
rolb
cmpsl
fwait
or
adc
cmp
in
stc
xchg
cmc
jge
lods
and
daa
or
nop
aad
xchg
push
cmp
adc
test
rol
cld
bound
jno
int
loopne
adcb
pop
pop
mov
xchg
mov
pushf
into
je
sbb
inc
or
ret
adc
dec
sub
jle
push
mov
sub
add
mov
jae
xchg
mov
push
pop
sbb
popf
mov
push
les
pshufw
jae
faddl
sbb
aaa
popf
fistpl
jae
push
add
test
fwait
xor
lahf
out
in
loope
jle
test
xor
sub
add
iret
fadd
int
loopne
icebp
mov
aad
sub
xchg
mov
imul
mov
lcall
sbb
mov
inc
stos
push
frstor
out
arpl
mov
xchg
shll
lret
jne
mov
jno
hlt
test
xchg
mov
ss
jne,pn
add
adc
stos
xor
add
call
xchg
jae,pt
and
testb
mov
sub
xor
fcmovnb
cmp
xor
mov
sbb
daa
lock
pop
inc
inc
add
jb
jbe
inc
sbb
loope
std
xor
enter
adc
lock
jecxz
pop
lahf
push
inc
scas
lcall
cwtl
inc
add
xlat
or
pop
and
jp
dec
in
sub
enter
in
pop
mov
and
push
stc
outsb
dec
and
xchg
divb
and
call
jno,pt
push
pop
popa
fdivrs
fdivrl
adc
sbb
push
jp
insl
divb
pop
daa
push
test
sbb
sub
mov
pop
aaa
push
sti
add
sti
icebp
rcl
int
lahf
in
add
mov
adc
pop
jnp
mov
cmp
cmpsl
push
ja
pop
add
dec
fwait
adc
insb
les
adc
jmp
or
sbb
adc
cmp
loop
cmpsl
mov
fwait
in
fimuls
bnd
ds
daa
out
add
dec
nop
push
inc
test
lcall
mov
lcall
dec
out
std
jbe
adc
mov
cld
cmp
sbb
mov
sti
sahf
lahf
push
mov
xor
adc
pop
out
sub
jmp
inc
out
and
sub
jno
pop
cmpsl
xor
ljmp
cmp
jmp
and
les
stos
daa
out
xor
ret
add
or
pop
inc
clc
sahf
adc
popf
aaa
pop
jne
and
inc
sbb
out
dec
repz
sub
mov
push
shlb
hlt
popf
lds
mov
mov
data16
cmp
pop
cvtpi2ps
cmpsb
clc
outsl
adc
es
std
ds
std
inc
add
test
cmpsb
icebp
test
push
lret
xchg
adc
lret
clc
adc
xchg
je
test
sti
push
leave
inc
fucom
inc
inc
mov
or
test
rcll
and
xor
xor
push
daa
fidivl
mov
jp
push
dec
fcomps
jo
mov
adc
dec
xchg
xchg
stos
pop
pop
cmp
cs
push
idivl
movsb
push
mov
cmp
jbe
arpl
lcall
xchg
fsubr
xor
jmp
cmp
jg
stc
push
inc
xor
test
dec
sbb
mov
mov
xchg
cli
ljmp
scas
mov
nop
jns
mov
mov
mov
jno
mov
jnp
dec
pop
mov
xor
or
and
inc
inc
or
sub
or
xchg
pop
mov
mov
jo
aas
mov
and
mov
xchg
mov
jo
inc
popf
cs
pop
jno
add
rcrb
inc
mov
xchg
xor
movsl
or
gs
pop
pushf
jne
bound
lods
test
cmp
lret
pop
lahf
xchg
adc
ret
sarl
inc
filds
adc
jl
sahf
sbb
add
mov
xor
xorps
jecxz
sti
pop
leave
jl
les
test
and
pop
mov
mov
cmp
xchg
addr16
push
inc
stc
call
lds
xor
sbb
das
xchg
hlt
imulb
sbb
inc
arpl
push
mov
dec
jg
and
into
mov
push
jb
les
dec
dec
hlt
cmpsb
push
mov
adc
jae
dec
and
cmp
push
or
pop
lret
aad
loop
ret
ja
lods
inc
cli
outsb
bound
xchg
sbb
ja
jbe
movsb
sbb
pop
adc
mov
pop
shl
popf
repz
sbb
int
mov
jbe
ljmp
fnstenv
mov
cmp
cmp
clc
cmpsl
mov
cmp
fdivrl
jo
mov
dec
sbb
xlat
lcall
push
loopne
mov
mov
mov
nop
dec
jne
lret
mov
sbb
ret
cmpsb
aas
arpl
imul
fildl
and
aad
lret
cli
xchg
das
test
pop
jmp
adcb
cmc
bound
sub
dec
and
rcll
mov
loopne
in
imul
inc
mov
imul
sbb
into
cs
inc
stos
jmp
and
aaa
or
movsb
adcl
xor
dec
clc
cmp
or
pop
push
aad
mov
nop
ljmp
jle
pop
insl
test
jno
sub
mov
adc
mov
scas
in
into
xor
repnz
cmp
push
or
pop
xchg
lret
daa
loopne
push
add
jbe
imul
push
pop
test
pushl
mov
int
lretw
test
test
cmp
jno
xor
stc
or
sahf
aad
lret
psrld
adc
sub
and
imulb
std
hlt
inc
cmp
mov
push
jg
cmpsl
fdivrs
cmp
sbb
ja
fstps
push
add
mov
lea
je
js
faddl
adc
xchg
xchg
xor
jb
sub
adc
inc
and
mov
cmp
in
sti
dec
push
out
pop
xchg
shlb
mov
dec
je
xchg
addl
inc
ds
fmul
add
xchg
movsl
mov
pop
inc
dec
xor
adc
xor
movsb
push
push
test
inc
add
js
popa
in
stos
or
nop
loope
and
inc
adcb
push
popa
sub
jmp
repnz
and
pushf
out
test
jb
ja
lock
mov
lcall
notl
pushf
es
add
or
xor
into
push
fsts
add
call
test
fadds
adc
xor
pushf
jg
daa
cld
pusha
xchg
jne
xor
xchg
enterw
inc
jge
fidivl
fs
cmp
push
insb
mov
sub
adc
out
adc
loopne
repnz
das
stc
aas
jle
sbb
cltd
iret
rorb
xchg
push
push
out
sbb
mov
inc
loop
lock
int
ret
imul
and
scas
lods
in
push
or
dec
mov
jns
add
and
and
pop
xlat
xchg
loope
jnp
cmpsl
bound
call
stc
mov
gs
pop
pop
push
sub
xchg
cmpsl
int
repnz
mov
push
cmp
xor
xor
call
imulb
arpl
out
lahf
pop
icebp
pop
jmp
mov
xchg
push
lahf
jb
es
loop
aad
inc
popf
push
repnz
jb
xlat
repnz
and
cmp
rorl
cs
int
xor
and
lock
divb
mov
cwtl
adc
imul
mov
or
cmpsb
cmp
cmp
test
popf
gs
icebp
andb
sub
repnz
stos
inc
add
pop
popa
int
imulb
jle
adc
int3
lea
fisttpl
xchg
sub
push
lahf
das
push
adc
jecxz
mov
clc
insb
mov
jne
fstps
sbb
jge
call
fldenv
and
pop
mov
sub
xorb
popa
inc
pop
or
daa
imull
fwait
cltd
mov
xorl
dec
sub
xor
push
fcmovbe
in
fidivrs
xchg
ds
and
pushf
aam
and
mov
js
inc
push
sbb
leave
loope
add
dec
cwtl
sar
push
push
mov
popa
movsl
xor
or
inc
push
arpl
inc
fdivrl
ljmp
lods
aas
sbb
testl
xchg
adc
sbb
into
hlt
or
je
cld
push
sbb
or
icebp
popf
in
bound
push
cltd
fildl
fdivl
lcall
ja
scas
ret
jecxz
pop
jl
sarl
jle
aam
roll
push
sub
mov
test
mov
xchg
dec
mov
fdivl
out
ja
es
jbe
cmp
jg
nop
or
loopne
bound
fdivr
dec
test
fwait
es
out
icebp
iret
jmp
mov
jno
aaa
or
insl
ljmp
xchg
cmp
cmc
out
cmp
pop
cltd
or
push
in
and
sbbl
rcr
add
mov
xchg
mov
iret
sarb
sub
cmp
jo
jg
das
cmp
clc
lcall
jle
scas
lahf
cmp
xchg
mov
push
jg
xchg
fidivrl
mov
subl
enter
pop
insb
addr16
xlat
cld
rorl
test
bound
dec
sarl
push
pop
and
pop
jb
jl
jp
arpl
aam
xor
mov
mov
shrb
in
jmp
or
aaa
lds
mov
add
dec
pop
loopne
jo
and
pop
fisttpll
inc
cmpsl
or
or
subb
movl
sbb
test
mov
ljmp
andb
fiaddl
sahf
mov
test
aas
xorl
lahf
out
js
adc
mov
dec
xchg
test
aas
ret
shll
scas
insl
lret
pop
je
mov
ficoms
rolb
cmp
add
push
jbe
inc
adc
sbb
rcrb
lock
and
cmp
sarb
maskmovq
notl
or
fdivr
dec
je
or
jge
mov
movsl
in
or
mov
outsb
lcall
test
jb
clc
dec
fisttpll
adcl
test
adc
sub
lock
test
test
push
repz
add
lahf
and
pop
xchg
mov
loop
sub
inc
mov
add
add
xchg
insl
insb
cmpsb
dec
daa
lea
aam
add
add
popa
sub
cmp
loopne
jge
fildll
fs
mov
mov
decb
daa
xchg
pop
inc
xchg
enter
iret
sbb
xor
mov
ss
aad
mov
in
shrl
pushf
dec
pop
daa
add
inc
mov
ret
inc
or
out
cltd
mov
mov
je
js
jg
mov
in
push
push
popl
dec
mov
inc
ds
adc
scas
orl
mov
or
inc
push
scas
push
in
dec
fcomip
int
xchg
mov
loop
retw
shlb
inc
cmp
dec
rcrl
and
pop
jge
in
xchg
adc
out
inc
inc
neg
mov
cltd
mov
popa
fs
pop
xchg
cs
pop
pop
aaa
push
rolb
ret
loopne
andl
shrb
movsl
mov
xchg
inc
call
or
dec
testb
xchg
js
adc
jmp
mov
fptan
sub
or
out
jl
mov
jle
in
fbld
ret
pop
and
sub
lds
xchg
mov
subb
orl
pop
cmpsl
push
into
std
mov
insl
repz
push
push
dec
movsb
into
cmp
mov
les
mov
push
add
cli
insl
dec
cmp
lds
out
fsubrl
or
out
jp
xchg
loop
jo
push
mov
inc
add
mov
xor
repz
mov
jo
jmp
and
inc
add
and
cmpsl
js
in
fbld
test
stos
insl
inc
lcall
lahf
mov
scas
test
pop
add
sbb
mov
mov
pop
adc
pop
push
jl
les
sahf
test
inc
cmpsl
rolb
pop
lea
popa
repnz
lea
mov
cmpsb
jb
push
push
push
adc
mov
sahf
sbb
fbstp
xchg
shlb
mov
out
cmpsl
inc
pop
dec
aad
push
push
out
jno
and
push
push
stos
jmp
jno
sub
push
pop
lds
pop
pop
sub
ljmp
arpl
pop
mov
inc
xchg
fadds
inc
clc
pop
jecxz
mov
out
sub
dec
js
xor
and
jge
sbb
adc
push
push
lock
into
insb
sbb
inc
daa
cmp
or
lock
lods
lods
or
sbb
sbb
leave
pop
add
loope
lods
mov
xchg
lods
or
imul
sti
addr16
or
dec
pop
pop
cmp
pop
push
data16
arpl
push
jecxz
aaa
fidivrl
fwait
aas
addr16
xor
iret
in
dec
imulb
sarb
push
mov
dec
lret
jne
movb
cmp
int
pop
nop
jge
mov
test
stos
popa
mov
xchg
push
call
adcl
pop
pop
xchg
paddsb
rcrb
sub
popa
imul
movsb
mov
xchg
icebp
or
in
js
jl
orl
xchg
mov
mov
mov
cmp
aad
jno
rcr
sbb
ret
xor
jmp
arpl
movsb
ss
imul
and
add
loopne
test
mov
shll
subl
lret
push
sbbb
sub
ds
push
fstp
sbb
and
add
or
insb
ljmp
push
mov
lds
and
fnstsw
notb
jl
aas
push
inc
add
das
fs
dec
or
les
subl
pandn
and
and
xchg
std
push
jmp
mov
mov
xchg
adc
xor
fnstenv
cmpsl
into
leave
or
push
fistps
mov
sbb
ljmp
outsl
add
jg
mov
gs
fsubrl
sub
aad
pop
repnz
mov
pop
inc
ret
xor
add
imul
mov
dec
loope
and
lock
cmp
push
add
jp
jmp
cmc
outsl
jecxz
or
mov
leave
mov
cmp
lret
or
lods
xchg
xor
and
bound
sbb
popf
cli
add
pop
sbb
or
out
cmpsl
clc
mov
lahf
dec
sub
cmp
hlt
sub
jp
movsb
jmp
mov
mov
sbb
add
lcall
rep
cmpsb
mov
ja
mov
xchg
test
ja
loop
dec
pushf
js
aad
lods
negl
add
scas
jg
pusha
dec
pushf
or
outsl
repz
push
loopne
std
mov
sub
movsl
mov
lods
xchg
push
push
lahf
pop
cmp
xor
and
pop
out
sbb
cmp
xor
inc
repz
xchg
pop
clc
test
cmpsb
or
repnz
jb
dec
xor
mov
rcrl
dec
cmpsl
sbb
inc
cwtl
push
incb
inc
sbbb
dec
pop
out
and
mov
and
dec
shl
xchg
pop
add
rolb
xorb
jb
pop
aaa
es
and
dec
mov
popf
fistpll
xchg
movsl
mov
mov
and
pop
daa
les
pop
sub
call
xor
dec
shrb
mov
jae
xor
sub
in
inc
xlat
xor
pop
shl
ficompl
pushf
sbb
mov
push
out
mov
cmp
add
xchg
inc
cmpl
lahf
jae
push
jno
orl
xchg
and
mov
stos
push
jle
dec
cmc
addr16
sbb
mov
adc
push
les
into
sub
arpl
inc
dec
push
fwait
scas
sub
add
and
test
dec
xor
adc
xchg
cmp
sbb
mov
loope
outsl
nop
or
enter
shll
imulb
push
and
push
sub
loop
lahf
push
inc
insl
xchg
sbb
ljmp
fcomp
push
jmp
push
mov
gs
pushf
add
mov
inc
xchg
in
pushl
js
sub
mov
mov
aaa
mov
in
push
fstps
lret
ret
push
ja
sti
push
cmpsb
push
fisttpll
movsl
pop
jns
test
sysenter
shl
addl
mov
inc
outsl
fcompl
lret
xchg
push
mov
or
xchg
jp
test
rorb
sbb
cltd
xchg
mov
cmp
jge
jns
fidivl
daa
xchg
stos
call
shrb
notb
jno
jbe
mov
in
lods
xorl
mov
pop
push
lock
and
mov
add
ret
bsf
inc
sub
cmc
mov
ret
push
ss
inc
insl
inc
xor
aam
push
jnp
pop
pop
xlat
sbb
push
in
lret
mov
movsb
int
outsl
jmp
adcb
sub
das
push
push
mov
push
lahf
push
lock
mov
inc
cmp
int3
call
inc
and
jns
push
add
xor
pop
jb
fcoms
fsubl
and
aas
stos
cmc
lods
stc
and
mov
jne
dec
mov
gs
add
mov
xchg
sbb
popa
insl
mov
enter
imul
shrb
jbe
ret
and
pushl
cmp
int
in
lahf
mov
cmp
pop
inc
push
jns
outsb
ljmp
imul
inc
test
pop
cmovle
lock
mov
push
mov
push
jle
pop
out
and
mov
inc
mov
xor
out
jle
sbb
or
gs
das
jne
mov
dec
and
ss
and
shl
rcrl
pop
and
scas
loope
fdivs
pop
sub
mov
scas
inc
jne
cmp
jbe
xchg
sub
xchg
mov
cli
xchg
adcb
ret
mov
scas
push
jl
mov
xchg
in
pushf
push
or
mov
ficoms
and
pop
pop
jmp
in
adc
add
imul
mov
adc
push
aas
push
dec
inc
or
mov
and
dec
mov
imul
int
scas
shrl
push
xchg
cmp
js
arpl
lea
dec
xchg
movsl
cmp
lret
mov
sahf
lcall
xor
cltd
aaa
inc
inc
pop
jle
jg
fs
inc
aam
or
adc
mov
imul
out
inc
test
push
jns
repz
cmc
jp
sub
xchg
leave
dec
lods
xor
xorb
aas
sbb
cmp
cmp
shr
or
aam
and
pop
push
pop
ja
pushf
dec
loop
ss
dec
loope
dec
aam
xchg
and
out
fidivrs
sub
out
xchg
imul
lea
jo
outsb
rcr
add
or
repnz
mov
dec
and
push
sbbb
jb
mov
fisttps
hlt
xor
sub
insb
roll
or
aaa
or
mov
pop
or
push
iret
mov
nop
mov
xor
cld
or
in
pop
and
sub
add
dec
dec
stos
push
sub
stos
adc
pop
xchg
into
popf
xchg
clc
insl
arpl
lock
leave
dec
out
jmp
rorl
and
xor
adc
xchg
sbb
mov
push
pop
adc
icebp
jp
lea
scas
loop
adc
mov
cmpl
test
enter
jns
sarl
filds
mov
hlt
leave
jbe
sbb
fwait
stos
push
cmp
lea
xchg
jno
inc
lret
mov
aam
dec
aad
push
mov
mov
orb
fwait
addr16
dec
sub
mov
fbstp
cs
cwtl
jge
sbb
fdivs
les
inc
cmp
ds
mov
out
push
lcall
push
mov
ja
jle
mov
gs
sub
out
ret
xchg
dec
inc
or
in
test
lret
dec
je
cmp
leave
sub
mov
fisubl
push
test
dec
roll
push
push
mov
mov
push
adc
inc
sahf
push
daa
test
mov
ret
popa
jle
in
dec
popf
pushf
je
fisubrl
ret
add
fs
mov
push
loopne
dec
jp
cwtl
mov
jl
mov
pop
pop
inc
inc
jecxz
test
adc
outsb
outsl
es
nop
ret
inc
cmp
push
cs
cmp
cwtl
aad
pop
xor
rcrb
cmp
jp
sub
arpl
xchg
mov
xorb
stc
push
clc
flds
add
mov
add
addr16
pusha
in
fimuls
mov
push
mov
sub
mov
dec
mov
ds
jnp
xchg
fisubrl
cltd
xor
jle
inc
inc
int
out
notb
int3
xchg
clc
incl
push
das
sbb
cmp
addl
cmc
push
or
cmp
lret
cmpsl
rorb
pushf
xchg
fcompl
out
jae
jns
xor
and
repnz
daa
sub
mov
inc
ja
imul
lea
or
add
push
xlat
mov
adc
inc
xchg
jecxz
adc
mov
inc
mov
repnz
out
pop
dec
ljmp
or
das
data16
push
and
mov
push
and
nop
xor
cs
cli
jle
mov
mov
dec
je
mulps
sahf
dec
xorb
jmp
pop
sarb
sti
fstpl
push
sar
cli
pop
jge
mov
push
inc
es
xchg
call
dec
mov
cmpsb
clc
push
push
jg
loop
insl
stos
cmp
mov
add
in
fmull
cmpsl
push
sub
mov
les
nop
into
xchg
rcll
xor
push
adcl
push
add
mov
iret
xor
xchg
mov
mov
jo
sub
jp
aam
dec
dec
sub
xchg
out
add
pop
sub
mov
sub
repnz
pusha
xor
jle
js
fstps
decl
mov
sbb
daa
decb
cmp
inc
insb
cwtl
lods
fbld
dec
mov
in
xchg
pop
push
rcll
mov
ffree
mov
push
icebp
mov
cwtl
and
ret
iret
inc
push
dec
imul
loope
fisttpl
fistpll
jno
insb
xchg
inc
clc
idivb
in
adc
pop
mov
pop
jge,pn
ret
movsl
scas
pop
int
bound
push
fcmove
push
xchg
sub
andb
xchg
and
add
stos
add
cmp
ljmp
repnz
mov
pop
sbb
jecxz
in
sbb
sti
ret
and
pop
test
sbb
push
xor
add
xlat
mov
xchg
mov
xlat
test
cmc
xor
lea
cmc
push
imul
call
out
ret
jno
xchg
push
mov
sub
ja
sub
sub
jmp
or
pop
and
arpl
arpl
jbe
sbb
cwtl
adc
pop
push
ss
sbb
xor
lea
aas
aas
dec
mov
das
pop
into
shll
repz
mov
pop
fsubl
cmpl
dec
dec
jecxz
jg
test
fsts
sarl
and
xorb
das
cmp
xchg
stc
rol
cmpsb
mov
sub
xchg
add
cmp
loopne
sbb
and
fstps
scas
rcrb
fstl
ss
pop
sub
dec
ljmp
push
imul
out
sub
loope
rcrb
push
lods
and
pop
mov
cmp
jmp
enter
sarb
sub
into
xor
sarl
in
add
iret
loopne
cmp
jns
loope
test
mov
mov
and
xor
js
xchg
jb
test
mov
mov
call
lock
orb
xchg
xor
cld
aas
sub
pop
lock
sub
icebp
inc
insl
in
adc
and
ds
push
addb
ret
mov
or
loope
dec
adc
push
hlt
fnsave
sub
not
lea
mov
mov
cmp
addb
lds
popf
fcom
aas
inc
push
and
flds
mov
dec
jbe
cmpl
je
mov
mov
mov
cltd
faddl
cmp
xor
xchg
add
xchg
cli
dec
pop
cltd
rcrb
sahf
cld
and
xchg
ljmp
sahf
lret
scas
pop
add
ret
xchg
ja
inc
mov
rcl
inc
cld
sub
xchg
movsb
dec
and
and
push
loope
in
fildl
and
inc
pop
lock
sub
cwtl
pop
loop
mull
push
test
data16
xchg
jmp
jo
mov
nop
icebp
adc
xor
jl
xlat
adc
or
xorb
call
ja
mov
xor
push
js
sub
jb
mov
lea
pop
sbb
sbb
aad
jb
stos
out
xor
cs
ljmp
mov
jge
daa
out
cmp
movsl
pop
mov
pop
orl
in
vmaxss
sbb
adc
and
lss
rorl
inc
pop
bnd
mov
out
lcall
popa
pcmpeqb
movsl
add
jnp
insb
mov
push
and
xlat
out
addr16
mov
aam
loop
nop
push
test
jno
push
movsl
and
push
jge
add
out
gs
cltd
test
jl
mov
cwtl
dec
pop
fs
push
mov
push
push
xor
aas
iret
add
out
clc
inc
jge
dec
pop
add
mov
shll
and
data16
or
mov
aad
mov
pop
repz
decl
cmp
aam
sub
shrl
cs
test
sub
scas
and
cmp
movb
jae
jae
out
lcall
dec
stos
ret
sub
or
push
push
dec
xchg
test
enter
mov
inc
cmp
or
jle
das
mov
es
cmp
and
mov
mov
push
icebp
push
and
fsubl
jae
aaa
test
push
icebp
dec
and
push
mov
outsb
xchg
fdivr
or
jp
push
mov
or
push
jge
mov
inc
mov
cmp
int3
cmpsb
outsb
stc
sbbl
mov
mov
iret
repnz
adc
mov
or
cmpsl
cltd
das
jg
inc
out
xchg
add
xchg
adc
sub
out
fistps
push
scas
pop
std
cmc
test
aad
cmp
cmp
push
jle
fldenv
loop
js
movsl
stos
xchg
test
push
pop
repz
cltd
pop
cmc
inc
dec
sub
or
outsb
sub
nop
mov
imul
pop
out
xorb
sbb
cmp
xchg
and
add
imul
jb
sub
hlt
ret
push
aaa
push
lock
mov
push
cmpsl
sti
ja
mul
jmp
push
in
inc
mov
movsl
cmp
sbb
cmp
sub
iret
xlat
add
js
xchg
cmp
xlat
scas
repnz
add
ret
sbb
mov
pop
lahf
push
icebp
inc
pushf
nop
test
je
sub
out
das
adc
addb
fildl
int3
jmp
xlat
int3
testb
xor
lcall
pop
nop
jl
or
adc
dec
das
rorl
out
pop
fwait
sub
test
dec
adc
xor
add
pusha
dec
mov
sub
pop
lret
pop
mov
mov
stos
cmp
push
addr16
add
shrb
mov
gs
nop
cmc
loopne
and
push
call
addb
sahf
dec
mov
add
and
sub
push
mov
jl
popf
cli
add
jmp
pop
mov
xor
xor
dec
xchg
test
mov
inc
dec
mov
pop
pop
leave
sub
or
aas
shlb
xchg
jge
adc
fstl
test
inc
jns
dec
push
call
mov
xlat
mov
push
das
aam
mov
pusha
hlt
lahf
cld
lock
popl
mov
pop
ds
push
lods
testb
pop
sub
pop
scas
in
xchg
inc
sbb
stos
xlat
push
out
cmp
lods
pop
pop
outsb
jae
mov
xor
xchg
mov
bound
insl
lds
mov
scas
jns
and
scas
mov
sbb
das
xor
imul
stc
add
and
cmp
adc
pusha
in
mov
adc
into
pop
lock
and
jns
stc
cmp
mov
and
addr16
sub
movzwl
insb
std
enter
ss
imul
inc
inc
ror
jbe
in
sub
mov
les
loope
cltd
test
push
ss
mov
test
lods
fwait
dec
inc
scas
in
les
lret
xchg
dec
fistl
hlt
loop
mov
scas
loope
or
fnstcw
std
int3
mov
jbe
push
mov
in
fwait
stos
mov
mov
cltd
push
jns
testb
pop
add
mov
insl
pop
mov
js
push
mov
mov
adc
push
adc
inc
stos
mov
mov
rep
dec
jg
dec
roll
jns
insl
dec
insl
std
dec
fmulp
aas
mov
push
mov
shl
jb
in
cmpsl
adc
lea
vsubsd
pop
les
aad
dec
sbb
mov
mov
cwtl
shll
sub
ret
lahf
arpl
ja
rolb
inc
ljmp
mov
xorl
push
jmp
lea
aad
invd
push
push
jo
mov
sub
cmp
fiaddl
xchg
mov
jb
sbb
test
aam
dec
lods
scas
sbb
ljmp
lock
lods
cmp
out
xor
inc
xor
dec
fsubl
push
push
mov
mov
pop
daa
cmpsl
lahf
imul
xor
js
out
int
push
fs
or
push
push
mov
lret
jne
dec
push
dec
cli
xchg
or
sub
xchg
sahf
xchg
or
add
mov
mov
ret
inc
daa
ss
js
in
sub
xor
xchg
cld
xor
pop
mov
pop
loopne
test
je
pop
cltd
dec
loope
xor
or
test
out
jno
pop
cmp
mov
pop
lods
shl
pop
in
or
cmp
mov
jns
pop
iret
in
cmp
add
sub
mov
addr16
shrb
std
sar
pop
pushf
inc
lahf
fnstsw
insl
lahf
mov
in
jb
pop
ret
pmaxsw
leave
xor
out
inc
xchg
pop
jns
cmp
flds
sub
jns
arpl
and
add
inc
and
enter
and
dec
mov
dec
stos
sub
mov
sub
dec
jp
adc
jns
ret
cltd
jmp
pop
es
lods
test
or
mov
cmp
popf
das
clc
and
aad
pusha
scas
cmp
hlt
dec
loopne
in
popf
mov
dec
cmp
sahf
adc
insl
mov
aad
ret
pushf
jns
cld
push
mov
pop
push
sti
icebp
mov
or
out
push
mov
xor
mov
jmp
mov
jl
pop
lcall
push
std
xor
and
cmp
ljmp
loop
test
bound
sub
movq
pop
sub
and
xchg
pop
xchg
jns
xchg
mov
pop
lea
scas
in
mov
rcrl
xchg
add
sub
setne
or
sbb
insl
push
cmp
dec
mov
push
mov
repnz
pop
or
or
mov
pop
cmp
ss
push
int
je
mov
pop
mov
pop
sti
dec
hlt
push
test
cli
call
cltd
adcl
jno
sub
sub
inc
in
les
add
sbb
call
pop
adc
dec
insb
fstps
stos
fisubl
aam
hlt
test
rorl
cmp
xor
sub
lcall
iret
sub
add
rol
fnstsw
cwtl
stos
sbb
in
cmp
or
mov
rorl
test
jns
dec
push
push
xchg
movsb
mov
and
jg
in
dec
or
sbb
loope
insl
js
iret
sbb
nop
add
sbb
data16
outsb
push
shrl
cltd
or
icebp
lds
aad
movsb
inc
mov
inc
fimuls
orb
jno
sub
cmp
sub
cwtl
xchg
cmpsb
ficoml
pop
pop
cs
xchg
xor
lds
movsl
decb
jecxz
xlat
dec
add
clc
gs
xchg
pop
mov
pop
xchg
dec
ja
pop
or
cmp
out
repz
pop
testl
xor
and
pop
andb
cwtl
aad
mov
andl
subl
fmull
ret
mov
bound
loope
sbb
add
mov
inc
hlt
cmp
ja
xor
arpl
fists
jecxz
or
rcll
cmp
icebp
ret
cmpsl
insb
inc
ror
add
fs
in
dec
push
cmp
out
or
cld
push
pop
xor
sbb
cmpsl
inc
push
gs
dec
imul
mov
push
sbb
pop
adc
in
and
dec
div
xor
pop
sbb
mov
pop
jl
cmp
xlat
adc
mov
cmp
mov
rcll
xchg
pop
scas
xchg
sbb
dec
sbb
rcll
ljmp
cltd
lahf
xor
pop
lcall
dec
cmp
jne
push
or
jg
mov
mov
add
sbb
xadd
push
add
das
add
popa
pop
out
pop
cmc
mov
fwait
outsl
aam
std
aad
fiadds
leave
mov
das
rolb
push
push
call
mov
mov
out
test
mov
ret
pop
leave
cmp
dec
push
ret
aad
inc
pop
loope
sbb
fstpl
cs
call
or
scas
out
mov
xlat
fdivl
lods
ja
push
lock
lock
fistpl
xchg
sub
cmp
xchg
movsbl
mov
pushf
cmp
or
jnp
lahf
lcall
cmp
and
aas
sar
push
mov
ljmp
mov
jb
pop
lods
sar
bound
add
cmp
out
mov
and
push
bound
dec
pop
add
mov
sub
cld
pop
jnp
dec
mov
lahf
movsl
adc
mov
adc
or
ret
in
inc
les
enter
dec
mov
adc
fimull
mov
adcb
jb
in
cltd
sub
or
cmp
movsl
test
inc
jecxz
inc
orb
pusha
xchg
cltd
xor
stos
stos
pusha
enter
loop
movsb
enter
les
je
and
ret
call
sub
enter
repnz
stc
in
loop
or
rclb
pop
sbb
xlat
out
xlat
xchg
xchg
lea
icebp
jae
insb
test
mov
fdivrl
ljmp
pop
enter
jp
add
je
push
scas
pusha
nop
add
aad
movsl
mov
xchg
or
mov
mov
aaa
or
pop
fdivrp
ret
fcmovnb
dec
mov
inc
push
mov
inc
imul
dec
inc
dec
lret
pop
jp
mov
out
into
pushf
in
mov
jmp
fbld
outsl
jg
pop
mov
test
mov
sub
mov
push
in
fwait
sbbb
mov
lahf
push
or
mov
and
mov
mov
aad
lret
push
jnp
fisttps
mov
mov
jbe
iret
es
outsl
dec
add
imul
xchg
outsb
or
ret
bound
mov
iret
push
in
mov
cmp
mov
hlt
xchg
dec
pop
fimull
rcrb
iret
mov
xor
mov
jns
mov
push
into
mov
xor
rcl
out
shll
push
pop
mov
aad
lds
mov
mov
jle
aas
leave
scas
call
xlat
sbb
pop
mov
sbb
adc
xor
in
and
mov
fucomp
dec
cmp
fs
adc
mov
jns
mov
test
inc
push
scas
pushf
sahf
int
mov
push
push
and
aad
test
shll
es
inc
orl
xchg
dec
lahf
push
jo
mov
pushf
pop
subb
insl
mov
lahf
imul
jl
sub
push
dec
mov
test
cmp
movsb
sbb
sub
mov
sbb
and
daa
lds
push
sbbb
inc
iret
scas
sbb
and
or
or
xchg
sarb
sub
leave
fwait
xor
pop
cld
adc
mull
and
cmpsb
jbe
icebp
and
add
icebp
jl
adc
dec
push
and
pop
int3
clc
mov
out
pop
push
pop
cmpb
xor
mov
arpl
fbstp
sar
add
push
inc
adc
mov
push
popl
shlb
jnp
addr16
pop
pushf
ret
inc
jbe
in
jl
cld
ficomps
push
nop
div
mov
bound
add
out
or
movsl
inc
imul
and
push
loope
pop
ror
ds
loopne
mov
dec
inc
cmpsl
addl
jmp
push
syscall
mov
sub
jge
jp
ss
sub
fisttps
shlb
and
mov
and
push
xchg
add
int
notl
aam
adc
and
loopne
pop
xor
lcall
cwtl
cmp
push
push
push
jle
or
outsl
lahf
adc
pop
inc
mov
xchg
xor
pminub
adc
ret
std
jge
cmc
pop
nop
jne
ds
pop
rcrl
nop
loope
adc
inc
mov
imul
mov
and
sahf
scas
test
sbb
les
pushf
icebp
aas
pop
and
mov
enter
dec
adc
fldl
pop
xchg
xor
call
cmpsb
pop
hlt
out
jmp
test
mov
mov
push
test
fs
sbb
fmull
sbb
cmp
mov
push
mov
stos
lock
push
adc
and
pop
sahf
sti
ljmp
std
jg
adc
jl
push
fistl
adc
shrl
add
xchg
out
jne
sub
outsb
iret
cld
mov
in
call
mov
fstl
pop
adc
nop
sub
mov
sbbb
and
cmp
push
xchg
mov
sub
in
sahf
sbb
aaa
cld
scas
adc
out
aaa
pop
lahf
mov
cmc
dec
mov
data16
scas
nop
jmp
andb
mov
or
test
rcll
adc
roll
popf
xchg
outsl
jo
or
jmp
aad
lock
ret
sahf
xor
es
jecxz
movsl
push
push
shl
xchg
arpl
pop
or
lea
mov
or
pop
mov
dec
jbe
push
test
mov
pop
xchg
xchg
add
das
fisubrl
mov
pop
out
mov
leave
mov
out
clc
test
and
rcr
es
call
pusha
add
sub
sbb
or
cli
mov
xor
imul
sbb
jbe
pushf
push
push
outsb
fucomi
loop
fsubr
cmp
jno
xor
add
bound
pop
cmpsl
sub
imul
pop
cmp
nop
sbb
jb
divl
out
scas
fmulp
pop
outsl
sbb
insb
push
cmp
mov
pushf
scas
dec
stc
pop
sqrtps
in
adc
lret
xor
jae
out
jg
push
adc
pop
outsl
fwait
gs
mov
sbb
cltd
dec
in
lods
add
icebp
push
iret
push
pop
test
dec
popf
insl
je
cs
pop
push
pop
cmpsl
push
sti
adc
push
cmp
push
mov
sbb
jns
xchg
pop
mov
adc
lea
jno
inc
push
flds
or
mov
jge
das
mov
or
fcmovne
mov
inc
sub
inc
cmpsl
test
or
stos
jp
aad
pusha
shlb
lahf
dec
sbb
daa
decb
fistpl
cld
outsl
inc
lds
lods
ds
pop
aaa
add
das
sub
lcall
mov
xchg
lahf
mov
sub
out
fdivs
std
jmp
xchg
and
mov
ja
and
cmp
imul
pop
sarb
mov
adc
mov
pop
movl
adc
testl
dec
push
aaa
and
rcll
repnz
cmp
push
test
int3
xchg
inc
jne
rclb
sub
data16
mov
mov
jg
subb
data16
sub
fidivrl
inc
inc
add
or
in
mov
mov
pop
test
cmp
imul
jne
inc
jecxz
sahf
fstps
aad
or
mov
jmp
mov
insb
sbbl
mov
test
aad
adc
aaa
out
shl
js
sbbb
leave
mov
inc
into
or
sbb
lods
xlat
mov
jle
lret
cmp
les
lds
and
mov
mov
mov
insb
mov
shll
jo
inc
pop
cmp
arpl
cmp
add
jb
xchg
cmp
mov
push
pop
pop
lahf
lea
push
sarb
cmp
add
pop
adc
loop
lret
fistl
and
scas
add
cmp
cmp
rorb
and
jle
inc
xchg
test
cmc
in
in
cmpsb
dec
andl
xchg
sub
xor
cmp
movsb
sub
lcall
pop
jecxz
lahf
mov
mov
mov
jecxz
aam
jnp
mov
enter
xchg
xor
insb
cmpsb
rcl
pusha
lock
out
pop
int
dec
mov
mov
gs
fwait
inc
mov
loop
xor
mov
popa
jge
mov
push
cmp
mov
ds
cmpsl
sbb
jp
mov
fisubs
sbb
add
mov
cltd
aas
nop
or
xor
aad
fs
cmp
mov
pop
rclb
pop
cmpl
cld
cli
or
std
pop
jno
add
lods
out
lds
movsl
jecxz
mov
pop
inc
jle
jp
cmpl
xchg
test
adcb
add
xor
mov
sbbl
pusha
sub
and
add
mov
mov
xor
jnp
in
inc
in
xchg
out
scas
rorb
rcl
push
cmp
mov
outsl
outsb
fs
pop
sbb
in
xor
pop
jbe
icebp
das
fs
pushf
add
xor
dec
daa
xor
cmp
ja
popa
int
mov
les
inc
push
sub
test
xor
push
aad
sub
clc
adc
ja
adc
jne
jbe
ja
fs
stos
sti
ds
adc
cmp
rcll
in
xchg
into
pop
xchg
jne
dec
imul
jo
arpl
insl
outsb
shrl
jae
pop
and
mov
aas
xchg
fmulp
arpl
scas
push
xchg
pusha
aaa
adc
fs
adc
pop
sahf
sbb
xchg
dec
loopne
xchg
clc
xor
adc
sarb
das
repnz
sub
and
jg
std
mov
jne
mov
js
dec
push
inc
pusha
cmp
jecxz
inc
pop
sub
cmp
sarb
sbb
testb
mov
cli
xchg
adc
sub
and
and
jne
inc
xor
repnz
shlb
mov
dec
xor
icebp
scas
out
les
mov
xor
cmp
sbb
std
sbb
xor
jmp
sbb
xor
xchg
jbe
cmpsb
mov
decb
jno
jb
shrl
add
es
insl
and
add
cmp
pop
ret
sub
mov
aad
popl
out
mov
cmpsl
mov
pop
outsb
ror
mov
push
les
les
jo
xchg
in
sub
mov
lods
repz
mov
cmpsl
and
in
popf
inc
insl
xor
sti
mov
pusha
and
xchg
ret
faddp
xchg
ds
aaa
sub
loope
xchg
enter
jnp
test
or
push
popa
clc
das
pushf
sahf
jo
cmpsb
dec
dec
pop
mov
and
pop
mov
pop
andl
mov
popf
in
push
mov
adc
popf
pop
es
xchg
sub
rcrl
repz
fs
cmpsl
psllq
sub
psrlw
int3
into
or
inc
pop
inc
imul
insl
mov
jle
popf
je
call
jge
sub
popa
mov
cmp
aas
or
ret
jno
js
cmp
test
ljmp
mov
ljmp
std
mov
pop
outsl
cmc
shrb
lahf
or
xchg
adc
in
rcl
jp
or
cmp
out
dec
inc
or
xchg
icebp
aas
pusha
or
lods
cs
push
xchg
sahf
xchg
shl
movsl
and
mov
adc
lea
sub
inc
imul
std
insl
mov
icebp
pop
xor
add
pop
int3
fcomps
mov
mov
std
fistl
ljmp
jg
xor
pop
push
mov
xor
sbb
movsb
cld
call
popa
xlat
mov
aas
mov
std
fidivrs
aam
push
dec
leave
imul
mov
sbbb
wrmsr
xlat
add
cmp
out
mov
jbe
pop
lds
int3
fstp
mov
xor
jmp
aas
ror
setno
sbb
out
nop
cmpl
jp
repz
lea
pop
loope
inc
insl
dec
fmul
pusha
loop
lods
push
sahf
xlat
xor
les
bound
hlt
or
js
leave
mov
in
shr
mov
fs
and
das
cmpsl
xor
repnz
in
or
sub
push
aaa
and
aam
roll
inc
xor
shll
repz
notl
fsubs
loopne
shll
mov
fistpll
sarl
cmp
gs
ret
mov
jno
xchg
test
rol
dec
daa
testl
mov
inc
arpl
jmp
out
push
mov
pop
add
shl
lret
arpl
int
mov
daa
sub
das
pusha
loop
out
sbb
shlb
ljmp
mov
or
call
dec
fisttpll
insb
lcall
sbb
gs
add
insl
or
mov
xchg
mov
cmpb
mov
push
or
add
aad
push
jl
pop
cmp
dec
cmpsl
mov
jg
adc
data16
cli
cmc
xchg
fcmovbe
xor
fwait
adc
leave
cmp
mov
pushf
jle
lock
push
fsubp
clc
ret
fistpl
fldcw
repnz
sub
sti
pop
repz
stos
popa
mov
pushf
ret
xor
xchg
cltd
hlt
push
lcall
lods
inc
dec
test
pop
push
xor
jecxz
dec
out
popf
mov
jl
cmp
adc
bound
xor
mov
lods
xchg
insb
jns
push
fisubs
adc
lock
xchg
lcall
stc
mov
xchg
je
mov
adc
jl
push
cli
xchg
push
lret
out
arpl
xor
xchg
cltd
or
icebp
mov
inc
divl
mov
cld
push
pop
fnstsw
rcll
and
or
push
push
and
rorl
xchg
jno
xchg
sub
sbb
lret
aam
jp
clc
add
jns
sub
aaa
adc
xor
pop
jle
imulb
es
dec
lret
jle
xor
les
cmp
dec
ds
pop
adc
jge
ficoms
xchg
aad
xchg
in
pop
fdivrs
pop
mov
clc
dec
fisttpll
into
pushf
jns
inc
jnp
jg
jnp
nop
arpl
fildll
test
push
jo
loopne
xor
stos
fwait
or
mov
mov
aaa
out
xor
jo
movsl
pusha
fsubl
inc
add
sub
sarl
mov
rorl
xor
push
lds
repnz
movsb
fsubrl
push
ret
push
cs
or
or
sub
cmc
dec
outsl
int3
dec
pop
clc
inc
loope
jmp
pop
movsl
and
leave
push
lret
cmp
out
insl
test
popw
inc
icebp
mov
aaa
into
pop
lods
js
cmpl
push
xor
negb
and
int3
mov
add
pop
pop
dec
fistps
dec
pop
push
outsb
leave
xchg
loop
call
mov
popf
decl
and
mov
test
lcall
out
stc
rcll
mov
ret
mov
and
pop
cmp
push
fwait
xor
jmp
shlb
xchg
mov
fwait
ljmp
sub
in
xrelease
cmpsl
xchg
ds
dec
pop
dec
add
imulb
xor
call
clc
mov
jnp
pop
pop
sbbb
test
negb
hlt
pop
xlat
mov
test
adc
mov
movsb
fwait
test
jo
jnp
ja
mov
orb
fs
and
jbe
pop
out
call
inc
dec
jle
mov
pop
ret
inc
std
ss
xchg
sub
insb
test
pop
idiv
sbb
or
arpl
xlat
in
pop
in
mov
inc
dec
lret
jge
fisttpll
loope
add
jo
sbb
jp
and
fisttpll
add
ret
in
insl
daa
pop
cmpsb
aaa
enter
repnz
jnp
xchg
jecxz
mov
ret
sar
js
adc
xor
sbb
adc
xlat
pushf
test
inc
sub
cmp
frstor
lods
sub
cmp
push
mov
xchg
adc
inc
add
lahf
inc
popf
mov
orl
test
add
mov
inc
jmp
sbb
stos
cmp
cmp
mov
dec
jp
push
cltd
movsl
push
in
push
xor
push
pop
flds
enter
mov
popa
and
divl
inc
add
cmpl
and
lret
mov
pop
inc
andl
pusha
adc
test
shl
pop
cmp
pushf
adc
sbb
clc
fs
jbe
lods
ljmp
or
loop
sbb
adc
outsb
push
mov
cwtl
jle
xor
cmc
or
jo
adc
adc
mov
mov
mov
ret
mov
test
fwait
inc
aas
adc
mov
sbb
ud2
jae
push
xchg
cmp
push
mov
mov
pop
into
loopne
sub
sbb
pushl
mov
daa
lds
lea
mov
ss
notb
nopl
fsts
stos
lods
mov
fisttpll
dec
loope
mov
fincstp
mov
mov
insl
xchg
inc
sub
popf
stc
imul
and
jle
mov
push
xlat
lcall
mov
ja
cmpb
cli
jle
sub
sbb
mul
std
jge
fsqrt
mov
xchg
or
pop
icebp
xchg
push
push
aad
lcall
notb
test
clc
ss
movsl
loopne
cmp
movsb
out
rorb
ror
popa
mov
pop
imul
push
rcrl
pop
hlt
into
fwait
loop
and
adc
push
dec
add
stos
push
aad
xchg
into
jecxz
mov
jne
lcall
ljmp
or
sbb
sbb
dec
sub
xchg
push
sub
cmp
lods
xchg
das
movsl
fsubrl
daa
mov
iret
loop
jno
mov
scas
clc
fistpl
add
pop
aas
cli
jno
iret
mov
repnz
popf
out
and
push
call
xchg
xchg
sbbb
xor
es
add
scas
mov
xor
mov
xor
and
jle
xor
jae
push
jmp
mov
sub
pusha
xchg
pop
fsts
into
out
movsl
push
je
fidivs
iret
leave
outsl
or
add
popf
shll
cmp
rcrl
repnz
shrb
push
add
lcall
pinsrw
ret
sub
pop
push
pop
call
hlt
pop
sarl
jo
leave
adc
cltd
stos
jae
lock
cmpl
sbb
cwtl
push
mov
subl
sbb
add
fcmovnu
inc
out
mov
ja,pt
xchg
loopne
jmp
add
in
xor
fildll
loope
ficomps
scas
inc
stos
and
lea
dec
test
mov
inc
loop
dec
cmc
jnp
pop
lods
mov
fcom
out
in
sub
sub
jmp
push
ss
jmp
jbe
int
addr16
mov
or
mov
loopne
testb
and
insl
xchg
pop
pop
insl
ss
movsb
sub
mov
mov
test
push
mov
push
fdivrs
xor
pop
mov
dec
mov
insl
cmpb
mov
cmp
insl
nop
je
js
aaa
cmp
nop
sub
and
popf
jb
pop
add
repnz
fcoms
imul
shl
je
xor
movsb
xor
inc
repnz
repz
outsb
and
arpl
xchg
stc
push
out
xor
ljmp
repnz
jbe
pop
leave
inc
cli
das
js
cwtl
out
xchg
xor
scas
test
lods
or
sahf
cs
push
mov
cmc
rorl
fsubrl
stc
jle
andl
or
xor
aam
cltd
lret
nop
inc
in
sub
inc
cli
or
shl
xchg
pop
add
daa
insl
dec
outsl
rorl
shlb
nop
iret
cmc
mov
mov
xor
mov
fldenv
cmp
mov
mov
mov
pop
mov
nop
sub
pop
push
loope
leave
or
pop
ds
dec
out
ffree
dec
or
sahf
aam
jbe
and
subb
in
adc
insl
imulb
mov
addb
insl
fldt
sbb
insb
cvtdq2ps
sub
out
loope
popa
lret
xchg
sti
cmp
addr16
or
adc
pop
push
jl
in
cmpsl
fs
add
xchg
cli
mov
test
inc
jmp
dec
lret
push
add
sbb
ds
add
sti
cli
lret
mov
ja
xor
fwait
cmpsb
push
push
cli
leave
mov
js
lret
mov
inc
mov
fwait
lea
std
bound
das
fwait
adc
fistl
jmp
dec
clc
jmp
mov
mov
inc
pushf
in
leave
cmp
xchg
xchg
ret
xchg
xchg
mov
sahf
ja
cs
fistl
add
out
mov
in
inc
lea
sub
cs
fldenv
movsb
push
mov
repnz
aam
mov
fldl2t
mov
sti
sarb
or
add
int3
loopne
bswap
mov
enter
fnstenv
lahf
arpl
cmpsb
pop
push
sbb
subl
fwait
loop
adc
mov
stc
add
mov
push
arpl
jge
lea
rorb
fsubrl
loopne
jg
push
aas
movsb
vpunpckhqdq
aas
add
lret
inc
pushf
dec
cmpsl
lds
addl
cld
lahf
cmp
xchg
pusha
and
mov
sbb
mov
add
cmp
popf
mov
adc
test
lods
aad
add
mov
adc
jge
xchg
ja
cli
out
lods
mov
notl
mov
push
sub
imul
bnd
xchg
or
sbb
xor
lcall
stos
aam
call
stos
popa
stos
out
and
push
adc
mov
sbb
cmp
sar
add
jp
xchg
cli
and
out
adc
xchg
dec
jle
fnsave
aas
jl
adc
inc
add
adc
les
add
lahf
in
frstor
test
inc
out
jbe
and
ja
push
das
test
sub
sbb
mov
gs
pop
xchg
or
pop
stos
push
out
addb
xchg
addr16
dec
push
push
sbb
add
cwtl
lods
dec
xchg
dec
repz
push
mov
fcomps
xchg
ficompl
push
loopne
push
jp
stc
adc
loop
xchg
inc
jle
and
and
stos
sub
jne
pop
into
pop
into
sbb
adc
stc
ret
pop
ret
inc
add
ror
or
popf
add
addl
xchg
fcmove
xchg
or
fstpt
bound
cmp
jecxz
xadd
decb
jl
mov
sub
insl
sub
add
ds
test
mov
cmp
or
dec
or
push
cmp
add
inc
sub
add
int
lea
mov
insb
mov
loopne
push
les
add
pop
and
in
fwait
fwait
mov
xlat
clc
jo
arpl
xchg
add
and
aam
lahf
cmp
out
repz
xchg
mov
mov
xor
insb
jl
xlat
add
add
jo
pusha
cmp
sti
add
inc
repnz
mov
dec
sub
mov
and
push
xor
lret
popa
lock
lret
imul
mov
divl
fmull
or
out
push
test
insl
add
inc
or
xsaves
push
imul
cmp
push
mov
cltd
push
sahf
out
fmuls
dec
cld
cmp
xor
fwait
pop
pop
and
mov
iret
test
mov
and
sbb
adc
jp
xor
call
mov
aaa
xchg
cmc
mov
pop
mov
and
jns
adc
pop
pop
dec
xchg
jecxz
sbb
enter
gs
std
in
mov
popa
test
loop
gs
sub
jg
and
data16
and
lods
dec
add
pop
mov
mov
pop
mov
mov
jecxz
fisubs
loop
repnz
pop
mov
cmpsl
sub
add
mov
scas
fdivl
data16
popf
ret
aaa
sbb
fdecstp
adc
lods
xorl
xor
pop
lods
xchg
inc
test
mov
das
lods
mov
push
scas
add
pusha
mov
adc
xchg
lahf
sub
pop
iret
or
add
and
dec
cs
jle
pop
popa
adc
sub
ja
push
ss
push
test
mov
in
cmpsb
xor
fnstsw
or
inc
test
push
subl
dec
and
or
in
push
xchg
mov
test
xchg
aam
mov
inc
and
dec
scas
mov
add
inc
inc
mov
ss
ljmp
mov
cmp
xchg
adc
mov
mov
or
mov
mov
mov
faddp
push
dec
dec
ret
pop
in
std
mov
lcall
mov
push
lods
and
out
insb
add
shll
loopne
mov
shrb
scas
enter
jp
mov
adc
push
mov
xchg
jmp
pop
xchg
xchg
dec
aam
cltd
in
fistl
sbb
mov
or
mov
subb
cmp
cmp
lock
xchg
push
push
mov
lods
enter
push
add
shll
adc
pop
mov
cmp
fists
outsb
cmc
sub
je
cmc
fs
sub
cmp
and
ret
inc
adc
sbb
mov
fcomps
dec
sti
loop
movsl
iret
dec
or
aad
mov
mov
or
imul
mov
jbe
dec
test
fwait
cmp
sbb
xchg
lods
add
dec
jp
ficomps
lcall
notl
pop
dec
aas
into
fs
mov
outsb
adc
bound
inc
mov
xchg
inc
inc
iret
push
xlat
push
pushf
mov
sub
testb
cmc
jp
jmp
test
mov
hlt
inc
add
test
mov
cwtl
dec
jb
sub
xor
add
int
test
or
sub
je
pop
lock
mov
mov
or
scas
jecxz
outsl
stc
lret
jb
or
lea
adcb
sbb
mov
or
adc
js
lcall
dec
push
dec
mov
push
mov
cmp
push
jp
mov
lea
shl
mov
push
outsb
js
and
xor
.byte
mov
leave
add
add
leave
add
add
add
add
lret
push
lret
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
inc
add
inc
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
adc
add
add
incl
add
add
adc
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
sub
add
add
add
incl
add
add
inc
add
add
add
cmp
add
incl
add
add
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
add
add
decl
add
inc
add
add
add
push
inc
add
inc
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
lcall
pop
inc
add
pop
inc
add
lcall
inc
add
inc
add
incl
add
add
fs
add
add
add
popa
inc
add
popa
inc
add
incl
add
add
add
incl
addr16
add
jmp
add
jmp
inc
add
je
add
add
add
incl
add
add
je
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
js
add
add
add
incl
add
add
js
add
add
add
incl
add
add
add
add
incl
add
add
jnp
add
add
add
sti
jle
add
jle
add
add
add
incl
inc
add
inc
add
inc
addl
mov
inc
add
in
add
add
icebp
inc
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
inc
add
add
add
incl
add
add
test
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
add
incl
add
add
mov
add
add
incl
add
add
mov
add
add
incl
add
add
inc
add
add
add
incl
add
add
lea
add
add
incl
add
add
inc
add
add
add
jmp
mov
jmp
jmp
popl
in
popl
lock
incl
nop
inc
add
inc
add
jmp
nop
inc
add
pushl
nop
inc
add
lcall
inc
add
inc
add
ljmp
inc
add
inc
add
incl
add
add
inc
add
add
add
incl
add
add
xchg
inc
add
add
add
incl
add
add
cwtl
inc
add
ljmp
out
add
add
add
add
push
lret
add
add
add
add
add
leave
add
add
add
add
lret
push
lret
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
fisubl
daa
push
push
jp
int3
lods
inc
scas
out
inc
pusha
insb
sahf
addr16
mov
imul
and
popf
adc
add
std
add
pop
jl
sbbb
popl
jle
and
orb
gs
xchg
pop
nop
mov
out
cmpsb
ret
sbb
push
mov
sbb
dec
jp
jae
nop
jecxz
in
fyl2xp1
sbb
jnp
dec
ja
cwtl
fbstp
and
pop
addl
xor
jl
and
pop
js
sahf
pop
mov
add
fistl
iret
dec
fstps
test
test
pop
insl
add
ljmp
in
lods
movsl
stos
repnz
push
movsb
sbb
inc
adc
movsb
ss
jle
scas
movsl
sub
sti
in
mov
pop
sbb
orb
arpl
ret
or
imul
ja
mov
add
fildll
fwait
cmpsb
adc
insb
in
lods
aad
icebp
mov
fists
mov
jb
xor
test
add
mov
sub
or
cli
aam
fiadds
sub
and
icebp
mov
jb
rcrb
iret
push
cli
hlt
push
inc
fs
xchg
lret
pop
xchg
sbb
add
sahf
add
fcompl
das
mov
aad
addl
jecxz
push
sti
lods
test
in
loopne
in
std
cmc
sub
div
dec
jmp
jecxz
fsin
int3
lds
cltd
xchg
dec
movsl
or
cld
hlt
xchg
insb
xorl
mov
rcr
xchg
xchg
sub
repz
xchg
lret
test
fs
bound
vmovdqa
daa
stos
mov
ss
in
out
xchg
imul
or
or
mov
push
dec
pushf
scas
sbb
imul
lods
adc
push
call
add
inc
imul
out
enter
sbb
jmp
sbb
test
mov
jbe
cwtl
and
loopne
mov
adc
jbe
test
inc
jb
clc
inc
inc
and
inc
cs
mov
and
aad
enter
jge
aas
pop
or
stc
mov
incl
jo
mov
scas
jge
ljmp
aad
es
add
jge
sub
or
mov
movsb
data16
mov
xchg
sarb
fdivrl
je
scas
jo
idivl
fildll
add
fadd
dec
mov
ss
xchg
pop
mov
sub
inc
in
adc
cmp
pop
inc
jb
jge
mov
mov
or
add
jecxz
pop
push
pop
mov
cwtl
inc
stc
adcl
mov
mov
lea
in
icebp
imul
mov
sbb
roll
jns
pop
xor
insb
sbb
int
icebp
sub
pop
and
jecxz
sbb
test
jl
movsb
inc
out
mull
fs
jmp
in
fistps
enter
xor
in
imul
xchg
scas
pop
punpcklbw
stos
inc
adc
inc
adc
mov
mov
bound
mov
push
lahf
add
cli
arpl
mov
sub
mov
cli
ror
loopne
jne
cmp
pop
jnp
lcall
inc
jmp
pop
mov
in
push
push
divb
pop
mov
mov
aad
pop
out
arpl
xchg
or
push
and
lahf
mov
loope
cmpsl
cld
fdivrl
popf
xchg
cmpsl
cmp
std
push
sbb
adc
icebp
push
popa
xor
add
in
adc
popa
lock
dec
xlat
movlps
adc
inc
and
testl
cltd
cmpsl
push
xchg
scas
les
or
movsl
pusha
das
pop
mov
adc
xor
or
add
sub
cld
mov
adc
fstenv
mov
push
mov
fidivrl
adc
mov
and
insl
in
aaa
sbb
lds
and
dec
push
jae
pop
cmp
sti
dec
popl
push
std
mov
scas
mov
mov
ds
pop
call
push
sbb
popf
rolb
pop
ja
sbb
xor
xor
push
mov
in
lods
jb
sub
or
mov
push
pop
aaa
mov
mov
movsb
ss
int
cmp
xor
fsubs
cmp
jp
mov
sub
or
fimuls
in
mov
mov
out
in
stos
xor
mov
js
es
gs
daa
out
test
scas
int3
cltd
lods
xor
cmpsb
cmp
das
call
push
mov
xchg
arpl
sub
in
out
sbb
xor
jb
sbb
nop
out
cmp
xchg
dec
pmulhw
mov
std
cmp
andb
xlat
xor
mov
lods
pop
sti
mov
xchg
fmuls
push
imul
push
insb
sub
das
mov
popa
inc
add
decl
push
add
jae
pop
test
sbb
inc
or
int3
xor
dec
mov
pop
jo
xor
roll
xor
dec
fdivrs
xchg
cld
xchg
cwtl
cwtl
pop
sbb
fisubl
dec
add
lods
mov
add
hlt
inc
cmp
mov
xchg
mov
mov
inc
scas
int3
mov
out
fcmovb
and
push
movsb
ljmp
cmp
dec
sub
fscale
or
icebp
cltd
xchg
rorl
andb
lret
sbb
adc
pusha
cwtl
cmp
bound
sbb
imul
push
lock
enter
add
fisubrs
add
loop
cmp
inc
stos
cmp
rolb
insb
push
cmpsb
sbb
nop
jmp
sub
iret
push
in
cmpsl
es
imulb
out
sbb
in
rcrb
dec
xor
cmp
out
lahf
sub
dec
xor
imul
xor
mov
xchg
sbb
jbe
push
rcrl
movsl
imul
cmpsl
xor
jge
or
repz
insl
dec
outsl
and
sbb
lret
mov
sbb
add
lds
add
iret
sahf
ficomps
test
cmc
sub
int3
sbb
xchg
idivl
push
mov
jo
xchg
icebp
lods
lcall
sub
dec
ret
jmp
xchg
jg
adc
inc
stos
faddl
cli
stc
sbb
pop
cld
cmpl
sahf
xchg
aaa
lahf
out
arpl
or
lahf
push
pop
in
jne
in
out
mov
addr16
pop
or
jne
fs
js
push
lcall
cmp
dec
add
add
dec
lock
in
ss
jae
xchg
out
movsl
or
in
xchg
fcmovnu
lea
dec
insb
in
pop
clc
pop
mov
adc
cs
scas
adc
adc
adc
add
int
andb
stos
jl
jae
in
xchg
xor
pop
lcall
jmp
cmpsb
xor
push
mov
sti
sbb
lods
lret
mov
mov
movsl
fiaddl
pop
into
push
cwtl
mov
pushf
jg
pushf
fwait
imul
add
dec
and
imul
pop
jg
mov
divl
push
lds
pop
mov
sahf
mov
pop
lahf
adc
lds
fcomi
jns
ret
xor
inc
icebp
in
cwtl
jb
mov
jbe
sub
out
jo
jp
dec
pop
outsl
cmpsb
jo
cmpsb
dec
aaa
adc
pop
movsb
mov
in
xlat
push
sbb
xor
out
mov
pop
repnz
outsl
xor
sbb
adc
out
lcall
dec
je
sub
and
lret
rcr
xor
das
shll
inc
xlat
or
xor
in
addl
pop
sub
ret
mov
out
loop
xor
and
pop
jg
stos
jae
push
and
sub
pusha
dec
mov
int
mov
mov
cmc
push
hlt
movsl
sbb
fbstp
mov
jl
mov
push
sbb
jg
popa
adc
add
adc
jno
push
daa
push
or
adc
imul
push
cmp
pop
lahf
cmp
cmp
or
cmpsb
dec
add
xor
js
mov
pop
and
popf
pushf
cs
push
mov
pop
cmovle
ds
push
adc
movsl
into
cmp
jne
push
xchg
xchg
call
lods
pop
mov
js
jbe
sub
pop
xor
test
xchg
outsb
xor
mov
repz
or
lds
cwtl
subl
fsts
xor
mov
mov
icebp
mov
cmpsl
fidivrs
les
adc
xchg
sbb
int
fwait
inc
inc
xchg
mov
xlat
stos
jb
aaa
imul
push
adc
mov
lret
rcrl
sar
lcall
dec
mov
xlat
aaa
fwait
les
cmp
mov
pop
rclb
dec
repnz
scas
rcrb
mov
add
jmp
mov
int
fistps
pushl
lret
mov
pop
xchg
dec
jle
pushf
enter
mov
xor
jae
cmp
iret
fildl
arpl
stc
push
mov
lret
add
cmp
fmul
mov
mov
pop
inc
popf
dec
frstor
mov
imul
jb
inc
ret
out
dec
ret
int3
add
cs
gs
adc
ljmp
enter
shrb
add
mov
popa
mov
xor
add
shlb
and
cmpsb
push
fisubl
aad
arpl
dec
xlat
push
fadds
lret
xchg
mov
jb
andb
and
jb
stc
frstor
jge
mov
push
jae
push
add
sarb
jmp
sti
mov
popf
push
aas
mov
mov
pop
test
mov
setnp
fdivrl
scas
mov
stos
inc
add
xchg
std
nop
sbb
jnp
inc
ficomps
scas
das
ljmp
adc
nop
es
bound
inc
inc
sti
push
repnz
sub
aad
jne,pt
neg
cld
out
dec
mov
xchg
adc
push
cmp
frstor
imul
mov
shl
movsl
pusha
clc
push
ficomps
in
inc
lahf
aaa
cmp
add
fists
xor
adcb
jle
mov
xchg
xor
repnz
add
push
sub
test
adc
mov
movsl
cmp
or
cmpsb
inc
lods
test
addr16
inc
jl
ja
push
ret
mov
inc
sub
jnp
mov
pop
xor
jp
std
outsb
je
and
dec
dec
insl
mov
addl
ja
pop
push
jmp
push
outsb
or
or
nop
shlb
popl
jnp
push
call
scas
insl
fildl
das
insb
jae
push
pop
mov
cmp
cmp
ss
xchg
clc
pop
jle
pop
or
xor
aad
inc
push
add
push
sti
inc
cmc
cmpsb
out
pop
inc
imul
push
push
das
or
lds
enter
imul
cmc
in
fstl
lret
fs
loop
jp
aaa
pop
lds
movsb
adc
lea
and
pop
lcall
add
adc
inc
mov
push
xchg
movsl
hlt
test
imulb
lock
jbe
xor
sahf
mov
jmp
and
mov
data16
cmpsl
sbb
push
xchg
sbb
pop
cmc
adc
sbb
mov
mov
sub
in
xlat
pop
into
sti
mov
lock
insl
push
mov
push
mov
jbe
mov
mov
cwtl
push
in
pop
movsl
pushf
jmp
sbb
inc
adc
cmp
dec
and
lret
add
inc
stos
test
hlt
or
pop
stos
movsl
jb
jg
xlat
and
adc
icebp
sub
push
mov
adc
dec
add
cmpb
cmpb
fadds
mov
push
pop
sub
fldenv
scas
popa
cmpsb
ret
push
aaa
pop
sbb
xchg
mov
xchg
aaa
data16
add
daa
scas
jnp
sahf
jl
imulb
and
pop
and
pop
jae
mov
cmp
and
xor
adc
mov
and
mov
dec
fs
pop
popa
negl
inc
in
jns
mov
push
xor
outsl
cwtl
addr16
mov
jle
hlt
mov
adc
shrl
dec
lods
cltd
testb
inc
push
leave
fildll
jns
mov
loopnew
jbe
and
mov
xchg
test
push
pusha
sub
inc
push
adc
mov
jae
jo
hlt
insb
or
xchg
lods
jecxz
pop
test
push
out
sub
shrb
aam
mov
out
outsl
outsl
loop
or
mov
push
adc
pop
nop
aas
popa
clc
push
sbb
mov
pop
aam
cmc
add
cmp
sub
dec
push
mov
frstor
scas
xorb
dec
lods
jb
inc
inc
push
inc
vmovaps
test
xor
ja
sub
add
sti
scas
inc
loope
mov
adc
icebp
sbb
outsl
mov
andb
ret
sbb
test
cmp
mov
loope
adc
out
out
inc
cmp
sti
cmp
shrl
jge
std
je
lahf
mov
int
ss
call
into
ds
in
cmp
popa
push
subb
xchg
cmp
int
cli
sbb
or
fnstsw
out
outsb
xor
mov
and
adc
mov
add
xor
popa
je
xchg
stc
or
inc
mov
mov
lods
in
out
xchg
pop
and
jmp
ret
ret
es
imul
imul
or
cmp
add
call
or
or
dec
xlat
int
ret
gs
dec
icebp
fmul
in
fidivrl
cwtl
iret
out
and
xchg
jg
stos
sbb
and
pavgb
lock
mov
lea
fstl
in
enter
xchg
mov
scas
sub
inc
dec
cmp
inc
sub
fsubl
std
ja
popa
cmp
add
ljmp
push
cmp
out
sbb
enter
mov
add
dec
rorl
jb
sub
int3
notl
insb
push
into
mov
decb
pop
int
icebp
inc
and
pushf
repz
fs
repnz
xchg
les
adc
adc
pop
fisubrs
rcrl
jl
into
cmp
std
int
sbb
or
movsb
inc
xor
cmp
fwait
mov
fdivr
add
incb
push
subb
rclb
sarl
test
and
mov
mov
pushf
aas
ret
or
popf
pushf
xor
inc
sbb
cmp
notl
cmp
push
fstl
push
pop
mov
test
cs
pop
mov
neg
loop
shl
xor
subb
push
loop
dec
cs
xchg
clc
lret
sarl
jmp
test
loop
jo
or
bound
xor
arpl
sahf
jne
arpl
pop
sbb
pop
icebp
adc
pop
into
fldenv
dec
scas
cmpl
push
andl
aaa
mov
push
rcrl
outsb
clc
push
ljmp
mov
jg
stos
mov
push
or
sub
arpl
lock
add
test
cmp
cmc
sahf
lea
add
imull
push
inc
shl
movsl
or
xchg
popa
cld
sbb
loopne
scas
aad
flds
sub
lock
xchg
mov
add
cmp
inc
fld1
or
aam
lock
mov
push
iret
mov
mov
add
dec
xchg
push
sub
push
and
adc
push
mov
mov
mov
or
mov
inc
xchg
shl
pop
in
iret
test
fucomi
xchg
fistl
mov
inc
and
pop
stos
push
mov
iret
rorb
jns
add
loopne
das
int
mov
movsl
lods
sub
test
fmull
lret
mov
loopne
popa
pop
cbtw
into
xchg
imul
das
in
cltd
je
cmp
sti
inc
dec
jne
pop
shll
jnp
mov
loop
mov
cmp
imul
lea
and
in
xchg
pop
add
je
xorl
adc
push
pop
mov
imul
jne
mov
adcb
push
movsl
lock
pushf
fiadds
iret
mov
push
xor
in
dec
aaa
dec
rorb
cmp
jo
roll
div
movsb
gs
mov
pop
sbb
movsl
push
adc
push
fistl
rcrl
jl
add
add
push
pop
push
or
adcl
cmp
mov
xor
dec
xor
jns
jb
jo
xchg
mov
mov
xor
dec
cmp
mov
insl
sbb
outsl
sub
sub
daa
icebp
jl
subl
inc
out
test
fs
lea
jmp
outsl
inc
rorb
roll
aam
mov
es
cmp
aad
push
in
test
add
mov
aad
xor
int3
jg
shl
adc
xor
jecxz
repz
lahf
mov
stos
xchg
mov
push
mov
jae
lcall
and
jp
sbb
xchg
test
das
stc
pop
into
fbstp
dec
xchg
pop
stos
push
bnd
movsb
add
push
xorl
or
lahf
rorl
adc
jg
dec
ljmp
mov
sub
cwtl
cmp
repnz
inc
cmp
fwait
jl
rep
push
rorl
loop
sti
iret
add
lcall
sbb
testl
leave
dec
out
decb
loop
adc
shll
pop
xchg
xchg
xor
push
std
lahf
out
loope
sar
les
push
cmpsb
mov
inc
jmp
stc
stos
jg,pt
mov
mov
arpl
jl
arpl
popa
mov
rcrl
sbb
sar
or
and
push
repnz
setnp
sub
shlb
jnp
aaa
and
das
push
dec
cmp
lret
insl
shll
sub
daa
add
mov
pop
je
std
mov
imul
movsl
sub
sub
jae
xorb
shlb
inc
outsl
adc
xchg
xor
mov
mov
or
dec
jg
popa
scas
imul
cmp
xor
mov
movsl
lock
clc
push
enter
out
ss
inc
icebp
clc
pop
cwtl
aaa
jmp
ret
jmp
jo
test
mov
leave
fistps
inc
lret
insb
jbe
cmp
jmp
divl
daa
outsl
mov
leave
aaa
mov
xchg
hlt
xchg
jge
fadd
xchg
lahf
ret
stos
jle
nop
add
inc
xchg
out
jle
call
insl
pop
popf
xor
aaa
call
rcll
outsb
punpcklwd
add
sbb
jnp
pop
and
dec
adc
mov
hlt
xchg
inc
cltd
sbb
mov
subl
leave
popa
jno
pop
ds
sti
lret
aaa
fcoms
sub
mov
les
ja
inc
push
sti
repz
and
mov
jne
mov
imul
pusha
lods
adc
daa
test
pop
push
cld
sbb
and
movsl
fs
mov
mov
incb
dec
lock
jbe
ja
mov
cld
and
add
sahf
ja
repnz
mov
xor
mov
leave
ret
cmpsb
jno
aaa
rcll
fcmovnu
cmp
add
lahf
xchg
adc
xchg
pop
xchg
stc
push
nop
xor
dec
bound
xchg
shll
fsubp
pushf
inc
jp
scas
in
or
sub
mov
lret
lret
xlat
les
mov
xor
inc
lea
mov
dec
js
popa
xchg
mov
ret
cld
ss
arpl
add
jle
xor
int
aam
mov
orl
mov
mov
push
cltd
mov
arpl
repz
mov
sub
lahf
fistpl
sub
jp
adc
pop
repz
pop
stos
icebp
je
into
das
jp
lock
dec
sti
mov
ds
push
mov
mov
fwait
cmpsl
jecxz
mov
dec
pop
adc
cwtl
je
and
sbb
dec
dec
push
out
aad
test
sbb
xor
inc
dec
call
int3
jo
xchg
imul
lods
or
push
mov
inc
gs
aam
fadds
inc
outsl
aam
jp
imul
imul
hlt
mov
ss
lock
outsb
jg
jno
test
xchg
jle
jge
fstpt
fbld
add
xchg
test
addl
add
addr16
fiaddl
adc
ja
jle
add
inc
mov
pop
xor
and
sbb
arpl
and
movsl
lret
js
jo
in
push
push
ljmp
adc
dec
shrb
jecxz
cwtl
jge
pop
aas
dec
cmp
setl
cmpsl
inc
and
loop
leave
outsl
icebp
pop
pop
fcoml
jecxz
mov
mov
jge
or
lcall
lea
es
pop
inc
aaa
stos
cmpb
rcrl
lods
int3
dec
or
dec
push
sub
rolb
or
in
xchg
out
cmp
inc
sbb
fcoml
iret
dec
inc
icebp
pop
cli
mov
and
jbe
fs
lods
mov
pop
je
jb
mov
xor
ret
xchg
fbld
lea
jmp
leave
mov
xchg
int3
in
in
sbb
cmp
xchg
out
mov
int3
inc
lret
stos
stos
in
shll
clc
xchg
cs
adc
imul
dec
mov
sub
cmp
cmpsl
fsubs
mov
rorl
cmpsb
jge
imul
xor
mov
nop
in
popf
jnp
push
outsb
sub
lret
addr16
lret
hlt
inc
mov
imul
mov
lahf
cmp
aad
cs
mov
fisttps
jae
adc
and
jle
imul
scas
insl
push
mov
out
pushf
mov
out
test
jecxz
cmp
or
cmpsl
jo
je
stc
int3
mov
sarb
pushf
aaa
push
icebp
and
dec
les
add
loop
cmpsb
add
xchg
insb
push
cmp
scas
push
out
inc
or
sub
nop
arpl
sub
push
jbe
jns
int
lock
out
cmp
mov
repnz
push
xlat
dec
shrb
data16
cmp
lds
test
leave
lock
leave
inc
fs
add
mov
.byte
