cs
je
jle
lods
fcom
and
pop
movsl
and
nopl
push
add
jo
arpl
add
and
das
out
in
push
xlat
mov
mov
dec
mov
xor
out
jle
flds
pusha
mov
lret
popf
das
inc
push
incl
push
jo
adc
in
adc
lods
jne
mov
sbb
xchg
repnz
out
leave
rcr
std
sbb
add
or
out
pushf
shl
cs
pop
jno
adc
fldt
pop
icebp
xchg
pop
push
xchg
xchg
cmp
xchg
add
aad
rcl
bound
aaa
out
or
icebp
sbb
sub
mov
mov
mov
mov
mov
mov
rolb
mov
push
aas
jl
lods
nop
pop
xor
out
xchg
loopne
jns
mov
fistpl
les
xor
mov
dec
sbb
inc
ret
test
xchg
xchg
xchg
sbb
jp
pusha
icebp
sbb
jg
clc
mov
call
dec
rorl
push
mov
arpl
sarl
push
or
std
lods
or
mov
mov
leave
cwtl
gs
add
in
mov
pop
mov
sarb
mov
xlat
out
dec
adc
lret
jge
sarl
pop
add
or
mov
mov
xchg
int3
cmp
test
negl
test
lahf
inc
out
pusha
sbb
mov
and
clc
jecxz
mov
mov
and
enter
xor
aas
inc
push
and
add
sub
vcvttss2si
in
mull
pop
pushfw
push
pop
daa
clc
aas
inc
rclb
and
movb
jbe
adc
cmp
sub
dec
jbe
test
mov
shll
sub
cli
add
mov
push
push
loope
stos
mov
sbb
inc
std
loopne
mov
aam
sarb
fidivl
daa
jmp
cmp
mov
xchg
xchg
sbb
lcall
out
sub
xor
roll
pop
in
fwait
adc
scas
sub
test
cmpsl
mov
jo
jae
adc
mov
in
lds
ret
ljmp
mov
jae
dec
stos
jle
jae
loopne
xor
js
cmpsb
pushf
lahf
push
leave
fidivl
inc
cwtl
cmpsl
cld
das
mov
xor
xchg
mov
mov
mov
clc
loop
or
dec
outsl
sti
inc
jl
les
push
jp
xchg
and
lea
mov
mov
mov
mov
and
hlt
es
aam
sub
mov
adc
jb
sub
pop
or
jbe
shl
mov
lock
mov
shlb
adc
sahf
lds
jbe
push
sub
xchg
insb
or
xor
push
adc
js
mov
stos
or
push
xchg
and
int3
fstps
dec
aas
enter
or
fcoml
push
push
jmp
cmp
icebp
lret
fs
cmp
or
icebp
ljmp
and
xor
sbb
mov
imul
dec
pop
sub
icebp
mov
xor
shll
sbb
xor
push
shrl
pop
xorl
sbb
ja
mov
inc
addr16
pop
jb
mov
lahf
pop
push
mov
jge
push
xchg
cmp
push
xchg
jmp
out
adcb
sbb
add
xlat
mov
or
xlat
test
cmp
ret
int
push
insb
addl
fdivs
das
mov
sbb
lahf
lret
mov
and
adc
cmp
jo
mov
mov
fwait
jbe
lret
in
lahf
push
sti
and
pop
test
or
and
sbb
pop
or
cs
les
fbstp
js
sbb
sub
pop
cmp
addl
or
mov
mov
mov
jmp
lret
stc
ret
or
sub
and
mov
push
movsl
rcrb
lcall
dec
repnz
aaa
divl
or
pop
test
mov
daa
iret
loopne
in
inc
cmp
sbb
in
neg
sahf
pop
push
insb
icebp
stos
inc
stos
out
aaa
int
jl
rcrl
add
aaa
push
sbb
mov
pop
mov
aam
xchg
adc
cmpsb
leave
dec
mov
xchg
and
pop
lods
inc
and
cmp
int
adc
ljmp
mov
inc
adc
int3
out
and
sti
mov
sbb
mov
arpl
adc
mov
sbb
lret
imul
jb
and
bound
jg
mov
lock
jmp
clc
sbb
and
xchg
pop
repz
jge
fsubrl
pop
shlb
popa
dec
sub
pop
push
jl
stos
jmp
pop
cmc
or
shll
stos
adc
add
bound
or
push
stc
std
popf
mov
lds
movsb
out
pop
in
shrd
loopne
xor
les
dec
pusha
pushf
dec
pusha
jecxz
pop
inc
jmp
mov
jae
adc
ss
outsb
sbb
jle
loop
push
das
mov
rcrl
aas
push
cmpsl
xor
jge
in
adcl
out
lds
add
test
mov
mov
mov
icebp
les
js
jp
cmp
and
cltd
mov
cmp
adc
dec
ficomps
cmp
push
ja
push
or
xchg
add
adc
push
cmp
pop
into
pop
mov
incl
enter
mov
or
xor
daa
jecxz
sbb
jg
adc
mov
lock
mov
cmp
icebp
lret
mov
cmp
stos
bound
fsubl
subb
std
fmull
cmp
pusha
adc
es
push
pop
and
pop
mov
leave
pop
lock
arpl
clc
ret
pop
push
jae
enter
sbb
cmp
je
inc
dec
fs
add
xor
sbb
test
cli
call
inc
ror
xor
shrb
lret
jnp
sub
idivb
repz
clc
and
sub
jecxz
cwtl
cmp
repz
mov
fs
xor
add
mulb
ret
mov
iret
pop
xor
outsb
jmp
jmp
scas
cmp
imul
in
pop
in
xlat
sub
mov
cmp
push
jno
mov
shll
sbb
sbb
mov
sub
add
loop
icebp
inc
add
dec
clc
and
lret
rorb
in
or
mov
sbb
xchg
mov
sbb
mov
ja
inc
adc
addr16
lret
jbe
mov
pop
add
ljmp
lret
push
or
mov
inc
push
inc
in
fcoms
enter
cs
push
fs
outsl
push
jae
and
sub
fldl
fcmovnu
mov
pushf
sbb
ds
dec
push
mov
push
lods
cmp
jmp
into
xchg
scas
js
push
mov
and
in
or
mov
xchg
lds
push
jg
fisttps
xchg
adc
and
push
mov
cmp
mov
popa
pop
push
jae
push
fstpl
in
add
ljmp
pop
ja
cmp
andl
push
adc
push
outsl
fs
ja
lds
xchg
jnp
inc
xchg
jg
sub
xchg
mov
scas
movsb
lcall
xor
sub
cwtl
xor
inc
js
mov
xlat
inc
xor
clc
mov
add
mov
fidivs
imul
popa
pop
sub
jae
mov
mov
in
cmp
hlt
iret
push
pop
sub
sub
xchg
aad
push
lock
mov
or
aam
aas
in
add
rorl
mov
int3
in
test
out
ja
adc
adc
imul
add
mov
cli
out
adc
pop
int3
mov
outsb
sbb
lea
test
mov
mov
and
xchg
sbb
and
sbb
mov
cmp
popa
out
sbb
adc
mov
mov
or
lahf
aas
scas
stos
xor
mov
aas
push
sub
aam
icebp
inc
in
repnz
cmpsb
dec
jecxz
sub
sub
lahf
jp
push
adc
xor
scas
call
adc
sbb
push
xchg
sub
test
pop
cmp
and
fsubs
mov
lahf
jge
sub
lds
and
mov
mov
xor
add
test
call
mov
das
fmuls
out
icebp
or
xchg
loop
in
sub
leave
nop
jno
fwait
decb
mov
sti
nop
jl
daa
and
pop
fwait
pop
sahf
add
lods
in
fwait
push
addr16
adc
add
add
pop
jmp
jecxz
out
cs
test
dec
in
mov
lahf
lock
sub
pop
rclb
cmpb
mov
mov
shrb
sub
out
push
stc
sbb
shlb
pop
mov
mov
or
decb
sub
xor
into
shll
ret
xchg
push
lods
sub
xor
fidivrl
xchg
aas
mov
jp
push
nop
cmp
push
dec
rolb
iret
lcall
adc
stos
in
inc
test
pop
cmc
daa
inc
aam
add
in
inc
out
dec
pusha
add
lods
pop
or
sub
gs
pop
cmp
lret
and
pop
inc
ret
lcall
fstpl
push
les
aas
ret
push
or
or
sub
xor
mov
fdivs
fstps
bound
cld
xchg
xor
ret
and
rorb
jge
mov
lock
ret
adc
xor
rorl
sarb
or
cmpsb
insl
hlt
into
aas
into
das
out
test
cmp
xchg
jb
and
cmp
dec
sub
jge
fwait
add
jns
inc
push
jle
dec
adc
cmpsl
inc
fisubrl
movhps
cmp
cmp
loope
xchg
sbb
push
xlat
out
sbb
or
cwtl
mov
inc
sbb
dec
pop
in
int
pushf
xor
xchg
lret
mov
mov
pop
out
in
call
call
add
sbb
out
cli
xchg
loopne
insl
cld
jbe
mov
dec
mov
flds
xchg
cmc
mov
cwtl
imul
mov
xchg
jb
mov
adc
jnp
sahf
jl
popa
sub
pop
push
xorl
sub
popf
scas
test
push
pop
push
mov
jbe
shlb
pop
stos
sub
aas
cwtl
cwtl
lahf
lcall
inc
nop
lods
test
ljmp
mov
sub
lea
xchg
and
in
mov
dec
inc
add
jl
mov
cmp
enter
mov
lds
in
scas
fcmovbe
lds
xchg
imul
dec
mov
adc
out
and
mov
xor
ljmp
stc
xor
push
mov
cmp
inc
cmp
das
push
mov
or
lock
jnp
fs
sahf
mov
test
and
sbb
loope
pop
lahf
xchg
cmpsl
das
ret
and
rolb
popf
mov
jle
out
xchg
sbb
scas
inc
add
sti
lret
sub
fs
dec
push
imul
mov
mov
and
stos
rol
aam
lock
dec
xlat
and
mov
aad
inc
ret
movsb
das
push
push
pop
and
aad
loop
in
xor
xchg
test
pop
das
add
nop
fptan
out
mov
js
popf
hlt
or
xor
fildll
insl
cld
pop
fcmovbe
stos
out
aam
js
add
rcrl
sarl
sub
out
scas
sub
mov
fs
into
mov
les
mov
inc
sub
mov
ljmp
test
mov
outsb
imul
xchg
mov
or
das
int3
in
push
mov
cs
lock
shrl
xor
sub
mov
sub
push
aaa
stc
pushf
iret
ret
ret
jb
fnstcw
pop
inc
out
adc
fcoms
mov
sbb
pop
dec
push
dec
ret
push
mov
cmpsb
jge
pop
pusha
mov
sbbb
fs
pusha
push
into
fldt
inc
adcl
xchg
xchg
sbb
cs
testl
jge
xor
icebp
inc
lret
push
int
lahf
push
jle
sub
add
lea
xchg
jae
psubsb
mov
fnstcw
mov
mov
rcrb
xchg
mov
hlt
fwait
adc
pop
sub
je
mov
mov
hlt
cli
inc
or
pop
mov
xchg
ds
pop
jns
adc
push
or
in
icebp
lcall
xchg
or
shl
inc
or
enter
sub
push
push
fidivl
push
aas
and
scas
and
xor
push
pop
stc
dec
loope
sbb
inc
sub
mov
adc
test
inc
cltd
mov
add
daa
sub
xchg
mov
push
mov
add
xor
es
add
mov
scas
jb
xchg
fcmovb
call
nop
dec
icebp
nop
pop
push
add
lcall
ret
dec
test
gs
repz
out
je
les
sbb
leave
xor
and
lock
push
sahf
xor
and
js
or
les
je
gs
or
int3
cs
mov
leave
xor
sahf
dec
loopne
mov
jl
test
fcompl
movsl
sbb
push
or
push
inc
xlat
xor
jle
stos
xchg
mov
fs
hlt
dec
mov
mov
cmp
andl
inc
dec
insl
les
cltd
cmpsl
fbstp
xor
int
mov
dec
sub
sub
and
add
cmp
jecxz
cmp
and
fisubrl
movsl
stc
adc
inc
mov
into
dec
mov
push
dec
rorl
or
mov
std
and
movsb
daa
stos
in
out
scas
cltd
cmp
dec
pop
enter
jecxz
pop
cmp
lods
mov
stc
sbb
and
cwtl
icebp
ljmp
pushf
enter
sahf
popa
shl
mov
and
sub
mov
inc
mov
pop
dec
push
outsb
mov
lock
test
and
es
sbb
sbb
mov
fsubl
test
jmp
aaa
mov
inc
or
mov
repnz
inc
mov
cwtl
addl
outsb
in
mov
push
je
jmp
daa
mov
mov
add
js
push
cmp
aas
daa
movsb
jnp
scas
mov
or
das
dec
jg
pusha
je
jmp
jecxz
mov
mov
nop
movsl
adc
mov
mov
pop
xchg
add
cmpsb
sub
pop
lcall
mov
sbb
push
lds
std
inc
pop
xchg
xor
push
jno
add
nop
cmp
popa
arpl
xor
mov
sbb
es
cmpsl
cmp
lret
aaa
cmp
mov
or
jecxz
lea
pop
mov
in
bnd
inc
nop
js
add
lods
test
mov
fdivrs
and
and
xchg
out
mov
dec
ljmp
xlat
scas
sbb
add
stos
enter
add
or
sub
sub
cltd
adc
xlat
cmpsb
test
fisubrl
dec
ja
outsb
out
sbb
xor
lds
mov
fld
pop
mov
add
dec
jae
scas
imul
xlat
movsl
and
out
repnz
jae
pop
fsub
test
adc
mov
push
push
les
jns
mov
jge
and
das
mov
scas
sbb
mov
lock
mov
insb
lock
push
mov
hlt
out
or
or
xor
fdivrl
mov
dec
add
mov
pop
xchg
mov
add
sarb
out
in
mov
out
jp
add
mov
or
mov
outsb
fwait
rcrl
shrl
xchg
mov
jg
icebp
pop
mov
outsb
jl
repnz
sti
sub
pop
pusha
ljmp
push
pop
arpl
cltd
es
xchg
outsl
adc
xchg
fs
and
or
ds
push
mov
test
and
and
pop
jae
jle
sub
clc
sbb
insb
fstpl
push
mov
enter
out
dec
push
push
rorb
cmp
xor
loope
xchg
into
sarl
cmp
les
cltd
sti
jecxz
sbb
sbb
mov
fmull
lret
xchg
cwtl
sbb
sub
das
xor
pop
fwait
sbb
shrl
inc
cwtl
sub
jae
or
mov
mov
loopne
fidivrs
pop
mov
push
add
rcrl
push
xlat
or
pop
and
sbb
add
add
mov
int3
jle
ljmp
jecxz
xchg
push
pusha
in
lcall
mov
mov
mov
int
push
and
sbb
sbb
lea
aad
leave
cmc
in
xchg
mov
dec
aaa
mov
fistl
jge
and
pushf
int
fildll
adc
sti
hlt
lods
xchg
bound
jmp
push
pusha
mov
xlat
aas
mov
lcall
xor
aad
jo
cmp
inc
dec
add
imul
data16
fisttpl
data16
sarl
loopne
aad
outsl
sub
sahf
pop
cmc
inc
push
add
xor
mov
mov
pop
inc
xchg
mov
insb
jnp
notb
add
sar
lods
ljmp
repz
sbb
or
mov
jle
inc
lock
shll
jl
stc
push
not
add
orb
sbb
aad
shr
addb
pop
sti
cmp
shlb
sub
data16
push
into
jg
mov
repnz
scas
repz
pusha
into
dec
hlt
adc
icebp
sub
lret
sub
xchg
jge
pushf
mov
jbe
sub
daa
ds
xchg
mov
outsl
jge
sbb
lock
pmaxsw
dec
push
cmc
pushf
jecxz
das
xor
ret
sub
xorl
rcrb
sbb
adc
cli
das
lods
push
add
fsubrs
inc
inc
sub
in
xchg
aaa
add
outsl
pop
push
or
lret
loopne
xchg
cmp
mov
xchg
je
fstpt
mov
inc
xor
into
sbb
jae
popf
mov
fdivrs
aas
and
sbb
cmpsl
add
push
jo
clc
aas
adc
aad
fs
fxch
call
lret
jns
mov
pop
mov
repz
clc
int3
lret
dec
das
mov
push
repz
adc
xchg
mov
mov
mov
xor
inc
dec
jo
les
lcall
and
mov
cmpsb
cmpsl
stos
mov
pop
push
dec
hlt
cmp
mov
and
cmp
and
pop
dec
es
mov
pop
enter
pushf
xor
pop
mov
test
call
or
jno
xchg
popa
scas
and
mov
mov
test
sti
inc
mov
inc
xchg
xchg
xchg
scas
dec
add
cwtl
add
shll
and
sub
stos
lods
and
pop
jle
lret
sub
test
popa
push
mov
cld
aaa
adc
sbb
push
iret
lret
mov
xchg
test
call
mov
ljmp
imul
int3
push
stc
cmp
inc
xor
mov
jecxz
popl
xor
add
sub
push
cmp
int3
lds
lods
cmp
dec
push
or
mov
cmp
ja
ja
mov
and
add
mov
popa
sub
les
imul
xor
mov
push
and
stos
push
cld
imul
call
lods
xor
popa
sub
repnz
stos
daa
or
jae
cmp
jmp
das
add
jecxz
jo
jg
sahf
inc
cmp
mov
test
push
imul
cwtl
mov
sub
std
daa
or
push
loope
push
inc
and
hlt
ljmp
inc
enter
xor
out
sbb
out
hlt
sarb
mulb
sub
inc
push
xchg
sti
mov
imul
psraw
das
lahf
popa
outsl
ljmp
adc
mov
dec
mov
adc
fsubrs
add
or
sbb
xchg
arpl
lock
sbb
push
pop
adc
xor
pop
dec
push
dec
outsb
push
xor
pop
mov
xchg
push
pop
les
cli
mov
and
xor
mov
mov
sbb
stc
cmp
int
jnp
sub
jno
mov
aaa
stos
push
adc
ret
or
icebp
scas
scas
cmp
repnz
or
mov
fst
and
adc
add
frstor
add
loopne
imulb
inc
sub
cmc
movsb
push
pop
mov
mov
pushf
xor
into
loopne
fs
mov
mov
fsubp
jmp
and
cmp
xor
sbb
jno
jbe
cwtl
scas
adc
push
pop
push
cmp
fwait
clc
mov
or
sub
fs
or
xor
jbe
jge
ds
fs
pusha
pop
cmp
addl
inc
jnp
jnp
push
jmp
in
out
dec
imul
push
aam
call
or
dec
sarb
sarl
inc
cmp
iret
gs
xor
xchg
jne
jecxz
cld
cmp
pusha
lahf
scas
mov
dec
bound
mov
pop
mov
pop
lahf
cmpsl
and
inc
mov
or
sub
adc
aad
dec
nop/reserved
leave
les
adc
lods
xchg
int3
ds
jl
pop
iret
add
xchg
stos
inc
testl
mov
push
neg
insl
scas
popf
and
mov
push
mov
mov
sbb
scas
scas
leave
push
add
movsb
mov
adc
aaa
fnsave
pop
xor
pop
mov
push
mov
mov
stos
repnz
mov
xchg
jg
repz
pop
push
loop
add
jp
ret
lea
scas
sub
mov
lret
jb
in
xchg
mov
jl
test
fbstp
push
mov
das
in
sub
push
pop
stc
ret
loopne
add
orb
cs
fmull
cmc
push
cs
and
jl
push
or
pushf
ficomps
adc
pop
shll
mov
shl
in
outsb
lahf
or
gs
or
adc
adc
fcompl
popa
push
outsl
lcall
sbb
mov
and
mov
xchg
lcall
addl
pusha
or
push
and
pop
loope
movsb
leave
sub
mov
into
stc
push
or
lods
imul
out
mov
inc
enter
mov
jmp
xor
ja
adcb
das
bound
fdivl
sub
jnp
fisttpl
pop
adc
lock
mov
push
repnz
sbb
push
push
cs
cmp
sub
addl
inc
sbb
jmp
insl
ret
scas
jo
clc
xor
loop
into
cmp
movsl
movsl
pop
pop
cmp
les
xor
int
arpl
mov
incl
cmp
insb
mov
sti
insb
iret
aaa
scas
bound
sub
out
xor
stos
mov
push
mov
sbb
or
aaa
jo,pt
push
dec
cld
inc
andb
into
stc
frstor
add
repz
xor
lret
test
pop
mov
push
shl
mov
push
sub
pop
insl
les
mov
cli
push
and
mov
sub
xor
aad
mov
divl
xlat
fmul
mov
xchg
insb
pop
inc
sub
das
mov
frstor
fwait
jl
in
pop
add
cmp
mov
stc
data16
in
and
pop
xchg
push
je
divl
out
xchg
jo
sahf
dec
push
leave
inc
adcb
mov
cmp
inc
push
push
fldcw
or
mov
icebp
xor
cmpsb
jbe
sti
inc
jns
lahf
mov
pop
fsub
sub
lcall
xor
dec
enter
in
dec
cmp
shlb
push
xchg
add
mov
jbe
mov
les
std
and
insl
in
lods
popl
insb
and
das
mov
ret
cmp
insb
insb
enter
cld
sub
clc
mov
push
aad
mov
daa
jbe
int
mov
js
mov
lret
push
pusha
xorb
mov
jne
bound
inc
movsl
leave
mov
mov
aam
aas
sub
inc
cs
sbb
adc
lret
xor
lock
xchg
sbb
and
sarb
loopne
add
fisttps
adc
cmp
jno
lea
fsts
or
and
mov
push
mov
jbe
add
fadds
aam
mov
in
repnz
adc
daa
movsl
and
sub
jno
aam
repz
mov
lea
fcoms
and
ds
and
inc
and
jb
cld
sub
sbb
pop
and
lcall
sbb
loopne
ret
pop
test
out
jmp
insb
in
loop
add
test
cmp
adc
fidivs
int3
stc
arpl
jmp
jecxz
jns
test
mov
call
in
mov
and
rolb
dec
loopne
push
test
mov
stos
cmc
ds
scas
push
mov
or
pop
inc
lock
add
xor
clc
rcrl
and
movsb
mov
sub
xor
or
cmp
add
lret
scas
out
stos
mov
jecxz
bnd
mov
cmp
and
pop
xor
sbb
out
sub
pop
adc
mov
ret
and
inc
xlat
mov
clc
insl
sbb
sbb
mov
cmp
fcom
push
and
icebp
imul
pop
pusha
xchg
loope
xor
inc
jecxz
adc
sub
mov
divb
jge
mov
aas
les
mov
inc
push
or
roll
dec
xchg
pushf
sub
pop
icebp
sub
pop
popf
aas
mov
cmp
mov
call
ds
dec
out
fisubrs
stos
sbb
iret
xor
ljmp
scas
adc
int
daa
push
dec
cmp
xchg
jbe
in
int3
pop
sbb
inc
xchg
imul
xchg
xchg
pop
andl
jle
inc
and
pop
sub
push
adc
ret
and
or
sub
and
cld
int3
adc
sti
leave
adc
test
jge
into
dec
bound
imul
int3
push
cs
ror
lods
stos
sub
aaa
sti
mov
adc
mov
or
mov
pop
hlt
mov
mov
mov
sbbl
sub
ss
mov
and
jno
sahf
pop
inc
pop
mov
rcr
mov
xor
add
mov
in
jmp
sub
daa
cmp
mov
popf
mov
push
das
daa
das
xor
push
fwait
mov
mov
push
push
xor
jns
sub
cmpsl
lahf
mov
push
xchg
imul
or
shl
xchg
mov
pop
outsb
addb
mov
outsb
push
mov
and
data16
fucomp
push
and
rcrb
faddl
jbe
aaa
aam
jg
mov
xchg
inc
insb
in
cmpsl
push
fistpll
and
imul
or
imul
fwait
cmpsl
repz
mov
or
mov
fdivl
push
dec
xor
daa
iret
lret
addr16
inc
xchg
pop
jmp
outsb
mov
outsl
enter
sbb
pop
js
sub
lods
insl
mov
sbb
rorb
stos
xor
into
sbb
movsb
add
mov
mov
inc
pop
push
mov
sbb
pushf
dec
fwait
push
and
pop
add
idiv
xchg
dec
jecxz
xor
push
mov
sti
sbb
bound
cli
jbe
adc
sti
push
mov
xchg
add
lret
adc
cmp
outsl
dec
jmp
sub
jl
xchg
fdiv
push
xchg
jge
mov
fnstcw
sub
mov
lea
cmp
mov
xor
stos
movsl
mov
bound
outsb
push
or
sti
leave
std
push
push
pop
mov
outsb
test
or
mov
sahf
sbb
sbb
stc
pop
out
xchg
pop
std
std
aas
xchg
mov
daa
andl
fidivs
mov
and
inc
shll
or
mov
orl
fcmovu
jge
outsl
in
ret
enter
ljmp
sub
lea
pop
fidivrl
inc
mov
adc
jecxz
loope
je
push
dec
int3
pusha
pop
daa
lret
js
stos
cmp
insl
lcall
arpl
scas
cmp
jo
adc
mov
int
fdivr
sarb
jge
mov
sbb
push
aas
cli
jge
cmp
sub
inc
leave
dec
cmp
adc
sbb
push
ds
mov
ss
cmp
stos
repz
dec
and
mov
and
repz
xchg
dec
loopne
inc
mov
cmc
fbstp
enter
pop
gs
and
leave
sbb
rorl
dec
xor
insb
push
pop
mov
mov
xor
fnsave
add
jne
mov
loopne
mov
ret
xor
sbb
mov
inc
fidivrs
aaa
pop
xchg
dec
push
add
sub
jns
inc
lahf
add
loopne
cld
fs
sub
scas
jbe
arpl
xchg
imul
in
sti
icebp
test
push
lret
push
outsl
mov
js
aad
push
lock
leave
sbbl
or
adc
xchg
or
mov
mov
mov
mov
xchg
dec
push
shrl
sub
and
repz
and
sbb
jnp
jne
aad
push
std
outsl
aas
xor
and
loope
bound
nop
arpl
int
lods
sbb
sahf
and
mov
pop
stc
orb
sub
fiadds
popf
pusha
jge
mov
das
mov
xchg
stos
clc
mov
repnz
inc
pop
in
sub
or
pop
cld
test
xor
es
or
xorl
hlt
ds
add
mov
pushf
stos
aad
mov
sub
notl
xchg
jecxz
inc
std
add
dec
out
ret
inc
xor
cli
dec
in
lods
in
inc
ret
sarb
es
xchg
jne
mov
add
fdiv
mov
sbb
and
xor
test
mov
and
xchg
ds
out
mov
fisubrs
loopne
and
out
mov
dec
clc
or
or
dec
pop
push
loope
sti
bound
mov
in
adc
sarl
ret
shl
out
jae
push
pop
les
orb
mov
lar
loope
into
cwtl
sub
fists
or
hlt
cli
loope
in
outsb
mov
inc
cmp
mov
xchg
fwait
mov
lcall
xor
sbb
jp
pop
into
dec
xor
out
and
andl
clc
inc
xlat
xchg
fxch
rclb
xchg
lods
xor
lahf
fdivrl
out
lods
mov
jae
push
push
cmp
loopne
clc
add
js
push
sbb
jecxz
cmp
xchg
push
lods
mov
dec
add
xor
imul
adc
fsubp
adc
inc
jge
add
mov
hlt
lcall
in
dec
push
call
adc
and
lret
sub
rol
enter
pop
incl
sub
pop
and
jo
adc
mov
js
mov
hlt
lds
push
or
out
jns
xchg
sti
mov
orl
push
outsl
cltd
addr16
mov
dec
roll
xchg
pop
sub
fadd
imulb
stc
sub
xorb
push
jmp
mov
lea
rorl
mov
pop
mov
daa
fwait
mov
push
stos
ja
cmp
bound
cmp
inc
or
clc
in
sub
mov
sbb
mov
stos
mov
and
fdivrp
jbe
mov
repz
loope
cmp
cli
das
vmovsd
dec
or
jb
mov
mov
cmp
cmp
lret
or
pop
sub
loope
mov
faddl
mov
dec
popa
add
and
arpl
push
mov
mov
mov
ds
std
inc
and
stos
cmp
lods
jg
mov
push
inc
push
pop
xchg
js
loop
mulb
por
scas
pushf
ljmp
jo
pop
inc
sub
fs
or
lock
or
xchg
jl
sbb
pop
jecxz
or
push
ljmp
stc
dec
int
mov
push
call
scas
out
xor
dec
adc
sahf
mov
gs
movsl
gs
mov
pop
push
mov
xlat
stos
stos
popa
push
popa
push
push
fldl
adc
dec
dec
mov
fwait
lea
sbb
pop
jge
gs
cmc
shrl
inc
jnp
inc
pop
xchg
mov
xor
mov
sti
call
pop
mov
mov
pop
xchg
lods
xchg
jecxz
rcll
mov
lahf
xchg
mov
pop
ja
movsb
shll
push
loope
mov
movsb
dec
jbe
in
lret
jle
mov
out
cmp
addl
or
mov
inc
out
jecxz
or
xchg
enter
arpl
dec
addr16
es
rorb
ret
nop
stc
faddl
cmp
int
in
cmpsb
mov
sarl
lcall
imul
and
or
popa
out
xor
ds
cmp
jb
sar
sub
inc
inc
iret
or
pushf
les
sbb
mov
loopne
nop
sub
shl
xchg
enter
mov
pushf
xor
or
or
cs
daa
push
mov
mov
pop
or
inc
lods
pop
mov
out
cmpsb
add
fstl
or
sbb
aam
or
insb
filds
in
xchg
push
test
cmp
popf
mov
xor
adc
mov
pop
dec
xchg
sbb
mov
dec
inc
jp
and
inc
pop
scas
movsl
jb
sub
push
insb
andb
mov
mov
in
in
rcr
cmp
andb
call
movsl
stc
mov
xchg
xchg
mov
pusha
in
movl
push
fwait
pop
lods
push
adc
mov
leave
out
in
inc
addb
mov
test
jmp
cmpsl
xchg
pop
mov
js
inc
int3
cld
fbld
sbb
mov
mov
mov
jb
repz
in
push
and
ja
cmp
sahf
cmp
jg
mov
sbb
leave
loopne
std
das
cmp
mov
scas
mov
pop
je
das
push
xlat
jno
shlb
cli
shll
push
add
aas
xor
ds
lds
dec
sbb
ret
xor
out
outsb
gs
jp
aaa
xchg
dec
pop
adc
cmp
sbb
and
pop
and
in
outsl
pop
fisttps
scas
sub
dec
loope
xchg
jp
out
mov
adc
dec
mov
outsl
and
cmpsl
xchg
test
fs
lahf
jge
mov
push
sbb
mov
jns
in
dec
and
rcrb
test
divl
das
jl,pn
or
in
flds
sub
and
jbe
fs
arpl
sbb
and
notb
cmp
cmovb
inc
or
clc
push
pop
out
push
test
lret
insb
repz
and
out
sbb
test
mov
mov
fldt
mov
mov
mov
or
movlps
mov
add
repnz
sbb
popf
adc
add
loop
fistps
and
ja
mov
cmp
shll
outsb
cs
mov
pop
xor
mov
sub
dec
and
inc
les
loop
mov
pop
mov
adc
push
mov
out
xor
shl
lret
pop
sar
mov
movsl
mov
sarl
aad
imul
in
out
mov
ja
loop
pop
xchg
aam
hlt
inc
lods
or
call
jge
outsb
inc
rol
cli
stos
xor
and
fs
or
cmp
dec
inc
adc
popa
push
cmp
js
mov
loop
cmpsl
mov
insb
dec
dec
movaps
cld
popa
imul
pop
xchg
sbb
dec
stc
dec
je
and
add
stc
sbb
fdivl
inc
cmc
mov
jo
mov
sub
sub
jecxz
sub
lds
movsl
xor
outsb
add
insb
pop
and
or
inc
add
sub
mov
add
mov
add
xlat
sub
daa
xchg
jbe
ljmp
mov
ret
mov
add
cmp
sub
fs
cs
mov
push
jecxz
mov
std
push
fcmovnb
adc
and
imul
pop
test
xchg
add
mov
imul
pop
out
arpl
fidivrl
les
lock
xchg
lods
sub
mov
icebp
pop
or
clc
dec
imul
iret
lahf
xchg
push
cmc
mov
jae
or
push
sbb
cmp
cmp
stos
mov
sar
fwait
loope
lods
xor
mov
and
out
sbb
pop
cmp
cmp
sub
sti
fldt
scas
in
je
mov
sarb
fistpll
push
call
int
push
xor
arpl
ljmp
mov
das
shl
shrl
add
ja
test
andl
inc
add
imul
in
adc
dec
call
ret
mov
mov
bound
call
sub
jle
push
sub
or
add
clc
sbb
nop
cmp
ficoms
cmp
dec
pop
or
and
fs
pop
cwtl
push
and
jle
aad
dec
push
xchg
mov
push
or
into
sub
jne
dec
adc
pop
jl
mov
mov
enter
mov
loope
add
nop
rorl
nop
jo
sub
jle
xchg
push
adc
stc
jae
add
fs
xor
lcall
mov
repnz
or
lret
adc
xchg
jecxz
add
jbe
sub
or
inc
dec
xchg
xchg
inc
adc
hlt
stc
out
mov
push
add
mov
subb
jbe
xor
in
fcmovb
add
or
sti
dec
gs
add
cmc
dec
mov
pop
cmp
jbe
out
popf
mov
insw
sub
sbb
and
in
mov
pop
lret
pop
sub
adc
cmp
xchg
cwtl
movsb
xorb
fistpll
pop
aam
sub
mov
pusha
xchg
jge
pop
icebp
push
xchg
push
std
popf
jge
leave
shlb
sbb
movsl
mov
repnz
sub
repz
push
sbb
inc
dec
pop
mov
in
cmp
scas
aam
pushf
rorl
sub
cld
push
cmc
ss
pop
dec
dec
inc
fs
cmpsb
inc
out
mull
jae
adc
das
cli
sub
fs
jnp
int
lret
xor
rclb
sbb
sub
xor
push
sub
lods
loop
add
mov
cmpsl
rcrl
push
push
cmp
in
jg
outsb
mov
mov
ja
cmc
sbb
dec
pop
xor
xchg
fwait
xchg
add
push
lods
lea
lds
les
pop
cmp
mov
jle
and
movsl
push
test
pop
aam
in
cmp
shl
cmpb
jb
xor
cltd
pop
push
divl
fwait
loope
bound
sti
push
jbe
lahf
dec
mov
sbb
sub
cmp
inc
and
mov
dec
pop
add
test
add
repz
in
lea
xchg
cmpsl
outsl
cmp
sahf
stc
xchg
inc
lea
adc
in
cmp
mov
addl
jl
lcall
sbb
sahf
sbb
add
xor
cltd
inc
pop
jnp
mov
mov
arpl
cmp
add
rolb
ds
add
mov
mov
jo
int3
sbb
jmp
clc
loope
or
pushf
mov
pop
cmp
out
mov
cmp
mull
mov
andb
ret
stc
loopne
int3
xchg
hlt
movsl
sub
in
ljmp
and
out
mov
imul
xlat
mov
sub
push
jle
in
ja
lds
jl
aad
mov
jecxz
jne
inc
divl
inc
push
in
push
sahf
cmc
nop
mov
decb
adc
pop
mov
sub
jo
mov
xchg
dec
je
gs
jg
adc
xor
das
sub
imul
lods
sbb
ficomps
cmp
fidivrl
fsubl
sarb
mov
movsb
call
jp
xor
pop
data16
rorb
std
pop
add
loop
leave
cmp
sub
cld
ds
push
inc
insl
dec
sti
inc
sub
mov
pop
and
jge
out
xchg
and
lds
mov
lret
and
mov
lods
inc
hlt
lds
pop
pushf
in
cld
mov
stos
jne
push
mov
nop
les
mov
sti
xchg
call
cmp
xchg
sub
hlt
sbb
dec
and
imul
fdivrp
arpl
xor
mov
xchg
mov
sbb
sbb
mov
xchg
add
mov
inc
dec
ret
or
loopne
add
push
mov
outsl
ljmp
out
icebp
pop
xor
into
loopne
jo
loop
and
repz
push
sbb
in
xchg
push
mov
les
sbb
mov
les
je
movsb
xor
mov
cwtl
hlt
push
sbb
pop
jne
xor
jns
jl
loope
nop
push
and
cmp
cmp
pusha
jmp
inc
notl
jae
scas
daa
xchg
out
xchg
int
add
shlb
xchg
notb
sub
movsl
fstps
push
adc
loopne
jle
sbbb
cltd
les
imulb
lcall
sbb
lds
sar
mov
out
pop
popa
mov
test
sarl
cmpsb
not
mov
jg
xor
xor
data16
and
xchg
roll
mov
inc
rorl
pop
outsl
ja
cltd
test
dec
in
cmp
mov
inc
call
xchg
sbb
mov
lret
mov
pop
adc
push
jp
and
loopne
push
push
cltd
test
test
sbb
pop
loop
or
adc
add
mov
adc
fldt
psubusw
adc
jmp
popf
dec
pop
scas
leave
int
nop
cmp
push
repz
mov
arpl
fsubrs
stos
enter
xchg
xchg
repnz
fsubs
jae
jae
push
pop
sbb
xchg
or
jbe
ss
mov
lret
add
cmp
popa
lret
jecxz
sti
mov
daa
mov
sbb
sub
fisttps
pop
icebp
mov
adc
pop
xchg
inc
push
sbbl
orb
cmpsb
push
sti
fnstenv
pop
les
add
xchg
ja
mov
jl
andl
sti
in
jmp
mov
mov
xchg
jbe
in
jbe
xchg
insl
fwait
sbb
and
fwait
lock
fs
lock
scas
or
pop
call
add
pop
mov
scas
or
sbb
or
inc
jne
divb
mov
inc
and
mov
add
add
mov
nop
sbb
mov
lcall
sub
mov
lods
repz
fcomps
cmp
cmp
or
dec
lahf
inc
aad
ret
addl
fadds
in
loop
and
and
fisttps
les
lret
cmp
xchg
mov
mov
mov
out
xchg
mov
jnp
sub
lret
bound
or
pop
jecxz
or
imul
sbb
jne
in
jl
or
fidivl
add
sbb
xlat
leave
test
mov
push
xor
dec
pop
pop
loop
xchg
cmp
fbstp
out
or
cmp
mov
sub
ss
xchg
adc
cmp
mov
pop
jp
mov
jmp
data16
fldenv
cmc
aas
mov
sbb
popf
ret
pop
jb
or
call
out
sbb
jmp
cmp
cmp
sub
pop
fdivrl
mov
or
xchg
sbb
mov
xchg
lret
adc
jnp
rclb
mov
mov
mov
loope
fwait
and
roll
movb
push
xchg
aad
mov
mov
sahf
sarb
adc
xor
jno
mov
push
pop
jne
sbbb
sbb
xor
add
sbb
inc
push
mov
sti
in
dec
clc
mov
lock
enter
jge
mov
loopne
pop
andl
pushf
cld
arpl
int
orb
int
cwtl
ja
cmp
adc
int
add
sbb
movsb
pop
mov
pusha
lea
int
lret
test
int3
sub
out
mov
pop
adc
add
xchg
scas
in
inc
xchg
roll
cltd
push
lds
inc
sbb
push
sbb
adc
jnp
imul
insl
push
mov
sub
insb
leave
insl
or
inc
add
sahf
pop
and
jmp
and
push
sub
rcrl
cwtl
mov
test
mov
jne
fcmovnu
les
stc
and
mov
sbb
xchg
js
sbb
add
sbb
imul
imul
enter
imul
test
and
and
mov
add
repnz
orb
lods
jecxz
xor
aas
adc
scas
pop
or
xlat
mov
into
rorb
test
shlb
imul
sub
mov
leave
inc
popf
cmpsb
inc
xchg
inc
jae
add
sahf
sbb
icebp
ja
arpl
cmp
orl
push
aam
fs
dec
cli
lahf
aad
sbb
push
sar
iret
rcl
add
in
addb
fbld
in
pop
sbb
inc
in
or
pop
jle
and
ljmp
sti
ljmp
push
pop
jmp
pop
mov
sub
ret
jl
loopne
int
fs
push
and
mov
cmp
inc
jb
fisttps
xor
hlt
jmp
lock
int3
cmp
adc
std
adc
mov
mov
add
lret
pop
push
cmpsb
das
jne
into
scas
and
jae
lret
rcrl
aas
divl
push
in
sub
das
xchg
mov
pop
cltd
mov
jl
pop
int
repnz
cmp
mov
dec
fisttps
push
out
jg
dec
fisubrs
pop
popf
int
or
aam
xor
and
inc
push
sub
or
sahf
mov
push
adcl
push
outsb
dec
mov
data16
sub
xor
lods
mov
mov
xchg
lods
pop
and
rolb
sub
outsl
cmpsl
insl
sbbl
aas
je
in
jle
leave
xor
stos
sbbb
inc
pop
sbb
xlat
xor
cmp
adc
addr16
fstl
adc
sbb
jp
jp
jecxz
ret
mov
adc
jle
jne
aas
shl
out
sbb
pop
mov
scas
aam
jns
fildll
lock
leave
xlat
push
fidivrl
repnz
mov
hlt
daa
xlat
inc
iret
push
sub
adc
cld
sbb
sub
ficompl
loop
ror
je
cmp
xchg
cltd
mov
cmpsl
pusha
jmp
je
lcall
pop
and
jmp
fcoms
push
cmpsb
jp
jl
rcll
ret
mov
jecxz
loop
mov
jp
jecxz
xchg
dec
adc
mov
inc
mov
or
sub
sbb
mov
sahf
fstps
push
into
xchg
push
cmp
cmp
mov
insl
inc
jmp
mov
mov
jne
or
lret
or
inc
mov
adc
fs
hlt
cmpsl
cmp
lods
mov
dec
lock
hlt
clc
loop
jmp
or
test
pop
sub
dec
jl
out
add
movsb
pop
repz
cmpsl
mov
cli
imul
notb
pop
and
out
cwtl
jbe
idivl
loopne
shll
stc
test
leave
dec
and
and
sbb
gs
fwait
aad
ret
pop
je
repnz
sub
fistpll
jnp
icebp
mov
xor
dec
daa
lods
daa
into
ja
lods
gs
jmp
or
sahf
adc
mov
imul
xchg
cltd
dec
jg
or
mov
add
dec
aam
scas
and
dec
xor
mov
rcll
jg
aas
xchg
jo
stc
cmpsb
add
scas
lock
push
sbb
xor
repnz
ret
pop
rorb
add
push
iret
shlb
call
mov
out
lret
mov
xor
push
cmp
jl
lds
inc
addl
mov
jae
aaa
and
sub
jno
loope
sarb
mov
enter
push
sub
fidivl
dec
adc
insb
inc
pop
sub
pop
adc
ja
xchg
or
inc
mov
adcl
jmp
pusha
sub
pusha
in
jne
sbb
and
btr
xchg
cmp
mov
incl
sti
arpl
test
shr
movsb
cli
sbb
fcompl
pop
aaa
clc
cmp
add
mov
sub
scas
sbb
ja
add
mov
cld
test
int3
xchg
and
test
mov
in
mov
xor
mov
push
ja
fdivrl
xorl
push
jmp
sbb
sbb
test
das
out
in
movb
cmp
sub
sub
cld
fwait
aad
sub
mov
cmp
pusha
movsl
sub
mov
push
paddw
les
inc
rcr
sti
es
fsubrl
es
ds
adc
and
popf
movsb
adc
cmpsl
std
in
movsb
test
loope
lods
xchg
lahf
mov
add
hlt
sub
fidivrl
and
push
shrl
pop
mov
clc
cwtl
arpl
mov
pop
mov
ss
ret
ret
cmp
jecxz
mov
xchg
pop
out
iret
pushf
adc
ret
aam
adc
movsb
xchg
jg
mov
cmp
outsl
jne
push
shll
loope
test
add
test
xchg
sahf
xor
and
push
sbb
adc
out
add
das
and
mov
xchg
lret
or
pusha
and
adc
enter
mov
jle
jmp
mov
cmp
ja
push
cmp
sbb
dec
mov
iret
jno
pmaxsw
lcall
xchg
cmp
mov
scas
lea
or
movsl
xor
fucompp
testb
mov
imul
and
inc
jnp
sbb
mov
adc
mov
dec
aas
mov
clc
repnz
movd
jo
loop
pop
pop
jge
mov
jnp
mov
loope
xor
sti
stos
aam
and
cmc
ljmp
gs
movsb
sbb
lcall
sbbl
loop
mov
or
pop
jns
in
mov
pop
xor
sbb
cmpsl
pop
cld
jp
adc
xchg
mov
mov
add
in
movsl
push
sbb
jge
mov
ja
mov
ja
in
movb
sti
xchg
and
and
sub
dec
pop
shlb
mov
xchg
aaa
dec
lcallw
push
mov
push
jae
fimull
sub
out
xor
dec
pop
std
xor
loop
into
fwait
dec
mov
add
mov
dec
in
andb
dec
add
sti
cmp
ret
test
cld
pop
repz
imul
push
mov
clc
cmp
iret
mov
lods
in
sbb
mov
adc
sub
mov
lcall
cmpsl
xchg
push
inc
fcmovb
lret
jle
sbb
aas
pop
xor
xor
fcoml
bound
stos
add
clc
arpl
mov
and
sub
fdivl
jae
push
or
mov
ret
clc
ljmp
xchg
out
xchg
mov
and
scas
and
lock
mov
sbbl
jbe
mov
push
std
pop
xor
xchg
jb
in
repz
jb
push
test
fstl
lcall
fs
cmp
xlat
inc
jl
add
adc
shl
cmp
cmp
gs
mov
lods
outsb
sbbl
cmpsl
out
jg
test
notb
and
insl
xor
mov
mov
and
cmpsl
lock
pusha
cli
movsb
dec
mov
les
sbb
jmp
sub
andl
cmpsb
enter
cmp
push
das
mov
hlt
mov
outsb
pmuludq
sub
xor
push
notl
shlb
js
xchg
cmp
jbe
repz
jno
daa
pop
mov
in
loop
cmpb
jge
and
adc
in
mov
and
cli
lods
or
sti
sub
xchg
test
adc
mov
jbe
lods
add
push
repnz
and
loopne
adc
pushf
adc
daa
add
cmc
push
jge
xlat
loop
movsl
lock
mov
and
in
movsl
out
hlt
movsb
xor
sub
mov
inc
and
jg
pop
adc
push
push
cmp
mov
scas
addr16
pop
add
in
mov
lods
adc
and
jb
adc
cltd
cmp
gs
xchg
xchg
or
sbbb
or
loope
sbb
lret
xor
push
push
jb
sbb
push
aaa
jbe
scas
pop
xor
jp
xor
add
mov
pusha
in
jb
push
cmp
pop
pop
pop
je
shlb
cmpl
push
call
loope
pop
xchg
xchg
fistpl
mov
pop
mov
inc
std
cmp
imul
gs
or
mov
out
div
call
fldt
inc
movsl
sahf
addr16
shr
cwtl
adc
xor
or
xor
mov
lahf
dec
fs
sbb
pop
xchg
test
rcrb
xor
xchg
aad
mov
test
push
insl
inc
sti
ret
mov
je
fs
cmp
mov
stos
xor
outsl
push
mov
xor
mov
jnp
pop
jl
fmuls
rcl
lds
pop
popa
imul
jns
mov
mov
mov
push
jle
jecxz
jecxz
cmp
or
and
sub
ljmp
popa
adc
sar
or
shrb
int3
loop
outsl
call
loop
jns
cmp
fistl
pop
add
pop
add
push
mov
pop
dec
daa
fcmovnu
es
ret
pop
sbb
loopne
es
push
or
mov
mov
inc
pusha
cltd
push
mov
sar
lea
cli
fs
jmp
cmc
add
and
sti
popa
mov
sbb
stos
xor
andl
iret
dec
xorl
sbbl
ja
xchg
mov
xchg
insb
push
mov
out
xchg
dec
imul
popa
xor
sub
cmp
sub
xchg
std
jne,pt
inc
fs
les
sbb
mov
sub
ljmp
stos
loope
mov
sbb
int3
xlat
fmuls
mov
jbe
xchg
in
adc
outsl
cmp
cld
cld
pop
ss
mov
orl
ja
add
into
pop
gs
mov
xchg
popf
scas
mov
xor
jecxz
cli
add
adc
adc
aaa
sbb
lret
add
das
movsl
repz
xchg
sbb
and
adc
mov
mov
jb
pop
lods
fcoms
lahf
sbb
ret
jnp
pop
std
mov
mov
and
insb
jb
mov
mov
or
insb
or
cltd
and
inc
mov
push
imul
aaa
xchg
xchg
data16
add
in
popa
mull
inc
pushf
clc
ret
dec
hlt
repz
mov
mov
cmpsb
inc
cmp
or
fidivrs
loop
lds
jo
nop
mov
sub
imul
les
jecxz
outsl
mov
lods
inc
add
or
arpl
dec
sbb
adc
cld
outsl
dec
leave
stc
ds
push
jecxz
popa
dec
jo
jmp
daa
dec
mov
lods
cmp
push
clc
mov
sbb
adc
cmpsl
out
out
negb
add
sbb
andb
cmp
sub
in
jl
push
jns
dec
push
shll
fwait
mov
dec
or
jmp
mov
ljmp
inc
sahf
mov
js
add
out
gs
sbb
push
lock
sbb
pop
in
in
les
pusha
out
mov
and
fldcw
push
inc
xchg
inc
dec
incl
sbb
xchg
movsl
fbld
jae
push
or
inc
or
mov
or
push
inc
clc
push
jmp
adc
sbb
fdivp
stos
out
inc
sbb
movsb
jae,pn
and
fldcw
imul
cmp
adc
push
les
and
xchg
cmc
ret
es
pusha
in
mov
pushf
or
push
cmp
mov
xor
rorb
lods
push
daa
pop
adc
cmp
mov
clc
xchg
test
lahf
out
dec
push
xor
adc
lods
inc
shl
and
scas
jl
jecxz
ja
mov
cmp
pop
popa
rorl
or
out
and
sbb
push
outsl
mov
jns
mov
xorl
stos
fbld
or
jle
fmuls
mul
jne
fisubs
stc
shr
mov
xchg
mov
in
cmp
xchg
dec
add
dec
sub
mov
adc
push
mov
xchg
cs
mov
fcmovne
cmpsl
in
or
mov
lds
lods
insl
xchg
in
sub
ficomps
js
stos
fistpl
push
mov
mov
jge
inc
sarb
push
fnstcw
les
pop
arpl
jmp
lods
dec
push
xchg
in
mov
pop
push
inc
mov
mov
push
push
lods
std
push
lods
test
inc
jne
addr16
adc
pushf
xor
or
jl
sahf
xchg
icebp
repnz
push
jecxz
dec
fildl
jae
cmp
add
sarb
xchg
xchg
nop
mov
pop
push
cmc
mov
and
out
add
add
adc
inc
adc
insl
xlat
out
out
sub
stos
mov
fstpl
xor
mov
hlt
fstpl
cmpsb
addl
test
adcl
add
dec
pop
iret
sbb
test
sbb
cld
cmpsb
or
and
repz
jmp
mov
jl
std
jl
ds
push
push
rol
popa
test
pushf
in
in
fsubl
imul
or
lret
ret
cwtl
fcmovnu
add
jae
dec
mov
enter
cld
xchg
add
lock
xchg
lahf
push
mov
sub
cwtd
pop
xor
or
xor
mov
mov
dec
fisubl
xchg
or
fs
push
and
inc
sub
xor
pop
and
test
cmpsl
cmc
shrl
inc
fcom
arpl
add
gs
adc
inc
sub
xlat
cmp
sbb
add
jecxz
pop
xchg
adc
mov
cmp
test
movsl
jmp
lret
fdivs
or
lods
inc
and
sub
in
mov
ja
or
sarl
add
sbb
jge
adc
aaa
push
movaps
sti
fdivrp
cmp
imul
xor
jbe
data16
les
aas
out
rorb
push
sbb
rol
inc
adc
arpl
iret
jno
cmc
mov
jge
cmp
inc
mov
push
inc
push
addr16
push
xorb
out
ret
xchg
xchg
insb
inc
scas
mov
add
jle
lcall
inc
lea
fdiv
popf
or
pop
arpl
and
cs
jns
aad
faddl
imull
pop
jecxz
jne
adc
adc
sbbb
xchg
arpl
lcall
iret
xchg
js
gs
outsl
leave
out
xchg
add
dec
pop
fwait
cmp
jo
push
or
mov
clc
pop
mov
jne
insl
mov
dec
mov
jl
sub
dec
out
lret
jo
mov
push
mov
push
push
fstpt
loope
sub
jbe
ljmp
inc
lcall
adc
das
pop
popa
mov
push
imul
pop
fwait
inc
mov
in
js
stos
outsl
addr16
mov
out
nop
mov
cmp
out
rol
into
dec
out
mov
icebp
jns
push
jp
sub
mov
pop
adc
sbb
push
arpl
and
adc
mov
fadd
clc
and
std
lcall
mov
in
sub
xor
je
stc
adc
adc
sbb
insb
gs
aam
jmp
mov
xchg
lret
rcll
jge
or
sub
mov
imul
or
addl
jae
pop
add
pop
sti
and
stos
adc
sbb
sbb
lods
shll
fwait
jl
in
lahf
add
lods
sahf
aam
xor
xchg
imul
cld
sbb
loop
or
pop
hlt
pop
jae
add
push
shll
notl
xor
or
data16
call
adcb
inc
imul
fs
jb,pn
cmpsb
test
mov
xchg
in
mov
dec
test
es
sbb
mov
std
icebp
notl
aaa
jnp
or
pushf
xchg
push
rclb
dec
rcl
pop
adc
sbb
aas
sti
jnp
mov
xor
sub
mov
inc
inc
pop
adc
leave
push
pop
xchg
and
jle
lahf
into
and
add
push
sbb
insl
jp
shlb
jo
into
xor
mov
ja
xor
mov
cmp
imul
push
mov
xchg
js
ss
outsl
pop
sub
pop
into
repnz
std
xchg
jae
mov
dec
adc
mov
neg
fisubs
sbb
push
hlt
subl
sub
or
sbb
je
out
lods
xchg
ja
adc
in
daa
cmp
cwtl
jp
add
add
xchg
shll
and
mov
adcb
test
jne
enter
fidivl
xchg
cmp
adc
sub
add
movsl
das
lret
mov
xor
test
mov
xor
jnp
mov
jg
out
das
jg
int
aas
cmp
dec
ret
out
push
cld
aas
add
popf
sbb
repz
jmp
ret
sbb
xchg
fdivr
nop
dec
push
add
in
insb
adcl
xor
push
dec
into
int
test
mov
xor
adc
sets
js
dec
lea
mov
leave
popa
push
xor
inc
mov
adc
pop
mov
mov
cmp
cmp
pop
mov
lret
fldcw
jo
fidivs
stc
inc
jl
xchg
mov
cltd
or
mov
push
dec
ljmp
imull
adc
cs
aas
sbb
fld
sti
mov
sub
das
jae
notb
roll
imul
adc
cli
jnp
pop
and
push
jle
mov
mov
mov
scas
push
cmp
lahf
leave
and
sub
ret
adc
test
sbb
sbb
mov
push
dec
dec
je
dec
pop
subb
pop
mov
stos
add
aad
lret
lret
mov
outsl
dec
xor
sub
ss
jle
dec
neg
pop
jne
nop
ds
fsub
fldl
add
xchg
sub
cli
adcl
lret
aad
fists
imul
pop
cltd
std
jp
nop
pop
and
lcall
outsl
sar
ret
int3
dec
lret
fimull
xchg
rorl
in
jg
divb
dec
mov
jb
xchg
and
sti
mov
push
sti
stc
cld
jnp
mov
xor
and
movl
lahf
divb
in
in
std
imul
pop
mov
repnz
add
cwtl
out
clc
mov
loop
inc
in
call
ret
icebp
cld
push
pusha
loopne
jne
leave
xor
pop
leave
mov
jecxz
sahf
loopne
adc
stos
ljmp
or
mov
nop
iret
dec
push
jbe
in
lds
mov
test
pop
dec
adc
lcall
shll
add
push
jns
push
cmpsb
inc
iret
dec
adc
mov
mov
mov
xchg
xchg
hlt
mov
fstpt
lret
stos
popf
xor
nop
sub
inc
inc
sub
mov
xchg
loope
fndisi(8087
sub
jo
lds
add
and
xchg
fs
test
rcll
es
add
jnp
inc
icebp
std
and
pop
sub
fwait
aaa
lret
clc
pop
mov
xor
ficomps
mov
mov
and
sub
test
jmp
jge
cmpsl
lcall
push
inc
repnz
je
xchg
loop
lea
sti
sub
fwait
std
sahf
dec
fsts
jnp
pop
sub
pop
int3
inc
lahf
jmp
jo
jbe
fidivrl
jo
aam
jge
aam
ja
jl
fdiv
insl
aaa
pop
lret
imul
dec
cmpl
out
lds
sahf
xor
movsb
cmc
rcrl
push
mov
add
cwtl
rcr
mov
push
mov
adc
aaa
push
dec
dec
jmp
cmpl
lock
push
mov
mov
push
nop
mov
lahf
out
or
in
mov
and
ja
xchg
cmp
fsubs
stos
push
cmp
lock
je
aas
adc
outsl
dec
out
xchg
lahf
dec
rcrl
nop
and
pop
mov
dec
jg
or
sub
lret
push
subl
and
notl
in
xor
jae
mov
add
mov
fsubrl
inc
out
out
loopne
jb
add
and
rclb
shl
cmp
cmp
inc
add
and
lods
cmp
xchg
or
sub
jg
je
or
add
jae
sbb
repnz
out
js
xor
mov
adc
sbb
push
repz
adc
bound
sub
insl
sbb
sbb
aaa
call
repnz
or
lods
in
cmp
hlt
sarl
mov
aam
add
outsb
loopne
fwait
popf
fsubrl
stos
rcll
aad
sbb
and
negl
jno
pop
fidivl
ss
pushf
fwait
cmpsl
adc
daa
call
adc
sbbl
jmp
je
out
cmp
inc
dec
jmp
sbb
mov
int
dec
aas
inc
les
sar
dec
in
scas
shlb
cld
and
aam
shlb
jmp
jl
mov
mov
sub
aam
and
add
movsb
sbb
and
out
adc
cs
repz
xor
adc
xchg
je
xchg
dec
and
and
pop
push
dec
xchg
fwait
mov
lods
movsl
xlat
and
fimull
inc
add
int
cmp
repnz
hlt
cmp
mov
jmp
nop
sbb
cmp
loope
out
fwait
ret
dec
repz
sahf
insb
loope
jbe
pop
mov
addb
dec
leave
in
in
outsl
sti
xor
mov
and
inc
sub
inc
ds
cltd
jecxz
mov
jg
out
pop
cmp
sti
jp
arpl
fwait
sbb
push
cmpsl
or
testl
pop
lret
dec
add
test
jg
outsl
jge
or
xor
mov
pop
adc
negb
rol
mov
xchg
sub
enter
dec
jg
lahf
xchg
mov
rolb
mov
loope
and
shrl
xor
enter
or
mov
xchg
ret
daa
daa
repz
andb
movsl
shll
push
cltd
jl
repz
mov
mov
jnp
push
cs
mov
mov
mov
pop
test
lahf
mov
mov
fdivs
das
stos
push
popa
lret
sbb
push
shl
out
mov
cmpsb
inc
cld
outsl
lock
jns
or
jge
test
lods
adc
inc
ret
jbe
fdivrl
dec
jmp
dec
fwait
pop
pop
out
adc
aas
inc
xor
pop
push
fimull
popa
jmp
js
lcall
jge
mov
jecxz
xor
push
inc
push
test
sub
mov
pop
xchg
js
and
test
dec
in
adc
pop
negl
lods
push
sahf
pop
idiv
add
xor
jb
cmp
cmp
scas
lock
sub
inc
mov
mov
enter
cmp
cmp
xor
cltd
sub
sub
jnp
pop
xchg
inc
or
cmpsb
sarl
pop
sti
scas
mov
cmp
mov
ficomps
xlat
jnp
loope
pop
or
into
daa
sti
aad
int3
pop
and
mov
adc
jmp
add
jae
popa
sbb
or
push
sahf
data16
inc
adc
enter
cs
add
lret
sbb
and
shll
inc
cmp
push
fs
mov
scas
mov
sti
lret
pop
ja
movsl
jp
into
out
fcmovbe
inc
add
in
scas
xor
idivb
or
insl
test
loope
das
and
dec
push
jp
cltd
xchg
popa
push
dec
adc
shld
inc
xchg
cmp
jne
pop
jmp
pop
call
mov
jnp
xor
mov
jo
push
push
cs
stc
sbbl
adc
xchg
add
or
sbb
cwtl
mul
pop
lret
mov
inc
or
xlat
scas
or
sbb
jl
gs
mov
xchg
sub
imul
fwait
mov
aas
movsb
push
push
sub
enter
mov
shl
cltd
push
mov
jge
pop
lahf
mov
das
outsl
mov
jo
movsl
int3
leave
push
rcrb
inc
adc
stos
mov
jle
cmp
xchg
orb
repz
adc
cs
mov
ret
and
fisubl
jb
jg
clc
sub
dec
push
xchg
xor
out
xor
in
add
lcall
cmp
cmp
cltd
cld
aaa
mov
in
sahf
xchg
pop
out
add
sub
adc
pusha
or
arpl
lock
and
jno
mov
mov
outsb
fdivs
inc
push
or
xchg
sahf
fmull
stos
jae
ljmp
cmp
xchg
icebp
in
mov
sarl
movsl
xchg
mov
push
push
movsl
inc
shl
hlt
mov
dec
sub
loop
enter
jbe
add
in
add
sub
lret
test
out
pushf
movsl
xchg
ljmp
pop
sbb
pop
sub
cs
add
mov
out
repz
mov
cmc
in
je
pop
mov
push
mov
repnz
pushf
sbb
jl
and
sub
add
add
mov
push
mov
dec
jecxz
rolb
mov
xor
int
mov
dec
push
stos
movsl
or
subb
dec
jae
clc
sub
inc
js
invd
in
inc
rcll
mov
dec
push
popa
or
sbb
fwait
push
out
sbb
ficoms
fxch
aam
xlat
adc
and
mov
cmp
js
mov
or
xchg
jno
pop
pop
test
pop
mov
scas
mov
fdivr
aaa
dec
mov
jae
push
xor
add
dec
mov
negl
inc
shrl
jp
aam
cltd
push
dec
mov
into
roll
push
fnstenv
int
mov
xchg
data16
sahf
dec
xor
mov
mov
dec
rorb
mov
xlat
adc
xchg
imul
dec
sub
repz
push
jo
nop
imull
call
je
xchg
adc
jp
loopne
dec
xchg
jg
fwait
movsb
cmpsb
dec
ljmp
xchg
repz
ret
cld
mov
testl
cmpsl
in
addr16
enter
dec
pop
jl
arpl
scas
cs
push
or
shlb
aaa
cli
js
dec
out
cmp
mov
das
testl
stos
sbb
mov
fisttpl
and
repz
fdivrp
les
push
dec
dec
icebp
ret
jge
mov
ret
jnp
push
pushf
lahf
push
test
repz
cli
and
mov
and
xchg
inc
es
in
addl
lret
fs
lret
sarl
imul
data16
sub
sub
loop
mov
cwtl
xor
cld
xchg
add
scas
and
mov
mov
or
fmuls
daa
lret
pop
ret
push
mov
pop
pop
pop
dec
mov
mov
sbb
or
pop
jae
cmp
sub
and
outsl
mov
mov
jae
sahf
dec
or
pop
and
in
push
aaa
jb
or
mov
mov
mov
call
jp
xchg
ficoml
sti
not
adc
into
pop
sbb
jno
outsb
xchg
andb
test
sti
mov
or
sub
xor
or
xor
mov
add
shl
mov
int3
xchg
lea
dec
add
lcall
aaa
or
ja
adc
jp
mov
fs
mov
je
pop
push
movsb
outsl
jecxz
lods
cli
adc
jns
mov
popa
es
mov
push
clc
lcall
js
jne
adc
cmpsb
stc
cmp
xchg
and
bound
mov
aam
jmp
add
dec
stc
xchg
mov
mov
adc
push
call
out
shr
out
cld
decb
scas
lahf
jbe
pop
mov
xchg
sbb
or
dec
xor
cmp
add
mov
test
pop
loopne
lret
clc
or
mov
jae
push
push
dec
sbb
add
cmpsl
mov
sbb
jmp
imul
imulb
iret
out
stos
out
call
in
dec
imul
mov
xor
and
loopne
clc
pop
or
xchg
sbb
xchg
sbb
xor
loopne
bound
push
add
cmp
mov
aad
rep
mulb
pusha
lahf
int
sub
xchg
insl
loop
rcrb
sub
fsubr
addr16
sbb
sar
push
imul
sbbl
add
in
push
sub
push
jne
dec
shrl
jae
out
rclb
jmp
xor
jle
sbb
mov
cmp
inc
fcomp
and
inc
pop
cmp
pop
mov
or
push
rcrb
xchg
in
scas
pop
aas
adc
inc
clc
test
sbb
push
xor
xbegin
dec
popf
adc
daa
mov
enter
rcrb
adc
enter
jl
cmp
cwtl
jo
int
negl
sbb
ja
dec
sub
sbb
mov
and
loopne
addb
sbb
pop
ss
pop
scas
mov
xchg
inc
cmp
sbb
lret
arpl
mov
test
rcll
shll
mov
inc
adc
mov
pop
in
stc
cmp
mov
jp,pn
lret
and
rcr
sbb
ret
std
xchg
iret
lock
nop
xchg
fstpt
push
and
icebp
leave
mov
adc
jbe
in
dec
test
in
pop
pop
in
adc
add
out
pop
jg
stos
rorl
test
in
les
fmuls
cmpsb
repz
jg
lret
jle
mov
jbe
xchg
adc
fnsave
lahf
push
xlat
mov
mov
push
xchg
mov
insl
inc
dec
mov
mov
dec
das
jo
pop
hlt
pop
mov
adc
mov
xchg
ret
sub
imul
sbb
and
loopne
rcrl
aas
xchg
std
repnz
addr16
imul
mov
xlat
jno
mov
sbb
out
or
inc
lret
int3
dec
ja
mov
aam
sub
icebp
xor
bswap
xchg
cmp
add
les
cmc
nop
adc
adc
xor
mov
stc
mov
lock
mov
jecxz
mov
mov
push
ret
inc
pop
scas
mov
mov
cwtl
mov
jb
pop
mov
xor
inc
daa
pop
insl
lret
cmp
jb
stc
add
inc
fwait
cmc
ret
jge
and
clc
cs
clc
fwait
aas
and
dec
inc
pushf
cld
pop
andb
adc
jmp
mov
aam
sub
es
fsubrl
add
and
enter
pop
cmp
js
fiadds
or
cld
push
stc
sbb
ret
ds
mov
xorl
ret
lahf
add
mov
fsubrs
cmpb
stos
cmp
or
jg
adc
pop
lock
xchg
dec
sub
mov
pop
pusha
jl
std
test
and
mov
xchg
xor
or
jecxz
mov
in
or
mov
insb
icebp
adcl
test
fidivrs
addl
pop
mov
sbb
cmp
mov
sbb
daa
push
daa
and
mov
jbe
movsb
pop
loopne
inc
add
xor
xchg
cs
pushf
adc
xor
lds
out
push
or
mov
adc
or
inc
push
mov
adc
loop
rcl
inc
cli
sub
pop
stos
mov
mov
xor
ret
js
pop
insl
cwtl
add
movsl
repz
xchg
pop
in
mov
ljmp
xor
mov
ret
cltd
imul
iret
sub
dec
out
jbe
dec
mov
ret
xor
dec
ja
add
dec
shl
imul
mov
and
je
mov
repz
inc
movsl
movsl
push
and
mov
sbb
ret
adc
mov
out
xor
push
cs
mov
inc
lcall
hlt
push
je
dec
fldl
and
xchg
xor
sarb
iret
inc
ret
mov
cltd
push
dec
dec
lods
in
cwtl
inc
adc
dec
push
stos
vhaddpd
dec
cmp
jo
or
and
das
out
pop
mov
xchg
stc
shll
int3
mov
sbb
pop
jo
mov
dec
shlb
lret
stos
repz
mov
mov
mov
mov
adc
jmp
mov
fisttpl
fsubrl
push
lret
xchg
push
cmp
mov
and
jns
add
pop
cwtl
mov
jl
loope
push
popa
jmp
xor
cli
inc
push
or
or
outsl
js
mov
pushf
push
adc
bound
outsl
and
daa
xor
insl
dec
cltd
enter
out
xor
flds
movsl
movsb
fcompl
push
sub
mov
sbb
push
push
inc
sub
push
xor
mov
mov
aam
mov
into
xor
mov
mov
pushf
inc
testb
scas
inc
sti
or
movsb
adc
sub
mov
jecxz
ja
test
fisubrs
jg
sbb
cmc
or
sti
jbe
xchg
les
arpl
in
push
fwait
jno
in
sbb
sbb
pop
cli
or
loopne
push
data16
push
and
pop
mov
or
pop
mov
fs
cmp
mov
pop
cs
pop
add
ud2
cmc
std
xchg
push
mov
fcom
into
cwtl
aaa
into
mov
pop
sub
stc
jne
cmp
out
pop
pop
jmp
push
jns
push
imul
lods
xchg
mov
mov
faddl
mov
icebp
bnd
lahf
cmp
push
xor
adc
jb
es
or
or
daa
jg
fisubl
lahf
jmp
push
and
mov
dec
cltd
mov
or
mov
cmpsl
or
aaa
std
cmpsb
dec
jae
mov
inc
or
pushf
mov
push
mov
out
inc
pop
adc
movzbl
in
cli
std
movsb
sbb
ds
lock
call
pop
add
fistpll
test
push
sub
xor
test
out
add
and
outsl
dec
mov
jecxz
adc
es
repz
jb
aas
and
and
pop
hlt
xor
mov
roll
add
jecxz
xchg
jle
add
je
mov
mov
out
inc
mov
cwtl
inc
adc
jbe
mov
push
pop
idivl
xor
sub
xor
js
int3
adc
ja
xor
out
mov
push
cld
sub
das
xor
cli
mov
popf
cwtl
dec
sub
subl
jmp
shlb
xor
mov
push
inc
adc
and
sub
scas
ret
xchg
enter
into
pop
sub
pusha
aaa
jb
ja
pop
movsb
or
pop
out
mov
push
pop
mov
fcompl
jae
aaa
imul
add
fstpl
add
repnz
in
scas
and
xor
inc
cld
repnz
scas
jb
enter
xchg
mov
xor
addr16
out
loopne
xor
les
push
aad
sbb
in
das
insb
or
jmp
sub
and
jl
jb
inc
adc
pushf
xchg
loopne
rorl
les
fiaddl
sub
aad
cmp
rcrb
movsl
sbb
sbb
cmp
and
pop
push
lret
or
cmp
dec
fiadds
je
jecxz
and
adc
fisubs
jb
mov
divb
fiaddl
mov
fcmovbe
jae
xchg
push
mov
in
xor
jmp
sarb
subb
dec
add
rcll
out
das
dec
jg
xor
into
mov
out
je
outsl
mov
dec
aad
dec
movsl
or
xor
mov
out
dec
and
pop
insl
lahf
cmp
jbe
sar
sbb
stos
mov
rcl
aad
mov
loopne
and
cmp
xor
pushf
in
inc
mov
popa
jl
mov
test
shr
sahf
std
mov
dec
cmc
gs
cmp
sahf
nop
mov
imul
inc
loope
hlt
push
mov
cli
sub
inc
mov
jo
xlat
in
inc
sub
test
sbb
and
and
int3
jb
or
pop
cmc
sahf
lcall
cmp
fisttps
iret
dec
mov
ds
lds
divl
sahf
xchg
arpl
sbb
daa
xor
call
std
loope
mov
push
jl
lahf
enter
sarb
imul
cmp
stos
inc
mov
pop
dec
and
mov
or
add
mov
fwait
sti
sub
lahf
mov
out
rolb
dec
out
je
sub
mov
and
jae
mov
mull
mov
fstl
push
mov
inc
mov
or
and
xor
jno
stc
jl
scas
pop
es
dec
aaa
test
push
mov
fimull
mov
fdivrs
pop
sbb
aaa
inc
xchg
sub
jns
pop
and
popf
movsl
jae
das
or
dec
fnstsw
or
cmpsl
sub
ret
rcrl
gs
icebp
jnp
pushf
mov
int3
shl
icebp
pop
pop
cwtl
mov
xchg
jecxz
pop
jne
jmp
xchg
call
fdivrl
mov
popf
cmp
rcrb
mov
xchg
or
or
mov
or
sub
call
jae
lods
mov
add
aam
pop
loopne
ficoml
aas
fsubrs
fcomi
add
jmp
adc
sub
mov
test
mull
xchg
push
aas
mov
lahf
dec
stos
mov
out
mov
in
mov
fcmovb
dec
pop
clc
mov
mov
and
les
fdivs
xchg
sbb
push
jmp
pop
mov
insl
sbb
rcl
mov
xor
aad
nop
das
out
push
mov
aad
data16
stos
cmp
push
fnstenv
and
mov
rcr
enter
in
in
mov
mov
loop
jg
out
mov
popf
mov
fmuls
sub
mov
test
lods
call
adc
in
enter
xor
shll
adc
xor
xor
cld
pop
sub
pop
mov
scas
or
sub
jo
add
jmp
addr16
lahf
daa
dec
mov
and
and
inc
xchg
ret
cmp
dec
pop
cs
or
rcll
or
popf
ljmp
sbb
adcb
cltd
jle
lods
cmp
pop
fsubs
add
jbe
push
sbb
cmova
adc
jg
stos
mov
add
mov
pop
test
mov
sbb
mov
cmpsl
mov
cwtl
loopne
sub
outsb
adc
xor
sub
sub
cmp
mov
cmpb
or
xchg
xchg
mov
cmp
inc
dec
and
in
lds
nop
shlb
cmc
aad
test
lods
sbb
sbb
enter
add
into
xor
cmpb
push
cmpsb
int3
mov
iret
mov
jle
xchg
sbb
pop
aaa
xor
in
shlb
dec
sub
popa
out
pop
jo
addr16
dec
or
cmp
xor
pop
fwait
and
push
scas
mov
mov
mov
out
xchg
cmpl
add
aas
lret
and
sbb
jno
mov
out
cmc
mov
xchg
or
test
xchg
dec
sub
xchg
data16
loope
pusha
adc
sub
cmc
fwait
pop
pusha
jmp
adc
enter
fidivrl
mov
andl
push
fdivrl
cld
cmp
in
aas
scas
mov
stos
sub
stos
ds
mov
cld
push
xor
sub
inc
cmpsb
xchg
test
mov
pop
xor
or
fcomps
loope
xor
push
push
xchg
dec
mov
xor
cmp
sar
push
push
xor
hlt
mov
adc
or
sub
push
add
js
and
out
loop
loope
pushf
jmp
scas
mov
pop
mov
sbb
lock
inc
das
lods
fstl
sbb
xchg
cltd
ror
je
jp
fwait
mov
scas
inc
mov
dec
outsb
in
jl
mov
sbb
jno
push
aas
test
mov
inc
cld
daa
icebp
lds
sub
fucomi
xlat
mov
inc
test
imul
xor
push
sub
loopne
push
and
subl
call
adc
inc
xchg
pop
dec
mov
pop
sbb
bswap
pop
inc
bound
mov
inc
dec
cmp
inc
jns
stos
insb
loop
inc
pusha
sbb
lods
xchg
cs
push
jl
rclb
cmp
mov
xor
xor
add
hlt
in
in
pusha
adc
test
lcall
push
loop
paddusw
inc
leave
push
dec
pop
and
cmp
lds
test
cmp
out
mov
rcll
adc
dec
jp
pop
movsb
sub
jmp
lods
and
mov
inc
inc
xchg
shl
xor
es
jmp
lahf
pop
mov
lods
sbb
hlt
shll
test
push
mov
movsl
adc
dec
jmp
out
stos
mov
movsl
jb
movsb
jno
and
sbb
pop
sbb
sbb
push
frstor
ret
mov
and
mov
faddl
je
lahf
pop
mov
movsb
jns
or
rcrl
fwait
pusha
xchg
enter
add
dec
adc
sbb
add
cmp
dec
sub
or
push
rorb
mov
ret
mov
pop
arpl
inc
stos
leave
adc
inc
insb
xchg
repnz
xor
xor
clc
pop
lret
in
aad
ret
loop
rcl
lock
sbb
lret
or
mov
lea
addr16
push
movsl
insb
mov
arpl
ficompl
jl
mov
out
cwtl
or
sarb
movsb
xchg
test
cmpsb
rcll
out
fistpl
mov
pop
shrl
add
add
in
cli
clc
xchg
push
jecxz
dec
xor
pusha
or
adc
mov
pop
inc
aaa
fildll
xchg
adc
imul
fsts
mov
in
jno
add
jmp
cmp
aas
fwait
ror
mov
sar
popa
cli
cs
mov
sbb
or
and
push
ljmp
xchg
rcrb
jne
dec
lret
out
mov
xchg
ret
int
inc
mov
cmp
cltd
or
aam
icebp
pusha
rcll
les
mov
out
pop
dec
xchg
jo
mov
sbb
cmp
in
fs
rol
inc
sub
pop
sub
cmp
dec
test
cmp
push
mov
or
and
adcl
jmp
call
call
inc
and
cmp
sbb
mov
loopne
mov
xchg
push
mov
push
jecxz
aad
jl
jecxz
push
fadd
pusha
adc
in
mov
add
push
mov
aam
sbb
add
aas
and
in
aaa
fimuls
dec
pop
and
push
jl
sahf
push
xchg
and
cwtl
push
mov
ss
sbb
testb
push
daa
stc
mov
mov
mov
loope
stos
pop
xor
adc
mov
add
sti
test
or
scas
lods
outsl
cli
lock
inc
jge
cli
in
shlb
cld
sub
jmp
mov
std
pop
icebp
outsl
mov
or
mov
ret
push
fcompl
imul
stos
mov
fsubrs
mov
repz
add
cmp
cmp
xchg
or
mov
xor
das
mov
and
in
pop
gs
jl
loop
and
inc
mov
jmp
repnz
adc
mov
lds
inc
adc
pop
lds
add
xor
das
mov
mov
xchg
sbb
sbb
in
mov
in
les
cmp
mov
jnp
nop
xchg
pusha
imul
lods
into
pop
imul
int3
sub
push
aam
sub
push
mov
scas
in
inc
leave
lds
sub
in
cmp
mov
inc
jmp
xor
add
sub
fdivrl
shrb
scas
or
loopne
arpl
add
hlt
jne
imul
int
into
into
stc
mov
and
xor
cmc
add
jae
xchg
repnz
mov
and
and
push
imul
sub
inc
jno
inc
adc
mov
mov
pusha
cmp
inc
ret
xor
xor
pop
movsb
and
or
test
jns
add
sti
les
mov
sbbl
cld
repnz
xor
xor
sbb
in
dec
inc
dec
sbbb
sub
mov
dec
mov
sub
pop
sub
sub
fists
xchg
incb
nop
lret
xor
pop
icebp
and
sub
pop
sar
xchg
ja
xor
mov
sbb
icebp
imul
or
mov
ret
inc
inc
jecxz
stos
jp
cmp
rorb
rcl
cmp
aam
fistps
jne
pushl
das
sbb
jb
jbe
je
push
hlt
or
pushf
rolb
sbb
lret
jno
mov
add
xor
mov
in
inc
and
mov
xor
inc
scas
sbb
push
outsb
in
inc
push
mov
pop
and
inc
push
add
fildll
inc
testb
dec
mov
mov
dec
adc
shlb
imul
fs
jecxz
push
cmp
test
loop
sbb
mov
cltd
inc
add
inc
sub
jl
sub
inc
xor
es
ljmp
mov
rcr
xor
das
dec
stos
movsb
sahf
jns
lock
stc
imul
fdivp
fidivl
adc
in
daa
and
addr16
sub
inc
rcll
cmp
test
out
in
and
jae
xor
xor
or
jecxz
xlat
cwtl
loop
shll
xchg
mov
mov
jae
inc
jno
adc
fcmovbe
cmp
out
popf
push
mov
and
sbb
sti
pop
inc
lahf
xchg
mov
sub
loope
and
jnp
cmp
jo
inc
imul
cmp
lods
inc
xorl
popf
imull
dec
cmc
dec
loopne
adc
outsl
adc
xchg
adc
into
lcall
scas
or
xor
adc
fs
sub
mov
iret
adcl
jne
jg
std
loope
adc
popf
xchg
call
pop
xchg
or
jp
mov
fst
flds
inc
enter
mov
xchg
xchg
punpckhbw
mov
inc
push
fisubl
movsb
or
mov
jecxz
nop
mov
jae
sbb
sbb
ljmp
push
mov
sub
mov
jl
vcvtps2dq
rolb
inc
notl
mov
xchg
or
jnp
xchg
push
and
jae
stc
pop
xlat
shr
push
jmp
cmp
insb
aas
repz
insl
pop
mov
mov
cmpsl
and
aaa
inc
jecxz
xchg
xchg
scas
out
icebp
aas
or
mov
xor
pushf
imul
xlat
dec
ret
in
dec
in
inc
mov
and
or
lea
loopne
popa
pop
popa
rol
cmp
or
xchg
fdivs
sbb
insl
gs
or
cmpsl
push
pop
dec
jp
out
fstps
out
dec
insl
aas
and
inc
add
inc
in
mov
out
dec
outsb
push
loope
lret
sbb
cmp
or
rcl
xor
popa
insl
xchg
jle
mov
imul
push
sbb
dec
scas
call
shll
or
mov
xchg
sbb
jns
xor
shlb
lret
push
jb
pop
in
mov
out
das
dec
dec
fwait
loop
mov
jns
adc
pop
std
fisttpll
cmp
aas
daa
gs
xchg
rclb
mov
jno
sbb
cmp
cmp
in
int3
mov
pushf
xor
das
and
mov
subb
inc
popl
sbb
shlb
or
xor
xchg
sub
jmp
xor
loope
xchg
data16
and
jnp
cmp
gs
mov
pop
jnp
xor
test
push
and
loope
mov
cmc
out
ret
and
mov
insb
mov
je
lods
insl
inc
data16
jo
rcr
cmpsl
and
and
sbb
push
add
insl
out
cli
sub
lret
sarb
jno
movsb
and
mov
push
pop
insl
stos
xchg
jno
add
dec
fidivs
mov
fdivs
test
rorb
inc
push
mov
sbb
in
push
inc
adc
scas
cmp
stc
test
mov
int
mov
adc
xor
fxch
ret
inc
pop
mov
sub
mov
fiaddl
fwait
sub
mov
push
and
pop
lea
mov
sbb
push
mov
xor
fs
aaa
push
jns
dec
cmp
mov
cmp
mov
sub
add
scas
fcomi
jnp
lods
fwait
hlt
cli
mov
xchg
js
sar
fnsave
sub
es
and
jo
movb
ja
or
mov
nop
sub
adc
insl
ds
mov
pop
or
int
inc
and
shrb
inc
mov
jb
movsl
and
fwait
lret
dec
inc
stos
jns
push
popf
cs
or
mov
rcrl
mov
dec
fcmovu
ljmp
add
fld1
jp
shrb
lods
xchg
test
push
pop
mov
sub
push
addr16
test
or
lcall
stos
jmp
ss
mov
inc
in
add
loopne
cltd
inc
insb
mov
fldt
stc
fnsave
adc
mov
mov
push
aaa
dec
jge
lds
cmp
pop
lds
popf
insb
mov
jmp
push
out
loopne
and
or
push
sti
or
inc
rol
jae
call
pop
je
mov
xor
cltd
dec
lods
cmp
push
xchg
sbb
test
lods
int3
xlat
push
and
enter
xor
lret
aaa
xchg
jl
adc
cmp
mov
cmc
dec
ss
mov
rclb
movsb
gs
scas
and
jp
arpl
lcall
cmp
mov
mov
dec
rclb
inc
xor
xchg
adc
out
and
aas
and
and
out
mov
icebp
in
pushf
pushf
pop
mov
or
jne
xchg
mov
push
ja
cmpsl
popf
insl
ret
rclb
mov
and
mov
mov
cmp
dec
lret
mov
lds
repz
jmp
test
ret
xchg
xor
adc
ffreep
mov
cli
and
sub
sub
pop
pop
pop
ret
jecxz
es
mov
mov
movsb
and
dec
addr16
out
scas
mov
out
push
popa
push
pushf
es
iret
xchg
jmp
in
and
lahf
xchg
xchg
shrl
stos
shl
dec
es
std
lret
pop
stos
xor
hlt
mov
mov
lods
pop
or
add
in
or
jnp
in
imul
stos
lea
jnp
and
dec
sbbl
and
sub
scas
jge
xchg
scas
pop
arpl
inc
mov
les
pusha
test
out
mov
sub
xchg
xchg
int3
jp
loope
iret
xchg
std
lcall
xchg
scas
mov
movsb
xor
jne
dec
enter
int3
add
movsb
push
mov
cmp
jmp
mov
repnz
addr16
imul
xor
inc
sub
dec
stos
pushf
xlat
movsl
lcall
pushf
scas
push
mov
push
shrb
dec
inc
clc
sub
scas
mov
int
jmp
xchg
mov
popf
push
sarb
jge
dec
jg
pop
scas
fists
xchg
test
gs
mov
jo
mov
stos
lret
movsb
insb
test
lcall
inc
mov
pop
cmpsl
jae
adc
dec
mov
iret
aaa
xchg
mov
mov
das
adc
cmp
fwait
and
mull
xchg
loop
loopne
test
mov
sbb
pop
jo
sbb
in
add
and
in
js
mov
mov
pop
arpl
imul
pop
out
and
dec
jb
jp
xorb
xor
out
and
dec
fiaddl
add
pop
movsl
es
and
mov
push
mov
out
xchg
ret
cltd
xchg
cwtl
fcompl
and
cmpsl
lods
xor
cmp
fwait
adc
arpl
stos
mov
mov
pop
shl
loopne
das
cmp
add
inc
or
pop
mov
push
dec
loope
add
mov
fsubr
pop
lds
xor
stos
inc
in
jne
jmp
fsts
cld
and
testb
inc
bound
push
mov
push
inc
xchg
icebp
push
adc
repnz
mov
pop
pushf
lock
mov
push
out
scas
mov
jecxz
lahf
je
cwtl
or
lea
scas
in
dec
mov
mov
push
xchg
stos
xor
test
pop
arpl
stc
mov
das
add
divl
add
cs
mov
sbb
repnz
and
negl
or
xchg
outsl
loop
mov
popf
outsb
pop
xor
dec
out
movsl
mov
sbb
cmp
in
in
das
xor
xor
rorl
fs
or
push
ror
mov
std
adc
mov
fidivl
aam
popf
inc
push
adc
inc
dec
add
movl
ds
clc
sbb
cmp
add
mov
mov
cmp
mov
jp
pop
jp
es
xchg
jo
adc
stc
hlt
inc
cwtl
sbb
pop
or
mov
lret
cmc
cmpsb
mov
xchg
ror
add
ret
jmp
mov
pop
out
mov
in
jmp
cltd
lea
xor
mov
add
jmp
scas
mov
jecxz
lret
std
mov
cmpsb
mov
iret
mov
mov
dec
pop
je
sbb
mov
sub
sbb
shll
xchg
call
pop
out
or
add
cmp
jbe
loop
inc
fdivl
and
stos
outsb
int
cmp
icebp
mov
data16
mov
addl
and
in
adc
xchg
push
xchg
pop
stos
pop
mov
xchg
mov
in
adc
inc
pop
dec
fisttpll
cmpsb
shrl
lcall
pop
pop
iret
add
or
mov
cmp
lahf
push
or
pop
mov
inc
and
xchg
xor
or
xchg
mov
dec
jmp
negl
fistl
test
mov
xchg
fs
test
jns
inc
repz
lock
fisubl
cltd
mov
push
sbb
add
sub
and
std
loop
movsb
xor
xor
inc
jg
lea
jbe
cmp
inc
inc
rorl
cmp
jg
call
aam
dec
pop
call
cmp
xlat
in
aas
rol
xchg
jb
pop
xchg
sub
test
fstl
das
xchg
add
movsl
cwtl
pop
pop
adcl
pop
mov
call
mov
cmp
in
lea
jmp
and
mov
jge
jns
lea
loope
inc
mov
icebp
stc
mov
mul
dec
sub
ficompl
mov
in
pop
cwtl
xchg
mov
es
gs
mov
cmp
loopne
pop
jne
fisttpl
push
aam
std
mov
sbbl
mov
add
add
mov
testb
lods
mov
pushf
mov
pop
xor
jnp
xchg
mov
dec
sub
cwtl
push
xchg
fildll
jbe
mov
mov
outsl
hlt
aas
ljmp
in
sarb
sbb
pop
shl
ljmp
push
pop
pop
addl
pop
inc
cmp
jmp
sbb
leave
addr16
mov
scas
daa
or
loop
lods
in
sbb
jle
mov
movsb
fisubl
mov
mov
addb
add
scas
cmpsl
out
std
jecxz
mov
fdivrl
inc
loope
out
rolb
mov
test
mov
jb
push
adc
rorl
in
or
sbbb
test
xor
mov
outsl
pushf
mov
mov
call
xor
mov
xchg
aas
jg
mov
xor
push
pop
sahf
mov
jge
pop
out
inc
rcrl
aas
and
lods
mov
lret
mov
push
cmp
pop
mov
jle
std
add
xor
push
test
push
mov
imull
sahf
inc
jecxz
jb
push
ljmp
out
bound
sahf
idivb
into
sbb
mov
outsl
gs
das
test
movsl
jo
jae
xor
fs
sbb
out
sub
pusha
mov
imul
ret
in
iret
std
and
push
pop
push
daa
jmp
inc
js
sub
add
filds
fstp
mov
mov
lods
aaa
xor
mov
in
iret
test
pop
cmp
and
mov
add
adc
hlt
scas
or
mov
mov
sub
aas
and
and
or
and
test
mov
dec
add
hlt
and
push
jae
push
cwtl
iret
int
shlb
test
pusha
loop
lahf
mov
mov
imul
mov
add
fdivrl
imul
cmp
fwait
and
dec
add
mov
push
mov
sbb
mov
push
lock
daa
push
fsubl
shll
dec
stos
jecxz
movsb
adc
aas
and
and
xchg
fiadds
hlt
cmp
xchg
js
ljmp
xlat
mov
cmp
movsl
sbb
or
sti
mov
fdivrl
movsl
and
mov
jl
ss
enter
cmc
xor
or
cmpsb
sbb
sar
and
lds
out
adc
sbb
xchg
jns
in
push
mov
add
cmp
call
dec
enter
xchg
in
inc
pop
icebp
out
and
dec
iret
pushf
outsb
movsl
in
mov
aaa
cwtl
mov
int
and
push
and
dec
stos
bound
rorb
xlat
and
loop
mov
mov
dec
push
fidivl
jge
lods
mov
cmp
lahf
fimull
and
std
fdivp
pop
sub
inc
loopne
mov
jo
movsl
xlat
test
and
jae
fcompl
dec
jmp
pushf
jb
in
push
cs
mov
out
push
sahf
clc
iret
xchg
in
gs
lods
loopne
fimull
addb
jo
push
loop
inc
fs
lret
mov
xchg
sub
sub
idivl
mov
addr16
arpl
mov
test
add
cmp
pop
jmp
lret
popf
leave
push
mov
xor
adc
rcl
movsb
jle
enter
mov
mulb
int
lock
shll
mov
dec
outsl
jp
fcomps
sub
repz
mov
jbe
jge
mov
test
adc
movsb
test
mov
push
fabs
sub
int
cmp
bound
xor
lret
adc
es
lret
fistl
clc
mov
fs
mov
jae
dec
shl
adc
sbb
scas
pop
cwtl
and
xchg
ficoml
jae
jae
push
lret
aas
mov
shll
xchg
inc
addr16
jnp
ret
lcall
sti
sub
out
sub
stc
shl
sub
sti
pop
adc
out
rcl
or
add
and
negb
inc
xlat
orb
rolb
xchg
adc
std
mov
imul
sub
mov
inc
inc
fistpll
enter
pop
repz
xchg
int
fmuls
popa
ljmp
pop
ret
popf
mov
sbb
and
lock
lock
in
adc
inc
dec
fldl
or
push
fldl
sbb
jae
xor
imul
cmp
fwait
clc
stos
leave
int3
mov
and
xchg
aad
sub
jge
add
shr
inc
adc
aad
mov
mov
jne
jge
sub
cmpsb
ja
xchg
movsl
jmp
in
inc
mov
sbb
subb
iret
int3
fwait
je
and
lods
dec
mov
je
out
lods
adc
or
scas
lds
ja
ror
xor
dec
and
mov
inc
cld
in
mov
cli
sbb
jecxz
or
cld
hlt
adc
aad
lock
push
movsb
xor
test
movsb
jp
dec
mov
mov
rcrb
sbb
sbb
pop
ja
in
push
lcall
mov
fists
lret
push
fistl
pop
jp
aad
xchg
or
and
enterw
sbb
repz
daa
pushf
add
and
in
call
xor
and
jbe
pop
rcrl
filds
cmp
sub
lods
push
dec
sub
mov
inc
jmp
mov
cmpsl
mov
or
jp
and
lods
sub
xchg
fwait
add
mov
or
hlt
push
cli
int3
mov
mov
rclb
in
inc
mov
pop
test
in
pop
or
enter
aam
sub
cmp
jecxz
mov
add
xchg
push
push
stos
sub
sub
mov
ja
mov
clc
jo
and
jl
dec
and
std
add
lahf
mov
pop
add
nop
pop
inc
hlt
push
push
pusha
mov
and
js
xchg
in
lock
or
jge
int
jmp
enter
fidivl
scas
popf
int3
iret
cmp
sbb
bound
sahf
xor
push
push
add
out
lahf
fldl
mov
or
in
pop
movsl
rorl
sbb
dec
adc
bound
sub
es
mov
sbb
jbe
ret
das
push
sub
xor
sub
cmc
mov
push
loopne
push
cmpsb
mov
jns
fidivs
dec
int3
push
aaa
cmp
arpl
out
loope
movsl
dec
xchg
mov
testl
push
sub
push
or
push
bound
mov
ja
nop
stc
push
xchg
inc
aaa
jge
lods
pop
repnz
or
dec
aad
lds
hlt
xchg
xor
xor
rep
test
dec
mov
pop
mov
sarb
push
jmp
bound
mov
in
cltd
sub
push
pop
push
fistps
imul
imul
jecxz
xor
pop
mov
sub
rol
inc
sbb
push
test
in
aas
jb
push
inc
mov
sbb
sbb
lret
mov
jns
psubw
cmp
sub
cs
imul
iret
inc
mov
addr16
push
bound
sub
imul
cwtl
mov
sti
cwtl
push
inc
in
sbb
lock
adc
lock
bnd
test
aaa
dec
mov
stos
enter
jecxz
xchg
pop
sahf
out
stos
xchg
xor
sub
mov
jne
inc
xchg
mov
testl
or
nop
imul
pop
or
push
pop
add
sbb
fwait
pop
cwtl
sub
adc
jns
inc
in
pop
gs
insl
loopne
int
push
add
ja
sub
adc
mov
pop
xchg
and
out
es
aam
and
shl
or
mov
imulb
add
add
imul
jl
mov
fldenv
cmp
ds
mov
iret
or
stos
jg
cmp
dec
out
add
arpl
push
xchg
jb
add
xchg
es
and
subb
mov
arpl
call
cmpsl
les
pop
das
adc
jecxz
push
les
jbe
xor
mov
int3
gs
sti
rcrb
lods
add
mov
mov
cmp
and
into
or
ds
mov
pop
shrb
mov
inc
cmp
sar
lcall
insl
adc
inc
in
sarb
jno
push
loope
dec
cltd
repnz
xchg
cs
repnz
adc
xchg
daa
push
jg
jo
cli
lock
scas
addr16
jl
outsl
jg
mov
jmp
mov
rcr
iret
popa
into
xchg
out
jmp
lods
js
mov
sti
mov
push
sar
cwtl
adc
roll
lds
mov
add
mov
out
inc
out
in
dec
int
inc
jl
sar
call
test
add
in
add
notl
clc
adc
mov
sub
in
mov
and
jle
mov
das
fcomps
cmp
mov
push
jae
add
add
shrl
mov
aas
loop
add
xor
cs
lret
inc
pop
mov
add
push
mov
and
daa
ss
push
xchg
iret
sti
lcall
leave
orl
xchg
ret
mov
mov
loopne
sbb
and
fsubr
rcrb
mov
dec
push
lea
push
lahf
push
fisttpll
out
xchg
test
mov
sti
inc
or
xlat
cwtl
in
pop
filds
inc
xchg
mov
lcall
cmp
jae
nop
mov
in
pusha
clc
faddl
ljmp
push
fimuls
sub
rorb
mov
daa
negl
in
shl
pop
es
cmp
xor
mov
ret
sub
mov
in
jmp
xor
dec
cmp
inc
test
call
in
sub
sbb
mov
sahf
outsb
or
or
or
jmp
rcr
lds
mov
push
adc
mul
ret
ds
add
sbb
int
repz
ja
mov
cmp
or
pop
out
shlb
std
pop
sub
or
or
mov
mov
lret
pop
xor
mov
shrd
fcomps
mov
pop
ljmp
mov
pop
fimuls
pop
daa
mov
lret
pop
mov
pop
and
mov
adc
and
add
pop
mov
mov
jecxz
adc
and
or
icebp
scas
ret
test
les
adc
add
jecxz
jb
xchg
adc
cmp
xor
jb
or
cmp
xor
push
imul
mov
loope
mov
cmp
sbb
jnp
lcall
xchg
pop
mov
les
mov
inc
in
cmp
sbb
enter
stos
jmp
pop
mov
insb
pop
ja
fiaddl
cmp
out
and
cmp
sbb
notb
lods
xor
test
movsb
dec
bound
fnstsw
sbb
mov
or
aas
mov
lods
rorb
dec
cli
dec
dec
scas
push
repz
and
push
mov
fs
xor
add
inc
push
add
lods
ss
fstl
push
push
sti
cmp
insl
outsl
or
add
jmp
lret
dec
mov
sub
fs
out
mov
jp
add
je
rorl
pushf
cli
shl
push
jecxz
dec
movups
jge
sub
imul
lahf
nop
ret
js
jp
xchg
ds
pop
sbb
jne
xchg
das
movsb
xchg
pop
xor
sbb
mov
mov
iret
push
add
xor
mov
xchg
push
adc
fcoms
sbb
stc
fcomps
roll
leave
mov
xchg
add
sbb
and
inc
pop
sti
clc
push
jmp
cld
clc
pop
loopne,pn
das
dec
repnz
int
lea
mov
das
push
or
jo
les
cmp
hlt
fcmovb
sbb
dec
jae
scas
cltd
fstpt
adc
popa
xchg
mov
jb
orb
jecxz
push
clc
pusha
cmp
or
mov
ror
sub
in
push
sbb
std
inc
mov
rorl
and
outsl
push
in
jge
and
jne
lods
pop
and
sub
add
jge
xor
out
loope
rolb
adc
xlat
jecxz
adc
hlt
cltd
push
es
push
mov
xchg
jg
loopne
dec
mov
cmp
cwtl
in
pop
cmp
xlat
loopne
xor
sub
inc
enter
jno
aaa
fdivs
mov
sbb
mov
nop
aad
mov
or
mov
cmp
sub
mov
pop
adc
bound
lds
add
xor
sbb
jno
cli
mov
rolb
pusha
and
sub
push
mov
lea
clc
in
shl
in
mov
or
xor
dec
cs
aad
xor
mov
jbe
sub
cld
or
mov
data16
fsubrp
in
jns
lods
jae
rcr
inc
and
and
ljmp
jp
mov
std
inc
sbb
iret
int
dec
std
mov
imul
push
mov
mov
push
fld
outsb
aam
mov
out
dec
pop
mov
xorl
add
lds
jp
inc
mov
insb
cmp
dec
sbb
xchg
dec
xlat
xchg
stc
fwait
int
mov
ss
cmp
and
mov
sub
js
into
push
lahf
rcll
ja
das
xchg
divb
sarb
or
mov
dec
mov
cmp
and
fisttps
inc
mov
insb
insb
inc
aas
repnz
sub
outsl
sub
mov
aam
test
rcrb
or
or
xor
jnp
push
fwait
add
dec
cwtl
movsb
lcall
shrl
aad
enter
jge
pop
push
add
dec
pop
ja
jns
cli
cltd
sub
ljmp
pop
jnp
paddsw
lock
nop
pop
fmuls
xor
out
push
mov
iret
adc
in
imul
dec
pop
movsb
jo
stos
dec
mov
flds
nop
out
sub
lds
ficomps
mov
mov
shll
insl
mov
xor
dec
test
call
sahf
test
ficomps
pop
aad
inc
jecxz
push
and
sub
hlt
xchg
fldl
sbb
mov
in
sub
mov
stos
outsl
aaa
cmp
lods
test
neg
ja
pop
adc
cmp
jl
xchg
sbb
dec
jo
xchg
sbb
test
std
outsb
sub
dec
movsl
nop
mov
mov
nop
shr
lcall
mov
mull
test
test
scas
adc
mov
nop
int
mov
dec
inc
xor
push
and
nop
inc
test
mov
int
mov
test
arpl
mov
std
lret
mov
sbb
inc
lcall
aam
dec
shll
mov
pop
popf
and
cmp
xchg
mov
push
adc
cmp
incl
arpl
mov
and
or
push
add
push
cld
cs
or
and
dec
jae
xchg
mov
adc
paddq
mov
in
push
mov
out
inc
mov
idivl
xchg
dec
mov
mov
sbb
add
roll
ljmp
in
cs
jge
push
cmc
inc
add
pop
fisubrl
cmpsl
mov
out
inc
adc
cmp
aad
lret
iret
and
inc
sbb
fstl
cld
pop
fcmovnu
ret
pop
lock
mov
push
nop
int3
repz
lods
and
fs
addb
jne
daa
loopne,pt
gs
xchg
xchg
iret
aaa
adc
ret
shr
mov
sub
lret
fs
ret
addr16
adc
and
push
jbe
add
adc
pushf
mov
pop
cs
addb
push
xor
repz
loopne
xchg
mov
popa
pop
popf
dec
les
pop
or
add
ret
add
fcmove
mov
pushf
mulb
shl
out
mov
pop
aad
into
imul
sub
test
lahf
adc
and
shrb
fsubs
or
sub
sti
jge
shll
fsubrs
andl
mov
push
aam
mov
jne
das
lods
xchg
pop
cmc
pop
rcrl
push
stos
push
push
cmc
push
outsb
jbe
inc
or
add
fs
jo
sub
stos
xor
inc
mov
jno
cld
mov
xlat
lods
stc
add
in
push
xchg
jle
pop
push
jmp
pusha
jecxz
inc
insl
mov
and
out
adc
lcall
outsb
fisubl
xchg
popf
pop
adc
and
inc
xchg
iret
mov
cmp
or
xchg
jns
je
xchg
mov
mov
iret
and
mov
movsb
inc
lods
loopne
test
dec
pop
mov
inc
xor
pop
push
xchg
add
cmpsl
mov
add
xor
and
push
add
int3
push
pop
push
mov
xchg
pop
ficomps
lcall
pop
fwait
sarl
fcoml
daa
fwait
popf
jge
cmp
sti
arpl
push
mov
jbe
test
insl
xor
fwait
insb
jo
adc
fwait
jp
push
add
out
test
sti
and
pop
pop
popa
int3
push
pop
dec
or
andl
sti
sub
mov
sub
jne
aaa
add
cwtl
push
adc
mov
push
mov
xchg
pop
movl
mov
adc
stos
xlat
scas
std
push
aam
insb
mov
les
leave
jns
jmp
sahf
addr16
mov
sahf
je
in
push
call
inc
cli
mov
adc
imul
jno
dec
mov
jne
cmc
pusha
jg
dec
mov
movsl
jo
int
sub
push
sbb
cmp
add
es
je
inc
sub
in
xor
call
mov
imul
ds
mov
ror
dec
xchg
orb
mov
dec
dec
scas
mov
cmp
jmp
loop
sub
xor
mov
inc
push
nop
fadds
sub
subb
scas
lea
cltd
xchg
lods
sbb
in
xor
dec
aam
mov
inc
mov
mov
mov
push
loop
sub
jo
orl
lock
out
dec
movl
inc
bound
pop
jnp
mov
ret
jnp
scas
pusha
sarl
out
jns
out
iret
sbb
sbb
lods
push
lret
sbb
push
fstl
test
js
push
push
add
mov
rol
movsb
jne
or
mov
and
xchg
daa
lahf
repz
jecxz
dec
std
inc
sub
iret
pop
xchg
imul
xor
xor
push
dec
dec
or
lahf
push
sub
xor
gs
mov
aam
sbb
outsb
daa
imul
sbbl
dec
mov
js
adc
enter
scas
mov
dec
imul
inc
daa
pop
or
mov
push
xor
pop
lea
pop
je
int3
orl
or
xchg
xchg
sub
mov
lods
mov
or
xor
pusha
testl
adc
xchg
adc
lret
rorb
mov
sub
adc
cmpsl
jp
lret
test
lret
xchg
push
pop
cld
rcrl
dec
sbb
and
notb
or
ret
or
rorl
sbb
cld
cmp
data16
fidivl
mov
xor
testl
mov
mul
inc
adc
mov
andb
rcrl
nop
bnd
lods
pop
pop
rcl
sbb
es
or
adc
jnp
sub
mov
jle
jbe
das
mov
into
xor
addl
pop
pop
sub
or
and
cwtl
aam
lret
mov
inc
cmp
cltd
mov
out
into
out
dec
sahf
fstpl
mov
and
leave
inc
inc
sahf
mov
test
addb
mov
xchg
jne
sbb
sbb
pop
lods
sbb
sahf
mov
mov
ret
mov
mov
jg
mov
pop
imul
aaa
and
sub
and
cmp
mov
lods
or
sub
push
ja
sarb
fstpl
pushf
and
stos
jmp
orl
ljmp
push
addl
or
loopne
dec
aas
out
pop
cs
pusha
ret
jns
ret
sub
lods
xor
fcoml
mov
in
jmp
jp
hlt
xchg
and
pop
loopne
movsl
sbb
sbb
or
jmp
mov
cmp
movsb
repnz
cmpsb
sub
add
test
add
sub
lcall
cmp
scas
jp
or
mov
cli
mov
loopne
mov
inc
inc
add
mov
mov
aam
in
cmp
mov
cltd
stos
inc
or
mov
mov
inc
cmp
jecxz
mov
movsbl
adc
cmpsb
cs
aad
sub
cmp
iret
loop
jb
pop
fildl
adc
mov
push
mov
cmp
sbb
xchg
daa
loop
out
pusha
dec
pop
mov
mov
lahf
push
push
mov
movsb
test
push
scas
insl
fdiv
imul
loope
sbb
jge
sahf
addb
fwait
pop
cwtl
jl
stos
fs
add
outsl
pop
dec
dec
push
xchg
sbb
insl
and
les
shrb
repz
sarb
mov
fs
rcr
mov
addr16
cmp
fildll
movsb
inc
cmpsl
popf
ret
js
cmp
pop
xchg
mov
mov
push
jl
or
fistl
cmp
adc
sbb
fdivr
out
cwtl
negl
adc
pop
loopne
test
xchg
sbbb
and
pop
popa
lods
lcall
inc
inc
mov
add
mov
sbb
cmp
pop
push
loopne
or
cwtl
xor
fsub
cmp
mov
add
add
mov
pop
mov
shrl
in
cmpsb
adc
repz
inc
mov
aam
in
loopne
pop
popf
dec
and
dec
pushf
test
xchg
ret
shlb
sub
jo
pop
mov
mov
xchg
pop
cmc
daa
in
mov
inc
mov
xchg
das
xor
fisubrl
push
cmp
mov
ss
pop
cmpsb
out
mov
dec
sbb
or
leave
js
jnp
and
push
lahf
jge,pt
lods
lea
cld
sarb
in
and
pop
or
mov
dec
sbb
call
mov
sbb
sbb
add
pop
cmp
and
cmp
or
mov
or
jne
fsubp
loopne
pop
inc
and
and
popa
cwtl
jge
adc
aad
mov
nop
sbb
sub
adc
jnp
ljmp
xor
jge
inc
adc
test
fistps
sub
mov
ret
les
fcmovb
out
push
hlt
sbb
lcall
cs
jb
pop
pop
pop
shrb
fbld
rcll
pop
out
int3
adc
aad
notb
sti
inc
clc
jl
js
or
imul
stc
mov
and
in
and
bound
or
sub
mov
and
sbb
es
sub
jp
push
push
bound
imul
fists
in
sti
dec
daa
mov
ret
call
lea
adc
nop
leave
inc
mov
dec
and
cs
sbb
hlt
mov
rcrb
xchg
dec
adc
pop
dec
jg
sub
cmpsb
lret
xlat
imul
in
push
faddl
es
jne
outsb
mov
pop
fmull
pusha
dec
outsb
fwait
jae
mov
jae
xchg
jg
in
pop
pop
enter
adc
sub
cmpsb
fdivr
outsb
loopne
aas
mov
mov
jne
adc
cmp
sbb
dec
dec
leave
push
xor
test
cltd
adc
test
cmp
adc
test
rcrl
push
rcrl
inc
loope
pop
stos
ds
adc
out
lea
or
inc
cmp
push
add
pop
sbb
enter
ss
mov
jmp
wrmsr
jge,pn
inc
out
mov
loope
dec
scas
jge
push
lock
sti
fs
xor
aam
fisttps
jmp
enter
movsb
pusha
xchg
dec
imull
das
aad
je
cmp
cmpsb
cmp
xchg
jns
cli
mov
js
dec
jg
fiadds
int3
enter
mov
sub
or
dec
repz
xor
sub
aaa
ljmp
push
int
in
jp
call
fisttpll
push
daa
xorl
pop
aam
cwtl
mov
add
push
dec
adcb
push
adc
shlb
jmp
imul
sbb
mov
push
pop
pop
js
outsl
aas
or
or
int
sbb
mov
mov
xchg
mov
cmpl
leave
jl
cli
lods
sbb
xor
stos
test
sbb
jge
dec
jle
in
shrl
imul
cmp
sbb
add
jmp
mov
insl
inc
arpl
xchg
adc
inc
call
and
cli
xor
push
push
jnp
mov
iret
in
mov
sub
in
or
cmpsb
pop
or
imul
pop
repz
push
clc
fidivrl
xchg
ja
out
jge
outsb
xor
xchg
dec
movsb
sub
or
popf
lods
or
xor
dec
lds
jb
sbb
imul
idiv
mov
dec
in
jl
shrl
in
mov
imull
shll
xchg
fldt
xchg
mov
sub
and
out
dec
out
daa
scas
jg
xchg
or
xchg
cltd
add
mov
jns
dec
xchg
sbb
cmp
inc
push
mov
pop
add
cwtl
out
or
inc
xchg
test
push
ljmp
mov
cmp
out
xchg
pop
mov
jg
and
js
lock
aas
repnz
cld
mov
inc
fsubrs
ljmp
int
loop
mov
cld
sub
xor
sbb
shll
push
addr16
inc
lods
bound
xchg
stos
adc
pop
in
adc
fdivp
mov
fs
pop
aaa
aad
sbb
push
adc
jae
or
mov
shrl
jmp
stos
pop
xchg
mov
nop
pop
sub
xor
inc
lcall
mov
push
sbbb
in
stos
incb
mov
mov
lret
ss
mov
mov
subl
xor
sets
out
jno
inc
push
pop
push
ds
arpl
pop
packssdw
lods
test
dec
and
jge
in
lcall
cmp
lcall
xchg
pushf
cli
lods
xor
mov
jecxz
sub
and
in
ljmp
mov
inc
enter
les
ret
xlat
xchg
dec
roll
pop
out
std
insb
adc
repnz
or
rol
cld
das
mov
sbb
pop
adc
inc
push
dec
sub
mov
test
scas
adc
xorb
jae
mov
jnp
mov
lret
movsb
outsl
xchg
mov
mov
pop
inc
les
mov
or
xchg
mov
repz
je
xor
pop
push
fmul
mov
bound
stos
xchg
mov
fisubrs
ficoml
xor
dec
stos
sub
sahf
hlt
dec
fsts
enter
divb
jecxz
sbb
mov
test
mov
je
add
iret
mov
iret
addr16
mov
inc
cmp
pop
leave
push
xor
lock
adc
hlt
call
mov
mov
stc
faddl
sbb
push
mov
stc
int
push
iret
mov
sbb
lahf
and
inc
pop
insl
imul
sbb
ficoms
loop
push
aas
ret
adc
sbb
rorl
int
cltd
add
adc
pop
arpl
fs
faddl
jmp
push
and
test
clc
popl
jno
and
jg
mov
mov
hlt
jg
xchg
push
xor
jl
sar
jns
jno
imul
sbb
dec
cmp
push
sub
pop
add
add
or
scas
push
into
push
lret
negl
loopne
sub
lea
mov
mov
inc
mov
or
inc
push
dec
insb
push
dec
es
mov
or
adc
xlat
lock
sub
mov
xchg
and
push
insb
inc
jmp
shll
int
fldcw
mov
lock
sahf
enter
popf
std
sub
mov
addr16
push
add
out
clc
test
rcrl
and
cmpsb
cmp
jmp
jo
push
decl
add
mov
in
fwait
lahf
cli
in
add
out
arpl
cmp
sub
repnz
inc
jno
jnp
cmpsl
scas
push
out
cmc
and
add
enter
sbb
fldt
push
aad
lods
jo
aaa
mov
lock
int
cld
cmp
pop
add
mov
pop
jnp
push
orl
or
mov
cli
lcall
lahf
scas
mov
push
pop
pop
in
pop
das
lcall
fwait
pushf
xchg
ficomps
mov
dec
jns
inc
in
loop
movsb
jmp
inc
cld
shrb
repnz
addb
shrl
aad
mov
pop
cmpsb
inc
cmpsl
jg
les
insb
or
push
std
std
mov
mov
or
or
les
xor
add
push
dec
lret
mov
fcomi
imul
hlt
pusha
mov
xchg
mov
sbb
mov
push
lret
das
or
adc
or
push
adcb
push
shlb
pop
adc
fwait
or
xor
push
xor
mov
pop
lret
outsb
mov
aam
rcrb
test
mov
jne
xchg
incb
and
out
mov
add
jo
inc
leave
adc
cmpsb
jle
sti
xchg
mov
or
jecxz
mov
jle
xor
data16
xchg
mov
push
enter
dec
jp
hlt
clc
int3
jo
cs
xchg
cmc
aad
cld
mov
sub
jl
xor
xchg
sub
jp
and
adc
fnstsw
mov
pop
enter
jecxz
std
push
movsl
xchg
loopne
sub
test
clc
fmuls
xchg
nop
sub
jp
xchg
adc
das
push
push
pop
fbstp
int3
or
jbe
dec
cmp
daa
mov
out
ficompl
sbb
sub
cmp
or
jne
sahf
inc
push
push
insl
shrl
add
in
cmp
push
inc
pop
inc
test
sub
inc
stos
cmp
insb
stos
sub
sarb
enter
addr16
aaa
sbb
cmp
push
mov
dec
daa
andl
scas
scas
cmp
or
clc
icebp
shrb
aaa
and
inc
out
fcompl
cmpsl
push
add
adc
adc
jg
aad
adc
ss
push
inc
push
xchg
mov
jle
cmp
cmp
sbb
xor
data16
add
push
dec
shr
cmp
repz
lcall
cmpl
sbb
add
insl
mov
inc
and
stos
xlat
xor
push
mov
test
sub
dec
mull
push
lods
mov
rolb
lock
loop
jno
call
es
or
outsb
repnz
fisubs
push
sahf
cmp
dec
xchg
mov
sbb
stos
and
adc
call
push
mov
xor
jle
jnp
movsl
mov
add
add
jne
and
add
dec
fwait
and
sbb
inc
out
ret
sbb
dec
inc
mov
lods
aaa
jo
icebp
adc
jl
sbb
roll
dec
in
cmp
daa
movsl
loopne
jg
shlb
fistpl
xor
push
loop
add
mov
fildll
cli
pop
cwtl
in
bound
mov
stos
add
xor
push
mov
call
sub
int3
inc
mov
jns
repz
clc
xchg
jnp
sbb
mov
mov
popf
addr16
outsb
inc
mov
inc
mov
sbb
les
test
cli
daa
mov
xlat
clc
mov
test
inc
add
jnp
adc
call
xor
and
int3
in
test
push
jg
inc
sub
daa
adc
mov
or
xor
or
mov
adc
idivb
shl
cmp
js
fdivl
adc
enter
sti
dec
xlat
out
cmc
mov
loopne
jle
ret
xchg
pushl
push
int
gs
subb
fsub
std
call
mov
fxch
testb
ja
jle
jecxz
aaa
inc
leave
into
sbb
sbb
pop
dec
fucomi
xchg
adc
and
ret
mov
js
adc
jbe
cmpsl
adc
out
repz
cmp
dec
shl
stos
stos
ret
cmp
lret
xchg
pop
in
or
cmpsl
repz
int
jne
xor
mov
mov
push
mov
sahf
dec
push
insb
ret
gs
xor
jmp
dec
es
sbb
sub
xchg
imul
fwait
into
sbbl
aas
sub
and
or
mov
loopne
or
xchg
mov
loopne
mov
mov
cmp
xor
mov
idivl
movb
jge
cmp
push
ret
push
sti
daa
test
adc
mov
arpl
mulb
cmpsl
loopne
ds
das
repnz
fisubrs
sub
js
and
sbb
xchg
pop
jnp
cmp
xlat
call
sbb
push
lcall
lret
sbb
icebp
cltd
fimuls
in
jmp
rcrb
aad
add
or
or
cmpsb
inc
jecxz
mov
sub
mov
loope
iret
cmp
inc
mov
inc
std
push
int
and
outsb
test
idivl
cmpsb
inc
push
sub
mov
jl
and
dec
push
mov
fucompp
xor
push
cmp
xchg
fiadds
mov
jb
sbb
cmc
pop
cmpsl
sbb
cmpsb
and
cmp
stos
stc
mov
pop
mov
jmp
adc
stc
cmc
jns
pop
and
cwtl
icebp
adcb
cli
icebp
sbb
bound
rorl
pop
insb
jecxz
or
sub
cmp
roll
and
in
jae
sub
inc
imul
fldt
pop
mov
dec
rcll
fmul
repnz
mov
shl
ljmp
cmp
rcrl
notb
pop
jmp
xor
lock
mov
clc
stos
gs
cwtl
in
in
adc
stos
mov
lds
jb
stos
into
cbtw
popa
std
ja
enter
ss
stos
cwtl
xchg
jle
test
fdivl
mov
sub
stos
or
inc
popa
xor
iret
xchg
ja
cmpsl
mov
in
lret
mov
mov
test
mov
mov
and
mov
int3
into
lret
sti
mov
add
sbb
data16
nop
mov
call
adc
les
out
mov
js
mov
and
ja
mov
jnp
loopne
sbb
std
pop
mov
sahf
popf
pop
inc
mov
rol
aad
rolb
add
add
cmpsl
push
inc
testl
mov
in
sub
ja
in
dec
loopne
daa
leave
fimuls
xor
es
or
ljmp
and
jne
add
dec
loope
push
test
daa
mov
imul
stos
sbb
sbb
movsl
push
jne
mov
fidivs
pop
lret
push
movsb
lods
pop
popa
incb
cmp
sub
cs
xor
mov
fisubl
dec
sub
in
jae
es
aam
and
bound
repz
xor
jno
xchg
int
aad
negb
std
daa
inc
inc
jg
daa
clc
stc
cmpsl
out
add
mov
push
lock
and
loopne
adc
mov
mov
cld
adc
cltd
cli
cmp
shrl
dec
mov
add
fidivrs
mov
or
lcall
mov
in
sbb
cmp
sub
push
jne
into
ljmp
mov
sbb
aas
push
mov
das
or
in
jae
and
adc
in
xchg
push
mov
lahf
xlat
test
mov
hlt
pusha
push
cmpl
add
std
hlt
jge
out
pop
outsb
arpl
sbb
imul
xor
test
jns
inc
fildl
xor
sub
mov
and
lods
test
push
xchg
jo
sbb
fsubs
fwait
call
nop
es
iret
pop
inc
adc
mov
fldt
dec
mov
das
repz
cs
mov
mov
xlat
sub
adc
stos
mov
ror
movsl
repz
inc
outsl
adc
jnp,pt
pop
sub
lret
xor
or
or
sub
mov
and
xchg
fsubs
and
scas
mov
mov
pusha
iret
cmp
fsubr
cmpsb
sub
cld
nop
push
sbb
ret
add
lods
js
adc
aaa
mov
jge
pop
cmc
jb
adc
mov
push
dec
xor
pop
sbb
out
fdivs
mov
add
fstps
enter
adc
dec
int3
scas
stos
cld
push
das
sub
pop
xchg
and
dec
mov
ficoml
xchg
hlt
mov
dec
mov
adc
mov
xlat
stos
jecxz
les
sub
in
sub
add
mov
mov
xchg
shlb
in
adcl
xor
fcomps
xchg
in
lahf
add
cmpsl
mov
jo
push
call
push
cmpsl
mov
jl
xchg
xor
add
enter
cmp
adc
orl
sti
sub
jno
orb
outsl
bswap
ja
xchg
or
mov
aaa
ja
mov
int
dec
sub
mov
sbb
orb
dec
fwait
cmpsb
cmp
cmpsl
dec
mov
push
rclb
xor
aad
int
es
adcl
adc
outsl
repz
lcall
mov
jmp
and
das
pop
sub
jg
inc
mov
fwait
pop
fwait
mov
pop
cmc
fwait
cs
pop
xchg
cmp
sub
daa
jecxz
jmp
dec
fildll
lea
ret
icebp
push
out
leave
cld
xchg
sahf
addr16
dec
movsl
stos
lock
push
mov
fstp
cmp
sti
mov
cmp
dec
mov
sbb
lock
mov
dec
int
das
mov
out
fidivrl
call
or
adc
inc
mov
lret
cmc
mov
mov
push
jecxz
es
in
jns
cmp
das
loopne
in
xor
xlat
push
int
and
jp
ds
sbb
mov
ss
jnp
inc
xlat
cmp
mov
les
jns
sti
lret
pop
jge
loop
pop
das
dec
xlat
jno
inc
mov
int3
sub
call
xor
adc
outsl
mov
imul
xor
shll
add
sti
pusha
inc
jnp
lea
fcomi
mov
adc
jbe,pn
into
js
jg
add
sub
or
enter
sub
dec
stos
jbe
pop
inc
aaa
mov
imul
or
xor
xor
sbb
pop
xchg
xchg
insl
clc
clc
xchg
push
sub
pop
adc
shll
nop
insb
aam
scas
dec
sub
sahf
cmc
sbb
es
cmp
sbb
inc
jle
cwtl
fsubl
roll
pop
push
mov
fmuls
in
popw
push
fisttpl
aam
ja
mov
xor
lahf
aas
pop
mov
pop
aad
subl
dec
push
ljmp
inc
gs
dec
out
mov
js
faddl
jg
push
xor
dec
repnz
into
lret
adc
mov
aas
shrl
xchg
insb
sub
push
jnp
div
out
mov
sti
mov
lods
loop
jo
mov
push
and
mov
popa
arpl
mov
daa
les
frstor
mov
in
mov
jle
in
hlt
and
stc
lret
sbb
sbb
jo
adc
jecxz
pop
mov
and
out
push
inc
arpl
jg
addr16
cmpsb
adc
cmp
jbe
mov
mov
ret
lods
out
push
test
mov
mov
cmp
fisubl
mov
or
das
mov
fistps
dec
mov
lret
ljmp
aas
lahf
pushf
xor
je
cli
adc
rcrl
push
and
add
add
enter
out
out
mov
fidivl
xorl
out
pop
jmp
cmp
pop
pop
sbb
jmp
jge
movsb
and
inc
xchg
pop
inc
shll
mov
pop
add
daa
les
jno
push
lahf
inc
je
mov
cmp
imul
cmp
lods
sub
and
cmovge
jecxz
movsl
imul
repnz
pop
shll
mull
xor
mov
andb
cs
movsb
fadd
mov
ds
mov
add
push
mov
stos
dec
cmp
jnp
repnz
lock
pop
jb
dec
and
mov
aas
fdivl
inc
mov
fdivrs
lods
dec
jmp
xor
and
pop
out
sbb
out
leave
adc
jl
mov
mov
sbb
jnp
cmp
popf
sub
and
dec
repz
lcall
push
inc
and
cmp
sbb
lods
ss
jmp
jbe,pt
sti
addr16
inc
repz
test
sub
inc
mov
repnz
clc
fnstsw
push
cmp
and
dec
out
cmp
out
sbb
enter
in
dec
mov
lret
mov
jo
jp
jl
sub
in
push
xor
xor
push
mov
mov
dec
xor
pop
xor
hlt
clc
pop
jmp
mov
mov
lock
push
adc
pop
jbe
xor
jmp
sbb
ret
add
adc
les
lock
in
jp
pop
lcall
mov
dec
adc
jge
pop
cmc
mov
movsb
push
test
inc
rolb
pop
sti
sub
mov
inc
xor
mov
insl
add
jl
inc
mov
dec
jno
cmp
pop
leave
mov
mov
adc
push
inc
adc
pop
add
add
stos
fwait
lds
bound
jmp
mov
xchg
cmp
xlat
loope
dec
pop
pop
mov
pop
cmc
mov
and
ja
rolb
out
cs
pop
jmp
inc
fadd
push
dec
sti
stos
data16
inc
xor
xchg
fwait
imul
icebp
cmp
xlat
divl
in
aaa
fimuls
adc
mov
xor
idivl
inc
pop
xchg
stos
fcmove
mov
xor
mov
jmp
push
adc
mov
mov
fstpl
sub
xor
mov
fsubl
out
dec
xchg
mov
lock
hlt
aas
lcall
loop
push
jl
mov
jae
pop
xorl
adc
decl
add
out
in
lds
inc
mov
adc
fsubs
mov
arpl
fcmovu
mov
add
cmp
rcrl
push
out
mov
lods
mov
movsl
ficoml
xchg
scas
mov
or
sub
xor
cli
mov
adc
pop
push
jl
or
sub
nop
popf
xor
or
loopne,pn
lea
imul
aam
sbb
push
cmp
mov
xor
add
aad
loop
xchg
das
xor
mov
cld
mov
xchg
adc
shlb
rolb
fs
sbb
jo
mov
xchg
push
or
mov
scas
xchg
and
push
loopne
push
hlt
mov
dec
sbb
arpl
dec
pop
lea
rorl
insl
clc
js
xor
adc
test
dec
sbb
mov
in
mov
inc
ljmp
add
mov
lock
test
jb
rol
push
mov
out
dec
mov
pusha
pusha
int3
pop
xchg
ja
mov
cs
sbb
sub
lods
pop
and
fstpl
ljmp
jo
jns
insb
sub
iret
lock
lahf
pop
hlt
lret
cmp
xor
add
fwait
sub
cmp
lret
std
loop
dec
jbe
les
loopne
cs
out
sarl
rcl
stc
push
mov
out
cmp
pusha
bound
and
adc
mov
negl
shl
push
js
ret
sub
hlt
sbb
mov
es
sti
shrl
bound
cld
or
hlt
scas
add
jo
das
fwait
mov
data16
shl
das
pop
idivb
cmpsl
xlat
in
in
test
sub
adc
fcmovnb
mov
stos
sub
mov
arpl
add
movaps
jmp
scas
jo
push
fidivrl
pop
push
dec
lret
scas
and
cmp
push
or
nop
icebp
lahf
mov
mov
cmp
iret
mov
hlt
leave
jae
stos
ss
fstpt
or
cmp
ret
mov
out
inc
jb
mov
in
push
fwait
mov
sub
mov
inc
mov
and
jge
movsb
fwait
fwait
mov
ja
adc
cld
cwtl
jbe
idivl
jle
pop
cmp
imul
cld
outsl
lcall
xor
or
popa
dec
mov
clc
pop
lcall
dec
in
test
pop
popf
mov
cmp
xchg
push
es
sub
pop
lock
les
sahf
cmpsl
add
inc
push
dec
fidivs
cltd
xlat
imul
ret
pop
ret
sarl
sti
out
push
mov
mov
xchg
adc
aas
and
outsb
nop
cmpsl
sbb
loope
jb
nop
fwait
rcll
sbb
lahf
and
cmp
and
mov
mov
mov
jecxz
mov
addr16
mov
jbe
pop
cmp
sbb
shrb
out
les
pop
ds
std
mov
dec
jp
leave
inc
test
push
push
rolb
andnps
or
aad
fdivp
bound
rol
std
ret
fbld
repnz
push
sahf
cmp
out
lcall
ja
inc
cmp
mov
mov
jnp
loop
xor
fdivp
lahf
inc
ja
out
pop
cld
jo
sbb
popa
shl
adc
in
inc
push
or
sub
mov
mov
xor
addl
icebp
and
xchg
movsl
push
xchg
das
sbb
icebp
xchg
inc
jmp
dec
jno
mov
jecxz
inc
jmp
sub
daa
inc
jl
dec
xchg
cmp
mov
cmp
inc
sti
adc
insb
xlat
or
cmpsb
add
mov
mov
mov
sbb
call
ret
lods
mov
icebp
jl
xor
rcrl
lcall
push
fsubl
cs
cld
xor
ja
ljmp
xor
and
addr16
lret
adc
inc
dec
push
pop
stos
jecxz
imul
jo
bnd
xor
out
int3
dec
cmp
sub
idivl
inc
adcl
mov
sub
out
adc
push
sbb
inc
xor
push
sub
jle
inc
decl
and
xorps
jle
jno
lock
clc
mov
xchg
andl
pop
fwait
push
loopne
and
loop
incl
jne
xchg
icebp
lahf
fwait
or
fisubl
jo
mull
mov
jp
aad
jbe
pop
stc
stc
cmp
out
inc
cli
ds
out
aad
cmp
leave
cmpsb
das
lahf
and
das
mov
lcall
repnz
push
insl
xor
cmp
icebp
sub
add
in
xor
in
orl
adc
ret
int
inc
pop
push
jge
outsl
mov
and
and
ret
push
ja
test
dec
add
pusha
pop
inc
inc
mov
adc
pop
hlt
inc
mov
cs
loop
in
xchg
es
out
push
xor
pop
jnp
sub
cmc
mov
xchg
shl
cmpsb
outsl
frstor
fldl
in
and
push
test
and
xchg
sar
loopne
repnz
cs
ret
pop
mov
pusha
dec
add
push
mov
insl
sub
xchg
dec
xor
leave
aad
pop
sar
int3
jg
sti
jmp
icebp
pop
gs
imull
nop
mov
mov
pop
cmp
pop
and
mov
mov
xor
sahf
ret
sub
fidivs
arpl
adc
outsb
dec
stc
push
and
xchg
or
mov
push
cs
cmc
pusha
or
push
add
out
xlat
sahf
adc
inc
xor
inc
dec
xor
jne
xchg
std
or
lcall
enter
movsl
je
sti
ds
push
iret
or
push
lret
push
push
out
mov
mov
cmc
stos
insb
jecxz
push
pop
adc
loopne
mov
push
adc
pushf
adcl
push
outsl
cli
lock
mov
hlt
repz
icebp
adc
cmpsl
jo
ljmp
sub
mov
jecxz
ds
lea
xor
jmp
jae
ficoml
sahf
pop
mov
sbb
mov
rorb
aad
sub
mov
mov
rcll
insb
inc
pusha
xchg
in
pop
insl
shrb
cmpb
jo
cmp
sub
les
jg
adc
leave
shll
loope
shll
sbb
mov
mov
push
cmp
cmp
fsubrs
jl
in
push
xorl
shlb
xor
test
movsl
or
lock
arpl
xor
push
adc
pop
jecxz
in
mov
mov
xor
xor
hlt
int3
mul
cmc
lret
lahf
mov
cmp
xchg
mov
sub
fwait
jecxz
daa
xor
inc
push
in
mov
inc
ret
out
into
popa
es
mov
imul
jne
mov
repz
in
gs
movsb
stos
pop
add
pusha
fisubs
pop
and
and
test
aaa
les
jbe
mov
adc
pop
cwtl
cmpsb
cwtl
ds
jmp
mov
aaa
pop
aam
das
lods
aaa
outsb
in
jae
fdivl
sub
and
xchg
int
aad
in
sub
repnz
and
cwtl
gs
mov
sbb
sub
loop
notl
ljmp
jle
mov
sub
push
xor
jecxz
cmp
sub
in
and
xchg
bound
rcll
xor
push
mov
loope
add
and
sub
adc
push
xchg
sub
imul
mov
insl
mov
aam
pop
icebp
and
jb
sub
data16
cvtps2pi
into
pop
andb
ficompl
popa
lahf
stos
mov
popf
out
movsl
rcrb
mov
inc
mov
and
pop
jmp
xchg
mov
fildl
dec
push
fdivp
jnp
inc
sti
jmp
and
mov
push
jns
sbb
add
scas
shl
call
lods
mov
and
sub
sub
repz
movsb
cmpsl
jno
sbb
ss
cwtl
jns
rorb
pop
mov
push
test
jp
rcrl
and
cmp
ret
lock
jle
les
mov
mov
ss
sub
jecxz
cmpb
int3
mov
nop
dec
ret
out
xor
pop
lock
jb
and
and
std
loope
jb
call
mov
push
in
orb
negb
movhps
adc
fistl
push
outsl
arpl
jnp
call
pop
inc
or
ljmp
and
push
pop
pop
sar
ja
loop
mul
ds
repz
and
push
in
out
ss
jge
add
daa
cmp
aad
scas
popa
aas
fwait
pop
xchg
xchg
or
out
mov
dec
mov
lds
push
jecxz
scas
shll
adcb
les
sarb
xor
scas
lahf
jo
in
mov
push
fldenv
pushf
mov
or
push
inc
loop
mov
aad
dec
jp
popa
add
cmp
add
adc
repz
push
hlt
clts
xchg
mov
cmp
fs
pop
and
xchg
mov
pop
inc
inc
cmpsb
out
lea
orl
fs
sahf
mov
mov
cmp
mov
xor
out
lock
mov
divl
jle
push
inc
cwtl
cmp
bound
push
call
das
and
xchg
test
push
or
or
inc
aaa
xchg
mov
les
mov
push
into
dec
sbb
xchg
inc
cld
outsb
shll
stc
roll
add
idivl
mov
sub
jnp
push
inc
daa
idivb
lea
mov
arpl
sbb
lock
inc
js
push
sahf
push
pop
push
int
inc
xchg
aam
mov
into
in
xor
sub
jmp
out
adc
ret
popa
jecxz
jae
push
pop
mov
sti
cmp
nop
mov
dec
in
repz
not
cmpsl
sub
jne
jb
cmp
sub
into
cmp
test
hlt
jmp
das
jmp
jno
mov
jmp
jbe
push
sub
aas
movsb
in
mov
push
sbb
aam
xchg
xchg
sbb
inc
out
xchg
jbe
pop
and
int
loop
iret
sub
mov
or
sarl
stc
add
enter
imul
mov
cmpsb
stos
popf
pusha
sub
jno
sub
in
out
arpl
jne
sub
sub
cmpsl
add
jbe
xchg
mov
outsl
sub
xorl
pxor
add
bound
sub
cmpsb
add
imul
aad
dec
and
xchg
sbb
in
xchg
adc
mov
cmp
pop
cmp
addl
notl
jae
popf
mov
leave
outsb
fwait
push
add
mov
das
ret
loopne
push
cmp
popa
cmp
pushf
mov
into
stc
std
imul
push
add
pop
rol
xor
xchg
push
rcrb
mov
xor
js
or
fs
ljmp
ret
inc
add
aam
test
jp
repnz
loope
mov
imul
stc
pop
or
call
pop
lods
or
pop
nop
popa
mov
lret
xor
out
dec
jo
enter
mov
out
enter
fistl
xchg
sub
inc
sbb
rclb
fsubl
fucom
push
daa
mov
adc
test
inc
js
enter
sahf
lock
sub
lock
sub
xchg
imul
add
fadd
pop
or
cmpb
fbld
jle
jae
and
movsb
and
out
in
jge
xchg
push
cmp
test
push
in
jle
notb
cltd
call
rcl
loop
jecxz
adc
pop
outsb
push
mov
cmp
out
repnz
adc
push
or
mov
das
jg
into
add
xor
icebp
add
int3
mov
push
sbb
sub
test
cmpb
lods
push
pushf
lahf
mov
in
mov
jg
sbb
adc
andl
push
sub
ret
repz
pop
push
fs
sti
hlt
sub
sarb
push
std
stos
inc
adc
and
mov
push
fs
movsl
mov
sub
ret
out
fwait
push
cmp
lcall
decb
fwait
std
movsl
frstor
sub
fs
and
rorl
pop
lock
sahf
mov
test
pop
push
das
xchg
push
or
scas
sub
je
push
jb
ret
pop
enter
and
popa
or
sub
or
jae
jns
add
xchg
les
ret
addl
sub
lahf
outsl
sub
cmp
das
cmp
pop
das
sub
adc
jne
cmp
pusha
mov
and
or
sahf
mov
sub
sub
dec
xor
push
mov
cli
fdivl
push
push
ret
icebp
sbb
jns
jmp
insb
xchg
dec
xorb
icebp
mov
cmp
inc
pushf
sbb
imul
lcallw
xor
mov
cmpb
and
pop
rorb
jbe
hlt
rcll
fcomi
loope
arpl
in
xchg
shlb
jb
and
in
jb
xchg
leave
sub
adc
out
and
arpl
jecxz
pop
cld
cmp
xor
fldt
shlb
call
sub
sub
jmp
and
pop
jmp
call
mov
in
sub
fwait
cwtl
jl
mov
xchg
xchg
cltd
add
push
rorl
sbb
shlb
sti
inc
mov
arpl
or
adc
addr16
push
mov
sub
or
in
sbb
add
mov
daa
adc
aas
std
dec
mov
lods
pop
jb
daa
gs
pop
mov
mov
xor
mov
mov
repz
cmpsl
lea
cli
mov
lock
shrb
daa
jno
loop
jg
mov
add
dec
add
out
in
pusha
dec
mov
jae
xor
jae
test
mov
jle
dec
adc
add
pusha
mov
cmc
inc
movsb
nop
int3
es
pop
jp
jecxz
jno
fucom
test
sub
xchg
adcb
aas
mov
loope
fists
fisttpl
test
or
cld
xor
dec
xchg
push
add
sarb
movsl
test
sbb
rolb
xchg
rorl
lret
add
mov
add
mov
andnps
mov
sub
mov
pop
sub
popa
mov
sub
jg
mov
shl
int
add
sub
push
pop
int3
enter
jecxz
mov
mov
push
jns
sub
or
mov
out
in
mov
outsb
sbb
nop
data16
adc
mov
jl
xor
movsl
xchg
test
cli
mov
mov
add
clc
xorl
lods
jb
insb
insl
popa
ret
sahf
push
cmp
pop
test
mov
push
daa
sub
fnsave
push
xor
loop
sub
adc
div
mov
push
cli
and
mov
inc
subb
mov
daa
inc
pop
cmp
in
mov
out
add
cwtl
andl
mov
and
xor
jge
out
stos
or
popf
imul
aam
sti
and
jo
cmp
pushf
pop
jae
sub
idiv
add
rorl
cld
push
popa
jg
nop
push
or
insb
mov
jge
daa
adc
mov
mov
out
call
push
stc
and
aam
lods
cmp
xchg
and
and
js,pt
mov
imul
cmp
xchg
and
or
xor
xchg
push
push
or
rolb
xor
dec
popa
in
lcall
adc
rcll
ret
mov
jge
loope
loope
loop
ja
cmpsl
cmp
fistl
or
add
icebp
add
jecxz
and
testl
mov
and
dec
icebp
sub
xchg
dec
pop
std
jbe
lret
mov
pop
mov
imul
cmc
shrl
dec
test
push
repz
mov
mov
inc
lods
pushl
pop
push
fdivp
cmp
add
fwait
push
daa
leave
insb
xchg
cli
andb
outsb
mov
cli
add
jl
sub
jne
cmp
jecxz
lcall
cli
rol
out
icebp
sub
sti
imul
cmp
fisubs
adcb
mov
sbb
nop
push
out
lret
loope
into
movaps
arpl
xchg
fidivrs
sbb
add
sub
rol
push
add
push
mov
bound
pop
imul
aad
lahf
and
ja
in
fdivl
bound
das
pushf
imul
jns
rol
les
movsb
orl
stc
lcall
adc
rcrl
sahf
ret
cli
lret
adc
sub
cmc
jo
shrb
loopne
push
xchg
mov
jnp
push
xchg
pop
mov
or
dec
sbb
mov
loope
mov
dec
jmp
push
cli
out
jecxz
pop
sbb
bound
xorb
xor
loop
pop
in
insl
jmp
imul
mov
std
or
mov
dec
lahf
das
rcl
cmpl
cwtl
mov
push
ss
mov
js
lods
pop
and
outsb
mov
inc
cmp
and
hlt
pop
cwtl
push
orb
ret
mov
jns
mov
mov
xor
cld
enter
push
mov
leave
icebp
jl
cmp
sbb
dec
bound
sub
incl
inc
sub
xchg
lods
jae
stos
or
push
add
into
inc
js
ret
les
addr16
test
std
out
sahf
mov
dec
stc
stos
and
popa
fdivrs
loope
int
cltd
shrl
fdivrs
inc
push
xor
scas
out
xchg
fisttpl
test
iret
fstps
fisttpl
in
cmp
cmpsb
pop
loop
jne,pt
mov
jg
xchg
xchg
cltd
pop
and
pop
mov
fcomi
jno
jbe
imul
cmpb
loopne
pop
dec
mov
mov
xor
mov
jno
test
cmpsb
jbe
jg
sti
push
fcomps
out
mov
fsubl
cmp
std
mov
shlb
xlat
adc
in
stos
add
es
sub
call
mov
pop
ret
adc
or
mov
adcl
pop
loop
sbb
mov
test
xchg
xchg
in
ljmp
inc
sbb
xchg
rep
roll
mov
mov
jns
mov
orb
push
sub
add
mov
mov
std
xor
sub
mov
mov
int
push
test
insl
movsb
test
jne
add
pusha
and
scas
outsb
sub
cwtl
inc
mov
mov
push
mov
hlt
and
test
das
dec
mov
cmp
or
add
pop
std
lods
xlat
push
in
lahf
cwtl
insl
aas
test
inc
in
aaa
push
fstpt
mov
xchg
dec
lea
lret
rcrb
adc
lods
xchg
cli
imul
ss
adc
mov
cmc
mov
cwtl
add
xchg
push
xchg
lret
shrl
mov
xchg
mov
outsb
push
dec
lds
inc
hlt
aam
add
cs
dec
shll
std
jmp
jae
dec
jge
inc
lret
inc
jbe
inc
es
push
inc
ljmp
jmp
jnp
stc
mov
bound
imulb
fisubrs
mov
adc
and
xchg
mov
fwait
or
pop
fstl
cmp
xor
lock
mov
cmp
idivl
jle
and
popa
jmp
inc
dec
int
dec
push
xchg
repnz
imul
xchg
nop
loop
cwtl
insb
or
cmpsb
fcomip
or
rcrl
mov
das
push
adc
sbbl
xchg
xchg
xchg
mulb
lds
jl
gs
insb
dec
outsl
push
dec
cmpl
lcall
lock
jp
dec
dec
leave
cmpsl
jg
sub
add
adc
loope
mov
ret
lock
mov
ss
call
add
das
dec
sbb
outsl
dec
pop
adc
push
mov
mov
lock
rcll
enter
push
loop
int
daa
ljmp
cmp
clc
pmulhw
int
out
lods
loopne
dec
pop
cmp
pop
or
mov
ss
daa
adc
orl
int3
divl
xor
xchg
jl
mov
scas
test
lret
dec
mov
insb
sahf
inc
push
out
xor
mov
sub
mov
inc
pop
push
in
cmp
pop
mov
jb
incb
sbb
jecxz
xchg
jg
xor
mov
push
lcall
int3
shlb
lods
push
mov
or
sbb
push
mul
in
subl
dec
negb
pop
in
cltd
and
cmp
incb
mov
xor
daa
lahf
aam
jp
adc
mov
iret
and
mov
mov
fcompl
out
ret
loopne
fwait
repnz
push
gs
lret
aas
sbb
jnp
js
cs
rcl
fisttpl
mov
insb
cmc
adc
jae
out
sarb
and
aas
jb
pusha
mov
xchg
lods
testl
mov
xor
insb
cltd
call
mov
add
dec
fchs
and
test
cmpsl
repnz
xorl
sarl
std
jp
bound
sbb
mov
sahf
sub
shr
negl
jne
mov
and
xor
inc
in
loope
inc
das
cld
adc
sub
mov
dec
insb
mov
lock
push
xor
mov
enter
dec
inc
repnz
push
aam
pop
xor
mov
mov
inc
cmpsl
out
jecxz
das
or
arpl
scas
psubsw
sub
or
xchg
mov
in
jo
mov
out
rorb
fimuls
or
add
imul
jae
negl
sub
imul
jnp
push
stos
lahf
fisubl
cmp
das
push
lret
jmp
add
rcrb
enter
pop
sti
pushl
int3
mov
cmp
add
xor
push
rcll
push
pop
addb
sbb
push
pop
leave
or
pop
inc
add
mov
pop
sti
xorl
stos
cli
rclb
or
out
cmp
sub
cmpsl
xchg
and
es
or
dec
repz
fnstcw
jae
outsl
pop
and
xor
sbb
daa
adc
out
and
inc
test
mul
inc
repz
push
test
aam
xor
xchg
sub
pop
lahf
lcall
jns
sbb
insb
mulb
iret
sub
test
add
sub
cmp
sub
scas
dec
std
inc
mov
in
xchg
jb
or
outsl
fstl
xchg
clflush
cld
xor
dec
push
inc
daa
xlat
cmp
hlt
cmp
jl
imul
mov
js,pn
add
xchg
aas
adc
cld
cltd
jle
hlt
out
inc
test
cmpsl
test
add
sub
call
pop
push
insl
inc
sbb
sbb
popf
pusha
cmp
and
xchg
jl
ret
into
dec
fisubl
mov
add
and
jnp
cmp
add
movsl
dec
mov
arpl
div
sub
and
dec
push
adc
call
sub
imul
xchg
iret
repnz
lds
je
pop
pop
push
pusha
sbb
sub
stos
push
lret
rcrb
push
adc
cmp
cltd
adc
add
repz
push
xor
test
scas
or
mov
dec
out
and
mov
in
jecxz
xor
call
push
add
out
stc
sub
inc
mov
pop
mov
imul
jbe
lret
loope
mov
dec
adc
jbe
xchg
ds
mov
bound
insl
cmpl
mov
insb
lcall
stc
push
jl
inc
ljmp
jb
sub
jge
loopne
lds
mov
pop
add
cmpsl
sbb
sar
in
cmp
push
ret
sub
in
pop
mov
pop
sarb
out
cmpsl
cmc
cmpsb
lcall
fcmovne
jns
or
fmul
in
jl
loopne
test
or
loopne
mov
popf
or
xor
int
notb
inc
cmp
or
sub
xor
loope
cmp
loop
mov
test
lahf
sub
insb
sub
or
hlt
call
push
mov
inc
sbb
test
push
jnp
inc
jecxz
xor
aaa
sub
loop
mov
mov
nop
addl
stc
das
jne
pusha
inc
and
es
cmp
and
ret
lods
xor
lea
mov
dec
sahf
mov
scas
xor
inc
xor
adc
sub
mov
in
popa
rolb
jmp
cmp
push
rorl
dec
xor
mov
or
or
cltd
dec
jge
sbb
nop
mov
xchg
jle
add
sbb
push
fdivrs
stc
add
mov
adc
sbb
mov
mov
adc
xor
pop
adc
push
rol
pop
jmp
fsubrl
outsl
daa
outsb
pop
push
sbb
movsl
ret
jbe
pop
pop
or
inc
iret
add
jbe
mov
xchg
fadds
jge
clc
add
cwtl
mov
sub
fcomps
jecxz
mov
xchg
lahf
xor
adcb
mov
movsl
sbb
ja
jae
cld
fcoms
imul
push
mov
jae
das
es
mov
lret
cmp
test
out
lahf
cmp
mull
push
push
cmp
mov
mov
add
sbb
cmp
mov
outsb
mov
addb
popa
test
outsl
loop
imul
mov
pushf
lahf
xchg
dec
in
mov
fstpt
inc
into
lds
std
pop
mov
in
fimull
push
mov
lahf
sbb
mov
mov
cltd
and
mov
xor
sub
test
je
fsub
push
sti
adc
cltd
sbb
jmp
popa
ljmp
fistl
je
inc
push
sub
aas
and
mov
nop
add
or
into
in
leave
dec
add
cmp
dec
idivb
jo
mov
test
stc
loop
mov
in
mov
sub
int3
mov
xor
push
or
sbbb
ret
inc
pop
mov
int3
pop
sbb
xchg
rcll
xchg
stc
les
cli
xchg
sbb
iret
sbb
stc
out
xchg
mov
lcall
aad
jbe
sub
push
call
sbb
adc
cmpsb
cmp
lds
pop
je
subl
push
mov
adc
push
call
mov
pop
loop
stos
lock
rclb
sbb
std
clc
and
fsubrs
rcrl
push
jle
mov
js
jecxz
xchg
ljmp
jmp
shrl
test
fwait
lret
bound
mov
mov
ds
fnsave
rcrl
call
pop
pop
sub
lock
out
or
mov
addb
cmpsl
outsl
or
xor
repnz
xchg
rcll
repz
arpl
std
mov
fidivrs
push
lods
hlt
inc
mov
mov
test
push
loop
cmpsb
or
jnp
clc
push
xor
dec
jl
push
cmp
jns
mov
mov
mov
mov
sub
add
and
in
ss
cld
push
cmp
push
dec
les
fldt
into
scas
adc
cs
jl
jge
jg
mov
dec
mov
addr16
orb
xchg
add
sub
sub
int3
jmp
aas
outsl
sbb
ret
adc
add
mov
mov
fs
mov
adc
incb
testl
movsl
sahf
jne
ja
lock
mov
aaa
repnz
insb
in
jge
lret
mov
arpl
test
cmpsl
std
jo
xlat
mov
add
jnp
push
int
or
iret
in
xchg
xchg
test
push
ret
aas
xchg
mov
sbb
dec
sbb
jg
daa
push
jmp
xchg
fwait
ja
arpl
cwtl
dec
lds
mov
jp
pop
imul
lret
cld
push
ret
popl
fdivr
insb
mov
xor
jg
fwait
cmp
pushf
fistps
sub
mov
adc
out
in
fldt
sbb
sub
iret
sub
daa
pop
push
cmp
in
repnz
push
repz
enter
es
dec
int
add
scas
jg
les
inc
lcall
cmp
fiadds
push
and
sar
clc
jbe
add
mov
xchg
sub
stos
enter
adc
ds
enter
rorb
test
loopne
inc
js
pop
addr16
sub
push
in
push
arpl
sub
gs
sub
out
addr16
jle
xor
call
aaa
xor
pop
leave
cmp
jmp
xchg
or
push
and
push
push
inc
ficoml
fwait
and
ljmp
cmp
add
fldl
mov
inc
sub
shlb
mov
cwtl
xor
fnstcw
and
scas
les
lret
fistps
sub
lds
ljmp
mov
mov
rcrl
lret
push
pop
rcl
cmpsb
sahf
push
inc
sbb
call
jge
mov
je
rorl
xchg
cmp
sar
cmpsl
mov
sbb
scas
hlt
daa
repnz
ja
cli
cmp
ret
es
shlb
imul
lods
out
mov
cmp
add
cmp
cmp
ret
cmc
add
xlat
insl
adc
inc
jb
mov
cmp
and
pop
shll
daa
fidivs
and
testb
fmul
cmpl
lods
into
mov
aad
dec
push
push
pop
cs
pop
sbb
stc
xchg
rorl
dec
sbb
clc
test
les
inc
aad
add
sub
into
push
sbb
stos
mov
adc
fcmovne
imul
cwtl
out
mov
ds
fwait
inc
or
and
mov
and
jae
sbb
xchg
mov
sbb
xchg
or
mov
mov
lahf
pop
in
lock
mov
scas
sub
mov
sbb
mov
push
sub
test
sub
jnp
lcall
jg
lods
jmp
pop
enter
movsl
mov
sti
stos
mov
sbb
fwait
cmpl
or
xor
les
test
addr16
jne
repz
scas
push
add
inc
mov
loope
sbb
xor
jns
sub
dec
repz
ret
lahf
out
sub
cmp
jge
mov
cwtl
aad
lods
test
sub
jne
into
daa
mov
jge
dec
or
inc
icebp
out
rol
jg
daa
sbb
std
pushf
dec
push
roll
sub
pop
ds
mov
incb
pusha
clc
lcall
inc
xchg
cli
sbb
nop
pop
in
lds
add
fsubl
add
jne
mov
fisubl
xor
ds
push
push
pusha
xor
arpl
cmp
mov
fists
gs
fimull
push
fimuls
push
or
inc
or
mov
fdivrp
push
mov
add
lcall
and
push
and
cmp
iret
sub
sbb
ret
xchg
mov
pop
jg
mov
in
in
jg
push
xchg
loopne
jge
add
dec
mov
adc
and
mov
jecxz
rorl
cmc
aam
mov
fwait
call
jp
cmp
jl
pop
cmp
mov
xchg
push
in
xchg
icebp
xchg
jl
lcall
xorl
int3
dec
and
and
lahf
scas
mov
cmpsl
iret
addr16
push
sub
addl
lock
out
outsb
push
repz
testb
push
aam
das
inc
cmc
xchg
and
icebp
dec
je
dec
mov
sarb
and
lea
sbb
cmpsb
les
sub
enter
mov
adc
ljmp
imul
mov
enter
js
test
jo
repnz
dec
paddd
mov
xchg
cwtl
pusha
test
jp
fwait
in
outsl
sub
and
dec
aas
ror
mov
fs
push
mov
sbb
and
jne
adc
mov
dec
jnp
dec
or
pop
sbb
add
pusha
fstpt
pusha
nop
out
inc
stc
test
ss
int
sti
sar
jl
cmp
mov
lods
sub
cld
push
mov
outsl
lret
push
jb
jecxz
in
pop
mov
loope
pop
or
outsb
sarl
jle
pop
jge
insb
mull
push
repz
push
sub
adc
lock
add
or
mov
into
call
mov
popf
jnp
popa
jns
dec
movsl
imul
dec
sbb
cmc
lcall
in
jmp
mov
nopl
xchg
cmp
cmp
arpl
add
jmp
mov
dec
xor
out
sbb
popf
fcmove
jo
arpl
andl
fidivrl
and
ds
mov
sub
mov
in
push
loopne
and
pop
fnsave
lret
sub
repnz
jle
rclb
repnz
test
cmp
out
xchg
popa
mov
push
test
add
lods
cs
cmc
hlt
push
daa
test
loop
jo
scas
jp
jnp
aam
mov
fs
sub
lcall
jg
imul
xchg
push
pop
xor
ret
outsb
test
jg
mov
mov
sbb
inc
sub
sbb
sbb
clc
repz
jne
mov
in
and
imull
jl
gs
das
mov
jle
lret
addr16
add
dec
imul
and
or
lcall
sbb
and
popl
in
inc
fsubrs
push
sti
inc
out
test
data16
dec
xor
cltd
dec
in
pop
sbb
loopne
and
jle
out
sub
out
pop
inc
push
cmp
je
sub
dec
xor
pop
pop
arpl
rcrl
cs
ds
insb
movsb
and
jecxz
pop
aam
daa
mov
std
ret
mov
pop
xchg
push
mov
dec
jmp
ja
mov
cmp
mov
jns
shll
sbb
inc
xchg
ret
stos
out
mov
mov
push
int3
add
mov
and
shl
shll
mov
imul
dec
loop
fcmovu
in
stos
insb
sbb
mov
xor
inc
gs
ret
pop
xor
int3
jb
dec
pop
hlt
lret
pop
pushf
mov
sbb
xor
movsb
sti
movsb
push
imul
cmp
xor
roll
fwait
sbb
or
ja
popa
mov
in
test
test
lods
das
inc
cli
push
add
clc
jmp
mov
hlt
lret
push
cld
jge
nop
mov
sub
push
test
pop
call
push
xor
imul
lahf
jae
xchg
dec
pop
xchg
inc
cmp
mov
fs
std
lret
cwtl
shlb
inc
jle
mov
mov
jle
rorl
fisubrl
stc
jle
jnp
cs
inc
sub
shrb
mov
out
add
mov
jbe
or
xor
push
loop
shl
mov
in
mov
fwait
or
push
mov
inc
cmp
mov
movsb
sub
pop
mov
fdivl
xor
hlt
je
fdiv
lret
push
or
jb
inc
jne
pop
and
outsb
cmp
xorb
fidivl
stos
outsl
dec
mov
mov
clc
outsb
cs
pusha
addr16
sub
test
out
push
jge
mov
mov
and
or
or
into
sub
mov
insl
aam
inc
sbb
mov
fdivr
jnp
dec
mov
cld
shl
mov
mov
int3
cltd
jns
pop
pop
popf
xchg
test
shr
adc
dec
sbb
int
or
arpl
icebp
xor
sub
and
mov
pop
fucom
adc
xor
es
enter
je
mov
mov
stos
xchg
ret
push
mov
loopne
mov
andb
mov
pushf
movsl
std
xor
test
cmp
push
inc
or
mov
sbb
repz
push
loopne
xchg
adc
jge
mov
sub
mov
xchg
imul
sub
cmp
addl
sbb
das
jne
dec
xor
mov
ret
xchg
pop
cld
mov
lret
gs
js
mov
mov
jo
mov
mov
jp
pop
sbb
sarb
dec
and
es
push
pop
inc
lret
inc
std
test
ficoml
sub
call
pop
loope
ljmp
adc
lahf
xchg
add
add
out
sbb
stos
hlt
dec
cmp
sbb
pop
popf
mov
shlb
xor
mov
out
or
jmp
adc
inc
leave
das
jo
pop
mov
and
dec
mov
pop
lock
stc
sub
jmp
arpl
pop
daa
and
jae
pcmpgtd
push
out
js
or
daa
push
pop
out
xchg
push
push
add
in
pop
mov
imul
sbb
sub
hlt
aad
ja
rcrb
lods
stos
push
xchg
iret
lock
sbbl
push
ret
xor
jae
pshufw
ds
jno
leave
fwait
jmp
jl
jae
mov
lahf
jp
sbb
and
mov
pop
pop
fisubrl
cmp
clc
mov
movsb
mov
mov
cmp
add
daa
xor
inc
ret
push
jae
das
sbb
cs
outsb
xchg
adc
pop
fisttpl
lods
jns
push
clc
pusha
shrl
mov
je
mov
mov
scas
sbb
push
inc
int3
lds
adc
les
dec
sub
fmulp
mov
pop
bound
loope
inc
enter
out
call
add
jbe
lahf
sbb
xor
mov
xchg
push
xchg
ret
call
test
xor
jnp
pop
in
or
cmp
sub
arpl
cltd
leave
mov
push
inc
rcll
sahf
pop
jecxz
pushf
pop
xchg
mov
sbb
mov
test
cmpsl
or
aas
sbb
leave
mov
lahf
inc
das
pop
int3
mov
jbe
pushf
add
mov
out
movsl
mov
cwtl
sub
inc
subl
sti
idivl
jge
push
and
pop
jecxz
lods
out
scas
popa
outsb
pushf
pop
repz
and
sub
mov
mov
and
out
loope
js
mov
gs
int
scas
aas
and
jl
mov
insl
xlat
scas
shrb
stos
notl
mov
and
add
cmp
dec
xor
mov
cmpsb
add
outsl
xlat
bound
jp
add
mov
mov
inc
ret
add
call
inc
in
loope
hlt
iret
push
decb
pop
jg
pop
and
fs
sub
mov
fst
arpl
jecxz
fisubrs
sti
dec
jae
dec
jecxz
push
cmpsb
sbb
and
or
into
jo
mov
repnz
xor
dec
jne
shrl
mov
jecxz
testl
roll
clc
xor
cli
in
popf
xchg
repz
cwtl
xchg
ret
int
rorb
sahf
cmp
cmc
sub
lret
popa
push
es
fcomip
fnstcw
mov
or
out
sub
sub
xchg
es
push
cmp
cwtl
jl
and
clc
sub
sbb
incl
sarb
popa
movsl
cwtl
repnz
movsb
mov
jno
mov
inc
and
stc
mov
add
lods
imul
clc
jo,pt
sbb
fdivl
jmp
ret
std
cmp
mov
add
lret
fwait
pop
je
outsb
sqrtps
daa
cmp
mov
push
iret
pushf
mov
imul
out
rorl
daa
inc
sti
cmp
sub
and
cmc
sbb
add
int3
out
hlt
push
repz
fwait
enter
nop
lcall
negl
and
sub
aad
cmp
and
pop
cld
fcoml
mov
faddp
dec
cmp
sub
call
lods
div
shll
out
arpl
in
mov
aas
jo
push
and
or
sub
es
inc
jg
mov
push
repz
sbb
pop
pop
out
leave
xchg
into
addl
xlat
sub
push
addl
mov
aaa
lahf
cmp
scas
push
mov
aaa
lock
mov
inc
cld
push
push
adc
cmp
and
jp
ret
mov
test
mov
in
aaa
insb
iret
pop
popa
out
push
ss
lods
jns
cmpsl
xor
xchg
push
faddp
inc
pop
shr
cltd
pushf
in
xor
rcrl
xor
pop
dec
outsl
addr16
mov
xorb
sub
faddp
cmp
movsb
lock
rclb
xlat
or
cmp
shrl
and
ja
sbb
xchg
cmp
push
fldl
shr
pushf
add
out
and
js
jo
mov
mov
not
std
cmp
andb
sbb
scas
pop
ficomps
sbb
pushf
mov
mov
jne
mov
mov
jg
jmp
cld
rcll
fisubrl
push
jae
sbb
push
jae
lods
pushf
jmp
das
mov
sub
mov
adc
push
sub
mov
push
pop
pop
sub
adc
xchg
loop
cmp
dec
sub
cld
and
ja
test
outsl
pop
pop
addr16
push
sahf
test
in
aad
fucomi
mov
les
mov
inc
push
mov
lock
subb
das
nop
loope
sub
push
mov
add
ficoms
push
xchg
push
mov
xorl
sub
sub
inc
jle
xchg
cmp
adc
jne
sti
out
add
fisubrs
mov
xor
das
jp
orl
insl
mov
aaa
insb
mov
shr
mov
nop
insb
and
sarb
cmp
dec
das
inc
push
imul
icebp
add
push
adc
add
std
adc
aas
or
std
or
sub
gs
imulb
aas
mov
stos
movsb
daa
pop
cwtl
jnp
mov
or
cltd
push
rorl
mov
mov
out
and
sbb
test
cmp
fwait
ds
jbe
sti
and
and
lock
or
test
push
outsl
sub
inc
scas
lcall
inc
inc
mov
fcompl
test
add
je
xchg
popf
and
inc
lods
push
mov
pop
sarl
lods
jp
cmpl
fs
cmc
inc
insl
ret
sbb
inc
mov
mov
sarl
insb
cs
cmpsb
cltd
dec
dec
in
fiaddl
lahf
xchg
xchg
cmp
mov
out
mov
and
adc
cmpsb
dec
imul
arpl
and
push
ljmp
test
jecxz
jne
scas
fdivrl
fsqrt
js
xor
fildl
dec
fsub
inc
sbb
xlat
sar
lods
push
inc
repnz
imul
stc
adc
sbb
sbb
cmp
jge
int3
jbe
cmp
es
mov
cli
daa
inc
das
add
mov
scas
inc
gs
or
fistpll
mov
and
sub
and
or
mov
je
pop
insl
xchg
adc
clc
push
sub
jnp
mov
xchg
shrb
daa
adc
into
inc
pop
das
xchg
loopne
cmp
in
push
in
int
mov
sti
and
cmc
ja
push
lcall
or
aas
lret
test
clc
daa
adc
ss
in
std
test
cmp
jns
sbb
jne
scas
mov
div
mov
jg
insl
mov
fwait
sahf
out
cmpsb
mulb
fucomp
adc
inc
jbe
jns
pop
jge
das
pop
cld
jns
idivl
ja
sbb
es
test
aaa
cs
sahf
dec
in
cmp
jg
inc
das
jae
and
jb
jae
out
cld
xor
mov
loopne
lods
popa
adc
adc
data16
adc
jg
mov
jbe
xchg
jae
mov
test
jb
out
daa
sbb
into
xchg
and
pop
mov
mov
out
sarl
in
jge
dec
adc
out
and
repz
jbe
mov
clc
dec
mov
xchg
mov
sbb
out
imul
push
cmp
sahf
inc
lcall
cmp
fiadds
push
fdivrs
out
inc
and
dec
test
xchg
aad
cwtl
imul
dec
shrb
push
adc
or
pushf
out
add
cmp
sub
shll
dec
mov
mov
mov
in
cmp
or
jbe
pusha
push
fdivl
inc
repz
stc
lret
lret
push
sti
cmp
mov
or
lods
fucom
pop
lea
out
in
mov
orl
inc
sti
int
xor
cwtl
cld
outsb
sub
pop
add
ss
mov
pop
adc
adc
add
mov
into
add
push
sub
fwait
mov
lahf
or
cmp
stos
lret
out
inc
push
movsb
push
in
es
rclb
scas
loop
push
mov
cmp
test
cltd
jp
in
add
add
cmp
rorl
sti
cmp
out
sub
loope
sub
sbb
jo
out
and
outsl
push
rorb
cmp
jbe
in
inc
add
mov
lods
push
mov
xchg
fiaddl
or
push
xchg
jge
sub
loopne
or
inc
jecxz
aaa
mov
and
scas
cmp
ljmp
adc
cmp
outsb
mov
sbb
dec
imul
mov
out
ss
add
sbbb
imul
pop
pushf
mov
iret
enter
mov
repnz
fs
test
pop
popa
sbb
mov
aam
repz
mov
add
xor
adc
fwait
pop
push
inc
inc
stos
inc
pop
adc
cmp
clc
push
out
jae
daa
lahf
lods
push
jge
idiv
or
outsl
add
cmc
aas
mov
mov
mov
outsl
pop
pcmpgtw
mov
jge
jb
mov
pop
cmp
int
mov
mov
sub
lret
jge
mov
mov
call
cmpl
cmp
cltd
hlt
imul
xor
fists
or
mov
shl
mov
push
nop
jp
xchg
mov
jecxz
xor
mov
mov
xorl
shlb
pop
testl
add
dec
sub
add
repz
std
xor
call
sbb
daa
shlb
mov
aaa
cmp
and
adc
pop
xorl
sub
and
leave
push
daa
mov
and
push
add
outsl
cmpsb
movsl
mov
in
mov
sbb
dec
ds
out
pushf
ret
pop
or
mov
or
insl
jge
or
push
pop
ljmp
fidivrs
shl
mov
jecxz
mov
popa
add
insb
imul
inc
cmp
loop
in
loopne
mov
cmc
jmp
in
aad
iret
mov
add
sub
xchg
jne
push
mov
cmpsl
mov
psllq
push
mov
mov
xor
dec
imul
clc
xor
fisttpll
stos
loop
jle
sbb
lods
ja
int3
outsb
jle
fwait
add
out
mov
push
lods
mov
mov
test
lahf
xor
or
push
lret
xor
xchg
jo
jo
cmp
jbe
jl
xor
push
xor
xorb
jle
xor
dec
cmp
jmp
loopne
cmp
and
int3
ret
ret
fldl
adc
lcall
sbb
and
xchg
xor
arpl
insb
in
xor
jbe
cmp
cmp
pusha
add
movsb
add
rcrl
loope
jb
outsb
stos
xor
imul
xorb
mov
jns
jl
adc
xor
push
push
xchg
pop
iret
sub
push
loop
xchg
pop
icebp
cmp
popa
cmc
or
loopne
sti
addr16
lock
ss
insb
mov
inc
cwtl
sbb
lock
scas
sbb
mov
dec
add
icebp
daa
cmpsl
push
orl
aad
dec
add
push
and
lock
jbe
dec
cmpsl
xchg
fildl
lret
xor
out
xor
into
fs
imul
dec
xchg
aaa
cltd
ret
test
push
rorb
and
out
pcmpgtd
sbb
xchg
dec
andl
std
pop
xor
inc
mov
xchg
in
in
push
je
lret
insl
mov
or
stos
sub
adc
xor
out
cmp
jl
ds
fs
imul
mov
sti
and
adc
xor
orps
add
push
xor
les
test
outsb
pop
xchg
jecxz
push
outsl
push
mov
daa
sbb
push
inc
hlt
inc
inc
mov
mov
pop
movsb
out
stos
movsb
mov
in
in
mov
daa
imul
cmp
hlt
mov
sub
dec
les
sar
dec
div
add
addr16
jmp
push
lods
xchg
shr
inc
out
lret
mov
pop
insl
push
dec
popf
xor
push
xchg
or
subb
mov
inc
jl
mov
lods
jp
std
jns
test
sub
fdivp
dec
int3
frndint
cmp
add
imulb
icebp
cmc
mov
or
adc
mov
mov
icebp
jnp
push
je
dec
cmp
xlat
pop
lock
arpl
mov
sbb
mov
mov
scas
xchg
movsb
rclb
in
sub
movsl
stos
sbb
loope
and
mov
or
scas
mov
cltd
andl
cmpsb
mov
jge
xchg
push
add
test
lods
lcall
ret
mov
lcall
push
stos
iret
add
mov
mov
jl
xchg
bound
mov
mov
xlat
enter
inc
repnz
xchg
sar
gs
pop
jl
jae
inc
ljmp
mov
pop
lea
inc
adc
rcrb
dec
imul
pop
dec
fsts
xchg
adc
cwtl
xor
inc
out
sub
mov
sub
dec
jmp
pop
pop
cs
test
mov
aas
xchg
and
fs
fidivrs
push
pusha
mov
pop
std
pop
sbb
scas
fisubs
mov
mov
lods
xor
ret
outsb
fbstp
dec
cmp
or
ret
xor
shlb
sahf
test
js
adc
into
or
inc
int3
dec
fwait
ds
inc
xor
xchg
push
inc
inc
icebp
sub
lret
pushl
lret
pop
out
bound
xchg
xor
inc
adc
inc
cmpsb
bound
mov
in
push
scas
or
insl
cmp
mov
sti
xchg
mov
in
mov
cs
ret
out
dec
xor
push
fcmovu
pop
add
orl
sub
add
fmull
add
add
push
mov
xor
aas
rcrb
scas
adc
notb
movsb
dec
lods
outsb
ljmp
test
popa
mov
test
xchg
ljmp
xchg
xchg
arpl
and
data16
dec
mov
jecxz
add
push
dec
into
mov
jno
shrl
inc
or
jae
pop
js
mov
out
mov
xchg
sbb
stos
dec
add
xlat
adc
mov
xor
jmp
xor
test
dec
movsl
sub
xchg
lock
lret
mov
jge
xor
out
lret
cmp
insl
pop
or
jb
pop
pop
in
rcrb
push
aad
mov
jae
mov
ds
pushf
mov
imul
lret
rcr
stos
fwait
stos
xchg
in
xor
push
call
xor
outsb
pop
mov
rorb
iret
gs
add
cltd
mov
mov
jo
pop
xchg
dec
pop
rclb
mov
leave
es
and
shlb
push
movb
and
add
cs
je
inc
insl
loope
iret
pusha
repz
neg
push
pop
sub
pusha
pop
push
sub
jmp
popf
sub
fs
dec
iret
dec
cld
xrelease
push
out
mov
stos
mov
xchg
lret
xchg
sub
sahf
xchg
fsubs
sarl
add
fsubl
sti
push
xor
jbe
aad
outsl
vpsubw
rorl
ret
out
mov
gs
jbe
dec
adc
sub
jp
in
lods
in
xchg
std
rolb
in
jae
fs
fs
out
jb
mov
hlt
pop
sbbb
lret
popf
scas
or
stc
xchg
push
adc
clc
sub
add
adc
icebp
dec
xor
pop
pand
lds
pop
pushf
lds
pop
add
push
push
inc
push
or
fadd
or
mov
cmc
or
dec
shl
pop
sub
imul
lret
cli
mov
fnstsw
mov
mov
push
or
pushf
cld
fstp
jl
mov
les
push
mov
push
shr
iret
std
adc
sub
adc
imul
sarb
aam
popa
in
mov
jns
popf
stc
repz
xchg
cmp
push
dec
rcrb
sub
xchg
je
test
cmp
mov
in
mov
inc
arpl
jnp
icebp
pop
fildl
adc
or
sbb
rclb
or
inc
leave
mov
xchg
dec
stos
pop
imul
inc
push
jbe
lret
mov
lahf
mov
aaa
shlb
arpl
iret
mov
mov
pop
jmp
or
pop
lods
or
jnp
mov
inc
or
fldl
out
in
test
cmp
inc
jecxz
arpl
insb
inc
idiv
pop
mov
jae
sti
dec
inc
popa
adc
mov
sbb
mov
icebp
adc
mov
pop
notb
out
mov
xor
mov
or
mov
jae
call
xchg
and
stos
orb
mov
inc
adc
into
cmp
mov
icebp
pop
fucomi
adc
insb
xchg
hlt
jo
fstp
lret
jno
pop
mov
icebp
push
inc
xor
adc
adc
add
leave
je
mov
mov
daa
xor
mov
mov
push
enter
in
int3
dec
insl
and
stos
movsl
ds
add
adc
out
fnstcw
push
loope
lock
test
mov
sti
xor
pop
inc
and
lcall
and
mov
mov
nop
bound
loopne
pop
lret
sub
mov
movsl
out
dec
lea
xchg
and
std
push
mov
push
cmp
xor
ret
pushl
dec
sub
popf
adc
inc
repz
xchg
movsl
jns
in
pop
pop
insb
fsubp
and
sub
and
leave
xor
fists
outsb
stos
rcll
dec
cmpsl
ljmp
cmp
pusha
outsb
icebp
mov
and
mov
mov
cltd
push
xchg
mov
sbb
jne
push
and
xor
or
adc
mov
cmp
dec
cli
pop
movsb
cmp
push
pusha
mov
jno
fdivs
in
or
cmc
mov
popf
sub
push
into
insb
mov
adc
rorl
adc
jmp
lock
push
pop
push
jg
loop
icebp
jle
ret
scas
and
push
shrb
mov
push
cmpsl
sbbb
es
adc
push
pushf
daa
jl
loope
outsb
repnz
fwait
and
mov
sbb
mov
or
jb
or
add
cmp
fimuls
add
lret
or
xor
mov
and
cs
aas
and
xchg
lret
push
and
mov
jb
sub
insb
push
sti
or
mov
inc
jbe
jmp
and
dec
cmp
sub
mov
repz
gs
test
sub
mov
cmp
in
iret
inc
sub
popa
sbb
sub
dec
inc
cmp
or
nop
std
jns
dec
add
insb
mov
mov
inc
movsb
pop
adc
mov
loopne
xchg
dec
cmpsl
jl
pushf
or
scas
inc
movsl
jge
iret
dec
scas
xor
pop
in
icebp
mov
ficoms
pop
fmuls
sub
bound
fst
daa
xor
mov
in
in
ret
mov
xchg
inc
pop
dec
pop
js
movsl
push
and
imul
cmp
mov
jmp
popf
test
fstps
pushf
rolb
lods
aam
imull
dec
loope
xchg
jl
mov
test
out
mov
leave
mov
and
dec
sbb
out
outsl
push
inc
sub
jle
mov
mov
xchg
jnp
push
xor
aas
aas
or
mov
fimuls
adc
lret
add
mov
adc
lea
xor
mov
adc
mov
xor
cmpb
scas
push
sub
mov
fwait
xchg
repnz
inc
jo
dec
iret
jmp
xor
jmp
pop
out
and
mov
xor
xchg
push
add
push
cmp
fdivrl
mov
push
popf
roll
pop
xchg
mov
fwait
sbb
pushl
dec
lcall
shr
sarl
stos
fwait
jnp
in
pop
sub
stc
lods
pop
daa
mov
mov
or
or
dec
sub
lcall
shl
xor
cltd
dec
push
imul
clc
das
movsl
push
mov
cmc
add
sbb
int
sarl
adc
popa
repnz
mov
int
imul
sub
and
mov
push
inc
and
mov
repz
lea
xor
call
add
jle
lcall
outsl
pusha
shll
or
cmp
shlb
std
lods
pop
lcall
sbb
push
mov
in
dec
push
je
mov
push
adc
into
cmpsb
aas
jg
pop
jge
movsl
cs
and
icebp
jns
insb
push
int3
mov
stos
jne
lock
pop
out
xchg
sbb
lods
jg
mov
push
pop
ss
data16
lret
push
imul
test
cmp
xor
sbb
jp
movsl
out
mov
cmp
and
jo
cmp
loopne
add
daa
cmp
mov
cmp
into
scas
icebp
cli
dec
negb
lret
xchg
jmp
int3
inc
dec
in
lret
fbld
mov
add
jecxz
mov
sub
scas
iret
jl
ror
enter
aam
in
ret
roll
ret
or
cmp
jmp
inc
mov
mov
pop
stos
jmp
jo
xchg
xchg
inc
fdivrl
mov
loop
sbb
jne
ljmp
je
cmp
test
rcll
stc
into
dec
nop
or
add
mov
jns
es
mov
stc
lea
stos
push
lret
inc
xchg
fisttpll
js
shl
leave
mov
cltd
insb
insl
daa
mov
or
cmp
mov
xchg
and
mov
add
sbb
cmp
cmp
sbb
push
outsl
sti
stc
lret
dec
push
sbbb
cmp
jp
pop
or
aaa
into
outsl
mov
cmp
shl
fwait
dec
inc
add
and
fs
cmp
adc
adc
jns
cmp
call
outsl
jp
je
loopne
mov
and
scas
and
out
fcoml
jae
or
add
je
dec
das
stos
es
inc
inc
in
pop
loope
cs
lahf
sbb
jmp
std
mov
loop
cmc
pop
mov
rorl
sub
add
jle
cwtl
or
jb
and
test
in
mov
nop
aas
imulb
push
or
sbb
or
or
comiss
repz
bound
push
pop
mov
push
mov
mov
hlt
sub
jl
mov
and
xor
es
and
sub
xchg
push
jbe
in
add
sbb
xor
and
arpl
insb
call
aam
dec
mov
arpl
cltd
inc
stos
ss
sbb
bnd
ret
push
js
mov
stc
arpl
das
mov
add
stos
insb
pop
scas
call
inc
int3
jbe
add
dec
lcall
imul
inc
mov
leave
xchg
dec
in
jge
stc
fcomps
shl
or
jmp
jmp
dec
lcall
les
jle
in
sub
outsb
in
aam
push
mov
clc
bound
sbb
mov
jo
int
mov
sarl
jno
into
cwtl
int
or
mov
mov
xchg
not
jae
pushl
sti
icebp
nop
dec
iret
fcoml
mov
scas
add
imul
fildll
and
cmp
jge
mov
push
xchg
repnz
mov
cwtl
adc
ret
insb
mov
mov
lcall
push
mov
imull
or
les
imulb
lret
push
lcall
call
pusha
or
mov
ret
into
in
pop
hlt
leave
cmp
xchg
ljmp
out
les
je
fs
add
or
lea
cmp
pshufw
pop
xchg
cli
cmp
popf
xor
sbb
sarl
ja
inc
push
mov
lods
iret
fwait
add
lcall
add
push
dec
nop
sub
lods
fnstenv
clc
rclb
imul
cmp
add
dec
adc
lcall
iret
dec
xchg
dec
sahf
ds
pop
xchg
ja
sti
add
add
push
adc
ja
pop
xchg
sub
cld
in
jecxz
icebp
sahf
loopne
shl
pop
pop
cmp
shrb
fstps
sub
pop
mov
add
cmp
dec
orl
dec
mov
xchg
ret
or
push
cmp
or
into
call
sub
std
out
xor
mov
pop
in
mov
pop
jo
mov
enter
adc
and
ror
fs
test
repnz
add
xor
cmp
pop
stos
sbb
das
mov
fwait
jne
ss
out
push
mov
fwait
test
xlat
or
mov
cmp
repz
mov
rcr
in
ret
fsubs
std
data16
scas
shll
mov
repnz
push
cld
ja
mov
out
mov
xor
fldl
je
test
jb
mov
notl
add
das
sbb
mov
inc
pop
cmc
aas
fisttps
ficompl
cmc
movsb
js
out
arpl
popf
push
mov
scas
daa
lea
std
in
dec
jno
test
push
push
in
mov
clc
iret
inc
jmp
add
push
mov
adc
loopne
in
enter
aas
fistpl
mov
pushf
inc
ds
sbb
sbb
sub
outsb
ret
mov
mov
xchg
jecxz
xchg
inc
sbb
mov
cmc
xchg
mov
out
fs
and
and
std
sub
cmpsl
rcr
stc
outsb
add
stos
xor
push
add
movsb
std
or
xor
sub
sbb
mov
lret
in
dec
add
adc
mov
out
mov
mov
xor
sbb
outsl
add
mov
sub
rorl
jae
sahf
lcall
dec
rclb
xlat
bound
mov
xchg
dec
cmp
jb
leave
movsl
insb
vphadduwq
jne
sub
sub
or
mov
add
mov
dec
int
jmp
in
nop
je
fildll
movsl
mov
cli
divb
cmc
lcall
out
mov
mov
cwtl
sbb
mov
leave
fisubrl
hlt
jl
sbb
and
sub
mov
fstpt
pop
testl
mov
outsb
sbb
dec
xchg
idivb
xchg
cs
mov
std
pop
adc
cltd
ss
shl
dec
hlt
mov
call
add
rorl
sbb
jnp
out
aaa
test
pusha
sbbb
aam
mov
insl
loope
or
movsl
das
mov
and
lcall
push
xchg
lret
jbe
imul
inc
sbb
xchg
jge
jae
clc
ret
push
jno
pop
shrl
fcomps
test
nop
push
into
rcrl
jg
daa
outsb
add
out
sub
lret
jge
adc
push
or
xor
xchg
and
pop
int3
adc
js
cltd
ss
mov
sahf
ss
out
sbb
push
addl
aad
ds
lcall
sub
movsl
push
lahf
cwtl
insl
repz
mov
inc
push
outsb
movb
hlt
cli
cmc
jge
sbb
loopne
jno
cmp
scas
dec
mov
sub
test
pushf
pushf
pop
dec
cltd
lods
test
cmp
push
ja
dec
aad
fsubs
not
stos
mov
jmp
pop
or
and
test
xchg
popa
fs
test
test
and
cmc
fisubrs
in
push
fwait
bound
loop
push
pop
xchg
stos
loop
and
dec
daa
mov
xchg
je
pop
ja
pop
loop
xor
add
insb
cld
fidivrs
mov
aas
cmpsb
pop
xchg
scas
hlt
pop
fwait
pop
and
push
cli
outsl
roll
and
gs
or
out
popa
in
xchg
dec
adc
xchg
mov
mov
sub
sahf
pop
aaa
outsl
leave
nop
xchg
or
daa
jmp
shlb
ret
xchg
je
call
insl
add
mov
mov
adc
mov
imul
aad
push
testb
aam
bound
or
or
jnp
mov
out
lds
mov
icebp
mov
in
iret
fstl
jbe
or
lahf
cmp
mov
cs
sub
lock
les
cmpsb
mov
jmp
cmp
mov
repnz
loopne
ljmp
sub
es
push
test
flds
sbb
pop
dec
div
cmp
cld
sbb
mov
mov
repz
jnp
imul
cs
push
pop
fisubl
cmpsb
and
sahf
xchg
aad
inc
add
cwtl
out
cmp
mov
mov
xchg
mov
insl
out
cmpsl
pop
mov
inc
loopne
add
pop
xchg
pop
sarl
lcall
push
call
int3
mov
movsb
pusha
xchg
push
mov
sub
mov
sbb
pushf
mov
adc
das
sarb
paddb
mov
mov
jo
add
add
addr16
xor
dec
out
and
dec
repnz
test
and
inc
mov
adc
aaa
popf
outsl
bound
xor
pop
mov
mov
and
inc
adc
out
or
push
mov
movsb
icebp
std
mov
jg
jnp
mov
cmp
or
fmull
sbb
sbb
aam
movsb
ljmp
pop
lret
les
push
or
xchg
arpl
pop
pop
lods
mov
sahf
cmp
mov
cmp
dec
xor
gs
adc
mov
test
mov
cs
jle
or
dec
dec
mov
add
rcrl
dec
ficompl
mov
pop
lods
popf
inc
dec
push
in
mov
jle
imul
and
jbe
jl
popa
aaa
out
xchg
sub
or
and
dec
or
xor
loop
or
xor
cmp
xor
in
jp
std
push
mov
or
pop
cld
es
lret
test
fsubrp
cltd
fldcw
push
stos
testl
ret
pop
and
call
xchg
fimull
or
movsl
movsl
nop
push
int
mov
pop
xlat
das
jae
jge
xchg
push
or
push
xchg
lods
jmp
pop
sahf
movsl
pop
push
int
or
push
add
enter
jp
inc
orl
stos
push
xchg
dec
jge
imul
push
cmp
jbe
mov
cs
jne
jo
movsl
xchg
lcall
jecxz
pop
inc
loopne
je
mov
sub
mov
and
push
mov
fst
jno
cmpsl
scas
sub
mov
cmpsl
idivl
in
orb
loope
xchg
inc
jge
sub
les
cmp
xor
sub
mov
fs
xchg
push
xchg
pop
mov
or
jecxz
or
mov
dec
pop
xor
imul
sub
int3
out
cmp
and
outsb
inc
stos
cmp
adc
fadd
cli
and
xor
mov
sti
pop
insb
enter
lcall
and
loopne
sbb
cld
arpl
stos
pop
dec
mov
sbb
add
clc
add
mov
lret
enter
adc
repnz
mov
cmp
push
repnz
hlt
adc
arpl
and
adc
repz
pop
jns
mov
add
jo
sti
mov
es
cmpsb
push
in
mov
js
scas
mov
mov
sbb
adc
xor
jp
ljmp
dec
xor
cmp
sub
daa
lods
or
aad
cmp
shll
jne
fcomps
in
push
psubb
aaa
jp
out
leave
jno
jns
faddl
std
imul
imul
testl
in
sub
sub
sub
xchg
imul
cmp
es
jg
ss
jmp
or
mov
mov
stc
nop
outsl
imul
sbb
mov
fimull
lds
sub
es
out
jmp
inc
movsl
xor
mov
int
fdivrs
mov
icebp
imul
push
nop
stos
pop
cld
push
mov
lahf
cltd
clc
fucom
stc
movsl
or
outsl
in
leave
outsb
sub
push
pop
in
push
push
fdivl
pop
andl
mov
cmc
adc
mov
int3
pusha
sub
or
lods
inc
pop
loope
push
insl
jl
mov
fsubrl
xor
inc
fsubp
bound
push
out
or
adc
jp
sbb
fmulp
jns
dec
mov
ljmp
push
xor
mov
dec
popa
xchg
dec
and
subl
or
imul
xchg
cmpsl
popf
ficomps
push
dec
clc
dec
or
repnz
pop
and
add
jb
sub
fimuls
xor
inc
push
sub
daa
icebp
divl
mov
adc
pusha
cmpsl
repz
push
sub
sahf
adc
scas
push
push
jge
out
lock
leave
mov
mov
popa
pop
mov
cmp
fisttps
or
push
fidivl
fstpl
movsl
enter
pusha
negl
mov
mov
cmp
jnp
mov
test
adc
pop
sub
fdiv
mov
pop
adc
sub
inc
mov
dec
lods
inc
scas
sub
jo
or
in
stos
cs
lcall
popf
jbe
imul
rclb
out
pusha
test
call
inc
stos
mov
loop
fwait
sbb
xchg
cs
ja
imul
fistps
xlat
add
xor
push
notb
pop
pop
jns
cwtl
pop
imul
sbb
out
out
fwait
or
push
cmpsl
outsb
pushf
jb
adc
jl
rol
cmpsl
mov
push
mov
enter
xchg
add
icebp
icebp
nop
enter
imul
insb
sub
aam
xchg
fcmovnbe
push
mov
and
xchg
jns
ds
nop
idivl
cwtl
ds
ret
fcmovnu
test
lcall
sarb
jnp
inc
pushf
out
push
nop
adc
pop
mov
mov
add
dec
roll
out
jecxz
jl
cmp
testb
dec
int
cmpsb
clc
shlb
lahf
xchg
sbb
shrl
and
mov
and
jmp
fsts
in
dec
mov
jae
mov
loop
inc
jo
fcomp
xor
inc
leave
aaa
sub
pop
mov
pop
hlt
or
stc
rcl
outsb
jne
xor
pop
mov
fmulp
mov
gs
movsl
mov
insb
jmp
cmpsl
movsl
pushf
scas
imul
cmp
sub
jo
mov
rolb
pop
fwait
push
sarb
push
int
mov
shlb
and
jp
lcall
mov
std
ret
lea
xlat
out
loop
lcall
test
ret
cltd
cwtl
fstpt
xchg
jge
jbe
and
pop
mov
mov
out
das
sbb
and
out
adc
test
cmp
int3
xchg
orb
sub
repz
stos
mov
lea
mull
ja
and
sbb
mov
pop
fbstp
out
rcr
jge
cmpsl
jne
lods
test
mov
enter
adc
lcall
pop
inc
push
insl
push
sar
frstor
test
and
popa
scas
negb
xor
push
out
fcomi
jnp
mov
mov
xchg
cwtl
imul
and
sbb
nop
jne
pop
push
call
mov
mov
movsl
mov
negb
insl
out
arpl
sbb
aas
inc
jns
xchg
lods
or
add
shl
ficompl
outsb
jnp
jmp
fs
std
jo
or
shll
xor
jnp
js
add
ljmp
and
jmp
mov
cmp
add
adc
sub
push
adc
mov
frstor
inc
fbld
lods
in
mov
nop
cld
movd
add
sbb
flds
loopne
xor
dec
push
sbb
movsb
notb
or
pop
push
fildll
cmp
cmp
sub
aas
inc
mov
ret
pop
hlt
mov
sbb
imul
adc
mov
adc
out
scas
cli
cmpsl
cmp
nop
movsl
fnstcw
icebp
insl
xchg
fwait
icebp
movsb
jl
cmp
ret
stos
xchg
ret
inc
lret
fcoml
out
mov
cmp
add
or
sbbb
push
cs
sbbb
mov
xchg
cld
xor
dec
fldl
out
mov
in
inc
movsb
fstl
push
xor
or
repz
or
in
fmuls
icebp
jbe
mov
std
psadbw
into
add
leave
std
jecxz
mov
or
lcall
sbb
and
movsb
icebp
xchg
xchg
adc
rorl
cwtl
enter
pop
and
fwait
jle
or
adc
lea
mov
repz
inc
fwait
mov
push
ss
mov
lcall
repnz
add
arpl
rorb
inc
mov
scas
jl
stc
int3
imul
add
cs
insl
pop
insb
mov
and
jbe
or
cld
xor
ljmp
cmp
push
cmp
cmc
mov
inc
push
movsb
mov
out
add
or
dec
jg
out
add
inc
push
add
jb
xchg
xchg
mov
pop
push
add
jo
xor
imul
shr
jecxz
cltd
add
pop
arpl
stos
das
fdivl
imul
mov
jne
mov
vandnps
std
pusha
push
mov
xor
mov
in
push
movsl
shll
lcall
aad
sub
dec
repz
sub
adc
mov
ret
jl
test
add
jo
pop
jecxz
minps
mov
cmp
setl
adc
mov
add
mov
sub
or
mov
jns
cli
fisubrs
outsl
movb
stos
addr16
add
mov
loopne
jge
in
jo
jb
dec
hlt
inc
mov
mov
icebp
fcompl
sbb
add
inc
lret
out
sarb
mov
lcall
bound
dec
daa
xchg
jp
inc
jl
push
orb
insb
mov
pop
xor
push
mov
sahf
loopne
rorl
cmc
data16
psubsw
sub
mov
mov
mov
or
out
xchg
mov
mov
fiaddl
call
js
pop
inc
xor
pop
mov
inc
aad
pop
and
mov
subb
pop
and
out
insb
mov
imul
add
jne
jle
ljmp
mov
and
fnstsw
mov
mov
cld
not
lea
push
pop
mov
cmp
push
sti
inc
inc
ficoml
jns
jne
iret
adc
mov
cmp
cmc
popf
xor
adc
lret
js
push
inc
cmp
idivb
call
into
dec
mov
mov
adc
push
jmp
fwait
pop
movsb
ja
bound
sub
mov
xor
lahf
lret
dec
add
xchg
adc
clc
adcl
jecxz,pn
dec
fcmovnbe
mov
mov
adc
outsl
mov
fbld
sbb
dec
jp
repnz
aad
sbbb
shl
adc
cmc
in
cmp
sti
roll
add
nop
outsl
cmp
push
sub
adc
test
bound
inc
clc
sbbl
in
dec
das
or
scas
test
push
mov
and
cld
movsl
jae
push
outsl
leave
and
lock
push
clc
orl
sahf
scas
les
inc
lret
inc
jnp
cs
mov
jle
fdivl
daa
xchg
push
fcmovb
jecxz
push
fsubrl
adc
mov
sub
mul
jp
sbb
dec
stos
pop
cmc
jg
cli
in
push
jb
sub
bound
mov
push
dec
xor
mov
inc
sub
in
addr16
cltd
dec
fistpl
mov
or
