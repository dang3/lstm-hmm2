add
bound
aad
orl
dec
xchg
aad
dec
xchg
loope
mov
or
dec
repnz
cld
aaa
adc
and
push
es
ss
lock
out
fdivrl
cmp
jns
movsl
mov
popa
inc
mov
les
loope
dec
fstps
mov
inc
pop
rorb
cmp
dec
mov
ss
imul
ds
lret
scas
xchg
push
inc
scas
cwtl
inc
mov
sbb
cmp
xchg
shl
sbb
pop
mov
pop
add
cld
fcoms
sub
cmp
cmp
adc
push
cmp
into
jp
cmc
insb
out
outsl
sti
add
sahf
lcall
fsubs
ss
add
xchg
jbe
push
inc
mov
leave
aad
lret
xchg
fbld
imul
dec
jns
mov
fistpll
outsb
push
mov
dec
shufps
fdivs
ficompl
sub
xor
xor
mov
mov
out
push
or
jno
aas
rol
aas
xor
add
mov
xchg
popf
inc
aam
cmc
mov
rcr
mov
push
jo
ret
sarb
xchg
rorb
add
xchg
and
cmp
lods
sbb
pop
repnz
stos
repnz
test
mov
add
js
mov
call
sbb
mov
cmp
add
inc
and
adc
inc
mov
into
jne
xchg
xchg
xchg
mov
push
inc
push
lock
cs
enter
mov
dec
and
sbb
jg
xor
or
mov
lods
push
in
lret
mov
ret
shr
add
mov
roll
sti
popf
test
push
iret
cltd
cltd
add
lahf
push
xchg
aad
pop
pop
jp
in
shlb
cmc
in
or
adc
dec
cmp
jmp
or
scas
int3
mov
ljmp
xchg
and
lret
and
roll
pop
leave
cmp
test
out
sbb
push
adc
int
fcoms
loope
push
rcr
mov
mov
inc
ret
pop
roll
xchg
push
mov
xchg
shll
filds
outsl
out
pop
mov
lret
adc
int
dec
rcll
xchg
push
cmp
add
lods
mov
shrl
std
stc
or
ss
mov
inc
into
jb
sti
mov
cli
jge
inc
xor
scas
or
je
adc
cltd
loope
and
lcall
in
dec
fstpt
aas
adc
lds
mov
ret
fs
mov
loopne
xlat
xchg
jmp
dec
push
sahf
add
mov
out
xchg
dec
mov
ret
mov
mov
pop
or
cmp
mov
andl
mov
dec
jb
ja
and
pop
int3
xor
dec
dec
stos
repz
test
insb
out
cmpl
inc
test
xor
mov
mov
mov
cld
or
xchg
add
push
outsb
mov
rol
xor
mov
test
mov
add
mov
xor
push
jb
push
ja
insl
jg
push
jp
sbb
dec
or
jecxz
inc
mov
lods
mov
lea
inc
lea
or
mov
call
push
mov
xchg
cwtl
xchg
call
mov
pop
jl
mov
shlb
out
loopne
in
mov
icebp
and
push
mov
addb
cs
jmp
add
scas
cld
pop
shr
outsb
je
icebp
pusha
mov
inc
adc
lds
fcompp
insl
sbb
pop
pop
out
rorl
cmp
andl
cwtl
sub
fstl
rcll
mov
mov
incb
ds
inc
cltd
pop
insb
test
lock
ljmp
popf
sub
sub
stos
mov
popf
push
ss
or
das
imul
add
dec
or
push
sbb
cmp
test
dec
dec
mov
mov
xchg
xor
inc
inc
mov
push
sub
fistpll
xor
test
iret
add
pop
iret
fisubl
or
cltd
mov
sahf
mov
mov
outsb
pop
test
sti
stos
sbb
and
call
sti
dec
dec
cmp
imul
int
mov
jmp
sub
jecxz
sahf
or
das
push
cmp
iret
push
pop
es
pop
cmp
xchg
or
roll
dec
int
lds
push
pop
sahf
ret
mov
leave
add
nop
cmp
xor
push
jge
pop
pop
pop
fcompl
or
sbb
sbb
pop
pop
sub
aaa
xchg
sub
xchg
adc
mov
pop
mov
mov
in
jge
cmp
or
or
cmpsl
cmp
or
inc
loop
std
popf
cmp
xlat
insl
dec
movsb
push
rol
inc
pop
inc
or
shl
shrl
stc
mov
int3
pop
mov
leave
add
leave
jle
inc
fidivs
jl
xor
inc
sub
test
jns
lods
out
xchg
mov
fsubrs
iret
fsubrl
inc
or
mov
aam
cwtl
push
xchg
dec
lcall
xchg
xor
cs
sarb
jnp
scas
pop
add
and
sub
cmp
mov
shlb
ret
hlt
testl
scas
icebp
ja
test
sbb
mov
into
jge
cmp
ja
je
cmpl
and
pusha
inc
mov
into
xor
pop
das
dec
sbb
cmp
pop
push
and
int3
into
inc
cmp
cmp
inc
shrl
dec
aas
pop
test
adc
dec
pop
cmpsb
ds
add
or
dec
sub
jle
sbb
fistpll
insl
sub
fcoml
test
fdivr
lret
xlat
sbb
mov
xor
movsl
pushf
cmp
mov
stos
mov
push
into
cmc
xchg
frstor
pop
jb
mov
daa
pop
iret
cmc
popa
ja
ljmp
xlat
inc
add
mov
lret
or
sub
pop
aaa
sub
jp
sahf
std
dec
fadds
enter
mov
adc
outsb
inc
in
loop
adc
add
mov
jle
push
jno
sub
ret
jge
testb
dec
addr16
popa
jne
arpl
cmc
iret
aam
mov
lcall
jne
jnp
push
sbbl
outsb
inc
pop
pop
outsl
sbb
cmpsl
aaa
jecxz
mov
nop
popf
push
lods
in
lea
out
jg
xchg
enter
sub
fchs
add
aam
pop
sahf
les
jns
int
mov
fisttpll
jg
xor
inc
dec
mov
aaa
fwait
ds
in
std
dec
xchg
mov
xor
mov
fildll
lea
push
sbb
stos
jns
and
stos
xchg
gs
push
xlat
xchg
bound
imul
or
les
pop
xor
jb
rorl
lcall
push
shl
xor
or
mov
insl
and
fldl
repz
pop
movsb
mov
dec
out
jbe
sahf
dec
mov
mov
fcomi
cmp
lret
push
jmp
js
or
pop
rol
icebp
mov
jecxz
push
sub
and
mov
dec
pop
int3
xchg
xor
subb
pop
std
loope
into
cmp
rolb
shr
push
jmp
dec
in
int
fidivl
xor
sti
push
in
lret
fisubl
lods
sub
ljmp
out
add
mov
mov
add
adc
push
lea
xor
mov
icebp
mov
pop
mov
movsl
mov
mov
int
sbb
inc
mov
andl
dec
adc
xlat
arpl
iret
sub
fldcw
leave
xor
add
cmc
iret
es
add
add
in
sub
inc
xor
jg
mov
std
dec
cmp
int3
sub
ljmp
lret
imul
add
vmread
test
or
hlt
js
mov
xchg
xor
call
pop
inc
xchg
loope
cmp
cli
mov
add
jecxz
inc
push
or
add
and
nop
dec
jnp
data16
lock
jne
inc
pop
xchg
negb
std
xor
popa
push
adc
jg
insl
xchg
in
sti
adc
adc
aaa
insl
ret
add
mov
mov
sbb
pop
push
nop
lods
xor
rclb
xchg
rcll
ds
lahf
cmp
mov
das
mov
negl
arpl
sub
js
fwait
cmp
jl
fidivl
lret
ffreep
sub
add
xchg
cli
xchg
lds
test
jne
xchg
xor
sbb
inc
mov
shll
pop
adc
cmpsb
sysexit
test
sub
mov
gs
push
mov
pop
in
push
fbld
int
dec
mov
int3
fwait
lds
push
mov
shrl
xchg
inc
outsb
shlb
jl
fdiv
jle
loop
sbb
loopne
hlt
xor
jmp
jbe
jnp
push
das
sub
fdivl
lock
ret
cmpb
sar
push
out
xchg
lods
pop
inc
sub
nop
and
add
ss
pop
je
insb
mov
ret
test
test
ret
xor
pop
enter
cmpsb
xor
push
addr16
sub
scas
push
mov
mov
into
outsb
loop
jnp
std
fwait
sbb
cmp
cltd
dec
dec
or
dec
ret
out
lods
sbb
xchg
push
xchg
push
pop
adc
into
and
rorb
sub
sub
cld
mov
dec
mov
clc
push
fadd
mov
push
rol
cmp
mov
ds
cltd
jg
aas
jno
mov
dec
or
adc
push
or
sub
and
and
inc
stos
mov
test
or
insb
insb
std
add
mov
stos
lods
xchg
xchg
insl
fs
rep
iret
adc
add
stc
test
mov
mov
and
lods
adc
fcomi
int
cmp
jnp
je
popa
mov
popf
jne
mov
dec
mov
adc
pop
pop
or
mov
xchg
jmp
mov
inc
aam
mov
ds
popf
fisttpl
rclb
leave
mov
bswap
insl
xchg
shr
fmuls
data16
xor
adc
iretw
mov
pop
test
and
mov
jo
into
mov
inc
outsl
push
cmp
leave
insl
ljmp
and
jge
mov
or
ret
and
adc
and
cltd
mov
int3
inc
xchg
dec
mov
sub
pop
hlt
shll
dec
xor
push
push
push
cmp
shlb
jl
fdivr
negl
mov
inc
add
imul
adc
sub
repz
or
jnp
xchg
mov
mov
sub
xor
adcl
or
mov
aaa
xor
iret
lods
pusha
inc
jns
fs
and
xor
xor
daa
outsb
push
mov
push
adc
mov
lods
inc
cld
push
dec
in
push
jp
adc
cmp
fcomp
xchg
lods
and
ret
ret
xchg
dec
mov
jbe
repz
cmp
xchg
cmpsb
fsub
sbb
push
fcoms
fadds
loop
popa
or
lds
daa
cmp
int
dec
xor
shrl
imul
daa
dec
sub
dec
movsl
sub
shll
mov
aam
sbb
sbb
mov
add
jl
mov
sbb
mov
push
xchg
sbbl
push
mov
out
pop
pop
out
lock
inc
movsb
mov
sarb
stos
adc
rorb
fisubs
cmp
enter
lods
xorb
out
jge
call
mov
shr
fsubs
lods
mov
das
scas
and
mov
in
pop
shll
fs
jge
push
mov
movntq
jle
lcall
and
push
out
shll
lahf
shll
mov
shlb
push
adc
jmp
leave
movsl
adc
pop
adc
sbb
es
mov
cmp
xor
dec
sub
leave
lds
mov
rorl
cmp
jg
jno
mov
xor
inc
cmp
dec
cmp
or
into
ret
inc
pop
iret
mov
jg
fisttpll
pushl
out
xor
data16
xlat
aam
out
sbb
shll
popf
and
jns
xchg
je
in
adc
or
jb
scas
cmp
insb
outsl
push
ret
shll
adc
pop
add
mov
cmp
sub
in
aad
mov
add
pop
push
jecxz
imul
jg
test
and
nop
stc
push
adc
mov
pop
loopne
das
jbe
pushf
icebp
dec
jle
imul
xchg
incb
fisttps
jle
movsb
inc
mov
cld
jns
jne,pn
inc
shlb
bound
out
and
lret
in
cmp
repz
sbb
xlat
icebp
xlat
and
shrb
xchg
xlat
int
aas
das
fidivrl
in
subl
dec
mov
xorl
jle
out
inc
repz
inc
adc
repnz
data16
mov
mov
repz
ss
add
in
test
clc
pop
paddw
mov
shlb
inc
fdivl
addl
imulb
das
out
test
pop
adc
pop
ret
mov
push
jle
popa
push
pusha
dec
ss
nop
mov
sbb
mov
mov
mov
sbbb
jle
ds
xchg
xlat
jge
push
rcl
testl
lods
test
or
ja
xchg
sbb
jmp
out
cmp
dec
jl
xor
pop
mov
push
push
pop
decl
rcrb
mov
fstps
jg
clc
and
aam
lret
or
ljmp
cltd
out
push
fst
jne
ja
push
push
daa
cltd
cmp
call
out
shlb
pop
rcrl
das
inc
push
pop
pushf
mull
dec
mov
mov
inc
pusha
in
or
pop
add
push
inc
lret
imul
repz
mov
and
mov
push
and
mov
cmc
lods
xchg
inc
add
mov
push
inc
pop
mov
enter
scas
adc
lea
outsl
jae
push
leave
scas
imul
pop
fbld
out
fcomip
ret
xchg
or
sub
aam
or
andl
cmc
dec
jo
push
push
rol
scas
jecxz
xchg
and
cwtl
mov
int
sbb
notl
or
imul
jae
lock
fucomp
add
iret
mov
mov
and
jns
jo
sarl
dec
inc
and
shrb
dec
div
sahf
imul
and
fnstsw
aam
adc
mov
pop
xor
insb
push
ret
rcll
inc
xor
movsl
inc
add
inc
faddp
adc
ffree
rcll
push
lods
jno
push
cltd
inc
xor
adc
push
cmp
stos
dec
mov
in
cmp
mov
adc
pop
js
out
imul
mov
sub
sti
mov
jl
cmpsb
lods
movsb
xor
push
in
out
pop
dec
shll
push
sbb
pusha
pop
adc
jge
push
orl
pop
shlb
dec
ret
fisubrl
mov
pop
lods
std
insl
lret
out
imul
push
or
jmpw
cmp
xchg
int3
into
insl
dec
jl
and
cmp
popf
inc
pmaxub
sbbl
cmp
pusha
and
pop
std
pop
ret
xchg
fs
jo
leave
fidivs
inc
sbb
sbb
hlt
cmpsl
pop
shl
daa
dec
cmp
loope
adc
lods
fs
loope
push
daa
sub
stc
pop
enter
and
loopne
sub
xchg
pop
lea
scas
push
cli
push
sub
xchg
lock
pop
cmp
jae
adc
ja
pop
or
js
sar
cmp
or
mov
lock
pop
ja
pop
fcomps
xor
jo
add
add
std
outsl
mov
leave
sub
rep
std
xchg
outsl
lods
pop
out
sbb
icebp
jmp
shlb
fs
jne
ljmp
test
push
imul
lret
add
into
pop
int
push
cltd
push
cwtl
loop
pop
pop
lcall
enter
xor
add
xor
fsubl
push
pusha
jge
sub
mov
inc
rolb
stos
and
mov
adc
xor
xchg
cmp
mov
add
pop
mov
inc
in
or
out
mov
fprem1
jne
jae
stos
mov
pop
rorb
fld
lcall
ret
or
xor
data16
push
jne
icebp
jp
fcmovnu
les
std
aad
or
mov
ret
push
push
daa
mov
int
inc
push
shll
fstl
jge
sbb
ja
inc
mov
fisubl
mov
dec
push
fisttpl
movsb
xlat
and
sarb
out
ret
ljmp
jne
add
ja
das
xor
in
testl
and
lret
dec
jg
mov
cmp
movsb
leave
push
dec
xchg
es
insb
dec
sub
loopne
jmp
loop
sub
mov
push
xchg
add
sub
or
add
inc
xchg
roll
add
outsb
fmull
movsb
inc
iret
roll
ds
sub
shlb
mov
inc
sar
adc
jecxz
mov
or
lcall
shrl
arpl
mov
push
stc
insl
or
push
aaa
inc
fdivrs
into
mov
inc
test
push
insl
mov
sahf
leave
insl
xchg
cmpl
in
mov
lea
cld
xor
jle
cmp
leave
aad
jp
mov
cli
aas
into
insl
push
test
sub
mov
or
rorl
and
fstpl
insb
in
inc
push
dec
dec
jae
mov
mov
lock
sub
gs
xchg
movsl
dec
cs
xor
mov
sub
dec
icebp
push
or
mov
jo
mov
imul
mov
xchg
cmc
lret
outsb
testb
sub
aam
repz
and
jo
add
dec
pop
filds
ret
push
sarb
jns
nop
rcl
push
push
mov
idivb
ja
xchg
popa
in
xor
mov
in
xchg
xor
fdiv
ret
out
add
mov
sbb
dec
mov
or
leave
cmp
outsl
ds
mov
push
out
xchg
lea
out
mov
jg
ror
in
popa
cs
adc
or
pop
inc
leave
push
pop
cs
dec
fdivrs
mov
push
mov
movsb
insb
lahf
in
rcl
into
mov
sbb
mov
cld
inc
push
mov
sub
inc
mov
mov
fdivs
movsb
push
sub
out
pop
lret
ljmp
jns
scas
fstpl
pop
adc
inc
stos
fbld
and
and
adc
mov
sbb
repz
xor
mov
scas
push
or
or
sbb
cmc
cmp
xlat
mov
ljmp
das
sbb
adc
xchg
inc
mov
or
xor
mov
lret
cmp
sub
cli
inc
aad
adc
fiaddl
test
adc
or
ljmp
notb
xor
xchg
jne
xchg
ret
test
leave
mov
push
adc
test
cmpsl
mov
and
fmulp
dec
out
sbb
mov
mov
dec
enter
cmp
mov
mov
xchg
pop
pop
hlt
inc
jne
adc
fisttps
hlt
inc
mov
push
push
es
pushf
ja
int
ss
lock
pop
xor
or
jae
fstpt
rclb
jb
mov
cmpsl
dec
fidivrs
jecxz
mov
stos
ret
xor
sahf
int3
add
jb
xchg
cmpsb
jg
pop
mov
enter
cmpsb
ljmp
das
mov
out
dec
jmp
dec
dec
mov
lea
and
leave
repnz
mov
sahf
in
outsl
outsb
jmp
dec
sub
xchg
loope
jmp
sbb
loope
push
pop
loopne
jge
and
fcmovb
xchg
dec
pop
sub
js
push
sbb
jmp
test
in
pop
lock
fwait
push
cmp
mov
fimuls
or
jl
dec
cmp
insl
fisubs
insb
fmull
fstl
sbb
inc
mov
push
sbb
push
loopne
pop
out
pop
fs
pop
inc
movsb
mov
mov
or
vmovntps
int3
loope
adc
mov
push
mov
mov
fiaddl
fistl
lds
lea
pop
xchg
push
lods
sti
loop
stos
push
jo
dec
pop
ds
in
std
outsl
mov
lahf
jns
cmpsb
jmp
sub
inc
xchg
sub
lds
sub
add
in
in
jecxz
out
mov
rorb
shl
or
jns
cmp
xchg
ss
push
ret
rcll
rcll
sbb
add
sahf
dec
es
cmp
je
and
pop
push
pop
sub
ljmp
inc
inc
ret
jo
std
push
stos
pop
dec
fisttps
ds
int
aas
shr
rcll
dec
sahf
xor
fwait
mov
mov
or
pop
movsb
jl
lock
mov
aam
fistl
cmc
shl
out
adc
rcr
or
lock
ljmp
das
xor
setae
lret
mov
ficomps
mulb
jnp
inc
ret
mov
fstpt
mov
mov
or
ja
popf
dec
lret
insl
test
dec
sbb
and
in
sub
mov
jbe
mov
adc
mov
popa
jne
xchg
rcr
mov
sar
inc
popl
sahf
in
mov
lea
dec
sbb
pushf
shrb
xor
or
int
call
clc
loopne
test
jecxz
cmp
jbe
test
push
shlb
scas
sub
daa
dec
movsl
push
sbb
xchg
jb
iret
xlat
and
xor
pop
dec
ret
cmp
mov
fcmovbe
mov
jmp
jle
rcll
inc
cltd
adc
mov
push
outsl
subl
nop
and
push
add
stos
mov
aas
dec
inc
xor
dec
adc
xchg
enter
pop
movsl
out
pop
jo,pn
sbb
xchg
xchg
out
fnstsw
jl
mov
fucomp
push
sub
mov
mov
sbb
adc
pop
push
xor
or
xchg
insb
mov
mov
cmp
fldl
dec
pop
fst
ret
and
mov
out
int
out
stc
jbe
sbb
cmp
cltd
inc
dec
mov
jp
sbb
cmp
notl
sbb
xchg
cld
ja
rol
repz
sub
lcall
outsb
testb
pop
xchg
out
and
add
xor
ljmp
insb
or
jg
cli
in
aam
lea
push
in
and
cmp
cli
pop
mov
insl
dec
jne
es
lret
push
mov
sbb
mov
inc
test
ret
cmpsb
test
sbb
xchg
fmulp
xchg
mov
push
sub
imull
leave
pop
pop
dec
dec
xchg
repz
xor
movsl
stos
adc
ret
xchg
or
xchg
sub
and
lock
enter
jp
orl
in
or
enter
movsl
out
fstl
pop
test
lar
dec
cmpb
jae
mov
pop
jne
mov
xchg
loop
or
jne
mov
sbb
mov
xor
ret
js
pop
mov
jmp
mov
add
mov
jle
mov
inc
sbb
xor
sub
inc
ss
dec
jns
gs
dec
mov
cmp
jge
xchg
add
xchg
adcl
jmp
add
mov
mov
imul
push
iret
cwtl
mov
push
int3
rcrb
xchg
cmp
in
das
mov
or
xor
push
jmp
inc
xor
dec
adc
xlat
in
sub
pop
ret
nop
xor
pop
lods
xchg
les
sarl
gs
mov
leave
ljmp
rorb
dec
cmp
sub
xchg
or
add
out
cmp
adc
push
leave
cmp
in
in
hlt
mov
or
pop
imul
lret
jle
jmp
test
cmp
push
test
pop
mov
jecxz
pusha
push
pop
mov
ss
sbb
cmp
cmpsl
ljmp
shl
cmp
mov
adc
sahf
dec
inc
shlb
xchg
xchg
xor
repz
push
jns
mov
inc
push
cli
ficomps
mov
add
sbb
mov
outsl
pop
sub
mov
xorb
in
repnz
int
and
aaa
lret
mov
in
lahf
jnp
xchg
sub
cmp
loopne
clc
ds
mov
fs
pusha
das
aam
add
mov
notb
js
aaa
push
xor
fnsave
es
dec
orb
pop
push
int3
mov
sub
int
int
rcll
imul
aam
int
sub
mov
nop
decl
cmpsl
push
inc
imul
xor
iret
sbb
aad
add
sbb
xor
lods
xor
adc
xchg
push
jmp
mov
outsl
btr
or
xchg
aad
enter
push
sub
adc
mov
xchg
insl
pop
jae
ds
cmp
movsb
lods
adc
fimuls
rorb
fwait
int3
addr16
cmp
mov
rorl
jp
pop
js
ja
scas
pop
lds
push
lret
loope
popa
xlat
js
xor
cs
int3
xor
rorl
add
pop
imul
mov
push
mov
ret
roll
mov
sub
dec
mov
bound
inc
push
lcall
xor
inc
push
mov
push
xchg
push
sub
shl
push
les
out
sbb
aad
rclb
rcl
aaa
and
xchg
and
std
xlat
dec
popf
or
jno
cmp
icebp
lahf
cs
inc
movsl
pop
loop
sub
loopne
hlt
xor
ds
movsb
lds
cmp
lahf
dec
decl
dec
dec
ficoms
mov
les
or
into
out
xchg
and
pop
outsb
jns
push
test
mov
lret
jno
loope
les
push
out
or
cmp
mov
insl
fstpt
cmp
or
lods
xchg
push
mov
ljmp
movsb
in
or
not
jge
addr16
testl
inc
mov
cld
sbb
rcll
and
push
or
out
push
dec
jl
jnp
xchg
fdivrp
adc
mov
inc
or
jo
lret
inc
movsb
icebp
les
mov
hlt
push
shrb
jecxz
stos
cld
inc
xchg
xor
mov
cmp
xchg
and
sub
ss
cs
fadd
aaa
and
aas
lds
pushf
add
mov
or
scas
inc
loopne
sahf
fidivrs
dec
xor
fwait
push
test
pop
js
out
fistpl
inc
dec
ljmp
je
jmp
jg
and
xor
add
or
ja
mov
sbb
mov
das
insl
mov
or
arpl
insl
jno
jne
inc
fsubrl
js
push
iret
xchg
add
sub
cwtl
xor
roll
inc
ficoml
iret
jl
sbb
and
je
pop
pop
xchg
or
fwait
jo
dec
mov
mov
sbb
and
sub
data16
ret
mov
mov
and
cs
sub
loop
movsl
dec
rcll
ret
adc
call
ds
sar
icebp
jb
cmp
or
jp
insl
xchg
xchg
mov
aad
adc
lock
mov
imul
sbb
and
cmp
jb
aad
lods
inc
leave
mov
cmp
js
xchg
test
dec
xlat
mov
or
sub
cld
jl
stos
daa
aad
out
daa
inc
or
sbb
inc
mov
xor
pop
out
pop
inc
lods
mov
cwtl
leave
push
xor
mov
hlt
mov
test
dec
add
sub
pushf
repnz
add
scas
sbb
das
add
cwtl
icebp
push
hlt
cmp
cmp
xchg
arpl
cmpsb
add
into
mov
clc
hlt
ret
rcll
sahf
pop
mov
lods
aad
call
fadds
je
mov
faddl
ret
lret
xchg
and
notb
sarb
inc
jmp
mov
push
add
aas
dec
or
int3
out
sti
jge
adcb
or
xchg
cmpsl
fsts
sbb
sub
cltd
sar
ja
pusha
leave
cmp
fcmovnu
xor
int
imul
int
cmp
xchg
push
out
jbe
shrb
jl
mov
xchg
les
je
or
mov
arpl
mov
dec
mov
add
or
mov
mov
lret
cmpsb
sahf
mov
sub
js
sbb
ffreep
outsl
ror
mov
push
pop
push
xlat
int3
inc
dec
xchg
adc
lds
aaa
push
aad
into
pop
leave
mov
xor
arpl
or
out
pop
dec
xor
ret
adcl
test
sti
xchg
dec
mov
ficompl
into
xor
xchg
dec
aam
ja
adc
stos
and
lcall
pop
in
loope
arpl
iret
shr
outsb
sub
call
xor
pop
mov
and
rorb
xor
mov
cmp
out
rcr
popf
or
dec
cwtl
sub
test
sbb
repz
mov
rcl
dec
fidivs
or
xlat
arpl
jnp
mov
sbb
mul
mov
mov
xchg
pop
das
fmull
and
scas
aad
out
ffreep
iret
mov
icebp
pop
lcall
nop
cld
lock
movsl
xor
pop
inc
out
ret
fisubrl
xchg
fmul
je
sub
mov
loop
or
push
gs
repz
inc
sub
packssdw
pushl
fisubrl
insl
push
aas
mov
test
pop
shlb
out
mov
in
nop
rcl
rclb
xchg
das
imul
sbb
movsl
mov
cmc
outsb
fldt
jecxz
inc
pop
xor
loopne
rcrl
push
rcll
out
push
inc
icebp
xor
inc
call
and
clc
sarl
mov
sub
cmp
pusha
sbb
and
sar
cld
hlt
mov
lcall
inc
mov
fistpll
or
inc
push
ljmp
subl
push
daa
jge
scas
mov
sbb
xor
repnz
xchg
sub
sub
pop
out
shlb
add
in
and
lods
xor
xorb
and
lds
ficomps
push
xchg
push
fildl
push
push
pop
dec
out
push
iret
adc
subl
pop
imul
movntq
mov
lret
and
nop
dec
daa
imul
cwtl
jge
jle
adc
andb
jmp
adcb
ja
fnstsw
mov
int
inc
xchg
mov
push
imul
lret
cltd
add
arpl
sub
xor
mull
mov
jecxz
scas
adc
ret
lods
lret
shlb
cmc
shl
add
in
adcl
push
int
push
dec
stos
inc
ficompl
loop
fwait
pop
fiadds
xchg
lock
mov
out
mov
fwait
test
inc
and
ljmp
lods
movsb
jb
ret
sbb
movsl
inc
lods
xor
adc
ret
mov
out
test
dec
mov
pop
cmp
lds
inc
add
pop
push
inc
and
adc
cmpsl
loope
push
imul
mov
dec
fs
adc
popa
int
lret
test
test
pop
xchg
out
scas
fistps
push
mov
pop
and
inc
call
std
aad
sbb
sbbb
xor
dec
fcomps
mov
xor
mov
push
jp
mov
sar
xor
xor
repz
mov
add
and
and
mov
nop
pop
in
bound
mov
popa
rolb
push
rorb
inc
lret
or
jbe
aam
paddb
cmc
add
sub
popa
lds
sbb
lret
push
adc
push
mov
xchg
push
jno
inc
mov
sub
daa
and
mov
mov
arpl
push
out
mov
je
imul
adc
sbb
push
sub
lahf
jno
cltd
dec
pop
xor
lret
push
ds
add
cmpsl
gs
xchg
mov
mov
cli
out
inc
xchg
ror
scas
jae
cmpsb
mov
ja
jmp
xchg
jns,pt
scas
mov
js
mov
add
mov
test
repnz
mov
mov
jp
mul
sub
sbb
or
in
adc
mov
orl
sahf
in
adc
cmpsb
xor
jae
cli
push
sub
jnp
stos
mov
xchg
in
dec
push
pop
mov
inc
add
cmp
into
loop
adc
movsl
add
rcll
ret
incl
pop
xchg
cli
xchg
cli
push
scas
mov
push
lret
cmpsl
cwtl
dec
leave
adc
scas
loop
jmp
sbb
cmp
test
movsb
pop
or
arpl
imul
rorl
inc
imul
xor
dec
adc
sbb
dec
int
pop
out
xchg
shll
jmp
mov
out
ja
jge
negb
jp
insl
cmp
push
xchg
jae,pn
rcrl
test
sub
adc
sub
mov
aam
ret
or
rol
dec
out
jae
lock
xor
mov
cmp
aas
mov
fldenv
sub
dec
dec
dec
pop
xchg
dec
sub
ffree
mov
push
mov
xlat
mov
xlat
push
and
rcll
xchg
sub
gs
int
xor
mov
test
loopne
cmp
adc
adc
cmp
mov
pop
int3
dec
inc
lahf
mov
cltd
inc
xor
lret
sbb
repz
rcrl
lea
fwait
jb
shll
mov
push
pushf
xchg
les
fcmovnu
sarl
leave
add
das
nop
pop
repz
sub
dec
sbb
add
sbb
pop
sbb
push
lret
aad
cmp
push
add
stos
push
mov
stos
mov
sarl
shrb
jo
cmp
fists
xor
enter
pop
in
xor
icebp
xor
ret
jns
fldenv
add
sahf
data16
sbb
xchg
pop
inc
scas
jae
test
repnz
popa
movsb
clc
mov
jge
push
cmp
pop
lret
bound
inc
int3
je
out
ror
dec
sarl
xchg
iret
add
cmc
test
shl
inc
jno
push
pop
mov
push
add
dec
int
in
divb
mov
sbbl
arpl
pop
das
insb
int
lods
xor
pop
rcll
test
jae
xor
aas
sub
or
pushf
out
push
mov
ja
repnz
rcrb
push
into
mov
rclb
in
dec
cmp
fisubrs
cmpb
jmp
sbb
dec
pop
subb
xchg
push
cwtl
lock
and
int
test
fsubrs
push
xlat
ret
adc
rcll
imul
pop
punpckhbw
in
int3
xor
cwtl
cmp
pop
sub
xor
cmpsl
dec
push
aaa
push
cli
popf
out
inc
mov
dec
scas
aaa
add
inc
push
rolb
push
push
jns
mov
pop
rcrl
cmp
lods
inc
cmp
out
sbb
xchg
scas
push
popa
lahf
test
push
adc
xor
iret
decb
fmull
lea
sbb
xchg
xchg
gs
push
cmovb
add
or
rcrl
sub
pushl
mull
loop
out
and
leave
dec
daa
shl
loopne
pop
dec
push
fldenv
mov
ficompl
sub
inc
les
xor
add
popf
fxch
andl
jae
iret
iret
pop
jnp
xor
xchg
ss
sub
cmc
mov
imul
gs
cltd
loop
jbe
dec
pop
int
mov
fmul
inc
cmp
int
mov
add
xchg
lds
mov
sbb
data16
flds
pusha
pop
ret
imul
push
lds
or
test
sub
sbb
fnstsw
leave
in
subl
test
clc
movsb
dec
out
add
fnstenv
lea
iret
push
andl
push
dec
pop
pop
push
arpl
pop
in
lcall
pop
xorb
lds
adc
ljmp
mov
xlat
push
ret
lret
inc
cmp
xor
leave
outsb
mov
mov
jnp
push
mov
cltd
cmp
adc
or
dec
int3
inc
enter
lret
sub
rorb
push
enter
into
les
lcall
add
incl
mov
ret
mov
outsb
pop
sub
fnstenv
movsl
adc
mov
and
scas
in
enter
leave
lret
mov
pop
xchg
push
jo
movb
xor
dec
out
data16
sbb
jne
ror
push
dec
fbstp
inc
filds
cmc
out
add
and
lcall
xor
ret
ret
jo
dec
cmc
jg
lcall
mov
sub
xor
jmp
adc
mov
xor
decb
fistps
repz
push
out
inc
cwtl
fstpt
adcl
cmp
and
mov
push
inc
xchg
fmul
lcall
pushf
or
jg
ljmp
aam
pop
bswap
imul
mov
push
mov
push
mov
jns
cmpsb
jge
mov
rclb
jmp
xchg
fsts
inc
popl
and
out
lret
dec
fisubrl
shll
sub
outsb
pop
pop
cwtl
mov
or
out
outsb
jb
out
pop
xchg
adc
enter
fdivs
adc
dec
arpl
lods
dec
inc
cmp
js
cmp
cmp
cmpsl
lods
test
mov
scas
mov
mov
add
mov
xor
or
sahf
sub
iret
aaa
das
xor
dec
movsb
dec
add
cmp
loopne
daa
out
out
addb
dec
sub
repnz
mov
mov
fsubs
push
sbb
or
outsl
fidivrs
out
ss
cmp
dec
testl
scas
sub
fisttpll
and
fcom
mov
popf
jnp
rolb
divl
fnstcw
cmp
fdivs
mov
sub
aam
pop
inc
lret
push
in
leave
jmp
pop
mov
data16
sbb
cmp
imul
stos
lcall
inc
mov
imul
pop
inc
push
add
and
pmullw
jmp
movsb
imul
mov
xlat
mov
xlat
and
in
inc
jp
insb
push
ret
shll
jb
add
cli
jge
or
movsl
arpl
xor
out
notb
jmp
cmp
bound
xchg
or
jg
sbb
in
fisttps
aaa
xchg
aaa
dec
fmulp
aaa
cmp
fidivrl
mov
jno
aad
repz
rol
inc
dec
outsb
xchg
notl
cmp
pop
ja
mov
enter
push
or
mov
repz
dec
lds
movsl
jp
xor
cltd
xor
rorl
popf
adc
xchg
adc
daa
ret
or
cmp
jl
cld
pop
push
push
dec
jno
sub
in
lods
jo
ret
divps
cmpsb
pop
hlt
cmp
negb
mov
push
movsb
jno
adc
inc
mov
cmp
repz
rol
sub
mov
push
mov
flds
ljmp
inc
mov
out
enter
gs
xlat
sub
mov
mov
mov
xchg
insb
outsb
adc
imulb
cmpsb
mov
loope
cmpsl
repz
or
popa
std
lds
sarl
mov
adc
mov
push
lcall
sub
inc
movsl
cmp
enter
mov
test
mov
xor
inc
xor
xlat
add
sub
sub
outsb
sub
imul
inc
pop
insb
cmpps
push
mov
shlb
xor
push
jg
popa
jp
mov
cmp
add
fsubl
cmp
insl
in
pop
fwait
jb
test
je
sbb
icebp
mov
jno
ja
adc
mov
lock
orb
mov
xchg
insb
mov
les
cmpb
nopl
xorl
lret
sub
in
loop
rolb
subb
aas
xorl
call
rcll
sub
outsl
jno
inc
stc
xchg
xor
sbb
in
and
es
dec
out
or
mov
push
scas
cwtl
jne
or
add
jne
sbb
rolb
mov
and
pop
push
or
test
lds
test
push
shl
jmp
push
xor
mov
dec
aam
add
xor
cmovle
rclb
dec
push
sub
adc
sub
xor
ret
dec
mov
pop
out
mov
mov
push
icebp
xor
xchg
pop
scas
or
test
mov
dec
js
in
jae
imul
fcmovb
jae
data16
jno
lret
imul
push
mov
xchg
xchg
inc
and
insb
fisttpll
pop
mov
ret
lahf
inc
aaa
pop
aas
dec
mov
rcrl
xchg
aad
es
pop
shll
mov
mov
shl
jle
cs
push
xorl
push
jae
aam
mov
inc
mov
out
rol
daa
les
hlt
add
movsl
insb
pop
xor
adc
aam
dec
lods
mov
cld
cli
mov
call
imulb
movsb
or
mov
cmpsl
sub
jg
mov
lods
repnz
popf
lret
xor
mov
sbbb
jge
cld
std
or
push
push
push
rorb
xor
xlat
cmp
or
data16
push
pushf
and
mov
mov
sbb
sub
ret
ret
sti
sub
test
pop
mov
jbe
inc
xchg
fidivrl
fcomip
cltd
jmp
xchg
push
jne
mov
pop
mov
push
jns
icebp
cmp
jge
add
xor
lds
xor
lcall
cmc
pop
and
mov
push
pop
fistps
mov
stc
and
mov
push
fidivl
adc
lock
mov
mov
je
pop
xchg
push
aaa
test
rorl
adc
jb
rorl
sarl
cmp
nop
lahf
jge
push
mov
icebp
in
std
add
xchg
jmp
ds
mov
xor
and
mov
push
popa
xor
pop
leave
subl
xor
dec
fisubl
pop
dec
add
xor
inc
mov
mov
int
dec
lods
push
xchg
mov
int
lret
ss
jne
inc
inc
add
jle
pop
cmp
ret
xor
push
push
add
les
lea
imul
add
insl
cmp
mov
sub
or
rcl
and
sti
add
ret
aas
cmp
xchg
cmp
xchg
push
and
cmpsl
rcll
ja
movsl
cltd
cmp
xor
xor
xchg
arpl
iret
sub
xor
xor
sarb
xchg
in
sub
inc
cmp
add
fisubl
lods
pop
out
dec
or
sarl
lret
pusha
dec
loope
sub
int
aad
mov
fisubrs
sub
mov
cltd
in
gs
je
mov
sarb
mov
mov
xor
pop
ret
jae
stos
shlb
test
or
pmullw
and
cmp
sbb
push
lea
mov
pop
out
inc
loopne
xor
inc
ljmp
popf
aad
test
fxch
mov
mov
xlat
cmp
sbb
mov
addr16
out
push
mov
mov
mov
aas
inc
push
sub
popf
aaa
or
pop
and
mov
fwait
cltd
xor
xchg
mov
cmpsl
sbb
add
sub
scas
cmp
cmp
cmp
fdivrl
lds
cwtl
inc
cltd
sbbb
jmp
rcrb
vandps
scas
pop
out
pop
xchg
cld
xor
xor
pop
int3
dec
pop
cmp
fistpl
hlt
repz
gs
lods
push
in
testb
imul
dec
pop
in
loopne
or
xor
lea
leave
jno
lods
mov
sbb
idivl
mov
icebp
lock
pop
pop
xchg
outsb
mov
repz
xchg
cs
push
cltd
xor
rdpmc
enter
ss
mov
inc
pop
pop
jl
push
ljmp
sbb
add
pop
or
test
xchg
int
inc
or
test
xchg
sahf
arpl
ret
fstl
push
jo
xor
mov
je
xor
scas
fists
xor
push
fists
xor
inc
fisttps
xor
dec
fisttps
stc
pop
cmp
rcll
int3
out
inc
aaa
dec
and
sbb
out
mov
adc
lds
aad
mov
inc
inc
adc
aad
mov
sub
lds
aad
movsl
in
idivb
js
loop
mov
loope
loopne
jge
jns
push
outsb
xchg
es
mov
xor
jnp
jo
sbb
mov
ret
pop
push
dec
shl
adc
or
stos
or
xchg
jns
sbb
or
aaa
btr
push
or
inc
and
inc
cld
arpl
inc
dec
add
sbb
call
inc
iret
push
dec
xor
push
xor
push
addr16
and
adc
stos
arpl
sti
sub
mov
pop
mov
add
arpl
jne
jle
lret
dec
inc
cmp
orl
popf
mov
fisubrs
rorl
sahf
pop
pop
rolb
sub
pop
daa
sbb
push
mov
sbb
mov
fiadds
jge
insb
outsb
and
xchg
aad
xchg
arpl
movsl
js
into
and
sbb
test
popa
cld
test
mov
pushf
push
pop
push
push
xor
inc
inc
int3
ja
lock
push
stc
mov
sub
mov
fs
ja
std
add
fistpll
ret
cs
sahf
jb
faddl
sbb
scas
leave
push
mov
stos
dec
orl
or
mov
adc
out
mov
fnstsw
cmp
jl
jbe
ret
int
mov
shll
stos
addr16
mov
push
mov
lds
pop
push
mov
jne
repnz
into
pop
lea
dec
in
pop
xchg
aaa
je
mov
ficoms
stos
imul
lret
cmc
push
jae
add
lret
jae
out
das
ret
xor
mov
sub
jl
lods
mov
aad
in
pushf
push
into
inc
inc
dec
into
inc
and
mov
dec
xchg
mov
shr
sarl
add
shll
cmpsl
ja
insl
imul
cmp
in
fistl
xor
jnp
lds
fcoms
dec
mov
and
scas
inc
push
push
cmpsb
or
mov
mov
loopne
fnsave
mov
and
dec
push
jmp
xchg
ja
daa
inc
ss
into
aam
inc
dec
out
ljmp
out
inc
aad
popf
adc
fmul
int3
shrl
pop
fnstcw
int
xchg
pop
test
jmp
cltd
jae
cli
out
xchg
xchg
mov
iret
sar
dec
lds
inc
scas
mov
or
fdiv
scas
xchg
cmpsl
or
scas
push
sbb
arpl
cmp
xchg
fldl
icebp
mov
pop
xor
cmpsl
inc
cmp
dec
and
sarb
mov
pop
ja
int3
mov
jecxz
push
pop
inc
loop
adc
mov
dec
iret
jl
hlt
mov
jbe
ljmp
roll
cmpb
add
loope
inc
pop
push
sbb
ljmp
mov
jmp
mov
cli
stos
in
cmc
outsl
imul
inc
inc
dec
int3
iret
mov
mov
sub
inc
push
out
stos
pusha
nop
inc
mov
lds
xor
shll
add
repz
fwait
cmp
sub
fcomi
pushf
cmp
lock
xchg
rsqrtps
sub
iret
cli
xlat
mov
shlb
adc
mov
lock
sub
cs
xor
iret
and
dec
sub
pop
fsubl
xor
sub
lea
add
adc
jge
in
jo
nop
jecxz
pop
call
sub
inc
push
pop
stos
enter
dec
jecxz
xor
lds
add
add
xchg
jge
mov
jle
dec
jl
inc
mov
and
pop
lcall
xor
les
sbb
incb
icebp
inc
lcall
xchg
movsb
ror
inc
xchg
xchg
popf
or
dec
dec
mov
xor
push
inc
adc
jecxz
movsb
sar
and
sbb
add
and
cmc
fcomp
fdivrs
ret
pop
mov
or
jmp
add
cmp
fidivrs
dec
adc
mov
ret
fisubrl
mov
loope
xchg
xor
xor
dec
fst
loop
mov
mov
push
mov
push
inc
icebp
dec
cmc
mov
lea
add
pop
push
add
fldl
dec
ror
std
mov
roll
in
fcmovnbe
in
aam
adc
inc
in
std
inc
aas
fwait
push
dec
ds
pushl
dec
mov
dec
jle
rcll
xor
push
bound
daa
adc
shl
out
lock
and
push
sub
xor
sahf
std
sub
xchg
subl
div
jo
sub
aam
sbb
shrb
mov
inc
test
cmp
add
int
lds
mov
cltd
dec
xchg
call
jne
cmp
dec
xor
mov
and
arpl
nop
fisttpl
leave
sbb
sub
cwtl
jg
dec
mov
dec
add
or
int3
sti
lods
xor
imul
int
out
mov
faddl
mov
cmpsl
xor
ljmp
pop
xchg
xor
xor
pop
cs
mov
sbb
push
cwtl
enter
or
into
pusha
mov
add
sarb
dec
inc
xor
imul
test
in
push
add
cmpsl
rorb
shll
addr16
xor
pushf
push
data16
adc
mov
packuswb
icebp
int
shrb
xchg
inc
jg
sub
outsl
cwtl
adc
jecxz
fistpll
mov
sub
mov
ret
lds
mov
cmp
mov
lock
and
pop
adc
inc
mov
stos
cmp
jno
push
int3
aas
ret
sbb
js
fwait
mov
xlat
popa
fbstp
inc
fwait
lods
je
sub
andl
push
cld
movsb
iret
cld
pop
add
jle
push
into
add
cltd
cmc
into
sub
loope
lea
mov
movsl
out
notb
loop
mov
rclb
add
dec
sub
inc
int3
sbb
das
push
ljmp
and
pop
inc
inc
jae
or
mov
fldenv
nop
popf
pushf
fucomip
push
xchg
and
pushf
int
aam
jmp
cmc
sbb
fsubrl
pop
and
loope
pop
mov
pop
mov
fistpl
adc
leave
fwait
jbe
xlat
jge
mov
dec
mov
mov
out
gs
or
pop
imul
ss
push
fwait
fwait
mov
out
in
shll
adc
inc
repnz
daa
insb
and
jmp
gs
xor
push
inc
fsubs
cmp
fsubrl
lods
es
outsb
cmp
jnp
sub
iret
dec
ds
pop
orl
shlw
bnd
inc
scas
mov
and
inc
cmp
cld
adc
cmp
out
ds
dec
jo
call
or
mov
int3
dec
lods
scas
roll
icebp
inc
mov
stos
movl
aaa
lea
xlat
dec
mov
sbb
pop
add
and
insl
in
xor
lret
iret
jle
xor
cltd
mov
lret
dec
ret
jb
mov
ds
cltd
sti
cmpsl
stc
scas
fnstenv
test
cs
dec
mov
fmul
cmp
cld
gs
lock
addr16
aaa
or
rclb
pop
ret
lock
imul
mov
add
or
icebp
int
popf
fisttps
icebp
mov
jg
test
pop
data16
dec
xchg
cmp
enter
cmp
mov
sbb
push
cld
mov
shrb
jle
lret
xchg
cmpsl
enter
mov
addr16
pusha
or
pop
inc
loopne
hlt
add
aam
cmp
pop
add
xchg
push
xchg
add
cmp
fidivs
in
adc
ret
bound
shrl
sbb
das
dec
ret
sahf
iret
sub
jmp
mov
push
dec
xchg
adc
cli
cmpsb
ljmp
mov
dec
dec
sbb
out
cmp
daa
jno
lcall
insl
neg
popa
xor
mov
lock
iret
movsl
jmp
cmp
and
dec
pop
sub
in
pop
daa
jo
mov
push
int
cs
fsubs
enter
jb
pop
ror
jno
mov
fs
aas
lret
scas
or
pop
pop
rcl
jl
cltd
mov
cmp
adc
or
jle
rcll
inc
pop
int
les
loop
lahf
ss
popl
pop
and
loop
cmp
xor
in
and
xor
xchg
dec
push
stos
or
dec
cmp
cmp
imul
outsb
js
sbb
xor
add
pop
mov
jg
loop
sub
or
add
mov
jne
rorb
xchg
jno
cmp
daa
in
dec
pop
add
cmp
cmp
repz
push
icebp
cmp
lods
mov
push
dec
out
ss
not
filds
repnz
int
or
fldl
dec
ljmp
iret
cmp
and
fiadds
xlat
nop
insb
fwait
imul
xor
jo
inc
add
fldt
or
pop
int3
mov
xor
xchg
pop
or
iret
adc
inc
in
stc
push
idivl
pop
xor
popa
addr16
xor
aaa
push
and
lahf
mov
mov
adc
stos
lcall
sub
fwait
jecxz
pop
push
mov
shlb
xlat
pop
mov
mov
lock
xchg
mov
gs
jo
inc
stc
dec
xchg
mov
aas
outsb
test
pushf
push
mov
lea
xlat
bnd
out
aad
aam
dec
cld
cmp
fildll
std
subl
leave
pop
fmul
mov
aad
enter
inc
xchg
xor
xor
mov
fsubl
out
dec
jp
cmpsl
mov
push
or
clc
cmp
and
push
or
xchg
out
repz
sbb
pop
mov
imul
gs
inc
ficoms
lahf
mov
fwait
mov
adc
mov
push
imul
rdtsc
sub
dec
aam
pop
push
xor
cmp
sbb
scas
insl
ret
pop
mov
lods
fsubrs
dec
push
add
leave
fs
jno
cmp
sub
pushl
or
frstor
testb
fists
sar
ljmp
jmp
xor
into
enter
xchg
xor
stc
iret
pop
cmp
in
es
into
dec
sbb
stc
fstpt
aam
pop
adc
aad
or
push
mov
sub
outsb
inc
xchg
jg
cwtl
aad
jnp
scas
push
lcall
pop
shr
icebp
es
mov
dec
cwtl
sub
mov
out
push
pop
sarb
fnstsw
cwtl
out
pop
dec
cld
test
add
out
add
jp
mov
pop
sti
arpl
arpl
jae
adc
js
stc
loope
daa
xadd
popf
ss
push
cltd
ret
mov
push
push
jo
sub
push
sarb
push
loop
int
mov
xchg
sub
inc
sub
fmull
rclb
mov
incl
add
out
add
std
inc
sub
cmpsb
ljmp
inc
dec
hlt
fbld
cmc
dec
rcll
adc
mov
mov
enter
xlat
push
mov
cwtl
dec
aam
pshufw
lcall
add
xchg
sub
xchg
mov
sbb
loope
popa
pop
sub
jns
dec
pop
lahf
fnstsw
sub
add
outsb
pop
sahf
adc
jnp
and
jno
cmp
add
rcll
and
push
lret
pop
arpl
and
pop
rcrl
xchg
add
push
inc
repz
int
and
negb
sub
adcl
cmp
and
push
iret
mov
jnp
lret
aad
lods
gs
call
mov
insl
into
les
aas
mov
ljmp
sub
mov
and
mov
jne
cli
in
scas
fcoms
or
add
sub
xchg
mov
ja
xchg
dec
in
inc
and
push
popf
int
add
mov
push
xlat
cmp
fidivl
mov
push
pop
aam
cmp
std
cmp
mov
xor
jae
sbb
inc
repz
cmp
imul
rcrb
mov
inc
lds
in
insl
insl
push
iret
xor
mov
adc
arpl
sarb
bnd
mov
inc
arpl
dec
push
dec
mov
icebp
sbb
loop
mov
lds
cmp
xor
das
iret
int
push
cmp
mov
mov
popa
out
jo
dec
or
aad
push
mov
cmp
mov
cltd
sub
iret
enter
insl
or
push
inc
into
mov
add
ljmp
add
popf
pop
push
aaa
jns
repz
int3
outsl
nop
dec
inc
jg
int
icebp
mov
jb
pop
in
adc
lods
xchg
insl
jns
pop
cmp
insl
stos
fldenv
in
push
and
or
stos
sbb
sub
inc
iret
xchg
push
mov
jno
xchg
mov
jo
sbb
stos
lret
sbb
aad
roll
lret
pop
fisttpll
push
lret
popa
mov
sbbl
inc
es
fidivl
gs
push
lods
mov
or
stos
leave
adc
mov
add
fisttps
adc
fists
adc
pushf
inc
mov
mov
xchg
mov
sbb
cld
rcrl
adc
mov
aad
cmp
sbb
jg
les
aaa
into
push
inc
popf
stos
repnz
into
in
out
outsb
ds
push
mov
dec
das
int3
adc
sar
push
jae
add
rol
cltd
enter
popf
mov
jbe
popf
fldl
dec
push
and
or
lret
inc
ja
mov
int
lret
fsubl
pop
vhsubpd
mov
add
push
sub
out
or
or
xor
shrl
mov
mov
mov
loopne
rolb
xor
mov
and
add
scas
out
add
neg
leave
mov
inc
cmovae
test
ficoms
ret
adc
cmp
std
dec
cwtl
imul
lret
test
pop
cmp
mov
push
daa
leave
ror
xor
ret
cmp
push
mov
flds
mov
and
push
scas
inc
dec
mov
dec
mov
roll
jne
push
popf
add
add
mov
test
iret
and
mov
dec
imul
push
fstpl
inc
rcrb
out
push
mov
cmp
adc
mov
fisubs
or
and
pop
dec
mov
xchg
mov
aad
enter
pop
push
mov
cmpsl
pop
cs
test
dec
lcall
into
mov
loope
repnz
dec
and
into
pop
and
shufps
lahf
inc
fmuls
inc
ret
pop
xor
sbb
cmpsb
ret
pop
leave
out
pop
ret
mov
not
sub
getsec
imul
daa
mov
lds
jae
mov
scas
sub
sbb
scas
aas
in
inc
dec
jp
mov
pop
dec
xchg
sub
mov
push
in
dec
aam
xor
sub
mov
sbb
mov
mov
insl
adc
pop
bnd
xchg
or
ret
aad
push
and
loop
inc
stc
push
out
xor
push
pop
lds
test
adc
jl
ljmp
dec
lcall
mov
popf
shrl
mov
mov
dec
inc
cmpsb
mov
jno
popf
jno
stos
nop
fidivl
xchg
popf
std
xchg
add
jnp
sub
loop
mov
and
aad
popf
call
and
sbb
scas
mov
fcompl
dec
cmp
sti
daa
xor
inc
or
ja
add
int3
pop
fldl
call
rol
sub
sbb
test
xchg
xchg
and
test
faddp
or
push
cmpsl
pop
push
int
fisubs
jle
ficomps
mov
pop
enter
lret
sub
lods
mov
pop
or
mov
xchg
dec
pop
shll
nop
mov
aas
int
mov
dec
outsl
mov
jbe
sbb
jae
add
push
lret
push
xor
mov
sbb
mov
add
lret
call
fisubs
rcrl
cs
xchg
mov
xchg
pop
jns
or
mov
ret
inc
mov
aad
into
dec
and
push
enter
jno
sub
cmp
into
dec
mov
in
push
sub
cmpsl
stos
in
shlb
dec
push
xlat
jns
cld
incb
push
dec
pop
daa
pop
sub
daa
stos
arpl
stos
mov
ret
mov
mov
lcall
sahf
mov
or
aaa
pop
cli
std
lret
ret
daa
in
mov
push
dec
aad
fisubrl
lret
shlb
pop
das
xor
add
inc
ret
jb
cmc
sub
push
jmp
ror
mov
dec
imul
add
jns
mov
push
sbb
pop
lods
mov
loop
cmp
xchg
adc
cli
sub
cmpsb
mov
cmc
std
mov
std
xor
add
push
cmp
pop
ret
pop
imul
inc
jb
subb
push
cmp
mov
cmc
xor
pop
fwait
adc
bound
lea
test
ljmp
cmp
movsl
stc
cmpsb
loope
dec
js
jp
ret
mov
jp
fisubs
flds
call
xlat
ret
sub
xor
xor
sub
inc
fmul
outsb
jnp
and
fbld
sti
sbb
leave
inc
mov
jnp
cmp
or
aam
scas
sub
push
push
dec
test
fisubrs
popf
ret
cli
sbb
xor
ljmp
out
xor
mov
xor
addr16
loopne
fcmovne
push
push
pop
jg
int3
add
cmp
mov
sbbb
sub
pop
push
add
fiadds
pop
cmpsb
sbb
mov
imul
xchg
mov
fidivrs
stos
push
or
mov
in
cmp
dec
pop
mov
sbb
xor
lods
xor
fldenv
mov
in
mov
lret
mov
fdivl
and
fcompl
or
into
add
push
mov
jge
inc
out
xor
jecxz
xlat
adc
adcl
insb
test
into
inc
mov
test
aaa
test
cmp
xchg
xchg
and
xchg
dec
dec
mov
inc
adc
andl
push
movsb
xor
mov
into
sub
jno
mov
mov
mov
push
dec
inc
mov
push
sbb
inc
mov
pop
sarb
sbb
cmpsl
out
add
and
jl
push
push
movsb
outsl
push
add
mov
adc
rorb
into
pop
lret
push
jbe
jnp
bound
jae
dec
pop
subb
mov
xor
ja
shll
fxch
cwtl
inc
push
sub
mov
or
lcall
popf
mov
mov
fyl2x
xor
mov
into
pop
inc
jo
xor
inc
daa
mov
push
in
or
ret
jb
and
mov
js
or
xchg
pop
inc
loopne
pop
xor
inc
sub
out
rorb
fadd
cmp
xor
push
ret
add
inc
mov
pop
into
push
aad
int
push
test
xor
mov
cltd
sarl
aaa
dec
mov
cmp
lods
inc
insb
xor
jmp
shll
xchg
push
js
sbb
pop
daa
xchg
in
xchg
jbe
sub
or
movsl
test
test
lock
cmp
shl
cmp
mov
mov
jl
fistpll
js
mov
es
add
sarb
ds
dec
imul
mov
jo
lock
fisubl
ret
pop
sahf
adc
fsubr
adc
sub
xchg
add
in
cmp
or
or
std
int3
xchg
popf
imul
stos
sub
adc
push
jb
mov
icebp
xchg
dec
enter
aam
int
mov
push
cmc
negl
lods
lret
cmpsl
call
std
sub
rclb
shll
mov
test
push
pop
mov
dec
jo
cmp
aam
popa
or
imul
fidivs
iret
addr16
daa
jl
mov
or
mov
or
test
lods
pop
test
sbb
jmp
push
jmp
mov
or
fsubs
mov
jo
dec
xorl
adc
mov
lret
je
xchg
adc
inc
aas
lret
pop
ljmp
sbb
sub
xor
dec
lods
mov
out
lahf
pop
in
and
dec
push
out
dec
adc
mov
nop
sbb
test
pusha
ljmp
sti
frstor
or
dec
mov
jge
loop
dec
jl
lret
push
mov
jo
inc
adc
cmp
adc
lds
adc
out
or
fldt
roll
pusha
add
dec
mov
hlt
dec
add
cmovo
outsb
cmc
cmp
shr
xchg
test
pop
arpl
jo
or
push
sahf
arpl
jp
pop
shrl
inc
arpl
sbb
insl
out
pop
es
ljmp
mov
rolb
xchg
out
inc
inc
push
fnstenv
jg
xor
lds
mov
insb
dec
rorl
std
lret
insb
fldl2t
or
xlat
fs
lock
shlb
addl
mov
fidivs
dec
mov
mov
scas
test
fimuls
inc
outsl
aam
cmpsb
mov
pop
and
in
imul
stos
cmp
pop
jg
rol
xor
mov
cli
ss
int
rdmsr
pop
inc
and
sar
cmpl
aad
mov
test
inc
jne
iret
mov
cld
dec
inc
mov
fs
aad
jo
or
inc
dec
sub
push
lahf
aaa
mov
ret
or
jb
lret
jb
add
pop
add
ret
shrb
jl
fidivrl
outsb
inc
enter
sub
xlat
push
inc
pusha
xlat
push
std
push
add
jp
mov
sbb
mov
js
ficomps
leave
in
daa
pop
lcall
pushf
lahf
adc
mov
mov
cli
mov
cmpsb
int3
push
mov
mov
les
jg
xchg
loopne
iret
add
adc
subl
pop
outsl
push
push
in
inc
mov
cmp
lea
mov
mov
cltd
mov
cmp
sub
lret
jae
pop
mov
push
clc
pop
rcrl
loopne
or
inc
xlat
arpl
add
xor
mov
pop
or
sbb
pop
out
dec
outsb
ret
ficomps
inc
mov
movsb
into
lret
std
dec
jno
push
fiadds
pop
test
test
pop
mov
js
ja
scas
dec
fcompp
in
jle
cmp
adc
jmp
inc
xchg
dec
mov
pushf
aam
push
in
mov
jecxz
and
add
scas
sub
pop
xor
inc
push
outsb
add
int
pop
push
inc
into
jne
sbb
dec
rcrl
push
dec
lcall
pop
int
push
ss
pop
dec
mov
and
mov
mov
jmp
mov
ret
ficoms
jmp
cltd
cld
adc
lret
xor
xor
dec
pop
xor
into
cmpl
pop
push
fmull
jp
cmp
mov
push
jmp
lret
xor
mov
jmp
insl
cmp
xchg
sbb
test
cmc
pusha
and
xlat
roll
cmpsb
rolb
adc
addr16
xchg
cwtl
pop
dec
icebp
mov
inc
mov
sbb
ret
mov
lock
push
jb
mov
jp
jnp
xor
adc
push
movsb
sub
push
or
fwait
push
jae
pop
xchg
push
and
add
or
in
outsl
jmp
fs
push
scas
lahf
jecxz
lds
int
lret
dec
pop
push
fnsave
cltd
mov
jecxz
sbb
or
add
add
loopne
leave
nop
loope
or
std
or
cmp
mov
movsl
rol
in
hlt
cmp
rcrl
daa
xchg
push
and
outsl
lret
js
sbb
fistps
aaa
mov
pop
and
dec
xor
inc
nop
test
stos
mov
push
enter
cmp
out
pop
iret
xchg
and
lahf
sub
dec
jmp
push
mov
dec
push
pushf
movl
push
out
pause
pop
pop
in
call
mov
and
inc
cld
jmp
or
add
adc
sbbl
mov
adc
or
je
rcr
add
lods
nop
mov
cmovle
and
and
and
xchg
mov
int3
dec
rorl
jmp
addl
aaa
push
ret
mov
test
lcall
mov
add
in
fidivrl
jge
inc
aad
stos
pop
incb
hlt
mov
jo
lock
out
push
jbe
adc
sbb
cmc
inc
int
in
mov
shl
sbb
pop
bound
mov
aad
pop
loopne
jae
inc
adc
add
push
call
cli
test
xchg
ds
push
orl
jge
testl
dec
mov
ffree
inc
leave
add
xorl
cmp
adc
inc
dec
pop
ret
dec
cmp
and
cmp
inc
lret
test
jl
xor
xor
xchg
mov
cltd
add
push
mov
lret
scas
sub
lea
icebp
cmc
fcomp
fdiv
mov
xchg
adc
ficompl
push
jecxz
andb
pop
lods
ja
fld
rorb
testb
in
sbb
testl
jb
ljmp
cwtl
cmp
ss
mov
loope
sub
in
sahf
dec
shl
inc
ret
mov
sahf
shll
cmp
jnp
adc
cs
push
dec
mov
adc
or
xlat
icebp
imul
push
popa
dec
jns
add
xchg
dec
rorb
insl
mov
pop
aam
aaa
ds
std
mov
inc
jo
icebp
mov
jle
push
push
movsl
cwtl
jmp
call
xor
pop
inc
sub
xchg
insb
xor
mov
ds
scas
cli
inc
fcmovnu
lret
cwtl
shlb
std
ret
push
push
repz
cmp
pop
int
jno
jp
jb
in
xor
pushf
and
xchg
in
sbb
shll
pop
leave
pusha
loope
fs
in
dec
push
or
out
sbb
jne
add
pop
jmp
push
aaa
cld
pop
stc
xchg
aad
int3
cmp
dec
xchg
fstpl
dec
sub
call
add
cli
loop
xor
insl
mov
ret
or
lea
dec
imul
mov
stc
shlb
cmpsb
cmpsl
les
lret
jge
xor
pushf
pop
xchg
insl
mov
jno
ficoms
out
mov
cli
dec
mov
popa
cld
fadd
adc
inc
jl
in
mov
ds
fimuls
lahf
fwait
dec
ret
push
push
inc
and
subb
push
in
pop
jnp
and
cmp
xchg
rcll
pop
pop
push
cmp
rcrl
adc
subb
add
xchg
daa
xor
sbb
mov
ret
mov
je
and
xor
mull
pop
icebp
enter
pop
mov
xchg
and
xchg
std
aaa
jg
notl
xor
leave
inc
add
pop
cltd
sub
fs
call
pop
xchg
xchg
jne
sub
jne
out
les
test
sub
mov
dec
lds
cmp
dec
movsl
mov
mov
shlb
inc
sbb
sbb
rclb
js
imul
add
adc
jns
xchg
fadds
pop
fists
sarl
scas
push
aad
in
mov
inc
xor
jge
aas
jns
mul
aad
cmp
xor
pop
xor
mov
and
ret
fisttpll
sub
movsl
rcr
ret
mov
adc
out
mov
fxch
lea
mov
in
dec
push
add
jmp
pop
iret
mov
jmp
ss
hlt
jb
int3
mov
les
notb
ret
repz
sub
pop
out
test
inc
ror
rcrl
sbb
into
rorl
popf
xor
scas
fld
adc
mov
std
dec
dec
lods
test
hlt
xchg
ljmp
enter
inc
movsb
sub
sbb
pusha
inc
sahf
inc
in
out
ljmp
pop
pop
mov
push
mov
cltd
adc
enter
push
sbb
je
cmp
adc
mov
decl
or
cli
xor
ja
addr16
dec
dec
movsb
fstp
mov
mov
jae
mov
jge
std
icebp
jo
enter
sbb
jle
fwait
in
andl
pop
mov
add
sub
pop
fisubs
xlat
mov
leave
mov
cmp
fisubl
and
outsl
sbb
stos
cmp
ret
dec
cltd
dec
mov
dec
dec
cmpsb
push
pop
cmpsb
sti
int3
jno
cmp
mov
or
jmp
cmc
jp
in
in
rcr
and
loop
in
vpsubusw
rcrl
pushf
out
sbb
leave
or
in
push
movsl
jge
hlt
push
dec
push
pop
xchg
dec
xlat
push
les
add
cld
push
ja
mov
jnp
mov
jg
cmpl
sub
jbe
xor
mov
push
xlat
xor
dec
cmc
lods
shlb
add
dec
sub
inc
mov
leave
mov
enter
cmp
push
add
aam
push
sahf
xchg
lods
jne
pop
add
cmp
and
std
jg
xor
pop
icebp
lea
add
push
sbb
mov
sbb
shlb
imul
add
push
iret
jp
cmc
pop
lods
fistpl
test
sbb
int
inc
xchg
out
lret
imul
mov
lds
in
loope
jmp
fbld
xchg
sub
icebp
xchg
xor
pusha
inc
cmpsb
fs
jns
pop
xor
int
addl
or
sbb
adc
lret
ja
adc
lock
sti
mov
sub
xor
sti
cmpsl
mov
mov
mov
pushf
int3
mov
dec
and
jmp
jp
lcall
es
jl
jbe
sbb
lods
xchg
loopne
push
adc
je
jge
jno
repz
sbb
mov
mov
jmp
xor
jae
mov
mov
lret
xchg
loop
add
loope
pusha
lock
enter
add
jecxz
or
fs
test
inc
or
fidivs
mov
add
add
imul
idivb
push
ret
jno
out
push
std
sahf
fidivrs
xchg
mov
mov
insl
push
mov
inc
test
add
push
ficompl
xchg
out
jns
popa
adcl
ret
cmpl
jecxz
jge
jae
xor
mov
lret
pushf
dec
mov
lret
push
push
lds
scas
mov
outsl
push
popf
cwtl
adcb
stos
jge
mov
sbb
daa
shll
sahf
inc
fwait
dec
or
movb
mov
sbb
sbb
push
leave
pop
js
shlb
dec
std
or
pushf
addr16
ret
bound
sbb
loopne
push
cld
cmp
sahf
jmp
iret
insb
and
movsl
sbb
shlb
mov
cmc
cmp
inc
icebp
int
lcall
push
mov
scas
cwtl
test
mov
add
sub
ds
xchg
or
push
and
daa
leave
or
cmp
rolb
dec
jp
xlat
cmc
pop
xor
js
cld
push
push
sti
daa
sbb
sbb
dec
lcall
pop
mov
iret
or
fwait
cs
inc
in
int3
je
call
addb
or
jnp
mov
sbb
cld
jne
inc
sahf
aad
scas
xorl
fistpl
ds
push
adc
ret
jmp
xchg
jnp
jge
mov
es
cltd
pop
movsl
xor
and
out
push
dec
out
std
cmp
aas
mov
fdivrp
xor
fisttpl
jg
enter
push
dec
pop
xlat
rcrl
iret
sahf
xchg
scas
test
arpl
or
lcall
mov
enter
xchg
mov
xchg
mov
jns
out
ja
rcrl
call
or
movsb
pop
outsb
and
gs
pop
or
nop
stc
mov
add
outsb
and
pop
jne
cmp
mov
in
mov
push
inc
int3
xchg
push
add
iret
lret
int
add
std
popa
popa
lods
bnd
ret
cltd
ja
and
aam
push
mov
mov
idivb
cmp
inc
ror
shr
pop
in
into
clc
cmp
push
xchg
hlt
daa
mov
dec
addr16
dec
mov
sbb
es
xchg
jmp
sub
cmp
xchg
sbb
imul
mov
iret
mov
mov
mov
mov
and
xchg
gs
mov
and
pushf
out
jge
rcll
test
pop
scas
flds
mov
pop
ja
das
or
xlat
push
xchg
rcrb
rcl
dec
jle
subb
mov
nop
lcall
inc
push
mov
mov
pop
jp
dec
add
xor
bound
jne
dec
push
mov
fcom
icebp
shll
cmp
mov
sub
fstpl
subb
jmp
jb
xlat
xor
and
lods
test
cwtl
imul
jo
emms
or
mov
dec
fcmove
dec
subl
add
imul
dec
int3
stc
nop
inc
xchg
aam
jnp
fucom
out
lea
push
cmpl
pop
adc
faddp
bound
add
rorl
dec
jbe
popf
cmp
mov
jmp
test
mov
pop
sbb
lret
dec
mov
ja
outsl
jle
or
lds
cwtl
cmp
aas
fstpl
xor
hlt
jecxz
inc
cmp
cmc
push
mov
push
pop
mov
mov
notl
imul
and
call
cmpl
insl
inc
mov
cmp
sbb
cltd
pop
repz
mov
pop
stos
rcll
mov
aam
lods
adc
and
sub
in
cmp
enter
and
scas
sahf
jle
mov
imul
cs
cli
cmc
subl
add
sub
cmp
cmp
ds
or
dec
push
xor
fnsave
cmc
sbb
andb
sar
adc
add
push
push
dec
dec
or
push
adc
pop
mov
ss
pop
inc
jp
ret
sbb
push
cli
hlt
pop
inc
mov
mov
push
in
mov
xchg
and
adc
rcll
test
lcall
sub
bound
sbb
mov
mov
pushf
pop
mov
insl
pop
test
ret
mov
inc
test
xchg
lret
lret
xchg
scas
cmpb
cld
xchg
mov
fsts
jmp
loopne
push
inc
clc
daa
xchg
mov
ds
dec
in
push
ja
xor
cs
xor
inc
pop
and
daa
shl
fstl
std
push
inc
rol
sti
cwtl
pop
in
rclb
pop
idivl
shlb
scas
ror
mov
shl
lret
pop
int3
fwait
adcb
mov
adc
out
sbb
bound
call
sub
lret
mov
or
fcmovu
leave
add
aas
push
push
pop
fisubrl
dec
mov
sbb
mov
adc
mov
dec
push
xchg
jne
ss
jbe
jb
ljmp
and
mov
shll
outsb
stos
outsb
xor
xchg
ljmp
orl
nop
andl
insb
mov
fs
add
and
push
push
cmp
or
or
mov
xchg
mov
adc
mov
leave
inc
ja
cwtl
jne
mov
mov
pop
icebp
imul
inc
jbe
xor
mov
test
in
rorb
sti
addr16
xlat
sbb
js
xchg
lea
xor
stos
lret
sbb
leave
pop
mov
pop
sbb
xchg
bnd
or
mov
add
dec
outsl
in
or
dec
mov
xchg
and
scas
sbb
inc
push
movsl
push
sbb
pop
mov
stc
iret
jb
adc
loope
xor
ret
cltd
jle
ja
add
ret
test
and
lods
push
or
lcall
push
or
imul
gs
adc
or
movsb
inc
fcoms
jp
bound
aaa
xchg
inc
lret
lds
mov
xor
ror
jo
cmp
out
mov
inc
shl
jae
ds
fbld
xchg
adc
mov
repz
lock
add
xchg
lea
in
pop
lods
xlat
mov
xchg
cmpb
xor
aam
outsb
inc
in
es
inc
cld
hlt
xchg
fadds
imul
lret
pop
xor
cwtl
repz
ds
pop
push
into
das
in
outsb
and
sub
push
adcl
jns
sub
testb
popa
popl
dec
fwait
lds
cmc
sub
sub
subl
in
das
test
sub
push
inc
jle
lret
cltd
loop
loop
sub
and
push
adc
cmc
or
or
pop
movsb
mov
inc
sbb
or
mov
pop
stos
clc
aam
ret
mov
push
push
je
add
rcrl
jle
repnz
cltd
clc
pop
not
push
xchg
mov
xchg
lret
cld
loop
add
in
pusha
lret
imul
ds
cmp
mov
movsb
scas
or
jo
hlt
lcall
push
fstpt
mov
lret
iret
and
inc
mov
xor
adc
mov
jmp
cltd
dec
dec
cmp
ficomps
icebp
lret
pop
ja
xor
jns
push
jns
enter
ss
loopne
lds
fcoms
mov
xchg
sub
adc
mov
les
shrl
out
ret
lret
iret
mov
dec
loope
fs
js
inc
mov
frstor
jnp
mov
jo
jns
inc
enter
scas
jmp
pop
aaa
xor
std
mov
lret
sbb
mov
jg
sub
je
dec
inc
js
xchg
cmp
fmuls
push
add
enter
xor
xchg
inc
xchg
adc
sbb
repz
test
xadd
ljmp
pop
adc
aad
inc
rcl
jmp
adc
inc
in
lret
cs
ret
dec
mov
xchg
xchg
imul
xchg
xchg
or
mov
ss
xchg
or
lret
mov
pop
and
pop
outsl
push
daa
scas
loopne
inc
cli
pop
inc
pop
insl
pop
dec
mov
leave
nop
jnp
into
cld
cmp
in
fisttpl
ret
push
push
leave
push
test
mull
dec
aam
leave
xor
xchg
mov
sub
incl
lods
or
int3
stos
or
aam
inc
xor
xchg
daa
adc
jl
jg
lods
adc
arpl
int3
xchg
lea
mov
mov
sub
push
mov
fcos
loope
int
pop
popa
ret
lea
pop
int
imul
inc
add
dec
mov
shl
in
es
mov
xlat
jae
push
pushl
xchg
add
jecxz
dec
cli
add
es
xchg
and
and
inc
or
gs
rcll
xchg
rcrb
sbb
xchg
sbb
scas
fisttpl
inc
push
addr16
or
add
dec
pop
sbb
data16
jnp,pn
int3
sbb
pop
in
movsb
sbbb
inc
jo
out
push
loopne
xor
pop
loope
adc
rolb
test
outsb
mov
xor
in
cmp
pop
imul
jl
xor
dec
sbb
sbb
or
adc
sbb
xor
inc
leave
pop
inc
mov
icebp
or
pop
fnstenv
sbb
or
jb
adc
dec
fcoms
mov
cmp
icebp
mov
es
push
add
xchg
or
inc
iret
outsl
fwait
jp
in
out
das
mov
mov
fucomp
fstl
int
dec
push
jb
push
in
test
ss
inc
xor
mov
xchg
sub
or
mov
push
lret
pop
pop
push
stos
lods
mov
or
ljmp
dec
pop
fwait
mov
iret
in
pop
jno
xchg
or
mov
out
fists
cmp
imul
inc
xorl
xor
pop
dec
sbb
mov
int3
inc
xchg
jmp
cli
sub
stos
push
and
and
xchg
mov
ljmp
pop
sarb
push
xchg
incl
jbe
fs
cmp
xor
pop
call
mov
lcall
nop
jge
xchg
cltd
cmp
data16
cmpsb
sbb
ds
xchg
cmp
sbb
cmp
stos
dec
lcall
lret
int3
pushf
cmp
lds
add
sub
xor
enter
and
add
xchg
jp
jle
xchg
icebp
jno
push
dec
and
mov
push
test
xchg
xchg
mov
push
xchg
inc
xchg
ds
mov
cli
test
pop
xlat
data16
inc
xor
int
out
sti
xor
sub
mov
cmp
repz
pushl
roll
bswap
orl
or
adc
jo
cmp
or
jae
clc
stc
xchg
inc
mov
xor
or
pop
inc
roll
aad
into
xchg
testb
or
adc
push
jns
decb
aam
push
decl
or
pop
dec
and
loope
das
sbb
bnd
adc
lods
rcrl
fimull
loope
adc
xchg
xor
gs
scas
mov
aaa
ss
add
test
xor
fstp
add
leave
inc
fidivl
movups
rcrl
ret
in
sub
sti
arpl
mov
sbb
fdivrs
out
adc
int
xchg
jge
xchg
das
jnp
scas
in
adc
xchg
out
test
pop
enter
test
sbbl
push
pop
dec
sbb
stos
push
mov
in
lea
and
mov
inc
out
adc
pusha
mov
insb
pop
pop
adc
xor
shlb
sbb
xor
xchg
rorl
adc
adc
push
in
mov
test
adc
pusha
ret
xor
jle
pop
leave
mov
or
and
js
enter
imul
mov
mov
push
and
hlt
int3
out
pop
mov
mov
sbb
lret
sahf
inc
cwtl
ficompl
jae
in
mov
inc
psllw
mov
ror
push
in
pop
jbe
xor
cmp
mov
inc
pushf
mov
lcall
xchg
or
rorb
mov
jno
mov
je
loope
rcr
imul
lods
aad
push
mov
jle
pop
xor
cli
cltd
lds
fmulp
pop
pop
pop
xor
aad
out
push
arpl
je,pn
in
cmp
cltd
pushf
fstpl
js
mov
pop
mov
fst
call
add
pop
test
sub
loope
jnp
mov
jns
movsb
popf
insl
push
push
mov
hlt
jb
lret
mov
in
outsb
iret
sbb
stos
push
jno
xor
sub
jle
mov
jno
insl
inc
scas
adc
std
into
xor
xchg
or
ret
enter
cwtl
jnp
int
lcall
inc
xchg
cwtl
sbb
lea
aas
cmc
dec
mov
jg
sub
cmpsb
jmp
out
stos
push
cmc
test
add
and
aam
adcb
aam
jp
mov
notb
out
pushl
and
js
inc
cmpxchg
in
pushf
ds
add
test
ja
jae
shrl
insl
negl
push
push
mov
shrb
out
or
fwait
jns
and
test
mov
push
jae
shll
mov
call
mov
cltd
mov
inc
fcmovnb
dec
and
and
daa
add
jg
add
xchg
cmpsb
mov
dec
ss
jl
addr16
les
idivb
jbe
clc
imull
jns
adc
addb
outsb
mov
xchg
sbb
cmp
cmp
jp
jmp
mov
add
sbb
out
push
aas
dec
aam
movntq
cmp
out
jno
sub
sbb
loop
inc
cmp
cmp
imul
insl
pop
jne
inc
and
rclb
jp
cld
mov
ret
xchg
xor
xchg
jle
cli
icebp
imul
xchg
stos
rol
jecxz
and
jmp
pop
popa
add
das
pop
pop
xchg
lock
ret
int3
jb
jmp
jmp
mov
data16
xchg
jmp
add
adc
iret
pop
cmpsb
ret
pop
mov
xor
movsl
icebp
adc
pop
push
xchg
add
test
mov
js
pop
mov
fwait
ret
imul
xchg
mov
in
jae
sub
das
js
cmp
jno
gs
cwtl
std
out
inc
daa
cs
dec
sbb
push
jbe
in
test
ja
inc
cli
mov
neg
jae
hlt
adc
jle
dec
je
push
pop
inc
push
pop
adc
mov
mov
inc
lahf
push
pop
out
dec
dec
xchg
jl
inc
mov
xor
mov
dec
mov
or
mov
jmp
lds
in
lret
fcmovnu
mov
bound
jge
rcrl
inc
cmp
mov
push
dec
aaa
data16
fistps
or
shr
sbb
out
inc
sub
fmuls
lret
or
hlt
inc
mov
mov
add
xor
jge
test
je
pushf
jns
in
nop
jge
loope
jo
in
and
pop
dec
mov
outsl
and
fucom
sub
mov
call
adc
out
popa
add
inc
int
ljmp
mov
ret
loop
dec
xchg
xchg
sub
and
xchg
lods
mov
cmp
stc
inc
ffree
cmc
pop
jmp
scas
jo
les
mov
and
lahf
lret
jno
aam
lcall
lahf
std
xor
jp
ffree
xchg
inc
cld
and
leave
mov
jns
inc
push
cmpsl
inc
dec
shll
push
inc
cs
or
jo
in
xchg
dec
test
scas
mov
cmp
add
push
inc
clc
jns
enter
jmp
mov
mov
xor
stc
pusha
into
jno
into
popa
dec
cs
jno
loopne
xchg
adc
inc
jl
xlat
xchg
ds
addr16
sub
mov
jno
in
notb
dec
mov
cmp
add
arpl
mov
int
nop
ljmp
addr16
cmp
inc
jb
ljmp
lret
bound
and
shrl
imul
rorb
pop
aaa
cmp
rcrl
jae
push
jge
addr16
add
mov
add
mov
mov
xor
loope
xchg
sti
jo
xchg
das
adc
mov
sbb
es
out
sub
outsb
mov
das
pop
clc
push
mov
lret
outsb
cmp
push
cli
iret
lods
mov
push
out
call
lret
int3
xchg
stc
jo
out
xchg
shr
sub
out
mov
pop
insl
inc
neg
jbe
test
mov
jbe
cmpsb
lret
xchg
shrb
push
add
xor
jge
pop
lods
and
adc
mov
testb
sub
mov
push
adc
stc
inc
xchg
fucomp
inc
mov
movsl
push
lahf
movsl
sbb
sti
lock
fldt
xchg
xor
ret
leave
or
xchg
adc
sub
popa
leave
sub
add
add
mov
shlb
xor
outsl
inc
into
sbb
imul
popa
dec
mov
in
xchg
mov
ljmp
call
mov
mov
adc
adc
cli
sub
mov
in
cmp
cmp
fs
inc
mov
mov
out
scas
into
or
aad
inc
mov
push
fsubrl
sub
xchg
and
daa
test
aas
xchg
inc
lea
and
lret
xor
lods
jge
rorb
cmp
roll
xor
mov
jnp
sbb
add
cmp
int
mov
mov
sbb
pop
pop
inc
insl
pop
inc
fstpl
scas
int3
jno
xor
and
pop
sub
test
push
and
dec
mov
pop
adc
pop
out
lea
push
dec
xchg
dec
xor
lcall
in
dec
hlt
sub
mov
leave
dec
cmpsl
ds
arpl
sbb
dec
out
sbb
mov
mov
clc
xchg
outsb
pop
out
push
cld
leave
xchg
pop
lahf
adc
andb
xchg
insl
in
or
jg
nop
pop
cmp
movl
add
dec
adc
aaa
outsb
pop
sahf
outsl
in
int
adc
mov
inc
cmp
int
sbb
mov
test
jbe
cmpsl
dec
inc
jge
inc
pop
mov
inc
cld
cmpsb
xor
lret
mov
loop
pop
pop
out
jno
cmpsb
or
inc
movsl
jb
sub
fcomp
push
push
pop
pop
insb
out
sbb
mov
leave
push
or
cmc
je
frstor
push
aam
push
nop
movsb
xor
fwait
ds
lods
inc
ret
cli
cmp
cmp
jae
mov
imul
jbe
jae
jmp
cli
mov
popa
lret
pop
and
xchg
inc
loope
ds
into
jbe
mov
mov
mov
dec
dec
inc
ljmp
outsl
out
fbstp
jl
into
mov
idiv
push
aad
bound
cmp
push
outsl
jb
aad
in
xchg
xchg
and
iret
repnz
mov
mov
or
fldenv
or
fwait
pop
sahf
inc
add
ljmp
jns
sub
imul
ror
in
test
call
imul
mov
adc
sub
push
cld
pop
jb
roll
insb
sub
dec
adc
scas
lock
adc
add
cmpsb
fldenv
movsb
aad
and
mov
ret
sbb
mov
and
mov
lods
ljmp
in
adc
push
mov
fildll
les
loopne
rol
pop
xor
push
add
jecxz
and
jb
cs
pop
xor
cmp
fsts
sub
add
cld
or
aaa
in
jno
jo
leave
sbb
push
cmpsl
dec
xchg
aaa
add
sbb
mov
mov
or
lock
movb
bound
jno
nop
cmpsb
xchg
xor
ss
aaa
xor
and
es
and
fmull
std
push
pop
push
pop
jl
stos
jmp
sarl
or
shlb
cwtl
repnz
imul
xor
jg
test
pusha
pop
gs
push
mov
insl
mov
aaa
je
sarb
lahf
lahf
dec
pop
rcrb
xchg
or
scas
push
sub
fs
adc
cmp
mov
inc
stc
dec
dec
jbe
jp
test
add
sar
out
xor
popf
add
cmpsb
push
cmp
loopne
in
jecxz
xchg
mov
sbb
sbb
push
fnsave
call
cld
test
mov
jns
inc
inc
add
lock
adc
and
int
jo
or
push
inc
repnz
sar
jb
icebp
icebp
inc
gs
and
mov
inc
arpl
in
xchg
sub
jp
push
xchg
push
sub
adc
int3
popf
mov
add
test
dec
jl
xor
lret
test
jmp
inc
std
jmp
aam
cmp
adc
sbb
and
pushf
mov
mov
shrb
dec
and
mov
push
mov
mov
loop
mov
int
icebp
or
sbb
jns
out
adc
inc
enter
push
lret
les
das
inc
dec
push
rorl
mov
and
iret
jne
adc
sti
push
std
or
xchg
insb
lgs
xor
lock
int
fnstenv
insl
lret
mov
mov
or
mov
imul
lock
cmpsb
mov
nop
or
push
mov
sbb
xchg
repz
mov
les
dec
mov
jns
pop
cmpsb
pop
in
mov
out
insl
xchg
fnsave
mov
and
idivb
rolb
mov
movsl
jb
adc
pop
dec
lret
imul
out
sub
aam
mov
enter
fwait
sbb
push
dec
or
in
lods
add
sub
mov
scas
pushf
jb
loop
loopne
cmp
test
jbe
dec
jg
cld
cmpsl
and
testl
sarb
xlat
mov
gs
faddl
pop
mov
out
inc
pop
repnz
insb
ja
xchg
fadd
and
gs
ds
in
clc
fnstsw
icebp
mov
xchg
and
lds
leave
es
jae
stos
leave
jnp
shr
mov
cmp
faddp
lret
mov
adc
pop
out
pusha
subb
iret
jns
push
dec
out
and
cmp
lods
cmp
jne,pt
test
xlat
gs
adc
cmp
jno
mov
dec
jbe
mov
rcrb
icebp
xchg
call
inc
shll
push
fidivrs
lret
adc
adc
loope
and
pop
jg
jmp
add
push
loop
into
mov
mov
insb
cli
daa
leave
xchg
jecxz
out
and
fsubrs
sti
sbb
scas
rol
or
dec
push
xlat
fnsave
cmc
xor
test
fstl
movsl
andl
cmp
stos
rolb
das
mov
pop
cmp
mov
out
jle
ficomps
inc
iret
je
xchg
test
xlat
je
aas
jns
push
push
jne
mov
repnz
gs
jle
ds
rclb
aam
cmpsl
pop
add
std
jno
in
inc
fmull
jb
xor
push
popf
add
ret
dec
stc
stos
and
repz
xchg
and
sub
jns
pop
pushf
lock
repz
sub
inc
rcl
ror
cli
arpl
xor
mov
and
xor
inc
ret
bswap
dec
adc
dec
add
pop
cmp
movsb
in
cltd
xor
pop
push
pop
loopne
sub
fs
inc
xchg
push
or
cmp
nop
out
xor
mov
cmp
fwait
sbb
add
imul
push
jge
adc
popa
fwait
in
xor
jo
addr16
lcall
lds
mov
subl
in
adc
or
aad
cmpsl
femms
aaa
test
std
and
lods
mov
lds
mov
in
fs
xor
int3
cmp
and
data16
xor
call
sbb
cmpsl
ret
cmovbe
add
lods
mov
sub
mov
cli
or
pushl
dec
mov
xchg
ret
jg
dec
stc
xor
push
jp
fldl
cs
int
and
mov
pop
adc
mov
leave
xor
clc
jge
pop
lea
sub
jp
fwait
test
int3
xchg
mov
out
add
dec
int
pop
fwait
inc
ss
and
ficoms
int
ret
cld
aaa
repz
mov
jnp
mov
stc
mov
mul
mov
es
lret
dec
cli
into
outsb
sbb
mov
sbb
insb
mov
lock
xor
dec
icebp
rorb
mov
scas
lds
sub
xchg
xlat
jns
movsb
lret
sub
mov
int
sbb
popa
xlat
cltd
xlat
and
mov
xchg
mov
xchg
dec
lret
sub
push
outsl
adcl
adc
stos
cmp
repnz
fcom
fidivrs
ret
adcl
push
pop
js
cld
ss
shl
int
or
xchg
int3
mov
xlat
mov
iret
sub
mov
jecxz
mov
sbbl
std
or
inc
cld
jg
pop
jle
loope
std
ds
add
add
or
add
mov
ficoml
xor
clc
rolb
arpl
sub
hlt
xor
call
test
push
adc
jno
into
add
push
push
andb
mov
cli
xchg
xchg
pop
outsb
ljmp
sub
je
xchg
inc
add
popf
popa
enter
pop
mov
and
pop
push
fcomip
in
ja
into
push
lds
pushf
mov
push
push
sbb
in
inc
imul
inc
mull
jbe
adc
jns
popf
pushf
cltd
sar
int
cli
add
mov
gs
push
mov
sub
addr16
inc
ret
jne
loope
out
stos
test
fildl
and
adc
mov
sarl
je
pop
mov
push
dec
test
repnz
mov
adc
sub
push
xchg
pop
cmp
sbb
out
fsubrs
jecxz
outsl
fiaddl
aam
and
xchg
das
xor
stc
xor
or
repz
cmpsb
cmc
sub
xchg
cmp
add
int3
ss
adc
mov
rorl
inc
test
test
jb
out
and
es
movsl
test
loope
ret
push
mov
std
pop
sub
fwait
rol
call
and
mov
xchg
push
imul
xchg
fcomp
cwtl
mov
bound
mov
jno
addl
inc
add
adc
loope
mov
int
mov
mov
sbb
mov
adc
int
insb
lcall
sub
sbb
mov
jge
mov
pop
mov
roll
cmpxchg
xor
roll
xor
sub
ds
sbb
mov
push
sub
dec
pusha
dec
xor
outsb
xchg
sub
rcrl
pushl
or
add
das
cli
out
sbb
xchg
add
add
push
xchg
popf
popf
ret
call
sub
mov
xchg
pop
mov
adc
lret
movsb
fisubl
cwtl
pop
jae
jmp
or
sub
jo
mov
xchg
jl
mov
imul
fadds
jo
test
pop
daa
and
sti
jecxz
addr16
and
in
inc
daa
lods
dec
or
movsl
or
stc
mov
push
mov
push
pop
test
movsl
mov
lods
adc
jne
adc
push
adc
fldenv
cli
pop
popl
inc
sub
ljmp
fs
clc
xchg
and
xchg
sbb
dec
jle
mov
arpl
dec
pop
dec
inc
std
mov
and
loope
jmp
dec
sub
imul
cwtl
or
sbbb
adc
je
push
mov
lea
xchg
sub
dec
sbb
hlt
popf
sub
pop
sbb
mov
pop
iret
xchg
repnz
mov
or
mov
inc
push
push
sub
xor
leave
and
in
inc
jnp
inc
push
pushf
ret
add
ds
scas
add
or
push
lock
pushf
or
icebp
ljmp
jnp
rorb
rclb
popa
mov
test
mov
jge
sub
dec
jne
xchg
adc
fdivrl
inc
jp
push
rorl
popa
mov
outsl
in
ljmp
add
fnstcw
push
ss
mov
mov
xchg
and
orl
sbb
pop
leave
xorb
lods
mov
fnstsw
aas
fiaddl
mov
mov
pop
popl
test
or
repnz
xchg
pop
xchg
bound
out
jge
cwtl
lds
and
xlat
adc
adc
iret
fisubrs
stos
lea
adc
les
sub
dec
xchg
or
mov
les
inc
ficomps
into
and
inc
scas
fisubrs
notb
adc
add
adc
imul
or
cmpsb
sub
push
insl
sbb
pop
int
pop
cmp
popf
test
jae
sbb
push
shl
iret
vcmpsd
xchg
leave
imul
inc
mov
ret
stos
cmc
rol
pop
push
ljmp
rol
push
or
std
aad
mov
daa
mov
stos
iret
es
cwtl
pop
xlat
mov
xorb
sete
mov
adc
rorb
pop
sub
in
jbe
fwait
negl
dec
or
xor
jmp
sbb
inc
ljmp
lret
pop
sti
pop
test
and
cmpb
lds
pop
pop
ret
aaa
add
jge
inc
out
and
hlt
cmp
mov
orl
push
pop
outsl
xorl
fyl2xp1
pusha
fsubl
into
shlb
out
cld
pop
lock
out
test
inc
negl
rolb
dec
popa
stc
pop
jbe
fbld
mov
js
or
data16
xlat
loopne
scas
ss
cmp
mov
not
lea
pop
into
stos
inc
mov
adc
mov
rcll
mov
xchg
jl
shl
and
std
pop
data16
popf
je
loopne
sub
xchg
sar
pushf
data16
inc
jl
xchg
enter
push
dec
sahf
xor
movsb
cmp
in
pusha
sbb
inc
popa
adc
jg
push
insl
lods
lods
outsl
add
mull
ljmp
roll
leave
adc
shll
xor
jnp
or
orl
roll
icebp
jmp
sbb
sahf
mov
imul
and
jbe
sahf
dec
mov
enter
orb
mov
pop
in
pop
lret
pop
add
add
cmp
aaa
inc
pop
xor
push
cmp
enter
inc
xchg
pop
loop
sbb
stos
push
inc
js
sar
cmp
in
lret
mov
and
or
nop
sbb
frstor
outsl
popa
push
loop
aad
sbb
lret
add
pop
jnp
movsl
jp
loop
test
dec
jle
add
mov
xor
test
pop
int3
xchg
or
in
popa
sbb
mov
push
sub
es
aam
cmp
lea
mov
adc
rcrb
mov
aaa
jbe
lea
pop
mov
imul
cmp
sbb
ljmp
arpl
daa
xchg
int3
inc
push
icebp
call
or
mov
adc
subl
push
sbb
push
and
repnz
adc
fwait
cli
cmp
enter
scas
ja
pop
inc
sbb
int3
cmp
and
jne
dec
andl
jmp
lods
into
sbb
pop
call
mov
iret
adc
xchg
lea
out
outsb
jle
sub
mov
mov
rclb
ss
mov
cld
ficompl
push
outsb
in
lods
mov
xrelease
adc
or
adc
adc
clc
out
pop
orl
pop
sti
or
cmpsl
test
sti
jno
aas
bound
ret
sub
cmp
rorl
xchg
fwait
xor
push
adc
std
aad
mov
pusha
test
je
clc
pop
ds
mov
sub
xor
inc
add
movsl
hlt
inc
shrl
mov
fcomps
rcl
inc
xlat
mov
neg
mov
jle
push
push
loope
repz
outsb
mov
scas
pop
mov
cmp
jne
cltd
xchg
inc
popa
sub
mov
mov
xor
nop
imull
mov
out
mov
mov
addr16
ret
mov
or
pop
push
or
adc
ret
inc
xor
push
dec
mov
dec
mov
push
dec
inc
icebp
arpl
or
ret
rcrb
xor
popf
xchg
xor
dec
jbe
and
gs
mov
mulb
pop
mov
xlat
adc
fwait
aam
xor
pop
cmp
insl
pop
ret
insl
and
push
cmpsl
mull
or
sub
push
shrb
sti
xchg
imul
fwait
daa
xor
idivb
sub
xor
or
cmpsl
add
inc
jmp
push
jno
mov
push
test
mov
sbb
xchg
pop
and
jecxz
and
popl
int
int
or
icebp
out
jle
mov
pop
push
adcl
xchg
and
mov
stos
jge
mov
mov
icebp
and
ficomps
ds
sub
enter
scas
xor
aaa
or
int3
jns
iret
test
dec
inc
lahf
enter
stos
into
imul
xchg
xor
stos
stos
cmp
xlat
add
mov
xchg
bound
mov
cld
mov
insl
js
mov
out
cltd
lret
pop
mov
into
into
push
scas
into
xor
pusha
sahf
nop
mov
xchg
nop
shll
imul
cmpl
adc
xchg
xchg
mov
andl
pop
cli
xor
aaa
outsl
pop
and
insl
add
mov
shll
cmp
pop
or
mov
clc
lods
hlt
adc
arpl
push
jnp
sbb
cmp
mov
cwtl
repnz
mov
fmull
popf
mov
or
mov
mov
mov
adc
stos
loope
ret
int
movsb
cmp
push
sbb
rorb
add
xchg
or
insl
adc
jp
pusha
enter
dec
jmp
mov
xor
test
test
xlat
pop
das
in
sahf
aas
cmp
sub
in
cmpl
test
les
lcall
icebp
dec
shrl
or
mov
push
lea
mov
dec
out
push
pop
jae
aad
stos
daa
inc
mov
push
mov
pop
jae
je
aas
mov
xlat
aas
sub
and
in
xorl
js
enter
es
mov
popf
fcompl
xchg
inc
or
int3
insl
cmp
xor
xchg
xorb
sbb
aaa
and
xchg
hlt
cmp
adc
divb
dec
out
xor
sub
fxtract
sbb
cmp
testb
push
and
sub
into
xor
jns
aam
stos
cltd
xor
fcoms
dec
pusha
mov
imul
add
test
and
push
pop
in
push
xchg
push
pop
imul
lds
stc
js
jbe
loopne
pop
jp
pop
leave
aas
ljmp
out
dec
mov
out
sbb
pop
leave
jno
dec
icebp
xlat
mov
stc
lock
inc
inc
bound
fidivl
int
or
sbb
mov
push
cmp
mov
aaa
clc
leave
aam
sub
into
inc
pop
cmp
pop
cmp
fnstsw
cmpsl
lods
shlb
xor
jmp
jbe
mov
mov
xor
pop
arpl
not
insl
mov
pop
jbe
push
and
inc
push
aad
pop
inc
jbe
inc
das
out
inc
dec
sbb
std
xchg
jmp
add
imul
pushf
lods
lds
jbe
rcrl
pushl
ja
addb
in
mov
mov
pop
xorb
and
mov
stos
mov
pop
lret
xchg
leave
aaa
loope
mov
sti
inc
lcall
mov
mov
sub
mov
mov
inc
sbb
lret
ljmp
cmp
sbb
and
ret
divb
pop
clc
aam
xchg
or
sbb
pop
fwait
or
or
stos
cmpsb
jae
xlat
fimull
xor
sahf
dec
data16
mov
lea
int
xor
cmc
mov
push
and
data16
lea
pop
xchg
mov
sti
lods
mov
nop
test
mov
fsubrs
int
sti
push
jno
pop
push
call
mov
xlat
or
pop
iret
in
mov
ja
aaa
int
mov
lret
cmc
jp
sbb
and
add
mov
xchg
shlb
cld
xor
es
jo
xor
jae
mov
aam
inc
imul
repnz
shl
sbb
int3
jns
mov
sbb
cmp
das
fildll
sub
mov
inc
mov
pop
adc
iret
mov
in
jno
jmp
pop
add
add
fs
jo
out
inc
decb
push
xchg
xor
push
jg
fwait
cs
inc
popf
loopne
add
fwait
jae
cmp
add
mov
fidivrl
iret
mov
mov
hlt
sub
cmp
push
incl
jl
scas
lods
outsb
inc
push
orb
xor
cld
push
out
cmp
imulb
sbbl
jmp
hlt
adc
ljmp
sub
mov
inc
rolb
jb
mov
mov
or
out
sahf
and
mov
mov
lds
sub
insb
out
test
xchg
sbb
adc
and
mov
jo
pusha
lds
out
stos
arpl
inc
mov
mov
daa
mov
add
insb
lds
clc
add
push
sub
pop
sub
adc
xor
sub
dec
sub
pop
xchg
lds
xor
push
jno
fwait
dec
add
xlat
adc
jmp
xor
int
xor
fabs
subl
xorb
notl
adc
imul
pop
cmp
dec
push
push
test
sbb
mov
ret
xchg
rorl
or
mov
sub
rcl
cmp
xor
fprem1
in
jmp
or
dec
scas
or
ss
aam
push
cmp
cwtl
and
add
jb
in
pop
mov
fcmove
je
adc
inc
or
shrl
bound
in
bound
cltd
bound
in
bound
in
bound
in
bound
cltd
bound
in
bound
in
bound
in
bound
cltd
bound
in
popa
mov
sub
stc
adcb
das
pop
gs
out
fbld
cmp
push
jae
in
jb
or
in
or
and
test
mov
dec
lcall
adc
shrl
repz
push
ds
cltd
ds
inc
arpl
sub
sarl
pop
fs
out
dec
rorb
pusha
xor
push
jns,pn
cmp
xor
push
jo
mov
aaa
repz
dec
jp
ss
repnz
std
mov
jecxz
retw
dec
mov
in
frstor
test
xor
xchg
cmp
fsubrp
nop
lret
mov
fcoms
mov
ret
jne
push
fimull
sub
loopne
xor
xor
cwtl
or
and
lods
and
dec
mov
stos
jecxz
dec
mov
mov
pop
and
mov
outsb
mov
clc
mov
xchg
pop
popa
es
lcall
addr16
jge
pop
sahf
rep
jp
mov
inc
add
test
lods
arpl
push
sbb
gs
incb
lcall
sbbl
mov
pop
cmp
das
ljmp
je
mov
mov
inc
nop
nop
lret
in
mov
sbb
jb
mov
sub
mov
sbb
push
sti
fsts
stos
pop
jp
fbld
sbb
jle
xorl
lea
stos
mov
scas
xor
cmp
movsb
dec
mov
xor
add
pop
add
fisttpll
add
lahf
inc
cmpsb
sub
cmp
mov
lea
sahf
cld
out
sbb
cmp
out
ljmp
stc
jae
outsl
int3
shrl
ja
and
cmp
icebp
ret
out
and
popf
jmp
mov
rcr
push
test
shll
fiadds
jmp
imul
imul
xor
test
das
jb
lret
shll
lds
push
je
lods
fwait
ret
mov
mov
sub
or
pusha
jbe
std
repz
stos
mov
inc
dec
and
out
cmp
jo
in
inc
ds
and
