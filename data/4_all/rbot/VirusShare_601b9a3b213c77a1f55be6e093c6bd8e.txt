push
call
pop
mov
sub
sub
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
fbstp
sar
call
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
ds
data16
xchg
sbb
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
mov
lret
mov
aad
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
das
ljmp
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
and
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cli
xchg
jb
les
adc
iret
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rep
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jo
jl
and
and
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
rorl
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
pop
lret
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
adcb
aaa
mov
inc
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
adc
pusha
inc
add
cmp
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fcmovnb
mov
js
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fdivp
lds
aas
outsb
lods
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
inc
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
imul
rorb
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
ja
xor
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
inc
sahf
cmp
inc
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fistpll
popf
rcrb
add
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
push
inc
mov
and
jmp
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
pop
scas
dec
mov
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
mov
enter
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
or
sub
sub
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cmp
push
pop
std
push
add
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
adc
lret
and
inc
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
js
jp
mov
mov
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
adc
aas
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
out
ret
inc
jge
aas
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
pop
sbb
in
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
out
inc
adc
mov
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jecxz
hlt
inc
adc
xchg
sub
dec
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xor
add
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jno
xor
fistpll
dec
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
inc
fldl
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jecxz
pushf
imul
test
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rorb
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
shrb
adc
aas
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
cmp
mov
pusha
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
icebp
mov
fcoml
ret
enter
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
mov
fsubl
sub
mov
pop
inc
add
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
inc
sti
mov
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cld
push
dec
mov
jmp
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
out
leave
popa
inc
js
cli
mov
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
xor
add
xchg
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
in
and
inc
leave
mov
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
pop
and
mov
jo
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
repnz
loopne
fs
test
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
loop
push
cmpsl
dec
push
mov
mov
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
and
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
inc
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
mov
enter
movb
jmp
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
push
add
aas
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sbb
std
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
orl
nop
xchg
ljmp
dec
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
xor
das
and
test
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
jnp
adc
jmp
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
lods
dec
cs
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
repz
inc
xchg
sub
dec
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fsubrp
push
xor
test
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
repz
jne
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
arpl
cltd
int3
test
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
leave
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
sbb
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
popa
mov
je
xlat
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
nopl
lahf
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
sub
sbb
add
aas
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rep
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
inc
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
in
imul
jo
jae
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
or
mov
sarl
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
notrack
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
inc
nop
mov
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
pop
pop
sahf
sbb
in
jge
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jae
sti
xchg
mov
mov
jmp
fildll
pop
fistps
bnd
fistpll
fistps
add
popf
jmp
jmp
push
call
popf
aam
inc
jnp
aas
fildll
pop
fistps
bnd
fbstp
fistps
add
popf
jmp
jmp
push
call
cs
ret
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
call
movsl
xchg
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cs
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
pop
andl
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
hlt
xor
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xchg
xchg
iret
and
add
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jae
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
popa
xor
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
icebp
sub
pop
xor
add
inc
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
jae
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
loopne
mov
xor
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
daa
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
nop
les
insb
sbb
cmpl
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
aaa
inc
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fcomps
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
dec
scas
jmp
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
fnstsw
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
xchg
test
scas
dec
stc
mov
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
repz
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
in
push
jne
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cs
sbb
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
cltd
enter
jmp
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
stos
lock
icebp
mov
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
dec
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lcall
push
loop
jmp
jmp
jmp
fildll
pop
fistps
in
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
push
xchg
adc
xchg
push
add
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
adc
aas
rol
jmp
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
adc
mov
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
or
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xchg
adc
aas
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
test
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
sub
out
adc
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
movsb
inc
popf
mov
add
add
cmp
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lahf
mov
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
lret
inc
pop
sub
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
push
push
daa
std
pop
inc
imul
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
xor
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
aad
mov
inc
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
lahf
adc
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sbb
jae
cmp
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jno
cltd
inc
lods
lods
out
cld
jae
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
subb
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
out
jge
push
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
jae
test
inc
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
pop
enter
add
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
inc
jb
das
dec
or
cmp
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
push
inc
bound
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
jmp
fildll
pop
fistps
imul
add
jae
fistps
add
popf
jmp
jmp
push
call
repz
out
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
arpl
push
add
std
sti
jmp
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
jbe
xchg
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lds
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
xchg
sbb
call
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
int
lahf
jmp
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
and
lcall
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fcomps
out
and
xchg
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
mov
inc
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
push
mov
rep
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
sub
push
mov
inc
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
test
inc
and
push
idiv
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
and
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
pop
and
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
mov
push
movd
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
inc
cmp
outsl
mov
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sahf
xchg
push
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
adc
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cmpb
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
into
sbbl
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
idivb
xor
fldpi
inc
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
push
inc
sbb
leave
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fs
sahf
mov
or
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
pop
stc
es
daa
lret
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
into
out
scas
leave
cmc
aas
and
leave
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
and
test
dec
dec
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jb
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
test
ret
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
xlat
sarb
mov
jl
sub
aas
fildll
pop
fistps
bnd
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
or
cmp
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
shlb
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
clc
lea
jns
ret
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
movb
add
add
add
pop
add
or
add
faddl
add
or
add
and
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
or
arpl
xchg
nop
mov
add
add
add
add
cmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
cmp
loop
or
loop
or
loop
or
add
add
mov
or
mov
or
mov
or
add
add
add
inc
popa
je
insb
inc
js
je
xchg
nop
add
or
add
add
add
lock
add
mov
cmpl
pop
call
push
push
add
fucomi
gs
add
and
pop
mov
je
push
mov
push
add
push
lea
jmp
jl
call
push
sti
dec
dec
mov
add
into
les
jle
pop
jne
pop
pushl
or
inc
inc
xor
push
aas
jno
and
pop
jno
adc
daa
push
icebp
jne
push
cwtl
or
or
cmp
jo
and
rorl
sbb
leave
ret
gs
push
call
test
pop
jle
add
lds
adc
xor
push
jne
sub
or
jmp
push
nop
movsb
enter
movsl
jns
repnz
sbb
pop
sub
ja
add
xor
cmp
inc
cmp
or
je
sarb
cmp
pusha
and
push
call
cmp
xor
inc
mov
push
mov
push
push
mov
mov
or
cmp
popa
add
mov
cmp
pop
popf
enter
mov
adc
sub
push
jmp
jne
lea
push
jo
pop
call
add
sub
pop
shll
fisubs
cld
std
sbb
push
inc
movsl
nop
xchg
dec
and
or
xor
fisttpl
xor
xchg
enter
push
pop
inc
dec
repnz
add
push
jecxz
ret
mov
xor
cmp
lock
lds
xor
mov
mov
je
jmp
inc
push
call
inc
mov
les
push
push
ret
inc
adc
push
mov
je
mov
mov
rcr
inc
xchg
mov
mov
mov
fidivl
mov
inc
mov
sub
sbb
adc
enter
call
pop
cli
push
push
pop
cmp
or
mov
rorb
inc
cmp
and
inc
sqrtps
inc
fsubs
dec
dec
and
pop
add
xor
sti
push
xchg
std
pop
push
cmp
in
push
adc
fstl
add
or
mov
sbb
pop
push
inc
cmpsl
pusha
xor
inc
pop
and
adc
mov
xchg
mov
push
cmpsb
into
ljmp
mov
clc
or
adc
or
mulps
jbe
xor
jmp
adc
lock
fistps
xorb
push
cs
pusha
add
fnstenv
add
shl
xchg
sbb
adc
pop
sahf
mov
cmc
inc
mov
cmp
incb
shl
add
xchg
clc
push
jp
sbb
mov
push
xchg
and
rorl
icebp
fsubrl
mov
or
lock
xchg
or
in
int3
lret
call
adc
out
push
push
push
sub
mov
in
or
insb
in
mov
clc
scas
dec
shlb
jae
inc
push
icebp
lret
cwtl
mov
mov
inc
push
mov
and
lock
sti
setg
pop
pop
mov
sti
cmpsl
mov
pop
lea
movsl
shll
orb
lea
inc
fcoms
xor
call
pop
imul
movsl
dec
xorl
lock
test
or
sbb
stc
xchg
into
adc
les
rorl
inc
rcll
adc
and
aas
mov
fldenv
pop
enter
mov
nop
mov
add
push
outsb
loopne
xor
bound
movsl
sub
fs
adc
pusha
in
subb
adc
call
aas
mov
adc
xchg
mov
aad
rol
cmpsb
and
cmp
and
mov
jmp
push
clc
push
add
es
xor
clc
sbbb
adc
push
cmpsb
andb
or
push
mov
call
and
add
xor
add
xor
ss
pushf
adc
mov
mov
das
inc
imul
mov
frstor
push
push
jl
mov
sub
inc
cmp
test
sahf
rcrl
or
dec
or
push
adc
add
mov
mov
lds
inc
mov
test
dec
aam
dec
sub
push
jne
xor
pop
add
dec
adc
xor
jne
mov
cltd
and
push
lea
sbb
pop
jne
dec
mov
es
mov
cmpl
jne
push
sbb
les
jno
es
sbb
inc
adc
es
loopne
ret
pushf
aam
xor
sbb
testb
dec
inc
adc
enter
xchg
fsubrl
push
jl
andb
aam
push
mov
incb
imul
call
dec
dec
or
cmpsb
xor
fsubs
outsl
lock
leave
push
lods
movsl
mov
adc
push
mov
inc
cmp
push
pushf
sti
or
je
cmp
lock
ljmp
sbb
cs
je
testl
xchg
aad
add
leave
shlb
push
iret
fs
push
es
stos
pop
movsb
js
xor
sub
sub
pop
or
push
fnstenv
xor
sub
or
dec
imul
pop
xchg
cltd
dec
mov
and
aam
mov
pop
es
push
pop
push
andl
push
mov
add
sbb
sbbb
pop
jecxz
std
shr
testl
xor
push
sub
sub
sahf
cmp
call
pop
mov
push
push
mov
aas
lea
xchg
stos
add
add
inc
mov
bound
rcll
xchg
dec
adc
sub
dec
push
sub
push
ljmp
add
lea
push
mov
cmpsb
sub
cmp
mov
push
test
test
sub
push
stos
sub
xchg
mov
rol
pushf
test
jl
xchg
mov
or
mov
orb
adc
cmp
notb
push
into
movb
sub
fistpll
fidivrs
movzwl
ret
gs
adc
or
notb
repnz
mov
mov
sub
push
xor
or
jmp
pcmpgtd
adc
xchg
push
cltd
adc
mov
mov
or
add
dec
and
push
mov
pusha
daa
mov
push
push
jge
jge
lret
add
call
cwtl
loop
test
jns
lods
les
adc
inc
inc
lret
mov
or
adc
mov
or
xchg
pop
sub
inc
sahf
or
lcall
in
xor
mov
inc
in
aaa
inc
cmp
mov
cld
out
dec
adc
jne
push
add
call
daa
pop
mov
sub
push
sbbl
or
pusha
pop
pop
and
loopne
je
add
clc
ret
dec
insb
int3
out
push
jge
push
mov
cmp
pop
sbb
cld
adc
insb
mov
lret
ret
sbb
xchg
lods
fistps
subb
popf
cs
testb
sbb
dec
inc
insl
push
pop
bound
std
mov
leave
mov
data16
dec
rcrb
xchg
int3
cmp
push
mov
cld
out
mov
prefetchnta
pushl
pop
test
jge
je
xor
cmpsb
adc
push
mov
adc
or
cwtl
xor
add
or
sbb
pushf
and
or
lds
mov
rorb
sbb
je
add
jmp
outsb
push
mov
pop
clc
add
jb
adc
adc
xchg
push
insl
sbb
xor
mov
xor
cmp
mov
cwtl
fnstcw
fisttps
pushf
or
vandnpd
daa
mov
add
sub
xor
test
mov
cld
sub
sbb
and
test
pop
cli
loop
ja
sti
push
movsb
push
test
sub
add
push
in
shll
mov
push
and
sub
mov
inc
mov
shrb
mov
and
push
adcb
stc
rcll
sbb
dec
dec
out
adc
mov
pop
cmp
push
inc
popa
adc
popf
cmp
adc
or
scas
add
mov
stos
rclb
pop
lods
and
inc
push
sub
mov
cs
xor
push
inc
nop
out
jecxz
mov
test
lods
mov
pusha
in
out
imul
or
or
push
sub
mov
jmp
add
and
lcall
sbb
test
push
lock
nop
mov
call
shll
or
sub
push
jne
nop
push
nop
and
push
mov
in
mov
call
inc
and
cmp
push
lds
scas
idiv
stos
sub
inc
sbb
sbb
je
sti
sbb
fcoms
clc
cmp
scas
mov
or
clc
ret
push
sarl
add
mov
pop
push
cmp
add
push
push
fcmove
and
xlat
popf
aad
xor
inc
dec
loope
rolb
jne
cltd
or
and
lods
lds
mov
mov
mov
cs
add
xchg
enter
dec
mov
pusha
lea
xchg
push
push
or
push
dec
push
xor
mov
xchg
adc
rcrl
sbb
movsl
push
sbb
sub
adc
testb
in
mov
notl
or
jmp
or
in
repnz
mov
inc
and
sub
nop
push
add
js
mov
cltd
movb
in
dec
mov
cld
jne
or
clc
jbe
adc
add
adc
outsl
or
test
jmp
int3
push
push
sub
push
sub
cmpb
je
scas
and
mov
stos
cld
in
push
cld
and
or
add
push
mov
xor
mov
clc
sub
inc
fisubrs
add
cmp
test
adc
push
outsl
and
inc
mov
sub
xchg
add
jno
adc
cmp
jg
mov
adc
mov
mov
mov
leave
inc
or
jecxz
push
adc
sbbb
out
add
push
and
addr16
mov
sub
inc
sub
subl
or
push
jno
sahf
mov
sbb
and
sbb
pop
push
lret
call
int3
addr16
pop
sbb
or
les
jo
pop
cmp
loope
and
std
and
and
inc
leave
fisubs
aam
jo
xchg
cld
pop
test
fcompp
adc
sub
push
dec
stc
mov
mov
in
gs
jns
dec
lock
stc
cld
add
sbb
and
sbb
add
and
push
cmc
xlat
and
adc
push
sub
pushf
pusha
and
int
jno
scas
push
and
sub
mov
inc
xchg
and
add
hlt
mov
loop
cs
adc
loop
dec
inc
ds
rclb
lods
mulb
and
mov
push
aas
push
and
add
daa
adc
jg
dec
test
test
adc
mov
sbb
add
xor
cmp
dec
das
cmp
daa
jbe
inc
enter
adc
clc
xor
sub
xchg
xor
bound
or
pop
push
cmp
mov
inc
in
xchg
int3
mov
dec
lods
adc
nop
cmp
lock
and
adc
mov
jmp
push
or
inc
push
daa
dec
inc
je
stos
push
or
inc
push
push
or
jno
adc
mov
xor
sub
jmp
push
repnz
adc
jl
es
or
repz
xlat
sbb
enter
in
jmp
out
sub
mov
jno
or
mov
jo
lea
inc
adc
mov
push
and
sbb
adc
and
mov
pop
cmpsb
and
and
xor
aam
or
add
test
mov
pop
jmp
pop
ret
call
idivb
adcb
sub
add
popa
xorl
clc
pop
cwtl
cltd
jne
ds
adc
push
call
test
inc
fs
push
xchg
add
push
jp
adc
les
or
inc
or
je
fmuls
outsb
scas
lret
iret
mov
mov
iret
push
dec
pop
xor
pop
cmpb
insb
dec
dec
idivl
sub
push
or
fcomi
ds
call
imul
or
cld
mov
imul
call
adc
out
push
cltd
inc
mov
insb
push
xor
mov
mov
push
cmpsb
pop
push
add
roll
test
push
mov
test
push
and
dec
cmc
data16
sbb
or
push
jbe
mov
mov
les
cmp
dec
int3
fs
add
sub
out
add
dec
push
adc
cmpsb
repnz
inc
test
add
daa
inc
cwtl
adc
inc
sbb
test
pusha
inc
notb
inc
push
daa
xor
lock
std
jecxz
lcall
xchg
call
call
ljmp
xor
xchg
adcl
push
and
loopne
jno
inc
jp
cmp
ror
adc
xor
loopne
subl
enter
test
aas
sbb
adc
repz
mov
stos
mov
adc
shrl
push
lret
imul
mov
cs
add
push
sbb
in
cmp
cs
rcll
inc
call
push
or
leave
push
and
cmpsl
mov
adc
scas
mov
dec
aam
xchg
jg
jp
inc
xchg
inc
aad
xchg
test
mov
pminsw
shlb
mov
dec
xchg
movl
mov
fsubl
sub
mov
andl
dec
sti
adc
dec
popa
jmp
in
cmpsl
out
xchg
and
lock
xor
clc
sarb
scas
mov
cmp
xchg
push
push
cli
inc
dec
loop
inc
sbb
dec
xchg
pop
cmpsb
adcb
mov
or
xor
sub
lret
jb
nop
adc
outsl
mov
pop
and
and
or
mov
adc
jmp
push
and
xor
aas
jae
fwait
jmp
cld
test
bound
rsqrtps
push
push
mov
mov
outsb
mov
push
mov
push
jle
in
out
lea
dec
add
add
cld
jne
and
popf
push
or
and
and
or
roll
pop
repz
inc
xor
sub
push
mov
inc
stc
sub
dec
lret
je
mov
fnstenv
push
fiadds
aas
ret
adc
push
xchg
bnd
fdivrl
inc
or
jo
mov
cmp
jne
or
cmpsl
mov
add
mov
dec
inc
inc
imul
hlt
or
mov
in
pop
and
pop
push
mov
inc
lcall
sti
mov
push
lcall
inc
pop
add
xor
sub
jge
lds
push
sbb
call
dec
out
test
and
daa
pusha
xor
clc
add
xchg
push
std
ljmp
es
mov
fs
xchg
or
pop
dec
push
fstps
fxtract
xor
jns
mov
mov
movsb
xor
sub
fildl
sub
sbb
pop
lea
xchg
adc
clc
or
ljmp
je
pop
sub
add
mov
clc
popl
lock
or
inc
cmp
les
insb
mov
ljmp
loope
or
dec
mov
mov
push
or
mov
ljmp
push
jmp
rclb
fildl
ja
inc
push
mov
data16
aam
test
outsl
nop
jl
mov
cmp
jae
pop
adc
rclb
rolb
pop
cmp
shlb
pop
and
clc
inc
stos
enter
mov
add
add
movsbl
mov
sub
add
and
jbe
push
xchg
scas
cmpb
inc
pop
and
mov
mov
insl
mov
xchg
jecxz
sbb
xor
imul
cld
and
mov
dec
test
aam
mov
andps
add
push
rolb
or
dec
stc
xor
inc
xchg
dec
bound
inc
jne
push
mov
nop
xchg
fstl
pushf
popf
aas
into
sub
jg
and
and
add
into
dec
mov
jmp
pop
cmp
mov
pop
mov
push
sahf
jmp
adc
out
xchg
aad
cmp
insb
cmp
and
int
das
pop
je
movl
cmc
mov
xor
xchg
repz
xor
and
adc
loopne
dec
daa
mov
cmp
adc
mov
dec
inc
push
ret
stos
push
cltd
add
dec
sbb
daa
push
hlt
in
lea
ret
jl
test
mov
test
orl
xor
sub
orl
into
mov
inc
or
mov
and
dec
lahf
lcall
bound
test
std
jb
ret
pusha
popa
test
rcrb
out
mov
push
dec
cmc
push
mov
out
jbe
inc
inc
pop
mov
adc
aas
sub
inc
sbb
movsb
shrl
les
std
push
xchg
and
cs
pop
mov
nop
or
cmp
out
sub
push
loop
dec
mov
movl
out
adc
inc
push
xor
inc
imul
int
mov
inc
scas
popa
cwtl
loopne
dec
dec
mov
push
inc
stc
sub
imul
or
and
xchg
loop,pt
jmp
rorl
popf
ds
ds
mov
testl
je
ds
fisubl
pop
jb
clc
test
cmc
in
icebp
mov
push
movsb
inc
inc
test
push
cwtl
adcb
jo
mov
dec
inc
cli
repnz
pop
cmp
scas
pop
outsl
in
scas
mov
and
adc
or
call
xchg
scas
das
cmpl
sub
mov
inc
or
nop
sbb
pop
in
bound
orl
addl
and
or
pop
lea
push
adc
fstl
push
add
inc
cmpb
hlt
and
mov
cwtl
movsl
add
lods
lcall
rclb
inc
rep
into
dec
mov
adc
sub
jns
mov
test
xchg
mov
or
xchg
push
dec
add
push
shrl
add
push
dec
adc
mov
dec
movsb
add
pop
shl
pop
fstps
jle
push
adc
sbb
xchg
clc
pushf
popa
add
mov
mov
test
frstor
cmp
add
push
jecxz
loop
push
sub
sub
dec
xlat
push
jp
pop
mov
push
popf
loop
add
icebp
icebp
inc
add
jmp
scas
cmp
xor
cwtl
loop
add
cmpsb
aaa
adc
and
ljmp
fisttps
pop
mov
iret
pop
pop
adc
mov
or
mov
fiadds
add
mov
xor
lea
stc
aaa
sub
test
or
arpl
push
cmp
sub
sbb
push
sarb
jbe
pop
inc
and
inc
test
adc
mov
add
pop
idiv
idiv
sbb
mov
adc
test
rolb
cwtl
adc
mov
and
dec
cwtl
mov
adc
xchg
mov
pop
cltd
imul
add
and
pop
pop
jecxz
mov
inc
sbb
mov
pop
pop
sub
inc
dec
lock
cmp
clc
test
scas
adc
test
or
pop
pop
sbb
sbb
sub
sar
xchg
pusha
fs
dec
mov
xor
mov
outsl
push
enter
xor
test
push
enter
xor
add
cwtl
dec
cmp
fcoms
ret
push
sub
push
mov
aam
mov
das
ret
pop
cmp
pop
and
lods
ljmp
add
or
repnz
cwtl
inc
inc
inc
inc
adc
push
jbe
and
dec
arpl
add
fnsave
and
iret
movsl
jnp
and
add
sbb
sbb
lds
into
jecxz
xchg
clc
imul
popa
sarl
les
push
dec
enter
bound
and
dec
rorl
or
jb
cwtl
cwtl
mov
pop
push
push
xor
dec
std
cmpb
repnz
lock
test
add
les
ret
jmp
mov
push
scas
jmp
xchg
hlt
push
push
sbb
mov
push
mov
sub
mov
xor
sbbl
js
push
sub
jmp
or
jno
sbb
push
orl
aaa
and
xchg
cmp
sahf
sbb
das
sbb
fcoml
les
test
inc
cmp
insl
aas
cltd
sbb
sub
dec
dec
inc
loope
sti
push
out
inc
xchg
repz
scas
jmp
js
jge
lds
push
adc
pop
push
je
mov
jmp
push
enter
adc
pop
push
dec
sub
cld
jmp
scas
sub
call
pop
push
outsb
xchg
dec
jmp
dec
adc
pop
test
std
dec
bound
xor
testb
and
adc
push
inc
inc
dec
push
jl
fsubrp
push
mov
xor
daa
or
inc
xor
int3
mov
jo
lods
dec
mov
and
xchg
in
int3
sbb
data16
in
jmp
mov
repnz
ja
inc
xor
inc
out
xchg
mov
sub
outsl
movsb
aad
push
mov
lods
les
int
out
dec
movsl
push
push
inc
inc
push
xchg
cmp
and
sub
push
rclb
in
adc
and
aaa
jno
and
fisubrs
lcall
push
or
mov
push
cli
xor
xor
and
and
insb
push
push
in
mov
rolb
cwtl
push
or
out
adc
hlt
in
adc
cld
push
and
jo
mov
sbb
mov
adc
insl
mov
jmp
mov
es
shl
fs
mulb
int
js
mov
push
into
sbb
fisttpl
sets
sbb
insl
test
in
loope
or
in
mov
jg
in
loope
or
xor
lahf
test
jmp
test
movsl
movsl
dec
cli
add
and
adcb
sti
xor
xor
mov
je
mov
hlt
std
fildll
jno
insb
sti
add
inc
in
jb
mov
repnz
ljmp
mov
insl
adc
fists
and
jo
sbb
and
xchg
jg
mov
push
xor
mov
mov
add
outsl
js
leave
frstor
ret
incl
push
lea
and
push
pop
nop
loopne
mov
rol
push
dec
shufps
cmp
xchg
cmp
lods
pop
xchg
test
adcb
test
sahf
int3
daa
into
adc
les
jge
push
pop
shlb
xor
orb
push
cltd
sbb
push
fsubl
test
and
cmp
idiv
push
sbb
js
xor
adc
repz
sub
dec
loopne
call
rcr
xor
jmp
push
fisubrs
sbb
inc
lock
cmp
push
and
test
cltd
mov
hlt
sub
add
sbb
and
loopne
mov
push
xchg
push
movsl
lods
xchg
cli
in
push
sar
push
adc
aas
out
xrelease
mov
inc
insl
add
adc
xor
lret
outsl
cld
aas
xor
add
add
pop
lahf
in
ficompl
cmp
mov
or
stc
addr16
push
test
rorl
mov
inc
mov
xchg
push
sbb
mov
imul
sub
sub
pop
xor
xor
xor
sbb
js
cmp
adc
dec
jno
or
mov
shrl
push
inc
cltd
int
dec
inc
sub
xchg
pop
dec
rcll
sub
mov
out
pop
or
inc
adc
mov
enter
jl
in
sbb
adc
mov
cmp
mov
int
jle
push
xor
fs
or
push
push
repnz
dec
xlat
mov
jmp
rcrl
fisubs
pop
cli
jo
loope
adc
loopne
xchg
mov
lods
imul
pop
xchg
sti
inc
movsl
push
cmpb
lea
mov
rclb
add
stc
sbb
xor
add
adc
stos
faddl
xchg
mov
outsb
movsb
scas
negb
jne
lock
push
call
lea
and
js
mov
sub
sbb
out
and
cli
and
popa
mov
lock
mov
mov
std
fs
mov
sbb
inc
cli
adc
aad
scas
js
ja
pop
jp
test
rolb
mov
test
pop
mov
xchg
adc
repnz
push
cmp
add
adc
pop
and
call
mov
int3
je
sbb
pop
insl
mov
pop
arpl
fwait
pop
and
jae
or
sahf
jbe
imul
jg
jp
fidivs
ja
push
je
cmp
add
mov
shr
dec
push
dec
fwait
push
mov
jge
ljmp
and
pop
sbb
sbb
icebp
daa
xchg
xor
xchg
std
xchg
sahf
dec
and
jne
push
inc
mov
xchg
jne
popf
in
push
adc
cld
push
xor
pop
sub
dec
aam
mov
add
xor
sbb
div
lds
mov
or
arpl
jo
in
mov
enter
out
xchg
loope
movsl
stc
pop
daa
mov
movsb
push
push
fmuls
popl
sub
sbb
mov
add
or
movsb
fs
pushf
and
and
xor
insl
or
orb
or
fstpl
sbb
push
push
imul
jg
mov
rcrl
pop
mulb
sub
or
sarb
jmp
push
add
stos
lcall
inc
xchg
ja
cmp
outsl
loop
sub
and
cmp
dec
xor
and
sbb
mov
pop
leave
adc
inc
sub
inc
nop
xor
and
push
mov
push
adc
dec
testb
push
jecxz
cs
push
xor
jmp
iret
ja
xor
and
sbbb
bnd
ljmp
cmc
movsb
sub
push
push
or
add
adc
and
jge
roll
pushf
mov
sbb
jb
mov
add
leave
push
mov
or
mov
mov
adc
inc
cmp
push
jl
ret
test
aaa
cld
aaa
gs
xchg
rorl
jo
mov
dec
pushf
xchg
push
lods
popf
adc
sub
xor
mov
test
push
or
push
inc
xor
cmp
ret
push
or
push
pop
mov
push
push
inc
pop
cltd
idiv
test
shlb
sub
jmp
ret
in
mov
mov
inc
dec
lea
dec
enter
repz
data16
data16
outsl
addb
sub
cltd
or
push
sbb
sgdtl
mov
in
fsubrs
xchg
jge
inc
mov
cmp
lods
enter
iret
out
inc
lock
cmp
mov
adc
xor
push
or
daa
call
shlb
mov
pop
movsl
loop
test
lea
lods
imul
insb
loope
lods
les
imul
push
hlt
nop
xchg
fisubs
sub
push
dec
push
sbb
push
mov
mov
and
mov
push
sub
adc
call
mov
dec
adc
mov
add
call
ja
xchg
add
das
mov
js
lods
sub
sbb
dec
sbb
mov
fwait
sbb
add
adc
lret
add
repnz
mov
fwait
cmp
push
jb
xor
sbbb
aas
push
pop
dec
sub
daa
add
push
and
daa
add
scas
sub
jmp
sub
jbe
jo
les
out
and
and
sub
fs
and
xchg
push
pop
pushf
stos
and
or
shrl
mov
xor
pop
inc
out
dec
popf
enter
jo
hlt
call
jge
push
ljmp
or
fs
cmp
dec
adc
fdivrs
orl
into
or
mov
push
or
fidivrl
hlt
mov
add
xor
rorl
sbb
shll
mov
push
add
or
push
sbb
jne
push
mov
inc
std
or
inc
mov
fsubrs
mov
jge
fcompl
sub
jmp
lods
push
aaa
mov
sub
sub
inc
and
movsl
dec
rcrl
sub
cltd
cmpsb
sub
movl
mov
dec
push
xor
lds
in
ss
cwtl
cltd
ret
in
push
int
inc
and
mov
pop
nop
sahf
lods
sbb
mull
mov
sbb
rclb
fs
or
es
dec
pop
sub
lret
ret
push
lret
push
push
adc
and
pop
dec
enter
and
pop
daa
les
xor
sarl
clc
roll
cltd
ja
es
pop
mov
lods
adc
push
sbb
sbb
shlb
mov
dec
sbb
xor
lods
fistl
mov
mov
push
lods
cmpsl
push
jp
xlat
mov
popf
call
negb
mov
jne
adc
xchg
ss
or
jle
push
mov
adc
sbb
lds
mov
sbb
adc
fwait
or
pop
cltd
sub
sbb
jp
lea
roll
mov
gs
xor
inc
movsl
mov
mov
sub
aas
ljmp
lods
push
in
pushf
mov
xor
mov
mov
and
sub
iret
mov
test
sbb
and
xor
inc
xchg
ja
jae
xlat
cltd
dec
je
inc
inc
add
adcl
adc
test
pop
call
xchg
and
sub
je
or
push
ret
sub
cmp
mov
sbb
or
mov
adc
gs
push
mov
sbb
and
push
cwtl
dec
mov
jae
fsubs
inc
push
bnd
mov
in
std
pop
cmpsb
pop
adc
push
mov
jg
in
in
inc
push
xchg
es
mov
cmp
add
leave
add
cmpl
push
dec
pop
mov
bound
and
adc
inc
test
add
sbbb
outsb
pop
and
hlt
xor
xor
dec
sbb
lcall
jg
je
mov
push
and
jno
shlb
mov
push
dec
jle
addr16
mov
leave
fistps
cmpsl
and
fs
ret
push
or
adc
pop
push
inc
cmpb
call
xchg
dec
push
and
xor
jl
jge
mov
sub
aaa
sbb
adc
push
mov
xorl
shr
sub
sbb
leave
jecxz
inc
cmp
fcoml
add
cmpw
jne
push
test
adc
or
add
jae
ret
test
inc
cmp
push
jge
lea
xor
pop
jg
xchg
and
jne
lods
adc
inc
int
ret
cld
xlat
push
sbb
xor
pop
pop
dec
lods
ret
push
std
pop
push
pop
jl
push
or
pop
dec
adc
or
sbb
rclb
adc
insl
mov
push
inc
push
out
enter
mov
out
lret
mov
or
cmpsb
fsubp
jmp
sub
je
xchg
pop
mov
adc
fists
dec
insb
movsb
push
js
les
mov
lods
cmp
ds
int3
and
mov
nop
xchg
add
popf
lock
jg
pop
and
dec
mov
imul
sbb
xor
jne
nop
subb
in
and
mov
enter
test
and
enter
pop
int3
inc
repz
mov
mov
push
cmpsb
dec
push
roll
mov
pop
les
call
pop
inc
gs
sbb
aaa
pop
mov
int3
shl
inc
add
int3
cmp
or
jmp
and
bound
add
ret
sub
xor
and
rclb
xchg
inc
jl
roll
mov
mov
and
dec
lods
daa
das
add
sbb
jne
test
movl
mov
pop
cld
lock
das
pop
fstpt
xchg
dec
daa
dec
lahf
cmc
int3
fs
add
adc
and
mov
pushf
mov
add
sarb
xchg
add
and
mov
es
xchg
xchg
outsl
inc
je
mov
cmp
cmp
sarb
in
dec
push
sbb
push
xlat
mov
imul
movsb
mov
adc
call
pop
xchg
dec
data16
cld
rclb
pop
je
icebp
add
mov
js
lcall
shlb
idivb
push
mov
inc
clc
jb
loopne
mov
add
dec
mov
sbb
je
inc
inc
mov
or
or
jmp
mov
sub
lea
xchg
jmp
dec
or
inc
lods
ficoml
sub
mov
adc
pushl
dec
sbb
mov
fildl
mov
cmpsb
fildll
sub
sbb
lock
pushf
les
cmpsb
cwtl
nop
lods
cmpsl
xchg
xchg
ljmp
xchg
rorb
imul
mov
mov
cmp
inc
xor
sar
call
mov
cmc
hlt
gs
es
cwtl
cmp
addb
loopne
add
adc
cwtl
int3
jns
jne
in
cli
pop
and
dec
fcomps
jbe
or
push
or
cmp
jb
into
xor
jmp
or
sbb
movsl
jmp
sub
inc
inc
push
and
xorl
sub
movsl
loop
jl
in
sbb
inc
jge
mov
jp
fstp
in
cmp
call
dec
add
cmp
jl
jns
shrb
mov
jmp
clc
jno
adc
pop
call
inc
push
dec
push
je
sub
call
scas
push
mov
in
cmp
jg
notl
fcomps
rolb
add
fidivrl
int3
jp
xlat
rolb
or
rclb
into
lock
sbb
xchg
add
jbe
call
ds
push
xchg
or
scas
dec
jmp
sub
inc
movsl
mov
mov
filds
pop
and
xor
pop
in
jg
inc
inc
test
cmp
inc
mov
std
and
add
mov
push
push
ret
stc
scas
xchg
test
inc
or
mov
popf
ret
inc
xor
and
xor
ja
negb
mov
nop
lock
cmp
lock
test
out
and
mov
and
sub
add
mov
fdivrl
lcall
dec
ljmp
push
inc
fidivs
andl
xorl
lahf
cwtl
popa
mov
movsl
test
test
adc
jp
jg
or
adc
xchg
push
sub
jo
mov
iret
sub
cmpsl
es
cs
push
add
icebp
in
inc
aad
or
fistps
mov
insl
or
fstpt
test
sbb
div
inc
jmp
adc
pusha
das
enter
cmp
test
add
test
jbe
cmp
lea
cmp
jb
orb
sbb
adc
pop
adc
mov
cmp
xchg
or
cmpsb
jmp
test
add
and
inc
adc
or
pop
daa
in
jae
sub
and
lret
test
cmp
cmp
add
mov
test
mov
cmpsl
mov
mov
jb
mov
xchg
jmp
adc
xchg
and
xchg
scas
pop
ljmp
std
das
data16
inc
push
sub
mov
test
test
push
mov
mov
pop
sub
dec
adc
mov
add
mov
jb
adc
js
push
or
cs
sbb
inc
jl
pop
and
push
lahf
cltd
pop
xor
xor
mov
rolb
call
clc
pop
addb
jmp
aam
and
push
ret
push
ret
xor
out
jmp
sub
fnstenv
or
lods
adc
cmpsl
mov
repnz
rcrl
push
mov
dec
fwait
mov
lret
add
lods
push
xor
sbb
dec
inc
call
jo
ja
cmp
mov
cld
test
pop
jmp
clc
popa
movsb
jp
mov
inc
divl
inc
push
ds
dec
int3
mov
popa
mov
jne
push
dec
sbb
sbb
daa
jmp
in
rcrl
fistl
testl
lahf
cmp
movsb
or
mov
or
ss
adc
mov
mov
sub
push
cld
jno
test
call
adc
sub
mov
pop
stc
adc
cli
outsl
mov
jb
pop
sbb
jg
dec
loope
cwtl
sarb
inc
orl
xor
jns
movsb
icebp
lds
adc
in
mov
cwtl
or
mov
test
jne
movsb
mov
mov
cli
rcrl
or
sbb
sub
lods
sbb
cli
push
push
mov
xchg
pop
xchg
stos
and
imul
and
push
imul
sbb
jb
sub
jmp
jb
push
xchg
pop
inc
sbb
shll
lock
dec
mov
mov
or
les
jge
je
test
sar
call
das
cli
test
cmpb
push
and
hlt
and
mov
jmp
and
das
push
jmp
rcll
psubw
xlat
adc
jbe
push
jle
stos
sub
movl
adcl
adc
sbb
hlt
adc
inc
movb
subl
sbb
sub
sub
inc
pop
xchg
and
cmp
loopne
push
inc
call
pop
sub
jb
xchg
mov
or
in
add
or
mov
and
push
lret
in
sbb
inc
jno
data16
or
les
lds
jmp
mov
addr16
movsl
pop
testb
mov
and
xchg
cmp
cmp
jnp
mov
data16
push
push
pop
jne
pop
adc
mov
rcrb
fists
insl
push
ja
mov
inc
mov
out
add
sbb
sar
movsl
cld
fwait
xor
jmp
imul
jmp
dec
push
mov
imul
bound
insb
outsl
xchg
lret
mov
pop
push
jecxz
dec
loope
push
pop
jecxz
dec
shll
testl
mov
fs
es
xlat
push
sbb
pushf
fs
adc
xchg
int
dec
sub
push
cltd
out
int
movsb
cs
and
cs
sub
push
cmp
mov
adc
daa
stc
mov
xchg
adc
push
stos
fs
cwtl
lock
xchg
add
insb
cli
adcl
mov
addr16
jecxz
push
hlt
push
out
btc
test
sub
adc
pop
xchg
xor
and
cld
dec
mov
orl
call
pop
cmp
dec
xor
pop
fwait
aaa
and
sub
adc
pop
pop
pop
jbe
push
rorl
pop
xchg
xor
jnp
xor
imul
xchg
test
movb
xchg
out
mov
or
pop
fisttps
xchg
sbb
inc
sub
adc
sbb
xor
cmc
mov
jo
aas
loope
pusha
fisubl
push
bound
jno
clc
je
xchg
pop
jo
add
hlt
inc
push
es
insb
inc
mov
movsl
jmp
xchg
jns
mov
cmp
js
roll
dec
or
cli
push
and
lahf
mov
add
push
popf
push
xchg
and
push
lret
dec
icebp
aad
mov
cmpsl
pop
fs
jno
xchg
sarb
icebp
dec
test
mov
sub
xchg
mov
cmp
mov
pop
inc
fwait
push
mov
dec
repnz
ss
mov
ret
push
or
movsl
inc
divb
iret
adc
incl
fwait
je
lods
xchg
mov
jo
sti
push
inc
add
out
adc
adc
pop
xor
sub
xchg
add
or
scas
es
popa
aas
cmp
and
inc
pxor
mov
mov
inc
xor
bound
fmuls
sahf
dec
sub
pop
dec
xor
loopne
clc
push
pop
push
mov
push
xchg
lahf
loope
inc
pop
ret
sbb
lea
aad
inc
cmp
andl
push
sbb
push
push
inc
jb
jp
xchg
test
mov
call
dec
mov
mov
rcrl
testl
dec
inc
or
int3
inc
daa
adc
jp
out
or
pop
xchg
and
or
push
call
jmp
adc
and
push
push
or
jmp
int3
dec
cmpsb
jno
inc
mov
insb
imul
pop
lds
xor
push
xor
dec
loope
pop
fs
cld
and
xor
adc
or
movsb
je
loop
cmovb
fs
mov
inc
cwtl
adcb
add
or
dec
gs
out
xor
mov
inc
push
sub
push
loop
dec
adc
cwtl
xchg
fsubrs
cmp
lcall
push
sub
je
push
push
lods
out
xor
scas
rcll
jge
mov
inc
or
neg
hlt
inc
das
pop
push
nop
cld
ficompl
or
dec
pop
test
ret
js
ret
cmp
xchg
xchg
sub
daa
xchg
push
in
and
sub
adc
stos
or
ds
pop
jne
pop
subb
inc
call
fs
xor
pusha
sbb
ljmp
cltd
pop
rorb
stc
andb
call
in
sub
je
jo
sub
and
punpckhdq
xchg
lock
and
push
and
mov
test
mov
mov
in
dec
or
xor
push
pop
push
and
bound
pop
pop
loop
cmp
add
dec
insl
adc
sbb
fisttpl
adc
mov
sti
sub
popf
push
inc
stc
pop
leave
inc
sbbb
movsl
std
movsb
dec
pushf
push
mov
sub
fs
sti
adc
xor
lock
push
sbb
call
mov
inc
inc
popa
inc
add
scas
and
loopne
pop
mov
cmc
test
lock
gs
jne
jns
pusha
xor
ja
and
add
dec
jno
negl
imul
dec
push
lret
aad
lods
orl
movsb
enter
gs
test
inc
push
lahf
jno
lret
mov
sbb
test
clc
jmp
sbb
movb
adc
cltd
aam
mov
sbb
push
mov
or
orb
or
call
es
adc
dec
bound
or
and
std
sbb
pop
inc
loop
lret
and
fstl
cltd
mov
clc
add
adc
adc
sbb
ret
inc
push
xor
sbb
adc
dec
sub
mov
push
mov
adc
cmp
pop
add
ficoms
xchg
push
daa
mov
addr16
adc
div
cmp
rclb
jbe
push
out
stc
imul
push
lods
cmp
enter
jne
fsubr
adc
push
out
pop
and
fst
daa
cld
adc
pop
mov
test
sarl
adc
sbb
cmc
aam
mov
lret
sbb
aad
jne
out
bound
sbb
jbe
ljmp
call
pop
inc
inc
dec
dec
fdivr
mov
add
test
jno
mov
push
fs
inc
call
inc
adc
out
dec
push
fdivs
popf
lahf
pushf
mov
lock
push
into
scas
xor
pop
mov
jnp
adc
inc
xor
fistps
inc
mov
jb
push
loope
loop
test
std
inc
or
and
sbb
push
sqrtps
sub
lahf
ss
dec
sub
sbb
sbb
xchg
sbb
fbld
add
pop
adc
imul
jae
dec
sub
subb
cmp
fidivs
jmp
ja
xchg
int
mov
les
fldz
sbb
loopne
adc
popf
mov
add
adcl
dec
sub
jle
outsb
adc
cwtl
add
in
mov
repnz
mov
cmpsl
push
dec
xchg
out
repz
stc
add
mov
add
fwait
call
mov
lock
pop
packssdw
adc
xor
ret
test
cmp
pushf
xchg
cld
cld
xchg
pop
cli
test
gs
sbb
lcall
lods
lock
lahf
pop
sub
adc
and
fmulp
or
adc
and
lock
and
pusha
sub
add
jne
inc
jmp
jge
dec
pop
aam
jno
call
mov
mov
aaa
shlb
mov
jl
lret
movsb
jecxz
jmp
xchg
jbe
fs
or
mov
fstpt
fmull
jae
test
fs
out
push
test
outsb
cltd
sti
ret
std
mov
sub
adc
mov
cs
daa
jbe
inc
hlt
and
test
push
gs
and
cmp
in
ficoms
and
psubq
push
cmp
test
lea
xchg
push
lea
ret
mov
xchg
xchg
cmp
leave
pushf
orl
push
mov
sub
decb
pop
pop
xchg
mov
cmp
movswl
push
in
xor
jmp
test
adc
sbb
not
adc
mov
call
or
adc
test
adc
xor
push
or
sarb
sub
and
cmp
enter
push
adc
add
and
xor
mov
lods
xor
adc
call
or
jne
andb
jno
cmp
jnp
inc
push
imul
or
pop
pop
push
pop
mov
test
sub
clc
xor
push
bound
stc
dec
xchg
addr16
push
ja
loope
and
adc
add
popf
or
push
add
add
in
pop
xchg
pushf
cli
shr
adcl
adc
pop
push
subl
adc
jge
mov
decb
sbb
lcall
call
cmp
inc
or
repnz
jge
scas
mov
outsb
cli
adc
inc
push
cmp
mov
daa
movsl
xor
scas
lock
xchg
jae
daa
fsubr
pop
jmp
push
leave
imul
xchg
and
cmp
ret
rcll
stos
lret
loopne
pop
add
rorl
sbbb
cmp
push
add
xchg
lret
adc
daa
inc
pop
int3
inc
and
repnz
call
pop
out
push
or
dec
push
sub
std
int
xor
xor
adc
outsl
nop
mov
push
xor
jl
imul
cwtl
scas
popa
adc
sbb
sahf
or
sbb
lcall
sbb
and
ret
in
fisubrl
testb
xchg
adc
mov
adc
dec
std
push
jle
push
dec
sub
ds
ja
jg
fisubs
fs
dec
inc
mov
push
push
inc
inc
cwtl
cmovno
jg
mov
or
daa
out
pop
jno
and
and
adc
lahf
mov
test
jb
mov
jne
hlt
mov
xchg
and
jae
xchg
enter
pop
neg
clc
loop
cmpsb
notl
in
imul
cmp
push
adc
cld
test
mov
je
inc
xchg
sub
and
pushf
movl
sahf
roll
pop
pop
mulb
ss
mov
shr
sahf
pop
test
xlat
sti
mov
mov
adc
dec
push
inc
in
lahf
mov
sahf
fisttps
clc
sar
fs
xchg
or
sbb
push
icebp
es
clc
or
push
aad
iret
jmp
add
and
std
push
or
sub
js
push
fmull
mov
mov
js
and
js
sbb
andb
adc
enter
mov
adc
xor
push
sbb
sbb
jge
cmp
adc
adc
js
sub
push
and
enter
push
lds
or
mov
cwtl
push
movl
in
sub
nop
or
sbb
push
add
jmp
outsb
xor
sub
xchg
mov
push
js
test
int3
sub
or
popf
clc
mov
jo
mov
sub
mov
and
push
push
notl
lock
and
mov
jo
sub
les
les
sbb
adc
fs
pusha
sbb
pop
mov
jp
and
adc
mov
adc
or
sbb
xor
mov
jmp
xchg
sub
cmp
push
and
les
or
mov
jbe
and
insl
adc
or
outsb
sbb
or
scas
xchg
inc
enter
cld
ds
and
outsb
mov
adc
insl
mov
mov
cmp
dec
les
adc
mov
xchg
jle
push
inc
scas
and
dec
fistpll
or
and
add
sbb
dec
out
js
mov
cmp
inc
cmp
inc
sub
sbb
fbld
repnz
mov
mov
mov
dec
xor
or
or
frstor
les
js
inc
xor
xchg
mov
and
xlat
inc
or
and
movsb
daa
clc
adc
or
xor
adc
loop
outsl
xor
or
ret
and
sahf
out
movsl
add
and
xchg
shlb
bound
sbb
mov
or
test
daa
sub
or
call
xor
out
or
xchg
sbb
xchg
cwtl
mov
push
sbb
ret
and
enter
bound
jo
and
imul
sbb
or
xorb
or
mov
and
adc
cld
outsb
xor
insb
dec
sbb
push
fmull
test
push
mov
add
pop
nop
lahf
and
add
and
or
add
stc
test
add
sbb
dec
or
sbb
nop
aad
fsubs
leave
lret
nop
mov
enter
xor
xchg
and
shlb
insb
je
movsb
adc
or
adc
inc
popa
xor
push
inc
test
sbbb
in
jno
outsl
sbb
mov
test
xor
popa
jno
xor
mov
adc
aam
mov
xor
sbb
outsl
xchg
sub
cwtl
ljmp
or
aaa
jp
inc
xor
pusha
xor
jo
mov
or
mov
cmp
cmp
push
jno
xor
insb
or
andl
and
pusha
iret
jo
loop
cmp
push
xor
push
je
or
pushf
cmpsb
push
inc
or
sbb
xchg
and
cmp
sbb
icebp
or
xor
push
or
inc
adc
adc
lods
dec
xchg
test
test
arpl
xchg
xor
xor
mov
adc
outsl
enter
and
cmp
mov
jg
or
rorb
pop
outsb
mov
mov
xor
cmp
inc
cmp
inc
and
mov
sub
arpl
les
pop
adc
dec
push
cld
lret
ficoms
cmc
or
aam
dec
test
xchg
mov
push
aam
js
adc
xchg
dec
adc
pop
push
mov
ds
repz
jo
jnp
dec
inc
or
sbb
dec
shll
dec
or
clc
outsl
adc
mov
mov
adc
add
inc
int3
js
sti
or
clc
inc
addr16
jl
push
mov
aam
mov
loopne
mov
sbb
movsb
or
inc
outsb
and
inc
call
arpl
sbb
adc
fbld
jno
or
test
test
insb
pop
sahf
push
xchg
call
loop
sbb
popf
and
mov
xlat
call
dec
cmp
loope
adc
xchg
test
jno
jb
xchg
or
inc
push
scas
and
sti
cltd
and
adc
insb
xor
and
sub
and
lods
hlt
inc
ljmp
sbb
or
rclb
cmp
out
mov
jno
or
test
inc
mov
in
jo
xchg
push
inc
and
dec
in
cmp
xchg
mov
jmp
pop
mov
mov
sbb
pushf
adc
out
mov
jno
or
test
insb
mov
push
jno
inc
xchg
mov
adc
je
js
push
xor
pushf
in
mov
jno
or
test
xor
sbb
add
xchg
pop
adc
and
push
lock
xchg
or
mov
std
push
jmp
xor
jbe
xchg
add
mov
das
adc
enter
jle
jmp
push
repnz
sub
push
scas
or
adc
xor
pop
insb
and
inc
in
or
lcall
xor
add
and
out
sub
roll
shl
inc
pop
mov
flds
shrl
mov
lcall
ds
add
cmc
leave
rcrl
mov
sub
mov
adc
cmp
je
orl
sbb
inc
cmp
enter
rolb
jle
cmp
dec
mov
adc
jge
adc
mov
cmp
jl
cmp
jae
jle
adc
out
jns
movsl
pop
pop
imul
adc
mov
adc
cmp
stos
lea
mov
jno
fistpll
adc
adc
add
std
dec
cld
sbb
cmp
jle
pop
ret
jl
movsbl
roll
add
pop
cmp
jp
pop
sub
ret
cmc
inc
xchg
nop
mov
lds
pushl
jmp
and
xor
incl
out
dec
push
adc
repnz
faddl
mov
jmp
xchg
rcrl
push
fcomps
or
cmc
xchg
rclb
pop
or
insl
pop
push
hlt
aad
dec
dec
orb
sub
add
jle
rol
clc
lahf
jecxz
xchg
or
inc
mov
or
mov
jl
dec
pusha
pusha
dec
dec
shll
dec
dec
or
jg
iret
add
sbb
jmp
divl
jle
add
mov
loope
mov
sub
dec
push
mov
adc
xchg
inc
mov
pop
add
jg
lret
or
shlb
cmp
rcrl
mov
jb
sbb
add
jl
nop
das
push
push
push
mov
les
ret
jmp
push
mov
sub
ljmp
lock
sbb
xchg
scas
mov
mov
and
stos
push
mov
movsb
mov
mov
cmp
je
lds
push
push
orl
les
mov
push
push
pop
shlb
adc
jno
imul
fldl
mov
cmpb
and
shrb
or
sbb
xchg
int3
or
pop
jae
repz
mov
jo
fdivl
jns
sub
pop
xor
and
stos
and
je
imul
out
arpl
repz
int3
xor
roll
outsb
jg
jmp
jg
and
mov
sub
ss
jmp
pusha
xor
mov
ljmp
push
inc
ficompl
lret
jecxz
or
adc
and
je
cmp
jne
subl
in
inc
ss
lods
adc
push
mov
jb
xchg
push
loope
gs
adc
xor
mov
adc
jbe
push
movsb
inc
je
xchg
in
out
xchg
cmp
insl
sub
leave
fstps
push
and
xor
jg
push
subb
movsb
push
test
enter
ret
sarl
mov
mov
cs
popa
jne
add
lods
push
push
add
or
ucomiss
and
mov
or
xlat
sub
gs
ss
inc
rcrb
es
sahf
jmp
cmpsl
stos
add
scas
pop
sub
and
push
push
mov
inc
ljmp
sub
rorb
jae
inc
mov
clc
inc
jb
xor
push
in
hlt
push
mov
repnz
add
pop
push
mov
adc
add
and
ljmp
iretw
xor
cmp
jmp
push
mov
rcl
push
fs
mov
mov
dec
pushl
js
fstpt
or
test
shl
subb
decl
cmp
loop
sbb
roll
jo
mov
push
ljmp
cli
je
stos
cmp
in
lock
xlat
push
add
add
loopne
cmp
or
jmp
fnsave
mov
jle
fcomps
xchg
dec
xchg
adc
push
repz
or
fistps
mov
push
cmpsb
aaa
inc
je
mov
and
mov
xchg
sbb
mov
pop
pop
pop
cwtl
aaa
cmpsb
pop
popf
jns
push
lret
jmp
int3
mov
adc
pop
fisttps
adc
test
std
sub
inc
in
and
sar
adc
cmpsl
ret
fimuls
pop
xchg
jb
stos
adc
mov
in
dec
std
lfs
jp
dec
std
in
or
adc
and
dec
cs
mov
or
loop
ja
push
mov
inc
popf
jae
mov
stos
xchg
adc
outsl
out
mov
mov
adc
loop
aam
pop
lock
adc
hlt
repnz
mov
les
pop
add
mov
lahf
leave
jne
pop
push
das
outsl
clc
test
jo
call
icebp
mov
jmp
push
cmp
xchg
pop
inc
idivl
hlt
pop
mov
fmuls
ret
jb
cmp
xlat
daa
push
rclb
enter
jp
jle
mov
shlb
and
ret
or
pop
dec
iret
mov
sub
xor
mov
int3
xchg
xchg
das
sub
fmul
xchg
pop
sub
insb
cmp
push
jecxz
inc
sti
je
stos
xchg
xchg
shl
or
mov
and
cltd
mov
push
push
adc
cmp
mov
push
sbb
jmp
ficoms
nop
add
xchg
adc
adcl
push
sbb
or
jge,pn
dec
fbld
sbb
fisubrl
dec
aas
push
test
dec
stos
popa
fidivs
cmp
mov
shld
enter
mov
leave
dec
push
mov
or
mov
xor
push
push
jg
popf
jno
add
adc
popf
gs
push
sbb
xor
adc
dec
adc
xchg
adc
dec
daa
inc
pop
push
movsb
pop
dec
pop
mov
add
and
ja
repz
xorl
and
push
jmp
fldt
xor
and
push
jecxz
or
adc
or
cmc
xlat
inc
or
inc
ret
and
mov
and
ja
movsl
sub
xor
and
adc
cli
mov
mov
and
jge
sub
jle
jae
mov
test
hlt
mov
ja
je
lea
ds
adc
jge
inc
loope
and
bound
push
andb
iret
comiss
mov
and
repnz
sbb
inc
pop
adc
mov
pop
lret
mov
pop
sub
aas
in
nop/reserved
rolb
mov
sub
aaa
dec
in
mov
xchg
fiadds
cltd
out
or
adc
xor
clc
or
icebp
and
cmp
or
mov
push
add
push
or
pop
mov
fstl
and
mov
ss
jnp
push
daa
clc
fisubrs
pop
jns
xchg
fstpt
cld
nop
or
dec
cld
cmc
xchg
mov
hlt
xchg
andb
out
and
outsl
cld
adc
ljmp
xor
cwtl
mov
js
mov
dec
je
enter
xor
sub
adc
lahf
mov
rolb
sbb
repz
mov
pop
adc
pop
movsb
xor
and
addr16
addr16
cld
js
adc
cmc
xchg
fmuls
aaa
adc
bound
movsb
lods
dec
lock
xchg
cmp
push
xor
push
je
ss
sub
inc
add
sysexit
mov
or
aad
mov
bound
sti
dec
ret
sbb
mov
xchg
cli
push
decb
pop
mov
xor
lods
dec
add
shlb
push
push
call
jnp
sub
pop
xchg
jle
dec
lahf
or
psrad
les
push
xlat
inc
sbb
lds
cmp
xor
sbb
lods
or
xchg
push
pop
aad
bound
mov
fidivrl
push
mov
xlat
push
push
std
enter
pop
faddl
push
mov
sub
loopne
testb
mov
or
orb
lods
push
out
add
mov
push
pushl
xor
mov
pop
xchg
and
xlat
adc
or
xchg
pop
cli
lds
pop
adc
jns
adc
dec
lock
jo
and
push
adc
call
loop
and
jmp
xchg
cld
imul
xchg
mov
xchg
push
insb
rolb
cmp
push
shl
adc
movsl
dec
jle
pop
add
and
in
or
xchg
push
push
scas
sbb
nop
xchg
repnz
mov
adc
sbb
fidivl
mov
loopne
lahf
ret
push
test
adc
mov
hlt
xchg
jns
and
push
bound
fcoms
aad
dec
lock
mov
cld
testb
testb
out
inc
movsb
inc
nop
cmp
jo
sbbl
jns
popa
and
std
and
adc
test
stos
push
gs
xlat
popa
and
jmp
pop
push
inc
lods
inc
or
pop
mov
jbe
adc
dec
and
pop
out
add
push
imul
incb
cmp
push
in
pop
lret
insb
or
mov
mov
bound
mov
lods
mov
je
inc
call
cli
and
and
ficomps
in
stos
lahf
xchg
pop
std
add
cmp
sub
xchg
sbb
daa
je
pop
push
mov
inc
dec
add
iret
and
sbb
pop
das
les
cmp
adc
daa
xchg
es
cmc
jmp
gs
imul
mov
mov
xor
leave
pop
push
ret
xchg
jb
ljmp
push
mov
mov
fisttpl
sub
aad
sub
and
leave
outsb
xor
and
es
add
fadd
add
fldenv
in
sub
lods
es
cld
fisubl
inc
jmp
mov
hlt
in
adc
imul
sub
add
std
icebp
jo
pop
jle
pop
adc
push
push
xor
cmp
cmpsb
aam
and
lahf
stc
lcall
xchg
fcoml
sub
rolb
jl
mov
nop
mov
sbb
push
push
adc
jo
dec
xor
inc
int3
dec
sub
pop
sub
fs
push
or
sbb
les
cmp
jns
mov
pop
mov
adc
adc
pop
out
mov
ja
outsb
sub
or
and
les
sbb
and
push
mov
cmpsb
jns
adc
hlt
jnp
and
aam
int3
adc
loopne
mov
sar
arpl
and
sub
cmp
sbb
push
adc
and
movsb
enter
roll
fs
sub
mov
jl
pop
adc
cmp
inc
rcr
popa
inc
xor
pop
sbb
fs
inc
sbb
cmp
xchg
mov
dec
nop
sbb
ss
and
rclb
push
sub
pushf
in
jno
jp
jecxz
iret
enter
and
es
outsl
push
aam
sub
enter
popa
ret
ds
xchg
je
sub
movsl
aam
mov
xor
mov
xor
stc
aad
into
mov
fs
inc
jl
adc
cwtl
jg
dec
sarl
cmp
push
popf
or
jns
adc
sti
pusha
daa
hlt
je
dec
cmp
mov
mov
test
mov
mov
sub
push
push
sub
xorb
mov
inc
push
lods
inc
nop
dec
aam
pop
movl
pop
adc
ret
jmp
and
push
xor
sbb
sbb
inc
or
dec
and
cld
mov
push
sub
pop
mov
insb
clc
lret
in
xor
xchg
pop
mov
rolb
xor
inc
ret
mov
mov
and
je
into
push
add
hlt
xor
xor
add
and
pushf
or
and
mov
mov
or
test
jo
jl
je
sub
sbb
or
push
call
test
jmp
adc
pop
aas
ja
mov
scas
lock
outsb
lods
pop
out
dec
test
push
or
xor
and
ljmp
jge
ds
cwtl
test
sub
notb
stos
pop
sub
and
inc
adc
sbb
pop
jle
inc
dec
dec
mov
add
mov
inc
cmpsb
loope
int3
xor
mov
stos
pop
adcl
push
call
in
xor
or
inc
clc
and
test
adc
arpl
cmp
cmp
adc
pop
mov
dec
jp
mov
xchg
jg
mov
or
sub
and
out
sub
push
pop
sub
push
push
mov
sub
push
sbb
bound
shll
cmpsb
cs
push
stos
aad
xor
ret
js
es
int3
inc
cmpsl
inc
add
push
xlat
sbb
test
cmp
in
xor
call
insb
or
hlt
fs
movsb
pop
clc
in
lret
out
es
mov
lds
sbb
dec
test
in
pop
lods
stos
cltd
push
xchg
mov
and
sti
in
adc
fbld
popf
and
adc
sti
pusha
push
ds
pop
cmpsl
mov
push
xor
push
add
fiaddl
imul
addb
cmpsb
pop
cmpsl
pop
pop
pop
cld
sahf
pop
leave
or
into
and
cld
clc
bound
and
cmp
sarb
stc
fcoml
mull
adc
inc
sbb
mov
cli
icebp
jle
xor
call
cwtl
ret
add
or
dec
push
dec
and
sbb
rorb
mov
fists
jns
loope
mov
incb
xor
mov
inc
je
ret
adc
test
mov
sbb
add
call
test
and
jbe
mov
jecxz
xchg
fsts
jbe
cmpl
je
inc
rcrb
pop
rorl
fs
sbb
sub
pop
mov
call
daa
dec
outsb
sbb
dec
stc
jl
add
mov
aam
dec
jnp
dec
sub
jmp
test
push
mov
cs
lods
xchg
ss
fs
pop
in
leave
cmpsb
pusha
fmull
dec
leave
or
add
shrb
mov
aaa
movsl
jle
push
xor
inc
adc
add
call
mov
push
mov
push
push
sbbl
add
xchg
and
lret
pop
repz
add
in
gs
test
sub
sub
push
cmp
cmp
je
xchg
or
jne
mull
dec
sbb
push
cmp
cmp
pop
jge
cmp
mov
add
xor
push
mov
inc
and
fsubrl
cmp
shll
adc
dec
in
or
roll
ja
lock
outsl
cmpsb
stos
cmp
cld
daa
je
adc
rcr
lret
nop
and
sarl
xchg
aam
or
pop
and
fwait
jns
in
dec
rol
mov
in
push
std
ja
or
pop
or
sbb
jge
push
mov
test
push
ds
out
lods
adc
cmpsl
mov
in
xchg
sbb
adcb
mov
mov
std
std
outsb
xchg
adc
ret
dec
push
pop
mulb
and
stos
push
push
outsb
inc
stos
adc
fildll
adc
inc
aam
adc
xchg
or
mov
ret
rorl
add
or
push
xor
or
pop
into
mov
push
dec
adc
xchg
orb
das
pop
jae
sub
in
inc
cli
sbb
movb
xchg
xchg
sbb
sbb
lret
mov
mov
hlt
xchg
xchg
inc
je
ret
xchg
fmuls
inc
lds
shlb
or
cmp
test
jae
mov
push
lret
shr
add
jbe
mov
jno
sub
mov
shll
lods
rcll
std
dec
faddl
sub
leave
push
sbb
inc
adc
pmullw
clc
test
jne
cmpsb
xor
xchg
mov
pop
push
out
lds
out
dec
xlat
or
sbb
leave
imul
jl
pop
fs
mov
mulb
or
mov
icebp
loop
repnz
lret
adc
push
push
dec
sub
roll
pop
ljmp
das
cmpsb
int
lret
insl
cs
das
mov
in
aam
ret
pop
push
gs
lea
sub
mov
adc
subb
nop
notb
and
rcrl
cmp
fildll
das
fxch
imul
cmp
cmp
dec
in
pusha
xchg
nop
int3
xor
lods
aaa
mov
cmp
cmp
daa
cmp
push
outsl
out
orl
xor
mov
pop
mov
pop
or
pop
xchg
xchg
dec
test
sti
mov
dec
pop
cmp
lret
add
roll
mov
sbb
sub
xor
out
mov
or
sti
enter
mov
push
inc
cmpl
pop
outsl
sbb
add
sub
sbb
test
test
fcoms
or
test
or
loope
jo
cmovns
sahf
clc
clc
es
inc
jecxz
add
enter
pop
adc
adc
and
outsb
pop
aad
mov
jmp
fadds
cwtl
jmp
push
dec
pop
and
lret
mov
mov
jbe
adcl
ror
push
and
clc
push
add
lea
add
add
and
sbb
jb,pt
jmp
and
xchg
xchg
gs
add
movsb
push
mov
outsb
xchg
pushf
mov
sub
mov
loope
xor
push
jbe
inc
adc
roll
sub
das
push
pop
insl
ret
push
mov
mov
sub
mov
repz
repnz
icebp
adc
das
mov
rclb
xchg
jo
cld
stc
add
push
jle
lea
push
pop
shrl
push
jnp
cmp
enter
movzwl
add
inc
mov
negb
pop
jmp
and
and
add
shr
lret
mov
jmp
mov
test
rcrb
bound
leave
sub
pop
sti
sub
bound
out
xchg
pushf
test
stos
cwtl
ss
push
lea
mov
cmp
and
sub
leave
mov
jge
insb
scas
mov
mov
and
mov
cwtl
mov
movsl
shr
mov
xor
lods
xchg
loopne
push
inc
and
int
movsl
es
adc
and
dec
pop
lret
or
sbb
movb
mov
dec
pushf
es
mov
movsb
mov
mov
jne
aam
lods
loop
xor
in
push
and
outsb
les
je
sub
add
dec
cmp
push
inc
and
pusha
sbb
rcll
decb
call
aas
test
lret
test
lret
sahf
gs
dec
or
inc
or
mov
repz
mov
xchg
add
or
sbb
stos
xchg
cmp
fs
arpl
out
sbb
push
sbb
xchg
adc
in
and
in
hlt
cmp
xchg
leave
inc
imul
popa
jmp
sub
test
das
outsl
dec
lret
imul
and
fsts
jne
jo
cmp
stc
loope
arpl
lock
inc
pop
push
push
and
push
push
movsl
push
adc
pop
popa
jne
pop
push
push
xchg
inc
mov
cli
std
cmp
mov
pop
int
and
push
pop
mov
jmp
or
in
xor
push
add
hlt
scas
fildll
push
mov
mov
scas
sbbb
mov
mov
push
mov
mov
pop
adc
decl
push
mov
xchg
add
jne
jb
fsubrl
push
adc
cmpl
pop
mov
push
mov
inc
adc
insb
pop
lds
scas
lds
and
rolb
mov
jecxz
xchg
jmp
and
mov
mov
iret
or
mov
fimull
loopne
call
dec
mov
inc
inc
jle
fimuls
push
jge
pop
adc
shrb
jle
cmpsb
sti
popa
sub
mov
cld
inc
inc
mov
movsl
movsb
dec
jl
inc
cmp
rolb
push
into
mov
bound
mov
fstps
dec
scas
sub
cmp
xchg
mov
int3
gs
xchg
mov
loope
xchg
daa
push
loop
pop
gs
push
mov
xlat
repz
dec
in
cmp
jne
aaa
push
mov
lods
push
adc
int3
and
xchg
sbb
mov
adcb
fmulp
in
rorb
cmp
xor
data16
lock
and
test
or
pushf
fdivl
xor
mov
mov
inc
push
mov
int
adc
xchg
call
mov
and
mov
inc
enter
aaa
jne
mov
int3
mov
adc
out
sub
and
aam
mov
out
inc
test
outsb
or
aaa
mov
dec
mov
aam
ret
mov
movsb
mov
mov
xchg
fmuls
stos
lock
daa
lods
cmpsl
movsl
stc
xchg
xor
movsl
mov
cmp
insb
mov
mov
fadds
mov
fidivrl
sahf
loop
push
and
popf
out
pop
cmp
or
lock
or
xchg
adc
adc
aas
or
mov
clc
sub
mov
push
xor
and
out
or
mov
cmp
add
mov
push
sbb
sbb
mov
stos
mov
mov
and
push
pop
loop
outsb
adc
mov
and
jg
inc
vmread
sub
push
xchg
sub
inc
mov
cld
cmp
mov
dec
inc
repnz
adc
mov
inc
cmpsb
out
fldcw
or
dec
imul
sbb
clc
rclb
or
or
mov
sub
out
xor
jmp
dec
adc
dec
sti
int3
inc
push
push
mov
adc
jmp
fdivrs
mov
jne
dec
cmp
xor
sbb
js
out
cmp
xchg
out
sub
int
inc
mov
stc
movsl
and
push
insl
enter
xor
pop
mov
jno
es
and
add
test
push
xchg
jne
cwtl
xchg
call
and
xor
out
cmp
ds
push
lock
or
hlt
sbb
sbb
and
decl
out
or
aam
pop
push
pusha
loope
mov
hlt
push
xchg
adc
bound
stos
cmp
mov
iret
test
xor
es
inc
pop
sahf
or
dec
ffree
cmp
test
inc
inc
mov
mov
mov
and
inc
repnz
mov
jmp
sbb
adc
and
sub
in
mov
jmp
mov
in
out
xor
ja
mov
xchg
cmp
out
mov
aad
dec
and
jo
cmp
dec
push
push
sbb
sbb
xor
dec
icebp
adc
test
popa
mov
hlt
stos
lahf
fsubs
in
jne
mov
inc
inc
adc
ret
jg
mov
push
test
and
ret
psubb
ljmp
adcl
enter
sahf
jecxz
add
test
push
mov
sub
xchg
and
mov
sarb
jmp
sbb
and
loopne
repz
lds
mov
insl
dec
sbb
jo
mov
cwtl
mov
mov
addb
or
xor
adc
adc
out
das
pop
sbb
jmp
and
iret
pusha
rorb
mov
sahf
insb
xchg
enter
add
mov
lds
mov
mov
mov
mov
mov
sub
pop
jmp
jl
pushf
push
mov
and
sub
pop
sbb
and
cmpsb
sbb
sahf
dec
or
pop
push
mov
stos
hlt
aas
add
test
push
cwtl
add
into
mov
xlat
pop
mov
pusha
gs
mov
and
into
mov
mov
js
sahf
mov
push
fcoml
cld
mov
xor
lret
int3
test
loope
jnp
push
adc
cmpsb
das
sar
enter
scas
add
fsubs
fwait
pop
cmc
cmp
xor
cmp
and
or
dec
jg
pop
adc
popf
push
shrb
cld
rorl
aas
aaa
dec
jns
cltd
push
push
and
mov
pop
fnstcw
mov
iret
xchg
cli
fcoms
mov
adc
xchg
jmp
dec
std
in
cwtl
push
loope
int3
lods
je
xor
inc
andl
and
lds
fimuls
xchg
and
and
add
mov
adc
jge
jns
ret
xchg
adc
lret
adc
inc
in
in
das
jmp
movsb
mov
xchg
sub
add
xor
cmp
pop
inc
mov
adc
dec
leave
and
test
adc
aad
and
sub
in
fbstp
push
enter
mov
stos
inc
inc
les
ret
std
fs
mov
outsb
hlt
dec
push
jbe
xchg
adc
insl
push
mov
testb
inc
xchg
call
rolb
xchg
xor
push
aam
sub
pop
cli
jne
in
lods
mov
push
jnp
stos
int
or
xor
push
insb
push
or
cwtl
add
mov
sbb
ljmp
lock
insb
test
sub
aad
add
pop
or
test
xor
sbb
je
adc
xor
or
adc
xor
in
push
and
sub
sbb
pop
dec
aaa
orb
imul
xchg
inc
sub
cmp
sub
push
jo
and
mov
push
cmp
outsl
leave
aaa
and
dec
outsb
out
sub
imul
xor
sbb
or
inc
xchg
and
push
sub
add
jg
shr
sbb
enter
aad
call
test
subl
add
and
movsl
inc
push
scas
sub
inc
inc
xor
push
or
and
and
dec
and
mov
sub
test
lret
pop
cwtl
or
fxch
pop
call
stos
mov
adc
jne
stos
push
cmp
je
add
dec
cld
push
shrb
insb
or
push
popl
mov
cmp
stos
test
je
push
and
cmp
sbb
sub
and
lods
jmp
dec
test
xchg
scas
dec
loop
arpl
jmp
pop
mov
cli
xor
push
mov
pop
adc
scas
xor
pusha
add
cs
aad
jge
or
aad
cmp
call
jmp
idivb
adc
dec
xchg
adc
test
inc
pop
adc
sbb
xor
cwtl
mov
lods
jno
mul
jae
cmp
ret
add
add
repnz
and
fisttps
test
mov
mov
lock
cwtl
mov
jnp
or
xchg
push
mov
ds
enter
loop
icebp
adc
jo
push
pop
mov
inc
dec
ds
mov
cltd
jmp
xor
mov
cwtl
sbb
hlt
les
stos
int3
call
push
pop
pop
mov
hlt
push
mov
mov
mov
jb
add
push
jecxz
mov
ja
enter
testb
in
ret
pop
jne
mov
lods
mov
ficompl
cmp
imul
push
das
stos
jmp
fisttpl
jecxz
popf
fdivrl
adc
mov
pop
pop
sti
fisubrs
in
mov
dec
fstps
int
sub
xchg
pop
push
fs
enter
cwtl
dec
mov
dec
and
push
enter
inc
sti
xor
mov
jbe
gs
mov
pop
add
mov
sub
or
push
dec
cli
pop
jne
movl
cltd
jmp
ss
nop
pop
lock
je
and
and
mov
loop
jne
inc
mov
lcall
popf
inc
sbb
sub
call
les
jmp
fucomp
pop
test
fstl
inc
hlt
jno
xchg
mov
and
pop
xchg
push
dec
push
xchg
in
mov
movsb
adc
push
xor
and
push
adc
xchg
sbb
xor
test
call
mov
mov
inc
add
sub
cmp
add
adc
adc
mov
imul
pop
mov
adc
pushf
sub
repz
push
pop
adc
mov
mov
adc
push
pop
add
add
xor
es
cmp
dec
jns
xchg
add
cmp
mov
clc
enter
push
mov
jo
cmpb
and
xchg
repnz
pop
inc
mov
xchg
int
sub
daa
test
push
mov
mov
inc
and
int3
jle
sub
inc
popa
jp
rol
jp
push
fidivs
sub
dec
xorb
mov
push
xchg
fs
movsb
aaa
mov
scas
lods
or
nop
adc
ret
pop
enter
dec
sub
xchg
and
mov
or
push
pop
mov
adc
orl
xchg
add
pop
cmpsl
xor
jbe
pushf
adc
lods
lds
push
fcmovu
dec
sub
call
add
in
test
sbb
mov
jmp
stc
leave
test
jns
loop
dec
inc
xchg
dec
outsl
test
or
add
mov
in
mov
aad
test
add
push
je
and
or
popf
je
loope
adc
push
cmp
inc
adc
mov
fbstp
push
mov
cld
and
pop
rcrl
mov
dec
fbld
test
dec
sub
jnp
push
addr16
inc
stos
mov
mov
jmp
pop
shlb
push
xchg
mov
jno
daa
add
mov
sub
push
inc
loopne
test
mov
stos
sbb
movsb
adc
push
shlb
imul
or
sbbl
movb
inc
inc
test
lret
sub
adc
pop
dec
or
je
push
mov
sbb
lods
pop
sbb
push
lea
dec
movsl
rcr
pop
je
adc
je
rorb
add
add
jmp
popf
out
scas
sub
xor
test
xlat
push
inc
lahf
adc
je
ja,pn
inc
xchg
out
xor
imull
dec
mov
xchg
push
mov
ja
push
xor
frstor
imul
inc
test
dec
xorb
and
push
sbb
push
daa
scas
test
decl
adc
push
lret
fidivs
mov
mov
mov
jl
ret
add
loopne
scas
sbb
jmp
xchg
and
or
outsb
push
and
mov
mov
push
je
ret
sbb
mov
pop
mov
or
push
std
xor
mov
jno
imul
pop
and
cmp
test
clc
inc
mov
test
push
movsl
shr
lret
adc
test
and
add
gs
or
push
dec
cbtw
inc
js
mov
divl
scas
lret
das
lock
adc
pop
mov
clc
nop
ds
test
inc
movsb
add
call
push
pop
stos
dec
cmp
xchg
fidivrs
daa
test
mov
imull
adc
rorb
bound
or
adc
mov
mov
adc
mov
lods
mov
xchg
inc
cld
xor
daa
clc
add
int3
and
sub
icebp
cmp
out
and
and
mov
nop
outsb
xor
xor
xchg
add
mov
rolb
jmp
test
jne
in
add
je
mov
push
mov
and
ljmp
dec
jge
ljmp
movsl
je
popf
dec
sbb
movl
cmp
xchg
cmpsl
es
dec
and
jmp
inc
mov
cwtl
jno
push
cli
cmpsb
sub
gs
push
lea
jg
cmp
mov
adc
aad
add
or
push
push
or
mov
aam
out
xor
xorb
and
mov
pop
add
into
cli
adc
popf
xchg
outsl
repnz
sub
fisubrl
and
xor
rolb
cmp
push
cmp
cmp
add
adc
mov
dec
sbb
adc
push
pop
inc
pop
ret
test
test
mov
or
mov
adc
in
mov
and
bnd
stc
inc
fdivrs
xchg
cmp
sub
es
adc
jl
movsb
sub
add
int3
sub
mov
or
clc
movb
dec
xchg
xchg
and
aam
movsb
jo
rcll
xor
js
call
mov
jne
mov
mov
and
pop
xor
mov
loopne
call
add
sub
cmc
popa
mov
xor
xorl
push
cmp
jmp
mov
pop
push
cli
dec
mov
mov
mov
dec
setge
add
in
push
stc
lods
push
adc
dec
add
inc
sub
jno
add
std
jg
mov
and
mov
sub
sub
or
aas
sarb
lret
add
hlt
lods
push
cld
ja
fisubl
je
push
movsl
cmp
or
das
jo
sub
push
add
push
cmp
shll
mov
cmp
outsb
xchg
cmp
adc
add
movsl
das
mov
movsb
mov
adc
clc
lods
loop
sbb
push
adc
pop
mov
loop
sbb
pop
jg
movl
or
add
loopne
das
jb
push
repnz
mov
push
push
pusha
adc
push
push
jecxz
out
or
mov
ljmp
jne
sbb
inc
adc
jge
mov
sub
test
xchg
jmp
and
ret
push
leave
push
call
test
cltd
mov
or
xorb
or
push
push
sub
xor
je
fldl2e
dec
mov
mov
lods
adc
std
mov
xchg
jmp
adc
fs
push
pusha
cld
mov
and
subl
add
dec
lock
mov
push
movsb
shlb
loop
push
dec
fcomp
dec
cmpsl
lret
adc
ljmp
bound
fwait
mov
mov
sub
push
mov
pusha
and
add
shrb
out
push
mov
jge
inc
test
out
out
mov
or
lret
xchg
and
nop
mov
add
or
sub
repz
std
mov
adc
pushf
imul
shrl
xchg
addb
sub
or
test
push
sbb
fcoml
andl
adc
sub
sub
test
and
inc
add
cld
mov
dec
adc
or
test
add
inc
dec
and
or
lahf
push
lea
test
dec
jmp
gs
ret
iret
aam
xor
or
dec
movsb
sub
mov
adc
pushf
and
dec
or
push
and
nop
jo
xor
movzbl
push
test
and
or
xor
jnp
sub
loope
or
sbb
push
xchg
and
add
cld
mov
loop
mov
push
test
or
test
mov
dec
jno
sub
dec
test
or
scas
adc
enter
and
push
inc
jo
pushf
or
popf
push
pop
or
test
push
jge
push
add
mov
pop
enter
jge
in
adc
xchg
and
inc
sub
or
test
nop
les
cmc
ja
cwtl
and
inc
push
inc
adc
cmp
das
fs
xor
sub
sub
xchg
adc
enter
pushf
adc
test
adc
fistpl
or
inc
mov
test
mov
sub
filds
lock
call
inc
cld
xchg
mov
and
add
adc
sub
popf
aam
inc
je
movsl
pusha
dec
xchg
cwtl
test
sbb
aad
xor
aad
or
adc
pop
adc
adc
fwait
mov
loope
nop
and
mov
pop
inc
inc
and
fs
mov
inc
js
lea
jo
js
and
insb
mov
pusha
or
test
enter
and
push
inc
or
pop
adc
mov
sti
or
cmpsl
nop
dec
test
lcall
adc
mov
sbb
rolb
sub
or
mov
imul
xor
sbb
jl
mov
addr16
fs
push
push
and
adc
mov
test
enter
mov
pop
pop
or
inc
mov
pop
cltd
cltd
test
cwtl
fnsave
pop
loopne
jmp
fsubrl
and
inc
jbe
inc
jne
push
sarl
cmpsb
xor
dec
adc
mov
mov
push
fnstsw
adc
mov
jo
xchg
test
into
and
bound
xchg
test
inc
xchg
and
push
sbb
cmp
cmp
or
jo
inc
jl
test
and
cwtl
or
cmpsb
mov
xchg
xor
or
inc
pop
and
adc
mov
xchg
sub
xchg
and
cmp
sub
test
and
mov
adc
or
mov
mov
aam
mov
pop
sbb
in
push
dec
xchg
out
and
mov
push
and
call
jmp
inc
mov
inc
xchg
popf
push
ss
adc
sub
mov
in
sti
xor
test
xchg
mov
inc
adc
aam
pop
mov
xor
or
les
int3
jb
adc
and
xchg
mov
adc
in
or
iret
pop
push
xor
push
mov
mov
test
mov
and
cwtl
or
xchg
pop
enter
sub
inc
xor
mov
inc
mov
cmp
and
push
inc
lods
adc
jb
mov
adc
mov
xchg
test
sbb
jl
shlb
add
js
mov
les
push
inc
jne
test
enter
and
inc
sbb
pop
adc
test
inc
dec
enter
and
push
inc
inc
and
mov
cmp
add
inc
and
xchg
or
pop
nop
cmp
aad
in
mov
and
adc
mov
nop
sub
mov
and
xor
adc
and
nop
sbb
mov
and
cwtl
jb
adc
mov
push
sub
mov
cld
mov
out
xchg
mov
and
adc
add
mov
subb
jmp
mov
jae
mov
mov
nop
and
cmp
push
or
xorl
fs
test
mov
movl
leave
lahf
and
cmpsl
gs
nop
pop
adc
std
mov
adc
push
js
adc
adc
std
iret
lea
xchg
push
js
sub
adc
xor
xchg
cmp
inc
adc
inc
mov
mov
cwtl
adc
xchg
adc
and
mov
mov
or
mov
mov
addr16
cmp
call
xchg
add
movsl
jo
mov
adc
mov
adc
out
mov
sbb
mov
sub
nop
es
stos
adc
cmp
cltd
aaa
in
inc
jno
call
pop
sbb
and
and
enter
lds
push
in
push
int3
fs
cltd
pop
push
cmpsb
arpl
call
mov
fwait
jmp
aad
fwait
js
cltd
jmp
xchg
cmp
inc
xchg
mov
sbb
imul
sbb
adc
test
jl
inc
jno
test
sub
sub
mov
into
insl
sub
mov
or
adc
xchg
nop
mov
mov
adc
xchg
lods
jle
arpl
adc
or
pop
rol
and
or
mov
or
orl
pop
mov
inc
dec
cld
cmp
or
sbb
hlt
popl
dec
and
or
scas
test
mov
xor
nop
mov
mov
lcall
test
lret
and
inc
loop
cmovp
adc
xor
cmp
addr16
fs
xor
and
inc
or
push
and
push
lea
imull
cmp
loope
jmp
ss
or
jb
add
cmp
or
jmp
out
imul
mov
jmp
in
fmul
mov
inc
adc
cld
mov
notb
sub
or
repnz
push
adc
sub
and
or
mov
fldl
xor
push
xchg
test
fs
shrl
jmp
lods
sub
pushf
push
inc
or
and
adc
gs
push
call
sub
inc
call
cmp
in
mov
lret
loope
xchg
sbb
jmp
mov
loope
fisubs
sbb
pop
jmp
in
mov
mov
and
or
push
and
and
pop
mov
adc
int3
xor
bound
loop
push
xchg
dec
sub
xor
and
sub
inc
sbb
and
and
cmp
out
mov
and
jns
xor
rorb
bound
in
mov
and
adc
and
pop
imul
or
ss
mov
and
fs
ja
inc
or
mov
clc
mov
icebp
mov
sbb
test
ret
mov
cmp
or
inc
xchg
sub
inc
sbb
fcoml
jle
mov
test
and
inc
scas
and
adc
mov
sbb
les
mov
push
sbb
mov
xor
mov
fnsave
xchg
sbb
adc
or
jae
movsb
mov
inc
mov
jb
adc
mov
inc
mov
push
bound
cmp
xchg
xchg
pop
and
js
or
sbb
mov
adc
mov
adc
movsl
and
hlt
pop
fmull
in
inc
adc
sub
adc
insb
jae
mov
into
xor
mov
and
test
pop
test
inc
sub
out
dec
test
enter
and
push
and
adc
push
mov
push
and
adc
mov
pop
dec
sbb
test
les
or
sbb
mov
cltd
inc
jl
sbb
jg
cmp
jp
mov
popf
roll
arpl
inc
insl
jo
inc
dec
les
pop
popa
cld
scas
adc
clc
adc
mov
cmp
or
push
and
add
xchg
mov
inc
loopne
fldenv
aam
ret
lds
mov
inc
stos
sub
mov
and
cmp
adc
xchg
and
and
and
inc
fidivs
and
jecxz
sbb
push
shl
or
mov
push
adc
jb
jnp
or
mov
and
jnp
pushw
cmp
mov
pop
push
dec
fisubs
mov
jge
jnp
add
movw
inc
jle
or
sbb
stc
xor
data16
mov
push
mov
subb
sub
lea
mov
add
inc
or
test
arpl
xchg
decb
lret
pushl
es
scas
sub
icebp
pop
jg
dec
daa
clc
inc
in
outsl
sbbb
in
sub
xor
cmc
lods
or
xchg
add
out
fcmovu
xchg
push
inc
scas
out
test
pop
iret
sub
mov
in
mov
cmp
lods
test
xchg
pop
clc
cmp
call
cmp
jne
adc
and
repnz
adc
nop
shrl
push
test
rorb
or
mov
adc
mov
adc
xchg
push
loope
push
cli
dec
call
lds
adc
data16
mov
add
fnstcw
enter
push
mov
scas
mov
inc
in
mov
inc
lods
cmp
push
jle
int
inc
adc
mov
loopne
das
mov
or
push
xlat
dec
sub
das
addl
psubsb
aas
or
sub
cld
push
push
lcall
pop
jns
xorl
mov
dec
lds
call
or
insl
xor
pop
jns
jmp
aam
ret
sbb
ret
in
mov
push
movsl
popa
sbb
repz
inc
mov
scas
dec
daa
jecxz
adc
in
loopne
unpcklps
out
xorl
cli
sub
adc
cmp
add
inc
adc
or
cmp
cld
mov
cs
jbe
repz
out
mov
sub
cmp
sub
mov
pusha
dec
movsb
psubsw
mov
test
mov
subl
cld
or
sub
inc
cmc
test
xchg
inc
lods
cmc
icebp
das
iret
or
sub
rcll
mov
arpl
pop
aas
loop
and
pop
fcomps
fildl
sbb
fisubrl
stc
jo
clc
push
add
test
jmp
and
jl
jl
test
fidivl
pushf
movsb
push
sbb
xchg
inc
lea
cwtl
movsb
jb
pop
push
cli
lcall
out
ret
lea
das
lret
jge
push
push
test
mov
or
dec
adc
mov
inc
les
or
jno
loop
sti
sbb
sub
and
andl
adc
pop
or
adc
jnp
xchg
subb
sbb
jbe
call
dec
push
cld
jmp
pop
das
cmpsb
xlat
pushf
pop
cmp
push
sub
xor
jp
aaa
xchg
movsl
xchg
cmp
lods
or
jno
add
loop
mov
inc
lods
sbb
ds
outsb
xor
out
inc
ljmp
xchg
lahf
bound
push
in
xor
xchg
adc
jl
jmp
flds
dec
dec
test
stos
jno
cli
dec
pop
push
insb
push
sub
dec
and
jae
jp
icebp
dec
or
cmp
adc
shll
lea
orb
mov
or
inc
adc
orl
jne
mov
pop
inc
mov
add
fadds
xchg
adc
xchg
es
xor
xor
jmp
out
sbb
mov
inc
imul
imull
xchg
adc
push
jne,pn
or
xchg
arpl
sti
mov
je
lock
jne
pop
sub
ljmp
icebp
adc
lea
outsl
mov
dec
jmp
mov
adc
cs
int3
mov
outsl
nop
stos
or
sahf
cmp
xchg
or
repz
adc
test
push
imulb
pop
add
scas
fs
mov
in
push
lea
jb
js
aam
xorl
dec
xor
xor
mov
bound
sbb
pop
addr16
xor
and
js
nop
xor
cld
ja
incb
add
movsbl
cmp
adc
dec
cltd
fs
jns
cmc
push
call
cmp
lret
jl
adc
push
push
push
stc
xor
jle
cmp
test
loope
outsb
out
bound
cmc
jge
mov
sub
cmpb
add
fbld
mov
dec
jge
enter
aaa
cmp
lods
and
cld
stos
adc
movsb
ror
pop
sbb
push
push
push
and
mov
and
pop
mov
pop
and
pusha
cli
test
inc
stc
arpl
int3
cmp
inc
cli
loope
stos
adc
cli
xchg
sets
push
cmp
jp
add
cmp
test
repz
push
push
outsb
jnp
push
jnp
xchg
stos
or
dec
cwtl
mov
add
adc
mov
or
pop
test
mov
hlt
jne
rcrb
or
testb
mov
sub
shrl
les
and
ljmp
cmp
sub
lcall
pop
sbb
sbb
rdpmc
test
outsb
gs
ljmp
stos
pop
shlb
out
loop
ja
int
adc
jge
adc
sub
inc
jp
cmp
lock
test
sub
jl
sub
lds
cli
test
ja
xchg
inc
jl
mov
or
inc
jl
clc
mov
add
lcall
and
inc
jl
pop
push
and
xchg
decl
push
adc
imul
xor
je
xchg
rorl
inc
sbb
outsl
mov
sub
push
pop
push
test
fs
and
pand
push
fs
and
aam
sbb
xor
inc
enter
fld
or
cld
sbb
sub
or
out
and
out
mov
mov
in
leave
inc
jmp
rol
lcall
dec
loopne
cmp
pop
popf
jb
clc
fmuls
pop
call
int3
push
and
xchg
dec
hlt
push
sub
dec
and
sbb
sbb
mov
push
sub
inc
les
out
jb
and
and
aas
inc
jmp
in
les
push
test
adc
out
int3
or
push
mov
std
jb
mov
sub
movsb
cld
inc
popf
nop
repnz
jp
ret
xor
pop
mov
je
adc
push
push
push
and
pushf
mov
sub
xchg
adc
pusha
clc
jns
push
cwtl
sbb
mov
xchg
adc
insb
dec
mov
lock
rolb
dec
nop
les
movsb
adc
cmp
ror
dec
push
cmp
fs
sub
repnz
jmp
out
and
loop
repnz
adc
test
add
inc
repnz
adc
in
xlat
and
test
daa
cmp
mov
or
out
or
mov
dec
adc
or
outsb
js
inc
mov
in
into
hlt
jns
inc
fdivr
push
or
sub
out
inc
and
sbb
dec
inc
inc
les
out
adc
test
xor
xor
test
loop
fiaddl
adc
jecxz
lret
cwtl
xor
gs
out
daa
push
dec
inc
in
adc
dec
clc
adc
in
sbb
cmp
outsl
aas
inc
mov
or
loop
loop
jp
xchg
stos
aas
inc
icebp
xchg
loop
enter
adc
in
adc
enter
dec
iret
xchg
xchg
repnz
adc
mov
dec
fcoml
test
jmp
outsl
xor
and
push
aas
mov
mov
push
ljmp
lds
lods
pop
sbb
dec
and
xchg
xchg
add
and
jmp
push
and
xchg
cwtl
mov
enter
or
outsb
pushf
pop
inc
push
dec
dec
popa
popa
sbb
or
shr
ret
inc
push
and
jae
test
jnp
jno
loop
jmp
jne
or
call
ret
adc
ret
pop
movsb
testl
stc
loop
notl
movsb
clc
xchg
xor
nop
icebp
and
or
pop
pusha
or
andb
or
mov
and
jno
or
mov
mov
push
icebp
lret
pop
pop
cmp
imul
sbb
test
sub
icebp
push
sub
scas
mov
mov
fsub
jae
mov
adc
cli
lock
lods
shr
rcrl
test
jae
outsb
hlt
xor
aam
jo
mov
in
xchg
loopne
daa
jecxz
jno
inc
jmp
mov
xor
jg
pop
cmp
jmp
mov
in
sbb
aam
inc
aam
xchg
hlt
and
pop
push
and
les
add
adc
in
mov
inc
dec
lcall
cmpsl
jo
insb
mov
int3
addr16
in
xchg
rcl
sub
and
test
out
movswl
daa
data16
or
call
cmp
jne
aas
adc
adc
push
mov
js
pop
clc
pop
add
rcll
daa
bound
mov
fsts
push
into
sbb
movsl
mov
loopne
addb
inc
or
pop
inc
mov
call
and
mulb
int
mov
imul
and
ficompl
push
adc
loop
icebp
test
shrb
repnz
sub
inc
and
xchg
in
inc
pushf
dec
bound
imul
cmp
fcompl
je
cmpsb
daa
insl
push
inc
inc
adc
and
mov
mov
popa
adc
push
jb
cmpsb
mov
sbb
xor
lds
mov
or
or
inc
xchg
movsl
in
sub
lods
cmp
call
imul
rorl
sbb
ja
jmp
sbb
cmc
fldl
das
mov
push
js
and
sub
inc
adc
loope
outsl
or
jbe
pop
sbb
notl
mov
pop
outsl
aad
sub
mov
js
test
push
inc
nop
mov
es
lret
mov
das
rclb
adc
mov
push
sbb
xor
jmp
xchg
push
movb
ret
mov
dec
xchg
subl
jl
xchg
adc
sbb
push
cmp
push
jmp
in
xor
pop
dec
stos
addr16
sbb
add
xchg
and
addr16
outsl
pop
or
roll
test
sbb
adc
jmp
pop
inc
cld
sub
pop
lret
mov
or
repz
adc
jae
mov
movsb
add
inc
sbb
dec
mov
jno
and
pop
test
add
ja
ljmp
and
jno
or
decl
jo
push
dec
imul
and
or
inc
imul
dec
inc
adc
dec
mov
cld
movsl
xchg
outsl
jp
push
fiadds
rol
lock
and
cmp
push
add
lret
mov
push
mov
loopne
inc
das
adc
xor
xor
sub
mov
call
add
xor
xchg
repz
stc
mov
adc
sub
imul
jbe
jmp
ret
push
push
mov
push
imul
test
loop
add
jmp
rorb
loop
aam
xchg
or
dec
adc
xchg
mov
pop
cwtl
je
in
xor
sub
mov
loopne
mov
push
cs
and
push
out
das
cs
push
xor
and
fs
mov
fs
xor
add
jmp
inc
push
push
test
jbe
or
add
jmp
cmp
dec
mov
movsl
out
or
data16
pop
popa
dec
movsl
jns
in
das
mov
xchg
mov
push
push
in
push
cmp
mov
call
pop
jl
fldt
jne
sbb
mov
out
mov
pop
and
movsb
pop
or
aad
cmp
arpl
dec
test
testl
ret
dec
sbb
gs
lods
cltd
inc
push
dec
push
adc
cli
or
mov
jl
jb
inc
movsl
ss
test
xchg
push
decb
jge
insb
adc
mov
adc
xchg
and
push
jg
inc
je
fcoms
cmp
adc
mov
test
in
addr16
jo
bound
enter
add
xchg
jo
xchg
dec
xchg
jnp
imul
push
add
push
sub
lods
lods
out
cmpsb
or
inc
push
cmp
mov
push
sub
andb
jmp
outsl
daa
dec
and
adc
mov
adc
dec
mov
mov
add
mov
cmp
inc
insl
push
jmp
call
fs
sub
test
or
aam
test
cli
mov
mov
lea
pop
out
push
pop
or
loop
insl
sbb
cmpsl
sub
push
stc
inc
jno
or
test
movsl
test
jmp
push
bound
push
adc
inc
insb
push
arpl
gs
dec
and
sbb
and
add
ret
pop
dec
mov
sbb
cmpsb
or
adc
rcll
cmp
enter
popa
xorl
adc
movsl
stos
das
sti
cs
xlat
dec
pusha
mov
push
cmp
fadds
pop
call
mov
mov
sbb
sbbb
mov
adc
mov
mov
mov
xor
enter
sub
adc
or
rorl
mov
popa
adc
jns
cmpsb
adc
test
repnz
int
mov
testl
addl
aam
or
inc
pop
les
mov
das
push
xchg
push
loop
mov
sbb
lea
cltd
invd
inc
testb
add
or
data16
ja
movsb
xchg
pop
dec
inc
nop
adc
push
sub
fs
mov
inc
pop
shll
bound
push
pop
loopne
mov
and
xchg
dec
push
or
push
push
xchg
add
or
mov
lahf
icebp
mov
je
add
icebp
xor
sub
xor
xor
test
mov
jmp
stos
sub
xor
jmp
push
add
aad
mov
sub
cltd
jmp
add
jmp
mov
push
test
and
movsbl
or
rclb
dec
or
mov
ret
adc
xchg
es
and
in
jns
mov
mov
push
hlt
dec
roll
push
mov
push
dec
xchg
insl
and
cltd
push
adc
pop
jl
push
fwait
and
inc
js
das
pop
cmp
and
pop
inc
cld
aaa
add
imul
xor
sub
mov
test
mov
iret
push
imul
clc
lahf
adc
or
mov
pusha
lea
jmp
insb
mov
adc
dec
or
iret
arpl
bound
jg
adc
mov
cwtl
test
test
lock
mov
cmp
jb
jmp
lcall
test
pop
leave
xor
dec
push
js
mov
push
or
xor
nop
js
mov
dec
jmp
mov
sbb
in
test
mov
or
pusha
test
jns
mov
adc
loopne
pop
cmpb
mov
jo
sub
ss
jne,pn
pop
jno
add
dec
sub
inc
pop
pop
inc
call
dec
icebp
dec
fdivl
mov
out
syscall
pop
call
mov
push
dec
mov
or
fidivrs
adc
mov
jbe
inc
cmp
pop
bound
inc
cmc
mulps
imul
pop
repnz
add
popf
cmp
test
in
sbb
dec
in
repz
push
popf
inc
push
out
stc
adc
dec
pop
rcrl
repnz
dec
call
in
inc
jo
and
daa
add
and
inc
xor
sbb
inc
in
outsb
jno
sahf
cs
adc
fcompl
dec
mov
and
pusha
inc
outsl
insb
or
jmp
mov
push
or
adc
cmp
dec
mov
push
cmp
jo
pushw
jl
jb
push
dec
sbb
in
xchg
dec
xchg
mov
pop
push
cmpb
jne
enter
or
shr
in
add
daa
push
shrl
or
pop
das
clc
dec
xlat
jbe
loop
icebp
and
xchg
mov
mov
and
add
mov
popa
rcrb
adc
mov
xor
jns
adc
jne
jg
mov
jno
mov
adc
dec
jne
das
mov
repz
das
adc
lds
and
push
inc
inc
adc
push
sti
sub
ret
repz
ficomps
and
xor
sbb
test
dec
mov
insb
and
cmpl
dec
or
icebp
clc
popf
or
inc
push
mov
adc
adc
dec
repz
sub
or
inc
push
rcrb
pushf
pop
push
mov
push
dec
sbb
push
adc
pop
fisubrl
fnstenv
dec
stos
or
jmp
mov
adc
aas
inc
pop
add
push
out
push
and
outsb
mov
inc
ljmp
js
aas
and
push
mov
decl
fsubrl
in
xor
faddl
enter
sub
imull
mov
push
sbb
nop
jb
sbb
and
sbb
push
loop
push
push
call
pop
push
pushf
and
pop
mov
nop
mov
dec
xor
mov
test
adc
mov
dec
sbb
xchg
or
jge
pop
jg
aaa
and
pop
rolb
mov
popf
cld
js
mov
inc
cmp
jae
orl
mov
call
bound
adc
ret
ja
inc
mov
sbb
out
push
shrb
mov
dec
fcoms
aas
sbb
sub
das
arpl
xchg
jg
mov
sbb
inc
dec
scas
loop
lret
adc
pop
mov
inc
jo
jl
sub
mov
popf
add
push
je
push
push
sti
pop
mov
std
pop
jae
xor
mov
adc
adc
mov
and
subb
and
mov
shl
mov
xchg
cltd
xchg
ret
xor
movsb
push
mov
stos
cmp
jg,pn
fwait
popf
xor
aam
aaa
leave
pop
and
xor
sub
adc
cmp
adc
adc
notl
sbb
movsb
test
adc
push
mov
push
lret
xor
in
adc
mov
pop
les
lods
adc
push
dec
add
mov
push
xor
mov
cmpsl
mov
sub
mov
xor
negl
or
push
sbb
inc
sbb
inc
cmc
les
imull
sub
testb
sbb
dec
imul
fwait
adc
pop
mov
jecxz
xchg
movl
sub
hlt
outsl
rclb
adc
sub
mov
sti
or
push
js
in
sti
jg
sbb
sbb
movsl
mov
imul
inc
pop
xor
adc
push
push
jecxz
add
add
aaa
mov
in
or
and
out
repnz
add
rorl
mov
shl
fmull
lcall
add
jb
push
stc
mov
js
cwtl
and
jmp
adc
test
bound
cmp
add
xor
call
adcb
pop
sbb
lock
jmp
dec
sub
jmp
jp
adc
cld
xor
enter
and
adc
push
and
xchg
xchg
cli
add
lods
stos
filds
adc
jmp
jo
push
adc
jmp
adc
adc
dec
lods
xor
stos
mov
enter
bound
adc
arpl
mov
pop
jge
or
popa
cmpsl
jmp
popa
movsl
push
xor
fnstcw
movsl
dec
mov
jmp
call
inc
push
xchg
cmpsb
sahf
jne
fcomps
int3
jmp
inc
inc
daa
sbb
adc
repnz
sbb
fs
cltd
mov
les
insb
dec
std
sub
sub
pop
das
imulb
sub
adc
xchg
dec
or
imul
dec
dec
xor
xchg
push
mov
or
inc
push
loope
push
dec
std
and
and
aas
movsl
xchg
ss
xor
enter
loopne
daa
jo
lods
leave
icebp
in
decl
int3
xor
dec
push
popf
push
push
mov
cld
addl
add
mov
int3
enter
pop
lea
incb
jmp
dec
xor
push
jmp
mov
push
push
mov
dec
push
jmp
in
pushf
cmpl
gs
jmp
fnstcw
inc
xlat
flds
push
mov
scas
movsb
ret
pushf
and
push
js
inc
adc
repnz
pop
push
dec
dec
xorb
mov
les
adc
push
cmpsl
cmp
mov
mov
cmp
xor
test
daa
cld
fmul
xlat
shr
push
cs
push
push
inc
out
sbb
ja
rclb
std
ja
sbb
adc
mov
je
lods
in
push
push
in
inc
nop
cwtl
mov
mov
popf
roll
xor
and
sti
inc
sti
xchg
mov
adc
sub
mov
leave
mov
inc
add
mov
je
bound
jb
mov
dec
jns
sbb
inc
xchg
jmp
xchg
mov
push
cli
push
mov
rcr
test
dec
push
dec
adc
dec
mov
rolb
test
dec
xor
cmp
in
sub
mov
xchg
xchg
ret
shld
sbb
mov
dec
push
or
inc
sub
cmp
sbbb
mov
dec
xchg
mov
mov
popf
push
pop
ret
shl
add
notb
mov
sbb
dec
das
jne
push
das
jne
jle
icebp
out
jle
popf
adc
decb
cli
popa
mov
lods
inc
push
xchg
xchg
and
les
sbb
test
fidivs
into
jmp
or
cmpb
adc
mov
in
test
inc
ficoml
sub
mov
shlb
inc
lret
inc
mov
and
mov
pop
dec
adc
xchg
rcrb
les
adc
shlb
sub
cmp
inc
test
push
out
loop
dec
les
sbb
call
test
adc
je
repz
xchg
lret
or
sbb
sub
cmp
cmp
mov
call
js
dec
out
mov
add
shlb
leave
inc
subb
outsb
mov
mov
and
lea
out
xor
je
push
fmuls
sti
into
aam
mov
idivb
push
in
xor
fsubr
pop
push
xchg
call
jmp
mov
fstpl
std
push
or
popf
inc
and
ljmp
mov
push
inc
mov
inc
adc
mov
xchg
mov
in
leave
movsb
rclb
adc
lea
aas
xchg
lds
sub
lret
jge
jne
fildll
sub
jecxz
dec
rcrb
loopne
dec
pushf
mov
hlt
or
push
bound
outsl
dec
xchg
mov
popa
push
cmp
xlat
jno
fs
mov
push
iret
and
mov
mov
dec
out
gs
sub
jle
aam
pop
xchg
mov
jmp
sub
and
fsubs
cmpb
inc
nop
push
mov
out
mov
jp
adc
and
sbb
push
dec
sbb
dec
xorl
sbb
test
daa
fists
mov
pop
pop
push
mov
mov
test
jo
out
movsl
or
cmc
fs
mov
jnp
adc
push
xor
xor
push
loope
call
stos
sub
push
push
rcrl
sti
mov
je
xlat
jmp
ret
xchg
xor
fdivrs
and
jmp
sbb
fldt
or
jae
push
pop
dec
adc
call
fs
dec
insl
mov
mov
mov
xchg
inc
dec
push
fcomi
imul
push
inc
push
lcall
add
stc
fwait
push
add
cld
jne
lret
xor
cmp
nop
or
je
cmpl
lds
cltd
fmul
fldenv
popf
gs
jl
sub
je
inc
cmp
sub
lock
sarb
pop
push
hlt
sub
sub
sbb
jle
cmp
or
push
xor
mov
xchg
and
xchg
xchg
scas
push
pop
dec
orb
mov
cmp
xchg
sbb
xor
movsl
sub
cmp
and
and
js
push
fwait
inc
test
ret
push
nop
aas
inc
lds
sbb
push
out
xor
or
sub
sarb
mov
call
sub
cli
cltd
imul
mov
sub
push
push
rol
xor
jb
fimull
xchg
cwtl
aam
call
and
mov
dec
lahf
mov
std
xor
sbb
jns
cld
or
lcall
mov
or
jle
lret
aad
sbb
add
cbtw
mov
or
xor
mov
sahf
lock
mov
mov
aam
and
cmp
cmc
mov
and
xor
jmp
add
and
jno
popf
pop
push
inc
push
test
xchg
sub
clc
fisubs
nop
call
lock
wbinvd
notb
push
jbe
pop
movsl
imul
xchg
jnp
pcmpgtb
push
adc
dec
das
fistps
cmp
imul
fmull
ret
inc
nop
sarb
push
xchg
aas
or
xchg
push
jmp
mov
inc
outsl
inc
sub
adc
mov
call
mov
test
dec
rclb
sbb
cmc
sbb
cmc
imul
and
insb
lcall
adc
in
inc
inc
mov
inc
outsb
je
jp
xchg
adc
call
mov
inc
and
push
mov
pushf
cmc
fldt
push
stos
xor
or
push
mov
pop
cmp
jne
jg
cltd
fisttps
push
int
loope
test
popa
adc
inc
xchg
je
lcall
lds
and
fsubrp
sbb
cmovl
mov
shlb
inc
mov
jb
sbb
mov
dec
outsl
cmp
movsl
add
jge
and
sub
dec
adc
in
dec
fildl
pop
pop
ret
push
dec
pop
les
jmp
stos
mov
xchg
or
or
sbb
or
pop
movsl
out
pop
cmpsb
jne
movsb
add
decl
add
insb
pop
dec
dec
in
je
and
rol
into
in
and
mov
loopne
rcrl
inc
sub
sbb
bound
inc
and
xor
fwait
jno
mov
movsl
mov
pop
push
and
loopne
pushf
inc
sarl
inc
sub
insb
in
mov
push
in
iret
inc
and
cmpsb
movsb
lods
push
mov
inc
loopne
rol
push
pop
dec
mov
fsts
lret
shl
cwtl
ljmp
test
mov
xlat
lcall
in
mov
push
push
mov
and
sti
push
mov
mov
add
shrb
imul
fdivrs
inc
ds
adc
dec
or
xor
sub
sub
sub
jp
sti
sub
outsl
subl
repnz
mov
mov
inc
enter
cmc
adc
cmpsb
mov
imul
in
sti
or
xchg
fsubl
xchg
call
int
leave
dec
das
ljmp
push
jmp
mov
andl
aam
xor
mov
adc
adc
mov
adc
pop
push
sbb
call
xchg
add
cmp
jle
or
cmp
shll
jnp
sbb
inc
cmp
das
jl
fimuls
mov
pusha
inc
cmp
mov
and
sarl
out
shl
in
inc
xor
popf
or
inc
iret
adcb
cmp
jl
ljmp
inc
jo
mov
push
adcl
push
test
das
xchg
push
stos
xchg
inc
out
mov
inc
inc
repz
pushf
shrl
inc
push
hlt
jle
into
pop
push
add
sub
dec
jb
and
mov
dec
test
in
loope
es
mov
in
or
and
and
and
add
icebp
sbb
adc
jo
push
enter
add
and
add
arpl
lods
mov
pop
daa
inc
or
mov
mov
jne
mov
push
add
fs
mov
nop
and
cwtl
sbb
dec
jp
push
inc
mov
test
das
cmp
jg
sbb
push
lret
adc
pop
in
mov
mov
iret
lock
jbe
loopne
mov
mov
sbb
and
jmp
and
cmp
sub
mov
jbe
outsb
scas
and
cmp
fistpl
icebp
data16
sti
aam
ljmp
jge
adc
sbb
lea
call
fcomps
push
sub
lods
xor
cmp
xchg
insb
mov
adc
mov
jb
cmp
popa
adc
sub
push
pop
push
push
sar
pop
pop
ret
fst
adc
mov
xchg
mov
mov
lock
and
jbe,pt
ror
push
fs
stos
stc
es
hlt
mov
add
pop
mov
add
sbb
dec
push
mov
je
lea
dec
and
xorb
in
ror
mov
call
mov
sub
insl
pop
xor
in
push
xchg
int
xor
rcpps
pop
into
outsb
in
pop
or
int3
xchg
jge
mov
xorl
xor
lods
aam
mov
pop
adc
test
and
fdivrl
aad
lret
inc
popf
notl
hlt
xchg
xor
push
xor
cmp
mov
insb
jmp
push
cmp
imul
mov
mov
mov
test
push
call
jmp
push
ds
cmp
and
pop
mov
xchg
clc
aad
jnp
pop
and
push
jmp
je
call
push
cmp
inc
sub
mov
adc
cmp
test
fnstenv
cld
mov
pop
ret
les
jbe
enter
mov
out
int
into
xorb
xor
push
lcall
in
pop
sub
shrl
add
lretw
ss
gs
push
sub
push
inc
lods
dec
pop
or
in
sti
lcall
test
xchg
jecxz
repnz
ret
test
sub
lods
fs
call
xor
ret
cltd
shr
jmp
mov
mov
push
stos
jp
push
cmpsl
in
xchg
fstl
dec
lahf
loope
adc
repnz
in
or
ret
cmp
pop
xor
push
stos
mov
xor
lock
jg
mov
shl
or
jo
andb
dec
push
jne
clc
ret
push
xchg
pop
and
cmp
push
aam
fbstp
fs
push
add
or
and
jmp
or
fildl
shlb
mov
ds
clc
rolb
addl
inc
and
jne
lea
or
xor
lds
mov
nop
mov
loope
cmp
in
dec
sub
cmp
leave
jge
xor
cmp
in
aad
inc
les
insl
xor
pop
cltd
push
gs
dec
push
push
imul
jne
fnstenv
fs
loopne
inc
pop
les
add
push
xor
jge
in
dec
push
ret
es
inc
push
loope
lds
adc
adc
test
movsl
xor
enter
xor
into
dec
ss
xor
push
mov
mul
cwtl
xchg
pushf
xchg
pop
mov
or
and
inc
aam
test
xor
adc
mov
filds
mov
in
imul
dec
in
or
ljmp
gs
stc
fs
rclb
push
dec
sarl
cmc
popf
jnp
ljmp
adc
jb
rcrl
and
mov
mov
push
loopne
cmp
cwtl
xor
das
lcall
xor
rol
mov
push
and
and
adc
loop
das
mov
push
arpl
lods
xor
pop
jge
mov
and
cld
pusha
pop
cmp
cmc
jl
push
cmp
push
ret
shrl
mov
and
fdivl
xchg
push
xor
dec
pop
sbb
cmp
mov
icebp
mov
daa
add
or
push
imul
aam
add
add
dec
in
lock
cmp
or
std
out
jl
daa
mov
adc
aas
test
xlat
mov
stc
clc
outsb
or
cwtl
sub
orl
outsl
jmp
mov
fiaddl
cmc
push
frstor
jbe
aas
xchg
andl
lock
int3
adc
in
orl
and
push
push
sub
sub
je
jae
outsl
sub
aad
test
lds
dec
and
dec
push
push
xlat
enter
jmp
or
sub
dec
clc
sbb
or
cmp
push
xor
or
or
add
dec
out
or
cli
sub
jo
dec
pop
jmp
sbb
insl
sbb
cmp
mov
negl
sbb
add
sbb
jle
push
fcomps
imul
call
movsb
jle
loop
push
iret
test
mov
add
or
adc
and
mov
push
icebp
jmp
loope
or
int
xor
outsb
mov
push
aam
jle
ret
call
xor
orl
stos
and
lret
dec
fldl
mov
mov
test
inc
or
dec
stc
push
adc
adc
push
jmp
xchg
test
xbegin
outsb
pop
imul
inc
setns
aas
and
dec
mov
rcl
test
mov
mov
les
rolb
data16
push
fmull
mov
jnp
add
jle
adc
in
out
mov
insb
adc
mov
and
or
add
lock
add
mov
clc
jmp
and
mov
inc
jae
or
cld
jno
cmpsl
fstps
xchg
mov
mov
sbb
jmp
mov
call
sub
jbe
stc
dec
or
je
movb
inc
mov
sarl
orl
ja
outsb
jo
jle
aad
sbb
sub
cmp
mov
lcall
jl
insl
je
push
mov
sub
adc
rcr
and
loope
lods
loopne
sti
aam
sbbl
mov
enter
mov
shl
cmp
stos
sbb
je
push
je
jnp
mov
inc
sub
add
jle
icebp
stc
push
xchg
mov
or
and
stc
inc
pop
cli
mov
adc
or
add
jmp
xor
mov
push
inc
cmp
lock
jne
movsb
adc
mov
enter
repz
fs
mov
dec
and
dec
out
sub
gs
pop
xchg
test
xchg
pop
test
ja
dec
inc
sub
sub
sbb
push
hlt
jne
ja
out
adc
xchg
cltd
hlt
mov
push
jo
sbb
popl
xchg
ja
push
pushf
xor
inc
lcall
sarl
ret
dec
mov
cmp
inc
or
movsl
lret
or
jns
xor
push
lea
dec
xchg
jnp
pop
ret
add
lea
adc
push
movsl
or
adc
sub
push
mov
das
sub
je
mov
xchg
stos
or
cld
cmp
add
es
pop
adc
sub
add
add
and
sub
les
adc
fsts
fimull
cmp
repz
leave
sub
jne
test
or
xchg
sti
daa
addr16
sti
cmp
test
mov
adc
leave
call
ja
cmp
sbb
inc
push
xor
arpl
mov
fldcw
xor
ret
sbb
scas
ret
sbb
divb
sub
and
pop
pop
pop
lods
mov
test
jne
inc
mov
sar
cmpsb
add
adc
ds
int3
sub
or
shlb
inc
bound
xor
jbe
mov
ret
sbb
or
push
adc
das
rorb
xchg
sub
push
push
sub
cltd
ret
test
jmp
push
sbb
adc
test
jbe
mov
cmp
ret
xchg
or
or
inc
ds
or
lret
fmuls
add
movsb
inc
or
insb
jge
xor
sub
cwtl
test
pop
push
mov
aam
imul
pop
adc
adc
add
push
or
cmp
lret
jne
pop
push
shl
jb
xchg
mov
in
mov
add
or
jb
dec
sub
pop
push
jns
nop
push
dec
jmp
xchg
mov
push
dec
das
repz
cld
adc
stos
sarb
lods
in
test
push
push
mov
mov
inc
push
mov
sub
xchg
jno
repnz
movsb
sbb
icebp
enter
dec
cmp
sub
call
mov
js
xchg
fnsave
icebp
and
adc
mov
mov
and
sub
inc
push
and
shrb
incl
sub
imul
jmp
fcoml
push
cwtl
xchg
subl
inc
dec
adc
daa
sarb
adc
mov
aam
pop
sti
adc
sti
test
mov
add
jns
or
ljmp
adc
mov
adc
lods
int3
xchg
or
lods
rcrb
adc
mov
mov
xor
push
lods
adcb
pop
adc
mov
bound
imul
jae
add
or
jl
bound
inc
add
mov
in
xor
and
add
ja
mov
rcrl
out
roll
adc
push
mov
pop
leave
add
push
dec
adc
loop
push
mov
push
cli
adcl
sub
pushf
add
or
sub
in
sbb
push
in
andl
xor
xor
xor
xor
xchg
push
cmp
pop
xor
inc
jle
aaa
mov
repnz
out
push
cwtl
mov
mov
hlt
enter
push
test
in
xchg
dec
clc
pop
call
and
dec
push
push
ret
or
xor
xchg
pop
mov
push
cmpsl
sbb
jo
int3
les
jge
fstl
xchg
push
iret
add
add
cld
aam
mov
test
add
cmp
jb
orl
add
and
test
push
add
adc
sbb
xor
in
cli
mov
or
xor
pop
or
jg
xor
pop
pusha
xchg
push
pop
mov
sub
mov
gs
out
vandnpd
cltd
pop
sbb
scas
inc
xchg
cmp
les
and
mov
sbb
les
sub
call
pop
scas
sub
dec
push
push
leave
je
inc
jmp
sub
std
in
jmp
cmp
cs
sub
or
add
add
cmp
or
loopne
nop
jne
enter
sub
mov
fists
sub
icebp
mov
pop
std
rclb
dec
js
clc
adc
mov
push
cwtl
ret
cmpb
lcall
mov
or
pop
sti
mov
mov
mov
adc
adc
jae
adc
leave
les
add
mov
jmp
and
pop
or
test
xchg
cs
mov
mov
orb
arpl
mov
fwait
mov
sbb
adc
add
repz
jl
out
xor
enter
and
cmpsb
lods
and
or
lcall
cs
pop
mov
adc
arpl
adc
clc
loope
or
sbb
repz
sbb
outsb
je
dec
dec
sbb
mov
shrl
lds
cs
mov
jmp
adc
and
xor
clc
mov
call
call
push
ja
in
cmc
aas
sub
or
jl
sbb
cmp
sbb
xor
jbe
mov
jmp
jge
std
outsb
popa
cmp
add
mov
and
subb
jl
gs
pop
ljmp
push
cmpsl
push
leave
and
and
lea
cmp
clc
mov
jo
ret
ss
int3
lods
jne
loopne
adc
push
loop
cmp
sbb
mov
aad
push
aam
hlt
popf
in
in
mov
clc
and
aas
inc
and
adc
enter
and
inc
out
mov
or
jne
lock
mov
into
sub
cmp
fcoms
flds
jb
enter
push
pop
ficoms
clc
enter
and
cmp
mov
adc
adc
call
stc
into
stc
int3
cld
dec
and
sbb
cmc
ret
ror
push
cmc
aas
mov
pop
push
push
stc
rcl
in
or
mov
or
pop
loope
sbb
faddl
adc
pusha
xchg
imul
rcrl
and
lds
inc
xor
popf
dec
mov
les
aaa
cwtl
pop
cld
cmp
mov
clc
add
test
lret
xor
cmp
sub
pop
scas
repz
div
test
test
cmovp
std
call
jnp
lret
ficoms
ret
cmc
dec
test
or
inc
and
sub
xor
pushf
test
mov
dec
xchg
add
xor
ds
sbb
add
pop
popa
mov
pop
dec
and
jne
cmp
stos
ja
and
stos
jae
inc
jl
and
movsl
xlat
shl
sub
in
sub
sbb
inc
je
loopne
fbld
add
or
mov
pop
ljmp
cltd
and
inc
inc
psraw
xor
ljmp
insb
and
cmp
push
sbb
push
mov
xor
divb
loopne
cmp
in
rcr
xor
fs
push
call
push
push
and
cli
pop
add
pop
jb
addl
mov
jp
adc
inc
adc
mov
xchg
xor
and
sbb
push
and
bound
adc
jae
or
and
add
pop
sbb
add
adc
xchg
aad
insb
push
inc
xor
pop
dec
xchg
inc
inc
push
fwait
push
cld
insl
jno
inc
repz
pop
push
mov
mov
inc
push
sbb
dec
addr16
and
test
les
sub
inc
pusha
or
inc
gs
nop
and
dec
add
or
inc
sub
movsb
adc
and
xchg
adc
jge
xchg
jne
cmp
daa
fldl
xchg
pop
lods
jp
and
mov
and
scas
test
andl
push
pop
or
stos
cmpsb
xor
imul
decl
or
inc
daa
jle
sar
cltd
or
fnstsw
test
scas
jnp
fsub
sbb
jbe
popf
in
daa
mov
push
xchg
add
inc
fsubs
movsl
ljmp
cmpsb
sbb
cmp
mov
mov
enter
pop
aas
cltd
or
adc
xor
and
lock
test
add
shl
push
hlt
or
sbb
aam
scas
pop
mov
es
adc
lahf
sub
in
dec
pop
stc
std
adc
or
dec
push
mov
inc
xchg
push
and
cmp
cli
lahf
inc
loopne
call
mov
jne
and
les
mov
pop
push
cmp
mov
inc
nop
push
icebp
pop
mov
add
push
pop
mov
adc
push
aaa
or
jne
aam
sbb
clc
cmp
sub
push
or
cwtl
adc
sbb
orl
push
push
or
jmp
incb
mov
xchg
call
push
cli
in
sub
or
decl
inc
pop
ja
sub
js
push
mov
pushf
jecxz
inc
add
push
test
mov
das
mov
xchg
popa
cmp
mov
mov
inc
andl
cld
jne
inc
decb
sar
mov
inc
xor
pop
cltd
jne
and
and
push
push
gs
aaa
out
xchg
cmpsl
sbb
or
sub
gs
outsl
xchg
scas
mov
adc
jne
push
scas
jle
pop
les
lock
test
std
mov
scas
mov
jno
cmp
inc
sub
fs
jo
mov
or
inc
mov
mov
mov
rcrb
shr
sub
push
add
sub
daa
or
lret
cmp
inc
je
or
add
sbb
xor
add
inc
or
aaa
mov
loopne
les
les
jl
push
cmp
rcrl
pushf
sbb
dec
push
jecxz
push
mov
test
fld1
sbb
fadds
mov
pop
or
rol
push
or
dec
inc
mov
pop
and
mov
jmp
cmp
test
addr16
cli
sti
pushf
inc
lock
fcomip
or
dec
fimull
push
mul
loopne
or
add
push
xchg
aaa
cli
xor
clc
and
dec
movsl
push
pop
cmpsb
lds
and
mov
push
stos
lods
aam
sbb
or
adc
mov
cltd
fsubrp
ja
and
push
icebp
les
dec
xchg
inc
ficomps
and
inc
mov
push
mov
jo
inc
xlat
rolb
xchg
out
cmp
sub
imul
adc
lret
or
dec
adc
icebp
cmpsb
adc
les
jecxz
dec
sbbb
mov
in
add
scas
and
iret
or
mov
mov
je
clc
sbb
in
movsl
dec
out
add
mov
repnz
psllq
popf
fs
adcb
sub
nop
add
adc
mov
add
out
les
test
pushf
sbb
adc
and
cmp
push
test
imull
xchg
mov
data16
cwtl
jae
shll
dec
push
popa
repz
push
test
lds
jmp
fistl
xchg
jl
sar
fs
lock
and
add
call
dec
loop
inc
mov
mov
ret
bound
cwtl
inc
jb
out
jmp
mov
mov
pop
mov
int3
pop
add
enter
jnp
cmp
or
push
in
in
inc
ljmp
mov
mov
iret
mov
les
adc
mov
jno
movsb
fisubrs
mov
push
cmpsl
out
repnz
dec
adc
ja
movsl
test
push
bound
popf
test
pop
in
or
adc
sbb
and
mov
sub
or
adc
arpl
sub
and
sub
frstor
rorl
cmpsl
ficompl
into
sub
rclb
add
sub
popa
out
into
inc
push
cmp
call
mov
xchg
ffreep
repnz
push
into
mov
lret
adc
sbb
fisttpl
xchg
rolb
push
bound
inc
adc
jmp
dec
jecxz
push
mov
cltd
fidivl
adc
mov
add
mov
les
mov
mov
cmp
movsb
adc
sbb
or
inc
add
ret
lea
shlb
dec
cmp
add
xor
addl
mov
or
addb
push
leave
pop
imul
push
mov
inc
sub
and
xchg
loop
adc
xchg
repz
push
lods
enter
add
mov
fists
push
cmp
xchg
sub
enter
sub
hlt
rorl
mov
xchg
xor
movhps
xchg
adcb
sbb
sbbl
adc
adc
xor
scas
std
test
push
push
lret
push
sti
pop
push
mov
add
xor
outsb
loop
pop
out
add
decb
jl
jmp
pop
push
mov
mov
dec
mov
sub
aam
dec
xchg
out
inc
and
sbb
cmpsb
in
inc
lock
or
or
and
and
hlt
xchg
pop
test
daa
ret
fistpl
mov
xchg
call
adc
xor
push
stc
sbb
int
push
aaa
inc
jnp
xchg
cmp
adc
mov
sub
or
or
pop
mov
out
push
mov
sbb
sar
xor
push
push
inc
and
pop
sbb
in
cmp
jle
ss
hlt
mov
mov
lock
aaa
pop
sbb
cmp
jbe
cmp
in
lock
or
dec
mov
push
out
mov
adc
push
push
inc
dec
push
adc
inc
jmp
pop
mov
pop
pop
dec
pop
aad
adc
call
lret
or
add
sub
or
add
inc
ret
cwtl
jne
sbb
cmp
je
dec
jl
push
push
call
test
push
dec
and
jl
dec
iret
cli
flds
cmp
dec
test
add
add
stc
js
es
and
and
inc
mov
pop
ret
cmp
fsubs
inc
adc
or
inc
ss
pushf
dec
dec
jnp
xchg
pop
jle
in
push
sbb
push
sbb
mov
push
lods
or
pop
and
int3
nop
xchg
sarl
push
repnz
loope
mov
or
mov
xor
mov
push
daa
push
pop
sbb
and
xchg
clc
jg
and
daa
je
nop
inc
push
sbb
nop
add
aam
roll
rep
orb
dec
sbb
xchg
mov
cmp
and
aas
and
jecxz
ja
in
and
inc
jmp
por
popf
lods
jg
call
inc
cmp
pop
adc
call
mov
leave
sbb
jne,pt
movsb
int
inc
jmp
ja
out
sbb
lods
je
ret
adc
mov
dec
cmc
outsl
shlb
stc
mov
cmp
cmc
xacquire
clc
and
sub
pop
or
adc
pop
scas
dec
lds
sub
adc
add
xchg
adc
cld
push
cli
mov
xor
push
popa
and
cs
adc
dec
or
sbb
and
or
mov
sub
mov
leave
in
xchg
adc
mov
lret
movsb
xchg
aam
stos
call
cmp
negb
inc
adc
repz
adc
xor
xchg
mov
adc
mov
jne
test
popf
imul
adc
sbb
sbb
pusha
mov
mov
int3
sub
repz
cwtl
sub
xchg
call
imul
movzwl
inc
push
lcall
lods
push
push
loopne
mov
xor
fdivl
adc
or
mov
dec
adc
int
sbb
sbb
dec
fisttpll
inc
push
dec
hlt
jbe
jmp
test
pop
popa
cmp
xchg
icebp
repz
dec
cmpsb
adc
xchg
mov
and
mov
add
aam
sub
xchg
into
cmp
test
pop
push
sub
jge
insb
adc
dec
adc
pop
sub
add
xor
sub
mov
leave
jns
inc
movsb
cli
adc
pop
stos
test
movb
and
push
mov
outsl
cltd
xchg
mov
cltd
mov
or
js
movsl
push
imulb
fsubs
loope
int3
or
pop
cld
push
out
scas
mov
fidivrl
stc
sbbb
xchg
and
mov
mov
and
orl
add
xlat
and
add
callw
mov
inc
sbb
jle
clc
mov
fs
push
sub
jmp
sub
in
ud2
nop
shlb
pop
or
inc
out
ds
call
mov
adc
iret
rcrb
or
adc
jge
nop
lea
cltd
cwtl
data16
dec
adc
lea
addb
jl
stos
in
inc
pop
cmp
jb
mov
pop
aaa
nop
inc
rorl
or
enter
movsb
lods
cmp
stc
jb
sub
adc
repz
out
add
jo
cmp
fnstcw
xchg
inc
add
push
ret
and
push
orl
loopne
add
push
and
jno
adc
pop
xorl
push
xchg
nop
or
inc
inc
bound
mov
fsubp
adc
add
mov
xchg
dec
xor
cs
clc
pop
jne
into
cmp
int3
mov
and
xor
jo
pop
loope
arpl
les
fdivrl
cmp
or
insl
xchg
sub
fdivr
inc
inc
mov
mov
stos
icebp
dec
std
jmp
jmp
or
adc
test
je
cmp
aad
sahf
or
nop
or
pop
lds
jmp
mov
jns
push
sub
mov
jmp
sub
xchg
adc
faddl
inc
mov
mov
or
and
sbb
push
adc
leave
sub
and
or
in
inc
mov
push
popf
xchg
or
or
jge
inc
cmpb
aas
inc
loopne
inc
xlat
enter
pop
sub
mov
cmp
insb
bound
sub
sbb
add
mov
add
cmp
jge
cmp
je
sbb
xchg
sbb
push
cmp
jl
test
jg
or
lea
jne
pushf
les
add
test
or
stos
lcall
xchg
mov
adcb
rorl
cmpsl
push
sbb
add
push
mov
cmp
and
jne
push
test
sbb
xor
rcll
loop
std
inc
in
adc
repnz
and
adc
pop
shll
pop
sbb
rclb
push
or
in
sub
cmp
pop
jb
dec
jmp
or
int3
in
nop
xorl
push
lret
out
jnp
xchg
add
push
ss
jo
outsb
or
es
add
int3
add
add
xchg
notl
or
bound
pop
push
je
cmpsb
pop
inc
test
out
cmp
mov
cli
shlb
lock
test
je
mov
inc
cld
dec
pop
mov
and
dec
add
mov
or
pop
or
add
or
test
fld
jmp
or
push
inc
mov
inc
jbe
push
and
and
sbb
loope
testl
jne
repz
cvtdq2ps
lock
fldcw
adc
mov
adc
aad
mov
dec
mov
xchg
push
jne
jae
fidivrs
jnp
cmp
or
test
cmpsb
mov
cwtl
pushw
xor
mov
add
push
sbb
and
test
mov
ret
int3
push
cmpsb
mov
scas
pop
cmp
mov
inc
dec
in
lock
ret
andb
jecxz
lods
dec
fimull
dec
cmc
loop
pop
les
fwait
subl
xchg
inc
rolb
inc
neg
dec
mov
imul
adc
cmp
pushw
dec
add
mov
fs
push
push
inc
es
push
and
xchg
adc
ljmp
notl
and
push
loopne
and
push
movsb
and
cmp
sub
es
xor
mov
cmp
insb
xor
cli
jg
pushf
jne
fs
push
in
cmp
pop
sbb
push
ret
out
rclb
data16
or
cwtl
in
mov
mov
test
lods
mov
dec
adc
aaa
scas
shl
add
cmp
jp
mov
or
cmpb
pop
adc
mov
loop
cwtl
stc
or
sub
mov
xchg
pop
sub
inc
rclb
jb
stos
loopne
enter
jo
arpl
lea
aas
nop
adc
cld
dec
orb
enter
and
or
add
or
insb
scas
adc
int3
push
sub
mov
mov
inc
lret
sbb
inc
jecxz
xor
cmp
xor
sub
and
sbb
adc
or
push
mov
in
cmp
and
shlb
pop
and
shlb
pop
and
rorb
add
lock
clc
sub
loop
icebp
into
or
mov
pop
xor
pushf
or
cli
cmpsb
adc
or
xor
cmp
or
jo
std
mov
lock
mov
daa
data16
nop
inc
stc
and
or
jo
lock
or
sub
push
pop
faddl
and
mov
dec
test
cmp
movsb
jno
xchg
push
out
xor
xchg
sub
sub
dec
inc
lods
pop
out
push
mov
pop
sub
pop
shll
adc
aam
out
push
adc
jmp
and
jmp
and
jmp
jns
and
jb
or
inc
sbb
inc
mov
mov
adc
dec
mov
shlb
or
std
inc
pop
jns
rcrl
sar
and
into
ljmp
lret
fcomps
xchg
adc
push
stc
jne
shr
and
adc
pop
add
shll
adc
add
sub
add
in
mov
sub
inc
inc
and
inc
and
adc
lea
add
clc
xchg
decb
enter
sbb
or
adc
inc
pop
mov
cmp
bound
cld
sub
mov
mov
stc
sbb
lret
lcall
ja
and
mov
xchg
out
push
cmp
nop
movsl
adc
sub
sub
in
lds
loope
inc
out
add
push
ret
nop
cmp
cli
loop
inc
add
cmp
mov
or
push
sbb
and
shr
clc
inc
jl
sbb
adc
pop
out
movsb
push
mov
inc
rorb
sbb
sarl
loopne
fnstcw
ret
pop
add
mov
inc
arpl
fildll
popa
or
push
test
rclb
shll
aad
adc
adc
sbb
jo
pop
test
scas
push
aad
push
jl
push
loop
pop
mov
or
push
pop
push
push
mov
cmp
add
mov
or
clts
mov
mov
or
or
xchg
shrb
aaa
cld
pop
sub
push
sub
add
xor
inc
and
push
and
mov
movsb
push
cmpb
adc
inc
shlb
push
jmp
cmp
add
jne
neg
pop
jl
movsl
fsubrl
pop
idivl
and
cld
sbb
jb
cmpb
jne
sub
add
divb
sbb
sarb
add
inc
mov
or
out
xor
sbb
mov
or
cmpsb
repnz
testb
add
jmp
cmp
loope
lahf
or
or
jne
dec
cld
pop
jmp
lea
orl
iret
lret
clc
sub
fwait
dec
sub
or
pop
sub
cmp
jb
mulb
sbb
sub
das
and
jae
sub
leave
cwtl
and
push
je
dec
test
aas
adc
call
jge
popa
daa
inc
sub
fs
lock
in
jne
js
popa
loope
ds
adc
sub
cmpsb
and
and
fcompl
mov
pop
mov
mov
push
nop
xor
cmp
je
psubsw
nop
int
ss
or
mov
dec
inc
out
cmp
movsb
xchg
aad
out
inc
lods
cld
call
lods
pop
incl
nop
xor
adc
inc
adc
in
fcomps
bound
add
and
and
data16
mov
sub
or
xor
and
or
fcoml
ja
test
je
pop
ret
and
xchg
mov
and
jmp
push
pop
ret
repz
add
int3
xchg
xor
cmp
push
push
xor
inc
cmc
insb
inc
add
add
push
mov
addb
outsl
push
or
loopne
or
test
sahf
enter
neg
in
nop
inc
mov
adc
jbe
out
inc
xchg
or
adc
test
ficompl
data16
into
push
or
mov
movsb
mov
pop
pop
lea
loopne
jp
pop
pop
mov
mov
pusha
jnp
mov
and
test
add
jecxz
inc
add
orb
in
test
cltd
and
scas
pusha
sbb
lock
into
pop
rclb
shr
sub
fnstenv
mov
in
fcmovu
inc
pop
push
push
and
ret
shl
mov
ret
and
xchg
ret
rolb
mov
jge
lea
cld
cmc
and
lea
movsb
or
inc
mov
je
mov
inc
cmp
in
test
les
cmp
in
or
push
push
test
jecxz
push
adc
or
daa
ja
and
xor
jo
or
xor
imul
adc
sbb
xchg
pop
inc
rcrl
pop
out
cmp
ret
mov
cld
cmp
push
out
lock
daa
xchg
js
out
mov
inc
adc
aam
xchg
aad
mov
pop
jo
pop
std
cld
adc
fwait
mov
sti
jg
scas
ss
popa
shrb
and
popa
dec
sub
js
adc
add
inc
mov
inc
mov
fwait
mov
pop
cmc
xchg
push
or
andb
sbb
pop
mov
aas
jge
movsl
icebp
popa
dec
lock
mov
adc
loop
push
imul
adc
stc
addr16
cmp
cmpsb
mov
or
or
xorb
jbe
pop
loop
adc
call
ljmp
popa
add
imul
pusha
xchg
cmp
nop
add
inc
add
je
xorl
and
fucomip
mov
add
mov
jmp
inc
rorl
and
movl
int
jne
stos
or
es
ret
push
pop
or
add
adc
divl
xor
mov
sbb
sub
loope
shl
test
divw
cmc
les
je
cmp
lock
push
inc
or
sbb
mov
cmp
push
stc
push
mov
std
add
push
call
sub
xchg
add
fildll
add
loope
jmp
cmp
jb
loopne,pn
add
je
mov
adc
push
push
and
inc
sbb
pop
aaa
sub
popa
add
jmp
add
shl
sub
jmp
hlt
mov
sub
adc
ret
jg
stos
movb
mov
or
pop
in
jg
push
call
pop
jmp
sub
notb
or
pop
out
lahf
pop
fwait
jnp
cmp
adc
sbb
dec
mov
stos
xor
mov
mov
leave
xchg
mov
push
push
lret
pop
add
cld
dec
cmp
xchg
push
inc
push
mov
fcompl
sub
mov
je
sar
inc
ja
cmpsb
mov
jp
inc
dec
in
or
sub
adc
cli
and
dec
xor
add
mov
push
scas
xchg
dec
cmp
cltd
stos
push
jg
inc
ficompl
push
dec
lret
or
sbb
divb
or
in
mov
xchg
call
fmuls
xchg
dec
sub
add
inc
out
add
rorb
es
xchg
add
push
lret
sub
mov
insb
stos
cmp
ret
dec
xor
sbb
test
xchg
sbb
dec
cmp
xchg
out
sbb
xchg
add
jmp
xor
adc
dec
imul
movhps
sub
ret
jmp
add
addr16
les
push
bound
pop
jnp
and
inc
sbb
push
jns
inc
shrl
or
mov
or
pusha
pop
sbb
fs
out
jmp
jno
sub
fdivp
xor
loope
xor
loopne
popf
ss
int
jb
inc
movb
mov
or
adc
jle
adc
xchg
sti
add
and
sub
mov
fsubrs
sti
leave
loopne
ss
mov
mov
pop
mov
and
orb
cmp
jns
imul
mov
sub
xchg
push
scas
imul
fmuls
cmp
jb
xchg
lds
jns
pop
movsbl
out
sbb
movsl
mov
mov
jg
test
add
cld
push
mov
cld
mov
sub
sti
pop
out
mov
enter
pop
sub
inc
sbb
clc
cmp
push
fmull
aaa
xor
es
icebp
pop
push
ret
shrl
loopne
ret
adc
enter
jne
add
loope
inc
sbb
lods
or
sub
cld
fs
cmp
sbb
pop
aaa
call
fs
add
or
adc
mov
test
pop
mov
mov
push
insb
mov
or
mov
adc
jno
jl
imul
adc
pop
add
ret
test
mov
add
push
lcall
mov
cmp
pop
bound
fdivp
daa
sub
sbb
popf
lret
lret
adc
jmp
lret
pop
xor
shr
daa
fildl
pusha
fmuls
leave
jne
hlt
div
mov
pop
out
je
lahf
xor
shll
cmp
push
ja
xchg
mov
xor
shll
push
jo
sub
push
push
push
outsl
es
jmp
movsb
outsl
adc
xchg
or
enter
sub
adc
js
mov
bound
cmpsb
mov
adc
push
mov
and
jge
add
push
xor
test
inc
ss
push
je
loopne
sub
adc
jno
adc
daa
js
adc
and
mov
inc
push
shr
dec
fnstcw
sbb
sbb
sbb
in
test
pop
mov
inc
xchg
sarb
add
pop
cld
jne
mov
fnstcw
mov
or
add
mov
sbb
jne
jmp
lock
pop
add
or
mov
add
lock
and
mov
adc
ljmp
jne
sub
xor
inc
scas
pushf
push
or
or
push
aad
cmpb
es
ret
aaa
pop
imul
xchg
xchg
xlat
das
add
mov
mov
cmp
jne
push
inc
inc
dec
lea
jge
js
cmp
in
cmp
add
pop
call
dec
ret
and
loopne
sub
repz
jecxz
insl
sbb
fcoml
dec
adc
cs
cmc
nop
sbb
add
rcrb
fsubrs
les
cmp
jne
enter
out
gs
adc
cmpsl
movsl
and
loop
push
cmp
push
dec
stc
jg
out
repz
out
and
inc
notl
dec
jbe
gs
clc
imull
pop
shll
movsb
cmp
pop
sbb
jl
jns
sub
and
cltd
adc
add
fistps
and
imul
ljmp
adc
mov
sarb
gs
adc
clc
mov
enter
dec
add
or
push
pop
or
jnp
mov
adc
popf
jo
mov
sub
sub
push
cmp
scas
cmp
jne
scas
mov
cltd
or
pop
lock
jg
aas
shlb
mov
cli
and
lea
insl
or
xlat
shl
sub
adc
clc
dec
notb
or
sub
mov
in
or
push
fimull
jns
jne
and
dec
or
enter
xor
mov
subb
inc
lret
in
into
das
pop
or
cltd
cmp
outsb
cmp
or
mov
cwtl
jne
sti
mov
pop
cld
bound
push
outsl
lea
lret
shrb
or
ror
sub
daa
test
sub
cld
push
mov
add
jne
jmp
lods
in
mov
jg
in
jmp
sbb
hlt
lahf
jmp
fwait
cmpl
imul
daa
inc
add
shrb
adc
add
or
sub
into
xchg
incb
je
loopne
scas
add
ficoms
and
xor
enter
sub
adc
or
roll
jl
rcll
or
cmp
sbb
mov
andl
adc
cmp
aas
jb
sub
cwtl
pop
sub
cmc
xor
pop
push
or
mov
loop
test
and
sbb
test
pop
pop
inc
push
jnp
cmpsb
xchg
pop
cmp
jae
jo
movb
movsb
les
int3
add
in
lahf
push
sahf
push
leave
gs
ja
les
add
adc
inc
sti
pop
xor
insl
sub
sub
inc
jmp
icebp
andb
adc
repz
xor
daa
test
jmp
mov
push
pop
and
xor
push
cmp
jo
xor
push
or
cmp
mov
or
cmp
jne
pop
push
stos
adc
nop
add
mov
inc
test
adc
or
clc
adc
ds
cmp
push
mov
loop
in
sbb
push
push
adc
pop
inc
arpl
and
dec
ret
add
pop
inc
pop
rorb
jmp
jae
xlat
mov
movsb
outsb
cmp
or
dec
in
jbe
add
imul
icebp
inc
lahf
clc
fildll
add
mov
jmp
cmp
sti
fcoms
sbb
rorl
aam
lods
sub
sbb
dec
sub
ret
dec
jg
sbb
adc
mov
and
lret
or
xorb
adc
andb
sub
les
dec
je
clc
mov
adc
fstps
leave
testl
mov
mov
nop
cld
mov
push
scas
jg
cmp
xor
into
pop
das
in
xor
mov
pop
movsl
imul
leave
cmp
loopne
test
jmp
testl
xchg
andb
cmpsb
mov
sub
leave
cmp
adc
push
enter
rorl
leave
insb
sbb
outsl
test
or
add
pop
and
int
mov
lock
and
pop
pop
xor
dec
pop
das
push
insl
clc
test
aas
sbb
and
inc
jmp
mov
pop
adc
or
gs
add
or
lds
xchg
adc
lea
jne
insl
dec
and
or
movsb
sub
xlat
add
mov
enter
jo
and
loope
push
dec
imul
test
inc
out
inc
sub
mov
out
cmpsb
movsb
sbbl
mov
add
enter
call
adc
testb
sbb
add
jecxz
jl
lcall
xor
or
jmp
aaa
jns
or
sti
mov
aad
lea
push
push
cmp
call
adc
loopne
lock
jmp
dec
aam
dec
xor
pop
cmp
pushf
push
jecxz
lods
inc
ret
call
inc
mov
clc
adc
sbb
call
jg
enter
pop
aas
or
jns
cld
mov
xor
in
xlat
fwait
jle
mov
and
mov
es
dec
aas
xchg
loop
dec
xchg
jp
pop
mov
clc
sbb
cmp
inc
roll
push
andl
adc
xor
adc
decb
sub
mov
inc
pxor
add
repnz
and
scas
mov
inc
push
jne
or
jmp
repz
ret
pushfw
fcoml
fimuls
add
je
xchg
loope
sub
dec
cwtl
push
mov
dec
xchg
push
or
add
adc
leave
push
push
and
xor
out
mov
lret
sar
pop
cmp
sub
ja
pop
enter
push
inc
pop
and
bound
cmp
dec
fisttpll
xchg
test
or
leave
cmp
adc
xlat
jge
push
rcl
ljmp
pop
pusha
or
pop
dec
inc
add
out
in
fisubl
inc
or
push
and
lock
clts
aas
rclb
cmp
jl
or
jl
or
jg
mov
lcall
test
leave
add
roll
add
scas
arpl
pop
stc
xchg
addl
and
add
jmp
sub
in
or
inc
sub
dec
cld
adc
sbb
xorb
push
xchg
or
mov
adc
xchg
sub
sti
sub
and
call
hlt
and
ds
js
jmp
das
mov
pusha
inc
inc
shr
jmp
in
add
and
add
lret
push
cmp
jmp
je
or
and
insb
lea
mov
mov
adc
and
test
adc
jg
jbe
cmp
inc
out
push
jb
js
insb
xor
rclb
ret
fdivp
dec
into
or
xchg
incb
dec
nop
mov
dec
int3
push
imul
jmp
cmp
addr16
in
inc
ret
xchg
test
pop
and
clc
nop
loop
js
call
mov
jo
or
cld
test
inc
add
les
cld
xor
jne
and
test
sti
and
add
sbb
pushf
xchg
and
movsl
fisttps
test
dec
cmp
adc
dec
test
xchg
inc
aam
xchg
push
adc
lret
jmp
out
int3
and
or
mov
jo
jge
pushf
sbb
xor
ds
sbb
shrl
mov
js
xchg
das
call
jae
ds
inc
dec
jb
hlt
fsubrl
into
adc
sub
pop
pop
je
or
test
inc
jmp
fdivrs
adc
lods
mov
clc
jmp
push
call
jle
xor
sub
filds
rcll
movswl
shr
stos
in
aad
sbb
mov
jecxz
in
cli
cmp
mov
pushf
push
clc
xor
adc
cld
ret
rclb
rorb
mov
lock
fs
push
mov
inc
cmpl
mov
inc
aad
jns
adc
out
stc
andb
pushf
cmpsb
sub
pop
add
test
xchg
pop
inc
fs
push
ret
or
ljmp
call
sbb
imul
dec
gs
adc
daa
adc
push
je
daa
add
sub
leave
insl
add
aam
inc
jmp
in
jmp
or
dec
notl
xchg
gs
adc
sbb
or
ds
pop
and
mov
je
mov
sub
push
ja
xchg
add
and
test
jmp
mov
and
mov
or
add
ret
add
imul
or
add
cmp
xor
xor
inc
dec
adc
call
pop
rcrb
or
sahf
aad
and
or
cmpsl
cmpsl
cmp
test
add
in
pop
jl
mov
jae
ret
pop
in
divl
fisubrl
push
cli
jmp
sbb
or
pop
jne
and
adc
xlat
cmp
fincstp
push
mov
or
jne
dec
in
sub
pop
jecxz
adc
jg
sbb
andb
cltd
push
push
push
push
mov
push
call
loop
jg
ret
xor
rcl
mov
out
and
sti
cmp
pop
aam
clc
sbbb
mov
sbbb
jo
mov
xor
stos
or
inc
and
add
test
cltd
pop
fadds
add
shll
test
mov
or
mov
lar
xchg
and
sbb
sub
pushw
hlt
xor
pop
test
push
push
call
mov
mov
ljmp
xor
push
pop
mov
lret
xor
call
mov
aas
je
aam
mov
jle
sub
incl
fiadds
inc
cmp
arpl
sarl
dec
outsl
loop
push
sbb
dec
mov
dec
fcoml
jmp
pop
sarl
mov
add
push
and
dec
adc
xchg
insb
test
dec
lea
inc
jmp
mov
lcall
dec
or
dec
add
jp
and
add
lock
xor
cltd
aas
call
cmp
lahf
adc
add
ret
clc
imul
stos
mov
pusha
bound
push
insb
decl
or
call
ds
and
dec
mov
jb
gs
cs
adc
push
push
push
inc
insl
sti
inc
std
jne
aaa
aas
or
pop
mov
ds
cs
test
insl
inc
pusha
fs
cld
movsl
sbb
repz
les
push
andb
mov
outsb
shr
push
cmp
adc
adc
or
mov
shlb
or
and
and
mov
push
mov
mov
adc
mov
inc
add
jb
push
cltd
adc
ds
xchg
nop
lret
xchg
or
and
inc
repnz
mov
jp
mov
shrb
loopne
rcrl
repz
add
sub
sbb
popa
mov
idivl
std
mov
jmp
dec
or
je,pt
push
sub
xor
or
sbb
or
aaa
dec
jmp
cmpb
ss
sub
add
xchg
jl
or
xorl
stos
and
pop
push
test
ja
xor
sbb
jmp
jns
push
lock
cli
dec
icebp
pop
addb
sbb
adc
and
insl
cmp
xchg
imulb
xlat
scas
bound
enter
ljmp
ret
pusha
push
je
je
lock
incl
add
out
add
xor
outsb
ret
add
sub
scas
jnp
emms
adc
xchg
mov
and
xor
mov
scas
in
mov
sub
pusha
std
faddl
cmpl
xchg
pop
in
adc
or
sub
or
add
xor
jle
or
xor
sbbl
dec
arpl
push
pop
cwtl
adc
divb
sub
push
jmp
test
lea
ss
mov
cmp
or
pop
test
mov
sbb
xchg
cld
test
mov
add
das
push
or
pop
out
rcrb
imul
add
call
mov
fcompl
mov
mov
push
inc
pop
jo
add
mov
sub
pop
and
sub
outsb
fbld
inc
add
leave
and
arpl
ror
or
and
jbe
sub
gs
push
lret
popa
movsb
sub
or
pop
sub
sub
dec
lods
cvtps2pi
cmpsl
and
push
rcll
or
or
cwtl
mov
xor
sub
testb
fsts
push
cs
je
enter
dec
dec
or
lods
movsb
sub
push
jne
call
pop
icebp
or
mov
jle
lahf
ljmp
or
mov
addl
fwait
ds
adc
loope
adc
cmp
or
mov
ret
add
xchg
pop
sbb
mov
aas
pop
dec
cmpsl
ret
scas
push
mull
and
mov
pusha
shl
sub
adc
loop
add
xor
xchg
fldenv
je
cmp
pop
cmpsb
sub
ds
lock
outsl
pop
sub
push
das
movsb
cmp
sbb
popa
inc
ss
or
std
add
or
mov
iret
inc
adc
cs
pushf
mov
jae
fcoms
test
push
pop
cmpsl
or
cmpsl
and
pop
mov
xor
pop
inc
pop
or
repnz
xchg
jecxz
add
ss
cmp
jae
lock
or
fidivrs
push
xor
push
add
sub
inc
mov
nop
ret
adc
mov
in
pop
enter
dec
jne
xor
jmp
add
rorb
jmp
in
rcrl
test
dec
dec
je
movsb
out
sbb
adc
loopne
call
and
fs
lret
mov
sbb
add
jle
enter
lret
pop
shrb
sar
adcb
or
adc
je
and
jne
cltd
or
xchg
inc
sub
pop
xor
add
cs
not
fisttpll
fbld
ret
cmp
lret
lods
aam
leave
cmp
xor
aam
es
jb
rclb
or
imul
mov
into
mov
out
jecxz
sub
cmp
cmpsb
pusha
sbb
adc
mov
lret
jb
pop
orb
sbb
out
cmpsb
cmp
dec
jb
add
leave
jmp
jne,pt
xchg
xchg
push
push
fs
aaa
push
cmp
push
jmp
sub
push
pop
mov
push
faddl
test
push
mov
push
loopne
jge
add
push
int
mov
add
lock
jne
inc
mov
push
inc
add
jl
inc
faddl
psubusb
xchg
jecxz
test
lea
cltd
add
sub
in
ss
jmp
push
cmp
or
jmp
out
fwait
roll
ret
js
jne
rcrb
stos
adc
lss
stos
cmp
jbe
or
insb
add
out
jmp
lea
js
out
cli
inc
dec
inc
out
mov
push
insb
lock
sub
movsb
fimull
lea
fdivp
pop
add
add
add
or
addr16
or
push
cltd
rorb
xor
dec
or
test
add
adc
repz
out
repnz
data16
or
cmp
pop
or
pop
stc
inc
xor
cmp
push
ja
add
leave
jle
jle
jmp
movsl
cwtl
adc
xchg
mov
sub
push
enter
pop
lahf
out
sarb
scas
negl
outsb
sahf
inc
inc
lock
test
icebp
or
rcrl
gs
in
add
adc
sub
int3
es
sbb
jl
movsl
adc
cmp
xor
dec
jbe
push
jle
aam
lods
imul
mov
fdivrl
out
xor
pop
stos
or
decl
js
push
or
push
call
jns
add
mov
pop
cltd
ja
and
push
call
cli
js
fwait
cmp
cmp
out
mov
daa
push
aad
push
or
ja
aaa
loopne
add
jmp
push
jbe
mov
call
or
mov
outsl
pop
icebp
add
push
div
mov
scas
pop
lea
or
gs
push
mov
arpl
call
push
lret
xor
bound
in
mov
in
or
in
fisttps
fs
and
mov
cmp
je
add
xchg
cmp
jl
notb
bnd
test
push
mov
in
mov
test
rep
jns
sub
jbe
out
xchg
mov
jge
insl
jne
test
faddl
jge
aas
cmp
xchg
xchg
mov
jmp
xchg
push
ret
xor
lock
add
inc
sahf
push
push
xchg
stc
or
lret
je
mov
mov
mov
cli
cmp
pop
ja
adc
cld
mov
nop
inc
popa
inc
sub
inc
cld
insb
and
pop
ret
sbb
shrl
dec
inc
adc
daa
lods
inc
and
mov
pop
push
mov
lds
ljmp
or
inc
cmp
popa
inc
mov
push
sub
inc
sti
adc
ret
push
dec
stos
add
fidivrl
sbb
ret
push
call
dec
pop
cmp
shll
lahf
sub
rolb
push
incb
xor
and
std
adc
pop
jne
mov
push
dec
sub
je
sub
loope
aad
call
fadd
mov
adc
adc
xchg
push
adc
adc
jb
stos
mov
dec
dec
fstl
cwtl
into
adc
add
sbb
or
jl
and
push
lock
addl
jb
mov
mov
orb
test
rcll
push
lea
popa
mov
dec
mov
sub
push
mov
and
mov
test
popf
into
stos
inc
sub
or
pop
pop
push
je
ljmp
push
push
fs
ss
out
jne
and
push
mov
call
inc
cld
in
lea
sub
inc
lret
lea
adc
ret
pusha
xor
adc
cli
nop
loope
add
sbb
add
and
mov
mov
cmp
jmp
popf
push
sub
dec
pop
stos
push
dec
cmp
sahf
shll
push
dec
pop
ret
xor
adc
or
push
dec
int3
cmp
ljmp
mov
adc
push
call
std
and
out
lods
loopne
cmp
jp
mov
jne
mov
rorl
or
shrl
adc
rcll
cmp
add
ja
xchg
jne
mov
je
in
inc
xor
dec
push
scas
es
sub
mov
orl
sbb
or
test
xor
lea
shll
mov
or
pop
xor
subl
pusha
cmpw
pop
lock
dec
dec
cmp
orb
sbb
movsb
inc
add
std
call
dec
or
sbb
dec
adc
xchg
repnz
dec
add
xor
insb
and
imul
in
subb
adc
jbe
dec
push
inc
imul
scas
cld
jle
adc
adc
and
popf
push
push
mov
jl
or
jp
add
jo
adc
inc
xchg
jle
xor
daa
mov
cmc
xor
xchg
adc
stc
push
adc
mov
sbb
inc
popf
into
call
das
add
push
adc
xorb
mov
cmp
xchg
loopne
cmp
jmp
cmp
push
rcl
xchg
loope
pusha
leave
clc
xchg
or
inc
sbb
hlt
adc
mov
or
push
hlt
mov
adcl
jb
push
cltd
mov
pop
mov
mov
ss
in
pop
jne
push
and
dec
or
ret
jne
sbb
pop
or
mov
and
push
push
push
cmp
or
clc
cmpsl
jnp
insb
mov
mov
xchg
inc
sub
out
aam
pop
sbb
int3
adc
xchg
and
or
adcb
mov
and
push
loope
cli
ret
adc
jb
into
dec
jns
call
mov
cli
jnp
cwtl
add
add
sub
shr
dec
push
imul
pop
add
mov
fbld
adc
or
adc
cmp
hlt
scas
push
inc
mov
jg
pop
or
jle
cli
add
je
push
aas
jbe
push
pop
mov
cmp
and
jae
imul
add
mov
inc
decb
jne
pop
and
aas
dec
in
sub
and
lods
sbb
test
pop
add
cld
frstor
push
or
pop
add
xchg
hlt
mov
cs
or
mov
xchg
xor
or
ficomps
scas
enter
jne
and
add
dec
pop
cmp
jbe
add
aam
cmp
cmp
and
arpl
in
inc
mov
sti
add
mov
or
and
dec
add
mov
loopne
push
sbb
inc
mov
setp
mov
or
aas
rcll
cmc
iret
out
imul
xchg
push
or
insb
pop
roll
mov
gs
pop
mov
cmp
push
jne
mov
dec
push
mov
psubsb
sbb
arpl
pusha
mov
and
sbb
inc
inc
scas
negl
jne
dec
and
es
push
and
mov
mov
dec
test
inc
inc
xor
insl
dec
or
and
dec
mov
cwtl
or
xor
loope
sbb
dec
or
add
data16
push
call
and
test
or
rolb
movsb
mov
ficompl
and
dec
push
inc
or
cmpb
jp
adc
jns
js
cmpsl
imul
mov
mov
adc
mov
cltd
negb
add
shl
ret
push
enter
pop
dec
adc
push
push
dec
jmp
ja
test
popf
repz
mov
test
jbe
dec
insl
or
das
lods
push
insb
inc
mov
movsl
jle
push
movaps
xor
push
call
mov
loope
mov
xadd
add
pop
pop
and
repnz
jmp
push
test
jmp
push
xchg
cs
outsb
not
call
mov
dec
fistps
das
and
decb
iret
mov
adc
xor
jb
adcl
jns
fadds
jmp
fidivs
pop
dec
jae
cld
jnp
or
sub
push
in
cmp
test
out
mov
call
test
cmp
std
ficompl
std
add
inc
inc
test
orl
cmpsb
sub
xchg
cs
enter
pop
jmp
ja
jl
inc
mov
jo
push
orb
dec
dec
or
imul
aam
clc
mov
rcrb
add
or
je
insb
dec
dec
cwtl
pop
xor
jge
jo
dec
ret
jne
cwtl
addr16
ror
test
jl
add
loope
jmp
mov
inc
push
stc
mov
sub
pop
rorl
mov
pop
mov
add
and
popa
orl
sub
add
iret
mov
jle
idivl
ljmp
mov
or
pcmpeqw
pop
lcall
jo
dec
mov
lret
xchg
cltd
lahf
scas
xchg
cltd
push
sub
fcmovnbe
cmp
arpl
sbb
adc
mov
stos
jl
icebp
rclb
inc
out
push
lret
aaa
or
sahf
in
add
add
inc
or
ret
xchg
mov
mov
out
or
pop
or
in
add
sub
and
movsb
pop
lea
scas
imul
xchg
or
sub
jg
lock
xchg
addb
push
xor
int3
jne
out
ror
inc
add
or
cld
mov
addr16
ds
cmp
adc
pop
mov
pusha
and
pop
add
popa
add
or
shll
pop
mov
jo
scas
inc
fcoms
addr16
lods
pop
fsubs
and
sub
test
das
push
mov
inc
daa
xor
mov
jmp
test
or
push
dec
jbe
test
sbb
int
das
or
add
pop
scas
sbb
data16
xchg
push
enter
jno
leave
pop
inc
lds
loopne
adc
popa
cmp
sbbb
xor
or
pushf
cmp
and
pop
xchg
sti
xchg
shl
fnstsw
push
add
xor
xchg
cmp
cmp
ja
cmp
inc
lock
xchg
inc
mov
sysexit
cmc
sti
mov
inc
xchg
lock
inc
imul
add
movl
sub
adc
test
pop
mov
aaa
dec
or
push
sahf
inc
xchg
inc
inc
ror
add
jnp
dec
lock
or
js
mov
not
and
retw
out
adc
adc
lea
daa
sub
ljmp
mov
mov
pop
dec
cld
sub
cmp
sub
pop
cmp
sub
push
jle
in
test
and
popl
push
in
icebp
pop
aas
mov
jbe
or
pop
adc
orl
mov
lea
repnz
inc
sbb
cmp
jbe
lret
or
push
jg
shll
sub
add
pop
loopne
loope
stos
fwait
pop
mov
sub
incl
aaa
mov
xor
hlt
sbb
sti
inc
int3
pop
lods
inc
adc
sbb
cwtl
cmp
jne
mov
inc
pop
decl
andl
sbb
cwtl
iretw
sub
and
dec
js
test
dec
cmp
push
or
popf
inc
xor
pusha
je
mov
aaa
and
inc
lahf
int
and
rcrb
lea
or
mov
movsb
dec
push
outsb
pop
xor
insl
or
jmp
fsubrs
pop
loop
dec
mov
cmpsb
add
cmp
jo
insb
mov
inc
jp
push
mov
les
mov
out
inc
jp
ja
xchg
pop
cwtl
sub
or
jbe
out
les
dec
aaa
jnp
das
jno
cwtl
sti
pop
mov
rcrb
adc
scas
jae
rorb
inc
cmp
inc
into
and
cs
test
jns
bound
dec
jmp
pop
dec
add
dec
cmpsb
jbe
ret
add
push
ret
mov
sbb
cli
call
add
and
sarl
sub
jle
inc
test
movsb
xor
mov
int3
add
push
xor
add
cmp
jne
aam
or
arpl
sbb
orb
adc
or
and
xor
xor
mov
pushl
sbb
sub
lret
xchg
add
sub
rorb
ret
shl
inc
mov
dec
enter
std
jmp
orb
call
mov
cmp
clc
jae
orb
addl
adc
sub
daa
jae
push
ljmp
xchg
lods
je
lahf
mov
pop
push
pop
push
imul
and
mov
stos
adc
fwait
and
fwait
push
dec
xchg
ret
fisubl
mov
xchg
jns
jae
movsb
push
bound
test
jmp
sub
hlt
xchg
jge
push
sarb
add
push
test
sarb
call
or
add
xchg
add
jle
mov
sbb
mov
sub
test
jge
jb
dec
push
jb
jbe
je
gs
scas
test
out
add
inc
and
out
or
push
inc
cli
xor
xchg
or
push
call
xor
movsl
je
mov
loope
cmp
mov
lret
inc
adc
or
jb
or
clc
je
add
out
test
jne
popa
push
mov
out
push
fisttps
cmp
jb
sub
or
and
sub
push
jg
jb
clc
ror
or
pop
hlt
jp
push
mov
mov
xor
or
enter
push
mov
andb
dec
cmp
add
add
pop
or
incl
push
adc
call
movsb
scas
je
mov
inc
repz
mov
jle
cwtl
push
sbb
adc
sub
gs
out
push
sbb
ret
pop
lock
mov
jecxz
loopne
jl
add
pop
add
adc
mov
fistps
cs
cmp
inc
add
test
sbb
es
mov
xor
jl
dec
push
adc
adcb
push
dec
es
cmpl
jge
sub
inc
pop
sub
jmp
sub
and
or
jmp
mov
ljmp
and
adc
call
inc
out
repz
xor
loopne
out
ja
add
leave
adc
push
jmp
mov
shll
mov
push
push
mov
jne
jne
addl
js
sub
jle
sub
mov
orb
sbb
fs
adc
inc
popf
movsb
push
loop
rcr
xorb
cmp
inc
aaa
adc
enter
cmp
add
sbb
rorb
inc
or
roll
xchg
mov
dec
xchg
xchg
cld
mov
xor
stos
push
testl
mov
push
sbb
jbe
fidivl
sub
les
pusha
sub
lea
xor
dec
add
sub
cmp
rorl
cmp
lea
pop
pop
cmpl
pop
mov
inc
cmpsb
jae
sbb
adc
mov
in
popa
xlat
test
cmp
add
std
cmc
pop
mov
adc
repz
mov
or
pop
xor
push
add
inc
jmp
movsb
jae,pt
dec
dec
pop
clc
dec
pop
and
push
shll
ret
jmp
andb
call
lock
jae
notb
jg
lock
mov
movsl
pop
mov
mov
imul
mov
sub
cltd
dec
xor
xor
shlb
jae
sub
inc
imul
scas
sarb
lock
jo
xor
adc
shll
push
mov
psadbw
sub
and
repnz
and
imul
xchg
lret
inc
cwtl
inc
pop
inc
adcb
or
cmpsb
add
push
prefetch
sub
mov
add
dec
inc
loope
jmp
jae
test
shll
dec
adcl
push
xchg
adc
and
cmpsl
pop
shrl
out
mov
push
faddp
shlb
icebp
lock
dec
sub
jae
into
decb
inc
cmpb
movsb
stos
inc
arpl
add
sub
sarb
push
push
mov
mov
push
inc
shr
pop
arpl
imul
clc
mov
insl
adc
addl
cli
sbb
daa
stc
sbb
in
add
add
call
dec
lds
sub
call
mov
and
adc
lds
enter
pop
test
or
xchg
inc
arpl
cmp
es
fildl
pop
andb
in
je
push
call
jmp
js
or
and
mov
and
dec
outsb
push
mov
sub
sbb
mov
pop
test
addw
lds
orb
xchg
sub
cmpsl
or
jmp
add
mov
or
sbbb
pop
inc
push
dec
and
mov
sahf
mov
movsl
enter
cmp
add
or
xor
testl
inc
cmp
jg
or
sub
cltd
push
xorb
scas
dec
popl
push
push
mov
aad
ficomps
jo
push
add
idivb
xor
dec
mov
mov
xchg
lods
pop
cmp
in
idivb
movmskps
das
call
sbb
push
popa
sub
fwait
inc
add
js
mov
jbe
sub
dec
sub
loop
xorl
xchg
mov
scas
xchg
pop
mov
sub
xor
subb
mov
xchg
push
out
mov
loop
aaa
insb
out
push
mov
lods
ret
dec
xor
push
cmp
and
pop
and
mov
pop
and
nop
dec
iret
pop
push
or
cmpl
dec
push
icebp
scas
dec
mov
mov
dec
dec
shr
pop
rclb
xchg
jmp
lcall
jae
or
xor
dec
sub
dec
and
inc
dec
jge
dec
stos
and
scas
add
popa
je
mov
ja
out
je
pop
add
std
fisttpll
stc
or
pop
mov
enter
push
inc
mov
rcrl
int3
mov
jg
pusha
mov
sahf
or
nop
ss
fcomps
dec
lcall
jns
sub
loopne
leave
and
push
mov
mov
add
inc
jne
jne
hlt
cwtl
andb
and
mov
outsl
cld
and
into
orb
jmp
mov
jne
je
and
jb
inc
call
and
add
or
inc
or
cmp
fnstcw
enter
sub
rol
and
adc
jmp
push
into
cmp
das
pop
ja
jo
sarb
gs
ret
push
daa
jns
push
add
push
testb
jge
xchg
jnp
ljmp
mov
add
sbb
or
jle
daa
dec
adc
pop
cmp
pop
loop
add
push
jle
mov
aas
jb
inc
inc
sahf
popa
push
inc
sub
pop
in
jmp
mov
scas
and
clc
push
shl
sub
inc
mov
xor
mov
fisubl
cmp
cmp
std
je
sbb
dec
inc
or
iret
jbe
int3
out
or
mov
stc
imul
leave
fstl
nop
in
mov
lds
pop
stos
pop
mov
cmpsl
pop
mov
mov
mov
pop
dec
lahf
jecxz
pop
dec
cmc
imul
movsb
xor
and
inc
add
add
jne
movlps
loopne
add
loopne
shrb
xor
jb
xchg
cmp
push
pop
xchg
mov
pop
or
add
clc
insl
clc
push
lea
ds
sub
mov
inc
mov
stos
pop
clc
aaa
mov
dec
mov
jge
std
das
inc
aad
in
aas
outsl
lock
add
mov
out
aad
stos
inc
clc
adc
enter
in
jno
push
into
mov
cmp
sbb
das
or
call
dec
cmc
subl
sbb
mov
addl
add
pop
movb
inc
fimuls
pop
jne
cwtl
hlt
stos
aad
roll
gs
je
mov
dec
mov
and
rorb
add
add
dec
jne
subb
dec
jmp
pushf
jg
jp
jl
mov
je
js
shlb
jne
les
push
lds
in
mov
mov
jl
outsb
mov
adcb
or
or
jns
cmp
and
push
add
dec
out
insb
movl
adc
test
arpl
push
inc
push
call
sub
cmc
and
rorl
cld
add
jbe
pop
arpl
cld
sub
sub
mov
stc
add
sbb
lock
inc
mov
negb
lea
cmp
adc
cmp
sub
gs
push
push
inc
jns
ret
sbb
bound
fdivr
sbb
jl
adc
lret
mov
in
pop
adc
dec
loop
xchg
or
imul
inc
inc
add
adc
xchg
jne
mov
jmp
lea
fsubrl
lcall
or
inc
nop
imul
mov
cmp
adc
and
rcrb
clc
adc
cmp
mov
push
stc
sbb
xor
andb
and
scas
gs
add
scas
jbe
mov
lock
nop
fdivrl
out
int
insl
sbb
call
sbb
sahf
daa
jbe
mov
xchg
es
fwait
pop
lds
mov
pop
icebp
dec
ljmp
ret
jmp
fstl
adc
pop
je
sub
mov
mov
adc
cmovnp
arpl
dec
pcmpeqw
inc
or
push
mov
inc
stc
cmc
out
std
sarl
inc
push
adc
mov
mov
cmp
push
sub
or
xor
inc
mov
sub
or
xor
adc
test
pop
mov
imulb
jmp
bound
mov
movsb
mov
mov
xor
mov
adc
sbb
cmpb
push
je
in
mov
xor
xchg
sbbb
push
adc
cmp
xor
xor
out
inc
add
orb
mov
call
insb
pop
push
jbe
xchg
inc
adc
xchg
sbb
test
add
in
lret
jae
adc
adc
xor
testl
call
inc
xchg
insl
push
lds
test
loop
or
enter
pop
dec
mov
std
inc
pop
inc
es
xor
cmp
and
daa
inc
cmp
pop
add
jns
add
and
adc
cmp
decb
shll
neg
das
inc
or
mov
movsl
es
mov
dec
mov
and
mov
sarl
sbb
xor
loop
dec
or
or
cmp
call
xchg
and
or
and
or
inc
add
ret
inc
or
in
push
add
sti
sbb
inc
cmp
lea
dec
imul
call
jo
xor
inc
or
add
clc
and
jbe
icebp
call
roll
mov
sub
fsubrp
push
or
pop
jl
inc
push
and
out
push
xor
pop
scas
jg
shll
leave
pop
les
test
outsl
ret
jle
mov
jmp
adc
dec
mov
cmp
rorl
clc
dec
mov
or
and
imul
xchg
add
and
xchg
outsb
sbb
jmp
push
adc
adc
xchg
sub
movb
addr16
andb
or
daa
notl
icebp
call
jg
sub
jge
push
inc
xor
data16
adc
stos
fcomp
sbb
cmc
sbb
and
sub
adc
loop
cld
test
adc
rcr
or
xchg
sbb
arpl
add
mov
rclb
adc
bound
or
sub
xchg
dec
mov
adc
ret
ja
push
in
mov
add
jl
push
mov
stc
xchg
dec
jb
xchg
adc
push
and
das
jbe
icebp
pop
imul
ret
pop
xchg
sbb
shll
jle
push
add
push
xchg
jg
dec
std
cmp
mov
and
and
stos
sbb
fs
jmp
sub
and
adc
adc
add
mov
dec
sbb
stos
mov
xchg
dec
adc
ficoms
roll
mov
jle
dec
jp
push
call
and
xchg
push
and
popf
in
fistpll
mov
rorb
push
and
call
fbstp
mov
test
cmpl
pop
jmp
daa
stc
cli
icebp
dec
dec
push
adc
jb
rclb
je
pop
popa
test
pop
dec
cmc
dec
repnz
sbb
push
inc
adc
negl
or
sbb
repnz
cmp
adc
xor
xchg
and
popl
loopne
gs
inc
orb
mov
mov
xor
stos
mov
aam
cmpsb
mov
adc
xchg
xor
sub
mov
or
push
and
mov
jno
jp
jmp
mov
mov
lea
xchg
push
sbb
and
enter
repz
sbb
add
ret
imul
rcrb
repz
jne
ret
bound
arpl
roll
jne
cmpl
push
lea
dec
push
nop
push
jne
subb
mov
add
inc
adc
dec
add
or
push
add
pop
or
adc
fwait
es
orw
adc
and
cli
push
popa
add
cs
adc
add
lock
fsubl
out
sub
xchg
jmp
cmp
or
pop
adc
inc
inc
mov
pop
and
cwtl
movsb
scas
fcoms
jp
cmpsb
or
sbbl
sub
add
adc
mov
adc
xchg
mov
stc
xchg
dec
hlt
mov
adc
cmp
outsb
adc
mov
xchg
test
fwait
pop
cwtl
fistl
cmp
cld
les
push
int3
enter
or
jne
mov
cmp
lds
mov
ljmp
sbb
fs
fiadds
sti
cmc
and
mov
dec
inc
std
lea
aam
adc
xchg
inc
cmpsb
mov
mov
xlat
add
inc
hlt
xor
call
xlat
enter
cmp
adc
or
jae
sub
stos
hlt
sarb
fdecstp
ret
pop
clc
clc
push
jle
adc
sar
push
jecxz
mov
add
pop
sub
sarl
shlb
and
cmp
jne
add
mov
mov
inc
or
pop
mov
mov
imulb
inc
or
mov
adc
xor
push
add
inc
sub
add
das
in
popf
xchg
xchg
cltd
push
jecxz
sub
jg
inc
dec
les
inc
inc
cmp
xchg
cmp
popa
cmp
popa
dec
push
mov
and
xor
das
cld
inc
xor
mov
add
ja
out
pop
addl
ret
nop
shlb
push
inc
es
lcall
add
mov
je
pop
add
les
or
cmpb
or
stos
call
xor
dec
test
pushf
mov
test
push
mov
and
adc
rcll
lret
lea
mov
hlt
inc
mov
add
dec
jne
mov
dec
xor
je
rorb
xor
push
nop
adc
addl
test
cmp
adc
cmp
and
inc
adc
inc
mov
cmpsb
mov
roll
or
sti
imul
in
dec
ljmp
daa
or
push
mov
in
adc
cmp
inc
push
je
out
scas
in
nop
mov
fistps
add
adc
rorl
mov
fiaddl
je
adc
or
or
into
or
jne
decl
sbb
ja
ss
adc
sbb
das
out
sti
or
ds
or
and
mov
mov
je
add
jmp
aad
push
pop
sbb
mov
fadds
cmp
je
cmp
roll
cli
sarb
movsb
sbbl
mov
lret
xlat
leave
pop
test
mov
mov
xchg
mov
inc
cmp
add
push
call
push
pop
inc
cmpb
aas
and
daa
imul
push
xchg
and
ds
add
jo
leave
jle
cmpsb
test
call
sbb
bound
pusha
pop
lahf
xor
mov
and
mov
xchg
jg
xor
mov
les
sbb
sub
cmp
push
mov
lea
jg
out
lret
mov
adc
test
mov
push
stc
xor
loop
call
push
adc
enter
popf
xor
movsl
lcall
bound
dec
jne
xlat
les
mov
and
mov
jp
push
inc
pushf
inc
mov
push
add
cli
or
mov
je
xchg
adc
or
aad
jmp
or
jl
inc
adc
sub
mov
cld
orl
mov
mov
int3
jo
dec
cwtl
mov
popf
xchg
sbb
ret
inc
sub
test
add
push
dec
sbb
stos
mov
jg
mov
xchg
inc
pop
jne
inc
lds
and
mov
pavgb
and
ret
add
jle
movsl
jbe
add
repz
shr
mov
dec
in
adc
add
mov
test
adc
addl
aas
cs
cs
jecxz
push
and
mov
push
inc
insl
add
movsl
sahf
and
fwait
and
pop
mov
enter
daa
xchg
adc
loopne
test
cmp
ds
lock
shll
test
mov
lods
inc
jae
adc
adc
aad
sti
cltd
xchg
das
mov
add
adcl
and
push
cmp
adc
in
cmp
adc
jne
dec
pop
repnz
jae
sar
sbb
arpl
or
add
cmp
je
mov
and
movsl
xor
daa
cmp
mov
cs
sub
mov
nop
inc
pop
xor
adc
cmpsl
add
dec
mov
jo
cmp
popa
lock
lahf
mov
add
and
lea
notb
push
mov
mov
jp
jl
inc
in
pop
les
mov
jp
pop
and
call
ret
aas
sbb
xchg
mov
ret
in
jo
xlat
add
mov
sbb
aam
add
inc
add
sahf
sahf
or
loop
lods
decb
or
and
icebp
jno
repnz
or
pop
mov
sbb
xchg
mov
cmp
add
mov
pop
ret
xor
cmp
pop
lea
sbb
inc
or
sarl
test
movsl
push
mov
xor
add
decl
cld
shll
jg
or
jne
test
lret
push
fmuls
iret
lods
mull
or
movl
jl
cwtl
push
lods
in
pop
cmp
decl
test
nop
add
add
mov
push
pop
jmp
mov
dec
stc
push
test
stc
out
call
or
nop
jae
ds
roll
adc
mov
or
or
cmp
add
mov
adc
dec
int3
lea
fbld
xchg
push
cmp
adc
and
mov
jne
mov
push
lds
pandn
ss
add
and
add
movsl
cmpl
mov
and
out
jo
or
mov
cmp
xchg
sub
add
or
mov
xor
jl
xorb
push
out
arpl
call
jmp
popl
cli
loop
pop
fs
lods
subl
or
fnstsw
movsb
jne
add
daa
mov
xor
pop
and
imul
pop
ret
mov
xor
pop
jmp
and
repz
or
inc
in
sti
xor
inc
clc
sub
fidivrs
inc
jae
jnp
ret
lea
cmp
test
sbb
test
add
dec
push
ljmp
push
nop
sbb
int
outsl
jg
sbb
and
push
pushf
lods
or
jns
sub
in
xor
jmp
mov
sbb
mov
push
sbbb
jno
sub
call
sbb
popf
or
or
jns
push
mov
clc
lea
or
cmp
xchg
and
mov
sbb
mov
pop
pop
adc
xchg
cmp
mov
ffree
mov
ljmp
or
mov
popl
or
jp
pop
push
shrb
cmp
sbb
daa
sbb
add
enter
pop
push
bound
icebp
mov
xchg
mov
lea
mov
movsb
or
mov
rclb
aas
push
clc
push
mov
pushf
or
test
cmp
sub
sbb
lods
daa
pop
sub
arpl
shrl
test
leave
xchg
repnz
pop
cld
je
push
cmpsl
adc
fwait
test
ljmp
xlat
pop
mov
mov
push
outsl
push
sub
sub
jmp
jb
out
xor
negb
repnz
int3
mov
mov
dec
mov
mov
cmc
mov
loopne
cmpl
or
test
sbb
jmp
sbb
das
adc
mov
mov
jge
mov
push
push
and
movsl
sbb
xchg
or
inc
push
push
jp
inc
das
ret
mov
popa
adc
pop
jne
js
xchg
add
test
mov
mov
outsb
scas
jb
popa
and
push
mov
cmp
or
mov
lods
push
add
testl
cmp
cmp
xchg
ljmp
ret
xor
push
lock
adc
xchg
push
mov
lret
bound
cmc
push
dec
adcb
aam
ret
call
xchg
cmp
add
push
rcl
stc
pop
add
cltd
add
adc
imul
push
pop
pop
lea
cmovns
das
stc
lods
scas
pop
add
cmpsl
je
fsubr
sub
push
in
dec
or
pop
in
das
jp
or
pop
mov
push
aam
jmp
pop
mov
sbb
cmp
sarb
cmp
je
pop
data16
cmp
ret
jmp
push
lds
fnstenv
mov
mov
jle
cmp
jl
das
xor
ljmp
popf
fistl
xor
push
jb
cmp
xchg
sub
push
cld
fsts
fsubrl
jns
inc
lret
testl
daa
pop
jle
fs
push
mov
xchg
add
cmp
and
shl
fwait
dec
ror
stc
loope
jmp
dec
cld
lock
jo
adc
inc
test
xchg
mov
dec
ficompl
xor
add
call
std
xchg
lds
cltd
or
add
adc
inc
fdiv
mov
decl
xor
in
push
ret
adc
les
out
scas
daa
inc
aam
ljmp
rorb
in
popa
mov
movsl
and
nop
or
pop
push
in
sahf
mov
add
imul
inc
push
nop
mov
xchg
push
pop
mov
dec
and
xor
lahf
push
in
push
xor
jmp
mov
sbb
sub
inc
mov
sub
sbb
inc
sbb
repz
xor
pop
bound
lea
lock
sbb
iret
cwtl
mov
push
push
andb
sbb
or
lahf
sub
sub
push
pusha
xor
leave
and
or
imul
cmpsl
leave
fnstsw
mov
and
fdiv
nop
fildl
or
xor
lock
and
fdivl
fcoml
inc
outsl
cltd
subps
push
adc
dec
cmp
xor
sub
stc
and
js
dec
icebp
insb
or
and
sbb
les
fimuls
dec
enter
and
and
and
ficoms
push
les
xchg
fsubl
in
in
hlt
mov
fidivs
and
and
dec
dec
lods
and
test
xor
mov
rclb
nop
mov
sbb
test
ljmp
test
sub
pop
stc
adcb
shll
cmp
stos
inc
jns
test
outsl
cwtl
repz
and
lods
cmp
je
lret
scas
adc
pop
xchg
adc
add
jmp
shl
loop
jne
adc
inc
push
cmp
ret
push
aam
jbe
icebp
xor
shll
and
xor
dec
outsb
or
adc
hlt
jmp
cmp
cmc
mov
and
sbb
ret
aam
jle
fisttpll
mov
repz
mov
pop
inc
decb
xor
int
lods
xor
adcl
cmpl
mov
jae
aam
negb
mov
cmpsl
cmp
sarb
pusha
pop
jb
roll
je
fcompl
decl
ljmp
adc
lods
push
scas
xchg
adc
jl
sarb
test
adcb
jp
je
or
in
xabort
adc
sbb
dec
mov
negb
mov
divb
lds
cmp
lcall
lcall
aas
sub
movsb
sub
adc
push
sbb
add
hlt
and
inc
repnz
mov
in
jecxz
clc
cltd
je
or
jg
dec
xor
or
les
popf
xchg
inc
jne
or
or
mov
push
das
push
pop
and
and
mov
xor
inc
sub
mov
adc
cmp
adc
shl
outsb
dec
sbb
jle
dec
fs
adc
jns,pn
cld
sub
inc
add
lods
adc
adc
jmp
dec
jg
bound
movsb
dec
or
inc
xchg
test
je
lock
rcll
and
push
cmp
inc
mov
jb
xchg
adc
in
lahf
subb
or
divps
cltd
and
push
or
call
arpl
mov
repnz
sbb
daa
ds
lcall
lock
insb
inc
nop
lret
dec
push
pushf
or
sbb
inc
adc
jecxz
mov
jecxz
dec
pushf
dec
and
push
inc
cmpsl
dec
or
pop
mov
repz
sub
add
mov
data16
pop
repz
clc
or
testb
movsb
test
div
dec
test
add
jne
cmpl
aas
outsb
adc
inc
mov
and
in
mov
lret
add
scas
fdivr
adc
push
out
cmp
sbb
aad
pop
mov
sbb
push
hlt
or
icebp
dec
add
xor
in
sbbb
sub
std
nop
sbb
and
or
aas
adc
fsubl
jl
fnstenv
cmc
xchg
imul
shl
push
xchg
dec
mov
sub
adc
cmpsb
push
mov
sbb
pop
adc
mov
mov
or
nop
add
movsl
sti
imul
mov
mov
and
mov
mov
adc
pop
inc
cmp
jne
loop
cwtl
inc
ljmp
cld
dec
adc
rcll
int
imul
test
push
pop
pop
test
adc
pop
pop
mov
cwtl
in
adc
add
and
test
int3
adc
mov
lret
sbb
addr16
roll
or
aaa
or
xchg
pop
mov
push
sbb
or
dec
push
sub
or
mov
adc
mov
lea
cmp
int
clc
lods
jbe
pop
addr16
adc
push
cli
adcl
call
jle
add
test
jne
inc
hlt
incb
jge,pn
ret
data16
lds
jl
dec
mov
push
leave
push
and
clc
lcall
dec
jne
mov
pop
pop
mov
movsb
shl
and
push
nop
sub
imul
add
das
adc
dec
pop
out
loope
jecxz
mull
mov
pop
add
iret
ret
pop
cltd
cltd
mov
cs
cmp
imul
repnz
mov
mov
and
lret
outsl
hlt
xchg
ret
test
dec
es
je
aad
out
sub
fdivp
and
pop
cmp
in
push
dec
mov
rep
push
jno
cmpsb
pop
sbb
push
pusha
cmp
xchg
push
pop
dec
clc
scas
dec
repnz
dec
iret
xor
int3
movsb
es
or
and
movsb
out
sarl
jg
or
les
daa
iret
sub
cmpsl
divb
mov
sub
mov
lock
adc
arpl
call
and
lret
jl
and
sub
jne
lret
cwtl
hlt
pop
mov
or
shll
push
ret
mov
ret
out
jg
dec
subl
loopne
xchg
add
mov
dec
or
fnstenv
xor
sti
pop
xlat
mov
out
fwait
add
xchg
pop
pop
popf
jmp
aas
push
or
shl
sti
aas
add
dec
scas
push
cmpsl
lock
cs
xchg
pop
push
out
cs
outsl
mov
adc
or
mov
int3
or
sub
mov
pop
sub
in
inc
mov
add
dec
xor
movsb
sbb
cmp
fcoms
jg
sub
push
lock
cltd
adc
scas
dec
dec
adc
std
bound
xchg
push
pop
and
inc
cmp
xchg
sub
sub
push
or
dec
divl
and
mov
cmp
jmp
and
mov
call
lcall
adc
xchg
loopne
divl
and
push
or
push
cld
fcomps
imul
cmp
outsl
or
and
jg
xor
inc
dec
aam
mov
fwait
shll
sub
inc
insb
je
and
push
xor
xchg
push
jg
adc
jmp
push
leave
sub
xchg
mov
xlat
dec
jnp
push
jle
movb
xor
pop
call
mov
cmp
pop
mov
inc
incl
outsl
cld
fisubs
jl
mov
cmp
push
push
jmp
sbb
xor
incl
add
adc
rorb
aaa
inc
repnz
adc
push
xor
in
popa
sub
sbb
and
nop
aaa
call
dec
or
adc
cmp
movsl
mov
or
mov
sbb
adc
cmc
mov
je
idivb
push
or
popf
mov
pop
cmp
mov
enter
es
and
sub
adc
fnstcw
and
push
iret
stos
add
je
mov
mov
dec
mov
loop
cmp
cmp
sub
pop
lods
push
sub
data16
jmp
xchg
dec
add
and
or
or
sub
loop
repnz
cwtl
lret
dec
into
mov
fadds
leave
call
pop
or
lea
push
mov
push
loopne
test
jmp
rcll
or
mov
fldl
popa
pop
mov
add
sub
mov
jmp
test
and
popa
xchg
js
mov
or
cmc
xchg
clc
add
sbb
or
or
jmp
add
sbb
lahf
stos
dec
pop
movsl
ja
add
je
push
int3
inc
or
jbe
sqrtps
and
mov
mov
push
push
adc
mov
push
add
and
jmp
clc
stos
and
xlat
bound
fcompl
push
pop
ja
inc
mov
enter
pop
cld
dec
mov
add
cs
mov
jne
or
ficomps
jnp
fwait
and
mov
leave
and
aas
push
loop
cmc
dec
fimull
dec
sbb
fcmove
jl
ret
mov
inc
jp
mov
sbb
jmp
push
mov
push
mov
xchg
pop
mov
lods
inc
inc
ret
inc
mov
int3
or
cmpsb
movsb
das
add
aas
adc
jg
xor
call
or
loope
pushf
movsb
mov
adcl
pop
mov
cli
leave
xorb
pop
sbb
sub
inc
jns
dec
add
mov
add
call
mov
and
jmp
add
insl
insb
sub
mov
outsb
jbe
inc
outsl
test
lea
cli
rcr
mov
scas
push
shrl
repnz
pop
push
xchg
or
clc
jge
aas
adc
sub
pop
push
popa
or
sbb
xlat
sti
push
or
and
insl
jecxz,pt
push
inc
jge
les
fcmovnu
pop
loop
gs
lock
mov
or
or
adc
jl
xchg
and
inc
popf
cmp
jge
movsb
loop
dec
icebp
dec
outsl
mov
xor
lret
or
jae
xor
or
movsl
push
aaa
lods
mov
xchg
je
ds
xor
mov
adc
clc
inc
or
xor
fsub
out
adc
fmuls
js
ja
test
add
lock
sub
aas
sti
sub
pop
icebp
lods
ret
cmp
pop
ljmp
xchg
shll
push
jle
lret
pop
bnd
sbb
cmp
or
into
mov
sbb
insl
push
inc
iret
cli
pop
pop
into
popa
sahf
or
xor
pop
dec
inc
add
addb
jbe
push
jge
shl
lea
adc
jo
and
dec
or
add
pop
cmpsl
and
gs
fstl
or
mov
and
sub
mov
cmp
add
jne
sbb
pop
cmp
shll
sub
adcl
daa
sub
cmpl
incb
jmp
mov
fs
push
sbb
pop
data16
pop
scas
orb
inc
pop
pop
xchg
adcl
out
movsb
test
in
pop
mov
pop
jb
mov
push
fcoml
loopne
aam
shl
cmp
popf
cli
xchg
xor
je
or
add
inc
jmp
push
pop
sub
pop
imul
or
xchg
inc
or
test
sti
xor
jl
or
jg
mov
xor
sbb
test
push
add
add
je
dec
jecxz
scas
push
gs
add
or
into
inc
pop
jmp
aas
mov
sahf
push
lahf
mov
movsl
jle
dec
dec
ds
dec
fwait
and
mov
or
movsb
push
add
mov
jle
adc
sbb
addr16
jb
adc
jmp
ret
or
rclb
and
leave
dec
push
sub
aam
xchg
xor
mov
adc
fadd
pop
ret
mov
gs
aad
mov
dec
outsl
pop
stc
mov
cmp
cmpb
sub
xor
stos
adc
jg
mov
leave
fidivs
ret
pop
loope
mov
fucomp
add
test
scas
outsb
jg
inc
adc
mov
or
jmp
stos
in
popa
adc
xchg
mov
push
adc
les
enter
xchg
add
gs
xchg
int
dec
xor
addr16
insb
xor
mov
jl
and
or
pop
dec
jmp
or
jmp
int
and
mov
shlb
and
pop
jmp
and
sbb
xchg
jmp
fisttps
cmpsl
adc
idiv
jl
cmpsl
lahf
loop
jg
sub
scas
enter
out
hlt
ret
sbb
jg
ret
mov
mov
mov
inc
cmp
dec
xor
mov
cmp
pop
cmp
test
adc
add
push
jnp
mov
std
adc
adc
push
clc
mov
xchg
negb
push
and
clc
mov
adc
fadds
dec
sub
loopne
xor
sbb
movntps
jle
ds
jo
push
push
jb
aam
gs
xor
inc
push
shlb
dec
mov
xchg
outsl
push
adc
add
xchg
ret
arpl
sti
jmp
jb
pop
shlb
nop
xchg
add
adc
dec
pop
push
xchg
dec
or
add
pop
mov
out
pop
add
in
je
adc
jo
cwtl
or
adc
lock
and
imul
dec
test
pop
sub
das
enter
push
sbb
mov
jmp
and
enter
out
out
call
jmp
in
dec
in
mov
sti
or
aas
cld
mov
stc
inc
add
test
xor
shlb
sahf
mov
sbb
or
adc
sbb
add
jmp
loopne
jp
iret
jnp
dec
cmp
maskmovq
xchg
sub
sti
push
adc
adc
bound
push
addr16
and
sbb
movsb
mov
pop
stos
andl
dec
xor
outsb
shrl
or
pusha
and
and
sbb
aaa
adc
xchg
out
or
lahf
adc
push
cli
imul
in
jge
idivb
mov
xchg
in
mov
lock
repnz
mov
imul
cli
jmp
in
xchg
sbb
negb
push
xor
jge
adc
add
jl
adc
jmp
and
pop
inc
mov
jne
sub
sti
cmc
sbbl
pop
clc
je
dec
or
jne
js
add
neg
and
or
xchg
ss
and
sbb
push
mov
jge
cmp
enter
shll
clc
aaa
push
xchg
adc
or
push
sti
sahf
adc
stos
lds
movsb
inc
add
or
inc
loopne
add
jne
rorl
cmp
add
cmp
jb
setb
push
and
icebp
cmp
int
pushw
ret
sub
mov
jl
andb
adc
enter
xor
fldcw
mov
add
sarl
imul
push
add
stos
jns
stc
cmp
cmp
pop
jne
and
jmp
cmpl
adc
mov
and
add
test
test
mov
or
mov
fisubl
data16
or
test
in
inc
shrb
mov
add
clc
and
nop
lret
mov
and
adc
pusha
pop
or
cmpl
and
lods
xor
std
mov
jp
aas
ja
fmuls
jne
mov
jg
adc
ss
push
mov
cmp
in
repz
jo
ss
or
sub
push
cmp
cmp
push
add
jmp
int
fadds
jmp
clc
test
or
add
xchg
push
fisttps
jle
ljmp
lahf
movsl
jecxz
cmp
call
sbb
push
cmc
popa
fcmovb
mov
cld
cmpl
xor
mov
cmp
sub
add
insl
hlt
dec
hlt
or
jne
sbb
fistl
mov
sbb
adc
pushf
adcl
and
add
mov
pop
cmp
loop
pop
cmp
sub
add
or
jg
xchg
in
dec
inc
mov
dec
or
ljmp
cmp
loope
ja
imul
or
lahf
inc
fidivrs
push
stos
jmp
jbe
lods
push
inc
je
inc
dec
xor
cmp
push
lret
outsl
hlt
test
mov
xor
jae
push
ds
or
or
cmp
add
or
jmp
ss
inc
ljmp
leave
sbb
mov
andl
push
inc
loopne
mov
cli
mov
add
je
jge
rcrl
mov
lret
daa
aad
pop
adc
adc
repz
push
andl
push
shll
lret
pop
cwtl
stc
push
je
lea
cmpl
hlt
pop
sub
idivb
jb
rolb
ret
jne
add
jmp
repnz
mov
dec
sbb
pop
ja
or
ret
and
outsb
and
shlb
xor
je
cwtl
pop
jne
pop
into
jmp
leave
push
dec
xor
push
jecxz
xchg
call
sbb
inc
ficomps
inc
xor
pop
stos
lds
xor
mov
ds
push
ret
sub
out
test
or
das
dec
jge
jb
pop
or
aaa
test
fs
sbbb
xchg
or
dec
leave
mov
mov
cltd
gs
xor
mov
stos
sbb
fcmovnb
and
ss
mov
lret
adc
pop
mov
or
aad
adc
std
mov
mov
mov
or
test
testb
xor
popa
fs
adc
cltd
test
mov
nop
fcmove
jne
orl
nop
ficompl
inc
jmp
add
cmp
aam
xor
dec
mov
je
and
js
lahf
push
in
dec
or
mov
imulb
jb
ja
mov
jg
std
cli
xchg
push
sub
adc
and
ljmp
aam
mov
xchg
xchg
jns
lret
cltd
ja
fs
pushf
js
mov
jae
je
push
push
movsl
push
dec
and
cli
sbb
and
mov
call
inc
in
adcb
shlb
jg
inc
mov
xchg
jle
in
xchg
jp
push
dec
xor
inc
notl
data16
test
mov
paddd
or
nop
in
inc
pminsw
sub
pop
clc
icebp
xchg
xor
sub
lcall
pop
or
inc
jmp
cltd
mov
cld
or
les
call
xorl
dec
retw
mov
dec
mov
xchg
jl
xchg
decb
xor
push
xchg
dec
and
xchg
jb
pop
outsl
adc
jge
sbb
sbb
xchg
outsb
or
lcall
data16
add
imul
stc
aam
mov
lods
test
jl
imul
push
add
and
fs
das
jmp
pop
mov
push
xor
jle
leave
jl
pop
lea
xor
inc
mov
mov
or
sub
mov
xchg
xor
sbb
je,pt
adc
dec
adc
jbe
xchg
ds
inc
repz
add
and
add
cmp
adc
hlt
dec
lods
sbb
addl
xchg
mov
xchg
aas
and
fdivrl
mov
sub
mov
mov
stos
cmp
sub
mov
lcall
or
dec
sahf
sbb
sub
fsubl
mov
add
out
or
cmp
add
ss
int3
xor
aas
iret
popa
dec
mov
das
mov
xor
mov
or
and
jmp
add
cmpl
add
and
sti
mov
and
ljmp
ds
xchg
push
push
sbb
cld
lods
cmpsb
mov
adc
lods
dec
mov
stos
push
push
insl
addb
stos
add
add
scas
jg
test
mov
inc
mov
jp
pushf
addr16
pop
cmp
mov
sbb
adc
and
dec
dec
fs
pop
js
and
xchg
adc
add
filds
lock
sbb
adcb
das
nop
xor
or
adcb
mov
test
cmpb
inc
push
sub
andb
adc
push
or
xor
push
or
inc
adc
and
push
jb
and
cmpb
andb
push
cmp
insb
jecxz
pop
addb
mov
adc
xorb
orb
xorb
adc
lods
mov
pusha
imul
sub
mov
aam
add
jbe
stc
ret
scas
pop
or
add
out
sahf
loopne
sti
cmp
lods
inc
cmp
add
insl
jbe
mov
fs
addr16
adcb
mov
hlt
pusha
push
mov
dec
sarb
cwtl
shlb
orb
sbb
dec
and
mov
rclb
add
inc
mov
sub
add
jne
pushf
roll
or
jae
xchg
xor
adc
sti
and
add
idivb
lods
or
push
sbb
add
add
mov
and
dec
dec
add
cmp
jecxz
jle
test
xor
push
imul
pop
fdivs
aaa
add
out
mov
jnp
pop
mov
cmp
ss
push
popf
push
out
push
rolb
fs
add
std
lahf
in
lret
fldcw
and
shrb
loop
jl
add
call
sub
xchg
cmp
inc
jno
and
push
mov
dec
mov
stos
lods
loope
imul
add
sti
loopne
inc
sub
mov
xor
orl
sbb
mov
f2xm1
rclb
mov
add
andb
in
sub
ret
mov
fidivs
or
sbb
jle
and
fcompl
pop
jo
out
rorl
or
data16
dec
inc
add
pop
adc
std
sbb
cmp
push
out
int
imul
xchg
pop
lods
jecxz
fisttps
dec
jae
ret
sbb
cmc
shll
das
add
aaa
loope
mov
popa
add
add
cmp
jo
add
scas
out
add
sub
xchg
add
mov
rcr
ret
pop
fwait
add
xor
cwtl
sub
out
push
jge
add
xor
lods
das
ja
xchg
xor
adc
sub
push
aaa
mov
andb
ret
or
inc
xor
pop
add
test
aas
inc
lods
lret
rorb
xor
sub
repnz
mov
clc
push
sub
sbb
jp
push
add
sahf
rolb
popf
add
icebp
enter
xchg
add
dec
cltd
add
mov
imul
call
or
mov
dec
xor
mov
xchg
pop
notl
sbbb
cltd
cmp
mov
rclb
dec
add
xorb
dec
add
jl
testb
fildll
lds
adc
addr16
out
add
pop
and
ljmp
xchg
mov
push
add
sub
loope
stos
add
mov
aad
cwtl
xor
das
mov
add
mov
bound
icebp
aas
lret
mov
cmpsl
hlt
xorps
das
pop
ja
pop
jno
and
dec
enter
stc
jle
aaa
jl
add
scas
adc
rolb
sbb
aam
pop
in
add
push
mov
imul
xchg
loope
mov
popl
cmp
fimuls
mov
pushf
arpl
mov
jge
pop
mov
lret
pop
mov
jnp
mov
rcrb
mov
lret
jo
hlt
insl
roll
mov
lock
out
add
addr16
pusha
sbb
insl
jne
fsubrl
fwait
aam
mov
xchg
add
fidivl
cmp
or
js
add
xor
cwtl
fs
push
mov
dec
sub
loopne
adc
iret
bound
xchg
mov
mov
pop
jae
filds
lahf
imul
sti
ja
sbb
into
out
add
jne
fadds
outsl
add
pop
xchg
add
xchg
cmp
add
push
xor
pop
mov
shrl
jge
xor
xor
xorb
sbb
jmp
pop
dec
and
es
mov
and
pop
push
sub
xor
mov
aas
and
add
mov
scas
repz
lahf
add
cmp
cmp
jb
or
mull
jo
push
mov
lret
test
mov
outsb
jo
das
dec
xchg
adc
cmp
in
add
jb
xchg
push
sbb
cmpsb
out
inc
add
jmp
sbb
add
cmp
lea
pop
aas
into
add
ret
adc
int3
pop
gs
sbb
ljmp
add
cwtl
xchg
sbb
sub
add
sbb
ret
out
adc
or
clc
fsubs
jb,pn
loope
dec
rcrl
or
pushf
loopne
push
add
xor
hlt
add
jne
mov
mov
outsl
cmp
lcall
imull
push
mov
xor
jp
sub
sbb
sub
dec
fimuls
sbb
dec
mov
add
push
mov
jmp
adc
add
int
mov
mov
jge
add
inc
cmc
ja
mov
loopne
pop
add
in
and
loopne
pushf
sbb
imul
add
xchg
nop
cltd
lcall
sbb
out
mov
add
outsb
mov
add
inc
scas
fcompl
test
out
test
cmovno
push
mov
ret
lahf
add
or
enter
pusha
mov
cltd
and
adc
add
cli
les
mov
mov
leave
mov
pop
push
mov
test
add
inc
enter
lahf
sbb
pop
std
mov
pop
jb
mov
cmpsb
add
sbb
out
add
pushf
xchg
inc
jns
add
jo
mov
adc
sbbl
cmp
jp
outsb
sbbb
mov
jecxz
rcl
loope
sub
add
xor
mov
pop
shl
jle
xchg
fwait
add
inc
mov
das
je
hlt
sbb
cmp
cwtl
add
and
movsl
out
add
je
popf
sbb
sub
push
cli
xor
add
mov
xchg
pushf
jecxz
mov
xchg
xchg
push
sbb
inc
fidivrl
fildl
and
test
fwait
xchg
push
mov
in
or
push
cmp
cmpb
in
or
inc
loopne
das
add
xchg
adcb
test
pop
movl
leave
stos
fsubrs
lcall
sarb
xor
mov
add
rol
out
xlat
xor
push
add
inc
push
add
stc
rcrb
and
popf
mov
lea
add
dec
xchg
mov
adc
outsl
push
pop
rcrl
cmpsl
add
mov
inc
or
shlb
inc
add
jmp
das
cld
cs
sub
testl
imul
add
jle
cmpsb
setbe
dec
sub
dec
fcompl
clc
filds
sbb
sub
lods
add
and
je
sbb
jmp
sahf
sbb
push
mov
add
xor
pusha
add
jge
lret
fs
les
add
xchg
and
out
and
add
rcrb
jge
adc
sbb
cltd
add
notb
add
loopne
test
mov
add
xor
jecxz
pop
and
sub
fcoms
aad
adc
add
mov
dec
shlb
add
push
loop
int
push
add
ds
stc
cmp
addr16
inc
push
sarb
add
scas
into
shrb
aas
popfw
mov
cld
sub
pop
xchg
push
cmp
stos
pop
xor
add
bound
dec
dec
lcall
popl
or
nop
les
sub
jecxz
shufps
and
movsb
and
jno
test
inc
dec
mov
je
inc
inc
mov
jle
aas
dec
mov
and
les
jecxz,pt
xor
xchg
js
push
sub
mov
inc
fsts
aas
add
pop
and
add
or
mov
sbb
movsb
fwait
mov
mov
sub
out
pmaxsw
scas
xlat
mov
in
lds
mov
mov
les
cmp
jmp
dec
adc
add
xor
aaa
notb
pop
out
sarb
add
jl
mov
cmpsb
mov
subb
stos
add
ds
arpl
push
add
jo
cld
lods
or
adc
lods
and
jne
stos
sarl
and
stos
loopne
nop
inc
add
jge
test
mov
inc
mov
jp
out
mov
outsl
cmp
mov
sub
in
and
mov
shl
or
push
enter
insb
mov
dec
xor
in
dec
lcall
cmp
loope
xor
lods
sti
int3
jo
sbb
push
mov
push
aas
scas
add
sbb
scas
fdivrl
mov
mov
mov
lea
rolb
inc
call
mov
add
sub
stos
pop
addl
jl
sub
add
add
and
and
mov
push
push
rol
cmp
add
jecxz
movsb
loopne
push
xor
inc
aam
cmpsl
add
add
add
int
fs
lock
add
mov
repnz
xchg
adc
push
adc
adc
inc
adc
adc
pusha
cmp
adc
outsb
add
add
adc
mov
add
add
popa
add
jp
sqrtps
xchg
jg
push
loop
xchg
mov
adc
add
out
pop
adc
adc
dec
add
fwait
movsl
sahf
add
lods
push
xchg
test
xor
mov
add
push
inc
test
xorl
lgdtl
add
hlt
nop
sbb
bswap
in
repnz
cltd
ja
addb
lcall
jne
jbe
push
in
sbb
stc
arpl
insb
add
iret
mov
adc
sub
mov
push
cmp
add
xchg
pop
shlb
add
das
pusha
cmc
dec
jbe
mov
xchg
popf
xchg
cld
lods
das
ja
test
mov
jle
xchg
xchg
shrb
jmp
add
xchg
cltd
pushf
popa
mov
pop
ja
aas
sbb
fisubs
push
cmp
nop
jno
add
xor
cwtl
loope
add
xor
jo
ljmp
sbb
and
xor
add
js
jmp
dec
push
fisttpll
xor
roll
dec
fnstsw
add
in
jge
ljmp
lahf
mov
pop
mov
xchg
stos
dec
add
test
inc
outsb
add
lds
add
sbb
lea
loope
adc
jp
cmp
in
xchg
xchg
nop
adc
xchg
ljmp
sti
ret
leave
js
xchg
add
xor
push
jmp
or
pop
faddl
pop
and
cmp
push
mov
lcall
jno
sbb
or
adc
xchg
divb
addl
dec
insl
imul
lcall
scas
out
mov
adc
xchg
sbb
outsl
add
repnz
sub
adc
mov
in
arpl
inc
add
sub
cmpsb
xchg
add
cs
and
add
loop
jne
xor
sbb
adc
mov
imul
rcll
add
pop
ja
iret
fbld
mov
and
ds
bound
orb
pop
cs
fdivs
adc
cmpsl
sub
push
xchg
sbb
inc
outsl
fs
xchg
mov
mov
adc
sarb
dec
cmp
repnz
aas
jg
sbbb
shl
cmp
jno
je
push
repz
incl
sbb
inc
movsl
or
adc
xchg
fs
test
push
stos
aaa
loopne
mulb
add
mov
int
sahf
mov
cwtl
mov
test
or
sub
lret
cmpl
pop
mov
movsb
rolb
sarl
aas
inc
loope
insb
test
push
jae
push
and
mov
mov
xor
mov
dec
xchg
sahf
add
adc
rol
loop
pop
pop
or
lret
xchg
sbb
test
push
or
add
inc
adc
add
mov
lock
xchg
and
std
lock
sahf
sbb
jge
add
idivl
insb
add
cmc
dec
sahf
add
mov
sti
sets
pop
mov
jae
adc
pop
pop
sbb
mov
aas
mov
jge
cmp
xchg
sub
loop
add
scas
add
jbe
pop
repz
lahf
jp
aas
xchg
inc
mov
test
add
push
cmp
lea
xchg
imul
add
adc
mov
xchg
lcall
call
push
jle
pusha
sbb
ficomps
jae
cmc
mov
lahf
add
dec
out
xchg
add
adcb
inc
stos
sbbb
sbb
add
test
stos
lods
and
xor
add
outsl
sbb
fldt
or
sbb
iret
mov
add
mov
int
outsl
cmp
add
sub
add
fiadds
setle
push
pusha
push
mov
or
pop
cld
iret
frstor
jg
push
sbb
push
shlb
in
xchg
add
push
inc
jecxz
jno
jmp
shll
mov
cltd
xchg
pop
stos
lret
add
subl
mov
add
or
xchg
pushf
or
dec
dec
jp
add
cmp
jmp
rclb
incl
cmpsl
push
insb
fmull
jp
add
mov
lds
cmpsb
cltd
pop
stc
pop
cmp
popf
jp
inc
lcall
xchg
push
ss
test
nop
fcom
or
inc
sti
sbbl
push
mov
gs
xchg
sahf
test
mov
lcall
add
and
insb
mov
in
rcrb
adc
icebp
movsl
add
and
pusha
test
ss
int3
lahf
xchg
add
add
lret
nop
push
xor
jae
sub
sbbb
adc
test
dec
cmpsl
xlat
testl
push
mov
lcall
in
es
stos
jne
je
sbb
inc
nop
cwtl
add
push
sbb
mov
les
stos
jg
sahf
popf
test
mov
push
mov
and
mov
mov
adc
das
outsb
add
ret
inc
addr16
cmpsl
or
lds
xchg
cmp
addb
push
loopne
mov
mov
not
cmpsb
and
push
add
and
in
movsb
mov
mov
outsb
lock
xchg
push
stos
das
insb
fnstenv
add
mov
stos
cmpsl
push
sahf
or
xor
scas
lock
addr16
loopne
lods
jo
xor
xchg
sbb
sti
jl
dec
ljmp
mov
adc
add
lret
add
dec
jg
lock
add
push
cmp
jo
sbb
push
xor
outsl
and
lahf
mov
push
xor
pusha
add
cltd
fwait
xchg
sbb
add
push
dec
cmc
cmp
and
pop
lret
movsb
fsubs
ja
and
jne
shrb
and
push
pop
push
icebp
aad
jo
sahf
mov
mov
xchg
mov
cwtl
and
out
movsb
pop
test
mov
pop
repz
push
jp,pn
cmp
cmp
jno
adcb
ficoml
xchg
pop
push
or
add
out
shrb
jo
stc
sbb
loopne
addb
xor
jnp
mov
sbbb
mov
push
hlt
fldenv
add
loopne
js
adc
push
add
nop
test
adc
or
adcl
sbb
add
dec
xchg
jnp
movl
imull
add
pop
loope
or
inc
cmp
pushf
cmpsb
push
mov
insl
test
mov
pop
loope
pusha
movsb
and
push
cmpl
xor
mov
inc
daa
fs
adc
jnp
add
es
int3
jbe
pushf
add
jno
and
pusha
out
sbb
data16
outsl
inc
test
add
int3
inc
pushf
mov
jo
aaa
test
add
sub
pushf
add
pusha
mov
dec
add
push
mov
add
or
add
add
xchg
fs
cmp
xchg
pop
and
add
sub
cs
cmp
cmp
sbb
fwait
pop
nop
inc
add
int
push
arpl
rorb
add
mov
xor
push
cmp
lock
lods
jl
cmpl
pop
adc
scas
cmpsl
add
pop
xor
cmp
mov
test
test
dec
xor
movsb
das
test
js
cmpsb
mov
add
sbb
sbb
add
and
je,pn
in
dec
mov
adc
add
in
enter
add
or
int3
mov
sarb
add
ja
bound
jbe
or
inc
xor
mov
movsb
inc
inc
add
outsb
gs
imul
inc
xchg
add
movsb
inc
sahf
adc
outsb
je
popa
jae
xor
push
push
adc
out
mov
arpl
xor
inc
xor
add
pop
aad
sarl
mov
push
cmp
xor
cmp
or
xor
xor
rolb
add
lds
dec
or
mov
add
jno
insb
sbb
push
dec
push
dec
cmp
and
shlb
addr16
inc
xor
or
adc
dec
sbb
cmp
xor
mov
outsl
call
inc
adc
or
nop
daa
loopne
outsl
jo
imul
add
push
or
mov
dec
or
push
dec
pop
lcall
arpl
mov
rcrb
xor
inc
movsb
add
test
insl
gs
mov
dec
add
sub
popa
outsb
xor
dec
scas
or
adc
mov
aaa
or
push
push
pop
xor
push
mov
inc
mov
push
outsl
je
insb
cmp
shrl
mov
cs
push
or
sub
add
inc
inc
dec
pop
addb
jo
outsl
imul
push
push
inc
sbb
ljmp
jmp
jns
out
out
xor
cmp
jne
and
ss
push
lret
pop
dec
push
pop
insb
inc
xor
popa
xchg
xor
je
jmp
pushf
data16
inc
fistpll
jbe
sub
or
outsl
ds
cmp
ds
cs
xor
push
and
insb
mov
outsl
push
outsb
xchg
stos
jle
inc
imul
adc
pop
rcll
popf
addr16
xor
addr16
mov
or
inc
pminub
push
lock
jne
dec
rcrl
clc
pop
mov
sub
lea
sub
push
jp
inc
sub
out
notb
dec
adc
cs
test
lcall
data16
mov
adc
jne
push
sub
aam
mov
mov
jo
inc
or
ja
pushf
imul
daa
adc
xor
mov
test
fistpll
sbb
pop
jl
xchg
jle
and
mov
sub
popa
and
dec
fcompl
and
add
or
mov
dec
or
dec
inc
push
loope
fcoml
adcl
out
stos
jo
ss
movsl
sbb
std
adc
xchg
push
sub
xchg
mov
call
jne
sub
add
or
sub
mov
adc
sub
das
xor
adc
pop
jae
in
lret
loope
add
mov
das
mov
orl
les
push
push
dec
inc
pop
adcl
outsl
ja
inc
adc
loopne
test
fmuls
shrb
pop
xor
or
pop
dec
pop
xchg
inc
repnz
adc
adc
cmp
call
jno
adc
mov
and
inc
adc
sbb
cwtl
sbb
dec
ds
xor
sbb
loopne
or
fcom
loop
sbb
and
and
xor
pop
jb
ds
adc
mov
les
and
and
xor
shlb
les
adc
mov
xor
nop
mov
inc
sbb
sbb
or
test
dec
insl
sbb
cmp
xor
pushf
jl
mov
enter
jl
inc
das
cmp
inc
mov
mov
enter
inc
lock
shlb
enter
sbb
mov
push
and
or
or
sub
stos
shrb
or
and
dec
add
lock
sub
mov
adc
enter
pushf
sub
ds
xor
sub
jns
pop
cmp
ja
push
xchg
or
ja
cmpl
fs
and
pop
int
outsb
sbb
cmp
cmp
popa
cwtl
stos
cmp
imul
xor
xor
ja
arpl
outsb
outsb
pop
sub
sub
jecxz
lods
mov
mov
repnz
gs
test
or
mov
sbb
imul
dec
fisubrs
jo
add
sbb
pop
insl
repz
insb
xorb
fists
leave
cwtl
xchg
inc
adcl
out
xlat
inc
fbld
insb
sbb
jmp
les
mov
repz
inc
sahf
pushf
mov
dec
dec
out
imull
clc
sbb
es
into
fisubl
inc
adc
aam
mov
jne
push
and
cmpsl
cmp
inc
push
push
loop
jo
ds
jne
bound
fwait
and
push
mov
insb
push
and
dec
push
pop
and
sti
push
inc
push
mov
dec
sbb
and
xchg
daa
add
push
loopne
inc
mov
je
cmp
and
hlt
lods
inc
ljmp
fists
movsl
in
sub
mov
jns
jmp
sbb
lea
pop
outsb
stos
sub
jnp
fimull
in
leave
inc
xchg
cmp
imul
inc
push
inc
dec
push
dec
jne
and
inc
xor
popa
lock
jb
xchg
mov
sahf
andb
insb
popl
fwait
test
mov
inc
jo
adc
enter
outsb
jno
jae
or
xchg
ljmp
pop
inc
into
pop
into
jo
inc
dec
leave
inc
dec
adcl
inc
pop
adc
lahf
inc
dec
jo
adc
les
mov
add
fdivs
pop
popl
dec
iret
push
xor
xchg
inc
cmpsl
movsl
sub
jno
in
ljmp
or
cwtl
aam
push
cmp
inc
dec
orl
int
test
movsl
aas
insb
aad
mov
push
es
mov
xor
stos
test
jae
popa
jnp
sub
int3
mov
insb
jp
dec
lods
dec
test
jl
and
pop
imul
push
sbb
sub
adc
scas
test
inc
dec
js
bound
inc
xchg
dec
xor
jo
mov
sub
pop
scas
ss
push
movsl
sbb
gs
insb
cs
aam
aam
mov
sahf
mull
outsl
lahf
add
aaa
cmp
js
retw
add
imul
mov
xchg
sub
adc
cmpsb
pushf
adc
jo
push
push
mov
push
pop
push
and
addl
mov
push
pusha
mov
xor
nop
mov
xchg
rorw
push
mov
movsl
dec
jb
sub
xor
sub
mov
mov
out
outsb
push
dec
enter
push
aam
jmp
outsl
popa
cmp
push
rclb
or
sub
push
push
lds
xchg
mov
sub
sarb
imul
mov
jge
pop
dec
leave
inc
jo
not
bound
les
jp
dec
dec
inc
in
xor
lcall
pop
imul
pushf
push
and
jle
ds
push
outsb
jne
out
and
pop
xlat
mov
xor
push
xor
aad
xchg
test
adc
fildl
sbb
sbb
dec
dec
jbe
xor
inc
stc
jae
jae
out
mul
push
mov
daa
dec
xchg
enter
cmpsb
rclb
dec
cwtl
arpl
jecxz
pop
data16
xor
cmpsb
or
push
adc
loope
iret
jns
insl
cmp
movsl
cmp
and
push
fcomip
sarb
js
dec
fs
xchg
dec
jb
pop
insl
fidivrs
inc
test
in
cmp
outsb
scas
jo
xor
jge
xlat
inc
xchg
jns
pop
adc
cwtl
sbb
jbe
imul
dec
lret
push
ffreep
inc
mov
sub
pop
dec
shll
sub
inc
popf
push
push
in
pop
sbb
push
inc
jne
jb
sub
push
jae
clc
jns
dec
daa
dec
cmp
test
adc
pop
sbb
dec
addr16
movsb
into
mov
inc
adc
insl
mov
inc
adc
pop
sub
fwait
lea
sub
inc
push
subb
push
das
push
cs
les
cld
aad
push
or
mov
test
sbb
mov
sbb
or
adc
sub
sub
dec
or
add
pop
dec
xor
mov
xorb
cltd
loop
jmp
call
jo
cwtl
incb
ret
and
out
nop
jmp
jns
jnp
pminsw
loope
cmp
adc
stos
je
into
enter
sbb
xchg
shrb
in
xchg
inc
sbb
fdivrl
jo
adc
mov
js
pop
stos
push
sti
jle
outsl
test
fwait
fwait
push
outsl
test
into
arpl
outsb
sbb
in
dec
repz
shlb
in
sub
xchg
add
iret
data16
gs
sbb
repz
es
jl
jle
data16
sub
sub
sahf
cmp
adc
popf
repz
mov
or
sbb
or
insl
stos
inc
xor
pop
adc
fbld
fstps
mov
int3
add
mov
iret
lret
addr16
shlb
call
shll
lods
xor
enter
dec
add
shlb
ja
pop
jno
addr16
fdivrp
in
add
jmp
cli
fdivr
outsl
dec
ljmp
in
rcll
lahf
sbb
lock
std
dec
out
sti
fnstsw
ljmp
cmpsl
fildll
repnz
imul
cmc
push
ljmp
fs
dec
dec
xchg
dec
push
xlat
test
add
out
push
xor
add
je
pop
jae
pop
cs
mov
cmp
sub
repz
jno
mov
insb
lods
sbb
sbb
lods
mov
pop
jnp
cmp
jnp
push
jno
mov
cmpl
jbe
jo
insb
cli
dec
push
test
fldt
pushf
in
pop
mov
mov
lcall
outsl
out
insb
mov
cmpsl
sbb
add
mov
add
jae
xor
aam
dec
js
data16
push
and
jge
int
or
lods
xor
aam
pushf
xor
lds
or
aaa
subb
inc
pop
xor
movsl
add
ljmp
jp
jo
cmpb
xor
pop
sbb
xor
cmp
push
add
nop
rol
popa
imul
push
adc
push
inc
dec
mov
daa
stc
inc
jno
mov
mov
outsl
out
insl
mov
jg
arpl
call
orl
pop
aam
xor
or
and
push
adc
or
cs
sbb
cwtl
jae
cs
mov
xchg
in
imul
inc
movsl
sub
inc
push
roll
pop
pop
js
out
int3
imul
sub
dec
fimuls
inc
add
hlt
mov
int3
outsb
daa
test
and
adc
bound
and
mov
pop
and
fistpll
adc
push
test
inc
xor
loope
dec
adc
mov
and
test
clc
mov
popa
sub
sub
jne
mov
and
fs
imul
or
adc
rorl
and
push
dec
add
hlt
dec
add
push
rolb
inc
add
pop
leave
adc
adc
add
sbb
fiaddl
add
push
sub
xchg
add
and
std
int3
inc
add
jo
scas
je
xchg
or
pusha
pop
or
mov
xor
icebp
mov
dec
into
sbb
cmpsb
push
and
inc
incb
push
inc
xor
or
or
add
dec
push
gs
mov
add
jecxz
sub
sub
test
adc
movsb
pop
enter
inc
sbb
fsubrl
loope
sub
shlb
inc
and
adc
movsl
stc
cmpsb
pop
and
test
fs
or
nop
xchg
inc
and
inc
js
xchg
int3
dec
fsub
push
inc
dec
mov
and
faddl
and
pusha
adc
add
inc
out
or
lods
movsb
xchg
adc
push
push
add
sbb
cmpsb
sbb
jo
cmp
adc
mov
xor
inc
call
inc
adc
adc
add
clc
mov
stc
cmp
xchg
jo
add
push
jmp
mov
outsl
jp
add
aam
call
outsb
mov
pop
and
sub
or
xchg
add
mov
dec
pop
sub
lcall
movsb
cmp
mov
adc
repnz
adc
and
xor
xor
xor
xor
add
clc
cmp
arpl
and
cwtl
sub
int3
add
outsl
mov
push
jge
dec
aam
loopne
stos
or
add
loopne
jg
add
adc
add
cmpsl
add
push
sub
adc
pusha
jecxz
adcb
xchg
inc
hlt
movsl
xchg
dec
je
loop
push
cmp
in
sbb
cmp
jb
cmp
call
xor
inc
cmpl
testl
xor
nop
scas
add
movsl
mov
cmc
mov
dec
jo
cltd
xor
lret
inc
add
cli
adc
das
ljmp
xchg
mov
ja
lock
xor
add
cld
xchg
adc
out
pop
fs
and
imul
mov
dec
inc
das
mov
fs
rcll
sahf
jae
mov
insl
movsb
or
mov
jns
pop
adc
inc
fildll
mov
test
cli
sub
mov
call
dec
dec
cmp
push
push
imul
js
adc
mov
dec
repnz
outsb
sbb
lret
cmp
xor
les
aam
sahf
imul
das
loope
outsb
leave
fs
push
sub
pop
in
mov
sti
dec
pop
dec
xor
inc
push
movsl
into
mov
cmp
in
lods
and
jae
pop
inc
xor
jmp
cmp
movsb
cltd
sbb
addr16
mov
jo
pop
out
stos
fs
mov
outsl
jne
fs
jne
out
xchg
imul
in
adc
in
lahf
hlt
loop
test
in
bound
pop
xchg
adc
xlat
adc
imul
shlb
inc
dec
icebp
jo
dec
push
jb
inc
pop
mov
push
pcmpeqb
loope
or
lock
jge
ucomiss
shll
arpl
aad
movsl
jg
mov
int3
sbb
xor
pop
addb
inc
or
insb
lcall
xor
xlat
je
adc
arpl
dec
cld
push
xor
movsb
dec
or
cmp
push
inc
push
je
shll
cltd
jne
push
push
mov
repz
lret
cmp
rcl
or
dec
not
arpl
inc
enter
dec
inc
cs
xor
cltd
and
insl
lahf
unpckhps
fs
mov
dec
pop
sub
std
data16
pop
dec
test
sbb
adc
push
sub
aad
dec
xchg
xchg
das
movsb
test
imul
xor
jo
mov
jo
dec
nop
out
dec
inc
push
test
lock
sbb
inc
xor
push
adc
je
pushf
test
test
das
push
inc
fs
sbb
xor
outsb
jne
mov
xor
pushw
stos
sbb
movsb
adc
sbb
dec
mov
or
inc
sub
push
test
mov
push
push
inc
dec
sub
lock
xchg
movsb
outsb
adc
dec
inc
xchg
jns
pusha
jne
jo
outsl
out
dec
dec
cmpsb
mov
shlb
add
inc
cltd
bound
push
dec
or
pop
or
mov
hlt
add
nop
pop
leave
push
sub
inc
and
pop
sub
and
ljmp
mov
leave
adc
mov
outsb
rcrb
int3
sbb
mov
add
mov
push
xchg
add
pop
rclb
test
andb
inc
add
lds
add
imul
pop
xor
mov
sub
cmc
je
arpl
or
inc
inc
push
out
or
das
xor
pop
xor
addl
insl
jns
jecxz
push
push
inc
popa
pop
cli
sub
insb
cld
push
arpl
sub
adc
inc
loop
adc
and
cmp
adc
push
and
mov
jns
xor
adc
xchg
or
lods
sub
inc
arpl
repz
es
popa
js
jae
es
sub
inc
jbe
pop
sbb
push
and
in
or
imul
mov
negb
dec
fidivs
nop
push
jae
stos
add
xlat
sub
jge
pushl
out
mov
scas
sbb
adc
mov
lahf
das
out
jle
push
mov
lahf
sbb
iret
das
push
fbstp
jp
cmp
sub
movsl
mov
sub
xor
or
imul
jl
push
xlat
imul
push
push
ds
adc
inc
and
sub
push
jmp
xor
sub
das
sub
push
inc
inc
sub
lock
sub
mov
dec
dec
push
pop
push
dec
push
push
movsb
and
lods
jl
dec
jnp
lea
gs
sub
fnsave
lods
jnp
lcall
jmp
mov
sub
stos
cwtl
movsl
xchg
test
cmp
or
and
sub
rcl
call
imul
jge
aam
sbb
jae
pop
adc
lock
int3
jnp
stos
lret
mov
ljmp
mov
mov
xor
stos
pop
dec
jl
dec
push
insl
sbb
aas
inc
dec
sbb
inc
inc
sbb
lret
cmp
inc
and
xor
lret
xor
push
push
cmp
mov
xchg
jg
loope
or
push
insb
roll
jmp
mov
dec
or
flds
clc
lods
dec
xchg
adc
rcll
xchg
inc
and
ret
in
dec
mov
xor
adc
jb
sbb
inc
dec
and
mov
push
push
movsl
sub
adc
jnp
dec
sub
daa
cmp
mov
into
repnz
clc
jmp
push
pop
push
cmp
or
inc
sub
outsl
fsubr
imul
pop
dec
inc
dec
push
clc
movsl
movsb
stos
push
mov
pop
jo
in
cli
inc
pop
cs
mov
jae
jp
push
jge
ret
test
fidivrl
ja
dec
pop
push
dec
inc
dec
imul
lea
cmp
dec
xlat
fsts
pop
mov
das
je
pop
movsl
fnstenv
sub
pop
aad
jp
dec
ret
push
into
xchg
mov
adc
push
hlt
push
or
pushf
ljmp
cmp
push
xchg
jp
test
test
or
inc
jecxz
dec
stos
push
mov
xor
stc
push
and
push
bound
and
push
inc
push
pop
pop
add
mov
xor
cltd
add
or
cmp
imul
or
lret
or
dec
add
or
lret
or
dec
add
or
mov
mov
sbb
rolb
cltd
add
lods
xor
pop
pop
xchg
add
lahf
mov
adc
popf
loope
shl
add
in
ss
jo
mov
add
aad
bound
fwait
add
add
inc
sub
mov
and
jb
fwait
add
add
mov
pop
test
fwait
add
add
inc
sub
add
mov
movsl
add
ss
jo
mov
add
add
or
mov
pushf
pop
and
or
lods
adc
or
xchg
push
pop
pop
add
clc
dec
or
push
dec
xchg
cmpsb
or
sahf
jmp
adc
and
mov
add
mov
inc
aad
sub
push
add
or
dec
add
or
fwait
shrb
fsubrl
adc
test
jo
mov
popa
push
pop
cmpsb
add
aam
or
add
inc
or
mov
add
mov
add
or
push
test
push
dec
or
or
imul
push
add
add
cmp
xor
or
adc
or
xchg
pop
jne
xor
adc
arpl
dec
add
or
inc
pushf
pop
negl
dec
mov
or
lret
or
add
bound
and
bound
adc
mov
aas
xchg
fsubl
pop
sbb
and
push
push
dec
pop
pop
pop
es
jne
or
in
out
mov
pop
dec
sub
sub
xchg
push
push
test
popw
add
adc
push
dec
dec
mov
xchg
addr16
in
pop
cltd
icebp
hlt
dec
dec
aas
dec
inc
push
pop
pop
inc
cwtl
xchg
inc
push
out
mov
mov
jmp
jne
flds
pop
or
imul
cmc
gs
flds
dec
inc
ds
push
pop
pop
sub
pop
ss
sbb
dec
push
mov
ljmp
xchg
mov
jge
dec
stos
fdivl
jl
lock
in
mov
insl
pusha
jae
sub
pop
lret
xchg
pusha
pop
pusha
pushf
out
push
popa
sub
push
bound
ja
adc
js
fs
ja
adc
js
pushw
ja
adc
js
push
imul
test
loope
pop
dec
inc
pop
xchg
jno
movsl
jno
popf
pop
lret
add
pop
mov
dec
bound
test
leave
sub
lret
cmp
dec
int
jecxz
ja
sbb
ljmp
dec
fs
loopne
xor
sub
cmpsl
pop
arpl
dec
js
lahf
push
popa
jo
scas
mov
and
jo
inc
inc
ret
jl
outsb
fistl
jp
movsb
dec
fbstp
sahf
jbe
popf
in
movsl
aam
sub
sub
sub
ret
sub
adc
push
outsl
arpl
cltd
and
cli
ficoms
test
inc
outsb
jbe
jb
aam
lret
out
push
bound
popa
fimuls
inc
stos
data16
and
mov
and
out
and
mov
mov
and
cmpsb
sbb
push
sub
roll
frstor
sub
insl
sub
pusha
insl
inc
cmpb
dec
sti
push
inc
roll
dec
push
push
adc
xchg
add
jmp
inc
xor
inc
outsb
jae
shlb
cmpsb
movq
xchg
movsl
sbb
dec
and
xor
inc
mov
and
add
push
fwait
dec
cmpl
rclb
mov
stos
mov
sbb
dec
test
xor
rcrb
leave
xchg
pop
lret
xchg
fs
push
outsl
cmpsb
adc
mov
inc
pop
push
adc
ret
mov
sbb
arpl
ds
inc
mov
inc
mov
xchg
xor
and
jno
inc
push
cmp
dec
outsl
jp
sub
mov
xchg
dec
imul
sub
fisttpl
adc
loope
hlt
dec
xchg
sub
call
scas
dec
rcrb
and
or
and
dec
mov
cli
xchg
adc
xor
adc
cmp
inc
aas
jmp
movsb
cmp
movsl
jno
or
push
ljmp
pop
das
fwait
pop
test
mov
les
lods
push
or
fnsave
bound
cmp
inc
push
adc
sub
inc
push
or
fst
push
push
jne
dec
xchg
cmc
arpl
bound
pop
xchg
stos
jbe
push
lods
or
mov
inc
test
fnstsw
pop
pusha
imulb
adc
push
or
xchg
aam
cmp
sti
sub
insb
loopne
pop
lods
jl
push
inc
pop
test
push
or
and
js
and
xor
or
dec
jae
dec
sbb
sub
clc
dec
jg
scas
enter
push
out
dec
or
push
mov
pop
jecxz
pusha
int3
dec
bound
je
adc
dec
and
inc
imul
push
dec
and
inc
cmp
push
pusha
sub
push
adc
pop
xchg
test
and
cmpsb
inc
dec
lods
mov
lods
adc
ja
arpl
fs
adc
nop
xor
mov
lds
lods
das
push
cwtl
addr16
aam
lods
mov
or
jns
mov
outsl
pop
xchg
and
mov
pop
xor
adc
push
adc
sub
movsb
and
push
rorb
pop
nop
adc
xlat
pushf
dec
xorb
call
repnz
imul
adc
inc
jae
imul
mov
cltd
movsb
push
xor
stos
imul
or
mov
mov
xor
cmpsb
xor
sbbl
push
imul
cmp
dec
pop
inc
outsl
xlat
cld
mov
jmp
jne
movsb
or
xor
lods
and
data16
lcall
imul
test
adc
push
inc
push
mov
fiaddl
sub
outsb
pop
mov
dec
lods
mull
inc
stos
fwait
push
mov
and
fs
adc
mov
pop
in
xor
or
pop
out
jle
mov
test
sbb
cmpsb
insl
dec
cltd
pusha
sub
sbb
shlb
sbb
pop
loop
stos
pop
icebp
xchg
xchg
jae
xchg
xorl
or
xchg
dec
outsl
xchg
das
test
mov
sub
dec
mov
sahf
adc
xchg
add
jo
push
outsb
xchg
inc
mov
sub
insl
test
rcl
lock
loope
rorl
mov
mov
shll
into
mov
jno
lds
sbb
push
xchg
inc
scas
xor
fsubrs
jo
sbb
cmp
in
xor
repnz
jno
lret
jb
movsl
sbb
push
mov
aam
lods
push
mov
inc
lcall
xorb
dec
jl
mov
inc
lahf
cmpsl
into
rclb
dec
push
mov
ficoml
lahf
mov
insb
jnp
aam
data16
fldt
xchg
mov
adc
das
mov
inc
and
or
sbb
inc
or
inc
sbb
adc
xor
and
cmpsb
push
sub
test
outsl
mov
push
pushf
pop
ss
sahf
xchg
fldcw
sub
repnz
notl
inc
std
popa
and
jge
xchg
fs
or
and
ds
push
and
push
push
das
xchg
adc
subb
jnp
call
jge
push
adc
inc
sub
andl
pop
xchg
add
dec
and
pop
jae
add
push
call
nop
dec
int3
adc
or
mov
inc
movsb
and
adc
insb
and
ljmp
pop
sbb
sub
and
add
fs
or
cmp
and
or
xchg
cli
jns
pusha
or
or
imul
popf
push
pop
mov
mov
cld
leave
adc
push
mov
pop
mov
or
sub
and
dec
pop
sbb
inc
inc
jl
mov
mov
dec
ljmp
push
imul
imul
and
sahf
out
outsl
popa
push
in
inc
bound
into
mov
push
sub
or
jmp
adc
imul
push
mov
pop
adc
adc
outsb
lcall
mov
imul
xlat
mov
dec
lods
push
xchg
sub
cld
xchg
ret
mov
cs
cmp
dec
mov
cmp
pop
aad
mov
test
dec
mov
outsl
daa
into
mov
xchg
mov
jmp
xchg
mov
imul
inc
xor
jo
lea
dec
popa
xchg
sub
sbb
inc
push
sbb
lea
imul
and
dec
in
jb
mov
lcall
arpl
popa
insb
pop
xchg
outsb
fbld
fisttpll
xchg
pop
fisubrs
push
mov
popf
loopne
sbb
jo
mov
stos
les
xchg
cmpsl
shlb
jp
adc
fldz
sar
in
or
mov
fs
stos
je
fisttpl
mov
jg
outsb
sub
js
xchg
pop
dec
cs
arpl
xlat
gs
mov
cs
mov
and
pop
clc
ror
jns
push
push
fidivl
iret
cs
sub
dec
pop
adc
repz
xchg
xchg
lock
fs
hlt
push
jp
adc
lcall
pop
pop
xor
mov
mov
in
out
jae
sub
aad
push
fidivl
push
sbb
and
sub
sbb
mov
sbb
stc
dec
lds
xchg
xchg
inc
pop
je
imul
mov
jo
xchg
lods
cli
pop
out
and
jae
cmp
cmp
aaa
cmc
mov
xchg
push
mov
or
pop
gs
in
push
push
jns
mov
xchg
leave
dec
sbb
add
jne
loope
stos
sbb
imul
movsl
dec
push
fisubrl
fdivrl
jne
lea
mov
push
lret
sarb
sbb
aam
ljmp
les
mov
cmp
mov
sub
cs
dec
jl
adc
adc
push
dec
lock
jne
pop
and
stc
pop
sub
aam
mov
jne
xor
enter
add
xchg
push
xchg
data16
stos
adc
std
leave
fildll
daa
repnz
push
mull
adcl
mov
sub
or
push
scas
mov
dec
outsl
jle
pop
mov
sub
jne
adc
insb
rcll
pop
sub
mov
sub
daa
add
movsb
xchg
xor
adc
mov
xor
adc
add
inc
jne
movsl
lret
adc
cwtl
mov
dec
dec
mov
pushf
mov
movsl
push
xchg
adc
mov
repz
dec
sub
ds
pushf
xchg
push
mov
inc
mov
sahf
nop
les
je
stos
cmp
rclb
mulb
xchg
cmp
aaa
test
jb,pn
pop
mov
xchg
jo
negb
repnz
inc
dec
or
inc
dec
lcall
inc
enter
out
aam
arpl
and
inc
sub
jo
cmp
data16
fidivrl
test
dec
fwait
adc
rcr
push
ljmp
or
pop
insl
pop
cs
fs
ja
pop
gs
into
ret
movsb
sbb
shll
inc
or
imul
out
insl
dec
insb
scas
fcmove
gs
fidivl
imul
dec
sub
divl
xchg
sub
mov
inc
cmpsl
pop
les
inc
sub
pop
mov
inc
cs
dec
sbb
pop
loop
jg
sbb
js
xchg
iret
xchg
loope
out
xchg
lahf
gs
push
fnstcw
dec
addr16
xchg
mov
sbb
cmp
jne
sbb
lret
xor
lcall
mov
hlt
push
lahf
sub
int3
sub
sbb
js
stc
sub
cmpsl
push
pushf
imul
fildl
and
ja
mov
int3
jnp
xor
adc
test
and
adc
ret
mov
push
mov
dec
sbb
je
mov
lret
push
or
xor
sub
jl
imul
cmp
xchg
push
xor
jnp
mov
xchg
into
mov
movsl
cmp
repz
mov
lock
stos
jge
adc
inc
dec
push
sub
fnstsw
or
mov
sub
gs
in
ret
inc
push
push
cld
cli
and
cs
sub
pop
cltd
inc
xor
and
sbb
out
push
jae
cs
and
lods
mov
lds
sub
je
push
inc
adc
and
popa
xchg
mov
sub
and
pop
push
or
ficompl
cmpsb
and
mov
mov
cmp
inc
xor
push
push
jbe
jg
sbb
call
test
pop
push
jg
dec
jecxz
dec
mov
cli
repnz
imul
pop
xor
cmp
pop
push
jge
in
xor
jecxz
ficomps
ja
in
jecxz
or
jae
negl
dec
xor
sub
push
dec
dec
pop
inc
test
hlt
ljmp
mov
add
and
push
movsl
dec
jmp
sub
inc
mov
adc
inc
lods
jnp
cmpsl
adc
inc
xchg
mov
into
rcl
inc
and
cmc
push
scas
xlat
mov
mov
or
cs
loope
or
add
cmp
sbb
and
and
enter
pop
repnz
nop
sub
sub
and
stc
pop
bswap
cmp
daa
pop
nop
pusha
cld
jle
in
aas
push
cs
movl
sbb
and
enter
and
and
es
sub
and
das
jle
pop
repnz
daa
xchg
pusha
aas
and
and
lret
cs
add
dec
sbb
and
inc
repnz
nop
and
es
and
stc
sub
inc
das
repnz
pop
nop
cmp
daa
aas
and
jle
enter
cs
in
test
sbb
and
mov
push
dec
pusha
xchg
sbb
jo,pn
cltd
inc
repnz
sbb
loop
js
adc
cld
and
in
aas
pop
mov
dec
sbb
repnz
daa
popa
push
clc
dec
dec
xchg
clc
test
hlt
adc
sbb
dec
pop
xchg
sbb
dec
push
inc
push
sbb
sbb
cmp
les
sti
cwtl
outsl
jmp
dec
dec
mov
scas
pop
fwait
movsl
sbb
jo
jns
push
fwait
stc
add
pop
sub
dec
sbb
xor
cmp
push
xor
cs
dec
inc
dec
xchg
icebp
pusha
outsl
adc
ret
sbb
test
imul
fistpll
dec
iret
or
sbb
pop
sub
push
or
loope
xor
jne
jo
arpl
outsl
jnp
cmpsb
dec
inc
pusha
mov
ret
mov
sar
mov
mov
sub
cmpsl
adc
jl
jns
cs
loope
xor
add
or
or
adc
xor
inc
or
and
and
push
dec
adc
pop
inc
push
adc
inc
lods
icebp
push
xor
ss
xor
mov
imul
dec
xchg
loop
mov
add
xor
icebp
adc
cs
xchg
mov
scas
add
jo
jnp
aam
pmuludq
popa
insl
addr16
bnd
addr16
mov
stos
fdivrs
dec
ljmp
mov
insl
lods
fdivl
data16
mov
xchg
call
pusha
aad
loopne
xchg
inc
loopne
enter
push
test
push
mov
and
icebp
cmpsl
cmp
dec
inc
pushf
xor
push
aad
cmp
call
or
dec
sub
aam
cmp
or
add
clc
jb
cld
xchg
cmp
jae
lock
or
mov
adc
and
dec
mov
lods
and
lds
fs
or
push
pop
adc
push
dec
dec
xchg
inc
and
xor
mov
adc
pop
and
clc
xchg
inc
lock
cwtl
fdivs
adc
or
and
dec
mov
lods
sbb
pushf
mov
dec
test
jo
mov
push
and
dec
cmp
cmp
xor
mov
or
add
cld
xchg
or
xchg
lock
inc
call
fsubl
dec
rclb
mov
movsb
and
dec
cwtl
adc
nop
dec
mov
js
mov
pusha
cltd
push
pop
adc
dec
dec
cmp
xor
sub
mov
add
adc
cld
xchg
xor
or
and
dec
fcoms
rclb
enter
pushf
and
int3
bound
jae
jo
pop
or
inc
call
or
mov
sub
dec
sbb
adc
or
add
inc
xchg
hlt
mov
adc
pop
in
xor
cld
mov
imul
int
adc
insl
idivb
cmpsl
inc
jns
inc
push
bound
imul
mov
test
and
jo
jo
imul
test
std
inc
jbe
inc
repz
aas
and
sub
arpl
lods
mov
mov
outsb
adc
sbb
jno
pusha
outsl
dec
adc
xorl
ret
pop
mov
dec
fnstsw
sub
adc
es
xchg
or
adc
sub
and
les
mov
mov
jne
sbb
imul
data16
mov
lahf
lret
sbb
imul
sub
test
push
arpl
cmp
aam
mov
imul
dec
or
mov
mov
mov
aam
cmp
nop
nop
fwait
testl
bound
popa
pop
dec
jae
sub
insl
sub
imul
leave
push
dec
push
and
xchg
mov
inc
cmp
pop
or
adc
int3
dec
sub
jae
into
mov
adc
jns
mov
inc
jmp
or
imul
sbb
sbb
pop
test
loope
ficomps
or
or
aas
das
adc
insb
mov
gs
ja
jle
mov
insb
adc
push
cwtl
or
je
inc
outsb
jne
xor
leave
rol
pop
push
dec
push
imul
shr
fs
std
movsl
cltd
je
outsl
aaa
or
pop
jge
clc
mov
fdivs
and
lcall
xchg
or
push
jo
sub
mov
sbb
lods
push
push
jo
adc
les
fs
scas
and
or
cmp
mov
xor
xor
es
dec
push
sub
mov
xchg
pop
cmpsb
lods
dec
push
dec
mov
push
clc
ds
jecxz
xor
int
jne
xchg
mov
pop
mov
lea
xchg
loopne
mov
and
cmp
sbb
push
outsl
cmp
std
insl
xchg
add
xor
dec
inc
lahf
push
movsl
inc
dec
mov
sub
and
in
mov
inc
ret
insb
pop
mov
xchg
pop
test
and
xchg
push
xor
xor
inc
dec
pop
mov
mov
adc
adc
and
out
jns
scas
push
mov
les
mov
push
dec
or
xor
fcompl
adc
imul
sbb
repnz
mov
rorb
sar
lds
push
jmp
sub
fmulp
push
or
dec
and
inc
mov
cmp
mov
sub
aam
dec
mov
sub
xchg
and
int
dec
sub
push
dec
test
or
push
ja
sti
mov
jbe
pop
mov
push
and
xor
movsb
xchg
sbb
movsb
hlt
cmp
insb
cltd
xchg
dec
lret
das
lods
sub
inc
push
push
es
sub
lahf
mov
cmp
mov
xchg
cmp
xor
or
xor
int3
aad
test
push
sti
sub
loop,pn
fsubl
icebp
sbb
xor
jo
cmp
mov
test
dec
add
push
xor
int
xor
dec
icebp
test
push
popf
ss
xchg
test
aam
dec
mov
push
jo
dec
insl
in
jp
imul
ds
movsb
push
xor
push
insl
push
dec
cmp
dec
sub
xchg
out
adc
xor
fistpll
hlt
xchg
push
dec
fistps
mov
fisubrl
cs
hlt
mov
and
inc
and
mov
cmp
xor
adc
popf
inc
push
cmp
add
mov
lods
push
inc
mov
pusha
dec
inc
pop
mov
fcmovnbe
sti
jbe
cmp
dec
sub
inc
pop
push
popa
cwtl
movsl
xor
lods
nop
pop
and
push
pop
push
sub
pop
sub
jno
outsl
aad
clc
ja
clc
js
push
sub
stc
fildll
adc
pop
movsl
jp
push
jo
aam
jo
push
lcall
movsl
cmp
push
loop
xchg
cli
sub
outsl
pop
dec
test
ds
aad
xchg
cmp
hlt
jmp
push
push
movsl
sub
popf
jp
mov
lret
push
push
pop
cmp
dec
outsl
lods
jg
and
in
test
ror
popa
ja
jno
imul
mov
sub
dec
cmp
dec
pop
outsl
stc
sub
fldl
and
out
push
dec
lds
stos
lea
icebp
dec
addr16
fwait
popa
push
jb
jl
push
or
imul
dec
mov
inc
dec
xor
lea
cmpsl
cmp
int
es
jmp
xchg
jb
fdiv
jp
xchg
movsl
and
icebp
das
cmpsl
adc
rorb
gs
fisubrs
cmc
ds
push
test
cmpsl
cmp
dec
inc
mov
nop
pop
sub
dec
xchg
pop
fiaddl
insb
clc
mov
enter
pop
or
push
int
imul
mov
cs
jo,pn
push
subl
sub
jne
adc
leave
fisttpll
mov
daa
ljmp
sbb
fildll
into
mov
adc
xor
or
mov
adc
xor
out
lret
mov
pop
xchg
movsl
jmp
sub
pop
adc
mov
call
ss
inc
andb
ret
push
idivl
push
ret
push
mov
cmp
repnz
dec
xabort
out
cmpsl
cmp
shll
iret
jae
es
jmp
adc
mov
xchg
mov
xor
push
sahf
dec
scas
xchg
xchg
data16
xor
insb
stos
sahf
sbb
mov
faddl
fs
sbb
sub
mov
sbb
out
rep
icebp
cmp
mov
dec
xor
sub
push
dec
ljmp
dec
xchg
addr16
mov
out
loopne
lds
sahf
arpl
sub
das
inc
es
push
gs
fs
mov
insl
jae
aas
lea
pop
sbb
mov
sbb
arpl
aas
push
movsl
push
gs
dec
add
inc
cmp
aas
inc
dec
aas
dec
dec
mov
popf
stc
sub
sbb
cmp
xchg
and
add
icebp
sub
call
jmp
jno
and
ficomps
imul
stc
sub
dec
xor
dec
or
pop
dec
xlat
mov
push
add
inc
repnz
adc
loop
push
dec
cmpsl
ljmp
in
pop
shl
adc
fsubrl
mov
xchg
xor
sahf
test
out
dec
sub
jne
int3
outsb
mov
push
in
xor
lahf
sbb
or
mov
mov
cli
fwait
js
aas
sub
ljmp
test
sub
movsb
test
cmp
outsl
xchg
les
mov
mov
adc
xor
sub
push
xor
and
mov
xor
and
mov
sub
sub
insb
inc
mov
pop
aad
fisubrs
movsb
xor
fimuls
xchg
sbb
hlt
mov
xor
sarb
ret
mov
adc
pop
dec
pop
sti
push
xor
pop
lods
ds
iret
mov
decb
daa
movsl
adc
dec
pop
lock
in
jmp
orb
cmpsl
gs
jne
mov
cli
imul
out
xchg
aam
scas
cld
inc
das
pop
insl
dec
sub
pop
orb
inc
and
in
insb
fnstcw
push
adc
sub
sbb
inc
mov
fistpll
push
rcr
aad
cmp
stos
mov
cld
cmp
sub
daa
push
sahf
dec
push
sub
lods
mov
mov
stos
shlb
repz
push
mov
cmp
aaa
inc
or
mov
push
xor
sti
push
jmp
and
aam
dec
jmp
inc
sub
xlat
mov
jns
test
jge
inc
mov
push
dec
lret
add
xor
cwtl
mov
test
icebp
test
pushf
dec
adc
jge
sbb
fdiv
cmpsb
xor
xchg
daa
rcr
int
dec
mov
nop
pop
cwtl
in
inc
jg
xor
cmp
sub
xchg
popf
jns
dec
mov
insl
xor
jo
test
clc
jns
mov
jne
pop
sti
push
jo
sub
mov
fcmovnu
dec
sub
mov
les
sub
mov
stos
jno
jb
adc
adc
bound
fsubrl
add
outsb
jecxz
xchg
mov
jp
jge
adc
mov
xchg
inc
or
cmp
sub
jns
imul
sbb
and
nop
mov
or
pop
jo
aam
push
xlat
movsl
hlt
xlat
ret
les
ja
lret
mov
fs
pop
gs
cmp
dec
insb
aam
jle
add
dec
lret
sbb
push
sub
popa
mov
or
rcrl
adc
sub
jo
or
jle
sbb
pop
sub
cmp
int3
sub
daa
push
inc
mov
out
mov
adc
aad
sahf
xchg
jbe
dec
test
xlat
mov
push
push
addr16
or
mov
lods
mov
mov
jo
aad
xor
jb
and
cmp
or
mov
or
pop
dec
lds
ja
dec
or
xchg
xor
jbe
adcl
push
imul
scas
imul
int3
js
jo
xchg
pop
sub
in
pop
mov
adcb
lods
sbb
xor
mov
in
data16
cmc
out
sub
push
cmp
add
sbb
stos
into
lods
and
sbb
mov
xor
jae
stos
fnop
inc
sub
pop
stc
enter
idivb
sbb
sub
pop
test
lods
in
lods
dec
cmp
ret
push
sub
xchg
push
push
jp
and
push
movsl
sbb
stos
xchg
imul
and
dec
xlat
stc
xchg
imul
out
pop
jno
call
mov
lods
sbb
adc
scas
pop
ljmp
arpl
and
inc
push
xor
push
gs
dec
sub
xchg
test
cmp
sub
gs
data16
mov
je
jne
xor
mov
push
sub
in
mov
jne
inc
add
mov
add
lock
jno
out
pop
sbb
adc
sbb
xor
scas
or
sbb
mov
scas
test
cmp
inc
rcrb
xchg
loop
xchg
or
cmp
push
sub
mov
dec
aam
xor
push
push
xor
cmpsb
jo
gs
or
add
jne
push
dec
dec
xor
jb
insl
ja
xor
imul
out
add
jo
dec
imul
mov
xchg
lock
jae
cltd
inc
arpl
adc
or
popf
subb
adc
jbe
lret
push
int
testl
xor
nop
outsl
push
mov
jo
test
sbb
hlt
movsb
mov
mov
push
jb
jno
xor
cmp
outsl
shl
ds
fsubrs
sub
push
pop
mov
pop
fs
ret
cmp
sub
pushf
repnz
fidivl
adc
cwtl
pushf
ljmp
imul
test
imul
in
insl
or
cs
inc
ds
or
loope
or
mov
cmpsb
dec
mov
push
or
ret
mov
mov
int
and
inc
cmp
aad
sbb
arpl
push
xchg
cs
leave
jne
adc
insb
pop
test
xlat
pushf
jge
jo
aad
push
cmp
hlt
push
or
rclb
out
cmp
push
pop
lods
in
out
xchg
insb
aam
stos
inc
or
and
adc
xchg
inc
fnstsw
or
aam
adc
or
adc
insb
jnp
sub
mov
adc
insb
fwait
adc
xchg
mov
and
push
sbb
lds
gs
movsl
adc
and
mov
sbb
rorb
mov
sbb
mov
nop
lcall
sub
adc
test
cmpsb
movsb
lods
mov
jo
aam
cmp
xor
insb
popf
dec
xor
xchg
and
adc
sub
insb
or
imul
sub
sub
les
adc
xchg
xor
xor
movsb
leave
and
popa
lds
inc
or
sub
adc
xor
popa
mov
add
lcall
sahf
xor
hlt
adc
hlt
xlat
inc
or
and
mov
fs
push
cmp
neg
leave
push
xchg
sub
xchg
stc
jp
cmp
pop
adc
push
loopne
dec
inc
push
push
and
call
lock
jb
xchg
jmp
mov
movsl
fchs
les
leave
lahf
mov
or
or
push
js
lods
and
pop
adc
sub
and
lahf
pop
shll
or
dec
xor
dec
movsl
decl
push
push
xor
mov
jmp
sub
add
fld1
pop
in
pop
test
aam
mov
outsl
dec
shrl
and
sbb
movsl
aas
loop
ja
ret
stos
lahf
inc
xor
imul
dec
aad
or
mov
mov
xchg
in
pop
xchg
cmpsb
andb
idivb
push
cld
jo
pop
adc
push
in
subb
cld
mov
orb
je
rcr
lds
int
jo
fs
adc
or
shrl
push
sub
adc
pop
in
shl
dec
push
sub
xor
jb
cld
cltd
push
ljmp
pushf
xor
mov
jne
push
lcall
dec
sub
lock
push
movsl
adc
dec
mov
inc
or
push
or
out
into
dec
imul
int
or
insb
and
imul
push
adc
and
adc
adc
fistl
in
lahf
lcall
test
mov
sbb
dec
jecxz
inc
xchg
in
adc
pop
rcll
sahf
sub
out
addr16
lret
pop
sub
inc
sub
xchg
mov
scas
test
js
jl
inc
ret
dec
mov
inc
inc
lcall
loopne
daa
xor
jne
ja
push
add
imul
xor
sub
push
inc
or
jl
xchg
dec
mov
outsb
aas
add
pop
push
push
adc
or
push
test
adc
pop
data16
das
stc
in
mov
das
or
cmp
stc
xor
ret
xor
or
xor
xor
sub
sub
xor
adc
jge
dec
dec
inc
insl
adc
dec
fnsave
pop
arpl
xchg
aas
pop
xchg
mov
sub
fs
xchg
xchg
push
lret
jge
jge
pusha
test
push
adc
repz
push
sbb
cmp
mov
stos
out
shlb
sub
call
adc
hlt
dec
movsl
cmp
pop
pop
in
xchg
test
xlat
iret
push
push
cmp
in
and
push
or
add
fistl
mov
sbb
sbb
pop
push
and
lret
inc
outsb
adc
ret
out
test
push
pop
inc
pop
adc
movsb
mov
xchg
leave
imul
mov
lcall
inc
sahf
roll
leave
jns
loope
and
add
push
xor
xchg
nop
dec
bound
jmp
or
xchg
jle
cli
push
cltd
lahf
push
mov
repz
in
pop
xchg
inc
xchg
outsb
mov
push
jae
jp
or
rorb
movsb
cmc
je
loope
dec
cmp
sub
pop
pusha
dec
das
jno
movsb
divl
dec
adc
xchg
and
dec
adc
insb
pushf
and
jb
or
call
or
leave
mov
jae,pt
mov
stc
sbb
nop
sub
rolb
add
js
mov
xor
or
cmp
rolb
or
test
and
pop
pop
sbb
push
dec
push
cmp
or
adc
cmovno
int3
xor
add
lcall
ret
cwtl
test
je
xlat
add
cmp
call
dec
cmp
cmpsl
icebp
cmp
xor
nop
jne,pt
ret
icebp
into
jbe
outsl
or
cvtpi2ps
pop
pop
push
sub
mov
lea
inc
xlat
rep
mov
stos
sbb
push
push
dec
push
dec
add
add
test
pop
ret
mov
mov
and
jg
cmp
inc
cmp
dec
dec
arpl
mov
aad
lods
sub
cmp
jmp
cmpsb
and
movsl
mov
sbb
lds
adc
xor
inc
adcl
std
ds
xor
cmp
cmp
mov
movsl
xor
jecxz
hlt
mov
sbb
and
fisubrs
fldenv
xchg
fldcw
or
insl
mov
push
push
sbb
pop
testb
push
clc
ss
adc
dec
jp
pop
cmp
push
adc
jae
repnz
ficompl
std
jmp
dec
cmp
fidivs
leave
aaa
dec
pop
mull
je
push
pop
data16
movb
sub
test
call
sbb
pop
fstl
shrl
mov
push
sub
add
or
pop
aad
cltd
push
jmp
dec
mov
arpl
dec
imul
clc
rclb
xchg
adc
popf
stos
test
mov
out
test
pop
cmp
lcall
mov
push
das
push
notl
push
loopne
cmc
inc
imull
test
sbb
rolb
ret
imull
clc
pop
inc
fs
pop
fcmovne
xor
stos
aas
aad
and
test
dec
push
scas
lods
pop
clc
jb
iret
shrl
and
stc
jne
aam
dec
jno
dec
pop
xchg
pop
cld
mov
hlt
das
inc
fwait
push
je
scas
aam
cmpsl
stc
adc
push
sbb
cli
cltd
xchg
aad
cs
dec
in
xchg
cltd
jno
dec
push
dec
xor
je
dec
lahf
push
sti
int
sub
aam
in
inc
and
cltd
xchg
mov
sub
loopne
push
stc
xor
incb
scas
jmp
ss
add
js
insb
pop
out
dec
das
cmp
das
aas
je
mov
faddl
push
data16
shll
cmp
inc
inc
push
out
cmp
adc
sbb
popa
pop
popa
imul
sub
lcall
xor
mov
push
adc
fldt
test
popf
in
out
xlat
out
es
mov
and
pop
push
inc
inc
push
inc
dec
jle
loope
repnz
cmp
jne
cwtl
or
movsb
add
mov
adc
adc
push
scas
sbb
and
sub
addl
cmc
add
sub
add
jnp
test
and
add
add
inc
lds
cli
mov
mov
add
cltd
pop
adc
cmp
inc
or
movsb
add
pusha
cmpb
sbb
fists
or
inc
jle
or
ret
popa
shll
cmp
mov
xor
iret
mov
in
call
nop
adc
add
popf
rcrb
adc
mov
loopne
or
jle
inc
adc
sbb
roll
add
sbb
cmpsb
add
cmp
or
push
push
push
and
mov
add
aaa
cmc
jmp
add
mov
dec
or
or
or
push
dec
cmp
or
cltd
pop
adc
mov
dec
add
sbb
cmp
inc
inc
sub
xchg
push
sbb
push
or
xor
cltd
jl
dec
sbb
and
jo
sbb
jb
in
xor
cmpb
cmpsb
and
sub
push
sahf
adc
mov
enter
jb
into
cltd
and
sbb
dec
pop
or
add
xchg
sbb
xchg
jns
adc
cmp
nop
cmp
xchg
dec
add
xor
and
xchg
mov
xor
inc
inc
mov
ds
inc
cmp
push
and
xor
adc
icebp
and
and
pop
mov
sbb
jo
sbb
mov
adc
pop
and
inc
push
jp
loopne
cld
and
add
dec
shlb
mov
test
jno
cmpsl
test
dec
cli
push
dec
outsl
add
mov
out
cmc
nop
xchg
add
jmp
xor
or
add
cmp
inc
cs
in
dec
jg
jo
add
or
enter
or
jns
pushf
or
push
ret
ud2
or
adc
xchg
and
mov
mov
adc
pop
rorl
and
sahf
mov
add
test
lds
std
add
sbb
cmp
add
add
sahf
add
mov
adc
cmpb
iret
decl
js
jp
outsl
loopne
jmp
mov
test
imul
divl
jl,pt
add
mov
stc
popf
sti
jmp
jle
push
inc
mov
int3
repnz
test
adc
stos
clc
scas
test
cli
pop
jmp
aam
notl
dec
jp
add
inc
gs
xchg
push
cmpsb
add
inc
or
jne
xchg
jbe
dec
dec
pop
inc
add
cmpsl
xchg
cmp
xor
push
cli
push
in
cmp
sahf
xchg
pop
call
and
push
movsl
mov
popa
push
sar
mov
fsubs
xchg
clc
repz
mov
fldl
xchg
add
mov
push
pusha
les
int
add
add
aas
jno
cmp
syscall
clc
sbbb
fisttps
lea
loopne
shrl
gs
pop
pop
mov
icebp
clc
rolb
mov
inc
sbb
lods
lds
cmpsb
mov
insb
scas
add
jmp
xor
aad
xchg
mov
std
adc
popa
test
emms
int3
stos
in
das
dec
pop
loope
add
mov
jecxz
rclb
pop
inc
int
lcall
cmp
inc
lods
push
mov
jg
and
loop
cmp
xor
jp
add
sarl
adc
das
lea
add
inc
jle
sbb
jmp
jg
sub
jge
add
inc
rcr
add
arpl
int3
and
cmp
cmpl
inc
xor
lods
cmp
and
xchg
mov
cmp
mov
sbb
cmpsb
add
movb
jne
fldt
cmp
xor
shlb
xorb
dec
nop
add
cmpsb
xchg
movsl
addb
mov
loop
mov
add
mov
sub
and
xor
push
push
scas
into
imul
pop
add
rcr
ret
call
add
mov
sbb
gs
std
loopne
scas
or
xchg
jge
pop
fiadds
lahf
into
ror
add
cmpsb
fcomps
outsl
stos
mov
jmp
push
fwait
jne
ljmp
xor
inc
add
add
add
adc
lock
lods
add
inc
mov
imulb
and
xor
jl
add
ret
ss
mov
add
into
mov
imul
and
mov
icebp
push
dec
cld
inc
pop
lret
sub
loopne
sbb
dec
xchg
sar
shrb
add
cmp
and
daa
in
or
pop
xchg
adc
js
pop
call
xor
xchg
and
dec
add
or
ret
or
leave
out
mov
inc
cmp
cmpsb
aam
test
push
inc
cwtl
rorb
adc
push
pop
bsr
clc
jbe
lahf
mov
pushf
pusha
fwait
aas
pop
js
setns
push
cmpsl
insb
dec
or
mov
pop
xchg
add
mov
add
or
inc
push
xchg
or
inc
mov
imul
add
fisubl
out
jns
icebp
sub
addr16
fldt
fwait
mov
pop
cmp
pop
orl
std
xchg
fdivrs
outsl
adc
mov
push
xchg
and
daa
add
int
xchg
cmp
inc
add
inc
cwtl
mov
andb
add
mov
xor
or
jle
mov
adc
inc
loop
es
addr16
xor
fsubs
rclb
out
ljmp
push
inc
jno
add
jl
push
push
adc
fdivrs
movsl
add
xchg
mov
push
dec
xchg
rclb
aad
xor
cmp
into
pop
xor
push
lret
decl
jnp
push
aaa
pusha
pop
sbb
jns
sbbb
imul
jg
dec
pop
nop
or
clc
jbe
add
dec
push
addb
iret
push
fistpll
rorl
inc
mov
in
inc
add
xchg
jbe
and
dec
add
or
push
adcl
daa
push
xchg
sbbl
xor
xor
sbb
mov
pop
lea
lock
add
sub
cmpsl
xchg
in
push
pop
mov
aaa
add
sub
and
mov
mov
test
enter
add
add
scas
mov
add
pop
xchg
mov
add
adc
loopne
push
add
and
pop
push
cmova
int
add
fwait
sti
xchg
std
dec
setp
push
add
stos
xchg
testl
out
bound
sub
mov
inc
loope
add
sub
xchg
ss
scas
cmp
jae
jns
and
or
sbb
loopne
xchg
pusha
sub
ja
xchg
jg
mov
jmp
push
lods
out
jge
sub
cmpsl
dec
js
add
push
mov
loopne
sbb
test
fwait
mov
sbb
shlb
sbb
jae
mov
mov
fimuls
mov
add
sub
pushf
adc
add
pop
inc
mov
push
xorb
add
loope
addl
rorb
lods
iret
cld
xchg
inc
adc
inc
push
fstps
stc
add
mov
xor
mov
lret
mov
inc
push
cmp
ss
test
fisttpl
cmpl
jae
repz
insb
ss
jecxz
lahf
lds
jmp
cmp
mov
push
dec
add
divb
cmpsl
enter
add
lahf
cli
imul
cmp
aas
pop
in
cmpsl
xlat
mov
pop
mov
cmpsb
mul
fs
sub
stos
mov
call
sarl
add
ljmp
scas
ds
jb
push
xlat
nop
fiaddl
jo
fbld
popl
mov
push
sahf
adc
mov
aad
outsl
add
fwait
cmc
testl
lcall
add
sub
xorb
sub
mov
add
cltd
cmp
adcb
mov
clc
test
sub
aas
dec
popa
xorb
xchg
cmp
add
push
or
dec
dec
rolb
das
xor
or
mov
mov
out
sbb
and
cwtl
test
sub
add
fiaddl
mov
sub
sbb
movsb
xchg
add
xchg
cmpsl
cmpb
inc
cmp
push
inc
enter
sbb
adc
push
add
fcompl
add
dec
pop
add
mov
loope
mov
jns
mov
addb
add
lods
popf
jno
adc
sub
and
mov
popl
sti
cmp
nop
test
in
popf
loop
add
and
loop
rcrl
out
call
jae
sub
sbb
in
mov
add
jno
scas
add
inc
xchg
xchg
mov
cltd
sbb
dec
stos
jae
add
mov
cmp
aad
xchg
add
xor
sbb
es
daa
sub
add
imul
or
xchg
inc
jbe
add
lods
push
aaa
shll
imul
pop
aad
sub
push
ljmp
xor
xchg
add
stos
add
shlb
mov
mov
inc
out
inc
mov
push
out
outsl
mov
test
jns
xchg
das
orb
pop
push
divb
add
pop
enter
or
retw
insl
test
xchg
mov
xchg
push
adc
cmp
push
lsl
test
nop
outsb
sar
mov
add
daa
fsubs
dec
cmovb
or
add
mov
outsl
popl
jns
stos
sub
dec
lea
ds
xchg
xchg
mov
sbbl
cld
pop
pop
pop
std
jbe
adc
inc
or
add
xor
or
jmp
sbb
mov
add
sub
addr16
popa
add
jo
mov
pop
aam
push
in
push
and
pop
sbb
js
and
enter
add
or
pusha
decl
in
arpl
cmp
and
inc
xchg
leave
sahf
push
pop
lahf
add
push
inc
mov
xor
push
or
add
jle
inc
mov
or
jns
lret
into
mov
inc
test
push
add
loop
push
addb
inc
fwait
jge
repnz
push
adc
mov
lds
cmpl
xor
cwtl
push
jle
rolb
push
pop
pushf
pop
inc
dec
addr16
arpl
outsb
fwait
sbb
imul
shr
add
adc
sahf
adcl
shrb
jns
lcall
xchg
dec
in
pop
cmpsl
push
add
xchg
test
and
add
das
lea
add
fwait
xchg
jns
les
jno
mov
inc
sbb
mov
or
xor
pop
jbe
rcll
mov
and
aas
stos
xchg
sbb
adc
fidivs
sub
pop
jo
pop
pop
add
lock
push
push
leave
mov
xchg
inc
pop
repz
and
cmpb
mov
adcb
rorl
adc
shlb
or
push
sbb
jns
or
pushf
sbb
mov
ficompl
cs
sarl
pop
andl
add
not
int
js
outsb
in
repz
sbb
mov
sbb
sbbl
int3
into
cmpsb
xchg
popl
fildll
dec
sbb
xlat
dec
cmpsl
add
sbbl
adc
and
mov
add
repnz
jns
xchg
xor
inc
add
xlat
js
mov
pop
mov
pop
pop
sbb
mov
stos
jae
push
add
jne
test
cli
push
push
sub
pop
add
add
std
shll
add
mov
and
pop
sub
dec
pop
mov
test
je
out
fdivs
xchg
iret
sahf
xor
pop
mov
cltd
add
mov
lds
add
jle
popa
pop
sahf
xor
push
out
fs
lcall
ja
test
enter
push
push
pop
addl
mov
mov
adc
rcrb
jns
jp
add
enter
pop
stos
mov
out
addr16
lret
mov
mov
mov
int3
clc
xor
dec
fiaddl
test
sub
pop
mov
add
cltd
fsubs
fsubl
testb
sbbl
mov
hlt
clc
pop
jg
mov
inc
and
fdivl
pop
sbb
lock
mov
addb
sti
test
std
shld
imul
inc
mov
and
pop
outsl
icebp
add
xchg
jmp
pop
adc
push
dec
or
add
in
ret
iret
in
lea
mov
popf
pusha
idivb
push
add
xchg
fwait
movsl
ret
pushf
mov
jg
addb
jbe
pop
and
lret
popf
insl
push
cmp
rclb
ja
out
clc
mov
jnp
mov
icebp
divl
pop
mov
addb
xor
jp
xor
fsubrs
pop
cwtl
cmp
xchg
sbb
leave
add
add
xchg
mov
add
fucomi
mov
mov
pop
adc
in
xchg
add
sub
or
mov
cmp
sysenter
aam
xor
or
ja
mov
add
test
aaa
ss
adc
rorb
or
mov
push
adc
js
xchg
and
xor
cmc
pop
fwait
mov
and
add
mov
xor
dec
add
fstpl
enter
dec
mov
imul
les
add
movb
xchg
int3
rclb
xchg
add
lcall
push
xchg
cmp
push
inc
dec
sbb
push
xor
out
add
fstpt
adc
ja
stc
imul
push
pop
lods
scas
cmpxchg
loopne
adc
lock
pop
call
lods
int3
add
mov
add
sarb
rol
fsubp
cmpsb
add
mov
movl
adcl
xchg
shlb
push
jg
dec
pop
and
in
ljmp
enter
and
movsl
mov
mov
add
fsubs
dec
bnd
cmc
sbb
mov
pop
and
pop
lea
fiadds
cmp
add
aad
add
cmovnp
movsb
inc
sarl
lcall
jnp
enter
sub
out
add
sarb
testb
dec
add
jmp
jecxz
addb
mov
nop
push
and
addr16
lret
sar
or
and
ret
outsl
loopne
cli
add
pop
out
cmpsb
test
add
imul
lahf
mov
add
mov
cmp
pop
jge
add
decb
rolb
mov
pop
jp
daa
sub
mov
xchg
aad
inc
in
in
aaa
add
lods
cmp
pop
cld
das
scas
shrl
inc
loop
add
cld
call
into
push
subb
mov
lods
xchg
mov
and
add
in
mov
mov
ds
les
loopne
cmp
pop
lds
out
push
sbb
iret
and
stos
mov
cmp
sti
pause
ljmp
mov
add
lea
add
jp
sahf
sub
xlat
enter
into
cltd
pop
iret
fisttpll
mov
popa
mov
data16
adc
fbld
int
dec
pop
imul
mov
xchg
sub
enter
mov
add
mov
add
lods
andb
lret
or
loope
add
add
push
inc
test
xor
mov
addb
roll
cli
lcall
pop
add
xchg
mov
pop
cmp
jo
xchg
aaa
loopne
fsub
add
adc
daa
add
addr16
push
add
cmp
mov
pop
fwait
xchg
mov
bswap
adc
outsl
out
daa
sub
add
mov
insl
pushf
cmp
xchg
imull
xchg
adc
add
movsb
cltd
mov
add
insl
mov
pop
xor
add
push
cmpsb
mov
pop
xorl
pop
add
stos
bsr
pop
mov
incl
push
mov
add
mov
mov
dec
pop
sbb
or
mov
add
xchg
add
ret
into
insl
adc
popa
pop
push
or
pop
add
cmp
dec
add
mov
sbbl
pop
popa
add
scas
push
jmp
pop
test
push
fldt
arpl
cmp
xor
cltd
adc
aaa
or
jg
jo
cmpsl
fimull
xchg
mov
add
xchg
out
mov
add
aaa
or
and
outsl
pop
scas
adc
push
sbb
sub
cmp
and
adcb
sbbb
sbb
or
test
gs
xlat
sbb
push
xor
add
f2xm1
pop
add
dec
pop
jp
push
jno
add
inc
popa
sahf
pop
addb
movsl
dec
add
jge
outsl
add
or
add
mov
pop
pop
and
pop
add
or
mov
mov
push
pop
sbb
jno
pop
xchg
les
xlat
fstpt
hlt
lds
pop
popf
sbb
scas
add
mov
cld
mov
mov
in
popa
xchg
xor
pusha
add
mov
pop
add
fcoms
mov
mov
sub
inc
pop
mov
or
add
das
and
xchg
jmp
xor
fiaddl
inc
push
adcl
or
add
arpl
cmp
add
movl
inc
add
pop
mov
movsl
lea
xchg
mov
sti
sub
xchg
cmpsb
pop
scas
popa
andb
adc
jge,pn
gs
inc
jne
or
inc
pop
dec
add
out
sub
sahf
mov
xchg
shll
xlat
out
pop
pop
push
mov
mov
in
js
add
or
pop
push
cmp
xorb
jo
ficomps
xchg
add
and
add
adc
fcoms
movsb
add
clc
sbb
xlat
les
mov
pop
jmp
addb
adc
fs
lods
push
call
cmp
ficompl
push
mov
jmp
add
das
push
cmp
add
pop
xchg
push
cmp
push
fiadds
je
jg
aas
pop
iret
and
cmpsb
pop
cwtl
dec
mov
and
pop
jl
pop
jecxz
in
rolb
xchg
pop
cmc
jb
adc
xor
fildll
cmpsl
lea
jl
mov
inc
mov
add
adc
rorl
into
rcr
out
mov
fs
push
push
push
add
xchg
enter
add
pop
lahf
cmp
mov
dec
aas
add
les
push
push
push
mov
sti
lret
add
xorl
fldl
pop
xchg
bound
adc
aad
sub
mov
adc
enter
and
rclb
push
daa
lea
jno
mov
ljmp
mov
aad
push
add
inc
add
add
add
dec
stc
and
pop
test
stc
outsb
pushf
add
nop
and
xchg
adc
sub
and
xchg
pop
add
pop
pop
popf
cltd
mov
dec
mov
out
adc
test
das
rcrl
enter
adc
add
sbb
or
add
cmpsl
or
push
add
rorl
jg
mov
sti
xorl
and
pop
jl
inc
aaa
pop
or
jp
sbb
mov
inc
out
into
aad
xchg
add
test
push
nop
push
loope
scas
add
mov
sub
push
or
fsubrs
cmp
lods
xchg
dec
dec
jl
add
push
mov
adc
call
je
push
in
aas
add
fcompl
in
call
xchg
and
push
or
pop
pop
cmp
rclb
jmp
and
pop
xchg
mov
or
jl
add
mov
cmp
repz
out
shr
pop
lock
add
push
mov
mov
test
mov
and
mov
repz
mov
xor
add
scas
xlat
push
mov
jg
nop
andb
cmp
add
cmp
or
jl
pop
das
push
dec
roll
add
dec
push
pop
das
xor
mov
adc
fimuls
rcr
jno
jle
stc
rol
add
shll
test
add
out
inc
jns
mov
fwait
ret
cwtl
add
shl
push
loope
lcall
sub
arpl
movb
jle
and
das
pop
loopne
in
add
daa
stos
in
sub
ds
dec
dec
and
loope
jmp
adc
add
rcrl
scas
arpl
add
popa
in
mov
sub
inc
shll
fists
outsl
add
inc
sbb
loopne
adc
xor
xchg
xchg
xor
sub
pop
xchg
pop
xlat
xchg
push
imul
push
cltd
cmpsl
sbb
add
pop
push
adc
fbstp
mov
pop
scas
out
sub
dec
dec
jl
add
jecxz
imul
adc
clc
jg
mov
jmp
xor
dec
pop
mov
add
stos
mov
adc
sub
sub
rolb
push
ja
nop
inc
mov
pop
cmp
test
add
xchg
aad
or
and
xor
sbb
mov
pop
mov
push
mov
dec
lods
mov
pusha
add
push
add
repnz
imul
push
push
add
mov
nop
cltd
xchg
mov
fidivrs
stos
lcall
push
ss
mov
jns
add
xchg
xlat
paddusw
push
sub
push
cmp
xchg
fcoms
ljmp
xchg
insl
mov
push
roll
jnp
fstpl
dec
add
sbb
push
add
incb
add
pop
pop
lods
xlat
shrb
dec
aaa
adc
push
out
arpl
push
addb
imul
or
rorb
or
jg
popa
add
jns
push
mull
nop
and
add
pop
fs
idivb
clc
add
dec
sub
test
icebp
add
push
push
add
lds
daa
das
popa
xchg
repz
add
cwtl
or
aam
sub
pop
aad
sti
mov
les
jno
and
mov
mov
pop
fs
add
lds
add
jecxz
push
lahf
xchg
mov
add
ja
or
jns
loope
mov
xchg
dec
sub
icebp
add
cmp
pop
sub
test
faddl
mov
adc
movsb
sub
leave
cmpsb
sbb
or
lock
sub
shlb
or
and
mov
test
add
stos
or
lock
dec
add
dec
adc
jp
or
adc
sub
mov
push
adc
clc
testl
in
je
push
mov
shll
icebp
cmpsb
and
and
push
and
add
cs
xchg
mov
jae
shll
iret
jmp
adc
inc
jg
repz
xorb
out
addr16
mov
std
mov
mov
push
cli
cmp
or
test
dec
addr16
fnstcw
cmp
leave
rolb
outsb
lods
xchg
enter
add
jmp
frstor
xchg
inc
mov
or
add
lods
sbb
xchg
dec
test
xor
add
negb
add
cld
push
cwtl
sbb
les
int3
ja
pop
js
dec
daa
fs
add
int
and
and
jns
mov
movb
int3
sub
add
mov
adc
cld
cmpsb
loope
stos
cwtl
vunpcklps
push
or
xchg
call
cmp
push
jne
mov
push
inc
pop
aas
add
mov
dec
sarb
xchg
sbb
jne
push
add
rcr
inc
call
mov
insb
jns
add
pop
jno
push
fxsave
mov
jecxz
sahf
mov
xor
cmp
leave
lock
cmp
std
andb
or
add
add
inc
sbb
jle
sub
cs
int3
or
movsb
clc
push
out
jbe
xor
fs
inc
mov
retw
push
test
daa
push
roll
mov
mov
dec
lock
cltd
add
jnp
subb
roll
mov
orl
xor
or
pop
nop
daa
shrb
aam
mov
call
pop
sbb
notl
mov
add
mov
js
and
and
and
mov
into
fistpl
enter
ret
xchg
add
add
pop
sbb
jle
popf
mov
movsl
inc
mov
push
cmpb
add
jle
addr16
cmp
add
iret
imul
push
lcall
xchg
ds
mov
inc
jl
ss
add
push
imul
fwait
cmp
jb
mov
pushl
xchg
adc
or
cmp
icebp
pushf
andl
nop
xchg
push
int3
popa
arpl
and
dec
repz
mov
add
inc
dec
push
enter
in
aas
xor
mov
adc
inc
sbb
arpl
enter
pop
sbb
or
pop
cltd
jb
add
mov
pop
xchg
pop
in
add
daa
add
cmp
mov
add
int
xchg
lahf
test
lea
jns
iret
rorb
dec
lods
add
pop
bound
push
pop
mov
icebp
fwait
sbb
in
adc
movsb
xor
sub
jo
mov
dec
add
stc
fisttpl
add
jne
shlb
lods
jge
or
ss
xor
es
scas
add
cltd
lods
fimuls
lea
test
xchg
imul
repz
xchg
test
in
dec
js
pop
add
xchg
push
bsr
jns
loopne
leave
lahf
mov
and
xlat
outsl
fistpll
stc
add
add
add
test
cld
out
bound
add
adc
or
xchg
dec
fisttpll
add
push
test
pop
popf
ds
xlat
add
test
mov
aaa
inc
fxch
jnp
add
mov
lods
mov
sbb
push
mov
adc
and
mov
popa
add
mov
lds
aas
rolb
loop
sub
mov
sahf
pop
xor
add
pop
push
cmc
roll
add
rcrb
sub
sub
aaa
push
add
pop
jmp
push
xchg
add
movsl
test
sub
hlt
cld
pop
cmova
cmp
cmp
movsb
subl
mov
scas
popf
xchg
mov
add
aas
xlat
add
push
imul
cmp
adc
test
sar
sbb
xchg
mov
ss
jnp
mov
push
fistps
sahf
sbb
js
push
fidivrl
sub
clc
out
ja
mov
fisttps
lret
add
mov
dec
test
les
xchg
xlat
add
add
data16
movsl
ret
pop
fimull
xchg
mov
lea
mov
jecxz
or
out
ljmp
faddl
mov
sbb
lods
mov
mov
and
in
ja
lods
sbb
loopne
lret
sbbb
add
sbb
xor
adc
sbb
push
subl
pop
xchg
add
sub
add
add
movsb
dec
test
filds
aam
jmp
mov
ret
sbb
add
add
adc
ret
dec
data16
idivl
push
adc
pop
ja
add
cmpsl
push
mov
inc
iret
add
mov
cwtl
add
or
filds
es
adc
xchg
sub
add
pop
mov
mov
cmpsb
pop
test
adc
ds
ja
sbb
scas
adc
bound
xor
add
cmpl
and
jne
jns
and
je
cld
push
call
cmpsb
adc
out
push
add
aad
jno
mov
cmc
mov
push
aas
push
ret
icebp
dec
das
add
idivb
inc
and
mov
pop
sahf
push
insb
repz
mov
add
or
iret
ds
stos
addb
or
cltd
into
sbb
into
xchg
xor
addl
leave
add
mov
movsl
add
xchg
push
fwait
dec
jp
dec
pop
bswap
xor
movl
xor
sbb
orl
lret
jb
or
add
sti
and
fldl
daa
or
cmp
add
lods
sbb
in
or
add
mov
jmp
shl
xchg
sub
cmp
pop
test
out
test
stc
imul
xor
hlt
xchg
add
gs
add
jge
push
jae
add
mov
mov
pop
dec
scas
mov
movsb
mov
into
mov
ds
and
mov
push
mov
incb
or
inc
xlat
mov
addr16
add
adc
data16
mov
and
push
rol
add
shrl
sbb
call
push
adc
mov
inc
add
push
test
mov
or
inc
aas
mov
mov
mov
dec
ja
add
pop
sbb
adc
add
mov
lret
xlat
jno
faddl
dec
jmp
test
pop
inc
add
lret
mov
mov
inc
mov
rclb
loope
sub
dec
int
cmp
test
add
and
in
loopne
stos
push
stos
jne
les
push
sub
inc
popa
sarl
fucom
dec
jecxz
loop
mov
bound
fcoms
cmp
dec
fiadds
add
mov
test
les
sub
dec
mov
jnp
xchg
or
push
shll
pushf
push
in
fdivrs
add
nop
sbb
mov
dec
add
imul
shlb
dec
in
mov
add
mov
xchg
iret
add
sahf
cmp
fs
cmp
outsl
add
push
mov
loop
lret
pop
mov
loope
pop
xchg
mov
mov
lds
add
imul
xor
jecxz
aam
or
sysenter
add
sbb
cli
movl
mov
xchg
add
outsl
aaa
add
popa
ja
prefetchnta
xchg
sbb
daa
das
cmp
or
test
xchg
push
and
aad
subl
sub
lods
sahf
mov
pop
jbe
pop
sbb
fstps
bound
jno
mov
lds
test
add
mov
and
pop
rclb
jnp
stos
arpl
enter
add
std
adc
icebp
addl
or
sub
sub
add
adc
pop
or
mov
add
jbe
cmp
ret
jg
jge
out
add
andl
lds
fnstsw
pop
icebp
add
add
pop
add
cld
movsb
aad
pop
pop
rolb
roll
fwait
arpl
mov
mov
jno
mov
stos
mov
push
push
add
xor
inc
xchg
jnp
stos
sbb
mov
imul
pop
ret
push
out
adc
push
push
push
add
imul
jle
addr16
adc
xor
sbbb
das
cmpb
cltd
test
addb
iret
dec
gs
nop
cmp
push
pop
adc
adc
mov
sub
mov
hlt
or
outsb
sub
adc
pusha
popf
dec
or
add
push
mov
mov
add
leave
pop
cmp
jmp
sbb
test
cld
inc
mov
inc
and
push
or
mov
add
in
insb
adc
mov
mov
insb
xor
sub
les
mov
popa
add
rorw
xchg
inc
test
out
push
sbbb
mov
jne
sarb
mov
pushf
mov
inc
mov
dec
pop
sbb
jbe
add
scas
test
push
xchg
test
shlb
adcb
inc
add
add
adc
push
or
add
jb
sbb
lea
jnp
lods
add
sbb
rcrw
int3
add
cmpsb
push
and
pop
dec
std
add
mov
test
adc
add
les
scas
lock
adc
jg
aas
xor
ja
icebp
sub
loopne
mov
insl
and
movsl
sahf
add
dec
inc
mov
jg
sub
sub
add
ds
movsl
sub
mov
adc
inc
jno
cmp
imul
sbb
dec
inc
adc
push
sbb
out
xchg
imul
clc
xchg
sub
loopne
out
loop
add
aaa
arpl
sbb
int
shrb
popl
out
push
push
rolb
mov
mov
and
leave
xchg
outsb
pop
add
mov
fstl
nop
add
bound
sbb
xor
mov
andl
das
mov
mov
in
jecxz
nop
jne
jnp
push
les
dec
pop
mov
add
and
dec
adc
dec
lods
add
std
test
inc
xchg
pop
add
clc
jle
std
add
les
insb
ss
push
add
imul
xchg
add
dec
das
scas
add
dec
add
cmp
add
or
aas
add
add
fs
lcall
push
mov
and
pop
pushf
add
pop
int3
stos
sbb
add
and
std
add
add
sti
gs
and
ljmp
sub
add
sbb
dec
clc
mov
mov
cmp
sbb
xor
cwtl
mov
pop
sbb
arpl
add
aam
adc
xor
rcrb
pop
mov
int3
test
mov
inc
add
movsl
bound
les
adc
cmp
add
or
sub
xor
add
dec
sub
add
sub
mov
test
es
sahf
lods
dec
add
pop
js
add
daa
outsl
add
cmpsl
sbb
sub
adc
lods
rorb
push
add
sahf
and
jo
testb
push
mov
test
cmp
adc
imul
js
jns
add
leave
lret
in
in
call
xor
mov
outsl
mov
dec
flds
xchg
stos
call
push
jle
xchg
xlat
sarb
pusha
in
lods
add
les
iret
or
call
mov
dec
btr
and
add
les
cs
add
test
jne
adc
add
fwait
jnp
cmp
adc
jmp
mov
xor
sub
stos
jecxz
jge
shl
mov
ffreep
icebp
sbb
sub
add
adc
or
add
sbbb
mov
pop
dec
jae
icebp
add
cmp
jg
push
add
mov
sub
fldl
std
push
adc
inc
push
or
roll
pop
out
xchg
stos
sub
push
or
jmp
push
mov
repnz
push
mov
test
int
adc
add
and
out
adc
add
add
fistps
and
or
or
sub
sub
jns
lea
dec
mov
adc
sub
ret
xchg
add
xor
xor
repnz
lock
sbb
dec
add
stos
mov
arpl
mov
or
dec
lahf
lret
nop
jbe
add
push
adc
ud1
push
add
dec
mov
add
in
scas
jle
xchg
inc
add
leave
subb
xchg
cmp
out
jmp
stos
mov
mov
in
insl
aas
call
dec
testl
add
sbbb
or
add
add
js
push
mov
dec
scas
sbb
mov
shrl
jp
sbb
xlat
flds
fcom
sbb
inc
adc
nop
cs
insl
add
add
add
arpl
dec
mov
add
sbb
or
dec
pushf
loope
fadds
mov
push
mov
or
add
xlat
rolb
mov
xchg
inc
das
stc
lock
and
cmpsl
pop
mov
lods
sbb
inc
rcrl
mov
pop
fistpl
add
cli
add
loopne
pop
sbb
and
inc
mov
sub
stos
fdiv
add
mov
and
adc
push
push
xchg
jae
aas
pushf
add
stc
mov
sub
dec
dec
push
popa
sti
std
adc
ljmp
mov
fcomps
addl
or
out
pop
add
mov
jmp
add
add
lcall
xor
std
push
addl
or
cmp
add
js
cmp
push
cld
in
jg
pop
mov
inc
outsl
addb
mov
add
jb
popf
lods
test
data16
mov
pop
mov
ja
add
aaa
mov
pushf
ds
sbb
dec
push
add
cmpsl
xchg
add
inc
and
adc
outsl
rcl
jg
push
add
adc
or
loop
cwtl
pop
aad
leave
push
add
pop
clc
add
ds
or
mov
fwait
cmp
pop
dec
dec
add
addr16
mov
add
sbb
adc
mov
sahf
cmpsl
cld
jge
or
add
std
dec
and
pop
sub
add
cmpsb
std
shll
rorb
sbb
incb
bound
push
and
sbb
sub
shlb
pop
sbb
push
xlat
pop
stos
inc
ss
mov
adc
testb
add
xchg
mov
sbb
sarb
adc
pusha
cmp
mov
xchg
xor
add
ret
or
jne
or
fadds
ret
testb
outsb
mov
jle
add
jmp
pushf
repnz
cmpsl
rorl
into
inc
sbb
mov
xchg
nop
and
sbb
add
lock
lods
test
xchg
mov
shlb
adc
sub
xor
cwtl
aam
dec
jl
paddw
pop
mov
adc
or
jmpw
adc
xor
or
jnp
popa
cmp
cltd
popf
in
add
and
or
fistpl
test
cmp
mov
add
mov
mov
add
jp
sub
pmuludq
iret
xchg
sbbl
push
xor
sub
and
and
cmp
movb
mov
sbb
testl
and
rolb
ja
push
andl
iret
fucomip
repz
dec
rclb
add
pop
stos
shr
repz
mov
loopne
mov
add
fisubrs
fsubr
mov
add
dec
mov
inc
add
adc
add
fildll
ljmp
popf
lret
mov
stos
mov
add
push
test
test
add
iret
cmpsl
mov
fsubrl
xor
pushf
dec
and
add
mov
mov
or
mov
jmp
inc
pop
fwait
leave
loop
mov
lods
pop
test
cltd
lods
inc
sbb
xchg
stos
mov
mov
pop
add
mov
test
dec
mov
sbb
addb
cmpsl
ret
fld1
jb
fwait
or
cmp
xchg
mov
push
sub
sbb
fsubs
mov
stos
mov
pop
fcomps
fadds
mov
sarb
stc
add
fnsave
es
add
mov
lret
enter
add
xor
jl
ljmp
arpl
jmp
inc
ret
call
repnz
xor
ss
sub
outsb
fstps
sub
xchg
fiaddl
roll
scas
add
stc
loope
push
in
lods
sub
or
inc
mov
dec
addr16
jle
test
jns
repz
rorb
insb
sub
add
mov
frstor
push
outsl
mov
insb
test
or
sbb
call
mov
xor
xor
sub
aaa
add
sarl
pop
and
aas
jmp
imul
jmp
add
and
mov
xchg
leave
pop
lahf
mov
add
add
pop
std
xchg
xor
call
lea
mov
pop
or
in
out
pop
push
cmp
jl
bound
add
mov
pop
sub
add
fwait
push
cmpsb
push
cmp
insb
xchg
ret
lahf
std
idivl
loopne
pop
mov
pop
cli
stos
inc
xchg
sub
hlt
pop
imul
inc
orb
xchg
stc
sub
pushf
add
aad
dec
test
jg
sbb
pop
inc
push
add
inc
xchg
pop
sub
add
pop
mov
sti
stos
fildl
shl
or
imul
cmc
das
int3
add
inc
or
inc
push
mov
sbb
loop
stos
jno
daa
movsb
adc
add
pop
lret
cwtl
add
inc
bound
sbb
cwtl
pop
push
xor
sub
leave
add
xchg
cmp
add
pop
cld
pop
adc
dec
dec
add
jg
cmp
push
pop
add
fwait
int
pusha
mov
mov
xlat
aam
test
or
mov
orb
mov
faddl
jno
inc
sbb
and
and
xchg
mov
xor
mov
adc
leave
or
mov
jnp
add
out
mov
mov
mov
stc
mov
sbb
ljmp
add
pop
call
inc
mov
or
lret
popa
xor
or
rclb
test
add
push
addr16
add
dec
mov
add
push
lods
and
mov
nop
out
in
mov
cli
addb
adc
mov
mov
cmp
mov
add
xchg
stc
push
xchg
sarl
or
ret
call
push
add
dec
xchg
rclb
stos
xchg
add
add
test
and
pop
adc
or
daa
push
clc
ret
add
adc
sahf
loope
icebp
jne
sbb
fiadds
jns
cwtl
inc
sub
test
pop
lea
add
dec
inc
test
inc
dec
xchg
add
add
mov
and
adc
pop
pop
dec
adc
rolb
cmpsl
sub
outsl
xchg
nop
inc
inc
pop
std
xor
out
test
push
popf
inc
add
pop
notl
adc
mov
push
and
mov
xchg
cwtl
add
nop
aam
sub
mov
cli
and
adc
jo
push
add
adc
inc
das
nop
sub
xor
jne
add
jnp
in
in
jno
cmp
out
push
add
cmpsl
popa
fildl
lret
mov
pop
mov
test
pop
cmp
les
add
sub
xor
inc
mov
adc
adc
lods
and
psrlw
add
das
xchg
inc
mov
push
sbbl
lret
lahf
add
scas
fldl
leave
add
test
ss
cld
ja
xchg
and
cmp
rolb
fxch
push
scas
xchg
add
inc
test
sub
and
and
lcall
popa
mov
daa
cmpsl
jg
add
mov
add
pop
mov
add
xchg
sti
ja
add
or
test
push
xchg
add
add
movsbl
ret
or
xchg
and
nop
clc
mov
add
mov
pop
inc
add
or
push
add
add
inc
push
leave
out
add
test
scas
mov
mov
sarb
shl
clc
imul
sub
nop
mov
lcall
outsl
popf
mov
popa
push
push
add
or
adc
push
or
rorb
repnz
xor
adc
adc
or
mov
add
mov
add
test
dec
mov
sti
jmp
pop
mov
lock
add
cwtl
stos
sub
jb
xchg
enter
dec
jno
add
mov
movsb
lret
adc
add
add
cmp
fbld
imul
lods
out
hlt
les
mov
arpl
inc
inc
mov
andb
cmp
sbb
adc
test
stos
mov
and
pop
cmc
testb
call
or
rcrb
sbb
inc
push
loopne
les
or
add
aaa
add
insl
loopne
cmp
mov
jne
jae
or
stc
scas
jne
add
sub
mov
jle
enter
sbb
inc
mov
sub
push
mov
mov
mov
out
inc
dec
and
mov
popf
add
aaa
imul
cwtl
dec
pop
pop
out
mov
xchg
add
xchg
cmp
test
mov
xchg
inc
mov
icebp
xor
in
out
mov
xchg
add
sbb
aad
in
cmp
int3
cltd
add
xchg
add
push
xor
rcrb
mov
adc
das
fnstenv
dec
inc
add
sub
sub
in
in
mov
cmp
les
or
sub
bound
xlat
testb
xchg
jb
stos
xchg
movb
and
ret
mov
and
pushf
sub
lods
dec
inc
sbb
jge
aad
enter
jmp
daa
es
cmpsl
add
loope
inc
push
fcomi
add
dec
rorl
xchg
mov
cmpb
ret
pop
xchg
sbb
test
mov
sbb
nop
call
add
add
mov
mov
and
mov
sub
cmp
adc
and
inc
inc
add
dec
dec
push
pusha
xchg
lods
add
stc
cltd
mov
lea
xchg
test
push
sbbb
inc
movsl
push
push
push
or
cltd
mov
dec
adc
inc
jp
push
testb
sub
test
add
stos
das
push
js
jge
lahf
dec
add
or
test
cmp
push
add
or
adc
aaa
insl
mov
mov
inc
cmp
pushf
enter
adc
sbb
push
aam
addr16
cmp
cmc
dec
outsb
sti
add
jne
je
hlt
xchg
pop
mov
push
pusha
mov
das
rorb
loop
push
test
in
add
mov
add
outsl
mov
jg
pop
inc
icebp
ret
jnp
mov
add
movsl
adc
cmp
xchg
leave
sub
popf
popa
add
sbb
inc
ss
loopne
pop
xchg
pop
mov
nop
cmpsb
xorl
sub
popa
pop
dec
add
stos
cwtl
call
popf
enter
nop
mov
xor
adc
sub
push
inc
add
popf
mov
jno
push
test
inc
add
or
in
add
and
aam
add
lcall
adc
ja
add
gs
mov
in
adc
cs
sbb
mov
mov
mov
mov
xchg
int
in
add
add
test
mov
jnp
movb
pop
or
sbb
or
dec
add
add
or
lods
js
adc
adc
mov
scas
sahf
fcoml
mov
mov
mov
aam
mov
mov
dec
xor
sub
fucom
call
imul
rclb
test
insb
adc
ret
fucomi
add
inc
inc
hlt
cs
roll
clc
lahf
enter
bound
or
add
xchg
lret
aas
insl
clc
movsl
jno
mov
mov
and
mov
cmp
mov
sti
fisubs
in
sub
add
sub
stos
sub
xchg
adc
roll
cmp
push
dec
cmp
add
insl
mov
mov
jbe
cs
gs
mov
mov
aaa
leave
cwtl
jo
dec
cmpsl
repz
inc
es
adcb
push
add
roll
xchg
roll
mov
xchg
adc
shlb
xchg
ds
adc
or
sub
mulb
and
repz
or
add
jp
pusha
pop
in
cmp
add
and
adc
mov
cltd
mov
add
mov
mov
jns
inc
pushf
adc
adc
aad
add
dec
push
pop
jae
dec
xor
add
int
sbb
inc
adc
add
sbb
inc
je
sahf
sti
and
push
inc
gs
fmuls
xchg
inc
add
mov
and
add
test
add
cmp
inc
adc
sub
int
xor
dec
mov
add
rclb
dec
lods
or
add
push
push
data16
cmc
repnz
out
mov
adc
push
outsb
xor
push
add
repz
add
jle,pn
adc
push
mov
outsb
inc
and
faddl
rorl
outsl
add
or
rorb
rolb
or
xchg
jbe
push
push
mov
rcrb
pop
dec
mov
int3
xchg
adc
punpcklbw
and
and
pusha
fstpl
adc
hlt
inc
or
or
addps
aad
lock
cs
add
mov
mov
xchg
add
xlat
pushw
inc
mov
cmpsl
cmp
std
subl
in
cwtl
cmp
rolb
add
imul
cmpsb
cwtl
cmp
mov
adc
and
add
testl
xor
dec
mov
jecxz
adc
push
adc
adc
adc
add
mov
add
das
rcll
cmp
out
rorb
test
add
lods
push
adc
push
xchg
sub
lea
and
pop
pushf
ret
push
psubusb
lret
ja
push
sub
or
idiv
cmp
add
cmp
outsl
shlb
pop
add
aam
add
lret
leave
enter
lock
repz
sbb
ds
mov
cmpsw
cmp
mov
push
xchg
add
lahf
and
and
or
inc
mov
ret
push
add
arpl
jl
pop
dec
mov
je
bound
or
xor
icebp
xchg
ljmp
pop
pop
out
pop
shll
push
sub
ret
dec
push
jecxz
jbe
jb
inc
shlb
cmp
ds
and
mov
jne
fadds
fdivr
sub
mov
mov
push
add
notl
pop
mov
test
lods
adc
jge
add
sbb
add
int
inc
pop
incl
or
sbb
cltd
adc
daa
mov
pop
mov
add
or
mov
test
mov
aam
push
daa
cmpsl
movsl
sbb
cld
test
jns
or
int3
add
inc
lock
inc
pusha
mov
out
mov
cmc
sbb
fadds
cmpsb
test
mov
fdivrs
adc
pushf
sub
mov
lock
add
jp
mov
call
rorl
pop
add
lcall
xchg
cmp
and
push
loope
sub
and
shll
push
pop
dec
aam
ret
sub
and
ret
fdivl
outsl
add
jecxz
in
insb
testb
test
pop
adc
jo
mov
dec
add
and
pop
sbb
adc
and
mov
pop
jns
push
mov
enter
mov
xchg
add
dec
sbb
pusha
mov
pop
lods
or
lods
insl
les
cmp
fsubrs
out
jmp
out
ja
push
mov
add
in
movsl
push
xchg
call
cmc
ljmp
xchg
mov
pop
mov
add
aaa
jbe
aas
lret
sub
jle
pop
sahf
sti
adc
ds
jne
jp
inc
cwtl
add
xor
xchg
lods
stos
bound
adc
int3
ljmp
jl
add
jnp
add
leave
add
mov
addr16
cmpsb
fbstp
in
add
mull
xor
adc
push
movsb
push
add
add
stos
fists
xchg
cmpsl
mov
dec
leave
inc
pusha
and
add
push
jno
add
push
lea
xchg
mov
faddl
les
and
adc
mov
add
fiadds
xchg
sbb
add
push
sti
dec
dec
and
faddl
scas
mov
sub
adc
push
push
lods
mov
loopne
imul
pop
add
test
bound
adc
lods
push
roll
icebp
mov
push
sbb
adc
cmp
cltd
mov
dec
mov
cmp
and
inc
cs
cmp
add
dec
leave
push
add
mov
ja
xor
in
nop
pop
lea
add
push
inc
push
pop
jl
add
out
daa
add
jae
add
data16
add
adc
stos
sbb
xlat
nop
xor
mov
sub
push
add
ja
ds
jmp
add
cmp
mov
pusha
jp
sub
add
int
repnz
pop
rolb
jecxz
adc
mov
sub
xchg
mov
inc
sub
lahf
mov
push
add
or
add
push
mov
out
faddl
aaa
pop
xchg
rcrb
scas
add
js
push
cmpsb
cli
fsubrs
sbb
ret
or
sbb
and
out
loopne
dec
cmp
test
sbb
add
and
es
daa
cwtl
repz
test
mov
mov
or
fsubl
mov
adc
mov
cmp
or
add
rcrb
sbb
push
sub
daa
cli
out
pop
cmpsl
sub
aas
pop
xchg
out
ljmp
gs
int3
cltd
jecxz
and
or
fildl
adc
mov
ficomps
mov
mov
scas
mov
and
jno
pusha
icebp
cld
cmp
and
dec
add
add
dec
and
cmp
sub
incb
loopne
jecxz
mov
mov
enter
mov
nop
lock
test
aaa
sub
filds
add
clc
cmp
or
add
sbbl
pop
mov
adc
enter
pop
cmp
xchg
jle
pop
sub
push
enter
fiaddl
sub
add
mov
add
cmp
insb
xchg
int
pusha
add
and
cmc
cltd
add
or
clc
orb
adc
add
adc
sub
pop
fchs
iret
aad
add
test
add
cmp
mov
mov
fucom
or
lods
pop
icebp
cmpsb
das
or
and
push
add
fmull
lds
testb
push
adc
mov
out
jbe
mov
test
imul
fnsave
add
jne
push
jmp
xorl
outsl
mov
aam
jle
add
add
hlt
add
movsb
and
adc
test
lods
xchg
js
stc
add
or
adc
sbb
xchg
add
add
and
push
mov
sub
fsts
mov
jno
mov
in
aam
jo
cmp
mov
cmpsb
outsl
xor
cld
add
mov
pop
arpl
jmp
incl
rclb
fcomi
out
xor
jbe
pop
hlt
xor
add
cmpb
loope
add
adcl
cmp
xorb
add
leave
xchg
das
add
xchg
add
js
pop
cmovnp
push
push
add
cmp
lods
jge
or
rclb
adc
mov
or
inc
jb
iret
cld
popl
jle
push
imul
xor
and
xchg
cmpsl
test
lret
idiv
fisttps
addr16
add
inc
repnz
addb
jns
sub
roll
mov
mov
jbe
sub
shll
push
repz
mov
ficomps
loop
or
cld
add
sbb
inc
dec
test
xchg
mov
push
sub
outsl
dec
add
add
push
and
sbb
pop
pop
aaa
in
imul
pusha
sahf
nop
aas
mov
add
iret
popf
insb
sub
xchg
add
mov
push
cmovb
iret
add
cs
outsl
add
xor
je
jns
mov
adc
mov
dec
adcl
push
or
xchg
inc
std
clc
sub
pop
fdivs
xor
jg
std
or
add
cld
add
enter
js
cmp
divb
add
push
sub
rcl
stos
cs
in
adc
add
and
jo
mov
mov
add
ss
inc
cmp
sub
mov
sbb
ljmp
loope
cmp
or
mov
sbb
inc
aam
loopne
je
fstpl
jecxz
adc
mov
cld
shlb
cmp
mov
sub
out
inc
or
push
pop
jno
add
mov
inc
pop
mov
dec
test
mov
jmp
add
out
scas
jbe
pop
add
add
cwtl
add
push
mov
add
inc
adc
loope
scas
jno
mov
adc
cmp
ljmp
popa
aas
adc
shll
mov
and
adc
lods
add
pop
out
fldcw
inc
dec
mov
std
add
incb
bound
mov
or
cmpsl
fadds
aad
inc
pushf
mov
mov
out
data16
leave
in
jno
cmp
iret
imul
add
mov
dec
int
push
sub
xlat
mov
or
add
subl
out
mov
mov
fisttps
pop
in
ss
movsl
jg
mov
adc
or
cli
and
mov
outsb
enter
data16
arpl
xor
adc
add
lock
jae
sub
int3
add
jb
add
or
add
and
cli
mov
pusha
cs
scas
xor
push
lcall
int
sarb
pop
pop
je
fsubrl
and
push
adc
js
mov
adc
rolb
add
es
iret
jbe
or
loopne
jmp
push
add
dec
xchg
scas
sbb
inc
ret
movsb
adc
lods
stc
pop
cmp
or
push
outsl
mov
testl
lods
outsl
repz
add
adc
inc
faddl
bound
adc
cmp
adc
imul
pop
add
lea
fstpl
sub
pusha
sub
cmpsl
incb
es
and
and
lock
in
add
dec
das
shl
add
sbb
test
loopne
lods
add
mov
scas
push
int3
add
mov
mov
cmp
mov
push
xor
adc
adc
add
mov
inc
movb
es
xchg
or
xor
xchg
xor
push
out
repnz
daa
lret
sets
xor
jae
outsb
sbb
sbb
mov
sub
cmc
xchg
push
pusha
shlb
xchg
mov
add
movsl
sbb
inc
pusha
sarl
push
pop
roll
mov
push
add
or
out
and
adc
int
lds
lods
xor
cmp
adc
andl
cmpb
and
test
jecxz
fsubr
fiadds
les
adc
rol
sti
es
outsl
add
sub
add
add
test
add
sub
ror
mov
adc
xchg
ret
enter
adc
testl
hlt
jne
push
add
lcall
fidivrl
sub
dec
sahf
add
xchg
mov
inc
pop
add
sbb
cs
push
sbb
xorb
dec
lret
cmp
adc
out
popa
add
adc
sub
in
add
xor
cmpsl
pop
add
xor
das
adc
clc
add
add
test
mov
xchg
add
jnp
enter
mov
mov
add
add
nop
mov
jae
imul
or
jae
xor
nop
sub
sub
ja
add
add
mov
and
stc
outsb
add
sub
cmp
fwait
pop
popa
aad
rcll
or
add
xchg
gs
mov
loope
dec
test
sbb
and
mov
jns
daa
xchg
push
or
imull
sub
xor
xchg
or
sbb
shr
das
mov
out
mov
xchg
push
add
in
aad
xchg
jno
nop
mov
cwtl
pop
or
jg
sbb
aaa
scas
mov
sbb
jg
pop
test
xchg
mov
inc
or
out
and
add
adc
ficoms
add
xor
stc
mov
les
add
sub
and
mov
or
lods
push
add
mov
lods
dec
push
fwait
in
add
and
mov
popa
repz
ds
adc
mov
pusha
out
adc
jl
inc
sti
mov
mov
cltd
cmp
stos
in
xor
cmpsb
popf
add
sti
adc
add
adc
and
pop
flds
add
andl
dec
cmpsb
fcmovnb
add
arpl
cwtl
jno
insb
repnz
add
enter
or
mov
inc
and
iret
pop
and
jl
pop
lods
into
xor
mov
or
inc
rcl
rcr
add
dec
test
into
popa
pop
adc
lods
ficoms
jns
inc
mov
jns
cmp
inc
pop
mov
sti
roll
filds
cwtl
add
test
sbbb
mov
nop
add
xor
stos
xor
jmp
lods
sub
movsb
loopne
ljmp
or
xlat
dec
pushl
add
or
xlat
mov
mov
add
shr
adc
cmpl
pop
add
lea
add
cwtl
or
pop
dec
int3
add
mov
push
outsl
add
fisubs
out
and
and
fcomps
pop
add
xor
add
adc
or
xor
jb,pn
or
mov
mov
adc
stc
push
and
adc
push
in
outsb
or
mov
outsl
call
push
daa
mov
mov
mov
cmp
mov
and
scas
push
add
fucomip
daa
pop
js
out
cwtl
sbb
stos
lahf
data16
add
std
and
dec
push
les
cmp
lods
add
addr16
cmp
sub
ror
inc
mov
add
mov
add
lock
add
xlat
repz
mov
xor
inc
mov
fstpl
sarb
jg
cwtl
add
sbb
mov
daa
dec
dec
push
add
jmp
cmp
add
xchg
adc
sbb
adc
sub
mov
add
cwtl
adcl
mov
jle
fidivl
lcall
scas
jnp
add
dec
fisttps
pop
dec
and
inc
add
adc
sub
inc
mov
test
mov
inc
adc
and
push
lds
mov
ja
jnp
mov
sarb
insb
inc
xor
mov
and
and
adc
xor
add
add
jg
add
testl
sbb
add
and
adc
data16
cs
test
or
mov
push
add
icebp
loopne
pop
int
add
cmp
add
je
sarb
je
xchg
sub
pop
js
inc
out
and
ss
mov
mov
push
add
inc
and
pop
mov
dec
out
daa
inc
jne
add
lret
rcrl
sub
cwtl
mov
cwtl
add
inc
push
mov
sbb
add
ficoml
or
and
pop
lahf
xor
push
or
dec
fiaddl
or
add
rcll
add
adc
out
fwait
mov
data16
clc
lahf
or
sub
add
pop
sbb
add
adc
test
mov
sub
and
cwtl
add
test
mov
in
xchg
push
fwait
addb
add
and
add
scas
jo
or
js
stc
or
cwtl
push
std
ja
add
or
pusha
aas
bound
lcall
adc
lods
add
sbb
mov
push
and
cmp
inc
pusha
mov
push
scas
add
mov
mov
add
push
repz
mov
popa
aam
in
dec
int3
mov
adc
adc
jmp
mov
pop
xor
roll
fsubs
add
in
xor
pop
add
xchg
mov
push
xchg
fildl
mov
add
int3
std
sub
xchg
or
pop
jl
ret
repz
aaa
jb
sarb
out
int
in
adc
mov
add
xchg
roll
cmp
jne
mov
mov
add
and
add
aas
imul
dec
cwtl
pop
mov
test
dec
xor
lods
in
sbb
mov
orb
add
insb
sub
jl
pop
mov
testb
jle
xchg
adc
sub
add
mov
pop
pusha
xchg
ss
xor
adc
es
mov
add
stos
cs
xor
push
or
test
ret
push
mov
cwtl
add
test
xchg
pop
adc
cltd
loope
and
add
push
and
mov
add
add
add
adc
xlat
stc
cltd
in
cmpsl
mov
icebp
cmpsb
and
pop
adc
lods
sbb
ret
mov
adc
lods
or
lret
or
pop
pop
cmp
xorb
mov
pop
add
addr16
add
cmpsl
adc
out
xor
mov
inc
cld
shrb
add
pop
xchg
mov
fdivrl
fwait
adc
mov
je
xchg
or
xlat
in
mov
lods
and
add
cmp
mov
in
xchg
and
nop
dec
lret
enter
cs
or
cwtl
xor
add
inc
jge
sub
ds
das
push
mov
bound
add
add
inc
mov
add
dec
push
and
pop
mov
mov
sbb
push
mov
or
pusha
fcmovbe
pop
add
cwtl
je
mov
je
add
mov
inc
dec
popf
sub
mov
and
sahf
leave
dec
push
out
xchg
push
pop
sbb
xchg
sub
add
inc
inc
into
mov
jg
add
pop
mov
mov
mov
sbb
inc
sahf
and
daa
jnp
mov
sbb
cmp
sarb
dec
xchg
jno
add
inc
dec
jle
out
lods
jne
add
pop
std
adc
out
and
cmp
lcall
enter
add
mov
xchg
push
dec
stc
mov
icebp
inc
gs
cmp
add
imul
jle
les
xor
xchg
and
dec
mov
add
orb
add
outsb
xor
and
add
mov
inc
add
mov
scas
add
sbb
movb
lock
cmpsb
enter
movsb
pop
push
imul
std
add
add
lea
mov
add
or
jmp
loopne
push
sub
add
or
lock
ret
sti
add
xor
decb
test
mov
in
mov
mulb
xor
sbb
jp
add
out
es
stc
add
pop
lods
mov
xchg
fdiv
add
je
rcll
and
repz
mov
push
adc
sub
add
jle
cmp
fwait
mov
or
cmp
mov
aad
ds
add
push
mov
add
sbb
pop
dec
add
test
or
pop
cwtl
add
inc
test
mov
and
test
lods
or
add
test
aaa
test
shlb
pop
pop
das
add
stos
dec
push
dec
jg
add
or
test
or
add
adcl
sub
xor
daa
out
jo
push
add
pop
sub
sbb
data16
pop
or
add
inc
cmp
lods
add
add
rorb
imul
fcomps
adc
rclb
test
or
mov
sbb
inc
push
mov
sub
or
mov
mov
and
or
pusha
ja
jo
inc
cmpsb
loopne
pop
inc
sub
adc
stc
in
mov
add
lahf
cs
cli
bound
lret
or
lret
cmpsb
aad
imul
push
or
mov
dec
add
les
pop
scas
lahf
dec
rcll
mov
pop
fstpt
cmp
mov
push
add
cli
out
outsb
pop
popa
call
add
xor
inc
and
std
xor
nop
mov
or
lods
adc
xchg
cmpsb
xor
ret
and
dec
in
fiadds
shl
pop
inc
addb
out
xchg
pop
faddl
jg
mov
jecxz
das
mov
cmp
pop
add
dec
and
jge
dec
add
add
test
mov
cli
xchg
daa
sub
jle
les
daa
adc
fs
pop
daa
or
push
add
lcall
hlt
push
in
add
mov
mov
jb
shl
in
xchg
cmc
ret
test
lcall
jg
test
roll
lret
mov
pop
mov
je
jge
sub
out
add
aaa
popf
daa
mov
push
loop
add
mov
das
mov
lahf
inc
roll
inc
mov
push
fiadds
cmp
and
push
pop
pop
sbb
xchg
mov
shlb
lods
js
xor
cmp
cmp
stos
add
fsts
jbe
dec
imul
and
xchg
and
pop
mov
add
xchg
add
add
mov
pop
mov
mov
jae
aad
push
add
push
cmpsl
mov
inc
decb
and
adc
or
pop
adc
add
add
pushf
lcall
jne
mov
or
mov
cmp
push
cmpsl
cld
add
pop
lret
push
mov
add
repz
jecxz
adc
xchg
adc
pop
jns
or
push
aas
out
adc
lods
adc
cmpl
adcl
enter
add
rclb
sub
xor
cltd
and
stc
or
mov
push
and
test
pop
ja
orl
mov
sbb
xorb
and
pop
adc
add
cwtl
mov
cmp
xor
dec
mov
aaa
rorl
iret
sbb
sub
mov
push
pop
sub
bound
jo
jl
rcrb
inc
pop
mov
adc
push
adc
mov
mov
mov
push
mov
and
and
and
add
mov
stos
dec
push
test
lret
add
imul
daa
mov
push
push
sahf
test
add
mov
jmp
add
aaa
or
mov
or
lret
sbb
adc
ret
sti
rclb
fimull
pop
cmp
jns
xchg
into
inc
roll
jge
cmp
jmp
sbb
xchg
fucomip
movsb
add
mov
add
rcll
ret
div
sub
pop
inc
add
and
jo
pusha
sub
adc
clc
loope
push
icebp
mov
inc
popf
in
add
and
roll
mov
add
mov
lret
inc
xchg
nop
jbe
test
mov
adc
in
add
cmp
stos
lods
insl
push
cmp
jg
jo
dec
mov
cwtl
add
cmpsl
mov
aad
pop
xchg
add
adc
mov
outsb
ret
push
mov
add
push
repz
outsb
es
data16
ds
andl
mov
sub
add
or
and
pop
xchg
pop
push
mov
adc
adc
xchg
sahf
mov
aaa
xchg
enter
add
jp
jbe
or
movsb
pushf
hlt
sub
inc
sbb
pop
cli
bound
xchg
in
sub
inc
stc
mov
lahf
pop
add
push
push
cmp
fldl
imul
pop
fmuls
mov
cs
dec
or
int3
add
adc
add
push
add
and
out
or
loop
inc
mov
adc
or
mov
add
add
ret
sub
in
add
xchg
inc
pusha
cmp
stc
sub
pop
les
xlat
test
sarb
add
sub
mov
inc
xchg
mov
add
push
sbb
add
adc
or
ds
out
and
in
and
cmpsb
pop
sub
pop
pop
repz
arpl
or
test
loopne
sbb
dec
mov
or
mov
jg
popa
mov
jne
xor
popa
mov
dec
cmpsl
or
xor
add
add
jle
ss
fisubs
add
out
insl
and
stos
pop
xchg
dec
add
les
and
out
mov
lret
mov
cwtl
add
test
imul
or
add
ds
jnp
mov
sbbl
nop
js
fldenv
dec
mov
and
xchg
adc
cwtl
add
in
adc
push
imul
test
add
and
jo
and
cmp
rclb
fldt
fidivrs
push
ja
jmp
jno
mov
pushf
mov
adc
add
fwait
inc
adcl
push
jns
bts
cmpsb
fsts
add
adc
mov
jnp
shrb
and
pop
pushf
jo
mov
icebp
add
cmp
testb
adc
and
mov
or
sbb
dec
test
add
mov
jno
imul
pop
rcr
xchg
pushf
test
cltd
cwtl
add
scas
rorb
pop
out
loop
add
pop
sbb
pop
jmp
std
jnp
add
testl
lods
dec
xchg
mov
adc
xlat
adc
add
lock
notb
imul
int
add
jbe
adc
loop
xchg
pop
and
add
mov
and
pop
xchg
or
inc
mov
and
and
add
push
pop
lds
mov
mov
mov
cmp
arpl
adc
jle
shufps
cmpsl
sbb
mov
mov
stos
pop
dec
mov
jp
add
int
mov
insb
fmull
inc
hlt
movsb
sbb
add
jno
inc
mov
cld
faddl
and
xor
or
add
pop
mov
into
ret
xchg
add
inc
imul
dec
sub
add
ss
xor
lods
xor
int3
sbb
ds
fisubrs
data16
mov
and
fstpl
and
adcl
sti
cmpsl
add
data16
stos
xor
mov
inc
add
mov
push
pop
jns
mov
inc
inc
sub
jecxz
sbb
nop
mov
pop
add
mov
out
add
inc
and
daa
push
cwtl
pop
and
testb
cmp
and
adc
push
mov
push
stc
fiadds
iret
cwtl
sbbb
rcrb
dec
mov
clc
add
pushf
pushf
cmp
lahf
insb
add
and
pop
push
mov
inc
mov
mov
das
sub
pop
add
aas
jp
or
pop
add
cmp
dec
mov
rclb
push
mov
icebp
and
in
roll
leave
lock
dec
inc
mov
in
or
push
dec
push
jg
add
and
push
add
xor
negl
lea
mov
mov
mov
int
adc
imul
adc
add
je
sub
add
xor
fstps
fsubs
mov
pop
or
js
cmc
insb
add
and
repz
ss
mov
test
cmpsb
loopne
shrl
xor
add
in
add
inc
inc
mov
add
imul
jne
add
cmp
mov
les
aaa
xlat
push
pop
sbb
mov
xor
fildll
xchg
cmp
iret
lcall
movsb
sahf
loop
push
mov
sub
add
push
sub
jge
mov
scas
pop
push
xchg
mov
jbe
and
ja
push
jno
das
adc
les
pop
xlat
cmp
adc
mov
cmpsb
in
iret
fnstsw
test
adc
mov
js
mov
aas
dec
add
je
push
cwtl
add
jle
ja
jp
mov
lock
add
cmc
faddl
in
pop
and
je
push
aas
les
mov
xchg
xorl
iret
xchg
in
push
lods
aaa
or
mov
in
add
int3
pushf
jo
mov
pop
add
int
pushf
lods
mov
filds
call
add
pop
js
jp
ja
add
mov
ret
and
mov
mov
movsb
sub
lock
jecxz
xor
negl
loopne
cmp
aas
adc
sbbb
testb
divl
adc
bound
xchg
adc
xchg
xlat
sub
mov
xor
lahf
shrb
add
lret
fmuls
pop
pop
sub
mov
and
cmpsb
aam
aas
push
jmp
adc
stc
add
xorb
push
add
lret
add
sbb
push
sbb
add
add
xor
or
in
aas
add
push
add
loop
fsubs
fnstcw
mov
mov
cld
add
testb
lahf
dec
xchg
imul
xchg
movsb
push
cmc
sahf
xor
std
add
fbstp
add
xorl
lret
mov
add
mov
pop
inc
test
call
je
inc
and
mov
add
js
xchg
sbb
les
and
push
cld
lods
jb
je
add
push
jnp
add
test
cld
adc
fisubrs
lods
add
adc
mov
mov
imul
pop
sub
push
cld
push
add
lret
mov
ret
sbb
ret
and
cmp
addb
sub
jnp
push
push
xor
push
push
fcmovnu
or
pop
std
mov
nop
or
add
or
pop
pop
push
pushf
cmp
test
or
mov
add
jns
hlt
add
divb
iret
out
and
add
push
sbbb
outsb
jne
add
rol
xlat
cmp
data16
out
add
and
iret
mov
mov
add
jmp
aaa
push
add
out
and
cmp
add
lcall
scas
and
or
mov
cmp
popf
xor
mov
xchg
add
mov
shlb
dec
fiaddl
xchg
or
add
push
hlt
push
ja
jmp
imul
andb
lock
dec
inc
add
orl
imul
aam
test
push
jmp
add
mov
sti
insl
add
aaa
add
sub
fiaddl
xchg
inc
std
add
mov
mov
add
mov
xor
jo
adc
fwait
add
pop
or
xchg
loope
movsb
sub
jae
stos
mov
ret
add
push
add
sub
xor
jnp
add
mov
dec
ja
fwait
nop
out
popf
insb
add
sbb
jg
mov
cmp
pop
or
jecxz
add
out
jb
rorb
les
xor
loopne
cwtl
test
inc
jmp
cmpsb
pmulhuw
pusha
sub
lcall
add
daa
or
lea
aad
jo
add
dec
pop
mov
push
movb
fidivrl
xlat
out
imul
lds
jne
bound
sub
pop
std
xchg
mov
popa
mov
mov
lds
adc
or
xor
mov
cmp
pop
add
pop
popf
xchg
hlt
mov
mov
cmpsl
pop
lcall
sub
add
xor
cmp
inc
scas
out
mov
adc
les
inc
cmp
lods
out
in
pop
scas
cmp
xchg
mov
aad
fwait
and
mov
popa
jl,pt
adc
ret
sbb
push
add
mov
ja
add
cltd
add
out
stos
add
imul
call
dec
add
dec
mov
movsl
add
jl
push
or
xorb
mov
loope
adc
dec
call
mov
and
add
cli
js
mov
adc
add
popf
test
je
mov
pop
jbe
add
ret
add
std
cmpsb
sbb
int3
push
ds
xlat
iret
loop
mov
pop
add
sbb
cmpsl
rol
cltd
pop
add
in
jp
add
test
jecxz
pop
addb
add
sub
sub
les
lahf
addb
sub
ret
sbb
addb
sub
test
add
mov
mov
xchg
out
add
lret
mov
ficomps
add
xchg
movlps
push
add
shlb
das
adc
roll
mov
mov
sub
push
cmp
adcb
rorl
sub
xor
add
mov
pop
test
leave
jbe
out
pop
rol
arpl
in
add
insb
push
fldl
nop
inc
xorl
test
std
add
daa
scas
jl
test
dec
scas
add
cli
jo
rorl
mov
add
loopne
lods
gs
in
pusha
int
stc
pushf
sti
add
int3
jo
add
and
mov
dec
je
mov
mov
and
outsl
out
cmp
jae,pt
imul
inc
sub
scas
xor
xor
shll
xor
sar
add
push
loopne
call
inc
adc
sub
lcall
add
in
stos
pop
movsb
xlat
mov
mov
adcb
xchg
jmp
fwait
scas
mov
movl
insl
mov
jg
add
add
xor
add
mov
jmp
sbb
pop
addr16
push
sbb
add
loopne
cwtl
mov
and
scas
xor
lea
enter
xchg
popa
loopne
sahf
xor
adc
push
mov
sub
add
dec
lock
and
mov
adc
addb
jo
lcall
add
or
fists
adc
jbe
fs
mov
insb
xchg
lock
add
mov
inc
subl
xchg
sbb
icebp
add
add
and
mov
out
or
cli
push
mov
cmpsl
mov
mov
jnp
mov
scas
jge
add
jae
sbb
fsubrl
sti
imul
mov
int3
push
xchg
push
push
clc
testb
outsl
into
mov
dec
lds
mov
sub
add
push
xchg
nop
aad
outsb
insl
add
dec
notl
add
and
repz
sbb
rol
pop
sub
mov
xor
xor
add
dec
mov
dec
inc
enter
push
addb
clc
add
fwait
into
inc
mov
mov
add
les
rcll
sar
add
call
lahf
push
xchg
lcall
mov
and
std
out
ror
sbb
add
push
xor
add
push
test
jle
icebp
add
sub
sbb
mov
lret
add
pop
and
cmc
lea
mov
push
clc
lret
iret
xor
repnz
addr16
jle
add
int3
and
push
xchg
cld
fwait
sbb
pop
int
cmpsb
add
pop
mov
inc
lock
xchg
in
sbb
lods
sub
add
adc
add
cmp
jle
xor
pop
mov
xchg
mov
leave
jge
dec
hlt
sub
fyl2x
rol
popf
repz
test
push
loopne
and
xlat
jae
subl
sub
pusha
repnz
repz
int
jmp
add
in
aam
sub
add
sti
push
ja
cs
inc
push
push
add
xchg
mov
inc
mov
inc
push
into
out
sub
add
inc
pop
mov
aad
adc
add
daa
xchg
jb
pop
pusha
add
arpl
xchg
cmove
movsb
adc
in
mov
inc
ds
sarb
std
rorb
faddl
cmp
push
pop
pop
sub
add
aam
cmpsb
add
and
push
testb
push
frstor
addl
or
adc
pop
pop
fs
test
cmp
mov
pop
insl
mov
add
sbb
mov
add
inc
mov
and
imul
add
cmp
pushf
idivl
xorl
fsts
roll
add
hlt
imul
jl
add
cmpsl
jo
add
lea
dec
js
fs
out
xor
mov
xchg
add
push
lret
jmp
add
movsl
dec
inc
stos
fcmovnu
push
adc
sub
int3
in
inc
xor
adc
add
orb
lods
fstpt
aad
fisubrs
and
xchg
push
loope
nop
ds
mov
mov
sbb
ja
and
arpl
jo
repnz
add
sub
int3
fxch
add
xor
fsubrs
inc
add
mov
ja
cltd
push
fadd
jbe
in
psrlq
mov
jns
test
mov
outsl
popa
fisttps
lods
add
mov
and
inc
repnz
add
jmp
xor
es
dec
inc
jae,pt
fidivrl
daa
cwtl
clc
xchg
jg
sbb
repz
jp
data16
adc
add
xor
pop
and
inc
cld
add
in
pop
jne
add
test
or
lods
ja
out
jmp
xlat
mov
sbb
push
js
add
push
jo
pusha
add
xor
fnstsw
popf
icebp
add
in
shl
add
lcall
xchg
mov
pop
push
push
mov
jae
sti
fadds
lret
test
pop
test
add
stos
or
dec
shl
jle
add
and
push
add
ja
add
sbb
cmpsl
or
stc
pushf
pop
dec
lods
stos
aas
push
shl
lods
insb
add
shrb
sbb
inc
cwtl
dec
dec
or
inc
jmp
hlt
add
cmp
shll
jne
clc
adc
test
inc
mov
in
orb
jnp
mov
jns
or
mov
xor
andl
jp
data16
mov
out
pop
dec
cmp
cmovno
adc
xor
repnz
jo
fidivrs
add
shrl
add
mov
aas
mov
adc
cwtl
add
add
mov
xchg
adcl
inc
imul
js
jae
lods
add
lods
inc
fsqrt
sub
sub
repnz
ja
mov
add
insb
dec
mov
add
inc
dec
mov
lds
hlt
jp
nop
jecxz
pushf
add
push
scas
lret
das
mov
add
xchg
fadds
mov
gs
lret
mov
push
xor
dec
lock
jp
lds
cmc
or
mov
clc
popf
add
pop
fadds
push
jne
xorb
cmp
inc
cmpsl
add
mov
add
push
mov
xchg
aam
add
pop
in
add
sbb
mov
aam
icebp
push
inc
test
mov
lods
sub
jp
or
cmp
pop
test
cwtl
xchg
mov
add
or
or
aam
sub
cmp
out
add
in
xor
or
add
insb
and
mov
mov
sbb
and
inc
bts
cmova
bound
jmp
cmp
push
or
add
jl
jnp
jle
xchg
dec
out
cmpsb
dec
pop
or
push
add
leave
cli
push
add
push
clc
movsl
roll
dec
inc
sub
lods
xor
add
push
sub
pop
jno
addr16
cmp
or
shlb
int
add
pop
lret
aaa
mov
add
adc
enter
add
cmpb
scas
adc
cmp
arpl
add
pop
repz
add
jg
inc
adc
add
mov
test
and
sti
jp
pop
shrb
movsb
sbb
aaa
mov
push
popf
lea
push
lcall
adc
add
loope
mov
mov
mov
sbb
xchg
fisttpll
add
in
in
jge
mov
push
ja
pop
mov
mov
std
mov
fnstenv
pushf
add
inc
push
loope
adcb
jno
add
xor
popl
jo
mov
add
aas
add
inc
out
lods
push
clc
xchg
mov
pop
mov
push
mov
popf
jbe
add
scas
fcomps
sub
xor
int3
les
add
cwtl
insb
dec
jne
hlt
pusha
sub
add
in
sti
add
cmpsb
inc
xchg
rclb
out
dec
jnp
das
insb
add
cmp
mov
lods
add
pop
inc
sub
or
add
adc
sbb
or
ss
add
pusha
and
outsl
nop
add
mov
or
sahf
sub
sub
jecxz
lods
sub
mov
add
xor
sub
pop
lea
loop
xor
sub
cmpb
sti
xor
push
test
aas
cs
mov
add
arpl
xchg
inc
add
aas
adc
add
add
fldenv
add
rclb
and
cmp
jecxz
sti
xchg
movb
insl
mov
mov
lea
jge
pop
xchg
dec
int3
sub
mov
testb
outsl
fimull
in
aaa
add
xchg
pop
add
adc
xchg
xchg
mul
dec
sub
add
mov
test
add
ret
outsl
fbld
lock
dec
test
sar
push
mov
fnsave
add
xor
cli
or
add
push
lahf
pop
jne
push
mov
cmp
sbb
pushf
add
inc
imul
cmp
push
rol
movsb
add
popf
iret
and
cmp
jecxz
dec
lahf
pop
add
push
add
adc
fistpll
xorl
jbe
fwait
daa
dec
gs
popf
je
add
mov
lods
xlat
sub
and
mov
cmc
out
mov
add
jle
xchg
mov
add
pop
or
inc
jno
adc
sub
lea
sti
int3
add
leave
jnp
add
ljmp
stos
push
sub
lods
inc
pop
cmpsb
imul
add
adc
add
in
repnz
aad
div
add
ret
add
add
mov
mov
add
xchg
add
scas
xchg
or
mov
jp
pop
push
xlat
popa
jle
push
sbb
test
les
add
mov
sbb
and
mov
das
xchg
mov
and
adc
cwtl
xor
int3
sub
aad
jbe
mov
fsubs
pop
out
mov
pop
push
int3
add
je
jecxz
addr16
das
mov
jns
cmp
xchg
in
xchg
dec
ljmp
add
call
lods
xchg
sbb
add
jo
sub
ds
out
mov
add
or
in
add
mov
cld
sti
fildl
loopw
inc
in
iret
mov
add
aas
andb
test
add
in
mov
sub
sub
test
cmp
ret
sub
fidivl
mov
add
or
xchg
dec
add
add
stos
in
arpl
mov
push
xor
push
bound
int3
add
cmp
and
add
adc
add
jg
cltd
add
push
pop
lcall
cmp
clc
das
pop
mov
adc
push
xorb
dec
stos
fwait
add
jge
in
jp,pn
sti
pop
shll
mov
jb
loop
add
add
arpl
mov
jno
jmp
add
and
or
add
bound
dec
es
enter
dec
adc
add
add
mov
lea
sbb
sbb
sub
stos
add
cmp
xor
adc
xlat
inc
xchg
adc
cmp
adc
add
jge
xchg
addr16
mov
add
clc
mov
mov
push
jne
jmp
movb
pop
add
stos
push
cmpb
sbb
xchg
and
fidivl
adc
jno
xchg
das
xorb
or
inc
jp
aaa
stos
add
lds
loope
add
hlt
add
inc
imul
rcl
iret
popf
scas
lret
cmp
cld
sbb
sahf
push
inc
mov
mov
outsb
add
mov
cwtl
push
adc
cmp
pushf
std
lea
jnp
mov
pop
xchg
scas
roll
dec
cmp
add
sub
pop
add
enter
jae
add
push
jle
addr16
cmp
mov
dec
in
add
outsl
add
pushf
xlat
cltd
sahf
insb
mov
inc
int
dec
cmpl
sub
test
flds
mov
xchg
cmpsl
es
in
and
stos
pop
enter
and
dec
jecxz
into
dec
and
rorb
sbb
pop
orb
clc
add
std
cmp
mov
les
ja
xchg
leave
nop
add
aam
int3
cmp
out
cmc
fmul
xor
addb
sbb
dec
mov
cld
cltd
in
sarl
shl
mov
xchg
jno
mov
jl
arpl
xlat
pusha
fdivs
adc
btc
nop
xchg
push
xor
bound
adc
or
loop
rolb
fwait
mov
mov
orb
dec
mov
fldl
mov
pushf
push
xchg
or
in
add
arpl
fs
push
add
push
call
into
jnp
add
cld
dec
and
pushf
add
add
aad
add
adc
adc
and
mov
sbb
add
adc
cmc
jmp
or
nop
cwtl
adc
xchg
and
std
adc
outsb
add
lods
push
sub
adc
pop
xchg
sti
repz
xor
adc
add
add
cmp
enter
cmp
out
xor
scas
jg
inc
mov
sar
add
js
push
add
out
mov
sbb
mov
mov
mov
dec
or
xchg
xor
enter
ljmp
xor
mov
faddl
adc
repz
cli
ss
sti
adc
scas
icebp
das
mov
add
or
mov
add
scas
inc
inc
shrl
int3
inc
loope
shrl
je
inc
sub
xchg
or
ret
mov
adc
mov
enter
cltd
lahf
push
add
sbb
in
sub
mov
sub
xchg
enter
iret
add
add
bound
inc
pusha
arpl
mov
stos
movsb
or
and
scas
in
jb
sub
sub
outsb
dec
leave
int
cwtl
add
stos
fsubrl
xor
scas
inc
and
push
fsubs
adc
cwtl
lods
loopne
testb
push
das
adc
adc
add
stc
in
dec
add
fst
cmp
inc
cmpsb
iret
xchg
push
jp
out
fistps
adc
push
dec
mov
cmpb
push
inc
or
push
and
test
rclb
xor
test
nop
jp
xor
mov
adc
lds
dec
out
sti
aaa
add
sbb
add
adc
in
adc
cmp
jbe
stos
add
add
inc
xchg
subb
scas
jae
sub
or
mov
lds
mov
je
loopne
add
into
jp
movb
aam
fistl
or
outsl
push
or
in
test
mov
sub
insb
add
aad
int3
xor
or
push
add
inc
add
mov
and
sub
pop
ja
push
addl
mov
push
bound
xchg
adc
out
sbb
jb
cmovae
xchg
pop
pop
push
sub
xorb
add
sahf
add
mov
jecxz
mov
sbb
xchg
test
sbb
or
aaa
mov
mov
add
dec
decb
or
jns
lods
pop
lds
nop
xchg
mov
add
addl
jae
lods
ja
les
lret
jg
push
movsl
push
push
add
daa
dec
fists
lods
push
jno
xchg
add
mov
mov
jne
inc
jno
add
pop
subb
add
loop
mov
into
inc
out
cwtl
mov
xor
lret
mov
add
aam
inc
dec
or
nop
cwtl
movsl
add
push
xchg
add
cltd
mov
mov
sbb
add
cmpsl
dec
jo
loope
leave
sub
in
lods
xor
pushf
push
dec
cld
ljmp
push
mov
xor
cmpsl
insl
add
popf
sbb
sbb
xor
andb
adc
dec
mov
add
jb
hlt
add
enter
mov
sbb
ja
push
aad
pop
dec
sub
add
xchg
and
add
sub
jl
add
push
iret
rolb
or
jne
add
clc
sbb
add
movsl
jmp
pop
scas
loopne
out
pop
fdivs
add
lcall
and
adc
inc
cmp
fs
pop
xchg
push
inc
add
xor
ss
vcvtsd2si
sub
add
sti
and
or
test
jge
mov
or
dec
push
and
add
cmp
push
cmp
mov
sub
scas
lret
test
inc
add
adc
loop
and
adc
add
and
jno
inc
jbe
pop
inc
bound
ret
adc
les
sbb
push
jl
or
loopne
adc
pop
sbb
mov
testl
lods
popf
jecxz
pushf
add
inc
push
call
xlat
mov
mov
add
or
add
ljmp
mov
add
mov
add
pop
sbb
xchg
pop
adc
stc
mov
xlat
inc
add
sub
add
das
inc
push
mov
add
ljmp
or
jns
add
and
or
cltd
or
mov
mov
add
jb
pop
mov
enter
mov
pusha
mov
daa
pop
fdiv
add
pop
test
add
out
nop
inc
shll
xor
jb
push
fidivrl
jno
ds
pop
add
push
xchg
jp
in
mov
ljmp
repnz
and
lahf
addb
ljmp
add
stc
or
mov
mov
pop
stos
dec
dec
cmc
xchg
add
daa
and
xchg
das
jmp
xchg
jl
mov
push
fsub
mov
inc
cmp
xchg
dec
ljmp
data16
push
add
add
adc
imul
inc
call
ss
add
mov
mov
daa
pushf
and
mov
jp
roll
sbb
mov
shll
mov
inc
pop
pop
inc
add
clc
outsl
mov
jne
imul
xchg
leave
lret
pushl
xchg
mov
or
adc
je
add
sbb
loopne
add
fiadds
mov
inc
test
dec
jmp
aas
xchg
std
add
inc
mov
mov
fistpl
xlat
test
mov
xchg
mov
and
push
adc
mov
int3
add
aaa
pusha
and
iret
jb
adc
add
daa
pop
xchg
xor
xchg
aaa
loopne
add
add
orb
add
xchg
inc
gs
push
test
push
dec
push
dec
leave
sbbl
sbb
adc
aas
mov
das
push
xlat
popf
imul
cmp
sbb
xchg
sub
inc
out
add
dec
cmp
push
pop
ds
add
pusha
adc
sbbb
cmp
adc
dec
ss
in
mov
lods
xchg
dec
testb
lret
aaa
add
mov
pop
mov
aas
repnz
mov
sti
xor
mov
je
rolb
cmp
sub
dec
pop
les
arpl
add
sub
lcall
iret
pop
clc
loop
push
loope
inc
loop
fiaddl
out
add
cmp
fst
add
rorl
rcrl
inc
scas
les
push
jmp
push
gs
es
adc
adc
push
sbb
pop
and
mov
add
jnp
dec
add
ja
pushf
add
jmp
xchg
iret
mov
lcall
sub
cmp
aad
push
test
je
popa
pop
shll
add
sbb
mov
in
jmp
push
xchg
xchg
xorb
cmpb
sbb
das
push
jns
dec
rclb
jbe
fs
adc
rcrb
in
push
out
dec
xchg
repz
mov
add
xchg
sbb
xor
add
stos
sti
add
and
mov
mov
adc
fstl
paddd
xchg
std
inc
sbb
pop
xor
add
add
jecxz
pop
scas
jnp
sahf
or
and
sub
data16
add
idivl
ret
add
insl
adc
dec
out
push
mov
int3
loopne
adc
mov
int3
add
mov
add
movsb
divb
sub
iret
xchg
les
loopne
and
mov
xlat
adc
test
cmp
hlt
add
xchg
inc
pushf
sbb
xor
add
mov
mov
dec
mov
es
mov
cs
xor
test
pop
add
test
in
ds
add
movsb
sbb
add
cmpsl
repnz
sbbb
aad
icebp
add
xchg
std
sahf
pop
out
imul
jmp
jmp
pop
inc
test
inc
push
jne
repz
add
stos
jecxz
adc
loopne
jae
and
push
mov
cmp
mov
add
mov
add
jno
pop
xor
outsb
insb
add
pop
ja
ds
cmp
pushf
mov
or
stos
iret
and
add
push
fwait
unpckhps
lock
fwait
add
pop
xor
jb
mov
and
lcall
test
dec
mov
loopne
sbb
mov
leave
xchg
cmp
jne
mov
add
pop
aas
test
mov
call
or
inc
jbe
out
xchg
mov
inc
je
test
add
jae
sarl
dec
pusha
pop
jnp
rol
imul
xor
push
mov
push
imul
cwtl
add
adc
xlat
call
add
adc
and
mov
ljmp
mov
add
add
xchg
and
rolb
push
pop
outsl
mov
lcall
sub
movsl
mov
sub
mov
inc
inc
aaa
ficomps
pusha
lret
fstpl
cwtl
pop
dec
sbb
ja
add
add
sbb
shrb
fistpll
cli
movsl
adc
push
int
inc
test
mov
shll
mov
or
hlt
push
ljmp
xchg
mov
adc
xchg
inc
add
and
adcb
inc
imul
lods
or
push
add
mov
push
adc
pop
add
jbe
push
inc
leave
popf
add
movsl
inc
rorb
add
add
push
stos
lods
adc
pop
in
jns
add
inc
sub
mov
and
add
jbe
adc
add
shrb
xchg
into
loope
icebp
fdivrl
mov
adc
push
xchg
call
ficoms
inc
add
xor
mov
or
add
mov
arpl
aad
jp
add
adc
adc
add
pop
dec
jp
les
cmp
fiaddl
dec
cmpsl
fwait
sub
add
pop
dec
push
add
add
mov
jne
add
sahf
pop
mov
ret
sub
xchg
mov
mov
add
add
iret
add
inc
mov
sbb
es
lret
ljmp
add
inc
cld
ret
ds
or
push
add
and
push
ret
xorb
mov
add
pop
mov
mov
repz
sbb
cs
fiaddl
loopne
add
mov
cmpsb
add
mov
inc
inc
mov
rcll
movsb
repz
and
js
pusha
mov
jl
and
rorl
push
mov
add
jo
outsb
ds
add
mov
fistl
mov
add
ss
or
inc
push
dec
cmp
jbe
lret
add
sub
inc
add
movsb
mov
cmp
add
aaa
add
sub
int
add
lcall
cmp
sahf
add
dec
pop
pop
les
mov
xchg
out
mov
insl
add
jo
pop
or
aaa
add
rcl
jmp
add
test
fcoms
test
dec
loopne
jp
mov
inc
pop
js
lcall
sbb
add
outsl
mov
and
call
in
or
add
int
lret
dec
dec
add
xchg
out
ret
pop
adc
das
ljmp
push
add
mov
lea
inc
add
mov
cmpsl
jge
mov
add
stos
jnp
xlat
sbb
add
shll
mov
es
lea
popf
mov
cltd
xor
push
dec
call
xlat
add
cld
inc
sbb
inc
ja
add
sbb
add
fildl
push
and
inc
test
les
xor
dec
xlat
leave
std
pop
int3
add
and
addb
stc
or
out
jno
daa
outsl
adc
jle
add
mov
fwait
add
add
mov
add
out
jecxz
insl
pop
dec
add
and
fcomps
les
adc
sub
mov
movsb
movsl
add
notl
loope
cltd
mov
and
xchg
loopne
jno
and
fistpl
shlb
sbb
rorl
les
inc
ss
out
mov
adcl
aaa
mov
pop
xorb
loopne
push
std
imul
cvtps2pd
cwtl
or
lcall
mov
dec
sub
jne
mov
dec
es
mov
addr16
sarl
test
inc
mov
xchg
aas
pop
add
in
add
jo
add
dec
insb
outsb
sub
mov
jl
xchg
cmp
repnz
mov
mov
add
loop
cmp
int
je
pop
int
add
sbb
add
jg
sbb
push
add
out
pop
jnp
pop
in
xor
in
adc
and
dec
jle
fadds
std
inc
stc
or
jae
arpl
mov
movsb
test
loopne
inc
pop
add
popa
jbe
shlb
add
jnp
mov
filds
inc
inc
jmp
jecxz
dec
movl
pop
fstpl
in
fadds
xchg
aam
xchg
pop
add
mov
mov
les
bound
and
sti
loop
mov
arpl
cli
test
mov
test
and
repnz
xor
std
popa
jo
mov
mov
das
bound
dec
adc
add
sub
or
adc
mov
stos
pop
and
adc
loop
mov
add
scas
and
xor
add
jle
sbb
dec
xchg
stos
ret
xor
add
repz
arpl
shll
pop
add
jge
add
push
mov
loopne
cmp
push
add
pop
icebp
cltd
scas
push
insl
in
push
and
adc
dec
js
add
sbb
jne
scas
add
push
out
add
xchg
mov
pop
mov
or
add
dec
cmp
nop
pushf
stos
push
scas
mov
aam
sti
std
mov
xchg
jo
or
je
and
add
adc
xchg
pop
add
pop
inc
inc
ljmp
add
inc
shlb
mov
in
cmpsl
js
ret
inc
sbb
add
xchg
pop
xchg
add
mov
ret
jo
and
add
shrb
mov
or
dec
mov
cmp
mov
fwait
jae
test
cs
sub
fiadds
fimuls
jp
incb
call
add
lods
ret
jg
mov
popf
sarb
jl
fs
pop
inc
lret
jg
add
jl
and
ss
jnp
inc
pop
adc
adc
mov
adc
jno
lods
or
jle
loop,pn
mov
cmpsl
iret
or
mov
pop
testl
jge
mov
adc
aad
fcomps
fidivrs
shrb
arpl
add
inc
and
rol
mov
push
jbe
add
jmp
call
xchg
inc
dec
mov
or
fisttps
repz
jb
loopne
out
js
add
call
and
or
cmp
push
add
icebp
or
add
or
lds
add
test
or
mov
aad
inc
add
jmp
add
ja
xlat
adc
jg
loopne
daa
ret
pop
sbb
push
add
sub
loope
add
loopne
or
xchg
les
mov
aas
stos
enter
adc
movsb
fptan
stos
xor
adc
fadds
lahf
add
sbb
lcall
inc
xor
push
add
dec
add
add
popa
ss
jl
cmpl
addr16
adc
push
or
xor
add
test
adc
arpl
mov
cli
scas
xor
pusha
adc
add
or
aad
stos
aam
test
pop
inc
xor
loopne
pop
sbb
add
test
cmpsl
add
or
loopne
dec
popl
loopne
insl
adcl
pop
jo
mov
adc
or
addb
mov
inc
js
sub
pop
jns
loope
movsl
js
test
addb
add
xchg
dec
sbb
lea
mov
cli
add
and
ja
push
pop
add
mov
inc
inc
xchg
add
hlt
daa
test
lgs
inc
add
cld
sbb
daa
adc
xlat
sbb
jle
dec
test
hlt
and
adc
lret
xor
cli
ret
dec
outsb
xlat
sub
insb
daa
jmp
test
adc
jne
dec
stos
dec
shrl
cltd
ds
add
add
inc
push
repnz
fcomp
fwait
dec
add
das
mov
add
jb
and
add
ja
out
and
and
das
pop
ljmp
dec
mov
lock
movsb
mov
pop
cs
cli
push
pop
and
je
jae
lods
pop
add
or
add
stos
imul
add
dec
out
lahf
out
push
cli
shl
test
add
out
xlat
out
inc
mov
sahf
mov
ficoms
dec
xor
xor
mov
xor
or
jnp
movsl
fwait
out
mov
adc
sub
pop
loop
mov
dec
mov
inc
fldt
inc
repz
jecxz
lret
repz
es
fisubrl
add
pushf
mov
es
shrb
push
inc
jno
mov
lods
jb
aas
test
jmp
mov
or
lcall
ret
mov
scas
inc
pop
fisubrs
add
int3
sti
cmpsb
leave
into
xor
mov
fs
pop
mov
testb
mov
fdivs
in
push
add
loopne
cmp
mov
jmp
in
stos
test
xchg
sbb
and
pop
add
push
mov
sub
xor
sub
dec
mov
xchg
inc
jmp
or
mov
cmp
push
and
nop
sahf
popa
pop
mov
sub
arpl
es
std
mov
cmp
xor
enter
pusha
and
insl
mov
popf
jmp
inc
maskmovq
testl
lds
add
dec
mov
pop
test
scas
push
cmpb
dec
add
int3
add
inc
test
dec
mov
jae
fadds
xor
add
jp
xchg
faddl
mov
push
fs
xor
iret
int3
and
push
add
jecxz
and
or
push
jne
add
ds
sub
das
jl
fldl
fistps
iret
sub
pop
sahf
test
mov
push
ljmp
test
call
pop
pop
lds
pop
loopne
dec
je
add
mov
mov
dec
pop
les
sbb
mov
cmp
inc
mov
jne
dec
add
pop
sbb
cli
push
mov
jp
mov
cmp
mov
and
dec
or
cmp
pushl
jns
test
dec
leave
cmc
rolb
jp
hlt
pop
stc
iret
sbb
mov
pop
test
add
add
aaa
and
fsubr
notl
xor
lahf
add
std
xlat
test
testl
cli
ret
fst
add
adc
jnp
nop
mov
cwtl
or
add
inc
push
xchg
add
enter
dec
aad
add
aam
push
cmp
pusha
lods
pop
fwait
lahf
loope
fistps
mov
dec
add
add
pop
adc
outsb
sbb
bound
adc
movsb
mov
ret
lret
and
add
shll
ds
enter
sub
xchg
jbe
test
jmp
dec
xor
mov
adc
scas
push
xor
xchg
cmp
mov
and
cmpsb
dec
pusha
sbb
mov
add
jg
jns
mov
ja
mov
add
aaa
adc
lods
mov
cmpb
fxch
jge
mov
or
lahf
jle
push
sbb
incb
mov
insb
add
jp
pusha
xchg
adc
jb
fiaddl
push
push
lods
int3
add
jl
sti
cmp
push
adc
faddl
fiadds
rcrb
out
jmp
or
lds
mov
jge
cmp
sub
testb
cld
cli
fdivr
inc
push
dec
add
and
pop
shrb
pop
add
push
rolb
movsb
jns
jmp
js
jle
add
jg
scas
dec
jmp
adc
hlt
and
adc
movl
mov
fiadds
cmpsl
adc
jle
rclb
mov
stos
bound
xor
add
jns
rcrb
jmp
mov
sarl
out
push
add
cmp
jnp
pop
fcmovne
sti
test
les
push
push
lods
orb
mov
sar
adc
inc
sbb
negl
mov
aam
int
daa
push
xor
cmpb
add
add
mov
pop
mov
add
mov
and
inc
jno
test
pop
mov
xor
lods
adc
shll
lods
aas
filds
dec
mov
jbe
xor
push
fiaddl
imul
xor
fistpl
lret
pop
add
or
mov
fiadds
cld
add
jl
inc
and
adc
mov
inc
cmp
cld
popf
inc
add
repnz
and
push
add
jl
add
add
into
movsl
adc
shr
nop
je
add
fsubrl
jns
cld
add
and
rolb
not
jne
sub
push
mov
js
ss
adc
fchs
and
test
insb
dec
dec
mov
bound
js
or
orl
repnz
jbe
xchg
out
pusha
adc
js
xchg
add
jecxz
mov
sub
fnstenv
test
sub
add
sub
lock
add
xchg
mov
js
mov
push
add
aaa
and
pop
add
pop
nop
incl
enter
bound
pop
adc
add
mov
pop
add
add
mov
mov
aaa
rcll
bound
movsb
cmp
push
or
les
idivl
add
mov
es
int
inc
movq
add
mov
add
bsr
lock
mov
idiv
les
inc
lods
add
jge
js
repz
and
sub
add
xlat
sbb
std
add
sub
xor
mov
test
inc
gs
mov
sub
ror
add
jnp
imul
pop
pop
add
and
pop
flds
pop
sub
sbb
sub
mov
and
fcoms
mov
mov
fldl
pop
and
adc
mov
push
imul
les
loopne
pop
sahf
loope
mov
fistl
lods
stos
or
mov
and
sbb
add
fnstsw
lock
mov
push
fwait
arpl
add
pop
ret
mov
add
jmp
dec
add
sub
jb
test
loop
in
js
add
cld
insb
jl
fisttpll
cmp
leave
repz
mov
push
mov
cli
push
aad
sbb
jnp
add
cmp
dec
add
fidivrs
out
push
xchg
adc
cmp
adc
sbb
pop
pop
movsb
mov
fdiv
div
les
add
stos
xor
jb
cltd
idivb
rolb
sub
repz
mov
add
xor
or
shl
push
add
or
jle
jb
sahf
add
movsb
inc
push
adc
sbbl
andb
stos
mov
dec
cmp
sub
add
jo
clc
add
mov
add
jno
sbbb
ret
xchg
mov
aaa
pop
int
add
push
out
mov
mov
lret
call
pop
mov
sub
xchg
dec
lret
adc
add
add
pop
adc
std
add
inc
sub
mov
push
lea
add
sub
xchg
jno
mov
inc
push
aaa
sbb
add
mov
sbb
mov
pop
psubq
push
gs
lahf
mov
sarb
add
lods
cmp
lret
add
xchg
inc
push
in
leave
adc
inc
mov
daa
push
loop
test
fldenv
add
push
adc
rolb
hlt
cmp
or
dec
iret
enter
decb
mov
mov
cs
lods
std
add
add
popf
add
xor
sbb
add
cli
enter
orb
add
push
negl
mov
test
add
scas
pop
push
sbb
sahf
or
mov
mov
outsb
xchg
add
or
dec
add
add
sbb
nop
xor
mov
mov
shlb
add
cmpsb
dec
inc
dec
jbe
add
push
sub
or
mov
add
inc
in
loope
push
out
add
je
add
pop
ror
lods
orb
roll
mov
aam
lock
add
enter
pop
jge
add
xchg
cmp
pop
stos
sub
insl
mov
mov
add
scas
fucom
sub
mov
add
xchg
xlat
int
lods
clc
add
aad
lds
jge
stos
lock
or
cmp
aad
add
and
pusha
add
roll
xchg
dec
sbb
add
in
mov
jl
dec
jg
call
mov
mov
out
sbb
cmpsl
nop
add
int
addl
push
push
sub
dec
add
and
iret
insl
inc
pop
xor
mov
push
outsb
push
add
test
add
insb
std
jns
outsl
dec
xorb
add
iret
ror
or
pop
test
add
add
data16
stos
jmp
ds
add
das
mull
sbbl
test
addl
sar
fsubl
xchg
push
xor
add
stos
aad
add
or
xchg
push
push
cs
add
push
mov
add
mov
add
cmp
dec
rorb
fsub
mov
push
stc
add
rcrb
cmpl
add
sbb
add
or
mov
pop
pop
stc
imul
ficompl
out
add
add
push
and
lock
lea
imul
lods
cmp
jno
fiadds
mov
mov
or
xchg
ja
aaa
movsl
xor
dec
add
jnp
orl
shl
inc
rolb
mov
push
das
pusha
add
pop
add
sbb
adc
stc
add
scas
mov
cltd
or
stos
jnp
popf
mov
testl
fwait
mov
js
xchg
xlat
xchg
clc
enter
pop
and
leave
and
cltd
aaa
pop
add
mov
mov
mov
mov
inc
out
das
stc
add
cld
rorb
cltd
xchg
cwtl
test
test
out
dec
adc
lods
mov
adc
add
fistps
pop
inc
push
pop
cmp
lock
test
cmp
adc
mov
fisubs
in
mov
xchg
add
mov
ret
scas
mov
and
frstor
add
add
test
scas
add
pop
mov
out
mov
add
fnstenv
mov
lret
mov
dec
pop
dec
outsb
nop
cmp
add
lods
dec
or
or
sub
jle
or
js
popf
mov
jo
fwait
push
sbb
loope
add
dec
sbb
add
ss
push
stos
fcompl
sbb
loop
add
or
inc
sbb
pop
call
cld
add
stos
in
sub
add
fsubs
inc
out
mov
cmpsb
fcmovb
lcall
insl
xor
mov
dec
sub
pusha
or
aaa
pop
cmp
adc
dec
dec
add
add
call
and
pop
nop
dec
andb
aas
popf
mov
inc
pop
rorl
test
push
int3
fyl2x
sbb
and
test
jecxz
jb
adc
dec
push
or
add
cli
mov
push
in
dec
sbb
cwtl
add
fwait
push
arpl
lahf
add
test
add
or
in
daa
inc
testb
sub
sbb
lahf
inc
pop
test
sar
ret
or
xchg
cli
add
pop
cmp
mov
loopne
fistps
adc
in
add
test
leave
add
sub
inc
inc
inc
addl
adc
mov
int3
or
add
fstl
sub
jb
hlt
cmp
outsb
xorl
push
sbb
lock
cmpsb
scas
out
test
lods
in
sbb
dec
dec
popa
add
add
xlat
jae
push
jae
and
rcrb
add
sarb
inc
icebp
mov
nop
movsb
mov
push
add
mov
leave
out
jns
test
sbb
js
mov
outsb
pusha
add
mov
add
pop
and
lods
adc
inc
not
pop
imul
mov
fldcw
add
cwtl
hlt
lea
and
or
push
or
cmp
mov
sbb
mov
add
das
adc
add
mov
bound
out
push
mov
sub
jne
xchg
xor
movb
pop
in
add
arpl
stc
pop
sbb
cmpsl
fcoml
cmp
stos
add
decl
data16
ja
sbb
jp
testb
sub
xor
adc
add
imul
movsb
and
dec
or
pop
cltd
jle
push
mov
pusha
push
pop
add
nop
and
push
loopne
outsl
inc
jl
dec
xchg
aad
packsswb
pusha
call
add
xor
dec
xor
faddl
add
imul
rcll
out
mov
xor
cmp
movsb
add
je
pop
mov
cmp
pop
jae
push
test
in
xchg
dec
add
and
mov
addl
pop
mov
loopne
movsb
sub
add
xchg
fldcw
jmp
pusha
push
leave
add
pop
or
add
daa
or
stos
sub
push
sbb
cmp
test
add
mov
fcmove
cmpsl
xchg
cld
ds
jno
mov
and
add
jb
ja
add
push
adcb
adc
or
bound
cld
adc
or
mov
sbb
jno
lahf
adc
cwtl
jmp
daa
or
or
adc
mov
add
mov
cmp
rclb
lea
push
dec
sub
mov
stos
add
mov
push
loop
clc
cs
jne
add
aam
pop
jge
jmp
push
jns
movsb
fistpll
mov
xor
scas
and
in
loopne
pusha
ss
add
inc
add
popf
push
xchg
add
cmp
aaa
or
roll
add
dec
pushf
pusha
push
std
sbb
fs
add
and
shlb
add
bound
xchg
adc
pop
mov
mov
jo
add
rcll
cwtl
and
es
jnp
inc
push
or
add
push
pop
mov
mov
roll
jnp
sub
xor
outsl
mov
inc
mov
add
pop
stc
push
cld
loop
addr16
dec
aad
adc
imul
jno
nop
gs
pop
mov
rclb
out
cmp
mov
jns
push
or
daa
movsb
add
mov
lret
add
ffree
xchg
mov
add
mov
cld
xchg
jmp
inc
pop
or
int3
add
fstpl
lds
xlat
cmp
cmp
add
push
xchg
dec
lods
stos
pop
mov
jb
mov
jnp
pop
cmp
add
fcmovne
adc
test
jo
add
dec
scas
sti
jle
mov
pop
sbb
xchg
shrb
mov
jg
add
scas
or
pop
leave
call
enter
xchg
cwtl
mov
in
stos
xor
stos
nop
mov
xor
fiaddl
add
lret
ret
sub
adcb
xor
inc
imul
pusha
enter
flds
nop
loop
cmpsb
pusha
bound
cmp
rorb
dec
lds
inc
movsb
inc
xor
xchg
sti
add
cld
inc
pop
inc
push
mov
xchg
lods
ret
dec
ljmp
fs
addb
cmp
cmp
add
test
pushf
mov
inc
add
push
pusha
icebp
push
nop
push
add
stos
mov
iret
add
add
xor
mov
or
mov
jge
sub
sbbl
push
push
add
cmp
mov
sub
pushf
shlb
xor
roll
std
add
pop
call
fisttpll
pop
adc
mov
pop
inc
mov
nop
add
lcall
pop
cld
pandn
add
adc
sub
mov
test
adc
jge
push
jbe
dec
data16
fidivrl
fcoml
mov
adc
mov
add
mov
test
ss
add
outsw
add
icebp
inc
dec
pop
mov
xor
int
adc
pop
or
fsubr
dec
cmp
ret
fdivr
cmpsl
jp
xchg
mov
adc
testl
ficomps
cmp
add
xchg
sbb
jmp
add
adc
stos
rolb
mov
push
in
lret
cmp
mov
or
inc
add
aam
adc
pop
dec
mov
xchg
scas
nop
add
inc
test
aas
ja
and
add
int
sub
jne
rclb
push
sub
insb
jmp
push
out
add
cmp
rolb
jecxz,pn
lea
data16
repnz
add
jno
mov
mov
lods
inc
lahf
fadds
lods
inc
dec
add
cli
add
rcr
sub
mov
fidivs
xchg
scas
pop
add
inc
and
nop
sahf
inc
dec
push
xor
ljmp
add
lcall
sbb
loopne
and
loope
jg
or
mov
add
mov
and
push
das
daa
or
icebp
mov
mov
lret
adc
add
adc
push
add
mov
push
popa
cmp
cmp
add
ret
jo
push
stc
or
or
and
add
mov
enter
add
push
into
pop
or
leave
add
rolb
add
ljmp
pushf
adc
pop
popa
dec
cltd
adc
mov
add
aaa
fmuls
and
mov
loopne
pusha
add
push
aam
or
mov
dec
xor
mov
cwtl
or
xchg
mov
pusha
add
jb
in
pop
cmp
and
mov
adc
xchg
pusha
call
scas
sbbb
and
ja
add
stos
dec
push
pop
stos
xor
xor
push
adc
orb
into
inc
int
push
or
mov
adc
adc
sub
mov
push
cmp
das
cli
sub
add
fsubl
xor
push
addb
lret
sarb
mov
fwait
sahf
fstpt
pop
push
in
add
test
add
fs
jp
iret
add
movsb
in
add
xchg
lcall
push
out
in
jns
ret
lret
push
adc
xchg
out
and
push
and
addr16
daa
sbbl
jp
mov
inc
mov
add
sbb
out
add
mov
dec
cmp
sub
push
sbb
adc
push
xchg
jb
in
fs
sub
cld
scas
add
mov
das
sbb
inc
test
xor
add
ss
daa
inc
decb
xchg
inc
dec
and
cmc
pop
jns
or
cwtl
add
or
repz
add
jmp
add
dec
pop
loopne
jmp
dec
repnz
add
xor
faddl
stos
mov
lods
add
and
cmp
scas
jns
push
add
int3
sbb
add
imul
add
sub
sbb
ja
leave
add
sbb
lds
or
jmp
loop
jbe
daa
dec
add
add
cli
imul
sbb
sub
fstpl
mov
push
imul
push
data16
jl
sbb
andb
inc
push
movsl
jp
punpckldq
stc
out
sub
add
push
mov
inc
ds
in
xor
ja
mov
adc
xorb
push
cmpsl
dec
daa
pop
sahf
xor
fwait
mov
inc
push
pop
psubsw
mov
addb
and
or
sub
mov
sbb
dec
insb
and
sbb
test
push
mov
cltd
test
cli
or
add
sub
mov
sahf
hlt
add
add
mov
cwtl
popa
add
mov
into
ficompl
add
sub
xchg
out
dec
sbb
lods
dec
sti
scas
stos
mov
roll
add
pop
xchg
fiaddl
sub
daa
add
imul
sub
lds
stos
faddl
cmp
and
mov
xor
enter
clc
or
add
mov
mov
mov
add
int3
pop
push
sub
pop
add
mov
or
pop
adc
inc
add
jo
or
sbb
mov
push
int3
ret
sti
and
add
out
xchg
mov
popa
or
mov
lcall
jp
pop
sbb
add
dec
cltd
punpckhbw
inc
imul
adc
subb
push
cmp
add
lock
popa
xor
xchg
aam
xchg
add
add
ficompl
and
mov
add
sbb
push
pop
ljmp
std
subb
int3
mov
add
out
mov
add
mov
fadds
test
sbb
add
or
adc
cmp
add
cmc
adc
pop
dec
adc
cmp
add
fdivr
jbe
push
imul
scas
push
in
das
and
add
ljmp
es
xchg
cld
out
or
xor
addr16
imul
int3
xor
std
xor
cli
add
cmpsl
push
inc
mov
and
cmpb
imul
add
pop
xchg
enter
push
test
insb
add
scas
pop
shlb
pop
xchg
push
aam
and
add
cmp
pop
xchg
das
int3
add
inc
inc
aaa
inc
xchg
add
subb
cmp
add
jecxz
or
jno
in
jle
pop
gs
popa
add
jns
add
xor
or
js
sbb
fisttpl
scas
pop
and
adc
fcomps
or
popa
add
add
mov
ret
or
and
lahf
pop
add
addr16
loope
js
insb
adc
or
shl
pushl
cli
fistpl
lret
loop
inc
xor
add
bound
repz
clc
and
dec
add
pop
push
or
add
add
push
stos
scas
jecxz
mov
fs
and
aad
add
mov
push
repnz
add
xor
sbb
notl
dec
add
adc
add
push
dec
das
and
add
pop
lea
pop
jae
jge
jb
ja
nop
xchg
andb
xchg
into
xor
fs
test
lods
mov
add
add
in
addl
movl
cmp
xchg
adc
add
adc
pop
loopne
add
testl
add
std
mov
adc
ret
add
hlt
daa
and
fistpl
pop
mov
adc
ret
add
add
inc
mov
das
es
xor
jns
sub
sub
nop
add
mov
in
hlt
add
mov
add
xchg
mov
out
rclb
mov
push
popf
stos
xchg
movl
outsb
mov
imul
add
adc
mov
push
lods
and
fiaddl
pop
call
add
sbb
add
mov
in
dec
sub
add
clc
jb
ljmp
stc
out
and
jp
cmp
mov
inc
pusha
rolb
mov
je
cld
add
mov
std
add
adc
scas
adc
lahf
jb
daa
sti
mov
add
xchg
cld
add
test
add
in
hlt
adc
loope
jl
rorb
xor
push
mov
bound
mov
add
call
xchg
test
cs
jae
dec
adc
adc
sbb
outsl
lods
jp
add
mov
ficompl
push
jo
mov
push
or
add
or
push
das
cltd
xor
add
xchg
add
test
push
insb
ret
xchg
inc
je
sbb
into
mov
cmp
jl
sar
add
sbb
ljmp
mov
pusha
jno
add
push
or
stos
data16
sbb
mov
mov
sahf
adc
pop
cmp
mov
lods
stos
sbb
mov
jns
push
inc
add
and
push
testw
out
dec
ljmp
aas
xor
dec
add
and
mov
pop
nop
add
sbb
sti
cmc
sub
add
lret
stos
add
or
inc
inc
dec
push
xchg
mov
cmp
and
xlat
and
je
mov
pop
les
pop
loopne
push
inc
add
or
in
cwtl
jge
add
and
adc
pop
lret
xchg
add
mov
push
adc
out
add
xor
daa
inc
push
sarl
mov
add
mov
dec
mov
std
jns
mov
test
and
sti
inc
loopne
xor
xchg
std
arpl
mov
pop
fwait
lods
add
stos
inc
add
pop
mov
pusha
add
fsubp
in
test
out
dec
fldt
inc
js
mov
mov
xorb
add
in
jnp
lock
mov
call
add
push
add
push
mov
lahf
push
add
xchg
inc
jge
sbb
add
mov
scas
adc
jg
imul
and
in
add
sub
je
sbb
and
add
inc
bound
pop
dec
add
cmc
xor
pusha
movl
or
test
sbb
ret
movsl
dec
sub
add
out
sub
aam
sahf
sub
mov
stos
incb
add
int3
xor
adc
xchg
add
pop
push
mov
xor
rorb
enter
add
dec
mov
loopne
lds
inc
enter
stc
add
cli
rolb
inc
pusha
jo
bound
xchg
subb
shr
add
sbb
mov
imul
lret
call
cmc
nop
and
and
and
push
lods
lret
out
js
jge
inc
sti
out
andb
paddb
fs
mov
fnstsw
arpl
inc
ffree
shlb
jmp
xchg
loope
imul
add
mov
inc
int3
fisubs
pop
rol
or
test
add
dec
mov
mov
out
cmp
lret
or
add
add
outsb
add
enter
inc
add
inc
dec
ds
leave
adc
add
popf
scas
adc
lods
popl
gs
movsb
sub
mov
add
and
pop
cmp
sbb
add
inc
mov
add
xchg
addr16
fsub
shll
stos
imul
fwait
ds
push
add
inc
outsl
push
addb
test
mov
inc
scas
add
mov
int3
add
test
loopne
repnz
add
inc
int3
clc
ds
push
or
add
jge
add
and
pop
cli
inc
loopne
in
dec
mov
popa
add
sbb
jo
leave
loopne
test
or
and
jl
lahf
inc
insl
xor
daa
mov
adc
mov
icebp
mov
jecxz
sub
mov
hlt
add
movsb
or
loope
sub
imul
cmp
in
xchg
mov
mov
and
mov
and
adc
pop
stc
add
mov
das
and
add
mov
adcb
push
inc
mov
cmp
add
pop
inc
arpl
jle
pop
add
mov
jns
test
inc
xlat
and
ljmp
fbld
popa
add
jns
jg
or
sub
pop
nop
in
ret
pop
adc
add
clc
stos
add
dec
adc
add
pop
pop
mov
cmp
inc
jl
lret
scas
push
test
add
or
push
enter
les
and
repnz
pop
xor
mov
cmpl
add
mov
clc
test
lret
jle
mov
out
es
or
push
jnp
rorb
lcall
mov
lock
out
arpl
testb
push
or
dec
mov
mov
mov
add
scas
lea
outsl
out
jo
sub
mov
test
and
push
imul
add
mov
mov
push
inc
add
and
pop
addl
and
cwtl
imul
hlt
add
inc
adc
data16
add
push
and
add
shlb
mov
add
cmpsl
add
imul
icebp
xchg
inc
subb
add
pop
xor
test
call
clc
push
pop
jno
ds
add
pop
test
mov
pop
out
fs
push
mov
add
sub
aad
sub
out
call
add
leave
and
cli
mov
ret
add
or
xor
adc
adc
dec
or
rcrb
or
adc
mov
sub
sub
add
xchg
sub
add
mov
rorl
mov
lcall
ss
ficoms
pop
mov
scas
mov
mov
shrb
add
outsb
loop
fmuls
inc
and
nop
push
pop
and
mov
push
iret
add
out
adc
add
shrl
data16
push
call
mov
mov
adc
sbb
fadds
jb
add
inc
push
pavgb
and
dec
lcall
repz
loopne
stos
sbb
add
jl
not
xchg
add
mov
and
js
add
cmpsl
mov
add
mov
dec
ss
mov
shll
stos
cmp
adc
lods
and
push
add
gs
lea
jnp
jle
add
dec
add
stc
and
adc
dec
mov
add
aam
push
pcmpeqw
sbb
pushl
or
xor
ds
add
rolb
sbb
push
pop
iret
xor
xor
pop
add
push
or
leave
dec
push
mov
testl
mov
sub
and
mov
mov
dec
mov
adc
rclb
add
xchg
call
add
add
and
jno
in
jp
or
out
sbb
in
pop
xchg
sub
jae
push
jne
add
into
adc
pop
inc
add
jae
and
add
daa
out
in
push
or
jnp
pop
jb
pop
test
mov
lods
repnz
add
addr16
mov
dec
mov
push
add
cwtl
aas
dec
push
test
mov
mov
pusha
shl
repz
call
cli
cwtl
add
dec
xlat
jl
testb
in
test
or
ret
add
mov
cmpsl
add
add
and
add
or
inc
push
dec
mov
cmp
cmp
and
pop
sbb
inc
jb
or
push
add
pop
mov
pop
repz
inc
lret
pusha
and
dec
or
nop
mov
enter
pop
push
cmp
sbb
xchg
out
add
push
hlt
xor
and
lahf
test
cmpsl
add
cmp
gs
jns
xor
and
mov
test
bound
ja
in
add
and
adc
xor
xor
inc
jle
sub
lcall
add
mov
and
sbb
popf
cmp
mov
outsl
mov
add
inc
adc
lret
stos
xor
adc
sub
insb
pcmpeqw
hlt
and
pop
jl
add
jno
adc
lods
ljmp
repz
ja
mov
push
cli
jl
inc
add
add
bound
test
sbb
push
addr16
xlat
fildl
shl
cs
add
inc
push
mov
cltd
dec
mov
fstpl
add
aam
pusha
mov
or
lds
aam
ret
and
rcll
xor
mov
arpl
adc
fwait
repnz
sub
lods
xchg
fmuls
jnp
jno
stos
pop
add
shlb
faddl
in
and
pop
add
sub
and
add
les
lds
add
cmp
fwait
lods
cld
cltd
xchg
cmp
cmovne
int3
mov
stc
add
gs
and
adc
hlt
rcll
mov
pop
add
bound
sub
xchg
filds
mov
inc
xchg
repz
push
cmp
add
push
push
icebp
lahf
push
cmp
xchg
call
dec
adc
aas
clc
rolb
sti
testl
in
lods
add
stos
dec
enter
add
push
cmp
mov
inc
cmp
xchg
jb
sub
and
jle
clc
mov
sbb
xchg
sti
mov
mov
clc
jle
cwtl
add
sbbb
mov
movsl
inc
add
shrb
mov
jns
repz
jb
xchg
inc
and
push
or
lret
pop
add
je
pushf
sti
adc
add
push
imul
sbb
cmpsl
sti
popa
add
adc
fcompl
sub
cmp
add
add
nop
hlt
arpl
add
inc
mov
faddl
divb
and
cmpsl
adc
mov
enter
sub
ret
test
add
das
mov
testl
mov
adc
lods
ret
shl
xchg
and
test
inc
shlb
fcomps
dec
or
outsb
call
add
int3
fldl
leave
dec
push
clc
cmp
adc
sub
add
jns
andl
mov
inc
inc
sti
adc
loop
repnz
mov
leave
sub
pop
pop
mov
fists
and
mov
cld
aam
inc
add
lret
nop
xor
jmp
sbb
xchg
xchg
dec
shlb
push
sbb
lret
icebp
pop
fstl
loopne
inc
jne
jns
outsl
cs
adc
dec
lahf
jge
add
dec
add
jmp
lods
add
mov
aaa
sub
inc
enter
xor
xchg
inc
out
add
cli
sbbb
and
aas
dec
scas
jns
imul
adc
push
adc
pop
sti
filds
push
mov
adc
mov
cmpsl
enter
add
aas
push
aaa
sbb
add
adc
cmp
add
xchg
add
push
jno
jmp
pushf
adc
lods
xchg
into
stos
int3
add
test
mov
cltd
shlb
push
add
or
outsl
dec
dec
movb
xor
jecxz
adc
ljmp
xor
adc
cli
add
cmp
add
push
mov
dec
jg
fists
xchg
sub
add
lahf
add
cmpl
pop
dec
das
bound
repnz
or
idivl
add
sub
aam
das
bound
sbb
mov
shrb
add
mov
mov
je
lds
and
pop
and
inc
jb
and
and
add
repz
inc
add
rcll
data16
clc
or
fwait
add
sbb
or
fidivl
jne
add
sarl
cld
jge
add
stos
imul
push
aas
jecxz
test
scas
ljmp
inc
lods
addl
xor
add
adc
dec
mov
add
jl
xlat
jne
add
loop
notl
add
jecxz
adc
lret
sbb
add
dec
adc
in
movsl
jmp
fwait
notb
ss
mov
push
pushf
sbb
add
mov
dec
add
and
pop
xchg
fiaddl
pop
test
add
inc
xchg
mov
add
adc
push
lods
sbb
or
or
xor
out
push
cmp
and
les
je,pt
or
pushl
push
add
test
inc
sbb
push
outsl
add
or
add
aad
scas
pop
add
jecxz
ret
popl
pop
movsl
into
pop
or
ret
daa
cmp
lods
push
xor
jg
dec
jo
add
rclb
cmpsl
out
filds
add
push
add
leave
push
cmpsb
fdivs
dec
add
out
loope
fs
pop
pop
add
xchg
mov
jmp
lock
inc
outsb
mov
xchg
decl
in
add
cmp
out
add
sub
add
xor
adcb
or
sar
mov
add
inc
test
shl
add
fmull
std
out
add
int
inc
inc
mov
pop
adc
sbb
mov
stc
add
loopne
js
xchg
fildl
adc
pop
outsl
add
fisttpll
add
dec
xchg
mov
cs
add
js
inc
mov
loope
movsl
cs
pop
adc
mov
clc
add
ficoms
fmull
jl
icebp
add
or
inc
jae
sub
cmp
dec
das
cli
ja
add
sbb
xor
int3
push
int
and
dec
xchg
add
test
out
das
push
or
mov
inc
add
andb
add
and
push
add
hlt
les
lods
mov
mov
daa
mov
cltd
insl
push
push
sbb
mov
dec
test
daa
movsb
cmp
add
or
and
mov
cli
dec
and
mov
jecxz
add
cwtl
push
add
push
lods
movsl
xor
rcll
adc
stos
or
pop
pop
add
and
ficompl
add
mov
imul
push
out
sbb
add
or
add
subb
pop
lock
dec
jle
add
jo
add
jae
sub
sub
mov
jnp
add
adc
aad
ret
inc
ljmp
and
add
stos
les
jae
pop
lahf
mov
leave
sub
incl
and
add
loopne
xor
jbe
jae
mov
add
sti
pushf
add
push
add
push
cmc
dec
int3
sub
clc
popf
roll
adc
lods
sbbb
test
mov
sbb
xchg
gs
jecxz
mov
add
add
push
bound
push
outsb
aad
lcall
lahf
push
add
or
add
ds
mov
push
or
test
scas
cmc
rolb
xchg
add
add
in
add
mov
dec
jo
mov
dec
dec
xchg
inc
call
add
mov
mov
sbb
cli
mov
jl
jecxz
rclb
loopne
rorl
lret
imul
mov
push
jbe
pop
aam
add
out
push
lret
and
add
movsb
test
notl
das
divl
add
adcb
pop
cld
add
aaa
mov
scas
ret
scas
testl
jo
add
mov
repnz
outsb
push
push
add
xor
dec
sbb
add
or
sarb
add
int3
inc
adcb
mov
pop
out
lods
jne
jbe
lds
push
or
fadds
xor
push
sbb
xchg
arpl
sub
hlt
add
xchg
mov
leave
mov
arpl
xor
mov
push
leave
andb
pop
mov
adc
aad
dec
mov
add
fbstp
add
mov
add
add
iret
dec
mov
out
and
adc
rolb
repnz
out
loopne
add
faddl
ret
and
adc
sbb
push
add
ja
dec
in
mov
and
cmp
inc
mov
add
sub
adc
lods
sbb
outsb
xchg
test
dec
out
lret
pusha
push
push
mov
mov
cs
dec
xchg
out
mov
dec
or
fcoms
mov
mov
cmpsl
add
roll
mov
sbb
shl
fstp
add
or
cmp
arpl
xor
lock
jnp
es
pop
add
pop
sub
cmpsb
hlt
into
nop
pop
std
jns
nop
out
fstl
hlt
add
jg
push
xor
xchg
bound
js
or
xchg
cli
test
jmp
mov
add
dec
bound
movb
mov
pop
sbb
sub
jbe
lea
push
cltd
lock
clc
fiadds
lret
jb
push
lock
daa
sbb
jge
add
test
xor
jbe
mov
add
xor
and
add
int3
mov
xchg
dec
int
cli
out
mov
test
mov
jg
add
shrl
imul
test
outsl
inc
pop
and
add
and
adc
shlb
inc
mov
push
popf
movsb
inc
iret
test
sub
add
lds
inc
sti
xor
pop
add
and
outsb
sub
mov
stos
adc
mov
aas
fldt
or
add
add
push
btc
cmpsb
nop
loop
sbb
cmpsl
movsl
mov
mov
push
or
xchg
out
inc
sub
mov
int
adc
popa
and
addb
add
js
stos
xor
jl
pop
xor
sub
shlb
sbb
push
aam
cli
bound
push
adc
sub
cli
sbb
xchg
mov
mov
xor
mov
mov
adc
jge
sub
test
mov
or
push
cmp
sbb
xchg
testl
mov
mov
sbb
call
fadds
inc
test
mov
sbbl
sbb
adc
and
dec
adc
imul
mov
push
test
call
and
adc
mov
inc
loope
inc
sbb
inc
testl
lahf
fadds
dec
jnp
fiadds
mov
test
int3
sti
mov
shll
fst
pop
clc
add
sbb
dec
fwait
std
lds
inc
pop
stc
push
adc
das
push
xchg
ljmp
mov
fsubrl
adc
into
movsl
loopne
push
aad
bound
test
push
inc
test
sub
push
popa
cmp
mov
jbe
pop
aaa
inc
shll
iret
scas
add
shll
pushf
loope
push
lods
sub
sbb
adc
and
lods
mov
add
shll
mov
adc
cld
push
add
jl
fildl
mov
add
lods
and
jl
mov
add
dec
fldl
testl
mov
add
and
adc
xchg
sbb
in
outsl
lods
or
inc
cld
mov
xor
ja
push
xchg
lahf
pop
add
cld
mov
push
add
popa
out
insl
dec
mov
or
jbe
add
jge
and
outsl
pop
adc
and
add
fisubrl
push
pop
fldenv
lods
xlat
jns
xchg
or
outsl
add
mov
add
sub
movsl
mov
or
rcr
fmull
mov
jno
sbb
stc
add
mov
jle
out
inc
dec
and
lods
faddl
dec
inc
xchg
pushf
inc
fs
ret
mov
add
imul
adc
sahf
insl
push
push
add
push
add
add
dec
mov
push
add
rcrb
add
mov
inc
jb
inc
out
mov
push
aam
cmpl
test
insl
mov
call
inc
cs
pop
fcmovnbe
add
js
xor
mov
add
or
mull
je
in
daa
cwtl
and
cmp
outsl
mov
daa
scas
in
data16
and
jo
roll
inc
stos
hlt
cs
adc
pop
lods
int3
add
fdivs
std
add
cltd
xor
add
jecxz
shrb
add
in
add
je
inc
fisttps
sub
mov
dec
fildl
out
in
cmpsl
add
mov
add
push
or
and
es
imul
enter
sub
cmp
popf
jp
mov
add
sub
xor
add
push
addr16
inc
dec
adc
inc
shrl
add
subb
add
std
xchg
dec
add
repz
fiadds
mull
xlat
adc
adc
pop
fnsave
lock
pushf
dec
add
sarb
inc
jo
xor
xchg
add
dec
sub
fimuls
stos
fadds
cmp
push
mov
sub
and
out
nop
fwait
mov
ret
js
xchg
out
testb
inc
leave
or
lods
cmp
jns
loope
or
imul
and
in
das
mov
add
sti
scas
fiaddl
pop
mov
dec
mov
xchg
mov
push
xchg
jne
add
les
fistpll
add
ljmp
pop
test
add
or
pushf
aam
testb
sti
adc
lock
jg
jmp
stc
add
sub
in
mov
push
push
mov
subl
mov
inc
jnp
xor
push
xchg
imul
clc
inc
sub
add
ret
or
add
or
add
mov
add
mov
add
adc
sub
push
fcompl
fnstsw
adc
or
inc
sbb
adc
mov
pop
call
add
inc
mov
xchg
xlat
repnz
repz
aas
adc
lods
dec
or
int
roll
sbb
test
out
repnz
mov
jg
pop
lods
stos
xor
movsb
adc
or
cld
in
divl
rcrl
add
jge
add
add
in
adc
into
stos
test
add
sub
xor
int3
jl
add
addr16
pop
test
xor
push
dec
inc
ljmp
jl
push
add
add
aas
test
inc
ds
sub
iret
add
cmp
and
xchg
pushl
or
roll
or
push
add
flds
and
add
clc
fcoml
adc
add
ljmp
inc
mov
test
shlb
cmc
adc
inc
sub
sub
add
adc
daa
nop
sti
dec
push
scas
fiadds
orb
fisttpll
or
pop
pop
std
iret
add
push
pop
jg
pop
add
sbb
add
add
ljmp
lods
sbb
or
push
cltd
inc
aaa
adc
lods
into
add
inc
out
les
outsb
cmp
add
cmpsl
pop
in
dec
out
aad
sbb
jmp
inc
push
sub
ror
pop
loopne
mov
imul
add
push
incb
hlt
add
fidivl
mov
add
mov
mov
cld
mov
xchg
out
add
je
rolb
jp
test
sbb
adc
sub
adc
adc
jb
out
inc
sbb
cwtl
add
mov
fistpl
add
ljmp
push
fildll
jge
add
icebp
xor
ss
repnz
stc
add
dec
dec
xor
mov
push
inc
test
pop
shlb
lods
addb
mov
pop
sbb
add
sub
or
mov
add
enter
outsw
add
or
or
xchg
xor
das
pop
pop
andl
movsl
adc
addb
imul
push
mov
add
bound
ficoml
sbb
jnp
test
xor
rcr
add
mov
iret
fadds
addr16
mov
inc
ja
fldenv
dec
bound
popa
mov
adc
std
or
push
xchg
dec
mov
clc
pop
adc
push
lahf
add
mov
add
ret
popa
adc
push
lds
inc
out
mov
inc
pop
or
xorb
jns
push
pop
hlt
add
xchg
cmpsb
mov
cmp
mov
test
ret
cmp
fucomi
cwtl
add
inc
mov
nop
inc
jo
fcoms
insb
inc
dec
movsl
out
jne
mov
push
sub
push
fldcw
push
inc
inc
sub
xchg
fisttpl
jl
das
sub
imulb
or
add
or
loopne
hlt
add
mov
mov
inc
lods
pusha
add
orb
movsl
xchg
pop
add
xor
and
mov
and
sub
cmp
jno
popf
cltd
add
xor
and
cmp
sbb
push
add
rorl
int
dec
mov
jbe
or
add
and
inc
jae
addl
add
or
cltd
add
jb
add
outsl
cmp
mov
xor
cmp
or
add
in
sahf
and
mov
jg
push
clc
add
jne
iret
add
pop
add
add
pushf
mov
adc
data16
xor
sbbb
lods
add
mov
das
mov
adc
mov
jns
inc
pusha
and
jae
in
mov
pop
insb
mov
cli
jg
add
test
jmp
pushf
lods
pop
add
pushf
dec
je
outsb
jno
mov
sub
imulb
jg
stos
loope
das
push
cmc
pop
add
add
icebp
test
dec
or
dec
mov
enter
ss
out
sub
popa
add
adc
aaa
or
push
ret
fisttpl
adcb
scas
pusha
xchg
sbb
mov
test
mov
mov
xchg
sub
test
iret
out
rorb
cmpsl
fdivs
leave
adc
movb
jo
test
adc
nop
imul
adc
add
mov
adc
pop
or
lret
mov
push
add
lods
lds
mov
add
aaa
and
loope
mov
repz
push
add
movl
mov
add
xchg
aad
scas
jmp
mov
out
xchg
dec
mov
sbb
les
and
outsl
dec
test
aad
or
mov
cwtl
sbb
mov
testb
into
fildl
sti
jp
add
and
sub
out
loopne
popf
in
sbb
pop
and
add
sarl
add
stos
testb
add
cs
add
or
mov
minps
adc
adc
sub
add
mov
in
add
fidivl
out
sub
and
std
xchg
imul
call
xchg
in
jle
pop
adc
add
faddl
push
add
lods
shll
lea
rclb
jge
sub
add
mov
lret
stos
shr
fadds
js
mov
test
scas
fst
add
rol
pusha
or
add
jg
add
mov
scas
jecxz
cs
call
cs
add
push
or
mov
out
xchg
in
add
and
dec
add
and
pop
sbb
roll
add
jge
add
sub
mov
dec
sbb
jge
add
mov
push
add
fildll
add
add
pop
pop
add
in
sbb
and
jb
add
shlb
jne
add
pushf
add
ficoml
mov
sub
adc
adc
or
scas
shr
lds
call
aam
xchg
fbstp
loope
push
stos
adc
test
dec
mov
and
mov
or
outsl
test
add
mov
sub
add
mov
add
in
inc
or
mov
faddp
icebp
and
mov
jb
addb
adcl
xor
out
xor
mov
adc
sub
hlt
adc
lahf
pop
add
scas
popa
add
or
jg
mov
roll
loope
andb
mov
push
sbb
dec
jl
jo
test
loop
push
inc
and
and
jne
add
hlt
mov
mov
push
scas
and
jge
inc
mov
jmp
jmp
add
mov
iret
test
inc
cld
jb
fistpll
add
ljmp
add
call
test
loop
inc
cwtl
out
add
rolb
hlt
add
fbstp
fdivr
ljmp
cwtl
add
ficompl
or
add
lea
add
and
jae
add
dec
dec
dec
clc
and
sbb
add
or
add
popf
jns
xlat
cmp
and
or
push
lahf
inc
test
add
cwtl
add
hlt
mov
mov
and
push
outsl
lret
insb
pop
inc
imul
xor
or
add
add
sub
adc
sbb
rorb
rclb
es
rolb
cmp
add
sub
and
ja
vpsubusw
fadds
or
insl
add
imul
int
inc
sbbb
les
arpl
insl
ja
and
inc
data16
test
fs
dec
add
add
add
pop
cmp
imul
dec
stos
jl
imul
jl
and
add
stos
sub
add
dec
imul
xor
cmpsb
and
negl
xor
and
adc
xchg
and
sar
jbe
and
push
sbb
in
inc
in
dec
aaa
jmp
add
mov
mov
mov
xchg
test
bound
pop
dec
add
mov
pop
dec
pop
add
js
fnstsw
outsl
cmp
add
outsb
jne
mov
add
outsw
popf
add
test
adc
add
std
add
push
mov
imul
adc
jnp
mov
cmp
incl
adc
dec
adc
sub
or
add
mov
in
sarb
cmpsl
jbe
and
and
mov
divps
add
mov
repz
fildll
or
jge
add
inc
loop
les
dec
stos
cld
add
xchg
mov
sarb
scas
roll
loope
loop
pop
cwtl
inc
mov
jo
pop
and
into
mov
insb
scas
add
pop
dec
in
add
add
daa
pop
add
daa
inc
test
cwtl
mov
add
cltd
dec
lods
dec
dec
jmp
xorl
fwait
and
popa
add
fistps
add
xor
mov
add
adc
ljmp
fadds
sbb
in
mov
jae
jmp
add
xor
repz
cwtl
pusha
or
les
fscale
pop
in
nop
jmp
inc
mov
and
add
daa
and
add
in
cltd
clc
add
aad
test
lcall
data16
aaa
out
cmp
pop
sub
and
pop
or
ret
repz
cmp
xchg
or
push
jl
xlat
cltd
or
shrl
sti
push
out
inc
jg,pn
outsb
and
and
sub
lods
add
pop
dec
imul
xchg
subb
sahf
mov
rcll
rclb
add
and
jmp
xlat
jo
jp
adc
pushf
add
push
add
test
inc
push
mov
call
pop
test
call
add
icebp
add
cmp
mov
or
inc
mov
push
inc
jb
jae
shrl
and
cmpb
dec
sahf
out
adc
sub
orl
push
or
sbb
mov
add
cmp
pop
mov
fdiv
add
orb
cmpb
inc
in
sub
mov
add
mov
add
std
je
out
roll
jg
add
orb
in
bnd
inc
lods
cs
mov
cmp
icebp
adc
mov
mov
adc
adc
inc
add
jmp
xchg
mov
adc
in
push
add
sbb
jle
test
dec
mov
adc
or
cmc
mov
loope
sub
dec
adc
test
xchg
roll
mov
mov
cltd
ret
push
add
push
popf
repz
adc
or
sub
sub
add
incl
add
imul
jne
cld
int3
add
flds
mov
pop
add
xchg
and
adc
xchg
add
sub
fstpt
mov
out
dec
cmc
out
outsl
jno
push
adc
setno
dec
ret
rolb
andb
add
dec
cmp
fstp
lret
das
pushf
add
jno
add
ds
pop
and
inc
sbb
mov
fs
fwait
and
repz
lods
xlat
mov
add
cmpb
push
cmc
add
jg
and
scas
adc
fsts
xchg
pop
inc
pop
add
mov
call
lods
outsb
sub
xchg
xchg
inc
cmp
push
aaa
jge
add
dec
out
inc
add
adc
mov
jne
add
fisubl
lret
mov
out
lcall
pop
xchg
xor
and
sbb
sbb
je
and
aas
push
cmpsl
mov
add
sbb
add
int
stos
mov
add
and
add
xchg
out
pop
cmpsl
outsl
ss
imul
orl
mov
add
adc
dec
call
inc
mov
add
inc
jle
fstpt
loopne
cmp
mov
add
sub
das
leave
push
sub
xlat
jle
mov
lret
call
lock
mov
adc
push
dec
jae
inc
add
jbe
adcb
loopne
push
sbb
in
int3
ljmp
data16
sub
out
inc
mov
cld
add
pop
jecxz
clc
mov
xchg
adc
jno
std
leave
and
testl
sbb
inc
mov
movsb
test
push
aam
pop
adc
ret
xor
popa
add
xchg
out
inc
pop
mov
xchg
add
adc
push
inc
xor
insl
or
sbb
ja
add
and
add
xchg
inc
dec
jns
cwtl
add
push
jle
pop
mov
cwtl
add
test
mov
sbb
and
scas
add
shrb
mov
add
incb
sub
inc
enter
add
pop
lea
daa
outsb
mov
cmp
cmovb
in
std
sub
hlt
andb
push
mov
pop
add
aad
add
dec
shlb
add
outsl
jl
cmp
test
imul
jb
popa
cmp
mov
les
shrb
jae
leave
jecxz
enter
adc
jecxz
pop
mov
pop
loope
mov
mov
pop
negb
out
and
adc
add
pop
inc
not
add
aad
mov
loop
cmp
or
sub
les
and
add
ljmp
and
push
cltd
call
mov
add
pop
pushf
adc
pop
add
mov
dec
sbb
dec
mov
sbb
jecxz,pt
mov
les
sbb
cli
add
sbb
add
jl
cmp
repz
and
lcall
addr16
bound
mov
sbb
cmp
rolb
arpl
cs
loop
lods
lds
das
pop
xor
add
xchg
in
ror
ret
push
hlt
push
insl
jecxz
adc
shlb
shll
je
fistps
dec
mov
adc
push
jno
inc
or
ss
add
test
xchg
add
nop
inc
xchg
cmp
add
int
stos
or
pop
imul
movsl
inc
test
jb
or
adc
dec
aad
add
nop
call
pop
or
xchg
movl
insl
mov
jmp
inc
add
add
jl
push
push
inc
cmp
cltd
mov
dec
test
movsl
sub
xor
mov
mov
in
add
add
out
dec
jbe
notl
pushf
imul
les
scas
jecxz
jp
dec
mov
add
push
xor
out
sub
adcl
jnp
add
lods
and
add
adc
test
mov
cmpsl
xchg
add
dec
hlt
adc
mov
mov
push
add
ljmp
push
add
adc
cmp
push
scas
out
pusha
and
fs
and
std
enter
pop
cmpsl
adcb
arpl
add
add
push
loope
xchg
test
dec
stc
add
loopne
sbb
loop
mov
push
loopne
xor
pop
pusha
repz
xchg
push
xor
push
fisttps
and
add
xor
add
call
and
nop
add
nop
mov
in
lahf
cli
idivb
adc
into
jmp
loop
popf
cmp
inc
adc
jle
ds
mov
lods
dec
pusha
mov
dec
dec
mov
or
or
mov
jmp
add
nop
popa
popf
cwtl
mov
mov
jae,pn
mov
in
add
rclb
into
push
add
mov
or
pop
cmp
push
add
stos
sbb
sahf
mov
add
fs
adc
js
dec
out
mov
push
cmp
cmp
negl
add
add
dec
cs
inc
mov
xor
xchg
jno
inc
dec
and
inc
add
push
xchg
dec
or
or
add
ja
stc
push
and
leave
add
mov
arpl
scas
rolb
mov
mov
sub
adcl
int3
mov
add
fmull
mov
imul
and
jo
les
aaa
pusha
out
mov
clc
sub
negb
lods
or
xlat
dec
add
arpl
fcoml
sbb
mulb
adc
mov
sub
cltd
cmp
jno
xchg
arpl
add
ret
pop
add
xor
add
clc
push
add
in
dec
jl
ss
push
jmp
xor
add
mov
xlat
or
add
or
cmc
in
add
flds
add
andl
add
jae
bound
mov
pop
jo
adc
dec
movzwl
jne
incb
enter
add
test
out
jmp
xor
rcrb
int
cltd
mov
add
adc
stc
push
and
ja
ret
mov
pop
and
jp
lret
loopne
sahf
add
insl
les
cli
xchg
test
mov
add
aad
or
add
inc
inc
mov
pop
sbb
rolb
mov
std
daa
adc
push
dec
in
add
push
mov
and
add
testl
movb
push
dec
jmp
add
mov
addb
ljmp
mov
clc
cmpb
loopne
mov
jg
fdivrs
dec
add
mov
mov
dec
push
scas
lcall
in
sbb
es
andb
add
fwait
mov
stos
testl
pop
xchg
mov
je
add
test
jb
mov
xchg
leave
shrb
sarl
jae
add
mov
mov
inc
dec
in
mov
aaa
and
aas
and
into
fnsetpm(287
jo
add
clc
test
sub
add
adc
add
cld
add
idivb
add
xor
rcrb
outsl
orb
pushf
add
test
mov
ret
add
inc
xchg
or
add
adc
loopne
cwtl
cmpsb
or
or
aad
add
mov
or
dec
add
add
cltd
loope
fiaddl
mov
loopne
jp
ds
bound
dec
test
adc
inc
dec
or
dec
loop
add
rorl
sub
xor
jne
add
or
adcb
nop
jmp
stos
aam
out
push
cmp
and
bound
mov
jne
mov
mov
shlb
out
dec
cmp
ss
add
bnd
addb
jmp
xchg
jo
js
xchg
push
je
sub
jle
out
sbb
jl
pop
cs
adc
add
push
adc
add
cmp
xor
add
sub
stos
cwtl
fwait
mov
mov
pop
rorb
out
cmp
test
outsl
cmpsl
add
pop
pop
out
imul
test
stos
cmpl
in
add
hlt
adc
mov
ljmp
dec
movsb
decb
add
fsubrs
lret
add
sarb
subb
mov
mov
test
or
sbb
test
xor
or
and
outsb
adc
add
and
and
jae
sbb
test
adc
xchg
ds
in
cli
mov
subb
flds
jae
cmc
test
mov
dec
add
mov
mov
jne
mov
pop
mov
mov
cli
insb
push
in
cmp
pop
scas
xlat
pop
lods
cmp
mov
inc
roll
out
push
pop
mov
cmp
jns
mov
mov
and
pop
inc
pop
shlb
dec
xchg
add
fadds
and
add
and
and
loopne
mov
jl
loopne
add
add
sti
repz
pop
add
pusha
fwait
ret
in
push
mov
shll
or
sbb
adc
sbb
xchg
ret
xchg
out
adc
push
inc
sbb
lahf
repz
sub
add
jle
add
loopne
scas
mov
mov
out
stos
xor
cmpsl
jae
add
sbbl
pop
adc
pusha
jo
add
mov
int3
insb
push
scas
ja
push
add
popf
and
pavgb
jp
and
ds
cmc
outsb
jo
mov
cmp
dec
cmpsb
add
xchg
cld
adc
call
mov
inc
mov
cmp
pop
jno
mov
pop
or
lcall
fistps
jp
add
mov
and
aad
jl
mov
cwtl
and
addl
mov
mov
stos
sbb
or
addl
mov
jle
enter
lock
add
jmp
add
ja
add
js
adc
inc
add
sub
orl
xlat
mov
mov
xchg
add
xor
fstpl
sbb
push
jp
inc
es
push
xchg
add
aas
mov
dec
loopne
testb
pop
xor
das
xchg
pop
addl
push
xchg
pusha
mov
inc
add
xor
push
je
mov
ret
ljmp
clc
popf
or
jne
fiadds
mov
jae
or
cs
fildll
jmp
ljmp
adc
xor
stos
mov
cmc
add
push
jmp
enter
lret
inc
jl
incb
jne
mov
movsb
xor
dec
ja
xchg
rcrb
out
xchg
test
dec
xor
insb
add
cs
fiadds
lods
inc
enter
incl
mov
xor
jno
or
ljmp
add
xlat
sub
add
push
push
mov
add
mov
movsl
imul
and
icebp
test
ja
sbb
push
repz
sub
movsl
mov
fs
cmp
xchg
loopne
add
lahf
mov
add
mov
jp
xchg
shll
jbe
inc
push
add
stos
sbb
mov
mov
sbb
adc
sahf
mov
hlt
ss
stos
or
in
loopne
sub
or
pushf
dec
add
add
pusha
out
sbb
or
push
ret
fiadds
lcall
mov
mov
imul
jo
inc
test
scas
cs
mov
adc
xchg
or
and
mov
les
mull
test
sub
add
xor
decb
mov
into
in
dec
jmp
andb
jno
add
test
mov
mov
lock
xchg
adcb
add
mov
aaa
pop
mov
cmp
addb
mov
xlat
aas
cmp
add
imul
lods
sbb
dec
mov
add
imul
xchg
pushf
pop
stc
out
leave
cmpsb
pop
loopne
jns
pop
fsubl
jne
adc
emms
bound
pusha
insb
in
cltd
adc
lods
mov
pop
test
out
or
xchg
and
add
pop
push
xchg
mov
lods
lcall
cmc
frstor
mov
sahf
dec
sbb
dec
popf
sub
pop
fwait
jns
rclb
jno
xorl
mov
add
xchg
loopne
add
mov
rorl
pop
pop
int
insb
inc
adc
mov
sbb
mov
jmp
decb
jge
inc
add
push
mov
add
out
andb
mov
mov
sbb
cmp
out
cmp
xor
test
sbb
mov
sbb
mov
push
inc
pop
lret
jge
lock
dec
stos
add
or
add
shll
sbb
jge
arpl
clc
mov
lahf
cmp
adc
add
je
negl
inc
pop
imul
push
cmpb
fiadds
clc
mov
loopne
mov
jno
cmp
jnp
test
xor
jb
add
test
in
out
mov
adc
or
enter
jne
les
cmp
push
sbbb
jae
rol
pop
adc
loop
add
and
jmp
adc
add
lcall
cmpsl
lret
aad
or
std
aas
xlat
mov
inc
push
or
xor
cs
cmc
cld
lahf
mov
and
rcll
xchg
add
movsb
fstpt
xchg
cmpb
cmp
repnz
std
jne
mov
inc
mov
add
xchg
pop
lods
add
push
adc
dec
out
nop
fisttpll
int3
loopnew
jecxz
leave
and
sbbb
xor
dec
push
xlat
arpl
imul
add
jne
dec
stos
daa
adc
cmp
out
add
xor
add
pop
add
xchg
or
ljmp
mov
sbb
xchg
mov
mov
mov
int
js
add
pop
loopne
add
jmp
mov
fsubs
enter
in
and
dec
xchg
pushf
add
pop
call
dec
mov
or
lret
add
adc
mov
stos
xor
add
sub
popf
jecxz
rolb
or
adc
out
add
jns
repz
cmpsb
xchg
xchg
inc
out
inc
jo
inc
mov
xorb
xor
sub
rorl
jmp
into
add
dec
in
clc
add
idivl
hlt
jecxz
cmpb
pop
sub
inc
dec
xlat
cwtl
or
add
addl
mov
aas
movsb
mov
aad
sarb
test
mov
out
mov
mov
push
insl
cmp
or
dec
out
lahf
jmp
enter
lods
cmpsb
xchg
int3
das
icebp
add
or
mov
enter
add
or
nop
imul
sbb
adc
mov
cmp
inc
std
fcoms
loopne
push
add
mov
fldl
pop
sbb
cmp
add
push
movsb
addl
and
out
pop
les
addr16
loopne
clc
pop
popf
je
add
mov
and
scas
xchg
addl
pop
sub
cmpsl
add
xor
cmp
jl
test
ds
mov
add
xchg
xor
adc
addb
lahf
push
fsub
notb
lods
mov
test
popa
add
fcoml
repnz
movsl
sahf
add
mov
dec
daa
or
add
mov
les
insl
and
and
fdivs
movsb
or
mov
add
mov
cmpsl
aam
sub
mull
add
xchg
jbe
lods
aas
fsubs
xchg
xor
call
out
jb
mov
mov
pop
hlt
and
mov
jno
jnp
jecxz
and
fisubrs
inc
mov
es
in
add
add
add
push
mov
test
mov
pop
add
notl
call
cs
cli
add
mov
sub
inc
xchg
mov
sbb
add
pop
lret
daa
add
jnp
scas
hlt
leave
add
add
add
std
rorb
xor
jb
mov
add
and
cmpsl
add
sbb
test
ret
add
sub
lcall
push
push
test
loop
hlt
add
jnp
fists
and
cli
pop
fcmovne
movsb
add
lret
int
mov
loopne
testl
ret
jge
loop
xchg
add
lods
push
loope
nop
clc
add
mov
cwtl
add
xor
sbb
lret
lods
or
cli
std
hlt
fmuls
jne
and
out
mov
pushf
adc
and
push
sbb
adc
jne
in
add
sub
jns
sbb
mov
aas
xchg
fiadds
fwait
ret
add
test
adc
sub
or
or
insb
push
cmp
dec
addr16
loopne
enter
push
rcr
inc
inc
and
add
gs
sbb
jbe
cmpsb
push
add
cwtl
sub
sbb
or
ret
fistpll
xor
cmpsb
scas
add
out
xchg
popf
add
cltd
jle
inc
pop
rclb
fwait
sbb
dec
add
inc
xchg
pop
xor
gs
pop
add
or
xchg
div
rcr
add
push
sbb
dec
pusha
push
mov
jae
add
ret
jbe
bound
add
mov
push
jb
add
push
add
sub
loopne
or
add
push
push
jae
and
lcall
pusha
cmpl
add
jne
imul
pusha
sbb
cmp
sahf
mov
lods
rcrl
pop
rorb
sbb
push
cltd
or
scas
xchg
add
fildl
in
mov
insb
xchg
inc
repnz
rcrl
ret
in
add
sub
mov
cmp
call
add
cmp
js
xor
mov
xchg
stos
mov
ja
xchg
xchg
inc
lahf
in
into
add
pop
scas
sub
mov
add
cld
mov
cmpsl
ljmp
jnp
imul
push
pop
sub
add
pop
movsb
xchg
inc
pop
or
int
into
xor
scas
pop
fiaddl
xchg
sub
and
sub
cmp
ss
cs
mov
fwait
add
add
mov
xchg
cmp
fxch
nop
jbe
in
sbb
imul
je
jp
mov
call
jae
addl
mov
arpl
dec
ror
inc
or
dec
jmp
lret
leave
push
icebp
add
jo
test
inc
aas
loopne
xchg
pushf
cmovle
subl
js
repz
add
cmp
or
addr16
and
inc
mov
add
jmp
movsb
push
pop
and
repnz
sarb
push
lret
neg
jae
scas
mov
xor
cmp
jg
push
imul
popf
repz
cmp
mov
addb
cli
out
sub
pop
mov
inc
inc
cmpsb
add
pop
sbbb
pop
call
jg
lods
inc
xchg
push
push
push
mov
dec
sub
stc
add
inc
lods
lret
jl
repz
cmp
add
rcrb
test
mov
insl
mov
hlt
cli
flds
cs
xchg
push
mov
cltd
outsb
xor
inc
sbb
sub
or
xorb
insl
inc
pop
popf
add
pop
out
adc
leave
add
jbe
fisttpl
jns
pop
xchg
je
pop
sub
lret
mov
je
add
mov
pusha
xabort
mov
repz
test
xchg
pop
add
mov
loop
add
xchg
mov
nop
pop
data16
lods
push
pop
or
jns
mov
mov
daa
dec
cmp
add
adc
dec
out
dec
mov
add
out
inc
lds
rcl
add
setp
sbb
sahf
and
add
or
push
fcoms
add
dec
shrb
aas
in
aam
ror
pop
loopne
mov
loop
jb
shlb
or
imul
fiaddl
sti
dec
push
add
inc
pop
lods
lahf
pop
fdivs
add
jae
ret
aaa
hlt
fstl
je
push
mov
push
test
jg
rolb
test
dec
add
sbb
or
dec
xchg
dec
or
jo
jne
add
and
add
mov
add
cmp
aaa
cltd
adcb
sbbb
std
cli
cmpsb
add
mov
push
adc
cld
insb
add
jns
jne
dec
aaa
insl
imul
out
add
pop
and
pop
push
jo
add
js
bound
pushf
mov
sbb
dec
xor
ljmp
mov
jmp
fs
mov
ret
cwtl
scas
imulb
hlt
jecxz
mov
stc
or
adc
add
fadds
mov
inc
mov
xor
cmp
mov
shr
jecxz
and
cmpsl
add
iret
add
add
lock
add
cmp
adc
rorl
addr16
test
add
jno
pop
dec
add
es
jmp
cmpl
mov
jg
adc
jge
mov
push
xchg
sbb
pop
loope
call
iret
adc
js
or
arpl
push
jnp
xchg
push
call
lds
xor
sbb
fcomps
add
or
popf
loopne
add
hlt
cmp
in
imul
add
sarb
repnz
ret
int
adc
pop
jmp
add
or
arpl
andl
and
jno
mov
es
lds
lret
or
jl
pusha
cmpsl
prefetcht0
dec
dec
movsl
mov
orb
jecxz
push
jnp
or
add
mov
scas
fmulp
jl
add
mov
add
fadd
add
pop
xchg
pop
outsl
sahf
hlt
fxrstor
sbbb
add
cmp
mov
cltd
sbb
pop
sub
aaa
mov
jne
mov
sbb
lods
repnz
inc
fidivrl
add
fs
adc
pusha
int3
fwait
xchg
call
push
addr16
shll
dec
push
push
ud1
test
or
pop
xchg
sahf
add
inc
sbb
add
loopne
adc
cmc
rolb
movsl
scas
fidivs
popf
push
add
lret
add
out
dec
add
in
cmp
popf
add
xchg
int
cmp
mov
dec
inc
add
jecxz
mov
push
fsubl
shll
xor
cmp
movsb
sarb
mov
cmp
mov
les
push
push
add
push
into
negb
mov
cmp
fwait
push
lahf
mov
fcom
add
push
ret
add
pushf
pop
cmp
mov
xor
add
and
lock
push
mov
inc
subl
hlt
fisubrl
jp
mov
jns
add
imul
ret
add
push
repnz
add
cltd
xor
add
out
movsl
and
mov
mov
xchg
loope
dec
imul
sub
add
mov
cmp
jg
mov
orb
call
fadds
les
movsb
sub
rcl
inc
jp
sarb
test
xchg
dec
wbinvd
mov
add
call
xchg
push
cli
sahf
data16
mov
or
frstor
mov
push
adc
int3
cli
fildll
xchg
scas
add
lret
cltd
in
icebp
adc
test
mov
pop
add
gs
add
xchg
push
pop
add
scas
andl
movsb
orl
pop
lahf
lods
add
out
enter
sub
add
add
loop
ds
jne
enter
dec
push
add
mov
mov
outsl
hlt
xchg
rcrl
xchg
xor
sub
jns
fwait
sbb
mov
cwtl
mov
outsl
mov
add
rorb
pusha
or
call
ret
add
push
adc
mov
fsubr
cmpb
add
jo
stos
cmp
int
pop
enter
or
fisttps
and
rcl
mov
mov
xchg
xorb
jl
pop
cmp
rorb
fisubrl
add
or
pop
mov
xchg
mov
sbb
add
clc
dec
mov
mov
sub
jbe
rcrl
dec
movsb
push
jl
add
dec
mov
out
mov
jo
add
mov
orb
adc
sbb
in
hlt
call
jmp
ss
xor
lods
add
xchg
xchg
sahf
add
or
pop
shl
sbb
ret
add
sahf
pop
xchg
lock
int
test
fisubrl
out
cmpsb
dec
cmp
std
cmpb
cld
adc
mov
aam
movsb
pop
xor
bound
test
loope
clc
shrb
mov
cmpsb
popw
sub
sbb
clc
int3
jle
add
mov
str
or
das
jp
cltd
push
push
pop
mov
mov
xchg
pushf
add
inc
lock
arpl
jle
add
push
adc
push
push
cmp
add
pop
scas
pop
mov
loopne
shlb
xor
add
cmc
jl
add
lcall
sahf
push
ja
cmc
mov
or
jmp
and
popa
jl
scas
lods
or
aad
sbb
mov
push
shrd
add
xchg
jmp
out
sub
rcrb
and
sbb
add
dec
inc
mov
fidivl
cmp
call
cmpsl
xorb
pushf
fimuls
jge
pop
mov
push
ja
orl
ret
popa
mov
adc
movsb
pop
hlt
sarb
ds
dec
jae
outsl
repnz
or
sub
xor
add
rorb
pop
add
jno
dec
pop
loopne
filds
fs
cwtl
xchg
adc
lods
jp
add
mov
jecxz
jge
rolb
add
sarl
add
xorb
inc
cltd
ret
stc
jnp
call
push
rorb
add
add
xchg
mov
dec
jo
es
or
xchg
ss
loopne
jb
dec
jl
mov
sar
mov
push
arpl
mov
fwait
shr
inc
iret
mov
adc
mov
push
cmovb
jle
imul
or
cmp
xlat
pop
mov
add
add
or
mov
adcl
ficoml
add
add
lahf
add
addl
push
sbb
das
pop
cmpsb
mov
jo
incl
ret
jns
adc
add
fisubs
fstp
mov
add
pop
stc
mov
mov
adc
xchg
nop
push
or
add
add
adc
out
add
sbb
add
add
xorb
adc
test
and
leave
data16
add
outsb
mov
scas
mov
je
add
in
sub
jecxz
push
cmp
rorb
cmpsb
jp
add
leave
ret
inc
add
out
sub
clc
lret
fidivs
in
add
addb
xor
movsb
xchg
inc
iret
jl
ljmp
mov
test
clc
jb
fstps
xchg
inc
lock
dec
ret
add
pop
push
add
movsl
lds
call
je
sbb
ret
fistpl
add
push
inc
sub
jmp
and
add
hlt
rcrb
pop
mov
push
push
into
orb
test
mov
cmc
pop
add
mov
shr
xchg
push
js
xchg
cmpsl
adc
sbb
cmp
data16
pop
sti
add
cmpsb
jno
jp
adc
inc
imul
jo
inc
or
cmpsb
mov
pmuludq
pop
sbbb
sub
add
iret
out
outsb
or
adc
or
shlb
mov
add
loope
addr16
aad
inc
into
ds
push
add
rcr
cmp
into
cmpl
adc
shlb
inc
sbb
cld
pop
or
das
mov
xchg
and
mov
push
je
cwtl
or
add
dec
lret
shlb
dec
jp
pop
faddp
add
jg
decl
gs
xchg
pop
sub
inc
dec
shl
mov
cmpsl
add
popf
orps
pop
xchg
mov
and
sbb
xchg
jg
and
cltd
mov
cmc
jnp
mov
xor
xchg
sarl
mov
xor
aam
sub
popl
pop
mov
push
lret
pop
shrl
popf
stos
in
pop
fcompl
and
ljmp
add
iret
mov
pop
into
mov
xchg
lods
mov
and
jbe
add
dec
shr
mov
incb
leave
popf
xor
cmp
xchg
add
add
mov
pop
pusha
sbb
sarb
and
mov
pop
ljmp
out
cmp
sahf
aas
add
cmc
leave
xor
and
rclb
push
add
mov
jecxz
add
add
pop
adc
fstps
push
xor
test
andb
pushf
add
sub
pop
sub
jnp
cld
add
xchg
add
mov
lock
in
or
imul
jmp
add
hlt
pop
push
test
mov
int3
stos
inc
fiadds
dec
scas
xchg
jl
cmpsb
test
mov
rcll
add
cmp
mov
xor
jbe
in
int
adc
mov
daa
pusha
lret
test
aas
xlat
adc
push
cltd
out
rclb
addr16
movsl
mov
loopne
and
jno
stc
mov
mov
add
popa
and
mov
mov
pop
mov
adc
lods
pslld
mov
and
cvtpi2ps
xchg
inc
jmp
add
mov
or
push
xor
cmc
sahf
cmp
imul
dec
add
adc
nop
sbb
cld
add
hlt
stc
cmpsl
add
dec
addr16
fs
mov
inc
mov
mov
fnstenv
push
add
mov
out
xchg
add
xor
inc
push
daa
cmp
xor
arpl
jno
mov
scas
mov
add
repnz
mov
lods
sbb
mov
add
and
push
lcall
int3
xlat
mov
sar
add
mov
push
mov
and
ret
mov
mov
inc
xor
add
lods
shl
adc
pusha
sub
in
aad
jmp
faddl
ljmp
xlat
test
pop
rorb
push
aaa
cmp
mov
loope
inc
adc
in
lret
std
adc
mov
sbb
nop
stos
cmp
push
pcmpeqd
dec
and
cmp
add
push
cmp
mov
xchg
mov
and
xchg
xchg
jecxz
stos
add
add
sub
xor
add
into
ret
mov
jo
add
mov
mov
lcall
jnp
iret
inc
imul
hlt
and
add
sti
int
test
in
dec
push
loope
add
addl
mov
hlt
mov
fsub
es
adc
shrb
dec
pop
add
stos
mov
popf
inc
orl
add
out
loopne
cmc
cmp
dec
mov
xlat
sbb
sub
add
je
cmc
ds
in
test
dec
jp
mov
sub
sbb
add
and
push
and
outsl
fwait
dec
mov
push
cmp
jbe
mov
pop
add
jns
dec
popa
lock
or
out
test
scas
add
movsl
loopne
sbb
mov
ljmp
sbbb
and
mov
push
xor
in
rolb
dec
cwtl
add
clc
add
enter
jno
and
std
mov
add
mov
pop
or
or
inc
out
push
dec
add
movsb
mov
pmullw
movsl
shl
outsb
jnp
add
inc
push
pop
add
mov
pop
lret
aas
gs
pop
sub
adc
xorb
pop
add
fptan
jecxz
xchg
lods
aaa
filds
dec
jmp
cmp
into
repz
in
add
mov
dec
cmc
mov
add
fwait
mov
push
add
jo
pop
icebp
cmc
add
add
push
std
push
roll
fnstsw
sahf
xchg
and
negl
mov
xchg
mov
lret
lock
sub
imul
bound
adc
cmp
cltd
lds
and
add
inc
je
add
adc
lods
cmc
lahf
add
or
or
push
push
pushf
pop
add
push
or
push
popa
out
pop
adc
shl
je
mov
das
add
out
mov
add
sub
mov
into
pop
jb
loopne
out
sub
add
jecxz
rorl
jg
add
mov
rcll
add
inc
sbb
push
jmp
add
testb
stos
or
out
adc
lahf
push
jle
stos
movsb
lock
ret
jle
sbb
addr16
push
scas
dec
popa
sahf
mov
in
pushw
fmul
nop
ret
xchg
int
lahf
lock
ret
pop
lahf
or
push
push
test
call
inc
mov
jno
mov
nop
stos
in
lock
add
mov
sbb
jmp
jg
ss
xchg
xor
loope
inc
imul
shll
pop
movsb
scas
insl
add
cltd
mov
hlt
mov
xor
fisttpll
pop
fxch
loopne
pusha
add
mov
cld
jae
cmp
adc
mov
mov
sbb
popl
imul
xchg
scas
ficomps
or
push
pop
dec
test
dec
sub
loopne
repz
cmp
aas
pop
clc
and
pop
loope
mov
outsb
ljmp
fdivr
sbb
or
cmp
imul
fs
sub
mov
and
jl
cmp
ds
mov
mov
cmp
movsl
out
add
and
push
xchg
hlt
jmp
ret
pop
js
add
ja
icebp
adc
popa
int
cmpsb
cwtl
inc
mov
sarl
leave
fwait
push
mov
insl
add
xor
mov
add
jns
call
add
sbb
add
dec
mov
sbb
jb
test
push
add
fildl
pop
push
stos
inc
add
adc
pop
jg
sbb
inc
testl
jbe
gs
mov
add
clc
mov
mov
sbb
push
sbb
insl
rolb
sbb
add
sub
jmp
jge
clc
rclb
stc
add
orb
xchg
mov
add
fadds
push
cmc
loopne
iret
rolb
jmp
fidivs
fbld
add
pop
cmp
sbb
dec
mov
add
push
sbb
or
arpl
xchg
nop
in
xchg
mov
sbbb
sub
out
add
sahf
popf
push
add
outsl
push
cmc
jae
inc
dec
fwait
out
add
mov
sbb
iret
add
xor
arpl
xor
or
add
cmp
aam
add
pop
mov
in
add
mov
sub
add
mov
xor
faddp
lcall
int3
hlt
jmp
ja
lsl
mov
jmp
jmp
cmc
mov
cmp
es
js
add
outsl
imul
out
push
mov
test
cwtl
loopne
in
jb
inc
cmp
dec
cs
or
divb
insl
add
data16
outsl
xchg
mov
pop
adc
sahf
cmp
insl
cwtl
pop
push
sub
ja
call
pop
mov
mov
roll
jmp
cmp
lods
shlb
or
lahf
lret
js
jg
add
push
add
out
add
movsb
push
jns
add
imul
cmp
enter
xlat
mov
fadds
add
push
dec
adc
cwtl
outsl
cmp
xorb
mov
out
ljmp
jns
add
bound
cmp
mov
add
and
add
fdivl
outsl
pop
add
and
aas
add
sub
xor
sbb
call
cmp
pusha
sub
push
add
inc
mov
shlb
fadds
jle
inc
pushf
and
push
cmp
movsb
lret
xchg
into
in
sbb
mov
inc
loope
dec
outsl
cmp
inc
add
addb
xor
daa
push
stos
add
loopne
jecxz
and
push
jp
and
dec
scas
stos
adc
pop
xor
sub
addr16
js
add
mov
stos
shll
xchg
std
outsl
orl
js
add
loop
jbe
dec
ljmp
test
dec
add
pop
decl
add
negl
jne
dec
out
ret
jmp
xchg
sbb
jne
les
rcl
cmp
insb
add
fcoms
mov
int3
cmp
sbb
inc
dec
sbb
add
test
andb
xor
sbb
loop
into
mov
ss
fmuls
mov
cmp
dec
mov
add
xorb
mov
stos
add
lea
pop
shlb
pop
add
pop
jl
lods
mov
rorl
xchg
add
aad
and
mov
xor
and
add
pop
fisubl
pop
mov
xor
xor
mov
dec
mov
mov
dec
in
adc
ljmp
cmp
insb
add
cmpsb
or
punpckldq
sbb
icebp
sub
clc
ret
cmp
loop
lea
add
mov
mov
pop
sub
jno
repnz
add
rol
bound
test
inc
fsubrs
mov
lods
inc
jmp
or
xor
jo
add
push
sahf
add
dec
lret
mov
cli
add
loopne
outsb
pop
mov
dec
imul
fisubl
iret
mov
or
sub
sub
je
xchg
xor
mov
add
rol
pop
scas
xchg
mov
add
mov
pop
xchg
push
shlb
es
add
sbb
insb
pusha
sahf
cltd
add
je
ljmp
pop
dec
pop
push
adc
cmpsl
in
mov
cwtl
dec
add
movsl
mov
push
add
mov
mov
mov
insl
jl
rolb
jge
add
xchg
adc
pop
mov
lods
sbb
adc
les
add
es
jae
push
pusha
jp
push
and
test
jns
add
pop
inc
in
xor
ficoml
mov
je
fs
pusha
ret
add
andb
push
push
mov
hlt
pop
out
nop
xchg
punpckhwd
cs
insb
push
add
sub
and
pop
sbb
or
sbbb
cmp
xor
fistl
lahf
incb
mov
and
mov
jle
add
cli
pop
mov
cmp
gs
loopne
mov
xchg
add
jae
push
cwtl
in
mov
jnp
xchg
ja
pop
add
dec
insl
outsb
shl
xchg
clc
roll
leave
adc
pusha
fwait
mov
push
dec
xor
add
movsb
hlt
mov
inc
add
dec
or
rdpmc
pop
mov
pop
inc
xor
push
repz
mov
jae
iret
jecxz
aas
and
pop
jb
cwtl
aad
push
jns
negl
and
mov
sbb
incl
or
ds
lea
fisubs
add
push
jnp
sub
arpl
inc
ss
out
xchg
cwtl
jb
test
push
or
iret
inc
mov
das
add
xchg
cmp
mov
pop
cld
push
add
push
testl
pop
outsb
add
sbb
imul
lods
ja
mov
push
aas
cmp
mov
bound
cld
sub
cmp
and
add
ret
cmp
mov
adc
lock
pop
aad
sbbb
loop
add
xchg
dec
xchg
add
testb
icebp
test
or
fbld
dec
xor
stos
incb
lcall
add
pop
jmp
xchg
add
xor
add
lret
sbb
lret
rcl
mov
inc
icebp
add
dec
nop
out
push
mov
aam
imul
call
cwtl
adc
lret
jle
add
mov
pusha
loope
and
sub
mov
add
mov
mov
vmread
mov
mov
popa
xchg
jbe
add
out
loop
push
sub
push
inc
push
lret
cmpb
pop
add
sbb
lea
lahf
sub
add
cld
xlat
xorb
aas
cmpsl
popl
roll
inc
pop
lret
out
icebp
imulb
xor
mov
clc
add
shll
cmp
cmpsl
push
add
out
push
cld
rcrb
or
push
add
inc
popa
sbb
ret
add
js
ja
mov
inc
jg
sti
cs
jp
add
mov
fnstsw
push
in
cmp
mov
pop
add
and
lods
in
jnp
mov
pop
addl
or
jge
cmp
add
mov
in
xor
or
and
les
out
adc
mov
and
insl
je
add
subb
xor
adc
adc
adc
test
add
pop
icebp
mov
ds
xchg
add
mov
jno
loopne
cmp
dec
mov
pop
inc
popa
inc
cmovle
fwait
outsl
ret
subb
cmp
cmp
xor
mov
dec
jecxz
out
add
ds
sub
push
add
scas
test
add
push
aad
adc
or
add
lods
rclb
or
lock
test
fdivl
mov
out
inc
sub
add
idivl
fldenv
sti
mov
pop
or
dec
je
mov
repz
jbe
or
sbb
out
add
stos
sahf
sbb
bound
push
jl
addr16
fptan
add
adc
xchg
movsb
dec
or
or
movsl
fsubrs
lret
jmp
add
or
int3
test
push
sbb
loop
imul
mov
lock
xorb
xchg
jl
mov
push
addr16
push
add
pop
mov
jge
add
push
rcrl
rolb
mov
mov
pop
hlt
in
add
adc
jle
movsl
jecxz
mov
das
push
mov
xorb
push
cmp
loope
mov
loopne
sti
mov
mov
je
mov
aam
mov
add
arpl
es
mov
mov
push
outsb
sbb
mov
jno
cmp
ret
jmp
data16
push
xor
mov
hlt
int
inc
fcoms
int3
sbb
sub
cmp
stc
add
fnsave
loopne
pop
add
test
scas
cmp
add
testl
movsl
xchg
mov
push
pop
add
pop
loop
call
imul
adc
mov
test
fcoms
cmp
lock
mov
cld
add
push
mov
add
inc
jb
cld
call
loop
mov
mov
daa
jp
outsb
inc
add
jbe
ds
sub
out
jb
adc
div
pop
add
adc
mov
rclb
cwtl
ds
mov
mov
outsl
hlt
bound
sbb
packssdw
sub
add
ret
test
mov
clc
out
xor
add
inc
cmp
sahf
xor
inc
jbe
xchg
mov
sbb
and
je
xor
add
and
cmc
add
xchg
aam
dec
and
add
pop
jbe
jge
into
std
in
ds
mov
jno
add
cmp
popa
sbb
jo
mov
push
stos
testl
das
dec
add
push
inc
inc
push
shrb
rcl
cmpxchg
adc
mov
ret
sub
add
add
xchg
xchg
movsl
dec
jnp
add
and
pop
inc
insl
add
icebp
inc
adc
test
or
add
jg
sbbb
roll
imul
or
out
or
out
aaa
shll
cltd
dec
jp
or
sbb
int
out
lret
lods
and
pop
mov
mov
jb
adc
sbb
adc
iret
outsb
nop
mov
add
jmp
test
leave
cwtl
out
loopne
jno
nop
add
and
add
scas
push
xlat
add
xchg
in
test
mov
enter
xchg
sub
jno
or
inc
dec
repnz
push
lock
mov
pop
pinsrw
pop
add
in
cmp
xor
xor
pusha
stc
rcr
or
jnp
mov
fists
pushf
mov
jbe
inc
sbb
out
insb
fidivrs
aad
xor
popf
sbb
daa
js
add
sub
enter
iret
add
cmp
arpl
mov
mov
push
das
call
xorb
lcall
iret
pusha
pop
mov
xor
jno
add
jns
push
dec
sbb
call
and
sub
push
enter
flds
sub
adc
and
push
insb
dec
mov
aad
in
push
jno
add
cld
ds
inc
cmp
js
scas
dec
mov
xbegin
flds
or
mov
movsb
xchg
popa
idivl
dec
sbb
sbb
int
cmpsl
iret
lock
cmp
pop
push
inc
sub
orl
jle
xorb
cltd
add
inc
aam
sbb
lods
rclb
arpl
lret
movsl
pop
outsl
imul
movl
rol
jne
shr
pop
incb
in
mov
cltd
andb
stos
sbb
mov
push
xchg
roll
sbbl
xchg
mov
ss
mov
jl
clc
enter
mov
adc
or
insb
imul
pop
ss
mov
mov
aad
xlat
jmp
bound
add
negb
lods
mov
mov
mov
adc
lcall
insb
add
xchg
lds
mov
inc
jl
xchg
pop
sub
sbb
mov
add
xchg
loope
adc
push
add
fldcw
pop
mov
add
popf
mov
adc
xor
aaa
sbb
mov
stos
adcl
clc
xchg
and
xchg
dec
sub
loopne
inc
addr16
jle
insl
pop
adc
leave
cmpsb
test
pop
push
popa
sbb
push
ret
pop
stos
gs
push
sahf
adc
out
mov
cli
fnsave
add
shll
nop
sub
fsubl
mov
xor
je
inc
add
les
dec
dec
mov
add
in
lea
loop
call
jo
orb
xlat
xchg
pop
addl
cmp
mov
cli
cltd
adc
imul
fwait
push
in
lods
jae
test
shl
jb
hlt
sbb
push
dec
add
lcall
add
int3
mov
fwait
scas
testb
pop
aas
and
pop
std
cld
push
adc
jbe
push
mov
mov
pop
stc
inc
add
xchg
test
adc
and
jl
adc
sti
es
in
test
xchg
inc
add
add
and
cmp
add
xor
dec
sub
les
addr16
add
stos
push
sbb
rcrl
outsl
repnz
shl
fldl
sbb
int3
daa
cmp
push
add
cmc
hlt
add
dec
clc
pop
xor
inc
dec
bound
int3
in
adc
pop
sub
pop
xchg
push
push
insl
add
addl
jo
add
and
mov
std
dec
add
lcall
pop
sub
pop
pushl
add
ds
add
sbb
je
iret
cmp
data16
fwait
add
aam
add
bswap
push
loope
push
push
add
outsl
int
popf
dec
mov
dec
mov
icebp
test
xchg
call
aaa
ror
out
add
sarl
das
fbld
movl
imul
inc
mov
movsl
fs
and
sbb
js
loopne
dec
and
sub
cwtl
pushf
sbb
xor
loopne
dec
add
lock
notl
out
push
ret
imul
push
jmp
cmp
rolb
push
xchg
pop
jg
cmpsl
ljmp
add
fucomip
imul
test
rorl
add
imul
jnp
clc
cmp
pop
test
xor
cmp
pusha
cmp
cwtl
repz
pushf
push
and
imul
jnp
xor
test
ret
xchg
cwtl
adc
ljmp
push
in
mov
scas
test
mov
bound
lds
fcomps
cmpsl
xchg
pop
loopne
jecxz
cmp
outsb
ljmp
add
imul
xor
not
add
cmp
test
adcl
mov
mov
pop
add
ljmp
lahf
sbb
out
xchg
sub
jg
cmp
push
jb
add
mov
rolb
dec
xchg
movsl
repz
cmpsb
es
ltr
ja
mov
ret
pop
and
loopne
dec
scas
aaa
add
movsl
xor
dec
mov
jo
clc
js
add
fs
test
add
or
pop
push
lds
pop
ffreep
mov
setge
and
push
adc
mulb
sub
dec
mov
xlat
roll
mov
fst
adc
add
pusha
mov
aam
add
ficompl
pop
push
subb
cs
ljmp
lahf
cmpsl
pop
jl
sbb
mov
scas
cmp
dec
and
dec
sbb
or
stos
pop
cmpl
or
nop
jge
cwtl
out
loop
xchg
es
aas
add
add
sbb
rclb
inc
call
ret
sahf
inc
mov
and
ljmp
add
sbb
dec
jge
cmp
push
push
fldcw
add
test
add
cmp
pop
fistl
jl
bound
sub
add
fs
push
repz
or
fimull
rcrl
fisttpl
popf
orb
pop
push
inc
rclb
fstps
pop
add
xor
add
andb
push
pop
xchg
cmp
add
inc
mov
arpl
pushf
leave
fldl
je
pop
sbb
pop
test
pop
jo
loope
or
call
out
jb
sbb
mov
js
push
push
xor
add
test
ret
and
add
sub
clc
add
xchg
push
dec
inc
cmp
add
iret
adc
out
adc
dec
xchg
xor
sbb
jge
loope
mov
sbb
cmp
lcall
cmp
xchg
add
pushf
lret
jmp
cld
mov
push
cmpb
inc
test
pushl
sarl
xchg
jb
mov
push
enter
mov
test
fistpll
add
xor
jo
lret
in
subl
pusha
push
cmp
roll
in
cltd
loop
pop
xor
adc
les
xchg
fincstp
in
add
int3
sbb
cs
pop
sbb
jle
and
std
xchg
fidivl
mov
sub
loopne
xchg
pop
xchg
test
cli
mov
add
ds
stos
sbb
mov
mov
mov
pop
adcb
add
iret
stos
dec
add
aas
test
sbb
enter
adc
inc
add
pushf
dec
lds
mov
jo
insb
ja
push
jnp
cwtl
mov
adc
add
mov
inc
movsb
xorl
lods
dec
stos
pop
mov
jl
dec
je
cltd
push
add
cs
out
in
mov
rcl
pop
cmp
in
add
add
xchg
cmp
out
add
adc
shrl
or
cld
jmp
inc
inc
lahf
add
pop
fdiv
push
stc
push
out
jns
add
popf
pop
xor
add
leave
out
push
inc
movsl
xor
test
add
xor
lahf
add
nop
das
or
xor
xor
pop
shlb
mov
lea
add
stos
pop
mov
cmp
xchg
add
push
imul
pop
testb
xlat
out
cmp
fiaddl
jmp
movl
and
dec
ret
out
lock
pushf
test
xlat
add
mov
sub
out
dec
add
inc
fistpl
scas
inc
lret
inc
fstp
or
out
cmpb
jl
outsl
xchg
loope
cli
test
insl
push
pop
enter
sub
adc
xor
dec
fdivrl
je
lea
xchg
pop
add
adc
mov
mov
in
mov
sbb
lock
rep
stos
add
pop
cltd
inc
sarb
add
outsb
icebp
rolb
or
fldcw
cmp
lcall
sub
xor
clc
dec
inc
rcll
call
or
push
sbbb
xadd
fdivrl
dec
mov
or
cmp
cmp
cltd
push
sbb
sbb
sarl
mov
stos
stos
jbe
mov
add
movsb
movsl
xchg
dec
bound
dec
mov
mov
insb
ljmp
lahf
add
test
divl
sub
mov
add
add
in
dec
mov
or
dec
dec
lcall
lods
imul
in
es
ss
pop
jp
push
jle
add
rorl
out
and
mov
movsb
popa
mov
aaa
lahf
es
and
add
movsl
icebp
jno
out
cmp
cmp
ficomps
cmpsb
test
in
xor
xor
lret
lods
out
mov
xchg
jg
adc
shlb
fstpt
mov
cmp
enter
jo
add
aas
pop
loopne
pop
stos
and
dec
push
test
mov
mov
add
or
cmp
sub
mov
mov
std
jg
mov
push
mov
add
inc
add
cmp
outsb
add
rcrb
fmuls
je
mov
inc
rcrb
or
add
loope
inc
repnz
enter
in
aam
xlat
pusha
lret
pop
jb
movsb
es
jbe
xchg
jmp
add
dec
push
addb
rclb
das
add
je
dec
xor
es
andl
xor
jmp
xchg
into
pop
push
mov
dec
pop
cmp
xchg
mov
mov
shrb
or
push
jno
ss
insb
sub
call
addb
fistps
mov
mov
stos
inc
mov
pop
hlt
mov
nop
xor
outsl
cmc
dec
xchg
sbb
outsb
vmwrite
bound
xor
int3
lcall
stc
mov
pop
cmp
mov
repz
pop
jo
push
cld
adc
ret
sbb
add
xchg
lds
fidivl
sbb
fstp
add
pop
test
ret
add
out
mov
cli
scas
mov
inc
sbb
subb
lret
dec
int
pushf
pop
mov
lcall
in
sbb
ja
roll
stos
pop
daa
mov
call
jecxz
add
in
jle
jo
xchg
div
mov
add
sbb
jp
std
inc
in
clc
push
lea
ror
dec
push
fsubp
sub
fstpl
add
pop
xchg
cmpsb
out
sbb
mov
inc
add
imul
sub
pop
xor
orb
loope
add
out
mov
flds
xchg
jnp
mov
sub
loop
inc
sub
add
mov
xchg
mov
add
es
outsb
or
rolb
out
loop
idiv
inc
add
arpl
fcomip
loopne
in
add
test
pushf
sbb
hlt
ds
mov
faddl
addr16
ret
add
imul
rorb
adc
add
inc
ljmp
popf
mov
enter
les
pop
sti
jno
stc
add
pop
movsb
nop
pop
xchg
add
sbb
rol
dec
mov
jnp
mov
ljmp
cmp
inc
stc
jp
inc
les
xor
in
pop
ret
test
lock
jo
std
add
aad
xchg
add
stos
in
push
or
shrl
add
js
push
pusha
mov
fsubl
add
xchg
xor
aas
jecxz
loope
and
jbe
add
push
fmull
out
add
int
add
push
inc
push
clc
or
cmpsb
and
adc
cwtl
cld
cmpsl
or
inc
jb
rclb
mov
fwait
ja
cwtl
js
xchg
add
mov
out
sbb
push
mov
adc
pop
pop
shll
mov
fcmovne
out
push
xor
mov
ljmp
add
push
adc
scas
lock
mov
flds
and
stos
add
int
fwait
js
xor
ret
adc
add
out
mov
add
sti
popa
xor
lcall
xlat
sbb
ret
stos
pop
adc
shlb
add
stos
jmp
cmc
add
sbb
pop
out
add
mov
pop
js
add
pop
sbb
test
push
mov
loopne
leave
mov
popa
sarb
add
test
orb
lock
add
dec
pushf
aad
call
loopne
jmp
push
and
jae
shlb
add
dec
inc
aas
fwait
popf
divl
popa
add
push
mov
loopne
lret
cld
clc
jno
xchg
sbb
xlat
imul
xor
push
add
xor
mov
cmpsb
add
mov
jle
add
dec
roll
add
and
mov
sbbl
jns
add
and
push
add
sbb
rol
and
sbb
push
dec
and
add
stos
xor
clc
inc
testl
jle
inc
xchg
pop
ss
mov
loopne
outsl
int3
add
add
ret
sti
add
pop
add
xchg
es
fildll
add
pop
in
dec
pextrw
cwtl
jle
add
cmp
add
sbb
or
addr16
adc
cs
dec
and
int3
xor
fsubp
adcb
or
idivb
jl
push
enter
add
cmpsl
fcmovne
mov
mov
addb
ss
and
or
ret
cs
add
mov
xchg
add
xor
cmp
add
sahf
mov
cmp
jnp
pop
sbb
mov
ja
xlat
jnp
inc
dec
pop
shll
and
jmp
xchg
rolb
push
inc
add
jmp
push
aaa
add
dec
sahf
fcompl
or
push
xor
mov
pushf
test
push
xchg
xchg
into
nop
das
pop
sbbl
lret
jbe
add
ficoml
add
rorl
add
in
or
push
shlb
inc
es
sarl
pushf
mov
add
dec
adc
add
add
add
jl
in
jno
pop
push
and
mov
gs
test
stc
fildll
out
xchg
fcoml
cmp
add
push
cmpsb
push
cltd
lahf
add
mov
or
movsb
testb
ror
jge
add
aaa
xor
add
inc
js
add
rorb
pop
stos
adc
fldenv
pop
pusha
cmp
jb
and
out
add
pushf
and
add
lea
mov
pop
sbb
enter
lods
push
and
les
and
jae
mov
ret
add
inc
repz
dec
mov
fdivrl
mov
faddp
push
mov
pop
adcl
add
stc
fs
sub
dec
adc
and
adc
sub
lahf
add
and
dec
jb
fwait
add
mov
xchg
adc
movsl
sub
and
cmp
mov
xor
pop
and
add
pop
fists
add
push
mov
add
inc
mov
sti
jecxz
mov
push
testl
add
or
popf
mov
ret
dec
out
int
in
fidivrs
add
jno
dec
add
das
pop
mov
nop
mov
xor
and
pop
jae
fildl
xorl
add
pop
cmp
xchg
shl
cmpsb
sbb
pop
loopne
xor
lods
pushf
mov
pop
imul
mov
sbb
add
in
jecxz
sub
mov
fwait
int3
loop
mov
sub
mov
filds
ret
std
stos
xor
pushl
stos
add
and
xchg
lods
mov
lahf
add
jb
fwait
add
arpl
add
push
sbb
dec
inc
add
bt
fmuls
sti
mov
inc
add
sub
dec
add
pushf
add
mov
add
fistpll
repz
sti
loope
nop
dec
add
mov
rcrl
or
lods
pop
pop
outsb
add
std
fiadds
mov
add
or
int
add
mov
addl
movsl
mov
jae
cltd
test
mov
pop
pop
aas
push
cwtl
shll
mov
and
pop
mov
fsubrl
xor
lret
mov
and
push
mov
pop
add
mov
sbb
mov
hlt
add
fcmovnu
bnd
add
sbb
shlb
add
mov
stos
scas
mov
cmp
gs
in
pop
cmp
jge
sbb
xorb
sbb
repnz
cmpsb
sahf
cltd
nopl
xchg
mov
push
adc
filds
std
xchg
cmp
popf
and
xor
sub
add
pushl
xor
jle
pop
sti
adc
mov
pop
div
mov
dec
repz
and
add
add
mov
jp
mov
daa
pop
in
cs
adc
andb
push
xchg
mov
frstor
mov
cmpsl
popf
or
rolb
es
cld
mov
cmp
cs
fsubrl
fcmovne
add
mov
pushf
lea
rol
add
adc
and
cmpsb
jp
add
lds
or
xchg
scas
mov
lods
add
pop
outsb
shl
mov
lods
btc
lahf
ret
aas
int3
add
in
stos
dec
lcall
test
lock
sbb
mov
cmpsb
cmpsl
and
es
test
lret
and
xchg
lea
mov
dec
sbb
mov
inc
lock
cs
add
es
add
andl
adc
call
out
mov
or
add
cwtl
sti
xchg
les
dec
xor
hlt
add
sub
adc
stc
jnp
call
cli
sbb
out
push
subl
test
dec
lcall
push
aam
mov
lods
ret
in
cwtl
jbe
pop
jb
icebp
sub
xchg
aaa
aam
and
add
sbb
inc
or
out
push
sub
mov
dec
into
dec
add
aad
pop
and
add
mov
add
mov
pop
add
lods
add
mov
lret
jecxz
cmp
mov
cmp
adc
scas
adc
add
dec
test
and
and
add
call
jae
and
push
aas
mov
pop
movl
pusha
bound
mov
sbb
mov
mov
inc
mov
xor
inc
mov
sbb
sub
adc
stc
repnz
cmp
lods
add
in
loop
mov
stos
add
pop
pop
shrb
lods
add
ret
cmp
sbb
mov
add
inc
lcall
test
aam
mov
int3
mov
cli
in
das
add
mov
out
push
cmp
orb
pop
outsl
movsb
int3
add
cmpsb
jne
xlat
adc
fadds
dec
pop
add
jbe
add
fbld
push
mov
cmpsb
adc
lock
vmread
sbb
inc
adc
ret
clc
push
inc
fidivl
cmp
pop
xor
dec
mov
mov
dec
ljmp
out
push
jmp
cs
scas
jle
cmp
add
or
jb
aaa
or
push
jg
pop
xor
xchg
popl
add
mov
cmp
add
mov
in
add
shrl
arpl
and
nop
loop
or
ljmp
mov
negb
jmp
inc
bound
loopne
add
pop
jle
int3
test
call
mov
mov
ljmp
jp
fs
jmp
icebp
xchg
or
add
push
xchg
pop
mov
sbbb
sub
add
inc
sbb
pusha
push
add
jl
aas
cmp
stos
sub
add
cwtl
lcall
add
add
add
jmp
daa
js
add
jmp
fildll
pop
rcrb
jp
jp
jle
lret
adc
loope
or
lock
fwait
or
xchg
insb
xchg
addl
inc
cmc
js
lock
je
pslld
xor
hlt
push
mov
and
loope
icebp
lods
or
shlb
jp
adc
or
pop
mov
or
inc
adc
jnp
add
sub
jns
mov
cmp
push
inc
ljmp
add
lea
ret
sub
inc
sub
add
inc
mov
test
sbb
adc
mov
adc
push
inc
bnd
add
je
icebp
les
lret
adc
pop
nop
mov
inc
jp
jo
mov
fbstp
inc
mov
inc
xchg
or
mov
push
adc
fsubrs
hlt
test
hlt
xchg
jne
or
push
jno
jno
inc
jo
sub
sub
xor
insb
loop
leave
cmp
cmp
hlt
or
lcall
xchg
add
add
xchg
mov
test
ret
cmp
in
inc
pop
dec
sbbl
mov
adc
pop
or
push
and
aas
jp
add
xor
cmp
rolb
shlb
aaa
add
xchg
lea
xchg
clc
repz
in
sub
inc
mov
pop
mov
aas
fiaddl
xchg
mov
mov
or
jp
sub
mov
pop
lock
cmpb
sub
addr16
stos
inc
jb
jae
jl
pop
add
hlt
cmp
adc
cmp
dec
xchg
cs
push
cld
add
mov
cmp
xor
mov
test
xchg
cmp
cmc
sub
cmp
cltd
or
mov
jne
add
std
adc
mov
adc
jle
add
or
cmpsb
sub
add
jns
repz
mov
iret
repnz
xor
testb
rol
jge
add
cwtl
mov
je
jmp
dec
rol
je
cmp
xchg
pop
ret
movl
sub
sbb
scas
sub
and
pop
pop
add
or
loopne
nop
addr16
push
testb
addr16
cmp
jns
inc
js
inc
scas
arpl
sub
aas
loopne
push
inc
sub
jb
and
pop
mov
push
fsubr
cmp
jle
add
mov
sbbl
add
push
pop
bound
jae
xor
test
mov
or
icebp
add
mov
add
ficoml
adc
popa
sub
je
cmc
jne
lock
jmp
dec
loopne
mov
add
out
xchg
adc
jmp
jmp
ret
in
and
pop
cmp
test
inc
popa
xchg
jne
cmpsl
or
mov
inc
sub
ljmp
add
pop
mov
sub
es
lcall
sbb
push
and
jmp
xlat
cld
add
sub
add
movzwl
les
sbbb
mov
lods
adc
push
in
jno
stos
fidivl
cltd
or
ss
int3
es
stos
cld
cmp
stos
sub
jg
inc
loopne,pt
mov
adcb
inc
in
jnp
xchg
add
adc
lahf
rol
push
jb
clc
push
pusha
ret
adc
ss
adc
lret
cmp
cld
dec
cmp
aas
cltd
cld
add
repnz
fs
std
inc
aaa
sub
and
xchg
dec
mov
jns
push
mov
arpl
push
mov
imul
ds
ja
scas
es
inc
jp
jmp
mov
and
adc
lods
nopl
mov
jmp
test
sub
ds
jl
add
test
cli
mov
jne
push
sbb
lea
jo
or
scas
push
jl
pusha
aas
push
mov
inc
mov
add
lds
aad
in
mov
cmp
dec
ret
and
adc
int3
xor
popa
rorb
rolb
pop
pusha
inc
push
add
jg
xchg
call
cmp
loopne
pushf
pop
les
xor
jl
fistl
adc
jnp
fsub
outsl
and
pop
adc
jp
js
inc
jle
add
inc
or
nop
loopne
or
clc
roll
inc
enter
js
outsb
xchg
push
dec
inc
jnp
add
cli
cs
sbb
mov
jle
push
mov
adc
out
mov
mov
adc
sub
mov
jo
xor
xchg
dec
inc
out
mov
sti
aad
push
push
jg
shlb
cmpb
int3
lods
inc
data16
add
adc
cmp
addb
cld
hlt
xchg
pop
jg
cmc
lcall
insl
push
jo
and
adcb
jle
and
repnz
add
inc
mov
adc
into
in
test
fcoml
cmp
push
cmpsl
icebp
lock
ljmp
enter
enter
or
mov
in
mov
mov
or
push
add
dec
pop
std
inc
cmp
and
stos
adc
in
sbb
rcrb
into
inc
push
jnp
jae
pop
mov
jp
jnp
add
test
push
cs
aam
pop
mov
sbb
mov
insb
loop
dec
fisubl
jb
or
fcoms
cmpsb
clc
js
fs
dec
inc
jle
cli
dec
mov
push
inc
fistl
jne
and
data16
cmpsl
add
mov
cmpsl
cmc
add
aad
cmp
mov
cmpsl
mov
cmp
xchg
movsb
fsubp
cmp
push
test
xchg
inc
jle
add
mov
mov
xchg
xchg
sbb
fwait
sub
inc
pushf
in
cmpsl
sub
ss
nop
add
lret
add
jmp
cld
cmp
mov
mov
inc
imul
stos
xchg
xor
push
inc
lods
nop
adc
or
inc
and
pop
cmpb
sbb
out
sub
ficompl
sbb
inc
cmp
in
pusha
add
adc
cmc
mov
clc
add
mov
push
or
ret
in
and
icebp
iret
adcl
mov
cmp
in
push
imul
add
nop
inc
aas
fistpll
xchg
pushf
imul
sub
dec
mov
jno
js
call
pop
and
cmp
or
xchg
lock
dec
add
pop
xchg
cmpsl
inc
out
cs
or
jmp
sub
es
mov
mov
movsl
adc
pop
push
add
jmp
mov
popa
ret
sub
xchg
aas
stc
aad
es
cmp
cld
xor
push
cmc
inc
pop
cmc
andb
mov
cmp
dec
ljmp
pop
push
add
dec
mov
or
inc
xchg
adc
ds
pop
dec
pop
lret
insl
adcb
into
pop
jmp
pop
ljmp
mov
xchg
mov
adc
pop
mov
mov
pop
xchg
sti
jl
jne
mov
pop
aas
addl
sub
add
rcrb
add
lds
xor
mov
aad
add
fldt
jg
add
mov
mov
push
notb
icebp
lods
addb
insb
cmpsl
stos
bound
sbb
cmp
cld
or
fsts
add
sti
and
push
aam
ds
add
inc
in
lret
dec
mov
out
std
loopne
iret
lods
fs
inc
loop
ds
xchg
mov
orb
mov
fld
leave
icebp
sbb
fadd
add
rcl
adc
mov
mov
dec
data16
or
inc
aad
arpl
in
add
sub
out
add
lahf
mov
pop
push
jl
insb
cs
or
xchg
repnz
dec
daa
cmp
ds
or
or
or
in
add
pop
xchg
mov
sti
sbb
ret
jo
mov
sbb
sahf
add
dec
dec
iret
mov
test
jecxz
lret
add
ficoms
sarl
aas
mov
shl
lcall
jle
bound
ds
pop
lret
and
testl
add
ret
loopne
and
ror
gs
mov
jge
lretw
xor
loopne
in
lahf
mov
and
dec
and
out
outsb
shlb
mov
iret
cli
shr
and
sti
sti
xor
xchg
push
add
mov
mov
xor
dec
add
mov
iret
cmpb
mov
jg
add
sub
xchg
outsl
xchg
adc
ss
add
sub
add
add
and
cld
pop
out
cmp
ror
test
add
lds
and
sub
call
pop
add
jmp
push
les
sub
fcompl
test
inc
cmpsl
xor
arpl
fcoms
and
pop
ret
rcll
leave
out
aad
test
lea
cmp
mov
push
mov
sbb
adcb
pop
add
jo
lea
fildl
push
or
xor
xchg
popa
aaa
adc
xor
adc
lock
dec
inc
cmp
orl
inc
scas
push
icebp
or
pop
pop
xchg
nop
or
pop
sbb
pop
push
and
dec
test
cmpxchg8b
sbb
push
sbb
mov
mov
pop
int
mov
les
imul
int3
popa
insl
icebp
leave
jne
je
bound
inc
outsb
out
jns
icebp
hlt
push
imul
or
sub
test
popa
inc
or
shrb
insb
inc
adc
loopne
mov
loopne
lret
adc
inc
test
cmp
pop
gs
cmp
add
movsl
dec
cmp
adcb
or
push
inc
push
mov
nop
sub
iret
jne
