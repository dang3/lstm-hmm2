sbb
add
mov
pop
lods
fdivrl
sub
add
jecxz
sti
cmpsl
xchg
sub
mov
scas
bound
fwait
into
cmpsb
xchg
push
inc
cmpl
xor
xlat
mov
inc
frstor
jg
cmpsb
pusha
insb
push
mov
xchg
jbe
sub
jle
fdivrl
push
and
lds
push
ret
inc
loop
out
ss
bound
enter
mov
mov
fists
sbbb
mov
repnz
div
jmp
inc
pop
fimull
sbb
sub
sbb
std
sahf
push
test
loop
cmp
ret
or
pop
fildll
jbe
cmpsb
imul
test
jne
rolb
pop
or
lahf
cmpsl
sub
mov
pop
cmp
add
sub
jle
mov
cmpsb
mov
jnp
xor
and
inc
sub
leave
int3
test
ficomps
push
orl
clc
inc
adc
fs
cmp
jmp
cs
mov
dec
cmp
xchg
xchg
sbb
cmpl
shll
jp
mov
js
adc
cs
add
es
xor
fiaddl
lods
addr16
pushl
xor
sbb
jns
inc
mov
into
or
or
insb
call
lds
sub
imul
sbb
inc
pop
pushf
dec
push
cs
jl
js
inc
cmpsb
xorl
jp
cmc
pop
test
dec
jmp
pop
fsts
hlt
jb
xchg
es
lret
mov
dec
jae
lods
dec
xchg
repnz
pop
test
in
mov
cmp
shrl
cltd
xchg
mov
xchg
jp
jno
cmp
jecxz
sbb
mov
mov
mov
dec
sub
lea
dec
outsl
psraw
daa
sbb
sti
decl
adc
icebp
cltd
push
nop
push
popf
sub
jb
sbb
jmp
xor
xor
or
mov
jecxz
imul
push
int
sbb
cmp
jo
sbb
sbb
insl
ja
daa
cmp
push
std
xchg
insl
add
dec
adc
std
popf
into
dec
cld
enter
pop
out
pop
subb
fsubrl
mov
dec
jmp
lods
ja
nop/reserved
in
movsb
pop
mov
jecxz
dec
cmpsl
cli
shll
stos
ret
push
imul
sti
in
mov
outsl
jae
or
iret
xchg
aad
cmpsb
jle
or
ror
mov
dec
stos
dec
jns
pop
out
mov
addr16
ja
lret
or
pop
dec
add
and
leave
pop
out
or
mov
jbe
xchg
shlb
mov
aaa
xor
mov
pop
pop
xor
fimuls
loopne
lods
cmp
mov
adc
inc
and
cmp
jp
adc
push
jne
mov
sub
repz
xchg
rclb
xchg
inc
mov
push
dec
inc
cmpb
pop
or
adc
mov
mov
push
int3
lret
mov
imul
fcmovne
out
in
out
pop
in
cmpl
and
test
fdecstp
fdivr
add
pop
testb
jns
out
dec
adc
dec
sbb
mov
jno
jp
roll
xor
aam
sbb
jp
in
fldt
test
jne
ss
ja
shlb
jb
clc
mov
lds
push
hlt
xor
fs
aad
ja
jp
dec
scas
cs
fcoms
dec
lahf
aad
jmp
pop
jne
ror
sub
jno
bound
int3
out
ljmp
nop
in
xchg
popf
sbb
loope
pusha
test
jmp
loopne
jne
pop
gs
mov
or
lret
push
fld
push
pusha
mov
push
lcall
inc
fstl
inc
lock
imulb
iret
sbb
loope
pop
cmp
in
orl
inc
mov
outsb
std
cmp
push
icebp
mov
or
sub
leave
rcrl
or
or
int3
and
sbb
cld
jnp
xchg
xchg
and
jle
sbb
jbe
adc
xchg
mov
in
mov
fisubrs
pop
daa
iret
enter
sbb
cmc
xor
adc
dec
or
es
xchg
cs
mov
mov
inc
adc
out
push
in
mov
ss
xor
inc
sarl
pushf
jg
mov
int3
popa
xor
pop
jns
lcall
mul
inc
push
lods
adc
jnp
push
pop
mov
jo
in
sub
outsb
leave
adc
push
lods
cld
push
test
mov
adc
push
pop
mov
mov
xchg
call
pop
shrl
ficomps
and
lods
cmpl
jo
xchg
inc
rorl
inc
ja
mov
adc
jne
and
mov
pop
push
pushf
cmp
jo
mov
mov
cmpsb
insl
cmp
movsl
pop
pop
out
mov
and
fidivrl
fdivp
jecxz
push
insl
sbb
dec
mov
sahf
lds
lock
jmp
push
jecxz
adc
ljmp
cmp
cmp
into
mov
push
aas
jecxz
cltd
out
popf
cwtl
ret
ret
mov
mov
dec
std
xchg
push
sbb
aaa
push
cmp
in
mov
daa
scas
cwtl
mov
ds
xchg
mov
lahf
mov
dec
sub
sub
dec
aam
xorb
dec
scas
push
mov
mov
mov
cli
xor
jg
xor
stos
and
std
sbb
pop
dec
icebp
scas
add
mov
mov
mov
imul
lea
es
or
mov
outsl
es
push
mov
rorl
popw
sbb
xor
lcall
xor
or
push
movsb
or
cmp
dec
je
mov
jl
adc
ds
popf
inc
pusha
subl
ja
and
pop
dec
ret
std
jl
pop
and
push
fmull
push
lret
inc
call
xchg
lods
cmp
mov
pop
add
faddl
xchg
and
dec
aaa
ds
iret
pop
xchg
mov
xchg
data16
jns
enter
bound
adc
insb
mov
inc
push
push
sub
arpl
jb
imul
ljmp
loopne
fiaddl
jle
push
mov
sarl
loope
adc
add
cmp
sub
aas
mov
lcall
pop
xor
fwait
mov
jne
pop
sbb
and
dec
push
or
out
sbb
push
out
pop
insl
fcomp
jge
inc
std
adc
rcrb
js
aas
jb
push
pop
inc
arpl
call
ss
push
std
xchg
shr
dec
xchg
sub
jecxz
jl
bound
movntps
adc
scas
inc
or
es
lock
jae
hlt
je
fsqrt
push
xor
fdivrs
xor
lcall
add
adc
negb
rol
scas
aas
imul
xor
bt
lods
loope
bound
mov
sar
pop
sbb
clc
inc
arpl
xchg
ss
mov
les
mov
ret
mov
xchg
iret
mov
pusha
aaa
ds
and
mov
bound
cmp
xlat
mov
jecxz
fsub
rcrb
adc
add
dec
into
jno
mov
mov
jbe
out
aas
stos
cwtl
sahf
cmc
iret
lock
cmp
sub
jne
aad
jne
ret
out
hlt
les
xchg
imul
adc
jg
push
adc
lea
cld
or
sub
cmpsl
jp
push
dec
lods
and
jmp
xchg
inc
push
xchg
loope
mov
pushf
ret
lods
jecxz
push
int3
xor
addr16
mov
sbb
xchg
dec
mov
add
jmp
test
jmp
xor
sub
loopne
loop
in
sbb
jmp
int
xchg
std
pushf
xchg
mov
daa
and
ss
sbb
out
or
lods
mov
fadd
push
push
repnz
pop
xchg
popa
cmc
enter
jmp
pop
dec
in
mov
lds
jo
mov
sti
mov
jp
adcl
xchg
cld
jnp
stos
cld
jno
sbb
add
icebp
xor
pop
push
pop
data16
jb
je
push
out
push
or
movsb
lcall
in
push
in
mov
outsb
enter
push
lcall
mov
lcall
inc
test
adc
pop
fisubs
bound
pop
sub
cmp
movsl
lods
adc
aas
es
cltd
pop
daa
test
lds
sbb
fmull
lock
or
or
jo
sarb
pop
jne
dec
into
jo
inc
cltd
push
fdivrl
jge
xor
cs
clc
ja
in
call
xlat
pop
pop
and
jp
and
clc
pop
mov
mov
cmp
pop
int
jno
pop
ss
or
repnz
je
pop
mov
aam
inc
adc
sti
or
inc
les
bound
das
js
bound
inc
mov
mov
mov
sub
and
xchg
and
test
cmpsb
pop
je
outsb
es
popa
lock
call
out
loope
mov
dec
into
add
ret
nop
out
loope
jae
lea
pop
hlt
mov
jp
mov
fsubs
or
or
push
push
sbb
inc
cmp
loope
scas
sti
dec
cmp
push
push
leave
or
xchg
lds
aad
mov
movsb
cmpsl
test
xchg
add
aad
sbb
inc
insb
sbbl
mov
mov
stos
std
sbb
lahf
mov
iret
fs
inc
sbb
insb
and
mov
push
ds
jne
aas
pop
enter
addr16
push
cs
cmp
cmp
fdivrl
xchg
mov
ja
pop
sub
mov
mov
sbb
or
lds
sub
xor
mov
out
and
sub
ret
add
std
imul
flds
popf
cmpsl
cmpsb
xchg
inc
jne
arpl
inc
push
es
adc
in
cltd
testb
dec
xor
clc
loop
inc
and
pop
dec
jmp
gs
roll
dec
cs
nop
jmp
push
test
sub
adc
jb
in
sbb
mov
jbe
sub
adc
pusha
mov
pusha
sub
mov
cmp
adc
rcrb
mov
mov
xchg
mov
lock
add
pusha
rol
aas
sub
fs
cld
test
lods
mov
ret
shr
inc
dec
xchg
push
dec
shl
outsb
fsubs
cmp
mov
mov
fidivrl
lds
push
lea
mov
push
popf
pmovmskb
xlat
xchg
xchg
jmp
in
inc
push
dec
mov
push
pop
insb
mov
int
push
stos
or
nop
sbb
mov
push
mov
imul
adc
inc
fcomp
scas
mov
es
adc
gs
cmpsl
mov
mov
out
xor
je
js
iret
sbb
in
sbb
hlt
pop
mov
adc
pop
or
or
jl
imul
aas
jo
fists
out
and
scas
fnstsw
in
sub
and
mov
stc
call
sbb
test
push
or
fbstp
daa
sub
loopne
mov
popa
cld
push
push
or
xor
push
sub
dec
xchg
rcr
fcmovnb
pusha
hlt
and
out
out
pop
xor
ret
mov
out
inc
in
or
arpl
push
in
outsl
or
mov
lock
mov
sbb
arpl
push
mov
dec
popa
sti
mov
cmp
mov
lret
push
pop
dec
or
jmp
push
mov
lret
jne
icebp
xchg
cld
or
sub
jecxz
or
mov
fs
jo
and
mov
lret
mov
mov
into
rcr
arpl
push
loop
jns
insb
jecxz
popf
movb
outsb
xor
imul
out
lds
into
jmp
dec
insb
bound
popf
push
cmp
mov
out
mov
lret
in
push
inc
push
adc
add
mov
add
push
and
fsubrs
push
orl
sbb
add
pop
mov
mov
into
sbb
dec
xorb
or
jg
imul
pop
fld
orl
mov
push
cs
mov
pushf
cmp
cmpsl
xor
insl
test
gs
fucomip
sub
jae
sbb
sbb
push
xor
orb
clc
lahf
iret
cld
sbb
test
sub
stos
mov
test
inc
loopne
push
jmp
mov
sub
inc
test
mov
out
insb
cmp
cmpsb
test
stos
pop
push
lret
pop
inc
xchg
testl
mov
push
push
jno
fistps
mov
mov
aad
cmp
out
mov
outsb
pop
sub
pop
mov
xchg
mov
pop
mov
and
mov
cmp
mov
mov
dec
mov
or
das
mov
jnp
ds
in
mov
lret
adc
sub
arpl
adc
jns
inc
cltd
nop
aas
aaa
stos
dec
fnstsw
push
pop
cmp
pop
pushf
push
imul
sbb
mov
ds
test
icebp
fwait
adc
fistps
jbe
cmp
aam
and
fs
adc
mov
mov
cs
icebp
popa
mov
jbe
lahf
mov
inc
mov
or
and
lds
xchg
mov
xchg
push
repz
pop
dec
mov
jne
pop
push
xor
mov
enter
nop
xchg
pop
pop
sbb
jo
pop
movsb
add
stc
pop
pop
dec
jne
and
cmp
mov
mov
or
pushf
in
and
pop
sbb
inc
mov
idivl
xchg
dec
xchg
jb
aaa
sub
pop
stos
xlat
pusha
jo
fidivl
xchg
es
or
and
xchg
mov
nop
pushf
push
daa
sbbl
test
call
mov
sub
ss
mov
jge
xorl
loope
inc
roll
test
xchg
cmp
in
rcl
rorl
sbbb
sub
fildll
push
mov
jo
push
movsl
lock
int3
mov
push
fdivs
pop
mov
cmp
sti
imul
ret
cmpsl
in
adc
jg
pop
iret
rcll
pop
test
outsb
and
adc
cmc
fwait
push
inc
jmp
adc
mov
inc
pop
popf
jb
pushf
or
mov
sbb
jno
jbe
clc
fnstenv
test
xor
jge
popa
pushf
push
loop
push
lcall
inc
adc
imul
lahf
jne
test
daa
pop
ja
or
mov
pop
jno
sarb
cmp
mov
add
sub
rclb
push
fcoms
shrl
fs
mov
cwtl
int3
dec
cmpsl
pop
out
or
fisubrl
push
pusha
mov
in
mov
push
jne
cmp
add
mov
mov
push
gs
dec
or
jmp
jne
mov
aaa
push
std
adc
sti
dec
imulb
sbb
mov
clc
or
test
xor
clc
jbe
xchg
cmpsb
aas
icebp
and
int3
cmp
test
pop
mov
jnp
fmuls
js
adc
das
mov
xchg
data16
xchg
cmp
movsl
subb
nop
dec
xor
sub
xchg
wbinvd
test
imul
mov
jno
stc
push
add
xchg
xchg
push
sub
mov
push
imul
test
into
aad
aaa
clc
mov
adcb
fcomp
mov
inc
mov
ret
in
fisttps
icebp
popa
pop
test
jbe
inc
mov
decb
fdivr
mov
shll
cmp
cmpsb
sbb
lcall
roll
jo
in
lcall
cmp
fidivrl
sbb
pop
out
pop
cmp
xchg
imul
hlt
xchg
movsbl
subl
jg
mov
arpl
aam
push
mov
leave
push
mov
in
insb
cltd
jo
movsb
int3
push
inc
push
lds
inc
aad
ljmp
jge
sbb
js
jle
pop
scas
sbb
inc
scas
repnz
fdivrs
push
and
inc
push
sub
mov
xchg
cltd
rcll
in
rol
in
test
rcr
dec
adc
inc
insl
jne
cmp
pop
das
mov
jbe
loope
loopne
mov
scas
lahf
loop
sub
fdivr
popa
enter
in
xchg
and
mov
push
adc
or
cmc
cs
adc
cmp
aam
jb
test
jo
shlb
rcll
sbb
mov
push
fistps
fmul
mov
cwtl
sub
add
xlat
and
in
xchg
clc
cli
add
jo
jnp
pop
out
int3
jo
ret
ljmp
inc
in
repz
mov
push
cmpsb
scas
xor
stos
cmp
inc
jae
jp
mov
or
arpl
cld
sbb
push
popf
hlt
inc
dec
fsub
mov
out
aas
popf
scas
mov
mov
data16
mov
sbb
dec
fmuls
je
xchg
outsl
out
or
add
mov
lret
jmp
iret
push
dec
leave
xor
push
fstpt
imul
cld
out
insl
inc
cmp
sub
xchg
lea
inc
inc
cmp
adc
pop
inc
gs
int
sub
jl
mov
or
add
aas
mov
daa
testl
dec
mov
mov
icebp
bound
mulb
ret
jecxz
mov
add
jo
and
decb
mov
jo
cld
into
nop
dec
sub
or
arpl
cmpsl
pop
scas
pop
push
insl
out
lahf
inc
in
xchg
int
ret
mov
arpl
push
in
je
dec
orl
std
fcomp
iret
jmp
into
movsl
addl
inc
fwait
sbb
inc
xor
mov
push
mov
test
mov
js
fs
cmpsb
lcall
repnz
lods
cltd
mov
cmpsb
dec
push
ljmp
adc
cltd
iret
mov
fildll
push
sbb
xchg
mov
or
or
aaa
jle
stos
ds
adc
adc
imul
lods
pop
leave
gs
les
filds
jle
adc
sbb
add
xchg
push
pop
in
ret
cmp
jne
adcb
sbb
xchg
xchg
mov
push
ret
cmp
xchg
je
aaa
xor
push
push
negb
popf
jl
add
sbbl
leave
dec
mov
mov
push
xchg
ds
mov
movsb
xchg
cmpsl
outsb
jp
or
ljmp
push
mov
sub
pushf
cwtl
add
inc
xchg
mov
lods
push
and
lcall
push
xchg
sub
mov
insl
xchg
pushf
nop
cld
cmp
xchg
mov
cli
test
push
pop
or
hlt
mov
sub
and
lods
sbb
or
push
push
or
xlat
imul
in
xchg
fs
loope
enter
out
adc
sub
lahf
xor
push
xchg
shll
jo
or
outsb
sub
mov
mov
iret
push
mov
pop
jo
xchg
xchg
xor
push
pop
loope
cmp
and
push
adc
cmpsb
or
cs
lods
pop
adc
sub
sub
jno
sbb
xor
js
lahf
xor
arpl
adc
push
pop
retw
mov
jno
cmp
lods
inc
pushf
inc
fidivrl
pop
cltd
fbstp
lcall
sub
xchg
negb
dec
test
mov
adc
or
adc
cmp
fistps
shrl
movsb
add
in
adc
mov
push
mov
fdivrl
das
rorb
loopne
aas
add
sub
movsl
test
nop
xchg
test
inc
mov
jecxz
fstpt
loopne
cwtl
or
movsl
popa
sbb
dec
repnz
push
sub
scas
push
mov
stos
pop
and
addr16
insb
xor
das
mov
out
dec
inc
neg
xchg
int
xor
sub
mov
sub
add
push
xchg
jl
movsl
in
jmp
push
mov
fucomp
mov
test
aas
mov
in
stos
nop
fisttpll
xor
xchg
and
in
dec
icebp
dec
push
sti
cmpsl
dec
mov
adc
sub
xchg
cmp
mov
jl
int
rcrb
dec
stos
pop
push
idivl
sti
out
popa
pop
add
insb
jmp
lcall
stc
jne
into
push
push
loope
jbe
adc
popa
xchg
movsl
add
push
inc
add
push
andl
stos
mov
cmpsb
add
push
fsubrs
inc
mov
adc
or
mov
ds
jnp
cmp
mov
nop
xor
les
push
out
mov
cli
js
movsb
push
mov
sti
ud1
dec
int
mov
lea
aam
jo
mov
fs
fisubl
ja
jl
xor
aaa
cmp
int3
insb
lea
mov
ljmp
bound
fiaddl
pushf
popa
dec
mov
and
adc
enter
cmp
mov
movsbl
stc
cmp
pop
aas
orl
xchg
lock
out
out
lock
and
and
int
test
mov
idiv
mov
dec
push
clc
xchg
pushf
andl
iret
push
out
inc
iret
mov
in
jp
mov
fisttpll
popa
lea
sub
ret
xorb
pop
jbe
sub
and
dec
ja
pusha
divl
jae
mov
addr16
push
jle
into
insl
inc
add
stc
popl
sub
inc
lods
push
mov
icebp
cmc
dec
nop
ds
adc
test
inc
insl
mov
mov
shrl
lods
mov
imul
in
adc
scas
cmpsb
jmp
subl
ja
mov
in
pop
icebp
mov
clc
and
and
jle
and
adc
cmp
sbb
xor
aaa
pop
push
inc
mov
add
and
mov
adc
inc
shll
push
cmp
dec
push
int
mov
testb
cmp
enter
call
pop
xchg
sub
pushf
int3
xchg
sbb
jecxz
int3
or
add
dec
mov
jl
test
mov
stos
sbb
clc
cwtl
cmc
jbe
push
js
or
add
add
jmp
mov
pop
ja
addr16
fldt
js
add
filds
add
test
js
pop
mov
sbb
sbb
call
mov
mov
insb
sub
prefetchw
or
xchg
aas
in
frstor
mov
scas
mov
in
movsb
inc
insb
sub
outsb
add
js
shlb
or
dec
test
xor
fldcw
xor
jns
outsb
pop
mov
jnp
pusha
imul
and
cmpsb
dec
add
in
xor
jno
pop
cmpsl
sbb
fmulp
cmp
push
das
jae
sub
cmc
es
pop
test
loop
or
shlb
in
pop
pop
aam
xlat
xlat
aad
mov
push
stos
mov
jmp
out
cwtl
stc
cltd
pop
dec
or
or
test
cmpsl
and
inc
out
daa
in
idivb
pop
adc
addr16
and
aad
jne
sbb
cs
subl
cmp
add
xor
dec
incw
xchg
ret
loopne
insb
cmpsl
add
dec
add
mov
popa
int
scas
cwtl
mov
enter
mov
adc
fisubs
xlat
ret
inc
mov
hlt
cmp
test
bound
into
or
jbe
lds
icebp
push
aam
lahf
test
jo
int
test
cmpsl
mov
add
xchg
lock
js
pop
add
sbb
xchg
icebp
adc
je
adc
rcrb
test
or
jmp
js
jg
sti
inc
mov
sarb
jb
pop
repnz
stos
in
push
dec
pop
aad
orb
test
xchg
pop
cwtl
sub
push
inc
mov
in
jge
adc
imulb
cmp
mov
jnp
lcall
mov
push
jno
rolb
push
and
fs
add
shll
outsb
test
adc
cmc
cmp
push
aam
shl
aam
push
out
iret
outsb
mov
bound
pop
imul
jne
sub
mov
shlb
mov
cmp
add
cmp
jg
add
outsl
loopne
es
push
xchg
cmp
fcomps
and
sbb
cmp
sub
pop
in
mov
popf
inc
xor
push
popf
mov
in
in
daa
jbe
add
frstor
fisttpl
push
ss
test
adc
and
in
call
xchg
lret
das
inc
lods
aam
lret
dec
fbstp
or
rcrb
addr16
or
add
mov
mov
jg
add
std
adc
and
mov
js
mov
xchg
andb
stos
push
push
fdivrl
push
push
sub
jp
imul
push
iret
shll
mov
enter
mov
cld
xchg
int
cmp
jnp
cmc
fisubrl
popa
pop
out
or
lcall
shrb
xchg
popf
shll
jecxz
data16
vmwrite
in
push
mull
das
or
xor
mov
dec
ja
lea
mov
enter
out
pushl
push
pop
lods
jae,pn
xchg
dec
xchg
xor
mov
sub
xor
sar
jge
sub
jb
mov
or
arpl
adc
mov
push
dec
popa
in
pop
cmpsb
cmp
sahf
dec
mov
mov
adc
or
push
into
lds
mov
js
sahf
shrl
and
rcrb
test
in
clc
dec
mov
push
lret
icebp
icebp
insb
mov
mov
xorb
jbe
sub
bound
fsub
mov
sbb
adc
lahf
adc
cwtl
sbb
leave
push
pop
out
aas
mov
fidivrs
or
pop
jecxz
cmp
pusha
nop
mulb
cwtl
add
or
addr16
sbb
mov
cmp
movsl
inc
repz
xlat
sbb
jns
mov
nop
push
je
shrl
int
aad
lret
push
insb
movsb
roll
cmp
sbb
aas
test
std
pusha
mov
fdivs
pop
lods
pop
mov
test
cmpsl
mov
adc
mov
cmpsb
mov
adc
xor
pop
out
movsl
and
in
mov
call
rcrb
inc
push
xchg
pop
add
dec
int3
adc
add
and
leave
pop
sbb
outsb
pop
cmp
mov
xor
inc
pop
mov
add
pop
cmp
cwtl
mov
lea
mov
sub
movsb
jl
cmp
and
mov
mov
rclb
addr16
dec
inc
repnz
add
cmc
or
ja
cs
pop
lods
ret
enter
dec
sub
aad
add
imul
icebp
jo
pop
sub
div
aaa
sub
push
imulb
scas
and
push
xchg
js
adc
dec
jecxz
pop
adc
dec
test
outsb
ret
sbb
mov
js
jle
sbb
shlb
push
cmpsb
stc
or
sbb
mov
lcall
pop
mov
sbb
add
sub
push
bound
jo
data16
arpl
jmp
mov
cmp
out
xchg
or
xor
or
mulb
dec
xor
inc
data16
cmp
jb
lea
mov
scas
mov
imul
inc
test
push
pop
test
iret
mov
adc
sub
cmpsb
push
jmp
sub
push
sbb
adc
mov
dec
aas
dec
mov
mov
in
mov
dec
xchg
xchg
add
imul
fbstp
mov
xchg
push
in
test
jns
stc
fstpt
test
adc
mov
in
lock
mov
movsb
mov
dec
add
ret
and
std
sbb
push
js
or
mov
shll
mov
jbe
in
stos
outsl
sti
mov
jae
inc
loopne
push
mov
inc
mov
cmpsb
dec
out
xchg
push
push
push
jg
cmc
push
pusha
sbb
and
adc
mov
push
int
in
xchg
inc
sti
mov
mov
stos
and
pop
mov
shrl
inc
sbb
out
mov
and
imull
fsub
xchg
leave
pop
cltd
nop
js
and
orb
xlat
ljmp
mov
sbb
mov
sbb
adc
je
ret
mov
mov
test
aam
mov
add
xor
fistpl
imul
and
xchg
je
ds
add
jmp
in
jno
shlb
cmc
movsl
dec
cmpl
fistpl
cmc
js
mov
ljmp
mov
daa
inc
insl
xor
jno
fsubrs
dec
sahf
xor
add
int
push
cld
test
cmpsl
push
inc
add
inc
and
bnd
adc
jne
pop
pop
clc
dec
pop
jne
fidivs
bound
test
call
xor
jae
sti
cwtl
cwtl
iret
sarb
mov
mov
xlat
add
mov
jmp
xor
add
mov
fidivrs
push
cltd
das
test
adc
xor
fldcw
xchg
sub
sbb
cwtl
dec
pop
push
sub
lret
cmpsl
mov
ljmp
or
pop
das
cmpsl
or
stos
sub
xor
mov
sbb
fsts
cmp
pop
addr16
sahf
loope
ss
popa
dec
mov
mov
leave
pop
inc
sbb
jmp
and
cmp
push
mov
mov
fidivs
mov
dec
xchg
dec
jo
pusha
ficoml
daa
fldt
add
je
mov
mov
or
outsb
int3
fwait
xchg
ds
das
xchg
lock
call
inc
ds
cmp
neg
push
jle
sub
cwtl
add
inc
rorl
inc
sbb
jns
sar
nop
adc
test
enter
fidivs
lahf
cli
jno
inc
add
jg
fisubs
xchg
fisubrl
add
mov
push
xchg
dec
push
mov
push
repz
loop
mov
js
jg
cmp
inc
ljmp
dec
mov
adc
insl
jge
or
xchg
add
xor
or
data16
add
jg
inc
lcall
dec
std
fstpt
adc
adc
das
or
or
lods
push
sub
xchg
pop
stc
mov
adc
xchg
and
push
pop
aaa
lcall
ret
xchg
into
sbb
or
cld
cmpsb
faddl
int3
lea
xchg
or
fldt
sub
cld
xorl
adc
mov
stos
push
push
cmp
pop
stos
dec
es
inc
lret
inc
jl
or
std
dec
jl
push
lock
or
sahf
mov
aas
xor
pop
and
test
fs
adc
xchg
jo,pn
cmp
jg
insl
mov
mov
mov
xchg
idiv
stos
push
pop
stos
cltd
test
sbb
sub
inc
add
sub
sub
xor
xor
scas
ljmp
xchg
lea
sub
adc
movsl
aas
adc
jb
aas
adc
adc
aam
loopne
xchg
xorl
xchg
iret
negb
aam
sti
add
dec
jp
sub
popf
sub
scas
sub
sti
pop
in
insl
adc
hlt
or
inc
jmp
pop
lahf
or
test
int
fs
aad
decb
adc
repnz
sub
pop
js
dec
mov
dec
sub
jp
adc
ljmp
lods
pusha
movsl
test
sub
popf
adc
cmp
aam
roll
mov
movsb
lods
ret
addl
mov
jl
das
aad
push
mov
or
insb
outsl
popa
pop
jg
dec
sti
mov
pop
adc
dec
sub
sub
dec
dec
inc
push
push
xchg
jbe
inc
xor
fistl
adc
sbb
fcompl
mov
lret
jne
imul
nop
push
addb
dec
or
pop
mov
pop
xlat
adc
pop
lds
cmc
sub
test
cmpsl
inc
xorb
popf
xchg
xor
lcall
push
push
imul
fmulp
int
in
inc
negb
xchg
fwait
jns
mov
xor
mov
int3
xor
xor
mov
pop
adc
xchg
dec
adc
test
loope
cmpl
mov
add
jno
adc
je
mov
enter
pop
xor
jae
add
push
mov
lahf
xchg
push
adc
mov
stos
jle
jl
and
sbb
popa
fwait
out
add
sti
inc
mov
imul
loopne
jle
inc
cmp
mov
pop
jb
dec
rorl
push
scas
pop
hlt
jno
test
sub
cmp
fsqrt
mov
mov
arpl
and
clc
repz
dec
aad
mov
movsl
lods
mov
in
es
dec
jb
pop
inc
and
sbb
pop
fdivr
imul
pop
clc
jns
int
sbb
bound
insl
jns
mov
out
test
fisttpl
cmpb
xchg
and
xchg
loope
loope,pt
xchg
xchg
mov
inc
in
push
std
call
call
sub
cmovae
mov
aad
sub
addr16
faddl
mov
lcall
movsb
push
mov
loop
sbb
outsl
add
sbb
das
sub
or
fnsave
sub
xchg
jns
mov
jae
or
fs
pop
into
xor
ljmp
fbld
pop
call
push
jo
test
mov
sub
xchg
xchg
int
adc
jmp
sub
dec
cmp
fcmovb
xchg
inc
adc
jb
pop
or
lods
mov
loope
adc
lock
jg
pop
enter
inc
out
psubb
cmpb
mov
push
cmp
jns
subb
mov
push
mov
mov
jge
push
fsubl
arpl
push
xchg
test
jp
stc
inc
out
lods
ud2
rorl
pusha
in
xor
mov
jbe
jmp
shll
push
mov
xorb
ja
je
jne
or
sub
std
pop
movsl
cltd
ds
dec
pop
adc
xchg
dec
inc
mov
ret
loopne
add
cmp
sahf
test
movsl
roll
mov
sbb
in
enter
scas
push
lods
ja
push
mov
arpl
push
ja
mov
sbb
cwtl
data16
jmp
xor
js
aas
cmpsl
lods
mov
add
je
imul
xchg
adc
adc
insb
sbb
pop
je
lret
push
cmp
sbb
je
popf
sub
loop
xchg
jl
lods
push
adcl
or
xchg
push
add
icebp
push
and
or
cmp
adc
mov
adc
in
push
mov
sbb
int3
dec
adc
push
dec
xchg
cmp
xor
dec
popf
add
lds
sub
xor
push
insb
xchg
aas
popa
sub
adc
hlt
idiv
mov
fwait
or
mov
icebp
movb
sub
xchg
mov
dec
in
jmp
adc
sti
pop
loope
sbb
lret
ja
scas
pop
imulb
push
or
icebp
divl
je
xchg
xchg
les
push
pextrw
mov
lret
mov
pop
xor
loope
lahf
repz
dec
enter
pop
push
dec
or
es
xchg
scas
jno
sahf
inc
adc
sbb
leave
adc
and
dec
xchg
fbld
xor
cmp
or
inc
shll
loope
mov
imul
push
aas
fwait
out
xor
jg
inc
adc
repz
scas
insl
jno
loope
pop
cmpsl
and
or
jle
outsl
jo
jb
mov
sti
adc
int3
cltd
push
xchg
xchg
das
sub
sete
out
aaa
mov
shlb
jne
dec
sbb
pushf
hlt
mov
cmp
lea
push
scas
dec
sbb
dec
imul
and
insl
insb
fldl
cmp
and
jo
pop
data16
les
movsl
sbb
dec
mov
popa
jle
test
rcll
cld
push
or
mov
mov
sbb
loop
jecxz
mov
pop
cmp
jbe
test
push
out
mov
js
dec
decl
cmp
or
and
xor
mov
int
fcomps
shl
mov
aas
cwtl
add
enter
fsubrs
xlat
cmpsl
cmpsb
test
mov
fwait
movsb
push
ror
js
pop
mov
push
push
fs
cmpsb
lods
cmp
maskmovq
divl
push
popf
shll
fldenv
repnz
cli
jnp
daa
and
inc
fistl
das
daa
ret
ret
mov
dec
mov
repnz
ljmp
and
push
leave
mov
ljmp
test
pop
mov
inc
adc
xor
cmp
add
into
clc
call
mov
test
jg
inc
push
pusha
or
nop
sub
jae
ret
dec
cmp
enter
movsl
pop
lods
or
and
and
xor
aam
inc
push
cmp
dec
data16
cmp
movsl
and
leave
xchg
xor
push
hlt
push
dec
scas
mov
jns
subb
pop
cltd
adc
push
mov
xchg
psubsb
mov
jbe
movsb
ja
test
mov
add
aas
fs
sub
pop
pushf
mov
out
ret
call
or
lods
or
mov
repnz
mov
pop
push
push
movsb
add
arpl
les
mov
sub
gs
adc
xchg
cld
jb
or
sbb
popf
cmp
fadds
lods
cmp
lcall
mov
push
xlat
test
leave
insb
xchg
mov
repnz
fnstcw
or
mov
or
stos
shlb
lods
mov
mov
push
jmp
xchg
aas
jno
dec
pusha
lods
lcall
dec
xor
dec
subl
add
add
repz
loopne
xor
cli
mov
pop
cmp
fnstcw
mov
pushf
cltd
andl
ss
mov
aas
add
sahf
in
lds
outsl
fmulp
adc
dec
sbb
adc
cmp
mov
scas
mov
or
scas
push
push
gs
call
ror
add
xor
or
mov
in
mov
les
es
xor
mov
leave
subb
les
cmp
and
cmp
dec
xor
mov
mov
incl
add
pop
mov
scas
adc
test
mov
mov
jns
ret
or
xor
nop
lods
in
sbb
sbb
lds
mov
mov
add
push
loop
cli
jae
cmp
cmc
bound
cmc
mov
mov
dec
xor
in
and
inc
scas
mov
fbld
rolw
mov
dec
xchg
mov
push
mov
iret
fadd
add
xor
int
je
cmp
add
xlat
andl
and
mov
add
lcall
or
mov
cmp
push
sbb
rep
add
mov
repnz
popf
push
jb
out
insb
cwtl
pop
aaa
rcrl
int
fs
cmp
in
call
rorl
and
mov
popa
loope
fstps
bound
sbb
and
cmpb
sub
std
mov
loopne
loope
add
lcall
mov
jbe
sbb
movsl
orl
inc
fstpt
jg
clc
enter
push
cwtl
jmp
mov
popf
mov
sbb
mov
outsb
add
pushf
insb
mov
repnz
cmpsb
loop
lret
lea
xor
insl
scas
jb
dec
inc
in
or
scas
sbb
clc
leave
xchg
leave
clc
pop
add
xor
clc
loop
push
push
push
mov
sub
cltd
push
dec
fbld
and
addl
pop
pusha
sub
cmp
inc
jge
int3
add
xchg
xlat
pop
mov
popa
ret
mov
bound
sbb
cmp
mov
in
cld
sbb
fwait
add
sub
insb
sub
cld
pushl
mov
stos
cltd
push
outsl
push
mov
inc
sub
pop
or
subb
add
aaa
dec
roll
in
cmp
sarl
outsl
inc
shll
push
iret
sub
add
maxps
push
pop
hlt
arpl
add
push
movsb
cltd
mov
leave
in
sbb
cwtl
cmp
pop
mov
stc
int
aas
push
xchg
test
sar
fldcw
and
and
or
mov
inc
or
mov
cmpsb
das
xchg
aas
adcl
sbb
stos
mov
push
rorl
stc
push
and
push
push
mov
imul
cli
imulb
fnstcw
push
push
and
jle
imul
ljmp
push
inc
push
jl
popa
pop
jl
bound
aaa
addb
rcrl
cmpb
imul
ja
scas
dec
aad
cmp
xor
test
or
lret
jnp
mov
add
bound
mov
fdivrl
push
pop
aaa
arpl
lret
push
sub
jecxz
ss
les
repnz
cs
ja
push
sub
jbe
pop
sbb
cmpsb
pusha
mov
xor
mov
jg
jnp
mov
aad
decl
mov
popa
xchg
fildl
sbb
dec
sub
jg
jecxz
xor
mov
inc
xor
lahf
push
mov
xchg
out
testl
out
outsb
pushf
imul
lcall
jmp
rol
je
xchg
nop
dec
push
push
mov
lcall
inc
xchg
push
in
out
mov
sub
rcll
sahf
pop
shlb
mov
mov
faddp
inc
and
ljmp
mov
mov
out
jge
addb
xchg
mov
cmpsb
lds
jmp
notl
call
int3
xchg
push
adc
push
mov
imul
push
test
lds
scas
xchg
mov
push
and
cmp
cmp
roll
stos
test
pop
rolb
mov
je
sbb
jno
inc
inc
cmc
xor
dec
mov
and
or
movsb
mov
dec
clc
ds
mov
popa
popf
incb
push
or
out
sbb
add
cmpsl
jecxz
int3
aad
xchg
inc
cli
and
xchg
pop
cltd
in
icebp
sbb
scas
lcall
inc
jne
add
jb
sbbl
clc
mov
orb
sub
fwait
jge
add
popa
inc
cmc
pop
mov
mov
bound
in
loopne
sti
sbb
adc
sbb
loop
adc
in
das
mov
cmp
adc
sahf
inc
shlb
rsqrtps
cmpb
and
pop
jb
in
lock
imul
rolb
inc
cmp
es
xchg
push
push
add
mov
or
mov
enter
das
mov
adc
xor
jge
mov
dec
or
xchg
testl
push
pop
dec
fistpll
jmp
adc
jle
cmp
or
mov
test
xor
cwtl
sub
mov
aaa
sbb
frstor
test
int
test
data16
xor
jns
cmpsl
dec
lock
mov
test
inc
imul
sbb
fs
mov
dec
push
stos
sbb
mov
pop
outsl
and
and
incl
ss
adc
lahf
add
push
popf
fiadds
sbb
ret
adc
add
xchg
pop
dec
int3
jb
jb
aas
or
js
cmp
xchg
call
cli
xchg
cltd
mov
inc
adc
push
mov
cmovns
add
sbb
add
jns
fstpl
loope
lods
jno
pop
gs
outsl
scas
add
lods
mov
pop
and
fnstcw
arpl
fldl
inc
inc
outsl
adc
icebp
icebp
pushf
leave
fwait
pop
in
mov
lea
or
jns
out
mov
mov
add
outsb
add
dec
leave
pop
push
push
sub
xchg
xor
insl
scas
xchg
rcrb
sub
lret
xor
mov
xchg
push
fwait
sbb
iret
movsb
loop
roll
jo
cmc
outsl
aad
stos
inc
rcr
bound
and
push
or
add
stos
out
into
push
imul
mov
je
mov
add
ss
sub
sub
adc
daa
popf
add
adc
fnsave
and
popf
xchg
jle
negb
in
je
out
pop
mov
mov
and
sbb
cmp
mov
loope
popw
push
inc
cmp
imul
sub
leave
xchg
mov
lods
ret
mov
push
lahf
fists
in
loope
add
sbb
int3
push
pop
and
adc
sbb
leave
mov
dec
cld
aaa
loop
pop
xlat
mov
mov
sahf
mov
or
out
dec
and
int
sahf
mov
xchg
fcomps
sub
and
and
and
jecxz
repnz
arpl
call
inc
and
sbb
mov
and
xchg
push
xchg
movsl
dec
dec
jno
mov
bt
leave
cmp
incb
loop
sbb
daa
mov
mov
mov
mov
movsb
xor
js
ret
push
inc
adc
sbb
dec
data16
xlat
js
mov
dec
pop
xchg
jle
clc
stos
mov
mov
not
fcoms
shlb
jbe
popf
mov
arpl
add
pop
inc
out
insl
es
icebp
iret
mov
imul
sbb
aad
loopne
sub
inc
xchg
mov
cmp
mov
int
add
inc
fmul
xchg
mov
mov
ljmp
sub
nop
sarl
cmovb
xchg
dec
pop
adc
push
cli
adc
shlb
icebp
mov
push
inc
fstl
add
xchg
pop
fwait
adc
hlt
add
bound
sub
pop
sub
pop
xorl
dec
sbb
pop
into
or
lea
adc
push
jno
jb
pop
lret
or
xor
xor
sub
je
mov
fs
pop
int
nop
addr16
lret
adc
out
test
add
jge
mov
out
ret
add
push
test
push
rcll
inc
data16
imul
enter
mov
in
inc
mov
scas
inc
scas
mov
test
pusha
jge
out
ljmp
ja
adc
pop
arpl
enter
push
scas
sbb
dec
lahf
bound
pusha
in
js
push
mov
out
and
lcall
sbb
outsl
stos
jle
xchg
cwtl
pusha
stos
insl
push
xor
push
cltd
inc
xchg
les
mov
mov
mov
xor
adc
subl
pop
mov
aaa
pop
cmpsb
mov
nop
dec
scas
jg
pusha
cmp
lods
imul
inc
pop
fcomi
mov
in
dec
mov
and
mov
sub
pop
mov
fdivs
pop
adc
and
push
add
sahf
adc
xchg
xchg
xchg
push
dec
mov
push
cmp
add
mov
ljmp
fidivl
jns
aaa
mov
pop
movsb
xchg
mov
sub
cmpl
das
cmp
pusha
mov
pop
call
test
add
and
mov
jp
xor
xchg
std
xlat
and
inc
clc
jmp
push
addl
jnp
test
xor
inc
push
jbe
xchg
adc
insl
or
ret
ret
dec
call
dec
fldcw
adc
bound
and
fs
das
or
xlat
jp
mov
xchg
cld
or
sbb
imul
push
pop
jp
push
jns
sub
inc
fmulp
sbb
pop
inc
sbb
pop
cmc
sub
maxps
or
jmp
es
sub
nop
xor
mov
inc
mov
jg
jnp
add
loop
pop
jge
testl
push
inc
mov
in
xchg
cmp
out
out
mov
mov
lahf
clc
jb
sub
cmp
xor
dec
ret
xchg
jo
sub
repnz
push
mov
shrb
bound
mov
es
adc
loopne
pop
arpl
xor
jb
and
ja
mov
lahf
jg
jns
jns
mov
outsb
and
add
fisubrs
and
push
imul
push
adc
dec
pop
jno
adc
decl
cli
pop
jne
cmp
ret
dec
fnstsw
mov
mov
mov
xchg
sahf
iret
jmp
pop
lret
or
cs
cld
pop
mov
mov
mov
mov
lods
sub
xchg
push
test
aad
sub
cmp
dec
lret
in
cmp
or
cmpsl
jg
lods
imul
mov
sbb
insl
into
mov
std
scas
sbb
ret
and
or
pop
dec
cmpsb
fs
loope
in
xor
dec
stos
pop
sbb
arpl
inc
adc
test
jle
cld
in
or
mov
inc
sti
inc
js
lods
or
add
inc
into
add
sarl
test
inc
mov
call
mov
add
insl
dec
mov
mov
cltd
adc
jbe
push
iret
push
mov
popa
cmp
jge
inc
pop
pop
sub
imul
les
andl
pushf
sbb
lock
cmp
insl
arpl
ja
idivl
mov
dec
enter
push
pop
sahf
cs
shr
push
mov
cmp
ficompl
sbb
fwait
arpl
dec
cld
loope
cmpsl
or
sbb
pop
fdivr
cmc
xchg
ret
enter
xor
jle
mov
aad
xor
shl
aad
mov
stos
ds
es
jns
ficoms
cltd
out
scas
jp
pop
call
push
cmpsb
lret
push
pop
pusha
add
scas
pop
push
out
in
out
scas
mov
mov
mov
nop
aas
outsl
jp
push
mov
mov
imul
popa
arpl
jecxz
movsb
or
lret
repnz
mov
test
in
dec
inc
cmpsl
insl
in
add
cwtl
ret
adc
fnstcw
jb
ret
in
mov
push
insl
cmp
adc
push
int
jl
xor
add
jge
fdivrl
ds
pop
mov
mov
ljmp
dec
cmp
mov
shl
fcomps
sahf
pop
cmpsl
xchg
jne
sahf
call
or
sbb
sub
hlt
nop
lahf
inc
icebp
iret
das
movsb
jp
mov
in
mov
cltd
push
xchg
imul
loop
xor
aaa
jae
sbb
aam
xchg
push
lock
lock
das
scas
mov
mov
pusha
punpckldq
cmc
push
add
mov
add
addr16
mov
adc
out
adc
scas
lock
mov
push
or
test
sbb
sbb
out
jo
xor
or
ljmp
dec
and
scas
lahf
cmp
jae
xchg
stos
pop
or
xchg
pop
xor
lret
or
sti
inc
push
push
rorb
dec
aas
jmp
push
and
sub
sahf
dec
mov
push
ja
inc
add
in
mov
xchg
inc
fwait
test
movsl
cmpsb
mov
mull
push
sbb
fwait
add
addr16
movsl
sub
add
leave
bound
add
and
mov
xor
pop
imul
loope
dec
mov
loop
adc
shl
push
dec
xchg
flds
lock
xchg
pop
xchg
imul
je
inc
lock
ret
push
int
movsb
jmp
outsl
aad
pop
leave
jno
jne
mov
and
lock
dec
push
mov
lea
iret
ja
scas
xchg
sti
jo
rcrb
jg
xchg
jbe
inc
inc
enter
addr16
popa
bound
test
adc
mov
jb
outsl
xchg
rorb
mov
aad
loope
std
jnp
mov
adc
popl
cmpsb
imul
nop
push
jbe
xor
in
stos
jne
pop
loopne
lods
or
cli
in
or
add
push
or
mov
cmpsl
adc
bt
xchg
popf
ret
pop
test
aaa
popf
lahf
es
fbld
icebp
sbb
in
mov
pop
xchg
lds
cli
adc
imul
inc
cld
sar
dec
push
adc
sbb
mov
hlt
mov
or
jmp
aaa
sub
sar
ja
adc
xchg
popa
lret
ds
mov
sahf
add
dec
cmp
mov
aas
xor
mov
xor
xchg
cli
jmp
jge
or
shlb
bound
mov
stos
ljmp
sbb
inc
or
mov
loop
ret
out
sbb
and
movsl
rcll
data16
frstor
cmpsl
faddl
cld
and
mov
aad
into
movsl
ret
jg
push
in
dec
pop
mov
push
push
jae
jae
mov
push
xor
fsts
xchg
stc
cmpb
out
into
popa
and
push
pop
fists
movsl
mov
pop
and
dec
sub
pusha
ret
push
mov
push
icebp
mov
jecxz
push
hlt
xchg
nop
jl
imul
lods
lea
stc
ficoms
sbb
stos
out
leave
dec
ljmp
imul
and
and
dec
xchg
inc
and
mov
sub
jne
pop
xor
shll
aam
inc
xchg
ret
aad
xchg
addb
je
aaa
pusha
sbb
push
negb
or
mov
xchg
mov
pop
jnp
mov
data16
dec
dec
push
lods
addr16
adcl
mov
cmp
scas
cwtl
jl
pushf
mov
xor
xchg
cli
add
push
out
or
sbb
rcll
clc
xchg
adc
pop
fsts
stos
aad
loope
mov
mov
sub
pop
sbb
sub
ficompl
mov
mov
mov
inc
xor
outsb
mov
loop
out
pop
jb
aas
mov
aaa
pop
ret
test
mov
adc
xor
dec
xlat
notl
xor
push
addr16
jns
fisttpll
cmpsl
call
push
add
mov
xor
adc
mov
jle
xor
dec
adc
xor
outsb
cmp
add
and
aaa
adc
pop
jmp
xor
insl
xor
cmp
xchg
dec
xchg
andb
jg
fiadds
jae
sub
and
sbb
or
xor
xor
loope
lahf
sti
cmp
jge
jbe
jg
bound
loop
fwait
gs
rcr
jmp
sub
xchg
mov
push
jmp
cmc
fcomip
mov
cs
push
adc
adc
stos
mov
dec
shrb
xor
mov
mov
pusha
inc
push
test
jl
pusha
cmp
inc
mov
xchg
addr16
ror
sub
aad
mov
and
xchg
ficoms
pop
xor
pop
aad
mov
mov
jnp
mov
gs
sub
loope
scas
xor
push
xchg
adc
fbld
fiadds
jne
sub
xchg
or
ljmp
in
jmp
loope
cmp
loope
lds
test
jle
jmp
in
mov
out
pop
jne
xchg
movsl
cmp
lcallw
loop
inc
jecxz
pushf
and
mov
mov
mov
push
xor
jecxz
fstpt
lcall
ret
xor
lret
shll
icebp
imulb
dec
mov
cmpsl
sub
cmp
xchg
jbe
aam
lock
pop
enter
and
stc
pop
insb
dec
test
repz
adc
inc
fists
int
stos
xchg
gs
inc
stc
call
ret
jle
out
mov
imulb
scas
adc
test
mov
and
lods
pushf
pop
popa
outsb
test
ret
sbb
lds
mov
cmpsb
push
rolb
negl
inc
fiaddl
push
inc
mov
std
rcll
in
push
mov
aas
jnp
push
cmp
cmp
mov
cmp
xchg
iret
imul
xor
pop
data16
or
pop
mov
xorb
lcall
fwait
icebp
add
inc
call
cmp
jae
or
nop
ret
test
jecxz
dec
pop
cmp
dec
cs
push
or
inc
pop
movl
and
add
push
add
hlt
sub
bound
je
adc
dec
push
ds
fiadds
inc
mov
lcall
ret
xlat
lahf
xchg
fstpt
aad
push
ljmp
inc
out
movsl
dec
ja
cmpsb
repz
daa
jns
sarl
mov
mov
ljmp
fwait
inc
mov
adc
cld
ss
jg
xor
adc
iret
dec
mov
jl
fwait
adc
xchg
fidivrl
popa
fimuls
inc
xchg
int
movsb
ljmp
insl
mov
push
mov
andb
xor
jo
sbb
iret
mov
push
ficoml
daa
mov
loope
mov
push
mov
sti
idivb
mov
pop
pusha
cs
inc
out
or
mov
xchg
into
mov
hlt
fs
push
push
stos
pop
jp
mov
pop
jmp
mov
leave
adc
inc
ret
mov
cmp
gs
xchg
popa
aam
mov
sbb
addb
ds
push
mov
in
scas
popf
inc
das
rcrl
in
int3
adc
int
addr16
and
xchg
adc
xor
cmp
jno
fbstp
xorb
xchg
or
repz
in
inc
sarl
dec
fisttpl
mov
js
pop
mov
mov
stos
ljmp
fadds
sbb
out
xor
ret
aas
negl
lds
lea
dec
cmp
xchg
mov
add
lcall
fwait
shll
and
mov
fldt
and
imul
lods
sbb
data16
mov
push
roll
xor
and
xchg
ja
jle
mov
fldl
fs
pop
add
jo
xchg
cmp
adcb
loope
inc
sub
mov
xor
sahf
icebp
test
loope
xor
sbb
push
lret
aas
inc
mov
popf
repnz
inc
data16
incb
arpl
adc
jle
pop
sbb
push
inc
pop
fcmovnbe
xlat
or
add
push
lcall
jmp
inc
inc
cmp
push
loope
and
cmp
pop
into
ja
mov
adc
aas
js
test
adc
adc
jae
loopne
add
mov
notb
ss
int
sahf
xchg
or
ljmp
arpl
jns
mov
fistl
iret
pop
enter
fwait
jbe
sub
sbb
and
out
and
cmpl
subb
mov
mov
xchg
adc
and
adc
popf
dec
or
push
popf
or
arpl
pop
sub
in
imulb
ret
add
inc
rolb
cmpsl
ret
scas
mov
lea
call
adc
scas
xchg
add
and
jp
sar
lock
pop
in
cmp
test
or
inc
or
cli
mov
push
sub
lea
add
pop
dec
mov
sub
dec
fs
imul
test
into
and
lcall
icebp
les
jle
xor
loopne
mov
daa
movsb
push
fcmovnu
dec
out
je
xchg
scas
aam
js
rcll
cmpsb
icebp
aad
cld
inc
add
fistps
les
cmp
pop
jge
jns
pop
sub
mov
orl
lods
imulw
ret
pop
repz
add
mov
push
das
mov
into
imulb
cmpl
cmpsl
push
jne
es
out
xchg
or
xor
cltd
call
mov
sub
mov
push
mov
inc
addb
cmp
shlb
repnz
arpl
add
add
sub
test
into
je
pop
sar
icebp
mov
out
mov
mov
lea
pop
add
pop
xchg
test
sub
xchg
cmp
cmc
jbe
or
push
dec
fists
xor
xchg
dec
push
dec
imull
or
mov
les
push
adc
xchg
out
dec
aam
loopne
jmp
or
movsl
cmpl
push
roll
rcl
dec
aad
rclb
mov
jecxz
aam
aam
push
ja
jg
sbb
lahf
sub
push
test
inc
mov
lods
push
cmpl
cmp
jo
scas
xchg
mov
repnz
mov
xchg
clc
pop
or
xor
mov
iret
stc
in
inc
ljmp
popf
lahf
mov
bound
adc
jg
mov
in
fs
inc
arpl
imul
or
adc
sub
inc
mov
js
notl
mov
cltd
adc
push
and
adc
jb
sbb
sbb
pop
cmp
xchg
jnp
repz
test
cmp
dec
mov
mov
enter
cmc
inc
test
je
lahf
out
in
cs
imul
js
mov
sub
mov
test
arpl
std
cltd
mov
fistpl
sub
and
push
add
mov
leavew
sub
jecxz
flds
jg
mov
or
xor
pop
pop
decl
fcompl
iret
and
ret
jmp
mov
out
jmp
out
push
pushl
cmc
fcmovu
mov
xor
das
pop
repz
std
inc
push
lock
xchg
call
nop
lods
ljmp
fbld
cmp
mov
mov
and
push
js
scas
test
inc
out
scas
inc
mov
daa
cmpsl
pop
jle
ja
divb
in
jne
pop
sub
push
push
testl
jb
test
daa
adc
je
xchg
cmp
mov
jo
inc
fcmovu
mov
ret
pushf
call
addl
std
addl
fisttps
lret
add
dec
pop
pop
ret
sub
cli
jo
test
orb
and
and
mov
mov
test
dec
xchg
jmp
in
loop
fbld
push
loopne
loop
xor
dec
pop
cltd
lock
imul
cmp
popl
push
cmp
sub
push
sub
ja
and
out
and
jne
jp
stos
js,pt
pop
xor
insb
pop
repnz
adc
mov
ss
sbb
stc
inc
aad
out
sar
pushf
negl
mov
fwait
dec
and
sub
lods
xor
ror
cmp
sar
call
mov
in
adc
popa
or
ret
xchg
dec
je
ret
pop
fsubp
insl
xor
sub
das
sub
das
hlt
adc
cmp
xor
ds
xchg
cmp
popl
jp
negb
mov
pusha
push
cs
gs
pop
jp
and
test
xchg
xchg
jnp
adcb
xchg
rcl
mov
cli
data16
outsb
xchg
imul
es
or
sbb
insb
push
xchg
dec
and
adc
push
pop
and
stos
imul
sbb
add
into
in
in
icebp
loope
pusha
shll
sbb
mov
out
sbbb
adc
pop
into
fs
push
jecxz
inc
in
cmp
xchg
adc
jns
dec
sbb
mov
jmp
test
or
ljmp
pop
repnz
or
in
decb
outsl
cltd
int
clc
mov
or
aas
out
dec
mov
inc
data16
loop
xor
ucomiss
mov
mov
dec
push
arpl
add
stc
iret
add
out
mov
lcall
mov
mov
pop
icebp
xchg
inc
push
das
dec
addr16
push
xor
aad
testl
hlt
pop
idivb
in
or
enter
out
cli
rclb
inc
adc
add
jns
rcl
add
ffreep
sbb
xor
jp
lods
clc
xlat
cld
lock
sbb
xchg
insb
ds
hlt
mov
or
sub
xchg
inc
dec
imul
pop
adc
mov
in
add
int
cmp
movsb
inc
add
test
mov
movsb
add
or
or
jb
aaa
mov
arpl
cmp
push
js
jo
ds
lret
sub
fidivl
jb
add
xor
add
inc
jns
push
pop
icebp
and
lea
xor
leave
icebp
cmp
sarl
fmulp
pop
mov
ljmp
mov
and
xchg
cmpl
addr16
ret
out
arpl
out
fcomp
bound
xor
xchg
jg
pop
mov
fcomps
cmp
xchg
mov
pop
jle
pop
mov
pop
iret
clc
pop
push
sahf
or
or
pusha
mov
add
std
sbb
mov
movsb
insb
test
dec
inc
add
aad
push
mov
sbb
xlat
jnp
cmp
jmp
lahf
loopne
lret
or
mov
shll
scas
and
mov
mov
bound
ds
add
icebp
insl
enter
loop
lods
mov
insl
push
or
icebp
xor
or
outsl
out
in
arpl
int3
out
test
or
test
sbb
or
mov
loopne
cmpsl
mov
shrb
push
push
sbb
cmp
sub
repz
shrl
xchg
je
out
push
int
xor
aad
and
popl
repz
sub
xor
lods
fs
nop
push
pusha
pop
or
cmp
mov
lods
sete
mov
pusha
sbb
addl
pusha
mov
cwtl
cmp
icebp
jnp
popa
pushf
subb
in
inc
and
in
push
lea
popf
inc
mov
mov
out
pop
inc
mov
popa
mov
addb
sti
sub
mov
push
adc
jae
jge
sbb
je
sub
test
push
movsl
sub
pop
jo
and
ja
cs
adc
pushf
push
ret
dec
mov
mov
pushl
ds
lock
dec
iret
xchg
faddp
mov
pop
cmpsl
sbbl
sbb
iret
filds
mov
push
add
sub
cmpsb
ficomps
outsb
jo
fxch
mov
mov
xor
sbb
inc
push
fldl
sub
mov
adc
mov
add
cmp
shlb
daa
mov
mov
mov
out
mov
out
push
xchg
lds
cmp
jbe
movsl
add
lea
in
pop
push
add
imul
push
sarb
xor
xchg
mov
push
xchg
cmp
xor
int
out
mov
stos
out
xlat
shlb
scas
ret
inc
sti
xchg
jae
mov
sbb
mov
push
fimull
loopne
sub
xor
or
push
push
jg
cmp
mov
fsubrs
mov
in
push
out
les
mov
pop
mov
or
xchg
xor
cmc
inc
xchg
cltd
add
mov
mov
in
add
and
add
outsl
cmp
insl
dec
jnp
in
mov
jge
outsb
xchg
pop
in
add
dec
cmc
adc
mov
cltd
das
jg
lods
jbe
cwtl
sbb
xchg
sub
add
jmp
fs
imul
fs
dec
inc
cmp
mov
lods
dec
fisubrl
dec
fdivrl
add
add
and
mov
sbb
mov
das
out
sbb
dec
sbb
bound
insl
hlt
sti
jle
pop
aam
cmp
test
sbb
sbb
adc
call
stc
in
popa
popa
ret
mov
subb
xchg
outsl
cltd
stos
pusha
push
std
int
aaa
xchg
imul
fs
dec
mov
sub
ret
and
or
into
inc
das
sahf
int3
clc
sbb
pop
enter
imul
pop
add
mov
scas
loop
jae
clc
pop
jo
push
fs
and
sub
inc
les
mov
mov
or
push
cmpsb
push
fs
int
imul
dec
fistps
mov
out
insl
fcmovne
push
xchg
lods
popa
inc
or
imul
jge
cs
inc
subl
in
ficompl
repnz
inc
andb
lea
cmpsb
add
adc
pop
pushf
mov
cwtl
stos
xchg
cmpsl
jbe
mov
sub
rcl
in
std
sub
lahf
xlat
int
inc
in
ficompl
xor
nop
or
aad
mov
enter
jg
lods
xchg
aas
sbb
and
aas
lahf
xor
shlb
test
sub
aad
add
arpl
push
cmp
jbe
mov
jno
xor
inc
cmp
pop
call
outsl
fmull
sbb
cmove
std
xchg
fisttpll
cwtl
xchg
pop
xor
stc
movsb
dec
adc
xor
sbb
int3
test
jg
mov
sbb
cmp
popa
daa
add
xchg
lea
sub
jbe
pop
aam
add
loopne
fnstenv
and
or
jecxz
daa
jmpw
mov
cltd
fsubs
sub
add
mov
dec
jno
in
add
push
mov
fwait
dec
loop
faddp
dec
inc
rorl
push
xchg
sub
rorb
dec
enter
int3
mov
cmp
add
xchg
mov
cmc
pop
dec
push
xchg
xor
movsb
mov
sbb
sbb
or
enter
test
scas
ljmp
fistl
pop
enter
mov
xchg
lock
inc
mov
js
push
and
repnz
movsl
insl
push
jp
addl
std
mov
cmpsb
mov
push
movsb
add
adcb
adc
xchg
outsl
aas
div
insl
dec
push
or
sbb
leave
aaa
or
jg
sub
or
lods
mov
movsl
push
jecxz
rclb
adc
leave
pushf
je
shl
push
sbb
and
mov
fdivrl
push
shlb
cmp
jne
xor
insl
mov
addr16
push
push
jbe
pop
pop
mov
jg
lea
pop
imul
mov
outsl
add
jl
dec
cmpl
lds
roll
mov
lahf
mov
sbb
lahf
in
push
add
fimuls
sbb
filds
add
loop
push
cs
jp
and
mov
add
pop
lahf
jmp
xchg
aaa
or
into
insb
out
jne
enter
jae
pop
dec
cmp
push
sub
xor
test
adc
pop
pop
test
lock
stos
and
cwtl
je
push
cmpsb
inc
adc
inc
lret
sbb
enter
mov
fcoml
cwtl
stc
cmp
movsb
adc
mov
cli
cltd
xor
ret
pop
pop
jle
fcompl
inc
sub
lret
pop
stos
add
in
xchg
sbb
in
xchg
testb
inc
dec
stc
mov
nop
int
js
fs
inc
fwait
sahf
sbb
scas
pop
cmp
mov
daa
int
mov
cmp
fadd
sysenter
cmc
xor
push
faddl
imul
clc
jnp
add
sbbb
jp
pop
js
enter
cmp
pop
iret
popf
push
insb
iret
sti
loopne
push
pop
inc
jb
jnp
in
and
push
mov
sbb
mov
pop
push
push
jge
fdivrl
insb
shl
in
push
lods
scas
jne
xchg
es
sub
js
nop
jnp
nop
mov
sub
loopne
hlt
xlat
inc
sub
ljmp
sub
cmp
jg
cltd
inc
dec
clc
xchg
inc
lods
mov
stos
gs
lret
xor
rolb
mov
or
or
sub
pop
jbe
xchg
mov
fistl
mov
xchg
test
sub
sbb
leave
pop
sub
xchg
gs
popa
clc
bound
sub
inc
repz
pop
ds
in
add
rcrl
and
in
lea
xor
cmovno
mov
pop
mov
mov
mov
repnz
pushf
mov
jecxz
mov
rorb
sbb
repnz
xor
jp
and
in
sbb
mov
orb
pop
sub
repnz
sbb
sub
das
shll
std
and
push
inc
sub
adc
aad
inc
subb
out
leave
lahf
mov
push
pop
xor
flds
push
out
pop
lods
int
and
xorl
bound
and
in
pop
xor
aas
hlt
lcall
clc
lahf
mov
push
add
jns
add
das
push
inc
mov
test
les
subl
cli
mov
aas
sbb
outsl
mov
loopne
outsl
mov
add
pop
xchg
mov
addb
clc
shlb
jge
ljmp
cmp
push
lahf
fsqrt
jb
imul
push
inc
jmp
push
sahf
adc
mov
jg
cli
pop
pop
sub
mov
ja
add
cli
je
jno
out
mov
pop
inc
inc
out
test
pushf
xchg
and
xor
mov
mov
loopne
mov
fimull
fwait
sub
sbb
and
add
outsb
or
inc
in
pop
in
jae
and
loopne
dec
scas
sub
clc
inc
push
and
pop
inc
lret
lods
movsl
mov
or
stos
test
cwtl
mov
fistpl
mov
stos
test
sub
pop
push
pop
jge
inc
pop
dec
call
dec
cmpsl
mov
out
loope
lret
popa
js
sub
sbb
inc
push
mov
in
sub
cmc
repnz
or
aam
xlat
jne
dec
les
mov
mov
pop
xchg
inc
sub
inc
mov
stc
icebp
lea
inc
push
jnp
cs
shrb
xor
out
popa
jg,pt
inc
sub
sbb
aaa
xchg
pop
jo
jmp
cmp
xchg
push
sbb
mov
pop
imul
cmp
test
mov
andl
jp
mov
pop
fldenv
mov
cmpl
movsb
sbb
adc
test
rcrb
les
xchg
mov
fcmovb
push
jl
pop
test
add
lock
adc
stc
lmsw
ret
push
scas
xchg
pop
mov
dec
lds
push
gs
ljmp
lea
pop
add
jnp
adc
add
push
sub
fisubs
xchg
push
xor
mov
jb
sbb
add
push
cmp
hlt
iret
sub
dec
dec
stos
shl
add
arpl
mul
cmp
frstor
jb
push
dec
stos
sti
lods
divb
mov
push
inc
mov
mov
aad
daa
dec
xchg
lods
adc
je
xchg
negb
jg
lcall
sbb
out
clc
xchg
mov
sbb
clc
dec
dec
int
popl
xlat
jbe
lcall
sub
jp
jmp
lcall
ja
pop
xor
mov
cmpsb
jnp
lods
sub
clc
scas
stos
push
into
lret
les
inc
or
jge
pop
stos
sahf
inc
adc
mov
fmull
test
mov
aas
xor
pop
push
sub
call
cli
out
pop
or
arpl
in
jae
mov
or
push
push
sbb
pop
call
fsubr
push
out
jp
stc
push
add
addb
add
pop
testl
mov
and
sub
cltd
stos
outsl
cmp
lcall
sti
add
cmpb
pop
xor
icebp
xchg
mov
in
mov
out
lahf
dec
pop
adc
cmp
imul
pop
in
ds
xlat
and
adc
mov
mov
aas
int
dec
cwtl
sti
ljmp
lcall
movsl
lods
pop
xchg
mov
adc
xor
clc
test
jmp
sub
mov
pop
leave
lods
mov
test
mov
pop
das
mov
lods
xlat
outsl
or
adc
xchg
push
in
test
inc
les
fisttpl
fsubs
push
xchg
push
call
call
pusha
cmp
pop
mov
add
push
popf
imul
insb
in
lods
shl
addr16
and
fmull
mov
dec
sbb
dec
push
cmc
shl
dec
mov
push
xor
popf
popl
adc
jmp
out
loopne
test
gs
mov
pop
jl
mov
inc
jge
out
test
pop
pop
mov
inc
imul
inc
lcall
mov
inc
jmp
push
cli
bound
test
lods
mov
xchg
fadd
mov
ret
aaa
xchg
xchg
pop
adc
mov
adc
bound
ss
test
push
in
cmc
lret
inc
mov
les
in
daa
jns
mov
or
lds
pop
jle
push
stos
ja
ljmp
mov
push
loopne
sti
rorb
fucomip
call
clc
and
or
push
cmp
push
ljmp
sbb
sbb
cltd
in
in
fsubl
lods
rolb
cmp
push
orl
mov
pop
fsubrs
sti
jmp
fidivl
add
cmp
or
cmp
lahf
inc
push
popf
hlt
cmpsl
jbe
mov
xchg
enter
pop
shlb
mov
or
sahf
cmp
xorl
cmp
push
push
jp
subb
pop
push
adc
jp
or
adc
lds
subl
cli
cmp
inc
pop
in
shll
cmp
out
xlat
jp
faddl
pop
lods
push
in
add
lock
xor
pop
ss
roll
sbb
out
rcll
sub
xchg
mov
aaa
test
sbb
xor
sub
mov
fidivs
arpl
push
mov
xlat
adc
out
js
dec
mov
int
or
ret
popa
mov
sub
sub
push
push
stc
jns
mov
xchg
xor
add
mov
xchg
push
and
and
in
fucomp
roll
sti
js
cltd
rcrl
cli
xchg
int3
pop
stos
imul
sub
pushf
in
add
les
lea
jae
daa
pop
xchg
shl
adc
cmp
push
dec
lods
scas
xchg
add
lea
mov
jne
xorb
mov
out
clc
inc
push
mov
mov
aam
or
xchg
aad
xchg
sahf
add
xchg
stos
add
jns
xor
in
push
xor
test
inc
inc
out
out
push
adc
jb
leave
jne
lods
out
sbb
mov
aaa
xor
mov
pop
push
xlat
bound
insl
inc
dec
pop
inc
mov
add
das
out
popa
cmpb
arpl
inc
lds
outsl
cwtl
push
repz
mov
popl
cld
incl
cli
out
xor
and
push
das
ret
aas
mov
push
test
daa
cs
insb
scas
push
mov
les
pop
adc
stos
popf
shl
pop
cltd
add
jmp
xor
sub
es
dec
xchg
sub
push
xchg
xchg
outsb
int3
mov
cmc
fwait
sub
cmp
or
push
sahf
jns
fs
dec
mov
lcall
stos
pop
add
movsl
cmp
xchg
hlt
shr
insl
or
cmpsl
inc
mov
clc
jle
stos
stc
fldl
loop
loop
stc
rcl
sti
pop
add
jmp
cmp
lret
pushf
or
pop
stc
or
repz
insl
sub
cmp
imul
push
sbb
aaa
xor
inc
push
sbb
aad
in
popf
je
repz
mov
and
sahf
jb
cld
dec
out
mov
testb
in
mov
nop
cmpsb
and
and
insl
movsl
pop
in
clc
fsubr
xor
scas
inc
cmp
jne
cmp
add
jl
pop
cmc
in
repz
mov
mov
push
stc
test
es
xchg
into
dec
arpl
lods
mov
mov
mov
adcb
mov
aas
xchg
jnp
jp
test
dec
push
nop
sbb
sub
and
repz
sub
dec
dec
frstor
mov
stos
jg
dec
ret
cmp
mov
pop
aaa
bound
scas
hlt
loop
push
lock
adc
jne
lcall
add
mov
lret
push
dec
mov
in
mov
scas
mov
mov
cmp
xchg
push
lahf
scas
sub
pop
das
pushf
add
mov
movsl
xlat
inc
inc
cmpsb
xchg
or
push
lahf
dec
mov
mov
nop
imul
sub
cltd
mov
jecxz
lods
pop
xchg
sbbl
out
pop
loopne
jecxz
inc
mov
ja
mov
in
cwtl
int
pop
mov
cmp
into
xlat
addr16
fs
jae
xchg
inc
add
lcall
jbe
les
fdiv
or
int3
pop
call
ss
mov
inc
jle
loop
test
sub
dec
popa
pop
scas
lds
inc
pop
inc
das
outsb
mov
push
ljmp
mov
stos
aas
mov
fiaddl
aaa
adc
fwait
ljmp
pop
xchg
rcrb
inc
decl
aam
divl
in
ficoml
scas
movsb
mov
push
fildl
fists
rcll
and
xchg
arpl
inc
cmpsl
es
in
xorb
adc
data16
cmp
scas
mov
imul
mov
fs
pop
mov
movsl
xchg
or
xor
mov
mov
inc
pop
xchg
inc
jle
fwait
ret
xor
lcall
sbb
imul
jbe
push
scas
rcr
iret
inc
mov
popf
sbb
xor
xchg
gs
in
cwtl
mov
insl
movsl
test
call
rep
das
cmpsb
mov
xchg
push
loopne
inc
xor
cmpsb
dec
add
or
test
adc
call
cmp
dec
pop
inc
add
sub
sbb
mov
mov
adc
jns
das
jno
mov
scas
or
mov
xor
cmp
lret
or
xchg
fsub
xor
int
jge
in
inc
imul
mov
xlat
std
imull
dec
xchg
test
mov
or
nop
fs
pop
adc
inc
mov
rcpps
stc
popf
movsb
xor
test
mov
pop
aam
and
shr
mov
fucom
cmpsl
dec
inc
pop
mov
xor
xchg
mov
decl
lock
nop
lret
push
adc
sub
in
icebp
cmc
mov
lods
jg
add
cmpsb
adc
lahf
repnz
test
mov
cwtl
mov
testb
cmp
addr16
jge
sbb
sbb
hlt
sbbl
mov
jge
mov
repz
out
mov
fildl
outsl
push
aam
shrb
lea
lock
jge
out
ficoml
fnstsw
dec
test
arpl
loopne
loopne
push
dec
mov
push
mov
data16
push
xlat
inc
arpl
sti
cli
xor
adc
js
mov
pop
pop
mov
dec
mov
pusha
std
lock
or
pusha
xor
jge
inc
sarb
imul
cmpsb
or
push
and
sahf
sbbl
pop
push
cmpsb
cmc
xchg
mov
xchg
lock
mov
js
lods
jmp
pop
cltd
shll
shll
lds
jbe
jge
add
lds
or
inc
jmp
mov
ss
outsl
pop
jl
sbb
lahf
cmpsl
lret
fdivrl
insl
jno
cmp
addr16
push
rorl
push
mov
cmpsb
pushf
jo
inc
jecxz
cmpsb
cmp
inc
inc
jge
repnz
test
jne
leave
mov
xchg
sub
jb
ja
jne
inc
jbe
frstpm(287
stc
sahf
add
and
jp
sub
pop
popf
mov
lea
mul
dec
data16
addr16
push
mov
loopne
push
dec
scas
arpl
pop
sbb
push
cmp
repz
sbb
mov
inc
mov
jae
inc
clc
pop
cmp
in
xor
test
pusha
mov
outsl
cmpl
enter
pop
jmp
lret
lret
mov
jo
or
mov
inc
sub
pop
sub
adc
pop
pushf
imull
mov
int3
inc
lock
lds
and
fimuls
leave
stos
xor
stos
jb
dec
scas
inc
sbb
and
jmp
aas
mov
int
mov
rcrl
imul
lahf
ficoms
mov
call
insl
jl
jl
push
in
stos
int3
add
and
xor
push
jnp
pop
dec
pop
push
pop
pusha
mov
in
ret
lea
adc
addl
sbb
push
out
mov
adc
insl
mov
lea
sub
fdivrs
pop
stc
adc
lahf
cmpb
push
aas
jge
call
pop
ret
cltd
mov
add
mov
and
mov
fsub
mov
hlt
das
aam
cltd
sub
jmp
stos
jle
add
sbb
xor
pop
sbb
lcall
leave
outsl
out
lret
shlb
mov
mov
stos
mov
repz
outsl
stos
sub
addl
xchg
ljmp
push
mov
xchg
dec
faddp
cmp
fldt
rclb
por
lret
sbb
and
stos
pop
jbe
fldenv
jmp
mov
rorb
pop
or
cmp
and
adc
jge
push
mov
frstor
jl
xchg
lahf
mov
mov
mov
call
inc
add
xor
dec
insl
cmc
adc
jmp
fistpll
imul
loopne
fdivp
out
mov
repz
xchg
inc
ret
xchg
inc
and
mov
std
movsl
xchg
sbb
or
imul
lock
jnp
loopne
push
test
pop
loop
mov
lods
mov
mov
fcmovnu
push
scas
popa
outsl
mov
lock
rclb
lds
xchg
cmp
lods
mov
scas
push
mov
cmpsl
cmp
sbb
aam
xor
movsb
je,pt
pop
out
jmp
fbld
jae
scas
popf
enter
add
mov
add
cmp
in
lret
mov
jg
cwtl
jno
xor
jb
loope
adc
push
les
pushf
iret
mov
sbb
jns
nop
rclb
fcom
xchg
push
add
js
popf
int3
or
jmp
mov
jne
push
sti
jnp
xor
ret
pop
dec
xchg
sbb
je
orb
sti
sub
adc
ret
mov
xchg
sub
and
cltd
xor
sub
dec
mov
push
push
out
push
xor
inc
std
dec
jg
inc
hlt
ss
stos
jae
mov
loop
bound
sbb
stos
push
pop
ljmp
arpl
call
mov
in
int
adc
inc
shr
jge
mov
jns
lret
jge
dec
push
jge
xor
cmc
bound
repnz
or
test
adc
sub
mov
mov
ficoml
call
ret
clc
sbb
and
jg
daa
test
jle
push
rcl
xor
je
test
mov
in
out
dec
and
test
out
jns
inc
insb
mov
add
mov
idivl
adc
push
sbbl
xchg
neg
jno
out
pusha
push
sub
test
cmp
mov
aas
icebp
push
xor
jbe
sub
testb
pop
shl
nop
cld
xor
mov
shl
cli
aaa
into
jg
pop
cmpsl
mov
push
jp
mov
xchg
cmc
lds
mov
insb
mov
bound
and
sti
testb
imul
xchg
push
pop
xchg
or
pop
cmpsb
inc
scas
test
hlt
jb
cwtl
sub
fs
bound
aaa
in
scas
sbb
mov
ret
xchg
sbbl
insb
stos
ret
mov
xchg
mov
dec
and
cli
sub
es
sub
xor
jno
rcrl
in
xor
call
stos
es
pop
pop
adc
and
xchg
sahf
int3
stos
loop
push
fisttpll
dec
cwtl
je
gs
and
aas
in
sbb
push
pushf
dec
mov
adc
daa
xchg
jp
mov
jp
mov
dec
and
mov
cltd
jbe
mov
in
fists
sub
out
rclb
jo
cld
sub
and
in
loop
xor
cmp
out
dec
mov
add
xor
rcrl
hlt
aaa
out
cli
sbb
imul
ljmp
mov
xor
push
mov
pop
jae
repnz
imul
std
push
fcomps
enter
jle
inc
jle
push
sub
sbb
or
out
sub
xor
das
jmp
sub
cmpsb
or
mull
testb
adc
rolb
fisttps
lcall
pop
sbb
cmp
test
in
ret
mov
fstpl
xchg
add
mov
out
jns
bound
dec
lahf
sub
dec
mov
pop
test
ret
adc
xchg
mov
pushf
dec
inc
mov
push
cmp
inc
inc
mov
adc
int3
adc
hlt
add
fldenv
pop
movsb
clc
adc
mov
popf
insb
je
mov
ds
jae
daa
cmp
mov
arpl
mov
lods
xor
test
inc
jl
fnsave
mov
sahf
mov
lret
cli
int
adc
test
rorl
mov
mov
push
mov
push
fadds
or
adc
jo
push
sub
enter
cmp
nop
ret
sbb
sbb
jle
es
push
mov
arpl
push
inc
leave
xor
xchg
xor
pop
pop
pusha
cld
sahf
cmp
out
stc
rolb
inc
pop
xchg
inc
sbb
cmp
pop
mov
and
arpl
mov
jle
or
jmp
mov
xchg
jno
aam
icebp
cmp
inc
xor
xchg
cmp
mov
push
out
out
ljmp
mov
das
cmc
dec
sub
ljmp
adc
leave
push
pop
xchg
push
jp
cmp
dec
xchg
jge
inc
rol
push
pop
mov
ljmp
adc
fs
push
adc
out
cs
xchg
jp
push
fdivp
mov
in
subb
cmp
mov
pop
add
inc
incl
jecxz
dec
out
sar
push
adc
repz
push
rcll
fcomps
mov
mov
out
lods
mov
repnz
mov
outsl
sbb
movsb
sbb
hlt
call
xchg
push
sbb
cmp
imul
icebp
and
sub
into
aas
cmpsl
movsl
push
movsl
inc
jle
iret
push
mov
inc
fsub
dec
lods
in
daa
push
xchg
and
xor
xor
xor
sub
or
pop
jl
rcrb
cmpsl
xchg
mov
xchg
push
iret
mov
fstps
jl
jb
or
jne
xor
fstl
mov
nop
pop
pop
dec
mov
fmul
add
jecxz
dec
lock
fistpl
mov
mov
and
lcall
shlb
enter
push
cmp
pop
adc
ret
ds
rol
icebp
xchg
std
jo
shrb
mov
push
or
xchg
xchg
cs
sbb
sub
or
sbb
imul
inc
insb
dec
addb
mov
push
sub
adc
mov
mov
icebp
xor
push
fmuls
push
xchg
std
mov
cmc
push
dec
sub
adc
test
in
sub
sub
and
sbb
clc
das
push
inc
adc
pop
push
lret
outsb
and
xor
inc
test
aad
icebp
dec
pop
in
push
outsl
xchg
arpl
test
clc
sbb
imul
inc
imul
dec
add
or
pusha
dec
aas
push
mov
lahf
jno
jle
mov
call
mov
push
clc
in
push
lods
pop
cmp
cmp
icebp
rclb
dec
inc
jb
lcall
dec
jmp
movsl
cltd
fmulp
mov
mov
repnz
jg
mov
mov
jmp
xor
jb
andl
jno
pop
and
sahf
sahf
mov
aad
sbb
jns
pop
clc
jl
and
adc
test
shrb
andl
sub
push
push
bound
cmpsl
add
scas
ja
popf
inc
mov
ljmp
adc
arpl
mov
rol
sti
iret
mov
mov
or
ffreep
dec
movsb
in
shll
nop
mov
fucom
pop
aam
lea
shll
das
movsl
xor
sub
inc
call
test
pop
or
sbb
pop
divb
sahf
rcrl
sub
int
mov
std
mov
mov
fsubs
xor
dec
shlb
mov
vsqrtss
mov
adc
ds
mov
xchg
cmpsb
dec
and
lret
fs
lea
orb
sbb
jnp
inc
popl
jl
dec
in
and
mov
xchg
inc
sub
icebp
sub
xchg
push
fisttpl
or
negl
pop
dec
mov
mov
xor
push
mov
imull
sub
dec
xchg
push
or
mov
jo
sbb
repz
mov
shll
cmp
out
movsl
jns
push
jbe
mov
dec
in
dec
jge
in
inc
outsb
popa
and
lods
scas
xchg
dec
inc
jb
mov
adc
iret
push
cmpsb
mov
gs
cwtl
mov
mov
ret
and
test
in
xchg
xlat
es
test
push
xchg
or
fisubrs
popf
fucomi
pop
or
mov
pop
lea
outsl
sbb
and
dec
out
leave
aas
jbe
pop
aad
inc
out
mov
lcall
mov
iret
jl
mov
es
cmp
cmp
hlt
push
hlt
insb
sub
aas
dec
js
mov
inc
add
or
mov
movsl
xor
mov
adc
sbb
insb
jbe
hlt
inc
jb
scas
ds
ja
das
icebp
pop
fistpll
push
bnd
xchg
test
push
jae
leave
xchg
sub
add
mov
mov
push
mov
out
mov
and
push
stc
jle
adc
jecxz
mov
jl
xchg
cltd
lret
or
xor
movsb
lahf
fstps
lret
pop
loopne
les
adc
data16
sbb
sbb
repnz
in
sub
push
clc
jp
jnp
lods
jecxz
icebp
pop
or
xchg
pop
jg
inc
test
rcrb
lods
push
mov
nop
push
aam
push
mov
inc
incb
sar
cs
cli
dec
push
aam
sti
ds
mov
addr16
ret
xor
dec
jp
or
outsl
push
jmp
sbb
mov
imulb
push
jge
xchg
adc
mov
push
mov
jge
xchg
cmp
pop
pop
adc
pop
or
adc
pop
inc
test
pop
xor
sbbb
jno
dec
movsl
mov
insb
xchg
dec
xor
and
negl
jae
pushf
sub
jecxz
push
pop
test
cmpsb
add
and
fdivrs
mov
ja
iret
push
inc
pushf
dec
lcall
inc
enter
sbb
scas
sbb
pop
jo
cli
sbb
push
mov
pop
xchg
pop
mov
shll
jmp
ret
lock
rcl
das
rcr
sub
cmpsb
jb
std
pop
xchg
cmp
mov
mov
jge
and
inc
xchg
bound
inc
insb
test
stc
clc
cmc
hlt
les
add
repz
fnstcw
aad
rorl
jae
lea
loopne
inc
lahf
shlb
inc
jmp
add
ret
sarl
cmpl
push
cli
jnp
dec
xor
and
faddl
fwait
out
inc
imul
push
cs
pop
cmpsb
in
shrl
orl
sub
js
adc
fimuls
mov
inc
or
pop
mov
adc
jo
jb
gs
call
mov
aam
out
adc
outsb
arpl
cmc
ficompl
cmp
mov
repz
sbb
fildll
sahf
enter
mov
out
outsb
fwait
mov
push
popf
adc
jecxz
nop
jb
xor
hlt
pop
and
push
out
mov
mov
jb
sub
xchg
jg
xor
and
ds
js
jp
lahf
in
add
mov
cmp
leave
daa
or
out
mov
push
lahf
mov
xchg
dec
sbb
xor
xor
pop
test
sbb
in
cs
test
ja
cltd
out
inc
jmp
fwait
mov
andb
or
cmp
stos
push
lock
xacquire
fcomip
je
sub
hlt
mov
adc
and
and
divb
scas
ljmp
rcrl
adc
push
out
scas
jle
cmp
movsl
jecxz
cmp
push
into
or
inc
xchg
imul
lahf
imul
inc
daa
cmp
hlt
daa
lods
push
jg
jp
xor
popf
sbb
scas
cmpsb
enter
lods
cmc
inc
lods
aad
and
mov
or
jnp
aad
push
les
xor
les
xchg
mov
pop
int3
lcall
movsl
fwait
and
lds
sbb
testb
aad
movsl
cwtl
addr16
push
xchg
jbe
push
and
xlat
jno
mov
pop
pop
repnz
jns
repz
loopne
xor
into
mov
test
xchg
es
or
jp
sbb
cltd
mov
sub
arpl
hlt
call
or
xorl
push
psraw
or
mov
test
xlat
push
xor
adc
xchg
add
sbb
push
popl
jns
mov
sub
mov
jae
loop
pop
xchg
xchg
sub
jl
scas
jns
arpl
cmp
call
lret
pop
jmp
test
xlat
cmp
subl
fstps
mov
dec
xchg
mov
pop
mov
aad
enter
aas
aas
fnstenv
pop
ss
jb
or
or
cmp
je
and
mov
inc
arpl
out
lock
out
pushf
or
repnz
and
mov
outsb
mov
dec
out
sbb
rol
dec
aam
push
jno
mov
aaa
mov
inc
mov
clc
inc
out
hlt
addr16
out
sbb
mov
dec
rolb
push
inc
out
call
lret
sbb
aas
rcll
inc
dec
ficompl
mov
outsb
gs
sahf
mov
jo
dec
xor
add
outsb
pop
push
mov
xchg
in
xchg
dec
outsl
inc
sub
out
push
dec
pop
jae
jae
cmc
mov
int3
add
lods
adc
incl
movzwl
cmp
inc
dec
aam
into
ret
outsb
xchg
fwait
cmpsl
lea
sub
scas
mov
xor
xchg
cmp
sub
or
in
arpl
adc
cmpb
or
adc
push
or
xchg
sub
fistpl
test
and
nop
mov
and
lret
cmp
pop
fisubl
pop
fisubl
and
rcrl
inc
fstps
mov
bound
lods
cmpsl
je
mov
inc
scas
fwait
subb
pop
je
shl
and
inc
xchg
std
insl
push
pop
sub
cwtl
sar
int3
dec
add
sub
xor
adc
es
or
loope
movsl
mov
xchg
int
lcall
sbb
in
mov
in
mov
xchg
push
pop
outsl
outsb
movsl
jb
ss
dec
or
xchg
pushf
cld
aas
sub
cmpsl
std
pop
aaa
fwait
cmp
inc
stc
or
cmc
repnz
add
cli
xchg
cmc
decb
cltd
xor
push
int
daa
push
loopne
sub
and
sbb
inc
add
adcl
vucomiss
pop
xchg
sahf
stos
and
shld
xchg
fsubl
adc
jg
xor
les
sub
push
and
sub
dec
iret
stc
lcall
out
in
jns
pop
cmp
jno
dec
sub
inc
jecxz
pop
outsl
addr16
add
cmpsb
or
shll
adc
add
das
add
movl
scas
jb
repnz
xor
add
jp
js
sbbl
mov
clc
scas
pushf
inc
daa
mov
in
and
fs
lds
mov
adc
scas
jmp
test
mov
or
mov
inc
inc
mov
out
xlat
int3
cs
fwait
sti
xchg
test
cmc
lds
and
and
pop
adc
jge
mov
es
jne
xchg
push
cwtl
nop
sub
xchg
popf
aad
mov
fxrstor
je
xor
cltd
rcr
mov
adc
xor
leave
dec
jo
push
out
in
into
fucom
adcl
popa
sbb
pop
and
or
and
mov
pop
dec
push
call
adc
pop
adc
outsl
mov
and
jne
insl
adc
jnp
in
jl
push
cmc
ret
int
cli
cltd
decl
lea
pop
push
dec
push
sbb
pop
mov
inc
and
sub
push
pop
nop
and
lock
pushf
aaa
adc
cmp
pop
adc
ss
adc
in
push
xchg
jb
and
push
rorb
mov
aad
mov
pop
or
outsl
aas
push
pusha
xor
push
rorb
pushf
adc
push
aas
loopne
cmp
movsb
mov
inc
and
push
fadds
push
loop
movsl
test
shl
mov
xchg
divl
es
add
je
or
popf
stos
adc
sub
mov
sbbb
pop
xorl
ds
mov
push
xchg
dec
and
add
and
push
imulb
sahf
dec
rcrw
daa
lret
adc
adc
sub
clc
cld
fwait
scas
aam
xchg
test
cmpsl
push
xchg
inc
add
xchg
jl
loopne
cmovns
arpl
aaa
pushf
inc
cli
mul
mov
scas
data16
pusha
stc
popa
push
xlat
mov
adc
aad
jne
push
jnp
xchg
ffreep
stos
pop
inc
xor
inc
in
les
shll
cmp
mov
das
fidivs
sahf
adc
mov
sub
cmp
outsb
ret
inc
orb
jbe
inc
cwtl
mov
cwtl
cmpl
shlb
pop
or
test
mov
cmp
xchg
scas
cmpsl
ret
andl
rclb
xlat
pushf
leave
adc
mov
push
mov
rcll
mov
call
push
push
and
shlb
sub
ret
pop
je
mov
sbb
sub
in
xchg
adc
mov
mov
loop
aam
inc
push
mov
pop
and
imul
subb
xchg
mov
jns
insl
cltd
and
and
xor
dec
ja
jl
mov
push
mov
cmp
mov
push
mov
daa
xor
dec
ja
xchg
fdivrp
xor
decb
popf
out
nop
and
aam
js
push
or
sahf
lahf
std
push
lret
push
jmp
xchg
enter
mov
ret
sbb
push
adc
rolb
aad
roll
gs
lock
cmpsl
std
dec
inc
fcmovnb
das
in
adc
jmp
addr16
push
adc
insb
jg
bnd
in
ret
or
cli
mov
out
push
jmp
arpl
dec
test
popa
lock
inc
and
pop
wbinvd
cmp
outsb
and
inc
out
mov
in
push
xchg
fwait
mov
or
and
xchg
or
repz
rcr
cltd
aas
push
ret
mov
xor
and
pop
lahf
mov
fptan
and
adc
cmp
test
jno
out
movsb
out
lds
fdivrl
mov
sub
sbbl
icebp
shrb
ja
mov
xor
mov
mov
xor
mov
xchg
xorl
rcrb
xor
pop
mov
cmp
or
mov
cmpsb
pop
insb
add
xchg
fisubl
xchg
fisttpl
leave
imul
jp
gs
ret
mov
sti
pop
mov
repz
pushf
cmc
jp
dec
fmuls
fstpl
cld
mov
or
cmp
push
lret
rol
jns
or
int3
hlt
dec
push
cmpsl
inc
jmp
dec
and
pop
cmp
insb
orl
and
fdivrl
adc
jbe
insb
adc
sbbb
xor
mov
in
sub
pop
cli
xchg
js
orl
popf
inc
pop
sub
repnz
inc
sarl
stos
cmp
les
xor
xlat
xchg
out
gs
mov
push
xchg
iret
mov
popf
aaa
pop
nop
xor
sub
xchg
sub
and
mov
gs
aas
mov
in
ss
pop
dec
mov
cmp
push
gs
mov
cmpl
pushl
push
sub
xor
fsts
xchg
popf
arpl
pop
fnstcw
shr
out
into
sarb
and
lds
test
bound
inc
inc
js
outsb
push
xor
mov
mov
mov
jno
inc
and
jbe
fnstenv
fistpll
push
ficoms
xchg
std
xchg
fld
je
mov
sub
xchg
jnp
dec
or
sbb
sbb
loopne
and
out
icebp
fimull
int3
stc
ret
sub
pop
aam
jbe
sub
mov
repz
imul
cs
sbb
mov
mov
out
leave
addr16
fldln2
into
or
insb
in
hlt
mov
sbb
pop
add
ret
push
repz
into
jl
shll
lea
inc
mov
mov
mov
add
xor
cwtl
inc
jnp
notl
test
gs
fnstcw
xor
pop
jge
jle
mov
ljmp
cmc
cli
dec
and
jl
arpl
inc
in
mov
push
pop
cmc
inc
fdiv
xchg
lea
ss
sbb
sbb
pop
fmull
cli
add
sub
loop
dec
or
mov
dec
shrb
popa
sub
stc
out
fstpt
out
loop
mov
aas
cmp
aam
ret
jecxz
leave
pop
xchg
mov
xchg
lods
out
xlat
sti
mov
mov
testb
bound
cmp
insl
pmovmskb
and
or
inc
xor
inc
cltd
lret
inc
add
insb
rcrl
and
push
fnstsw
mov
fwait
fs
push
fsubl
daa
test
dec
mov
cmp
ds
lret
andb
das
test
das
mov
pushf
xchg
test
out
xchg
lock
xor
jl
imulb
push
cs
movsb
idiv
loope
daa
fnstcw
lods
and
popa
dec
int
inc
aas
addb
inc
out
mov
xrelease
insb
or
adc
add
imul
imul
bound
dec
bound
loope
fnstsw
sub
scas
adc
mov
in
jl
mov
or
mov
shrb
inc
sbb
xchg
inc
popf
mov
cmp
jb
ret
jbe
push
ficoml
rorb
mov
cmp
sub
mov
bound
jg
mov
movsl
mov
cmp
dec
shlb
pop
repnz
mov
mov
xchg
cmpsl
push
arpl
out
dec
scas
pop
addr16
repnz
sbb
and
jae
pop
jp
pop
lahf
lea
movsb
push
das
jle
clc
call
out
push
cmp
or
rol
test
shl
andb
test
inc
test
push
or
adc
pop
adc
add
dec
push
xchg
adc
popf
and
scas
sbb
popf
fistl
addr16
sub
xchg
mov
and
lret
loop
pushf
shll
pop
pusha
add
icebp
inc
cmc
mov
loope
mov
inc
adc
sbb
jg
adc
xchg
dec
iret
push
arpl
jo
dec
cmp
imul
test
bound
cs
cld
mov
add
insl
aad
add
sub
mov
push
loope
shr
push
aaa
push
call
loope
xchg
aad
xchg
sub
push
or
jno
jo
pop
repnz
push
push
xchg
into
outsl
es
or
data16
push
jp
xchg
xor
xchg
mov
mov
xchg
xchg
or
fs
or
or
fcmovnbe
in
je
out
cmp
xchg
ja
out
add
jle
push
idivl
outsb
daa
add
xchg
adc
jne
jnp
pop
sarl
daa
lcall
lea
and
ret
pop
xchg
movb
ja
inc
nop
jae
xchg
punpckhdq
jb
xor
fcomps
aaa
sbb
sub
adc
add
jle
je
out
stos
rolb
cld
repnz
push
pusha
dec
pop
test
dec
aad
ds
jecxz
adc
out
xor
xchg
or
cwtl
insl
sbb
sbb
inc
mov
invd
call
cmp
call
in
mov
enter
xor
mov
lods
sub
push
cmp
fldenv
fdivs
aas
shll
popf
sub
inc
and
jns
pop
xchg
and
add
test
test
and
xchg
subl
lahf
test
mov
ret
jns
icebp
daa
jae
repz
test
mov
xor
repz
adc
or
lret
movsl
mov
fcom
xchg
jmp
and
hlt
dec
cwtl
mov
xor
jo
dec
mov
pop
xchg
data16
lods
sub
lods
dec
xchg
jae
sub
cmc
aad
in
xchg
shrb
shll
and
ja
mov
test
mov
jp
dec
jne
xchg
mov
rorl
inc
insb
inc
sahf
ds
inc
sub
popf
sbb
adc
pop
mov
fistpl
push
push
xchg
jg
pop
xchg
aam
ja
add
pop
std
call
xchg
icebp
fstps
add
fcmove
jb
pop
and
fsubl
insl
pop
inc
adc
adc
jle
sar
sahf
jne
ja
xorb
inc
add
add
je
jp
xchg
sbb
fbstp
xor
inc
or
sub
inc
int3
inc
sub
and
test
outsl
mov
test
cld
dec
clc
push
ja
sbb
mov
rep
cld
cwtl
jecxz
inc
in
aas
cmc
cli
loope
lret
xor
mov
push
ret
push
popa
jl
aaa
mul
cmpsl
xor
out
mov
roll
add
mov
shl
frstor
imul
rcr
popf
insb
mov
push
pop
cmpb
sub
adc
add
inc
push
rolb
mov
mov
xor
jb
addr16
pop
cli
xchg
or
out
dec
ljmp
rclb
dec
inc
add
ret
hlt
cmpsl
repz
jb
call
ja
and
ret
out
jbe
cmp
push
add
mov
jmp
sahf
push
and
lea
fnstcw
popf
jbe
mov
jb
test
fcmovnbe
xor
pop
dec
pushf
mov
addb
and
lods
mov
data16
cmpsb
xor
sti
mov
inc
outsl
loop
nop
inc
call
mov
sub
outsb
lods
mov
out
xchg
inc
mov
and
xor
cwtl
xchg
and
mov
cmp
mulb
push
jle
cwtl
repz
push
sbb
flds
loopne
cld
sub
push
fsubrs
out
mov
cltd
mov
outsb
xchg
lret
iret
mov
xchg
std
out
mov
cmp
into
je
adc
cld
and
sub
mov
shll
mov
test
stos
loope
dec
icebp
and
add
xchg
ficoms
bound
ja
push
mov
imul
pop
add
jnp
orb
lcall
fisttps
popf
test
fimull
loope
add
inc
mov
push
push
jns
cmp
dec
es
stos
inc
mov
sbb
xor
icebp
dec
cmp
fnstenv
jmp
mov
pop
insl
and
pusha
inc
xchg
out
jge
pushf
jno
sti
xlat
jge
popf
js
out
mov
lahf
push
sbb
push
mov
in
imul
mov
out
lods
subl
clc
add
xchg
dec
sbb
ret
imul
out
push
jp
pushf
xor
pusha
fmull
dec
in
inc
daa
jge
mov
inc
insb
jp
push
inc
or
ret
jmp
and
sbb
mov
test
bound
push
jns
inc
dec
mov
js
jne
fisubs
push
aas
jg
sub
test
andb
mov
pop
test
add
mov
sub
jne
outsb
mov
arpl
orb
push
mov
scas
in
cld
stos
andl
cmp
std
cmp
xor
imul
jmp
nop
push
mov
repz
pop
rorb
mov
loope
sbb
movsb
clc
adc
cmpsb
stos
repz
andl
adc
sub
mov
jb
clc
jo
mov
mov
cmp
nop
mov
adc
test
push
jo
or
jnp
pushf
cmp
add
sbb
jb
sbb
in
pop
mov
mov
jp
scas
cmc
mov
jbe
cld
das
iret
popf
ret
push
push
jmp
pop
mov
fwait
in
adc
fbstp
in
mov
pusha
jmp
cmp
rcll
sub
dec
rolb
mov
fs
jecxz
jo
insl
or
insb
shl
push
dec
mov
sbb
fimull
pop
jmp
inc
cmc
dec
into
out
jns
sbb
cmp
inc
dec
loope
and
dec
pop
aad
or
and
jno
repz
stos
adc
shrb
iret
aaa
mov
mov
jns
lret
test
jns
lds
in
in
cmp
ss
lahf
and
lock
mulb
in
cmp
clc
push
ret
stos
cwtl
xor
stos
sbb
aad
adc
dec
jbe
mov
and
jbe
adc
cmp
dec
xor
mov
aad
sar
adc
sti
sub
jecxz
pop
gs
rcrb
adc
in
and
loopne
pop
push
clc
push
push
stos
into
xchg
mov
stos
in
jo
cmp
and
mov
rcrl
mov
dec
loopne
clc
cld
enter
jmp
sbb
jb
xor
mov
in
enter
lock
scas
in
movsl
lahf
adc
xchg
xchg
rcll
xor
ret
les
loope
and
lods
icebp
pop
les
inc
cli
ds
out
fisubs
sub
xor
test
fld
aas
insl
dec
or
popa
mov
add
inc
pop
xchg
mov
add
and
adc
das
cmp
lods
jmp
cmp
jp
xor
cld
sbb
jecxz
mov
out
les
inc
in
pushf
cmp
jmp
vgatherdps
loop
xchg
loop
xorb
dec
jle
loop
pop
jno
pop
add
sub
mov
test
sub
dec
bound
cmp
jo
movsl
pusha
movsb
test
nop
jge
clc
rorb
cwtl
and
inc
pop
inc
mov
loope
stc
push
mov
adc
pop
push
mov
sbb
test
arpl
test
xchg
loopne
xlat
sbb
push
movsb
clc
push
push
test
jnp
test
orb
xor
shll
arpl
pop
bound
jle
mov
and
cmp
js
adc
xchg
js
repnz
sbb
std
push
mov
mov
inc
lock
test
scas
cmp
fsubrs
insl
ret
pop
dec
push
xchg
pop
fwait
repz
mov
mov
adc
inc
mov
cs
pop
xor
mov
pusha
push
push
frstor
and
ds
jnp
dec
cli
jnp
xchg
mov
fucom
imul
sbb
test
xchg
addr16
fwait
or
insl
fsubrl
nop
jae
enter
loopne
inc
sub
pop
pop
xor
out
addr16
mov
fcmovnu
push
mov
sub
jo
mov
pop
fcompl
aas
test
mov
mov
movb
aaa
push
out
add
mov
dec
lea
mov
imul
nop
int3
dec
sahf
inc
mov
subb
add
ljmp
or
push
inc
dec
push
inc
fs
xlat
push
jo
mov
cmp
daa
jbe
idivb
cmp
sti
mov
xchg
inc
stos
scas
rorl
inc
hlt
addr16
pop
scas
mov
pop
push
fiadds
mov
mov
and
mov
mov
mov
mov
lret
mull
adc
or
mov
push
movsl
inc
fsubrl
repz
sub
rdpmc
cmpsb
fistps
fs
fbld
and
stos
inc
mov
imulb
nop
pop
cmp
mov
sbb
mov
ret
xchg
das
adc
pop
and
cmp
and
lds
lcall
lock
scas
or
add
pop
adc
fisubl
jmp
sbb
repnz
push
or
push
push
int3
lea
mov
mov
addr16
xchg
clc
mov
push
imul
aas
push
call
pop
push
stos
mov
mov
inc
jno
xor
push
pop
shll
sub
dec
enter
push
push
hlt
pop
sub
xchg
add
mov
imul
jbe
das
or
pop
or
into
cmpsl
mov
pop
and
pop
jg,pt
push
dec
dec
push
aam
outsb
arpl
and
stos
dec
imul
sbb
test
ret
and
data16
cmp
outsl
leave
mov
cs
push
cli
sub
xor
add
jg
push
xchg
or
das
stos
mov
cmc
in
lods
jb
inc
pop
mov
dec
jecxz
mov
ljmp
sti
push
xchg
xor
sub
add
aas
or
ffree
mov
adc
cld
aas
cwtl
dec
mov
std
mov
sub
fnstcw
and
mov
aas
sbb
icebp
aaa
inc
inc
push
cwtl
sti
cwtl
fbstp
lret
std
xchg
imul
mov
push
insb
scas
or
mov
mov
lcall
stos
ds
mov
clc
pop
shlb
out
xor
movsl
inc
cmpsl
or
push
push
scas
add
dec
mov
mov
cld
repz
inc
in
daa
mov
icebp
xchg
idivl
mov
and
cmc
xchg
rorl
or
pop
inc
mov
push
push
lock
xor
xchg
cmp
mov
mov
aad
cmpsb
rclb
stc
and
push
fisttpl
aas
frstor
push
into
fwait
vsqrtsd
aaa
outsl
je
push
mov
aaa
setp
and
mov
sub
xchg
sbb
insl
fsts
mov
insl
mov
xchg
lock
pushf
mov
push
stos
push
mov
imul
mov
fstpl
aam
fucomp
rcrl
sbb
shlb
out
sahf
or
enter
scas
inc
ljmp
imul
inc
sbb
dec
pop
dec
gs
push
icebp
mov
loope
fcmove
pop
jmp
cltd
mov
adc
dec
insl
push
cmp
push
push
pop
shl
mov
xchg
mov
ljmp
or
arpl
repnz
xor
rolb
push
sbb
test
xor
push
and
or
and
int
pop
cmp
dec
mov
insl
frstor
mov
outsl
test
lods
pop
outsl
jmp
lods
sti
lock
ror
sub
aad
and
test
leave
faddl
adc
jbe
pushf
pop
out
ds
dec
sti
or
mov
cli
rorb
mov
jo
inc
push
push
and
mov
lret
pop
push
xchg
jp
jno
and
pop
xchg
mov
insl
cmp
inc
cmc
arpl
mov
je
mov
mov
ljmp
mov
cmp
push
lds
sub
and
leave
sahf
sub
jno
jmp
push
shlb
adcb
out
loopne
stos
xchg
in
xor
xchg
in
pop
mov
lar
cs
jae
loope
cmp
push
das
and
lcall
and
adcl
andb
loop
adc
cli
sbb
lods
dec
and
add
in
lcall
loop
jp
xchg
xor
in
enter
cs
add
pop
cmpl
pop
xor
andl
pop
jp
push
lahf
shlb
xchg
xchg
jge
pop
adc
mov
shrb
sbb
in
mov
pop
test
adc
clc
out
test
mov
and
adc
js
sahf
out
mov
sar
cmpsl
leave
xor
or
cltd
mov
lea
jns
pop
cld
sbb
test
jl
and
mov
cmp
or
mov
xchg
movsb
aad
fldenv
shrb
rcll
js
add
idivl
stos
gs
std
mov
and
jbe
mov
call
push
xchg
cmp
std
sub
les
cli
rcrl
call
add
stos
rcr
xor
sbb
pushf
jp
pop
and
jne
push
inc
sub
push
sbb
jae
std
dec
jne
dec
mov
push
ret
insl
pushf
xlat
sbb
inc
push
mov
push
push
sti
xchg
ds
je
shl
sbb
push
call
insl
decb
aaa
outsl
fdiv
jo
das
addl
pushf
or
hlt
pop
test
xchg
xchg
dec
sub
xor
cmc
cmc
rorl
in
mov
mov
lret
inc
push
mov
adc
fs
xor
push
add
lea
mov
int3
in
xchg
outsb
sbb
and
insb
data16
pop
push
jmp
mov
mov
leave
dec
lret
mov
sbb
nop
push
inc
push
inc
push
je
mov
inc
insb
and
ss
pop
jmp
imul
adc
fidivrs
jmp
scas
xor
loopne
or
mov
int3
and
push
decl
mov
std
xor
pushf
add
popf
inc
out
push
scas
popf
or
jmp
in
mov
mov
push
mov
cmp
loop
pop
lea
fwait
in
push
or
mov
je
call
pop
add
outsl
xchg
movsl
es
outsb
or
push
fs
lock
xorb
mov
pop
jb
stos
mov
mov
sub
fildl
push
lahf
jg
jmp
xor
xor
rolb
pop
sti
mov
addl
cwtl
sbb
xlat
stos
cmp
sbb
jp
sub
movsb
sbb
and
dec
call
lods
repnz
out
add
cs
inc
mov
pop
flds
out
mov
in
es
nop
pop
adc
arpl
xor
cmp
or
dec
inc
loope
loop
mov
fsubrl
aad
in
into
adc
or
sub
inc
push
ljmp
jecxz
out
pop
test
testl
cmp
cs
sub
jl
pop
lock
sahf
pop
add
dec
lock
ds
aas
sbb
pop
xor
aas
push
sbb
iret
inc
cs
leave
jp
cli
das
jnp
add
enter
lods
call
enter
cli
sub
aad
mov
ret
push
aam
and
sbb
mov
int3
test
dec
fcompl
mov
jmp
test
and
jnp
cltd
rcrb
repnz
jecxz
xchg
fidivrs
jbe
fs
xchg
inc
xor
inc
mov
mov
cltd
adc
ret
inc
aad
mov
xor
lea
out
xor
add
aaa
push
push
or
and
imul
outsb
mov
dec
sbb
shll
or
jo
pushl
sbb
leave
mov
shl
inc
fidivl
xchg
dec
test
leave
fs
mov
jp
dec
cmpl
stc
mov
cmc
shrl
loopne
dec
push
lock
lahf
scas
cmp
cmpl
push
xchg
sub
sub
cmp
mov
mov
out
dec
cmp
es
std
jl
in
sbb
adc
mov
inc
sbbl
xlat
jmp
jle
test
shl
xchg
and
cltd
jecxz
ds
add
pop
rorl
xchg
mov
mov
xchg
daa
out
enter
mov
xchg
imul
push
out
adc
mov
xor
fmuls
xchg
rorl
arpl
push
dec
sbb
imul
xor
cld
hlt
mov
nop
mov
and
xlat
arpl
je
or
xchg
cmp
sub
mov
sarl
jne
cmpsb
adcb
cmpsb
loope
pop
out
stos
mov
int3
inc
lahf
push
pop
mov
jae
push
fs
sarb
andb
pop
cld
mov
push
aad
cmc
mov
sbb
test
xlat
in
adc
push
data16
lods
dec
lds
stos
adc
xchg
fdivl
movsb
ret
addr16
imul
xor
push
dec
and
stos
sub
stos
ret
bound
add
into
mov
loop
adc
dec
or
inc
xor
fdivp
jae
cmp
and
sbb
mov
test
mov
dec
mov
lods
jae
push
iret
jl
xchg
or
cmp
or
sub
out
outsl
nop
loope
or
loop
mov
sbb
adc
adc
inc
cmp
pop
xchg
idiv
divb
jnp
je
jo
je
andps
pop
jno
mov
pushf
pop
test
jl
rep
adc
lahf
xchg
pop
cmp
or
push
out
gs
pop
ds
jecxz
jo
pop
pop
adc
test
jns
xchg
dec
repnz
fnstsw
xor
and
push
adc
sub
mov
or
sub
in
cmp
cltd
loope
jb
call
push
loopne
cltd
sbb
push
stc
mov
imul
sbb
test
pop
push
mov
mov
jo
mov
lcall
icebp
sbb
xchg
xor
fimull
cmp
enter
xchg
das
jg
dec
dec
outsb
mov
mov
and
adc
test
push
cmpl
jno
outsb
mov
arpl
and
xor
sbbb
movsl
loopne
repz
xchg
int3
aad
shlb
icebp
or
in
scas
sbb
leave
push
add
ljmp
add
rcrl
scas
fiaddl
add
add
pushf
push
mov
jae
and
xchg
sub
dec
outsb
pop
sub
mov
cld
mov
dec
xchg
mov
je
jmp
sub
add
add
cmpsb
stos
shr
aam
icebp
inc
adc
jle
mov
test
fwait
inc
fisubrl
or
add
inc
mov
in
es
xchg
dec
fnstenv
mov
dec
pop
or
dec
fimuls
adc
rcll
mov
into
mov
jmp
cmp
in
lahf
jbe
idivl
lods
xchg
cwtl
xchg
push
and
testb
mov
leave
dec
sbb
dec
jmp
es
int3
rcl
sbbb
sbb
and
cmpsb
lret
pop
xchg
pop
inc
jae
lods
dec
in
stos
jne
xchg
mov
jns
and
jae
add
dec
inc
imul
popf
mov
push
test
mov
mov
out
ret
dec
inc
sub
test
fmulp
cld
jo
test
push
mov
cwtl
rol
sbb
sub
shlb
imul
pop
orb
mov
ljmp
xor
sub
or
xorb
test
lds
orb
jp
and
mov
je
push
jg
lahf
inc
cmp
push
mov
repz
rcrb
inc
enter
and
dec
xchg
sub
ret
inc
cwtl
iret
aas
dec
test
lahf
jmp
mov
mov
and
push
cwtl
inc
sbb
xchg
sbb
sub
add
cmpsb
inc
jne
push
call
push
or
push
jecxz
fstpt
rorl
mov
and
and
add
les
lods
push
push
xchg
das
pop
add
popf
outsb
scas
std
mov
pop
mov
sub
test
fsts
cli
fdivl
dec
jg
or
in
test
sub
daa
and
iret
inc
xor
sbb
testb
inc
push
xor
add
push
jecxz
test
shl
shrl
cmp
stos
lods
push
push
xchg
out
cmp
movsb
mov
or
lret
xlat
inc
outsl
fs
push
pop
xchg
adc
jae
push
std
jge
jl
mov
sar
inc
pop
imulb
sbb
cld
popf
fcmove
lds
adc
loopne
fsubl
cld
push
dec
pop
test
cmpsl
cmp
jecxz
imul
mov
mov
mov
sarb
or
ret
inc
push
pop
and
ljmp
or
dec
pop
lret
add
mov
popa
dec
mov
jo
inc
pop
cmp
xchg
aas
out
push
push
test
push
cli
xchg
daa
sahf
inc
dec
lods
jo
repz
sahf
sarb
enter
add
out
cmp
jge
lret
mov
stc
xchg
and
cmpsl
fs
ljmp
cmc
mov
ret
push
mov
and
ret
add
notb
inc
sub
cmp
or
js
test
mov
cmc
jb
daa
int
mov
sbb
fimull
xchg
pop
xor
popf
jmp
pop
mov
fisttpl
sbb
lret
inc
xor
fisubs
jp
ja
into
sbb
jp
lret
insl
in
xchg
out
push
test
cltd
and
repnz
xchg
jo
scas
mov
int3
pop
fwait
xorb
mov
sub
mov
bound
aaa
out
ficomps
and
sbb
xchg
aad
fisubs
pushl
fisubrs
mov
dec
cmp
sbb
and
or
or
mov
int
adc
clc
cmp
mov
fistl
leave
and
hlt
add
aad
and
aaa
sub
push
xor
pushf
or
add
popf
or
cmp
add
in
gs
je
lods
add
inc
lods
inc
mov
xchg
jge
xor
sbb
pusha
jmp
int
sub
jnp
pop
add
xor
sub
fadds
mov
pop
roll
mov
das
pop
xor
leave
pop
popf
add
into
ror
aas
push
lret
inc
xchg
cwtl
arpl
jmp
cli
push
imul
std
mov
push
ja
es
push
jae
in
dec
popa
outsb
and
push
dec
xor
jg
mov
ja
insb
mov
movsb
andl
outsb
lds
arpl
movsl
mov
add
mov
add
sub
out
inc
xor
cmpsl
cltd
sub
dec
movsl
xchg
cmp
mov
insb
mov
or
test
pop
rol
out
and
mov
push
and
popf
jl
push
or
daa
int3
out
stc
clc
lret
test
scas
leave
hlt
in
and
mov
popa
popa
addr16
sbb
rolb
xlat
shrl
push
rorb
out
int3
cmp
pop
pop
mov
mov
add
ja
rorl
xor
shll
call
mov
hlt
or
adc
daa
enter
dec
jne
xchg
push
gs
mov
xor
loop
sbb
sub
mov
cmp
or
sub
lods
ss
cwtl
jmp
outsl
xchg
adc
lds
popf
je
push
decb
mov
dec
aad
mov
sub
adc
enter
call
sub
adc
xabort
push
jnp
xchg
insl
fwait
pop
xor
pop
xchg
mov
jb
inc
in
push
mov
push
in
bound
push
push
movsl
sub
mov
pusha
inc
data16
test
idivl
movsb
arpl
pop
addr16
mull
lods
sub
fisubrl
lret
loope
jae
push
mov
sub
cmpsb
div
push
dec
clc
std
sbbl
jo
mov
mov
and
scas
sub
xor
cltd
xor
and
daa
mov
pop
xchg
mulb
orl
icebp
dec
fildll
pushw
rorb
mov
add
ljmp
dec
mov
pop
add
push
and
mov
ret
aad
inc
subb
lcall
cs
mov
leave
mov
and
shrb
out
loop
lahf
outsb
pop
sub
cld
ja
aas
sbb
sbb
inc
sbb
mov
arpl
inc
dec
call
sarl
jo
jl
push
mov
pushf
and
push
xchg
cmc
xchg
icebp
out
loopne
std
jne
hlt
es
ds
cs
inc
sub
test
xchg
sbb
pop
iret
inc
xor
into
mov
in
in
xchg
sbb
xor
adc
push
in
idivb
filds
push
lahf
adc
push
mov
jns
pop
or
add
mov
repnz
inc
xchg
das
cmp
roll
inc
je
dec
mov
inc
and
mov
shrb
cmp
sbb
jnp
clc
ret
xor
jns
inc
inc
dec
repnz
and
inc
insb
xlat
mov
pop
inc
mov
out
mov
imul
add
inc
dec
pop
out
cmp
and
cmp
mov
pop
adc
mov
push
out
mov
clc
int3
fbld
mov
bound
andl
in
mov
jo
xchg
xchg
cmpsb
xor
fists
int3
out
ficomps
loope
or
stos
cmp
mov
jp
jbe
imul
enter
mov
jne
fistpll
adc
cmp
sub
iret
subb
ds
jp
jp
test
sub
mov
xor
push
in
out
cmp
repz
mov
test
fnclex
mov
inc
loope
loopne
out
mov
pop
lcall
push
pop
ljmp
popa
adc
hlt
subl
and
test
jmp
mov
filds
jmp
int3
std
shlb
inc
daa
sub
mov
xchg
int
into
cmc
cmpsb
stos
cld
or
pusha
js
and
cmp
rorl
pop
out
and
xchg
inc
loop
mov
jmp
flds
lret
je
lcall
xor
imul
push
jge
jb
pushf
dec
add
inc
enter
and
jo
incl
push
jns
fnstenv
mov
mov
outsb
push
clc
aaa
imul
push
out
and
xor
cmpsb
loop
imul
or
jno
insb
mov
nop
and
xor
fdivrl
push
pop
loopne
call
sub
loopne
xchg
repz
jg
and
mov
or
stos
outsl
int
xchg
mov
add
add
adc
mov
std
fisubs
mov
in
fisttps
js
inc
decl
xchg
mov
add
jb
in
mov
call
xchg
mov
xlat
call
imul
lods
mov
mul
fcomps
data16
lret
xor
popa
out
adc
mov
lahf
ss
push
push
outsb
fcomp
nop
xchg
gs
sbb
js
pop
jno
sahf
jne
and
jnp
add
stos
inc
fdivr
daa
sbb
cmp
outsb
inc
jge
adc
xchg
dec
insl
icebp
mov
cmpsl
icebp
sbb
cld
fidivs
sbb
fucomip
loopne
and
js
outsb
xor
cltd
loopne
inc
bound
push
push
xchg
mov
dec
sbb
leave
rcl
mov
repz
fstps
push
sub
jmp
stc
jle
mov
daa
les
les
shll
jecxz
lods
sbb
dec
pushf
and
xor
hlt
sti
pop
fs
enter
xor
testl
mov
aas
sbbb
jmp
push
push
pop
adc
in
xchg
sub
dec
sbb
stos
dec
sti
inc
test
xchg
push
sbb
xchg
ret
ds
les
rcrb
sti
cmp
stos
add
inc
ret
and
fnsave
push
dec
int3
cmp
or
dec
stos
shrb
outsl
lea
data16
nop
je
je
pop
sub
imul
cmp
jecxz
lock
pop
pop
fdivl
jnp
cs
mov
sti
fstpl
push
in
cmpsl
push
xchg
daa
push
popa
push
add
or
lcall
rcrb
lret
loope
imul
mov
movsl
jbe
jb
ret
int
mov
nop
xchg
aaa
mov
adc
push
aaa
xor
mov
mov
cmc
mov
lock
pusha
dec
add
inc
cmpsl
or
push
mov
mov
in
push
icebp
sbb
outsb
cs
orl
aam
shrl
mov
out
or
stos
mov
push
dec
push
out
stc
mov
xchg
xchg
loop
add
icebp
pop
fcoms
adc
fwait
lea
jl
sub
scas
in
mov
mov
lret
inc
pop
out
mov
stos
jmp
repnz
xor
xchg
stos
aas
dec
pop
mov
std
pushl
mov
xchg
fs
pop
negb
es
je
jge
xchg
inc
xor
stc
pop
imul
pop
mov
push
jl
or
xchg
sub
mov
popf
pusha
aas
rcrl
jne
dec
fxch
cmp
insl
mov
xchg
daa
push
push
jno
adc
inc
adc
inc
fwait
call
mov
test
or
push
test
mov
cld
ret
loopne
lds
fnsave
xor
in
fildl
xlat
sbb
icebp
dec
mov
imul
cmp
adc
jo
push
ja
mov
test
divl
stos
xor
sub
cltd
cmp
arpl
fiaddl
push
stos
or
pop
jbe
pushf
mov
je
adc
into
pusha
pop
fisubrl
testb
sahf
dec
pop
es
pusha
mov
loope
loopne
lea
aaa
jmp
jle
hlt
dec
xchg
sub
lods
jb
gs
fldcw
or
jns
xor
mov
in
mov
fmull
pop
push
repnz
mov
call
add
mov
hlt
iret
call
fldt
fldcw
and
inc
test
addb
shl
and
fcomps
cwtl
iret
or
addr16
cmp
mov
xor
sub
leave
ficoms
jnp
adc
xchg
adc
jo
jnp
leave
adc
mov
into
pop
pop
dec
or
adc
cltd
cwtl
fcmovbe
lods
neg
sbb
mov
sbb
or
mov
xor
test
pop
cmp
mov
jle
pop
ret
leave
int
repz
insb
mov
das
hlt
sub
arpl
or
push
adc
stc
jo
inc
pop
push
stc
lret
mov
pop
and
in
push
push
out
call
cmp
lret
fidivrl
push
mov
loope
mov
xor
imul
push
cmp
jl
imul
push
cmp
inc
push
cmc
cmp
and
inc
jmp
lds
mov
jmp
jo
out
mov
imul
xlat
jbe
dec
jmp
push
lret
daa
sub
push
jo
mov
add
inc
and
sbb
mov
cmp
jle
aad
or
fucom
stos
mov
call
scas
xor
push
xor
test
cmp
xchg
fiaddl
lock
or
mov
push
fs
in
arpl
or
sbb
mov
jmp
pop
cli
jmp
pop
stos
popf
cmp
orb
cmpsl
test
cmp
mov
or
adc
nop
sub
lods
lods
pmulhw
pop
mov
xorb
jns
pop
push
neg
aam
push
jle
incl
stc
pop
xchg
aaa
scas
negb
cwtl
rclb
push
das
sbb
inc
inc
dec
frstor
call
xor
dec
or
int3
lods
out
mov
loopne
adc
xchg
mov
inc
mov
insb
push
dec
push
add
fisttpl
jg
push
shlb
adc
fistl
dec
adc
pop
jno
cmc
sbb
movsb
push
sarb
in
insl
cmp
ret
mov
dec
loope
pop
pop
aad
movsl
hlt
sahf
pop
sbb
sbb
test
or
les
mov
pop
sbb
mov
sbb
pop
jge
cwtl
mov
inc
cmc
repz
adc
jno
push
adc
push
sarb
sub
dec
gs
jecxz
lea
shlb
scas
dec
daa
roll
and
and
in
out
jg
rcll
jg
lds
mov
inc
jnp
pushf
pop
aam
jne
adc
sti
cmpl
adcb
mov
sti
ljmp
dec
and
mulb
lods
pop
cmpsl
push
fwait
stc
jae
jne
or
inc
out
out
inc
xor
dec
stos
shld
das
hlt
ss
push
pop
mov
xchg
test
sahf
in
push
arpl
insl
push
int
sub
push
bound
lods
cld
stos
xor
mov
ret
outsl
bound
pop
ljmp
adc
into
clc
sbb
leave
pop
testl
aad
aaa
in
and
test
jbe
repnz
stc
jge
sbb
js
sub
mov
mov
adc
jae
xor
mov
icebp
xchg
sub
sbb
push
js
outsl
xchg
es
push
mov
jbe
add
or
adc
bound
mov
mov
movsb
and
clc
inc
sbb
cmp
pop
sub
inc
scas
dec
mov
pop
sub
cmpsl
xchg
push
jbe
ljmp
gs
fsts
and
xor
cmp
or
xorl
or
push
cld
sarl
pop
aaa
lods
or
cmpsb
jp
sbb
rcrl
scas
mov
sub
cmp
adc
cwtl
sub
add
add
out
xchg
xor
mov
xor
pusha
dec
sbb
jge
inc
xchg
aad
dec
push
xchg
pop
adc
push
xor
push
inc
jl
pushf
mov
mov
into
jbe
loopne
arpl
insl
cmp
or
js
incb
and
out
cwtl
loop
lods
sub
and
fiadds
and
fistpl
dec
filds
push
add
lahf
daa
imul
mov
push
jl
jecxz
mov
loop
das
cmpsl
popf
mov
enter
std
test
sarb
in
gs
lcall
or
fwait
leave
outsb
inc
lods
popf
push
pop
out
inc
sbb
push
pop
outsl
mov
adc
sti
push
cmp
imul
sar
lock
rcrl
push
popf
push
add
cmpsl
cs
jo
call
in
mov
xchg
test
les
cmp
stos
lahf
add
mov
jne
add
fbld
fcmovu
and
inc
push
lods
mov
dec
pushf
nop
mov
jnp
outsb
fsubrp
mov
or
out
push
cld
xor
ss
jmp
inc
cmp
sub
addb
rclb
andl
cmp
xor
roll
std
lods
sti
sbb
mov
or
clc
lods
cmp
lods
cmpsl
lcall
or
dec
insl
mov
cmp
aad
mov
xchg
sub
sub
or
xchg
pushf
jno
notb
add
and
push
loope
mov
mov
adc
push
test
or
fs
mov
aaa
or
pop
adc
adc
fadds
rclb
fwait
mov
jle
outsl
push
popf
or
sarl
test
adc
lcall
mov
cmp
cltd
dec
pop
pop
shlb
or
xchg
mov
mov
scas
push
mov
dec
jno
adc
jmp
sbb
jge
pop
gs
rcr
in
arpl
lret
add
mov
cmp
push
stos
jge
fmul
adcl
insb
aaa
xchg
jle
pop
shll
cld
lods
mov
xchg
in
rcrb
jle
lret
jge
sbb
mov
and
or
push
mov
inc
cmc
dec
imul
pushw
inc
fidivl
cmp
sbbb
add
stos
das
cwtl
push
sub
outsb
xor
outsl
adc
mov
dec
xor
dec
xchg
lcall
push
mov
stos
adc
xlat
dec
inc
dec
dec
in
insl
addr16
jo
push
mov
add
pop
xor
hlt
dec
pop
mov
mov
in
lds
add
mov
data16
jl
jmp
adc
fsubrl
xchg
xor
mov
out
add
jl
xchg
mov
ret
std
repnz
inc
xchg
into
in
outsl
jmp
xchg
mov
pop
add
scas
or
jne
mov
lds
and
cwtl
fsub
ret
std
mov
mov
add
cmp
dec
jb
and
mov
movsb
and
out
ret
and
jle
enter
lret
xchg
and
lret
push
insl
aas
cld
cmp
test
fucomp
sub
dec
outsl
mov
and
fwait
xor
inc
lods
int3
cwtl
pop
test
mov
inc
push
insb
and
popa
mov
jecxz
jmp
test
decb
pop
mov
sbb
jne
incl
decl
sti
aam
test
inc
pop
sbb
stos
mov
stos
and
in
loope
fisubl
inc
pop
mov
push
dec
sbb
pop
mov
or
pop
cmp
test
cmp
cmc
xchg
xchg
or
sub
je
jbe
std
jp
pushf
mov
lods
push
lret
jno
mov
mov
std
in
sbb
mov
stc
mov
sbb
push
sub
dec
mov
and
cmc
mov
imul
pop
out
fildll
stc
std
mov
int
mov
repnz
or
adcb
push
mov
push
fisubs
stos
ja
jno
inc
inc
fadds
jmp
out
cmp
rorl
jmp
cmpsb
arpl
aaa
std
lcall
rol
and
push
mov
add
out
cmc
push
ss
sbb
int
sub
jle
shll
sub
and
aaa
jp
mov
aad
test
scas
inc
pushf
cmp
or
nop
pop
in
sbb
scas
mov
sarl
bound
dec
adc
fs
push
add
push
pop
shll
out
shrb
inc
pushl
enter
lcall
pop
pop
pop
jo
cmp
pop
fcomp
adc
cmp
popa
fwait
mov
pop
dec
mov
imul
cmp
sbb
mov
mov
xor
jns
adc
aam
enter
lods
push
mov
imul
orl
out
pushf
adc
test
into
shll
fwait
and
xchg
pusha
mov
bound
out
jb
dec
in
and
icebp
push
cwtl
loopne
xchg
mov
push
push
cmp
mov
add
inc
lret
xor
out
inc
xchg
cmp
push
loopne
mov
push
pushf
mov
dec
lods
add
test
shl
pop
ljmp
stc
push
outsl
test
fdivs
push
add
add
xchg
test
jnp
rcrl
push
adc
sub
ja
adc
fnstsw
enter
aad
fdivs
push
pop
jae
sub
inc
dec
test
push
push
repnz
push
div
dec
jnp
mov
xchg
sub
push
repnz
mov
es
es
mov
xor
and
fiaddl
push
xor
pop
push
aam
iret
jne
xor
sbb
div
mov
clc
dec
xchg
aad
inc
mov
call
pop
or
xchg
push
mov
fs
jne
lds
xchg
cs
inc
rorl
jo
loope
test
subl
test
or
push
jo
out
xor
sbb
mov
pop
fs
in
xchg
and
popf
cmp
out
shrl
add
cmp
sbb
lret
outsb
ret
pop
in
mov
add
xchg
cld
xor
cmpsb
lock
pushf
inc
cmp
push
into
mov
cmpsb
xor
aam
add
notb
loope
pop
int3
leave
mov
leave
inc
ja
push
mov
pop
and
mov
mov
ljmp
subb
mov
arpl
xor
sbb
and
pop
or
cmp
test
lds
mov
cmp
icebp
xchg
ffreep
pushf
sbb
mov
cwtl
in
mov
cmp
movsb
push
les
fcmovbe
addb
ds
movsl
or
jg
jb
or
pop
stc
add
and
inc
push
fwait
cwtl
jbe
xor
lds
sub
mov
mov
stos
pop
das
xorb
xchg
adc
stc
faddl
mov
cmp
lods
add
or
into
jno
hlt
lods
dec
push
inc
sbb
push
loop
lods
push
mov
cmpb
xor
outsb
stc
pop
sub
cmc
cli
test
ret
lods
pop
jmp
lahf
xor
and
lret
xchg
pop
repz
pop
fildll
ljmp
sbb
lss
dec
loope
lock
add
mov
mov
sub
into
cmp
adc
cmp
mov
inc
or
xor
scas
xor
xchg
ljmp
inc
scas
pop
je
into
cmp
andl
xchg
xchg
pop
sbbb
add
cs
cld
mov
sbb
sub
xchg
mov
xchg
inc
push
sahf
testb
mov
push
mov
and
inc
and
pop
dec
mov
mov
sbb
loopne
mov
add
mov
adc
or
inc
fstpt
fs
inc
cmpsb
call
push
cmp
mov
nop
lahf
mov
shlb
sbb
mov
orb
fs
rorb
inc
idiv
add
xor
mov
leave
mov
aaa
es
add
call
xchg
cmp
xor
ja
push
clc
push
push
sbbb
add
out
or
jns
neg
sbb
ds
aam
outsl
mov
sub
rcrl
lahf
mov
or
inc
and
xchg
sbb
jge
leave
stc
inc
push
inc
mov
cli
icebp
int
push
clc
pop
lds
leave
jnp
movsl
adc
enter
xchg
sbb
arpl
rcrl
fisubrs
mov
mov
xor
pop
xchg
cltd
pusha
xchg
insb
push
bound
jnp
loope
ficompl
mov
adc
lret
popa
icebp
inc
push
mov
push
push
mov
jbe
arpl
pop
test
fiadds
mov
fidivrs
xchg
xchg
add
fdivl
popa
jecxz
test
add
xor
sbb
leave
xlat
in
js
sub
out
fstpl
jl
repnz
popl
insl
xlat
xchg
sbb
lea
jge
out
mov
loope
cmp
mov
push
in
mov
mov
or
push
or
add
sub
movsl
insl
imull
pop
push
jns
cmp
jb
lret
jecxz
fwait
repnz
push
sar
aaa
daa
or
pop
divl
fidivrs
cltd
mov
pop
jecxz
jbe
cmp
cmc
movsl
pop
mov
dec
push
test
test
sarb
stc
pop
popa
das
in
stos
rolb
test
and
dec
insl
mov
adc
dec
sub
nop
lock
pop
xor
je
mov
insl
add
jecxz
xchg
in
call
outsl
xor
cmp
push
sub
jle
shlb
xor
xor
repnz
inc
jne
ret
push
out
cwtl
xor
mov
out
and
mov
in
stc
add
mov
repz
mov
test
mov
scas
sahf
pop
push
jmp
out
dec
push
fldenv
pop
out
pop
fistl
mov
cmc
loope
lret
subb
mov
daa
and
cmp
jl
movb
cltd
jmp
lock
add
idivl
repnz
cmp
sub
mov
inc
mov
and
call
movsb
pop
inc
jg
sbb
mov
or
add
sub
and
pop
clc
out
cmp
xchg
push
mov
cmp
cwtl
push
sbb
sbb
pop
mov
adc
stc
mov
call
pop
movsb
pop
nop
aas
in
iret
cmp
insb
pop
lret
push
jle
sbb
jbe
aam
adcl
lret
adc
and
fidivl
stc
data16
dec
add
xor
adc
fldt
in
movsl
add
hlt
cli
mov
fucomi
fwait
js
cmp
lods
sar
and
dec
pop
imul
mov
xchg
push
xor
std
mov
jle
stos
iret
out
mov
mov
cmp
xchg
mov
sahf
pop
adc
xor
pop
jl
and
ret
rcrl
push
mov
and
sub
stos
sar
cmp
je
mov
push
popf
sahf
cmc
test
int3
jmp
jmp
jp
mov
or
hlt
push
lret
sbb
into
inc
add
pop
outsb
inc
fdivrp
or
mov
mov
in
or
pushl
inc
inc
and
push
jo
std
adc
adc
push
sarb
std
or
mov
icebp
xor
out
push
jno
aas
ljmp
sti
mov
xchg
lret
sbb
push
data16
les
aas
mov
or
aas
xor
sub
inc
hlt
mov
pop
mov
fadds
arpl
out
sarb
dec
xchg
test
lret
or
rcl
lcall
xor
xchg
ret
mov
add
scas
push
loop
mov
cmp
pop
mov
push
xlat
mov
push
jnp
add
pusha
mov
xorb
pusha
ret
mov
aaa
ja
inc
mov
jbe
jne
int
xchg
rcll
dec
add
sbbb
adc
fdivrl
mov
aad
lahf
inc
in
dec
mov
pop
mov
in
pop
fsubrl
push
mov
mov
jp
fsubrs
and
test
and
pop
push
lods
and
in
ficompl
lds
lock
sbb
lcall
in
sahf
test
xchg
push
fdivrl
test
cmp
mov
jmp
loop
cmpsb
inc
fidivrs
test
fsubs
dec
aaa
xchg
cmp
fs
add
mov
or
outsb
mov
jae
imul
sub
mov
bound
movsl
int3
data16
jmp
mov
push
lods
les
sbb
jne
push
addr16
das
pop
imul
andb
jns
inc
stc
jp
mov
xor
mov
les
lods
jne
dec
addr16
xor
faddl
loopne
stc
pop
out
movsl
shll
adc
icebp
jnp
mov
lret
jle
arpl
mov
xchg
inc
call
adc
stos
outsl
pop
jo
xor
adc
popfw
add
lods
inc
sbbb
or
int3
push
jne
out
je
aaa
dec
push
fwait
stos
in
leave
ret
or
jle
in
push
pop
xlat
pusha
cmp
dec
or
mov
jbe
push
rcll
hlt
push
jg
fidivrl
mov
add
mov
pop
xchg
pusha
ss
pop
push
adc
sbb
sbb
scas
imul
lods
push
pop
ficoms
mov
dec
inc
adc
pop
lods
xchg
xchg
mov
mov
xor
cmp
lcall
rclb
stos
add
shll
add
push
mov
addb
cmovge
cmpsl
push
xchg
ds
xchg
add
xchg
cwtl
sarb
xor
xor
and
cmp
repz
and
inc
loopne
mov
pushf
xchg
fbld
notb
xchg
xchg
pop
pop
pusha
call
in
mov
push
std
out
dec
loop
negb
insl
aas
cli
xor
or
adc
mov
movsb
ffree
into
push
clc
adc
cwtl
or
int
test
pop
fsubrs
sti
stos
ds
xchg
out
xor
or
dec
adc
fdivr
adc
sbb
vmovntdq
std
xor
push
int
ss
mov
fildl
jo
cmp
inc
push
and
mov
mov
xchg
ss
cmp
clc
es
push
jnp
inc
das
jecxz
popa
scas
jg
nop
jno
orl
push
nop
xor
dec
mov
bound
in
popa
fistps
leave
dec
fwait
jmp
mov
jne
jne
insl
shrl
xchg
pop
xorb
sub
imul
add
mov
jo
sub
sub
out
scas
xlat
lea
mov
aas
lcall
cmp
add
shrl
sub
into
jnp
outsl
jmp
pop
or
mov
xor
out
and
call
and
insl
push
out
iret
pop
fdivp
mov
push
popa
rorb
test
clc
add
pushf
insl
enter
push
and
std
in
lret
lods
call
mov
pusha
mov
cmp
mov
and
jmp
les
cmp
mov
inc
push
jbe
sbb
mov
pusha
lret
std
sbb
jl
pop
xchg
fisttpl
mov
cmpsl
push
dec
lahf
sbb
push
fsub
cmpsb
fisubl
leave
arpl
cmpsl
push
repz
xorl
out
ss
mov
cmp
es
arpl
mov
lods
or
dec
sti
or
sub
mov
aam
sub
xchg
adc
cmp
rcrb
lret
xchg
xchg
pop
and
jne
outsl
sub
jmp
mov
and
mov
repz
pusha
push
in
mov
out
mov
dec
jne
enter
lcall
mov
rcrl
nop
lods
ret
aaa
cmp
mov
push
mull
push
jl
jp,pt
mov
or
jecxz
dec
mov
test
sub
jo
jp
push
cmp
sti
add
int3
lret
mov
or
xorl
addb
in
fwait
orl
bound
scas
lods
lods
cmp
jecxz
sarl
jbe
push
add
ja
ret
xchg
cmp
mov
add
dec
cwtl
ds
lret
xor
mov
jmp
jbe
lret
sti
jb
adc
push
mov
test
aam
sub
stc
shl
mov
jl
outsl
jmp
cmpsl
push
jo
dec
add
push
rcl
xchg
mov
xor
lods
mov
mov
jbe
es
add
mov
sbb
jb
jp
rcrl
scas
fdivrs
popf
std
repnz
iret
repnz
mov
add
out
mov
mov
xor
add
fstl
aad
mov
outsl
pushf
adc
pop
imul
or
sbb
out
jg
mov
sub
add
push
xor
sbb
in
movsb
inc
mov
addr16
test
pop
enter
sbb
pop
jmp
pop
popf
leave
ja
mov
adc
mov
adcl
xchg
lret
ret
push
jge
jg
rcll
xor
jle
push
jmp
fwait
mov
jnp
pextrw
movsl
sbb
xchg
pushf
iret
stc
paddw
es
xchg
out
jmp
lods
xchg
sub
in
jo
pop
add
cmp
cmp
mov
inc
nop
or
push
inc
test
sub
pop
cli
add
jns
mov
jmp
mov
aam
nop
mov
inc
hlt
sub
call
test
push
sbb
adc
jmp
add
in
lods
les
pop
pop
cmp
mov
jbe
mov
push
cmp
xchg
scas
push
push
cmp
adc
shl
add
lea
lods
dec
adc
jp
aam
arpl
and
push
xlat
dec
into
push
add
push
arpl
inc
in
negl
add
stos
dec
es
loopne
mov
ss
in
jnp
lods
lahf
jl
mov
or
xchg
mov
pop
cmc
sbb
jne
sub
lods
and
xchg
sahf
push
negb
movsb
cwtl
and
sub
nop
or
mov
xor
loopne
addb
pusha
test
add
std
dec
mov
inc
cmp
dec
add
sbb
test
mov
pop
adc
outsb
fcmovnbe
lcall
inc
push
pop
push
sbb
jo
out
mov
sahf
jnp
xchg
daa
sub
cmp
inc
xchg
jmp
sub
adc
test
adc
jae
jne
rcrb
pop
pop
adc
hlt
adcl
add
lock
ss
adc
fs
push
or
pop
in
push
cs
lret
push
mov
mov
xorb
lock
pop
fwait
mov
fimuls
in
dec
int
jo
js
sbb
cltd
inc
mov
int3
sbb
xchg
pop
ficoms
int
dec
mov
std
andb
sbb
jnp
or
pop
xor
xchg
and
pop
test
inc
xor
mov
jmp
lret
call
lock
push
ret
cmp
sti
call
cli
push
xchg
or
jmp
sarl
sbb
or
mov
iret
inc
stos
stc
jo
push
cpuid
sub
push
clc
ds
mov
mov
je
shll
push
jecxz
aas
fimull
in
sbb
xor
push
jmp
push
dec
push
shlb
sbb
ja
jp
test
adc
mov
stc
xchg
fwait
dec
adc
cmp
rcrl
mov
or
mov
adcl
les
pop
in
adc
popa
mov
ficoml
sub
xchg
jmp
out
add
adc
cwtl
and
jmp
fldcw
jge
dec
inc
loop
jns
adc
add
arpl
sub
jb
orl
push
push
mov
addr16
shll
dec
outsl
and
fildl
cmp
call
iret
xchg
cmp
aam
icebp
inc
jge
scas
ret
xchg
in
jae
adc
cmp
push
mov
xchg
movsb
jnp
dec
fldcw
pusha
jmp
shlb
inc
push
xchg
push
ret
fs
mov
sbb
cli
lret
xor
push
mov
xchg
mov
cmp
mov
adc
in
jnp
inc
push
ret
loopne
adc
outsl
push
ja
sbbb
lahf
das
lock
dec
les
mov
mov
out
ret
jns
pop
aaa
pop
into
sbb
call
movsl
push
jle
dec
inc
pop
xor
mov
lock
sub
sub
mov
or
pop
xchg
push
mov
popf
sub
aaa
dec
mov
jae
outsl
or
stos
push
shll
adc
mov
cmp
fidivrs
mov
pop
adc
jp
xchg
jae
cltd
in
in
loope,pt
not
and
fcom
xchg
sbb
mov
iret
add
lock
add
sub
lock
pushf
xchg
push
mov
into
insb
in
rorl
movsb
xchg
gs
aad
jno
scas
sub
scas
push
cmp
jae
fidivrs
jmp
xchg
fs
iret
jp
ljmp
cmp
pop
out
jne
cmc
dec
or
xchg
inc
add
adc
jno
inc
fcoml
out
negb
adc
push
daa
fisubrl
sbb
mov
mov
sti
ret
xchg
inc
es
push
xchg
leave
leave
pop
push
xor
ror
cmp
pop
cmp
push
jmp
in
jns
mov
mov
dec
dec
incb
xchg
sub
imul
lea
shlb
insl
mov
cmp
sbb
test
and
frstor
dec
and
repnz
nop
pushf
dec
mov
movsb
push
aam
xchg
sti
stos
lcall
cld
jle
lea
arpl
mov
cmp
and
adc
push
and
xor
call
into
cmp
and
mov
xchg
jg
scas
xchg
push
and
push
or
cmc
into
inc
jb
andl
sub
mov
nop
sahf
inc
inc
pop
inc
sub
cmc
fisttpl
cmp
out
in
lret
xchg
fcomps
jl
push
subb
xlat
xor
aas
inc
add
ret
lahf
mov
cld
jae
cmp
and
mov
int3
or
stos
hlt
jmp
lods
aas
gs
cltd
mov
sub
mov
push
movsl
loop
ja
push
dec
mov
ljmp
inc
jle
xor
out
dec
inc
mov
repnz
loope,pt
push
mov
adc
mov
mov
xchg
inc
and
push
adc
mov
and
jne
ret
cmpsb
xchg
dec
iret
loop
jmp
xchg
aas
mov
outsl
jp
loopne
mov
xor
rclb
cwtl
in
mov
jp
andl
popf
ljmp
jle
fildl
fsubs
add
jnp
jns
test
fcomip
and
mov
cld
cmp
ret
fs
loop
scas
push
pop
pushf
cmp
pusha
test
pop
sub
pop
or
pop
stos
ficoms
mov
or
aam
xor
sahf
imul
repnz
loopne
pop
xchg
push
je
cmp
or
lahf
cmc
jae
popa
xchg
mov
push
addr16
or
and
jnp
sarb
in
arpl
xor
jb
add
xchg
push
cmp
int3
cmpsl
adc
out
fwait
sbb
add
iret
je
popf
push
minps
jp
daa
mov
xor
insl
movsl
push
or
mov
insb
add
or
int3
mov
dec
xor
pusha
mov
xchg
pushf
sbb
jbe
mov
stos
sbb
jb
test
out
adc
lea
xchg
add
xchg
stc
sahf
add
mov
mov
nop
jg
bound
cli
mov
cmp
cmc
and
into
adc
xchg
xlat
pop
xchg
cld
out
xor
fs
popa
aaa
and
lea
jno
pop
cwtl
sub
xlat
loopne
inc
xchg
push
cmpsb
stos
lods
mov
out
add
js
cmp
adc
dec
mov
xchg
into
pop
sbb
and
sbb
daa
ret
mov
jg
mov
fs
outsb
cmp
or
outsl
dec
sti
rolb
mov
pop
lea
xchg
mov
lahf
jo
add
sbb
pop
jnp
mov
in
rcrb
mov
pop
or
push
int3
xor
jns
ret
pusha
pop
push
dec
lret
and
aad
cmp
lcall
pop
lcall
sub
xchg
aad
les
fnstsw
shrl
ficompl
xchg
pop
xor
jg
scas
jns
add
or
iret
push
mov
scas
inc
gs
mov
dec
mov
sub
rorb
scas
lret
in
xchg
adc
pop
repz
aam
outsl
lods
sbb
jbe
sahf
and
mov
adc
shlb
mov
xchg
push
jl
shl
je
gs
popf
in
inc
lods
mov
repnz
mov
mov
and
jp
cmp
sahf
mov
pop
lds
inc
test
push
xor
and
inc
sub
call
in
aam
in
adc
push
es
mov
push
mov
inc
sti
push
imul
dec
mov
jl
in
stos
dec
stos
xor
xor
inc
sbb
int
negb
pop
imulb
movsb
lods
imul
fstl
sarl
stc
sbb
call
mov
aad
mov
add
mov
test
push
das
jne
dec
pminsw
shlb
add
xchg
xchg
popa
fmull
push
dec
in
icebp
jle
add
repz
sbb
jno
decl
in
lods
jo
xor
gs
sub
push
mov
pop
cld
sbb
or
xchg
sbb
and
sbb
sbb
cltd
mov
sbb
push
mov
jns,pt
es
sbb
std
js
sbb
lcall
add
out
insl
mov
out
std
fisttps
scas
push
clc
daa
jae
iret
adc
leave
cmpsl
popa
fadds
cmp
popf
xor
pop
dec
popa
out
inc
inc
mov
adcl
aad
lods
scas
sbb
mov
jo
daa
shrl
and
push
sbb
inc
clc
imul
push
imul
xlat
mov
repz
pop
cli
fistps
adc
mov
pop
fcmovnu
enter
push
ret
lods
adc
jg
xchg
adc
jl
pop
fbld
cmp
mov
into
cmp
ror
add
aaa
xchg
sbb
sub
dec
bnd
push
sbbb
jmp
lea
in
jno
divl
mov
lret
push
pandn
cmpsl
std
jecxz
sbb
pop
out
sub
sbb
or
or
lret
adc
fistl
mov
pop
andl
data16
cmp
lret
adc
test
xlat
sub
int
pop
in
cmp
jae
shrb
fwait
or
into
call
cmpsb
out
mov
push
jae
push
mov
jp
sti
je
cs
or
das
movsl
lds
ja
cmp
orb
out
repnz
cld
mov
ret
fs
pop
out
push
mov
xchg
mov
xor
inc
std
icebp
inc
sbb
inc
movsb
fcmovnu
aas
mov
fwait
dec
js
mov
ss
lcall
enter
inc
and
adc
add
sbb
mov
dec
mov
or
movsl
mov
xor
adc
dec
aam
or
and
aaa
rolb
push
sbb
fwait
mov
ss
jbe
aaa
and
pop
sarl
int
mov
fadds
add
call
mov
sub
mov
sbb
shr
push
or
repnz
rol
std
std
mov
jmp
rep
mov
jge
mov
pusha
xor
lock
inc
pop
icebp
lock
mov
arpl
push
cmp
shll
xchg
lds
jns
sub
cmp
push
dec
xchg
mov
mov
jne
pop
sub
les
mov
cmpsb
xchg
pushf
inc
mov
out
jmp
mov
push
outsl
aas
ret
jle
std
cltd
pop
xlat
or
sbb
scas
or
pop
repnz
jmp
dec
cmpsb
add
cmp
xor
enter
test
jl
mov
outsb
sbb
jno
sti
sub
das
rcr
mov
xchg
inc
aas
jmp
mov
ret
xor
mov
mov
in
jae
clc
dec
jg
insb
mov
jae
mov
arpl
lea
gs
adc
xor
enter
cs
jmp
enter
pusha
sbb
inc
and
fistps
out
pop
cmpsb
cli
loopne
shrb
push
dec
ficomps
sbb
rclb
pop
and
mov
shlb
mov
mov
fsubr
das
or
icebp
inc
jmp
cmp
inc
inc
lahf
xor
hlt
inc
adc
dec
jmp
push
fnstcw
inc
or
jnp
aaa
cmp
arpl
inc
stos
mov
mov
imul
mov
sbbl
push
cwtl
fldpi
movsl
or
adc
cmc
inc
xchg
jl
xor
mov
jnp
sbb
mov
adcl
mov
stc
adc
cmp
data16
aam
inc
mov
popf
add
add
fldenv
dec
dec
add
call
out
ret
imul
out
shrl
push
mov
clc
inc
and
in
sub
inc
inc
call
jb
rcll
leave
pop
and
jo
sub
sahf
cmp
mov
adc
xlat
mov
sbb
ss
stos
jno
jne
fnstenv
test
sbb
inc
pop
sub
jp
loop
cmp
loop
jbe
lods
mov
rorb
or
xchg
loopne
xchg
mov
adc
cmpsb
cmp
jb
push
push
mov
mov
sbb
ds
scas
sahf
fisttps
cmp
lods
loope
pop
xchg
xchg
aad
jb
dec
jbe
dec
dec
arpl
or
xchg
sub
mul
aad
leave
mov
pusha
jne
cmp
cmp
jmp
clc
sub
aaa
xor
cs
lcall
fcom
mov
mov
les
mov
jmp
jno
popa
fstp
push
inc
mov
ja
jl
pop
aaa
test
out
cmp
push
fimuls
cld
ficoml
sbb
jmp
and
mov
das
out
adc
out
xor
iret
cmp
out
icebp
clc
pushf
xor
outsb
or
movsb
xor
andb
sti
inc
push
sub
imul
testb
cmpsb
dec
adc
xor
inc
mov
mov
pop
adc
shl
mov
pop
es
ret
or
loop
mov
popa
mov
add
mov
inc
xchg
fs
imul
popf
jnp
sahf
mov
cli
dec
jbe
jmp
pop
add
mov
andl
leave
or
xchg
scas
push
fxch
loop
scas
adc
notl
inc
sahf
subb
orb
adc
ret
pop
jno
fs
mov
or
cmp
call
sti
cmp
jecxz
rcll
inc
adc
push
add
pop
sahf
shll
xchg
sub
or
or
in
fdivrs
lcall
inc
pop
clc
popf
adc
jge
pop
fs
or
test
shrl
jl
and
inc
push
mov
mov
popf
out
les
shll
xor
lret
inc
sub
pop
pop
movsb
jnp
imul
push
mov
add
xlat
mov
jg
in
mov
push
jle
jno
adc
popa
js
push
jns
repz
mov
xor
pop
ret
add
dec
cmp
mov
mov
sub
test
adc
cmc
sub
pop
or
das
add
sbb
int
rcrl
aaa
sbb
mov
xchg
cmp
push
in
into
mov
mov
sub
push
cltd
sbbb
movsl
push
lods
sti
jp
jg
push
notb
lea
push
clc
ljmp
jae
push
sbb
gs
mov
cs
pushf
call
insl
pop
movsb
loop
in
pop
sbb
jo
sub
mov
inc
dec
inc
xor
and
add
pop
paddsw
and
mov
xor
arpl
push
mov
push
mov
or
push
scas
addr16
or
jne
scas
in
inc
mov
ljmp
aas
outsb
xor
out
leave
das
fldcw
lds
inc
inc
jmp
inc
xlat
enter
je
ret
pop
jae
ds
cmp
test
insl
and
push
mov
pop
orl
push
mov
add
test
push
int
mov
xlat
push
test
out
mov
lret
repz
xor
fimull
or
mov
dec
jo
int3
add
cld
sub
testb
lods
sub
adc
movsb
mov
shr
ja
mov
in
mov
mov
fidivrs
dec
jns
or
rcrl
pop
mov
out
insb
loop
repnz
mov
popf
out
scas
dec
cmp
pop
lcall
loopne
push
rorl
cmpsl
inc
dec
xchg
mov
adc
cld
fstps
pop
dec
out
shlb
idivl
repz
adc
jb
cmp
jecxz
repnz
mov
movsw
into
ds
dec
mov
test
mov
and
gs
in
fmuls
sub
sbb
push
test
sub
mov
cli
and
xlat
cmp
jno
xor
pusha
lods
ja
xchg
xchg
leave
fildl
cwtl
js
gs
cs
push
adc
fldl
dec
cld
or
lods
sbb
push
fs
pop
int
imul
stos
popf
xchg
pushf
cmp
xchg
dec
lods
icebp
pusha
jecxz
adc
dec
inc
pop
js
sub
shl
add
fdivrp
mov
cld
ret
inc
jg
test
mov
jg
xor
inc
cmp
pop
arpl
orl
aas
in
xchg
cwtl
loopne
mov
fwait
or
out
add
mov
xchg
and
inc
push
mov
dec
pop
fists
jns
sub
xchg
sbb
ds
rcll
into
cmp
shr
je
xchg
jns
stc
mov
clc
icebp
insl
je
adc
cmp
ret
xchg
loopne
loop
mov
ljmp
lea
push
rorb
lea
out
outsb
addl
mov
push
mulb
loope
jp,pn
pop
lcall
cmp
iret
lahf
repnz
in
jns
pop
xchg
imul
lret
xor
xor
subb
cmpsb
and
aam
mov
mov
mov
ret
sahf
jo
mov
roll
leave
jne
jae
cmp
in
loope
loope
insb
or
aad
mov
das
mov
pop
mov
push
push
jae
add
mov
sbb
pop
std
aam
cmc
sbb
inc
sbb
in
cld
fiadds
or
lock
mov
popf
fnstenv
pop
imul
adc
mov
dec
pusha
cmpsl
lahf
test
and
sahf
int
xchg
pop
xchg
push
xchg
or
dec
ret
mov
int
lock
movsb
inc
ret
test
add
mov
dec
dec
shll
push
xchg
lcall
add
clc
data16
cmpsb
mov
dec
scas
cmp
sahf
pop
xchg
push
pushf
jmp
xor
jecxz
cs
mov
add
ret
or
adc
aad
arpl
inc
jb
pop
stos
inc
mov
inc
aas
mov
aad
or
fxch
or
jns
je
rorb
jp
popf
xor
adc
sbbl
and
inc
push
loopne
push
xor
push
les
flds
lea
inc
lcall
add
cmpsb
push
movl
push
divb
push
cmp
or
testb
ss
sahf
jmp
push
cmc
sub
sbb
inc
dec
clc
jle
in
insb
cmp
mov
popf
xchg
mov
or
sub
sbb
xchg
fs
sub
rcrl
sub
out
xchg
cld
outsl
fidivrs
add
inc
sub
stos
push
pop
sbb
xchg
xchg
inc
shrl
jne
pop
lret
ja
pop
fcmovne
icebp
inc
xor
js
pop
pop
adc
imul
mov
sar
nop
mov
shll
loop
lods
push
cmp
pop
lea
adc
push
inc
popf
test
out
int
sbbb
movsb
xor
scas
xchg
dec
xchg
ror
lahf
aad
enter
ja
adc
aas
pushf
sarb
fidivs
adc
and
push
call
popa
mov
movsb
add
mov
lods
mov
and
std
sahf
decb
lahf
data16
lods
or
cmpl
push
dec
cmp
inc
mov
mov
in
in
fsubr
xor
movsl
andl
cli
jge
mov
loope
xorb
jae
arpl
adc
iret
push
mul
ficoms
push
lods
dec
sub
loope
lea
jmp
xchg
xchg
lret
stc
iret
xor
aad
fidivrl
testb
loopne
ljmp
cmp
mov
movsl
and
add
rcrl
lret
enter
cld
xchg
out
cmp
dec
sub
jne
push
icebp
dec
adc
or
mov
popf
push
inc
rclb
pcmpgtd
mov
arpl
scas
inc
subb
test
inc
pop
xchg
stc
or
jl
in
fimull
arpl
or
pop
insb
push
daa
stos
mov
or
inc
cmp
or
pop
aas
and
bound
sub
mov
adc
jne
push
jb
xlat
push
test
lods
and
jne
leave
comiss
out
push
push
inc
push
jl
xchg
not
fldl
or
mov
push
repnz
push
sub
jp
mov
pushf
ljmp
push
sbb
jg
loopw
std
inc
fstl
sub
ret
adcl
mov
fsubs
inc
pop
push
push
aam
or
fdivrl
xchg
ljmp
jns
sub
xchg
aas
dec
outsb
test
inc
lea
xchg
outsl
mov
sbb
jns
adc
sbb
push
imul
sub
lret
dec
ret
jp
ds
pop
fdivrs
add
in
aad
mov
mov
dec
push
bound
mov
leave
jo
pop
mov
xlat
adc
push
jmp
insb
mov
xlat
pop
mov
inc
leave
sub
andb
mov
and
pop
pusha
xchg
fisubs
mov
jae
cmpsl
sub
xchg
call
mov
into
inc
adcl
std
or
add
push
inc
jbe
or
fadds
arpl
test
sahf
cli
pop
mov
lds
int
mov
add
sub
aaa
popf
fiadds
gs
and
movntps
lret
cmpsl
dec
pop
mov
mov
sbb
rorl
jbe
je
mov
cmc
fs
out
cmp
sub
in
test
mov
popa
in
aaa
pop
in
ret
imul
out
push
in
aas
push
out
dec
jns
pop
cli
and
dec
into
sub
in
out
arpl
pop
aam
pop
mov
call
cs
push
imul
push
icebp
dec
std
push
shl
imul
inc
adc
cld
mov
outsl
pop
fucomp
inc
xor
xlat
imull
or
int
ja
mov
cwtl
jmp
pop
xchg
inc
pop
jnp
cmp
test
andl
in
pop
cmp
push
lahf
in
outsl
pop
dec
cmp
xor
pop
ljmp
pop
fnsave
dec
lcall
nop
fisubs
out
ss
jne
mov
into
jo
xor
adc
mov
insb
icebp
mov
addr16
sbb
jbe
xorb
mov
jp
jno
push
xor
jmp
loop
pop
sub
sbb
mov
jns
add
loope
in
push
ss
pop
cmp
adc
das
mov
sbb
shl
xchg
lds
mov
inc
int
inc
add
loopne
aaa
or
sub
inc
push
leave
push
insl
xor
scas
sbb
testb
mov
mov
cltd
jne
sub
xchg
xchg
test
cmc
adc
shr
cmpsl
mov
fwait
insl
movsl
cli
iret
sbb
orl
cmpsl
cmp
mov
leave
fwait
icebp
pop
xor
movsb
jne
pop
mov
and
rcr
repz
nop
jmp
xchg
dec
pop
push
inc
shl
inc
test
xor
arpl
mov
jle
out
push
mov
push
sbb
icebp
sbb
aad
ret
dec
into
add
mov
repz
or
imull
cwtl
pushf
inc
popa
aad
sbbb
adc
pop
fwait
and
pop
mov
andl
in
js
pop
jbe
test
sti
lahf
cmp
or
pusha
pusha
dec
divl
loope
and
movsb
shl
xor
pop
jo
inc
dec
in
mov
shrb
mov
mov
adc
push
inc
adc
mov
rcr
dec
rolb
or
xor
sbb
add
and
mov
xor
pop
jecxz
pop
push
insl
mov
inc
sbb
loop
movsl
mov
add
es
adc
push
inc
fdivrs
fwait
arpl
shll
jp
push
ret
cmp
mov
imul
mov
aad
cwtl
rorb
lret
inc
leave
mov
add
repnz
or
psraw
arpl
ret
ljmp
and
xchg
icebp
mov
push
push
xor
mov
filds
ss
xchg
rcl
lcall
xchg
mov
push
jecxz
mov
ljmp
int3
xchg
jmp
adc
add
and
test
push
xor
movsl
mov
jns
mov
pop
clc
xorl
inc
filds
ret
adcl
lock
inc
cli
cmpsl
jns
mov
jo
roll
add
scas
or
mov
stos
sbb
mov
sub
adc
pop
test
jge
push
sub
pop
xchg
push
add
xor
cs
xor
es
inc
hlt
adc
insb
iret
imul
or
and
cmp
mov
xchg
shlb
sub
xchg
cmp
test
mov
hlt
push
adc
clc
push
dec
cmp
pop
cmc
test
xchg
stc
cmp
mov
or
in
clc
or
test
sbb
aaa
jo
imul
std
shll
inc
inc
loope
repnz
ror
sar
sub
aaa
or
jecxz
loopne
not
jecxz
gs
inc
pop
and
xor
inc
and
aad
out
into
shrb
jmp
pop
inc
loopne
xor
in
jg
mov
push
aaa
shlb
push
dec
push
fimuls
sbb
jns
dec
fsubl
and
xor
adc
scas
inc
sahf
sbb
adc
pushf
add
cmc
loopne
pop
mov
sub
dec
lret
icebp
in
out
insb
orb
inc
or
dec
xchg
mov
aaa
rolb
mov
xchg
into
stc
mov
pop
mov
movsl
or
shrb
into
clc
das
mov
adc
mov
jb
sub
push
push
push
enter
leave
ret
jg
push
sbb
xchg
mov
idiv
xor
adc
dec
xor
popa
mov
mov
dec
test
repz
shlb
and
gs
in
addr16
mov
aad
movsb
imul
loope
test
pop
popf
mov
xchg
pop
xchg
fildll
ss
cmp
mov
cmc
sub
mov
push
adc
mov
out
mov
fadds
shll
in
rcrb
sub
pop
std
mov
enter
and
cwtl
fsubl
dec
es
push
aad
or
insl
pop
sbb
and
fwait
inc
aam
push
mov
jo
fsubs
dec
outsb
lahf
push
cltd
jns
cli
jnp
test
mulps
mov
xor
in
jecxz
sbb
pop
std
mov
idivb
add
sbb
sub
cltd
or
mov
fldcw
mov
and
pusha
stc
mov
sub
rorl
out
mov
bound
push
and
jo
mov
and
pop
and
jo
into
imul
sahf
ljmp
mov
out
clc
xchg
mov
dec
jmp
gs
xchg
sbb
or
sti
xorb
ja
cmp
mull
dec
jge
adc
jl
fwait
lahf
and
pop
add
adc
or
and
and
mov
add
sub
lahf
shrb
jecxz
sub
cmpsl
scas
sbb
dec
push
fmul
and
lea
adc
test
popf
pop
mov
sub
xchg
xor
dec
leave
sub
adc
xchg
xchg
in
push
out
pandn
mov
xor
jp
cwtl
das
mov
repnz
ja
pop
add
dec
in
cwtl
mov
jecxz
adc
test
cmc
jl
or
idivl
dec
jnp
andb
lret
push
xor
sbb
fsubrl
push
shrl
add
repz
lock
jge
leave
je
andl
pop
mov
out
sahf
xorl
adc
movsl
popa
roll
out
dec
sbb
xchg
cmp
add
call
inc
or
cmp
dec
pushf
and
adcb
push
inc
ficompl
sbb
jge
lret
mov
dec
stc
xchg
pop
jne
pop
dec
addb
fadds
sbb
dec
sarb
out
fisubrs
insb
mov
xchg
bound
xchg
pop
and
xchg
and
xchg
and
cmpsb
in
aaa
cmp
pop
iret
jb
jge
out
test
imul
shrl
lods
cmp
cli
cmp
ret
mov
push
push
xchg
enter
add
test
stos
pop
xchg
add
xor
or
lea
int
stos
call
mov
sub
cltd
mov
leave
mov
test
or
shr
stos
rorb
mov
dec
sti
xchg
icebp
arpl
andl
sub
xchg
fcmovnb
sbb
cld
sysexit
jmp
dec
ljmp
sahf
ljmp
arpl
scas
push
shll
gs
add
imul
dec
lock
test
xchg
adc
jl
xor
add
rcll
aam
jb
shl
out
pop
pop
jne
nop
vpcmpgtd
mov
lcall
cltd
pop
jno
ja
cli
scas
inc
add
stc
stc
mov
vpunpcklbw
ja
sbb
dec
xor
inc
inc
xchg
ljmp
dec
ror
xchg
inc
int3
movsl
lahf
in
addr16
add
stos
xlat
adc
cmc
insl
jo
andnps
jnp
iret
arpl
push
shlb
add
mov
adc
dec
and
lea
ret
or
push
pushf
daa
int3
adc
sub
cli
aad
pop
adcb
ss
jo
call
mov
cmpsl
scas
loope
add
adc
lret
lret
inc
aaa
jb
imul
leave
push
mov
dec
fwait
das
loope
pusha
sub
jge
insl
mov
sbb
xchg
add
mov
push
fidivrs
sbb
pop
fsubl
insl
or
xchg
mov
ja
pusha
sbb
sub
cli
jbe
pusha
ds
stc
mov
adc
fcmovb
and
pop
ret
rolb
mov
data16
in
aad
test
notl
and
clc
dec
dec
cmp
push
setl
xorb
push
arpl
mov
sub
jge
add
mov
push
repz
pop
clc
in
xor
faddp
xor
xchg
cmp
mov
add
cs
std
pop
xor
testl
push
std
in
and
pop
jmp
inc
stc
pop
push
push
sbb
into
cmp
mov
mov
mov
xchg
icebp
cmp
mov
rorl
pop
inc
dec
add
mulb
dec
test
pusha
jl
xor
mov
lahf
repz
pop
fisttpll
out
fwait
xorl
out
xor
mov
xchg
mov
leave
fldcw
sbb
out
rolb
xor
xchg
add
pop
adc
hlt
or
hlt
mov
mov
adc
push
or
pop
mov
data16
call
jo
adc
pop
pop
pop
call
popa
in
xchg
xchg
xorb
sub
add
mov
je
or
mov
mov
popl
push
sarb
or
mov
jl
repnz
jmp
stc
outsl
adc
fstl
aam
and
xchg
pusha
adc
xor
imul
push
push
repz
test
shll
imul
dec
inc
popf
xchg
xchg
mov
sahf
js
xor
cs
pop
xchg
mov
push
adc
repnz
and
insb
push
inc
imul
fs
stc
and
aaa
test
mov
jae
sti
orb
push
mov
push
jmp
mov
shl
mov
icebp
dec
sub
test
cs
clc
push
data16
mov
dec
cmp
loope
push
ficompl
jp
jle
push
leave
or
pop
popf
jo
ret
in
add
and
sarl
pop
sbb
push
jmp
xlat
push
out
clc
cmp
lds
ljmp
rcr
and
pop
lock
mov
aam
ds
sbb
cmp
dec
fcoml
ss
stos
mov
xchg
cli
xchg
insb
dec
test
lea
inc
hlt
dec
mov
nop
test
shll
ja
test
out
imul
cli
lret
inc
test
push
cmpsb
les
mov
inc
add
iret
jne
fistpl
jns
repnz
movsb
mov
cmp
mov
jg
jns
add
xchg
or
push
sub
inc
addl
popa
cmp
adc
stos
mov
fldcw
sbb
jmp
pop
xchg
or
fs
ret
mov
fnstsw
adc
mov
icebp
clc
sti
mov
add
inc
jo
dec
fistpll
mov
sahf
and
and
jno
inc
gs
pop
push
notb
mov
dec
or
js
xor
mov
push
pop
pop
jnp
add
pop
or
lock
filds
ret
loope
stos
mov
jg
xchg
scas
sbb
call
jge
push
adc
fwait
jno
mov
in
aad
test
push
jae
js
jns,pt
shl
lahf
dec
pop
add
mov
nop
sbb
rorb
rol
pop
add
test
mov
loopne
ljmp
ficoml
push
dec
xor
lcall
imul
loopne
mov
rorl
pop
movlps
lock
push
mov
add
and
test
jo
xor
aas
leave
push
stc
adc
enter
xor
repz
xor
mov
cmpsl
insb
inc
stos
sub
xor
movsl
mov
leave
xlat
aad
xor
push
popa
jo
dec
mov
mov
repz
popf
ds
in
inc
idivb
prefetch
xor
mov
jbe
sub
jle
jne
dec
adc
xor
adc
sub
incl
cmp
cmp
shll
test
ret
sahf
das
pop
stc
mov
call
inc
test
jo
scas
xchg
lea
jo
int3
insb
scas
jns
and
pop
sub
cmc
or
jb
test
loope
repnz
rcll
ss
pop
xor
pop
loopne
jo
ja
dec
add
std
test
popf
xor
inc
insl
fildl
popf
inc
xchg
dec
cmpsl
cmp
mov
add
loope
aam
fwait
clc
adc
int3
ds
sub
xchg
fbstp
ret
lret
imul
std
aam
push
std
fisubs
jne
pshufw
inc
push
incl
adc
push
je
cmp
and
sbb
cmp
cmp
adc
nop
mov
je
cmpsb
fs
push
cltd
push
loop
js
sub
idivb
out
xor
data16
std
inc
ljmp
cmp
xor
jle
pop
push
xchg
xor
mov
or
pushaw
jnp
jecxz
adc
cmp
sbb
in
pop
mov
adc
sub
sub
adc
mov
mov
insb
insl
cmp
or
loopne
pop
ror
js
dec
sbb
popf
and
fstpt
jne
fcompl
mov
jge
pop
mov
mov
pop
dec
cmp
push
aam
dec
cmc
pop
mov
fstpl
fsubrs
js
stos
cs
addr16
mov
jl
insl
mov
inc
dec
dec
pop
lret
xchg
inc
fucom
icebp
bound
pop
and
pop
adc
adcl
hlt
pop
or
jo
xchg
add
cmp
imul
push
shr
cs
adc
mov
andb
sbb
int
arpl
lods
jbe
push
xchg
in
jo
out
pop
andl
js
movsb
rcrb
xchg
test
cmp
fs
pop
add
cltd
icebp
sarb
mov
fstps
add
cwtl
mov
xlat
fs
mov
or
std
lret
repnz
sub
lds
pop
cmp
fisttps
inc
xchg
aas
outsl
out
das
icebp
sbb
fildll
sub
aam
outsl
xchg
aaa
insl
lock
and
pop
mov
test
mov
inc
pushf
pop
inc
jns
not
xor
or
push
inc
scas
lret
loop
jp
ja
les
lcall
mov
fisubrl
fildll
jecxz
es
push
pop
xor
mov
push
pop
inc
ret
push
outsb
repz
mov
stc
mov
lret
add
sarl
out
shll
sbb
clc
jnp
mov
inc
cli
movsl
rol
popa
lods
adc
dec
mov
adc
aaa
adc
filds
out
bound
pop
push
adc
xchg
stc
testb
mov
adc
mov
inc
sub
scas
mov
ficomps
pop
les
aad
cmpsl
arpl
cmp
xchg
scas
in
dec
fistl
mov
dec
sub
rclb
pop
push
pop
fistpl
xlat
sub
cmp
pop
mov
push
cmpsb
sbb
fsubrl
dec
pusha
lret
cmpsb
adc
or
add
test
lret
mov
jne
jbe
or
jno
repz
test
inc
push
mov
insl
lret
sub
outsl
out
mov
xchg
mov
or
sbb
rcll
sbb
fwait
repz
imul
nop
scas
xchg
add
imul
pop
pop
cmpb
shrb
sub
jmp
das
stos
pop
lret
adc
push
push
gs
hlt
adc
add
es
rcr
mov
pusha
orb
xor
dec
push
adc
popa
hlt
dec
jmp
cmp
loopne
sub
loop
idivb
lcall
xor
negl
imul
inc
mov
sbb
test
pushf
roll
or
lea
and
inc
nop
leave
test
inc
xor
xlat
inc
stos
sub
xor
add
and
cmp
notb
push
call
mov
sub
xor
mov
das
sbb
mov
insl
ret
mulb
cmp
jb
dec
call
ljmp
xchg
ja
or
das
fiaddl
and
iret
cltd
arpl
pop
aas
mov
cwtl
dec
and
cmp
sahf
add
push
dec
lods
inc
pop
cmpsl
mov
lods
jp
mov
lods
and
cltd
idivl
hlt
jl
and
xchg
mov
mov
dec
jne
xlat
cwtl
inc
xchg
adc
xchg
pop
pop
inc
pop
arpl
dec
loopne
jns
cmp
les
inc
jno
lock
sub
mov
inc
inc
inc
aad
xor
sti
inc
xchg
int3
sbb
pop
inc
fldenv
adc
mov
insl
daa
movsl
or
jle
dec
dec
sbb
cmp
add
mov
push
das
xchg
and
add
loop
mov
jns
scas
inc
adc
lods
cmpsb
add
and
in
or
aad
cmpb
mov
aam
ds
jae
xchg
adcb
jecxz
repz
lea
adc
xchg
or
mov
test
popa
bound
lods
dec
cmp
gs
gs
es
inc
sbb
pop
aaa
pop
jo
stos
insl
imul
sbb
call
cli
out
in
mov
pop
mov
leave
push
stc
cli
inc
loop
popf
das
adc
std
les
cs
and
out
sbb
cmpl
out
sbb
jne
dec
je
test
gs
lock
mov
pop
dec
leave
sub
push
lods
test
scas
and
das
push
jg
mov
xor
mov
ljmp
lods
jmp
pop
in
jmp
mov
icebp
mov
inc
xchg
fsubl
mov
mov
aaa
stos
jg
and
lcall
and
xchg
jp
jae
jnp
pop
rorl
dec
mov
test
cmp
inc
sarl
and
into
into
loope
std
fistpll
adc
and
mov
nop
pop
inc
and
mov
sbb
les
pop
movl
cs
inc
mov
loopne
xlat
fcmovnu
pop
aad
fdiv
lea
dec
call
or
or
addr16
jne
out
mov
leave
in
cmp
xchg
pop
fs
movsl
mov
add
xor
aas
mov
pop
push
mov
gs
popa
imul
outsl
xor
arpl
in
je
imul
insl
ljmp
push
cmp
push
jb
andb
mov
addr16
push
or
push
push
hlt
jbe
dec
dec
inc
daa
enter
sti
cwtl
or
or
scas
xchg
adcl
mov
fbld
in
pop
dec
nop
outsb
cmp
movsb
sbb
shl
loopne
cmc
pop
rcll
repz
push
xorl
stc
push
pop
dec
adc
fcomps
loope
mov
insl
or
mov
int3
sbb
mov
cmpb
sbb
cmc
inc
sub
clc
and
out
push
mov
insl
rorl
mov
mov
int3
sub
mov
push
movsb
mov
jg
inc
idiv
adc
mov
or
outsl
adcb
test
ret
jl
inc
inc
cs
loopne
sbb
adc
or
subl
jns
jb
sbb
pushf
jle
dec
mov
cltd
dec
pop
and
rclb
mov
cs
sbb
sbb
pop
add
incl
leave
mov
mov
std
out
adc
cwtl
enter
jbe
test
cmpsb
clc
xor
movsb
cmp
data16
in
mov
and
loop
push
mov
fistps
lds
je
mov
sbb
jb
out
adc
repz
mov
cmp
inc
dec
pushl
shrb
mov
mov
cli
arpl
lock
cmp
ja
jo
add
push
dec
fbld
push
in
pop
and
out
mov
adc
sub
aas
movsb
mov
std
pop
daa
arpl
shlb
data16
inc
enter
push
mov
ficompl
sbb
aam
mov
fsubrl
outsb
xacquire
add
movsb
sub
pushf
xchg
scas
int3
push
mov
xchg
or
fwait
arpl
sahf
aas
fdivs
nop
andb
ja
pop
mov
and
js
testb
flds
lahf
mov
and
pop
lds
movsl
pushf
sub
xor
dec
adc
pop
pop
rcl
subl
mov
mov
cmp
pop
or
mov
mov
dec
imul
xchg
mov
stc
test
js
lcall
loopne
jnp
fwait
insl
push
leave
negb
test
outsl
jb
mov
pop
aaa
cld
xchg
cmpl
adc
shrl
push
jbe
pushf
push
dec
clc
popa
nop
fs
scas
mov
xchg
fidivrl
subl
dec
popf
outsl
dec
jb
sarl
xchg
cltd
orb
and
jg
push
pop
push
xchg
cmp
cmc
inc
mov
push
iret
pop
jecxz
jge
stos
ret
test
xorl
xor
add
and
cmpsl
mov
dec
xchg
inc
fisttpll
aam
mov
pop
pusha
inc
fmull
sbb
sti
leave
loop
mov
fcmovnbe
out
in
outsb
sbb
in
js
push
ss
mov
ret
ss
adc
popa
lahf
sahf
das
leave
fwait
inc
push
filds
mov
jno
push
jg
add
mov
mov
dec
pop
adc
xor
leave
lods
fs
lcall
mov
notl
out
mov
sub
ror
sbb
jns
fisttpl
or
lods
cmp
ret
cmp
clc
repnz
orl
ss
addr16
insl
dec
movsl
sarl
insb
xchg
sub
lods
lock
lret
mov
lret
mov
xchg
addr16
add
test
rolb
xchg
fsubp
jmp
pop
sub
testb
inc
sub
or
outsb
test
mov
nop
mov
and
pop
clc
or
sti
mov
hlt
addr16
sbb
and
dec
fiaddl
shr
or
test
sub
int3
repnz
hlt
cli
stos
pushf
adc
int3
mul
fisttpl
inc
aas
insl
inc
out
adc
cmp
mov
das
cs
and
and
pop
sbb
push
xor
sub
mov
mov
push
push
fs
stos
rcl
aad
imul
hlt
pop
inc
int3
js
mov
cld
pop
int3
test
push
xchg
arpl
imul
je
inc
xchg
pop
jo
test
add
or
out
cmp
repz
popa
pop
insb
scas
sbb
mov
and
subl
orl
mov
imul
mov
xchg
in
daa
andb
iret
lret
xchg
mov
sub
cli
out
push
mov
test
jl
mov
adc
loop
ss
add
loope
or
adc
cld
inc
sub
mov
hlt
mov
add
mov
loope
pusha
repnz
dec
pusha
test
out
lahf
iret
push
mov
in
adc
push
int
into
lods
push
cmp
xor
and
dec
xor
and
xchg
lret
out
ja
and
insl
fwait
arpl
hlt
jno
daa
test
cmp
jmp
pop
mov
mov
inc
xor
scas
adc
cwtl
push
fistl
mov
aas
sbb
cmc
imul
and
jae
mov
xor
js
scas
adc
stc
mov
or
lret
add
or
jno
mov
pop
lea
loope
les
imull
xchg
ja
inc
fcoms
js
jge
mov
pop
jecxz
shll
inc
call
jg
push
inc
inc
sub
fsubl
mov
ss
and
pop
ja
iret
stos
mov
mov
fcmovne
test
movsb
dec
into
jae
cmp
dec
fbld
nop
dec
cmpsb
cwtl
cmpsl
xchg
xor
out
or
dec
ljmp
mov
inc
xchg
sub
xchg
sbb
lcall
dec
and
imul
in
pop
stos
outsb
repnz
and
or
faddl
js
or
pushf
adc
sbb
mov
or
jbe
jmp
and
push
andb
sbb
sbb
inc
dec
jnp
sti
mov
scas
mov
jns
sub
pop
mov
sbb
bound
call
mov
and
and
fucom
mov
push
push
fdivr
call
fisttpl
mov
adc
lahf
push
push
dec
mov
in
mov
push
mov
push
and
pop
xlat
mov
ja
nop
mov
sbb
shl
std
aas
dec
jo
push
pop
adc
pushf
cltd
pop
loop
shrl
and
scas
push
pop
jl
das
cmp
lods
pop
hlt
scas
dec
xchg
mov
daa
loope
out
push
ja
les
mov
fmulp
jmp
cmp
push
push
jnp
ficompl
popa
fdiv
pop
rcl
xchg
mov
jb
or
loop
testb
inc
loopne
xchg
call
adc
mov
mov
push
ds
lret
rcll
cmpl
js
dec
jnp
push
testl
sub
sbb
cmp
jmp
lock
push
in
push
pusha
cli
or
xchg
dec
push
psubsb
mov
cs
and
aad
mov
inc
popf
stos
inc
inc
packssdw
scas
mov
mov
pusha
inc
pushf
rol
std
ret
stos
in
push
test
aas
pop
and
das
push
ret
leave
xor
divl
and
das
add
hlt
ret
xor
js
or
sub
pop
lret
adc
lods
cld
sub
gs
sub
add
pop
test
pop
sbbb
das
cwtl
dec
and
test
jge
ss
jnp
push
aas
push
sahf
dec
add
imulb
inc
push
aam
mov
lret
ja
sub
mov
mov
lods
pop
inc
nop
outsb
mov
imul
mov
add
andb
fistl
loop
cwtl
test
cs
and
jns
sbb
lds
xor
mov
adc
mov
push
mov
loope
cs
nop
mov
cmp
in
andb
mov
ret
push
lahf
xchg
inc
shlb
out
push
into
sbb
push
mov
xor
nop
xchg
dec
xor
ret
fsubs
arpl
iret
jmp
scas
mov
fdivrl
inc
xchg
jnp
popl
mov
cmp
xlat
test
mov
outsl
sub
jno
xchg
cmp
sbb
lahf
addl
shl
iret
cmp
xchg
repnz
sub
inc
nop
lret
in
stos
sahf
adc
or
ds
enter
sub
push
rcrl
add
push
je
push
cmpb
lea
jno
xor
and
sub
cmp
cmp
fs
xchg
addr16
popf
cmp
pop
push
sbb
data16
fwait
ror
fiaddl
xorl
pop
out
popa
rcrb
mov
xlat
in
xchg
rorl
adc
push
imul
jg
scas
lahf
mov
and
cmp
xor
inc
outsb
adc
scas
ret
sbb
jg
mov
cs
aad
push
and
js
in
ja
jae
sbb
jge
push
mov
test
and
mov
mov
sbb
cltd
cmc
fists
mov
roll
push
dec
adc
fnstenv
mov
pop
es
testl
insl
imul
icebp
rolb
into
mov
loop
sub
popf
push
mov
push
jl
clc
sahf
fcomps
mov
mov
icebp
inc
arpl
jo
repz
add
lahf
inc
pop
js
dec
ljmp
outsl
cmp
cmp
addr16
mov
sbb
lods
sub
jl
add
mov
pusha
pop
sbb
jo
les
testl
cwtl
jecxz
xchg
movsb
add
repnz
sub
xor
pop
cmp
sti
mov
sbb
test
add
sub
sbb
lret
ss
inc
loope
or
adc
test
ljmp
bound
inc
xchg
jne
daa
insl
js
imul
adc
pusha
xor
push
orb
fsub
pusha
xor
mov
dec
push
and
jmp
sbb
movsb
xor
push
add
insl
ja
or
loop
mov
xchg
aam
xchg
in
xor
push
popf
jle,pn
mov
iret
repz
test
ss
ficompl
rorl
scas
and
jo
addr16
or
jl
mov
or
test
mov
and
jae
mov
loopne
inc
sub
cmp
or
dec
sahf
adc
mov
sub
gs
push
mov
adc
movsb
lock
jp
test
lcall
sbb
jnp
mov
andl
xor
negl
loop
sbb
or
cmp
or
je
std
pop
cltd
out
out
mov
sahf
shrl
fiaddl
mov
adc
push
pop
je
or
cmp
outsb
xchg
add
testb
xchg
sbb
test
or
or
adc
out
sbb
outsl
jno
movsl
stos
cmp
mov
dec
mov
mov
mov
cmp
std
lock
fmuls
test
rorl
pop
mov
mov
mov
xchg
loope
cld
call
lods
sub
jb
movsb
jp
mov
push
and
add
inc
xchg
testb
mov
test
jmp
xchg
hlt
movsl
andb
neg
xor
mov
jbe
andl
cmpsb
nop
loope
and
je
and
loop
arpl
and
jno
mov
fldenv
push
mov
push
ds
cmp
cld
cmp
ss
inc
add
mov
or
mov
lods
aad
dec
add
mov
movsb
mov
mov
cmpb
dec
push
pop
rcrb
aas
lahf
orl
push
stos
out
aam
clc
push
sarb
ja
push
mov
push
sub
repnz
pop
int
jb
push
idivb
add
stos
add
sub
enter
mov
nop
xor
sub
sbb
cmp
push
pop
lods
arpl
inc
pop
sub
and
dec
or
mov
xchg
xor
mov
insl
dec
data16
and
mov
sbb
mov
inc
pop
cs
push
adc
sub
std
lea
imul
xor
lods
dec
add
mov
mov
ds
inc
jne
xor
enter
int
out
xchg
lret
push
mov
dec
pop
cs
xor
negl
stos
jne
cmp
and
popf
mov
pop
mov
fidivs
sub
enter
cmp
jo
mov
xorb
jo
mov
mov
out
sub
hlt
fwait
pop
pop
int3
shrl
inc
in
jno
fstp
decl
sahf
mov
nop
sub
fmull
jno
jbe
mov
int
test
dec
cli
psllq
aad
hlt
and
push
pop
add
popf
and
aas
out
mov
pop
push
out
push
push
imul
int3
xchg
xor
scas
and
mov
pop
xchg
daa
cwtl
mov
mov
mov
cli
or
xchg
and
repnz
pushf
adc
repz
sub
arpl
repz
sahf
test
clc
dec
gs
loop
inc
mov
bound
lret
int3
notl
or
bound
arpl
pop
and
test
lahf
leave
pop
push
mov
clc
ja
stos
xor
jnp
inc
rorb
jns
call
xchg
js
jge
aad
into
lahf
mov
lahf
pop
sub
pop
add
cmp
loopne
gs
pop
adc
sbb
repz
mov
jg
sar
ficompl
out
jp
xor
icebp
dec
mov
repz
rcll
imul
xor
stc
out
imul
pop
lcall
mov
fxch
jb
outsl
mov
mov
add
test
out
adc
cmp
pusha
bound
repz
cmp
jge
add
inc
cli
pusha
aas
cmp
xor
xchg
adc
cld
cmc
lods
xor
mul
push
insl
dec
cmp
loopne
mov
xchg
lock
cmc
push
mov
ret
push
dec
pop
test
cwtl
outsl
dec
fadd
inc
out
fdivrl
adc
pop
jg
dec
mov
aas
call
xchg
jae
mov
add
loop
ja
outsl
or
dec
test
mov
sbb
mov
movsl
jmp
dec
sub
hlt
cmp
test
scas
cmpsb
add
xor
nop
daa
popa
shrb
pop
rclb
xchg
shrl
sub
ljmp
or
int3
adc
std
add
cs
in
dec
fcmove
in
addr16
cmp
insl
scas
push
test
add
pop
outsl
cmp
and
push
push
scas
in
mov
xor
cld
adc
jne
fisubrs
push
cld
ret
or
addr16
andb
push
cmpl
mov
sahf
pop
rol
test
and
mov
sub
push
dec
add
repnz
popf
loopne
mov
or
cmpsb
sbb
jno
pop
jecxz
sbb
inc
inc
jecxz
push
popa
xchg
xchg
inc
jb
dec
les
or
lcall
inc
push
rolb
and
jae
cmp
in
das
push
xchg
stc
mov
inc
add
mov
clc
cmpsl
pop
cmp
outsl
add
bound
sub
sub
lock
jnp
xchg
cmp
les
fs
cs
cmpsl
dec
in
icebp
ss
xchg
push
stc
sahf
nop
mov
movsb
and
cmovb
xchg
add
out
mov
sbb
mov
add
in
in
push
dec
sti
adc
jnp
jae
add
es
jno
inc
nop
cld
insl
cmp
xor
inc
push
cmp
lret
pushf
call
popl
mov
and
aaa
add
dec
jo
mov
push
gs
mov
mov
movsl
xchg
pop
inc
repz
adcl
push
mov
enter
int3
repnz
cmpxchg
dec
loopne
cmpsl
lret
jmp
or
into
add
ljmp
daa
mov
dec
jecxz
out
lahf
jnp
mov
into
int3
pop
sbb
xchg
and
test
outsb
into
sub
les
xor
hlt
add
fdivs
mov
or
cmp
cmp
shll
outsl
je
and
cmc
add
push
orl
jp
mov
lods
cmpsb
repz
adc
in
add
popa
std
inc
or
sbb
mov
pop
loopne
xor
imul
shlb
cmovs
mov
shlb
xchg
outsl
int
out
xor
mov
in
fdivrs
cwtl
mov
addl
pop
or
pop
dec
lea
xchg
mov
imul
rorl
fcoms
pop
test
outsl
xchg
outsb
int
rcrl
aaa
int3
lret
jns
mov
jne
shlb
les
popa
and
adc
int3
and
pop
std
xlat
cmpsb
ss
fwait
out
mov
mov
dec
xchg
rclb
fildl
popf
jge
xchg
or
outsl
inc
bswap
fimull
push
je
mov
pop
pop
mov
mov
ljmp
es
lcall
hlt
sahf
testb
cmpsl
and
hlt
hlt
lods
adc
xchg
faddl
lds
les
inc
inc
lods
and
lret
insl
cld
dec
test
sbb
sub
fmull
or
add
xlat
or
cmp
mov
mov
adc
dec
or
jbe
mov
mov
xchg
push
fnsave
mov
sti
ficomps
mov
mov
xchg
sarb
xor
dec
push
dec
jecxz
mov
sbb
ja
test
test
xor
or
mov
mov
add
ljmp
pop
out
insb
mov
outsl
inc
repnz
xchg
out
xor
addb
imul
inc
mov
test
jg
rcll
mov
and
sbb
dec
mov
jb
xchg
add
pushf
test
cld
fadds
xor
or
ret
push
pushf
lcall
dec
sbb
push
test
xor
loopne
mov
lret
dec
mov
and
or
rcl
or
clc
adc
jl
loopne
addl
roll
or
call
stc
cmp
or
faddl
and
out
xchg
mov
ljmp
arpl
daa
into
adc
loop
pop
pop
cmpl
mov
push
xor
pop
sub
movsb
cmp
movb
fidivrs
inc
aad
push
cmpsl
movsb
test
or
icebp
push
imul
or
mov
das
pop
fisubs
mov
pop
jp
fsubrs
adc
mov
xchg
xor
outsb
cmp
roll
outsl
push
pop
scas
add
aad
cmp
and
subl
and
popf
stos
ret
das
sar
mov
pop
push
jbe
leave
cmc
aam
ficompl
pop
and
sbb
mov
loopne
dec
test
adc
enter
cltd
lods
mov
or
dec
pusha
cmp
jmp
es
mov
mov
mov
scas
add
std
inc
nop
xor
mov
pusha
aaa
les
dec
std
fcomps
insl
icebp
pop
les
pop
ja
in
mov
xchg
in
mov
insb
jecxz
dec
mov
sub
pop
rcr
dec
fldl
dec
lds
xchg
and
int3
mov
cmp
ss
xchg
or
push
adc
lods
sub
add
rclb
dec
shr
ret
push
out
popf
cmp
mov
test
or
and
mov
insl
mov
mov
jb
sahf
jae
es
imul
in
jle
pop
stos
addr16
mov
cmpsb
xchg
dec
ss
movsl
mov
mov
adc
call
hlt
sub
or
sub
subb
imul
pop
shll
mov
hlt
stc
sub
and
xor
push
cmp
hlt
add
call
mov
add
aas
push
dec
inc
ja
or
out
sbb
sahf
jne
ret
idiv
add
mov
and
pop
dec
mov
and
mov
and
fbld
das
das
pop
mov
push
sub
pop
push
aaa
push
sbb
and
test
in
cmpsb
push
sahf
push
or
fisttpll
pop
clc
cmc
ret
sti
into
insb
int3
stc
pop
cmp
jl
pop
mov
sub
mov
arpl
daa
mov
mov
mov
test
sub
add
push
faddl
fadd
in
xchg
inc
shr
ds
mov
mov
push
lods
xchg
in
or
int3
into
inc
jle
faddp
out
push
adc
addl
adc
jns
ljmp
or
pop
fs
in
xlat
cmpsb
mov
mov
add
scas
lcall
jne
xor
sub
rcrl
sbb
cmp
pop
lret
ljmp
std
xchg
xor
jecxz
inc
push
jno
pop
push
cmp
ret
dec
push
outsb
push
cwtl
sbb
mov
adc
mov
call
mov
int
jbe
loop
ret
adc
stos
mov
jo
mov
pop
adc
bound
xchg
adc
ja
add
out
mov
add
repz
lock
out
pop
push
pop
js
sbb
gs
push
int3
sbb
mov
xchg
and
shlb
loop
mov
mov
jmp
push
int
cld
rcrl
insb
rorl
mov
and
lds
jg
cmp
ss
xor
out
dec
cmp
pop
call
call
cmp
imul
lret
push
pop
adc
and
in
imul
inc
sti
stos
sti
or
daa
push
cmp
mov
sub
outsb
out
sbb
sbb
pop
pop
lea
pop
pop
ds
neg
loopne
enter
xchg
fists
jne
sahf
adc
push
jge
hlt
dec
sbb
pop
jmp
bound
out
jl
std
mov
les
sahf
pop
push
xchg
pop
rcl
dec
mov
mov
dec
jmp
sti
xlat
pop
scas
xchg
inc
mov
dec
repnz
icebp
ljmp
push
iret
mov
adc
rcrb
jno
sbb
sub
sub
and
mov
ror
xor
addr16
xor
aam
loop
pop
aas
xchg
mov
pusha
dec
pop
cli
andl
inc
les
clc
pop
add
sbb
aad
jmp
mov
xchg
lods
insl
pop
adcl
jb
or
inc
in
enter
mov
fwait
mov
cmp
dec
inc
jl
ja
push
pusha
sbb
add
pop
hlt
inc
or
enter
cs
dec
movsb
lahf
sub
mov
add
adcb
fists
ja
add
inc
mov
test
cmp
adc
pushf
cli
pusha
xchg
movsl
sbb
push
repnz
mov
inc
mov
in
mov
ds
jne
adc
fcomi
mov
inc
adc
jnp
mov
sub
xchg
add
or
mov
pop
ljmp
lcall
mov
mov
add
scas
out
gs
jmp
sbb
aas
testl
fs
aad
mov
out
sbb
inc
inc
jmp
repnz
sub
sbb
jae
jb
add
push
cmp
fmull
dec
xchg
and
mov
mov
adc
ds
pop
jmp
sub
movsl
addr16
jmp
imul
mov
cmp
mov
inc
imul
xchg
xor
or
push
add
or
sahf
mov
cmp
mov
sti
mov
data16
ret
mov
mov
sbb
and
lods
xchg
fs
scas
sbb
sbb
ss
inc
mov
shll
in
or
mov
push
adc
pop
mov
jnp
mov
push
or
push
test
mov
je
int
sbb
pop
jnp
and
xchg
mov
push
cmp
stc
xchg
dec
imul
sbb
cwtl
mov
dec
cmp
dec
add
lcall
testl
pop
fs
mov
mov
fwait
repnz
ret
xchg
or
or
shlb
loopne
std
pop
and
repnz
out
je
rcrb
mov
pop
popa
sub
rclb
iret
clc
ds
lret
stos
push
data16
adc
push
gs
push
std
adc
adc
filds
test
addr16
bound
pop
sbb
jp
xchg
push
imul
fsub
mov
fld
ds
lret
mov
clc
add
std
push
sbbl
mov
or
and
notb
pushf
mov
and
lods
xchg
jecxz
and
lock
roll
jno
jns
shl
sbbl
and
dec
lret
push
or
test
lahf
adc
cmp
xor
push
pop
sbb
cmp
sbb
sbb
in
push
mov
je
mov
ljmp
push
push
loopne
das
clc
cmpsl
mov
dec
mov
mov
ja
pop
mov
pushf
xor
fwait
movsb
sbb
cmp
jnp
inc
jbe
and
dec
test
mov
cs
inc
testb
popf
mov
cmp
xchg
xor
mov
xchg
icebp
fisubrs
sub
mov
mov
xor
push
out
les
lahf
dec
dec
in
repnz
out
ffreep
xor
and
inc
sub
xor
or
cmc
xor
xchg
jecxz
sahf
lock
cld
and
sbb
lock
movsb
jne
rclb
xor
bound
arpl
mov
das
data16
add
mov
test
ret
adc
arpl
inc
adc
mov
push
or
jae
xchg
xchg
lds
scas
cmp
xor
dec
xor
fs
in
push
mov
adc
shr
pop
jmp
push
aad
push
pusha
fidivrs
sbb
push
push
sbb
xorl
jg
jnp
mov
add
out
subl
adcl
or
and
leave
leave
inc
rcll
fistps
icebp
aaa
scas
in
roll
dec
insb
in
jl
push
cmc
mov
pop
sub
add
out
popf
xchg
ret
scas
lea
sub
loope
cmovns
flds
rclb
in
push
sbb
lret
out
adc
cmc
mov
dec
add
arpl
add
mov
cmpb
aam
mov
or
cmpsl
in
popf
das
sub
scas
in
jle
sar
lea
sbb
sub
cmp
or
add
sbb
fdivl
jae
cmp
sbb
jno
call
xor
push
xchg
jns
or
scas
leave
xchg
push
out
xchg
lods
mull
mov
xor
das
sbb
pop
mov
inc
sub
sahf
subb
faddl
adc
popf
cmp
mov
jmp
rclb
xchg
and
sub
mov
add
stos
dec
add
sbb
sub
loop
cmpsl
cmp
cmpsb
mov
out
mov
orl
sub
push
sbb
cld
gs
popa
call
inc
pop
sub
incl
fcomip
xor
lods
pop
jo
mov
rcrl
iret
pop
cs
fs
test
repz
mov
adc
cmp
xor
sti
pop
lock
test
mov
push
fsubr
mov
xor
push
mov
jg
out
sbb
xchg
repnz
mov
sbb
mov
and
stos
dec
or
loop
orb
sar
js
mov
jl
add
adc
jnp
fldl
fwait
jno
aam
or
and
pop
mov
shrb
and
ds
pop
inc
out
jns
fldenv
xchg
cmp
push
fdiv
dec
mov
pop
test
xor
sub
sub
xchg
shrb
aam
adc
loope
flds
cmp
sbb
std
loop
enter
sbb
or
inc
dec
fsubr
sub
jecxz
push
mov
sbb
js
sub
fsubrl
ljmp
flds
mov
test
pop
pop
out
inc
sar
mov
mov
mov
jnp
shlb
into
mov
or
jp
dec
mov
cltd
mov
call
test
lahf
mov
pop
test
dec
lea
or
faddl
jg
adc
outsl
cmpsl
add
mov
inc
test
and
aam
xchg
fsts
sti
pop
lcall
mov
lcall
insb
pop
xor
push
push
push
div
jnp
xor
add
xchg
in
push
cmp
lahf
test
mov
dec
add
or
push
xchg
paddusw
lcall
pop
push
add
stos
fstl
out
std
xchg
fbstp
adc
insb
sbb
ds
adc
push
sahf
call
sbb
inc
inc
mov
leave
mov
fldl
ja
out
faddl
jmp
les
incb
mov
mov
decl
lods
fsubrs
insl
sbb
outsl
or
dec
mov
adc
jmp
lahf
xchg
push
imul
imul
dec
or
fwait
push
cmpsb
mov
cmp
sbb
mov
push
js
movsl
mov
popf
pop
sahf
mov
sarb
sbb
data16
or
xchg
xchg
iret
and
flds
cmp
mov
jmp
scas
xchg
sar
mov
or
fwait
into
cmp
mov
cwtl
sbb
or
pop
mov
pop
mov
inc
enter
stc
das
jg
subl
pop
mov
call
lcall
es
xchg
ret
inc
clc
pop
mov
xchg
inc
jge
movsl
aam
sub
dec
push
sbb
sbb
add
in
movsl
mov
jge
fs
gs
and
lea
cmpsb
out
lcall
fwait
mov
mov
or
mov
xor
pop
stos
cmp
jg
xchg
and
mov
fistpll
repnz
adc
or
jg
mov
shlb
jbe
cwtl
add
int3
xchg
cmp
xor
int3
adc
mov
loopne
mov
cltd
fidivrs
sahf
jle
mov
xchg
in
xor
clc
adc
jnp
fcoms
pop
dec
in
cmp
lods
push
mov
inc
pop
loop
add
repz
sbb
jp
cli
stc
movsb
jp
adc
adc
addb
fisubs
jp
mov
shll
push
jmp
fiaddl
fs
fsubrl
ret
test
cmp
ret
sbb
into
and
xor
enter
cmp
addl
cmc
ret
lret
add
popa
insb
stc
and
data16
push
dec
je
or
mov
outsl
push
jge
mov
adc
dec
dec
pop
mov
sbb
inc
sahf
cmp
pushf
rep
lods
je
jg
fildl
or
jns
out
cmpsb
push
xor
insb
xchg
clc
push
das
jl
jne
leave
inc
xchg
adc
imul
xor
cmp
mov
xor
loop
hlt
pushf
xchg
in
pop
or
jecxz
stos
ret
ret
out
add
loope
and
enter
xor
xchg
iret
lret
in
pop
sbb
imul
sbb
sahf
dec
cmp
jecxz
xchg
lret
cwtl
out
push
call
xor
mov
dec
push
xor
push
adc
mov
mov
clc
arpl
popf
inc
xchg
fstps
mov
jmp
clc
stos
movsb
filds
int
out
clc
mov
imul
adc
jge
push
test
ljmp
pop
mov
cmp
adc
sbb
inc
iret
aam
icebp
aad
xchg
test
imul
stos
xchg
xchg
or
cltd
cmp
jbe
push
sbb
js
imul
pop
push
mov
fdivr
ret
jno
mov
adc
test
movsb
test
add
bound
mov
add
cli
outsl
xor
or
cmp
sbb
lds
xorl
xchg
scas
push
outsl
pusha
nop
cltd
test
sbb
lcall
jge
mov
mov
jg
jecxz,pt
rcrb
shll
outsl
mov
repnz
adc
sbb
leave
adcl
mov
xchg
push
inc
clc
pop
jmp
push
jb
xchg
test
idivl
dec
mov
inc
hlt
notl
incl
aad
pushf
adc
sahf
cmp
inc
adc
dec
sbb
daa
in
or
shr
add
mov
test
xchg
test
dec
adc
push
cwtl
or
push
xor
fimull
jo
lcall
bound
dec
xchg
insl
cmp
clc
dec
in
das
fstpt
loope
stos
call
lahf
push
adc
data16
ds
mov
sbb
xchg
icebp
sub
sub
pop
push
lds
mov
xlat
xor
repz
into
cs
mov
outsl
mov
sti
es
int3
aas
sbb
stos
xchg
and
pusha
push
mov
pop
fmuls
xor
hlt
or
or
mov
pop
push
mov
sbb
test
fstpl
gs
push
jle
jp
lods
fcmovb
mov
out
mov
push
pop
nop
xchg
je
jb
shl
outsl
aad
out
adc
imul
addl
aas
xchg
adc
or
cmpsl
mov
in
dec
stos
shrb
jecxz
lret
mov
popf
dec
xchg
mov
in
cmp
sub
lods
jae
movsb
lret
mov
jb
out
fucomip
movsb
loop
aas
divl
orl
or
sub
inc
mov
cmp
mov
cld
int3
lcall
arpl
dec
adc
repz
jl
and
mul
cli
pop
cmpsl
mov
mov
in
pushf
xchg
xor
aad
out
inc
outsb
arpl
outsb
ja
jecxz
mov
loope
fldcw
out
pop
add
jb
or
lret
jne
jmp
int
ss
inc
mov
testb
or
mov
je
sbb
pop
push
xchg
and
xchg
ret
sbb
or
cltd
jbe
call
jne
sbb
arpl
add
or
dec
dec
mov
shll
fbld
adc
in
fisubs
lock
dec
dec
roll
xor
jo
jl
scas
pop
hlt
xchg
jbe
push
insl
push
in
stos
lcall
iret
scas
pop
adc
out
insb
vmaxpd
push
arpl
or
inc
test
test
adcl
loope
adc
dec
add
adc
movsb
in
out
push
cmp
cltd
or
arpl
mov
loope
enter
movsb
nop
rorb
clc
shrl
sub
or
outsl
adc
jl
jg
das
jno
xchg
test
push
test
rcll
dec
mov
sub
popa
mov
and
das
adc
sbb
dec
mov
mov
sub
sub
mov
push
mov
push
repnz
outsl
mov
fidivl
pop
lcall
call
iret
pop
xor
lret
xchg
sub
dec
jns
mov
sbbl
imul
xlat
fmuls
add
arpl
fisubrl
in
mov
in
clc
lret
dec
inc
ja
dec
cld
mov
jecxz
add
pop
enter
popa
out
outsl
fucomp
hlt
cmc
or
repz
jge
out
pop
cmc
mov
xor
ja
sub
mov
pop
pop
dec
jo
mov
in
cmp
sub
je
xchg
int3
mov
aam
loopne
fwait
dec
xor
mov
daa
xchg
mov
pop
xchg
andb
push
out
test
push
scas
xchg
stc
mov
fisttps
pop
sbb
movsb
insb
inc
xor
push
movl
dec
jge
xor
xchg
or
fwait
movsl
js
pusha
xchg
pop
rclb
or
mov
adc
mov
dec
fists
xchg
in
scas
add
loope
nop
lcall
jmp
push
xor
xor
inc
inc
xor
lds
imul
test
repnz
pop
add
rcr
negb
jge
mov
outsl
cmp
sub
aas
pusha
cmp
lcall
jp
xchg
xor
sarl
loopne
mov
scas
js
int
mov
dec
xchg
push
pusha
fimull
lahf
out
and
hlt
cwtl
aas
pop
movsl
mov
mov
add
push
sbb
sub
mov
rcrl
fnsave
aad
or
popf
repz
inc
sbb
mov
ret
cmpsb
test
movl
mov
rclb
jnp
ss
sbb
in
inc
int
xchg
xchg
add
sahf
cmpsl
inc
shll
addr16
hlt
orb
imul
jmp
lds
or
incl
jns
or
cmp
test
daa
mov
xchg
je
or
test
mov
fsts
xchg
loop
mov
orl
loope
inc
xor
cmp
hlt
popl
adc
sub
sub
test
mov
jle
sbb
push
lods
loopne
push
adc
and
dec
jp
shr
stc
out
jecxz
int3
in
sub
sub
inc
cli
mov
sbb
data16
mov
pop
aad
out
sub
mov
mov
jne
mov
add
in
push
jns
and
int3
test
push
and
out
push
cli
sahf
xchg
dec
imul
insl
mov
ljmp
xchg
and
xorb
addr16
pop
stos
mov
fwait
ss
inc
add
fs
inc
jb
xor
sbb
inc
and
jo
adc
lds
fsub
stos
inc
test
loopne
in
cmpsb
nop
sub
jge
sub
cmp
fistps
xor
in
mov
insl
or
pop
jp
imul
in
out
into
pushf
cs
jo
daa
aad
aam
cmp
outsb
ds
xlat
andl
hlt
fwait
in
inc
push
xchg
fmull
pop
xor
xorl
repnz
and
stos
dec
and
push
cmpb
aas
out
and
cmp
cltd
jle
call
lock
scas
insb
inc
in
ja
jno
add
loope
enter
fcomps
sub
mov
cmp
sub
in
dec
mov
aas
or
or
pop
xchg
jo
mov
xchg
mov
addr16
adc
lret
mov
fisubrl
decl
mov
cmc
jne
mov
decb
cmp
fnstsw
mov
rcll
scas
pop
bound
jae
jl
dec
cmc
mov
xchg
loope
mov
movsb
xchg
aam
shll
push
stos
push
pop
test
push
jno
leave
fprem1
scas
cs
arpl
pushl
loope
ret
stc
icebp
imul
lret
jge
jae
adc
in
lock
aam
xchg
push
mov
sti
jbe
jecxz
jns
test
pop
dec
in
fs
lock
lret
xorb
mov
lods
pop
xorb
sarl
fcoml
sti
inc
adc
jmp
popa
jmp
sub
adc
out
cwtl
inc
fbstp
mov
ss
scas
mov
mov
jns
into
es
push
nop
push
insb
add
mov
shr
imul
mov
mov
lretw
inc
aad
lds
ficoms
aam
aaa
inc
lret
mov
mov
cmp
lahf
cmp
fsubr
in
stc
rorl
je
inc
pop
cmp
pop
ss
mov
sbb
mov
mov
and
movsl
inc
and
icebp
clc
add
cld
test
hlt
loop
cmp
or
icebp
or
loope
out
jb
into
adc
es
mov
cs
push
std
push
test
fimuls
mov
push
add
fnstenv
dec
bound
xor
imul
push
mov
xor
fdivrs
mull
int
adc
or
scas
pop
pusha
cmpsl
je
mov
cmp
dec
lock
test
cmpsb
gs
jbe
ss
jg
mov
dec
and
or
hlt
inc
or
jbe
or
jno
test
ds
mov
adc
push
mov
je
gs
ljmp
jbe
xor
dec
push
xchg
stos
lods
in
stc
mov
push
sub
cld
or
cmp
and
jmp
xor
mov
aas
jnp
fisubrl
push
clc
adc
dec
insl
push
inc
popa
sbb
mov
bound
xchg
fmulp
xchg
inc
subl
leave
inc
adc
out
fwait
repnz
xor
xor
cmpl
outsb
nop
dec
iret
mov
pushf
mov
mov
mov
jl
cmp
lcall
mov
pop
test
jb
out
nop
scas
xor
xchg
stc
scas
jns
mov
je
inc
mov
les
or
jnp
push
clc
adc
jae
adc
icebp
and
es
out
lea
ss
push
fsubrs
xchg
adc
out
inc
mov
das
jae
out
xchg
xchg
leave
jecxz
push
and
aad
push
loope
insl
insw
xchg
jg
and
pop
jl
jns
add
enter
xor
mov
pop
cmpsb
fstpt
pusha
movsl
lret
dec
mov
sbb
mov
mov
popa
inc
movsb
imul
sbb
int3
lahf
cld
cmp
sub
jbe
sbb
and
mov
fs
movsb
sub
and
js
int
or
mov
or
mov
in
in
mov
movsb
push
jnp
mov
mov
pop
jmp
sbb
push
pop
test
xor
cli
mov
sub
dec
fwait
std
sahf
fsubrs
pop
sbb
and
xchg
mov
add
in
xor
aad
fcom
mov
loopne
mov
dec
cmpsl
mov
xor
cmc
mov
jno
sub
push
in
pop
out
mov
sub
xchg
push
jnp
ja
daa
frstor
xchg
xor
iret
mov
push
dec
xor
fildl
inc
push
test
movsb
cmc
js
sub
xchg
xor
and
pop
xchg
mov
mov
int3
cmp
inc
std
sbb
insb
aam
xlat
cmpsb
mov
mov
out
test
jae
inc
ret
ret
idivb
andl
sub
sti
sbb
mov
loop
cli
mov
inc
out
push
and
mov
lods
push
inc
xlat
loope
push
jb
loope
jbe
flds
dec
inc
xchg
inc
xchg
test
cmp
adc
add
pop
imul
or
jae
xlat
shrl
or
adc
sub
xor
dec
xor
mov
mov
add
in
mov
sbb
loop
mov
scas
sti
fdivl
adc
fistl
test
scas
push
xor
addr16
aas
ds
das
and
mov
pop
rcr
fisttpl
pop
push
cmp
xor
les
cli
sub
imul
shlb
xor
push
sti
int
push
shl
test
add
sahf
dec
xchg
decl
mov
sub
xchg
xchg
shlb
inc
adc
fwait
movsb
cmpsb
cmpsb
and
pop
xchg
inc
adc
mov
scas
adc
pop
das
ja
std
dec
dec
addr16
into
ljmp
mov
repz
or
loope
jns
mov
xchg
and
test
push
out
fistpl
mov
loop
loop
dec
inc
roll
addr16
jl
jl
xchg
inc
sahf
pop
addb
add
xchg
rol
mov
inc
xchg
cli
mov
jns
int
repz
fsubrs
in
outsb
mov
push
loopne
push
lret
test
xorb
jne
mov
or
mov
nop
or
cmc
shll
loope
popa
and
ret
inc
into
scas
arpl
iret
adc
movsb
and
xchg
xor
sbb
jge,pt
scas
xchg
fsub
pop
cmp
adc
fwait
loope
scas
loopne
mov
adc
push
cmp
out
notb
push
test
mov
jl
in
xchg
push
jb
ucomiss
inc
int3
cmp
or
clc
xchg
popf
xchg
xor
xchg
add
and
xorb
add
add
sub
dec
dec
ja
shll
mov
fnstsw
jne
xor
aam
dec
pop
mov
mov
sbb
shlb
call
mov
cmc
jp
add
cmp
mov
pop
push
push
or
jl
sbb
out
mov
sub
dec
ds
push
sub
insl
popf
push
inc
xor
addl
gs
mov
lahf
dec
mov
push
lods
push
ds
fstps
pop
sub
je
outsl
sub
repz
push
push
cmc
movl
cmp
pushf
inc
mov
cwtl
adc
hlt
push
fs
push
push
js
add
repnz
icebp
mov
fisubrl
xor
inc
push
sbb
sbb
mov
sub
mov
arpl
sbb
leave
aas
dec
dec
push
cs
icebp
adc
cmpsl
cmpsl
xor
bound
lret
repz
mov
cmp
push
or
mov
dec
mov
pop
xchg
pop
insl
fstpl
jp
pop
fdivrl
sub
outsl
jb
gs
dec
push
or
mov
mov
mov
inc
cwtl
jb
cmp
pop
popf
or
dec
fldl
sub
in
lds
call
sub
fidivs
mov
adc
insb
cmc
dec
add
inc
test
pop
in
cwtl
sub
or
lret
loope
fnstcw
mov
aam
adc
in
ret
gs
jne
xchg
addr16
mov
lods
push
inc
push
mov
rcrl
jecxz
leave
sahf
push
test
cltd
mov
push
jmp
mov
loop
sbb
dec
stc
adc
into
jb
mov
into
cmpsb
mov
std
or
xor
jmp
push
sarb
mov
mov
mov
xor
adc
mulb
jo
dec
shll
in
test
jne
or
into
movsl
adc
test
insl
push
inc
or
xor
xchg
test
pop
cli
int
xor
ss
mov
mov
pushf
iret
jbe
inc
dec
jmp
aaa
mov
inc
lds
jbe
sub
pop
inc
mov
adc
mov
xchg
sbb
cmp
int
push
inc
xorb
sbb
shrl
outsl
dec
addl
pusha
movsb
inc
arpl
hlt
out
xchg
mov
lret
pushf
add
aaa
adc
adc
sarl
push
notb
fisttpll
lret
mov
cwtl
stc
jns
or
mov
jge
push
xchg
je
notl
pop
xor
mov
and
aaa
jmp
mov
call
pop
mov
adc
cli
inc
mov
lret
push
xor
cmp
fcomps
out
test
pusha
xchg
jl
bound
dec
jae
ret
fwait
pop
pop
mov
mov
mov
cwtl
mov
jnp
pop
xor
xchg
jg
jo
lahf
mov
jae
lods
fdivs
stc
sub
add
insl
jb
lea
sbb
pcmpgtb
xor
mov
ljmp
test
outsb
xchg
test
xor
xchg
pushf
aas
jecxz
repnz
stos
imul
in
push
or
enter
pop
scas
dec
leave
sub
xchg
fidivrl
stos
dec
mov
in
ret
xchg
cmp
mov
enter
aaa
or
test
daa
cmp
or
ljmp
jmp
fsts
dec
mov
lds
dec
adc
clc
test
sbb
sub
shl
mov
sub
push
stos
cwtl
shrb
cmp
inc
dec
popa
adc
fldt
out
shlb
arpl
jmp
mov
pop
in
pcmpgtw
call
and
push
lea
sahf
ficompl
pop
xor
push
out
jle
cli
mov
push
jno
hlt
cli
rclb
xor
inc
xlat
aaa
inc
jl
sub
aaa
and
push
leave
sbb
sub
aas
popf
mov
sahf
inc
cltd
adc
push
pop
movsl
ret
stc
dec
pop
mov
pop
daa
test
sub
lods
pop
out
in
shlb
clc
out
cltd
or
push
inc
jg
enter
mov
mov
sbb
jp
sub
movsb
in
ret
mov
add
mov
mov
mov
cld
das
shrl
stos
inc
jno
leave
ret
or
jne
pop
mov
dec
imul
sar
lea
xor
clc
mov
cld
outsl
icebp
xchg
popa
mov
mulb
pop
rcrl
mov
test
inc
jo
addb
mov
push
adc
and
inc
sahf
call
stos
stos
js
pop
pop
xchg
jg
sbb
into
dec
add
sub
repnz
sbb
mov
jmp
cmp
add
push
mov
sbb
les
xchg
movsl
or
mov
test
in
sti
cwtl
push
jmp
std
sbb
sub
mov
pop
cmp
add
push
jnp
out
fisttps
add
xchg
add
push
pop
rcrl
ja
lcall
lahf
inc
mov
xchg
push
jb
mov
ds
in
sarb
icebp
jle
add
mov
mov
cs
sbb
add
mov
add
push
add
out
rcrl
pop
adc
add
cmp
add
mov
scas
in
xlat
outsb
loope
fsubl
lods
xchg
fiadds
push
scas
fisubrs
jno
mov
mov
push
mov
add
stc
dec
mov
icebp
mov
fcompl
mov
push
sbb
out
icebp
js
ret
push
jle
das
push
adcb
xor
xchg
imul
shrb
push
mov
sarb
jg
test
sbb
sbb
out
pop
das
das
aas
dec
or
mov
js
cmp
pop
test
popf
stos
call
push
pusha
outsl
inc
fbstp
inc
and
stos
aam
cmpsb
movsl
pop
jle
xor
scas
shrd
dec
ss
insb
push
push
pop
push
adc
fnsave
mov
mov
out
insb
inc
jle
cmp
jmp
jne
sub
dec
pop
and
mov
mov
xchg
inc
cmpsb
fidivs
xchg
mov
push
or
test
or
nop
ficomps
jmp
test
xchg
adc
out
outsb
xchg
or
lea
and
jecxz
lds
mov
ret
ret
bound
jg
idivl
and
test
push
sbb
fwait
mov
pusha
sub
call
stc
sbb
pop
dec
movsl
lock
shl
push
push
jnp
cmp
jmp
insb
hlt
or
cltd
idivb
adc
xchg
mov
enter
dec
lahf
push
sbb
cld
inc
mov
inc
sbb
push
and
push
jae
ja
fnstcw
jbe
mov
rclb
mov
pop
mov
hlt
mov
dec
mov
rcll
bound
or
out
nop
jno
dec
movsl
ss
aad
mov
and
fmull
loopne
xor
rcl
mov
adc
pusha
in
out
scas
add
loopne
add
js
lret
leave
push
pop
dec
test
and
sti
dec
into
adc
inc
mov
cmp
imull
add
xchg
pop
inc
pop
adcl
sbb
add
push
jecxz
xor
orb
jmp
add
lret
addr16
daa
jmp
es
adc
xchg
gs
std
jne
out
dec
ja
push
add
cwtl
and
jg
iret
pop
lods
mov
pop
jmp
xchg
popa
sti
scas
das
mov
and
xchg
mov
mov
out
jbe
inc
pop
mov
adc
ret
add
sub
sar
movsb
xchg
xchg
mov
pop
cmp
stos
stos
aaa
cmp
xor
add
xlat
cmp
sbb
test
daa
push
dec
int
pop
sbb
cmp
and
xor
rolb
sub
fwait
sub
push
mov
add
mov
rcll
push
mov
in
cmp
fldt
fsubr
sbb
push
dec
xchg
ret
push
arpl
insb
mov
xor
test
jecxz
jmp
jb
mov
mov
hlt
mov
jbe
insl
dec
stc
les
inc
loopne
adc
jp
push
and
outsl
push
jnp
dec
pop
aas
fstpl
cwtl
sub
pop
push
aad
pushl
cmp
add
xchg
rcr
test
sub
inc
cwtl
lret
data16
adc
and
cmpsb
lcall
mov
addr16
inc
in
inc
out
jp
dec
les
mov
test
sbb
xchg
and
cmp
lods
jbe
cmp
or
jnp
add
repnz
ljmp
mov
lret
cmpb
je
mov
adc
jne
popf
lds
ds
inc
xor
cmpb
mov
sbb
jle
cmc
movsl
jno
scas
cmp
sbb
fdivs
popf
sbb
jmp
scas
fwait
add
inc
pop
hlt
mov
out
mov
xor
cmc
outsb
and
ljmp
mov
idivl
std
inc
mov
scas
inc
fs
rolb
out
pop
lods
cli
ss
bound
in
outsl
dec
fistpll
andb
cmp
mov
xor
inc
xor
pop
cmp
push
stos
xchg
imulb
push
fdivrs
cltd
pop
stos
cld
mov
jnp
jo
dec
dec
cmp
push
xchg
xchg
loopne
jns
adc
movsb
pushf
pop
dec
stos
pop
ljmp
dec
mov
and
test
cmp
xchg
add
cmp
jge
and
ja
and
cmpb
lock
inc
je
cmp
push
inc
loop
fcmovnbe
or
dec
push
sbb
sahf
hlt
iret
adc
mov
mov
push
and
ret
jno
not
mov
test
lahf
jle
lea
xchg
mov
mov
push
scas
popf
mov
out
cmp
js
outsl
test
and
pusha
cmp
fmul
shlb
jb
inc
aaa
mov
mov
js
mov
cmp
push
data16
hlt
adc
pop
in
lret
cmp
mov
add
mov
cli
dec
fldenv
inc
test
mov
outsl
and
jb
lahf
es
fildl
mov
jmp
out
sub
sti
mov
ret
and
mov
gs
mov
cmp
push
and
or
leave
adc
inc
pop
loopne
pop
cwtl
aaa
es
lret
fisubrs
stc
fucomip
loope
jge
mov
sbbb
insb
and
jp
aam
nop
jp
xlat
xlat
mov
lock
pop
mov
cmc
pushf
inc
inc
cmp
into
mov
add
fnstsw
sbb
sub
push
cmp
adcl
sub
aad
push
and
mov
jbe
jmp
cmp
add
pop
push
out
or
shlb
iret
fistpll
pop
sahf
sbb
fildll
cmpsb
xchg
mov
das
and
in
pop
pop
or
push
shlb
out
adc
lea
cmp
and
cmp
shl
les
xchg
push
mov
mov
jbe
aas
stos
xchg
push
cmc
clc
hlt
sub
xor
test
or
sbb
inc
lods
and
xor
mov
ljmp
sbb
sub
mov
enter
inc
test
mov
ret
imull
push
xchg
mov
inc
scas
fs
push
mov
or
icebp
jne
enter
adc
jnp
and
jns
jno
leave
mov
add
mov
insb
lahf
add
scas
pop
out
jmp
mov
sbb
mov
movsl
shl
sahf
mov
nop
sub
out
xor
test
sbb
popa
das
xor
sub
jl
movsl
or
adc
and
and
sub
iret
xor
leave
jecxz
jne
push
fs
push
sbb
dec
dec
lock
hlt
xchg
pop
loope
mov
aaa
in
adc
mov
daa
ljmp
jae
aad
mov
dec
sahf
js
push
xlat
andl
lods
addl
imul
or
ficomps
shrl
cmc
cmp
cmp
test
cmp
js
shrl
mov
test
shlb
lods
test
mov
andb
push
inc
xor
cwtl
dec
mov
mov
rcll
adc
xchg
gs
jle
jb
push
xor
mov
rcrl
cmp
fiadds
das
pop
push
jg
ret
nop
mov
inc
lods
xchg
xchg
into
imul
outsb
mov
rolb
push
orl
cmp
sbbb
sbb
cmp
lcall
sbb
data16
mov
fs
or
xlat
cmp
sub
mov
enter
call
std
push
add
pop
lods
stc
je
jl
and
inc
iret
test
insl
or
xor
add
icebp
push
jecxz
xor
imul
xchg
ret
popf
mov
cld
lret
jmp
and
mov
aaa
mov
sub
imul
fsts
call
fmul
leave
and
adc
iret
ret
pop
inc
loopne
ficompl
sub
mov
pop
cmp
inc
cli
cmpsb
popf
mov
jb
jne
or
adc
fadds
scas
sub
rcrb
orl
jne
xchg
fwait
addr16
ds
fisubl
push
dec
lret
andl
push
rcl
popa
jne
add
addb
adc
mov
mov
cmp
fwait
clc
inc
bound
mov
pushf
adc
fsub
imul
arpl
xor
clc
xchg
jecxz
xor
adc
push
lock
xor
push
shrb
or
leave
iret
or
cmp
int3
addr16
dec
das
data16
je
and
jbe
push
hlt
pop
call
outsb
aas
lods
dec
sbb
adc
inc
dec
mov
xchg
dec
xor
and
dec
cs
ljmp
mov
repnz
xor
sub
cmp
xchg
push
popf
mov
test
out
adc
mov
sub
cmp
jle
fs
inc
or
fdivs
jp
xor
or
lahf
sbb
xchg
jo
adc
popa
sub
pop
push
insl
int3
cmp
xchg
int3
in
sub
add
mov
and
push
testl
rdmsr
xchg
mov
fidivrl
sbb
loop,pt
insb
sti
adc
aaa
and
mov
imul
enter
out
sbb
jge,pn
mov
aam
mov
push
add
pop
cs
mov
mov
push
dec
stos
movsb
jg
jle
cmp
outsb
mov
xor
loope
ffree
clc
test
je
or
adc
into
insl
loop
adcl
loopne
sub
daa
xchg
dec
mov
and
jae
addb
pop
in
adc
xor
dec
lods
insb
hlt
xchg
pop
ret
rcr
jge
out
or
iret
cmp
xor
push
test
stos
mov
cmpsb
sub
mov
scas
adc
es
fimull
sub
mov
xchg
xchg
sub
out
pop
adc
mov
or
lods
fsub
dec
cli
inc
addb
pop
sub
cmp
cmpsb
shrl
cs
outsl
out
or
pop
lret
arpl
mov
cmpsb
insl
int
cmp
aad
mov
push
adc
fcompl
xor
cmp
fidivrs
pop
sti
mov
xor
negb
in
ret
mov
cmp
mov
mov
xchg
lret
add
mov
pop
sub
mov
cmp
popa
jns
xor
push
xlat
int
xor
sbb
icebp
repz
in
mov
into
xchg
lods
xchg
and
enter
sbb
adc
jae
jl
mov
jbe
mov
add
in
pop
or
clc
jge
loopne
add
mov
push
cmp
xchg
push
xlat
adc
les
in
cwtl
or
mov
fs
add
stc
shl
jge
dec
add
pop
mov
int3
push
fld
orb
ficoms
das
pop
enter
and
push
out
inc
add
lret
fbstp
lock
loop
popw
mov
xlat
hlt
insl
ss
jb
jp
cli
add
lds
sub
je
jae
ret
add
cmpsl
mov
inc
sbb
inc
xlat
push
sahf
jmp
jns
shr
rcl
mov
leave
mov
pop
shlb
sub
insl
ret
aas
loope
xchg
push
push
add
and
add
mov
das
add
xchg
dec
movsl
stos
call
hlt
mov
or
push
inc
imul
cltd
cmp
mov
popf
pushf
in
add
imul
push
inc
mov
into
jno
add
cmp
jmp
adc
lret
ret
loopne
stos
mov
pushf
das
sub
lds
xchg
cmp
in
inc
mov
aaa
add
mov
popf
je
inc
stc
movsb
mov
sahf
mov
into
pop
adc
cmp
arpl
data16
xor
dec
or
inc
push
lods
rolb
jle
cmp
cld
data16
dec
fadds
jns
sub
or
dec
or
hlt
pushf
fs
cltd
sbb
leave
scas
and
sbb
fwait
dec
jecxz
sbb
test
xchg
or
mov
mov
cwtl
add
jns
or
inc
and
sbb
cltd
dec
dec
dec
adc
mov
loop
scas
sub
dec
arpl
inc
add
jno
xchg
pop
repz
sub
pop
sbb
call
or
dec
nop
cwtl
push
pop
push
cwtl
leave
fldt
lahf
inc
mov
aas
je
adcl
cmp
mov
cmpsl
push
in
inc
add
bound
xchg
xchg
loope
repnz
mov
xor
in
ds
mov
clc
pop
in
dec
mov
pop
aam
xor
inc
cmp
rcr
in
mov
or
mov
mov
and
dec
popf
dec
mov
fisubl
fiaddl
mov
jbe
das
das
mov
or
aaa
andl
xor
popf
imul
mov
push
jmp
jne
xor
cmp
cltd
mov
repz
sub
push
nop
sbb
in
enter
mov
jmp
or
ret
lret
push
push
rorb
mov
jecxz
adc
xchg
fcmovnu
pop
sbb
sbb
dec
test
push
mov
cmp
sbb
stos
dec
and
or
aas
insb
fimuls
push
and
lea
mov
pop
mov
push
xchg
xor
mov
popa
mov
sarl
mov
xor
js
add
enter
insl
ss
xchg
inc
mov
cmp
cmp
xchg
stos
xchg
sbb
pop
sub
imul
add
sub
repz
jg
mov
std
subb
in
and
pop
lods
dec
test
inc
sbb
and
in
jb
inc
lods
je
mov
stos
add
leave
lea
les
rclb
gs
inc
aas
mov
mov
hlt
or
push
jg
mov
fs
or
mov
int3
stc
xor
out
mov
movsl
std
cmpsb
mov
popf
xchg
push
addl
in
pop
cmp
mov
jbe
rcrb
lock
daa
cltd
shrb
ja
mov
inc
mov
xor
pop
dec
fistpl
xor
in
imull
lods
xchg
xor
or
imul
push
ret
add
xchg
repnz
cmp
nop
movsl
mov
add
leave
fs
sbb
dec
test
adc
je
inc
sarb
mov
test
dec
lahf
adc
sahf
movsb
push
stos
js
in
lds
adcb
jge
arpl
or
imul
sub
mov
ja
mov
mov
loop
aaa
push
testb
xorl
pop
mov
js
lret
lcall
mov
push
in
mov
lahf
cmpsl
cmpsl
xchg
xchg
ds
imul
cmp
lods
cmp
insl
or
dec
jg
or
orb
jns
jmp
mov
lods
adc
mov
sar
pop
and
sub
or
jl
sbb
sub
jl
fldl
ss
out
and
push
xor
aaa
shlb
push
std
adc
out
mov
pop
sbb
es
and
scas
push
lcall
scas
lds
mov
mov
push
pop
sahf
xlat
sbbl
mov
in
adc
int3
jmp
pop
xchg
dec
or
popf
jnp
jno
in
sbb
scas
sbb
imul
es
and
outsb
jle
jbe
mov
std
cmc
adc
adc
pop
pop
jle
popa
pop
in
repz
fs
cmpsb
loopne
fsubs
cmp
sbb
fildll
pop
pop
cmpsl
xchg
pop
mov
cmp
xchg
xchg
fadd
cltd
insl
mov
call
mov
stos
mov
xchg
cmpl
jg
dec
push
cld
in
xchg
inc
lahf
in
mov
cltd
sbb
lea
mov
xchg
pop
mov
hlt
xlat
lcall
imul
cs
ljmp
push
xchg
jbe
mov
nop
inc
testl
popf
int3
xor
movsl
inc
lcall
rcll
in
sub
sbb
mov
mov
aad
sbb
mov
or
fbld
mov
mov
cli
aam
mov
push
loopne
fisubrl
enter
xor
ljmp
inc
sub
xchg
dec
lds
mov
push
cmpsb
mov
dec
pop
mov
roll
roll
jbe
out
and
jnp
add
nop
push
jmp
jg
leavew
jo
imul
dec
dec
out
jns
das
sub
dec
sbb
cmpsb
test
cmp
push
xor
mov
add
or
mov
pop
fcmovu
pcmpeqb
sub
push
fbld
cmpsb
pop
std
sbb
add
fildll
pushf
fwait
adc
int3
fldenv
push
pop
test
ljmp
dec
dec
pop
bound
add
pushf
rorl
fsts
and
sahf
mov
lahf
arpl
fsub
adc
sub
xchg
lods
lahf
arpl
push
push
sbb
pop
in
enter
adc
mov
jno
lds
pop
mov
loope
addl
mov
xor
cli
leave
movsl
mov
jbe
pop
lahf
scas
aas
mov
ficoml
testb
dec
in
in
jne
hlt
lret
stos
and
inc
sbb
ffree
cmc
bound
xor
mov
fadds
mov
mov
push
push
popa
sub
mov
dec
lea
inc
sbb
jecxz
fisubrl
jnp
call
mov
jns
pushf
jg
pop
sbb
lret
arpl
sahf
repz
imul
mov
out
pop
dec
sbb
sub
mov
inc
xor
or
push
cmc
stc
test
xchg
scas
push
aad
sub
jge
jb
mov
je
inc
xchg
cmpsl
repnz
pop
and
les
push
std
fs
fldcw
add
or
and
jge
mov
xchg
sbb
xor
jmp
cmp
out
icebp
data16
js
xor
pop
repnz
mov
pop
pop
xchg
in
inc
sub
subb
mov
cmc
add
mov
sbb
jns
test
pop
sar
mov
mov
dec
cmc
inc
and
das
stos
out
cmp
cmpsl
jle
addr16
cmp
xchg
pop
xor
mov
mov
sub
sub
push
shl
push
lods
mov
xchg
movsb
shlb
xlat
xchg
leave
push
in
dec
sahf
test
nop
cltd
adc
xchg
pop
mov
add
sub
cmpsb
lret
mov
sbb
outsb
jbe
xlat
and
dec
movsb
test
xor
sbb
xor
mov
pop
mov
or
add
push
loope
push
pop
push
shlb
push
mov
scas
and
dec
add
pop
sub
and
mov
add
clc
pop
mov
repnz
in
and
add
fstps
in
xchg
mov
pop
mov
add
lea
bound
pop
xchg
add
movsl
jmp
bound
lret
in
outsb
mov
push
mov
lock
movsl
lcall
ds
jbe
add
xchg
pop
jmp
xorb
xor
loope
pop
adc
pop
mov
jg
arpl
push
adc
adc
mov
adc
push
int3
inc
lea
sbbl
pop
jl
sub
sbb
or
and
sbbl
push
daa
or
ja
mov
call
rolb
roll
pop
push
rcr
aad
jnp
xlat
pushf
mov
dec
push
in
out
pop
dec
adc
ret
mov
in
push
jmp
adc
sbb
repnz
xor
adc
jbe
shll
push
mov
jl
cpuid
test
fldl
mov
jg
jg
dec
into
xor
pop
push
push
jecxz
push
js
icebp
ficomps
sbbb
or
mov
xchg
mov
add
mov
mov
push
scas
cltd
int
cmp
gs
push
shll
into
pop
xchg
sbb
fiaddl
ja
inc
imul
jmp
clc
ret
xor
gs
std
pop
aad
out
stos
adc
mov
jecxz
notb
ljmp
cmp
xorl
sarl
or
dec
loop
test
mov
lea
bound
mov
sbb
dec
test
xchg
scas
aad
clc
and
std
popa
scas
ret
test
push
xchg
hlt
jg
pop
and
int3
inc
cwtl
push
mov
popf
out
test
jo
adc
ret
sub
fcomps
ret
and
inc
mov
data16
orl
jnp
nop
mov
mov
sbb
ficomps
rclb
repz
loop
clc
hlt
sbb
jge
fwait
cmp
scas
sti
or
pop
mov
inc
dec
cld
jnp
jnp
fs
or
test
test
xor
mov
clc
push
test
ficoml
cmc
mov
jno
xor
xor
fsubs
int3
inc
std
icebp
mov
pop
test
xor
and
xor
xor
ret
dec
add
xchg
cwtl
jb
dec
sbb
iret
pusha
cli
fscale
movsl
subb
pop
cmp
fisubrs
aad
push
daa
stc
mov
inc
and
scas
lretw
pop
lret
add
adc
lret
push
and
lahf
sbb
daa
testb
and
adc
repz
je
lea
pop
or
xchg
push
mov
push
cmp
mov
dec
push
int3
movsl
sbb
and
lcall
adcl
mov
aaa
mov
int3
inc
inc
push
xor
shrb
lahf
jb
cmpsb
adc
std
movsb
dec
inc
mov
aam
adcl
sub
jecxz
pushf
shlb
push
loope
fstpt
lret
ficomps
and
or
aad
pop
movsb
sub
inc
push
add
inc
loopne
push
rorb
aad
shlb
into
shll
mov
and
push
sbb
ret
pop
mov
ds
mov
push
dec
cmpsl
xor
addr16
mov
mov
imul
decl
lahf
inc
iret
loopne
cli
repz
scas
mov
adc
sbb
stos
insl
pusha
loop
xchg
cmp
xor
sbb
mov
xor
sahf
int3
push
cmpsl
movsl
ss
lcall
outsb
mov
rcrb
data16
sbbl
in
mov
sub
push
pop
dec
xchg
fldcw
pop
lcall
push
shll
cli
cmp
lods
jb
cmp
push
imul
fisttpll
or
lods
mov
pop
xchg
lcall
jmp
add
jle
ds
adcb
inc
nop
and
xchg
stos
ds
xchg
mov
mov
and
push
std
loope
movsl
ffreep
sti
in
test
mov
test
mov
sub
xchg
adcl
popl
xor
in
adc
or
loope
fdivl
sbb
jecxz
out
jle
lds
dec
add
pop
jl
fstpl
andb
into
mov
pusha
popf
xor
adc
cltd
xchg
movzwl
add
daa
pop
out
cmp
xor
aad
adc
xchg
sti
push
xor
pop
xchg
stos
xor
movsb
xchg
shl
jnp
and
jg
inc
fisttpl
dec
lea
push
push
fistps
clc
jns
cmp
jle
stos
in
jb
stos
fidivl
lds
jae
daa
cmp
or
or
orl
sbb
stos
out
pushf
in
sbb
dec
fcmovbe
xchg
popa
lret
jge
gs
cmp
ljmp
inc
jecxz
shll
fstl
and
sub
mov
mov
mov
mov
and
ja
add
lahf
fwait
out
adc
imul
in
pushf
ljmp
push
outsl
xor
dec
mov
xor
fdivl
push
out
addl
into
mov
adc
js
add
ret
push
sub
mov
addr16
lods
push
fistpll
cli
and
loopne
faddl
test
jmp
or
mov
lea
mov
fnstenv
out
divl
mov
lods
nop
jae
loope
lret
jae
sbb
push
stos
or
int3
adc
add
xlat
sti
mov
push
es
or
hlt
push
aaa
mov
fdiv
mov
lcall
mov
xchg
call
in
aam
cmpsl
xor
xchg
pop
xlat
xchg
pusha
aas
inc
test
addl
popa
loopne
ss
pop
aam
roll
xchg
add
insl
mov
push
ret
mov
cmpsl
xchg
dec
xor
std
xchg
jbe
pop
xorb
into
jnp
sbb
ja
lret
dec
lcall
imul
sub
xor
rorb
inc
cld
daa
xchg
addr16
sbb
xchg
mov
pushf
xor
scas
insb
inc
sbb
push
mov
test
or
stos
cmovo
in
dec
cld
decb
shr
sbbl
lds
sub
or
push
lea
jb
cmp
outsb
mov
je
dec
adc
hlt
mov
ss
movsb
push
ja
jge
mov
xlat
jns
data16
mov
sub
sbb
pop
or
mov
push
jge
ret
jge
mov
rorl
out
popl
push
cwtl
mov
pop
mov
mov
jl
inc
stc
push
or
and
insb
loopne
jns
pop
aaa
pop
jle
cli
in
stos
inc
in
dec
mov
xor
ret
fadds
xchg
subb
lock
aas
pop
cmpsb
out
add
and
stos
shrb
sub
mov
sbb
dec
mov
mov
sbb
lods
xor
push
pusha
orl
loope
div
icebp
mov
call
lock
dec
jge
push
clc
lahf
cmp
outsb
xchg
test
cmpsb
data16
inc
lret
push
in
add
cli
mov
mov
icebp
imul
mov
and
jns
add
ficompl
mov
ror
ljmp
in
jecxz
xor
dec
inc
dec
mov
or
xor
sub
mov
loop
bound
jae
daa
jle
in
inc
outsl
addl
cmp
ljmp
pushf
xchg
leave
cltd
and
sbb
adc
push
sub
lock
rcl
je
aad
scas
hlt
cmp
mov
mov
pop
pop
shll
sub
add
outsb
loope
fs
mov
xchg
jle
lods
dec
imulb
repnz
inc
push
inc
das
lock
xchg
pop
mov
aad
jns
xor
add
pop
subl
ja
jecxz
or
stos
dec
outsb
sti
repz
ds
dec
xchg
or
jo
inc
mov
mov
xor
test
sbb
and
cmp
dec
nop
jl
push
cld
xchg
psllw
int3
aas
add
sbb
lahf
int
test
leave
lret
adc
mov
cmpsl
scas
outsl
loope
negb
repz
test
dec
aaa
dec
loope
leave
jmp
idiv
movsb
cmc
jne
out
jmp
xchg
dec
mov
jne
xchg
shll
es
mov
and
rorb
mov
and
pop
shr
jmp
add
jae
mov
shll
std
pop
imul
rolb
jne
inc
nop
loope
pop
fsubrs
dec
nop
cltd
xchg
pop
xchg
xor
icebp
lea
cmp
data16
mov
dec
dec
inc
cmp
push
pop
jle
sarb
lcall
lods
mov
mov
xchg
loopne
cmp
cld
test
cltd
mov
and
push
cmp
aam
inc
imull
or
nop
leave
xchg
in
inc
test
daa
repnz
sub
clc
xchg
ret
cwtl
jge
les
inc
test
fldpi
mov
rcll
sahf
cmpsl
sahf
sbb
jge
jl
ja
pop
xor
outsw
js
push
cmpsl
lods
rdmsr
pop
aam
cmpsb
pop
rolb
pop
xchg
in
cs
cld
imul
xchg
jo
fdivrs
fldlg2
cmc
sbb
ljmp
fildl
inc
push
jge
sbb
or
inc
jge
mov
leave
push
sahf
lret
mov
push
rorl
ret
aad
xor
mov
xchg
out
xchg
sbb
aaa
cmc
scas
add
sub
cli
xchg
ja
xchg
psubsb
inc
subl
xchg
inc
in
jb
sbb
repnz
out
icebp
jp
out
and
outsb
sahf
mov
adc
dec
or
jp
lea
xchg
or
shll
pop
lret
std
shll
lahf
fmuls
inc
jge
imul
cmp
sti
aas
push
adc
ljmp
lods
mov
sub
jbe
mov
jo
sub
cld
test
sbb
mov
pop
out
and
rcrb
inc
cli
mov
pop
xor
rorl
sbb
add
sbbl
sbb
fildll
jmp
fwait
xchg
or
mov
mov
mov
sub
adc
andl
or
mov
inc
dec
sbb
int
inc
lods
push
fs
mov
and
iret
dec
jo
insl
or
out
or
scas
jbe
sbb
mov
pushf
jle
cmp
fsubrs
sub
aad
lds
bound
cmp
icebp
rcl
mov
push
jno
adcb
push
ljmp
les
sbb
fsubrs
mov
cmp
je
iret
je
push
inc
jo
outsl
jns
jl
xor
add
test
mov
std
shrl
test
and
fldcw
test
sub
xchg
add
ss
xor
xchg
mov
movsb
add
inc
cmpsb
call
pop
repz
xor
aas
push
pushf
pushl
push
fildll
dec
setbe
test
ds
dec
adcl
adc
lret
rol
enter
xor
rolb
pusha
cmp
and
cmp
cli
cmp
aam
enter
pop
or
arpl
jae
cmp
js
sbb
mov
and
add
mov
inc
iret
mov
jb
mov
mov
loop
cwtl
rcl
insl
inc
xchg
sub
pop
popf
inc
out
push
fs
repnz
aam
je
fadd
and
jb
xor
inc
push
mov
icebp
adc
and
nop
xor
mov
mov
cmpsl
or
rclb
sub
push
xorb
lret
popf
into
lods
cmp
fwait
stos
push
rol
jno
sbb
mov
sti
push
fsts
dec
ret
adc
mov
lret
lret
pop
push
int
iret
sub
push
mov
pop
insl
inc
and
push
fisubs
mov
push
xorl
mov
icebp
xchg
insl
pusha
sbb
sub
pop
xor
mov
or
push
adc
out
add
mov
lahf
sub
pop
jo
cwtl
jle
mov
pop
movsl
pop
xor
xchg
dec
cmp
jg
jp
or
xchg
mov
loope
sub
ss
xchg
ds
fnstsw
mov
dec
or
and
popa
scas
mov
loope
dec
inc
add
adc
xchg
jl
iret
pop
lock
xor
aad
aas
or
in
popf
daa
dec
out
adc
dec
jp
push
inc
sbb
pop
fs
test
je
repz
out
dec
sbb
pop
js
mov
cmp
fstl
shlb
or
jge
ret
mov
sbb
aaa
xchg
and
aaa
shrl
sbb
imul
dec
inc
xchg
cld
xor
test
add
lods
mov
icebp
cmp
insb
in
outsb
rcrb
fs
mov
jnp
push
fs
mov
sbb
stc
test
sub
shlb
xchg
jl
out
lods
adc
cmp
xchg
xchg
aas
int3
aas
scas
push
dec
mov
out
or
and
ret
xchg
fisubs
pop
cld
stos
mov
ss
sbb
sub
add
pop
aad
out
stos
shrl
or
and
fstpt
jmp
fisttpll
sub
xlat
sbb
xor
dec
mov
subl
jl
jbe
sub
jmp
insb
nop
out
fstpl
mov
mov
adc
popf
pop
pop
push
mov
lods
push
cwtl
pop
xchg
and
xchg
or
out
or
jo
test
pop
andb
cmp
xchg
scas
and
dec
and
jbe
subb
mull
dec
loop
bnd
call
rol
bound
fcmovne
add
mov
mov
pusha
xor
add
out
leave
push
add
add
xor
inc
mov
adcl
mov
repz
and
adc
ljmp
mov
popf
sbb
imul
dec
data16
outsl
or
xchg
push
fucomp
xor
jge
pop
loop
and
mov
mov
cmpsb
loope
movsl
cmpsl
mov
movsl
ds
in
jl
xor
mov
mov
roll
test
jae
dec
scas
pop
adc
push
pushf
sbb
jl
addl
icebp
push
insl
dec
pop
je
and
pop
mov
adc
pop
xlat
mov
adc
cmp
iret
and
movsl
push
push
mov
fstpl
xchg
pop
repz
mov
repnz
pushf
out
pusha
push
imul
bnd
jmp
pop
pop
insl
das
xchg
add
fsub
imul
xchg
leave
mov
js
sbb
in
mov
ja
jl
mov
or
fs
aad
fisubl
push
and
and
jmp
or
mov
mov
gs
push
cld
or
mov
dec
add
cmpsb
xor
insl
mov
stos
mov
lahf
jl
das
or
jle
lahf
mov
jl
std
inc
dec
jne
ja
fsubrp
mov
fidivrs
sbb
test
mov
fstpt
ficoms
pusha
lret
or
shl
aas
add
loope
orl
pop
ficompl
insl
and
inc
insl
stos
jp
sub
xchg
sub
pmuludq
add
inc
pop
ret
pop
jae
mov
scas
lahf
xor
hlt
push
cwtl
inc
popf
lahf
in
rcl
popf
jb
popa
ds
decb
scas
lds
jne
cmp
bndldx
xchg
push
sub
loopne
jne
dec
inc
dec
inc
xor
pusha
cmpsl
mov
mov
out
sub
mov
sbb
int
stos
mov
xor
or
ret
iret
and
enter
and
or
pmaxsw
loopne
sub
icebp
gs
cmp
test
jp
jo
jge
fcos
addr16
cmpsb
out
jbe
scas
pop
xor
sub
lret
sub
in
testl
inc
push
or
push
arpl
lcall
sub
pusha
lea
pop
arpl
cltd
jge
mov
pop
decb
cmc
xchg
enter
loop
std
sub
out
int3
mov
mov
xor
inc
or
js
fsubs
or
jnp
hlt
repz
nop
push
dec
popf
mov
mov
cmp
pop
rcll
jp
lcall
imul
mov
hlt
das
rolb
push
jnp
push
ss
or
cmpsl
add
dec
iret
sub
add
aam
add
pop
jo
stc
scas
or
cmp
mov
and
mov
or
dec
imul
rolb
dec
insl
test
mov
insl
movsl
jb
test
dec
aam
les
loop
addr16
in
stc
cmp
shrb
fnsave
dec
movsb
fs
push
dec
int3
in
and
cmp
mov
fcoml
dec
addr16
ret
jbe
leave
test
and
test
inc
pop
lahf
data16
dec
jge
loop
std
inc
xchg
push
xor
sarl
inc
in
js
arpl
sti
into
je
mov
push
inc
loope
out
sarb
pusha
jne
imul
pop
mov
pop
dec
push
pop
push
mov
mov
inc
pushf
push
lods
int
iret
sbb
sbb
dec
into
popa
outsl
pop
ret
or
out
cmp
insb
sub
cmp
mov
inc
scas
imul
scas
rep
push
pop
pop
push
sbb
jg
sbb
hlt
lret
cli
dec
scas
xchg
popa
jnp
push
sub
movsb
mov
and
push
cld
jp,pt
sbb
bound
xorb
addl
cmc
lret
pop
movsl
xchg
das
rcll
inc
and
adc
pop
or
sbb
int
push
pop
subl
pop
arpl
add
int3
aas
jno
jae
push
jb
jl
pop
push
xchg
mov
push
popf
adc
mov
lock
divb
mov
inc
daa
adc
mov
sub
ficoml
or
pop
pushf
mov
pusha
inc
out
pop
jbe
inc
jo
sub
pop
movsl
es
or
enter
mov
or
pop
mov
rcll
sub
jecxz
push
clc
shl
ret
jns
ret
and
into
ffree
mov
or
ss
xlat
push
es
add
in
push
adc
cmp
jp
lods
insb
in
clc
mov
orl
jge
add
es
sbbl
mov
aaa
adc
int3
inc
xor
push
pop
sub
xchg
mov
jp
push
arpl
movsb
jns
jo
into
sbb
rcl
test
sub
mov
mov
shrb
lahf
shlb
bound
dec
dec
sbb
pop
dec
ret
mov
lods
aad
popf
add
stos
cmc
pop
pop
cs
cltd
cmpsb
jae
push
sbb
mov
mov
repz
aaa
xchg
inc
jecxz
pop
loope
push
pop
outsl
test
adc
pusha
mov
jp
ss
imul
jp
es
push
js
jne
adc
mov
pop
xor
pop
es
pop
fstl
add
push
pop
addr16
stos
adc
es
aad
notb
sbb
jbe
or
mov
roll
fwait
and
sahf
jmp
mov
or
fisubrs
testb
lret
jmp
sub
mov
xchg
adcl
pop
addr16
and
popl
push
stos
sti
mov
cs
sub
jg
mov
cs
lds
cmc
adcb
sbb
and
pop
mov
mov
in
pop
sahf
popa
or
addb
ljmp
pop
fcmovnb
xorb
pop
or
insb
push
jo
outsl
pop
mov
xor
or
out
frstor
xor
push
mov
in
cmc
fistl
jnp
fidivrs
xchg
sub
fistpll
idivb
jbe
xchg
push
ror
je
push
push
xor
cmpsb
out
clc
lods
aas
push
lcall
xchg
push
test
mov
inc
ret
test
cmp
mov
rclb
clc
mov
add
or
addb
and
dec
fadd
xchg
mov
and
cmp
cwtl
or
insb
lret
and
adc
xor
sub
test
xlat
clc
int
ss
mov
addr16
icebp
adc
xchg
xchg
jnp
ficomps
imul
sbb
pop
cmp
xlat
call
add
dec
mov
push
in
fcmovb
shrl
and
jp
inc
sub
or
mov
js
push
sahf
clc
dec
mov
push
push
in
mov
add
testl
mov
cld
mov
xor
dec
jb
mov
test
jl
aas
ffree
loope
dec
fistl
adc
mov
in
jno
sub
mov
sqrtps
dec
pop
out
mov
mov
rorb
pop
es
fsts
jl
push
sub
mov
add
push
mov
jnp
pop
add
lahf
std
xor
sbb
popf
or
xor
and
pop
jns
jbe
xor
jbe
popf
aas
loope
cld
adc
mov
jmp
or
fbstp
ljmp
es
adc
out
jno
hlt
iret
lret
test
and
popa
cltd
test
cwtl
push
add
lods
mov
adc
jb
mov
stc
iret
lret
imul
inc
fwait
xchg
xchg
mov
pop
add
sbb
xrelease
shr
xchg
pushf
and
mov
popa
push
push
lds
jl
icebp
in
aad
dec
rolb
push
in
jno
sarl
mov
mov
test
scas
pop
movsb
jne
es
jno
mov
mov
mov
inc
pusha
jecxz
and
or
sub
stos
jmp
push
mov
cmp
xor
mov
je
addr16
or
pop
lods
jge
sbb
sbb
icebp
add
test
loop
inc
dec
int3
sahf
es
adc
in
xchg
dec
cmp
dec
int
rolb
lar
pop
outsl
pop
pop
push
mov
jne
lret
pop
jp
xor
movsl
nop
pop
outsb
arpl
ret
mov
adc
cmp
int3
ljmp
add
fsubr
xor
test
out
sub
addl
and
fcoml
and
jg
ficompl
vpsubusw
inc
jo
mov
shlb
fst
sbb
std
ja
mov
clc
cmpsl
jns
repz
int3
cmp
pop
insb
jle
dec
push
mov
out
jmp
lods
test
inc
inc
sbb
sub
lret
jno
sbb
addr16
test
push
inc
xchg
popa
daa
push
pop
pop
cmp
pop
aad
fimuls
call
stos
sti
sbb
cmp
repz
sub
push
je
stc
add
mov
ret
lods
dec
shrb
outsl
insb
inc
xchg
das
adc
xchg
cli
pushf
scas
xchg
movsb
adc
or
and
push
pop
mull
divl
sub
add
mov
pop
dec
inc
mov
pop
data16
popa
pop
mov
push
jecxz
mov
pusha
fildll
adc
jb
loopne
mov
xlat
inc
lret
insb
into
cli
stos
and
fsubl
inc
mov
das
push
cmp
fimuls
das
clc
outsl
inc
xor
jns
jmp
fcmovne
jbe
outsb
add
adc
in
cmp
into
fimuls
test
icebp
mov
push
jbe
mov
xchg
mov
pop
jecxz
arpl
push
dec
enter
push
mov
cmp
cltd
out
mov
push
insb
inc
mov
popf
test
mov
dec
adc
pusha
dec
stos
xchg
int
imul
outsl
lret
ja
aam
pop
outsb
xchg
jl
mov
push
mov
adc
push
insl
aas
jns
loope
out
sbbb
leave
adc
je
dec
jno
xchg
push
inc
bound
sbb
movsl
movsl
pop
jge
cmp
lret
pop
sbb
mov
fdivrl
loope,pt
pop
cmp
loope
mov
ljmp
xchg
cli
fcmovne
or
push
addr16
or
xor
mov
mov
loope
add
mov
push
rcll
addb
or
adc
add
cmp
sub
popf
loope
arpl
cmp
fmuls
jns
in
and
dec
mov
addr16
dec
arpl
inc
out
je
lods
out
enter
cltd
cld
repnz
shl
inc
push
cmp
insb
imul
push
xlat
inc
and
inc
movsl
std
notl
inc
xor
pop
insl
je
fdivs
push
sub
das
daa
arpl
push
jl
sbb
sbb
sbb
inc
cmovb
imul
repnz
add
jns
rolb
and
mov
pusha
dec
xlat
mov
xor
lcall
mov
test
popa
mov
ljmp
popf
stos
repz
push
sti
scas
jmp
pop
cwtl
notl
jle
push
dec
js
mov
push
dec
sbb
jg
pop
repnz
push
aam
pop
mov
sarb
fstps
sti
mov
and
cld
fdivs
std
icebp
mov
aam
insb
cmp
andl
in
push
mov
mov
pop
push
repz
and
xchg
sarb
outsb
adc
scas
fsts
imul
cmpsl
adc
and
aam
fistpll
mov
insl
xchg
pop
xchg
mov
adc
jl
mov
push
scas
addr16
popf
mov
test
adc
outsl
dec
cmp
xchg
mov
aaa
lods
dec
test
mov
or
int
xchg
arpl
out
ljmp
std
dec
aad
dec
xchg
fwait
dec
cltd
push
push
fbld
pop
xor
sahf
dec
pop
cld
in
sbb
jecxz
lds
jecxz
sub
and
mov
mov
inc
cli
xchg
aam
mov
aam
fmul
xchg
xor
aad
clc
ljmp
test
mov
and
xchg
movsl
mov
inc
fucomi
mov
pop
adc
dec
fdivrs
mov
out
daa
sbb
or
push
popa
add
cmc
fidivl
xchg
fbld
rcrb
movsb
add
mov
cmp
pop
push
mov
sbb
fnstsw
bound
dec
pop
jmp
rcrb
jl
sub
fsubrl
sbb
cmp
mov
xchg
lods
mov
xchg
das
sarb
in
mov
inc
inc
stc
dec
loop
inc
push
jae
cltd
ret
addr16
mov
sti
xor
adc
mov
pop
mov
mov
arpl
arpl
mov
sti
jnp
push
aad
ds
shl
stos
xor
inc
imul
or
stos
mov
jl
mov
mov
xchg
btr
mov
sub
es
lahf
in
call
hlt
int
arpl
cld
imul
jge
pop
imul
xchg
lcall
adc
loope
out
or
popf
aad
mov
push
or
mov
scas
rolb
adc
std
or
inc
push
jmp
adcb
ss
insb
mov
push
pop
mov
xor
leave
dec
js
mulb
test
push
push
lods
das
push
mov
imul
push
inc
mov
dec
out
jne
leave
std
icebp
ds
or
rcll
bound
push
pop
scas
sbb
out
pop
scas
xchg
in
loop
or
pop
xchg
push
xchg
jl,pt
xchg
movsb
cmp
inc
icebp
push
xor
jbe
aam
and
jg
movsb
inc
xchg
subb
stc
push
out
movsl
out
and
dec
mov
mov
and
mov
cli
pop
pop
scas
and
imul
gs
mov
imul
jns
loop
dec
add
or
push
sti
stc
sbb
fmuls
test
xor
stos
insl
rorw
xlat
lret
dec
or
xchg
call
sar
push
lea
xchg
mov
cmp
fwait
push
push
shlb
sub
imul
lods
pop
in
xor
cwtl
daa
add
outsb
mull
xor
jnp
push
add
cmp
add
push
mov
sbb
aam
cmc
xchg
ds
and
les
xor
repnz
test
sbb
jnp
xor
mov
dec
pop
add
orb
xchg
dec
inc
in
scas
mov
sub
xchg
fisttpll
or
adc
jno
xchg
shl
jae
push
in
repz
inc
pop
xor
bound
mov
scas
and
jl
xlat
faddl
sbb
xchg
cmp
jns
dec
mov
xor
test
rcll
test
dec
mov
rorl
adc
int3
pop
adc
mov
jbe
sbb
pop
inc
in
lods
push
xor
sbb
add
push
mov
add
mov
rorl
popf
scas
or
fwait
dec
test
and
adc
adc
mov
cmp
sbb
mov
jecxz
dec
ret
test
inc
and
stos
or
pop
add
add
and
sbb
mov
andl
xchg
jo
and
push
test
andb
xor
jmp
ret
fcmovnb
pop
push
mov
and
into
adc
and
mov
push
mov
mov
repnz
cs
hlt
es
mov
sub
ret
pop
mov
lds
or
lods
and
add
and
pop
mov
jb
or
xchg
mov
mov
dec
pusha
xchg
and
xor
or
out
imul
sti
xchg
dec
adc
movsb
lret
xor
mov
shlb
addr16
setbe
rcrl
mov
test
ret
pop
or
shlb
add
xor
xchg
out
jns
mov
stos
call
lcall
loopne
in
sub
and
lds
jno
jge
inc
xor
cmc
loopne
inc
cli
shl
push
jg
arpl
mov
dec
int
cmp
jne
cmp
leave
dec
ret
outsl
inc
jmp
jno
movb
sti
mov
xchg
and
jne
dec
lret
push
loop
mov
or
or
insl
fidivl
cmp
jo
mov
bnd
imul
pop
ret
fcmovb
cwtl
jg
jl
int3
test
jmp
int3
add
mov
loope
mov
cld
lods
xor
mov
test
lret
shll
mov
fldcw
in
mov
fldcw
xchg
bnd
sbb
loopne
mov
jnp
repnz
push
cmp
mov
push
fs
mov
ds
dec
aas
gs
jno
mov
add
sub
fs
sbb
data16
push
orb
sub
cmc
fs
jle
sbb
sbb
jns
mov
jnp
add
daa
cwtl
cli
sbbb
addl
mov
push
inc
sub
lds
inc
inc
sti
idivb
fs
sbb
rcrl
lret
jge
rolb
test
data16
dec
aaa
negl
lea
stos
jae
lcall
lds
test
or
leave
mov
rorb
aad
push
scas
adcb
mov
test
inc
cltd
insl
in
fldl
mov
cmpsb
rcr
jle
cltd
ret
adc
imul
scas
jecxz
in
xchg
leave
cli
insb
sbb
aas
jg
loopne
std
call
push
rclb
adc
fiadds
rclb
xor
inc
add
ss
addr16
shl
push
cld
jne
adc
xor
add
icebp
call
jp
dec
xorl
sbb
jo
div
mov
pop
or
dec
mov
push
mov
inc
and
sub
dec
xchg
mov
adc
lds
insl
dec
mov
scas
sub
xchg
lods
enter
pop
das
adc
or
sbb
jg
out
inc
lock
and
daa
cltd
mov
jns
cmpsb
sbb
sbb
jnp
pop
out
mov
sbb
add
inc
jg
aad
mov
mov
mov
cmp
cwtl
push
das
mov
addl
outsl
mov
in
out
mov
call
or
scas
cwtl
sub
lret
inc
mov
pop
mov
pop
dec
mov
nop
pop
je
jmp
inc
pop
pop
pop
aas
jp
xor
jmp
mov
jne
call
fcoms
push
jg
les
mov
pop
mov
inc
fidivrs
sub
sub
jns
push
ret
mov
fdivl
cmpsl
inc
nop
mov
push
cmp
cs
jo
test
ljmp
pop
or
jmp
repnz
xor
scas
clc
cltd
popf
adc
test
push
mov
idivb
js
push
mov
adc
mov
add
push
in
add
pop
mov
ds
push
cmp
xchg
mov
iret
imul
add
ja
js
bound
stos
fisttps
jecxz
pop
mov
dec
mov
sub
mov
add
pop
inc
int
loop
pop
or
dec
dec
out
in
daa
into
mov
sub
test
das
adc
in
insb
shl
fldenv
add
sbb
rcrb
mov
pop
mov
test
pop
hlt
and
mov
or
loope
iret
das
inc
mov
stos
and
jo
icebp
les
mov
movsl
dec
mov
imul
mov
or
or
loop
mov
push
jg
shll
pop
jnp
daa
inc
xlat
push
adc
add
pop
dec
or
test
call
cmp
and
notl
cmp
imul
or
lahf
or
test
pop
filds
or
xchg
call
push
cmc
and
adc
lcall
enter
cmp
or
xlat
lds
cwtl
cmpsb
xchg
cs
pusha
pop
cld
cmpsb
pop
xchg
outsl
stos
dec
inc
xor
push
inc
mov
pop
or
das
les
sub
icebp
mov
lahf
xor
les
fwait
cs
pop
sbb
mul
test
jo
imul
inc
lods
xor
orb
sub
fistpl
dec
fdivrl
outsb
int3
inc
jb
mov
cmpsl
addr16
frstor
mov
push
repnz
dec
and
daa
rclb
jnp
push
mov
in
sbb
insb
and
inc
pop
pop
cltd
mov
push
sbb
orl
and
aam
repnz
js
add
cwtl
pop
jle
insl
das
or
xchg
inc
fwait
pop
fdivp
jl
cmpb
ret
cmpsb
mov
mov
je
lods
sbb
push
setp
push
pop
xor
pop
sbb
xor
lcall
sar
js
mov
stos
int
ret
jle
ret
movsb
gs
or
loopne
mov
xchg
std
xchg
jg
xor
mov
xchg
adc
mov
adc
iret
imul
sbbl
scas
push
popa
fldt
inc
jg
cmpsb
jae
and
mov
or
xchg
push
aad
cli
push
jg
sbb
inc
xor
xchg
xchg
push
jnp
outsb
insl
xchg
aam
jg
add
mov
push
inc
sub
lret
and
push
iret
sbb
push
adc
push
sub
arpl
movsl
test
mov
dec
aad
pop
jle
sbb
pop
hlt
sbb
add
add
jb
ljmp
xlat
imul
mov
rcl
popf
sbb
gs
dec
sub
jl
sbb
mov
mov
aas
fstp
inc
daa
and
nop
mov
or
xchg
mov
and
xchg
jns
test
in
mov
mov
mov
dec
popa
arpl
jg
mov
sti
jo
mov
lret
jns
push
mov
xor
cmpsb
shrb
fildll
or
sbb
adc
shll
lahf
sub
cmp
adc
mov
jg
cld
aas
push
ds
dec
std
fs
mov
lock
sbb
sub
stos
stos
adc
cwtl
insl
out
in
cmpsb
cmc
das
xabort
cmpsl
lea
ret
sbb
loope
inc
cmpsl
xchg
out
je
lahf
testb
inc
jp
xchg
inc
dec
pop
fsub
jmp
popf
mov
add
lret
inc
sbbb
testb
lret
push
mov
sar
add
ljmp
inc
loopne
adc
push
lds
ret
jmp
sahf
xor
jno
adc
shl
hlt
mov
mov
loope
inc
add
lret
cld
cmp
sub
push
mov
aaa
shrl
and
xor
jp
dec
jle
movsb
add
xchg
xor
xor
loope
dec
in
lods
mov
jbe
negb
xchg
in
pop
push
push
es
test
femms
and
inc
pushf
xor
pop
inc
fists
mov
jg
add
test
mov
test
sub
add
or
ret
adc
enter
xlat
adc
mov
pop
repz
xlat
into
and
add
pop
in
pop
mov
cli
out
jb
popa
xchg
negl
cltd
popa
or
shl
mov
stc
push
pop
xchg
xor
push
cld
insb
out
dec
inc
lds
fwait
dec
repnz
das
sbb
cmp
cmp
push
sahf
mov
xor
out
outsb
pop
and
stos
add
inc
movhps
mov
std
jno
jbe
insl
iret
pop
adc
mov
imull
push
imul
or
xchg
imul
sub
xor
or
sbb
test
stos
fcmove
xchg
rcl
adc
imul
les
lods
repnz
mov
lret
dec
sbb
mov
cli
call
gs
call
mov
or
lahf
jl
rcll
adc
cmc
lock
adc
gs
inc
dec
inc
sub
xchg
imul
loopne
xor
js
daa
test
add
and
mov
lods
femms
mov
scas
out
mov
test
in
xchg
std
cmpsb
pop
xor
nop
mov
jb
test
xchg
pop
and
adc
or
in
xlat
xchg
in
push
out
lea
int
loope
add
or
test
test
sahf
push
adc
in
sbbb
rol
insl
jo
add
adc
shrb
movsb
rcrb
insl
test
sbb
test
pop
cld
and
mov
xchg
nop
jbe
jns
xchg
out
mov
sub
ds
movsl
leave
jl
int3
out
xchg
mov
jo
add
dec
gs
mov
stos
movl
int
pop
bnd
xor
test
cltd
sahf
arpl
or
inc
loope
cwtl
fisubl
flds
shlb
lmsw
out
mov
and
mov
inc
sbbb
lret
ficoms
enter
push
lcall
shll
repnz
jae
jne
dec
data16
jo
in
shll
mov
pop
rorl
cmc
jp
mov
push
jbe
test
test
jno
ds
rolb
fucomi
daa
push
stos
lahf
lret
imul
pusha
sub
sarb
enter
mov
daa
fldt
xor
sbb
int
xchg
push
je
jge
add
add
dec
icebp
pop
cmp
enter
std
gs
add
xor
lock
lock
cmp
xor
mov
sub
insl
cmpsb
lcall
add
stos
aad
inc
xlat
inc
or
pop
mov
mov
in
xor
repnz
jns
xchg
jbe
loope
scas
inc
xor
inc
out
dec
inc
add
sub
fisubs
jmp
test
adc
sub
cltd
ljmp
rorl
mov
mov
pop
sbb
mov
and
mov
xor
je
in
stos
dec
int
inc
add
popa
inc
cmc
and
es
jge
out
xchg
hlt
js
jns,pn
mov
or
or
push
mov
repz
mov
jae
sub
ljmp
mov
adcb
nop
pop
adc
sub
push
int3
outsb
pusha
stos
inc
cmp
andb
das
jp
sub
fisubrs
jnp
adc
addr16
test
cmpsl
js
cld
in
pushf
loope
aam
jmp
shll
or
hlt
jmp
fiadds
mov
or
mov
lea
pop
loope
mov
xchg
inc
sub
mov
and
loope
lahf
mov
stc
bound
inc
testb
fnstenv
xchg
arpl
mov
cmp
sarl
pop
ds
es
add
cmp
roll
das
push
mov
add
js
push
shl
jo
fdivrl
xchg
push
mov
cmpsl
ret
rcrl
pusha
data16
mov
mov
jne
pop
aam
test
dec
int
pop
mov
xchg
nop
sbb
arpl
shll
outsl
fwait
call
pop
loope
fadds
popf
cmp
insb
jecxz
and
sti
rcrb
add
std
sub
loope
adc
sbb
das
jb
mov
sbb
sub
aad
lret
cmp
fisttpll
pop
and
daa
xchg
or
pop
imul
push
push
cmp
cmpsb
mov
movsl
or
aas
es
shll
xchg
xor
pop
xchg
sti
jecxz
ret
cmp
test
inc
inc
repnz
addr16
sub
scas
je
push
stc
adc
xor
dec
icebp
mov
movsb
mov
mov
cmp
lods
movsl
xchg
pop
mov
icebp
cmp
out
popa
test
jb
cmpsb
or
das
icebp
adc
insb
xor
dec
mov
fiaddl
insl
lods
jns
add
push
lods
mov
das
fmull
or
dec
fldt
ljmp
sti
jo
inc
inc
push
outsb
stc
in
ljmp
pop
subl
jo
push
int3
xor
iret
jbe
or
dec
and
pop
inc
test
cmpsl
dec
xchg
xchg
mov
pop
daa
js
mov
ret
in
xor
and
sbb
push
decb
out
gs
add
inc
je
pop
insb
cmc
xor
inc
push
shll
pop
mov
inc
and
ja
jns
cmp
pop
push
xlat
outsl
test
jg
jmp
add
dec
add
inc
sub
fisubl
outsl
adc
in
adc
sbb
xor
xor
dec
insb
sbb
adc
xor
inc
jno
sub
mov
jnp
jns
fs
aas
pusha
fwait
xor
mov
pop
dec
fdivrl
inc
dec
insb
cli
adc
push
jo
das
push
xchg
movsl
and
mov
testb
mov
fnsave
aad
pop
fdivr
sub
dec
mov
in
cmp
sbb
adc
repz
ret
mov
dec
out
add
fmull
sbb
xor
dec
repz
and
or
dec
and
or
es
pop
dec
loopne
cs
xlat
lods
fisubrs
rcl
icebp
or
jle
clc
int
mov
mov
fs
out
jns
insl
cmp
int3
loopne
cwtl
rol
orb
std
or
xor
push
dec
mov
or
mov
xor
xor
mov
aaa
fnsave
cli
inc
jg
pop
arpl
xor
push
xchg
dec
xor
sbb
outsl
xchg
movsb
pop
scas
cwtl
dec
adc
stc
mov
or
mov
bound
movsl
and
les
nop
clc
fs
shrl
mov
imul
mov
sub
shl
loopne
mov
mov
or
mov
hlt
push
rclb
push
sub
icebp
pushf
lock
pop
into
or
sbb
cld
cmc
daa
stc
pop
xchg
outsl
out
int
dec
arpl
pop
test
mov
jbe
push
mov
and
hlt
mov
imul
add
testl
aad
pop
and
add
pop
orb
sbb
push
jne
lret
imul
mov
and
push
das
jg
daa
xor
enter
loop
cwtl
add
xor
into
es
and
loope
mov
or
idivl
dec
loope
or
inc
sub
sbb
mov
shr
lock
ja
pop
jle
cmp
sub
cmp
cld
lea
scas
ss
test
mov
push
xchg
xchg
jb
sub
adc
xchg
sbb
test
adc
add
shll
mov
popf
int
insl
jmp
xor
sbb
enter
sbb
pop
movsl
sti
or
xor
data16
push
dec
int
push
or
testl
gs
or
xor
sbb
inc
fiadds
dec
adc
das
lods
scas
sbb
xchg
imul
inc
pushf
add
jle
sbb
jle
push
cmp
lahf
cs
mov
mov
mov
les
rorl
add
lret
pop
xchg
adcl
mov
jae
lock
mov
in
mov
idivl
dec
dec
sarb
inc
lea
sbb
scas
jae
or
scas
pop
and
mov
mov
xchg
negb
pop
jp
cmc
jle
shlb
cld
lcall
cmp
out
sbb
sbb
mov
popf
cld
adc
jbe
sub
add
ret
xchg
out
scas
cs
fwait
insl
inc
and
stos
fcoml
mov
out
inc
jmp
std
pop
lea
fldcw
or
enter
push
js
loope
and
call
insl
stos
push
xchg
mov
and
mov
repz
jle
add
mov
mov
ffreep
fwait
mov
xchg
inc
fwait
inc
mov
inc
jmp
mov
clc
out
ss
fstpl
xchg
add
xor
shlb
dec
adc
sbb
lret
pop
adc
insb
stos
lds
add
sahf
sbb
cmp
clc
popf
push
mov
push
lods
out
out
push
repnz
sti
inc
insl
add
clc
mov
bound
or
pop
test
icebp
out
les
or
jle
mov
pop
dec
das
mov
push
aaa
jle
push
cmp
sub
push
fnop
mov
mov
jno
inc
mov
shll
lods
pop
adc
or
jg
mov
scas
test
imul
adc
jecxz
jne
pushf
addr16
cmp
pushf
mov
rcrl
aad
mov
sarl
out
jns
cmp
dec
cmpb
addr16
mov
js
insl
lahf
sub
int
push
adc
fimull
fiaddl
mov
pop
cmp
pusha
dec
mov
jae
or
call
cmpsb
mov
fwait
jmp
into
das
lret
ficomps
call
jo
lret
lods
or
cmc
sbb
popf
mov
lds
pop
inc
or
das
inc
sarl
movsl
clc
daa
in
mov
aaa
mov
dec
lret
ds
inc
mov
cmpsb
pusha
mov
jno
xlat
daa
test
sub
call
adc
adc
fidivrs
js
inc
mov
jnp
inc
xchg
adc
and
lcall
xor
push
cmp
jns
push
cltd
pop
mov
insl
mov
insb
insl
mov
scas
jmp
sub
xor
cmpb
pop
scas
add
lahf
cwtl
xlat
cmpsl
xor
loope
pop
dec
sahf
out
xor
or
cmp
movsl
lea
inc
pop
and
lock
push
loopne
mov
lock
xchg
push
mov
adc
int
xchg
pop
push
into
pop
mov
dec
lcall
sahf
shrl
push
mov
aaa
lcall
inc
and
sti
lcall
fbstp
mov
push
or
jnp
pusha
icebp
leave
lcall
out
popf
scas
imul
jb
dec
or
xor
fldt
daa
xor
mov
xchg
or
mov
adc
stos
mov
bnd
lret
xchg
jge
dec
and
jno
cmpsl
inc
and
inc
cmp
or
mov
and
cltd
lds
jns
loope
std
xlat
fprem
mov
add
xchg
cmovno
bound
hlt
lcall
mov
push
adc
inc
mov
mov
insb
filds
ret
hlt
mov
hlt
sarl
sbb
lea
insb
inc
gs
ret
cmp
mov
jo
push
dec
cmc
mov
pop
mov
or
popf
xor
cmp
adc
into
repz
sbb
push
popf
jbe
insb
cmpsl
sarb
push
dec
xor
sub
shlb
jmp
leave
xchg
lods
das
cmp
or
cmp
sub
dec
and
cmp
cmpsl
ljmp
jns
jle
jo
scas
daa
test
fs
and
push
loop
outsb
test
in
pop
filds
push
testl
pop
fbstp
cltd
mov
and
aaa
pop
or
mov
xor
jo
or
leave
cmpsb
ss
test
xor
shl
mov
push
jp
mov
xchg
fildl
dec
cmp
push
ds
pop
outsl
sbb
push
loope
out
stos
imul
fdiv
rcl
repz
mov
sti
lock
mov
imul
mov
sbb
add
cs
mov
push
add
das
scas
lds
movsl
sti
ficoml
xchg
adc
cmpsb
xchg
xor
sbb
lret
inc
fldt
ftst
lock
les
pop
mov
push
out
int3
popf
enter
push
sub
inc
sbb
cmpsl
pop
sbb
mov
inc
xchg
mov
test
inc
xchg
je
shrl
lcall
inc
and
mov
mov
sbb
in
dec
icebp
sbb
nop
sbb
int
addr16
mov
cli
mov
xor
sbb
inc
lcall
xor
test
dec
cmpsl
ret
xchg
cmpsl
adc
int3
loope
pushf
icebp
sub
inc
inc
fs
push
add
paddd
sbbb
scas
mov
push
jo
mov
daa
loope
add
xor
jno
mov
out
dec
sbb
adc
xlat
push
xchg
ljmp
gs
and
aas
std
pushf
aad
add
cmp
adc
imul
out
dec
sub
cld
cmp
outsl
movaps
test
dec
jb
push
les
in
mov
fdivr
ja
mov
imul
adc
xchg
pushf
call
test
test
mov
mov
mov
ljmp
jno
fnstcw
in
xor
xor
push
dec
lock
dec
cmpsb
lahf
arpl
mov
loopne
loopne
mov
push
in
jmp
mov
lock
dec
fimull
lcall
pop
or
add
adc
mov
jns
sub
jne
add
hlt
loop
and
xor
cmp
adc
xlat
sub
leave
movsb
dec
ja
mov
shrl
mov
add
push
cmp
jno
mov
imul
inc
addr16
mov
mov
sbb
lcall
mov
rcrb
decb
mov
cmpsl
and
sub
sbb
daa
leave
ret
popa
ffreep
sbb
je
pop
ja
cs
cld
into
int3
add
add
cmp
test
cmp
pop
pop
pop
xor
sub
and
fdivrs
out
jne
sub
inc
movsl
stc
pop
pop
mov
out
insb
or
out
sub
loope
lahf
sbb
or
inc
iret
bound
add
push
or
xor
push
add
test
adc
or
outsb
lret
and
ss
or
xchg
push
sub
xchg
push
aam
pop
sub
test
push
gs
add
mov
mull
repz
dec
cmpsl
ss
mov
pop
xchg
mov
xchg
sub
mov
popl
adc
rcrl
jp
mov
add
jge
int3
add
loopne,pn
je
push
sub
rcr
js
in
mov
icebp
add
xlat
add
aam
mov
xchg
insb
jecxz
imul
jnp
insb
sti
jno
pop
mov
ljmp
arpl
sub
inc
ds
in
pushl
in
dec
dec
mov
push
push
adc
test
int3
test
mov
xchg
in
shll
adc
movsl
pop
iret
out
push
insl
push
or
sbb
xor
ljmp
xchg
scas
scas
mov
out
neg
mov
inc
xchg
ds
cmpsl
or
dec
mov
dec
mov
pusha
mov
pusha
test
mov
cmp
xchg
and
jnp
xchg
mov
and
or
test
adcb
mov
mov
insl
fwait
test
inc
mov
into
cli
adc
cmp
mov
popf
or
fsubrs
sbb
lock
mov
test
xor
insl
repz
iret
dec
jnp
data16
lahf
ljmp
xor
loopne
sub
xchg
test
lret
inc
jnp
sti
insb
xor
dec
adc
mov
mull
inc
push
xor
dec
sub
inc
mov
fistpl
shll
lret
and
adc
out
divl
arpl
cmp
push
les
xchg
enter
fistps
subl
out
movsb
aaa
popf
aaa
lret
mulb
shlb
sub
adc
sti
cmpsb
jecxz
push
mov
in
insl
enter
xor
rcl
repz
fwait
push
push
mov
or
push
in
nop
cld
jmp
psubq
sub
hlt
mov
jle
in
out
ss
inc
push
inc
xor
mov
dec
xchg
push
cmp
push
sub
cmpsb
pop
push
orl
mov
xchg
stos
or
testb
xor
movsl
xchg
mov
lods
jle
xor
xchg
jae
push
aas
cmp
push
pop
add
sub
mov
lock
inc
sub
push
add
out
mov
cmp
aas
mov
push
pop
cli
stos
lret
xchg
dec
inc
test
inc
add
iret
addr16
xor
jle
jp
dec
insb
and
sbb
add
mov
nop
aaa
sub
sub
mov
pop
pop
lret
lds
cmpsb
loop
sub
hlt
mov
cmpb
lret
sbb
and
push
lock
sub
push
mov
cltd
pop
add
movsl
pop
add
insl
in
adc
cmp
push
mov
rolb
enter
pop
repnz
xchg
jbe
mov
stos
fisttpll
into
iret
out
fwait
ret
scas
pop
repnz
neg
jns
add
add
int3
fmuls
lea
enter
jmp
daa
inc
aad
inc
mov
adc
shrl
cltd
mov
sub
in
pop
popf
mov
rcrl
dec
jns
fimuls
jns
sahf
mov
jo
fcomi
aad
add
lds
xchg
out
cmp
mov
adc
lahf
popa
inc
dec
lahf
adc
and
daa
cld
or
push
add
in
outsl
movsb
and
cmp
lret
mov
pop
jno
stos
ret
fsubrl
xor
lea
out
pop
imul
pusha
inc
push
cmp
aaa
adc
dec
cmp
lret
mov
addr16
ss
lods
xor
popf
jne
mov
jmp
andl
inc
fwait
hlt
mov
mov
add
cltd
rcl
push
bound
ljmp
jp
shll
int
popa
out
addl
stos
test
orb
mov
aam
outsl
and
xor
mov
cltd
dec
sub
gs
pop
ds
in
testl
lcall
sub
xchg
mov
ds
mov
cs
fwait
xchg
bound
xor
sbb
xchg
js
sbb
rorl
popa
push
fucom
lock
testb
mov
fucomp
inc
pop
fs
int3
mov
repz
mov
int
dec
push
mov
scas
and
add
movsb
xor
push
adc
fimuls
mov
shr
jg
push
sub
xchg
ja
out
leave
aaa
and
sbb
es
loop
fcoms
mov
xor
and
ja
inc
sub
pop
xor
popa
pusha
jns
fisttps
adc
inc
mov
xchg
dec
mov
cltd
jle
into
or
cmp
jbe
imul
scas
xor
push
adc
shlb
movsl
jns
shll
dec
insb
lret
xchg
xchg
ss
mov
repz
jge
lcall
fstpl
jecxz
mov
xchg
jmp
repnz
or
add
lock
outsb
or
repnz
loopne
in
push
cmpsb
mov
sti
or
push
test
xchg
cmc
pop
mov
mov
mov
push
fcmovu
push
jb
sub
xor
aam
rol
inc
cmpsb
adc
mov
push
test
jo
loope
gs
insl
jae
xor
mov
imul
ficompl
mov
shrl
mov
pop
out
clc
sti
sub
and
pop
cwtl
jo
popf
shll
or
mov
jbe
xchg
por
scas
push
and
insb
jne
lea
loope
mov
es
iret
inc
in
or
shrb
mov
xchg
dec
shrb
xchg
inc
stos
or
add
sub
mov
push
fnsave
clc
loopne
shlb
sub
jnp
enter
repz
loop
in
ss
lret
pop
lahf
mov
mov
or
fs
cmp
ffree
scas
sub
jb
jno
ljmp
test
fdivrs
mov
inc
jae
outsb
xchg
in
dec
jae
xor
les
repnz
and
lret
jne
adcb
cmovae
add
std
sbb
mov
test
cmc
pop
xchg
add
and
push
aam
lea
fidivrl
pop
ret
add
inc
and
pop
push
jecxz
fiaddl
movsl
fucom
dec
pop
test
ss
aad
or
lret
hlt
testb
sbb
pop
xor
je
sub
and
shll
or
mov
sub
mov
and
orb
mov
dec
lcall
mov
testb
xor
imul
inc
xchg
sub
or
add
mov
enter
cwtl
scas
pop
cmp
mov
pop
shlb
pop
adcl
mov
imul
cmp
shrb
lock
mov
fsubrp
aas
mov
in
and
std
gs
lock
inc
addr16
ret
int
or
dec
out
std
out
lock
sbb
cmp
add
cmc
push
daa
int
imul
jmp
cmpb
inc
cmp
xor
or
mov
mov
stos
std
add
push
push
adc
or
mov
sub
dec
fidivl
shll
mov
loop
xor
xchg
jge
int3
dec
and
mov
push
mov
cld
or
stc
roll
test
pusha
mov
outsb
outsl
pop
fadds
leave
int3
push
sub
inc
or
mov
mov
shr
stos
sahf
addr16
dec
dec
jecxz
xlat
das
or
ror
in
bound
add
xchg
adcb
or
fimuls
ljmp
add
add
mov
mov
sbb
in
mov
inc
lret
jnp
shrb
sub
in
jge
push
inc
dec
pusha
out
adc
addr16
cld
adc
xor
jno
mov
and
jnp
int
fucomi
add
stos
out
mov
adc
mov
sub
mov
dec
aad
cmp
mov
xor
decl
es
or
insb
ret
add
mov
lods
cmp
xchg
and
into
lahf
pop
cltd
and
mov
sbb
jae
mov
dec
fsubrl
fmull
push
out
scas
lahf
out
shl
test
mov
aaa
xor
popf
push
and
insl
mov
sbb
push
xstore-rng
cmpsl
shl
lock
int
xchg
stc
xor
loopne
cmp
call
xchg
subb
testb
sahf
cmp
jno
fstpl
jle
mov
mov
add
xor
pop
aaa
pop
adc
pop
inc
ret
aas
or
xchg
lea
push
scas
loop
arpl
les
add
ds
adc
pop
inc
insl
xorb
ss
loope
movsl
stos
fcomp
pushf
movsb
ret
lret
cld
mov
and
jl
or
jb
js
leave
cmp
fcmovb
and
adc
adc
test
mov
push
push
sbb
shl
idivb
jle
sub
loopne
movsl
ror
and
xorb
pop
add
xor
scas
lahf
scas
sbb
sbb
xor
out
and
inc
lcall
lea
sub
iret
stc
test
cmpsb
enter
jecxz
andl
mov
lcall
mov
jns
in
daa
data16
lods
mov
fstl
std
push
ljmp
ja
ljmp
cmp
xor
hlt
inc
cmp
push
inc
movsb
xchg
add
mov
dec
pusha
push
mov
shrb
mov
cmc
fistpl
leave
sub
sahf
lods
mov
shl
cwtl
lea
mov
xlat
inc
loop
test
xor
jne
lods
pop
jb
les
mov
pusha
es
mov
subb
sbb
les
cmp
repnz
jmp
rcrl
movsl
into
aad
or
icebp
push
imul
cmc
jp
test
lock
imul
insl
xchg
mov
mov
icebp
sub
mov
nop
mov
std
lahf
mov
sub
test
test
add
lea
pop
in
sbb
das
or
jecxz
mov
mov
jns
mov
xor
out
adc
add
fldl
inc
shll
insl
and
maxps
rclb
push
out
cltd
sub
cmc
popf
test
ss
in
cmpsb
xchg
and
inc
cmp
or
xor
iret
lea
jmp
or
hlt
pop
sbb
into
adc
incl
pusha
out
xchg
adcb
es
outsl
fdiv
or
push
enter
sub
int3
nop
pusha
leave
and
fisubs
aaa
lds
gs
xor
push
jo
jp
inc
xor
lea
addr16
lret
jge
cmpl
jo
cmp
aaa
mov
leave
stc
les
adcl
outsl
mov
es
js
inc
push
push
and
and
adc
ljmp
cmove
xchg
test
jo,pn
or
jb
and
mov
mov
aaa
mov
lcall
test
dec
push
fbld
ds
lret
wbinvd
int
cmpsl
lods
stos
fisubl
push
push
out
es
mov
xchg
mov
pop
arpl
jp
push
repnz
mov
insl
fists
and
inc
and
add
test
fidivs
and
cmpsb
mov
stos
pusha
dec
sub
fistpll
idivl
sar
lods
mov
adc
pop
jne
icebp
jg
cli
push
cmp
scas
repnz
mov
lds
js
inc
jl
imul
movsb
xor
mov
jbe
fldl2e
mov
in
sti
cwtl
lea
pop
lods
mov
add
mov
loopne
jp
fwait
or
mov
ffree
lahf
shll
sbb
xor
xchg
repnz
cmp
out
int
shrl
pop
adc
fcmovb
ret
pop
mov
leave
add
xor
js
ljmp
or
cld
push
rep
push
mov
repz
mov
ja
pop
push
insl
fildl
pop
pop
popa
xchg
cmp
inc
inc
outsb
and
popa
push
shrl
sahf
sub
insb
mov
pop
inc
stos
mov
lods
int
cmp
xlat
push
dec
sub
mov
movsb
xchg
ror
mov
imul
shrl
loopne
sahf
int3
and
push
enter
and
scas
cmp
jge
or
cwtl
add
pop
aas
dec
decb
comiss
xor
dec
mov
insb
ret
subb
outsl
pop
std
xchg
jbe
lock
call
or
fldenv
jb
sub
cwtl
mov
rclb
push
pop
jl
pop
push
jge
pop
stos
push
push
hlt
aam
sub
cmpsb
and
adc
data16
add
outsl
push
rcrb
jle
mov
cmp
sub
or
ret
mov
xchg
int
xchg
adcb
jae
dec
sub
sti
dec
push
test
mov
out
andl
and
or
in
int3
js
fdiv
pop
loopne
add
mov
fisubrl
cmpsl
rcl
clc
rorb
push
cmp
pop
in
push
insb
shr
or
lret
mov
pop
adc
out
aaa
or
and
sbb
cmp
or
ja
push
incb
xchg
into
push
cmp
pop
mov
jbe
push
mov
rcrl
mov
cmp
mov
aad
jmp
xchg
mov
ret
sub
dec
jge,pt
rorb
divb
mov
sbb
out
fs
les
mov
pop
mov
inc
es
mov
incb
fs
nop
clc
mull
dec
xor
inc
enter
call
lcall
test
ss
cld
dec
cmpsb
fisubrs
mov
inc
push
rorb
dec
xchg
or
out
cmp
mov
pop
cmp
sbb
add
jne
and
mov
add
mov
and
ljmp
subb
sahf
sub
int3
mov
stc
adc
mov
rep
pop
jl
push
cmp
ret
testb
and
hlt
lret
cmpsb
popf
lods
adc
mov
mov
xchg
pop
inc
inc
dec
jne
sbbl
ds
js
xchg
pusha
push
scas
jo
call
cmp
ljmp
jle
addr16
inc
xchg
jge
std
popa
flds
cmpl
cli
sub
iret
sub
arpl
outsl
mov
ret
add
mov
insl
mov
std
lahf
mov
jle
jmp
xor
xor
popf
mov
jno
xchg
div
xor
ret
sub
sti
or
inc
mov
arpl
call
shrl
sbb
dec
fimull
jl,pn
or
xor
mov
dec
push
pop
sbb
movsl
cmp
lcall
lea
xchg
fistpll
or
ret
mov
cmp
push
xchg
aas
clc
add
stos
xchg
sbb
dec
xor
adc
into
and
and
fcmovnbe
lea
mov
pop
adc
jne
fmull
jge
sub
xor
enter
not
pop
outsb
loope
in
push
inc
and
cwtl
arpl
pop
rolb
adc
pop
std
dec
lods
je
jmp
xor
fimull
shll
out
arpl
sub
push
mov
jns
lret
mov
jmp
jecxz
stos
or
lahf
lods
and
mov
push
sbb
cmpsb
inc
pop
mov
out
mov
xchg
mov
xor
outsb
aad
test
sub
cmp
je
movd
dec
mov
mov
in
xor
loop
add
imul
ret
repnz
push
into
cld
pop
ficompl
andb
ds
mov
imul
xor
mov
scas
in
idivl
mov
inc
push
in
sbb
xchg
sti
inc
pop
das
rcrl
push
sub
shll
push
ljmp
cwtl
pop
test
mov
outsb
fwait
inc
adc
cmp
inc
arpl
or
cltd
sub
push
xchg
cmp
xchg
dec
shlb
mov
aam
ds
sti
dec
cltd
inc
push
fcmovnu
dec
cs
adc
mov
sbb
cld
cmp
es
mov
dec
rolb
cmp
sbb
sub
shrb
mov
mov
mov
and
mov
sub
sbb
loope
aam
rcll
dec
inc
popf
inc
mov
pop
pop
ret
inc
scas
dec
add
fildl
enter
add
std
cmpsb
dec
test
js
mov
cmp
std
jnp
mov
mov
xlat
test
or
bnd
xchg
sub
insb
and
rcrl
ljmp
xchg
add
xor
icebp
scas
inc
add
cmovnp
sarl
aas
pop
and
sub
imul
or
out
jg
shll
dec
cmp
fmulp
out
fwait
xor
jle
lock
aaa
iret
xchg
push
jnp
sub
lods
add
cmpsb
out
jo
sbbl
test
push
loope
xor
adc
fmuls
mov
rolb
outsb
mov
addl
loop
addr16
inc
aad
cltd
idivl
scas
cmp
fldt
gs
cmp
outsl
sub
mov
mov
outsl
in
or
lds
movsb
xchg
aaa
loopne
pop
mov
dec
xchg
loope
mov
ja
and
xchg
jbe
jno
std
orb
mov
lahf
adc
dec
lock
or
xchg
inc
xor
push
cmp
in
xchg
into
sub
outsb
inc
mov
dec
ficoms
cmp
pushl
add
icebp
jmp
xchg
jmp
cmc
mov
mov
out
or
shrb
push
and
adc
cld
in
call
push
or
rorb
mov
mov
insb
int
sbb
int3
in
enter
pushl
mov
pusha
pop
xchg
into
lods
notb
mov
mov
cmp
das
jmp
push
push
cs
xchg
jcxz
adc
or
sbb
nop
outsl
addb
mov
daa
xchg
jae
or
or
ds
cmc
jno
cmp
pop
jne
pop
xchg
sbb
js
fdivrs
scas
and
add
ret
repz
add
dec
das
jo
sub
sub
mov
inc
inc
mov
sub
andb
mov
sbb
call
push
xor
adc
sbb
xor
cmc
mov
sub
cmp
sub
mov
mov
push
and
iret
addb
add
out
stc
inc
pop
mov
ja
adc
inc
rorl
inc
fstpt
in
push
out
pusha
mov
sub
xor
insl
inc
sbb
idivl
xor
cwtl
fbstp
push
scas
sbbl
inc
sbb
add
pusha
orl
subl
xor
stos
clc
out
sti
in
scas
in
xchg
loopne
enter
outsl
mov
jnp
imul
repz
jae
mov
cmp
lret
jecxz
aam
mov
xchg
and
rorl
push
clc
cmp
jmp
mov
sbb
lret
movsl
lods
mov
adc
mov
loopne
xor
xor
mov
out
test
pop
and
mov
pop
adcb
push
sbb
rol
repz
mov
in
cmc
cltd
fistpll
or
and
xchg
shr
nop
into
imul
popa
ret
xchg
call
es
cmp
push
mov
js
iret
sub
insb
and
fucomi
mov
enter
add
dec
mov
sub
call
std
mov
cmp
ljmp
add
pop
mov
xor
lret
sahf
pop
sarb
mov
loop
jl
jle
sbb
hlt
jg
insb
mov
lret
sbb
lret
in
jmp
jg
push
flds
je
cmp
out
cmp
lret
jg
shlb
pop
add
arpl
pop
or
pop
cmp
xor
jp
aam
cmp
aad
cwtl
test
negl
push
push
cmpsb
xor
idivb
lahf
ja
mov
jo
jecxz
xor
mov
arpl
out
dec
or
mov
sbb
push
fisubs
sub
dec
fistps
adc
xchg
comiss
add
mov
pop
xlat
or
add
aam
fs
pop
inc
aas
mov
fcmove
mov
and
pop
xor
aas
sarb
imull
je
add
xchg
jmp
cmp
mov
aad
dec
and
iret
cmp
cmp
insl
ds
sbb
sub
dec
rcrl
inc
mov
dec
push
out
std
movsb
aam
lea
insb
pop
jns
mov
outsb
shrl
std
cwtl
das
int3
ds
push
loopne
dec
js
movsb
pushf
lock
aaa
lret
pop
lret
push
push
mov
jne
int3
lock
enter
hlt
or
and
shrl
sub
pop
cs
add
mov
int3
adc
scas
xor
dec
int3
and
jbe
mov
cli
sub
mov
xchg
outsb
jo
iret
xorl
xor
addr16
or
movsb
cmp
sahf
test
repnz
inc
shl
fisubrl
adc
jae
xor
pop
and
pop
or
lea
jno
mov
ja
jecxz
test
cwtl
testl
fildl
add
adc
sbb
mov
int3
adc
lret
scas
gs
inc
stos
pop
cmp
inc
data16
fisttpll
push
lcall
push
cmpsl
mov
aaa
push
adc
pop
cmp
fisubl
enter
jge
or
xor
adc
outsl
test
push
outsl
inc
mov
push
es
lahf
das
loopne
fisubrs
dec
insl
mov
in
xor
cmp
mov
push
test
pop
fwait
aaa
iret
movswl
in
int
rcr
into
and
jg
or
iret
xchg
push
or
adc
ljmp
mov
fnstenv
out
addb
repz
fnstsw
aaa
lcall
dec
lcall
and
sub
loop
filds
xor
fwait
scas
arpl
mov
ret
adc
std
fstpt
push
insb
add
mov
xchg
xchg
pop
pop
mov
inc
sbb
fucomi
and
ret
or
je
adc
cmpb
je
test
and
mov
ret
and
sub
mov
rolb
fisubrs
fidivrs
leave
stc
jecxz
pop
push
lahf
pop
sbb
pop
jns
bound
fnstenv
sub
xchg
push
ret
xor
adc
xor
sub
or
insl
gs
push
je
dec
out
inc
or
dec
dec
int3
mov
adc
popf
mov
add
pop
cmp
pop
adc
sbb
pop
aas
jbe
cmpsb
add
add
dec
call
das
sbb
fcompl
add
pop
add
mov
icebp
fisubs
cs
pop
pop
frstor
push
lret
and
ficompl
imul
inc
daa
inc
push
jl
mov
lock
jl
mov
fsubs
lret
sub
xor
add
pop
mov
add
cmp
cld
ss
loop
es
fs
insb
mov
subb
test
sub
push
or
jo
pushf
adc
out
jnp
jnp
and
lds
cmpsb
pushf
xor
sbb
ja
mov
mov
call
mov
add
out
mov
xor
mov
cmp
sahf
les
pop
lret
lods
lock
ret
mov
add
xor
xchg
inc
cmp
stc
push
add
cmpl
jns
adc
arpl
movsb
inc
dec
lea
cmp
push
pop
jno
xchg
xchg
in
sbb
cmpb
popa
test
push
xlat
mov
data16
sub
aam
lock
jb
int3
dec
es
push
orl
dec
jge
jl
movntq
pushf
sbb
cmp
lahf
cld
inc
js
mov
sub
xchg
repnz
dec
sub
xchg
icebp
imul
inc
xchg
adc
pop
inc
fldenv
cmp
or
push
dec
fucom
lods
push
push
outsl
out
pop
sti
cmpsb
es
jnp
subl
adc
mov
cmp
mov
cld
xchg
sub
xor
repz
lcall
imul
test
jb
nop
jmp
fwait
jmp
jo
loop
xor
mov
sub
cmp
xlat
inc
adc
js
xchg
inc
sahf
jge
jnp
sub
or
loopne
xlat
outsb
jb
mov
inc
add
divl
pop
add
mov
and
lahf
push
pop
mov
sub
test
add
inc
pop
aam
inc
out
sub
lcall
mov
pusha
popa
lret
jl
dec
int3
or
loop
push
ds
lcall
add
inc
lret
and
rcrb
lahf
in
fxch
leave
insl
movsl
sub
je
mov
add
lret
add
enter
cs
mov
xchg
aaa
out
push
mov
and
out
pop
movsb
mov
jmp
mov
push
cwtl
mov
xchg
and
push
pop
pop
movl
out
pop
mov
pop
adc
das
ficoml
push
and
push
dec
cmp
scas
adc
in
dec
and
jmp
shl
lcall
mov
sub
mov
dec
shlb
stos
arpl
lea
and
out
adc
and
cmpsl
test
mov
ja
icebp
stos
call
jne
add
into
sub
sub
bound
add
sti
cmp
dec
lret
ret
inc
sub
repz
push
sub
xchg
sub
je
mov
cwtl
fbstp
push
or
cs
push
dec
mov
inc
pop
sub
jge
sbb
mov
jmp
std
cmp
mov
popf
add
mov
out
leave
pop
stos
mov
sub
packuswb
sbb
mov
in
jmp
adc
into
mov
les
mov
push
xchg
fsubl
and
fldcw
xor
dec
aas
pop
test
fbld
xchg
stos
pop
and
dec
sbb
cmpsb
out
adc
ja
dec
das
test
mov
fiaddl
cli
out
fidivrs
stos
cmp
or
jb
orb
lahf
adc
xchg
js
mov
push
xor
imul
imul
sbb
jl
and
add
push
icebp
ss
popa
mov
movsb
lods
cmpsl
add
xor
mov
add
pop
push
mov
or
rcrb
adc
sub
cmp
stos
sub
loopne
inc
lds
sbb
pop
sbb
and
loope
ss
aas
add
sub
xor
cmp
xchg
dec
sahf
insl
lock
cmp
subl
ds
inc
jmp
and
push
in
push
adc
push
mov
je
in
or
aad
push
sub
xor
ret
jne
dec
add
and
jp
sbb
out
or
sbb
iret
dec
cli
inc
fs
ljmp
adc
push
cwtl
mov
lea
xchg
mov
mov
dec
movsb
and
dec
imul
and
fs
lret
sbb
cwtl
and
jle
inc
pop
outsb
movsb
das
jae
jb
ficompl
pushf
in
fisubrl
cwtl
mov
lods
push
mov
mov
sub
adc
fsin
out
xor
nop
repnz
and
jg
inc
sub
add
ds
loopne
mov
fnclex
push
mov
ja
pop
jo
es
into
fstps
roll
fidivrl
sub
aad
mov
xor
and
shr
sbb
pop
sahf
dec
ret
jb
rcr
ss
xor
cwtl
pop
std
pop
cltd
sbb
add
int
mov
test
sbb
push
out
mov
sub
icebp
icebp
mov
popa
push
or
adc
cs
sbb
mov
mov
imul
notl
push
ds
jnp
fcomps
out
imul
sub
jnp
scas
push
add
or
cld
imul
add
cmp
enter
into
xorb
lahf
jecxz
mov
adc
repz
repz
adc
fisttpl
xor
aam
and
inc
cmc
js
ret
pop
shll
mov
sbb
inc
pusha
rolb
add
or
xchg
fbld
jecxz
or
inc
xor
aam
jbe
lock
test
xor
mov
fadd
in
or
sbb
jp
mov
cmp
pop
icebp
xchg
adc
push
cli
insb
dec
imul
movsl
lret
leavew
jle
pop
lcall
lret
cmp
in
add
testb
adc
fidivs
mov
addr16
sbb
js
or
mov
mov
testb
and
sbb
pop
mov
int
scas
pusha
ss
add
mov
xchg
je
pushl
mov
push
outsl
pop
int3
shlb
lds
fwait
imul
and
adc
xchg
data16
cld
movsb
pop
mov
pop
mov
ror
dec
or
and
aam
pop
das
adc
mov
pop
test
sub
mov
out
cmc
lret
repnz
pop
push
mov
cmpsb
mov
lods
repz
mov
jo
fs
mulb
xchg
jnp
mov
add
dec
jecxz
gs
hlt
adc
popa
daa
loope
es
dec
xor
sbb
je
lahf
cmpsb
in
inc
jno
ret
pop
cwtl
jne
mov
scas
mov
mov
mov
aas
cmp
mov
pop
mov
lods
lods
fstl
stos
rorl
popa
pop
sbb
insl
sub
js
iret
rclb
ja
xchg
dec
and
test
pop
and
pop
xchg
dec
hlt
jg
xchg
in
nop
mov
mov
sbb
or
or
test
cli
les
hlt
mov
mov
daa
lcall
repnz
mov
mov
mov
into
and
xor
idivl
xchg
shl
mov
push
pop
scas
jnp
fnstcw
add
bound
dec
jl
xchg
xlat
in
leave
sub
stos
or
sbb
repnz
jnp
add
sbb
cmpsb
mov
icebp
sub
mov
inc
mov
fwait
inc
add
add
push
scas
or
or
mov
int
pop
sub
sbbb
inc
scas
cmp
sub
xlat
cltd
lahf
pusha
clc
push
jp
lea
xchg
or
and
cmpsb
mov
sbb
gs
jge
push
data16
jae
ficomps
leave
mov
stos
out
jmp
lods
adc
cmpsb
jp
pop
movsl
cs
lcall
jecxz
cmp
sbb
ret
mov
fcoms
test
and
cwtl
fistpl
jp
mov
aad
and
adc
mov
bound
addl
and
in
fcom
add
jbe
push
out
xor
push
inc
and
sbb
ss
jp
jle
popf
pop
jl
ret
jge
fcomps
fsubrl
pop
and
andb
out
mov
mov
mov
mov
lds
dec
mov
imul
out
loop
mov
add
in
sub
xchg
jle
imul
and
call
xchg
mov
push
out
gs
loop
leave
lock
mov
fiaddl
sbb
mov
mov
mov
mov
lock
dec
sub
pop
inc
mov
xorl
aas
iret
adc
arpl
inc
les
loopne
and
and
xchg
jo
in
js
fildl
cmpb
inc
mov
mov
pop
xor
faddl
outsl
add
jnp
xor
cmp
int3
push
cmpsl
inc
arpl
outsl
arpl
aaa
imulb
das
shll
push
les
mov
in
xor
push
aad
adc
or
dec
stos
loope
pop
or
mov
lret
sub
pop
test
lea
pop
addr16
and
mov
test
repnz
in
stos
jnp
pop
push
adc
fisubrl
jg
div
adc
sbb
dec
inc
mov
js
mov
clc
inc
sbb
dec
pusha
pop
mov
push
lahf
push
int3
mov
xor
mov
std
rol
sub
add
xchg
inc
jmp
mov
dec
nop
add
in
push
mov
lods
test
push
sub
jl
push
lods
repz
xchg
testl
and
fsubr
pop
jb
dec
dec
sub
outsl
sub
mov
push
mov
xchg
sub
jg
dec
dec
ret
pop
jb
sahf
divb
fiadds
sub
gs
clc
ja
inc
or
outsb
xor
xchg
popa
and
adc
jnp
rorl
adc
jecxz
push
push
or
rcl
adc
mov
faddl
add
mov
dec
mov
sub
out
arpl
ret
dec
cld
insb
idivb
lock
pop
sahf
mov
dec
cmp
xchg
sub
push
loop
add
and
inc
pop
push
loopne
lret
add
sbb
sbb
mov
repz
cmp
inc
xlat
sarl
movsl
sub
fsubp
xor
push
jp
xor
leave
or
int3
cs
nop
inc
push
inc
sub
repz
pusha
fildl
push
mov
pushf
jg
push
dec
sar
dec
inc
fs
outsb
push
xor
aad
fldenv
sti
gs
sti
ss
lods
xchg
adc
pop
pop
cld
xchg
adc
inc
dec
xor
mov
aas
cmp
adc
jae
pusha
xor
stc
sbb
mov
push
cld
xchg
sahf
add
pop
jns
lea
out
dec
test
jl
xor
rclb
mov
es
das
inc
sbb
out
insb
je
rol
mov
fadds
adc
int
test
sub
jne
pop
into
cmp
imul
jns
add
xchg
sbb
mov
cs
or
sub
ret
mov
xor
mov
js
or
mov
jae
cmpsb
inc
ss
das
outsl
movsl
sarb
ror
xchg
adc
cmp
cs
mov
fnstcw
rorb
data16
xor
mov
xor
sbb
pop
sub
rol
int
aad
sbb
outsl
dec
lods
xor
pop
push
dec
dec
icebp
inc
fidivs
lcall
pop
adc
xchg
out
and
mov
mov
push
dec
fucomip
xchg
mov
xchg
mov
xor
jmp
movsl
clc
cs
xchg
or
mov
shr
xchg
addr16
enter
jle
push
push
bound
sbb
ds
ljmp
xchg
call
mov
nop
test
int3
cmp
dec
mov
pop
adc
sbb
insb
ss
mov
or
xchg
mov
or
xor
aas
pop
test
leave
test
orb
lds
aad
mov
add
mov
fisttpll
inc
test
hlt
push
or
testl
fsubrl
mov
inc
add
loop
pop
jecxz
xchg
jns
inc
and
pop
jnp
lret
mov
lret
fwait
call
nop
aaa
ss
or
imul
lock
xchg
cs
xchg
ja
sbb
sbb
rorl
jg
aaa
xlat
loopne
enter
pop
or
cmp
inc
mov
jno
xchg
fsts
sub
mov
mov
test
push
cwtl
xor
das
pushf
add
scas
push
outsb
dec
stc
cmp
sarb
outsb
or
push
out
jp
mov
call
mov
test
imull
insb
jg
mov
ret
dec
sub
js
repnz
xor
mov
mov
in
dec
bound
or
cmp
lret
mov
notl
mov
push
jle
call
mov
and
push
xchg
mov
dec
ds
push
cld
jbe
lods
sub
pusha
push
xchg
sub
cmp
gs
and
push
or
dec
int3
xor
and
stos
test
rcl
das
lahf
mov
out
sub
out
xor
mov
push
fwait
shll
mov
pop
cmp
jo
movsb
mov
fwait
mov
pop
add
loop
call
push
mov
jp
dec
add
scas
aam
nop
add
sub
push
rcr
rol
out
sub
iret
les
in
mov
mov
call
repnz
and
pop
mov
dec
es
lock
mov
mov
arpl
mov
xor
es
ss
push
dec
clc
inc
es
rolb
inc
push
out
movb
inc
in
cmpb
daa
ds
lods
mov
cmp
xchg
mov
adc
or
cs
repnz
rcrb
dec
aaa
out
dec
adc
arpl
stos
fs
test
fbld
mov
test
cltd
roll
enter
fidivrs
xchg
adc
pop
or
leave
jae
and
mov
cld
and
add
hlt
orl
inc
pop
mov
and
add
out
repz
icebp
lea
imul
cld
mov
imul
and
repz
mov
jo
enter
clc
inc
and
and
push
loopne
push
jmp
push
xchg
xor
cli
ss
sbb
je
fsubrl
xchg
cmp
jle
ds
fxam
bnd
dec
push
fwait
sbb
and
inc
jnp
and
add
inc
jp
add
cs
mov
lret
insb
aam
push
sbb
mov
shl
arpl
scas
outsl
push
jmp
jb
sub
adc
or
cmpsl
or
ds
das
xor
lret
fcoms
mov
mov
push
and
push
or
je
push
pop
push
aad
or
pop
stc
inc
adc
stc
inc
xchg
xchg
pop
adc
cltd
in
jbe
fst
lds
lret
or
lods
insl
xor
mov
testb
loope
ljmp
dec
lods
xlat
mov
mov
cld
sub
es
aas
enter
inc
push
dec
push
cmp
cmp
add
scas
mov
addr16
mov
dec
push
jmp
or
test
arpl
test
push
pop
iret
es
repz
mov
mov
or
pop
fadd
cld
hlt
fldt
jnp
sbb
or
lahf
enter
pop
xchg
jge
dec
push
adc
subb
es
adc
and
pop
insl
sti
pusha
pushf
xchg
sbb
leave
jecxz
jne
std
push
icebp
outsb
js
aaa
nop
mov
es
rorl
outsb
leave
lock
clc
add
and
out
stos
das
int3
add
xor
mov
jp
xchg
movsb
movsb
lea
enter
fisubrs
shll
mov
sarb
mov
mov
dec
loopne
jb
push
imul
push
xor
sbb
push
inc
and
int
shll
sbb
jns
adc
lret
push
movsl
sub
imul
mov
or
cs
movsb
iret
mov
jbe
leave
inc
sub
cmp
jb
scas
sbb
rclb
push
mov
xor
xlat
icebp
out
inc
push
cmp
mov
and
inc
lods
insb
add
cwtl
scas
lds
xchg
out
out
adc
push
cmpsb
stos
mov
adc
pop
and
mov
add
shll
roll
in
cmp
stos
leave
cmp
jne
sti
lcall
pop
mov
repz
jecxz
sub
xchg
add
ficoms
ljmp
daa
sti
mov
mov
jne
mov
lret
mov
inc
movsb
inc
into
inc
icebp
xor
pop
iret
out
mov
shlb
int3
stc
cmpsb
subb
loope
and
mov
xchg
jl
ret
lods
xchg
int3
popa
xchg
mov
mov
pop
mov
into
xchg
andb
mov
push
push
xlat
subl
xchg
in
ficomps
xchg
or
fdivrl
cwtl
adc
js
addr16
repz
bound
lcall
inc
jmp
pop
xchg
mov
pop
ficomps
push
lods
jno
ljmp
push
adc
add
pop
clc
sbb
ficompl
testl
mov
push
xchg
imul
cli
or
jae
push
adc
js
stos
sub
sub
xchg
ja
pop
adc
popf
jo
jb
call
je
mov
mov
fwait
inc
push
jmp
pop
fdivs
sti
popf
jb
mov
out
movsl
push
jmp
lea
into
xor
inc
adc
scas
mov
or
jnp
inc
jns
stos
add
or
in
push
lods
shr
in
sarb
jo
lods
lahf
pushf
das
sub
test
or
loope
inc
das
jnp
sbb
mov
push
mov
adc
mov
inc
sahf
adc
lock
xor
inc
mov
imul
cmp
xor
xchg
and
lock
dec
in
mov
ljmp
mov
pop
pop
add
pop
cmp
xor
jp
add
iret
xchg
add
jb
pop
loope
or
es
and
out
inc
out
adc
data16
adc
cmp
sti
adc
mov
add
cmp
aas
push
mov
xlat
dec
or
jmp
sub
and
fistpl
pusha
sbb
shrl
cmp
fdivrs
mov
sub
dec
sub
xchg
je
shll
test
push
idivl
fwait
clc
xor
cmp
divb
jns
jecxz
mov
insl
sub
imul
enter
pop
jecxz
jno
fwait
xor
xchg
mov
xchg
sbb
mov
out
jge
push
mov
adc
push
pop
mov
das
ljmp
jno
sub
xchg
or
loopne
jae
cmp
cmc
adc
push
push
pop
sbb
enter
into
icebp
cs
push
push
aas
cmp
mov
insl
mov
fimull
jbe
inc
insb
add
shlb
ret
pop
push
mov
cwtl
mov
xor
mov
push
lahf
addl
add
dec
ds
cld
in
clc
push
cmc
push
int
mov
sub
xor
push
dec
in
mov
mov
stos
xlat
cmp
shlb
loope
xchg
and
mov
in
or
imul
arpl
nop
ss
cmp
movsb
push
sbb
xchg
adc
dec
pop
inc
add
scas
ds
adc
sbb
and
cmp
into
add
lods
jae
xchg
call
push
imul
sbb
jmp
mov
nop
or
and
jnp
adc
aas
push
xchg
lret
loope
in
jl
pusha
mov
mov
ret
dec
aaa
das
jmp
scas
add
jg
fnsave
test
cld
lock
dec
mov
hlt
cmp
xor
jecxz
fadd
ljmp
pop
pop
neg
mov
jo
jns
xor
mov
lcall
push
clc
in
sbb
xor
push
aas
push
and
pop
and
mov
fstl
cmp
jbe
pop
xchg
pop
sahf
ja
push
mulb
les
jp
test
pop
push
in
push
xlat
mov
dec
and
cli
and
dec
gs
fwait
or
aam
mov
sarl
xchg
push
outsb
dec
ja
fisubrs
test
mov
dec
jns
int
test
in
ss
mov
test
loop
pushf
sbb
dec
iret
ss
and
jae
test
sbb
sub
push
mov
outsl
repz
pushf
sub
mov
adc
daa
jno
jl
sub
mov
pusha
adc
cmc
push
das
cmp
lahf
loopne
mov
imul
push
test
popa
push
adc
dec
mov
lods
imul
cmp
pop
fisttpl
std
mov
nop
cs
dec
cmp
pop
inc
call
test
sub
pop
scas
cli
icebp
out
xchg
sbbl
test
daa
sbb
ret
data16
push
loopne
aas
dec
mov
cmp
cmp
lds
iret
mov
jno
mov
and
dec
jp
int3
cltd
cmp
dec
push
or
pop
mov
inc
mov
sub
mov
pop
push
push
insb
addl
jb
les
xchg
aas
or
into
hlt
push
fsubp
and
iret
pop
test
popf
sti
daa
mov
dec
pop
gs
mov
clc
push
ret
or
cmpsl
mov
push
dec
adc
cmp
and
insb
and
inc
cs
sbb
adc
mov
sub
orl
sbbb
stos
insb
mov
rolb
sti
pop
ret
jge
push
nop
fisttpl
adc
mov
jne
pop
jecxz
call
mov
sub
and
in
test
add
jl
gs
add
pusha
and
movsl
inc
ljmp
leave
sbb
push
and
mov
orb
pop
add
je
ss
sub
push
scas
sbb
mov
cmp
call
xchg
sbb
pop
sti
adc
mov
cld
les
pop
inc
aad
out
mov
call
fistpll
sub
adc
cmp
jne
popa
fidivrs
and
mov
jg
cmp
xchg
jae
or
push
mov
stos
xchg
bound
xchg
mov
adc
mov
mov
cld
push
pop
push
hlt
repnz
xchg
test
sbb
outsb
daa
mov
jae
mov
ret
adc
int
test
je
mov
pop
mov
sbb
mov
lret
fisttpll
sub
sbb
scas
fimull
add
cmpsb
jg
cmp
mov
inc
lret
push
in
loop
es
sub
outsl
add
mov
inc
sub
out
push
add
jg
inc
cmp
daa
add
adc
sbb
push
movsl
iret
les
sarb
jns
daa
cwtl
scas
sbb
call
cld
sub
popa
mov
pop
xor
inc
cmpsl
fninit
repz
dec
js
fwait
adc
jb
pop
push
cld
pusha
scas
mov
arpl
xchg
das
mov
out
out
shl
jno
into
icebp
or
movsl
testb
add
fwait
ret
jg
jnp
popl
xchg
inc
sub
rol
loopne
call
imul
push
ficompl
in
mov
push
jp
jmp
mov
xor
push
mov
or
xchg
mov
movsl
push
pop
mov
pop
inc
or
xchg
xlat
or
cmp
cmc
outsl
outsl
imul
insb
lods
jle
xchg
das
adc
faddp
xchg
movlps
sub
cmp
icebp
sub
lahf
or
imull
scas
sti
fildl
fdivs
xor
pop
decl
rcpps
pop
ds
fists
xor
lret
bound
cmp
sub
sti
pusha
push
insl
addl
jbe
xor
jae
flds
push
outsl
inc
popf
jle
lret
mov
inc
and
sbb
aaa
cmpsb
addl
imul
enter
sbb
jmp
jnp
mov
push
lea
stos
pop
mov
inc
psllw
mov
aam
movsb
sub
mull
mov
mov
scas
jae
jno
mov
cmc
jns
mov
in
es
cmp
sub
pop
push
add
int
popf
sub
mov
dec
xor
or
aam
jge
sub
xorb
mov
enter
xchg
pop
cmpsb
dec
mov
mov
pushf
rcrl
fmuls
mov
xor
xlat
into
fwait
cli
popf
jbe
mov
xchg
mov
sub
and
mov
sti
or
cs
shrl
leave
js
rolb
cltd
sbb
xchg
pop
pop
mov
mov
or
movl
arpl
js
ret
push
adc
and
stos
out
test
mov
dec
sbb
test
jecxz
int
fwait
outsb
lds
shr
std
std
xor
xchg
push
repz
add
sub
jg
cmc
imul
sub
pop
add
pop
push
leave
xchg
fnsave
xlat
bound
loop
cltd
outsl
jbe
cmpsl
push
clc
xor
jmp
sbb
stc
ja
out
pop
imul
jge
sbb
jb
int
fs
mov
or
imul
fs
or
xor
fadds
test
mov
bound
out
xor
lds
das
adc
imul
imul
add
sub
adc
and
in
dec
inc
movsl
pop
push
imul
dec
add
les
xor
sbb
mov
jp
clc
lds
notl
pop
movsl
push
xor
and
iret
xchg
adcb
mov
js,pn
stos
mov
movsl
insl
gs
sub
aaa
lret
int3
fucomp
pop
dec
sub
jb
dec
mov
aad
xor
xchg
inc
mov
jp
jmp
pop
add
jns
pop
aas
popl
int
clc
cmp
cmc
xor
pop
push
or
sbb
xchg
fistpll
pop
es
xor
push
xor
or
ret
jb
rorb
gs
xor
mov
cmc
fimuls
inc
or
sub
rcrl
loopne
xchg
sbb
mov
daa
push
loopne
cmp
ja
sbb
lea
xchg
push
xchg
mov
sub
xorl
aas
add
popa
mov
imul
arpl
dec
movsl
xchg
cmpsb
mov
out
in
jns
ds
aaa
dec
cltd
jbe
sarb
dec
dec
repnz
test
cmpsl
sub
cmp
mov
cld
outsl
mov
xor
jp
pop
sub
ja
pop
sub
popa
pop
adcl
mov
xor
int3
mov
inc
cltd
int
ret
lahf
rolb
xchg
add
sub
mov
bound
sub
adc
inc
lahf
cmp
dec
lahf
mov
es
jg
es
out
add
rorl
mov
xchg
dec
mov
xchg
pop
add
fldt
nop
int3
cmp
scas
and
pushf
cmp
mov
xor
or
and
loop
ds
in
sbb
push
outsb
lret
dec
pop
lods
loopne
fcoml
mov
mov
xlat
pop
icebp
shrb
das
incb
aam
les
xor
add
push
mov
inc
mov
mov
outsl
xchg
popf
shlb
inc
daa
rorl
dec
inc
lods
test
mov
cmp
adcl
decb
add
adc
insb
mov
xchg
jl
mov
xchg
sahf
or
pushf
jg
pusha
pushf
dec
ljmp
adc
test
sti
push
sub
inc
lods
loopne
lahf
or
mov
lock
cmp
or
mov
cmp
rclb
jns
push
xchg
addb
jno
push
inc
and
icebp
sub
xor
dec
add
ljmp
lods
stos
mov
and
shll
fsub
sbb
cmp
add
aam
jecxz
mov
outsb
jecxz
and
cmp
mov
in
mov
xchg
sub
in
push
xlat
xlat
test
stc
sar
mov
jb
stos
cmc
daa
mov
cmp
sbb
pop
ret
sbb
mov
jnp
mov
dec
jg
subl
lds
inc
testl
add
and
test
pushf
jl
mov
fdivl
es
push
movsb
sbb
pop
jb
out
sbb
mov
inc
daa
rorb
imul
or
add
stos
pop
cmpsl
lods
mov
shlb
addr16
in
or
jns
add
mov
fbstp
cwtl
rclb
lock
mov
mov
push
stos
lods
sub
fsts
jle
cmc
or
pop
pop
pop
push
in
repnz
sbb
sub
xchg
jge
mov
mov
lret
pop
cmp
and
cwtl
push
jmp
out
mov
ljmp
and
push
addr16
dec
sub
jl
push
shl
movsl
mov
testb
lds
ret
jb
adc
lea
testl
pop
and
inc
adc
ds
jle
mov
inc
jecxz
pop
and
js
fwait
lds
mov
sbb
adc
push
insl
sbb
in
movsl
out
xchg
testb
scas
insl
pop
add
cld
or
mov
add
lea
out
out
sub
shll
cli
push
sub
test
mov
and
cmpsb
stos
push
mov
lods
inc
loopne
sub
sub
jo
lahf
dec
lahf
js
mov
jb
roll
jb
leave
out
insl
lods
js
addr16
sahf
mov
jg
mov
sub
cmp
stos
es
add
cmp
sbb
dec
jo
xor
insb
sti
inc
jge
insb
pop
daa
pop
sub
in
sub
scas
sub
sub
sbb
outsl
aad
loope
sarl
repnz
jae
aaa
xchg
cmp
lahf
lahf
shrl
xor
mov
out
out
into
xor
push
jmp
push
or
jbe
and
add
cmp
jae
cmp
xchg
mov
shl
pop
cmp
cmp
loopne
cs
jmp
mov
out
sbb
outsb
xlat
dec
fidivl
cmp
pop
mov
push
push
cwtl
jle
int
inc
inc
xchg
cwtl
inc
dec
inc
xchg
inc
inc
sub
in
jne
call
test
adc
cld
lcall
lea
mov
mov
test
pop
mov
xchg
test
xchg
lods
sbb
or
dec
out
xchg
fcomps
bound
enter
popf
sub
mov
xchg
fninit
stos
cmpl
and
mov
xchg
sbb
out
ja
nop
das
push
inc
rdtsc
pop
cmpl
jnp
loopne
test
mov
push
mov
lds
adc
es
xor
or
jmp
adc
jge
leave
add
fistl
test
sub
push
sbb
out
and
or
repnz
dec
lret
shr
outsb
dec
movsb
repz
cltd
xor
neg
testb
pop
cmp
jmp
clc
and
mov
mov
repnz
sti
jg
outsl
stc
in
int
jae
ja
xchg
lret
add
insl
and
inc
sbb
jnp
lds
sub
imul
ret
jg
xor
lahf
mov
int3
shlb
adc
pop
and
out
inc
dec
mov
addb
sub
sarl
cmp
jnp
sub
adc
ror
pop
aam
jp
jns
push
xchg
mov
es
jns
mov
dec
jg
mov
inc
jecxz
in
sbb
lret
in
hlt
xlat
xchg
push
in
mov
or
std
push
mov
js
mov
bound
je
loope
mov
aas
cmp
insl
lcall
stos
in
xor
mov
into
add
shlb
stc
sbb
mov
and
leave
mov
shl
or
subl
push
pop
lret
sbb
lds
aad
mov
fcmovnb
mov
jp
mov
mov
push
jbe
shrl
aad
cmp
adc
mov
inc
ret
add
mov
add
shlb
cmp
cld
adc
adc
mov
mov
xor
adc
test
mov
jg
in
pop
and
dec
push
sbb
notb
adc
cmp
popa
add
add
adcl
dec
or
in
or
push
sti
mov
adc
scas
jne
xchg
lock
cld
mov
jne
and
pusha
lea
inc
mov
ja
call
or
andl
jnp,pt
and
in
cmp
cmpb
mov
push
mov
dec
or
rclb
push
xchg
int
lcall
or
mov
mov
mov
adc
or
and
add
daa
int3
dec
push
pop
xchg
std
test
out
test
loopnew
pop
mov
in
cmp
inc
push
push
xchg
lods
pusha
xor
aad
js
inc
adc
pop
sbb
xor
add
xorl
or
mov
or
or
js
sti
nop
or
inc
mov
cltd
jb
sub
push
jo
and
add
cmpsl
push
pop
inc
sub
nop
push
push
inc
mov
jns
js
inc
addb
pop
cmp
xchg
out
jb
dec
mov
push
insb
mov
and
and
pop
in
int3
gs
pop
dec
bound
mov
rolb
cs
es
clc
daa
mov
cmpsl
pop
inc
mov
sub
and
fisubs
das
cmp
pop
pusha
orb
and
sti
inc
add
pusha
push
and
jle
jbe
jnp
push
add
in
jle
push
ror
lea
gs
push
jl
lods
pushf
mov
shll
mov
mov
sbb
mov
flds
push
sbb
cmp
cwtl
mov
push
mov
lret
jg
pop
xchg
push
into
aaa
outsl
cld
data16
push
cmc
into
pusha
int
mov
bnd
sub
xor
pop
and
lcall
xchg
addr16
mov
ret
or
jno
ja
add
mov
movsb
scas
bound
loope
ljmp
imul
pop
xchg
fs
inc
lret
inc
push
jecxz
cmpsb
cmp
lods
push
pop
cmp
dec
jecxz
mov
rcrb
xchg
int3
jb
out
bound
lock
daa
mov
mov
pushl
xor
dec
jmp
mov
xor
bound
inc
sbbb
loope
pop
and
xchg
stos
scas
mulb
mov
inc
je
jecxz
dec
lods
insl
cwtl
cmpb
cmp
lcall
daa
mov
bound
ja
daa
ljmp
adc
or
xchg
jae
cmpsb
xchg
aam
mov
push
xor
xor
push
call
pop
ljmp
xorl
cmp
data16
mov
xchg
mov
les
mov
xor
pop
cmp
mov
xor
jp
cmp
addr16
inc
pop
xorl
and
hlt
rorl
mov
xchg
lds
xor
fldt
aam
lods
cld
push
push
push
pop
mov
jnp
mov
ds
mov
inc
aad
and
adc
clc
scas
mov
fwait
inc
dec
mov
das
add
je
push
and
add
dec
jbe
push
and
pop
inc
rolb
xor
mov
and
es
jg
adc
cmp
adc
inc
jns
mov
xor
out
cmp
lods
sbb
loopne
mov
outsl
cli
mov
cld
or
cmc
push
mov
hlt
addl
cmp
mov
add
and
mov
mov
pop
fistl
mov
fwait
inc
fiaddl
adc
sub
mov
mov
lcall
xor
das
xchg
cmp
std
shrb
lret
test
jp
or
out
mov
shl
movsl
xchg
mov
push
xchg
adc
je
dec
cmp
ficompl
mov
xchg
mov
xchg
add
push
mov
sub
push
std
loop
fisttps
mov
sbb
sbb
cmp
pop
mov
push
imul
data16
lods
push
js
mov
ficoms
rcrl
mov
daa
xchg
roll
cmp
xchg
sti
cltd
repz
sbb
int3
decb
jns
jle
push
sbb
repz
inc
aaa
ficompl
jle
pop
mov
mov
lock
and
jnp
hlt
mov
in
sbb
pushf
scas
dec
xchg
sbb
test
loop
adc
add
pop
fisttpl
jg
sbb
in
xor
imul
jo
add
insl
pop
les
ljmp
add
cmp
push
mov
sub
icebp
jb
xchg
ret
test
jne
cld
jae
stos
int3
je
fs
shrl
add
mov
dec
stc
fldl
inc
fbld
loope
in
inc
xor
xor
cmpsb
inc
pushf
push
or
fmuls
dec
push
insb
int3
xchg
cltd
mov
imull
mov
je
mov
mov
cld
pop
test
mov
frstor
ss
pop
cs
fsubl
sahf
or
ffreep
out
inc
adc
rcrl
mov
mov
fildll
andl
jg
repz
lods
jb
pop
jno
shufps
mov
sub
iret
fldl
add
movsb
adc
mov
cltd
cmp
flds
mov
pushl
idivb
aas
pop
loope
pop
push
shrl
sbb
inc
jae
sbb
xchg
mov
shrb
mov
addl
mov
movsb
mov
ljmp
and
ret
dec
mov
outsl
lahf
push
jbe
add
aaa
arpl
mov
cwtl
xchg
inc
xchg
adc
xchg
sub
xor
sbb
inc
push
dec
scas
popf
push
cmp
arpl
push
stos
xchg
jb
xor
adc
inc
scas
pop
lcall
xor
dec
mov
or
pusha
test
sti
push
adc
dec
ljmp
es
icebp
adc
add
movsl
xchg
sbb
xor
mov
pop
push
cmp
fsubr
pop
jne
push
repnz
fsubl
loop
pop
loop
les
or
mov
sub
sub
sbbl
std
sbb
or
hlt
push
mov
ret
adc
inc
aaa
push
lahf
fwait
in
mov
enter
xchg
push
push
addb
orl
mov
xchg
loope
dec
jno
xor
scas
call
int3
hlt
out
mov
mov
dec
or
sbb
pop
push
test
ja
mov
add
pop
jp
mov
cmp
in
jno
push
out
data16
dec
push
sbb
dec
xor
pop
pop
and
repz
ret
fwait
xchg
or
xor
mov
jne
cmp
hlt
xor
std
pop
add
in
inc
std
xor
add
mov
mov
leave
mov
movsb
insb
mov
xchg
andb
adc
add
add
lea
roll
sub
dec
daa
daa
mov
pop
adc
add
xlat
lcall
vmovntps
leave
std
ret
mov
flds
rcrl
adc
mov
mov
rolb
mov
jnp
xor
inc
std
mov
mov
lcall
xchg
sbb
mov
mov
cmp
mov
call
mov
mov
xor
dec
or
test
dec
and
sbb
test
or
scas
daa
lret
test
or
scas
dec
out
mov
int3
fsubl
hlt
adc
or
in
test
hlt
cli
cmc
pop
sub
mov
imul
sub
aad
pop
lcall
xchg
out
imul
mov
cmp
out
ret
fistpl
rclb
outsl
out
idivl
xchg
sbb
mov
jbe
pusha
jo
jo
insb
xchg
sarl
sub
mov
subb
jmp
in
aad
pop
repnz
xchg
fcmovu
sub
mov
xchg
pop
push
inc
inc
daa
sti
mov
and
mov
sub
addr16
adc
jmp
sub
mov
dec
dec
jbe
int3
xchg
in
pop
cli
jb
movsl
or
mov
das
jb
sti
xchg
cmpl
sub
int3
gs
push
fwait
xor
inc
test
push
mov
adc
nop
mov
daa
inc
xchg
adcb
call
and
dec
sub
inc
xchg
adc
daa
pop
clc
out
movb
cli
dec
push
lea
xor
repz
inc
mov
mov
aam
mov
add
outsb
imul
adc
fwait
xchg
push
push
test
pop
cmp
es
pop
xchg
pop
push
out
xor
mov
gs
lcall
xchg
addr16
aas
cli
pop
inc
dec
aaa
mov
jne
bound
sbb
jmp
dec
add
mov
js
add
in
sarl
mov
sbbb
sti
fsubrl
push
lock
in
in
cmp
outsb
mov
int
add
push
nop
sub
in
jge
xchg
pop
push
ret
ljmp
aas
mov
dec
inc
adc
clc
fnsave
xlat
xor
and
xchg
dec
push
aad
in
adc
sbb
cwtl
mov
fsubs
call
arpl
enter
lds
sti
xor
leave
ret
push
lea
adc
xor
pop
lret
and
ds
imul
lods
notb
ja,pt
cmp
movsb
shlb
ljmp
xor
inc
and
sbb
lret
sub
sub
jno
rorl
adc
mulb
mov
jp
pushf
adc
push
and
bts
mov
clc
mov
sbb
dec
push
add
dec
int3
xchg
jae
and
xor
xor
js
ds
nop
jb
rol
jmp
test
mov
es
adc
ds
stos
pushf
xor
and
and
lcall
sbb
mov
mov
mov
cmp
fidivrs
jns
dec
cmp
mov
cmpsb
aam
fisttpl
add
jno
repz
push
clc
sub
inc
icebp
aas
cmp
rcll
popf
mov
fdivl
stos
sub
ja
adc
mov
std
sarb
lock
ror
adc
loop
icebp
mov
hlt
add
jp
push
sarb
jle
push
test
cmp
test
lock
aad
iret
test
adc
jne
mov
push
popa
imul
mov
into
bound
xchg
clc
mov
mov
insl
xchg
loope
cmp
popa
mov
or
cltd
mov
fs
pop
lock
lods
push
dec
pop
and
subb
lods
push
imul
inc
inc
xor
jbe
int3
aam
jbe
cwtl
movsl
adc
push
mov
jo
sub
out
jge
repnz
inc
fmul
test
rcll
mov
add
or
imul
push
aas
mov
dec
xchg
cli
jmp
cli
into
sub
xor
xor
xor
push
insl
mov
std
mov
insl
pushf
ret
and
rolb
test
pop
mov
adc
mov
roll
pushl
add
jne
leave
push
xchg
cmpsb
std
dec
call
sbb
xchg
push
adc
mov
or
push
mov
inc
andl
andl
xor
fisttps
pop
scas
cmp
dec
pop
loope
pop
ret
std
ja
iret
xchg
in
lock
lods
cmp
jge
jp
sbb
dec
ret
adc
lret
mov
sub
sbb
rolb
outsb
lods
mov
pusha
or
inc
out
sahf
outsl
into
inc
jge
popf
add
mov
and
push
aaa
push
out
xchg
jmp
loopne
test
pushf
imul
cmp
testb
arpl
mov
jmp
lret
mov
fildl
mov
or
shl
push
cmc
xor
test
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
lret
xor
inc
sub
jl
leave
rcr
and
mov
es
shl
mov
jo
add
pop
mov
movb
pop
lock
aad
pop
mov
sub
dec
fnsave
test
xor
pop
mov
xor
xchg
cmpsb
movsb
insb
cli
int3
push
nop
sahf
mov
cmp
repz
mov
rol
cmpl
insb
inc
xor
add
mov
ficompl
cmc
xor
sub
sub
sub
pop
pusha
es
std
dec
jae
pop
pop
mov
pop
fldcw
cmp
addr16
sbb
or
imul
sub
scas
ret
test
mov
jecxz
jp
rcrl
add
mov
in
xchg
lea
shl
sarl
sub
scas
cmp
sbb
nop
add
mov
aaa
xor
pop
stos
inc
aam
dec
push
jle
pop
sbb
imulb
mov
decb
push
lock
jg
sti
ret
rol
xchg
and
ffreep
movb
mov
inc
sub
idiv
dec
dec
inc
fcmovu
mov
daa
mov
adc
stos
push
je
mov
dec
inc
mov
out
ss
pop
rorb
push
mov
aad
popf
jo
adc
dec
loop
adc
mov
je
and
push
clc
xor
loop
repnz
int
aaa
and
test
test
subb
jmp
sti
push
pop
cmp
sbb
test
lret
adc
add
push
add
sbb
xchg
es
imul
pop
push
mov
xor
imul
xchg
test
pushf
sbb
mov
dec
mov
cs
xor
leave
movsl
rcl
and
xor
aas
and
and
push
insl
xchg
and
cmpl
xchg
jg
push
inc
push
sbb
sub
fstpt
iret
jl
mov
pop
cmp
int
inc
add
dec
sub
and
lds
push
and
pop
lret
adc
loop
mov
dec
mov
test
les
sahf
add
scas
push
mov
mov
mov
or
pop
push
vpcmpeqb
xchg
out
sbb
xchg
mov
jns
sub
testl
mov
mov
add
xchg
out
push
push
jle
out
movsl
push
xchg
sub
pop
jo
add
sbb
lock
jp
das
push
dec
pop
in
pop
int3
mov
ret
push
mov
xchg
lcall
lods
mov
sahf
mov
push
xchg
jo
pop
sub
iret
jge
and
pop
jb
lock
enter
fsubl
loop
scas
test
stc
mov
dec
jb
pop
pop
adc
push
ljmp
jl
jmp
test
sbb
pop
rcll
daa
cmp
jmp
xor
sub
and
imul
ret
es
add
jns
push
mov
sbb
and
int3
std
push
inc
daa
inc
int
and
jl
dec
sub
in
push
xor
insb
push
xor
fsubl
mov
pop
mov
shll
pushf
inc
jae
into
out
xchg
mov
out
fs
jge
xlat
insl
push
mov
mov
or
cli
add
nop
fdivs
inc
or
pop
adc
pop
popf
mov
iret
mov
push
dec
mov
dec
jp
test
sbb
inc
int3
xor
push
jmp
xchg
test
sub
mov
cltd
and
enter
shrl
cs
ja
and
xchg
jg
sbb
push
adc
gs
lcall
cmp
pop
inc
or
hlt
lock
inc
int3
cmpsl
gs
cld
fiaddl
add
sub
dec
nop
jle
inc
mov
mov
nop
mov
in
mov
xchg
dec
mov
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
