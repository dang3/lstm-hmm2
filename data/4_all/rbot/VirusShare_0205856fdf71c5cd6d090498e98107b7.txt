cli
pushf
and
mov
repz
imul
xchg
loopne,pt
push
sahf
xchg
pop
mov
subl
pusha
cmpsl
int3
fcom
mov
xchg
and
rcll
loop
repnz
push
or
dec
daa
mov
addr16
inc
adc
outsb
add
ss
mov
xlat
scas
push
lahf
aas
xor
mov
add
mov
mov
divl
ljmp
xor
clc
call
aam
sbb
push
fwait
xlat
add
jmp
jg
adc
sub
daa
scas
push
sti
xchg
leave
adc
aam
pushf
push
cmp
mov
xchg
add
push
icebp
pop
mov
rol
adc
lods
iret
adc
inc
push
xor
mov
das
and
pop
clc
inc
dec
and
sbbl
inc
or
pop
hlt
pop
xchg
cmp
and
or
pusha
inc
add
jbe
mov
inc
xchg
jecxz
movsb
mov
ret
in
insb
or
xchg
int
dec
js
or
add
js
add
push
jne
call
sbb
test
outsl
add
add
cmp
xchg
xchg
mov
inc
dec
fcompl
je
pop
pop
push
sti
notl
shrb
mov
and
pop
mov
mov
adc
scas
pop
cltd
inc
push
lahf
mov
hlt
pop
jne
push
sbb
adc
data16
aad
or
mov
repnz
cmpsl
ret
adc
mov
shr
xor
sbb
mov
into
adc
jge
int
cmp
ss
outsl
cld
sbb
ret
sbb
cmp
mov
test
xchg
sbb
setns
inc
lret
jg
pop
jne
sahf
cld
mov
xor
cmp
sub
pop
add
addr16
pop
jnp
call
pusha
jl
xchg
pop
in
cltd
mov
jle
fs
jns
mov
sbb
dec
or
adc
js
inc
in
fucompp
sub
jmp
add
sbb
js
add
cs
add
iret
adc
rorl
das
ret
pop
mov
por
add
aaa
sbb
pop
leave
cmp
sub
sbb
loopne
cmp
stc
cmp
push
fdivr
adc
pop
pop
xchg
jl
mul
pop
cs
mov
xor
mov
or
leave
leave
shlb
cltd
leave
add
addl
pop
jl
movsl
xor
and
cli
jmp
pop
mov
shll
mov
sub
jg
bound
or
mov
push
sti
je
xor
je
icebp
or
inc
or
mov
mov
fwait
loope
aad
mov
pusha
lea
add
jmp
stos
lret
adc
mov
xor
loope
jno
sti
mov
pop
mov
adc
pop
jecxz
add
shrb
inc
jmp
xlat
mov
and
and
imul
fmul
dec
jge
cli
cmp
sub
sub
arpl
push
pop
inc
sbb
push
and
test
dec
mov
or
addr16
out
lret
iret
sbb
lods
movsl
xchg
and
sbb
xchg
push
shlb
shll
les
mov
in
dec
dec
xor
adc
adc
ret
vmovlpd
and
lret
xchg
jecxz
mov
mov
inc
dec
iret
lods
ret
adcl
add
jb
push
hlt
jg
or
add
mov
push
mov
xchg
xchg
and
test
push
mov
movsb
adc
sbb
int3
add
cmp
shlb
stos
lea
push
sub
cmp
lahf
mov
dec
pop
inc
dec
cmc
mov
lods
pop
lods
out
arpl
out
mov
call
pop
in
data16
in
push
dec
xor
dec
cwtl
cld
rcrb
add
sub
dec
add
fcmovnu
pop
jle
inc
jle
or
test
ror
adc
daa
pop
test
mov
cmp
leave
imul
jne
testb
push
clc
push
adc
aad
mull
mov
push
cmp
sub
and
popf
sub
inc
lds
push
es
shlb
mov
shrb
and
fidivrl
dec
cmp
mov
inc
out
fdivl
push
add
jg
cmpsl
xor
sbb
inc
sbb
sbb
xor
mov
shl
adc
enter
inc
inc
or
mov
inc
popf
or
cmpsl
insb
scas
mov
fisubrl
repnz
int3
mov
cld
push
pusha
inc
leave
jns
lret
push
popa
dec
xor
ja
jae
ja
dec
jg
test
cmp
xorps
xor
cmpl
jbe
mov
shl
mov
insb
xchg
sbb
cmp
repz
jae
ja
bound
enter
stos
mov
adc
jle
mov
add
and
aas
jae
inc
int3
jnp
jmp
xchg
and
lret
pushw
adc
cmc
sub
sub
xchg
test
dec
sbb
orl
fsubrs
ficompl
xchg
push
sub
sbb
sahf
roll
xchg
pop
and
pop
inc
pop
push
fisttps
ficompl
mov
adc
test
xor
cmp
movsb
adc
mov
les
or
pop
dec
inc
add
jl
push
ja
push
or
pop
pop
nop
lea
lea
push
jbe
jno
or
pop
push
mov
pop
push
shl
pop
cld
push
push
mov
pop
pop
mov
jge
jne
ja
jns
or
push
inc
pop
jns
push
push
jne
nop
pop
pop
cmp
rol
sub
or
cmc
jmp
jmp
call
cld
push
or
pop
push
push
rol
pop
pop
test
sub
push
not
not
pop
sub
lea
cmc
cmc
mov
add
stc
push
or
pop
jo
jbe
push
push
jle
pop
pop
push
js
inc
dec
pop
fnop
add
jns
xor
stc
push
push
xor
pop
pop
jbe
test
nop
push
cmp
pop
lea
cld
test
and
push
add
push
pop
pop
push
push
js
cmp
pop
pop
or
lea
lea
mov
push
or
pop
sub
sub
clc
push
dec
inc
pop
testl
je
loop
jecxz
fbstp
mov
ljmp
jecxz
jl
cmp
push
mov
add
pop
test
test
cld
shr
js
ja
push
shr
pop
clc
sub
push
pushl
xor
pop
pop
loop
jecxz
in
xlat
out
push
cmp
sti
xchg
movsl
adc
stos
xor
sub
adc
hlt
ficoml
in
sub
mov
shl
adc
jo
repz
cltd
cltd
jns
add
scas
pop
or
aas
jo
fnstcw
ss
lret
lock
and
push
xchg
pop
push
pop
xchg
pop
je
push
push
not
not
pop
pop
loop
jecxz
jmp
inc
mov
mov
int3
mov
or
les
push
jp
ror
pop
push
xor
pop
clc
nop
sub
push
call
scas
pop
sbb
pop
in
inc
mov
flds
ret
cmp
push
push
xchg
mov
inc
push
inc
xchg
jg
and
xor
dec
xchg
mov
imul
adc
inc
movsb
lock
es
scas
js
pushf
or
dec
movsl
pop
mov
dec
jne
jmp
xlat
fsubl
rcll
sub
mov
or
push
scas
mov
fidivs
rorb
mov
jne
cltd
int
and
and
dec
mov
nop
xlat
add
mov
and
jns
cmp
jl
mov
or
cmp
push
imul
mov
push
das
mov
lret
lods
push
pusha
jb
insl
lret
cs
icebp
aam
or
pusha
or
push
add
pop
xchg
jg
test
ja
cmp
jbe
push
push
dec
pop
pop
push
jns
push
mov
pop
pop
rol
xor
je
cmc
push
call
sbb
sub
fs
aas
and
aad
shrb
repnz
test
call
mov
pop
inc
movsl
repz
or
or
or
out
add
mov
pop
pop
in
aas
mov
pop
pop
lahf
call
cli
arpl
jnp
ret
pcmpgtb
mov
inc
in
and
inc
in
pop
rorl
add
ja
inc
in
pop
ja
in
pop
or
pop
push
inc
in
pop
js
in
pop
push
inc
in
pop
cwtl
inc
in
pop
mov
inc
in
testl
adcb
inc
cld
cwtl
sub
or
mov
push
enter
and
out
popa
inc
jbe
adc
outsb
xchg
orl
test
xchg
test
or
pop
stos
ds
shll
pop
hlt
and
pop
hlt
adc
pop
add
test
pop
mov
fmuls
push
popa
cmpsb
pop
cld
cmp
add
push
pop
push
andl
pop
nop
xchg
int
fsubl
dec
in
pop
cwtl
dec
in
pop
mov
dec
in
daa
or
in
add
dec
in
pop
js
in
pop
push
inc
in
inc
fadds
pop
clc
dec
in
pop
enter
jbe
in
xlat
pop
imul
pop
js
in
pop
sub
pop
dec
inc
in
pop
xor
pop
js
in
pop
or
pop
push
inc
in
pop
js
in
pop
sub
pop
mov
pop
cwtl
inc
in
pop
mov
inc
in
pop
test
in
pop
sbb
pop
mov
inc
in
xlat
mov
pop
cwtl
inc
in
pop
mov
inc
in
out
inc
in
pop
pop
inc
in
pop
js
in
pop
push
inc
in
pop
sbb
pop
cmp
pop
or
pop
sub
fadds
pop
cmp
sub
or
sbb
js
in
pop
or
push
inc
in
pop
js
in
pop
push
inc
in
pop
cwtl
inc
in
pop
mov
inc
in
pop
test
in
pop
fadds
mov
inc
in
pop
inc
jecxz
lret
cwtl
inc
in
pop
cmp
in
pop
dec
inc
in
pop
push
inc
in
pop
js
in
pop
push
inc
in
pop
push
insb
push
mul
xor
or
call
jmp
in
pop
fdivrs
in
pop
sbb
in
pop
pop
mov
and
pop
cmp
in
pop
mov
mov
in
pop
mov
in
pop
xlat
mov
in
pop
test
in
pop
mov
in
pop
js
in
pop
mov
in
pop
pop
mov
in
pop
push
mov
in
pop
cmp
in
pop
sub
pop
cmp
pop
or
pop
js
in
pop
or
pop
pop
mov
in
pop
push
mov
in
pop
mov
mov
in
pop
fdivrs
pop
test
in
pop
mov
pop
js
in
pop
mov
pop
pop
mov
in
pop
push
mov
in
pop
cmp
pop
sub
in
pop
cmp
in
pop
or
in
pop
js
in
pop
or
in
pop
pop
mov
pop
js
in
pop
push
mov
in
pop
mov
mov
in
pop
fdivrs
in
pop
test
in
pop
mov
in
pop
js
in
pop
mov
in
pop
pop
mov
in
pop
push
mov
in
pop
cmp
in
pop
sub
in
pop
cmp
in
pop
or
in
pop
js
in
pop
or
in
pop
pop
mov
in
pop
push
mov
in
pop
mov
mov
in
pop
fdivrs
in
pop
test
in
pop
mov
in
pop
js
xor
iret
insb
in
scas
cmpsl
lods
lods
nop
daa
add
in
pop
out
in
aaa
cwtl
test
pop
lret
mov
xor
ret
and
int
test
cmpsl
xor
outsb
adc
dec
call
sub
push
xor
mov
jae
inc
in
pop
jb
fimull
push
push
push
adc
stos
add
add
pop
pop
jne
lret
ret
lods
cmp
mov
jg
fisttpl
jo
hlt
in
dec
push
fisubs
lods
mov
pop
sbb
lods
xor
pop
and
inc
xchg
jecxz
sarl
or
les
pop
jecxz
mov
out
and
cmp
loop
push
jl
add
sti
jp
adc
pusha
inc
in
fadd
es
inc
aad
lret
push
inc
push
filds
addr16
sarl
jle
mov
repnz
dec
adc
jae
popa
cmp
fdivr
jnp
mov
rolb
rcrb
xchg
fs
out
jmp
movl
and
push
or
popf
jmp
jge
jecxz
ficoms
stos
mov
in
iret
aad
test
mov
rolb
add
dec
mov
aaa
sbb
ret
dec
sahf
sbb
jo
inc
mov
push
inc
inc
fs
repz
nop
adc
mov
inc
pop
test
aad
cmp
push
push
sbb
pushf
stos
mov
fldt
dec
pop
les
lods
stos
dec
out
adc
enter
mov
data16
daa
adc
bound
leave
leave
pop
lret
lcall
inc
fstp
sub
cmp
jl
xor
aaa
cltd
or
mulb
or
cwtl
pop
and
mov
ret
sbb
push
pop
out
inc
dec
sarl
inc
rorb
pop
mov
call
sbb
jecxz
sbb
leave
call
cmovg
xor
sub
add
ret
sahf
adc
mov
mov
pop
test
xor
push
adc
popf
aam
sub
ds
mov
nop
lea
sbb
xchg
sub
xchg
jl
pop
xchg
sahf
bound
pop
rcll
mov
sahf
push
add
inc
into
sub
mov
clc
sti
arpl
xor
mov
adc
push
xor
and
je
popf
cmp
ret
nop
adcb
loop
cmp
orb
fdivrp
mov
cwtl
mov
and
and
sub
sub
outsb
das
adc
cmc
fsubrp
xchg
aad
js
and
and
sub
xlat
aas
shlb
insl
hlt
lret
xchg
addr16
stc
out
mov
sub
sbb
mov
pop
mov
jecxz
sti
jb
shll
hlt
clc
stc
ret
loope
hlt
je
push
or
lock
call
lock
je
and
leave
test
shl
in
mov
push
and
ret
ret
in
outsb
mov
mov
bound
xor
xor
cmp
scas
sub
and
int
xchg
les
mov
pusha
mov
jmp
push
jnp
outsl
mov
pop
mov
fbstp
test
pop
sbb
push
stos
jecxz
mov
add
lahf
mov
retw
push
in
mov
in
sub
lea
jmp
adc
push
test
das
scas
xchg
shlb
adc
addr16
and
ror
cmc
les
rcr
pop
aaa
subb
aam
jle
xor
pop
insb
inc
mov
stos
sub
bswap
adc
subl
inc
xchg
xchg
nop
sbb
das
es
rorb
push
aad
inc
insb
leave
and
adc
test
and
mov
stos
outsb
fistpl
clc
pop
or
pop
scas
dec
fidivrs
dec
or
sbb
xchg
or
test
and
repnz
or
movsl
into
out
in
push
imul
call
mov
mov
mov
jbe
xchg
dec
adc
fidivl
in
add
repnz
mov
pop
shll
cmp
inc
dec
mov
lods
aad
sbb
or
push
loop
sbb
xor
jnp
mov
cli
mov
mov
pop
out
mov
in
insb
jecxz
dec
cli
test
outsb
adc
movsb
lods
pop
dec
icebp
push
sub
xchg
jne
add
aaa
add
adc
sub
push
faddl
repnz
movsb
pop
outsl
fstpl
inc
addr16
cmp
pop
daa
mov
fstl
pop
sbb
lea
mov
add
loope
or
lock
icebp
adc
mov
push
int3
inc
push
mov
mov
fldt
pop
scas
sbbl
fcom
inc
icebp
xchg
insb
inc
hlt
in
mov
fisubrl
adc
inc
mov
loop
leave
fmuls
push
xchg
insb
ret
pushl
aad
aam
pop
pop
and
and
pusha
loopne
jge
cs
push
push
xchg
popa
cmp
sbb
push
and
sbb
repz
addl
les
adc
xchg
mov
mov
dec
fsubl
in
ljmp
mov
aam
push
add
push
into
iret
pop
sbb
xchg
push
mov
aaa
xchg
cmp
jecxz
add
cs
push
cmpsl
aam
sbb
scas
mov
stc
inc
imul
and
arpl
inc
or
sbb
lcall
gs
aaa
dec
iret
ret
ficomps
xchg
inc
cwtl
xchg
and
inc
xchg
xor
cmp
lahf
loop
in
mov
add
nop
enter
and
int
push
lods
sbb
mov
ss
add
push
mov
outsl
pop
nop
cltd
push
and
shrl
sti
scas
add
daa
ja
enter
push
adc
cmp
mov
adc
out
push
shrb
cmp
fsubp
mov
decl
lret
imul
dec
data16
xor
ret
pop
push
divl
pop
cltd
and
test
les
sarl
clc
mov
insl
mov
js
out
pusha
xor
mov
inc
pop
movsb
in
sbb
outsb
push
andps
sbb
outsl
xchg
dec
xchg
popa
sub
pop
outsl
and
mov
mov
push
sub
pushf
shlb
push
in
sbb
jo
cmc
lret
test
pop
fstpl
fisubs
mov
iret
xchg
cs
fisttps
mov
fmul
xchg
lret
mov
pop
pop
jns
and
hlt
jns
dec
xchg
xor
jl
xchg
add
and
lods
dec
insb
xchg
mov
inc
outsl
popa
into
pop
sub
sub
lcall
pop
jne
fbld
fwait
mov
fcoms
cmp
mov
mov
sahf
sub
fcomps
imul
into
negb
sbb
add
xor
clc
sbb
jge
xchg
adc
mov
push
jmp
xor
and
sbb
sbb
cld
jle
mov
fistl
push
pop
mulb
fisubrs
cwtl
push
pop
mov
dec
sub
pushf
mov
pop
adc
xchg
mov
sub
enter
scas
xchg
aam
sahf
mov
repnz
ja
repz
fstpl
in
scas
sbb
push
push
cmp
or
xchg
test
adc
or
push
ds
pop
push
and
js
scas
sbb
ja
data16
js
aam
jl
sbb
sar
and
pop
inc
popa
clc
data16
mov
jne
mov
and
sbb
cltd
in
jmp
mov
inc
pop
ds
pop
push
and
or
mov
repz
mov
aas
popa
lock
repz
jl
or
or
lahf
cmpsb
divb
adc
cmp
cli
int3
sbb
bound
movsl
repz
dec
inc
aad
mov
js
loope
dec
mov
xcrypt-cfb
cmpsl
arpl
add
xchg
popa
pop
push
xlat
fistpl
xor
scas
scas
add
aam
cld
push
out
mov
lods
pop
push
pop
cwtl
push
leave
test
shrl
js
rcr
lahf
inc
dec
and
insb
xor
dec
xchg
pop
shll
xlat
fnstcw
fnsave
and
popa
adc
scas
es
test
lds
fwait
add
int3
or
cmp
lds
mov
pushf
jne
out
push
mov
jecxz
xchg
test
xchg
ds
in
repz
or
adc
punpckldq
xlat
loopne
lods
pop
jmp
xor
or
mov
or
inc
addr16
mov
push
jmp
push
mov
mov
fdivrs
fs
scas
jmp
aaa
andb
and
xchg
jge
cmp
xor
xor
or
push
adc
stos
fsubrs
dec
xor
js
cmp
jbe
and
xor
mov
jae
outsb
add
dec
jo
in
movl
pop
pop
inc
repz
jnp
leave
imul
mov
out
dec
cltd
je
sub
in
jecxz
push
inc
loop
inc
hlt
jne
loopne
xor
dec
add
xor
fs
mov
ss
stos
lret
outsl
sub
aas
lahf
rolb
xor
inc
inc
fnstenv
pop
fsub
adc
lahf
push
push
cs
sbb
and
aad
fdivl
mov
and
dec
icebp
ficoml
int
or
fsubrp
sahf
xchg
jl
jbe
call
in
jno
aam
mov
in
push
andb
popa
sahf
out
in
add
negb
xor
je
jno
push
movsl
add
call
mov
gs
cmp
fstl
add
fwait
jo
jg
pop
iret
orl
pop
test
adc
sbb
xor
add
repnz
in
push
aaa
cmp
mov
push
push
push
insb
mov
pop
mov
fldt
jp
mov
sub
mov
jp
test
scas
sbb
dec
dec
aam
iret
cli
xor
jns
sub
insl
les
push
adc
fcoml
mov
arpl
adc
mov
call
sbb
loop
sub
call
orb
lods
push
ret
cmpxchg
aam
movsl
stos
cmp
js
and
push
scas
xchg
or
outsb
popf
gs
jnp
fnstsw
xchg
nop
mov
ret
add
pop
push
ret
in
xchg
xor
and
inc
xchg
xchg
cmp
je
jle
popf
jne
cmpsb
mov
sbb
pop
push
fsubs
xorl
les
jo
jbe
aad
repz
jb
repz
pushf
push
push
pop
mov
sbb
fstl
popl
ret
ljmp
ja
xor
insl
aas
push
enter
aas
sbb
dec
jb
adc
ljmp
lods
xchg
es
dec
ss
pushf
lock
jmp
out
loope
and
xchg
adc
bswap
decb
test
lret
sub
jl
or
jge
push
cmp
push
cs
sarl
in
outsl
and
push
or
hlt
rcrl
jb
jge
nop
push
clc
loop
dec
fdivl
jns
sbb
ss
test
stos
xchg
sub
scas
sub
sub
sbb
sbb
sbb
dec
mov
pop
pop
in
adc
repz
outsb
jns
adc
lret
push
or
jle
dec
push
fcoms
cmp
fcoml
xor
mov
mov
jecxz
dec
or
stos
cmc
xchg
pusha
mov
sbb
and
call
cmp
jge
jns
sub
mov
jnp
mov
push
pusha
cmp
out
in
jne
scas
mov
sub
inc
cmpsb
aam
es
pop
jmp
xor
pop
fbstp
jecxz
jae
jecxz
mov
ds
cltd
sbb
insb
out
faddl
rclb
in
shlb
decb
shlb
je
jmp
mov
sub
jo
aad
lcall
mull
jo
jge
rorl
mov
fsubr
into
mov
in
lcall
test
scas
jecxz
lods
sub
lea
add
mov
fs
mov
int
out
je
outsl
aas
xchg
das
fstl
bound
sbb
adc
mov
enter
fldl
imul
fs
bound
mov
pop
scas
icebp
push
inc
mov
jle
test
das
repnz
arpl
jno
jle
cmp
jg
push
out
pop
adc
inc
mov
xor
sbb
sbb
inc
cmp
fdivl
sub
clc
pop
test
push
lods
movl
mov
sahf
shl
ljmp
mov
pop
or
sbb
cmp
pop
cmp
popf
dec
mov
mov
push
idiv
seta
test
scas
cmp
lock
sbb
or
clc
test
cmpsb
orb
fimull
and
xchg
pusha
xchg
lods
lcall
lods
cmp
mov
adc
xor
in
scas
int3
movsb
pop
mov
call
sbb
adc
ret
adc
pushf
aas
push
fcmovbe
subl
sub
pop
or
push
dec
scas
jbe
adc
aas
shrb
add
xchg
add
sbb
add
pop
cmp
mov
sti
lods
rorl
xchg
xlat
push
xchg
pop
push
sbb
fwait
loop
in
in
lret
ret
out
dec
push
icebp
cmp
in
repnz
cmp
add
scas
ljmp
dec
xlat
xchg
in
cmpsb
fs
ds
add
cmpsl
push
sahf
dec
adc
je
popf
dec
xor
imul
movsl
add
invd
test
sub
pop
adc
pop
and
cmp
sbb
sbb
mov
in
insb
jle
xor
sub
xlat
xlat
in
xor
ret
pop
or
out
inc
and
lret
cmp
cmp
cmp
mov
lcall
sub
xor
sbb
loop
test
add
sbb
aaa
cmp
repnz
lods
test
test
or
dec
jg
mov
jmp
cmc
jno
dec
mov
pop
rcrb
jns
dec
mov
pusha
subps
xchg
push
xlat
push
sub
mov
dec
inc
out
mov
aas
movsb
or
pop
out
test
leave
xor
cmp
aaa
or
and
out
das
rcll
lret
add
xlat
scas
xchg
icebp
mov
sub
cli
mov
sbb
repz
mov
add
clc
xor
jmp
pop
sub
mov
imull
in
or
inc
dec
push
out
add
in
xor
add
test
test
rdmsr
stos
les
mov
sbb
add
pusha
popa
jns
dec
fwait
addr16
dec
gs
sub
pop
js
aaa
fcmove
dec
sub
or
dec
pop
lret
mov
push
fmull
jecxz
sbb
sbb
mov
data16
xchg
push
stos
sbb
repz
or
int3
and
faddl
xchg
inc
jno
or
ret
aad
in
add
sbb
pop
aad
sub
and
mov
push
orb
sbb
aas
lcall
scas
cwtl
dec
mov
scas
lcall
or
movsb
xlat
inc
fs
divl
fwait
sbb
pop
lods
inc
cltd
ret
fdivrs
mov
je
pop
and
sahf
or
xchg
push
adc
or
adcb
je
rcll
das
push
sti
stos
fsts
mov
notl
clc
xlat
fisubl
jb
lcall
roll
xlat
stos
scas
jl
fwait
aaa
xchg
mov
jge
stos
pushf
sbb
mov
pop
cmp
aas
movsl
inc
add
ja
mov
sbb
xchg
mov
jne
mov
pop
andl
sbb
cwtl
ss
mov
add
cs
and
pop
pop
mov
xlat
jbe
sbb
popa
stos
subl
mov
mov
mov
mov
pop
mov
xor
ds
inc
ret
decb
arpl
or
outsl
mov
or
aaa
xchg
mov
ja
mov
aas
push
pop
xchg
pop
fsubs
dec
adc
jle
xchg
into
xor
stos
mov
outsb
sbb
pop
cmp
mov
popf
inc
ror
lcall
xchg
in
mov
arpl
mov
add
mov
imul
or
dec
fcmovu
movsl
mov
xchg
aam
jns
jnp
dec
xor
pusha
das
sti
inc
test
push
xchg
fnstsw
iret
mov
adc
sarb
fucomip
mov
pushf
jno
push
aaa
int3
or
fwait
cmp
loop
orb
int3
daa
xor
and
adc
push
repnz
shlb
cltd
aad
aad
test
inc
lahf
in
dec
adc
in
adc
out
dec
inc
pop
dec
mov
xchg
pcmpgtb
repz
int
push
sbb
fisttpll
inc
cmp
push
imul
push
xor
pop
mov
and
std
push
jle
adc
pop
fsts
sbb
ret
fldl2e
hlt
dec
jno
lock
jb
aaa
incb
pusha
sbb
xlat
xorb
push
es
mov
inc
out
icebp
rcl
jnp
adc
jb
mov
fcoml
enter
add
sbb
clc
mov
int
and
and
pop
and
cli
cwtl
pop
inc
or
pop
sub
das
adc
inc
call
std
jecxz
shr
je
out
xchg
mov
cli
fwait
pop
and
fadd
jbe
outsl
cmp
movsb
push
or
pop
call
subl
mov
setl
test
fiadds
and
ret
sbb
adc
loopne
xlat
fnstenv
add
lahf
cmp
loop
pop
sub
iret
mov
insl
ret
loopne
or
fcoml
stos
test
cmp
and
adc
xchg
repnz
cli
sti
sub
mov
fsqrt
sbb
mov
sbb
sbb
push
sub
mov
mov
imul
jns
cltd
outsl
jno
lret
out
mov
lret
fldl
inc
or
stos
push
dec
imul
sbb
xor
cmp
sbb
insl
push
pop
cmp
cmc
jns
rcll
xor
jae
xchg
dec
mov
pop
inc
movsl
push
mov
imul
sahf
movsb
imul
ret
xor
aam
push
mov
dec
ror
push
scas
int
jmp
pop
pop
and
sub
xchg
mov
jae
dec
outsl
push
lds
mov
pop
push
imul
mov
jno
aam
and
sub
xor
sbb
call
mov
xlat
iret
rclb
push
xchg
add
adc
loope
mov
imul
and
dec
sahf
repz
hlt
adc
das
xchg
mov
bound
lahf
jae
sub
pop
stos
sbb
gs
mov
sub
scas
pop
loop
stos
insb
ret
mov
lds
or
leave
jae
or
sub
in
pop
aam
hlt
mov
cmp
push
jb
mov
sbb
cmpsl
addb
cwtl
adc
daa
dec
add
mov
or
mov
imul
test
daa
bound
dec
dec
and
jae
push
int3
ja
push
pop
xor
xchg
inc
mull
mov
cltd
cmpsl
pushf
mov
or
sub
fs
xor
mov
mov
leave
test
sti
popa
mov
icebp
xchg
testb
rcrl
loope
adc
jno
push
inc
xchg
inc
mov
mov
lods
call
js
jge
shlb
cld
inc
sahf
mov
out
jae
inc
cmp
repnz
test
sub
mov
dec
popa
in
pop
out
push
fdivrl
sub
and
movsl
inc
dec
je
push
movl
les
mov
jg
fldenv
xchg
sbb
mov
insl
not
dec
test
dec
outsb
stos
js
mov
cs
pop
popf
mov
je
repz
pusha
add
div
and
push
nop
rorl
mov
cmp
xchg
inc
lea
xchg
cwtl
or
lock
js
pop
dec
ljmp
push
iret
andb
or
pusha
push
jns
cmp
fisubs
loop
in
adc
imul
shlb
add
fbld
jno
aam
mov
sbb
inc
xchg
push
or
mov
sbb
stos
xor
jae
lods
in
pop
daa
in
adc
loop
add
icebp
jp
ja
mov
mov
sti
adc
aad
insl
pop
pop
push
adc
insb
out
xchg
fs
and
dec
cmp
sahf
mov
ror
lea
scas
in
fnsave
xchg
scas
mov
push
sub
js
xor
and
fnsave
lahf
cld
frstor
sub
mov
pop
mov
jle
in
and
pop
stos
mov
pop
pop
xchg
pop
cmp
mov
shll
pop
push
insl
stos
or
pop
sbb
cmp
xchg
fchs
push
fadds
fs
jmp
and
out
ljmp
jae
cwtl
andb
mov
or
out
cmc
ds
movsb
pop
insw
pop
pop
cs
xchg
pop
shlb
pop
orl
hlt
movl
xor
popa
jge
mov
lret
or
in
adc
cmp
and
sahf
gs
xchg
add
test
lahf
scas
out
shl
jmp
rcr
js
fs
cmp
lret
fcoml
out
xchg
inc
and
jmp
mov
sub
sub
sub
mov
and
add
cmp
in
fs
imul
push
lock
loop
leave
add
add
and
inc
inc
mov
dec
movsb
sbb
inc
cmpsb
mov
shlb
ffreep
sti
mov
in
scas
imul
pop
pop
cwtl
push
out
sbb
ja
dec
imul
je
rol
rcrb
push
les
push
push
add
jl
adc
xor
mov
and
decb
jge
and
in
sub
daa
inc
lsl
xchg
jmp
filds
pop
xchg
dec
int
rorl
mov
fs
pop
push
push
clc
inc
sbb
dec
subb
lea
dec
je
xchg
jp
lret
and
xchg
sub
arpl
outsl
sbbb
mov
and
daa
lock
pop
lock
out
fidivrl
inc
pop
out
movsl
cs
ret
jns
inc
adcl
mov
arpl
enter
stos
addr16
dec
add
addl
call
cmp
mov
aam
pusha
mov
push
xor
test
outsb
aaa
push
mov
mov
adc
aam
loope
sbb
mov
adc
enter
aam
enter
cmpsl
xchg
cs
aaa
pop
out
movsl
call
fdivl
pop
pop
mov
ss
mov
jo
rcl
mov
in
aad
loope
out
shll
shlb
mov
cwtl
inc
cmp
mov
call
out
jmp
jnp
and
out
aas
cmp
inc
sub
scas
incl
lahf
imul
daa
inc
sub
adc
ss
test
je
xchg
mov
xchg
sub
in
and
loope
fmuls
rorl
dec
pop
test
test
mov
inc
fmuls
movsl
sbb
adc
mov
pop
push
dec
addr16
sbb
cmp
orps
movb
shr
xor
ja
xor
rorl
jnp
lods
cwtl
aaa
jg
push
test
push
shll
sbb
cs
mov
adc
push
sbb
or
sbb
pop
sub
jnp
cltd
dec
ljmp
jo
fiadds
dec
adc
mov
jne
sbb
mov
mov
clc
movsb
xchg
xchg
mov
in
enter
stos
pop
sbb
in
shr
xchg
pop
mov
arpl
cld
lahf
lret
shlb
push
mov
dec
gs
fsubrl
in
mov
mov
arpl
lods
fdivl
clc
xchg
xor
stos
addr16
cltd
scas
dec
xor
out
fld
movb
test
or
int
cmc
dec
cli
xor
ljmp
cmp
push
movsl
lea
rorb
mov
in
inc
push
ljmp
in
pop
mov
xor
ss
hlt
cmp
aas
mov
and
scas
movsb
push
jbe
and
ljmp
cmpsl
mov
cmpl
inc
ss
std
inc
lea
sbb
xchg
jl
mov
xor
cmp
jae
pop
and
jecxz
nop
pop
push
out
jb
pop
mov
cmpsl
and
std
mov
popa
cli
and
add
and
sbb
ret
jg
push
pop
xchg
dec
push
sub
push
mov
pop
adc
mov
sbbl
sbbb
das
call
insl
ja
ret
mov
push
imul
pop
jno
cwtl
sbb
push
push
pushf
stos
adc
fs
inc
xor
jae
sbb
mov
inc
testb
ficomps
push
mov
cs
imulb
mov
mov
xchg
enter
mov
add
adc
das
ds
jmp
push
aas
cmpsl
jge
daa
cmc
mov
icebp
sti
mov
inc
test
leave
lods
jae
sub
scas
sub
dec
ds
lret
inc
movsb
subb
mov
push
jae
insb
stc
clc
sub
int
mov
bnd
mov
rorl
neg
cmp
xchg
jae,pn
cmc
pop
push
xor
fidivrl
xchg
lret
sti
mov
jne
outsl
cmp
xlat
iret
add
mov
jle
sar
iret
insb
pop
js
sbb
iret
callw
daa
jns
mov
jbe
and
repz
mov
add
or
icebp
adc
fdivs
dec
out
sbb
push
jns
ret
divl
mov
mov
inc
mov
mov
push
mov
jno
aaa
mov
daa
rclb
push
mov
sub
imul
adc
arpl
inc
shll
cmpsl
lods
sbb
or
xchg
pop
test
mov
push
jecxz
mov
xchg
mov
adc
lock
data16
push
push
pop
jbe
out
les
or
and
leave
push
outsl
ret
cmp
lcall
dec
add
add
sub
test
pop
mov
and
push
mov
add
pop
jge
into
sti
pop
dec
cli
fstpl
jp
insl
sub
push
jmp
push
cwtl
adc
or
pop
out
adc
mov
outsb
mov
cmp
push
cltd
xor
ljmp
clc
push
push
jl
pop
mov
and
xlat
out
adc
out
jnp
and
add
into
call
iret
fidivrs
mov
ffree
push
mov
scas
mov
into
shll
sub
ret
cmp
fistpll
push
xadd
out
mov
cli
stos
or
cmp
imull
cld
aaa
aam
in
sub
dec
mov
mov
call
jbe
and
push
mov
into
push
mov
or
jle
cli
cmp
mov
out
hlt
push
out
lret
sti
xchg
ja
dec
dec
xchg
fs
lret
pop
pop
pop
add
add
loope
mov
in
outsl
call
imul
dec
aas
jg
xchg
faddl
js
xchg
or
cmp
daa
adc
ds
lahf
pop
in
sbb
es
lods
pop
lods
and
cli
mov
cmp
cmp
push
and
jne
mov
add
cmp
imul
in
sub
icebp
rcrl
xchg
mov
and
cs
pop
sbb
xchg
dec
mov
jecxz
inc
imul
cltd
pop
inc
mov
aam
stos
ret
sbb
cmp
sub
insl
pop
push
outsl
pusha
mov
pop
xor
cmp
js
pxor
cmpsl
push
lcall
maxps
cmp
pop
test
push
xor
ljmp
data16
mov
popa
dec
in
andl
lret
orl
sbb
fisubl
jne
push
iret
leave
out
ror
divl
sti
rcr
mov
inc
aad
insb
xchg
sbb
rcrb
xor
push
js
jl
insb
jle
mov
sar
xchg
mov
icebp
push
hlt
mov
pop
stc
shrl
sahf
push
stc
sbb
pop
movsl
cmp
dec
pop
xchg
mov
push
xsaves
mov
loop
popl
movsb
jg
add
aam
and
inc
repz
aad
sbb
cmp
fidivrl
inc
iret
int3
xchg
fimuls
fdivr
inc
dec
enter
pop
dec
cmp
leave
adcl
sub
mov
add
mov
sbb
mov
adc
xchg
xchg
mov
ljmp
dec
cmpsl
or
pop
xchg
cmp
mov
js
icebp
sbb
inc
nop
cmp
in
das
pop
or
push
sahf
repz
mov
cmp
pop
push
fwait
inc
xor
insb
das
and
movsb
and
dec
mov
fsubl
cld
cld
js
bound
sbbw
cmp
popa
bound
out
xchg
adc
pop
bound
mov
daa
iret
cmp
in
sbb
leave
aaa
mov
mov
or
lods
xchg
push
push
test
es
inc
outsb
insb
dec
sbb
add
add
mov
shll
aas
and
mov
pop
add
sub
pop
mov
ja
aam
jle
add
or
fcmovu
xchg
repnz
cmp
xor
lods
push
sbb
lods
dec
dec
mov
mov
mov
jmp
dec
mov
inc
dec
cmp
and
outsl
xor
mov
sbb
les
movsl
push
stc
sbb
add
or
push
aaa
ret
in
sub
jmp
pop
ja
lds
push
inc
push
or
outsb
cmp
jmp
cld
fs
pop
xchg
fisubrl
std
jbe
and
das
aas
scas
shrl
dec
mov
xor
mov
pop
call
fnstcw
pushf
and
xor
rcr
pusha
mov
mov
sbb
push
cmpsl
or
jecxz
lret
xchg
icebp
inc
popl
push
stc
push
xchg
clc
test
or
pop
push
fs
ret
popf
imul
repz
pop
cmp
sub
das
idiv
leave
in
mov
mov
sub
mov
hlt
movsb
sub
sub
xor
aaa
stc
push
xchg
idivb
inc
mov
sub
or
jl
jmp
loopne
sub
aas
adc
mov
pop
xor
fwait
adc
mov
lds
sti
push
jb
adc
stos
mov
mov
pop
ss
out
hlt
or
or
shll
cmp
ret
shrb
xor
test
adcb
push
inc
push
outsb
mov
push
or
std
aas
cmp
adc
iret
push
cmp
push
mov
and
mov
aas
ljmp
mov
ja
fsubs
dec
mov
push
loope
addb
sbb
fcoml
call
jl
xorb
repz
mov
jae
sbb
xor
inc
mov
mov
hlt
adc
mov
sub
mov
flds
ret
dec
popa
jecxz
pop
inc
xchg
orb
sub
push
test
mov
into
pop
in
gs
outsb
mov
mov
add
and
pop
test
daa
bnd
ret
jbe
popf
aaa
adc
div
movsb
test
push
faddp
mov
sub
and
iret
testb
aam
add
mov
in
push
or
pop
call
xor
insl
daa
sti
cmpsb
dec
in
push
add
aas
jg
jb
ljmp
xchg
ja
xchg
cmp
fisubl
sub
and
dec
mov
xor
movsb
inc
fs
sti
out
xorps
mov
sbb
lahf
clc
sbb
push
shrl
jl
lahf
push
sub
and
jle
ljmp
cmp
inc
aad
out
js
shrb
jb
or
ljmp
shlb
xchg
push
mov
or
ds
push
cmp
stos
push
movsl
cmp
adc
cli
push
sub
xchg
fadds
jle
push
mov
inc
lcall
fsubr
jg
enter
orl
push
cmp
cs
test
subb
or
dec
pop
jb
cmp
pop
repnz
sarl
pminsw
in
arpl
into
aas
push
mov
shll
add
enter
push
call
xlat
ret
fistpl
js
sahf
mov
pop
movsl
add
sarb
in
sub
adc
push
repnz
shlb
add
outsb
pop
add
leave
xor
movsl
pop
adc
sub
scas
cli
xchg
mov
addl
icebp
push
lcall
push
or
xchg
dec
push
ds
shll
rcll
cmp
imul
sbb
es
lea
inc
or
ds
or
lods
cmp
hlt
js
pop
jge
adc
fimuls
test
fsubp
cmp
sahf
or
or
jno
daa
add
jmp
aaa
mov
push
int
xchg
sbb
cwtl
mov
dec
mov
loop
rolb
lret
jo
and
arpl
dec
mov
dec
pop
sub
xorb
icebp
sbb
jp
aad
lods
sahf
mov
cmpsb
cmp
aam
into
jb
inc
fwait
insl
pop
sarb
sbb
cmp
mov
and
test
faddl
in
dec
pop
fwait
push
cmp
test
or
call
mov
pop
cmp
push
sti
jo,pt
xlat
push
scas
sbb
or
push
xor
fildll
mov
rcr
subl
mov
adc
jg
stos
ds
sub
out
push
mov
lea
inc
mov
insl
fstpl
mov
mov
xchg
push
bound
pop
fcoms
jne
pop
bound
ret
out
sbb
dec
jle
and
adc
das
mov
out
jl
push
mov
add
fwait
imul
insb
fs
imul
dec
sbb
xchg
ds
cwtl
pop
push
mov
dec
xchg
inc
push
cmp
rcrb
sbbb
je
scas
pop
push
into
mov
add
pop
lahf
pop
add
test
pop
push
sub
cmpsb
sub
and
cmpsb
dec
or
aas
scas
mov
sub
xlat
sub
clc
mov
shrl
inc
add
cltd
in
pop
mov
jae
mov
lds
ret
xchg
cs
mov
jmp
push
cmp
dec
adc
sbb
lds
movsl
pop
ret
jns
out
push
dec
jns
into
sahf
dec
loope
and
cmp
xchg
and
mov
outsb
sbb
xchg
mov
ljmp
fsubrl
xor
scas
mov
xchg
adc
xchg
fdiv
xchg
xchg
push
movsb
popf
sub
mov
test
ljmp
sbbl
xchg
sub
cmp
jns
cwtl
sub
mov
clc
movb
ljmp
add
inc
pop
sti
enter
fstps
add
std
enter
sbb
call
inc
lock
or
jns
push
push
test
aaa
aad
mov
cmpsl
cmpsl
mov
enter
adc
inc
mov
shlb
mov
sbbb
das
inc
mov
clc
js
dec
mov
xchg
pop
fs
daa
pop
negb
je
int3
ret
jl
push
jno
lock
mov
adc
sbb
cmp
xchg
lds
orb
pop
push
rorb
push
jae
inc
push
ds
xchg
stos
ret
test
inc
movsb
cmp
or
lret
inc
mov
jne
aaa
test
mov
in
mov
jnp
or
or
lcall
lret
add
fistps
dec
cmp
insb
dec
xor
add
cmpl
push
pop
inc
loopne
xor
scas
push
mov
xchg
pop
pop
xor
das
hlt
sub
clc
mov
push
inc
mov
jb,pn
push
pusha
sub
sahf
test
outsb
daa
or
add
fcomps
pop
insl
mov
aas
dec
jge
rolb
into
out
pop
and
adc
aas
pop
call
repz
and
mov
ljmp
pop
or
mov
and
aas
mov
sub
inc
xchg
jae
je
cmp
mov
mov
clc
das
jb
push
bound
add
xor
imul
adc
mov
add
arpl
pop
inc
fs
mov
or
jb
mov
jmp
in
mov
dec
mov
adc
add
ds
mov
push
sbb
fcmovb
movsl
lea
sub
lds
push
xchg
aas
ja
dec
or
shrl
lods
pop
stos
scas
adcl
lock
xchg
lock
xchg
sub
mov
ds
stc
inc
add
insb
sbb
adc
push
sbb
sbb
inc
scas
stc
rcrb
mov
jecxz
sub
lods
enter
int3
jns
mov
push
pop
cmp
dec
xor
dec
or
or
push
and
adc
mov
imull
cwtl
rclb
jp
xchg
xor
in
push
xchg
fiaddl
in
dec
jb
pop
pop
xlat
outsl
movl
and
and
mov
mov
sbb
bound
dec
jnp
xchg
cld
jns
mov
dec
js
cmp
pop
xor
and
movsb
in
enter
or
mov
out
call
test
mov
pop
in
fdivr
lcall
cmp
das
mov
lock
aam
xchg
inc
sbb
mov
fwait
out
jl
cmp
stos
ss
into
dec
mov
adc
lock
pop
mov
pop
push
shlb
xchg
sub
mov
cltd
add
jl
cmp
enter
dec
cmp
rorb
push
mov
je
sub
mov
inc
dec
in
inc
rclb
shl
insl
adc
ljmp
fdivr
cli
movsl
sub
cmpsb
xor
mov
add
cltd
ss
fsubrl
sbb
gs
jmp
jle
cmpsl
jge
jle
and
out
sub
sub
lret
push
addb
or
cs
inc
or
xlat
sbbb
jle
mov
notb
inc
faddl
xor
shl
inc
stos
and
sarl
stos
cwtl
jnp
pop
inc
clc
add
outsl
jecxz
lock
filds
sbbb
ljmp
inc
mov
pop
add
xorb
xchg
cli
cmp
fsubs
clc
cmp
xchg
xlat
fmul
dec
mov
mov
rcl
mov
mov
ss
out
loope
mov
leave
cs
pop
test
aad
cs
enter
inc
jae
push
xchg
lods
data16
sub
jl
jne
aam
push
orb
pop
cmc
inc
sbb
test
aaa
push
sbb
cs
push
aaa
dec
frstor
sbb
cmp
mov
rclb
bound
push
pop
mov
add
pop
mov
hlt
test
jne
popf
rorl
ret
sub
int3
add
dec
xlat
add
mov
shll
push
or
lret
faddp
adc
mov
mov
js
fisubrs
js
lcall
jg
es
stc
cs
pusha
arpl
pop
outsl
xchg
test
addr16
inc
lea
xchg
testl
sbb
mov
dec
jp
push
dec
push
pop
call
xchg
in
repz
fildl
mov
pop
and
mov
pop
mov
icebp
dec
jg
loopne
cltd
stos
lods
mov
jne
ret
shlb
mov
in
mov
fnstsw
sub
test
cmp
in
stc
push
mov
or
repz
xchg
arpl
add
popf
repz
pop
and
sbb
jmp
xor
add
daa
mov
xlat
out
fcmovbe
hlt
in
sahf
call
adc
adc
adc
push
xchg
fwait
cli
test
stos
sub
inc
rorb
jp
pushf
xlat
lods
stos
lods
sbbl
mov
in
pop
mov
xchg
repz
dec
inc
inc
outsb
test
adc
and
ja
sbb
inc
pop
or
das
ss
lea
pop
outsb
jge
sub
filds
cmpsb
bound
scas
cld
in
fistpl
sti
cmp
daa
mov
clc
pop
mov
pop
xor
lea
inc
mov
aaa
add
mov
mov
mov
aam
sub
jmp
es
cld
lds
xrelease
sahf
repnz
pop
lock
pop
dec
xor
adc
insl
into
out
femms
push
flds
aas
movsl
push
xor
nop
stos
jp
andb
call
pop
lret
cli
pop
xor
loop
shlb
sub
dec
xor
sbb
pop
aaa
adc
cmp
aas
nop
or
xchg
cmp
xlat
push
loope
push
adc
or
jbe
or
sub
mov
fstpt
scas
rcr
add
sub
das
repnz
add
aaa
jmp
push
or
mov
fwait
cmpsl
in
push
add
mov
jle
mov
aaa
xchg
testl
repz
mov
jb
push
mov
cwtl
je
jg
xchg
scas
std
and
pop
mov
adc
mov
push
jns
push
aaa
and
pop
iret
lahf
push
adc
js
mov
dec
sar
ja
push
lea
ret
push
push
add
jb
jg
ja
mov
hlt
mov
sbb
hlt
arpl
es
scas
or
and
sub
and
in
pop
mov
xchg
aas
xor
cmp
cwtl
aam
mov
sbb
popa
push
pop
sub
je
xchg
clc
pop
sbb
cmpb
popa
jecxz
rcr
push
or
testl
sbb
push
pop
dec
inc
lock
je
sub
scas
lock
cwtl
rclb
mov
rcrl
jmp
jmp
sbb
movsb
int
aas
scas
lret
or
out
test
fdiv
int3
daa
xor
or
push
mov
clc
pop
and
test
cli
subb
cwtl
enter
sbb
fldcw
dec
cmp
adcl
dec
mov
push
imul
xchg
dec
scas
bound
push
jmp
in
cs
mov
data16
hlt
jns
push
or
cmpsl
xor
or
rcrb
rcll
andl
outsl
ss
jne
int3
test
out
or
xor
scas
jae
jmp
jl
jns
mov
jg
dec
push
dec
fs
xchg
and
cmpsl
cmp
arpl
push
xchg
mov
pushf
mov
inc
pop
sbb
sahf
jae
aam
sti
pop
xchg
incl
aaa
pop
jae
ja
mov
jmp
fstps
lock
sbb
dec
lahf
std
or
mov
test
lds
call
push
dec
push
mov
mov
stos
int
or
loop
les
push
imul
or
dec
jge
and
call
orb
mov
mov
sbb
ret
idivl
xchg
mov
cmpsl
idivl
mov
sbb
push
and
pop
or
or
ret
push
jnp
mov
cmpsb
dec
in
enter
in
jno
addb
jmp
adc
sbb
fwait
mov
fstp
sub
cmp
push
cld
inc
pop
xchg
jns
std
push
aas
pop
mov
jnp
ljmp
cmp
fildl
in
daa
fs
insl
mov
add
xchg
icebp
iret
mov
sbb
inc
sub
loope
icebp
cli
shll
bound
sahf
cmp
inc
sub
sbb
jno
xchg
shll
or
xchg
aam
fsubl
outsl
jno
sub
jle
mov
ds
fwait
push
pop
ret
aaa
test
xchg
xchg
call
xchg
xor
ds
enter
shrl
imul
jne
lds
mov
lods
rclb
repnz
insb
lods
fstpl
test
shrl
push
ss
jb
movsb
xchg
rorl
xlat
adc
adc
xchg
mov
lds
sti
add
lret
and
cmp
mov
movsb
push
pop
ret
or
inc
bound
cwtl
out
sbb
mov
mov
push
sbb
sbb
add
jns
and
lret
call
adc
out
push
xchg
sub
ljmp
jbe
xchg
inc
mov
ja
add
fldt
pop
pop
jno
test
incb
clc
adc
or
pop
or
ret
push
mov
sub
int3
ds
and
jl
fwait
pusha
jno
add
fisttpl
cmpsb
cmpb
sub
cld
sub
push
fdivr
dec
xor
call
cmpsb
pop
xor
addr16
lret
je
jmp
insl
jns
js
bound
and
divl
inc
adc
hlt
push
ret
adc
dec
insl
fcoml
test
popf
mov
dec
xor
push
xchg
mov
adc
lcall
pop
or
cmp
iret
or
xchg
fisttpl
add
mov
repnz
inc
notl
rep
xchg
lcall
mov
ljmp
jecxz
fwait
rolb
cmp
aam
cltd
adc
pop
mov
mov
jecxz
aaa
lret
xlat
and
fst
sub
out
int3
lods
xlat
or
ret
xor
inc
mov
mov
sub
dec
pushf
mov
aaa
fsubl
stos
jb
jnp
es
loopne
jbe
sbb
push
push
cmp
push
mov
fisubs
enter
dec
lods
inc
sub
jecxz
or
jae
rorl
nop
cmp
jmp
cmpsb
fs
inc
and
jno
mov
cs
scas
out
scas
aaa
add
xchg
mov
leave
addr16
pop
cmp
adc
and
push
mov
dec
mov
ret
cwtl
push
outsb
pop
jae
sbb
leave
xchg
xor
outsl
cmp
mov
loop
in
push
xlat
push
pop
push
movsl
xchg
dec
xor
push
and
sub
fists
arpl
popa
out
adc
mov
xlat
jg
or
test
dec
ret
negl
in
out
aaa
enter
ud1
xchg
out
pushf
cmpsl
or
fnstenv
sti
jnp
outsb
repz
test
push
mov
dec
je
cld
jns
aas
movsb
push
lods
add
fisubl
call
fmuls
lcall
adc
sbb
ret
repz
mov
dec
repz
lcall
ljmp
stos
fs
add
cmpsl
xchg
xchg
ret
js
mov
jecxz
sbb
dec
sbb
ffreep
push
ds
ljmp
inc
jl
hlt
mov
in
loop
or
pushf
adc
or
jae
cmpb
sbb
mov
imul
arpl
loope
mov
sbb
fucomip
dec
inc
pop
pop
jns
pop
out
rcll
xor
fnstenv
cmp
ljmp
in
mov
push
mov
adc
mov
push
mov
sbb
and
lret
popf
push
shll
push
cmp
add
dec
jle
sbb
mov
ficompl
and
popa
xor
fcoml
loope
adc
jmp
xchg
scas
pop
push
cltd
les
sti
or
mov
xor
xchg
mov
or
data16
aam
into
pop
mov
jae
outsl
leave
ret
fnstenv
mov
mov
imull
pop
ret
jecxz
jb
dec
es
pop
clc
test
enter
add
test
add
idivb
test
stos
lahf
aaa
push
js
cmp
ss
xchg
scas
sub
out
dec
adc
sbb
ja
jnp
imul
lods
xor
pop
and
in
cmp
xor
stos
std
pop
cmpsb
sbbb
or
adc
das
ret
jg
cwtl
push
cmpsb
loopne
enter
fisubs
fsubr
xor
scas
pop
movsl
jl
jle
loop
sti
out
mov
cltd
ss
aas
clc
dec
cld
daa
fiadds
fcompl
mov
mov
insl
cmpsb
mov
mov
ljmp
outsb
xchg
cs
push
enter
out
lahf
lock
dec
mov
in
xlat
push
pop
push
or
and
inc
popa
fsub
bound
or
and
mov
add
ljmp
bound
out
jns
nop
repnz
je
idivb
dec
cwtl
std
sbb
inc
mov
fnsave
and
iret
dec
cld
push
push
mov
sub
icebp
dec
add
push
xchg
mov
sahf
jno
mov
stos
push
or
into
jno
jmp
mov
push
les
rorb
pushf
lahf
sbb
pop
loope
jo
inc
aad
fdivs
repz
pop
push
jb
arpl
jns
mov
add
cmp
cmp
cmp
sbb
pop
addr16
pop
xchg
or
add
mov
sbb
sub
out
test
outsl
test
and
or
stc
cmp
adc
movsb
enter
push
fwait
sbb
cltd
mov
add
xchg
xchg
cmp
xchg
sub
scas
pop
xchg
xchg
les
fs
jecxz
dec
clc
push
pop
push
stos
dec
mov
sub
sti
pop
push
daa
inc
jge
mov
jb
mov
in
mov
lahf
mov
jnp
rclb
sahf
mov
xchg
movsl
cs
adc
pop
mov
inc
in
movsb
add
jbe
adc
jae
and
xor
mov
test
dec
jbe
fwait
or
push
outsl
fadd
mov
in
testl
xlat
int3
adc
call
rcrl
and
into
out
pop
jno
shlb
or
sbb
cmp
push
gs
repnz
adc
popl
subb
add
imulb
test
fidivs
inc
rcrb
stos
jb
cs
stos
sbb
add
or
mov
mov
mov
int
xchg
xor
test
sub
mov
pop
jno
fwait
int3
and
mov
and
pop
pop
pop
outsl
adc
leave
add
mov
inc
mov
fisubrl
lahf
push
sbb
pop
mov
in
out
icebp
popf
xchg
cmpsb
in
push
in
cld
icebp
and
xlat
fidivrs
pop
popa
retw
sti
jmp
mov
adc
inc
jne
jl
cmp
or
out
sub
fmulp
jo
jle
ds
int
pop
cmp
add
pusha
jmp
xor
pop
cmc
dec
cmp
cmp
jo
dec
xchg
daa
push
xchg
push
in
jp
test
inc
adc
dec
in
mov
inc
sbb
ficoms
xor
mov
sbbb
test
jbe
scas
stos
and
cli
out
clc
mov
sbb
add
cs
sbb
loopne
enter
xchg
arpl
std
sbb
sti
jnp
dec
dec
adc
mov
fidivrs
fcoml
mov
shrl
out
adc
push
xchg
mov
adc
sub
test
in
xchg
aam
cmpl
sub
cli
dec
shlb
lea
mov
std
scas
adc
push
out
sbb
aas
icebp
add
std
xchg
push
sub
or
rol
adc
roll
pop
mov
rclb
jmp
mov
movsl
lock
jl
mov
inc
in
pop
mov
movsb
stos
or
mov
mov
call
int3
lds
and
repnz
inc
ja
pop
inc
aas
pop
or
lods
fidivrs
xchg
in
sub
bound
inc
lock
mov
and
push
insl
dec
mov
testb
mov
repnz
jmp
jl
push
imul
es
stos
and
and
ret
sbb
into
and
jmp
sub
ret
or
dec
push
cmp
popa
fcomi
or
int3
clc
lcall
aad
pop
jae
pop
xchg
mov
fdivl
in
xchg
shlb
mov
ret
xor
cwtl
sub
xor
hlt
mov
sti
dec
ret
mov
pop
inc
cld
jp
pop
or
in
fsubrs
repz
lea
or
or
push
into
push
call
xchg
xor
lods
and
adcl
daa
nop
imul
shl
cltd
test
int3
dec
xor
xchg
loop
push
inc
lea
test
xchg
mov
arpl
xor
ljmp
mov
mov
pop
cmp
mov
mov
and
push
int3
loope
repnz
aam
in
clc
jmp
push
push
icebp
push
push
outsb
mov
dec
xorl
push
sub
nop
ret
imul
jns
sar
ja
adc
jbe
je
lods
insb
xor
aaa
lret
imul
pop
xchg
cli
jo
and
push
pop
inc
xchg
push
push
repz
out
js
mov
sahf
push
dec
cmc
inc
mov
cmp
xorl
call
dec
movsb
das
mov
xchg
cmp
mov
adc
push
neg
lods
pusha
sarb
aad
mov
xchg
sar
mov
test
sub
cmp
stc
les
push
dec
jbe
and
jmp
xlat
xchg
mov
popa
cmpsl
mov
insb
shlb
or
push
push
cmp
or
out
faddl
add
or
sti
dec
inc
push
les
sub
ret
and
daa
scas
aam
daa
or
dec
dec
dec
fwait
lahf
pop
lret
pop
icebp
clc
scas
sbb
stc
and
movsl
jl
cmpsl
pop
mov
loope
pop
mov
pop
sbb
push
pop
out
pop
mov
xor
sub
mov
fmuls
test
lea
or
cmp
mov
or
sahf
rcll
jge
mov
mov
mov
fstl
popa
xchg
in
clc
js
out
or
mov
mov
lock
outsb
into
orl
xchg
rorl
xchg
mov
in
fistpl
subl
mov
test
decl
mov
jle
xchg
jno
or
cwtl
faddl
sbb
pop
cmp
sarl
mov
fs
xor
xchg
or
mov
push
cld
fnstcw
out
cmp
call
mov
in
xchg
inc
mov
std
and
fidivrs
scas
lret
push
out
cmp
mov
daa
jecxz
dec
mov
and
xor
mov
movsl
aad
mov
fisttpll
ljmp
andb
cmp
xor
jmp
pop
or
fsubrl
pushf
adc
mov
pop
aam
pop
clc
stos
jns
pushf
or
ret
push
or
je
fs
sarb
stos
or
dec
mov
xchg
xchg
outsl
cmp
stos
lods
cmp
aas
adc
push
sbb
pop
in
jl
pop
sti
pop
cmpsb
in
or
sub
add
ret
mov
test
cmp
pop
in
repnz
insb
or
cmp
push
sti
fwait
es
cmp
ror
mov
fwait
mov
and
inc
ds
repz
sub
jecxz
lahf
push
sub
mov
and
xor
loopne
mov
adcb
dec
imul
cltd
hlt
rolb
outsb
mov
inc
in
out
incb
push
inc
jmp
xchg
sbb
lds
xchg
xchg
or
sbb
es
cmp
dec
clc
mov
or
mov
cwtl
cmp
push
mov
daa
outsb
inc
jl
dec
pop
mov
cmpsb
or
sub
aad
push
or
daa
sub
pop
xchg
dec
bound
xchg
in
xchg
in
xor
and
movsl
jp
lcall
jne
and
scas
int3
cmp
in
aaa
dec
and
add
cmp
or
lea
sub
lret
jmp
les
daa
fs
in
pop
push
dec
jne
lods
jge
mov
sub
push
repnz
sub
dec
jg
dec
cmp
jecxz
or
dec
jb
loop
mov
das
lcall
pop
cmp
test
cmp
lret
fbld
and
push
jp
fsubrl
aas
data16
pop
sub
in
data16
mov
add
xchg
sbb
shrl
stos
gs
in
into
dec
or
scas
adc
jne
xor
lods
mov
adc
fsubl
push
incl
and
shr
push
out
mov
push
inc
sub
movsb
sub
fwait
and
scas
in
hlt
hlt
repnz
jnp
test
and
and
cmpsl
xchg
cli
pushf
mov
iret
or
push
and
mov
pop
dec
jg
int3
push
xchg
outsb
mov
xchg
and
out
and
adc
jb
push
ret
lcall
jp
add
inc
mov
popf
push
sbb
jbe
cwtl
out
out
adc
pop
add
or
mov
je
loop
loop
cltd
pop
push
add
dec
or
mov
mov
dec
out
subl
and
pinsrw
ret
mov
ret
cli
and
mov
mov
mov
pushf
sub
inc
daa
outsl
xor
ss
jg
sub
jl
fwait
nop
lahf
jne
sbb
xor
pop
pop
mov
pop
insb
add
inc
cmp
mov
lahf
xchg
pop
pop
xlat
cmpsb
outsl
sub
cmp
cltd
out
sbbl
sti
lret
or
out
movsb
sbb
das
repnz
sbb
cmp
jg
sub
outsl
into
fisttpl
and
push
inc
adc
dec
sub
xchg
add
jle
sub
out
das
test
xor
mov
cld
push
jle
cmp
mov
xchg
push
stc
std
std
push
gs
xchg
jbe
scas
sub
cli
sub
dec
cmpsl
push
and
sub
cmc
dec
xor
stos
add
cmp
mov
gs
mov
sbbl
iret
sbb
xchg
in
shr
xlat
mov
and
movb
scas
inc
add
sub
lahf
roll
inc
test
lret
enter
push
pop
adc
mov
test
and
iret
sub
aam
inc
stc
mov
and
dec
pop
and
pop
mov
shlb
in
fabs
std
jns
jnp
lcall
mov
mov
outsl
test
jg
fidivrs
jnp
flds
mov
vunpcklps
jns
add
jae
pop
and
xchg
pop
sub
cwtl
add
xchg
call
gs
cmpsl
inc
mov
pushf
jl
xchg
xor
push
mov
mov
popa
xchg
sahf
cmc
arpl
sub
push
and
mov
stc
mov
add
xor
dec
shrb
gs
out
mov
sbbl
xor
or
jae
cmpsb
fdivrs
cmp
in
sti
inc
mov
ret
xchg
sub
cmp
add
inc
mov
adc
pop
dec
lahf
add
jnp
sbb
push
cmp
nop
test
xlat
pop
cmp
lahf
push
clflush
iret
fidivrl
addr16
xchg
popf
not
cmp
hlt
arpl
lret
jnp
xchg
pop
jns
or
ja
xchg
inc
lods
shl
test
into
cmp
mov
inc
daa
inc
adc
jmp
mov
jge
mulb
xchg
dec
push
dec
repz
push
clc
pop
jnp
mov
fists
sub
xchg
push
lods
pop
frstor
data16
clc
jle
lods
sbb
jp
imul
mov
inc
jb
loope
mov
arpl
pop
imull
push
dec
loop
pop
push
push
hlt
mov
xor
fadds
sub
out
add
pop
add
add
sbb
jne
mov
bound
push
movsl
mov
mov
sub
push
dec
insb
add
cmp
push
push
jne
lea
push
fcmovnb
add
jmp
out
cmp
push
sub
mov
mov
xor
mov
aam
push
js
fmul
in
rclb
cmp
cmc
fyl2x
test
hlt
lret
xchg
mov
sub
fcoml
pop
or
test
cmpsb
addr16
mov
and
jle
sbb
and
cmpsl
repnz
mov
aas
mov
inc
xchg
cmp
jns
mov
inc
xor
clc
add
xor
sar
cmp
mov
push
xor
cli
sub
in
jmp
pop
push
mov
pop
movsb
std
test
jns
dec
movq
cwtl
xor
movsb
and
xor
hlt
mov
inc
sahf
mov
mov
mov
sbb
xor
mov
int
ret
pop
fwait
xchg
cmp
fsub
jle
or
xchg
pop
cmpsl
or
addl
sahf
fmull
rorl
pop
scas
mov
inc
xor
add
cmpsl
mov
ss
ret
mov
xor
lahf
xchg
ss
scas
lock
fsubr
dec
aas
adc
cmp
jge
stos
in
pop
xchg
jae
mov
cmpsl
add
and
dec
clc
cld
inc
push
stos
dec
sahf
mov
mov
cmpsb
sub
dec
lret
mov
iret
xchg
xchg
aaa
inc
adcl
iret
imul
adc
and
xor
adc
inc
mov
test
into
out
adc
fisubs
dec
adc
scas
push
add
out
xor
adc
and
repz
int3
call
shll
and
xor
sarb
mov
add
in
push
test
adc
and
mov
fwait
sub
adc
cmp
pushf
jmp
stc
sbb
adc
push
sbb
xchg
aam
cwtl
ljmp
or
mov
adc
clc
stc
inc
push
test
and
and
cli
in
rclb
fwait
cmpb
rolb
mov
stos
jecxz
pusha
mov
iret
xor
lcallw
dec
push
lretw
clc
xchg
push
xor
sbb
stos
xor
xor
divb
out
mov
dec
xchg
and
sbb
xchg
cmpsl
lret
add
jmp
hlt
xor
xor
adc
adc
stc
mov
test
or
inc
rorl
fcmovnb
je
rorb
ficompl
call
xchg
mov
cmp
xchg
cltd
inc
rcr
inc
inc
icebp
clc
jge
push
in
jl
movb
push
pop
pop
cmpsb
mov
insl
pop
jbe
andl
jnp
mov
movsb
out
hlt
add
lods
and
xor
in
adcb
movsl
adc
inc
sub
adc
jbe
icebp
or
jae
cmp
iret
popa
leave
fsubp
mov
dec
out
dec
mov
xor
xchg
lock
or
pop
jmp
pop
jecxz
loopne
jae
sub
jb
xor
sub
movsl
push
lods
icebp
and
pop
push
inc
mov
push
stc
push
push
mov
or
repnz
cmp
out
cmp
movsb
jecxz
mull
push
inc
or
fldt
xlat
pop
aas
nop
out
in
stos
inc
testb
cmp
push
push
xchg
adc
in
inc
into
out
add
fsts
andb
pop
push
adc
dec
inc
ss
lods
into
imul
out
adc
cmp
fdivrl
popa
xlat
aas
sbb
test
xor
ja
popf
stos
mov
out
outsl
dec
fcompl
dec
inc
and
pushf
movsl
test
insb
enter
int
lret
or
mov
xchg
idivl
pop
jl
sbb
adc
push
sbb
ficoms
cmp
jmp
loop
aad
xchg
and
xchg
pop
gs
or
neg
jmp
rcrl
sub
arpl
aaa
or
in
scas
add
or
int3
test
aas
mov
call
fbld
cwtl
jg
sti
jnp
and
fstl
pop
repnz
mov
pop
jns
push
neg
rol
inc
mov
leave
cmp
mov
scas
addr16
xorl
sbb
test
push
add
xlat
lahf
inc
jno
jl
adcb
ds
adc
inc
lods
stos
xor
push
sbb
lret
ds
xchg
dec
sbbb
jmp
addr16
xchg
or
mov
ret
mov
xor
rcrb
fld
gs
test
xchg
inc
push
test
mov
sbb
xor
push
push
jmp
mov
pop
dec
xchg
push
test
imul
jno
lock
sub
dec
xchg
push
addb
je
ss
es
xchg
xor
arpl
and
inc
push
push
inc
sbb
out
ret
mov
mov
push
dec
dec
jo
popa
xchg
push
cmp
push
push
test
ja
adc
ret
mov
add
push
cmp
fiaddl
adc
adc
xchg
mov
dec
test
or
rol
iret
fstl
add
test
imul
pop
sbb
dec
in
enter
out
fisttps
into
aas
push
jle
test
pop
mov
push
in
mov
or
inc
mov
mov
pop
mov
mov
mov
mov
dec
mov
lahf
xor
mov
pusha
and
out
cmp
mov
lahf
or
ret
add
aaa
fidivs
lock
pop
cmp
out
mov
cwtd
mov
jge
out
xchg
mov
dec
ja
repnz
inc
lods
outsl
push
push
imul
psllw
push
bound
in
out
inc
gs
adc
push
pop
push
push
ret
xchg
push
add
subl
dec
xchg
xchg
mov
insl
aam
sub
lahf
rcl
sub
push
inc
fadds
cmp
jno
sbb
popf
les
stos
sbb
fistpll
jne
jge
mov
negl
push
mov
cltd
gs
pusha
aam
push
cmp
push
daa
pop
addr16
push
ja
jmp
or
inc
shlb
insl
xchg
jne
lahf
ret
imul
popf
negb
ds
cld
dec
xchg
out
or
jnp
sbb
fists
hlt
lods
xchg
out
fucomip
ret
rcr
pusha
dec
sub
mov
sub
divb
jp
movsl
pop
fcmovb
jg
add
cltd
sbb
mov
cmp
cmp
push
and
jle
push
out
fldenv
icebp
les
mov
push
sub
jmp
aaa
xor
sbb
mov
dec
adcl
fmuls
pop
cmp
inc
adcl
jmp
pop
and
jmp
ja
or
fwait
sub
xor
mov
aaa
pop
push
aad
pop
inc
stos
int3
push
pop
pushf
je
ret
pushl
call
test
adc
jle
iret
inc
or
cmpsl
loope
add
and
cs
xchg
cmp
jne
adc
push
in
stc
jo
je
bound
mov
lahf
lock
jae
icebp
mov
sub
push
fxch
pushf
lds
sahf
xchg
mov
cli
arpl
pop
pop
mov
inc
mov
mov
mov
sbb
in
or
xor
inc
aam
mov
pop
pusha
fidivl
and
cmpsl
out
repz
mov
imul
shll
icebp
xchg
test
call
je
out
addr16
ja
ret
jnp
lret
xlat
jbe
mov
sbb
in
out
out
lahf
stos
loope
mov
jmp
add
push
and
lret
mov
fmull
jne
fsubrs
cmpsl
stos
ret
sbb
dec
or
subb
cmp
ret
mov
mov
mov
js
addr16
popf
movzbl
lea
mov
mov
xchg
push
push
push
shlb
negb
insl
jb
repz
push
icebp
jl
test
inc
cmp
dec
xorl
sbbl
push
cmp
gs
dec
pop
xor
mov
imul
fldpi
dec
repz
inc
pop
lret
subl
icebp
push
lock
aaa
ljmp
movsb
loope
loope
aad
testl
out
mov
outsb
pop
push
fs
fstl
push
dec
push
xacquire
in
xchg
rcrl
pop
movsb
mov
sbb
jne
arpl
push
jae
enter
movsl
push
xorb
and
sbb
jns
mov
pop
stos
lods
dec
jno
scas
icebp
pushf
fildl
xor
dec
jo
and
test
insb
sbb
xchg
mov
inc
cmp
xor
sub
out
cmp
popa
lds
div
popa
aam
pop
xor
mov
popa
sub
pop
push
loopne
mov
pop
push
jnp
xor
or
sbb
dec
ficomps
inc
repnz
mov
and
and
and
mov
lods
jae
sbbl
xlat
mov
add
dec
sti
adc
xor
mov
dec
or
aad
rclb
into
sub
push
push
xchg
mov
dec
mov
popa
dec
xchg
lods
mov
pop
inc
and
cmp
bound
and
nop
stc
sub
xlat
in
or
adc
dec
cmpsb
into
or
out
inc
arpl
movsl
orl
adc
push
cmpsb
mov
mov
ja
ds
push
lcall
push
xor
imul
insl
test
gs
daa
rcll
out
rol
xchg
or
fcoms
sbb
in
mov
pop
fsts
jg
mov
aad
cmp
stos
sbb
addr16
mov
arpl
push
daa
mov
in
push
les
out
cmp
incb
jnp
push
xchg
lahf
mov
idiv
rcrb
cwtl
shll
push
in
mov
shl
les
fsincos
cld
or
shrl
jb
scas
fs
cmp
out
pop
mov
adc
lock
jo
andb
jo
and
mov
mov
leave
js
sbb
in
jb
xchg
adc
inc
jg
pusha
cmpsb
rcll
push
scas
fildl
outsl
scas
or
out
mov
insb
sti
jl
insl
adc
add
push
fwait
inc
cmp
das
dec
adc
popa
out
pop
stc
in
scas
aam
loopne
sbb
rolb
shr
push
imull
loop
jl
mov
push
mov
and
rorb
dec
fadd
je
aas
sarl
dec
xor
mov
sbb
test
leave
out
mov
add
mov
lock
movsl
mov
mov
sub
jne
mov
pop
and
je
ljmp
mov
mov
xor
cmp
xchg
outsb
fimuls
sbb
sub
pop
mov
iret
lods
lcall
push
push
mov
push
push
pop
or
add
ja
std
mov
rcrb
xchg
sub
dec
stc
pop
ffree
cs
test
pop
jmp
add
push
pop
pop
test
pop
pop
cmpl
or
sbb
fisttpl
daa
daa
sbb
lods
pop
enter
jo
mov
or
and
hlt
ljmp
dec
sub
das
pop
imul
jp
mov
pusha
inc
xchg
xchg
jp
divb
push
dec
pop
shll
and
jmp
dec
mov
xchg
mov
lock
cmpsl
adc
fwait
or
fisttps
add
jge
aaa
fsubrs
loopne
mov
lcall
scas
xchg
adc
pop
and
inc
cmc
xchg
xchg
aam
mov
lods
xchg
push
sub
add
xchg
mov
mov
les
push
data16
sbb
loop
jge
mov
call
gs
xchg
sbb
idivb
cli
fstpl
pop
xchg
sbb
enter
jp
adc
jo
ficompl
adc
cs
icebp
out
cltd
nop
mov
sbb
pop
cmpsb
cmp
xchg
outsl
subl
and
je
nop
cmp
arpl
out
repz
mov
bound
xlat
add
push
sbb
xlat
aad
imul
cmpsb
xchg
inc
mov
push
mov
cmc
pop
lret
sbb
hlt
pop
int
out
xor
adc
imul
sbb
inc
stos
outsl
dec
mov
test
add
mov
std
nop
dec
mul
xchg
popa
sbb
inc
sahf
add
mov
add
popf
cwtl
pop
sub
push
mov
ret
xchg
push
js
sbb
call
ljmp
fldt
aam
ja
fwait
or
inc
push
lea
jo
push
and
mov
mov
xor
cwtl
icebp
jl
addr16
xchg
xchg
mov
inc
outsb
pop
insl
mov
xchg
aas
jp
loopne
movsl
push
and
xor
cld
inc
cmp
jnp
in
rcrb
int
and
or
fsubrl
testb
pop
js
popf
add
mov
mov
movsb
shl
jnp
loopne
sbb
cmpsb
fnsave
mov
imul
fwait
lods
ficoms
dec
xchg
jno
xor
jle
out
push
stc
je
mov
xor
test
pop
adc
fsubrp
push
ljmp
mov
das
dec
lods
xchg
mov
push
fstpt
push
xchg
push
jmp
imul
fs
cmp
fldt
xor
or
ss
mov
daa
lret
jbe
cmp
gs
sbb
sti
jbe
outsb
stos
test
outsl
dec
ljmp
mov
inc
int3
add
push
push
push
sub
stc
mov
pop
or
pop
push
jns
ret
jnp
adc
leave
es
loopne
cltd
daa
xchg
adc
and
test
mov
xor
push
lods
cmp
and
xor
jg
jmp
clc
inc
testb
xchg
xor
mov
xchg
in
mov
daa
cltd
add
addr16
rorl
pop
xor
and
sarl
or
iret
and
add
je
jb
pop
lret
pop
and
inc
mov
jae
lods
and
cwtl
pop
test
cmc
and
test
and
stos
cmp
outsb
sub
into
xchg
mov
sbb
in
sub
adc
iret
inc
xchg
imul
andb
xor
sub
test
shlb
outsl
loop
and
test
lcall
orb
bound
jne
es
int
and
mov
aaa
inc
inc
dec
jecxz
cmp
sbb
mov
out
cmc
negl
adc
mov
shr
and
or
mov
fiadds
arpl
ret
jle
jne
aas
aad
outsl
xchg
arpl
push
push
fidivrs
dec
mov
sub
sbb
mov
and
push
sbb
push
add
test
cmp
pop
mov
das
movsb
fs
push
jecxz
and
jae
mov
jg
sbb
aaa
loope
jae
adc
out
or
lods
test
fisttpl
rcrl
test
shll
mov
jg
test
fisubrl
cmp
les
mov
scas
cmp
xlat
addr16
test
or
sahf
push
xchg
cwtl
sbb
pop
ficomps
jle
sahf
push
outsl
pop
dec
pushl
call
mov
ljmp
mov
out
lret
sbb
cld
cmpb
clc
js
add
test
lea
or
gs
sub
cld
inc
or
xchg
das
mov
and
fwait
sahf
out
or
mov
pop
enter
or
jns
cmpb
fldenv
sbb
daa
cmp
ja
cmp
jp
add
or
mov
mov
jp
scas
pop
add
ja
push
and
in
cwtl
lret
mov
filds
insb
and
jmp
outsl
lds
add
xchg
push
ljmp
inc
popa
test
jge
adc
js
add
mov
scas
iret
sbb
and
pop
fisttps
or
cmp
mulb
paddd
rcrb
lods
jge
add
push
cmpsl
jae
or
test
int3
jns
sub
gs
pop
pop
pop
out
adc
or
dec
test
loopne
sub
push
jne
xchg
nop
pushf
out
leave
loope
testb
imul
mov
pushf
test
lock
scas
dec
call
aas
insb
in
xchg
push
add
out
aas
loopne
mov
test
out
inc
sub
push
jnp
cwtl
lahf
cmp
out
push
push
ss
das
xorl
and
addb
in
dec
fldenv
push
enter
daa
aaa
xchg
dec
lahf
xchg
cmp
pusha
xor
jle
jg
mov
out
sub
fsubrs
fildll
and
imul
int3
out
jle
mov
or
scas
mov
jo
inc
or
popa
leave
pusha
dec
inc
pop
jno
mov
aas
mov
mov
pop
je
cmc
add
loopne
out
push
sbbl
sub
xor
or
mov
test
sbb
fcompl
cmc
pop
cmp
les
lock
jge
and
addr16
add
pop
cmpsb
mov
in
push
pop
lock
popf
or
mov
inc
dec
jmp
push
pop
cmc
mov
leave
jne
mov
js,pn
pop
jmp
pop
lods
sbbl
add
incb
jnp
pushf
ss
loope
daa
into
fists
mov
mov
addr16
xchg
or
sub
sbb
fdivrl
xchg
int
add
in
es
push
ds
pop
mov
shlb
pop
data16
mov
and
fdiv
mov
jae
test
ret
mov
jnp
jo
add
cwtl
je
fistl
jno
xchg
shlb
sub
jb
iret
dec
mov
mov
mov
mov
pop
outsl
mov
cmpsl
sbb
mov
inc
fmuls
adc
xor
and
jmp
ficomps
adc
pop
in
mov
pop
repz
incl
orb
scas
psubd
movsl
dec
xor
daa
aam
sbb
lea
cmc
lods
sub
xchg
shlb
sbb
xchg
popa
xor
mov
xchg
push
sarl
mov
or
or
into
and
mov
push
lock
mov
in
pop
push
xlat
or
jns
test
sbb
sub
jecxz
dec
pop
sahf
leave
fstps
xchg
jbe
cmp
pop
adc
jae
test
dec
mov
add
sub
movsl
in
xchg
les
or
dec
jecxz
mov
mov
bnd
lcall
movsb
push
and
rorl
and
cmp
dec
mov
xchg
outsb
jmp
jno
loop
xchg
loopne
xchg
pop
movsb
pop
std
rcl
add
rcrb
xchg
mov
add
push
in
cmp
push
jns
sarl
or
jo
or
stos
cld
jnp
cld
mov
push
lds
je
dec
int
adc
jge
je
lds
shl
inc
adc
test
ds
mov
ret
movsb
cmp
push
and
xlat
cmp
stc
dec
xchg
or
push
in
dec
aas
aad
fldpi
xor
fs
aad
or
lds
fs
out
in
dec
push
inc
imul
sub
cmpsb
cltd
ret
or
push
mov
test
nop
test
cmpsl
movsb
jno
icebp
sub
mov
mov
inc
into
cmp
xchg
lcall
icebp
pop
push
xchg
add
outsb
into
inc
mov
clc
cld
outsb
cmp
xlat
sti
in
aam
daa
inc
sbb
addr16
dec
loopne
stos
jl
idivl
sarl
jno
sub
insl
je
xchg
and
ret
push
mov
daa
mov
cmp
and
jecxz
dec
mov
xchg
lds
int3
les
outsb
sub
popf
or
sbb
push
or
in
push
cmpsl
cmpsl
lds
test
pop
xlat
pop
leave
ficoml
inc
jae
mov
mov
divb
pop
repz
nop
xchg
daa
sbb
stos
clc
cmp
inc
aam
add
lahf
in
mov
iret
movsb
clc
sbbl
dec
aad
xchg
push
push
mov
sbb
sub
aaa
out
sbb
add
mov
dec
dec
cltd
cmp
and
pop
jg
adc
bound
outsb
xchg
mov
xchg
mov
lods
cmp
insb
lahf
pop
repnz
pop
inc
pop
mov
test
xor
call
pop
mov
mov
stos
in
paddq
sbb
mov
sbb
int3
and
lahf
in
call
ja
pushf
popa
cmp
mov
in
movsb
frstor
jl
xchg
or
cmp
cmpl
push
das
mov
mov
or
test
adc
shlb
les
mov
push
xlat
ret
dec
out
adc
ljmp
addr16
ljmp
cmpb
push
aaa
dec
dec
pop
cmpsl
jp
in
inc
pop
adc
fiadds
push
test
in
pop
mov
push
fs
jb
cld
js
rorb
xchg
xchg
dec
outsl
add
inc
xchg
nop
fistps
jecxz
cmp
outsl
call
leave
cli
fisttpl
ror
jns
orl
add
addr16
mov
shlb
pop
xlat
cmp
scas
in
negl
sub
dec
sub
cmpsb
repz
lahf
inc
ds
jno
jo
sub
push
inc
sbb
bound
add
jmp
push
xor
dec
jge
lahf
shll
lods
cld
cmpsb
fwait
push
push
lods
mov
outsl
aaa
sub
int
test
clc
jle
ret
cltd
add
push
cmovo
fistpl
mov
stc
pop
push
dec
or
popf
movsl
int
cwtl
or
fisubl
jo
mov
in
jl
jmp
sub
call
jl
cmpsb
out
mulb
cld
or
inc
cltd
xor
gs
mov
mov
imul
mov
mov
daa
arpl
test
lods
rcrl
in
push
int
mov
jno
jmp
xchg
in
jmp
or
data16
jae
mov
xor
dec
push
insb
push
fnstcw
mov
pop
sub
lods
mov
addr16
push
inc
ss
sub
sub
or
adc
jnp
leave
push
inc
cli
fs
insb
inc
movsb
lret
sbb
cld
pop
cmpsb
cltd
inc
xchg
fs
adc
mov
push
scas
out
repz
lods
fldt
adc
and
lcall
jge
das
and
aas
popf
dec
loopne
adc
mov
loope
dec
enter
int
leave
pop
ss
inc
sbb
cmp
or
insl
ss
or
cs
mov
push
push
add
fnstcw
pop
adc
lds
sub
and
lods
ljmp
cmp
xchg
hlt
hlt
lods
call
daa
sti
add
xchg
mov
rclb
movsl
daa
pop
and
sub
jns
mov
mov
scas
pop
fstl
lret
ja
and
jge,pt
cmp
sbb
dec
ret
xchg
push
mov
xchg
dec
mov
cwtl
jp
sti
leave
xchg
cld
rorb
cmp
inc
dec
loop
andb
fidivrs
inc
out
imulb
jp
cmp
in
mov
test
xor
pop
sbb
jl
and
sbb
fldt
xchg
sbb
dec
push
mov
mov
loopne
xchg
cmpsl
out
inc
xor
sbb
or
or
pop
rolb
int3
cmp
cli
mov
aaa
cmp
pop
mov
aad
pop
movsl
sub
lret
sub
or
jns
mov
test
jbe
leave
pop
mov
or
xchg
mov
push
pop
jp
fcoms
cmp
pop
dec
stos
sbb
sub
adc
pop
cwtl
subl
mov
lock
xor
pushf
push
sbb
pop
adc
loopne
jmp
mov
pop
sbb
push
cwtl
sbb
mov
pop
push
negl
call
sbb
push
pop
leave
outsl
orl
mov
and
cwtl
push
test
shl
pop
pop
out
icebp
or
aas
add
or
pusha
fdivl
push
push
add
jmp
outsl
push
pop
stos
pop
lods
shl
cmpsb
jl
in
lods
fsubs
insb
incb
pop
cmp
rcrb
icebp
imul
out
sub
into
xchg
xor
mov
push
in
repz
inc
cmpsl
jne
adc
add
sub
dec
or
xchg
jecxz
outsl
xchg
scas
out
and
pop
sbb
push
in
gs
out
adc
jbe
imul
add
and
pop
cmp
add
mov
pop
sahf
mov
or
pop
xlat
cmp
sbb
scas
mov
mov
in
adc
std
cmp
add
addl
fistpl
inc
ds
cmp
pop
and
push
and
jmp
jge
addb
ficompl
in
jg
mov
xlat
test
xlat
dec
push
xchg
loope
outsl
div
push
pop
stos
push
loope
gs
mov
scas
push
imul
notw
sbb
daa
dec
sub
mov
divl
push
add
outsl
jne
stos
lods
test
and
popf
insl
pop
ja
test
inc
scas
iret
xor
xor
insb
daa
clc
lret
jle
mov
popf
mov
ja
mov
cmp
aad
or
mov
push
mov
mov
push
xchg
mov
mov
pop
add
cmp
push
push
jmp
mov
push
and
mov
lcall
es
repnz
and
jnp
clc
jge
lds
imul
fiadds
popf
daa
xchg
inc
inc
daa
leave
pop
cmp
scas
push
sti
and
push
xchg
ja
or
dec
cmpsl
sub
pop
cmp
cmp
xchg
mov
fwait
add
popl
cmpsb
adc
mov
into
cmp
lret
sub
dec
push
test
sub
addl
adc
sub
xchg
sub
inc
fdivl
mov
dec
test
ljmp
les
lahf
or
mov
mov
pop
or
das
out
dec
sbb
test
and
jmp
jg
outsl
lahf
fwait
xchg
movsb
insb
mov
inc
xor
inc
gs
mov
pop
std
icebp
orl
int
add
ret
popa
push
push
dec
sti
mov
push
adc
and
inc
into
mov
mov
icebp
and
cli
jg
ds
inc
sub
jecxz
hlt
mov
or
lahf
cmovns
repz
cltd
fadds
sar
es
mov
push
xchg
faddl
fcoms
xchg
sti
sub
je
sbb
sub
fidivl
push
jno
jle
add
nopl
mov
arpl
subb
lea
mov
push
repz
jecxz
cmc
or
cmp
cmp
pop
icebp
mul
std
out
mov
xor
mov
insl
fstpl
popa
test
mov
movsb
cmpsl
in
leave
mov
add
nop
jbe
test
and
jge
mov
mov
je
adc
mov
jp
sbb
lods
int3
and
in
xchg
sbb
adc
dec
sti
jne
fidivrs
mov
inc
orl
pop
sbb
cmp
push
insb
div
xlat
hlt
outsb
and
fadd
push
imul
imul
test
data16
fdivrs
pop
sbb
fwait
aaa
ds
sbb
out
test
jae
sub
mov
jl
clc
stos
outsw
sbb
mov
push
shll
pop
pop
xor
xchg
cmc
fnstcw
sub
and
and
sbb
mov
shlb
add
test
mov
adc
in
test
push
loope
clc
nop
fdiv
adc
test
cwtl
push
inc
add
jecxz,pn
push
push
and
and
xchg
das
cmp
push
insl
push
out
rol
jo
mov
push
jl
out
in
lahf
insl
xor
neg
hlt
mov
adc
imul
fucom
pop
outsl
push
hlt
dec
imul
rol
or
es
out
dec
sbb
dec
sub
scas
rol
push
push
mov
xchg
icebp
sarl
pusha
xor
sti
cs
data16
sti
pop
cmp
rolb
clc
out
sub
test
sti
shrl
dec
mov
repz
out
arpl
pushf
subb
cmp
fisubl
mov
lods
xchg
push
cmp
jbe
cld
adc
pop
inc
push
mov
mulb
jp
lods
cmp
push
jbe
dec
fisubl
incb
pop
push
int3
sahf
aaa
jo
pop
jb
sbb
ja
xchg
imul
xor
mov
movsb
cmpsb
cli
in
popf
mov
xchg
dec
fs
aad
lds
sarb
sub
icebp
pop
sub
dec
sbb
xor
jecxz
sub
xchg
xlat
loop
push
mov
lds
les
insb
pop
outsl
popa
mov
movd
jecxz
aaa
loopne
ss
repz
pop
enter
leave
pop
std
inc
in
popf
inc
mov
pusha
push
jo
add
mov
mov
xor
nop
sub
aaa
cmp
leave
into
add
mov
shll
notb
call
inc
in
inc
dec
mov
jle
aad
aas
testb
loopne
mov
bound
mov
cmp
mov
xlat
pop
pop
movl
sub
stos
fwait
inc
sub
inc
dec
mov
cmp
fsub
scas
incb
mov
dec
push
lods
pop
clc
mov
xor
xchg
dec
cmp
fwait
xchg
dec
mov
dec
jnp
dec
inc
dec
mov
sahf
arpl
cmp
xchg
mov
cmc
scas
sti
pop
ja
mov
mov
out
push
outsl
pusha
lods
ret
aaa
sahf
imul
jmp
mov
movsl
in
mov
popa
adc
jne
mov
and
jl
adc
int3
adc
push
out
call
mov
jle
and
incl
jo
xchg
mov
inc
shr
lea
pop
and
sti
sbb
sbb
sti
movsb
pop
add
jbe
mov
xchg
mov
cmp
xchg
mov
test
fabs
dec
or
fs
mov
mov
scas
cmpsb
imul
ja
lret
pop
orb
adc
jae
cs
add
mov
ret
mov
pop
cmp
push
dec
inc
les
or
in
stos
sahf
sub
sar
push
fcomi
sti
lock
jl
bswap
inc
pop
arpl
xchg
in
add
mov
push
int
pop
dec
inc
bound
mov
push
mov
pop
leave
or
clc
and
fisttpl
dec
test
fxch
cmp
push
inc
xchg
mov
daa
test
or
mov
inc
repz
out
cmp
lea
mov
cmp
daa
insb
stos
add
insl
fidivl
lahf
shlb
aad
push
insb
shrl
pushf
mov
outsl
sbb
mov
int3
and
inc
cmp
fsubrs
rcrl
mov
mov
pop
fistps
shlb
or
gs
imul
mov
mov
cs
rol
jl
inc
fbld
sbb
xchg
leave
aam
fistpl
not
jmp
mov
dec
push
dec
mov
jecxz
fcoms
push
jl
pop
ja
negb
pop
mov
push
std
cmp
icebp
sbb
add
or
fs
cli
mov
ds
jno
in
push
adc
es
hlt
call
mov
iret
add
insl
hlt
push
or
xchg
dec
lds
test
loope
shl
sbb
call
mov
xor
loope
push
test
mov
ljmp
and
mov
rcll
dec
rcll
loop
mov
mov
mov
mov
xchg
out
push
addr16
lret
adc
iret
out
mov
cs
mov
ror
rcrb
dec
daa
loop
mov
bound
add
mov
adc
xchg
jp
adc
pop
pop
xor
mov
cmp
xor
lock
fimuls
aad
mov
add
movsl
push
jp
inc
inc
cmp
mov
mov
and
inc
dec
fistpl
sub
xchg
jns
mov
jmp
aaa
pop
dec
cmp
xchg
jp
movsl
sbb
data16
xchg
and
ljmp
xchg
jno
xchg
out
dec
call
rorl
ss
lods
into
mov
jno
cmpsl
mov
lahf
mov
jne
adc
mov
mov
dec
popf
jns
pop
adc
jg
out
aas
addr16
and
out
ja
aam
loop
push
mov
sbb
test
shlb
sub
fst
or
lock
testb
fidivrs
test
or
xchg
andb
dec
test
push
sarl
aas
lds
lds
jmp
cwtl
subl
adc
stc
scas
push
scas
and
push
fdivr
lea
stos
lahf
daa
in
mov
movsl
loope
inc
or
movsl
sbb
std
pop
imul
xor
xor
in
rcr
and
jge
sbb
dec
mov
sahf
inc
incb
lods
dec
xchg
testl
pop
cmpl
lods
inc
aaa
pop
xchg
xchg
popa
aam
inc
lea
rorb
or
gs
imul
or
mov
out
cmpsl
or
fistl
sbb
mov
in
hlt
mov
push
call
add
push
jp
mov
in
int
lods
cmp
pop
jnp
insl
insl
lcall
sbb
xchg
imul
ffreep
in
pop
add
inc
xor
std
mov
test
pop
push
sahf
dec
inc
and
add
pop
fnstcw
ss
push
sub
dec
push
mov
mov
fisubrs
movsl
ret
adc
daa
pop
add
sub
rcrb
test
xor
sub
xchg
or
or
loopne
insb
or
es
data16
mov
inc
repnz
dec
sbb
sahf
jecxz
gs
or
cmp
cmp
push
xor
sub
pop
mov
dec
push
jecxz
in
sbb
xor
imul
cmp
movsb
stos
push
adc
stc
mov
xor
mov
jp
or
pop
dec
arpl
pushf
fisttpl
xchg
sbb
sub
lret
mov
call
inc
mov
add
inc
inc
or
push
inc
pop
int
push
pop
push
push
bound
testb
sub
xlat
xlat
int
call
mov
mov
pop
mov
and
mov
insb
lcall
mov
cmp
out
ror
jmp
mov
decl
adc
loop
loope
outsl
fisttpll
mov
cmpl
pop
mov
fs
out
lahf
inc
addr16
or
jmp
xor
or
xchg
test
movsb
adc
lods
cmp
inc
mov
cmp
and
inc
and
jmp
out
jnp
out
mov
mov
or
xor
mov
xor
pushf
cmp
ja
fs
push
jae
inc
sub
fwait
popa
jecxz
scas
mov
adc
call
adc
sbb
mov
stc
aaa
and
stc
sti
scas
xor
fcomp
or
cld
dec
ret
jmp
dec
int3
and
daa
jbe
add
cmp
negl
stos
gs
cld
xor
stos
or
int
sub
loopne
jl
mov
xchg
jo
ljmp
cmp
mov
sarb
pop
into
push
adc
loop
stos
test
mov
cmp
or
movsl
push
mov
insl
es
lods
pop
sub
sahf
fstl
fdiv
dec
push
enter
out
pop
stos
xchg
adc
bound
mov
in
add
cs
xlat
repnz
pop
gs
adc
scas
sub
mov
imul
pop
inc
lret
repnz
ret
fmuls
xchg
fnsave
sub
sub
pusha
rorl
adc
xchg
adc
iret
rcrl
pop
iret
shll
sbb
lods
pop
push
mov
sub
push
add
inc
arpl
add
dec
jecxz
mov
cmp
fnstcw
hlt
add
push
lods
test
dec
sarb
dec
testb
mov
cmp
cmpsb
or
in
es
xchg
stos
inc
lret
sub
int3
inc
decl
xor
pop
aam
dec
cld
aam
outsl
daa
cli
jo
cltd
std
jae
mov
sti
fdiv
lea
mov
enter
mov
xchg
ja
es
xlat
sbb
les
xchg
not
lcall
sbb
jle
mov
add
mov
mov
out
inc
std
shr
aas
repnz
loop
dec
mov
pop
push
testl
cmp
mov
mov
das
push
clc
scas
jbe
cltd
xchg
ret
inc
jnp
jecxz
cwtl
loope
cmpb
ja
or
lock
pop
ret
push
inc
stos
fistps
loopne
jno
inc
call
rol
inc
jae
shlb
ret
out
lcall
mov
xchg
or
mov
dec
fcoms
xchg
xor
add
dec
fmull
adc
pop
push
repz
repnz
xchg
adc
mov
xchg
cmc
sub
mov
lcall
test
push
pop
out
sub
aam
pop
insb
sbb
xor
jne
dec
add
mov
std
test
sbb
mov
je
rcl
pop
ficompl
fistps
enter
inc
stos
push
inc
sub
mov
xchg
loope
mov
lret
push
in
cmp
std
cmp
inc
das
xchg
call
lds
frstor
jmp
xlat
pop
addl
es
xchg
testb
cmc
xchg
mov
in
jno
popa
cwtl
pop
sbb
insl
inc
mov
dec
mov
dec
gs
les
and
out
mov
pop
fnstcw
or
push
out
jle
lcall
mov
mov
cmpsb
fistl
mov
cld
clc
sbb
push
repz
out
loope
rorb
cmc
inc
push
sbb
push
testl
push
aad
or
mov
jge
dec
mov
test
jae
sbb
lea
das
stc
rcll
adc
les
rcrb
adc
lcall
add
sbb
mov
test
loope
and
mov
addr16
aaa
aam
xchg
outsl
dec
add
pop
mov
jmp
or
hlt
pop
add
ss
xlat
push
jg
addr16
jmp
mov
mov
xchg
sub
sub
pop
out
cmpsl
push
pushf
mov
mov
loope
jnp
sti
imul
out
jne
or
sub
stos
pop
dec
cld
mov
cmp
js
js
pushf
in
jmp
rorb
pop
mov
inc
jg
es
add
pop
bnd
xor
rclb
jle
setp
inc
mov
mov
ja
or
sbb
fiaddl
xor
mov
mov
push
sbb
xor
jb
jns
inc
clc
fcmovnu
out
push
std
out
lods
sbb
mov
jbe
xchg
ret
cmpsl
xlat
cmpsl
fmul
mov
and
inc
pop
mov
fildll
sbb
mov
arpl
cmp
or
shr
fs
mov
inc
movsb
or
inc
ficompl
stos
out
and
data16
in
mov
push
cmp
pop
lods
push
xor
pop
mov
and
mov
push
inc
imul
in
add
enter
mov
cmp
cmpsb
lods
sbb
pusha
push
mov
stos
mov
insl
dec
xchg
and
add
inc
inc
loopne
arpl
sub
fwait
sahf
jge
dec
xor
mov
pop
sbb
and
adc
stos
mov
cld
dec
inc
mov
jecxz
xchg
or
cs
popf
dec
push
mov
lds
jge
or
cmpsl
pop
scas
xchg
mov
ljmp
in
movsb
lahf
dec
xor
add
call
fildll
les
inc
ja
xchg
mov
shl
pop
ja
mov
je
and
ljmp
lods
aam
push
pop
scas
push
loopne
jae
pop
js
movsl
mov
popa
addb
mov
scas
pop
sub
shll
adc
insl
cmp
mov
pop
imul
scas
adc
jno
cltd
xlat
xor
ret
mov
ficoms
mov
fwait
mov
gs
mov
pop
arpl
fimuls
xchg
fs
mov
xchg
test
rep
xor
or
cmpsl
clc
or
sbb
sub
pop
and
mov
cmpsl
cs
mov
shlb
outsl
mull
dec
inc
push
inc
icebp
lods
das
gs
je
push
mov
insb
daa
mov
aas
inc
cmpsl
sub
xchg
mov
jp
fsts
testl
out
pop
lds
xor
roll
mov
pop
fdivrp
sub
xchg
hlt
lahf
cmpsb
and
adc
mov
stos
outsl
mov
jecxz
repnz
mov
add
add
xor
jo
insb
cltd
test
addr16
and
dec
test
out
aaa
mov
or
jno
call
lods
inc
ljmp
mov
pop
std
jl
inc
cmp
sub
xchg
xchg
inc
mov
pop
add
imul
dec
std
adc
dec
add
or
sub
pop
xchg
jb
dec
notl
movsl
mov
sub
ss
jl
or
insl
out
mov
xor
and
mov
in
inc
clc
dec
mov
aad
sbb
lock
jmp
jmp
std
xchg
in
test
lcall
push
xor
xchg
mov
mov
mov
mov
push
cltd
imul
push
aam
std
lds
or
daa
scas
mov
jl
adc
xchg
test
cmp
out
adc
ja
je
scas
xchg
rcrl
push
adc
ljmp
push
mov
fsubrl
sti
mov
addr16
xchg
ds
lock
xchg
or
enter
cmpsl
cmpsl
push
or
sub
push
push
add
sbbb
mov
stc
ja
sahf
ja
outsb
mov
pop
cltd
push
cmpsl
inc
sbb
sub
shr
mov
and
push
cwtl
and
cwtl
mov
cmp
je
fnstsw
push
mov
negl
stos
push
loope
pop
arpl
rcrl
xchg
lret
in
adc
call
jae
adc
pop
test
mov
pop
sub
dec
cmp
sub
jp
xlat
pop
mov
cld
loop
test
mov
ja
out
cmpsb
hlt
dec
scas
sub
test
jle
push
test
sub
mov
push
mov
in
xchg
sti
scas
jge
pop
jmp
aad
stc
xlat
ds
ficomps
outsl
sbb
jl
imul
int
test
xor
subb
sub
cmp
fdivrs
fistpll
dec
into
xor
mov
sub
sbb
enter
or
xchg
push
decl
or
insl
push
pop
mov
cmp
js
inc
imull
push
or
dec
push
pop
push
adc
dec
scas
xchg
add
pop
int3
aas
mov
inc
jge
insl
pop
sahf
cmp
adc
push
lcall
jp
imul
jnp
cmc
and
or
mov
mov
sbb
aaa
add
int
sbb
jbe
push
xchg
adc
and
adc
jp
inc
jge
adc
cwtl
cmp
popa
or
adc
movsb
and
sub
test
imul
out
ja
pop
mov
lea
or
jmp
in
cmp
inc
xchg
xchg
hlt
push
mov
xchg
and
xchg
sarl
cmp
outsl
aam
jno
cmp
jns
pop
pop
mov
mov
mov
or
mov
push
cmc
addr16
es
lock
pop
push
jp
testl
inc
add
pop
jo
and
xor
arpl
xchg
dec
mov
stos
subl
ret
xchg
mov
addr16
shrl
pop
aaa
pop
cmp
sub
add
mov
jp
cmpsl
cmpsb
xchg
xor
cltd
lods
sub
inc
add
lea
aaa
sub
mov
scas
mov
inc
xchg
sub
inc
inc
jo
xlat
sub
pop
cmpsl
adc
fst
shlb
js
mov
sbb
or
cmp
sbb
add
test
insb
sub
push
add
fidivl
adc
into
sub
pop
loop
pusha
jno
sbb
call
or
cmp
pop
xor
sbb
iret
cmpsb
mov
xor
ss
shll
inc
dec
cmp
cltd
imul
cmp
fbld
inc
aas
and
xlat
cli
mul
push
dec
jmp
popf
outsl
movsl
clc
in
test
dec
aad
test
and
fsubs
loope
sbbb
test
push
es
and
pop
imul
xchg
stc
mov
cmpsb
out
adcb
out
sahf
dec
pop
stos
and
jmp
int
int
push
fsts
and
dec
cmp
pusha
fsubr
push
sbb
cmp
jp
cmp
mov
cmp
nop
arpl
ds
pop
ljmp
ss
xchg
and
test
jne
mov
mov
mov
push
fdivrl
xor
push
dec
cmp
jns
push
test
cmp
das
shl
rcl
pushf
ficomps
push
mov
sub
call
in
out
bound
jnp
inc
in
push
sub
and
jle
in
push
jnp
sub
push
xchg
insb
cli
push
pop
adc
enter
idivl
ret
mov
lahf
stc
mov
add
addr16
popa
fwait
pop
mov
subb
or
mov
cmp
sbb
xchg
jg
adc
pop
xorb
mov
and
dec
mov
andb
mov
mov
xlat
mov
jno
fdivrs
xor
mov
ret
and
cmp
mov
cwtl
cmp
fiaddl
sub
test
push
test
sub
or
xlat
jp
mov
test
mov
sub
js
insl
out
push
es
scas
fdivl
mov
addr16
inc
sbb
mov
mov
in
mov
mov
push
fwait
and
push
xor
push
pop
push
jnp
mov
les
jge
outsl
sub
inc
test
fldt
nop
ljmp
sub
out
xchg
push
pop
adcb
cmp
mov
and
jge
jbe
pop
cmp
mov
sbb
jle
ficoms
pop
enter
sbb
stc
push
xchg
aad
lea
ds
mov
mov
imul
call
lcall
pop
fnstsw
lcall
ja
cmpsl
imul
into
cmpsl
push
stos
jmp
movsl
jno
jecxz
movsl
test
aad
shl
fstpl
mov
std
jb
inc
jo
jl
ss
in
je
scas
cmp
shrb
adc
push
iret
push
cmp
push
lea
cmp
mov
lods
pop
lods
outsb
lret
ja
bound
xchg
push
dec
push
bound
pop
add
and
dec
lea
inc
jbe
pop
das
mov
or
xchg
mov
insl
mov
outsb
sub
les
pop
pop
mov
push
mov
mov
sub
push
clc
inc
and
comiss
pop
mov
dec
and
ja
push
insb
pop
scas
lods
outsb
sub
push
xchg
cli
cmp
jmp
test
sbb
enter
out
mov
rclb
dec
cmp
mov
push
push
jl
mov
or
pop
push
movsl
push
dec
imul
stos
mov
mov
mov
rcr
test
jno
cmc
push
stc
dec
arpl
stc
push
fdivr
sbb
pop
push
add
hlt
cmpsl
mov
shl
pop
aad
mov
push
ret
pop
ss
sti
push
mov
jno
and
roll
test
sub
pop
sub
insl
mov
adc
fwait
test
sub
or
scas
lods
xlat
inc
cld
adc
jecxz
das
daa
fsts
inc
rolb
mov
inc
movsl
jae
ds
aas
negl
andb
xchg
or
mov
outsb
adcl
sbb
imul
adcl
arpl
cs
mov
out
sti
jbe
addb
or
js
mov
iret
add
mov
jmp
xchg
adc
leave
lock
into
fadds
out
dec
xchg
in
sbb
popl
loop
scas
test
adc
sbb
je
push
inc
jo
popf
dec
lcall
out
sahf
jnp
stos
enter
push
mov
outsl
rcrl
rcrl
jno
jb
mov
nop
daa
add
sbb
pop
mov
in
xlat
arpl
mov
repnz
les
enter
sbb
inc
xlat
xchg
dec
jno
xchg
data16
mov
fcoms
mov
ret
leave
std
cltd
inc
push
inc
mov
lea
push
sub
mov
out
shll
repnz
scas
xchg
data16
rcrl
jl
sbb
mov
adc
mov
nop
push
lods
movsl
aam
rolb
inc
push
sub
dec
mov
pop
data16
fs
push
add
sbb
mov
pop
sbb
orl
jp
dec
cmp
orb
push
mov
and
fcom
push
roll
shrb
lds
rcr
push
add
cmp
fistpl
notb
push
inc
mov
push
xchg
mov
ret
jp
inc
jecxz
dec
jno
push
inc
movsl
lahf
cwtl
dec
mov
pop
mov
jns
mov
test
sbb
xor
enter
pop
mov
jecxz
and
xor
mov
dec
fwait
daa
sar
xor
js
xchg
in
lcall
inc
rolb
jno
pusha
jno
aaa
sub
pop
imul
jne
loop
xchg
mov
adc
sbb
sub
cwtl
pop
sub
shr
push
add
iret
add
sub
arpl
cwtl
adc
pop
or
lret
and
je
mov
adc
inc
aad
or
shll
or
mov
cmp
mov
ljmp
mov
dec
adc
push
decl
add
push
mov
cld
mov
out
push
sbb
loopne
lret
sub
xor
stc
scas
sub
dec
shrb
adc
inc
lea
stos
pop
pop
jnp
xchg
into
int
dec
sbb
in
sbb
mov
or
inc
fdivl
cltd
xchg
lods
inc
cmp
adc
cwtl
adc
xchg
arpl
push
push
mov
and
test
or
jo
adc
inc
sahf
fstps
add
fdivl
call
push
outsb
xchg
jo
dec
mov
xchg
rcr
mov
cmp
jecxz
ja
fst
call
lods
lods
jecxz
daa
mov
dec
sub
out
pop
jne
ficompl
mov
mov
mov
daa
inc
sub
cmc
imul
in
aaa
xchg
adc
add
push
mov
orl
adc
adc
cmpsl
or
pop
inc
call
xchg
pop
dec
call
pop
hlt
dec
xor
movsl
add
push
cmc
push
in
shll
adc
dec
lock
in
lret
cmc
push
mov
inc
jo
icebp
adc
pop
mov
sbb
push
inc
mov
mov
stc
adcb
adc
sbb
test
in
pop
insb
lods
cs
jge
lahf
dec
mov
mov
addps
mov
imull
ret
ja
and
repz
pop
jp
subb
loopne
pop
jno
xchg
aaa
pop
xor
fs
bound
cs
cwtl
in
stos
inc
in
rorl
xchg
mov
adc
or
ljmp
mov
aad
fwait
repnz
lahf
scas
out
daa
sahf
repz
mov
stos
and
addr16
int
pop
pop
lock
fdivp
cmp
xlat
cmc
pop
test
shl
xchg
sbb
js
daa
roll
into
mov
xchg
or
insb
test
push
and
mov
push
adc
jecxz
add
xchg
cmp
ds
mov
sbb
add
jo
dec
or
aaa
cmp
pop
xor
scas
cmp
daa
xor
add
hlt
adc
mov
sub
push
stos
add
mov
in
enter
cwtl
nop
mov
cmp
cld
xchg
cmp
adc
add
into
ja
pushf
leave
cmp
enter
test
jno
lcall
lret
mov
out
popa
add
adc
into
mov
xchg
or
daa
imul
adc
outsb
cmp
push
adc
mov
sbb
pop
daa
out
int
xchg
call
sub
dec
sbb
jmp
test
jmp
mov
or
dec
cmpxchg
insb
outsb
leave
push
sbb
jb
loop
mov
push
pop
aaa
inc
push
stos
lahf
pop
sbb
stos
and
lods
mov
lcallw
aad
sbb
std
repz
and
test
ret
sub
es
sbb
cwtl
cmp
dec
pop
mov
mov
jbe
scas
out
sbb
popf
mov
pop
xchg
xchg
sbb
push
mov
aaa
mov
bound
mov
mov
jg
lcall
add
cld
xchg
fidivrs
or
mov
add
es
cmpsl
in
loopne
mov
test
push
sub
rclb
aam
subl
sbb
ja
daa
xor
lock
out
andb
loop
vucomisd
sarl
out
adc
lea
xor
movsl
js
movsl
daa
out
xlat
int
xor
ficompl
dec
gs
mov
shlb
pop
ficompl
clc
test
mov
stos
ds
pop
shl
jns
mov
mov
sub
pop
cmp
dec
pop
dec
pop
dec
fucomp
mov
pop
lahf
mov
in
jl
jno
mov
loop
jo
inc
sbb
stc
jmp
mov
add
cmp
cmp
int
mov
cmp
lds
outsb
nop
dec
inc
xor
add
or
adc
pop
push
or
mov
xchg
iret
adc
pop
call
push
add
dec
aam
mov
pop
lock
sub
dec
popa
dec
test
jnp
inc
in
jnp
cmp
jmp
mov
cmpsl
insl
popa
aad
in
sahf
mov
pop
dec
adc
cli
jnp
jno
in
pushf
inc
lds
es
adc
aad
push
test
adc
jne
mov
push
or
cs
out
mov
sti
test
in
scas
pop
or
adc
out
sbb
mov
lock
outsl
hlt
lds
jmp
mov
xchg
mov
enter
fsts
lds
ljmp
mov
incl
add
jg
push
inc
nop
test
xchg
ds
jmp
mov
or
in
xor
imul
xchg
icebp
mov
mov
mov
xchg
loopne
jmp
or
xchg
ja
xchg
lret
mov
test
xlat
idivb
add
push
push
loop
cmp
stc
std
fwait
nop
cmpsl
in
ret
aam
cmp
pop
scas
jmp
jge
mov
arpl
mov
mov
mov
movsb
jbe
xorb
icebp
lea
mov
outsl
test
or
adc
xrelease
sbb
xor
mov
movsb
jnp
xorb
xor
sti
out
ret
pinsrw
loopne
jle
adc
sub
xor
clc
lahf
imul
jl
mov
adc
jb
add
or
xchg
clc
daa
mov
negb
subl
and
adc
pushf
dec
sbb
mov
xchg
sbb
fwait
pop
mov
shll
jnp
insb
arpl
fwait
jle
loop
rolb
add
ret
lret
mov
or
aas
mov
jns
dec
cmpsb
shlb
loope
push
dec
ja
push
pop
jp
out
jns
mov
jbe
dec
frstor
lods
pop
push
scas
orb
orb
and
mov
subl
into
and
cmp
enter
xchg
xor
sbb
adc
cmpsb
popf
leave
push
outsl
mov
inc
lcall
jbe
int
in
cmp
std
std
std
sbb
fisttps
in
inc
sub
dec
cmp
ja
sahf
push
lea
inc
mov
mov
jle
mov
jnp
or
xlat
aaa
sbb
add
pop
movsb
mov
jmp
lahf
or
cmp
ret
or
in
stos
test
div
lods
jge
ret
xchg
test
inc
test
inc
leave
xchg
mov
add
or
mov
jecxz
xchg
and
push
xchg
mov
repz
pop
stos
insb
testl
xchg
jmp
push
add
mov
cltd
sbb
jmp
mov
decb
lahf
enter
mov
out
dec
cmp
ds
cltd
ret
insb
push
mov
clc
and
xchg
xchg
xchg
loop
aad
add
and
xchg
sbb
out
cmp
fs
es
pop
mov
xchg
or
xor
jg
loop
fs
pop
mov
or
dec
fisttps
jg
mov
jbe
imull
xor
inc
inc
std
mov
cmp
fcoml
xchg
shrb
sub
or
sbbl
mov
pop
sbb
adc
push
and
mov
xchg
push
test
cmp
jle
pushf
add
xchg
sbb
jg
cmp
test
test
fcompl
movsb
cli
push
mov
popf
jnp
adc
cmpsl
fld
sub
pushf
pop
fidivrl
sbb
and
sub
sbb
sub
xchg
test
jle
xchg
std
push
popf
lret
or
jg
ret
repz
dec
notl
mov
pop
sarl
pop
jg
or
and
cmpsl
pop
ss
jns
insl
test
mov
cmp
les
xlat
mov
inc
xor
add
mov
ds
pop
leave
sti
lret
hlt
mov
dec
or
cmp
les
mov
aad
xor
fs
and
mov
pop
mov
std
js
shrb
mov
dec
loop
ja
popf
add
sub
mov
mov
cltd
outsl
gs
test
pop
out
pop
aaa
fistpl
loopne
iret
pop
sbb
mov
lcall
add
or
idivb
sbb
xchg
leave
mov
push
ret
js
cmp
mov
xchg
pop
sub
sub
repz
cli
mov
push
fidivrs
scas
popf
sub
xchg
mov
xchg
lds
dec
in
dec
mov
xor
movsb
cmp
and
jp
int
xchg
fsubr
hlt
jbe
xchg
xchg
add
scas
fiaddl
sub
test
sbb
loop
aaa
clc
sbb
fiaddl
loop
sub
stc
cmpsl
ret
xor
pop
mov
jbe
pop
int3
xchg
jnp
xchg
imulb
lods
mov
pop
dec
int3
shlb
stc
flds
xchg
lret
pop
sub
or
aaa
aad
lods
xchg
stos
sub
jl
xor
in
test
mov
push
lds
cmp
fcom
pop
mov
scas
ja
push
adc
cmpsl
movsb
popa
xchg
lods
daa
mov
mov
mov
fsts
cmp
aas
mov
into
xor
mov
fimuls
hlt
sub
sti
and
mov
scas
cmp
jge
or
ja
dec
mov
push
pop
jg
aaa
and
test
push
pushf
adc
subb
or
int
mulb
mov
add
sti
xchg
out
cmc
cltd
push
arpl
push
fiaddl
jo
cmpsl
test
iret
ds
int
pop
pop
mov
or
sahf
jmp
dec
rclb
hlt
or
test
adc
lea
add
arpl
fisttpl
cmp
add
jnp
rolb
icebp
test
xor
xor
out
adc
rorl
mov
outsb
cli
or
insb
scas
jns
or
cmp
cmp
sub
out
jnp
cmp
roll
loop
pop
data16
bound
push
mov
in
or
mov
mov
sub
sbb
fsubrl
es
out
cmp
mov
and
and
test
aam
mov
pop
mov
fnstsw
adc
data16
or
xchg
popa
addl
mov
gs
mov
out
sbb
xor
jmp
dec
and
and
xlat
mov
fiadds
xchg
mov
loope
sbb
pop
test
jbe
call
in
mov
in
push
pop
imul
movsb
out
mov
or
stc
push
addr16
push
out
shll
data16
xchg
ljmp
inc
das
mov
fwait
cwtl
fnsave
add
add
xchg
in
loop
sbb
mov
js
fldenv
sub
test
jge
cs
pop
ret
ret
sub
cwtl
xchg
jbe
xchg
and
pop
movsb
dec
jo
ds
mov
xchg
lock
xchg
sbb
jecxz
jbe
in
in
jno
push
je
outsl
mov
lds
ret
loope
hlt
and
idivl
jo
inc
lret
add
push
jnp
shr
xbegin
cmp
add
cwtl
insb
ja
fs
xchg
js
frstor
hlt
into
ret
clc
xor
shl
or
in
xchg
adc
add
xor
icebp
test
cmpl
and
mov
and
mov
add
fimull
aam
mov
neg
aaa
dec
dec
in
stc
xorl
jnp
jmp
aaa
mov
bound
pop
and
in
xor
jb
addl
int
dec
aas
stos
sbb
push
sbb
inc
outsb
arpl
pop
int3
aaa
sbb
sub
popa
out
push
or
out
jl
cmpb
push
test
jo
jmp
adc
pop
and
pushf
mov
mov
push
inc
jg
cmp
xchg
in
sbbl
addr16
dec
mov
lret
enter
cld
inc
fisubl
stos
ja
insl
orl
jl
ja
xor
adc
loope
xor
ss
mov
cmp
call
push
sbb
pop
push
adc
fistpl
and
js
faddl
mov
ja
jg
dec
push
fdiv
mov
pushf
lret
dec
add
or
loopne
ljmp
test
dec
test
mov
movsl
movb
movsb
test
mov
jae
shll
enter
fistps
and
rcr
sub
push
fcmovnu
shl
add
sbb
shll
jo
or
mov
clc
aas
nop
and
in
sahf
mov
hlt
dec
orl
and
aaa
jae
sub
sbb
and
xor
jg
push
fistps
add
mov
shll
xchg
cmpl
les
push
mov
out
adc
aad
push
fwait
aaa
jp
xlat
xor
mov
jp
fiadds
or
movsl
into
mov
adc
push
push
int
in
mov
pop
sub
sub
test
ss
mov
jecxz
pop
enter
adc
mov
push
mov
push
je
pushf
and
out
mov
adc
push
addl
and
sub
adc
push
xchg
dec
mov
notb
shll
xchg
adc
jmp
jae
xchg
cltd
cmp
adc
mov
sbb
jmp
jmp
pushf
call
repnz
sub
push
pop
adc
out
sbb
dec
sub
enter
mov
adc
loopne
add
daa
sub
mov
push
push
jle
add
mov
ds
movsl
jle
ret
pop
lret
outsl
lods
cmp
outsl
xchg
mov
out
insb
out
sbb
js
cs
mov
pop
sbb
in
cwtl
rcrl
pop
mov
out
pop
shr
ljmp
icebp
aaa
call
hlt
call
sbb
mov
xor
out
mov
mov
push
addr16
push
xor
or
add
push
xchg
xchg
rcrb
inc
xlat
dec
jmp
addb
outsb
aaa
shlb
aaa
push
out
lds
sbb
imul
pop
push
sbb
adc
xchg
out
lcall
insl
out
xor
fadds
jecxz
sahf
cmpsb
loopne
mov
xlat
scas
add
das
movsb
mov
aam
loopne
xchg
cld
cmp
pop
ror
jl
cmpsb
test
xchg
int3
adc
insb
lret
ret
cmp
jle
daa
jb
pop
or
pushf
insb
loope
pop
lcall
mov
jno
mov
inc
add
movsl
arpl
add
mov
xchg
xchg
andl
in
in
cmc
mov
ret
sbbb
daa
ljmp
xchg
das
movsw
and
test
cli
mov
push
xor
adc
mov
sub
dec
je
out
sbb
xor
int
adc
mov
xlat
addl
out
mov
sbb
sbb
inc
ljmp
mov
ret
and
push
push
int3
and
or
push
rorb
sub
pop
pop
lret
mov
cmp
xor
repz
test
fstl
daa
es
in
lret
mov
in
or
loop
push
mov
sub
imul
stc
xor
cld
mov
sbb
inc
jg
mov
shrl
fists
testb
xchg
pop
and
cmp
pop
push
testl
shlb
xchg
pop
jne
jge
push
test
pop
xchg
sbb
push
out
ja
shll
mov
fimuls
popf
cwtl
dec
dec
in
out
lcall
movq
call
cwtl
dec
cmpsb
lock
je
cwtl
imul
pop
sbb
scas
jp
imul
pop
sahf
jecxz
lret
or
jno
shrl
sbb
push
ja
out
fwait
pop
je
cmp
mov
pop
or
or
pop
sub
push
fimull
aad
cmpsb
enter
sbb
out
sbb
and
bound
shrl
sti
aam
add
sbb
push
dec
das
outsb
mov
add
pop
sub
out
xchg
or
pop
shll
and
daa
ja
or
sbb
cmpsb
add
aas
sti
xorps
dec
jnp
mov
sub
dec
ja
xchg
mov
push
mov
cs
dec
jno
lods
nop
push
out
adc
sbb
fsubs
jbe
mov
jbe
cli
insl
jle
and
jb
pop
mov
ret
out
jg
pop
push
out
rcrl
jbe
faddl
int3
mov
push
scas
clc
fisubrl
shl
mov
out
test
scas
pop
sbb
or
mov
xor
and
mov
fsubs
clc
sahf
fwait
fwait
mov
call
cs
fisubrl
mov
jl
sbb
add
mov
loopne
jne
cld
fdivl
lods
xchg
adc
mov
sbb
mov
iret
xlat
test
add
ja
sbb
cmp
sbb
adc
mov
cmp
cmpsb
es
dec
add
ljmp
push
arpl
add
pop
jns
rorl
in
dec
push
xor
sub
jne
pop
pop
fldcw
lcall
jle
call
adc
js
insb
adc
jno
cs
sahf
pop
imul
sub
dec
sbb
and
sbb
imul
movsb
test
aaa
push
adc
ljmp
rcrl
scas
imul
imul
repnz
repz
cltd
repz
call
pop
push
and
decb
jge
sahf
adc
aam
ficoml
fst
sbb
adcl
jnp
dec
lret
and
js
sub
and
je
xor
jns
test
into
sbb
xchg
cmpsl
xchg
popf
pop
add
enter
fstl
shlb
xlat
pusha
jp
imul
xchg
inc
dec
mov
push
mov
mov
lret
sub
stos
mov
sub
pop
gs
cmp
fsubrs
decl
je
inc
xor
add
fistps
mov
sbb
cs
icebp
add
divl
mov
cmp
or
jb
and
fsin
sti
pushf
xchg
sbb
popa
xchg
ret
popa
cmp
out
inc
rol
push
out
jecxz
cs
daa
cmp
aas
decl
sbb
or
mov
scas
dec
dec
arpl
loope
lock
pushf
sub
cmpsl
dec
pop
push
xchg
mov
call
fwait
sub
outsb
cmp
add
jg
mov
jae
out
push
aam
lock
and
xchg
adc
inc
mov
mov
out
ljmp
or
xchg
push
cmpsl
jl
xchg
enter
loope
outsl
lds
mov
shll
xor
xor
add
cmpsl
ja
add
dec
out
sbb
xchg
setbe
fcoms
leave
cmpsb
aas
sub
push
mov
idivl
stos
dec
mov
in
cld
jmp
repnz
mov
scas
and
das
pop
js
fiaddl
fstps
int3
inc
push
mov
mov
xchg
pushf
popa
xchg
call
xor
out
mov
push
jae
fnstcw
es
xor
add
mov
inc
leave
scas
mov
mov
out
test
nop
out
pand
push
mov
jae
call
in
dec
mov
pop
in
push
sub
scas
in
xchg
je
bound
sub
push
push
scas
and
js
cs
jle
aad
sub
push
inc
xchg
sub
xchg
or
inc
aad
pusha
into
jl
mov
xor
xchg
les
imul
gs
nop
mov
cmp
jg
lea
outsl
sub
bound
test
sub
dec
cld
andl
sbb
pop
and
arpl
outsl
clc
aad
pop
lock
aas
sbb
std
mov
and
lret
arpl
mov
js
vprotb
xchg
shlb
cmpsb
sub
jecxz
dec
cmp
outsb
stos
es
ret
movsb
jl
shrb
xor
stc
sbb
mov
push
xchg
push
or
test
jo
pop
in
daa
test
mov
clc
adc
ficomps
daa
mov
lods
sbb
fwait
test
fnstcw
shll
push
mov
push
mov
or
fidivl
mov
inc
dec
loope
push
and
sbb
mov
pop
xor
mov
hlt
mov
mov
jo
das
cmova
rcl
test
and
jnp
add
and
movb
stos
in
add
mov
in
lret
xor
cmp
cld
jl
adcl
inc
add
loopne
push
stc
ret
and
mov
push
add
jp
ja
xor
test
and
xor
sbb
sbb
push
jb
sub
mov
cmpb
inc
pop
ss
insb
cld
dec
mov
test
and
or
inc
mov
icebp
jecxz
imul
fwait
cmp
into
es
inc
push
cs
sub
outsl
sub
fdivl
ja
mov
push
inc
popa
sub
mov
inc
lock
jge
in
and
jl
mov
xchg
push
jb
je
adc
mov
js
sbbb
xor
jo
add
push
mov
movsb
mov
cmp
scas
xchg
pushf
inc
and
pushf
hlt
incb
lods
fdivl
mov
push
repz
jns
cmpsb
push
cmp
sbb
push
push
xor
mov
jecxz
mov
sub
ja
std
icebp
mull
mov
fcoms
pop
or
rorb
inc
cmp
sbb
insb
mov
mov
inc
enter
push
aad
mov
das
insl
mov
hlt
jge
push
cmp
int
jmp
js
loop
nop
xor
in
nopl
add
lods
push
push
repnz
pop
fcompl
adc
adc
mov
mov
mov
and
clc
pop
mov
cld
xchg
data16
lods
jb
mov
clc
jmp
int3
adc
inc
ds
adc
xlat
ret
adc
bnd
cli
inc
xchg
push
mull
push
filds
insb
loopne
hlt
lret
or
int3
or
fsubl
add
mov
sub
rclb
aaa
movsl
ja
mov
jmp
ds
or
or
sub
adc
cmp
cs
out
andb
sarl
je
into
into
mov
pop
lcall
enter
ss
stos
push
push
xchg
inc
sub
inc
push
stos
lcall
mov
fcomps
sbb
pushf
push
mov
xor
jbe
clc
mov
ret
mov
call
dec
fucomi
inc
and
cmp
std
loopne
cmp
orb
mov
inc
out
mov
mov
shll
add
push
pop
mov
pop
dec
into
sbb
jns,pn
sti
out
add
mov
das
repz
leave
aad
fcmovnb
in
arpl
jl
hlt
lods
push
bnd
xor
outsl
cmc
jle
addr16
mov
xchg
xchg
push
mov
cmpsb
cs
mov
nop
jns
dec
dec
pop
cld
aas
push
scas
mov
xchg
outsb
jle
notl
lods
aam
jmp
push
rorb
inc
aaa
xchg
insl
mov
inc
pop
sbb
sti
push
pop
xor
cmp
aas
jae
pop
arpl
inc
arpl
xlat
mov
das
inc
cwtl
ss
js
aas
adc
subb
in
pop
lcall
push
iret
sti
test
push
outsb
or
or
cmp
mov
dec
gs
dec
imul
rcll
cltd
test
stos
lahf
repz
mov
xchg
aas
insl
enter
loope
mov
cld
cmpb
sarb
loop
sti
jae
sub
push
lret
and
sub
fldt
fistpll
or
mov
out
jns
fmull
xchg
flds
pop
lds
pop
js
dec
fisubl
adc
pop
xor
adc
out
and
and
das
and
xchg
out
fcomip
xchg
out
push
sub
mov
mov
inc
push
adc
xchg
xor
push
int
std
jns
push
dec
xchg
fistpll
cmpsl
mov
cmpsl
cmp
mov
insb
stos
inc
aaa
fadds
adc
or
inc
push
js
out
js
xchg
repz
or
jg
and
push
pop
enter
cld
adc
ja
adc
or
mov
fidivs
xchg
clc
xor
scas
cld
aam
call
inc
push
movsb
repz
add
inc
push
loopne
or
rorl
cli
das
sub
lods
ret
jns
dec
mov
in
mov
mov
rcr
and
add
inc
xchg
out
call
pop
pop
dec
je
fdivp
cltd
dec
insb
call
add
fmul
mov
scas
lcall
ljmp
dec
dec
fldenv
add
xlat
cltd
push
cld
ljmp
or
call
mov
dec
sub
loopne
xchg
cmp
adc
mov
mov
dec
add
sub
pop
cmpsl
or
dec
add
mov
clc
ret
pop
lahf
mov
and
xor
adc
push
inc
mov
call
jbe
xchg
jmp
xchg
in
aaa
push
xor
lahf
cld
add
out
test
fsubp
lret
out
dec
xor
mov
pop
push
inc
mov
inc
push
adc
mov
fcompl
outsb
out
dec
and
adc
repnz
iret
and
push
aas
shlb
mov
clc
popa
xchg
cmp
imul
adc
xlat
mov
rcr
jae
cltd
adc
add
jb
cltd
daa
mov
aad
push
xlat
fmuls
cmpsl
lret
ror
out
int
or
jecxz
popa
daa
cs
sub
cmp
jg
out
enter
push
andb
dec
in
add
out
decb
aam
outsb
popa
sbb
xchg
pop
pop
in
sub
loopne
pop
rcrb
dec
pushf
notl
mul
cmp
aad
xor
mov
xchg
movsb
pop
orb
in
cwtl
inc
or
bnd
stc
aas
and
sbb
pop
xchg
insb
dec
pop
inc
insl
inc
lock
ffreep
out
das
std
cmp
xchg
ret
dec
pop
sahf
add
sub
mov
dec
mov
push
inc
sarl
mov
in
dec
push
sbb
jge
add
mov
popl
scas
xor
mov
andb
add
mov
or
jbe
mov
in
aam
push
incl
inc
or
out
jg
ja
jg
jge
inc
pop
gs
pop
xchg
mov
mov
data16
mov
xchg
lods
mov
mov
sarb
dec
jns
cli
adc
cld
insl
mov
mov
enter
xchg
lock
and
mov
add
bound
add
out
sub
pop
jp
dec
test
cmp
add
sbb
repz
cmpb
repnz
repz
sbb
jl
ret
test
mov
push
mov
repz
add
pop
adc
jnp
fwait
imull
jno
inc
test
sbb
inc
lea
popl
xchg
dec
mov
pop
mov
push
ja
loopne
push
jl
add
mov
movsl
and
lods
ret
inc
out
leave
stos
mov
rorb
push
adc
adc
sbbl
adc
std
ljmp
mov
mov
pop
sub
or
je
mov
std
bound
ret
mov
aas
cmc
adc
cld
scas
xchg
sub
pop
pop
jbe
sbb
fimull
pop
dec
sbb
scas
movsb
jmp
jmp
or
xchg
ljmp
out
add
cltd
push
loopne
xlat
call
js
sbb
lock
xchg
pop
push
dec
sbb
xchg
cmpsl
sbbb
cmp
cmpsb
ja
mov
aaa
dec
fwait
loope
jnp
mov
sub
fs
and
and
leave
aam
xchg
loop
pop
jno
push
adc
jmp
pop
lar
nop
stc
xchg
cltd
sbb
outsl
sbb
jmp
sub
iretw
xor
mov
int
push
or
xor
push
test
dec
daa
mov
sbb
push
les
out
fucomip
stos
inc
int3
out
push
outsb
cmc
xchg
xor
loope
cmp
lods
mov
jbe
mov
ds
sbb
pop
push
rcll
ja
pop
daa
out
and
mov
xor
cli
fs
jo
iret
add
jae
fnclex
ret
movsb
popf
jne
in
dec
push
pop
notl
jmp
inc
sub
add
repnz
jl
cmp
xchg
es
scas
mov
mov
dec
ja
xchg
in
sbb
dec
incl
int
cmp
inc
xchg
iret
loope
xor
jbe
inc
mov
jg
cmp
inc
ret
in
loope
mov
xor
in
xor
mov
ljmp
out
jmp
inc
leave
adc
filds
jae
sbb
dec
mov
jae
mov
scas
push
in
in
push
xchg
mov
movl
push
icebp
and
xor
aad
sbb
sub
pop
jle
xchg
dec
sahf
push
xor
stos
mov
dec
cmp
lea
xchg
xchg
lock
mov
test
mov
mov
es
aad
add
out
mov
addl
dec
mov
mov
sub
cmp
mov
xchg
dec
addr16
cmp
xor
sub
adc
push
aaa
xlat
outsb
mov
stc
push
fiadds
daa
fs
pop
pop
push
xchg
aad
sahf
lods
sbb
cmc
fsubrl
cwtl
outsb
sub
adc
jecxz
mov
mov
cltd
mov
xor
push
pop
push
mov
clc
popa
inc
xor
and
fnstsw
mov
inc
fimull
cmp
out
inc
inc
pop
je
mov
enter
push
cltd
inc
insb
push
jecxz
jp
mov
out
movsb
repnz
add
adc
int3
dec
mov
test
loop
pusha
lcall
dec
mov
pop
push
xor
in
cmp
push
je
daa
lret
daa
or
insl
lcall
inc
pop
pop
lea
add
xor
popa
mov
xlat
add
sub
push
jno
and
inc
dec
push
mov
ffreep
and
jle
mov
gs
in
add
xchg
rcr
fisubrs
dec
sbb
jl
push
int3
cs
imul
mov
ficoms
fsubrs
pop
add
sbb
addr16
loopne
call
loopne
jb
sbb
push
cmp
inc
fcompl
mov
xchg
push
xor
pop
push
xchg
jecxz
sbb
loop
movsl
repz
xchg
popa
scas
fs
xchg
pop
in
pusha
mov
xlat
sub
xlat
sbb
popa
sbb
dec
ss
mov
mov
pop
aam
dec
add
enter
push
xlat
loop
cmp
xchg
cmc
ud2
sbb
idiv
push
cmc
ret
pop
fdivr
out
sub
sub
jg
mov
jnp
push
scas
andl
jecxz
js
xchg
dec
jl
pop
loope
adc
bound
sbb
ret
movsb
pop
inc
sbb
and
mov
lret
ret
ja
jbe
jae
les
mov
mov
movsl
cmp
sub
jp
dec
fcmovb
add
inc
or
jns
cmp
and
out
sbb
and
mov
pop
rclb
pop
xchg
mov
fmuls
shl
pop
mov
test
jecxz
xchg
in
cmp
fnop
or
cmp
lea
cli
add
xchg
aas
push
xchg
pop
out
sub
mov
cmc
loop
push
test
icebp
out
rorl
mov
sub
imul
pop
xchg
mov
in
cwtl
arpl
ret
aam
jne
sbb
inc
sub
pop
out
xchg
jbe
mov
arpl
pop
push
shrb
jns
xlat
fmuls
xor
push
cmp
mov
mov
lods
aaa
mov
daa
ss
and
mov
aad
sbb
imul
insl
xor
stos
mov
inc
jb
mov
xchg
cli
and
mov
push
int3
clc
cmp
inc
jae
and
mull
mov
js
jnp
xchg
or
cwtl
xor
mov
and
dec
repnz
xchg
push
sbb
adc
ja
inc
test
jno
sbbb
pop
cli
mov
xchg
xchg
pop
loopne
mov
jl
jb
mov
cld
lock
adc
sbb
ljmp
or
lahf
xchg
push
sbb
jmp
mov
adc
jbe
mov
popa
test
xor
cwtl
dec
fiaddl
jle
fcoms
mov
jge
lret
push
pop
les
pusha
scas
stos
popa
sarl
pop
and
fwait
outsl
es
mov
jne
mov
nop
mov
ret
mov
pop
or
add
push
adc
cmp
fstl
add
shl
xchg
xchg
sti
xchg
sbb
inc
jne
or
mov
jns
sbb
jge
adc
adc
out
imul
repnz
lcall
test
push
mov
pop
cmp
out
adc
cmp
or
cmp
pop
mov
setb
fisubs
ret
jecxz
mov
das
mov
inc
and
xor
adc
scas
outsl
cmp
aam
cltd
xchg
xchg
stos
sarl
aas
adc
dec
adc
inc
sbb
cmp
push
xchg
pushf
sbb
out
mov
jmp
addb
fs
fwait
inc
lock
pop
mov
sbb
and
mov
jne
scas
out
popa
fisubs
xchg
call
inc
mov
dec
popf
cmp
sub
dec
cwtl
lds
add
repz
mov
jmp
int3
add
xor
adc
popf
dec
out
scas
dec
cwtl
test
dec
fsubr
add
cmp
and
pop
dec
sub
xchg
jg
dec
jmp
stos
fdivr
mov
cwtl
enter
insb
sbb
dec
or
mov
movd
pushf
and
dec
mov
dec
or
mov
mov
sbb
dec
mov
mov
jmp
ja
cmc
xor
addr16
pop
mov
xor
mov
pop
lret
adc
incl
jno
xor
sbb
aaa
in
pop
lahf
push
mov
enter
test
cmpsl
pop
sub
aas
test
adc
inc
cli
aaa
push
shrl
inc
leave
xchg
lcall
xchg
cmpb
and
cwtl
and
push
lods
sub
std
adc
jne
sbb
dec
push
int
fcmovbe
test
xor
into
or
mov
test
sbb
add
dec
addr16
ret
cmp
mull
int3
push
pop
xchg
lret
nop
lret
cld
mov
idivl
xchg
adc
sbb
gs
add
mov
adc
xchg
mov
sbbb
pop
or
out
lahf
idivb
mov
lock
jle
mov
ja
enter
outsl
andb
mov
cmp
add
loop
rcr
cmp
push
xor
pop
cld
test
aam
cmp
mov
dec
mov
and
cmc
mov
lahf
xchg
mov
add
or
rcl
mov
subl
sub
dec
adc
fidivl
jle
mov
jmp
inc
dec
ljmp
sub
pop
test
je
aas
outsl
mov
adc
int3
stc
sahf
push
add
mov
dec
add
out
iret
push
push
inc
or
mov
add
xor
cmpsl
sbb
daa
movsl
mov
mov
cld
mov
push
daa
sub
jns,pt
and
enter
xor
pop
pop
or
cmc
sub
jno
or
leave
jne
aaa
cs
test
lea
push
adc
icebp
sbb
rorl
sbbb
call
add
fisubrl
xchg
push
sbb
lcall
leave
stc
cmp
cwtl
push
add
sahf
jmp
arpl
pop
adc
aaa
repnz
inc
sub
xlat
out
inc
sub
mov
cwtl
push
ja
lds
push
adc
dec
fcmovb
pop
mov
jb
daa
es
pop
dec
adc
int3
ja
push
mov
je
repz
mov
push
jb
push
inc
mov
fs
or
not
movsb
jg
pushf
and
call
jbe
xchg
out
cmp
fiaddl
arpl
mov
sub
faddl
insl
cmc
lahf
in
jge
fisubrs
daa
mov
adc
aad
in
jnp
and
cmpsb
mov
imul
push
dec
test
mov
inc
cmp
jo
enter
sbb
adc
dec
iret
add
adc
fisttpll
adc
and
or
int3
adc
mov
sahf
subl
popf
popa
in
test
out
lret
jmp
mov
dec
dec
outsl
imul
cltd
repz
lret
jp
shlb
pop
sbb
sbb
stos
mov
mov
les
out
xchg
push
inc
ljmp
mov
imul
or
adc
pop
jno
es
pusha
and
and
test
popa
xchg
sub
insb
movsl
lds
cld
icebp
lods
cmc
dec
push
cmp
stos
sub
mov
sbb
add
sahf
rorl
mov
cmp
push
lret
js
mov
call
divb
jno
mov
mov
shl
inc
rcrb
dec
test
lahf
jle
and
sbb
push
fcomi
xor
imul
in
hlt
inc
ret
sub
or
aaa
subb
xor
or
pop
pop
or
aad
cmp
ret
rol
int
adc
out
mov
repnz
sub
and
sub
dec
sub
lods
dec
cwtl
xchg
aam
xchg
mov
leave
dec
mov
into
mov
loopne
stos
fmuls
or
dec
stos
cmpsl
mov
mov
mov
outsb
scas
repz
addr16
push
mov
cmp
cmp
sub
aas
aaa
fwait
loopne
imul
mov
adc
jp
xchg
cmp
or
pop
xor
lret
addr16
dec
lret
sbb
rorl
sub
push
rorl
lret
rcl
cltd
in
pop
sahf
cmc
fistpll
loopne
add
jb
dec
in
sub
or
xchg
push
mov
jmp
mov
pop
dec
dec
push
cmp
lahf
in
xchg
gs
jmp
jecxz
or
pop
test
stc
mov
out
mov
stos
jl
xor
add
jecxz
dec
pop
icebp
les
fiaddl
or
inc
dec
fs
testb
mov
aaa
fbld
arpl
xchg
pop
and
shl
dec
pop
mov
push
xlat
das
dec
push
jns
call
add
and
scas
cmp
pop
inc
xchg
or
xchg
ss
loopne
or
insl
xchg
in
xor
push
add
cltd
inc
sbb
mov
aaa
dec
and
pop
cmp
xchg
call
jb
xor
leave
mov
outsl
inc
mov
insb
repnz
loope
pop
fdivp
xchg
out
jns
mov
cli
test
mov
out
cmp
add
cmpsl
fadds
jnp
aaa
inc
xchg
cmp
push
in
cs
inc
ds
cmc
andb
pusha
inc
cmpsl
subb
sbb
mov
sbb
mov
pushl
and
lods
in
add
push
push
inc
and
cli
push
mov
xor
dec
cmp
es
dec
fsubl
inc
es
push
mov
push
es
jmp
pop
jg
out
loop
pushf
movsb
ljmp
xor
pop
out
iret
jae
insl
xor
cmp
imul
jb
pop
sbb
out
shlb
imul
mov
push
repz
pop
shrb
cmp
push
subl
mov
sub
sbb
cltd
pop
inc
hlt
add
loope
pop
pop
xchg
inc
mov
mov
cli
clc
cs
push
scas
add
jno
aaa
loop
or
jo
xchg
and
lret
sbb
in
sub
repnz
add
pop
ljmp
push
and
out
imul
cli
jecxz
dec
int3
int
icebp
pop
xor
push
xlat
jl
jno
int
ja
int
aas
and
mov
push
sub
adc
scas
adc
lods
iret
sub
or
int3
pusha
xchg
mov
mov
testl
sub
adc
out
shrl
and
mov
in
jmp
jo
iret
push
nop
inc
ficompl
jnp
sbb
mov
scas
stos
mov
je
jae
iret
movsl
jnp
and
prefetch
mov
push
aam
sub
add
push
push
cmp
sbb
mov
testl
pop
push
hlt
lret
mov
or
shlb
sbb
call
incl
test
cmp
sbb
hlt
xchg
or
or
jp
mov
in
mov
std
or
mov
popa
scas
push
rcrl
and
loopne
or
scas
push
add
mov
bound
lahf
and
call
fwait
iret
adc
mov
repz
or
loopne
cmc
cwtl
sti
lea
inc
add
or
popl
push
mov
pop
test
in
cmp
pushf
icebp
add
pop
add
xchg
lret
sbb
dec
cmovae
add
pop
aad
jmp
mov
scas
int
jnp
jge
xor
sti
fcmovu
mov
aad
or
in
cltd
and
sub
shlb
jecxz
test
add
call
xor
mov
icebp
fwait
clc
outsl
cmp
fbstp
popf
nop
mov
push
daa
dec
sbb
cld
and
mov
or
and
in
cmp
fnstenv
lea
and
incl
jle
sbb
inc
pop
xor
shlb
std
xor
adc
movd
cmp
add
ror
fs
daa
loop
and
cld
filds
pop
cld
inc
xchg
or
sub
mov
mov
call
pushf
xor
and
cltd
sbb
enter
push
mov
popf
pop
fwait
mov
cwtl
insb
dec
mov
mov
push
add
stc
sbb
jbe
fwait
test
outsl
xchg
or
adc
ljmp
je
jae
test
leave
cmc
jnp
jne
stos
sbb
jns
cmp
inc
lcall
lods
pop
mov
xor
bound
into
inc
aas
cmpsl
mov
adcl
dec
cmp
icebp
and
icebp
mov
and
aas
jg
dec
inc
mov
pop
fstpl
adc
mov
or
pop
popa
outsl
ljmp
cmpsb
pop
cmp
mov
jmp
fwait
std
push
js
xor
bound
sub
in
aaa
rol
fcomp
fcmovne
dec
pop
rcrl
and
je
mov
test
xchg
pop
mov
and
subl
xchg
adc
xlat
outsl
jmp
xlat
jg
repnz
cmp
jne
dec
arpl
xor
js
and
pop
add
pop
es
loope
jb
xor
jno
shlb
mov
add
daa
dec
xchg
aam
sub
pushf
outsl
pop
stos
fwait
hlt
jns
xor
add
aas
mov
sub
mov
cmp
add
icebp
xor
dec
xchg
jo
or
subl
xlat
pop
cli
jne
pop
subb
jbe
jl
push
cwtl
bound
iret
shlb
mov
stos
loope
push
movsl
into
mov
push
cmp
and
cmp
mov
xor
insl
cwtl
int
das
cmp
mov
jmp
dec
mov
sub
adc
sbb
out
sbbl
repz
jo
pop
push
ss
test
mov
fwait
push
jno
jmp
cmc
cmpsl
cmc
mov
movsb
popf
fadds
imull
jle
mov
das
jnp
enter
ljmp
inc
push
push
jns
jle
imul
sbb
mov
out
xchg
add
lahf
cmp
sbb
ss
xor
ss
mov
add
cmp
call
lahf
ret
jae
sub
mov
push
adcl
daa
lock
jne
dec
xor
and
mov
jmp
adc
aas
int3
lret
ja
ror
fsubs
es
rorl
mov
notb
mov
mov
push
arpl
mov
ret
fiaddl
or
mov
push
dec
ljmp
cmp
lods
adc
jp
cmp
repnz
ret
xlat
je
aaa
push
scas
es
mov
adc
cwtl
add
fbld
adc
aad
pushw
rcrl
adc
xor
xchg
iret
sub
fsubl
ja
scas
inc
mov
xchg
and
xor
addr16
stc
mov
sub
ret
dec
pop
xchg
or
test
or
shrb
fsubl
rcr
rcr
push
mov
jne
inc
orl
push
aas
sub
cmp
andb
dec
pop
mov
bound
cmp
add
mov
jmp
dec
dec
inc
dec
lock
stos
pop
and
jle
les
imul
stc
pop
stos
xor
sbb
jno
lcall
and
iret
adc
and
mov
push
dec
fbld
push
dec
lds
jae
insl
push
fbld
push
rcrl
mov
dec
dec
sbb
aam
sub
sub
andb
pop
push
push
cmp
popf
inc
mov
cli
adc
or
and
ds
mov
xor
cmp
and
or
mov
mov
add
insl
mov
mov
jns
insl
lods
xlat
int3
aas
cs
or
inc
pop
shl
das
sahf
cmpsl
lods
xorb
push
adc
sbb
shll
ljmp
test
sti
imul
loopne
negb
pop
outsl
jge
push
pop
ret
das
and
lock
cmpsb
cli
inc
je
inc
roll
and
push
into
fnstcw
dec
inc
test
inc
and
mov
stos
xchg
sbb
loope
pop
fsts
sbb
or
xchg
push
adc
pop
ficoml
imul
xchg
ret
shlb
arpl
or
pushf
mov
push
cmp
setge
stos
lds
xorl
enter
cmp
pop
shrb
cmp
jg
imul
mov
or
push
xor
and
out
je
sub
xchg
jp
rorb
xor
arpl
push
dec
jle
push
inc
adc
stc
enter
pop
add
jb
inc
ja
mov
lea
scas
jecxz
mov
icebp
adc
js
mov
test
test
pop
jle
mov
push
xor
enter
xor
ljmp
fwait
je
bound
jge
lods
push
ret
and
loop
or
inc
adc
jg
test
data16
arpl
decl
xchg
inc
and
shll
mov
add
test
push
xor
outsl
pushf
add
sbb
xchg
fs
mov
outsb
loopne
mov
dec
data16
fs
aam
or
sahf
mov
and
lds
mov
imull
ds
cmpsb
pusha
mov
movsl
adc
dec
insb
stos
das
shll
push
push
fsubl
inc
jo
mov
inc
xchg
bswap
fnstenv
addl
out
insl
in
pop
adc
fs
pop
int3
imul
jns
inc
sub
imul
pop
in
popa
push
mov
inc
mov
mov
add
xchg
cmp
cs
lock
mov
mov
jmp
pop
cmpsb
ret
add
sbb
jmp
les
xchg
pushf
jo
xchg
jae
in
adc
adc
repz
mov
in
push
cmc
mov
and
pop
xor
mov
lret
dec
scas
ljmp
in
imul
enter
fcoms
test
cltd
sbb
and
mov
xchg
pushf
cmp
lods
imul
sti
sub
les
daa
jae
mov
pop
fistpl
hlt
mov
cmp
in
aaa
inc
push
ret
sub
mov
stos
xchg
push
inc
dec
push
repnz
inc
pop
aaa
or
scas
pop
test
adc
mov
sub
lods
or
and
mov
test
andb
fneni(8087
jo
and
mov
aam
mov
hlt
adc
xchg
xchg
cli
xor
arpl
sbb
push
in
push
push
or
cli
call
rclb
and
jecxz
add
and
ss
add
mov
sub
or
pop
push
lea
rorl
xor
aad
or
push
sbb
jmp
xchg
test
dec
sbbl
push
mov
lds
into
mov
sarl
push
jns
lock
rol
xor
dec
adc
or
icebp
mov
repnz
fcompp
je
and
inc
faddp
repnz
jnp
mov
fnstcw
push
and
mov
icebp
popf
rolb
stos
adc
fimull
aas
andb
xchg
lds
ror
adc
ds
and
xchg
fsts
xchg
xchg
sbb
fs
sub
sti
mov
mov
inc
sub
fwait
add
cwtl
flds
in
test
insl
cmpsl
sbb
cli
lret
xchg
sbb
push
mov
mov
les
insb
xchg
enter
jb
sub
xchg
xor
iret
pop
xchg
xlat
aas
add
test
sbb
decb
call
cmp
inc
pop
and
es
xor
mov
cli
mov
mov
lret
jne
sub
sub
int
fistps
orl
sbb
mov
xchg
adc
mov
mov
test
cmp
test
sahf
outsb
cmp
cmpsb
add
push
dec
shlb
int
and
cmp
sbb
int3
loope
jo
pop
clc
pop
sbb
mov
pop
fcoml
mov
imul
test
mov
dec
cmp
xchg
adc
mov
add
shrb
xor
les
cltd
int3
mov
pushl
ret
xchg
pushf
test
outsl
mov
xchg
jno
aad
adc
mov
mov
mov
inc
add
lods
fwait
lcall
int3
flds
sub
cmpsl
enter
xchg
test
mov
loop
mov
pop
sbb
imul
jbe
nop
and
sbb
sbb
jno
jne
fwait
je
ljmp
or
and
cmpb
fnstcw
shr
jnp
iret
cmp
ljmp
xchg
cmc
les
fsubl
cli
push
inc
push
inc
test
sbb
push
cmpsl
les
cli
aad
or
sbb
jnp
dec
jae
fst
pop
pop
fstps
in
mov
jo
icebp
add
pop
test
and
adc
mov
test
jae
cltd
xchg
test
pop
aas
pop
mov
xchg
inc
jle
jno
jmp
sbb
or
add
jb
mov
cmpsl
xchg
xchg
xchg
xor
sbbl
pop
fiadds
mov
cmp
jb
pushf
push
out
sub
fldl
leave
mov
jmp
and
movsb
mov
bound
sbb
jle
xor
xor
mov
mov
lahf
mov
in
cmp
mov
hlt
out
mov
out
cmpsl
scas
mov
cltd
and
mov
cwtl
loopne
rol
mov
sbb
and
and
mov
xor
mov
aas
aam
pop
push
fsts
add
cmovnp
shlb
shll
lods
xchg
out
movsl
ljmp
sahf
aam
fwait
add
jl
int
or
gs
cmpsb
adc
das
push
push
sbb
int
mov
mov
push
ljmp
mov
pop
movsb
xor
dec
inc
inc
inc
xchg
sbb
push
dec
sbb
jmp
xlat
andl
sub
or
adcl
cwtl
pop
sbb
stos
stos
cmp
xchg
into
mov
shl
jb
push
fiaddl
mov
addr16
imul
jae
ljmp
mov
imul
jno
xor
cmp
jbe
lds
test
ret
nop
jb
push
sbb
cmp
jl
adc
xchg
mov
inc
int3
pop
xor
mov
jl
xchg
jns
leave
add
gs
outsl
mov
mov
lret
ja
pushf
cs
mov
xchg
fimull
adc
mov
aaa
jle
lcall
pop
repz
adc
or
fisttpll
stos
adc
mov
outsl
sbb
sbb
or
dec
cld
iret
add
mov
rolb
sarb
scas
push
cmp
add
sub
call
ret
mov
dec
sarl
or
lods
and
cld
in
xchg
or
jo
inc
ljmp
xor
cmp
pusha
out
adc
mov
mov
xchg
sbb
lret
aas
adc
xor
and
and
enter
or
ror
lahf
not
stos
mov
inc
and
cmpsb
js
andl
clc
or
jne
testl
out
sbbl
add
jmp
mov
aas
push
outsl
cmp
stc
jge,pn
cmp
sbb
or
outsl
jecxz
dec
pusha
repz
loope
adc
or
rcrl
dec
mov
dec
mov
inc
stc
cmp
jmp
mov
in
push
inc
mov
pop
fsts
xchg
pop
mov
aam
mov
out
and
mov
gs
icebp
dec
add
xchg
lea
popa
cltd
hlt
push
cltd
shrl
push
jecxz
imul
fdivs
mov
out
lret
adc
andb
ffree
lods
enter
movsb
xlat
test
jmp
add
ljmp
test
jo
add
pop
cmpsl
dec
mov
gs
ljmp
lds
pop
dec
repz
and
mov
enter
push
jns
cmp
xorl
roll
mov
ljmp
sbb
pushf
push
lcall
mov
pop
or
int
sbb
xor
xchg
mov
cltd
lcall
jmp
lret
jle
cld
call
jmp
insl
repz
scas
mov
fisttpl
gs
xchg
mov
lods
popa
scas
mov
pop
fwait
and
and
push
inc
lahf
and
push
jo
mov
adc
dec
xchg
mov
in
xlat
repz
xor
xor
loope
xchg
sbb
out
mov
andl
out
pop
adc
xchg
shll
adc
and
rorl
xchg
outsb
xor
pusha
lcall
fcoms
jb
mov
dec
xchg
test
pop
xchg
mov
sub
movsb
jmp
mov
push
test
andb
sbb
out
pop
jae
and
addb
mov
pop
adc
mov
jns
fistpl
add
ds
call
push
jae
int
lahf
cmp
sub
data16
loope
rorl
test
xor
xchg
bnd
adc
mov
push
sub
cmp
xchg
in
mov
sbb
adc
insl
or
inc
cmpsb
sub
stc
pop
mov
das
aas
cmp
pop
mov
jae
jge
xchg
push
jb
inc
stc
sbb
shrl
cmp
int3
enter
popa
dec
jb
pop
inc
cld
adc
out
je
cs
mov
sbb
mov
mov
or
ror
xchg
ret
or
add
xchg
icebp
pop
push
pushl
sbbl
and
mov
loope
push
popa
jno
or
movsl
loop
fildl
clc
pop
in
negb
cmp
sbb
cmp
adc
mov
int3
enter
cmc
push
in
sti
subl
xchg
ret
pusha
sub
ss
xlat
flds
mov
js
nop
sub
fcmovb
sub
aam
les
clc
fcomip
dec
lds
add
sub
out
mov
cli
idivb
jg
or
js
frstor
sbb
test
pop
mov
push
lret
bound
outsl
adc
and
pop
sub
pop
adc
lods
imul
mov
xor
and
mov
xchg
stos
int3
nop
sbb
fnstenv
lock
lret
jae
xor
or
sbbb
into
call
jecxz
call
lret
and
pop
dec
jne
push
add
movsl
pop
pusha
pop
mov
pop
mov
or
push
leave
cwtl
shr
xor
fstpl
enter
sbb
loope
xor
paddb
imul
notl
das
mov
imul
test
in
lahf
sbb
push
mov
or
rol
sahf
jle
mov
js
xor
pop
fiaddl
lret
adc
mov
fsts
into
push
addr16
inc
xchg
pop
sbb
dec
pop
rorb
fwait
stc
xlat
pop
imul
mov
mov
cmp
pop
aad
xchg
sbb
cltd
loop
scas
out
mov
xor
popf
repnz
xor
bound
sbb
outsl
sbb
mov
push
in
lcall
dec
ds
or
les
add
pop
and
mov
and
inc
lods
ficoml
cmp
loopne
test
xor
sub
aas
jne
push
mov
jecxz
cmc
mov
sub
or
dec
das
das
mov
int3
aas
and
loopne
mov
test
fst
lea
sub
fistps
sarb
dec
out
sbb
fnstenv
xorl
xchg
mov
inc
orb
das
fistpl
cmpsl
pop
sbb
xchg
decl
es
icebp
ljmp
fsts
scas
pop
mov
mov
ror
mov
sub
inc
jg
test
sbb
mov
add
insl
rclb
mov
dec
lahf
insb
mov
sbb
repnz
push
addb
push
outsb
dec
daa
mov
stos
xor
sub
mov
cltd
inc
mov
repnz
sbb
rcll
outsb
xchg
mov
xchg
and
test
jnp
icebp
jo
pop
or
imul
test
push
int3
dec
pop
in
sub
incl
dec
push
lret
push
fnstsw
imul
adc
sub
ror
mov
add
mov
mov
sbb
negb
inc
out
pop
incl
dec
in
sbb
jecxz
mov
xchg
scas
inc
aaa
jecxz
jle
xor
sub
push
mov
rolb
mov
cmp
sti
mov
cs
fwait
pop
div
incl
sub
aad
jne
xchg
subb
mov
jmp
loope
testb
sbb
pop
inc
cmp
jbe
mov
outsb
cmp
pop
movsb
mov
fbstp
test
push
jnp
or
mov
outsl
jae
sahf
jae
xchg
sbb
mov
push
cs
ds
sbb
inc
aaa
fildl
mov
mov
and
inc
or
test
xor
xchg
sarb
pop
jge
gs
mov
iret
xor
pop
je
hlt
dec
or
ja,pn
stos
ljmp
xchg
dec
mov
sub
push
pop
out
cli
or
pushf
sub
insl
pop
xchg
ja
xchg
add
inc
outsl
jp
out
enter
mov
test
cmp
out
xchg
mov
rorl
jge
cmpsb
into
push
add
xor
gs
ja
or
jmp
xchg
ljmp
and
cmp
mov
lock
lret
inc
fbstp
mov
push
fxam
shrl
push
aad
lret
jb
cli
push
adc
mov
aad
or
sbb
mov
and
dec
jne
stc
pusha
push
cmpsb
icebp
movsb
call
das
mov
or
or
lcall
je
idivb
mov
outsb
pcmpgtb
add
mov
pop
push
mov
push
mov
ficoms
out
out
fldcw
pop
sub
out
mov
add
lods
adc
loopne
lock
and
add
push
divl
xchg
cmp
push
int3
add
hlt
xchg
cmp
and
mov
arpl
js
push
arpl
adc
sub
cmp
push
mov
in
pop
mov
jge
xlat
fldt
cmpsb
hlt
pop
or
in
repnz
sub
dec
inc
in
ret
test
sbb
cmp
outsb
xlat
ds
scas
data16
ficoml
aam
add
fwait
pop
mov
les
lea
or
scas
mov
mov
add
insb
cmp
xchg
outsl
jmp
and
gs
mov
cld
ret
pusha
mov
sar
iret
cmp
add
push
and
add
ror
pop
fwait
mov
push
jbe
lcall
repnz
sbb
add
out
fsubl
cmp
mov
sbb
sub
test
leave
dec
frstor
xchg
jg
lret
push
out
and
pop
pop
fidivl
stc
leave
lods
push
xchg
nop
mov
mov
in
jmp
enter
push
jmp
out
or
push
jnp
mov
pop
push
outsl
push
xchg
and
in
inc
inc
repz
mov
add
stos
push
dec
dec
lock
or
cwtl
rcrb
mov
xor
pop
mov
push
push
push
loope
or
gs
andps
and
mov
faddl
lret
cwtl
xchg
les
addr16
sbb
pop
daa
mov
dec
js
xor
fmuls
iret
pop
jecxz
mov
push
sub
jl
std
jp
fists
mov
inc
adc
ja
insb
inc
jnp
and
loopne
pop
mov
lahf
and
fs
jecxz
mov
jne
out
cmp
or
mov
or
lcall
ret
out
lea
fists
or
jecxz
ss
pop
clc
out
xchg
adc
test
xor
cmp
xchg
notl
es
enter
sub
test
add
out
dec
inc
jmp
push
ljmp
and
loop
in
cmp
and
fmull
decl
mul
js
ret
cld
and
add
fcmove
sbb
stc
les
mov
add
jmp
test
mov
mov
js
in
pushf
andb
pop
fstpl
icebp
clc
out
ret
mov
xor
dec
ret
stos
sub
or
jl
sbb
out
repnz
ljmp
aas
cmpsl
mov
pusha
fmull
cmc
jmp
lret
xchg
push
addr16
xor
jmp
ficoml
push
and
adc
cmp
int3
mov
xchg
jmp
jns
add
sbb
mov
sub
pop
push
aaa
insl
mov
cmp
pop
mov
pop
sbbl
out
jmp
movsb
inc
insl
insl
aaa
shlb
sbb
sub
mov
and
jle
sahf
cmpb
cld
jl
arpl
mov
sahf
add
call
inc
push
dec
sbb
adc
sbb
aam
mov
inc
sub
fwait
daa
pop
mov
repnz
jg
imul
outsl
rorb
sbb
sahf
dec
push
push
insb
int
or
cs
call
lds
popl
jg
xor
cmp
iret
sub
mov
rorb
out
lock
inc
ret
cmp
divb
mov
stos
cld
subb
pop
inc
mov
popa
scas
iret
in
sbb
inc
pop
ss
pushf
mov
inc
or
mov
in
shrl
xor
sbb
or
aas
popa
stc
inc
test
aaa
jle
imul
adcl
xchg
daa
imul
xchg
insb
dec
push
ss
jb
xchg
jns
mov
dec
push
aam
cmp
cmp
inc
nop
jnp
clc
mov
mov
jno
cmp
jge
inc
scas
aaa
shl
sub
leave
je
sbb
stos
mov
xor
fs
aaa
mov
pop
pusha
imul
lret
inc
cmp
sbb
mul
pusha
xchg
call
scas
jge
and
adcl
clc
inc
add
outsb
and
adc
push
mov
inc
adc
out
adc
incl
jg
adc
cmp
dec
movsb
cmp
lret
loop
cmc
xor
sub
fsubp
ret
inc
cmc
pop
dec
mov
outsb
lds
test
ja
lods
pop
jne
lahf
or
mov
in
insb
lret
nop
in
int
xchg
mov
repz
in
in
movsb
sbb
adc
fwait
lock
cltd
repnz
add
or
cld
push
ss
out
and
cmp
push
lahf
arpl
mov
xchg
adc
pushf
inc
push
aam
mov
sub
dec
arpl
push
push
in
lcall
ror
int3
subl
insb
nop
clc
lock
dec
aaa
mov
incl
or
in
mov
cmp
imul
xor
insb
es
sahf
lods
sbb
popf
repz
testb
cld
in
adc
jne
repz
adc
push
push
mov
mov
inc
test
mov
xor
in
cmp
rcr
jae
sub
sahf
ret
aaa
adc
cmp
push
arpl
push
xchg
jnp
aad
sbb
add
insb
in
daa
hlt
jne
aas
in
mov
dec
stos
je
push
lods
xchg
push
mov
aad
movsb
jmp
sbb
jno
ret
push
leave
out
lds
stc
andl
and
xchg
mov
mov
enter
fisubrs
push
les
in
sbb
imul
pop
cmp
cmp
call
popf
ss
fadd
out
in
lds
je
adc
dec
lahf
add
pop
dec
cmp
sbb
mov
pop
stos
sbb
sbb
repz
int3
dec
imulb
std
dec
ja
mov
fsubrs
cmp
loope
sub
ret
popf
out
adc
sbb
mov
mov
lods
inc
stos
and
xor
xor
dec
sbb
shlb
jae
xor
cltd
sar
lret
jb
daa
pop
add
subb
sbb
iret
jmp
bnd
adc
mov
push
dec
jb
push
cld
adc
cmp
jb
cmp
add
and
or
aaa
mov
hlt
sbb
add
and
sahf
add
lea
in
pop
adc
pop
fwait
int
aam
inc
xor
cmp
adc
mov
nop
ja
int
arpl
push
and
in
jb
sub
sbb
test
sarl
fcmovbe
or
push
xorl
push
push
jno
cmc
cmp
daa
mov
movsb
dec
fwait
adc
nop
inc
or
mov
pop
push
iret
mov
dec
cmp
rolb
sar
mov
out
movq
sub
pop
xor
gs
stc
mov
mov
je
movsb
mov
cmp
mov
inc
scas
ret
std
and
loopne
mov
push
dec
mov
fadd
mov
pop
movsb
faddl
jns
insl
push
decl
shrb
dec
das
cmp
pop
sub
test
imul
pop
mov
xchg
and
test
mov
ret
sahf
int3
pop
call
mov
mov
lods
rcrb
xor
dec
adc
ror
add
and
into
mov
mov
fmull
dec
push
test
das
mov
mov
out
fwait
mov
push
and
or
lahf
xlat
mov
xchg
xor
or
dec
or
dec
cld
jecxz
sub
movsb
xchg
add
arpl
outsb
jecxz
cmp
fldt
and
mov
sub
push
jg
jo
pop
pop
lfs
cmc
push
fdivl
cmp
pop
or
and
adcb
mov
movsl
out
xor
jne
push
xchg
fsts
cld
movsl
or
outsb
push
mov
nop
mov
cmp
rcrb
mov
mov
sbbl
dec
dec
je
pusha
stos
push
leave
popa
subb
divb
sub
das
out
lock
dec
lcall
pusha
inc
adc
lods
fists
mov
adc
gs
inc
nop
fimull
test
aaa
cmp
fldt
scas
add
scas
test
adc
fstpt
hlt
lret
dec
mov
mov
mov
mov
cmc
icebp
popl
xchg
fcoml
rcrb
sbb
outsl
shll
lods
hlt
pop
xchg
push
inc
scas
iret
or
sub
pop
cmp
or
jno
rcrb
xchg
mov
inc
lock
add
and
mov
sbb
jo
push
insb
fisubrs
fwait
mov
adc
push
xchg
pusha
xchg
jmp
inc
sub
movsb
jns
push
inc
dec
lock
mov
adc
aas
lret
ficoms
or
lock
into
adc
mov
std
mulb
adc
iret
int
int3
jae
addr16
sbb
fs
and
jl
pusha
imul
mov
sarl
loop
pushf
sub
push
mov
mov
dec
fwait
or
repz
cld
mov
cmpl
lds
dec
add
pop
cmpsb
jg
mov
pmaxsw
ds
push
outsl
jns
pop
fldt
inc
shrb
pusha
and
sbb
imul
fidivs
adc
enter
mov
push
jne
rol
jo
outsl
movsb
sub
mov
cwtl
inc
cwtl
push
cs
and
fnsave
popa
icebp
les
adcb
sbb
cmp
mov
paddsw
mov
xchg
rcl
lea
or
pop
pop
pop
pop
dec
shrl
shlb
jnp
lret
das
in
xchg
xor
xorl
mov
and
cltd
or
xchg
xor
mov
adc
mov
imul
mov
ljmp
xor
jae
loop
addr16
stos
pop
cs
pop
pop
jno
out
xchg
ja
xorb
xchg
jae
je
movsb
mov
adc
and
push
ja
ficoml
loopne
mov
and
sbb
sti
sub
sub
push
test
pop
sbb
adc
ficoml
cltd
dec
leave
push
add
push
xlat
pusha
enter
and
fsubrs
lcall
in
jo
fadds
sbb
inc
mov
inc
dec
into
les
or
divb
aaa
cmp
je
icebp
faddl
xor
adc
and
pop
xor
and
rol
or
ret
lock
mov
stc
sbb
aas
cmp
mov
inc
push
fists
xor
iret
shl
jb
cwtl
xchg
nop
push
push
clc
sbb
mov
pushf
jb
ss
or
mov
or
push
mov
js
sahf
scas
in
sub
sti
cmpsl
fwait
scas
xchg
lret
cmp
push
mov
repz
cmp
add
and
out
sub
sbb
xor
mov
fidivrs
cmp
std
and
inc
out
pusha
dec
push
and
jo
scas
inc
dec
js
out
lret
pushf
xlat
xor
fwait
inc
popa
in
dec
ret
adc
add
es
out
mov
ret
lret
loop
sar
inc
in
cmp
push
leave
lahf
adcl
rcll
mov
jg
adc
inc
jbe
push
mov
je
mov
push
add
lock
and
xchg
roll
fistpll
out
mov
fcoml
pushf
imul
iret
shlb
fistl
js
imul
das
xchg
scas
pushf
mov
outsl
sub
xchg
lods
push
xor
adc
fwait
sbb
iret
pushf
adc
adc
add
movsb
in
xor
pushf
add
fstpt
jl
mov
lahf
inc
std
inc
push
jmp
addr16
pushf
adc
or
test
add
dec
cmp
addl
jno
js
inc
cmp
or
loopne
sbb
sbb
or
test
add
cmp
shlb
je
adc
or
insb
pushf
mov
fs
push
sbb
rolb
mov
mov
or
repz
in
sub
push
sbb
or
mov
sub
mov
ja
lods
orb
fwait
daa
scas
adc
rorb
ljmp
bound
sub
mov
in
stos
aad
adc
and
out
fdivl
and
scas
jmp
sbb
movsl
xchg
add
pop
cmp
inc
stc
imul
add
mov
stc
daa
mov
push
shlb
imul
adc
push
dec
cmp
pop
adc
push
xor
xchg
mov
add
das
clc
push
cmp
pop
adc
xchg
nop
out
xchg
out
inc
inc
and
scas
add
and
ss
xor
adcl
pop
movsb
popf
inc
sub
pop
mov
sub
and
fmuls
wrmsr
les
add
sahf
fidivrl
sub
and
sub
sbb
iret
sub
push
sub
jb
in
out
xchg
movsb
jle
sub
dec
pop
mov
push
subb
push
inc
in
ret
mov
je
jo
test
dec
out
aam
fcoml
aad
push
mov
or
jmp
out
xor
rclb
and
outsl
mov
sub
or
enter
pop
call
das
out
or
mov
push
and
gs
add
dec
pusha
cmp
das
cmpsl
and
ss
sti
outsb
mov
aam
mov
dec
pop
sub
xor
lahf
sbb
push
shlb
rclb
or
xor
iret
and
mov
scas
inc
lcall
and
inc
frstor
lods
lods
in
pushf
xchg
or
es
cwtl
fsubrl
imul
cmp
mov
push
sub
jecxz
mov
das
fldt
jmp
or
xor
loopne
add
cmp
add
ds
cmpsb
dec
test
jecxz
jbe
decb
in
push
jmp
inc
push
jg
xor
add
fdivs
xchg
dec
fmuls
stos
fbstp
std
ret
sub
lea
jge
xor
dec
dec
cmovbe
cmpsl
dec
sbb
sbb
shll
push
jle
out
push
bound
call
xlat
xchg
mov
xchg
xchg
sarb
fisttpl
mov
das
mov
xor
jns
stos
jnp
xor
and
sbb
aaa
pusha
mov
rolb
sti
sbb
popa
xor
cmp
xchg
and
nop
lds
xchg
fmul
cli
out
in
fidivs
push
cmp
and
and
movsl
push
inc
cld
push
pop
or
aaa
and
sarb
insb
sub
dec
sbb
dec
dec
push
aaa
inc
cmpsb
or
ds
or
inc
lds
arpl
jle
nop
sahf
jb
cmp
push
add
dec
jp
sbb
mov
push
adc
jb
loop
stos
adc
mov
mov
fucomi
jne
ljmp
push
add
lret
xchg
js
sub
add
pop
fs
jge
pop
in
adc
push
leave
gs
into
or
sti
and
or
mov
xor
mov
repz
out
adc
flds
sub
mov
pop
test
cmp
cmp
cmc
or
adc
pop
inc
rorb
int3
mov
pop
ret
adc
out
jbe
scas
xorb
fnsave
or
xchg
lock
lcall
jnp
jns
jp
mov
and
frstor
arpl
imul
in
add
mov
pop
push
not
cmp
jl
or
outsb
add
mov
je
mov
aas
mov
mov
inc
adcl
inc
movsb
push
cltd
mov
jo
jge
mov
add
push
cld
add
test
scas
fcoml
xchg
je
push
out
cmp
adc
adc
mov
mov
inc
jbe
inc
ja
push
or
in
aad
ss
sub
or
in
clc
notb
loope
push
pop
incb
call
shr
jmp
sub
outsb
cmpsl
dec
add
and
ljmp
aas
out
xchg
ds
aam
es
push
gs
out
das
fcom
xchg
jno
pop
fcmovu
mov
jmp
ret
cltd
jecxz
xor
pop
or
aas
xchg
movsb
cmpb
xor
push
loopne
mov
ja
ja
adc
gs
xchg
aam
sbb
mov
mov
daa
and
push
sbb
jne
mov
jnp
jle
test
enter
sub
aam
aad
jmp
adc
jbe
cmp
jmp
aas
leave
mov
adc
sub
outsb
cmp
or
imul
xchg
or
jns
inc
nop
sub
push
push
adc
or
xchg
mov
cltd
sti
mov
js
sbb
pop
lods
ret
clc
insb
adc
mov
push
daa
ret
sbb
lock
pusha
jecxz
sbb
add
jp
sub
dec
roll
mov
test
push
ds
push
in
add
push
decl
xacquire
outsb
shll
push
test
jmp
sbb
mov
insb
bound
pop
sbb
mov
mov
idivb
sti
outsb
xchg
sub
or
bound
in
stos
test
pop
push
adc
inc
mov
jp
xor
xor
adc
pushf
mov
hlt
bound
cmp
in
lret
ljmp
dec
cmp
mov
sti
inc
movaps
inc
test
mov
cmp
rep
mov
aam
in
push
adc
xchg
fiaddl
push
loop
xchg
pushf
insb
aaa
mov
mov
sbbl
insb
lahf
das
mov
das
adc
cmp
jg
repz
stos
rcrl
hlt
mov
jo
lea
lea
jecxz
sbb
nop
test
pop
inc
stos
and
sbb
stos
jle
mov
arpl
jp
sub
leave
out
jp
imul
push
fmull
push
in
pop
pushf
ret
dec
or
femms
push
jle
rol
das
push
push
pop
iret
dec
aam
adcl
add
and
test
int
xchg
and
mov
jbe
adc
cmpsb
out
daa
mov
clc
mov
inc
dec
jae
stos
pushf
aas
pop
sub
inc
ljmp
ss
ss
xor
das
pop
and
dec
pop
sbb
shlb
cmpsb
xchg
jmp
xor
push
sarl
or
xchg
mov
sub
lcall
test
fidivrs
mov
and
push
pop
jne
xor
jl
adc
dec
inc
mov
movsb
adcl
inc
sbb
inc
jb
xchg
lock
pop
test
adcl
testb
lret
mov
inc
gs
dec
fs
das
dec
pop
insb
dec
add
fcmove
inc
mov
xchg
test
ljmp
movb
jo
hlt
mov
jae
and
xchg
pushf
pop
in
popl
cltd
xchg
pop
mov
inc
roll
or
cs
mov
pop
loop
shlb
bnd
jo
and
sbb
jg
push
imul
mov
stc
cmp
inc
adc
icebp
fwait
adc
dec
sti
cmc
push
dec
imul
push
push
nop
scas
adc
in
ret
enter
stos
inc
sbb
faddl
or
add
mov
fldcw
adc
xor
pop
adc
xor
jg
lea
loope
mov
jecxz
mov
lahf
jns
xor
mov
mov
bound
cwtl
and
int3
fcoml
mov
jle
or
lcall
ret
jno
fnstenvs
xchg
fisubs
imul
stc
arpl
adc
test
or
mov
sbb
add
je
addr16
rcr
int3
xor
adc
dec
pop
lcall
cmp
shll
and
sub
jle
push
loop
mov
in
stc
xchg
roll
jmp
cli
inc
push
cmc
in
mov
add
xor
cmpsl
sub
lea
loop
out
and
insl
cmp
cmp
cld
dec
push
push
rcrb
test
inc
out
repnz
mov
mov
add
outsb
in
std
fdiv
mov
mov
scas
and
iret
fwait
dec
sbb
ja
mov
cmpsb
add
push
push
mov
cmp
pushf
mov
jmp
jno
cmp
xor
adc
jg
loope
add
adc
cmp
stos
fsubs
clc
stos
sahf
and
add
ficomps
aas
dec
sbbl
ret
leave
sbb
je
ja
or
sbb
out
push
xor
ret
rcl
mov
repnz
fnstcw
test
aam
push
pop
cmp
mov
jmp
sar
jg
cmp
mov
xchg
dec
push
xor
js
add
xchg
fincstp
addr16
sbb
aaa
push
and
xor
shlb
cld
mov
adc
inc
cld
mov
loop
xchg
mov
or
hlt
scas
xchg
push
test
jne
sub
inc
into
shlb
sub
adc
dec
mov
mov
xor
mov
xchg
xlat
cmpsb
cmp
cld
les
sub
pop
scas
xor
xchg
xchg
xchg
jge
sub
cmpsb
sub
sbb
xchg
and
and
fidivrs
mov
notl
out
jge
nop
xor
into
xlat
jae
arpl
xchg
jbe
sahf
es
icebp
mov
stos
std
inc
jae
and
xchg
nop
sti
mov
cwtl
test
scas
rolb
rolb
push
aaa
and
fistl
xchg
cwtl
nop
mov
in
sahf
adc
dec
mov
ret
pushf
in
divl
jae
fdivs
jecxz
mov
xor
ja
lods
das
mul
inc
or
xchg
xor
pop
jl
stos
lods
lahf
arpl
in
jno
movsb
loopne
ljmp
or
aas
cmp
mov
push
out
adc
into
push
pushf
dec
push
sar
mov
xchg
push
adc
cld
sbb
sahf
jecxz
inc
test
push
sub
jp
and
std
fst
mov
insb
into
and
test
sbb
push
push
add
pop
adc
add
stos
pop
lahf
ret
loope
sub
imul
add
cmp
xor
inc
loope
mulb
sbb
mov
adc
push
das
rolb
cmp
test
int
or
mov
iret
cmp
scas
jecxz
mov
insl
es
add
sbb
outsl
sub
lock
imul
movsb
in
mov
jbe
add
jmp
push
fisttps
push
add
adcl
sbb
mov
inc
dec
pop
int3
imul
out
xchg
and
xchg
or
les
into
mov
fsubl
add
and
mull
fs
mov
iret
ds
cs
inc
jb
adc
push
add
lea
mov
arpl
sub
push
mov
enter
jnp
mov
lock
add
in
mov
mov
inc
aaa
jno
aaa
popa
xor
aam
fiadds
push
js
cli
inc
mov
xor
adc
in
add
xlat
xor
in
fldt
cwtl
cmp
or
icebp
addb
inc
cmp
fwait
mov
sbb
and
repz
dec
inc
pusha
pop
mov
mov
cmp
sbbl
jmp
pop
xor
lock
push
cmp
pop
sbb
es
inc
pop
xchg
lret
cmpl
out
add
inc
mov
out
cld
imul
call
psubsb
dec
and
scas
mov
and
loopne
xlat
inc
mov
mov
mov
sbb
sub
lods
cwtl
je
xchg
xchg
adc
popa
push
in
stos
clc
mov
into
and
imul
sub
outsb
leave
nop
xor
jmp
sbb
mov
fsubrl
lret
arpl
in
sbb
jmp
or
lret
nopl
push
test
pop
jbe
push
mov
cmpsl
ds
and
ss
fs
mov
inc
jp
cwtl
les
insb
cmc
mov
sbbb
mov
lret
aam
jge
add
push
sub
aad
mov
jge
add
js
inc
sbb
jb
jo
xchg
cld
les
sbb
and
and
movsl
adc
inc
hlt
or
enter
ja
or
fbld
test
pop
jmp
and
lret
inc
adc
inc
adc
adcb
sub
jae
jb
jp
sbb
mov
sbb
fwait
insb
mov
cmp
jne
mov
xor
push
lcall
push
scas
cmp
loopne
pop
mov
notl
adc
and
loope
mov
imul
int
and
mov
lods
cmp
cmp
loop
ja
int3
sbb
sar
fistpll
int
out
adc
mov
dec
test
add
cwtl
sbb
inc
repz
fistps
xor
jp
and
loopne
shrb
add
sbb
test
test
sbb
into
pop
or
dec
std
movsl
sbb
cmp
mov
les
mov
pop
push
or
mov
dec
pop
in
cld
mov
sub
jp
test
int3
clc
jmp
and
jmp
in
push
gs
cmpb
lods
cltd
daa
rcrl
sub
mov
divl
addb
cwtl
orl
cmp
scas
icebp
push
mov
xor
int
pop
pop
shl
mov
rep
insl
inc
sahf
dec
subl
repnz
sub
dec
lcall
arpl
out
jb
shr
mov
jmp
pop
movzwl
mov
fs
std
or
xchg
add
aas
out
mov
in
xchg
mov
lock
clc
pushf
sti
outsb
cli
mov
test
jnp
mov
mov
mov
sbb
inc
popa
setb
jns
dec
xor
sbb
and
add
inc
insl
leave
or
mov
and
cli
mov
jns
ljmp
sub
movsb
push
ja
clc
push
js
xor
dec
sar
xchg
sahf
sbb
push
andl
lock
aaa
lock
inc
add
ljmp
shlb
inc
and
mov
sub
lret
fs
in
mov
lods
add
cs
sub
popa
ret
cmc
cmc
fists
cltd
xlat
lret
cmpsl
mov
arpl
out
add
mov
xlat
lock
cmp
adc
adc
addr16
push
jle
push
mov
mov
add
and
or
movsb
stos
mov
int
mov
mov
add
mov
pusha
push
shl
cmp
adc
jle
mov
inc
and
mov
cmp
stos
outsl
pop
xor
vcvtdq2ps
push
mov
sub
or
sbb
cwtl
sar
dec
test
cltd
add
mov
aaa
xchg
cmp
call
sbb
stos
test
or
test
sbb
push
push
pop
cwtl
mov
add
movsb
mov
adc
mov
sbb
mov
test
nop
shll
ret
xchg
movsb
xor
imul
push
loopne
scas
hlt
hlt
cli
insb
cmp
in
lahf
out
inc
dec
aam
subb
adcb
test
test
and
adc
lds
push
jb
into
sbb
dec
aam
and
shll
dec
and
cmp
jle
pop
inc
fisubs
add
and
out
push
cwtl
xor
lds
in
adc
xchg
dec
lcall
mov
mov
jae
cli
icebp
into
shr
mov
inc
jmp
mov
add
or
dec
jae
out
inc
push
out
lds
enter
shll
ja
adc
aaa
sub
adc
xchg
out
sub
jae
sub
lret
add
ja
and
xchg
sbb
dec
dec
adc
jp
pop
jno
inc
aaa
into
je
or
testl
push
mov
inc
adc
ja
iret
out
loopne
sbb
pusha
sbb
shlb
loop
adc
inc
cltd
in
push
sbb
insl
push
rclb
lods
and
and
jle
fdivrl
add
out
jne
lret
jl
pop
arpl
movsl
aas
pusha
pop
fbld
xor
jge
push
push
push
lods
push
jp
push
sbb
mov
jb
mov
push
je
lret
cmp
jo
cmp
mov
push
int3
inc
mov
and
pop
cmp
ret
sbb
sbb
repz
in
cmp
xlat
in
fstps
insb
imul
or
push
out
sbb
imul
adc
stos
fldl
adc
mov
subb
aaa
xor
mov
jge
xchg
out
icebp
iret
js
xchg
nop
add
sbb
cmp
iret
and
xchg
iret
dec
aas
xchg
int
ja
push
shrl
adc
test
dec
ds
sub
dec
xchg
ljmp
sub
and
loopne
mov
pop
sar
mov
cld
scas
adc
push
ret
rorb
ret
outsl
rcl
xchg
pop
adc
sti
xchg
mov
cmpsb
ljmp
mov
call
ja
iret
mov
or
addr16
ja
adc
ret
fs
jle
inc
je
xchg
adc
cmp
lahf
popa
lcall
test
mov
loope
enter
loop
jo
adc
enter
cmc
add
jmp
or
xchg
jb
cmp
push
sahf
mov
movsl
adc
lret
fcompl
call
xchg
lea
jo
pop
push
push
repz
fisubl
inc
fildl
sar
stos
inc
loopne
dec
xchg
movsl
add
shlb
cmp
iret
scas
xor
xor
testb
jno
imul
adcb
mov
hlt
or
lods
add
dec
leave
push
inc
fwait
icebp
in
mov
sarb
addr16
xchg
shr
jns
dec
jg
cmpsl
pop
sbb
jne
loope
pop
repnz
and
scas
jae
enter
cli
dec
mov
mov
xlat
orb
out
push
cmp
loopne
cmp
inc
addl
and
ficompl
jmp
bound
mov
mov
out
xchg
push
inc
mov
inc
add
iret
sbb
jle
out
xlat
mov
mov
insb
fmul
mov
mov
out
fimuls
sbbl
and
jge
xchg
add
insl
cs
push
in
cld
sub
sub
or
ljmp
add
test
addb
cmp
cld
and
xchg
repnz
scas
incb
jmp
mov
daa
sbb
add
mov
testl
cmp
add
sbb
pusha
repz
je
add
insb
pop
xor
lods
ficoms
mov
sbb
xor
push
or
jno
and
scas
arpl
aaa
inc
and
mov
in
or
lcall
out
inc
inc
sub
and
imul
adc
mov
leave
sarl
cmp
sbb
fstl
xor
jb
push
and
mov
inc
clc
adc
jnp
pop
xlat
sub
test
repz
ficompl
adc
and
shll
pop
adc
mov
movsl
mov
movsl
sbb
sub
int3
add
cmp
jl
into
fdivrl
in
aam
jecxz
mov
iret
mov
jbe
enter
or
sub
mov
lret
jb
pop
jbe
add
mov
gs
or
or
adc
push
lock
dec
lcall
sub
enter
aad
dec
aaa
cmpsb
xchg
push
jg
xchg
sbbb
xchg
movsb
or
cmp
or
and
xchg
sahf
out
ja
sub
jae
xchg
push
jno
push
sbb
mov
lahf
jle
test
ror
dec
sub
cmp
push
mov
add
mov
dec
and
popf
push
cmp
lret
outsb
repnz
dec
mov
pop
xchg
imul
jle
push
sbb
jle
mov
or
jne
fldl2e
outsl
dec
aam
and
jge
and
popa
movsb
pop
mov
jge
add
add
pop
out
mov
lea
xor
out
mov
fbstp
ja
adc
xor
fsubrp
cmp
divl
aas
loop
add
enter
push
shlb
mov
mov
inc
nop
and
and
adc
jae
cmp
ss
jae
push
xchg
rolb
ja
das
cmpsb
pop
cltd
cmp
fwait
xor
sbb
jns
xor
mov
add
icebp
movsl
repz
test
adc
into
sub
cwtl
out
mov
scas
xchg
add
daa
jns
mov
sub
enter
or
sub
push
cs
adc
outsl
pop
push
xchg
add
aaa
mov
xchg
inc
xchg
mov
inc
rcrb
mov
xchg
mov
fs
test
lds
cli
addr16
aam
jns
fmuls
enter
jecxz
xor
mov
push
sub
and
mov
insl
aad
movsl
aam
mov
daa
mov
and
mov
call
insl
pop
or
cmp
gs
dec
push
add
das
iret
subl
icebp
push
xor
and
mov
xchg
rcl
jnp
leave
xchg
scas
out
inc
iret
cmp
sub
push
outsb
jb
jp
push
ficoml
repnz
jo
or
lret
mov
adc
and
inc
mov
push
notb
lds
out
test
negb
push
inc
or
and
cwtl
out
int3
push
jb,pn
xor
mov
aaa
and
shl
ficompl
call
adc
push
fwait
or
movsl
mov
enter
xchg
sbb
cwtl
pusha
insb
iret
inc
imul
dec
lcall
or
inc
imul
sbb
inc
dec
sbb
sbb
or
pop
sub
stos
xchg
xchg
push
rorb
jl
jp
sbb
mov
push
scas
xchg
xor
std
mov
notl
adc
aaa
aas
das
imul
inc
call
add
enter
push
pop
int
fcoml
fldlg2
mov
cmp
mov
add
and
movsl
adc
xchg
xor
repz
mov
xchg
jb
int
xchg
je
push
movsb
stos
loop
scas
rcll
jb
fs
inc
lret
jl
dec
stc
fcoml
mov
clc
lcall
and
es
xor
xor
jmp
adc
xchg
insl
ss
sub
sub
sahf
and
xchg
mov
repnz
pop
icebp
push
bound
cld
xchg
test
fsubl
mov
mov
imul
imull
cmp
mov
sti
cwtl
dec
xchg
pop
pop
fstpt
dec
fwait
mov
cmp
pop
outsb
xlat
jnp
enter
dec
and
push
dec
shrl
add
xchg
pop
out
push
inc
push
inc
cld
cltd
outsl
sub
jg
xchg
or
lock
cli
rclb
jnp
mov
and
aad
xchg
ds
popf
mov
in
pop
mov
add
push
push
pop
sbb
mov
call
cmpsb
andl
cli
and
push
movsb
jo
movsl
ljmp
outsl
pop
test
xchg
scas
jle
push
add
or
sbb
ja
add
mov
mov
pop
jle
inc
and
xchg
mov
mov
insb
xchg
ljmp
or
jb
lret
out
jae
cs
sbb
pop
mov
push
mov
fsubl
mov
xor
std
dec
xchg
jae
and
idivl
lods
mov
jmp
cli
mov
in
xchg
hlt
xor
xchg
inc
inc
sbb
js
mov
mov
in
test
xor
es
mov
mov
mov
or
movsl
jnp
mov
sub
cmp
push
sbb
sub
aaa
hlt
inc
cmp
loopne
sub
sbb
jmp
adc
sub
fsubrs
jae
fs
sub
mov
unpckhps
fisubrl
jns
aad
pop
roll
adc
jg
fxam
adc
sbb
mov
rol
pop
dec
ja
jmp
and
sar
cmp
js
enter
push
sbb
ljmp
lahf
ss
mov
xlat
dec
icebp
pop
outsb
and
in
bound
jecxz
je
push
pop
fmuls
mov
iret
and
ss
icebp
test
push
iret
jae
fnsave
or
ficomps
les
sbb
push
sub
fisubl
dec
mov
iret
xor
push
test
fdivs
sarl
int3
pop
int
adc
mov
fcompl
ds
mov
pop
shrl
add
xchg
pop
mov
mov
add
je
mov
outsb
adc
and
jl
xchg
mov
push
movsb
xchg
push
stos
xor
or
fsubs
les
dec
sub
pop
or
add
mov
xchg
xchg
and
inc
xlat
repnz
jmp
cwtl
insl
fsubs
icebp
fwait
sbb
sub
push
mov
cmc
sub
push
mov
rclb
std
xor
xor
lock
lea
sahf
das
jmp
js
stc
inc
sub
inc
sub
mov
shl
loopne
sarb
cmpsl
xchg
jmp
pop
fldenv
add
int3
idivb
hlt
call
fsubr
inc
fdivs
push
jecxz
data16
mov
outsb
adcb
jl
jo
sbb
add
hlt
lahf
push
xor
mov
mov
xchg
scas
xor
das
fsubs
push
pop
dec
fstpl
out
out
pop
inc
test
insb
dec
int3
in
pop
shlb
insl
push
iret
imul
fs
pop
ljmp
mov
or
mov
xchg
dec
fmuls
add
call
or
jge
xchg
scas
into
scas
pop
sti
cld
push
daa
inc
ja
aam
lahf
push
scas
lods
shrb
repz
das
mov
fisubl
ljmp
sub
mov
xchg
sbb
push
dec
or
call
mov
jnp
add
lods
lcall
inc
dec
dec
clc
mov
cmp
imul
xchg
mov
mov
mov
or
mov
fidivl
pop
mov
xor
push
mov
outsl
enter
cld
pop
fists
add
in
cmp
repz
jns
in
add
push
mov
sbb
inc
mov
stc
and
adc
mov
addr16
inc
faddl
rorb
cmpb
and
mov
mov
jb
or
pushf
mov
fadds
mov
adc
xor
xor
push
lock
lahf
mov
stos
js
ljmp
pushf
clc
and
scas
mov
cmp
add
jb
pusha
test
bound
cmp
das
xlat
or
and
mov
pushf
stos
jnp
jns
push
sub
pop
push
in
rcrl
fidivl
cwtl
or
xchg
loopne
push
lods
rorl
mov
gs
push
in
and
pop
stos
jns
push
testl
daa
shlb
add
jecxz
loop
int
loope
stc
xchg
dec
mov
jb
subb
adc
sub
add
in
add
or
enter
sub
jns
xchg
pop
jae
scas
inc
lds
jae
sbb
adc
clc
imul
push
mov
xor
jo
xor
sub
lret
jl
stos
je
sub
loopne
add
and
out
enter
repnz
je
jmp
gs
out
xchg
repnz
out
lcall
cmpsl
mov
xchg
sbb
or
inc
fwait
repnz
shrb
js
cmp
imul
into
pop
fwait
or
dec
cmpb
mov
mov
adc
cmp
loopne
xor
pop
xchg
xchg
loop
clc
addr16
fcomps
in
inc
lock
dec
lcall
push
shlb
xor
lcall
xorb
sub
xchg
sbb
lods
jmp
push
push
xlat
xchg
xchg
aaa
into
movsb
daa
arpl
bound
call
hlt
mov
jo
lds
loopne
add
dec
mov
dec
fbstp
sbb
enter
fsubs
xchg
mov
aaa
mov
ss
cmc
xor
in
in
call
rcll
cmp
cli
xchg
push
jecxz
clc
jnp
xor
dec
pop
pushf
jb
dec
and
nop
dec
ss
aad
and
addr16
push
dec
pop
inc
cs
xchg
insl
cmpsl
scas
sub
jp
xor
push
dec
push
pop
jp
enter
das
add
mov
add
sbb
rolb
dec
mov
rcr
lahf
ds
cltd
cmp
fstpl
nop
mov
cmp
ja
in
or
fsubl
lahf
ror
mov
jl
jns
fildll
test
push
jns
and
mov
insb
aas
inc
xchg
lret
adc
push
sbb
mov
icebp
shlb
push
imul
iret
xchg
test
push
gs
xchg
flds
addb
cli
aas
push
lret
and
jbe
cmpl
xchg
sbb
sti
and
mov
mov
adc
dec
and
cmp
lods
in
push
and
mov
sub
lock
loopne
cmc
jae
add
push
xchg
aas
mov
in
inc
mov
fstpl
dec
sbb
mov
sub
mov
fs
mov
cmp
jmp
ss
jne
inc
jbe
outsb
sbb
and
push
mov
mov
jg
in
adc
and
mov
out
outsl
cltd
push
jb
pop
pop
mov
xor
sbb
popf
test
push
insb
and
push
jae
push
mov
fistpl
sbb
dec
sub
push
dec
cmp
mov
shlb
ss
cmp
mov
mov
insl
sub
lcall
sub
push
lret
in
ja
iret
pop
iret
jnp
loope
push
int3
cltd
adc
lahf
divb
jmp
mov
xor
subb
inc
in
cs
push
cmpsl
sub
sahf
inc
inc
loopne
lods
inc
and
out
lahf
lcall
fstl
xor
clc
jb
shlb
sub
lcall
cwtl
mov
mov
inc
mov
jbe
dec
movl
je
sarl
lahf
imul
sbb
xchg
les
stc
or
shrl
mov
aad
mov
adc
fdivrl
ds
stos
loopne
jl
andl
movsb
fimull
repz
call
arpl
mov
and
inc
fdivl
pop
xor
or
xor
sub
cmp
or
xor
ja
pushf
pop
inc
loop
shll
aad
pop
inc
insb
repnz
loope
rorl
jae
or
inc
int3
cmpsb
mov
test
push
inc
jp
mov
push
rorl
rcrb
outsb
fmull
les
cmp
sahf
or
ja
xchg
mov
je
adcl
sub
ja
sub
mov
hlt
sbb
aaa
pop
cmp
stos
movsl
xsave
loope
clc
dec
jg
push
int
or
mov
loop
ret
adc
loopne
sub
repnz
adcl
sub
addr16
cmc
repz
push
enter
jp
jnp
popf
mov
ret
in
adc
test
clc
aam
inc
mov
mov
push
lret
mov
adc
mov
enter
xor
orl
imul
fmuls
sub
testl
mov
mov
stos
inc
imul
jns
mov
push
dec
cmpsl
cmp
pushf
jmp
xorl
orb
inc
dec
les
dec
jp
cmp
lret
cmp
imul
repz
lret
fldcw
pop
jecxz
das
sbb
inc
push
ljmp
jnp
filds
pushf
loop
in
push
inc
popf
movsb
scas
jl
dec
cmp
cmpb
jb
dec
mov
popf
sub
dec
or
xor
inc
jmp
or
xchg
mov
mov
xchg
enter
arpl
cwtl
lret
stc
inc
lds
sub
cmp
leave
push
and
xor
xchg
adc
outsl
fmul
jo
dec
daa
test
mov
adc
xor
es
arpl
mov
pop
mov
and
stos
cmp
enter
mov
rorl
sbbb
aas
inc
or
lea
cmp
inc
cmp
mov
jo
mov
mov
or
jmp
mov
cmp
jmp
jmp
and
bound
mov
sub
cwtl
sub
mov
xchg
sarl
in
mov
pop
jge
imul
xchg
movsb
lahf
inc
je
push
sbb
push
xor
outsl
push
sbb
push
push
stc
pop
lret
mov
jo
mov
mov
sub
and
in
rcrb
fwait
dec
inc
movsb
test
fcoml
xchg
sbb
add
jecxz
jle
jle
mov
std
out
and
jbe
mov
dec
or
sub
jbe
mov
fbld
adc
aaa
pop
or
push
xor
or
mov
rcrl
lret
pop
rep
les
cmp
cmp
lahf
lret
repz
pop
mov
push
aam
std
cmp
or
or
xchg
xor
xchg
in
jns
mov
cmp
sbb
dec
aaa
hlt
mov
push
mov
xor
adc
mov
sbb
out
mov
sti
les
jne
add
ljmp
jno
shrl
fmuls
inc
pop
movsl
xlat
cmp
pushf
cmp
loop
jno
into
jns
cmp
push
jo
dec
cmpsb
in
andl
push
cmc
stc
lahf
dec
push
fcmovnu
mov
imul
mov
xchg
adc
imul
cmpsl
add
ja
cmp
dec
inc
sub
push
divl
xchg
mov
outsb
dec
xor
push
loopne
cwtl
cld
test
cmp
or
rcrb
dec
loope
insb
sahf
or
loope
push
push
add
mov
push
js
into
add
imull
sub
or
mov
lret
jo
push
or
xchg
lahf
sbb
mov
jns
adc
cmp
mov
push
add
xchg
mov
jp
fbstp
rcrb
jbe
adc
cmp
es
and
lods
dec
sbb
inc
mov
test
pop
enter
loope
cwtl
mov
sub
inc
clc
dec
rcrl
nop
idiv
ja
add
mov
or
imul
add
ret
mov
fwait
push
pop
mov
fcompl
fidivrs
scas
add
push
cmp
jbe
push
dec
xor
lret
mov
adc
out
xor
inc
mov
movsb
test
ja
add
cmp
mov
dec
imull
out
cmp
xchg
aam
gs
fstpl
inc
add
or
das
and
push
mov
add
add
mov
addl
aaa
dec
ja
inc
aas
push
mov
pop
int
sub
stos
push
shll
jecxz
and
mov
mov
or
and
xor
das
push
mov
xchg
cmpsb
je
add
faddp
std
and
bound
pop
outsb
cmpsl
sbb
cmpsb
in
inc
jbe
clc
add
stc
jmp
divl
jecxz
mov
out
cs
push
mov
dec
xchg
mov
std
leave
fisttps
xchg
mov
cwtl
inc
lea
push
ss
loope
fsubr
fistpl
out
fadds
sahf
lea
xchg
ret
ficoml
addb
out
or
ja
jg
or
aaa
mov
pop
pusha
mov
mov
jns
shll
aas
scas
push
stos
add
mov
push
adc
add
or
inc
xor
inc
add
xchg
jl
test
adc
out
cmpsl
movsb
push
xchg
dec
mov
cwtl
aaa
mov
mov
inc
mov
cmc
mov
jb
push
mov
test
cmp
loop
fstp
lods
sbb
xchg
inc
fwait
mov
adcl
das
or
clc
jp
movsb
in
in
jmp
xchg
int3
out
aaa
inc
stos
and
lods
pop
je
test
sub
insb
adc
jecxz
or
in
inc
push
scas
jl
adc
insl
fstpt
pavgw
rcr
cmp
sub
mov
ret
jo
outsl
push
lods
test
dec
inc
add
into
push
shll
xor
lock
fdivl
push
mov
cmp
xlat
and
hlt
fs
adc
adc
push
pop
xchg
xor
mov
sub
stos
and
push
das
ljmp
and
shrl
mov
adcb
out
cld
or
clc
ror
fs
push
stos
pushf
sti
mov
daa
hlt
in
sbb
daa
loopne
scas
aas
ja
lret
test
cmp
mov
pop
ret
test
jae
inc
push
inc
cmc
gs
pop
scas
inc
or
xor
mov
pusha
cmp
and
push
lret
fstps
lds
and
lock
push
iret
adc
fsubl
adc
xor
idivl
inc
cmc
movsl
scas
push
in
out
in
mov
xchg
popf
addr16
cmp
cmp
out
ret
movsb
cmc
cmpsl
or
faddl
xlat
insl
dec
dec
divl
stos
ja
mov
clc
movsl
mov
inc
out
cmp
imul
pop
leave
orb
inc
jecxz
sahf
paddusb
adc
jnp
js
shrb
decb
in
sub
test
or
int
pop
inc
js
inc
in
inc
js
test
ret
das
xchg
pop
mov
mov
mov
test
ljmp
imull
dec
in
pusha
mov
adc
xchg
pop
fnsave
scas
xchg
mov
rcrl
test
repnz
cmp
xor
cmpsl
and
lret
test
push
negb
xor
fisttpll
push
or
sbb
xor
mov
lods
xchg
xor
and
or
lea
xchg
cmpsb
sub
scas
addr16
or
xchg
add
mov
xlat
xor
orl
test
mov
mov
mov
sbb
pop
mov
ljmp
stos
mov
and
mov
jge
out
push
std
xchg
cltd
jbe
leave
cmp
cli
jl
jno
rorb
add
push
adc
outsb
sahf
mov
ret
negl
loopne
mov
lret
push
adc
repz
dec
push
inc
push
adc
sbb
negl
test
repnz
jmp
bound
or
or
xor
lods
cmpsl
xor
mov
inc
pusha
dec
in
cmp
push
dec
xor
jg
xor
sbb
fldenv
cld
int
push
bound
in
cld
pop
fsubs
cwtl
xchg
loop
sbb
mov
and
push
jl
push
push
bnd
lods
test
sbb
jo
cmp
jle
jbe
mov
aam
pop
ret
sbb
mov
push
mov
xchg
dec
pop
jae
notb
sahf
mov
pop
insb
bound
pop
test
je
fs
cli
jmp
aas
mov
and
xor
push
pop
push
mov
cld
mov
out
fisttpl
aaa
scas
pop
or
adc
fcompl
xchg
mov
jl
cmp
cmp
aam
pushf
test
jbe
gs
out
or
pop
xor
sub
dec
xlat
je
mov
enter
leave
bound
nop
dec
or
jmp
imul
adc
test
add
sub
fisubl
xchg
test
nop
push
pop
or
sub
pusha
sub
or
in
ds
fsts
xchg
adc
rolb
mov
ja
push
fwait
jns
in
roll
mov
mov
andb
lret
das
out
nop
pop
nop
and
adc
stos
push
loopne
dec
dec
aad
fiaddl
int
pop
insb
test
mov
jl
pop
cmp
xor
and
dec
lods
adc
adc
xor
lds
push
jne
jo
stos
sbb
xchg
mov
dec
xchg
das
mov
cmp
daa
pop
lret
xor
lods
fcmovnu
dec
adc
push
dec
int
notb
stc
and
jnp
sub
mov
mov
mov
cs
inc
mov
insb
mov
xchg
inc
fstps
sahf
shrl
inc
cmp
lods
aam
pop
aas
pop
jns
inc
rcr
insb
cmp
test
xchg
test
sub
out
fs
adc
jge
sbb
xor
jo
lcall
xchg
ss
jae
call
mov
xor
and
cmp
push
pop
ret
int3
sub
pusha
aaa
out
ja
add
int3
sar
js
data16
loopne
enter
aad
fistpl
pop
cmpl
repz
inc
inc
cmp
inc
jnp
jmp
inc
mov
adc
aam
add
fdivrl
dec
arpl
andb
sub
jno
fdivl
repz
push
pop
pop
mov
push
das
push
cmp
push
hlt
shr
sbb
mov
out
rolb
movsl
xchg
cmp
fnstsw
ds
fwait
jb
cmp
fidivrs
dec
push
push
test
sub
jns
xor
dec
push
pop
orb
xor
mov
cmc
dec
daa
test
fs
and
rolb
jmp
xchg
sbb
sbb
jb
or
jnp
popa
popa
ja
sbb
ds
adc
xor
cld
jno
pop
xchg
fs
sub
das
xchg
or
sbb
lds
mov
cmpsl
lahf
mov
pop
jle
jle
test
sub
out
rcll
fcomps
mov
mov
inc
pop
lods
ret
sub
mov
xchg
dec
push
lret
hlt
push
and
xchg
cmp
xor
sub
addb
dec
fwait
add
test
push
xchg
pop
and
hlt
jb
hlt
jae
push
jge
nop
repz
in
daa
push
and
sub
mov
inc
push
outsl
xlat
nop
mov
ss
inc
fsubl
je
lcall
or
stc
out
pop
lahf
test
mov
int
xchg
in
mov
xchg
push
stos
push
mov
aaa
cld
fs
mov
scas
or
test
cld
insb
adc
jmp
loope
xchg
and
sbbb
hlt
lret
pop
divl
mov
test
dec
cli
pop
dec
stos
mov
in
cmpsl
and
nop
jecxz
mull
test
xchg
pop
or
jmp
mov
jl
sub
push
push
rcrl
sbb
mov
inc
sbb
imul
push
pop
mov
add
nop
shll
rcll
push
mov
rcll
into
cwtl
dec
cmpsb
int
out
aas
rclb
sbb
lret
into
call
and
nop
fnstenv
aas
aaa
cmp
hlt
and
ds
movsb
xor
and
popf
add
shll
mov
mov
sbb
icebp
xchg
addb
push
sub
dec
push
test
inc
adc
lcall
arpl
push
icebp
sarl
loopne
dec
cmpsb
and
insb
cmp
rcrb
repnz
loope
lock
sbb
in
ret
ret
ret
adc
xor
push
jecxz
and
xchg
cmpsl
cmp
mov
in
jge
lret
cmc
mov
adc
je
rcl
stos
dec
notl
pop
pusha
xchg
lahf
shll
popa
add
dec
sti
decb
ds
and
lea
lahf
xchg
lock
and
push
sbb
outsl
sub
jno
rolb
movsl
ret
sub
adc
jge
cwtl
pusha
cmp
jecxz
mov
mov
ljmp
ds
in
stos
or
mov
add
inc
jle
pop
jle
fwait
fs
fimuls
xlat
cwtl
sarl
in
cltd
mov
and
clc
test
test
sub
fistpll
fisubrs
jo
mov
imul
jge
push
add
ss
adc
cld
daa
cmp
test
jo
inc
xchg
aas
pop
inc
mov
cltd
jae
ss
gs
addr16
or
out
mov
xchg
xor
inc
jecxz
sub
jbe
mov
loope
xchg
inc
hlt
pop
lea
cmpb
pushf
xchg
mov
lods
shrb
into
sbb
ljmp
movl
inc
rolb
push
jp
xchg
dec
iret
xor
xchg
in
ret
lcall
inc
cmp
loopne
jnp
outsb
lods
xchg
sbb
shrl
nop
mull
push
xchg
pop
sbb
stos
inc
sbb
jns
lods
and
insl
inc
pushf
in
scas
mov
pop
pusha
adc
clc
rorl
jae
jmp
jmp
outsl
insb
pop
lret
mov
push
adc
sti
aam
pusha
fwait
fwait
sbb
inc
or
mov
and
rol
push
test
xor
ds
push
dec
pop
jl
scas
jnp
mov
ret
call
or
sub
cmpsl
rolb
sbb
sbb
rclb
pusha
jbe
fs
repz
dec
jo
jge
addr16
sub
adc
push
mov
jne
bound
data16
movsl
imul
sarl
mov
and
or
lret
xor
movsl
icebp
dec
cmp
loopne
push
lcall
pop
xchg
sub
pop
dec
adc
dec
inc
mov
pop
xlat
stos
fwait
push
out
sti
ss
rol
inc
push
push
push
ljmp
pop
or
add
sahf
ficomps
jns
or
xor
cmp
jp
sbb
in
pushf
insl
sub
mov
mov
int
mov
rcrl
push
in
xor
sar
add
aas
push
test
in
mov
xchg
inc
and
xlat
pop
out
add
shr
nop
lahf
xchg
adc
xlat
mov
repz
jo
hlt
mov
xor
das
and
mov
not
movsb
out
imul
ret
jae
push
sub
sub
sbb
add
mov
inc
fwait
in
or
add
hlt
lret
in
mov
mov
push
push
mov
in
dec
sbb
scas
test
pushf
insl
stc
into
push
jo
out
inc
notl
insl
mov
adc
dec
sbb
das
rcll
inc
movsb
sahf
addr16
mov
mov
sub
enter
or
mov
dec
push
and
jo
xchg
add
adc
rcll
xchg
cwtl
push
lret
add
lds
jg
mov
sti
scas
adc
test
xchg
aaa
xlat
icebp
cmp
aaa
imul
movsb
cmp
mov
mov
movsl
mov
mov
push
push
sub
pop
repz
cmp
aam
popl
sub
insl
popf
in
test
nop
xchg
mov
xchg
and
xchg
push
stos
push
cmp
or
in
jge,pn
inc
xlat
iret
push
imul
mov
adc
fcomps
out
mov
iret
movsl
pop
ljmp
lods
cli
pushf
cmp
orl
lea
mov
xchg
in
subps
xchg
repz
adc
fidivl
aad
mov
sarl
pop
cltd
xchg
in
xchg
mov
pop
jmp
push
xchg
sahf
dec
mov
sbb
cltd
lds
xor
shrl
dec
push
cmp
in
inc
rcrb
jns
xlat
adc
cld
shlb
js
cmp
push
xchg
stos
cmpsb
mov
xor
dec
mov
imul
sbb
out
push
dec
fisttpl
mov
in
mov
cmpsb
pop
test
xor
subb
divl
push
insl
repnz
cld
shll
jecxz
mov
inc
sahf
daa
push
daa
addr16
mov
scas
test
xor
ljmp
adc
jo
add
aam
sar
in
movups
inc
mov
add
cmp
jae
out
jmp
aas
fld
gs
arpl
sarl
push
sub
inc
ja
int
lods
incl
rorb
je
and
dec
fmull
mov
cmp
pop
mov
xchg
add
mov
icebp
sbb
movsb
adc
lcall
sbb
xchg
mov
aas
sarl
outsl
jl
xchg
aas
xchg
in
sub
and
sbb
jne
sub
loop
shlb
pop
mov
cmp
push
and
popf
mov
cld
hlt
or
sub
inc
icebp
inc
push
lret
jbe
cmp
fld
pusha
jne
pop
mov
mov
das
lds
dec
add
xchg
lods
mov
call
popa
xchg
sub
jae
xchg
mov
sbb
push
scas
test
insb
lcall
das
repz
ja
mov
pop
je
cltd
repz
and
movsb
in
xor
push
aad
sub
cmp
aam
arpl
xchg
scas
pop
fs
test
aas
jle
add
cli
jne
dec
mov
cmp
push
outsl
fwait
idivb
pop
popa
jp
scas
pop
movsb
inc
repz
push
xchg
dec
sub
insl
mov
cmp
jg
jo
mov
xchg
bound
pop
mov
icebp
lret
inc
push
mov
sbb
jbe
inc
xchg
jae
sahf
sub
and
sarl
aaa
addl
hlt
call
lods
lods
mov
cmp
and
jmp
or
cs
mov
sub
pop
dec
fs
xchg
add
push
popa
inc
mov
cmp
cwtl
add
jg
lods
push
bound
xchg
fmuls
cmpsl
pop
mov
imul
in
loope
or
sbb
jmp
add
hlt
icebp
pop
fldl
sbb
ret
inc
mov
add
lahf
jno
dec
jb
adc
es
xchg
sub
setge
cmp
loope
jmp
sub
ret
mov
push
push
lods
ss
sbb
and
hlt
pop
stos
je
mov
decl
sbb
or
pusha
mov
cld
push
aad
xor
cmp
or
or
sbb
xchg
pop
imul
and
mov
out
jae
cltd
out
insl
push
and
jb
shlb
jge
xor
xchg
adc
and
mov
stos
mov
je
inc
push
lahf
icebp
fs
je
cmp
and
les
or
jecxz
cmc
jg
pop
nop
xchg
xchg
aas
pop
xlat
imulb
add
push
in
xchg
xchg
jae
pop
lock
push
aad
dec
mov
pop
push
sahf
and
adc
stc
add
mov
cmp
je
jb
cmp
mov
mov
xchg
addl
xor
xor
mov
cmp
fst
scas
jb
pop
dec
lcall
xor
mov
sbb
xchg
and
pushl
xor
cmp
add
mul
mov
xor
dec
and
sbb
sarl
add
pop
pop
push
imul
push
pop
jo
shll
mov
and
fbstp
xchg
mov
jge
lahf
dec
aaa
lret
lret
cmp
inc
idivl
jae
lds
pop
cwtl
out
lods
push
orb
inc
mov
adc
push
pop
cmp
std
push
push
movsb
xlat
jle
fs
pop
ss
out
fs
ret
repz
repz
loopne
aaa
or
test
shlb
jbe
mov
in
stos
es
add
mov
test
dec
shll
push
insl
nop
popf
jb
push
mov
mov
mov
iret
sbb
and
push
xchg
out
mov
mov
testb
fldt
lock
jl
add
jne
pop
jp
push
xor
dec
xchg
test
in
sub
xchg
in
rorb
add
jae
push
loope
movsb
dec
push
js
mov
and
paddq
jp
sarb
inc
mov
lock
and
mov
push
and
cmp
mov
arpl
mov
mov
popa
insl
stc
sub
in
arpl
mov
in
or
outsl
mov
cmp
popf
js
pop
pop
int
jecxz
in
cmp
pop
ret
xchg
and
adc
inc
das
cmp
movlps
pop
mov
leave
out
push
std
mov
aaa
in
fcomps
sub
in
pcmpgtd
push
push
sub
jae
loope
sbb
and
sbb
xorl
mov
mov
bound
lock
dec
lea
adc
jno
adc
mov
xor
rcl
push
mov
and
pop
lock
and
sbb
or
or
in
push
pusha
rcrb
test
imul
mov
push
xor
jo
pop
mov
mov
scas
sub
jo
or
addr16
dec
cs
cmp
jnp
sti
inc
pop
pop
sub
in
pushf
sbb
js
mov
sbb
ds
sahf
mov
push
push
aad
jnp
push
pop
out
je
test
loop
pop
xchg
pop
push
mov
jmp
cmpsl
and
sub
jo
into
repz
out
add
outsb
jno
sbb
testl
jg
xchg
push
jle
push
xor
push
mov
or
adc
inc
mov
xor
xchg
push
dec
sbb
fs
cs
stc
mov
inc
aam
and
dec
inc
sbb
push
dec
test
dec
pop
jle
fnclex
adc
add
addr16
daa
lahf
dec
femms
arpl
sti
sub
sbb
icebp
cmpsb
xor
scas
dec
hlt
inc
mov
xchg
jge
lods
xor
sahf
decl
jae
push
mov
imul
subl
test
arpl
pop
ds
stos
jp
pop
mov
sbb
or
cltd
pop
movsb
add
mov
jge
cwtl
mov
aas
ret
in
push
repnz
sub
lahf
popf
repnz
stos
sbb
xor
or
cli
jge
inc
jmp
push
je
enter
rcl
inc
sub
sahf
mov
nop
dec
cmp
xor
pop
or
push
push
and
cli
insb
or
out
sbb
dec
popa
imul
mov
addr16
pusha
inc
mov
dec
ret
stos
adc
push
pop
cli
pop
pusha
nop
xor
inc
push
fucomip
test
jmp
cltd
icebp
out
inc
pop
sbb
scas
adc
je
sub
sub
std
mov
cmc
movsb
xor
or
mov
inc
xor
les
outsl
pop
scas
xchg
adc
hlt
push
mov
mov
mov
mov
pop
out
push
cltd
jno
and
aam
xor
das
dec
xchg
sbb
inc
mov
inc
fiadds
xor
pop
lret
jno
push
imul
and
outsb
test
sbb
and
inc
aas
push
je
stos
arpl
sti
movsb
popf
or
sti
fmuls
fisubrl
mov
stos
sub
lds
stos
scas
push
mov
mov
loop
stos
xlat
xlat
sbb
cltd
mov
inc
mov
fdivrl
test
mov
push
mov
mov
push
faddp
jmp
and
out
ret
popa
pop
aam
inc
mov
mov
inc
sahf
pop
test
lock
add
cmpsl
shrl
xor
xor
sti
lock
roll
mov
xor
pushf
xor
into
cmp
popl
inc
and
shl
xor
jae
cmpsl
xor
add
sti
daa
jae
outsb
push
cmp
mov
ret
cli
sbb
or
cmp
mov
mov
dec
mov
stos
fisttps
shll
sbb
pop
rcrb
ficompl
imulb
rcrb
dec
cwtl
shrl
sbb
fidivrl
mov
movsl
push
mov
sar
add
inc
jae
outsl
xchg
jne
aaa
inc
or
bound
mov
sub
enter
mov
mov
pop
shll
mov
dec
inc
cmp
mov
mov
divl
adc
incl
xchg
pop
repnz
cwtl
faddl
stos
jno
daa
imul
mov
mov
dec
lcall
jno
fidivl
call
xchg
rorb
xchg
dec
jo,pt
adc
cmp
push
fs
pop
cmp
inc
or
loope
and
pop
pushf
push
inc
nop
out
push
outsl
inc
ret
xor
mov
dec
mov
gs
dec
imul
leave
xor
adc
outsl
sub
fs
or
mov
shrb
mov
pop
mov
and
pusha
push
push
push
push
mov
scas
cs
enter
xor
dec
cmp
cmp
push
jbe
push
pushf
pop
mov
mov
cmp
je,pn
inc
data16
or
ljmp
add
test
adc
shrl
js
lock
push
inc
xlat
and
mov
std
mov
int3
aam
aad
dec
out
dec
jo
mov
inc
sbb
dec
jp
fcmovu
push
mov
inc
neg
mov
loop
out
stos
cmp
jg
mov
cwtl
mov
scas
aad
sub
cmp
pop
push
popa
insb
and
pop
cwtl
pop
daa
inc
int3
mov
jl
jp,pn
pop
gs
cmpsl
mov
xlat
mov
fdivl
pop
aad
xor
hlt
pop
ret
shl
add
lret
scas
mov
inc
call
pop
mov
jle
mov
andb
dec
mov
das
repz
movsb
popf
adc
stos
js
leave
pushf
xchg
jmp
call
xchg
xor
mov
aaa
mov
mov
out
push
xor
push
fwait
jge
add
add
xor
fiadds
out
jp
mulb
fnstenv
sbb
test
pop
mov
sub
xor
sti
dec
xchg
cs
popf
leave
sti
pop
loopne
repnz
sub
mov
lods
push
fists
cmc
push
popa
adc
test
repz
loopne
fisttps
xchg
imul
add
in
jge
iret
cwtl
cld
mov
ss
jp
test
xor
lods
push
enter
leave
xor
mov
fisttpl
insl
cli
frstpm(287
std
xchg
mov
inc
scas
loopne
ja
hlt
jbe
sub
flds
lock
push
fdiv
or
xlat
inc
jae
xor
mov
divb
shl
jge
push
push
sti
inc
mov
hlt
loopne
test
mov
testb
lret
xchg
jo
fdivr
pop
adc
xor
out
ds
jae
lock
cmpl
aas
ja
lret
imul
or
push
push
je
and
into
jo
ja
adc
fsub
divl
add
jb
fldcw
cmpb
mov
inc
popf
adc
sbb
lock
lods
sub
fcomps
pop
test
iret
lods
adc
fs
jbe
lea
cltd
addr16
mov
push
std
repz
int
jb
xchg
aam
aad
in
lret
cmpsb
iret
fsubrp
jae
pusha
mov
pop
pop
std
pop
push
push
es
adc
xor
scas
inc
push
mov
mov
mov
push
inc
mov
repz
push
outsl
xchg
mov
adc
fdiv
je
outsb
shlb
scas
adc
xchg
dec
xor
lea
inc
xor
add
jb
push
add
out
addr16
add
add
push
push
inc
shlb
sbb
fcomps
or
enter
enter
testb
or
xlat
push
mov
ret
pop
cmp
sbb
sub
mov
in
mov
nop
ret
and
jmp
shr
mov
push
rcll
sub
inc
cs
outsl
movsb
outsl
adc
and
push
inc
sbb
push
pop
cld
xchg
push
xchg
sbb
fstpl
cmpb
andb
mov
cmp
ljmpw
adc
enter
cld
cli
idiv
sub
pop
mov
jle
sbb
enter
mov
jae
cmp
cs
mov
mov
mov
add
dec
loope
dec
nop
dec
int
out
cmp
popa
mov
mov
mov
cmpsl
fistl
imul
mov
mov
push
outsb
inc
xchg
cmp
xchg
mov
enter
dec
jle
cmp
adc
dec
adc
dec
loopne
xchg
outsb
push
cmp
popa
xchg
xchg
jb
mov
imul
shl
add
inc
in
mov
outsl
lods
and
mov
setne
roll
and
sub
fnstsw
cmp
cli
out
int
jo
out
loope
adc
pop
cmp
ret
or
repz
stos
shrl
cmp
es
sub
pop
cld
xchg
add
cmp
and
lret
leave
xchg
adc
stos
shll
mov
sti
lods
lods
dec
pusha
nop
scas
enter
xor
add
sti
lock
jge
lock
ret
stc
das
jae
cmc
bswap
icebp
add
cs
push
jb
pop
pop
add
and
fdivrs
dec
dec
xor
bnd
sub
inc
fdivs
loop
leave
xor
std
pop
out
jg
mov
xor
xchg
div
notl
fsubr
xchg
lret
jmp
movsb
xor
sahf
cltd
daa
pop
in
push
enter
pop
adc
inc
push
nop
mov
lcall
sub
xchg
inc
lahf
mov
mov
out
out
subl
sub
sbb
sar
and
jo
and
fsubrs
lock
xor
or
and
ljmp
test
sub
sbb
ja
and
xor
or
popa
imul
mov
xchg
mov
cmpsl
sbb
dec
in
cltd
lods
clc
pop
and
sub
and
xchg
mov
xor
push
cmc
xor
lcall
jno
xor
xchg
hlt
sub
dec
mov
notl
cmp
out
mov
jmp
mul
outsl
mov
jne
enter
inc
pop
jg
lods
scas
push
insl
repz
add
add
scas
lcall
data16
lcall
xor
sbb
push
inc
sub
inc
and
sub
jb
mov
adc
lret
sbb
pop
dec
pop
iret
fnstsw
and
decb
fisttps
or
aas
dec
cs
mov
jmp
int3
mov
lret
add
dec
pop
xor
pusha
adc
mov
fistpll
push
pop
wrmsr
jae
clc
ret
pushf
or
or
cmp
push
mov
scas
jmp
mov
xor
xchg
inc
pop
add
scas
cmpsl
pop
add
shlb
mov
aaa
pop
cmp
xor
mov
mov
mov
adc
call
stc
daa
cmp
sub
push
push
lcall
loop
push
cli
fidivl
mov
xor
aad
add
mov
pushf
pop
incl
xchg
jle
fwait
sbb
pop
xchg
inc
jae
lahf
xlat
ret
ret
idivb
jns
xor
pop
shlb
lods
push
mov
add
pop
shlb
push
add
fcomi
fcoml
sub
mov
mov
pop
hlt
cmc
ljmp
in
jne
decb
movsl
nop
shrl
dec
mov
pushf
add
inc
xchg
je
outsb
xor
jo
mov
jecxz
inc
xchg
insb
aam
push
add
mov
xchg
mov
inc
sbb
push
push
and
aam
scas
iret
dec
add
mov
push
pop
mov
add
add
push
out
arpl
pop
and
divps
mov
ss
xor
daa
fwait
insb
pop
adc
inc
jecxz
push
mov
rorl
imul
mov
pop
sbb
fcoms
stos
lret
dec
jge
xorl
mulb
loopne
not
cmpsb
and
fisubl
lock
mov
and
lods
sub
xor
fcomi
mov
sarl
jae
fucomi
enter
loop
repz
mov
adc
push
jae
insb
mov
jnp
pop
pop
call
xchg
lods
and
cwtl
stos
or
and
orb
not
pop
add
mov
mov
or
fildll
xchg
and
xchg
into
lret
call
arpl
xchg
nop
icebp
dec
cmp
dec
fcoml
iret
or
xlat
das
pop
fwait
and
inc
mov
repz
gs
jg
xor
in
xor
push
xchg
push
pop
push
mov
pop
inc
in
fstps
sbb
out
inc
push
pop
inc
cmp
movsl
inc
push
sbb
lcall
andl
cmpsb
dec
sub
stos
es
rcl
daa
adc
cld
lods
imul
mov
sete
add
push
dec
clc
pop
sub
cli
add
push
sbb
mov
push
adc
pop
add
jmp
imul
mov
mov
sub
adc
add
pop
orb
push
fwait
lret
xor
fwait
sub
loope
lock
push
mov
add
jecxz
outsb
roll
clc
lcall
push
push
insb
pushf
xchg
ss
shrb
dec
jmp
dec
xchg
in
xor
pop
sbb
inc
add
pusha
call
mov
aam
jnp
mov
xchg
pop
ja
xor
pop
jecxz
push
jne
mov
sbb
aaa
into
xchg
pop
loopne
popa
jns
cmpsl
jbe
ret
adc
push
ja
loopne
incb
push
jae
dec
les
push
mov
or
sub
lea
lret
add
lret
xchg
jecxz
sbb
int
pop
pop
adc
cmp
xchg
jo
cmpsb
jo
jns
jb
mov
adc
movsb
outsl
mov
fidivrs
xchg
or
shl
xorb
insl
xchg
movsb
xlat
aaa
jecxz
xlat
mov
ljmp
pop
sbb
jbe
adc
mov
fcomps
xchg
xacquire
sbb
jl
mov
jp,pt
pop
nop
and
mov
in
call
dec
es
dec
fsubl
stc
mov
mov
clc
fs
in
pop
cmp
push
sbb
jns
or
adc
enter
cmp
test
lahf
popl
sbb
or
sbb
aaa
test
inc
ja
ret
insl
sbb
repz
ffree
adcl
xchg
xchg
fs
jo
mov
xor
lods
je
std
shrb
jp
outsl
mov
or
or
into
movsb
int3
rorb
sub
jo
ret
add
sbb
jbe
mov
imul
mov
or
add
and
test
xchg
xlat
xchg
mov
shl
in
add
fs
add
lock
fs
or
pop
in
pop
jne
mov
mov
add
add
addr16
sahf
jb
mov
rcrl
pop
pop
add
iret
fs
or
inc
sub
xor
dec
and
dec
jne
jp
cmp
icebp
and
cltd
push
enter
sub
aam
lds
push
stc
or
mov
mov
into
cmpsb
test
loope
pop
mov
test
cmp
pop
sub
clc
fidivl
ss
jns
shlb
sub
popf
xor
cmp
add
and
mov
or
mov
pop
stos
sub
les
or
aad
ficompl
fsubrs
outsb
scas
sub
or
jle
nop
or
imul
hlt
and
shlb
iret
sub
in
out
xchg
push
sub
sub
scas
jmp
xchg
test
in
loop
xchg
arpl
push
xchg
cwtl
xchg
or
add
je
xchg
ja
ret
ljmp
cmc
pushf
jo
sbb
mov
xchg
xor
mov
and
and
xchg
mov
jnp
xor
sbb
mov
cmpl
push
sti
loope
xchg
mov
divl
dec
and
pusha
rep
push
daa
hlt
out
push
mov
leave
arpl
mov
mov
sub
lahf
lcall
ret
mov
jo
repnz
mov
xor
loopne
xor
pop
and
cld
out
cs
popa
daa
fdivrs
aas
mov
call
and
sub
outsl
push
leave
xchg
jne
movsb
sub
inc
bound
pop
cs
fnsave
outsl
jmp
xchg
inc
test
pop
movsb
orb
cmc
imul
jmp
leave
and
cmp
jecxz
mov
adc
popf
enter
cltd
hlt
mov
xchg
cmp
sub
in
jp
jmp
es
and
call
es
cmpsb
xlat
out
aad
scas
dec
test
lods
jbe
stos
cmpsl
xor
sub
ja
inc
inc
test
call
repnz
lret
enter
in
and
xchg
push
mov
mov
push
scas
and
dec
in
imulb
mov
lods
shlb
mov
enter
mov
sti
es
pop
mov
sbb
cmp
loopne
movsl
or
jge
sbb
sbb
clc
aam
mov
lahf
fldenv
xor
sub
and
popa
jecxz
jno
sti
pop
jb
or
movsb
push
fcmove
xchg
popf
data16
sbb
ret
cmpl
call
cmp
imul
mov
rorl
xchg
mov
inc
xor
sub
daa
jge
add
sub
mov
test
lock
jg
mov
cmp
push
movsb
sarl
add
xchg
pop
mov
shr
xor
imul
xchg
xchg
movsb
and
sbb
loopne
js
stc
fwait
mov
repz
daa
hlt
push
xchg
scas
les
mov
jl
inc
fisttpl
in
add
imul
adc
daa
data16
stos
popa
sbb
stos
add
pop
je
or
inc
test
pop
jno
lods
push
dec
scas
repnz
pop
nop
ficompl
mov
dec
cmpl
mov
rcl
jbe
add
push
add
lahf
mov
mov
adc
aas
add
or
add
in
dec
or
pusha
es
sub
inc
out
jl
subl
nop
cmp
call
add
frstor
test
or
out
repz
jg
stc
mov
mov
jae
jp
push
aad
mull
or
inc
test
cmp
and
add
adc
repnz
xlat
pop
loopne
mov
inc
fidivrs
jne
inc
popf
mov
out
fadds
sbb
fnstenv
xchg
inc
mov
out
jne
jecxz
sub
lret
sub
xchg
fiaddl
aaa
jg
push
movsl
insl
mov
les
out
push
add
pop
mov
scas
xor
jg
pop
fisubl
and
bound
je
sbb
push
cmc
jp
add
sub
lret
fdivl
cld
jbe
xor
shlb
loopne
aam
jo
insb
aaa
pop
pop
sbb
mov
and
and
lcall
jle
xor
dec
aas
ljmp
xchg
jmp
pop
sbb
xchg
bsr
inc
mov
icebp
push
ds
bound
push
or
and
adc
adc
xchg
xchg
and
adc
cld
sbb
inc
cmpsl
fldt
ljmp
lods
mov
push
je
mov
mov
test
mov
adcb
pop
lods
stos
ss
push
or
xchg
adc
jp
sbb
pop
dec
pop
imul
ficomps
push
pop
int3
aad
push
lods
testb
stos
pop
mov
push
jle
aas
out
xlat
sbb
mov
in
adc
adc
iret
push
pop
add
iret
mov
sub
dec
push
lcall
testl
sbb
negl
sub
sahf
dec
mov
and
imul
mov
mov
mov
nop
and
sbb
sub
push
xor
aas
push
dec
fucom
push
test
cmp
mov
mov
and
sub
mov
and
insb
je
sahf
rolb
xchg
mov
in
arpl
pushf
mov
cmc
sub
sbb
push
jnp
stc
sub
push
jo
xlat
dec
cwtl
fsts
and
push
xchg
mov
repnz
adc
call
adc
mov
mov
out
pusha
dec
pop
popf
out
fsubr
pop
iret
sbb
and
xchg
rclb
loop
sub
jl
insb
icebp
sti
mov
dec
movsl
xor
clc
aad
add
outsb
pop
popa
mov
bnd
sub
pop
pop
sbb
rol
clc
inc
stc
stos
sbb
and
cli
or
add
mov
out
and
sub
pop
fisttpl
xchg
push
aam
mov
sbb
cmpsl
arpl
pop
mov
sub
adc
std
xlat
push
push
arpl
sub
jne
and
cmpsl
arpl
cmc
cmp
xchg
push
xor
test
cmp
std
stos
sub
fisubs
adc
and
push
inc
xchg
dec
xor
rep
jbe
adc
cmpsl
lds
inc
mov
push
cmpsb
xchg
push
lcall
push
xchg
lock
je
popa
lret
push
loopne
aaa
sub
push
enter
ss
jmp
push
in
frstor
sbb
mov
lcall
dec
adc
iret
adc
shll
ficompl
xchg
mov
aam
nop
cmpsl
inc
dec
cmp
and
out
fs
repz
mov
rcl
bound
and
fsub
lea
sub
fadd
xor
jae
ljmp
add
xchg
lods
movsb
push
ja
loopne
jae
das
loope
mov
rolb
ja
xchg
lock
sti
mov
push
inc
les
fwait
call
ds
in
mov
outsl
pop
stos
popa
lret
adc
fninit
or
push
pop
push
xor
dec
test
ret
push
mov
punpckhwd
mov
loopne
cwtl
outsl
outsl
push
pop
xchg
je,pn
push
repnz
and
push
js
repz
rep
lret
out
into
cmpsb
data16
sarl
and
jle
shl
ss
mov
repz
mov
in
and
jnp
push
dec
sti
adc
mov
arpl
sbb
adc
jbe
shll
pop
and
jbe
es
jae
adc
movsb
ffree
pop
bound
adc
and
int
xchg
jnp
push
in
lahf
movsb
mov
data16
sbb
and
lret
loopne
jmp
sbb
in
xchg
rclb
jo
xor
out
and
mov
jnp
int
and
push
sbb
out
inc
das
jae
std
out
jbe
daa
arpl
add
jbe
inc
stos
roll
jnp
les
rcll
cmpsl
push
lods
jae
out
js
popf
add
andl
add
pusha
jmp
andl
mov
and
pop
mov
stos
inc
jmp
in
loop,pn
pop
imul
and
and
lret
lcall
test
push
outsl
dec
pop
out
je
jp
add
mov
push
add
inc
out
int3
arpl
inc
sub
xor
outsl
cs
jb
aam
sub
fs
xor
dec
xchg
mov
and
wrmsr
popa
mov
cs
dec
xchg
or
mov
fisttpll
nop
repz
cmp
mov
imul
in
out
lahf
fwait
mov
xchg
int3
data16
push
fisubl
mov
inc
lods
push
dec
mov
inc
neg
ja
ljmp
push
popa
cmc
add
scas
cwtl
ret
rcll
mov
jmp
jne
js
lret
sub
data16
call
aaa
repz
sahf
int
mov
adc
fisttpl
icebp
xchg
dec
mov
adc
add
scas
xchg
movsl
inc
fsubr
mov
or
inc
lea
sbb
mov
fisttps
movb
adc
rorl
jbe
sbb
inc
pop
mov
sbb
cmp
pop
test
jb
rcl
and
sbb
mov
dec
jno
adc
aaa
das
cmp
mov
out
mov
icebp
add
jle
jbe
movsl
stos
pop
loope
dec
xchg
pusha
adc
testl
and
push
fldl
fisubrs
out
jbe
out
mov
pop
inc
leave
mov
pop
jle
cmpsb
mov
fldlg2
out
stos
clc
xchg
ljmp
mov
ja
adc
fcmovnu
dec
mov
jle
pop
in
fwait
inc
data16
pop
loopne
andl
les
loop
dec
fucomi
shll
sub
jns
js
stos
aam
movsb
cmpsb
fwait
or
jmp
add
fildl
xchg
jb
nop
dec
pop
xrelease
or
push
ja
pop
add
push
fadds
mov
cltd
sbb
sbb
push
or
test
mov
nop
mov
cmpsb
lods
stos
lcall
rorl
ret
sub
stos
repz
xlat
and
push
fcmove
test
jnp
cmpsb
dec
xchg
pop
mov
xlat
xor
xor
add
add
adc
cld
sbb
lahf
xor
cld
pop
xchg
lock
mov
in
xchg
cmp
xor
mov
mov
cmp
pop
pop
sub
inc
hlt
es
push
jmp
sbb
lahf
push
push
lds
in
dec
mov
sbb
clc
or
lods
and
sti
push
cwtl
lea
fs
sbb
in
sub
push
xor
adc
je
mov
xchg
cmpsb
push
lahf
js
xlat
pop
outsl
cltd
xchg
shlb
shlb
es
adc
xchg
mov
ja
adc
sbb
das
push
arpl
popf
fcoms
cmpsl
repz
jmp
repz
out
imul
cmc
lahf
scas
rcr
cmpsl
scas
loopne
jnp
daa
jo
mov
loop
and
arpl
push
or
lret
aam
ja
push
call
mov
pop
jno
xchg
lahf
and
sbb
sbb
sbb
lcall
mull
cmp
mov
jecxz
jno
push
cmpsb
repnz
push
add
jmp
dec
fistpll
pop
out
ret
or
xchg
push
mov
jge
inc
and
sbb
mov
lock
adc
fldcw
push
dec
ja
xchg
lret
xor
in
dec
stos
jg
push
rcrl
dec
pop
jne
mov
jno
ja
jae
sub
mov
cmp
xlat
inc
dec
add
jnp
aad
xor
inc
in
dec
mov
add
in
shr
in
dec
xor
xchg
jbe
mov
mov
test
xchg
sub
in
and
insl
and
repnz
cmp
cmp
add
add
loop
mov
dec
jp
push
jmp
enter
test
add
adc
xorl
cld
xor
and
xor
xor
mov
sbb
data16
inc
mov
or
sti
xchg
loope
lahf
push
push
roll
in
stos
pop
mov
mov
fwait
push
push
sub
andl
shll
out
push
pop
xchg
add
js
lea
inc
inc
jl
adc
cmp
lock
mov
pop
add
in
loopne
cwtl
lock
dec
out
outsl
xor
pop
sub
cmp
adc
push
add
adcl
push
fdivl
cmp
and
sahf
xor
add
add
mov
dec
xchg
aas
scas
cltd
dec
mull
mov
inc
jns
test
adc
cmpsl
jb
mov
xchg
js
nop
cli
cmp
sbb
lods
addr16
ja
stos
rcrl
loope
mull
sbb
sub
or
test
mov
mov
cmp
adc
ffree
mov
add
cmpsl
fwait
in
mov
lahf
mov
lcall
daa
xlat
test
loopne
jno
lock
lock
jg
cmp
icebp
shll
sar
xchg
je
pop
lock
and
mov
aas
mov
orl
xor
scas
or
js
and
dec
mov
stos
mov
fsubr
dec
lea
pop
or
enter
ficoml
mov
xor
xchg
lahf
inc
jge
cmc
pop
scas
fmull
pusha
cltd
or
movsb
push
negb
mov
cmpsl
jge
sbb
hlt
nop
jge
sub
ja
mov
mov
loopne
cmp
pop
orl
mov
jne
dec
es
lahf
lock
mov
push
push
mov
dec
cmp
imul
in
sbb
and
int
les
cld
xchg
cmp
dec
scas
clc
xchg
sbb
push
sarb
mov
sub
test
and
dec
dec
out
jae
aas
test
jb
sbb
scas
pop
divb
pop
dec
cwtl
gs
dec
push
mov
mov
out
sub
adcl
nop
mov
hlt
imul
mov
jmp
aaa
sbb
mov
cmc
jno
ds
loop
cmp
xchg
out
outsl
push
cmpsb
dec
and
cmp
mov
xchg
xchg
pop
add
aas
cmp
mov
or
cmp
daa
mov
push
xchg
pop
test
rolb
mov
jne
iret
mov
sub
jmp
out
fs
jae
jg
stos
int
mov
pop
pusha
jmp
ja
lcall
test
lea
andb
cwtl
mov
xor
mov
sub
push
enter
sub
add
xchg
les
push
push
sub
jbe
in
mov
add
imul
mov
and
lock
mov
or
out
sbb
inc
jnp
loopne
jecxz
mov
sbb
rorb
sub
jle
adc
int3
iret
cmp
movsb
mov
xchg
aaa
iret
dec
aam
mov
movsb
jge
add
inc
and
ja
imul
xchg
dec
or
pop
hlt
js
int3
push
dec
xchg
dec
dec
mov
ljmp
mov
adc
jb
sub
mov
out
cmp
pop
fisubrl
into
cs
mov
scas
sbbl
xchg
xchg
popf
sub
aaa
scas
lcall
dec
add
xchg
lods
lods
mov
call
in
in
insl
fcmovb
push
cwtl
dec
mov
das
orl
dec
hlt
add
xchg
out
out
lods
xor
dec
jno
xchg
int3
xor
sbb
pop
outsb
arpl
pop
sbb
imul
test
nop
jg
shrl
adc
push
and
xor
mov
in
test
push
loop
adc
add
jbe
aad
inc
adc
inc
add
hlt
adcl
pop
dec
xor
mov
mov
jg
xor
sub
mov
mov
hlt
out
in
je
cs
out
sahf
mov
fwait
jo
sub
arpl
mov
lahf
arpl
loopne
bswap
nop
pop
and
cmc
lds
les
sub
jecxz
dec
sahf
out
add
sbb
and
shll
dec
and
hlt
into
outsl
or
mov
mov
jbe
je
push
mov
jno
imul
leave
jg
cmp
xchg
jmp
add
mov
outsb
lods
dec
shlb
dec
popa
icebp
lea
lods
jmp
ja
sti
xor
jno
mov
mov
in
sti
ljmp
ja
dec
pushf
lahf
mov
lds
jae
pop
imul
shlb
into
shr
dec
das
push
mov
pop
or
xor
stos
lahf
cmp
scas
mov
mov
inc
aam
adc
xchg
sbb
dec
and
mov
stos
pusha
daa
jp
lret
sub
aaa
fs
int
sbb
push
mov
dec
loop
pop
add
fwait
pop
jmp
scas
insb
nop
decb
sub
dec
stos
pusha
push
mov
adc
loope
xchg
jo
push
repz
cmp
and
jle
les
jo
dec
popf
pop
pop
pop
push
clc
pushf
lret
cmc
mov
jp
mov
js
xlat
rclb
aaa
subl
xchg
les
scas
push
push
cmp
mov
jb
inc
jae
pusha
les
dec
mov
and
in
jle
sub
mov
mov
and
fs
mov
aad
test
insl
pop
clc
pop
shlb
and
jl
in
adc
sbb
adc
repnz
xor
repz
fisubl
dec
lret
in
popf
daa
pop
pop
int
jb
cmp
in
sub
and
mov
jecxz
orb
push
adc
push
push
push
pop
cmc
ja
rorl
cld
setge
mov
fwait
adcl
pop
out
dec
cmpsb
dec
out
lods
adc
test
rcr
imul
xchg
mov
xor
and
xor
sub
insl
ds
lods
xchg
clc
movsb
pop
add
mov
negb
jle
pop
adc
loopne
fstpl
hlt
leave
ror
add
out
jecxz
es
imul
cmp
nop
aam
xchg
push
xlat
rorl
xor
out
dec
xor
jno
aas
movsb
out
sti
sub
outsl
in
call
pop
sub
jl
and
dec
cld
out
loopne
mov
sub
psubd
daa
getsec
in
pusha
jg
and
fcomp
dec
jg
sbb
push
dec
pop
jnp
movhps
sub
scas
cmpsl
dec
in
in
push
push
imul
das
fld
or
xor
mov
fwait
add
sub
add
and
sbb
jmp
jmp
rorl
xlat
xlat
jge
ficomps
xchg
pop
outsl
cmp
pop
jmp
xchg
pusha
mov
xchg
pop
mov
cs
mov
xor
mov
pop
dec
out
dec
gs
repz
push
les
lcall
dec
addr16
pop
mov
sbb
cltd
arpl
enter
lret
lahf
mov
psubb
or
and
jle
mov
mov
movsl
xlat
add
cmpsl
dec
test
icebp
cwtl
mov
cs
jle
mov
cwtl
sub
mov
push
cmovp
dec
push
add
mov
sahf
dec
jmp
jge
fdivl
int3
std
xlat
outsl
push
scas
es
add
loop
jle
pop
loopne
lahf
arpl
int
cmp
lret
popa
cld
dec
pop
sbb
pop
adc
call
add
xchg
cmpb
adc
enter
xchg
or
xor
mov
out
mov
imul
dec
and
jae
stos
add
lea
xor
daa
scas
xchg
pop
fisttpl
sub
add
repnz
mov
fcomps
adc
testb
ret
mov
mov
or
repz
data16
mov
pop
sarl
inc
mov
sbb
sub
lahf
ljmp
cmp
rcrb
or
dec
sub
adc
push
mov
stos
sub
daa
jb
in
dec
rclb
and
pop
dec
push
adc
cld
fwait
pop
sub
icebp
jbe
lock
cld
mov
lea
daa
add
mov
rclb
es
fwait
imul
xchg
mov
pop
adc
popa
fisubrs
lea
xchg
fiadds
nop
mov
inc
movsl
cmc
out
iret
and
sub
mov
pop
dec
mov
scas
and
js
dec
pop
inc
cmp
mov
add
mov
and
nop
push
jle
jecxz
xchg
pop
cmp
push
ret
mov
mov
in
and
adc
adc
sbb
jge
sbb
icebp
das
push
out
lods
ss
xor
jmp
es
call
pxor
pusha
insb
hlt
and
adc
loopne
xor
repnz
dec
cld
jbe
sbb
jl
mov
mov
push
sbb
pop
pop
mov
xlat
ret
icebp
push
popf
outsb
imull
push
subb
dec
ja
xor
xchg
pop
repz
pop
sbb
cli
xor
je
add
shr
push
iret
pusha
nop
pusha
inc
insb
pop
dec
lret
xor
push
or
mov
sbb
xchg
jl
lods
jmp
inc
hlt
stc
daa
mov
adc
or
adc
aaa
jmp
jg
lcall
shll
inc
xchg
sub
inc
enter
loopne
inc
loop
mov
notb
call
jl
mov
push
mov
mov
push
imul
xchg
jbe
fmuls
add
out
add
imul
push
iret
mov
dec
jle
push
dec
mov
pop
stc
inc
cmp
mov
and
mov
jge
icebp
and
jae
dec
push
int3
and
inc
xor
lcall
js
fs
jne
add
es
pop
popf
loop
lea
dec
push
subl
sbb
push
sti
movzwl
or
pop
dec
inc
int3
adc
sub
lods
loopne
dec
subl
cld
stos
xor
push
nop
mov
dec
mov
mov
lcall
adc
mov
push
rcrl
adc
out
cwtl
arpl
lret
scas
sti
or
push
or
sbb
es
fdivrs
sbb
fisubrl
mov
imul
aad
mov
jl
fdivs
dec
push
in
fs
jo
mov
int
xchg
cmp
and
imul
push
sbb
nop
jg
mov
mov
loope
and
ljmp
fisubrs
mov
fcompl
jo
clts
push
cmc
dec
out
or
lcall
xor
cmp
add
add
hlt
outsb
icebp
in
and
or
push
int3
pop
cmpsb
inc
stc
mov
push
idivl
mov
mov
popa
push
dec
inc
cmp
push
pop
jno
mov
xlat
xchg
fildll
jno
xchg
mov
inc
pop
push
push
pop
or
jo
js
and
repz
leave
lret
insl
pop
mov
and
sub
pop
dec
adc
repz
add
mov
imul
inc
cmp
and
xor
pop
jge
cmpsb
jmp
jne
loope
xchg
imul
test
je
dec
jmp
dec
cmp
xchg
and
lret
push
xor
popa
notl
dec
push
push
push
insl
sub
imul
shll
add
outsl
test
stc
push
xchg
and
adc
mov
sub
pusha
xchg
xchg
inc
jno
mov
jb
sahf
push
inc
out
mov
xor
sbb
sub
iret
aas
cmpsl
push
mov
xchg
mov
lock
xchg
lret
add
mov
add
scas
xlat
mov
movsb
insl
inc
pushf
in
or
inc
repz
ds
cmp
pusha
mov
es
gs
lea
in
loop
out
xchg
repz
cli
xor
xchg
aam
dec
jle
mov
dec
mov
mov
push
inc
xchg
test
push
xchg
and
mov
jg
or
popa
loopne
out
les
push
xor
out
fsubrl
or
out
dec
xchg
mul
out
xchg
mov
xor
jle
mov
cwtl
push
les
and
les
sbb
jle
stc
xchg
ss
loopne
jge
lock
mov
xor
inc
jge
andb
iret
loope
adc
mov
adc
fcompl
mov
add
pushf
adc
pop
push
mov
or
cmp
fsubr
leave
imul
mov
mov
inc
or
jl
in
fstl
inc
push
mov
enter
cmpsl
mov
xchg
ret
dec
ss
cmpsl
out
mov
pop
fcomps
repnz
adc
mov
inc
mov
sub
ja
leave
xchg
sub
hlt
hlt
pusha
xor
aad
stc
scas
pushf
mov
lcall
jge
repz
mov
sbb
pop
adc
mov
orl
test
scas
xor
lahf
aaa
int
mov
test
pushf
inc
adc
cmp
add
popa
push
lock
jg
lods
pop
das
nop
mov
jo
mov
xorb
jo
xchg
adc
nop
lcall
imull
cmp
xor
int
pop
mov
mov
and
into
or
pop
add
rcrl
and
cmpsb
fcompl
je
sbb
insl
sub
repz
and
bound
xor
cs
and
pushf
repnz
bound
inc
out
inc
outsb
cltd
data16
jge
jmp
add
js
jg
mov
xchg
jne
and
leave
lock
inc
aam
aam
adc
xor
icebp
adc
mov
pop
jo
rcll
mov
adc
int3
dec
inc
addl
xor
icebp
bound
mov
cmpsl
inc
pop
xchg
lahf
in
out
cmp
or
outsl
inc
fisttpl
push
push
sbb
popl
or
mov
pop
xchg
or
adc
jb
hlt
sub
inc
adc
cmpsb
je
xor
cmp
and
cmpsb
aam
popa
iret
jbe
xor
jb
shlb
jecxz
sub
cmp
sbb
addr16
mov
ret
sub
js
jne
mov
jmp
pop
pop
loop
push
cmpsl
cmp
xor
test
pop
sub
mov
push
mov
movsb
in
cltd
or
dec
je
icebp
push
mov
push
jne
xchg
adc
add
ss
sti
fwait
sbb
lret
mov
xor
lcall
fyl2xp1
mov
daa
call
adc
jl
sbb
and
adc
scas
sahf
mov
and
aam
xchg
sub
mov
dec
sub
pop
add
mov
jmp
sbb
jo
dec
or
dec
sbb
lret
mov
mov
les
push
ret
or
or
xor
xor
mov
mov
push
ds
cli
repz
pop
inc
js
jo
test
pusha
lods
nop
in
lea
xor
repnz
imul
sbb
imul
jg
inc
rcll
add
push
sbb
or
loop
jb
loopne
cwtl
xchg
rcrb
in
or
push
stc
mov
fs
xchg
mov
cmp
shrl
inc
and
subl
adc
aad
push
sub
cmpsb
imul
cmc
cmc
sub
icebp
dec
sbb
mull
shrb
push
call
jbe
stos
add
mov
imul
jecxz
jne
adc
mov
mov
pop
xor
aas
add
xchg
sbb
test
scas
test
sti
cmpsl
mov
cli
pop
fwait
add
adc
and
insb
cwtl
pop
fdivrs
call
pushf
mov
loop
in
arpl
rcll
pop
or
and
mov
pop
or
dec
add
lret
sub
adc
ds
sbbb
in
add
push
sbb
jo
lret
pop
int3
paddb
das
fsubrs
imul
and
ss
into
sar
mov
sti
movsl
mov
xchg
ds
sub
or
movsb
pop
push
push
xor
lcall
ds
cmpsb
hlt
mov
pusha
stos
or
pop
mov
loop
cs
inc
negb
dec
pop
jae
mov
fwait
mov
push
lret
cmp
imul
mov
mov
cmp
pcmpeqw
rorl
stc
hlt
inc
push
dec
leave
inc
mov
orb
inc
sub
in
pop
xchg
pop
out
mov
call
daa
jae
insb
push
adc
add
pushf
push
lods
inc
pop
ret
jne
mov
cmp
dec
xchg
je
mov
xchg
adc
cli
les
fldt
movsb
pop
pop
cwtl
mov
in
push
push
popa
shlb
sub
das
push
mov
mov
lea
dec
jno
pop
das
push
fistps
xchg
xchg
test
adc
mov
dec
jmp
sub
mov
sti
cltd
jnp
aad
nop
in
cltd
sub
xchg
xor
fbld
push
aam
dec
xchg
mov
fsubrp
imul
cmpsl
mov
sbb
jp
xchg
adc
outsb
aam
mov
mov
xor
mov
lods
xlat
jecxz
and
sbbl
lods
notl
jg
adc
and
sbb
jno
sbb
xchg
cld
push
in
mov
arpl
fwait
or
ret
jge
mov
jnp
iret
fistpl
push
in
bsr
popf
lret
sub
pop
xchg
inc
mov
std
xchg
mov
aas
in
mov
fstl
xchg
sub
ljmp
cmp
cmp
xlat
xor
jmp
aam
js
cmp
imul
and
in
xlat
fwait
mov
mov
and
pop
stos
add
jno
cltd
lods
mov
or
loop
nop
push
out
inc
adc
pop
mov
in
lahf
xchg
mov
movsb
xchg
fadd
loopne
out
int
cmp
and
push
or
mov
or
or
sbb
mov
jnp
mov
popa
mov
mov
adc
sbb
cmp
cld
jmp
cmp
imul
and
icebp
and
out
dec
adc
adc
xor
cmovge
mov
jmp
xchg
cltd
insl
mov
xorl
call
fwait
ss
adc
imul
jl
add
sbb
pop
cmp
or
repz
repz
xchg
inc
dec
sub
sub
mov
lock
lret
sete
sarb
loope
jbe
pop
mov
mov
xlat
lods
pop
lcall
cld
xor
dec
xlat
rcl
jp
orb
arpl
andl
fisttps
add
xor
mov
xlat
daa
xchg
outsl
out
out
cmp
and
sbb
loopne,pn
dec
data16
daa
cmp
mov
movsb
imul
add
in
nop
dec
adc
dec
pop
iret
cmp
adc
or
add
mov
xchg
dec
and
jb
xchg
out
fdivs
dec
pop
xlat
aaa
enter
rep
pop
mov
je
push
jb
movsb
push
xchg
fcoms
fiadds
pop
xlat
lahf
push
lea
pop
push
pusha
test
cmp
lods
std
sbb
cwtl
filds
insb
mov
mov
pop
es
push
dec
jne
xchg
sbb
sbb
les
loopne
imul
jae
pop
fwait
cld
adc
mov
enter
and
lea
adc
inc
sub
loop
pop
fstl
test
mov
mov
test
xlat
add
loop
inc
sub
das
scas
jno
jno
jg
fisubrs
ljmp
shlb
pop
into
xchg
cwtl
sbb
repz
sbb
jle
es
mov
hlt
lock
jb
jle
jo
mov
repnz
imul
inc
mov
repnz
in
iret
xlat
lcall
iret
outsb
push
or
pop
push
mov
push
jo
mov
in
insb
negl
jno
divl
and
or
push
or
inc
pop
enter
xchg
xchg
rol
mov
inc
test
cmp
addr16
xchg
mov
lea
cmpb
or
mov
push
imul
ret
icebp
sub
lods
push
pop
lahf
dec
adc
mov
ss
push
inc
ss
int
rcll
lret
mov
cmp
cmpl
insb
xlat
cmp
pusha
ja
addb
push
jns
hlt
and
ja
cs
cmpsw
sub
divl
sbb
mov
xor
lods
push
sbb
int
arpl
cmp
inc
lods
inc
daa
pop
pop
cltd
js
loope
popa
push
lahf
mov
insb
dec
es
out
cli
adc
shl
jge
adc
in
cmpsb
jl
add
inc
cmp
sbb
in
jg
inc
aad
mov
into
and
adc
cmp
xchg
in
test
sbb
in
movsb
es
in
xchg
cmpsl
adcb
in
lods
or
jns
int3
cld
mov
sbbl
inc
lods
loop
or
cmpsb
movsb
int3
es
mov
repz
icebp
push
out
pusha
insb
sub
and
or
jmp
lret
sub
outsl
popf
rclb
push
or
pushf
std
add
femms
ljmp
jbe
inc
push
xchg
add
add
addr16
adc
mov
ficoml
hlt
ja
inc
or
dec
push
mov
std
push
mov
push
loop
stos
dec
dec
sub
aas
xor
xor
inc
jns
scas
push
mov
stos
xchg
adc
inc
mov
cmpsl
and
imull
and
mov
leave
push
sub
fcmovne
xchg
mov
movsb
loop
test
sbb
and
xchg
ret
dec
adc
sub
out
sub
mov
pop
push
sti
pop
sbb
adc
addr16
dec
test
xchg
add
inc
push
mov
sub
fs
dec
leave
or
xchg
and
push
fld
cmp
mov
aam
addb
sti
lret
pop
cwtl
mov
divl
int
mov
cmpsb
ss
adc
in
cmpsb
and
cld
sub
inc
push
pop
dec
fwait
pop
std
mov
aaa
sbb
push
mov
das
cmp
test
mov
sahf
aaa
xchg
xlat
das
mov
adc
testl
mov
dec
addr16
js
lahf
cwtl
jg
shrl
cwtl
ljmp
fdivrs
fstpt
imul
loopne
sbb
out
jne
and
ss
and
ret
xchg
movsl
and
dec
dec
add
sub
mov
dec
or
sub
pop
xchg
das
outsb
scas
push
sub
imul
mov
or
test
out
adc
test
loopne
lahf
mov
rcl
and
lds
inc
mov
loopne
daa
xchg
movq
jecxz
leave
jae
sbb
fsubr
pop
push
lcall
enter
jle
jecxz
jae
rol
and
cmp
xchg
or
xor
push
dec
repz
jnp
loop
mov
aaa
pop
daa
imul
lcall
jbe
sub
or
xchg
xlat
inc
add
push
push
sbb
lret
cld
mov
pop
mov
cmc
cmpsb
pop
lret
dec
imul
or
sub
fs
jns
push
loopne
pusha
dec
inc
pop
mov
and
fcoms
pusha
inc
into
inc
mov
push
lcall
pop
repz
movsb
jl
imul
inc
in
mov
jo
call
aas
cmp
xchg
les
push
insb
jbe
or
faddp
mov
push
dec
xchg
ljmp
out
dec
and
cld
push
sub
mov
pop
and
lea
pop
enter
push
push
mov
pop
mov
pushf
mov
mov
sbb
jns
xchg
cmp
cs
adc
mov
jbe
das
jmpw
jo
or
es
sarb
enter
test
add
mov
fcoml
arpl
or
and
fsubrs
sub
sub
mov
fchs
fdivs
ss
xor
pshufw
je
sbb
cld
dec
pop
ja
ss
mov
rcr
jb
sbb
dec
mov
adc
push
cmp
lahf
roll
popf
stos
mov
inc
mov
into
push
mov
int3
xchg
aad
xchg
dec
xor
sub
and
in
xchg
lret
clc
inc
cmp
pop
and
xor
loope
push
xchg
jmp
rclb
lock
out
popf
jp
push
int3
je
int3
outsb
pop
cmp
aam
fidivl
inc
out
cmpsl
xchg
push
jnp
cld
pop
ret
mov
cmp
shlb
pop
div
clc
subb
gs
aas
xchg
add
lods
outsl
fcmovnu
push
outsl
xchg
stos
sub
mov
push
lock
pop
or
aam
sbb
cmpsb
pop
sarl
cmp
mov
testl
aam
mov
andl
and
call
stos
push
dec
mov
into
bsr
xchg
and
ret
insb
int
sub
or
push
and
sub
movsl
sbb
out
int3
mov
sub
call
push
daa
imull
shll
adc
ss
call
push
xchg
stos
xchg
in
sti
push
jecxz,pn
ss
incl
mov
jle
sahf
sbb
pop
dec
out
jno
es
cmp
lods
inc
cld
ret
sbb
pop
daa
cmp
or
adc
inc
jp
lea
lods
jne
clc
sbb
xchg
sub
jno
add
xlat
scas
push
xor
cmpsb
xlat
pop
ja
sub
pusha
dec
dec
sbb
ljmp
fs
ds
sub
push
imul
inc
mov
aaa
mov
aaa
push
add
pop
addr16
int3
lods
and
cwtl
mov
loopne
mov
outsl
add
rcll
or
bound
and
xchg
mov
add
or
jmp
sbb
je
test
std
rcrl
fs
sub
cld
jmp
lods
pop
jle
adc
adc
mov
ds
pop
pop
in
and
cmp
push
imul
push
mov
jecxz
call
fs
inc
in
and
or
cmc
dec
push
jecxz
aas
out
mov
rolb
rcrl
pop
lret
ds
push
cmp
orb
pop
sub
add
xchg
aam
pop
sub
pushf
add
pop
adc
inc
or
cld
jbe
jb
out
add
hlt
mov
push
dec
inc
test
fwait
sub
hlt
sbb
sarl
sub
add
ds
mov
xchg
shrl
cmc
sbb
xchg
lods
imul
in
fists
fwait
push
in
dec
xor
add
mov
cmp
gs
popa
jg
sbb
gs
nop
mov
push
xchg
inc
cwtl
out
and
dec
insb
testl
ficomps
inc
and
and
sub
sub
pop
mov
cs
mov
les
mov
repnz
rorl
mov
jp
sub
cwtl
cs
pop
es
pop
cs
sbb
mov
or
sbb
sub
add
icebp
adc
push
lds
push
inc
dec
mov
mov
push
sub
and
in
mov
xor
jns
and
dec
inc
and
stos
lret
and
int3
shlb
xchg
popa
mov
cli
je
iret
xor
pop
push
iret
out
inc
xor
lock
or
add
fiadds
pop
jne
pop
jae
mov
inc
outsl
jge
and
in
add
adc
dec
clc
fnstsw
repnz
mov
adc
dec
push
loope
and
test
inc
or
enter
ds
cmpsl
cwtl
rcl
fwait
push
jp
push
jle
out
out
jo
cld
or
stos
loop
inc
jmp
out
mov
data16
jge
stos
jge
es
ret
fwait
sbb
sahf
cmpb
and
inc
sub
movsb
xor
fsub
sub
in
pop
xor
add
sub
mov
dec
sbb
addr16
call
je
inc
or
pop
xchg
or
xchg
pop
xchg
arpl
xchg
dec
or
cmp
adc
outsl
loop
inc
push
dec
les
mov
sti
ret
inc
data16
into
int3
push
mov
imul
sub
lods
sub
inc
and
scas
pop
mov
fnstenv
out
mov
out
stc
insl
ret
and
adc
jbe
pusha
shll
mov
scas
push
call
lods
jge
pop
dec
push
inc
lock
inc
ss
fisubrl
fs
addl
jno
outsl
inc
pusha
sub
sti
dec
mov
lods
mov
and
jl
jmp
fnstcw
dec
cwtl
fldt
in
sub
jl
xor
icebp
in
sub
movsl
addr16
shl
js
add
push
mov
jns
clc
out
sbb
hlt
pop
sbb
mov
mov
push
xor
popa
xlat
xor
imulb
sbbb
mov
jmp
adc
xor
xchg
fsubl
pop
sbb
movsb
out
arpl
cmpsl
xchg
rcll
flds
adc
leave
out
fwait
jmp
mov
cmp
ja
int3
push
mov
imul
cmp
push
aam
lret
sub
dec
arpl
mov
cmp
ret
jmp
inc
or
add
lods
sub
jne
pop
popf
test
push
and
cltd
leave
or
testl
loope
push
mov
pusha
nop
cltd
mov
popa
sbb
and
adc
pop
ja
inc
stos
movsl
adcl
fmull
fsubs
mov
sarl
pop
fisubs
mov
mov
inc
mov
sbbl
mov
push
in
add
jbe
fstpl
pop
popf
dec
pusha
cmpsl
cltd
sbb
push
xor
push
jno
inc
addr16
aam
or
mov
jns
cltd
sub
jne
mov
mov
jne
dec
popa
testl
sub
jno
les
pop
fstl
xor
push
inc
sub
sub
add
jp
inc
stos
cltd
pusha
mov
scas
rclb
repnz
push
add
inc
les
sbb
outsl
test
adc
aas
sti
push
jge
push
xlat
mov
mov
push
in
repz
pop
int
or
and
pusha
rorl
sub
subl
mov
or
out
cmpsl
scas
shll
push
roll
rcll
inc
mov
xor
popa
shll
sub
aad
in
sbb
movsl
test
mov
push
in
jno
mov
pusha
je
fistl
mov
xchg
cmp
inc
int
mulb
pop
sub
cwtl
orb
mov
or
adc
mov
out
iret
jp
mov
mov
mov
mov
test
sub
adcb
lcall
dec
xchg
cmp
lahf
jae
pushf
loopne
inc
dec
fcoml
push
sbb
mov
or
dec
and
cmc
in
nop
push
iret
inc
inc
outsb
out
jecxz
mov
push
push
adcb
shrl
es
mov
cmp
mov
push
scas
jbe
or
xchg
inc
jnp
or
andl
dec
dec
pusha
and
test
scas
mov
popf
int3
out
mov
mov
icebp
loopne
dec
out
neg
xchg
leave
ds
lods
adc
jp
pop
push
dec
lea
xor
push
sbb
sti
sub
sbb
mov
cld
and
mov
push
dec
fwait
push
dec
pop
dec
mov
dec
cwtl
cmp
cmc
sbb
das
xor
or
cmc
push
sub
or
mov
dec
sti
loop
mov
lea
jl
push
dec
cmpsl
js
xor
adc
push
pop
and
jno
pop
dec
mov
adc
mov
mov
pushf
test
pop
fwait
js
xchg
int3
shrb
ds
and
sub
adc
and
dec
popa
sub
pop
sti
pop
fstl
xor
mov
outsb
movsb
test
cld
dec
jp
adc
push
jge
arpl
leave
xlat
mov
push
jl
inc
sar
iret
adc
scas
sub
arpl
lcall
arpl
in
fistpl
jne
sub
jo
inc
or
adc
xchg
je
lods
push
mov
push
in
fiaddl
sub
cmpsl
add
shrl
sub
sbb
xchg
dec
clc
push
jno
jne
add
mov
cmovl
pop
test
adc
push
push
imul
insl
aam
cld
push
cmc
sarb
movsb
nop
fcom
push
add
mov
or
jmp
stos
bnd
aaa
dec
adc
mov
and
push
inc
dec
loope
xor
mov
icebp
jne
repnz
jmp
jmp
les
mov
xchg
popl
loopne
in
jle
xchg
push
adc
ret
dec
cmp
push
fnsave
pusha
push
xlat
pop
or
or
add
lods
xor
es
call
add
shr
in
sti
ror
ret
pop
mov
ret
sbb
aad
xor
inc
pop
mov
loop
mov
or
jle
cwtl
in
fistl
dec
xlat
adc
cmpsl
and
sahf
sbb
add
cmc
dec
cmpsl
enter
jge
scas
arpl
xchg
cmp
pop
adc
push
adc
mov
mov
test
xchg
mov
xchg
js
aas
adc
push
mov
jp
inc
aad
mov
cmp
adc
xor
mov
xor
ljmp
and
subl
jmp
lahf
mov
lea
stos
pop
dec
and
sbb
sbb
fidivs
sbb
dec
jo
jns
ss
test
sti
iret
mov
fnstenv
int
cld
lret
stos
dec
stos
xchg
xlat
loopne
fistpll
subl
sub
cmp
pop
xchg
lea
cmpsl
sub
xor
sbb
cmp
call
outsb
out
or
aad
xor
fadd
insl
push
xor
xchg
fcoms
mov
shll
sbb
leave
xor
push
pop
call
loopne
int3
jo
shr
ss
mov
test
in
shll
aad
fildl
dec
sbb
xchg
shrl
sbb
in
pusha
pop
pop
call
push
cmp
loop
jle
add
mov
jp
and
je
push
add
ffree
mov
and
inc
dec
rolb
mov
sbbb
ds
ficoms
sahf
fistpl
xor
mov
es
jge
mov
fdivl
adc
int3
repz
mov
push
jae
out
inc
xchg
mov
or
adc
shll
cmp
hlt
shl
dec
loopne
ss
or
adc
aad
adc
in
ret
pop
jbe
stos
dec
xchg
sbbl
push
jno
sub
fisttps
and
ds
inc
push
ljmp
xorl
movsb
arpl
jecxz
adc
add
lret
mov
rclb
or
cmc
add
cmp
sub
pop
push
test
mov
ret
sbb
dec
push
xchg
aad
cli
sub
inc
sub
jb
int
mov
mov
jno
andb
mov
fdivrs
adc
sub
arpl
jp
ljmp
jbe
add
repz
or
fistpll
insb
filds
cmp
and
mov
sti
test
int3
into
cwtl
xchg
mov
push
inc
mov
fwait
das
dec
pop
cmpsb
sub
das
jae
ds
stos
in
jle
pop
insl
sbb
push
and
leave
pop
data16
das
testl
add
xchg
nop
mov
pop
pop
and
stc
fnsave
adc
push
jb
xor
jnp
in
push
sbb
insb
fldenv
add
push
scas
cmc
xchg
nop
cmp
xchg
sbb
test
xchg
fstl
fsubs
inc
leave
adc
rolb
lods
stos
jmp
mov
inc
mov
mov
mov
dec
fistps
adc
push
jno
mov
cmp
jno
fnstsw
fs
mov
cmp
mov
push
sbb
in
xor
lret
push
xor
movsb
add
icebp
lods
push
cli
sbb
lds
and
repz
sbb
jo
imul
mov
or
fsubl
in
xchg
lcall
mov
pop
or
fwait
jmp
popf
cwtl
and
push
sbb
cltd
cwtl
loope
fsub
xlat
xlat
loopne
add
bound
jae
lea
lea
and
or
sarl
mov
divb
and
mov
cmp
mov
movl
jecxz
inc
test
xchg
dec
dec
mov
clc
lgs
push
dec
xchg
loope
xchg
and
inc
xor
cmp
pop
pop
pop
inc
mov
xor
add
or
adc
cmp
scas
out
inc
and
subb
inc
inc
or
int
cmpsb
lods
mov
sbb
scas
jbe
in
jmp
lods
adc
jecxz
mov
sbb
push
push
jb
lods
lret
jl
push
inc
pop
dec
js
push
sub
rcr
cmp
xor
jns
and
cld
cmp
mov
inc
add
enter
aad
mov
fwait
lcall
pop
imul
pusha
jbe
subl
jo
out
in
bnd
arpl
mul
ret
mov
ljmp
cli
xchg
cmp
mov
iret
jg
negl
pop
fildll
add
cs
add
lahf
sbb
out
shrb
iret
pop
mov
cwtl
and
sbb
sub
nop
rcrw
sbb
mov
sub
cltd
dec
inc
cmpsb
cli
inc
mov
or
ja
fadd
loop
add
or
mov
mov
mov
pop
sbb
push
mov
lea
int3
push
test
mov
and
pop
mov
insl
adc
cmc
mov
mov
mov
jl
push
mov
cmp
pop
das
fisubrl
xchg
popa
repnz
adc
mov
icebp
cmpsl
movsb
repz
inc
and
jnp
jb
clc
fwait
jmp
dec
lahf
or
dec
or
cmpsb
test
pop
push
leave
pop
rcrl
loope
imul
sbb
ret
adc
sti
mov
mov
hlt
push
push
dec
aam
xchg
je
scas
cmp
dec
clc
mov
ja
sbb
in
divb
inc
adc
xchg
mov
mov
push
and
dec
divb
add
and
jg
lock
mov
sbb
push
xchg
or
es
mov
scas
xchg
pop
push
fsubl
jg
pop
icebp
cmp
imul
dec
cmp
push
scas
test
xor
cli
into
inc
xor
cmp
add
add
ret
fwait
scas
xor
outsb
out
cmp
pop
fidivrs
test
pop
cmp
sbb
mov
mov
cmp
xchg
mov
outsl
mov
hlt
lds
push
cmpsb
out
lock
pop
mov
jl
xchg
and
jmp
mov
jle
cmpsl
push
adc
cmc
lea
popa
sub
fldenv
xchg
les
pop
fists
aad
cmp
dec
iret
aas
popf
mov
test
jb
and
sub
push
in
mov
insb
add
movsb
mov
mov
int3
jge
mov
int
adc
push
shlb
nop
hlt
push
jmp
or
mov
test
adc
and
xor
in
add
xlat
iret
lds
pop
lock
cmpsb
loop
lods
sbb
pop
add
add
add
rcrl
fsubrp
dec
xor
in
orl
cld
ss
add
fstpt
aaa
fidivl
popf
pop
out
sbb
cs
push
pop
repz
xchg
inc
jns
loope
or
mov
jnp
adc
hlt
dec
imul
and
out
out
or
mov
scas
mov
push
add
or
fcompl
enter
mov
cmp
add
loopne
adc
mov
rcll
pop
out
pop
sbb
cld
mov
stc
mov
arpl
aam
adc
cli
cltd
push
cmp
outsl
dec
dec
dec
in
sahf
mov
scas
loope
xchg
add
inc
and
xor
pop
dec
fmull
and
push
adc
dec
aaa
cmc
add
test
test
inc
fidivrl
xchg
aad
cs
enter
sub
stos
enter
inc
mov
fstpl
jb
pop
xor
lret
js
in
jnp
lahf
inc
rorb
sti
outsl
xchg
shlb
inc
icebp
jnp
cmp
mov
cmp
xchg
dec
dec
shl
movsl
or
cmpsl
jns
xor
out
cwtl
mov
inc
cmc
inc
and
in
push
add
mov
ds
test
push
rol
scas
ret
mov
xor
cmp
sub
inc
jl
shrb
sbb
int3
push
xchg
mov
sbb
or
int
and
add
roll
fisubl
mov
out
aaa
adc
add
loope
push
sbb
clc
fsubp
pop
or
pop
jbe
aad
sar
cmp
fildll
mov
inc
sbb
jno
decl
sbb
push
add
xchg
mov
out
jp
or
out
xlat
xchg
mov
sub
and
arpl
push
adc
fsts
ret
pop
inc
mov
into
popf
mov
cmc
push
xchg
stos
jl
out
test
adc
ret
push
push
pop
cmp
dec
in
inc
aaa
repz
mov
sbb
movsb
movsb
mov
lea
shlb
inc
or
je
fsubl
xchg
pop
outsl
ss
cmp
mov
add
rcll
out
inc
mov
push
mov
cli
mov
inc
add
int
inc
sub
xchg
into
insb
out
push
in
jae
aad
movsb
loop
cmp
and
xlat
mov
sbb
sub
and
sahf
adc
sub
push
testb
cmc
cmp
add
cmc
push
mov
outsb
in
mov
ljmp
pop
adc
std
mov
mov
negb
pushl
and
mov
andnps
movsb
loop
fidivl
out
dec
sbb
xlat
enter
push
cmp
loop
jmp
sbb
adc
repz
addr16
xchg
dec
repnz
or
orb
sub
cld
fucompp
inc
or
sbb
mov
repnz
cmp
bound
int
pop
sub
push
inc
je
imul
in
mov
dec
sub
sub
and
add
cs
mov
and
fldenv
xchg
sbb
sub
test
movsb
loop
and
and
stos
ja
inc
inc
mov
mov
pop
inc
mov
mov
cli
andb
cmp
pop
sub
add
stos
add
add
pop
sub
xchg
mov
inc
outsb
int
inc
push
dec
inc
sbb
ljmp
mov
stc
push
xchg
mov
sub
je
and
lds
mov
push
fdivr
xchg
mov
mov
lret
rclb
jae
fisubrl
xorb
jge
inc
push
dec
repnz
mov
and
mov
pop
push
inc
jmp
std
adc
jp
test
mov
js
push
je
and
jmp
aaa
lock
imul
jns
or
jns
jle
sti
push
adc
jo
cltd
subb
xor
dec
inc
add
dec
inc
leave
xchg
push
sub
jns
scas
mov
out
inc
xchg
js
jae
ja
and
push
cmpl
xchg
lods
jns
frstor
out
inc
cmp
pop
fwait
inc
jae
enter
adc
push
insl
ja
inc
sti
cwtl
test
repz
notl
insl
mov
sub
test
loop
xor
mov
jb
fsubs
mov
loop,pt
fldenv
in
push
loopne
lcall
cmpsl
sub
sub
push
sub
fs
inc
loop
outsb
addb
mov
out
jnp
sub
daa
movsb
loop
sbb
test
xlat
mov
sub
fildl
xchg
mov
cmpsl
push
aam
ja
std
push
fldcw
mov
loopne
out
inc
sub
cld
sub
jns
cld
push
mov
push
or
stos
pop
mov
out
inc
fstpt
sub
fwait
arpl
daa
jnp
movsb
push
sub
adc
lods
pop
repz
sub
pop
int
xor
hlt
push
loop
js
xchg
sub
out
pop
je
xchg
mov
ret
sub
mov
and
fbld
pop
xlat
cld
mov
xchg
jnp
sub
shlb
xor
jae
jl
and
cs
movsb
and
aam
lods
or
inc
xchg
int
dec
cmp
stc
test
and
in
dec
push
loop
ds
mov
inc
cmp
and
sub
stc
les
iret
lods
dec
add
movsb
neg
pop
sbb
addr16
fsubl
cltd
shlb
cli
xor
lds
pop
scas
add
cli
mov
mov
stos
inc
inc
sbb
mov
mov
jg
mov
xor
and
xor
mov
sti
ss
sub
jecxz
sbb
sub
popf
pusha
and
jl
inc
xchg
int3
lods
in
dec
mov
dec
push
incl
jg,pn
mov
pop
xchg
ficompl
mov
mov
mov
inc
jns
ficomps
cltd
mov
xchg
adc
add
lcall
xchg
adc
cmp
dec
pop
sar
mov
inc
sbb
xchg
sti
push
imul
stos
push
xchg
xor
add
cli
pop
pop
test
push
enter
test
movsb
inc
xchg
es
out
int3
in
jae
sub
dec
sbb
jno
xchg
lds
in
orb
fnstenv
dec
add
mov
dec
inc
inc
shl
push
xchg
cli
push
cltd
mov
xorl
push
cmp
mov
or
std
push
mov
xor
stos
push
inc
pop
xor
daa
fistl
cld
inc
and
jo
jmp
cmp
and
aad
sub
faddp
mov
xor
ret
cld
addr16
lret
cld
sub
mov
mov
push
push
push
xchg
incb
mov
add
incl
sbb
and
out
jecxz
and
mov
sbb
inc
xchg
popf
imul
mov
movsb
push
pushf
jmp
xchg
call
mov
mov
pop
out
sub
push
pop
mov
sub
pop
fldenv
lea
jnp
xor
movsb
jo,pn
sti
inc
inc
and
inc
jbe
mov
sub
inc
xchg
test
xor
push
call
std
in
and
add
sub
decl
mov
sub
jns
test
xlat
clc
pusha
xor
mov
add
mov
imul
popf
mov
inc
pop
xchg
xor
mov
or
shrl
addr16
inc
add
and
loop
push
cmp
outsb
sub
insl
sub
repz
xchg
sub
mov
loopne
jae
adc
and
rolb
les
cmp
in
fldl
add
mov
sbb
and
daa
adc
cmp
testl
in
mov
leave
loop
xchg
in
push
test
test
loop
inc
mov
pusha
bnd
popa
mov
cmp
adcb
cli
inc
jl
daa
and
inc
mov
popf
add
and
or
mov
xchg
rclb
xchg
add
fucomi
lock
leave
and
mov
mov
mov
in
pop
or
sbb
arpl
mov
int
sub
push
mov
mov
movsb
rolb
and
xor
stc
movsb
lds
mov
ret
jmp
call
mov
cltd
sti
adc
sub
and
pop
inc
test
ja
rcll
popf
push
cld
insl
or
in
pop
sub
test
mov
fstl
stos
push
les
inc
jbe
mov
pop
inc
xchg
and
mov
inc
iret
mov
ds
jecxz
push
inc
lods
sbb
xchg
cs
push
das
dec
sbb
mov
fdivp
popf
pop
cltd
mov
aaa
lret
inc
pusha
test
jno
mov
push
mov
dec
mov
push
mov
test
test
pop
adc
xchg
jecxz
mov
push
xchg
jge
lods
jge
add
repz
test
mov
pop
mov
inc
out
mov
xor
pop
dec
xlat
popf
mov
xor
lds
mov
inc
xabort
push
ljmp
and
sbb
inc
outsb
icebp
dec
mov
dec
dec
cmp
iret
mov
and
and
repz
mov
mov
xchg
movsb
gs
pop
mov
fsubl
das
adc
pop
divl
adc
icebp
loopne
mov
jb
and
mov
push
lods
mov
xchg
mov
dec
jns
xchg
shll
xor
int
sub
add
or
dec
xor
pushf
imul
jl
push
sbb
mov
je
int3
pusha
inc
movsb
add
mov
xor
insl
data16
jle
or
push
pop
pop
lea
fistps
mov
mov
cmp
adc
iret
jg
outsl
dec
test
into
sti
aad
jns
mov
cmp
push
push
xchg
adc
icebp
xchg
nop
hlt
cmpsl
addr16
je
mov
dec
mov
ja
cld
mov
cs
push
rcr
aaa
jae
cmp
loope
xchg
ja
mov
inc
sub
push
aad
xchg
cmpsb
mov
cli
out
mov
mov
push
xchg
lret
jns
in
cmp
inc
lahf
test
aam
lods
insb
cmp
fsubr
jmp
data16
loop
add
jge
fstp
sub
movl
dec
mov
fisubrl
mov
scas
dec
and
adc
notl
mov
insl
push
mov
fsubp
fmuls
push
test
out
xor
ret
or
les
ja
mov
mov
cmp
dec
jecxz
inc
jg
add
insl
addr16
dec
lret
sahf
mov
test
cmc
iret
shl
push
cli
add
sub
mov
int
and
leave
push
or
sbb
jae
mov
xor
imul
xchg
adc
and
mov
das
sub
and
nop
out
shlb
jno
xlat
cmc
cmc
je
insl
addr16
int
es
sub
cltd
inc
pop
mov
lock
and
hlt
out
ljmp
dec
gs
addl
mov
shlb
loop
or
and
push
test
scas
jge
inc
inc
stos
pop
hlt
xchg
sub
sbb
sub
push
jp
sbb
inc
sub
mov
and
je
into
jl
in
push
push
adc
and
or
hlt
imul
adc
sub
jge
dec
repz
sub
cs
testb
cltd
or
xor
dec
mov
push
scas
mov
scas
add
imul
pop
push
cmp
push
jbe
pop
sbbl
lods
xor
mov
pusha
pop
cs
gs
outsl
negb
push
stc
inc
jl
sbb
pop
je
sub
jg
loopne
mov
sub
inc
inc
cs
mov
mov
sarb
sub
dec
insb
cli
out
testl
popa
xor
mov
push
pop
fists
push
sahf
call
and
inc
push
push
or
jno
cmp
cli
mov
and
out
dec
arpl
and
daa
dec
sahf
jmp
xor
mov
jecxz
nop
iret
dec
loopne
fcmovb
adc
push
je
pop
nop
aaa
pop
or
test
sarl
jns
mov
std
cltd
in
jecxz
fwait
or
sub
pop
ds
jae
nop
fiadds
int
jmp
lahf
pop
sub
jg
rcrl
jl
dec
sub
mov
sbb
out
imul
mov
mov
lods
dec
mov
dec
push
xchg
mov
out
and
daa
out
into
mov
out
movsl
jle
jne
mov
push
xor
test
add
jbe
xchg
fwait
int3
test
cmc
push
lock
adc
daa
push
add
dec
mov
jecxz
jl
push
js
test
cmc
repz
push
call
sbb
jl
shlb
je
int3
jo
arpl
mov
mov
pop
xor
sub
pusha
pop
add
cmp
jnp
dec
clc
jl
xor
xchg
sti
subl
rol
rorb
repnz
xchg
jmp
int3
fsubp
xchg
mov
xchg
or
cmpsb
int3
in
sub
adc
xchg
popf
decl
fsubl
push
xchg
mov
pop
hlt
scas
loopne
push
push
inc
jno
jno
movsl
push
push
jg
add
imul
cmpsl
mov
push
add
and
add
scas
sub
mov
jmp
inc
fcomip
pop
cmp
mov
push
mov
pushf
mov
imul
jge
icebp
cvttps2pi
hlt
pop
add
cli
ds
out
xor
hlt
jae
fs
cmp
xchg
pop
lock
inc
test
mov
mov
sarl
adc
lods
lock
fwait
inc
lods
cltd
xor
jmp
aaa
mov
jge
mov
mov
je
rolb
out
cmc
iret
mull
test
pop
loopne
aas
movsl
mov
hlt
sub
sbb
push
pop
inc
mov
pop
mov
jl
mov
cwtl
xor
jnp
mov
pop
sub
jns
jbe
mov
popa
mov
mov
sub
and
sbb
out
and
popf
out
inc
xchg
mov
roll
xlat
pop
fmuls
out
daa
ficomps
or
movsl
movsb
cwtl
stos
out
cs
sbb
push
pop
xchg
divl
les
pop
add
push
sub
int
or
fwait
mov
adc
pop
clc
lock
je
movsl
ja
in
push
ss
in
mov
mov
or
rol
push
rol
std
fs
fwait
push
pushf
sub
out
xchg
je
adc
and
scas
fwait
dec
or
ret
push
ja
ret
jo
push
cmpsl
mov
out
sub
sbb
mov
push
scas
and
sub
aam
sbb
jne
enter
xor
int
out
pop
nop
xor
pop
mov
dec
push
add
push
fcoml
mul
lds
jl
mov
xchg
sub
sub
jg
aad
push
push
xor
xchg
loop
mov
inc
adc
cmpsl
lret
cmc
jmp
add
das
xchg
rcrl
daa
mov
nopl
fwait
aad
lret
and
jl
pop
gs
or
sbb
push
pop
movsb
or
pop
mov
js
sub
cmp
mov
stc
aas
mov
push
mov
add
mov
or
pusha
pop
mov
mov
jb
lcall
sbb
icebp
ret
xor
pop
inc
sub
mov
pop
cld
popa
testb
mov
cli
iret
push
out
xchg
aam
push
mov
mov
push
pushf
mov
sbb
pop
movsb
mov
iret
xor
dec
sbb
mov
inc
mov
ret
lods
inc
lahf
push
arpl
hlt
int
das
cmp
out
cmpsl
je
pop
lock
das
pop
and
xchg
iret
lcall
movsl
addr16
add
jle
pop
ret
test
cwtl
ds
pop
cld
adc
dec
je
es
dec
mov
vaddps
lods
pop
rorb
lods
mov
stos
sub
cmp
test
add
xor
shll
mov
pop
jle
mov
sub
xlat
lahf
sahf
lea
pop
sbb
es
add
and
mov
and
xor
fucomip
and
ss
xchg
lcall
movsb
addr16
xchg
addb
icebp
dec
int3
out
and
mov
mov
sbb
cmc
jp
ret
into
jbe
pusha
xor
cs
ds
mov
arpl
adc
in
insb
je
mov
xor
mov
stos
dec
je
cmc
out
mov
notl
jne
mov
cmp
aaa
mov
or
sbb
add
mov
dec
addl
data16
pop
scas
cld
rcl
inc
imul
push
mov
jl
sub
inc
jl
jg
mov
push
pop
xorl
pushf
dec
stc
mov
ja
dec
movhps
and
inc
jle
jle
sti
xchg
fstpt
fisubl
cwtl
fwait
adc
jbe
jge
sarl
xchg
popa
nop
mov
mov
aad
hlt
adc
insb
mov
mov
sub
sbb
dec
dec
sub
xchg
aam
push
sub
mov
jae
mov
jge
dec
nop
pushf
jl
mov
mov
cmp
lods
mov
loopne
and
data16
test
pop
add
data16
mov
and
enter
jge
mov
scas
push
xchg
or
stos
xor
scas
xchg
push
lcall
sub
push
dec
hlt
fcoml
jne
fwait
cmpb
push
inc
ss
imul
pop
enter
pusha
sub
lret
cmc
push
cmc
jne
rcll
nop
fucomp
outsl
or
dec
xor
push
rcl
inc
out
sub
enter
fsubs
or
cmp
out
pop
lock
cmpb
jmp
push
inc
push
xchg
jo
mov
in
iret
test
push
stos
cmc
js
cs
int
iret
mov
xchg
pop
mov
cmc
outsl
cmp
jge
orb
das
jp
iret
cmpsb
stc
or
and
out
out
mov
dec
inc
nop
cs
daa
sbb
pushf
xor
scas
mov
and
xor
push
aam
sbb
nop
sbbl
je
sbb
mov
jle
stos
jg
imul
xchg
jne
and
fs
dec
mov
outsb
inc
out
cmpsl
dec
adc
enter
xchg
and
fsubr
xor
mov
adc
lock
sub
orb
sbb
xor
add
enterw
imull
inc
lea
hlt
or
jae
pop
aam
jl
movsl
iret
push
out
pushf
push
jecxz
mov
lahf
sbb
popa
inc
call
xchg
dec
and
rcrl
pop
shlb
mov
xchg
xchg
adc
dec
jl
mov
cmp
push
xchg
data16
add
mov
cmpsl
push
lret
sub
xorb
sub
arpl
int
mov
mov
movsb
pop
hlt
pop
aad
and
push
insl
hlt
subl
mov
push
cmpsb
pop
mov
out
fwait
push
xchg
mov
out
aas
xorb
xchg
sarl
mov
rolb
sbb
xor
jae
or
cli
xor
push
mov
sbbl
sub
xor
push
js
sub
aam
push
lret
jns
sub
inc
or
cwtl
sub
imul
sti
iret
cmpsb
sub
nop
mov
sbb
or
sbb
mov
and
pushf
adc
mov
push
into
pop
inc
push
leave
nop
rcrb
jl
add
xchg
fadds
dec
test
out
js
andl
xor
jmp
cwtl
movmskps
lret
mov
clc
cli
jecxz
stos
lahf
mov
mov
jb
mov
mov
mov
sbb
xor
pop
lock
push
pusha
out
clc
cmpsl
sub
lcall
imul
repnz
sub
addr16
mov
sbb
mov
clc
jecxz
out
fldenv
je
xchg
and
loopne
dec
lret
into
xor
mov
mull
clc
in
sub
stc
das
or
test
xchg
mov
xchg
pop
dec
jmp
push
push
lcall
add
iret
in
popa
mov
and
xchg
xor
xchg
lea
testl
dec
sub
out
xchg
mov
test
shrb
ucomiss
jbe
jo
daa
add
aaa
cs
in
and
sub
mov
pop
inc
sbb
subl
mov
aas
clc
ret
jae
xchg
pop
insb
iret
repnz
adc
je
cmp
pop
sti
sub
sub
push
xor
insl
in
push
das
lea
mov
out
push
jno
negb
loope
aam
push
sub
sub
xchg
xchg
unpckhps
inc
and
in
push
push
mov
xchg
in
ja
shll
dec
jo
add
lock
pop
iret
icebp
sbb
or
mov
dec
lock
iret
pusha
pop
lret
hlt
shl
push
lea
push
loop
mov
nop
inc
int3
int
jne
sbb
test
xchg
lcall
xor
fisubrs
xchg
push
pusha
mov
sahf
in
subl
fsubrs
mov
pop
stos
dec
cltd
mov
imul
popf
cmp
hlt
or
clc
mov
sbb
loopne
xchg
cs
int
xor
jl
adc
hlt
pop
jl
and
jmp
push
xchg
andb
xchg
push
decb
pop
movsl
shl
ja
xchg
pusha
cmp
setae
jbe
add
dec
repz
xor
cmp
test
decl
xor
fxam
add
lock
ja
mov
dec
cli
fimull
dec
fistpll
xor
sub
pop
jnp
xchg
mov
add
cmp
ds
call
or
hlt
rep
push
pmaxsw
and
lods
push
xor
dec
icebp
mov
mov
js
cmp
inc
mov
jl
fsubs
in
mov
test
xchg
adc
mov
mov
lods
ss
jg
subb
cmpsb
or
xor
sar
dec
pop
jnp
pop
je
cs
lret
out
inc
add
inc
sbb
add
pop
into
fcmovbe
cmc
pusha
xchg
leave
sub
sbb
and
push
cmc
lods
rorl
pushf
je
inc
dec
imul
cli
add
inc
xchg
testb
jge
scas
xor
mov
movsl
pop
mov
imul
pop
lahf
xchg
push
jge
sub
xchg
lret
outsb
push
lret
jg
sub
inc
sub
mov
add
mov
mov
and
das
data16
out
pop
push
mov
int3
loopne
mov
int3
out
lahf
mov
call
in
out
xor
or
call
push
shrb
mov
mov
aaa
pop
sbb
ja
ror
rcll
xor
mov
xor
push
je
fldcw
mov
sub
popa
mov
repnz
insb
and
fmull
xor
mov
jecxz
push
nop
ja
jg
lods
dec
icebp
pop
push
hlt
jmp
ror
rcrl
test
test
pop
sbb
xchg
ss
js
jl
rep
inc
andl
mov
dec
fisubrl
push
xchg
test
imul
mov
lahf
jl
arpl
ss
fldl
xor
and
scas
stos
lock
dec
push
mov
loope
ret
aam
mov
mov
jnp
fucomi
push
sahf
inc
fs
push
xchg
imull
or
js
pop
jnp
in
cmp
js
adc
rorb
int3
filds
pusha
repnz
iret
sarl
test
cmc
das
jle
adc
mov
lds
sbb
ljmp
stc
in
and
xchg
fsts
fcomip
push
sub
pop
repnz
push
sub
iret
push
idiv
inc
mov
shl
add
sbb
inc
divb
cmp
movsb
or
rclb
sbb
jae
add
cmpsl
int3
iret
and
push
pop
outsl
inc
push
inc
loope
lods
lds
cmpsl
mov
repnz
int3
or
rcr
pushf
int
sub
push
cs
int
dec
gs
xchg
cmp
aas
adcb
rorb
cmp
sbb
mov
push
inc
jg
test
je
hlt
das
movmskps
or
xor
outsb
lock
int
or
mov
push
xchg
pop
loop
sub
jns
arpl
jno
bound
mov
aaa
mov
loopne
sub
jmp
mov
js
inc
outsl
mov
push
jae
das
pop
int3
outsl
movsl
push
xor
out
subl
imull
adcl
sub
mov
and
xchg
and
sub
clc
sti
dec
mov
lods
mov
mov
call
jg
dec
out
adcb
aam
aas
jge
fwait
das
lahf
jge
orb
sub
jp,pt
mov
addl
out
arpl
xor
pop
push
rcrb
or
lock
push
mov
dec
in
negl
mov
arpl
std
sub
pusha
in
jl,pn
pop
scas
lods
fnstenv
das
jge
mov
outsb
xchg
jg
int3
push
aam
ds
mov
test
out
xchg
pop
and
orb
add
insb
in
xchg
or
js
nop
outsl
insb
push
sbbl
push
adc
sbb
in
por
call
xor
and
sub
or
in
fmull
xor
mov
adc
jo
loope
and
dec
xchg
paddq
mov
into
adc
int3
add
aam
mov
sub
add
or
mov
dec
inc
add
mov
or
sub
icebp
cli
xchg
xchg
stos
mov
add
sbb
jl
cld
xor
clc
jne
scas
fildl
and
jae
add
sbb
mov
and
mov
int
adc
add
mov
mov
rolb
imul
or
push
sbbw
imul
dec
inc
movsl
lock
mov
mov
lret
mov
cmp
dec
dec
scas
fistpl
mov
inc
aas
icebp
or
jnp
and
mov
mov
jae
xor
xchg
pop
cli
in
sub
jg
inc
rorb
xor
or
pushf
lret
lahf
add
pop
add
xor
sbb
ret
mov
cli
scas
aaa
lcall
in
int3
icebp
adc
push
push
cwtl
mov
pop
jne
mov
fstpt
mov
mov
xor
xchg
in
cmp
lret
leave
andb
cltd
std
mov
aad
mov
and
sbb
adc
fs
add
cmpsb
fs
int3
pop
inc
mov
xchg
mov
das
pop
mov
mov
es
add
out
mov
jbe
je
scas
push
jl
outsb
xchg
xchg
ss
leave
xor
call
ja
fildl
je
sub
fwait
jmp
std
test
xor
fwait
enter
sbb
cmp
mov
hlt
arpl
aaa
cwtl
aam
xor
mov
sub
pop
mov
in
mov
insb
sub
shll
and
daa
int3
or
push
cs
stos
cmc
addr16
fmul
or
nop
xchg
stos
mov
push
aas
int3
push
lods
fcoml
jge
int
fs
hlt
jmp
sub
iretw
cmp
jno
lock
pop
cmc
adc
out
mov
push
sbb
aam
jnp
xor
sbbb
dec
sub
je
dec
add
clc
mov
sbbl
icebp
mov
cmp
cli
ret
fs
popa
dec
dec
int3
aas
jb
xchg
leave
cs
icebp
sbb
out
add
test
je
dec
in
lods
sahf
aad
and
jbe
testb
clc
xlat
inc
lock
scas
push
fidivl
hlt
aam
out
mov
arpl
and
and
lcall
and
add
jnp
or
jbe
mov
out
mov
inc
sar
test
jmp
fdivl
gs
xchg
mov
dec
les
cwtl
add
or
imul
cmc
mov
or
push
mov
pusha
popf
dec
sbb
leave
dec
std
cltd
dec
adc
xor
jle
cmp
add
push
mov
outsl
outsl
mov
icebp
adc
dec
imul
or
adc
xorb
iret
sbb
jecxz
push
pop
jne
mov
testb
push
mov
ljmp
mov
lret
mov
jge
imul
mov
iret
clc
ficoms
jnp
sbb
movsl
inc
xor
mov
or
xchg
xchg
cltd
shll
jle
pop
sub
cltd
lea
push
ret
inc
dec
test
and
cmp
data16
xor
add
movsb
mov
add
lods
fimull
je
ror
pop
cltd
cmp
sbb
add
lods
fldcw
mov
pop
xchg
push
ret
mov
sbb
int
adc
push
popf
lahf
movsb
ret
je
push
loope
add
xchg
push
pop
cmp
xchg
mov
xchg
jl
mov
mov
ljmp
dec
gs
repnz
cmp
cld
add
jle
jbe
movsb
mov
ja
mov
jno
push
inc
push
pop
testl
outsl
inc
out
inc
shlb
into
pushf
inc
and
insb
loopne
nop
xchg
jmp
xchg
mov
pop
nop
mov
gs
or
pop
xchg
sbb
pop
adcb
add
sub
xor
cmp
cmp
inc
in
cmp
call
mov
sbb
lret
xor
pop
int3
pop
mov
xor
call
inc
xor
sar
lods
jno
sub
dec
cmp
xchg
stos
add
out
jns
lcall
jnp
fwait
mov
insb
xchg
push
lock
pop
inc
out
out
mov
jb
push
push
test
std
loopne
sub
cmpsb
adc
xchg
mov
or
xchg
test
mov
cltd
fsubrs
xchg
in
mov
or
lods
sbb
lock
or
js
pop
inc
and
mov
mov
aam
scas
cld
getsec
call
mov
mov
das
shrb
popw
movsb
dec
jne
mov
cld
push
rclb
aaa
loopne
scas
jecxz,pn
mov
sbb
jmp
push
je
pop
lea
sarb
in
pop
cmp
std
into
fldenv
push
imul
cwtl
fistpl
xor
sti
push
add
jbe
lret
fsubrs
mov
out
or
aaa
push
jp
js
cmpsl
mov
jo
rep
frstor
push
jnp
scas
xor
pop
pop
cwtl
jo
lods
mov
popf
outsl
xchg
orps
dec
dec
xchg
pop
cmpsb
cmp
ljmp
or
std
xchg
inc
jmp
add
or
mov
lds
iret
mov
xor
pop
aam
loop
lods
push
mov
and
push
sbbl
nop
mov
loopne
mov
push
pop
enter
in
fucomp
xchg
mov
xor
hlt
mov
or
push
push
outsb
mov
inc
push
loope
fnstsw
fwait
xchg
mov
repnz
loopne
adc
inc
sub
pop
pop
push
dec
push
cwtl
xchg
cmpsb
jmp
rcll
and
lcall
in
jge
addr16
in
repz
fildl
aam
jge
pop
push
fwait
leave
push
dec
cltd
std
inc
dec
lods
sahf
pop
sub
push
stc
jo
mov
xlat
mov
cltd
aaa
xor
and
mov
andl
sbb
push
cld
ret
cmc
movb
ja
xor
stos
fldt
adcl
pop
loop
je
or
mov
sub
js
adc
push
and
jae
aad
lock
mov
mov
cltd
aam
xor
test
pop
lock
cmp
lds
js
add
sbb
pop
test
shl
fwait
and
jp
in
inc
xchg
icebp
or
lahf
push
xor
xor
pop
ljmp
clc
pop
adc
inc
nop
arpl
jb
call
punpckhdq
aas
push
push
adc
test
or
cmc
out
js
scas
cwtl
jecxz
seto
adc
and
dec
or
js
lea
pop
lods
mov
mov
jne
jg
jno
pushf
pop
jae
inc
icebp
aad
adc
sbb
sbb
outsl
add
fistl
in
pop
xor
add
pop
fcmovne
xor
mov
test
jle
in
je
and
mov
dec
fcmovnu
sub
loope
xor
loopne
xchg
jb
cmpsl
out
dec
stos
insl
rcll
mov
mov
stos
aam
or
cwtl
mov
xor
mov
lods
lods
adc
lods
aam
cli
cwtl
out
lock
lcall
xor
stc
movsb
fisttpl
cli
sidtl
xchg
insb
cmc
test
cmp
mov
scas
mov
jne
add
movsb
jecxz
pop
pop
inc
mov
test
add
push
test
mov
pop
xchg
insb
add
jne
lods
insl
pop
sbb
insb
in
xchg
sbb
cs
jnp
aad
dec
lock
sub
sbb
or
test
pop
dec
xor
hlt
iret
mov
adcl
js
adc
xor
sub
lret
cmpsl
or
sbb
xchg
pop
rolb
adc
add
sub
jb
mov
addr16
cs
scas
push
dec
aam
movsb
jle
test
leave
xchg
cmpsl
sub
cmp
pop
xor
jle
jmp
cmp
push
in
sbb
xor
mov
sub
daa
js
xor
call
frstor
test
jne
push
mov
inc
push
pop
cmpsl
xchg
sub
out
add
mov
push
push
mov
cs
cwtl
and
sbb
jno
xor
icebp
adc
mov
aaa
jp
push
ss
xchg
ss
int3
cmp
test
es
cmpsb
adc
rorl
imul
push
push
sar
and
cmp
and
sbb
pop
mov
loopne
pop
rorl
or
mov
sarl
bound
idivl
sti
xchg
or
jnp
leave
in
cltd
sub
jb
cmp
shld
dec
xchg
sub
je
nop
fsubs
jg
cmp
mov
jb
icebp
stos
test
out
add
sub
push
sti
mov
mov
jecxz
dec
ljmp
cmp
jge
gs
repnz
mov
mov
jmp
daa
cwtl
pop
fildll
mov
scas
pushf
jl
sbb
insw
inc
or
push
xchg
imul
jns
jnp
sbb
cmp
sarl
and
int
sti
into
push
cmp
in
fstp
sbbl
or
jp
push
lea
jo
cmpb
xor
cmp
js
pusha
repz
jae
out
push
pop
rcll
cwtl
test
pop
cmp
int3
push
sub
mov
movsl
mov
outsl
or
icebp
je
cmp
and
aaa
pop
fistl
sub
dec
xor
sahf
cmc
call
insb
and
xor
or
sarb
lods
fists
add
ror
inc
enter
or
mov
add
cmp
xor
call
lret
outsl
xor
outsb
addr16
jge
outsl
sub
into
jno
cmp
je
adc
inc
mov
aaa
mov
dec
aad
scas
push
pop
cs
adc
int
cmp
jno
and
stos
pop
sub
jbe
fsts
xchg
adc
insb
pop
add
gs
sbb
push
mov
sub
pop
push
mull
adc
dec
fstps
icebp
xor
add
cli
pop
data16
out
cmp
mov
inc
lret
push
jg
fsub
hlt
cmc
and
jmp
mov
inc
les
mov
scas
xor
add
cmp
addl
xchg
movsb
mov
mov
push
fmuls
popf
imul
pop
sbb
add
aam
cmp
xlat
xchg
fadds
mov
add
adc
adc
rolb
cmp
cmp
in
mov
gs
mov
xlat
insl
mov
test
mov
popf
pop
hlt
mov
mov
or
imul
sbb
aas
js
movsl
movl
push
lods
popf
jae
insb
pop
push
ds
fsubrp
cmp
daa
sahf
fadds
loop
cltd
xlat
dec
sahf
add
adc
adc
movsb
mov
or
push
fsubrp
mov
jne
jmp
xlat
popf
mov
test
fimull
or
adc
adc
sbb
in
call
mov
cwtl
mov
mov
enter
add
popf
dec
int3
insb
pop
jp
repz
fsubr
cmp
out
fadds
lret
xlat
mov
lahf
popf
adc
pusha
adc
pusha
lea
call
cmp
int
fucomi
mov
push
jmp
xlat
insl
mov
test
ret
pop
movsb
mov
mov
clc
sbb
js
in
clc
sahf
jecxz
sub
aas
mov
pop
mov
iret
aam
add
pop
inc
cmp
add
cmp
negl
mov
repnz
fistps
sbb
lock
enter
cmp
int
xchg
gs
jmp
xlat
jge
fsts
cs
test
fsubr
sbb
add
push
xchg
fsubrl
pusha
es
xchg
das
loop
fcompl
sub
cmpsl
or
divl
out
cmpsl
mov
sbb
bound
jo
xchg
dec
nop
sub
addb
adc
stos
mov
rcrb
aam
inc
out
lods
push
dec
out
push
pushf
pop
test
test
leave
xor
mov
jo
push
sbb
test
pop
fldl
les
adc
add
test
arpl
sbb
and
mov
aad
jnp
and
cltd
shll
div
sahf
lcall
cmpsl
ret
or
int
mov
adc
lea
inc
pop
inc
sbb
jecxz
pop
mov
mov
cmp
lret
fisttpll
xor
add
xchg
xchg
add
insl
lahf
hlt
jae
fisubs
daa
scas
or
aam
mov
mov
ja
call
inc
adc
push
lahf
sbb
pop
lret
cmp
sbb
repz
popa
cs
xor
shll
in
daa
mov
mov
icebp
movsb
fdivrs
jnp
in
sbb
test
fwait
sbb
jg
dec
in
icebp
insl
or
lahf
cmp
jg
cmc
shll
rcrl
xor
int3
test
xchg
mov
mov
cmpsl
cmpsb
pop
xchg
push
std
adc
loope
inc
and
dec
dec
insl
push
in
adc
pop
iret
sub
shr
dec
add
xchg
sar
sahf
or
cmp
mov
notl
lcall
dec
lods
mov
and
movsl
imul
xor
jo
cmpsb
loopne
and
sub
nop
adc
xchg
or
stc
mov
adc
add
call
dec
xor
xchg
sbb
pushl
jo
jmp
add
adc
sbb
sub
repnz
pop
shrl
xchg
popa
stos
jecxz
fdivrl
mov
fwait
mov
loope
mov
adc
shll
inc
or
and
pop
test
stc
adc
jae
add
test
in
jnp
jno
cmpsl
jno
lcall
je
mov
lds
add
add
mov
sbb
je
dec
sbbl
mov
pop
sahf
out
inc
lret
push
xor
pushf
add
xchg
sub
imul
mov
repz
aas
arpl
dec
ficoms
sbb
icebp
in
jbe
xchg
jg
cmp
enter
rorb
daa
sbb
in
test
adc
in
js
in
mov
adc
push
leave
mov
ds
mov
in
gs
sbbb
jl
loop
push
sub
fs
mov
int
addl
dec
push
cmp
pop
pop
mov
push
jge
or
out
and
jmp
or
mov
adc
std
push
add
lods
inc
and
in
je
test
sar
or
pop
or
lcall
push
stos
add
stc
xlat
test
std
aad
xchg
cmp
pop
sub
mov
inc
inc
lods
push
cltd
jne
lret
popf
mov
jne
out
fsubrs
cmpsb
jecxz
xchg
pop
mov
dec
popw
sub
adc
cmpl
dec
mov
out
mov
int
mov
in
repz
pop
fcomps
in
pop
sub
in
pop
ljmp
int
sbb
push
jae
shlb
mov
or
mov
dec
mov
mov
mov
jge
movb
repz
sbb
aam
adc
icebp
aam
addr16
out
addl
cmp
push
xor
ljmp
js
xchg
fimull
jmp
xchg
cmp
rolb
dec
mov
test
aam
ljmp
add
movsb
and
enter
insb
xor
push
sbb
adc
or
inc
fisubrl
mov
push
inc
icebp
mov
fs
ljmp
insb
lods
jb
mov
push
and
ljmp
inc
cli
dec
mov
push
inc
lods
jmp
or
or
and
repnz
popa
or
xor
orl
pop
push
dec
adc
out
hlt
xor
mov
nop
jecxz
push
sub
mov
and
inc
repnz
inc
cli
loope
jns
push
adc
sarb
mov
xchg
in
inc
mov
divl
pop
or
sbb
cmp
enter
mov
aam
lods
cli
shll
addl
xor
out
jb
in
into
arpl
out
push
testl
hlt
xor
imul
loop
pop
cmp
in
pop
sub
in
pop
or
in
pop
sbb
in
pop
js
in
pop
or
in
pop
push
loope
pop
js
in
pop
push
loop
pop
cwtl
loop
pop
mov
loop
pop
test
in
pop
fsub
in
pop
mov
jecxz
pop
mov
in
pop
cwtl
jecxz
pop
js
in
pop
mov
in
pop
push
loop
pop
js
in
pop
push
loop
pop
sbb
in
pop
cmp
in
pop
or
in
pop
sub
in
pop
fsub
in
pop
cmp
in
pop
sub
in
pop
or
in
pop
sbb
in
pop
js
in
pop
or
in
pop
push
jecxz
pop
js
in
pop
push
jecxz
pop
cwtl
jecxz
pop
mov
jecxz
pop
test
in
pop
fsub
in
pop
mov
in
pop
mov
in
pop
cwtl
in
pop
js
in
pop
mov
in
pop
push
in
pop
js
in
pop
push
in
pop
sbb
in
pop
cmp
in
pop
or
in
pop
sub
in
pop
fdivr
in
pop
cmp
in
pop
stos
in
enter
sbb
in
pop
js
in
pop
or
in
pop
mov
stos
in
daa
js
in
pop
push
in
pop
cwtl
in
pop
mov
movsb
in
cmpsl
movsb
in
jg
movsb
in
aas
mov
std
in
and
jnp
hlt
inc
xchg
or
shlb
and
repz
lock
jo
mov
or
xor
in
jnp
xor
pop
xchg
test
in
arpl
pop
and
filds
aam
push
lock
in
pop
or
in
pop
push
std
in
pop
js
in
pop
push
std
in
pop
cwtl
std
in
pop
mov
std
in
pop
test
in
pop
fdivr
in
pop
mov
cld
in
pop
mov
in
pop
cwtl
cld
in
pop
js
in
pop
mov
in
pop
push
cld
in
pop
js
in
pop
push
cld
in
pop
sbb
in
pop
cmp
in
pop
or
in
pop
sub
in
pop
fdivr
in
pop
cmp
in
pop
sub
in
pop
or
in
pop
sbb
in
pop
js
in
pop
or
in
pop
push
cmc
in
pop
js
in
pop
push
cli
in
pop
cwtl
cli
in
pop
mov
cli
in
pop
test
in
pop
fdivr
in
pop
mov
sti
in
pop
mov
in
pop
cwtl
sti
in
pop
js
in
pop
mov
in
pop
push
cli
in
pop
js
in
pop
push
cli
in
pop
sbb
in
pop
cmp
in
pop
or
in
pop
sub
in
pop
fdivr
in
pop
cmp
in
pop
sub
in
pop
or
in
pop
sbb
in
pop
js
in
pop
or
in
pop
push
sti
in
pop
js
in
pop
push
sti
in
pop
cwtl
sti
in
pop
mov
sti
in
pop
test
in
pop
fdivr
in
pop
mov
clc
in
pop
mov
in
pop
cwtl
clc
in
pop
js
in
pop
mov
in
pop
push
clc
in
pop
js
in
pop
push
clc
in
pop
sbb
in
pop
cmp
in
pop
or
in
pop
mov
in
gs
ret
pop
pop
sti
cmpsl
adc
adc
cltd
and
mov
lods
test
adc
mov
mov
sub
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
