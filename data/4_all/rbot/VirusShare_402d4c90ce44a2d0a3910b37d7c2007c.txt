cmp
lods
fldt
test
mov
inc
or
push
pop
lods
outsb
sarb
movsl
mov
pop
scas
sbb
mov
mov
push
mov
inc
push
mov
dec
outsb
mov
xlat
int
push
stos
mov
pop
test
cmpsb
iret
shrl
ja
insb
cmp
sub
and
push
sbb
addr16
sbb
jle
xor
pushf
shlb
add
ja
jp
cmpsb
pop
pop
enter
lcall
push
jns
out
jmp
mov
and
data16
sti
adc
sarb
xchg
hlt
jo
ja
pop
ja
xchg
mov
sub
and
adc
sub
jne
mov
fdivrl
repz
xor
xlat
mov
iret
cmp
and
jb
outsl
cmp
scas
in
push
loopne
pop
rcrl
scas
sub
sbbl
sub
push
mov
ds
imul
jle
push
leave
sbb
mov
clc
mov
cmpsb
jecxz
lock
cmp
pusha
insl
fs
in
test
mov
fs
lret
push
sub
adc
ja
cmc
fdivrs
rorl
push
and
and
xchg
cwtl
sbb
mov
repnz
movsb
xor
dec
pop
movsb
mov
pop
pop
enter
pusha
sub
nop
sub
iret
jnp
loope
adc
fs
pop
inc
sbb
lcall
mov
faddl
repnz
pop
xchg
mov
das
in
cmc
call
aad
cmp
push
js
inc
aam
inc
shrb
push
mov
imul
add
pcmpgtw
scas
jp
add
mov
fidivrl
adc
sub
add
repz
pusha
mov
in
push
std
in
scas
mov
sub
fisubs
jmp
push
mov
ja
test
faddl
loopne
ret
lods
aam
nop
sbb
rcrb
push
xchg
adc
loop
and
insb
lods
daa
test
sbb
sbb
mov
mov
sub
add
jle
sub
inc
jg
sub
icebp
andl
xor
out
jbe
sahf
repz
and
shr
mov
and
ja
pop
mov
cmpsl
out
lea
adc
js
cs
sub
dec
lods
sub
rcll
mov
or
and
mov
ljmp
push
xor
mov
outsb
mov
pop
in
xchg
js
mov
xchg
iret
adc
mov
mov
cs
inc
sub
push
jle
leavew
scas
pop
out
lcall
jns
mov
mov
mov
xor
fs
arpl
out
and
ljmp
in
bound
loopne
bnd
jns
add
addb
je
out
out
popa
jl
mov
gs
iret
orb
sub
out
adcl
jae
xchg
jbe
push
lea
dec
push
pusha
mov
scas
ret
sbb
rcr
inc
scas
in
mov
inc
shlb
fcomi
es
mov
sub
in
xchg
cmp
jmp
fldenv
sbb
popa
jo
mov
das
lock
mov
in
adc
and
cmp
shll
pushf
sbb
pop
lahf
dec
pop
ret
mov
cmpsb
sbb
in
xor
cmp
mov
gs
adc
out
jnp
add
pop
lods
adc
mov
jle
sub
cmp
mov
aas
aam
imul
aam
inc
and
fildll
dec
sbbl
pop
imul
pop
push
das
pop
inc
shll
iret
pop
out
pop
lods
add
jns
aad
sbb
js
fidivrs
test
negl
pop
pushf
mov
cmp
sarb
cld
cmpsl
or
outsb
push
mov
ret
rorl
test
fnsave
jb
pop
push
sub
pop
xor
mov
nop
xchg
int3
adc
mov
sti
subb
mov
outsl
fabs
outsl
jno
shlb
stc
inc
enter
xchg
fwait
enter
xchg
sbb
or
in
fldt
setg
fildl
push
or
push
and
xor
fs
mov
cmp
pushf
imul
and
and
fiadds
inc
repnz
test
insl
xchg
mov
xor
add
jmp
nop
movsb
mov
jl
fildll
imul
mov
sahf
lret
push
inc
jae
mov
jl
sub
or
and
adc
jge
lods
push
and
add
adc
sbb
xor
nop
or
jp
arpl
dec
push
scas
mov
sub
dec
inc
imul
adc
shlb
push
stos
and
loop
xchg
rorl
mov
rcrl
es
sbb
aad
mov
mov
sbbb
sahf
xchg
xor
xor
pop
hlt
xor
das
outsb
dec
mov
rcrb
dec
jno
cld
daa
inc
cmp
daa
jle
icebp
shll
xchg
in
push
sub
jp
insl
mov
insl
jne
sub
mov
push
jmp
stos
out
repnz
andb
push
ja
dec
mov
add
xor
jne
data16
push
lret
adc
mov
push
call
test
cwtl
ficomps
push
add
sub
mov
test
cmpsl
push
pop
pop
pop
pusha
push
sub
pop
rol
push
js
test
pop
jle
test
sub
cld
or
dec
inc
shr
mov
xchg
test
or
cld
mov
push
test
pop
jb
test
push
mov
pop
push
jp
and
pop
stc
xor
test
jle
test
loop
jecxz
in
jne
xchg
sbb
gs
dec
repz
test
push
jo
or
pop
test
add
nop
jmp
jmp
call
rol
push
cmp
pop
jp
jno
cld
nop
push
or
pop
lea
jge
inc
dec
shl
mov
inc
inc
inc
inc
push
push
add
pop
nop
loop
jecxz
mov
in
jns
hlt
xchg
out
fwait
push
imul
movl
lahf
addb
nop
add
jns
test
cmp
nop
clc
push
push
push
test
pop
pop
pop
cmp
test
mov
nop
or
and
push
add
pop
jae
jb
add
jbe
add
cld
jnp
sub
shl
dec
inc
lea
mov
loop
jecxz
cs
popf
jge
ret
fnstsw
inc
clc
jbe
push
push
pop
pop
push
mov
pop
cmp
or
mov
shr
or
jne
jmp
push
dec
pop
test
push
ja
push
or
pop
pop
push
add
pop
or
push
mov
push
xor
pop
pop
or
cld
stc
cmc
clc
mov
inc
inc
inc
inc
stc
push
jne
sub
pop
or
sub
cmp
push
mov
pop
push
jae
add
pop
push
push
push
pop
pop
pop
push
cmp
pop
cmp
test
nop
dec
jne
loop
jecxz
imul
inc
loop
mov
stos
pushf
or
js
push
in
in
xor
das
pop
je
and
bnd
dec
call
out
xor
mov
fwait
in
jecxz
sbb
mov
push
xor
sbb
cmp
imul
in
repz
popf
xchg
and
jmp
idivl
lahf
cmp
inc
js
test
push
call
pop
aad
jg
pop
pop
push
dec
xchg
cltd
cmp
mov
fnsave
jle
ja
xlat
sbb
push
xor
pushf
xchg
outsb
iret
test
adc
xor
movsb
jnp
xchg
jns
xchg
aas
out
sub
call
jo
xchg
push
ss
pop
fwait
js
jp
out
cmp
data16
inc
out
scas
jmp
adc
lret
test
clc
ja
adc
lret
ljmp
mov
sbb
push
and
adc
loopne
lds
sahf
pusha
loope
es
jno
xor
out
mov
and
mov
and
xchg
cmp
leave
iret
dec
sbb
aas
mov
cmp
jmp
xor
enter
mov
gs
or
inc
insl
xchg
jge
repnz
mov
mov
enter
cli
mov
aas
andb
rcll
fidivrl
inc
ja
cld
test
xchg
xor
push
mov
or
jge
fcom
or
mov
or
popa
and
cmp
aas
stc
das
outsl
imull
xor
cmp
sub
adc
loopne
mov
repnz
jae
xchg
lods
jns
and
sub
sub
or
mov
int
xor
add
pop
jmp
push
mov
pop
xor
push
sub
cmp
je
jns
sub
nop
cld
adc
xor
xchg
mov
lods
xor
nop
xchg
ret
pop
add
xchg
sub
push
jl
aaa
call
and
mov
lret
jmp
xchg
outsl
int
in
scas
inc
adc
outsl
inc
xchg
sbb
push
aaa
call
xor
stos
inc
movsl
clc
xchg
fsubr
shll
scas
pop
push
sub
scas
je
sub
sub
and
jo
scas
pop
or
roll
scas
addr16
outsl
addr16
outsl
pop
add
andl
inc
fs
ss
pusha
mov
lcall
pop
cltd
shlb
ret
add
addr16
stc
gs
imul
movsl
mov
les
movsl
mov
in
xor
movsl
adc
gs
ret
movsl
xor
movsl
and
lock
aas
inc
shll
mov
movsl
and
fisubs
inc
aad
xor
aam
add
sbb
movsl
loopne
xor
movsl
es
or
gs
jno
gs
pop
or
mov
movsl
or
movsl
mov
int3
mov
les
ljmp
jo
and
test
shll
shll
jg
popa
fists
and
mov
push
outsl
jno
loope
push
mov
not
das
pusha
out
inc
frstor
mov
mull
out
frstor
pop
cmp
push
add
mov
push
loop
rorl
inc
imul
dec
imul
rcrb
mov
jnp
xchg
and
sbb
popa
mov
dec
daa
jle
enter
mov
shl
pop
movsl
mov
mov
sbb
enter
pmulhuw
dec
add
mov
ljmp
movsb
rcl
std
cmp
cmp
outsb
xchg
loopne
cmpsl
push
lds
lods
into
push
in
cmpsb
js
dec
push
mov
xchg
mov
movsb
mov
pop
jmp
sub
lret
leave
inc
incl
stc
push
lahf
jecxz
jno
sub
cmp
stos
shll
int3
nop
data16
dec
mov
push
inc
in
cltd
add
popa
and
loopne
xor
mov
push
push
inc
cmp
test
cmp
push
mov
mulb
add
imul
inc
adc
test
adc
pusha
int3
cmp
push
ljmp
lret
into
jb
adc
adc
pop
loope
push
add
fimuls
jns
jnp
sub
xchg
inc
xchg
add
nop
mov
cld
xchg
xor
int3
fnstcw
bound
pop
test
add
or
aam
xchg
stos
and
jp
inc
scas
fidivrs
aaa
adc
inc
cmpsl
mov
cltd
xor
loope
sub
lds
add
pop
pop
ret
fcompl
adc
movsl
lock
lret
nop
jecxz
dec
xchg
test
hlt
enter
or
mov
or
adc
cmp
pop
xchg
in
fsubrl
jmp
sbb
iret
add
or
inc
inc
cmc
add
in
xor
sahf
sub
mov
stos
add
mov
stos
sarl
test
cmp
sbb
jp
fisubrs
cwtl
sarl
sub
rorb
cld
and
sbb
call
pop
inc
and
fnstsw
cmpsl
hlt
push
cwtl
lock
lcall
fnstenv
jp
push
popl
jge
scas
pop
ror
js
jmp
pop
sarb
sar
sbbb
dec
out
fdivs
call
jb
and
lret
mov
stc
push
push
scas
lock
jo
inc
shrb
pop
mov
lock
jb
jne
xor
in
pop
cli
orb
stos
sub
xchg
dec
xchg
add
jo
movsl
mov
add
xchg
lea
xchg
mov
fsub
push
jecxz
int3
test
xor
dec
sbb
shll
inc
inc
inc
jmp
outsl
lds
jmp
into
mov
push
stc
mov
push
pop
sub
xlat
fdivrl
std
push
adc
jp
aam
jbe
lock
cli
outsl
lahf
mov
mov
sub
mov
out
inc
pushf
inc
mov
sbb
dec
mov
push
fstps
add
cld
dec
andl
and
jae
sub
cmc
inc
je
cmc
mov
and
enter
or
mov
mov
mov
into
out
sub
stos
cmpsb
cmpsl
imul
clc
dec
inc
gs
stc
test
mov
lods
xchg
out
cli
aad
sbb
inc
sbb
adc
and
sbb
add
push
mov
jle
jmp
aad
cwtl
pop
xchg
loope
adc
imul
xchg
aam
lea
push
cmp
test
add
fsubrl
pop
add
int
push
inc
sub
outsl
push
out
mov
add
inc
fbld
sub
leave
mov
and
and
and
lahf
outsl
movsb
mov
loop
js
ret
xchg
enter
adc
push
mov
scas
rol
mov
fdivs
and
aaa
sub
mov
adc
add
inc
call
in
icebp
push
in
mov
jo
push
mov
out
dec
fmuls
ds
lods
nop
xor
int
jmp
ficompl
sbb
jb
repnz
push
lods
shrl
iret
dec
xor
cmp
pop
pop
jb
std
fucomp
stc
imul
fidivrl
push
sbb
fcmovbe
pop
lds
mov
xchg
je
mov
mov
ss
loop
xlat
lods
imul
or
mov
adc
scas
jg
movsl
leave
and
sub
dec
sub
push
pop
jne
xor
jbe
jne
jbe
fcompl
lea
pop
jae
add
push
insl
jno
xchg
adc
sbb
shll
mov
lods
sub
xlat
mov
aas
aam
jnp
movb
ds
cmp
mov
push
mov
negl
fwait
or
insl
mov
mov
enter
stos
nop
cmp
aad
pop
mov
stos
aam
dec
and
les
mov
add
pop
adc
stos
fsubrs
jmp
dec
popf
jns
jge
sub
sub
mov
push
test
dec
jl
inc
jp
xchg
cmpsl
sbb
xchg
into
adc
rorl
jmp
int
push
add
clc
adc
les
mov
iret
rclb
mov
sbb
add
scas
in
push
jne
ljmp
mov
rcr
cltd
or
dec
mov
sub
push
and
aam
or
mov
test
mov
push
jge
push
inc
xor
scas
imul
sahf
mov
xchg
push
mov
test
jne
jbe
or
cmp
lahf
mov
fiadds
sub
out
stc
add
and
in
fwait
or
mov
gs
sub
lds
popa
dec
mov
lds
stos
fsts
aad
loope
or
leave
out
dec
jbe
mov
xor
and
cmp
add
cmc
adc
mov
pusha
dec
stc
push
cmp
cli
pop
inc
pushf
jns
fmull
ret
subl
pop
sti
push
ja
jne
cld
mov
repz
mov
or
and
or
mov
mov
roll
popa
int3
test
jns
lretw
fprem1
cmp
push
cs
lds
sbb
sub
rcrb
loopne
mov
into
test
cmc
in
test
mov
insl
cmpsb
jl
pop
scas
sub
loopne
xor
sti
sbb
mov
mov
jl
movb
in
cs
outsl
ficoml
xchg
das
mov
xchg
mov
js
mov
rol
mov
add
lock
enter
enter
push
out
ffree
mov
lea
xchg
mov
jle
call
inc
sub
bswap
add
enter
push
ljmp
das
scas
jecxz
movsl
jnp
pushf
push
ds
xor
adc
movsb
cmp
es
fidivrs
xchg
test
les
add
je
mov
ret
mov
out
mov
adc
and
cli
movsl
ss
je
adc
scas
adc
addb
sub
icebp
sbb
call
sarb
dec
popf
std
lcall
sub
imul
add
addr16
sbb
adc
loope
outsl
into
mov
ljmp
and
mov
xor
jne
cs
stos
xor
notb
sbb
les
mov
orb
push
push
jae
cld
or
jge
sub
fadds
inc
inc
popf
mov
aad
mov
adc
ficoml
stos
dec
arpl
push
daa
cmpsl
mov
std
ljmp
lea
test
push
dec
mov
pop
add
jns
add
sbb
outsb
mov
push
orl
jl
xchg
push
push
insl
popa
movsb
call
add
cltd
push
push
jle
adc
popa
stc
xchg
and
call
push
cmp
sub
fstl
and
mov
jl
dec
lods
dec
jo
clc
adc
mov
out
popa
xchg
test
out
cwtl
mov
or
insb
xorl
xor
lock
fisubrl
mov
fcoms
add
mov
dec
mov
inc
xchg
in
inc
cli
push
and
jmp
xchg
xlat
testb
dec
jns
mov
fs
jle
mov
pop
bound
xchg
add
cmp
aam
dec
mov
pusha
mov
sbb
dec
mov
xchg
or
stc
sbb
mov
pop
xor
fcmovb
movsb
jo
push
addr16
sbb
mov
sbb
add
insl
push
fistl
dec
mov
ss
cltd
and
mov
leave
xchg
fwait
inc
or
sub
mov
loopne
or
pop
into
pop
adc
imul
pop
mov
mov
cmpsl
mov
pusha
fnsave
push
call
roll
jmp
mov
cmp
fsubl
hlt
sub
mov
pusha
dec
inc
std
sub
adc
cmp
shrb
scas
shlb
push
leave
fistpll
imul
rcrb
xorb
cmp
rcr
test
mov
xlat
lcall
fisttps
dec
andb
push
xor
and
fidivrs
adc
dec
lret
in
inc
daa
stos
loope
bound
mov
xor
out
les
int
mov
ss
outsb
push
mov
jno
stc
add
ds
xor
adc
jge
movsl
test
push
mov
aas
lret
mov
pop
out
and
daa
push
inc
xchg
int
mov
mov
in
lahf
incl
jnp
add
aas
lret
xlat
mov
dec
dec
aam
mov
loopne
cmp
fistps
push
sbb
adc
cmp
inc
sub
call
repz
pop
pop
scas
jle
das
push
push
mov
jo
add
scas
fs
and
push
add
add
ja
movsb
pushl
jle
jg
or
push
xor
mov
addr16
scas
jle
js
pop
jl
sahf
push
xor
push
or
jmp
rcll
pop
addb
mov
mov
loope
jg
and
push
fdecstp
leave
addb
mov
cmpb
push
push
mov
lret
lret
xor
cwtl
rcrb
xor
cli
pop
gs
rclb
xor
aam
or
arpl
dec
push
pop
dec
dec
addl
out
iret
mov
outsb
cli
insl
loop
cli
repnz
adc
rcrb
dec
push
in
pop
xchg
sbb
cwtl
pop
in
push
outsb
mov
int3
jne
dec
or
pusha
sbb
cmp
inc
inc
fmull
test
add
add
stos
add
sub
jecxz
cmp
jmp
pop
and
pop
mov
pop
cmp
inc
test
xorl
mov
in
push
bnd
outsl
push
cld
in
push
push
pop
int3
in
sahf
lods
hlt
ficoml
dec
mov
testl
repz
stos
int
ret
jb
cmp
orb
push
and
es
cmp
ret
add
and
imul
ja
push
call
xor
lret
hlt
into
fs
push
leave
inc
fdivrl
mov
outsb
leave
cltd
jmp
pushf
aam
jecxz
ss
js
xor
ljmp
or
mov
addb
and
mov
lret
flds
int
xor
or
aaa
and
in
mov
shll
inc
cld
dec
les
fpatan
cwtl
insl
pop
movsb
sub
repnz
mov
scas
lahf
adc
shrb
mov
ret
out
out
inc
xchg
test
jle
xchg
mov
or
fwait
dec
into
jae
call
cmpsl
add
mov
and
lds
lea
ret
lds
adc
or
repnz
out
es
lods
xor
hlt
mov
aam
mov
push
mov
mov
mov
outsl
out
lds
push
pop
add
xlat
fsubp
inc
aaa
out
jecxz
and
inc
mov
dec
lods
cmp
lods
sub
sbb
push
jne
mov
dec
dec
jecxz
bound
lret
notb
loop
push
dec
test
insb
andl
or
adc
cwtl
or
cwtl
cmp
fmul
repz
jmp
push
lcall
add
xchg
cmp
fadds
push
aaa
movsb
cmc
adc
mov
pop
mov
call
iret
testl
mov
addr16
roll
cwtl
mov
pop
je
lock
bound
dec
roll
xchg
outsl
ljmp
jle
stos
lcall
mov
dec
inc
fdivp
cmp
lea
clc
sbb
mov
scas
cmp
fs
inc
and
iret
addr16
ljmp
cmp
loopne
adc
and
scas
jmp
ja
mov
in
sbb
dec
fsubl
dec
jns
xor
jbe
sbb
inc
fcmove
cmpsb
les
pop
jge
outsb
adc
xor
xor
stos
add
jo
out
and
loope
cmpsl
add
or
lea
js
pop
sti
scas
dec
ss
xchg
movsl
cmc
pop
rcrb
popa
or
rcl
jge
hlt
xchg
nop
pop
jnp
js
cmp
mov
jl
or
and
xchg
ss
ficoml
push
lea
sbb
test
dec
dec
test
mov
xchg
push
fisttpl
cmpsb
stos
push
lock
mov
sbb
lods
adc
sahf
leave
xor
push
and
adc
ja
sub
shl
sub
dec
insb
lods
fmulp
inc
pop
into
int3
ds
insl
jne
mov
xor
daa
xchg
inc
pop
rcr
pop
and
iret
in
iret
int
std
bound
xchg
stos
cs
test
mov
mov
sbb
imul
ljmp
das
xchg
lret
out
add
sbb
arpl
adc
xor
lahf
mov
mov
test
nop
sahf
adc
lea
repz
ja
push
lods
ljmp
test
add
cmpsl
shrb
and
test
inc
movsb
inc
inc
outsb
add
in
mov
jecxz
negb
imul
dec
add
inc
jns
int3
jns
sti
adc
popa
sub
jne
fisttpl
jbe
into
es
xchg
sbb
mov
or
dec
xchg
cmc
add
jp
ljmp
inc
cmpsl
sub
add
xchg
mov
jb
mov
int
fdivrl
sub
int
fldl
popa
sub
out
scas
rcll
or
and
dec
or
mov
mov
nop
ljmp
aaa
inc
sub
testl
ljmp
aad
and
gs
mov
dec
mov
mov
andl
sbb
jge
loopne
loope
jl
mov
jecxz
adc
mov
sbb
pop
sub
add
ret
ja
outsb
scas
pop
movsb
int3
ret
adc
push
pop
mov
pop
mov
or
aaa
mov
mov
sti
adc
and
mov
dec
lret
push
imul
aaa
clc
test
arpl
xor
sbb
mov
xchg
sub
xor
xor
sub
mov
jae
cwtl
push
xchg
jle
enter
stos
cmp
and
add
rcr
dec
or
pop
xor
dec
jno
jmp
mov
xor
push
push
testl
jne
push
cld
popa
jmp
es
jo
cmpsl
mov
push
or
or
jecxz
jg
or
adc
test
stos
ret
adc
and
pop
xchg
jecxz
insb
mov
xor
mov
ds
push
dec
mov
mov
push
or
inc
add
imul
fmull
sbb
stc
pushf
cmpsb
cmc
jle
cmp
and
out
popa
test
jp
icebp
inc
and
xchg
les
add
xchg
xor
lret
jmp
lods
je
sub
sub
popf
mov
xor
dec
rep
push
sub
xorb
adc
or
and
add
push
or
jne
fucomp
or
negb
push
mov
or
pop
cmp
daa
and
xchg
pop
jge
sub
xchg
fwait
pushf
cmp
mov
imul
pop
sbb
out
push
pop
andb
mov
cmp
sub
enter
cmpsl
xchg
into
je
push
mov
push
dec
cmpsl
in
jns
sbb
fwait
mov
rclb
fsubl
jns
fisubrl
inc
pushf
push
dec
sbb
in
rorl
pop
xlat
mov
mov
mov
push
add
xchg
pop
xchg
mov
cmp
pushf
mov
or
sbb
xchg
shrl
aad
adc
sbb
jl
xor
int
push
xor
adcb
mov
pop
jno
inc
mov
mov
iret
fwait
es
sbb
or
cmpsb
or
orb
xchg
ss
cmp
inc
ret
in
out
je
mov
loope
repz
je
fildl
mov
adc
mov
jmp
sbb
jg
xchg
das
xchg
cmc
jecxz
add
mov
fsubp
outsl
cld
jg
xchg
icebp
adcl
inc
mov
push
add
and
insl
or
push
sbb
cld
mov
adc
push
addr16
sub
test
mov
lea
insb
push
push
daa
fs
adc
xlat
xorb
cmpsl
jg
xchg
std
mov
sub
add
sub
mov
cmp
pop
stos
cmpsb
popa
add
bound
mov
int
mov
sbb
cmp
cli
add
pop
out
stos
push
push
lock
adc
mov
adc
and
inc
xchg
in
es
iret
jg
sbb
test
decb
mov
lcall
mov
sub
test
push
lods
lods
lods
js
add
incb
push
ss
andb
mov
daa
pop
push
test
loop
sbb
scas
cmpsb
iret
pop
mov
sub
ret
dec
clc
xor
push
mov
and
xor
sub
mul
adc
pop
movsb
push
cwtl
out
inc
in
call
fldl
adc
push
stos
push
je
lret
cmc
cltd
fst
mov
and
push
lods
mov
sahf
lcall
lock
push
fmuls
xchg
mov
bound
dec
lret
push
sarb
sub
popa
sti
pop
xor
ss
dec
movb
cwtl
push
jge
mov
mov
xlat
cld
std
mov
mov
push
cltd
sub
fs
out
adc
out
pop
push
les
mov
call
mov
xchg
and
add
arpl
sub
pushf
xor
lahf
xor
push
sub
mov
mov
pop
fs
dec
cmpsb
xchg
pop
push
movsl
adc
push
clc
dec
xchg
sbb
jp
call
cmp
sub
das
mul
pop
int
pop
aas
ja
mov
les
cwtl
faddl
push
in
pop
js
fisubrs
shll
out
andl
aaa
xor
out
dec
mov
loope
flds
jns
cmpsb
xor
dec
mov
aad
mov
pop
push
mov
add
shrl
loop
push
data16
inc
cmp
pop
cmp
sbb
bnd
jle
iret
and
adc
mov
xchg
rcrl
add
jmp
jl
adc
aas
imul
xchg
jbe
insl
addr16
sbb
pop
fadds
sbb
mov
mov
lock
lret
daa
mov
arpl
bound
sbb
add
mov
pop
jecxz
mov
cmp
xor
and
mov
inc
imul
pushf
adc
sbb
and
lret
popa
add
cmp
xor
cmp
pop
mov
stos
ret
mov
dec
ss
adc
adc
mov
mov
jmp
jnp
imul
lock
inc
xchg
jo
test
repz
sub
lret
and
xchg
dec
sahf
testb
sbb
mov
gs
aaa
xchg
cld
sbb
out
ret
pop
jmp
fs
aaa
lahf
in
or
xchg
cmpsb
inc
lcall
lret
stos
lock
xchg
ja
or
or
fdivl
sbb
out
rcrl
mov
popa
lcall
mov
aaa
shll
jns
leave
jno
dec
or
pop
aam
xor
jle
push
xor
xchg
pusha
ret
mov
popa
les
test
push
sub
enter
inc
inc
test
js,pn
or
sub
add
mov
in
push
mov
mov
xchg
sub
jl
push
push
add
mov
xor
and
mov
mov
lret
icebp
xlat
pop
adc
aas
dec
or
aaa
cmp
out
pop
jmp
lcall
mov
sti
arpl
sbb
or
ja
mov
pop
and
mov
loopne
pop
mov
inc
aam
mov
and
fstpt
out
jle
fisubl
mov
sub
jmp
jmp
dec
jnp
jne
scas
xorb
jg
sub
push
push
mov
pop
inc
mov
les
ljmp
add
test
and
push
insb
es
stos
xchg
cld
pop
add
insl
dec
lods
sub
dec
pop
lahf
stc
iret
fsubl
movsl
dec
daa
pop
xchg
aaa
mov
sbb
cmp
inc
jmp
sub
inc
popf
je
mov
cld
pop
cs
in
sbb
mov
jg
cpuid
imul
bound
push
pop
in
cli
filds
sbb
jns
mov
xchg
lods
adc
jp
addr16
sub
adc
dec
ficoml
jno
test
jo
jmp
inc
xchg
mov
push
ss
mov
bound
lret
iret
jae
lods
jecxz
add
fsubr
icebp
scas
jno
int
adc
sub
xor
notl
lret
push
adc
sub
jecxz
out
pusha
cmpsl
dec
mov
in
inc
push
xchg
inc
enter
xor
push
in
or
aas
and
imul
ret
scas
cltd
mov
loop
mov
jle
push
push
jge
fnstcw
pop
js
scas
fsubs
push
loop
gs
in
mov
iret
adc
pop
mov
std
ljmp
imul
mov
add
mov
int
mov
push
sti
hlt
add
cmp
ss
notl
std
aas
movsb
repnz
mov
lods
iret
icebp
push
sub
push
or
popf
jnp
cmp
insb
push
inc
in
xchg
xor
repz
cmp
or
cmp
fbstp
or
add
sub
mov
pop
fwait
lahf
cmp
call
loop
dec
inc
fld
ret
cmp
xchg
jg
sbb
dec
mov
test
dec
jp
cltd
stos
scas
sbbb
inc
std
mov
pop
push
aad
add
nop/reserved
aam
adcb
mov
lea
mov
icebp
cmp
cli
cli
fiaddl
xor
repz
dec
cmpsl
pop
lds
in
sarl
outsb
aam
xchg
xor
das
adc
adc
cmpl
popa
mov
push
xor
test
mov
fs
pop
addr16
loopne
xlat
mov
sub
sub
popa
or
add
lahf
or
movsb
into
sti
xor
imull
push
scas
jmp
in
pop
dec
inc
xchg
mov
pop
xchg
cmp
ficomps
test
xchg
in
jo
mov
dec
sbb
sbbb
addb
inc
ret
leave
add
pop
push
test
adc
pop
push
dec
daa
cmp
in
stos
insb
je
mov
out
cmc
sahf
cmp
lcall
dec
adc
xor
mov
pop
mov
inc
dec
shrb
aam
sbb
dec
rolb
shld
icebp
popa
mov
sbb
xor
or
insb
sbb
roll
aaa
rorl
into
ja
pusha
jp
stc
or
sti
jge
jne
int
xor
add
push
mov
arpl
ss
push
push
pop
dec
cmp
adc
and
orb
cli
es
cmp
ds
xchg
loope
icebp
mov
pop
jae
fiadds
inc
mov
adc
in
mov
push
rcll
pop
lret
mov
and
sbb
mov
mov
xchg
das
pop
sub
pop
push
xlat
ds
outsl
inc
scas
pop
mov
sbb
movsb
jae
fucom
sti
and
push
mov
stc
inc
xor
or
sbb
pop
sub
ja
jp
sbb
pop
and
lahf
dec
add
call
inc
iret
jge
push
or
movsl
std
mull
cmpsl
test
pop
add
sbb
popf
lea
jge
jmp
pop
xchg
and
lcall
out
fistpll
lret
push
aas
mov
add
aam
cmpsl
pop
cmpsl
inc
jg
push
jg
stos
outsl
inc
int3
pop
call
xor
lock
cmp
out
pop
imull
rorb
rcll
jg
stos
popf
pop
push
rorb
bound
jns
lret
mov
out
enter
or
jl
dec
or
xor
add
insl
sbb
icebp
cmc
pusha
pop
popa
add
lods
adc
jmp
adc
mov
mov
pop
xchg
sbb
cmp
mov
sarb
jno
inc
lods
or
jmp
in
fs
sti
push
push
repz
cltd
cmc
repnz
mov
pop
subl
xchg
sub
mov
add
adc
data16
aas
stos
mov
movb
dec
cmpsb
jle
imul
xlat
aad
test
iret
cs
nop
add
sub
mov
outsb
cmpsl
mov
mov
insb
aam
xchg
or
ds
leave
in
ss
enter
jbe
mov
sub
addr16
adc
mov
ficoms
inc
push
ja
xor
xor
dec
or
int3
stos
out
sbb
fiaddl
insl
jl
mov
popf
mov
mov
in
mov
pop
xor
inc
sub
add
into
push
out
mov
pop
dec
cmp
inc
and
sbb
lret
xchg
arpl
ljmp
in
inc
add
sti
bsr
fisubl
dec
mov
repnz
mov
xchg
adc
stos
dec
lock
mov
repnz
scas
nop
stos
daa
movsl
jns
js
ror
loop
push
roll
push
pop
lds
or
inc
push
cmp
int3
je
incb
xchg
sahf
pop
sahf
sub
scas
adc
leave
sbb
jno
push
and
xchg
jp
ficompl
fs
fwait
orb
in
sysexit
les
pop
fbstp
xchg
fbstp
jge
add
cmp
or
push
pusha
insl
mov
xchg
pop
or
jmp
shrl
rcll
jle
std
test
es
cmp
push
inc
ja
or
inc
pop
pop
lret
xchg
je
pop
mov
ficoml
sub
imul
and
or
jecxz
or
in
ficoms
xor
repnz
dec
inc
mov
insb
sbb
data16
jbe
leave
rol
jl
sub
jl
popf
mov
xor
shrb
fiaddl
sub
scas
jmp
stos
leave
sahf
mov
imul
and
adcb
pop
repz
cmp
jb
outsb
jbe
mov
fistl
lock
cwtl
mov
cs
mov
adc
lret
aam
xchg
jne
add
and
stos
adc
xchg
or
movsb
imulb
in
addr16
sub
cmc
nop
cmp
xchg
loope
out
mov
jo
inc
es
sbb
sub
cmp
push
pop
mov
cmpsl
xor
test
jecxz,pn
ds
scas
dec
xor
fsubrl
hlt
insl
arpl
es
outsb
jnp
jne
arpl
fisubrl
and
in
push
add
dec
mov
and
sarb
jno
icebp
mov
mov
iret
das
adcb
jge
push
insb
pop
aam
addr16
rcll
adcl
xchg
xor
movsl
imul
movsb
cmpsl
sbb
cmp
jp
jo
popf
outsb
xchg
jle
leave
sub
xor
pop
daa
sub
jge
jbe
jle
fldt
jl
mov
and
pop
scas
push
stos
dec
and
or
stc
cmp
mov
scas
mov
push
cmp
dec
lea
and
and
fwait
rcrb
popa
lds
jmp
cmp
outsl
scas
mov
sbb
cmp
jo
in
scas
mov
cmc
enter
inc
pop
and
adc
push
dec
pop
mov
sti
xchg
jo
insl
iret
jb
jnp
push
pop
mov
and
pop
push
ja
and
inc
std
sbb
lods
out
sbb
popa
mov
pushf
push
icebp
shl
fnstenv
ret
inc
int3
incb
daa
jmp
out
xorb
add
fbstp
fs
or
hlt
cmp
lret
js
inc
push
adc
movsb
add
add
pop
mov
inc
daa
and
push
push
pop
and
adc
mov
jmp
jp
js
pop
push
adc
jmp
fisttps
fwait
das
lods
hlt
fxch
outsb
sbb
or
push
or
das
mov
mov
sub
movsb
subl
shl
andl
insb
int
dec
out
aas
pusha
xchg
je
dec
push
fs
cmc
jo
or
imul
popf
jbe
test
fwait
sbb
sbb
push
inc
push
mov
inc
sbb
loope
sub
xchg
lds
jge
imul
xor
xchg
faddl
in
outsl
sbb
xor
cmc
and
mov
std
mov
fdivrl
test
xchg
xchg
and
bound
enter
stc
jp
or
sahf
sub
mov
inc
mov
mov
adc
popf
sbb
leave
shl
or
push
popf
int
jb
dec
mov
data16
pop
jge
ja
ret
add
mov
ret
mov
inc
push
sbb
dec
mov
fdivrl
mov
sbb
popf
aaa
es
jne
in
leave
jno
pop
and
xchg
and
aad
shrl
out
adc
jnp
stos
sub
xor
les
or
cs
pusha
cmp
mov
push
mov
dec
cltd
cmp
das
lds
bnd
cmp
or
jo
cmc
fsubp
push
sti
bound
mov
inc
jp
arpl
imul
outsb
ja
or
daa
mov
xor
fdivr
cmp
ljmp
aad
mov
add
sub
dec
aam
test
in
pusha
dec
pusha
mov
xchg
mov
push
inc
hlt
and
pop
fmul
jp
in
ljmp
dec
xchg
cmovno
sub
xchg
mov
jmp
sub
jns
stos
pushl
cmpsl
xchg
clc
sub
addl
and
or
sbbb
adc
and
in
clc
mov
xor
popa
movsb
inc
jl
push
pusha
fcompl
lret
cmp
ret
add
xchg
xor
lcall
push
faddl
stos
or
test
insl
es
mov
and
adc
mov
or
out
cmc
outsb
into
cmp
push
jmp
ret
loop
je
mov
loop
cmp
mov
aaa
leave
push
jp
fidivs
pop
push
add
adc
clc
cltd
jmp
stos
clc
nop
std
cmp
jo
int
jmp
mov
jno
in
roll
into
or
ljmp
jmp
mov
mov
pop
cmp
or
int3
leave
std
mov
aad
inc
mov
icebp
mov
sub
aam
outsb
pusha
push
testb
xor
dec
push
cmp
inc
jns
xchg
je
call
scas
sbb
xacquire
mov
jg
mov
mov
into
xchg
lahf
mov
cwtl
or
jp
inc
loop
mov
mov
sub
aad
adc
repz
adc
sbb
jl
mov
bnd
or
fbld
shl
pop
and
sahf
mov
cwtl
cmpl
iret
int3
mov
fdivs
xlat
xor
jle
sbb
nop
insb
and
or
dec
test
sahf
inc
push
inc
cltd
lcall
mov
andb
and
inc
pop
push
ror
mov
jnp
loope
jmp
inc
test
jecxz
push
or
jp
or
xchg
scas
call
movsl
cmp
stc
ljmp
cmp
sbb
sbb
mov
cmc
int3
nop
cvtdq2ps
lock
xchg
jns
fisttpl
in
mov
mov
inc
xchg
insl
cltd
xor
xchg
daa
inc
scas
lods
repnz
or
cmp
xchg
jnp
cmp
in
jo
sti
inc
lahf
jae
enter
sbb
lret
cmp
jge
dec
and
mov
add
into
pop
inc
adc
test
sbb
mov
pop
rolb
lcall
test
mov
lods
test
stos
test
outsb
mov
fwait
push
adc
stos
mov
xchg
mov
mov
rorl
pushf
sbb
pop
dec
ljmp
xor
cmp
inc
jecxz
dec
cld
stos
push
les
jmp
adc
dec
xor
imul
inc
push
stc
call
negb
mov
jae
push
mov
fucom
imul
scas
push
xchg
aas
mov
cmpsb
popf
pusha
pusha
in
jp
inc
pop
sbb
xchg
movsl
dec
andb
insl
pusha
or
xchg
sub
dec
add
jnp
loopne
mov
mov
lds
mov
enter
jge
adc
sti
ljmp
imul
xor
push
pop
jg
add
and
jnp
std
jecxz
sub
lahf
pop
frndint
or
int
clc
add
sbbl
shll
lret
add
fstps
mov
test
cltd
push
push
ficoms
rcll
dec
xchg
bound
push
jmp
dec
push
ljmp
mov
in
insl
dec
push
xchg
dec
arpl
cmpb
iret
xor
rolb
inc
gs
sbb
mov
sub
div
out
mov
stc
push
nop
mov
pop
hlt
adc
or
and
jl
test
add
andl
repz
mov
sub
xchg
fldl
mov
mov
je
icebp
ja
push
ret
dec
push
sub
ret
imul
mov
in
pop
out
enter
ljmp
push
xor
xchg
mov
lds
negl
mov
add
xchg
mov
xchg
popf
ret
dec
pop
push
pop
jbe
ret
test
mov
adc
scas
shll
xor
sbb
ret
mov
xchg
add
test
leave
mov
movsl
cmp
repnz
out
dec
leave
push
call
add
stos
icebp
mov
fiadds
addr16
sbb
jmp
jle
cmp
movsb
mov
xchg
mov
stos
in
xchg
in
mov
sbb
jle
mov
jne
mov
cmp
add
mov
jb
dec
sub
rolb
mov
aas
cmp
push
clc
push
jae
pop
push
add
pop
xchg
sub
push
stos
lods
xor
dec
dec
outsl
pop
or
push
mov
sub
bound
add
or
das
mov
adc
ja
repz
xchg
test
sbb
lahf
xchg
jne
or
call
pop
popf
in
push
jnp
sbb
mov
mov
jmp
gs
aam
inc
jns
push
xchg
push
or
xchg
ds
repnz
stos
cli
pop
sbb
jbe
mov
sub
push
xor
mov
cmp
pusha
mov
mov
test
ss
jns
jbe
nop
sub
sbb
xchg
scas
pushl
push
push
sti
push
es
xchg
lcall
inc
popf
mov
cli
cs
mov
cmp
dec
push
scas
or
cmp
je
ret
pushf
dec
mov
xor
inc
xor
std
ret
int
repnz
push
pop
arpl
jbe
sahf
cmpb
pop
add
add
sbb
pop
xchg
pop
jne
adc
sub
push
scas
add
in
push
scas
push
pushf
pop
mov
jo
or
adc
shr
mov
lods
xor
fldl
xchg
xor
rclb
dec
pop
xor
aad
into
push
adc
out
pushf
jge
mov
inc
adc
addr16
hlt
stos
pop
add
mov
and
js
dec
jo
sbb
fmul
pop
sbbl
popa
pop
lret
cs
test
jae
or
sbb
rorl
test
ds
imul
push
xchg
mov
lods
jecxz
pusha
pushf
inc
fsts
adc
jbe
add
jmp
inc
das
mov
lds
divb
jae
jge
xchg
and
hlt
pushf
je
jnp
scas
lea
xor
mov
adc
inc
lods
xchg
in
popf
add
pop
sub
aas
pop
cmp
jns
cs
aas
adc
adcb
out
inc
pop
es
stc
aad
test
test
dec
loop
leave
lods
cmp
cmpsl
and
mov
mov
xchg
les
popa
movsb
mov
jns
out
out
add
mov
jl
push
jp
sbb
aaa
cmp
lods
mov
in
pop
lods
loopne
test
outsb
ja
adc
ret
pop
sahf
xorb
jle
sub
stos
mov
lret
sbb
clc
clc
out
jp
sub
test
decb
neg
xor
mov
mov
out
sarb
dec
inc
es
cmp
imul
data16
pushf
adc
cli
cli
sub
xchg
mov
clc
cmp
roll
push
lods
mov
ljmp
cmpsb
daa
and
adc
enter
repnz
test
mov
xor
jle
push
push
sbb
fsts
decl
shlb
fbstp
push
jle
pushf
pop
mov
popf
iret
test
and
movsl
into
and
lret
out
les
ror
cmp
pop
push
insb
push
subl
out
cmp
imul
jnp,pt
in
call
add
mov
in
dec
mov
stos
mov
hlt
andb
xor
cmp
cmp
repnz
loope
jecxz
fcoml
ds
mov
jae
orl
imul
xchg
push
dec
mov
lock
mov
mov
into
jns
push
enter
cwtl
test
out
mov
adc
sub
push
inc
push
mov
and
lahf
fcomip
add
dec
cmp
inc
push
and
push
js
cmp
jge
call
outsl
dec
movsl
jo
pop
rclb
push
xchg
xchg
js,pt
push
scas
ficompl
cmp
sarb
adc
or
fistpll
sub
sbb
or
cwtl
fidivl
ss
ljmp
jno
aam
sarl
dec
daa
or
outsl
and
ja
movsl
je
sbb
pop
js
xchg
mov
mov
lcall
pop
push
jns
lods
mov
imulb
push
imull
rcrl
add
add
in
fmull
jecxz
dec
sti
loop
pop
xor
mov
fadds
mov
int
pop
insl
cmp
jnp
mov
mov
push
ret
loopne
xor
stos
bound
adc
add
push
test
push
push
sbb
mov
aam
aam
cmp
icebp
ret
xor
enter
aam
sbbb
sbb
xchg
mov
iret
jecxz
lea
push
repnz
mov
imul
and
shrb
cmc
movsb
adc
and
jg
dec
jb
adc
push
xor
mov
loopne
call
cltd
popl
cltd
push
or
pop
shr
xor
pop
push
xor
inc
pop
stos
or
imul
pop
sbbb
cmc
stos
add
and
repz
sbb
pop
andl
fimull
cmp
inc
imul
dec
sub
lods
jne
outsb
push
addl
xchg
mov
rcl
pop
jp
test
sahf
sbbb
aad
jp
outsl
xchg
adc
mov
push
loopne
push
push
mov
loop
sbb
stos
in
dec
sbb
out
mov
enter
mov
outsb
sbb
jecxz
and
insl
ljmp
mov
test
inc
pushf
mov
mov
and
shll
mov
jo
nop
cld
mov
sti
or
xor
inc
mov
cmp
and
repnz
sub
aad
and
inc
fwait
mov
inc
addl
hlt
fdivrl
or
xlat
fbstp
and
add
inc
push
dec
fldt
jg
mov
sub
jbe
cmp
xchg
in
inc
cwtl
jl
push
scas
xchg
pop
mov
in
cmp
pop
inc
icebp
cli
mov
jo
cs
xchg
or
jo
add
in
insb
and
shrl
adc
or
stc
addr16
jns
or
adc
xchg
sahf
fidivl
pop
stos
jmp
addb
aaa
pop
cmp
inc
adc
jbe
jge
repnz
mov
xchg
ret
shlb
xlat
fimull
addb
push
arpl
or
dec
sahf
cmpsl
rcrl
push
icebp
jb
mov
xor
cmp
and
cld
test
dec
mull
add
mov
jb
lea
test
aam
insb
std
inc
xor
jle
jmp
cmp
nop
xchg
sbb
jo
mov
pop
xlat
movl
call
xchg
jmp
mov
xlat
mov
sti
pop
sub
xchg
push
mov
sahf
mov
mov
stc
insb
repnz
ret
push
addr16
imul
xchg
nop
xor
arpl
xchg
int
dec
xor
inc
push
call
xlat
xchg
mov
std
mov
cli
inc
add
mov
pushf
dec
inc
out
or
gs
jbe
jg
negl
lahf
sahf
xor
mov
sub
aas
scas
xchg
setbe
xor
or
shrl
outsb
xchg
cmp
or
xchg
notb
push
dec
dec
jae
nop
cli
dec
lods
jne
fsubrl
notb
xchg
and
add
outsb
ret
ret
ljmp
lods
push
jae
mov
sub
lahf
push
sti
jnp
test
sub
fstpt
xchg
int3
push
addb
and
fildll
mov
mov
and
xor
in
xchg
clc
daa
insl
scas
aaa
dec
push
clc
rcr
lods
and
sbb
shr
fbld
out
fcmovnb
sub
or
sbb
mov
inc
add
data16
push
scas
ljmp
xchg
sub
pop
jmp
hlt
out
sub
jae
hlt
adc
mov
call
je
addr16
es
imul
push
mov
sbb
add
cli
lahf
jae
aas
fisubrl
xchg
push
mov
cmp
pop
jno
mov
mov
outsl
add
xlat
repz
mov
fldenv
test
mov
add
repnz
rclb
xor
sub
pop
or
mov
or
into
fcmovbe
imul
and
and
insl
pusha
inc
mov
in
mov
sbb
push
sub
clc
dec
icebp
xor
pop
ss
jg
mov
add
movb
xor
add
jg
jb
fwait
mov
mov
mov
xchg
std
jge
pop
lock
cmp
push
stos
adc
jbe
outsb
shr
jg
mov
xchg
pop
mov
comiss
jmp
adc
inc
mov
lods
mov
fldl
ja
adc
scas
cmp
ret
into
xor
shrl
push
in
xor
xchg
ss
data16
mov
sub
mov
sub
pop
sbb
nop
push
cmp
xchg
lret
ficoml
int
lret
adc
scas
pop
rolb
adc
clc
lods
add
leave
repnz
test
cmp
in
scas
xor
xchg
cmp
int3
data16
pop
ret
imul
xchg
call
psrlq
adc
adc
push
andl
mov
xchg
sbb
jecxz
jmp
fld
push
jmp
xchg
jle
jno
out
jno
xchg
das
ret
punpckhbw
dec
inc
jl
sub
and
push
mov
out
fdiv
or
jl
insb
jns
mov
mov
add
jb
enter
stc
or
jle
out
sahf
clc
out
lds
push
jecxz
xor
int
add
xchg
movsl
shrl
cs
das
aas
add
int3
pop
push
mov
mov
adc
mov
les
add
xor
ljmp
cmpsl
xor
sub
add
mov
sahf
cmpsb
push
cmp
aaa
mov
je
lock
in
pushf
fldenv
data16
xor
adc
add
mov
aam
popa
mov
sarb
cld
lret
mov
cli
and
jg
adc
clc
pop
sti
repnz
decb
sbb
xor
imul
outsl
lahf
gs
test
std
bound
jmp
ja
fdivrp
dec
and
mov
or
mov
pushf
rorl
pop
jge
or
insl
fsts
pusha
push
cmc
or
pop
or
jns
jmp
subb
adc
pop
gs
inc
mov
mov
and
sbb
rolb
inc
cmc
jo
jo
xor
cmp
inc
cmp
nop
pusha
cmpsl
or
jmp
mov
movsl
pop
mov
mul
test
adc
xchg
jns
mov
iret
pop
repz
movsl
pop
cmpsl
jle
mov
hlt
jne
push
jns
and
das
xor
mov
popf
fcomi
mov
dec
lahf
or
push
xor
adc
xlat
insb
dec
xor
lret
push
xor
mov
mov
inc
jp
ret
popf
shrl
in
rclb
xor
je
ret
outsl
rorb
sub
jge
lock
xor
into
ret
je
push
xchg
cmp
imul
lret
sub
ficompl
cmp
insb
and
lret
mov
jp
add
aas
insb
inc
cmpsb
jnp
xchg
cmp
adcb
push
ret
push
clc
xchg
lret
or
push
mov
ror
or
les
cmp
into
outsb
jl
les
push
mov
iret
mov
inc
or
or
vpshld
mov
cs
ljmp
out
jle
cld
rcl
xor
nop
jae
loop,pt
cmp
js
mov
pusha
scas
insb
mov
popa
push
adc
pop
xchg
std
scas
and
imul
xchg
push
push
rcrl
repnz
pop
lcall
push
cmp
imul
fidivrl
xor
fildl
pop
dec
add
sahf
aaa
xchg
push
popf
mov
cltd
sbbb
loopw
ljmp
pop
in
and
aas
pop
cmc
cmp
mov
imul
aam
ret
int3
xchg
push
gs
pop
xor
rcll
ret
fldt
or
pop
out
xor
outsb
push
add
sar
cltd
rorl
popa
int3
cmp
popl
mov
js
out
insl
dec
sub
and
push
adc
sbb
push
adc
mov
dec
je
fs
and
pop
mov
movsl
test
push
or
insl
pop
sti
sub
sub
fnsave
fucom
mov
stc
or
pop
cmp
aas
lcall
mov
or
jecxz
rolb
jle
loopne
sub
push
mov
ljmp
call
push
mov
xchg
shrl
test
loope
call
pop
shr
or
test
inc
sub
cltd
inc
push
pop
xor
cmp
or
sub
ficoml
xor
mov
pop
repnz
push
in
inc
xchg
or
sti
sub
shll
dec
cmp
sbb
cmp
in
movsl
mov
cld
mov
and
outsl
pushf
push
inc
ja
ja
fmul
lret
jae
xorl
adc
stc
mov
push
fsubl
call
je
adc
push
pop
lahf
mov
pop
cli
test
jnp
cli
cmp
fstpt
shll
ret
repz
xchg
sbbl
clc
add
in
mov
jbe
inc
cli
lea
add
pushf
outsl
and
in
jne
aas
adc
or
shrb
cmp
xchg
dec
xor
sarb
push
test
mov
mov
jnp
in
jl
pop
je
cmp
aas
xlat
mov
push
divb
sti
mov
mov
inc
xchg
daa
jmp
jbe
sub
cli
cli
push
and
pop
clc
mov
xchg
js
andb
sub
in
enter
mov
mov
shll
cmp
cmp
pop
mov
sub
ds
fisubs
imul
dec
in
clc
jl
scas
dec
iret
scas
xor
jnp
lcall
or
jp
mov
jne
out
aas
mov
xchg
shlb
jnp
mov
outsl
inc
lds
jae
adc
mov
jne
jecxz
mov
rolb
inc
loopne
add
test
leave
stc
and
xchg
sbb
mov
movsl
into
sbb
lods
jno
ja
sub
out
subl
cmpsb
addl
adc
sbb
dec
mulb
stc
xlat
out
popa
pop
push
cltd
rcrb
sbb
xchg
push
sub
pop
enter
jle
or
out
pop
pop
fst
lret
test
out
out
xchg
mov
sub
pop
rorb
dec
lcall
loop
mov
push
mov
xchg
mov
aas
or
fisttpll
push
stos
lock
push
fnstenv
out
sub
imul
test
push
int
adc
test
jno
jg
sub
int
adc
sbb
push
loop
fsubrs
outsl
xchg
xor
push
ficompl
pop
adc
push
into
mov
out
and
aas
mov
xchg
xchg
adc
push
mov
pop
or
xchg
push
cmpsl
pop
loope
sbb
lock
mull
std
lret
add
cmp
dec
dec
into
push
aaa
imul
adc
adc
inc
pop
lcall
shlb
iret
inc
xchg
cmp
out
add
sub
sub
lahf
pop
jb
push
inc
ljmp
iret
push
popa
jae
stc
imul
sub
jp
push
sbb
aad
clc
out
and
cmp
dec
mov
call
jg
lret
sbb
pop
inc
sbb
incb
repz
or
inc
sbb
lcall
jne
mov
sbb
movsb
out
fbld
aaa
popa
pushf
cmp
jne
rcll
mov
lock
adc
adc
xchg
std
jo
dec
out
mov
fcoms
jns
mov
push
inc
push
dec
add
push
or
hlt
dec
inc
pushf
jne
or
out
xchg
cld
test
dec
push
xor
dec
in
cmc
mov
jle
jecxz
lods
aad
pop
xchg
addr16
add
xor
aaa
jg
lods
pop
xor
ljmp
dec
out
or
jge
jo
push
repnz
out
adc
negb
movsl
pop
push
movsb
in
mov
adcb
push
sbb
out
andb
add
fstpl
cmp
and
dec
jnp
pop
mov
mov
rcrb
dec
mov
fsubr
dec
loopne
scas
int
sbb
gs
movsb
cmp
jne
mov
xchg
or
int
mov
cli
mov
cwtl
mov
push
lock
repz
jge
imul
sbb
scas
pop
jns
insb
cmp
mov
mov
mov
sti
pop
loop
sbbb
fisttps
addl
and
push
idivb
insb
push
pop
outsb
inc
lods
fs
xor
daa
or
je
push
mov
dec
push
ds
loopne
sub
aas
pop
jl
js
enter
hlt
bound
pop
out
clc
popf
lret
mov
testb
inc
mov
jl
ss
ror
test
into
imul
paddd
icebp
lds
outsb
mov
sbb
scas
xchg
cs
push
sbb
mov
lods
ja
jo
data16
xchg
orb
add
push
fidivl
jmp
sub
loopne
or
fdivr
sbb
repnz
and
scas
jno
xchg
in
je
pop
or
cmp
sub
std
adc
jle
inc
in
imul
inc
loope
rorb
xor
add
pushf
popl
dec
mov
lcall
popa
fmuls
push
fxch
inc
add
push
cmp
jecxz
ja
add
inc
pop
xchg
dec
jg
cmpsl
sbb
or
insb
fdiv
pop
icebp
add
lods
faddl
inc
fcmovu
lret
cltd
jmp
jl
push
addr16
and
enter
cmp
insb
insl
add
xor
je
rolb
and
stc
icebp
int
pop
cmp
fwait
xchg
jmp
test
cltd
and
mov
in
and
js
jbe
push
shl
sbb
fistps
mov
mov
ljmp
cld
or
dec
jmp
cmp
cmp
adc
loopne
in
lret
xchg
test
orl
scas
out
xchg
jle
adc
cmp
push
dec
fwait
call
dec
mulb
push
jg
inc
subb
shrl
add
leave
mov
cmp
je
dec
ret
or
dec
fadds
out
shlb
jge
insl
mov
in
and
xlat
dec
inc
leave
pop
rclb
int3
pop
or
xchg
frstor
aas
sets
movsb
int3
mov
inc
dec
outsl
or
jge
and
jl
aad
xchg
jl
add
gs
adc
enter
scas
push
in
test
cmp
imul
add
dec
ss
adc
imul
aas
fsubrl
sbb
loope
xchg
stos
xor
xor
loop
cmp
sti
cld
repz
mov
mov
push
jge
sar
push
or
push
cmp
pop
mov
in
push
lret
mov
inc
stos
xlat
mov
mov
sbb
ret
inc
sub
mov
std
test
push
fldenv
data16
fcmovb
nop
jmp
mov
and
lods
jne
call
fs
and
ds
cmpsb
rclb
sub
push
pop
lds
push
sub
dec
popa
lahf
aas
aaa
dec
add
es
rcll
sbbl
xor
or
push
js
push
out
loope
push
cmp
dec
mov
mov
insb
cli
mov
push
push
lods
aad
test
pop
cwtl
adc
mov
cmpsl
xor
subl
sahf
add
fs
adc
jb
repz
mov
adc
push
inc
jbe
loop
dec
arpl
jg
ljmp
mov
fstps
loopne
or
scas
outsb
xor
imul
popl
xchg
mov
mov
shll
jbe
pop
push
jnp
test
xor
repz
mov
aad
enter
dec
shll
sub
clc
xchg
and
push
dec
jg
rcrb
pop
or
or
es
sbb
aaa
mov
insl
inc
bound
js
andl
jae
lahf
cld
shlb
pop
cmp
mov
ds
sub
add
jmp
je
subl
jg
push
hlt
jge
add
mov
je
jl
stos
in
fwait
mov
cmpsl
iret
mov
mov
and
ljmp
movsb
dec
hlt
and
or
mov
mov
fwait
add
scas
pop
push
mov
pop
sbb
mov
add
cmp
lret
out
inc
addl
psllq
roll
aad
mov
sub
xchg
in
jg
push
fcoml
test
inc
fdiv
mov
jge
cltd
clc
mov
cmp
rcll
test
lds
pop
push
cmpb
out
ja
shll
pusha
xchg
inc
fwait
jno
aad
lret
dec
scas
sbb
mov
mov
mov
in
xchg
std
dec
mov
into
pop
jns
sbb
ljmp
mov
dec
add
test
push
test
stos
jns
aad
out
and
outsb
mov
popf
inc
mov
and
inc
sar
mov
imul
dec
xchg
add
loopne
pop
push
xchg
int
dec
adc
test
xchg
ljmp
cwtl
popa
sarb
jmp
mov
xchg
pop
dec
or
xor
xchg
lret
add
in
sbb
test
cmp
pop
std
out
addl
push
xchg
mov
cld
das
shld
mov
lock
lock
and
shrb
mov
outsl
sbb
rorl
gs
jecxz
stos
mov
icebp
ss
fldl
insb
jmp
lea
jnp
push
int3
out
jns
jmp
jns
std
inc
hlt
inc
jo
shll
rcll
push
add
jl
xchg
inc
push
jb
xchg
int
push
and
stc
and
push
fcomps
lahf
add
out
push
jge
mov
inc
xchg
mov
xorb
rcrl
add
push
fisubrl
lcall
jecxz
inc
and
push
cld
pop
mov
fs
fs
dec
mov
mov
jnp
shrb
cld
ja
aad
stos
arpl
xchg
push
jno,pn
xor
insl
sti
xchg
pop
xor
lcall
mov
xchg
and
mov
insb
test
jle
pop
fnstsw
scas
mov
mov
or
es
xchg
xchg
push
mov
sub
call
sub
je
mov
jmp
into
xor
jae
pop
ljmp
or
in
nop
adc
mov
stos
cmp
xorl
lods
xchg
xor
xchg
adc
shr
xchg
jae
and
sub
inc
repz
add
out
add
dec
add
fs
int3
bound
push
negl
fildll
inc
xor
adc
xor
pop
adc
mov
push
cli
into
lcall
cmp
or
add
js
push
cmp
daa
sub
xchg
test
aaa
sysret
push
pop
push
pop
push
daa
push
jae
xchg
push
bound
fsts
sbb
adc
or
cmp
daa
xchg
xchg
sub
cmp
out
lds
lahf
sub
and
lahf
push
scas
in
mov
mov
jbe
sti
jne
xor
inc
xlat
outsb
cs
cld
bndldx
dec
pop
pushf
addb
hlt
pop
jp
mov
dec
out
ds
and
out
jbe
lds
jmp
and
mov
xor
jmp
pop
pop
not
call
sbb
fnstcw
push
jp
out
mov
into
adc
icebp
xchg
push
xchg
dec
inc
daa
cmp
imul
xchg
jb
fucom
xor
mov
fmuls
sbb
jge
jecxz
cli
iret
pushf
mov
aam
fildl
popf
cmp
cmp
jne
dec
and
dec
push
add
popa
sub
ds
or
imul
cltd
dec
inc
idivl
xor
xor
push
cmpl
lret
pop
int
pop
or
push
mov
fs
mov
int3
jl
and
push
xor
stc
adc
xor
mov
aam
aaa
shrb
xor
or
fbld
out
cmc
jmp
pop
call
outsb
inc
mov
lahf
js
mov
test
xlat
outsl
jecxz
xchg
loopne
js
pop
pop
xor
fwait
outsl
adc
pandn
add
call
xorb
and
in
stos
ja
xchg
inc
lds
jnp
jl
dec
pop
add
imul
lret
xor
push
lods
or
xor
data16
sbb
pop
mov
cmp
or
sbb
pop
pushf
lods
jle
sub
jecxz
mov
sub
nop
cmpsl
push
dec
daa
lahf
cld
fstps
push
pop
cmp
in
or
les
bound
lea
jb
sbb
pop
add
addb
pop
mov
xlat
fadd
sub
pop
sub
cmpsb
fwait
push
push
stos
cmc
push
dec
sub
mulb
js
stos
sbb
je
pushf
int3
shll
loopne
lods
lret
xor
shlb
lds
xchg
adc
loopne
test
sbb
ror
cmp
mov
in
pop
sbb
xchg
mov
jp
inc
test
sbb
movb
jmp
mov
in
insl
ja
cmp
lret
cmpsl
xor
hlt
lods
test
mov
decl
xor
pop
sti
out
sbb
cmpsb
inc
jnp
xchg
aas
adc
inc
in
hlt
test
aad
lods
es
sub
call
ret
jl
adc
sbb
call
fdivrs
mov
mov
jecxz
js
and
mov
hlt
push
mov
aad
jo
xchg
push
inc
stc
int3
into
cmp
push
lea
dec
pop
mov
dec
dec
ret
pop
or
cmp
cmpsl
lahf
pop
add
and
xchg
cli
pushf
mov
jbe
jno
pop
lahf
test
add
int3
rorb
dec
iret
cld
sbb
ja
sbb
jmp
push
add
pop
cmp
mov
xor
mov
sbb
sub
shl
inc
sbb
fcmovne
dec
jl
fdivp
mov
and
jae
sub
mov
push
push
jg
ret
adc
cmp
jae
ret
and
out
pop
rorb
std
mov
ds
sbb
or
adc
das
sbb
jae
aas
or
shrb
xor
lds
out
mov
mov
mov
inc
std
mov
shlb
mov
cmp
mov
cwtl
imul
sbb
pop
xchg
jge
push
sub
ljmp
mov
ljmp
mov
dec
mov
mov
push
and
fs
shlb
lahf
stos
das
jne
fcompl
mov
jnp
test
scas
fstl
and
sbb
push
decl
scas
and
addr16
and
add
bound
mov
push
xor
dec
fs
mov
cli
pop
call
stc
inc
cmp
pop
mov
in
inc
pop
pop
flds
cmpsb
mov
cwtl
push
addr16
xor
in
je
push
mov
or
jg
in
in
cmp
sbb
jmp
rcrl
jo
mov
jbe
mov
fsubrp
clc
jmp
hlt
in
pop
stos
cmp
sub
jp
mov
imul
xchg
pop
push
call
mov
adc
mov
scas
dec
sarl
inc
jle
es
int
inc
scas
jmp
push
cmp
int3
inc
jmp
cltd
test
xchg
js
dec
ffreep
mov
shll
push
pop
push
jnp
mov
xchg
and
idivb
loop
popf
decl
sti
adc
inc
aaa
pand
jg
test
jnp
into
dec
movsb
dec
inc
lds
pop
test
clc
cld
jge
jno
dec
ds
push
iret
pop
push
mov
adc
mov
stos
xchg
sub
lret
adc
adc
cltd
pop
bound
or
popf
add
pop
xchg
cmp
push
subl
push
add
xor
ja
jl
xchg
xchg
sbb
mov
push
sbb
les
xchg
call
jns
sbbb
sbb
in
roll
divl
mov
and
popa
fwait
pop
fdivrl
push
fmull
lret
scas
std
ja
push
cs
ret
push
nop
or
jne
jmp
test
xchg
mov
push
push
pop
std
dec
add
jb
mov
aaa
mov
inc
xor
mov
icebp
adc
test
xor
aad
mov
int3
ror
xor
stos
jecxz
out
cmp
out
mov
inc
xor
lods
adc
bnd
jmp
ja
jb
xchg
inc
mov
inc
ja
repz
xlat
ret
fistpl
lods
jecxz
pop
push
jae
add
cwtl
cli
or
adc
adc
fbstp
add
and
ds
or
adc
je
push
sahf
push
ljmp
movsb
mov
xchg
sbb
adc
out
or
cli
mov
xchg
sahf
sub
popa
mov
jbe
jae
lahf
jg
and
test
jae
xchg
frstor
jl
lods
imul
mov
movb
movb
mov
push
lds
xor
in
popa
fs
sbb
add
addr16
subb
hlt
dec
pop
dec
mov
movsl
sbb
aaa
cwtl
fisttps
cmpsl
lahf
lock
pop
loopne
jns
lea
movd
push
das
lahf
gs
sbb
sbb
sbb
ja
sbb
inc
sbb
lcall
pop
push
fmuls
xchg
push
int
lret
and
movsb
and
arpl
push
test
adc
or
pop
mov
push
pop
push
xorl
rcll
cltd
mov
push
mov
pop
aad
shrl
inc
js
adcb
sub
push
fs
cli
push
fwait
cmp
and
mov
fsts
push
das
push
push
pop
arpl
cld
lds
out
ds
inc
push
mov
int3
hlt
jns
jno
lods
xor
jno
sub
adc
in
rcrl
cmp
idivl
stos
xchg
add
aad
daa
jle
enter
idivb
jbe
and
lahf
push
std
push
xchg
loop
xchg
sbb
mov
int
jb
repz
mov
aam
lds
pop
fwait
dec
into
sub
stos
add
ss
jmpw
pop
push
xchg
incb
jp
push
sbb
or
lcall
mov
mov
jo
pop
shll
xchg
cmp
sahf
sbb
xchg
cmp
inc
pushf
inc
or
pop
clc
clc
pop
fbstp
int3
inc
test
sub
lds
fwait
sti
and
ja
sub
loop
mov
das
sub
cmp
xor
or
sbb
cmp
pop
dec
jb
dec
clc
cmp
enter
sub
mov
adc
in
pushf
xchg
xor
outsb
mov
jmp
enter
and
pop
lock
test
fstpl
lret
inc
xchg
push
popa
mov
jbe
pop
push
mov
push
adc
mov
scas
jnp
out
inc
jg
in
inc
pushf
js
cwtl
rcr
rorb
rolb
jnp
cmpsb
jp
and
lahf
push
idivb
ss
and
pop
lret
dec
shll
imul
jb
insl
sub
int
loopne
cmovl
xchg
sbb
and
cwtl
inc
adc
and
mov
cmpsl
mov
je
icebp
lret
or
mov
push
mov
fwait
addb
push
sbbl
les
incl
sub
ret
into
inc
popa
ss
sbb
enter
packuswb
pop
ss
add
cli
sub
adc
sub
int
pop
pop
add
mov
sti
data16
xor
and
in
stos
jae
xor
mov
sbb
jle
add
mov
data16
pop
mov
mov
sub
aam
jae
int
inc
loope
add
sub
mov
push
sub
push
xlat
pop
and
xchg
lret
mov
push
mov
iret
pop
mov
dec
ljmp
pop
adc
mov
les
add
aad
pop
mov
dec
das
mov
int
mov
sbb
scas
iret
dec
mov
pop
cmp
mov
and
nop
addl
sub
cmp
xchg
repnz
into
fstl
ljmp
movsl
lock
jmp
pop
ds
scas
jl
xchg
or
in
into
lcall
fnstenv
rolb
mov
ljmp
adc
shr
adc
xchg
mov
fcoms
or
icebp
dec
inc
pop
push
xor
dec
dec
xchg
or
mov
popf
mov
jmp
mov
js
jecxz
push
or
sbb
std
and
iret
dec
mov
inc
or
dec
imul
insb
jecxz
cs
aad
inc
jbe
repnz
xorl
mov
dec
sbb
sub
lret
xchg
xchg
pop
sahf
aam
xchg
into
push
dec
lret
hlt
or
inc
or
notl
leave
cmp
mov
sub
mov
push
mov
sub
icebp
cmp
pop
popf
and
sub
push
addr16
out
and
js
lahf
cmp
push
pop
test
movsl
lahf
cltd
outsl
repz
xor
mov
scas
aam
dec
mov
test
and
scas
jg
icebp
fs
ds
repnz
and
and
mov
mov
aam
inc
add
ficoml
lods
push
add
sbb
sahf
repnz
mov
cmp
lock
ds
lret
fsubs
sub
or
sub
in
lret
mov
lcall
aaa
mov
push
inc
imul
mov
jmp
les
stc
xor
sbb
add
pop
fwait
xor
aas
orb
popl
fcmovne
add
dec
jecxz
ja
cmp
ds
call
leave
inc
inc
scas
mov
sub
call
push
mov
in
dec
ficoms
inc
mov
fs
aam
mov
sarl
test
fnsave
mov
gs
pop
or
ljmp
enter
incb
cwtl
mov
add
jle
rdtsc
cmp
lahf
repnz
pop
mov
xor
fwait
cmc
inc
xchg
push
loop
add
xorl
pop
test
scas
roll
ret
add
jecxz
out
popa
or
cmp
leave
rolb
out
pop
xchg
std
arpl
in
repnz
pusha
enter
int
pop
cmp
cld
test
mov
aam
inc
out
das
bound
sahf
xor
inc
pushf
hlt
call
xchg
lcall
mov
adc
sub
lods
dec
fistpll
and
dec
xlat
clc
and
into
loopne
addr16
cmp
insl
fwait
ss
xor
popa
dec
movsb
inc
sbb
sub
xchg
sarb
fisubrl
push
xchg
loopne
hlt
dec
mov
mov
imull
popf
or
jno
mov
je
cmc
or
cmpsl
xor
inc
inc
sbb
sti
aad
cs
dec
mov
test
rcrl
shr
ss
dec
loopne
push
xor
push
fimull
ret
and
clc
sbb
push
out
pop
jb,pt
dec
lcall
std
int
dec
sbb
jge
imul
inc
jnp
mov
fimuls
jl
and
push
das
call
out
lret
ficoms
inc
mov
jecxz
adc
mov
je
sub
fwait
push
mov
mov
lahf
mov
daa
les
add
cmp
jmp
test
jl
push
jl
ss
cmc
out
rcll
outsb
outsb
push
inc
outsb
popa
sbb
or
pop
mov
pop
pushf
and
in
xchg
push
cmp
out
stos
xor
outsb
push
mov
mov
shl
clc
sti
scas
dec
arpl
dec
fdivs
fwait
mov
std
lcall
xchg
stos
xchg
push
shl
je
cmp
or
push
out
insl
das
data16
xchg
arpl
jb
jecxz
stos
mov
ds
lcall
mov
enter
mov
and
mov
pusha
inc
loop
sbb
jg
adc
jo
jnp
pop
sbb
fs
stos
cmp
roll
std
das
cmp
cmpps
pop
jp
xor
sbb
dec
daa
and
lods
jne
add
jae
data16
fsub
lret
xor
fisttpl
in
shlb
jl,pn
adc
mov
jne
test
not
filds
mov
sarb
or
mov
lds
adc
nop
jo
and
idiv
dec
inc
jg
mov
movsl
js
inc
sbb
cmp
insb
mov
push
xchg
fldcw
rcl
std
and
pop
xchg
lods
adc
ds
dec
inc
or
xchg
pop
fmull
push
fildll
xchg
mov
mov
mov
pop
test
ja
fdiv
call
adc
mov
add
or
insb
out
fcompl
cmp
in
mov
stos
push
jnp
jg
push
mov
insb
or
pop
push
outsb
out
push
shlb
adc
cli
cmp
push
out
lret
sub
push
add
aas
inc
push
scas
pop
jns,pt
jo
sub
movhps
cmp
pop
mov
int3
imul
loope,pn
lods
add
movb
gs
in
and
push
xchg
pop
sub
mov
add
pop
sub
sub
dec
inc
jo
outsl
inc
mov
js
daa
test
mov
mov
out
data16
xchg
test
test
inc
fcoms
xchg
xor
mov
aaa
in
pop
enter
dec
and
flds
xchg
lahf
iret
das
mov
jl
data16
lds
in
popa
insl
jmp
out
adc
and
xchg
daa
mov
pusha
push
push
cmpsb
sub
cmp
adc
xchg
movsb
cs
cmp
gs
xor
outsb
lock
push
inc
dec
sub
sti
jns
scas
jae
inc
lret
cs
cltd
cmpsl
dec
jb
mov
fnstsw
pop
sbb
inc
mov
add
sub
pop
jmp
loop
jo
lret
jl
gs
testl
aad
movsb
ret
and
push
ja
or
loopne
xor
cmp
idivl
aad
je
dec
mov
sbb
cmp
mov
pop
and
sub
push
out
sbb
cli
mov
mov
cmp
and
add
mov
test
xchg
adc
mov
sbb
pop
dec
add
mov
mov
xchg
lea
std
stos
cmp
leave
popf
jmp
inc
xchg
ss
lods
mov
xchg
xchg
outsb
out
push
xor
or
int
ret
pop
adc
pop
xchg
loopne
pusha
ret
mov
cwtl
les
rclb
push
pop
push
cli
outsb
adc
mov
mov
or
movsb
push
pop
jge
ret
mov
push
sub
xor
lock
loope
bound
mov
sub
or
sbb
mov
add
jmp
mov
testb
int3
shl
xchg
ficompl
das
sub
pop
scas
arpl
repz
pop
mov
add
jp
lods
cmp
in
mov
imul
fcmovne
sub
mov
and
pop
or
xor
push
mov
cmp
lock
adc
xlat
jmp
insl
daa
jno
loop
cmp
mov
xor
daa
add
add
add
xchg
in
push
outsl
push
push
xor
test
lock
xorl
and
add
sti
testl
mov
inc
scas
movsl
cmc
inc
lock
rorb
leave
icebp
pop
mov
sub
push
mov
iret
jae
inc
iret
movsb
adcb
cmp
sahf
xchg
je
orb
adc
shrb
push
pop
les
xchg
sbbl
imul
push
add
adc
repnz
cmpsb
mov
movswl
mov
jle
xor
mov
sub
imul
decb
fldcw
mov
lods
lea
mov
mov
call
jb
mov
jl
sbb
das
fcomi
rcll
sub
push
sahf
test
and
xchg
xor
icebp
sub
popa
jmp
inc
nop
jl
and
pop
repnz
fdivrs
ja
addr16
xor
jo
jmp
push
or
daa
lds
test
mov
in
aam
repz
dec
pop
push
sub
bound
mov
dec
push
stos
or
daa
ret
and
cmp
mov
movsb
cld
and
jo
or
ljmp
add
stc
aad
or
insb
aas
mov
in
fnstsw
sub
repz
nop
jbe
lcall
push
int
arpl
xchg
mov
mov
rorb
cld
adc
loopne
cmp
or
add
mov
sub
enter
rsqrtps
in
sub
lahf
jbe
mov
jp
pop
arpl
mov
mov
pushf
shll
bound
pop
push
add
push
into
dec
inc
inc
cli
sub
lahf
and
idivb
sbbl
fsub
and
icebp
mov
or
add
shrb
xor
push
mov
stos
mov
les
imul
ja
loopne
imul
push
aaa
add
xor
and
imul
push
adc
outsb
or
cmp
jle
push
adc
popf
xchg
and
addl
iret
or
cmp
and
sarl
xor
int3
xor
mov
out
pushf
mov
rcr
mov
adc
movsl
sbb
mov
xchg
inc
mov
pop
ss
xlat
adc
cmp
sti
je
mov
push
int
xor
adc
dec
call
sahf
and
xchg
mov
imul
jecxz
push
adc
aad
insb
mov
repnz
pop
mov
mov
mov
andl
outsl
pop
stc
xor
arpl
into
inc
cmp
fiaddl
adc
data16
push
jmp
push
std
out
xchg
mov
imul
inc
mov
adc
lahf
iret
or
inc
push
ljmp
ds
and
mov
js
sbb
out
pop
dec
inc
inc
add
mov
sbb
bound
sub
adc
adc
sub
popf
and
inc
mov
dec
add
imulb
sub
adc
cmp
adcl
xchg
adc
fs
fmul
rcll
out
push
jecxz
dec
lret
std
mov
xchg
pop
fdivs
xchg
add
or
xchg
inc
inc
pop
aas
jns
mov
repz
sub
cmpsb
sub
shlb
jmp
stos
sbb
lahf
push
leave
addr16
xchg
stos
mov
adc
add
pop
outsl
jge
flds
dec
add
add
push
insl
and
add
setno
into
and
mov
repnz
stc
pushf
cmp
test
test
or
or
aaa
dec
pop
in
les
xchg
or
ror
scas
popa
mov
mov
push
int
stc
outsb
or
into
ljmp
cmpb
mov
sub
and
xchg
jg
or
fdivr
data16
inc
stos
in
lods
scas
bnd
orb
mov
dec
adc
incb
push
lret
xlat
sbb
outsb
pop
incb
inc
lea
ss
push
cmpsb
jl
cmp
data16
stos
ds
dec
mov
aas
xchg
gs
loop
fs
push
out
addr16
push
pop
or
pop
sbb
inc
stos
jne
push
xchg
or
inc
cmc
setae
sbb
aam
sub
pop
cmp
rorb
scas
lods
adc
push
push
fildll
jo
sbb
xchg
mov
fnstcw
ret
sub
mov
mov
mov
pop
cld
sbb
or
cmp
int
adc
imul
and
into
movsl
pop
clc
mov
fwait
mov
retw
loop
das
addr16
mov
sti
subl
sbb
ljmp
or
dec
lcall
popa
scas
out
andl
les
dec
inc
mov
icebp
cs
pushf
pop
fsubrl
jmp
pop
cmp
dec
ficompl
push
daa
je
fisubs
mov
sub
xlat
movsb
insb
push
cmpsl
or
movsb
mov
shlb
pop
ficompl
idivb
or
push
imul
jno
insl
ss
sub
mov
and
dec
outsb
fildl
out
cmpsl
imul
xchg
lock
ret
sub
jne
enter
pop
lods
fsub
jp
jb
and
jbe
pop
pop
push
test
and
mov
mov
adc
mov
insl
mov
add
cli
mov
call
dec
pop
jno
pop
std
cmpsb
add
cs
lds
cmpl
and
cli
adc
xor
jecxz
mov
shll
inc
push
mov
repnz
mov
mov
bound
jg
insl
xchg
mov
popf
xchg
fst
inc
xchg
outsb
mov
mov
in
jmp
and
xor
mov
lock
push
xchg
dec
scas
mov
popf
stc
pop
or
in
fwait
hlt
mov
popa
ret
jmp
test
lret
mov
dec
cs
mov
lods
cwtl
movsb
cwtl
push
pop
addr16
mov
mov
mov
inc
pop
lods
lret
mov
sub
mov
adc
repnz
inc
jb
xor
mov
into
lods
mov
lcall
pop
scas
sbb
dec
mov
jp
inc
data16
add
int
mov
xor
dec
jbe
fimuls
add
and
push
shll
and
in
daa
xchg
fsts
rorl
aad
inc
cmpsb
cmpsb
pop
sbb
or
mov
cltd
out
sbb
outsl
cmp
loopne
mov
rolb
mov
aaa
inc
shrl
pop
addr16
rcrb
imul
aam
aaa
lods
sar
pop
stos
mul
cmp
xor
loope
or
sbb
mov
call
or
shlb
or
xchg
push
bnd
xor
jecxz
xchg
in
mov
fildll
lods
mov
push
jecxz
mull
cmp
dec
sbb
int
xchg
fcmovu
pop
dec
jl
pusha
xor
mov
jg
jns
arpl
or
outsl
sbb
roll
push
xchg
push
push
push
cmpsb
stos
fdiv
push
pop
lock
cmp
vandps
test
repz
aam
sti
xor
lea
cld
or
mov
dec
push
jo
mov
shlb
repnz
ja
int3
dec
into
testb
popa
loope
popa
cmp
pop
imul
jmp
pop
jno
das
fdivrs
xchg
adc
mov
movsb
popf
sub
insb
ret
lods
sub
in
jp
sbb
out
leave
xor
repz
pop
xor
jns
push
in
xor
loopne
inc
xlat
loope
mov
jae
xchg
sub
fsubrs
arpl
int
adc
sbb
pop
pop
xor
push
xlat
lahf
lods
repnz
fs
xlat
lcall
inc
imul
jb
sbb
mov
je
rcrl
push
xchg
cmpsl
cld
pop
dec
int
popa
pusha
enter
add
ret
outsb
cmp
pop
fisubl
stc
lcall
test
out
outsl
shrb
mov
or
loop
and
xor
cld
xchg
push
sbb
mov
enter
or
and
jmp
sub
sub
xor
push
xchg
adc
dec
lds
sbb
jae
pop
xor
mov
stc
and
jns
test
into
cs
inc
add
test
push
stc
jbe
adc
jnp
jnp
xchg
outsl
pop
add
data16
cli
xor
gs
jecxz
fs
inc
pop
icebp
insb
xorl
loopne
jp
lcall
imull
sub
fstpl
cmpsl
iret
scas
pop
adcb
cmp
cmc
cltd
push
mov
jne
repnz
pop
std
add
nop
es
dec
out
xlat
cmp
lret
scas
xor
insl
mov
sbb
sbb
or
jge
pop
enter
cmpsb
js
push
fistps
js
aam
dec
sub
stc
mov
or
aad
xchg
push
xchg
xor
pop
aaa
pop
outsb
jge
push
dec
rcll
testl
mov
jecxz
sbb
call
or
sbb
shr
dec
sub
andb
jbe
imulb
stos
xor
popf
pop
ja
aam
icebp
adc
loopne
nop
loop
movsl
mov
std
nop
add
inc
gs
mov
push
xchg
mov
inc
aas
ret
in
xchg
in
mov
mov
sub
and
or
mov
lahf
xor
pop
cmp
jns
out
xor
pop
mov
repz
push
inc
fsubrs
mov
xchg
shrb
aas
or
add
in
mov
int
pop
shll
pop
nop
jge,pt
in
dec
sub
mov
aad
es
repnz
xor
imul
movsl
or
adc
mov
jmp
mov
xchg
sub
insl
adc
cmp
mov
ds
rclb
lds
out
push
aas
data16
insl
loop
inc
push
xchg
pop
icebp
sarb
push
outsb
out
int3
outsb
lods
jmp
sbb
jecxz
sarl
outsb
in
jge
adc
adc
or
out
cld
push
and
and
xlat
xor
pushl
or
lds
adc
dec
in
inc
in
cmpsb
jle
jmp
push
stos
in
in
dec
push
and
mov
out
ficoms
lods
sbb
mov
mov
bound
jmp
dec
addr16
push
mov
add
jl
stos
pop
jl
das
mov
fisttps
mov
mov
sahf
hlt
ljmp
sub
nopl
mov
rcll
and
mov
cmp
fs
dec
adc
cs
js
sbb
jns
stos
mov
lcall
add
pop
arpl
aas
inc
std
lods
pop
dec
xchg
and
inc
je
ret
fs
jne
test
in
dec
or
int3
jb
in
sar
cs
test
fadd
bound
sbb
loopne
lea
xchg
push
mov
cmp
mov
push
stc
aas
enter
push
mov
mov
fimull
mov
pop
outsb
and
dec
in
imul
add
outsl
cmp
mov
lgs
es
cmp
mov
xlat
xchg
aam
mov
mov
fsubrl
cmpb
or
mov
mov
dec
fwait
or
adc
sahf
xchg
cmp
rcr
mov
in
mov
loope
inc
or
adc
mov
lahf
lahf
xchg
cltd
mov
push
loop
fistpl
cmpsb
adc
js
add
leave
loope
adc
movsb
mov
adc
or
xchg
sub
push
out
cmp
loop
add
pop
negl
mov
mov
dec
dec
mov
clc
xor
push
roll
mov
cmp
dec
mov
out
mov
xchg
xchg
imul
adc
fcmovne
in
inc
push
jl
shr
lock
cmp
inc
mov
arpl
lahf
outsl
scas
pop
dec
stos
mov
xor
popf
mov
cmc
das
imul
xchg
test
pop
imul
scas
std
int
sub
fbstp
and
lcall
pop
pop
fdivs
dec
fistps
stos
push
cmp
adc
lock
dec
daa
jle
pushf
dec
pop
jl
js
cld
scas
add
outsl
dec
dec
test
addl
pop
inc
mov
incl
adc
dec
test
ds
xor
push
sar
mov
popa
pop
repnz
outsl
dec
filds
and
sub
add
jns
adc
xor
insl
jno
fcom
jno
stos
xor
xchg
leave
adc
push
jne
mov
inc
lcall
sbb
sub
adcb
add
or
mov
fnsave
jbe
and
cli
lret
mov
mov
dec
cli
and
fsubs
add
lods
xchg
neg
jo
clc
dec
mov
xlat
jbe
mov
leave
mov
sti
outsl
mov
dec
popa
sbb
push
leave
faddl
mov
jmp
sbb
enter
mov
xchg
fwait
push
test
movsl
push
cmp
xchg
mov
test
sbb
nop
and
jl
enter
mov
enter
cmpsl
mov
inc
ljmp
outsl
pop
rcrb
fildl
cli
sbb
push
imul
xchg
cmpsl
cmp
mov
mov
jp
pop
add
sarb
icebp
sub
hlt
mul
xchg
pop
sub
mov
jmp
out
mov
aam
lcall
xor
icebp
test
adc
repnz
jnp
lods
mov
and
popa
or
push
adc
push
mov
pop
in
xor
or
arpl
in
or
fwait
add
jo
and
jl
pop
lahf
or
out
mov
insl
jnp
sbb
fldt
dec
cmp
js
push
arpl
push
rolb
loopne
pop
cwtl
mov
mov
inc
and
adc
lret
stos
adc
jno
sub
cmp
add
xchg
ret
jnp
add
push
movsl
jne
orl
pop
inc
cmp
popf
dec
mov
adc
mov
shrb
inc
mov
adc
and
insb
int
int3
fwait
and
jbe
jns
cld
or
pop
test
negb
lds
jno
cld
mull
test
push
cmp
push
into
lcall
imul
test
sahf
fwait
mov
stos
gs
bound
mov
pop
out
jb
outsl
int
das
mov
xchg
nop
jo
jl
push
addr16
jmp
mov
cmp
incb
fst
sub
mov
cmp
call
xor
sub
lahf
pop
jb
test
add
outsl
pop
and
out
loopne
out
sub
repnz
mov
cltd
adc
dec
into
idiv
adc
popa
adc
jecxz
out
mov
adc
xor
adc
cwtl
pop
rcrb
leave
mov
lds
in
cli
mov
jns
push
push
push
mov
jmp
and
push
xchg
mov
mov
aaa
jg
das
mov
add
fisubrs
or
add
xor
mov
and
sbb
gs
cmp
outsb
push
cmp
add
xchg
ds
mov
sbb
inc
popa
and
dec
insl
icebp
xor
push
mov
pop
loop
cmp
fistps
mov
pop
mov
pop
sub
xchg
mov
test
daa
ljmp
mov
xchg
cmp
mov
xchg
adc
scas
jno
loope
jg
xorb
mov
lea
fistl
addr16
and
cmpb
sub
iret
frstor
mov
sbbl
push
es
scas
mov
jbe
enter
out
sbb
in
mov
scas
cmp
lea
xor
stos
js
insl
adc
jmp
add
mov
out
repnz
test
lods
sub
test
jne
jns
push
test
outsl
sbbb
push
sahf
pop
out
pushf
push
xchg
pop
xor
pop
ret
popf
mov
ljmp
push
jmp
pop
sbb
mov
adc
sahf
mov
mov
cltd
xlat
ret
fldenv
icebp
sub
mov
inc
add
sti
xchg
movb
lret
popf
and
addr16
aam
shrl
inc
xor
xorb
xlat
out
jnp
ds
aam
gs
pop
jl
aam
stos
in
sahf
and
hlt
pop
fcompl
push
or
orl
pop
jae
andl
dec
mov
nop
inc
stos
cli
ror
mov
sub
jmp
jae
cltd
xchg
lods
repnz
xchg
push
push
jge
insl
jl
jno
adc
sbb
cmp
add
repnz
mov
sub
ja
sahf
mov
aas
imul
rcr
and
sub
popl
sti
pop
scas
push
and
je
setg
push
cmp
lods
fsub
leave
ja
xchg
inc
outsl
nop
scas
sbb
mov
test
cwtl
push
repz
ja
icebp
xchg
xchg
xchg
jle
cmc
cmp
xor
pop
add
sahf
dec
and
imul
sbb
es
xchg
pop
mov
mov
fstps
jbe
les
mov
lods
outsb
jb
add
xor
cmp
cmpsl
push
mov
das
lods
push
dec
mov
sub
cmp
or
add
out
adc
mov
shlb
rorl
push
pop
outsl
pusha
lret
js
xor
data16
leavew
es
mov
adc
cmpb
mov
repnz
out
int3
mov
mov
mov
fwait
push
cwtl
jo
aam
cmp
int
inc
and
pop
or
movsb
js
stc
push
fsubs
les
in
pusha
mulb
out
cmpsb
mov
mov
mov
mov
pusha
out
mov
cs
mov
mov
call
mov
in
pop
aad
lahf
mov
xchg
in
ret
adc
ret
mov
hlt
cmp
xchg
lret
hlt
dec
fcoms
sbb
adc
push
aaa
ss
pop
negl
push
mov
inc
orl
shll
lret
mov
dec
insb
pushf
lods
fistpl
test
sbb
mov
sbb
imul
cltd
or
into
inc
insb
sub
mov
push
out
xchg
adc
imul
add
ja
adc
lret
and
cld
enter
adc
inc
lock
roll
cwtl
mov
loopne
jno
push
loopne
fmuls
or
shll
aam
cmp
shll
fimuls
ret
rclb
mov
test
xor
fsubrl
sub
loope
fbld
cmp
mov
dec
push
sti
iret
iret
push
adc
jmp
mov
push
xor
xchg
jecxz
arpl
in
push
and
xor
xchg
nop
ffreep
aam
test
cmp
cwtl
cs
dec
stos
push
cld
iret
iret
popa
mov
sbb
fcmovnbe
imul
insl
lds
jg
popa
or
pop
sbb
sbb
out
std
pop
sbb
call
sbb
xlat
xchg
mov
ret
xor
inc
mov
add
cld
call
mov
das
xchg
cmpsl
jmp
dec
adc
inc
push
lds
xlat
pop
jg
pushf
addr16
pshufd
test
sub
leave
mov
mov
popa
clc
sub
jg
sbbl
or
inc
shll
sub
adc
outsb
loop
jne
ds
lea
mov
aad
jge
lret
repnz
pusha
cmp
fimull
notb
outsl
fidivl
sub
bound
push
jecxz
mov
andb
shlb
jle
popf
sbb
inc
sub
and
fdivl
rclb
rclb
nop
mov
lock
mov
jl
mov
es
ret
push
lret
xchg
imul
cs
insb
xor
loop
add
sbb
jmp
sbb
push
xor
cld
pop
je
sbb
push
iret
fnsave
pop
ljmp
cmp
gs
dec
adc
xor
stos
push
push
ret
shlb
mov
mov
lret
mov
cs
stos
sti
mov
aad
fistps
mov
dec
in
lea
jl
sub
xchg
int
test
lods
mov
stc
lea
rol
fucomi
orb
and
sbb
push
cmpsb
mov
aam
add
push
xor
xchg
mov
push
rol
movsb
int3
push
xchg
fwait
shrl
push
lods
mov
xorl
cmp
lret
xor
fs
push
mov
nop
jae
or
imul
nop
out
jmp
icebp
ds
mov
inc
dec
je
shll
jae
xchg
scas
xor
cmp
clc
xor
dec
testb
mov
push
pop
dec
repz
xor
rcl
lods
add
outsl
es
mov
leave
loop
out
arpl
scas
inc
push
push
lret
in
sahf
sub
loopne
sbb
jno
cli
testl
adc
pusha
repz
aaa
lods
lea
xor
adc
aad
sub
inc
mov
cmp
int
lret
mov
imul
sub
cmp
loop
in
popf
pop
fnstenv
data16
fimull
stos
dec
sub
mov
int
in
mov
les
inc
sub
insl
jg
aad
aaa
fucomp
sarb
orb
add
add
push
mov
lds
scas
sti
mov
lds
mov
dec
data16
rcl
mov
mov
mov
icebp
sub
out
mov
das
adc
fstps
ljmp
xor
add
inc
pop
jp
inc
pop
incl
sbb
mov
iret
cmp
scas
xchg
out
leave
fwait
add
mov
and
stos
push
inc
jbe
fcomps
in
scas
pop
lret
imul
jle
repz
pop
xchg
outsb
add
cmova
adc
xchg
sub
xchg
shlb
push
imul
mov
cmp
insl
pop
in
outsl
push
arpl
repnz
rcll
xor
pop
add
lds
jg
add
es
mov
xchg
vpsubw
adc
call
stos
push
push
cmpsl
iret
xor
popf
cmovge
add
pushf
adc
and
mov
xor
sub
adc
xor
es
in
dec
popf
enter
xchg
es
fistpl
sbb
data16
or
shll
ficoms
in
shlb
pop
xchg
dec
or
inc
fdivrl
and
pop
pop
pop
pushf
scas
nop
into
iret
pop
mov
sahf
shr
xor
and
adc
test
push
sbb
push
cmp
repnz
adc
mov
movsl
shr
loopne
mov
das
stos
sub
cmp
jnp
adc
cld
int3
js
adc
test
pop
cwtl
or
mov
stc
jne
cmpsl
enter
rcrl
mov
leave
jmp
mov
out
ret
xchg
xor
push
sbb
fs
push
clc
xor
mov
sbb
push
push
xor
into
test
adc
push
ret
mov
mov
imul
cltd
xor
mul
rcrb
mov
roll
xor
int3
cmp
mov
push
insb
xor
push
in
jge
and
adc
test
dec
inc
cmp
dec
hlt
mov
fs
jmp
insl
jb
ss
test
scas
out
pusha
lret
xchg
mov
xchg
pop
and
test
xchg
xchg
xchg
pop
mov
or
and
xacquire
mov
cmp
das
add
add
mov
pop
int3
mov
sub
inc
xor
outsb
mov
inc
punpcklwd
mov
aas
jo
ficoms
mov
mov
mov
push
or
jb
fistl
in
pop
loop
sbb
dec
or
cmp
fisubs
jbe
sahf
pop
mov
out
movl
pop
jecxz
dec
ja
sub
pop
push
int
xor
push
sbbb
add
add
inc
xchg
dec
push
aaa
dec
xor
and
mov
add
and
mov
and
push
dec
clc
jecxz
dec
out
cmpb
push
mov
pop
xorb
mov
and
pushf
loope
adc
out
mov
loopne
pop
out
idivl
cwtl
push
repnz
or
int
es
jge
scas
inc
mov
jns
fdivl
mov
loop
jecxz
sbb
cwtl
lahf
cwtl
push
pop
imul
jbe,pt
js,pn
or
div
notl
subb
test
mov
outsb
int
loopne
and
popa
daa
std
cli
jge
test
jp
pop
add
cmp
cltd
xchg
cmp
ss
sbb
xor
loopne
xchg
dec
in
dec
inc
cmc
sbbl
pop
fdivr
sbb
scas
fwait
cld
inc
es
sarb
sub
inc
fst
popa
sub
xchg
sub
fidivrs
push
cs
fidivrl
cmp
fadds
jl
fisubrs
loop
mov
test
or
pop
sarb
pop
out
pusha
imul
arpl
ljmp
xor
aam
das
or
pop
sbb
lock
into
lahf
in
fcmovu
notl
inc
xchg
lret
xor
das
push
dec
movsb
sbb
int3
fildl
je
mov
js
add
or
and
loop
xchg
push
xlat
mov
hlt
stc
scas
stc
xchg
scas
test
cltd
dec
xchg
scas
xchg
fs
mov
outsl
lcall
movsl
subb
stos
aad
int3
mov
aad
test
dec
xchg
loop
mov
adc
lock
fwait
dec
aad
and
cmpsl
inc
fistpll
push
cmp
pop
cld
and
push
lock
outsb
cmp
dec
xor
cmc
jp
xchg
or
les
repz
jmp
imull
nop
fldenv
into
xor
pusha
add
jge
adc
pop
cmp
ljmp
pusha
xor
dec
inc
mov
cld
aaa
mov
lods
add
pop
scas
outsb
xor
cmp
mov
cld
js
add
sbb
std
jecxz
enter
mov
xor
xlat
jnp
xchg
cld
fdivl
adc
lods
mov
stos
out
xor
add
sahf
inc
push
mov
subb
imul
add
adc
stc
xchg
out
cld
je
push
sub
and
sub
pop
cmpsl
shrl
mov
sbb
mov
mov
test
adc
test
sub
aas
int
xor
stos
push
cli
ret
mov
cld
mov
bound
or
dec
lret
jle,pt
or
cmpsb
pop
or
aam
sbb
sub
rcr
jmp
call
loopne
or
scas
repz
jb
mov
pop
adc
jmp
or
dec
rcll
ds
mov
jne
cmp
ja
pop
sub
fcomps
and
mov
mov
mov
repnz
nop
dec
pushf
pop
lahf
sub
inc
push
int3
popf
xchg
nop
mov
jp
test
mov
fcmovbe
sub
dec
loopne
sub
test
ljmp
scas
inc
pop
inc
gs
movsb
adc
xchg
pusha
inc
rorl
pop
fbld
jne
pop
and
int3
adc
inc
mov
push
adc
fxch
xchg
js
pop
dec
sub
mov
mov
gs
ret
cs
jb
or
xchg
jnp
insb
jbe
jle
or
cmpsl
cmpsb
add
icebp
test
gs
pop
adc
mov
imul
push
cs
loop
and
lods
sbb
cmpsb
mov
sbb
inc
adc
mov
ds
scas
xor
pop
mov
cmp
out
rolb
xchg
jle
push
mov
dec
addr16
popa
mov
shr
loop
pusha
xchg
mov
rorl
mov
loop
jge,pn
outsb
repnz
fsubrs
or
movsb
and
movsl
mov
cltd
lds
dec
xlat
icebp
lods
leave
pop
or
fidivs
mov
pop
je
pop
gs
outsb
add
push
xchg
mov
or
imul
cmp
sub
push
cmp
xor
mov
cmp
jmp
outsb
mov
rcll
in
push
sub
pop
nop
push
jns
push
and
paddw
mov
xchg
fs
fnstsw
push
rorl
subb
mov
lahf
jle
mov
inc
sbb
or
hlt
loope
mov
rolb
cltd
fwait
cld
and
lods
push
or
add
inc
lret
cmp
les
setns
ficomps
xchg
push
and
les
aam
xchg
test
xor
test
icebp
push
aam
loopne
fcoml
adc
pop
mov
jns
scas
add
lods
dec
lret
jae
cld
std
xchg
add
dec
shl
or
and
je
mov
call
sbb
addr16
sbb
sbb
pop
call
sbb
icebp
repnz
aam
aad
aam
call
lock
flds
scas
xchg
incl
dec
inc
push
mov
xchg
hlt
adc
xor
push
sbb
mov
add
xlat
add
scas
cli
loopne
jp
inc
test
and
es
jbe
cwtl
jmp
out
outsb
lds
aam
cmpsl
push
sti
cld
jmp
shlb
dec
sub
cmp
cmp
push
stos
int
add
lret
lock
xchg
std
mov
out
bound
cmp
les
faddl
mov
lret
add
and
cmpsb
mov
je
ror
int3
mov
nop
xchg
adc
mov
dec
ret
xor
roll
sub
mov
pusha
das
push
mov
xchg
mov
mov
push
inc
dec
cld
or
sbb
out
fld
insl
lods
inc
pop
in
aas
pop
mov
pop
dec
popa
mov
rolb
adc
imul
xlat
mov
addl
push
inc
jp
mov
testb
and
outsb
and
imul
xchg
push
mov
sbb
lods
sub
xor
fcoml
rcrl
mov
cmp
inc
aam
or
mov
mov
sbb
ja
add
fs
mov
lret
inc
and
pop
add
xchg
pop
jp
jno
jno
arpl
pop
xor
mov
scas
lahf
loope
adc
xor
loop
popa
inc
imul
push
inc
mov
negl
jo
insl
mov
sbb
pop
or
xchg
push
sbb
mov
xor
mov
test
mov
repz
jbe
sub
pop
pop
dec
ret
xorb
lods
adc
cli
xchg
inc
out
pop
out
mov
and
xchg
add
dec
push
push
cmpsl
ljmp
add
aad
xor
inc
jle
mov
out
fs
test
and
or
divl
icebp
in
jno
cmpsl
repnz
xorb
inc
aaa
pmaddwd
loop
clc
mov
add
jns
ds
xchg
std
and
insl
sub
call
pop
lods
mov
outsb
add
mov
int
cmp
inc
pop
inc
lds
pop
sbb
pop
orl
add
push
sub
inc
adc
out
mov
insl
pop
mov
pop
sub
jp
lods
xchg
mov
xchg
pop
mov
sub
ja
jno
mov
pop
popfw
mov
push
pop
mov
jo
cmc
adc
mov
mov
cld
jbe
cs
pusha
push
or
push
sub
hlt
xchg
push
push
stc
cld
xor
cltd
jge
and
jl
outsb
ret
cmp
sbb
movsb
scas
cmp
fldenv
lea
adc
adc
movb
cs
pop
and
xor
sbb
xchg
jbe
sub
mov
rorb
cld
inc
ret
jb
out
rol
sbb
inc
aaa
lcall
mov
xchg
data16
push
mov
scas
pop
push
dec
xchg
fwait
cmp
ret
adc
xchg
nop
int3
sbb
mov
sub
xor
daa
repz
and
ds
cmp
jp
cs
dec
js
xor
test
xchg
cmp
push
xor
xor
outsb
ja
sbb
stos
subb
xor
add
addr16
push
mov
jno
shr
push
and
js
xchg
ljmp
ret
xchg
dec
enter
jg
adc
or
movsb
flds
adc
dec
or
idivb
or
cld
jle
jbe
push
push
push
movsb
clc
ret
cmp
aas
shlb
mov
sbb
pop
jno
gs
xor
sub
mov
mov
jg
mov
push
aad
fisttpll
dec
mov
xchg
fwait
and
mov
das
scas
inc
and
xlat
mull
adc
sbb
cmp
and
xchg
out
inc
leave
stc
decl
dec
adc
xchg
sbb
jle
cli
addl
sbb
cmpb
dec
cmp
mov
sbb
insb
lcall
cmp
add
jl
outsl
das
mov
push
call
and
pop
mov
push
xchg
orl
xor
and
and
push
push
cvtpi2ps
mov
mov
es
jle
mov
xor
cli
repz
movsl
sbb
dec
dec
adc
pushf
ja
jbe
out
stc
cmpsl
cmp
sti
in
inc
jp
ret
mov
into
in
int3
pop
jns
fxch
gs
std
mov
sti
mov
sbb
cmp
js
imul
push
mov
pop
adc
add
inc
pop
cmc
out
jns
dec
add
sub
sbb
gs
add
sub
jb
push
mov
cmpsb
jp
push
rcrb
or
mov
adc
outsl
out
jmp
call
push
jne
rclb
ret
in
pop
sbbb
dec
sarl
jmp
and
je
sub
fs
jne
fs
xchg
push
js
arpl
lret
push
aad
pop
inc
and
push
adc
push
or
daa
xchg
call
arpl
sub
sbbl
mov
stos
xchg
jnp
mov
pop
mov
jge
cld
aam
rcll
ret
xchg
ljmp
mov
sub
lahf
inc
jp
and
mov
stos
addr16
aad
mov
popl
push
test
jae
in
clc
imul
lret
mov
in
mov
inc
aas
xchg
cmpsl
rorb
idivb
mov
lret
mov
mov
sub
dec
jno
xchg
loope
lods
pop
dec
adc
cmp
cltd
out
mov
adc
aas
data16
jp
pop
pop
jns
inc
ds
or
inc
xor
lds
icebp
repnz
jg
sbb
or
mov
data16
ds
sbb
dec
dec
dec
xchg
push
dec
add
mov
rorb
js
lahf
and
mov
subb
adc
loop
ljmp
test
out
fidivrl
dec
pop
adc
rorb
pop
mov
repz
or
movsb
jbe
sub
jns
mov
add
stos
int3
jecxz
add
hlt
int3
mov
mov
loop
mov
addl
loope
repnz
icebp
cs
add
and
add
jbe
or
fwait
or
jg
mov
xor
sub
and
in
xor
xor
mov
decb
mov
cs
aaa
in
mov
aaa
in
in
addr16
pop
mov
into
xor
inc
pop
std
mov
orl
sbb
js
pop
add
mov
cmpsb
fcoms
jl
fidivl
fisttpl
and
dec
jae
mov
test
fists
cmpsl
les
scas
add
and
js
test
movsl
insb
jnp
imul
push
subl
xor
ret
pop
mov
or
mov
insl
mov
inc
adc
sub
subl
sahf
xor
imul
mov
mov
hlt
jecxz
es
pop
dec
jl
stos
jb
addb
lahf
xchg
cmp
test
sub
push
fsubs
cmpsl
scas
pop
mov
mov
cmpsl
mov
sarl
pop
push
jle
ds
xchg
add
aas
in
sbb
mov
xlat
mov
push
movsb
push
cli
imul
rcrb
aad
outsl
push
jnp
insb
cltd
test
test
xchg
stos
jbe
jnp
mov
fisttpll
xchg
mov
push
sar
jo
add
mov
cwtl
in
dec
adc
or
fwait
or
cmpsl
cmp
sbb
insb
fnstcw
add
adc
adc
cmpsb
sub
icebp
mov
dec
mov
adc
icebp
jns,pt
jbe
xor
popa
jae
movsl
jae
iret
mov
adc
pop
mov
mov
lods
aad
in
test
fsubl
push
das
and
int3
mov
jno
push
aam
popa
push
xor
mov
ss
mov
push
in
mov
int3
sub
fstps
mov
std
in
inc
mov
pop
out
push
sti
lods
cmpsb
lret
cmc
mov
loop
jno
adc
jne
pushf
dec
int3
mov
fwait
mov
xor
bound
cmp
inc
and
lcall
jae
ljmp
and
adc
cmp
inc
cs
iret
pop
xchg
aas
stos
cmpb
adc
mov
mov
fistps
or
inc
mov
out
imul
ljmp
mov
jno
loope
mov
mov
add
inc
push
js
jbe
mov
add
mov
fdivl
mov
xchg
orb
sbb
inc
jg
push
int3
cmp
pusha
jmp
fwait
inc
popa
xchg
mov
mov
push
mov
out
ja
sub
in
cltd
sbb
jge
sti
push
or
mov
stos
insl
xchg
scas
sti
repnz
scas
sub
sub
mov
pop
pop
daa
mov
and
adc
xor
xchg
lret
addl
mov
pop
mov
fwait
or
out
push
test
je
xlat
repnz
inc
sub
push
mov
mov
imul
imul
cltd
addb
pop
sub
test
or
outsl
jne
mov
push
pslld
repz
pop
xchg
add
daa
xor
cmp
mov
push
push
mov
mov
mov
cli
popa
xor
idivb
sahf
loopne
popf
sbb
xchg
jno
mov
pusha
xchg
fnstenv
cmp
mulb
sub
jle
out
loope
enter
adc
pop
add
mov
pop
test
add
das
pop
cltd
pop
xlat
dec
mov
outsl
adc
add
cmp
pop
clc
jo
inc
pop
xor
xchg
test
repz
inc
cmc
dec
sbb
in
sub
outsb
pusha
jl
inc
fwait
add
ret
sbb
out
jle
ja
lock
hlt
clc
sub
test
ljmp
pop
mov
in
in
and
repnz
stc
imul
rcrb
fbld
jo
add
add
call
hlt
jns
push
mov
das
shr
aam
ficompl
rclb
testl
repnz
out
push
sub
clc
out
jnp
movsb
inc
mov
pop
scas
scas
shll
or
out
lret
dec
rcr
mov
test
xor
test
jle
aas
int3
sub
push
cmp
and
xor
sub
mov
inc
test
repnz
out
push
test
ficoml
fbld
aas
xlat
test
in
sub
aas
dec
into
lods
add
icebp
rcll
xchg
and
add
lret
push
inc
int3
adc
rorb
xor
ljmp
push
mov
cmp
adc
jnp
ds
push
fisubs
jae
lret
cmp
cs
adc
xchg
push
mulb
push
popa
test
insb
daa
inc
pop
cmc
fyl2xp1
xor
imul
lock
mov
sub
stos
jle
insl
in
pop
and
add
adc
sub
pop
ss
sbb
inc
sbb
xchg
ljmp
pop
add
ja
jns
xor
push
push
sbb
leave
xchg
fisttps
shrl
outsb
loopne
xor
xchg
sub
mov
inc
push
adc
mov
push
push
push
mov
and
cmp
mov
arpl
aas
rcl
aaa
imul
adc
loopne
mov
test
sbb
imul
test
xorl
in
jno
gs
mov
sbb
shl
jmp
and
nop
jb
fcoml
sbb
push
cmpsl
cmpsb
mov
cld
rcll
mov
lods
orb
jbe
outsb
sub
mov
jnp
dec
cmp
jnp
bound
push
notb
and
shl
mov
sbbl
sub
jmp
jge
push
out
xchg
jo
jnp
out
sub
adc
imul
dec
std
xor
inc
jg
and
mov
enter
jge
or
mov
jge
xor
push
test
adcl
ret
icebp
ja
cmp
inc
and
repnz
pop
test
sbb
sarl
sbb
mov
cmp
jmp
test
faddl
push
xor
jg
jbe
add
or
push
mov
add
pop
lret
push
in
cmp
test
hlt
fld
mov
ljmp
mov
mov
adcl
imull
lcall
mov
iret
push
ds
mov
xlat
scas
lds
mov
mov
sti
je
cmp
inc
xchg
in
cld
vpcmpgtd
xchg
movsb
add
xchg
inc
shll
mov
arpl
xchg
je
fsubrs
cmp
push
xchg
arpl
sbb
dec
and
xchg
sti
leave
adc
dec
jge
pusha
mov
or
pusha
mov
mov
sbb
imul
and
push
dec
js
aas
jmp
into
bound
test
loopne
cld
cmp
xchg
repnz
leave
or
ja
divl
sbb
imul
aad
push
mov
push
xchg
imul
lret
lock
ret
jle
cmpl
repnz
dec
aad
lods
push
xor
js
lods
rclb
addr16
mov
cmp
arpl
adc
minps
mov
push
xorb
cmp
stos
es
pop
push
jbe
push
xchg
icebp
jp
push
adc
push
xor
adc
xchg
inc
es
testb
push
sbbl
shl
andl
mov
out
nop
icebp
jmp
cmp
sub
adc
cmp
fisttps
fs
sbb
jae
inc
and
and
jae
jne
stos
dec
je
mov
mov
std
insl
inc
mov
sbb
ljmp
inc
scas
pushf
jne
jb
scas
sub
cmc
fwait
xchg
push
sub
mov
outsb
cmp
aad
or
ljmp
push
std
pop
lds
hlt
lahf
mov
xor
pushf
mov
and
outsb
mov
inc
out
es
pop
sub
mov
lcall
adc
mov
dec
ret
cwtl
mov
insl
insl
jb
mov
jg
jnp
pop
xchg
jbe
test
data16
cmp
jns
in
cld
pop
in
out
mov
pop
test
stc
sti
shrl
jmp
and
scas
cli
arpl
aas
adc
mov
mov
push
shrl
test
imul
test
call
scas
dec
test
and
jecxz
jmp
xchg
aam
xchg
pop
inc
dec
inc
sub
xchg
outsl
inc
enter
add
or
lods
jno
iret
and
xchg
mov
fisttps
les
pop
xchg
or
les
clc
ret
repnz
hlt
mov
insb
pop
aad
inc
adc
int3
rcrb
outsl
add
movsl
dec
imul
stc
mov
push
repnz
fwait
outsl
sbb
sbb
fidivrl
cmpsl
jne
dec
cltd
test
pop
inc
sti
ficompl
not
imul
bound
push
jb
and
movsl
cmp
arpl
sbb
das
mov
cmp
pusha
push
in
iret
daa
out
mov
rcll
shll
jmp
sar
test
cltd
cwtl
mov
out
push
cmp
popf
cwtl
jns
popa
sbb
aam
aaa
loope
push
and
push
push
loop
sbb
aad
repnz
mov
test
push
xchg
cmpsl
scas
out
dec
sub
cmc
mov
jmp
xchg
sbb
loop
dec
ljmp
aam
das
adc
fmulp
cltd
pushf
or
leave
jnp
outsl
mov
mov
push
adc
movsl
bound
jo
sub
aaa
cmp
jno
xor
mov
fsts
adc
mov
sbb
pop
shrl
daa
in
add
inc
adc
sub
xchg
mov
stc
adc
sahf
xorb
dec
les
pop
lds
mov
mov
fimull
adc
cli
testb
push
and
notb
inc
icebp
insl
add
push
push
fistps
adcl
xchg
data16
imul
jl
push
mov
ret
or
dec
ror
stos
xchg
sbb
mov
or
in
lods
mov
dec
out
gs
sbbb
movsb
popa
mov
and
cmp
fsts
mov
dec
jmp
pop
or
rcrl
push
pop
xor
xchg
xchg
add
mov
mov
stos
pcmpeqw
mov
movsb
pop
adc
jb
sub
xchg
push
mov
ja
mov
stos
and
stos
rcr
adc
movsb
je
lods
inc
and
sub
xchg
adc
rcrl
into
ret
pop
fisttps
jae
test
or
fldl
lret
daa
jmp
push
mov
sub
cmc
ss
adc
xchg
add
mov
lret
mov
push
enter
enter
roll
nop
jp
inc
xor
int3
jnp
inc
dec
fdivrs
pop
xchg
enter
das
push
fs
insl
adcl
in
jmp
movsb
push
fcmovnb
dec
fs
pop
in
loop
xlat
mov
fisubrs
add
mov
mov
jne
es
adc
xor
mov
pop
jbe
sub
push
lea
std
enter
mov
jns
cmp
hlt
push
jge
movsl
sar
dec
cmpsl
in
aad
mulb
mov
pusha
test
in
sahf
mov
pop
shl
sub
ja
in
aas
lret
cmp
icebp
jge
clc
and
sbb
and
fildl
cwtl
mov
aaa
xchg
jno
jo
mov
iret
dec
into
adc
sbb
fdiv
stc
dec
xor
movsb
icebp
mov
inc
xchg
mov
outsl
push
lea
repnz
xchg
mov
xor
or
jne
test
xchg
or
ja
int
hlt
jae
and
inc
adc
xchg
les
sub
out
xchg
je
inc
leave
lret
scas
jbe
push
jne
adc
jmp
mov
pop
mov
mov
sahf
repz
iret
mov
xor
fistpll
adc
mov
inc
in
adc
arpl
out
jb
into
nop
cmpsl
mov
mulb
pop
xchg
jne
movsl
sub
ljmp
or
lret
repz
insl
ret
hlt
mov
push
xchg
inc
xlat
push
stos
addr16
adc
gs
inc
daa
push
cmp
sub
pushf
pop
dec
incb
add
lret
stos
adcb
out
popf
xchg
jg
jg
orb
xchg
cmpsl
rcr
adc
adc
jbe
outsb
iret
and
mov
in
xchg
adc
xchg
xchg
xchg
mov
sbb
lea
inc
xchg
mov
sub
movsl
jg
mov
call
das
inc
push
xchg
jecxz
out
cmp
fiadds
xchg
jp
mov
ret
mov
repnz
aam
jecxz
xchg
xchg
mov
ljmp
movsl
push
pop
cltd
lock
hlt
shl
or
inc
ror
xchg
icebp
rcrb
pop
push
shll
das
sbb
cs
pop
lds
roll
add
sbb
call
mov
and
lret
lret
lret
sub
add
int
push
ficompl
ds
mov
popf
cli
cmp
xchg
xchg
push
pop
cmc
sub
sti
cs
das
dec
add
sbb
aad
repz
rcl
jle
mov
dec
lahf
daa
jle
int3
mov
mov
jp
adc
shrb
and
sub
iret
cmc
aam
and
jmp
lret
daa
mull
aam
inc
jb
lret
sbb
maskmovq
imull
cmpsl
test
or
or
imul
sub
out
clc
js
mov
jmp
mov
sub
sbb
push
clc
dec
dec
xchg
bound
imul
insl
stc
test
cmove
dec
pop
scas
out
jle
inc
fdivrs
dec
or
das
lea
jle
ss
loopne
push
rcrb
pop
xor
mov
jge
dec
mov
add
sub
iret
xorb
push
fiadds
rorl
mov
loopne
mov
and
cmpsl
inc
in
dec
mov
xchg
inc
in
xchg
inc
xchg
and
lahf
add
pop
xor
dec
cmp
mov
mov
lods
mov
mov
decb
push
ljmp
sbb
push
ja
mov
mov
mov
iret
imul
in
mull
insb
and
xchg
adc
sbb
sbb
shlb
pop
in
mov
scas
mov
pop
sbb
jbe
adc
inc
push
imul
lods
lods
in
cmp
inc
js
adc
bound
ds
ret
xchg
add
shl
lcall
jg
sub
rclb
push
lds
movq
jg
sbb
pop
mov
sub
pop
or
test
pop
or
xchg
cmp
lea
stos
push
sbb
fs
inc
rorl
cmp
push
adcb
and
jno
mov
dec
loope
xchg
cmp
push
cli
cmp
mov
add
jb
xchg
ja
or
fmuls
push
orb
lds
cltd
mov
mov
cmp
sub
jge
repnz
ss
mov
ret
dec
roll
out
adc
inc
je
push
pop
outsl
sub
lret
sub
in
into
or
loopne
and
jmp
add
add
js
add
fs
fmull
outsb
cmp
or
dec
xor
mov
dec
jo
cmpsb
test
inc
not
daa
lods
pushf
lock
aaa
scas
enter
adc
inc
ja
fwait
rcll
xchg
mov
incb
js
mov
jae
sarl
fstps
push
dec
cmp
mov
jae
jge
mov
or
and
repnz
into
in
xor
adc
test
inc
fld1
push
fcoml
jno
add
popf
xor
mov
cwtl
sub
lret
jb
fnstcw
repz
mull
aas
cwtl
xchg
in
mov
sbb
inc
loop
repz
fstps
xor
mov
icebp
and
std
fisubrl
andl
pop
xchg
xchg
pusha
iret
and
cmp
inc
and
push
fdivl
push
mov
test
jo
ror
loopne
imul
mov
adc
outsb
jae
xchg
mov
repnz
mov
pop
dec
scas
dec
cmpsl
les
cmp
clc
into
out
jg
xchg
lcall
sub
xor
aas
lock
out
rorl
or
push
lock
test
daa
pop
movsb
sub
push
fisubrl
xchg
xchg
hlt
enter
pusha
dec
jbe
cmp
scas
cli
sbb
fdivl
jne
cmc
arpl
mov
sbb
xor
pop
lret
jle
shlb
mov
mov
sub
lea
sar
xchg
je
sti
loopne
push
jno
cmpsl
rcr
cli
mov
lods
adc
sbb
adc
ds
sbb
js
and
stc
shr
repz
sbb
std
call
dec
cs
popa
sbb
loope
inc
iret
daa
inc
rcrb
fsubrl
xor
ret
cmp
andl
or
sbb
pop
push
pop
xor
test
push
addr16
and
add
fcmovnb
sbbb
pop
xchg
push
dec
test
negl
arpl
lods
mov
repz
stc
sti
push
bound
adc
xchg
adc
aas
stc
int3
imul
aaa
add
xchg
sub
les
inc
arpl
and
mov
cmp
cmp
xor
pop
xor
sti
sti
dec
and
xor
and
jmp
fnstsw
mov
stos
jecxz
mov
inc
stc
jbe
stos
jecxz
xchg
jnp
inc
pop
and
sti
push
sbb
cli
xor
loop
push
xor
mov
jmp
jns
ds
and
xchg
xor
add
and
mov
xor
mov
imul
jmp
inc
in
mov
insl
pop
fdivl
sub
lock
in
decb
sbb
push
in
add
xchg
adc
fwait
jae
fwait
out
lock
mov
loop
test
mov
pop
xor
pop
cmp
pop
pusha
inc
mov
jne
push
stos
aaa
ror
mov
or
sbb
cmpsl
dec
sti
inc
aaa
xchg
inc
sub
add
add
sarl
xor
or
sub
fcomip
push
cmp
and
loop
mov
rcll
xchg
out
fcmovnbe
mov
or
test
popf
mov
pop
cmovo
and
cmp
lea
jbe
xchg
dec
stos
rsqrtps
jg
jecxz
icebp
addl
dec
out
jecxz
mov
mov
cmp
xlat
cwtl
hlt
jmp
dec
or
xchg
fisubs
ret
pop
mov
scas
mov
cltd
pushf
stc
mov
rol
sahf
jg
out
aad
aam
je
js
decb
adc
cmp
xchg
lods
shlb
lret
mov
test
xchg
pop
icebp
cmpb
cwtl
decb
mov
fsubl
pandn
lret
fisttps
shlb
les
dec
dec
and
lods
inc
lods
pop
adc
lods
js
pop
hlt
test
cmpsl
das
cmc
out
imul
insb
stos
mov
repz
jo
in
aad
or
in
cs
int3
out
nop
add
jno
cmp
xchg
sub
pop
push
cli
sbb
sbb
lret
sbb
pcmpeqw
incb
xchg
inc
jae
cltd
mov
mov
pop
ds
dec
push
xor
push
in
mov
clc
mov
mov
test
push
lods
rolb
sahf
sub
ret
outsb
push
cmpsb
jae
fucomp
icebp
ds
adc
push
jnp
cmp
stos
push
adc
inc
inc
cmp
test
add
nop
sub
loope
imul
cmp
loop
jne
fstpl
ss
sbb
or
add
or
cltd
dec
cmp
mov
inc
and
push
fiaddl
sahf
sbb
push
xchg
dec
adc
cmp
lods
jae
orl
stos
das
sbb
jecxz
in
imul
jb
repnz
jecxz
stos
aam
je
lahf
stos
mov
daa
sarl
leave
push
mov
test
mov
loop
add
inc
popf
out
pop
fcoml
mov
outsl
ret
cmc
cwtl
call
rep
nop
in
sahf
mov
pop
movsl
ficoml
sub
pop
test
pop
dec
jmp
lret
leave
arpl
loopne
fistpl
sbb
dec
aas
add
push
and
loop
push
sub
push
lock
insb
pop
pop
mov
neg
iret
push
adc
aas
mov
lds
sub
sub
cmp
mov
fsubs
jl
pop
imul
js
fsub
xlat
outsl
pop
push
movsb
adc
lock
hlt
sub
sub
and
xor
outsl
or
stc
xchg
fcomi
pmulhw
dec
sbbb
pop
mov
lcall
push
inc
push
push
pop
outsb
sub
mov
ret
lods
scas
loop
mov
out
movsb
cmp
push
adcl
cltd
fcoms
push
std
mov
pop
push
and
jbe
sub
stc
rorb
pusha
dec
jg
shlb
sbb
pop
cmpsl
xchg
lods
cmpsl
js
inc
lahf
iret
push
lret
loope
push
fdiv
in
ljmp
jle
les
pop
dec
pop
out
jge
subl
in
mov
cmp
adc
cwtl
inc
cmp
and
cwtl
loop
mov
lcall
add
aam
leave
sarl
hlt
imul
jns
in
into
fstpl
sbb
sbb
push
mov
test
fcompl
pop
cmp
scas
inc
cmc
les
and
dec
xchg
arpl
or
cmp
xchg
imul
and
add
mov
nop
mov
inc
popf
ljmp
sbb
mov
iret
push
jg
call
arpl
mov
sti
inc
inc
ljmp
dec
adcl
adc
orl
fwait
movsb
gs
fistpll
stos
add
mov
lock
outsl
or
daa
insb
and
cld
jle
cld
mov
sub
push
jne
cmpsb
sbb
out
and
dec
dec
fadd
insl
inc
leave
xor
fcmovnbe
jle
cmp
jge
jns
jge
mov
inc
lahf
add
mov
and
lds
aad
aam
fnstsw
ret
xchg
orb
inc
in
pop
pop
cmp
sti
arpl
cmc
mov
sarb
push
pop
call
add
out
jp
or
or
loopne
sbb
ret
sub
aaa
xchg
int
mov
mov
lcall
xchg
andl
test
test
sbb
jl
aaa
adcl
leave
push
test
pop
shll
inc
dec
rcll
sub
divl
xor
xlat
mov
lret
mov
jmp
mov
insb
ficompl
insl
push
xchg
in
dec
sti
mov
mov
int3
data16
jg
mov
pop
inc
cltd
lds
popf
pop
clc
sbb
jle
insl
sbb
push
clc
and
cs
cmp
adc
mov
fldl
lods
cmp
insb
mov
mov
aam
push
loope
and
out
gs
loope
js
pop
rolb
ret
into
add
lret
mov
pop
inc
data16
daa
xlat
adc
bnd
hlt
xchg
imul
push
aad
cmp
adc
pop
cmc
jnp
mov
pop
add
and
insb
add
movb
imul
cmp
jle
mov
imul
scas
aas
add
xor
xchg
pop
push
loopne
test
test
mov
xchg
sti
xchg
xlat
pop
mov
dec
out
and
xor
fidivrl
aad
ljmp
dec
test
push
and
cmpsb
sbb
fimuls
int3
loop
fcoms
js
add
test
stos
or
adc
adc
adcl
xlat
or
jmp
ret
cmc
rol
adc
cwtl
outsb
subl
push
arpl
aas
jge
int
add
xchg
bound
inc
dec
icebp
and
mov
push
adc
dec
push
push
insl
pop
or
lods
jns
dec
out
add
out
cmpsb
inc
outsl
push
cmp
ja
mov
cwtl
addr16
mov
data16
lcall
mov
fdivs
inc
mov
dec
dec
mov
divl
jno
adc
jb
movsb
xchg
cs
je
mov
js
sti
mov
mov
ret
shl
sbb
sbb
pusha
enter
jo
push
and
outsb
arpl
bnd
outsb
daa
pop
adc
mov
jp
ljmp
push
add
fnstenv
inc
pop
mov
mov
sarb
xorb
cltd
mov
adc
and
loopne
nop
xchg
mov
pop
pop
lret
outsl
xor
leave
or
adc
inc
xlat
cmpl
and
push
mov
dec
lahf
and
xchg
sub
xor
push
into
inc
xchg
sub
mov
xlat
sub
mov
scas
jne
je
mov
movsb
inc
mov
cmc
lds
pop
movsb
xchg
lcall
jnp
push
push
dec
jecxz
jmp
xchg
aaa
ret
test
sbb
sbb
dec
ficoms
mov
shll
es
jo
and
xor
xor
dec
pushf
and
into
dec
arpl
ret
mov
sbb
insb
rcrl
sbbb
cmp
aaa
jmp
adc
adc
push
imul
mov
lods
ja
fs
test
insl
sahf
rcl
xor
and
ffreep
ja
lahf
sti
mov
pop
add
out
sbb
adc
loop
push
mov
mov
cmp
mov
push
mov
inc
inc
lock
lahf
icebp
push
fadd
filds
mov
loopne,pt
or
dec
cmpsl
or
inc
outsb
mov
push
sbb
loop
cwtl
cs
repnz
sub
sbb
in
iret
xchg
xchg
pop
gs
or
cltd
bound
push
sbb
nop
xlat
cmpb
add
lods
jns
sbb
bound
sbbb
xchg
cwtl
xor
lods
hlt
jnp
movsb
add
xlat
xor
mov
in
mov
insl
stos
add
in
iret
lret
jnp
leave
jbe
incb
push
call
test
out
mov
mov
in
pop
loope
fucomp
sbb
adc
add
ds
out
scas
sbb
sbb
test
sub
pop
or
jge
xor
mov
mov
je
adc
jae
dec
push
jo
mov
pop
iret
mov
mov
lea
out
and
push
mov
fidivrs
pop
inc
mov
lea
out
test
test
add
push
cs
fs
cmp
jmp
and
fldenv
cmp
cmp
in
inc
mov
add
xchg
xor
stos
int
pop
lret
mov
adc
jp
xor
inc
jmp
mov
js
rcrb
xchg
sti
scas
popf
add
push
lea
test
push
lret
cmpsl
stos
push
mov
pop
aas
jmp
cmp
imul
mov
jae
daa
cmp
mov
psubw
push
inc
cmp
pushf
in
mov
push
test
jl
cwtl
inc
in
inc
jge
lahf
fldl
sbb
sbb
xchg
clc
push
xchg
jae
or
movsl
cltd
int3
test
xchg
mov
cmpsb
push
inc
mov
loope
test
int3
push
xchg
jno
call
lret
js
xchg
cmpsl
xor
cmp
les
mov
push
xchg
ja
xchg
sahf
arpl
fadds
xchg
inc
test
pushf
xor
push
sarb
jg
mov
inc
testb
mov
call
ffree
dec
aad
jp
pop
lea
dec
and
hlt
shl
jecxz
insb
xchg
les
mov
lock
icebp
loopne
ljmp
and
mov
mov
stc
mov
jl
sub
shrb
or
cmp
pop
pop
adc
daa
adc
cmpb
cmp
into
cmp
subb
and
stos
push
int
repnz
mov
cmp
aad
shll
stc
add
pop
rcrl
mov
dec
jns
inc
in
call
sub
lret
mov
sub
inc
jle
mov
in
mov
xor
add
lods
dec
push
ret
lods
lret
sbb
sbb
imul
add
push
ret
mov
ss
mov
aaa
fnsave
lret
adc
or
das
or
loope
inc
mov
loop
push
sbb
xchg
scas
pop
mov
aas
fwait
imul
push
sarl
xchg
push
or
pop
and
inc
stos
iret
test
jne
jbe
loop
sub
ret
jno
xchg
pop
pop
fdivl
jno
aas
cmp
ret
mull
push
fisubrl
andb
jmp
mov
cmp
cmpsb
mov
in
cwtl
mov
or
hlt
dec
in
cld
mov
dec
shrb
xchg
pop
das
jbe
test
dec
inc
inc
ficoms
in
das
xlat
pop
pop
test
dec
clc
jb
lret
xor
push
pop
or
arpl
and
dec
adc
lea
xlat
out
push
mov
sahf
sbb
int
outsl
cmp
in
out
pop
jnp
add
loopne
add
in
jb
dec
adc
cmpl
mov
inc
xchg
stc
inc
scas
ja
fstpl
pop
push
sbb
daa
pop
fwait
cmc
es
sbb
lcall
add
clc
psubusw
repnz
mov
pop
sbb
xchg
in
mov
das
das
add
enter
cmpsl
pop
addr16
mov
lea
in
das
rorl
pop
pop
pop
push
adc
lds
or
test
aam
push
jmp
xor
pop
adc
aaa
inc
cli
lcall
fdivrs
lea
mov
pop
enter
roll
in
pop
shrl
ficomps
sbb
mov
jno
add
jmp
movsb
cmp
decl
ret
jle
lret
adc
aad
ja,pt
pop
or
std
fcmovbe
sub
mov
lcall
inc
jnp
clc
insl
add
fsubl
outsb
mov
lcall
xchg
addl
mov
fwait
xchg
dec
xchg
xor
pop
imul
mov
loope
cld
jecxz
sbb
std
repz
mov
les
adc
adc
adc
push
xchg
xor
jg
xorl
fidivrl
shl
cmp
out
mov
incb
xchg
in
call
mov
mov
and
mov
fimuls
out
into
cmc
mov
mov
outsl
sbb
ss
cmovo
inc
pcmpgtb
or
ss
insl
loope
mov
xchg
insb
fidivs
popf
call
loope
rclb
int
push
xor
in
xchg
pop
ret
cmp
repnz
sub
fldcw
punpckldq
test
and
cwtl
pop
mov
fdivrs
push
adc
cmc
aaa
stc
inc
sbb
rorl
adc
fiadds
insl
inc
popf
push
adcl
rcr
add
add
sti
lcall
fidivs
gs
mov
iret
lcall
sbb
inc
push
test
fcmovnu
imul
sub
icebp
mov
shll
js
xor
or
insb
aad
jne
stos
lea
hlt
adc
inc
xchg
sbb
std
insb
test
jle
movsb
mov
push
pop
or
mov
test
rcrb
pop
mov
sub
femms
out
adc
pop
cltd
dec
imull
test
test
jg
js
into
loop
xchg
jl
out
lea
cwtl
scas
mov
shrl
xchg
in
sbb
mov
lods
sarb
adcl
movsb
stos
push
lret
or
in
in
js
jge
cmp
push
mov
scas
or
xchg
jp
mov
xchg
out
insl
mov
aaa
mov
cmp
dec
mov
arpl
jo
dec
cli
insl
mov
lods
fmuls
jns
daa
sub
xor
cmp
aad
in
push
faddl
insl
jmp
outsb
pop
adcl
adc
lock
or
mulb
iret
jmp
lahf
negb
push
sub
add
loop
add
vmptrst
or
pop
rcr
fdivrs
pop
sbb
xor
in
je
mov
xor
pushf
jns
inc
adcl
mov
xchg
sbb
and
cmc
movsl
cmp
push
and
push
aad
add
sbb
and
ja
sbb
xchg
subl
lret
pop
test
lock
cmp
lcall
mov
pop
sbb
roll
xor
pop
roll
icebp
push
pop
negl
shlb
add
negl
dec
es
notb
or
sti
aam
or
add
lea
sahf
enter
jmp
daa
jle
add
cmp
leave
push
inc
testl
movsb
or
movsl
lods
gs
mov
cs
jnp
cmpb
and
push
dec
push
rol
pop
or
mov
fisttpll
fwait
scas
or
adcb
xor
cmp
dec
hlt
sbb
and
inc
aaa
ss
stos
repz
mov
cmp
adcb
ffreep
dec
mov
dec
sub
and
aas
lret
outsl
mov
sahf
add
sbb
jns
test
inc
into
jp
fbstp
inc
sahf
shll
mov
mov
jno
or
dec
insb
mov
push
mov
mov
aaa
pop
fldenv
int3
fbstp
cs
ret
enter
ljmp
dec
in
mov
pop
je
cmpsl
iret
push
xchg
in
test
repnz
xor
dec
cmp
mov
adc
iret
popl
push
incb
xchg
xor
clc
scas
jg
pop
repz
mov
mov
push
inc
mov
push
in
push
pop
push
mov
fistps
xchg
clc
repz
sbb
mov
hlt
ret
mov
push
mov
inc
es
xorl
cwtl
mov
xchg
sarl
decl
mov
lret
in
dec
hlt
jnp
inc
outsl
shll
bnd
leave
sti
push
leave
leave
push
dec
dec
lahf
sub
jmp
push
pminsw
add
mov
and
mov
movsl
nop
loopne
or
int3
cmpsl
pop
fsubrl
cld
dec
sbb
loop
mov
jle
pop
adc
or
out
mov
and
jmp
sarb
inc
push
lods
xor
ds
out
ret
loopne
sub
inc
movsl
mulb
jno
scas
cwtl
push
mov
and
pushf
or
out
mov
aaa
mov
andb
mov
dec
popf
or
cmp
fnstcw
lret
aas
mov
imul
hlt
and
mov
xor
add
nop
pushf
jns
fcompl
jmp
cltd
mov
jecxz
dec
push
push
cmp
sbb
mov
mov
out
test
and
popf
mov
mov
sub
aam
aam
pop
or
and
stc
adc
sub
and
xchg
rol
xchg
call
es
aas
jl
cmp
aas
pop
push
cmp
pop
cltd
inc
pusha
or
inc
sbb
jp
cmp
pop
xchg
cld
bound
gs
addr16
xchg
enter
jne
popa
rcrb
in
loope
jae
push
scas
addr16
jp
mov
rcrl
adc
cmp
cmp
ja
stos
cmp
push
nop
arpl
xchg
or
popf
sbb
push
pop
mov
out
movq
dec
mov
xchg
imulb
mov
mov
jno
dec
or
bswap
ds
xor
push
movsb
mov
jno
sbb
popf
mov
outsl
shrl
add
adc
mov
push
imul
inc
pop
out
or
jle
xlat
or
and
sbb
out
stc
adc
dec
sahf
pop
arpl
add
call
sbb
aam
lods
vcmppd
lret
cmc
pop
js
mov
xor
mov
mov
shrb
mov
adc
and
xor
fcmovnu
stc
adc
cmp
fmul
sbb
jge
js
lods
iret
subl
and
adc
adc
stc
mov
nop
pop
adc
inc
lahf
mov
or
in
pop
mov
mov
push
test
mov
sub
fcmovnu
pop
icebp
push
inc
call
inc
orb
xchg
mov
jns
pop
insl
mov
scas
fildl
xchg
xchg
popa
mov
lods
mov
jl
cmpl
call
orl
das
adc
out
shlb
ja
push
out
lds
pop
loope
test
lods
std
clc
mov
mov
cmc
pop
negb
push
adc
lds
and
inc
jno
pop
mov
sbb
inc
outsl
add
bound
int3
roll
mov
decb
ljmp
loope
dec
mov
lret
fcmovbe
pop
inc
sub
imul
pop
ficoms
sbb
imul
jnp
out
mov
addr16
mov
pushf
ds
jae
mov
inc
sbb
inc
ds
inc
div
mov
push
insl
pop
and
cmp
adc
pop
hlt
xchg
dec
loope
out
lods
insl
push
out
pushf
xchg
mov
pop
test
outsl
imul
out
sbb
cmp
outsb
push
jno
xor
mov
outsl
xor
cmpsb
cmp
mov
pop
jne
andb
mov
add
xchg
dec
ret
nop
xor
pop
pop
push
xchg
or
jne
pop
push
imulb
mov
cltd
into
enter
aaa
jne
int
in
xchg
cmpb
mov
or
fcomip
jg
es
decl
inc
sub
cli
mov
mov
dec
int
xchg
inc
jle
js
sbb
fldl
icebp
dec
xchg
pop
adc
call
scas
jg
pop
push
loopne
fs
sti
xor
cmc
pop
int3
insb
jne
adc
push
orl
idivl
push
cmp
push
ja,pt
fcomip
hlt
rolb
daa
sbb
xlat
iret
mov
sub
les
enter
mov
and
pop
pop
faddp
push
or
ret
xchg
and
loope
cld
push
push
dec
mov
divb
dec
jmp
je
loop
dec
pop
ficompl
dec
fcoms
and
mov
xchg
lea
inc
add
notb
pop
mov
popf
fcompl
xchg
scas
fisttpll
in
stc
adc
xchg
sbb
cltd
adc
out
shlb
dec
loop
jge
div
pop
iret
push
sbb
fcoml
in
sub
jmp
orl
flds
filds
mov
jbe
inc
xchg
outsl
outsl
inc
mov
mov
jecxz
fucomip
pop
clc
imul
stc
mov
cld
xchg
jne
jp
pop
aaa
ret
sub
insl
inc
push
mov
mov
mov
sub
loop
push
mov
pop
push
mov
sbb
push
aad
pop
sti
jb
rcr
sarb
std
inc
push
mov
repz
popf
jge
jae
and
lret
jnp
cmp
mov
xor
arpl
sbbl
mov
call
int
std
dec
or
orl
imul
add
pop
push
or
stc
cwtl
mov
int3
adc
add
ja
in
and
or
mov
dec
push
dec
je
je
lock
ss
cwtl
sbb
mov
pop
pop
dec
fwait
cmp
mov
outsb
mov
repz
mov
popf
pop
mov
cmp
push
mov
cld
das
test
in
mov
adc
fistl
sbb
jnp
mov
insw
adc
loope
sbb
xlat
cltd
dec
mov
adc
in
sbb
push
jo
incb
mov
xor
lahf
loop
cmp
push
addb
outsb
or
sti
sbb
daa
test
pop
xchg
inc
jne
jecxz
lcall
mov
push
imul
jecxz
xchg
add
cmpsb
roll
repnz
jb
sub
or
push
mov
jo
jns
and
out
pop
jge
dec
or
inc
cmp
fsubrs
ljmp
sub
cmpsb
pop
fistps
lret
pop
int
sbb
lods
add
aas
cli
insl
in
js
fs
nop
mov
push
test
pop
ret
push
xchg
ficomps
xor
js
call
scas
les
in
cli
leave
dec
bound
test
adc
insl
cmc
push
pushf
pushf
mov
out
adc
xorb
cli
outsb
out
int
mov
int3
and
pop
and
xchg
xlat
fmul
popa
pop
outsb
or
insl
inc
sbb
cmovge
scas
js
outsl
pop
jg
outsb
or
push
push
xor
mov
or
dec
mov
fcomps
cmpsb
scas
and
mov
fs
xchg
push
xor
mov
push
sbb
jle
fistps
and
jo
and
pusha
sti
or
inc
jb
mov
inc
leave
jns
dec
dec
fwait
mov
test
xchg
testl
or
sbb
sbb
dec
sbb
out
repnz
xchg
stos
dec
fnstenv
cwtl
ret
push
das
lret
in
or
dec
popa
jb
das
out
pop
jb
movsl
nop
pop
jle
xchg
gs
pop
rcr
mov
repz
loopne
cmp
out
les
xlat
adc
cltd
add
and
jge
cs
jmp
xchg
pop
adc
stos
jno
cwtl
push
cmp
inc
pop
xorb
outsb
jge
cmp
cmpsl
lock
dec
pop
and
subl
out
and
sub
mov
aas
sbb
add
cmp
pop
movb
aaa
hlt
cmp
sub
cld
pushf
sbb
scas
gs
cld
enter
or
addr16
pushf
ds
mov
out
xchg
or
js
stos
lods
fdivl
nopl
cmp
insb
vpandn
sbb
or
js
test
jmp
push
jno
cli
aad
jnp
dec
mov
pop
and
int3
inc
fcomi
mov
lock
pusha
sbb
pop
inc
add
xchg
loopne
test
sbb
cmp
orl
lret
xor
outsl
das
xchg
cmp
nop
pop
mov
cmp
inc
adc
in
insb
pslld
mov
notb
adcl
jns
dec
xchg
inc
add
dec
in
xchg
ret
inc
and
mov
repnz
and
sbb
cmp
jl
loop
mov
sti
or
pop
roll
sbb
movsl
and
icebp
mov
fwait
shlb
outsb
jmp
popa
or
sti
push
and
insl
mov
jb
lcall
push
and
mov
aam
xor
shr
scas
sub
push
xor
and
les
shr
adc
test
and
cmp
or
imul
lea
or
cmp
push
xchg
cmp
mov
mov
jne
push
les
cs
sbb
loopne
jbe
mov
pop
test
lods
jo
push
mov
je
fnstenv
outsl
movsl
cmp
pushf
das
or
idiv
mov
lahf
pop
sbb
jno
jecxz
aam
xorl
dec
inc
mov
and
lds
divb
lret
les
les
cld
decb
fwait
repz
ficompl
icebp
jbe
jle
mov
push
std
pop
adc
nop
nop
std
push
dec
xor
ds
inc
xor
pop
jno
pop
mov
dec
cmpsb
mov
adc
js
jl
push
xchg
lcall
call
lods
nop
call
stos
pop
pop
out
add
aam
dec
lods
movsl
jnp
inc
mov
call
arpl
sti
dec
test
insb
adc
xor
les
pop
nop
in
icebp
ficoms
xor
sub
and
and
dec
ss
mov
in
lahf
cld
xor
or
dec
mov
les
call
popf
adc
daa
out
pop
movb
mov
rolb
pop
leave
pop
dec
sbb
xchg
bound
push
inc
dec
fadds
fwait
cmp
or
aad
insb
int3
push
pop
and
mov
repz
dec
ja
aam
xchg
ss
add
fwait
dec
popf
out
sahf
fnsave
mov
xlat
lods
std
add
add
idivl
shlb
mov
jmp
in
xchg
test
out
pop
stos
imul
sbbb
adc
out
mov
jmp
in
dec
por
in
jge
leave
repz
add
dec
ljmp
add
jle
in
fbstp
cmp
scas
std
mov
in
pushf
add
lahf
pop
dec
movsl
or
push
mov
jge
sti
nop
outsl
enter
mov
sbb
ret
mov
pop
mov
pop
fsubrl
shlb
int3
sub
xor
bound
loopne
xchg
les
shll
shll
and
adc
dec
xchg
aad
mov
in
imul
ja
cwtl
popa
movsb
add
stos
in
dec
fs
or
filds
mov
mov
lods
scas
mov
add
dec
dec
fisttpl
push
jbe
jns
out
fwait
pushf
shr
mov
repnz
or
add
stos
pop
je
addr16
and
leave
fists
add
divl
push
sub
xor
or
fsubrs
outsb
scas
test
cwtl
iret
in
testl
arpl
cmp
pop
mov
push
loop
mov
gs
je
push
cld
xchg
and
pop
popa
out
je
xchg
xchg
jne
xchg
es
fmulp
pushf
pop
fsubrl
jae
sub
filds
push
cmp
mov
inc
inc
xor
dec
or
cmpsl
js
shrl
imul
mov
mov
in
in
pusha
int
jne
test
imul
fnstcw
xchg
fdivrs
sbb
adc
cmc
or
cs
fs
sub
mov
pop
push
popl
inc
pop
mov
sub
sub
jae
pop
jns
rcr
movb
and
in
fcoml
decl
fiadds
jge
lret
lds
cmpsb
mov
jmp
in
ror
popf
mov
add
jbe
push
scas
and
cmp
jnp
mov
dec
outsl
shll
xchg
int
cmpsb
test
sub
rorb
sub
sbb
jl
inc
pop
jno
mov
mov
jmp
push
mov
out
inc
jp
dec
sub
jmp
and
cmp
cmpsl
dec
out
lock
out
dec
test
inc
ljmp
inc
add
mov
mov
dec
and
sbb
rcr
jae
lret
cmovl
ds
sub
jle
out
aam
fdivrs
jmp
mul
loopne
mov
fdivrs
out
mov
pop
dec
pusha
popf
mov
xchg
daa
add
das
push
test
enter
push
mov
cmp
mov
imul
jno
out
lret
add
shlb
cltd
mov
popa
mov
sbb
aas
push
and
jno
outsb
push
lods
xchg
jl
mov
lahf
adc
xchg
add
popf
xchg
push
dec
lcall
bound
ret
in
mov
and
jae
insl
std
das
or
arpl
xchg
leave
jecxz
cmp
xor
int3
data16
jo
test
inc
lcall
mov
popl
xor
mov
dec
xor
xchg
xor
pushf
loope
lahf
ret
pop
sub
mov
adc
mov
je
mov
jmp
push
inc
cmpsb
lds
pop
rcrl
xchg
xor
add
test
add
into
xor
dec
fcomip
cli
arpl
test
mov
ds
xor
ljmp
mov
or
in
dec
clc
mov
add
shlb
mov
pop
or
cmp
add
ss
loopne
mov
stos
dec
cld
cmpsb
and
push
push
mov
inc
loop
pop
ror
ja
push
sbb
cmp
add
xor
es
dec
mov
jp
sbb
sbb
outsb
fcomi
pop
daa
inc
ja
test
mov
jne
out
sbb
sbb
pop
mov
xor
movsl
pushf
pushf
xchg
mov
mov
cmp
sbb
mov
cmpsl
sbb
daa
and
cmpsb
loopne
fidivrl
dec
or
inc
jmp
pop
mov
dec
sbb
negb
test
and
cwtl
cmp
in
inc
lret
sti
mov
mov
loop
or
xor
xchg
lods
shl
xor
ret
andb
and
bnd
lahf
xchg
addr16
rcll
xchg
daa
and
je
mov
scas
inc
rorl
xchg
stc
and
inc
loopne,pn
fidivrl
jmp
pop
pop
sti
fmul
int3
sub
fstpt
loope
stos
outsl
std
pop
xor
push
sti
vmovq
mov
cmp
inc
push
enter
adcl
std
mov
or
pop
dec
pop
fucom
pop
repnz
jecxz
movsl
mov
stc
push
mov
jb
pop
clc
sahf
aad
out
mov
add
adc
out
mov
jmp
push
and
inc
pop
nop
fndisi(8087
ljmp
rcrl
xor
dec
in
xchg
out
adc
bound
sub
mov
movsl
mov
mov
roll
and
scas
jnp
mov
jg
pop
cld
jbe
sub
jno
adc
pop
daa
cli
mov
or
lods
lret
add
mov
push
ret
cmp
inc
jmp
std
subl
cltd
das
loopne
fsubrp
rolb
out
and
jno
xor
jae
ja
lcall
test
dec
std
push
in
filds
sbb
bound
int
jno
insb
dec
pushf
pop
push
rorb
out
enter
or
push
rolb
cmp
lock
sbb
mov
mov
hlt
scas
rcrl
xor
push
in
stos
push
sbb
shl
mov
and
lods
aam
mov
mov
ja
mov
mov
movsl
scas
aas
icebp
outsl
negl
add
dec
out
xchg
fstl
add
sbb
ret
ljmp
cmp
mov
lahf
daa
and
push
inc
int3
sub
js
inc
fnsetpm(287
lret
xchg
test
into
mov
sub
insl
mov
mov
mov
inc
inc
mov
icebp
mov
dec
jb
sbb
insl
lock
or
mov
inc
sub
das
adc
mov
fdivs
jns
xor
fdivs
aaa
call
xor
loope,pn
mov
shll
in
stos
or
insb
mov
adcb
mov
cld
jmp
in
or
fdivrl
gs
sub
adcb
or
cmp
test
mov
dec
aaa
lcall
stc
in
mov
cmp
push
dec
adc
mov
lods
xor
jle
cmp
loopne
mov
out
add
rorb
in
mov
or
pop
sub
mov
xchg
xchg
jecxz
or
adc
jb
mov
add
and
adc
repz
adc
pop
sti
out
push
imul
adc
dec
xchg
add
xor
jle
pop
repnz
repnz
pop
stos
out
daa
push
ljmp
popa
sub
add
mov
push
lret
hlt
clc
pop
nop
xchg
movsb
roll
es
shrb
and
daa
sarl
cs
shlb
xchg
aas
inc
into
in
mov
xchg
cwtl
jge
out
and
jl
and
mov
test
imul
and
mov
enter
outsl
cmp
pop
das
cli
lcall
sub
cwtl
sbb
sub
enter
mov
cs
cld
rcr
jo
sub
sbb
mov
add
dec
mov
cmp
lock
add
dec
inc
mov
and
mov
mov
sub
imul
xchg
xor
addb
inc
add
xor
pop
mov
jae
mov
or
popf
jae
push
push
pusha
or
pop
adc
jecxz
jno
jmp
popf
inc
xor
int3
jns
movsb
out
cltd
mov
sub
das
lock
push
push
dec
lock
dec
add
rcll
addb
lea
nop
xchg
xchg
mulb
jbe
adc
jle
mov
push
ret
mov
stos
jg
lock
pop
loopne
xor
push
mov
loope
jmp
jbe
dec
add
loopne
test
mov
mov
and
cltd
lea
lahf
cmp
and
addl
push
aaa
scas
nop
cmc
das
imul
addl
cmp
pop
lds
call
daa
ror
jle
mov
cmp
pusha
jbe
out
sbb
jle
movsl
inc
rclb
imul
fistpll
mov
ljmp
or
push
ret
jge
push
inc
and
in
and
push
add
stc
shl
or
and
xlat
push
cmp
scas
sarl
mov
sbb
icebp
xchg
lods
push
cmp
cmp
loopne
imul
pop
scas
test
adc
xlat
ds
imul
add
lods
pop
push
dec
push
rolb
iret
clc
decb
mov
pop
mov
shll
lret
ret
jae
insl
outsb
cld
inc
fs
xchg
xchg
jmp
xor
push
xor
test
lods
mov
out
xor
xor
int3
mov
inc
mov
jmp
mov
int
xorb
pushf
or
lea
add
cmpl
push
roll
push
adc
test
out
push
daa
pop
mov
ljmp
fcoml
xor
cmpsl
loop
test
sub
and
and
mov
stos
aam
loopne
and
push
pop
adc
mov
pop
inc
insb
pop
lret
sub
fsts
daa
push
addb
jp
jge
loopne
shll
fs
mov
popf
lea
jb
push
fidivs
pop
mov
dec
xchg
cmpsb
je
inc
out
xor
sub
lods
mov
aam
or
shrb
xor
scas
mov
decb
dec
stos
les
cmp
inc
sub
ljmp
imul
or
mov
mov
loopne
ljmp
cs
dec
hlt
stos
sbb
jne
and
stos
inc
cmp
clc
pop
jnp
int
stos
dec
fdiv
push
jb
jecxz
xchg
fcoml
cld
pop
mov
cmp
test
test
xor
xchg
cmp
add
rclb
lcall
pop
push
mov
cmp
dec
movsl
rolb
fcmovu
add
sbb
sub
mov
pop
mov
hlt
inc
std
xchg
aam
stos
ljmp
push
push
sub
sub
dec
fsubs
fisttpl
es
popf
jbe
iret
subl
inc
sub
je
insb
ror
stos
outsl
outsb
insl
call
out
jmp
push
and
cwtl
push
inc
or
sbb
and
daa
subl
insb
cmp
mov
mov
enter
pop
jbe
cmp
push
fbstp
lock
int
ja
sub
dec
xchg
or
push
aaa
fwait
ljmp
or
stos
xchg
je
push
into
enter
xor
outsl
dec
pop
inc
ret
mov
mov
xchg
dec
xchg
pushf
dec
outsb
push
inc
mov
pop
jae
and
xchg
lret
lcall
ja
jno
movsb
xchg
jl
lret
insl
xor
and
push
movsb
pusha
add
repnz
add
das
lss
mov
adc
jns
and
pop
add
roll
jo
mov
sub
fcmovnb
or
repz
daa
cmp
mov
ss
sub
cmp
nop
lods
push
and
sbb
fldl
or
fnstsw
icebp
xor
push
sti
adc
or
aad
jle
push
cltd
inc
and
fwait
dec
pop
inc
cmp
int3
mov
clc
push
or
jg
pop
ljmp
incl
xchg
dec
jge
push
js
inc
mov
fs
ljmp
pop
or
lea
in
mov
in
movsb
adc
inc
lret
sbb
xchg
add
push
push
pop
dec
cltd
sahf
test
cmp
sub
rcrb
cwtl
add
shl
divl
bound
inc
pop
aad
test
push
cmp
orl
push
jge
add
sahf
outsb
xor
or
push
jae
pop
push
and
mov
lret
cmp
insb
adc
icebp
pop
sub
ds
cwtl
fldt
adc
jb
add
ljmp
pop
adc
sub
inc
int3
lcall
push
xlat
or
es
pop
std
add
nop
jae
incb
add
and
sub
sub
cli
jp
lea
je
enter
fwait
out
cmp
dec
mov
mov
pop
movl
xor
mov
push
pop
add
mov
mov
cs
or
pop
sarb
int
sbb
aad
mov
lods
int3
xor
das
into
pop
insb
addr16
inc
or
repnz
mov
cmp
das
jge
or
bound
out
ficomps
out
cmovns
and
aam
mov
mov
and
ds
dec
addb
lds
nop
sub
mov
push
inc
imul
xor
and
mov
mov
adc
pop
imul
cmp
cwtl
ljmp
mov
adcl
icebp
cmp
mov
jge
xchg
icebp
mov
cmpsl
xchg
mov
arpl
jbe
pop
push
in
sub
cmp
dec
out
dec
lret
push
aas
dec
pop
sub
pop
out
rolb
or
push
test
into
mov
insl
aaa
fs
stos
sahf
arpl
shlb
cmp
mov
subb
xor
xchg
lret
jecxz
jmp
adc
pop
aam
mov
cmc
ljmp
arpl
aad
lds
enter
mov
mov
sub
sbb
dec
std
out
xchg
adc
mov
or
xchg
fsubrs
cmpl
iret
and
jae
and
push
jb
ffreep
out
ficoml
stos
inc
int
lahf
push
cli
cmp
lods
repz
in
xchg
out
pop
ds
fsincos
rorl
mov
jne
xchg
xchg
cmp
aad
mov
icebp
adc
xchg
jnp
sub
sub
sub
mov
das
add
sbb
fwait
xchg
cmp
fcmovne
repz
xchg
jp
out
cmp
jae
mov
inc
lock
push
decb
inc
daa
out
mov
int3
out
clc
add
imul
or
pop
test
hlt
push
push
inc
outsl
shll
dec
jno
fisubrl
pop
in
jmp
fwait
jbe
and
shrb
pop
roll
lcall
mov
jbe
daa
out
sbb
mov
lahf
pop
mov
test
mov
in
xchg
pop
or
fsubl
scas
mov
and
sbb
ljmp
rorb
cltd
rolb
fidivrs
fiadds
push
sar
mov
shrl
cmp
ror
add
push
ljmp
mov
cmc
sub
adc
std
inc
ffree
sbb
or
repz
and
mov
inc
sub
int
or
cmp
dec
xchg
and
mov
jg
in
mov
cmp
cmp
dec
xor
loopne
push
sbbb
pusha
sub
push
loop
pmaxsw
mov
pop
mov
mov
gs
out
sbbb
arpl
sub
shld
push
inc
les
mov
negl
imul
jg
jle
pop
cmp
mov
or
sbb
test
push
into
gs
aas
lret
fwait
aas
lahf
sti
fcmovne
push
push
cmp
cmc
cmpps
call
pop
xchg
push
imul
es
cmpsb
lea
sbb
xor
cmp
inc
or
adc
idiv
add
jnp
les
lret
ret
rcrb
ficoml
xor
adc
sbb
pop
jnp
pop
jle
pop
jl
test
xchg
daa
pop
push
mov
popa
jns
inc
sti
jbe
mov
and
test
dec
push
sub
insl
dec
xor
loop
xorb
mov
sti
dec
xchg
pop
in
test
jge
cli
enter
shll
sub
jae
data16
lcall
xor
xor
mov
nop
cmp
dec
pop
out
jb
mov
shlb
push
das
mov
addr16
arpl
and
leave
mov
sbb
pop
adc
inc
cld
in
lods
mov
psubusb
insb
js
iret
jl
xor
jbe
and
add
push
aam
add
sub
xchg
cmp
dec
and
imul
sub
int3
sub
or
inc
mov
sbb
jl
mov
mov
cli
xor
sub
add
pusha
popl
loopne
out
add
imul
test
notl
dec
icebp
mov
cmp
xor
sbb
mov
subb
inc
pop
mov
rolb
jle
rorb
or
fdivrp
in
dec
jo
enter
add
cmp
lahf
cmp
sub
lods
movsl
pop
jp
shlb
inc
mov
movsl
cwtl
ja
fsubs
dec
cmp
inc
daa
mov
dec
repz
mov
cs
sbb
mov
scas
rorb
sbb
push
push
inc
inc
xlat
shrl
cmpsl
cmpsl
leave
mov
cmp
nop
scas
les
xchg
dec
adcb
ja
adc
jecxz
cld
rcrb
xchg
je
aam
mov
das
repz
test
xchg
fwait
in
sti
jecxz
lcall
test
test
add
pop
pop
push
push
lods
push
xlat
je
jae
pop
xchg
mov
add
push
scas
push
mov
aas
sarb
sbb
sbb
ljmp
pop
xor
mov
icebp
test
pop
fnstsw
out
popa
arpl
pusha
rcrb
adc
addr16
popf
mov
ja
in
fwait
loop
and
imul
mov
gs
push
pop
lock
ljmp
fistpl
push
fwait
pop
sbb
call
pop
push
sbb
adc
push
jge
cmpsb
aas
push
repnz
jecxz
gs
gs
jno
mov
das
mov
pop
insl
scas
mov
mov
rcll
mov
fisubl
sbbl
popa
fstps
jp
mov
and
mov
aaa
filds
xlat
adc
into
imul
cmc
mov
inc
inc
les
inc
sub
in
shll
mov
and
push
stos
pusha
in
pop
xor
dec
test
add
and
test
xchg
mov
lds
push
loopne
inc
mov
scas
or
fcomps
or
icebp
push
iret
jecxz
fcomps
xchg
mov
sbb
mov
loop
inc
stc
call
push
scas
clc
add
data16
add
mov
imul
or
ja
cmpsb
mov
mov
scas
ret
adc
sub
and
xor
jno
push
aad
mov
and
xchg
inc
mov
ror
mov
and
mov
pop
xor
inc
daa
in
add
sub
pop
test
cmc
test
mov
xor
lcall
pop
xchg
adc
lahf
repnz
cmp
jg
shl
mov
and
sti
cmpb
dec
sub
push
mov
xchg
fdivrs
mov
jno
mov
inc
cmp
dec
pusha
fwait
push
jmp
sti
in
aad
hlt
sub
sbb
xchg
pop
and
xor
sub
add
jle
cmp
or
test
sub
cmp
aas
rcrl
mov
push
repz
movsl
mov
push
mov
jmp
jle
push
jle
aaa
jmp
inc
cmc
mov
xlat
mov
or
das
pop
jae
mov
xchg
adc
push
insb
add
push
mov
loop
dec
add
xchg
fsubl
push
or
inc
mov
enter
ja
addr16
and
aam
cmp
jmp
xor
cmp
hlt
push
sar
fldcw
out
sub
outsl
xor
cmpsl
pop
xchg
aaa
jns
mov
in
lock
mov
mov
lahf
imul
lret
lcall
and
inc
xor
mov
jb
mov
add
inc
mov
loopne
xlat
out
sub
lods
clc
call
inc
bound
notl
and
push
add
lea
sub
inc
mov
push
gs
enter
pop
fucomip
aam
push
xor
cmp
adc
xor
mov
out
xchg
and
push
cmp
cmpsb
insl
sbb
dec
cs
and
add
cmp
mov
dec
rclb
adc
push
xor
mov
mov
adc
enter
lods
dec
sbb
sub
inc
test
cs
sbb
push
add
add
inc
iret
fsts
xchg
add
dec
repnz
add
inc
xlat
test
cld
lock
imul
or
jo
in
jge
jg
push
add
vmovhpd
pop
push
sbb
pop
sub
mov
lock
ja
mov
outsl
fdivp
dec
lds
loope
imul
lds
jb
sub
mov
xchg
imul
mov
sub
stos
mov
dec
aam
stos
xor
and
jb
xchg
or
icebp
cmp
ss
aam
mov
or
mov
les
mov
outsl
sub
shr
movsb
cwtl
pusha
rcll
add
sbb
jp
mov
mov
dec
sbb
mov
add
add
xor
mull
jp
add
jmp
mov
andb
dec
rep
inc
jmp
cmp
push
lret
fstpl
sub
lock
inc
ret
inc
push
or
add
mov
xchg
addr16
sbb
xlat
cmp
sbb
jge
jo
xor
cmpsl
int
mov
insb
and
lods
mov
sahf
mov
inc
sahf
pop
xchg
clc
dec
or
loope
jbe
adc
xchg
out
sbb
rclb
stc
lahf
jae
mov
es
out
cmp
idivl
dec
pushf
dec
iret
fadds
into
imul
dec
jae
ror
add
xchg
cmp
sub
xchg
popf
add
mov
insb
es
jns
add
jle
in
xor
and
inc
xor
jns
shlb
ja
sahf
les
in
inc
fbld
add
mov
inc
movb
mov
les
orb
push
rorl
sbb
out
dec
push
imul
mov
icebp
cmp
xchg
jl
dec
scas
call
inc
or
mov
xchg
mov
js
mov
loopw
mov
cmp
cmpl
xchg
jo
push
jo
stos
push
daa
daa
and
mov
cmpb
popa
pop
fwait
rcrl
or
les
js
int
jnp
loop
and
int
sbb
out
and
push
out
loopne
jno
pop
and
dec
dec
jmp
cld
js
movsl
test
mov
loope
cwtl
mov
push
mov
sbb
pop
rorb
xor
stc
cmpsl
movsb
jnp
shl
cmp
stc
cmp
int
mov
inc
inc
cmpsl
stc
mov
lds
jno
addr16
push
jb
and
jle
aas
or
jae
test
sub
andl
sub
pop
sbb
xchg
cli
cmpxchg
pushf
negl
or
loope
and
cmp
jl
adc
mov
imul
fcomps
in
cmpl
fbstp
out
pop
scas
scas
daa
mov
movsb
pop
inc
test
mov
cmp
cmp
inc
jecxz
cmpsb
rclb
mov
rcll
add
add
xlat
rcrl
stos
and
fmul
inc
jno
mov
lds
dec
mov
arpl
test
inc
push
inc
ret
out
stos
pop
dec
dec
jle
cli
lods
jae
mov
cmp
out
push
inc
mov
xor
xor
mov
cmc
stos
out
shlb
sub
lcall
jb
xor
sarb
ret
repz
xchg
inc
lds
hlt
inc
pop
cltd
cmp
call
jnp
cld
leave
rolb
in
sub
negb
mov
ret
mov
mov
insl
cmp
pop
xor
sbb
push
push
or
mov
sbb
jge
jg
push
push
jmp
sti
hlt
and
xor
das
out
stos
lret
mov
in
out
nop
xor
push
imul
jp
or
lcall
loop
push
sbb
xlat
xchg
push
jne
push
loop
lcall
pushl
jb
les
pop
scas
cli
out
in
sub
cmpsl
repnz
das
and
out
sbbb
and
or
rclb
cmp
or
call
daa
in
dec
insb
ja
jo
arpl
add
jg
fstpl
out
xor
push
test
xor
push
mov
pop
das
sbb
pusha
pop
das
stos
sbb
push
cmpsl
rcrb
add
ja
mov
sbbb
imul
imul
and
mov
jmp
inc
nop
aaa
jecxz
pop
pop
and
push
fisttps
shr
inc
mov
xchg
inc
inc
dec
mov
add
bound
pop
insl
xchg
sub
xchg
dec
movsl
js
jp
xchg
pop
mov
jl
push
lahf
push
xor
jo
inc
in
add
push
ret
xor
dec
enter
repnz
outsb
xchg
xor
xor
jp
push
in
xchg
movsl
ficomps
aad
rcl
mov
bound
xor
sarl
nop
adc
ds
ds
sbb
inc
cmp
das
ret
cmp
add
imul
inc
popf
mov
jecxz
xchg
jg
sbb
out
out
or
mov
xchg
xchg
push
ds
fwait
sub
xchg
jne
mov
jge
push
push
nop
xlat
arpl
sbb
sbb
arpl
movsb
sbb
notl
or
pop
mov
aam
in
daa
push
test
rcrl
inc
jmp
lahf
pop
into
adc
and
jge
int3
nop
lcall
sbbl
fnstsw
fwait
pusha
jp
pop
jg
mov
cmp
jecxz
insl
addr16
ss
lea
sarl
pop
psrlq
into
call
pop
or
cmp
cmp
fdivl
and
push
jmp
push
push
dec
jecxz
ret
in
or
jbe
jmp
pop
inc
lods
pop
cltd
pop
std
inc
cltd
aam
in
mov
fs
insb
ja
xchg
push
call
inc
jmp
dec
adc
stc
pop
shlb
inc
xlat
jle
packssdw
int
mov
scas
sbbb
add
jmp
gs
mov
sub
jb
testb
hlt
mov
in
stc
mov
push
push
out
mov
jecxz
jnp
cmp
xchg
hlt
jle
xchg
nop
jnp
sbb
jbe
push
sub
cs
mov
movsl
dec
push
lahf
daa
ficoml
pop
mov
mov
jmp
mov
dec
out
aas
push
in
push
subb
stc
fbld
cmp
push
and
outsl
inc
mov
mov
inc
xor
hlt
jae
xor
fs
add
in
mov
cmc
test
shrb
adc
cmpsb
mov
mov
scas
jge
loopne
aad
mov
in
daa
push
push
sbbl
lret
ret
jl
out
sub
or
mov
dec
lods
cmp
imul
dec
pop
inc
cmp
cmp
cltd
cmpsl
push
sarb
mov
imul
repz
inc
pop
in
or
inc
dec
mov
cld
mov
inc
xchg
jne
test
xor
jmp
add
cli
xor
or
and
add
call
out
push
mov
or
js
jecxz
movsb
add
push
test
and
jnp
push
addb
lahf
or
daa
sbb
jg
shr
fsubl
subl
add
test
loop
imul
enter
mov
scas
mov
lock
mov
shlb
mov
mov
arpl
lret
icebp
or
cmc
imull
jp
movsb
mov
mov
aaa
push
xorb
lods
sbb
cltd
xchg
lret
or
cmp
mov
xchg
js
stos
xor
ss
xchg
mov
jg
adc
aaa
in
popa
cltd
xchg
icebp
out
push
nop
out
pop
push
daa
stos
mov
insl
sub
mov
adc
pop
mov
popl
test
out
rclb
ja
sub
lahf
ret
sub
push
push
dec
mov
out
nop
loope
fisubrs
push
pop
xchg
imul
mov
mov
dec
xor
or
test
sbb
fstpl
jmp
jl
xchg
dec
jmp
mov
xchg
push
lods
and
sub
inc
addr16
mov
fwait
mov
cs
je
and
negb
insl
lds
push
jmp
add
inc
cmp
mov
mov
aad
lods
push
pusha
daa
mov
je
mov
xor
and
add
nop
cmpsb
dec
std
jno
fnstsw
popf
inc
mov
sbbb
movsb
cmpsb
xchg
lods
mov
mov
adc
xchg
stc
mov
jo
adc
std
cmp
iret
popa
jne
jne
xor
xor
mov
outsl
in
xor
sbb
xchg
clc
cwtl
push
in
imul
shl
daa
dec
dec
lcall
movsl
cmp
fs
lea
cmp
jns
mov
add
mov
pop
cmp
jnp
sub
int3
push
pop
mov
call
stos
pop
ja
add
nop
jne
xchg
cmp
int
push
push
jge
leave
and
lods
rcll
inc
mov
jl
xchg
popf
or
scas
movsb
lret
out
movsb
mov
clc
inc
sahf
add
cmp
sub
je
hlt
sub
add
loope
cltd
fcomps
fnsave
std
gs
xchg
popl
xchg
xchg
sub
jg
pop
adc
repz
push
dec
jno
xchg
jbe
or
mov
xor
pop
lcall
mov
inc
cmp
sbb
inc
mov
test
in
or
test
fbld
push
in
scas
mov
adc
mov
ds
push
xchg
enter
xchg
es
pusha
cld
xor
mov
mov
xchg
adc
pop
xlat
jo
jg
xchg
test
hlt
xchg
inc
cmc
loopne
xor
mov
xor
in
dec
lods
mov
lods
insl
rol
lock
nop
stos
mov
jae
ret
pop
or
pop
aaa
lds
fistl
jl
stc
xchg
jecxz
iret
jmp
adc
lods
scas
andl
lods
mov
jle
mov
ret
jmp
add
and
outsb
iret
jmp
and
jne
imul
daa
mov
cs
jo
sysret
fisubl
iret
inc
jge
push
or
lea
or
pushf
dec
inc
cltd
mov
lods
lods
arpl
imul
stos
es
lods
jnp
or
insb
frstor
xor
fwait
dec
mul
ret
addr16
fsts
lds
mov
call
cwtl
popa
or
push
clc
mov
das
jnp
cli
mov
push
push
loopne
inc
pop
inc
cltd
inc
stc
pop
mov
pop
fsts
sub
push
lock
fldcw
addr16
lods
ja
pushf
jmp
pop
mov
or
inc
mov
into
leave
call
jne
pop
loopne
outsb
inc
inc
sti
cltd
sar
testb
inc
mov
add
call
sub
popf
mov
add
sbb
imulb
stc
ss
fnstenv
imul
push
test
andps
ljmp
ret
jg
adc
scas
inc
loop
and
lods
imul
sarb
push
test
aaa
jle
into
fcmovnu
xor
in
ja
outsl
test
hlt
xchg
adc
mov
outsb
pushf
xor
scas
push
sbb
sahf
sub
mov
or
jecxz
stc
pop
adc
insl
aam
rclb
pushf
jle
mov
shr
cmp
push
or
jno
mov
push
pop
out
iret
add
inc
add
loope
mov
mov
pop
mov
push
iret
sbb
clc
xchg
xchg
jecxz
cmpsb
rclb
sarl
pop
pop
jb
imul
lret
mov
icebp
jge
or
insl
mov
pop
mov
mov
hlt
insl
mov
in
je
or
notl
or
or
pop
jne
in
or
jae
orb
cmp
jae
stos
and
sub
daa
neg
jg
lods
icebp
aas
fildl
arpl
hlt
adc
ds
lods
outsl
jb
jb
dec
bswap
ds
jle
mov
ds
js
jne
mov
ds
mov
cs
and
mov
dec
loop
arpl
je
sbb
je
and
arpl
cwtl
clc
mov
mov
add
cmc
popf
sarl
imul
lahf
int
add
stc
jae
mov
aam
leave
sub
and
xlat
lock
mov
cwtl
popf
push
jae
clc
movsl
shl
dec
test
inc
repz
jecxz
pop
je
daa
fisttpll
adc
popl
mov
push
dec
add
sbb
jl
xchg
dec
ss
clc
lret
push
shlb
xchg
xor
int3
or
cmp
cld
xchg
in
pop
icebp
inc
repnz
loop
cmp
cmp
mov
inc
xor
mov
js
fs
pushf
inc
xchg
xchg
test
and
sbb
lcall
repz
jecxz
add
mov
xchg
and
nop
mov
es
xor
popa
mov
or
fisttpll
jl
xchg
mov
dec
or
cmp
push
push
jnp
inc
xor
jns
rcl
sub
aam
xchg
not
fndisi(8087
clc
xchg
popl
mov
int
test
mov
loope,pn
js
dec
scas
or
addb
push
sbb
cmpsb
jne
sub
jno
inc
dec
inc
dec
out
inc
test
inc
mov
mov
or
add
xchg
push
mov
les
sub
or
cli
jbe
sbb
mov
fildll
insb
ljmp
fidivs
in
jns
push
je
push
dec
lods
push
jp
jnp
pop
jmp
xchg
and
stc
xor
mov
mov
mov
rorl
jge
xor
or
pushf
rcl
and
sbb
adc
les
mov
loope
push
inc
shl
jb,pn
negb
inc
shll
fisubs
bound
ret
pop
xchg
pop
adc
mov
ds
xchg
sub
dec
inc
jb
ss
enter
aad
fsts
jae
loop
pop
xchg
push
cltd
idiv
lahf
or
adc
pop
inc
sbb
sub
enter
adc
xchg
call
out
lcall
push
sub
inc
sub
lret
mov
lret
adc
sahf
daa
dec
daa
push
and
dec
faddl
jge
or
std
popf
lahf
push
cli
push
iret
and
jnp
stc
shlb
int
sub
sub
pop
xor
pushf
lock
pop
rep
hlt
xchg
lret
mov
das
push
inc
mov
test
and
push
push
pusha
xchg
mov
push
in
arpl
jg
in
xor
aaa
gs
mov
sub
xor
movsl
loope
push
dec
inc
push
cmp
gs
pause
cmc
jp
or
jbe
lahf
movsb
mov
lret
scas
adcb
scas
aad
push
adc
rcrl
cmp
xchg
psubusb
jno
xor
test
cmc
and
adc
pop
inc
sbb
popf
jmp
xor
std
loop
jo
and
aad
sahf
shrl
mov
push
cli
xor
ja
xchg
and
or
jg
sub
jle
or
pushf
mov
pushf
ret
mov
icebp
inc
pop
clc
in
faddp
ds
dec
jmp
sbb
push
notb
lods
and
xchg
add
inc
add
pop
lahf
push
push
xor
dec
add
mov
ljmp
pop
push
arpl
cmp
xor
sub
lcall
dec
cmpsl
daa
xor
push
jge
jne
ljmp
and
mov
cmp
mov
jecxz
fiadds
mov
xchg
mov
stc
in
lret
icebp
fwait
incb
lods
add
cmpl
arpl
add
scas
xor
adc
jl
jle
add
sub
sub
adc
stos
dec
pop
jo
testl
fistpll
mov
mov
push
push
psllq
push
in
cmpsl
jae
cmpsb
push
repz
cmp
cbtw
icebp
inc
ficoms
mov
arpl
mov
mov
sub
and
add
out
push
mov
jo
loope
lret
xorl
lea
add
or
cmp
ds
das
test
sarl
pop
les
mov
out
mov
js
adc
inc
pop
test
jno
inc
inc
movl
pop
sub
adc
dec
loope
notl
jecxz
lea
movsl
in
pop
cmc
movsl
leave
jp
movsb
inc
sbb
mov
fldenv
loop
mov
push
mov
add
cmp
pop
push
nop
push
xor
mov
mov
rorl
xchg
out
xchg
or
ret
xchg
push
enter
lret
sub
imul
push
sub
arpl
dec
push
mov
cmp
insl
adc
mov
jo
inc
iret
repz
scas
stos
fildl
pusha
icebp
fnsave
frndint
mov
push
jno
mov
aad
add
sbb
fxch
add
nop
adc
insb
pop
mov
jmp
jp
stos
enter
rorb
scas
mov
pop
mov
es
add
mov
cmp
inc
push
add
cmpsb
movsl
mov
leave
lret
add
orl
add
mov
add
stc
xchg
xchg
sarl
or
push
sahf
les
fsubrl
push
clc
icebp
xchg
xor
in
push
or
add
fbstp
out
and
xchg
or
mov
outsb
faddl
jp
stos
or
in
adc
mov
jg
push
adc
ret
dec
jno
sbbb
push
mov
sub
cld
jb
and
mov
cmp
adc
sub
mov
add
sbb
pop
in
adc
test
leave
xor
push
mov
cmpsl
xchg
mov
inc
add
rorl
jmp
mov
fstl
and
mov
test
pop
enter
xchg
inc
jno
js
into
jnp
inc
jp
out
lcall
sub
out
call
and
sti
jb
outsb
mov
mov
aaa
xchg
dec
pop
sub
mov
sub
push
movsl
nop
out
stos
push
stc
inc
pop
nop
leave
insl
lcall
or
lods
pop
cltd
xchg
cmp
sbb
subps
or
pop
aam
in
sbb
js
jp
repz
adc
lcall
in
push
lods
or
inc
jbe
leave
fwait
adc
lock
mov
cmpsl
adc
xchg
lds
sar
jmp
cmp
cltd
inc
pop
pop
in
mov
repnz
mov
or
adc
push
jns
dec
mov
sub
mov
mov
push
mov
imul
and
sahf
arpl
dec
pop
in
mov
aaa
icebp
dec
lret
mov
inc
push
hlt
xlat
xor
rcl
jg
adc
ss
add
adc
dec
rcr
es
sub
push
xchg
jge
in
lret
dec
int
add
xchg
stc
inc
push
mov
mov
mov
repnz
fidivrs
sub
and
gs
cld
xor
adc
arpl
loope
cmpsb
sub
push
in
or
hlt
push
xor
xor
cld
insl
push
or
in
dec
les
insl
das
gs
pop
mov
sub
out
xchg
xchg
dec
sub
adc
sarb
repz
jne
pop
mov
std
lods
xchg
xor
xor
push
mov
jno
pop
sub
popf
int
inc
mov
aad
rol
mov
clc
test
and
and
popf
xchg
out
dec
sbb
xor
call
int
das
push
js
daa
outsl
movsl
add
pop
mov
dec
lds
jmp
xchg
fistpll
mov
mov
sbb
and
cld
mov
sub
lret
arpl
imul
mov
es
push
movsl
fs
sub
xchg
add
fldt
push
pop
mov
cmpsl
sbb
int3
or
mov
arpl
add
es
repnz
les
pop
jge
mov
ss
cmp
ficoms
lds
dec
imul
mov
fisttpll
loop
in
insl
fistpll
adc
loopne
lea
daa
mov
movsb
adc
pop
mov
add
jo
jle
fs
test
scas
mov
jge
lret
and
fwait
xor
ret
in
xor
cli
cmpl
pop
hlt
jo
mov
aas
pop
cmp
roll
inc
inc
add
fwait
rclb
ljmp
mov
cmc
mov
addr16
or
mov
sahf
lcall
sbb
sbb
pop
jb
mov
test
dec
pop
iret
xchg
mov
aam
sub
cli
lahf
dec
push
das
aaa
xor
jl
cld
add
inc
sarl
sub
ds
aad
mov
fwait
dec
mov
cmpsb
call
insb
stc
mov
add
dec
test
dec
scas
loope
or
pop
push
cmp
ret
scas
ljmp
cmp
jmp
push
pop
aas
repnz
lock
adc
inc
ret
lret
sbb
les
and
dec
mov
sub
jnp
xchg
cmp
lods
xor
lds
pop
jno
out
cmpsl
mov
nop
pop
loop
xchg
adc
xor
xor
push
out
mov
and
ret
mov
fildl
jp
fistpl
cmp
add
inc
icebp
pop
push
loope
and
in
cmp
cs
test
xchg
mov
mov
fldenv
jecxz
outsl
cld
fs
test
xchg
and
aam
ljmp
mul
fcmovnb
pop
jmp
xchg
sbb
fldt
sbb
add
ret
or
sub
mov
or
cmc
fs
rorb
mov
call
mov
and
out
in
pop
dec
aad
inc
mov
fnsave
into
mov
mov
pushf
lea
mov
clc
push
add
xchg
xchg
mov
stos
xchg
mov
xor
lcall
in
fsubr
adc
mov
fimull
cmp
enter
pusha
arpl
fistl
mov
stc
ljmp
insl
popf
scas
lock
rcll
and
mov
popa
cli
aaa
and
inc
lret
push
test
enter
xchg
mov
arpl
jbe
xchg
pushf
and
sahf
dec
mov
test
inc
aaa
push
jp
jo
and
imulb
ljmp
sbb
mov
std
xchg
jmp
out
xchg
xor
or
lods
push
and
sub
jnp
cmp
sbb
lahf
movsb
scas
push
push
mov
pop
mov
icebp
dec
push
rdtsc
jmp
pop
mov
push
dec
and
jbe
mov
lcall
sbb
mull
repz
sbb
mov
imul
fldenv
inc
addr16
test
aam
cmp
jl
jecxz
loope
dec
filds
jb
mov
enter
and
fdivr
cs
cmc
cmc
adc
inc
pushf
in
stc
icebp
pop
loop
mov
fidivl
es
mov
xchg
fildll
pop
arpl
jno
sub
mov
mov
lahf
aas
xlat
gs
inc
cmp
ret
sbb
iret
cli
adc
and
dec
mov
cltd
sbb
xchg
mov
adc
test
jns
and
jge
ret
dec
mov
cmp
adc
repnz
in
in
or
push
out
mov
in
xchg
jae
xchg
jp
jl
dec
data16
test
outsb
fldcw
add
leave
inc
mov
js
enter
mov
add
push
or
jecxz
sbb
or
repz
leave
leave
cmpl
mov
std
imul
pushl
dec
dec
add
cmpsb
inc
jp
xchg
into
adc
mov
jecxz
or
xchg
cmp
adc
xchg
ficomps
dec
loopne
mov
sti
and
clc
pop
rorb
sbb
mov
sub
mov
pusha
mov
push
imull
xor
adc
jl
jle
mov
in
sub
shl
insl
ss
mov
sub
xor
fists
push
pop
cmpsl
lds
sub
jae
mov
jg
jg
ljmp
outsb
jge
stos
sbb
sbb
push
dec
jmp
testb
mov
xchg
roll
fwait
mov
mov
push
daa
lock
push
dec
and
test
gs
mov
in
test
mov
fwait
and
cli
lds
cmp
cmp
sbb
or
in
sbb
jne
xchg
sub
ljmp
gs
xchg
ljmp
inc
and
jge
xor
sete
fcmove
cmp
jne
sub
cmp
jmp
jle
sbb
rcr
mov
out
neg
xlat
pop
pop
xchg
loop
int
sti
sti
pop
xchg
mov
mov
xchg
lock
pop
cmpsb
cltd
icebp
in
fs
push
mov
xchg
or
jp
lcall
add
inc
movsl
push
lea
mov
dec
push
add
cmp
mov
sub
pop
sub
pop
stos
aad
mov
ss
lret
jae
jb
sub
ja
pusha
lea
push
outsl
mov
icebp
jo
pop
dec
dec
jbe
data16
popa
imul
add
shl
repnz
dec
push
jmp
push
icebp
lods
xchg
or
into
test
in
pop
fstps
setge
inc
inc
dec
lock
lods
imul
test
arpl
mov
xor
std
and
fcmovnbe
jbe
mov
int
cmp
jle
adc
push
fwait
jmp
mov
mov
mov
mov
cli
xor
add
jae
pop
jecxz
clc
push
and
mov
shlb
rolb
inc
dec
pop
clc
fucomip
pop
pop
dec
fdivr
pop
pushf
push
or
scas
nop
jno
cmp
sbb
mov
or
and
mov
out
dec
nop
cmp
mov
cmc
mov
jbe
mov
mov
mov
rorl
daa
cmp
sbb
mov
cmp
dec
stos
and
clc
fwait
mov
cltd
mov
mov
inc
and
add
jmp
lret
orl
movsb
mov
ret
rep
cld
fisttps
movsb
cmp
cli
cltd
incl
or
inc
lock
cmp
pop
lret
iret
ret
cmp
orl
jle
popa
mov
daa
pop
aad
adc
outsb
adc
inc
mov
movsl
adc
sbb
fs
inc
xchg
inc
sahf
xor
cli
xchg
les
pop
loopne
push
adcl
xor
cmp
loope
mov
cwtl
xor
aam
test
sub
cmp
xor
fwait
hlt
xchg
fiadds
int
jb
orl
adc
adc
pop
cli
neg
inc
dec
push
fisttpll
stos
adc
int
popa
std
mov
into
pop
jbe
xchg
cmc
popa
subb
xor
cld
cmpsb
leave
pop
adc
ss
cmp
fwait
test
insb
cmc
push
push
xor
sub
out
sub
loop
in
shrb
push
in
pop
inc
push
cmpsl
sub
fnstcw
inc
popa
dec
scas
sbb
out
push
xchg
imul
and
mov
mov
negl
and
ret
sub
add
insl
jg
or
push
mov
fistpl
pop
mov
loope
out
fisubrl
mov
fcoms
or
adc
mov
iret
dec
pop
mov
mov
dec
test
pop
sub
ljmp
fdivrs
jmp
xor
lahf
iret
pop
add
popa
gs
mov
mov
adc
mov
lret
xchg
jg
mov
jmp
jno
xchg
nop
in
push
push
cmc
cmpsb
jmp
ret
mov
cmc
popa
mov
or
cmp
icebp
jnp
mov
or
fnstcw
popf
dec
jmp
and
fildl
xor
out
fs
xor
or
insb
dec
fcompl
push
push
dec
ja
shlb
mov
scas
es
or
xchg
dec
inc
inc
mov
push
dec
divl
sub
addr16
xchg
mov
jecxz
fisubrs
add
out
mov
movsl
lcall
sbb
lahf
and
and
add
dec
lock
xchg
mov
jecxz
daa
pop
xchg
imul
pop
movsb
sub
lret
pop
mov
mov
add
mov
leave
out
jo
shlb
movsl
ret
mov
push
push
cli
jp
scas
sbb
xchg
xor
cmpsb
dec
movsl
xchg
dec
adc
sti
add
mov
inc
push
andb
stc
add
sbb
mov
sbb
aaa
adc
jmp
les
lds
xchg
dec
push
ret
sub
mov
repnz
pop
loop
iret
les
out
enter
xor
mov
cmp
lds
out
test
jns
cmp
lods
cld
add
pop
leave
sbb
lret
cmp
cld
ret
cmp
loopne
inc
sbb
in
inc
adc
sbb
sbb
mov
jecxz
orb
mov
add
adc
ljmp
daa
mov
out
dec
lods
lods
cmp
jl
push
xchg
pop
cmp
or
repnz
push
inc
dec
movsl
push
adc
mov
fiaddl
pushf
lahf
mov
cmpl
pop
ffree
inc
std
xor
or
aam
jbe
sub
xor
mov
xor
sbb
mov
aad
add
dec
std
mov
push
mov
mov
test
and
dec
leave
fsubl
inc
ds
jb
imul
imul
cmp
mov
bound
icebp
cmpsl
ja
into
push
lahf
jne
xchg
lds
mov
cmp
sarb
add
lea
popf
shl
xchg
das
inc
movsb
jne
pop
inc
scas
jmp
cmp
stos
out
addb
push
jo
mov
mov
dec
dec
aam
outsb
mov
dec
pop
push
movsl
div
sub
sub
cs
and
xchg
lahf
cmp
clc
mov
es
je
mov
xor
push
inc
call
xlat
fldt
ljmp
pop
das
aas
sub
jle
mov
popa
push
adc
fbstp
test
mov
call
les
jbe
es
aam
jno
test
cmpsl
pop
pop
push
jno
or
les
cmp
cmpb
push
or
repz
pop
adc
jmp
lcall
jecxz
sub
scas
mov
test
in
jbe
sbb
jae
mov
stos
add
lds
push
pop
shll
push
sub
stos
add
or
sbb
lcall
pop
notb
mov
pop
cmpsb
cwtl
cmpsb
mov
iret
push
aas
xor
adc
popf
js
mov
je
add
add
pushf
mov
je
frstor
sbb
adc
cmp
loopne
das
movsb
pop
gs
test
aam
out
cmp
or
test
push
mov
jb
sbb
mov
add
outsl
in
scas
outsl
mov
add
cwtl
pusha
daa
scas
sub
pusha
push
mov
dec
push
pop
mov
inc
mov
xor
inc
subb
inc
inc
xor
dec
push
sub
add
cli
xlat
inc
setge
imul
push
jnp
or
cld
lock
lret
mov
stos
movsb
out
or
out
inc
jbe
inc
ret
pop
adc
add
dec
into
mov
mov
fs
call
mov
cs
xor
mov
cmpsb
xor
popa
movb
out
dec
test
rclb
stos
int3
loopne
xor
ret
lahf
and
or
adc
push
and
inc
in
les
inc
and
sub
popa
and
in
cmp
add
invd
testl
xchg
sub
push
test
mov
push
loop
dec
xchg
test
adc
sub
imul
rorl
fcoms
fsubrl
cmp
xchg
imul
push
aas
sub
mov
inc
incb
or
sti
mov
sbb
mul
data16
out
aas
es
xchg
mov
inc
push
jg
xchg
jle
in
gs
cld
or
mov
sarl
xor
pusha
or
mov
dec
jne
sub
lea
es
or
inc
mov
stos
sub
lahf
stos
out
incl
sbb
or
dec
repz
lahf
faddp
cmpxchg
xchg
push
mov
dec
sbb
icebp
cmp
push
scas
inc
or
test
lods
and
enter
and
out
cmp
push
push
mov
loop
jne
pop
ss
nopl
ljmp
or
orb
lds
sub
mov
sub
pop
inc
dec
adc
sbb
data16
fs
xchg
mov
xchg
pushf
cld
adc
and
fdivs
push
adc
fistps
xchg
aaa
push
mov
test
add
cmp
jge
ljmp
ljmp
add
out
andb
xchg
stc
mov
add
nop
int3
xchg
cmp
dec
and
idivb
and
outsl
push
in
push
movsb
stos
sbb
clc
daa
ror
arpl
cmp
sbb
xor
mov
int
push
das
int3
cli
imul
xor
mov
cmp
xlat
xchg
adc
sbb
aaa
sti
loope
push
fsubs
cmp
jge
inc
into
ds
xchg
mov
int
fistpll
ret
inc
stc
pop
cwtl
and
in
cmpb
mov
loopne
add
sbb
mov
inc
xchg
je
fs
cmpl
push
out
nop
addr16
inc
mov
xchg
and
mov
push
repnz
test
mov
sub
mov
mov
incb
outsl
in
xchg
adc
rcrl
pop
lret
mov
lods
loopne
and
out
ds
jp
fnstsw
cmp
inc
stos
cltd
aam
push
frstor
jbe
test
stos
stc
pop
and
in
scas
mov
fmull
jmp
shl
sbb
scas
pushl
adc
dec
sub
or
notl
loope
mov
jg
pop
jle
xor
mov
add
mov
xorl
wbinvd
pop
xchg
lret
mov
insl
imul
shr
inc
dec
adc
pop
mov
aas
cmpl
push
out
add
add
fs
mov
or
cmp
inc
out
cltd
inc
imul
mov
int
xchg
filds
insl
xor
fidivs
insl
icebp
pop
lods
sub
mov
add
inc
inc
movsb
inc
mov
fsubs
sarl
pop
mov
ljmp
add
frstor
add
or
jp
sbb
jecxz
pop
dec
scas
push
lret
cmpsb
jo
arpl
mov
cmp
arpl
in
fmuls
subb
xchg
insl
movsb
adc
inc
fsubr
andb
dec
roll
lret
mov
mov
ss
mov
mov
fimull
mov
lret
push
jno
push
cltd
pop
push
into
mov
inc
push
inc
test
sub
or
negb
jmp
inc
popa
frstor
insb
sbb
arpl
notl
sub
stmxcsr
lods
pop
filds
daa
sbb
jg
fstl
insl
dec
sub
mov
fcoms
jg
lret
jge
hlt
loope
leave
aaa
cmp
jmp
ficompl
mov
sarb
inc
mov
and
sbbl
hlt
adc
mov
cld
negb
out
rcrb
and
lret
das
or
mull
cmp
cmpsb
lret
sbb
xchg
mov
adc
jp
ret
lahf
addl
dec
repnz
ds
ret
xchg
sbb
std
sub
popa
mov
sub
xchg
repz
std
and
lods
pop
mov
sbb
lahf
add
sbb
fnstenv
stos
sub
cmpl
fistpll
pop
hlt
push
daa
pushf
cmovle
fistps
jbe
data16
aaa
fisubrl
flds
sbb
jmp
pop
pop
repz
ret
hlt
push
mov
sbb
test
inc
xlat
push
mov
pop
xchg
push
inc
je
inc
js
les
inc
adcb
cmp
add
rcrl
rcrl
popf
jmp
push
adc
push
ret
hlt
jnp
push
stos
inc
sub
adc
hlt
dec
sahf
jo
out
push
mov
mov
push
jl
js
std
mov
mov
push
sbb
mov
push
mov
adc
daa
mov
lret
std
mov
pop
movsl
dec
xchg
ja
gs
jns
ljmp
or
or
cmp
cmp
mov
mov
jge
jne
lret
mov
repnz
outsl
xor
dec
jmp
popa
lods
dec
bswap
sbb
aas
jl
mov
push
fcom
push
xchg
sub
jp
xchg
inc
and
ss
cmp
and
inc
lret
xor
stc
sbb
mov
das
and
fs
pop
push
mov
cmp
es
or
in
lahf
movsb
inc
test
inc
out
mov
cltd
int
hlt
or
mov
lret
loopne
mov
enter
fcmove
fs
xchg
sbb
sahf
pop
arpl
push
leave
xchg
jge
int3
stc
mov
arpl
sub
sub
sub
pushf
adc
bound
int3
jo
loop
push
cmpsl
stos
shlb
mov
dec
ret
push
mov
mov
in
add
add
pop
das
xor
and
je
xor
clc
lods
cmp
hlt
leave
ret
loop
int
mov
bound
lahf
jle
loopne
out
rorl
out
scas
or
test
daa
mov
sbb
xchg
add
rclb
mov
xchg
sbb
shl
xchg
sub
filds
mov
mov
addr16
outsl
sub
hlt
or
mov
pop
insb
add
lods
or
lds
rcrl
cmpsl
ret
sbbb
jo
cltd
aaa
icebp
dec
inc
icebp
fcomps
mov
nop
mov
push
xchg
and
out
jbe
arpl
pusha
inc
in
int3
xor
imul
push
dec
cmp
xchg
push
mov
add
mov
push
sahf
and
push
scas
adc
cmpsb
test
push
out
jle
mov
out
inc
cwtl
jb
cmpsl
mov
call
dec
jno
mov
adc
and
shrl
or
stc
cmp
js
xor
inc
push
mov
push
mov
sbb
sub
push
enter
push
sub
out
dec
or
cmp
xchg
aaa
into
add
sub
cmp
pop
pop
cmp
mov
fwait
jnp
es
fldenv
fldenv
sub
popf
test
sub
sbbb
pop
mov
jecxz
outsb
add
enter
mov
loope
scas
rorl
xchg
jns
lock
cmp
inc
push
xchg
and
incl
out
leave
mov
xchg
sub
ss
stos
mov
push
movsl
pop
jmp
pop
shlb
dec
call
inc
cmp
fwait
pop
mov
xor
fstps
xlat
add
ja
lods
dec
clc
push
pop
imul
inc
sub
test
mov
mov
aaa
icebp
push
fwait
iret
pop
cmc
data16
int3
xchg
out
bnd
push
fidivl
jp
mov
daa
inc
lret
xchg
cs
pusha
mov
rolb
mov
lahf
int3
adc
popf
mov
cmp
or
jae
jb
fwait
mov
shll
loope
sub
icebp
sbb
push
scas
sarb
cmpsl
mov
adc
push
sbb
add
ss
ret
test
cmp
in
cmp
outsb
outsb
ds
add
jno
xchg
arpl
cs
js
xor
adc
out
mov
stos
pop
sub
popf
scas
std
ret
mov
in
mov
into
icebp
push
jae
inc
jnp
sub
sub
or
loopne
add
cld
xlat
mov
mov
dec
jl
fdivs
out
jmp
stos
data16
jne
out
mov
and
lods
fisubs
or
enter
stos
inc
mov
sbb
jb
pop
lods
mov
cmpb
andb
sub
mov
shll
jnp
xor
ss
jae
and
int
neg
mov
std
pop
jg
mov
js
xchg
jns
aad
sti
xor
loop
mov
bound
pop
fistpll
lcall
clc
add
insl
pop
loop
xchg
sbb
xchg
movsb
inc
and
jmp
cmpsb
scas
mov
lret
fidivl
arpl
sub
sub
movsb
or
jne
jecxz
pop
push
fidivs
fdivrs
divl
addr16
push
mov
ret
jo
into
or
lret
cmp
push
mov
xchg
dec
incb
sbb
cmpsb
pusha
xchg
adc
xchg
out
ret
in
js
int
lock
lcall
and
mov
rcrl
cmp
das
nop
jo
aam
xchg
xchg
clc
cmp
shlb
out
idivl
pop
pop
cmp
movsb
push
jge
arpl
shrl
lret
pop
jmp
fimuls
leave
jg
out
cmpsb
xchg
push
aas
xor
mov
and
out
push
lock
jnp
imull
and
stos
sub
xor
xchg
shll
mov
mov
shll
and
push
repnz
negl
iret
and
ljmp
inc
pop
lock
add
int
dec
sbb
add
inc
sti
add
pop
test
mov
enter
jle
xor
push
push
jl
sub
in
mov
xor
mov
rcll
aad
aam
xchg
mov
jle
inc
pushf
mov
lret
or
mov
addr16
dec
rorl
inc
mov
push
insl
inc
inc
out
jecxz
push
int
jo
loopne
pop
add
stos
fisubl
loopne
pusha
mov
pop
mov
dec
inc
incb
or
add
or
cmp
mov
sbb
lcall
jo
orb
call
sti
xlat
sub
inc
and
mov
test
cmp
test
pop
lahf
andb
push
rcl
or
enter
cmpsl
xchg
fmuls
test
jnp
mov
lret
inc
mov
adcl
adc
adc
jb
roll
dec
divb
cmp
cld
imul
arpl
scas
push
xor
or
push
sbb
std
mov
adc
gs
sti
aad
pop
std
mov
mov
xor
gs
lret
or
imul
sub
cmp
nop
or
js
lock
dec
lahf
notb
or
sub
fisttps
dec
bound
fdivl
ret
xorb
inc
int3
adc
pop
jmp
push
add
je
inc
mov
dec
pop
scas
ss
cmp
pop
jecxz
or
inc
dec
es
push
rcrl
rclb
mov
insl
or
test
xor
cmpsb
sub
cmp
xchg
sti
out
outsb
in
xor
test
sub
adc
push
fs
pop
stc
movsb
pop
mov
or
or
pushf
sub
repz
scas
mov
push
push
repz
lods
rorl
lods
lret
outsb
cld
sub
cmc
test
mov
rcr
adc
fists
push
jg
fwait
lea
mov
fnstsw
insl
test
cmp
dec
dec
xchg
aam
inc
xor
jmp
ds
test
jb
pop
sti
jle
loopne
mov
xchg
je
fcomps
pop
sub
adc
push
icebp
cmpsl
pop
clc
push
out
ja
and
out
dec
xchg
sub
pushf
daa
xchg
lahf
fbstp
xor
dec
std
sbb
adc
into
adc
xchg
jae
jecxz
dec
xchg
ret
or
shrl
add
xor
mov
popf
jmp
dec
push
mov
jnp
add
cli
or
mov
std
loop
push
das
sub
aam
cmp
sub
pop
inc
cmp
loop
rcl
cmp
cmc
mov
clc
xor
rclb
dec
mov
sti
testb
xchg
mov
mov
dec
push
mov
std
add
xchg
lods
fildl
stc
pmullw
and
enter
fbld
pop
int
lock
ss
inc
or
aaa
cmp
andl
inc
dec
xchg
mov
push
jno
pop
fdecstp
cmp
and
loope
mov
test
je
sub
pop
ret
fsts
sub
mov
test
pop
loope
add
in
fsin
mov
mov
movsb
cmp
jl
or
mov
rcll
cli
scas
push
or
and
ljmp
xlat
lds
pop
inc
push
dec
xchg
xchg
lds
bound
stos
shlb
jmp
fstpl
sahf
add
add
lcall
mov
adc
ja
sbb
loop
aad
dec
jne
inc
cltd
bound
cmpsl
cwtl
scas
iret
test
adcb
lods
inc
xchg
or
add
mov
hlt
in
or
in
out
or
pop
dec
fnstsw
sub
sub
jmp
aam
icebp
test
xchg
jo
xor
movsl
mov
mov
cmp
add
fwait
aas
mov
in
jbe
aaa
xchg
daa
sbb
cmp
js
xor
fsts
rcl
inc
int
inc
mov
xchg
outsl
lea
mov
and
out
test
shlb
cs
adcb
push
je
mov
fistps
dec
cmp
movsl
mov
mov
popa
pop
dec
mov
pop
or
xchg
cltd
sar
jno
std
push
xor
movsb
xchg
jl
or
data16
sahf
js
dec
popa
arpl
dec
jae
mov
out
insb
and
in
sub
xchg
adc
dec
jo
sub
ljmp
out
fstpt
aam
orl
ret
xchg
movsl
mov
jo
push
dec
js
test
ja
adc
ret
cmc
dec
mov
sbb
cmp
shrl
or
ror
push
jmp
stos
shrl
push
sti
xchg
mov
popf
xchg
jae
push
push
out
dec
sub
fwait
mov
test
mov
mov
jle
js
jo
test
aas
mov
xor
and
ror
fisttpl
divl
push
xor
sbb
sahf
mov
dec
mov
mov
jae
pop
xor
pop
ja
cmp
mov
mov
mov
push
repnz
inc
mov
pop
loope
int
sub
out
movsl
pop
push
int
jns
in
cwtl
rcrl
jbe
fsubl
push
clc
sbb
stc
or
enter
inc
shrl
mov
sub
jle
inc
adc
dec
outsb
es
pop
sub
mov
inc
jmp
or
fnstcw
jo
out
fidivl
sahf
inc
iret
mov
add
adc
mov
adc
in
lret
ret
pop
fiadds
pop
fmull
ret
pushf
sbb
shrb
in
dec
inc
cmp
inc
pop
push
sub
dec
sub
loope
icebp
repz
jnp
int3
jo
xchg
je
jmp
mulb
cmp
ret
and
xchg
sbb
popf
or
bound
sbb
outsb
add
xchg
add
adc
dec
out
pop
ss
mov
addl
mov
inc
scas
movsb
sub
cmpsb
mov
mov
mov
std
push
pop
gs
fwait
jl
inc
jmp
adc
jl
ljmp
inc
jl
add
out
insb
cmp
push
jle
repz
insl
inc
mov
mov
cmp
div
cmpsb
pop
mov
add
or
jb
push
jl
mov
es
in
stos
loope
addr16
cmp
mov
outsl
repz
mulb
std
jns
mov
ret
mov
cltd
lock
adc
inc
lods
cli
aam
add
aaa
jge
fs
in
popa
shlb
jecxz
scas
push
mov
adc
stos
and
mov
or
cld
arpl
push
sub
dec
rcrb
sahf
sub
repz
nop
dec
sub
xor
pushf
movsl
rolb
dec
lcall
xor
daa
mov
in
cmp
xchg
sbb
repnz
sahf
das
xchg
adc
es
xchg
imul
scas
jns
jnp
or
cmp
icebp
idiv
and
jg
jns
cmp
jp
xor
roll
inc
pop
mov
cmp
ljmp
jmp
jecxz
add
icebp
fcoml
int
or
or
xor
clc
inc
or
dec
xor
lds
mov
fidivl
lods
sbb
sti
push
fwait
jns
mov
sarl
ret
pop
or
xchg
mov
push
jne
and
add
mov
mov
mov
xchg
jecxz
xchg
lret
pmovmskb
and
repnz
cld
cmp
bnd
fisubrs
or
mov
inc
mov
jge
mov
xchg
or
out
mov
in
in
cltd
lds
out
xlat
in
inc
inc
xchg
int3
mov
jle
jno
pop
xlat
push
rclb
xchg
jo
insl
lahf
mov
xchg
sbb
icebp
aas
mov
es
es
movsb
sbb
push
imulb
pop
adc
mov
cld
sub
mov
ret
jge
icebp
es
mov
mov
lret
jns
fdivr
ret
xor
in
push
add
imul
jecxz
pushf
cmp
dec
stos
or
loop
outsb
repnz
outsl
rorl
std
push
int
push
roll
outsl
mov
adc
jecxz
mov
pop
ljmp
insb
ret
sbb
aam
cmp
arpl
fmuls
mov
stos
add
sub
xor
dec
adc
in
aad
mov
test
xor
lods
sbb
xchg
or
push
xor
push
mov
scas
out
nop
jmp
push
and
lods
inc
in
js
dec
mov
add
mov
ljmp
insl
add
mov
push
out
imull
rorb
dec
leave
pop
dec
sti
not
pop
lea
sub
rcrl
stc
pop
mov
push
pushf
cs
int
cmc
dec
clc
push
sahf
rcl
and
add
xchg
out
ss
jle
mov
lds
mov
or
out
inc
mov
sbb
sbb
stos
mov
mov
shrb
pusha
dec
sbb
jnp
dec
insl
ljmp
sub
std
xor
int
jmp
imulb
fwait
std
inc
rcl
lret
xor
in
arpl
cld
or
push
out
cwtl
jno
aam
mov
ss
ret
inc
jle
test
mov
call
push
imul
inc
mov
dec
stos
addl
jnp
roll
or
ljmp
jl
push
xchg
pop
mov
pusha
mov
loope
outsl
ret
hlt
push
inc
mov
lods
outsl
loopne
leave
mov
bound
sbb
xchg
inc
pop
cmp
push
pop
mov
add
and
fiadds
add
addb
ret
mov
js
paddq
cmp
iret
fs
mov
xchg
cmc
push
mov
inc
cwtl
mov
out
ss
add
loopne
shll
push
gs
push
mov
add
icebp
pop
lods
and
out
cmc
outsb
adc
or
rcrb
adc
push
adcb
cmpsl
xchg
pop
aad
pop
and
pop
mov
cwtl
xor
subb
int3
dec
adc
loop
sub
push
pop
sbb
xchg
xchg
or
fstp
mov
ret
pop
xlat
and
pop
iret
ror
popf
adc
adcb
leave
das
rol
fmul
test
adc
int
jmp
dec
mov
sub
pop
mov
jmp
mov
sub
pop
insb
push
popf
js
fwait
mov
xor
cltd
sti
gs
insl
xorl
lds
push
mov
push
dec
xor
fdivs
pop
lret
push
mov
and
sub
push
dec
dec
xor
mov
sub
or
jp
pop
repnz
sub
insb
jns
xor
cs
mov
xchg
pop
inc
shll
imul
push
push
cmp
xchg
xchg
lahf
cltd
data16
adc
faddl
inc
dec
in
testb
mov
xchg
adc
lahf
loopne
adc
jle
lea
dec
leave
enter
and
or
imul
sub
pop
icebp
fidivrl
sub
dec
mov
push
stos
faddl
xor
add
inc
jb
sbb
xchg
decb
jmp
mov
rol
inc
jno
sub
addb
fcmove
push
aad
push
mov
push
cmp
fs
pop
aad
xor
shll
adc
mov
in
loopne
push
pop
push
repnz
inc
dec
xchg
mov
mov
stos
jl
in
es
hlt
daa
xor
and
stos
or
int
shl
daa
int3
call
xor
push
loopne
repnz
mov
repz
add
lds
or
pop
int
dec
push
jnp
inc
xchg
or
sub
cmp
push
dec
cmp
fs
fwait
outsb
in
ds
jo
imul
in
test
add
mov
or
out
lods
mov
test
push
pop
movsl
jo
xchg
mov
inc
mov
push
lods
add
outsb
and
jns
mov
and
or
jmp
xor
in
inc
adc
idiv
stos
cmp
andb
imul
xchg
xorb
push
jno
jle
in
sbb
lea
iret
or
jae
inc
mov
cmpsb
mov
jae
pop
lret
pop
lods
sbb
loopne
out
pop
inc
scas
push
stos
cmp
pop
in
lret
icebp
mov
scas
lret
outsl
pushf
mov
sbb
inc
inc
rorb
int3
pusha
pop
pop
stos
das
test
lcall
jp
dec
or
inc
xlat
mov
mov
aaa
sti
cld
sub
fs
faddp
inc
sahf
subl
stos
jg
jl
outsb
cli
dec
call
xlat
mov
sub
das
sub
mov
test
mov
outsl
xchg
rcll
jle
xlat
xor
test
ja
daa
orb
xor
mov
cmpsl
out
mov
xchg
push
test
xor
jb
jne
enter
movsb
or
dec
lret
inc
adc
pop
les
jge
mov
push
xor
mov
in
add
add
cmpsl
mov
shrl
pushf
or
icebp
testb
add
jl
or
pushf
inc
fwait
mov
and
cmp
rorb
pusha
sbb
test
roll
mov
aas
jecxz
ret
push
jne
adc
push
pop
inc
push
ret
cli
jge
fldt
int3
imul
sbb
into
push
ja
push
dec
lcall
iret
mov
sbb
hlt
cmp
and
js
add
mov
repnz
test
leave
push
adc
scas
mov
xor
push
cs
cld
lods
test
mov
pop
pop
sub
das
xor
and
ds
push
cltd
out
popl
xchg
ds
xor
sbb
xor
je
inc
inc
xchg
or
repnz
popf
cmp
mov
xor
ljmp
andb
mov
stos
test
adc
xchg
jl
mov
or
pop
ret
movsl
ja
add
stos
xchg
stc
lahf
add
mov
scas
stc
add
jl
and
mov
push
xor
jp
adc
sbb
jnp
xchg
fst
adc
xchg
aad
test
cmpsl
push
adc
xlat
fildll
movq
aaa
daa
dec
or
insb
mov
into
fwait
lods
dec
das
pop
push
dec
mov
outsl
in
repz
mov
nop
lcall
push
jnp
repnz
push
inc
movl
test
movsl
inc
adc
inc
ljmp
mov
ret
cwtl
jbe
mov
or
inc
xchg
rcrl
inc
lcall
pop
sbb
cmc
xor
mov
mov
pop
xchg
jp
repnz
add
js
clc
push
mov
js
or
jp
and
decl
fwait
push
and
clc
jecxz
xchg
stos
mov
push
pop
loope
mov
sbbl
mov
std
rcrl
aad
sub
out
xchg
cmp
jns
rcrl
mov
mov
jg
add
outsb
inc
mov
cld
fisttpl
pop
leave
pop
and
mov
mov
es
or
bound
les
popa
or
xor
mov
jg
pusha
cltd
adc
cwtl
jo,pn
push
es
mul
jge
into
setge
test
cmp
sarl
hlt
fdivrl
popa
mov
gs
fwait
dec
xchg
inc
dec
pop
mov
mov
mov
test
int3
sahf
or
cmp
push
std
iret
pop
sahf
rolb
ret
jmp
insb
pop
arpl
pop
pop
fildl
scas
sti
lods
push
out
out
sub
in
addr16
ja
add
outsb
test
lock
stos
test
push
push
popa
pop
sub
mov
insl
push
shll
lret
and
cmpsl
and
in
xorb
sbb
outsb
bound
xor
xor
insl
fiaddl
or
jne
sub
push
sub
cld
mov
push
rorl
lds
rolb
ror
sti
jns
dec
lods
sbb
inc
cld
xchg
and
add
enter
notl
fsubl
or
xchg
mov
xchg
in
add
inc
loope
jbe
pop
addr16
fisubs
inc
pop
pop
ffreep
inc
jl
mov
aas
shll
into
jno
sbb
loop
in
cmp
mov
inc
incl
shll
popf
fsubl
mov
ror
xor
addb
data16
xchg
xchg
popf
dec
arpl
shrl
fsubrs
mov
rorl
or
leave
sub
ret
jecxz
aaa
sub
mov
pop
notl
xchg
in
dec
push
add
jp
sbb
int
sbb
push
enter
sub
mov
nop
xchg
lds
mov
add
inc
cmp
lods
pop
xchg
cmp
xor
mov
test
inc
pop
mov
xor
repz
jecxz
lcall
arpl
pop
roll
into
test
mov
mov
and
mov
cmp
gs
cmp
std
push
jb
dec
add
mov
dec
or
inc
out
mov
jbe
cmp
xor
dec
ret
out
cmp
popf
mov
jns
jns
or
orb
sub
or
pop
imul
or
fs
rcrb
cmp
cli
sub
sbb
movsb
sub
scas
ja
test
enter
and
pop
data16
jmp
sahf
loopne
dec
push
ds
sahf
mov
pop
rclb
push
movsl
int
mov
in
mov
scas
loopne
divb
int
xlat
rcrb
cmc
add
movsl
in
data16
push
mov
sbb
lret
mov
mov
adc
ficompl
jl
pop
cmp
xor
lods
dec
adc
lcall
aaa
ja
outsb
mov
jmp
cmp
cwtl
jns
shlb
ds
inc
fcomp
add
int
shlb
jle
stc
addl
leave
pop
xor
cwtl
xor
add
lahf
cwtl
fmull
ror
mov
pop
xor
inc
mov
bound
daa
bound
cli
daa
ja
rolb
push
mov
add
clc
sti
sub
push
insl
add
xchg
mov
inc
or
mov
push
in
iret
cmp
pop
daa
cmpsl
fstps
cltd
or
add
jg
lods
test
clc
lods
and
mov
pushf
loop
sbb
add
in
loop
jbe
xchg
xor
add
lret
test
cld
dec
dec
jg
or
ljmp
and
jg
lds
loopne
nop
or
and
sub
loope
rcl
stc
into
sub
add
les
bound
fnstsw
and
mov
dec
push
pusha
pop
int3
xor
bound
push
jmp
rolb
int3
mov
lret
add
xlat
in
cmp
lcall
jno
add
push
dec
cmp
mov
mov
insl
dec
and
dec
jmp
push
lahf
and
popf
push
decb
dec
lods
adc
std
movmskps
cli
ds
fists
aaa
pusha
mov
rorl
insb
orb
push
pop
inc
int
sbb
inc
sub
pop
mov
sub
aaa
or
jno
xchg
ljmp
fisttps
mov
adc
lahf
rcll
jg
mov
mov
xor
ret
int3
push
cmp
mov
imul
ret
sub
jge
lcall
xchg
pop
leave
and
xor
lret
dec
movsb
xlat
rolb
lret
xor
push
es
and
adcb
fistpl
xlat
xlat
in
decb
repz
jmp
sbb
push
push
jl
sub
sti
jmp
pop
fisttps
and
and
and
lret
mov
adc
lods
popf
dec
fsts
and
mov
jge
ficomps
cmp
cwtl
cltd
jg
daa
aas
adc
inc
adc
fdivs
add
imul
and
add
mov
inc
jnp
das
scas
jbe
fdivrl
mov
mov
mov
icebp
add
test
movsl
enter
clc
inc
mov
mov
jle
nop
xchg
cmc
mov
lea
arpl
scas
add
aam
push
mov
xor
xor
pop
pop
ss
jg
ret
mov
cmp
outsb
inc
rcrb
pop
xchg
negb
cmpb
fnstenv
push
mov
inc
mov
mov
push
inc
in
ret
stos
and
dec
clc
adc
inc
cmpb
sarl
lock
xchg
les
dec
or
test
sbb
xor
mov
xor
fnsetpm(287
lods
outsb
loope
out
call
clc
mov
cs
js
inc
scas
sbb
or
arpl
loop
mov
clc
adc
jbe
sbb
pop
mov
dec
push
and
add
mov
jne
mov
hlt
fdivl
arpl
lahf
jge
ret
inc
out
mov
jg
jns
cmp
in
sub
std
test
xor
test
sub
or
mov
mov
mov
dec
sbb
xchg
js
sub
mov
mov
shlw
scas
xor
xor
ljmp
fisubrs
mov
ljmp
xchg
and
imul
in
lea
xor
cmp
and
inc
add
xchg
jmp
scas
and
jl
popl
mov
inc
out
push
aaa
fisubrl
test
pop
lret
roll
adc
mov
xchg
mov
ljmp
rclb
dec
jb
adc
dec
push
mov
sub
ljmp
and
insb
es
call
add
outsb
jp
pop
or
adc
adc
imul
mov
jno
movsl
insl
int3
test
les
mov
fcomi
mov
and
and
jae
inc
imul
or
cmc
loop
cs
in
jmp
adc
neg
leave
push
jmp
pushf
cmpsl
xchg
mov
inc
or
mov
out
xor
sar
dec
scas
cmc
loop
test
jecxz
fwait
insb
dec
fisubs
xchg
sbb
mov
or
xchg
xor
and
or
pop
mov
jae
fisubrs
sub
pop
mov
js
lock
cmp
mov
sarl
movsb
pop
fildll
lods
fimuls
pop
aas
outsb
push
jge
and
popf
imul
add
sbb
pop
int3
cmpsl
adc
jge
dec
add
mov
shrl
repnz
cli
mov
mov
add
xor
fcmovu
cmp
dec
scas
jb
push
cwtl
and
pop
inc
jo
dec
inc
add
pop
inc
push
xor
in
in
sub
mov
push
movsl
mov
or
decl
xchg
inc
cmp
xchg
mov
ffreep
insl
jae
data16
cld
sbb
imul
fstl
test
int3
xchg
in
inc
xor
inc
dec
pop
data16
mov
ljmp
push
rclb
jnp
cmpsb
fwait
inc
inc
pop
inc
sub
push
inc
sub
cmp
mov
roll
jbe
test
stos
jbe
setnp
imul
fwait
ja
xchg
lock
out
notl
sbb
sahf
fs
sbb
js
mov
or
aam
sub
fdivrl
mov
imul
and
pop
aad
adc
or
adcl
sub
js
scas
jecxz
dec
dec
push
jmp
sbb
scas
aad
xchg
pop
movsl
fdivr
dec
in
mov
mov
hlt
jbe
mov
in
lods
mov
divl
aam
dec
push
outsb
sbb
fisttpl
dec
pop
enter
out
jp
dec
add
xor
sub
inc
mov
and
cmp
mov
hlt
dec
add
and
popl
dec
cmpsb
loop
nop
sarb
push
stc
fwait
xor
or
push
cmp
cmpl
adc
mov
mov
mov
das
loopne
mov
xor
popa
jno
inc
and
xor
out
adc
ja
jg
push
insl
mov
popa
push
fmull
push
and
mov
inc
lods
aas
cmc
test
in
je
les
je
sbb
pushf
lock
scas
lods
aaa
mov
jle
cmp
push
adc
inc
lods
lds
xor
mov
es
mov
add
enter
pushl
decl
movsl
mov
test
fidivl
pop
cs
stos
push
fistps
lcall
dec
jno
icebp
inc
popa
in
in
and
pop
cmp
or
mov
push
fwait
cmp
jge
popf
sub
ret
cmpl
std
rorb
arpl
in
lds
jnp
aas
cmc
ret
faddl
movsl
sbb
inc
ret
jmp
faddl
cmp
mov
mov
dec
repnz
les
xor
dec
jne
dec
scas
adc
xorl
and
int3
jo
xchg
hlt
stos
xor
xor
es
mov
dec
dec
sahf
rcrl
push
or
lahf
xor
add
adc
sarl
insl
fisubrs
pop
push
inc
rorl
out
sbb
inc
jns
mov
and
dec
pop
out
cmp
or
cli
cmp
push
push
cmpsl
jge
lods
mov
xor
inc
pop
notb
and
add
push
std
bndstx
movsl
out
lds
ret
pop
call
stos
jp
dec
jg
inc
inc
sbb
pop
jae
outsl
dec
aam
loope
lret
negb
mov
leave
mov
jo,pn
mov
arpl
leave
test
sbb
xor
shll
mov
lcall
mov
sbb
mov
pop
imul
addb
mov
iret
push
mov
or
cmpsl
push
pop
xor
adc
sti
scas
xchg
fdivrs
fsubs
leave
imull
and
scas
xchg
xchg
xchg
sbb
xchg
scas
out
cwtl
lret
adcb
in
into
cmp
sbb
push
insb
dec
addr16
mov
xchg
fnstsw
out
push
lret
daa
test
aas
jle
and
pop
addb
mov
add
add
arpl
and
repnz
pop
cmc
dec
mov
mov
or
mov
lret
mov
pusha
pop
lret
shll
mov
push
inc
mov
loopne
shr
add
ret
loope
sbb
mov
rcll
jl
cmp
popf
or
andb
aam
inc
mov
iret
lods
lock
mov
in
movsl
cmp
sbb
xchg
pusha
out
pop
ret
jge
and
inc
scas
fcomps
jmp
jle
lea
shrb
hlt
popa
mov
inc
je
xchg
leave
xor
fisttpll
jno
push
imul
inc
andl
push
sbb
xchg
push
ja
sub
cmp
pop
into
imull
lock
rclb
enter
loope
into
fisttpll
inc
scas
fildll
cmpsl
mov
push
cmp
pcmpeqw
xor
sbb
dec
cmpsb
sarb
scas
xchg
loopne
stc
mov
sub
clc
cmp
and
ret
popa
sbb
in
or
in
lret
out
bound
xor
dec
in
jno
out
xor
dec
pop
jnp
adc
dec
inc
sub
adcl
mov
inc
sbb
or
add
xor
popf
imul
add
cmp
dec
sarb
rcll
mov
fsubrl
xor
xchg
pushl
into
mov
rcrl
aad
lds
mov
in
mov
stos
out
loope
jns
mov
in
mov
mov
dec
adc
push
fidivl
rolb
jl
adc
seta
adc
jl
ds
call
and
add
adc
testb
cwtl
pop
es
sbb
iret
mov
arpl
call
or
xchg
loop
push
pop
inc
mov
in
mov
dec
je
sar
icebp
scas
lea
cmpsl
mov
xor
ljmp
sub
push
sbb
inc
lret
mov
or
cmpl
insb
dec
arpl
jne
xor
xchg
mov
incb
cmp
fdivs
sub
xor
out
aas
jecxz
mov
mov
loope
inc
ret
sub
mov
xchg
movl
aad
sub
ficompl
mov
rorl
ljmp
mov
add
pop
mov
inc
std
testb
pop
dec
mov
push
mov
sbb
movl
mov
mov
shrb
sarl
movsb
mov
dec
aad
mov
in
push
cmpl
cmp
push
fidivs
xchg
shl
fmull
fidivrl
inc
push
jle
push
sub
push
lcall
xchg
xchg
xchg
jno
in
cltd
jl
lcall
cmp
arpl
cli
mov
repnz
test
ret
int
cmp
mov
mov
mov
fcomps
stc
xchg
or
add
test
mov
or
scas
inc
mov
fldl
push
in
xor
inc
aam
sbb
jo
mov
push
shll
xor
iret
inc
out
std
ljmp
aas
ljmp
fcmovu
add
bound
xchg
mov
sbb
dec
or
movsl
loopne
jle
bound
rorl
push
mov
jns
pop
adc
fcmovbe
and
into
scas
lods
xchg
in
xchg
xor
xor
test
push
jnp
pop
or
out
adc
xchg
cld
push
fsubs
mov
iret
out
mov
cmp
pop
pop
orl
jmp
cli
sbb
inc
frstor
repz
faddl
repnz
ficomps
jge
lcall
orl
roll
xchg
enter
sarl
mov
and
push
inc
add
adc
das
fwait
mov
dec
js
cmc
add
add
dec
icebp
bound
rcr
sti
cltd
and
ret
xchg
ficoml
loop
xor
sbb
imul
je
sub
pusha
cmc
push
pop
mov
repz
xor
mov
in
scas
loop
push
bound
out
mov
xor
loope
lock
test
mov
lods
imul
shlb
mov
dec
mov
dec
mov
push
mulb
push
or
xchg
mov
xchg
ss
stos
jb
out
cmpsl
daa
lock
or
mov
frndint
imul
cld
enter
aas
adc
iret
dec
fsubrl
push
insl
sub
sub
mov
lret
cmp
mov
das
add
outsl
push
ljmp
pop
fisubrs
sbb
mov
nop
lea
enter
ret
jns
push
pop
lock
add
push
aad
mov
scas
xchg
stos
out
aam
jae
cltd
mov
test
push
jge
movl
mov
rolb
push
dec
scas
mov
sub
xchg
pop
aad
xchg
push
in
js
mov
out
sti
out
adc
inc
push
pop
push
sbb
ret
jp
imul
sbb
inc
jl
pop
jmp
out
pop
lods
jg
inc
push
pusha
in
ss
inc
and
inc
mov
lcall
scas
push
lret
in
cltd
adc
mov
cmp
in
incl
inc
cs
sub
outsb
fildl
lahf
outsb
and
adc
lcall
adc
add
repz
sub
adc
lret
xchg
push
add
repnz
pop
test
into
cwtl
je
dec
inc
push
negb
fst
mov
loope
dec
stos
pushl
enter
mov
outsl
xor
lret
and
addl
repz
jmp
cli
jbe
ficomps
or
mov
push
mov
stc
mov
inc
dec
andl
jae
push
cmp
mov
mov
stc
pop
shrb
jne
js
and
negb
movsl
rol
inc
andb
push
adc
aaa
xchg
shr
mov
mov
pop
xorb
iret
mov
jl
inc
cmp
and
or
in
push
aad
mov
ret
cs
dec
pop
sbb
xchg
cltd
xchg
out
daa
das
push
mov
xor
dec
jp
dec
lss
scas
rorb
stc
lcall
mov
fistl
hlt
addl
fisttps
fldl
mov
je
es
imul
ljmp
sbb
cmp
in
lret
int
xchg
sbb
imul
adc
mov
test
ror
int3
bound
push
mov
jae
aas
and
std
mov
leave
lods
push
loopne
inc
add
pusha
lret
xlat
or
and
leave
fwait
lret
mov
inc
push
inc
add
push
int
es
movb
pusha
add
iret
add
sbb
inc
mov
std
inc
dec
inc
loope
sub
scas
cmp
out
xchg
int
inc
sbb
dec
loopne
push
fs
xchg
or
mov
add
cmp
daa
lea
into
add
imul
repnz
fimull
jg
rcl
fimull
sbb
ret
sub
lret
test
sub
mov
sbb
hlt
adc
xor
pop
jne
push
iret
or
outsl
xchg
shlb
cmpsb
scas
sub
lds
mov
pop
insb
fcmovb
add
into
ljmp
icebp
push
repz
out
sub
adc
mov
shl
imul
mov
mov
or
pushf
or
aas
adc
sub
pop
xor
xor
jne
mov
adc
rorl
jg
jp
sbb
mov
dec
lret
jnp
push
fimuls
and
mov
mov
jae
gs
mov
xchg
mov
and
xor
je
pushf
aas
inc
and
iret
adc
inc
fsubs
loopne
sbb
in
or
loope
test
and
fdivp
push
adc
xchg
and
leave
cmp
xchg
dec
add
fistpll
ds
pop
js
bound
out
shll
jnp
shrb
insl
stc
call
pop
push
xor
xchg
cs
and
sub
mov
mov
and
push
movsl
fisttpll
outsb
test
push
jg
loop
stos
fwait
sbb
ja
sti
je
sub
cmpsl
iret
test
in
jge
in
imul
test
jo
sub
cmp
jge
lahf
jae
sub
pop
xor
xlat
es
or
or
popa
ret
sub
add
test
jg
inc
mov
imull
and
dec
inc
jecxz
jb
mov
in
fs
xchg
subl
push
xor
mov
adc
dec
xor
popf
dec
dec
sub
lahf
fsubrl
jnp
dec
or
adc
cltd
repnz
inc
adc
xchg
dec
pop
or
iret
adc
xchg
cmp
xor
cwtl
lahf
aas
add
int
mov
ret
sarb
cld
sbb
inc
mov
popa
popf
out
xor
in
cld
stc
xlat
cld
mov
pop
cli
filds
mov
lret
arpl
or
xchg
dec
adc
adc
jg
daa
sbb
movsl
lcall
sub
jle
sub
ds
xchg
sbb
inc
mov
pop
or
dec
icebp
je
rorb
pop
jno
outsb
sbb
adc
loopne
idivl
xchg
sbb
sbb
andb
into
sub
hlt
rcrb
dec
push
mov
jns
and
xchg
cli
fcomip
lds
lahf
xchg
fsubs
cld
aaa
adc
fdivrl
arpl
movsb
mov
rcrl
inc
cwtl
push
adc
push
hlt
insl
imul
ret
in
jbe
push
mov
and
mov
repz
gs
sarb
and
inc
aad
in
dec
mov
cmc
jle
jp
leave
jp
hlt
push
orl
in
mov
fld
cmp
stc
aam
fadds
push
dec
xchg
mov
lea
sub
outsl
mov
push
jp
in
xlat
push
jno
lock
lock
js
cs
mov
gs
cmpsb
aad
mov
stc
cwtl
icebp
js
mov
ja
pop
jecxz
ret
push
insb
pop
stos
push
sbb
movsb
ja
lods
gs
stc
and
or
subb
ret
mov
fxch
jb
adc
xchg
outsb
xor
sti
scas
xchg
cmp
mov
cmc
sbb
xor
mov
rolb
mov
jo
dec
testb
lds
nop
cltd
iret
stos
in
cli
push
test
std
push
push
fs
lret
int
movsl
xchg
aas
jns
mov
dec
ja
xor
and
pushf
mov
scas
xor
stc
push
jmp
inc
imul
and
shrb
sbb
jmp
test
mov
lods
popf
push
pop
sahf
and
mov
scas
iret
lods
aam
dec
cs
aaa
sub
outsb
mov
mov
and
paddsb
popf
outsb
jo
rcrb
mov
or
subb
cltd
jnp
pop
pop
mov
das
pusha
xor
inc
pusha
lods
pop
aam
add
loopne
xlat
popf
fs
push
or
je
shrl
mov
adc
lahf
and
sub
popa
push
dec
and
scas
xor
cmpsl
in
loop
push
call
shr
int3
mov
dec
cmc
xchg
mov
dec
and
pop
sbb
mov
mov
xchg
insl
rcr
fimuls
test
dec
cmp
test
or
cmp
push
jo
fistl
and
push
cmp
jno
xchg
pop
bound
sahf
push
mov
dec
movb
add
in
loopne
adc
test
pop
sub
test
pusha
push
mov
push
and
adc
mov
movsl
shr
pop
sub
jns
lret
test
adc
add
jle
mov
mov
les
pop
adc
pushf
xchg
orl
int3
dec
pushf
jnp
cld
aad
xchg
in
pop
mov
fisttps
dec
jle
push
or
adc
loope
sbb
pop
scas
add
gs
mov
int
addl
jl
fistpl
data16
fdivl
loope
pop
cmp
push
mov
scas
mov
jl
mov
xchg
cs
idiv
or
fisttpl
push
add
js
mov
xor
mov
inc
pop
sahf
enter
inc
loope
fisttpl
iret
or
out
xor
scas
and
xchg
cmp
das
fisubs
shr
dec
out
daa
adc
and
les
sti
ret
popa
ret
shll
push
fwait
scas
xchg
sbb
jno
cs
push
imul
dec
repnz
faddl
pop
rolb
insl
movsb
in
jbe
inc
punpcklwd
add
sahf
enter
fcoms
sti
shlb
icebp
jnp
les
adc
std
mov
ret
cmp
sub
adc
adc
and
dec
add
jle
cltd
into
pop
das
shl
xor
fsubl
xchg
sub
mov
inc
ret
out
xchg
inc
inc
cld
int3
pop
sub
pusha
pop
push
aaa
out
xchg
mov
jae
add
imul
stos
ljmp
mov
fldenv
ret
xchg
sbb
out
rcrb
cltd
ret
scas
gs
cli
iret
rcrb
mov
dec
jo
ss
cmp
clc
sub
adc
sbb
int3
loope
leave
inc
std
fstenv
or
mov
sub
lret
jmp
jbe
inc
sahf
lahf
push
push
xlat
push
int
mov
lahf
clc
mov
mov
pop
jbe
test
adc
les
aas
and
pushf
xlat
mov
cmp
insl
sub
xor
push
mov
xor
lret
xchg
orl
mov
jns
repnz
xchg
inc
ljmp
in
mov
xor
ds
cmc
imul
test
mov
ja
cmp
movsb
pop
test
cmp
jno
push
and
aam
aas
fidivs
fwait
add
sub
jae
push
lret
push
mov
inc
fildl
bsf
or
adc
mov
je
inc
sahf
arpl
ss
hlt
iret
stos
data16
adc
movsl
add
xchg
jecxz
ss
in
xor
mov
outsb
enter
mov
pop
pop
hlt
or
test
pop
mov
inc
fnstenv
and
int3
les
ret
mov
inc
mov
out
jmp
xchg
pop
bswap
cli
jno
rcl
fisttpll
movsl
push
lods
and
adc
add
sub
mov
fnsave
fidivl
push
xchg
gs
add
add
push
lret
inc
adc
cmp
mov
adc
data16
das
mov
icebp
out
imul
mov
out
scas
test
or
int3
imul
jns
std
and
out
in
mov
push
out
xchg
movsl
outsb
loop
cmp
mov
jg
mov
mov
gs
cli
imul
cmp
push
movb
fisttps
in
mov
aad
and
cs
jg
jne
into
xor
mov
mov
sbb
sbb
rcll
sbb
pop
or
pop
stos
pop
out
packuswb
or
inc
enter
lods
lcall
sub
loopne
mov
into
shrb
cmp
test
outsb
push
ds
rorl
xchg
pop
push
fisttpl
mov
hlt
outsb
testl
mov
mov
xchg
pushf
sbb
push
cs
add
mov
lahf
insb
pop
push
inc
out
sub
push
xor
push
in
cmp
adc
dec
lcall
pop
mov
cmpsb
test
addr16
outsl
push
fistpll
in
adc
pop
xorps
push
fnstcw
xor
push
ds
rep
xor
rorb
cwtl
enter
or
movsb
lahf
in
cwtl
add
bound
mulb
inc
ret
inc
lcall
add
sub
jb
dec
in
pop
dec
movsb
daa
cli
cmpsb
dec
inc
hlt
iret
sub
test
repz
jns
roll
jo
lahf
sub
cmpsb
ss
loope
pop
scas
dec
sbb
test
xor
cmp
ss
nop
int3
or
mov
sub
cli
ret
xor
sub
outsb
xor
xor
push
lea
pop
push
and
loopne
inc
xchg
inc
inc
xchg
mov
dec
jbe
cli
mov
xor
in
mov
jg
push
push
pop
insb
ret
std
xchg
or
out
fbld
mov
pop
lds
notb
insl
and
sub
adc
hlt
jp
loopne
adc
push
aaa
in
sbb
push
push
xchg
xor
iret
lds
lock
xor
in
dec
sbb
shl
ja
sub
lods
stos
imul
aad
stc
loop
and
dec
mov
xor
mov
loope
int3
jp
fldenv
insl
nop
testb
imul
push
push
ljmp
outsb
mov
cmp
or
sti
in
das
pop
pop
mov
fisttpll
mull
or
inc
insl
loope
out
imull
fistl
mov
lea
fiadds
cmp
arpl
fnstcw
out
adc
push
mov
aad
imul
imul
test
mov
jae
add
dec
push
mov
test
decb
mov
push
fldenv
fsubrp
cltd
lods
pavgb
je
popf
cmp
sub
pop
jae
clc
cmp
cwtl
cld
cmpsb
xchg
scas
into
and
add
loop
loope
lahf
push
lcall
gs
jns
mov
jo
icebp
mov
mov
nop
data16
fwait
lds
pop
jns
shll
jo
popf
arpl
push
popf
scas
test
mov
test
int3
cltd
mov
pop
pop
stc
lds
insl
mov
sbb
insl
mov
out
shrb
xchg
rcll
dec
lret
cmp
sbb
loope
imul
add
dec
and
mov
arpl
or
xor
in
sub
jge
arpl
mov
jbe
lret
scas
je
inc
loop
jmp
mov
test
clc
ret
test
subb
in
xor
mov
outsl
mov
vpslldq
mov
adc
jb
rcrl
ss
lods
ljmp
add
les
inc
flds
lods
test
mov
push
shll
or
ja
loop
inc
cmpsb
call
das
xchg
or
dec
push
cld
xchg
lds
out
lea
or
mov
mov
cli
jne
fcoms
leave
bound
int3
xlat
xor
out
push
ljmp
jmp
sub
mov
mov
loopne
xchg
iret
xor
aas
loop
pop
xchg
mov
xor
jl
out
and
xchg
jp
mov
loop
in
arpl
adc
xor
or
gs
push
ss
add
aad
adc
mov
pop
xor
ljmp
sbb
mov
adc
call
or
cmpsl
arpl
cltd
adc
mov
pop
into
mov
repz
aas
xchg
rcrb
adc
xorb
lods
mov
loopne
js
add
aaa
sub
dec
adc
mov
mov
lret
movsl
in
out
hlt
mov
sbb
cmp
in
in
inc
mov
push
push
ret
sarb
mov
fldlg2
mov
jmp
xor
cmp
xor
mull
lret
nop
pop
pop
bnd
pop
loope
or
ret
and
dec
das
xchg
les
loope
push
adc
setp
loop
mov
dec
into
xchg
fs
aam
push
fwait
js
leave
shrl
mov
jp
lods
ret
je
xchg
stos
test
add
lods
cmc
gs
hlt
test
push
mov
mov
dec
sub
dec
push
mov
sub
dec
ds
outsb
dec
dec
mov
cmp
push
and
inc
mov
stos
cli
jns
xchg
loop
ret
inc
std
nop
sbb
or
sbb
adc
sub
xor
and
adc
xchg
mov
pop
mulb
test
sahf
sbb
nop
or
lock
lds
mov
dec
inc
sbb
cmp
stos
mov
sub
rclb
bswap
addr16
lret
repnz
out
and
cwtl
sub
ror
clc
xchg
out
adc
iret
jp
ret
mov
mov
clc
aam
mov
js
popa
outsb
dec
adc
shlb
mov
lods
sub
xorl
adc
push
inc
cmp
adc
jle
ret
sti
cs
cwtl
xor
mov
clc
cmp
push
xor
or
pop
fcmovnbe
mov
jne
adc
dec
mov
adc
pop
mov
ljmp
and
dec
jbe
shll
scas
mov
pusha
stc
or
sub
and
mov
popa
push
cmp
fdivrs
push
push
jae
jp
and
xchg
out
mov
and
inc
jg
js
mov
outsl
add
push
sqrtps
inc
mov
push
ficomps
sub
repz
add
sahf
mov
sbb
ret
loop
pop
and
ja
xchg
xchg
mov
push
in
sti
xchg
pop
insb
loopne
mov
insl
in
mov
iret
loope
cli
subl
jnp
jle
aaa
cmp
jne
xor
mov
push
sub
mov
pop
mov
cmpsl
add
les
xor
cmp
stc
sarb
clc
insl
ja
daa
cltd
addb
mov
sbb
inc
cmp
mov
dec
icebp
xchg
push
std
jnp
aad
sbb
ret
jle,pn
pop
push
imul
push
fisubrs
mov
cmpsb
test
or
push
sbb
fstpl
pop
popf
inc
repnz
add
add
mov
xchg
mov
into
enter
lcall
xor
cmc
xor
dec
push
mov
mov
cmc
add
enter
lock
insb
in
cmc
test
ljmp
lret
pop
sbb
sub
stos
rol
and
mov
dec
faddl
dec
pop
loopne
ja
inc
mov
inc
push
mov
pop
inc
out
mov
mov
rorb
stc
inc
or
lds
dec
fmuls
fwait
sub
mov
test
jge
cld
shrb
xchg
add
xchg
lret
mov
sbb
and
jb
in
xchg
loop
xchg
xchg
mov
lods
dec
mov
mov
andl
jb
mov
push
insb
pop
inc
cmp
je
mov
shl
inc
mov
mov
sub
sub
pop
loope
pop
aas
rcrb
add
loope
xlat
and
xor
test
and
popa
movsb
js
fsubl
mov
push
cmp
sbb
push
lds
std
mov
je
adc
mov
cld
sbb
pop
cmc
icebp
push
pop
mov
leave
jb
rcll
xlat
in
inc
aam
js
int3
xlat
ret
mov
out
stos
sub
popfw
outsb
movsl
push
xlat
inc
xchg
stos
sbb
fnstenv
xchg
pop
jecxz
insb
jbe
xor
fnstenv
mov
insl
sub
lret
shll
push
aaa
sub
adc
sub
xchg
in
cmp
icebp
push
xchg
fisubl
lods
pop
lods
out
popf
sti
ret
ja
xchg
lcall
push
cwtl
jb
lock
and
fnsave
push
sub
dec
imul
stc
xor
fildll
out
sub
push
cmpl
sub
mov
or
sub
lds
cmc
pop
add
add
es
lea
data16
test
je
jb
out
out
inc
arpl
lret
push
add
inc
iret
stos
jne
push
adc
je
sub
jg
adc
enter
jmp
pop
sub
stc
dec
cmc
jl
xor
mov
push
sub
mov
cmpsl
cmpsb
dec
mov
shll
les
adc
cmp
lock
xchg
or
mov
sti
jge
in
gs
mov
ss
ror
dec
add
cli
sbb
out
mov
xchg
aaa
lea
push
cmp
je
mov
jle
xlat
xlat
pop
adc
jle
xchg
pop
shlb
cmp
fidivrs
es
pop
loope
push
cmpsl
int3
stc
jecxz
rcrl
mov
dec
js
into
ret
popa
jns,pt
cmpl
dec
imul
jae
sbb
push
dec
mov
sub
fdivp
or
push
sbb
dec
xor
loopne
lds
jbe
pop
das
movsl
test
jge
push
dec
in
cmpsl
xchg
sahf
int
cmp
fiaddl
and
sbb
mov
frstor
and
push
mov
int3
inc
inc
and
xor
mov
sub
xor
mov
fsubrp
mov
shlb
xor
cmp
or
mov
xor
or
sbbb
pop
sub
sar
sbb
xchg
jae
loop
cmpl
jo
loope
cltd
mov
jno
aaa
fsts
push
mov
fadds
push
lock
pop
inc
fxch
jnp
cmc
fwait
stc
je
mov
and
mov
adcb
lret
lret
lds
pop
scas
inc
jb
icebp
dec
aaa
cld
pop
jno
out
dec
pop
or
push
dec
lock
test
push
jnp
push
icebp
call
mov
ficompl
repz
mov
les
mov
lcall
add
aad
adc
arpl
lahf
pop
aam
inc
arpl
dec
inc
jne
push
mov
adc
jmp
xchg
das
fwait
int3
imul
lret
and
pop
fsubrp
xor
push
mov
push
jo
push
orl
pop
mov
cwtl
inc
mov
mov
out
test
add
notl
xchg
mov
ficoml
mov
jmp
xor
test
or
dec
ss
dec
push
mov
push
and
scas
mov
shl
inc
ret
mov
cmp
sub
add
mov
mov
sbb
push
lret
inc
mov
pop
jecxz
divb
mov
jp
xchg
aam
xor
mov
ss
adc
aad
dec
push
ja
incb
add
jns
addl
jb
adc
test
add
push
rcl
ficompl
movsb
in
out
and
imul
xchg
mov
pop
xor
rcr
pusha
mov
ret
insl
or
test
icebp
int3
mov
ret
inc
ret
lods
scas
mov
jmp
shlb
jp
stos
or
mul
fnstcw
inc
add
dec
cmp
les
pop
inc
mov
xlat
adc
inc
xchg
and
lods
push
xchg
sbb
je
dec
mov
in
jno
outsb
mov
jb
sbb
cli
or
cmp
sbb
scas
sbb
sbb
xchg
mov
fistpl
clc
cmp
data16
push
dec
lret
addr16
push
sub
dec
aaa
ret
and
lock
andl
ret
mov
sub
xlat
repnz
adc
cmp
cs
cmp
xchg
loopne
xchg
mov
jge
dec
fstl
jmp
mov
sar
mov
dec
mov
insl
xor
rcrl
repz
rcrb
xchg
out
inc
mov
rcll
jle
mov
cmp
aad
inc
sub
push
clc
xlat
dec
lahf
jge
mov
outsb
popa
mov
jecxz
out
outsb
sahf
xor
sub
xchg
dec
rcr
lret
mov
jne
loope
test
sbb
cwtl
cmpsb
mov
aaa
cmp
js
sti
jg
gs
or
insl
sbb
popa
jo
daa
jmp
dec
mov
xchg
dec
mov
mov
adc
hlt
dec
lods
jns
jmp
push
jge
out
icebp
mov
jnp
iret
nop
sub
jecxz
sti
pusha
mov
push
mov
incb
pop
movsb
jno
jp
cs
lcall
lods
es
aad
mov
test
mov
cmpsb
sbb
mov
dec
shll
aas
push
add
push
leave
fsts
lcall
enter
sbb
in
xchg
mov
sub
or
repnz
dec
stos
and
inc
gs
push
cmp
dec
xchg
inc
rorb
push
ss
sub
movsl
mov
cmp
mov
push
or
movsb
std
pop
sarb
lods
fistl
lcall
lock
pop
mov
je
int3
scas
add
pushf
jp
pop
in
inc
outsl
mov
mov
and
mov
or
dec
negb
sbb
jecxz
popf
jbe
scas
cwtl
dec
enter
pop
xor
addr16
xchg
dec
in
dec
enter
sub
icebp
dec
xchg
pop
inc
dec
addl
xor
popf
popa
icebp
sarb
or
push
js
jmp
lock
mov
ds
lahf
mov
in
dec
pop
or
shll
mov
xchg
sbb
int
cmp
sub
or
sbb
cmp
gs
mov
inc
cltd
popf
jle
insl
addr16
pop
fbstp
xchg
mov
sbb
movaps
nop
cmp
in
jmp
loopne
movsl
mov
jmp
out
aad
sbb
enter
adc
cmpsl
jecxz
mov
mov
fdivrl
jmp
sbb
inc
mov
pushf
in
jl
addr16
pushl
mov
xchg
pop
leave
mov
lahf
pop
mov
rcr
push
fmull
inc
out
cmp
lcall
dec
pop
and
stc
pop
jl
push
mov
lret
stos
push
es
xchg
sub
enter
and
add
out
test
mov
cmpsb
popa
leave
lods
cmp
jg
sbb
lret
cmp
or
xlat
sub
xchg
shll
dec
dec
ret
test
jg
sub
icebp
rorb
cmp
rorb
add
push
fcompl
decl
and
arpl
xchg
add
sub
mov
mov
xchg
cltd
gs
jnp
xchg
sbb
cmp
cld
pop
cmp
jecxz
fcmovnb
fisttpll
sar
sbbb
movsb
sub
or
push
cltd
pushf
fwait
xchg
xor
in
inc
lock
out
rorb
enter
popa
addr16
sub
xchg
or
mov
divl
jae
out
jns
and
ret
repz
push
pop
sub
aam
aam
loope
xchg
aaa
loopne
dec
add
adc
push
fcompl
and
mov
push
mov
lahf
in
cltd
out
mov
mov
and
popa
xor
pusha
movsb
mov
push
and
scas
jmp
adc
or
push
lea
xchg
rorb
arpl
mov
cli
mov
cmp
xchg
ret
jno
add
xchg
jmp
or
jg
imul
mov
sbb
jne
jns
add
mov
fcomps
sbb
repnz
xchg
dec
imul
or
pop
scas
add
add
mov
out
icebp
rclb
decl
popa
sub
xor
jno
push
sbb
adc
inc
push
in
add
xchg
push
pop
test
lea
mov
jo
sbb
in
rolb
popa
dec
rcrl
insl
mov
pop
pusha
hlt
mov
stos
pop
jne
lcall
push
in
xchg
adc
push
fiadds
adc
and
inc
hlt
xlat
dec
sti
add
ja
mov
cmp
clc
mov
outsl
cmp
sarb
int
mov
scas
sahf
xor
dec
xor
inc
nop
xor
cmc
insl
mov
pop
in
mov
mov
xchg
inc
icebp
and
xchg
sbb
shl
outsl
sub
lahf
ljmp
dec
scas
xlat
les
or
xorl
pop
repz
rorl
xchg
xchg
xor
or
pop
scas
test
in
lds
mov
mov
leave
test
xor
push
jo
cli
jge
out
cli
lcall
cwtl
xchg
movsb
leave
repnz
pop
adc
mov
test
pop
ficompl
pop
rclb
std
out
jno
aam
pcmpeqw
pop
fimull
hlt
jmp
adc
imul
into
xlat
insb
aad
adc
gs
fdivp
pop
pop
lahf
sub
push
or
mov
jae
arpl
sub
adc
inc
bound
or
push
cmpb
ss
add
stos
fistl
pop
aam
fcomps
arpl
stos
fstpl
push
in
loopne
cmp
push
jo
dec
lret
dec
loope
and
insb
pushf
fldl
pushf
scas
sbb
dec
loopne
xchg
mov
jecxz
sbb
orb
dec
out
cs
stc
outsb
pop
rorl
mov
stc
lods
pop
xchg
les
lock
sub
test
xchg
jnp
xlat
imul
int3
xchg
and
pop
mov
jno
stos
cmp
adc
out
pop
test
inc
dec
add
shrb
or
mov
pop
icebp
pop
dec
mov
inc
xor
dec
loopne
xchg
in
sbb
jno
jecxz
mov
fs
pop
jle
jmp
jecxz
adc
mov
sub
inc
int
data16
add
sbb
jno
pop
lcall
adc
inc
loop
negl
lock
or
in
cli
iret
xchg
or
jecxz
mov
repnz
out
mov
xchg
jno
sub
mov
outsl
stc
mov
mov
xor
mov
aad
lea
jb
jl
fxch
lret
mov
mov
movsb
mov
sub
xchg
mov
add
ljmp
lret
xor
lret
add
outsl
or
mov
int
jl
iret
arpl
sub
add
fwait
add
adc
es
pop
dec
jmp
lahf
inc
movsl
ret
mov
or
fistpll
cmp
jno
adc
inc
outsl
dec
icebp
adc
inc
push
test
push
les
sti
inc
inc
addl
loopne
sti
pop
xchg
cwtl
push
sub
pop
gs
sbb
faddl
jl
cmp
mov
stos
sti
push
scas
movsb
cmpsb
cmp
lahf
adc
push
dec
jo
mov
mov
test
in
movl
sub
aad
out
and
cmp
testl
and
test
fldenv
mov
bswap
or
bound
add
push
jns,pn
pop
dec
cmp
sub
jecxz
jmp
jmp
mov
jp,pt
sbb
out
je
cltd
adc
push
call
scas
add
xchg
pusha
mov
xchg
sbb
subb
cli
std
jne
cmc
adc
cmp
mov
les
mov
jnp
fcmovnu
daa
inc
dec
mov
and
cmpsb
test
inc
es
add
adc
dec
mov
cmp
dec
jnp
mov
insl
sbb
sub
pushl
mov
pop
push
mov
pop
xchg
inc
imull
add
test
mov
pop
xchg
aam
test
fcomps
inc
mov
scas
stc
inc
jne
test
je
lret
push
outsl
or
add
sbb
inc
pushf
pop
fidivl
mov
out
sahf
pop
repnz
loopne
inc
out
out
cmp
call
push
and
jns
cld
insb
mull
bound
stos
mov
ja
shll
fisubl
ja
incb
mov
xor
dec
cmpsb
pop
mov
add
adcl
mov
popa
mov
xchg
js
out
popf
sub
dec
data16
movsl
inc
push
gs
sbb
lods
mov
pop
fsubrs
cmp
pop
aam
rcr
jmp
mov
dec
pop
sub
push
loopne
adc
adc
push
add
gs
out
or
mov
push
jecxz
sbb
cmp
cs
push
xlat
xor
or
andl
lcall
test
test
leave
dec
jb
xor
dec
inc
pusha
cmp
jo
loopne
dec
cmp
aad
push
dec
inc
pop
les
jae
and
adc
psubd
aam
sbb
adc
jp
or
jb
xor
ret
je
fmulp
scas
mov
icebp
push
inc
dec
sub
adc
loop
pop
push
adc
add
jb
stos
adc
jle
je
pop
into
sbb
bound
sahf
add
adc
std
sub
or
mov
push
mov
call
sbb
jmp
out
pop
pop
or
std
jecxz
bound
into
inc
dec
repnz
mov
push
mov
jo
xor
push
test
mov
ret
xchg
in
mov
xchg
sub
sub
mov
out
xchg
outsb
dec
lcall
call
jl
shrl
aas
mov
xchg
sub
jb
sub
mov
push
repz
push
cmp
scas
jge
pop
cmp
sub
je
and
rolb
xor
cld
jl
adc
ret
ret
loope
enter
mov
int
lock
mov
push
lea
out
pop
roll
push
fcmovnu
es
xor
mov
push
sbb
mov
adc
cmp
les
cli
divl
dec
imul
popf
xchg
test
fstps
pusha
popa
popa
imul
int3
mov
aas
test
or
or
and
arpl
stos
mov
sahf
mov
icebp
ja
in
imul
cmc
in
push
mov
push
movl
loope
add
xorb
push
push
aaa
or
xchg
add
sub
xor
fistpl
fdivrp
add
movsb
or
cwtl
cmpsl
clc
and
lcall
in
fnstsw
mov
mov
sub
roll
gs
pop
add
cmp
leave
xor
mov
sbb
jnp
je
sahf
push
inc
sub
insl
push
flds
sahf
mov
popa
movsb
jle
bound
fsubrl
jl
add
push
or
daa
fldl
outsl
fpatan
dec
add
push
xchg
ret
pop
in
dec
out
cmpsb
mov
stos
imul
aas
jns
test
xchg
rcll
jo
ds
cmp
and
int3
push
imul
push
ja
jge
dec
pusha
sub
jl
sub
adc
loopne
jae
gs
mov
fists
clc
jle
loop
or
ja
inc
jg
xchg
inc
sub
test
and
push
pop
call
or
filds
ret
xlat
ss
jno
jno
ret
cs
mov
aam
cmp
jmp
pop
inc
cwtl
imul
xchg
sbb
pop
fldt
pop
mov
shlb
outsb
xlat
or
xor
xchg
mov
xor
and
dec
ss
cmc
iret
xchg
xchg
or
rorl
loopnew
dec
add
xor
push
xor
ss
mov
inc
and
xor
ss
sub
dec
lds
ret
xor
imul
ret
divps
or
adc
mov
xchg
push
xor
es
shrb
xlat
dec
xchg
fwait
push
rorl
cmp
arpl
sub
push
addb
xchg
inc
cmpsb
xchg
mov
faddl
lret
cld
inc
fwait
lods
xlat
adc
cmp
cmpsb
lret
inc
dec
dec
fstpt
mov
cmc
mov
sub
mov
imul
pop
inc
fs
lods
xchg
movsb
testl
test
pop
cmc
push
xchg
mov
add
dec
insb
dec
fdivrp
xchg
stos
icebp
divl
adc
and
lock
int3
filds
add
imul
jl
imul
or
lock
data16
pop
jge
in
mov
push
test
clc
push
push
test
push
sub
add
mov
cltd
and
mov
xor
ja
xchg
jg
call
imul
or
popf
test
or
inc
cld
jmp
test
je
pop
inc
adc
jne
popa
mov
ss
daa
inc
push
lods
sahf
cli
in
inc
push
out
sub
add
pop
or
lods
cmpb
dec
rorl
into
and
jbe
mov
cmc
ucomiss
mov
cltd
sub
in
daa
fs
lods
mov
and
push
add
std
lcall
inc
lods
pop
sbb
orl
lahf
jno
out
mov
sbb
sbb
shll
sub
mov
add
xchg
xor
popa
mov
daa
xchg
data16
and
push
sub
mov
dec
mov
popf
int
xor
push
and
jb
cwtl
push
repnz
shlb
jecxz
lahf
cmp
leave
out
les
sbb
pop
test
fsubrl
mov
jl
rorl
loop
inc
ret
push
mov
cmp
cmp
sbb
push
lods
fs
or
push
push
or
push
push
dec
std
dec
xchg
repnz
pop
in
mov
loopne
popf
out
add
cmp
fucomi
cmp
add
xchg
in
pop
jg
lods
int
xchg
mov
inc
gs
pop
testb
pop
into
inc
cltd
nop
mov
inc
sbb
fs
push
add
sbb
push
or
pop
fistl
scas
lret
cld
sub
cmpl
push
loope
ss
rcrb
inc
fstpl
and
xlat
rcrl
mov
sbb
or
push
add
jo
mov
addr16
jbe
sub
mov
inc
sub
xor
and
push
adc
pushf
inc
mov
test
arpl
jnp
dec
adc
sub
fs
in
push
int
ret
icebp
iret
sub
xor
inc
push
mov
scas
and
push
or
add
push
or
scas
das
or
xor
in
ficomps
xchg
lea
leave
lret
sub
inc
es
ljmp
outsl
out
lcall
int
in
fsubs
out
push
dec
push
cmp
addb
repz
pop
fidivs
jb
push
and
std
shlb
mov
ljmp
popf
outsl
inc
clc
sub
cmpsb
test
pusha
popf
mov
mov
pop
loopne
adc
insb
clc
mov
rclb
dec
cmp
loope
mov
sub
xor
pop
shrl
imul
mov
sub
mov
movsl
imulb
add
shrl
inc
mov
lret
addr16
xor
bound
sarl
mov
cmp
dec
xchg
fsubs
mov
rcll
lods
test
or
test
push
pop
ret
clc
mov
ds
stc
dec
les
xorl
sub
xchg
adcl
into
call
data16
dec
xor
insl
dec
inc
test
popa
mov
adc
subb
sub
inc
in
iret
lods
dec
jge
ja
mov
push
outsl
and
outsb
addr16
movsl
out
pop
mov
xor
mov
pop
jb
mov
gs
ror
lcall
sub
xor
mov
incl
hlt
cs
loopne
std
jnp
arpl
and
add
jmp
dec
add
imul
mov
xchg
ds
test
ret
stos
jno
pop
addr16
cld
jmp
xchg
mov
scas
push
xchg
ror
cli
ljmp
outsl
pop
add
xor
fsubrl
sets
xchg
popa
jb
loope
popf
inc
enter
subb
jl
adc
pop
inc
xchg
mov
mov
cmpsb
shll
loop
out
push
dec
cmp
jnp
xchg
stos
bound
sbb
out
pop
cmp
test
xchg
or
outsl
scas
mov
je
repz
idivl
sahf
movsb
stos
pop
loope
cltd
dec
mov
pop
inc
dec
je
cmp
ror
lcall
mov
imul
inc
and
aad
pop
or
adc
stos
mov
es
andl
mov
cmc
sbbb
push
cmp
xchg
imul
or
cmp
rcrb
jns
or
test
pop
in
ljmp
push
or
add
xchg
in
and
mov
xchg
inc
enter
aam
dec
pop
lods
jbe
jb
sar
nop
sbb
and
mov
out
jae
add
mov
fsubrl
mov
ljmp
bts
cmpsl
sub
push
push
mov
push
mov
fstpt
lret
jae
pop
lods
js
xor
inc
call
inc
in
mov
push
or
cmp
movsb
hlt
xor
dec
loop
lea
loope
das
xor
pop
ds
test
scas
mov
pop
jg
or
or
cmpb
mov
dec
sub
jl
xor
jno
loop
mov
cmp
mov
xchg
jno
xchg
xor
push
inc
adcb
mov
scas
mov
or
push
mov
fcoml
pop
mov
in
push
clc
xor
dec
xchg
rcrl
sub
mov
push
push
xor
inc
sub
xor
and
dec
xor
sub
jmp
in
stos
lods
add
insb
xchg
mov
jecxz
sub
subb
xchg
push
idiv
ficoml
cmpsb
call
daa
mov
aas
pop
sbb
rcll
xor
dec
sub
add
rcr
lret
fmul
sbb
sahf
outsb
aam
jbe
in
and
pop
pop
dec
in
xchg
movb
add
mov
or
pop
pop
hlt
mov
and
cmp
mov
rclb
sti
sbb
lret
daa
adc
in
rcl
sahf
clc
repz
xchg
movsl
push
call
frstor
xor
adc
pop
push
xor
aaa
es
push
adc
xchg
cmp
fadds
pusha
xor
pop
xor
jg
push
stos
and
pop
std
push
roll
gs
rcll
insb
movsb
mov
mov
call
jnp
fcompl
xor
imull
test
and
xchg
lcall
xor
test
add
jb
jne
jne
xchg
iret
cs
cmpsb
dec
jl
mov
mov
mov
pop
mov
inc
jae
paddsw
lods
cmc
push
sub
repnz
bound
and
mov
lods
xlat
push
xchg
sub
xchg
arpl
call
dec
inc
jns
inc
push
pop
mov
push
dec
loop,pn
aaa
repnz
push
call
sub
adc
enter
add
loope
stos
mov
mov
sarl
in
bswap
dec
test
and
xor
xchg
filds
inc
inc
cmpb
aaa
sbb
std
xchg
or
adc
adcb
movsb
imul
push
and
call
and
fidivrs
and
lret
jne
mov
lret
pcmpgtd
mov
out
xor
mov
daa
notl
sub
dec
loope
push
mov
or
mov
xchg
push
inc
xchg
aaa
call
mov
fildl
lret
mov
in
scas
push
or
mov
jmp
and
push
dec
sub
rcrl
jae
imul
mov
jbe
sbb
mov
or
nop
mov
jmp
fwait
lods
add
and
dec
in
adc
inc
dec
in
js
dec
in
mov
pop
pop
xor
mov
fwait
mov
cmpsl
fstl
xchg
pop
dec
or
xchg
sbb
inc
icebp
jnp
or
and
cwtl
sarl
add
mov
mov
repz
adcl
imul
lds
push
push
mov
and
inc
xchg
xchg
insl
xchg
shlb
idiv
inc
pop
rclb
add
iret
mov
movsl
ret
pop
dec
in
adc
jmp
xchg
aad
mov
cmpsb
sub
rcr
bound
inc
jecxz
inc
std
bound
jb
sti
sbbl
push
rolb
inc
subb
iret
mov
std
cli
pop
pop
xchg
stos
arpl
cmp
mov
push
cmpsl
rclb
aam
icebp
xor
xor
out
mov
movsb
dec
int
rorb
lahf
push
aas
xchg
cwtl
idivl
fstps
movb
outsl
out
sbb
mov
aaa
lock
pushf
push
roll
xchg
stos
push
aad
bound
imul
add
jle
jecxz
out
clc
mov
push
pop
xchg
lods
aas
push
add
fcoms
jbe
xchg
loope
repz
shlb
inc
insl
mov
popa
sarl
pop
inc
into
movsl
jl
sahf
push
and
popf
push
xchg
inc
dec
or
into
mov
mov
push
mov
mov
dec
cmp
mov
xor
sub
sub
outsl
cwtl
bswap
ja
scas
xchg
lret
push
stos
divl
lret
mov
inc
repz
or
rcl
add
cmpsb
cmp
adc
jmp
imul
inc
movsb
cltd
xor
fidivrs
shll
xchg
out
into
adc
jmp
adc
lods
lret
push
xor
jecxz
mov
jno
inc
hlt
pop
mov
sub
adc
mov
and
mov
mov
rol
xchg
arpl
cld
xor
notb
in
dec
out
les
cmp
scas
mov
call
mov
xor
icebp
out
push
adc
les
mov
fisubrl
jmp
jl
and
lret
or
decl
sub
filds
or
fwait
bound
push
cmpsl
aad
movsb
addr16
sbb
mov
or
adc
mov
aaa
nop
lret
lret
addl
cmpsl
adc
stos
sub
add
loopw
out
inc
popf
lret
dec
subb
jl
out
call
cmpb
jne
int3
push
mov
xor
sbb
pop
pusha
dec
xor
sbb
and
das
loop
mov
lods
add
nop
test
pop
scas
test
mov
jae
mov
cmpsb
inc
xor
mov
xor
xchg
or
mov
ss
gs
adc
testb
shlb
inc
lret
mov
and
dec
popa
lret
cmpsb
add
mov
jp
jbe
sub
cmp
sbb
pop
pop
and
das
push
or
xchg
sahf
pop
xlat
cmc
leave
icebp
cmc
xlat
addr16
fdiv
or
inc
adc
scas
lods
pushl
cmp
mov
nop
xchg
and
mov
lahf
xchg
xor
cld
mov
fldcw
jns
jne
push
movsb
sbb
iret
jb
jle
xchg
or
xchg
hlt
mov
popa
mov
mov
repz
cltd
jae
xbegin
xchg
ret
bound
dec
xchg
mov
push
leave
ds
stos
xchg
xorl
xchg
mov
or
or
lret
sub
or
jecxz
or
jp
inc
push
sbb
sbb
orb
mov
stos
mov
add
inc
adc
in
push
cli
lahf
mov
aaa
pop
mov
mov
and
mov
push
adc
cmc
pop
adc
adc
sahf
sbb
push
shll
lea
lods
and
fcoms
add
push
inc
cld
mov
sbb
pushf
js
mov
insb
xor
mov
or
push
es
adc
adc
ror
add
out
dec
push
in
push
or
iret
sbb
push
flds
out
insl
shlb
mov
sahf
mov
jle
xchg
inc
movsl
dec
in
sub
mov
lret
jl
xor
les
fs
subb
cmp
mov
popa
and
ja
mov
mov
insb
add
push
or
in
ret
adc
pop
inc
adc
fsubrs
xchg
lock
test
in
hlt
mov
std
xor
aas
int
or
add
cmp
push
pop
bound
mov
push
fdivr
test
cmpsb
cli
xor
adcb
inc
push
push
pop
inc
test
adc
or
cwtl
pop
in
push
rorl
movsb
and
les
mov
dec
gs
xchg
dec
dec
cmp
mov
in
xor
jnp
les
sbb
push
mov
jl
insl
mov
and
in
outsl
fcmove
or
aas
test
and
pop
and
iret
or
jle
add
pop
test
cmp
push
xor
loopne
test
arpl
stos
adc
hlt
sub
sub
sub
xchg
push
xor
das
jle
aaa
jo
dec
in
cs
addr16
pop
xchg
push
pop
inc
in
push
lock
std
sbbb
std
or
out
pop
cwtl
push
push
mov
fldt
jne
adc
fnstenv
xor
dec
pusha
loopne
rcll
sti
or
xchg
sbb
cltd
fidivrl
inc
dec
pop
fbstp
xchg
dec
cmp
fwait
xor
cwtl
in
faddl
test
ljmp
cli
cmpsl
fimull
nop
dec
dec
jmp
cmp
inc
xchg
imul
cli
jmp
fldl
arpl
ds
popl
ficoml
imul
aam
xchg
push
icebp
dec
stos
xchg
lds
cmc
inc
scas
mov
lret
xor
push
rorl
xor
xchg
loopne
sbb
push
lret
sub
xorl
pop
pop
add
jo
pop
add
aam
push
shll
dec
add
dec
data16
daa
dec
dec
into
add
adc
xchg
dec
andl
adc
sbb
gs
pop
cmpsb
mov
sub
dec
cltd
jle
loope
push
in
cli
into
arpl
lret
xorb
sub
arpl
outsl
mov
ss
xor
push
push
push
rol
xchg
arpl
dec
mov
lret
xor
inc
pop
fnsave
movsl
jo
roll
outsl
inc
xor
enter
test
push
xor
inc
incb
notb
lock
and
xor
sbb
push
test
lahf
mov
out
pushf
xor
lea
lahf
ljmp
call
mov
rolb
mov
mov
push
jb
sbb
sti
daa
xchg
and
adc
inc
fidivrs
mov
mov
cmp
pushf
cld
cmc
jl
negl
stos
aas
cmpsb
ret
cs
pop
sub
sbbb
ja
inc
mov
push
inc
andl
sub
imul
cmp
push
lods
mov
outsl
scas
mov
mov
adc
int3
lcall
les
xlat
mov
adc
or
or
subl
std
fadds
adc
pop
push
cltd
loopne
imul
fucomip
xchg
mov
push
loopne
fucomip
imul
int3
test
inc
mov
mov
xchg
xor
sub
lcall
stos
pop
imul
inc
in
in
je
lock
jne
push
jmp
pushf
fnstcw
mov
loopne
cwtl
adc
inc
test
fwait
das
stos
lods
call
jno
shl
iret
test
jle
lcall
scas
jae
test
mov
xor
cwtl
inc
xor
xor
cmp
mov
sub
nop
push
cmp
xchg
sub
adc
xor
in
jmp
lret
aam
and
mov
popa
enter
mov
fwait
xor
test
pop
cmovo
cmp
mov
mov
pop
cmp
or
xor
std
jge
daa
or
cmp
imul
add
popa
xchg
ss
add
xchg
and
fisubs
mov
mov
push
sti
xor
or
pop
lods
loope
xchg
and
add
mov
cmp
jnp
dec
out
cli
idiv
scas
addr16
negl
neg
int
push
adc
test
call
shrb
adc
ret
lds
daa
mov
stos
cltd
mov
add
test
sub
lods
movsl
adc
into
mov
frstor
xchg
mov
popa
mov
movsl
ljmp
cmpsb
and
aam
dec
addr16
mov
loop
mov
jb
xchg
incb
fisubrs
xchg
xor
xchg
or
cmp
fadds
sub
cmp
jnp
out
jge
or
and
sbb
push
inc
dec
icebp
fimuls
fdivl
push
pop
mov
in
lods
insb
rolb
mov
or
xchg
shlb
or
jge
mov
mov
mov
cmc
ja
adc
sbb
xor
cs
or
lds
stc
xchg
xor
mov
in
data16
loopne
outsl
xor
xor
mov
insb
xor
mov
sub
movsl
pop
xchg
sub
inc
and
ljmp
stos
shll
mov
loopne
and
mov
jne
fwait
lret
rcr
jge
or
jns
sub
lret
aas
mov
cmp
lret
mov
push
sub
adc
jmp
into
lret
sti
mov
cld
xlat
xchg
mov
cmc
pop
je
mov
inc
cmp
rcll
imul
and
sti
inc
cmp
mov
in
dec
sub
pusha
mov
nop
in
mov
hlt
popf
push
jmp
sbb
pushf
push
mov
fistpl
cmpsb
or
push
testl
inc
decb
gs
fld
mov
mulb
cmpsb
daa
mov
inc
mov
sahf
inc
aaa
jbe
enter
stos
daa
jg
dec
in
push
cltd
xor
mov
xor
stos
sarb
push
popa
mov
out
mov
and
adc
mov
cltd
incl
dec
movsb
lahf
or
mov
aad
xchg
std
movsb
aad
and
push
sub
enter
and
fldl
xchg
fisubs
push
outsl
mov
cmp
into
and
fwait
or
dec
into
in
mov
movb
cmp
cmpsb
sbb
and
scas
lahf
jle
shrb
and
pop
pop
cmp
adc
sbb
sub
cld
push
pop
mov
mov
sub
mov
mov
test
scas
clc
fstpl
jl
or
std
cmpsl
jns
or
ss
inc
and
fcmovne
inc
fwait
cmp
or
aad
jne
mov
mov
fnstsw
outsl
imulb
fs
pop
in
mov
shrb
test
std
mov
and
ss
jno
lock
loop
jns
pop
push
pop
inc
loope
push
pop
into
push
scas
xchg
mov
jge
push
mov
cmpl
mov
loope
sbb
dec
mov
xlat
mov
adc
cmp
aam
aaa
in
mov
stc
outsl
sub
cwtl
nop
push
or
mov
xor
sbb
and
pop
cmp
es
inc
int
lds
cmpsb
push
xchg
je
push
in
cmp
mov
loop
xchg
push
xchg
sbb
or
nop
cmp
sbb
notl
or
adc
cmpsl
cs
and
adc
movsb
aam
imulb
sub
fidivrl
xchg
mov
and
mov
or
cld
pop
enter
es
stc
push
stos
or
lret
push
and
pop
add
lret
fidivs
addr16
fisubrs
stos
out
mov
cmc
scas
orl
xor
aaa
push
dec
lea
js
or
enter
xor
or
or
inc
adc
sbb
aaa
mov
xchg
pop
add
out
les
push
jmp
mov
std
mov
jge
je
adc
ss
add
clc
sahf
inc
jecxz
jl
std
dec
sub
fs
popa
gs
jecxz
and
fcomip
xchg
sbb
mov
adc
pop
enter
ret
loop
push
cmp
fucom
sbb
addb
cli
pop
sbb
mov
jp
xor
sti
jmp
dec
ja
xlat
je
fadd
jl
imul
lret
or
push
stos
fldt
sub
cld
push
movsb
fidivrs
pusha
inc
mov
pushf
or
scas
shrb
shlb
pop
xor
imull
sti
out
daa
mov
pop
push
adc
jge
fisubs
add
mov
xchg
dec
cli
push
dec
and
hlt
loop
cmpsb
and
sbb
push
dec
jo
lret
sbb
stos
or
add
xor
insb
outsb
ja
test
sbb
mov
and
mov
and
lods
push
and
mov
jae
scas
imul
lret
lret
push
fs
ljmp
aas
cli
mov
arpl
pushf
out
daa
jne
and
xlat
cld
mov
push
cwtl
clc
sti
ficoms
sbb
ror
lret
rolb
pusha
pop
pandn
and
adc
cmpsb
adc
or
lret
adc
push
stc
addr16
push
lock
cmp
insl
inc
sbb
mov
dec
fldenvs
xor
fstpt
jo
in
fucompp
mov
out
dec
outsl
push
adc
nop
xchg
dec
mov
push
push
js
mov
scas
sub
mov
dec
inc
adcb
fistpl
add
lods
jae
cmp
jle
xor
xchg
pusha
ja
xor
orl
xchg
mov
loope
jae
inc
and
fsts
inc
imul
rclb
leave
push
push
lcall
mov
sti
rclb
xchg
test
sub
pop
stos
sbb
push
xorb
in
shrl
inc
add
or
stc
xchg
enter
out
inc
dec
xor
rorb
cwtl
out
pop
dec
cmp
add
jg
fs
fsubl
mov
notb
fs
ljmp
mov
adc
mov
in
jl
jo
mov
cmp
mov
mov
cmp
jg
xchg
sub
add
dec
rcrb
pop
push
xchg
or
pop
xor
pop
jg
mov
mull
je
xchg
pop
cmc
mov
lock
out
lods
mov
mov
dec
cmp
pop
sub
cmc
adc
aam
inc
clc
or
out
enter
cmp
mov
dec
sbb
nop
iret
rcr
xor
arpl
rcll
jmp
mov
mov
mov
loope
jno
fwait
data16
xchg
lret
jne
or
inc
lea
and
sete
mov
and
inc
and
pop
clc
fld
repnz
das
repz
call
pop
adc
test
inc
jg
not
gs
mov
add
inc
sbb
ffreep
dec
and
clc
je
xchg
fcomi
adc
mov
mov
sahf
dec
cli
inc
lods
sarl
push
add
xchg
out
icebp
pop
inc
mov
pop
rorb
pusha
xor
stc
imul
fucomi
adc
and
aas
xlat
adc
xorb
or
xor
repnz
pop
cmp
lcall
or
cli
xchg
adc
pusha
mov
and
or
pushf
sub
in
xchg
ficoml
jbe
adc
loop
fistpl
jmp
pop
clc
jae
icebp
cmp
out
sub
imul
push
das
cmp
mov
incl
add
aas
into
shll
js
fstpl
movsb
enter
xor
dec
and
inc
cmp
mov
in
idivl
mov
pop
push
jge
mov
sahf
stos
scas
xchg
fsubr
pop
loop
popf
cmp
xchg
aas
mov
and
scas
xlat
sbbb
jmp
lods
adc
cmp
jp
or
jle
dec
push
cmp
cmp
xor
xchg
push
sub
add
sub
nop
inc
aaa
xor
jb
fs
fcoml
jns
lahf
or
shr
push
iret
mov
out
movsl
jb
inc
sub
data16
int3
jle
sbb
inc
movsl
mov
subb
adc
pop
aam
inc
adc
das
sbb
inc
push
sbb
jle
ret
fsubrl
into
pop
rcl
sub
sbb
cwtl
in
aaa
or
movsl
jno
jno
out
mov
pop
pop
sbb
cmpsl
into
lds
bound
stos
mov
in
lret
sbb
jbe
lcall
or
pop
insl
xor
aas
cmp
imul
mov
xchg
pop
scas
jo
int
lods
pop
push
xchg
sbb
fcoml
inc
es
stos
in
add
enter
jbe
pop
decb
mov
mov
shrl
and
leave
push
sub
sbb
sbb
mov
add
enter
push
jo
xor
pop
adc
xor
pop
lret
push
jecxz
mov
movsl
icebp
and
movsb
dec
out
push
rclb
sbb
std
adc
jl
insl
mov
pop
sbb
sbb
xor
cmp
jle
movsl
jecxz
fwait
out
mov
inc
out
inc
lret
adc
loope
ss
xchg
cld
xchg
ficoml
ds
or
mov
mov
pop
sbb
adc
stc
add
mov
je
scas
arpl
loopne
xor
add
push
repz
adc
hlt
add
sub
inc
shll
loop
in
push
mov
dec
xchg
ja
inc
lret
mov
jmp
dec
cvtdq2ps
xchg
add
sub
stos
cmp
mov
pop
dec
jo
mov
cltd
ljmp
sbb
addr16
leave
scas
mov
aaa
push
jne
jcxz
xchg
jmp
jne
jg
call
cmp
test
cwtl
sub
dec
das
leave
fs
inc
orb
dec
out
cmp
push
cmp
and
mov
pop
into
sbb
jns
xorl
inc
jo
or
and
inc
push
jbe
mov
outsl
pop
cld
mov
sub
aas
mov
mov
push
shll
sub
mov
cwtl
adc
gs
jge
test
in
jmp
mov
cltd
inc
cmpsb
loopne
js
jbe
mov
addl
xchg
xchg
out
int
or
nop
je
aas
lods
lcall
push
in
and
or
push
pop
fwait
xchg
mov
pop
mov
and
mov
mov
add
mov
jb
mov
ljmp
cmp
into
icebp
adc
aaa
jmp
imul
jmp
insl
ret
jge
jl
mov
pop
push
mov
shll
push
in
ret
xor
add
and
mov
and
sub
inc
jno
pop
xor
es
nop
mov
mov
mov
mov
pop
mov
stos
arpl
insl
pushf
mov
sub
jne
aam
or
in
loope
mov
push
xor
or
xchg
fstps
ret
mov
test
je
and
shrl
popa
dec
out
sub
cmp
push
add
xchg
dec
outsb
jo
add
mov
jecxz
mov
shrb
testb
nop
loope
call
stc
cmc
js
aam
pushf
or
add
cltd
mov
out
mov
loopne
dec
into
inc
nop
aam
ja
sub
subb
into
xchg
xchg
pop
cmp
pusha
push
daa
xchg
sub
cmp
mov
loopne
xor
xchg
pop
add
jbe
mov
cmp
mov
sub
mov
pop
push
mov
add
pop
cld
inc
fsub
mov
inc
and
daa
cmc
or
sub
sub
mov
je
push
mov
xor
sbb
aas
aaa
dec
cmpb
jo
dec
cmpsb
jns
inc
es
or
daa
sub
mov
or
xor
cmc
xchg
push
shl
mov
xchg
jle
inc
loop
xchg
lahf
mov
xor
xchg
fistpll
xchg
daa
jb
sub
xlat
cmp
pushf
ret
sub
jmp
sbb
add
lret
dec
or
mov
pushf
cli
and
or
addr16
inc
fcompl
imul
cmpsl
mov
adc
xlat
or
ret
loopne
add
xor
sbb
push
cmpsl
cwtl
xor
mov
sub
jns
add
jmp
mov
pushf
and
or
inc
jmp
fs
arpl
mov
inc
lret
or
pop
iret
mov
aad
sbb
sub
jb
popa
gs
ret
or
cmp
pushf
movsl
fisttps
in
in
in
aam
push
shlb
mov
mov
les
or
xchg
mov
pop
addr16
mov
dec
outsl
mov
flds
push
daa
cmp
mov
or
xchg
fcomip
mov
pop
lock
jo
xor
inc
cmp
mov
inc
lock
mov
mov
je
push
xor
jl
fwait
cs
lods
inc
add
xchg
hlt
jecxz
ret
loopne
notl
adc
xchg
lods
stos
jmp
cmp
add
js
mov
test
mov
dec
xor
lods
mov
xchg
out
sbb
lret
or
cmp
fstl
push
fs
rolb
and
das
xchg
or
in
sbb
out
mov
push
in
stc
int3
out
orb
cmp
add
pusha
hlt
pop
sbb
adc
vpmadcsswd
inc
int3
mov
dec
stos
push
aad
sti
sub
stc
xchg
push
out
sbb
inc
adc
sahf
in
push
sbb
inc
sahf
xor
andb
hlt
fdivr
push
aaa
push
sbb
test
sahf
lods
mov
jae
sub
leave
cmc
in
mov
repz
mov
nop
adc
fildl
sub
enter
in
sbb
out
pop
lret
dec
stos
in
das
jnp
and
fwait
mov
adc
and
xchg
xchg
inc
add
push
fcmovne
lcall
mov
popf
ret
xor
mov
fdivr
cmc
dec
hlt
imul
je
add
adc
sysenter
lock
push
sub
sub
and
movsl
and
adc
sbb
cmpsl
push
xchg
aaa
test
fisubrl
mov
lods
mov
in
mov
mov
mov
inc
sarl
jnp
das
ss
cli
mov
jge
sarb
lds
jmp
xor
scas
bound
jae
popf
test
mov
rorl
in
jnp
in
out
mov
xor
insl
jnp
cmp
or
push
cmp
leave
outsl
pop
int
mov
pop
sbb
pop
bound
addr16
stos
mov
push
jge
adc
or
fcoml
cmpsl
adc
add
lcall
insl
stos
int3
movups
mov
jle
mov
jae
jnp
ss
call
pop
mov
sahf
sbb
pop
xor
jae
insl
xor
push
dec
je
inc
jnp
rolb
insb
adc
pop
in
rcrb
bound
inc
jae
xorb
out
xchg
pop
cwtl
lds
cld
cwtl
add
mov
sub
dec
arpl
loop
scas
dec
sti
mov
scas
into
cmpsl
xor
out
mov
cmp
cmp
pop
push
dec
dec
adc
addr16
mov
sarl
ret
popf
ficomps
aam
loop
cmp
fs
dec
mulb
xor
push
jge
cmp
xlat
sub
push
pop
mov
jnp
scas
push
ds
nop
cmpsb
arpl
pop
stos
inc
fs
xchg
and
pusha
cmp
jbe
outsl
inc
sub
shlb
inc
add
xor
out
int
cwtl
lods
loopne
fdivrs
and
jb
push
and
add
push
push
and
iret
psllq
adc
mov
push
push
ja
or
sbb
rcrl
fs
bound
sbb
sbb
cli
addb
arpl
push
mov
test
ljmp
jne
rcr
mov
xchg
in
jb
fs
call
or
add
add
inc
xor
pop
pop
mov
xchg
adc
cmp
in
add
stos
inc
inc
outsl
adc
push
mov
push
arpl
lds
mov
in
outsb
xchg
jmp
dec
and
lahf
xchg
in
push
cli
lret
xor
sub
cmp
add
mov
fadd
mov
icebp
arpl
testl
cmp
add
sub
push
scas
in
int
dec
sahf
fcmovnbe
stc
cmp
scas
fnstcw
adc
pop
add
fiaddl
aaa
rorb
aaa
pop
aas
xlat
clc
or
cmc
adc
mov
mov
outsl
sub
xor
push
sub
iret
fmull
into
adc
arpl
ljmp
js
shll
scas
mov
into
out
dec
xchg
push
pushf
dec
stos
mov
xchg
push
mov
mov
cmp
jg
inc
movsl
and
cmp
mov
sbb
imul
push
repnz
push
cs
outsb
pop
pop
cltd
inc
repz
jns
test
mov
adc
sub
jnp
daa
je
negl
andb
mov
cmpsb
fwait
sub
dec
cmpsb
mov
cmpsl
jns,pn
push
or
xchg
mov
jecxz
js
ret
xchg
add
sbb
out
enter
iret
pop
ficoml
xor
mov
mov
je
mov
sub
inc
pop
sub
mov
jmp
mov
xor
inc
insl
cmp
add
enter
adc
xor
loope
xorb
test
inc
adc
sub
mov
jmp
cwtl
mov
lods
lds
cld
xor
call
mov
mov
lahf
lea
and
mov
push
test
subb
mov
fildl
dec
cld
cmc
pop
inc
sbb
cs
jb
sbb
dec
cmp
rclb
scas
bound
and
push
das
xchg
push
cmovo
add
mov
mov
mov
icebp
es
stos
arpl
scas
movsb
int
push
cmp
mov
shl
push
lahf
mov
test
je
jns
imul
xchg
push
inc
fcoml
neg
lret
lods
cs
pop
mov
mov
jle
push
clc
mov
sbb
cmp
xchg
scas
les
jmp
and
jmp
cmp
fcomp
in
aas
cmpsl
ret
sahf
cld
push
push
xchg
pop
cmp
push
enter
clc
fldl
or
mov
popa
pop
fnsave
imul
cmpsl
cmp
xchg
outsb
dec
xchg
xchg
mov
mov
cmp
dec
push
lret
cmp
mov
inc
repz
add
mov
dec
jg
xchg
mov
dec
lret
cmpsl
popf
popa
in
mov
scas
pop
ljmp
lcall
sbb
lock
dec
jmp
fstpt
imul
je
lods
or
sbb
fwait
push
subb
xorb
loope
decb
or
lcall
push
gs
pop
cwtl
xchg
inc
imul
es
arpl
imull
xchg
bound
add
enter
int3
push
mov
leave
sub
dec
mov
pop
or
stos
lods
pop
lods
popa
and
out
sub
fs
lds
std
cmp
sahf
cld
jg
push
pop
mov
lret
pop
rcrl
pusha
test
movsl
jo
add
outsl
mov
sahf
out
lods
jl
aaa
add
fadd
scas
mov
inc
add
call
push
adc
mov
push
aam
ror
repnz
xchg
push
in
dec
sbb
xchg
dec
push
mov
jmp
mov
das
loopne
pop
fbstp
inc
jns
inc
test
es
lret
ds
and
sub
cmpsb
jns
pop
sbb
jmp
or
push
inc
bound
mov
int3
nop
orb
je
mov
or
add
movsl
into
push
testl
jne
out
testl
daa
mov
cmp
xchg
add
jg
cwtl
and
fisubrs
or
adc
ja
nop
mov
pushl
cwtl
mov
inc
sbb
and
testl
mov
jmp
sbbl
incl
pop
out
and
es
mov
in
mov
mov
into
inc
or
inc
sub
cmp
inc
jmp
mov
in
dec
pop
repz
inc
xchg
xor
mov
hlt
sub
in
js
fwait
push
add
pop
jnp
jno
arpl
mul
setne
repz
mov
mov
dec
add
repnz
leave
adc
fcmovnb
cmp
imul
stos
cld
jmp
dec
dec
out
fadd
jae
int3
sti
jae
cmp
push
dec
mov
jl
mov
int
xor
xchg
lds
test
lock
imul
cmpsb
inc
lea
cld
fwait
jnp
loopne
inc
push
xor
ret
jg
xchg
popa
or
xchg
xor
clc
inc
push
test
xor
decb
sub
jl,pn
jae
jecxz
jns
jae
or
fbstp
cli
lods
jae
sbb
or
push
aas
pop
cmp
adc
loopne
or
test
inc
int
mov
inc
ret
neg
arpl
jp
mov
div
sar
repz
adc
mov
insb
or
lock
jge
dec
cli
insl
xor
sub
je
push
mov
imul
and
js
cmc
idivb
fwait
imull
lods
adc
fdivs
imul
jnp
pop
dec
mov
mov
xchg
into
jns
add
inc
xchg
out
inc
arpl
bound
or
pop
push
rolb
rcll
pop
cmpsb
jbe
or
test
inc
test
adc
ss
pop
test
mov
adcl
test
or
add
inc
jne
pushf
aaa
rclb
and
roll
push
cld
stos
mov
lods
inc
cmpsl
sub
add
in
jno
rcrb
inc
cmp
dec
adc
xor
inc
ret
cld
push
test
adc
xor
insl
lret
inc
das
dec
in
paddusb
adc
xlat
ror
and
jb
xchg
imul
jp
add
dec
ficoms
addb
jmp
outsb
adc
jg
add
jmp
mov
xchg
jne
popa
add
and
aam
push
insb
sub
xchg
or
lcall
pop
push
in
inc
or
stos
mov
sbb
push
repnz
call
dec
add
es
in
ja
lock
std
jmp
sub
mov
lret
aam
cli
lret
scas
mov
mov
js
and
ret
sub
adc
adc
cli
dec
add
pop
shrb
jecxz
mov
daa
setnp
dec
lret
aas
ja
cmp
dec
cmp
xlat
movb
mov
adc
xchg
dec
test
rorb
xor
adc
adc
jge
push
ds
mov
call
and
std
enter
insb
cmp
imull
insb
add
xor
fdivs
mov
push
in
das
outsb
pop
xor
leave
pop
mov
or
push
jg
mov
popf
jle
call
sar
xchg
dec
jo
std
addb
mov
fs
push
enter
rol
and
sarb
lret
data16
cmp
nop
mov
pop
scas
inc
shrb
rclb
inc
mov
mov
repnz
jbe
data16
pop
xchg
xchg
pop
dec
popa
pop
stos
jge
dec
adc
push
mov
cmp
into
sub
in
jmp
rcrb
jnp
inc
mov
nop
push
rcrl
dec
cmp
xor
int
icebp
jle
mov
inc
xlat
out
call
cmpsb
jae
sub
dec
add
push
pushf
hlt
pop
pop
jecxz
jb
adc
xlat
mov
nop
lods
mov
mov
inc
ljmp
sub
loopne
andb
mov
xor
xchg
repz
push
iret
cs
ret
cmp
ja
int3
cmpsl
je
aam
jp
inc
sbb
ja
jns
popf
inc
pop
lock
imul
dec
and
iret
inc
outsb
push
out
xchg
loop
push
gs
sub
mov
push
fcoml
daa
ds
xlat
push
xor
pop
popa
out
push
sub
push
mov
repz
mov
out
arpl
dec
xor
les
fcoms
xchg
pop
out
xor
mov
orl
or
jg
popa
sbb
mov
cmp
jmp
adc
stos
dec
ds
shr
scas
inc
repnz
adc
sub
movsb
inc
push
sub
cmp
in
jae
jns
sarb
xlat
cmp
cmp
jp
arpl
and
mov
jbe
imul
push
insl
jne
pop
test
imul
jmp
mov
mov
sti
lret
jecxz
jl
repnz
stc
fsubrl
idivl
cmp
stc
lock
push
or
mov
dec
mov
dec
pop
js
outsl
sbb
loop
jecxz
in
int3
push
jb
mov
jns
fs
inc
pop
xor
aas
clc
js
push
into
inc
pop
xchg
mov
inc
adc
insl
pop
inc
movsb
or
cmp
pop
pop
stos
popf
cs
mov
push
sub
les
adc
push
sub
pop
das
aad
push
gs
xchg
inc
push
add
sbb
push
sbb
inc
xchg
sbb
mov
push
loop
sahf
mov
jle
and
cmp
and
pushf
rcl
and
inc
mov
js
cwtl
mov
cmp
push
pop
aad
add
ljmp
xchg
push
pop
test
xlat
inc
cmp
cli
inc
es
jle
mov
rorl
ljmp
jl
inc
jl
mov
rolb
mov
dec
add
mov
dec
mov
jl
les
sarl
cmp
fdivs
inc
xor
es
cmp
pop
mov
xor
int3
adcl
mov
rcr
push
push
mov
arpl
add
cmpsb
cld
xorl
inc
and
neg
sub
adc
sarl
pushl
mov
loop
aas
popa
mov
push
or
ljmp
xchg
mov
xor
movb
stc
movsl
das
add
jo
sub
cwtl
jl
popf
dec
das
cld
imul
test
pop
mov
ds
daa
mov
xchg
sub
jns
lds
ret
es
inc
adc
jp
jp
flds
out
cmp
and
pop
and
mov
xlat
aam
push
addb
test
fwait
mov
dec
mov
xchg
lret
sti
dec
in
bound
sbb
lret
mov
push
push
mov
rcrl
mov
test
mov
cli
adc
ja
nop
xor
je
adc
push
inc
enter
or
dec
adc
mov
test
adc
inc
inc
push
enter
add
imul
in
jne
cmp
fisubrs
mov
ret
std
and
in
jle
rcrl
xor
xchg
mov
and
adc
incb
cld
cmp
or
adc
repz
outsb
or
into
shrl
sarl
dec
fdivs
jae
xor
subl
out
ror
out
jb
jno
and
cmp
lods
adc
test
dec
fsubrs
jb
inc
jne
mov
push
sub
test
divl
imul
push
incb
pop
mov
sar
jl
shlb
fisubs
push
dec
adc
seta
test
in
dec
xor
sbb
pop
sbb
call
popa
sub
and
fistpl
lcall
and
push
pop
in
xchg
adc
push
mov
repnz
lods
cmpb
test
cmpsl
jmpw
test
pusha
test
js
xchg
sbb
add
scas
mov
sti
loope
add
jae
sub
push
xchg
or
bound
push
xor
adc
int3
push
dec
push
cmpsl
sub
mov
bound
inc
mov
mov
cmp
add
cmp
shrl
sub
push
into
dec
xchg
into
xor
xchg
adc
pop
jecxz
adc
jne
in
cmc
mov
pushl
mov
sbb
mov
and
js
and
scas
decb
aam
adc
mov
mov
mov
repz
mov
and
aam
pop
cld
jge
ret
xchg
push
movlps
or
mov
add
push
lds
xor
mov
dec
cmp
mov
jp
push
nop
outsb
jl
pop
cmp
sub
dec
mov
test
loope
mov
lods
mov
xchg
xor
jle
or
loop
jg
mov
ret
out
shrl
gs
stc
pop
mov
test
mov
dec
pop
mov
mov
js
test
andl
pop
jo
mov
cli
mov
call
jno
add
fldenv
or
testl
inc
mov
fiaddl
out
addl
out
pushf
push
repz
or
sar
aad
mov
pushf
push
mov
mov
push
hlt
sub
daa
mov
cmp
inc
imull
cmpsl
hlt
fisubrs
mov
mov
mov
stos
pop
loopne
es
push
jmp
mov
dec
mov
lret
pusha
jns
out
jmp
insb
push
mov
cltd
mov
int3
pop
aad
jnp
xor
mov
pop
sub
mov
lcall
insl
mov
xchg
jg
jnp
negl
movsb
push
int
cmpsl
lods
push
inc
pop
adc
mov
out
aad
mov
sub
mov
sub
xor
pop
and
and
dec
xchg
mov
rcll
nop
xchg
sub
ret
test
pop
pop
jno
push
adc
mov
and
pop
jb
inc
sub
clc
test
cltd
lds
push
push
popf
adc
shll
pop
nop
mov
arpl
flds
test
or
xor
ja
shlb
icebp
xchg
dec
insb
cmpb
inc
xlat
and
xchg
mov
or
dec
mov
inc
add
outsb
dec
test
mov
insb
mov
mov
sbb
outsb
and
pop
ja
pop
sti
add
and
adc
fstpl
cltd
cld
frstor
punpcklbw
inc
pop
and
pop
adc
mov
sub
dec
push
out
and
adc
and
lahf
jge
std
repz
out
jno
xchg
dec
sti
push
push
loopne
std
fcompl
fwait
inc
les
popf
jg
shl
cwtl
adc
adc
jp
mov
pop
out
out
add
lret
bound
mov
dec
leave
lahf
je
pop
mov
iret
jbe
push
sbb
sub
es
xchg
cmpsb
dec
push
jnp
xchg
or
push
dec
jl
into
cmp
fmul
popa
jno
sbb
pop
in
mov
push
out
dec
xchg
xchg
sbb
cwtl
outsl
adc
pop
dec
hlt
iret
cld
jb
cmp
sbb
sahf
out
sub
or
jmp
in
xchg
jno
sbb
je
lea
add
bound
cld
pop
add
push
cmp
xchg
push
sbb
mov
sbb
adc
sbb
mov
sbb
fsubl
push
call
mov
stc
orl
mov
nop
mov
pop
pop
push
add
insb
xchg
shl
lea
scas
xchg
cmp
lret
jg
jbe
nop
leave
in
push
lret
popa
lds
dec
and
xchg
jnp
adcb
in
push
icebp
iret
insb
jno
push
xchg
sbb
loopne
cs
push
inc
push
aaa
in
cmp
cld
dec
iret
int
pop
xchg
mov
pop
jns
ret
cltd
sbb
mov
lret
leave
repz
loope
dec
test
je
sub
push
addr16
inc
paddb
loope
or
push
sub
popf
adc
mov
or
push
jg
fistps
add
negl
adc
lea
and
inc
cmp
push
lods
mov
pop
movsl
xor
sbb
js
cmc
sbb
aaa
pop
push
imul
xorl
insb
std
sahf
mov
cltd
jl
dec
mov
nopl
fadds
pop
lods
push
fbld
mov
cmp
inc
ds
push
pop
push
sub
mov
jns
mov
jne
scas
inc
push
pop
shrb
mov
clc
or
test
push
sti
mov
push
scas
mov
in
cmp
inc
int3
outsl
das
movsb
lahf
dec
xchg
insb
and
push
inc
nop
dec
push
mov
cmpsb
sbb
dec
jge
aad
xor
insl
dec
scas
add
fildl
lret
in
popa
pop
cmp
pop
pop
or
popf
xor
pop
fincstp
out
gs
and
in
sub
jb
outsb
fwait
sbb
nop
xor
bound
repz
inc
in
mov
outsb
dec
adc
add
add
pop
sbb
cmp
out
int
popw
mov
fwait
popf
dec
add
pop
xchg
mov
pop
jl
push
test
push
jmp
data16
mov
fistps
mov
out
pop
mov
loope
dec
data16
cmp
jb
add
jg
add
pop
adcb
adc
imul
inc
jl
sbb
jno
mov
xlat
sbbl
xor
out
xor
pop
shrb
xchg
enter
push
adc
add
push
not
test
fstl
roll
lock
fsts
mov
sub
adc
daa
sbb
mov
adc
outsb
les
dec
pop
mov
shll
jne
and
pushf
iret
popf
mov
add
ror
pop
aad
in
in
dec
test
insb
xchg
adc
xchg
xchg
sub
add
and
and
pushl
sbb
call
sbbb
mov
adc
hlt
mov
out
sbb
jne
adc
mov
inc
push
xchg
dec
pop
ffreep
mov
or
int
sub
jns
repnz
sbbb
xorb
and
push
xchg
xor
dec
ret
pushf
ret
dec
dec
out
imul
sbb
dec
adc
sbb
push
icebp
push
dec
inc
in
rcrl
inc
in
imul
xchg
call
js
pop
pop
aaa
mov
in
jae
sub
rcr
mov
or
data16
mov
xchg
mov
testl
mov
addr16
cmpl
dec
aam
enter
dec
lea
addr16
aad
cmp
call
stc
push
addb
xchg
mov
mov
jp
pop
dec
ds
mov
in
xchg
leave
jnp
jbe
repz
dec
adc
mov
cmpb
inc
into
js
push
sbb
mov
scas
add
pushf
pop
cmp
addr16
cmp
and
shl
cltd
cmpsb
loope
cmp
cs
aad
test
push
jecxz
fistpl
jne
loop
adc
push
fimull
insb
xor
aad
lea
push
ret
xchg
stos
loopne
cli
mov
adc
rcl
mov
mov
movsb
sub
pop
sub
and
test
jae
and
bound
dec
or
outsb
bound
xchg
dec
xor
dec
mov
pop
inc
ds
nop
ficoms
stos
jo
pop
mov
rcr
js,pn
inc
push
in
loope
dec
xor
sub
sub
inc
sbb
fwait
cmp
andl
stc
bound
mov
add
inc
clc
mov
out
dec
mov
jge
out
lods
pop
int3
push
xchg
mov
movsb
xchg
pop
sub
movsl
jbe
jg
fcoms
push
add
mull
test
adc
stos
aas
mov
push
mov
subl
out
popf
push
push
ljmp
lods
mov
adc
dec
inc
sbb
sub
push
mov
sbb
mov
xchg
add
lds
and
fiaddl
sbb
or
cmc
stos
popf
clc
iret
cmpb
mov
push
mov
shrb
xor
leave
jno
bound
nop
sbb
hlt
cmp
fnstenv
sbb
adc
call
loop
adc
push
sbb
jmp
jge
mov
std
mov
mov
popf
es
inc
imul
lods
mov
jmp
enter
cmc
jg
add
movsb
mov
sub
mov
pop
xchg
mov
stc
adc
addr16
pop
cli
das
pop
fwait
repnz
jp
adc
sbb
pop
addr16
mov
inc
pop
cli
imul
out
mov
icebp
sbb
and
loop
ss
push
scas
in
jp
add
in
dec
cmpsl
cmp
test
fisubl
int
fnstsw
ss
push
str
pop
sub
lea
ss
inc
xchg
rclb
ljmp
dec
jnp
popf
mov
lcall
or
in
pop
jbe
mov
mov
int3
cmpps
inc
or
cmp
sti
jne
jo
xlat
or
aad
out
xchg
leave
js
pop
jle
ret
inc
leave
push
adc
out
inc
cmp
js
cmp
loop
hlt
stc
add
das
imul
or
imul
xchg
mov
pop
insb
mov
cmpsl
notb
loop
mov
ret
mov
mov
rcrb
mov
mov
insb
add
inc
repnz
fidivs
xchg
jmp
mov
or
inc
sub
adc
xchg
jecxz
inc
sti
xor
pop
adc
inc
das
or
mov
arpl
repnz
xor
cmpsl
movsl
lods
mov
adc
xlat
push
jge
xor
pop
fbstp
stc
mov
cmpsl
and
fwait
mov
gs
jb
aam
push
mov
mov
cmc
leave
mov
pusha
ret
lcall
lahf
loopne
stc
je
lahf
mov
jnp
stos
iret
add
add
jbe
jp
jnp
jne
push
dec
test
xchg
mov
popf
add
pop
dec
cwtl
adcl
push
cmp
cmp
jae
lods
ja
push
daa
addr16
aas
cmp
jns
cmpsb
cltd
xchg
or
cmpsb
sbb
cmp
adc
inc
mov
es
mov
int3
ret
pop
push
mov
in
out
fwait
and
nop
and
out
bound
xlat
push
mov
fadds
gs
sbb
sahf
or
sar
dec
cmpsl
insl
xor
jl
aas
std
dec
add
icebp
imulb
scas
loope
sahf
iret
xchg
rcrl
movsb
mov
rorb
push
mov
xor
mov
gs
add
xor
pop
sbb
scas
adc
xchg
xchg
cltd
xchg
dec
and
push
cmpsb
jo
xchg
xchg
ljmp
std
jnp
lock
and
mov
test
mov
or
dec
out
lahf
jmp
xchg
and
div
inc
sti
data16
mov
or
dec
and
xchg
sbb
stos
xor
lds
inc
in
push
mov
js
add
inc
mov
imul
mov
lcall
push
lods
push
ds
cwtl
xchg
scas
into
int3
arpl
les
sbb
dec
dec
jno
mov
insb
in
jl
cmpsl
ljmp
addb
cli
test
iret
jnp
lds
mov
icebp
xchg
push
out
add
in
fiaddl
mov
in
loop
inc
adc
sarb
mov
push
mov
and
sub
fdivs
sbb
ja
out
and
sub
js
in
iret
jb
xor
jne
pop
push
leavew
ss
mov
jl
xor
stc
sbb
jae
js
lods
repz
push
pop
jmp
cmp
adc
mov
add
xchg
in
jge
mov
inc
push
mov
inc
xlat
cld
enter
out
dec
and
nop
add
mov
clc
inc
insl
mov
cmp
shll
data16
jmp
and
push
mov
inc
mov
mov
cmp
xchg
push
xchg
repnz
dec
inc
sbb
push
pusha
add
ja
jp
aad
sub
xchg
divb
push
dec
xor
jle
cs
mov
adc
jo
jge
add
sbb
ds
push
pop
repnz
mov
pop
pop
andl
enterw
repz
jo
sub
ret
fmul
push
adc
in
mov
movsl
movsb
lea
mov
das
dec
test
rorb
cwtl
inc
shll
cmp
je
add
fwait
lret
push
fwait
sub
fbld
xor
cmp
jmp
pop
sbb
test
pop
icebp
adc
xchg
stos
pop
pop
sbb
mov
adc
cs
jle
popa
pop
sar
cld
sub
push
or
outsl
pop
xor
jno
cwtl
add
call
mov
ret
inc
push
mov
jnp
and
pusha
out
pop
lahf
and
test
jecxz
test
mov
jmp
push
add
push
mov
sub
xchg
sub
dec
and
add
imul
hlt
sub
les
sar
sbb
mov
std
jnp
js
test
cs
pop
pop
enter
xchg
xor
cmp
sub
xchg
test
out
ss
leave
mov
mov
mov
jno
out
inc
inc
xor
in
jl
sti
and
rclb
loopne
negb
or
adc
xchg
mov
das
push
push
hlt
and
sbb
sti
and
push
int
mov
cs
adc
push
fbld
pop
jg
aad
mov
jecxz
rorb
xchg
mov
or
xlat
jne
xchg
lock
nop
jge
aam
mov
xor
lods
add
and
js
sbb
pop
jo
sahf
mov
fisttpl
in
and
test
inc
dec
inc
rorl
mov
into
push
jb
daa
xchg
repnz
adc
sbb
popa
loopne
icebp
test
imul
ret
loopne
pop
sbbl
add
mov
add
insl
cwtl
xchg
mov
and
stos
jbe
ret
cmp
jge
orl
mov
cs
jb
rolb
call
notb
arpl
lock
pop
lds
cmp
xor
popa
inc
inc
xchg
test
push
push
cmp
mov
add
std
pushf
lock
xchg
nop
imulb
jae
loopne
pop
mov
add
shll
cli
into
cmp
jo
xor
mov
dec
adc
popl
ret
dec
mov
xchg
adc
nop
pop
out
jecxz
in
cmp
popf
lods
dec
xor
mov
xor
and
jecxz
ja
ss
jno
pop
mov
test
std
cmp
sahf
pop
jo
cmpsb
pop
cli
add
adc
inc
jle
mov
xchg
scas
push
sub
inc
imul
mov
mov
loop
inc
ljmp
mov
call
jg
pushf
lods
out
int
adc
clc
cmpsb
and
mul
sbb
mov
movsl
testl
imul
outsl
jge
sbb
out
sbb
jle
jbe
jl
add
xor
js
mov
cmc
mov
pop
push
clc
jge
roll
fisubs
adc
sahf
aam
adc
lret
scas
adc
pop
mov
das
or
pop
cmpb
cltd
mov
pop
std
adc
pop
adc
mov
lahf
cmc
fsubrs
inc
dec
dec
pop
and
jge
leave
ds
push
or
mov
mov
popa
xchg
dec
arpl
or
xor
pop
outsb
dec
flds
sub
jge
push
push
xchg
enter
cmpl
lcall
test
sbb
rcl
ret
adc
dec
jge
scas
out
cmp
movsb
pop
dec
xchg
ficomps
pop
arpl
rcl
inc
cmp
shll
mov
push
xchg
jb
inc
in
mov
jnp
hlt
jns
mov
das
and
xor
pop
inc
gs
mov
daa
push
adc
das
xor
xchg
mov
outsb
mov
cmp
xchg
pushf
sbbl
fsubl
hlt
sbb
inc
pop
add
sti
xchg
xor
lret
out
lret
in
sbb
jle
outsb
sbb
cmpl
add
fisubrl
sbb
adc
sub
pop
outsl
inc
pop
mov
in
sub
testb
fdivrl
jle
in
nop
xor
jg
xchg
pop
jge
push
xor
fisttps
push
cmp
shl
loopne
es
sub
or
jns
cmc
out
ss
jb
inc
jecxz
int3
pop
movsb
arpl
push
out
push
xlat
jae
add
xor
adc
jo
cmp
inc
insb
fistpll
hlt
scas
lret
in
scas
mov
imul
cli
in
push
not
xchg
inc
iret
or
mov
cmp
lret
ljmp
push
dec
popl
mov
mov
pop
popa
shr
push
mov
dec
in
lcall
push
mov
cmp
mov
ljmp
mov
hlt
mov
ja
add
and
std
pop
test
push
jns
repnz
sub
and
test
cmp
cld
in
push
sbb
inc
sbb
sbb
sbb
out
int
lahf
cwtl
cld
xchg
inc
lock
sub
ss
popf
lock
cmp
lea
iret
sbbl
cs
sbb
in
shll
notl
inc
fcoms
xchg
pop
mov
xchg
ret
scas
inc
sbb
loope
sub
addl
adc
imul
clc
mov
scas
lea
jae
sub
push
xchg
mov
pop
sbb
jp
dec
sti
add
adc
add
adc
pop
subl
clc
div
icebp
sbb
xor
les
imul
sub
into
cmpsl
push
push
add
out
hlt
inc
xchg
xlat
pop
imulb
xchg
mov
cwtl
lahf
sahf
mov
stos
jl
into
out
push
jle
sbb
inc
mov
inc
into
and
sub
out
cmp
mov
sub
xchg
or
pop
fs
stos
xchg
xchg
inc
call
mov
js
adc
testl
aaa
lcall
and
sbb
cmpsb
dec
xorl
or
xlat
sub
lds
mov
jne
in
aad
sbb
xor
and
out
or
scas
test
sub
iret
arpl
lock
add
sub
test
outsb
sar
sub
mov
jo
sahf
stos
ret
push
pop
pusha
mov
inc
inc
cmp
xchg
sub
cmp
neg
inc
and
xchg
mov
mov
mov
or
bound
movsl
cmp
into
lods
aad
outsb
aam
sbb
aad
cmp
add
dec
sub
outsb
icebp
clc
mov
ljmp
out
jne
ret
fisttpll
xor
mov
pushf
lods
dec
jp
and
mov
xchg
add
adc
out
andl
clc
aas
and
cld
je
test
xor
pop
fldcw
roll
ret
sahf
icebp
loop
add
and
adc
lods
mov
xor
pop
std
jg,pt
push
push
push
mov
out
fs
movsb
lret
mov
mov
cmp
movsl
test
dec
push
or
push
and
pusha
jns
sbb
ja
mov
movsb
mov
dec
cmp
ss
or
dec
push
dec
xor
sub
xor
in
scas
fiaddl
push
jle
sub
and
popa
movsl
jecxz
sbb
pop
lret
cld
xor
mov
in
addr16
jp
data16
mov
insb
int3
adc
pop
das
pop
sbb
out
lret
or
mov
push
or
shr
lret
and
mov
lret
xor
fidivrs
pop
jge
out
clc
cmp
shll
imul
sarl
sub
cld
xor
test
decl
or
add
adc
bnd
and
mov
addr16
fldz
jmp
les
outsl
push
hlt
outsl
mov
movsb
sbb
mov
mov
cwtl
les
sbb
subl
xor
sbb
mov
mov
sub
lahf
sub
sbbl
aaa
imul
jne
inc
sub
subb
jb
mov
outsb
jl
inc
push
push
fldt
xlat
cmp
mov
mov
sahf
mov
andl
icebp
jp
mov
xchg
cwtl
push
xchg
fidivl
leave
adc
fcoms
insl
int3
sub
out
cli
rorl
icebp
lahf
jmp
gs
dec
pop
insb
ss
loope
aad
ja
mov
jno
loopne
push
dec
nop
xor
sti
add
xor
ret
xchg
push
cmp
sbb
pcmpeqd
out
inc
iret
dec
push
shl
push
lock
loop
enter
mov
je
in
pop
aad
in
loopne
jnp
add
mov
mov
mov
int
cmpl
jb
loope
cmc
lea
jne
mov
in
pop
or
clc
mov
mov
sbb
sub
mul
cmp
arpl
test
insl
test
gs
les
repnz
pop
inc
xchg
jno
jl
lgs
dec
cmpsb
lds
cmp
lahf
lock
adc
mov
mull
ja
mov
mov
or
and
pop
shlb
mov
mov
divl
in
push
mov
mov
movsl
scas
add
sti
stos
adc
add
adc
and
jns
add
or
and
xor
sbb
push
push
cmp
xchg
cwtl
popa
testl
in
add
dec
sub
loop
shll
pop
xlat
pop
mov
push
lods
nop
dec
push
stos
push
jnp
push
dec
pushf
repz
cmp
loopne
std
rolb
fsubl
aaa
std
mov
addb
dec
pushf
into
push
filds
add
insb
in
repnz
cltd
mov
cmp
sub
ret
insb
pop
leave
lahf
mov
mov
shlb
xchg
xchg
in
pop
mov
ret
gs
mov
scas
jp
test
dec
iret
add
jb
or
out
into
imul
test
cltd
gs
lods
and
fildll
shlb
cmp
sub
sarl
push
lcall
adc
and
mov
lret
ja
movsl
movsb
mov
sbb
push
and
inc
ss
pop
mov
rcll
jecxz
lods
es
out
in
out
jae
cmpsl
jmp
inc
sub
ljmp
cwtl
mov
push
cmpsl
mov
adc
outsb
fptan
inc
inc
inc
test
test
insb
pop
cmp
into
or
pop
push
mov
std
mov
pop
pop
push
lods
add
lea
loope
or
out
jbe
shl
cs
lea
lods
mov
push
scas
scas
outsl
dec
out
in
mov
repz
and
pusha
call
xor
add
mov
xchg
xor
mov
shrb
mov
cmc
mov
push
lock
and
rclb
js
adc
sub
arpl
ffreep
mov
clc
mov
xchg
xlat
test
ror
lcall
sarb
push
hlt
loope
ja
sbb
xor
fnstcw
jl
pop
imulb
mov
dec
cmp
push
test
bound
ret
jle
adc
test
lds
stos
xor
dec
sete
mov
lods
pop
add
nop
rol
sbb
add
lcall
cmp
dec
jbe
lret
dec
out
push
popf
inc
out
mov
or
cmp
inc
xor
repz
out
xor
andl
fidivrs
pop
jbe
fimull
push
sbb
js
and
cmc
out
out
mov
sarb
arpl
shrb
scas
cmpsb
mov
inc
or
and
dec
arpl
push
lods
ja
pop
sbbl
ja
cmpsl
jle
test
js
mov
jns
cwtl
or
mov
jnp
pop
lods
mov
mov
sbb
mov
inc
ds
dec
ret
pushf
pop
cs
or
mov
mov
xlat
adc
xchg
shl
lock
add
mov
pop
sbb
addr16
mov
mov
cs
sahf
fisubrl
lret
add
aam
xchg
filds
xorl
xchg
xor
inc
sub
cld
hlt
mov
pop
pop
call
push
ja
jg
lods
push
jle
into
aaa
rcrl
and
mov
sahf
pop
outsb
adc
sbb
stos
dec
and
add
orb
imul
ss
fs
push
and
sti
and
and
in
test
mov
xor
mov
sbb
dec
push
cmpsb
pop
dec
cmp
inc
inc
mov
push
cmpsb
fidivs
out
jp
and
jae
or
jmp
jmp
insb
xchg
idivl
and
movsl
push
out
mov
mov
xlat
xor
inc
lret
jle
aaa
xor
insl
pop
or
mov
sub
and
mov
sti
incl
and
jle
imul
jb
ljmp
xchg
icebp
pop
push
or
mov
cltd
dec
repnz
arpl
add
mov
ret
ret
arpl
cwtl
ficompl
pushw
stos
aaa
xor
and
ret
into
adc
andb
and
sub
inc
cmp
jle
fdivl
jle
dec
imul
outsb
enter
ss
jno
iret
inc
in
mov
ficomps
test
daa
adc
jo
inc
jge
insb
inc
mov
push
repz
addr16
out
push
into
pushf
pop
je
scas
mov
mov
sti
lret
fadds
jb
popf
or
aaa
sub
lcall
ret
out
pop
shlb
je
sbb
cltd
pop
cmp
daa
jg
in
push
mov
add
add
add
lret
ja
jl
xlat
jecxz
mov
adc
pop
shl
iret
mov
sub
enter
add
out
push
or
test
xor
mov
shrb
aas
add
mov
les
push
jg
cmpl
rcll
mov
mov
jl
add
mov
sbb
shll
dec
mov
out
jbe
jl
lahf
fadds
iret
xor
mov
pop
push
mov
push
inc
rcrb
mov
sbb
push
sbb
je
cmc
repz
adc
and
aad
push
mov
in
std
mov
cmp
lods
loope
adc
or
pop
dec
mov
test
adc
adc
cmpsb
push
push
cmp
pop
icebp
mov
xor
je
dec
fisubs
xchg
inc
cli
js
pop
fs
or
orl
sahf
push
addl
pop
inc
lock
sbb
pop
pop
or
push
sbb
stos
mov
xor
aam
ror
icebp
adc
push
xor
cmp
and
inc
cmp
scas
lahf
sbb
sarl
or
sti
sti
sub
xorl
clc
add
out
and
and
inc
ja
lock
inc
imul
pusha
xchg
jbe
or
and
ss
jecxz
add
lds
xor
dec
jecxz
sub
mov
xor
mov
xchg
xor
dec
sbb
es
stc
scas
adc
aam
or
push
cmc
loope
sbb
loop
and
sahf
lret
mov
mov
fnstenv
adc
cmp
cmp
addr16
jb
mov
lcall
dec
mov
mov
sub
fildll
ficompl
xor
sbb
dec
push
add
xchg
loope
mov
hlt
loope
and
cmp
mov
jnp
sbb
notb
outsb
adc
push
pop
out
push
vxorps
push
add
push
dec
cmp
rcrb
jbe
dec
jecxz
push
mov
mov
aad
out
jno
xor
push
fldenv
or
enter
into
mov
fmuls
es
dec
jmp
aaa
jp
lods
cmpsl
jns
jo
inc
or
inc
xchg
jnp
cmp
mov
pop
mov
dec
cltd
cld
pop
xchg
sub
ficompl
and
mov
kaddw
push
add
in
pusha
mov
cmp
aaa
je
mov
adc
mov
adc
pop
mov
or
int
jbe
jecxz
and
enter
dec
popa
imul
insl
sahf
sbb
mov
icebp
sub
and
icebp
mov
imul
frstor
xor
std
dec
mov
lret
shlb
shl
int3
add
jecxz
fstpl
jno
pusha
arpl
push
out
loope
mov
mov
sti
mov
adc
scas
mov
pusha
cmp
fbstp
fistpl
fcmovb
sbb
aaa
rcll
inc
fs
movsb
rcll
cmp
lods
ror
je
mov
add
pop
cltd
or
das
inc
mov
aam
jp
nop
fcompl
push
dec
ja
rcrb
in
jecxz
mov
and
popf
fisubs
or
push
out
add
mov
xchg
test
mov
shlb
pop
rcll
leave
cli
mov
repnz
das
test
pop
sub
cmp
repz
nop
mov
and
in
xchg
sbb
outsl
sbb
cmp
push
out
pmullw
cmp
dec
push
cmpsl
cmp
lods
in
push
lock
cmp
push
xor
sbb
cmp
push
je
incb
jmp
or
clc
push
cs
xchg
add
inc
jnp
leave
jge
scas
addl
out
aad
outsl
mov
push
sbbl
xor
lcall
pop
cli
mov
sub
popf
popf
pop
jl
ss
and
xchg
mov
cmp
xchg
adc
jns
daa
xor
xor
jecxz
dec
inc
lods
roll
xchg
test
adc
cmp
xchg
mov
sub
fs
ja
scas
out
xchg
scas
aaa
out
movsb
pop
xor
inc
and
rclb
scas
ss
cli
mov
mov
sub
mov
pop
test
xchg
data16
xchg
xchg
js
sub
shll
mov
sbb
repnz
rclb
jne
cli
push
sbb
add
dec
insl
cltd
fildll
adcb
mov
and
repz
sbb
cmp
mov
setle
addr16
ret
enter
pusha
scas
andb
stos
mov
repnz
mov
orb
xchg
jl
loope
lds
dec
aas
push
push
mov
scas
lods
leave
scas
lcall
add
arpl
fildll
cmp
rcrl
lods
adc
insb
or
jle
leave
adc
cltd
or
mov
fcompl
sbb
jg
gs
xchg
fs
jae
mov
aaa
xchg
jo
cwtl
lock
enter
mov
ds
cmpsl
rorl
shr
int
fsubrs
gs
push
insb
mov
mov
pop
xor
inc
insb
into
pop
sbb
adc
loop
mov
jbe
in
or
lret
sub
aad
xchg
and
sub
add
in
xor
jne
ret
xchg
movsl
inc
cmc
je
and
rcrb
mov
nop
popa
pop
sti
inc
les
or
in
pop
pop
xchg
pop
ds
subb
cmpsl
inc
mov
mov
mov
and
in
out
xlat
iret
add
fldl
xorl
jg
and
xor
adc
adc
or
adc
ret
lods
push
cmpl
mov
movsl
jbe
mov
xchg
or
sti
pop
fchs
xor
loope
sub
fstpl
mov
les
mov
mov
sahf
cwtl
cld
fildl
xchg
push
sar
cltd
lahf
mov
push
roll
mov
jnp
test
fldl
push
in
dec
adc
dec
stc
rorb
stos
jbe
mov
xor
lsl
ror
hlt
mov
ret
inc
add
out
in
shll
cmp
mov
out
inc
push
stc
fisttpl
lock
add
pop
xlat
lock
bswap
lret
push
call
sub
adc
inc
rclb
add
adc
dec
rclb
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
