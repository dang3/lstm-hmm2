push
jb
mov
aas
xor
mov
push
inc
mov
fcompl
mov
cld
jae
mov
test
mov
fdivs
sti
sbb
pop
leave
cltd
pop
add
daa
in
dec
aad
jnp
dec
mov
xchg
int
ret
nop
xchg
push
cli
xchg
sbb
hlt
in
mov
sub
or
inc
xor
rol
mov
pushw
mov
std
mov
mov
adc
fldenv
scas
pop
pop
push
out
lret
nop
sbbb
dec
jae
fwait
not
xor
sub
dec
mov
sbb
pop
jae
xchg
ss
shl
xchg
rclb
sub
pop
ja
int
cs
mov
or
fdivl
cs
gs
popa
leave
and
sub
and
inc
mov
repz
or
add
or
imul
scas
sub
js
int
jg
nop
ja
popa
sub
pusha
push
mov
cmc
cltd
push
pop
mov
fdivrl
push
inc
or
jle,pt
sub
int3
sbb
dec
xlat
ss
insl
dec
enter
scas
or
xor
pop
adc
stos
pop
aad
imul
es
mov
and
push
jne
sbb
xor
cltd
shlb
xor
jno
in
js
jns
xchg
and
movzwl
lahf
jae
pop
pushf
dec
xchg
jo
mov
lret
addr16
negb
lods
lods
mov
adc
mov
leave
jno
daa
mov
cmp
insl
pop
idivb
cwtl
stos
iret
sbb
push
mov
stos
inc
xor
xor
pop
xchg
inc
leave
je
sub
test
loop
pop
in
pop
lret
lret
or
fmull
pusha
push
testb
nop
pop
int
pop
xchg
dec
ror
pusha
cs
mov
cmp
mov
mov
repz
das
addr16
sbb
adc
lods
pusha
popa
clc
mov
aas
mov
lahf
mov
fldl
ficomps
sbb
inc
dec
cmp
jb
mov
lods
jmp
das
or
lea
out
mov
in
inc
leave
outsb
xor
cmpsl
push
jb
sbb
cmp
es
inc
push
inc
add
js
in
pop
shrb
xchg
push
add
mov
ja
ja
out
cmp
movsb
and
mov
and
sub
jge
adc
sub
in
xor
cwtl
gs
inc
push
scas
int3
ret
lods
sbb
lock
mov
fiaddl
imul
jne
enter
xchg
push
mov
movsb
testb
out
sub
cmc
jo
ds
sahf
int3
nop
into
ljmp
data16
lods
or
fdivrl
pop
jno
or
das
cs
cmpsl
imul
sarl
not
arpl
cs
dec
pop
es
dec
shrb
iret
pusha
and
out
ret
or
xor
and
nop
cmp
and
test
pop
or
fld
xor
fistpl
mov
test
mov
inc
xor
xor
inc
xlat
cmp
and
mov
push
inc
mov
push
hlt
outsl
xor
lcall
out
mov
pop
jecxz
popf
fnsave
inc
in
pushf
pushf
das
push
inc
sbb
int
out
movsl
pop
mov
arpl
iret
xchg
or
mov
insl
mov
and
lods
mov
mov
sbb
add
adc
inc
popf
dec
scas
jbe
cmp
cmp
ljmp
cld
ds
mov
pushf
dec
mov
mov
rcrl
popf
bound
daa
mov
push
jno
loop
inc
pop
loope
in
dec
fs
inc
mov
ja
aad
dec
and
and
cmpl
fsubp
cwtl
mov
mov
ret
je
or
lock
rclb
mov
test
aad
xchg
fistps
stos
sbb
sahf
mov
dec
addl
pop
xlat
push
mov
adc
incb
inc
sbb
lret
repnz
icebp
and
cmp
mov
ret
xchg
lahf
arpl
xor
xor
jno
stos
adc
mov
xchg
inc
loop
ds
inc
add
insl
repz
ljmp
mov
and
sahf
in
mov
adc
jp
mov
movsl
xor
movsl
ficomps
pushf
adc
lods
pusha
xor
ljmp
xchg
scas
popa
dec
cmpsb
push
popl
mov
or
jb
ret
adc
mov
cmp
jb
add
fistpll
xchg
xor
push
imul
scas
pop
mov
add
inc
jmp
fisttpll
in
aaa
idivb
das
mov
jmp
fucomp
scas
lret
lods
cli
adc
cmp
cwtl
dec
or
push
ret
pop
dec
out
pop
out
repz
jmp
fchs
and
and
xor
pop
adc
mov
mov
mov
adc
add
je
jnp
jno
int
dec
imulb
adc
inc
lods
add
add
cwtl
call
movsb
sub
and
iret
mov
shlb
pop
mov
xor
cmp
fwait
das
dec
push
aaa
push
jecxz
cs
lret
mov
outsb
mov
adc
push
inc
aad
out
repnz
lods
gs
mov
mov
jbe
sbb
cmp
inc
gs
jae
leave
inc
inc
test
pop
out
scas
adc
in
mov
stos
jno
jge
int
jo
push
cld
pop
pop
cs
xor
mov
push
in
jnp
repz
and
jecxz
ficoms
mov
cmp
cmpb
bound
lret
call
add
add
push
push
sub
pop
pop
cmc
lea
push
push
jle
xchg
pop
pop
jnp
jb
shl
push
push
pop
pop
mov
mov
sar
test
test
push
jbe
test
pop
inc
dec
stc
add
stc
jmp
jmp
call
push
test
pop
push
ror
pop
or
test
sub
test
stc
clc
mov
add
push
dec
pop
clc
push
add
push
pop
pop
push
push
rol
pop
pop
push
mov
pop
stc
push
push
push
add
pop
pop
cld
sub
nop
cmc
mov
or
cmc
push
add
pop
push
add
pop
push
jno
push
mov
pop
pop
push
inc
pop
lea
mov
jae
push
cmp
pop
push
push
push
add
pop
pop
pop
jle
clc
shl
testl
je
nop
cmp
add
push
ror
pop
clc
nop
nop
nop
xor
cmp
test
jnp
jae
clc
dec
inc
xor
xor
push
push
sub
pop
pop
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
jmp
bnd
adc
cs
outsl
mov
leave
sahf
jle
xor
xor
aaa
sahf
sbbb
mov
addr16
lods
jo
filds
adc
mov
insl
adc
rorb
pusha
xlat
sahf
pushf
sarb
add
mov
push
and
pop
ja
push
jb
rol
pop
test
cmp
push
xor
pop
rol
push
pop
ja
push
and
pop
rol
cmc
nop
loop
pop
clc
jns
or
cmp
push
test
pop
clc
dec
jne
push
and
pop
push
jg
push
ja
clc
pop
pop
push
dec
pop
cld
push
jno
add
pop
xor
cmc
add
push
xchg
xchg
pop
xor
je
jb
push
add
cmc
test
cld
push
add
fnop
xor
je
jle
push
test
pop
push
push
xor
pop
pop
push
push
and
pop
pop
push
push
pop
pop
test
clc
addr16
adc
fisubs
movsb
daa
in
insl
in
cmp
fdivrl
jo
cmp
pop
dec
add
in
jge
lea
ss
lods
jnp
scas
sti
lods
push
sbb
dec
add
movsl
loopne
movl
xchg
and
cli
loope
into
out
out
iret
in
shl
das
out
jae
sti
sub
vcvtps2pd
push
dec
xchg
push
test
inc
push
jmp
dec
mov
fs
scas
jo
or
mov
bound
jmp
cmp
mov
dec
mov
insb
or
sub
ja
mov
and
fwait
adc
xor
mov
loope
fwait
loope
mov
test
inc
lock
lock
mov
pop
xor
fsubrl
lods
push
mov
and
mov
lret
aad
inc
cmp
mov
and
std
jl
cli
push
pop
mov
jno
sti
bound
xchg
jns
xchg
push
lods
enter
imul
or
lahf
xchg
jg
push
ja
and
out
ja
pop
filds
push
push
inc
push
popa
or
push
out
mov
out
or
ficoml
inc
in
xchg
daa
jns
shll
idivl
push
jp
adc
repnz
in
outsl
cmp
jo
xchg
xchg
lret
mov
lods
and
lcall
aam
fstps
or
das
or
lds
sbb
loop
and
in
sbb
inc
out
inc
and
inc
push
and
movb
pop
mov
pop
das
mov
lea
mov
repnz
fnsave
pop
inc
xchg
push
sbb
cwtl
repz
dec
fdivrs
xor
and
jnp
inc
inc
jne
data16
push
pusha
rclb
lods
mov
jo
adc
shrl
lds
add
mov
fists
scas
aad
scas
test
fisubrs
fdivrl
ss
out
cwtl
xabort
and
test
or
mov
adc
ror
sub
cmp
xchg
sbb
and
in
ss
jecxz
cmp
push
lds
mov
jno
aaa
dec
push
orb
jnp
xlat
movsb
int3
add
pop
sub
aas
sub
incb
mov
jge
dec
jle
test
or
cmp
mov
cmp
cmpsl
xchg
cmp
lcall
inc
mov
xor
lods
bound
push
add
sti
xchg
ss
bswap
push
adc
imul
aaa
jg
push
or
stos
shrb
dec
sub
test
or
mov
ss
subl
in
fucomp
jo
inc
jno
leave
lret
dec
fucomp
jo
inc
jno
lret
dec
fucomp
jo
inc
jno
ret
lret
inc
fucomp
jo
inc
jno
ror
in
inc
fucomp
jo
inc
jno
mov
lods
push
push
and
or
decl
add
pop
addr16
shlb
das
mov
and
dec
and
mov
dec
mov
jecxz
mov
lahf
mov
add
or
sub
pop
int
pop
mov
mov
js
or
outsl
shlb
xor
jge
push
ficoms
push
jb
stos
jb
or
mov
loope
lcall
xchg
fldl
sahf
lock
testl
fiadds
fsubp
ljmp
cli
mov
pop
cmpsb
mov
divb
push
xchg
jb
in
jb
cmp
adc
jmp
jno
xchg
mov
out
push
lea
arpl
shrb
das
lcall
xor
lret
add
inc
mov
enter
jns
and
pusha
sar
jo
push
jno
mov
inc
mov
mov
leave
les
lds
pop
push
xor
push
mov
std
ret
imulb
push
jp
adc
icebp
add
dec
or
inc
mov
cltd
ret
mov
adc
push
sbb
gs
popf
shlb
xchg
shll
xchg
or
or
fbstp
imul
adc
adc
inc
mov
push
mov
fildl
sub
lcall
pop
mov
pop
jns
xlat
xor
mov
sub
fsubrs
add
dec
aad
in
in
mov
sub
mov
jmp
data16
mov
cmp
lds
daa
cmp
movsb
jge
dec
dec
mov
or
push
add
icebp
sub
inc
je
pop
adc
test
add
add
pop
sti
popl
inc
jo
xor
mov
mov
mov
cmc
push
aas
sub
sti
mov
mov
lds
out
mov
sbb
cltd
fnstsw
sub
pop
mov
mov
arpl
sub
cmpsb
xchg
out
adc
sbb
in
sbb
sub
out
ss
and
push
or
mov
add
mov
xchg
lahf
cmpsb
data16
or
inc
dec
movsb
push
adc
rolb
push
jle
or
mov
mov
inc
hlt
mov
xor
div
mov
adc
xchg
out
in
jg
shr
arpl
cld
scas
mov
dec
ret
mov
jne
pop
lret
lods
add
dec
adc
inc
or
jns
fiaddl
mov
test
jg
push
jmp
sbb
mov
jo
scas
lahf
addb
jge
ljmp
cmp
loopne
jp
data16
xor
clc
fdivr
rol
xchg
mov
loop
or
pop
push
dec
or
bound
in
fsub
movsb
dec
push
mov
xor
adc
inc
xor
ds
cmp
fstpt
es
orl
repnz
sbb
xor
sbb
sub
mov
cmpb
sti
pop
sbb
out
stc
adc
jae
shl
mov
mov
test
sub
pop
jl
pop
test
or
jno
jmp
hlt
mov
mov
in
stos
lods
sub
inc
lea
mov
pop
sub
mov
push
pop
mov
or
push
xchg
dec
push
shr
mov
in
cltd
adc
dec
mov
outsb
sub
movsl
add
push
arpl
popf
cmp
xor
sub
pop
fwait
mov
daa
pop
cmp
sti
xor
popa
loope
xchg
mov
mov
sbb
insl
aaa
movsb
xlat
sub
push
movsl
js
shr
ficomps
clc
pop
jae
jg
dec
mov
test
aad
push
pop
and
dec
popf
adc
sbb
cmpsl
or
int
ja
lahf
or
movl
icebp
negb
push
add
iret
inc
or
pop
xchg
lret
and
stos
mov
jne
mov
scas
das
rcrl
or
in
add
lcall
jecxz
ret
fstps
lcall
push
xchg
fisttps
push
inc
subb
mov
sub
inc
call
rcrl
lock
dec
cmp
rorb
add
insb
ljmp
pop
adc
push
bound
jg
fsubrl
lret
sub
pop
sahf
ret
jmp
xadd
jns
dec
sub
add
sarb
decb
xor
mov
mov
shl
pop
dec
xchg
cmp
sub
push
aas
xchg
mov
mov
fdivrl
ja
shr
mov
mov
and
enter
xor
rcrb
movsb
je
mov
mov
lds
mov
lds
inc
sub
mov
pop
mov
adc
stos
inc
jmp
adc
aad
mov
pop
adc
ljmp
jp
inc
sbb
fimull
enter
test
or
add
sub
or
inc
iret
xchg
push
and
imul
mov
insl
shll
rdmsr
adc
lock
dec
insb
outsl
scas
sub
add
push
or
pop
lret
add
clc
ficoml
xor
movaps
xchg
mov
lahf
xor
ret
pushf
mov
repnz
stos
mov
push
leave
xchg
push
sti
idivb
dec
mov
scas
or
jge
xor
es
jmp
pop
sub
pop
gs
gs
jnp
sub
aaa
mov
cmp
xchg
xchg
shll
and
incb
test
mov
push
aaa
xchg
iret
in
aam
push
push
inc
sbb
insb
cmp
push
xchg
cwtl
lock
movsl
inc
sbb
scas
je
sub
mov
sbb
xchg
jl
mov
adc
inc
bound
cltd
int3
xor
das
dec
scas
dec
push
adc
or
aaa
arpl
xor
int
imull
sub
lret
repz
jle
ret
loope
call
sub
mov
jecxz
clc
pop
xchg
cmp
mov
pop
inc
sub
or
mov
cmp
outsb
push
mov
paddsb
std
dec
xor
cmpsl
addr16
mov
aad
xchg
pop
dec
ret
push
fdivr
call
mov
push
and
dec
xchg
add
ljmp
loopne
std
mov
adc
out
push
mov
xchg
push
lock
in
icebp
outsl
sbb
lahf
cmpsl
mov
ss
in
movsl
fs
mov
jmp
fs
in
mov
sub
rorb
dec
push
mov
sub
or
inc
mov
jnp
cwtl
dec
aad
scas
ja
mov
loopne
dec
mov
loope
icebp
pop
xchg
push
inc
push
cmp
stos
lahf
xor
insl
testl
mov
leave
pop
inc
add
stos
ret
fimuls
add
inc
jae
inc
in
test
cmp
loopne
cwtl
adc
xlat
int
push
test
xor
or
incl
insb
pop
psubq
aas
push
addr16
bound
add
fwait
and
push
and
sbb
sbb
popf
leave
sbb
xor
mov
ja
pop
sbb
dec
incl
inc
lock
rcrl
fsts
sub
inc
insb
mov
ds
mov
mov
lea
hlt
push
push
pop
ds
mov
mov
or
imul
or
sbb
insl
ja
inc
in
pop
imul
jne
test
mov
pop
cmpsb
mov
ss
aaa
push
push
insb
jnp
shrb
xlat
and
bound
hlt
mov
lret
cmp
cmp
mov
jb
pop
jnp
jecxz
pop
push
lret
lahf
add
jns
scas
sub
gs
insb
mov
insl
inc
cmp
cld
pop
pop
popa
and
sahf
in
mov
inc
pop
insb
ljmp
dec
inc
fnstcw
je,pt
jge
push
mov
add
and
pop
sahf
loope
push
in
addr16
mov
movsl
scas
pushf
loope
insb
roll
sahf
ljmp
dec
mov
push
pop
add
inc
mov
icebp
mov
and
lahf
dec
je
push
mov
jp
xchg
pop
fwait
xchg
sbb
xor
push
cs
sbb
push
shlb
popa
test
cld
inc
idiv
dec
ss
clc
pop
pop
pop
pop
jne
mov
cwtl
add
sbb
hlt
lcall
int
das
cmp
mull
xchg
or
xor
movl
mov
das
xor
rolb
das
test
gs
adcb
movsb
lret
shrb
add
inc
arpl
dec
cmp
jp
lcall
ss
pop
outsl
or
test
adc
insb
es
imul
inc
push
lds
jmp
push
popaw
ja
add
sbb
subl
in
inc
adc
sti
aaa
repnz
lods
mov
das
pop
push
jle
test
data16
cmpl
add
lock
jmp
jno
mov
loopew
aas
adc
outsb
jp
aad
or
adc
xchg
push
pusha
mov
inc
inc
sti
inc
and
pop
xchg
push
mov
addl
fwait
mov
nop
push
add
push
shll
xchg
xchg
gs
or
adc
call
lods
mov
popl
rcrl
ficompl
jmp
in
je
sub
mull
sub
lret
roll
jmp
push
push
add
push
loopne
mov
sbb
mov
sbb
insb
pop
lods
sahf
test
lcall
sbb
mov
xor
test
adc
or
mov
lods
dec
adc
bound
lahf
xor
ret
xor
stc
sub
or
pop
inc
pop
insl
pslld
arpl
pop
xchg
push
pop
addr16
shll
mov
xor
nop
leave
addr16
aam
les
cmc
and
in
inc
sub
push
sbb
jg
enter
jle
push
fildll
out
sub
inc
hlt
cmp
test
dec
rcrl
cld
loop
negl
dec
add
adc
add
repnz
lret
inc
pusha
inc
in
iret
dec
aas
pop
add
ljmp
xor
aam
mov
jae
fldl
jo
cmpsl
scas
mov
mov
jae
nop
icebp
leave
mov
mov
cmp
inc
pop
push
dec
out
dec
pop
jmp
xor
aad
xchg
xlat
xchg
push
jle,pn
lahf
or
jnp
or
pop
and
sub
cmp
xchg
scas
out
icebp
insl
or
xor
xor
enter
out
pop
jno
pop
stos
xor
dec
test
mov
inc
enter
scas
adc
mov
in
nop
pop
movsl
jp
add
dec
stc
gs
cmpsb
jno
dec
sar
or
insl
mov
jnp
cmp
xchg
and
adc
pop
stos
cld
in
jmp
push
add
push
cmpsb
mov
push
lret
std
mov
or
in
bound
and
jp
and
and
push
mov
fnstsw
ret
lret
dec
xchg
fmulp
cmc
pop
cmpsl
dec
popf
pop
lahf
push
mov
jbe
std
fimuls
lods
mov
jecxz
insb
pop
sbb
mov
sbb
cmp
rorb
and
nop
sub
dec
pop
sbb
dec
add
gs
mov
adc
add
insl
xchg
scas
dec
loope
mov
pop
adc
mov
nop
pop
ljmp
sub
mov
sbb
mov
mov
sbb
cs
cwtl
or
xor
mov
cmc
loop
xchg
mov
push
popl
jne
cmpsb
push
imul
jne
and
and
or
loop
mov
outsb
jp
aaa
mov
fwait
push
lahf
sbb
mov
push
adc
outsb
mov
int
cmp
xchg
aad
jle
push
add
loop
andb
aam
adc
add
fyl2xp1
es
insb
stos
movsl
mov
add
dec
imul
out
repnz
fidivrs
ds
sahf
push
rorb
xor
xor
loope
nop
sbb
push
insb
and
test
cli
add
je
pop
cwtl
je
movsl
sahf
test
aaa
and
dec
mov
int
adc
jg
sub
fmull
mov
iret
xor
mov
addr16
xor
ret
jl
jb
pop
xorb
pop
data16
in
cmp
addr16
xor
or
dec
subb
push
std
mov
xchg
loopne
inc
sahf
dec
sbb
lds
push
subb
jge
pop
cmp
cwtl
pop
mov
add
loopne
scas
inc
mov
call
sub
jnp
fwait
es
mov
pusha
int
adc
dec
hlt
jp
aaa
mov
aad
inc
in
dec
adc
push
xor
cmp
sub
or
pop
or
dec
imul
cld
shrl
jmp
sbb
mov
daa
or
stos
int3
inc
add
sub
cmc
jecxz
push
popa
mov
add
jo
ja
cmc
cmp
jo
lret
mov
stos
sub
loop
fwait
jne
subl
cmovae
fcomip
rcll
and
cmp
or
adcb
int
cmc
sbb
mov
lods
cmp
loopne
fisttps
sub
out
xchg
cmpsb
or
andb
sti
ss
cmc
or
sbb
insl
in
ret
lret
nop
xor
rclb
push
in
or
iret
in
push
scas
test
dec
add
fistpll
xchg
cmp
sub
mov
dec
cwtl
xor
mov
inc
pop
cmp
js
lods
cli
xor
hlt
cmp
jg
jnp
inc
pop
sbb
jecxz
lahf
push
sbb
call
cmp
repz
dec
mov
iret
jb
icebp
mov
mov
mov
inc
and
xorl
jne
stos
lcall
mov
icebp
repnz
rorl
xchg
dec
fwait
xor
dec
lret
sbbl
sbbl
cmp
in
jmp
dec
in
test
inc
xchg
xchg
mul
stos
scas
cmp
push
mov
pop
sbb
filds
cwtl
mov
pop
gs
xchg
sbb
xlat
gs
add
or
movsl
push
dec
push
mov
mov
fmulp
aam
scas
hlt
pop
push
push
lahf
xchg
lcall
xchg
movsl
shl
jnp
div
in
outsl
jmp
pop
sub
mov
pop
add
push
lret
xchg
out
pushf
xchg
iret
sahf
imul
lods
test
nop
pop
xchg
pushf
pop
push
or
pop
loope
sbb
mov
fisttpl
mov
mov
pusha
pushf
sub
jle
fimull
sub
adc
sbb
je
mov
out
mov
mov
gs
mov
cmp
ror
bound
es
jmp
pop
xlat
push
inc
jbe
dec
push
mov
pop
ss
sbb
mov
mov
test
jg
and
loopne
push
lods
ror
loopne
hlt
jbe
mov
lds
in
add
cmc
cli
enter
cli
xor
adc
aas
push
and
and
push
filds
addb
mov
mov
loope
in
cmpsb
call
xchg
fdivrs
rol
bsf
cli
mov
cmp
out
mov
mov
jb
lods
jl
ret
lret
adcb
sbb
xlat
cmpsb
cmp
sahf
aaa
mov
es
cltd
stos
rolb
jge
push
pop
pop
jecxz
mov
xchg
frstor
fcoms
jmp
sub
cmp
mov
mov
inc
aam
aad
push
lret
notl
push
sub
push
dec
ds
xchg
adc
ss
movsb
cmp
mov
add
repnz
mov
jae
loop
cwtl
pop
test
ds
inc
lret
and
hlt
sub
mov
inc
ret
sub
jne
out
test
int3
mov
sahf
fimull
shrb
bound
mov
ss
mov
mov
dec
repnz
add
pop
cwtl
jnp
cli
imul
ja
jmp
ljmp
fstpl
jl
mov
ljmp
xor
xchg
inc
jno
jecxz
repz
cltd
lahf
dec
fadd
xchg
jno
push
cmp
mov
in
mov
push
rcl
fisttpll
adc
xor
loopne
cmpsb
fidivrs
rcrb
sub
mov
push
xchg
or
dec
jno
js
cmpsb
outsl
cwtl
icebp
push
jnp
imul
mov
mov
icebp
push
jl
adc
nop
movsb
test
fwait
lret
sub
jmp
pop
lahf
add
clc
call
push
mov
mov
mov
mov
ficoml
iret
dec
pushf
insl
adcb
jmp
stos
imul
fcoms
aam
call
sbb
jne
cmpsb
mov
ret
inc
in
pop
popa
cmpsl
dec
test
mov
xchg
sarl
sbb
xorb
pop
ret
or
js
out
lock
jl
ja
in
rcr
iret
xchg
jo
lods
jbe
out
and
je
repnz
add
mov
xor
jmp
in
jbe
push
push
or
sahf
stos
dec
sti
pop
sbb
popa
cli
dec
outsl
mov
gs
mov
fsubs
sub
lods
mov
sti
cmpsb
fwait
pop
pop
mov
inc
jae
mov
lret
jge
cli
jp
push
aaa
inc
push
popf
orb
adc
scas
jle
jle
sbb
sahf
cmp
push
mov
fldcw
and
repz
mov
das
neg
push
add
call
out
xor
or
mov
mov
or
jnp
rcrl
loop
mov
xor
movsl
cli
fisubrl
mov
outsl
hlt
lock
mov
jns
lret
xchg
test
sbb
pop
cmp
addr16
adcl
data16
fwait
sbb
mov
arpl
call
mov
fisttpl
cwtl
push
mov
shrl
xor
inc
into
outsb
fwait
cmc
sbb
jbe
repnz
pushf
push
jb
xchg
addl
push
xor
xor
lock
adc
xor
jnp
xor
ja
jae
dec
xchg
daa
mov
push
popf
inc
loop
in
jnp
mov
out
xor
ror
divl
outsl
mov
jns
loope
and
or
dec
dec
sbb
jecxz
mov
and
add
mov
dec
xor
push
fsubs
insl
xchg
xlat
mov
dec
fsub
dec
or
jnp
lret
xchg
lret
xchg
cmp
xchg
xchg
cmpsl
xchg
icebp
mov
xchg
mov
mov
dec
pop
cmp
mov
fisubrs
push
mov
cmp
xchg
push
aam
mov
sbb
icebp
mov
cltd
dec
sub
xchg
cmp
paddusw
push
movsl
xor
out
rcr
xchg
add
sub
icebp
int3
dec
stos
enter
mov
pop
js
fstpt
pusha
xchg
push
sub
ja
lods
mov
movsl
rcrb
and
test
sub
dec
les
and
xchg
push
xlat
and
mov
and
or
hlt
push
mov
jl
mov
pop
pop
mov
es
mov
rcll
mov
out
sbb
fstpt
jp
fadds
ret
push
jle
mov
xchg
jae
jl
cs
aaa
mov
in
cmp
jecxz
inc
stos
xor
popf
pop
lahf
and
movsl
or
test
push
icebp
and
es
push
in
ja
loopne
in
jnp
insb
sub
jp
notb
mov
shrb
push
and
lcall
leave
pop
sbb
sbb
inc
lret
xor
pusha
xor
mov
inc
ja
cmp
mov
jle
pop
popa
cmpsb
stc
push
jne
mov
push
cmp
stos
xchg
xor
das
ja
adcl
into
jmp
mov
addr16
lds
loop
loop,pt
adc
inc
int
in
cli
shl
enter
sub
sbbl
hlt
sub
add
adc
and
mov
lea
sbb
mov
cmp
outsl
lret
jno
in
jae
jbe
sub
cmpl
pop
bound
testb
pop
pop
mov
jg
jnp
arpl
adc
push
stos
jbe
cmpsl
add
push
xchg
push
lahf
das
push
int3
jo
cmp
std
shlb
cwtl
dec
cmp
pop
and
lahf
jmp
jbe
jle
arpl
cmpsb
mov
xor
movsb
inc
sbb
in
pop
repnz
rcl
mov
push
mov
cmp
int
xchg
jbe
inc
adc
fldenv
inc
fldenv
imul
add
mov
inc
stos
ret
aam
std
cwtl
hlt
test
dec
cmp
ret
in
mov
sbb
push
outsb
inc
pop
push
dec
call
dec
shlb
lods
clc
add
nop
push
loop
pop
xor
leave
inc
pop
pop
js
and
sbb
dec
mov
xchg
dec
leave
pop
in
lret
fcomi
test
cwtl
out
xor
jge
jp
push
in
lds
xchg
pushf
sub
dec
int
gs
sbb
jno
js
xchg
imul
bnd
cmp
mov
sbb
sbb
fstps
xor
cs
xchg
xchg
push
insb
mov
cmp
fidivs
imul
inc
cwtl
lahf
imul
cld
xlat
xchg
ljmp
sbb
dec
in
or
cli
push
or
mov
push
hlt
inc
sbbb
add
pop
aam
sbb
cltd
popa
mov
andps
adcb
inc
push
fsubl
or
push
pop
push
adc
jmp
push
fimuls
xor
push
stos
or
loopne
add
sbb
aad
sub
int3
mov
xchg
pop
xlat
inc
cmp
inc
mov
loop
popa
inc
jae
ficompl
xchg
mov
mov
xor
xor
arpl
cmp
les
fcmovbe
stos
insb
daa
cld
pusha
inc
adc
jle
call
andb
test
frstor
loopne
xchg
jle
push
orl
adc
add
xchg
cmp
cmp
mov
bts
orl
addr16
idivl
fimuls
adc
inc
or
into
cs
and
cmp
jae
sub
imul
test
insb
clc
addr16
xchg
imul
test
or
and
test
cld
ret
add
lret
push
cltd
inc
out
cmp
pop
mov
xor
add
pop
test
or
cmc
xchg
repz
testl
pop
insb
jnp
addb
mov
aad
mov
inc
jb
dec
or
scas
add
sub
or
or
in
das
das
sbb
xor
sub
sub
imul
inc
inc
imul
gs
lods
repnz
inc
sub
or
adcl
push
lock
fimuls
outsb
and
rol
iret
push
push
mov
ss
push
dec
inc
fisubl
xchg
clc
jle
push
inc
cli
mov
aam
ds
fcompl
stc
adc
dec
or
pop
and
or
aam
or
insl
testl
aam
lock
lock
dec
push
cmp
std
jo
cwtl
jo
loop
or
cmp
and
xor
jmp
mov
adc
popa
cmc
inc
or
repz
decb
mov
and
push
mov
sub
es
aad
or
cwtl
nop
call
jnp
negl
outsl
sahf
sbb
push
push
dec
pop
mov
mov
jbe
adc
lret
adc
or
mov
inc
decb
pop
push
ja
hlt
jnp
je
jns
xchg
loope
pop
fsubs
icebp
sbb
mov
outsb
add
pop
mov
xor
xorl
cmpl
cmp
mov
or
dec
ja
jmp
insb
mov
cmp
ss
dec
sbb
mov
std
aaa
incb
ret
in
push
pop
jecxz
push
jns
xchg
fs
add
cmpb
adc
in
scas
lcall
inc
xor
rcr
insl
adc
xchg
das
jbe
jae
or
pop
sub
push
cld
fnstcw
insl
test
lock
xor
outsl
inc
addr16
inc
daa
jl
fcomps
scas
and
sbb
sahf
cmpsb
or
and
pushl
fs
cmp
jne
pop
ret
lret
rclb
mov
pop
mov
xchg
push
mov
xchg
pop
imul
mov
mov
pop
subb
or
lcall
adc
and
lods
mov
jnp
js
cs
imul
in
push
mov
and
icebp
stos
orl
xchg
push
or
dec
in
mov
jne
cmp
dec
xor
dec
imul
in
push
dec
stc
xchg
mov
test
sub
ret
or
test
lea
inc
or
stos
mov
sbb
outsb
adc
or
mov
sbbb
decl
or
cmpsb
sbb
imulb
das
cmpsl
pop
stc
mov
bound
ss
rclb
xor
inc
cltd
enter
fimuls
sbb
rorb
pop
inc
int3
sti
jnp
sub
shl
xchg
sbb
loop
cmpsb
mov
ret
call
mov
dec
jge
mov
imul
and
xchg
jb
inc
cmpsb
jmp
add
cmp
jp
cmp
or
xchg
push
into
popf
jl
jns
nop
xlat
aad
mov
stos
pushf
xchg
cmpsl
call
sbb
sbb
addb
jno
push
mov
push
loopne
leave
movsl
push
mov
jbe
xor
aam
mov
in
inc
pop
pushf
shll
push
mov
xchg
hlt
inc
out
test
ret
dec
sbb
je
cwtl
js
gs
iret
jo
mov
pop
pop
jns
dec
push
xor
stos
dec
xchg
cwtl
push
call
cmc
aas
arpl
lods
inc
lds
add
loopne
and
jl
dec
add
clc
mov
jne
mov
sbb
lods
into
out
popf
dec
pop
add
sub
stos
push
pop
js
xlat
adc
xchg
dec
push
in
mov
inc
test
ret
leave
iret
inc
xor
push
iret
jp
jge
loope
mov
and
mov
inc
jnp
popa
sbb
mov
getsec
adc
stc
lret
incb
xchg
and
int3
mov
into
or
stos
jo
or
out
test
js
scas
std
jecxz
push
xor
sub
jno
fstps
das
and
lea
leave
adc
cmc
inc
lods
add
and
test
sbb
and
mov
fs
lea
aam
sub
rolb
pop
mov
aam
jnp
pop
dec
push
ds
in
jle
sbb
into
dec
xchg
mov
pop
mov
les
pop
or
add
mov
mov
push
or
jle
xchg
fists
mov
xor
jg
cmp
jmp
add
dec
cmp
or
push
xchg
dec
ss
push
sub
and
fidivrl
ret
movsb
shrb
gs
shrl
nop
arpl
in
jp
aad
xchg
add
int
imul
xor
gs
bound
jle
pop
cmp
in
scas
jae
xor
in
add
inc
push
orb
push
inc
test
lcall
pop
movb
insb
stos
mov
js
jb
pop
js
int
lea
fcoms
out
jle
out
push
popa
fimull
gs
popl
jg
or
cmp
in
push
insb
push
rep
xchg
shlb
push
fstpt
dec
or
sar
jg,pt
push
and
daa
add
call
adc
out
jp
push
and
mov
sarl
clc
adc
jmp
icebp
sub
jmp
pop
xor
jo
mov
lret
enter
inc
jge
xor
dec
and
xor
sbb
fmull
mov
mov
pusha
test
stos
mov
push
mov
cmp
adc
repnz
sub
jbe
ljmp
mov
subl
and
or
call
cwtl
testb
int
clc
test
mov
fs
jl
lods
adc
pop
hlt
sar
mov
out
sbb
push
fsub
daa
sahf
jge
lea
movsb
das
ds
mov
and
shll
pop
popa
fsubrl
mov
adc
pusha
jbe
out
mov
push
imul
push
cmpsl
or
pop
arpl
push
mov
mov
divl
pop
push
cmpsl
mov
in
fimuls
cmc
scas
lods
gs
fs
sub
jmp
pop
out
push
dec
out
in
lahf
adc
cmpsl
sub
push
es
jo
dec
xchg
or
out
mov
adc
xchg
jno
lds
bound
jne
in
sbb
gs
cmp
pop
test
loope
mov
lods
mov
mov
dec
in
cmp
and
push
inc
or
scas
out
xor
sbb
mov
cltd
pop
por
mov
push
jg
andps
cli
adc
pop
sbb
loope
repnz
loop
sbb
popa
xchg
fwait
mov
dec
gs
lods
imul
inc
mov
jg
imul
push
mov
pop
and
lret
cld
mov
mulb
test
jne
or
call
mov
xchg
ljmp
aas
mov
pushf
and
mov
int3
dec
adc
aad
lahf
add
sbb
xchg
loopne
mov
test
add
in
stos
inc
ffreep
jnp
jl
jb
cwtl
out
jl
pop
lret
sbb
or
xchg
iret
shll
dec
fstps
adc
or
mov
shll
mov
push
mov
in
ljmp
cwtl
and
adc
fwait
cmp
mov
jg
lock
fldpi
and
jae
adc
test
pop
out
stos
xchg
sahf
sub
push
aaa
lret
adc
cmpsb
sbb
cltd
in
movsb
push
adc
pop
pop
xchg
inc
add
sub
outsb
jle,pt
jmp
push
mov
jge
popa
inc
rol
dec
sbb
xorb
adc
and
or
arpl
mov
xchg
inc
adc
mov
in
data16
rclb
div
iret
push
fwait
pop
call
or
loop
push
hlt
mov
enter
push
mov
movl
loope
cmpsl
push
jb
jge
mov
clc
jecxz
jl
push
cld
rcrb
xor
loop
sub
sbb
fisubrs
test
cltd
mov
jl
add
cmp
aas
dec
jg
mov
lds
lret
mov
pop
dec
and
mov
xchg
xchg
jns
and
mov
int
push
adc
inc
push
push
pop
movd
and
inc
pop
cmp
out
xchg
std
push
stos
fimuls
push
cmp
int3
dec
ret
and
mov
addr16
mov
testl
push
std
pop
sub
jo
call
nop
jbe
xor
in
xchg
pushf
mov
roll
pop
enter
js
jno
jbe
inc
ljmp
adc
jp
loope
jno
andnps
stos
bound
movsl
popa
cmp
imul
fisttpll
cli
jmp
ljmp
sub
mov
pop
dec
insb
sub
cmp
dec
fiaddl
movsl
xchg
dec
aas
arpl
ret
stc
clc
out
and
lds
jno,pt
push
xchg
adc
jp
pop
adc
aas
mov
push
sahf
push
repnz
jae
mov
imul
cld
jl
push
leave
push
in
adc
icebp
movb
in
mov
iret
test
xor
je
mov
push
push
inc
sbb
push
cmpsb
xchg
daa
arpl
stos
inc
cmpsl
sbb
lea
dec
add
xlat
loopne
push
pop
in
popf
pop
cmp
test
call
sti
pop
insb
in
fs
mov
add
jecxz
js
jp
ffreep
sbb
sahf
iret
popa
inc
jle
jbe
mov
adc
pop
sbb
xchg
cltd
mov
and
scas
push
sub
gs
gs
pop
popa
cld
fsubs
cmp
pop
add
mov
mov
sub
jo
sbb
negb
ret
pop
sbb
xor
push
push
mov
xchg
xchg
mov
and
fstp
popf
dec
sbb
jmp
dec
mov
inc
mov
in
fldt
and
pop
mov
pop
sub
pop
and
iret
lret
and
jo
inc
xor
inc
ljmp
add
dec
and
jo
inc
addb
pop
push
jg
test
mov
xor
xorb
push
mov
mov
mov
add
push
in
addl
add
push
addr16
and
push
mov
adc
flds
sub
jecxz
add
ret
test
in
iret
icebp
mov
lea
sub
sbb
push
pop
inc
sbb
loope
adc
adc
push
das
add
jecxz
mov
and
dec
popf
imul
xor
lret
cs
dec
cs
jbe
push
out
lods
mov
mov
add
add
sub
xor
pop
out
inc
cmp
sub
inc
sub
pop
arpl
daa
sahf
nop
sbb
stos
xor
inc
ljmp
mov
pop
pop
push
pop
shr
das
or
jnp
sub
test
xchg
cld
add
arpl
xor
stos
xchg
add
das
sub
jp
jns
fstpl
adc
negl
jmp
sbb
loope
jo
icebp
sub
fst
mov
movsb
out
mov
jb
and
fsubr
jmp
xor
adcb
xor
or
inc
mov
cmp
sub
dec
mov
push
lret
cmpsl
aam
mov
es
sbb
mov
add
fwait
out
jmp
movsl
adc
inc
test
enter
insb
pop
lret
add
push
or
gs
or
lock
xchg
sub
sub
pop
pop
out
pop
add
xchg
ret
or
mov
pop
push
xor
test
adc
cmp
fildl
test
jbe
outsl
ficoml
jns
and
or
imul
hlt
jno
sub
xchg
jp
pop
lahf
mov
daa
fs
pop
repz
ret
ret
popf
xchg
in
or
inc
mov
mov
rcr
adcl
loopne
and
ja
pushf
inc
push
inc
xchg
cmp
jns
repnz
push
out
and
cmp
sahf
icebp
in
mov
pop
sub
fcoml
pop
repnz
xor
scas
out
les
adc
outsb
mov
scas
loop
mov
sub
xchg
outsb
stos
mov
std
sbb
push
add
mov
mov
mov
sarl
out
insl
test
movb
daa
pop
shll
xor
pop
pop
cld
ret
imul
sbb
orb
aam
sbb
popf
mov
cwtl
cltd
jae
dec
sbb
test
bound
js
or
or
pushf
idivb
in
out
mov
fcom
jns
aam
insb
popa
xchg
and
push
jl
cmpsb
loop
xchg
ljmp
mov
mov
push
xchg
fnsave
jle
and
rolb
xor
add
jae
cwtl
cwtl
jns
aas
inc
pop
sbb
xor
stc
repnz
jmp
fdivrs
or
das
cli
inc
cmp
add
xchg
pop
jmp
das
stos
nop
sbb
hlt
iret
xchg
mov
jmp
call
mov
cmp
shl
sbb
nop
inc
mov
hlt
inc
and
clc
fidivl
and
in
pop
shr
cmp
cli
add
test
stos
mov
lock
lods
dec
lcall
xchg
pop
mov
insb
sbb
fisubs
lods
mov
adc
fldt
push
and
dec
adc
mov
and
sub
aaa
dec
not
xchg
dec
shrl
xchg
les
daa
sub
push
add
xchg
mov
cld
jge
sub
lds
fnstenv
ss
inc
add
mov
mov
int3
inc
clc
jecxz
outsb
repz
jbe
mov
iret
push
aad
arpl
dec
sahf
jl
mov
inc
fsub
xor
pop
xor
repz
jl
jg
push
mov
pusha
fs
pop
ret
or
push
shrb
ljmp
sub
pusha
inc
jns
sbb
add
xchg
test
test
xor
or
adc
xchg
in
or
sub
gs
stos
cmpsb
mov
mov
repnz
insb
in
js
jne
out
fnstenv
dec
test
jge
leave
mov
popf
or
jnp
inc
mov
and
push
cmp
jnp
rcl
xchg
in
pop
sbb
fs
stos
xorb
pop
aaa
add
decb
mov
leave
cmpsl
shll
pop
inc
pop
imul
mov
rorl
aad
jge
push
shrb
xchg
dec
adc
lea
aad
adc
xchg
test
push
lock
xor
std
adc
mov
mov
jbe
xor
sbb
jge
xchg
xor
xchg
cmpsl
jl
out
push
dec
pop
and
movsb
mov
xor
aas
dec
sbb
mov
xchg
in
pop
ret
jmp
xchg
inc
jmp
push
mov
mov
mov
xor
lahf
mov
insb
push
ljmp
sbb
cmpsl
ret
outsb
pop
repz
loope
cld
xchg
and
xlat
insl
test
lea
add
loope
sub
cmpsb
xchg
enter
mov
or
xchg
aam
xchg
fistl
lods
sub
mov
jne
xorl
ljmp
inc
xor
ljmp
push
pop
imul
mov
pusha
pop
out
mov
mov
fxam
mov
mov
pusha
ja
push
inc
and
imul
jl
xchg
xchg
int3
in
mov
fdiv
and
insb
pop
call
cvtpi2ps
jg
add
in
fwait
jbe
jmp
add
mov
push
pop
out
pop
jl
sbb
mov
jmp
mov
jge
inc
cld
mov
jae
mov
mov
fisttps
out
dec
outsb
dec
mov
in
int
add
and
jl
jge
mov
out
push
mov
std
add
cli
add
jecxz
int3
in
in
in
mov
out
repz
ret
inc
pop
jg
jle
clc
pop
xchg
pop
into
rcr
xor
or
dec
and
inc
dec
stos
jl
inc
outsl
mov
cmpsl
or
push
bswap
shr
adc
pop
dec
pop
shrl
and
sub
push
inc
movb
std
inc
icebp
push
mov
dec
aam
loop
cmpsb
xor
push
cltd
mov
sub
out
adc
lock
in
lahf
xor
sahf
push
test
cs
lds
loop
aaa
nop
jne
xchg
sub
sbb
xchg
lock
cwtl
jnp
inc
inc
mov
inc
or
dec
inc
cmp
push
mov
or
cmpsb
xchg
jmp
jo
jg
dec
push
jmp
fisubl
xchg
es
adc
fildl
mov
pop
pusha
and
jge
rcrb
cmp
sbb
mov
sub
or
mov
insw
ljmp
subb
sub
push
sub
and
ror
pop
fadd
adc
out
xchg
pop
andb
ficompl
orb
aaa
mov
mov
rcll
adc
xor
stc
adc
cs
push
add
jp
fidivs
pop
or
jp
iret
test
mov
jbe
movsl
xor
inc
outsl
iret
or
imul
stc
vsubps
enter
daa
push
cwtl
ret
ljmp
mov
and
push
push
ret
mov
pop
mov
ds
jae
test
ret
dec
push
jge
mov
mov
test
xchg
push
scas
in
adc
lods
ficoml
sub
push
pop
push
mov
sub
inc
push
add
movsb
aam
jmp
add
addr16
and
lods
stos
les
mov
sub
movsl
xchg
jl
push
jp
mov
out
inc
or
jno
mov
ss
mov
loop
inc
push
jb
push
mov
push
sub
sbb
mulb
xchg
daa
mov
test
fldenv
add
mov
sbb
dec
mov
cmpsl
push
push
or
repz
inc
cmp
sub
xchg
stos
xorb
js
or
inc
push
mov
push
aas
andl
dec
arpl
inc
repnz
popf
and
cmp
fnstenv
ret
sub
sub
orl
add
cmc
jno
or
and
pop
jecxz
mov
add
xor
jne
sub
scas
lea
dec
push
insl
lahf
outsb
push
pop
jecxz
mov
xor
ljmp
lret
jge
test
les
xor
xchg
xor
arpl
inc
mov
pop
push
dec
mov
mov
adc
loope
cmpsb
fstpt
inc
and
pop
cwtl
pop
pop
call
mov
rcrb
add
or
or
xchg
or
push
add
xor
dec
mov
inc
aaa
cmp
out
pusha
ret
or
add
and
or
push
dec
xor
push
pushf
mov
es
cmpsl
pop
test
or
test
mov
rcll
jne
mov
in
inc
inc
adc
lock
mov
mov
cmp
roll
cmp
bnd
add
mov
cmp
xchg
cmp
inc
cmpsl
adc
mov
pop
sahf
stos
lret
loopne
sub
aas
mull
mov
rcl
sbb
das
jg
add
cmp
filds
push
int3
dec
imul
xchg
xchg
mov
dec
push
out
loop
cmpsb
addb
jmp
dec
adcl
subl
movsb
ja
push
sub
add
pop
mov
shll
sub
adc
rolb
sbb
xor
mov
inc
xchg
dec
jnp
push
mov
xor
jmp
pop
sub
push
or
mov
stos
mov
xorb
jb
fcmovbe
push
fnstsw
iret
sub
add
pop
add
sub
test
jmp
xor
cmp
imul
rol
add
hlt
loop
testb
add
push
aam
lds
or
inc
jno
aam
ficoms
popf
inc
jge
movsl
pusha
insb
add
pop
es
and
inc
xor
paddw
scas
pop
sbb
inc
jmp
std
push
shrl
iret
into
sub
call
cmp
cmp
sub
and
mov
scas
or
fisttps
in
push
mov
leave
cmc
notl
jae
push
xchg
stos
cwtl
test
push
lret
lds
insb
pop
ret
jne
push
enter
push
lods
fisubrl
cmp
mov
mov
lock
fucomi
loope
mov
sarb
pusha
aam
orl
xchg
adc
stc
leave
pop
jmp
mov
cmp
imul
cmp
cmpsb
das
mov
pop
mov
dec
push
mov
cmp
inc
daa
cmp
les
outsl
rcrl
mov
imul
insl
adc
xchg
lret
sbb
insl
outsl
pop
and
inc
mov
mov
jns
jns
leave
iretw
cmc
mov
iret
fisubl
inc
ja
sar
ret
cmp
sahf
xchg
sub
test
addb
xchg
pop
test
sub
imul
mov
pop
lods
lods
aam
cmpsb
and
mov
dec
pop
xchg
dec
into
or
movsl
mov
nop
rorb
aad
xor
mov
popf
push
jae
shll
push
daa
jne
mov
cld
sahf
pop
ret
xchg
jl
add
jl
and
out
stos
push
daa
fptan
push
add
stc
rolb
lret
cmp
cmpsb
lods
cmp
insb
jmp
pop
mov
out
je
fidivrl
sub
mov
xor
popf
addr16
xlat
adc
outsb
sub
cmpsb
fwait
js
icebp
jg
mov
dec
sbb
mov
pop
mov
sbb
outsb
cwtl
jo
lea
mulb
fsubp
test
mov
push
cmp
dec
sub
mov
out
lahf
jns
mov
xchg
sti
mov
xchg
jmp
dec
cs
sbb
sbb
cmc
mov
hlt
sahf
mov
out
or
inc
cmc
lcall
xchg
push
shr
mov
cmpl
sbb
fsub
jl
cmp
mov
ds
push
jnp
mov
dec
scas
rcll
and
jg
lds
test
mov
in
jg
test
xor
fcmovu
sbb
test
imul
dec
cltd
test
jns
jle
je
or
jg
fisubl
cld
xchg
push
inc
sti
insb
jecxz
fcoml
in
fs
adc
lods
repz
negl
xchg
lcall
shrl
adc
clc
or
cmp
in
cmp
addr16
jecxz
mov
jne
pop
jecxz
and
inc
addr16
ja
mov
outsb
aas
mov
js
stc
push
mov
pop
mov
jg
mov
mov
pop
mov
mov
push
dec
fistps
add
shlb
cmpsb
or
aaa
jne
ja
sub
dec
dec
adc
pop
xchg
mov
mov
and
aam
and
lea
enter
repnz
sbbb
sbb
inc
pop
mov
cld
ret
roll
leave
repz
or
cmpsb
outsl
inc
call
push
iret
adc
cmpsb
outsl
repz
insb
xor
mov
add
mov
adc
push
rcrb
and
pop
in
adc
dec
add
pop
mov
jecxz
fadd
mov
scas
in
mov
cmpsl
jne
cmp
and
cmp
cmpsl
and
loope
lret
inc
data16
aam
les
add
test
mov
ret
icebp
mov
and
iret
mov
aas
mov
mov
stos
icebp
lods
aas
icebp
push
mov
and
add
adc
xor
mov
xchg
mov
push
xlat
ret
xchg
lret
ror
xor
mov
cltd
ret
out
das
pop
inc
daa
cs
jo
sbb
xchg
mov
mov
inc
scas
inc
mov
adc
adc
ret
divb
sub
in
cmp
out
push
cmp
pop
and
add
mov
xchg
jb
js
addb
outsb
cmp
xchg
push
mov
jmp
ja
pop
cmp
into
ljmp
jge
sbb
inc
jae
xchg
sbb
inc
xor
xor
and
jmp
in
into
adc
xchg
loop
sub
push
and
repnz
ljmp
sbb
add
outsb
lds
in
mov
cmp
jge
and
out
dec
pusha
push
mov
and
shl
clc
loope
jnp
jne
mov
cmc
mov
ret
push
scas
jl
sbb
inc
push
add
jg
ret
xchg
push
stos
jbe
fwait
shl
xor
pop
dec
xchg
sbb
icebp
fs
aas
mov
idiv
mov
ljmp
or
ds
add
insl
daa
lret
adc
push
push
lods
push
aas
ljmp
shl
in
ret
pop
cltd
in
lea
jecxz
mov
sti
xchg
shlb
adc
fdivl
xchg
xor
pop
std
pop
inc
inc
push
call
jge
sub
dec
mov
mov
fmul
or
aaa
not
xor
sbb
in
hlt
mov
push
and
mov
push
popa
xor
rcrb
addr16
xor
or
and
xchg
sahf
adc
push
mov
movsl
and
inc
std
add
mov
gs
ja
leave
inc
pop
xor
xor
xchg
dec
cmp
scas
or
je
or
mov
mov
stos
or
mov
or
leave
ret
fcmove
dec
jp
mov
arpl
cli
stos
shl
jmp
add
int3
sub
ret
fldl
lds
mov
inc
dec
jp
repnz
dec
ret
aad
std
data16
xchg
cld
mov
jecxz
divb
mov
jmp
jb
aaa
jb
or
aas
jno
cmp
out
cmp
jno
out
mov
pop
mov
push
xor
xor
inc
push
inc
cmp
mov
jne
stc
jnp
and
jp
lret
push
daa
fsubrs
and
out
fstpl
pop
xchg
mov
rolb
fdivr
ret
outsb
outsb
sub
movups
add
das
fistpl
push
inc
shll
sub
aas
sti
jmp
mov
pop
cmp
push
inc
pushf
andb
mov
dec
mov
shll
mov
lds
add
lock
or
mov
out
mov
xor
pop
orl
inc
cmp
mov
cli
inc
jnp
jb
ss
inc
sbb
loopne
pop
add
inc
jl
pop
inc
ficoml
xchg
mull
push
fld
cld
push
xchg
std
push
int3
xor
sahf
inc
cmp
movsb
inc
rcrb
cmp
dec
lock
cs
push
repz
sub
adc
jo
popa
and
sbb
int
mov
out
mov
mov
cmp
cmc
xor
test
frstor
loopne
xor
push
xorl
je
jne
movntq
push
pop
push
cli
enter
push
cmc
dec
rcll
ret
lret
fwait
jmp
dec
or
nop
imul
popf
ret
cmc
push
std
push
repnz
jb
pop
mov
push
dec
mov
sbb
dec
mov
aaa
scas
jne
pop
inc
sub
push
xor
xchg
mov
mov
fsubp
or
mov
pop
xchg
loope
or
sbb
jecxz
shr
jbe
jecxz
movb
sub
xchg
mov
and
adc
xor
mov
jl
cli
push
iret
cmc
mov
push
mov
dec
mov
cmp
outsb
lods
push
mov
jg,pt
cli
es
xor
out
dec
jg
sbb
sbb
inc
cmpsl
lahf
pop
js
jns
pop
pop
push
mov
adc
adc
in
xor
cltd
mov
movsb
cmp
ja
scas
xor
pop
mov
and
es
fcoms
addr16
sub
nop
sbb
dec
gs
jle
shlb
in
les
mov
jb
push
push
and
mov
lds
push
movsl
pop
jno
orl
add
cmp
or
mov
aad
stos
xor
mov
xchg
mov
lods
jp
push
cmpsb
mov
movsl
lods
adc
aaa
jno
or
scas
or
bndldx
and
sbb
cmp
orb
or
sub
movd
mov
aas
pop
cmp
jle
in
pushf
jl
adc
pop
les
gs
mov
hlt
aam
dec
fstpl
movsl
aam
out
insl
ja
or
dec
pop
mov
pusha
out
mov
mov
dec
cmp
ss
or
ss
sarb
mov
adc
xchg
test
in
dec
pusha
idivl
add
cld
add
imul
inc
out
movsl
imul
sub
nop
xchg
push
idivl
lea
push
stc
mov
and
jns
mull
lret
mov
jnp
and
inc
inc
dec
loop
xchg
or
jg
lret
testl
nop
les
mov
jo
icebp
shrb
pop
rcrl
inc
inc
jmp
push
mov
test
push
add
fisttpl
js
mov
sbb
or
into
and
dec
or
pop
popa
sbb
das
cltd
or
out
loope
adc
xor
lret
in
inc
xchg
aad
or
sbb
sub
push
jmp
pop
cmp
mov
loope
or
scas
movsb
cmp
mull
add
lahf
aad
lcall
jmp
sub
popf
or
outsl
xor
dec
lds
mov
test
mov
push
xchg
lret
pop
xor
out
jns
xchg
insb
jnp
adc
ljmp
cmc
or
adc
or
jg
nop
test
outsl
les
ror
in
test
xchg
pop
testl
pop
jmp
stos
lcall
and
lahf
jp
or
loope
inc
mov
cmp
roll
xlat
scas
movsb
lahf
int
js
test
sbb
mov
mov
shr
outsl
dec
mov
add
xchg
stc
cmpsb
mov
ret
jns
xor
pop
or
pusha
and
imulb
enter
sub
adc
push
outsb
sbbb
mov
mov
fsubs
pop
mov
xchg
jbe
adc
jnp
in
mov
lds
andb
inc
push
aam
xchg
movsl
pop
mov
mov
xchg
cmp
loope
imul
cmp
enter
adc
sahf
cli
lea
movsl
inc
mov
into
iret
pop
pushf
and
pushf
into
int3
jae
mov
xorb
xchg
sbb
xchg
iret
fiadds
pop
mov
cwtl
mov
lret
pusha
dec
cld
dec
or
int3
cmpsl
in
arpl
add
push
aas
insb
arpl
cmp
xor
xchg
push
dec
mov
gs
aas
mov
pop
les
jecxz
ret
insb
or
rclb
ficoml
out
imull
ret
scas
pop
in
mov
pop
mov
and
ret
pop
loop
dec
cmpsl
int3
mov
add
addr16
push
pop
insl
xor
dec
shlb
hlt
cmp
add
or
lret
incb
inc
lods
mov
pop
pop
pop
sbb
std
xor
enter
jne
jl
popa
sub
sbbb
test
test
test
push
scas
ret
jmp
stc
mov
xchg
or
loopne
addr16
hlt
gs
adc
jnp
xchg
cld
mov
lods
fldl
ja
xor
add
aas
fldcw
mov
dec
hlt
in
and
inc
test
push
pop
inc
btr
out
mov
dec
and
int
repnz
adc
xor
repnz
jle
fstpt
dec
das
test
inc
testl
sub
into
add
push
dec
ljmp
and
cld
pop
or
adc
stc
xchg
loop
test
or
mov
adc
mov
mov
fmulp
aas
xlat
out
xlat
jg
add
jnp
pop
xor
push
inc
in
fsubrs
lcall
addr16
mov
mov
mov
in
imul
mov
inc
test
gs
jge
inc
sub
pushf
pop
into
jmp
xor
sbb
shl
aas
add
lock
fnstcw
adc
dec
out
add
xor
push
cwtl
addr16
inc
jge
das
or
lods
fimuls
movsb
icebp
sti
sub
js
or
in
mov
leave
out
rdtsc
js
cli
push
dec
mov
leave
icebp
aad
aad
mov
out
stc
mov
out
cmc
xor
sub
adc
lds
ljmp
fidivl
dec
cmp
xorl
inc
add
mov
push
cmpsb
push
sub
adc
mov
into
ljmp
adc
jnp
lcall
rorl
jecxz
scas
mov
cmp
fisubl
pop
mov
je
mov
mov
mov
adc
adcb
lcall
lret
nop
jp
cld
insl
sbb
sub
adc
fsubl
mov
xchg
sbb
call
dec
mov
adc
push
mov
and
cs
je
stos
mov
mov
mov
ljmp
sti
div
shll
push
insb
mov
mov
mov
or
cld
push
nop
push
cmp
jo
mov
test
jae
aaa
fdivr
jno
add
cmc
lods
inc
sub
mov
out
jecxz
sbb
lahf
lods
ret
sbb
jg
movsb
add
into
ret
add
ljmp
insl
jne
test
push
xchg
or
loope
aaa
lahf
and
mov
push
cli
inc
rorl
xchg
pop
rcl
mov
and
or
or
mov
in
mov
sbb
dec
cmp
xlat
je
call
hlt
xchg
imul
mov
xchg
xchg
loopne
mov
ljmp
pop
out
jp
sbb
aad
rclb
scas
mov
or
xchg
adc
out
call
ss
dec
jb
lcall
fidivrl
push
std
insb
inc
jo
mov
and
mov
test
inc
mov
call
jae
test
pop
jo
inc
cmp
iret
es
aad
stos
cmp
mov
inc
mov
hlt
cmp
aaa
mov
sub
mov
pop
mov
out
dec
inc
or
dec
test
dec
jno
xchg
cwtl
sub
pop
imul
and
out
mov
in
cs
sub
cmp
xor
sub
cmpsb
adc
cmp
xlat
inc
rcrl
sbb
xchg
inc
push
cmp
pushf
xor
jnp
insl
aam
rclb
shrb
dec
jmp
add
xor
lods
pop
lods
shlb
lods
jmp
mov
or
cmp
dec
sbb
and
inc
icebp
repz
push
mov
sub
loope
in
fwait
daa
mov
test
jno
jnp
filds
lret
push
add
mov
rolb
jo
clc
and
js
xlat
popa
vpsrlq
cli
lret
out
scas
mov
or
mov
mov
mov
sbb
pop
sbb
je
pusha
jne
gs
jle
aas
fwait
push
outsl
and
int3
inc
xor
adc
out
push
ss
int
nop
adc
dec
cwtl
insb
popf
jl
es
jne
test
cmc
cmpsb
mov
push
mov
iret
or
arpl
ljmp
mov
jg
mov
icebp
adc
stos
fsubrp
jnp
push
xorb
enter
scas
xlat
repz
stos
insb
rolb
jno
xor
and
loope
pusha
xor
jg
cmp
cmp
ret
loopne
sbb
push
icebp
jo
fnsave
int
cld
inc
inc
push
cmp
test
not
pop
das
ret
test
pop
int
stos
mov
cmp
outsl
adc
lret
pop
addb
or
adc
add
mov
inc
fcmovb
mov
sbb
sub
mov
mov
and
mov
inc
lret
cmp
jge
jecxz
int
jg
jb
pushf
cli
sub
es
push
dec
stos
xor
incl
int
add
shr
cld
jg
sbb
jle
mov
das
dec
adc
cli
out
dec
xchg
rclb
ss
or
loope
shrb
gs
lcall
push
ret
daa
je
push
sahf
push
lret
enter
and
insl
shrl
lds
stc
jp
mov
sub
mov
mov
aam
and
inc
jbe
push
jb
dec
fwait
loop
repz
ss
mov
fwait
mov
out
push
jge
outsb
push
cli
sub
mov
xchg
mov
push
decb
push
fucomip
bound
xor
repz
out
notl
mov
stos
test
int
xlat
movsb
movsb
rcrb
pushf
cmpsl
sbb
rorl
out
mov
add
aad
xor
mov
and
clc
cmp
jecxz
or
add
push
xor
add
filds
inc
xor
popa
fbstp
and
mov
popf
clc
xor
xchg
xor
js
cmp
or
push
movsl
dec
mov
mov
int3
jp
mov
push
pop
sub
add
push
and
mov
pop
in
adc
inc
mov
cmp
xchg
shll
addr16
push
fmull
movb
test
es
cmpsl
fsub
sbb
pop
fbld
adc
dec
in
xor
and
lea
adc
shrb
adc
adc
data16
cld
or
fadds
imul
test
adc
dec
and
jl
or
push
sub
sbb
lock
sub
cld
adc
or
pop
in
push
aaa
xchg
sar
xor
jle
ja
and
sti
icebp
out
inc
push
clc
loope
repz
cld
inc
dec
imul
shrb
lcall
mov
cmp
xchg
jg
gs
pusha
inc
mov
cli
sbb
pop
add
in
mov
sbb
jnp
out
jmp
loopne
mov
pop
jne
popa
push
loope
mov
stc
mov
loopne
fldcw
mov
mov
sub
mov
lds
and
and
cmpsb
inc
int
arpl
push
repnz
lock
pop
xchg
outsl
xchg
out
jmp
movl
mov
fistps
inc
scas
ret
rorb
nop
fs
stc
jl
jne
dec
adc
out
xor
mov
insb
cmp
pop
cmpb
and
inc
fbld
and
push
movsb
mov
jmp
nop
and
add
jae
adc
cmp
and
daa
repnz
push
out
fadd
movsb
inc
mov
push
cmpsb
loopne
mov
enter
es
mov
stos
movsl
pop
cltd
and
fistpl
lret
jge
push
cmp
dec
fnsave
imul
inc
xchg
out
fsts
add
loope
loopne
out
fcoml
clc
cwtl
sbb
pop
add
sbb
clc
lret
or
lds
cmpsb
fiaddl
adc
test
inc
jp
sbb
lds
imul
shl
inc
cltd
ja
sahf
and
lds
test
cmp
pop
in
dec
insl
mov
and
mov
push
add
pop
jl
and
outsl
fwait
outsl
loop
aas
lock
mov
push
fcomp
xchg
lret
negb
insl
dec
cmp
mov
gs
mov
movsb
bnd
sbb
jns
inc
das
inc
lods
pusha
push
fsubr
aam
pop
sub
or
fadds
push
outsl
dec
jae
sbb
inc
cmpl
mov
push
out
jmp
scas
or
aam
rcl
mov
add
mov
pusha
insl
cmp
insl
jmp
xor
movsl
or
pop
or
mov
outsl
mov
push
bound
pop
and
sub
adcb
cmp
movsbl
pusha
mov
mov
pop
mov
mov
cwtl
pop
insb
repz
jb
dec
loopne
sbb
push
outsb
ds
dec
das
sbb
mov
and
add
mov
pop
jmp
pushf
jbe
xchg
lahf
shl
adcl
mov
push
sub
rcrb
ss
cltd
or
sbb
inc
repz
das
mov
adc
xchg
test
bnd
jg
pushf
add
jl
mov
mov
fdiv
fisttpll
add
mov
inc
sub
adc
mov
pop
ja
dec
rorl
fsts
cmp
loope
out
in
add
rorb
sbb
es
dec
inc
jnp
jnp
or
imul
inc
inc
xchg
cld
test
xchg
movsl
ja,pt
aam
psrlq
mov
in
enter
fadds
loope
pop
sub
xchg
cmp
mov
cmp
mov
add
faddl
es
fistps
xlat
hlt
cmpsb
repz
inc
jb
cmp
repz
and
lods
jle
sarl
imul
cmp
pop
sar
inc
in
out
adc
push
je
mov
fs
add
mov
stos
jge
sub
sbb
ss
push
mov
jb
je
std
pop
pop
call
lahf
mov
mov
mov
sbb
pusha
fistps
int3
imul
out
dec
jle
add
sbb
out
dec
cli
push
ficoml
jg
lock
hlt
sub
lods
xor
push
mov
push
fisubrs
loopne
add
xchg
daa
pop
xorb
clc
inc
daa
or
cld
xchg
bound
dec
cmove
adc
xchg
push
lods
call
sbb
mov
jg
loopne
mov
je
shll
aam
and
xor
sbb
pop
ljmp
sqrtps
sbb
mov
fwait
inc
pop
inc
rcl
mov
loopne
add
and
xchg
and
sbb
fiaddl
movsl
stc
lea
in
into
ja
popa
adc
outsl
cmpb
sub
pop
popa
add
movsl
addr16
cltd
push
fisubrl
hlt
cs
push
stos
jbe
out
jecxz
loop
andb
jle
and
push
sbb
lret
test
push
sub
cmp
dec
stc
mov
dec
cmpsl
sahf
add
mov
shr
mov
fcomps
mov
lret
jbe
popf
movsl
cmp
int3
ja
lret
sub
jg
sahf
in
sbb
or
mov
dec
daa
pop
xchg
mov
mov
mov
dec
xchg
mulb
or
add
jb
add
imul
push
repz
cmp
test
std
push
clc
clc
sub
push
daa
mov
inc
jnp
mov
lahf
test
sbb
xor
mov
test
pop
mov
fdivp
pop
test
jg
jle
outsb
stos
push
cltd
mov
aam
cmp
xorl
mov
lret
cmc
inc
xchg
or
or
fld
aam
pop
out
push
push
fucomip
sahf
sbb
clc
ljmp
push
insl
or
movsb
out
mov
push
aad
xchg
adc
cld
dec
xor
js
push
test
fimuls
or
call
xlat
cmpb
int3
pushw
roll
mov
aam
lret
xor
pop
fcomp
movsl
pop
xor
popf
pop
sahf
push
mov
scas
jmp
jp
jl
mov
test
subl
xor
addb
and
fwait
lret
add
sbb
lock
dec
daa
mov
dec
rcll
hlt
mov
bound
adc
push
es
pop
test
xlat
dec
clc
int
and
sbb
jl
shl
insb
lret
xor
nop
cmp
adc
cmc
jne
push
adc
mov
scas
out
dec
sahf
sbb
jge
mov
int
data16
mov
bound
inc
jbe
mov
sub
loope
andl
xchg
test
lret
std
and
add
aad
xlat
inc
add
cld
inc
ss
ror
add
push
addb
icebp
sub
into
ss
add
cltd
xchg
pushf
roll
mov
jb
addl
mov
xor
movsb
push
call
gs
in
popa
loopne
push
xchg
mov
xor
push
orl
movsl
lock
inc
mov
xor
and
pop
jae
stc
in
add
test
loopne
cmp
movq
fsts
sbb
mov
pminub
push
mov
arpl
insb
jl
xchg
push
inc
add
inc
xchg
test
mov
mov
pop
jo
lods
pop
imul
shrb
and
and
add
push
jecxz
cmp
arpl
cmp
sti
mov
fs
xor
jg
mov
xorb
pop
jo
mov
or
xchg
mov
and
inc
pop
out
mov
sbb
aaa
add
push
or
stos
cmpsl
inc
daa
into
movsb
lahf
jle
mov
ret
call
dec
and
aaa
adc
pop
fwait
inc
je
addl
repz
xchg
stc
stos
xor
out
mov
inc
scas
jle
in
out
stc
stos
pop
push
shlb
stc
dec
movsb
shlb
pop
nop
inc
sbbl
xlat
dec
cld
cltd
mov
jbe
sbb
dec
call
pop
fsts
rcll
into
cmp
xor
cmovb
test
jno
stos
inc
shl
pop
adcb
and
enter
and
jecxz
mov
mov
fmuls
and
dec
push
inc
insl
mov
fs
mov
js,pn
jns
sub
sbb
inc
ds
rcll
dec
jmp
ljmp
std
mov
dec
dec
jbe
addr16
sahf
sbb
cld
int
sub
negb
outsl
std
out
jnp
stos
test
rorb
jbe
fildl
std
sub
push
data16
or
fst
popa
sub
mov
test
repnz
jne
les
dec
in
add
lret
xor
loopne
push
insl
mov
dec
sti
jbe
aam
pusha
add
in
mov
xor
adc
es
std
dec
aas
gs
cli
push
js
lds
push
rolb
jae
add
xchg
shl
lock
pop
stos
jmp
in
add
push
cmp
push
std
jl
icebp
jnp
jmp
cmpsb
out
cmpsl
push
sbb
mov
je
mov
mov
pop
pop
or
pop
pop
mov
test
push
div
jnp
hlt
sbb
js
push
dec
test
or
inc
push
push
out
aam
sub
jbe
call
movsb
test
out
dec
fprem1
pop
jl
gs
sbb
cmp
lret
test
sahf
stc
push
fstl
push
int3
mov
data16
jecxz
adc
cmp
lahf
icebp
mov
sbb
cli
mov
iret
adc
push
int3
and
cli
push
and
dec
mov
or
dec
stos
push
jbe
mov
dec
aad
hlt
aam
jmp
out
ja
mov
xchg
dec
jg
jns
in
dec
pop
arpl
test
mov
pop
test
stc
and
add
cmp
decl
push
stc
xor
adc
shrd
mov
in
pushf
pop
aam
xchg
cli
dec
push
ljmp
cli
mov
je
std
sbb
mov
in
and
mov
fsubrl
mov
icebp
jo
aas
testl
dec
jg
mov
stos
add
push
popa
or
adc
mov
add
mov
lahf
mov
cmp
aam
loope
xchg
decl
das
xchg
inc
push
lcall
lcall
arpl
push
xlat
inc
sbb
shlb
sbb
test
imul
mov
or
sbbb
push
stos
sbb
aaa
adc
push
push
inc
or
and
dec
inc
sub
jno
ja
movsl
xchg
ret
lock
dec
xlat
faddl
adcb
idivb
xor
sbbb
cli
ss
pop
lods
mov
addb
icebp
lds
xchg
jnp
ds
pushf
sub
and
std
inc
sbb
push
jle
ds
mov
mov
insl
and
sbb
std
and
adc
in
or
fnstsw
mov
dec
sub
dec
xchg
jne
std
mov
pop
icebp
mov
xchg
andl
int3
je
mov
pop
pop
mov
pop
dec
push
mov
xchg
fldenv
push
mov
cmp
jmp
adc
aam
cmpsl
xor
mov
jle
inc
jecxz
mov
jo
pushf
inc
pop
scas
inc
cmp
adc
inc
out
insl
fdivrl
lds
lea
nopl
jmp
sbb
outsl
pop
xchg
add
jno
mov
lods
push
jge
rol
movsb
pop
into
stc
mov
dec
push
rorl
jne
cld
xor
and
les
xor
jno
cmpsl
add
dec
jge
imul
inc
inc
faddl
pop
bnd
xchg
add
aas
loope
sbb
ljmp
fldcw
je
jno
dec
call
notb
ja
decl
daa
std
jmp
adc
cmp
xor
push
ret
adcb
cltd
jbe
cld
adc
xor
stos
rcll
add
fldcw
jbe
jnp
in
pop
movsl
outsl
aam
test
test
roll
cmpsb
mov
inc
xchg
cmp
fcmovb
lret
push
dec
lret
hlt
or
dec
sahf
mov
cld
mov
mov
lcall
jle
in
roll
mov
ret
mov
shrl
push
xchg
lock
stos
hlt
jno
fstps
mov
sub
add
mov
push
out
fwait
add
xor
rcrl
insb
pop
repnz
mov
pusha
repz
push
popa
cmp
or
das
cs
adc
cmp
dec
push
sub
push
lods
xor
shll
adc
aam
fst
rcrb
cs
dec
mov
mov
sub
jmp
and
insb
dec
xchg
inc
inc
jmp
aas
inc
xor
nop
mov
pop
clc
mov
insb
fiadds
loope
in
adc
push
mov
xor
xor
pop
loop
inc
pusha
adc
fbstp
ds
pusha
dec
sub
cltd
cmp
mov
mov
outsb
dec
mov
fnstsw
add
nop
jl
jb
fs
xor
xchg
sub
sbb
sub
into
cmc
jbe
pop
or
push
push
mov
xchg
cmp
pop
daa
jnp
sbb
out
sub
mov
fimuls
fistl
cmp
lock
outsb
stos
xlat
mov
pop
jns
inc
sti
or
in
jmp
ss
stc
jmp
add
adc
mov
dec
jp
mov
ret
insb
sub
sub
insl
ljmp
xlat
out
xor
cmp
push
xchg
ds
pop
dec
rolb
enter
sub
cwtl
imul
movsl
outsb
push
lahf
push
adcb
dec
xlat
dec
push
sub
lds
dec
add
cli
add
jb
and
and
push
stc
data16
and
push
pop
cwtl
sbb
ret
cmp
aam
in
shrl
add
ret
iret
nop
rorb
test
xor
repnz
movsl
push
xorl
jo
mov
fisttps
pop
cmp
inc
ss
scas
add
mov
cmp
and
out
in
daa
or
push
inc
lahf
cmp
iret
idivb
adc
ret
jb
call
and
xor
stc
push
mov
push
test
mov
movsb
add
int
mov
push
pop
pop
jmp
aaa
cmp
sbb
cmp
or
aas
andb
inc
icebp
sub
xor
cmp
jnp
test
mov
jb
subl
push
mov
xchg
test
je
mov
mov
stc
sbb
jmp
aam
pop
cmp
push
xor
or
fdiv
push
pusha
aaa
out
sarl
loopne
push
jae
dec
pop
or
push
in
jne
stos
scas
stos
in
pop
sbb
lds
cmp
sub
test
fucom
inc
mov
jb
clc
ds
test
notb
ret
push
fs
ficomps
inc
ljmp
bound
and
icebp
sbb
jl
in
out
aam
in
mov
and
sbb
cs
shl
ficoms
ja
fisubl
outsb
rclb
leave
mov
cli
arpl
inc
xor
sbbl
or
pop
daa
and
das
out
pop
mov
mov
jmp
push
int3
or
out
mov
shrl
flds
and
sti
insb
dec
push
insb
xor
test
fs
dec
fsubrs
jecxz
mov
in
fiadds
jmp
jl
lret
lds
repnz
hlt
adc
arpl
adc
aam
adc
mov
xor
repnz
mov
pop
push
nop
out
pop
out
mov
mov
roll
jmp
cmp
rolb
stos
cmc
loop
out
dec
ret
and
je
or
mov
es
cmp
movsl
push
sbb
cmp
or
imul
push
pushf
inc
loope
sti
xchg
jo
and
fdivrs
test
inc
jg
into
clc
adc
push
clc
lds
push
pop
lret
jmp
packuswb
mov
push
rorb
cmp
inc
cmp
gs
jmp
jno
lret
mov
inc
and
mov
outsb
aad
push
dec
sti
mov
cmc
in
mov
sbb
dec
cmc
mov
mov
add
lds
repnz
repz
push
mov
cmpsb
dec
cli
cltd
out
into
lcall
jo
add
inc
push
sub
jae
movsb
or
sti
cmp
adc
mov
and
mov
divl
cmp
shrl
and
movsl
jecxz
push
mov
adc
ja
adc
dec
xor
jne
data16
je
fidivrl
lahf
dec
adc
mov
mov
popf
xchg
std
test
aas
je
subps
aam
pop
mov
iret
mov
cmc
test
into
sti
cmc
jno
test
pop
sbb
pop
cmpsl
outsb
dec
stc
sahf
ljmp
dec
sub
addl
and
xor
enter
or
lahf
in
in
adc
jbe
mov
sub
dec
adc
adc
shrl
xchg
out
add
dec
cmp
jge
sub
cltd
mov
jge
les
cltd
jg
shlb
out
inc
sbb
std
inc
lret
pop
adc
dec
in
dec
arpl
or
jg
sub
das
mov
mov
jp
dec
or
in
sub
test
or
push
inc
std
ficomps
aad
sub
leave
cs
mov
icebp
mov
jmp
add
or
jne
out
into
inc
cmp
mov
pop
fsubrl
lods
fsubr
ja,pn
xor
jl
jb
pop
loop
mov
inc
push
icebp
pop
aaa
mov
add
jl
andl
lods
aad
sub
aam
aas
adc
jecxz
adc
push
clc
lds
cmp
pop
mov
push
pop
repz
mov
pop
adc
cmp
fwait
push
xchg
or
nop
or
pop
fmul
scas
cmp
je
mov
jns
loope
rcrl
adc
dec
mov
push
loope
popa
adc
xchg
ja
push
or
xor
pop
push
or
cld
stc
ljmp
adc
mov
sbbb
push
add
xchg
xor
add
and
into
xchg
leave
les
mull
in
or
into
jp
xchg
mov
and
in
sbb
popf
sbb
inc
adc
add
ss
shlb
add
adc
lock
mov
dec
dec
pusha
and
push
loop
incb
shlb
xchg
pop
ret
call
subb
adc
pop
loopne
push
xchg
sarb
jp
sub
outsl
ljmp
nop
loope
add
jl
test
popa
push
dec
sbb
mov
push
and
inc
cmp
dec
orl
adc
fcompl
std
in
jno
sub
ret
jmp
jg
xchg
push
jnp
xor
xlat
or
out
sbb
jo
or
jecxz
push
fsubrp
add
xchg
pop
jb
dec
sbb
roll
xchg
fsubrs
cmpsl
push
cmc
dec
push
ja
mov
repz
xchg
fwait
scas
xchg
scas
push
ret
and
in
movl
leave
mov
push
mov
outsl
pop
lret
scas
imul
cmp
pop
movsb
jno
sub
push
cld
in
mov
sbb
push
pusha
pop
aam
jmp
aam
rcrl
iret
dec
jne
pop
adc
jo
les
int
mov
cli
sbb
cmp
iret
iret
icebp
mov
jnp
lock
xchg
inc
ret
mov
jns
xchg
movsl
shrb
adc
sti
pop
in
sbb
cmp
scas
dec
jecxz
ret
mov
sbb
adc
in
pusha
mov
pop
mov
mov
sub
jb
jns
outsl
scas
push
outsl
pusha
test
push
cmp
ficoml
cmp
xchg
int
pop
scas
test
and
mov
fadds
pop
div
pop
sahf
je
es
mov
sahf
lds
sub
sub
rcl
adc
and
adc
pop
xchg
ljmp
push
pushf
sbbb
ljmp
mov
sbb
dec
lods
insb
fbstp
fidivs
std
out
sbb
push
nop
repz
sub
fdivrl
adc
inc
imul
mov
dec
ja
jmp
push
lret
lcall
imulb
add
out
sub
or
xor
push
pop
push
push
lods
and
movsb
pop
push
mov
cltd
aas
jno
clc
les
sbb
shlb
mov
push
out
lret
inc
loopne
data16
cmp
cmp
mov
xchg
lret
mov
add
stos
int
test
shll
adcb
popf
pop
dec
or
mov
sbb
lahf
mov
mov
sbb
jno
push
dec
stos
xor
cmp
inc
fisubl
cmp
dec
jecxz
pusha
sub
test
cli
jle
das
jp
cmp
or
dec
push
hlt
dec
pop
cmp
and
loop
cmpsb
sahf
or
sbb
adc
shl
out
or
stc
push
repnz
adc
lea
lret
fsubrs
sub
inc
mov
mov
dec
cmp
xchg
mov
mov
push
xchg
xor
sub
and
ret
fidivrs
or
add
mov
and
and
icebp
test
adc
clc
or
fisttpl
mov
scas
hlt
stos
sbb
enter
and
hlt
push
fsubr
les
sub
and
mov
iret
in
fs
sbb
dec
pop
sbb
fisubs
mov
push
pop
ret
xor
addr16
mov
test
addb
imul
cmpsb
and
jne
pop
test
dec
mov
fwait
or
int
sbb
dec
inc
inc
sub
popf
cmp
mov
lea
sub
dec
or
and
sarl
add
aaa
xchg
sahf
neg
orl
insb
in
push
pop
fs
add
inc
mull
jp
jns
dec
adc
lea
incb
pop
arpl
lods
ja
cmp
inc
jb
xor
push
ret
lods
leave
shrb
push
adc
int3
add
add
fst
pushf
adc
mov
or
push
out
push
cld
pusha
notl
mov
mov
mov
stc
mov
sbb
push
mov
pop
push
out
jbe
mov
sbb
scas
out
lret
mov
stos
mov
cmp
lods
xchg
fnstcw
leave
repz
stc
push
xor
bound
push
aaa
push
inc
mov
sbb
addb
mov
sbb
cmpl
mov
sahf
or
mov
mov
idivb
out
aad
aad
aam
fistpl
les
mov
push
scas
ror
push
hlt
push
push
mov
and
xor
lock
icebp
cs
int3
leave
mov
cmp
jb
sbb
mov
adc
add
test
inc
iret
cmpsl
xchg
testb
and
sbb
dec
sub
sub
cs
mov
pop
pop
or
push
jp
jnp
sub
xchg
sbb
mov
jle
sbb
adc
inc
xor
add
or
or
or
or
bound
insb
scas
lods
frstor
test
adc
inc
imulb
cmp
sbb
inc
hlt
inc
fdivrl
mov
orb
ja
sbb
cmpsb
jne
jmp
cmp
xchg
lods
or
test
push
test
inc
scas
lret
sbb
mov
or
mov
idivb
dec
sub
je
jb
call
xor
clc
pop
int
jae
mov
mov
out
dec
shrl
outsl
test
mov
and
mov
pop
pop
sub
adc
cmpsb
sub
scas
pop
lods
push
and
mov
ror
xlat
pop
mov
add
mov
inc
ljmp
outsl
xchg
push
lahf
xor
and
in
adc
lcall
and
inc
mov
test
insl
ja
insl
xor
in
sub
dec
jns
adcb
testl
clc
andl
xchg
adc
mov
mov
in
xchg
fcoml
adc
clc
sbb
or
ja
pop
mov
je
hlt
outsl
outsl
adc
out
sub
movsb
pop
pop
add
push
jb
shl
xchg
ror
pop
xchg
faddp
pop
mov
in
sahf
pop
bound
xchg
lods
mov
inc
or
xchg
mov
pop
jne
dec
cmc
xor
cli
adc
xchg
lods
leave
fidivrl
adc
dec
mov
out
lods
lahf
stos
cmp
xchg
mov
jge
sbb
call
dec
pop
push
jge
jp
iret
test
pop
loope
ficoms
sub
pop
cmp
mov
int
jle
aam
add
in
push
cmp
imul
and
mov
and
jle
out
into
push
mov
imul
sub
ret
iret
enter
sbb
repnz
outsl
lahf
nop
jbe
test
xchg
mov
gs
stc
inc
out
rcrl
mov
xorb
insb
in
insb
test
or
shrl
call
or
dec
add
xor
push
inc
ja
xchg
insl
mov
sub
insl
push
xchg
jl
dec
xchg
sbb
aas
jnp
movsb
mov
fimuls
stos
pop
cmp
lret
jbe
and
pusha
aad
push
inc
gs
int
xchg
mov
pop
sub
lock
cli
mov
push
jne
test
fcmovnu
jbe
into
ret
test
lock
out
in
jle
call
mov
stc
xchg
lahf
outsl
mov
idiv
adc
cmp
adc
movsl
cmp
fsincos
mov
lock
push
les
jb
jno
dec
mov
pop
lds
mov
dec
add
fsts
sbb
rol
inc
mov
sub
sub
fsubrs
cmpsb
sahf
test
pusha
out
mov
jmp
mov
push
outsl
stc
dec
loope
adc
sti
test
mov
mov
insb
loopne
jp
sahf
sub
sub
mov
out
arpl
jg
call
enter
cmp
cmpsl
fistl
out
mov
jl
popf
or
imul
jb
pop
mov
push
add
mov
dec
stos
xchg
cmpsl
xchg
aaa
cld
jmp
push
data16
fdivl
pop
ss
jno
pushf
sbbb
add
lcall
jp
xchg
add
jnp
pushf
dec
jl
aam
repz
jne
xor
outsl
inc
mov
stos
bound
aaa
jno
sub
mov
and
clc
sub
cmpsl
dec
or
das
inc
adc
and
iret
mov
add
jne
dec
fdivrs
adc
push
in
mov
aad
add
sahf
call
jle
jb
and
sbb
aaa
inc
jo
aad
lock
flds
dec
jnp
popa
pop
jno
dec
cmp
add
mov
pop
int3
sti
mov
push
pushf
ss
mov
movsb
mov
es
pusha
int
in
pusha
dec
mov
add
xor
jbe
lahf
sub
pop
jmp
stc
shlb
mov
sbb
sbb
cmp
ficompl
jge
sub
cmp
inc
pop
sti
bnd
std
mov
aam
cmp
pop
notl
fdiv
lahf
fisttpll
cmp
test
repnz
or
mov
adc
push
dec
mov
cmp
sub
mov
and
jge
fcmovu
push
data16
mov
insb
cltd
dec
jmp
roll
mov
or
js
sahf
dec
leave
sahf
mov
dec
scas
icebp
and
repz
ficomps
out
xor
mov
cmpsl
out
mov
in
lods
inc
test
je
fsts
mov
inc
into
ret
scas
pop
xor
pop
outsb
divl
sahf
xchg
sub
dec
lods
xor
sbb
and
push
sub
aad
jmp
icebp
out
popa
cmp
je
scas
test
sub
dec
rcrl
lcall
shlb
xor
inc
in
rclb
out
in
or
mov
pushf
repnz
icebp
jae
negb
push
mov
popf
xor
rclb
add
iret
jmp
cmp
cmc
js
movsl
add
test
sub
fdiv
dec
dec
jl
adc
pusha
fldcw
loope
cmpsl
add
adc
inc
repz
inc
push
and
out
lea
imul
pop
fstps
rorb
ffreep
jge
add
fdivl
mov
test
lahf
xor
push
jbe
or
xor
lahf
push
mov
sub
dec
push
adc
pop
out
in
das
xchg
scas
sahf
cmp
pop
inc
repnz
call
pop
divl
cltd
insl
xchg
sbb
jge
push
jno
and
cmc
cmpsb
and
rorl
sbb
cmc
pop
es
subl
mov
jge
mov
pop
loope
dec
inc
xor
aas
mulb
in
lods
sub
mov
dec
add
cmp
enter
push
mov
shr
scas
push
jae
repz
test
leave
into
xchg
insl
in
push
and
scas
aas
mov
xor
jns
mov
or
jbe
sbb
ret
aam
push
mov
into
aad
daa
cltd
jecxz
jb
inc
test
outsb
mov
xorb
sub
loope
pop
test
out
cmp
stos
jl
mov
clc
adc
jl
pushf
jae
mov
mov
pop
mov
fcmovnbe
clc
mov
mov
cmp
add
add
cmpsl
sub
jle
jns
cmp
mov
popf
shr
push
pop
out
push
add
xorb
sub
add
adc
mov
ret
bound
xor
mov
cmp
sub
mov
xchg
mov
xlat
mov
out
daa
loop
std
sbb
sbb
das
pop
cmp
lret
xor
jle
fdivr
push
fstps
jne
adc
mov
fs
push
cli
das
jae
mov
cmp
lock
jb
xchg
adc
push
test
push
rclb
xor
adc
or
in
jp
add
xchg
and
gs
test
jo
stos
and
incb
outsl
ret
cld
cmp
mov
jae
aam
pop
test
gs
ret
ss
cmp
mov
cmpsl
jmp
jo
in
loopne
add
rcll
xchg
int
rorl
std
sub
push
in
loop
jecxz
lret
add
pop
mov
insl
das
mov
sbb
pop
imul
sub
je
popf
cld
stos
add
nop
push
xchg
mov
sub
cmpsl
mov
or
cmp
and
dec
addr16
sub
in
scas
push
xchg
adc
dec
mov
dec
inc
adcl
fnsave
mov
das
daa
sbb
sub
rcrl
mov
cmc
mov
xchg
ja
in
nop
add
out
adc
sbb
test
mov
ds
add
mov
pop
mov
aad
iret
je
js
test
mov
daa
sub
cmp
xor
push
mov
add
sbb
movsl
sti
mov
and
cmc
adc
incb
add
stos
inc
in
aaa
loop
in
mov
loope
xchg
incb
decb
jne
inc
sbb
cmpsb
bound
jo
inc
adc
popa
sub
hlt
je
arpl
push
ret
jo
mull
sub
xchg
int
mov
sub
sbb
add
aam
add
jne
in
jb
imul
fabs
fs
add
cs
std
insl
out
inc
fcompl
push
aaa
rcrl
aam
xchg
arpl
lods
dec
xchg
pop
popl
cld
sub
cmp
lods
in
fstl
and
lock
cli
data16
jb
test
fisttpl
out
and
jl
popa
or
loopne
cwtl
orb
sub
cmp
mov
pop
lahf
inc
cli
push
jg
cmp
dec
and
out
scas
mov
stos
dec
pop
scas
sub
rcrb
adc
and
jmp
bound
call
add
or
add
inc
xchg
lods
pusha
xorb
mov
sbb
jp
cwtl
cmp
sahf
sub
xchg
in
loopne
arpl
int
push
in
pop
lods
aaa
bound
pop
mov
ljmp
scas
imul
and
fiaddl
std
adcl
insl
jbe
add
and
xchg
pop
xor
in
iret
mov
jno
inc
push
les
stos
lret
and
fidivs
imul
sbb
roll
popf
push
in
adc
in
inc
or
shlb
fstl
sbb
leave
push
mov
stos
inc
lods
rol
clc
js
push
imul
xchg
inc
scas
stos
loop
jne
imul
aas
loope
xlat
and
push
sbbl
pop
pop
push
fdivl
cs
jmp
inc
cmp
dec
std
add
adc
cmp
imul
dec
fisttps
icebp
outsb
into
jl
lahf
sbb
in
mov
enter
in
test
stos
jp
push
popa
ds
jmp
into
clc
pop
mov
pop
cmc
push
cs
pop
jb
mov
mov
mov
icebp
ds
mov
fbld
lcall
lock
aad
xor
lods
stc
jae
mov
push
xchg
je
adc
inc
fs
xchg
ds
cmp
cli
enter
inc
popf
xchg
or
adc
mov
cli
or
push
jbe
hlt
mov
add
cmpsb
es
lcall
xor
push
icebp
sbb
call
sahf
xchg
xchg
icebp
mov
mov
adc
imul
xor
push
jg
pop
out
addr16
jp
cmp
sbb
in
and
inc
inc
and
lods
cmpl
adc
jno
or
inc
jge
stc
mov
and
mov
nop
repnz
inc
aad
popf
mov
push
sub
dec
aam
xchg
jne
sahf
adc
movsb
mov
outsl
std
outsl
nop
fucom
sub
andl
sbb
push
call
jl
cmp
clc
test
je
loopne
test
or
les
jbe
lret
push
jp
mov
setae
sub
fildll
push
in
cmp
movb
sub
sbb
icebp
iret
rcll
icebp
jo
xlat
ss
sbb
enter
inc
dec
cli
sub
xchg
lods
daa
pushf
imul
stc
lea
mov
dec
jl
sbb
cmpsb
xlat
loopne
cmp
cli
mov
cmp
jb
or
sbb
negl
adc
inc
xor
pop
or
roll
inc
jae
insl
pop
push
push
repz
pop
or
rol
js
cmpsl
pop
jb
inc
fimull
jg
mov
out
push
mov
ljmp
sbb
gs
xor
adc
mull
sbb
push
ja
nop
shl
lea
adc
repz
test
mov
loope
or
popa
mov
enter
mulb
pop
stos
jbe
mov
xchg
dec
xor
inc
xchg
vphadduwq
stc
or
js
pop
add
rorl
imul
repnz
jp
sub
test
sahf
ficoml
fwait
sar
fisubrl
daa
xor
jne
add
fsubs
xchg
shl
add
sub
pop
movsb
das
add
jge
xor
jp
hlt
fcmovnu
push
mov
mov
imul
pusha
xchg
pop
cmp
mov
mov
fldenv
pop
cs
inc
or
jmp
xchg
cmc
enter
pop
push
add
and
jns
cmpsl
push
add
jnp
pop
cmp
loope
fldlg2
addr16
sub
or
stos
mov
jns
test
jmp
xchg
jge
cmpl
cli
adc
cmpsl
movsl
xor
xor
pop
stos
nop
scas
and
mov
test
iret
add
mov
scas
jns
xor
sbb
rorl
sti
pop
jge
insb
filds
imul
push
fidivl
fstps
or
pop
ret
jns
dec
stos
lret
call
mov
pop
nop
ljmp
test
mov
outsb
addl
daa
and
or
cmp
mov
call
xchg
call
and
jb
pminsw
ss
mov
jmp
pop
and
stos
in
push
mov
xchg
testb
jle
das
jbe
std
mov
mov
aam
cmpsb
push
aas
outsb
xor
pop
add
mov
out
loope
mov
loop
outsb
std
or
sub
push
add
sub
sub
test
pop
mov
stos
pop
ljmp
das
or
mov
mov
stos
mov
cld
dec
or
lret
cld
lret
cmp
push
arpl
lods
sub
push
jnp
movsb
adc
lea
adc
pop
xchg
xchg
loop
je
faddp
push
sub
test
test
lea
push
imul
aas
sub
jns
inc
mov
add
aas
adc
mov
movsb
scas
ret
in
xchg
cwtl
in
pop
sub
movsl
jne
add
dec
mov
addr16
outsl
mov
idivb
mov
ljmp
jno
dec
jns
mov
negl
stos
mov
cmp
outsl
jne
xchg
stc
mov
and
decl
stos
cmp
inc
pop
ss
pop
dec
gs
test
in
add
mov
pop
cmp
inc
mov
jecxz
mov
xchg
loopne
sub
gs
dec
cmp
sbb
pop
add
xor
stos
xchg
sub
popf
cmc
repz
ss
outsb
mov
push
xlat
cwtl
shll
cwtl
into
jb
or
mov
jp
es
loop
pop
and
mov
ja
mov
popa
adc
aaa
in
dec
sbb
in
and
call
daa
mov
xchg
cmpsb
mov
xchg
lret
scas
and
push
scas
icebp
in
mov
cmp
cli
popa
xor
ret
sbb
push
rolb
pop
mov
std
das
sbb
insb
bound
sarb
xchg
lret
jmp
jg
in
cltd
jmp
add
fsubrs
xchg
mov
dec
jnp
sbb
loopne
dec
mov
arpl
inc
pushf
cmpb
pop
data16
in
fstps
stos
fcoml
lods
cs
cmp
xchg
sbb
mov
mov
jo
sar
mov
push
out
mov
lret
sbb
mov
add
int3
addr16
adc
into
jnp
popf
or
movsb
bound
pop
movsl
leave
mov
pushl
pop
stos
adc
adc
sbb
or
pop
outsl
dec
pusha
push
imul
add
jmp
in
in
popf
inc
inc
outsl
outsl
pop
xor
mov
xchg
mov
cs
shll
xchg
ds
xchg
lahf
push
iret
sbb
es
push
negb
jnp,pt
int3
inc
mov
frstor
nop
jecxz
je
repz
sti
movsl
mov
jnp
insl
xchg
outsb
or
and
je
jae
cmp
mov
test
pop
mull
les
enter
and
push
ret
pop
cltd
pop
test
imul
or
cli
js
push
cmp
rcrl
sub
popf
shlb
scas
pop
stos
repnz
mov
aad
mov
cmpb
stc
pushf
sub
add
out
push
mov
or
dec
int
dec
pop
or
pop
dec
cmp
push
in
fwait
adc
js
cld
fisttpl
push
aaa
sbb
test
mov
sbb
sti
fsub
mov
rcr
cwtl
inc
insb
adc
adc
subb
leave
jmp
xor
fs
lahf
sbb
cmp
mov
hlt
dec
xor
jmp
cmpsb
sbb
je
in
and
inc
cmpsb
add
adc
jne
fmull
test
xchg
into
hlt
xor
mov
jbe
stos
add
push
call
xorl
cmp
shll
mov
in
lea
fldt
dec
push
xadd
xchg
cwtl
dec
movb
mov
push
or
cmpsb
adc
shlb
jl
mov
or
cmovge
fdivr
pop
sti
lds
les
es
popa
xchg
in
aas
in
inc
loope
imulb
mov
divb
and
push
movsl
add
out
popl
pop
xor
pushf
xchg
xor
cld
cmp
pop
or
cli
dec
xor
clc
xorl
jp
xchg
stc
ja
lds
adcb
lds
sub
popa
cwtl
pop
push
xor
jo
fcomi
out
inc
ljmp
enter
mov
ja
lret
les
mov
mov
ds
testl
js
sbb
mov
aas
mul
mov
fisubs
mov
and
cmp
mov
pop
pop
test
mov
or
scas
mov
pop
imul
cmpsl
push
mov
cltd
adc
test
and
sbb
push
int3
into
push
test
repz
xor
lods
add
or
cmp
dec
pusha
mov
lds
sub
push
das
fdivs
mov
push
xchg
dec
and
popf
mov
leave
jbe
frstor
ja
lahf
ret
jo
pop
pop
push
stc
sbb
test
inc
fildl
outsl
sbbl
nop
out
jno
xor
call
push
push
cmp
pop
test
enter
xor
frstors
jle
cld
movsb
cmp
inc
adc
shrb
mov
test
bound
and
jo
inc
mov
pop
rcrb
dec
pop
lret
jo
mov
std
mov
inc
imul
cmp
test
jae
cs
lock
leave
enter
and
popf
mov
lods
stos
push
stc
xchg
int
mov
or
cmp
push
sbb
add
xlat
inc
add
popa
xor
scas
ret
ljmp
dec
ljmp
mov
pop
mov
andl
or
dec
arpl
loope
stos
loopew
inc
mov
push
inc
push
insb
shll
dec
cmc
pop
lock
loopne
nop
cmp
mov
daa
sub
dec
popf
or
xchg
xchg
repnz
and
stc
stos
cld
add
jle
rolb
adc
add
in
mov
loope
push
out
addr16
popf
xchg
dec
jne
into
ret
inc
shr
es
xchg
sub
mov
test
or
and
inc
repnz
inc
mov
sub
jnp
sub
hlt
xchg
mov
mov
popf
pop
dec
fldl
faddl
cmp
or
jge
add
jbe
push
xchg
test
stos
jb
pusha
cmp
inc
nop
xor
fldt
mov
out
mov
jmp
or
add
nop
lods
mov
xor
xor
pop
xchg
es
xchg
in
dec
sub
cld
or
adc
xor
mov
mov
loop
jecxz
push
sar
dec
sbb
loop
addb
push
mov
cld
pop
cli
mov
xor
mov
adc
mov
sbb
lret
and
in
xchg
dec
cltd
outsb
inc
push
adc
lret
cmp
add
test
mov
push
outsl
hlt
inc
inc
mov
out
dec
or
and
dec
fwait
jne
ljmp
jo
sub
das
in
pop
sub
sub
and
fcmovnb
loopne
xchg
mov
pop
test
mov
out
sub
xchg
nop
or
out
shrl
xchg
aas
fs
mov
sarl
dec
push
das
insl
out
mov
adc
lahf
sub
into
aam
xor
popl
lds
add
jno
mov
add
xchg
jns
cmc
in
jg
jg
add
and
data16
jbe
sub
lret
or
jnp
adc
jae
sbb
mov
sarb
shlb
pop
outsl
pop
mov
repnz
daa
push
pusha
fistpl
call
in
rcrl
cltd
cmpsb
pop
lahf
mov
sbb
pop
scas
stos
xor
mov
push
aas
add
lds
push
cmpsl
insl
inc
dec
push
cwtl
sub
adc
les
inc
lret
add
int3
fimuls
mov
push
jo
mov
cld
int3
mov
and
fwait
icebp
inc
adc
cmpsb
scas
scas
insb
and
ljmp
jle
mov
sub
or
adc
orl
mov
mov
mov
mov
movsl
pop
jns
xor
outsl
ss
loop
jmp
ret
mov
push
fwait
inc
js
adc
xchg
cmp
inc
ja
push
mov
icebp
add
xchg
dec
out
cmp
mov
inc
mov
push
cmp
lock
jecxz
bnd
insb
push
aaa
sub
incl
mov
jnp
aas
repz
sbb
jne
xchg
or
sbb
stc
pop
mov
sub
rcr
shl
stos
sar
inc
dec
sahf
add
clc
shll
es
sti
insl
adcl
jg
outsb
cmp
popa
sub
aas
push
scas
ds
std
xor
adc
pushf
jecxz
or
leave
pop
and
loop
dec
inc
fcmove
jno
int3
int3
xchg
jbe
adc
sbb
enter
push
xchg
decl
adc
xchg
or
enter
inc
negl
adc
pop
jg
das
sahf
pop
push
jmp
adc
mov
jns
inc
cmp
popa
jns
rcrb
addr16
ficomps
in
xchg
adc
push
mov
xchg
xor
mov
das
pop
mov
loopne
mov
cmc
loop
mov
stos
out
lods
test
cmp
out
adc
iret
dec
lods
sub
or
sbb
sub
test
rcrl
xchg
push
mov
and
inc
outsl
arpl
mov
inc
jl
adc
lcall
lock
sti
mov
fiadds
adc
imul
js
jg
pop
js
arpl
mov
mov
inc
je
addr16
nop
lods
cmpsl
mov
dec
popa
or
inc
adc
shlb
pop
push
repz
iret
and
mov
dec
mov
and
hlt
leave
dec
lcall
dec
cmpsl
subb
adc
sbb
inc
pop
dec
mov
jae
jns
sbb
test
or
and
sub
add
xchg
inc
ss
insb
mov
inc
cmpsl
stos
movsb
inc
mov
mov
aaa
das
addr16
subb
fadds
jbe
mov
mov
inc
ret
stos
jo
out
inc
xor
lret
js
mov
jg
xlat
jne
fs
push
sbb
push
pop
xchg
insb
out
dec
leave
je
test
jecxz
cmp
jno
mov
cltd
dec
fstl
and
xchg
outsb
push
xchg
sub
data16
div
pop
and
push
xchg
adc
xor
xor
xchg
hlt
sub
sti
mov
jmp
jl
in
push
xor
aaa
imul
repz
dec
cli
repnz
iret
or
ret
jnp
mov
mov
mov
add
jmp
dec
dec
and
rol
mov
je
nop
inc
ljmp
jg
pop
pop
outsb
repz
or
mov
mull
fwait
xor
cmc
mov
adc
sub
inc
out
test
out
push
loop
cmpsb
or
cli
add
out
call
fxtract
inc
and
add
mov
insb
inc
dec
jle,pt
shlb
std
stos
shll
popa
fidivrs
adc
and
daa
pusha
xchg
push
aam
and
jp
leave
xchg
mov
pop
add
pop
test
xor
aaa
adc
sub
andl
lea
andl
mov
and
repz
repz
mov
sub
ret
sub
sbb
mov
cmp
mov
pop
leave
pop
leave
jae
cmp
adc
xor
xchg
sub
or
ficompl
adc
jne
pop
clc
xorl
popa
sbb
ja
std
int
lods
sub
lret
imul
faddl
cmp
icebp
je
mov
mov
dec
add
xchg
pop
in
pop
sub
mov
notb
xchg
fimull
mov
or
add
xchg
dec
jl
aas
jecxz
hlt
sti
inc
clc
aas
mov
sub
lahf
scas
jle
push
mov
cld
out
add
mov
fiadds
fidivl
xchg
xchg
adc
je
insb
dec
sbb
xchg
jge
ja
loope
push
std
cmpsb
push
int3
or
clc
jecxz
rcrb
adc
xor
andl
pop
xchg
mov
jp
aaa
fcmovbe
cmp
lea
and
inc
rolb
xlat
cmp
jnp
mov
outsb
mov
insb
lods
xor
mov
out
xor
and
mov
test
mov
loop
repz
addr16
xor
push
mov
lret
lods
dec
jbe
imul
addr16
inc
sarl
inc
jae
cwtl
cmp
mov
lcall
loopne
add
addr16
mov
aaa
dec
push
icebp
or
xchg
fcmovnbe
test
or
mov
or
mov
jge
xchg
in
pop
inc
cmp
setne
mov
ds
xor
mov
out
rcll
inc
xchg
jp
push
jnp
lcall
cmpsb
add
bound
pop
incb
fmul
in
iret
cli
loope
xor
mov
jno
jp
pop
push
sub
xchg
xor
cmp
adc
dec
cmp
out
in
aad
add
pop
repnz
jmp
mov
push
xor
jns
hlt
adc
cmp
cmpl
xchg
jae
loope
arpl
sti
push
sub
xchg
out
pop
mov
iret
lock
andb
sets
push
adc
mov
add
ljmp
cmp
clc
or
cmp
cwtl
into
sbbb
cmp
aam
stc
aad
pop
jecxz
shlb
push
jmp
or
mov
push
cwtl
aaa
hlt
jae
mov
dec
aas
mov
andb
aad
jle
pusha
pop
xchg
inc
imul
jl
loopne
mov
das
pushf
ret
sbb
xor
inc
and
lcall
pusha
sahf
mov
in
or
push
push
testl
call
add
xchg
jl
mov
sbb
addr16
lahf
movsb
jmp
push
xchg
outsl
fdivr
add
and
inc
stos
push
aam
cmpsl
xor
fisubrs
add
jnp
push
out
push
ficoms
xchg
xor
jecxz
testb
lahf
outsb
repnz
movq
dec
and
or
mov
movsl
jne
popl
dec
mov
scas
adc
mov
sbb
jp
cmp
xchg
lret
xor
inc
out
and
push
test
popf
nop
outsb
addr16
mov
push
mov
aad
enter
punpckhbw
movsl
out
lods
pop
dec
push
loopne
cmp
xor
gs
aam
mov
jge
mov
fwait
jmp
inc
jp
cli
daa
mov
add
sub
movsb
push
int3
inc
push
jno
add
mov
inc
mov
lahf
pushf
icebp
and
and
cmc
xor
orb
add
popaw
cwtl
push
pop
inc
add
out
stc
fnstcw
fs
shll
dec
add
ljmp
or
insb
or
dec
scas
mov
in
mov
stc
pop
in
data16
and
lods
ret
pop
movb
imul
jge
adc
jle
fadds
jae
sbb
cmp
jmp
xor
mov
sti
jns
cmp
rcll
or
push
and
outsb
push
in
int
xlat
in
ss
jg
mov
imul
daa
lcall
addb
pusha
dec
mov
pop
lods
out
jns
jae
hlt
jle
adc
inc
jae
fs
das
lea
sbbb
xor
sub
mov
add
cmp
dec
sbb
mov
das
pusha
jge
sahf
mov
mov
pop
fidivl
outsb
outsl
cmpb
inc
inc
lahf
leave
std
sbb
test
lods
gs
lods
sti
xchg
lcall
push
pop
mov
jae
enter
bound
mov
mov
cli
in
aas
out
aad
adc
cmc
fs
or
flds
negl
cwtl
rcr
stos
cmpsb
ret
shlb
xchg
andl
dec
mov
ja
loope
outsl
mov
nop
in
adc
add
sbbb
lcall
jnp
pusha
push
scas
mov
popa
in
test
push
or
pop
aam
lret
or
subb
bound
subl
enter
cmp
mov
cmp
jns
push
pop
cmc
test
cli
aad
adc
or
mov
push
push
cltd
mov
sub
mov
ret
adc
xchg
adc
lods
lods
ret
les
aam
cmp
popf
jmp
jns
loop
cmc
cli
mov
pop
jmp
cld
mov
cmp
add
mov
addr16
mov
mov
push
adc
pop
sbb
lds
mov
and
inc
fs
sbb
xor
das
nop
cmp
gs
pushf
or
movsl
or
nop
push
ret
sub
inc
xchg
inc
mov
movsl
mov
fwait
ja
daa
cmc
adc
mov
add
je
jle
and
mov
cmp
xchg
adc
sbb
xor
push
jle
mov
and
fldl
rolb
jo
mov
lods
jp
or
mov
xchg
cmp
lds
or
jg
and
test
and
dec
pop
cmp
outsl
push
je
xlat
movsb
ljmp
sbb
pop
in
les
cli
mov
in
xchg
stos
xchg
mov
xor
sbb
push
add
fiadds
add
pushf
lods
mov
jo
sbb
into
add
ret
xchg
cmpsl
mov
addl
inc
add
addr16
mov
iret
rcrb
or
jb
xchg
cld
mov
inc
pusha
add
cltd
arpl
fmuls
and
inc
outsb
jecxz
add
xchg
mov
pop
push
xchg
scas
repnz
sbb
and
add
mov
scas
add
repz
loope
cmp
mov
dec
ror
adcb
std
xor
sbb
adc
dec
imulb
xchg
xorl
xchg
jb
lahf
and
subl
xchg
into
xchg
repnz
ffree
sub
test
xor
or
stc
or
sbb
ret
nop
xor
sbb
hlt
push
orl
loopne
loopne
and
andb
adc
cmp
xchg
fidivl
cld
mov
mov
mov
pop
std
adc
xor
mov
inc
mov
cmp
lods
sub
mov
adcb
lret
adc
dec
loope
and
or
push
mov
cmp
insb
scas
cmp
addr16
popf
inc
push
push
sbb
dec
and
stos
cli
pop
into
push
fistl
mov
push
enter
cmp
push
in
daa
dec
in
xchg
clc
cmp
mov
divl
adc
mov
sarl
fnstsw
mov
dec
int3
movsb
or
ljmp
mov
cmpsl
dec
push
sahf
icebp
fidivl
adc
push
mov
lea
inc
push
inc
sarb
xor
pop
fsubrl
push
mov
test
xor
data16
insl
daa
xchg
xchg
mov
sub
mov
test
sub
test
hlt
les
cld
loopne
jns
dec
insl
mov
mov
imul
push
stos
mov
aad
xor
jnp
repz
mov
ljmp
in
jmp
shlb
sbb
enter
adc
jns
push
dec
addr16
sub
cltd
cmp
lcall
pop
aam
hlt
cmp
jg
lock
stos
sbb
jle
jg
add
into
imul
lahf
push
xorb
mov
in
sub
jmp
cmpl
dec
mov
rcr
dec
cmp
dec
stos
jecxz
mov
and
in
in
and
jbe
xlat
add
mov
push
jmp
push
enter
mov
and
cmp
dec
in
sub
orl
sub
dec
pop
lea
mov
adc
test
jmp
mov
mov
mov
inc
sub
pop
popf
test
les
mov
imul
arpl
cmp
mov
and
lods
jne
mov
clc
adc
sub
insl
push
or
or
push
lcall
inc
pop
sbb
sub
lods
lret
sarb
pushf
and
dec
lock
aaa
call
orb
mov
stc
or
mov
loope
cmpsb
dec
mov
push
ljmp
pop
nop
sbbl
add
pop
mov
fidivs
cmp
out
stc
mov
mov
rorb
and
jg
push
lretw
cmp
jmp
ficomps
shll
jns
enter
notb
lret
aam
popa
lret
lcall
jl
into
push
ja
mov
sub
adc
push
xchg
xor
fstl
dec
dec
xlat
mov
ja
in
ss
mov
adc
dec
sbb
imul
xor
in
decl
adc
xor
int
lds
das
push
out
insl
inc
xchg
ret
mov
pop
sbb
sbb
adc
cmpsb
jg
pop
push
xor
push
notl
mov
out
mov
inc
push
or
pop
mov
roll
push
ret
outsb
push
jge
or
sbb
sub
dec
adc
and
cwtl
stc
sbb
or
subb
into
xor
hlt
xchg
jmp
adc
decb
xor
fldl2e
mov
mov
std
movsl
add
sbb
and
fwait
xchg
mov
aad
xchg
cmpsl
jmp
xlat
xor
mov
sub
adc
dec
add
and
sahf
or
mov
adc
lods
and
out
pusha
adc
movswl
cmpsb
shrb
adc
imul
jb
mov
mov
xchg
jmp
push
movsl
lods
jne
ss
loope
nop
inc
incb
mov
cwtl
lea
cli
imul
cmp
sbb
sarb
and
sbb
arpl
sub
lock
leave
cmp
add
pop
or
push
add
inc
add
nop
push
pop
xor
call
or
shlb
push
pop
and
pop
jnp
in
out
or
repnz
popf
mov
test
sar
push
push
rolb
das
pop
scas
in
les
aas
sahf
scas
mov
mov
sarb
or
adc
cmp
cmc
xor
cmp
jo
xchg
mov
pop
dec
in
test
fwait
pop
into
filds
in
inc
sub
ja
stc
inc
sti
das
cmpb
jle
add
in
rclb
push
inc
leave
pop
fcomps
cmp
fwait
mov
jns
and
fldenv
mov
div
loope
hlt
jb
pusha
in
inc
fcomi
sbb
inc
lds
in
adc
cmp
mov
iret
mov
fsts
push
pusha
and
inc
jb
sub
lahf
add
rclb
mov
add
or
popf
dec
aam
mov
arpl
ljmp
dec
jg
push
add
sahf
and
mov
and
add
adc
jns
jle
xchg
rcl
nop
mov
jmp
pop
push
xor
cmp
jns
mov
sbb
adc
adc
addb
scas
add
test
arpl
adc
push
std
cmp
imul
inc
xchg
sar
lds
sub
repnz
fdivrl
fwait
test
test
mov
adc
into
sub
xor
lea
addr16
ds
ljmp
sbb
in
jbe
jle
addr16
negb
push
sti
popf
jno
arpl
cmp
pop
xor
dec
lods
add
aas
leave
add
insl
jns
mov
pop
stc
and
xor
aas
pop
cmp
leave
inc
adc
jg
jns
outsw
dec
cmp
push
pop
mov
ret
xchg
je
lgs
fldenv
cltd
testb
dec
inc
addb
or
sbb
sub
xor
xchg
dec
rorb
ds
outsb
lahf
jecxz
cltd
fcompl
or
mov
add
aas
dec
inc
dec
imul
dec
add
pop
xor
or
ljmp
sbb
push
xchg
xor
push
pop
cmpsb
mov
lds
aaa
sbb
add
pop
scas
sbb
push
pop
jae
int
lcall
in
pop
jp,pt
into
dec
imul
cmp
push
int3
cmp
push
jnp
nop
jnp
xor
fisubrs
js
adc
xor
sbb
xor
inc
xlat
fnstenv
ret
or
xor
mov
in
bound
xlat
test
mov
mov
adc
mov
repz
cwtl
xchg
fdivl
les
testl
push
aas
enter
add
repnz
in
outsb
push
ljmp
lret
pop
bound
ljmp
stos
mov
aam
adc
sub
xchg
addr16
pop
sbb
out
mov
dec
es
or
bound
push
js
loope
daa
out
imul
sub
xchg
rolb
pop
enter
cmp
cmp
push
lea
cli
gs
mov
mov
pop
or
std
cltd
and
inc
mov
js
adc
mov
mov
repz
out
sbb
push
cmp
inc
cwtl
xchg
outsl
dec
popa
jae
mov
add
idivl
cmp
or
xor
popa
mov
cmp
jge
les
dec
ljmp
adc
test
xchg
pop
jb
clc
mov
jp
mov
mov
popf
lock
mov
xor
je
or
pop
lock
sub
scas
sarl
sub
xor
cmp
imul
jp
cwtl
data16
adcb
ret
jl
imul
inc
mov
or
lods
lcall
sbb
push
dec
ss
ljmp
jle
cli
pop
daa
mov
mov
loope
mov
xor
xchg
xor
daa
mov
mov
mov
mov
jl
cmp
std
jmp
out
jecxz
xor
ret
push
dec
jb
icebp
popf
cmc
out
addps
sarb
xchg
dec
and
jmp
and
sarl
dec
push
sub
and
sub
push
push
lds
add
inc
movsb
jno
adc
movsb
test
sbb
ds
in
test
cltd
xor
out
jnp
je
cmp
fadds
out
add
lds
push
xor
mov
scas
dec
test
xor
xchg
loop
ret
mov
dec
enter
sbb
pop
test
push
push
mov
subb
mov
jp
stos
mov
xchg
adc
cmp
mov
ret
cwtl
mov
jp
test
sub
xchg
pop
inc
pop
loope
andl
ljmp
cmp
xor
subb
adc
cmpl
jns
or
mov
sahf
and
push
movsl
jno
out
dec
jg
sub
add
mov
adc
rorb
cltd
mov
cltd
mov
and
outsl
pop
sar
inc
jne
testl
into
lock
subb
push
xorb
jg
or
xor
rcr
pop
scas
jl
jp
jecxz
ljmp
jno
rcrb
jmp
mov
iret
cmp
insb
fs
mov
adcl
mov
inc
and
add
clc
mov
jecxz
jae
cmp
insl
fxch
scas
pop
xchg
jl
cmp
inc
sbb
fbld
lods
icebp
bound
ss
jb
cmp
fcompl
cld
in
mov
add
inc
xor
sbb
or
mov
push
mov
ds
add
fmuls
sub
popf
out
cltd
leave
lock
xor
push
mov
mov
dec
cmp
cmp
push
sub
mov
inc
push
xor
cmp
movsl
ret
iret
sarb
xor
mov
daa
and
out
es
mov
es
call
sbb
cmp
imull
out
xor
adc
xor
out
mov
imul
cmp
fidivrs
jb
arpl
rorl
testb
shl
sbbl
push
mov
push
and
imul
inc
or
mov
jne
add
lock
mov
fwait
add
test
push
pop
repnz
push
mov
mov
jle
ret
sub
lods
hlt
mov
jge
dec
mov
inc
mov
movsb
pop
inc
adc
pop
leave
mov
in
push
bnd
pop
rorl
cltd
jbe
shrb
jb
sub
popa
xchg
cmp
or
cmp
jge
scas
ret
leave
jns
dec
sub
add
aam
fwait
xchg
dec
les
cld
xchg
dec
mov
gs
ror
dec
je
mov
or
xor
mov
test
mov
fsts
insb
mov
out
or
fdivp
repz
shl
xchg
sbb
loopne
imul
sub
je
test
dec
mov
xchg
adc
and
dec
aas
xchg
cmpsb
ret
lret
daa
out
jge
fistpl
cmp
insl
aad
pop
mov
sbb
outsl
jecxz
pop
ret
jle
scas
lahf
and
aad
clc
xchg
xor
adc
push
xchg
mov
sbb
lcall
neg
jnp
and
test
hlt
cmp
push
or
cmp
xchg
imul
jno
js
inc
nop
movsb
cmp
out
xchg
ret
sub
inc
stos
pusha
stos
mov
nop
pop
jo
mov
aaa
pop
jns
loop
ret
cmpb
enter
dec
icebp
cli
fmuls
xchg
and
loop
xor
jecxz
fcompl
cmp
testb
outsb
sub
lods
repz
inc
adc
adc
ret
lock
xor
shrl
or
das
sub
rorb
jnp
or
in
std
adc
shrb
fcmove
popf
lcall
addr16
ret
dec
inc
add
in
jle
sbb
das
sub
add
xchg
int
mov
push
cmp
mov
xor
fbld
inc
jb
lret
call
je
ljmp
add
lret
xchg
imul
cwtl
mov
pop
cmp
out
or
cld
lods
sbbb
and
jmp
loopne
pop
lock
pop
jg
xor
leave
mov
fdivs
push
mov
adc
sub
lock
in
pop
xchg
cli
push
or
or
xorb
rorb
clc
dec
stos
pop
shr
sbb
adc
sbbl
or
es
xor
popa
dec
dec
ret
cld
dec
jmp
xchg
xchg
fimuls
std
nop
fwait
inc
mov
gs
adc
and
int3
icebp
push
and
inc
mov
sahf
rcll
inc
jmp
ljmp
lock
add
push
sub
push
or
xchg
mov
sub
mov
pop
in
sbbl
js
shl
fsubrp
aam
sbbl
insb
in
pushl
lock
add
in
ss
rolb
push
addr16
xor
jbe
add
cmp
loopne
and
push
push
ljmp
ds
or
lds
mov
xchg
lahf
in
in
mov
push
sub
repnz
jo
popa
mov
mov
test
mov
jge
cmpb
jns
clc
js
ja
pop
vcomisd
mov
adc
or
movsl
data16
shlb
in
mov
in
sub
jo
loopne
jecxz
jo
mov
je
pop
mulb
xchg
ja
mov
ss
pop
add
and
sub
xchg
mov
leave
aad
lret
cli
sbb
shlb
lret
lods
aad
cmpsl
pushf
hlt
pop
xchg
sahf
adc
inc
sahf
xor
lods
pop
jmp
xor
mov
enter
inc
pop
je
sbb
in
adc
sbb
mov
test
sub
jmp
cmp
imul
outsl
inc
mov
lcall
dec
inc
adc
int3
pop
hlt
stos
ljmp
pop
mov
jb
das
jecxz
addl
ljmp
enter
icebp
push
shrl
fcmovb
mov
jle
es
adcl
xor
xchg
ds
push
or
jecxz
addl
jmp
icebp
adc
dec
dec
ja
ret
fadds
out
push
sub
mov
push
jp
push
idiv
push
xor
lea
aad
and
adc
fwait
jl
cmp
mov
mov
daa
mov
lea
leave
or
add
sbb
lods
mov
out
leave
add
paddb
scas
aaa
push
xlat
and
sahf
xchg
xor
lahf
sbb
data16
into
lahf
adc
inc
mov
fisubrl
pop
jo
rcr
pop
js
loope
push
pop
adc
cmp
dec
rcl
std
jne
cwtl
pop
dec
xchg
cwtl
ret
rolb
stos
leave
mov
shll
stos
ljmp
ficoms
sub
dec
sub
nop
mov
or
mov
in
push
aaa
xchg
mov
sbb
inc
sub
adc
jnp
gs
fistl
add
jp
sbb
out
mov
sti
orb
mov
cmp
call
test
int
sub
mov
sbb
lods
sti
jns
sub
les
dec
daa
stos
sbb
mov
mov
ret
push
roll
add
jp
stc
inc
cmpsl
adcl
jbe
pop
add
daa
mov
and
outsb
ret
movsb
rorl
mov
push
test
inc
hlt
fdivl
xchg
scas
bound
lock
jae
in
subl
push
and
jns
and
pop
inc
aaa
leave
in
jecxz
mov
push
add
or
popa
sub
dec
lods
sbb
pop
imul
pop
mov
sub
adc
mov
int
lret
cltd
iret
sub
push
jle
push
inc
cld
gs
and
xchg
mov
dec
xor
ret
lods
mov
and
mov
ljmp
mov
cwtl
popf
outsb
adc
mov
ss
shrb
scas
jge
push
mov
movsl
mov
sti
sub
add
hlt
mov
jl
mov
dec
fdivl
fs
inc
and
sub
mov
push
and
mov
add
sub
movsb
push
pop
mov
cmpsb
call
push
test
fcomps
data16
outsl
outsb
enter
jbe
ftst
adc
add
pop
ss
pusha
mov
out
int3
dec
adc
in
adcb
jmp
mov
push
pusha
and
cmpsb
gs
jae
in
into
sti
insb
js,pt
push
test
cmp
and
outsl
call
mov
nop
mov
mull
mov
enter
popf
daa
pop
pop
push
nop
and
push
fs
mov
aaa
dec
fstpl
out
add
jno
pop
mov
add
pop
push
pop
je
nop
and
mov
stc
fdivrs
gs
cmpsb
cmpsb
insl
aad
jmp
or
movsl
addr16
fnsave
pop
cmpsl
gs
int3
sub
mov
in
out
pop
sbb
mov
mov
fists
jl
or
lea
lods
mov
fs
cmp
sub
int3
mov
cmp
dec
loop
mov
ljmp
mov
dec
iret
inc
ficomps
and
es
pop
add
lds
push
gs
mov
xchg
xchg
popa
mov
loope
mov
addr16
outsl
fldenv
sti
mov
pop
fs
fidivl
pop
xchg
scas
mov
or
sbb
stos
test
sub
xchg
cmp
mov
push
mov
xor
mov
adc
and
in
rorb
pop
repz
add
lahf
stc
xchg
mov
sub
xor
add
ds
sub
adc
loopne
mov
cld
mov
imul
cmp
pop
pop
lahf
lea
insl
fwait
inc
inc
je
inc
nop
mov
test
pop
gs
xor
mov
xlat
test
pop
jle
movsl
in
lea
inc
ret
mov
cmp
mov
addr16
and
inc
mov
repnz
fldt
xchg
inc
stos
loop
test
loopne
imul
inc
pop
popa
sub
arpl
loop
insl
aaa
movsl
into
aam
fldt
scas
and
and
lret
cli
flds
ret
push
dec
fisttpll
lret
in
hlt
fisubrs
cmp
cs
repz
or
push
pop
add
ret
xchg
mov
icebp
fidivrs
loope
out
test
insl
xor
sbb
adc
test
xor
push
aad
das
cmpsl
pop
xor
rcrb
mov
pop
inc
pop
aaa
and
movsl
cmp
dec
xor
mov
fs
fbld
cld
add
dec
mov
mov
mov
jne
mov
cmp
adc
xchg
adc
fucomp
push
adc
push
mov
and
push
xor
mov
dec
xchg
nop
inc
push
xor
shrb
or
in
cmp
lods
inc
xchg
jo
aaa
inc
cmp
aad
movsl
cwtl
dec
fstl
js
xchg
and
out
hlt
lret
scas
fwait
mov
pop
jns
cmp
pop
sub
push
in
sub
repnz
mov
pop
and
mov
cmc
add
dec
repnz
jb
cmp
nop
pop
cmp
das
or
cld
jmp
fdivl
leave
das
daa
test
dec
mov
pop
add
dec
out
lds
int3
add
testl
ja
std
dec
imul
inc
adc
sub
inc
and
int
jb
je
negl
ret
lds
mov
add
mov
push
mov
out
or
test
lret
int
adc
sbbb
scas
sarl
pop
sbb
sar
sub
ret
imul
dec
cltd
outsl
cld
mov
xchg
stc
loope
add
and
mov
loopne
scas
lret
cld
and
xor
inc
mov
jae
inc
in
mov
mov
xor
mov
in
or
adc
ret
adc
and
gs
enter
mov
adc
fs
cmp
pop
xchg
dec
mov
sub
inc
sub
test
rolb
scas
clc
push
dec
mov
mov
jmp
fsubs
xor
pop
dec
sbb
push
adc
int3
cmp
cltd
xorl
mov
sbb
shlb
xchg
push
cmpsb
cltd
mov
leave
push
inc
add
scas
dec
test
or
sub
stos
jg
add
push
and
sbb
in
pop
scas
dec
jnp
shlb
push
pop
push
xchg
popf
fimull
dec
push
sub
jecxz
dec
jo
xchg
out
jl
arpl
sub
cmp
inc
imul
mov
loope
lock
es
xchg
push
adc
insl
scas
cmp
dec
xchg
arpl
aad
sbb
je
out
push
xchg
dec
mov
testl
ds
mov
mov
ljmp
add
sarl
mov
cmp
rcr
jno
and
into
aad
jbe
divb
popa
and
mov
sbb
pop
sbb
pop
mov
and
add
mov
iret
mov
movsb
and
pop
mov
push
jns
fstps
xchg
cmp
jb
dec
fidivrl
jg,pn
ljmp
pop
out
and
or
fcoml
jge
inc
ja
xor
mov
dec
or
inc
dec
mov
mov
test
mov
xchg
aam
icebp
xlat
inc
mov
and
and
push
arpl
and
iret
outsb
pop
ret
push
repnz
dec
mov
cmp
push
mull
xor
and
adc
mov
sti
lret
int3
mov
push
sbb
test
xor
mov
notl
cmpsb
cs
xorl
add
push
fisubrs
sbb
fs
and
sub
daa
dec
es
mov
jmp
jne
pop
xlat
insl
pop
or
and
jmp
lds
dec
cmpsb
mov
push
lods
add
cmp
imul
jne
cli
sbb
pop
mov
shll
mov
loopne
cld
push
dec
adc
add
push
enter
in
mov
mov
insl
lods
stos
jle
adc
or
js
fs
shll
cli
dec
or
adcl
test
cmc
mov
xchg
repnz
mov
jb
pop
jns
lahf
lods
mov
cmp
shl
add
push
xchg
out
jae
scas
and
pop
jnp
sbb
lods
xor
test
int
push
fdivrl
mov
cmp
add
jae
xchg
mov
fdivr
push
and
je
jnp
mov
addr16
mov
stos
ss
popf
mov
push
inc
cmpsl
sub
xchg
jle
jp
shlb
cmp
sbb
push
out
or
fstps
push
mov
push
add
in
daa
mov
jl
lret
or
in
add
sub
pusha
out
loope
cmpsb
push
push
out
add
xchg
movsl
sbb
mov
dec
icebp
std
push
push
daa
call
cwtl
mov
mov
ror
xchg
fmuls
lock
nop
pop
jnp
fnstsw
ss
cli
mov
subl
dec
inc
inc
push
ret
icebp
or
addr16
icebp
dec
mov
dec
xor
adc
lcall
pusha
push
mov
hlt
insb
shll
pop
mov
jo
lret
push
mov
loope
ret
fidivrs
pop
mov
call
pop
popa
mov
aas
adc
mov
and
lods
sub
shlb
cmp
test
or
and
mov
pop
cmc
mov
xor
jl
stos
xchg
mov
sub
mul
add
mov
xor
lcall
inc
xchg
and
aas
subb
xor
rcrb
les
or
ficomps
test
adc
adc
popf
xor
scas
pop
mov
adc
and
lret
rclb
and
xchg
lret
std
mov
aam
mov
testl
aas
adc
mov
fcmovb
arpl
cmpsl
fisttps
ds
adcl
popf
les
outsl
mov
pop
xchg
loopne
arpl
call
push
jge
sbb
pop
mov
push
test
fxch
clc
xchg
add
std
lods
mov
adc
mov
fwait
and
inc
push
ljmp
incl
repnz
popfw
fadds
nop
gs
add
decb
and
xchg
scas
cmc
add
fwait
push
aas
sbb
xchg
push
mov
push
inc
cmc
ss
sub
nop
xchg
orl
ljmp
imul
inc
lock
int
std
enter
fcom
arpl
push
add
xchg
mov
ds
pop
cmp
mov
jl
sub
dec
mov
jge
cmp
mov
mov
js
push
and
mov
adc
add
daa
sub
lea
push
and
adc
or
mov
inc
inc
pop
cld
xor
clc
mov
adc
enter
push
ret
adc
rcrb
fdivrl
xchg
inc
push
daa
jne
dec
cli
aas
gs
out
es
jl
cs
test
mov
xorl
mov
sbb
add
dec
hlt
cmp
sahf
into
fadd
push
mov
fiadds
pop
add
xor
stc
push
xlat
fs
mov
ljmp
cmp
pop
imul
or
nop
cwtl
jne
sub
leave
fnsave
inc
int3
xorl
jge
inc
notl
insl
sbb
cmp
pop
xchg
loop
mov
xor
mov
push
jge
shlb
arpl
dec
cmpsl
xchg
sbb
mov
xchg
mov
lret
les
sub
andl
mov
push
repz
notl
pop
dec
pop
vcmpsd
inc
mov
sub
lods
inc
mov
xchg
jnp
cmpsb
sub
cmp
lods
sub
loop
cli
mov
dec
adc
and
sub
pop
movsl
iret
jbe
fmull
jg
cld
inc
out
ret
mov
icebp
cmp
sbb
ss
mov
fisubrs
daa
jmp
fsubr
jg
sub
scas
mov
mov
pop
fnstenv
cmp
clc
mov
std
int3
sbb
pop
push
cs
sbb
pusha
lock
lds
lock
fcoms
and
addb
jmp
lds
dec
fs
mov
lods
sbb
mov
jecxz
mov
stos
xlat
insl
lods
jmp
outsl
sti
out
and
sbb
add
xor
rcrl
cltd
shll
rolb
imul
nop
sarb
push
scas
shll
cmpsb
subl
icebp
pop
jecxz
idiv
scas
lret
sahf
je
push
lcall
test
das
inc
mov
ja
mov
fisttpll
movsl
iret
les
pop
movsb
and
xor
xchg
mov
fistpl
into
add
jb
cs
lahf
les
inc
inc
scas
cld
arpl
fwait
dec
jno
andb
ljmp
icebp
fwait
idivb
cmc
mov
cmp
push
scas
lahf
fisttpll
pop
cmp
ljmp
in
sahf
pop
idivb
stc
sbb
dec
mov
loope
addr16
dec
xor
movsb
or
inc
jge
xor
cwtl
outsb
jg
lret
mov
cltd
into
sbb
cmc
add
cmp
sbb
movsb
stos
pusha
xlat
cmp
jbe
sub
daa
jle
lret
mov
xchg
fcoms
imul
jg
mov
dec
arpl
movsb
loopne
and
inc
mov
and
cld
jne
aad
dec
inc
fs
andl
mov
xchg
mov
movb
mov
data16
cmc
clc
jo
xchg
ja
in
add
xor
lods
stos
cwtl
xchg
jno
jns
aam
ret
mov
or
das
push
pop
fstps
inc
mov
mov
stos
out
adc
mov
pop
mov
push
iret
mov
dec
bts
mov
addb
or
jmp
cmp
inc
test
lcall
js
out
mov
mov
negb
add
mov
out
pop
sub
inc
dec
jmp
xor
mov
call
or
ret
cld
mov
ja
add
inc
out
call
ss
inc
adc
iret
mov
cwtl
cmp
xchg
push
jo
pop
push
xorb
lods
sub
stos
xor
add
sbb
int3
adc
ret
daa
mov
inc
jl
dec
sbb
clc
call
cmpl
test
push
les
sub
insb
dec
sub
ljmp
inc
inc
mov
es
xchg
rolb
gs
sbb
rcll
jo
lahf
add
mov
pop
jmp
fldenv
loop
jp
xchg
pop
popl
jle,pn
popf
pop
in
xor
fwait
pop
push
push
mov
std
lahf
push
fisubl
push
xchg
lret
daa
xchg
cmp
jge
sub
sub
adc
jnp
andb
jnp
negl
decl
mov
jl
test
sbb
xchg
cltd
xor
movsl
jne
adc
insb
lret
inc
inc
movsb
hlt
push
nop
mov
mov
jbe
mov
mov
movsb
outsl
js
mov
push
int3
test
bound
js
test
or
lret
mov
cmc
add
sbb
rclb
sbb
pop
popf
mov
es
pop
ljmp
iret
ret
repnz
lock
add
test
pushf
enter
outsl
sbb
mov
aad
xor
ljmp
cwtl
xchg
sub
mov
cld
xor
sub
jno
jnp
and
test
pop
ficomps
rclb
or
inc
imul
adc
add
and
mov
lea
sbb
jl
leave
ja
pop
dec
cld
push
daa
inc
js
mov
dec
and
add
mov
mov
call
int3
cmpsb
je
push
xor
repnz
jmp
gs
addr16
popa
int3
js
jo
jl
mov
mov
hlt
leave
or
lods
mov
lock
and
das
insl
outsl
cmp
xor
test
and
std
push
xchg
push
push
xlat
ror
bound
push
add
sub
popa
bound
or
sbb
pop
or
enter
or
pop
jle
arpl
sti
pop
shll
aam
sbbl
adc
pop
pop
xchg
test
arpl
mov
lret
sbb
mov
or
adc
in
lret
xor
int
jne
arpl
sub
cmp
ret
arpl
cmp
dec
jmp
dec
scas
xchg
push
pop
mov
jb
stc
pop
jecxz
enter
xor
mov
push
or
xchg
and
cltd
cmpsb
int3
push
cmp
rolb
xorl
mov
mov
inc
arpl
hlt
sarl
mov
xchg
mov
add
insb
mov
lock
pop
pushf
data16
cmpsb
xchg
push
and
push
add
les
or
sarl
out
xchg
or
inc
std
xor
mov
repz
icebp
sbb
and
popf
ds
dec
out
push
pop
jno,pn
mov
aaa
out
idiv
fisubrs
mov
nop
popf
pop
and
popa
mov
cltd
jne
icebp
dec
popl
cmp
mov
test
xor
js
jo
in
mov
cld
data16
xchg
inc
sbbb
ds
out
xor
fsubs
movl
cltd
jmp
sbb
scas
add
xchg
mov
prefetchw
or
sub
push
lock
dec
inc
mov
pusha
repnz
in
push
push
incl
jnp
sub
pop
jno
in
pop
mov
stc
test
and
cmpsl
inc
jb
lret
or
dec
xchg
mov
loope
jbe
mov
loop
xor
mov
jnp
test
jge
mov
mov
dec
inc
dec
test
xor
les
sub
dec
jno
out
shlb
mov
shl
mov
sub
push
cld
push
in
test
and
mov
cltd
jge
xor
repnz
lds
bound
cmp
sahf
inc
in
mov
fsub
push
test
mov
loop
jmp
add
notl
inc
sbb
jnp
std
sub
dec
popa
mov
cmpsb
mov
adc
cmc
inc
cmp
xor
pop
jge
mov
adc
mov
push
movsb
xchg
xchg
lcall
mov
push
pop
sub
cmp
cmp
sbbl
mov
sti
ss
sub
sub
adc
data16
sub
push
and
add
mov
jg
addr16
inc
push
cmp
dec
stos
es
and
imul
jmp
lahf
popa
mov
sbb
adc
cmp
mov
jne
push
dec
add
jns
mov
sahf
sbb
iret
out
fsubrs
pop
orl
jo
nop
cmp
xchg
xchg
outsb
iret
mov
lods
sub
hlt
arpl
out
add
leave
in
sub
cmc
cli
fisubrs
fnsave
jg
stc
rclb
mov
pop
and
bound
or
push
cs
jg
fidivrs
aam
dec
mov
insb
scas
fmuls
jbe
and
mov
addl
sub
fs
add
adc
std
ljmp
mov
dec
add
sti
dec
add
loope
addr16
fsubrl
push
sbb
popf
pop
dec
mov
das
jbe
daa
test
sub
sbb
mov
cmp
mov
loop
and
mov
imull
stc
imul
xor
mov
mov
pop
dec
sbb
rclb
push
or
xchg
mov
xchg
pop
pop
shrb
mov
shll
outsl
cmp
fs
pop
jmp
outsb
popa
push
sub
cmp
pop
dec
push
lret
add
cwtl
sbb
shl
pop
dec
add
stos
xor
mov
rol
fcomi
xor
movsl
or
scas
adc
jmp
std
cli
inc
xchg
xchg
jl
jb
mov
test
adc
push
loop
jge
xchg
test
fcomps
ss
sub
in
icebp
jno
lret
dec
sbb
jg
xchg
lods
xor
popa
cwtl
inc
cmp
fstpl
arpl
mov
adc
cmp
xchg
adc
push
lods
lret
pop
aas
lcall
mov
shl
sbb
nop
in
cmp
pop
addr16
in
shufps
arpl
or
adc
push
icebp
jno
ret
movsb
pop
fistpl
or
dec
pop
daa
leave
lods
adc
fisubs
inc
test
pop
mov
mov
and
mov
xor
push
and
sub
sub
inc
call
xchg
sahf
popl
in
dec
cmp
aas
fnstcw
fcoms
xchg
movsl
inc
xor
sbb
mov
shll
fidivrl
jae
stc
pop
xchg
jecxz
out
call
xchg
aam
mov
mov
std
insl
movsb
cld
and
mov
ret
mov
dec
sub
cmc
test
aad
int
insb
xor
pop
add
push
xchg
in
xlat
inc
loope
mov
lock
cmpsb
jb
js
idivb
aam
lods
scas
loopne
inc
test
fldt
inc
lock
mov
ret
es
mov
out
fwait
push
insl
sahf
mov
pop
movsl
jg
xor
fistl
or
movsl
xchg
adc
cmp
inc
loopne
out
jmp
ss
xor
test
mov
fcoml
shlb
xor
xor
xchg
in
push
fsubrs
push
in
adc
sbb
iret
mov
pop
shll
xchg
cltd
lods
cmpsl
jno
mov
in
mov
test
pop
cmp
inc
mov
fbld
js
bound
lcall
xor
fsubs
fimuls
push
jg
pop
dec
fs
ljmp
mov
insb
add
in
or
sub
cltd
sti
or
pop
mov
fisubl
xor
mov
mov
loopne
jmp
imul
inc
in
gs
and
out
leave
add
rclb
inc
ret
outsb
sahf
mov
xchg
test
jp
out
inc
in
fdivrs
inc
in
dec
xchg
outsb
je
stos
mov
sbb
popa
inc
mov
pusha
adc
pushf
push
dec
mov
push
pop
into
icebp
cltd
fs
adc
imul
adc
or
jns
cmc
cmpsl
inc
sbb
je
pop
sbb
rorl
and
lea
mov
push
xor
dec
inc
inc
and
inc
nop
ss
push
mov
jg
aam
push
int3
cld
mov
das
dec
sarb
rcll
dec
rcrl
adc
mov
mov
hlt
pop
xor
pop
mov
dec
jnp
cli
and
sub
lcall
sbb
push
xor
in
add
test
mov
mov
test
repz
cli
pop
repnz
mov
movlps
mov
in
dec
or
orl
dec
adc
repnz
add
loope
loope
cmp
and
push
popa
add
scas
mov
fsubrl
ljmp
inc
rorb
subl
jecxz
push
mov
mov
test
aam
add
aaa
cs
inc
inc
inc
mov
push
cmp
fwait
mov
loopne
xor
and
test
lahf
and
out
insb
fsubl
adc
leave
aaa
out
adc
pushf
or
popa
mov
sbb
sub
pop
pop
push
stos
dec
push
sahf
in
pop
outsb
pop
push
cli
xchg
adc
pusha
mov
push
add
fidivrl
nop
cmp
xchg
iret
repnz
bound
pop
dec
push
mov
lahf
push
notl
cs
or
xlat
xchg
mov
std
out
inc
cld
fldt
aas
mov
or
cmp
push
add
daa
jb
movsl
dec
in
sub
mov
ljmp
mov
or
andb
add
xchg
out
xchg
repnz
pop
pop
into
insl
out
out
mov
dec
mov
xchg
aas
jb
pop
dec
xchg
pop
movsl
mov
cmp
mov
adc
cmp
jge
push
xor
sbb
xor
imul
dec
js
ret
adc
ficoms
xchg
mull
mov
inc
pop
test
xchg
ljmp
mov
icebp
adc
or
std
mov
xchg
jle
push
pop
fildll
cwtl
push
sub
es
cld
jg
jns
or
test
or
fnstcw
out
mov
addr16
push
testb
das
data16
mov
ljmp
pop
popa
pusha
push
pushf
inc
mov
movl
push
lret
xor
addr16
fsubrs
push
cmc
shrl
pop
xor
loopne
jg
cmp
movq
jno
adc
jg
mov
mov
hlt
dec
lods
or
dec
pop
mov
hlt
sbb
cmpsl
push
mov
jae
push
pushw
or
adc
cmp
loopne
pop
mov
dec
cmp
mov
mov
xor
xor
dec
xchg
jns
cmp
insl
out
ja
bound
xlat
outsl
jle
cwtl
and
jns
pusha
lods
mov
sbb
gs
cld
int3
mov
push
or
cmp
imul
xlat
out
ss
push
xchg
js
push
jnp
ljmp
sub
add
inc
adc
fnstsw
das
pop
mov
daa
enter
xchg
fs
test
and
pusha
jns
data16
xor
es
out
and
repnz
sbbb
enter
mov
jnp
ljmp
dec
loop
les
aaa
mov
std
nop
add
fwait
or
sub
mov
dec
les
jb
push
mov
shrb
push
jge
fimuls
sub
adc
push
test
pop
mov
or
orb
ja
mov
movsb
mov
inc
jmp
mov
dec
cmp
pop
mov
push
mov
dec
mov
jp
xchg
dec
ss
iret
std
clc
scas
out
enter
fldenv
arpl
cs
std
jmp
aad
mov
scas
lods
push
add
imul
pop
sbb
pop
fdivs
sbb
dec
sub
pop
mov
jne
loopne
push
shll
ret
aas
sbb
xor
push
ret
xor
popf
lods
fidivl
cmc
sub
mov
icebp
inc
xor
fs
add
and
dec
aad
pop
dec
fisttpl
add
lret
mov
push
out
dec
jp
lahf
popf
int
cld
cltd
dec
dec
sub
cmp
jno
test
add
lret
loopne
push
fxch
loop
into
mov
iret
ret
sbbb
rcl
dec
push
push
aas
inc
push
aaa
or
lret
movsb
movl
test
xchg
test
mov
dec
or
pushw
mov
ljmp
fildll
hlt
test
lret
inc
mov
dec
pushf
pop
std
xchg
xor
jbe
sbb
and
xchg
loop
loop
cmp
subl
jl
pushf
pop
mov
lahf
dec
inc
add
sbb
push
stc
pop
push
loope
push
int
dec
xor
add
pop
fisubs
cwtl
sub
jno
mov
in
add
mov
cmp
repnz
sub
lcall
movd
out
jb
push
stos
xor
gs
das
pushf
inc
inc
fistpl
cmpsl
loop
dec
sub
push
mov
xchg
dec
xchg
repz
jbe
sbb
and
shl
enter
xor
cmp
and
fsubrs
dec
addl
pop
test
pusha
add
fdivrl
cs
xlat
inc
aad
inc
sub
pushf
fisttps
add
pop
clc
aam
mov
data16
push
aaa
push
bound
xchg
stos
mov
lock
loop
sub
jle
pop
sti
jne
adc
pop
xlat
js
mov
sub
stc
sbb
adc
out
test
aaa
jb
mov
inc
push
mov
inc
pop
adc
dec
js
push
xor
jno
sti
mov
je
testb
cmp
dec
and
aam
mov
fwait
push
inc
lods
fiadds
test
movsb
jmp
js
scas
dec
push
cmpsl
in
jp
mov
dec
cld
mov
xchg
jecxz
mov
mov
jle
lds
int3
xchg
sti
cli
inc
adc
scas
mov
push
pop
xchg
mov
pop
push
repz
and
jg
icebp
mov
je
xchg
lret
repz
addr16
mov
mov
push
loopne
and
sub
ljmp
dec
pop
icebp
pop
fisubl
mov
and
pop
mov
ljmp
rolb
jg
out
cwtl
out
cmp
in
jge
pushf
movsb
out
stos
ja
cmp
inc
push
in
dec
mov
adc
cmpsb
mov
push
inc
jae
adc
jg
xchg
test
jg
or
cld
icebp
outsl
stc
inc
dec
cli
inc
std
mov
fs
pop
sbb
sub
push
push
pusha
pop
push
cltd
js
in
icebp
or
cli
lods
in
bound
je
dec
outsl
push
adc
dec
fsts
popa
push
out
jg
mov
mov
es
mov
lods
test
test
dec
iret
mov
cld
pop
dec
xchg
div
xchg
adcb
rcrl
add
jle
out
fs
pop
jmp
aas
push
shll
mov
jne
push
loope
adc
popl
inc
cmp
push
push
jae
push
xchg
and
cld
fdivr
mov
jge
or
xchg
lods
repnz
push
mov
adc
xor
shlb
loope
es
add
mov
xchg
scas
push
popl
hlt
adc
and
and
out
daa
loop
push
daa
jg
dec
xchg
mov
add
out
insl
les
inc
bound
shlb
ret
in
dec
pusha
decb
ret
mov
outsb
test
mov
inc
or
jecxz
or
push
dec
or
sbbb
and
cmp
sub
mov
movsl
pop
adc
jmp
pop
loop
fldt
mov
push
adcb
mov
jns
xchg
dec
xorb
sub
call
mov
enter
loope
sub
jae
scas
pusha
jne
mov
push
iret
sub
popa
mov
pop
xor
gs
icebp
loopne
mov
xchg
aam
hlt
and
jne
jbe
inc
sub
test
mov
xorl
fcoml
imul
push
push
mov
fisubl
sub
scas
dec
int3
cmp
data16
inc
test
cmc
out
sbb
stc
mov
std
cmp
jmp
fbstp
inc
lods
pop
lods
add
mov
lods
jp
orl
jmp
std
mov
xor
jne
inc
add
pusha
call
hlt
sahf
adc
dec
xchg
scas
movsb
ret
mov
mov
cmp
mov
out
negl
sub
mov
inc
int3
andl
mov
mov
or
in
jge
sub
test
ss
mov
jle
mov
pop
and
sahf
or
or
mov
jno
push
mov
pop
in
adc
add
dec
xchg
pop
inc
loope
pop
movsb
xchg
mov
xor
adc
pop
adc
aaa
pop
clc
jecxz
in
dec
sub
push
scas
shrl
sbb
sub
inc
mov
shll
push
stc
and
test
add
lods
cmc
shrl
repz
movsl
pop
mov
mulb
addb
pop
cmp
cmp
outsb
lock
jae
outsb
inc
jns
cmp
popf
ss
ds
arpl
cld
mov
add
mov
push
jo
cmpsl
ret
fchs
adc
aas
xchg
inc
test
in
inc
out
jb
xor
loop
mov
aaa
add
inc
cltd
inc
loop
lahf
jno
adc
arpl
xchg
and
daa
aaa
jp
clc
insl
sbb
es
jae
xchg
loope
mov
call
cmp
inc
inc
out
jbe
cmp
loope
fisttpl
lock
jecxz
dec
scas
jns
in
je
add
in
imul
xchg
movsb
mov
arpl
jns
mov
out
movb
fsubr
cli
aaa
lret
fsubrl
cmc
ds
cmp
aam
sbb
iret
test
xchg
and
add
idiv
loope
xlat
jae
xchg
jmp
xlat
mov
popa
nop
test
inc
iret
inc
push
aad
or
imul
inc
adc
enter
outsl
xchg
pop
fxch
call
mov
jne
lret
push
mov
sbbb
ljmp
rcr
push
ficompl
xchg
inc
fbstp
and
insl
xchg
stos
test
add
xchg
push
cld
cwtl
je
add
roll
push
sub
dec
lahf
shlb
mov
gs
daa
lcall
add
sbb
out
shl
xor
pop
mov
dec
push
mov
movsb
pop
cmp
adcl
and
fmuls
lahf
mov
jnp
dec
out
fcmovbe
push
ljmp
cmp
fimuls
fsubl
mov
sbb
divb
pop
int
sub
bound
xchg
popf
inc
fimull
iret
imul
mov
in
jbe
in
movsl
bound
sahf
cmovne
into
test
inc
jge
or
scas
sbb
rcrl
inc
in
cmc
and
into
ret
push
xchg
lahf
xchg
ja
jle
dec
push
fnsave
sti
mov
or
leave
push
mov
inc
push
inc
fcoms
or
xchg
scas
inc
frstor
inc
aaa
sbbl
and
adc
mov
clc
sub
sub
lds
loop
test
das
lock
ds
adc
pop
or
popa
sub
add
test
int3
sub
adc
fwait
lods
jae
inc
rcll
sarl
add
jecxz
pop
mov
cmp
sub
add
pop
adc
lret
xchg
jle
jns
jle
out
ljmp
lret
int3
adc
out
adc
push
mov
sub
je
pop
dec
and
inc
es
nop
scas
adc
pop
movsl
lea
mov
inc
pop
stc
cmpsb
int
stos
sbb
call
cmp
mov
aad
sarb
ljmp
xor
rol
jne
jo
inc
or
call
mov
adc
sbb
cli
dec
aas
mov
cmp
xchg
pop
cmp
jnp
sbb
xor
mov
xchg
adc
dec
popf
lret
mov
fwait
adcb
faddl
loop
sti
ficoml
bound
and
mov
sbb
fs
mov
dec
push
sbb
mov
daa
mov
lds
mov
ljmp
int
mov
mov
sbb
daa
inc
mov
and
cs
sbb
sbb
mov
leave
ja
es
xchg
push
sbb
mov
or
mulb
dec
gs
jns
outsl
std
inc
xchg
js
jnp
push
les
push
adc
faddl
test
jmp
or
push
sarb
arpl
scas
mov
out
dec
in
jae
cmc
pop
ljmp
mov
cwtl
pop
add
stos
jl
pusha
adcb
ljmp
pop
cmp
and
or
jl
adcb
add
mov
ret
fimuls
ds
and
rep
push
mov
add
sub
popf
data16
fists
xor
xchg
test
imul
imul
aam
mov
or
decl
xor
or
cmp
pop
sub
out
sbb
xor
ljmp
mov
mov
cli
mov
mov
mov
imul
add
add
xor
add
mov
in
push
aaa
mov
es
rolb
add
dec
lock
mov
mov
cmpsl
xchg
or
data16
in
fldenv
fs
inc
es
dec
pop
xchg
dec
xorl
add
jnp
lods
dec
dec
sbb
ret
xchg
push
imul
or
pusha
sub
lahf
mov
cwtl
in
mov
push
push
mov
cli
xchg
cmp
repnz
scas
and
movsl
in
sbb
pop
push
xchg
fcomps
pusha
std
mov
js
jge
ret
xlat
ja
sub
mov
mov
mov
push
jo
add
movsb
push
inc
cmp
inc
addr16
scas
mov
sbb
jl
ljmp
or
lock
xor
sbb
aad
or
add
mov
sbb
aaa
pop
xor
roll
dec
sub
pop
pop
cmp
jg
inc
adc
or
sbb
add
scas
xor
enter
dec
push
adc
lds
enter
cmpsl
dec
inc
pop
dec
jnp
call
cmpsb
push
cmp
mov
adc
xchg
movsb
push
repnz
or
mov
mov
push
add
cltd
lock
mov
daa
lods
mov
lahf
pop
popa
and
xor
inc
inc
je
out
push
xchg
mov
jbe
add
test
pop
aam
fs
lds
hlt
mov
or
ja
adc
iret
mov
fcompl
scas
mov
add
sub
push
jbe
mov
push
xor
pop
xor
xchg
cltd
test
pop
and
jle
lock
aad
test
jno
sbb
mov
jg
out
xor
pop
andb
inc
stos
outsl
sbb
mov
mul
sbb
in
sub
pop
testl
dec
aad
icebp
ror
into
xor
aad
pop
xor
push
fcoms
in
cmp
dec
jl
lods
leave
lcall
xor
or
pop
pop
cwtl
cs
gs
add
mov
ds
nop
mov
or
xor
test
in
rol
rcr
daa
aam
mov
cmp
rcr
popf
dec
adc
mov
mov
xor
dec
lods
cmp
in
inc
sbb
push
mov
lock
ljmp
xor
pop
add
push
push
aad
aam
xor
imul
movsb
loop
addr16
pop
idivb
repz
pop
inc
lahf
punpckhbw
pop
cmc
clc
out
or
pop
mov
gs
movsb
cmp
je
and
push
pop
pop
mov
push
mov
outsb
dec
push
mov
out
insl
add
bound
jge
jg
xor
push
repz
imull
jg
jno
mov
ss
mov
arpl
mov
pop
enter
add
iret
cmpsb
out
dec
mov
shll
int
mov
scas
pushf
xchg
das
fs
push
and
and
imul
push
xchg
daa
inc
xchg
xchg
sar
cmpsl
hlt
xor
sbb
add
pop
or
mov
mov
leave
mov
das
loop
in
fistps
xchg
mov
push
mov
filds
pusha
test
jmp
push
mov
mov
iret
pop
cmpsb
mov
jns
mov
or
into
push
mov
push
rcr
imul
fisubs
push
gs
and
negb
jae
loopne
stos
es
ror
movsl
nop
aad
add
or
xor
mov
xor
fwait
xchg
xorb
jo
cmc
dec
cli
rcr
adc
sbb
loopne
pushf
pop
push
and
xor
mov
add
in
xchg
jb
outsb
push
leave
mov
fsqrt
jge
mov
dec
mov
sahf
jae
lea
mov
pop
out
ret
loope
es
clc
push
dec
pop
inc
mov
in
xchg
imul
out
xchg
push
xchg
xchg
or
subb
adc
xor
adc
xor
push
sti
orb
rcrl
mov
cld
push
ss
xor
jbe
mov
add
stos
mov
push
ret
into
xor
cmp
xchg
sbbl
insl
mov
mov
in
pop
add
jmp
hlt
outsb
nop
push
popa
mov
and
outsl
mov
xor
call
inc
cmp
inc
dec
or
lret
out
mov
mov
cmpsl
lret
jp
mov
push
pop
jnp
jnp
fdivs
mov
sub
sarb
sbb
xor
mov
aad
push
das
aad
popa
pop
sbb
jmp
cmpb
mov
push
std
jg
adc
out
push
hlt
test
js
push
xchg
pop
test
jp
mov
adc
fdiv
sub
jne
out
inc
jle
pop
or
adc
mov
cmp
out
clc
cs
ret
outsl
ja
shll
pop
mov
mov
pusha
cmp
xchg
addr16
or
int
fsubr
dec
mov
cli
cld
pop
fstpt
out
sub
sub
test
xchg
adc
loope
imul
jbe
push
aad
dec
sbb
jecxz
sub
jae
pop
fadds
addb
jnp
jns
mov
inc
cld
in
popf
leave
sub
movsb
push
jecxz
fs
push
add
insb
add
je
gs
ds
les
and
mov
negl
repz
pop
push
cmp
mov
mov
fsubl
mov
ja
or
lahf
inc
mov
inc
xchg
add
mov
pop
lock
iret
es
mov
loopne
hlt
ss
lret
mov
dec
into
imul
sti
jecxz
add
inc
bound
push
mov
push
out
scas
mov
repz
stc
jl
ds
inc
adc
rclb
jnp
dec
xor
cmp
mov
dec
lfs
addb
mov
mov
xchg
dec
in
aad
cmp
mov
imul
movsb
inc
mov
jo
xchg
cld
and
cmp
xchg
jbe
mov
pop
cmp
scas
jb
aaa
shll
or
mov
pop
dec
mov
dec
mov
loope
xchg
sbb
mov
loop
mov
cmp
lods
loop
subb
mov
ror
mov
shrl
cmpsb
xchg
lcall
inc
popl
add
in
add
lds
adc
mov
dec
mov
mov
lock
dec
sub
xchg
lcall
sub
cli
mov
mov
mov
dec
mov
cmpsl
test
jbe
add
push
icebp
push
mov
out
sub
popa
je
lock
lds
add
mov
pop
pusha
xor
xor
test
ja
pop
mov
dec
sbb
out
xor
fimuls
les
jnp
jecxz
cmp
xchg
outsb
pop
push
out
movsb
gs
add
xchg
sti
push
mov
lret
shlb
mov
push
test
mov
sub
push
xchg
cmp
pop
sbb
ds
scas
mov
pop
nop
iret
and
xlat
dec
insb
adc
inc
test
xor
add
jmp
out
xor
xchg
fnstsw
out
xor
xchg
enter
jge
ficoml
sub
call
insb
inc
xchg
jmp
mov
push
mov
push
jno
push
jp
mov
sub
outsl
int3
scas
push
out
imul
xchg
fistpl
xor
aaa
add
lock
add
int
jp
in
test
divl
lcall
out
fildl
mov
test
adc
mov
cs
or
jmp
adc
cmc
lds
dec
imul
xchg
fisttpll
mov
inc
rorl
mov
inc
decb
outsb
mov
mov
inc
jne
or
push
mov
jbe
sub
sbb
or
jmp
push
push
mov
popa
mov
inc
inc
jo
clc
lret
mov
add
test
mov
lea
jmp
loope
adc
jns
in
adc
adc
or
xchg
push
pop
xorb
scas
repnz
mulb
mov
lret
cmpsb
and
xchg
mov
shll
push
add
xorb
push
push
mov
stos
xchg
mov
pop
xchg
pop
cmp
and
ja
adc
rorb
or
in
adc
inc
test
inc
je
popf
and
shr
pushf
mov
cmc
cmpsb
jno
or
mov
insl
and
sub
mov
cmp
sahf
cmp
mov
mov
fs
jmp
sahf
rcrl
imul
push
fistl
dec
movsl
bound
sub
mov
sti
bound
mov
push
je
pop
pop
fldenv
decl
push
add
add
sub
test
in
lea
mov
or
cmp
cmc
cmp
iret
cmpsb
arpl
sbb
jbe
rcrl
cli
ret
lret
sysexit
mov
jno
sti
jbe
sbb
mov
rcrl
fcmovnu
mov
repz
pop
and
push
cmp
push
stc
xchg
insl
ljmp
jne
shll
cmc
movsl
cmp
sbb
mov
cmp
push
push
or
sbb
xor
adc
aaa
es
jns
xchg
aas
cltd
mov
cld
fstps
lods
push
loope
add
repz
cmp
in
stos
jne
daa
sbb
addr16
fisttpl
inc
adc
cltd
mov
popf
xor
outsl
pop
and
mov
int3
nop
push
xor
js
jbe
push
sub
add
dec
or
test
lcall
adc
and
lret
mov
adc
insl
addl
shl
mov
sbb
mov
add
dec
ret
cmp
mov
push
cmp
pushf
movsl
lcall
jnp
popf
pop
push
jo
repz
aam
enter
push
into
cmp
jmp
std
dec
dec
loop
imul
out
fistl
xchg
lret
loope
jp
inc
jno
popa
or
adc
fwait
or
pop
inc
jae
mov
cmc
inc
ret
mov
mov
or
shl
sbb
push
cli
mov
add
aaa
sbb
popa
test
test
inc
sub
movsl
ret
out
lods
cmp
aam
adc
fdiv
inc
int3
shlb
inc
jne
mov
loope
into
add
sub
push
push
add
aad
push
inc
outsb
pop
inc
ret
in
sarl
push
mov
jae
cmp
in
fcomip
ret
sub
pop
and
out
test
xchg
dec
scas
push
lcall
sbb
jno
imul
xchg
push
push
loop
mov
cltd
lods
fadds
mov
fadd
pop
mov
add
call
mov
imul
push
ficomps
adc
iret
cmpsb
or
cltd
in
cld
jl
dec
dec
dec
adc
pop
xchg
aad
add
aaa
inc
stos
popa
nop
notb
jno
cli
ja
das
clc
jg
pop
je
insl
push
cmp
in
mov
pop
xor
loope
jb
pusha
pusha
add
lods
cmp
mov
mov
inc
push
outsl
fisubrl
mov
push
dec
inc
or
in
stos
add
pop
lret
mov
adc
cli
sub
aaa
popf
cmc
or
or
mov
or
das
js
adcl
mov
or
clc
mov
add
push
repnz
stos
inc
adc
sbb
sbb
and
lock
dec
testl
leave
shrb
vphadduwq
dec
subb
jnp
push
mov
or
pusha
cwtl
xor
xchg
icebp
push
es
icebp
sbb
addr16
cmc
adc
mov
xchg
std
adc
xchg
iret
cmp
stos
adc
mov
mov
sahf
call
xchg
in
popf
mov
inc
cmp
bound
cmc
jecxz
xor
xchg
outsl
push
in
addr16
jnp
pause
inc
sbb
mov
fisubrs
add
movsb
cmp
jecxz
push
ljmp
leavew
ret
movaps
mov
cmp
cmp
dec
lretw
jo
jecxz
fmull
inc
adc
push
orl
inc
push
jne,pn
push
push
xor
enter
movsl
jae
fistpll
cmp
jp
fistpll
lret
sub
sbb
sub
rcrl
movsl
dec
sbbb
push
and
mov
and
cmp
sub
jp
shlb
push
lret
sbb
lcall
in
mov
hlt
js
xchg
xchg
adc
xchg
mov
das
mov
fsubl
jo
dec
insb
out
jg
adc
outsl
negl
aam
add
mov
and
mov
jns
mov
test
inc
adc
aas
xchg
push
cwtl
mov
and
out
jbe
adc
push
push
cli
insb
xor
mov
mov
lods
inc
jno
arpl
jg
and
movsb
aam
fdiv
sti
dec
stos
xchg
out
jg
xchg
jmp
pop
aam
lret
push
enter
mov
xchg
mov
jg
mull
dec
mov
cmp
test
in
mov
andl
and
push
push
andb
pop
insl
aad
bswap
mov
or
insl
iret
cwtl
or
xor
ss
push
inc
or
inc
or
int3
gs
xchg
in
cld
cs
in
adc
cwtl
daa
push
sahf
push
cwtl
lret
js
scas
dec
aam
icebp
mov
icebp
sbb
hlt
popa
test
cld
das
rorl
imul
movsl
xchg
add
cmp
adc
cs
int
std
mov
xlat
mov
orb
push
mov
inc
or
lods
mov
addr16
dec
xor
add
jo
inc
xchg
push
scas
inc
ja
je
push
rorl
dec
xchg
pop
mov
les
add
push
or
popa
cmp
mov
jns
sbb
or
jo
testl
enter
cli
jg
xor
cmp
sub
mov
lock
mov
gs
jo
adc
mov
iret
js
dec
popf
push
stos
pusha
and
addr16
cmp
sti
lea
sub
lcall
pop
popa
jbe
sbbl
imul
fimull
xlat
test
xorb
int
insl
mov
cmp
pop
in
or
testl
mov
mov
cld
divb
sarb
rcll
adc
int
jne
cmp
dec
pop
jbe
jl
inc
push
mov
pusha
clc
test
test
inc
dec
fwait
dec
push
mov
sub
shlb
scas
xor
or
fimuls
aam
xchg
xchg
rcrb
dec
cmpsb
imul
cmp
fisttpl
dec
arpl
mov
fisubrs
xor
xchg
jo
mov
sbb
scas
push
or
cmp
mov
mov
insb
aas
sti
xchg
movsl
es
push
mov
fstl
mov
mov
lcall
mov
or
pop
dec
sub
mov
int3
pop
incl
pop
jbe
loopne
cmp
or
subb
lahf
insl
lds
cmp
xchg
push
repz
push
jae
ja
add
or
je
pop
mov
push
outsl
mov
setnp
cmp
out
imul
push
jg
divl
inc
jo
ds
fwait
je
shlb
movsl
mov
xchg
mov
jmp
into
sbb
les
in
ja
mov
bound
and
xor
inc
or
mov
lcall
aam
xor
push
dec
icebp
ljmp
repnz
or
xor
push
imul
pop
inc
aas
lret
add
adc
dec
mov
mov
jo
pop
stos
popfw
dec
sub
pop
data16
push
adc
jle
mov
adc
mulb
aad
movsl
dec
iret
rcrl
movl
add
cmc
popf
or
mov
pushf
xchg
repz
push
dec
repz
jae
sbb
js
lahf
pusha
xchg
xor
out
bound
loop
cltd
xchg
pushf
mov
cmp
loop
lahf
cli
lock
outsb
xlat
pop
loope
gs
ja
pop
xor
aas
hlt
imul
jg
es
adc
and
shll
pusha
out
loop
and
cli
mov
lahf
adc
jns
fisubrl
jns
lea
cmpsb
stos
sbb
stos
repnz
jb
and
cmp
jmp
sbb
xchg
cwtl
cmp
adc
std
lock
jl
jb
push
cmp
addb
pop
jle
in
dec
pop
scas
in
sbb
imul
or
movsl
jb
stos
imul
xor
andb
adc
mov
or
mov
dec
lahf
jp
mov
sbb
repz
fldl
xchg
dec
sbb
push
adc
xor
loop
leave
les
lcall
cmpsl
rcll
sarl
mov
pop
sti
jl
cld
lea
push
push
stc
xchg
call
adc
imull
dec
ss
xor
rcll
push
orl
sub
cld
lahf
pop
enter
cmp
and
push
xchg
or
lret
jnp
mov
mov
cwtl
aaa
repnz
insl
jmp
dec
mov
lds
test
pop
repz
aad
stos
pop
pusha
mov
mov
insl
xchg
xchg
dec
int
insb
inc
or
mov
aaa
add
jns
rorb
sub
lea
rclb
or
and
mov
cmp
and
fdivp
ret
pop
idiv
mov
xchg
xchg
jle
aad
or
lahf
sbb
or
outsl
mov
xchg
enter
stc
js
cmpsl
push
leave
sbb
push
add
test
movsb
aad
jl
xlat
or
adc
and
das
inc
lods
sub
jmp
cli
mov
sub
gs
iret
outsb
sahf
cmpsb
cmp
inc
mov
mov
inc
cmc
or
lods
dec
fstpl
cmp
or
ljmp
cwtl
outsl
in
dec
into
in
lock
jae
pop
lds
scas
push
fs
je
pusha
roll
mov
xor
xchg
pop
cmc
fildl
add
xor
shlb
in
pop
js
inc
mov
dec
xchg
pushf
jle
lock
imul
and
hlt
jmp
mov
sub
jmp
fisttpl
pop
or
adc
xor
xchg
inc
adc
ds
aad
dec
pop
loope
scas
ljmp
fldcw
xlat
je
push
ds
inc
push
xchg
in
mov
inc
push
and
xor
mov
cmc
pop
mov
arpl
pop
add
sub
sti
aam
and
xorb
sub
mov
push
mov
rcl
jns
aaa
daa
mov
xor
pop
sub
lret
and
or
jbe
add
and
test
mov
push
out
dec
sbb
or
cmp
scas
push
negb
fstl
jae
mov
xor
test
mov
aam
mov
cmc
ja
sbb
imul
not
test
jno
xchg
jmp
nop
ss
lahf
push
mov
outsb
sbb
into
pusha
aam
popa
sbb
or
mov
arpl
mov
cltd
hlt
jmp
pop
pop
xor
cmpsb
sub
mov
lcall
mov
or
inc
shl
jb
dec
mov
adc
jl
adc
mov
imul
dec
xor
sbb
cmp
xor
add
jp
sti
fsts
cld
gs
xchg
pop
sub
mov
hlt
cmpsl
rol
dec
andb
leave
incb
dec
mov
and
das
jle
cli
shll
push
add
mov
into
inc
adc
add
xchg
pop
inc
cmpsb
jbe
and
fmuls
in
test
vpunpcklbw
push
in
jno
mov
out
out
xor
inc
fldl
fnsave
fsubr
in
movsl
outsl
or
sub
mov
gs
jbe
mov
pusha
mov
dec
lea
ds
lods
into
adc
dec
mov
dec
in
push
mov
adc
lcall
mov
xchg
xchg
xchg
sub
add
sbb
push
push
lcall
hlt
mov
xor
jns
push
jge
pop
mov
mov
dec
push
ss
or
cs
insb
mov
cmpb
pop
xor
test
loopne
jecxz
mov
not
add
inc
scas
jle
xchg
test
jne
xchg
sub
pop
mov
idivb
inc
sahf
ret
ret
push
mov
pop
jnp
xchg
loopne
sahf
xchg
pop
mov
dec
sahf
fidivs
xchg
dec
stos
inc
insl
jle
movsb
stos
scas
sahf
jo
mov
jne
rorl
jne
not
repz
imul
mov
shll
scas
shl
mov
in
pop
jbe
sub
sub
jnp
pop
in
mov
add
adc
jb
bound
mov
xchg
popf
cmp
dec
sbb
adc
fisubrl
dec
xchg
std
jbe
or
jp
xor
inc
scas
repnz
xor
les
sbbl
gs
adc
jl
mov
popa
imul
or
push
sub
add
dec
inc
test
data16
pop
sub
mov
add
lea
dec
mov
std
mov
jbe
xchg
into
sbb
shll
xchg
int3
mov
sbb
insl
dec
xor
pop
mov
push
push
xor
int
xor
subl
loope
mov
mov
lcall
fmul
xor
inc
in
and
popf
loope
and
imul
mov
test
les
mov
add
push
push
inc
shrb
addr16
mov
lcall
leave
loop
add
rcll
imull
pusha
mov
jno
sti
pop
jg
inc
xor
inc
imulb
fisubrl
pop
xor
dec
lret
jecxz
sbb
push
cltd
fs
jg
fiaddl
pusha
enter
sbb
sbb
stc
jg
addb
mov
sub
outsl
adc
xor
cltd
inc
les
inc
sbbb
outsl
stos
xlat
push
pop
imul
sub
xlat
pushl
rcrl
xchg
in
testl
dec
pop
js
stos
mov
jbe
bnd
sub
dec
jns
gs
cld
loop
mov
push
adc
or
push
aam
add
scas
fs
push
movsl
in
xchg
loopne
or
aaa
movsb
insl
xchg
popf
lret
push
push
int3
sti
adc
sbb
inc
mov
js
test
in
data16
cmp
cli
bound
icebp
push
and
mov
lret
push
dec
movsl
and
pushf
test
jns
mov
jmp
dec
and
pushf
push
insl
in
ret
out
sarb
push
or
aaa
outsb
fsts
push
call
pop
insl
xchg
shlb
out
fldlg2
push
imul
xor
cs
cmp
adc
push
or
cmp
out
push
stos
ljmp
xchg
mov
repnz
inc
int
mov
imul
nop
shrl
shr
cmp
mov
jecxz
lcall
out
outsb
xlat
inc
out
dec
sbb
test
jmp
lods
sub
lret
ja
pop
fcmovu
cld
outsl
mov
outsb
arpl
cmp
js
out
mov
or
outsl
bound
push
sub
adc
mov
adc
sub
pop
fcomip
cmpsl
std
mov
fs
mov
out
and
jns
jmp
adc
ja
cmc
movsb
jnp
jmp
xor
outsb
inc
add
lcall
push
push
notl
mov
gs
pop
je
pushf
xchg
lods
rcl
repnz
outsb
lds
out
add
enter
mov
fwait
cmpsb
sub
xchg
ret
push
inc
scas
xlat
daa
std
in
add
out
out
jecxz
dec
pop
shll
sarl
nop
or
mul
dec
sbb
pop
xor
dec
add
mov
jmp
push
inc
mov
mov
push
mov
ss
ja
jae
xchg
int3
sbb
mov
arpl
addr16
loope
movsb
ret
mov
xchg
sti
out
cmp
sbb
mov
sub
mov
stos
lock
movsl
dec
jg
jns
mov
push
sahf
xchg
jbe
push
in
fs
push
pop
push
sbb
loopne
pop
pop
xchg
mov
dec
mov
mov
cmc
mov
push
das
addb
ljmp
mov
movsl
lods
mov
adc
dec
pop
cmp
adc
dec
inc
out
orb
movsb
push
or
and
fnstenv
test
scas
scas
insb
cmp
out
int
insl
inc
iret
push
lcall
xlat
pop
adc
cmp
mov
inc
mov
scas
adc
push
mov
adc
mov
iret
push
insl
out
je
sbb
mov
std
vmulsd
inc
fwait
mov
cmp
enter
mov
jnp
into
cmp
jp
out
mov
aam
je
in
and
jbe
loopne
pop
and
sbb
sahf
movsb
mov
bound
je
scas
inc
jne
ljmp
and
and
or
sub
inc
lret
and
mov
adc
pop
popa
rcll
xchg
inc
or
and
push
xor
stos
jo
jle
jl
pop
repnz
dec
mov
test
outsb
fcomps
call
push
or
jbe
std
mov
push
sti
and
jns
aad
cmpsb
inc
scas
idivb
mov
mov
inc
gs
dec
mov
fs
xchg
xor
ljmp
incl
mov
aam
ret
sahf
out
je
scas
dec
adc
sbb
push
sbb
shrl
test
insl
cld
jle
mov
push
fidivl
jle
movsl
ja
adc
add
shlb
fisubs
jg
stos
movsb
aaa
xchg
in
gs
push
into
nop
rorb
mov
lock
lea
pop
mov
pop
or
push
or
xchg
mov
icebp
or
jmp
sub
add
sar
mov
lods
repnz
scas
jns
andl
mov
cmp
pop
mov
mov
xchg
mov
jle
cmp
rolb
cmovle
roll
int3
xlat
stos
test
enter
nop
popa
cmpsb
cmpsl
mov
scas
dec
xchg
in
aad
sub
scas
xor
mov
fdivl
add
sub
xchg
xor
cwtl
push
andb
cmpsb
push
sbb
mov
cli
push
push
std
rcr
mov
push
cmp
pop
cmp
popa
xlat
sub
pop
jecxz
jg
push
fcmovbe
les
pop
movsb
stos
mov
repnz
test
cmp
or
cmpsl
das
push
sbb
shll
pop
test
movl
adc
push
xchg
inc
in
rcl
jns
test
cmp
js
adc
sbb
les
xchg
push
mov
push
pop
push
mov
mov
jae
and
push
jmp
movsb
pop
pop
out
insb
add
addr16
sbb
mov
pop
packsswb
jns
fbstp
jo
and
sbb
fnstcw
mov
int3
pop
int
jbe
ret
xor
aad
hlt
pop
in
xor
roll
adc
adc
out
xchg
and
stos
and
sbb
fdiv
mov
icebp
xlat
aaa
adc
in
mov
xor
push
int3
adc
jmp
jnp
hlt
add
call
push
fldcw
xchg
test
into
into
fstpt
pminub
into
pop
rcll
fnstenv
das
loop
movsl
sub
test
sti
aas
cmpsl
and
jmp
test
jecxz
fwait
aad
mov
lret
jge
and
jecxz
stos
fimuls
jg
inc
shlb
lods
sub
cli
mov
incl
pop
mov
scas
pusha
arpl
sbb
mov
lret
lret
cmpsl
outsb
std
addl
in
mov
sti
push
std
pop
cwtl
inc
movl
das
cmpb
pop
mov
sbb
cli
pop
pop
data16
cmpsb
shlb
add
xchg
jge
pop
dec
cmp
and
jg
popf
aad
mov
insb
popa
data16
mov
mov
cmpsb
add
adc
mov
add
jp
stc
loope
sbb
cmpsl
stc
cmp
mov
fcompl
repz
mov
add
or
loope
jno
dec
and
mov
sahf
and
jge
push
cmp
ljmp
push
mov
orl
mov
push
xchg
mov
sbb
mov
shlb
adc
out
int
and
mov
enter
push
sub
ds
jle
sub
add
mov
jb
hlt
filds
cmpsb
xor
pop
inc
loope
cmp
add
aad
fdivrs
dec
cmp
and
cmpsb
fs
aas
jne
dec
lahf
insb
test
out
es
loop
jns
daa
rcrb
jo
pushw
idivl
lret
stos
cli
pop
mov
xchg
hlt
adc
sub
pop
add
jle
stos
xchg
push
rcr
xchg
and
mov
into
sti
mov
shrb
pop
xchg
sarl
mov
in
rolb
test
inc
call
insb
dec
mov
push
cli
imul
insb
sbb
data16
adc
imul
or
cli
mov
movsl
cmp
js
dec
mov
jge
and
dec
jbe
stc
jmp
mov
xchg
jl
loope
loope
lahf
mov
xchg
addr16
pop
sbb
push
jl
xchg
test
mov
fmulp
and
lods
inc
ds
pop
sub
cmp
cmp
add
xor
mov
jb
mov
inc
jmp
xchg
and
xchg
stc
push
ds
insl
shrb
int
pop
cld
mov
negb
mov
pop
xchg
lods
int3
cmovge
jnp
or
jl
sbb
and
xchg
lock
ret
pop
inc
mov
iret
test
push
mov
cmp
xchg
lods
dec
bound
jmp
leave
xlat
mov
in
add
pushf
cmpl
rcl
push
arpl
inc
xlat
or
cmp
loope
loop
pop
jae
inc
cli
inc
inc
stos
es
cwtl
dec
dec
mov
dec
pushf
bound
pop
cld
movsb
test
outsb
je
mov
lods
inc
push
pop
push
push
loopne
cmp
or
cltd
xor
test
sbb
sbb
int3
in
repz
dec
sbb
jnp
insl
mov
xchg
aaa
mov
xchg
push
xor
ret
jmp
xchg
insl
push
out
rolb
out
pop
jb
push
mov
pop
inc
pop
imul
jl
out
sbb
fs
loope
sarl
cltd
mov
sub
dec
mov
das
sbb
dec
xchg
sub
cmpsl
jecxz
lcall
sarl
inc
xchg
ror
push
hlt
add
jns
mov
mov
stos
ret
add
mov
loopne
bound
xchg
add
inc
mov
test
lock
movsb
into
stc
xor
dec
jno
fsubs
pushf
out
sbb
sub
pop
outsb
xchg
jae
repnz
and
fcmovnbe
jbe
nop
popf
push
insl
sti
cmpsl
test
add
fimuls
mov
jg
test
aam
mov
add
mov
pop
xchg
scas
out
hlt
bound
bound
sub
ja
cld
jle
out
push
test
xor
insl
sbb
jo
cmp
negl
add
push
cmp
add
in
mov
sti
push
hlt
pop
sbb
adc
cld
pop
imul
insl
sbb
or
hlt
push
inc
daa
xor
inc
push
dec
aaa
inc
pop
or
add
fmul
mov
xor
fcmovnbe
and
addr16
mov
sub
loope
jb
mov
lock
dec
and
jl
imul
andl
sahf
dec
jno
jae
adc
mov
iret
xor
rcrb
movsb
stos
cmp
add
adc
enter
shlb
ljmp
pop
test
jmp
xor
cwtl
popa
jp
fwait
adcl
lret
sarb
flds
fadd
adc
adc
mov
add
cwtl
mov
add
imul
jmp
in
cmp
icebp
cmp
xor
jns
pop
pop
xor
imul
mov
dec
mov
pop
loope
xchg
fs
enter
mov
fwait
mov
in
and
add
mov
dec
push
jg
pop
push
adc
pop
and
sbb
xchg
stc
pop
pop
ds
std
popa
xor
cmc
cld
sbb
jmp
dec
xor
push
pop
adc
lret
adc
cmpsb
enter
jg
push
shrb
outsb
repz
mov
sti
daa
push
jp
aam
sbb
dec
jo
mov
js
out
mov
push
pause
icebp
sbb
mov
dec
popa
sbb
inc
pop
ja
mov
mov
mov
mov
js
add
lret
cwtl
clc
adcl
push
pop
adc
mov
lea
mov
pusha
dec
pop
adc
dec
fdivp
ljmp
mov
push
test
inc
dec
push
xchg
jb
insb
rcll
add
xchg
push
inc
dec
int3
jns
scas
sar
cwtl
and
inc
mov
pop
mov
mov
cmp
xchg
inc
leave
mov
das
add
push
push
outsl
incl
stc
rcrl
mov
push
imul
or
stos
pop
mov
sub
ret
adc
sub
cltd
ja
lcall
pop
push
hlt
push
jne
shlb
repnz
jne
pop
and
mov
bnd
push
mov
mov
adc
add
ss
pop
arpl
fcomps
mov
cltd
adc
lret
jge
js
xchg
cmp
dec
out
popf
lods
jnp
stos
sub
sbb
std
je
add
cmp
out
imul
jns
ljmp
push
pop
addr16
loopne
xor
cld
stos
lcall
xlat
fnsave
cwtl
xchg
fwait
adc
adc
pop
rclb
xchg
push
mov
addb
sbb
fdivrl
loopne
enter
aas
maxps
pop
ficomps
sbb
sub
mov
xor
adc
push
std
out
sub
push
out
jl
jge
lea
in
outsl
pop
push
add
cli
scas
xchg
cli
sar
imul
mov
flds
adc
xchg
xchg
arpl
outsb
adc
and
das
cmp
xor
in
inc
testl
aam
lods
adc
push
insl
pop
jno
mov
or
push
jecxz
repnz
add
loopne
ficomps
push
jp
popf
pushf
mov
lret
push
aas
xchg
cmp
pop
jle
aas
pop
xlat
xor
ss
clc
jp
mov
rcll
mov
insl
add
insb
push
mov
ror
or
in
movsl
adc
and
mov
shrl
in
sbb
sub
mov
out
and
jne
dec
xorb
pushf
inc
hlt
cmp
into
lahf
jmp
and
ds
mov
in
sbb
shrl
xor
cwtl
and
rol
or
pop
clc
add
pop
test
lret
out
mov
sub
sub
jnp
inc
sub
sbb
test
mov
adc
or
daa
orb
and
popa
lcall
test
daa
mov
sub
sub
fildll
leave
cmp
mov
dec
in
pop
pop
sub
add
mov
loop
cwtl
test
out
mov
ljmp
jl
mov
dec
addb
int
xor
sbb
mov
xor
mov
sbb
sbb
xchg
mov
and
into
adc
lahf
jae
shr
je
xchg
adcl
pop
repnz
andl
loop
fldt
dec
mov
mov
scas
adc
sub
mov
dec
gs
outsl
add
sub
ret
js
shll
icebp
add
out
int
push
and
adc
js
test
jl
mov
xor
adc
mov
sub
push
sbb
or
cmp
inc
das
insb
inc
jl
outsb
mov
pminsw
or
sub
movb
adc
cltd
xor
enter
jo
xor
inc
and
fadds
pop
les
vfmaddsub231pd
inc
inc
stos
ret
movsb
aad
and
test
loope
nop
adc
push
push
lcall
rcrl
cmp
stc
fwait
cs
mov
jmp
push
and
lret
push
loopne
push
push
dec
inc
aad
cmp
xchg
xchg
sub
stos
jns
mov
push
pop
inc
je
xor
pusha
add
mov
data16
arpl
xbegin
ljmp
rorl
fistpl
adc
cpuid
call
push
test
sbb
int
fsubrl
stos
stc
divps
imul
cmp
or
dec
jle
sub
nop
xor
mov
jmp
into
push
xor
daa
mov
pop
bound
xchg
mov
xchg
mov
or
fdivrl
xchg
xlat
jle
mov
mov
repz
jne
sarb
sub
pop
gs
cmp
imul
inc
call
int3
pop
xchg
test
mov
xor
shrl
lds
push
lret
das
inc
push
adc
inc
lahf
push
subb
rcl
jns
movsb
fnclex
ja
arpl
mov
inc
xchg
movsl
adc
les
call
loope
or
negb
in
adcl
xor
adc
ds
xchg
imul
mov
xchg
ljmp
je
std
addr16
test
ret
repnz
cltd
test
fcompp
sub
les
lcall
cmp
in
out
pop
out
subb
mov
scas
aad
pop
sub
decl
push
mov
scas
stos
mov
push
iret
mov
notl
andb
or
fsubl
mov
test
inc
mov
add
push
jno
repnz
push
out
sub
insb
imul
push
add
scas
cs
imul
xchg
lret
push
inc
inc
fsub
jecxz
fisubl
scas
icebp
jecxz
mov
sub
cs
lret
outsb
mov
jecxz
push
loopne
mov
xchg
pop
sbb
nop
std
insb
cmp
dec
cmp
outsl
xchg
nop
leave
jb
and
dec
mov
movsb
xor
pop
mov
cs
xlat
pop
imul
scas
inc
mov
aad
arpl
adc
mov
cmp
outsb
dec
add
mov
bound
in
mov
adc
push
dec
jno
dec
sbb
sbb
mov
aad
dec
iret
cmpsb
mov
mov
mov
addb
ror
mov
lea
mov
test
daa
scas
mov
adc
push
dec
cmpl
outsb
dec
and
filds
add
enter
xchg
bound
adc
add
adc
test
jge
lods
cmpsl
call
adc
and
fsubrp
mov
jmp
or
dec
sti
subb
pusha
dec
aam
rolb
jnp
sub
sub
mov
popa
mov
test
push
sbb
inc
xchg
imul
mov
insb
cmp
xorb
les
lods
sahf
push
rorb
mov
ret
enter
xor
jb
cmc
nop
ret
inc
stos
push
push
or
sbb
int
das
mov
push
push
popf
test
das
lret
cmp
icebp
int
loope
les
push
inc
ds
lea
out
mov
mov
rorl
testb
gs
mov
fildl
sub
pop
pop
mov
push
adc
push
jecxz
xchg
mov
sub
cmp
mov
pushf
sub
jmp
into
insl
push
outsb
sbb
sub
aad
xor
xor
cmpsl
fsubrl
add
jnp
push
lcall
movsl
adc
cmpsl
xor
cs
dec
cmp
push
or
pop
out
clc
call
jge
inc
or
push
popf
sub
cs
imul
iret
test
jp
xor
jp
pop
jmp
sub
inc
scas
shl
lea
mov
pop
subl
adc
imul
clc
xchg
inc
mov
pop
mov
lahf
lods
out
lcall
stos
cmp
fisubs
sarl
test
push
pop
add
int
cld
lock
shlb
ljmp
adc
sahf
loop
clc
lret
fadds
add
push
mov
test
gs
shll
pop
pushf
pop
push
ss
imul
imul
add
push
clc
jbe
mov
enter
in
cmpsl
mov
lods
or
inc
or
push
arpl
insb
dec
fdivs
gs
pop
inc
dec
js
add
xor
fisttpl
lahf
and
dec
in
test
icebp
fsubs
nop
fwait
dec
sti
or
mov
push
jp
int
or
ror
aad
lods
insl
xchg
ret
and
iret
fwait
jb
sub
push
sub
and
in
ficomps
dec
popf
add
pop
loope
jo
addr16
sbb
inc
ss
xlat
add
push
and
xchg
mov
int
loope
mov
sub
fistpll
mov
sbb
jl
lahf
pop
mov
mov
scas
iret
jae
or
jb
or
int
mov
xrelease
mov
pop
cld
xor
inc
mov
stos
inc
addr16
add
in
push
out
nop
pusha
imul
sbb
stos
subb
fstl
push
out
pop
mov
pop
inc
push
test
xchg
loopne
adc
sub
pop
jl
lods
dec
dec
out
add
mov
pop
gs
sbb
cmp
jae
out
push
xchg
repnz
jbe
scas
imul
xor
cmp
mov
cmp
xor
dec
fbld
sbbl
sub
lret
mov
ret
mov
mov
fistpl
mov
arpl
fisttpll
in
outsl
fsubrs
into
mov
and
les
cld
mull
cli
push
and
pop
popa
cmpsb
push
push
adc
pop
inc
test
sub
jmp
cli
lock
mov
cltd
mov
jecxz
stos
sbb
fwait
stos
sbb
rorl
fwait
jmp
push
and
cmp
inc
and
push
add
mov
fidivl
fxch
adc
cmp
jmp
icebp
popf
adc
shrb
xchg
xchg
mov
mov
cmp
mov
dec
bound
push
mov
testb
test
dec
or
dec
add
pop
inc
jns
and
or
mov
lret
out
mov
jno
pop
jo
and
dec
add
fbld
fnstcw
cmp
or
xchg
xor
mov
movsb
lock
jns
lret
cmp
pop
xchg
in
movsb
enter
ja
pop
fisttps
shlb
sub
mov
mov
xchg
cmp
mov
shll
or
roll
jl
rolb
sub
sahf
cld
lock
xchg
and
sahf
push
ljmp
rorb
insl
imul
fnsave
jl
fmul
xlat
and
inc
jge
lcall
jge
mov
leave
ds
mov
pushf
aam
icebp
int
sbb
shrl
or
enter
and
in
sub
xlat
inc
mov
arpl
sub
fldt
shr
loop
xchg
movsb
sub
cmp
fisubrs
mov
dec
xor
or
mov
mov
out
sbb
out
mov
jo
ds
shll
push
dec
pop
fstl
mov
imul
mov
and
xchg
and
inc
xor
jne
push
xor
sbb
add
cmp
fistpl
addr16
push
dec
push
push
and
aad
stc
jno
rcrb
imul
and
cmp
and
mov
mov
xor
call
lock
dec
mov
mov
cmp
mov
and
jo
addr16
mov
or
mov
mov
aaa
shlb
out
leave
sbb
xchg
xchg
adc
outsl
fcoml
xchg
out
cmpsb
dec
rcl
and
jmp
mov
push
xchg
sub
ljmp
pcmpgtb
std
insb
test
ss
pop
cmpsl
inc
daa
mov
mov
xchg
pop
push
arpl
pop
out
es
xlat
push
mov
mov
cld
inc
push
or
and
add
push
inc
sti
fcomi
add
popf
pop
cmpl
int
scas
stos
scas
mov
push
loop
sub
inc
jnp
aaa
push
pop
mov
jbe
cmpsb
pop
enter
or
push
xor
mov
in
pop
or
push
nop
faddl
arpl
fldcw
dec
gs
add
aaa
mov
inc
shll
jno
jg
fstpl
int3
and
mov
cli
mov
cmp
test
out
int
mov
and
fdivp
cld
fiadds
push
aam
outsb
in
call
ljmp
movb
xor
lret
cmc
mov
movsl
loop
fmul
mov
sbb
mov
lds
lcall
idivl
pop
mov
xchg
out
stos
and
test
int3
or
popa
rcl
push
jmp
test
sbb
insb
outsb
loopne
push
push
test
cmp
sarb
cs
out
jnp
and
xchg
scas
and
ret
cmp
mov
scas
scas
and
leave
pop
sub
daa
jne
insb
testb
loop
in
in
xor
jnp
xor
mov
call
adc
dec
repnz
enter
mov
test
faddp
jno
fisubrs
xor
scas
pop
filds
je
fdivrl
fs
add
das
lods
fstpl
adc
fwait
stc
mov
or
pusha
enter
fcoml
repnz
jno
inc
pop
or
mov
dec
pop
clc
xor
loop
cmpb
mov
scas
cmp
insl
fistpll
sub
je
mov
repnz
aaa
loopne
fistl
and
mov
jo
scas
and
ss
scas
push
sub
not
in
xor
mov
xchg
pop
sahf
lret
clc
aad
addr16
jo
sbb
lret
xchg
xor
pop
daa
mov
data16
outsb
xor
sub
pushf
or
movsl
loopne
lret
mov
mov
int
mov
push
sub
adcb
adc
cmp
incb
mov
clc
xchg
in
inc
and
sti
stos
adc
pop
je
pop
test
dec
mov
jns
push
adc
push
lret
sti
or
pop
mov
hlt
es
popa
jb
lret
cmp
cmp
sbb
inc
repz
psrad
loopne
aaa
arpl
sub
testl
fdivs
repz
adc
xor
add
loope
and
mov
sbb
xor
mov
repnz
jb
rorb
xor
adc
add
cmp
negl
lods
add
xchg
mov
adc
fs
addr16
or
inc
and
in
xchg
add
daa
xchg
mov
adcl
xchg
inc
hlt
cs
aad
and
inc
dec
xlat
test
jne
pop
jg
jge
jnp
pop
cmpsl
xor
add
rorb
mov
jne
pop
stos
push
cmp
cmp
jb
test
lcall
decb
movsb
dec
enter
idivl
lods
xchg
or
notl
push
mov
push
repnz
or
dec
adc
daa
test
sub
movsl
insb
nop
clc
xor
sbb
pop
xor
pop
cmp
jno
outsb
addr16
pop
cmp
pusha
and
sahf
sub
xchg
jne
xor
popf
imulb
js
aad
enter
ret
jno
insl
aad
xor
sub
loopne
je
imul
cwtl
or
xor
jno
orl
out
mov
cs
mov
cmp
nop
int
fwait
add
adc
out
dec
frstor
outsl
aam
scas
lret
out
mov
mov
mov
rorb
insb
push
dec
sbb
scas
insb
sub
fidivrs
fsubs
addr16
les
mov
mov
push
or
mov
je
push
pop
jmp
cli
jae
mov
loopne
cwtl
in
arpl
add
jecxz
pop
xchg
ret
stos
insl
cs
cld
sub
fnstsw
cmp
sbb
xchg
or
mov
dec
xchg
arpl
and
inc
cmp
jne
xor
adc
dec
lea
adc
fwait
jnp
sar
push
flds
andb
or
lock
stos
out
repz
test
sbb
sub
imul
xchg
xor
sahf
inc
dec
jns
add
and
fs
jmp
dec
push
int3
xchg
std
icebp
and
clc
aaa
cli
or
orb
fs
cltd
stos
enter
icebp
mov
xor
xor
xchg
out
or
and
call
pop
mov
fistps
mov
xchg
icebp
pop
je
cltd
and
or
add
cmpb
inc
addr16
out
test
les
pop
pushf
dec
push
mov
cli
inc
loopne
jmp
lcall
out
xor
inc
mov
sbb
mov
jmp
jg
shl
jne
mov
in
or
std
xchg
imul
jecxz
inc
and
or
cmp
jg
add
fnsave
inc
cmp
xor
loop
cmpsl
stos
aam
push
or
mov
cld
movsb
inc
aas
or
fmull
sbb
arpl
adc
adc
mov
pop
rcll
imul
mov
icebp
lcall
lcall
lods
fdivrl
xlat
pop
fsubrs
xchg
pop
mov
adc
inc
mov
shrb
push
out
and
lea
mov
aad
push
xchg
mov
pop
and
sti
test
test
retw
repnz
inc
out
xor
mov
mov
fbstp
stc
loope
cmc
loop
gs
push
xor
xchg
inc
mov
mov
fwait
push
or
stos
push
fwait
stc
cmp
dec
fsubrl
dec
stos
mov
lds
aam
push
aad
imul
pusha
pop
mov
shl
adc
icebp
push
shrl
sub
inc
sbb
popa
jo
mov
cmp
es
lahf
mov
std
ss
pop
pop
aaa
mov
popa
add
pusha
mov
cld
aam
add
dec
stos
loop
or
sbb
ret
pop
jae
aaa
xor
pop
add
xchg
in
adc
mov
ror
sub
mov
popf
cli
cmp
and
sub
mov
out
inc
rol
imul
sbb
xor
mov
inc
in
dec
adcl
into
cld
arpl
scas
cmpsb
and
cmc
jge
inc
stos
xor
lcall
add
mov
jmp
mov
ds
adc
repz
stos
test
popf
xor
out
lods
pushl
aam
mov
lret
in
jae
sbb
cmp
lods
pop
testb
sti
pop
pop
pop
movsb
ljmp
bound
inc
mov
mov
xchg
std
pop
rclb
movsb
test
or
mov
push
insb
dec
push
xlat
mov
xchg
cmp
stos
cli
and
enter
dec
xrelease
loopne
and
ret
in
jge
loope
in
mov
pop
hlt
es
inc
add
add
pop
outsl
daa
test
sbb
pop
outsl
push
out
imul
pop
hlt
dec
xor
sub
xor
lcall
jg
je
inc
inc
pop
sbb
mov
and
or
fadds
in
xchg
pop
popf
lahf
popf
andb
mov
lea
mov
pop
int3
mov
std
adc
adc
sbb
out
in
aaa
xor
jge
adc
dec
and
mov
fldenv
sbb
mov
xchg
pop
ficompl
shl
sbb
pop
cli
lahf
into
inc
ss
push
dec
xlat
shlb
mov
inc
jbe
es
mov
leave
xor
inc
mov
shlb
or
add
ror
and
cmpsl
call
mov
ds
jecxz
out
cmp
add
add
pop
add
adc
mov
mov
mov
pop
shr
push
cs
push
dec
xchg
cli
stos
ja
mov
arpl
jg
loopne
add
adc
sbb
sbb
jns
mov
mov
cmpsb
mov
stc
sbb
push
shlb
push
jo
push
mov
jecxz
cmpsb
jno
inc
iret
jnp
js
mov
fcomps
aam
dec
arpl
sbb
rcll
rolb
sbb
xor
ja
mov
data16
xchg
pop
xchg
jb
push
jl
cld
dec
repz
jo
adc
jb
push
aad
and
adc
in
and
fwait
push
test
push
pusha
jg
push
pop
push
inc
call
sbb
push
sbb
mov
out
dec
or
push
scas
sbb
movsb
leave
and
or
popa
sahf
sub
sahf
inc
mov
cltd
xchg
icebp
mov
lret
cmpsb
mov
xor
mov
jne
pop
xor
loopne
clc
pushf
xchg
xchg
call
add
jge
lds
add
mov
das
mov
and
push
sbb
sub
cmp
mov
push
repnz
mov
adc
pop
sbbb
insb
pop
sti
and
iret
mov
or
cmp
imul
cmp
xor
arpl
sub
or
stc
push
ja
sub
pushf
in
repnz
fisubrs
mov
fildl
mov
dec
mov
pop
popf
xor
xchg
jb
push
repz
je
cltd
pop
lock
cmp
sahf
xor
push
inc
inc
cmp
lret
jle
fdiv
std
outsl
int
cltd
cmpsb
mov
adc
inc
mov
ds
rclb
xlat
pshufw
mov
sub
fiadds
xchg
mov
in
nop
mov
lret
es
je
jno
daa
mov
cmp
jb
lcall
mov
sbb
xlat
imul
repnz
in
ljmp
jl
pushf
cld
aad
loope
add
sbb
mov
dec
aad
adc
push
sbb
jl
push
flds
std
lock
cmp
lea
and
add
adc
push
std
enter
movsl
ja
inc
jmp
inc
pushf
daa
push
adc
loopne
or
dec
pop
dec
push
sub
sbb
jnp
sub
add
fisubrl
push
lret
arpl
es
pushf
nop
rolb
js
xor
mov
push
mov
pop
addr16
mov
dec
cli
fcomi
push
pop
mov
adc
test
lret
ret
addr16
lock
push
jo
inc
int3
fdivl
cs
imul
cmp
lret
xchg
mov
hlt
jle
xor
xor
mov
shlb
lock
sub
sahf
ljmp
add
mov
cmp
push
sar
iret
cmp
loope
xor
and
push
out
hlt
adc
das
test
jecxz
lret
mov
iret
stos
pop
jmp
je
pop
add
mull
cwtl
lret
out
cmp
sub
mov
iret
or
push
out
test
fs
mov
inc
push
in
mov
leave
add
int3
sub
in
sbb
cli
in
dec
bound
jns
rol
xchg
sbb
xchg
mov
push
in
mov
jmp
orb
js
sbb
and
xchg
pop
fwait
mov
xchg
push
fisubs
arpl
sar
push
xchg
in
sub
sub
jae
push
repnz
dec
mov
inc
aad
cmp
inc
loope
aad
pop
inc
fldln2
cmpsl
lods
loopne
xlat
imul
sub
shr
jp
and
js
dec
dec
aam
mov
imul
lds
test
bound
mov
mov
cmp
xor
out
xor
cmpsl
sbb
sbb
mov
sbb
lock
sub
push
and
aam
js
ljmp
sub
jnp
mov
adc
sub
aaa
push
inc
ret
mov
and
jecxz
sub
mov
cs
shl
popa
dec
aaa
pusha
enter
sahf
add
lahf
mov
mov
mov
int
sub
mov
int
test
bound
and
xchg
das
push
stc
xchg
cmc
cltd
imul
pop
jp
addr16
popf
push
sbb
lahf
lret
push
stc
insb
imul
std
stos
or
ret
mov
sbb
out
cs
mov
test
xlat
ss
pop
jo
or
aam
js
lods
jns
adc
inc
pop
jnp
xor
ret
orl
inc
pop
in
incl
nop
dec
add
ret
loope
mov
cmp
mov
popa
icebp
pop
or
loop
jb
int
popf
lret
ljmp
mov
aam
jge
sbb
insl
movsl
addps
sbb
inc
pop
fldl
add
aad
cmp
enter
out
lret
lret
push
ja
mov
loopne
mov
cmp
mov
test
and
dec
test
lods
sub
sbb
xchg
inc
lds
add
outsb
mov
sub
jnp
pop
sub
cs
lcall
jecxz
mov
mov
jns
dec
dec
les
pop
dec
or
sbbb
cld
je
cwtl
add
mov
sub
dec
pushf
xchg
sbb
or
or
jns
pop
cmp
add
push
jp
sbb
mov
push
or
cli
pusha
aas
push
in
int3
aas
fiadds
mov
dec
in
imul
scas
add
push
icebp
fisubs
cmp
adc
inc
orl
lods
inc
fdivr
inc
cmp
cs
loope
out
lahf
stc
mov
or
mov
das
cwtl
mov
stos
sbb
and
add
ret
push
sbb
push
bound
mov
inc
and
mov
add
nop
sub
fisubs
mov
popa
jne
push
push
pop
shlb
cmp
xor
out
mov
repz
pusha
mov
push
icebp
popf
rclb
icebp
xor
push
lret
into
sub
add
mov
xchg
subb
pop
loop
mov
inc
sahf
adc
jge
in
shll
ja
loope
lods
hlt
gs
push
dec
notb
add
xchg
data16
jns
jae
sbb
in
mov
bound
dec
lcall
test
das
repz
pop
movsb
lahf
mov
test
xor
pushf
hlt
add
outsb
jle
das
inc
push
dec
push
fadds
clc
icebp
xchg
inc
pop
aaa
popf
mov
cltd
enter
mov
aam
dec
or
dec
int
aad
dec
lcall
push
fistl
js
sub
test
in
push
loopne
cld
pop
sbb
inc
movsb
mov
fsubp
mov
add
lea
cmc
mov
scas
mul
rcl
mov
push
scas
jp
push
aam
test
cli
mov
aaa
xchg
leave
loopne
hlt
jne
xchg
stos
inc
jge
sub
mov
fsts
icebp
rol
cmc
call
dec
mov
es
aad
movsb
fldt
mov
inc
stos
int3
arpl
ret
dec
dec
iret
cmp
sbb
mov
fstps
and
pop
push
shll
sahf
and
stos
jle
push
pop
or
test
push
stos
push
push
mov
ja
sbb
dec
jmp
dec
jp
xchg
je
inc
inc
jle
mov
in
pop
adc
adc
mov
push
jg
cmp
sub
lea
pxor
add
cmp
pop
js
pop
add
rorl
or
rolb
aas
addr16
and
and
leave
pop
flds
mov
jb
imul
push
icebp
push
sbb
mov
ja
lods
sahf
or
cwtl
jae
data16
outsb
pushf
push
rolb
dec
jb
mov
pushl
xchg
shll
xor
mov
insb
push
shll
sub
test
pop
push
cmc
inc
outsb
mov
jp
out
jmp
cmp
sbb
subl
push
sub
sbb
mov
push
push
aam
cmp
addb
insl
or
dec
push
xchg
mov
mov
xorb
loop
push
add
push
xlat
sahf
in
sbbb
or
ret
int3
daa
adcb
movsb
sub
loop
pushl
lahf
test
jb
in
pop
xchg
add
pop
fs
out
fwait
in
mov
cmp
pop
shrb
jnp
inc
xchg
sbb
xor
mov
sbb
gs
or
stc
test
call
jmp
addr16
and
pop
fwait
dec
mov
mov
jne
je
jns
mov
xchg
pop
sbbb
orb
dec
out
xor
std
gs
sub
jge
pop
ss
inc
push
jmp
cmpsb
jp
ljmp
notb
fdivrs
enter
icebp
lock
lock
cmp
push
das
mov
cwtl
scas
cmpsb
add
rep
mov
or
pushf
rcr
aas
or
fmul
jo
mov
fmull
inc
dec
ret
adc
cmpsb
pop
das
cmpb
cmp
outsl
cmp
xor
mov
mov
ja
jecxz
in
addl
xchg
ret
in
in
jbe
sub
flds
jno
aaa
xchg
ja
sub
and
adc
pop
xlat
or
mov
pusha
lds
addr16
inc
lods
jns
mov
iret
fistpll
lret
mov
mov
ljmp
adc
mov
test
jl
test
sbb
nop
mov
mov
lock
shrb
loopne
inc
outsl
cmp
mov
mov
mov
inc
loop
dec
sbb
xchg
jl
cmp
shr
stos
fadds
sbb
mov
jp
jb
les
imul
jnp
sub
bswap
leave
popa
or
pusha
inc
test
stos
inc
stos
and
dec
xchg
xchg
scas
arpl
adc
popf
data16
insl
mov
pop
pop
js
and
mov
add
loop
pop
push
xor
ret
aam
bound
loopne
inc
or
add
jnp
addr16
add
inc
leave
test
int3
or
int3
pop
push
pop
cmp
ret
cltd
movsl
ljmp
sbb
shr
pop
into
scas
shr
sbb
jmp
in
aad
fcomip
insb
fldt
sub
loop
test
call
and
scas
cmp
jbe
repnz
in
sbb
adc
push
cltd
aas
insl
jnp
inc
adc
xchg
xor
add
fsubrp
cmp
fidivrs
xor
aaa
jl
test
push
test
add
lret
outsb
mov
fcoml
movsl
mov
inc
push
loop
loopne
les
scas
xchg
ret
dec
test
jle
test
std
xor
or
in
add
jo
add
pop
mov
dec
in
add
mov
fists
sbbw
arpl
push
jp
jae
and
push
sbb
int3
mov
xchg
add
cmp
sbb
mov
outsl
test
out
repz
dec
test
iret
icebp
inc
xchg
inc
dec
ss
xor
push
repnz
mov
lea
mov
jge
rol
test
sbb
cmp
data16
shl
aas
lret
add
mov
lret
outsl
xor
call
loopne
adc
in
lds
fidivrl
movsl
lods
fsubrp
rcr
xchg
std
daa
pop
iret
push
mov
jne
andl
sub
push
loope
jno
mov
jge
scas
aam
shll
mov
push
lret
cmp
inc
mov
mov
insl
pop
mov
jmp
dec
sub
movl
lods
jmp
dec
cmp
hlt
pop
lcall
rorl
inc
in
jge
push
pop
inc
jle
movb
xchg
daa
aad
pop
jl
mov
xor
sbb
test
cs
fisubs
mov
push
pop
sub
notb
rorl
frstor
sub
dec
pushl
int
mov
and
popf
xchg
jle
scas
pop
mov
xor
and
push
call
mov
cmp
jl
inc
loop
push
cltd
adc
mov
mov
popa
jge
idivl
lods
mov
sub
add
push
jmp
jmp
jae
lret
scas
cmp
mov
cmp
enter
les
cmp
mov
movsb
mov
fs
cmp
xor
sahf
rclb
mov
xchg
in
mov
adc
pop
mov
mov
popf
and
and
fldl2e
xor
dec
jge
shrb
shlb
fsubrs
mov
jne
xor
xor
out
add
xchg
adc
and
pop
pop
popa
mov
sarb
outsl
addr16
xchg
notb
mov
call
out
lods
scas
mov
lcall
jl
and
adc
sbb
lahf
lret
inc
bnd
fsubs
fnstenv
jb
xor
sub
je
sbb
movsb
sbb
cmp
jl
jle
ljmp
jno
mov
xchg
std
out
mov
mov
dec
xchg
adc
xor
idivl
adc
popa
or
jne
hlt
lcall
inc
cmp
dec
lea
xlat
aas
test
push
sti
mov
mov
xchg
xlat
inc
xchg
inc
mov
ret
inc
inc
jle
aas
pop
test
mov
or
test
lret
xchg
insb
cmp
lcall
xchg
xchg
lods
inc
sti
mov
repz
xor
xor
xchg
pop
cmp
sahf
pop
inc
jmp
roll
addr16
out
cld
cmpb
xlat
fdivrs
mov
faddl
dec
or
sbb
xchg
orl
cmpsl
mov
sub
dec
in
jnp
lret
inc
jmp
inc
pop
js
addb
movb
pop
in
pop
cmp
out
jnp
xchg
cltd
arpl
adc
in
mov
ds
dec
arpl
or
jmp
jmp
and
add
push
and
sub
and
sub
cld
hlt
pop
push
jmp
inc
pop
and
mov
pusha
xor
push
ljmp
loope
shll
push
and
and
push
adc
rcrb
call
jl
jmp
aas
inc
ja,pt
push
xor
inc
pushf
mov
pop
mov
jo
movsb
inc
and
push
pop
xor
push
xor
movb
out
nop
das
js
inc
push
stc
add
xor
adc
xchg
sbb
jmp
dec
jo
pop
pushf
adc
xor
and
popf
icebp
push
xchg
jne
iret
mov
enter
mov
andl
inc
popa
popf
ret
dec
push
mov
dec
addb
jmp
add
test
in
lea
gs
fs
dec
mov
cmp
lods
outsb
jecxz
arpl
outsl
pop
xchg
rclb
add
inc
scas
xchg
add
mov
pop
adc
and
mov
shlb
enter
mov
push
fwait
leave
lret
push
cli
pop
sahf
mov
clc
cmpsl
jge
jg
pop
xor
xchg
icebp
pop
adc
xchg
imul
lds
cmp
in
inc
les
out
pushl
ds
cmp
inc
cli
xlat
push
cltd
mov
adc
jne
cmpsl
mov
hlt
sbb
cmc
pop
cld
sbb
out
push
add
lret
gs
or
loop
jnp
clc
jno
mov
mov
and
bound
mov
and
scas
in
scas
sahf
mov
xchg
push
jae
or
das
fs
faddp
or
out
xor
push
xchg
outsb
mov
mov
ds
outsl
dec
dec
cmpb
bound
aam
ret
stos
sub
add
popa
mov
outsb
dec
mov
movsb
xchg
test
jp
aam
push
lea
pop
cli
loope
xor
add
bsr
push
bound
push
mov
pop
jecxz
add
imul
mov
int
in
jo
jle
push
outsb
push
into
jo
inc
pop
imul
push
andb
int
lock
xlat
cmpsl
call
ja
mov
mov
xor
mov
push
add
mov
dec
pop
xchg
call
inc
add
push
mov
xor
sbb
inc
push
pop
add
xor
aad
cmp
cltd
loopne
rolb
mov
pop
and
outsl
push
xor
cmpsb
cmpsb
pusha
pop
fwait
lret
cmp
inc
outsl
mov
loopne
arpl
int3
add
mov
mov
clc
jp
mov
sub
jmp
ret
add
jbe
notb
lret
int
mov
mov
add
adc
push
popa
push
mov
fmull
mov
je
sub
adc
push
jne
inc
pushf
imulb
jmp
jmp
xchg
lcallw
or
and
sti
scas
notb
out
call
add
es
and
mov
dec
js
das
shlb
jno
inc
sub
es
sub
xchg
inc
out
mov
jno
add
aam
fidivl
jle
mov
shll
adcb
rcr
rol
data16
and
dec
inc
scas
and
test
mov
mov
daa
xchg
in
sub
lret
adc
inc
sub
lock
nop
sub
arpl
xchg
xchg
nop
sub
pop
jnp
dec
pop
add
cltd
nop
jb
mulb
cmpsl
cmp
jle
or
imul
outsb
xchg
cmp
sub
sbb
adc
push
pop
xor
sbb
jmp
or
fs
fists
mov
rorb
jae
xchg
leave
repnz
jge
mov
dec
push
das
mov
dec
mov
pop
and
xor
or
inc
push
jp
inc
push
stc
in
or
mov
add
movsl
and
or
adc
xchg
leave
and
pop
leave
add
lea
jb
fldcw
in
insb
sbb
ss
leave
aad
jmp
pop
enter
adcb
lcall
sbb
push
test
rcll
mov
or
push
jp
testb
scas
xor
cld
fisttpll
hlt
mov
daa
lcall
inc
ffree
aam
orb
or
sub
xchg
cmp
mov
inc
cld
test
xchg
adc
test
push
cmp
cli
ret
sbb
or
push
mov
lret
sub
mov
sub
and
xchg
loopne
movsl
outsl
push
mov
dec
shrl
jo
out
cmc
mov
adc
cwtl
push
outsl
icebp
loopne
fcompl
nop
xchg
lcall
insl
pop
lock
das
xorb
pop
xor
mov
mov
inc
mov
mov
push
js
test
mov
and
fwait
mov
mov
ret
repz
loop
repnz
out
in
cmp
push
lods
pop
xor
aas
or
mov
mov
pop
xchg
push
ret
test
inc
lret
roll
neg
and
cmc
pusha
sbb
das
and
out
xor
sbb
dec
lret
jp
xchg
cli
jecxz
cmp
mov
or
inc
psubq
mov
xor
or
xchg
add
repnz
and
jge
mov
xchg
xor
push
xchg
sbb
jnp
jae
mov
xchg
sbb
push
jp
mov
xor
out
xchg
mov
push
cmp
jno
dec
gs
sti
or
xchg
xchg
out
cmc
imul
cld
sub
je
je
dec
iret
adc
fcmovnbe
fidivrs
dec
das
addl
mov
xchg
bound
xchg
nop
addl
dec
lods
mov
std
aad
lea
int3
pop
push
xchg
scas
push
roll
sti
ss
and
dec
inc
adc
shrb
mov
dec
mov
sub
cmp
cmpl
and
sbb
in
sub
sub
jae
xchg
mov
add
inc
cmpsb
cmc
lea
imull
das
push
subb
lret
sub
mov
jae
mov
jno
mov
jmp
aaa
lea
dec
pop
mov
xchg
les
add
movsl
inc
int3
aad
push
out
lds
imul
mov
sub
aaa
add
mov
inc
push
add
mov
test
and
sub
inc
push
fnstcw
shrl
add
dec
jnp
mov
repz
aaa
insl
cmpsl
xchg
xlat
pop
loop
sub
aaa
sub
xlat
push
and
inc
sub
pop
sbb
sub
add
std
test
sbb
outsb
xlat
idivb
xor
dec
mov
add
pop
mov
cld
cld
cmp
scas
imul
js
add
push
roll
in
dec
xor
lea
pop
mov
lahf
pop
lret
mov
cmp
dec
or
xchg
xchg
jmp
xlat
push
add
icebp
and
jp
cwtl
das
or
and
inc
sahf
ret
pop
enter
sbb
stc
faddl
xchg
sbb
adc
mov
or
icebp
adc
dec
fwait
inc
xchg
in
push
sarl
push
push
mov
out
loope
ja
mov
mov
pop
xchg
orl
into
shl
cs
cmp
pusha
dec
mov
int
clc
jmp
testl
push
cmp
push
sbb
jns
aam
fisttpll
jne
adc
jnp
push
pop
lcall
pop
das
pop
mov
stc
jmp
aas
clc
xchg
inc
in
mov
jecxz
and
jbe
jge
cli
xchg
jb
test
in
andl
aam
es
cmp
jno
stos
cli
mov
mov
mov
sar
add
cmpsb
rcl
mov
fimull
pop
add
outsb
cmp
ja
xchg
dec
aad
aaa
jns
jne
push
xchg
and
pop
xchg
lret
andb
fnsave
in
aam
pop
lock
in
xchg
stos
sbb
cwtl
inc
movsl
xor
imul
mov
ds
add
or
mov
xor
in
sub
out
adcb
jo
clc
clc
dec
mov
or
cmp
leave
fstpt
or
xchg
cmc
xchg
stos
xorps
mov
jmp
jle
sarl
sbb
pop
sbb
sbb
bound
aas
cltd
pop
into
je
mov
add
int
dec
cmpsl
js
cmc
add
push
or
fs
pop
push
dec
fsubs
hlt
inc
in
jmp
outsb
mov
add
mov
data16
dec
repz
dec
stos
mov
lock
cwtl
outsb
dec
cmpsl
sbb
pop
xor
add
mov
mov
fsubrl
push
sub
repnz
fcoms
pop
dec
arpl
add
in
jbe
je
push
lret
pushf
adc
cwtl
cmpsb
jecxz
test
stos
in
dec
add
sahf
cmp
xchg
adc
pusha
aam
inc
cmp
sub
mov
insb
je
loope
sbb
mov
mov
jle
aad
ss
xchg
mov
mov
ljmp
mov
aad
and
sbbl
push
or
jns
xchg
add
mov
lea
dec
sahf
cwtl
shr
int3
gs
jbe
sgdtl
mov
push
aaa
icebp
sub
pop
scas
hlt
loope
and
out
lret
or
fmul
shl
mov
jno
cmp
mov
inc
sub
fcmovnbe
push
xchg
repz
jo
sbb
pusha
jne
inc
repz
jbe
cwtl
and
inc
cltd
adc
xchg
inc
daa
inc
sbb
cmpsl
add
neg
cmp
or
mov
scas
xchg
in
lds
or
sti
cmp
setb
jecxz
les
pop
add
dec
jne
shrb
xchg
sbb
lret
out
daa
jnp
push
testb
and
mov
nop
mov
hlt
fs
dec
sub
inc
inc
fwait
push
daa
aam
jno
ss
add
scas
ds
jne
cwtl
cmpsb
push
pop
arpl
xchg
xchg
jae
adc
push
mov
mov
dec
pushf
mov
add
pop
mov
out
cmpsl
push
fcomps
mov
adc
mov
and
xchg
xchg
sti
add
xchg
mov
jno
cltd
xor
ret
jmp
inc
jo
sub
shlb
pop
int
icebp
mov
xchg
lahf
mov
ljmp
mov
adc
inc
lods
popa
dec
test
push
test
cmp
sti
pop
sbb
shrl
xorl
jge
nop
and
sbbb
inc
mov
out
inc
sbb
decb
hlt
jle
shl
cs
aas
into
nop
fmuls
inc
mov
pop
mov
inc
cmp
sub
aaa
loope
mov
lcall
push
cmp
testl
pop
mov
sub
ret
push
outsb
nop
fst
cmpsb
xor
add
les
jbe
lcall
or
or
xchg
or
jne
pop
shr
mov
mov
or
xor
mov
adc
das
cltd
arpl
pop
dec
mov
or
pop
dec
pushl
in
aas
sbb
test
add
add
mov
push
push
aam
out
push
xorl
pop
mov
lcall
jns
imul
loope
ret
andl
xor
lcall
pusha
xchg
push
ja
xchg
pushf
dec
inc
cli
aam
stc
mov
pop
pop
out
loop
push
push
and
jle
inc
add
ret
push
adc
das
stc
iret
jl
jge
sub
xchg
pop
xor
arpl
out
movsl
xlat
or
xor
fsubl
xchg
sbb
sub
inc
push
mov
fcmovnu
jmp
out
gs
and
pusha
dec
pop
dec
imul
stc
jnp
jno
sbb
sbb
xor
sahf
cmp
xchg
jbe
pop
push
out
xchg
mov
in
inc
addr16
out
dec
rorb
daa
lret
into
jo
outsb
leave
or
adc
das
aas
adc
rol
pop
into
adc
or
jle
ljmp
lods
jmp
data16
out
test
dec
sub
adc
fistpl
out
cwtl
mov
xor
pusha
lds
cmp
jo
stos
mov
lahf
lahf
mov
pop
dec
pop
repnz
mov
adc
sub
cmp
xor
mov
outsl
jno
xchg
push
mov
jb
std
jl,pt
shll
mov
shlb
lock
pop
bound
push
lods
data16
pop
icebp
rolb
push
andl
sbb
pop
test
pop
test
subl
ret
imul
and
aas
adc
xchg
popa
mov
pop
pop
test
inc
mov
insb
jae
insb
xchg
lods
addr16
call
xlat
hlt
sub
mov
pusha
mov
cmpl
adc
and
add
imul
gs
movsl
lods
je
mov
out
fisttpl
adc
out
lock
aad
ret
push
xchg
imul
xchg
icebp
dec
shlb
mov
dec
sahf
xchg
in
fsubrs
das
mov
mov
lret
int
insb
xchg
jno
pop
cs
inc
ja
cmp
cmpsb
xor
fucomp
adc
hlt
call
cmpsl
xor
push
sti
inc
rorl
pop
loop
mov
mov
fistpll
cmp
daa
popa
jecxz
jp
pop
jmp
mov
xchg
and
mov
aas
rorb
es
pop
movsl
cld
sahf
dec
lcall
das
xor
scas
das
jns
or
pop
jmp
bound
cmpb
cmp
lea
sbb
jle
pop
pop
cmp
call
xchg
icebp
out
rclb
xchg
in
add
add
mov
shll
cltd
in
sub
lret
pushf
das
mov
insb
xor
sub
fwait
mov
mov
shrl
movsb
inc
mov
or
mov
in
call
jecxz
out
das
and
orb
push
dec
push
mov
fdivl
ljmp
sub
jmp
dec
lcall
subl
mov
ret
pop
mov
push
loop
jg
sbb
add
mov
add
or
xchg
fcompl
out
out
mov
pop
es
popa
in
inc
add
mov
aad
loope
sarb
add
and
add
jno
cmp
js
inc
les
out
sub
test
sbb
ret
xor
mov
mov
idivb
imul
shlb
xchg
inc
xchg
jnp
pop
mov
pop
lods
sub
push
cs
mov
jno
lahf
push
mov
pop
imul
insl
pop
mov
pop
iret
lahf
rolb
xchg
in
cmpl
es
aas
stos
pop
aam
mov
add
bound
adc
mov
cmp
fidivrs
ficompl
pop
mov
jmp
xchg
outsl
rcrb
fdivrl
cld
je
clc
ret
ss
dec
inc
orb
scas
xchg
sbb
mov
data16
cmpsl
dec
aaa
xor
out
push
shlb
mov
mov
pop
sub
adc
mov
test
xchg
popf
push
imul
sbb
push
push
or
jnp
mov
pop
pop
test
xchg
mov
mov
mov
arpl
shrl
add
sub
arpl
and
mov
sbb
adc
pop
fwait
sbb
push
lock
js
stos
cli
bswap
sub
pop
jle
push
or
in
pop
push
sahf
loopne
cld
cmp
out
imul
in
sbb
loopne
jnp
mov
dec
pushf
cmp
or
xchg
pop
imul
or
in
jns
pop
pop
xchg
dec
pop
mov
dec
mov
movsl
xchg
mov
scas
out
cmp
inc
cmp
bound
adc
add
pop
mov
shrb
imul
jb
cmp
cmp
clc
cmp
into
jp
mov
lock
scas
stos
add
jle
fcompl
mov
ficoml
aam
bound
imul
xchg
std
in
inc
int3
mulb
aaa
xor
movsb
cmpl
roll
mov
mov
test
les
jbe
mov
insl
or
mov
dec
sbb
cmp
add
adc
lea
mov
mov
and
mov
std
inc
mov
lock
aas
in
and
icebp
hlt
push
inc
xor
mov
and
cmpsl
and
xor
pop
xchg
jg
xchg
add
imul
outsb
push
enter
psrlq
leave
daa
ret
stos
bound
dec
jnp
fildl
daa
push
aad
mov
mov
inc
xlat
inc
jecxz
mov
imul
sti
stos
iret
in
mov
push
cmp
jb
add
pop
movl
inc
cwtl
xor
imul
add
pushf
pop
flds
cmp
pop
mov
sub
pusha
mov
dec
popa
adc
fdivs
xor
or
sub
outsl
mov
fcompl
movsl
sbb
insl
sbb
mov
loope
int3
push
stos
push
mov
daa
leave
mov
test
push
lret
cmp
xchg
mov
mov
ljmp
aaa
mov
iret
shrb
xor
mov
outsl
jl
or
outsb
add
and
adc
mov
adc
shll
inc
xchg
jl
lret
shll
aas
pop
jle
inc
leave
repz
cld
adc
pop
popa
decb
icebp
add
dec
aad
lods
push
sbb
sbb
iret
sbb
scas
and
mov
mov
pop
or
mov
lods
testl
testb
add
js
inc
jg
or
and
add
xor
xchg
xlat
inc
outsl
cmp
jge
les
fmul
mov
mov
mov
cmp
sub
xchg
imul
inc
jecxz
mov
jle
xchg
lods
adc
lea
jae
xor
rorl
insl
nop
sub
cmp
sub
xchg
stc
hlt
lea
dec
movsb
stos
mov
repz
mov
imul
test
mov
es
int3
lret
rolb
cltd
inc
orl
jg
data16
and
clc
aam
sbb
inc
cmpsl
cld
test
ljmp
xor
xchg
cmpsl
xor
stos
jg
movsb
addl
mov
scas
lods
sti
mov
cwtl
fmull
in
push
cltd
xchg
aad
stc
addr16
lcall
lods
das
stos
lret
addr16
cmp
mov
test
pushf
cmp
bound
pusha
fwait
pop
sbb
out
test
call
adc
mov
inc
sub
xchg
push
fcomps
fisubrs
bound
push
mov
push
adc
lods
and
int
pop
inc
add
lret
pop
inc
movsl
adc
fiadds
test
jb
movsb
cs
repz
movsl
ja
insl
cmpsl
pop
jne
popa
jb
add
shlb
mov
jmp
pop
arpl
push
mov
pop
sahf
lds
add
cli
sahf
jb
cltd
pop
adc
xor
hlt
push
mov
dec
cmp
xchg
jbe
mov
aam
xor
sub
jg
je
add
insl
test
fcomi
pop
cwtl
pop
sbb
jmp
mov
outsl
sbb
mov
pop
cmp
inc
mov
xchg
and
mov
pop
push
in
shrl
popf
jbe
jecxz
dec
jae
sahf
aam
mov
adc
sbb
xor
mov
push
xor
in
add
cmp
jmp
push
jg
je
arpl
adcl
pushf
and
push
add
push
jg
mov
lret
dec
push
jge
orl
adc
mov
sub
inc
adc
xor
mov
inc
dec
loopne
cmc
jnp
mov
jns
popf
scas
stos
lds
cli
popa
mov
dec
and
push
mul
data16
stc
add
js
out
fdiv
cltd
push
xchg
sti
fwait
jge
les
imul
popa
pop
shr
cs
dec
adc
adc
repz
mov
pusha
mov
in
pop
fcmovnu
es
outsb
push
lods
add
add
pop
or
and
cmpsb
rorb
inc
arpl
shrl
or
shl
scas
std
leave
jecxz
arpl
iret
test
rol
lcall
movsb
in
or
push
or
ss
sbb
xlat
in
aam
stc
mov
insl
ficoml
sbb
int3
fstl
push
sti
mov
sti
push
add
mov
into
loope
mov
cli
mov
fldt
cmpsb
inc
push
sub
pop
inc
push
inc
fldcw
inc
or
xor
add
sbb
xor
cwtl
dec
mov
loopne
test
imul
xchg
dec
popl
test
push
inc
icebp
scas
jge
jno
lret
adc
mov
repnz
cmp
scas
inc
fdiv
mov
jbe
leave
mov
xor
jecxz
jb
int3
sbb
insl
outsl
cmc
mov
inc
mov
or
dec
fistps
stos
rcl
std
in
ret
mov
dec
or
les
dec
xchg
mov
lahf
sbb
sbb
mov
adc
pusha
mov
push
xor
sub
sbb
pop
cwtl
push
add
movsb
jmp
test
mov
mov
and
popa
push
inc
sbb
jle
shrl
sub
ds
adc
cs
push
add
stc
push
sbb
mov
dec
imul
lcall
push
lods
pushf
inc
xor
popa
adc
adc
sbb
push
sbb
xchg
push
mov
dec
mov
pop
sbb
lods
sbb
in
lock
pop
push
mov
pop
rolb
jle
vpcomd
or
mov
sub
inc
sbb
jb
insb
jns
shr
shll
lret
or
shlb
loope
cmpsb
jle
cld
inc
hlt
sbb
jne
push
fbstp
cmp
ss
xor
movsb
dec
pop
push
fs
fs
mov
push
xchg
xor
out
add
arpl
mov
cmpsb
pushf
iret
fdivrl
inc
clc
pop
push
xlat
negl
notb
ljmp
or
dec
scas
fiaddl
xlat
adc
xor
out
loopne
js
popf
orl
rorl
and
fildll
xor
das
adc
scas
pop
jge
jno
call
inc
add
loopne
scas
ds
push
jbe
test
xor
into
inc
cmpsb
fstpt
adc
xchg
dec
xchg
mov
lods
inc
xchg
inc
and
cmp
jp
jnp
pop
pop
sub
fcmovb
and
stos
test
jbe
lcall
popa
incb
jbe
ret
aad
in
jmp
inc
cmp
jmp
scas
int
std
movsl
popf
inc
mov
fdivl
cmpsb
loopne
adc
adc
cmp
cmp
jmp
nop
mov
mov
mov
clc
aas
inc
std
push
orl
fildl
inc
xor
ds
sub
ffreep
sub
pop
cmp
fprem
lcall
inc
and
icebp
int3
stos
mov
imul
and
out
fs
shufps
hlt
mov
loope
ficompl
repnz
push
adc
pop
push
adc
cld
inc
outsl
ja
rorl
int3
push
js
aaa
lods
sbb
add
jle
mov
push
repz
jp
push
add
bound
scas
mov
adc
ret
sbb
shr
jo
jo
adc
inc
mov
aam
cmp
popf
cmp
into
dec
cwtl
jmp
addr16
in
fisttpl
out
aas
cmp
pop
in
out
or
push
adc
in
jge
fstps
stc
mov
in
inc
rcr
out
fbld
pop
xlat
fcomi
mov
ret
pop
call
data16
stc
mov
dec
leave
inc
xchg
push
gs
pop
and
jge
ret
lock
sbb
stos
das
rorl
push
dec
push
es
push
fwait
dec
mov
fstpt
stos
cli
js
jp
dec
test
pop
jl
rcrl
mov
rorb
jae
dec
push
int
push
cmp
cmp
push
popf
data16
jnp
mov
inc
testb
repz
dec
xchg
mov
sbb
dec
inc
lock
xor
leave
mov
cs
iret
cltd
shl
dec
push
es
push
mov
mov
sti
stc
loopne
loopne
push
pop
test
outsl
out
aaa
imul
cld
int3
dec
mov
xor
lds
stc
fcmovnu
dec
addr16
sub
push
xchg
xorb
push
jbe
loop
mov
xchg
fwait
adc
or
fisubrl
out
cmp
enter
lods
rorb
mov
pushf
mov
imul
flds
mov
xchg
or
and
in
xor
pop
hlt
mull
adc
add
jl
loopne
cltd
out
faddl
mov
cltd
push
pusha
lods
add
xor
jmp
adc
xchg
in
sub
xlat
mov
lods
or
sub
jecxz
mov
add
push
mov
mov
jge
mov
hlt
cmpsl
ds
imul
cmc
enter
fs
ret
arpl
mov
cs
repnz
test
xlat
sub
out
not
add
aaa
pop
movsb
adc
test
pop
and
leave
jl
into
fcomi
cli
das
fdivp
movsb
testl
adc
leave
add
xchg
fdivrp
stos
push
jns
add
dec
inc
aam
mov
je
jecxz
imul
lcall
jge
pop
in
imul
test
sbbb
popf
sub
sahf
mov
pop
arpl
scas
and
and
mov
sub
adcb
xor
add
pop
add
jae
push
ret
jnp
dec
nop
test
dec
sarb
call
sub
mov
jg
enter
sub
push
cmp
xchg
push
push
add
sub
lret
int3
das
sub
outsl
add
or
lods
or
add
lods
scas
and
and
xchg
mov
pop
lret
shll
dec
and
xor
popf
lds
addr16
cli
sbb
xchg
aad
pop
xor
jge
jns
es
rorl
xchg
mov
xlat
cwtl
mov
mov
dec
out
fwait
arpl
popa
pop
push
andl
sbb
jno
das
dec
ds
arpl
sbb
in
in
jo
dec
inc
clc
cwtl
xor
push
into
mulb
cmc
add
inc
push
mov
fwait
dec
pop
int
pusha
jl
and
sbbb
lahf
xor
popa
es
or
movsb
dec
xlat
fdivr
mov
insl
jecxz
mov
bound
out
and
push
ret
in
sbb
hlt
cmp
adc
lea
xor
in
mov
clc
push
jg
outsl
jle
xchg
xor
out
mov
loope
cmp
das
push
sbb
in
push
jle
out
iret
lahf
pusha
in
xor
sub
cmpsb
jnp
xor
jno
mov
addr16
xor
xor
mov
cmp
add
je
insl
or
mov
jbe
and
ffreep
pop
or
xor
sbb
add
mov
inc
dec
add
inc
sub
jno
mov
push
shrb
movsb
xor
test
out
dec
arpl
add
sbb
hlt
sub
jp
and
inc
or
leave
push
pop
hlt
and
notl
cmp
pop
aaa
ret
mov
sub
push
cmp
fldenv
leave
outsb
push
int
aaa
sbb
pop
imul
jns
jb
mov
sbb
push
paddusw
notl
xor
push
xchg
xchg
movsb
lock
push
movsb
sbb
icebp
incl
mov
mov
mov
inc
jp
je
xor
jecxz
xchg
out
jns
sub
adc
xor
cmp
jge
cld
inc
mov
inc
fdivl
and
jge
shlb
test
or
inc
jae
push
add
sbb
xchg
xor
lcall
sub
pop
mov
jbe
and
sbbb
cmp
shll
cmpsb
mov
xchg
push
cmp
sbb
loope
and
lcall
stc
shrb
add
js
jge
dec
cwtl
cwtl
nop
loopne
mov
lcall
cld
inc
aas
icebp
pop
icebp
out
repz
dec
cmp
jo
pop
cmp
xor
out
aas
int3
xchg
stos
inc
ljmp
rorl
in
out
mov
xabort
outsb
jb
lock
push
push
sbb
imul
clc
fwait
or
movd
jnp
int3
stos
mov
sbb
xchg
jb
pop
outsl
das
adc
push
lods
xchg
xor
stc
xor
scas
push
fld
mov
adc
mov
jnp
decl
mov
incl
into
ja
push
and
jno
ret
aam
fisubl
or
shlb
cmp
mov
jo
jge
jae
inc
sbb
sub
sub
fisubrs
push
hlt
cmp
les
push
and
nop
add
faddl
out
into
int
jb
ljmp
fldenv
mov
data16
and
or
sub
pushf
push
ljmp
insl
mov
inc
gs
xchg
ss
pushf
fcoml
add
xlat
cmp
dec
push
mov
loop
mov
lret
imul
dec
push
int3
orb
xchg
test
jns
push
adc
stc
mov
xlat
sub
sub
and
cmp
cltd
push
xlat
popa
js
enter
in
cmpsb
or
push
stc
fistps
push
xchg
cmp
into
mov
xor
pop
fidivrs
pop
pop
pop
xchg
jno
jae
mov
out
inc
fwait
mov
xor
pop
mov
notb
aas
push
sbb
dec
iret
push
int3
inc
ljmp
xchg
inc
mov
sub
push
repnz
std
add
push
pop
jl
xor
sub
push
inc
cli
test
mov
out
pop
call
push
push
mov
sbb
arpl
mov
bnd
pop
push
ss
aam
mov
pop
pusha
xchg
icebp
pop
jmp
testl
add
or
cmp
movsl
xor
movsl
mov
jne
aam
cmp
scas
test
push
cwtl
mov
push
stc
lahf
lret
popa
adc
dec
dec
add
testb
xchg
inc
aas
jns
dec
in
fisttpl
pop
ja
bound
enter
dec
pop
inc
sub
or
mov
mov
xor
popl
mov
aam
andl
or
sahf
movsl
mov
pop
neg
stos
call
adc
jmp
sti
push
insb
ficoml
push
sub
cmp
in
out
test
scas
adc
push
notl
and
pop
cmpsl
ret
aad
dec
inc
cmpsb
push
xor
push
or
mov
pop
enter
iret
xchg
or
mov
pop
sahf
dec
loope
and
scas
inc
push
lret
and
aas
inc
loopne
outsb
addr16
xchg
cmp
aam
test
insb
stos
test
in
mov
test
movb
psubusb
nop
and
mov
and
jb
xor
dec
jg
int3
mov
adc
xor
icebp
fdivp
jl
mov
push
repz
std
in
pushf
repz
dec
outsb
inc
xchg
jnp
or
and
mov
mov
enter
or
and
xlat
mov
or
test
loope
inc
test
cs
into
mov
stos
rcrb
movsb
nop
sbb
in
into
xchg
test
cltd
jecxz
jmp
push
fcmovbe
cmp
inc
mov
mov
sub
jbe
insb
jb
dec
pushf
cltd
xor
push
xor
or
outsb
jae
push
add
sub
test
mov
xlat
shl
adcb
jb
cwtl
daa
lods
or
test
leave
cmpsb
shl
incb
daa
shrl
arpl
cmp
loop
out
pop
mov
bnd
xor
add
loop
or
flds
shll
roll
jo
push
mov
test
roll
add
fcoms
pushf
pop
mov
sahf
mov
sbb
inc
movsl
jne
bound
in
jo
mov
in
mov
mov
outsb
loope
dec
idivb
or
mov
xor
inc
ss
jbe
lret
push
ss
mov
jno
mov
mov
xchg
ficompl
add
lcall
call
pop
xchg
shll
dec
mov
inc
sbb
mov
pop
cmpsl
aam
xor
popa
xor
xchg
push
mov
js
es
pop
das
shl
cmp
cmp
mov
mov
popf
push
inc
movsb
call
rorb
enter
add
repz
dec
ret
adc
mov
vpminsw
int3
lods
test
or
push
out
xor
add
in
add
setge
rolb
jae
fsubrl
pop
and
aas
inc
dec
add
push
sbb
mov
aaa
outsb
push
in
push
pop
dec
mov
add
xchg
cmc
mov
xor
or
or
jnp
sbb
stos
jae
mov
jns
push
mov
stos
stos
jl
add
subl
xchg
jns
call
jno
cmp
ss
mov
mov
sarl
pushf
dec
stc
jb
jne
xchg
dec
push
sub
jge
mov
jle
push
bound
xchg
mov
jbe
xor
cmp
jl
mov
or
sub
gs
adc
aaa
test
push
push
jb
jp
inc
out
std
stos
out
xlat
loopne
or
inc
cmp
mov
and
or
dec
lret
outsl
sbb
in
dec
add
insl
insl
insl
decl
xchg
and
push
out
mull
push
fldl
sub
icebp
cmc
call
test
test
push
sbb
xchg
mov
lods
mov
shll
pop
std
clc
xchg
in
jo
pop
and
int
push
add
mov
rorl
adc
outsl
mov
dec
xlat
xchg
rolb
test
inc
xor
sar
lahf
jle
sti
inc
jb
dec
or
lahf
xchg
inc
shl
daa
pop
xchg
adc
xchg
xor
xchg
mov
and
clc
call
pop
into
std
add
pop
fsubr
mov
adc
mov
add
dec
mov
or
and
ds
sbbb
jns
daa
jl
into
jns
sti
std
clc
out
push
sub
ret
gs
jo
jb
pop
popa
dec
in
sbb
xor
jnp
cmpsl
push
mov
int3
sub
loope
loope
es
mov
mov
push
cmp
data16
call
add
dec
mov
mov
push
inc
xor
movsb
jge
popf
repz
loop
pop
stos
stos
mov
inc
sub
mov
sub
cmc
ja
imul
inc
std
jmp
xor
iret
ss
dec
aam
rcl
dec
pop
loopne
pop
mov
mov
outsb
mov
lcall
mov
xchg
popf
sub
adcl
xchg
push
xor
ljmp
mov
xchg
lds
out
jp
repz
inc
rcl
fiaddl
movsl
divb
dec
xor
scas
and
cwtl
adc
cld
cmp
push
push
shlb
lock
outsl
jb
mov
adc
sbb
hlt
sbb
sahf
jno
in
mov
inc
push
and
pop
adc
pop
jmp
or
cmp
loopne
inc
mov
sahf
andl
adc
hlt
add
push
into
test
int
xchg
outsb
iret
decl
fiaddl
aas
adc
mov
xlat
stos
cwtl
pop
fidivs
mov
popa
jecxz,pt
fsts
fidivs
hlt
mov
sbb
xchg
je
adc
hlt
mov
into
mov
js
subb
push
dec
cmc
jno
inc
dec
pop
push
les
and
pop
pop
and
mov
ljmp
push
aam
ss
idivb
mov
adc
jno
dec
enter
les
mov
sti
mov
sbb
sub
dec
or
add
insb
add
xchg
jp
adc
out
mov
push
jbe
popf
ss
pop
out
mov
jns
addl
cmpsl
loop
xchg
or
shrl
movsb
push
pop
pop
movsl
pop
push
sub
mov
in
sbb
inc
mulb
jmp
std
cmpsl
lahf
call
lods
lods
pop
pop
cmp
xor
stos
xchg
ret
xor
dec
sub
jb
add
test
inc
daa
outsl
outsb
pop
jg
mov
out
xchg
jns
cmp
xchg
push
dec
in
movsb
stos
lods
pushl
dec
pop
mov
loopne
icebp
stos
sbb
mov
popf
pusha
inc
ss
sub
lcall
push
mov
dec
cmp
out
fistpll
add
push
mov
mov
shrb
and
negl
shlb
and
sbb
mov
dec
cmc
mov
sahf
lret
lret
xchg
rcl
jl
in
mov
cwtl
popf
mov
xor
movsb
adc
fcomi
incl
or
out
imul
lds
imul
pushf
jmp
adc
jecxz
lcall
popf
jo
outsl
in
xchg
pushf
aam
dec
mull
dec
fwait
xchg
push
and
push
shll
mov
mov
mov
icebp
gs
mov
sub
fs
lea
imul
push
jmp
decb
inc
insb
ficompl
add
push
dec
ret
daa
sub
clc
pop
lcallw
lcall
mov
movb
sub
or
cli
stc
and
enter
mov
mov
inc
jno,pt
std
add
lcall
push
dec
mov
fsubs
mov
aas
hlt
lret
sti
push
sub
bound
aas
dec
inc
jae
lods
or
push
pop
rcrl
lds
sub
or
mov
xlat
test
lods
arpl
rclb
pushf
pusha
cld
jbe
std
pop
adc
xchg
cmc
pusha
aaa
fisttpll
jae
pushl
mov
stos
pop
repnz
or
pushf
notl
or
arpl
dec
mov
jge
js
push
test
dec
xchg
jnp
and
fcomps
mov
hlt
or
and
repnz
xor
sbb
adc
pusha
add
int3
stos
jne
xchg
and
loopne
cwtl
loop
jecxz
push
mov
push
repz
xchg
pop
pop
and
rorl
ret
dec
test
push
iret
aad
inc
adc
add
mov
mov
lods
xchg
jno
mov
jne
shlb
push
cmp
adc
ja
rcrl
and
sahf
add
xchg
push
add
lahf
es
divb
lret
lds
popf
pop
jmp
out
ljmp
lock
sub
fs
pop
push
ss
push
sbb
xor
notl
insb
adc
push
ret
in
stc
hlt
loope
outsb
push
xchg
pop
sub
push
mov
push
adc
loope
mov
mov
std
adc
popa
mov
mov
inc
cmpsl
sahf
into
push
xchg
gs
dec
jge
xor
cmp
sbb
cli
aas
and
adc
inc
lret
icebp
in
cmc
rcrl
out
dec
jb
dec
cld
xchg
mov
into
mov
xor
mov
mov
hlt
iret
daa
add
into
adc
lret
pop
dec
mov
outsl
xchg
push
orl
jbe
cmp
inc
aam
mov
stos
icebp
mov
mov
movsb
fistl
daa
aaa
pop
leave
stos
arpl
mov
mov
sbb
ss
std
xchg
sbb
push
push
aaa
dec
sbb
mov
nop
rcrb
mov
dec
pushl
arpl
and
les
subl
jp
inc
jno
add
fcoms
push
incb
lods
cli
in
jl
test
adc
mov
test
sarl
mov
out
dec
fmul
add
mov
cmp
sub
sarl
fwait
sti
xor
sbb
aad
fs
gs
pusha
clc
mov
lods
inc
dec
divl
sub
push
jg
test
fidivs
mov
sub
imul
dec
cmp
mov
into
or
lahf
sub
scas
pushf
lahf
in
in
pusha
adc
sub
repz
lea
movsb
push
ss
loope
dec
cmp
xchg
loop
in
scas
mov
outsl
cmp
and
sub
daa
pop
xchg
mov
sbb
cs
in
xchg
xor
push
dec
std
insl
pcmpgtb
pop
push
ljmp
mov
or
test
in
outsb
lods
insl
xor
push
hlt
pop
push
lds
xchg
movsb
xchg
lods
and
lcall
sbb
dec
cltd
in
fisubs
mov
xchg
xlat
mov
pop
sbb
aaa
push
int
mov
pushf
out
cmc
nop
cmp
movsb
cmc
xor
das
outsb
jb
adc
adc
into
push
mov
xor
xor
cmp
mov
std
or
dec
sbb
jmp
enter
rcrl
pop
das
popa
aaa
pop
jecxz
cmp
js
test
xor
pop
cmp
lea
mov
push
in
lods
or
aam
es
inc
dec
movb
inc
pusha
dec
pop
inc
fsubrs
add
icebp
sbb
sub
lcall
in
out
loope
and
add
cmp
mov
mov
xor
in
mov
jo
jns
sbb
shrl
les
ret
sub
push
or
push
inc
pop
or
es
xchg
fcomp
popf
fcomps
mov
iret
xor
pop
aam
mov
fucomip
and
push
sub
ja
xor
mov
mov
mov
mov
mov
adcb
mov
push
rorb
push
shll
sbb
enter
in
and
fwait
xchg
xor
and
cwtl
imul
cwtl
outsl
stos
shl
cli
xchg
shlb
loop
dec
into
inc
fwait
cmp
pop
cmc
xor
fildl
repz
add
fdivrs
ret
pop
ljmp
push
je
push
in
mov
int3
pushf
mov
sub
pop
dec
dec
fidivrl
nop
pop
js
sbb
test
out
in
mov
lods
jbe
pop
jle
fnstenv
pop
dec
xor
insb
mov
insl
sub
fwait
cmp
imul
mov
fadds
push
mov
xchg
loope
jno
sub
bound
movsl
clc
or
and
dec
and
and
mov
sub
ss
adc
mov
fdivrp
outsl
daa
push
sbb
cmp
mov
fnstenv
dec
or
das
adc
out
mov
push
adc
push
cmp
mov
js
insl
rorl
mov
sub
andl
dec
jns
ss
pop
ret
lds
jmp
adc
lods
push
and
xor
dec
js
mov
xchg
clc
push
aam
adc
shr
ljmp
stos
adc
pop
sbb
mov
into
pop
jge
xchg
mov
mov
pop
pop
sbb
movups
cltd
lcall
push
or
xor
nop
js
pop
adc
fst
fwait
rclb
test
shlb
out
fdivs
hlt
lret
out
sarl
test
aas
mov
movsl
sbb
or
ret
bound
bound
jmp
in
stc
sub
fcom
sbb
add
push
pop
repnz
sahf
mov
pop
jbe
in
ss
aam
sahf
mov
aaa
or
xchg
dec
icebp
cwtl
out
push
sub
fidivs
mov
push
jge
push
scas
lret
scas
add
psubw
in
push
jmp
or
fsubrp
outsl
sub
push
mov
or
mov
in
out
jne
or
call
push
push
adc
adc
in
les
mov
cmpsb
dec
mov
cwtl
sub
or
jmp
test
sub
bound
sbb
push
push
mov
mov
lret
mulb
popf
cld
mov
loope
push
call
push
ss
cmpsb
cmp
imul
inc
xor
leave
out
lds
cmpsb
mov
xchg
iret
xorb
jns
jbe
pop
je
loop
jp
stc
jae
cmpsb
xchg
inc
dec
inc
add
sub
pop
aaa
xchg
adc
das
dec
negl
jecxz
outsb
add
ljmp
cwtl
pop
or
aaa
lret
rcl
movsl
and
iret
xchg
cmp
popl
loopne
mov
mov
or
enter
lods
bsr
in
fidivs
mov
test
add
das
xchg
pop
cs
stos
jb
sbb
inc
ficompl
mov
rcrb
cwtl
mov
fisttpl
add
sbb
sub
lock
cvtps2pd
fldcw
jge
popa
je
xchg
in
mov
push
pop
cli
dec
cld
mov
dec
faddp
dec
shrl
jge
and
lock
xchg
sub
leave
lea
popf
push
ljmp
or
push
push
inc
mov
in
sarb
push
es
adc
iret
nopl
mov
mov
lods
fs
push
xor
inc
xchg
jl
lods
test
jno
dec
add
cmpl
push
notl
inc
cmp
insb
xchg
cmp
lret
jmp
nop
adcl
in
xor
mov
mov
in
and
out
push
loop
mov
bound
fwait
inc
sbb
adc
loop
pop
aas
test
jl
fldt
cmp
mov
aaa
adc
add
fnop
in
pusha
mov
add
sbb
inc
xor
int3
sbb
scas
cmp
adc
or
pop
xchg
jecxz
mov
sbb
and
xchg
test
jo
and
sub
mov
mov
ss
xchg
dec
into
movsb
jne
gs
lcall
stc
dec
dec
xchg
xchg
xchg
jb
mov
js
mov
out
test
pusha
cltd
rcll
dec
mov
mov
push
lods
jae
sub
jno
es
imul
mov
sbb
lcall
inc
fwait
xchg
test
ljmp
pop
fisubrs
in
mov
inc
test
int3
sub
jmp
pop
pop
shrb
add
dec
lods
fnstenv
addl
mov
dec
and
xor
push
or
jbe
pop
sub
mov
push
mov
stos
cld
enter
mov
sti
in
pop
and
adc
popa
push
pop
sar
lahf
push
test
mov
in
lahf
jmp
or
mov
aad
mov
loopne
jae
and
in
imul
into
fsubs
fstps
int
jmp
inc
mov
xchg
dec
test
sbb
or
or
imul
leave
cmc
popa
add
mov
loop
mov
sti
je
mov
sbb
popf
jbe
in
outsb
mov
sub
mov
push
in
xor
xchg
out
mov
out
iret
rcr
std
mov
leave
mov
xor
jbe
inc
sub
jnp
fs
adcb
adcl
pop
mov
data16
pop
dec
sub
pop
gs
cmp
xor
pop
loopne
sbb
mov
xchg
mov
fmull
dec
dec
xor
inc
test
and
lcall
lahf
add
and
cmp
push
outsb
mov
push
in
jp
mov
orb
cmp
fdiv
imul
xor
dec
xor
addb
aad
adc
insb
fsub
and
adc
sbb
xchg
mov
pop
wrmsr
std
mov
divb
inc
xor
xchg
cli
mov
sub
xor
lcall
or
insl
and
mov
cs
adc
into
sub
flds
inc
arpl
fcomp
pop
xor
subl
pop
adc
pop
cmp
sub
sti
das
push
lret
sub
out
mov
add
jno
scas
mov
add
ds
mov
mov
ret
mov
fsubrs
xchg
adc
adc
loope
mov
ret
iret
leave
pop
jl
lret
xchg
add
lahf
jb
js
jnp
or
loopne
xchg
cmp
addr16
pop
aam
lock
add
jne
les
shlb
jecxz
push
and
xchg
pop
inc
xchg
cltd
sahf
dec
in
repnz
notb
jb
mov
pusha
xor
inc
in
or
pusha
outsb
dec
andl
sbb
outsl
fildll
stos
movsb
lcall
inc
add
cmp
push
or
xchg
adc
sub
faddl
fiaddl
cmp
push
push
dec
cmp
fisubrl
xchg
hlt
movsb
mov
sbb
dec
mov
arpl
sahf
sahf
adc
adc
push
out
popf
cltd
mov
mov
mov
sbbb
fidivrs
mov
push
in
fisubs
punpckhwd
sbb
inc
sbb
add
dec
nop
pop
jecxz
pop
ljmp
jo
fimuls
movsl
cltd
mov
ss
push
sub
push
sbb
lock
shll
pop
mov
mov
xor
mov
aad
int
in
mov
fisubl
or
daa
jmp
jnp
js
int
pop
xchg
jne
rcl
mov
loop
hlt
sbbb
lds
outsl
jbe
lods
pop
scas
cmp
mov
adc
xor
out
mov
stos
push
mov
fs
mov
test
rcl
mov
scas
push
aas
cmp
adc
dec
dec
mov
enter
in
mov
xlat
arpl
rol
test
and
add
data16
int3
pop
or
jl
call
dec
mov
mov
in
pop
xchg
loope
popf
lea
push
loop
in
inc
sbb
addl
add
sarb
dec
sbbl
push
jbe
adcl
flds
in
cmp
testb
imul
inc
cmpsb
les
xor
sbb
call
push
mov
or
jbe
js
sub
jg
jg
sub
jl
jbe
rcll
in
gs
xchg
pop
lret
repnz
cs
cltd
testb
ret
inc
fidivrs
inc
lock
mov
arpl
jg
divb
mov
out
sahf
test
xor
icebp
inc
mov
cmc
lea
jnp
dec
mov
imul
cmp
mov
loope
mov
jp
cmp
and
mov
mov
imull
lcall
push
lods
in
push
aam
fidivl
ja
call
movsl
cli
pop
outsb
es
xchg
pop
outsl
sbb
adc
neg
mov
mov
jg
call
imul
xor
pop
shlb
inc
ffreep
cmpsl
mov
xor
mov
pushf
xor
push
inc
dec
aaa
lods
icebp
cmpsl
inc
lret
test
and
sbb
or
adc
out
shlb
or
aad
cmp
sub
out
inc
lret
inc
test
jg
orl
adc
sub
jbe
fcoml
lock
sbb
pop
push
pop
lods
xchg
ljmp
pushf
dec
lods
add
cwtl
add
fmuls
imul
nop
in
cs
push
cld
fcoms
or
pop
fneni(8087
inc
push
test
movb
add
cld
hlt
add
lcall
pop
sti
dec
shr
pop
icebp
xor
lods
xchg
or
mov
sarb
hlt
pop
xchg
pop
pop
cmp
dec
ja
outsb
xchg
repnz
jne
popa
neg
iret
aad
cld
out
loopne
mov
push
sbb
jmp
add
push
addb
inc
jp
mov
mov
dec
push
cs
daa
lods
lea
mov
jno
xor
cmpsb
sub
and
cmc
pop
sub
fldl
loop
mov
rorb
scas
lods
mov
shll
gs
xor
push
cmpsb
pop
push
adcb
mov
xchg
inc
bound
rcll
add
jbe
inc
mov
pushf
mov
mov
jo
pop
movsl
jge
notb
clc
int3
cmc
out
lea
push
dec
pop
fidivrs
sbb
mov
inc
mov
pop
and
orb
pop
pop
std
xchg
push
xorb
mov
int
ffreep
sti
xor
sub
mov
mov
sbb
or
loop
jle
sbb
fs
js
cmpsb
fsubl
adc
aad
adc
jp
out
xchg
cmpsl
cmp
mov
out
repnz
out
scas
pop
jne
jo
jb
aam
in
lea
jecxz
int3
add
icebp
pop
cmpsb
mov
inc
cli
lcall
lahf
add
push
rclb
inc
mov
sahf
push
xor
and
daa
les
or
sbb
testb
inc
lret
push
inc
bound
rorb
pushf
testl
or
sub
rclb
adc
pop
push
mov
movsb
jo
add
pop
aaa
sub
push
mov
rorl
lret
shlb
sbb
outsb
sbbl
sub
scas
jmp
pop
and
sbb
cwtl
mov
sti
jbe
enter
iret
pushf
imul
add
cmc
cmp
cmp
mov
pop
inc
test
xchg
sub
mov
aad
push
outsb
addr16
mov
fs
pop
xor
shll
add
adc
popf
sub
mov
iret
out
dec
repz
testb
clc
fidivrl
out
xor
pop
cmp
lods
push
jno
cmp
pop
outsb
cmp
mov
push
xchg
cwtl
mov
gs
inc
cmp
mov
or
sbb
jo
mov
repnz
cmc
xchg
es
dec
test
cmp
mov
jle
cltd
call
sub
pop
clc
jl
sbb
mov
mov
push
mov
pusha
outsl
or
sbb
pop
cld
repz
leave
jb
adc
aam
ljmp
cld
fldl
lret
lret
das
bnd
jl
data16
jl
sub
cmp
subb
and
rcrb
repz
das
sarb
jle
test
mov
bound
jnp
push
adc
xchg
fldcw
sub
push
or
add
sbb
ret
jmp
inc
aas
jne
mov
adc
pop
loopne
xchg
add
xchg
xchg
xor
dec
outsb
sbb
dec
mov
testb
push
and
lea
cmc
cwtl
pop
inc
xor
inc
aam
pop
jecxz
pop
mov
lea
repz
jnp
push
pop
cmp
mov
js
loope
and
lret
or
mov
mov
push
rcrb
push
lea
xchg
stos
ja
jmp
jle
cwtl
and
movsb
push
push
stos
ret
adc
fsubrs
in
cmc
sub
cmp
add
cmp
jp
jg,pt
cld
cmp
lahf
xor
push
cmp
or
mov
and
add
push
add
inc
xchg
scas
mov
pop
aas
or
dec
mov
inc
xchg
sbb
daa
jg
pop
adc
mov
cmc
mov
push
jo
aad
repz
inc
leave
enter
xchg
cltd
add
subb
sub
sub
pop
jb
xor
cmpsl
lahf
xor
icebp
sar
add
test
cmpsl
imul
dec
mov
xor
mov
shl
push
je
xchg
arpl
les
incl
xchg
sub
jmp
add
sub
mov
addr16
ret
push
ds
xor
pop
push
das
or
add
outsl
movsb
lcall
xchg
andl
in
sbb
clc
fcoms
cmpsb
imul
pop
xchg
psrld
lcall
jno
dec
shl
xor
shlb
sub
or
push
pop
inc
popfw
and
fnstenv
xor
fcmovnu
sub
das
fcmovbe
add
cmp
cmp
cmp
movd
notl
hlt
mov
sahf
int
loopne
jae
jg
fldcw
daa
xor
addr16
divl
dec
cmpsl
addb
mov
out
test
popf
cmpsb
mov
loope
inc
sbb
pop
dec
dec
loope
push
push
cltd
or
ficomps
push
xlat
mov
sahf
outsl
icebp
clc
or
push
pop
mov
imul
call
sub
or
stos
in
adc
mov
adc
cmp
mov
fists
pop
mov
ja
and
aam
pop
aas
mov
fldl
xchg
mov
xchg
or
mulb
iret
push
mov
dec
sahf
pop
cld
push
push
cltd
cmp
mov
pushf
arpl
out
rcrl
xchg
lods
xchg
xlat
into
jl
imul
and
push
stos
loop
lret
loope
stos
or
add
xor
cmpsb
pop
xchg
xchg
sub
mov
push
jl
mov
add
das
cmp
andl
pop
fnstsw
fisttpll
js
icebp
fiaddl
adc
add
fucomip
xchg
lret
mov
shrb
fdivs
jnp
xor
sub
dec
mov
cmp
pop
sub
hlt
lcall
sbb
jmp
and
adc
adc
test
cs
std
sti
fwait
sbb
adc
or
sbb
push
dec
sti
cmp
pop
sbb
in
mov
cs
roll
fstpt
es
sti
test
sbb
xchg
in
dec
xor
das
and
fwait
xor
and
inc
cmc
sar
and
push
push
and
cmp
mov
push
ljmp
fstpt
sbb
stos
sbb
arpl
sub
ljmp
test
pop
imul
cmp
xchg
in
mov
out
fdivl
mov
xchg
icebp
rcrl
les
adc
stc
pushf
push
pop
sarb
mov
mov
lods
fstpl
out
out
arpl
out
out
rcl
aas
mov
adc
adc
scas
fidivl
mov
nop
mov
aam
fimull
inc
dec
add
add
mov
xor
mov
out
jb
loopne
xchg
sub
repz
inc
enter
cmp
adc
or
adc
push
pop
xchg
out
fisubrs
fincstp
ss
notl
cwtl
dec
pop
jo
sbb
sahf
scas
cmpsb
jne
ss
add
jno,pt
shrb
push
or
andl
dec
xlat
movsl
sbb
popf
pusha
fsubs
sarb
insb
or
inc
sti
xor
dec
test
mov
popa
adc
lret
inc
ljmp
inc
cmp
popa
lock
push
popf
xchg
insl
or
fnstcw
add
dec
faddl
mov
mov
cs
pop
or
xor
std
mov
sbbl
repnz
leave
mov
fwait
leave
fsubrp
enter
jg
xchg
fstps
ss
ds
addl
xor
or
xchg
add
sbb
outsl
movsb
test
mov
les
orl
and
data16
repnz
pop
xor
enter
leave
cmp
cmc
mov
xor
insl
fisubrs
jae
push
lds
test
loop
imul
pop
popf
jecxz
or
leave
jl
mov
add
lods
mov
cltd
jg
rcrl
fs
push
xor
jmp
jae
mov
scas
cmp
fwait
insl
out
fucomi
xor
fs
lret
jle
pop
jecxz
rcrb
bound
adc
sbbl
dec
dec
sbb
gs
pop
push
push
cmpsl
and
fdivrl
out
popa
insl
jns
or
mov
adc
push
adc
sbb
xor
mov
shr
inc
cli
xlat
xchg
out
adc
sbb
leave
imul
shl
adc
stos
test
imul
cmc
aaa
insl
jb
aam
ret
xchg
in
pop
nop
bound
mov
ret
icebp
pusha
and
lea
xor
enter
inc
xchg
fwait
std
lahf
fs
clc
sub
nop
rclb
aam
mov
push
jl
xchg
dec
xlat
adc
ljmp
mov
xchg
push
cltd
fs
inc
cwtl
hlt
mov
sub
jmp
mov
scas
pop
ss
pop
xor
add
cmp
loop
sbb
and
je
push
fnstcw
pushf
andl
or
test
aam
sbb
fsubl
daa
xchg
in
cld
pop
into
loopne
adc
sti
push
jle
sbb
adc
pop
xchg
inc
or
mov
add
mov
loopne
pop
dec
insl
or
jbe
call
ror
mov
or
jno
lcall
cmp
mov
add
or
movsb
scas
dec
mul
cmp
mov
pop
movsb
mov
mov
adc
rol
add
mov
xor
pusha
data16
jg
mov
into
int3
aaa
jno
int
insl
jg
jbe
cmp
jmp
repz
je
push
aam
push
nop
mov
das
pop
and
jae
gs
fisttpll
shr
scas
add
mov
push
sti
not
mov
sbb
icebp
iret
mov
dec
ret
jmp
pop
fnstsw
cwtl
add
jns
jb
add
subb
xchg
sub
inc
push
mov
rol
sbb
sbb
mov
in
loop
call
loopne
pop
stos
pop
push
push
dec
and
inc
xor
lret
cmp
scas
inc
push
mov
and
lahf
ja
cmp
dec
adc
push
add
lock
mov
pusha
fs
ficompl
xor
test
or
mov
incb
mov
jae,pn
test
in
cli
jno
lock
cli
jp
je
sbb
sbb
adc
push
inc
pushf
outsb
pop
hlt
mov
or
cmp
fs
mov
xchg
pop
mov
hlt
inc
or
pusha
inc
mov
or
jns
xchg
in
add
xchg
fnstcw
imul
push
sub
add
inc
and
pop
mov
insb
mov
insl
add
popa
adc
jecxz
clc
pop
dec
cltd
adc
push
sbb
add
out
fwait
inc
push
jge
mov
dec
xchg
cmp
jge
sbb
push
mov
test
call
push
push
cld
cmp
and
lds
pop
cmp
sbb
das
out
jnp
pop
fcmovnbe
jmp
dec
stos
test
loope
int
hlt
ja
and
mov
aam
xor
vmread
ljmp
mov
shlb
loopne
dec
sbb
pop
cld
push
dec
cld
mov
shl
pop
aad
std
cmp
andb
loopne
repz
push
inc
mov
xchg
and
add
jo
enter
outsb
std
int
in
nop
out
adc
cmp
adc
jp
jae
push
cmc
pop
pop
fisubl
inc
ret
jg
jecxz
inc
xor
jl
push
jae
inc
pop
add
filds
inc
loope
insb
movsl
mov
push
test
aas
testl
out
in
inc
jns
leave
mul
inc
int
mov
dec
lods
sbb
stc
ret
jb
aaa
fcomp
flds
lea
pop
and
jns
nop
adc
xlat
dec
stc
mov
lret
mov
add
sti
mov
pop
jo
enter
push
sub
xchg
push
jg
out
cli
mov
sbb
nop
js
pop
dec
mov
cmc
lods
rol
out
fstpt
pusha
je
cld
clc
jp
out
testl
or
inc
imul
enter
addr16
shr
xchg
pusha
ljmp
sbb
stos
mov
mov
fnstenv
xchg
dec
les
inc
jge
in
data16
fstl
dec
mov
inc
sbb
or
loopne
lock
in
arpl
and
and
insl
jmp
cmp
jno
cmp
ljmp
imul
fbstp
mov
xor
push
sahf
rorl
dec
mov
in
jge
aad
jle
test
mov
dec
pop
in
cmp
xchg
int3
fisubs
sbb
in
lahf
ds
mov
call
jmp
push
xchg
out
jge
and
mov
mov
roll
jp
mov
pop
ret
loopne
mov
and
adc
stos
lahf
mov
mov
out
or
in
cmp
cmp
jg
adc
jo
stc
fwait
jnp
out
sti
and
mov
and
cmc
leave
jle
int
inc
inc
adc
jb
xchg
fdivs
jg
sti
lret
or
or
and
rorb
aam
push
push
shl
sbb
bound
inc
jp
int3
sar
loopne
scas
adc
ret
scas
sub
xchg
sbb
push
push
xor
das
push
push
gs
sahf
movsb
push
mov
sbb
push
outsl
aad
insb
cmpsb
adc
fdivl
out
sub
add
or
xlat
mov
es
fsubl
iret
adc
lahf
sub
mov
loope
repnz
imul
mov
xor
inc
mov
fiaddl
fdivrs
loopne
fs
imul
cli
xchg
hlt
cmp
xor
pop
mov
fiaddl
es
inc
lcall
cli
xlat
add
in
jl
fcomip
stc
push
add
add
pushf
xchg
sbb
in
negb
pop
jl
arpl
lcall
xchg
jmp
clc
out
xchg
js
pop
mov
rcl
mov
mov
test
into
les
in
add
pop
sbb
pop
sbb
cmpsl
pop
into
sbb
push
ljmp
stc
adc
ljmp
mov
test
adc
cltd
pop
mov
testb
test
mov
push
xchg
pop
dec
jb
in
aaa
xor
lret
adc
test
out
add
mov
mov
inc
in
cmp
icebp
movsb
std
in
dec
leave
mov
pop
outsb
pusha
dec
popa
enter
repnz
jmp
cwtl
sub
or
subl
sbb
mov
inc
sbb
sbb
xor
imul
mov
rcr
xor
int3
inc
fstl
inc
xor
arpl
cmp
inc
mov
xor
mov
mov
es
loope
fildl
lock
jns
nop
test
adc
jbe
pop
pop
mov
loope
loopne
testb
xor
sbb
jmp
mov
jnp
aad
test
inc
loopne
xchg
fidivrs
pop
mov
scas
call
sbb
push
mov
push
imul
mov
pop
repz
in
sub
into
adc
push
push
in
jno
mull
sahf
lahf
push
nop
ds
pop
mov
in
mov
je
movsb
jecxz
test
mov
add
mov
jne
mov
add
cwtl
mov
loopne
cmp
sbb
testl
and
fdiv
jne
xchg
test
or
push
cmp
ljmp
bnd
sbb
je
decl
cs
lds
popf
int3
xor
and
outsl
pop
push
cmpsl
pusha
fsubrl
flds
into
ret
rolb
sbb
shlb
xor
aam
lcall
add
and
in
ja
sbb
mov
xchg
imul
ret
rorl
xchg
cmp
add
push
inc
out
adc
cmp
out
xor
mov
in
sbb
jge
shll
cmpsl
sbb
jns
test
push
aas
push
cmp
push
mov
pusha
mov
lcall
daa
test
push
hlt
dec
xchg
es
pop
lcall
lret
js
ret
mov
mov
sbb
cld
mov
mov
notl
lods
or
push
mov
lea
and
push
rcrl
ljmp
daa
pushf
sar
dec
mov
mov
mov
mov
mov
mov
aas
test
mov
lcall
sbb
add
pop
sbb
das
mov
mov
testb
jl
cmp
or
push
xchg
out
stc
or
loopne
mov
scas
push
shlb
mov
addr16
aas
rcrb
lahf
adc
or
aas
mulb
call
push
stos
test
leave
es
xlat
cmpsl
stc
mov
sbb
sbb
inc
dec
out
jnp
add
shrb
popf
xor
pop
mov
data16
into
xchg
outsl
sti
fistpl
addl
lock
dec
cmp
add
cmp
div
mov
cmp
popf
insb
dec
and
dec
fstl
jp
das
hlt
lret
jecxz
enter
out
pop
insl
movsb
inc
in
fsubl
jns
push
push
jl
or
push
push
cmp
mov
inc
inc
nop
add
shlb
stos
jp
ss
xchg
pop
cmc
leave
jl
mov
cmc
adc
adc
push
lock
mov
insb
push
push
in
bound
sbb
xchg
xchg
in
fsub
adc
psubq
pop
xchg
mov
outsb
in
and
inc
dec
push
rolb
subb
add
sbbl
inc
jno
adc
dec
inc
hlt
rol
sbb
xchg
mov
scas
scas
pushf
adc
sbb
and
fildll
jecxz
mov
pop
push
int
add
sbbb
push
xor
xor
jg
stc
jge
sbb
mov
fsubs
sbb
jge
aas
cmp
mov
test
inc
insl
idiv
xchg
push
dec
sahf
dec
sahf
sbb
imul
incl
xorl
jl
mov
push
push
mov
jp
stc
mov
inc
fnstsw
xchg
mov
daa
sbb
or
mov
pop
and
mov
movsl
shrl
sarl
sub
fsts
cmp
pop
mov
jne
xor
xor
adc
imulb
sbb
mov
stos
les
idivb
lock
mul
popf
inc
leave
je
in
daa
mov
pop
loop
cltd
in
lock
out
in
push
vsqrtps
xchg
lods
je
lock
and
inc
adc
hlt
addl
jp
in
push
xchg
movsl
ja
call
sti
push
repnz
adc
inc
icebp
push
mov
xchg
inc
and
std
cmp
subl
push
daa
les
push
stc
jb
xchg
xchg
fsub
fstl
out
mov
pop
shr
or
in
or
xchg
lock
jns
mov
jl
cmp
sub
pusha
mov
jle
adc
xlat
ds
clc
nop
mov
push
or
lret
and
sub
lods
ret
pop
pop
xchg
jo
shrb
push
jns
push
xor
pop
mov
lcall
in
push
add
pop
sbb
push
push
and
cmp
fdivr
cmp
rcrl
mov
sub
inc
pop
in
shl
add
mov
mov
decb
xor
jecxz
jnp
jmp
in
test
rcrl
insb
pop
inc
daa
lods
js
pushf
xlat
or
orb
jo
mov
jne
or
adc
fcoms
cmpsb
sbb
imul
popf
pop
mov
xor
popa
iret
leave
dec
insl
pop
jecxz
mov
jp
push
xchg
sub
and
jecxz
loop
aaa
xchg
addl
jbe
fnsave
mov
cmp
enter
leave
ret
les
aas
fmul
xor
jg
pushf
pop
xor
sbbb
sub
sbb
es
scas
mov
pop
out
sbb
gs
adc
enter
ret
out
fwait
loope
imul
fisubl
and
fwait
inc
dec
add
aas
push
jo
mov
fistpll
ficomps
dec
xchg
sarl
adc
lret
inc
mov
loopne
ret
rcrb
cs
jns
aad
or
test
xchg
jge
popa
loopne
lret
arpl
xor
in
fstps
pusha
or
aas
lahf
push
jne
xchg
pop
push
push
xchg
inc
mov
sub
movsl
add
pushf
scas
dec
and
or
out
jle
add
or
out
pusha
dec
push
jle
mov
sbb
ret
mov
lret
shll
push
mov
das
inc
repz
out
out
icebp
lods
xor
rcrl
inc
and
adc
cltd
adc
dec
add
stos
ss
mov
jge
rcl
mov
imul
out
bound
aas
es
int
lods
xor
fucomip
dec
and
push
dec
mov
in
icebp
mov
xchg
xor
movsb
testb
adc
adc
scas
cld
cmc
ret
push
push
imul
rcll
jge
inc
cltd
cwtl
xor
xchg
adc
flds
cli
repnz
mov
ret
mov
sbb
cs
out
inc
jnp
cmp
or
jg
push
mov
arpl
xor
or
sbb
test
std
or
or
jmp
mov
pop
hlt
out
ret
sarb
add
sbb
push
xor
mov
mov
sahf
scas
mov
addr16
jg
push
inc
adc
cwtl
xor
dec
xor
iret
jo
lahf
adcb
pop
int
push
outsl
add
lcall
pop
cmp
lahf
pop
notb
stc
sub
xchg
mov
and
add
push
aas
pop
sarl
push
add
aad
fstpt
add
subb
or
es
imul
stos
pop
cmpsl
pop
jae
loopne
cmp
negl
shlb
and
stos
ljmp
jbe
adc
adc
outsb
lret
inc
mov
adc
rol
dec
insl
insb
push
aaa
scas
cmp
sub
jle
mov
loop
sub
cli
pop
add
mov
inc
push
xor
xlat
fwait
je
xlat
add
in
push
mov
sbb
stos
add
pop
imul
push
jbe
inc
nop
mov
call
imul
pop
mov
es
mov
push
adc
mov
sub
aad
xchg
mov
movsb
jecxz
pop
or
mov
sbb
scas
mov
cmp
aad
cmp
lcall
mov
xchg
push
push
repz
stos
loope
xchg
ret
mov
xor
jmp
fdivs
outsl
iret
ret
rorl
jl
mov
jbe
push
mov
push
and
sub
pusha
push
cld
sub
dec
and
ret
xlat
and
psubw
push
fmull
cmp
mov
repz
ret
js
mov
or
fldcw
push
sti
push
dec
push
arpl
adc
shlb
jnp
xor
jge
xchg
mov
ja
daa
jbe
mov
sahf
rcrb
test
nop
sbb
stos
sub
andb
pop
xor
mov
cmp
cmpl
add
sub
mov
lret
out
sub
sti
inc
cs
mov
dec
and
ljmp
mov
xchg
push
ja
cmp
push
movsb
mov
sub
pop
cs
jne
mov
outsl
test
jo
in
jo
je
sub
sub
or
jo
jno
sub
sub
push
in
jo
outsb
jno
in
icebp
sub
add
jo
imul
out
sub
cmp
push
inc
rcll
jmp
push
push
int
push
adc
or
or
cli
into
jmp
mov
aaa
idivb
mulb
lock
xlat
mov
or
clc
inc
cld
xchg
or
pop
sub
jl
mov
cmp
sbb
jle
add
mov
fxch
aas
adc
add
aad
inc
loope
inc
loope
mov
test
inc
lock
mov
nop
cmp
jmp
fsubp
xchg
fsubp
dec
cmp
dec
cli
cmp
mov
pop
idivb
divb
pop
xchg
jb
in
adc
jmp
sbb
xchg
addr16
push
loop
or
push
lea
xlat
popa
shrb
shrb
or
stos
pop
jbe
pop
ljmp
enter
jns
or
jo
clc
jo
cmp
mov
inc
mov
test
les
add
xor
std
insl
sbb
notb
idivb
idivl
jp,pn
icebp
mov
icebp
or
icebp
or
es
jo
pusha
jo
andb
and
mov
fstps
pop
fwait
shlb
shlb
xor
movsb
pop
or
int
call
imul
push
in
mov
in
inc
adc
inc
push
adc
push
movb
mov
pop
das
mov
das
mov
dec
mov
sbb
mov
sub
sbb
xor
pop
push
inc
pop
push
cwtl
jne
cwtl
dec
and
dec
fsubrs
fadds
xchg
in
and
and
inc
xor
inc
data16
push
dec
push
mov
push
mov
pop
mov
cmpsl
rcll
lds
lds
ret
mov
test
test
fsubrl
fdivrl
fnstsw
xabort
mov
jns
mov
fnsave
addb
mov
ret
outsb
pop
inc
negb
inc
sub
jmp
mov
neg
in
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
