test
icebp
sbb
cmp
pop
adc
insl
cltd
popf
movsl
adc
int3
outsl
fadds
jbe
sub
js
addl
js
add
inc
inc
push
jo
clc
sub
lea
fidivs
add
loopne
inc
or
mov
cmc
cmp
pop
adc
jb
jmp
pop
clc
or
inc
adc
add
in
mov
inc
dec
pop
cmp
fsubr
jge
ret
pop
sbb
fld
push
xlat
ljmp
lret
and
jg
mov
pop
nop
sub
mov
pop
mov
mov
leave
incb
xor
stos
lret
push
cmp
mov
cmpsb
lret
mov
int
aad
pop
mov
ret
in
roll
jle
pop
inc
push
jp
mov
fstps
into
push
rclb
xchg
sahf
dec
and
push
xchg
out
fsubr
test
popf
sbb
or
push
lods
mov
jle
lcall
add
mov
andb
mov
vpsllw
js
sbb
cld
dec
or
xchg
sub
repnz
push
push
pop
aam
pop
dec
fisubl
sti
fcomp
mov
push
leave
jno
or
pop
add
in
jecxz
stc
cmp
test
incb
mov
enter
and
dec
mov
adc
adc
adc
cmp
lods
lret
notb
push
adc
xlat
in
jnp
cmp
lahf
xor
xchg
stos
sbb
jne
ret
hlt
stc
xchg
push
mov
push
xchg
lcall
sbb
test
adc
inc
test
jbe
xchg
add
addr16
add
inc
dec
mov
sbb
sbbl
mov
es
mov
inc
clc
in
mov
cltd
adc
fmul
sub
xchg
and
cs
mov
test
add
lret
sti
popa
fisubs
outsb
lret
inc
xor
dec
sub
jp
sub
insl
arpl
fnstsw
sbbl
pusha
inc
sub
popf
out
cwtl
fidivs
shrl
mov
cltd
mov
int3
insb
xor
xor
shrl
jns
xchg
movsl
push
popa
into
dec
pushf
add
xchg
notb
enter
mov
xor
lea
or
mov
gs
xchg
mov
neg
rol
and
popf
adc
scas
and
data16
mull
hlt
adc
leave
xchg
inc
pop
sbb
movsl
or
dec
push
inc
dec
cmc
inc
dec
push
or
xor
jnp
imul
mov
fidivrl
pop
jg
lret
pop
in
mov
popa
insb
inc
sub
shll
sbb
addr16
movsl
leave
out
sub
xchg
ss
push
icebp
pop
sbb
adc
dec
movsb
jno
nop
data16
out
pop
push
jmp
mov
insb
push
sub
mov
xchg
outsb
push
xchg
nop
pop
sbb
jns
mov
pop
add
or
out
mov
jb
cmp
fs
and
orb
addb
fisubrs
loope
sahf
dec
sbb
shrb
xchg
and
sbbb
push
push
and
dec
add
sub
hlt
lds
lret
test
mov
test
inc
int3
mov
mov
dec
clc
fists
aad
xchg
scas
cmp
sub
or
add
mov
pop
arpl
pop
arpl
xchg
xlat
jge
movsb
inc
gs
sub
test
fucom
xor
push
jbe
je
sarl
cmpsb
cmp
shll
sbb
pop
addr16
or
sub
mov
adc
dec
enter
cld
int
popa
push
mov
mov
sub
enter
lods
lret
pop
jns
out
push
push
push
pusha
decl
push
mov
data16
data16
cmp
xchg
mov
mov
adc
and
cmp
orb
lods
aas
subl
push
mov
xor
mov
repz
cld
cmpsl
sahf
inc
cwtl
adc
sub
fnstsw
fs
aad
dec
xchg
mov
or
adc
adc
sub
out
sti
lods
mov
xchg
outsl
pop
mov
gs
fsubrs
pop
xor
sub
pop
mov
inc
lret
xchg
xor
or
ja
cmp
ljmp
test
inc
sub
sbb
cmp
sub
into
dec
push
popa
fdivrs
pop
push
and
int3
and
mov
inc
ficompl
lock
loopne
aam
inc
das
ss
mov
outsl
out
out
pop
leave
outsl
xlat
repz
mov
sbb
cld
or
pop
outsl
cmpsl
sub
inc
pop
movsb
out
push
in
data16
mov
jne
dec
mov
popf
mov
movb
jle
stc
ror
cmp
incb
mov
leave
sbb
enter
xchg
sarb
pop
xchg
repnz
mov
jo
in
lahf
stc
add
loop
sub
or
xchg
fiadds
xor
ljmp
and
jno
adcl
xor
push
adcl
ja
pop
clc
push
fdivr
xchg
xor
stc
and
fwait
cmp
add
or
dec
adc
je
ficompl
jp
push
cmp
shlb
cmpsl
outsl
and
loop
and
lahf
dec
inc
mov
xchg
jl
adc
ljmp
add
add
pop
stc
and
push
push
push
push
lea
push
push
push
push
shl
rol
jp
lea
push
push
test
pop
pop
test
push
mov
pop
jns
jg
push
jle
sub
pop
lea
sub
nop
inc
dec
push
je
and
pop
mov
clc
stc
jmp
jmp
call
and
sub
push
jae
push
mov
pop
pop
js
xor
test
stc
pop
jo
jb
push
rol
pop
push
add
cld
push
add
mov
pop
push
push
cltd
pop
pop
lea
test
cmp
cmc
add
or
push
push
push
pop
pop
pop
jns
push
mov
pop
nop
add
add
xor
add
rol
jle
push
mov
pop
test
push
pop
and
cmp
je
push
push
jne
add
pop
pop
xchg
xchg
jb
jo
push
not
not
pop
or
cld
nop
push
mov
add
pop
push
dec
pop
clc
push
mov
pop
sub
push
jo
sub
pop
sub
shl
push
mov
push
xor
pop
pop
cmp
push
call
repz
sbb
outsb
lret
cmc
add
aas
xchg
push
or
xchg
je
inc
call
pop
add
pop
push
mov
push
xchg
movsl
xchg
mov
pop
jnp
push
or
pop
cld
sub
push
push
mov
pop
pop
push
movzbl
std
cld
push
jo
cmp
pop
jno
xor
jbe
push
push
rol
pop
pop
cmp
push
jp
xor
pop
jp
push
cmp
pop
fnop
test
loop
pop
cld
sub
cld
dec
jne
loop
jecxz
cltd
lea
inc
push
push
push
add
pop
pop
pop
jb
or
push
push
and
pop
pop
jmp
cs
xchg
xchg
dec
sub
addb
inc
ljmp
xchg
push
jle
mov
mov
mov
sti
out
icebp
xchg
test
jb
inc
push
or
daa
dec
lcall
jb
xchg
mov
loopne
mov
or
pop
cmp
gs
fldt
ror
mov
negl
nop
add
hlt
and
pextrw
arpl
mov
test
jns
adc
in
or
enter
sub
test
jmp
call
jle
nop
pop
pop
inc
fldenv
arpl
mov
inc
jb
push
or
xor
popf
jl
inc
mov
dec
cmp
and
sbb
test
inc
ret
jg
sub
stos
push
ret
xchg
test
movsb
insl
pusha
cmpsl
inc
imull
push
xor
xchg
daa
adc
push
je
call
cmp
sub
inc
xor
mov
xor
stos
pop
jl
jns
test
aam
inc
lods
imulb
jecxz
mov
jle
sub
xchg
adc
out
pop
iret
dec
pop
cmpl
push
lods
aaa
ds
xchg
mul
stos
xchg
fstl
jae
dec
test
pusha
add
les
mov
sbb
je
push
daa
pop
mov
addr16
mov
mov
sbbl
add
out
scas
mov
xor
cmp
lret
adc
jmp
insl
sbb
leave
sub
jnp
and
mov
cmc
add
aam
xlat
test
mov
repz
out
mov
mov
dec
lods
test
cli
mov
iret
xor
sbb
jne
pop
popf
cmpb
gs
cmp
dec
iret
mov
mov
rcrb
push
scas
jmp
rcrb
rolb
lcall
mov
xor
mov
scas
into
stos
rcrb
sub
leave
popf
xchg
movsl
cli
outsl
cwtl
push
lret
sarb
mov
data16
mov
in
loopne
cmp
jmp
scas
dec
sbb
push
stos
xchg
sub
xchg
ljmp
mov
js
push
ret
sbb
xor
add
pusha
ss
mov
jle
cmpsb
jecxz
inc
fsubl
iret
movsl
pop
pushf
stos
test
jg
xchg
or
and
or
arpl
cmpsb
repz
scas
out
jle
adc
or
and
xchg
xchg
add
out
ret
test
mov
jl
mov
mov
imul
stos
mov
nopl
mov
sbb
aam
sbb
cmp
in
xor
int3
fwait
sub
push
mov
cmp
xor
and
imul
inc
jnp
jns
push
mov
mov
in
adc
test
mulb
mov
pop
inc
and
mov
mov
imul
and
shlb
mov
cltd
mov
push
pop
xor
jecxz
hlt
stc
push
std
xchg
repnz
jbe
aaa
push
scas
xchg
xchg
adc
sub
mov
add
fs
fisubrl
test
sub
pop
ret
in
jae
add
pop
pop
xor
sub
lahf
setbe
push
lahf
push
lock
fstpl
outsl
push
jg
jne
jg
fmul
sbb
leave
es
out
negl
aas
or
and
data16
inc
cmp
pushf
sub
addr16
outsl
mov
leave
push
int3
mov
cltd
dec
inc
iret
stc
lods
incb
sahf
shlb
rorb
sbb
adc
lea
jae
es
sub
stos
shl
push
das
ficoml
mov
mov
adc
add
pop
jnp
jmp
test
into
mov
jp
iret
push
mov
or
and
pop
mov
das
push
mov
mov
sbb
mov
mov
jmp
mov
cmpsb
das
rcll
movsl
push
lcall
or
insl
lsl
bnd
fs
xor
pop
sbb
sub
in
cld
call
in
jp
mov
pop
and
xchg
int3
aas
adc
sbb
xchg
fwait
jno
mov
dec
cmc
mov
pusha
test
roll
hlt
test
xor
or
jno
pop
jb
rcrl
adc
xchg
mov
mov
mov
ljmp
mov
or
mov
add
or
and
insb
pop
jge
pop
aas
sbb
pop
cmp
sti
aaa
sbb
fisttpll
push
or
test
mov
mov
stos
mov
subb
xchg
xchg
leave
jno
cmpsb
test
pop
jo
daa
js
lock
insb
jns
xchg
into
push
loope
push
out
push
mov
push
jp
pop
xchg
loop
jbe
mov
jmp
cltd
pop
imul
stos
nop
iret
sub
int
xchg
movsb
pop
dec
cmpsl
push
loop
bnd
jp
add
divb
xchg
adc
js
repz
fwait
cltd
out
dec
arpl
lret
fisubrl
orb
mov
sub
shr
lahf
jmp
jns
and
test
mov
call
push
jo
adc
xor
or
xchg
pop
int
fnsave
sub
sbb
adc
fdivrl
out
sub
mov
cs
int3
lea
clc
mov
movsb
inc
pop
push
inc
pavgw
or
mov
in
push
loopne
mov
add
js
jbe
sti
cmp
in
xchg
push
nop
adc
xchg
mov
or
aad
sbb
rorb
xchg
or
loop
testl
dec
xchg
jg
shll
movsb
jl
rorb
jmp
fstps
xor
repz
test
aad
pop
scas
mov
sbbb
adc
je
lds
push
cmp
add
mov
loop
les
in
pusha
mov
std
cmp
pop
inc
jmp
sbb
mov
add
sbb
pushf
not
into
dec
xor
xor
lods
pop
or
stc
mov
inc
popa
sbb
pop
loop
ficomps
bound
shl
jecxz
jmp
es
dec
pop
shll
push
lock
adc
push
or
mov
jp
push
dec
pushf
lods
jns
into
scas
pop
mov
mov
add
test
rclb
mov
je
xor
mov
pop
xor
repz
jnp
jb
add
dec
push
xchg
mov
inc
and
push
in
jb
gs
mov
jnp
clc
mov
popa
mov
mov
rolb
jg
fcmovbe
aam
mov
fidivrs
dec
into
mov
lock
and
repz
xor
push
push
data16
scas
pushf
cmpsb
xchg
scas
cmp
rcll
loopne
mov
inc
jmp
andl
outsl
scas
pop
and
sbb
je
shlb
mov
fwait
jnp
and
in
and
xchg
ret
int3
or
daa
test
dec
xchg
adc
das
insb
decb
pusha
xlat
in
pop
mov
aam
icebp
insb
pop
out
pop
sub
jmp
xor
jl
sub
adc
stc
bound
pop
mov
xchg
out
push
cwtl
sub
std
dec
inc
adc
sbb
addr16
mov
scas
imul
gs
and
pop
sub
cwtl
sbb
std
cmp
in
pop
pop
xor
dec
mull
insb
adc
mov
and
addr16
jb
mov
pop
stos
into
jmp
jns
jo
shl
fstpl
ret
inc
jl
or
fdivr
lahf
sub
mov
hlt
mov
out
pusha
fdivrl
xchg
dec
sub
xor
mov
lock
xchg
test
push
dec
sub
mov
sbb
ret
push
jne
jbe
int3
pushf
lret
sbb
fdivrs
jnp
sahf
stc
push
lcall
out
icebp
xchg
fdivrs
fists
sbb
mov
daa
add
ja
fucomp
insl
inc
xchg
jl
xchg
inc
mov
push
xchg
aad
loopne
leave
mov
push
cli
inc
inc
test
test
cli
test
test
stos
sbb
lea
xlat
out
cmp
in
shlb
mov
jl
mov
test
js
xchg
clc
pop
jp
jge
jbe
fs
xchg
out
lahf
ja
sbb
cwtl
addb
mov
repnz
adc
add
inc
xchg
inc
pop
xchg
out
fsubrl
fwait
xor
roll
mov
mov
pop
lods
in
movsb
movsb
iret
jae
push
jbe
pop
outsl
mov
cmpsl
fs
push
and
mov
lahf
cmc
or
mov
lea
sarb
xor
movsb
in
xchg
in
pmaddwd
xchg
xor
lcall
mov
jmp
cs
pop
cwtl
lcall
pop
arpl
sub
je
adc
cmp
xchg
push
add
rcll
inc
mov
xchg
ret
cmpsb
and
cltd
cmpsb
push
pop
repnz
mov
mov
pop
lock
into
pop
pop
nop
les
es
and
sbb
dec
and
xchg
push
pop
and
push
int
mov
cmp
jge
lds
lcall
dec
test
and
ja
into
les
lock
out
or
ljmp
rol
ret
imul
bound
cmpsb
lea
xchg
sbb
pop
ljmp
sbb
push
xor
mov
rcll
xor
sbb
xor
sbb
movsb
dec
les
fcoml
push
pop
pop
xor
mov
xchg
rcrl
dec
mov
stos
movsb
jle
inc
push
jg
ja
dec
int3
add
mov
je
push
js
mov
mov
adc
mov
xchg
jp
inc
push
push
jne
aaa
ret
addr16
je
and
cmp
ds
and
das
out
rcr
mov
mov
aam
or
mov
pop
js
int
inc
nop
or
ret
xlat
fwait
test
leave
imul
mov
and
jo
leave
jecxz
sahf
adc
out
or
lods
loopne
andl
push
xchg
negb
mov
mov
push
ficoms
test
xchg
add
inc
jmp
cmp
fcmovnu
fcmovu
jmp
movsl
mov
cmpsl
mov
pop
pop
adc
cmc
repz
rcl
aaa
daa
pop
enter
add
ret
add
jp
sbb
mov
inc
insb
decb
lock
push
mov
int
dec
mov
cmpsl
in
mov
xchg
fstpl
inc
xor
xchg
stc
data16
into
dec
in
mov
cmp
push
and
icebp
jno
mov
out
es
jmp
xor
mov
sbb
jge
or
insb
icebp
mov
imul
sbb
add
cltd
aaa
mov
mov
int
cmpsb
jge
jg
cltd
or
jae
clc
std
stos
roll
pop
sahf
lret
xor
stos
lods
movsb
daa
push
pop
pop
inc
jb
mov
cmpsb
cmpsl
mov
jns
or
cmpsb
int3
mov
pop
mov
sarb
sbb
pop
mov
addb
bound
pop
xorl
cltd
js
gs
pop
inc
inc
les
jae
enter
add
subl
mov
inc
push
sub
cs
add
lods
mov
out
jbe
and
push
ja,pn
clc
es
outsl
adc
pop
fcmovnbe
std
and
ljmp
mov
ret
mov
mov
mov
shl
add
xchg
push
adc
pusha
dec
mov
arpl
xchg
out
cmp
xchg
sbb
add
lret
mov
fwait
sbb
mov
out
push
test
jmp
cltd
cli
pop
push
cld
xchg
bound
and
pusha
shrl
mov
mov
sub
in
jnp
in
sbb
and
jo
mov
push
jne
cwtl
iret
daa
or
dec
loopne
sbb
xchg
dec
sub
popf
add
xor
fisttpll
or
sbb
sbb
jae
popf
out
mov
aas
mov
and
aas
xchg
movsb
and
and
adc
pop
mov
inc
lock
lea
cmpsl
cmpsl
scas
adc
psraw
mov
xchg
pop
lock
cmp
xchg
sub
xchg
scas
sbb
inc
jae
or
outsb
out
clc
nop
cmp
std
mov
push
jl
shlb
xchg
fstps
int3
sub
and
xor
dec
lock
call
repz
push
hlt
sbb
addr16
and
pop
and
mov
inc
mov
add
cmp
jb
mov
mov
lods
mov
sub
adc
mov
mov
ss
lds
ljmp
fildl
mov
sbbl
pop
or
arpl
sub
ret
movsl
dec
jecxz
mov
push
push
dec
mov
xchg
fmul
mov
dec
arpl
out
adc
mov
divl
inc
pop
in
push
dec
xchg
cmp
ret
je
sbb
push
pop
das
mov
pop
std
adc
int3
sti
in
rep
fnstenv
mov
sub
push
imul
mov
cltd
mov
adc
mov
dec
mov
lahf
repnz
adc
out
lods
sti
push
pop
add
xor
ja
mov
lods
mov
inc
imul
pop
mov
andb
scas
sbb
adc
rorl
xchg
pop
aad
imul
hlt
popf
and
in
leave
movsl
in
pusha
or
stos
mov
ja
xchg
and
sub
sub
test
neg
int3
lods
addr16
cltd
adc
inc
sbb
cmp
push
loope
or
jne
inc
dec
jmp
cmp
or
sub
sub
mov
add
mov
mov
in
adc
adc
mov
cmp
cwtl
push
jge
jnp
push
pop
and
mov
sbb
add
fisubs
push
xchg
jle
sbb
inc
xor
in
lds
pushf
in
dec
pop
lock
into
mov
cld
aad
xor
shll
inc
mov
mov
sahf
rclb
scas
pop
repnz
das
mov
lods
call
aaa
pop
sbb
push
insl
call
mov
mov
add
jl
mov
sub
xchg
jmp
cmp
or
mov
mov
and
jge
test
mov
out
sbb
push
fmuls
cmp
mov
jmp
cmpsb
mov
add
lock
and
dec
repz
add
pop
or
inc
mov
jp
imul
dec
popf
dec
bound
pop
mov
xor
das
lea
inc
xor
mov
test
mov
jl
sbb
movsl
addb
xlat
mov
call
sbb
xchg
inc
inc
mov
sbb
and
test
stos
mov
mov
stc
int
xor
adc
aas
mov
inc
cmpsl
lcall
mov
scas
mov
mov
add
popa
sub
inc
dec
mov
mov
mov
fstps
mov
imull
ljmp
inc
sbb
fwait
scas
stc
rolb
iret
repz
cmp
outsl
add
xchg
lret
cwtl
ffree
lods
pop
cmp
int3
pushf
jecxz
scas
xchg
addb
insb
pushf
sub
xchg
ret
ficoml
or
leave
mov
test
push
or
cmpsb
cmpb
xor
call
jne
outsl
pop
fbld
cmp
in
pushl
push
mov
or
pop
bound
adc
rcl
dec
push
jb
jbe
jmp
pop
and
mov
xchg
mov
fstl
sar
xchg
gs
cmp
jge
pop
cmp
ja
sti
cltd
push
sub
stos
in
or
xorl
das
out
pop
rorl
inc
dec
ja
jnp
nop
nop
aas
push
movsb
mov
outsb
dec
adc
loope
inc
push
adc
call
dec
xor
pusha
cmp
add
or
mov
pop
and
xor
loope
mov
fs
stos
aas
or
mov
fsub
adc
xor
xchg
jb
fisttpll
in
stc
jg
cmp
xchg
mov
mov
fsubs
repnz
push
mov
scas
lret
mov
xor
xchg
clc
cli
lea
gs
lea
pushf
sub
push
addr16
add
cmp
fsubrs
adc
inc
decb
loop
fimuls
xor
iret
mov
add
sub
popf
enter
out
mov
movb
jl
sbb
lock
xor
add
sbb
cmp
stos
dec
xor
insl
cld
dec
cmp
andl
or
mov
mov
xchg
jbe
dec
cmp
jno
sbb
lcall
pop
addr16
xchg
jno
stc
pop
aad
or
jae
scas
adc
lods
sub
push
xchg
jecxz
insb
cmc
adc
insl
xor
push
insb
sbb
push
add
ljmp
sub
fcomps
mov
add
std
sub
push
inc
mov
clc
push
jl
jb
adc
inc
push
nop
jno
mov
sbb
stc
enter
xor
mov
mov
bound
xor
xchg
gs
es
pop
sub
mov
jae
push
incl
outsb
add
pop
xchg
xchg
lcall
add
mov
icebp
dec
mov
jbe
mov
imul
mov
lock
xchg
sub
mov
xor
xchg
js
lods
mov
negb
lahf
insl
lods
pop
inc
add
push
dec
lods
and
cmp
cli
sub
loop
inc
and
pop
ffreep
adc
repnz
lahf
xchg
jp
jo
aad
xchg
lock
jmp
out
sub
inc
jp
ret
repz
adc
inc
clc
fsubp
inc
push
lret
cmp
xchg
xchg
pop
xor
xchg
mov
nop
adc
adc
lret
repz
mov
push
cmp
mov
out
adc
adc
sub
cbtw
inc
mov
and
dec
adc
leave
push
mov
into
mov
inc
cs
loop
cltd
ljmp
and
mov
xor
adc
jo
stos
popf
xchg
sub
cmp
loopne
inc
push
repnz
in
jge
inc
xor
xor
adc
insl
sub
dec
insb
leave
daa
push
push
dec
cli
adc
icebp
add
cmp
adc
arpl
loopne
sahf
rorl
dec
mov
sub
adc
jae
mov
aam
sub
mov
cld
inc
imul
add
fcompl
pop
mov
shll
or
rcl
ja
js
shl
outsb
add
jnp
cmp
test
and
jl
clc
into
fisubl
mov
lcall
addr16
loopne
stos
jl
adcb
in
jne
maxps
hlt
pop
sub
pop
mov
or
lret
ss
jae
push
mov
fcmovnu
popa
add
lea
mov
in
lcall
out
test
inc
pop
mov
sub
loope
and
cltd
movsb
rcrl
jmp
add
mov
inc
sbb
pop
js
das
jle
out
inc
sahf
or
mov
mov
loop
mov
adc
aam
push
cs
and
insl
push
mov
xor
ja
jmp
addr16
push
cmp
cld
and
add
cli
xchg
sub
mov
push
add
sub
xor
sub
scas
mov
std
enter
gs
dec
loop
in
dec
xchg
jb
int3
adc
dec
cmpsl
jne
sub
lock
jmp
aad
ds
shl
shlb
lock
mov
icebp
cltd
rorb
or
ljmp
pop
cmp
sub
aaa
dec
sahf
ss
movsl
sub
pop
in
add
or
rcll
cmp
outsl
imul
pop
and
xor
inc
mov
das
mov
xor
lods
insb
sbb
sub
ds
xor
pop
out
pushf
or
push
mov
imul
or
pop
bound
in
dec
psubusb
cmp
into
test
andb
jno
aas
dec
jmp
inc
ljmp
mov
imul
andl
xchg
lds
fbld
imul
cmp
hlt
hlt
push
add
inc
jno
std
inc
repz
pop
mov
or
add
fsubrs
mov
sub
jbe
dec
ficoms
jno
clc
xchg
jne
jmp
cmpsb
pop
dec
xor
or
jbe
mov
pop
icebp
test
insl
push
in
xor
iret
lahf
jno
mov
ucomiss
push
es
inc
mov
arpl
mov
leave
sub
jg
mov
aas
pop
mov
mov
inc
sbb
xor
mov
push
aam
addr16
xor
daa
inc
add
ds
inc
mov
jge
push
or
and
mov
pop
arpl
out
adc
repz
xor
cmp
scas
add
out
dec
push
sbb
pop
fdivr
or
daa
add
push
and
push
xor
bound
das
mov
and
sbb
les
lret
xchg
les
or
fmull
ss
test
or
mov
lret
sbb
divl
sbb
sub
addr16
rcrl
mov
adc
out
and
jle
mov
sub
js
push
sti
push
fdivr
add
sub
loope
jb
lods
mov
jb
into
cmpsl
inc
push
adc
sub
out
and
jne
jbe
dec
pop
cmp
or
push
sub
jp
sbb
xlat
and
popa
jno
mov
dec
aad
mov
insb
lds
frstor
lock
psubsb
jg
ss
ljmp
jmp
dec
xor
pop
stc
fcoml
xchg
sahf
add
add
cwtl
subps
stc
mov
add
ljmp
inc
push
bound
into
mov
mov
pop
testb
mov
inc
add
outsb
in
mov
sub
mov
outsl
insb
mov
and
in
data16
das
xchg
fmul
out
icebp
xchg
aaa
jecxz
das
pop
mov
inc
scas
jg
inc
push
shll
cmpb
sahf
and
push
pusha
xchg
call
push
sahf
cmp
sbb
sub
fwait
mov
mov
stos
daa
add
iret
mov
test
push
xchg
shll
xchg
mov
lret
inc
fcomps
cld
std
xorl
out
cmp
pop
into
in
dec
loop
sbb
cmpb
push
xchg
cs
mov
dec
lret
rcrl
or
aam
into
push
stos
inc
ss
subl
jecxz
fstps
icebp
xchg
inc
mov
mov
daa
aas
sbb
mov
push
lret
inc
inc
je
or
mov
in
psubusw
lds
dec
jecxz
daa
syscall
test
mov
iret
jmp
pop
mov
addl
dec
jmp
pusha
daa
sbb
xchg
dec
and
adc
and
and
inc
mov
pop
imul
mov
or
loopne
fbld
mov
ja
xchg
pop
xor
mov
jns
push
xchg
xchg
adc
imul
pushf
push
xor
dec
shr
pop
sti
iret
mov
inc
push
mov
cmp
fcmovne
lea
repnz
inc
outsb
mov
sub
fbld
or
int3
fcmovnbe
int
jnp
sbb
subl
pop
jg
pop
mov
mov
sbb
insb
inc
sbb
aam
int
sub
dec
in
leave
xor
jl
inc
lock
sub
fistpll
stc
xor
pop
sub
sub
arpl
or
xor
cld
mov
xchg
inc
adc
mov
cltd
fwait
test
sahf
pop
addr16
scas
rcrb
sti
add
fld
inc
xchg
mov
jns
jge
jb
jmp
mov
mov
roll
mov
push
cmp
dec
mov
pop
inc
insl
and
inc
stos
lods
add
das
aam
dec
push
inc
cld
sbb
push
and
inc
gs
pop
cmp
pop
inc
out
out
cmpsb
movsl
mov
pop
mov
cmc
push
out
pop
call
je
jl
xchg
or
das
pop
cmp
fs
add
repnz
inc
aad
nop
dec
xchg
cmp
pop
mov
mov
cmpsb
imul
push
dec
out
cmpb
sub
cmp
repnz
and
sbb
push
pop
addr16
jecxz
fcoms
out
sub
jae
xor
jae
lret
ljmp
xchg
in
mov
pop
popa
inc
dec
mov
fwait
jge
addl
mov
cmp
mov
test
mov
pop
cmp
jle
test
imull
xor
clc
es
in
fsubr
or
xchg
dec
lds
xchg
enter
or
ljmp
push
push
xor
repnz
cs
outsl
xchg
cmc
pop
ds
jnp
adc
mov
cmp
xchg
jo
mov
test
fisubl
in
adc
dec
ss
scas
mov
push
and
fisubs
cmp
or
outsl
xchg
int3
cmp
outsl
sub
xor
add
jae
jmp
popa
shlb
divl
pop
push
mov
push
inc
ds
cmp
xchg
sub
test
push
pop
mov
dec
inc
test
test
lret
int
pop
ds
push
fwait
movaps
popf
imul
mov
and
pop
into
test
fnstcw
cmp
or
push
jecxz
cmpsl
mov
ja
adc
and
dec
js
cmc
les
out
xlat
into
bound
out
dec
rcl
sub
xchg
add
data16
shll
cmpsl
clc
movsb
inc
push
divl
mov
sbb
pop
push
lret
lds
sbb
cwtl
pop
imul
in
stos
mov
cmp
test
jns
xchg
xor
sbb
shrb
mov
jns
add
jns
mov
clc
test
popf
add
mov
push
xor
dec
jnp
sarl
leave
inc
fdivp
out
bound
mov
loope
das
inc
test
mov
sub
fs
adc
imul
mov
call
mov
je
dec
hlt
lods
test
sub
mov
loope
and
dec
fidivrs
and
xor
icebp
in
add
loop
aas
fstp
data16
pusha
fwait
dec
in
ljmp
andl
gs
or
loop
fidivrs
outsb
out
fists
sbb
mov
fsubs
jmp
idivl
push
mov
inc
outsl
add
xor
mov
sbb
clc
sbb
mov
out
cld
pop
popf
shrl
xor
rcrl
movsl
iret
arpl
xchg
push
xchg
cmpsb
pop
shlb
fists
xchg
repnz
sti
mov
pop
test
jae
push
inc
repz
repnz
pusha
sti
fimuls
sub
out
xor
xchg
call
lahf
xor
or
xchg
daa
mov
lea
inc
fcmovb
mov
push
bound
pop
sbb
outsl
push
mov
sub
jne
pusha
fidivl
in
pop
mov
test
mov
add
icebp
test
sub
mov
xor
add
xchg
mov
ds
pop
aam
dec
jg
stc
dec
mov
sbb
fsubrs
lcall
ret
mov
sarl
lahf
mulb
xchg
in
fisttpl
xchg
faddl
shrl
imul
pop
aas
push
jnp
test
outsb
call
out
cmpsl
xchg
ffreep
jge
mov
insl
in
outsb
lods
and
mov
xor
dec
mov
dec
and
lods
lahf
mov
mov
scas
add
movsl
inc
ja
jno
sbb
sbb
xor
push
push
stc
ficoms
add
add
pushf
into
jl
inc
shll
lcall
adc
int3
fs
jg
into
scas
pop
fcmovb
std
pushf
stc
subb
mov
mov
cmpl
popf
out
jmp
lock
into
or
or
les
das
subb
fimull
in
mov
test
cwtl
lods
jmp
mov
inc
pushf
jmp
cltd
mov
cmpsb
push
pop
mov
lret
int
mov
sub
push
cmp
js
pusha
inc
test
xor
int3
pop
cmp
jnp
dec
dec
mov
outsb
cmp
es
inc
dec
in
in
jmp
xor
aad
pop
fldl2t
rolb
sub
out
mov
fistl
mov
mov
adc
xchg
cmp
cmpsl
out
xor
add
xchg
icebp
in
mov
xchg
xor
jbe
add
outsb
inc
dec
adc
mov
ss
cltd
push
inc
subl
stc
cmp
inc
mov
filds
insl
inc
pop
mov
dec
fs
dec
push
push
jno
mov
xor
fcmovnu
ret
iret
cli
out
add
dec
and
or
push
mov
adc
jno
adc
dec
xor
in
or
pop
jmp
mov
or
jl
rclb
mov
ss
pop
psubq
sub
jmp
mov
xor
stc
enter
inc
add
in
je
loope
jne
adc
popa
hlt
pop
inc
fisttpl
xchg
fisubrs
push
inc
out
test
and
cmpsl
xor
ljmp
lcall
fs
sahf
sbb
test
lock
sub
jmp
jnp
add
push
mov
test
jg
ret
sbb
and
dec
test
idivl
add
mov
idivl
cmp
add
imul
and
lock
aam
cmp
or
mov
push
ss
ds
int
aas
orl
push
and
or
pop
inc
inc
inc
das
imul
sbb
iret
push
push
or
test
aas
loope
mov
cmp
sub
push
add
and
dec
push
stc
inc
and
and
inc
scas
inc
sub
test
decl
adc
mov
push
mov
icebp
jb
adc
ds
jge
mov
out
dec
lds
xor
lds
fists
cmpsb
add
cmp
push
cmc
pushf
data16
insl
stos
push
jnp
jnp
xchg
pop
lcall
es
mov
cld
pop
push
mov
mov
dec
xor
or
in
mov
dec
jmp
mov
cli
sbb
and
xchg
xchg
mov
into
sub
ficompl
dec
xchg
jge
jge
sbbb
xchg
cmpsb
arpl
sub
mov
ret
stos
cmp
mov
ret
xor
ljmp
push
mov
out
ja
push
loop
imul
and
and
pop
insb
clc
popa
and
sahf
push
clc
push
add
xchg
xchg
ds
dec
cmpsb
scas
pop
pop
cli
js
pop
rcr
add
xchg
sub
adc
adc
cs
lret
repnz
xchg
and
sub
and
sub
push
loope
into
cwtl
push
clc
aaa
push
sbb
xchg
aas
rcll
roll
and
mov
fisttps
or
push
cli
mov
mov
mov
mov
fcompl
fidivrl
inc
and
cmpsl
aad
ljmp
mov
dec
ja
adc
sub
mov
loope
inc
into
scas
xchg
cld
sti
imul
adc
insl
add
sub
mov
cld
in
test
jle
ret
lods
xchg
and
mov
mov
xchg
shll
cmp
push
fcmove
xor
les
jle
inc
shlb
jge
and
inc
push
xlat
out
movsl
add
jecxz
adc
shll
xchg
jge
lret
push
icebp
mov
mov
add
fstpt
std
fwait
int
int3
lret
loope
or
add
jge
jb
mov
lahf
fisttpl
repz
rcll
mov
jle
test
ds
sub
xor
pop
sub
sub
xor
inc
jecxz,pn
pop
jnp
lea
or
je
outsl
jp
in
push
mov
and
add
std
sbb
daa
test
orb
jp
ret
stos
mov
shrl
mov
inc
and
cmpsl
cmp
stos
xor
push
cmp
cmp
sbb
inc
lods
bnd
int3
mov
shll
push
lods
shl
cmpsb
aaa
mov
jb
in
aas
adc
xor
stos
lock
out
mov
jecxz
lds
out
sti
jae
hlt
clc
push
out
daa
push
bound
xorb
movsl
pop
out
mov
xchg
jmp
pusha
aaa
fistpl
mov
sti
xorl
test
mov
mov
inc
xchg
insb
dec
pop
jmp
push
shrl
sub
imul
cmp
xchg
add
cmp
dec
mov
xor
movsl
cmp
fiaddl
es
ret
inc
cmpsl
popf
fimuls
and
ret
mov
mov
icebp
add
loope
mov
xchg
cmc
ret
add
ljmp
out
jbe
testl
and
push
stos
pop
int3
jp
cmc
pusha
dec
xchg
bnd
shl
popa
das
shrb
addl
or
mov
adc
xchg
add
jb
movsl
lock
or
aaa
mov
adc
enter
out
push
jbe
xor
fistpll
rcl
mov
jle
cmp
xchg
addl
pop
mov
hlt
lds
decb
jb
imul
inc
cs
push
mov
and
cs
push
inc
icebp
jbe
mov
aad
stos
aam
mov
scas
adc
mov
dec
and
repnz
cmp
movsb
jl
add
rorb
pop
inc
pop
push
aam
fidivrl
ss
sub
cwtl
mov
fisubs
bound
lcall
cwtl
fisttpll
mov
mov
jp
icebp
push
test
std
ljmp
mov
mov
mov
sub
int3
push
ds
xchg
jb
rcrl
push
mov
xchg
pop
test
sbb
out
call
xchg
pop
movsl
cmp
shll
mov
mov
and
fwait
xchg
mov
mov
fcompl
xor
jnp
cmp
sbb
andb
cli
insl
xchg
dec
xor
dec
pop
adc
jnp
add
stos
mov
dec
cs
jle
jae
pop
iret
jge
adc
sbb
fdecstp
and
xor
jno
add
inc
shlb
fsubl
pop
test
sbb
inc
mov
mov
rclb
mov
shrl
insb
insb
and
cmp
into
loop
cwtl
pushf
psubd
ficoml
push
inc
into
sub
and
mov
movl
lods
inc
and
mov
aaa
cmp
jmp
pop
hlt
mov
fcoml
add
cld
std
lock
add
sub
mov
push
and
xchg
out
arpl
and
das
fstl
mov
sub
pushf
xor
cli
iret
pop
lret
aaa
ds
ljmp
dec
and
movsb
movsb
jbe
cmp
fimull
inc
jge
mulb
dec
test
fisubl
iret
mov
leave
hlt
imul
imul
push
lret
xchg
jg
jbe
push
scas
test
lock
call
sbb
insb
loopne
cs
inc
insl
stos
push
mov
inc
dec
cmpsb
je
mov
stc
jo
adc
out
addb
pop
cmp
adc
rcrl
push
adc
adc
sbb
adc
pop
aad
jg
mov
inc
xchg
cmpsl
pusha
adc
shrl
lahf
sub
addr16
sbb
js
fisubl
inc
pop
lock
jbe
push
jle
fs
pop
inc
das
popf
push
inc
pop
sub
sahf
in
outsl
adc
and
mov
insl
jl
jno
xchg
or
dec
xor
xor
and
mov
pop
fidivl
pop
inc
mov
dec
in
incb
js
fnsave
jecxz
jb
sub
jmp
jb
lret
in
xor
jp
outsb
rorl
sbb
sbb
mov
dec
stos
push
inc
fmuls
cld
dec
std
cmp
push
popa
scas
push
ret
sub
cmc
jnp
jo
add
int
mov
jle
xchg
push
rclb
divl
ficomps
sahf
scas
mov
push
das
mov
xchg
outsb
fisubl
data16
repnz
in
loope
push
pop
das
add
pop
int3
fs
or
jb
jl
lock
dec
outsl
inc
cmpsb
mov
sbb
test
xor
xor
fcmovnbe
lahf
pushf
push
call
push
popa
sbb
scas
rcl
aaa
scas
jp
orb
jnp
push
scas
cmp
inc
add
dec
or
cli
neg
movsb
imull
loopne
mov
shrl
mov
mov
cmc
sub
sub
rcrl
lods
test
test
dec
xchg
push
daa
insl
add
sbb
insl
mov
adc
adc
or
sbb
in
xchg
sbb
rcrl
mov
or
mov
or
mov
adc
jns
nop
jae
jl
and
out
or
jle
jns
loopne
movsl
insb
out
xor
inc
ffree
mov
sti
mov
mov
sbb
mov
or
inc
sbb
and
jg
sub
and
add
leave
scas
or
xor
ljmp
sahf
adc
inc
sub
cmp
push
jg
clc
and
out
and
mov
test
cs
and
mov
les
sbb
repz
cmp
mov
cmpsl
xor
push
movsl
shlb
cmp
leave
in
fisubs
test
in
inc
icebp
push
mov
mov
repnz
out
mov
sub
pop
insb
sti
scas
ss
fiadds
xor
mull
rol
xchg
xchg
cmp
lcall
test
pop
nop
jae
mov
and
xlat
popf
adcb
insb
mov
cld
test
jmp
lock
insl
jo
into
das
or
arpl
jp
pop
ja
jp
mov
dec
sub
mov
xchg
dec
sbb
cli
mov
lret
das
adc
xchg
xchg
xor
pop
cmp
cmp
gs
adc
cmp
cmpl
out
ret
imul
clc
dec
pop
pop
out
shlb
pushf
leave
repz
data16
adc
insb
xor
rcll
mov
pop
pop
inc
test
ss
out
mov
cmpl
ret
imul
out
gs
push
lret
and
ret
and
mov
mov
arpl
and
mov
jmp
out
adc
shll
push
pop
adc
and
loop
fisubs
ljmp
pusha
jl
in
cmp
adc
fldenv
and
in
push
imul
test
repnz
jl
lock
and
and
adc
out
gs
push
sbb
mov
lret
push
lea
push
rclb
rolb
lea
mov
inc
sbb
jb
pop
or
daa
push
mov
js
adc
xchg
adcl
cmp
les
inc
mov
test
mov
lock
jl
aaa
cmc
cwtl
cltd
call
jnp
and
and
mov
mov
sbb
pop
lea
push
mov
rolb
popf
aad
loopne
lret
jle
inc
shlb
push
mov
ss
push
xor
jmp
pop
adc
loope
movsb
sub
jge
push
loopne
sbb
addb
outsl
scas
aad
repz
repz
aaa
add
dec
xlat
or
cmpsl
leave
mov
cmpb
pop
flds
les
and
jle
mov
jg
xchg
cmpb
enter
jmp
lret
nop
les
daa
rcll
loope
test
push
push
mov
xchg
xchg
and
cld
push
sbb
pusha
or
jp
mov
mov
int3
sbb
ljmp
lret
xchg
xor
jnp
rdrand
mov
xor
xor
mov
mov
imul
sbb
cmpsb
lea
out
outsl
outsl
stos
and
mov
sub
jle
or
incl
push
pushf
or
pushf
xchg
push
es
mov
lea
and
iret
fmul
xor
ds
xchg
fs
imul
sub
inc
mov
cli
cld
cmp
pop
iret
push
dec
inc
sub
ret
sub
cmp
sub
ffree
aaa
jbe
popf
mov
inc
fwait
mov
dec
mov
lret
ss
mov
mov
xor
nop
imull
sub
sbb
xchg
imul
pop
lea
push
rclb
jecxz
dec
lea
adc
xchg
cmpsl
pop
test
fs
pop
xor
daa
and
fldcw
lods
push
in
in
pop
mov
pop
jae
test
cmc
pop
ja
pop
jp
jnp
inc
push
sbb
test
xchg
xor
jge
or
mov
jne
xchg
mov
icebp
cmpsb
xor
stc
pop
cmp
jnp
movsl
sub
fdivrl
out
fimuls
mov
cmpsl
inc
jno
mov
dec
lret
mov
pushf
push
bound
and
test
xor
mov
pusha
jno
sub
pushf
sbb
sbb
into
repnz
mov
and
es
push
rorb
xchg
jl
xor
mov
xchg
lret
mov
sahf
xchg
jge
cmp
out
mov
call
mov
push
sub
inc
mov
aam
push
push
xchg
mov
pop
sbb
ja
dec
mov
in
cmp
sti
dec
jge
pop
add
int
cmpsb
es
push
stos
sbb
loope
or
dec
cmpsb
int
add
iret
int3
rcrb
dec
pop
ja
xor
mov
fiadds
sbb
add
mov
inc
filds
sar
and
stos
or
mov
mov
neg
lods
and
insl
mov
and
xor
xor
je
in
jne
or
cld
sbb
in
imull
gs
lret
pusha
or
and
add
clc
mov
jge
sbb
jmp
cmpsb
sarl
push
insl
mov
ljmp
xor
pop
mov
fiadds
xor
add
adc
push
xor
lret
xchg
cmpsl
xchg
rcrl
jge
aas
dec
fstl
je
adc
mov
nop
fmul
jns
inc
addr16
loop
mov
std
xor
cmpsb
out
inc
fwait
scas
push
push
rorb
sti
iret
jnp
lods
adc
sub
adc
inc
adcl
mov
dec
test
adc
leave
inc
insb
roll
add
dec
out
push
sbb
scas
cmp
scas
dec
mov
jecxz
dec
pop
je
pop
movsb
adc
pop
xorl
mov
mov
mov
push
mov
mov
sahf
xor
push
rorl
ret
fstpt
add
pop
ss
jns
in
divl
mov
mov
lret
or
notl
sahf
jno
inc
cmp
and
xchg
cmpsl
push
add
in
pushf
mov
mov
push
iret
push
or
adc
adc
inc
cltd
scas
inc
pop
mov
or
add
int
addr16
iret
in
adc
inc
xor
es
mov
dec
add
or
icebp
scas
addb
notl
jecxz
movsb
outsb
fnstsw
cld
cmp
add
sbb
cmp
icebp
push
dec
fiadds
pop
xchg
cmp
xchg
addr16
dec
iret
xchg
fcompl
jo
xchg
xchg
inc
mov
add
inc
inc
fcomip
inc
pop
fldenv
add
test
pop
push
inc
jl
sub
inc
jmp
adc
mov
or
sarb
adc
push
sahf
jo
into
lcall
mov
mov
aaa
push
test
mov
push
bound
insl
xor
dec
sbb
and
cld
inc
sub
sbb
test
xchg
adc
adc
mov
movsl
dec
push
pop
adc
push
inc
and
scas
scas
mov
jnp
sub
out
jno
lds
popa
loop
sbb
cwtl
add
dec
mov
xchg
aad
inc
das
mov
rcrb
imull
sbb
jle
fs
fistl
pop
push
xor
jp
in
and
stos
sub
lea
mov
push
pop
push
and
mov
shll
addr16
push
nop
sub
push
cwtl
rcrb
adc
nop
and
clc
mov
pop
je
out
stc
je
jno
fs
pop
mov
jp
fldl
fwait
insb
stos
stc
or
out
stos
test
and
push
loopne
or
or
sti
dec
jbe
cltd
mov
std
xor
mov
sbb
sub
or
dec
inc
testl
testb
gs
outsb
out
out
les
leave
sub
mov
js
mov
dec
out
pop
jmp
loope
lods
mov
bswap
cmp
mov
push
adc
push
inc
lods
cmp
mov
pop
jb
cld
mov
and
outsb
repnz
jae
xchg
jbe
std
inc
xorl
fidivs
cmp
outsl
in
adc
push
or
int
jno
adc
cmc
mov
cltd
popl
mov
imul
out
pushf
and
movsb
xor
mov
scas
mov
jl
test
xchg
stc
or
test
xchg
inc
js
mov
adc
pushf
mov
cmp
hlt
ret
or
fcmovbe
stos
xchg
or
arpl
adc
or
add
mov
ds
sbb
arpl
cmpsl
mov
loopne
xchg
adc
xor
divb
mov
mov
mov
into
repz
pop
xor
push
xchg
pop
xchg
cmp
dec
loop
aaa
cmp
nop
lret
cs
ljmp
scas
push
lret
inc
shlb
cwtl
xchg
sbb
lds
arpl
lea
movsb
rep
mov
cwtl
xchg
in
mov
jg
jae
mov
push
mov
sub
lds
jo
push
push
inc
inc
ret
inc
push
fs
pop
ja
jmp
ss
andl
lret
pusha
mov
pusha
inc
xchg
or
xchg
xchg
ja
out
jno
movsb
mov
insb
iret
jb
fstl
addr16
lea
shr
mov
pop
cltd
xor
jns
gs
cmp
cs
xor
push
jb
daa
scas
clc
jo
xor
fwait
sub
aam
int
add
and
enter
push
add
adc
mov
add
xchg
imul
sub
mov
push
call
pop
or
test
mov
mov
push
pop
cmpsl
dec
out
and
call
add
nop
or
pop
jno
xchg
jbe
stc
pop
sub
negl
lahf
sahf
addl
xchg
inc
repnz
push
imul
movsl
lret
sub
ja
xchg
pop
fnsave
stos
out
lret
cmp
mov
pop
add
imul
or
nop
or
aas
in
popa
aaa
std
sub
rcrb
cwtl
lock
cmp
sbb
stos
lahf
rcl
add
lret
cs
xor
test
jge
sbb
push
out
push
out
add
loop
imul
pop
xor
mov
fisubrl
push
jnp
shr
popa
pop
xor
addl
dec
lods
xor
mov
adc
pop
dec
cmpsb
and
in
mov
add
cs
cmp
insl
loopne
mov
push
pop
xchg
sub
cltd
cmc
pop
pop
rcll
mov
push
mov
loopne
xchg
js
sub
lret
mov
sbb
sub
sub
scas
pop
push
sar
out
jmp
popf
jg
push
scas
jno
mov
sbb
mov
mov
out
dec
bnd
inc
sub
sbb
push
mov
hlt
pop
jmp
loope
out
dec
out
dec
cmp
mov
subb
lret
push
adc
popa
aas
jg
lods
insb
xor
repz
mov
lret
jae
imul
fimull
lods
cmp
cmp
out
xchg
mov
jg
mov
sarl
in
adc
mov
push
push
add
add
pop
and
mov
mov
pop
xchg
scas
out
ror
cltd
pop
adc
jae
insb
loop
sbb
int
adc
gs
repz
data16
or
pop
int3
lret
lea
stos
leave
dec
push
fsubrl
jg
std
jae
fisubrl
bound
adcl
sbb
mov
jo
pop
xchg
nop
xor
aam
mov
xchg
lds
pop
aas
loopne
ret
push
pop
xchg
adc
outsb
outsl
clc
clc
outsb
stos
out
ja
add
or
xchg
test
outsl
xchg
mov
popa
adc
cli
or
popf
shl
ljmp
fidivrs
pop
std
lahf
lds
std
sub
repz
nop
ja
sbb
dec
lea
or
mov
adc
inc
sbb
or
inc
add
cli
es
or
push
out
dec
popa
xor
dec
dec
rolb
mov
insl
sub
cmpsb
mov
mov
test
add
aas
inc
addr16
mov
ret
mov
sbb
adc
lret
dec
inc
int3
std
adc
pop
and
nop
fwait
add
add
xor
xchg
jp
cmpsb
pop
aas
xchg
fwait
jae
adc
add
sbb
push
add
outsl
mov
movsb
ret
mov
out
adc
mov
xchg
pop
ljmp
lahf
xchg
adc
add
sub
sbb
jae
add
jg
mov
test
adc
ljmp
in
mov
jp
int
inc
sub
pusha
fnstenv
jg
sahf
fstpl
mov
stc
pop
loope
xchg
shl
xor
sarl
mov
in
and
lea
sbb
pop
movsb
mov
jge
or
mov
jb
jb
sub
cs
popf
iret
ljmp
sbbl
or
mov
xchg
jecxz
cmp
ljmp
pop
aaa
xor
in
repnz
ds
jb
cmp
hlt
adc
test
arpl
nop
lods
das
or
jg
sbb
movzwl
shll
pop
inc
or
xchg
adc
jp
daa
nop
pop
cmp
test
cmp
cs
and
sbb
xor
aaa
cmpsb
mov
fyl2x
push
in
outsl
mov
fcoms
outsl
xchg
mov
cmp
aam
lret
xlat
push
enter
sub
inc
xchg
pop
pop
sub
pop
push
xor
dec
add
in
mov
int
ljmp
sub
lcall
stos
dec
icebp
movsl
mov
pop
movsl
cwtl
sarb
or
adc
mov
adc
add
adc
divl
call
call
inc
mov
pusha
pop
test
jbe
je
fists
lea
stc
test
mov
push
inc
mov
push
ds
mov
pusha
cli
lods
nop
cmpsl
cli
add
repz
lods
mul
out
imul
out
sti
sbb
xchg
cmc
push
loope
or
add
dec
cmp
mov
out
jmp
outsb
dec
xchg
cmp
shlb
jge
sbb
inc
adc
sub
jp
dec
and
mov
subl
shlb
xchg
aad
jne
and
push
ljmp
push
lret
sbb
sbb
mov
mov
outsb
imul
roll
inc
std
add
jno
ss
sbb
clc
xchg
push
jecxz
pop
jge
in
add
xchg
sbb
inc
cmp
stos
lock
push
lods
or
xchg
and
cmpsb
jno
xchg
hlt
xchg
push
push
jecxz
push
xor
push
lret
mov
roll
push
push
jmp
jmp
adc
xlat
stos
je
pop
fnsave
jecxz
mul
lods
into
sti
shlb
scas
fdivp
pop
cmp
cltd
adc
or
push
cmp
xchg
pop
jl
insl
ljmp
cmp
mov
jge
and
add
ret
insb
xor
xchg
bound
mov
loopne
jge
dec
sbb
xchg
pop
lods
push
sbb
fsubr
or
shlb
or
scas
inc
rorl
xlat
cmp
sub
and
sbb
icebp
out
sbb
xor
data16
jns
lcall
pop
pop
pop
int3
pop
mov
inc
pop
xor
push
mov
pop
xchg
cld
sbb
lods
scas
imul
push
inc
push
fldenv
and
xchg
test
mov
repz
fdivrs
addl
pushf
subl
testl
pop
jns
int3
cmp
pop
insl
or
aas
leave
mov
vpackuswb
add
adc
jb
popa
xor
xchg
insb
fwait
mov
jb
aad
xchg
sub
push
incb
aad
dec
call
dec
aam
mov
pop
aam
lea
arpl
aad
notl
mov
cmc
xor
dec
imul
ds
xchg
ss
jbe
pusha
mov
jbe
subl
lds
test
int
ljmp
xchg
inc
and
mov
xchg
adc
add
push
subb
jae
or
mov
aaa
stos
mov
pop
push
out
pusha
and
addr16
in
or
int
jmp
into
jl
in
in
nop
shll
fidivrl
push
mov
inc
xor
push
lds
inc
adc
inc
mov
push
out
das
imul
mov
jbe
push
ret
pop
mov
sti
dec
mov
in
pusha
ljmp
add
xchg
xchg
mov
in
insb
pushf
ret
dec
xchg
nop
or
subb
mov
cltd
popf
fs
mov
ss
outsb
popa
fsubl
addb
je
mov
dec
out
into
bound
dec
enter
test
aas
das
jp
pop
pop
inc
push
pop
push
dec
xor
mov
popa
push
push
push
xor
xor
int3
and
push
test
mov
add
in
cmp
mov
sahf
int
arpl
mov
mov
push
adc
and
sub
rolb
aad
push
inc
fwait
stc
imul
jl
fwait
mov
mov
push
shrl
mov
repz
pushf
clc
aaa
fildll
push
jns
out
and
dec
test
jecxz
fisubrl
andb
and
mov
xor
mov
out
mov
popa
pop
pop
stc
insb
or
mov
clc
push
mov
or
dec
mov
cli
call
dec
cmp
addr16
push
movsl
sub
fildll
imul
jne
sub
mov
aaa
inc
out
sbb
fs
andl
add
dec
dec
dec
push
fstpl
lret
icebp
xor
gs
pop
popf
stc
inc
and
jae
push
and
lret
and
test
pop
xor
call
lea
decl
lret
dec
mov
mov
pop
sub
in
or
pop
test
mov
scas
dec
ret
lretw
dec
sub
mov
push
xchg
inc
cli
pop
adc
or
xrelease
sbb
bound
lock
mov
jns
mov
xchg
outsb
mov
adcl
int3
cli
cs
inc
and
lds
mov
mov
lret
icebp
sbb
shlb
sbb
add
cmp
or
cmpl
inc
jecxz
dec
jae
rcpps
aam
mov
pusha
pop
enter
xchg
pusha
inc
lods
sbb
inc
scas
in
out
in
sarl
add
jmp
xor
in
out
in
pop
mov
push
xlat
jae
dec
lea
dec
or
test
fdivl
jg
clc
int
or
inc
sbb
push
ds
adc
sbb
in
pop
rcll
fld
push
add
lcall
jbe
mov
and
pop
inc
das
pop
int
push
mov
mov
leave
inc
mov
std
ret
mov
sub
aad
aam
ret
repz
mov
xor
mov
lret
fnstcw
inc
lcall
dec
add
das
test
jne
imul
loop
and
mov
add
and
or
mov
sbb
aas
in
cmc
clc
fnstsw
popa
cmpsb
fabs
cmp
imul
nop
inc
scas
sbb
push
leave
lds
mov
inc
dec
push
jg
push
out
addr16
pop
mov
sbb
fcmovbe
jb
push
loop
push
je
xlat
dec
mov
test
stos
in
xchg
ret
dec
inc
add
out
adc
pusha
fnstsw
jmp
jae
mov
filds
cmp
gs
mov
mov
sbb
mov
adc
adc
xlat
loopne
rolb
cmp
sbb
adc
lret
popf
pop
pop
dec
loopne
xchg
mov
add
xchg
pop
ss
xchg
cmp
rcrl
push
lea
sbb
outsl
ds
aad
mov
jo
nop
mov
pop
mov
lahf
sbb
xchg
pop
sbb
push
sbb
cmp
sbb
add
lret
mov
ret
es
pop
pop
cs
adc
arpl
mov
addb
aaa
ret
test
mov
aad
popa
cmp
clc
iret
dec
mov
inc
and
aam
movsl
jno
cmpsb
mov
fbstp
jmp
cmp
les
push
je
push
xor
jge
rcrb
fs
mov
imul
inc
divb
in
jns
mov
icebp
repnz
xchg
dec
rclb
in
bound
repz
cmp
insb
ss
jns
mov
add
inc
jnp
or
push
lods
sub
in
jl
jns
add
ljmp
jbe
adc
push
ja
nop
cltd
jno
repnz
fimull
jo
jno
mov
push
mov
sub
pop
and
popf
in
sub
or
mov
sbb
popa
dec
test
je
mov
insl
mov
aaa
das
ffree
into
shll
lods
sub
pop
push
push
push
popf
xchg
jno
ljmp
fistl
test
jo
mov
enter
jecxz
outsl
nop
dec
and
fstpt
testb
and
xor
je
jnp
push
shrl
data16
movsb
js
cmpsl
imul
sbb
cmp
xor
cmp
dec
insl
dec
dec
mov
mov
add
push
cltd
jle
mov
stos
adc
xchg
loope
jecxz
sti
lret
scas
pop
push
mov
push
mov
int
xchg
mov
insb
mov
sub
dec
dec
mov
es
movsl
sbb
dec
or
xchg
jo
insl
mov
fwait
lret
outsl
lock
cmp
pop
xor
mov
cmpsl
hlt
xlat
jne,pn
hlt
aam
dec
add
cmp
add
outsb
jno
pop
das
xor
or
push
dec
inc
fisttpl
aas
pop
inc
std
mov
lock
cmp
jbe
fwait
inc
ss
fcomps
add
adc
cmp
and
sub
dec
fs
sub
mov
or
mov
sar
pop
lock
sub
xchg
test
shl
mov
pop
lods
mov
xchg
cmc
xor
jae
push
jg
imul
lahf
pop
xchg
add
jo
jmp
mov
adc
mov
cwtl
add
sub
repnz
mov
subl
xor
mov
shll
in
jb
mov
push
xchg
das
mov
xor
mov
lret
push
dec
adc
mov
sub
and
adc
push
inc
push
add
pop
add
mov
sbb
xor
clc
fcom
xlat
dec
sbb
jae
pop
rcr
je
repnz
mov
aad
sbb
cmpb
xlat
test
add
lods
ss
out
push
adc
in
mov
mov
xchg
push
jge
mov
mov
inc
dec
or
cmovle
dec
stc
test
push
roll
js
outsl
and
aas
push
jnp
js
cmp
mov
scas
xor
mov
mov
std
add
stc
popf
jne
ljmp
push
xchg
retw
add
or
pop
ds
repz
ljmp
jbe
cmp
mov
gs
gs
mov
sti
jae
or
push
inc
xlat
xchg
mov
mov
ja
xchg
sbb
and
jecxz
sub
mov
cmp
addr16
fld
mov
sub
pop
or
lret
stos
out
mov
in
jl
xor
xchg
mov
stos
xor
bnd
lock
xchg
inc
clc
js
int3
inc
pop
pusha
dec
cwtl
hlt
pushf
cmp
inc
mov
scas
mov
imul
iret
fsubrs
adc
pushf
xchg
push
shlb
je
mov
insb
xor
aam
in
dec
rcrb
xor
cld
and
outsl
xor
gs
icebp
rcrl
push
push
push
movsb
outsb
sub
call
js
aas
ret
stos
xchg
adc
into
fbld
push
sub
pusha
out
cwtl
adc
xlat
mov
jbe,pn
adc
mov
adc
pmulhw
lds
mov
fs
sub
sub
out
pop
mov
insb
popl
dec
icebp
or
lret
lea
and
push
pop
jmp
fstpt
sahf
cwtl
popf
mov
in
enter
pop
push
addr16
rorl
sbb
cmc
sbb
out
push
jno
jae
pop
test
aas
pop
push
call
popf
imul
cmp
sub
ja
stc
sub
jge
jecxz
std
push
xchg
daa
lret
mov
jge
cmpsl
mov
aas
fisubrs
jle
xchg
add
jecxz
jb
je
mov
and
push
js
sub
nop
xchg
fsub
cmp
pop
jle
mov
push
sub
jl
into
lock
sub
outsb
jp
xchg
mov
mov
sbb
out
mov
jg
xor
pushf
sbb
inc
shlb
aad
and
cwtl
inc
sbb
rcll
sbb
orl
fildl
das
dec
xchg
or
mov
sub
inc
inc
jb
dec
aas
rcll
cld
data16
xor
jge
nop
cli
mov
jg
sarl
pop
inc
xchg
push
xchg
mov
cli
xor
stos
xchg
lock
scas
mov
testb
in
mov
sbb
push
and
push
lret
pop
mov
inc
push
and
push
xor
push
jle
test
pushf
pop
push
lods
inc
push
mov
cmp
xorl
dec
pop
leave
rcrb
imul
pop
subb
mov
pop
popf
jbe
sbb
adc
into
pop
mov
or
pop
outsb
addr16
rclb
mov
lret
jno
add
cmp
xor
and
pop
dec
cltd
sbb
subb
push
lds
cmpsl
cmp
mov
loope
add
shlb
mov
repz
cltd
lea
inc
cmp
lret
fs
je
dec
cmp
outsb
loopne
dec
xchg
rcrb
popf
leave
mov
mov
scas
mov
int3
outsl
inc
jbe
leave
cmp
or
scas
fisttps
in
mov
sti
sbb
scas
add
jecxz
addr16
lea
inc
ret
xchg
loop
pop
cmp
fnstsw
aaa
or
inc
lret
and
shl
xor
pop
jno
or
mov
dec
and
dec
adc
stc
or
pushf
bound
ljmp
inc
pusha
mov
mov
mov
bound
pusha
sar
mov
andl
dec
dec
jl
push
sar
inc
imul
inc
jmp
mov
xor
loopne
clc
cmp
mov
xchg
mov
sub
and
sahf
cmp
lahf
jle
mov
aad
adc
loope
jno
push
jg
jno
xchg
inc
cmpb
inc
or
mov
int
out
in
adc
jnp
pop
and
mov
ja
cmp
gs
ret
mov
cmp
cmpsb
mov
push
sub
lods
push
imul
adc
ret
xchg
sbb
sub
scas
loopne
test
adc
or
xorps
js
leave
cwtl
ret
and
mov
insl
xor
repnz
push
int3
add
lcall
mov
dec
scas
mov
push
repnz
inc
xchg
mov
fcomps
sbb
sub
shrb
ds
lock
adc
cltd
or
mov
jo
or
jecxz
lock
pop
push
imul
adc
fucomi
adc
and
xlat
mov
jbe
dec
rorl
outsb
std
or
rcrb
rclb
mov
shll
into
inc
push
mov
pop
hlt
mov
cli
add
xor
dec
int
popf
sub
cwtl
addl
iret
jne
mov
and
jge
mov
inc
add
and
dec
jbe
inc
scas
pop
sbb
mov
int3
outsb
jae
mov
enter
add
pusha
and
mov
push
or
xchg
sub
sub
dec
and
std
or
negl
test
dec
xchg
std
adc
cmp
cmp
or
or
xlat
inc
mov
xchg
fcmovu
in
xor
sub
pop
neg
test
mov
shll
repnz
std
mov
addl
jp
in
cld
pop
cmp
xor
iret
or
lret
mov
in
pop
adc
or
add
arpl
jbe
movsb
and
xchg
test
jle
sub
pop
out
jae
sbb
jb
rorb
shrl
or
inc
out
jb
scas
out
psubsb
and
pop
lret
in
mov
aad
loop
lcall
lods
inc
hlt
xchg
sbb
shlb
in
mov
mov
xor
insb
mull
mov
popl
sbb
sbb
xchg
nop
std
add
xchg
sbbl
icebp
jge
scas
sub
mov
jb
cmpsl
sahf
sub
insb
mov
stos
mov
cmp
cmp
addr16
inc
out
push
mov
fld
jb
loope
js
popf
mov
loope
and
les
lods
jno
xchg
add
shll
add
mov
out
in
push
dec
mov
repnz
das
or
js
fistps
lods
pop
ret
fstpl
fwait
loopne
jg
xor
mov
xor
add
mov
movsl
arpl
popf
cmp
fld
incb
scas
xlat
repnz
inc
cs
shr
sbb
or
mov
sbb
into
movsb
insl
stos
dec
aad
mov
fcomps
xchg
je
xor
stos
dec
and
in
fldcw
outsl
xchg
stos
inc
ret
popf
jle
iret
pshufw
xchg
and
inc
pop
and
stos
jno
cmp
daa
cmpsb
js
adc
addr16
xchg
dec
sub
xchg
sbb
fs
mov
xor
sbb
mov
dec
imulb
xchg
gs
sbb
mov
loope
sahf
mov
mov
hlt
pop
mov
mov
pop
fstps
js
cld
cmpsl
cmp
cmc
adc
daa
mul
cwtl
cmp
outsl
xchg
nop
cmp
nop
ss
popa
push
in
add
ret
arpl
xchg
inc
fdivs
imul
sub
jns
bswap
cld
pop
mov
dec
inc
jecxz
iret
js
xor
sbb
pop
mov
mov
push
dec
sbb
mov
xor
cmp
addb
fdiv
nop
sub
jge
mov
fdivl
repz
sar
pop
repnz
adc
add
push
pop
sbb
cmc
mov
pop
pop
outsb
leave
push
in
xchg
adc
pop
popa
in
ret
dec
inc
pop
fisttpl
call
push
int3
in
jbe
insl
or
pop
js
test
mov
sub
mov
jl
xor
test
js
cwtl
cmpb
push
and
arpl
xchg
clc
dec
je
jae
pop
pusha
pop
push
imul
lahf
add
roll
jb
and
push
cwtl
pop
jno
and
repnz
push
test
sbb
jne
popf
fwait
pop
shrb
fdivr
sahf
mov
out
cmc
push
mov
js
jns
sahf
hlt
lock
cmp
lods
or
scas
stc
adc
pushl
lret
xchg
mov
dec
int3
jbe
and
jecxz
xchg
or
add
jmp
leave
int3
dec
dec
pop
ljmp
mov
es
or
shll
gs
roll
cld
ja
xorl
ja
mov
cmp
mov
ret
fdivs
jne
push
pop
adc
push
test
jns
sub
push
out
rcrl
adc
fcomp
fisttpll
leave
sar
notl
mov
in
push
jb
stos
add
mov
sub
pop
into
jl
popa
xchg
sbb
ja
push
sub
cmpl
sub
fcoml
adc
adc
push
jge
int
pusha
sbb
into
xor
sub
jo
mov
nop
push
push
popf
jno
jmp
jmp
cmp
xor
sbb
arpl
into
adc
dec
jp
pusha
int
scas
jbe
push
lcall
mov
push
nop
and
pushf
push
pop
stc
daa
mov
aam
insl
aaa
leave
sbb
outsb
mov
xor
ret
or
pop
xor
out
xchg
in
mov
pop
xor
lods
xchg
and
psubsw
mov
push
divb
add
stos
mov
jge
inc
inc
in
and
sahf
aam
cltd
xchg
sar
jne
adc
cmp
and
out
cwtl
daa
aad
inc
out
mov
jmp
inc
mov
int3
repz
mov
pop
and
rorl
movsb
inc
fdivl
mov
test
lahf
xor
aam
into
cmp
adc
mov
js
and
cmp
mov
jge
sbb
mov
pop
mov
fcoms
adc
or
sahf
inc
jno
cltd
je
call
mov
aam
cs
or
push
pop
lret
call
repz
sbb
pop
pop
aaa
lock
sbb
es
pop
jge
jmp
rclb
push
push
in
insb
pusha
test
dec
ficomps
lret
pusha
mov
movsl
add
fwait
das
es
fsubr
or
rorl
fstpl
jl
in
enter
dec
mov
enter
mov
rcll
cmp
inc
imul
mov
ds
repz
cmp
in
or
and
je
imul
cli
push
dec
xchg
dec
cmp
loop
lods
mov
lcall
das
call
lret
push
movsl
xchg
std
movsl
mov
out
int
repz
aam
dec
mov
mov
stos
pop
fistpl
jmp
and
sbbb
fsubr
aaa
sar
repz
outsb
jnp
mov
cs
jo
push
jle
push
pop
cmp
xchg
dec
mov
loope
scas
fldenv
es
sub
loop
mov
xchg
outsb
fistpl
mov
and
test
and
add
loop
fidivrl
xor
cmc
std
xchg
jne
cmpsl
adc
add
xor
lahf
or
outsb
outsl
sbb
js
xor
dec
jbe
cli
push
mov
addr16
movsl
pop
sahf
adcb
xor
push
gs
push
xor
push
aas
fwait
daa
loope
sub
movsb
nop
repz
ljmp
xor
jp
pop
rorb
mov
xor
cs
out
cmp
jbe
dec
fsubs
clc
test
dec
sbb
or
popa
int
sub
xor
pusha
adc
add
in
pop
ja
hlt
imul
xchg
ret
in
cltd
loop
int3
out
jg
outsb
xor
leave
cld
mov
pushf
cmpl
out
out
or
in
cmp
rcll
mov
dec
cmp
pop
mov
inc
xchg
sbb
xor
cmc
inc
mov
jbe
loopne
sbb
rorl
loop
or
dec
mov
xchg
ds
inc
pop
mov
adc
pop
daa
push
inc
pop
jne
lea
push
jle
into
mov
out
xchg
sbb
sub
or
out
push
aam
push
into
mov
fsubs
inc
sub
out
into
movsl
jno
sub
ret
ds
fsts
or
dec
mov
repnz
lock
add
subb
jb
sbb
dec
xchg
mov
xor
test
in
es
stc
popf
sbb
repnz
jns
pop
push
and
stos
xchg
loopne
std
rcll
sub
adc
jo
lret
out
aas
pusha
adc
mov
mov
clc
adc
mov
dec
lret
in
mov
or
mov
push
ja
dec
nop
sub
mov
pop
jl
std
mov
add
push
lods
mov
or
mov
jl
mov
insb
xchg
inc
xor
xlat
mov
mov
je
mov
push
mull
push
add
int
es
sbb
add
cs
mov
add
adcb
iret
cmp
dec
pop
push
dec
stos
out
xchg
push
jnp
loopne
cmpsb
stos
xchg
inc
js
adc
sub
dec
daa
sti
push
pop
mov
aaa
call
sbb
xchg
jnp
jle
jecxz
std
outsl
fs
mov
jo
cmc
ret
xchg
into
dec
pop
and
pop
or
xchg
pop
sbb
adc
popa
jae
jge
into
sbb
cmc
or
sbb
ljmp
bound
xor
std
sbb
sub
cmp
iret
push
push
add
pop
mov
js
aam
jp
stc
jmp
fldenv
pop
aaa
lret
and
mov
inc
repz
dec
fmuls
mov
aaa
stc
mov
sarb
jp
fnstsw
jns
push
dec
movsl
test
mov
aaa
push
ret
aam
pop
mov
push
xchg
js
adc
test
jmp
leave
daa
xor
inc
sub
mov
cld
repnz
mov
xor
es
pop
sbb
mov
negb
dec
scas
call
mov
pop
sbb
adc
jmp
sub
dec
aas
test
testb
pop
push
ret
sbb
aas
adc
xor
and
cs
rolb
lods
push
loope
cmp
sub
lea
aam
in
rcll
data16
sub
testb
scas
lcall
leave
or
sbb
stos
mov
adc
loop
cmc
add
fsubl
dec
xor
push
loopne
out
push
and
sbbl
aad
cltd
mov
or
dec
jno
addr16
out
sub
xlat
xchg
jb
lea
sbb
in
out
sbb
adc
or
sbbb
shll
mov
lods
jmp
dec
test
push
add
jle
lods
add
mov
mov
cmpsb
mov
das
sub
adc
adc
and
or
inc
sub
mov
loope
rcl
movsb
jle
mov
lret
testb
fiadds
daa
std
inc
icebp
cli
jo
jo
pop
push
call
or
mov
je
loopne
outsl
sub
dec
xor
cltd
je
jns
icebp
push
add
dec
pop
mov
xchg
cltd
sub
pop
xchg
sub
or
and
or
test
sahf
push
dec
adc
pop
xor
pop
test
jno
stc
cmp
sub
aas
push
in
mov
pushf
in
inc
xlat
push
scas
jge
popf
cli
xor
jl
xchg
shll
jge
test
inc
and
and
push
lcall
das
scas
imul
loop
mov
in
stos
cmp
lods
cmp
orb
test
imul
out
push
pop
push
loopne
jp
or
adc
xor
push
in
data16
lahf
fildl
inc
xor
push
push
cmp
mov
in
das
jbe
dec
lcall
add
insb
jg
dec
mov
pop
jnp
and
clc
bound
push
repz
addb
mov
rolb
dec
in
cld
aaa
pop
jecxz
loop
mov
jae
add
ss
aas
push
lock
pusha
inc
mov
movsb
int3
fmul
cmp
int3
sbb
xchg
iret
loop
hlt
jmp
cld
xchg
scas
pop
and
rcl
cmpsb
add
xchg
inc
leave
stos
adc
inc
movsb
push
bound
mov
loop
or
es
call
les
out
lods
popf
stc
scas
dec
jle
sub
and
out
mov
xorb
sub
push
pusha
lds
sub
jo
addb
out
repz
pop
clc
into
and
test
outsb
mov
inc
dec
pop
or
in
cwtl
pusha
push
ss
or
jno
out
scas
xchg
or
xchg
adc
mov
aam
rcrb
repz
cmp
push
outsb
push
mov
push
mov
cmp
roll
jmp
fdivrp
mov
hlt
cmp
cmp
cmp
sub
or
mov
mov
sarb
mov
jnp
cmp
fdivs
mov
fadds
xchg
pop
mov
cld
pusha
add
mov
jo
pop
clc
inc
mov
repz
and
fdiv
push
repnz
cmpsl
fistpll
lret
jo
add
mov
push
popa
imul
popf
scas
out
or
mov
jns
stos
mov
xchg
subb
sbb
sub
in
fists
mov
jnp
stos
repnz
repnz
add
xchg
nop
add
jne
jae
test
hlt
sbb
xchg
push
sarb
ficomps
sub
hlt
aad
inc
add
imul
mov
icebp
push
xchg
pop
aad
lock
xor
arpl
xchg
and
dec
cltd
outsl
adc
cmp
cmp
push
add
sbb
mov
cmp
jl
mov
mov
push
test
adcl
sub
jmp
sbb
and
lret
test
push
pop
cmp
inc
loop
cld
stos
stc
mov
sbb
lahf
and
jge
inc
cmp
clc
push
dec
dec
enter
sti
and
lds
sub
jb
mov
mov
or
sub
aad
mov
popf
bound
push
jecxz
in
test
cltd
dec
repnz
pop
repnz
loop
ret
adc
and
fwait
rorl
sub
jae
dec
lea
repnz
test
xor
pop
dec
mov
out
pop
mov
imul
push
test
sbb
cltd
ror
add
sub
cld
push
ret
push
outsb
adc
mov
dec
movsb
test
icebp
sbb
fiaddl
out
pop
sarb
mov
neg
or
sub
idivl
jnp
popf
enter
fidivrs
adc
frstor
pop
mov
fsub
pop
sub
inc
popf
cmpsb
push
jmp
jbe
repnz
push
mov
push
mov
push
mov
orb
adc
pop
and
in
xor
adc
xchg
inc
pushf
xor
je
fcmovbe
xchg
dec
jge
add
and
pop
cli
popl
cmpsb
xor
add
cwtl
inc
fwait
ret
enter
jns
xchg
cvtps2pi
lods
pop
and
faddl
out
popa
xchg
push
cmp
jns
movsl
pushf
or
pop
pop
aam
push
mov
adc
push
in
clc
in
je
mov
xchg
cmc
ss
fwait
dec
frstor
xlat
and
add
dec
pop
cld
push
gs
mov
sub
sbbb
call
roll
xchg
lret
dec
inc
insb
pop
dec
xor
mov
push
xchg
fdivrl
cmp
rolb
push
jne
not
es
pushf
sub
fwait
xor
pop
fwait
mov
or
lret
mov
or
outsb
scas
js
js
hlt
xchg
mov
push
adc
fucom
cs
xchg
and
xchg
xchg
bound
dec
popf
lds
leave
call
jmp
xchg
movsb
sbb
push
test
add
cs
cmp
cli
rcll
lock
test
jp
lods
shlb
push
adc
inc
adc
pop
popf
add
in
fisttps
aam
iret
add
js
add
stos
enter
inc
sarb
mov
outsb
loop
jmp
sahf
or
ss
mov
mov
inc
or
add
rolb
xchg
enter
loopne
clc
int
out
popf
sarb
data16
sub
inc
cmp
jnp
xor
cwtl
divb
into
shl
call
outsl
movsb
xor
outsb
sub
movsb
inc
pop
mov
xor
inc
xchg
adc
add
fcmovb
fildl
lcall
loope
inc
pop
fsubs
js
lret
cwtl
ret
lcall
cmp
sbb
fcmovnu
out
xor
cmc
mov
pop
fcoms
sub
mov
subb
arpl
xchg
aad
inc
xchg
test
insb
or
out
sbb
ret
adc
and
add
jne
fistpll
sub
sub
mov
pop
or
lret
cmp
jmp
dec
mov
xor
cmp
dec
and
fisttpl
xchg
pop
lock
fimuls
daa
mov
rolb
dec
jnp
mov
test
cli
mov
adcl
mov
push
fdivs
sub
mov
hlt
iret
dec
je
sbb
mov
ljmp
dec
adc
push
or
xchg
lcall
pop
inc
outsl
iret
mov
dec
adc
sbb
dec
andb
cmp
cmp
ja
sbb
test
or
inc
pop
je
add
xchg
mov
sti
or
push
lcall
push
insl
sub
jmp
push
mov
mov
ss
adc
shlb
sbb
xchg
mov
mov
adc
jbe
mov
or
push
sub
inc
adc
popa
jecxz
lds
xchg
cmp
jo
xchg
repnz
insl
ret
push
mov
mov
xchg
inc
push
cmp
decb
cld
out
push
aaa
inc
mov
out
iret
inc
jmp
add
dec
popa
imul
push
mov
pop
xchg
scas
pop
lahf
lds
mov
xor
and
mov
jle
sti
xchg
dec
es
es
pop
inc
decb
xor
mov
jle
xchg
adc
cmc
lea
sub
mov
cmp
push
xchg
mov
movsl
movsb
and
shrb
dec
rol
ret
push
xor
push
or
rcl
pop
pop
loope
in
sbb
mov
cmpb
insl
jmp
call
xchg
test
sarb
pop
cs
scas
call
mov
imul
repnz
inc
xor
sbb
pop
xchg
in
addr16
sbb
sbb
inc
xor
inc
insb
or
mov
sbb
icebp
add
or
mov
cmpsl
mov
mov
lcall
int
std
sarb
lcall
rclb
xchg
sti
mov
fisttpll
sbb
cwtl
mov
aas
shl
sbb
mov
lods
push
cld
jae
aaa
stos
mov
into
subl
mov
mov
or
add
repnz
mov
ljmp
pop
fs
cmp
into
jb
xor
je
mov
rcr
loopne
mov
hlt
movsb
mov
xor
imul
inc
sub
cmp
xor
add
inc
scas
xchg
dec
mov
hlt
jb
cltd
and
in
call
dec
xchg
pusha
xchg
sub
push
or
repnz
repnz
jo
lahf
xchg
add
fst
mov
icebp
mov
shll
enter
add
push
pop
jge
enter
pop
push
je
loop
xor
pop
jo
add
dec
cs
adc
popf
xchg
xor
add
popf
es
and
popa
aas
jp
xchg
xor
negl
sti
movsl
loope
inc
cld
mov
and
mov
loope
loopne
xor
movsb
cmp
jp
mov
divb
repnz
mov
cmpsl
mov
push
sarl
xor
adc
or
pop
pop
xor
arpl
or
inc
jecxz
std
cs
push
int3
push
xchg
jecxz
inc
sub
and
int
fsubl
jecxz
xchg
and
fisubrl
cmp
roll
mov
xor
jo
nop
popa
jbe
repnz
cltd
adc
popa
out
mov
leave
in
out
out
mov
cmpsb
cmp
inc
popa
pop
ret
mov
inc
out
xchg
add
mov
push
and
lods
gs
push
enter
imul
cmpsb
add
outsb
pop
or
inc
inc
sbb
jne
in
cltd
mov
gs
push
mov
repnz
pop
outsl
and
push
jno
cmp
fisttpl
fsubp
bound
lret
dec
cmp
dec
es
jne
stc
mov
stc
cwtl
jne
cmpsl
adc
mov
mov
sti
out
sbb
push
lods
and
hlt
out
sub
mov
fs
dec
pop
xlat
xor
mov
mov
fbld
cmc
loope
mov
and
mov
inc
xchg
iret
in
lods
pop
dec
inc
adc
mov
clc
out
jb
in
aad
and
mov
add
out
inc
inc
push
notb
ret
push
push
aaa
das
in
mull
je
scas
stos
lods
push
push
pop
pop
cmc
mov
pushl
pop
pop
jb
mov
aad
and
fwait
cmp
xor
fidivs
js
dec
jbe
xor
loopne
mov
ljmp
pop
and
mov
out
call
addr16
mov
call
lret
pop
test
sub
movsb
push
push
and
cmp
pop
inc
movsb
mov
fucomi
loopne
jg
sub
shl
int3
xchg
cs
and
mov
mov
or
push
push
jle
sbb
je
jbe
sub
fiaddl
pop
pusha
jecxz
leave
lahf
pop
sbbl
jmp
popa
xor
pop
add
xchg
enter
mov
or
cmp
sub
mov
add
dec
or
cmp
or
pop
push
outsb
ret
rcll
fisubl
test
jecxz
daa
movsb
jle
mov
call
ret
js
xchg
push
fsts
cmp
arpl
sbb
sbb
pop
mov
pop
mov
in
jmp
xor
sub
mov
and
mov
push
cmp
jbe
jg
mov
int3
mov
jp
cmp
add
and
fdivrl
es
clc
xlat
iret
out
sub
out
jle
and
cmp
sbb
test
cmp
sar
out
movb
ja
sbb
out
dec
push
dec
sbb
sub
lods
pushf
mov
xor
cmp
enter
or
dec
mov
lods
mov
call
jae
mov
push
mov
sub
into
loope
push
lret
sbb
mov
sub
dec
frstor
jns
lahf
adc
push
jg
dec
xor
sub
push
xchg
lcall
jmp
negb
arpl
mov
icebp
cmp
dec
pop
repz
out
xchg
xchg
cld
mov
pushf
hlt
loope
outsb
cmp
inc
and
fisubs
xorl
or
sbb
fists
clc
adc
loop
push
into
mov
sbb
add
ljmp
sbbb
jle
sub
andl
cmp
mov
push
xor
pop
fstpl
repz
fwait
jne
inc
mov
mov
je
out
movsb
lds
call
xchg
add
jb
and
int
and
fcomi
jl
mov
cmp
push
sbb
mov
repnz
cmp
sahf
push
add
push
push
mov
dec
fbstp
dec
adcl
fld
popa
decl
xchg
pop
adc
int
mov
and
call
push
sub
roll
jl
repnz
inc
in
sbb
xor
inc
jne
cmc
addr16
mov
jp
popa
pop
push
in
adc
movsb
pop
cmp
lods
leave
lea
push
adc
shll
mov
sub
mov
cmp
insl
sub
push
icebp
incb
enter
ficoms
js
pop
mov
xchg
mov
inc
fdivrl
leave
ds
xlat
mov
cmp
push
jge
cmpsb
call
std
mov
dec
lock
pop
into
in
push
sbb
rclb
dec
mov
push
push
pop
in
cmpl
mov
jmp
adcl
sub
lret
cmpsb
in
es
out
ss
out
mov
push
dec
enter
repnz
mov
mov
adc
adc
push
and
loop
fs
int3
adcb
jmp
popf
dec
mov
add
andl
pop
repz
lock
cmpsb
cmp
or
push
test
jge
push
ljmp
lods
adc
adc
inc
das
in
jmp
out
pop
jnp
outsl
xchg
std
arpl
push
lock
dec
lcall
sbb
or
lods
movsl
and
inc
jae
pushf
and
xor
outsb
pop
mov
jecxz
sahf
xor
lahf
cmp
pop
test
sub
ds
cmp
inc
pop
movsl
mov
addr16
rclb
in
jle
and
and
adcl
rcpps
leave
das
jecxz
mov
pop
mov
hlt
cwtl
mov
push
mov
bound
mov
cmp
sbb
leave
adc
mov
addr16
in
out
mov
pop
cmp
inc
mov
popa
pop
imul
mov
cli
shll
mov
and
mov
add
jg
loop
adc
sbb
mov
aas
in
xor
xor
or
inc
sti
movsl
xchg
cmp
insb
aaa
or
or
dec
pop
pop
movsl
xchg
cld
dec
ret
mov
stos
std
out
xchg
loop
pop
leave
xchg
pop
adc
lret
incb
icebp
outsb
loope
inc
fidivs
dec
pop
push
lds
add
mov
aas
sub
orb
rcll
push
adc
lahf
xchg
sbb
or
rclb
jecxz
les
testl
sub
in
and
sti
leave
repz
add
mov
cltd
adc
arpl
mov
out
in
outsb
dec
jp
fildll
test
sub
fcomip
sub
add
and
pop
jp
cmp
sahf
out
call
movl
jae
pop
testl
sbb
fisttps
repnz
lods
sub
inc
lea
out
aad
mov
mov
andl
ds
out
mov
sub
jl
fisubs
mov
mov
fstps
shr
lods
mov
ja
mov
mov
jbe
mov
mov
push
sub
or
jl
sahf
push
add
jp
jp
sbb
stos
pop
sbb
add
inc
cmp
sub
cmpsl
test
shrb
and
mov
add
insb
lods
cli
push
pop
test
test
xchg
popa
leave
xor
sbb
or
pusha
and
gs
push
pop
cltd
jg
mov
lret
jmp
fcomps
hlt
mov
andl
aam
xchg
int3
addr16
and
adc
repz
popa
or
call
xchg
sahf
pop
outsb
and
gs
repz
lods
or
sbb
mov
fdivs
imul
jb
sahf
sbb
xlat
out
test
jmp
mov
scas
sbb
pop
rcrl
movsl
nop
sub
dec
repnz
scas
fiaddl
popf
sahf
jmp
mov
pop
movsb
add
test
push
pop
mov
mull
dec
nop
data16
loop
xchg
movsb
xchg
push
lret
sub
cmp
shll
aaa
fcoml
xlat
inc
leave
adc
mov
data16
pushf
inc
inc
pop
in
mov
dec
cmp
pop
cmp
stc
and
adcb
xor
fisttps
daa
and
adc
cmp
sbb
push
sub
add
clc
in
cmp
jle
ljmp
pop
je
mov
xchg
arpl
push
imul
cmpsl
faddp
xchg
loopne
mov
fnstcw
insl
jmp
adcl
lock
test
pop
in
xor
sti
xlat
dec
mov
push
sub
sbb
sub
sub
jmp
mov
addr16
cmc
subl
pop
clc
adc
mov
sbb
dec
popf
lcall
pop
adc
loopne
sbb
mov
in
xchg
push
add
add
daa
test
mov
adc
stos
in
lcall
add
dec
xor
ficoms
fwait
out
popa
lahf
pop
or
sbb
mov
inc
js
out
push
cltd
mov
ret
add
cltd
cmp
ja
mov
push
mov
mov
push
in
idivl
or
jo
jg
and
or
testl
push
fs
xor
test
xchg
les
and
pop
cmp
dec
ja
inc
pop
ds
ja
inc
popl
fcoms
pop
repz
xor
test
lods
cli
mov
mov
fwait
mov
ja
insb
add
imul
and
dec
repnz
sbb
xor
lahf
lock
push
out
push
cmp
shr
mov
mov
cmp
inc
rep
xor
or
arpl
xor
pop
fiadds
cmc
stc
dec
jne
sti
subl
addr16
js
gs
mov
ret
bound
test
jnp
lods
cs
mov
push
sbb
notl
pusha
or
dec
dec
jl
xor
xchg
repz
js
or
push
pop
sub
fdivs
fbld
xor
push
testl
sahf
sbb
pop
sbb
add
loopne
jne
adc
pop
in
xchg
xchg
lret
mov
or
mov
cmpsb
lods
loopne
or
mov
and
sti
js
sbb
xor
pop
cmpl
dec
pop
test
push
fsubrl
jo
sbb
or
fistps
jmp
rcll
xor
dec
hlt
push
adc
cmpsb
mov
int
add
jns
in
ss
imul
adc
subb
lds
pusha
dec
jecxz
mov
push
dec
fldt
rcr
or
jle
lret
je
sub
mov
fs
aam
pop
push
orl
std
fwait
cmc
push
mov
popf
lods
sahf
xchg
adc
lods
mov
sysenter
sti
shll
and
and
or
jle
and
mov
fldenv
rclb
jno
cmpsb
rcrl
cmp
push
cmp
imul
mov
mov
ljmp
cwtl
gs
sti
pop
mov
fstp
fcoml
jns
push
imul
xchg
popa
jmp
adc
sub
and
sti
scas
pop
sbb
or
xchg
jb
sbb
cld
jo
movsb
or
outsl
cmc
jno
fadds
jge
mov
daa
nop
mov
loope
mov
mov
ja
jge
int3
clc
jge
test
and
or
jb
or
dec
fcmovne
mov
xchg
sahf
add
xchg
pop
in
pop
fidivrl
xor
insl
pop
inc
repnz
fimuls
jge
pop
ds
mov
daa
push
cmc
mov
or
cmp
and
test
cli
vaddss
dec
andl
pushf
out
sbb
push
push
cwtl
add
sbb
or
ss
add
icebp
xor
repnz
pop
cltd
and
push
mov
cmp
jae
icebp
jb
gs
int
or
or
pushf
pop
int
mov
jle
pushf
out
das
sub
int
mov
cmp
lock
mov
mov
outsb
lret
add
hlt
cmp
and
sub
jecxz
decb
stc
in
cmc
js
ret
lcall
imul
xor
pop
ret
es
dec
pop
inc
pop
push
mov
call
jo
ss
and
jl
xor
iret
pushf
push
scas
mov
cmp
rcrb
jne
mov
mov
ror
cld
xor
ja
mov
aad
push
rclb
movsb
sbb
mov
mov
mov
adc
cmp
add
bound
pop
mov
aaa
fistpl
sub
movsb
cmp
int3
jmp
mov
mov
js
es
lds
insl
pop
out
pop
mov
leave
xchg
ficoml
cmpsl
loopne
sbb
mov
loop
imul
loopne
mov
xor
mov
call
dec
cltd
and
movsb
out
js
xor
push
aad
pusha
cmp
repz
cwtl
inc
jle
add
rclb
sub
setae
ljmp
cmp
lret
inc
sti
mov
cmp
xchg
ret
inc
jmp
sub
lock
inc
pop
daa
inc
lods
jle
dec
push
test
mov
and
mov
in
or
cwtl
mov
aas
data16
aas
xchg
cld
jo
js
mov
popf
adc
outsl
mov
push
push
sub
adc
in
and
mov
aad
lcall
push
add
scas
push
das
dec
inc
insl
lcall
or
fiaddl
adc
shlb
mov
clc
add
jbe
jno
scas
sbb
mov
cli
mulps
pop
les
jecxz
ret
scas
pop
mov
pusha
int
and
and
or
jg
mov
cmp
push
fcoms
orb
sbb
xchg
call
push
mov
cmpsb
add
orb
add
mov
mov
lock
and
aad
xor
jno
addb
mov
test
lds
sbb
jb
cmc
adc
sahf
cmp
jbe
cmpsb
mov
fisttpl
iret
and
arpl
dec
test
push
int
xor
or
int3
push
adc
nop
pop
sub
lret
into
jo
jnp
ja
hlt
iret
and
dec
stos
das
add
cmpl
or
fcomps
mull
sub
hlt
outsl
out
enter
and
mov
mov
jl
jge
fwait
sub
mov
insl
dec
call
daa
je
xor
adcl
and
xlat
dec
loopne
push
into
jno
jmp
repnz
adc
adc
fadds
xchg
in
test
mov
mov
int3
jo
cmpsb
rcrl
or
xor
push
lcall
pop
mov
and
cmpsb
and
fidivs
in
cld
int3
dec
add
and
jle
adc
jbe
xor
xor
mov
in
cmp
sbb
lcall
and
sub
repz
xchg
add
mov
xor
push
adc
in
push
jae
sahf
mov
cs
js
and
mov
and
stc
enter
jecxz
insl
mov
cmpsl
jo
in
imul
pop
orl
hlt
fistpll
dec
stc
or
sbb
adcb
rolb
adc
test
lret
sbbb
repz
sub
mov
sbb
repnz
push
jno
sub
lea
or
jnp
aam
loopne
in
push
clc
jns
or
loop
and
fs
daa
jge
mov
ret
mov
pushf
push
pop
movl
sahf
popl
cs
in
shll
push
jmp
outsl
add
int3
sahf
mov
loop
inc
and
and
mov
and
cmp
push
mov
push
jo
xchg
dec
cli
daa
sbb
jae
loopne
aas
fnstenv
jnp
xchg
mov
outsb
jbe
jg
push
test
jo
mov
into
jns
dec
and
cmpsl
lea
and
and
in
sub
stos
jbe
push
jo
add
leave
cld
cli
mov
fisubs
jp
mov
xchg
inc
test
insl
cmc
or
in
xchg
xor
pop
jno
lea
das
inc
das
push
sub
pusha
or
hlt
movsb
test
cmp
adc
addr16
iret
ds
xchg
out
cmp
add
out
pushf
cli
sbb
push
inc
adc
test
sarb
addr16
cwtl
inc
sbb
pop
lods
or
pushf
push
mov
cmpsw
and
scas
mov
xor
push
mov
test
pushf
cmpsb
push
cmp
sbb
xchg
movsb
mov
dec
or
dec
push
mov
xor
ficompl
push
or
mov
mov
lret
jmp
imul
icebp
push
or
ds
dec
sub
mov
xchg
dec
iret
mov
ja
cmpsl
dec
insb
mov
sbb
adcl
xchg
add
push
xor
mov
outsb
jns
jb
lods
xchg
xchg
fs
cmp
mov
lea
gs
add
add
inc
es
lret
sti
mov
sub
cmc
and
mov
shrl
test
sub
mov
jae
repz
add
cli
mov
xor
movsl
stos
imul
mov
inc
inc
xchg
jecxz
ret
inc
jp
mov
cmp
loopne
fucomip
insl
push
in
into
xchg
xor
sbb
mov
mov
imul
fwait
cmp
mov
pop
mov
sbb
ja
addb
loope
jno
jle
mov
insl
or
push
mov
cmp
ja
lock
dec
jbe
das
dec
jno
push
ret
aaa
and
pop
cwtl
xor
push
mov
daa
test
loop
fisttpll
inc
mov
sub
fcmovu
mov
push
pop
cli
xchg
jo
xor
inc
popl
scas
dec
sbb
add
test
sub
xor
sub
mov
inc
lcall
jne
pop
lcall
push
cli
push
dec
inc
sbb
xorl
dec
cmp
xor
aad
xor
sub
stos
int
and
inc
sub
jne
and
jae
push
es
push
mov
filds
pop
and
mov
fs
lock
add
sbb
cmpsb
es
in
dec
lcall
cmp
mov
jns
faddl
xorb
fsubl
stos
cmp
xchg
enter
xchg
aad
and
inc
pop
jb
ret
pushf
push
test
and
mov
xchg
sub
sub
or
imulb
or
pop
fdiv
xchg
adc
ljmp
push
xchg
dec
or
inc
gs
loope
add
add
ja
hlt
rolb
into
push
es
mov
sbb
iret
mov
or
push
loope
rcrb
aaa
or
nop
fcomip
lock
mov
xlat
jecxz
cltd
mov
push
jnp
stos
mov
jmp
or
ret
movsb
loope
sbb
addl
mov
mov
faddp
xor
loope
push
xor
das
mov
xor
sar
cmpsl
pop
lea
adc
orl
xlat
stc
jns
mov
xchg
nop
fldenv
insl
add
mov
sbb
jp
fbld
pop
shlb
dec
dec
enter
sahf
std
cmc
sbb
pop
push
pop
popf
or
divl
mov
add
lds
ja
fs
test
push
push
push
mov
call
movsl
ljmp
icebp
std
jne
fadds
jne
lea
ja
cmpb
cwtl
es
inc
arpl
sbb
mov
and
push
fldcw
ret
jno
add
sub
fmuls
addl
xchg
sub
push
test
aad
jbe
xlat
inc
in
xchg
or
sarb
out
cltd
jg
push
jl
inc
rol
xchg
mov
or
leave
mov
inc
fldl2e
and
enter
dec
pop
mov
mov
mov
lret
cli
add
jp
cmp
fidivs
faddp
repnz
lods
mov
clc
xor
mov
cmc
xlat
test
daa
cs
mov
fstpt
pop
jns
adc
xchg
ret
aaa
jae
add
cmpsl
test
sahf
push
jbe
addb
sub
sarl
aam
jb
out
xchg
cmp
inc
in
dec
notb
mov
daa
push
sub
mov
out
xchg
or
mov
fadd
pop
call
jg
pop
inc
sub
int
push
mov
add
sub
aas
dec
data16
xchg
mov
lret
mov
jmp
sub
clc
xor
jbe
fisttps
fwait
xor
cld
sbb
adc
add
adc
xor
daa
or
scas
and
and
jne
pop
cwtl
mov
mov
mov
push
jecxz
mov
inc
sbb
hlt
aas
and
push
lcall
cmp
push
lea
cmp
insl
jecxz
and
mov
mov
xor
mov
add
outsb
adc
xor
jge
or
jnp
cmc
xchg
inc
in
pcmpeqd
cs
es
test
push
cs
lcall
or
fldt
aam
inc
adc
sub
repz
insb
cli
pop
lods
fcomps
stc
or
push
repz
jecxz
js
adc
fdiv
cmc
inc
xchg
lods
dec
xchg
mov
push
es
inc
iret
inc
int3
int3
pop
cmp
add
mov
xor
lds
sub
push
xor
ja
or
iret
mov
or
xor
fadd
das
call
cmp
cmp
sub
sub
fbld
mov
mov
ret
test
repnz
gs
in
ljmp
or
aad
ds
fistpll
adc
cmp
mov
clc
shll
mov
lock
pop
call
das
dec
xchg
aaa
inc
in
jecxz
and
pop
and
xlat
jge
pop
pop
ret
scas
ret
sbb
push
lods
jge
mov
push
xchg
ljmp
mov
loopne
push
pop
ja
arpl
jle
add
mov
cmp
rcrl
dec
and
testb
sub
dec
jae
in
push
cmpsl
or
mov
loopne
test
mov
adc
mov
mov
popa
arpl
in
xor
mov
dec
adc
xorl
push
push
sub
pop
jge
dec
mov
imul
dec
bound
jmp
cmc
push
mov
and
in
loopne
gs
mov
sbb
sahf
mov
daa
cwtl
ss
push
sub
push
sti
or
mov
divb
cmp
xchg
or
mov
int3
pop
loopne
dec
push
or
mov
stc
mov
rcll
mov
rolb
cwtl
mov
cmp
mov
mov
mov
pop
add
int3
dec
xchg
pop
in
jl
pop
push
lock
in
jns
mov
pop
es
add
inc
loope
into
popa
pop
pop
nop
filds
sbb
repz
out
jno
js
hlt
pop
xor
jmp
pop
cltd
mov
cmc
pop
gs
push
daa
in
sub
fidivl
popa
fnstenv
push
bound
push
hlt
sub
sbb
enter
iret
push
jmp
fisttpll
in
testb
iret
in
mov
cmpsl
stc
push
mov
push
in
call
ret
das
xor
das
push
out
xor
ljmp
and
cmp
in
mov
negl
mov
scas
mulb
dec
enter
fists
inc
and
sbb
repz
in
roll
jb,pn
orl
test
add
or
stc
lahf
xor
and
rcll
mov
xchg
jge
les
movsb
test
aad
mov
and
xor
push
loop
int
sbb
and
xor
aaa
jmp
loop
jbe
xchg
sbb
cmp
cmc
jecxz
dec
sarb
mov
lds
test
jns
xchg
jmp
jge
test
xchg
loop
cwtl
outsb
xchg
popa
push
jne
cmp
lea
push
rol
mov
mov
mov
cmp
in
mov
pop
sub
ficoml
dec
mov
insl
pop
fcmove
push
jmp
xor
mov
push
or
fdivrs
and
jp
mov
je
xor
mov
push
repz
sbb
cvttps2pi
or
sti
jno
call
fld
jge
jmp
jl
mov
mov
aas
xor
pop
arpl
cmp
mov
pop
fcoms
icebp
add
rorb
push
pop
jno
adc
insb
in
pop
clc
sub
or
ds
int
push
xor
sbbb
jge
push
pop
mov
lret
sub
jp
jmp
lods
daa
pop
and
xchg
cmp
lds
mov
outsl
ja
jl
cmc
lods
pop
jb
xor
repnz
mov
lods
dec
sahf
mull
bound
scas
orl
push
movsb
adc
lods
push
xor
jbe
lret
or
lret
pop
or
mov
aad
and
jne
hlt
mov
test
std
push
stos
mov
inc
adcl
aam
sub
cmc
fnsave
rcr
ds
lea
xchg
rol
xchg
or
cmp
mov
or
xchg
sub
cld
stos
push
adc
sub
imul
sub
adc
push
adc
inc
mov
jno
pop
loop
cmc
push
das
out
adc
cmp
adc
inc
out
cmp
adc
imul
rcrl
inc
cmp
cmpsb
pop
xchg
jmp
mov
cli
xchg
mov
add
addb
aas
mov
divl
xchg
ret
jecxz
das
cmpsb
dec
sub
data16
and
jg
lret
loop
aam
mov
leave
inc
popa
add
sahf
and
jb
ss
call
fiaddl
in
pop
push
arpl
push
enterw
pop
stos
mov
notb
lret
gs
or
lds
adc
cmp
and
mov
fldcw
add
lods
inc
aaa
fld
outsl
push
mov
pop
int
inc
cmp
adc
fisttps
or
and
mov
push
lock
mov
jl
mov
mov
inc
mov
mov
mov
adcl
pop
ja
push
outsl
sahf
lods
rolb
sub
mov
cltd
sub
es
lcall
cli
rcll
test
test
mov
outsb
out
and
push
xorl
pop
test
add
ljmp
hlt
cmp
push
popf
out
stos
out
push
movsb
dec
sarb
cmc
lock
pushf
mov
or
dec
and
add
lahf
mov
outsb
lcall
gs
pop
dec
bound
test
movsb
or
insl
sub
jb
jb
loop
sbb
xor
sarb
xor
je
fdivp
pop
bound
mov
bound
mov
repnz
aam
in
cli
mov
mov
mov
jmp
fmuls
adc
in
mov
sub
cmp
or
fimull
or
dec
cmpps
ja
outsb
pop
mov
rcll
mov
add
and
loope
pop
and
aam
mov
mov
lods
mov
push
lods
pop
loope
clc
test
lret
and
mov
add
ja
pop
aas
xor
sub
out
sub
mov
mov
pop
test
mov
ret
push
cmp
test
fiadds
lea
mov
imulb
xor
mov
and
jge
jecxz
sub
je
pop
dec
dec
cmpps
cs
xor
pop
pop
xor
outsb
outsl
fidivrs
xor
jmp
mov
add
lods
mov
icebp
iret
mov
cmp
dec
inc
cld
add
jle
fld
jmp
in
imul
jne
mov
imul
xor
lret
lret
lcall
dec
js
cwtl
mov
daa
arpl
push
mov
lret
clc
rcrb
nop
jns
inc
cmp
into
ds
pop
shrl
arpl
sahf
lcall
xor
mov
xchg
mov
adc
inc
cmpsl
mov
shll
lods
xor
stos
or
add
cmpsl
xchg
adc
aaa
popa
adc
mov
rcr
notl
dec
fbstp
sti
xchg
pushf
mov
test
test
dec
or
pop
sub
push
jnp
repz
mov
test
cli
lds
roll
cli
push
push
fidivrs
jns
iret
pop
mov
nop
das
leave
aad
out
mov
imul
lahf
iret
or
sub
in
orl
jecxz
gs
fldenv
pop
jno
mov
push
hlt
adc
test
mov
and
cmpsl
sarb
cmp
add
mov
xor
and
xchg
xor
and
lahf
mov
mov
adc
movsl
jmp
fdivl
add
push
mov
adc
std
xchg
add
push
scas
repnz
daa
push
sub
cli
jae
aad
imul
loopne
adc
enter
dec
and
fwait
popa
adc
cmp
scas
out
mov
gs
mov
mov
fldl
daa
ret
cmp
pop
inc
das
jbe
push
sub
adc
pop
jno
mov
xchg
imul
lret
data16
add
and
jle
xchg
iret
sbb
or
test
jl
xor
cmp
cmp
pop
fimull
inc
add
adc
sti
mov
inc
jns
movsb
sarl
cwtl
loopne
xlat
dec
cmc
js
cmc
sbb
inc
add
int
test
pushf
cmpsl
cmc
mov
sbb
dec
clc
xor
movsl
dec
scas
pop
adc
or
sub
push
cmp
push
pop
dec
inc
cmp
sbb
loope
loope
sbb
adc
jp
push
mov
sahf
mov
cmp
adc
cmpsb
mov
cltd
or
leave
mov
movsl
mov
cmp
out
push
mov
movsb
push
bound
mov
push
int
sysenter
cltd
movsl
out
and
enter
sahf
pop
sti
das
pop
jo
adc
aad
xlat
mov
pop
xchg
pusha
adc
inc
aad
stos
sbb
or
ss
xchg
into
div
adcl
ret
xchg
cltd
pop
cwtl
repz
jbe
mov
pop
ret
insl
mov
add
xor
and
es
data16
test
dec
cli
test
mov
or
fdivp
bound
andl
sub
xor
ja
in
lock
fsubl
mov
aam
cmc
sbb
jns
push
fcoms
mov
aas
xchg
out
loope
mov
cli
loopne
dec
shlb
fucomi
sbb
out
cmpsb
and
cmp
ja
imull
movsl
or
popf
shll
inc
mov
in
xor
dec
sub
fidivrs
add
pushaw
and
sbb
adc
ss
outsl
xchg
lods
cmp
lcall
cld
xor
and
push
mov
fwait
data16
push
repnz
xchg
insb
lret
fbstp
ljmp
orb
pop
ljmp
jmp
inc
mov
in
iret
add
pop
sbb
clc
jge
mov
pop
stos
ret
ss
lret
dec
stos
pmuludq
mov
clc
fmull
push
pop
sbb
add
pop
jmp
cli
mov
cmp
xchg
loope
lea
repz
test
sub
jnp
adc
xchg
mov
fisubl
jns
cmp
repnz
and
sub
pushf
push
jns
push
dec
xchg
xchg
sti
mov
jmp
or
cmp
inc
scas
loope
fsubr
frstor
push
xchg
cmp
push
mov
ljmp
test
mov
push
in
mov
in
leave
stos
or
jmp
sub
or
mov
cs
inc
outsb
cltd
mov
adc
cwtl
nop
iret
jnp
or
icebp
loopne
add
stos
jge
aad
jg
push
popa
imul
mov
cwtl
cmp
xchg
xchg
test
mov
repnz
sub
shl
cmp
jne
aam
stc
or
xchg
inc
or
or
lock
pop
out
repz
mov
lcall
fdivrp
add
hlt
add
cmp
jno
or
push
jns
ss
push
lcall
test
sti
scas
loop
cwtl
mov
mov
jno
and
stc
jb
pop
ja
sbb
mov
or
mov
flds
mov
push
mov
push
inc
xor
outsl
cmp
xor
fcmovnbe
frstor
sub
or
cmpb
adc
enter
pop
inc
int3
mov
sbb
imul
push
push
mov
sahf
dec
mov
je
stos
cwtl
xchg
inc
and
mov
scas
jo
xor
dec
adc
inc
cmp
mov
jecxz
inc
mov
xchg
sub
fs
call
push
sub
pop
imul
cmp
loop
jl
cmp
and
scas
jns
aad
jns
scas
add
pop
in
stc
add
or
add
test
loop
adc
adc
mov
fcmovu
xchg
rol
into
inc
dec
cltd
dec
and
xchg
pusha
int3
insl
fildll
js
push
add
out
pushf
cltd
stc
and
dec
sub
fnsave
nop
icebp
scas
fsubs
mov
mov
cmp
pop
mov
lds
bound
push
xorb
xchg
les
xor
mov
push
mov
mov
je
fsubl
mov
aaa
fs
add
dec
sbb
imul
sbb
adc
rcr
ds
shl
pop
xor
sbb
dec
outsb
je
mov
popf
repz
rcl
mov
mov
ja
dec
push
push
and
push
stos
push
mov
push
outsl
xchg
xchg
and
sub
sarl
subl
ror
ss
fwait
sbb
xor
lret
cmpsb
loop
loope
ss
and
hlt
mov
fwait
ljmp
data16
pusha
sub
xor
mov
pop
mov
out
xchg
pop
aad
add
bswap
mov
adc
cmp
hlt
cmpsb
cmp
or
int
adc
adc
es
outsb
sub
sbb
pop
jbe
movsl
inc
repz
fwait
cmc
cmp
pop
add
lahf
mov
call
out
cltd
mov
mov
and
xor
mov
es
arpl
ret
xchg
lds
imul
pop
mov
sbbl
mov
mov
pop
mov
or
push
inc
or
inc
pop
mov
jne
cmp
pushf
mov
xchg
jne
sbb
pusha
xor
xor
enter
negb
ja
sbb
repnz
mov
clc
shll
pop
adc
cmp
fs
and
aad
sub
push
dec
or
mov
rcrl
shlb
sub
mov
lds
dec
mov
push
es
mov
pushl
xchg
insb
jb
push
push
and
cld
xor
cmp
fiaddl
or
inc
ljmp
movsl
push
inc
and
lds
push
add
cmc
out
scas
icebp
ljmp
test
lods
rep
movsb
sbbb
push
mov
sbb
xchg
adc
movsl
js
add
sub
mov
inc
xchg
sub
jp
push
push
and
das
push
sbb
pop
adc
popa
bnd
xchg
mov
in
enter
mov
pop
mov
out
mov
pushf
sahf
dec
inc
mov
notb
icebp
add
xchg
mov
jge
data16
and
leave
xchg
xlat
inc
xor
js
call
push
xchg
popf
adc
pushf
movsb
mov
icebp
test
mov
fdivrl
push
or
push
xchg
push
push
sti
mov
and
lret
nop
mov
dec
jae
jno
xor
test
inc
addr16
test
cmp
fsubrl
xor
adc
xchg
outsl
aaa
loopne
xor
es
jb
push
gs
call
add
repnz
cmpb
xor
and
je
xor
inc
je
or
pop
sub
xor
popa
daa
addr16
icebp
nop
push
sarl
inc
cwtl
push
lods
inc
adc
and
cmp
xor
xchg
mov
add
xchg
and
pop
imul
enter
or
sbb
mov
xchg
iret
push
jns
fsubr
mov
stc
inc
cmp
movsl
push
jecxz
out
outsb
fidivs
adc
push
push
xlat
pop
sbb
inc
pop
and
or
adc
shll
jp
nop
sub
jns
adc
cmp
add
inc
push
jmp
dec
repz
mov
cmp
ds
dec
push
add
int
sub
mov
stc
cld
std
sub
add
mov
filds
xor
push
sbb
mov
push
lods
add
jle
pop
pop
dec
pushf
mov
ja
es
stos
or
sti
jecxz
jns
test
fcomp
sahf
inc
mov
or
jle
test
xchg
sar
pushf
cmp
lcall
cwtl
ljmp
jnp
insb
pushf
dec
call
push
cmp
inc
xchg
js,pn
mov
or
cmp
push
adc
lds
outsb
mov
xor
xor
out
mov
out
push
adc
clc
xchg
jns
or
mov
cs
lcall
xchg
in
outsl
mov
gs
clc
inc
hlt
les
xchg
addb
sahf
pusha
movsl
outsl
push
sbb
xchg
in
xchg
rcr
out
loop
in
hlt
mov
mov
push
in
enter
test
mov
pop
mov
leave
inc
mov
add
sti
js
lods
mov
jns
imul
cmp
mov
mov
mov
mov
movsb
mov
pushf
mov
mov
push
mov
mov
aas
cwtl
ficoml
int
int3
out
xor
adc
in
int
dec
sti
mov
cld
xchg
rorb
adc
dec
and
mov
adc
out
mov
mov
jne
mov
sbb
outsb
test
adc
repz
test
add
and
aad
sub
jnp
sbb
jns
aaa
xor
fsubrs
into
fucomip
push
les
jbe
mov
sbb
out
loopne
cltd
mov
mov
mov
pop
in
add
cmc
aad
stc
sbb
sahf
scas
jne
lea
xorb
adc
jge
sbb
push
test
mov
inc
mov
sub
je
addl
inc
js
cmp
movsb
in
imul
cmpb
sbb
aam
jmp
push
das
nop
jnp
insl
fstps
xchg
mov
addr16
xchg
shrb
push
addr16
and
sbb
jns
ret
clc
xor
movsb
stos
into
adc
inc
or
xchg
jae
xchg
pop
mov
xchg
mov
daa
add
dec
cmp
out
gs
mov
stc
push
push
movb
fdivrs
les
cltd
enter
fs
cld
fistps
xchg
and
mov
repz
daa
sbb
aas
scas
div
pop
in
sarl
dec
ud0
mov
imul
cmp
push
sbb
push
and
sub
cmp
push
sbb
mov
mov
test
or
jbe
cmp
js
pop
aad
jns
lret
roll
ljmp
mov
popa
bound
popf
pop
push
test
xlat
add
out
add
andb
dec
push
and
sub
pop
sbb
das
push
test
cmpsb
outsb
cs
sahf
cmp
shrb
jl
xchg
xchg
add
sahf
stc
mov
lret
sub
dec
push
dec
xchg
aas
mov
xor
jb
pop
lea
movsb
dec
sbb
mov
or
add
dec
mov
data16
add
pop
pop
stos
push
test
test
cmp
lahf
pop
mov
sarb
nop
jne
add
aam
clc
inc
cmp
pop
mov
enter
add
andb
fildll
sub
xchg
movzwl
std
mov
dec
mov
sbb
shrb
mulb
pop
popa
sub
mov
scas
jb
jmp
mov
decb
not
fdivr
movsb
pop
adc
add
xchg
sub
xor
sbb
test
and
adc
pop
xchg
cmpsl
fcomps
and
das
and
pop
fwait
cmp
add
std
out
dec
lcall
out
jae
mov
aaa
pushf
pop
mov
shrl
pop
les
mov
sti
pop
push
inc
mov
loopne
repnz
xor
pop
lock
ret
ret
and
pop
mov
stos
shlb
je
cmpl
sbb
xchg
lcall
push
adc
push
mov
ret
faddl
fdivr
loope
loop
std
bound
cmp
push
nop
cmp
mov
leave
cld
hlt
add
cwtl
sti
sub
int
pushf
xchg
xchg
bound
in
movb
or
dec
sub
jg
push
jns
pop
jmp
aaa
push
iret
nop
xchg
push
sub
mov
pop
mov
push
or
ja
xor
cmc
sbb
xor
add
sub
cmp
mov
fidivrs
xchg
lahf
pop
in
xor
dec
jmp
inc
lret
adc
cmp
xor
sbb
clc
shl
mov
pusha
jns
mov
mov
data16
icebp
jmp
mov
add
jp
xor
rcr
arpl
imul
ficompl
test
push
dec
push
outsl
mov
or
repz
cmp
clc
sub
xchg
mov
mov
and
cli
cmp
daa
xchg
fbstp
in
pop
arpl
repnz
jle
add
test
adc
aas
jo
jno
fcmovne
mov
push
cvtps2pi
popa
sub
lds
sbb
add
leave
mov
call
js
adc
or
repz
out
cmp
adc
inc
mov
aaa
sub
pop
fistl
and
xchg
push
mov
popf
dec
pop
cmpsb
aas
jle
jmp
add
cmp
inc
out
cmp
pop
xor
xor
int3
mov
pushf
add
loope
shll
push
lahf
fmuls
pop
inc
mov
test
rcl
mov
fisttps
cmpsb
pop
dec
aas
xchg
sub
rcll
faddl
hlt
inc
mov
or
lock
out
sti
inc
call
test
adc
inc
repz
imul
xor
add
pop
pop
mov
mov
dec
jo
clc
lahf
lea
ja
mov
xlat
sbb
mov
cmp
add
fisttpl
sti
sbb
adc
pop
push
ljmp
pop
pop
shlb
sub
xor
jp
add
out
nop
or
ret
int
rorb
stos
xchg
test
fistpl
mov
mov
out
xor
imul
je
lret
add
out
pop
call
dec
das
fbstp
inc
jecxz
push
mov
icebp
mov
mov
inc
dec
dec
loopne
xor
aad
stc
jo
push
dec
and
popa
lds
pop
dec
pop
hlt
dec
movsl
in
dec
jmp
int3
jno
push
fdivrl
inc
imul
jno
push
lcall
inc
lcall
mov
les
adc
test
das
out
push
pop
add
data16
mov
loopne
cmp
cmp
xchg
mov
fbld
cmpsb
xor
mov
xchg
jo
mov
mov
mov
sub
es
mov
dec
push
pop
aaa
fsub
adc
mov
loopne
sub
aam
in
cmpsb
popa
pop
dec
popl
push
inc
sub
cmp
add
pop
repnz
add
shrl
dec
fisttps
imul
sti
pop
enter
jle
cmp
ss
out
outsl
sbb
arpl
aaa
addr16
orb
arpl
mov
xor
cmp
js
std
sub
lea
xor
mov
ljmp
add
cwtl
arpl
and
imul
pop
jge
jmp
cmp
shrb
lock
and
mov
lcall
lds
xchg
mov
movsb
data16
mov
js
iret
inc
in
mov
mov
frstor
mov
test
jns
inc
shrl
add
mov
addb
mov
idivb
add
xor
es
mov
xor
jg
cmpsb
nop
inc
pop
and
cwtl
jg
movups
icebp
adc
ljmp
jp
aaa
add
lahf
jne
mov
mov
adc
bound
sahf
hlt
jo
cli
cmpsl
stos
push
or
js
mov
sub
mov
clc
lods
mov
cmpsl
nop
and
mov
dec
sbb
lds
cmp
sbb
int
call
repz
dec
sahf
das
adc
xor
scas
sbb
dec
mov
je
sbb
aaa
mov
cmp
out
out
inc
sub
pusha
lds
inc
fcoml
fcmovu
mov
loopne
lock
lea
jge
xchg
stc
movsl
nop
ds
clc
out
xor
sbb
jl
out
sbb
mov
ss
scas
push
or
xchg
hlt
xor
ficoml
fwait
out
pop
adc
xlat
jnp
xorb
push
mov
fucom
xlat
scas
pushf
imul
icebp
mov
mov
es
aad
or
lret
lods
and
ljmp
roll
push
jmp
xchg
pop
scas
pop
push
clc
aad
out
adc
fdivrl
mov
xor
shrl
stc
rcrb
add
ds
lahf
jne
push
loope
xor
add
adc
in
cmp
shrl
into
cltd
fdivl
mov
pop
mov
pop
sahf
sysret
or
adc
test
or
frstor
movsb
inc
imull
mov
dec
sbb
nop
mov
daa
mov
ss
js
push
rcrb
int
xchg
icebp
pusha
mov
es
idivl
jne
push
dec
neg
insl
dec
mov
popa
push
push
int
fists
sbb
enter
int
movhps
lret
aaa
lret
loope
sub
ds
cmc
ljmp
jns
adc
jne
imul
mov
ds
sti
es
scas
lcall
or
mov
popf
inc
push
adcb
sbb
xchg
ss
popf
add
mov
jae
and
js
fs
push
imul
movsl
adc
orl
mov
and
gs
add
xchg
add
and
inc
mov
out
fs
cmp
jne
stc
loopne
cmp
xor
icebp
fucom
cmp
les
add
inc
adc
cmc
xlat
add
pop
jnp
jno
mov
sbb
jo
xchg
data16
or
test
mov
xor
in
aas
ja
push
lcall
ffree
nop
lods
add
stos
mov
mov
cmp
aam
mov
ffree
orb
out
cmp
sub
sub
hlt
fidivrs
and
rorl
in
out
sbb
xchg
pop
and
lds
lret
dec
lahf
mov
ljmp
cmpsb
pop
xchg
imul
mov
jno
cltd
cmp
cmc
cmc
int3
ljmp
mov
rclb
and
push
pop
add
outsl
in
dec
cmpsb
in
filds
stc
loope
jmp
inc
jno
inc
pop
pop
dec
push
ss
or
dec
or
sub
arpl
dec
dec
popa
je
daa
xchg
pop
popf
mov
lock
and
shrb
push
inc
jg
jmp
cwtl
leave
or
push
paddsw
int3
mov
mov
mov
sbb
push
rolb
mov
xor
out
cmovge
mov
addl
xchg
aam
push
xorb
sti
scas
sbb
cli
and
push
stos
sti
fiaddl
inc
fiaddl
lock
xchg
add
mov
out
lods
cmp
push
addb
aam
icebp
ret
xchg
mov
mov
fcmovne
test
imul
lods
ret
lock
cmc
scas
pop
ret
pop
jne
xchg
pop
mov
mov
xor
add
inc
push
sbb
mov
push
jg
inc
xchg
cmp
orb
aam
das
xchg
mov
cli
push
js
cs
fsubrs
mov
push
inc
enter
and
pop
cmc
jp
movsl
push
rcrl
add
shl
lea
and
jg
lods
and
imul
mov
cs
mov
out
jae
adc
push
or
mov
lahf
adc
ds
lds
xlat
js
call
stc
cmp
dec
cmovs
inc
mov
test
cmp
adc
xchg
add
addl
loopne
int
stos
sbb
ja
xchg
mov
cltd
mov
mov
mov
adc
in
lahf
mov
add
pusha
js
push
xor
cwtl
lock
cld
add
push
dec
mov
lcall
or
ficoms
sbb
iret
sub
push
popf
and
xlat
pop
add
push
xor
loop
inc
scas
sbb
das
mov
mov
les
sub
xor
stc
andl
sahf
jmp
xchg
sub
sbb
int3
fisttpl
lds
enter
and
sahf
push
movsl
sub
dec
sub
lcall
ds
jl
pop
leave
pop
out
inc
or
and
cmc
inc
out
int3
test
push
xchg
test
stos
mov
call
lods
cmpsl
pop
jp
daa
insb
call
ss
jbe
dec
ja
in
negb
leave
xchg
test
mov
sub
cld
add
sub
repnz
dec
cmp
lods
dec
dec
cmc
out
and
inc
push
loope
add
add
imul
adc
or
aas
lahf
cmc
sbb
scas
jb
mov
inc
cli
sarl
enter
xor
mov
or
test
neg
adcl
inc
or
in
adc
cltd
adc
or
pop
jno
call
dec
mov
dec
dec
data16
pop
test
rorl
icebp
xor
cwtl
out
js
pop
dec
xor
add
cmc
rorb
stc
subb
jbe
pop
outsl
dec
test
dec
lea
mov
cwtl
jo
push
cld
jl
leave
lock
repnz
xchg
scas
pop
dec
cmc
mov
mov
std
jbe
mov
sbb
sub
pushf
sbb
std
mov
xchg
loope
pop
mov
rcll
std
adc
push
pop
mov
sbb
shl
or
and
dec
push
lret
sub
mov
std
out
mov
cmc
in
scas
mov
adc
xlat
jecxz
shrl
std
nop
bound
js
jne
xchg
scas
xor
ds
xor
fcmovnu
lea
test
adc
and
and
inc
jp
fldz
or
cmc
shl
iretw
xchg
ljmp
cmp
dec
mov
movsl
mov
lcall
int3
pushf
cmp
mov
cmc
daa
dec
lods
xor
xor
jle
fstps
push
dec
je
push
test
sti
vpaddq
pop
dec
dec
jne
or
or
mov
mov
jo
ja
lods
lcall
loope
lret
test
and
pop
aad
adc
jno
dec
pop
loop
int
jbe
mov
or
push
mov
fistpl
in
inc
pop
pop
lret
and
and
inc
mov
lret
cmp
sbb
lret
lret
mov
int
sarl
loop
popf
inc
dec
enter
sub
adc
mov
lock
lods
gs
loop
pop
outsb
jecxz
call
in
mov
stc
ds
xlat
cmp
cltd
insb
hlt
xchg
adc
cmp
add
mov
cli
push
out
cs
cltd
sub
lods
xchg
cmp
movsl
xor
push
sbb
jo
xor
dec
es
mov
xchg
cli
jno
fwait
mov
mov
or
mov
jmp
and
fbld
mov
sub
dec
jns
mov
neg
icebp
js
push
cmp
mov
mov
dec
xchg
dec
adc
pop
pop
inc
mov
sbb
insl
outsl
loope
inc
scas
mov
or
es
arpl
rcrl
repz
sbb
sub
cmp
pop
jecxz
jle
fisubrl
fists
ds
into
and
in
out
pop
xchg
mov
ja
mov
mov
sbb
das
jecxz
rcrb
sub
xlat
sbb
push
and
mov
adc
jecxz
push
mov
outsl
jb
stc
scas
loopne
sbb
popf
push
xchg
lcall
cmp
cmp
ljmp
jnp
aaa
test
adc
add
lret
push
shrl
sub
cmpsb
outsl
jb
dec
mov
xor
lret
in
fistpll
cli
enter
in
bound
data16
push
jmp
test
jae
push
ljmp
add
jmp
hlt
js
sbb
push
fsubs
xchg
adc
dec
mov
rclb
xchg
aam
mov
pop
into
fadds
loop
popa
repnz
out
in
adc
xchg
pushl
jb
pusha
cld
dec
dec
cmpsb
and
div
clc
sub
daa
lcall
push
das
jl
in
mov
sbb
aam
lcall
jl
aaa
popa
push
mov
lret
lcall
lds
lods
cmp
mov
adc
in
cmc
ret
out
sti
jecxz,pn
cmp
cltd
xor
push
add
or
or
push
sub
jne
push
push
cmp
faddp
push
lret
nop
stos
lret
test
fwait
pop
les
fmull
ret
in
fistl
das
mov
roll
cmp
and
movsb
sbb
pop
and
adc
sahf
fildl
loope
cmp
sbb
dec
cs
jmp
je
pop
pop
nop
add
mov
xchg
iret
dec
xor
sbb
lods
sarb
cmc
xchg
jle
or
push
push
push
mov
sbb
call
ret
sub
xor
jle
enter
inc
dec
or
cmp
bound
or
jle
out
loop
adc
out
push
pop
out
or
inc
dec
test
and
mov
pop
xor
fidivs
leave
add
shll
and
mov
xor
ja
stc
cmpsl
adc
jno
cmp
push
jg
ss
fs
loop
mov
jmp
push
xchg
movsb
mov
adc
xor
cmc
push
cmpl
scas
lods
shr
les
jno
xchg
xor
sub
cmc
cmp
or
call
xor
pop
mov
das
out
lea
jns
mov
mov
sub
cmp
popf
repnz
cmp
out
hlt
out
lret
adcl
int3
jbe
xchg
xchg
bound
movb
mov
enter
cmc
jae
dec
into
icebp
or
popf
pop
pop
aas
or
sbb
add
jge
dec
test
mov
test
mov
xchg
js
adc
cmp
or
sahf
add
sub
icebp
ds
sbb
xchg
mov
lret
jno
dec
pushf
mov
popa
jne
jg
and
lret
xor
fwait
ljmp
add
ret
clc
loop
xchg
test
mov
push
jg
push
sub
pop
inc
out
call
mov
daa
js
and
inc
dec
sub
cmp
aaa
fistl
gs
sbb
rclb
mov
dec
cli
push
shrb
and
roll
jmp
pushf
lds
add
repnz
lods
sbb
sub
movsb
pop
sub
cmp
sub
and
popf
pop
sbb
cmp
stos
outsb
fdiv
test
pop
call
add
or
jge
popf
push
and
aam
movsl
cmp
cltd
in
gs
push
xor
sti
clc
mov
pop
sbb
xchg
mov
mov
xlat
leave
lds
pop
jle
xchg
cli
xchg
jae
jecxz
xchg
rcl
mov
adc
repnz
leave
add
nop
mov
in
iret
jl
push
dec
add
stos
pusha
mov
pop
or
loop
je
cmp
adc
cmpsl
lcall
pop
mov
pop
mov
fiaddl
cmp
jmp
leave
mov
adc
jnp
xchg
xchg
xor
and
xchg
jle
sub
jae
imul
adc
sbb
dec
lcall
sub
lock
xor
mov
mov
std
pop
t1mskc
dec
test
sbb
cmp
je
jp
jo
out
ljmp
xchg
sub
mov
inc
xchg
add
lcall
fisubrl
and
pop
pop
in
dec
push
fadds
sub
cmpsl
pop
loopne
push
jbe
jnp
fldl
movsb
jno
rcr
leave
scas
sbbl
int
mov
lods
mov
cld
fiaddl
and
imul
gs
or
pop
jb
xor
or
sub
xor
stos
add
out
test
jo
jmp
push
rclb
mov
mov
jge
arpl
fcomp
add
sbb
div
mov
in
mov
mov
aad
in
xorb
inc
add
pop
sbb
jge
stc
lods
inc
out
aam
push
fwait
adcb
nop
bound
ds
cmp
and
rcrl
adc
add
leave
test
stos
subb
xchg
ret
sbb
mov
ret
push
or
mov
bound
and
shlb
in
xor
cmp
in
jmp
add
push
or
je
cmp
fadds
jmp
or
pop
es
cs
inc
cmpb
call
jbe
or
mov
add
pop
mov
call
pop
sahf
push
stc
xchg
je
lds
cmp
imull
lds
dec
jmp
rolb
mov
jmp
int3
inc
ljmp
or
leave
push
ja
sub
xchg
or
out
mov
mov
and
inc
inc
xchg
loop
sub
jmp
pop
mov
insl
inc
push
add
iret
xchg
rclb
iret
sub
rclb
xor
aad
and
popf
in
xor
popa
lds
cwtl
test
pop
sarb
xor
mov
or
dec
xlat
push
push
scas
ret
mov
xlat
push
clc
pop
loopne
sbb
jmp
fs
imul
pushf
jle
and
mov
dec
jge
rorl
inc
pop
push
inc
pushl
rcl
addr16
cmpsb
jo
push
stos
sbb
sub
mov
add
js
jl
imul
jmp
xchg
pop
in
xchg
mov
cmp
inc
fbstp
sub
rolb
jns
ljmp
cmp
mov
push
and
xchg
stos
dec
xchg
mov
or
int3
mov
push
mov
push
jge
inc
repz
jmp
inc
xor
xchg
add
mov
pop
add
scas
or
into
sbb
dec
nop
fidivrl
insb
and
movsb
fdivl
adc
mov
hlt
sub
pop
dec
or
pop
test
js
sbb
push
movsl
in
and
dec
mov
pop
popa
adc
mov
shll
out
inc
les
push
inc
cwtl
xor
xchg
hlt
and
mov
in
mov
dec
and
decb
pop
mov
dec
mov
int3
call
mov
mov
shll
lds
mov
hlt
jecxz
int3
js
insl
xchg
mov
cs
mov
or
and
mov
push
or
and
pop
pop
mov
and
mov
repz
loopne
push
hlt
push
adc
aad
mov
pop
fwait
loopne
roll
movsl
jmp
jle
jnp
shl
pop
inc
subb
pop
mov
lret
cmp
shl
es
popa
adc
aam
jmp
cmp
cmpsb
inc
push
in
mov
cltd
rcl
ficoms
push
shl
sub
push
sti
je
out
dec
inc
pop
in
jmp
add
std
mov
movsb
and
pop
cmpsb
mov
divl
jge
sbb
mov
mov
or
sub
sub
jp
addr16
mov
in
cmp
pop
movsl
cmpsb
add
lods
or
xor
jmp
orl
mov
and
and
xchg
mov
add
jmp
cmpsl
ret
mov
mov
xchg
dec
leave
dec
dec
repnz
in
jo
jo
jp
fxch
adc
lea
loope
outsb
fcomp
xor
inc
mov
aam
ljmp
xor
pushf
push
stos
gs
lods
jg
dec
adc
dec
jge
inc
mov
in
dec
cmp
or
ret
inc
xchg
or
push
popaw
cmp
mov
cwtl
jmp
lahf
pop
xor
jg
and
in
in
lahf
mov
popf
xor
orb
popl
dec
ret
inc
insl
sbb
lods
mov
add
xchg
dec
add
adc
mov
clc
mov
sbb
jae
lods
sub
mov
jo
lods
add
jno
negl
mov
fstpt
pop
sbb
bound
das
aad
repz
mov
in
pushf
sbb
add
ss
fdivl
shll
fwait
pop
cwtl
xor
xor
ds
aas
push
fistps
test
pop
jmp
call
out
pusha
pushf
sbb
mov
jnp
xchg
push
out
jle
sub
xlat
outsb
add
aad
and
loop
in
dec
add
inc
mov
sub
ja
pop
fdivrs
out
popa
aam
pop
xchg
lcall
xchg
xor
dec
fisubrl
in
pop
cld
into
arpl
adc
mov
adc
sub
sbb
in
mov
cmp
jnp
or
pop
inc
loop
decl
bound
cmpsl
mov
hlt
xchg
xchg
addl
push
ficomps
imul
push
cmc
sub
pop
data16
int3
nop
lcall
sahf
add
shrl
dec
and
cmc
jnp
ljmp
inc
aad
xchg
cmp
ds
lock
dec
push
push
inc
iret
jmp
out
pop
loop
sub
xchg
xorb
dec
xor
aad
aaa
test
xlat
cld
ret
outsb
or
jecxz
mov
rolb
pop
lods
clc
xchg
pop
leave
jb
pop
mov
jl
sub
inc
sbb
xor
sbb
es
fwait
dec
or
jno
dec
fldenv
push
and
addr16
idivl
dec
cmpsl
addl
les
sbb
sbb
mov
add
popa
jp,pt
jmp
mov
cltd
jmp
jo
mov
test
push
imul
lods
jnp
ficoms
nop
scas
sub
loop
xor
push
lock
sahf
push
pusha
jae
xchg
mov
ds
jno
and
xor
inc
mov
mov
add
fnstenv
ret
or
mulb
mull
inc
push
icebp
jb
pop
les
testb
cli
jp
xor
lock
or
dec
daa
mov
pop
cld
adc
add
fmuls
int3
fistpll
mov
lea
mov
lahf
mov
adc
pop
aaa
les
sbb
shlb
jmp
rol
arpl
in
outsb
sarb
in
jge
in
imul
jae
movsb
out
mov
repz
or
in
jg
jecxz
lret
mov
mov
jb
shrb
fimuls
es
mov
jg
popf
sbb
in
popf
lea
pop
jle
fcomip
push
xor
fistpll
sub
push
sarb
sbbl
push
shll
jle
out
dec
cli
xchg
xor
mov
outsl
push
mov
xor
pop
mov
push
sti
jp
xor
pop
out
jnp
jb
fs
or
dec
int3
repz
aaa
mov
cmp
cmc
shlb
fldl2e
stos
inc
mov
cmc
sbb
cmp
pop
adc
icebp
xchg
inc
jns
subb
or
leave
pop
xchg
mov
xor
lods
xchg
dec
pop
xchg
out
mov
aaa
or
pop
mov
sbb
and
insl
aaa
sub
das
inc
xlat
lds
int
ds
sbb
add
and
sbb
pop
mov
sub
xchg
jge
cmp
or
sub
xor
sbb
dec
xchg
js
loop
call
xor
adc
es
or
cmp
add
ror
sub
inc
aad
mov
push
inc
imul
xchg
mov
inc
push
fcoms
movsl
jns
ret
push
call
scas
xchg
mov
jmp
cmp
xchg
mov
or
mov
xchg
ret
jmp
out
jmp
popa
clc
cmp
xchg
jns
cmp
test
cmp
dec
addr16
fwait
lods
mov
add
addr16
pop
xor
jle
aas
sub
mov
jg
push
shll
push
or
cmp
push
pop
or
stos
xchg
mov
lret
lds
mov
mov
pop
out
and
xchg
aam
hlt
orl
xor
lds
mov
mov
ja
imul
lds
scas
getsec
lods
inc
xor
in
mov
dec
mov
movsb
insb
test
mov
xchg
enter
dec
add
inc
push
jmp
push
and
mov
call
dec
jge
aaa
sub
pushf
mov
add
enter
in
jmp
cmpsb
roll
popa
mov
inc
jo
pop
and
push
lea
mov
enter
imul
and
xlat
push
xchg
or
push
sub
push
in
out
fisubl
hlt
mov
stos
jnp
jmp
xchg
push
adc
sbb
cli
pop
mov
xor
icebp
cmp
ret
sub
bound
sub
adc
cmp
mov
pop
fdiv
sbb
dec
dec
and
imulb
xlat
adc
movsl
xor
pushf
lds
dec
pop
insb
and
and
sbb
jle
stc
push
in
es
mov
in
int3
icebp
mov
jp
rorb
mov
cmp
les
ss
loop
mov
and
sbbl
pop
xlat
iret
mov
aaa
xchg
dec
xor
mov
jl
xchg
into
sahf
mov
mov
jmp
je
insl
add
sarb
enter
mov
mov
pop
and
clc
add
xor
mov
pop
sti
inc
paddsb
push
jo
movsb
fwait
pusha
dec
mov
dec
into
dec
ja
in
ret
nop
mov
test
loope
mov
lahf
xlat
int3
loopne
cmp
test
mov
stc
jno
lahf
mov
push
imul
and
push
and
stos
push
jbe,pt
inc
lahf
xor
bound
push
rcl
push
pop
push
cld
and
lds
cwtl
sub
mov
loopne
addr16
stos
mov
jg
jl
pop
mov
cmpsl
test
cmp
inc
adc
adc
fs
pusha
hlt
aad
ret
sbb
mov
ret
and
sbb
addr16
push
jp
enter
lea
les
and
sbb
and
pop
dec
jp
cmp
int3
out
sti
adc
faddl
dec
or
inc
mov
adc
int
xor
or
adc
dec
jp
les
xchg
popf
dec
jg
xor
rcr
or
movsb
rorb
inc
add
loopne
jp
ljmp
js
jb
icebp
test
lret
jbe
repz
data16
loopne
dec
mov
rcrl
mov
push
rolb
shll
dec
fs
je
imul
test
pop
js
sub
repz
mov
adc
dec
xchg
cli
std
loope
push
add
mov
xchg
pop
sar
loop
mov
in
pop
jb
sahf
daa
pusha
in
out
add
adc
xor
stos
sbb
inc
daa
subb
and
jmp
aas
mov
push
push
mov
dec
loopne
je
data16
and
cmp
test
movsl
push
jne
sbb
repz
test
pusha
out
cmp
push
or
mov
sub
mov
out
mov
aaa
jno
sbb
inc
jmp
mov
inc
adc
dec
fsts
xlat
andl
psubusb
ds
in
inc
mov
dec
in
mov
xor
xchg
repz
mov
into
mov
lea
adc
lock
pop
stc
inc
pushf
jmp
cmp
jle
inc
fbld
sub
call
or
push
negb
imul
lods
mov
bound
or
repnz
push
paddq
addb
pop
enter
pop
dec
mov
mov
movb
pop
adc
daa
cmp
xlat
or
and
mov
push
jge
data16
lds
repz
insl
das
leave
sub
stc
icebp
decb
dec
enter
data16
cmp
add
shll
and
add
sti
call
fcmovb
mov
iret
and
cmp
pusha
leave
movsl
scas
cmp
sbb
and
sbb
ljmp
stos
cmpsb
mov
pop
cld
les
jbe
loope
cs
mov
sub
into
inc
pop
das
adc
fucomip
lret
dec
lds
mov
insl
fildll
cmp
aam
sbb
and
hlt
adc
cld
scas
mov
mov
mov
stc
push
scas
inc
cltd
cmp
out
mov
out
js
cmc
fisttpll
mov
fwait
inc
repnz
xchg
movsl
dec
mov
bound
mulb
push
jne
xchg
lahf
xor
ljmp
add
leave
cmp
sahf
push
insl
mov
lahf
imul
inc
stos
push
std
add
mov
mov
adc
push
rcrl
mov
loopne
mov
and
mov
nop
lods
call
sub
or
icebp
pop
or
xor
and
fstl
sahf
dec
push
pop
shrb
clc
mov
and
add
or
add
pop
inc
loopne
push
mov
sbb
cmp
adc
mov
arpl
das
scas
lret
data16
push
mov
mov
and
sbb
insl
pop
jge
sar
add
push
dec
mov
mov
jne
in
push
js
hlt
cltd
loopne
out
sbb
ds
stc
add
jecxz
mov
xlat
ret
shlb
or
cmp
mov
jg
cmc
and
add
xchg
je
mov
pushf
cli
inc
ja
pusha
popf
xor
or
scas
cmp
mov
jmp
push
hlt
sbb
add
insb
cwtl
das
xchg
sbb
sub
lcall
std
cmpsl
push
dec
and
xor
adc
enter
rolb
pop
es
imul
insb
addr16
jno
xlat
cmc
cmp
dec
or
xor
mov
mov
gs
push
sbb
cmp
adc
add
xlat
repnz
int
xor
mov
xchg
xor
adc
scas
ljmp
decl
insb
iret
in
push
sub
in
cmpsl
push
push
push
adc
dec
mov
dec
push
setnp
mov
sub
cwtl
add
hlt
out
mov
test
pop
pop
jmp
cmp
add
pop
jmp
inc
nop
mov
xchg
std
pop
rcll
int
pop
fldt
sbbl
mov
mov
push
into
sbb
iret
pop
lret
fnstcw
imul
aad
sahf
add
sbb
xchg
sahf
or
nop
sbb
popf
mov
jnp
jecxz
cmp
or
mov
hlt
mov
icebp
sbb
inc
or
jg
adc
xchg
mov
jnp
popf
inc
mov
es
popa
daa
addl
xchg
addr16
pop
xlat
inc
popa
push
mov
mov
jecxz
or
pusha
shr
push
or
pop
pop
lds
outsl
shlb
mov
sub
xchg
in
imul
icebp
add
and
mov
int3
cmpsb
or
adc
or
dec
inc
push
das
xor
dec
movsl
and
push
pop
cmp
addb
aaa
dec
dec
stos
or
mov
mov
pop
enter
pop
mov
in
imul
das
mov
cmpsl
adc
out
jge
or
movsb
push
ficoml
je
lret
je
mov
sbb
fdiv
push
out
xor
rclb
mov
arpl
jbe
adc
popf
jns
xchg
mov
mov
cmpsb
or
push
jns
fstps
inc
scas
dec
fdiv
sub
inc
xor
loope
inc
out
data16
mov
aam
dec
dec
cmp
pop
lea
or
dec
jns
push
sbb
out
add
lods
adc
mov
int3
ret
push
test
xor
in
adc
push
pop
sbb
xlat
add
lahf
fldl
ficompl
inc
jno
push
jmp
hlt
arpl
jae
andl
cmpsl
jecxz
shll
mov
sbb
and
and
dec
sbb
and
pop
mov
cmp
stos
loop
pop
and
decb
push
xlat
fcomi
add
test
in
les
ja
mov
notl
pop
pushf
mov
adc
jnp
jge
jmp
int
sub
or
ret
mov
aad
pop
sub
pusha
jmp
cltd
pop
out
sub
pop
push
aad
insl
add
scas
aad
jg
mov
int
out
pop
xchg
adc
leave
and
cmp
xchg
popa
mov
push
imul
insb
xor
imul
mov
or
and
xchg
loope
inc
inc
hlt
xchg
mov
fists
push
mov
inc
mov
pop
pop
sbb
mov
cltd
out
ret
out
pushf
aad
ljmp
insl
mov
push
test
sti
mov
ficoms
mov
stc
xor
scas
pop
pop
cmp
sbb
mov
rclb
xchg
jl
lock
cli
push
loop
inc
xchg
cmpsb
test
test
sub
lock
dec
push
dec
mov
pop
icebp
insb
ss
pop
cmp
push
aas
dec
or
cmc
fwait
sbb
xchg
push
jl
adc
xchg
or
cmp
jae
insb
push
and
xor
jbe
jl
or
aaa
cltd
pushf
xchg
xorb
sbb
xchg
repnz
inc
mov
gs
mov
or
mov
mov
jmp
sub
mov
imul
decl
cs
shrl
xchg
mov
or
scas
mov
shlb
pop
mov
add
stos
xchg
push
movsb
adc
cmpb
push
call
push
fistps
inc
pop
fsubl
xchg
push
push
add
mov
lret
pop
push
push
ljmp
shl
rcrb
mov
rcl
xchg
push
icebp
repnz
jg
push
movsl
cmp
jb
ss
movsb
mov
push
lret
or
jle
aas
push
push
xor
lock
mov
insb
jecxz
loope
mov
cwtl
xchg
lods
sarb
jmp
sbb
jnp
jle
sbb
movsl
pop
insl
aas
dec
xor
mov
ret
clc
mov
sub
or
xchg
imul
add
inc
inc
sub
test
mov
ds
imul
repz
lock
mov
out
push
and
adc
fisubs
mov
pop
jmp
sub
sahf
mov
push
addl
push
or
test
adc
dec
fldenv
leave
sar
mov
inc
ds
xchg
lahf
jns
mov
aaa
outsb
jg
jae
xlat
cli
dec
lret
notb
pop
xchg
add
stc
enter
mov
sub
mov
sbb
addb
ret
lods
addr16
inc
jb
sarl
xor
lds
adcl
cmp
push
adc
xchg
mov
sbb
add
imul
out
daa
mov
xchg
mov
mov
sbb
cmp
dec
inc
sbb
ret
push
inc
rcrb
mov
insl
ret
mov
fcom
sbb
ret
popa
je
dec
imul
cmp
sub
add
fdivl
sti
add
cmpsl
cmp
jo
jmp
hlt
test
movsl
pop
cmp
lahf
popa
ficoml
loop
mov
ficomps
imul
clc
xchg
and
adcb
jb
sbb
inc
push
and
cmp
and
ljmp
xor
inc
mov
mov
sub
ftst
fdivrl
call
pop
arpl
jl
xlat
adc
test
mov
fldl
inc
ss
pop
push
xor
push
lahf
cmpsl
imulb
outsl
mov
mov
inc
stc
push
and
bound
nop
mov
pop
push
cmp
push
gs
jb
push
mov
pop
inc
jp
arpl
out
lock
ja,pt
addl
inc
vmread
mov
ja
imul
xor
std
roll
fsubl
iret
test
outsl
mov
push
jae
push
cmp
loop
jmp
sub
mov
sahf
or
shrl
mov
mov
add
dec
mov
cmp
repnz
sbb
imul
xchg
iret
jge
push
sbb
rcrb
fdiv
push
and
inc
decl
mov
add
outsb
adc
mov
adcl
out
mov
pop
imul
push
ds
nop
xchg
jle
dec
sahf
mov
cs
fildll
dec
lods
mov
enter
int
fidivrl
mov
ret
push
aas
push
imul
jmp
fidivrs
xor
mov
mov
shll
jae
mov
cwtl
out
xchg
arpl
pop
hlt
stc
into
aaa
xchg
xor
inc
divl
xor
cs
fldl
ds
pop
das
fs
sub
sarl
aas
adc
movsb
out
fdivr
mov
mov
dec
call
scas
xchg
xchg
insl
scas
movsl
stc
adc
cld
sub
pushf
pop
add
sbb
out
mov
add
mov
push
fisttpll
popa
stc
add
sarb
std
cmc
pop
or
leave
adc
push
std
mov
sbb
sub
fdivrs
nop
jne
add
gs
and
out
cmc
xchg
sti
adc
stos
je
jmp
jecxz
sarl
hlt
jnp
xor
push
pop
sbb
lea
pop
addl
jp
rclb
sub
sub
sbb
out
sbb
xchg
add
insl
xor
sbb
bound
adc
gs
jo
hlt
inc
loope
push
enter
incb
sub
cmp
daa
fdivp
or
stc
ja
dec
aaa
hlt
loop
pop
jae
sbb
out
jo
push
dec
jnp
xchg
iret
mov
test
test
rorb
aaa
ss
lahf
inc
lds
int
mov
arpl
add
push
adc
test
in
jb
out
xchg
pop
in
pop
and
sub
inc
mov
pop
jns
test
sbb
dec
jo
xor
ficoms
mov
arpl
icebp
lret
sub
cmpsb
push
imul
leave
dec
add
lret
loopne
xor
adc
adc
fcomps
in
dec
xor
ja
pop
les
stos
or
int3
inc
fwait
fwait
clc
in
ljmp
sub
push
fistps
xchg
in
mov
hlt
push
fwait
ss
cmp
arpl
stc
in
sbb
mov
mov
test
sbb
fldenv
xor
icebp
jle
je
ja
hlt
sarb
fucomi
cld
push
cmc
dec
jno
les
dec
fnstcw
mov
push
xor
mov
pushf
mov
rcrl
push
jae
adc
cs
lahf
fmul
xor
add
add
test
push
xchg
inc
mov
ds
movl
mov
push
xor
lock
test
mov
arpl
fisubrl
jns
dec
and
movsb
pop
adc
lret
push
and
inc
lea
xor
adc
xchg
mov
arpl
add
and
jno
and
andb
dec
or
add
shlb
mov
rcrl
xor
push
lock
lods
test
xor
movb
adc
pop
repz
imul
mov
xor
and
enter
ljmp
into
xor
mov
cmp
push
addl
pushf
sti
stos
mov
pop
pop
inc
ljmp
stc
push
fidivs
xor
outsb
cmp
xor
cmp
cld
popf
jmp
mov
cmpsl
cmp
xchg
imull
fdivs
or
add
sub
arpl
fmulp
adc
popf
sbb
sarb
iret
or
mov
and
adc
enter
xchg
dec
movsb
ja
xor
fwait
xchg
xchg
inc
aaa
loop
les
xchg
pop
cmpl
inc
adc
mov
jecxz
outsl
lock
add
mov
xor
jbe
and
push
mov
in
es
and
insl
pop
pushf
stc
lret
add
jmp
dec
jns
or
aas
dec
xchg
pop
jmp
or
xchg
pop
push
mov
inc
jle
sahf
rorb
mov
cmp
daa
addr16
xchg
pusha
mov
inc
dec
inc
or
mov
xchg
inc
mov
adc
lahf
xor
mov
cmp
es
or
mov
rolb
sbb
lcall
xor
xchg
cmp
and
pop
data16
adc
leave
lods
ljmp
aaa
or
push
cwtl
out
or
dec
in
ret
lcall
fsubrs
pop
mov
movsbl
rclb
xor
insb
shrb
mov
mov
cmpsl
mov
push
out
or
dec
jl
and
xchg
cmp
shl
cmpsl
xor
fdiv
stc
or
xchg
inc
rcrb
rolb
add
pop
div
aaa
adc
inc
inc
test
loop
xlat
jg
jo
lahf
pushf
pop
jge
pop
dec
dec
inc
or
lds
shrb
ss
fists
lock
aaa
cs
repnz
scas
bound
int3
lret
jmp
xor
jno
mov
das
push
nop
int3
xchg
jge
std
lds
sub
clc
mov
pop
fistpll
sbb
loopne
and
data16
fucomp
pop
mov
jl
mov
icebp
adcl
adcb
sbb
insb
mov
jge
xchg
test
xchg
fcmovnbe
mov
adc
dec
aad
sub
mov
inc
movsb
scas
das
movsl
and
sub
std
cs
in
lcall
mov
mov
dec
test
and
dec
les
cltd
sbbl
or
leave
xchg
pop
push
dec
pop
out
mov
loope
push
mov
imul
mov
inc
inc
push
pop
add
sbb
pop
mov
aad
xchg
inc
mov
out
testl
fldcw
fwait
push
je
push
xor
sbb
xchg
sub
add
cmpsl
xchg
lea
sbb
and
sbb
cmp
or
out
mov
mov
xchg
cmp
jmp
pushf
jecxz
mov
incl
add
fidivs
lods
imul
rol
pop
push
dec
cltd
pop
stc
dec
stos
dec
dec
xlat
xchg
pop
xchg
loopne
push
sub
mov
jno
sets
adc
aaa
test
jmp
inc
lcall
ret
rcrb
popa
push
jge
and
rcrb
add
sbb
xchg
sub
sbb
mov
jp
cmc
adc
pop
jno
push
nop
idivl
stos
bound
jbe
inc
test
mov
les
mov
ss
mov
rcr
loop
jg
or
add
xchg
leave
bnd
inc
jl
les
idivl
add
imul
and
stos
loope
sbb
movsl
xor
push
push
and
aas
mov
sub
push
lock
cmp
lods
xchg
inc
add
push
jle
hlt
and
lret
pop
jge
dec
adc
mov
bound
aad
xor
lahf
mov
mov
xchg
outsb
mov
cmp
mov
xor
ja
sbb
xchg
xchg
sbb
lcall
and
jecxz
cmpsl
das
pop
fcompl
mov
and
push
sbb
xchg
xorl
add
push
jg
fwait
repnz
lock
mov
xchg
loop
pop
ror
mov
jmp
adc
je
arpl
fsts
cmp
out
xchg
adc
pushf
leave
xchg
int3
or
stos
sarb
jge
adc
jg
xchg
data16
cmp
mov
rcll
cmp
push
cmpsl
jae
test
push
js
xor
fwait
inc
outsb
pop
sub
sub
mov
ret
cltd
rolb
leave
xchg
and
mov
add
cwtl
xlat
jp
adc
and
shl
jl
insb
rcrl
ja
jl
aas
lods
mov
adc
hlt
sbb
out
jmp
mov
insl
lods
out
mov
add
xor
xchg
adc
cli
pusha
andb
lret
jle
sbb
fistl
mov
cwtl
out
dec
je
fs
fisubs
xchg
sbb
int
ret
in
mov
mov
aad
lods
xchg
push
mov
sub
sub
outsb
pop
bound
adc
xchg
or
es
stos
outsl
inc
or
pop
cwtl
pushf
adc
stos
dec
dec
adc
jle
add
les
mov
int
fdivrs
shll
enter
sbb
adc
xor
imul
or
mov
std
xor
icebp
cmp
cmp
cmp
insb
fsubs
loopne
sbb
dec
pop
adc
stos
xor
and
jnp
mov
imul
dec
out
jo
mov
lds
das
insb
and
add
mov
cmp
fs
clc
popa
negl
sub
push
sub
ja
arpl
jnp
mov
dec
adc
scas
mov
std
dec
inc
inc
ja
inc
cli
inc
loop
outsl
sub
repz
imul
les
push
in
ret
rcrl
testl
stc
sti
in
pop
sti
or
pop
mull
ret
loopne
test
xchg
movsb
dec
shll
jb
aad
and
insb
cmp
adc
aaa
xchg
mov
mov
xchg
and
or
cmc
jns
pop
xlat
mov
xchg
or
or
std
jns
fistps
adc
pop
mov
lahf
lcall
dec
xchg
and
cs
cwtl
sub
movsl
inc
adc
sarl
mov
inc
mov
mov
repnz
xchg
xor
movsb
addr16
in
imul
pop
jne
lea
pop
sub
lret
imul
cld
call
mov
jg
lcall
pusha
rclb
mov
push
dec
mov
dec
and
lods
or
push
xlat
les
shr
decl
movsl
jg
insl
test
testl
notb
add
jo
pop
xchg
add
mov
push
dec
sti
enter
cmp
adc
scas
loopne
lods
add
lcall
arpl
and
push
hlt
lret
sub
out
mov
bound
ja
clc
mov
test
mov
cmpsb
pop
jle
dec
pop
aas
subl
mov
and
push
sub
leave
inc
loopne
mov
mov
dec
mov
sub
test
dec
dec
popa
loope
pop
ds
adc
sahf
inc
push
mov
or
pop
lcall
jae
insb
bound
mov
loope
cli
es
mov
jle
inc
sarl
mov
xor
roll
sbb
or
cmpsb
pushf
add
mov
ret
lods
xchg
je
popw
call
mov
mov
aaa
dec
push
fwait
ret
dec
movsl
adc
stos
add
sbb
mov
and
outsl
out
xchg
pop
leave
sti
aaa
mov
sbb
pop
hlt
jns
mov
in
inc
cmp
dec
in
dec
push
int3
andb
dec
into
cmc
xchg
mov
dec
inc
in
lea
adc
iret
mov
in
pop
cli
testl
dec
and
mov
rorb
repz
xchg
adc
xor
movsb
sbbl
in
arpl
in
mov
insb
pop
inc
xor
outsb
stos
lret
or
inc
sbb
cs
sbb
cmp
xor
push
insl
mov
pop
cmp
inc
push
mov
test
push
imul
imulb
xchg
cmpb
cmp
xchg
loope
stos
orb
cld
ret
sbb
hlt
push
mov
mov
mov
cmc
push
mov
or
add
pusha
xchg
xchg
lret
popa
ss
in
flds
mov
enter
push
inc
mov
push
inc
xchg
xchg
in
cmp
and
ret
fdivs
sub
dec
lret
dec
out
call
mov
adc
xchg
mov
mov
adc
cmp
push
addr16
inc
les
cld
in
lea
and
std
out
dec
imulb
jns
or
mov
push
and
arpl
ret
imul
sbb
insb
addr16
sti
xchg
xlat
cmp
cmp
lcall
mov
and
cmp
ret
mov
cmc
mov
sub
xchg
cmp
inc
mov
pop
mov
jns
jnp
inc
dec
fmul
test
sti
xchg
and
sbb
add
lods
shrl
push
adc
out
aas
imull
sub
pusha
out
xor
inc
in
test
push
ret
mov
repnz
or
test
dec
mov
dec
sbb
sbb
lds
in
adc
test
in
pushf
jmp
pop
in
enter
test
xchg
cmc
push
xchg
fs
std
push
sbb
dec
gs
sub
into
adc
push
hlt
mov
cmp
repz
pop
nop
notl
xchg
xchg
push
imul
push
mov
push
rorb
mov
mov
stc
aad
mov
les
je
mov
icebp
mov
push
lods
fbld
inc
call
sahf
push
xor
inc
rcrl
add
shrl
in
scas
stos
pop
aaa
loop
mov
xchg
cwtl
in
sahf
jge
pop
pop
mov
out
stos
cwtl
fdivl
or
dec
pop
push
or
fs
push
test
pop
imull
mov
sub
mov
sarl
pushf
push
fs
imul
xchg
add
sti
push
cmp
jle
mov
dec
scas
cmp
cmpsl
jecxz
jb
fnstsw
jnp
jmp
mov
icebp
cwtl
sbb
repnz
mov
stc
out
mov
mov
sbb
jmp
cmp
popf
xorl
pop
adc
add
test
arpl
sub
inc
mov
in
or
outsl
jmp
pop
jns
xchg
pushf
lret
movsl
pop
iret
sbb
push
xchg
popa
lods
cmc
incb
es
push
out
scas
sbb
cli
jae
stos
loopne
xchg
dec
fdivs
scas
inc
lea
or
pushf
dec
dec
push
sbb
adc
pop
mov
xchg
ret
add
shl
mov
dec
or
sarb
xchg
add
and
dec
in
mov
xchg
sahf
push
xchg
mov
data16
insb
lahf
mov
fwait
cmp
mov
pop
rcrb
fldl
jmp
daa
mov
sub
fbld
hlt
and
dec
xchg
sbb
ja
jg
cli
pop
aaa
cwtl
mov
inc
filds
inc
fdivs
fidivl
and
adc
fstp
fwait
cltd
sub
repnz
std
xlat
outsl
push
pop
inc
das
dec
or
push
mov
xor
test
or
cmp
into
testl
cmc
lcall
sub
inc
ja
std
mov
mov
pushf
dec
aam
push
loop
dec
dec
inc
fbld
loope
out
mov
push
iret
fisubrs
test
mov
inc
call
jp
sub
or
mov
xor
arpl
icebp
xlat
outsl
fdivs
lcall
add
xor
sahf
cmp
testb
pop
lds
push
not
xchg
outsl
ret
jge,pt
ss
xchg
push
sbb
cmp
jo
iret
inc
fs
push
mov
in
imul
test
int3
adcb
sbb
cltd
cli
push
jne
jns
je
loop
xchg
mov
dec
dec
inc
insl
iret
movsb
movsl
mov
in
push
ja
push
jl
push
fdivrs
cltd
in
adc
loope
add
inc
fisubl
fcomps
call
cmp
test
and
add
push
sub
mov
lahf
call
add
pop
dec
mov
push
int3
cwtl
out
xchg
imul
xchg
cmpb
sbb
fsubs
clc
xchg
xchg
adc
or
jp
aaa
mov
std
orb
cmp
sbb
adc
das
fwait
call
outsb
push
adc
daa
fs
mov
pop
adc
cmp
pop
jg
or
add
cmove
push
jb
std
neg
sbb
loope
cmp
cmc
lret
dec
inc
sbbl
or
cmp
adcb
xor
and
sub
pop
xchg
xchg
es
inc
setno
mov
adc
pop
and
dec
out
mov
push
rorb
shrb
lods
pop
sbb
mov
jns
div
jmp
mov
jno
movsb
fmul
sbb
lahf
add
sbb
pushf
adc
lods
das
outsb
scas
negl
lea
and
inc
mov
jmp
pop
inc
hlt
xchg
pop
mov
mov
lcall
adc
in
mov
xor
scas
or
and
or
inc
in
movsl
mov
mov
cs
sub
je
and
sub
or
inc
fmulp
mov
jmp
jmp
lock
jmp
mov
adc
mov
stos
adc
xchg
mov
imul
hlt
stos
add
clc
xchg
push
jns
push
test
stos
es
sbb
fmuls
mov
push
loop
jnp
adc
and
iret
int3
scas
test
cld
pop
xchg
incl
in
inc
cmp
popf
add
jne
stos
das
mov
lods
inc
paddusb
add
popf
xor
aad
and
sub
mov
mov
js,pn
outsb
in
out
iret
test
js
frstor
xor
or
adc
loopne
mov
fbld
mov
jbe
scas
mov
aaa
int
dec
mov
xchg
lods
aaa
cs
loopw
es
test
sub
jb
cli
cli
xchg
imul
dec
mov
jp
mov
cmpsl
fwait
mov
mov
mov
mov
jo
add
ljmp
das
adc
sbb
fwait
ret
pop
iret
nop
pusha
mov
pop
pushf
enter
inc
dec
jl
add
dec
repnz
lea
shll
lods
ret
in
mov
mov
test
cmpsb
adc
jmp
mov
fdivr
in
xchg
test
adcl
daa
mov
int3
call
outsl
adcb
mov
add
push
mov
out
into
jb
mov
pop
adc
add
xchg
inc
cld
iret
push
aaa
dec
stos
scas
add
sbb
dec
push
je
into
xchg
outsb
loopne
sub
xchg
sub
push
inc
mov
popf
jne
icebp
bound
lret
imul
lcall
inc
ret
and
jne
out
push
ret
in
lods
das
mov
mov
mov
add
popf
negb
lret
dec
mov
sbbb
fnstsw
add
rcrl
repz
roll
jbe
mov
rorb
std
xor
add
movsb
out
jmp
imul
testb
hlt
mov
mov
dec
inc
xchg
cwtl
insb
inc
add
testb
jae
aas
idivl
lcall
pushf
push
stc
test
mov
pop
sub
jge
add
daa
ljmp
out
xchg
icebp
neg
rcrl
enter
mov
xor
inc
xchg
ret
andb
in
dec
push
loope
or
xor
cmc
xchg
mov
mov
mov
sub
imull
mov
loope
cltd
addr16
in
movb
out
test
subl
aad
loope
lret
mov
mov
or
sbb
sbb
xor
sub
gs
frstor
repz
hlt
dec
jne
xchg
or
mov
sti
into
lds
mul
sbb
pop
or
xlat
dec
cltd
pushf
aas
fisttpl
fxch
fnstcw
dec
mov
popa
dec
inc
in
or
mov
nop
mov
mov
test
sub
sbb
popf
mov
lret
in
in
pop
add
das
jne
sahf
fdivrs
cmp
mov
add
xchg
push
add
and
mov
repnz
push
mov
cs
push
test
je
dec
movsl
cs
lcall
notl
dec
shrb
data16
cmp
fisubl
pop
nop
scas
fimull
xlat
stos
mov
out
xchg
js
adc
sbb
cmp
test
mov
sahf
jmp
flds
test
mov
mov
orl
outsb
and
sub
adc
pop
sub
jne
iret
dec
sub
cmc
adc
cs
pop
insl
pop
scas
ret
lret
cmp
subl
outsb
mov
jbe
jmp
aas
rcll
pop
daa
adcb
mov
xadd
xchg
lea
fisttpl
repz
lods
mov
adc
push
mov
aaa
xchg
notb
sub
sub
sub
clc
fadd
loopne
jecxz
and
sub
pop
cmpsl
dec
repz
jg
push
sbb
jne
dec
pop
or
mov
inc
pop
adc
jmp
je
icebp
loop
in
aad
sub
sub
scas
outsl
mov
mov
inc
xor
or
xor
xchg
xchg
or
dec
or
xlat
aas
call
adc
rcrb
mov
nop
test
xchg
xor
lea
pop
jecxz
pop
cmp
mov
sbb
dec
cmc
add
aaa
movsb
rcr
push
cmp
mov
out
imulb
add
jge
push
mov
pushf
inc
xchg
cmpsl
rorb
sahf
cld
xor
dec
subb
jae
jnp
inc
xchg
mov
movsb
push
outsb
movsb
adc
xchg
and
cmp
lea
inc
test
subl
ja
fdivrs
mov
push
adc
pop
loop
push
inc
lea
in
mov
loope
arpl
mov
mov
imul
pop
or
xlat
fs
lods
arpl
sbb
adc
leave
cmp
sbb
xchg
cli
lds
arpl
push
mov
aaa
ja
add
jb
jmp
pushf
add
in
ret
or
ljmp
or
jge
adcb
shlb
or
in
add
js
xchg
dec
mov
or
xor
gs
or
pop
inc
fildl
aas
jbe
enter
jl
or
stc
dec
or
rcrb
loopne
push
jg
fidivl
sub
shrl
lods
cmpsb
les
mov
loopne
incb
mov
test
cwtl
mov
sub
pusha
imul
ret
shr
lods
fdivs
aad
push
mov
and
in
mov
sub
call
xchg
ret
stos
sbb
and
sar
pushf
or
jmp
das
scas
or
das
dec
or
adc
jp
hlt
fcmovnbe
subl
push
mov
add
in
adc
lret
sbb
mov
cwtl
loopne
sub
loop
cmp
dec
sti
mov
repnz
cwtl
and
sbbl
test
or
addr16
mov
xchg
lahf
in
jle
ja
mov
lea
mov
jbe
xor
mov
test
xlat
add
ds
adc
notl
adc
cmc
sbb
leave
or
add
xchg
dec
sti
mov
xlat
adc
ret
push
dec
or
fdivrs
jle
xchg
loope
fs
dec
jge
lret
inc
lock
pop
add
mov
or
xor
loopne
lahf
sbb
cs
lods
scas
movsb
sbb
int3
dec
push
cmp
sub
fcoml
aaa
jmp
jmp
nop
in
adc
in
xchg
jmp
popa
pop
in
fwait
int
sbb
cmp
ds
or
jns
mov
popa
xchg
stos
or
dec
in
iret
xor
test
xor
jecxz
pop
cs
and
js
cmpsl
ja
dec
gs
in
ja
pusha
faddl
xchg
cmp
xchg
pop
xchg
mov
sub
adc
imull
call
or
or
dec
xor
lds
cmpsl
and
je
leave
icebp
adc
xor
int3
and
push
pop
push
shlb
aam
imul
inc
lea
or
dec
es
sub
lahf
sbb
fcom
dec
clc
jmp
ret
jno
jae
or
fcomip
mov
aad
and
add
aam
icebp
je
dec
loopne
cs
movsl
sbb
movsb
xor
adc
and
inc
and
cmp
int3
outsl
push
xorl
or
dec
enter
pop
add
icebp
test
andb
outsl
aam
inc
lea
xchg
cmp
data16
mov
movsb
test
jnp
aam
cmp
orl
xor
lock
mov
xor
jecxz
movsl
ret
or
jle
and
pop
sub
cmpsb
fwait
push
roll
or
xchg
aam
jge
cld
clc
push
mov
pop
mov
push
out
mov
adc
cwtl
stos
mov
andl
rol
push
mov
scas
mov
call
test
lea
cmp
sahf
fildl
insl
in
push
jp
lock
xlat
and
in
xor
out
or
movsl
xchg
or
int3
add
pop
repnz
cwtl
mov
cmp
popf
sub
push
dec
cmp
push
jbe
or
jl
sahf
add
mov
subl
cwtl
in
dec
shlb
cmp
mov
cld
push
jb
cld
inc
imul
jns
jl
outsb
cmpb
jnp
fsts
clc
push
out
mov
fcmove
xchg
lret
adc
cmp
mov
stos
pop
iret
pop
adc
fistps
sub
jp
pop
pop
push
sbb
xor
adc
mov
mov
push
scas
jp
mov
xchg
mov
out
test
sub
in
pop
in
fsubl
or
sub
mov
jge
loop
rorb
pop
cmc
push
push
xchg
faddp
test
mov
ret
loop
push
jmp
sub
fdivr
sub
ss
call
aas
js
lods
add
jmp
les
lea
lods
cmpl
test
adc
xchg
push
ret
mov
mull
mov
sub
lds
fmuls
pop
mov
repz
lods
rcl
push
cli
js
xor
sub
inc
pop
mov
rcll
out
pop
push
mov
or
aaa
xchg
cmp
popa
adc
aaa
cld
add
int
orl
inc
out
cmp
push
jl
inc
push
ds
lcall
cs
incb
and
jb
push
and
aaa
sbb
cmpl
or
in
sti
stc
cmpsb
push
pushf
in
pop
sub
xor
xchg
mov
cmp
push
jnp
daa
mov
inc
pop
outsl
rolb
add
adc
xor
mov
mov
scas
fists
xchg
push
aas
inc
inc
inc
cs
out
xchg
dec
fwait
xchg
sbb
into
xchg
jno
mov
pop
mov
inc
mov
inc
sub
jp
testl
mov
push
mov
cli
jae
pop
xor
sub
pusha
push
out
dec
test
push
xlat
inc
in
iret
jo
imul
push
sti
sahf
mov
and
stos
test
add
push
aaa
xlat
lods
adc
pop
and
inc
xchg
ds
sbb
fisubs
pop
mov
pop
lods
mov
xchg
jns
mov
int
dec
jb
das
ds
mov
push
jbe
mov
xor
dec
shlb
and
jb
jno
jp
fisttpll
jle
xor
inc
int3
ja
out
movsl
mov
bound
fcmovb
out
cmp
cmp
rclb
mov
stc
jb
xorl
pop
inc
sub
xor
add
subl
arpl
ret
outsb
sbb
mov
out
jbe
aas
mov
fucomp
xchg
push
lods
push
push
ljmp
sbb
jg
dec
cmp
push
fisubrs
push
stos
jge
mov
push
scas
lret
jmp
lcall
test
pop
pushf
mov
jb
lahf
aad
leave
xchg
push
loop
jnp
cmpsb
sub
ja
imul
outsb
mov
repnz
mov
jb
push
push
xor
jecxz
sbb
mov
les
sub
cli
xchg
test
jg
jg
rcll
push
sub
out
mov
mov
repz
testl
gs
test
hlt
cli
cld
cmpsl
xchg
jno
imul
stos
loop
mov
jns
aas
or
push
mov
jge
add
push
sbb
pop
inc
lret
sbb
in
mov
pop
shlb
lds
add
std
inc
ret
out
mov
xor
mov
daa
loop
push
push
shrb
jno
hlt
and
shlb
das
rorl
xor
adc
inc
movsl
xor
xor
or
jo
jge
aas
xchg
pop
js
mov
pop
mov
xor
xchg
jne
in
or
pop
negl
jecxz
lock
idivb
jl
adc
data16
mov
shlb
add
or
xchg
or
insb
out
add
ljmp
inc
sbb
xlat
inc
divl
lret
adc
push
test
fistps
and
jl
add
adc
cmp
lds
sbbb
lock
idivb
int
scas
pushf
adc
cli
data16
or
lahf
ds
roll
inc
in
mov
mov
xor
repz
cmp
and
out
sbbb
fsts
or
mov
fwait
shrb
mov
jecxz
xchg
mov
push
pop
jne
out
pop
inc
into
pop
jle
inc
pop
mov
jbe
mov
xchg
mov
icebp
fs
icebp
and
orb
cli
push
fs
cmpsb
cmpsl
pop
lcall
cmpsl
mov
out
sub
test
jno
pop
jnp
inc
jecxz
nop
lods
cld
bound
lret
cmpsb
hlt
mov
fmull
push
xchg
pop
rol
inc
sub
adc
test
das
lds
fwait
adc
fnsave
out
mov
jnp
cmpsb
lds
mov
testl
out
sbb
test
and
push
and
or
pop
mov
fwait
jne
mov
or
mov
hlt
daa
out
inc
fstl
push
mov
idiv
sbb
cmc
push
jae
test
orps
mov
fistps
xchg
and
mov
mov
out
pop
test
rep
xor
mov
std
cmc
sti
subl
jp
mov
dec
pop
ljmp
fucomip
shll
cmp
cmp
loop
sub
std
dec
dec
repnz
xor
push
stos
push
pusha
mov
shrb
add
pop
mov
loop
addr16
shrl
mov
ret
das
je
mov
js
push
call
insl
cli
es
inc
lds
fs
pop
lea
or
xchg
xor
int3
sbb
mov
mov
sub
icebp
int3
adc
insl
dec
push
outsb
in
add
jp
cmp
pop
xchg
mov
sub
jg
lds
xchg
imul
shrl
add
fdivl
mov
int3
dec
push
faddl
and
cmp
orl
cmc
cmpsb
mov
insl
decl
insl
cwtl
js
mov
dec
push
mov
pusha
or
pop
xchg
jns
inc
addb
aas
mov
and
mov
and
xchg
loopne
xlat
pop
xcrypt-ofb
cmpsl
jmp
testl
cld
xlat
in
pop
mov
ret
test
pop
ja
push
popf
pop
inc
sbb
pusha
pop
and
pop
cmp
aad
lds
mov
jbe
push
paddusb
xchg
dec
das
and
xchg
push
repz
push
mov
sub
cld
mov
sub
xor
xchg
push
mov
sbb
jbe
push
outsb
adc
lods
mov
mov
aaa
sbb
pop
out
loop
ficoms
xor
mov
lods
out
sbb
push
pop
ds
or
xlat
adc
lock
inc
mov
outsb
movsb
leave
pusha
repnz
rcrb
sub
mov
dec
inc
fcoms
in
xchg
mov
lcall
jecxz
mov
xchg
jge
inc
test
xchg
fwait
push
lea
jno
add
cmp
dec
jno
push
scas
cmp
add
adc
arpl
dec
or
lret
cmpsl
adc
ret
fistpl
outsb
mov
lock
mov
xchg
push
lahf
mov
jle
out
test
fcmovnu
insl
into
push
mov
pop
inc
pushf
inc
int3
les
xchg
xchg
mov
sbb
jnp
lret
jbe
lret
mov
das
iret
fstps
mov
fdivrs
xor
jg
and
add
stos
jge
push
mov
xchg
mov
icebp
stos
jae
aad
push
jnp
sbb
xchg
xchg
pusha
or
out
imul
loop
lods
and
imul
out
dec
mov
nop
inc
adc
test
enter
aaa
pop
cmp
mov
push
sbb
je
lds
push
cmp
inc
mov
fdivs
sub
clc
adcb
rcr
adc
imul
jmp
cltd
push
push
gs
gs
or
in
pop
ret
jae
or
dec
shl
sarb
orb
stos
lret
sbb
cltd
jecxz
mov
fisttpl
and
sbb
mov
ja
add
and
jp
inc
pop
add
rcrl
sti
mov
div
adc
jb
or
jmp
loope
mov
xor
mov
sub
and
xor
dec
scas
fidivrs
cmc
lcall
or
addb
repz
mov
das
stos
sub
mov
mov
int
or
fiaddl
jnp
lret
mov
int3
push
imul
sbb
lea
push
xor
adc
jbe
xchg
out
das
stc
push
fs
sahf
fcompl
lret
subb
outsl
sti
pop
xchg
ljmp
cs
or
int
or
cld
es
sahf
or
lahf
dec
ret
lret
leave
cmpsb
jb
xchg
lcall
mov
cwtl
add
mov
mov
test
loope
pushf
outsl
mov
test
xchg
inc
dec
fucom
lock
pop
mov
mov
sahf
popf
test
pop
lcall
adc
sahf
cli
fwait
sub
adc
adcb
ds
lahf
pusha
xchg
inc
mov
adc
jne
out
out
adc
jae
decl
mov
lret
cld
push
shlb
push
ret
pop
mov
mov
push
icebp
frstor
shr
scas
addr16
jne
and
in
inc
pushf
jo
pop
repnz
hlt
xchg
mov
outsb
mov
imul
lock
mov
fstpt
call
pop
dec
mov
ja
sahf
or
test
sub
stc
mov
push
xor
insb
push
xor
cmpsl
ljmp
mov
fsts
loope
mov
and
mov
dec
lret
cltd
aas
mov
test
aaa
mov
pop
enter
sub
sbb
cmp
jmp
or
jne
jecxz
lahf
nop
lahf
lcall
push
dec
add
or
mov
sbb
jecxz
and
movsb
in
aam
jp
xor
and
push
test
push
gs
rolb
pusha
stc
jb
mov
outsb
aaa
xchg
pop
fcmovnb
or
push
sub
stos
scas
les
pusha
les
cmpb
push
sub
lods
aam
and
dec
add
movsb
test
push
rcrb
mov
ffreep
jl
scas
mov
xchg
std
mov
mov
stos
sbb
inc
subb
das
adc
lret
cmp
mov
mov
dec
lret
jg
cmp
dec
test
incb
sub
and
mov
mov
cmp
clc
lret
and
xchg
shl
or
mov
add
dec
scas
lea
fsub
test
xor
push
sbb
xor
jp
and
sub
xchg
xchg
jnp
stos
shlb
stos
std
ss
out
jae
into
daa
add
pop
xlat
int3
add
cmpsl
pop
popa
add
jl
or
push
outsl
in
out
mov
insb
fbstp
adc
out
push
popf
pop
or
mov
out
jmp
movsl
mov
mov
cmc
push
mov
mov
es
xor
movsl
xchg
jl
add
aam
pop
and
mov
outsl
mov
xchg
mov
stos
loopne
or
inc
sub
popf
or
mov
inc
aas
mov
mov
inc
mov
pop
repnz
repz
into
push
shll
int3
mov
aas
clc
in
ljmp
loop
subl
loopne
lret
clc
xchg
cmp
sbb
popl
mov
arpl
jmp
jno
lods
push
stos
mov
je
jl
imul
fs
xlat
push
xor
outsl
pop
or
mov
mov
pusha
outsb
cmp
outsl
mov
dec
testb
pcmpeqw
and
jecxz
add
xor
inc
enter
inc
not
mov
les
jle
xlat
je
popl
mov
jle
outsb
mov
shrl
cltd
sbb
fbstp
jb
mov
dec
inc
andb
enter
sub
fs
je
into
xchg
pop
dec
lahf
lock
push
cwtl
pop
or
mov
adc
jo
daa
ret
fistl
repz
std
pop
mov
adc
inc
and
mov
xor
inc
dec
pcmpeqd
cmp
dec
mov
les
push
arpl
in
movb
shrl
popf
or
cmp
inc
mov
add
adc
lods
ss
inc
add
fidivrl
mov
lahf
lds
pop
ja
pop
gs
lahf
fdivrp
push
loopne
push
test
cmp
bound
pop
mulb
mov
imul
adc
push
not
sahf
sahf
xchg
ds
in
mov
mov
inc
cmp
and
lods
jmp
sbb
xchg
test
cmpsb
call
cltd
mov
movsl
enter
enter
js
out
and
outsb
cmp
fcoml
jnp
mov
push
push
nop
dec
rorl
mov
ss
cs
jmp
pop
push
scas
xchg
mov
or
aaa
sbb
cmp
inc
imul
mov
fucom
mov
pop
lock
addr16
cmpsb
clc
lret
xchg
jno
pop
out
lods
push
and
inc
lret
iret
sbb
mov
sub
jo
jmp
mov
fdivl
mov
outsb
ficomps
and
daa
or
insb
pop
jge
dec
shll
nop
sub
sbbb
mov
xchg
fwait
or
mov
popa
xor
or
jns
into
and
js
and
hlt
aaa
cmpsl
movlps
ljmp
fstps
or
pop
mov
fisubs
adc
dec
xchg
cld
ss
filds
mov
mov
jno
inc
sarb
addr16
jbe
and
ljmp
movsl
ret
iret
imul
dec
mov
cs
addr16
inc
or
sub
scas
push
and
sub
xchg
xor
pop
or
cli
imul
push
das
movsl
add
mulb
and
add
dec
fwait
jnp
test
int
cmp
ds
fs
dec
push
cmp
or
setbe
ja
ds
lods
popf
pop
jmp
jo
or
std
xor
and
pop
roll
mov
cmp
sub
add
mov
fcoms
dec
jb
lods
sbb
jne
pushf
int
rcll
inc
dec
add
sub
outsb
test
repnz
test
enter
and
imul
imul
test
push
fdivrs
xchg
mov
mov
iret
je
nop
mov
movaps
xchg
imul
push
test
xor
aad
sub
sahf
xchg
and
enter
and
int
push
in
sbb
mov
out
icebp
mov
mov
and
cwtl
subl
aam
nop
popl
jle
xchg
and
dec
cmp
jae
push
xchg
ret
prefetcht1
pop
shll
cld
push
fs
xchg
jl
lds
aaa
sbb
stos
idivl
movsb
lcall
sub
in
mov
dec
sarb
pop
ja
sub
insb
imul
outsl
andb
leave
and
sbb
push
cld
loop
push
aad
mov
or
add
cmp
jb
rcl
mov
mov
adc
std
jno
mov
mov
mov
adc
in
rolb
popf
push
stc
fbstp
mov
clc
stos
pop
mov
cmp
shrb
adc
mov
dec
sti
xorb
xlat
stos
lea
mov
push
mov
pusha
bound
sbb
stc
fsubp
mov
pop
int
push
jmp
out
mov
mov
xor
popf
cltd
and
pusha
mov
mov
inc
stos
mov
or
push
dec
movl
into
xor
jae
aaa
aaa
adc
mov
inc
test
hlt
lds
push
stc
mov
jp
sub
rorb
mov
xor
mov
divl
loop
cli
xchg
out
and
cmpsl
loop
mov
cmp
xchg
mov
cld
ficoml
add
mov
xor
pop
cli
popaw
mov
out
mov
leave
sbb
test
inc
xchg
mov
pop
dec
adc
mov
jl
bound
lcall
rcll
mov
stos
mov
push
mov
add
subl
out
or
shr
stos
mov
imul
cmp
imul
mov
mov
mov
sbb
jno
jns
stc
xchg
stos
js
xchg
jmp
xor
icebp
jne
xchg
enter
mov
inc
es
mov
cld
push
fnstenv
xchg
rcrl
sbb
pop
loop
int
sub
adc
push
add
jae
lahf
mov
sbb
movsl
je
pop
ret
push
sub
cmp
or
push
fimull
fcmovne
cmp
push
in
add
mov
fs
xchg
fdivs
or
inc
jo
cmp
hlt
outsb
int
pop
xchg
add
mov
xor
rolb
mov
push
sub
sub
ret
call
pop
pop
shlb
xor
sub
inc
dec
dec
pop
mov
lods
cmpsb
pop
jbe
mov
xchg
xor
mov
mov
xor
sbb
aas
sarb
popf
sahf
sbb
and
iret
mov
std
aam
jmp
adc
xchg
lods
inc
outsb
or
test
popf
test
cmp
inc
adcl
cmp
cmp
and
push
xchg
and
push
lods
mov
dec
jae
and
mov
not
sbb
push
sub
push
fdiv
and
pop
aad
adc
mov
jecxz
shl
shll
insb
inc
cltd
dec
js
call
fstl
call
aam
or
sub
lock
xchg
push
or
push
jbe
cli
push
lods
dec
popa
aaa
ljmp
inc
out
icebp
cmpsb
push
test
pop
imul
call
fstpt
dec
int3
movsl
sbb
mov
mov
cmp
les
aaa
loope
fmuls
in
inc
push
lahf
add
movsl
push
dec
mov
in
clc
call
adc
jl
in
mov
adc
sbb
mov
lret
xchg
xor
std
lcall
fcoml
test
xchg
inc
imul
pop
fwait
and
push
shrl
xor
push
test
sub
add
xchg
dec
pop
jecxz
and
cmp
push
jg
addr16
cmpsb
repz
sbb
dec
cld
mov
mov
xchg
push
stos
add
sub
or
mov
inc
ljmp
jmp
daa
push
loope
mov
stos
loop
loope
ret
mov
mov
cmp
dec
clc
mov
sti
lock
mov
insb
xlat
nop
les
add
dec
or
int3
into
or
and
ja
adc
mov
ljmp
ret
insl
stos
lret
pop
cmp
xchg
test
mov
enter
roll
ja
mov
or
jno
int
sbb
dec
xchg
mov
roll
push
push
pop
sarl
test
inc
xchg
cmp
pushf
mov
sub
mov
xchg
mov
and
xchg
ljmp
aas
push
ja
std
xchg
jmp
rclb
xor
inc
sbb
xchg
shr
arpl
mov
call
adc
dec
adcb
lods
jge
jecxz
in
xor
inc
rcrb
stos
cmpsb
xchg
or
shrl
sbb
daa
into
mov
mov
aam
or
test
add
push
mov
stos
jge
fs
inc
push
lods
xchg
lea
push
iret
dec
loopne
mov
xchg
test
movsl
jbe
repz
inc
lods
lods
jmp
cmpsb
fbld
fnsave
repz
imul
fs
into
popf
inc
add
stos
xchg
sub
sbb
cltd
jle
inc
test
and
jle
push
fisubs
and
repz
addl
or
cmp
and
mov
movsl
dec
out
add
push
inc
out
mov
sub
sbbl
pusha
xchg
pop
inc
sub
in
xor
jle
cmc
or
or
mov
mov
hlt
mov
mov
lods
or
jo
je
add
or
pop
test
xchg
shr
sub
inc
dec
add
stc
aaa
roll
inc
sbb
jnp
or
mov
or
xorl
lea
insb
loope
mov
into
sbb
fidivrl
gs
jno
pop
int
pop
js
out
shlb
mov
xchg
shll
int3
and
sbb
aad
pop
push
cwtl
rorl
jbe
bound
sub
push
mov
scas
js
jp
mov
mov
and
frstor
dec
and
add
jns
in
add
repz
iret
sbb
outsb
jg,pt
outsb
inc
nop
ret
rcrl
das
and
repz
pop
mov
mov
adcl
pop
imulb
push
push
mov
testb
shll
lea
aad
cmp
dec
fisubrl
call
mov
addr16
cmp
mov
rorb
pop
xchg
xor
push
in
aam
dec
stos
cmp
lock
ljmp
cltd
aas
ret
mov
xor
jle
add
out
sub
sarb
in
fbstp
dec
add
mov
sti
loop
scas
fidivs
mov
out
lea
pop
dec
mov
and
sub
loopne
fs
jo
mov
cmpsl
xchg
and
sbb
iret
ret
mov
sbb
cmp
sahf
sub
ljmp
xchg
sbbl
pop
push
inc
xlat
xchg
es
imul
jne
mov
jns
xchg
push
mov
xor
inc
and
pop
xchg
xchg
pop
flds
mov
add
arpl
adc
mov
lods
mov
or
sbb
inc
mov
pop
sub
and
imul
inc
je
pop
negl
test
enter
jae
inc
mov
add
adcl
adc
arpl
notb
cli
xchg
push
je
pop
out
gs
roll
or
lahf
sub
dec
xchg
push
arpl
mov
pop
aas
mov
dec
and
mov
mov
xlat
or
sti
pop
mov
add
daa
fistl
das
lahf
hlt
insl
pinsrw
loope
ds
fwait
sarl
pop
stc
rcll
outsb
mov
mov
out
or
imul
aaa
cmpsb
mov
add
jne
cmpsb
xor
jae
xchg
je
aam
scas
out
pop
sub
clc
push
fisttpl
lock
or
add
mov
jge
mov
cs
fistpl
or
mov
inc
int3
cmp
jp
mov
pop
xor
jne
out
fdiv
and
out
add
adc
inc
mov
dec
daa
jb
shrl
popf
call
mov
repnz
push
add
jne
sti
test
push
lods
ljmp
jne
sbbb
les
mov
xor
jnp
int3
push
mov
fistpll
sbb
js
cwtl
scas
mov
test
dec
cwtl
push
and
jno
pusha
add
bound
stos
adc
inc
lcall
inc
dec
movsl
pop
les
push
aam
aam
mov
insb
pushl
in
fcmovne
mov
fs
mov
dec
mov
sub
and
das
and
clc
ds
rorb
mov
into
rclb
adc
fincstp
xor
xchg
test
sbb
cmc
aad
dec
jo
lahf
sahf
pop
xchg
sarl
xchg
loope
stc
cmc
shll
arpl
mov
lret
dec
aaa
int3
sbbb
mov
sbb
rorb
sbb
xchg
loope
pop
les
les
mov
outsb
xor
sub
cmc
mov
xor
scas
xchg
xchg
in
add
add
sbb
shlb
jp
ret
mov
fisubrs
out
cmp
pop
and
mov
jecxz
jl
and
sbb
adcb
insl
movl
mov
dec
hlt
loop
or
es
push
cltd
adc
gs
jecxz
mulb
jb
mov
pop
xorb
daa
pop
inc
lahf
pushf
leave
ficoml
pop
mov
mov
test
cld
jbe
adc
cmpxchg
test
fwait
loop
sahf
jecxz
pushl
mov
jno
or
aas
add
std
inc
daa
mov
cld
jl
jecxz
xlat
scas
rorb
pushf
or
outsl
add
mov
pop
inc
sub
stc
nop
int
sbb
test
jg
cmp
fnsave
sbb
icebp
aad
jns
mov
push
vmread
flds
in
inc
add
arpl
rorl
and
mov
mov
jns
push
leave
subb
xor
xor
jo
mov
rorb
jae
adc
dec
mov
jmp
add
outsl
jecxz
add
jmp
stc
pop
cmp
fadds
notb
or
sub
adc
stos
and
lahf
push
out
rcr
push
or
adc
jmp
inc
sub
int
in
adc
jmp
jmp
push
pop
pop
adc
mov
js
iret
aam
fwait
mov
adc
mov
pushl
fwait
adc
jns
cltd
in
fimull
leave
sbb
jge
push
in
mov
sub
lea
mov
adc
push
push
gs
or
lcall
inc
in
cli
popf
sbb
test
mov
push
cmp
in
adc
jno
rcr
mov
mov
mov
jae
in
sub
mov
or
xchg
arpl
ja
orl
xor
in
imul
fcmovnbe
in
jno
subb
add
pop
jbe
cmp
adc
sbb
jg
add
cmc
aas
adc
adc
mov
js
scas
push
adc
sub
xchg
jbe
and
push
iret
sub
jo
test
push
addr16
testl
clc
cmp
pop
dec
or
add
add
insl
add
jns
inc
fwait
stos
mov
gs
repnz
stc
lret
divl
add
dec
sub
lcall
xchg
cli
ds
jl
cltd
rcr
leave
adc
inc
int
jmp
pushf
lods
addr16
cmp
js
lret
and
in
mov
adc
test
nop
fimull
jbe
lahf
fcmovu
jp
fsub
sub
outsl
xchg
dec
mov
iret
aam
mov
ss
inc
loop
rclb
mov
xor
hlt
fmul
lock
out
ja
mov
arpl
cmpb
push
arpl
and
and
adc
sbb
sarl
dec
xor
fstpl
mov
in
inc
jb
insl
cwtl
jnp
xchg
jge
ret
insb
push
movsl
xchg
sbb
stos
push
or
jg
push
sub
cmc
xchg
repz
jbe
or
sbb
dec
or
nop
popa
inc
xchg
loop
xchg
cmpb
mov
fldl
imul
cli
cmp
lret
insb
test
mov
or
push
in
lods
pop
loop
xorb
mov
mov
mov
inc
mov
dec
lahf
lahf
test
lock
cwtl
sbb
insb
dec
leave
into
push
xchg
rcrb
dec
pushf
xchg
rclb
inc
inc
data16
pusha
push
mov
fbld
or
sbb
out
mov
sub
push
movsb
add
and
sbb
and
and
icebp
mov
outsl
xlat
fwait
adc
push
das
hlt
enter
cltd
fidivl
sbbb
xor
adcb
scas
pop
jmp
cmp
sahf
int
sbb
jns
arpl
data16
dec
repnz
mov
notb
orb
das
mov
fstpl
dec
in
test
imul
jmp
cli
xchg
mov
xchg
cltd
pop
testl
call
push
jo
pusha
int3
fistpl
adc
mov
pop
xchg
jecxz
and
jns
jbe
pop
push
lea
in
dec
mov
call
rcl
xlat
jae
push
aam
in
and
mov
idivl
cmp
mov
repz
in
jecxz
push
lods
sarl
popl
test
xchg
in
in
xor
aaa
stc
pushf
enter
sbb
sbb
das
inc
cwtl
jle
jno
rcll
and
shl
mov
mov
idivl
jno
jb
int3
fistl
mov
stos
jae
in
faddp
jecxz
add
test
xor
jns
jnp
mov
add
mov
scas
push
jmp
les
jns
fcoml
inc
cs
xchg
sub
xor
int
fidivl
mov
push
cld
shl
movsl
push
fidivrs
out
lret
aaa
mov
popf
jge
pushf
push
pop
sub
in
out
lret
mov
sub
je
add
cmpsl
jno
outsl
test
insl
lahf
jbe
scas
shll
in
movsl
sub
mov
adc
into
dec
push
push
lds
xchg
outsl
cmp
gs
daa
push
mov
inc
insl
mov
mov
inc
lret
xchg
push
jno
lds
psubsw
mov
loop
icebp
shrb
xchg
add
mov
lods
dec
sbb
sbb
xor
jmp
jge
shl
in
scas
pop
cs
cmp
push
xor
xchg
in
mov
pop
and
jecxz
jbe
inc
ja
pop
rcrb
popa
ret
xor
fbstp
cld
cltd
incl
lcall
cmp
push
mov
aaa
add
or
mov
push
popa
mov
xchg
pop
gs
mov
pushf
sbb
int
in
loopne
push
int3
loope
jg
sub
jb
inc
and
or
jmp
push
cld
pop
inc
jmp
fs
pop
ljmp
xorl
xor
call
rcrb
imul
jbe
or
lods
and
pop
dec
movsb
data16
push
pop
pop
mov
out
xchg
pushf
imul
ja
ret
cmp
xchg
mov
test
js
outsl
imul
popa
sub
call
lahf
fistps
mov
movsl
out
inc
fcomps
mov
loope
clc
xor
mov
and
movsl
popa
ja
jg
mov
inc
hlt
or
jecxz
jecxz
or
xchg
mov
mov
xchg
xor
data16
cmp
cld
ja
or
mov
xlat
jbe
xor
scas
pop
xchg
lcall
cmp
dec
jo
push
sbb
lret
push
sbb
mov
cmp
cmp
adc
fcomp
shll
xor
ljmp
shlb
sarb
repnz
push
ds
push
scas
lock
fmull
fwait
xor
mov
pop
pusha
adc
mov
iret
mov
addr16
sub
xchg
pusha
xor
push
inc
lea
push
dec
cltd
stos
mov
adc
xchg
enter
sub
add
pop
loop
fsubs
loope
jl
jle
movsb
loope
push
xchg
jecxz
adc
fidivrs
mov
push
mov
lods
jmp
shrb
add
aam
cwtl
xor
push
mov
in
das
rorl
mov
pop
mov
dec
adc
adc
dec
pop
jl
call
call
decb
adc
movsb
xchg
mov
test
add
aam
testl
push
and
xchg
orb
push
ja
fisubrs
mov
icebp
or
data16
pop
mov
icebp
jno
mov
das
pop
cmp
movsb
imul
xor
and
or
mov
scas
mov
in
addr16
ret
clc
sub
ljmp
mov
je
adc
ret
and
mov
in
mov
iret
aaa
int
jno
popa
add
je
aam
fwait
movsl
repnz
mov
pop
divb
int3
cmp
or
mov
test
push
cmp
cli
cmp
int
imul
or
inc
iret
xor
mov
or
addr16
jo
fwait
mov
mov
add
add
iret
xor
lods
or
mov
pop
mov
mov
mov
aam
jae
ljmp
nop
negb
cwtl
loope
popa
push
jmp
push
outsb
xor
test
xor
imul
cmp
test
out
test
sub
xlat
inc
mov
imul
and
ljmp
push
push
aaa
test
xchg
aaa
xchg
xor
and
aad
pop
xchg
stos
cmpsb
in
loop
and
out
mov
inc
and
sbb
imul
xchg
test
or
jae
bound
cmpsl
scas
sub
lahf
add
cmp
out
jge
shlb
into
fs
shrb
push
jmp
addl
xchg
repz
xlat
aaa
mov
iret
mov
add
and
cltd
jb
jp
lret
lret
cmpsl
aad
push
js
call
dec
pop
and
cmp
xor
pop
outsl
push
in
aad
psraw
cli
mov
jne
scas
sti
das
repnz
movsb
mov
and
jbe
loopne
mov
jb
cltd
repz
sarb
pushf
push
adc
leave
xchg
dec
ljmp
ret
insl
cmpsl
xchg
mov
mov
adc
pop
pop
das
pop
xchg
insb
ljmp
cmpsl
icebp
inc
jmp
dec
cltd
or
ljmp
int3
ret
andl
dec
push
mov
push
ds
cmp
test
into
bsf
jp
jecxz
mov
sub
hlt
add
ficompl
inc
push
imul
lahf
in
push
adc
pop
jae
mov
cmp
sub
push
lea
sub
sarb
jmp
dec
mov
pop
sahf
aam
jbe
pop
mov
and
xor
push
jmp
sbb
xchg
pop
push
pop
packsswb
push
jae
jbe
in
mov
jp
push
subb
sarb
add
sti
popl
into
shll
mov
std
cmp
inc
mov
mov
jnp
sbbl
and
rcrb
stc
or
insb
je
ss
jmp
stc
xchg
shr
add
jae
in
xchg
pop
sub
faddl
cmp
mov
sbb
or
hlt
daa
fsubl
pop
fmuls
mov
and
loope
arpl
adc
std
cmpsb
cltd
push
shrl
push
in
adc
jnp
xlat
jno
lret
xlat
inc
in
and
sahf
adc
ror
xchg
jle
mov
lock
cld
ss
pop
sbb
pop
sbb
popf
shll
lea
inc
mov
lret
push
insb
sbb
xor
push
cwtl
dec
in
or
cltd
mov
fstps
push
sub
jo
stos
inc
fsubrl
test
cmpsl
loope
sbb
faddp
dec
push
insb
xchg
sbb
fwait
xchg
out
imul
mov
dec
std
push
xor
pop
ret
and
mov
push
das
lahf
sub
push
xor
bound
dec
into
push
lods
es
or
xchg
pop
adc
jmp
jns
fmull
xor
mov
ds
aam
dec
cmpsb
mov
inc
fldenv
or
cmc
dec
and
test
sub
or
dec
lods
repz
push
lret
js
hlt
jno
push
add
aam
push
jb
adc
xor
scas
push
sar
ffree
sbb
dec
push
movsl
jae
insl
add
int
push
iret
test
sub
xor
xchg
adc
je
or
imul
xor
aam
pop
sub
mov
fnstsw
fistpll
inc
lahf
mov
es
sbb
pop
xlat
mov
and
rcrl
nop
adc
movsb
stc
fcomip
andl
xor
mov
cmp
jno
mov
adcl
addr16
mov
jne
push
jl
pop
inc
jmp
sbb
mov
int
loope
mov
loop
xor
push
add
shlb
push
adc
insl
jecxz
out
mov
aaa
or
adc
cmp
jnp
xor
icebp
and
mov
ret
fisubrs
testb
cmp
and
andl
xchg
inc
lcall
xor
mov
sahf
push
and
clc
inc
popa
lret
call
cmp
test
dec
dec
fistps
or
insb
and
mov
sub
xchg
fs
test
mov
clc
add
dec
push
std
scas
adc
inc
loopne
mov
dec
inc
xor
push
ficomps
in
mov
lock
std
push
cld
mov
lock
lods
fldt
jb
or
vpsllw
push
and
xchg
mov
bound
adc
ret
jnp
pop
sub
mov
push
loope
pop
pop
arpl
bound
std
cmp
js
jno
sub
adc
pop
dec
sbb
or
mov
mov
pushf
inc
sbb
loop
push
jne
shrl
cltd
cli
ret
pop
pop
dec
xchg
xlat
mov
loopne
xchg
jnp
rcll
pop
mov
inc
mov
fstps
sub
lods
xchg
fistps
test
int
sbb
loope
push
pop
add
jb
adc
scas
push
jne
push
inc
ja
dec
push
xor
dec
mov
mov
cwtl
aaa
test
leave
pushf
jne
stc
push
pop
push
sub
mov
sbb
in
pop
and
mov
sti
adc
sub
aad
bound
add
fiaddl
push
mov
or
out
adc
xor
push
adc
scas
outsl
jmp
sbb
inc
loopne
mov
pop
push
std
cmpsl
adcl
pop
mov
lods
xor
dec
das
lods
ja
mov
mov
adc
mov
mov
pop
push
loopne
sub
adc
and
fwait
mov
add
xor
inc
mov
xchg
addb
outsl
gs
jo
push
xor
push
mov
cmp
lret
testb
repnz
lret
xchg
inc
jge
lcall
addb
cmp
mov
xchg
mov
out
popf
pushf
xor
or
orb
and
fs
in
mov
fcmovne
aaa
pop
dec
inc
cld
push
icebp
add
mov
and
pushf
push
adc
std
adc
and
inc
adc
popa
shrb
pusha
cmp
push
imul
rolb
sub
test
cmp
mov
je
notb
push
and
pop
sub
jo
inc
outsl
imul
dec
cmp
jns
xchg
popf
mov
sbb
repz
scas
push
cwtl
loopne
cmp
pop
call
repz
mov
sub
adc
push
iret
andl
fisttpll
or
mov
in
jno
dec
add
call
das
roll
sub
jl
pop
enter
aas
sbb
imull
decb
sub
cmpsl
call
sub
lcall
xchg
arpl
push
or
inc
fbstp
xor
jp
lret
bound
cvtps2pd
sbb
mov
mov
mov
cmp
imul
shl
mov
add
sbb
je
cwtl
cli
inc
mov
test
aad
ss
or
ret
jbe
push
lahf
clc
or
xchg
in
add
jae
xchg
divb
fisubl
movsb
inc
sub
add
data16
lods
dec
xchg
or
mov
fistpll
popf
shr
mov
loope
outsl
jnp
test
xchg
mov
pop
popf
pop
mov
add
insb
push
cmpsl
sbb
lock
push
sbb
and
aas
jno
insb
adc
shll
lahf
das
mov
adc
xchg
lods
sbb
aas
loopne
mov
mov
icebp
sbb
pop
out
ret
pop
or
ficomps
pop
push
aas
imul
add
out
fcmovnbe
add
fstl
sbb
jbe
and
xchg
outsl
mov
dec
xchg
pmaxsw
dec
pusha
sub
ret
mov
pop
gs
mov
push
aam
cli
add
icebp
cmc
jmp
push
data16
add
push
jae
fcmove
fmull
das
lcall
ljmp
sar
add
inc
rorl
mov
cmpsb
hlt
lret
jno
cmp
mov
lds
push
xor
test
fs
cli
push
loop
mov
outsb
mov
outsl
push
add
gs
int
mov
imul
sti
out
mov
cmp
clc
dec
sahf
dec
mov
sbb
inc
sbb
fcmove
loope
push
xor
call
cld
mov
icebp
or
xchg
jne
cld
mull
mov
or
add
in
clc
inc
imul
test
cmp
pop
insl
jne
je
shll
call
jp
pop
sub
mov
and
movsl
out
bound
cmpsb
lds
scas
sub
movsl
les
jo
jle
cmpsl
pop
div
clc
mov
pushf
stos
hlt
mov
cmp
lds
add
ljmp
rolb
push
jg
aas
sub
mov
in
aam
mov
dec
gs
fisubrl
fsts
jp
inc
lcall
xor
mov
clc
xor
cmpl
adc
in
mov
outsb
sub
std
jne
movsl
stos
pop
ret
daa
xlat
popf
int
fbld
bound
fildll
push
outsl
dec
cmpsl
outsl
pop
fnstcw
mov
cld
leave
mov
inc
daa
dec
sbb
sub
xchg
adc
rcrl
jns
jmp
inc
pop
and
push
pop
sbb
xor
xor
fidivl
add
inc
jg
xchg
int3
jmp
fstpl
xlat
out
outsl
ficoms
loop
gs
repnz
test
add
ret
test
or
fisubl
cld
scas
or
cmp
cld
movsb
in
das
repz
xchg
inc
rclb
adc
sub
imul
sbb
inc
mov
test
loop
movsb
jno
sub
sbb
mov
scas
ss
mov
mov
rcrb
mov
out
popf
dec
dec
cmp
fisttps
push
push
xchg
aam
push
stos
xchg
mov
fdiv
jbe,pt
adc
adc
fstps
sahf
repz
shl
dec
pop
fcompl
sbb
adc
or
mov
xchg
aam
mov
sbb
mov
fcoml
sub
mull
cwtl
pop
add
sti
sbb
insl
inc
call
xor
stc
sbb
add
adc
mov
jecxz
and
xor
sub
imul
js
push
hlt
mov
popa
movsb
aas
jg
sub
or
dec
jp
test
and
pop
lds
adc
xor
mov
or
sub
xchg
jb
mov
mov
shl
into
fdivrp
faddl
mov
test
jge
imul
sub
stc
adc
cwtl
rcr
test
cmp
cmpsb
mov
xchg
push
xchg
and
sbb
push
or
add
test
in
mov
adc
push
push
lods
icebp
and
dec
adc
cmc
les
sub
xchg
cmp
fsubl
iret
mov
or
dec
daa
adc
xchg
pop
push
loope
jecxz
lods
sub
out
xchg
inc
mov
xchg
sarl
sbb
std
out
mov
mov
and
sbb
testb
and
push
xchg
mov
jmp
fs
movsl
push
sbb
and
push
je
jbe
pop
fcoml
icebp
or
xchg
xchg
je
lods
sbb
push
mov
jns
and
mov
repz
pop
push
xchg
call
cwtl
test
jo
mov
rcl
and
outsl
jae
mov
call
notb
xchg
loopne
aam
xchg
ljmp
negb
negl
inc
sub
push
fdivrl
sub
popa
test
ret
mov
xchg
jns
scas
sarb
dec
inc
fstpl
push
push
fwait
mov
and
dec
mov
and
mov
jo
xlat
or
push
adcl
roll
movsl
aaa
fistpl
sarl
shll
xlat
adc
fistl
inc
jb
xor
xchg
in
dec
sub
jo
sbb
xchg
aaa
push
inc
pop
stos
push
pop
cmp
cld
adc
jl
mov
sbb
ss
fs
sar
rclb
loope
pop
aaa
mov
xorw
mov
xchg
rcl
dec
mov
xchg
cs
ds
ffree
cmc
sub
or
adc
sub
imul
jmp
enter
add
lcall
inc
push
pop
adcb
mov
test
xchg
test
dec
test
jp
dec
sbb
loopne
adc
mov
cld
xchg
sbb
ja
push
gs
pop
sub
jns
sbb
scas
mov
push
xchg
popf
xchg
ror
inc
fnstsw
sub
push
fldt
orl
or
add
pop
sbbl
push
or
jns
push
or
push
dec
mov
mov
mov
xchg
push
pop
sub
fstpl
aaa
xchg
xchg
ret
test
insb
pop
aas
out
mov
cs
loop
into
shl
daa
test
mov
cmpl
and
mov
in
ja
sbb
cltd
xor
int
in
out
enter
imul
dec
jbe
cltd
mov
cld
push
jo
push
mov
xor
mov
stos
and
inc
mov
inc
in
shrl
dec
loopne
shlb
mov
add
push
test
pop
in
jo
adc
mov
fs
ss
mov
stc
cmp
lret
pop
fmuls
xlat
cs
je
pop
imul
xor
outsb
push
nop
adc
inc
push
call
mov
not
fwait
aaa
or
xchg
push
testl
scas
mov
push
xorl
hlt
ficompl
jno
imul
lret
add
lods
shlb
jb
jecxz
inc
mov
icebp
insb
adc
sbb
lods
idivb
xchg
pop
mov
xchg
addl
call
cmpsl
add
add
sti
push
mov
fwait
xchg
xchg
push
adc
popa
and
test
or
jecxz
mov
cmp
imul
lahf
pop
imul
inc
aas
out
xor
inc
test
cmp
adc
in
pop
mov
inc
or
int3
sub
sub
add
jno
enter
les
pop
imul
jmp
jge
movsl
fcomip
scas
mov
bound
les
dec
push
fnstenv
andl
jl
popa
cmp
and
inc
adc
xor
mov
sahf
jo
rolb
jmp
cli
lahf
mov
aas
mov
outsb
inc
in
or
xchg
cwtl
sahf
aas
mov
sti
jae
sti
in
jbe
ret
mov
call
fs
mov
push
and
xchg
in
sub
mov
sbb
xchg
imul
in
hlt
pop
aad
movsb
stos
shll
jle
dec
cs
dec
out
push
lret
inc
repnz
in
push
sbb
jle
jo
mov
add
xor
add
mov
mov
adc
add
jecxz
mov
lds
hlt
mov
and
in
xchg
xor
dec
adc
xlat
cmpsl
cmp
xchg
rcll
mov
js
adc
sbb
xor
test
mov
clc
pushf
bound
push
mov
sub
dec
ret
cwtl
xchg
pop
xchg
cmp
fisubrs
jnp
cwtl
push
stos
xchg
in
fdiv
out
xor
cwtl
test
je
das
mov
je
and
cmpsl
push
int3
aam
repz
mov
sub
jp
or
loopne
sub
cld
imul
jecxz
xchg
mov
fwait
mov
in
pop
fldcw
sbb
push
and
cmp
je
cs
roll
add
movsl
aad
xor
xor
lds
inc
xchg
lock
in
xor
clc
dec
enter
mov
dec
popf
out
jecxz
mov
cltd
xchg
pop
cli
out
xor
test
xchg
inc
push
sub
arpl
sbb
jl
aaa
cmp
pushf
mov
es
out
and
mov
xchg
mov
inc
jns
xchg
fnstcw
icebp
lods
mov
add
repnz
cmp
pushf
ret
xchg
loopne
mov
repnz
sub
incb
pushf
test
fs
scas
pushf
mov
mov
push
pop
fstl
adc
gs
mov
pop
sbb
push
loope
mov
sbb
push
ficoml
jl
adc
daa
gs
in
filds
scas
jecxz
lahf
mov
xchg
arpl
or
pop
aas
ret
cmpsb
jl
sbb
inc
jnp
fsubrp
push
mov
bound
aas
cmp
xor
shrb
cmp
test
jg
jae
movsb
mov
call
mov
sub
ja
push
ss
repz
cli
sahf
or
iret
out
push
gs
pop
pop
lods
add
mov
fbstp
cmpsb
mov
shlb
jge
mov
jns
inc
out
and
adc
js
outsb
in
mov
imul
jecxz
fwait
test
sti
out
xlat
jle
xor
das
shlb
or
ja
cmp
sbb
dec
mov
scas
and
cmp
cmc
sahf
add
hlt
test
fcmovbe
outsb
xor
outsl
test
sahf
xchg
leave
rol
and
std
pop
into
push
or
into
pop
xchg
les
cmp
out
mov
mov
aam
shrl
or
ljmp
out
fwait
sub
sbb
call
ss
fnstcw
clc
arpl
ss
in
cmpsb
dec
push
pop
pop
xor
mov
dec
ja
pop
jb
idivl
dec
xor
fnsave
sbb
and
adc
pop
addr16
aas
lods
add
jns
fcmovnbe
lcall
push
movsl
cmp
push
fistpll
mov
fiaddl
or
cmp
out
cmp
insl
jmp
dec
pop
aam
dec
cltd
adc
jo
mov
adc
jae
mov
ret
or
cld
leave
lret
pop
jecxz
insl
add
aad
das
dec
pushf
lahf
xor
dec
aaa
xchg
dec
aam
cltd
dec
pop
test
out
arpl
scas
mov
push
mov
iret
lret
aam
sbb
fsubrs
lock
lea
xlat
cmp
mov
inc
add
and
mov
ret
std
push
jnp
inc
cmp
dec
mov
inc
ret
dec
testl
xchg
adc
or
adc
fs
sbb
sbb
jle
dec
imul
cmp
scas
push
pop
push
xchg
push
xor
in
sbb
xchg
pop
inc
dec
xor
rcr
mov
xchg
adc
push
jl
imul
mov
sub
inc
lock
mov
dec
shl
and
sbb
ret
adc
push
lods
dec
sbb
mov
add
push
cmp
and
ds
loopne
sbb
fstpl
pop
hlt
scas
test
loope
jmp
hlt
cld
pushl
ss
sahf
mov
stc
inc
test
leave
in
cmpsl
hlt
repz
sub
sbb
js
dec
pop
mov
jbe
sbb
ret
cmc
mov
dec
test
xchg
out
cmp
mov
mov
mov
std
lods
es
push
sbb
mov
jmp
push
mov
adc
xchg
movsl
fucomip
icebp
mov
jle
nop
pop
or
aaa
adc
pop
aas
jp
pushl
inc
call
lods
sub
mov
and
dec
xorb
sub
xor
sub
sbb
scas
cmc
xor
push
out
mov
jge
pop
lock
add
mov
repz
sub
cmp
fwait
mov
mov
pop
pusha
pop
jae
jne
adc
add
aaa
mov
es
lret
andb
ds
mov
inc
ja
enter
aas
dec
mov
adc
mov
leave
jp
inc
mov
test
push
orl
leave
jbe
cmp
fstps
push
jmp
data16
inc
rcrb
push
iret
addr16
ljmp
jb
pop
xor
sbb
or
fnstsw
add
and
xchg
in
or
sahf
inc
add
imul
mov
xor
into
scas
mov
js
add
inc
pop
mov
pusha
inc
adc
sub
les
ja
es
scas
loope
pop
jmp
icebp
rcrb
into
add
hlt
add
xor
mov
outsb
jo
shll
ss
sbb
lahf
adc
pop
fistl
sub
dec
xchg
mov
push
dec
dec
cmp
pop
nop
xchg
xor
test
std
out
imul
out
in
out
dec
add
add
adc
adc
mov
scas
stos
loope
pop
outsl
aad
stos
xor
pushl
add
imul
or
sbb
pop
sbb
fs
imul
inc
mov
dec
xchg
and
mov
jmp
fcoml
outsb
cmp
add
loopne
outsl
pop
mov
movsl
lret
cmp
jmp
xchg
add
dec
jl
xor
orl
cmpsb
cmp
pop
test
sub
xchg
cmp
dec
inc
dec
or
or
xchg
sub
mov
xchg
mov
add
cmpsb
xchg
mov
xchg
mov
sub
arpl
ret
outsb
das
and
hlt
addr16
push
lret
idivl
fstpl
jecxz
in
and
imul
jmp
jno
jp
mov
jg
sbb
mov
popa
enter
dec
cmp
push
arpl
fimuls
sub
pop
mov
cld
fwait
dec
fs
inc
aas
sbb
push
mov
xchg
push
sub
movsb
xor
inc
xchg
adc
leave
imul
xchg
xor
outsb
test
or
out
xor
gs
xor
cltd
and
jno
cli
insl
or
mov
imul
es
mov
cwtl
fmuls
pop
cld
pop
xor
xlat
cmc
or
icebp
pop
jecxz
xchg
push
dec
andb
push
mov
mov
adc
fs
xlat
cmp
cmp
outsl
pop
pop
aam
and
jge
xlat
sub
inc
icebp
mov
sbb
bound
movsb
and
dec
ljmp
and
or
or
sarl
dec
inc
ss
hlt
imul
or
or
xor
pusha
ss
test
jp
sub
jg
or
fcmovb
xor
lds
inc
xchg
and
jns
xchg
popf
adc
inc
and
ret
rcll
mov
xor
cld
jo
sub
imul
dec
lret
mov
enter
lahf
and
push
mov
ljmp
lret
les
cli
mov
ss
xlat
in
dec
push
dec
test
xor
pop
add
mov
rcll
push
cltd
loope
mov
push
inc
lods
sbb
cli
cmpsb
mov
xchg
insb
pop
in
out
outsl
jae
push
jle
insl
popa
or
popa
rcll
inc
xor
ficoml
lods
push
add
pop
push
mov
mov
jne
sti
dec
and
neg
push
ds
push
adc
cmp
add
and
jmp
mov
and
push
scas
pop
sub
push
lcall
mov
mov
inc
pop
xor
pop
movsl
movsl
add
stos
inc
leave
sub
xor
test
insb
fdivrl
push
jns
sbb
inc
lret
bound
and
or
scas
and
pop
addr16
push
insl
push
add
pop
push
lahf
jae
or
fadds
jp
sbb
ficoml
mov
shlb
mov
inc
cmpl
xchg
sti
jg
movsb
arpl
xor
fistps
xor
mov
into
outsl
push
and
fwait
lods
repz
fwait
imul
ds
or
jb
sbb
push
int
mov
inc
or
xchg
pushl
out
pop
sub
pushw
test
insb
mov
dec
mov
mov
int3
cmpl
ds
lret
ret
movsb
fists
arpl
je
jp
ret
mov
sahf
das
popf
call
inc
fwait
popa
push
adc
cmpsb
sub
cmp
shrl
bound
cmpsb
jge
test
mov
pop
pop
lea
jo
or
mov
aam
xchg
inc
inc
jecxz
inc
lahf
andl
std
sti
mov
aas
int3
add
aaa
or
call
jmp
jecxz
mov
gs
call
mov
adc
fbld
aas
pop
and
inc
jb
jp
in
jns
mov
fisttpll
cmc
and
mov
jmp
add
cltd
xor
mov
xor
fwait
nop
inc
mov
xor
ja
fldz
scas
fnstcw
aad
int
aam
rorb
ds
cwtl
mov
push
subps
inc
sar
lods
dec
push
sub
lret
sub
sub
cmpsl
push
aam
add
sbb
lcall
popf
cmpsl
xor
push
mov
jb
or
sbb
xchg
sbb
sbb
inc
test
xor
inc
int
mov
call
mov
pop
test
add
xchg
outsb
and
sub
push
fsubs
jmp
jmp
addr16
cmp
jp
adc
iret
mov
xchg
lock
jmp
xchg
add
push
push
hlt
or
sahf
xor
xor
add
cwtl
movb
pop
cs
sti
pop
xchg
mov
xor
inc
xchg
push
arpl
pop
jp
push
imul
pop
les
lods
jo
cli
pop
sub
icebp
jae
mull
mov
xlat
jb
andb
dec
xor
dec
and
or
jae
push
sub
cmp
jne
cmp
inc
lock
xchg
mov
jg
ljmp
loop
je
pop
mov
lock
mov
and
cmp
push
xchg
orl
cmp
and
sti
pop
cmpsl
mov
dec
cld
mov
mov
mov
movsb
in
int3
cld
loopne
dec
adc
adc
sbbl
push
fistpll
jl
jge
mov
mov
sbb
jnp
jns
jmp
lret
mov
xor
sbb
fwait
and
adc
jns
js
lds
add
mov
mov
aad
sub
sbb
pop
xchg
inc
adc
jge
bound
dec
fsubrl
testl
adcl
adc
and
jl
adc
aaa
movsb
mov
filds
or
sub
mov
aad
add
imul
lock
add
data16
les
les
xchg
enter
in
cltd
je
mov
mov
pop
jne
cmpsb
pop
adc
or
or
jbe
repz
cs
je
cli
or
fs
push
xor
pusha
les
ja
into
daa
sub
mov
ret
jb
scas
cmc
mov
mov
mov
out
xor
sbb
in
les
pop
push
sbb
pop
adc
insl
adc
push
sbbl
jb
add
mov
sbb
cmp
push
loop
jb
les
insl
add
nop
jb
inc
and
daa
xchg
lods
call
pop
xlat
xchg
nop
movmskps
xchg
rolb
cmp
or
pop
sbb
sahf
daa
fistpl
jae
pop
push
or
jno
daa
and
loope
sbb
popa
and
push
push
cs
dec
pop
ss
cli
out
pop
fucom
mov
shll
xchg
push
sbb
xlat
sub
add
jg
cld
mov
cmp
mov
scas
sbb
inc
lds
inc
dec
xchg
inc
pop
scas
mov
lret
dec
cmp
jnp
dec
jae
and
jns
cld
mov
movsl
insb
xchg
push
imul
inc
ljmp
outsl
daa
aam
fnstcw
into
xchg
pop
call
aad
out
mov
ror
daa
xchg
mov
mov
sbb
add
test
in
fbld
fdivrp
jb
jle
ret
ljmp
inc
out
outsb
xchg
icebp
out
testl
xchg
pop
add
cwtl
and
jae
sti
aas
imul
imul
popf
insb
xchg
cmpb
pop
cmp
fs
sbb
sahf
jmp
add
mov
cmp
sub
push
in
jge
mov
jbe
cmp
xor
sahf
cwtl
push
or
mov
xchg
push
push
push
lcall
jge
inc
pop
mov
mov
sub
movsb
cmp
jb
xchg
mov
adc
sbb
imul
push
mov
stc
dec
pop
iret
cmp
jnp
jno
lcall
cmpsb
cmp
aaa
mov
dec
sub
cmp
mov
icebp
pop
or
loopne
incl
mov
xchg
sarb
push
into
aaa
or
ret
or
pushf
ficompl
aad
stc
pop
or
shlb
push
lret
adc
mov
xor
cmp
mov
aas
jle
pop
sbb
or
pop
mov
jge
pusha
inc
rclb
sbb
decl
or
and
lods
sub
xchg
cmp
mov
inc
mov
stos
mov
movsb
xlat
inc
xchg
addl
jb
pop
inc
and
push
lret
in
in
push
cmp
push
sbb
xchg
mov
stos
pop
jecxz
inc
dec
jae
in
push
das
jle
add
pop
inc
push
mov
rcrl
push
cmpsb
insl
add
test
pop
xlat
pop
jno
mov
cli
lods
mov
or
movsl
fs
lds
cmpsb
xchg
std
xchg
sub
aad
scas
push
add
jne
adc
enter
jnp
repnz
cmp
fst
sti
je
pushf
daa
or
add
test
add
inc
push
mov
cmpsb
dec
out
repz
fwait
test
jmp
es
lds
rcl
movsl
and
sti
cmp
cltd
xchg
pop
iret
and
insb
ss
movsb
pushf
adc
add
and
jo
mov
scas
in
sub
ja
pop
mov
rclb
sub
ret
in
psrld
sbbb
mov
jmp
dec
nop
sub
push
dec
adc
or
sbb
or
rcll
shrl
out
jmp
add
push
in
fistpll
jp
dec
pop
imul
jns
xor
jl
ss
mov
out
rcr
mov
mov
repnz
pop
cmp
cmp
push
outsb
cmpsl
test
dec
cmpsl
xchg
add
sub
fcmove
mov
call
pop
sbb
add
mov
jb
andl
add
add
push
scas
bound
jae
mov
roll
ret
je
pop
fcmovne
inc
xor
dec
mov
xor
xor
repnz
pop
repnz
mov
lret
mov
call
dec
sahf
adc
or
clc
aaa
iret
incb
data16
cmp
mov
int
cmpsb
pop
imul
aad
or
inc
mov
stc
test
add
movsl
shlb
std
subb
push
stos
stc
into
mov
scas
mov
lea
mov
das
and
imul
jne
mov
mov
divb
pop
jno
jnp
addb
cmpsb
sub
mov
lcall
cmc
xchg
push
push
movsb
push
fidivrs
popf
inc
add
pop
xchg
inc
push
dec
cltd
dec
mov
dec
out
cwtl
mov
mov
loope
xchg
mov
xchg
add
fnstenv
add
push
lret
dec
fnsave
std
rcl
popf
jg
inc
ret
cmp
jmp
push
int
dec
mov
inc
or
sti
mov
xchg
mov
mov
sbb
xchg
cmc
call
mov
xchg
dec
jmp
mov
xchg
mov
psrlq
push
sbb
inc
jp
es
inc
sbb
jne
mov
fidivs
xor
insb
stos
xchg
push
in
adc
or
add
out
push
inc
xlat
sub
jo
mov
mov
xchg
iret
mov
in
cmc
and
xor
xchg
outsl
gs
sub
inc
mov
movsb
mov
xor
lea
cmpb
nop
dec
xor
fidivl
subb
sahf
stos
xorl
jo
mov
iret
mov
insb
xchg
shll
inc
pusha
mov
rolb
inc
stos
dec
ret
inc
add
test
adc
sar
xchg
fwait
mul
aas
jb
test
jecxz
mov
jmp
push
mov
and
scas
mov
or
jl
add
add
popf
xor
inc
mov
mov
push
dec
pop
call
pop
sbb
insb
push
lods
adc
clc
cmp
outsb
xor
mov
scas
outsl
imul
sahf
and
test
nop
push
faddl
mov
lock
jl
in
mov
cmp
stos
scas
stc
mov
les
and
mov
repz
xor
mov
out
push
sub
scas
and
jl
xchg
sti
popf
movsl
rclb
mov
cld
ret
xor
loop
int
test
andb
push
mov
or
ljmp
sbb
or
pop
popa
adc
pop
push
popa
aas
add
testl
mov
mov
sbb
jb
push
pop
bswap
sbb
outsb
xchg
mov
cltd
mov
shr
jbe
xchg
adc
ja
fisubrl
cmpsb
les
movsl
or
or
mov
xor
add
jge
push
int3
push
cltd
push
mov
xor
sbb
pop
scas
pop
stos
stc
addl
outsl
push
mov
repz
pop
movsb
out
jp
cmp
cmc
outsb
hlt
int
outsb
cmp
fisttpl
std
popa
pop
push
mov
shrb
jb
out
dec
enter
or
or
fiadds
rcrl
add
inc
ret
inc
cs
loopne
or
clc
add
jb
adc
aad
or
mov
sbb
test
jp
popf
loope
mov
adc
pop
vcvtsi2ssl
cwtl
outsl
ret
inc
sub
cmpsl
xchg
jnp
mov
xchg
or
inc
fstpl
mov
mov
js
lcall
push
cld
cmpsb
cvttps2pi
or
lds
cwtl
ret
cmpsl
andl
xchg
pop
fwait
test
stos
adcb
leave
out
and
cmpsl
xchg
hlt
sbb
mov
jge
stc
lock
scas
test
std
cld
sarb
test
adc
sarl
pop
xor
dec
sbb
sbb
dec
lcall
loop
or
aas
push
outsl
sub
inc
icebp
mov
jg
sar
loop
shlb
pushf
outsl
andnps
stc
and
jb
sub
pushf
mov
scas
mov
daa
stc
inc
xchg
cld
push
xor
call
fs
gs
stos
cltd
scas
sub
mov
push
and
sub
xchg
int3
mov
mov
stos
repnz
movsl
pop
sub
js
sbb
enter
mov
sbb
repnz
pop
movsl
pop
xchg
stc
fcoml
or
pop
cs
rorb
aas
mov
sbb
push
frstor
xchg
mov
ret
sub
mov
cmp
jns
mov
pop
popa
mull
in
and
push
scas
clc
cmp
pusha
sub
loope
jns
test
mov
pop
bound
leave
loop
cmp
jl
dec
fisubs
daa
jle
popa
out
aaa
movsb
movsl
xchg
stos
jne
mov
lods
cli
fwait
lds
sarb
sbb
idiv
or
lods
adc
ficoml
xlat
mov
mov
dec
arpl
jp
mov
add
push
std
pusha
add
fcoms
call
sub
mov
and
test
addb
out
push
fdivs
mov
add
mov
cmpsb
cmp
cmp
pusha
sbb
fnstenv
cmp
bound
xchg
push
pop
jg
sub
enter
test
sbb
call
push
mov
and
mov
subl
mov
mov
sbb
adc
xchg
fcmovnbe
lea
add
cmp
push
sub
mov
or
subl
fdivrs
fbstp
pusha
popa
lods
mov
xchg
jmp
test
mov
aas
mov
sti
clc
ret
into
pusha
ja
push
in
mov
push
xchg
pushf
mov
outsb
push
dec
js
inc
push
jnp
ficoms
hlt
jns
inc
or
pop
add
out
sbb
insb
movsl
sbb
jle
insb
insl
out
pop
xchg
xchg
hlt
dec
jle
jae
pop
or
aas
test
pop
dec
bound
push
adc
or
pop
hlt
mov
sbb
cs
sub
xor
cld
mov
or
add
cmpsl
dec
mov
shl
lret
cmp
push
jne
dec
sbb
movsl
cwtl
out
jae
and
out
mov
clc
cs
movsl
jge
jo
adc
int
bound
sub
xor
test
cs
in
repz
dec
rorl
lds
pop
mov
imul
push
test
mov
jl
aaa
out
and
in
mov
cmp
jmp
push
inc
inc
icebp
into
cmp
pushf
test
push
out
cmp
data16
and
shlb
mov
pop
and
or
dec
pop
into
and
sub
push
scas
dec
scas
ds
jno
outsb
sti
hlt
arpl
mov
adc
jne
test
jno
xchg
jbe
rcll
icebp
test
nop
ja
repnz
jg
push
add
icebp
xor
and
jae
ret
dec
stos
in
jae
dec
mov
inc
cltd
mov
stos
mov
sbb
mov
inc
scas
mov
jl
inc
sub
fisubrl
repnz
mov
cmp
adc
push
cs
jo
xor
fistl
pop
loop
xchg
and
enter
xor
jmp
frstor
mov
or
std
sub
push
scas
js
push
xchg
jp
inc
sti
sbb
add
cmc
out
dec
rorl
mov
vpmaddwd
mov
sbb
clc
and
fcomps
inc
and
cmp
scas
xchg
sub
sbb
push
or
repz
popf
jg
dec
jecxz
std
sub
cmp
movsb
xchg
xchg
pop
push
repnz
inc
sub
xchg
pusha
clc
mov
xor
popa
andb
pusha
bound
push
jge
out
dec
gs
cmpsl
adc
mov
cmp
aad
push
adc
xor
mov
xchg
outsl
push
cmp
adc
mov
hlt
ss
fidivl
and
lds
push
jg
ret
and
ja
pushf
in
jp
adcb
insl
int
sub
shl
and
ret
push
outsb
mov
into
push
ljmp
mov
mov
sbb
mov
fwait
dec
int3
or
and
bound
loop
pop
loopne
outsb
push
adc
xor
sbb
fcoms
or
jne
sbb
inc
arpl
test
push
ljmp
and
ds
hlt
sbb
xor
inc
xor
aas
mov
aam
es
das
addr16
popa
and
fistps
fistps
icebp
mov
daa
or
xchg
cmpsb
aaa
ljmp
insb
mov
mov
dec
push
sub
rclb
push
mov
push
lcall
inc
ds
push
jae
push
testl
xor
jmp
adc
cmp
lret
enter
rorl
adc
mov
xchg
xchg
stos
cltd
dec
push
fldenv
pop
mov
roll
pop
rorl
pop
loop
mov
leave
inc
insl
jns
leave
in
jno
or
mov
adc
fwait
mov
lea
pop
lcall
mov
cmp
fsts
scas
inc
push
stos
xchg
dec
lret
imul
xorb
xor
mov
jp
out
imul
js
lret
iret
test
cli
and
mov
xchg
aas
pop
sub
aaa
xor
fisubrs
adc
mov
and
add
enter
push
clc
pop
lcall
addb
popa
add
mov
in
ret
inc
mov
mov
repz
das
pop
in
pushf
dec
aas
aaa
enter
out
xor
enter
add
mov
ds
dec
cmp
inc
inc
and
cmp
inc
leave
or
fdivl
mov
mov
ret
mov
incl
inc
into
mov
aas
cmp
mov
sub
sbb
ror
mul
out
and
out
sbb
cmc
clc
in
sti
les
push
sbbl
fst
mov
adc
dec
std
adc
mov
les
cmc
data16
cwtl
add
mov
into
pusha
lods
and
push
into
jecxz
sbb
push
sbb
adc
or
inc
mov
jmp
das
xor
dec
std
inc
ja
xor
cmp
xchg
shrl
cs
lods
inc
push
inc
dec
jb
mov
pusha
or
inc
pop
sbb
outsl
xor
dec
jl
adc
ss
cmp
push
fisubs
cwtl
insb
test
hlt
inc
dec
lods
or
jg
sbb
jg
mov
not
push
clc
addr16
mov
lods
stos
sub
sub
jg
dec
fbld
adc
xor
stos
and
xchg
shl
das
in
sub
push
insb
lret
xor
cmp
fnstsw
cli
push
int
add
xor
fldenv
movsl
in
xorl
dec
repz
sahf
dec
lods
inc
dec
shll
nop
idivl
jmp
jg
shl
sbbl
popa
pop
insb
jo
lahf
cmp
mov
pop
lcall
test
mov
jns
repz
nop
out
inc
int3
loope
lcall
orb
outsl
xlat
shl
jns
call
std
das
mov
jmp
lock
stos
sub
cmp
into
jae
stos
cmp
stos
ficoms
jl
in
lds
loopew
js
lock
aaa
mov
sar
sbb
clc
adc
pop
clc
in
mov
and
xchg
aam
leave
sarb
mov
pop
dec
pop
fwait
jl
add
cmpsb
jb
lahf
jge
cmpsl
iret
jne
push
das
mov
inc
mov
stc
cmc
cmp
dec
loop
add
in
or
push
cltd
je
out
fcmovnb
adc
add
in
mov
sub
sbb
ljmp
xchg
mov
sub
lret
xor
jne
inc
test
cltd
outsl
aas
inc
daa
aad
cmpsb
jmp
push
nop
lahf
outsb
xchg
gs
loopne
outsl
int
in
in
insl
xchg
inc
mov
jp,pn
sub
sbb
and
pop
push
mov
jbe
in
cmp
int
pushf
push
mov
add
sbb
jns
xor
xchg
in
jne
add
mov
scas
pusha
push
cs
dec
movsl
jp
pop
cltd
aaa
data16
lcall
mov
xchg
test
not
mov
jae
sar
dec
insb
mov
stos
out
jge
ss
subb
xchg
dec
pop
dec
insb
cmp
cmp
lret
clc
xor
jg
mov
pushf
daa
dec
mov
ja
mov
sbb
pop
pop
ret
jl
lods
xchg
adc
jae
cld
insl
das
push
xchg
add
sbb
cmp
cmc
dec
lock
mov
mov
jne
push
out
data16
lcall
xchg
and
cmp
into
inc
push
sbb
pop
push
jle
out
pop
adc
push
ret
add
jecxz
mov
rolb
test
leave
add
jo
jecxz
jp
inc
clc
aaa
loop
pushf
push
xor
inc
cmpsb
xchg
cmpsb
loop
and
in
enter
aad
add
shlb
dec
mov
leave
iret
cmp
rol
sahf
mul
mov
adc
sbb
inc
and
cmp
pop
dec
mov
xchg
movsb
xor
out
dec
xchg
lret
mov
fs
or
adc
cmp
shl
lea
jmp
popf
sub
pop
jo
movsb
adc
jle
ss
ds
cltd
xchg
popa
jb
inc
mov
push
cmc
lods
gs
push
sahf
mov
and
or
cmpsb
xchg
sbbl
and
std
cmpsb
pop
push
push
dec
in
fidivs
div
in
lock
push
jo
push
shll
jecxz
jb
es
repnz
pop
movsbl
lods
nop
ljmp
mov
fisubs
lds
inc
sbb
xchg
xor
je
nop
adc
xchg
imul
jecxz
adc
cmp
aas
mov
dec
dec
sbb
mov
cmpsl
push
mov
push
cmp
out
in
sub
inc
dec
fwait
cmp
xchg
inc
mov
jns
xor
add
call
pop
fs
pushf
or
mov
jmp
mov
xchg
or
add
les
pop
adc
std
xor
dec
movsb
push
xchg
out
adc
into
cwtl
jns
ds
xorb
mov
inc
add
mov
dec
outsb
mov
ficompl
jno
xchg
outsb
mov
and
imul
fsubrl
or
xor
int3
jle
pop
xor
jmp
lret
xor
mov
sub
adc
lret
xchg
pop
push
cmp
xchg
faddl
sbbb
stos
jnp
jb
or
jmp
and
mov
xor
gs
mov
sahf
scas
xchg
add
lret
mov
or
xchg
xchg
iret
sub
mov
cli
mov
out
int
mov
pop
push
add
pushf
out
cmp
push
fstl
adc
negb
lods
popl
fucomip
pushf
xchg
in
xor
test
mov
js
cld
jmp
daa
mov
pop
jo
leave
adcl
xor
imul
cli
sbb
sbb
rcrl
xor
sbb
fs
mov
repz
repz
imul
xchg
sbb
enter
pop
jp
or
mov
fbstp
rorb
lcall
pop
sbb
or
jnp
jge
repz
pop
and
out
inc
pop
add
fimull
fs
test
jo
in
cmpb
lea
pop
jnp
icebp
or
xchg
cmp
mov
or
sbb
xor
imul
xchg
mov
cmp
out
push
je
jno
xchg
cltd
nop
sbb
js
xlat
mov
addl
out
sub
adc
enter
js
add
fcmovbe
fisubl
mov
sbb
mov
aam
movsb
jbe
jmp
test
mov
das
mov
loope
xor
popf
xor
sub
mov
and
popf
jo
fdivr
add
ror
mov
shlb
push
sbb
inc
sbb
es
ss
jb
add
sub
jecxz
jne
jge
in
adc
lock
jbe
and
push
push
cmpb
in
mov
test
mov
lahf
or
or
sbb
in
xlat
out
loope
push
orl
and
sahf
cltd
jmp
mov
mov
mulb
push
inc
mov
outsl
call
call
rclb
pop
push
inc
mov
movsb
icebp
jnp
mov
mov
push
mov
iret
fistpl
add
aaa
xor
repz
cmp
or
popf
loopne
and
push
and
aaa
or
in
movsl
js
movsb
pop
pop
shll
stos
and
in
pop
dec
sahf
jne
jne
jno
sbb
sarl
jb
xchg
scas
js
out
sub
out
in
lret
lahf
scas
pop
xchg
mov
mov
xor
cwtl
dec
mov
or
xor
ss
mov
xor
cmpl
ret
push
lods
aam
sub
push
jle
lcall
mov
sub
dec
lret
xor
cwtl
add
and
jmp
jg
inc
or
lea
test
cwtl
cwtl
mov
xchg
sarl
dec
mov
and
push
sbb
cs
xor
stc
and
shl
mov
je
stc
xor
pop
or
aam
arpl
sbb
pop
push
adc
adc
outsl
dec
repz
inc
and
pop
inc
gs
addr16
and
in
out
je
mov
inc
inc
inc
test
xor
mov
jmp
mov
pop
jno
add
sbb
and
negb
mov
pop
shll
cmpsl
mov
jge
lods
inc
sub
rolb
xchg
mov
push
loope
int
je
xchg
xor
stos
stc
jb
inc
sbb
gs
mov
sbb
loope
adc
cmp
das
jae
maxps
sti
adc
mov
xlat
cmp
jns
add
lods
or
cmpsl
jns
lods
add
sbb
dec
in
xchg
mov
into
sti
leave
mov
sbb
iret
push
push
add
lahf
movsl
or
int
cmpsb
pop
out
pop
dec
fldl
adc
lea
sti
jge
sahf
push
mov
imulb
imul
push
jne
outsl
shl
lods
imul
jne
and
mov
fwait
dec
fsubs
mov
push
and
stos
and
inc
pop
push
xchg
xchg
xchg
sbb
rcrl
test
xor
push
and
mov
adc
insb
mov
ja
ja
jae
mov
jecxz
mov
mov
data16
popa
jg
int
sahf
jne
push
mov
dec
xchg
mov
and
cmp
fwait
push
scas
fsubrl
or
mov
cmc
pop
sbb
scas
sbb
lods
xor
ja
fs
imul
mov
xlat
xchg
stc
mov
testb
pop
pop
lcall
hlt
cs
inc
dec
sub
aam
cwtl
and
fcoms
jmp
out
mov
adc
mov
sbb
movsb
pop
mov
mov
jnp
psllq
scas
add
or
mov
icebp
gs
sbb
mov
nop
push
xchg
ret
sub
outsb
mov
and
mov
aas
jl
push
sbb
notb
adc
test
push
sbb
aaa
push
adc
cwtl
cltd
ja
jmp
adc
iret
filds
fidivl
js
leave
dec
push
pop
cmpsl
aad
mov
lret
inc
or
mov
in
xchg
inc
cs
stos
jg
loop
pop
stc
pop
shlb
inc
ja
inc
push
pop
mov
pop
lcall
fisubl
sub
out
mov
push
movsb
dec
inc
dec
mov
notl
push
jnp
push
iret
inc
mov
addl
and
xchg
es
xor
in
push
lret
dec
out
push
xchg
cmp
pop
stos
sbb
xchg
cs
adc
add
ffreep
test
pop
scas
insl
aad
pop
test
rorl
cmp
push
pusha
sub
aad
cmpsl
jecxz
cld
push
inc
mov
loop
loopw
test
mov
rcrl
jo
addl
enter
lret
and
inc
jle
mov
dec
adc
pop
sarl
aad
or
cwtl
adc
ret
pop
xor
aam
mov
mov
cmp
loopne
test
pushf
lods
xor
xchg
sbb
add
stos
stos
adc
xor
hlt
sub
pop
test
ljmp
fwait
ss
mov
xchg
cmp
xlat
or
adc
lret
sub
leave
hlt
mul
jmp
push
or
mov
addb
cld
mov
fcmovnbe
movsb
stos
test
mov
inc
shll
or
mov
dec
loop
xchg
fnsave
fcmovb
lahf
adc
data16
js
ds
inc
orl
inc
hlt
sar
pop
adc
daa
aam
int3
cmp
pusha
into
inc
cmpsl
cmpsb
cld
xor
xor
in
fstps
mov
xchg
cld
and
outsb
xchg
fsqrt
cmp
mov
mov
insl
mov
pop
dec
sub
repz
je
dec
sub
and
push
jae
cld
out
sbb
out
mov
sbb
data16
movsb
out
dec
mov
jo
add
shrb
mov
push
nop
nop
rclb
divl
mov
inc
pop
xor
je
enter
xorl
jle
pop
call
les
lret
dec
int
jecxz
pop
pop
mov
pop
push
call
clc
xor
nop
adcl
or
cli
repz
hlt
xlat
pop
xchg
aam
inc
leave
sub
xchg
xchg
sti
fidivl
insl
xchg
aaa
add
rcrl
jo
addr16
mov
in
fwait
jecxz
into
adc
test
jp
test
bound
pop
mov
cli
dec
pop
shlb
xor
dec
inc
add
movsl
scas
add
and
dec
jp
orb
in
into
cmp
shrb
inc
push
es
mov
cwtl
out
xchg
fisubrl
pop
sub
mov
es
inc
pop
aad
sahf
pop
jbe
fldcw
inc
rcll
pop
pop
out
pop
xor
out
jne
mov
jae
icebp
inc
push
daa
sbb
sbb
rcrl
mov
mov
dec
stc
outsl
dec
mov
pop
add
lods
cmpsl
mov
dec
and
sti
cld
repz
sbb
fidivrs
sbb
add
mov
out
adc
sbb
test
bound
push
and
or
and
movl
ljmp
xchg
mov
out
aas
iret
loopne
popa
vpcmpgtb
mov
bound
mov
jno
and
mov
in
ret
clc
pop
arpl
scas
jmp
fildl
lea
xchg
lahf
xchg
addl
or
fdiv
mov
out
ss
fistps
sub
dec
into
je
fwait
xchg
jp
fstpt
cltd
push
shld
clc
xlat
jge
xor
push
stos
cmp
les
or
fnstenv
dec
jle
into
dec
mov
jbe
lods
inc
shlb
push
push
imul
test
jge
sbb
and
mov
mov
sarl
push
jnp
test
xor
incb
repz
cli
dec
iret
roll
xor
pop
mov
xchg
fwait
decl
xlat
dec
push
mov
mov
stos
clc
pop
inc
jge
add
sbb
mov
scas
aad
ss
mov
cld
out
sbb
jnp
cmp
incb
mov
dec
mov
enter
test
insb
popf
xor
cmc
test
add
jge
aad
nop
sti
cmc
pop
iret
mov
pusha
insl
insl
aam
loopne
jno
pushf
lock
ss
dec
call
inc
pinsrw
mov
pusha
xchg
xor
stos
sbb
cmpsl
sub
rorl
bound
cwtl
mov
frstor
pop
js
aam
push
aam
or
mov
fmull
or
jb
test
mov
int
rolb
cli
xchg
mov
dec
shlb
test
imul
push
ljmp
or
jmp
xlat
dec
mov
mov
mov
cmpb
mov
dec
cs
std
pop
add
je
add
push
mov
out
nop
enter
pop
aaa
mov
adc
cmp
jmp
subb
inc
dec
pop
shlb
outsl
push
nop
loope
jmp
pop
mov
adc
aaa
sbb
adc
iret
bound
fisttpl
fs
mov
pop
and
enter
mov
in
pop
mov
hlt
mov
mov
shlb
icebp
mov
gs
arpl
int3
xchg
xchg
sbb
push
pop
imul
aas
loopne
clc
fnop
addr16
jmp
das
insb
lcall
mov
xchg
sub
imul
nop
jl
in
and
mov
xor
fstpt
out
or
inc
cltd
fidivrl
jnp
xor
dec
enter
jl
mov
cmp
inc
adc
sbb
xchg
and
adc
jg
push
lcall
imul
mov
pcmpeqw
push
sub
jno
andl
int3
xor
decb
ret
pop
test
dec
ljmp
sub
fst
clc
sub
inc
xor
cmpb
mov
cld
lret
jbe
out
add
dec
int
add
mov
mov
stc
cld
ds
mov
insl
push
adc
fs
cmp
mov
sub
jne
ljmp
jno
popa
xchg
test
pop
mov
cmpsb
enter
lahf
testl
inc
xor
insb
sbb
fs
jae
inc
mov
fistl
xlat
fs
arpl
in
imul
out
sub
popa
mov
adc
hlt
bound
shr
out
push
mov
fs
icebp
or
push
pop
clc
push
pop
jns
outsl
test
sbb
mov
test
icebp
es
cs
in
mov
rol
out
outsb
scas
mov
xor
cli
out
movsl
pushf
or
imul
push
les
pop
sbb
int
pop
mov
inc
out
lret
repz
mov
mov
movsb
push
stos
imul
repz
mov
adc
mov
sbb
push
and
pop
sub
fimull
add
jb
jecxz
inc
pusha
cmp
or
dec
jo
sub
mov
repz
mov
sub
leave
inc
movsb
enter
popf
daa
sub
push
sbb
pop
loope
pop
je
mov
lahf
inc
mov
or
fsub
test
sub
nop
cmp
cld
rorb
jno
pop
mov
xchg
jmp
jns
pop
cmp
push
dec
sub
adc
xor
ja
inc
and
pop
out
add
ss
test
sub
gs
sub
or
adc
sahf
out
dec
js
adc
lahf
jnp
push
and
cwtl
int3
lods
stc
fmull
dec
xor
sub
or
xchg
xchg
in
lds
mov
push
push
xchg
pop
cmp
insl
sbb
adc
xchg
lahf
loope
xor
add
insl
repnz
fwait
sbb
dec
cmp
or
fistps
sahf
xor
adc
jmp
movsb
scas
les
push
aam
ficomps
push
shll
jae
rclb
fnsave
movb
ljmp
idivb
adc
or
push
shl
or
push
cmpsl
mov
ret
loop
sti
xchg
inc
dec
sbb
rcrb
xchg
sub
cmp
insb
add
iret
dec
popa
xchg
mov
jp
xchg
inc
rclb
mov
fs
repz
leave
aam
jo
cltd
jbe
dec
xlat
arpl
mov
cmpsb
push
mov
dec
ja
dec
mov
divb
cmp
dec
iret
sbb
icebp
and
test
or
jae
mov
fs
mov
out
lock
mov
icebp
imul
call
cmpsb
mov
jbe
mov
int3
ljmp
mov
xchg
mov
pop
xchg
push
pop
js
rorl
mull
mov
and
jmp
pop
lds
ljmp
fisttpll
jne
mov
fmul
xchg
and
and
in
movsl
push
add
pop
and
pop
dec
mov
and
mov
and
popf
fisubs
repnz
push
mov
pusha
and
add
das
je
lret
sbb
cwtl
add
into
add
inc
xchg
push
clc
jns
inc
pop
decb
pusha
sub
push
mov
cltd
jle
jl
cmp
xor
ljmp
int
insb
pop
cwtl
push
xchg
aad
dec
or
or
sub
mov
xlat
orl
add
xchg
push
xor
clc
test
mov
dec
and
jecxz
rcrb
add
hlt
push
nop
sbb
sub
out
fwait
test
ss
lods
pop
adc
xchg
notb
fucom
or
adc
sbb
dec
popf
mov
push
add
test
adc
mov
or
bound
jnp
orb
in
in
in
xchg
loopne
shll
xlat
int3
mov
mov
jp
aas
sbb
fs
sub
sbb
sub
jne
sarb
xor
xchg
test
inc
repnz
pop
cmp
sub
es
xchg
jo
push
xor
mov
xchg
cld
mov
cmp
jnp
mov
push
inc
leave
das
inc
mov
inc
lahf
filds
xlat
or
dec
mov
pop
cld
push
mov
pop
addr16
mov
jle
popf
push
sbb
lods
jge
or
mov
into
xlat
sysenter
inc
in
les
mov
and
nop
lret
cmp
jno
aaa
pop
sbb
xor
rcll
in
pop
jle
orb
data16
out
sub
fwait
xor
out
mov
xorb
fwait
imul
hlt
and
arpl
push
mov
in
fucomp
jno
adc
outsl
inc
fstpt
mov
loop
push
or
pop
loope
movsl
inc
outsl
adc
cmc
aas
jp
enter
pop
xchg
jp
dec
dec
int3
sbb
adc
loope
sbb
sbb
and
or
push
int
cmc
xlat
jp
jnp
sarl
test
inc
test
xorb
movsb
leave
mov
in
mov
das
cltd
ss
shll
pop
cwtl
pop
fsubl
pusha
or
xchg
out
mov
mov
and
push
mov
jecxz
fdivs
in
cmp
xchg
mov
cltd
mov
xchg
aad
pushf
pop
xor
in
call
bswap
mov
sbb
movl
push
aad
add
mov
mov
cmpl
or
sahf
and
js
jno
sub
and
push
jle
mov
xchg
movsb
xor
leave
sbbl
xchg
mov
inc
inc
mov
jl
cwtl
repz
les
inc
inc
inc
inc
aaa
fwait
js
cmp
movb
adc
pop
cmpsl
sub
adc
cli
std
ret
cmp
data16
notb
insl
jne
ds
xor
pop
xchg
rcrb
jne
cmp
fwait
push
xor
xchg
js
mov
xchg
pop
ficoms
lock
aam
nop
outsl
and
jecxz
gs
rclb
mov
cmpl
inc
movsb
xlat
mov
mov
outsb
jp
loopne
xchg
sbb
fcoms
cltd
jae
orl
xchg
mov
popa
push
fs
mov
dec
xor
dec
push
negl
push
xchg
jns
mov
lahf
dec
mov
push
mov
cmpsl
nop
daa
inc
push
or
sbb
xlat
inc
sub
mov
sub
push
lds
dec
dec
mov
pop
mov
pop
push
aam
mov
inc
xchg
mov
jae
push
push
loopw
xor
mov
push
cmp
mov
cmp
test
mov
pop
nop
fwait
lds
mov
dec
or
mov
fisubrl
sbb
add
popa
test
lods
cmp
and
pop
adc
and
jb
mov
shll
sub
fildl
pop
sahf
xor
std
mov
cmp
addr16
xchg
add
push
xchg
in
pusha
adc
jecxz
push
xor
xor
int3
mov
repz
fs
int3
adc
sub
mov
jge
arpl
or
in
pop
cmp
push
dec
xchg
les
call
test
inc
cld
sti
in
test
aad
sub
imul
mov
hlt
mov
push
cmpsl
mov
imul
in
dec
xchg
jmp
dec
jge
cmp
sbbl
out
jl
testl
xor
mov
or
mov
add
scas
add
sbb
lods
mov
sub
test
pop
js
aam
pop
mov
sub
cwtl
jne
ljmp
jnp
lods
jmp
add
popf
jne
stc
lcall
enter
and
xchg
pop
lock
pop
test
notl
mov
add
or
int3
push
push
nop
cmpsb
inc
sub
jb
das
loop
adc
sbb
loopne
mov
fwait
addr16
jecxz
shrl
fldt
and
pusha
enter
push
arpl
and
or
outsl
push
dec
or
pop
jbe
repz
mov
cmp
and
dec
mov
stc
xor
arpl
pop
arpl
dec
add
into
dec
pop
frstor
push
dec
push
je
sub
push
jg
loope
loope
daa
cmp
sbb
fwait
lahf
xchg
push
cmpsb
lret
mov
push
xor
cmp
xchg
loopne
xchg
cmpb
test
js
xor
or
jae
pop
ficoms
notl
jg
ljmp
add
es
cld
arpl
in
mov
fnstsw
or
aaa
pop
inc
in
out
test
test
and
scas
sti
outsl
adc
lods
xor
jnp
pop
mov
xchg
aam
inc
mov
divl
adc
out
push
inc
shlb
pop
jge
adc
adc
lcall
lret
pop
in
sti
jns
and
aaa
dec
mov
or
subb
mov
int3
fcompl
loop
push
lret
sub
xchg
repz
int3
sub
imul
sub
lods
aad
and
push
pop
xor
sbb
mov
int3
lahf
adcb
test
mov
cmpsl
push
bound
pop
pusha
fcmovbe
insl
jp
sbb
xor
mov
daa
test
mov
insl
pop
sub
jp
and
mov
js
std
ljmp
movsl
outsb
out
mov
outsb
xchg
mov
adc
addb
and
cmp
pop
jl
push
jnp
in
pop
jno
jl
es
inc
push
sti
mov
mov
loopne
dec
pop
testl
mov
lods
movb
sub
cmp
out
sub
in
ja
mov
sub
mull
outsb
imul
add
ficoms
in
stos
out
add
aad
mov
add
push
xor
xor
xor
pop
push
dec
enter
enter
cltd
and
cmpsb
movsbl
pusha
jbe
mov
jbe
test
xchg
sub
aam
adc
repnz
dec
lock
sbb
sub
int3
push
and
aad
xchg
dec
inc
mov
pop
sbb
lds
dec
cmpsb
push
bound
jg
test
std
cmp
dec
and
xchg
adc
ficomps
sahf
mov
xchg
xchg
mov
sbb
jno
jnp
and
xchg
gs
jp
rorb
cmp
jo
pop
in
jl
icebp
cld
aas
fidivl
sbb
or
stos
and
push
lds
sbb
pop
jae
add
stos
data16
cmp
jns
fdivrl
fidivrs
pop
pop
repz
pop
loop
out
add
jmp
sub
xchg
insb
or
lea
cwtl
fildll
arpl
nop
jne
imul
xlat
sti
xchg
hlt
pop
xor
jne
iret
ret
xchg
hlt
into
inc
loopne
imul
adc
lahf
mov
repz
or
movsb
push
mov
test
in
lahf
je,pt
sub
inc
sub
and
pop
fldl
iret
pop
popf
xchg
loope
fdivrp
fnsave
js
les
cmp
out
push
xchg
mov
cmpl
test
mov
and
cmp
jmp
aaa
data16
mov
leave
and
and
data16
dec
jb
sub
xchg
mov
call
sbb
xor
and
jno
dec
or
test
cli
sbb
pop
ds
jb
rolb
fnsave
sub
in
pushf
sub
and
ja
popa
sub
scas
into
pop
bound
xchg
inc
ss
js
jmp
insl
aam
push
imul
mov
mov
mov
insb
out
daa
pop
xor
add
xor
lods
xor
push
lods
imul
push
pop
and
or
dec
cltd
jg,pt
cmp
outsl
jmp
sbb
test
push
out
jnp
fs
mov
adc
lods
cmp
lcall
pop
daa
hlt
add
js
gs
fstps
pop
bound
push
sbb
sarl
sbb
enter
nop
dec
dec
orl
lret
in
or
mov
sbb
mov
xor
pop
sub
inc
bound
cmp
jmp
jb
shll
push
inc
insl
mov
mov
mov
sbb
add
lds
xchg
nop
xchg
mov
sarb
jmp
pop
test
arpl
aaa
lcall
fnstsw
xchg
jp
and
sbb
pop
pop
mov
jmp
mov
dec
jb
lret
and
or
sbbl
push
sahf
repnz
xchg
jecxz
pop
repnz
aaa
scas
sub
and
adc
iret
pop
fistl
addr16
add
mov
and
or
dec
mov
outsb
out
in
pop
jne
gs
enter
mov
shrl
hlt
sub
xchg
jo
addb
pop
xchg
jge
out
stc
xchg
sbb
mov
packssdw
mov
mov
inc
push
and
ja
les
push
ds
xchg
cld
in
jne
lahf
push
mov
push
xchg
cmp
dec
jge
jae
inc
sub
iret
and
add
dec
scas
stos
inc
iret
repnz
lods
fisttpl
cld
test
imul
loopne
push
test
add
pop
mov
decl
and
dec
loopne
icebp
lods
xchg
add
mov
adc
lds
push
or
repnz
or
aaa
inc
push
inc
xchg
inc
cwtl
cwtl
call
add
js
adc
xlat
sbb
dec
xor
xchg
mov
mov
mov
fincstp
jg
mov
fs
lret
mov
mov
sbb
mov
or
add
sub
sbb
sahf
imul
mov
sbb
add
mov
popl
loop
xchg
inc
jae
cld
dec
dec
loopne
cltd
sbb
sbb
clc
rcrl
xor
es
dec
sahf
inc
dec
shrb
add
lret
xorb
shlb
imul
frstor
sbb
mov
push
in
movsl
jne
rorb
orl
push
inc
int3
mov
pop
int
scas
jo
filds
adc
into
xor
test
pop
or
adc
loope
mov
and
outsb
push
shrb
push
pop
sub
xchg
ret
adc
xchg
jmp
dec
pop
sbbb
and
dec
stc
lds
mov
lahf
int3
das
pusha
add
jno
jge
xchg
orl
mov
mov
insl
sub
test
add
fs
adc
cmpsb
les
pop
das
xchg
mov
mov
mov
or
clc
xchg
sub
or
sub
cmp
mov
pop
xor
mov
sbb
out
xor
jae
xor
call
xchg
js
jbe
sar
lcall
mov
mov
sub
xchg
ds
cli
out
adc
dec
push
push
mov
rcr
jns
xor
jno
out
jns
pop
inc
add
rcrb
jnp
inc
stc
push
inc
cmc
and
lock
xchg
inc
pop
mov
inc
fwait
clc
jle
fbstp
sbb
pop
arpl
hlt
nop
ds
push
push
mov
add
adc
insl
cs
inc
imul
mov
outsb
cli
adc
sarl
data16
jns
and
out
push
sub
xchg
fucom
incl
stos
lock
dec
cmp
inc
das
mov
dec
push
movsl
or
jge
dec
popa
jae
icebp
xor
iret
fiaddl
pop
sub
fwait
pop
into
popf
ficoms
sub
sub
mov
jle
sub
or
sub
ja
xchg
adc
xchg
dec
mov
mov
or
add
std
ljmp
cld
arpl
pop
xchg
data16
mov
jae
or
popf
std
lret
add
rcrl
pop
jne
out
fucomp
pop
ljmpw
adc
mov
std
push
in
push
fcomps
inc
aas
cltd
mov
mov
popf
lods
popf
sbb
out
pop
imul
sbb
lret
fs
ret
shrb
pop
movsb
sub
jnp
adcb
adcl
mov
pop
mov
out
inc
out
and
push
ja
das
adc
addr16
cmpsb
dec
pop
or
and
in
pop
orb
test
out
mov
and
fwait
or
mov
cwtl
in
cmp
xchg
pop
jbe
mov
les
pause
add
mov
jge
xor
mov
loope
lods
inc
mov
cmc
insb
pop
leave
sbb
repnz
insb
mov
sub
fs
or
aam
sahf
and
pmaddwd
push
cmp
pop
or
pusha
xor
inc
add
inc
sarl
adc
movsb
pop
adc
xor
fiaddl
jnp
shrb
loopne
in
shll
cmpsb
mov
push
dec
loopne
into
mov
loope
push
mov
sbb
in
mov
push
enter
out
stos
push
out
pop
jle
sub
psllw
shlb
pop
movsl
std
and
inc
dec
cmpl
jmp
cld
hlt
or
scas
jge
fldenv
sub
es
cli
neg
and
scas
dec
shlb
roll
inc
lea
mov
or
xlat
daa
stos
je
xor
xchg
mov
repnz
hlt
addr16
jns
jle
out
xchg
mov
sub
pop
jbe
out
rcrl
xchg
int3
dec
mov
test
ret
dec
or
push
dec
sub
ljmp
mov
das
dec
seta
fwait
push
popf
adc
sub
das
push
push
mov
xor
test
mov
mov
out
imul
dec
xlat
fldenv
or
fdiv
in
or
or
mov
call
jl
cmpsl
lods
cltd
pop
shll
sahf
loope
xor
ret
call
and
je
xchg
inc
xchg
cmpsl
cmp
fildll
into
mov
cmp
lret
inc
movsl
subl
push
test
dec
lods
mov
cwtl
xor
xchg
xor
sbb
pop
dec
fnstsw
xchg
movsb
add
bound
shrl
xchg
dec
cltd
int
stos
std
cmp
loopne
test
adc
subl
mov
mov
iret
cmpsl
lds
push
add
adc
jne
movsb
sub
es
fsubrl
push
adc
mov
cmpsl
insb
add
loopne
movsl
int
fwait
clc
jl
xor
mov
mov
jo
cmp
mov
push
fistl
movsl
js
pop
jns
sahf
mov
xor
andl
sbb
stc
inc
inc
lcall
mov
xchg
sbb
mov
or
xor
into
dec
mov
fwait
lret
mov
lret
aad
sub
push
mov
dec
cltd
dec
sub
int3
xchg
xor
pop
popa
int
lcall
ja
fisttpll
aad
and
inc
stos
mov
mov
rclb
mov
lods
fistpll
push
insb
adc
inc
scas
push
xor
imul
stos
aas
and
or
xchg
jge
lods
mov
inc
aaa
xorb
stos
and
xchg
fldenv
jnp
dec
jnp
dec
rclb
shrl
fsubs
bound
dec
aad
test
scas
sub
outsb
mov
cltd
daa
push
and
psubq
sub
xor
pop
mov
pop
jmp
fcoml
push
mov
fsubs
popf
lret
fimull
xchg
xor
add
bound
aad
add
sarl
call
lock
sbb
dec
jl
and
xor
imul
pop
and
push
mov
enter
aas
popa
sub
sub
add
cld
gs
out
mov
inc
mov
movsb
mov
cmpsb
xchg
xchg
rcrl
dec
and
pop
sahf
inc
push
jle
push
addb
cmpb
nop
adc
mov
mov
cli
fidivl
sbb
push
mov
and
xchg
andl
clc
sub
mov
jae
mov
mov
movsb
mov
jae
adc
mov
jl
inc
je
lret
idivl
pop
test
adc
push
push
xchg
repnz
xlat
mov
data16
shlb
hlt
xchg
sbb
xor
add
gs
out
push
xor
fstp
iret
mov
mov
cmpsb
cmp
mov
inc
dec
aam
add
push
mov
mov
push
out
setne
mov
pop
fadds
xchg
xchg
int
fstps
lcall
jnp
scas
es
icebp
jge
mov
js
xchg
lret
jno
shlb
xor
insb
mov
xor
cmp
into
dec
lret
jo
jbe
test
jmp
push
lahf
fcmovne
lahf
jle
movsb
sbb
sbb
fwait
mov
notb
cmpsb
and
ret
stos
or
dec
jp
jp
daa
or
jge
lds
scas
mov
notl
dec
xchg
push
and
lret
cmp
mov
loop
pop
lret
lret
popa
add
gs
bnd
movsb
xor
lods
cmp
mov
add
cmp
std
mov
adc
sarb
sbb
push
lock
mov
movl
in
or
and
out
sahf
stos
and
into
mov
inc
mov
ret
adc
mov
outsl
cs
mov
shl
mov
dec
int3
and
mov
repz
mov
imul
movsl
jl
cmp
push
scas
aaa
insb
sub
aam
sub
and
jns
sbb
out
push
iret
cmp
mov
push
mov
fidivrl
leave
cmp
das
jne
jmp
sbb
lahf
ret
jl
jmp
adcb
lods
cmp
out
mov
in
popf
add
insl
lods
mov
arpl
fstpt
xchg
repnz
pusha
sbb
faddp
lcall
dec
imulb
outsb
pushf
mov
test
mov
or
jg
pushf
mov
or
inc
mov
loope
push
pop
dec
mov
dec
cmp
mov
jecxz
jae
aad
out
push
lds
push
lahf
call
inc
fsubs
jg
cltd
push
lock
xor
fdivp
cmpsl
clc
mov
lret
insb
xor
iret
xlat
fiadds
imul
sbb
test
scas
dec
mov
je
test
mov
mov
mov
aad
inc
rolb
int
jg
int
mov
sub
and
mov
shll
and
repnz
mov
dec
and
cmp
mov
jae
push
and
mov
push
repz
std
js
sub
pcmpgtd
enter
mov
push
add
adc
jmp
mov
push
sbb
rcll
cmp
fdivrs
mov
xchg
lods
cmc
mov
mov
pop
ficoml
fdivl
jmp
adc
sbb
fs
cltd
ss
inc
add
dec
and
daa
ds
pop
daa
adc
outsb
and
cmp
ds
jnp
xchg
out
cld
mov
loop
stos
xor
loop
sbb
test
js
bound
cmp
pop
jge
scas
cmp
arpl
popf
lahf
popa
mov
dec
dec
jle
cmp
mov
lea
out
cmp
cmp
add
mov
insb
xor
jne
lds
in
dec
aaa
add
mov
push
adc
xchg
mov
lret
in
sub
ljmp
and
jnp
rcrb
cmc
rolb
jne
je
es
adc
pushw
add
inc
xor
imul
push
in
inc
push
xchg
bound
or
jmp
in
sub
fdivrs
inc
xor
cmpl
mov
jg
nop
cmpsb
adc
and
dec
sub
add
insl
cmp
inc
movsb
adc
mov
or
jnp
and
ficomps
push
std
inc
fidivs
mov
pop
cltd
add
repnz
or
shl
les
cmpsl
hlt
aaa
jecxz
dec
loope
dec
popf
fwait
add
mov
popf
mov
mov
pop
sbb
mov
pop
xchg
mov
outsl
mov
or
xchg
cltd
addr16
call
lcall
addr16
jle
sub
ret
loope
jmp
or
dec
dec
rorb
cmp
adc
and
jle
pusha
pop
jg
jge
push
inc
loope
add
loop
rcll
std
addr16
shr
mov
repnz
je
je
stos
js
cmp
ss
xchg
push
add
aas
inc
scas
je
mov
sub
jecxz
test
aas
ljmp
test
mov
and
sub
call
sbb
xchg
push
das
ret
lods
xor
das
xor
xor
push
out
adc
stos
jl
lods
xchg
jo
jb
mov
cmp
out
out
js
or
out
aaa
adc
pop
xchg
rclb
xchg
sbb
mov
lcall
mov
insb
fs
jmp
inc
sub
inc
or
notb
or
inc
in
mov
dec
cwtl
scas
inc
push
sar
jecxz
cwtl
mov
dec
xchg
fnstcw
aas
pop
js
mov
jb
add
jle
popa
dec
pop
xchg
and
cli
mov
fldt
sbb
movsl
mov
aam
repz
es
add
adcl
mov
loop
mov
mov
sbb
push
cltd
out
mov
roll
push
xchg
mov
xchg
xchg
inc
ds
mov
sub
clc
mov
rol
jnp
mov
fwait
lret
sbb
mov
clc
cmp
in
jae
popa
inc
fwait
mov
mov
mov
popf
push
xchg
and
loopne
scas
dec
lds
sahf
mov
dec
or
jb
ss
shlb
lret
ds
sbb
addl
cmpsl
fnstcw
outsl
ds
out
xor
or
outsb
scas
or
mov
bound
jmp
lods
mov
mov
inc
lods
lret
mov
scas
in
arpl
dec
sub
sbb
push
adc
sbb
add
dec
sbb
cltd
pop
jecxz
pop
inc
jae
inc
int3
xchg
xchg
adc
icebp
xchg
fists
cmp
sarb
rcr
dec
xchg
out
sbb
lret
hlt
xor
inc
mov
cmp
test
adcl
push
lret
outsb
jo
shrb
idivb
imul
jp
popf
xchg
and
or
mov
and
mov
fwait
adc
push
jbe
xor
pop
inc
gs
inc
movsl
stos
xor
aam
scas
add
sbb
int
push
mov
mov
ror
imul
push
pop
jmp
mov
push
xor
xlat
mov
mov
fld
and
pop
pop
jg
hlt
or
bound
add
pop
iret
cld
sti
cmp
test
sbb
xchg
sub
mov
hlt
adc
inc
adc
andb
push
adc
divb
inc
jmp
cmp
cmpsl
sub
fists
addr16
out
fcomip
ret
clc
cmp
dec
aas
out
hlt
int
cmp
rcr
arpl
xor
cmp
shr
push
lea
jle
pop
mov
mov
fdivrl
or
xor
dec
ffreep
sub
mov
push
int3
pop
jmp
inc
inc
sub
push
icebp
xchg
es
mov
in
pop
xor
mov
hlt
and
sub
inc
es
jp
sbb
add
aad
popa
ljmp
jecxz
or
repnz
inc
mov
out
loope
cmp
jno
mov
sub
cli
dec
inc
enter
cmp
cmpsl
inc
xchg
pop
sub
inc
subl
aam
rorb
push
lods
leave
add
ds
cmpsl
cmp
inc
mov
push
dec
or
ljmp
into
pop
imul
mov
movsl
call
pop
xchg
popf
movb
mov
out
cld
xchg
inc
icebp
out
subl
adc
jb
aad
inc
es
mov
mov
imul
or
gs
test
iret
pop
repnz
jp
push
int
inc
mov
repnz
shrl
scas
add
test
scas
xor
pop
sbb
mov
test
xor
pop
jecxz
dec
icebp
pushf
push
mov
lds
pop
sbb
test
mov
sub
daa
pop
test
loope
fcmovbe
push
mov
adc
sbb
xchg
and
adc
push
cmp
fsubp
mov
daa
jnp
int3
xchg
push
mov
js
add
and
loop
push
or
add
pop
inc
shll
movsb
aaa
stc
push
das
jnp
xchg
fadds
adc
mov
jae
mov
xchg
in
lahf
push
icebp
jl
lods
adc
rdtsc
xor
mov
jle
sbb
mov
cmpsl
mov
sahf
inc
jecxz
pop
aaa
xchg
push
sub
loop
stos
lret
int
cmp
push
pop
outsl
xor
mov
inc
adc
enter
sub
ljmp
push
pop
cmc
fisubrl
push
pushf
call
lret
jne
or
jp
addr16
mov
sbb
jmp
or
sti
stc
jp
lret
pop
cmp
cli
xchg
popa
dec
push
roll
inc
and
not
pop
push
push
jecxz
and
adc
add
lds
imul
fcomps
cltd
clc
mov
gs
sahf
pop
pusha
or
inc
add
mov
aaa
ljmp
fldpi
fwait
push
xlat
xchg
inc
and
xor
xchg
cltd
xor
xchg
push
rorl
faddp
test
imul
cmp
rcrb
pop
insb
loope
aaa
xchg
cs
dec
hlt
movsl
scas
dec
mov
ds
inc
push
stos
inc
call
popl
jp
or
xlat
push
jecxz
mov
xchg
insb
jb
mov
xchg
jg
inc
and
mov
insl
mov
cmp
cs
mov
pop
insb
and
test
adc
testl
pushf
jbe
aad
inc
push
leave
pusha
mov
fucomi
cmp
xchg
pop
roll
adc
mov
lods
inc
loope
sbb
jmp
enter
int
fcompl
das
es
sbb
xchg
je
push
adc
xchg
cltd
xchg
add
mov
std
cmpsb
add
mov
push
jne
pushf
sbb
lds
inc
dec
cmp
xchg
cmp
test
adc
and
cmp
mov
ret
pop
xchg
jb
jb
in
add
add
add
inc
xchg
outsl
cs
dec
lea
aam
in
mov
xchg
hlt
cltd
pop
fnstenv
push
push
xor
mov
aad
aad
inc
dec
xor
arpl
sub
ret
xchg
lahf
mov
call
jnp
or
repnz
xor
dec
mov
xchg
lock
aas
xchg
out
xor
pop
mov
fwait
adc
not
and
addr16
push
mov
stc
lret
or
out
and
subl
dec
inc
inc
or
call
pop
test
lret
addb
popa
pusha
imul
inc
jb
sahf
loope
fsubrs
jmp
daa
sub
repnz
sarl
js
icebp
mov
jae
mov
dec
mov
pop
and
and
push
cmp
clc
add
cmc
adc
dec
xlat
sbb
in
icebp
adc
notl
inc
stos
stc
les
fmull
test
add
add
rorl
jno
lea
cmpl
out
imul
cmp
push
lahf
dec
fcomip
pop
push
pop
mov
stos
pop
rcll
xor
call
fdivp
mov
rcll
and
mov
dec
shl
ljmp
xchg
xor
mov
lock
adc
shr
enter
pop
int
cmp
lods
sub
out
pushf
mov
loopne
mov
rolb
hlt
mov
test
pop
or
mov
mov
sub
fsubrs
mov
mov
cmp
test
cld
imul
scas
test
pop
stc
cmp
or
pop
sub
icebp
into
or
lods
jmp
inc
rcr
add
xor
add
cld
cwtl
addr16
xchg
mov
fldl
xchg
or
and
dec
sbb
mov
mov
test
adc
fdiv
lock
popa
lahf
pop
insl
repnz
adc
adc
xor
sbb
jne
ficomps
and
into
pop
outsl
repz
out
mov
push
sub
jge
mov
fisubrl
mov
insl
pop
mov
push
mov
repnz
inc
xchg
cmp
dec
in
pusha
jne
in
jp
cmpl
cmp
pop
and
fmuls
xchg
mov
jmp
into
pop
mov
dec
mov
aas
or
jne
cmp
and
lret
mov
inc
dec
lret
push
nop
stc
subb
cmp
push
in
jmp
add
pop
mov
adc
test
jnp
dec
push
push
mov
or
ljmp
adc
sub
faddl
and
data16
dec
pop
mov
fists
jae
cld
sbb
insl
fucomip
pop
cmp
insb
push
loop
scas
inc
xchg
jg
inc
daa
push
push
jo
aaa
addr16
sub
push
ss
ror
imul
mov
pusha
loop
jp
mov
inc
xchg
movsl
mov
js
inc
sbb
pop
mov
insl
sub
enter
sbb
or
int3
xchg
pop
mov
adc
aaa
jne
push
rclb
dec
cwtl
daa
push
nop
sbb
fmuls
sbb
jns
ss
movb
and
mov
or
cs
fisubs
dec
cmp
sti
out
test
fdivrs
xor
mov
ret
sub
sar
push
cmp
xorb
pop
mov
mov
jmp
rcll
in
sbb
mov
repnz
lret
inc
or
loope
add
xor
daa
lea
inc
fs
fisttps
push
push
adc
aam
and
mov
or
leave
sub
nop
pop
scas
idivl
ja
ds
pop
inc
sub
cmp
cwtl
cltd
mov
inc
mov
or
divps
or
pop
jb
and
mov
arpl
in
stc
and
out
adc
adc
sbb
mul
jb
hlt
lock
or
cmpsb
daa
cmp
dec
push
add
arpl
mov
cmp
daa
scas
subl
lret
mov
jmp
pop
insl
scas
fsubl
addr16
scas
fmull
mov
mov
and
mov
repnz
es
std
fwait
aas
push
inc
and
in
adc
dec
sar
sbb
mov
sarl
cmp
mov
cmp
popf
pop
jno
shrb
push
outsb
fwait
mov
sub
das
es
pop
in
mov
inc
mov
cmp
inc
leave
xor
aas
test
sub
push
mov
dec
insb
cld
insb
inc
inc
shr
mov
aaa
mov
lret
mov
jb
and
cs
daa
inc
xor
add
xor
pushf
jmp
push
jb
dec
popa
and
pop
hlt
jnp
push
xlat
imul
aam
cld
mov
fdivrs
pop
mov
aaa
dec
dec
out
insb
sahf
jp
xchg
inc
mov
jmp
inc
cmp
inc
jge
stos
dec
cmpsl
jl
xor
gs
or
mov
adc
iret
cmp
inc
insb
cmpsl
and
loop
sbb
jb
imul
mov
dec
push
cs
int
mov
ljmp
xchg
lcall
shl
jno
and
not
mov
cmp
js
sub
out
loopne
add
cld
push
shll
mov
loop
stos
fsts
fisttpll
sbb
mov
ret
clc
inc
xor
test
fwait
xchg
in
jno
sbb
sbb
add
sbb
adc
aad
je
scas
pop
in
jge
fwait
mov
jno
cld
jecxz
mov
adcb
movsl
or
push
mov
shlb
jp
rcll
push
daa
out
xchg
add
cmp
push
sub
clc
mov
aam
sub
xchg
push
xor
pop
aam
pop
pop
aaa
mov
dec
mov
cwtl
addr16
ss
out
pusha
es
cli
les
dec
adc
pop
cmp
loop
sbb
xlat
andb
in
icebp
jno
inc
ds
imul
stos
lcall
or
sub
inc
xor
out
aam
cltd
icebp
sub
jae
xor
adc
cs
pop
push
fsts
cmc
loop
aam
inc
out
sub
xor
jp
ja
xchg
scas
jp
xchg
sub
mov
push
cmp
dec
js
shll
hlt
push
jne
repz
imul
es
xchg
adc
ret
sbb
int
pusha
fdivrl
sbb
jb
pop
push
shll
dec
pop
shlb
and
add
push
in
xor
cltd
lods
cmp
adc
mov
sbbb
imul
mov
cmp
xor
push
std
mov
outsb
test
ljmp
stc
push
mov
adc
lock
cmp
dec
pushf
in
adc
mov
dec
ss
fs
stos
and
add
hlt
or
pop
out
push
cmp
ret
mov
dec
cmc
fcom
lock
incb
rol
imul
ljmp
addr16
mov
ljmp
dec
pop
lahf
std
xchg
test
jmp
fisubrl
mov
aam
jl
insl
xor
sahf
ss
daa
lcall
stc
xchg
test
test
sub
ljmp
mov
pop
fmuls
mov
lods
sub
pop
lds
cmp
pop
leave
dec
in
push
inc
mov
sub
test
scas
into
in
stos
jae
test
dec
lcall
xchg
add
pop
cmp
push
fldt
xchg
push
cmpsb
adc
scas
jle
push
in
xchg
ja
hlt
inc
adc
sub
or
cmp
fidivs
add
call
pop
pushf
jbe
and
and
in
fisttpll
sbbl
sub
cmp
rol
in
inc
rcll
repnz
scas
xor
or
popf
rorl
daa
push
jecxz
movsb
jmp
mov
arpl
push
xchg
mov
push
mov
xlat
cmp
mov
loope
pop
loope
pop
sub
out
stc
cwtl
into
jle
cli
stc
pop
push
lds
jae
jbe
cmp
add
pop
jmp
xchg
xor
pusha
sub
and
push
or
outsl
stos
or
ja
loopne
lock
sub
adc
cs
fstpt
into
sub
nop
cmpb
jo
aaa
lea
push
push
sahf
mov
xor
ds
outsl
mov
and
in
lods
and
enter
lods
js
jecxz
xchg
jo
pop
sbb
inc
into
ret
add
cmp
cmp
shl
in
mov
adc
out
cmp
movl
ret
xchg
add
jecxz
js
enter
jae
mov
leave
call
inc
loopne
sub
xor
mov
or
xor
mov
out
loope
cmp
pusha
xor
int3
sub
inc
lahf
mov
mov
sar
pop
outsl
cmc
push
and
fldcw
outsl
xor
lret
xchg
icebp
mov
lcall
mov
outsb
xchg
pop
xchg
clc
sub
shl
mov
dec
or
mov
scas
sbb
in
out
int3
push
jg
xor
jnp
dec
xchg
movsb
lret
inc
lds
sbbl
sub
cmp
insb
push
push
pop
mov
aaa
and
jne
roll
mov
jecxz
stos
popa
repnz
adc
mov
add
dec
stos
fldpi
push
data16
pop
dec
jo
aas
dec
push
jp
mov
pop
outsb
xchg
scas
mov
sahf
insb
ds
dec
stos
mov
sbb
lea
inc
mov
jnp
mov
jmp
xchg
adc
lahf
sub
or
xchg
or
dec
fcmovnb
orb
test
test
xabort
xor
jbe
out
or
mov
fsubrl
inc
sub
inc
mov
mov
fsubrl
jle
push
inc
and
or
pop
stc
adc
jp
mov
inc
mov
inc
adc
negb
inc
lds
push
scas
lods
cmp
mov
sahf
jl
xchg
mov
ret
out
push
jle
insl
mov
bound
gs
sbb
jns
push
ss
dec
cld
cmp
es
xchg
fnsave
sbb
sahf
push
rcrl
movl
or
adcb
lahf
es
dec
cs
ja
push
in
xor
in
fwait
bnd
shrb
xchg
nop
pop
or
popa
inc
hlt
adc
sarl
sbb
pushl
sahf
mov
jecxz
test
into
xor
push
dec
add
inc
data16
push
js
fistl
inc
mov
mov
adc
adc
stos
das
and
int
push
into
hlt
mov
sub
mov
and
mov
inc
sbbb
subl
jbe,pn
sbb
lcall
test
enter
xchg
mov
xlat
fs
sub
mov
ret
mov
in
jmp
popf
mov
ljmp
in
fucomi
out
add
or
into
add
cwtl
dec
je
or
add
or
adc
dec
pop
mov
push
dec
jb
aaa
adc
sbb
into
shll
out
je
std
fnsave
sub
cld
xor
pop
daa
repz
ret
add
sbb
cmp
sub
adc
dec
push
comiss
xor
nop
scas
lahf
fs
add
mov
adc
les
lock
dec
daa
lea
jnp
xchg
cmp
xor
mov
sub
xchg
add
nop
jl
aas
sbb
cmp
es
scas
out
jmp
movsb
fistps
dec
mov
and
std
mov
cmp
and
xor
mov
push
dec
dec
jbe
out
pushf
iret
dec
pop
cmp
mov
and
or
and
inc
or
sub
aaa
es
push
jb
pop
sbb
aad
push
insb
dec
clc
movl
or
cmp
ret
ss
inc
roll
les
nop
jno
add
pop
jmp
add
fistpl
xchg
lock
adc
ret
bound
pop
sbb
xlat
cs
lds
pop
cmp
in
push
xor
mov
lods
iret
xor
aaa
and
notl
adc
push
dec
rorl
jns
mov
je
dec
sbb
jb
out
fistpll
out
mov
idiv
add
or
sub
adc
mov
add
push
cmpsl
mov
out
addr16
adc
mov
adc
push
xor
inc
imul
aam
sub
movsl
in
push
pop
sbb
imul
pop
pusha
push
cld
add
test
lcall
movsb
rcrl
xchg
jbe
or
lret
std
cli
lea
sarl
lea
inc
aam
or
sub
in
mov
cmp
xchg
xchg
js
std
pop
mov
fidivs
rclb
mov
jg
push
cmp
sub
in
jl
add
cmp
out
xchg
je
pusha
scas
out
jne
mov
jmp
jbe
push
out
in
cmp
insl
jg
int3
ljmp
add
jns
cs
push
and
xchg
pop
add
fcmovu
or
mov
add
fstps
pop
jae
adc
insl
imul
ds
jne
dec
pop
mov
pusha
aaa
mov
stos
out
and
stos
cmpsb
iret
fsubrs
add
gs
scas
test
loope
mov
jns
fidivrs
mov
cld
lahf
adc
mov
cli
je
add
pop
in
adc
mov
cmpsb
xor
addr16
neg
dec
pop
sti
movsl
jl
ja
xchg
rcrl
push
jbe
es
mov
out
mov
sti
jle
push
cli
lods
inc
mov
nop
jge
mov
lods
cmp
adc
mov
ds
mov
mov
mov
outsl
and
fs
icebp
repnz
pop
dec
pusha
sbb
rcrb
add
pop
mov
xchg
lds
fmul
mov
inc
pop
dec
hlt
pop
jle
mov
test
insl
xchg
xchg
sub
mov
sti
mov
leave
movsl
xchg
jl
cmp
gs
or
push
jle
pop
and
xchg
jno
mov
cmp
lea
dec
cmp
add
cmpl
pop
movsl
cld
xor
or
in
daa
fmuls
cmovge
lret
adc
jge
or
mov
sbb
dec
lods
test
xchg
push
sbb
jmp
sbb
push
jmp
divb
pop
test
cld
xor
pop
call
mov
push
jmp
cmp
sub
mov
movb
add
rorb
xchg
xor
out
shl
ret
pushf
shll
mov
sarb
or
push
dec
inc
lds
scas
fists
cltd
pop
xchg
inc
inc
sub
mov
shlw
cmp
mov
pop
cmc
loope
xchg
icebp
adc
pop
idivl
sub
and
iret
cmp
sub
mull
mov
jge
push
push
hlt
adc
mov
xor
inc
insl
fbld
push
lods
add
lods
ss
mov
outsb
rorl
mov
cmc
mov
pop
cld
dec
repz
cmpsl
xchg
cmpsb
push
xchg
mov
mov
pusha
cmp
shrb
mov
add
lock
pop
pop
push
pop
dec
clc
mov
lcall
fimuls
ret
sub
in
test
mov
jge
dec
lods
mov
lret
cmp
lret
adc
ss
ja
sbb
add
mov
sahf
push
out
pusha
mov
insl
lcallw
jnp
divl
mov
lods
scas
in
stc
mov
cmp
dec
xchg
arpl
int3
lret
push
arpl
xor
dec
ds
pop
mov
push
addb
mov
daa
jo
insl
xor
push
movsl
out
adc
add
aam
adc
inc
dec
mov
mov
std
adc
ljmp
pop
mov
sbb
vcvtss2sd
dec
cli
out
daa
dec
sub
loopne
je
jge
xor
mov
mov
ficoms
mov
sub
shll
addr16
leave
sub
add
leave
gs
cmp
popa
pop
mov
push
stos
add
sub
inc
bound
mov
jnp
out
movsb
add
dec
push
rclb
add
jmp
lods
movsl
je
sbb
fistps
movsl
jg
xor
test
mov
adc
int3
push
adc
daa
outsl
cltd
jl
in
iret
pop
popf
mov
sbb
out
pushf
dec
mov
jmp
sub
int
test
pushf
into
ljmp
push
clc
int
inc
dec
ret
jecxz
sub
sub
lods
sub
mov
adc
es
test
dec
adc
pop
sub
adc
or
or
pushf
clc
and
out
lea
cmp
rolb
or
mov
sbb
int3
cmp
push
mov
sub
dec
lods
sbb
pop
push
jmp
out
add
pop
push
xor
je
jne
jb
scas
cwtl
dec
aaa
dec
push
orb
inc
adc
jae
enter
jns
insl
push
imul
jns
jecxz
popf
enter
and
int3
iret
or
lahf
or
call
lret
out
adc
mov
sbb
sbb
xor
test
pop
shrb
jnp
fsubp
imul
add
mov
push
pop
testl
ljmp
cmp
xchg
test
pop
pop
or
add
jae
je
dec
call
inc
movsb
outsl
neg
jno
push
xchg
hlt
sbb
iret
mov
sbb
xor
fstpl
or
popf
and
ficomps
sbb
cmp
scas
pop
hlt
or
into
mov
aad
pop
sbb
shl
ds
sub
mov
dec
sub
cli
pop
jno
mov
ret
push
push
mov
imul
jl
push
out
stos
mov
in
inc
push
call
scas
loopne
lcall
call
mov
pop
call
out
push
scas
or
pusha
shll
fnstenv
sbb
ds
fs
pop
fisttpl
xor
pop
lret
stos
fcomip
and
mov
in
mov
lahf
into
xchg
add
inc
xor
out
pop
negb
dec
into
addr16
arpl
sti
fdivs
mov
mov
mov
sub
mulb
out
imul
out
or
or
aad
movsb
lcall
ret
xchg
add
sbb
imul
dec
loop
lods
jg
shrb
cmp
aas
xchg
push
add
mov
scas
pop
stos
cld
sub
mov
push
cmpsl
add
mov
ja
cmp
xorb
pushf
mov
sahf
flds
dec
js
xor
xchg
xchg
mov
mov
imul
pop
mov
fcmovb
xor
outsl
xchg
out
mov
push
mov
push
pop
fidivl
push
fwait
aad
and
mov
lock
mov
nop
ret
insl
xor
jne
mov
jle
mov
mov
clc
mov
ficoms
gs
dec
add
enter
cmpsb
hlt
pushf
cmp
jl
or
insb
sarb
cmp
jge
inc
lock
push
and
xor
pop
lret
or
push
or
xchg
in
dec
out
inc
or
mov
in
shl
jg
lcall
mull
test
inc
into
mov
inc
mov
xrelease
mov
dec
mov
cmp
jle
and
cmp
out
mov
mov
cmp
out
arpl
push
push
sub
iret
push
setns
addr16
in
inc
mov
mov
lods
adc
fwait
mov
cmc
and
jg
cli
sahf
movsl
jg
lahf
fisubrl
vsqrtss
push
mov
icebp
sbb
xor
iret
xlat
mov
mov
into
das
pop
pop
sub
clc
add
in
notl
test
sahf
add
popf
lods
testl
in
add
mov
mov
out
dec
out
cmp
in
mov
les
xor
movsb
lcall
and
push
mov
jmp
and
dec
cwtl
fimuls
rcrb
addr16
sbb
fucomp
add
dec
aaa
ffreep
push
push
mov
hlt
xor
in
push
out
fiaddl
sbb
fsubs
cmp
xchg
fwait
sbb
pushf
xchg
inc
pop
inc
addb
push
xchg
dec
call
into
dec
aam
gs
fs
mull
jo
icebp
cli
stc
pop
stos
jle
test
push
pop
sti
lods
pop
clc
mov
jl
pop
jae
mov
stc
xor
and
movsl
pop
jp
movsl
test
pop
push
hlt
cmp
bound
shrb
outsl
fdivr
or
scas
sbb
sub
pop
push
stc
aas
fwait
rclb
adc
icebp
push
stc
or
ret
icebp
fimull
xchg
dec
push
and
in
pop
stc
fwait
test
fbld
lcall
dec
cld
stos
mov
insl
movsb
dec
fiadds
inc
aam
nop
lcall
and
iret
scas
lcall
jmp
jno
adc
sbb
pop
sar
sbb
aam
sbbb
sbb
lods
cmp
xchg
test
mov
add
fchs
shll
jl
gs
popf
pop
inc
js
lret
jae
bound
jge
xchg
scas
pop
in
sbb
xchg
mov
or
jo
popf
mov
push
outsl
mov
or
or
xchg
je
mov
fildl
push
jne
mov
mov
popa
sub
cmp
outsb
cmpsb
sbb
lret
add
dec
and
push
ljmp
sar
gs
cmpsl
lret
mov
mov
cmp
jbe
add
mov
dec
arpl
cli
xchg
scas
xor
es
adc
addr16
icebp
addr16
xchg
xor
clc
loop
sbbl
ljmp
or
in
arpl
frstor
lods
jae
mov
mov
adc
sti
aaa
lea
bound
jmp
xor
mov
sbb
cmp
sub
movsl
movnti
movsl
inc
cmpsb
xchg
jmp
mov
out
stc
cmp
sti
in
jle
xchg
push
jecxz
xor
mov
call
xor
movsl
je
jle
incl
mov
jl
or
shll
pushf
mov
xor
into
idivl
pop
pop
mulb
lea
and
flds
or
dec
pop
fsubr
hlt
jge
pop
xchg
xor
lods
jl
or
jo
andb
mov
pop
mov
insb
adcb
jmp
adc
loopne
stc
scas
xchg
mov
sbb
mov
mov
jns
lods
inc
jmp
add
mov
scas
mov
mov
inc
inc
pop
add
data16
test
xchg
xor
loope
xor
cmp
cmp
cmpl
sbb
pop
sub
xchg
sub
fldenv
cmp
pop
fldl
sbb
out
xor
jp
outsb
cmp
fisttpll
mov
sub
cld
sbb
lock
ss
jno
int3
fwait
iret
faddp
cmp
int
lods
mov
jns
ss
xor
jnp
pop
pop
lock
sbb
addr16
xlat
popa
shlb
add
imul
mov
lds
jne
hlt
std
mov
push
inc
xchg
xor
in
push
mov
ret
scas
out
int3
push
dec
adc
and
pop
fstpt
mov
mov
daa
insb
push
loope
xor
std
xchg
out
cmpsb
push
push
mov
push
mov
insl
push
fdivs
or
mov
in
std
xchg
push
xchg
jecxz
inc
lret
mov
mov
imul
inc
ss
xor
mov
rorb
pop
jmp
std
cmpsb
or
cltd
or
xchg
aaa
mov
in
clc
sub
popf
int
outsb
jns
dec
loope
mov
ret
mov
sub
sbb
aad
mov
mov
xlat
jb
mov
mov
js
aaa
push
out
xor
jge
loopne
pminub
jmp
pop
pusha
pop
push
adc
je
shl
sub
rorl
mov
ja
bound
fcompl
sbb
adc
push
xchg
test
and
ja
test
loop
add
lea
jp
data16
adc
inc
mov
add
iret
test
lahf
pusha
sub
pushf
dec
mov
pop
or
in
pop
orb
iret
mov
sub
inc
push
movsb
push
push
int3
adc
decl
jecxz
in
and
iret
xchg
jl
insb
mov
jmp
inc
pop
push
xchg
int
cmpsb
push
push
aad
cmp
sbb
fwait
out
shl
repnz
push
imul
je
jle
scas
cmpsb
cmp
cmp
outsb
add
icebp
loope
loope
cmp
cld
xchg
addr16
mov
notl
loop
stos
add
pop
test
hlt
int3
jo
fsubs
popa
pop
ror
adc
aas
negl
jo
shlb
ret
xchg
mov
mov
mov
outsl
mov
xchg
cmp
jg
repz
and
pop
call
lds
pop
les
jmp
mov
xor
jmp
xchg
jmp
sub
xchg
xchg
popa
call
or
lods
xchg
outsl
cs
push
jl
test
pusha
mov
mov
int3
ljmp
mov
cmp
adc
sbb
into
imul
jmp
jno
or
pop
sbb
shll
cmp
jg
add
shr
in
xorb
loopne
cmp
cmp
mov
imul
mov
lods
xchg
mov
or
cmp
xchg
adc
int
pushf
leave
dec
movsb
pop
cmp
test
aaa
test
jns
mov
adc
jb
fsubs
ss
adc
cmpsb
clc
sub
cwtl
outsb
ljmp
xchg
fs
xchg
pop
loope
xchg
jmp
fdivl
pop
fwait
mov
inc
xor
cld
and
push
dec
stos
inc
pop
xchg
inc
jp
cmp
ja
mov
in
jge
pop
lods
add
push
testb
inc
aaa
ret
cmpsb
dec
inc
jmp
xlat
jp
pop
imul
xor
jae
ds
mov
adc
roll
and
out
sbb
nop
push
dec
jg
icebp
enter
or
sbb
int
push
notl
sbb
pushf
jbe
jle
add
dec
and
dec
push
sbb
lret
xchg
sbb
loopne
stos
jmp
fdivrp
pop
or
dec
dec
lea
ficoms
push
jl
adc
fildll
adc
mov
jo
xchg
lods
push
jge
lahf
mov
sbb
dec
mov
stos
dec
fcompl
cmp
outsb
out
sub
cmp
sub
das
movl
mov
push
lods
jns
in
aad
mov
idivl
xchg
mov
inc
decl
out
sbb
adc
call
fs
sub
or
sarl
sahf
dec
aaa
das
rorl
mov
es
dec
jae
cmp
cmp
lret
idivl
or
daa
or
and
aaa
jns
jb
or
testl
sahf
push
add
push
pop
xchg
int3
lret
dec
jbe
scas
mov
jge
xchg
xchg
mov
out
fs
scas
stos
and
inc
or
adc
aam
cmp
jnp
bound
jbe
cmpl
dec
mov
mov
stos
test
xchg
mov
dec
int3
movsb
dec
inc
jle
and
sub
jnp
testb
out
andl
xor
aaa
jae
pop
mov
repz
inc
mov
lods
int3
fidivrl
jecxz
fisttpl
test
outsb
cmc
ficoml
mov
cld
add
cmp
mov
int
aas
in
jmp
fwait
js
mov
cmpb
shlb
shrb
sub
inc
xor
add
mov
rcrl
and
jle
cmp
dec
xchg
in
and
lret
cmp
les
lcall
sub
add
cltd
cld
je
subb
test
sub
mov
sbb
aad
popf
lahf
and
mov
jle
add
add
daa
add
jb
or
inc
pop
xchg
ss
mov
repnz
mov
mov
sbb
out
arpl
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
