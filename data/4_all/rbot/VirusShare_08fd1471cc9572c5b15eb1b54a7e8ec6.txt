int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
test
js
push
mov
rcll
out
dec
mov
dec
insl
icebp
mov
push
imulb
cmpsl
xor
fnstsw
test
sub
fstl
and
jmp
jo
or
push
fmull
movsb
push
pop
in
cli
lods
pop
pushf
lds
sbb
xchg
in
loop
add
inc
push
jle
sbb
or
jp
fldt
loop
test
dec
or
add
icebp
aam
and
sub
sahf
cmc
fisttps
inc
ss
mov
addb
loopne
les
cmc
xor
outsl
test
fldenv
in
add
outsl
movsl
mov
sbb
xlat
or
mov
push
and
xchg
cmpsb
jno
mov
and
adc
mov
xor
test
xor
pop
pop
mov
out
xor
xchg
arpl
pop
inc
push
and
xor
mov
lret
mov
or
fdiv
rcrb
or
xchg
test
js
loop
push
stos
sbb
rcll
orb
mov
xchg
jge
add
xchg
out
or
cmpsl
ss
subl
ds
xchg
stos
cmp
xchg
adc
xchg
dec
imul
jno
jl
out
xor
add
sub
scas
in
testl
js
lcall
dec
int
inc
adc
lcall
push
std
insl
mov
out
dec
in
lods
push
and
test
xchg
in
sti
xchg
lahf
shrl
xchg
jbe
dec
jnp
mov
fidivrl
daa
pop
mov
add
sbb
add
daa
xchg
pop
jbe
inc
sub
jnp
xchg
push
jae
stc
mov
subb
or
outsb
cltd
jge
mov
mov
out
repz
jle
xchg
mov
add
pop
and
or
jns
or
or
jge
push
mov
cs
icebp
out
out
push
pop
jnp
dec
push
cmp
fisttpll
mov
roll
xor
rcrl
push
inc
pop
movsb
xor
std
or
adc
fmull
jnp
test
mov
data16
cmpsb
pop
dec
inc
lret
push
lods
xchg
ret
es
mov
jl
shlb
jno
mov
popa
xchg
dec
add
ss
shlb
mov
and
cmpsl
cmpb
cs
pop
inc
icebp
xchg
into
push
inc
jge
push
mov
insl
fildl
pop
adc
sub
mov
sahf
stc
lahf
mov
pop
and
adcb
mov
mov
push
jle
shl
in
and
jbe
pop
dec
mov
in
jl
jmp
pop
je
push
ss
jb
outsl
push
pop
test
jne
sarl
mov
push
aas
xchg
adc
mov
pop
adc
dec
mov
push
test
mov
enter
xchg
xchg
lret
inc
inc
icebp
jae
mov
and
mov
jns
leave
in
out
lds
addl
mov
xchg
stos
popf
sahf
mov
in
gs
xchg
xchg
leave
xchg
rorl
push
jge
outsl
push
addr16
fistpl
mov
add
pop
je
enter
lock
mov
xor
outsb
out
push
adc
cwtl
or
push
pop
stos
add
pop
jne
add
sbb
popa
push
fisubrl
jle
iret
dec
jne
loope
leave
dec
cmc
pop
mov
test
mov
cmp
popa
mov
pop
xchg
dec
imul
push
aaa
dec
fidivs
pop
cmp
rcl
cmp
je
lahf
xchg
xchg
jmp
dec
out
aas
lahf
xchg
imul
adc
inc
fs
insl
lret
cmpb
es
sarl
and
push
mov
add
or
sub
orl
adc
js
xor
mov
insl
popa
ret
outsl
jmp
in
xor
inc
into
outsb
mov
or
aam
sbb
ret
lret
mov
fidivs
addr16
hlt
ss
add
int
mov
leave
dec
inc
iret
jo
into
jnp
sbb
xor
lcall
cmpsb
pusha
in
pop
sbb
mov
imul
in
ret
cmpsl
fstpt
xchg
jge
ljmp
or
sub
mov
cmp
mov
jbe
lcall
xor
adc
or
xor
sub
jecxz
push
xlat
push
icebp
sbb
mov
fiadds
ss
push
stos
mov
stos
aas
mov
lods
cmp
inc
call
lahf
aas
xchg
mov
or
pop
push
fs
das
or
add
nop
and
xchg
jnp
lds
sbb
es
xor
out
jbe
dec
mov
dec
gs
push
adc
jge
dec
mov
pop
fstpl
or
sbb
cmp
es
dec
dec
fidivl
mov
cmp
mov
test
jnp
jne
sahf
movsl
jmp
sbb
rcl
test
sbb
repz
movsl
cmc
lret
test
sahf
or
jmp
cltd
jbe
adc
nop
pusha
out
lret
fdivrl
and
dec
pop
lock
jp
sbb
xchg
sbb
in
xorl
scas
push
adc
call
fstps
jno
call
leave
ds
orl
mov
rcrl
mov
mov
popf
fidivrl
jmp
cmp
push
cmpsb
sub
and
lods
ficoms
sub
in
pushf
insl
or
fwait
rcr
xor
into
ficoms
lret
sbb
cmc
pop
inc
inc
int
cmp
lahf
or
insb
fwait
add
inc
push
jge
jb
popl
stc
test
jo
dec
inc
popl
adc
rol
xlat
push
mov
jno
xchg
inc
add
jo
mov
jae
jle
sahf
xor
mov
loopne
sahf
inc
push
movsb
cmp
add
add
xor
or
dec
xchg
and
in
xchg
and
cmp
repz
lahf
movd
cmpsl
fs
cld
push
sbb
push
xor
icebp
std
rcll
inc
mov
aam
pop
pop
sbb
mov
dec
mov
jne
outsb
insb
and
aaa
nop
xor
imul
in
jno
daa
xor
aam
fildll
push
xor
jno
sbbl
or
jle
push
cmp
js
and
xchg
cmpsl
sub
mov
pop
push
xchg
xor
cmp
pop
and
pop
mov
call
nop
pusha
js
fidivl
push
xchg
bound
stc
mov
jne
xlat
jae
cmpsb
mov
jns
pushf
fstpt
cmp
inc
das
mov
pop
dec
test
sarb
rcl
xor
push
cmpsl
jecxz
in
jmp
std
adc
loope
outsl
sbb
mov
lahf
inc
cmp
sbb
xor
in
push
ds
movsl
jb
in
sbb
mov
dec
xchg
cmp
das
int3
cmp
xchg
xor
xchg
pop
xor
out
pop
adc
mov
mov
decl
out
lahf
leave
stos
jg
loopne
and
lahf
jb
notl
sbb
cmp
lret
and
xchg
sub
mov
mov
mov
pop
int3
fcomps
std
int3
pop
loopne
cmovo
sbb
imul
xor
jecxz
xchg
cmp
and
sub
repnz
rcll
imul
gs
or
jo
pop
loopne
les
add
jo
pop
sbb
and
mov
les
dec
add
les
dec
sub
loope
rcll
daa
fisttpll
aad
mov
mov
test
test
popf
jo
or
mov
or
inc
push
ret
cmp
inc
mov
adc
push
pushf
jae
xchg
xchg
push
jp
popf
sub
jo
popf
sbb
dec
repz
fdivr
xchg
leave
inc
addr16
dec
jo
mov
sbb
sarl
xchg
mov
xor
mov
in
dec
icebp
inc
xchg
xchg
push
jmp
xor
lock
dec
out
rcl
or
jo
test
mov
insb
cmpsb
or
pop
jnp
or
lahf
in
or
fdivr
jbe
jmp
fbstp
cli
inc
lret
mov
inc
pop
pop
sbb
pop
and
jmp
mov
and
dec
adc
rorl
adc
cmpsl
dec
cwtl
adc
dec
cli
fimuls
out
jno
cmc
mov
imul
notl
jle
out
loope
mov
scas
jecxz
ljmp
push
fwait
nop
push
xchg
out
sbb
addr16
sbb
call
pusha
and
shrb
addl
ds
mov
mov
scas
lods
and
or
push
or
insl
sbb
jmp
cmpsl
pop
inc
popa
adc
pop
pop
inc
arpl
ds
ss
int3
sub
inc
scas
pop
adc
add
mov
inc
mov
push
push
dec
add
movsb
les
mov
cmp
out
sub
jmp
dec
adc
xchg
cmp
sahf
stos
sub
cmp
push
add
lods
jb
xchg
add
inc
push
cmp
movsl
cmpsl
dec
or
push
inc
orl
or
aaa
aaa
fidivl
loope
mov
leave
or
movhps
nop
pop
ljmp
push
insb
push
pop
push
scas
fcmove
push
lods
cmp
mov
pusha
gs
dec
mov
out
loopne
fadds
sar
adc
scas
and
fdiv
pop
in
movsl
jb
aaa
jb
cmp
lahf
ret
mov
enter
aas
dec
sbb
out
loop
rclb
cmp
idivb
sbb
cmp
jns,pn
rorl
pop
cmpsb
jae
xchg
jg
lret
sbb
leave
int
xchg
mov
xor
mov
xchg
or
xchg
jge
dec
dec
aaa
or
sar
insb
cmp
jns
push
fidivrl
data16
outsb
insl
cmpsb
fwait
mov
jecxz
test
fisttpll
ja
adc
xor
dec
jnp
dec
mov
push
mov
or
jne
xchg
xchg
push
push
test
cmp
mov
iret
in
xor
push
movsb
arpl
fs
lret
aas
cld
dec
gs
mov
cmp
mov
outsb
xor
jp
pop
jl
daa
stos
lock
pop
add
xor
mov
sbb
adc
adc
insl
or
pop
jnp
in
mov
sub
or
insb
sub
popf
shlb
je
movsl
push
retw
xor
xor
inc
ret
push
adc
fs
jno
cld
sbb
push
lea
xor
jbe
dec
lret
add
test
pop
out
aaa
pop
dec
mov
gs
or
and
push
mov
imul
insb
cmp
jbe
add
dec
ss
lods
iret
push
adc
int3
or
pop
ret
dec
push
les
push
mov
dec
cmp
aaa
jns
sub
jmp
sahf
mov
mov
cmp
cmp
push
aaa
call
dec
add
inc
and
cmp
dec
xchg
jp
xchg
ds
scas
adc
mov
arpl
popa
fisubl
dec
xchg
dec
cltd
lock
push
repz
mov
movsl
xchg
mov
test
adc
js
fbstp
sbb
and
fmull
jo
or
sub
xor
subb
dec
push
xor
lahf
xchg
cmp
adc
rorl
cltd
push
or
call
imul
jo
xchg
loop
xor
sbb
xchg
jge
mov
sahf
xor
push
mov
mov
push
sub
mov
mov
add
call
dec
sub
push
fwait
inc
sbb
push
or
sahf
mov
sahf
adc
mov
mov
mov
test
sub
or
mov
loop
pop
push
stc
push
lock
push
push
es
in
jg
add
or
or
push
mov
jbe
orl
daa
push
leave
out
dec
mov
call
aaa
pushl
cmp
mov
jmp
adc
lea
pop
jp
xchg
mov
and
adcl
pop
imul
nop
out
mov
or
outsb
dec
dec
xor
or
sub
iret
or
pop
fidivs
jmp
cltd
test
lods
jnp
rclb
cmp
lcall
xor
xor
popf
cmp
add
arpl
out
push
addr16
or
and
push
iret
cmp
mov
fildl
cmp
lds
push
cmp
mov
mov
inc
mov
xor
push
and
mov
cmp
add
mov
adc
cwtl
add
dec
imul
push
adc
jbe
popf
sahf
jae
add
xchg
les
inc
xchg
fldln2
jmp
loop
fcoml
rcll
mov
jb
inc
pop
sbb
xchg
xor
xchg
pop
pop
test
scas
cmc
jl
inc
sub
sbb
daa
data16
addr16
imul
sbb
loop
xchg
sbb
in
std
push
add
add
idivl
push
loope
das
and
jp
bound
outsb
inc
jmp
pop
pop
test
jge
movsl
cmp
inc
lahf
sbb
inc
cs
mov
adc
sarl
hlt
or
loop
adc
iret
pop
gs
aas
js
add
pop
dec
shll
sbb
xor
jmp
lret
fs
pop
mov
jecxz
cmp
adc
push
sbb
rorb
int3
cmp
lcall
in
rorl
push
insb
rclb
dec
std
sub
or
mulb
xor
scas
repnz
inc
bound
loop
mov
repz
jle
fcomp
jb
mov
xlat
cmp
fdivrl
pusha
fnstenv
popf
stc
das
sbb
cmp
push
jp
jnp
fimuls
adc
imul
fwait
jle
mov
cmp
push
or
sti
jo
or
and
jl
inc
jnp
mov
sub
das
outsl
into
cmp
adc
sbbb
outsl
dec
test
pop
stos
mov
test
cmpb
cmp
repnz
pop
fisubs
add
insb
jle
sbb
sbb
add
and
mov
push
loop
adc
leave
add
pushf
mov
mull
setno
lahf
out
push
add
rorl
imul
ss
fnstcw
add
call
inc
push
cmp
or
nop
xor
and
iret
xor
mov
lea
or
add
cmp
xchg
ret
mov
addr16
ret
sti
sub
xor
add
imul
cltd
jo
dec
add
stos
adc
jns
sbb
popa
add
gs
or
mov
lret
jmp
cld
and
pop
nop
inc
mov
jge
mov
jo
xor
mov
dec
ss
mov
in
enter
jge
jge
pop
jge
ret
nop
es
nop
xor
cmp
jnp
push
rorb
inc
and
mov
fs
dec
icebp
pop
mov
aad
mov
loop
test
mov
lods
mov
or
es
push
xchg
and
sub
xchg
lods
dec
jne
sub
push
adc
sub
stos
insl
mov
jl
idivb
xor
xchg
cmp
std
dec
cmp
out
jne
xchg
das
cmp
push
mov
fwait
bound
adc
mov
pop
pop
and
scas
xorl
into
cmp
nop
arpl
push
sub
push
sub
outsb
adc
push
sbb
iret
inc
adc
sahf
lcall
test
and
jnp
andl
add
or
push
cmp
and
in
cs
cmp
fs
dec
subl
push
rorl
adc
mov
imul
cmc
mov
ljmp
and
lds
sub
xor
faddp
sbb
cmp
sub
loop
aas
es
jnp
scas
inc
das
outsb
push
out
fsubrs
iret
out
nop
inc
mov
xchg
rorb
and
cmp
scas
int
test
hlt
mov
and
pop
sbb
daa
int
pop
outsb
mov
fisubs
pop
mov
fwait
int
add
imul
in
xchg
mov
lahf
xchg
inc
cmp
mov
xchg
sahf
cltd
jle
cmp
push
and
fxch
mov
loop
dec
call
push
add
aaa
adc
xchg
and
movsl
in
setle
pop
cmp
rcr
movsl
xchg
jne
lods
sbb
jp
inc
adc
xor
into
loope
mov
repz
sbb
popl
xchg
nop
pop
pop
and
push
and
xchg
or
ret
pop
cwtl
add
pop
push
lods
lret
movsb
and
cwtl
aas
repz
pop
pusha
arpl
push
ljmp
out
push
mov
mov
mov
dec
in
aam
add
mov
or
adc
pop
jo
adc
insl
jmp
mov
call
aam
mov
in
mov
mov
arpl
test
cmc
test
sbb
mov
cld
shll
dec
dec
cmpsl
lcall
popf
xor
popf
imul
mov
rorb
in
mov
flds
mov
aaa
adc
xchg
inc
push
pop
or
sub
mov
xchg
xchg
je
mov
clc
dec
shrb
pop
into
dec
shrb
in
lods
sbb
jp
das
push
fdivrs
inc
mov
jbe
or
rolb
mov
jle
lret
mov
push
pop
pop
push
imul
push
adc
fdiv
pop
xor
mov
cltd
xlat
pop
xorl
inc
and
mov
lds
sti
shlb
dec
das
push
sbb
cs
in
inc
jl
in
insb
push
test
sarl
mov
pushf
pop
mov
rcl
mov
sub
jo
push
cmp
ds
jb
jo
xchg
stos
push
rorb
sbb
fimull
cmp
cltd
mov
xchg
or
mov
fistpll
adc
outsl
jno
add
lock
into
push
ret
adc
sub
adc
push
int3
push
sbb
int3
shl
and
ds
push
cwtl
stc
mov
jp
push
lret
mov
outsl
or
mov
cld
mov
push
shlb
adc
mov
cmc
mov
add
cmp
dec
lock
pop
dec
rcr
ss
and
inc
fwait
xchg
xor
rcll
pop
jg
mov
and
fwait
int3
imul
sbb
or
iret
inc
iret
pop
inc
das
aas
jg
xchg
adc
or
mov
lds
scas
repz
xchg
fsts
mov
hlt
push
icebp
mov
repz
aam
xchg
adc
cltd
in
sar
jp
sub
std
add
ja
push
xor
ficoml
fptan
pop
lds
mov
test
int
cmp
xchg
dec
jecxz
or
fcoms
or
lods
in
pop
ja
ljmp
push
pop
sarl
mov
lds
mov
sub
stc
ret
push
xchg
mov
out
jp
addb
in
sbb
enter
adc
pop
sub
jae
rcr
in
aam
push
or
push
mov
jle
inc
sahf
stc
mov
fldenv
stos
dec
out
popa
ret
fsts
xchg
mov
adc
sub
gs
mov
lret
pop
cs
and
and
fisubrl
pushf
fwait
adc
pop
lods
inc
dec
xchg
ret
push
jmp
mov
in
out
xor
loop
add
aam
sbb
insl
rcrl
cmp
in
sub
push
aas
int
or
movsl
pop
scas
in
sub
pop
jne
sub
mov
push
rolb
pusha
pop
fmul
inc
xchg
outsb
cli
dec
sub
lock
rcl
xlat
rorb
mov
xchg
push
dec
mov
and
std
loopne
movsb
dec
lea
or
mov
or
jne
xor
mov
sbb
sbb
push
pop
adc
inc
lret
xor
mov
fisubl
cltd
xorl
ss
int
jl
pop
or
adc
dec
out
sbb
jmp
lds
dec
push
and
inc
cld
in
jle
cltd
fcoml
inc
jne
nop
cmp
mov
stos
leave
enter
in
or
pop
or
adc
pushf
add
negb
out
and
jns
pop
ror
xchg
adc
popa
mov
jmp
js
dec
xor
daa
aas
in
jae
subl
pop
jb
test
jns
addr16
sub
add
jne
inc
div
or
or
pop
aad
dec
jmp
sub
sub
fsub
pop
or
mov
push
ss
add
and
mov
sub
cmp
xchg
sub
jge
xlat
mov
leave
inc
rcll
mov
fimull
dec
add
enter
inc
test
scas
and
jne
int3
add
in
js
pop
xchg
or
decb
insb
mov
xchg
gs
and
insb
xlat
bound
das
mov
cmp
je
or
fwait
cmp
call
testb
ja
popa
push
sub
xchg
adc
mov
mov
dec
movb
ss
cmp
lds
mov
jge
inc
cmc
pop
jb
dec
xchg
mov
sahf
lret
cmp
or
das
cwtl
aad
adc
and
adc
add
push
xchg
cld
mov
clc
and
inc
mov
sbb
into
jle
push
adcl
ja
es
iret
dec
pushf
dec
fadd
cli
adc
je
fcmovnbe
out
mov
fstps
xchg
js
mov
adc
int
pop
aas
incb
pushf
xor
or
incl
xchg
fidivrs
out
aad
adc
pop
push
add
cmp
out
jno,pn
add
rcrl
sar
sbb
popa
lock
mov
std
xor
fnstenv
fimuls
les
mov
dec
cmp
imul
lahf
ret
adc
mov
sbb
lret
jmp
push
repz
sbb
or
dec
scas
addr16
ret
sbb
add
dec
js
xchg
xchg
or
daa
imul
fnstcw
add
stos
nop
sub
lock
mov
xor
cmpsb
push
fisttpll
cli
jg
jp
fld1
rcl
jnp
shlb
adc
pop
inc
xor
jp
ret
sahf
sbb
dec
lcall
or
clc
and
adc
pop
mov
dec
lock
or
adc
mov
enter
adc
and
loope
push
insb
inc
fdivr
int3
mov
xor
mov
inc
dec
pushf
outsb
mov
xchg
scas
fwait
lret
sar
sarb
push
sub
out
jbe
scas
js
mov
jne
jbe
adc
dec
inc
push
or
xchg
lcall
in
push
cmpsb
adc
mov
dec
dec
clc
ret
out
es
das
sbb
inc
shlb
pop
mov
xor
notb
and
rorl
fnsave
push
mov
sbb
insb
push
cmp
cld
lea
int
jns
fisubrl
sarl
add
xchg
jbe
and
push
xchg
xor
sbb
popa
repnz
cli
lret
xor
dec
aam
es
push
jb
das
adc
mov
or
fnstenv
push
repz
insl
nop
push
lea
inc
hlt
jns
repz
sub
enter
out
inc
aam
js
fwait
aad
push
inc
xor
sub
fsubrl
ja
sbb
xor
jg
mov
jnp
mov
xor
push
idivb
dec
mov
xchg
dec
aam
or
loope
lea
dec
push
cmpsl
mov
lahf
inc
push
sbb
adc
movsl
push
sbb
inc
push
leave
notb
cmc
nop
pop
enter
or
cmpsb
mov
rcrl
cli
outsb
rclb
repz
in
cmp
add
imul
jb
push
pop
bound
xchg
out
enter
in
pusha
jne
in
lea
sub
jp
mov
sbb
pop
push
aad
jne
pop
dec
in
scas
mov
movsl
lar
fidivrs
mov
les
pop
fiadds
imul
out
imul
andl
jge
dec
jnp
imull
in
rcr
mov
loope
sbb
adc
pop
gs
leave
fs
jle
and
and
mov
testl
cltd
dec
jae
push
cmpsb
xor
or
popf
xorb
in
push
cmp
fildl
scas
imul
adc
xor
sbb
int
imul
lahf
shlb
xchg
daa
add
sbb
push
lock
lret
mov
cmc
or
jecxz
pop
arpl
lds
loope
cmp
or
or
push
add
cwtl
rolb
sub
or
les
jns
or
ret
jp
sbbl
mov
scas
test
jne
fs
lar
add
push
mov
xchg
arpl
mov
cmp
scas
shl
push
pop
loope
rorl
rorl
pop
jb
xchg
inc
pop
xlat
jmp
jle
movsl
movsb
cmp
dec
ret
jmp
outsb
aas
movsl
repnz
test
adc
mov
xor
push
mov
jle
push
jl
adc
push
dec
mov
es
out
pop
inc
outsb
std
notb
aas
or
pusha
jmp
mov
pop
or
mov
je
mov
push
sub
cmpl
xchg
cmp
rorl
mov
in
dec
push
adc
dec
inc
push
fadd
sti
hlt
mov
in
mov
cwtl
repnz
lcall
clc
leave
test
cmp
cld
shl
fidivrs
pop
cmp
fcoml
xchg
sarb
and
ret
push
lds
mov
mov
mov
outsb
fwait
lret
aad
mov
or
mov
adc
push
in
aad
push
add
test
adc
and
fdivs
clc
dec
shrl
outsl
fcomip
fisubl
pop
or
jne
and
jne
jns
cmpsl
cmpsb
mov
xchg
xchg
ds
and
scas
push
aad
lock
stos
repz
pusha
cmp
pop
cmc
push
xchg
mov
insl
mov
out
ja
adc
out
or
xchg
add
xor
movsb
adc
or
xchg
inc
mov
jb
push
mov
int
jb
cmp
xor
add
rcl
ljmp
jl
fst
mov
jg
pop
add
jb
out
fdivrl
ljmp
mov
cmp
jge
test
mov
mov
jp
inc
bound
xor
xor
xor
cmpsb
jnp
push
or
sarl
jmp
repz
or
jl
or
add
cmpsb
push
cmp
pop
cmp
dec
xor
cmp
or
xchg
orl
jl
ret
xor
mov
in
xor
mov
and
nop
sub
xchg
ret
or
neg
cmpb
test
jb
movsb
subl
stc
pop
iret
mov
leave
mov
nop
push
adc
in
sahf
mov
ljmp
leave
jecxz
mov
push
adc
add
push
enter
cmp
mov
or
push
negb
dec
aad
data16
jae
add
movsb
shrl
lcall
mov
rcll
pop
push
out
mov
adc
jge
inc
xchg
dec
aaa
or
add
cmc
or
js
mov
sbb
dec
xor
jmp
pop
jecxz
cs
jle
sbb
loopne
xor
pop
fstpl
pop
leave
jnp
addr16
cs
pop
into
fs
imul
fmull
add
loopne
scas
xchg
push
add
test
sahf
aam
je
fwait
adc
imul
jle
dec
dec
add
inc
adc
jnp
or
cmp
movlps
add
push
stos
fs
sub
pop
cmp
xchg
outsb
fists
rorb
je
daa
test
inc
push
dec
xor
dec
mov
lods
mov
sbb
or
jo
dec
pushf
iret
mov
rorl
pop
lahf
outsb
popl
imul
out
add
xchg
xor
mov
pop
sbb
and
aas
push
pop
push
adc
js
inc
inc
stos
mov
dec
shrl
bound
mov
test
xchg
xor
fdivr
and
loop
cmp
sbb
xlat
enter
mov
cmpsl
sbb
cmpxchg
fdivrl
push
dec
mov
dec
jp
sahf
cmp
add
or
iret
sub
jne
sbbb
dec
and
mov
add
mov
inc
jnp
je
cld
int3
xchg
lret
jo
outsl
dec
lds
mov
and
mov
ljmp
loop
mov
jb,pt
dec
xor
fs
int
mov
stos
jecxz
adc
jb
mov
fs
pushf
cmp
sbb
stos
ffreep
cld
cmp
cli
jns
negb
inc
roll
or
loop
aas
mov
test
loopne
imul
icebp
adcb
push
cmp
add
out
push
or
ds
dec
mov
cmp
sub
cmpsl
fs
cmpsb
shrb
pop
or
stos
or
push
xor
adc
test
cli
ds
pop
clc
adc
jle
cmp
dec
inc
and
pop
clc
popf
sbb
push
adc
push
push
stos
mov
stc
and
dec
jns
pop
fnstenv
rcrb
inc
and
and
test
rclb
and
out
dec
fbstp
adc
dec
pop
push
dec
dec
cmc
jle
jns
adc
adc
cmc
cli
adc
add
mov
jns
rclb
ds
sub
pushl
callw
mov
jmp
stos
inc
push
mov
or
mov
popf
inc
or
movsb
xlat
sbb
cmc
enter
inc
movb
pop
xor
idivb
and
icebp
mov
outsl
cmp
or
test
lcall
stc
int
dec
mov
push
in
mov
shr
test
push
mov
bts
xlat
inc
je
ss
mov
bound
push
cltd
shlb
popf
pop
imul
pusha
push
fstp
lods
addr16
in
xchg
cmpl
test
roll
push
pop
add
push
popf
popa
xor
repnz
add
adc
cwtl
mov
inc
or
xchg
mov
pop
sbb
mov
cmc
and
xchg
arpl
fsubl
imul
adc
xor
arpl
mov
ret
mov
imul
lahf
bound
xchg
divb
inc
dec
add
jae
inc
jae
out
xchg
mov
cld
add
aas
fbstp
push
mov
or
mov
xchg
test
adc
dec
popa
movb
int3
sahf
sbb
sub
inc
pop
dec
mov
test
cli
xor
cmc
pop
mov
rcll
ret
mov
sub
add
in
sub
push
mov
test
xchg
or
mov
add
insb
dec
mov
fisttpll
or
std
jne
adc
lock
adc
pop
in
cld
in
cmc
xchg
insl
fcoml
cs
shll
push
sbb
call
add
xlat
cmp
cmp
fsubr
adc
out
jg
sbb
xchg
test
jns
pcmpeqd
mov
pop
es
daa
andl
or
lcall
insb
pop
mov
sub
sbb
lret
pushf
push
dec
jg,pn
dec
push
or
scas
xchg
aas
dec
xchg
ret
stos
xor
push
jne
and
and
repnz
mov
arpl
push
mov
jno
sub
les
mov
sub
or
sub
aaa
mov
or
arpl
mov
or
loopne
imul
iret
cmpsl
mov
ja
cmp
cmp
mov
lret
jl
push
or
mov
dec
jne
cmpsl
pop
out
sbb
fisubl
js
adc
dec
mov
rclb
push
sahf
xchg
or
repnz
mov
ljmp
shlb
out
jb
jbe
xchg
popa
ret
arpl
jle
mov
sbb
nop
sub
mov
hlt
jno
xchg
lods
out
sbb
mov
lods
movsb
mov
xor
add
rcrl
jnp
adc
jl
call
ss
pop
sub
jne,pt
cmp
add
add
clc
rcll
mov
jl
xor
lods
inc
add
fildll
pop
or
and
mov
sbb
mov
or
xor
imul
icebp
xchg
insl
xchg
xchg
das
push
into
lret
inc
pop
out
jb
mov
mov
lcall
je
dec
jno
stos
xchg
dec
jbe
out
les
outsb
int
push
ror
mov
push
imul
pop
xor
jle
push
mov
mov
pop
sub
ficomps
cmpsl
cmpsl
xchg
jns
pop
pop
push
repz
add
adc
jecxz
cmpsb
insl
jno
test
jle
stos
mov
in
add
sub
movsb
push
ja
call
mov
fs
imulb
insb
add
test
or
pop
pushf
test
ficoms
jnp
xor
and
lods
gs
cmp
xor
jmp
data16
iret
mov
adc
gs
cmpsb
aas
js
xorb
push
mov
shl
xchg
ljmp
jno
aad
pop
test
cmp
shll
add
and
jae
push
adc
insb
xor
in
sbb
pop
cs
int3
rorb
xchg
sbb
mov
jmp
shr
subl
inc
xchg
push
arpl
inc
jp
in
mov
cmc
lahf
sbb
ss
ja
iret
pop
cs
mov
mov
adc
or
dec
imul
and
push
sbb
mov
add
push
out
jb
xchg
fsubl
mov
adcl
sub
shll
test
mov
repz
jns
int3
mov
jae
sub
mov
lret
xchg
fcoml
pop
push
outsb
outsl
ficoml
xor
pop
scas
sub
mov
pop
hlt
ja
dec
insl
add
dec
cmp
jb
adc
mov
aaa
flds
repz
movsb
add
inc
test
popf
fstps
cli
rcl
sbb
rcrb
push
outsb
inc
jmp
das
outsl
pop
or
cmp
push
jbe
rcl
rorb
dec
add
xchg
jb
fistps
jp
into
add
movsl
pop
inc
inc
mov
lea
dec
rorb
dec
outsb
js
imul
jno
icebp
dec
test
in
js
aas
push
jmp
xor
aad
inc
jbe
push
cmc
out
lahf
out
sbb
jle
push
shl
sub
adc
fstpt
movsl
mov
push
and
inc
xchg
mov
lcall
sub
mov
aam
lds
pop
fcmove
or
xor
test
pop
ds
jnp
add
sub
or
outsb
jg
and
cs
enter
lods
sbb
or
pop
mov
pop
sub
or
push
pop
mov
icebp
scas
cmp
dec
jae
sub
inc
push
jmp
dec
lods
rcll
pop
mov
ds
or
mov
xchg
aaa
cmpsl
dec
pop
and
bound
out
rcrl
jae
pusha
add
inc
aad
out
popa
lret
cwtl
out
dec
add
adc
cmp
je
push
lods
shrb
xor
dec
cld
lock
push
mov
and
pop
rorb
iret
dec
fildl
jo
aam
cmp
jno
nop
sbb
fcmovnbe
sbb
stos
fimuls
sub
xchg
in
cmpsb
pop
nop
fxch
les
imulb
sub
jge
push
fwait
jns
push
int3
sub
in
sbb
cs
mov
mov
sub
push
outsb
orl
xchg
push
xor
mov
jle
push
lods
scas
cmp
repnz
xor
ss
cmpsb
mov
xor
and
jmp
and
lea
cli
aas
outsl
scas
fwait
clc
out
leave
mov
lret
mov
fcom
rcl
dec
aad
push
loope
lds
inc
nop
mov
mov
mov
jecxz
jecxz
je
sbb
cmp
push
mov
fdivl
add
cltd
pop
push
es
lahf
cmp
cmp
insl
fs
push
ljmp
dec
jp
lret
aas
inc
outsb
jp
mov
mov
dec
jmp
outsb
js
and
xchg
xchg
push
push
mov
imul
mov
rorl
xchg
add
cltd
fcomip
mov
xor
imul
add
xor
cmp
lods
test
nop
pop
mov
in
vmulss
inc
lahf
es
xlat
sbb
sbb
mov
popa
out
xor
out
vpcomud
repz
add
jbe
sbb
mov
sbb
dec
xchg
and
pop
push
and
cltd
mov
dec
lds
jge
mov
mov
cli
into
cltd
orps
mov
or
pop
inc
lea
and
inc
and
mov
movsl
xor
xor
add
pop
aam
out
xlat
xchg
lahf
pop
shll
or
addl
leave
out
rcll
xchg
in
daa
lds
aam
mov
cmc
fs
ds
in
push
and
stos
jle
adc
mov
sbb
inc
sbb
fists
mov
ds
sbb
repz
movsb
outsb
rcrl
sahf
repz
or
mov
and
or
mov
enter
mov
scas
mov
loope
rclb
stc
repnz
jno
aad
mov
or
xor
mov
jl
sti
enter
sahf
arpl
xor
ja
push
mov
pusha
ret
jl
inc
sub
xchg
xor
push
mov
imul
pop
mov
data16
sbb
pop
or
ja
and
ljmp
fisttpll
inc
add
mov
lods
stc
lock
sub
push
jge
xor
jbe
fbld
mov
insl
xor
cld
repz
mov
cmp
mov
inc
mov
or
pop
out
sub
ja
adc
mov
mov
movsb
jle
xchg
add
push
in
movsl
xor
push
mov
jp
dec
pop
push
and
icebp
pop
cs
add
movsl
loope
dec
repnz
sbb
aaa
pop
push
jl
mov
and
test
inc
test
arpl
xchg
aad
aam
jb
fs
xchg
daa
lahf
cmp
mov
pop
subb
into
mov
adc
sbb
shll
and
or
xor
mov
cld
addb
mov
hlt
xchg
dec
xor
jbe
sub
cmp
ds
and
jg
xor
and
jle
cmp
xor
repz
lods
aam
xor
xchg
mov
fstl
jae
popa
call
mov
mov
lds
fcmove
dec
ljmp
mov
sbb
imul
or
xchg
lea
push
mov
arpl
cwtl
dec
jnp
cmc
out
pop
or
out
or
cmpl
arpl
jmp
pop
ret
mov
push
movsb
dec
push
jns
pop
sti
adc
adc
ja
inc
inc
cs
in
enter
jne
mov
mov
push
enter
ljmp
cmp
fwait
or
push
test
cmp
xor
int3
les
or
fimuls
jp
dec
cmc
bound
sub
clc
call
dec
popa
arpl
popa
call
stos
mov
out
jae
dec
adc
int3
xchg
push
out
jnp
xchg
out
inc
push
dec
cld
jns
adc
jp
dec
add
jae
cmp
xchg
jp
add
cmp
and
mov
into
cld
adc
inc
ljmp
aam
std
ss
lret
sub
icebp
mov
and
xchg
enter
jno
sub
in
insb
xor
nop
loopne
cmp
and
add
adc
push
pushw
sub
jl
dec
mov
movsb
ds
lcall
push
stc
out
fsubrl
fsubs
test
aas
sahf
xorl
xor
shll
fsubs
jbe
setle
add
xchg
mov
jno,pt
out
pop
lea
ljmp
xchg
out
jmp
jnp
nop
pop
leave
mov
xchg
jge
loope
add
fimuls
iret
stos
cwtl
ds
fistl
pop
sub
fcmovnu
and
or
xor
xlat
js
mov
sub
loope
mov
and
pop
jp
aad
rorb
cmp
jo
jg
aaa
dec
out
adc
dec
push
or
test
insl
call
mov
outsb
loope
loope
or
fwait
mov
mov
andb
cmc
shr
mov
adc
xchg
int
aad
push
jp
push
adc
test
jns
mov
ljmp
xor
mov
sbb
das
dec
int3
mov
push
sub
negb
scas
test
sub
je
cmp
mov
cmpsb
hlt
push
adc
lods
pop
stos
mov
push
xor
out
push
mov
fcom
or
sbb
into
push
inc
inc
fs
pushf
inc
push
lcall
repnz
mov
imul
push
mov
jp
dec
and
fsubrl
es
fwait
mov
je,pn
adc
stc
call
or
push
pushf
inc
and
xor
fsubrl
inc
cmpsl
mov
out
insl
dec
sbb
aas
cmp
jb
pop
cmp
jns
gs
mov
mov
sbb
inc
adc
sbb
gs
cmpsl
inc
xchg
ss
cmp
jns
jns
movsb
enter
mov
aaa
fdiv
in
pop
inc
jp
dec
mov
ja
rolb
nop
fidivs
cwtl
imul
cmp
push
leave
enter
in
fmul
dec
pop
cmp
xchg
push
pop
cmp
lods
cmp
dec
dec
scas
popf
loop
sbb
push
movsb
push
cmpl
sub
xchg
jp
mov
call
pop
adc
push
jnp
hlt
mov
dec
int3
inc
fisttps
imull
jb
inc
fisttps
fcos
inc
mov
imul
or
mov
add
popf
aam
bound
std
in
pop
adc
cmpsb
insb
sahf
icebp
mov
popa
loopne
fidivs
lods
inc
push
jecxz
cmpsb
xor
loopne
adc
cmpsb
mov
mov
xchg
inc
rol
fdivr
pop
ss
out
ja
sub
xchg
mov
in
insb
and
sahf
fsubrs
adcl
sbb
sahf
mov
aas
sbb
iret
cwtl
cmp
cmp
add
or
popa
mov
shlb
es
gs
xchg
out
pop
xchg
cmp
out
dec
enter
adc
sarb
push
cmp
loopne
cmpsb
jl
pop
fiadds
jne
mov
into
xlat
or
loope
test
fcomip
fisttpl
or
xor
add
out
jne
les
push
cmpsl
push
daa
xchg
sbb
jne
mov
xor
imul
insb
test
push
mov
jp
sbbb
push
push
daa
mov
mov
int3
xor
push
mov
inc
xchg
shll
shlb
or
inc
shll
loopne
inc
xchg
mov
adc
xchg
jb
test
pop
bound
lcall
jge
adc
inc
push
mov
jg
mov
xchg
shrb
sbb
pop
imul
push
add
dec
bound
pop
lret
inc
filds
fnstenv
cld
jne
push
sahf
lods
mov
add
and
fistpl
fidivs
mov
addl
hlt
cmp
mov
pop
sbb
inc
dec
mov
shl
cmp
hlt
ss
inc
push
jns
xchg
stc
add
inc
ja
bound
lock
pop
cmpsb
and
inc
int
int
fldenv
push
cmpsl
jo
int
push
setno
jl
push
lea
jb
jmp
inc
ficompl
xchg
out
cmp
arpl
ds
mov
fdivrs
adc
xor
adc
pop
in
push
dec
imul
cmp
and
pop
xchg
ss
sar
dec
popa
hlt
data16
in
add
add
xchg
mov
mov
jae
aad
jbe
xor
mov
mov
sbb
mov
mov
bound
mov
cmp
jne
fistps
lahf
lock
inc
pop
cwtl
nop
fldenv
lds
fs
daa
adc
push
in
faddp
scas
mov
or
out
ret
ja
or
pop
ja
inc
test
push
outsb
in
push
dec
cli
pop
mov
jno
xchg
sbb
ret
or
mov
or
movsl
into
mov
inc
xor
cmp
movsl
mov
sahf
aas
out
shl
add
fisubrl
add
sahf
mov
lds
sub
add
sbb
push
xchg
fimull
incb
jle
push
pusha
js
fcmove
inc
repz
jle
sub
lret
xor
xchg
bound
push
call
sarl
cli
int3
mov
xlat
stos
jno
sarl
scas
stos
adc
test
cmpsb
pop
mov
xchg
and
int3
fcompp
sub
xor
ds
aad
pop
dec
sub
loopne
lea
sbb
aad
sub
mov
dec
sahf
xchg
inc
xchg
and
push
mov
mov
push
int
clc
ss
xchg
loop
sarl
ds
pop
add
out
jne
add
mov
push
addr16
sbb
je
and
sti
mov
aam
popa
insb
and
xor
test
and
and
jo
aad
shll
scas
and
mov
dec
sbb
andb
dec
js
pop
adc
hlt
xchg
addl
pop
add
popa
fisttps
add
das
dec
ret
outsl
adc
push
or
lret
stos
push
mov
js
out
es
lock
adc
hlt
push
cmpsl
jl
cmp
popa
shrl
enter
mov
dec
test
xchg
fnop
or
xchg
mov
insb
ss
clc
je
and
sub
icebp
dec
mov
mov
test
push
inc
lahf
push
push
ja
imul
mov
and
and
daa
mov
out
out
int
mov
dec
out
xchg
or
popf
sub
shll
loope
jno
test
mov
xor
and
data16
iret
mov
sti
cmp
cwtl
jmp
push
orb
push
outsb
mov
iret
inc
adc
jp
mov
add
sub
dec
inc
sbb
fldcw
dec
mov
inc
cmp
xor
ret
dec
imul
mov
jp
lods
or
iret
hlt
jg
out
leave
roll
inc
push
jecxz
pop
mov
jge
jmp
add
mov
pop
cld
ss
shll
xchg
jl
xor
ja
nop
cld
pop
mov
push
dec
out
sbb
shrd
xchg
cmp
into
sub
dec
push
push
aaa
rorb
test
lcall
paddsb
pop
mov
out
dec
jno
iret
ret
adc
imul
arpl
dec
jne
mov
rorl
mov
cld
in
xchg
inc
pop
js
mov
sub
loopne
icebp
cmp
int
or
pop
mov
or
dec
jge
js
loop
and
pop
mov
or
cwtl
jno
adc
pop
repnz
pop
les
pusha
fiaddl
jl
bound
mov
mov
adc
adc
repnz
mov
lods
ljmp
imul
push
lret
fdivl
sub
push
jge
push
inc
inc
jmp
pop
and
push
pop
xlat
ss
and
xchg
sbb
es
pushf
xchg
adc
mov
and
jno
jecxz,pn
mov
jb
or
push
gs
and
jg
dec
jl
std
and
psubusw
xchg
and
push
sarb
in
insl
mov
aad
lahf
loopne
inc
test
jnp
sub
scas
and
mov
leave
adc
adc
mov
fidivl
pop
mov
jmp
out
cli
push
pop
fwait
cli
cwtl
dec
into
xchg
or
imul
lret
push
es
push
cltd
not
mov
ret
sub
icebp
movsb
pop
movsl
inc
adc
push
add
or
dec
jo
mov
in
imul
pop
out
outsb
mov
and
in
pop
in
ds
stos
out
lods
push
imul
mov
push
sub
cwtl
pop
pushf
imul
dec
gs
jge
sub
es
jb
or
pop
jmp
imul
inc
cs
je
push
or
gs
fs
cmp
aas
outsb
pop
roll
fucomi
lret
xor
test
jmp
xchg
xchg
mov
int
fs
push
cld
jle
mov
xchg
sub
andb
mov
or
movsl
mov
lds
push
movsl
aad
and
sub
lahf
xchg
mov
adc
nop
push
mov
lods
test
je
jmp
adc
xor
imul
sub
mov
in
test
sub
in
pop
jns
adc
jge
mov
adc
jo
into
test
sbb
stc
adc
std
fidivs
bswap
cmpsl
rolb
mov
cmp
test
add
sub
mov
out
out
jo
mov
ror
xchg
js
es
mov
mov
rclb
sub
dec
xor
xor
mov
jns
mov
daa
cmp
idivb
mov
stos
jmp
inc
roll
mov
hlt
into
outsb
andb
repnz
xchg
inc
fdivrs
fldt
call
sub
mov
sub
xchg
add
xorb
mov
adc
and
in
stc
pop
jp
setp
pop
xchg
shlb
mov
xor
pop
push
fcoml
imul
mov
pushl
xchg
in
pop
in
mov
cmpsb
shlb
outsb
insb
or
mov
and
cs
add
dec
cwtl
push
js
rdtsc
and
imul
cwtl
cmp
repz
mov
cmp
int3
sub
mov
push
dec
clc
push
icebp
add
ficompl
das
outsl
sbb
jg
cmp
jno
jb
mov
xchg
lcall
and
jp
xor
leave
adc
cld
test
les
in
icebp
push
or
lock
repnz
push
aas
lods
addb
into
pop
movsl
outsl
shll
fimull
jl
xchg
aad
fldl
inc
ds
inc
mov
fbld
mov
lods
jae
iret
or
pusha
xchg
pop
sbb
lock
pop
int3
fxch
or
mov
lret
sbb
dec
in
shlb
pop
popf
hlt
pxor
aam
inc
gs
scas
popa
das
adc
pop
and
mov
ficoml
mov
fs
popw
in
lods
cwtl
or
pop
mov
in
xchg
stc
mov
scas
adc
mov
lods
jle
sbb
leave
lods
inc
cmp
push
int
gs
mov
ret
mov
movsl
sbb
jle
syscall
sbb
fmuls
js
icebp
dec
jnp
xchg
xor
lds
mov
jl
pushf
sub
ret
mov
fmul
aas
or
push
jmp
push
cmpsl
adc
rclb
pushl
xchg
xor
adc
push
shrb
cmpsl
push
aad
push
or
popf
pop
and
and
dec
aad
out
dec
std
pop
pop
pushf
xor
adc
xchg
dec
add
or
fstpl
sti
jae
cmp
out
add
mov
insl
ficoml
movsl
std
pop
dec
add
repnz
fnstcw
pop
js
pop
shll
out
fs
daa
xchg
and
dec
lcall
cld
cwtl
xchg
cld
pop
lahf
stos
push
int3
and
sub
or
fiadds
xchg
movb
push
sbb
xchg
in
lret
test
lods
xor
jns
scas
push
nop
sub
scas
sub
insl
xor
ljmp
aad
xor
xchg
inc
jbe
stos
xchg
jp
jecxz
sbb
mov
gs
cmp
xchg
insb
adc
inc
pop
sub
inc
leave
cmp
jecxz
lock
mov
cmp
cmp
pop
sub
cmpsb
lds
sti
xor
inc
fwait
or
pop
lock
inc
dec
insl
mov
repz
push
outsb
aas
sbb
add
sbbl
mov
dec
fs
sub
loope
in
fiadds
mov
aam
loope
test
and
outsb
cmp
out
xor
icebp
ret
sbb
mov
fs
cs
pop
leave
pop
or
adc
push
into
cmpsb
call
pushf
push
cs
mov
fsubrs
inc
xchg
push
xlat
data16
or
add
xchg
xchg
lods
sbb
cmpb
scas
fdivl
cmc
loop
jge
dec
inc
sahf
cmp
add
mov
popf
push
adc
jno
push
mov
repnz
mov
lret
mov
add
mov
stos
icebp
mov
xchg
fdivp
xchg
mov
push
outsl
iret
mov
loop
push
inc
ficompl
mov
inc
or
inc
xchg
lea
mov
test
sub
push
sbb
negb
adc
dec
push
mov
enter
cmpsb
xorb
push
pushf
sub
xchg
sbb
xor
in
sub
mov
aam
push
scas
fidivs
mov
or
pop
in
cmpsl
xor
sahf
or
popa
aaa
push
leave
or
aaa
pop
sti
pushl
insl
fdivrl
inc
xor
jg
jle
lods
inc
popa
lods
fdivrl
mov
mov
inc
inc
faddl
cltd
push
fistl
cmp
iret
int
mov
jae
push
or
sti
lods
stos
das
aas
or
outsl
xorl
mov
rorl
popf
or
push
lret
push
ret
sub
test
pop
or
and
adc
xchg
adc
or
push
push
pop
push
add
insl
gs
mov
jns
cmp
aad
mov
jnp
add
int3
add
mov
xchg
mov
cmp
or
rcrl
or
call
and
lea
xchg
xchg
fistl
ja
out
adc
and
inc
push
mov
test
inc
pop
sub
in
cmpsb
enter
rclb
mov
enter
inc
push
cmp
lret
jg
pop
aaa
ret
lds
mov
mov
popa
jecxz
mov
or
mov
pop
pop
xor
icebp
and
pop
out
ss
sti
inc
pop
xorb
loop
shrl
mov
jne
or
pop
push
mov
jo
sub
adc
cmp
fcoml
push
inc
jp
mov
add
out
pop
mov
mov
loopne
mov
xchg
xor
test
push
in
jge
bound
popa
dec
mov
in
loop
adc
outsl
xchg
sbb
mov
loope
cmp
and
push
cwtl
mov
adc
cmp
push
lds
movsl
cmp
xor
jg
int
jae
mov
jne
sub
or
dec
lods
adc
xchg
leave
cli
xor
aad
sbb
xchg
mov
pop
pop
add
push
ljmp
shrl
jl
and
adc
push
cmp
xor
inc
sbb
mov
in
inc
bound
fstpl
cmp
scas
lock
xchg
push
sarb
sahf
cltd
roll
hlt
dec
adc
push
hlt
xor
cltd
xor
jbe
sub
pop
data16
jp
insb
fadds
sbb
xchg
fstpt
pmaddwd
jb
lds
or
ret
add
rclb
fmuls
icebp
int3
mov
mov
addb
into
fmull
jbe
fisttps
or
push
cwtl
push
lcall
mov
mov
dec
sbb
decb
shl
mov
adcb
adc
pusha
dec
xchg
fucom
cli
mov
dec
mov
pop
mov
pop
lahf
cmc
inc
loope
pop
jecxz
mov
enter
adc
jnp
lahf
pop
in
rorb
inc
dec
dec
fisubrs
push
jl
scas
jno
pop
push
push
fisubrs
rorl
hlt
mov
and
pop
xor
je
popf
or
cmp
out
ret
mov
mov
xor
hlt
sub
cmc
and
rorl
fldl
stos
ret
lret
insl
push
call
rdmsr
dec
popa
jbe
add
and
gs
out
lds
xor
test
fwait
inc
fldcw
mov
mov
js
ljmp
jmp
jno
leave
push
jp
jg
scas
jae
roll
inc
xchg
dec
adc
mov
xor
or
pop
int
inc
adc
fidivl
scas
and
lret
or
adc
adc
xchg
orl
mov
out
mov
cmp
xor
push
or
push
stc
loope
jne
pop
pop
push
aas
or
fmull
xor
xchg
jnp
jmp
push
cmp
jg
cli
mov
adc
adc
mov
cmp
pop
outsl
jae
xor
out
mov
push
sub
stc
movsl
sub
inc
gs
mov
push
cld
fcmove
nopl
jne
add
movsb
cmp
adc
in
mov
sbb
repnz
in
or
out
and
aam
and
pushf
and
lea
xchg
mov
lret
mov
sub
lcall
dec
jp
cltd
or
push
sub
add
leave
mov
daa
inc
js
mov
loopne
pop
imull
outsl
jl
fnsave
sbb
fisubrl
std
test
push
adc
nop
or
imul
insb
mov
bound
or
ficoml
das
and
xchg
test
addr16
jns
sbb
lock
adc
subl
sub
inc
loop
ja
addr16
lret
cwtl
cltd
mov
mov
xchg
pop
rclb
pop
imul
xchg
jle
pusha
mov
stos
clc
jno
push
xor
movsl
out
lea
mov
pop
jnp
and
mov
cmova
sub
outsb
mov
nop
mov
pop
and
pop
and
ds
pop
cs
icebp
mov
test
adc
cwtl
int
outsb
adc
cmp
inc
lcall
mov
ret
add
fs
dec
je
xor
cmp
iret
mov
or
or
movsl
call
mov
and
add
das
inc
addr16
pop
jno
bound
ljmp
bound
in
insb
das
xor
sbb
inc
jp
mov
popf
cmp
fs
lret
jnp
jnp
jg
sub
jp
push
xor
fstpt
popa
cmpsb
aam
dec
mov
iret
ffree
dec
or
jno
fstpl
inc
sub
xlat
jl,pt
cmpb
cli
das
adc
sbb
sub
les
subb
xchg
mov
ret
cmp
sarb
mov
repnz
sbb
pop
ret
sub
jp
or
gs
mov
or
cmp
lret
xor
addl
js
mov
in
std
add
cld
je
adc
mov
pop
scas
inc
or
rcll
out
rcll
mov
lods
daa
sub
popf
mov
xchg
sbb
scas
test
sbb
and
ss
xchg
xlat
inc
ret
test
jne
daa
dec
adc
loopne
movl
pop
jle
inc
pushf
ja
push
ja
jle
dec
pop
mov
mov
inc
shl
or
inc
insb
pop
pusha
adc
add
daa
adc
shrb
test
jg
dec
arpl
xchg
adc
pusha
xchg
movsl
mov
sub
jno
cmp
push
lods
outsl
xchg
fsts
pop
or
mov
or
mov
cmp
mov
push
jle
push
xchg
negl
decb
ja
movsb
cmpsb
dec
sbb
or
and
sti
inc
and
push
das
fiaddl
push
push
mov
ss
and
insb
xchg
xchg
leave
pop
jns
insl
pop
testb
mov
loop
loope
and
aas
aam
xor
and
nop
jle
xor
hlt
test
push
lea
mov
daa
aas
inc
mov
aam
mov
inc
adc
mov
xchg
in
inc
pop
shlb
mov
and
xor
sbb
pop
and
push
mov
jecxz
std
popf
mov
cmp
jb
mov
nop
sub
or
cmp
dec
mov
mov
xor
xchg
xor
imul
gs
rorl
repz
jo
insb
push
xchg
mov
adc
cmp
subb
mov
xchg
mov
icebp
pop
jnp
jge
pushf
mov
sarb
or
push
dec
xorl
fistl
jo
in
andb
arpl
jp
jl
aad
loope
and
orb
jnp
lret
push
popl
aas
sub
pop
test
popa
out
cmp
pop
jge
insl
aas
cmc
out
cmp
fwait
pop
addr16
mov
gs
push
dec
or
jp
push
mov
xchg
inc
jo
sbb
adc
adc
dec
bound
ljmp
mov
movsb
cmp
jo
in
les
jns
adc
or
inc
test
std
add
incb
sbb
nop
or
leave
push
pop
mov
jb
int
les
and
xor
fstpl
mov
repnz
mov
cmp
loope
or
aas
jmp
test
outsl
add
jns
mov
push
ljmp
sbb
insb
inc
outsb
jbe
shlb
mov
inc
xor
es
push
inc
xor
hlt
mov
stos
shlb
mov
shrb
sbb
mov
and
xchg
jb
jp
loop
out
ja
jecxz
adc
mov
jne
add
bound
loopne
cmc
ret
push
sub
pop
dec
xchg
sub
mov
mov
fstps
sarl
cmp
stos
subl
adc
js
sub
or
cmpsb
mov
mov
push
cmp
xchg
adc
sub
mov
mov
mov
shlb
negb
inc
out
push
jg
adc
pop
inc
stos
sub
jecxz
lea
jl
pop
test
pop
scas
and
adc
and
jbe
loope
pushf
add
fnsave
lahf
sub
movsb
push
cmp
idivl
dec
aam
fs
mov
nop
lret
adc
adc
lahf
and
xor
sbb
cmp
aad
xchg
test
clc
fdivs
es
and
movsl
aaa
push
stos
mov
aad
daa
pop
aas
adc
jbe
rcl
jmp
xor
ja
sahf
sub
movsl
fs
pusha
ffreep
sub
push
loope
dec
nop
sbb
dec
in
daa
xchg
xlat
jg
add
and
push
pushf
cmp
pop
testb
aad
cmpsb
mov
fisubrs
addr16
movl
add
adc
add
lds
mov
xchg
jb
es
inc
sub
pop
mov
cmp
mov
mov
dec
xchg
mov
shl
inc
xchg
and
ret
xchg
and
divl
sbb
add
sahf
inc
jmp
fcmovnb
or
mov
in
sarb
pushf
rcr
pop
test
adc
push
adc
mov
out
out
aam
xor
dec
or
ret
sub
mov
push
jbe
jae
adc
inc
sahf
jp
mov
shlb
outsb
dec
add
in
cmp
shlb
or
shll
mov
ret
and
pop
mov
insb
in
test
rcll
dec
mov
jmp
mov
cs
repz
inc
adc
mov
cs
fcmovne
jg
mov
xchg
xchg
adc
fwait
dec
mov
jl
add
loop
lahf
rcll
sub
cltd
int3
push
xchg
mov
insb
test
cmp
lret
add
mov
mov
int3
cmp
sahf
lds
dec
fimull
mov
push
aad
inc
mov
shrb
push
dec
inc
dec
shlb
inc
pop
push
adc
push
or
cli
mov
dec
push
push
mov
sbb
xchg
inc
addr16
jmp
sbbl
lret
ljmp
scas
not
or
out
dec
and
push
fldt
mov
cmp
dec
mov
movsb
mov
ret
pop
imul
jne
xor
xor
out
jecxz
mov
orb
adc
shrb
inc
outsb
in
xor
jnp
jecxz
popa
push
inc
adc
inc
lock
push
xchg
mov
test
lock
addr16
dec
and
inc
ds
outsb
or
cmp
movsl
or
cmpb
addr16
dec
imul
xor
fidivs
mov
inc
pop
frstor
decl
bound
outsb
push
sub
pop
and
inc
and
cmpsb
or
inc
into
rclb
inc
adc
adc
lea
js
dec
dec
shrb
dec
xor
lock
out
xchg
push
bound
lds
faddl
inc
mov
push
mov
clc
mov
add
stos
and
js
cmpsb
add
lret
jo
pop
ficompl
ljmp
cli
int3
jge
push
push
ret
into
or
aaa
push
add
fs
jno
pop
aas
jecxz
inc
or
cmp
and
imul
sbb
jno
xchg
sahf
mulb
push
sbb
jecxz
mov
sbb
outsb
sar
jno
insl
aas
divl
cmp
in
jecxz
stos
mov
ljmp
inc
xor
or
xchg
adc
in
fistps
stos
or
sbb
mov
mov
rorb
sub
sub
hlt
dec
xchg
rorl
dec
xchg
xor
mov
aaa
cmp
xor
xchg
ds
xchg
insl
cmc
mov
mov
xor
mov
mov
mov
xchg
and
push
and
or
out
pop
mov
mov
jb
lods
testb
adc
decl
jmp
xor
mov
dec
inc
loopne
or
loope
cmc
test
dec
or
cmp
pop
mov
in
and
pop
insb
jb
in
xchg
sub
fdivp
mov
xchg
fs
xchg
push
adc
out
pop
cmp
js
nop
mov
shl
out
push
dec
xchg
daa
dec
in
mov
dec
dec
test
xor
jb
int3
test
fwait
pop
adc
mov
iret
or
dec
lea
push
inc
adc
sbb
andl
pop
cmc
imul
and
mov
and
adc
scas
insl
dec
mov
addr16
sub
stc
adc
push
in
movsl
and
mov
fidivs
dec
aad
pop
inc
jle
push
sbb
arpl
ss
movsl
jb
adc
test
mov
mov
rcll
in
lds
inc
push
mov
jecxz
cmpsb
and
adc
mov
inc
dec
idivb
sbb
pop
add
aam
xchg
loop
aas
xchg
imul
aam
and
push
fistl
xchg
mov
xchg
loop
sti
pop
mov
lret
jmp
adc
cmc
icebp
test
jo
mov
push
jb
jo
push
pop
loop
leave
dec
and
mov
xor
icebp
dec
push
xchg
xor
push
mov
inc
je
or
sub
nop
stos
ret
mov
or
jnp
movsb
jmp
outsl
shr
shlb
add
and
sub
call
iret
adc
and
push
inc
cwtl
adcb
sahf
inc
das
jbe
out
push
icebp
inc
lret
jnp
jb
jmp
add
ret
inc
xchg
xchg
xlat
push
inc
mov
hlt
pop
cmp
stos
push
jl
cmp
nop
jl
xor
pop
xchg
je
in
adc
sub
xchg
fldt
out
aaa
sub
sub
call
pushf
adc
rol
sub
icebp
mov
imul
sahf
out
dec
in
inc
aad
mov
inc
aaa
jno
mov
in
mov
and
xor
sti
out
adc
dec
or
adc
or
jle
stc
add
inc
lods
jle
and
jle
mov
mov
movsl
jae
rorl
data16
mov
jp
mov
add
xor
and
sub
mov
loop
xor
dec
sub
mov
pushf
out
stos
or
pusha
rorb
icebp
jp
or
jno
inc
iretw
mov
retw
cli
repnz
mov
out
or
cs
in
xchg
jb
mov
mov
or
xor
mov
push
dec
mov
push
ljmp
cld
or
rorb
push
outsb
sub
cmp
mov
jnp
push
leave
adc
xchg
inc
cltd
xor
je
cmp
cmp
js
mov
inc
mov
fisubrs
xchg
push
xor
jo
jmp
sbb
ret
dec
pop
inc
daa
ss
inc
outsl
call
lods
mov
xor
pusha
push
int
mov
jns
in
dec
jmp
dec
xchg
xlat
pusha
loop
jle
lea
pop
scas
rcr
mov
aam
cld
jnp
jo
or
es
ljmp
rcll
dec
loope
aaa
movsl
pop
scas
es
jb
pop
mov
pop
cmpsb
das
jmp
int3
or
or
pusha
cwtl
xor
stc
sub
je
mov
stos
xor
xor
int
sub
insl
mov
cmp
xor
adc
sub
mov
fsubrs
push
xlat
dec
pop
sub
mov
adc
daa
inc
sbb
shll
push
ret
push
les
out
sahf
jge
lods
mov
rorl
sub
js
pop
lods
aam
nop
push
mov
roll
ljmp
mov
js
sbb
in
sbb
dec
in
ds
xchg
aam
imul
mov
loopne
xchg
push
xorb
push
push
sbb
or
mov
shlb
test
jge
push
das
sti
dec
in
lahf
in
subb
repz
push
insb
mov
cltd
jae
mov
dec
into
clc
cmp
stos
jmp
shlb
mov
rorb
add
and
movsl
inc
jo
jp
sar
xchg
adc
fbld
push
or
stos
shlb
in
cmc
test
push
mov
push
outsl
cmp
or
stos
mov
or
xchg
sub
xlat
add
lret
popf
adc
out
loope
or
shrl
test
fnstsw
rorb
jge
gs
pop
inc
cmp
int3
and
fcmovne
or
pop
iret
int3
mov
sbbl
ljmp
mov
mov
xchg
sub
mov
push
stc
stos
clc
mov
repz
or
sti
jmp
movb
inc
inc
sub
jo
or
cmp
jle
cmp
movsl
xor
fidivs
mov
or
dec
jmp
lret
mov
cmpsb
repnz
das
add
stc
insl
sub
xlat
push
ss
mov
scas
add
xor
push
cmpsl
out
xlat
sub
cmpsl
cld
cmp
leave
or
push
pop
cli
lods
push
inc
out
fsts
or
rorb
dec
lahf
or
stos
push
push
pop
movsl
jne
lret
enter
jmp
ficompl
out
dec
fs
sti
out
addl
cmc
push
rorl
sbb
daa
cmp
mov
cmp
ss
das
fprem
je
xor
pop
mov
cmp
cs
dec
or
rcrl
test
push
ja
push
add
popf
sub
ds
and
dec
sbb
insb
mov
push
movsb
jb
jns
icebp
les
pop
mov
mov
test
ror
iret
cmp
inc
int
xchg
shrl
insl
in
cmp
pop
lea
cmpl
aas
sub
fstps
scas
dec
lods
outsb
clc
jb
jecxz
push
and
or
out
inc
or
int
push
push
xchg
jbe
or
or
sub
xchg
pop
push
push
std
rcrl
mov
push
loope
xchg
jb,pt
add
popf
mov
push
and
in
dec
mov
xor
popf
push
stos
cmp
movsl
loop
push
inc
js
inc
mov
push
fmull
ror
jmp
mov
push
dec
mov
push
push
out
ss
cmp
sbb
pop
neg
add
mov
out
push
aam
jp
lret
or
sub
pop
inc
pop
dec
mov
loop
jb
pop
pusha
decl
jbe
ret
push
add
nop
mov
fsubl
bound
arpl
call
xlat
push
outsl
or
fldcw
insl
fisubs
dec
stos
dec
cmc
inc
pop
pushf
xlat
lret
jne
movsl
out
out
loope
dec
jg
add
push
mov
out
insl
cmp
push
sbb
addr16
cltd
sbb
pop
mov
lar
or
cmp
in
pop
movsb
fidivrl
sub
rdmsr
add
or
es
add
dec
xor
xchg
ficomps
xor
faddl
dec
mov
push
sar
cmp
dec
push
jne
sahf
push
dec
int
sbbl
enter
adc
imul
dec
loop
push
push
jns
mov
push
push
fmulp
push
xchg
sub
adc
insl
jns
add
adc
mov
cmp
repnz
popf
into
stos
pop
jno
lods
mov
rorb
in
stos
mov
sbb
fnstsw
fwait
scas
push
mov
in
icebp
sub
pop
sbb
push
adc
leave
outsb
mov
add
dec
ds
adc
sbb
mov
decb
sbb
cmp
fisttpll
jns
or
std
dec
mov
xor
popf
xchg
stos
or
fists
data16
jns
xor
movsl
pop
xchg
mov
cli
aad
and
push
lods
dec
push
sahf
lds
cmp
test
cmp
add
mov
sbb
mov
jg
cmp
xchg
sahf
cmpb
push
xchg
xchg
ss
mov
ror
outsb
imul
push
test
dec
add
sbb
mov
push
pop
push
popf
jbe
pushf
dec
cmp
jle
cmp
add
inc
rcrl
dec
icebp
dec
dec
scas
dec
into
out
xor
xchg
pop
js
pop
aas
xchg
inc
lahf
adcb
push
sarl
jo
add
xchg
ds
mov
or
imul
mov
stos
cmp
mov
jmp
pop
inc
inc
jne
lahf
push
stos
push
jns
in
into
nop
xchg
pop
sbb
cltd
js
push
adcb
aam
xchg
push
jns
push
inc
test
dec
mov
push
or
add
int
sbb
jns
mov
stos
pop
sbb
mov
int
ja
popf
sub
sbb
and
inc
adcl
push
rorb
cmp
scas
ret
inc
or
shlb
rcrl
test
or
out
and
sbb
popa
or
mov
mov
hlt
rcr
outsb
cmpsb
inc
cmp
mov
mov
outsb
dec
movsb
lret
or
loopne
push
push
imul
lds
or
test
hlt
stos
sbb
xor
xchg
in
xor
loop
xchg
or
or
jb
dec
enter
loope
rcll
xor
and
iret
stos
fbld
cmpsl
jp
outsb
mov
inc
sbb
jbe
nop
dec
push
cmpsl
inc
rcrb
jmp
lahf
loope
pop
mov
call
push
jns
dec
fldl
ret
mov
fimuls
imul
pop
or
mov
push
outsb
dec
hlt
fsubl
in
lea
ljmp
imul
movsl
ret
test
adc
jnp
mov
dec
pop
xor
enter
cmp
cmp
lret
xchg
outsb
push
mov
btr
roll
dec
testb
mov
fidivs
jg
push
add
fidivl
push
insl
add
jnp
or
and
icebp
dec
cltd
shlb
in
leave
icebp
jnp
mov
das
mov
out
mov
stc
push
jg
loope
pop
jmp
test
lods
bts
dec
dec
dec
dec
pop
dec
ds
xlat
adc
cld
push
pop
pop
je
pusha
addr16
sub
push
push
xchg
out
ficomps
mov
stos
daa
xor
dec
mov
movsl
mov
test
add
ds
fisubs
push
jo
dec
das
cld
sub
xchg
pop
ss
int3
sahf
mov
pop
outsb
dec
xchg
decl
pop
out
or
cs
sub
mov
std
inc
push
popf
xchg
ret
add
dec
imul
into
movsl
push
rorb
rcrb
sub
mov
ret
mov
cmpsb
cs
hlt
mov
xchg
adc
xchg
jns
inc
es
or
xchg
iret
mov
jmp
outsl
ljmp
push
cmp
filds
les
pop
lea
inc
pop
scas
xlat
and
pushf
cwtl
insb
add
add
add
or
xchg
lcall
test
daa
movsb
lods
pop
scas
popf
jge
xor
ret
test
dec
jo
fimull
push
mov
pop
gs
sbb
adc
jns
xchg
pop
jl
push
jne
inc
sub
push
in
jnp
sbb
xchg
xlat
ret
xchg
push
jo
cld
xchg
mov
mov
xchg
fisubrl
into
mov
lcall
mov
xchg
push
inc
out
xor
sbb
sub
fbld
pop
lock
xor
dec
es
sub
jp
scas
loopne
ror
lods
es
pop
add
cmc
mov
push
in
adc
push
lods
loope
mov
movsb
adc
push
push
lret
xor
xchg
aas
lods
cs
mov
ljmp
mov
pop
vpshlq
fists
pop
popa
cmp
mov
sbb
push
inc
inc
movsb
push
add
push
adc
enter
push
adc
mov
cmp
inc
stc
push
imul
add
adc
outsb
divb
and
lock
mov
nop
in
es
jg
pop
out
push
jge
cltd
dec
rclb
pusha
adc
push
jnp
aas
incl
loope
xlat
movsb
dec
push
inc
xor
int
out
xchg
xor
xchg
push
lea
lcall
push
int
and
scas
xchg
cs
pop
in
fildl
leave
add
adc
pop
in
add
stos
pushf
sub
loope
jg
das
and
lret
mov
adc
sub
xchg
cmp
stos
add
inc
adc
ret
mov
dec
jge
jp
sbb
xchg
dec
scas
cmp
cmpsb
mov
jl
push
pop
pop
push
and
xchg
jp
lea
xchg
push
inc
cmpsl
lret
xor
stos
cs
sbb
jge
cmp
and
push
dec
xor
roll
call
dec
loope
rorb
scas
clc
pop
or
add
cltd
in
lea
into
sbb
mov
flds
cli
or
mov
inc
js
sti
pop
hlt
movsl
xchg
adc
xchg
dec
sar
test
xlat
xor
pop
push
dec
and
mov
cmc
inc
pop
adc
int3
jle
or
repz
ja
js
rorb
aad
loopne
movsb
dec
imul
xchg
fidivs
sbb
fidivs
stc
lahf
insb
xlat
inc
mov
in
push
js
pop
sub
inc
or
sarb
gs
push
jo
push
icebp
adc
shlb
xchg
mov
inc
jmp
fwait
and
and
lcall
dec
inc
cmp
ficoms
loope
daa
in
jbe
nop
jp
rcl
imul
sbb
repnz
out
sub
inc
inc
ds
sbb
int
das
outsb
mov
add
or
pushf
xchg
mov
or
adc
cmpsl
and
mov
fnsave
cmp
repz
sarb
stos
movsl
je
pop
cmp
or
in
add
out
cs
testl
mov
out
xor
xchg
cmp
pop
hlt
inc
inc
xchg
sub
push
scas
in
jb
decb
imul
out
add
cmp
pop
push
dec
pop
ret
ja
bound
inc
dec
pop
mov
in
addr16
aas
or
in
pop
stos
jno
jnp
icebp
xchg
faddp
cmp
icebp
dec
in
mov
inc
pop
popf
add
adc
rorb
push
ja
xorl
xchg
sub
fbld
lret
dec
sbb
mov
cld
xchg
out
mov
int
fcoml
in
mov
mov
or
cmp
pop
inc
mov
sbb
and
xor
mov
ret
sub
push
shrb
add
scas
jb
sub
rorl
xor
icebp
pop
adc
sub
fdivrl
outsl
sub
pop
jno
jb
jle
xor
push
cwtl
or
std
cmpsl
jge
pop
jge
push
cs
xchg
and
sahf
mov
outsl
shlb
and
xchg
or
cmp
sbb
inc
outsl
mov
mov
or
pusha
mov
negl
push
sbb
mov
cmpsl
sub
cmpsb
shl
mov
cs
ret
popf
sbb
push
cmp
add
sub
push
fwait
or
cltd
sub
push
sbb
xchg
and
jge
loop
lods
cltd
rcrl
addl
pop
cmp
mov
in
mov
mov
addr16
and
repz
or
cmp
cmpb
inc
sbb
jne,pn
or
or
jae
enter
or
nop
or
xor
add
inc
sub
stos
call
or
fiadds
popa
ds
popf
aam
call
push
or
clc
or
or
push
incl
out
mov
push
or
int
mov
ficompl
rol
in
loop
dec
adc
ret
iret
pop
jecxz
and
xor
icebp
xor
ds
jo
mov
scas
leave
insl
pop
lret
imulb
in
popf
jne
dec
inc
xchg
mov
imul
jns
jns
cmp
mov
dec
test
popa
stos
aam
pop
hlt
cmp
push
sbb
push
mov
outsb
sbb
pop
add
mov
adc
movsl
mov
and
std
cmp
push
jge
and
std
cmp
adc
adc
lret
mov
pop
decb
pop
enter
pop
cmp
or
sahf
inc
jle
xchg
mov
jl
push
test
xor
or
lahf
scas
fnsave
cli
cmc
add
mov
cmc
fsubr
loope
ret
mov
test
scas
repnz
pusha
int
jno
xor
xchg
adc
fsts
test
adc
dec
jle
sti
nop
mov
add
pop
jp
lret
inc
mov
pop
icebp
xlat
cld
mov
test
fcomp
mov
jbe
adc
hlt
or
out
dec
inc
jo
jbe
sub
lock
leave
lcall
cmpsb
daa
std
xorb
movsl
xchg
rcll
inc
lods
int
pop
mov
xchg
insl
xchg
lcall
jb
aaa
xlat
mov
push
fistps
jp
aaa
adc
jmp
mov
fsubp
scas
mov
lahf
test
pop
xchg
cmp
and
jo
std
jno
xchg
and
dec
repnz
sbb
cmp
lcall
nop
fldt
xor
sbb
push
pop
mov
test
sbb
cmp
aad
gs
inc
dec
sub
adc
das
mov
inc
xchg
jle
mov
mov
jns
jp
in
cmp
mov
ds
mov
mov
cmp
fbld
movsb
mov
rorb
cmp
push
push
sub
cli
pop
ljmp
dec
adc
xor
sbb
jmp
inc
sub
mov
out
pushf
jecxz
arpl
push
jb
push
xchg
mov
cmp
icebp
call
mov
xchg
xchg
cmc
sbb
xor
fcoml
insl
add
and
inc
imul
push
shll
sbb
add
mov
mov
mov
movsl
dec
mov
mov
or
or
xchg
out
int
mov
dec
xor
scas
popf
pop
cmp
jne
xchg
mov
ja
mov
insl
mov
rcrb
adc
icebp
push
mov
jl
add
stos
dec
and
in
inc
bound
add
jge
in
push
jle
or
inc
sahf
pop
lds
pop
inc
sub
xor
lea
inc
push
or
xchg
mov
icebp
in
out
cmp
jne
push
enter
push
dec
mov
scas
lahf
mov
das
ret
inc
loopne
cmp
test
mov
jo
push
mov
pop
or
sahf
sbb
pop
jp
nop
loope
pop
lds
mov
int
push
test
mov
or
push
jge
ja
jbe
pop
repz
push
popa
sub
and
and
add
dec
in
lods
aad
sub
cmp
dec
inc
clc
dec
xor
std
jno
mov
mov
mov
lea
mov
jl
cmp
mov
dec
xchg
inc
in
jnp
or
pop
popf
jns
jecxz
inc
or
or
pop
shrb
dec
sbb
pop
or
aam
cltd
ljmp
popa
sbb
nop
sahf
imul
add
inc
dec
rcll
pop
push
loopne
lea
push
sub
lahf
or
push
mov
movb
lds
mov
or
and
je
stos
sbb
fisttps
pop
or
insl
outsb
nop
push
repnz
fldcw
addr16
and
or
push
in
data16
fs
ds
jno
xor
dec
sub
mov
fistps
push
pop
fwait
icebp
insb
in
xor
movsl
sbb
xchg
movsb
fistps
psubsb
ljmp
jge
ljmp
pop
cmp
mov
push
loopne
pop
push
mov
inc
outsl
popa
icebp
push
jp
stos
add
shrl
pop
add
adc
pop
push
imul
xor
and
movsb
cmpsb
push
cmp
int3
mov
inc
lea
rclb
sbb
popa
repnz
outsb
lret
mov
pusha
daa
adc
js
lock
fidivrl
mov
jmp
in
push
fstps
adc
movsb
dec
xor
pop
pop
xchg
loope
xor
orb
icebp
lea
mov
dec
in
cmp
jno
mov
inc
fs
bound
and
sti
sub
cmc
jecxz
sub
mov
mov
cmp
push
push
outsl
mov
cmp
mov
pop
adc
test
outsb
xor
push
jp
and
push
push
pop
adc
and
std
cmp
and
mov
ja
out
loop
adc
cltd
sbb
pushf
or
stos
aam
jne
mov
add
out
mov
inc
in
rclb
test
mov
push
fsts
pushf
les
xor
pop
xor
xor
loopne
fisubrs
dec
xchg
sub
dec
jb,pt
dec
mov
mov
daa
sahf
cli
xlat
or
sysenter
lret
mov
sub
xor
mov
mov
mov
cmpsl
lret
fstps
mov
xchg
push
lcall
pop
ror
out
movsl
popf
mov
arpl
leave
mov
cwtl
push
sub
jbe
leave
or
xchg
push
dec
in
dec
in
mov
add
xlat
jle
stos
test
inc
aam
movsl
lods
jb
adc
xchg
adcl
or
mov
mov
test
mov
rorb
shll
cmp
and
add
inc
and
xchg
mov
lds
push
sub
test
test
dec
aas
mov
or
sub
xchg
fistpl
hlt
fcmove
pop
pop
push
cltd
ret
and
xchg
cmc
out
or
and
or
icebp
imul
sti
aas
test
pop
imul
dec
xchg
and
adc
loope
fdivrl
jne
jmp
xor
data16
cli
js
sbb
push
movsb
push
pop
pop
xchg
jp
test
mov
sbb
sbb
push
lock
fildl
pop
push
adc
fbstp
adc
jg
adc
push
enter
imul
std
pop
adc
test
inc
stos
int3
fsubrl
lahf
add
inc
ss
lods
cmovne
ja
xchg
fstl
nop
dec
xor
fyl2x
dec
sub
fmuls
adc
cmpsb
lods
jb
leave
test
pop
cmc
and
add
movsb
jecxz
je
in
sub
add
xchg
and
mov
or
cmp
stos
push
imul
nop
pop
scas
test
mov
lds
addr16
int3
cmp
inc
sahf
lcall
out
or
aas
inc
sub
js
imul
testl
xchg
sbb
inc
dec
mov
movl
insb
sub
fdivl
cmp
xchg
scas
leave
popa
icebp
loop
sbb
enter
dec
push
out
test
test
repz
xor
shll
fwait
enter
mov
sbb
or
dec
sbb
add
jg
jbe
lcall
test
loop
mov
outsb
jp
lret
pop
push
or
and
dec
mov
pop
mov
jp
into
or
mov
data16
sahf
push
sbb
es
cmp
fwait
and
mov
fsubrs
mov
aas
or
add
fisubs
push
dec
xchg
xorl
mov
outsb
sti
bound
xchg
fcmovu
mov
test
pop
push
imull
jo
jle
jnp
sub
add
mov
jnp
inc
adc
or
pop
jae
and
or
pusha
loop
pop
dec
and
rorb
fadds
pop
jmp
aaa
mov
test
movsl
mov
cwtl
scas
into
cmpsl
shll
push
cmp
cltd
cmp
cmpsb
test
adc
push
sub
ss
dec
sar
jo
in
and
movsb
and
and
aaa
outsl
into
push
aaa
dec
inc
pop
add
push
mov
into
cmp
mov
aas
inc
and
fdivl
mov
or
lcall
jp
movsl
ror
movsb
rolb
push
push
and
les
adc
push
cltd
add
add
mov
pop
mov
int3
mov
sbb
test
mov
sbb
push
inc
or
jbe
das
mov
lahf
lahf
aas
push
out
dec
jl
test
adc
outsb
dec
lea
mov
pop
mov
jp
lret
mov
rcl
and
mov
aas
mov
jg
jbe
pop
js
popf
xchg
xor
into
mov
mov
lods
mov
add
sub
ficomps
push
push
daa
xchg
push
sti
dec
mov
mov
push
dec
adc
xor
mov
iret
out
mov
jecxz
bound
pushf
xor
pop
push
or
mov
jno
inc
out
jmp
loop
jbe
scas
mov
pop
sub
xor
inc
cwtl
subb
inc
cmpsl
add
xor
xlat
cmp
aaa
imul
and
dec
jecxz
add
ficompl
js
xchg
or
push
adc
imul
lret
test
xchg
cmpsl
sbb
cli
std
int
data16
scas
xchg
adc
or
mov
push
outsb
and
mov
cmp
stc
mov
or
mov
and
sbb
inc
call
push
jo
insb
imul
mov
lds
outsb
add
mov
xor
inc
mov
xchg
mov
mov
inc
push
mov
inc
sti
jns
in
adc
das
push
add
cmpsl
pop
scas
imul
sub
cmpsb
ret
leave
fsts
pop
sbb
xor
xor
jne
ljmp
push
mov
fildl
xlat
sarl
lcall
jmp
add
mov
js
jbe
cs
dec
push
cmc
add
jle
mov
inc
push
push
es
or
adc
fsts
xor
mov
into
dec
outsl
dec
adc
fs
add
add
xchg
sbb
cmp
mov
imul
jle
xor
scas
lods
cld
outsl
insb
jb
sbb
add
add
xor
imul
push
xchg
adc
mov
ss
or
jp
inc
pop
sbb
rcr
orb
daa
loope
shll
or
fidivrs
leave
movsb
int
das
add
mov
jmp
aaa
mov
rcll
xchg
or
je
or
hlt
pop
push
in
ljmp
lock
outsb
pop
xchg
mov
and
es
scas
inc
cmp
test
push
lds
imul
aam
mov
repz
add
dec
and
fcmovu
roll
jp
cmpsl
inc
jno
loope
sbb
mov
gs
cmpl
lock
imul
mov
mov
lahf
mov
insb
adc
jge
lock
and
push
jnp
hlt
enter
push
sub
push
or
mov
add
or
mov
inc
int3
mov
lea
cltd
push
cmp
pop
pop
adc
mov
and
movsb
cwtl
and
ds
out
sub
ss
jmp
movsl
inc
rcrb
fisttpl
push
xor
popf
sbb
js
movsb
xchg
cmc
cmp
add
imul
hlt
fs
movsl
bound
push
and
lahf
and
xchg
inc
inc
add
stc
inc
jne
les
insl
movsb
out
jb
imulb
leave
test
icebp
je
clc
pop
int
add
rcll
push
cmp
xorl
mov
and
cmp
adcl
arpl
mov
incb
add
jne
icebp
inc
push
aam
or
push
mov
sbb
frstor
inc
or
outsl
mov
dec
sub
incb
lods
jb
clc
mov
dec
mov
push
addl
push
cs
xor
dec
gs
popa
and
fildll
sub
loope
xchg
bound
addr16
jle
repz
mov
xchg
inc
int3
in
mov
stos
pop
lock
jo
addr16
clc
fmulp
pusha
and
push
into
lods
test
lds
pop
adc
fldl
inc
dec
jmp
inc
scas
enter
push
insl
imul
ret
mov
hlt
loope
push
stc
jge
cmp
xor
gs
push
aas
pushf
sbb
pushf
cmpsb
or
movsb
or
cmpsb
or
jp
jb
pop
movsl
mov
mov
rcrb
or
mov
jae
loopne
loope
outsb
push
add
or
call
sbb
mov
cs
cmpsb
mov
mov
pop
push
andl
mov
adc
inc
jne
insl
inc
cmp
jecxz
mov
jle
aam
or
punpckldq
pop
stos
xchg
push
xchg
cmp
sahf
push
pop
bound
out
mov
aas
pop
dec
aad
adc
scas
out
rcll
pop
xchg
sti
fcoml
inc
jnp
hlt
or
pop
mov
test
xor
jecxz
mov
fcmovu
push
orl
int
sbb
sbb
setle
cmp
pop
loope
ficomps
add
or
scas
push
mov
or
imul
das
arpl
sub
mov
ja
push
and
xchg
push
mov
mov
cmp
fimuls
arpl
in
jbe
lret
cs
fstl
push
jae
inc
das
sub
cmpsb
push
and
mov
cmpsb
jo
adc
sub
push
stos
das
outsb
rclb
cmp
lds
or
rol
mov
lret
pop
inc
push
push
pop
xchg
hlt
out
xchg
sbb
inc
or
jno
jnp
imul
mov
imul
mov
ret
adcl
add
movsb
adc
sahf
cmpsb
mov
ds
or
scas
pop
imul
js
mov
dec
mov
cwtl
dec
or
mov
jno
jb
xor
pop
lcall
and
or
loop
int
das
jp
dec
add
push
push
jae
lods
jns
push
cmpsl
push
push
shl
icebp
jg
inc
and
std
adc
out
pushf
push
push
and
mov
mov
mov
mov
mov
inc
stos
nop
push
add
js
lods
in
ss
ljmp
nop
inc
inc
jbe
cmp
jns
xor
add
xorb
lret
sbb
ficompl
xchg
adc
movsl
call
adc
adc
jmp
lods
ja
cwtl
movsb
pop
jno
or
jo
ret
dec
lods
in
jo
lret
cmp
mov
shrl
xchg
or
fldcw
shrl
inc
and
mov
push
or
mov
mov
insl
mov
push
jmp
pop
enter
aam
test
add
stos
pusha
jne
add
pop
movsb
add
pop
cmp
add
xor
jne
sbbl
push
mov
cmp
jmp
sbb
mov
jl
inc
outsl
pop
mov
inc
dec
lcall
mov
daa
fistl
or
cmp
mov
test
ds
mov
rorb
inc
fisubl
mov
xor
xchg
test
mov
dec
xor
outsl
jb
adc
dec
movsb
mov
daa
pop
es
xchg
lret
adc
xchg
mov
iret
lcall
inc
data16
cwtl
push
jns
scas
push
lds
mov
cmp
insb
mov
adc
loope
push
cs
mov
push
scas
faddl
out
fdivrp
jp
cmp
or
add
jae
shrb
dec
cwtl
dec
enter
pop
mov
sbb
inc
pop
outsl
addr16
push
dec
xor
out
ds
or
iret
inc
subb
xor
pusha
or
or
popa
iret
insl
xchg
ss
mov
push
cmp
shll
movsl
cmpsb
push
shrb
in
pop
hlt
adc
mov
mov
cmp
mov
out
pop
rorl
mov
pop
xor
andb
aas
jb
jns
mov
mov
leave
leave
pop
and
shr
or
cmp
test
inc
pop
fmull
lret
mov
fisttpl
cs
pop
pop
or
fucomi
pop
out
in
scas
data16
xchg
cli
test
out
xchg
jge
adc
push
mov
mov
cld
loopne
push
sbb
xor
mov
xchg
push
imul
adc
push
mov
pop
inc
das
sbb
mov
ficoms
xchg
jmp
shrd
out
push
cmp
xor
inc
cmpsb
cmp
xchg
fildll
not
int3
cltd
adc
mov
cmp
dec
jg
insb
enter
gs
arpl
push
js
imul
cmp
sbb
cld
or
test
pop
xor
mov
mov
add
xchg
jg
cltd
jae
sti
inc
jl
js
and
ja
push
add
rorl
jne
fidivs
ffreep
mov
std
sub
push
jno
or
or
inc
dec
test
adc
lret
sbbb
into
int
shll
xchg
es
mov
mov
in
jne
das
nop
fdivrl
push
int3
lods
mov
xchg
into
cmpb
cmc
adc
sub
fnstsw
cmp
dec
xchg
xor
xor
stos
pop
adc
movss
ret
jge
mov
mov
jb
mov
mov
inc
imul
inc
bound
dec
xor
xchg
mov
insb
pop
mov
jmp
int
lret
pop
xchg
lock
inc
cmp
add
in
faddp
jno
cmpsb
and
enter
mov
adc
pop
xor
push
popf
lock
imul
jo
or
cltd
or
push
call
fcmovb
mov
pop
dec
iret
filds
xchg
std
mov
or
xor
js
mov
cmp
and
int3
leave
adc
inc
cli
insl
out
jle
sub
add
sub
into
mov
push
inc
and
fucomi
lods
jp
and
je
popa
xchg
jp
and
push
mov
pop
sub
cmc
fs
adc
mov
push
jg
inc
lock
sub
les
les
xor
jnp
pop
mov
cmp
repnz
mov
inc
adc
xor
lcall
mov
add
mov
mov
adc
nop
andb
push
or
adc
xchg
rcll
sbb
arpl
frstor
ljmp
add
pop
rcr
pop
add
test
sub
and
test
xor
fcoms
test
or
sub
xchg
dec
add
test
mov
sbb
daa
lds
lds
ljmp
push
xchg
mov
jg
aas
inc
dec
mov
fstps
and
or
in
mov
dec
mov
divb
jge
add
push
fisubrs
push
es
popa
loope
jge
lds
push
push
pop
and
call
fnstcw
jp
roll
xor
stos
ret
pop
cltd
xchg
cmp
dec
pop
xor
jg
jl
dec
cmp
popf
lods
pusha
insb
lods
dec
inc
push
orl
and
in
cmpsb
xchg
pop
cmpsb
loop
loope
xchg
inc
inc
cmpsb
sbb
adc
test
push
jb
aaa
popf
test
push
fisttpl
or
dec
jg
insl
sbb
xor
sbb
inc
in
sub
movb
fildll
inc
or
xchg
or
pushf
mov
inc
jns
push
mov
insl
sub
xor
imul
lahf
jno
mov
test
lret
xorb
and
sub
fs
and
inc
lods
out
out
sbb
and
jb
decb
clc
icebp
imul
mov
or
dec
adc
sub
cmpb
imul
sbb
into
add
into
stos
mov
dec
inc
pop
xchg
mov
or
cmp
insb
test
lret
test
jp
aam
jp
mov
int3
push
roll
jp
es
push
add
mov
mov
imul
repz
inc
repz
dec
sub
scas
cmp
xchg
shll
inc
clc
pop
test
or
clc
call
push
fcompl
rolb
dec
xor
mov
nop
push
mov
icebp
imulb
xchg
sub
fisubrs
idivl
adc
stos
pop
sub
mov
mov
cmp
stos
pop
or
aas
negl
inc
add
sub
insb
loope
sbb
sbb
subl
movsb
push
fcompl
popf
push
stos
or
mov
xchg
adc
cmp
out
mov
jge
push
stos
xor
pop
stc
mov
fildll
jle
xor
in
popf
inc
push
inc
cmpsl
divb
pop
and
fisubrs
or
sub
xor
inc
pushl
adc
xsha1
cmpsb
push
jmp
out
sbb
imul
movl
mov
or
int3
xchg
and
mov
sar
push
rolb
lret
dec
ficomps
aaa
cmp
jno
pop
mov
jo
mov
shr
mov
loopne
test
fsubrl
or
mov
pop
cmpsb
ret
les
inc
mov
or
repz
test
cmc
iret
ror
ret
mov
dec
mov
mov
nop
dec
mov
push
push
dec
data16
dec
adc
ss
imul
dec
jp
test
xchg
cmp
int3
push
cmp
adc
or
cmpsb
push
ret
test
jle
and
mov
fs
in
jo
pop
les
xadd
pop
into
mov
sahf
arpl
inc
data16
cmp
aad
adc
fnsave
or
cmp
push
lret
sbb
mov
repnz
loop
leave
mov
lods
push
inc
in
cmp
xchg
push
mov
push
in
fsubs
add
arpl
in
cmp
andps
and
or
shrb
aad
loopne
push
xor
push
or
and
cmp
dec
pop
mov
mov
inc
and
sbb
std
bound
cwtl
frstor
xchg
mov
int3
mulps
sub
add
sub
stc
int
pop
push
fs
ror
nopl
mov
mov
dec
xchg
rclb
add
mov
sti
xor
lret
sub
sbb
dec
or
dec
fiadds
fs
bound
sub
mov
sub
mov
jo
push
cmp
mov
jne
xchg
dec
jle
aad
mov
xchg
stc
mov
push
or
lea
cmpsb
jbe
mov
iret
pop
mov
push
xor
mov
pop
icebp
pop
adc
ss
iret
bsf
or
cltd
test
outsl
push
mov
cmp
dec
pop
frstor
cmpsb
clc
movsl
loop
cmpl
aad
daa
dec
stos
fstpl
push
or
cmpsb
imul
mov
adc
jne
cmp
adcl
fwait
jns
mov
pop
and
ficompl
xchg
fisubs
popf
es
mov
ja
mov
mov
mov
fstps
and
in
out
mov
insb
repz
mov
jecxz
imul
or
fdivs
cmp
sub
pop
jle
jle
mov
icebp
cli
cli
sbb
xor
pop
xchg
cmp
or
jp
loope
dec
jge
les
cmp
push
pop
lock
lods
jp
adc
or
cmp
jp
lods
outsb
lods
cmp
xchg
push
leave
insl
pop
ret
outsb
ss
jle
je
outsb
sarb
insl
or
je
pusha
xor
sahf
jnp
jle
or
sub
loop
jae
dec
mov
dec
mov
dec
adc
inc
insb
and
in
add
and
sbb
int3
mov
mov
fs
dec
nop
push
xor
pop
popf
jmp
insl
shlb
arpl
cmpsb
adc
xchg
mov
lcall
lds
pop
push
jmp
and
in
push
stc
xchg
push
je
jo
push
mov
mov
dec
fldenv
cmp
faddl
lock
xchg
jle
fwait
push
arpl
mov
xor
ds
mov
movsl
fs
int3
es
mov
xchg
adc
pop
cld
outsb
push
test
inc
mov
sub
push
cmp
lds
daa
cmp
sahf
sbb
std
jno
xchg
bound
shr
xchg
insl
and
sbb
dec
outsb
push
addb
sub
clc
je
and
mov
cmp
out
cmp
popf
sub
imul
scas
or
or
push
scas
xlat
dec
cmp
cltd
pop
add
pop
ret
mov
pop
pop
lds
mov
add
dec
cli
mov
xor
cmp
outsl
mov
xor
scas
data16
mov
mov
popa
pop
fmull
xchg
decb
cmp
notl
enter
or
les
push
arpl
sahf
dec
sub
pminub
lret
mov
cmp
adc
insl
ficoms
orb
gs
je
jae
bound
dec
add
cmp
mov
mov
mov
jmp
inc
popa
xchg
xchg
push
repz
xor
lds
adc
iret
inc
mov
lret
add
inc
inc
xor
shlb
aad
out
sahf
cmp
popa
mov
adc
push
mov
mov
and
imul
leave
lahf
sahf
int
cmp
push
add
jle
addr16
or
dec
add
xchg
cmp
lret
cmpsb
pusha
cmp
cmp
cmp
xchg
rcrb
xchg
aad
ficomps
and
dec
jp
push
mov
ja
xchg
cmp
xchg
loopne
sbb
stc
mov
movsl
push
inc
xor
dec
rorb
fiadds
jns
mov
mov
mov
fstp
jmp
inc
fwait
dec
adc
or
push
mov
pop
std
mov
out
in
mov
add
test
cmp
mov
orb
enter
inc
cmp
adc
jmp
inc
and
aam
mov
mov
ljmp
test
popa
aaa
cld
mov
sar
xchg
cmpsb
shrl
iret
int3
and
xor
jg
adc
cld
dec
scas
inc
or
imul
fcmovnbe
mov
stos
mov
sbb
xorl
xchg
aad
or
and
cmpsb
addr16
jl
jmp
jecxz
sbb
out
push
mov
fadds
jp
adc
xor
xor
xor
xor
xchg
roll
xchg
inc
int
enter
in
movsl
adc
push
mov
and
mov
push
lods
imul
pop
jg
mov
xchg
push
adc
imulb
or
or
fiaddl
dec
push
stc
lea
cmp
and
adc
push
in
sbb
push
popf
add
fldt
sbb
shl
dec
add
xlat
or
cmp
xchg
imul
xlat
enter
scas
or
sti
ja
xchg
xchg
and
mov
add
cli
in
xchg
xchg
inc
int3
mov
mov
sti
pushf
daa
aad
jno
in
pop
adc
test
aam
scas
divl
sbb
mov
out
in
adc
mov
pop
mulb
push
xor
or
mov
ss
icebp
in
arpl
or
mov
aas
cmpsb
ja
xor
lret
adc
fnstsw
mov
and
test
mov
xor
or
sub
adc
xchg
and
sub
inc
mov
jmp
xor
inc
and
cmpsl
jae
lret
mov
loop
push
imul
cmpsb
xchg
fwait
ljmp
xor
cmp
popa
mov
ficomps
add
mov
cmc
sub
loopne
xor
push
insl
sti
xchg
and
dec
fcomps
xchg
xor
mov
xchg
add
or
fcoml
sbb
xchg
repz
cmp
scas
les
mov
sbb
mov
push
pop
sbb
xor
cmpsl
mov
ljmp
jl
push
mov
loopne
fisttps
lds
ret
clc
stos
mov
jg
adc
cmp
and
or
test
clc
dec
in
jg
imul
adc
adc
loop
dec
imul
mov
mov
andl
xor
xchg
jno
int3
bswap
aas
pop
hlt
out
cmp
jl
xchg
insb
out
sbb
pop
sti
lcall
or
jbe
loop
mov
and
inc
flds
pop
cmp
insl
xor
cwtl
xchg
dec
addr16
mov
push
jle
push
ret
push
xchg
jnp
push
push
daa
cmp
mov
pop
cmp
dec
inc
loop
push
and
and
mov
cld
sti
jge
dec
je
mov
outsl
rcr
sub
cmp
adc
adc
int
movsb
or
or
gs
or
notb
out
es
inc
sub
push
or
xor
loop
cmp
fdiv
imul
xchg
jb
shr
jne
jmp
test
push
jp
fwait
std
hlt
roll
sarl
out
pop
push
outsl
shrl
mov
in
addr16
inc
sarl
xlat
adcb
rorb
add
sbb
movsb
addr16
cs
sub
ret
mov
bound
cld
subb
adc
add
add
outsl
lahf
dec
outsl
and
pop
rolb
das
xchg
pop
adcb
cld
dec
xchg
icebp
dec
pop
push
sub
adc
aam
jl
pop
sub
jnp
xor
arpl
bound
bound
mov
js
push
push
dec
inc
es
jo
fldenv
pop
or
aad
lods
xor
xlat
sbb
push
cmp
fildll
or
xor
jnp
add
imul
sahf
pusha
mov
and
cmovs
mov
fnstcw
xchg
mov
bound
push
loope
adc
out
mov
jne
shrb
shll
scas
xor
and
test
push
dec
shlb
cmp
aam
jmp
arpl
xchg
pop
mov
xor
cltd
dec
into
int
std
mov
lods
lock
xor
xor
mov
and
pop
cmpsb
fstpt
jl
jb
popf
jne
cmp
inc
jbe
sub
ret
xor
addr16
xchg
mov
mov
popf
jnp
dec
push
and
push
jbe
insl
ret
imul
out
iret
xchg
fwait
shll
mov
add
lods
loope
insl
jmp
mov
out
insb
adc
jg
cwtl
dec
bound
mov
cmpsl
ljmp
and
ss
idivb
bound
jg
into
xor
push
add
mov
and
adc
or
jnp
ss
scas
dec
cmp
jmp
sahf
adc
inc
loopne
pop
imulb
stos
mov
xchg
jle
lods
inc
mov
or
and
add
jns
xlat
movsl
addr16
jb
in
sahf
gs
into
loop
mov
inc
lods
sbb
mov
cmp
sub
or
out
loope
sbb
gs
dec
sub
jle
imul
daa
arpl
dec
push
jb
int3
or
inc
xchg
das
push
les
ljmp
pop
push
or
push
or
cli
push
xchg
mov
jge
or
inc
push
inc
add
or
xlat
or
or
mov
xlat
push
add
cmp
mov
out
jnp
fsubrl
xor
and
inc
pop
insb
movsl
pop
cli
xchg
fcmovbe
sarb
and
sahf
ret
cs
jecxz
cwtl
push
sahf
xor
je
outsl
mov
pop
jl
mov
and
jl
add
jb
xchg
ret
dec
clc
or
xor
mov
cmp
in
xor
mov
data16
push
shlb
jmp
adc
cltd
dec
test
lods
and
add
insl
popf
adc
not
add
and
adc
or
dec
push
addr16
in
pop
adc
movsb
into
xor
mov
ret
push
push
aaa
xor
xchg
pop
and
xchg
push
vunpckhps
cmp
ja
mov
shl
nop
out
push
lds
xor
xor
lret
clc
sbb
xchg
ja
lea
lret
xchg
xor
push
xor
outsl
push
je
jnp
mov
and
jge
and
ret
repnz
mov
mov
adc
shrb
pushf
movsb
dec
aad
push
clc
daa
add
dec
aad
xchg
cmp
and
lods
test
stos
call
cmp
sub
push
or
shrb
test
jmp
xchg
outsl
popf
or
dec
addr16
adc
add
bnd
fmul
pop
inc
jge
jb
stos
fiadds
rcll
cmp
mov
fildll
inc
in
sub
ret
in
icebp
push
popa
rep
sub
dec
add
fstpl
or
rcrl
and
mov
arpl
ja
std
pop
pop
jnp
outsl
pop
jns
mov
out
inc
dec
and
mov
xlat
cmpsl
inc
pop
xchg
add
inc
mov
insb
jge
or
push
inc
cmp
idivl
sub
mov
outsl
push
fwait
add
cmp
rcll
jl
cwtl
push
pop
andl
jge
cmp
lods
call
and
inc
iret
js
push
je
jmp
jns
add
div
fwait
sti
jnp
notl
out
insb
test
movsb
mov
dec
loope
arpl
push
push
cmp
adc
or
adc
push
and
pushf
outsl
add
mov
cmp
push
mov
cwtl
mov
shll
rclb
cltd
adc
push
mov
push
sub
and
mov
es
repz
outsl
inc
xor
mov
into
pop
mov
shll
lcall
fs
daa
adc
pop
into
call
mov
sbb
xchg
cmp
add
or
pop
xchg
add
insb
adc
push
or
lret
faddp
aaa
cmpsb
lods
pop
mov
int
pop
add
dec
pop
in
and
sbb
or
xor
lds
mov
mov
call
mov
pop
mov
fucomi
jb
and
add
filds
insl
mov
mov
out
lock
cmp
xlat
ss
lock
int3
lock
pop
adc
shll
mov
imull
and
mov
sbb
out
jnp
mov
ficomps
add
mov
icebp
xchg
lret
cmc
fcoms
stc
iret
xchg
pop
imul
mov
lret
jo
dec
in
sbb
outsb
shlb
adc
lahf
xor
pop
mull
adc
mov
inc
adc
lods
add
push
out
arpl
xor
ds
dec
or
or
fadd
or
jo
jl
imul
or
push
loopne
cmp
mov
inc
dec
loopne
lahf
push
rcrl
adc
mov
adc
inc
inc
mov
mov
sbb
arpl
push
leave
jo
or
psubsw
push
push
add
or
cltd
pop
cmpsl
mov
bound
movsb
addr16
pop
lcall
test
xor
inc
xchg
loop
dec
rcl
sub
mov
bound
jge
mov
jo
mov
inc
lds
cmp
mov
push
movsl
mov
fstpt
shlb
sub
jnp
jl
xor
jnp
cli
jl
jae
sub
in
dec
les
sbb
mov
dec
sbb
or
xlat
cmp
cld
jb
fsubrs
add
mov
mov
and
repnz
jns
pop
iret
jg
or
or
dec
push
push
mov
imul
jns
repnz
push
into
adc
call
adc
mov
mov
push
mov
jnp
loope
in
sub
sbb
pop
jno
dec
add
das
sahf
addr16
out
pop
xchg
loop
cs
mov
movsb
mov
dec
xor
fdivl
lea
or
add
push
loop
out
inc
pop
push
adc
xchg
int
mov
enter
ss
mov
mov
pop
inc
sbb
insb
adc
pop
ret
push
ja
shl
dec
iret
push
inc
scas
iret
or
and
into
test
lock
mov
cmp
add
and
cmpl
or
shlb
xchg
or
xor
push
mov
add
movsl
mov
aad
jg
nop
lcall
cld
out
pop
sbb
test
or
mov
push
jb
test
inc
xchg
push
test
jge
mov
mov
lods
dec
sub
jb
mov
inc
aad
push
xchg
push
int3
aaa
mov
add
mov
xor
adc
jmp
sbb
mov
push
jmp
in
jle
popa
jmp
mov
pushl
add
call
in
inc
xchg
bound
jecxz
jg
pop
ja
aad
mov
sbb
pop
lret
in
pop
pop
loope
jo
push
jl
mov
mov
mov
jbe
jp
pop
iret
pop
mov
push
jo
test
stos
push
arpl
cmpsb
pop
aas
movsl
and
fdivrl
jecxz
jge
jb
movsl
icebp
mov
xchg
dec
push
lahf
sub
add
pop
imul
xchg
jno
mov
dec
test
cmp
xor
jnp
subb
inc
mov
dec
jmp
cmpsl
aas
push
sub
push
cmpsl
scas
fisubs
or
movsl
adc
dec
add
movsb
in
adc
jne
imul
nop
loopne
pushf
ds
or
mov
scas
outsl
jne
movsb
fld
shr
call
out
or
fsub
popf
cmpsl
cmp
add
mov
or
test
into
jmp
loope
cmpsl
sbb
mov
fdivrl
add
ja
adc
outsl
push
and
cmp
aaa
in
enter
ret
mov
adc
movsb
and
push
addb
pusha
lret
dec
loopne
push
cmp
mov
cmp
inc
imul
or
xchg
shlb
inc
test
add
sahf
pop
add
shll
cmp
xor
xchg
les
push
and
fstps
mov
fwait
add
add
jb
adc
mov
jae
xor
add
jg
mov
pop
ds
push
dec
mov
std
push
ret
inc
not
out
mov
or
push
dec
jecxz
xor
in
mov
push
jns
inc
mov
inc
or
jmp
or
les
and
mov
les
mov
movsl
out
pushl
and
sbb
add
lods
dec
sub
inc
js
xor
cmpsb
cmp
add
pop
in
jecxz
or
aam
sub
mov
sub
sub
mov
xor
icebp
sbb
xchg
in
adc
sub
jne
jae
dec
in
and
popf
sub
mov
jno
sarl
jmp
mov
sbb
and
adc
or
adc
adc
lods
sti
jl
inc
add
test
rcrl
xlat
cmp
cmp
push
dec
insb
leave
cmpsb
jbe
into
adc
sar
test
push
popf
jne
das
aaa
cmp
push
test
int3
sub
jmp
mov
testb
in
pop
jns
add
jb
repnz
out
adc
adc
movsl
lret
jb
mov
leave
testl
jno
js
jne
out
mov
loopne
dec
sub
mov
push
lahf
inc
push
outsl
bound
cmp
cwtl
rolb
out
movsl
shl
xchg
into
push
xchg
dec
fdiv
add
dec
xchg
sub
adc
fmull
xchg
cld
mov
mov
inc
out
arpl
dec
xor
adc
inc
cltd
aas
cli
xchg
sub
pop
add
push
icebp
or
or
les
je
loope
add
lahf
outsb
add
cmp
pop
pop
movb
inc
sub
mov
push
mov
shll
dec
cli
icebp
xchg
add
mov
aam
andl
fstpt
jnp
idivl
out
imul
pop
aas
jl
and
jae
shll
jmp
aaa
rorl
mov
xchg
push
daa
hlt
dec
sbb
sahf
or
cmp
and
mov
aas
mov
repz
or
outsl
sbbl
jo
test
add
shr
mov
or
and
sarb
aad
leave
xlat
pop
lods
shrb
into
pmaxub
lods
mov
jne
sub
sub
lods
in
stos
in
jp
lods
jne
sete
jp
or
jnp
lds
mov
push
sbb
outsb
pop
adc
xchg
rcrl
mov
adc
shll
pop
loop
jg
sti
in
aaa
in
es
jp
push
movsl
lret
push
dec
xchg
dec
stc
stos
adcb
ret
jecxz
inc
mov
daa
add
test
add
ret
in
out
js
jle
adc
xorb
xor
cmpsl
stc
cmp
shll
xor
sub
lret
pop
ret
into
ja
sahf
mov
iret
sahf
pop
lods
push
outsb
in
leave
ja
pop
or
xchg
shl
mov
xchg
pop
pop
jno
and
cmpsl
mov
cmpsb
loop
out
push
mov
ret
pop
push
push
scas
xchg
xchg
lds
inc
cmp
out
sub
add
lahf
loop
in
inc
mov
stc
jle
add
jl
xor
push
jb
cmp
xchg
cmp
dec
dec
pop
jecxz
mov
mov
sbb
popa
pop
xchg
insb
in
cltd
sbb
popf
jb
xor
cltd
adc
mov
add
mov
xchg
and
pushf
imul
mov
mov
lret
push
bound
cmp
or
fisttpl
cmpsl
adc
dec
sbb
xchg
lret
jb
xor
cmp
js
in
jg
mov
adc
xlat
xchg
sbb
xchg
icebp
outsb
xor
mov
pop
aaa
adc
mov
mov
jp
movsb
daa
dec
push
jp
add
out
sub
jae
into
roll
add
mov
adc
lock
mov
and
ds
orl
das
repz
xor
and
adc
popl
insl
rorl
mov
outsb
pop
dec
fidivrs
in
adc
cmp
insl
sub
les
and
sbb
or
pop
mov
dec
cltd
cs
pop
scas
ljmp
or
je
adc
movsl
cmp
add
daa
push
mov
hlt
or
cs
test
in
shrl
sbb
and
lcall
xchg
fs
add
out
es
xchg
jmp
add
push
outsb
psubusw
daa
push
sub
popa
cwtl
xor
test
adcb
lret
and
cli
push
jns
cmp
add
rcrl
adc
xchg
into
or
sarb
and
loope
fists
jae
or
mov
loopne
popa
pop
ja
addl
data16
add
push
icebp
push
push
icebp
adc
mov
scas
mov
lods
mov
orl
jmp
enter
mov
lcall
loope
rcll
cmp
inc
shl
ja
inc
loopne
dec
push
mov
mov
das
xlat
inc
and
push
push
adc
stc
shll
xchg
pop
xchg
sarb
rolb
sbb
mov
pop
add
je
jbe
adc
xor
fsubs
push
adcl
mov
mov
les
movsl
inc
cltd
sub
frstor
sbb
mov
adc
insl
out
inc
adc
pop
sub
mov
dec
leave
testl
jle
adc
push
cli
sub
leave
xchg
mov
xchg
add
push
int
cs
push
stos
jo
jae
jle
mov
cmp
icebp
pop
or
mov
out
xchg
into
add
dec
xlat
or
lahf
lods
pop
inc
int
rcrl
fistpll
inc
enter
dec
sbb
sbb
movsl
sbb
ret
mov
cld
fistl
mov
sub
sahf
or
mov
das
rcrl
and
cwtl
stos
mov
loopne
push
xchg
ds
pop
ja
sub
hlt
xchg
xor
out
mov
cmp
or
jge
inc
imul
pop
sahf
es
cmp
test
push
pushf
mov
push
add
cmp
loope
int
lock
jb
xchg
scas
xor
fidivrs
mov
and
dec
ret
lcall
mov
mov
xor
data16
out
sbb
shlb
sbb
xchg
or
les
sbb
inc
add
in
dec
mov
out
and
sbb
inc
sub
outsl
push
lcall
out
mov
imul
enter
xorb
mov
lahf
sub
jmp
idivb
mov
shlb
jo
stc
xchg
jmp
xchg
arpl
push
aas
arpl
push
jmp
mov
outsb
pop
sub
add
mov
inc
loop
mov
ffreep
dec
xchg
lods
sti
shll
sbb
mov
out
jp
mov
roll
std
out
or
mov
repnz
mov
jge
push
repz
pop
mov
mov
ret
mov
lret
dec
mov
pusha
int
aad
inc
lret
xchg
or
pushf
repnz
cmp
sahf
subb
test
mov
push
pop
aam
sbb
push
cli
pop
shrb
dec
out
push
das
xor
jle
pop
jle
mov
test
xor
mov
adc
loopne
cmpb
jge
pop
push
into
dec
cmp
out
jle
push
jle
adc
jne
cmp
cmp
sub
lods
mov
dec
xchg
add
xor
fistpll
cwtl
cmpsl
pop
call
adc
out
mov
mov
subb
mov
xor
inc
xchg
in
xchg
rorb
bnd
lds
sub
fwait
aas
cltd
loopne
fidivs
outsl
orl
imul
mov
dec
jnp
jne
lcall
sti
aam
lods
push
imul
xchg
fsubs
neg
popf
test
adc
mov
js
das
sub
push
test
mov
outsb
mov
rcll
stos
add
pop
fsubrs
xchg
push
fcoms
sbb
mov
bnd
pushf
push
pop
and
test
lods
in
ss
xchg
jle
pop
repnz
fsub
int
jnp
pop
outsl
jne
pop
into
dec
ds
mov
shrl
aas
sbb
mov
and
dec
inc
xor
or
cmc
in
sub
test
pop
jns
jns,pn
mov
push
jmp
cmpsl
push
and
lods
and
jp
cs
push
xchg
or
sub
test
or
fcmovb
mov
dec
scas
pop
fs
push
mov
aam
rclb
xchg
iret
jae
xor
in
xor
lcall
xchg
inc
fidivs
push
sub
xchg
fdivr
adc
andl
mov
jle
inc
jge
push
lock
xchg
ljmp
sub
jle,pt
inc
rol
dec
int
fwait
inc
xchg
movsl
cli
pop
cmpsl
frstpm(287
lods
faddl
rcrl
cmp
push
or
rcl
out
int3
idiv
xor
arpl
mov
sbb
out
push
dec
cmc
lahf
mov
mov
divl
rcll
pcmpeqw
xor
ret
les
pop
or
lret
ds
mov
jg
fstl
aaa
cmp
scas
cmp
test
push
sar
imul
sub
in
xchg
push
xor
cli
loop
insb
ss
sarl
repz
jmp
bound
fldcw
cmp
and
sbb
mov
dec
adc
and
movsl
or
into
adc
bound
pop
shr
push
add
test
sbb
lea
jl
xor
and
and
and
rcr
or
dec
cmp
inc
or
pop
push
pop
push
or
movsl
dec
rcll
inc
pusha
inc
movsb
and
lods
jo
aam
repnz
out
cwtl
xlat
out
and
mov
xor
adc
out
arpl
inc
ror
je
cs
movsb
hlt
in
cltd
lods
out
mov
mov
lds
cmp
loopne
add
mov
push
or
mov
lahf
rorb
cmc
test
fs
cli
lods
stc
stos
jns
xor
outsb
bound
pop
or
sub
xchg
xor
or
int3
adc
in
mov
jb
leave
jns
addr16
lea
pop
sub
inc
xchg
adc
jg
pop
scas
mov
das
adc
fcoms
ret
pop
pusha
or
inc
test
xor
testb
jg
in
and
aad
adc
dec
lea
std
faddl
mov
mov
fistpll
or
pusha
xor
or
adc
add
fldenv
inc
jp
cs
mov
out
mov
cmp
sbb
outsl
lods
js
nop
add
inc
sahf
sub
inc
xchg
jecxz
or
adc
add
leave
sarb
sbb
out
fimull
gs
pop
jp
cmp
cmp
jmp
ljmp
aad
inc
add
out
dec
dec
push
repnz
fisubs
jo
jmp
fstl
dec
pop
cltd
sbb
mov
imul
cmpsl
dec
mov
push
out
sub
std
cltd
in
mov
fistpl
clc
mov
cld
mov
mov
sbb
xchg
mov
dec
daa
dec
lea
popf
mov
sahf
iret
lcall
mov
fisttpl
add
arpl
jge
xchg
rcrl
mov
cmp
flds
adc
adc
mov
cmc
pop
movsl
xchg
stc
ret
jp
mov
rolb
xor
push
shlb
adc
iret
ret
sti
jl
mov
stc
lcall
ret
popa
cmp
adc
std
inc
mov
lds
adc
enter
xchg
sbb
jp,pn
jle
add
imul
pop
mov
xchg
dec
cs
outsl
orl
mov
push
repnz
dec
addl
jb
push
or
xchg
arpl
pop
and
sbb
inc
mov
sarl
add
test
cmp
cmc
shll
push
or
lock
std
iret
and
jno
mov
dec
xchg
push
adcl
ret
dec
cmp
sub
adc
mov
ficoml
mov
scas
adc
scas
testb
insl
mov
cmp
fnstsw
sbb
div
int
das
out
cmpsb
fstl
adcb
cmp
ja
mov
shrb
mov
je
dec
adc
pushf
sub
mov
mov
cwtl
mov
pop
pop
js
or
mov
adc
push
push
jns
jle
fnstcw
data16
lods
cltd
lea
mov
mov
inc
in
sbb
shlb
mov
mov
scas
cmp
movsb
jns
test
clc
dec
sub
nop
xlat
imul
pop
jbe
jo
lcall
ljmp
inc
ffree
fiaddl
pushf
cmp
fcmovnbe
outsb
notl
outsb
lods
mov
or
test
shlb
aas
push
sub
sbb
cmpsl
pop
out
icebp
mov
fmull
mov
rolb
fisttpl
stos
and
loope
pop
jl
sbb
jne
jno
or
jb
inc
sbb
ds
enter
jg
outsb
mov
clc
out
movsl
xor
cwtl
sub
lods
jne
leave
movsl
cmpsb
cli
gs
cwtl
push
bound
outsb
mov
mov
jae
pop
xchg
leave
sub
or
inc
dec
xor
jmp
dec
iret
jp
sbbb
jmp
jge
into
ret
lret
or
xlat
sarl
or
pop
out
add
push
xchg
jns
test
stos
cmp
mov
addr16
sub
dec
sti
icebp
jo
mov
pop
jmp
xchg
xchg
fucomp
pop
sahf
gs
pop
aaa
push
js
jo
sbb
jae
pop
repnz
add
loop
sub
aas
fadds
stos
sub
jo
das
pop
pop
sbb
mov
push
into
jae
das
shll
mov
mov
xchg
inc
and
loopne
add
movsl
mov
inc
iret
js
or
sti
jmp
adc
mov
dec
jnp
fucom
sbb
pop
sbb
lock
out
fdivl
add
xchg
inc
sub
sahf
xorl
jp
push
test
aaa
inc
in
shll
or
sbb
push
fdivp
or
pop
hlt
sbb
data16
lods
xor
xchg
sub
push
cltd
sbb
lahf
xor
xor
std
nop
cmp
ret
subl
sub
cmp
icebp
arpl
adc
mov
mov
ds
or
push
lock
test
or
testb
in
inc
jge
sbb
add
dec
es
jg
sbb
cwtl
mov
insb
pop
adc
outsb
fidivs
fstl
and
jl
es
mov
inc
pop
fisubs
fiaddl
push
push
xor
and
iret
add
cmp
fmuls
push
add
data16
bound
cmpsb
inc
imul
cmp
iret
pop
repz
stos
and
pop
imul
dec
inc
jbe
rcrl
jle
xchg
pushf
and
add
out
inc
icebp
sti
xchg
mov
jo
gs
mov
movsb
sarb
or
jle
sbb
jne
xchg
outsb
call
mov
movsl
mov
lcall
or
cmp
sahf
dec
lret
popf
adc
sahf
movsb
dec
sbb
fstpl
or
jb
dec
jns
pop
ja
pop
jo
and
sbb
inc
lods
loope
jne
mov
in
stos
cmpsb
pusha
xchg
inc
adc
and
mov
repnz
pop
pusha
mov
jle
mov
fcmovnu
into
mov
push
aam
jno
nop
pusha
stos
rcr
push
add
fucomip
xor
shl
push
loopne
movsl
mov
xor
and
push
inc
mov
jo
sbb
add
sbb
gs
inc
mov
jle
jge
ds
in
adc
pop
or
in
mov
jb
fstl
cs
rorl
test
inc
sbb
je
out
pop
dec
sti
and
lcall
aas
xchg
add
inc
lahf
scas
push
xchg
stc
lea
cld
pop
cmp
sub
nop
jb
call
inc
pop
cmp
lahf
lds
dec
mov
orb
inc
cmpsl
push
loope
stc
and
negb
int3
mov
jmp
lock
jbe
lock
sahf
xor
nop
aas
pop
pop
dec
loope
and
xorb
jno
cmpsb
mov
push
ret
outsl
mov
fdiv
push
add
pop
jo
jbe
add
pop
sbb
stos
add
dec
push
iret
addr16
je
xchg
mov
fimull
cwtl
add
xor
rcll
mov
inc
inc
mov
ds
pop
push
scas
aam
loop
imul
stos
ret
pop
adc
push
mov
xchg
pop
popf
ss
pusha
xor
adc
fimuls
pop
pop
cmp
dec
push
dec
stc
cltd
sti
mov
mov
dec
sub
inc
outsb
cmpb
sub
pop
cmp
xchg
cmpsl
or
pop
daa
jo
mov
imul
test
fst
inc
pop
xchg
add
test
mov
movsl
arpl
pop
and
pop
int
cmp
repnz
sub
dec
pop
repz
sbb
imulb
pop
xor
lods
fiadds
loop
adc
subb
mov
ffree
mov
jle
leave
cwtl
jmp
das
hlt
out
aad
push
push
popf
outsl
sub
movsl
mov
ror
scas
nop
sub
lods
movsb
xchg
sti
mov
mov
inc
imul
add
popf
icebp
daa
xchg
pop
push
xorl
xchg
adc
pop
mov
cs
fwait
xchg
push
insl
push
repz
xchg
mov
lods
jecxz
lret
jg
and
pushf
test
pusha
nop
sbb
pop
jnp
sti
mov
dec
sbb
repnz
inc
imul
movb
mov
call
push
lcall
xchg
or
pop
lret
addr16
jo
movsl
jge
xchg
push
inc
sbb
rclb
xor
movsb
insb
xorb
fwait
push
xchg
rolb
fldt
inc
pushf
pop
mov
or
insb
sbb
push
add
outsb
ss
frstor
lahf
push
inc
cwtl
sbb
lea
pop
jns
sub
icebp
subb
jle
mov
mov
jmp
xchg
push
lock
je
cli
popaw
fiadds
repz
xchg
lea
xor
cs
and
aad
mov
js
adc
stos
loope
mov
and
sub
pop
cmp
fstpt
fbstp
xchg
das
and
add
jne
xchg
fcoms
scas
and
xchg
jnp
jbe
cwtl
or
rcr
fisubrs
pop
lar
fstps
ret
mov
out
pop
xor
dec
xchg
hlt
or
test
mov
loop
xor
in
testl
push
mov
or
sbb
xor
inc
xor
mov
inc
jle
fidivrl
out
xor
push
pop
inc
lcall
addl
hlt
dec
cs
in
inc
dec
sarb
rcll
or
jnp
mov
cs
push
shrb
fidivl
imul
in
lahf
and
inc
stos
dec
dec
add
jmp
push
aam
ss
les
adc
pop
pop
lock
daa
out
insb
mov
insl
jae
dec
push
lahf
movsb
add
gs
inc
ja
mov
gs
push
mov
aas
fiaddl
dec
ljmp
pop
sbb
loop
cmp
sub
lock
and
mov
into
lods
sahf
mov
or
push
jno
xor
sbb
shl
test
mov
inc
stc
pop
inc
mov
mov
aad
jae
cld
int3
jbe
testl
dec
pop
lahf
mov
bound
mov
xor
shrl
pop
push
divps
sub
cltd
mov
int
push
mov
add
outsl
and
lret
test
js
jo
xor
adc
ss
or
add
cmp
cwtl
cmp
mov
cmp
mov
pop
add
iret
pop
or
test
rcrb
sub
mov
pop
aad
mov
call
jmp
addr16
imul
cmp
pusha
pop
xchg
dec
je
test
dec
enter
jp
push
int
xor
jmp
xor
je
cwtl
or
lret
or
out
push
jp
lcall
fwait
mov
mov
test
int3
adc
sub
aaa
les
jecxz
inc
or
cmc
repz
xor
jmp
nop
jmp
inc
or
push
jno
add
aas
lds
incb
subb
xchg
pop
xor
jnp
jae
stos
sbb
in
dec
xchg
lods
push
jae
cmp
mov
imul
cmp
pop
jmp
or
das
stc
sub
imul
movsl
xchg
addl
mov
cmpb
loope
icebp
xchg
adc
cmpsl
rclb
cmp
push
adc
lea
cmp
shl
and
sbb
xorb
int
mov
sub
mov
xor
dec
inc
push
fsts
sbb
or
or
xor
lock
movsl
fwait
int
cs
mov
mov
lahf
mov
dec
xor
jmp
mov
popf
gs
rol
divb
lods
cmp
andl
dec
adc
in
bnd
or
and
idiv
jne
bound
leave
and
inc
daa
mov
pop
repnz
xor
inc
push
inc
aam
js
mov
add
xchg
mov
fstpt
mov
aas
test
or
push
lcall
sub
adc
out
add
xchg
fldenv
out
shll
repnz
cmp
cs
add
mov
shrb
push
outsb
adc
jo
sbb
adc
ficomps
cli
jmp
fstps
mov
ret
sahf
cmp
pop
dec
xchg
imul
add
lds
pop
dec
xchg
lea
scas
add
fnstenv
das
inc
testl
lock
mov
and
sbb
outsl
inc
push
stos
xchg
lcall
stc
or
lahf
adc
psubb
mov
cmp
lock
fnstsw
repz
pop
jns
sbb
dec
xchg
push
hlt
sbb
mov
dec
fiaddl
or
sahf
cmp
push
test
repnz
dec
mov
xchg
je
cmp
or
or
punpcklbw
popa
mov
iret
dec
cli
movsb
mov
test
repnz
cmp
cs
xchg
xchg
nop
pop
jg
mov
iret
js
xchg
sbb
xchg
mov
popa
jmp
rcrb
shlb
pushf
and
rorb
and
nop
outsb
add
scas
push
mov
push
mov
call
clc
pop
sti
out
js
xor
mov
mov
push
test
fwait
popf
push
adc
jno
sahf
outsb
inc
inc
push
bound
fadds
cwtl
aas
adc
push
jge
inc
dec
and
test
int3
jo
daa
aam
in
movsl
dec
test
or
lahf
dec
mov
inc
out
cltd
pop
and
movsb
or
push
out
inc
dec
icebp
mov
out
mov
lret
sbb
cmp
cmp
sbb
cli
sti
sub
dec
xchg
pop
adc
pop
mov
cltd
add
fsubl
dec
movsb
lds
and
dec
imul
loope
sbb
mov
popf
cmp
jbe
dec
xchg
lret
push
dec
lahf
fildll
mov
js
dec
jp
ficoms
push
nop
cmp
xchg
stos
sub
inc
negl
pop
jnp
pop
push
out
adc
loope
js
lret
movsb
pop
popf
popa
test
pop
scas
js
pop
movsb
jnp
or
fbld
imul
lret
xchg
inc
fmuls
in
int
cs
mov
mov
and
mov
jnp
es
jl
pop
adc
cmp
or
shlb
ljmp
dec
adc
rcrl
scas
jg
push
or
and
sub
jmp
jbe
cmp
cmp
popf
pop
sti
cmp
cmc
push
xchg
das
add
sub
loopne
cli
xlat
cmc
jo
cmc
adc
push
lret
dec
mov
cltd
into
and
adc
call
movsl
and
bound
in
sbb
xlat
pusha
rcl
aaa
cmp
add
xchg
stc
mov
test
sub
or
inc
pusha
adc
outsb
in
xor
lock
test
push
stos
pop
jle
sub
test
and
and
mov
pop
adc
hlt
dec
pop
push
fistps
dec
add
sahf
mov
cmp
bound
mov
movsl
nop
pusha
jbe
mov
jl
push
xchg
pushf
roll
push
xlat
mov
shlb
lret
sbb
out
insl
xchg
jnp
out
arpl
fldt
int3
fst
push
sbb
cmp
fadd
or
das
xor
out
repnz
pop
aad
ds
or
adc
push
dec
cmpsb
jecxz
std
pop
daa
or
adc
mov
aam
dec
xchg
dec
es
xchg
je
jecxz
outsl
cmc
mov
or
cmp
fimuls
imul
xchg
int3
fcmovu
xor
pop
sbb
cmp
lods
adc
xor
dec
cs
pop
clc
insl
pop
adcl
inc
sub
inc
dec
mov
movsb
and
add
movsl
xchg
movsb
sbb
jbe
or
outsb
imul
dec
sub
xchg
jl
data16
jne
sbb
push
dec
cwtl
adc
mov
ret
add
or
pop
mov
testl
loope
and
push
hlt
lcall
add
jae
hlt
bound
mov
mov
sbb
and
cmp
mov
inc
mov
cmp
xchg
popa
or
scas
dec
roll
mov
adc
fidivl
pop
lcall
pop
aaa
in
jg
ljmp
daa
repz
cmp
outsb
out
testb
mov
add
or
push
mov
dec
pop
sarl
sub
xchg
push
rcll
or
arpl
adc
push
push
mov
fld
or
or
xor
xor
loop
sub
lea
pop
cli
mov
sub
out
dec
or
movsl
cli
pop
xchg
out
arpl
or
inc
cmp
test
dec
pusha
subl
jge
stc
dec
sub
dec
cmp
dec
jns
pop
or
lahf
repz
add
cmp
push
push
pop
inc
push
ljmp
xchg
inc
jne
pushf
and
fidivrl
test
mov
lock
xchg
and
hlt
in
mov
rcl
adc
push
push
int3
add
xchg
cltd
pop
les
lret
and
sbb
sub
push
andl
dec
jg
mov
or
jbe
mov
add
loopne
mov
jmp
popa
imul
xchg
aam
rorb
add
xchg
fcmovb
jp
lcall
test
loop
lret
and
movsb
or
mov
cmp
insb
sbb
jne
dec
inc
sub
pop
mov
data16
adc
les
cwtl
in
cli
xchg
pop
fisubl
jle
jne
or
and
xchg
dec
lods
mov
movsl
and
es
mov
gs
inc
jb
ficoml
out
mov
ficomps
and
in
add
inc
out
mov
sti
lret
int3
sub
sar
and
adc
and
rclb
shr
addb
sub
sub
mov
out
mov
into
cmpsb
fs
push
xor
inc
cmc
xchg
rol
mov
inc
bound
adc
add
pop
mov
je
add
mov
dec
jle
xor
gs
push
adc
pushl
test
pop
nop
mov
xchg
xchg
push
mov
fcmovnb
cltd
lahf
cmp
sahf
push
shlb
rcrb
clc
js
sub
sysret
dec
setns
ret
xlat
pusha
into
das
xchg
pop
sbb
mov
push
aam
pop
push
enter
fdivl
push
pop
fistpll
jle
fs
sbb
inc
xor
push
ret
fiadds
shlb
xor
das
aas
in
push
scas
loope
fldcw
icebp
mov
adc
dec
loope
mov
or
adc
idivb
js
jae
push
or
out
add
ret
push
pop
rcrb
dec
cltd
push
loope
pusha
call
push
rcrl
push
sti
jns
fisttpl
test
xchg
mov
test
or
pop
or
cmp
sbb
hlt
ds
push
and
cmc
inc
scas
push
icebp
mov
jnp
cltd
and
fistpll
imul
mov
dec
and
movsb
jb
daa
scas
scas
dec
xchg
int3
inc
xor
cli
int3
sub
cmp
in
pcmpeqw
xor
mov
pushf
dec
cmp
mov
sbb
push
xchg
add
or
adc
insl
mov
scas
repnz
fisubrl
adc
mov
mov
dec
push
xlat
loop
pop
jmp
inc
and
cmp
xchg
xchg
ja
addr16
jns
outsl
xor
mov
ds
outsb
das
enter
inc
sub
push
int3
sarl
push
mov
lods
idivl
insb
fldenv
icebp
scas
mov
test
xchg
or
cli
mov
add
repnz
xor
pop
ucomiss
add
pop
repz
loopne
jnp
movsl
sarb
adcl
pop
mov
fdivs
shl
les
inc
jb
inc
add
mov
jo
hlt
ljmp
js
jle
outsb
mov
dec
int
cmp
xchg
push
repz
push
push
sbb
das
aaa
lahf
jp
push
adc
ret
dec
adc
arpl
jmp
mov
mov
jecxz
gs
push
dec
mov
sbb
inc
jl
repz
ror
push
decb
xor
pop
dec
mov
testl
les
mov
mov
lods
xchg
cmp
pop
adc
push
and
mov
add
into
lods
cs
mov
fs
pop
pop
sub
push
andb
add
mov
mov
push
mov
mov
shl
push
mov
lds
outsb
inc
cmp
ds
out
pop
fidivs
pop
aam
xchg
jl
xor
leave
sub
pop
and
clc
mov
popa
lret
xchg
mov
xor
ret
jle
mov
xchg
fdivs
push
movsl
jae
in
es
popf
cld
iret
mov
fisubl
xor
dec
in
add
adc
add
loope
or
stos
aas
jb
sbb
fimull
shlb
lods
xchg
or
ja
cmp
jo
jmp
in
test
dec
jge
or
adc
mov
dec
add
popf
sbb
mov
lahf
fwait
std
cmp
jg
push
mov
push
and
fdiv
dec
push
into
dec
xchg
adcb
lcall
jg
in
lcall
push
arpl
out
stos
jno
stos
jb
jg
jns
out
enter
adc
sub
dec
ds
inc
and
mov
adc
loope
cs
jbe
cmp
es
inc
ror
mov
xorl
sub
leave
idiv
mov
loope
mov
faddl
inc
push
mov
popa
into
xchg
pusha
sti
and
in
or
jl
fwait
mov
stc
add
mov
pop
or
aaa
out
xchg
sub
cmp
mov
mov
mov
or
int3
pop
hlt
loope
cs
inc
loope
fldl
xor
pop
adc
jnp
mov
in
mov
aad
cmpsb
pop
es
mov
cltd
mov
xor
sbb
pop
jo
fcmovnu
xchg
pop
cmpsb
outsl
jno
fdivl
sub
mov
adc
sbb
mov
pop
cmp
mov
adc
sbb
iret
adc
leave
dec
test
xor
push
lods
dec
pop
into
scas
mov
and
clc
mov
jne
push
sarb
cmpsb
ret
mul
psubb
shl
lea
mov
enter
sahf
ret
hlt
aam
dec
cmpsb
mov
imul
rorb
subl
jg
sub
arpl
ficomps
ljmp
push
mov
cwtl
or
adc
data16
shrb
or
inc
push
xchg
outsb
or
clc
cmp
push
imul
mov
sub
push
mov
movsb
push
xor
ja
es
pop
frstor
rcr
or
jle
das
mov
and
aas
sbb
clc
jbe
pop
shll
fucomi
mov
negb
mov
lret
data16
dec
mov
data16
loope
mov
repnz
pop
ja
clc
dec
sti
cmpsl
outsb
popa
or
sbb
cmp
jae
sub
iret
add
mov
xor
adc
xchg
cltd
add
in
cmp
adc
dec
xchg
push
fwait
xor
outsb
pand
pop
or
add
pop
cmpsl
shlb
imul
jno
in
fmull
pop
icebp
iret
mov
shll
cmpsl
adc
xchg
pop
inc
jae
lcall
mov
push
add
xchg
daa
and
aad
pop
inc
dec
mov
cmp
clc
movsb
cmp
lret
add
pushf
lret
sbb
sbb
scas
das
es
inc
cmp
or
cmc
ljmp
mov
inc
fsubrs
and
sbb
ficoml
sti
mov
sbb
push
fiaddl
test
pop
loope
mov
cmpsl
adc
cltd
ja
bndstx
push
jp
in
addl
enter
adc
and
nop
push
pusha
hlt
xchg
cli
cmc
gs
lcall
pop
mov
cwtl
aaa
jl
sbb
mov
jge
aaa
enter
and
or
rcrl
js
and
pop
mov
mov
adc
adc
ja
adc
mov
jno
out
sub
jnp
icebp
gs
add
sub
rsqrtps
rorl
inc
sub
mov
add
mov
arpl
pushf
pop
jmp
hlt
test
or
and
cmpsb
cli
pop
push
movnti
leave
push
pop
lods
mov
mov
int
jae
pop
dec
mov
scas
inc
addb
orb
mov
pop
jae
insl
xchg
adc
adc
mov
rcrl
leave
inc
loope
arpl
addr16
cmp
enter
std
push
stos
push
fimull
daa
and
mov
roll
xor
fs
xchg
pop
cmp
inc
xchg
cli
xor
dec
dec
pop
inc
push
mov
jl
fwait
outsb
fisubrs
jecxz
insb
inc
test
mov
movsl
cmpsl
fmuls
push
fwait
sbb
fwait
push
adc
add
push
daa
inc
or
shlb
test
arpl
mov
pop
inc
scas
out
push
lcall
sbb
fcoml
out
inc
and
jp
sbb
mov
fdivrs
cwtl
movsb
call
popa
and
jae
xor
jbe
cmpsb
dec
xchg
pop
inc
daa
xor
dec
push
cmp
jne
in
rclb
int3
cmp
andb
lods
sbb
xchg
xchg
jno
fldenv
shlb
xchg
jne
mov
mov
ss
pop
aam
mov
arpl
adc
or
in
or
popa
test
sbb
rol
pop
dec
dec
movsl
jno
dec
xchg
xchg
fsubrs
imul
inc
lret
push
mov
movsl
sbb
cmp
insb
loope
push
xor
insb
test
mov
dec
out
dec
dec
in
adc
pop
xchg
adc
fistps
ret
nop
shl
pop
jl
xlat
push
mov
add
pop
mov
push
lret
or
das
xlat
sahf
cmpb
dec
fxch
push
insb
mov
sbb
addr16
add
stc
inc
lods
in
sbb
sbb
jmp
repz
stos
pop
xchg
in
mov
scas
ljmp
adc
repnz
mov
xchg
push
or
adc
rorl
mov
xor
push
jnp
shlb
jns
mov
data16
or
push
lods
jecxz
lret
xchg
adc
lods
ljmp
addr16
incb
adc
jae
sub
and
cli
xor
mov
int
dec
cwtl
sbb
adc
pop
lds
ljmp
cmp
jo
mov
mov
and
sbb
hlt
aas
add
fldenv
inc
xchg
call
mov
bound
xchg
pop
and
mov
fisttps
insl
stc
dec
push
or
cmpsl
into
push
and
pop
xchg
in
lds
push
lret
imul
cmp
jno
mov
loopne
out
sti
mov
and
or
repnz
mov
sbb
roll
mov
aas
inc
jo
xor
jae
test
inc
mov
mov
add
or
sbb
stc
arpl
cmp
mov
mov
sahf
sbb
jp
ljmp
and
jno
sti
jge
adc
push
push
add
call
fwait
mov
clc
mov
movsl
sbb
cmp
inc
dec
hlt
xorl
mov
imul
sub
ja
xor
jno
arpl
adc
outsb
adc
rcll
dec
mov
dec
dec
xor
mov
mov
mov
loopne
push
push
mov
int3
jp
lcall
adcl
adc
sahf
lret
dec
mov
aam
ljmp
xchg
dec
lods
repz
ljmp
and
mov
lahf
aam
dec
and
push
aad
jle
lods
es
mov
addr16
fs
fwait
sbb
les
cmpsb
aaa
mov
lods
and
pop
insb
cmp
mov
enter
out
dec
add
scas
das
sub
rcll
orl
daa
cmc
pop
mov
push
imul
imul
push
cmpsl
in
pushf
inc
das
das
in
pop
int
outsl
adc
jno
pop
lea
mov
cltd
push
insb
imul
mov
sub
sbb
mov
lods
sub
ret
je
push
xchg
nopl
mov
insb
daa
cmp
mov
push
jp
xor
adc
pop
push
shr
cltd
stc
pop
int
cmpsl
push
pop
pop
adc
adc
adc
shlb
movsl
mov
outsl
stc
pop
pop
sub
jmp
cmovbe
mov
lret
ljmp
call
sub
xchg
xor
insb
sbb
dec
cmp
xchg
data16
or
sub
xchg
pusha
and
jne
shlb
out
and
or
dec
dec
cld
les
or
xchg
bound
dec
push
cmp
dec
add
mov
outsl
cwtl
dec
fadds
push
ss
enter
out
andb
roll
push
and
adc
and
inc
orl
test
stos
hlt
jp
push
ljmp
sub
pop
int3
mov
mov
call
repz
xor
push
mov
outsl
jbe
and
add
or
aam
dec
push
cli
cmp
xchg
dec
push
mov
insb
jp
xor
cmp
mov
cmp
mov
lods
pop
or
add
and
movsl
adc
push
jo
call
imul
rclb
push
push
inc
push
iret
les
push
or
and
mov
adc
sub
push
rcrb
push
dec
fcomps
dec
dec
mov
out
hlt
outsb
pop
mov
xor
sub
scas
dec
inc
andl
jg
adc
push
popf
pop
cmp
or
arpl
pushf
sbb
push
mov
mov
iret
sti
sub
jno
xlat
test
jl
or
mov
sbb
shl
ja
push
arpl
push
push
cmp
mov
sbb
adc
or
mov
pop
lock
mov
dec
clc
out
roll
dec
or
mov
fmuls
popf
xchg
les
repnz
cmp
pop
fnsave
cs
fisttps
xor
mov
add
stc
dec
fsubs
popf
inc
pop
mov
insl
mov
paddsb
pop
imull
inc
adc
xchg
mov
dec
testl
ds
stc
aad
cmp
cmp
cwtl
fdecstp
clc
cmp
sbb
mov
xchg
stc
fisttpll
dec
inc
aad
test
rcll
mov
jle
sbb
pop
or
inc
notb
ret
clc
movsb
mov
lcall
inc
jns
daa
fldcw
out
aad
rcrb
das
rcll
mov
xlat
leave
jnp
mov
jne
popw
pushf
insl
xor
sbb
pusha
jp
in
mov
jne
sub
cltd
pop
sub
and
sbb
rep
aaa
out
mov
int
mov
das
lea
or
lret
mov
loop
adcl
movsl
push
adcl
call
repnz
negb
pusha
pop
adc
je
pusha
adc
pusha
fldcw
push
xchg
daa
inc
das
rorb
push
fimuls
mov
adc
dec
sti
daa
push
dec
xor
cmpsb
shr
or
ss
lcall
loop
push
flds
and
sub
sub
icebp
or
or
push
lds
fs
ss
ret
stos
int3
mov
cmpsb
jb
cmpl
sbb
cmc
and
imul
je
or
mov
jne
xlat
mov
sub
xchg
rorb
shrb
cmp
pop
jbe
jne
push
pushl
dec
xchg
mov
enter
cltd
mov
andb
sbb
jns
notb
imul
ds
outsb
xor
fisubs
je
sub
inc
ljmp
add
loope
std
cmp
daa
and
dec
push
jb
inc
jo
outsl
pop
dec
shll
mov
xor
cld
pop
cmp
lods
mov
cmp
mov
sti
xor
int
pusha
andl
inc
push
int
out
add
roll
pop
pop
sbb
pop
mov
xchg
in
stos
test
xchg
jno
and
scas
lea
sbbw
inc
mov
add
fdivl
in
iret
sub
or
sub
lods
int
add
pop
sbb
iret
push
cmp
in
mov
inc
movsl
push
jne
in
xor
xchg
add
or
insb
push
push
sahf
xchg
xor
iret
push
sbb
mov
pop
mov
out
sbb
cmp
rorl
or
mov
or
add
fs
pushf
and
add
jl
in
jle
dec
and
jg
mov
pop
mov
push
call
adc
push
mov
sahf
adc
roll
outsl
jbe
push
dec
frstor
inc
mov
jbe
xlat
mov
dec
into
addr16
xor
ljmp
mov
addr16
ljmp
shr
fsubs
push
or
mov
push
daa
push
ret
insl
gs
inc
adc
dec
jno
rcll
popa
mov
js
fwait
ljmp
sub
add
jae
stos
push
rol
cmp
popf
lahf
or
jb
xchg
movsl
ljmp
add
push
ret
mov
jecxz
pop
or
jge
sub
mov
imul
sub
xor
push
and
popf
dec
into
sar
std
or
lods
adc
mov
je
inc
xor
adc
pop
mov
pop
and
inc
xchg
adc
jge
out
test
imul
fldenv
jne
xor
mov
fwait
aam
xlat
and
addr16
and
sbb
mov
orb
mov
mov
lea
push
inc
add
sti
sbb
push
jp
adc
clc
outsl
jecxz
int3
jp
fwait
inc
cs
mov
insl
ljmp
repz
in
shll
fs
js
sbb
stc
push
jns
cmp
or
push
jge
inc
xor
sub
ljmp
adc
pop
xchg
cmpsb
out
imul
mov
xchg
lret
sbb
mov
push
icebp
repz
cmpsb
mov
push
mov
xor
adc
cs
cmpsb
popa
in
jl
sbb
mov
push
cmp
pop
jns
pop
pop
dec
lds
push
mov
je
jg
in
add
mov
ret
push
fsubrs
lret
insb
pop
mov
xchg
stos
cld
mov
or
jb
sbb
inc
push
or
clc
or
cmc
aas
outsl
aas
inc
cltd
pop
movsl
sbb
mov
imul
mov
stos
xorl
or
xchg
pop
shrl
mov
fnstcw
fdivl
and
test
mov
cs
adc
xor
inc
dec
ljmp
call
aas
icebp
pop
dec
adc
or
je
clc
mov
sub
dec
sahf
sbb
arpl
aad
or
pop
gs
add
jmp
test
leave
pop
mov
nop
xchg
jl
push
xchg
dec
inc
xlat
mov
frstpm(287
les
sahf
pop
sub
es
push
add
xor
or
push
fisttpll
pop
cmp
stos
or
in
jae
psrlq
cmpsb
cltd
jl
xlat
add
call
fiaddl
xchg
shr
sub
pop
test
push
cmpsl
pop
mov
sub
sub
aas
inc
cmpsb
lret
mov
dec
les
xor
mov
pop
hlt
pop
test
mov
dec
lds
rorl
adc
mov
pop
pop
out
movsl
lds
xchg
sti
cmp
jno
mov
jnp
adc
lret
dec
cmp
ret
insb
sbb
inc
icebp
jl
insl
scas
jmp
jno
cwtl
or
pop
ret
jp
popf
xchg
xchg
sub
and
insb
push
xchg
orl
mov
mov
sti
dec
mov
pop
mov
loope
cmp
arpl
mov
inc
jnp
rcl
lcall
icebp
imul
mov
test
iret
out
adc
mov
ss
sahf
mov
out
lds
mov
scas
repz
xor
mov
xchg
and
out
pop
xor
adc
mov
cltd
fdivrp
repz
sbb
loopne,pn
aas
scas
ja
lcall
xor
jae
cmp
outsl
stos
jno
mov
int
movsl
sbb
pop
cltd
jnp
mov
xchg
xlat
dec
mov
sub
cltd
test
cwtl
inc
add
or
mov
sub
sub
add
rcrb
insb
mov
les
dec
push
mov
mov
stos
adc
outsl
jbe
lcall
popa
sub
invd
cmc
imulb
push
sbbl
jae
insb
and
sub
and
or
push
xchg
pop
leave
aam
enter
xlat
sub
jmp
sbb
jge
pushf
dec
add
and
data16
outsb
sub
repnz
or
dec
hlt
add
cmp
in
lcall
cmp
notl
push
sub
mov
rolb
and
and
and
pop
and
lock
xchg
repnz
dec
es
sbb
aaa
aam
fldt
cmc
jp
cltd
and
dec
jnp
gs
xchg
mov
in
jge
imul
jmp
movsl
jge
dec
adc
bound
lods
sti
aam
pop
push
mov
pop
into
sub
mov
mov
fidivrl
inc
mov
cmp
shrl
mov
adc
cmpsb
cmp
add
bnd
xor
mov
mov
int3
clc
inc
aaa
ja
cmc
fisubrs
out
cmpsb
aas
pop
scas
jne
push
loope
lea
xchg
insb
fs
cmp
dec
out
pop
arpl
std
mov
call
or
push
subb
xlat
xchg
pusha
or
adc
pop
mov
jp
pop
fidivl
inc
mov
subb
push
insb
cli
pop
fsubrl
pop
mov
mov
rorb
js
das
and
out
imul
xor
lods
add
pop
inc
inc
das
dec
clc
repnz
mov
add
je
xor
inc
into
mov
pop
test
add
pop
adcb
jae
push
and
cmp
adc
and
imul
push
out
xor
add
call
daa
icebp
lcall
data16
pop
pop
push
addr16
dec
scas
cli
rorl
sub
jae
scas
int3
insb
bound
cmp
movb
std
pop
cmp
sahf
lcall
push
mov
test
mov
adc
jne
lret
insb
sbb
pop
mov
clc
pop
pushf
idiv
pop
mov
dec
mov
and
and
sub
stos
sahf
addb
lret
ret
add
repnz
scas
subb
mov
add
adc
cmpsl
sub
pop
stos
dec
push
test
and
mov
lods
mov
dec
jns
loopne
scas
add
int
xlat
mov
push
mov
in
add
and
pop
inc
mov
dec
mov
sub
push
adc
inc
sub
lret
jmp
add
dec
xchg
jmp
pusha
and
mov
pop
sbb
jno
mov
jge
push
pop
les
pop
push
in
xchg
scas
fucompp
sahf
mov
sbb
push
mov
and
aam
and
inc
repz
arpl
iret
pop
jae
hlt
or
mov
js
ljmp
xor
inc
pop
xchg
push
movsb
adc
dec
dec
mov
jne
insb
int
dec
dec
cmp
ds
dec
fbstp
cmp
xchg
pop
fnstenv
filds
jle
fsubr
pop
push
mov
rcr
arpl
or
ljmp
popf
fnstsw
int
mov
dec
lahf
or
push
lret
outsb
mov
notb
cltd
lret
xchg
arpl
mov
clc
lret
and
fidivs
cmpsb
pop
aas
out
jnp
out
push
iret
int
cli
shrb
in
push
pusha
jae
repz
sbb
bound
outsl
outsl
jbe
jge
jbe
add
pop
test
cmp
hlt
mov
fwait
xchg
sbb
cmpsb
inc
pop
adc
dec
ficompl
jp
sbb
lcall
xchg
loope
push
cmc
out
adc
mov
sub
scas
test
cmpsb
fistl
or
mov
je
iret
lea
mov
xlat
nop
test
lock
int
xor
xchg
fnstsw
and
jns
pop
mov
sbb
and
dec
xchg
or
pusha
hlt
fldenv
mov
sbb
in
mov
xchg
jp
mov
mov
xor
xor
out
adc
popf
sub
inc
add
inc
out
sarl
rorb
mov
lock
adc
popa
int
jg
push
sub
out
xchg
jb
das
cmp
popa
jp
movsl
gs
insl
aad
jae
dec
daa
push
fxch
adcl
mov
mov
outsb
adc
stos
out
jecxz
sbb
test
cmp
push
jge
mov
push
mov
pop
int3
xchg
test
or
pusha
jo
sub
outsb
mov
xor
subps
bound
dec
and
push
xor
sub
loopne
mov
jp
push
movsb
rol
inc
test
imul
jne
push
dec
xchg
sbb
repz
fsub
outsl
mov
fsts
daa
dec
pop
les
mov
xor
cmpsb
inc
mov
ljmp
jge
push
adc
int
adc
cmp
scas
mov
adc
jae
sahf
lret
insb
or
push
and
sbb
sub
sub
outsb
test
cmpsl
rorl
fcmovnu
lea
push
mov
and
enter
cmp
inc
cmp
push
fs
ds
sub
stc
rorl
and
add
adc
or
inc
idiv
icebp
xchg
outsb
cwtl
lcall
cmp
dec
sti
jno
xchg
dec
mov
jnp
lock
xchg
bound
int
mov
das
loopne
lea
sbb
cmp
ds
lret
imul
fcompl
shlb
aas
inc
push
stos
ss
mov
sbb
dec
add
arpl
or
cmp
cmpsl
mov
mov
mov
dec
mov
or
cmp
inc
dec
xchg
clc
xchg
add
mov
jne
cmp
clc
adc
push
xor
ljmp
inc
sbb
lock
rorb
fisttps
add
vmovdqa
inc
xor
add
leave
clc
pushf
aad
out
sub
lods
sub
mov
test
lret
add
jno
push
out
or
ret
das
cwtl
cmp
mov
mov
insb
cmp
sub
xchg
and
jae
mov
push
dec
or
fistpl
icebp
loopne
sub
pop
mov
fisubrs
loopne
cmpsl
sbb
push
xor
jb
adc
xchg
fbstp
or
dec
lock
jae
div
popf
mov
pushf
popf
lahf
push
aam
cmp
add
ljmp
data16
jne
add
cltd
es
pusha
aam
and
xchg
int
sbb
pop
mov
xchg
pop
jns
jae
jb,pt
mov
dec
push
inc
lock
pop
test
aaa
aas
push
subb
fstps
add
mov
adc
rcrl
imul
push
sbb
repnz
subb
inc
in
push
lods
dec
mov
or
add
add
movsb
cs
test
push
testl
pop
fstl
add
outsb
dec
pop
cmp
stc
inc
bnd
lret
mov
call
xchg
jl
ret
xor
scas
jbe
mov
out
jnp
xchg
jmp
xchg
dec
dec
fs
jb
or
insb
int
mov
adc
daa
repnz
and
mov
mov
inc
cmp
out
pop
push
cmp
lret
aad
inc
fisubrs
cmpsb
ljmp
mov
repz
outsl
jmp
pop
cmc
inc
insl
sbb
repz
push
in
add
lods
std
outsb
fs
test
add
aad
pop
outsb
mov
adc
adc
and
sub
cmpsl
mov
rcrb
jb
in
mov
dec
repnz
and
mov
dec
sub
jle
lods
notl
inc
and
cwtl
fstl
xchg
out
lods
jp
scas
sarl
or
mov
scas
mov
cwtl
rcll
scas
push
add
inc
loopne
cmpsl
add
push
add
movsb
xchg
rcr
add
ds
out
xorl
das
pop
in
mov
fisttpll
add
or
jg
xchg
pop
xchg
mov
fnsave
add
lea
or
jne
out
repnz
aas
xchg
cli
out
vpunpcklqdq
adc
mov
push
jnp
xchg
in
xchg
insl
xor
mov
jno
adc
mov
ds
leave
dec
jg
push
aas
lea
mov
ret
gs
sbb
push
fcmovnbe
sub
jne
fstpl
sub
jecxz
cmp
xchg
xchg
mov
rcrb
mov
das
in
sub
push
call
push
mov
icebp
push
cmp
push
mov
fs
xchg
xor
xchg
push
fmul
adc
ret
popf
adc
fs
or
mov
jle
es
or
rorl
scas
inc
fs
in
push
add
jge
push
xlat
ret
sar
mov
mov
xor
pop
pop
hlt
adc
cwtl
aas
sbb
xor
pusha
imul
dec
inc
pop
mov
mov
mov
jne
jns
lods
or
mov
inc
jle
xlat
or
mov
insb
push
lods
push
cmovne
test
fistps
mov
push
add
jnp
push
mov
mov
icebp
sub
dec
daa
bound
shlb
cli
ds
lods
pop
movsl
fsubrp
xchg
mov
xchg
popf
pop
add
jl
loope
push
adc
sbb
push
int
popa
jp
adc
xchg
insl
push
push
xor
pop
arpl
adc
inc
fdivl
rcll
sub
push
add
cmp
and
scas
das
push
jb
mov
inc
cmp
out
push
and
pusha
adc
mov
cmp
imul
push
filds
push
inc
movsl
ljmp
pop
shr
rcll
sub
arpl
xor
xor
cmp
sub
pusha
push
xlat
cmpsl
xchg
rclb
inc
sbb
add
inc
mov
and
or
adc
inc
cltd
mov
lods
jecxz
into
add
hlt
mov
mov
pusha
sahf
xor
rcrl
xor
stos
pop
jle
jge
call
out
loopne
out
mov
add
push
push
add
lds
jmp
and
inc
js
faddl
mov
cwtl
in
push
outsl
sbbl
push
lds
inc
cmp
cmc
inc
xchg
push
scas
mov
scas
fcoml
xor
and
adc
enter
push
je
mov
dec
dec
insl
fisubrs
mov
fldenv
out
jle
popa
xchg
mov
dec
imul
cmpsb
jecxz
lods
or
push
mov
cmc
jo
js
adc
inc
push
das
test
mov
mov
cmc
test
popf
gs
jg
mov
fs
call
movsl
loopne
or
push
aad
sub
or
sub
adc
test
dec
add
pop
fistpl
xchg
push
xchg
sbb
sbb
icebp
clc
std
das
push
xlat
movsl
mov
loop
adc
jge
es
cmp
pop
push
loope
outsl
xchg
mov
shrl
jne
xchg
loop
loop
pop
jns
xor
cwtl
fxch
adc
sbb
xchg
push
loop
fildll
mov
mov
or
cmpsb
je
fisttpl
dec
jae
in
in
inc
jp
lock
and
jo
dec
cmp
gs
test
mov
xchg
lahf
push
cmp
lods
je
addb
mov
xor
xor
scas
decb
in
pop
and
into
mov
movzbl
movsb
movsl
mov
in
sbb
adc
dec
jp
int3
dec
mov
push
xchg
ds
dec
outsb
outsb
fcom
adc
inc
ffreep
sub
das
xchg
pop
mov
push
cmpsl
xchg
and
sbb
push
pop
pop
push
dec
lods
and
xchg
lea
or
fnsave
mov
and
jo
cmp
outsb
mov
xchg
fdivl
pop
mov
sbb
enter
test
in
subl
push
xor
and
adc
cs
leave
pop
push
xchg
popf
rcl
xchg
rol
fucom
mov
sub
mov
push
outsl
xchg
std
int
mov
mov
and
mov
jmp
inc
das
cmp
pop
xor
mov
cmp
mov
sbb
jge
ror
sbb
mov
addr16
sub
test
scas
fnstenv
scas
mov
and
cs
mov
js
fcomps
xlat
es
mov
fidivrl
jp
push
xchg
lds
sbb
subb
loope
sbb
out
mov
mov
ja
push
movsl
adc
xor
lods
sbb
aas
cmp
lds
inc
enter
mov
jle
push
test
xorb
repnz
out
cmp
or
outsl
add
mov
mov
mov
sub
jg
stos
inc
insb
push
add
push
aas
jns
mov
cmp
dec
pop
adc
arpl
mov
xchg
cmp
push
cmp
popf
divb
push
popf
fdivl
fmuls
jno
mov
and
out
rcl
xchg
pop
or
push
jg
mulb
and
sbb
pop
inc
push
imul
inc
jle
push
push
arpl
or
and
int3
pop
adc
dec
cmp
push
mov
popa
sub
push
cltd
jge
cmp
xchg
fcomps
jns
iret
lock
movsb
and
mov
xchg
sub
jns
movsb
and
mov
push
notl
out
xchg
fisttpl
sbb
sbb
ja
or
mov
mov
adc
lock
ret
and
in
aaa
or
push
jl
cwtl
or
fwait
lock
xlat
loop
pop
cmp
adc
out
jae
stos
loope
cmp
xchg
shlb
mov
pop
cmpsb
mov
cld
push
jmp
fimull
pop
xchg
pop
or
ds
xor
xchg
lcall
cmp
pop
jl
lock
pop
das
dec
mov
ret
insl
push
hlt
xchg
scas
xchg
dec
xchg
popf
aas
sub
rclb
jg
pop
fsubrs
shrb
iret
or
outsb
jg
test
in
cld
xor
mov
outsb
test
aam
aas
sti
enter
popa
ljmp
enter
push
mov
insb
mov
push
pop
into
ljmp
sub
sub
stc
in
aad
mov
mov
fwait
cld
and
movsb
aas
inc
es
xchg
mov
cld
movsl
push
das
repnz
xchg
clc
and
jge
stos
jnp
mov
mov
sbb
pop
and
inc
adc
mov
mov
jno
jmp
movsb
subl
repnz
cmp
notb
lret
cmp
mov
or
lock
sub
mov
idivl
or
sti
push
dec
mov
ja
stos
jno
cmp
mov
sub
gs
xchg
lock
adc
outsl
push
push
or
mov
and
lock
cmpsb
inc
pop
mov
inc
psraw
sub
mov
dec
cmovle
or
es
xchg
shrb
pop
xor
out
push
imul
add
and
cmp
das
sub
in
fwait
adc
sbb
and
xor
xchg
mov
sub
gs
bound
das
sbb
nop
enter
insb
add
movsl
pop
jg
xchg
lods
and
out
nop
cmpsl
ds
pop
test
mov
or
sub
or
testb
lea
xor
pop
inc
inc
mov
lea
mov
into
jl
loopne
mov
fdivs
jp
cwtl
cmp
into
lcall
adc
test
push
mov
mov
xchg
in
inc
jp
into
iret
inc
out
sub
sub
adc
xchg
adc
nop
flds
movsb
pop
mov
mov
js
addb
sarb
adc
addr16
xchg
stos
mov
pop
or
inc
xchg
out
sub
icebp
out
or
lret
or
mov
sti
call
lock
stos
jns
pop
movsl
sbb
push
outsl
xor
in
inc
cmp
sub
rcl
push
int
lock
dec
in
xchg
and
xor
and
lock
xchg
lret
add
and
fiaddl
mov
mov
sub
lcall
xchg
ret
push
cmp
jl
setno
fcompl
sbb
aad
add
movsl
push
jns
push
xor
stos
push
out
das
pop
sub
adc
cmpsl
mov
mov
xchg
repnz
fcoms
repz
adc
xor
es
adc
push
int3
pop
push
add
mov
xchg
dec
push
stc
cs
pushw
sahf
stos
aad
adc
and
xor
inc
and
adc
jne
lock
sub
mov
ds
stc
popa
or
leave
imul
and
xor
mov
fdiv
and
fdivs
xrelease
pop
push
dec
inc
fcmovnbe
pushf
into
push
pop
sbb
insl
ficompl
cmpsb
outsb
dec
aas
mov
das
adc
xchg
fbstp
hlt
inc
ja
cmp
out
adc
lret
xchg
bound
xor
mov
es
mov
push
cli
pop
scas
sub
popl
rcrl
mov
cli
mov
insb
jmp
addr16
insb
push
test
cltd
jl
aas
imul
pop
sub
push
jnp
stos
sbbl
adc
jno
in
mov
fwait
int
lcall
fisubs
and
mov
sub
es
stos
cs
jge
xor
scas
fisttpl
xlat
adc
fnsave
in
int3
mov
mov
add
repz
int3
add
push
or
push
ret
add
mov
and
jg
das
cmpsl
lods
lcall
ret
movsb
cld
loopne
lock
cmp
mov
mov
movsb
pop
or
push
lcall
repz
add
mov
sahf
push
loop
push
sub
jbe
fdivrl
jecxz
jo
push
notb
test
mov
outsl
mov
cmpsl
push
subb
dec
dec
pusha
adc
idivb
lcall
lds
push
xor
mov
jl
aaa
cmpsl
xor
or
dec
lahf
jnp
inc
cmp
test
push
push
cvtpi2ps
shll
cmp
dec
iret
inc
inc
imul
repnz
pop
pop
dec
stos
inc
dec
inc
cmc
daa
sub
mov
mov
movsb
xor
pop
sub
inc
mov
nop
push
and
pop
insl
or
movsl
dec
pop
add
jnp
outsb
cmp
cld
jecxz
push
push
cmp
in
dec
out
push
sub
and
jo
in
ds
dec
lock
ret
fadds
imul
xchg
in
lods
fcmovnb
push
xchg
sub
int
dec
mov
insl
popa
mov
jae
dec
xchg
mov
and
mov
xor
push
push
ss
pusha
pop
outsb
pop
add
xchg
mov
add
add
mov
leave
rcr
adc
leave
dec
pop
cmp
sbb
rcrb
clc
push
test
jp
ret
mov
outsb
dec
sbb
push
mov
outsb
and
xchg
pop
popa
repnz
add
adc
push
movsb
es
mov
mov
std
xchg
das
push
xchg
pop
mov
mov
subb
mov
je
mov
push
adc
pop
jae
icebp
push
jo
push
sub
ret
or
sahf
aam
pop
sbb
mov
in
push
xchg
movsb
rorb
repz
and
aaa
xchg
adc
cld
je
and
mov
and
movsb
pop
mov
ds
cmc
jle
dec
shll
xchg
mov
mov
popa
add
in
arpl
int
mov
pop
arpl
jo
fmull
pusha
sub
push
out
stos
dec
das
and
dec
add
cs
fs
outsb
dec
jl
daa
xor
fidivl
stc
inc
in
in
adc
lahf
mov
xchg
pop
mov
mov
daa
push
daa
xchg
fs
jns
cltd
mov
test
imul
lock
testb
sarl
mov
xlat
popf
jo
mov
jecxz
xor
inc
xor
test
adc
fwait
push
push
mov
popf
dec
lea
gs
aas
fcompl
cltd
leave
jle
pop
cmp
mov
xor
sarb
cmp
xchg
mov
adc
lret
sub
xor
lret
jmp
pop
mov
sarb
aaa
out
mov
jne
lahf
imul
out
hlt
push
or
push
pop
andl
imul
pop
push
jns
pop
jns
push
mov
xchg
lahf
popa
xor
sbb
mov
jg
adc
sbb
les
cmpsl
dec
repz
in
jp
or
in
sti
cmovb
or
ljmp
enter
jb
sbb
sti
sub
imul
mov
xchg
shll
sub
lret
dec
enter
nop
testb
pop
jno
xchg
js
hlt
ss
dec
arpl
mov
sub
pop
out
test
add
lahf
cli
mov
inc
insb
push
mov
movsb
fsubl
or
pop
mov
mov
cwtl
rcll
fsqrt
cli
xchg
sbb
sbbl
mov
fdivrl
int
mov
scas
or
mov
xchg
jge
push
or
xor
daa
repnz
pop
jne
out
jmp
pop
scas
rol
jns
and
lds
xor
icebp
js
push
sbbl
push
loop
add
test
mov
mull
jb
lret
sbb
stos
cmpsb
push
push
leave
push
nopl
dec
pop
and
lret
stos
pop
sbb
cmp
or
mov
xchg
xchg
xlat
mov
push
jno
or
sti
test
cmc
test
mov
jne
sub
jg
xorl
mov
push
and
push
test
xchg
pop
addr16
add
mov
inc
je
adc
add
push
add
mov
adc
dec
jge
xor
pop
jno
hlt
imul
lret
lret
adc
push
or
pop
sbb
loop
pop
mov
mov
pop
push
mov
out
mov
push
pop
movb
loopne
sub
mov
xchg
andb
aad
testb
xchg
popa
and
adc
ret
mov
add
aad
fwait
pop
or
loopne
xor
dec
and
xchg
jns
out
and
pop
sub
cmp
mov
test
pop
loop
inc
addr16
ret
pop
pop
mov
xchg
mov
jae
scas
leave
data16
add
mov
insb
push
push
cltd
push
cmc
inc
adc
pop
xor
imul
mov
mov
fwait
loope
pop
pop
mov
outsb
sbbl
push
mov
add
push
jno
gs
mov
hlt
lcall
pop
adc
xor
mov
push
repz
hlt
lds
cwtd
repz
and
std
mov
push
mov
loop
int
or
out
jecxz
mov
jbe
test
mov
push
add
fnsave
int
popa
or
mov
xor
outsl
lods
in
lea
jae
daa
dec
dec
adc
adc
test
das
xor
cltd
sar
in
in
pop
movsb
dec
pop
cmpsl
leave
cmp
ret
push
jo
sbb
inc
jge
xchg
mov
lret
sub
loopne
mov
movsb
jge
movsb
call
adc
adcl
sub
inc
sbb
das
mov
ss
cs
addl
mov
dec
sarb
cld
add
test
add
dec
insl
or
rclb
mov
dec
jbe
mov
fwait
mov
push
mov
push
stos
mov
inc
cmpl
mov
testl
cmpsb
lret
sbb
or
lahf
xchg
lret
fidivrs
pop
sub
fcmove
cmpsb
pop
out
addr16
sti
adcl
pop
test
loopne
push
jl
test
mov
repz
sub
jle
lcall
cmpsl
jnp
test
lds
movsl
pop
test
repz
adc
push
xchg
repnz
dec
aam
or
loope
pop
sbb
ret
or
xchg
xor
in
cmp
daa
sub
imul
lods
sbb
inc
cmp
call
xchg
dec
add
mov
lea
jecxz
pop
mov
cmpsl
push
or
aam
cmp
sbb
sbb
push
pusha
push
shll
adc
subb
push
lock
add
out
ret
mov
xorl
or
push
push
ret
push
rcrl
movl
std
aad
cmp
adc
push
fistpl
pop
sub
push
jl
mov
pop
paddsw
pop
daa
cmc
add
aaa
mov
and
cmp
repz
or
dec
mov
mov
movsb
push
outsb
inc
mov
loope
xchg
and
pop
add
cmp
ret
sub
xchg
shrl
xchg
dec
or
mov
or
jns
es
test
pop
sbb
xlat
lcall
or
or
xor
aaa
pop
cltd
inc
icebp
dec
test
dec
scas
mov
shl
add
in
insb
out
sbb
mov
xor
push
jmp
mov
sbb
cmp
sub
or
lahf
push
int
lcall
adc
outsb
outsb
fstl
cmp
sub
sbb
in
jge
jo
pop
push
add
insl
xchg
and
mov
aaa
movsl
sbb
popf
xchg
outsb
mov
imul
mov
mov
ljmp
in
das
adc
add
cmp
mov
push
rcr
mov
aad
aas
jo
pop
daa
mov
lea
pop
add
pop
js
xchg
mov
and
jecxz
cmpsl
xor
outsb
imul
adc
adc
jb
movq
aad
jbe
sub
push
cmp
lds
add
in
adc
jle
lods
daa
push
aaa
lret
mov
xor
adc
insb
filds
inc
or
dec
in
movsb
sub
dec
cmp
cmovnp
jo
add
cmc
adc
js
ficoml
lahf
fwait
lock
push
cs
popf
lahf
push
lock
add
sahf
xor
or
or
xor
sub
pop
jne
aas
push
in
and
js
pop
cmp
iret
int
data16
or
jns
xor
dec
bound
adc
jnp
pop
jnp
rcl
mov
fsubl
xor
jnp
mov
or
loop
dec
loop
ficoms
outsl
jbe
fsts
inc
jbe
mov
xchg
or
mov
inc
loope
and
push
popf
aaa
les
adc
add
shlb
and
jno
int
popa
add
sub
xchg
das
mov
xchg
pop
xor
pop
dec
add
pop
jne
jge
mov
lds
jge
lea
out
mov
loope
jne
jb
push
sbb
andb
add
cs
in
fwait
clc
push
aad
cli
out
fstl
jg
data16
jp
stos
outsl
scas
iret
cmp
dec
cmp
mov
aam
test
fiaddl
mov
je
outsb
cmp
lret
pop
ljmp
add
mov
sbb
js
daa
adc
push
scas
pop
loopne
and
enter
push
in
push
ljmp
inc
xchg
cltd
repz
loopne
aas
or
pop
cmp
lahf
push
and
and
push
ret
xchg
jae
popa
movsl
ds
xchg
in
movsb
push
push
adc
mov
push
inc
and
cltd
data16
cmp
ljmp
mov
or
sbb
out
clc
movsb
jmp
xchg
jbe
sbbb
jnp
stos
test
cld
dec
adc
inc
in
add
pop
dec
popa
aaa
lret
sbb
push
pop
lock
daa
shrl
aam
mov
andb
loopne
mov
outsb
aas
inc
aas
pop
shrb
aaa
rcrb
xor
mov
lods
ljmp
xchg
and
into
pusha
loopne
out
add
xor
mov
pop
in
pop
sub
inc
bnd
pop
fst
dec
ret
out
js
jns
imul
movsb
mov
faddl
mov
pop
mov
mov
adc
movsb
adc
xchg
inc
icebp
jbe
test
mov
aam
xor
inc
sbb
lds
dec
lea
inc
inc
and
ret
out
les
cmp
fldt
iret
nop
or
divl
push
and
dec
les
push
int
insl
daa
jno
or
mov
aam
pop
outsb
daa
pop
scas
enter
sub
fneni(8087
insb
push
sbb
or
lds
jg
or
lahf
shll
ja
push
ror
mov
cld
mov
ss
adc
inc
cld
sarb
pop
jp
sbb
int
and
rcl
push
adc
popa
mov
sbb
sti
push
add
pop
notb
xchg
fsts
sbb
andl
outsl
add
mov
cld
cltd
daa
pop
test
mov
rcl
insb
sbb
mov
notl
inc
das
jl
dec
fmull
adc
pop
mov
shlb
and
or
and
push
mov
rcr
or
cmp
daa
cmp
lcall
pop
mov
pop
data16
or
xchg
jmp
ret
or
jnp
sbb
or
adc
aaa
mov
sub
out
rcrb
sbb
add
or
mov
or
push
push
lea
or
sbb
imul
into
in
mov
sub
adc
adc
in
call
out
pop
jmp
xchg
push
sbb
adc
in
mov
push
pop
pop
dec
loop,pn
inc
insb
inc
xchg
cli
mov
pop
mov
pop
fs
lods
pop
subb
xor
outsb
pop
and
outsb
push
or
repnz
sub
cwtl
leave
push
jge
or
or
sar
ret
dec
push
xlat
movsb
or
add
jle
outsb
dec
cmpsb
jmp
call
mov
mov
fwait
push
xchg
pusha
sbb
pop
orl
cmp
inc
call
popl
push
jecxz
dec
rorl
stos
cmp
pop
int3
fucom
xchg
aas
pop
xor
mov
inc
pop
mov
cmp
mov
and
pop
sub
mov
test
xchg
cmp
push
push
and
push
dec
cs
jno
add
popl
daa
rol
or
dec
stc
out
sbb
mov
push
inc
pop
add
or
jge
xchg
or
inc
inc
jp
movsl
dec
sub
sub
out
scas
loopne
push
jl
inc
scas
fs
inc
int
xor
sarl
repnz
and
or
fwait
mov
and
and
in
inc
xchg
pop
lret
lcall
mov
inc
jnp
daa
movsl
mov
cmp
or
add
cmp
stos
fwait
dec
inc
inc
sub
add
push
push
jmp
push
inc
push
pop
sbbl
lods
mov
add
cmp
jno
lret
xor
cmp
scas
adc
jae
ljmp
ss
movsb
mulb
shrl
aas
loope
popa
fs
sbb
sahf
repnz
mov
xor
or
push
or
mov
fadd
cmpsb
jge
sarb
mov
dec
shl
cmp
push
push
jle
mov
data16
sub
test
adc
inc
stc
dec
dec
cmp
push
mov
and
push
sti
jo
insb
mov
cmp
xor
aaa
inc
mov
sti
lock
arpl
gs
cmp
cld
fdivrs
fsubrs
dec
or
fists
add
dec
mov
shlb
sub
imul
and
cli
mov
jl
sub
sub
pop
movsb
jecxz
ds
pop
clc
repz
mov
or
adc
dec
das
popf
or
mov
mov
xchg
xchg
jle
rorb
xchg
jne
aad
lret
data16
sbb
push
add
cmp
cmp
dec
fstps
pop
lods
arpl
cmp
xor
popf
dec
jge
pusha
das
cmp
cmp
aam
stc
and
cmp
outsb
adc
ficoml
jge
add
mov
or
mov
mov
rorb
in
test
out
sub
jge
push
xor
add
push
mov
pop
add
fldl
jb
fstp
sub
dec
adc
mov
inc
hlt
cmpsb
push
sbb
sub
adc
mov
call
add
jne
adc
adc
xor
pop
stos
gs
pop
or
jns
mov
in
flds
xchg
ss
add
sub
outsb
cld
jo
incb
loop
je
mov
mov
in
inc
adc
mov
popa
loope
test
push
insb
sbb
xchg
addr16
sti
adc
fs
dec
fimull
dec
add
sbb
je
adc
cmp
jb
stc
data16
iret
pop
push
fwait
jo
push
int3
mov
dec
dec
sub
outsb
adc
sub
push
stos
inc
stc
pop
cltd
gs
mov
pop
es
mov
loop
pop
mov
fcmovnb
push
dec
fucom
dec
leave
adc
sti
adc
mov
pop
shrl
rclb
mov
mov
adc
or
jl
add
fs
imul
jge
mov
add
sbb
aas
jbe
cmp
std
andb
and
push
fwait
mov
fsts
mov
enter
arpl
rorl
push
push
cli
xchg
rcll
cmp
icebp
xor
xchg
sub
aaa
ds
in
pushf
daa
add
rcrb
sub
dec
cmp
lock
insb
cmp
jo
cmp
jae
repnz
dec
les
ljmp
int3
jp
test
imul
mov
pop
xor
adc
xchg
test
dec
arpl
xchg
dec
psllq
dec
xchg
xchg
fistps
cwtl
or
inc
add
pop
jb
mov
mov
xchg
adc
mov
xor
jns
scas
in
and
cs
cwtl
popf
dec
lock
mov
fsubrl
repnz
push
or
icebp
jecxz
pop
outsb
sar
sbb
jecxz
xlat
and
sub
cltd
fsubrs
ret
push
jge
ret
jle
outsb
xchg
icebp
xlat
inc
aaa
clc
call
add
jae
xchg
cli
push
leave
jmp
stc
mov
push
cmpsb
mov
dec
cmpxchg
repz
js
cmp
and
inc
and
mov
mov
push
or
jnp
test
lahf
push
and
cmpsl
push
push
adc
nop
jno
adc
aam
dec
pop
mov
and
dec
dec
aaa
fptan
imul
std
lds
lock
lods
enter
out
outsl
and
int
or
inc
fcompl
movsl
fmuls
fwait
pop
push
jnp
pushf
aad
dec
or
icebp
insb
lret
or
mov
adc
aad
cmp
pop
jnp
or
outsb
popf
imul
xchg
popf
into
mov
pop
cld
cltd
int
stc
js
lods
out
mov
adc
add
lock
daa
inc
push
daa
lds
cltd
out
cwtl
xchg
inc
enter
and
fcoms
mov
push
lret
mov
sub
mov
dec
das
mov
stc
adc
out
iret
cmp
rcr
shlb
call
push
and
cmp
mov
jae
mov
adc
test
ds
mov
xorl
or
push
pop
in
cwtl
push
push
js
dec
xchg
into
inc
out
mov
push
nop
jl
xchg
and
out
mov
out
cmpsb
lea
push
icebp
jge
outsl
mov
aaa
cld
push
add
xchg
cmp
jp
in
ret
push
insl
jno
sub
jne
xor
pop
sbb
xor
aaa
add
xor
jae
mov
lds
mov
test
jbe
sbb
dec
int3
xchg
sbb
jl
dec
jp
cmp
mov
sbb
je
mov
int
cs
sarl
lcall
dec
inc
sbb
aad
rcl
imul
and
pop
mov
in
and
mov
add
or
cmpsb
pop
pop
xchg
pop
pop
adc
aas
push
pop
jb
add
shll
push
sahf
gs
and
dec
push
test
or
ljmp
cld
jmp
in
imul
or
push
outsb
pop
mov
pop
shl
cmp
cmp
mov
push
dec
xor
or
adc
pop
cs
loop
femms
sbb
in
int3
insl
out
cmp
aad
in
nop
lret
or
push
sub
dec
jmp
push
andl
xor
add
mov
loop
mov
or
aam
or
popa
jne
mov
inc
pop
pusha
faddl
in
cmp
in
push
sarb
xor
les
jge
push
mov
dec
xchg
sbb
push
mov
inc
out
std
pop
xchg
pop
adc
mov
rclb
add
add
push
sub
repnz
fldcw
in
cs
hlt
add
pusha
sbb
xchg
xor
cmc
add
xchg
xchg
loop
orl
push
xlat
js
ja
lret
popf
dec
dec
push
stc
test
lcall
mov
cmpsl
je
adc
adc
mull
dec
mov
or
jne
add
rorb
out
out
shrb
push
adc
jae
inc
sbb
sbb
cmp
testb
jns
sbb
sbb
or
push
inc
pop
push
jo
dec
add
cmpsb
in
movsl
dec
push
shlb
nop
sbb
insb
test
sbb
push
movsl
dec
mov
xchg
shrl
lods
adc
push
mov
movsl
in
stos
mov
add
rcrl
lahf
dec
pop
push
std
paddsw
push
scas
pop
daa
pop
push
icebp
pop
add
outsb
jno
mov
sub
jno
xchg
or
sub
xor
push
jb
and
cmp
daa
sub
int
loope
insb
cmpsl
pop
and
cmp
jnp
outsb
loope
jmp
xchg
inc
nopl
stc
push
jmp
leave
sti
test
sarl
fisttpl
shll
inc
flds
add
push
dec
rolb
or
add
add
in
test
or
dec
mov
xor
push
cmp
mov
shll
pop
and
jp
fwait
dec
fisubrl
mov
outsl
fsubrl
es
shlb
adc
sbb
pop
jle
sbb
inc
in
jg
mov
push
fcmovne
in
int
or
adc
push
ljmp
stos
aaa
in
mov
mov
adc
adc
xchg
in
adc
mov
sbb
pop
in
jg
fistl
adcl
cmp
dec
mov
pop
dec
imul
xor
xor
pop
loopne
nop
lods
insb
lahf
rcrb
sbb
shl
rcrl
in
push
jle
loop
push
or
andl
test
pop
mov
or
push
lods
lahf
out
pop
shl
fwait
mov
mov
loop
mov
lea
loope
sbb
inc
adc
or
ljmp
stos
stos
inc
sbb
sub
adc
ja
pushf
out
pop
clc
push
rorb
mov
jno
aam
bound
or
push
cmp
and
inc
lret
aaa
inc
clc
jp
outsb
push
push
push
iret
cmpsb
dec
mov
or
cwtl
cltd
mov
pop
pop
push
sbb
fisubrl
mov
loop
jge
dec
rcl
loop
mov
fstpt
inc
je
ret
lea
ja
pop
adc
ss
aas
orb
adc
mov
jbe
mov
or
fdivrl
outsl
cmc
jmp
mov
sub
add
test
cmpsl
inc
iret
neg
mov
out
cli
mov
xor
scas
outsb
sub
aaa
icebp
loopne
loope,pn
and
and
ljmp
sub
dec
adc
das
sbb
dec
xchg
jnp
and
sub
jbe
push
xchg
pop
and
push
lretw
mov
inc
fidivrs
cmp
cmpsl
add
xchg
push
jge
mov
adc
and
loope
pop
xchg
inc
add
lods
lahf
mov
push
push
sarl
cmpsb
stos
jle
ret
xchg
pop
jnp
jge
cmpsl
into
outsl
cmp
fldl
xchg
mov
jle
rcrl
cmp
and
sbb
cwtl
rcrl
push
shll
jmp
jns
dec
daa
popa
fs
add
or
push
mov
imul
xor
cli
adcl
pop
xchg
inc
shll
aad
int
andb
and
dec
test
inc
aad
mov
inc
mov
cmp
inc
outsb
sahf
dec
orl
push
out
xchg
insb
push
fcoms
inc
xor
sbb
ja
fs
repnz
or
mov
fldl
xor
cmpsl
addr16
aad
ds
dec
jg
je
jg
rol
test
pop
xlat
xchg
mov
push
cmp
ds
fcoms
mov
push
imul
sbb
push
inc
xchg
jnp
sub
mov
jae
bound
test
in
jl
jae
push
cmpsb
adc
sub
ret
incl
and
leave
ds
int3
or
imul
adc
std
adc
repz
sub
insl
fs
out
pop
pop
add
imul
jb
mov
iret
std
fisttps
xchg
sbb
dec
sbb
into
inc
mov
xor
mov
pusha
jge
or
int
pop
mov
adc
aad
stc
push
inc
mov
lahf
xor
ds
xlat
filds
push
leave
and
mov
mov
aam
fs
mov
xchg
sarb
mov
fnstcw
or
pop
push
fsubl
mov
mov
add
xchg
xor
roll
and
cmpsl
add
lahf
xor
pop
cmp
push
mov
sub
xor
dec
adc
sub
loope
lcall
psadbw
enter
and
cmp
pop
fnsave
push
repnz
push
or
ljmp
xor
lds
lahf
add
lock
test
xchg
and
aad
dec
ret
xor
es
sbb
jne
lahf
or
inc
outsl
push
pop
test
sbb
rcll
dec
fstpl
ret
sub
std
xchg
daa
jle
mov
pop
mov
fwait
and
ja
cmp
in
sbb
jno
pop
push
sub
sbb
int3
sbb
call
sbb
movsb
aas
ret
rcll
add
push
mov
pop
sbb
sub
int3
adcl
add
inc
push
loopne
pop
int
and
xor
sahf
cmp
addl
push
xchg
dec
xor
cmp
add
sbb
mov
into
or
cmp
push
push
dec
outsb
in
loop
loopne
and
and
add
rcr
imul
mov
add
imul
cli
adc
cwtl
push
push
inc
add
ds
cmp
cmp
add
pop
stc
repz
stos
and
and
stos
mov
jb
jg
push
push
sbb
mov
jg
loopne
stc
cmc
subb
pop
fwait
lods
mov
dec
sahf
pop
lret
in
leave
pop
arpl
push
jg
sarl
jo
insb
xor
mov
iret
arpl
xchg
int3
add
xchg
adc
es
cmp
dec
psllw
jle
ss
or
mov
mov
jle
sub
ljmp
push
dec
or
sbb
cmp
ret
lret
cs
lcall
adc
sub
or
xor
movsl
mov
push
xchg
sti
jnp
push
add
fsts
push
in
inc
adc
inc
add
insb
movsb
push
sub
icebp
mov
mov
in
adc
inc
je
xchg
jbe
arpl
dec
popa
subb
sahf
cmp
jb
lods
repnz
or
cs
stc
loope
dec
ret
loop
lods
outsb
jnp
jl
cmp
in
lret
icebp
add
adc
mov
push
out
ret
jecxz
rcl
jl
and
sub
dec
sbb
mov
test
mov
and
aad
or
lds
fdiv
jg
pusha
rclb
and
jmp
imul
mov
test
shrl
lea
sub
xchg
inc
or
sub
cmp
pop
xchg
rolb
bound
mov
repz
xchg
jecxz
push
cmp
dec
pop
cs
sub
fistpl
cmp
inc
jp
lret
cld
push
adc
cmc
je
sub
pop
jp
and
enter
pop
test
mov
cmp
mov
dec
inc
rcll
sarb
mov
mov
rol
add
scas
arpl
rorb
mov
scas
cmovge
fistpl
xchg
shl
loop
pop
into
sti
aam
or
jns,pn
xchg
popf
lahf
inc
shlb
or
out
push
and
add
aaa
jns
fstpl
jb
xchg
enter
jge
adc
dec
cli
mov
push
dec
xlat
mov
out
fwait
push
push
mov
push
das
js
dec
shll
leave
inc
mov
outsb
mov
jge
ljmp
sub
or
rclb
dec
stc
adc
jo
add
fs
jns
mov
jb
sbb
inc
xlat
cmpsl
negl
popa
pop
and
cmp
rorb
mov
test
mov
sbb
mov
pop
movl
inc
dec
and
xchg
aad
inc
icebp
aad
ljmp
movsl
jne
dec
jp,pn
popa
adc
and
icebp
mov
sub
cmpsl
fdivrl
cmpsl
call
or
outsb
js
pop
and
inc
xchg
jp
sbb
sub
pop
inc
iret
xchg
mov
inc
mov
ffreep
mov
jmp
add
jmp
out
jp
out
pop
push
icebp
xlat
mov
push
je
pop
cs
repnz
fldenv
push
enter
popa
xacquire
pop
ss
inc
pop
or
clc
imul
dec
cmpsl
jmp
dec
mov
clc
dec
xchg
div
mov
outsb
jecxz
dec
pushf
xor
sub
test
enter
sahf
cmp
or
push
sub
lds
cmp
jge
push
and
push
mov
js
xchg
ret
lods
loopne
sti
jb
push
xchg
shlb
dec
sbb
gs
cltd
or
sbbl
cmp
pop
outsb
sbb
lea
outsb
pop
dec
xchg
xlat
dec
inc
cmp
and
into
rolb
inc
outsb
pop
movsb
or
data16
dec
or
xchg
push
or
fcmovnb
push
cli
out
sahf
movsb
fcmovnbe
sub
sbb
push
pop
add
push
add
xchg
aad
dec
sbb
cmp
mov
bound
repz
adc
ljmp
ss
sbb
shll
dec
and
adc
vmovd
dec
push
fcmovnu
test
sub
and
or
mov
lahf
lea
xchg
into
mov
lret
sub
int3
add
ret
jne
out
push
rolb
push
push
js
push
sbb
in
xchg
xor
ret
dec
int3
ljmp
xchg
sbb
cmp
add
push
loop
int
sub
mov
pop
outsl
dec
mov
loope
into
cmp
cmpsl
and
inc
in
imul
nop
call
xor
enter
adc
jmp
jns
jbe
cs
loope
lock
jg
mov
or
enter
mov
xchg
movsb
sbb
xchg
jnp
jno
sub
ds
xchg
mov
and
and
dec
lods
jl
adc
sbb
lahf
xchg
into
or
pop
stos
movzwl
add
test
loopne
int3
dec
cmp
lret
popf
cltd
mov
pop
ja
push
mov
insl
or
pop
jle
xorb
mulb
loopne
or
mov
push
sbb
rorl
cmp
outsb
adc
aad
adc
xchg
or
dec
sub
push
cmpsl
addr16
fwait
arpl
fstps
dec
mov
lret
pusha
cmpsb
insl
xchg
arpl
mov
fnstenv
push
nop
push
mov
pop
stc
add
add
sub
scas
sbb
shll
sub
xor
inc
jge
cmp
inc
mov
cmp
or
and
lods
test
and
psrlq
pop
aad
outsb
stos
dec
loope
dec
add
les
sahf
jae
and
mov
negl
scas
out
or
or
inc
fisttps
pusha
pop
add
xchg
mov
int
test
movsl
out
inc
or
jle
sbb
cltd
cwtl
notb
and
rcr
pop
movsb
sbb
outsl
xor
out
inc
jne
sbbb
adc
cmp
sbb
dec
sbbb
rol
mov
jbe
pop
or
fdivs
test
cld
xchg
or
repnz
xchg
cmp
and
cmp
add
dec
adc
dec
repz
fstpt
mov
test
xor
and
fadds
xchg
xor
in
cs
and
add
and
or
xor
push
cwtl
andb
and
imul
int
cmp
mov
adc
icebp
cmc
addr16
inc
movsb
addr16
daa
push
fnstsw
xchg
fwait
sbb
arpl
push
cmp
mov
sarb
lahf
sub
test
rcll
or
xchg
aam
push
mov
leave
mov
or
jmp
scas
xor
rorb
push
adc
adc
pop
cmp
iret
shll
in
into
test
out
cmp
push
pop
or
addb
sub
lea
insl
sub
adc
sbb
cmpsl
das
pop
aas
sbb
or
sbb
fidivl
push
lret
pop
rcrb
sarl
or
pop
lock
sub
sub
movsb
mov
fsub
cltd
mov
pop
bnd
mov
jno
xor
xchg
sbb
movsl
jge
mov
fwait
iret
sbb
and
stc
fidivrs
cmp
insb
xchg
or
adc
sbb
lahf
dec
and
mov
fisubrl
lcall
insb
push
push
cmp
pop
gs
dec
daa
pop
mov
xchg
hlt
cwtl
pop
and
js
pop
push
dec
pop
rcrb
or
push
loope
jmp
dec
dec
and
sbb
movsb
inc
in
inc
sbb
push
ficompl
mov
jnp
and
rol
jle
and
push
ret
fmuls
pop
movsl
mov
jnp
das
clc
enter
cmpsb
repz
stos
iret
shrl
aad
mov
bound
xor
adc
pop
inc
cmp
hlt
iret
das
cmp
lods
pop
jnp
jns
sti
movsb
sub
loope
mov
dec
test
mov
dec
inc
add
popa
jb
popa
and
pop
test
hlt
pop
cmpsl
or
push
clc
push
outsb
push
jecxz
add
dec
and
mov
addb
adc
lds
cs
inc
jmp
dec
and
or
push
cmpsb
rcll
dec
inc
jp
pop
add
les
nop
add
adc
lret
in
cmp
cmpsb
dec
xchg
test
cmc
mov
jne
pop
std
or
cmp
int
or
lds
and
push
cwtl
lret
and
or
jbe
cld
icebp
xchg
sar
push
xor
shrl
faddl
lock
push
test
fldcw
xchg
mov
mov
xor
cld
pop
or
int3
inc
movsb
adc
test
stc
repz
sub
sti
cmpsl
imul
dec
pop
cs
mov
or
into
mov
in
mov
mov
add
lea
mov
pop
push
es
lods
fidivs
out
leave
fbld
repz
repz
imul
and
or
cmp
arpl
out
inc
sbb
pop
or
add
mov
jmp
outsl
lret
jge
mov
lea
cli
stos
mov
add
repz
and
cmpsb
pusha
js
push
into
scas
enter
dec
lods
je
lods
xchg
jno
push
nop
and
sbb
jnp
cltd
dec
popa
ret
and
stos
test
adc
mov
loop
pop
sub
scas
mov
int3
sub
inc
aad
mov
xchg
dec
lock
dec
in
ds
xchg
les
mov
sahf
jg
pop
divl
daa
push
mov
sub
cltd
ljmp
fmull
imul
pop
daa
mov
jo
xor
xlat
xchg
lock
push
jecxz
mov
cli
and
or
jp
or
scas
push
mov
in
cmp
cli
xor
pop
call
jle
or
ror
pop
adc
xchg
adc
gs
pop
add
sbb
xchg
mov
push
cmp
iret
ja
mov
cmpsb
scas
enter
sbb
sti
mov
int
pop
add
nop
push
pop
adc
jne
or
cld
fisttpll
in
faddl
addr16
fldz
pop
mov
or
in
outsb
das
outsl
enter
test
mov
dec
or
dec
scas
mov
mov
inc
cmp
cmp
outsl
xchg
mov
fisubl
out
inc
or
mov
or
sbb
cmpl
cmpxchg
in
pop
pop
in
dec
push
inc
or
mov
cmp
push
data16
sbb
lock
hlt
pop
adc
push
xlat
pop
arpl
mov
xchg
clc
fcmovne
pop
rorl
fnsave
imul
popf
pop
jae
add
push
mov
adc
dec
lds
mov
cmp
adc
inc
sub
pop
outsb
cmp
inc
push
cld
movsb
mov
cs
mov
mov
incb
pinsrw
in
sbb
xchg
test
fisttpl
aad
or
pop
cltd
or
adc
ret
jmp
add
or
xchg
into
fimuls
inc
out
and
stc
jle
add
or
mov
ljmp
jp
mov
ds
loop
or
jnp
jns
lret
sbb
push
xor
scas
aaa
or
adc
and
cmpsl
lea
sub
push
adc
ss
mov
xor
cmp
ret
adc
push
or
push
ret
mov
jge
add
mov
dec
add
in
sub
or
push
jb
hlt
jnp
xchg
movl
cmc
sbb
ds
jae
mov
pop
inc
or
jae
movsl
and
jl
adc
das
sbb
popa
sbbl
jecxz
insb
lahf
popa
sbb
inc
dec
add
call
movsl
pop
pop
cmp
insl
int3
gs
scas
mov
ja
lea
outsb
dec
incb
lcall
push
mov
cmp
xchg
pop
in
stc
cmp
push
outsl
int
fucom
fbld
call
sahf
pop
bswap
inc
sti
or
push
mov
jae
cmpb
stos
aas
dec
push
fdivr
mov
shll
lcall
cmp
inc
jbe
fldln2
push
add
sarl
mov
mov
sarb
hlt
sub
out
ja
test
test
adc
jns
call
mov
aam
push
fisttpl
fistpl
mov
mov
pop
les
ficomps
adc
mov
mov
ds
repnz
mov
and
pop
inc
aas
inc
inc
cli
mov
test
fdivrl
ficoms
sub
or
mov
pop
mov
xor
add
popl
lock
popa
or
cmp
adc
cmp
fcmovnbe
sub
inc
outsl
push
shrl
jle
pop
add
repz
sbb
pop
jne
pop
in
sub
iret
add
and
or
into
jge
pop
mov
adc
jnp
mov
addr16
mov
jp
pop
addr16
push
lds
jo
sbb
mov
cli
adc
xor
jp
mov
push
jnp
jnp
in
mov
jae
dec
in
pop
insb
sar
jmp
xchg
or
dec
lea
repnz
sbb
adc
jnp
adc
shlb
call
push
jb
push
adc
mov
insb
sarb
in
data16
mov
clc
in
mov
or
or
pop
out
mov
lea
out
dec
jne
fstps
inc
lahf
xor
imul
cmp
cmp
fildl
or
xchg
in
and
push
add
and
jmp
mov
int3
mov
mov
xchg
inc
fsubrs
lcall
jmp
aam
aam
or
das
inc
fsubrs
iret
enter
out
addr16
rolb
push
test
xor
adc
mov
mov
cld
imul
pop
pop
jge
cmpsb
adc
les
aas
ss
icebp
push
bound
aam
sub
data16
push
rorl
xchg
xlat
sbb
push
jp
push
popa
adc
arpl
xchg
jno
cltd
popa
movsl
adc
addr16
lcall
ret
mov
cmp
and
loop
inc
add
data16
xchg
inc
data16
cmp
out
mov
xchg
enter
vpor
add
and
lds
lahf
adc
push
mov
pop
mov
subl
push
insl
addr16
mov
fidivrl
sub
inc
add
push
xor
cmp
sar
push
stos
sarl
xchg
jno
inc
push
or
cmpsb
add
jae
movsb
sbb
push
test
and
clc
jb
dec
mov
mov
bswap
or
xor
loop
popa
in
cmpsb
call
scas
mov
icebp
leave
out
mov
into
enter
movsb
mov
movsb
test
sub
rcrl
push
adc
aad
pop
addr16
jnp
and
cmpsb
mov
movsb
xor
out
mov
aaa
jle
mov
mov
loop
fnop
and
and
and
scas
andb
xchg
idivb
mov
dec
mov
out
lds
jne
cmpsl
ret
inc
or
mov
inc
dec
jbe
jb
and
adc
jecxz
lods
outsb
push
sub
les
mov
orl
pop
insb
mov
mov
mov
pusha
pop
hlt
sub
mov
sbb
mov
cltd
or
loope
icebp
lods
xor
jle
in
enter
stos
and
lds
pop
inc
test
add
cmpsl
je
mov
mov
outsl
cs
sub
insl
fisubl
movsb
filds
loope
pop
sub
out
lahf
rcrb
arpl
lahf
into
fcomp
push
adc
icebp
mov
jno
dec
jne
push
rcrl
movntps
adc
bswap
mov
inc
pop
lahf
push
lahf
cmp
push
cmp
jne
push
jg
cmpl
sub
sub
mov
xor
mov
pop
nopl
or
sbb
adc
ret
fisubl
subb
lods
sub
outsb
test
sub
and
sbb
pop
push
mov
inc
and
mov
inc
aam
pusha
test
add
or
adc
pop
lock
inc
or
mov
test
jne
aam
fldt
pushf
les
rcrl
sbb
sbb
call
inc
sahf
pop
jo
and
insb
or
mov
les
fmull
dec
mov
mov
cmpsl
and
test
and
sbb
pop
andl
jmp
fldenv
push
dec
sbb
or
dec
inc
cli
inc
lahf
cmpl
popa
mov
jecxz
bound
addr16
pop
stos
pop
addr16
fnstcw
sbb
push
fucom
push
and
lcall
xchg
pop
dec
jne
pop
sbb
inc
cmp
or
pop
in
repz
outsb
cld
mov
dec
std
aas
pop
test
and
addl
jp
mov
in
in
repz
jnp
xchg
dec
mov
add
mov
sub
add
nop
sub
add
mov
add
push
dec
ret
dec
mov
jl
sbb
xchg
sub
adc
xor
popf
int
adc
mov
dec
es
shlb
push
mov
pop
dec
sub
out
sarb
jle
jae
iret
adc
mov
xor
dec
loope
mov
sbb
xchg
outsb
fcmovnu
mov
rcll
jle
mov
mov
mov
push
xchg
jmp
cmp
test
sar
roll
stos
in
arpl
sub
out
push
xchg
leave
lret
mov
decl
jae
ds
pop
leave
xchg
shll
sbb
mov
loopne
mov
fsubrs
fldenv
sub
push
xor
mov
pop
insb
scas
or
or
jne
pop
inc
popa
mov
push
rclb
movsb
repz
cmc
cmp
xchg
in
filds
insl
aaa
rol
int
testb
xchg
movl
leave
mov
insl
mov
or
dec
out
scas
xchg
scas
popf
add
push
mov
xchg
adc
sub
jnp
fabs
je
and
mov
es
or
in
dec
and
push
bound
jg
repz
lcall
push
jno
cmp
flds
fldenv
sub
add
sar
push
testb
sbb
jne
sbb
addr16
daa
cmpb
fxch
add
icebp
jg
cmpsb
sahf
std
push
sar
adc
das
pmaxsw
xchg
and
lcall
jp
mov
lods
dec
insl
xorb
in
jmp
jp
and
mov
dec
mov
loop
mov
sub
jae
insl
ficoml
xchg
adcl
or
pop
pusha
inc
cmpsb
pushf
push
fnstcw
mov
push
pushf
xchg
cwtl
sbb
pop
dec
dec
sbb
scas
push
mov
sbb
ftst
mov
daa
cmp
inc
pop
sub
fldenv
ljmp
mov
inc
mov
aas
dec
sub
cmp
adc
sbb
adc
pop
scas
pop
loop
or
dec
sbb
pop
push
loop
adc
or
pop
sbb
les
dec
lahf
shrb
push
in
lds
mov
movaps
aad
xchg
jge
in
aam
adc
lret
jno
inc
sub
into
shlb
push
mov
xor
mov
jge
in
jnp
jmp
fs
and
adc
js
mov
xchg
cmp
xchg
sar
outsb
cmp
ja
imul
inc
or
das
nop
sti
cmp
push
xchg
cmp
stc
mov
dec
aas
outsl
sahf
movsb
fimuls
dec
mov
jle
arpl
jecxz
mov
lods
dec
mov
stos
push
mov
jl
cwtl
jns
arpl
mov
movsl
pop
fcoml
mov
sub
pop
pusha
mov
pop
jae
pop
fcmovbe
int
inc
add
and
fdecstp
pushaw
or
pop
push
outsb
gs
or
push
or
jne
dec
push
lret
xchg
int
xor
inc
jnp
test
lock
fists
or
inc
inc
mov
aas
je
loopne
inc
adc
pushf
add
mov
cmpsb
popa
push
movsl
aas
rcl
push
adc
cmc
bsf
ljmp
sbb
mov
cmp
popf
dec
fmul
outsl
arpl
popa
addr16
or
or
popl
cmpb
mov
sub
in
ror
and
xchg
dec
pusha
mov
adc
and
xlat
push
xor
lea
sub
pop
scas
nop
popl
add
js
xorb
dec
mov
iret
jns
pop
pop
aad
icebp
and
shll
jo
xchg
orb
loopne
mov
ljmp
daa
cmp
cwtl
cli
fisttpll
xor
test
jnp
sub
repz
inc
push
adc
inc
shrl
and
mov
sub
jae
dec
fsts
push
jno
jns
or
insb
or
dec
sub
push
in
xchg
fcoml
ficoml
jno
push
push
lds
adcb
cmp
into
mov
outsb
in
xchg
das
test
sbb
cmpb
pop
cmpsl
push
and
sbb
out
xchg
push
leave
aas
in
adc
cmp
cmpsb
mov
mov
icebp
push
inc
mov
test
cmp
pop
xlat
cmp
je
scas
pop
jmp
dec
sbb
mov
xchg
push
push
filds
iret
dec
xchg
sbb
dec
nopl
jno
rcrl
out
mov
gs
arpl
ret
xor
push
or
cmp
mov
sti
cs
cmp
xor
push
shld
jl
cmp
sbb
adc
aam
outsb
repnz
cmp
jo
repz
fldenv
mov
call
mov
rclb
mov
sub
and
jp
dec
xor
mov
jnp
imul
sbb
or
inc
mov
ja
add
sbb
dec
sub
cmpsb
shr
xchg
push
testb
movsb
imul
push
scas
sub
sbb
ret
mov
addr16
pop
push
xlat
je
pop
nop
add
xor
xchg
jns
inc
lods
fcoml
out
jae
ret
pushf
jg
inc
scas
sahf
mov
mov
cmp
xor
fwait
ds
repnz
sub
movsb
sub
cwtl
pop
out
jle
stc
hlt
into
inc
cmp
add
xor
push
xor
test
call
pop
in
and
inc
jl
movsb
jo
sub
cwtl
xchg
fcomps
jp
xchg
in
add
dec
int
outsb
dec
orl
leave
xchg
pop
sar
cmpsl
xchg
cmpsl
pop
pop
mov
loope
jge
cmc
push
and
jb
or
in
into
lods
mov
or
outsl
inc
lcall
dec
outsb
xchg
adc
es
jle
icebp
nop
dec
adc
sub
inc
cmp
sbb
push
adc
adc
and
xor
jnp
inc
jne
jge
lea
push
add
cmp
xchg
fstpt
movsl
and
pop
nop
mov
test
pop
daa
fiadds
cld
lds
mov
cmp
dec
test
icebp
pusha
sbb
cmp
pop
ljmp
movsb
and
aam
loop
xchg
shrl
outsl
faddl
adc
es
sub
leave
jge
and
in
movsl
jp
jge
aam
out
pop
cs
ficoms
aas
sbb
inc
sbb
scas
xchg
rolb
rolb
mov
xor
repz
outsb
push
dec
adc
and
adc
andb
inc
sub
fisttpll
aam
pop
or
add
rcll
cmp
mov
xchg
fsts
enter
push
dec
dec
xor
jle
mov
adc
add
ss
movsl
add
dec
add
mov
mov
pop
pop
cmp
cld
push
sub
mov
or
adc
xchg
push
lcall
jae
jo
sbb
out
leave
add
or
in
mov
ds
movsl
mov
add
fisubs
inc
sub
rcrb
negl
mov
push
into
add
jb
pop
imul
enter
cmp
inc
push
jmp
pop
mov
scas
jge,pn
jno
xchg
inc
mov
inc
xor
mov
ror
clc
mov
push
ja
icebp
or
pop
jle
xchg
loope
jbe
pop
xadd
test
dec
loop
cmpsl
pop
inc
cmc
and
int
pop
sub
in
xchg
leave
pop
xor
sbb
dec
js
inc
mov
lea
psllw
mov
adc
cmp
jl
out
sub
xchg
inc
add
mov
pushf
or
push
es
test
repnz
xchg
or
push
or
xor
push
je
mov
into
xchg
inc
iret
test
dec
pop
cmp
scas
adc
scas
out
jp
and
stos
mov
jae
fistl
decl
xlat
mov
insl
bound
or
jae
jae
sub
cmp
aas
sub
xchg
pop
adc
sbb
aam
lods
movsb
decb
outsb
xor
jbe
xchg
adc
orl
add
imull
pop
repz
lret
inc
and
or
pop
pusha
and
sbb
adc
push
cmp
push
mov
jno
xchg
push
arpl
sarl
pop
pop
sub
or
jmp
lcall
mov
mov
sub
mov
aas
cmp
sbb
push
xchg
lcall
xor
mov
in
jmp
fisubl
ljmp
aas
bnd
aam
iret
cwtl
cmp
repnz
orl
push
pop
jp
in
in
mov
movsb
stc
shlb
jl
shlb
fdivl
jae
or
daa
and
or
xchg
push
cmp
xchg
mov
icebp
or
dec
jnp
mov
pop
push
mov
mov
jp
xchg
mov
fwait
mov
pop
test
add
add
mov
insl
and
insb
mov
sbb
sub
push
daa
or
in
ds
pop
jecxz
jmp
push
gs
jp
ret
aas
fnsave
jbe
mov
or
aam
add
mov
xchg
xor
data16
sub
add
lret
and
scas
cs
test
add
push
mov
or
and
sub
inc
push
add
mov
inc
sbb
and
adc
push
dec
push
shr
lods
inc
fldl
testb
xchg
test
cli
sbb
fsubrs
mov
cmpsl
adc
call
or
scas
add
adc
scas
push
in
in
lds
sbb
enter
cmp
lcall
or
xlat
inc
jae
xchg
in
pop
adc
jmp
fiadds
imul
icebp
outsl
mov
mov
push
adc
mov
cmp
test
push
pop
aaa
xchg
pop
psllq
sarb
inc
lret
icebp
rcl
in
or
or
insl
jle
ja
popf
push
ret
mov
dec
test
lret
loopne
int
fcmovnu
loop
mov
jbe
aad
test
lods
push
adc
and
gs
mov
shll
xor
out
mul
push
popa
es
dec
out
inc
mov
or
aad
jp
xor
lea
jecxz
pop
aam
shl
dec
xchg
repnz
and
ja
sub
popf
icebp
stos
inc
jnp
ret
sub
and
inc
bound
fbld
inc
std
push
bound
push
sti
bound
add
arpl
sbb
loope
data16
out
int
or
outsb
mov
cmp
paddusb
inc
lea
in
mov
add
push
adc
notb
and
mov
icebp
fbld
dec
push
sbb
mov
cmp
mov
cmp
xor
push
inc
and
sub
stc
fidivs
loop
std
scas
add
sbb
xchg
or
push
aas
das
jp
adcl
dec
push
ljmp
sbb
sub
push
test
mov
stos
mov
xchg
cwtl
lods
faddl
out
pop
dec
out
inc
fisttpl
leave
sub
mov
nop
mov
addb
and
inc
or
sub
fcompl
add
out
imul
mov
fimuls
out
or
mov
cwtl
outsl
lods
sbb
sbb
outsb
fisttpll
xchg
or
cmp
or
and
std
lds
loope
outsl
push
xchg
imul
cmc
mov
mov
xchg
das
aaa
outsb
pop
jae
push
push
and
sbb
xor
jno
dec
jp
data16
lahf
popf
inc
and
sub
cmp
sbb
and
or
xor
sub
jb
jb
inc
outsb
sbb
icebp
dec
lods
dec
mov
push
xor
js
xor
jp
add
fdivl
jb
jns
xchg
xor
push
pop
nop
mov
mov
fists
cmp
fwait
xchg
mov
loop
cmpsl
mov
arpl
ret
adc
cmpb
xlat
and
sub
xor
push
out
fcomi
xor
idivl
iret
inc
ja
movsb
mov
adc
pushf
fcmovb
cli
nop
mov
jecxz
daa
and
jp
pop
jp
mov
in
ss
add
shrb
mov
cmp
stos
pop
mov
push
dec
inc
push
push
mov
lds
fcompl
sbb
inc
add
xor
jg
cmp
adc
out
cltd
add
jge
das
or
rcrl
mov
cs
xchg
sbb
subb
orb
cmp
lock
mov
xchg
jmp
dec
and
adc
dec
test
xchg
jmp
adc
jecxz
push
bound
adc
sub
test
fwait
pop
ja
cmpsl
popf
out
or
push
test
sub
adc
sbb
adc
jmp
sbb
movsl
out
xchg
add
sarb
fiaddl
lods
fnstsw
push
and
pop
jns
out
fiadds
sbb
inc
mov
inc
and
outsb
fcoml
pop
inc
push
test
mov
pop
xchg
mov
add
mov
adc
sbb
flds
mov
outsb
outsb
aaa
jmp
mov
cmp
inc
jp
add
push
xchg
cli
push
add
int
and
pop
movsb
loope
pop
pushf
pop
imul
cmp
push
insb
jns
xor
or
or
dec
cmp
xor
sahf
cmpsl
mov
fists
fcompl
hlt
push
int3
lahf
push
and
or
or
pop
inc
sub
jnp
movsb
cmp
out
fwait
movsl
fisubs
jnp
sub
aad
xchg
xchg
inc
mov
jg,pt
scas
aam
es
add
adc
jnp
arpl
mov
dec
daa
cltd
andb
adc
dec
outsb
xchg
or
push
test
cwtl
or
jb
insb
stos
fistpl
test
add
or
sbb
loope
sbb
shrb
int
xor
xchg
and
sub
outsl
cmp
cmp
push
sbb
les
push
scas
xchg
insl
or
and
xor
les
adc
das
filds
sbb
lahf
pop
push
test
lock
icebp
shr
out
lock
push
das
lock
int
cmp
stc
sub
mov
std
std
lods
add
mov
xlat
xor
iret
sahf
xchg
dec
push
movsb
or
or
and
sbb
aas
sub
cmpsl
outsl
aad
pusha
sub
lea
iret
fsubrl
mov
cs
push
jge
mov
dec
setp
push
ret
stos
sbb
sub
out
push
shll
mov
imul
fsubp
add
sti
jns
jl
adc
mov
pop
jl
xor
sbb
mov
loopne
lds
imul
fwait
lret
pop
pop
jecxz
or
push
pop
mov
adc
leave
add
dec
sbbb
clc
push
lret
mov
pusha
lock
or
cli
mov
lea
bound
cmp
push
pop
dec
and
add
inc
outsl
add
mov
or
pop
aas
pop
imul
xorl
mov
das
mov
xchg
movsl
jg
pop
loope
int3
cwtl
jmp
ficoml
xchg
mov
dec
lds
adc
test
adcl
inc
inc
rcrl
cmp
leave
hlt
pop
pop
jl
daa
pop
out
fldl
into
ficompl
shll
das
inc
cli
lods
cwtl
pop
pop
in
dec
nop
jg
clc
fisubl
sub
and
and
mov
push
mov
mov
out
add
subb
ror
pop
shll
adc
inc
lock
divb
leave
xchg
push
mov
inc
pop
adc
mov
push
pop
jge
sbb
les
in
jg
cltd
cwtl
clc
movsl
dec
xor
inc
jl
cld
sub
es
mov
and
outsb
or
in
insl
cmp
ja
inc
repz
mov
mov
mov
loope
push
ljmp
push
arpl
mov
hlt
add
fcmovb
insl
movsl
mov
xchg
loope
fisttpll
xor
lea
xchg
mov
push
in
mov
and
iret
or
ds
divb
rorl
xor
pop
pop
in
fisttpl
pop
rorl
mov
cli
and
or
jge
fwait
fistl
in
fstps
pusha
pop
clc
scas
mov
movsl
fisttpl
jbe
rol
and
sub
dec
roll
fbstp
sbb
lea
rcr
aas
mov
loop
andl
xchg
mov
push
or
or
add
in
stos
mov
xchg
cmp
aas
push
cltd
out
xchg
mov
arpl
fcmovne
fisubrs
xchg
cld
push
repz
mov
out
lcall
xchg
inc
mov
fisubrl
xchg
rcrl
cmpsb
jns
ja
pop
popf
pop
push
imul
jo
sar
inc
push
fisubrs
repnz
inc
pop
and
jmp
fstpl
or
mov
pavgb
jns
add
test
xchg
shrb
xchg
out
xchg
icebp
je
test
int
pop
inc
adc
mov
inc
jge
fwait
inc
mov
insl
dec
cmp
lds
mov
repz
daa
jge
ds
pusha
or
push
and
mov
push
dec
inc
dec
or
in
dec
cli
cmp
add
call
orl
cltd
jo
fmull
rorb
shrl
movsb
icebp
sub
call
fsubrs
and
and
popa
or
jne
mov
rclb
pop
in
jmp
mov
cmc
aaa
dec
sbb
sbb
cmp
and
bound
icebp
inc
cwtl
ficompl
movsl
mov
mov
push
push
adc
pop
shl
divl
and
lret
test
jg
cmp
sub
mov
pushf
pusha
pop
and
mov
rorl
mov
aad
push
enter
mov
imul
mov
cmpsb
dec
add
jo
and
mov
std
leave
jae
repnz
inc
in
cmpsb
das
mov
mov
or
lcall
int
scas
cmp
adc
test
loop
jne
xchg
clc
sbbb
add
outsb
test
jp
leave
and
xchg
mov
add
call
shrb
pop
mov
or
or
push
add
and
adc
push
xchg
stos
fs
inc
test
movsl
xor
pusha
inc
mov
ffree
jns
dec
daa
xor
push
in
out
js
lret
mov
push
shl
and
roll
loope
cmp
stc
xor
inc
pop
dec
or
addr16
xchg
andl
sub
jmp
dec
mov
fsts
lock
ss
ret
jmp
xchg
mov
lret
mov
mov
dec
cmp
push
gs
sub
xor
popa
repnz
stos
mov
adc
in
xchg
outsb
stos
inc
fdivr
enter
leave
and
mov
jge
lods
inc
notl
lock
les
dec
xor
pop
jle
add
push
xor
lods
jmp
mov
pop
dec
xor
or
xor
test
clc
pop
mov
xor
sbbl
insl
mov
cmp
movsb
jno
xchg
add
or
mov
test
and
aad
dec
push
lods
jg
jp
bound
daa
cli
push
push
stos
jecxz
aad
adc
lret
mov
cmp
jmp
xchg
test
lods
insb
aas
inc
inc
adc
xchg
test
adc
dec
mov
bound
push
int3
lods
or
push
pop
sahf
cmp
pushf
lock
imul
mov
fdivs
sbb
and
sarl
repz
push
stc
ficomps
pop
lds
in
ss
inc
inc
adc
dec
mov
mov
or
add
push
adcl
add
pop
ret
xor
out
jmp
and
dec
and
dec
adc
pushf
or
or
rclb
push
jae
lods
scas
cwtl
add
lret
fcmovne
pop
xchg
push
push
sbb
aaa
mov
sub
and
mov
mov
pop
shrl
pop
fidivs
mov
in
jecxz
jb
dec
roll
mov
fwait
cmc
test
leave
jge
inc
loop
push
mov
jo
in
lcall
leave
cltd
dec
repnz
xor
loop
dec
mov
movsb
dec
and
push
xchg
je
sub
adc
out
movsl
xchg
ss
xchg
xchg
scas
pop
sbb
mov
pop
sbbb
cmp
fwait
neg
or
lahf
popf
sub
out
ret
lock
push
adc
pop
and
inc
stos
ret
and
push
sbb
lea
sbb
mov
cli
stos
push
jne
mov
push
mov
push
repnz
push
cmp
xor
enter
popf
test
pop
fistl
xchg
pop
xor
add
test
dec
arpl
repnz
movsb
sbb
cmp
popa
clc
sarl
fwait
cmpsl
cmpsb
dec
jmp
jne
or
cmp
and
gs
pop
mov
outsl
dec
push
popa
add
or
push
mov
inc
repnz
and
dec
popa
sbb
mov
cwtl
lods
sub
addr16
jno
fisubl
adc
mov
mov
jo
into
outsl
push
mov
push
sbb
mov
inc
adc
adc
sub
fs
inc
pop
in
sbbl
cmp
scas
in
inc
icebp
stos
call
into
push
test
stos
icebp
stos
cmp
scas
fists
sbb
add
pop
adc
or
adc
ficompl
mov
mov
adc
or
xchg
inc
or
insb
aaa
adc
sahf
sub
xor
add
cli
lods
andb
or
lods
mov
xchg
inc
dec
fildll
xor
push
mov
ds
negl
mov
mov
sbb
test
push
imulb
notb
dec
jne
sub
lock
inc
xorl
xchg
vunpcklps
xor
loope
inc
je
ficompl
call
pop
sbbl
and
popa
leave
in
or
mov
insl
cmc
mov
or
mov
je
mov
pop
pop
mov
xor
jl
cs
scas
or
xchg
or
push
ficompl
mov
flds
pop
xchg
and
hlt
pop
pushf
mov
imulb
adc
mov
push
orb
rcll
in
sti
int
sbb
or
in
adc
inc
and
gs
hlt
subb
jl
stos
sbbb
lret
mov
in
pushf
lds
jle,pn
mov
and
pop
push
xor
notl
pushf
cmpl
mov
fwait
sarl
push
shrd
fmuls
xor
push
jae
push
mov
mov
mov
das
movsb
cmpsb
in
and
push
dec
ret
pusha
shl
mov
gs
shll
out
inc
pop
popf
lea
dec
jns
test
or
add
push
mov
mov
sbb
xor
rcll
jae
jbe
in
or
aaa
outsb
push
popf
cmp
shrl
sub
shll
jl
sbb
dec
dec
mov
mov
xchg
cmpsb
outsl
add
mov
arpl
sbb
cmpsb
divb
or
mov
pop
les
or
mov
adc
push
shll
data16
int3
jmp
and
mov
jo
sbb
incb
mov
mov
add
push
sbb
cmp
sbb
mov
jmp
adc
adc
fcoms
test
leave
jne
loop
adc
in
push
cmp
push
pusha
mov
add
cmp
sub
outsb
rcll
pop
sbbl
inc
scas
and
les
inc
cmp
push
lea
mov
call
leave
adc
jno
test
xor
cmp
test
ds
xor
jne
push
add
cwtl
jnp
add
je
mov
xor
xlat
mov
fiadds
push
mov
inc
loop
test
call
push
ds
dec
pusha
je
dec
inc
jl
dec
cmc
xlat
imul
sbb
inc
inc
pop
into
ret
adc
gs
in
pop
dec
mov
add
fmull
jp
xlat
adc
jle
add
cmp
in
add
nop
pop
sbb
and
outsb
pushf
je
and
aas
dec
int3
dec
cwtl
inc
xchg
call
ljmp
jge
xor
int
popa
pop
mov
aad
out
mov
test
jns
xchg
xchg
add
xchg
call
in
cwtl
fs
mov
insl
cli
or
jne
inc
out
test
inc
dec
xchg
sub
add
sbb
in
dec
mov
loop
jb
cmp
mov
dec
push
das
negl
outsb
cli
push
xchg
negl
sub
test
leave
popa
std
out
cwtl
mov
scas
es
xor
mov
fisubl
shll
mov
addr16
sub
fs
iret
sbbl
inc
mov
lret
rclb
mov
fimuls
sar
dec
cmp
sub
into
sbb
cs
sub
pop
cld
mov
jecxz
mov
cmpsl
adc
sub
js
out
mov
and
push
int
in
stos
lods
in
ja
popf
jmp
movsb
cmc
sub
arpl
jns
cmp
adc
mov
adc
scas
add
fcoms
push
adc
mov
mov
iret
test
lahf
cli
sarl
pmaxsw
pop
cld
nop
lods
xor
sbb
sub
repnz
pop
adc
mulb
sarb
cmp
push
cvtdq2ps
mov
bound
pop
cld
enter
jb
lret
add
pop
push
test
int
or
push
ror
fmull
out
mov
into
jge
mov
bound
lds
lret
mov
popf
jecxz
mov
jbe
shll
icebp
xor
xchg
push
inc
cmpsb
jo
lret
xchg
lret
pop
mov
mov
ret
in
fisubrs
sub
ljmp
mov
jg
pop
pop
push
leave
lds
into
mov
outsl
mov
mov
mov
pop
sarl
pop
mov
or
mov
adc
push
enter
imul
into
jns
xor
fs
sahf
mov
jecxz
inc
rcrl
inc
test
adc
adc
jecxz
dec
xor
outsb
xlat
mov
xchg
fsubr
mov
std
jbe
mov
pop
imul
sbb
testl
sbb
cs
aam
cmp
shrl
inc
mov
cmp
mov
std
loop
mov
pusha
addr16
mov
jl
fidivs
push
push
jmp
xor
into
mov
mov
add
ret
push
pop
xchg
cs
insl
jmp
pushw
shl
mov
sahf
dec
mov
jmp
into
adc
jge
popf
fdivrs
mov
push
and
jg
pop
decb
jne
shr
mov
xchg
cmp
pop
xorl
mov
mov
cmp
mov
loopne
mov
es
sbb
push
inc
cmpsb
dec
pop
rolb
shll
nop
mov
rcl
inc
and
xor
cs
mov
movl
jle
xor
sbb
jns
mov
fnsave
push
into
insb
cli
add
test
scas
ljmp
icebp
imulb
xchg
mov
adc
cmpsl
mov
sbb
or
xchg
push
sub
xor
addl
fsubs
mov
out
into
mov
mov
les
mov
pop
xchg
jo
inc
jge
xchg
fwait
jp
das
add
mov
cld
cmp
jg
testb
out
dec
push
fs
rcll
test
dec
pop
movsb
and
clc
lods
mov
mov
fs
rclb
test
cmp
in
fcmovb
jecxz
pusha
xchg
pop
jbe
test
ret
sbb
push
jns
pop
in
sub
popa
daa
out
push
adc
outsb
mov
ss
xchg
shll
jns
out
les
mov
cmpb
and
movsb
or
xchg
mov
push
and
dec
leave
aam
movsl
outsb
leave
lods
scas
fstpl
and
ret
push
xchg
dec
mov
scas
fwait
cmp
cmp
sbb
xchg
test
pop
adc
mov
cmc
gs
mov
or
loopne
mov
pop
jne
push
movsb
jb
mov
roll
jge
std
fs
or
clc
insl
test
cltd
mov
and
pop
mov
or
iret
in
mov
mov
inc
mov
aas
adc
pop
ljmp
stos
pop
out
lahf
mov
dec
into
enter
divb
jl
mov
mov
sbb
out
xchg
arpl
xchg
test
mov
cltd
shll
scas
iret
xor
int
sub
mov
pop
sub
mov
xchg
lret
mov
out
psrlq
ret
fs
xor
loop
mov
mov
test
sub
mov
loop
scas
mov
mov
cmp
dec
popf
ret
stos
or
jp
stos
mov
fdivs
movsb
jo
das
cmpsb
mov
xor
xlat
int3
sub
ret
in
cld
sbb
fsubrp
sbb
sub
aad
adc
mov
call
decl
sub
xor
call
xchg
das
dec
inc
sar
rolb
ficompl
cmpsb
aaa
sub
or
popf
inc
and
test
mov
push
testl
mov
cli
mov
mov
cld
push
ja
cmc
dec
dec
add
xor
out
sbb
movsl
adc
lods
mov
ret
mov
fistpll
out
push
jp
popf
push
ffreep
call
out
push
or
insl
push
mov
mov
jnp
add
jnp
rclb
and
fwait
addl
dec
pushf
mov
divb
dec
ljmp
lret
mov
and
xchg
sbb
sub
idiv
jae
jp
jle
push
mov
aad
mov
int
mov
mov
aam
cmp
test
jns
das
mov
mov
aam
roll
repz
push
or
xorl
sbb
xchg
repz
pop
xchg
add
mov
je
mov
out
push
insb
das
add
add
xlat
mov
or
xor
out
sbb
add
test
push
aam
lahf
cmp
outsb
push
sbb
adc
push
cmp
mov
movl
xchg
imul
lods
in
call
pushf
xchg
arpl
jb
movsl
mov
xchg
sub
scas
das
dec
cmpsb
loop
out
movsl
adc
cmp
dec
cmpsb
push
or
cmp
jne
or
push
mov
sub
xchg
outsl
lods
or
insb
xchg
stos
dec
sub
jp
ljmp
jmp
sub
inc
orl
movsb
cmp
ret
xchg
add
push
adc
jmp
pusha
cld
cmpsb
aas
sbb
add
loope
fistl
pop
sbb
and
xorb
pop
pop
pop
xchg
stos
int
inc
push
repz
mov
mov
sub
pop
cli
nop
mov
xor
dec
sbb
or
psrlq
aaa
or
adc
test
jge
imul
xchg
mov
sbb
pop
popf
mov
addr16
fiaddl
lods
hlt
into
out
cmp
jnp
mov
sub
sbb
dec
pop
cli
dec
daa
jbe
sbb
mov
mov
hlt
dec
icebp
sub
lahf
pop
aam
test
inc
mov
jns
mov
negl
test
push
in
pop
mov
mov
shl
mov
mov
sarb
lret
mov
ret
andl
fistpll
lret
ja
fidivrl
lea
dec
cmpsl
loop
pop
pusha
sbb
push
mov
mov
pop
aas
mov
dec
dec
sar
arpl
dec
xchg
cli
pop
push
outsl
stos
jmp
fistps
sub
outsl
fcmovbe
dec
dec
xor
and
rcrb
ss
push
iret
lods
inc
test
cld
test
or
cmp
dec
jnp
scas
jecxz
out
xchg
xchg
xchg
and
xchg
rorb
mov
pop
jge
movzbl
jae
inc
jmp
add
xor
cmpsb
mov
dec
xchg
repnz
lahf
stos
jle
jnp
rcrb
cli
cmc
rol
push
sub
or
add
jle
ljmp
mov
das
sahf
xchg
jae
mov
mov
stos
mov
cmp
mov
clc
cmp
pop
shl
pop
cltd
test
mov
shr
push
lods
adc
jbe
inc
push
lds
inc
jns
sti
mov
jae
scas
jmp
mov
call
push
aam
fsubl
popf
cld
xor
loop
loopne
testb
mov
lock
inc
in
sub
push
iret
ljmp
ja
mov
ja
mov
sub
addl
pop
leave
sub
out
sti
ss
outsb
cli
cmp
les
testb
pop
faddl
dec
cwtl
mov
pop
in
pop
lock
cmp
jmp
xchg
pushf
sbb
and
out
ret
sub
and
sub
push
loop
and
pop
add
add
dec
jb
cli
int
gs
sbb
aad
add
shl
into
sub
rolb
pop
arpl
loope
stc
icebp
inc
addr16
pusha
add
ja
inc
xor
in
das
cmp
or
imulb
lds
add
pop
notb
les
dec
mov
cli
mov
iret
xchg
lret
sub
out
xchg
inc
jl
pop
cmp
dec
push
cltd
cmp
or
fstps
jmp
or
jae
std
rol
ja
push
jno
mov
mov
dec
pop
jne
sbb
xor
and
xchg
pop
dec
dec
test
test
call
mov
mov
daa
dec
add
cmp
stc
xchg
ljmp
push
sarb
in
fnsave
aaa
fsubrp
or
out
sub
jae
cmp
call
fildll
adc
mov
insb
mov
cmp
inc
xor
dec
mov
or
sub
movsb
pop
inc
fdivrs
inc
out
and
mov
ficoms
outsl
scas
pop
shll
xchg
call
cmp
out
jle
jl
adc
retw
mov
ljmp
push
stc
sub
jmp
jecxz
adc
mov
sbb
and
loope
mov
insl
pushf
inc
and
xor
pop
imul
js
outsl
and
and
cmp
inc
pop
rcrb
cmp
inc
fisttpll
shlb
test
jmp
int
or
and
cli
xor
inc
and
lock
lock
and
out
mov
lahf
inc
icebp
sub
and
sub
std
insl
cli
mov
inc
out
lahf
pop
fidivs
icebp
je
cmp
cmp
cmp
pop
dec
js
cmp
popf
cmp
or
and
sub
mov
jb
adcb
jb
and
jne
pop
mov
out
add
lods
mov
mov
test
subb
push
sub
mov
or
out
add
movsl
aam
movsb
paddusb
aaa
int3
pop
stc
movsb
pop
fdivrs
dec
dec
aaa
hlt
in
dec
test
fcmovbe
icebp
push
push
push
jmp
or
dec
cmp
xor
xor
pop
jnp
jmp
nop
add
xchg
mov
loopne
rolb
push
je
cmp
aas
ljmp
mov
int3
xchg
out
enter
sbb
sbb
cmp
les
cltd
inc
fstpl
push
movsb
push
test
clc
sub
fistpll
sbb
movsl
out
dec
dec
inc
xchg
jg
inc
out
in
mov
aas
fsubl
repnz
fstpl
pop
movsl
and
mov
addr16
enter
mov
sbb
in
pop
and
icebp
or
sbb
ja
in
cmp
push
jg
test
lret
es
outsb
xor
lret
cmpl
dec
popf
pop
cli
mov
add
or
cmpsl
lahf
sbb
enter
mov
hlt
fwait
mov
mov
dec
pop
pop
add
push
lea
inc
add
pop
dec
jnp
fisttpl
push
jle
jle
sbb
mov
add
inc
stos
pop
sbb
dec
nop
pop
adc
xor
ljmp
adc
add
mov
xchg
pop
pop
int
mov
sbb
aas
xchg
cltd
jnp
or
jb
mov
dec
push
inc
mov
loope
xor
and
push
jae
xchg
fisubl
and
int
cltd
insb
das
fcompl
xor
es
push
xchg
mull
xor
fadd
lds
ret
pop
adc
mov
pop
mov
imul
imul
insl
sbb
push
cltd
decb
pushf
mov
vmwrite
pop
mov
sarb
adcl
out
xchg
jae
cwtd
std
cwtl
or
int
xor
pop
std
js
ja
push
test
insl
lcall
outsb
sub
sti
sub
inc
pop
outsl
lcall
mov
xor
or
mov
cmp
in
mov
imul
xchg
mov
pop
mov
cmpb
clc
push
push
or
rcr
mov
mov
es
mov
xchg
pop
push
sbb
stos
daa
stos
popa
rorl
push
scas
daa
in
cmp
dec
iret
jb
xchg
nop
or
push
notb
fildll
aam
addr16
xchg
sbb
cli
and
mov
xor
cmpsb
int
mov
pop
cmp
in
icebp
xor
inc
popf
and
add
dec
mov
popa
loopne
xchg
adc
push
or
jae
or
jl
inc
popa
loope
jne
adc
pop
call
pop
pop
dec
loope
sub
jbe
add
repz
dec
cmp
lcall
xorb
xchg
ljmp
mul
out
lret
cmp
jns
neg
out
mov
xor
jb
pop
sub
nop
and
inc
jns
xor
add
mov
pop
add
leave
xlat
xchg
cli
mov
dec
lret
xchg
rol
or
mov
das
outsl
ljmp
cmp
cmpsb
mov
sub
push
insl
or
js
push
dec
cmpsl
push
xchg
leave
lret
add
into
sub
xchg
fildl
dec
cmpsl
imul
out
cmpsb
add
lret
lock
std
inc
test
das
jle
cmp
xlat
daa
adc
xor
or
push
push
cs
adc
pop
mov
mov
addr16
pop
pop
xorl
push
mov
xchg
push
mulb
fs
jns
leave
adc
lcall
cmp
sub
les
or
sbb
arpl
enter
ret
xchg
adc
cmp
and
xchg
lock
pop
xor
add
negb
mov
adc
fnstsw
insb
sbb
mov
fiaddl
dec
cmp
pop
sti
fs
out
out
or
and
test
loop
mov
loope
pushf
mov
or
jns
cmp
mov
js
sub
xor
jecxz
fwait
fwait
jecxz
fadds
in
mov
jo
jbe
dec
dec
and
cmp
jecxz
or
jmp
xlat
jbe
or
aam
out
ljmp
out
cmp
xlat
or
adc
insl
xchg
fdivp
inc
out
lods
call
xchg
mov
leave
shrb
orl
leave
enter
movsl
mov
or
adc
push
jge
mov
movsl
mov
sbb
mov
fsubrs
and
ja
and
orb
xchg
mov
mov
sub
sub
test
fs
rolb
stos
test
int
cmp
sub
lods
inc
mov
cpuid
xchg
mov
sub
mov
adc
or
push
sub
cwtl
xor
in
inc
dec
jae
je
jecxz
dec
jno
les
ljmp
dec
dec
and
xor
imul
mov
shl
and
mov
aam
mov
sub
xor
cmp
xchg
jb
mov
daa
test
add
mov
repnz
cwtl
and
lods
nop
push
mov
lahf
and
lock
or
loopne
xchg
push
xor
dec
lock
add
add
push
es
xor
xchg
popf
jb
shrl
mov
push
negl
daa
or
clc
popf
xor
mov
les
pop
sti
cmp
data16
xor
iret
sub
cmp
pop
out
mov
test
bound
sti
test
fiaddl
xor
iret
call
cmp
push
push
mov
xor
xor
imul
sub
nop
mov
nop
sub
jns
das
mov
fisttps
adc
cmpsl
push
push
mov
fisubrl
sub
sub
cmpsl
out
pop
push
insl
or
sti
dec
xchg
xchg
dec
lahf
mov
ja
aaa
add
lods
pushf
fsubrp
insl
mov
mov
mov
push
pxor
jbe
outsl
inc
inc
sub
mov
stos
rcll
pusha
ficoms
sub
adc
jge
or
sub
cmp
dec
repnz
inc
stc
xor
sub
sub
sbb
fistpl
lods
retw
push
pushf
or
dec
adc
add
faddl
push
cltd
pop
xor
std
cld
sub
pop
addb
and
jbe
std
and
fmul
int3
push
sub
dec
mov
pop
stc
sbb
lods
pop
out
sub
add
sbb
jp
pop
pop
jg
aam
mov
fwait
jmp
lret
leave
hlt
mov
or
aam
or
call
fiadds
add
push
sbb
addr16
das
mov
sub
les
fwait
ljmp
popa
or
fidivl
jecxz
and
cmp
jmp
loop
sbb
dec
mov
hlt
loopne
or
add
insb
fmulp
out
in
popa
push
stos
insl
data16
pop
nop
cmpsl
loope
insb
stos
adc
into
lods
add
lret
stc
mov
imul
jae
scas
xor
clc
sbb
jmp
shrl
sbb
pop
fs
and
jg
ret
shlb
imul
pop
mov
je
out
call
push
mov
adc
jnp
pop
jne
mov
dec
fisttps
cmp
sbb
popf
das
xchg
jg
pushf
mov
sbb
divl
adc
pop
sbb
mov
pop
pop
sub
sarb
mov
jne
jle
mov
pushf
mov
lock
fcomps
imul
mov
add
push
add
lret
and
sbb
cld
arpl
adc
pop
inc
lcall
mov
pop
xorb
ret
loope
pop
or
lret
jmp
xlat
pop
push
and
movsb
xchg
inc
xor
or
pushf
xor
adc
cmpsb
jbe
sub
scas
sub
push
dec
rcrb
cmp
daa
movsb
add
aaa
xlat
dec
mov
push
filds
xchg
mov
and
pop
out
pop
xor
loopne
adc
mov
aaa
xor
fs
ss
pop
lret
mov
push
aam
bound
pop
pop
and
lret
cld
mov
and
inc
or
stc
mov
enter
shrb
dec
pushf
adc
idivb
jmp
inc
mov
dec
mov
mov
xchg
outsl
jecxz
das
dec
cwtl
jecxz
pop
mov
js
enter
or
jno
pop
je
hlt
mov
cmpsl
insl
cld
inc
stos
ss
bound
arpl
mov
cli
add
mov
sti
dec
cmp
out
loope
jae
xor
clc
jb
pusha
jns
movsl
pop
or
jp
aaa
je
and
inc
jb
je
sbb
mov
mov
or
sbb
cmp
popa
xchg
push
adc
mov
dec
shll
fiaddl
jmp
lcall
sub
xor
fidivrl
pop
loopne
je
bound
shll
mov
sti
addl
scas
sbb
jnp
xchg
arpl
mov
cmp
jno
dec
movsb
hlt
ret
mov
xlat
lock
mov
push
cmpsl
jns
jle
jo
add
pop
adc
outsl
shrb
lret
xor
inc
dec
pushf
nop
repnz
js
stc
pushf
cmpsl
movsl
imul
lods
add
pop
mov
cld
lock
jg
inc
dec
adcb
cmpb
fstl
xlat
inc
ljmp
jb
adc
push
int
pop
outsl
xor
call
imul
ret
ret
ja
xchg
mov
mov
out
mov
jbe
or
rol
je
xchg
inc
push
sub
frstor
fisubrl
cmpsb
push
in
in
sahf
pop
push
push
fadds
frstor
je
inc
pop
stc
pop
mov
and
sub
or
shrl
xchg
lahf
in
sbb
xchg
mov
cmp
fdivs
mov
mov
jo
movsb
test
adc
mov
lret
and
pushf
fcomps
push
pop
push
imul
in
enter
jl
rclb
mov
sbb
mov
leave
xor
add
imull
aad
lret
lea
inc
sbb
rcrb
inc
add
xchg
fdivrs
xchg
jne
insl
pushf
xor
and
or
push
jno
or
xor
sbb
sti
cld
lods
and
aas
out
call
aaa
mov
sub
add
dec
jae
shll
mov
push
clc
xor
nop
jnp
adc
add
std
mov
aam
sbb
iret
push
or
mov
mov
adc
sarb
aad
test
jae
lods
sub
sub
mov
adc
pop
popa
add
clc
mov
in
jbe
mov
dec
inc
lods
imul
dec
stc
and
adc
cmp
xor
clc
or
sbb
loope
fistl
mov
clc
jle
int
sbb
or
int3
push
xchg
in
pop
scas
sbb
xchg
out
insl
dec
pop
stos
or
mov
je
or
or
clc
iret
sbb
les
adc
adc
or
mov
leave
mov
fsubr
je
in
lods
fwait
pusha
and
mov
or
fadd
xchg
pop
xchg
imulb
bound
mov
adc
loopne
pushf
scas
push
and
subl
nop
xchg
sbb
dec
push
sbb
mov
push
jmp
out
or
std
and
xchg
and
push
adc
mov
call
lret
icebp
and
pop
or
pop
inc
cmp
mov
in
mov
andb
jae
jo
dec
mov
adc
lret
lret
clc
insl
pushf
dec
mov
pushf
nop
adc
adc
or
sbb
pop
sti
xor
in
mov
xor
pop
sbb
insb
lock
shrb
sbb
or
push
and
dec
movsb
sbb
out
adc
adc
ret
push
pop
cli
xor
pop
sbb
das
dec
icebp
dec
in
test
cltd
sbb
mov
data16
subl
movsb
jnp
push
cmpl
add
adc
adc
adc
stos
and
int
jne
mov
and
inc
in
rolb
sbb
mov
jo
addr16
ss
out
xchg
xchg
mov
xchg
jb
push
out
arpl
ficompl
pusha
xchg
scas
jnp
adc
fimuls
sbb
push
daa
cwtl
pop
fldt
mov
push
out
mov
push
shlb
pop
push
fstpl
add
mov
or
cli
jbe
xor
out
mov
push
mov
jo
xlat
pop
adc
sbb
in
outsb
rorl
mov
dec
clc
xchg
popf
jle
ret
mov
jo
sbb
int
ds
push
push
adc
xchg
sbb
insl
pop
xor
cli
and
lods
push
mov
lods
dec
pop
push
or
xchg
mov
jle
push
cmpsb
push
xor
pop
mov
add
mov
dec
fisttpll
fildll
or
jne
imul
mov
fisubrs
cmpsl
sbb
shr
push
jae
loopne
inc
jecxz
or
rolb
xchg
mov
dec
cmc
sub
mov
and
mov
push
push
mov
repnz
fbld
sbb
and
daa
xchg
aad
sbb
clc
shl
xchg
loop
add
jbe
mov
xchg
outsl
lods
popf
in
imul
rol
into
sbb
ret
insl
sahf
imul
pop
xchg
pop
dec
adc
cmp
and
jmp
sub
cmpsl
adc
adc
jg
outsb
pop
cltd
pusha
out
or
in
fcoms
sbb
das
xlat
inc
or
jg
in
test
mov
outsb
ljmp
arpl
jle
aaa
and
push
add
enter
adc
leave
sbbl
adc
xchg
scas
cmpsl
inc
pop
popf
dec
lds
cwtl
push
mov
sub
jge
cmp
mov
push
cmp
dec
popa
add
adc
roll
cmp
mov
arpl
push
xchg
cmpsl
and
push
jnp
push
in
sub
and
rol
xchg
xlat
sti
and
jae
jmp
std
xor
pop
sub
adc
jmp
rcll
cmp
pop
insl
push
imul
sub
cmp
insl
pop
dec
mov
fadds
mov
xchg
insl
ret
bound
and
ja
jnp
push
out
popf
dec
mov
enter
xor
aam
sbb
cmc
jo
mov
push
stc
pushl
cwtl
pop
aam
mov
andb
mov
pop
and
or
shll
or
daa
mov
popa
dec
xchg
pop
cwtl
rcll
aam
inc
dec
jmp
jae
outsb
mov
pushf
ret
loop
dec
and
mov
lret
sbb
test
arpl
jo
divb
addr16
jmp
int3
lods
cmp
lcall
jo
mov
shlb
jo
inc
clc
fstpt
test
ds
add
push
add
nop
enter
xchg
cmp
xchg
sub
sbb
xchg
inc
out
das
or
or
rcl
fldt
inc
jbe
pop
mov
ljmp
add
cmpsb
popa
aam
adc
cmp
outsl
mov
divb
pop
shlb
fcoml
sti
or
pop
aas
hlt
push
insl
std
jmp
xchg
cmp
lea
addb
mov
inc
hlt
xor
xorl
sub
and
xchg
jae
cld
jb
add
mov
sub
jb
add
adcl
jae
fdivrl
movsb
aas
adc
mov
ljmp
xor
pop
mov
leave
addb
dec
mov
push
pop
cmp
xchg
ficomps
ficompl
mov
cmpsb
mov
push
int
arpl
mov
push
mov
pushf
xor
mov
cmp
les
inc
sbb
push
mov
pop
sub
jb
push
fdivr
lods
je
out
imul
mov
mov
fdivrl
push
rolb
or
fistpl
mov
leave
mov
stos
pop
lds
psrlq
xchg
jg
jno
xor
movsl
mov
rclb
mov
arpl
sbb
jbe
cmp
pop
js
shll
rcrb
fistpll
sbb
rorb
outsb
dec
hlt
notb
and
sbb
push
xchg
int3
gs
stos
xor
test
loope
jecxz
and
inc
mov
outsl
lret
jns
inc
fidivl
nop
popa
lret
lds
cmp
push
mov
mov
test
stc
cmp
jae
or
call
fwait
and
mul
sub
clc
shrl
int
scas
pop
icebp
sbb
jl
int3
mov
aas
adc
jo
xchg
and
jl
call
leave
dec
add
inc
mov
lods
movsb
dec
xchg
loope
mov
adc
jo
xchg
sbb
sbb
in
mov
cmpsl
sar
and
or
inc
mov
outsl
mov
inc
mov
clc
cmpsl
mov
cmp
inc
fyl2xp1
mov
dec
xor
inc
mov
popa
dec
xchg
insl
test
cmc
inc
fisubs
popf
out
xor
xchg
stc
mov
xchg
pop
xor
outsl
lret
add
cmp
fs
sbb
pop
mov
push
mov
pop
jp
fucomi
mov
push
dec
cld
mov
push
ss
mov
push
xor
inc
mov
int3
inc
mov
lcall
icebp
ss
add
imul
cli
sub
lock
xor
sbb
adc
rorb
fsubrp
das
int
jne
mov
pop
add
es
out
das
adc
jae
ja
cmpsl
das
jge
mov
mov
pop
test
dec
pushf
jns
lock
ficompl
push
xchg
nop
mov
cmp
mov
sub
mov
les
and
push
test
ret
popa
or
pop
mov
inc
mov
or
lock
aam
js
cmp
pusha
inc
sub
mov
cli
mov
xor
jne
mov
test
rolb
cmp
mov
inc
lock
mov
add
jg
jle
sub
xor
sbb
mov
lcall
daa
mov
dec
mov
out
push
and
pop
test
inc
or
not
stc
shlb
dec
dec
push
clc
push
jge
jl
xor
and
inc
or
cs
mov
xchg
mov
mov
into
inc
sbb
cli
aam
out
movsb
add
xor
insb
lods
adc
sbb
or
pusha
inc
adc
push
sub
iret
jne
xchg
lods
lret
shll
nop
or
sbbl
inc
std
mov
pop
test
adc
pop
movsb
mov
addr16
push
inc
sbb
test
mov
and
fidivrs
jo
push
stc
out
pop
cmpsb
pop
xor
aas
inc
push
fstpl
insl
and
xchg
sub
mov
dec
push
lock
xor
mov
in
sbb
dec
divb
shlb
cli
xorb
dec
adc
aas
cmp
aam
out
les
es
pushl
shrb
push
mov
ret
fadds
sbb
call
sti
dec
loope
pushf
adc
push
dec
cld
push
mov
clc
mov
gs
mov
lcall
sub
les
orb
enter
lods
dec
fldt
pop
mov
sub
out
sahf
xchg
ja
outsb
call
add
inc
or
arpl
scas
sbb
ja
ret
adc
pop
movsb
xchg
popa
jl
xor
push
cmp
fiaddl
into
dec
xchg
jl,pt
fidivs
sbb
mov
adc
cld
popf
sbb
sbbb
mov
or
cmp
mov
xchg
and
fdivrs
pop
sbb
jge
sbb
xor
aad
in
jp
xor
xor
call
icebp
fildll
jbe
pop
pop
or
dec
pop
idivl
pop
xor
subl
mov
out
xchg
mov
or
lods
imulb
dec
popf
data16
adc
scas
add
sub
nop
mov
mov
cwtl
pop
and
mov
lock
jb
daa
jbe
xor
xchg
sbb
cld
xor
in
add
jo
cltd
pop
xor
mov
gs
and
sbb
pop
out
push
jae
bswap
fabs
pop
mov
out
daa
sti
in
jb
ret
push
cmpsl
gs
mov
mov
adc
mov
stc
enter
dec
pop
pop
stc
sub
cmpl
sti
mov
add
cmp
cmpsb
or
fidivrl
jp
fsts
add
jo
cmp
mov
das
fisttpl
outsl
out
pop
add
pop
in
outsb
roll
mov
icebp
sbb
out
jno
jne
sbb
sbb
out
or
xchg
jge
add
mov
addb
cld
out
scas
push
loope
xchg
dec
fwait
push
jl
aam
mov
lds
testb
clc
push
dec
inc
enter
fnstsw
or
push
js
and
mov
mov
enter
and
jae
lea
insl
rcr
jmp
ret
mov
sbb
mov
jb
in
aam
pop
fldt
lds
aaa
les
jp
jl
pop
and
sbb
out
fnstcw
sti
sub
mov
dec
adc
inc
dec
jge
xchg
sahf
inc
insl
mov
sar
inc
mov
jecxz
inc
rcrl
scas
cmp
add
ss
add
sub
leave
xchg
xchg
add
shrb
xchg
pop
je
dec
mov
xchg
icebp
nop
sar
lret
cmp
xchg
sti
dec
andl
shlb
inc
fcmovnb
imulb
lds
lds
mov
bnd
jne
sub
gs
xchg
lods
cmc
je
inc
mov
jp
sti
mov
sub
sub
sahf
pop
iret
push
jge
outsb
sub
and
ret
fistps
jne
mov
test
sub
jo
push
test
insl
pop
cmp
push
ret
jae
imul
mov
jmp
les
dec
xchg
dec
cmc
jnp
movsb
in
and
and
pushf
dec
mov
mov
sub
dec
xchg
rcrb
fwait
ja
ss
imul
arpl
dec
xor
jns
mov
add
mov
rcr
xlat
or
mov
test
jbe
lds
out
mov
out
mov
mov
out
mov
dec
dec
push
push
enter
sub
jmp
fs
push
mov
int
jp
decl
pop
js
cli
in
in
out
adc
adc
test
mov
jo
push
leave
fnstcw
add
je
sbb
sub
jmp
push
mov
bound
rcrl
es
push
jns
push
mov
cmc
sub
adc
mov
into
xor
mov
add
insb
hlt
and
rclb
mov
sbb
push
pop
jbe
or
jle
xor
cli
mov
insb
shlb
pop
jp
sub
hlt
cmp
das
insl
stos
xchg
popf
mov
cmpsl
mov
xor
xchg
jns
mov
lret
ret
pop
movsb
sub
lret
bound
mov
fistpll
cmp
mov
lret
jns
repz
mov
and
and
lret
mov
dec
jp
jb
les
outsl
es
or
insb
popf
mov
sub
jp
cmp
ret
cmp
push
ja
test
push
test
sahf
fwait
subl
repz
movsl
sbb
push
or
cmp
fisubrl
cmp
ds
inc
cmp
dec
dec
xor
mov
mov
lods
adc
mov
sbb
inc
mov
pop
popf
mov
mov
pushf
cmpsb
cmpsl
or
es
lods
sub
mov
or
mov
cwtl
or
pop
inc
push
pop
sub
stc
outsb
sbb
and
mov
xchg
test
xor
addr16
les
sub
testl
fisubrl
popa
sbb
cmp
mov
jge
out
jmp
stc
mov
cld
xchg
jmp
and
push
loopne
xchg
ljmp
aas
pop
xchg
dec
sbb
sar
fcmove
scas
fildl
push
jl
ja
or
rclb
push
mov
sbb
out
dec
and
dec
or
adc
jmp
jb
jno
lcall
add
add
sbb
mov
fstpt
mov
pop
sub
rorl
shr
in
icebp
mov
push
repz
mov
dec
cmp
hlt
jmp
mov
mov
ljmp
subl
push
cwtl
mov
fiaddl
pusha
jge
cli
sub
imul
inc
add
xchg
and
jb
cli
push
and
es
or
icebp
dec
add
mov
rcrb
sbb
push
cmp
testl
jne
fsubrl
mov
loopne
jae
jp
xchg
insl
dec
fs
xchg
in
sbb
pop
lock
xchg
jp
inc
sti
sbb
push
std
pusha
ret
xchg
pavgb
jbe
jge
lret
push
mov
in
cmp
aad
mov
mov
subl
into
mov
bound
fcmovnu
add
mov
push
subl
pop
and
fs
popf
mov
or
lea
or
adc
xor
aaa
adc
mov
mov
loopne
mov
xchg
aaa
in
out
ljmp
mov
movsl
or
insl
jbe
dec
add
cli
xor
push
roll
mov
dec
pop
popf
fwait
and
add
add
xchg
sbb
dec
jo
push
dec
and
ss
int3
sbb
mov
loopne
leave
cmp
mov
roll
cmc
dec
xor
lds
data16
lret
mov
gs
dec
push
mov
xor
into
ljmp
inc
rolb
pop
in
movw
push
loop
ds
in
cmpsb
add
decb
and
movsb
add
loopne
push
rorl
test
bnd
dec
pop
repz
sbb
test
ficoms
adcb
xor
pop
stos
addr16
arpl
add
inc
xchg
or
push
test
and
dec
cmpsl
insl
int
mov
fcoml
cli
sub
dec
cmpsb
push
jecxz
mov
push
push
dec
mov
ljmp
or
mov
xor
arpl
add
xchg
mov
and
icebp
fildl
lock
inc
inc
xchg
cld
jge
push
add
adc
pop
sub
les
or
adc
xchg
pushf
cmpsl
in
bound
jle
clc
sub
or
mull
int3
js
dec
dec
mov
das
sbbl
lcall
sub
jecxz
cmp
das
xor
rolb
test
imul
aas
fnsave
out
cmc
js
add
or
rorl
add
mov
mov
cmp
enter
inc
or
cmp
pop
aaa
movsl
cmp
popa
jbe
or
or
or
mov
lgs
dec
cmp
push
pop
gs
pusha
inc
push
dec
mov
loop
mov
pushf
mov
jo
iret
jnp
rcrl
sti
push
inc
mov
add
cmp
adc
ja
xchg
lods
test
jno
inc
rcrb
push
in
mov
imul
jbe
gs
cmc
mov
cmpsb
inc
lea
and
xor
lock
push
and
repz
xor
call
cwtl
imul
xor
jecxz
mov
xchg
fdiv
pop
popa
enter
cmp
jge
aaa
cmpsb
jb
xor
cmp
xor
add
mov
outsb
sbb
cltd
rcr
xchg
push
adc
inc
fcmovnb
mov
push
sbb
loopne
in
jns
out
mov
mov
sub
add
and
cmp
hlt
lock
mov
cmp
ljmp
inc
xchg
xor
mov
fwait
jnp
xor
outsb
movsl
sub
add
cmc
mov
test
mov
jl
pop
mov
jnp
add
fistpl
sub
sbb
push
nop
in
jmp
adc
pop
add
pop
shlb
outsl
fisubrs
in
imul
in
dec
mov
cmp
and
je
pop
int3
sub
cmpsl
add
pop
jp
loope
frstor
fstpl
mov
test
cmp
lahf
cmc
jmp
and
int3
jo
mov
inc
out
dec
into
or
cli
test
mov
jbe
inc
lahf
adc
and
rcrb
dec
out
add
jmp
enter
adc
das
or
cmp
jp
mov
inc
mov
scas
and
adc
and
repz
mov
jnp
push
jge
cmpsb
adc
inc
sub
lret
loope
lahf
cli
mov
mov
push
rorl
lahf
gs
cmp
mov
les
mov
inc
xchg
int3
mov
cld
call
mov
sub
ret
lahf
or
aad
cmpb
cli
push
jge
cmpsb
adc
inc
add
sub
loope
lahf
aad
cmp
push
popa
rclb
pusha
lret
add
push
sarl
sub
sbb
jnp
add
fsubrs
ret
cs
enter
out
std
or
mov
jnp
push
mov
movsl
sti
movsb
bound
out
in
movsb
push
inc
push
popa
outsl
popa
fistl
lods
ret
xchg
xchg
pop
push
push
out
jg
and
insl
shl
inc
cs
push
repnz
fdivs
jge,pn
sub
adc
fadds
outsl
shlb
mov
pop
jae
stos
sarb
loope,pn
sbbb
out
in
iret
dec
cmp
push
int
jecxz
sbb
adc
xor
nop
int
jle
enter
in
push
mov
lock
lahf
lods
test
push
lds
out
adc
into
in
push
mov
jecxz
clc
dec
jae
mov
cmp
mov
inc
mov
pop
mov
roll
pop
outsl
sub
pop
test
enter
mov
stos
test
cmp
cmp
cmpsl
sbb
jbe
outsl
inc
stc
cld
mov
shrb
ja
inc
xor
stos
inc
add
cs
insl
jmp
decl
mov
das
scas
cmpsl
cmp
cmp
das
mov
sarb
test
inc
cmpl
push
mov
hlt
sahf
popf
enter
dec
int
shlb
mov
cmp
aad
inc
testl
enter
push
xchg
mov
add
and
inc
sub
insl
addr16
pop
inc
dec
in
jle
andb
push
aad
lret
std
pop
push
xor
or
ret
fcmovbe
xor
mov
std
xor
jnp
das
lcall
pusha
mov
xchg
add
mov
jge
cmp
sbb
mov
lods
aaa
cli
sub
jge
stc
cmpsb
ljmp
imul
test
scas
mov
adc
popa
mov
mov
push
lock
add
lods
adc
clc
xchg
mov
in
inc
xor
mov
shl
jge
sbb
push
jp
sbb
or
scas
lock
mov
fidivs
mov
mov
test
sub
ret
and
mov
push
mov
std
xchg
sbbl
pop
insl
orl
xor
pop
or
arpl
insl
cmc
jo
lds
jnp
inc
repnz
fsubrp
cmp
mov
roll
call
test
dec
mov
lock
adc
adc
fs
mov
adc
scas
dec
in
xchg
movb
repz
shll
fisubrs
inc
xor
ss
imul
mov
mov
jg
and
mulb
hlt
lret
inc
cmp
inc
inc
cmp
jae
imul
adc
mov
js
clc
xchg
mov
cltd
xchg
psadbw
mov
mov
sahf
add
in
sbb
adc
in
dec
and
and
sub
dec
bound
mov
mov
and
gs
inc
pop
push
test
jle
subl
or
hlt
cmp
or
add
jbe
clc
add
insb
pop
mov
addr16
outsl
shlb
pop
fsubrp
hlt
jne
cmp
loope
jle
jp
push
in
rorb
insb
mov
mov
adc
dec
sub
cmp
mov
loope
and
lds
jnp
mov
and
rcrl
mov
cmp
lods
push
adc
ror
lds
std
mov
dec
jnp
cmp
repz
pop
sarl
inc
bound
xor
or
jo
sub
jp
int
or
xlat
fs
pop
xchg
or
scas
out
pushf
repnz
xorl
repz
fsubp
test
popa
pop
push
jle
xor
push
ret
cmp
mov
xor
cmp
inc
movsb
inc
mov
adcb
mov
dec
shrl
push
sbb
pop
and
and
je
push
mov
mov
idiv
fs
stos
inc
pop
jge
sbb
xchg
or
outsl
sti
adc
and
jbe
insb
shl
add
jnp
test
shl
mov
hlt
stc
lahf
xchg
jmp
inc
movsl
jae
jecxz
push
test
movsb
test
daa
incl
lea
and
leave
leave
push
sub
lret
jae
sbb
repnz
mov
mov
cs
lcall
les
add
add
cli
push
push
lret
outsl
dec
iret
inc
inc
ljmp
sub
mov
sbb
mov
rolb
rolb
xor
daa
movsl
into
movsl
inc
mov
fwait
pop
scas
mov
inc
mov
in
dec
xchg
mov
adc
fwait
outsl
mov
dec
cwtl
aas
xor
divb
nop
add
out
inc
xor
push
xbegin
sub
dec
sub
cmpsl
fmul
adc
mov
cmpsl
xchg
xor
in
bnd
push
rol
lret
cmp
or
xchg
mov
cs
mov
or
sbb
scas
sti
or
lds
je
jae
sub
push
adc
push
lret
out
mov
and
lods
insl
lret
cmp
xchg
mov
adc
cmpsl
xor
fucom
fwait
cmpsl
clc
xchg
or
xchg
test
lea
in
cltd
push
test
adc
flds
xor
out
or
dec
incb
divl
dec
sti
add
fwait
orb
incl
idivb
jnp
push
pop
addr16
icebp
add
jge
push
movsb
or
mov
pop
jmp
insl
xchg
push
pusha
aad
fsubrp
add
enter
cmp
mov
mov
mov
sarl
mov
push
mov
rcrb
popa
and
orb
dec
pop
roll
mov
adc
jno
jbe
test
sbb
daa
xor
rolb
test
jmp
mov
je
jo
push
cli
cmpl
cmp
jnp
fnstsw
push
push
or
pop
std
ss
add
outsl
lock
pop
mov
jbe
out
jge,pt
cwtl
and
lret
push
scas
mov
imul
cmp
mov
sahf
ds
mov
lds
cld
pusha
faddp
sbb
pop
jge
cmpsl
xor
inc
fisttps
call
and
fildll
or
nop
sub
cld
test
push
cmp
or
mov
xchg
xor
repnz
rorb
cltd
call
cmp
inc
sbb
rcrb
arpl
mov
shrb
cmp
es
ficompl
mov
sub
insl
sbbl
int
or
idivb
dec
int3
jge
mov
jle
add
out
mov
inc
lds
inc
int3
inc
xor
add
add
sub
jnp
gs
imul
sub
adc
jbe
test
repz
mov
jp
leave
add
mov
idivb
xchg
lcall
xor
adc
or
testb
jecxz
cwtl
xchg
xchg
pop
imul
dec
fcompl
ret
adc
in
push
xchg
gs
lock
subb
incb
and
inc
loop
cli
stc
mov
sbb
add
sub
add
bound
lret
dec
xlat
enter
pop
enter
jge
lock
cwtl
mov
dec
xor
lock
in
ljmp
add
mov
lret
lret
push
mov
adc
pushf
adc
push
movsl
mov
inc
pushf
sti
lods
aam
jnp
lea
jnp
movsb
orl
out
pop
loope
jecxz
mov
jl
lds
push
cmp
les
sub
jg
sub
sub
pop
cmpsb
inc
xor
rcr
cld
clc
or
cmc
cmp
pop
add
xchg
adc
add
popa
cwtl
stos
test
fiadds
jl
mov
jae
jb
jno
or
test
aam
xor
adc
bound
jp
in
jno
adc
and
stos
pop
sub
ret
add
jmp
mov
jbe
insl
fdivs
sbb
lea
cld
scas
add
inc
xor
xor
mov
dec
hlt
mov
pop
sbb
jp
pop
sbbb
popf
pop
ja
add
pop
inc
cmp
sbbl
or
inc
rcll
scas
lock
mov
scas
cwtl
loop
in
ret
aas
inc
xor
inc
ror
push
inc
jb
jo
add
int3
lret
or
sub
sub
fistpll
hlt
clc
xchg
sti
push
pusha
bound
test
mov
std
cmp
ret
out
fsubl
imul
mov
mov
dec
adc
xchg
xchg
mov
hlt
ds
in
mov
cmp
sub
adc
idivb
mov
mov
cli
popa
fstpt
xchg
cmp
jmp
dec
nop
mov
testl
insl
pop
mov
cmp
sbb
cmp
lret
add
adc
push
inc
mov
popa
sbbb
cmp
lock
loop
loope
xchg
icebp
xchg
popf
xchg
mov
gs
roll
sbb
jo
loope
or
add
cmp
add
mov
mov
cmp
sub
pop
fcmovnu
sti
inc
pop
rclb
out
in
mov
sbb
pop
mov
add
sbb
ret
pop
jns
loopne
bound
lds
xchg
jno
pop
push
cli
daa
mov
andb
js
dec
dec
wbinvd
mov
mov
in
xor
fsubs
repnz
jl
pop
cmp
cmc
fcom
fmuls
mov
mov
lret
mov
test
data16
rorl
push
jge
fdivs
daa
xchg
mov
in
mov
loopne
enter
inc
mov
dec
addb
sub
jno
push
int
roll
mov
bound
scas
cmp
inc
mov
int3
test
mov
rcrl
bound
jno
mov
ja
bound
push
nop
pop
xlat
fldl
aam
fsubrs
dec
popa
and
jnp
popa
pop
into
push
or
sbb
sar
push
mov
lcall
arpl
and
test
add
popf
sbb
jmp
mov
mov
pop
sarb
mov
or
mov
enter
adc
cmp
popa
cmp
pushf
or
into
mov
fcomps
rolb
mov
lods
shrl
jge
insl
sub
popa
mov
and
mov
lods
jno
lods
cmp
into
cld
or
lret
xchg
push
mov
add
pusha
mov
lock
xchg
add
inc
jns
test
add
sbb
insb
stc
cltd
mov
dec
insl
add
popa
pop
xchg
int3
jno
adc
out
sarb
jnp
jne
jg
push
sarb
push
or
or
fs
call
adc
adc
mov
enter
add
sbb
jmp
addl
dec
mov
rclb
sarb
cwtl
pop
pusha
shll
push
and
sub
inc
insl
xor
popa
mov
fdivrl
jns
mov
lods
imul
imul
add
lahf
pop
mov
add
insb
mov
enter
xchg
or
dec
int3
sub
jge
mov
cltd
mov
lods
mov
push
popa
enter
rcrb
rolb
mov
lods
frstor
jge
insl
sub
popa
lods
xchg
int3
jno
pop
jns
mov
lods
cmp
adc
xchg
mov
mov
iret
insb
mov
enter
rclb
fdivrl
pushf
mov
lods
leave
inc
and
sub
popa
or
or
pushf
inc
sbb
sbb
xor
pusha
jo
rcr
jns
mov
lods
xchg
cmp
je
add
insb
popa
loopne
mov
int3
sbb
mov
mov
mov
push
or
push
sbb
sbb
aaa
mov
insl
shlb
mov
pushf
sbb
add
xchg
loope
add
jmp
mov
in
mov
aam
popa
cmp
dec
cmp
push
sbb
sbb
daa
mov
jns
sbb
mov
cwtl
add
or
lods
rorl
sub
popa
xor
js
adc
nop
or
sbb
mov
mov
cmp
insl
pop
jecxz
test
and
mov
lods
jns
sarb
mov
into
loopne
insb
jbe
rcl
and
sub
or
adc
cwtl
insl
hlt
or
xchg
add
test
cmp
sbb
ret
mov
pop
shlb
mov
les
or
mov
sub
js
xor
inc
into
sub
and
inc
mov
sar
push
mov
mov
imul
dec
in
test
or
mov
mov
xor
je
add
insb
insl
in
aaa
popa
jge
addr16
sbb
jg
xor
loope
jo
popa
stc
xchg
jns
mov
lods
movsl
adc
cwtl
cmp
jnp
popa
fmul
test
mov
dec
jmp
sbb
int3
cmp
insl
inc
lahf
popa
cltd
xchg
int3
mov
sub
mov
lods
gs
fdivrs
lods
into
lock
in
jns
je
xor
into
sub
sub
inc
mov
and
jge
sbb
mov
cwtl
add
or
lods
int
and
push
pop
cmp
jnp
popa
sbb
push
jno
adc
imul
jge
insl
dec
popa
in
xchg
int3
test
jns
mov
lods
pop
hlt
mov
popa
mov
jg
or
stos
or
dec
dec
and
xor
fs
call
or
insl
fsubl
add
push
jl
ss
arpl
cmp
jo
sbb
nop
or
sbb
adc
dec
lret
cmpsl
imulb
popa
in
xchg
int3
fmul
jns
mov
lods
inc
hlt
mov
popa
mov
cld
or
or
sub
inc
mov
std
outsb
outsl
pop
mov
sub
add
in
lock
sahf
js
jl
pop
sub
add
jp
and
mov
fs
xor
imul
out
add
sub
and
loop
pop
mov
fcmovnu
int3
adc
rcl
sti
gs
mov
rcrb
push
shlb
jmp
mov
mov
shld
mov
jnp
push
out
fistl
aaa
cmc
fmul
mov
aaa
sahf
insl
ficomps
movsl
jg
out
rorb
data16
repz
les
mov
jo
sbb
rclb
test
and
subl
jo
out
mov
xor
sbb
inc
lods
jl
shr
dec
xor
push
mov
add
ret
pop
insb
in
xor
sbb
ret
rclb
enter
rcrl
push
fwait
xchg
cli
cmpb
sarb
scas
mov
add
addr16
jl
cmp
or
or
push
dec
cltd
jns
pop
cmpsl
sbb
lods
movsl
cmp
inc
es
popf
daa
das
jmp
iret
xchg
and
icebp
aam
add
fs
in
hlt
jle
aas
mov
jg
mov
cmp
ja
xor
inc
loope
or
out
pusha
cmp
and
dec
adc
sbb
jns
adc
ret
mov
icebp
lods
push
and
movsb
call
insl
aad
adc
mov
mov
bound
addr16
jge
icebp
scas
jne
inc
test
fldenv
cwtl
mov
push
insl
ror
mov
fldenv
mov
es
nop
outsl
mov
popa
pop
xor
cmp
mov
sti
leave
out
pop
adc
fwait
shr
ror
push
lcall
movsl
mov
jno
mov
mov
faddl
movsb
or
xor
imul
fiaddl
repz
sbb
ljmp
frstor
pop
adc
jb
fisttpl
fwait
mov
cmp
aas
or
stos
bound
movsb
std
test
js
mov
imul
and
lea
adc
and
adc
lret
icebp
adc
mov
sub
jnp
aas
dec
dec
adc
mov
cmp
sbb
or
jecxz
push
cmp
sbb
jbe
cmp
xchg
and
xchg
mov
imul
xchg
xor
lret
data16
incb
outsb
dec
mov
test
pop
fdivs
xlat
cmp
dec
dec
gs
fiaddl
adc
pushf
data16
insb
pop
adc
push
ret
lea
loop
cmp
xor
mov
in
mov
fidivl
add
leavew
push
stos
mov
test
sub
lds
rorb
xchg
loop
inc
dec
mov
dec
dec
jmp
mov
div
xchg
fisubrl
dec
mov
adc
clc
decl
cmpsb
sbb
js
jp
or
or
fs
popa
sub
dec
lods
dec
inc
pop
into
push
dec
scas
jbe
outsb
fwait
sbb
cmp
or
lret
and
cs
je
lods
push
loop
and
jns
cs
and
xor
test
repnz
inc
fisubrl
inc
mov
outsl
xor
adc
cld
popf
inc
sahf
sahf
mov
sbb
lods
fwait
jne
mov
mov
mov
cmp
xor
cli
jp
pop
stos
cmp
mov
scas
mov
add
movsb
test
sti
jp
arpl
jl
pop
inc
test
cmpsl
sahf
or
sub
loope
push
jecxz
adc
outsl
xchg
or
add
enter
mov
insl
cmp
inc
nop
push
rcrl
insb
stos
sbb
mov
sbb
xchg
ds
cmp
lret
scas
add
fdivrs
jl
jo
ljmp
fstps
in
push
out
lea
pop
push
test
mov
cmp
mov
push
popa
sbb
sbb
pop
and
cmp
ja
stos
and
mov
test
inc
jle
jns
leave
mov
pop
ja
xlat
inc
fs
pop
shrl
shl
xchg
adc
pop
mov
lret
hlt
sbb
push
lock
stc
in
mov
push
inc
mov
test
gs
push
insl
jns
test
mov
and
shlb
fdivr
repz
xor
leave
inc
or
inc
cmpsl
cld
push
dec
frstor
or
rcrb
into
jae
insl
rcll
or
xor
inc
mov
outsl
loope
cli
rorl
dec
imul
fdivr
nop
jb
inc
inc
jg
dec
mov
lcall
dec
cmpsl
lods
lods
pop
jns
sub
icebp
mov
inc
pop
dec
test
daa
pop
jnp
cmp
or
mov
mov
cld
icebp
xchg
inc
cmp
mov
lea
push
cmpsb
xchg
adc
pop
lret
lret
lods
add
xchg
pusha
scas
mov
mov
mov
add
push
push
pop
sahf
js
lods
mov
mov
adc
shlb
daa
pusha
inc
mov
fistps
pop
outsb
fcompl
sbb
cmp
lods
lea
cmc
mov
pop
ds
jns
pop
dec
stos
push
in
mov
mov
mov
mov
sbb
clc
std
mov
jnp
cli
repnz
xor
push
push
in
or
cmp
lds
or
jb
rolb
stos
scas
pop
adc
push
inc
jg
jg
dec
stos
push
mov
or
pop
and
jg
mov
xchg
mov
pop
mov
cmp
in
cmp
in
pop
cwtl
fwait
sub
in
adc
fsubl
dec
jle
jbe
mov
jl
ror
dec
xor
inc
shl
adc
mov
cmp
sub
adc
sub
ret
das
jb
iret
rol
aam
fisubrl
adc
enter
mov
cmp
mov
loope
ficomps
mov
jnp
cmp
sub
test
bnd
dec
and
cmp
or
gs
jg
insb
aam
mov
push
mov
jnp
jnp
in
or
pop
lea
dec
movsb
and
js
adc
insl
or
rcll
orl
cmpsl
push
insl
xor
sbb
call
arpl
cwtl
or
icebp
cwtl
cmp
fsubs
jbe
mov
inc
ret
mov
rcrl
movsl
das
mov
insl
inc
push
jg
inc
xchg
cwtl
jl
jp
data16
inc
aas
test
cmp
sbb
push
jl
cmp
cmp
test
sahf
mov
pop
mov
xor
push
mov
add
sar
lods
ret
pop
or
dec
xchg
or
or
mov
mov
fisubl
sbb
inc
and
cmp
mov
add
mov
dec
xchg
add
lods
add
push
or
adc
mov
jns
cltd
push
call
add
sbb
jle
roll
fnstcw
add
xor
adc
mov
xchg
sti
mov
push
xchg
rcrl
mov
popa
push
sahf
movsb
mov
mov
frstor
push
stos
gs
scas
jle
imul
mov
xorl
push
mov
mov
leave
jo
xor
fisttpll
jecxz
and
mov
dec
mov
popa
adcb
cmp
shl
push
bound
pop
sti
fmuls
loope
adc
push
shl
pop
stos
or
xor
test
rorl
jg
cmp
bt
mov
xchg
or
out
add
adc
xor
pop
pusha
push
insl
cltd
in
pop
dec
and
iret
adc
adc
jmp
mov
inc
pop
adc
adc
fadd
xor
pop
cli
es
jne
adc
pop
and
and
std
sarl
add
push
sub
insl
pushf
sbb
fiadds
mov
mov
test
xor
ret
sbb
ret
jl
mov
sbb
xor
setae
int3
fidivrs
mov
push
out
push
or
adc
inc
xor
idivl
xor
iret
cwtl
push
adc
mov
adc
mov
aad
je
adc
icebp
aam
cmp
out
inc
lea
inc
dec
push
shlb
fimull
ficompl
rcr
test
addb
mov
popa
push
arpl
fs
adc
mov
adc
fs
add
sbb
xor
mov
mov
ja
roll
shlb
or
lods
pop
mov
in
rcrb
fwait
mov
xchg
int3
mov
mov
addb
xor
xchg
mov
or
out
add
inc
or
test
andb
xor
popf
xor
cmc
leave
add
jnp
or
int3
inc
mov
push
push
or
pop
scas
jp
testl
xor
adc
jnp
adc
sbb
push
dec
int
dec
xor
mov
repz
mov
mov
lock
decl
dec
push
mov
mov
mov
adc
push
test
test
in
add
ja
popa
xor
pop
xchg
leave
jnp
cmp
inc
jg
xchg
cli
mov
cmp
add
or
adc
jmp
pop
mov
lea
jg
sti
shlb
idivb
pusha
jle
add
ja
into
iret
rcl
cld
cwtl
xchg
mov
mov
adc
popa
dec
decl
repz
ret
xor
es
sbb
or
mov
mov
sub
shrl
out
sbb
xchg
frstor
add
pop
mov
insb
xorb
pmaxsw
inc
and
lret
cs
test
inc
sarl
jge
fadd
cmp
repz
insl
fdivrs
mov
push
gs
inc
lea
mov
leave
push
xor
jbe
jo
idivl
or
cmpb
jmp
mov
xchg
cmpb
jecxz
leave
xlat
xor
jb
cmc
lods
mov
mov
fsts
add
mov
and
cmp
imulb
pop
add
adc
repz
push
pushl
push
and
addr16
outsl
movsb
sti
pop
inc
scas
lods
mov
inc
sub
sar
lock
cld
add
xchg
lahf
je
and
pop
mov
sbb
or
fdiv
jae
fistps
icebp
sbbl
fiaddl
cmp
xchg
cmp
outsb
push
xorl
int
cmpsl
imul
addb
dec
fistpl
or
outsb
loop
mov
mov
pop
insl
add
lret
aad
scas
arpl
add
adcl
clc
fistl
or
and
ja
clc
jecxz
add
jge
cmp
dec
inc
pop
stos
jb
xor
repz
or
inc
jno
jbe
int3
scas
in
arpl
dec
xchg
shll
xor
mov
inc
mov
bound
cwtl
xchg
push
adc
mov
pop
push
int
xor
insl
cmpsl
sbb
mov
fstl
jb
ss
rcrl
and
or
lar
ret
xor
roll
cwtl
cmpsl
dec
mov
jp
out
xor
shll
xor
sbb
mov
cmp
bound
jb
in
push
movsl
xor
dec
dec
sbb
aad
jns
sbb
pushf
aam
js
adc
pop
xor
movsb
mov
cmp
mov
in
fistps
push
jns
fwait
testb
mov
daa
push
adc
mov
aas
dec
add
xchg
pop
mov
inc
push
or
push
add
or
mov
sar
cmp
lret
mov
xchg
sbb
jns
pop
or
aam
fsub
mov
divb
pop
jge
insl
mov
cwtl
stos
dec
push
ljmp
inc
push
sbb
repnz
xor
sub
cwtl
dec
mov
lds
rclb
ss
add
or
inc
outsl
mov
movsb
sbb
push
lret
mov
adc
andb
push
mov
hlt
mov
scas
jno
lods
mov
sub
jp
inc
pop
or
fmuls
stos
jle
shlb
sbb
fstpt
add
test
js
loope
and
mov
lods
pop
and
sbb
add
mov
leave
add
out
mov
add
mov
jo
xlat
or
cmpsb
xchg
es
jg
jae
out
pop
add
iret
leave
aad
fmuls
lret
pminsw
fstpt
jo
int
pusha
leave
adc
pusha
out
mov
stos
dec
and
mov
xlat
insb
jne
cmp
mov
scas
jo
xlat
push
mov
hlt
dec
dec
fiadds
adc
adc
loope
and
es
xchg
push
lods
int
cmp
roll
jnp
push
mov
add
dec
pop
jg
test
inc
stos
enter
jne
mov
cltd
movb
andl
and
xchg
add
repnz
sti
lret
rorl
xchg
aad
ret
pop
enter
ds
das
pop
les
das
fdivr
lock
fsubs
movsb
jp
stc
mov
inc
adc
xor
cmp
xchg
adc
les
cld
fwait
xorb
outsl
sbb
jno
imul
cwtl
inc
notl
xchg
cld
ja
fisttps
mov
push
mov
subl
mov
add
mov
js
or
sub
fdivrl
cmpsl
xchg
arpl
je
or
ret
lret
pop
and
and
clc
adc
xchg
sar
mov
stos
sub
adc
inc
cwtl
mov
inc
jo
in
int3
push
orb
test
or
movl
js
ja
hlt
add
je
lock
and
xchg
loope
hlt
inc
pusha
vpmaxub
jnp
insl
sub
loopne
add
jge
insl
lock
lods
rcrb
push
add
rcrl
pop
pop
pop
mov
mov
mov
or
sar
and
xlat
sbb
out
jno
push
pop
imul
mov
ja
imul
lret
or
push
bound
cmp
jl
cmpsb
gs
push
movsl
sar
arpl
xchg
cltd
adc
jle
and
sbb
aaa
inc
imul
cmp
jge
dec
mov
into
clc
or
sbb
xchg
loopne
sbb
fnstsw
cmp
pop
pop
sub
cmp
popa
mov
iret
jns
mov
lods
push
clc
mov
sarb
ror
aam
mov
into
jo
or
dec
in
or
test
sarl
jns
inc
jge
insl
push
lahf
popa
popf
xchg
int3
mov
lret
jns
mov
lods
push
loopne
cmpb
jnp
popa
into
mov
sbb
mov
mov
xor
nop
dec
adc
xchg
stos
int3
jns
mov
jge
insl
pop
fwait
popa
xchg
xchg
int3
test
sti
inc
jge
ret
stc
mov
sbb
aas
mov
popa
rcrb
test
lods
dec
fmuls
cwtl
pop
push
movsl
nop
dec
adc
fldcw
xor
push
sbb
or
push
cmp
push
les
add
roll
mov
xchg
int3
inc
fdivrl
jns
mov
lods
jns
test
lods
jnp
jnp
add
in
pop
pop
lret
pop
clc
mov
lcall
daa
stc
int3
and
jecxz
out
inc
inc
mov
dec
inc
xchg
mov
adc
cwtl
loope
xor
inc
cmc
xor
xor
test
or
xchg
pushf
add
les
das
movsb
pushf
test
aas
mov
dec
in
push
mov
loope
mov
fisttpll
mov
mov
lcall
jle
cmp
and
in
inc
xchg
jmp
daa
push
and
ss
dec
data16
repz
div
je
push
outsl
sub
sbb
push
es
pop
dec
dec
repz
mov
xchg
adc
and
pop
mov
inc
and
cli
adc
js
pminsw
mov
add
popa
mov
cmp
call
jne
xor
clc
insb
xor
inc
mov
std
xchg
inc
leave
push
cmp
imul
pushf
cs
cmp
mov
sti
adc
mov
pop
test
pushf
and
dec
add
adc
dec
lods
addr16
add
dec
sub
hlt
mov
and
adc
js
jne
sub
mov
jle
ss
sbb
lcall
rorb
imul
mov
pop
loopne
scas
inc
loope
faddl
ss
cmpsb
pop
test
mov
sub
enter
inc
popf
xchg
lock
push
jae
mov
rolb
pop
out
or
jnp
or
test
stc
mov
push
inc
ljmp
sub
pushf
push
rcrb
push
inc
fs
arpl
psubw
push
in
jbe
sbb
push
dec
inc
lds
cmp
jno
mov
roll
aaa
xorb
popf
fidivrl
dec
sti
sub
std
aaa
int3
leave
cmp
xor
inc
adc
jae
cmp
popa
pop
cmp
add
xchg
add
cmp
test
inc
in
mov
jbe
adc
push
sbb
lea
enter
lock
or
jbe
adc
out
jo
mov
scas
outsb
fsubs
lret
rcrb
stos
movsl
pushf
push
scas
add
lds
mov
sbb
xor
or
inc
or
mov
fistps
push
inc
pop
fwait
lret
sbbl
in
repz
jp
cld
fsub
mov
sbb
repz
jp
test
fisubl
mov
and
inc
stos
jg
adc
sub
inc
mov
pop
mov
jmp
shrb
outsl
leave
inc
jg
lds
pop
jecxz
test
push
sub
push
ss
sbb
rcll
es
dec
fmuls
push
lds
mov
sub
add
insl
repnz
fucomip
sarb
dec
dec
negb
popf
pushf
inc
ret
adc
lahf
mov
cld
loopne
daa
shl
in
sub
outsb
mov
pop
cltd
nop
frstor
sbb
les
inc
nop
test
cmp
pop
push
mov
dec
inc
dec
jno
jno
dec
push
testl
icebp
push
testb
push
fstpl
adc
sbb
pop
fsubl
js
jge
icebp
and
arpl
jl
pop
scas
addl
cmp
inc
inc
xor
in
loop
adc
pop
xchg
insb
shlb
stos
jmp
fcompl
pop
test
rorb
ds
jp
push
cmc
push
or
in
outsb
xchg
inc
sbb
xchg
push
add
push
fwait
mov
dec
xor
cmp
pop
outsb
stos
mov
sti
jae
roll
nop
arpl
push
push
and
es
cmc
or
pop
movsb
adc
in
jmp
dec
shll
mov
dec
mov
inc
sbb
pop
push
addr16
jl
lds
mov
test
repz
mov
leave
jecxz
jecxz
or
cmc
daa
ljmp
jp
lea
cmp
sub
jp
push
push
dec
add
jb
outsw
dec
pop
int3
sub
cld
mov
outsl
sti
pop
sbb
dec
out
lcall
loope
icebp
sub
pop
mov
dec
je
mov
mov
sbb
mov
cmp
adc
sub
bound
loop
fdivrl
inc
jge
pop
insl
xchg
push
stos
cmpl
fisubrl
sbb
jno
sbb
aad
and
mov
inc
mov
int
sub
mov
dec
shlb
jb
mov
fadds
pop
xchg
or
xchg
in
test
or
vunpcklps
arpl
mov
cmpsb
clc
jno
mov
das
push
idivl
movsb
jle
test
pop
movsl
mov
int3
outsl
dec
mov
pop
xchg
je
aaa
mov
jbe
enter
sbb
lcall
xchg
dec
out
addr16
clc
popa
mov
mov
jecxz
in
jns
mov
mov
cwtl
mov
mov
inc
xor
ds
jl
jno
imul
mov
jae
pop
fwait
das
in
mov
data16
mov
mov
mov
push
scas
sbb
cltd
fisubl
mov
pop
dec
ja
aaa
xchg
movsb
add
es
mov
ss
iret
adcl
mov
push
mov
shll
xor
mov
mov
addr16
mov
jns
je
cli
fiaddl
add
jnp
bound
inc
adc
fistl
sub
paddd
in
xor
shll
data16
pop
ret
pop
ds
adc
fwait
adc
or
in
sub
jle
popa
jno
jle
or
inc
dec
pop
fcompp
shl
mov
movsb
xor
xorb
hlt
lock
out
std
mov
mov
jmp
cmp
adc
addr16
inc
push
aam
icebp
fidivl
mov
xor
fxch
lods
add
pop
cmp
sahf
int3
add
sbb
inc
mov
sbb
lds
push
shl
mov
fcmove
adc
pop
fcoml
mov
mov
xor
sbb
xor
jo
ja
xor
lahf
in
stos
jo
mov
movl
and
push
push
loopne
inc
lret
lock
push
push
cmp
mov
fcmovbe
mov
cmp
in
mov
adc
addr16
mov
and
fnstcw
cmp
nop
popa
std
lods
cli
adc
add
mov
aad
outsl
enter
mov
or
jnp
jl
add
ss
mov
ljmp
data16
mov
and
jns
inc
out
or
movsb
in
jecxz
adc
inc
out
lds
mov
lock
sbb
jne
lods
out
hlt
pop
icebp
imul
mov
inc
jnp
ret
aaa
shll
cmc
dec
out
mov
adc
add
int
shlb
dec
test
adc
jns
mov
aas
rdmsr
push
out
push
dec
or
sarb
push
testb
setge
and
push
pushf
es
xchg
inc
sub
out
cmpsb
repz
dec
dec
insb
jmp
popf
ret
cmpsl
mov
and
cmc
lahf
mov
movsl
mov
mov
imul
aad
and
iret
rcl
mov
mov
insb
sub
jbe
iret
lret
incl
outsl
data16
scas
mov
cwtl
enter
adc
cmp
mov
jno
add
sahf
sub
mov
ljmp
mov
xchg
add
jns
sti
inc
cmp
push
sbb
jl
dec
addl
mov
jge
fcoml
mov
and
mov
jle
xor
bound
aaa
and
cmp
pop
int
push
test
sub
xchg
sub
adcl
fcoml
sahf
mov
mov
mov
popf
sbb
imul
fistpl
push
outsl
cmp
sbb
lea
ss
loopne
aad
push
aas
movsl
insl
das
mov
add
mov
dec
push
cmp
xor
or
push
into
rep
pop
and
enter
mov
jne
repnz
xor
inc
xor
lcall
rolb
or
into
jmp
xor
add
add
in
mov
insl
jle
adc
loope
cmpsl
or
mov
or
jl
mov
sub
jo
insb
outsb
jp
cli
lds
mov
leave
and
jmp
mov
pop
addr16
pop
mov
shrb
mov
fidivrs
jl
jge
cmp
mov
mov
loopne
enter
fimull
or
sbb
aas
cmc
pop
aas
leave
sbb
sub
rcr
adc
addr16
cmp
and
mov
inc
cmp
mov
out
sub
mov
aaa
sub
aam
inc
ljmp
lods
jne
lret
inc
ss
push
pop
xchg
xchg
cmp
xlat
or
lcall
lcall
lret
mov
in
and
dec
insl
inc
sbb
fdivp
and
insb
lods
xor
cmc
inc
insl
ret
add
inc
mov
orb
and
mov
and
lods
mov
push
rcrl
outsl
jg
or
jge
mov
ret
mov
and
lea
repnz
mov
cmc
pushf
mov
ret
wrmsr
dec
xchg
jbe
cmp
ss
xadd
fwait
mov
push
adc
enter
pushf
mov
xor
mov
or
in
mov
scas
ljmp
divb
inc
xchg
or
or
jl
cltd
aas
xorl
popf
pop
lods
arpl
mov
and
js
dec
cwtl
mov
dec
mov
jmp
mov
dec
ss
pop
sbb
push
mov
sar
int3
dec
mov
mov
jae,pn
dec
aas
inc
or
or
adc
or
rorb
jae
jp
adc
jnp
rolb
mov
dec
movsl
and
loope
nop
mov
push
icebp
jo
mov
xchg
push
gs
test
orl
jle
inc
out
orb
sahf
out
cli
adc
stos
push
divl
popa
pmaxsw
xor
rolb
in
test
mov
insb
add
cmc
sub
jo
lock
test
enter
mov
bound
mov
adc
jl
test
sub
data16
daa
inc
es
adc
iret
dec
mov
outsl
jge
xor
cld
dec
and
pop
out
outsl
xchg
addr16
mov
xchg
ret
push
or
xchg
or
xor
sbb
mov
fcmovb
ljmp
insl
push
rol
jnp
jne
loopne
lahf
adc
ja
jae
sub
mov
wbinvd
xchg
inc
and
pop
jbe
stos
push
subl
cmp
mov
ja
push
mov
mov
add
jbe
or
adc
iret
or
cmp
jae
dec
ds
int3
and
sbb
test
shl
ret
or
in
lds
lock
mov
cs
sub
sbb
cmp
dec
leave
add
jae
addr16
jne
inc
mov
loop
int
push
mov
push
xor
inc
adc
mov
mov
imul
or
push
fidivrs
xor
das
inc
inc
data16
inc
iret
adc
pop
mov
mov
iret
or
stos
jge
ret
cs
push
in
or
mov
jae
inc
xchg
sti
and
mov
rolb
mov
or
ja
cmpsl
xchg
fists
test
clc
add
in
movsb
loop
test
cmp
mov
lock
int
push
aaa
push
xor
mov
ja,pt
mov
addb
and
pop
push
jl
call
xor
cmp
add
pusha
lock
outsl
mov
pop
scas
insb
push
inc
aad
xchg
outsl
and
inc
xor
push
faddl
cmp
sub
dec
jo
std
and
lods
insb
sub
xor
mov
ret
cmp
mov
addl
cmc
lretw
incb
jge
sub
sbb
imul
add
mov
and
sbb
jge
dec
mov
ret
in
scas
xchg
pop
icebp
int3
xor
out
movsb
jge
lock
mov
or
lea
or
pushf
fwait
jnp
pop
js
daa
add
shrb
and
data16
pop
adc
inc
pushf
mov
ss
aam
inc
jge
movsb
sub
pop
loope
pop
xchg
cmp
cmp
fsubs
mov
or
gs
inc
mov
inc
int3
pop
into
iret
cmp
sahf
add
sti
cs
mov
push
cld
fstpl
scas
popf
xchg
gs
je
sub
pop
add
in
mov
loopne
lods
sub
ds
lds
std
loopne
lea
scas
sub
mov
push
mov
add
rclb
lret
mov
push
push
jo
in
dec
and
sbb
mov
lods
sbb
add
movl
in
pop
clc
mov
popa
adcb
or
sahf
gs
repz
gs
int3
jb
jle
sbb
fistpll
das
jbe
stc
mov
mov
xor
dec
sub
incb
iret
imul
jl
mov
jge
and
insb
out
pop
xor
cmp
add
push
rcrl
test
sbbl
add
jecxz
out
push
push
cmp
add
ds
xchg
mov
mov
mov
xor
popa
xchg
sbb
stc
jbe
push
jbe
sbb
and
es
inc
test
cli
rcll
inc
jl
and
enter
rcrb
std
hlt
fdivl
jle
or
hlt
pop
or
mov
jbe
inc
pop
repnz
xor
aaa
test
add
mulb
cmpb
les
xor
mov
jnp
add
mov
jo
ja
jl
pop
mov
dec
pop
jae
cmp
pop
and
push
subl
out
jle
mov
pushf
mov
movsb
mov
out
xor
aas
imul
popf
jmp
call
mov
jge
mov
in
fs
incl
nop
mov
rcrl
test
icebp
mov
in
imul
aas
sahf
dec
and
pop
shll
rolb
rcll
jp
ror
jns
cmp
cld
mov
int3
js
pop
xlat
jle
push
hlt
push
ja
sub
mov
int3
aaa
pop
and
daa
f2xm1
out
ljmp
pop
in
xlat
ja
mov
in
jnp
pusha
adc
jmp
out
shll
sarl
aaa
dec
mov
aas
inc
inc
add
fldt
dec
cld
mov
lods
lea
pushf
je
push
add
ret
inc
sbb
cmp
and
push
mov
cwtl
jnp
dec
shlb
mov
add
insb
cmp
clc
adc
in
popa
dec
add
jne
test
fcomps
pushf
int
xchg
fisttpll
mov
xchg
inc
insl
lahf
mov
stc
xor
lds
pop
jge
div
mov
test
into
add
cwtl
mov
lock
mov
shlb
stos
cmp
jno
arpl
push
mov
and
push
sti
and
dec
lock
jmp
pop
pop
pop
outsl
leave
lcall
lds
inc
add
movb
or
pop
fwait
mov
xor
pop
dec
cltd
xor
mov
es
inc
push
cmp
sbbb
mov
mov
es
xorb
inc
or
pop
cmp
enter
cltd
test
push
jns
cmp
push
je
into
in
fucomp
push
push
cltd
es
sbb
mov
sub
push
xchg
or
xor
pop
mov
orb
xchg
inc
mov
mov
fnstcw
cs
push
lret
call
adc
add
out
lods
xor
lods
push
jg
or
lea
add
xchg
icebp
das
cmpsl
std
lret
ret
push
sub
jb
psubb
mov
mov
dec
ret
xchg
push
lods
mov
dec
cli
daa
add
lahf
sbb
or
lock
aas
add
imul
or
pushf
xchg
pop
fsub
in
xor
iret
fcmovbe
jo
sub
xor
xor
sub
adc
aas
ror
push
bound
jle
pop
lret
cmpsb
pushf
inc
movsb
or
push
loop
dec
mov
mov
ret
fisubs
push
jns
ss
xorb
outsl
push
ja
mov
mov
fldl2t
pop
jnp
fisttpll
sub
or
inc
sti
js
sbb
lock
cmp
cmc
test
aas
jg
jbe
and
es
rol
data16
mov
adc
std
std
push
rcrb
xor
mov
mov
push
fistpl
std
lods
jbe
subl
outsb
cmpb
data16
inc
add
mov
mov
stos
into
push
push
cmp
mov
mov
cmpsl
xlat
shl
in
mov
mov
pop
push
pushl
adc
es
mov
std
mov
movsb
ja
and
repnz
lods
push
test
aad
mov
ret
repz
adc
inc
loopne
dec
xchg
int
inc
xor
rorl
repz
jl
jle
add
mov
andb
jb
lret
sub
jp
fwait
out
jo
popa
mov
jnp
and
mov
jle
out
out
mov
add
aam
and
nop
and
add
repz
inc
fucomi
mov
pop
mov
fistl
sub
mov
in
push
js
fnsave
jecxz
sub
mov
cltd
cmp
jp
cmc
sbb
les
jo
mov
and
xchg
xor
addr16
mov
mov
loopne
rol
inc
jbe
xchg
jmp
cwtl
out
cmpsl
cltd
inc
test
sub
push
add
and
call
jnp
mov
pushf
js
stc
shll
scas
movsb
cmp
and
cli
xor
je,pn
mov
sub
adc
movsl
test
push
dec
popf
jbe
sbb
mov
cmpsb
mov
xchg
push
fnstenv
ja
call
sar
jo
sbb
or
clc
jge
insl
enter
xchg
int3
adc
jae
or
xlat
adc
adc
mov
lret
jecxz
mov
or
js
adc
insl
loopne
popa
dec
xchg
int3
fcompl
jns
mov
lods
add
in
outsl
push
push
lods
leave
dec
and
push
jnp
popa
and
inc
or
jl
sbb
aaa
mov
rcrb
fsubl
adcb
movsb
push
push
or
dec
dec
cmp
pop
pop
sub
sub
insl
cmp
popa
mov
fdivl
jns
mov
lods
gs
fdivrl
mov
out
rcl
loop
mov
inc
pop
cmp
and
popa
mov
fstpt
mov
lods
inc
enter
fdivrs
popa
test
fmuls
mov
push
jmp
sbb
push
cmp
or
dec
popa
loope
lahf
int3
xchg
fsubr
jns
mov
lods
mov
in
jnp
popa
cld
into
mov
int3
sbb
mov
mov
cmp
insb
in
flds
xchg
mov
lods
jmp
cmp
dec
popa
add
or
sbb
mov
mov
adc
mov
or
dec
mov
popa
sbb
push
jge
insl
and
popa
mov
fstpt
mov
lods
dec
enter
fdivrs
popa
test
fmuls
mov
hlt
cmp
pop
sbb
jl
xor
inc
jge
insl
sub
popa
addl
daa
lods
pop
cld
mov
int3
jnp
popa
fmul
test
lods
sbb
add
push
cli
sub
fs
add
pop
fwait
arpl
mov
lods
mov
cmp
jnp
popa
loopne
test
hlt
sbb
imul
dec
in
nop
dec
adc
fmull
lods
xchg
cmp
je
add
popa
adc
pushf
or
sbb
mov
mov
or
nop
dec
adc
fdivrl
lods
loope
push
cmp
inc
popa
xor
jl
sbb
insb
push
sbb
aas
mov
popa
rcrb
shlb
mov
in
shlb
pushf
mov
adcl
and
jnp
popa
xor
jo
add
pusha
test
mov
mov
popa
rcrb
shlb
mov
cld
mov
jne
mov
jge
mov
xchg
fsubr
jns
mov
lods
mov
in
jnp
popa
cld
into
mov
int3
sbb
mov
mov
aad
jge
insl
js
popa
icebp
xchg
jns
mov
lods
mov
pusha
cmp
pushf
popa
clc
into
mov
enter
sbb
outsl
mov
xor
dec
in
mov
mov
loope
add
fwait
push
mov
xor
jl
sbb
xchg
insl
in
popa
jne
or
popa
fcompl
jns
mov
lods
sbb
in
mov
adc
inc
dec
and
push
pop
push
mov
or
popa
mov
fdivl
jns
mov
lods
jns
sarb
movsb
jnp
popa
mov
cld
or
pop
add
je
xor
push
jmp
test
iret
jns
mov
lods
push
clc
mov
enter
fmul
lods
or
jnp
xor
add
lock
std
add
jmp
mov
sbb
push
insl
lock
xchg
int3
imul
ja
or
adc
add
mov
mov
cmp
dec
mov
adc
popa
pop
xchg
int3
dec
faddl
jns
mov
lods
adc
jnp
popa
pushf
xlat
adc
test
or
pop
pop
sub
cmp
popa
mov
iret
int3
mov
mov
lods
inc
int3
mov
popa
movsb
into
int3
or
inc
hlt
jge
and
jo
xor
inc
sbb
xchg
sbb
dec
mov
iret
pusha
mov
in
cmpb
pop
popa
adc
fdivl
or
xlat
adc
mov
mov
loope
jecxz
mov
or
js
sbb
push
dec
xchg
int3
jno
vmwrite
pop
lods
adc
clc
popa
pushf
xlat
adc
test
xor
sub
pop
mov
or
popa
mov
fsubrl
jns
mov
lods
jge
lods
cmp
cld
or
sbb
inc
jge
insl
sub
popa
test
iret
jns
mov
lods
pop
cld
mov
les
popa
test
fmuls
mov
push
jmp
sbb
inc
cmp
or
je
popa
in
fwait
int3
xchg
fsubr
jns
mov
lods
mov
in
andb
mov
adc
mov
mov
mov
mov
loope
add
jecxz
mov
or
jl
sbb
xchg
insl
in
popa
dec
xchg
int3
fcompl
jns
mov
lods
or
pushf
jl
lock
rcr
jns
mov
lods
in
sub
pop
cmp
jnp
popa
or
jl
sbb
push
dec
mov
mov
insl
shlb
mov
mov
hlt
mov
insb
cli
lods
lds
xor
inc
jnp
popa
pop
into
sub
sub
pop
sbbl
daa
lret
aaa
mov
aam
sarb
mov
sub
pusha
jnp
popa
dec
into
cmp
push
sbb
pop
ret
mov
test
lock
mov
les
mov
insl
mov
dec
int3
and
jge
shll
sbb
rcrl
mov
test
sti
je
add
or
in
jge
insl
hlt
pop
popa
jns
pop
int3
imul
ja
or
adc
nop
stos
mov
stc
rclb
pop
or
or
fs
adc
popa
pop
xchg
int3
dec
fmull
jns
mov
lods
sbb
mov
popa
cwtl
out
rcl
sbb
dec
pop
and
push
jge
insl
and
popa
addl
and
enter
fmul
lods
or
inc
cli
cmp
sbb
dec
cmp
or
dec
mov
xchg
push
in
or
cmp
nop
popa
cld
into
mov
int3
sbb
mov
mov
cmp
push
sub
push
mov
leave
add
xchg
push
mov
xor
jo
add
pusha
insl
call
add
jge
adc
mov
lods
sbb
mov
jne
jg
mov
scas
add
inc
pop
and
cmp
popa
mov
lret
int3
mov
mov
lods
dec
enter
fdivrl
popa
mov
sbb
cmp
or
or
jo
xor
inc
into
and
sub
pop
sbbl
das
lret
pop
mov
or
mov
insl
cwtl
pop
pusha
aad
andb
jge
loope
dec
popa
in
xchg
int3
cltd
fdiv
jns
mov
lods
mov
loopne
test
into
mov
les
mov
add
add
les
enter
leave
mov
mov
xchg
shr
inc
mov
add
pusha
mov
in
popa
jne
or
popa
fcompl
jns
mov
lods
add
jno
xor
leave
jge
aas
popf
sbb
mov
mov
mov
in
mov
fdivrl
insl
mov
push
cmp
push
or
dec
xchg
popa
jmp
fdivr
jns
mov
lods
mov
clc
jnp
popa
enter
fcomps
test
sbb
inc
mov
sub
pusha
mov
leave
xchg
jns
mov
lods
xorl
pusha
popa
adc
cwtl
or
sbb
popa
mov
mov
add
jg
mov
test
gs
mov
pop
push
xor
push
out
cltd
xchg
leave
jae
sub
xor
jo
popa
xchg
mov
fstp
cmp
or
mov
mov
daa
faddp
clc
inc
mov
jle
adc
repz
mov
jmp
cmp
lds
cmp
pop
jo
sub
jp
mov
shlb
repnz
lret
push
std
pop
pushf
adc
push
mov
pop
mov
test
sub
push
xchg
xor
rorb
cld
adcb
sub
sarb
setno
sub
mov
add
int
dec
jne
pushf
jle
inc
and
jge
into
fdivrs
test
subl
loopne
mov
dec
jne
lcall
cmp
xor
ret
pop
outsb
addl
inc
and
adc
mov
sbb
rol
sub
xchg
cmp
popa
out
test
inc
ret
sbbl
shr
cmpsb
and
icebp
mov
xchg
test
jns
test
pop
or
repnz
shlb
repz
out
add
adc
imul
and
mov
dec
push
std
dec
cwtl
jnp
dec
incb
mov
cwtl
jmp
xchg
daa
daa
aas
cmp
or
lret
icebp
cmp
push
mov
push
mov
decl
scas
mov
push
cld
mov
lds
pop
test
sar
insb
int3
jg
dec
xchg
mov
adc
jnp
mov
push
jl
pop
popf
inc
dec
push
fwait
dec
dec
xor
sbb
xor
dec
mov
cwtl
imul
test
imul
push
and
mov
push
or
push
loopne
jmp
movsb
push
loopne
jl
dec
repz
andl
scas
inc
loop
in
cmp
xor
cwtl
lds
xchg
adc
sub
repz
js
test
xchg
repnz
adc
pushf
push
shll
xchg
cli
fdiv
fbld
pop
decl
and
sub
inc
inc
push
push
jne
into
cli
mov
fldenv
shlb
lock
push
int
dec
aas
pusha
pushf
cli
mov
mov
cmp
xor
adc
rcll
push
push
push
addb
std
sbb
dec
sbb
jo
mov
loop
call
jmp
adc
jo
cld
les
pop
lods
jge
cwtl
mov
jecxz
xor
test
test
push
scas
fisttps
dec
push
mov
pop
cli
inc
loopne
mov
cmpl
insl
add
dec
inc
leave
fcomps
push
mov
hlt
pop
dec
test
outsb
ss
inc
fsubs
negb
dec
mov
cmp
pushf
adc
outsl
mov
fistpl
mov
and
or
test
push
sub
test
jae
mov
push
pop
adc
popf
lcall
jg
pop
out
in
lea
in
inc
push
xchg
push
jge
fstp
mov
std
mov
in
add
adc
or
push
cmp
hlt
lock
jmp
xor
cmp
cmp
push
stc
dec
xchg
cmp
inc
lods
xchg
lret
push
jns
loopne,pt
and
xor
fcoms
inc
int3
lcall
dec
pushf
iret
cld
mov
fwait
mov
popa
aaa
jne
dec
mov
jns
les
xlat
and
cmp
inc
lcall
inc
xchg
and
inc
lea
xor
pop
adc
ret
sbbl
ret
xor
push
orl
sbb
sahf
or
inc
addr16
stc
push
or
lods
imull
test
and
xor
dec
cmp
adc
jbe
dec
and
jno
inc
add
test
xor
lds
adc
std
inc
jge
mov
and
filds
inc
pushf
xchg
int3
cltd
mov
push
jae
jle
insl
pop
sub
add
or
das
mov
cmp
sbb
push
das
mov
sbb
stc
enter
pushf
and
add
jnp
xchg
xor
jmp
aaa
push
push
sbb
or
call
adc
xchg
adc
xchg
test
pop
sub
cmp
lds
jo
iret
ds
sub
add
cmc
js
sbb
xchg
js
test
dec
cmp
test
mov
mov
lods
mov
cld
dec
bound
inc
push
pop
adcl
push
clc
in
mov
lea
scas
ds
inc
mov
xor
push
or
in
lods
fisttpll
fadds
mov
test
ds
jmp
repnz
cld
imul
xchg
push
mov
adc
es
iret
pop
lcall
and
mov
and
dec
and
sbb
lock
clc
xlat
cmp
movsb
ret
andb
addr16
leave
mov
push
daa
lds
mov
rclb
push
loopne
shr
es
outsl
jae
xor
int
jnp
lock
orb
lret
mov
add
or
mov
dec
push
and
inc
mov
jg
lock
sti
lods
pushf
inc
or
loopne
mov
xchg
mov
stc
xchg
mov
test
pop
std
js
mov
inc
dec
ret
mov
popf
dec
clc
cmp
insb
stc
fistl
sub
pop
test
add
push
leave
sbb
cmp
dec
or
stc
sahf
mov
add
out
fs
shlb
mov
loopne
test
mov
outsb
inc
mov
sti
das
js
es
cli
dec
stos
jo
add
sbb
pop
mov
pop
jnp
xchg
sub
jecxz
rclb
xchg
int3
orl
sub
and
and
lea
iret
shlb
fstpt
sub
inc
popa
clc
test
pop
adc
sbb
and
push
xorl
push
inc
adc
jp
pushf
jae
fwait
call
xchg
int3
fstpl
dec
and
dec
mov
mov
mov
int
arpl
lock
aas
adc
dec
adc
jge
rorb
mov
into
loopne
loop
mov
out
xchg
pop
icebp
xor
adc
and
in
push
cmp
das
jbe
xor
dec
push
in
idiv
adc
clc
fcoms
mov
out
ds
push
lock
push
add
mov
cmp
pop
sbbl
arpl
push
sub
lret
sbb
addl
aam
cmp
mov
inc
push
pop
cmp
cltd
cmp
inc
insb
pop
pop
mov
and
sti
cmp
outsl
add
mov
push
mov
popf
addl
lods
std
xor
pop
int3
sub
sti
decl
loope
adc
data16
fisubrl
fsubrp
test
xchg
out
inc
out
das
sbb
std
fcomps
jo
aad
dec
in
dec
ja
sub
loopne
inc
fwait
fs
mov
mov
push
ret
dec
cwtl
dec
scas
dec
mov
aas
sub
rcl
mov
lret
dec
push
sbb
popf
bound
jecxz
stos
mov
ja
xor
les
data16
dec
mov
andl
popf
fisubl
dec
push
insl
clc
pop
pop
cvtpi2ps
repnz
cmp
decb
lret
mov
jae
dec
popa
cmpb
loopne
movsb
scas
cwtl
cwtl
stos
jo
mov
test
or
les
fisttpll
test
add
stc
mov
dec
cmpl
lock
repnz
test
cmp
flds
icebp
nop
ljmp
je
iret
jb
in
in
dec
and
add
dec
jo
inc
dec
loopne
pop
test
gs
loop
cld
jno
pmuludq
mov
mov
push
shl
shll
xorb
push
cmp
out
dec
in
stos
daa
icebp
repnz
mov
xor
mov
and
jle
inc
cmp
lock
push
sarl
stos
mov
mov
test
mov
lods
and
pop
shrl
daa
cmp
or
xor
cld
std
loopne
pop
pop
mov
xchg
sbb
inc
scas
out
xor
ds
test
enter
test
in
and
decl
or
push
lretw
jne
ffree
or
dec
nop
mov
jb
imul
jno
out
adc
movsb
adc
out
ja
dec
in
jnp
xor
xchg
fs
inc
out
push
mov
shlb
inc
cmp
push
jae
shrl
in
add
clc
mov
fidivrl
leave
fbld
iret
scas
mov
dec
lcall
sbb
pushf
mov
sub
dec
fmull
test
cli
mov
sbb
jae
movsb
movsl
and
pushf
adc
pop
and
js
ds
nop
pushf
inc
sub
push
addr16
push
cmpsl
cmp
xor
sub
cmp
mov
pop
push
xchg
stos
jp
sbb
stos
mov
popa
and
push
cmp
cli
orb
in
ror
fucomp
movsb
hlt
mov
sti
sub
and
cli
hlt
in
inc
sti
mov
push
loop
repnz
pushf
adc
inc
mov
cmp
fwait
lret
push
aas
or
adc
test
repz
stos
push
cmp
clc
adc
and
pop
rcr
dec
xor
clc
sbb
inc
cmp
loopne
jecxz
push
pop
add
xor
ljmp
scas
dec
add
jl
in
not
pushf
inc
pop
mov
jnp
loop
xchg
pop
and
andl
dec
mov
aaa
arpl
push
push
mov
mov
xor
dec
ret
mov
mov
mov
cmp
cmp
popf
mov
sbb
out
jnp
or
dec
in
outsb
dec
jns
cmp
jg
sbb
push
mov
insb
cli
loope
mov
lock
loopne
pop
ljmp
pop
inc
das
xor
addr16
inc
adc
mulb
adc
xchg
pushf
or
mov
or
mov
adc
ja
imul
cmp
xor
stc
lahf
xor
mov
jae
icebp
dec
out
ret
dec
mov
mov
mov
clc
dec
xor
mul
mov
mov
or
sbb
inc
cmp
push
xchg
dec
daa
cltd
xor
xor
mov
dec
scas
inc
mov
and
inc
sbb
xchg
repnz
and
test
in
push
loopne
ds
gs
fs
aam
dec
xchg
or
adc
mov
cmpb
mov
xchg
and
dec
mov
xchg
fsubrl
mov
test
and
aad
jl
notb
dec
xor
push
add
std
jg
fdiv
ja
add
mov
fcos
into
call
sbb
lcall
jno
clc
and
je
and
lret
mov
icebp
dec
mov
out
in
pop
jns
cmp
int3
cmp
pop
cmp
sub
or
cwtl
jbe
mov
add
pop
inc
mov
inc
mov
xor
or
cli
adc
and
testl
imul
pushf
aaa
add
jb,pt
jle
lds
cmpsb
xor
cmp
jae
and
gs
xor
add
arpl
pop
aas
cmp
in
mov
push
mov
stos
scas
aam
pushf
jp
jle
and
pop
fsubrp
shrl
push
xchg
mov
mov
add
dec
loop
and
add
shll
clc
aad
push
or
stos
cli
repz
mov
lods
ret
insb
cwtl
pop
xchg
shlb
push
lods
inc
repz
mov
cmp
or
cmp
mov
ss
mov
cwtl
cmp
lea
test
dec
jb
dec
cmp
ljmp
pop
dec
jnp
repz
and
jnp
out
pushf
cmp
das
mov
test
bound
popf
out
jg
stc
stos
in
adc
mov
hlt
out
rcrb
sbb
inc
loopne
bswap
lds
sbb
ficoml
push
jnp
and
add
sti
sbb
mov
xchg
ror
cmp
ljmp
mov
aam
or
sti
inc
fildll
aaa
fwait
and
dec
jecxz
cld
or
sbb
mov
rolb
jb
add
push
mov
test
pushf
inc
fmuls
jnp
inc
mov
pop
jle
outsl
add
sub
in
xor
movsb
cmp
add
in
add
mov
test
cmp
lea
subb
and
rorb
cmp
push
cmpsl
stos
xchg
sub
inc
cmpsl
outsb
mov
xlat
or
cmpsb
or
inc
fistpll
xor
add
add
cmp
mov
mov
addl
inc
or
jge
imul
leave
mov
and
fisttpll
and
sub
lods
adc
movsl
mov
dec
sti
fnstsw
add
lea
or
inc
pop
ds
add
add
mov
in
add
mov
mov
fsubrs
cwtl
jnp
xchg
jnp
xor
mov
icebp
inc
fisubl
pop
pushf
addr16
sti
test
pop
add
sub
sahf
pop
in
xorb
and
mov
jnp
push
inc
test
fidivs
arpl
jg
sub
cld
sub
cmp
xor
es
dec
mov
test
repnz
xor
dec
cmp
pop
in
sbb
dec
fidivs
xor
data16
imul
sub
stos
shrb
fwait
js
push
aam
dec
dec
jnp
enter
mov
test
hlt
cmp
fidivrl
xor
in
fs
loopne
lock
loopne
fnstsw
out
repnz
xor
dec
mov
add
cli
sub
mov
xchg
push
addl
test
cmp
call
aad
pushf
dec
lea
sub
add
repz
ret
cwtl
jns
add
mov
pop
ret
test
loope
xchg
outsb
popf
mov
shll
fists
jle
test
imul
cmp
inc
faddl
or
xor
mov
mov
ret
cwtl
insb
insb
pop
and
cmpb
and
sbb
and
push
pusha
or
jne
sub
lods
js
push
xchg
mov
insl
fnstcw
test
cmp
cmp
pop
or
lcall
shrl
lea
scas
mov
out
loop
mov
lea
test
loopne
mov
fwait
xor
pop
mov
les
fst
clc
cmp
add
aaa
inc
sub
aas
cmp
jg
sub
jmp
mov
or
sbb
aaa
fwait
loopne
cmp
mov
sbb
add
fsts
mov
xor
arpl
dec
aaa
pop
xor
cmp
dec
cltd
js
cmp
nop
jne
cmp
mov
repz
stc
pop
in
fistpl
xor
mov
sub
xchg
hlt
test
xor
jo
dec
cmp
mov
jns
xor
xor
call
fmul
test
cmp
ljmp
mov
aas
and
inc
push
or
cmpsl
pop
into
scas
clc
xlat
mov
add
cmpb
mov
leave
out
dec
clc
gs
dec
xor
cwtl
sub
loope
in
and
rol
jnp
loope
cmp
int3
mov
xchg
lock
out
cld
insl
adc
jb
and
sub
insl
sbb
mov
shll
inc
shll
lock
jecxz
xor
test
and
or
adc
push
lcall
loop
or
cmp
push
fstpl
int
arpl
leave
jnp
addr16
xor
mov
stos
mov
ret
inc
sbb
push
jnp
nop
push
add
push
jmp
test
clc
mov
sub
push
loopne
pop
pop
test
xor
mov
xorb
dec
rorb
ss
xor
push
pop
ss
mov
pop
pavgb
addr16
add
dec
testb
stc
popa
stc
enter
inc
push
dec
stc
dec
test
push
movsl
rol
push
xchg
dec
push
cmc
jle
stc
out
xor
mov
insl
mov
pop
cmp
in
inc
repnz
cmp
xor
xor
jnp
jge
scas
adc
out
xor
mov
xchg
mov
in
test
scas
int
pushf
jns
mov
popf
in
push
ljmp
cwtl
fisttpll
xor
inc
sbb
mov
or
push
and
sbb
inc
push
cwtl
std
cmp
adc
mov
test
aam
sub
addl
cwtl
cmp
into
dec
pop
and
int
pop
adc
jle
or
fs
or
rolb
mov
stc
in
push
cli
loopne
mov
xchg
dec
cmp
in
inc
or
or
xchg
pop
jne
jno
fdivl
push
mov
dec
addl
cmpsb
xchg
std
test
mov
lea
popf
xchg
ja
jecxz
cmp
sbbl
cmp
fcmove
xor
fistpll
cli
call
jbe
lea
stc
jnp
xchg
ret
pusha
inc
test
in
pop
ret
or
xor
imul
push
pushf
test
popa
lar
loopne
mov
movsb
cmp
lret
adc
mov
push
mov
inc
lea
adc
mov
mov
and
pop
scas
aaa
mov
xor
ljmp
test
pushf
loope
inc
mov
jl
push
push
or
loopne
shlb
lret
dec
lret
frstor
into
dec
and
sti
scas
loopne
push
test
test
cmp
mov
jb
push
stos
ja
inc
and
pop
cmp
cmp
fnstsw
dec
cmp
xor
data16
clc
mov
cld
loopne
add
inc
hlt
out
movsl
fcoml
fdiv
dec
and
lcall
dec
pusha
push
cmp
mov
push
lds
loopne
je
cld
push
xor
jl
sti
dec
cli
in
sbb
inc
cld
aad
test
aad
pop
ja
popf
push
sbb
pusha
dec
fnstsw
xor
inc
and
addr16
dec
inc
push
mov
bound
mov
lods
push
mov
and
inc
jge
test
lret
and
mov
mov
dec
rclb
sahf
xor
or
mov
inc
cmp
rcl
or
dec
and
push
dec
inc
dec
dec
int3
adc
push
push
xlat
add
loopne
lods
in
lret
jle
loopne
xorl
or
test
mov
movsl
imulb
dec
xor
mov
and
in
and
cld
push
mov
mov
repz
js
call
pop
push
imul
dec
mov
lahf
jg
lahf
mov
clc
cmp
add
adc
mov
sbb
dec
xchg
daa
or
dec
outsb
cltd
jb
push
test
jnp
sub
mov
cmpsb
movsb
jns
pop
sbb
fstl
jns
inc
mov
jecxz
and
and
mov
ret
lret
xor
sti
or
pushf
dec
add
and
or
pop
mov
cmp
out
mov
gs
sti
mov
in
adc
jl
lahf
mov
push
test
std
pop
out
mov
in
jmp
dec
aad
add
jb
and
ljmp
ja
lock
sbb
imul
inc
fs
inc
or
mov
lea
cli
jp
push
nop
mov
arpl
pop
outsl
nop
orl
inc
pop
add
ss
test
lock
adc
scas
dec
mov
adc
in
js
jp
dec
push
out
enter
add
mov
sti
push
sub
clc
push
je
jno
pop
mov
inc
mov
not
push
lcall
movsb
mov
add
adc
mov
loopne
pop
repz
or
pop
push
shl
mov
clc
adc
mov
inc
ret
les
xchg
and
push
clc
out
fnstsw
mov
in
inc
adc
cmp
in
mov
lahf
cmp
fisttpl
fidivs
mov
mov
arpl
dec
mov
ljmp
pop
mov
sarl
adc
push
mov
xchg
inc
cmpsl
xor
out
inc
fiadds
sarb
rcrb
push
mov
std
xchg
rol
sub
lcall
das
pusha
insl
scas
pop
mov
dec
outsl
pop
cmp
cli
lahf
test
dec
pop
lods
push
mov
ret
add
push
mov
jbe
jno
inc
leave
int
jbe
leave
ja
xchg
jp
add
sub
jbe
sbb
sti
imul
xor
pop
push
or
mov
pop
or
dec
add
and
out
or
cmp
shll
mov
mov
push
fidivl
mov
movsl
mov
aaa
and
xor
push
clc
in
test
mov
cmc
imul
fdivl
ds
shrd
dec
popa
cmp
cwtl
sub
dec
push
cs
jno
jnp
lea
movsl
loopne
xchg
sahf
fmul
jo
out
pop
dec
cli
sub
mov
mov
add
jge
in
lahf
cmp
add
sub
fstpt
push
scas
les
cwtl
loopne
add
cmp
push
sub
or
dec
lods
leave
lock
sbb
mov
add
cmpsl
jg
jbe
pop
mov
mov
adc
test
in
jo
cs
add
daa
add
lods
cmp
loopne
sti
mov
mov
sub
pop
mov
movsl
xchg
mov
lcall
cwtl
add
in
xchg
insb
sub
lock
test
in
cmpsb
popf
jb
fs
loop
out
push
cwtl
arpl
stc
xchg
gs
or
nop
addr16
xchg
xchg
push
hlt
sbb
push
jle
fmulp
and
test
in
sbbb
dec
shrl
push
fsubrs
loopne
scas
aad
jmp
pop
movsl
mov
dec
push
jno
aad
repnz
add
cmpsl
sub
sub
into
cs
out
es
pushf
mov
leave
packssdw
sar
mov
aam
aas
fidivrl
out
lods
orb
shlb
mov
stos
push
or
lcall
sar
mov
sbb
or
ret
mov
jns
xor
fmuls
jge
pop
push
mov
stos
subl
out
mov
mov
sub
loop
dec
cmc
in
push
in
enter
ss
dec
loop
or
arpl
pop
es
push
pop
sub
cmp
loopne
xchg
popa
add
xor
push
int
stos
jns
push
int
mov
jae
stos
movsb
stos
test
ja
mov
xchg
cmp
call
incl
mov
mov
mov
inc
arpl
incb
rcr
loop
loope
test
jbe
div
icebp
das
int3
out
test
inc
mov
ret
adc
jl
icebp
rcll
roll
push
jne
cmp
jae
xchg
std
xchg
pop
lahf
cmp
ds
ljmp
mov
jbe
in
das
insb
fcomi
sbb
mov
testl
int3
fucomp
add
push
int
sti
leave
arpl
mov
je
add
lret
jmp
sub
repnz
fcmovnb
cmpsb
lods
jge
pop
int3
sub
cmp
jle
je
ljmp
mov
cli
push
imul
jge
jns
pop
enter
cwtl
sahf
dec
or
push
into
ret
inc
adc
cmp
jb
mov
fs
aam
lock
pop
or
jge
pop
in
and
loop
xor
lret
add
cmp
jno
sti
push
sbb
inc
xor
mov
and
jno
pop
push
push
pop
push
mov
push
rcll
jg
mov
adc
push
mov
cmpsb
ficoml
push
mov
wbinvd
nop
arpl
push
stc
xor
mov
fsubs
test
rolb
xor
inc
aad
scas
rcrb
test
pop
clc
dec
pop
jne
sbb
jg
popf
mov
push
add
push
jge
mov
mov
jge
mov
add
mov
lods
nop
loop
xor
ja
loopne
inc
mov
js
popa
add
cwtl
mov
or
enter
pusha
or
out
pop
mov
out
fcompl
dec
es
mov
cmp
push
in
fcmovnbe
repnz
jmp
xor
pop
loopne
hlt
fstl
dec
jle
mov
inc
imul
aam
push
call
sahf
pop
pushf
adc
push
jl
movsb
in
push
ss
rcr
mov
mov
and
mov
lret
mov
cli
dec
orl
lea
pop
mov
add
mov
clc
fistpl
sub
push
jp
aad
sub
pop
jecxz
mull
lods
mov
cmp
and
cld
add
test
cli
xor
inc
sti
cltd
mov
testl
into
leave
or
out
sbb
push
mov
push
test
pop
add
dec
andb
pop
mov
lahf
jge
insl
adcl
int3
xor
arpl
mov
lods
xor
jnp
popa
mov
lret
sbb
cmp
mov
fcmovnu
shrl
pop
popl
pop
and
cld
sbb
lret
pop
sbb
jg
in
push
inc
sub
xchg
pop
jl
pushf
xchg
in
mov
cltd
pop
popa
and
push
or
out
jno
lahf
push
sarl
mul
jp
pop
sarl
into
stc
add
jle
sbb
into
test
sbb
adc
jle
aas
mov
xor
xor
sbb
fwait
loope
mov
fadds
adc
jl
pushf
xchg
push
lock
cmp
push
mov
sbb
pop
mov
fwait
lock
enter
in
cs
pop
sti
roll
sub
cmpsb
push
cmc
or
rcl
loopne
xlat
shll
cmpsb
in
iret
out
add
fdivrs
out
loop
sbb
jg
repz
leave
call
stos
xchg
push
mov
mov
movsl
inc
mov
clc
nop
add
dec
imulb
std
xor
push
xor
adc
in
jae
out
aam
clc
out
dec
mov
je
ljmp
lahf
popa
push
xchg
int3
aad
aas
add
imul
or
loopne
ja
in
loop
enter
lret
xor
xor
xchg
or
mov
push
jnp
out
xor
imul
and
mov
les
xchg
xchg
push
dec
lret
sub
inc
mov
xor
test
rcrl
mov
loope
mov
mov
sbb
fsubl
jecxz
je
and
dec
push
clc
js
jo
fbstp
std
adcb
mov
and
fstpt
or
test
add
lods
xchg
jg
xchg
lea
xchg
pushf
xchg
repz
mov
xchg
push
jmp
mov
pushf
in
inc
cmp
mov
mov
jmp
sbb
icebp
ret
cltd
mov
lcall
rclb
fdivrp
cmpsb
pop
fstl
js
cmp
pusha
mov
xchg
push
xchg
xor
leave
sbb
push
mov
decl
call
pop
je
stos
rorl
imulw
adc
ljmp
pop
ja
sbb
mov
sbb
cmp
decb
in
push
movsl
sbb
xor
fisubl
or
lret
xchg
cmp
add
pop
icebp
lret
in
adcl
out
call
jno
mov
rcrl
in
add
je
bound
mov
fs
sub
movsl
mov
aam
sub
mov
ds
mov
dec
loope
sub
cli
adc
mov
jg
sub
or
leave
mov
xchg
inc
sub
in
loop
mov
cmpsl
call
sbb
xchg
xchg
sbb
dec
lea
cmp
push
out
adc
xor
lahf
test
and
jmp
push
adc
imul
cmp
into
lods
popf
adc
cmp
xchg
inc
push
jo
gs
mov
idivl
or
pop
rclb
inc
sub
push
mov
scas
out
daa
aad
jnp
out
jbe
sbb
movsl
arpl
mov
sub
sahf
xchg
cwtl
and
xchg
call
jo
das
sub
insl
xor
cli
add
jb
out
jmp
ret
repz
int
pop
mov
xor
push
xchg
xchg
lret
jge
fcoml
xor
outsb
gs
push
idivl
push
lahf
inc
adc
lods
scas
sub
int3
push
repz
jl
outsb
pop
xor
adc
stos
cs
call
adc
jl
sbb
js
lods
stc
jmp
repz
or
cld
in
stc
mov
shr
int
clc
add
mov
icebp
es
shr
jo
sti
sub
push
and
sub
mov
xlat
mov
xchg
into
aam
fmul
xor
push
mov
cmpsb
cmp
push
hlt
dec
mov
or
xor
lods
push
xor
xchg
jno
push
jae
add
xor
lods
testl
mov
inc
arpl
sahf
sub
adc
cmc
jbe
cmp
les
adc
jbe
repnz
push
mov
in
loopne
add
add
add
loopne
add
add
add
or
loopne
add
loope
add
loopne
add
loope
add
loopne
add
loope
add
loopne
add
or
in
or
aas
loope
add
or
pop
loope
add
or
and
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
or
jmp
fs
daa
cmp
cmp
add
add
lahf
lret
pmulhuw
xor
adc
mov
adc
sub
xchg
or
enter
jb
in
jo
add
inc
mulb
or
add
mov
adc
adc
fwait
and
inc
add
jae
xchg
lahf
xor
xchg
pop
mov
cmpsb
xchg
scas
push
push
adc
mov
adc
pop
xchg
pop
push
xor
xchg
push
xor
adc
or
add
out
cmp
add
mov
pop
in
pop
add
test
push
movsb
daa
and
int3
and
shll
cwtl
mov
jecxz
add
mov
mov
lods
ret
jb
and
mov
dec
stos
and
pop
cmpsb
rclb
inc
adc
inc
xor
inc
inc
push
jns
pop
add
js
data16
in
nop
rcll
mov
mov
and
movsb
add
adcb
inc
adc
lock
cs
xchg
or
inc
and
mov
push
add
stc
test
mov
and
and
xchg
movsb
and
mov
fs
pop
adc
lods
stos
jnp
ret
cld
loope
or
mov
verw
mov
mov
add
mov
mov
add
call
gs
movb
push
bound
add
or
adc
adc
adc
sbb
dec
or
mov
pop
fucom
or
call
mov
push
push
dec
or
cmp
inc
call
mov
repnz
pop
daa
scas
cmpb
ficoms
ret
push
mull
xchg
adc
xchg
sbb
push
cmc
pusha
inc
incl
pop
jl
clc
stc
adc
sub
mov
mov
inc
fstl
outsb
add
mov
in
test
mov
adc
add
sbb
and
mov
ds
popa
mov
inc
cmp
add
loope
lret
out
int
and
adc
hlt
jno
sub
test
or
push
dec
or
cmp
or
add
mov
les
sub
in
xor
shlb
add
xor
adc
pop
sbb
jg
adc
and
in
and
mov
adc
sub
pusha
sub
sub
roll
inc
add
fwait
dec
add
dec
add
mov
or
push
outsb
cmpb
ja
lea
mov
lcall
addr16
out
jecxz
cmp
or
inc
shrl
repnz
inc
xrelease
inc
inc
cld
stos
inc
xor
shl
adc
sub
add
and
xchg
add
add
add
sub
aad
add
sub
shrb
xor
or
pop
aaa
and
and
and
and
and
inc
and
and
and
imul
push
and
push
and
and
pop
and
xchg
bound
sbb
lahf
outsl
and
and
and
mov
inc
or
xchg
adc
xchg
out
rcrb
mov
std
cmpsl
mov
jae
inc
sbb
mov
cmpb
mov
outsb
dec
mov
and
or
inc
sbb
addb
mov
inc
subl
add
ret
mov
pop
repnz
stos
es
jnp
aad
sub
mov
jb
jmp
cmpb
add
loope
movsb
lods
lock
sub
adc
cwtl
sbb
pop
jnp
push
addb
sti
mov
pop
adc
jae
jo
inc
jl
inc
jge
inc
test
inc
lea
mov
or
test
pop
mov
ss
or
aam
or
sbb
or
adc
pop
or
or
adc
cmc
sub
jb
or
mov
inc
clc
xor
dec
popf
rorb
adcl
or
push
fisubrl
shll
stos
imul
or
and
jmp
outsl
sahf
cmpsb
cld
push
out
addr16
and
xchg
xor
int
popf
lock
inc
adc
and
dec
dec
and
push
and
bound
cwtl
jp
cltd
pop
stc
xor
out
pop
stc
and
jbe
ret
push
lock
xlat
cmp
inc
and
dec
push
xchg
popf
add
dec
fadds
rol
aad
push
add
push
ljmp
dec
cwtl
test
dec
daa
push
cltd
pop
jmp
adc
mov
clc
test
lea
sub
cwtl
mov
ds
xor
and
cmpl
test
or
mov
xchg
or
jmp
mov
orl
xor
adc
fs
out
addl
inc
data16
sbbb
add
loop
inc
mov
pop
adc
movsb
push
xor
inc
add
add
add
add
add
add
mov
mov
add
ret
add
les
imul
mov
sub
inc
jae
inc
pop
mov
int3
cmpb
sbbl
add
xchg
add
inc
addr16
std
add
decb
cmp
out
dec
xor
out
mov
dec
lock
out
fadds
mov
orb
mov
cmpsl
add
and
dec
int3
xchg
je
jae
out
in
mov
inc
pop
nop
loope
adc
pop
adc
popa
sbb
sub
jle
or
jg
lods
jb
pop
jae
mov
adc
xorb
adc
sbbl
adc
scas
adc
loop
adc
adc
and
jle
jl
sub
xor
mov
add
in
add
add
add
and
pop
inc
jl
loopne
jb
cli
dec
add
push
or
inc
dec
dec
inc
aam
repz
mov
rcll
sbb
dec
jo
dec
sub
mov
dec
or
or
inc
enter
scas
dec
mov
adc
sub
sub
inc
arpl
fs
imul
add
cld
add
decb
or
rolb
adc
inc
vphaddwq
scas
and
dec
mov
cmpsb
and
inc
or
mov
dec
rcll
inc
mov
mov
mov
pop
adc
adc
adc
adc
outsl
adc
int
filds
in
ds
mov
push
shrl
dec
js
mov
or
and
jl
sbb
lret
push
jg
push
andb
test
mov
push
xor
divb
aam
and
and
mov
pop
loop
ss
outsb
in
out
adc
adcl
mov
sbb
push
pop
push
or
inc
pop
adc
lods
mov
adc
pusha
add
and
popa
add
arpl
dec
imul
dec
out
mov
mov
call
jge
mov
sbb
sbb
ret
in
add
popl
nop
add
xchg
add
pop
movl
fs
xor
ljmp
jbe
adc
add
icebp
xor
jb
add
nop
cmc
xor
cwtl
mov
adc
int3
arpl
aaa
add
dec
cld
mov
fsubrl
xchg
jg
inc
sbb
or
ljmp
adc
or
mov
and
mov
jo
ffree
jg
andl
scas
inc
xor
dec
or
stos
push
iret
add
xchg
repz
std
xor
cmpsl
imul
mov
lcall
test
jnp
add
ret
ljmp
pop
push
sbb
xor
add
mov
dec
daa
push
imul
addl
pop
insl
pop
mov
mov
xor
lock
add
xor
mov
lcall
jle
push
bnd
add
adc
and
test
out
jno
xor
add
imul
sub
arpl
pop
and
sbb
add
or
fwait
and
add
xor
andl
add
push
add
add
inc
sbbb
aam
xchg
add
pushf
aas
push
push
test
add
xor
or
insl
mov
pop
andl
or
cmp
push
ror
lret
adc
push
bound
xchg
mov
lods
pop
add
test
aam
xor
xchg
loopne
pop
cmp
push
ss
js
add
inc
sbb
dec
ljmp
iret
rolb
sub
mov
push
adc
xor
adc
cmc
stc
xor
test
sbb
in
fiaddl
std
les
lods
xchg
int
push
pop
nop
or
and
loope
mov
ja
xchg
xchg
int3
mov
xchg
das
out
jne
nop
inc
cmp
adc
mov
and
cli
mov
fstpt
or
sbb
mov
mov
or
xchg
arpl
jnp
xchg
andl
or
and
ficoms
or
into
imul
and
es
or
arpl
mov
jecxz
sub
insl
add
inc
jno
sub
fisubl
fstpt
into
cmp
inc
xor
out
jecxz
mov
or
inc
in
push
and
add
hlt
inc
loopne
pop
jg
and
add
rorb
xor
addr16
sub
sahf
add
push
in
and
inc
inc
add
ja
test
leave
cmpsl
add
cld
add
movsb
push
fs
inc
xchg
mov
clc
pshuflw
test
or
out
mov
and
cmp
lret
cltd
add
repz
outsb
xor
das
push
sarb
or
sti
out
ljmp
jge
xchg
int3
sub
enter
cwtl
subl
sub
push
add
pusha
lods
mov
push
jle
adc
adc
test
mov
fnsave
cmpsl
jns
cmpsl
cmp
and
and
repnz
mov
mov
sbb
out
je
jle
pusha
push
ja
iret
or
cmpsl
or
adc
jl
push
mov
arpl
ficoml
mov
lods
call
and
mov
in
add
les
pop
out
js
xchg
arpl
cmp
cwtl
add
and
xlat
cmpsl
mov
cs
xchg
mov
push
mov
sbb
dec
sbb
test
neg
or
and
lahf
loope
cmpxchg
fbstp
ds
inc
loop
sub
int
adc
mov
movsb
sbb
jns
ficoml
push
push
push
sub
cmp
or
mov
push
incl
xchg
cwtl
iret
fiadds
add
mov
or
outsl
imul
add
fnsave
push
adc
rcrl
pop
pusha
pop
nop
and
rolb
fildll
cmp
push
mov
cmp
aaa
les
push
or
add
into
mov
mov
sub
fs
or
mov
mov
loop
cmp
movsl
fidivrs
push
dec
stc
clc
lcall
jb
andb
push
add
cmp
add
addb
adc
rcrl
dec
int
dec
cmp
fldl
loope
testb
rcrb
out
or
call
int3
add
pop
adc
gs
jae
sbb
dec
add
fsubl
out
or
adc
out
daa
popa
add
adc
cltd
add
in
jns
lret
adc
sbb
imul
out
inc
adc
and
mov
fxch
inc
clc
sbb
nop
dec
fst
aad
roll
add
add
pop
inc
or
in
orb
mov
cmp
jle
push
inc
lods
mov
inc
cmpsb
mov
or
int
dec
mov
addr16
js
and
mov
imull
sub
ret
mov
push
dec
insl
inc
pop
jno
and
add
fistl
xchg
cmp
nop
push
insb
pop
mov
test
jge
imul
cmp
dec
and
cmpsb
push
add
jecxz
roll
add
clc
dec
pop
push
ja
add
sbbl
sbb
adc
jg
jle
dec
int
and
mov
lock
inc
fistpl
or
push
or
mov
sbb
mov
mov
sub
sbb
orb
add
jae
out
dec
push
xchg
push
jge
xor
push
adc
mov
mov
mov
lods
test
outsb
adcb
adc
push
mov
xlat
add
mov
sahf
add
movsl
jle
andl
mov
sbb
mov
das
aam
push
pop
add
jb
imul
into
mov
and
jae
adc
lods
popa
cld
loope
ja
hlt
pop
jb
and
mov
adc
push
test
inc
or
outsb
rolb
jne
adc
or
add
or
inc
sub
or
mov
push
lods
add
push
push
xor
mov
rclb
sub
mov
add
mov
jne
repz
xchg
pop
movsb
movsb
cmp
movb
and
push
icebp
sub
cmc
inc
ret
in
or
bswap
inc
add
xor
outsl
aad
out
add
adc
int3
movb
je
lret
or
and
loope
adc
enter
ja
add
lods
dec
jnp
mov
add
xor
int
pop
rclb
push
add
in
cltd
das
iret
adc
mov
bound
ficoml
and
movsl
inc
add
out
sbb
pop
adc
rolb
or
pusha
jg
cmp
inc
iret
and
push
sub
add
push
adc
dec
and
jbe
pop
inc
xchg
aad
or
dec
data16
mov
inc
mov
std
fldenv
sbb
arpl
or
in
stos
sub
pop
out
push
add
mov
mov
loope
ret
dec
cmp
mov
jno
jecxz
xor
fwait
hlt
addr16
std
sbb
fstpt
repz
pop
push
sbb
xchg
dec
and
push
rcrb
add
inc
aaa
push
pop
xor
or
mov
inc
repnz
popa
jmp
xor
in
dec
jbe
push
stos
mov
aas
leave
sbb
mov
and
add
sbb
orl
fwait
jle
cs
mov
arpl
jno
add
and
xchg
das
mov
and
jg
and
mov
add
shr
mov
push
inc
sbbb
sbb
mov
mov
add
add
sub
add
shr
add
mov
sub
jge
pusha
add
lods
cmp
ret
sub
fisttpl
bswap
mov
adc
pop
in
fadd
out
dec
add
add
pop
pop
inc
jmp
adc
fsubr
sub
mov
push
inc
cmp
adc
xchg
call
cmp
mov
xor
dec
cmp
push
rcrb
and
neg
addr16
cmp
loope
dec
fwait
sahf
jl
xchg
inc
cmp
inc
aas
cld
clc
push
and
mov
divl
fisubl
mov
aam
jae
enter
lcall
not
sbbl
sbb
rorl
pop
call
in
btr
dec
lods
aas
push
mov
push
movsb
jnp
lods
repz
pushf
cmp
add
or
call
inc
cmp
movsb
inc
cs
cmp
jl
add
dec
or
imul
or
sub
out
out
gs
push
jmp
or
and
or
push
lcall
clc
cwtl
ljmp
roll
out
mov
add
or
cwtl
popf
loope
enter
enter
sub
call
adc
pushf
mov
and
adc
int
sti
pop
and
cmp
iret
sub
insl
push
outsb
loop
movsb
movb
dec
adc
cmc
mov
int
arpl
push
and
dec
xchg
pusha
and
mov
add
sbb
xor
cli
leave
ret
sub
inc
push
add
xchg
add
cmp
repnz
fisubs
or
xor
cwtl
or
rolb
ret
or
add
inc
and
out
push
cmpl
push
pop
sub
lret
xorb
push
or
and
int3
pop
mov
mov
jecxz
dec
pop
clc
pusha
xlat
sub
addl
lret
std
adc
mov
push
adc
push
aaa
inc
in
sbb
cmpb
jecxz
daa
push
jp
pop
add
aad
and
pop
hlt
ret
pop
leave
sahf
and
xor
xor
subb
ds
lahf
inc
xor
pop
outsb
or
and
mov
out
cmp
inc
sahf
add
cli
xor
data16
pop
pop
les
repz
cmp
cmp
jno
xorl
push
pusha
orb
mov
sub
xor
das
adc
push
pushf
push
cwtl
imul
jno
bound
jne
icebp
inc
push
add
aam
sub
and
jmp
push
rclb
or
pop
pop
add
add
loopne
out
test
xchg
sub
mov
mov
mov
push
pop
pop
push
dec
into
add
shrb
sub
inc
js
sub
test
xchg
adc
dec
cld
and
scas
sbb
sbb
out
mov
movsl
pop
sub
test
cmp
add
jp
and
add
inc
xor
nop
dec
sub
repz
pusha
out
daa
mov
dec
add
cwtl
cmpl
and
cli
or
mov
add
ds
add
mov
loopne
mov
mov
mov
jge
pop
pop
inc
dec
rorb
pop
nop
mov
nop
mov
pop
cmp
and
les
shrl
not
inc
jo
xchg
mov
mov
push
pop
pop
inc
xor
aaa
rcll
scas
mov
cwtl
adc
inc
inc
add
stos
mov
mov
test
dec
or
icebp
cmp
fldl
fs
insl
push
rcr
mov
js
out
cmpb
mov
push
or
dec
repnz
sub
pop
xor
lods
ret
fmulp
push
inc
in
pop
mov
and
in
cmp
loopne
xchg
pusha
mov
lea
shl
fidivrs
icebp
popa
fmuls
fmuls
mov
mov
iret
shlb
les
out
add
or
inc
add
fnstenv
mov
incb
add
test
xor
aaa
mov
lahf
push
pop
dec
inc
sbb
leave
or
inc
mov
out
jp
xor
mov
ss
and
adc
lds
and
leave
cwtl
xchg
sbb
lret
clc
mov
out
sbb
int3
in
xchg
in
sti
mov
leave
mov
or
or
loopne
dec
fbld
pushf
outsb
push
push
xor
rclb
testb
adc
sti
jns
push
or
or
xor
push
mulb
fldl
popa
js
xchg
xor
lds
ret
mov
rcrl
es
cld
lahf
sbb
add
ret
add
cltd
popa
jl
cmpsb
mov
add
stos
pop
and
rcrb
fbstp
es
xchg
dec
in
pushf
int
add
cmpsl
jge
subb
or
add
add
leave
mov
push
sbb
shr
gs
and
jnp
in
push
add
pusha
mov
std
add
mov
add
mov
add
jns
in
out
mov
pushf
sbb
aaa
test
add
mov
fistl
repnz
out
loope
js
insl
nop
add
dec
fbstp
sub
cmpsb
add
fimuls
sub
clc
sahf
pop
bound
adc
andb
adc
add
sub
rcl
rcrb
mov
imul
popa
loope
mov
sbb
dec
aaa
popa
out
bound
push
dec
cmpsl
incl
xchg
jb
cmp
iret
subl
rorb
cld
fs
sbb
jmp
push
or
out
sub
jecxz
jmp
es
mov
mov
mov
lcall
mov
add
int
mov
adc
xchg
shl
inc
jp
and
outsb
into
and
orb
js
add
sar
ret
mov
sbb
xchg
lea
adc
inc
lahf
aad
ret
push
cli
dec
pop
test
xchg
sbb
test
outsb
loopne
cmpsl
incb
add
ret
int3
push
in
fadds
notb
add
jecxz
mov
xchg
inc
add
inc
jg
lret
jb
fcoml
daa
stos
shrl
sbb
nop
push
jg
adc
scas
xchg
bound
mov
mov
xchg
sbb
inc
mov
jo
dec
xchg
popl
jbe
mov
subl
sbb
sub
dec
inc
pop
xchg
les
shll
stos
lret
jnp
add
push
pop
pop
sub
cmc
inc
jl,pn
lock
push
jae
push
push
jg
mov
sbb
repnz
sbb
and
jbe
or
sub
mov
in
cmp
ja
loopne
adc
xor
sub
xchg
pop
dec
sbb
cmp
je
jecxz
cwtl
cs
movl
iret
mov
cwtl
mov
rol
and
push
xor
cmpsb
mov
flds
pop
pop
inc
repnz
cmc
and
fcompl
fs
pop
rol
mov
or
pop
mov
push
aas
mov
popf
mov
das
mov
mov
fldl
ljmp
mov
mov
mov
adc
adc
lcall
and
dec
stc
xchg
adc
xchg
rorl
int3
in
cs
mov
les
stos
lods
push
lock
or
shr
ja
mulb
sub
mov
push
nop
cmp
lods
or
test
testl
shlb
jl
or
xchg
inc
push
push
lods
iret
pusha
roll
sub
mov
mov
stc
jnp
mov
cmp
std
enter
rcrl
stos
push
pop
xor
push
lock
aam
sub
xorb
test
bound
rol
add
mov
cmp
aam
insb
jbe
add
pushl
movsb
stos
mov
insb
fisubs
add
bound
cwtl
xor
xchg
repnz
and
in
pop
subb
insb
cmpsb
xchg
sbb
pop
loop
sub
ja
subb
stos
mov
adc
xchg
arpl
pop
pop
jb
into
std
in
dec
cltd
sbbb
mov
dec
call
mov
add
mov
pop
std
dec
xorb
inc
cmp
or
cmp
ret
add
sub
dec
sub
notl
xlat
push
inc
adc
dec
std
inc
mov
pop
test
mov
push
cs
or
or
scas
inc
pusha
cmp
push
test
lcall
dec
ret
arpl
cmp
pop
pop
shll
add
popf
lds
scas
adc
xor
dec
cwtl
sub
repz
cwtl
in
mov
dec
leave
or
xor
rorl
adc
inc
inc
es
cmp
loop
call
cmp
inc
push
adc
jb
jle
nop
sub
ljmp
jae
cmp
test
pop
stc
add
popl
push
ds
inc
add
ja
ss
cltd
call
mov
push
bound
mov
leave
pusha
roll
fnsave
cwtl
stos
es
sub
imul
push
inc
aam
aas
push
add
mov
mov
clc
adc
mov
adc
push
xor
loope
pop
adc
jp
add
movsl
dec
adcb
inc
pop
das
dec
movlps
pop
sti
mov
call
cmpsb
jmp
sbb
xor
or
inc
es
aam
daa
cmpb
dec
sub
or
orl
les
xchg
cmp
lahf
or
movsb
sub
movsl
cltd
imul
scas
data16
mov
aad
test
adc
mov
adc
pusha
rcrb
lods
push
pop
dec
dec
int3
outsb
add
sub
add
roll
nop
xchg
or
insb
inc
push
imull
xor
mov
dec
cwtl
in
mov
arpl
jge
mov
out
pop
pushf
mov
sar
int
repz
xchg
ds
out
push
test
or
add
movsl
jbe
rclb
pop
or
add
mov
pop
pop
xor
dec
pushf
cwtl
ljmp
adc
mov
repz
lods
frstor
dec
xor
dec
and
ret
sarl
stos
pusha
cmp
adc
cwtl
mov
fs
jle
stc
add
and
cmpsl
test
push
cmp
popf
sub
pop
and
ds
pop
inc
test
sets
and
jge
mov
mov
icebp
ljmp
add
adc
push
and
push
ror
int
pop
fdivrp
outsl
add
mov
cwtl
out
mov
mov
into
xor
bound
mov
sub
es
push
sbb
mov
sahf
pop
xchg
mov
incb
push
jo
xor
add
jecxz
bswap
push
inc
in
mov
pop
jge
shl
lret
mov
sbb
sarl
popa
push
cmp
lock
daa
mov
out
ss
dec
sbb
cwtl
dec
fs
mov
decb
scas
fwait
pop
push
dec
pop
rorb
sahf
adc
sub
inc
cmc
repnz
jae
xchg
repz
stos
mov
fcompl
fs
es
or
xchg
cltd
lahf
rcr
ds
ret
ret
pop
aam
push
add
mov
add
ss
add
mov
or
aas
ret
sub
enter
push
pop
pop
dec
test
sub
daa
mov
or
or
adc
jg
sti
xchg
repz
cmp
rcll
dec
stos
aas
add
clc
ss
xlat
neg
and
cmp
sbb
rcrl
movsb
std
cs
pop
pop
push
shll
cmp
add
xchg
xchg
ret
pop
jae
sub
lret
pop
adc
or
int
psadbw
add
and
pop
pop
add
pop
and
jnp
mov
mov
inc
cmp
inc
lea
pop
cwtl
rorb
or
or
inc
mov
inc
dec
xchg
pop
sub
cwtl
xorb
add
mov
xchg
and
push
inc
lahf
or
std
dec
jns
test
add
out
xorb
sub
dec
sbb
addr16
jmp
repz
add
add
fcmovu
jbe
stos
and
int
clc
inc
add
or
dec
popa
add
out
pop
push
ror
jmp
and
pop
add
xor
and
xor
cwtl
pusha
mov
mov
ret
and
and
cmpsl
hlt
pop
and
xchg
inc
out
push
das
pop
pop
add
dec
dec
xchg
mov
cmpsl
repz
sub
xor
out
std
mov
xchg
mov
jae
in
imul
mov
ficoms
or
testb
dec
ret
cmp
adc
fistps
ds
sti
and
cmc
cmp
lahf
fisubrs
pop
bswap
cs
out
dec
in
xchg
mov
adc
jmp
xor
mov
pusha
cld
jle
or
adc
sbb
push
enter
and
xchg
popa
into
mov
pop
nop
cld
jge
sbb
stos
imul
mov
sbb
test
dec
test
push
add
sbb
push
xor
loop
cmp
inc
mov
inc
cltd
hlt
mov
jo
pop
or
sub
lea
xchg
jbe
push
pop
ljmp
pop
roll
dec
sbb
hlt
add
push
adc
push
sub
add
idivb
aam
mov
inc
dec
dec
loope
fwait
std
pop
adc
add
jo
lea
test
inc
scas
or
icebp
push
cmpsb
mov
mov
or
sub
mov
imul
fs
xchg
mov
ret
shl
stos
jno
cmp
addl
push
rclb
aaa
add
sbb
test
cmp
addl
mov
xchg
mov
lods
setb
nop
in
cwtl
add
cmc
mov
dec
daa
pusha
adc
imulb
add
bswap
outsb
and
in
popa
mov
cli
lock
adc
add
fwait
scas
fs
lret
dec
xor
jbe
sbb
mov
js
es
cmp
xchg
cmp
xor
cmpsl
mov
adc
xor
mov
add
shl
shlb
push
insl
out
or
negb
outsl
xlat
push
pop
xor
leave
fildl
cli
adc
sub
adc
mov
xor
add
and
lahf
stos
cmp
xchg
inc
push
mov
dec
cmp
mov
push
je
ljmp
mov
hlt
push
mov
jo
add
es
cmp
test
add
xor
adc
add
mov
div
cli
inc
adc
inc
clc
rclb
rorb
pop
mov
dec
push
xlat
xchg
mov
into
adc
loop
push
lea
xchg
dec
cmp
out
pusha
subb
test
mov
sub
icebp
mov
jl
and
leave
je
test
add
sub
sahf
popf
sahf
outsl
mov
stc
jo
jne
inc
loopne
add
dec
inc
stos
push
je
xchg
out
dec
mov
inc
pop
xor
push
pop
inc
push
push
repz
fsubr
sti
cld
loope
pop
push
inc
mov
test
add
push
loopne
leave
cmpsb
filds
ja
jns
add
into
popf
push
inc
dec
les
and
mov
or
mov
and
fisubs
fisubrl
lcall
jb
int
and
popa
xor
inc
arpl
rorl
or
xchg
arpl
lcall
cwtl
dec
je
bound
rcrb
sbb
movsb
inc
sbb
add
sub
push
loop
pop
nop
subl
push
mov
neg
cmp
mov
add
enter
stc
fdivs
push
in
sbb
test
sbb
add
sub
sub
mov
cli
cltd
xor
test
pop
adc
dec
les
add
lret
cli
repnz
xor
roll
out
inc
pop
dec
or
lds
lods
pop
add
mov
imul
xchg
pop
pop
lcall
movsb
popa
inc
mov
pop
sbb
pushf
inc
ret
dec
dec
leave
loopne
test
mov
orl
mov
inc
lret
inc
xor
xchg
mov
sub
dec
mov
and
add
xor
je
shll
adc
lods
push
push
pop
jecxz
add
cltd
xor
mov
inc
jmp
mov
jns
cmp
fisttpl
push
mov
sbb
or
lret
mov
dec
std
jecxz
push
inc
pop
int3
inc
add
rol
movsb
jmp
cmc
sub
imul
out
adc
insl
fdiv
ret
sub
mov
xor
js
pusha
xchg
popf
pop
jle
or
fstps
push
pop
sbb
fs
sar
mov
dec
inc
adc
xor
pop
pop
into
jmp
pop
mov
xor
call
fs
adc
cmp
add
mov
pop
pushf
cmp
and
fistpll
push
sub
loopne
push
out
nop
rcll
testl
enter
cmpl
testb
in
mov
out
cmpsb
addb
push
stc
mov
pop
pop
push
je
sbb
movsb
test
xchg
inc
cmpsb
sub
mov
out
rolb
setl
add
push
es
fdivs
sub
sub
xchg
add
test
aam
addl
push
roll
sub
arpl
pop
imull
lret
fwait
jnp
or
mov
adc
shll
xchg
es
or
sbb
adc
mov
jno
je
jnp
sbb
xor
arpl
xchg
add
neg
dec
mov
add
pop
or
lock
jle
xor
adc
push
jo
ds
daa
cs
add
xor
push
xor
push
loopne
mov
outsl
andb
test
add
in
sub
dec
inc
mov
sub
mov
dec
pop
push
xor
cld
mov
shlb
dec
or
lcall
push
push
aad
or
and
xchg
add
fwait
pop
mov
loop
arpl
jnp
mov
pop
imul
imul
sbb
mov
cmp
lret
int3
and
mov
mov
enter
pushl
adc
mov
and
cmp
test
add
fldcw
sarl
push
cwtl
aas
or
mov
sbb
stos
clc
jle
mov
xor
push
add
neg
mov
fsub
test
aaa
sbb
add
inc
xchg
sbb
push
ljmp
imul
mov
popf
aam
test
mov
es
mov
loopne
jno
mov
or
pop
sub
loope
in
pop
and
xchg
adc
and
int3
add
test
pop
jns
inc
adc
mov
imul
fcmovnu
inc
adc
jge
jne
add
sbb
inc
push
test
mov
outsl
je
daa
int
xchg
bound
pop
push
inc
mov
notl
mov
add
mov
inc
out
into
inc
repz
gs
mov
andb
sti
fldenv
jbe
movsw
mov
dec
stc
push
xorb
mov
in
adc
dec
mov
subb
bound
xchg
shrl
and
mov
xlat
dec
mov
test
dec
cltd
push
stos
dec
add
sbb
icebp
and
jl
mov
xchg
add
adc
into
neg
xchg
adc
lods
inc
xchg
adc
insb
pusha
mov
push
movsb
adc
mov
mov
repz
jmp
subb
aam
loopne
leave
lock
lds
shl
or
or
inc
cmp
lds
bound
or
setns
sbbb
sub
pushf
or
cmp
pusha
mov
inc
push
lcall
push
push
or
fldenv
mov
sarl
adc
add
push
dec
push
rcll
pop
or
pop
inc
mov
dec
scas
mov
xchg
xchg
testb
cmpsb
mov
xchg
enter
mov
mov
popa
add
fldl
mov
into
and
add
jmp
jbe
or
scas
aas
sub
jne
xor
and
inc
es
loop
add
push
loop
rcrl
iret
mov
pop
push
push
mov
sub
mulb
or
pop
es
mov
shll
insl
xor
sub
in
mov
dec
cmpsb
cmp
stos
jns
jp
xor
dec
xchg
or
aas
mov
das
add
inc
rol
arpl
jmp
adc
mov
aam
or
loopne
mov
sbb
mov
sub
adc
cmp
testl
jg
and
push
sahf
fsubs
cs
psubd
or
ret
dec
loop
jmp
inc
adc
xchg
xor
xor
cld
dec
iret
scas
dec
mov
mov
mov
dec
or
nop
mov
dec
rcrl
xchg
jle
sub
push
xor
push
loope
jp
pop
out
hlt
adc
jecxz
add
inc
fcomi
flds
ja
or
outsb
sbb
xchg
clc
mov
and
pop
cmp
xchg
test
shrb
repz
mov
sub
fistl
xchg
cwtl
mov
mov
gs
imul
mov
mov
push
int3
add
jmp
xchg
cmp
pusha
add
or
lds
dec
in
cltd
push
cs
mov
cld
inc
int
jae
mov
leave
dec
xchg
rolb
cmp
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
int3
mov
sbb
js
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
sbb
inc
dec
inc
inc
or
in
fsub
movsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
shrb
fs
je
test
adc
inc
adc
push
cmp
movsl
push
shrb
rclb
gs
and
nop
and
sub
and
push
shrb
jecxz
xchg
arpl
and
push
lock
sub
lret
cmc
aas
add
add
xchg
adc
add
nop
sbb
or
push
xor
addr16
sbb
adc
cmp
cmp
sbb
or
inc
inc
call
sub
pop
push
dec
bound
arpl
je
and
mov
xchg
adc
pushf
cmp
mov
and
enter
jb
cmp
mov
and
cmp
sbb
mov
and
or
cld
cld
inc
adc
hlt
or
push
add
and
or
test
nop
cmp
inc
and
sub
je
movzwl
mov
cmp
pop
mov
sub
xor
aam
enter
jb
cmp
add
mov
cmpl
jne
cmp
push
int3
push
mov
jecxz
mov
test
jne
xor
pop
lret
inc
cmp
add
rorb
inc
cmp
add
push
mov
inc
push
inc
cmp
jne,pt
js
adc
push
into
pop
nop
fcoms
out
inc
pop
inc
repnz
call
imul
or
push
add
or
into
adc
inc
push
add
iret
mov
push
push
adc
mov
push
push
pop
push
mov
into
adc
mov
xchg
add
push
pop
pop
nop
fnstcw
xchg
push
or
aaa
or
ret
and
call
inc
mov
sub
or
inc
add
jmp
add
cmp
ljmp
jne
jb
sbb
call
lahf
add
push
mov
inc
mov
cltd
push
cmp
jb
jecxz
add
insb
call
ja
and
sbb
mov
or
into
inc
cmp
dec
jmp
aas
pop
inc
jp
add
nop
pop
cmp
sub
or
sti
inc
scas
and
in
lock
jae
or
jb
js
or
or
cmp
out
sbb
pop
xchg
sub
or
cmp
push
mov
cs
out
adc
dec
lea
shlb
test
je
loopne
mov
xor
dec
addb
add
scas
dec
stos
stc
aad
fs
mov
xchg
mov
call
sbb
inc
or
xchg
push
sub
jns
push
xchg
and
loope
ja
sub
decb
xchg
in
jecxz
or
scas
push
push
add
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
mov
out
xor
push
push
or
sti
imul
mov
pop
lea
rorl
filds
cmpsl
cmc
cwtl
pusha
add
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
dec
lock
or
outsb
ljmp
cmp
jle
add
adcl
clc
incl
lea
and
adc
and
push
pop
sub
test
dec
rcpps
or
pop
je
sub
or
fs
xor
sahf
jmp
cmp
aas
ret
clc
sub
push
sbb
outsl
or
out
hlt
lea
std
xor
addl
xchg
andl
cwtl
inc
call
add
out
rcrb
cwtl
cld
sub
sub
xchg
xlat
inc
pop
call
ja
jge
pop
inc
dec
frstor
mov
jg
pop
leave
stos
add
and
and
int3
mov
cmp
pop
movsl
pop
and
adc
push
or
pop
fwait
or
push
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
push
lods
rcll
fisttps
gs
xorb
aaa
or
leave
push
xchg
inc
push
mov
cmpsb
mov
jmp
lds
inc
jne
dec
mov
test
rcrb
sbb
jp
dec
mov
test
adc
lea
or
pop
xor
aad
mov
stc
inc
lds
xchg
test
or
cmp
jae
testl
adc
mov
inc
dec
cmpsb
mov
test
je
dec
mov
ret
mov
cmp
movsl
adc
imulb
adc
sub
out
jmp
jnp
push
mov
pushf
cmp
dec
pushl
int3
mov
test
sub
ss
loopne
jle
or
and
push
or
and
cmp
dec
movaps
mov
cmp
pop
mov
add
rolb
xacquire
mov
jae
bound
xchg
add
mov
mov
push
xchg
pop
and
cs
les
inc
je
adc
sbb
jo
mov
lahf
inc
push
cmpsb
mov
hlt
xchg
adc
cmp
mov
dec
add
les
pop
push
xor
pop
or
or
sub
jbe
or
in
fistpl
loopne
cmp
or
adc
stc
lods
test
loopne
pop
add
rcrl
push
int
mov
jmp
pop
push
mov
sbb
sub
hlt
sub
mov
scas
or
and
cwtl
mov
dec
in
pop
shll
jbe
movd
adc
cmp
push
adc
test
mov
lcall
test
sbb
mov
adc
movl
shr
outsl
stos
xchg
popa
mov
xchg
leave
add
or
incl
rolb
loop
ret
in
or
add
adc
mov
or
jl
xchg
lret
sub
push
lret
cmc
sub
or
ret
and
lds
ss
xor
dec
or
je
sub
add
fcmovb
push
xchg
add
xor
test
and
and
cmpsl
add
sub
cmp
bound
push
and
pop
push
stc
add
adc
fs
fdivs
mov
addr16
and
pusha
fsubs
add
in
repz
stos
xor
andl
hlt
xchg
mov
push
or
jo
dec
imul
mov
stos
pop
mov
call
aaa
sub
dec
jg
push
clc
jae
mov
jge
xchg
fiadds
ljmp
and
sub
adc
push
call
mov
and
aad
fs
fwait
lods
mov
pop
add
lea
mov
xor
out
stos
xchg
fimull
xchg
dec
jo
repnz
fisttps
add
sub
cltd
inc
sbb
aaa
mov
test
dec
dec
ret
gs
xor
adc
mov
jmp
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
daa
mov
mov
cltd
lret
test
test
adc
jle
and
xchg
sub
fwait
pop
adc
sub
cwtl
shll
adc
pop
xor
test
aam
es
xor
sbb
lea
movsl
jo
call
inc
or
cmp
sbb
pop
push
add
cmp
xorl
sub
add
int3
and
or
ljmp
pop
or
pop
insb
xchg
and
and
lods
lret
xchg
jno
js
outsl
imull
andl
and
adc
fxam
sahf
aam
icebp
adc
and
lea
dec
mov
sub
inc
add
pop
and
jecxz
bound
lea
nop
mov
mov
in
pusha
test
dec
add
pop
jg
push
aaa
je
push
addb
jne
or
ljmp
dec
mov
int3
stc
or
or
test
mov
jnp
xchg
sbb
xor
mov
jmp
pop
sub
je
hlt
es
push
in
shll
adc
aad
jne
sbb
pop
lcall
push
cmp
cmpl
arpl
loope
mov
add
icebp
cs
das
out
cmp
in
sub
dec
cmc
mov
es
sub
mov
xchg
cltd
gs
std
repnz
xor
pop
cltd
lods
scas
sbb
pop
mov
dec
push
into
xchg
das
shlb
arpl
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
popf
xor
ficompl
lea
jg
mov
lcall
movb
xchg
scas
inc
and
sub
sub
or
jl
pop
hlt
jmp
xchg
lret
mov
sbb
mov
fimull
or
pop
notl
mov
sbb
inc
cwtl
sarb
sbb
dec
sub
sub
add
sbb
xchg
lcall
call
pop
adc
inc
mov
mov
push
pop
mov
xor
sbb
loopne
sub
mov
adc
jp
jb
or
js
xor
or
test
jne
cmovae
or
jmp
sub
mov
inc
les
add
je
inc
mov
addb
ljmp
aas
nop
or
cmp
sbb
les
daa
loop
clc
cmp
sub
jno
push
adc
sbb
jle
xor
int
and
add
test
je
jae
or
add
cld
inc
or
aaa
orl
push
sub
sub
push
sub
or
loop
mov
mov
sub
mov
and
mov
scas
mov
or
nop
mov
add
scas
fcmovnb
fcomps
enter
pop
stc
add
insl
ffree
dec
adcl
sub
pop
call
cmp
or
sub
repz
add
xchg
push
cltd
pop
sub
cmp
add
ljmp
fists
mov
add
movsl
pop
xchg
mov
xor
mov
lret
test
inc
lahf
jno
jl
jns
push
push
sbb
sub
movsb
adc
add
add
aaa
and
shll
mov
stc
jmp
fbld
mov
dec
add
stos
dec
xchg
clts
pop
cmp
jl
in
sub
test
rcr
in
lods
shlb
clc
xor
dec
loop
push
jl
jb,pn
and
inc
or
lret
mov
dec
sti
and
or
jmp
or
sbb
mov
inc
repnz
xor
xor
and
add
adcl
lock
jmp
ss
dec
adc
clc
add
ret
push
fcoms
jge
cmp
inc
add
xchg
call
inc
fists
mov
lahf
or
test
jle
jb
jbe
dec
inc
xor
lods
jmp
add
out
pop
sub
je
cmp
rorb
test
leave
je
sbbb
push
cmp
pop
or
sbb
add
push
jmp
enter
jne
enter
adc
xchg
out
nop
fcoms
and
xor
cmp
sub
or
or
cmp
cmp
ja
jne
ret
xchg
cwtl
inc
test
or
pop
call
lods
andl
jg
jmp
push
push
push
cmp
pop
pop
jne
clc
xor
cwtl
imul
mov
imul
jns
add
mov
add
divl
je
pop
insl
vmread
rep
incb
and
je
xchg
sbb
jl
xchg
sbb
std
sbb
sbb
push
lcall
xor
add
xor
mov
pop
push
fsubrs
lods
or
sbb
fistl
fldcw
push
cmpsb
repnz
sub
or
outsb
jl
add
or
movups
and
in
aam
pop
pop
pop
mov
cmp
enter
cmovns
addl
mov
inc
jmp
fsubs
sbb
cmp
mov
loop
je
lret
loopne
es
and
loope
icebp
dec
add
in
mov
and
sub
push
jle
xor
mov
add
das
or
arpl
mov
mov
data16
jne
sbb
lock
and
and
je
in
test
jmp
or
sti
dec
loopne
or
push
fs
xchg
lods
movsb
dec
add
mov
add
loopne
mov
sarl
inc
or
stos
movsb
adc
stos
pop
rcr
or
fldt
adc
add
mov
dec
popf
xor
lea
dec
insb
nop
rol
dec
mov
mov
inc
sbbb
popf
push
sub
aad
add
js
pop
add
push
add
sub
or
pusha
call
or
and
or
cmp
inc
and
in
rcll
and
int
xor
aam
push
jmp
stc
addb
fdivrs
js
push
pop
sub
movb
inc
out
pushf
dec
mov
sub
test
add
or
adc
add
or
mov
jmp
add
mov
cmp
add
mov
sbb
pusha
js
loope
ljmp
adc
cmpsb
es
sub
jmp
dec
or
cmpl
test
or
lea
and
cmc
cld
xchg
fisttpl
push
fwait
sub
rol
pop
xchg
jns
push
pcmpeqb
sbb
shrl
add
fsubs
inc
addr16
sub
jmp
cld
mov
inc
inc
stc
pop
and
jae
sbb
pop
stc
jmp
push
fstp
dec
stos
xchg
imul
mov
out
enter
pop
or
or
aas
test
add
pushf
or
push
ret
nopl
hlt
adc
adcb
and
out
sbb
pusha
cmp
mov
mov
movsl
aam
xchg
pop
and
out
je
notl
xor
adc
mov
andb
xor
add
leave
sbb
cs
shll
or
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
into
push
ror
sbb
push
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
push
jl
cld
mov
test
lods
lds
iret
decl
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
add
mov
pop
mov
inc
aam
imul
loope
push
jp
iret
mov
mov
mov
xchg
push
cmpsb
scas
mov
adcl
int3
jbe
add
in
xchg
cmp
xor
push
in
cmp
sahf
add
and
push
shld
add
addr16
repz
mov
subb
xchg
and
pop
and
loopne
adc
cmp
das
and
jl
push
cwtl
dec
sbbl
clc
pop
jne,pt
sub
or
and
or
mov
aas
cs
scas
inc
nop
repnz
hlt
movzwl
inc
clc
int
push
push
xchg
sub
dec
or
repz
dec
xor
push
push
pushl
xor
hlt
xchg
sbb
push
aaa
or
push
mov
adc
push
jl
daa
and
pusha
adc
mov
call
mov
clc
mov
je
and
mov
or
push
cmovg
push
adcb
inc
outsl
pop
jb
popa
outsb
addl
push
push
dec
add
push
dec
popa
jae
je
adc
sbb
fwait
push
out
and
or
xor
mov
adc
movsb
xchg
les
inc
sbbl
mov
sbb
sub
sbb
sub
je
ret
mov
bswap
lret
or
popl
sub
sbb
sub
pop
mov
push
or
push
cld
sub
mov
fdivs
rclb
pop
insl
push
adc
popf
mov
fs
mov
push
and
add
sbb
in
cmp
jle
repnz
add
jae
sub
cmp
cmpl
xor
or
cmp
jecxz
jbe
scas
js
jb
icebp
out
fwait
jbe
jp
pop
mov
fadds
jge
adc
jmp
movsb
mov
add
add
test
mov
in
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
xor
or
mov
push
outsb
call
mov
add
pop
jmp
pushf
xchg
sbb
test
push
push
xorl
hlt
ja
popf
add
adc
cmp
movl
mov
or
shr
fistpl
and
xor
mov
push
xchg
pop
dec
pop
jno
dec
addr16
adc
push
clc
mov
push
or
and
jg
js
mov
jnp
cmpb
jbe
push
scas
pusha
in
push
adc
adc
sbb
pop
pop
push
xchg
push
cmp
in
or
push
dec
sbb
add
pop
add
push
push
jmp
xchg
filds
sbb
jmp
jmp
or
outsb
mov
push
add
push
pushf
bound
imul
mov
pop
pop
lds
sub
adc
and
loop
pop
push
fistpl
mov
mov
jecxz
mov
enter
jae
lahf
mov
jl
or
cmp
inc
mov
push
sbb
cld
inc
inc
and
mov
adc
or
test
push
lcall
mov
dec
cmpl
push
je
call
inc
and
jbe
xchg
das
popf
ja
jmp
mov
xchg
js
adc
ret
lret
xor
dec
cmp
push
mov
adc
or
ja
cmp
lock
cli
add
push
sbb
dec
sbb
fldt
adc
jle
fstpl
adc
xchg
fs
mov
or
push
or
add
inc
out
push
push
or
stos
outsl
insb
xchg
sub
mov
jmp
add
sub
xlat
or
xor
je
pop
dec
lcall
push
push
and
call
mov
pop
mov
fcomps
das
call
push
push
push
es
push
inc
inc
pop
stos
adc
and
lret
xchg
mov
or
xchg
add
andl
mov
or
popf
cmp
pop
test
or
mov
jnp
lea
movsb
cmp
pop
fs
push
lahf
mov
loop
or
das
fs
int3
sub
lret
or
lea
cmp
sub
jns
push
mov
adc
add
mov
cmp
push
pusha
add
sub
cwtl
ss
xor
push
fstl
cmp
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
cmp
ror
rcrl
popf
and
sbb
into
sbb
push
sbb
fstps
imul
push
movsb
leave
das
push
or
cltd
pop
ret
fwait
enter
es
push
repz
mov
jno
sub
and
out
xor
pop
imul
push
adc
inc
sbb
sti
push
cli
loopne
mov
std
out
sbb
jl
or
xchg
sub
or
inc
push
adc
outsb
adc
and
xor
cs
mov
add
or
test
jmp
push
pop
xchg
and
sbb
dec
cmp
jne
insb
sbb
jp
sbbl
pushl
add
cmp
mov
xor
xor
dec
mov
add
popa
inc
test
jle
ja
ret
xor
push
dec
lcall
outsb
adc
adc
xor
and
enter
ss
ret
nop
movsb
pusha
sub
xchg
xor
ss
add
repz
sbb
sbb
shrl
push
in
pusha
mov
xor
jge
mov
movsl
popl
dec
adc
sbb
jnp
adc
les
leave
cmpl
sbb
mov
and
inc
xlat
push
daa
int
mov
or
lods
aad
out
mov
mov
pop
enter
rclb
in
adc
push
and
xchg
mov
dec
xor
adc
cmp
cmpl
movb
cmp
dec
orps
outsb
mov
sbbb
mov
lea
in
inc
push
push
in
enter
sarl
dec
jne
pop
pop
pop
lea
iret
add
jbe
sbb
or
dec
and
fs
loope
outsl
ret
mov
idiv
add
xor
fs
sub
dec
das
sbb
xorb
shl
inc
mov
test
xchg
push
shr
jb
and
or
cmpb
adcl
aaa
sbb
sbb
outsl
adc
ja
sahf
push
and
jbe
pop
pop
leave
call
inc
loopne
add
adc
int
popa
adcl
jbe
mov
sbb
or
out
push
push
push
call
xor
add
and
inc
ret
pop
ret
adc
sub
sbb
dec
push
xchg
or
push
cmpsl
pop
pop
and
out
sub
mov
ret
push
cwtl
cmpb
jbe
cmpl
mov
shl
inc
mov
call
and
cmpsb
adc
popa
xor
pop
sub
stos
imul
or
jne
jle
cmpsl
and
lcall
int3
push
inc
dec
adc
add
mov
out
out
xor
push
test
xor
jne
mov
je
sbb
ret
cmpl
test
repnz
loopne
push
sbb
or
mov
stc
lock
sti
cmp
jmp
int3
add
ja
test
mov
mov
shrb
clc
dec
add
dec
jl
lock
mov
pop
and
or
mov
push
sbb
inc
add
push
or
mov
dec
cld
fcmove
xlat
nop
push
and
inc
inc
jg
js
pop
inc
stc
adc
sub
jnp
and
dec
popf
cmpsl
negb
jmp
gs
xchg
jl
dec
pop
test
scas
sub
call
and
andl
testl
xchg
push
rorb
mov
ret
pop
fwait
and
add
cmp
sub
cwtl
sbb
xchg
mov
dec
lock
outsb
in
fmuls
sub
imul
mov
and
xchg
add
les
cld
jne
cmp
mov
dec
sub
lea
subl
jge
dec
push
push
pop
xchg
mov
pop
and
call
cmp
xchg
nop
lret
call
xchg
lock
fcmovne
pop
sar
adc
dec
shrl
pop
xor
sbb
ret
xor
in
mov
loop
jmp
pop
nop
mov
push
cmp
push
pop
inc
dec
add
cmp
add
sub
test
inc
mov
pop
jae
imul
xor
bound
or
xchg
push
xchg
or
jmp
or
movsb
add
sub
orb
fiaddl
mov
nop
insl
daa
repnz
inc
or
shrl
add
lret
repnz
mov
std
nop
push
je
cmpsb
mov
ret
cmp
mov
mov
adc
pop
testb
mov
inc
jl
cmp
jecxz
mov
add
imul
sub
rorl
int
inc
cld
add
cltd
xchg
sti
adc
mov
fwait
movsl
cli
inc
arpl
push
and
pop
pop
and
mov
mov
jno
lret
or
push
sub
sbb
test
incl
xchg
adc
cli
je
cmp
xor
cld
adc
add
push
or
and
cmp
jne
arpl
call
cld
arpl
add
dec
sub
or
inc
cmp
or
add
xor
xchg
or
sub
xchg
dec
lds
xchg
pop
lea
decl
popf
inc
and
dec
rolb
daa
xlat
push
ljmp
ja
add
push
and
ljmp
pop
cmp
jne
dec
notb
lahf
sbb
inc
int
into
andl
pop
divl
sub
mov
pop
pop
ja
jbe
push
sbb
and
loope
push
jae
or
shr
popa
mov
pop
adc
pop
or
jmp
nop
sbb
aam
push
clc
inc
fdivs
add
cmpb
sub
out
ret
xor
std
into
cmp
pop
adc
ds
xlat
adc
js
inc
rclb
rcrb
mov
mov
in
cld
lods
jb
es
jl
cmp
jge
pop
sub
push
mov
add
std
or
jge
xor
push
in
fstps
pop
xchg
insb
lret
sub
call
lcall
sub
push
jle
sub
and
flds
mov
repnz
outsb
xor
adc
push
and
std
and
ss
push
dec
dec
stc
bound
xchg
test
cmpl
jne
fsubr
out
adc
loopne
arpl
jmp
fldl
out
cld
fmuls
jmp
int3
fwait
pushf
stos
xor
push
std
cmp
icebp
jl
dec
popf
movsb
sub
adc
mov
push
or
mov
xor
dec
or
shrb
mov
lret
mov
mov
sub
popa
mov
mov
push
push
dec
inc
mov
jge
cltd
and
rclb
dec
xchg
rorl
jl
push
sahf
pop
daa
jo
mov
imul
leave
or
shlb
sub
push
lret
jmp
cs
cmp
sbb
push
sbb
or
sbb
je
adc
sbb
imul
inc
jb
jp
enter
or
adc
out
jmp
jl
add
mov
orl
popa
rolb
cmpb
pushf
xor
sbb
push
lock
subb
mov
mov
inc
je
call
fld1
and
cmp
loope
loopne
movsl
loop
loopne
and
pop
mov
pop
jecxz
sbb
adc
rcl
sbb
iret
jmp
icebp
mov
dec
sbb
shr
lret
or
outsb
sub
sub
pop
repz
or
mov
inc
xor
push
xor
jmp
inc
add
cmp
cmp
adc
or
mov
cmp
sbb
add
loope
mov
add
outsl
cld
call
push
or
sarl
sbb
add
xchg
fisubl
or
sahf
add
and
movsb
or
sbb
popf
or
xor
or
adc
push
xchg
pop
mov
xor
cld
adc
jge
test
sub
adc
pop
les
xor
or
or
ret
inc
xor
sub
cmp
shll
push
mov
dec
sbb
pop
mov
movsb
adc
fbstp
movsl
lock
das
add
test
sbb
ljmp
inc
ds
adc
xchg
cld
test
adc
maskmovq
negl
or
inc
popa
and
xchg
mov
push
push
testb
add
scas
push
xor
icebp
jmp
and
push
decl
outsb
sub
data16
dec
inc
cltd
cmp
adc
ja
dec
incb
jb
gs
inc
ljmp
stc
rolb
add
sub
mov
cmp
loop
mov
push
adc
movsb
arpl
sub
inc
in
and
movsb
aaa
nop
cs
mov
inc
xor
mov
ds
sarl
add
fisubl
ret
dec
cmp
shlb
jne
xchg
pop
bound
mov
imul
add
and
mov
inc
cld
pop
pop
push
sbb
jae
cmp
or
mov
cltd
mov
and
aaa
push
cltd
pusha
lock
stc
call
sbb
sub
jmp
push
adc
push
call
xor
pop
adc
insl
call
mov
inc
or
fndisi(8087
std
cmp
and
xchg
add
jne
mov
mov
cmp
sbb
mov
scas
xchg
mov
sub
push
cmp
loopne
push
dec
in
fstpl
scas
ret
jmp
decl
pop
lods
mov
fmul
adc
lea
in
mov
outsb
sub
inc
sbb
mov
sbb
sbb
push
cs
adc
arpl
call
push
enter
scas
and
test
out
cmp
movl
mov
or
pop
push
aam
cmp
ret
push
pusha
cmpl
sub
int
or
or
add
jl
inc
outsb
sbb
and
lea
ret
or
inc
and
out
lret
mov
pop
fists
in
popf
push
andl
lret
or
push
inc
inc
xor
dec
clc
jne
sub
dec
cwtl
push
push
dec
adc
push
arpl
out
popa
loope
imul
and
pop
inc
and
xchg
pop
adc
adc
push
push
push
mov
and
pop
pop
pop
adc
lods
or
andl
adc
push
jmp
sbb
call
add
cmp
adc
push
mov
jne
jp
out
jae
int
or
clc
jge
adc
je
sbb
or
and
call
inc
adc
cld
jecxz
jmp
add
fwait
inc
mov
mov
cli
pop
jne
xor
xchg
jge
clc
adcl
in
or
add
push
push
clc
push
xchg
das
pop
lods
jmp
cmpsl
fs
repz
call
es
cmp
mov
jo
or
incl
call
orb
jb
xchg
lea
adc
in
mov
movb
fisubrs
mov
adc
push
push
cmp
mov
inc
sub
adc
cmp
lahf
or
dec
mov
xor
jle
dec
push
mov
je
or
mov
xor
in
and
test
sarb
jg
adc
test
sub
dec
xchg
movsl
dec
xor
inc
dec
inc
mov
mull
mov
mov
ret
imul
outsb
pop
insb
xor
cs
xor
addb
dec
outsl
push
outsb
addr16
popa
out
dec
inc
insl
aad
adc
mov
mov
lea
jecxz
jo
cltd
cmp
iret
push
jns
clc
sti
jne
add
pop
dec
rcll
enter
sbb
xchg
cmp
stc
adc
xchg
test
ret
insb
and
inc
push
enter
lods
jne
and
call
bound
push
jno
dec
lds
lds
and
fdiv
adc
bound
popa
inc
dec
je
int3
mov
scas
add
rcll
xor
adcb
xor
jge
xorl
or
and
sub
les
push
adc
push
xchg
add
cmp
push
push
adc
fdivs
or
mov
sub
fmuls
ret
movsl
rclb
test
xchg
jb
add
push
movsl
jne
add
sbb
repz
or
test
ss
xchg
push
sbb
push
outsl
data16
popa
jb
mov
ja
repz
jae
xor
pop
cld
clc
lret
test
sub
mov
sub
enter
or
dec
push
mov
clc
mov
add
mov
and
cmp
jne
fidivs
ret
in
ror
mov
push
iret
push
and
lods
rolb
into
out
add
mov
push
inc
jmp
pop
mov
push
mov
adc
push
cld
jne
pop
outsb
sub
shr
jb
ret
sti
pop
dec
leave
add
aas
fnstcw
sbb
je
and
jb
popl
leave
jne
mov
mov
je
movaps
jo
cld
jg
or
inc
mov
repz
out
add
ror
or
sbb
mov
mov
sub
aaa
test
mov
je
stos
or
push
lock
cmc
fiaddl
xchg
dec
inc
push
cld
cmc
push
adc
adc
fbstp
or
lds
mov
push
cld
shl
xchg
jo
inc
jae
test
popf
dec
push
gs
jmp
int3
int
movsb
jmp
adc
add
and
mov
sbb
loopne
ja
daa
or
dec
sub
clc
cmpsb
nop
adcl
add
push
lds
sahf
mov
divb
adc
adc
or
add
iret
pop
jmp
adcl
dec
sbb
mov
in
push
call
cmp
xchg
adc
pop
and
je
dec
adc
rcrb
cmp
jbe
or
mov
and
pop
out
jns,pt
adc
jmp
sub
das
fldlg2
mov
aas
fsts
int3
lods
mov
cli
add
cmpl
fstl
loop
scas
or
mov
movsl
adc
mov
out
cmp
xchg
call
sbb
pop
test
bt
js
pop
push
push
insl
jns
adc
cmp
sbb
jnp
xchg
sub
push
add
mov
sub
sbb
es
adcb
lcall
pop
adc
lret
stos
inc
test
or
lea
sub
sub
testb
xlat
cmc
sbb
ret
and
or
call
pushl
xor
inc
inc
dec
sub
shll
mov
inc
out
xchg
les
adc
imul
xchg
cmp
mov
push
inc
jo
fsubl
in
pop
xor
push
cmp
inc
mov
and
mov
push
mov
test
sbb
jo
push
xor
mov
sbb
adc
or
loop
adc
lock
or
mov
and
xchg
push
stos
js,pt
test
jg
xchg
repnz
pop
insl
cltd
adc
lahf
int3
insb
push
mov
std
addps
and
jno
or
adc
adc
sbb
xchg
and
and
sub
call
daa
inc
adc
cmp
cld
add
and
nop
outsb
nop
and
les
inc
push
mov
pop
lock
icebp
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
ja
in
jb
cmp
sbb
mov
and
mov
call
sub
ljmp
in
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
rorb
adc
or
push
gs
mov
jle
or
and
icebp
sub
or
or
pop
xor
or
js
gs
imul
mulb
lds
push
js
inc
dec
gs
jo
pop
nop
sub
push
pop
shlb
push
mov
cmpsl
xchg
mov
push
inc
dec
jne
pusha
dec
gs
outsl
daa
jb
add
and
xchg
and
inc
dec
outsb
fnstsw
in
pop
nop
in
adc
mov
data16
les
popa
insb
add
cmp
mov
ret
pop
nop
pop
loop
push
xchg
insb
lds
push
mov
gs
or
cmp
inc
icebp
adc
or
or
imul
outsl
adc
call
insb
sbb
rolb
outsb
xor
nop
movsb
stos
and
les
or
jbe
data16
outsl
ja
mov
scas
pop
dec
inc
daa
fs
and
js
cmpsb
mov
nop
pop
pop
fstps
mov
push
bnd
mov
imul
mov
inc
rclb
xchg
shlb
or
les
mov
insb
dec
popa
movsb
ret
mov
and
outsb
fs
pop
nop
push
mov
in
mov
mov
dec
punpcklbw
xchg
test
pop
pop
xchg
and
or
hlt
es
jo
cmpsl
pop
inc
push
jae
imul
push
adc
push
mov
int3
pop
pop
enter
notb
pop
adcl
mov
push
mov
mov
mov
cld
aad
pusha
in
cmc
mov
int3
les
sarl
gs
in
push
test
test
add
je
arpl
orl
inc
loopne
rorl
je
imul
cmp
xor
lahf
enter
cmp
dec
popa
or
xchg
pop
pop
enter
mov
xchg
enter
or
ret
popa
outsl
and
enter
in
hlt
test
nop
xchg
jo
inc
bound
jb
jae
mov
pop
rclb
in
imul
test
lods
test
push
adc
add
data16
add
cmp
rolb
pop
add
push
dec
cwtl
or
push
sbb
push
inc
insb
neg
aas
sub
lcall
dec
lcall
mov
adc
repz
pop
jbe
clc
add
push
adc
xchg
pop
mov
lret
jg
sub
and
xchg
imul
pop
and
loopne
lahf
sub
adc
insb
xlat
repnz
xchg
movsl
xchg
ds
out
test
xchg
std
pop
mov
jno
mov
add
jb
inc
pop
ja
add
mov
inc
xor
sub
dec
cmp
cwtl
cmp
lahf
loope
loop
movsb
test
add
repz
jne
mov
fldenv
inc
ret
or
rclb
rolb
push
neg
call
mov
inc
dec
adc
push
push
xor
div
ja
insb
popa
cli
cmp
xchg
pop
mov
push
add
pop
pop
sub
nop
lret
xsetbv
mov
add
jmp
mov
insb
inc
dec
xor
mov
jns
xor
xorl
sub
pop
or
inc
pusha
push
movb
sub
cmp
push
xchg
in
add
pop
pop
loopne
data16
fs
mov
inc
mov
arpl
adc
inc
fildll
cmpsb
pop
or
ret
xchg
adc
jmp
cmp
aaa
add
dec
aaa
clc
mov
fdivl
stc
mov
and
cmp
mov
cs
add
loope
sub
pop
add
ffree
cmp
cmp
adc
push
lret
inc
iret
cmp
clc
and
adc
mov
movsb
jp
mov
fmull
scas
ret
pop
cld
out
cwtl
cwtl
and
loopne
or
shll
arpl
add
ret
push
inc
daa
and
scas
cmpsl
jns
inc
sub
xchg
aad
clc
pusha
enter
add
push
jg
mov
pushl
lahf
push
popf
xchg
push
adc
jne
dec
sbb
jg
or
cmp
mov
add
jnp
cmp
sub
je
mov
mov
ficoms
push
pop
jne
push
rorl
mov
sti
jl
push
and
inc
addl
mov
cwtl
cs
clc
add
xor
dec
sub
into
push
in
push
lods
movsl
xchg
dec
mov
mov
cmp
add
push
lea
mov
mov
pop
cmp
fsts
fists
imul
add
lea
push
or
mov
adc
mov
out
clc
imull
shr
stos
data16
sbb
push
popf
jmp
jmp
je
pop
and
les
jne
ds
lock
sbb
xchg
pop
enter
rcll
xchg
mov
ja
adc
push
adc
enter
or
stos
dec
lea
outsl
adc
aam
push
push
mov
sub
jge
out
popa
pop
enter
jmp
inc
pusha
movsb
pop
pop
ret
lret
push
push
sbb
movsl
dec
push
pop
imul
aam
mov
filds
aad
bound
pop
xchg
xor
add
das
cmp
fs
subb
push
sti
popa
nop
fwait
sbb
or
xchg
add
and
shlb
inc
push
mov
or
inc
das
xchg
jecxz
inc
mov
mov
mov
add
xchg
mov
cmp
jmp
nop
daa
fcoms
inc
clc
nop
sti
pop
jbe
je
xchg
testb
dec
movsb
nop
xlat
and
xchg
dec
shrb
movb
cmp
pop
sarl
fmull
inc
push
lea
add
mov
pop
or
push
xor
or
in
subl
ficompl
call
pop
fnstsw
popf
inc
repz
xor
das
xchg
pop
cmpsb
sub
popf
loope
into
inc
ljmp
jge
or
in
mov
or
je
ja
nop
loop
cmp
shll
pusha
shl
nop
lahf
cmp
inc
jmp
das
repnz
inc
dec
mov
mov
call
sub
fsubrl
xor
or
hlt
andl
lods
jmp
adc
mov
mov
daa
mov
fcompl
pop
cltd
sbb
rorb
push
cmpb
xchg
or
dec
and
fstps
mov
and
push
cwtl
xor
jge
lock
shll
pop
mov
mov
sub
cmp
imul
gs
incl
add
cmpsb
push
in
xchg
cmp
push
jg
jmp
decb
nop
ret
add
es
je
push
lret
and
mov
mov
cmp
jne
lea
mov
pop
pushf
push
add
and
lds
push
or
or
mov
iret
or
nop
loop
and
dec
push
xor
mov
call
push
jo
movsl
fsubrs
gs
cld
sub
mov
add
jbe
xchg
add
addr16
dec
stc
dec
dec
and
bswap
into
push
adc
enter
sbb
mov
cmpsl
push
pop
enter
insb
stos
sbbl
inc
jmp
jle
test
cmp
dec
ret
setno
cmpw
jbe
movsl
mov
imul
inc
add
push
leave
and
inc
mov
dec
lods
adc
enter
js
inc
int3
ja
jbe
unpckhps
jne
and
and
lds
pop
jp
jle
or
mov
sti
add
jle
push
or
pop
jmp
mov
mov
jecxz
std
jle
or
sub
pop
inc
push
or
stos
test
push
mov
ret
and
jmp
int
inc
je
jmp
push
inc
ja
je
push
inc
out
adc
add
push
mov
mov
mov
cmp
ret
mov
jne
int3
adc
cwtl
and
cmp
xorl
xor
movsl
and
pop
cli
rol
xchg
ret
xor
pop
pop
dec
ret
rcl
push
mov
lcall
int
outsl
daa
movsl
or
and
sti
lret
push
or
adc
das
into
jo
or
call
add
aam
mov
sbb
push
mov
shr
and
xor
clc
sarb
mov
movsl
xchg
jno
imul
cltd
sar
dec
insb
dec
push
cld
lea
sbb
mov
notl
enter
ret
inc
jmp
push
mov
push
shll
test
pop
push
inc
push
cmp
loope
xchg
push
sub
xchg
push
in
and
mov
xor
stos
or
xchg
negb
jge
mov
idivl
in
or
movsl
add
mov
xor
mov
stos
repz
aas
mov
sub
in
inc
leave
jg
addb
add
pop
pop
jg
inc
aam
mov
xchg
jp
xchg
mov
mov
push
orb
and
mov
push
orl
dec
enter
repnz
js
xchg
sbbl
sbb
cwtl
or
daa
dec
jge
adc
jb
ljmp
pop
test
jge
xor
mov
sub
inc
jae
pusha
pop
call
add
dec
xor
enter
mov
jmp
ret
pusha
das
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
gs
or
lret
dec
aaa
test
dec
imul
inc
and
js
mov
cmp
xor
stos
ljmp
xor
jg
cmp
jl
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
push
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
les
xchg
lods
xor
dec
loope
dec
push
push
jns
mov
xchg
mov
add
imul
adc
mov
add
sti
xor
incl
add
mov
jmp
sub
add
or
add
repz
inc
nop
push
dec
je
cmovnp
mov
cli
test
aas
in
pusha
ss
xor
sub
sahf
shll
stos
jecxz
sahf
jnp
inc
or
jne
xchg
das
out
test
lea
adc
or
icebp
add
lret
inc
cwtl
mov
and
imul
mov
push
push
gs
in
ret
orb
lods
ja
pusha
loopne
pop
pop
inc
loop
xchg
sub
cmpsb
xchg
add
icebp
and
inc
mov
sbb
pop
lahf
pop
cltd
sub
sub
sub
add
dec
sub
shll
mov
adc
adc
xor
popf
sub
pop
mov
insb
aam
loopne
mov
test
bound
adc
ss
and
inc
push
pop
or
push
xchg
add
ret
mov
cmp
divw
inc
push
fs
adc
jle
add
add
sbb
inc
mov
jmp
sub
rclb
dec
or
clc
mov
pop
or
and
call
repz
xlat
ljmp
lock
imul
popf
mov
je
fidivl
pop
fbstp
push
call
jnp
mov
cwtl
dec
add
call
add
cwtl
sub
sahf
or
xor
stos
mov
jae
adc
jns
add
mov
dec
or
daa
cmpb
icebp
and
push
dec
js
adc
in
jmp
data16
or
adc
sahf
xchg
and
xor
cld
push
or
test
ljmp
add
rorb
pop
fisubrl
or
adc
mov
sub
add
add
rorl
test
mov
xorl
or
rcl
mov
pop
mov
sub
add
repnz
add
and
cwtl
push
in
bound
cli
mov
or
fimull
mov
push
imul
add
dec
mov
sub
aam
jo
and
pcmpeqw
dec
adcl
xor
and
xor
add
lea
sub
push
pop
call
imull
jmp
cmp
call
mov
pop
loope
inc
loop
pop
loop
dec
xchg
sub
fistps
pop
call
mov
xor
or
add
mov
xchg
movsb
add
pop
dec
lods
mov
enter
and
clc
sub
and
bnd
mov
shl
testb
nop
add
icebp
add
stos
fcmovne
dec
test
mov
push
cli
popf
inc
cmp
cmpsb
std
xchg
mov
call
cmpsb
jg
add
cwtl
xor
fsubl
in
data16
incb
getsec
addb
daa
xor
incl
jb
js
or
lock
sbb
movl
dec
nop
pop
jle
xor
incb
or
sub
lock
sub
mov
aas
mov
mov
sub
test
stc
test
sub
fistl
fstpl
push
fwait
cmpsl
add
or
xchg
clc
repz
cmp
fsubrp
inc
mov
das
mov
sub
pusha
fldl
xchg
sarl
mov
lahf
dec
sub
pop
or
jne
push
dec
or
mov
enter
cs
test
sbb
cld
xor
ds
or
or
mov
xor
rolb
les
in
cmp
mov
mov
add
jl
add
pushf
dec
adc
gs
and
jge
xchg
ret
mov
mov
mov
pop
pop
xchg
add
ja
decl
subl
fs
xor
sub
pop
mov
dec
sub
loopne
mov
dec
int
xchg
push
pop
lods
xchg
dec
int
rcl
cld
push
and
sarb
push
int3
jp
mov
mov
arpl
cwtl
xchg
cmp
jb
fsts
jmp
aam
lcall
mov
or
add
insb
mull
push
hlt
mov
xchg
bound
and
cmp
push
or
jno
mov
es
pop
sahf
dec
clc
adc
push
cmpsl
and
push
mov
inc
dec
rorb
or
sub
push
fstpl
icebp
dec
fwait
daa
push
sbb
les
insl
add
cmp
and
or
xor
adc
int
adc
add
mov
mov
and
push
push
mov
and
add
add
popf
jnp
and
testb
xor
cmpsl
das
dec
arpl
xchg
or
mov
mov
push
fnsave
nop
jns
push
push
add
pop
jno
or
mov
movsb
push
push
cwtl
aam
push
push
or
testb
pop
rcll
dec
call
rcll
lcall
or
test
inc
xor
aad
xorb
scas
movsb
popa
clc
out
and
ss
es
fdivl
or
mov
in
mov
and
fptan
sub
jae
sub
sar
adc
jne
push
adc
push
push
out
lea
imul
xorl
and
or
mulb
jle
je
xchg
cmp
popf
dec
stos
nop
pop
dec
lock
push
or
mov
xchg
les
jns
xchg
pop
inc
leave
aam
repnz
fs
sub
movsb
dec
leave
sub
push
add
mov
pushf
rcll
mov
cld
jae
insl
in
jb
dec
aam
lock
leave
popa
push
sbb
mov
or
cmpsl
xor
outsl
xlat
mov
push
outsb
testl
dec
add
cmp
add
mov
mov
mov
push
lock
jne
push
lods
sub
xchg
stos
mov
jb
xchg
push
pop
mov
je,pt
clc
dec
jo
mov
push
sub
mov
sbb
std
xor
jg
push
loop
je
or
clc
xchg
ret
and
addb
inc
scas
popa
sbb
fimull
sub
adc
fdivrs
xor
inc
push
ljmp
rcrl
mov
fdivr
push
adc
call
into
loop
out
adc
cmp
jle
jmp
lods
aad
push
inc
and
adc
jae
out
mov
pop
or
mov
sub
push
imul
cmpl
call
jne
sbb
xor
subb
nop
mov
jmp
test
push
sub
cmc
test
add
jne
aaa
inc
mov
jmp
add
cmp
mov
jmp
ficomps
je
in
mov
in
addr16
dec
hlt
push
add
sbb
test
cmp
mov
cld
dec
mov
cltd
sub
sbb
inc
mov
ja
pusha
add
fdivr
fiaddl
test
mov
push
push
and
xor
xorl
popa
cwtl
out
std
adc
call
jne
sbb
mov
sbb
pusha
pushf
jmp
sub
popf
xor
pop
testl
dec
je
shlb
and
decb
add
add
test
push
add
jp
adc
iret
and
aaa
popf
scas
jo
mov
and
mov
sar
adc
ljmp
aad
mov
mov
and
dec
inc
add
xchg
popa
test
xchg
hlt
xchg
mov
iret
push
and
or
data16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
lea
outsb
mov
jbe
mov
fldenv
or
mov
dec
and
mov
testl
addb
aam
mov
pop
sbb
or
int
sub
push
sub
dec
pop
mov
hlt
pop
jae
popf
popf
jmp
pop
jae
or
mov
leave
cmp
add
aam
sub
push
je
adc
xchg
arpl
mov
stos
lods
test
xchg
shl
jmp
inc
out
inc
add
in
lods
or
test
jge
add
rclb
enter
ja
test
push
mov
or
push
daa
pop
jge
insl
cld
mov
ja
xchg
jle
cmp
push
mov
rcll
mov
je
imul
push
lret
push
leave
mov
js
clc
cs
into
jmp
js
mov
push
lea
or
enter
arpl
test
enter
call
pop
jmp
inc
sar
jg
cmp
jne
orl
clc
adc
push
adc
imul
sbb
test
jo
ljmp
mov
or
pop
xor
sub
push
orb
stc
jns
cmpl
dec
lret
xor
adc
add
push
jb
jmp
sar
sub
js
sub
xchg
and
aad
in
add
lds
dec
test
xchg
pop
xchg
ret
insb
or
ret
push
imul
jb
sub
dec
popl
leave
or
xor
and
sub
pop
mov
sahf
scas
push
cmp
in
std
or
divb
push
lock
and
dec
clc
nop
sub
dec
mov
loopne
cltd
mov
cli
dec
pop
and
inc
rorl
js
xchg
mov
leave
xor
in
mov
scas
xchg
mov
push
mov
xchg
shll
lcall
pop
int3
lret
push
pop
push
inc
jnp
insb
xchg
jnp
nop
pop
mov
cmp
xchg
jmp
jo
loopne
cld
aaa
cld
inc
test
xor
jmp
sbb
sbb
ret
insb
add
add
add
or
adc
and
or
nop
outsl
xor
repnz
test
nop
decb
jnp
out
mov
or
xchg
and
inc
fistpll
dec
xor
cld
adc
movups
mov
pop
jae
xchg
mov
pusha
sub
xchg
mov
jge
pop
scas
adc
dec
popa
xchg
push
cmpsb
dec
in
mov
test
cld
mov
and
xchg
or
popf
jns
push
mov
call
mov
les
or
dec
dec
enter
lahf
dec
mov
or
fs
icebp
mov
mov
mov
and
sbbb
mov
pop
xchg
fs
xor
xor
mov
and
inc
nop
and
nop
sub
out
adc
mov
xchg
dec
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
shlb
cld
push
rolb
ljmp
adc
or
cmp
push
push
das
outsl
lods
fs
xor
cmp
pop
fs
loope
lock
call
icebp
adc
mov
dec
subl
mov
insl
inc
push
idivb
or
ret
cmp
sbb
sbb
adc
pop
dec
pop
xchg
or
mov
mov
cmpb
mov
and
push
cwtl
or
inc
jl
pop
pop
adc
xor
je
and
aam
push
mov
sbb
sub
or
cmpsb
nop
enter
adc
mov
cmpsl
pushf
and
test
std
pop
or
adc
aad
adc
add
add
xchg
xchg
pop
push
push
call
push
inc
and
enter
jns
int3
or
mov
sbb
jne
mov
mov
or
push
or
adc
pop
xor
push
pusha
and
cli
clc
adc
cmp
ljmp
fwait
inc
das
mov
outsb
loopne
divl
out
int3
test
add
or
and
add
push
inc
sub
and
add
cmpb
or
inc
mov
push
add
adc
add
mov
cmp
or
leave
divps
dec
sarl
jg
mov
push
leave
push
sub
adc
inc
faddp
sub
mov
lock
add
ret
cmpsb
pop
dec
outsb
hlt
pop
movsl
push
adc
andb
push
xor
sub
aad
addl
dec
ret
xchg
cmp
sub
das
jae
sbb
loopne
adc
cmpsb
adc
sbb
mov
cmc
mov
mov
rcll
clc
inc
cmp
lret
push
mov
sub
adc
je
add
inc
jb
push
xor
mov
enter
mov
sbb
mov
inc
sbb
and
hlt
xor
push
or
pop
pop
out
mov
sub
dec
enter
mov
inc
out
push
je
sbb
sub
pop
mov
jb
inc
mov
out
js
xchg
movsb
push
stos
xor
jae
pop
lret
jne
cld
cmp
loopne
or
jmp
add
jg
addr16
cwtl
movsb
clc
pop
and
pop
icebp
mov
ret
xchg
shl
dec
jo
push
push
add
xor
adc
call
push
mov
sbb
cmp
mov
add
adc
rorl
sbb
mov
mov
iret
push
rep
pusha
or
jne
pop
jne
les
mov
pop
loope
push
dec
sub
jbe
or
adc
jne
mov
mov
and
sbb
setne
mov
or
pop
xor
xchg
adc
cmp
lea
push
and
add
mov
cmpl
cwtl
xchg
rorl
pop
inc
sbb
jmp
lock
adc
xchg
int
inc
sbb
dec
lea
pop
mov
pop
in
adc
stc
and
inc
adc
sub
mov
sti
pop
arpl
loop
popa
mov
daa
orb
lock
das
and
stos
or
sbb
fwait
mov
sub
sub
ljmp
loopne
dec
jmp
pop
mov
mov
fwait
sub
mov
dec
in
outsb
sbb
in
test
xchg
aaa
inc
test
fsubl
add
inc
pop
mov
bound
shl
mov
sub
adc
xlat
or
sub
push
movsl
insl
nop
nop
enter
mov
js
shrb
mov
or
inc
sub
and
hlt
or
enter
push
adc
xor
cmp
sub
rol
push
and
jmp
and
bound
mov
call
out
push
sbb
push
hlt
mov
inc
sub
enter
stc
or
push
dec
out
leave
loop
stos
nop
cltd
sahf
mov
stc
leave
enter
insl
das
fs
jne
or
insl
add
cmp
pushf
and
sub
or
jo
or
pop
out
les
push
lret
test
adc
and
into
test
sbb
push
mov
push
and
pop
or
aad
repnz
mov
pop
push
lods
imul
icebp
or
xchg
jns
xor
jl
push
xor
mov
adc
pop
cltd
xchg
jns
jo
imul
sbb
push
jo
arpl
pop
mov
lods
call
push
lock
adc
xchg
adc
int3
aam
enter
adc
xor
and
dec
jo
test
les
shll
cwtl
fsubl
nop
dec
hlt
adc
and
dec
js
nop
xorl
repnz
and
inc
pop
or
push
adc
and
dec
mov
inc
xor
xor
xor
dec
cmp
sbb
xor
or
imul
lcall
sbb
adc
push
call
sbb
ret
xchg
sbb
xchg
inc
enter
fucom
inc
mov
rclb
dec
and
inc
dec
and
loope
sbb
mov
or
mov
mov
mov
dec
or
mov
rorl
inc
test
and
xchg
mov
pushf
sub
xor
xchg
xchg
sub
cmpsb
pusha
inc
mov
cmpsb
sbb
cmpsb
cmp
test
cld
cltd
and
adc
or
adc
je
dec
xor
in
fs
dec
and
fs
fs
mov
pusha
dec
clc
in
dec
rcrb
inc
pop
and
scas
jae
sbb
hlt
adc
mov
pop
jnp
mov
dec
bound
sub
add
adc
mov
mov
push
adc
xor
add
sbb
sub
push
mov
and
pop
adc
sub
mov
insb
aas
and
adc
out
or
movsb
cmp
mov
or
cwtl
fs
sub
test
and
rolb
xor
lcall
mov
imul
subl
sbb
xchg
mov
pop
pop
loope
fidivl
inc
mov
xor
lods
push
icebp
or
jno
cwtl
lret
jb
stos
jp
adc
jae
add
add
in
outsl
int3
adc
mov
push
inc
push
inc
push
pop
cld
test
icebp
test
jbe
mov
add
sbb
clc
loopne
dec
xor
inc
adc
out
cld
inc
mov
jns
add
push
and
pop
xchg
mov
xchg
mov
ret
into
addl
mov
jg
loopne
dec
outsb
push
js
add
sbb
dec
daa
movsl
push
sub
scas
or
dec
ljmp
push
cli
sub
or
testl
scas
push
cs
mov
stos
test
push
aas
orb
scas
push
sub
xchg
clc
xchg
out
out
or
jne
sarl
je
daa
and
sub
and
sbb
popf
mov
in
pushf
xchg
stc
aam
inc
sbb
lods
mov
jge
imul
push
outsb
or
dec
push
adc
shl
movsl
jge
sub
mov
xchg
gs
mov
jbe
xlat
xlat
xor
clc
aam
test
enter
scas
pop
jo
pop
add
cs
lods
insl
imul
mov
pop
or
xchg
jne
sub
xchg
loopne
jmp
pop
jle
int3
roll
dec
mov
sbb
lret
scas
xor
dec
add
or
sbbl
jmp
xchg
dec
rorl
aas
notb
or
pop
cmc
inc
add
popa
mov
pop
cld
sub
cli
xor
shr
cwtl
mov
test
into
lea
outsb
in
inc
pusha
jae
rol
loop
xchg
adc
jmp
push
andb
cmp
jne
xchg
insb
or
shl
push
dec
cmp
push
sbb
or
loope
loopne
pop
and
fsubrs
mov
sbb
xchg
sbb
push
adc
enter
or
inc
push
mov
inc
push
jb
sbb
sbb
and
and
xchg
and
mov
sub
or
mov
push
jne
mov
mov
push
add
mov
fs
mov
das
rorl
sbb
imul
mov
and
and
mull
loopne
push
xor
sbb
sub
fsubl
mov
lea
mov
movl
mov
mov
xchg
cmp
sub
sub
push
dec
sub
cltd
and
fimull
sub
jb
and
sub
dec
sbb
pop
inc
jns
jb
push
xchg
jp
scas
jbe
adc
int
adcb
pop
je
sub
mov
cmp
fcomps
seta
fisubl
lret
cmp
xchg
rorb
fwait
push
lret
xchg
cmc
lret
jmp
adc
lret
xor
adc
jg
or
push
push
inc
lock
clc
adc
add
mov
inc
jp
mov
pushf
xchg
cwtl
push
int
shlb
dec
test
or
out
add
sub
sub
outsb
and
xlat
inc
in
mov
inc
add
sbbl
ret
pop
dec
and
add
dec
sbb
add
sti
push
cs
dec
dec
push
pop
mov
pop
adc
push
pop
and
dec
popa
xchg
mov
mov
and
push
mov
mov
cmp
js
or
popf
jno
arpl
test
pop
adc
cmpsb
mov
pop
gs
and
outsl
sub
xchg
cmp
arpl
std
pop
jo
adc
or
push
dec
jo
nop
push
in
cmp
mov
cltd
js
std
lahf
xchg
es
dec
aaa
xchg
xor
sbb
pop
and
movsb
pushf
fstl
int3
xchg
scas
sub
loopne
dec
outsl
xchg
mov
and
out
js
out
xchg
out
sbb
sub
mov
cmp
insb
dec
xchg
in
pop
icebp
pushf
out
jg
leave
inc
aas
xor
push
xor
and
xchg
pop
jo
adc
icebp
sbb
mov
adc
and
loop
les
out
adc
and
and
adc
lock
jb
cmp
cs
mov
cs
mov
enter
mov
sbb
mov
and
in
jb
cmp
pop
mov
and
inc
enter
jb
sbb
int3
mov
mov
das
ljmp
das
or
xchg
int3
sbb
pop
ret
push
xchg
xchg
scas
fsubl
jne
mov
push
inc
cltd
test
and
cmp
shl
fistl
test
cmpsb
pop
push
mov
mov
inc
sbb
sub
xor
cli
xor
fbld
call
lock
mov
and
cmp
daa
mov
dec
xchg
sbb
repz
loop
and
add
cmp
push
in
imul
repnz
adc
pop
int3
jne
or
inc
rclb
mov
mov
test
or
mov
test
inc
push
outsb
imul
jae
xchg
jo
pop
jae
fildll
test
mov
xchg
adc
shll
pop
cs
push
aam
in
ret
out
mov
cltd
push
and
cld
sub
out
add
inc
xor
jge
jge
cmp
clc
mov
add
jne
out
loopne
inc
lcall
lcall
dec
cmpb
je
sbb
cld
cmp
aas
add
or
mov
dec
push
clc
jbe
push
dec
call
jge
mov
ds
xlat
insb
repnz
scas
pushf
cwtl
mov
call
jge
ret
int
mov
icebp
gs
lea
or
fs
lret
sbb
xchg
inc
xchg
mov
fwait
inc
lahf
pop
mov
call
adc
adc
pusha
cs
jge
xor
dec
rolb
shlb
sbb
push
ds
movsl
sahf
or
stos
jle
jbe
mov
add
jmp
sub
mov
dec
out
pop
dec
jp
pop
push
sbb
sbb
int3
ljmp
popa
jno
push
pusha
aas
push
push
sbb
ja
push
inc
xor
scas
dec
nop
mov
lcall
orb
inc
psrld
adc
jae
sub
dec
sub
rorb
lods
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
add
jbe
jb
mov
push
sub
mov
push
or
xchg
jmp
rorb
inc
mov
lds
cmp
sbb
push
inc
inc
inc
movb
mov
mov
subb
pop
or
mov
sbb
pop
sub
mov
sbb
cmp
mov
psubusw
aas
lret
xchg
xchg
adc
dec
inc
xor
push
add
addr16
adc
adc
cmp
adc
sub
cmpsl
dec
shl
bound
pop
sub
cmp
add
repz
nop
mov
sub
shlb
pop
mov
movsb
fcmovu
fcmovnu
loopne
adc
fs
dec
mov
dec
sarl
lcall
out
fistpll
pusha
and
inc
cmp
xchg
inc
lahf
xor
adc
out
inc
fwait
lock
sub
sub
dec
mov
xor
push
clc
xor
add
in
or
insl
dec
sub
cmp
cltd
dec
and
xorl
cmp
dec
adc
cmp
inc
or
inc
adcb
jb
mov
test
xchg
dec
loope
arpl
out
clc
data16
mov
leave
adc
or
xchg
int3
and
and
add
mov
inc
sub
adc
jl
xor
mov
pop
lahf
insl
mov
adc
inc
add
and
pop
push
inc
or
test
test
test
test
and
addl
and
jo
and
sbb
inc
sub
arpl
clc
jecxz
jl
mov
inc
jp
push
cmp
fs
addr16
xchg
xchg
xchg
sub
iret
jmp
dec
push
es
in
inc
shll
pop
mov
pop
push
adc
call
cmp
imul
cmpsb
push
pop
mov
fcoms
stos
inc
push
clc
mov
stos
orb
push
or
jae
adc
popf
jnp
mov
jl
jl
es
jmp
outsb
in
jns
lock
push
arpl
lret
mulb
and
sub
dec
incb
dec
xchg
loopne
dec
or
pop
jge
imul
sub
sbb
add
insb
jmp
sahf
call
and
mov
cmp
xchg
dec
add
popa
xor
dec
popa
std
pop
test
popa
push
mov
sub
sub
sub
test
lea
add
loope
mov
sbbb
ret
data16
or
mov
or
cmpsl
sti
insb
int3
mov
outsb
sub
jns
filds
adc
or
dec
add
jl
push
xchg
repz
lock
cltd
dec
mov
adc
pop
pop
sub
cmp
ret
nop
dec
or
push
adc
jg
jne
loopne
push
faddl
bound
push
test
add
loopne
mov
xor
and
push
and
sbb
push
fisubl
adc
add
jno
cmp
in
jae
outsb
popa
cmp
xchg
mov
cmp
lods
inc
pop
lcall
jb
lds
sbb
clc
ss
in
push
or
pop
fidivs
test
dec
or
adc
xchg
pop
pushf
shlb
mov
inc
test
loop
fwait
mov
gs
incl
popf
icebp
aas
andb
jmp
stc
or
dec
push
lahf
iret
mov
jmp
mov
cltd
out
inc
jmp
mov
xchg
loope
sbb
data16
sbb
repnz
xchg
leave
cmpsb
sahf
repnz
cmp
ds
bound
mov
jp
mov
aaa
jp
pop
add
add
out
lret
adc
mov
in
xor
inc
popa
and
add
out
jne
frstor
push
push
add
sub
jmp
inc
les
data16
and
jns
and
xchg
and
shlb
push
and
xor
adc
cltd
adc
dec
and
sbb
ljmp
fadd
and
mov
cld
inc
std
or
nop
sbb
add
jb
dec
cmp
pop
test
inc
scas
mov
mov
xchg
xchg
scas
mov
pop
inc
fsubs
test
jns
dec
or
orl
es
divb
fs
ss
lock
outsl
mov
mov
jns
pop
or
adc
loopne
jp
push
push
xchg
pushf
movsl
push
push
xor
sbb
je
or
jne
pusha
adc
push
add
aaa
push
mov
or
and
and
or
sub
and
sub
fisttps
cmpl
push
xchg
cmp
xchg
adc
jo
lods
xchg
mov
enter
das
or
push
mov
ret
or
sbb
int3
call
jnp
or
pusha
jb
sub
orb
cmpsl
sub
lret
lods
call
nop
add
sbb
lret
add
enter
and
sbb
sub
imul
mov
inc
repz
andb
ljmp
or
mov
mov
jbe
mov
add
les
mov
repnz
and
inc
mov
adc
sbb
orl
sbb
pop
sub
jbe
dec
push
ja
xor
cmpsb
dec
or
popa
outsb
jge
jbe
cmp
jne
push
nop
add
or
and
adc
jmp
mov
loop
pop
scas
add
clc
lods
or
jne
xor
es
cs
mov
sub
lret
aam
sub
cli
or
ja
mov
or
jmp
pop
sub
ja
mov
cmp
fadds
mov
cmp
xlat
out
xchg
sub
rcl
jbe
in
push
or
movb
pusha
ja
mov
orb
sbb
or
ret
mov
fwait
or
movsb
jne
and
push
cmp
adc
test
and
pop
test
push
les
fs
or
cmp
ja
sub
loope
add
pushf
xor
sub
mov
shr
sbb
loop
fisttps
sahf
xor
inc
nop
jge
cwtl
lcall
and
sub
insl
or
or
adc
sub
sub
or
mov
jae
sub
popf
sbb
jmp
xor
int3
jae
pop
inc
mov
adc
mov
xor
jg
and
mov
mov
and
dec
jbe
imul
cmp
sbb
or
and
cmp
adc
jmp
orl
test
dec
faddl
cwtl
imul
and
sub
push
jb
mov
in
cmpsb
call
lock
lretw
clc
enter
lcall
dec
scas
xor
or
ja
fldl
je
mov
inc
pushf
push
inc
adc
mov
ret
adc
insl
fistpl
fisttps
dec
mov
scas
insb
sub
inc
sub
jne
mov
add
inc
cld
jne
jmp
jno
xor
xlat
cld
sub
dec
xor
pop
sub
xor
insl
fs
add
enter
inc
sahf
fldl
lock
sbbl
cs
xor
pop
movb
sbb
xor
hlt
loop
fwait
or
lock
xor
popa
test
jne
mov
adc
xor
or
xor
push
and
sub
pusha
mov
xor
push
dec
adc
push
mov
pop
adc
mov
xor
sub
dec
xlat
sbb
adcb
dec
movsb
notb
sub
jecxz
sbb
xchg
adc
jl
fs
add
or
xor
xor
xchg
jmp
cmp
je
cmpsb
xor
xchg
adc
sbb
xchg
into
or
rcll
je
jl
jb
sbb
mov
jbe
nop
inc
mov
adc
sub
xor
mov
sub
aad
mov
hlt
sbb
sub
mov
mov
dec
and
push
popf
inc
jmp
inc
jb
xchg
xor
es
and
pop
sub
leave
cmp
or
add
xchg
xchg
sahf
cmp
gs
inc
inc
out
jo
cmp
lds
add
add
mov
or
or
int
cmpl
xor
fcomip
loop
and
or
lds
pop
inc
dec
cmp
sbb
mov
cmpxchg
fisttpl
test
or
mov
dec
roll
call
cmpsl
cli
loope
xchg
cmpsb
cmpsl
in
stc
adc
dec
xor
xor
ficomps
or
std
fbld
adc
adc
xor
mov
push
fwait
and
test
mov
xchg
jmp
mov
cmp
cmp
cmp
notb
and
add
adc
sub
sub
rolb
js
call
xlat
xchg
hlt
or
pop
dec
leave
adc
or
xorb
mov
ret
adc
mov
pop
sub
push
pushf
cmp
and
sahf
add
es
mov
sub
inc
fistl
mov
jmp
out
jae
cmp
push
fisttps
and
inc
call
adcl
xchg
dec
or
shrl
std
pop
add
pop
dec
test
sbb
sbb
dec
adc
int3
jb
sbbl
int
into
cmp
pop
orb
sbb
cli
push
cld
out
pop
push
dec
inc
lock
imul
add
test
int
add
cmp
add
js
xchg
push
mov
push
cmp
inc
and
pop
inc
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
repz
int
cs
inc
movsl
imul
insb
cmp
pop
pop
sahf
jge
mov
pop
push
xchg
test
push
test
add
mov
inc
add
call
inc
add
xchg
mov
jle
je
xchg
xor
inc
dec
add
nop
push
push
sti
cli
mov
add
mov
jbe
aam
mov
cmp
xlat
cmp
and
inc
adc
and
je
mov
sub
jb
lds
dec
push
inc
jnp
mov
std
xchg
fcmovb
sbb
pop
mov
nop
sub
adc
xor
cmp
push
xor
sahf
mov
sti
inc
adc
sar
adc
mov
out
fldcw
mov
adc
push
punpcklbw
sarb
aam
inc
pop
push
repnz
inc
stos
adc
flds
repz
pusha
push
lea
push
sarb
shlb
popa
daa
cmp
nop
add
je
or
out
add
jo
adc
cmp
adc
and
jne
mov
jmp
jo
push
repnz
adc
or
adc
adc
cmp
cmp
clc
ja
pop
adc
jne
or
out
and
pop
sahf
mov
fbld
inc
clc
nop
sub
jmp
lods
movsb
mov
and
inc
mov
push
cld
inc
sbb
fdivs
dec
call
stos
cmp
and
adc
push
or
out
push
test
das
mov
or
dec
mov
push
shl
cmp
insb
icebp
mov
and
fsubs
xchg
addl
or
subl
adc
xchg
les
mov
and
nop
cs
cmp
jmp
shlb
sub
pop
outsl
lret
stos
sub
inc
add
sub
cs
xor
mov
inc
fisubrl
fiadds
pop
inc
and
nop
fmulp
loop
inc
out
jmp
dec
nop
jno
lcall
rorb
popa
stos
or
mov
mov
stc
aas
sub
pop
jmp
loope
mov
rclb
test
test
aas
fidivs
and
pusha
sti
jo
enter
or
insl
fs
enter
jecxz
and
out
enter
daa
mov
pop
les
adc
xchg
in
mov
adc
mov
and
pop
push
adc
jo
adc
js
xchg
xor
xor
and
add
pusha
inc
insb
add
xlat
mov
lods
sbb
aam
xor
and
fisttps
lds
add
unpckhps
xorb
and
mov
xor
inc
or
fstpt
jo
adc
imul
and
add
sarl
lock
adc
scas
inc
cmc
repnz
call
or
xchg
adc
test
sbb
adc
inc
xor
add
add
fcomps
sub
test
sbb
pop
jmp
xor
mov
add
aaa
cmpb
xchg
jno
std
js
add
cmpsb
fiadds
inc
add
mov
inc
out
pop
bound
test
xchg
test
imul
adc
mov
mov
out
push
pop
pop
es
out
ret
xchg
xor
call
les
das
push
test
subl
test
bound
add
and
roll
jae
sti
shl
mov
add
out
loope
pop
test
add
pop
aaa
std
js
out
testl
mov
cmpsb
jae
in
adc
inc
mov
movsb
out
cmp
outsb
test
add
js
push
je
add
flds
outsl
addr16
test
add
dec
sub
xchg
orb
push
add
movsb
fstl
jno
xchg
sub
popa
or
fwait
mov
ret
popf
jl
mov
or
mov
ret
iret
fimuls
shlb
test
mov
inc
or
mov
jp
jle
fwait
sub
ret
sub
cmp
cli
test
out
aam
std
popa
inc
les
hlt
sarb
aam
fnstcw
mov
cltd
fistl
jl
pop
jbe
xor
clc
adc
mov
xor
push
lods
les
not
es
je
fstpt
adc
sub
mov
mov
mov
decl
sub
or
inc
lds
nop
xlat
add
pxor
cwtl
push
adc
mov
test
mov
lods
test
add
int3
or
scas
test
bound
inc
fistpll
sub
incl
sub
dec
jle
test
test
imul
test
out
and
adc
inc
add
mov
test
jle
testl
loope
jnp
dec
out
add
outsl
test
xchg
roll
daa
and
xchg
cmp
cli
inc
outsb
push
or
push
test
xchg
les
shr
and
mov
movl
addr16
adc
mov
fdivrl
push
sub
adc
xchg
divb
or
or
je
negb
inc
adc
adc
sti
dec
cwtl
icebp
rol
sbb
fbstp
add
jl
iret
push
jbe
jmp
cli
mov
inc
mov
cmp
ja
mov
mov
fmuls
inc
lock
stos
xchg
repz
adc
xchg
in
loope
add
xor
lds
mov
movb
cmpl
jb
cmp
push
pop
xchg
push
int
inc
pop
add
fwait
pop
mov
sub
movsl
jo
mov
icebp
jnp
push
adc
inc
xchg
test
push
pop
pop
imul
cli
rorl
xor
push
fdivrl
mov
jl
xchg
stc
pop
adc
adcl
clc
inc
leave
inc
and
mov
pop
xor
mov
inc
bt
outsb
xchg
out
cli
inc
add
bnd
ljmp
dec
and
mov
movsl
icebp
repz
pop
in
inc
aad
in
jnp
jge
test
jl
inc
mov
dec
xor
cmp
js
jae
pop
jl
mov
xchg
call
testb
cmp
jl
cmp
mov
or
fdivrs
add
pop
xor
ret
mov
jo
add
xlat
mov
inc
incl
adc
mov
repnz
pop
add
sbb
pop
fnstenv
jl
shr
sub
mov
add
add
inc
inc
inc
add
inc
dec
dec
dec
dec
add
push
push
push
push
push
push
mov
pop
inc
pop
jo
loopne
add
mov
sbb
push
fwait
jecxz
fs
cmp
jae
mov
movsb
add
testl
fisttpl
jl
xchg
sbb
adc
xor
pop
cmp
or
and
or
dec
insb
ret
sbb
call
adc
movsb
ret
sahf
mov
push
xchg
lock
jl
mov
nop
jmp
fiadds
mov
mov
scas
int
ds
aam
push
mov
ret
orl
inc
nop
lret
xchg
xchg
push
push
pop
hlt
jns
pop
xchg
mov
xchg
mov
jo
shr
jb
stc
dec
test
lods
shrb
dec
call
jne
inc
inc
xchg
sbb
test
dec
and
fistps
xor
jl
jecxz
sbbl
test
jae
movsl
jbe
outsw
out
insl
jnp
dec
loop,pn
test
lds
pop
mov
inc
rol
adc
push
push
mov
daa
pop
adc
add
call
mov
push
and
je
xor
or
call
int3
push
adc
mov
push
dec
add
jae
pop
test
dec
xor
sub
xor
xor
pop
pop
dec
pop
lock
shlb
shrb
mov
bswap
arpl
or
rolb
repnz
or
or
pop
loope
xor
lods
xchg
dec
stos
ljmp
push
inc
or
pop
push
push
inc
xchg
xor
popa
push
ror
mull
xchg
mov
cmp
jae
inc
leave
push
stc
int3
or
loope
push
xorl
inc
jo
icebp
xor
jge
rcrl
cmp
mov
fstl
fists
or
adc
rep
mov
sbb
mov
xor
mov
leave
jl
sub
sub
or
les
movsl
adc
mov
add
and
push
mov
sub
jge
push
cmp
fiaddl
or
add
daa
sti
pop
jg
push
adc
cltd
sbb
adc
jbe
mov
inc
out
mov
leave
and
xrelease
jb
adc
jmp
lret
push
lea
clc
nop
rcll
mov
lret
mov
and
add
loopne
loopne
add
pop
jb
ja
push
inc
xchg
movl
cmp
repz
cld
pop
and
ja
ja
push
and
lret
dec
mov
xor
sbb
cmp
stos
repz
nop
cmp
jb
out
repz
ds
je
and
push
dec
dec
dec
adc
mov
xchg
sbb
and
mov
sub
or
push
push
fstl
loopne
jg,pt
dec
add
adc
or
out
dec
mov
scas
ret
jb
add
nop
jg
or
je
or
and
lea
jmp
and
movb
push
dec
sbb
cmpl
in
in
dec
nop
loop
aas
xor
mov
inc
int
and
iret
add
and
xor
push
hlt
or
add
push
orb
add
mov
xor
nop
je
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
dec
data16
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
idiv
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
xchg
mov
add
std
sbb
xchg
xchg
mov
imul
inc
jae
inc
sbb
loop
dec
decb
adc
xlat
rorb
pop
adc
jge
testb
xor
pop
xlat
xor
add
jmp
jmp
or
insb
lea
clc
shl
xor
int3
lret
cli
pop
je
jle
inc
in
mov
dec
ds
inc
fisttps
sub
or
mov
or
pop
nop
inc
ljmp
iret
loop
pop
adc
jmp
sti
out
adc
xlat
xchg
nop
call
jmp
ljmp
or
loopne
stc
stc
cli
add
adc
inc
stos
les
jb
or
xchg
bnd
call
mov
mov
cltd
loop
adc
sbb
push
lcall
and
adc
loop
adc
and
push
sahf
mov
adc
sub
push
mov
insb
and
and
push
lods
dec
jmp
xor
inc
stos
les
jb
or
cmpsb
mov
inc
mov
test
mov
lahf
mov
stos
cs
mov
mov
pop
lods
rolb
fildl
outsl
shlb
incb
mov
inc
imul
or
cmp
rorb
popa
and
and
cmpb
mov
ret
lods
xor
popa
jne
fisubrl
mov
or
in
mov
inc
mov
mov
mov
dec
mov
push
jle
sub
cmp
test
stos
sbb
aad
add
sbb
and
sbb
adc
aad
and
daa
push
pop
pop
adc
mov
into
and
popf
stos
rorl
add
inc
ret
adc
jle
mov
cmp
mov
push
mov
out
nop
inc
xor
push
leave
mov
jbe
movsb
sbb
xor
pushf
mov
iret
push
sarb
push
iret
mov
and
dec
adc
push
mov
scas
mov
adc
bound
rorl
cltd
dec
lods
sub
mov
aad
or
adc
fstpt
and
cli
loop
adc
sub
push
fildl
xor
stos
fldl
shlb
push
jbe
test
je
or
push
loopne
adc
mov
rcrb
xorb
adcl
in
and
jbe
test
inc
mov
iret
jbe
test
cmp
jbe
test
and
mov
in
sub
xorb
test
and
pop
stos
out
jmp
or
int3
jmp
inc
push
cmp
and
sub
and
pop
push
leave
hlt
in
in
push
test
aam
xor
insb
lcall
adc
stos
out
stos
sbb
ret
lcall
popf
stos
icebp
mov
push
and
inc
or
mov
inc
mov
aad
sub
nop
add
aad
pop
mov
stc
push
mov
shlb
cmp
stos
sti
mov
inc
popf
aam
sbb
push
std
mov
popl
mov
inc
mov
daa
lret
mov
mov
push
sub
stc
add
int
or
in
dec
mov
add
mov
rcrl
jbe
nop
dec
xchg
pop
mov
stc
xor
das
add
mov
icebp
int3
sbb
adc
push
in
push
jmp
addb
or
jae
or
ret
inc
test
mov
out
fdivrs
loopne
dec
ret
push
xchg
jp
add
test
jbe
or
mov
aas
adc
loopne
xlat
ror
adc
jbe
dec
jne
jb
pop
ljmp
mov
in
mov
stc
dec
push
pop
jmp
mov
push
adc
push
adc
fst
or
rorb
stos
je
daa
mov
int
push
sti
leave
jae
jp
sbb
add
xor
lret
notl
mov
mov
mov
xlat
xchg
jae
xor
push
xor
inc
movsb
jne
mov
aam
add
aad
inc
fs
mov
frstor
bound
or
and
out
sub
mov
hlt
push
aam
inc
and
mov
dec
inc
mov
mov
adc
or
adc
out
std
fidivrl
adc
dec
mov
push
add
out
adc
push
push
push
push
xchg
xor
mov
ret
loopne
rol
sub
ficoml
or
adc
and
test
movb
cmpl
jne
scas
lahf
adc
push
movsl
test
pushf
inc
xor
pop
inc
xor
and
lret
pmullw
mov
add
sbb
lock
hlt
sub
mov
rorb
dec
sub
jb
jecxz
or
and
jae
cmpsb
push
push
mov
inc
sbb
iret
mov
jnp
or
xchg
pop
dec
lea
mov
clc
pusha
aad
fs
xor
cmp
pusha
jmp
jle
iret
xor
xor
pop
and
call
add
andb
sub
outsl
test
sub
push
mov
lock
or
int
daa
sub
and
imul
cmp
stc
push
adc
mov
sbbb
xorps
push
and
or
insl
pop
pop
cmp
jbe
jae
pop
cmp
sets
inc
mov
add
and
imul
pushl
lret
cmpsb
pop
sub
push
jle
jbe
into
push
adc
mov
sub
mov
sub
adc
sub
cmp
or
test
adc
enter
cli
push
push
loope
jmp
mov
jmp
mov
mov
sub
ret
movsb
test
adc
or
ret
add
mov
les
push
xor
cmp
jl
incl
xlat
pop
xor
inc
cwtl
fsts
test
push
fisttpl
sbb
and
fiaddl
add
hlt
lea
xor
decb
pop
dec
adc
xor
test
mov
xchg
or
push
sbb
mov
push
xchg
stc
lods
mov
movsb
shll
and
xchg
mov
mov
and
ljmp
movsb
push
sbb
call
test
jmp
fbstp
stos
aad
sbb
and
mov
adcb
mov
dec
and
and
or
test
inc
call
or
adc
rclb
jnp
adc
shl
mov
sarb
or
adc
xor
loop
or
js
or
push
xchg
scas
push
ljmp
loopne
lahf
cltd
repnz
js
mov
outsb
mov
fs
mov
ret
push
inc
jns
fists
adc
cmpsl
and
lcall
movsl
out
loopne
xchg
or
test
jo
loopne
mov
adc
push
mov
pop
test
mov
add
sub
adc
or
jmp
mov
pushf
je
and
shrl
jne
scas
ret
sbb
enter
cmp
into
jne
or
test
push
cmpb
je
add
ffree
adc
inc
ds
sbb
add
pop
adc
push
mov
fistl
sub
jbe
adc
cmp
mov
and
sbb
and
inc
xchg
cltd
and
and
or
repz
shl
mov
push
or
imul
aas
push
movhps
mov
sbb
inc
fs
pushf
cs
dec
push
stos
inc
shl
fnstsw
pop
adc
jno
push
push
push
pop
ret
adcl
dec
adc
mov
cmp
dec
out
adc
dec
sub
mov
movl
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
pop
xor
sbb
ret
adc
mov
add
mov
mov
pop
mov
mov
push
add
ja
pop
pop
xlat
adc
xchg
push
inc
dec
filds
push
mov
adc
mulb
pop
sbb
mov
jle
pop
pushf
pop
inc
mov
push
loope
loopne
and
cmp
add
lock
pushfw
push
cltd
and
mov
cmp
fistpl
push
mov
sarl
ror
ret
mov
jge
or
dec
in
or
daa
shll
fsubrl
xlat
xchg
in
ret
pushf
jl
cwtl
jb
adc
mov
lods
or
xchg
lret
xor
ljmp
cwtl
incb
pop
loope
arpl
mov
jb
mov
arpl
lea
adc
sub
jmp
movsl
jnp
ret
icebp
inc
repnz
push
mov
mov
add
dec
add
mov
aam
cmp
mov
cmp
mov
cmp
cmpsl
sbb
adc
dec
outsb
xchg
inc
inc
and
cs
pop
outsl
jp
enter
inc
jmp
gs
push
cmp
fwait
jne
dec
xor
or
push
dec
outsl
popa
fs
push
inc
cwtl
sub
rcrb
movsl
sahf
call
mov
jecxz
jmp
jns
add
jo
clc
inc
or
bound
and
xor
push
add
jns
adc
pop
xchg
dec
test
jo
mov
ss
flds
hlt
dec
call
stos
scas
cmp
xchg
jg
or
mov
adc
and
mov
inc
ret
ja
movl
pusha
pop
xor
inc
and
ds
jle
and
fs
jne
aas
cs
push
hlt
and
xchg
mov
mov
enter
inc
loope
in
test
pushl
jecxz
lods
sub
out
gs
add
ret
xchg
je
sub
jmp
mov
call
xor
push
mov
movsb
push
pop
fbld
call
mov
fisubrl
inc
int
mov
movsl
fwait
xchg
jge
adc
push
add
xchg
push
pop
mov
test
test
and
call
out
inc
fmul
jmp
and
fsub
mov
fimull
iret
ret
iret
ds
mov
nop
jae
cmp
movsl
nop
fsub
lcall
xchg
idivb
sub
ret
aas
mov
rorl
adc
jle
jo
fildl
mov
in
inc
stos
test
lea
lods
inc
fldenv
shlb
adc
adc
fsub
push
in
add
call
jno
aas
mov
mov
and
mov
rorb
dec
fmuls
adc
mov
inc
sub
loopne
and
in
jne
test
leave
or
fcoml
inc
int3
adc
ds
jmp
or
int3
movsl
ljmp
pop
in
xchg
adc
icebp
adc
jmp
jne
inc
add
and
jl
ljmp
lahf
aam
fs
sbb
jmp
ret
rcrl
mov
ficomps
stc
add
loop
adc
add
sbb
in
mov
or
shll
addl
mov
repz
ud0
addb
ljmp
adc
mov
xchg
in
ljmp
jns
mov
push
mov
pop
orl
xchg
enter
mov
or
lea
pop
add
test
jne
leave
push
repnz
data16
or
ret
sti
or
adc
sub
push
pusha
loope
ret
and
in
leave
jge
inc
sbb
jo
test
inc
jmp
add
lock
loop
std
pusha
mov
adc
clc
data16
push
mov
mov
and
cli
lret
push
adc
push
fsubl
cli
mov
loop
jno
and
inc
call
add
add
cwtl
push
add
adc
cmp
push
lret
add
adc
mov
sbb
pop
dec
adc
stos
sub
and
sbb
pop
jecxz
and
lret
xor
jmp
mov
shlb
xor
shrb
loopne
ret
jno
mov
sbb
mov
inc
cwtl
xchg
in
mov
in
imul
and
and
push
xlat
lock
jb
xchg
mov
mov
push
or
and
cs
ds
xchg
leave
mov
call
adc
xchg
cmp
pop
jmp
pop
sbb
cmp
mov
imul
sub
mov
push
movsl
sbb
iret
neg
dec
les
loop
xor
outsl
jmp
pop
ja
pusha
push
push
mov
fldl
mov
mov
movsb
aaa
dec
std
mov
push
test
scas
loopne
iret
push
cmpsb
jo
test
cld
clc
push
xchg
push
xchg
clc
mov
xchg
dec
sub
jmp
aad
dec
dec
test
push
and
adc
out
test
outsb
test
sub
fiaddl
sub
dec
fdiv
sbb
jg
adc
pop
in
daa
loop
adc
adc
loope
shlb
iret
test
xor
or
repz
fiadds
sarb
inc
mov
mov
jo
sub
aaa
xchg
adc
sub
mov
or
push
jae
or
jecxz
push
inc
inc
mov
dec
pop
push
inc
loop
adc
mov
aad
fadds
or
push
jmp
imul
adc
lret
addb
jne
data16
push
dec
enter
scas
sub
push
and
lods
cmp
sub
ja
cmp
mov
or
fisttps
mov
lret
pop
mov
mov
pop
jg
clc
and
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
out
jns
mov
sbb
inc
pop
out
pop
mov
fsubs
bound
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
fistpll
cmpsb
add
movsl
push
adc
or
mov
fimuls
lods
es
pop
add
dec
cltd
cld
popf
pop
es
imul
ficoms
out
lahf
mov
ret
test
or
and
into
mov
or
sbbl
cmp
int3
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
ljmp
sub
add
ja
jmp
in
or
mov
hlt
orl
dec
loopne
mov
orb
push
inc
adc
xchg
push
xor
adc
or
adc
fnsetpm(287
xchg
inc
jecxz
and
inc
hlt
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
data16
dec
cmp
jo
ja
sbb
nop
mov
push
xorb
mov
adc
int3
dec
push
or
movsb
das
mov
imul
cmc
dec
xorb
mov
loop
shr
add
adc
xor
jne
inc
pushf
lcall
dec
pop
mov
jle
mov
in
popa
add
nop
adc
test
push
dec
call
jmp
int3
clc
lahf
je
imul
pusha
add
inc
lds
sbb
and
pop
jmp
adc
inc
sti
dec
in
push
or
xchg
sbb
xchg
xor
mov
mov
sbb
jp
push
ds
cmp
xor
les
loop
cmp
lcall
mov
orb
sar
mov
inc
dec
call
inc
lea
lahf
adc
sbb
mov
jmp
addr16
daa
or
je
add
mov
incl
or
adc
je
rorb
xor
mov
and
or
leave
push
mov
cmc
bound
push
dec
call
sbb
sub
jmp
and
jg
jp
mov
mov
xchg
dec
lret
icebp
pushf
push
aas
data16
or
shr
jne
inc
movzwl
push
mov
add
filds
jl
push
inc
rolb
jge
lret
push
sbbb
pusha
sbb
push
jne
inc
add
cmp
jne
iret
ljmp
flds
inc
clc
mov
stos
mov
mov
scas
and
adc
jb
add
mov
shl
add
inc
xchg
add
cmp
jne
lahf
or
dec
or
call
ret
inc
test
xlat
enter
jle
and
ss
jge
or
push
sub
mov
pop
jae
push
lcall
jmp
push
push
pushl
and
cmpsl
mov
fcoml
and
mov
push
or
je
aad
orb
sub
dec
ds
xchg
and
jnp
or
jb
aas
and
sti
inc
inc
adc
loopne
push
scas
pop
mov
mov
adcb
jmp
inc
push
pop
mov
enter
jne
mov
lret
jge
in
or
mov
std
pop
sub
nop
testl
jne
and
cld
lcallw
pop
je
xchg
scas
mov
or
add
add
jne
cmp
data16
inc
jmp
mov
lret
outsl
test
sbb
jns
fcmovbe
loop
cmp
movswl
es
aaa
adc
sbb
sbb
adc
shrl
addr16
sti
push
push
and
sub
scas
inc
inc
mov
pop
gs
test
fucom
and
in
cmp
hlt
mov
hlt
repnz
fmuls
cmp
xor
xlat
or
lods
je
rorl
mov
inc
lcall
push
jae
jg
or
ds
add
push
enter
mov
pop
dec
gs
add
stc
xchg
and
or
xor
out
popa
add
mov
les
inc
mov
arpl
pop
push
push
push
pop
pusha
pusha
rorb
shlb
and
or
or
ds
add
add
xchg
pop
lret
push
mov
lahf
xor
cs
mov
xchg
jns
jge
fmuls
inc
dec
add
inc
decl
mov
ffreep
hlt
sub
add
test
jb
cmp
lret
and
das
or
push
pushl
cmpsl
or
insb
mov
mov
pop
mov
mov
sbb
leave
sti
sub
pop
pop
testl
mov
mov
jns
inc
cmp
std
inc
mov
call
sbb
add
addb
pushf
adc
mov
cmc
ds
movsl
and
cmp
out
push
xchg
clc
xor
sbb
push
sub
lock
and
xor
inc
pop
lds
repnz
xchg
orb
xchg
mov
mov
rep
stos
or
pop
and
rorl
sub
xor
lock
movsl
cli
jno
pop
icebp
pop
and
repnz
pop
ja
ss
sar
adc
adcl
inc
data16
xor
je
push
andl
mov
cmp
repnz
mov
mov
repnz
pop
inc
lret
jns
dec
push
sub
pop
insb
imul
mov
push
mov
lret
icebp
stos
pop
pop
jmp
scas
and
mov
inc
ja
and
and
jmp
or
inc
sbb
mov
sub
ret
into
outsl
gs
imul
or
outsl
icebp
pop
nop
dec
sti
xorb
jne
push
popf
in
lahf
popa
push
ret
cmp
lret
iret
fistl
hlt
mov
jae
xor
or
jno
xchg
fcomp
and
andb
xchg
mov
dec
js
xchg
cmp
xchg
xor
call
adc
repz
cmc
push
mov
js,pn
hlt
cmpsl
push
adc
sub
inc
push
repnz
mov
mov
lods
ja
xor
aas
sub
ret
lea
push
out
lret
jns
mov
and
cmc
aaa
push
push
pop
or
scas
and
imul
add
fcom
push
add
aad
jecxz
icebp
dec
out
inc
and
jne
arpl
jae
les
fs
imul
insb
cmpsb
das
cmp
ljmp
ret
stos
push
les
add
shl
fimull
mov
push
mov
mov
xlat
mov
sub
out
jb
push
push
sbb
ljmp
ret
add
mov
test
add
adc
lods
push
mov
jl
mov
cmp
jle
jns
mov
mov
adc
stos
out
mov
test
ret
call
xor
repz
mov
jecxz
jmp
adc
loopne
inc
jmp
or
test
pop
or
test
xor
jne
lea
add
fs
dec
xor
lock
sub
adcl
enter
loopne
xorb
call
das
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
fistl
sbb
xchg
or
xor
aas
ret
jne
mov
sbb
sbb
call
fsubrl
sub
popf
add
add
stc
dec
pop
je
jne
dec
mov
xor
sarl
sub
add
dec
outsl
nop
rolb
pcmpeqw
and
xchg
insb
add
push
xchg
das
stc
or
push
jne
mov
cld
daa
lea
jo
dec
inc
fidivs
fsubp
jno
and
orl
pop
test
clc
stos
fldl
cmpsl
mov
cmpl
xchg
inc
jbe
sub
enter
pop
test
fnstsw
and
xchg
js
cli
lahf
mov
mov
cli
xor
jns
fistps
fbstp
jp
movsb
fistpll
jnp
out
dec
fistpll
pop
mov
jl
mov
daa
xor
jl
dec
pop
adc
clc
outsl
xchg
mov
outsl
lea
jle
xchg
xchg
inc
adc
mov
xchg
xchg
adc
mov
popl
pop
or
sbb
cmp
sub
popf
add
or
imul
pop
cmpl
add
lcall
cmp
cmpsl
dec
into
cmp
add
push
aaa
add
test
arpl
cmp
or
push
or
add
inc
ret
and
dec
fbstp
add
dec
jne
jne
js
lds
cmp
das
dec
test
or
xchg
rorl
fwait
cs
adc
stos
int3
bound
sbb
repnz
xorb
jl
mov
jne
outsb
aaa
inc
cmp
ret
xor
mov
js
nop
adc
mov
or
inc
hlt
xchg
sbb
add
sub
cmp
push
and
jne
push
sbb
cmp
cmp
mov
mov
and
jns
je
insl
add
sbb
fs
jb
jae
add
js
jo
out
mov
inc
or
xchg
or
adc
es
xor
call
test
cmp
repnz
scas
or
aam
adc
inc
ret
xor
lock
test
xlat
push
or
cmpsl
arpl
call
lock
movsl
aam
inc
clc
sub
out
into
sub
adc
mov
mov
fists
mov
loopne
and
pcmpeqw
push
jmp
into
hlt
or
pop
sbb
xor
adc
jae
add
push
and
xchg
mov
adc
inc
and
add
jne
mov
movsl
xor
cld
sbb
jae
xchg
repnz
in
adc
pop
rorl
or
mov
mov
push
clc
sbbl
sbb
ret
ljmp
fs
lods
sub
cmp
or
ja
jne
mov
sub
sbb
dec
je
add
dec
fs
sbb
adc
movsl
pop
jae
ljmp
jnp
adc
lret
jbe
dec
add
push
ficomps
fiadds
or
arpl
test
mov
mov
mov
leave
dec
mov
or
and
or
or
rclb
xchg
je
hlt
test
subb
dec
ret
scas
pop
and
push
nop
add
cli
dec
dec
push
daa
pop
and
out
xchg
and
dec
in
and
push
push
inc
or
xchg
dec
fs
adc
clc
adc
xchg
xchg
icebp
sbb
mov
and
mov
and
add
lds
leave
ja
dec
pop
jb
shll
fmull
and
aas
mov
and
mov
add
ret
adc
inc
add
loop
jb
fwait
cld
or
inc
mov
and
sbb
js
adc
xor
or
sub
or
test
sbb
jb
pop
sub
or
pop
shrl
xchg
lahf
add
gs
add
or
adc
inc
cmp
push
ret
xchg
js
xor
inc
push
mov
test
rcll
and
je
roll
cmp
aaa
or
and
sbb
adc
inc
ljmp
adc
sbb
sub
xor
inc
xchg
dec
sub
cltd
pop
adc
or
jle
mov
and
adc
and
mov
adc
and
adc
sbb
and
adc
or
and
dec
dec
xchg
push
sub
xchg
and
test
mov
dec
mov
inc
loope
nop
inc
push
add
out
mov
adc
and
push
or
inc
adc
mov
adc
and
dec
xor
inc
dec
push
mov
pop
and
dec
insl
xchg
je
jnp
orb
sahf
dec
movsl
xchg
lods
and
enter
dec
fisttpll
or
sub
or
sub
or
jg
and
sub
dec
aaa
mov
sbb
sbb
outsb
xchg
or
xchg
mov
dec
into
xchg
fisubrl
out
xchg
repnz
decb
or
sub
inc
adc
push
dec
push
xchg
pop
and
insb
jae
jp
andl
and
mov
mov
test
fs
fmull
xchg
ljmp
push
sbb
sbb
xchg
sub
xor
mov
dec
and
dec
fs
imul
inc
jle
mov
adc
mov
jecxz
cmp
inc
mov
int3
sub
shll
pop
ficoml
call
xchg
sub
xor
add
or
jmp
or
mov
and
add
fisubs
jg
fisubs
pop
mov
mov
dec
jp
lahf
in
sbb
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
in
add
je
fadd
nop
rcll
xchg
xchg
cmp
fs
orb
mov
mov
mov
jg
je
jae
jns
ds
int
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
fildl
cmp
inc
push
xorb
inc
inc
dec
aaa
push
or
jae
mov
mov
add
hlt
xor
popf
bound
inc
mov
push
gs
mov
mov
pop
sti
lock
shlb
addr16
jbe
xor
sbb
je
insb
inc
jo
sahf
outsb
imul
cmp
cmp
mov
das
ret
jne
cmpsb
ret
xor
repz
imul
jmp
jecxz
lret
aas
mov
iret
mov
sbb
in
test
push
rol
loopne
test
addb
jns,pt
ret
and
cmp
cmp
lock
cmpsb
inc
adc
or
sub
cmpsl
inc
test
mov
test
or
mov
sub
lds
inc
add
push
and
mov
test
push
cmp
pop
adc
adc
pcmpeqw
das
adc
jg
xchg
mov
pop
or
rcr
out
les
adc
loope
sub
inc
test
push
cmp
cli
or
ds
cmp
cltd
sub
fildl
ret
cmpsb
rolb
js
data16
popf
inc
dec
test
aas
shrl
inc
adc
cmpb
ds
mov
pop
and
or
or
push
and
or
inc
adc
cmp
and
adc
jae
inc
adc
bound
adc
outsb
repnz
cmp
outsb
repnz
cmp
outsb
repnz
cmp
ret
sbb
mov
push
cld
ret
jp
push
inc
push
add
pop
adc
and
sub
nop
or
push
cli
adc
pop
cmp
hlt
and
push
jo
lods
pop
cltd
and
sahf
push
cmp
daa
lds
daa
int3
cmpb
hlt
cmp
inc
cmpsl
jns
jo
and
and
les
and
out
pop
sbb
lods
pop
sbb
mov
pusha
cmp
mov
xchg
dec
adc
jne
lods
adc
mov
bound
test
stc
enter
sub
xchg
and
inc
or
adc
or
stos
or
pop
push
or
cld
dec
clc
test
mov
lcall
add
das
cmp
or
in
xchg
imul
mov
xchg
or
or
testl
ss
push
mov
pusha
mov
popa
xchg
push
sub
notl
pop
pop
pop
mov
or
out
aaa
and
loopne
movsb
std
cmp
stc
aaa
dec
je
add
call
and
les
cmp
dec
mov
jb
sbb
aam
in
repnz
push
sub
mov
xchg
xor
xor
push
jge
or
int3
in
pop
push
xchg
hlt
cmp
cmp
or
adc
cmpsb
pop
sub
mov
pop
aad
jg
or
mov
hlt
jbe
xchg
mov
xchg
mov
stos
lret
mov
mov
nop
and
je
push
scas
pop
scas
stos
mov
sub
enter
add
repnz
push
lock
push
jp
push
je
mov
stos
outsb
test
adc
xchg
arpl
add
adc
push
loop
push
mov
add
addr16
mov
or
fmuls
mov
inc
and
popa
and
add
pop
add
std
cli
cmp
adc
loop,pn
sahf
push
inc
xor
fistl
mov
jns
dec
push
sub
call
push
lret
jns
or
sahf
push
push
lret
sub
movsl
sbb
push
jno
dec
and
or
push
loop
sub
jns
pop
pop
jmp
scas
and
cmp
or
pop
lcall
in
dec
dec
shrl
pushf
mov
jnp
cmp
test
rcr
push
adc
cmpsl
shl
es
mov
imul
mov
mov
and
movsb
es
dec
fisttps
lea
movsw
and
cmp
fsubrs
rol
lds
adc
xchg
inc
dec
aas
push
pop
mov
jmp
pushf
pop
inc
or
inc
inc
dec
sbb
fnstcw
imul
xchg
lret
inc
por
mull
inc
lret
inc
and
mov
les
jle
pop
cwtl
mov
cmp
jae
movsb
xor
adc
add
sub
cmpsl
and
cmp
sbb
pop
mov
pmaxsw
inc
faddp
mov
push
fldcw
add
inc
jne
push
cmp
cmpsb
jp
mov
fstpl
inc
mov
dec
js
sbb
push
inc
pop
cmp
inc
repz
xchg
or
and
add
adc
cs
sbb
xor
jne
sub
cs
out
xchg
mov
andl
or
mov
movb
mov
rcrb
xchg
jnp
scas
fbld
or
leave
xor
jecxz
mov
int
in
cmp
rolb
xor
outsb
sbb
rorb
jns
cwtl
and
push
lea
add
push
or
dec
sbb
dec
sub
pusha
cmp
sete
push
js
adc
hlt
jmp
fisubrs
cltd
mov
push
mov
or
adc
push
sub
out
mov
adc
inc
das
fisttpll
add
mov
mov
push
adc
or
or
nop
cvtdq2ps
iret
mov
das
scas
mov
mov
jnp
icebp
mov
xchg
dec
sti
imul
inc
adc
pxor
and
stos
jne
inc
data16
xchg
or
and
je
sub
mov
arpl
nop
push
inc
dec
push
pop
inc
jne
and
je
jno
sahf
push
sti
aaa
pop
or
jae
mov
sbb
fisubl
dec
sbb
fistpl
dec
leave
cld
data16
jne
imul
fmuls
in
or
jmp
sub
and
xchg
mov
xchg
and
adc
adc
sbb
sbb
mov
add
add
mov
jl
or
sub
fwait
sub
lret
dec
cmpb
add
mov
mov
mov
call
loopne
ja
out
sahf
cmpb
jbe
push
jne
call
add
inc
or
jnp
out
mov
addl
push
sbb
inc
mov
int3
cmp
xchg
adc
mov
inc
sahf
pop
fs
scas
xor
fsts
mov
inc
sarl
sbb
sub
les
mov
ret
inc
push
pop
pop
mov
mov
mov
sti
aas
cli
xor
mov
popa
push
mov
mov
dec
push
dec
and
or
pop
ret
and
aas
aas
inc
dec
push
call
insl
push
repz
testb
sub
cmpsl
push
lret
fsubr
dec
and
dec
sub
xor
ljmp
and
push
pop
mov
enter
dec
inc
dec
cmp
push
cmpsl
push
xchg
push
pop
rolb
and
dec
dec
sbb
and
es
sub
sub
outsl
adc
xor
jmp
mov
sbb
add
and
popf
push
push
scas
ficomps
cs
inc
leave
xorb
or
xchg
xchg
nop
mov
mov
adc
sti
and
jne
out
fisubrs
outsb
or
fldl
or
pop
or
sub
push
jnp
gs
clc
clc
fwait
nop
inc
mov
aaa
adc
daa
push
ret
push
jns
adc
dec
inc
das
mov
inc
cwtl
xor
iret
and
loop
in
and
leavew
xor
jnp
push
sbb
pop
dec
cmp
test
repnz
js
aad
imulb
je
int
cmp
cmp
adc
xchg
xor
adc
adc
add
pop
push
repnz
rorb
call
call
and
movsl
or
add
call
or
stos
and
xchg
lahf
push
lock
cmp
in
or
dec
jae
jl
adc
ljmp
adc
mov
lods
js
sti
xor
push
sub
push
xchg
push
ja
push
mov
lret
dec
mov
sub
out
stc
mov
dec
out
mov
adc
movsb
out
addb
pop
inc
imul
es
and
mov
ja
test
fs
movsb
out
jmp
imul
jmp
add
pop
add
xor
icebp
pop
jmp
push
je
pop
movsb
xor
or
negl
xor
mov
popf
or
ja
xor
dec
or
add
adc
inc
leave
mov
out
call
sub
or
and
xorb
mov
or
pop
punpckhbw
cwtl
cmc
push
mov
popf
lret
xor
push
sbb
sbb
or
pushf
fisttps
inc
jecxz
and
rclb
je
sub
inc
push
or
pop
push
sub
test
mov
divl
push
mov
stos
push
xorl
fwait
cmp
je
add
nop
adc
call
sahf
scas
push
mov
jp
push
inc
or
or
popf
aam
mov
push
pop
mov
adc
xor
stos
shrb
inc
sti
fstl
pusha
mov
sbb
pop
inc
fildll
sub
hlt
or
mov
or
or
add
in
sub
popf
rcll
cmp
leave
sbb
xchg
sbb
push
andl
add
mov
and
movsb
das
inc
add
sub
out
xor
mov
add
or
sub
fs
adc
add
and
test
in
sbb
mov
and
ret
movsl
or
sti
lret
pop
or
pop
pop
and
aaa
pop
les
xchg
and
es
gs
sub
cltd
bound
xor
dec
stos
adc
cmp
cwtl
adc
push
adc
jae
pop
dec
push
insl
sub
push
mov
xchg
add
ror
xchg
mov
cmp
nop
dec
add
sbb
jne
mov
mov
scas
sub
adcl
lods
mov
mov
xor
sub
iret
sub
mov
cmp
xor
mov
aaa
jo
les
push
or
xchg
aaa
imul
mov
sti
pop
fs
aas
sub
inc
push
movsl
mov
cmp
int
aaa
mov
inc
test
push
lods
lea
or
push
inc
lods
xchg
push
adc
pop
pop
or
mov
sub
add
push
xchg
mov
add
push
adc
in
das
call
add
sub
pop
and
push
test
mov
push
gs
pop
mov
les
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
sub
inc
push
push
loope
inc
jle
jl
test
ret
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
bnd
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
sbb
and
lret
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
sub
int3
jnp
movl
dec
fs
xor
add
sub
mov
push
sbb
or
mov
pop
push
mov
push
nop
mov
push
inc
enter
popf
or
loopne
shll
or
jmp
or
mov
fwait
lcall
push
in
and
lahf
rclb
push
push
fs
and
jp
dec
cmp
cmp
fs
mov
cmpsl
fistpll
aad
mov
sahf
cs
and
add
xor
pop
cld
push
jo
sbb
dec
push
cmp
inc
ja
mov
loope
pop
or
pop
sbb
push
lock
mov
mov
int
sub
fildll
mov
cmc
push
test
push
xchg
sub
lcall
dec
push
sub
popa
call
scas
sub
and
jns
pop
sub
jmp
dec
and
add
sub
jns
pop
pop
jmp
scas
and
into
xor
fadds
aas
lcall
or
pop
inc
sbb
repnz
and
bound
lret
xchg
scas
inc
ljmp
das
or
dec
add
dec
lock
inc
push
repnz
mov
adc
xor
lock
in
sub
xchg
dec
lret
jns
pop
sub
jmp
and
cmc
sahf
push
sub
xor
bound
inc
aaa
adc
and
lock
mov
mov
rclb
cmp
add
ja
clc
push
dec
outsb
arpl
loop
ljmp
rcll
aas
cmp
inc
xchg
mov
xor
mov
cmp
test
inc
cmp
dec
test
mov
inc
sub
xor
or
push
and
pop
outsl
test
out
xor
adc
mov
and
push
mov
or
jne
fcoms
or
sub
xor
popf
in
pop
imul
cmp
je
mov
mov
xchg
sub
cmpsl
rol
push
xchg
call
nop
inc
mov
sub
rorb
add
shr
inc
loop
inc
sarb
push
pop
mov
push
add
dec
or
add
inc
ret
and
stos
inc
mul
sub
sub
or
mov
sbb
mov
xchg
lds
arpl
jecxz
out
sub
pop
lods
cmp
movsl
or
ret
push
mov
jmp
inc
stos
mov
sub
cmc
pop
mov
mov
cli
rorb
pop
add
mov
add
push
cwtl
lea
cmpsb
shlb
pop
sub
cmp
cmp
add
push
dec
in
jmp
add
adc
les
enter
scas
xor
and
movb
push
pop
xor
or
je
pop
push
fcoml
incl
and
roll
jne
push
arpl
icebp
mov
test
inc
push
dec
sub
mov
sub
hlt
mov
shll
js
xor
xchg
and
inc
adc
das
and
push
sbb
add
add
sub
cmp
cmp
in
lods
inc
add
inc
pop
sub
pop
dec
or
mov
enter
add
scas
mov
ret
fucom
pop
test
inc
dec
push
xor
adc
jecxz
jo
and
dec
mov
push
inc
or
xor
jmp
xchg
mov
pop
js
repnz
jns
add
shll
pop
fs
int3
adc
repnz
test
cmp
lods
xor
stos
aam
aaa
mov
xor
mov
shlb
inc
add
mov
lock
xor
mov
data16
adc
cmp
xchg
rcrl
jmp
cmp
clc
xchg
movsb
and
gs
pop
xchg
in
jp
and
stos
inc
pop
sbb
mov
and
adc
lret
inc
dec
dec
or
jecxz
push
or
pop
or
mov
xchg
ret
inc
or
mov
clc
mov
xor
data16
sbb
dec
rcl
xchg
mov
cs
jae
sahf
adc
rcl
ja
add
sub
sbb
push
push
inc
leave
jne
outsb
xor
lcall
xchg
ds
imul
xchg
insb
gs
cld
stc
xchg
aas
adc
divb
in
jo
push
ljmp
and
cltd
push
or
xor
outsb
icebp
push
mov
inc
push
inc
mov
xor
and
mov
leave
dec
push
mov
sub
cmp
push
or
data16
adc
jb
test
mov
adc
stc
inc
lcall
shll
sub
aas
repz
mull
popa
or
mov
push
fs
mov
lods
je
jl
popa
add
mov
js
push
daa
fcmovu
inc
pop
add
add
xor
into
xor
std
mov
push
push
push
bound
mov
cs
push
les
or
inc
adc
loopne
push
cmp
ret
movl
cwtl
mov
xor
mov
adc
and
cmp
xorb
je
lahf
xor
push
lods
ss
inc
test
inc
adc
inc
add
push
int
imul
cmp
call
cmpsb
int3
sbb
pop
movsb
addl
adc
push
icebp
je
dec
and
call
aaa
pop
xor
pop
mov
in
mov
cmp
jno
lret
mov
or
or
fcoml
shlb
sbb
jae
les
and
sub
sub
jo
mov
call
test
xor
xor
or
cld
std
adc
push
push
and
cmp
cmp
clc
xor
sbb
clc
and
inc
mov
fs
cmp
xchg
and
enter
or
xchg
and
nop
shl
in
sbb
pop
mov
and
add
shlb
and
pusha
and
mov
roll
fs
loopne
and
cmp
xchg
and
enter
or
xchg
and
nop
loop
sbb
aam
xlat
aam
mov
mov
rolb
fs
xor
adc
enter
enter
and
nop
mov
xor
sbb
les
test
lods
xchg
and
or
leave
iret
xor
subb
pop
push
cmp
pop
mov
cmpsl
cs
cli
loopne
pushf
mov
and
cmc
sbb
xchg
sbb
push
mov
mov
pop
cmpb
pop
adc
xchg
test
xchg
push
sbb
xchg
js
pop
lret
pop
or
xor
fildl
xor
xchg
stos
std
sub
ficoml
cltd
add
and
push
ds
adc
xchg
lods
pop
pop
in
stos
adc
push
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
mov
adc
add
incb
test
mov
sub
mov
sbb
in
mov
inc
mov
nop
lcall
and
inc
mov
cwtl
xchg
pushf
xchg
xor
push
lret
jno
movd
pop
dec
add
sbb
mov
dec
subb
pop
test
cmpb
fsubs
sub
mov
dec
ljmp
enterw
sub
movzwl
ret
inc
push
inc
insb
and
call
js
lahf
push
das
sub
out
mov
lea
aam
lock
popa
sbb
in
mov
xchg
xchg
enter
test
in
out
jno
pcmpgtb
cwtl
cmp
xchg
les
jb
dec
cmp
pop
xchg
xchg
jns
add
cmp
mov
xchg
mov
xor
push
addr16
or
adc
push
cmpsl
imul
sbb
inc
lret
mov
pop
data16
shlb
mov
push
outsb
add
dec
or
mov
mov
movsb
cmp
jne
push
add
je
mov
dec
loopne
es
sub
inc
mov
inc
inc
mov
pop
or
ficompl
push
pop
and
cmp
cmp
in
bound
xor
enter
push
and
or
sub
inc
sub
loop
pop
xchg
or
and
pop
or
test
or
add
sbb
movsl
pop
push
sbb
adc
and
adc
fs
stos
cmp
fucomi
fs
sub
or
testb
inc
je
mov
mov
mov
adc
inc
or
fwait
pop
adc
push
stos
add
sub
pop
fstps
je
ss
into
enter
or
and
jbe
or
mov
pop
mov
jnp
ljmp
jle
leave
jno
inc
out
sub
xchg
jmp
add
mov
insb
adc
test
mov
inc
xor
leave
mov
cmp
pop
mov
add
or
jne
pop
jbe
dec
cs
pop
imul
inc
iret
mov
mov
inc
push
imul
dec
outsl
fs
pop
test
sarl
dec
and
lock
mov
add
addr16
imul
adc
sbb
inc
outsl
jne
movsl
mov
sub
test
push
jo
arpl
callw
fwait
out
push
push
xchg
and
or
cmpsl
push
mov
push
inc
dec
push
pop
orb
inc
cmp
dec
inc
dec
cmp
in
sub
adc
xchg
adc
adc
hlt
dec
adc
imul
mov
scas
stos
data16
cwtl
jmp
push
pop
inc
inc
dec
sbb
dec
push
xor
xchg
out
ret
dec
inc
xor
imul
push
rcrb
divl
repnz
jp
and
mov
jmp
pop
fisttpll
lods
mov
dec
mov
jne
pop
hlt
insb
in
push
mov
and
and
out
lret
and
js
jnp
push
and
mov
jle,pt
mov
inc
imul
cmpsl
inc
movsl
ret
into
push
lret
pop
dec
push
cli
adc
fs
iret
pop
push
in
sub
mov
insl
xor
fsubs
stos
cmp
adc
dec
push
dec
andb
out
adc
gs
adcb
sub
stos
push
inc
fs
icebp
dec
arpl
sub
adc
mov
push
and
dec
or
lods
sbb
add
js
sub
sub
cltd
orb
pop
push
mov
sub
push
sub
mov
xchg
adc
sub
adc
and
cltd
fsubs
xor
xor
cmp
notb
inc
test
pop
sub
xor
loop
jnp
xor
push
pop
js
inc
test
xchg
adc
cltd
push
push
jg
loopne
adc
pusha
mov
mov
imul
sbb
sbb
daa
jne
nop
add
popf
leave
mov
loopne
push
jne
cld
adc
mov
js
dec
loopne
xor
cmp
jge
fcoms
add
mov
cmp
loopne
jnp
or
pop
sbbl
sahf
push
subl
mov
lea
fstpl
cmc
outsb
dec
jb
cmp
std
cmpsb
movsl
arpl
adc
cmpsb
sbb
add
mov
or
and
mov
dec
dec
or
pop
push
inc
mov
and
ffree
jnp
mov
or
fcom
je
test
sarb
data16
shr
adc
push
xor
test
and
xor
fisttpl
mov
push
sub
add
je
mov
roll
jne
dec
mov
pop
dec
adcb
cmpsb
jmp
adc
mov
inc
jne
out
gs
adc
push
push
sbb
mov
subl
ja
ja
pop
push
icebp
test
jns
or
ret
je
mov
pop
sti
sub
pop
or
jmp
scas
shll
mov
test
adc
mov
bound
sbb
insl
sub
repnz
xor
popf
push
xor
and
pop
cltd
xchg
arpl
cmp
cltd
xchg
and
mov
dec
cmp
scas
sbb
push
sub
mov
jle
mov
inc
push
adc
cmpsb
sbb
and
adc
shll
int3
push
cmp
pushf
push
xchg
lds
or
mov
mov
push
sbb
mov
inc
das
push
add
inc
adc
out
inc
ret
jb
ljmp
jne
inc
sub
jl
push
out
and
mov
push
sbbb
ret
nop
jl
inc
jmp
adc
mov
insb
sbb
mov
sbb
jmp
push
lods
lock
hlt
pop
rcl
scas
gs
add
or
pop
mov
repnz
add
mov
jns
aam
scas
into
xor
adc
loop
xor
push
bound
sub
mov
adc
or
aam
jno
sub
push
mov
leave
pop
push
gs
mov
pusha
adc
call
adc
cmpsb
push
cmp
and
jmp
and
add
insl
mov
mov
dec
xor
jmp
outsb
js
imul
sub
cmp
or
iret
adc
adc
call
aaa
clc
pop
movsl
xor
daa
push
and
cli
xor
ret
call
dec
cmp
movsl
or
lods
sbb
aad
inc
ret
fs
sub
hlt
mov
lret
push
or
clc
pop
mov
or
push
stc
xchg
add
cltd
xor
adc
mov
xchg
sbb
cmp
xlat
push
fistpll
push
lods
adc
rorl
popf
add
sub
xchg
pushf
sbb
and
add
xorb
dec
lret
jmp
mov
dec
add
cmp
xchg
sbb
and
xchg
mov
push
mov
jne
or
je
push
xlat
sbb
adc
pop
pop
mov
pop
inc
and
mov
fs
or
push
push
adc
sub
lock
xor
cmp
sbb
and
test
jecxz
aaa
jns
or
pop
lods
jl
aaa
mov
call
les
adc
xchg
cmp
xchg
or
test
and
icebp
mov
inc
clc
int3
outsl
call
rcrb
ljmp
sub
ja
adc
add
dec
pop
into
mov
sbb
test
xchg
push
push
or
mov
scas
mov
mov
pop
pop
sbb
push
loop
stos
mov
push
push
int3
test
sbb
pop
call
push
inc
adc
push
in
and
enter
in
cmp
pop
call
mov
jmp
push
lods
sub
mov
adc
test
xor
and
add
push
or
sub
inc
mov
mov
xlat
xchg
int3
mov
dec
sbb
adc
out
dec
in
push
lret
inc
mov
push
pop
movsl
sub
test
ffree
sbb
call
inc
xchg
push
mov
aaa
roll
popf
pushf
and
adc
xor
mov
mov
add
aad
xchg
xchg
or
jbe
push
push
int3
sub
mov
movsl
ret
rolb
cmp
stos
movsl
cmp
add
push
push
popa
cmp
lea
sub
push
test
and
imul
pop
dec
or
call
push
icebp
mov
mov
fbld
sbb
movsb
mov
pop
mov
rol
cwtl
stos
or
movb
call
bound
and
push
and
imul
nop
cs
cmp
popf
push
push
push
pop
sub
inc
push
sub
jb
xchg
es
dec
cmp
mov
push
bound
mov
push
pushf
push
push
mov
mov
loop
pop
and
sarl
adc
in
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
lahf
movsb
sbb
cmc
inc
jne
dec
jmp
add
cmp
add
scas
dec
cs
push
jg
outsl
mov
push
or
fildl
test
xor
xor
inc
outsl
mov
xlat
jl
js
loopne
add
ret
sub
add
es
lock
testb
dec
bound
movsl
mov
mov
jp
add
and
dec
add
test
cmp
mov
jle
xor
add
out
nop
movsl
mov
add
cltd
push
lock
pop
in
scas
push
xchg
cmp
mov
insb
xchg
fidivrl
pop
clc
loop
dec
pop
enter
pop
test
xor
iret
ss
cmp
fmul
pop
push
and
sysexit
sbb
cwtl
dec
insl
push
shlb
fstl
fdivp
repz
cmpb
std
adc
fwait
aad
scas
mov
js
imul
or
or
stc
sbbl
add
sbb
inc
push
jne
dec
cmpsb
pop
xchg
dec
add
xchg
mov
loope
mov
negb
cmp
pop
cmpxchg
sub
out
xchg
pop
cmp
nop
inc
jl
lea
das
mov
xor
push
out
sub
cld
xchg
mov
add
negl
mov
pop
stc
mov
orb
sub
jno
fdivrp
adc
int
pop
aaa
negl
inc
outsl
add
fcmovu
lock
dec
mov
fcomps
outsl
or
sti
jno
push
daa
xchg
jbe
jp
inc
mov
cmc
mov
pop
mov
lea
inc
shlb
adc
xchg
pop
rcl
dec
cld
jb
ret
dec
jmp
cmp
loopne
stos
out
mov
int3
dec
data16
and
and
cmpb
ret
dec
mov
sub
cmp
add
mov
adc
sub
mov
xchg
ret
push
add
jge
sub
add
xchg
call
popa
clc
in
mov
xor
mov
pop
aad
nop
sub
cwtl
fwait
jbe
fildll
aaa
or
sub
cltd
and
in
inc
and
adc
dec
imul
jge
push
sbb
in
push
add
jl
xchg
pop
lock
xchg
jmp
xchg
and
nop
fwait
pop
arpl
push
xchg
shr
push
adc
cwtl
cmpl
cmp
cmpsb
pop
lcall
in
addl
movsb
js
les
call
rcll
inc
add
jecxz
xchg
shll
sub
stc
pop
jge
pop
jp
scas
add
push
add
shlb
and
add
mov
or
cwtl
jl
pop
add
out
inc
push
hlt
addr16
shlb
add
cmp
sub
jge
scas
push
insl
hlt
xlat
add
adc
sbb
lahf
mov
cli
fiaddl
test
repz
lods
xor
daa
jle
lock
int3
sub
jg
cmp
sub
ja
outsb
dec
mov
pop
or
pushf
xchg
lock
popa
xchg
push
ljmp
pusha
mov
hlt
xchg
sbb
insl
or
jne
popa
inc
popf
push
sub
xchg
cmpb
jle
cmp
xlat
add
fbld
negb
bound
mov
add
rol
dec
add
cs
add
jp
or
adc
pusha
jns
add
dec
cmp
xor
ljmp
jle
cmp
inc
sbb
add
push
loope
inc
mov
andb
and
cmpsl
add
daa
in
stos
hlt
sbb
lea
mov
adc
pop
scas
push
sahf
icebp
pop
mov
pop
repz
add
jmp
adc
ss
leave
or
imul
xchg
lcall
rcrl
stos
rolb
out
cmp
xchg
pop
add
dec
inc
dec
scas
mov
bound
mov
add
jo
add
inc
gs
xor
cmp
aaa
cmpb
fists
add
xor
pop
add
scas
into
dec
add
xor
pop
xlat
insl
push
pop
mov
jge
jmp
add
pop
mov
push
data16
insb
rorb
gs
mov
adc
jg
push
inc
pop
daa
sub
nop
xor
fists
movsb
outsl
dec
or
add
xchg
dec
nop
stc
mov
push
add
lds
add
test
add
lahf
xchg
mov
xchg
cmpsb
mov
xor
pop
icebp
shl
add
call
getsec
daa
mov
out
xlat
cmp
sub
pushf
lea
int
push
fnstsw
daa
ljmp
add
adcl
push
arpl
clc
xor
scas
add
inc
test
inc
xchg
pop
js
mov
pop
inc
je
cmpsl
or
jl
aaa
pop
aad
adc
xchg
or
adc
sbb
cmp
jle
nop
add
sbb
es
add
sub
fcoml
pop
clc
scas
add
mov
jle
dec
aad
bswap
mov
push
or
das
movsl
clc
lar
notb
addb
int
add
cwtl
add
jl
jb
daa
xchg
jecxz
cmp
pop
cld
push
pushf
add
mov
push
sar
pop
cmpsb
mov
test
and
mov
add
fstpl
in
inc
sbb
mov
add
jmp
mov
cmp
xor
and
ffree
jns
jb
add
mov
lret
add
test
fsub
ljmp
in
shlb
dec
sbb
cld
and
push
jecxz
jle
cs
push
cmpb
add
ds
clc
cmp
out
negl
add
leave
stc
and
or
adc
add
popa
or
push
cmp
xchg
call
inc
movsl
fists
pop
mov
ret
jge
fsubrs
inc
mov
cltd
add
sarl
addb
lahf
pop
cmp
test
cltd
roll
adc
jo
add
orb
push
xchg
in
add
xor
outsb
test
add
sub
jb
add
sub
fsubrs
int
xor
andl
lea
pop
rcl
loope
addr16
aas
or
add
mov
pop
sbb
mov
out
jecxz
cwtl
rorb
data16
push
dec
sbb
add
outsl
roll
ret
adc
mov
add
loop
adc
xchg
mov
sbb
gs
lock
cmc
and
lret
jnp
in
add
pop
pop
dec
sahf
xor
ss
in
mov
mov
xchg
pop
scas
add
dec
adcl
pop
jnp
push
pop
outsb
loopne
lods
je
cmpsb
add
add
dec
aad
lock
dec
cli
cmp
ficoms
adc
jl
arpl
add
inc
adc
data16
mov
cmp
jp
jecxz
rcrb
add
pop
dec
fiadds
addr16
jns
mov
add
push
push
jo
popa
les
and
sub
lock
out
add
addr16
add
shll
mov
lahf
push
inc
push
js
push
add
mov
add
stos
add
adc
cmp
mov
bt
jle
aaa
out
movsb
jne
dec
dec
loopne
sub
in
cmp
sahf
ljmp
leave
pop
inc
mov
cmpsl
jmp
repnz
mov
and
int3
push
sbb
push
stos
mov
dec
clc
out
dec
add
loope
rcrl
test
cmp
add
clc
addl
add
andl
testb
icebp
push
adc
mov
push
test
out
call
jae
pop
outsl
aas
adc
sbb
pop
add
push
aad
pop
pop
and
pop
cmp
mov
mov
add
jmp
mov
stos
push
add
daa
mov
add
pop
sbb
xor
sub
test
call
dec
insl
xor
add
sbb
and
subb
add
pusha
sub
mov
mov
rcrl
lea
stos
fisttpl
test
mov
push
jmp
mov
add
mov
outsl
pop
push
push
imul
add
mov
roll
shlb
lcall
lahf
mov
pop
mov
std
stos
cmp
jno
sbb
jo
add
iret
xlat
jl
test
add
cltd
inc
or
sbb
mov
dec
and
mov
das
and
push
mov
cmc
add
xchg
or
add
cmp
mov
push
mov
mov
push
shrb
clc
mov
add
clc
into
testl
enter
inc
and
add
shlb
pop
add
add
add
in
cld
pop
into
mov
out
jge
dec
xchg
call
and
ret
xor
les
add
test
pop
jns
sbb
sarl
push
dec
inc
clc
jmp
out
and
add
mov
shl
add
scas
es
push
or
xor
cmc
jl
ss
dec
add
and
data16
cwtl
mov
cmpsb
lret
inc
sbb
pop
in
js
adc
fnstenv
mov
scas
sar
cmp
add
sbb
enter
repz
ss
xchg
add
jmp
add
xchg
push
inc
lock
push
scas
and
subb
insb
dec
adc
popf
gs
std
sub
lods
jmp
xchg
leave
lret
push
xlat
rcrb
dec
inc
icebp
hlt
mov
lea
pop
xchg
adc
add
jge
rolb
sbb
xor
cs
adc
ret
push
dec
add
or
andb
inc
add
xchg
sub
les
xchg
divl
lock
push
adc
mov
orw
push
adc
push
insb
xchg
pop
pop
pop
jp
cmpsl
rclb
mov
inc
pop
cmp
sub
sbbb
push
pop
rorl
pop
test
mov
outsl
sub
imul
cli
daa
mov
hlt
pop
add
dec
or
adc
add
daa
lods
cmp
shrl
add
into
inc
mov
int
test
dec
lea
cmp
ss
cli
mov
lret
add
jl
push
pop
popf
add
arpl
or
add
add
repz
jecxz
sub
mov
add
push
xlat
mov
inc
sub
add
insb
cmp
aaa
sub
mov
mov
or
jno
jmp
add
dec
daa
arpl
stc
je
iret
sub
bound
gs
lock
nop
pop
ja
add
sbb
jae
lea
movsl
jl
cli
push
xchg
dec
in
out
pop
pop
sbb
lea
adc
inc
add
popf
imul
xchg
mov
nop
mov
xor
xorb
push
out
adc
or
outsb
js
mov
js
fisubrs
adc
ja
push
mov
lods
cmp
out
mov
imul
mov
jae
imul
in
cmp
out
fisubs
or
sbb
xor
mov
dec
jl
inc
xchg
imul
or
js
repz
cmp
or
out
rclb
insl
xchg
dec
sub
cs
add
aam
push
mov
mov
test
data16
fwait
mov
mov
sbbl
fldcw
pushf
ja
daa
outsb
fnstenv
push
and
sbb
mov
out
pop
bound
imul
clc
cmpsl
js
xchg
test
outsb
push
and
outsb
jno
pop
pop
rolb
call
outsb
test
or
pop
outsl
mov
jnp
les
jp
arpl
outsb
fdivrl
out
test
inc
mov
insb
lea
adc
ds
sbb
es
xchg
mov
jle
fwait
push
xor
or
and
jle
push
jo
mov
jo
xchg
and
dec
and
mov
ret
push
fwait
lock
pop
and
and
jno
push
pusha
inc
mov
xchg
fwait
push
jno
cmp
pushf
jno
push
out
jge
lret
jno
loop
jno
dec
push
sub
sub
jb
divps
test
cmp
inc
jle
mov
mov
cmp
fildll
mov
jno
add
mov
sbb
push
inc
decl
add
movb
mov
lock
add
stc
jg
inc
inc
jae
push
jae
imul
and
jg
jg
push
mov
dec
lea
sub
fisttpl
jg
and
jae
sti
sub
pop
mov
xor
dec
je
les
sbb
lea
inc
cmp
adc
aad
cwtl
add
adc
ljmp
cld
cmp
adc
or
imul
incb
push
bound
jne
jne
test
andl
jne
or
xchg
jle
mov
sub
mov
mov
clc
jle
fdivs
sbb
notl
inc
mov
pop
imul
and
and
jbe
fdivs
push
orl
ja
mov
arpl
ja
arpl
adc
cmp
pushf
xor
clc
ret
sbb
pusha
xor
sbbb
pop
push
jo
mov
add
mov
jl
adc
test
pushl
or
test
adc
out
pop
mov
pop
ret
adc
mov
into
call
xchg
push
inc
ss
jns
or
imul
adc
xchg
lock
adc
jo
adc
push
jmp
pop
sub
and
lock
push
adc
aaa
sub
push
pop
xor
scas
ds
dec
daa
inc
push
inc
jns
lock
mov
pop
out
fwait
fs
or
xchg
push
jne
adc
leave
jns
lock
loop
jp
jg
test
jp
or
and
adc
xchg
xchg
test
dec
int
or
jp
push
rcrb
rolb
leave
jp
lock
test
rolb
or
pop
pop
out
sbb
jge
jo
test
nop
in
xor
inc
jge
mov
mov
pop
adc
cmp
call
adc
sbb
pushf
dec
ret
cmp
or
lock
adc
pop
xchg
in
popf
dec
rcl
sbb
mov
mov
push
repz
test
mov
mov
or
cltd
lods
into
or
adc
es
mov
dec
ret
test
push
jge
cmp
iret
arpl
mov
mov
adc
loope
mov
ds
les
lock
aam
mov
mov
cmp
repz
jg
jle
std
mov
loopne
adc
sbb
rorl
std
mov
adc
call
fwait
jo
mov
mov
ret
inc
int
mov
jo
mov
cmp
adc
sub
or
inc
jg
pusha
jg
jb
mov
and
mov
test
mov
lods
dec
dec
and
mov
in
mov
and
mov
cmpb
orb
orb
cmp
mov
inc
or
add
mov
int3
cs
fwait
mov
inc
orb
scas
push
call
mov
decl
adc
mov
orw
mov
loopne
inc
test
sarb
pop
in
mov
orl
mov
pop
loope
xchg
ret
in
jmp
nop
or
adc
mov
orb
in
icebp
pop
sbbb
jl
sub
testl
lods
inc
mov
scas
xor
lahf
xchg
enter
sub
mov
orb
adc
sub
ds
sub
mov
out
fwait
fs
jge
orl
pop
inc
insb
call
pop
inc
std
xorl
or
bound
test
lea
lcall
jge
xchg
pop
sbb
and
mov
pop
pushf
test
cmpsb
xchg
sub
dec
nop
ret
test
loop
push
and
test
sub
call
cmp
test
adc
lret
push
jbe
and
mov
xor
mov
loope
test
adc
mov
cmp
popa
test
and
or
mov
adc
add
and
inc
call
hlt
and
pop
cmp
xchg
xchg
xchg
xchg
clc
xor
adc
push
and
xchg
pop
pop
pop
dec
xchg
mov
nop
ret
xchg
loop
xchg
push
and
sbb
and
xchg
mov
ret
sbb
mov
adc
mov
addr16
cmp
pop
or
loop
xchg
adc
dec
sub
inc
xor
mov
add
out
cwtl
pop
out
fwait
fs
xchg
in
and
and
xchg
inc
sbb
es
mov
pop
inc
stos
mov
jg
test
mov
dec
mov
and
pop
or
push
and
mov
dec
mov
pop
pop
push
dec
xchg
cli
dec
nop
ret
mov
loop
xchg
push
and
sbb
and
mov
mov
ret
sbb
mov
or
mov
addr16
or
xchg
loop
mov
adc
inc
or
jecxz
sub
movsb
daa
adc
movsb
sbb
push
jge
xor
outsb
rcrl
mov
outsl
repz
mov
push
sahf
lret
cmpsb
lock
daa
cwtl
mov
test
data16
mov
adc
and
inc
or
gs
and
pop
daa
cwtl
xchg
rorl
bound
fisttps
js
sti
pop
sbb
test
adc
or
push
inc
ficoms
daa
cwtl
mov
loop
cwtl
push
and
jbe
mov
test
cwtl
pop
and
cwtl
mov
mov
out
sbb
cli
xchg
jno
dec
xor
test
mov
pop
mov
jo
sbb
dec
in
fisttpll
incb
mov
les
decl
test
mov
and
out
in
xchg
or
and
data16
or
mov
and
test
insb
cmp
cmp
inc
test
fwait
iret
adc
in
mov
shrl
fdivs
adc
sub
popf
jb
adc
sbb
loopne
mov
nop
sbb
sbb
in
xchg
inc
nop
mov
mov
mov
movsl
xor
in
repnz
jo
and
or
xchg
xchg
fcomps
xchg
jl
dec
xchg
inc
pop
cmpsb
mov
mov
shlb
je
sub
mov
scas
sti
cld
scas
aad
push
sbb
lds
and
cmp
out
js
popf
xor
int3
mov
or
mov
adc
rorl
lret
cmpsb
pop
pop
scas
les
insb
mov
or
push
sahf
loope
xchg
push
adc
sahf
repz
inc
mov
popf
cmp
ret
sbb
int
pop
push
and
xchg
push
and
xchg
jo
xchg
test
and
dec
xchg
aaa
mov
popf
pop
jb
lea
cwtl
xchg
shlb
loope
loopne
pop
or
popf
outsb
xor
mov
and
loopne
sbb
sbb
inc
xchg
loop
mov
shl
push
mov
fwait
sub
sub
pop
adc
adc
inc
andps
out
adc
js
mov
cmp
dec
dec
cmp
mov
add
xchg
add
std
xchg
es
mov
mov
jl
scas
xor
xchg
fsubs
or
fdivp
xchg
lea
in
jo
add
mov
pop
out
lods
fs
in
dec
repnz
scas
mov
and
adc
push
xchg
lret
stc
mov
jnp
mov
mov
loope
mov
mov
xchg
test
mov
int3
scas
sbb
repnz
repnz
xchg
sub
or
mov
inc
mov
fldenv
mov
movsb
push
les
xchg
mov
fdivrl
rolb
loope
mov
adc
repnz
sbb
and
or
pop
repnz
mov
or
sti
push
cmp
add
sub
cmp
out
outsl
mov
js
aam
popa
push
fisubs
fwait
ret
enter
movsl
sbbl
gs
and
addr16
clc
pop
aam
xchg
outsb
cltd
jo
movsb
xchg
mov
enter
cltd
test
into
movsb
push
and
cltd
push
and
cltd
jno
out
adc
icebp
cmpsb
or
movsb
mov
lcall
lcall
out
cmp
movsb
test
mov
sbb
in
xor
inc
scas
jno
cmpsb
fdivl
movsb
mov
fwait
xchg
sbb
mov
cmp
test
test
dec
fwait
mov
push
test
adc
test
mov
fs
push
lods
sbb
push
lret
cmp
mov
and
fwait
lock
notl
sub
jmp
sbb
mov
push
mov
pushf
or
cmc
pushf
push
push
dec
or
pop
sbb
or
js
test
cmp
mov
popf
xchg
dec
sub
pop
dec
mov
mov
push
push
les
add
nop
sub
xor
xorb
jbe
leave
fldcw
xchg
in
fnstcw
jmp
stos
sbb
jb
inc
xor
or
lret
push
pop
ss
lock
push
sub
xchg
shr
movsb
cmp
pop
xor
cmp
xor
mov
add
jb
dec
mov
push
fs
push
xchg
lea
xor
push
decl
cmp
cwtl
mov
add
xor
cmp
ja
mov
mov
dec
cmp
dec
lahf
add
adc
jae
jmp
xor
adc
push
ret
test
push
xlat
add
add
push
stc
mov
add
or
push
nop/reserved
cmp
movsb
test
push
lods
iret
sub
mov
repz
and
dec
mov
xlat
test
shl
test
mov
mov
or
add
push
adc
lods
repz
inc
mov
stos
cmp
ret
sbb
jmp
xor
mov
mov
lods
adc
sbb
out
sub
inc
mov
adc
mov
fildll
lret
push
repnz
xchg
jo
fbstp
sbb
lods
mov
mov
ds
pop
and
dec
mov
inc
fadds
inc
test
cmp
mov
sbb
test
inc
icebp
add
jno
mov
stc
imul
scas
sbb
movsl
adc
fildl
dec
scas
les
cmp
xor
inc
dec
test
fsubs
fisubs
ret
mov
jl
dec
loop
fdivl
mov
add
icebp
jecxz
je
shlb
js
cmp
std
inc
ds
xchg
sub
push
cmp
or
add
pop
call
xor
inc
add
lods
pop
lea
fisubl
mov
movsl
adc
dec
popa
cwtl
adc
out
add
mov
aam
add
xor
std
or
push
push
loopne
fistps
xchg
js
into
cmp
inc
adc
sub
dec
dec
lcall
mov
std
xchg
ret
fsts
sbb
dec
inc
dec
inc
pop
and
dec
push
mov
ds
push
dec
mov
and
dec
fisttpl
push
faddl
and
and
movsl
push
push
pop
jp
inc
xlat
dec
xchg
cli
or
dec
dec
and
jmp
push
adcb
mov
push
arpl
push
dec
jp
aad
xor
dec
xlat
insb
xor
ss
push
jl
mov
insl
pop
xchg
mov
pop
aaa
dec
and
das
mov
add
pop
cmp
jne
insl
push
inc
adc
mov
sub
sub
bound
mov
pop
insb
and
pusha
les
clc
dec
or
or
adc
adc
push
add
loop
add
adc
mov
jo
xchg
lret
cltd
add
inc
push
lcall
mov
fdivl
mov
add
in
mov
aam
rol
or
or
mov
and
and
out
aam
inc
cmpsl
movsl
jmp
lock
adc
or
inc
out
enter
fsubs
or
mov
or
add
pop
add
or
mov
and
sub
inc
or
test
js
push
das
adc
fdivs
sub
or
cmp
test
cmp
mov
or
pop
mov
or
add
pop
add
push
bound
cmp
loop
out
loop
arpl
adc
xor
or
lds
insb
sub
adc
push
dec
js
pop
sbb
and
xor
lret
int3
enter
iret
add
into
fcmovnu
fcmovu
add
loopne
jecxz
ds
outsl
mov
imul
in
inc
add
int
sbb
xlat
xor
mov
test
add
dec
lock
adc
push
add
or
ljmp
add
adc
jo
xor
or
ret
cmp
mov
or
ja
int3
or
dec
sbbb
mov
enter
adc
and
gs
or
push
or
mov
adc
and
dec
sub
adc
push
dec
pop
xchg
pusha
and
jo
mov
dec
cwtl
xchg
mov
mov
and
dec
fcoms
xchg
add
enter
jb
cmp
push
adc
push
inc
les
movsb
cmp
mov
adc
pop
mov
adc
xor
sbb
inc
pop
and
xchg
test
cmp
mov
pop
mov
pop
rcrl
and
lods
add
pop
js
xor
sbb
mov
mov
and
dec
fcoms
jmp
rclb
cmp
xchg
shr
dec
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
and
inc
enter
adc
and
inc
in
mov
xchg
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
push
or
test
push
rclb
sub
mov
and
dec
loopne
call
xor
gs
les
xchg
pop
ljmp
ret
fcomps
adc
movsl
into
ja
adc
pop
cmpsb
str
or
or
push
adc
adc
adc
add
sbb
add
dec
adc
pop
add
shrb
pop
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
ss
data16
xor
mov
jbe
add
dec
mov
add
sub
sbb
mov
repnz
mov
dec
jno
repz
mov
sbb
in
mov
hlt
movl
test
add
std
in
leave
mov
dec
pop
add
insb
push
arpl
cmp
or
add
pop
adc
in
add
jb
addr16
add
inc
aam
dec
std
test
or
insb
cwtl
add
fildl
pop
mov
xor
filds
iret
or
shrl
cmp
ficoms
enter
push
popa
sarb
add
les
iret
pop
shld
sub
mov
add
and
add
mov
adc
pop
stos
sbb
data16
nop
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
add
loope
or
pop
insl
repz
add
sbb
push
imul
add
xor
dec
loope
repnz
ds
push
cmpb
sbb
hlt
or
adcb
cmc
fnstenv
xchg
ret
jmp
mov
mov
add
sub
rorl
pop
popa
mov
into
nop
sub
mov
aam
add
fadds
shll
push
addb
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
add
and
ss
testb
xlat
int
push
ficoms
add
and
jp
mov
dec
add
add
push
outsl
sub
mov
aas
or
sbb
pop
out
add
sbb
xchg
push
in
push
jle
fs
jnp
clc
fcomip
mov
sti
enter
movsb
out
mov
fcmovnb
or
fimuls
mov
or
and
mov
mov
and
aam
call
xchg
sub
add
pop
lcall
inc
dec
test
cwtl
push
les
test
inc
cmpb
inc
cld
fists
nop
mov
stos
daa
sub
mov
xchg
or
and
pusha
mov
in
test
mov
and
enter
sub
dec
orb
in
jmp
out
jbe
dec
fucom
test
adc
and
data16
mov
dec
mov
sbb
jns
cmp
sahf
imul
lahf
sbb
dec
js
mov
or
cmp
cmpb
add
data16
xchg
or
push
sub
xchg
adc
dec
push
mov
sbb
adc
jo
inc
popf
xchg
fdivrl
mov
jl
addr16
dec
icebp
cmp
nop
adc
push
mov
and
fs
and
push
jbe
xchg
fs
fsubs
and
cmp
push
mov
lahf
and
and
cwtl
int3
jns
or
jmp
xor
xor
nop
or
pop
jl
movb
and
cwtl
xchg
sbb
je
mov
xchg
daa
jmp
sbb
test
cmpsb
mov
lahf
cltd
sbb
roll
xor
and
xor
nop
sbb
adc
test
rorb
sub
lock
xor
movsb
daa
sub
je
add
adc
add
cmp
push
adc
mov
or
stc
notb
fdivrs
and
pop
or
pop
roll
push
hlt
mov
inc
les
push
adc
cmp
or
push
sbb
inc
mov
lock
adc
inc
sbb
xchg
in
dec
loop
push
add
jl
mov
pop
adc
pop
adc
arpl
jb
xor
dec
xchg
in
hlt
loopne
orl
dec
inc
xchg
pop
and
jle
mov
rclb
push
push
inc
and
mov
dec
and
dec
xchg
andb
inc
mov
adc
or
and
pop
add
and
sub
push
or
js
xchg
xchg
or
sbb
rorb
xchg
clc
sbb
sbb
add
adc
bound
je
orb
mov
int3
mov
adc
and
add
dec
sub
inc
and
bound
mov
sahf
and
dec
mov
movsl
ret
add
sbb
push
sbb
or
xor
test
pop
xor
js
mov
inc
sahf
lods
mov
dec
lock
sbb
adc
and
mov
and
dec
adcb
enter
loop
fwait
add
adc
sbb
and
cmp
mov
mov
dec
mov
add
adc
xor
and
sbb
es
and
dec
jp
mov
pushf
inc
lods
mov
and
inc
add
or
xchg
sub
inc
inc
push
mov
nop
and
dec
mov
mov
adc
or
or
push
push
or
mov
pop
and
dec
jl
mov
pushf
inc
scas
mov
and
inc
or
or
xor
ds
dec
pop
mov
andb
stos
xchg
mov
repnz
and
xor
xchg
push
dec
movsb
fsts
mov
ds
mov
inc
jb
jmp
arpl
push
cmc
pop
stc
leave
sahf
dec
mov
pop
push
or
sbb
jnp
adcl
sub
inc
mov
cmp
sbb
sbb
inc
mov
imul
movsd
idivb
rorb
mov
out
int3
or
xor
mov
mov
push
lret
push
imul
jne
sbbl
scas
aam
cmp
inc
or
arpl
push
or
imul
js
xchg
mov
and
push
xchg
mov
pop
jle
test
shll
sub
dec
sti
hlt
pop
inc
cmpsl
adc
jl
ljmp
enter
jmp
mov
push
and
inc
push
sub
fs
sbb
pop
test
inc
cmpl
hlt
inc
inc
js
lea
les
xchg
pop
jo
jge
lods
jns
jecxz
ds
or
popa
xor
repnz
fs
lret
cltd
sbb
cmp
cmp
cmp
dec
out
dec
bound
pop
jb
out
push
std
jbe
pop
and
mov
movsb
inc
outsl
lea
mov
dec
sti
insb
je
dec
jbe
jo
imul
jmp
push
jl
sub
cmpsb
outsb
rorb
and
xchg
add
inc
push
and
jae
dec
jns
adc
xor
xor
leave
push
or
test
mov
outsb
sahf
rcll
mov
loopne
scas
fidivs
lock
and
add
into
test
outsb
pop
jb
adc
sbb
out
lds
cwtl
adc
pop
imul
dec
dec
push
push
cmp
push
cmp
pop
mov
mov
mov
insl
out
dec
xchg
cld
lahf
push
inc
data16
aad
pop
aam
arpl
mov
xor
addr16
mov
adc
pop
dec
lods
jle
jge
push
jne
enter
mov
jne
lds
in
inc
adc
jle
inc
inc
sbb
fdivs
inc
lods
movsl
insb
popa
push
dec
test
adc
xchg
sbb
outsl
in
inc
mov
ljmp
pop
push
fs
jae
sub
push
xchg
pop
xlat
xchg
arpl
or
sbb
inc
mov
push
cmp
stc
or
push
popa
dec
sub
cwtl
fwait
mov
pop
sub
ss
mov
dec
arpl
push
push
dec
or
jns
jecxz
xchg
arpl
mov
xchg
inc
pop
insl
fldcw
jns
into
adc
jge
je
push
sbb
and
or
pop
and
pop
mov
or
stos
ja
stc
in
arpl
push
repnz
lea
jg
cmpl
dec
mov
or
test
mov
fcmovbe
daa
inc
in
xor
sub
xchg
mov
dec
add
sbb
negb
mov
adc
and
cmpsb
rol
stos
fs
popa
movsb
and
addr16
push
fidivrs
add
mov
jmp
push
inc
adc
in
shl
push
dec
out
xchg
lock
adc
inc
dec
loopne
ss
inc
addr16
ss
into
mov
mov
push
sahf
adc
es
dec
push
xlat
daa
enter
data16
push
push
sub
jmp
adc
lret
push
lods
pushf
or
fcomps
insb
adc
xchg
push
mov
lds
rorb
ret
mov
movsl
lea
movsl
dec
xchg
fisubl
mov
xchg
lret
mov
rcll
sub
mov
push
push
aam
push
cli
jp
and
xchg
mov
or
mov
or
inc
inc
repnz
jno
cli
repz
dec
js
jmp
lcall
push
test
sub
xchg
mov
xor
push
outsl
adc
ss
dec
push
inc
jbe
jae
mov
jno
push
push
cmpsl
ret
enter
sahf
xchg
jge
out
inc
push
inc
sub
lods
add
xor
add
int3
push
add
sub
sub
or
inc
adc
cmpsb
leave
movsb
or
cmc
outsb
add
xor
push
xor
in
cmp
sbb
and
inc
cmp
push
cmp
pop
cmp
cmp
insb
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
or
dec
sbb
dec
sub
dec
cmp
dec
dec
dec
push
dec
pop
dec
bound
dec
jb
sahf
dec
cmpsb
dec
scas
dec
mov
mov
dec
dec
fists
or
dec
ja
mov
in
in
in
cmp
or
and
cmp
outsl
leave
jp
test
leave
xchg
leave
mov
leave
leave
aad
call
clc
xchg
cmp
adc
es
xor
inc
daa
dec
daa
push
daa
pusha
daa
data16
jae
jns
xchg
daa
lcall
daa
les
iret
daa
loopne
out
out
daa
clc
and
cmp
leave
cmp
push
leave
jb
mov
xchg
leave
ror
call
push
cmp
lahf
cmp
leave
in
dec
pop
cmp
jb
jb
jb
jb
jb
jb
jb
sbb
ds
insb
pushf
jb
ficomps
xchg
dec
daa
popa
daa
xchg
xchg
daa
fwait
daa
into
daa
clc
adc
cmp
cmp
inc
cmp
pop
and
sub
xchg
xchg
cmp
cmp
cmp
push
or
and
dec
xor
dec
sub
pop
push
mov
mov
aam
or
insl
mov
fs
in
in
in
in
in
in
cmp
push
cmp
cmp
jl
test
mov
nop
cmp
xor
dec
dec
fwait
dec
mov
xor
dec
xchg
ja
nop
xchg
test
xchg
fcoml
lret
in
in
addr16
add
and
cmp
leave
xor
push
leave
push
into
push
cmp
dec
push
dec
addr16
jle
xchg
dec
int
jb,pt
sbb
aas
push
pushf
and
bnd
jb
jb
jb
jb
jb
jb
cltd
or
push
pushf
cmp
pop
cmp
cmp
lods
jb
jb
sbb
xor
jae
mov
and
xor
pop
leave
pusha
leave
imul
xchg
notl
enter
push
jo
jbe
jnp
and
lahf
in
in
in
in
in
in
in
cwtl
imul
cmp
into
cmp
cmp
push
pop
cmovle
dec
push
dec
pop
dec
bound
dec
xchg
dec
lods
dec
roll
das
xchg
push
xchg
bound
cmp
aas
lahf
xchg
pushf
inc
add
add
mov
push
jns
xchg
dec
mov
iret
inc
sbb
cmp
in
jp
in
lcall
imul
pushf
mov
mov
jmp
cmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
sub
in
in
in
in
in
cmp
cmp
insl
cmp
mov
mov
pushf
rcrl
cmp
xor
dec
daa
push
daa
addr16
jae
andb
daa
lahf
daa
stos
daa
mov
daa
fisubl
loop
ljmp
ds
adc
sbb
and
sub
xor
cmp
dec
leave
dec
leave
push
leave
pop
leave
leave
push
pusha
jp
and
in
fcompl
xchg
mov
mov
xchg
rclb
ljmp
jb
jb
jb
jb
jb
jb
jb
dec
inc
lods
cmp
pop
cmp
push
jb
jp
cmpb
and
mov
pushf
lret
push
and
add
xor
pushf
dec
xchg
pop
push
les
ret
mov
nop
daa
cwtl
daa
mov
rcrl
rclb
call
clc
jo
xor
lods
pushf
sub
inc
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
pop
mov
shl
fsub
loopne
call
clc
sbb
adc
sbb
sbb
imul
dec
leave
push
leave
pop
leave
pusha
leave
push
and
in
in
in
in
in
in
in
in
in
in
in
in
lcall
and
pushf
dec
pushf
push
xchg
push
dec
pop
pop
cmpsl
pop
fs
xchg
test
mov
mov
mov
xchg
les
rclb
or
adc
adc
sbb
sbb
and
and
sub
sub
inc
in
in
in
lcall
jl
xorb
mov
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
arpl
jl
sbb
and
sub
xor
cmp
leave
jl
or
leave
mov
mov
mov
enter
aam
fsubrs
cmp
add
imul
and
je
mov
leave
cmp
inc
leave
inc
leave
dec
leave
pop
leave
js
or
leave
mov
mov
nop
leave
xchg
leave
cwtl
leave
pushf
leave
mov
leave
fmul
loopne
in
call
lock
hlt
pushf
clc
pushf
cld
xchg
sub
xor
cld
pushf
cmp
inc
pushf
inc
pushf
dec
pushf
dec
pushf
push
pushf
push
pushf
fs
test
pushf
cwtl
pushf
pushf
pushf
mov
pushf
lods
pushf
mov
sub
fxtract
leave
clc
leave
cld
lret
cmpl
xor
cmp
inc
leave
inc
leave
dec
leave
dec
leave
push
leave
push
leave
pop
leave
pop
leave
insb
leave
mov
xchg
leave
cwtl
leave
pushf
leave
mov
leave
lods
leave
mov
mov
enter
mov
jbe
jb
jb
loopne
jb
dec
or
dec
adc
dec
inc
dec
dec
cmpsl
sub
and
mov
jb
jb
jb
jb
jb
jb
dec
mov
push
mov
enter
or
adc
sbb
and
sub
pusha
xchg
fs
push
xchg
je
js
jl
adcb
xchg
rclb
ror
aam
fmul
fmul
in
mov
sbb
sub
sub
test
leave
push
leave
js
jl
or
leave
mov
mov
nop
leave
test
enter
aam
fmul
fmul
loopne
in
cmp
add
jb
jb
jb
push
xor
lret
cmp
inc
sub
movsb
pushf
dec
pushf
pusha
pushf
sbbb
xchg
pushf
cwtl
pushf
pushf
pushf
mov
push
mov
call
icebp
dec
stc
pop
cmp
loope
mov
cmp
shll
dec
leave
dec
int
rorl
dec
dec
loope
in
jmp
in
cmc
in
in
in
cmp
lcall
leave
popa
leave
imul
add
and
sub
jb
pop
insl
cmp
cmp
jb
jb
jb
push
test
jo
adc
aam
xchg
aas
xchg
bound
scas
xchg
rcll
dec
xchg
outsl
xchg
mov
out
cli
nop
sub
cmp
push
in
in
mov
xor
scas
pushf
pushf
xchg
out
adcl
xor
fs
in
lcall
mov
int3
pushf
aad
push
cltd
sub
mov
dec
testb
adc
xchg
pop
xchg
addr16
jne
mov
aad
scas
bswap
and
jbe
jge
push
je
push
jns
xor
xchg
cmp
cmp
mov
into
daa
aad
fbld
in
in
daa
mulb
sti
and
ds
leave
or
adc
pop
leave
push
leave
and
sub
das
leave
xor
inc
xchg
inc
sbb
outsl
leave
jne
jge
xchg
in
in
mov
daa
cmc
daa
and
adc
leave
pop
sub
cmp
and
add
add
and
mov
leave
imul
mov
add
mov
inc
jb
sbb
xor
pushf
and
pushf
inc
pushf
push
pushf
pop
pushf
xchg
pushf
mov
into
push
and
sbb
data16
xchg
leave
popf
je
lret
in
in
in
and
cmp
dec
mov
lods
leave
ror
sub
pop
cmp
cmp
arpl
jb
cmpb
and
enter
mov
ret
jb
pop
fildl
or
into
pop
dec
pop
dec
pusha
daa
test
insb
daa
jo
je
js
jl
adcb
mov
mov
mov
les
rclb
test
bound
or
adc
cmp
mov
push
mov
mov
xchg
fs
mov
leave
js
jl
test
mov
nop
leave
xchg
arpl
mov
dec
int3
dec
rorb
dec
fmull
add
ljmp
adc
sbb
and
in
in
in
mov
inc
dec
pop
int3
pop
lret
dec
js
into
test
mov
nop
daa
cwtl
and
mov
lods
aam
pop
ror
daa
aam
fcoms
xchg
call
sub
dec
shlb
pop
jb
jb
dec
ja
sub
daa
cmpsl
and
xchg
rcll
lock
cli
xchg
add
dec
jb
pop
and
cmp
cmp
dec
cmp
cmp
xchg
xchg
cmp
iret
cmp
push
or
adc
sbb
dec
and
rcll
mov
stos
xchg
sub
bound
lock
in
in
in
in
in
in
in
in
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
daa
pop
xchg
push
jb
jp
andb
sub
ficomps
xchg
in
dec
out
leave
ror
fcmove
loop
ljmp
aaa
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
pop
push
pop
push
inc
jb
jp
orb
xchg
dec
lcall
dec
mov
dec
rorb
dec
loop
ljmp
dec
mov
sarb
gs
nop
aam
shrl
cmp
and
es
inc
xchg
push
dec
repnz
xor
xor
sbb
xchg
xor
daa
jmp
xor
sbb
mov
mov
push
xchg
out
xchg
imul
es
mov
mov
dec
add
pushf
jo
sahf
xchg
les
dec
fbld
clc
leave
dec
add
mov
xchg
push
aam
ret
mov
xchg
js
xor
nop
pop
cmp
in
in
push
cld
jb
dec
pop
cmp
mov
inc
cli
cmp
shr
push
icebp
xorl
dec
pushf
dec
scas
push
cmovb
inc
call
mov
cmc
enter
cmp
cmp
pop
pop
and
rolb
pusha
lods
divps
xor
jb
jb
mov
leave
inc
js
es
xchg
sahf
dec
ds
dec
fisttps
dec
add
xor
cmp
dec
cmp
push
cmp
and
sbb
pushf
movsl
pushf
stos
pushf
scas
pushf
mov
fldt
popa
adc
push
cmp
xor
insb
in
in
in
in
in
in
cmp
imul
dec
cmpsl
outsb
jo
jnp
xchg
mov
daa
push
xchg
outsl
in
in
in
mov
sbb
pushf
icebp
mov
sbb
xor
push
andl
out
xchg
sti
clc
nop
jb
dec
push
or
aas
shll
fs
jnp
xchg
in
mov
push
xor
xchg
or
xchg
lock
and
je
dec
push
pushfw
dec
lret
xchg
ret
lock
xchg
sahf
jb
inc
je
in
repnz
in
mov
sbb
xchg
daa
xchg
daa
fwait
and
aad
add
xchg
insl
xchg
je
jle
je
and
stos
in
mov
jb
jb
pop
or
pop
in
mov
pop
iret
aas
call
lock
xchg
fcoms
enter
cs
lock
sahf
scas
sbb
xchg
mov
stos
enter
in
or
nop
cmp
inc
leave
push
js
cmp
jp
pushf
scas
pushf
xchg
daa
dec
sub
dec
push
shrl
adc
nop
call
and
xchg
cmp
imul
xchg
and
xchg
jbe
mov
mov
pop
test
push
nop
rcrl
cmp
jb
jb
sbb
cmp
mov
dec
cs
dec
or
or
and
lret
xchg
dec
movsb
daa
shl
daa
cmp
leave
sti
leave
sub
jl
pop
imul
mov
xchg
loop
out
ljmp
xchg
cli
xchg
incb
sbb
xor
dec
or
dec
adc
dec
sbb
dec
and
dec
sub
adc
leave
ss
cmp
ds
inc
leave
inc
leave
dec
leave
dec
leave
push
leave
push
insb
scas
and
ret
pushf
push
outsb
pushf
jb
jbe
js
xchg
test
lods
jl
mov
xchg
sub
push
sahf
pop
orb
test
mov
mov
lods
mov
sub
nop
ficomps
dec
out
xchg
out
push
xchg
adc
mov
lcall
push
sahf
adc
mov
push
xchg
test
cs
cmpsb
sub
test
pop
stos
dec
inc
ret
push
scas
adc
mov
data16
and
leave
jp
jle
or
sub
mov
dec
xchg
dec
xchg
dec
lcall
stos
push
into
adc
test
ret
lret
rcl
lods
fmuls
fisubs
loop
shr
daa
out
daa
repnz
loopne
xchg
rcrb
pushf
or
pushf
sbb
pushf
sub
divb
jb
jb
dec
dec
ret
push
push
xchg
push
xchg
pop
push
or
or
outsb
xchg
jb
movsb
jp
jle
or
leave
mov
mov
xchg
leave
xchg
leave
lcall
leave
stos
xor
mov
mov
mov
lcall
dec
dec
fimull
dec
loop
out
lcall
jb
dec
incb
xchg
push
xchg
adc
push
jb
jb
jb
dec
cs
jb
ss
pop
inc
dec
dec
dec
dec
dec
push
dec
push
dec
pop
dec
pop
dec
bound
dec
push
outsb
dec
jb
js
leave
jle
or
sub
test
dec
lcall
dec
stos
loope
mov
mov
mov
leave
fs
in
sahf
scas
sbb
xchg
xor
push
cmp
push
inc
sub
cmp
cmp
push
cli
mov
jo
sbb
es
xchg
dec
xchg
push
daa
insb
daa
jno
jbe
dec
mov
out
mov
and
cmp
cmp
aas
dec
das
fs
nop
daa
mov
out
hlt
xchg
inc
and
test
xchg
or
movsb
inc
xor
jbe
dec
cs
outsl
pushf
sbbl
pop
ljmp
mov
xchg
mov
add
and
insb
in
in
xchg
ss
jb
dec
fldl
xchg
or
jb
dec
je
xchg
mov
sbb
pushf
lods
xchg
mov
cmp
das
jnp
incb
mov
and
insb
pop
jg
add
or
and
aaa
or
sbb
sub
cmp
push
jne
addl
lock
xchg
xor
pushf
and
xchg
xor
sahf
jbe
movsl
in
in
rolb
dec
fiaddl
cmp
xchg
cmp
mov
mov
jmp
cmc
in
in
pop
cmp
cmp
cmp
jle
icebp
in
in
and
cmp
xchg
xchg
daa
mov
lods
es
sub
aaa
dec
inc
dec
push
pop
add
jo
xor
inc
shlb
pusha
xchg
jge
mov
adc
leave
adc
mov
cmp
sbb
sub
xor
scas
xchg
ret
mov
in
cmp
pop
and
or
daa
pushf
inc
xchg
pop
dec
cld
outsb
dec
mov
fadd
daa
out
mulb
test
cmp
cs
lcall
leave
in
in
and
inc
leave
sbb
mov
xor
pushf
pusha
pushf
imul
mov
inc
jmp
and
sbbb
push
and
pop
mov
out
repz
push
adc
sub
popa
sub
xchg
or
xchg
loope
mov
sub
lock
pop
in
in
sahf
shlb
xor
pop
xchg
pop
xchg
jecxz
call
hlt
push
or
pop
dec
aas
dec
dec
loope
imul
cmp
and
dec
mov
lcall
dec
jp
jb
dec
test
xchg
pusha
jb
cmp
cmc
enter
pop
pop
mov
add
or
movsl
push
and
mov
dec
jbe
pop
outsb
push
jbe
je
movsl
push
movsb
shlb
jmp
enter
pop
dec
sysenter
dec
and
add
sub
cwtl
xchg
mov
pop
xor
push
jb
dec
pop
divl
inc
jb
jb
dec
pop
ret
testb
leave
mov
cmp
cmp
daa
testl
cs
cmp
aas
leave
dec
leave
push
leave
popa
leave
imul
mov
pop
das
mov
mov
ss
or
pop
loope
cmp
dec
leave
push
cmp
test
fmul
leave
or
out
adc
sbb
xchg
xor
pushf
mov
shlb
fmulp
call
fadds
dec
or
rcr
jb
pop
mov
loop
dec
roll
ss
jb
jb
jb
jb
jb
pop
lds
call
push
insl
rcll
jl
pop
sbb
xchg
jmp
mov
leave
lret
cmp
push
add
inc
pop
xor
dec
push
push
cmp
cmc
xchg
adcl
jo
dec
mov
or
mov
movsb
mov
sbb
cs
mov
xchg
jo
dec
flds
xor
and
jb
jb
dec
mov
out
add
xchg
andl
add
bswap
sbb
cmp
lcall
inc
nop
sbb
dec
push
and
dec
jnp
xchg
mov
daa
pop
out
ss
push
and
mov
lods
mov
in
icebp
and
xor
leave
aaa
leave
inc
fs
insl
in
in
lcall
dec
or
jmp
sbb
daa
jb
push
das
mov
popf
test
clc
dec
jb
adc
push
loope
jo
fucom
icebp
mov
xchg
in
mov
xchg
leave
mov
leave
jecxz
xorl
jbe
mov
cmp
mov
push
test
xchg
outsl
xorl
lea
aam
xchg
in
mov
inc
inc
sarl
push
pop
push
cmp
cmpsl
in
outsb
cs
add
ret
xlat
and
sub
inc
orb
loope
sahf
pop
sbb
fwait
dec
scas
fcoms
cmc
adc
ds
push
jb
jb
dec
sbb
mov
mov
in
xchg
test
xor
insl
mov
lcall
sarl
shlb
mov
insb
xchg
dec
sbb
xchg
hlt
mov
sbb
xchg
andb
ljmp
cmpsl
leave
in
and
xor
clc
inc
fs
test
dec
out
mov
stos
daa
lock
cmp
ret
jl
or
push
pop
mov
sbb
test
cmp
sub
pop
gs
daa
jnp
push
daa
icebp
and
clc
fs
jns
push
inc
or
xchg
pop
xchg
add
push
cli
mov
dec
dec
incl
cmp
push
ds
xchg
test
test
daa
add
xchg
cmp
jae
jo
cltd
pushf
lods
pushf
mov
mov
pop
call
xchg
gs
mov
pop
inc
pop
sbbb
pop
and
clc
daa
xor
rorb
stos
inc
fsubrl
leave
cmp
mov
mov
lcall
push
in
add
in
or
sub
add
pop
lods
ss
daa
mov
mov
xor
push
movsb
adc
imul
add
sbb
push
pop
scas
or
cmc
mov
push
lret
pushf
and
pusha
nop
lock
cmp
insl
aam
sbb
xchg
mov
sbb
pop
daa
cmpsb
and
rorl
in
xchg
pop
pop
or
ret
jmp
out
fdivr
jbe
push
cmp
pushf
jp
adcl
fdiv
sbb
in
call
cmp
xchg
dec
test
inc
or
fdivs
sbb
aas
inc
pushf
lea
popf
dec
mov
inc
nop
or
jnp
push
cmp
ror
enter
in
xor
xor
jmp
hlt
enter
inc
jb
jb
jb
jb
dec
pop
cmpb
out
cmp
daa
add
fadd
es
add
in
in
xchg
inc
pop
xchg
push
mov
rolb
loop
mov
mov
cmpsb
daa
rcrb
sbbl
outsl
and
xchg
std
xchg
adc
sbb
pushf
pop
mov
mov
push
aad
fiadds
xor
mov
jb
dec
inc
vcmpps
inc
cmp
sarb
add
xchg
xor
xchg
add
pop
push
data16
xchg
mov
subb
and
or
pmulhw
push
pop
in
in
popf
test
mov
xchg
cmp
cmp
pushf
pop
pushf
jns
lds
pop
es
push
pushf
pop
pushf
imul
mov
mov
mov
mov
test
cmp
cmp
cmp
cmp
cmp
jno
cld
jb
jb
jb
pop
loopne
shlb
xor
dec
jb
jb
jb
jb
sbb
xor
pushf
cmp
xchg
cld
jle
adc
cli
or
test
adc
cmp
mov
xor
mov
lds
pop
stos
dec
stc
jle
in
call
je
popa
daa
xor
mov
or
ljmp
scas
inc
cli
loopne
sti
outsb
push
add
dec
push
daa
js
daa
sahf
daa
mov
cmp
push
fcmovbe
dec
and
mov
or
loopne
xor
out
shlb
pop
addb
sbbl
test
mov
mov
sbb
xchg
jecxz
mov
rcrl
or
push
jecxz
cmp
inc
cmp
pop
bound
mov
in
in
mov
and
daa
and
mov
lahf
add
loop
pop
mov
gs
in
xchg
cmp
or
daa
sti
and
leave
inc
leave
pop
leave
jns
js
xchg
jb,pt
jb
jb
loopne
nop
cmp
js
cmp
cmp
sub
dec
cmpb
and
js
das
xchg
add
xchg
shr
mov
sbb
xor
mov
push
je
cmp
cmp
pop
ds
mov
inc
xchg
inc
push
pushf
mov
movsb
mov
jp
pop
dec
dec
mov
dec
int3
sub
sub
cmp
xor
inc
call
out
in
in
inc
jle
ret
out
or
adc
cld
pop
and
mov
mov
xchg
cmp
aam
js
dec
insb
push
call
xchg
push
and
dec
xchg
push
cli
pushf
dec
mov
lods
imul
enter
push
in
lcall
cmp
xor
cld
cmp
jo
pop
pop
orl
push
pop
je
push
jl
push
push
test
pop
mov
pop
sub
insb
mov
mov
fs
mov
push
or
inc
in
call
jbe
sub
xor
cmp
fimuls
pop
pop
mov
and
sub
and
movsb
xchg
push
mov
sbb
and
aam
add
add
les
pop
push
mov
dec
xor
clc
cmp
jo
xor
sub
mov
jl
pushf
test
in
xchg
sbb
pushf
mov
lods
in
in
mov
sbb
pushf
sarb
fs
movsl
bound
sub
sub
leave
dec
insb
into
cmp
and
mov
push
push
xchg
cmpl
dec
test
stos
mov
mov
and
mov
shrb
xchg
cld
pop
lods
sbb
xchg
or
mov
push
pop
jb
dec
inc
or
sar
pop
push
or
pop
push
into
pop
pusha
adc
xchg
insb
fisubrs
repnz
loop
fcoms
pop
movsb
push
sbb
mov
inc
pop
enter
imul
inc
cmp
xor
sbb
imul
adc
cwtl
and
dec
mov
and
inc
jmp
mov
pop
clc
insb
inc
add
or
mov
adc
push
push
jl
sbb
push
aas
and
jo
enter
nop
repnz
call
push
dec
sbb
bound
adc
adc
push
inc
fsubrs
push
pop
jo
fsubrl
mov
and
mov
xchg
pushf
and
nop
xchg
jo
jo
outsb
inc
sub
or
loopne
fsts
sbb
adc
inc
orl
addl
xchg
mov
je
jne
jb
fs
pop
jne
pushf
imul
or
insl
jae
inc
sub
arpl
add
int3
enter
loopne
xchg
gs
push
or
mov
adc
pop
imul
cmp
and
pop
cltd
inc
jae
adc
cmpsb
dec
push
outsb
adc
or
jb
adc
lcall
dec
mov
inc
inc
cmpsb
mov
daa
or
xchg
add
push
cli
xor
popa
popa
xor
or
pushf
xor
push
adc
add
pop
push
xchg
push
sbb
gs
or
movsb
jle
or
or
aad
clc
sub
push
test
pushf
je
sbb
mov
int
test
scas
push
push
sbb
imul
dec
sub
fs
fadd
popf
cwtl
xchg
je
pop
push
adc
xchg
imul
je
popf
jo
test
push
outsl
sub
inc
xchg
push
imul
outsl
dec
jb,pt
adc
xor
mov
gs
adc
test
and
push
dec
sub
mov
xchg
call
xchg
push
pop
push
jo
dec
and
into
outsb
and
mov
jne
test
xor
dec
push
dec
insb
repnz
insb
dec
push
and
or
lods
mov
add
movsb
scas
int3
add
mov
adc
mov
andb
arpl
jae
xchg
jbe
mov
mov
scas
xor
popf
sub
sub
push
insl
mov
push
js
cmpsb
mov
or
sbb
xor
add
loop
call
and
mov
pushf
movsb
adc
aaa
fs
mov
dec
xchg
push
sub
dec
jp
xor
push
cmp
push
pop
arpl
cs
shlb
mov
sbb
dec
pop
fiaddl
rcll
pop
into
push
or
cli
inc
imul
ss
or
push
push
cmp
jns
je
push
mov
xchg
jbe
fsubs
aam
popf
hlt
ss
and
push
push
shlb
divb
sub
or
adc
movsb
push
arpl
xor
xor
lret
jmp
cmpsb
push
mov
cltd
push
bound
cmpsb
hlt
pop
push
scas
dec
sbb
cmpsb
push
icebp
dec
test
and
dec
xor
std
lret
jae
sbb
add
push
adc
jo
push
push
dec
inc
sbb
add
dec
lcall
mov
pop
inc
cmp
push
inc
and
adcb
dec
data16
sbb
adc
or
rcrb
mov
dec
into
pop
mov
mov
lretw
sub
sub
movsl
or
pop
in
jo
sub
jns
pop
in
and
adc
dec
fs
xchg
sub
negb
ljmp
or
inc
fsts
jne
out
adc
inc
jb
loopne
pushf
mov
sub
loopne
pushf
js
cltd
hlt
bound
les
xor
loopne
cmpsb
fmuls
arpl
push
inc
dec
adc
lret
rcrb
adc
das
dec
dec
outsl
inc
dec
sub
and
fs
inc
push
push
movsl
add
cmp
xorb
repz
inc
add
fwait
cmp
sbb
or
dec
cld
js
add
aad
cmp
xor
scas
ss
aam
ret
cmc
mov
inc
inc
push
jp
test
sub
xor
pop
inc
jecxz
pop
push
cwtl
imul
inc
outsl
outsb
sbb
sbb
jg
pop
popf
stos
pop
pop
push
push
dec
pop
pushw
mov
mov
lods
test
imul
inc
mov
cli
bound
cltd
je
dec
inc
cltd
jo
dec
sbb
gs
stos
push
xor
data16
push
push
and
popf
repz
jo
and
inc
push
lock
inc
sub
sbb
cmc
popa
dec
sbb
xchg
sbb
cs
push
pushw
popa
adc
mov
movl
sub
lock
xor
jp
pop
icebp
dec
xor
xchg
and
xchg
xor
lock
out
jge
mov
adc
inc
mov
rorb
sbb
arpl
push
insl
adc
cmc
imul
addr16
sbb
adc
and
jo
jge
fldenv
mov
xchg
xchg
and
dec
outsb
cmp
cmp
or
in
dec
xor
or
jb
mov
inc
cmpsl
ret
pop
mov
mov
aam
enter
pop
imul
inc
push
cltd
push
pop
push
push
and
sub
xchg
idivb
outsb
lds
cmp
lcall
or
add
add
hlt
pop
jmp
fucomp
mull
in
or
add
int3
adc
bts
cmp
add
sub
xor
inc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
xor
int3
push
mov
xor
btr
not
cmp
sub
test
xor
bsf
call
lcall
sub
jno
shlb
ret
mov
neg
xor
btr
call
lcall
add
btr
xor
shl
shr
shl
and
add
call
lcall
add
sub
xor
bsf
xor
sub
bsf
cmp
bsf
call
lcall
xchg
sub
xchg
fdivl
xchg
cmp
mov
not
test
cmp
shr
cmp
call
lcall
test
sarl
movsb
btc
xor
adc
and
dec
call
lcall
neg
btr
add
sub
or
test
call
lcall
not
movzbl
or
and
test
and
bsf
btc
shr
call
lcall
cmpsb
pop
loopne
out
out
es
fs
pusha
cmp
ret
call
call
andl
ret
xor
pop
ficoml
or
or
jge
pop
out
daa
outsb
and
call
pop
cwtl
ljmp
andl
sbb
call
pop
add
cld
add
ret
out
in
mov
fidivl
pop
inc
mov
and
xchg
call
adc
es
popw
or
cmc
out
out
fs
pop
sbb
sbb
fs
out
jb
outsb
pop
adc
fs
sub
add
call
add
add
pushw
mov
call
out
and
outsb
jecxz
call
sub
cmp
pop
ds
or
andl
pop
inc
pop
out
out
adc
lods
in
ret
jecxz
and
sbb
jb
call
pop
sub
push
mov
lahf
frstor
pop
adc
andl
sbb
ret
in
cs
and
sub
mov
push
xchg
adc
pop
leave
xchg
or
pop
pop
pop
out
out
es
fs
pusha
cmp
ret
andl
mov
adc
rcr
test
mov
mov
fs
out
daa
outsb
and
les
daa
or
and
flds
in
sub
or
call
out
out
jge
and
out
in
rol
out
in
mov
in
pusha
xor
call
pop
sbb
subl
adc
inc
sbb
call
adc
out
pop
sbb
sbb
fs
out
jb
outsb
pop
adc
fs
sub
jb
and
xor
push
das
ljmp
or
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
fldenv
outsb
jecxz
and
incb
cmp
ss
js
add
andl
sbb
or
jge
mov
out
out
mulb
fcoml
daa
ja
xor
hlt
clc
mov
outsl
adc
rcrl
xchg
daa
push
addb
sbb
ret
andl
adc
or
lods
adc
adc
xor
hlt
and
adc
out
out
jge
and
out
sub
mov
inc
sub
andl
sbb
call
out
out
fs
pop
in
out
out
adc
sub
pop
mov
shrl
and
mov
pop
data16
add
lods
or
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
lret
ret
daa
or
insb
adc
ret
xchg
adc
push
sbb
nop
insb
adc
push
cmp
or
out
jge
and
out
out
andl
sbb
pop
andl
or
andl
or
out
out
jne
pop
inc
data16
je
mov
cmpsw
repnz
cmp
pop
or
pop
and
add
insb
mov
insb
stos
mull
push
in
in
and
mov
stos
ret
jecxz
sbb
adc
adc
data16
hlt
and
push
and
andl
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
addr16
andl
mov
fsubr
pop
sbb
adc
call
pop
pop
in
out
out
add
andl
aam
adc
sub
sbb
inc
or
lret
ret
andl
call
pop
mov
fildl
adcl
data16
mov
and
outsb
jmp
sub
fs
xor
fists
fbld
sbb
pop
sbb
xor
int3
adc
or
sbb
xchg
ret
out
out
out
or
sub
insb
mov
pop
out
out
daa
and
daa
out
or
sbb
outsb
and
int3
fs
in
out
daa
or
bound
subl
in
outsb
out
subl
out
out
in
ja
xchg
lret
out
adc
negb
shr
sub
adc
adc
sbb
push
pop
roll
out
out
fs
push
imul
out
outsb
add
xchg
jmp
xchg
out
pop
out
out
lcall
psrad
subl
call
in
andl
cmpsb
or
into
stos
call
pavgw
into
mov
in
es
or
or
mov
insb
fwait
ret
ret
insb
xchg
ret
iret
sbb
insl
loope
outsl
loopne
out
xchg
loop
icebp
mov
out
xchg
loop
icebp
mov
daa
out
xchg
loop
icebp
mov
xor
out
out
xchg
loop
icebp
mov
out
xchg
loop
icebp
mov
out
xchg
loop
icebp
mov
out
xchg
loop
icebp
mov
xchg
loope
into
and
mov
inc
pop
out
out
out
xchg
loop
icebp
mov
out
xchg
loop
icebp
mov
pmulhw
out
out
xchg
loop
icebp
mov
out
xchg
loop
icebp
mov
mov
sbb
or
mov
sbb
loope
outsb
and
out
out
xor
mov
out
xchg
loop
icebp
mov
lcall
loop
out
jmp
into
and
mov
sbb
nop
in
es
outsb
sbb
and
mov
sbb
mov
xchg
cmc
fs
and
adc
mov
sbb
int3
mov
ret
sti
xchg
ret
fs
call
or
sbb
or
add
or
jmp
mov
call
rol
fs
andl
call
les
andl
xor
xor
andl
sub
xor
pop
sbbb
out
dec
push
pushw
and
call
es
xchg
adcl
cmp
out
andl
out
out
fs
out
andl
andl
stos
mov
call
insl
sbb
xchg
aam
out
out
fs
loop
in
out
adc
aam
andl
mov
jl,pn
es
notl
andl
sub
out
out
jge
and
pop
mov
xor
add
clc
fiadds
fdivl
adcl
dec
or
insb
push
movsl
out
out
fs
pop
fistl
inc
andl
subl
adc
ret
subl
out
jge
and
xlat
testl
push
cmp
pop
adc
fldl
call
mov
pop
pop
sbb
out
out
jge
and
cmpsl
data16
add
or
data16
repnz
call
data16
lea
out
out
jge
and
scas
xchg
dec
aam
call
das
insb
daa
daa
pop
out
push
mov
jge
sub
mov
out
out
fs
or
rcrb
lock
aaa
fists
lcall
xlat
cmp
addr16
daa
sub
rclb
jbe
mov
aam
sub
aam
cmp
fcmovu
fcmovnu
inc
pop
pop
fistps
fists
mov
pop
adc
fwait
dec
xor
popa
sub
popa
sub
adc
out
cwtl
sub
add
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
fcmovu
fistpl
lret
cmp
mov
test
pop
push
insl
adc
fwait
inc
jle
mov
xchg
sbb
insl
sbb
adc
sbb
cwtl
xor
fisubl
mov
inc
aam
sbb
fiaddl
jle
pusha
or
sub
add
sub
or
mov
mov
out
pop
pop
fcomip
sub
pusha
adc
mov
inc
rcl
popa
sub
sub
or
fcmovnu
fildl
pop
fists
lcall
fildll
aam
sbb
popf
mov
push
movsl
aam
or
sbb
dec
jp
aam
add
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
out
adc
mov
pop
cmp
rolb
mov
mov
aam
and
call
adc
jo
mov
mov
or
bound
jns
sbb
pop
fcmovbe
fs
fnstsw
sub
aam
xor
adc
mov
lock
sbb
cmp
aam
add
popa
xor
iret
lcall
fildll
rcrb
mov
aam
xor
std
mov
loopne
aam
sub
push
push
pop
and
fcmovnu
cltd
loop
scas
and
adc
repz
push
pop
cmp
or
sbb
mov
fisubrl
pop
xor
sub
adcb
xor
mov
pop
and
pop
sub
fcmovu
fcmovnu
inc
pop
pop
fistps
fcmovnbe
pop
lret
fistpl
and
pop
xor
fwait
xchg
arpl
xor
arpl
imul
es
std
pop
aaa
fists
lcall
int
fs
pusha
adc
adc
adc
mov
mov
fcmovnu
fildl
pop
fistps
fists
jmp
and
jo
mov
sbb
fidivrl
pop
aaa
mov
das
and
adc
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
lret
aam
xor
pop
or
pop
mov
sbb
sbb
aam
adc
push
dec
inc
sbb
xor
fcmovnu
fildl
pop
mov
push
mov
mov
sbb
lods
sub
jle
aam
sbb
jo
fsubrs
xchg
imul
es
sbb
pop
mov
popa
and
pop
and
fiaddl
jg
pop
daa
or
idivl
mov
aam
cs
and
out
pop
pop
fistps
in
cmp
pop
sub
push
sbb
aaa
sub
sub
dec
xor
fcmovnu
fildl
pop
fists
lcall
fistps
cmpl
or
sbb
popa
xor
sbb
pop
cmp
data16
and
mov
sbbb
pop
adc
aam
sub
pop
and
inc
mov
mov
sbb
lcall
fistps
mov
mov
cmp
dec
sub
push
ret
aam
and
fcmovu
fcmovnu
inc
pop
pop
fbstp
push
es
pop
adc
outsl
cmp
dec
aad
loope
mov
aam
sbb
sbb
mov
cmp
sbb
pusha
and
popa
cmp
pop
daa
mov
inc
cmp
aas
mov
pop
xor
mov
fcmovnu
fstpt
mov
popa
and
mov
pop
sbb
addps
fists
lcall
cmp
imul
jo
sbb
mov
pop
or
pop
cmp
dec
pushf
mov
cmp
fisttpl
pop
pop
fbld
aam
push
mov
aam
sub
daa
mov
pop
adc
jno,pt
pop
pop
pop
sub
or
insb
lock
and
sbb
push
jne,pt
popa
cmp
pusha
lahf
sbb
mov
aam
sub
xor
or
aam
cmp
mov
mov
lock
xor
fcmovnu
fildl
pop
fists
in
fcmovnu
fstpt
pop
aam
sub
mov
pop
cs
aam
and
imul
pop
sub
aam
sbb
popa
cmp
push
arpl
push
iret
mov
fcmovu
fcmovnu
inc
pop
pop
fists
mov
sub
pusha
fscale
stc
pop
xor
or
sub
cmpb
adc
xor
and
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
fcmovnu
fstpt
sub
pushf
sub
fs
xor
mov
or
sub
lahf
mov
pop
and
and
inc
adc
pop
cmp
out
xor
pop
sbb
mov
sbb
fildl
pop
fists
loopne
pop
sbb
xor
ljmp
sub
ret
in
push
fst
popa
xor
sub
push
rclb
insl
sbb
popa
xor
mov
aam
sub
mov
insb
sbb
mov
fcmovnbe
pop
or
fcmovnu
sbb
xchg
pop
adc
add
mov
mov
pop
or
loope
clc
sbb
pop
cmp
or
sub
pop
sub
cld
sub
mov
fwait
arpl
jbe
stos
pop
cmp
add
dec
fwait
xor
fcmovnu
fildl
pop
fistps
sarl
pop
push
arpl
xor
fnsave
pop
adc
push
cmpsl
sub
and
pop
xor
and
dec
lahf
enter
mov
pop
pop
sbb
jp
jl
sbb
pop
sbb
xchg
xor
fcmovnu
fildl
pop
fistps
fcmovnbe
pop
ss
fdivl
fcmovu
fcmovnu
inc
pop
pop
fistps
daa
push
xlat
jmp
fcmovnu
fisttpl
xor
daa
push
xlat
lcall
fbstp
fldenv
mov
fcmovnu
fsts
sti
push
lahf
call
pop
pop
arpl
fcmovnu
fsubr
sbb
pop
sbb
xor
and
push
pop
mov
lock
fdivs
fcmovu
ljmp
jmp
ficompl
push
sti
xor
push
sti
push
fildl
push
fcmovnu
fstps
dec
cmpl
aam
fcmovu
fcmovnu
inc
pop
pop
fistps
fsubrs
and
fcmovnu
xor
fcmovnu
fildl
pop
lret
aam
xor
popa
xor
aam
sbb
popa
cmp
sub
movsl
jl,pn
aam
aas
das
arpl
mov
call
lcall
fildll
aam
or
popa
and
mov
pop
or
sbb
cmpsl
xchg
int3
mov
mov
call
lcall
fistps
leave
inc
mov
sub
cmp
pop
rclb
mov
pop
sbb
xchg
add
pop
sbb
sbb
pop
sbb
jnp
xchg
sbb
mov
popa
and
mov
xor
and
xor
pop
adc
lea
aas
sbbb
dec
cmp
sbb
fbstp
and
es
loopne
adc
cmp
mov
mov
aam
and
fcmovu
fcmovnu
inc
pop
pop
xor
sub
pop
aad
adc
xor
aaa
pop
cmp
sub
xor
fcmovnu
fildl
pop
jle
fcmovnu
aam
sub
fildll
std
mov
aam
and
pop
cmp
shrl
fcmovnu
inc
pop
pop
fbld
fistpl
mov
pop
es
idivb
movsl
pop
sbb
pop
mov
pop
lcall
fildl
pop
fbld
dec
lods
js
xor
xor
pop
adc
sub
mov
mov
sbb
stos
and
sbb
xor
fcmovnu
fildl
pop
fucomip
lret
mov
popa
and
sub
pop
xor
xor
xchg
popa
sub
pusha
cmp
xor
fcmovnu
fildl
pop
fistps
cmp
push
aam
and
mov
and
int3
test
gs
popa
and
xor
fcmovnu
fildl
pop
fists
aam
sub
aam
sub
and
and
pop
add
xor
xor
fildl
pop
fbstp
fistps
xor
movsl
push
adc
out
loopne
int
testb
add
out
sbb
push
shlb
xchg
into
les
shrb
movsl
xchg
adc
scas
fnstsw
cmpsb
std
icebp
scas
ficoms
daa
or
in
ljmp
inc
insl
das
fldcw
into
scas
out
push
je
jge
out
loopne
bnd
leave
push
insl
and
popf
and
sbb
or
cs
sub
push
movsl
push
and
cs
out
lds
cmp
lds
lds
cs
out
lds
stos
dec
rcrl
lds
lods
dec
cmpsl
push
lds
push
cmpsl
cs
mov
lds
mov
adc
stos
xchg
das
cs
das
cs
ljmp
lods
ljmp
mov
mov
lods
cs
xor
cs
ljmp
shlb
mov
mov
das
cs
ljmp
lds
sbb
or
cs
sub
push
movsl
push
and
cs
out
lds
cmp
lds
lds
cs
out
lds
stos
dec
rcrl
lds
lods
dec
cmpsl
push
lds
push
cmpsl
cs
mov
lds
mov
adc
stos
fldcw
cs
ljmp
rcrl
jae
fcmovnb
das
cs
ljmp
stos
clc
cs
arpl
lods
ljmp
shlb
das
cs
ljmp
cmpsl
and
lds
das
cs
ljmp
or
or
das
mov
mov
movsl
cmp
lods
ljmp
xchg
sub
stos
in
movsl
in
and
imulb
bound
movsl
sub
lods
ljmp
rcrl
dec
or
cs
sub
push
movsl
push
and
cs
out
lds
cmp
lds
lds
cs
out
lds
stos
dec
rcrl
lds
lods
dec
cmpsl
push
lds
push
cmpsl
cs
mov
lds
mov
adc
push
rcl
shll
sub
das
cs
ljmp
rcl
rorl
shr
out
int
stos
ljmp
mov
scas
rcrl
scas
and
xchg
int3
jp
rcrl
cs
cmc
aaa
and
scas
out
sbb
orb
push
jge
leave
push
and
rorl
xchg
aam
scas
in
xor
ret
add
and
mov
and
das
lcall
inc
dec
and
dec
scas
fbstp
push
adc
xchg
fbld
xor
in
subb
das
cs
ljmp
enter
in
scas
jmp
and
xchg
aad
scas
shl
mov
mov
scas
fbstp
insb
jg
xchg
addr16
setg
xchg
shlb
test
dec
scas
fbld
and
sbb
scas
fstp
jns
cmp
xchg
fldt
scas
int
call
lds
sbb
or
cs
sub
push
movsl
push
and
cs
out
lds
cmp
lds
lds
cs
out
lds
stos
dec
rcrl
lds
lods
dec
cmpsl
push
lds
push
cmpsl
cs
mov
lds
mov
adc
das
cs
ljmp
scas
lret
pop
xor
stc
jnp
jmp
in
push
test
pop
dec
and
addb
lods
ret
sbb
and
orb
std
dec
scas
ret
mov
scas
out
sbbb
and
addr16
cs
ret
fldlg2
divl
scas
ffreep
adc
in
sub
sub
sbb
jecxz
scas
shll
scas
jp
push
cmpsl
scas
jecxz
jge
and
dec
scas
rol
adc
mov
popf
int
les
xchg
leave
and
and
xchg
in
sbb
das
cs
ljmp
or
out
scas
loope
loopne
jmp
scas
int3
adc
stos
and
aaa
jbe
rol
sub
sbb
or
cs
sub
push
movsl
push
and
cs
out
lds
cmp
lds
lds
cs
out
lds
stos
dec
rcrl
lds
lods
dec
cmpsl
push
lds
push
cmpsl
cs
mov
lds
mov
adc
les
scas
stc
shrb
mov
xchg
hlt
scas
clc
dec
arpl
scas
fbld
popa
and
cs
ljmp
ror
jo
and
cwtl
int3
pusha
scas
int3
jl
rolb
iret
shrl
dec
scas
ret
test
scas
in
sbb
or
sbb
adc
dec
fyl2xp1
dec
hlt
mov
cs
ljmp
or
xchg
hlt
dec
scas
xlat
xlat
movsb
dec
out
lret
and
fmull
rcrb
or
in
lds
mov
jle,pn
pusha
imul
loop
loop
inc
adc
add
loope
add
push
pmulhuw
mov
inc
sub
rolb
add
inc
or
adc
or
sbb
cmpsb
and
setge
imul
mov
mov
cli
xchg
xor
jno
jle
adc
pop
sub
iret
cs
add
mov
aad
movd
sub
mov
push
leave
xor
push
add
imul
pusha
shlb
mov
dec
add
push
add
rcll
add
push
dec
mov
add
adc
push
xor
and
addb
sub
add
fldenv
xchg
xor
call
cmp
push
icebp
or
cmp
push
add
or
add
pushf
adc
aam
repz
sbb
or
and
clc
sub
push
mov
or
dec
aam
gs
ret
sbb
jns
inc
adc
rclb
ja
ret
adc
lret
push
adc
jae
inc
push
fstl
call
push
jmp
mov
inc
xor
jmp
add
jb
dec
push
rolb
int3
incb
sub
xchg
inc
jo
ret
add
xor
push
dec
pop
jne
cmp
sbb
dec
push
sbb
pop
inc
push
inc
pop
push
fmulp
xor
pop
push
dec
ficoms
hlt
jno
add
inc
inc
dec
inc
xor
xor
inc
iret
sbb
push
cltd
dec
dec
fsts
sbb
or
sbb
shll
xor
dec
inc
nop
dec
dec
inc
pop
bnd
rsqrtps
pop
iret
xor
xor
push
sbb
cmp
mov
cmpl
dec
lcall
xor
dec
pop
int
pushf
pop
pop
push
in
adc
stc
adc
dec
aad
xor
add
inc
push
cmp
inc
pop
das
xor
inc
dec
xor
cmp
push
mov
jb
aas
cmp
cmc
testl
outsb
pop
xor
mov
add
jne
pop
add
jne
push
jb
shll
mov
outsb
negl
stc
sbb
jne
jb
hlt
or
add
popa
jns
negl
push
js
in
je
mov
dec
jl
push
repz
cld
gs
jg
xor
adc
dec
jno
or
inc
bound
push
nop
push
int
jb
leave
js
mov
adc
xor
and
mul
lock
aam
jnp
aas
inc
jae
dec
je
jecxz
sbb
push
addr16
js
aaa
ja
cmpsb
push
outsb
int3
dec
bound
xor
ja
subl
jo
add
jnp
push
mov
jbe
cwtl
jne
outsw
ljmp
arpl
sbb
ds
sbb
push
fiadds
dec
mov
mov
dec
jge
xlat
sahf
fs
and
add
pop
stos
jb
inc
jno
out
jns
cmpsl
jae
imul
movsb
std
std
repz
jno
sbb
push
jns
stos
adc
mov
xor
fucomp
jb
and
fldcw
in
sub
fdivs
and
push
js
and
push
xor
xor
shll
aad
pushf
mov
stc
cmp
das
enter
iret
add
push
loop
add
pop
mov
sub
pop
repnz
push
in
movsb
pop
fistl
insl
or
fs
ds
cmp
enter
je
jns
cmp
movsb
sub
dec
sti
outsb
add
cmp
lea
dec
and
fmul
sbb
adc
fiadds
jmp
xchg
inc
and
and
insl
nop
mov
insb
mov
sub
es
dec
push
lock
out
scas
or
incl
repz
mov
inc
and
and
das
pop
mov
adc
jns
pop
inc
arpl
insl
scas
xorl
adc
push
sub
leave
jmp
mov
movsb
call
push
dec
inc
push
push
or
inc
pop
mov
xchg
fs
or
dec
inc
add
pop
