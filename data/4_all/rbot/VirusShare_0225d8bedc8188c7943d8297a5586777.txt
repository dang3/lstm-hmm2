pop
cmp
xchg
test
xchg
mov
jb
or
push
fs
lea
adc
sbbl
dec
loop
stos
shl
cmp
dec
xchg
sbb
std
sti
leave
pop
cmpsl
fbstp
insl
adc
mov
lock
jnp
sbb
fs
incb
push
sub
xor
test
js
adc
loope
cmp
pop
jge
cmp
dec
push
std
cmp
rcrl
xchg
cltd
cmp
sub
arpl
das
xchg
push
xor
test
rorb
pushf
mov
push
test
lods
or
push
les
leave
cmp
in
into
imul
in
mov
test
inc
xchg
add
fwait
cltd
and
sbb
shll
fistpl
sbb
lcall
push
ret
faddl
fistpl
pop
in
push
mov
iret
movsb
inc
dec
inc
cmp
ja
fsts
mov
jne
cltd
cmp
int
mov
cmp
mov
ffree
or
clc
mov
lea
mov
sub
pop
cmp
out
loop
add
pop
insb
sub
das
sub
jo
mov
or
sub
push
test
sub
cmp
mov
mov
sti
mov
mov
pop
inc
fsubr
nop
pop
dec
jae
mov
pop
test
adc
mov
filds
push
inc
inc
loop
lods
jae
lock
loop
testb
loop
scas
cli
inc
or
mull
lods
enter
icebp
mov
outsb
cmpsb
sub
lods
xchg
scas
inc
push
test
fldcw
sti
mov
jne
loopne
and
outsl
es
pop
jmp
imul
sbb
mov
xorl
sub
or
loope
outsl
outsb
mov
inc
test
loop
inc
lods
push
inc
vhsubpd
rcll
stos
das
jecxz
stos
insb
mov
push
test
cmp
sarb
fmull
sbb
jno
loop
xchg
in
xchg
test
dec
push
adc
mov
les
btc
rcrb
mov
ljmp
cmp
test
adc
enter
clc
push
mov
mov
test
xchg
insb
adc
aas
pop
and
cltd
or
cld
adc
xchg
push
mov
xor
scas
ljmp
stos
inc
push
inc
push
movsb
test
dec
into
jbe
adc
dec
shlb
fimull
out
inc
mov
dec
mov
cmp
rclb
aad
jae
xchg
sbb
jne
cld
sub
std
scas
push
xchg
dec
dec
mov
ret
sub
and
push
shlb
into
movsb
sbb
sub
pop
cmpsl
shl
sbb
adc
xchg
mov
fmull
push
dec
sbb
mov
mov
scas
pop
mov
xor
out
mov
loope
mov
pop
and
loopne
add
das
mov
mov
jle
cmc
cmp
data16
xor
jo
cmp
popa
mov
adc
js
movsb
loope
int
icebp
int
fdivs
sub
in
pop
fcomps
jmp
sub
and
fstps
mov
insb
push
outsb
sbb
sbb
cmp
adc
or
rolb
adc
jae
inc
push
in
push
jb
iret
xchg
divb
add
mov
movsl
sbb
cmp
lea
dec
or
movsl
cs
xchg
add
je
pop
lret
lea
push
test
stc
mulb
cwtl
es
hlt
std
push
je
pop
or
sbb
inc
sub
cs
push
lds
into
jge
movsb
shll
dec
lods
ja
outsb
push
bound
testl
dec
ds
jle
je
or
nop
or
not
mov
cmpsl
jp
movsb
mov
in
shl
cli
xchg
inc
push
repnz
mov
fwait
xor
xor
rorl
add
cmp
xor
das
aaa
nop
cmp
pop
xchg
fistpl
cmp
pop
dec
addb
cmpl
out
adc
movsb
xchg
push
sbb
pop
sub
mov
push
fld
push
or
push
inc
test
or
inc
and
lock
cli
lds
addr16
cmp
mov
mov
test
xchg
pop
inc
add
lret
inc
adc
push
mov
dec
lods
cmp
sbb
mov
lods
ja
les
mov
inc
mov
jae
stos
mov
insl
jge
stos
gs
out
repnz
or
and
sahf
jne
add
ja
scas
sub
and
repz
and
add
int
xlat
mov
sub
fcoml
mov
out
xchg
in
imul
cmp
es
mov
and
lock
sar
push
mov
pop
push
push
add
pop
cmp
je
push
js
cmp
pop
push
push
push
push
lea
push
push
push
push
xor
push
mov
pop
mov
xchg
push
jge
add
pop
test
and
push
push
mov
pop
pop
nop
jo
jnp
jle
inc
dec
stc
stc
mov
xchg
xchg
or
nop
call
xchg
cld
dec
inc
push
cmp
pop
stc
add
mov
push
jge
push
add
pop
or
push
jns
jp
jl
cld
pop
test
cld
push
add
pop
push
push
test
pop
pop
cld
jnp
je
or
push
cmp
pop
nop
push
or
pop
cld
lea
push
push
jbe
not
not
pop
pop
push
and
pop
cmp
nop
stc
push
add
push
pop
pop
not
not
not
not
rol
rol
lea
mov
test
push
neg
neg
pop
and
push
push
and
pop
pop
cmp
add
mov
shr
test
jne
jmp
cld
inc
dec
add
push
call
add
cwtl
adc
sahf
xor
out
data16
inc
adc
iret
mov
inc
mov
les
adc
pop
pop
cld
test
push
or
pop
push
xchg
pop
push
pop
xchg
pop
jge
test
jbe
test
sub
inc
jmp
in
insb
test
fidivrs
mov
inc
stos
mov
sti
push
jnp
push
xor
outsl
xchg
sbb
roll
cmc
push
inc
fsts
lock
pop
mov
ffree
add
mov
pop
gs
sbbl
testb
ds
mov
xor
test
call
je
cmc
pop
pop
and
loop
jecxz
out
jle
je
outsb
mov
fwait
test
or
loopne
sub
mov
push
mov
cli
mov
mov
inc
sbb
nop
movsl
and
mov
mov
mov
leave
das
in
cmpsl
mov
cmp
inc
add
test
push
inc
dec
pop
stc
jle
ror
dec
inc
xor
je
push
movzbl
js
jae
add
push
push
xor
pop
pop
xor
push
dec
pop
loop
pop
ror
and
push
add
jl
jle
cmp
shr
jmp
lcall
mov
cltd
ret
mov
fldcw
pop
push
std
dec
pop
cmp
fldenv
fisttpll
ret
testb
mov
in
inc
cmp
rcl
fwait
and
imul
test
in
sub
jo
mov
lds
inc
dec
loope
dec
nop
hlt
out
test
xor
popa
mov
add
pop
jbe
mov
push
adc
xor
dec
xchg
xchg
xchg
lret
jmp
lds
and
sbb
lcall
es
or
dec
push
fsubrl
xchg
fcmovb
dec
ljmp
sub
jp
mov
xchg
xor
iret
mov
jbe
adc
gs
jne
les
jo
push
push
mov
or
sub
pop
and
or
dec
ja
lret
pop
stos
xchg
pop
jne
test
in
mov
loope
pop
out
es
arpl
insl
loopne
adc
and
jg
imul
mov
add
mov
dec
insl
inc
jae
dec
fcomps
sbb
dec
in
and
pop
add
jae
jb
hlt
rclb
addl
adc
mov
pop
negb
ficompl
mov
mov
cmp
rol
mov
aaa
jle
push
xchg
test
pop
or
stos
push
ds
add
aad
and
fidivrs
push
js
std
insl
dec
cmp
outsl
cld
mov
sbb
inc
cltd
adc
in
aas
cmpsl
mov
lods
adc
pushf
out
dec
xor
in
stos
andb
xchg
jle
xchg
test
call
mov
cmp
call
pushf
push
stos
aaa
out
pushf
adc
jae
out
cmp
clc
das
jne
js
dec
sbb
cli
pop
xchg
cmp
rorb
mov
insl
push
jne
aas
mov
sbb
mov
test
lcall
xchg
inc
sbb
xchg
mov
xchg
xchg
sub
jns
add
push
insb
push
test
stc
or
add
dec
adc
cmp
add
gs
aad
sub
xor
sub
ret
push
test
fucomp
movsb
add
cld
xor
or
xor
repnz
ret
add
das
int3
or
in
mov
mov
mov
sbb
mov
dec
repnz
fbstp
pop
test
pop
fbld
jno
daa
and
sbbl
movl
xorb
xchg
push
iret
sub
adc
test
roll
cmpsl
mov
js
xorb
xor
mov
mov
cli
and
test
test
pop
pop
lret
mov
aas
mov
out
xorl
sbb
sbb
movsb
inc
and
add
jno
sbb
add
mov
in
stc
and
inc
loopne
mov
popa
push
or
arpl
xchg
xor
sbb
pop
sub
sarl
ja
shll
fdivl
cmpsb
inc
pop
xchg
jno
mov
imul
inc
ja
mov
mov
movsb
in
add
pop
mov
gs
push
scas
inc
pop
jne
cli
mov
cmp
sbb
rorb
push
fidivrl
es
mov
movsb
test
or
cmp
pop
cltd
xlat
in
popa
sbb
test
lret
aad
add
pop
push
jae
movsb
aas
jbe
jns
xchg
pop
aas
xchg
pop
data16
xor
popa
add
lcall
addr16
pop
mov
fldt
inc
lods
fs
lret
or
adc
mov
in
and
xchg
call
dec
jge
iret
icebp
cmp
cltd
and
sbb
rcll
pop
push
jmp
cmpsl
gs
sbb
lret
jnp
and
repz
scas
jle
aam
fld
nop
sub
inc
pop
adc
push
jl
cmp
cmp
mov
mov
mov
fwait
and
in
mov
push
fsub
lret
sbb
inc
xchg
jnp
shr
data16
int
enter
aas
mov
push
inc
add
test
push
cmp
in
inc
popf
into
out
popf
sbb
cltd
fsts
mov
add
push
xor
pop
mov
lods
cmp
push
xchg
in
outsb
lods
sub
fimuls
mov
adc
fisttps
hlt
shrl
cmp
cmp
push
rorb
pop
testl
movsl
je
add
test
sbb
fsubrl
repz
cmp
data16
mov
filds
call
mov
mov
cmp
and
xchg
in
or
or
push
pusha
out
and
insl
lahf
rolb
push
xor
or
or
in
adc
jg
cmpsb
or
or
cmp
or
adc
pushf
les
les
jg
jecxz
cmp
cmpsb
jl
adc
pop
out
add
mov
aam
addr16
mov
add
aas
dec
push
loope
jnp
roll
aaa
cmp
iret
push
outsl
arpl
adc
leave
pop
push
sbb
loopne
fdivrs
mov
daa
cltd
popf
jno
inc
mov
fnstsw
push
sub
cmp
mov
mul
xor
popf
adc
ljmp
js
lods
inc
jp
ljmp
pushf
push
sbbl
sti
stos
outsl
sbb
mov
mov
sub
push
sub
popa
fdivrs
pop
xlat
and
xchg
jl
and
mov
iret
out
inc
cwtl
pop
xchg
ljmp
sti
mov
pop
push
jae
arpl
fnstcw
pop
cs
push
pop
jno
into
arpl
mov
pop
jle
mov
pop
insl
andl
ljmp
aad
psrlw
flds
enter
addl
jecxz
jl
mov
test
xor
jnp
inc
push
das
adc
pusha
fistps
push
ja
push
dec
arpl
ljmp
shlb
fdivr
xchg
loope
xor
ret
add
xor
repz
outsb
xor
mov
or
lahf
add
pop
rclb
test
jle
repz
les
stos
dec
mov
sub
or
xchg
adc
movsb
inc
jno
insb
mov
pop
std
sbb
and
ja
nop
repnz
test
mov
test
das
mov
sarb
cmp
sub
mul
jb
pop
insl
inc
inc
fldcw
inc
mov
and
sarb
in
push
push
and
lcall
cmpsl
mov
xchg
inc
pop
subl
jnp
mov
jmp
lahf
scas
adc
mov
push
push
inc
mov
aas
dec
and
out
pop
or
push
jnp
test
push
dec
dec
adc
mov
in
mov
or
out
in
mov
inc
lods
pop
mov
sub
imul
cs
lods
adc
pop
es
inc
xchg
mov
out
shrb
out
adc
into
and
repz
jge
sub
cltd
push
jnp
out
push
xchg
ljmp
mov
push
mov
ds
imul
mov
pop
in
lcall
repz
dec
mov
aad
in
adc
inc
popa
jb
das
xchg
mov
mul
mov
mov
mov
stos
xor
cmpsl
nop
sbb
icebp
sbb
inc
pop
stc
movsl
xchg
cmp
jl
mov
rcrl
clc
es
nop
fwait
test
jbe
sbb
or
jmp
xor
mov
in
movsl
imul
imul
cmp
jo
jge
ret
and
pmaxub
rclb
add
sbb
filds
cwtl
fisubrs
add
sub
out
xlat
and
sub
aad
int3
stc
out
and
adc
lcall
je
sub
cmp
adc
clc
xor
add
adc
xchg
push
out
leave
xor
out
cmpsl
gs
cmp
dec
popf
xchg
aas
enter
adc
imul
scas
xchg
inc
jge
sbbl
in
mov
mov
lret
pop
inc
stos
scas
dec
ss
cmp
mov
and
es
out
and
addr16
repz
das
add
inc
scas
addr16
mov
jae
iret
push
dec
test
xchg
ds
push
and
dec
or
jnp
rcr
xchg
push
cmp
les
dec
addr16
xor
sub
mov
ret
pop
push
xchg
mov
ficoml
jp
jnp
loopne
mov
mov
pop
inc
xchg
js
mov
push
clc
sub
push
add
mov
cwtl
mov
or
pop
out
mov
add
inc
data16
icebp
loope
in
add
pop
int3
rclb
sub
fdivs
sti
gs
cmpsl
dec
mov
push
jae
stos
icebp
lret
jo
call
jb
fwait
repz
push
pop
sbb
mov
jle
ret
pop
cli
jge
mov
scas
out
xchg
popa
sub
mov
cltd
scas
and
xor
jns
mov
pop
stc
test
mov
jp
pop
fdiv
int3
inc
mov
xchg
sarl
xlat
jns
imul
mov
repz
sbb
js
movsb
dec
fidivrs
pop
ljmp
and
jo
int
jne
inc
sub
sbbl
gs
adc
mov
inc
js
mov
pushf
sub
dec
bound
dec
int
int
add
andl
cwtl
sbb
jns
jl
mov
stc
adc
lea
xchg
or
das
dec
xchg
push
xor
or
rorb
and
sti
xor
mov
cmp
and
lods
mov
mov
or
dec
jg
inc
xchg
jle
mov
push
sahf
sti
or
mov
les
mov
stos
rcrl
jmp
xor
pop
mov
data16
mov
adc
add
cmc
and
cmpsl
out
loop
adc
dec
outsl
adc
fwait
outsl
sbb
lods
lret
pop
insb
je
adc
cmc
imul
leave
or
xchg
lods
arpl
hlt
imul
jle
fistps
sub
fwait
daa
fidivrl
cli
push
hlt
das
sbb
cltd
scas
aam
dec
pop
jo
lcall
imul
pusha
inc
push
push
divb
inc
shrl
stc
or
les
add
push
jecxz
push
push
add
cmp
mov
enter
mov
leave
xchg
inc
cwtl
push
sbb
jmp
xor
mov
lea
xor
lds
mov
jp
lret
push
xor
out
add
add
test
fidivrs
int3
and
cli
cmp
leave
mov
pop
push
xor
mov
mov
push
repz
mov
push
repnz
jae
les
dec
pop
adc
outsl
mov
sbb
stos
lea
lcall
xchg
mov
lds
pop
xchg
mov
pop
xorb
push
and
pop
cmp
adc
mov
push
dec
jnp
push
and
cmp
pusha
inc
sbb
aam
in
xchg
mov
adc
dec
pushl
arpl
push
cmp
leave
jge
pop
mov
adc
jno
pop
mov
iret
test
push
xor
jb
mov
xchg
xchg
sbb
icebp
test
insb
pop
mov
jmp
dec
xor
loop
dec
cs
cld
xchg
cmp
lods
mov
pusha
shll
mov
cs
mov
repnz
xchg
push
and
sbb
cs
pusha
lret
pop
adc
rcl
roll
aas
dec
and
and
inc
int
inc
es
in
out
aas
inc
mov
mov
sbb
cmp
xlat
cld
scas
sti
test
out
jmp
outsb
cmp
imul
xchg
mov
xchg
lahf
jns
int3
ficompl
xor
fiadds
ret
imul
adc
and
mov
mov
out
mov
leave
and
jge
and
jnp
add
arpl
testb
push
pop
je
cmc
xor
dec
sub
dec
add
fsub
dec
xchg
mov
insb
in
xchg
lods
add
je
push
cwtl
mulb
xor
dec
mov
push
and
xchg
jge
pop
dec
in
push
add
jl
cmp
lea
pop
cmp
test
addl
repnz
daa
adc
cmc
xor
xchg
aam
fmuls
and
adc
lcall
cltd
xchg
lret
outsb
ds
fsubrl
adc
jno
mov
inc
mov
dec
fs
jle,pt
inc
sub
add
addr16
xchg
daa
imul
pop
lock
xchg
pop
add
in
cmp
call
notl
jmp
popf
int3
lea
into
daa
pop
xchg
jo
loopne
addr16
out
add
and
js
dec
xchg
xchg
dec
hlt
movsb
and
cmpsl
cli
cmp
pop
dec
and
imul
sbb
xchg
imul
jge
push
ret
lods
xchg
adc
in
leave
jecxz
push
pop
test
or
mov
les
or
jae
dec
xor
sahf
cmp
lds
addr16
cmpsl
sbb
xor
and
jmp
idivl
out
mov
inc
daa
jge
hlt
into
xor
jns
inc
lret
mov
pop
call
out
sbb
inc
mov
repz
mov
outsl
sub
pushl
aam
jg
push
or
mov
cmp
jmp
and
jge
push
sbb
mov
mov
or
jo
mov
and
insb
cmp
daa
dec
xor
mov
scas
mov
ret
inc
jae
add
xor
js
mov
test
xchg
mov
sbb
mov
xor
adc
lahf
scas
add
push
sbb
mov
test
push
xor
daa
sub
ljmp
imulb
aam
lods
stos
mov
inc
xchg
ret
xchg
stos
pop
cmp
push
mov
jle
xchg
push
push
xor
mov
dec
pop
daa
inc
xor
popf
rcrl
loope
pop
jl
fidivrs
int
add
push
mov
std
push
xor
stos
jg
push
mov
sbb
or
sbb
aad
dec
dec
xorl
pop
js
fxch
xor
jp
loopne
mov
or
ret
shlb
dec
xor
pop
ds
mov
ljmp
lret
push
pusha
fs
je
mov
out
insl
pop
add
addr16
hlt
fbstp
xchg
push
mov
or
stos
dec
outsb
dec
pop
aas
push
jbe
lret
mov
rcrb
mov
icebp
imul
and
fildll
out
jbe
or
and
xlat
loop
lods
inc
aad
pop
lea
es
pop
mov
jmp
lcall
mov
sar
pop
inc
add
out
dec
xchg
loopne
pop
and
cmpsb
scas
dec
and
mov
sbb
jp
insb
lret
pusha
add
inc
mov
dec
out
fcoms
popa
jno
dec
test
dec
leave
enter
pusha
ds
push
or
xor
or
aad
out
mov
out
fwait
cmp
ret
jge
pop
sti
cmpsb
cmp
or
lods
push
xor
cmc
pop
out
mov
lret
popa
adc
xchg
jb
ret
out
js
inc
fadd
or
adc
popf
lods
cmp
je
ss
push
daa
cmpsb
push
sti
shrl
out
inc
imul
lock
lods
cmc
fdivrl
jbe
fs
sub
pushf
cltd
pop
xchg
or
and
mov
mov
nop
cmpsb
sub
cltd
ljmp
insb
mulb
outsb
movsl
dec
mov
or
mov
jp
xchg
sarb
mov
rclb
mov
add
inc
test
hlt
iret
sbbl
jae
movsb
add
outsb
dec
stos
sbb
mov
in
inc
jns
inc
pop
pop
jae
mov
jmp
stos
test
repz
inc
push
xor
jae
aas
cmpb
ja
jo
stc
call
sub
imul
mov
sbb
aad
js
ss
mov
jo
out
fistpl
inc
xlat
add
pop
or
add
call
aaa
stos
pop
jbe
fwait
inc
adcb
adc
adc
rol
jnp
pop
cmc
mov
rcll
insl
bound
loope
pop
push
daa
out
sub
inc
adc
lods
repnz
pop
inc
fdivrl
scas
rolb
fists
xchg
negl
jp
stos
addr16
notl
bnd
xchg
in
add
fwait
mov
cmp
arpl
push
lods
inc
leave
cmp
jae
daa
sbbb
test
mov
sbb
mov
into
inc
sub
xor
shl
test
stos
test
iret
neg
movsl
inc
mov
enter
dec
dec
mov
dec
clc
jno
jl
jl
pop
scas
cmp
in
push
nop
xor
sub
movsl
leave
sub
lret
cmc
jns
jbe
cltd
and
addb
mov
out
in
add
repnz
adc
in
movsl
movsb
je
cld
bound
sbb
push
cwtl
cwtl
pop
bound
test
test
add
fdivp
mov
clc
lock
inc
pop
and
and
pop
int3
mulps
xor
lret
fidivrl
add
xchg
ret
jp
sbb
jecxz
mov
and
push
mov
pop
fidivl
stos
ficompl
cmp
mov
mov
out
fcomip
xor
or
xor
das
and
xchg
int3
pushf
lods
into
clc
adc
scas
jg
push
add
es
icebp
sbb
cmpsl
shr
mov
dec
jg
pusha
lcall
mov
mov
jo
in
imul
push
xchg
sbb
out
out
dec
hlt
hlt
scas
pusha
fisttpl
imul
cli
rclb
cs
in
xchg
out
vpsrlw
daa
mov
cld
jmp
sarb
and
loopne
xchg
sahf
inc
lret
orb
mov
imul
aam
xorb
pop
cmp
add
mov
fldl
jnp
cmp
jno
loope
js
frstor
fcoms
push
out
mov
out
cld
sub
sub
add
call
jnp
loop
orb
jno
cvttps2pi
leave
ror
inc
inc
push
pop
sub
sub
test
push
cwtl
dec
mov
ret
pushf
mov
icebp
aam
xchg
add
or
daa
and
cmp
mov
mov
lret
mov
leave
sbb
pop
lea
jb
or
aam
stos
rolb
push
fucomp
out
pushl
add
rorb
mov
rolb
sub
out
loop
jle
aaa
je
lods
enter
rclb
sti
lods
cltd
dec
jmp
pop
or
cmp
and
mov
and
dec
cwtl
inc
pushf
cmp
mov
xor
adc
dec
mov
int
dec
mov
out
add
xchg
aaa
jae
jecxz
insb
sub
lcall
mov
dec
cmp
xchg
xor
jae
out
scas
add
jae
or
sbb
stos
mov
push
jecxz
stc
jge
inc
push
call
cmpsb
xor
cmpsl
mov
or
imul
daa
jecxz
nop
cltd
cmp
cmp
cmc
jno
mov
inc
dec
mov
movsl
push
xchg
xor
cmp
sahf
inc
push
adc
testb
pop
push
inc
cmp
mov
lcall
ja
xchg
popf
test
nop
cmp
cmp
fmull
cmp
push
mov
roll
in
push
mov
mov
movb
push
mov
xor
fists
mov
loopne
xlat
mov
movsb
jg
cmpl
cmpsl
ficoml
or
rcl
cmp
cmp
imul
fidivrl
sbb
test
hlt
roll
adc
nop
in
inc
aas
lret
pop
add
pop
or
and
int
or
dec
pop
cmp
push
adc
push
jl
fbstp
sub
cli
fnsave
shlb
imul
fbstp
sbbl
xchg
jge
mov
or
sub
push
test
adc
in
mov
jb
pop
mov
je
xchg
push
cmpsw
enter
insb
pop
cli
out
int3
inc
dec
loope
daa
cmp
lods
pop
mov
ljmp
popa
jae
rcrb
test
repnz
shlb
fs
jle
pop
sbb
cmpsl
jbe
ds
xlat
int
imul
ficompl
mov
mov
mov
dec
inc
or
ds
mov
xchg
push
std
cmpsl
cmc
rcll
dec
push
leave
push
outsb
mov
cmp
mov
rolb
out
popa
lea
sub
or
cmp
pop
call
pop
and
leave
js
insb
push
nop
pop
or
aad
stos
inc
mov
mov
mov
push
jg
imul
inc
mov
neg
movsb
jecxz
and
jno
and
and
push
aas
sbb
sbbb
dec
jae
push
xor
mov
push
sarl
lea
movsl
lret
dec
sbb
pop
cmpsb
mov
jmp
lods
aas
fndisi(8087
push
cmp
sbb
inc
mov
cmp
xchg
jns
jmp
jle
sbb
push
xor
pop
ljmp
rcl
decb
lds
sub
add
cmp
xor
out
pop
clc
test
out
loopne
out
push
cs
icebp
jl
xor
mov
sti
nop
or
and
add
frstor
leave
sbb
in
rolb
adc
in
shrb
sub
push
adc
cmp
pop
scas
imul
mov
jnp
dec
mov
lcall
dec
fistpl
jbe
mov
mov
js
jge
dec
flds
clc
out
ret
enter
mov
dec
cmc
inc
mull
adc
jae
xchg
or
aaa
imul
popf
mov
jae
push
in
mov
into
cmp
aaa
xor
dec
mov
bsf
nop
scas
pop
xchg
xchg
jbe
rorl
loopne
imull
fdivr
add
push
jg
inc
int
fldt
mov
rcrb
mov
cwtl
xor
xor
loope
push
inc
aaa
mov
daa
lods
popf
jbe
adc
or
adc
jge
fsts
push
pop
or
xchg
icebp
cltd
inc
pop
mov
push
rcr
push
rcrl
or
outsb
push
and
jmp
filds
cmc
sub
xor
cli
pop
out
sbb
xor
mov
dec
mov
jl
fwait
xchg
syscall
daa
in
hlt
das
imul
inc
dec
repnz
sbb
popa
mov
mov
lahf
in
or
sbb
rclb
cld
andl
sbb
outsb
stc
sub
dec
mov
xchg
loop
outsb
je
stos
mov
andb
adc
in
arpl
fidivrl
mov
negl
push
inc
jecxz
jbe
xchg
and
lds
jp
outsl
inc
inc
subl
in
enter
movsb
sub
cltd
mov
clc
pop
xor
push
stc
and
pop
adc
jne
inc
jb
clc
adc
lods
movl
or
jae
jmp
mov
stc
pop
int3
jae
mov
add
dec
mov
inc
addr16
stos
jae
sahf
adc
in
dec
sub
push
push
repnz
lods
dec
out
and
mov
mov
sbb
ja
mov
cmp
out
lds
dec
mov
pop
je
jg
add
fisttpll
dec
mov
cmp
call
out
xor
popf
add
cmc
mov
dec
fsubl
jg
push
add
inc
into
mov
mov
or
test
or
loopne
inc
ficompl
xchg
insl
adc
les
sbb
call
test
sahf
ds
sub
stos
scas
and
xchg
dec
daa
jge
into
jg
inc
lret
loopne
outsb
stos
sbb
pop
out
sahf
fsubs
xor
pop
add
in
mov
mov
mov
mov
ret
sub
pop
dec
inc
inc
popa
xor
jbe
popf
pop
push
xor
cmp
dec
cmp
fwait
jge
xor
mov
and
push
cmc
mov
sarb
bound
push
adc
xchg
mov
jmp
je
sub
push
ret
mov
xor
adc
fwait
sub
imul
inc
cmp
and
je
adc
in
jbe
fwait
inc
mov
lock
daa
outsl
out
or
mov
push
fstpt
jae
ss
mov
mov
pop
push
lcall
inc
mov
mov
xor
out
lock
lret
jo
sbb
out
pop
lds
lea
dec
inc
jo
and
imul
je
in
scas
loopne
inc
imul
sti
pusha
mov
push
add
adc
mov
repz
mov
ljmp
xchg
mov
mov
cld
mov
hlt
hlt
mov
sbb
test
pop
push
aam
xchg
add
mov
psrad
outsb
pop
popf
aam
leave
xor
mov
lods
mov
jb
loopne
mov
ss
test
popa
mov
shll
gs
pop
cld
cmp
jne
xlat
pop
xor
addr16
rcrb
mov
inc
mov
jle
jge
mov
mov
imul
lods
repz
pop
inc
inc
repnz
mov
adc
inc
pusha
lock
popa
lahf
lock
leave
xor
sbb
outsl
xor
inc
lret
push
mov
into
sbb
inc
stc
pop
mov
sbb
jmp
pop
pop
out
scas
and
xchg
mov
inc
lea
mov
mov
testl
les
xchg
outsl
mov
adcb
push
jo
ds
jbe
pop
jge
into
leave
loopne
pushf
push
or
mov
cs
sarb
jp
adc
sti
jmp
sub
lea
shll
and
or
nop
xchg
and
jl
aas
sub
mov
data16
mov
adc
inc
ret
xchg
xchg
arpl
insl
aaa
fwait
xchg
cmp
dec
jl
loop
iret
fadds
push
mov
out
gs
lea
jge
scas
adc
int
and
shrb
cmp
cmp
dec
jbe
mov
jnp
test
leave
xlat
in
and
insb
js
dec
cmpsl
jmp
jecxz
cli
ficompl
sbb
cmpsb
cmp
cmp
test
in
sub
jno
xchg
push
adc
and
stos
dec
lret
gs
cmp
scas
xchg
outsl
jg
cltd
cmp
pusha
ret
jle
or
pop
jmp
or
push
in
xor
push
iret
subl
inc
dec
mov
mov
xchg
push
enter
cmp
shrl
mov
hlt
sar
jg
idivl
lock
repz
jns
xchg
arpl
mov
add
add
dec
jmp
je
shrl
or
les
lods
out
jno
int
sti
cmp
cli
sbb
sbbb
sub
jae
inc
jmp
cmc
stc
mov
mov
loope
add
in
cmpsl
aaa
push
movsl
repz
cwtl
addl
cli
inc
jge
xchg
js
sbbb
jae
sub
pop
or
inc
and
pusha
adcb
xor
arpl
push
and
xchg
mov
xchg
pop
gs
or
push
xor
fwait
cmp
ret
mov
push
push
fisubs
hlt
push
clc
rorb
sbb
lahf
jmp
xchg
adc
negb
xchg
les
rcrb
rcrl
pop
ja
hlt
pop
xor
fstps
or
fisubl
andb
lea
rol
popa
and
arpl
clc
shll
xchg
mov
mov
loope
mov
fldz
or
pop
and
mov
stos
mov
and
add
xor
jecxz
dec
sahf
jmp
pop
sbbb
push
in
inc
cmp
cmpsl
pop
scas
repnz
std
inc
adc
cmp
pop
js
std
sub
push
pop
pop
lea
jmp
mov
shlb
push
in
out
pop
dec
aaa
cmp
mov
push
xchg
ljmp
sbb
and
fnstsw
loop
loope
jmp
adc
mov
pop
and
mov
fcoms
cmc
scas
aas
in
or
sub
clc
repz
adc
or
xlat
xlat
push
loopne
cmp
sub
pop
jecxz
mov
push
sahf
sub
movsb
lret
repz
js
ja
dec
test
sti
fwait
mov
in
fwait
dec
push
lahf
mov
scas
inc
nop
aas
int
cmp
iret
and
mov
xor
out
xchg
push
xlat
mov
dec
jle
jle
cwtl
out
xor
xchg
or
inc
lret
rol
int3
sub
mov
mov
adc
scas
cmpsl
pusha
shlb
inc
popa
push
ret
pusha
mov
test
and
mov
call
shll
pop
fwait
cmpsl
dec
inc
out
bound
add
adc
mov
mov
arpl
imul
xor
xorb
imul
testl
xchg
lods
xchg
mov
pop
jo
xchg
jecxz
dec
mov
pop
in
into
ret
mov
mov
mov
sub
popa
push
cli
inc
push
and
clc
mov
cmc
jmp
leave
jne
sbb
inc
push
cmp
enter
out
cmpsl
test
sti
inc
shlb
pop
push
cmp
push
dec
push
stc
aaa
out
push
xchg
jp
xor
mov
jno
jecxz
and
test
dec
loop
inc
cmp
popf
std
cmc
repz
xchg
andb
cli
data16
adc
dec
adc
popf
inc
mov
hlt
inc
and
pop
xchg
mov
jmp
sbb
jmp
cld
mov
push
pusha
rcrl
jl
lret
xchg
mov
jle
aas
stos
mov
xchg
outsl
or
push
pop
sub
mov
mov
push
jbe
adc
stos
jnp
das
daa
pushf
cmpsl
mov
daa
dec
pop
lds
cltd
lds
imulb
xor
mov
lods
adc
mov
mov
mov
or
aam
inc
pop
add
add
in
push
push
shll
inc
loope
test
add
popa
cmpsl
in
push
and
dec
push
pop
and
stc
lcall
je
adc
sbb
into
and
lret
cmp
xchg
xor
popf
jle
or
js
imul
iret
sub
ret
fdivr
push
cltd
inc
cmp
fldcw
aas
aas
lea
cwtl
roll
cmc
xor
sub
mov
push
mov
dec
sbb
inc
jbe
inc
stos
lods
ror
ficoml
sub
xchg
mov
sub
xor
mov
sub
push
push
xchg
inc
shll
out
out
cmc
pop
push
mov
outsl
cmc
inc
insl
insl
inc
punpckhdq
movsb
pop
cmpsl
in
int
cmpsl
test
outsb
mov
cmp
int
ret
popa
aaa
push
ds
adc
xchg
inc
pop
out
lret
xor
xchg
inc
inc
test
xor
push
sbb
and
adc
adcb
jmp
arpl
and
subl
add
jl
inc
mov
pop
push
call
cli
es
or
xor
cmp
mov
cwtl
popa
cmp
add
jae
lahf
insb
cltd
jno
sbb
or
jo
pushf
int3
jg
movsb
and
add
mov
jne
or
iret
pop
xchg
ds
push
stos
test
mov
int3
xchg
sub
sbb
cmp
jge
pop
rcrb
mov
addl
sahf
cwtl
in
icebp
add
pop
cmpsb
jo
imul
mov
push
call
xor
push
lahf
or
push
imul
push
popf
addr16
rcr
mov
mov
movsl
es
sub
stos
test
test
mov
fidivl
int3
dec
ja
adc
ja
imul
xchg
pop
mov
sub
fwait
stos
adc
bound
or
addr16
add
cltd
cmp
jp
cmp
and
cmpsb
repz
dec
js
push
icebp
xchg
xchg
push
push
js
scas
div
mov
inc
jg
in
push
and
je
loopne
stos
decl
fistps
fildll
cmp
fisttpl
mov
inc
arpl
outsl
ja
pop
cmp
pop
jno
daa
jp
or
sub
mov
inc
xor
cmpl
xor
xor
dec
imul
push
jb,pn
dec
sti
out
mov
adc
pop
mov
out
xlat
adcl
sub
scas
xor
decl
sti
pop
fldt
or
mov
cmp
sub
fimull
xchg
pushl
adc
push
xchg
adcb
or
jmp
jae
aam
dec
jb
clc
ss
out
mov
mov
call
pop
jg
jmp
mov
sbb
es
aad
mov
cmc
not
imull
dec
sbb
loope
outsl
cmp
mov
popl
mov
dec
mov
inc
aad
mov
pop
dec
push
mov
rol
push
fisubl
or
adc
push
jp
repnz
out
insl
pop
pop
and
pop
cmp
les
and
xlat
call
das
dec
mov
hlt
xor
stc
sub
cli
xchg
test
clc
cmc
imul
sub
xchg
cmp
pop
cmp
fsubrl
mov
ljmp
push
dec
mov
aad
popa
shr
mov
mov
push
pop
sbb
clc
or
icebp
jnp
mov
dec
inc
adc
push
jl
or
mov
imul
inc
das
arpl
cmp
dec
int3
ds
test
sbb
cmc
cwtl
inc
xor
sub
push
leave
imul
xchg
mov
hlt
sti
iret
jmp
push
pop
addl
sbb
or
test
dec
and
pop
or
adc
fdiv
sub
jmp
roll
scas
rol
cwtl
aaa
mov
xchg
in
or
sub
repz
lcall
aad
sti
stc
jmp
ret
cmp
xchg
xchg
js
sbb
outsb
repz
inc
into
push
imul
lahf
mov
cmpsb
stc
movsb
dec
out
push
push
arpl
mov
push
test
les
insb
sbb
push
inc
xchg
or
scas
dec
shl
ret
push
push
lcall
in
adc
dec
movsb
ds
mov
ficompl
push
xchg
jnp
xchg
jl
pop
mov
cmp
or
movsb
rcll
mov
lock
lret
addr16
adc
xor
jmp
lret
rclb
jbe
mov
mov
sbb
es
mov
in
xchg
mov
add
in
mov
fs
imul
mov
lahf
lahf
or
add
stos
mov
lret
mov
xor
xor
addl
pop
pop
push
dec
dec
aas
xlat
addr16
lret
and
loop
push
or
push
imul
sub
sub
nop
movsl
xor
sub
stos
insb
inc
mov
cmp
stos
sbb
aad
push
mov
movsl
testl
fidivs
and
rcll
ja
adc
add
insl
push
pushf
pop
xchg
aas
shlb
dec
xchg
xchg
imul
and
mov
push
push
xchg
cmp
aas
inc
cmp
push
mov
sbb
mov
push
inc
add
fimuls
sbb
fldz
ja
add
mov
cmpb
inc
mov
lods
pop
jae
fs
loope
dec
ss
inc
fcmovnu
and
mov
aad
mov
push
sbbl
mov
dec
mov
and
in
aad
adc
jp
dec
push
inc
aaa
push
inc
cli
push
mov
push
mov
repz
ret
pop
repz
fbstp
sub
sbb
or
xchg
lds
push
shrb
pop
outsl
cwtl
xor
pop
fwait
ds
mov
xchg
aas
cmpsb
push
pop
add
lgs
and
cmpsb
push
add
aaa
clc
mov
pop
push
xchg
pop
mov
pop
pop
sub
iret
jo
jns
test
dec
sar
call
cli
mov
cmp
loope
loop
pop
push
fucomip
or
aam
mov
inc
cs
es
arpl
jns
cltd
iret
mov
fstps
xor
sub
std
mov
mov
lahf
pop
pop
test
imul
jnp
fsubr
insl
mov
ljmp
loop
inc
in
xlat
pushf
mov
cmp
andl
fwait
cs
lcall
inc
inc
or
popa
adc
pusha
call
icebp
pop
lock
dec
rcrl
cmp
jbe
das
inc
adc
scas
push
jg
lahf
sub
lods
popa
les
push
inc
cltd
stos
xor
mov
jmp
xchg
mov
push
and
mov
dec
in
ja
cmc
pop
in
or
out
rol
xlat
push
fsubp
movsb
jbe
pop
mov
std
mov
ja
xor
pop
push
int3
push
cmp
das
pop
xchg
xchg
xchg
adc
add
cwtl
push
jb
or
addr16
sbb
imul
in
or
fistps
sub
stc
xor
jecxz
aaa
adcb
sahf
mov
sub
jns
outsb
dec
cs
rorl
pop
adc
lock
add
cmp
lods
aad
mov
dec
test
inc
fwait
inc
or
pop
inc
cmp
testb
imul
push
into
xchg
aad
mov
push
dec
pop
or
rol
mov
push
sbb
int
rorl
xor
dec
mov
popf
test
push
push
xchg
jecxz
inc
lea
xchg
insb
sbb
pop
int
imul
fisubrs
push
cs
jecxz
ja
xor
mov
pop
sbb
inc
outsb
orb
stos
and
bound
adc
mov
ja
push
pop
insl
jnp
outsb
mov
mov
cmp
jnp
mov
mov
dec
or
pop
mov
bound
fwait
pop
insb
push
lret
call
mov
mov
rclb
pop
jno
jae
rorl
call
je
into
call
mov
jle
cmp
pop
lock
lahf
adc
popf
call
aad
imul
cmpl
mov
push
xchg
inc
pop
pop
out
inc
add
sub
push
dec
xor
lods
cmp
lods
mov
cmpsb
cmpsl
enter
xchg
repnz
mov
mov
icebp
popf
call
clc
mov
xchg
mov
xchg
cmp
sub
push
xchg
mov
dec
xchg
add
adc
dec
mov
icebp
sbb
dec
aam
xchg
pop
testb
mov
xchg
inc
stos
ret
in
push
push
roll
lahf
mov
aad
loop
push
or
je
inc
icebp
push
ljmp
popf
push
pop
inc
push
popa
xchg
mov
pop
pusha
or
xchg
ja
in
cmp
hlt
inc
cmp
pop
mov
xchg
test
scas
adc
ljmp
arpl
mov
ljmp
pop
sahf
in
out
sub
fimuls
push
mov
nop
ljmp
sub
xor
sti
mov
es
insl
mov
and
inc
mov
push
arpl
lcall
sti
andl
out
cmp
add
jb
hlt
lds
test
sub
stc
push
mov
shrl
adc
insb
sub
pop
cmpl
subl
mov
jmp
mov
shrl
fdivrp
add
cmpsb
imul
lret
test
push
sbb
mov
mov
mov
push
inc
push
jnp
cmc
cmp
dec
insb
shll
cmp
jno
or
inc
xchg
test
xchg
push
incl
and
push
xchg
and
xchg
addr16
inc
push
int3
sbb
cs
mov
inc
sub
push
orb
pop
aaa
insb
or
ss
push
loopne
pop
mov
fstl
outsb
daa
adc
xor
ret
adc
mov
in
xchg
mov
xor
jns
mov
and
out
fwait
mov
call
mov
dec
xor
or
sbb
inc
dec
and
or
push
sub
into
adc
pop
test
test
rcll
gs
aas
addr16
push
iret
sub
sub
movsl
data16
imul
psubq
dec
ds
mov
xchg
fisubs
adc
je
dec
repnz
hlt
adc
fst
fmuls
les
jae
push
push
shlb
inc
mov
mov
push
scas
push
sub
lahf
inc
shll
inc
mov
out
jmp
movb
outsl
lds
push
shr
je
ja
icebp
xchg
cmp
std
mov
push
cs
fcomps
mov
fidivs
dec
rclb
das
mov
jae
outsb
push
or
in
cltd
les
inc
mov
push
popa
push
add
xor
imul
pop
pop
jbe
pop
mov
mov
and
in
int3
rcrb
imul
push
out
cld
sub
inc
aaa
in
movsb
int
sbb
adc
mulps
dec
in
out
lret
ret
mov
test
shl
cmp
andl
scas
ret
pop
pop
movsl
mov
pop
fisubrl
mov
stos
shrl
shlb
loopne
into
push
fisubrs
inc
mov
push
lods
jp
aad
mov
pop
mov
sub
ds
mov
lahf
sub
and
dec
dec
in
or
testb
es
mov
or
xchg
and
rclb
ffreep
movsl
lea
cmp
addr16
xchg
xlat
push
js
sub
insl
mov
jg
cmp
pop
dec
xor
cmp
rorl
mov
fstpt
mov
add
jnp
stc
cmp
mov
dec
inc
push
pop
xchg
iret
fwait
and
sarb
mov
es
cmp
and
dec
xchg
inc
jecxz
ret
aaa
insb
call
les
lcall
pop
xchg
xchg
out
rsqrtps
xor
adc
or
or
jl
shl
sub
iret
loopne
addr16
cmp
sub
in
in
imul
jp
push
jnp
xlat
js
push
and
rclb
mov
enter
mov
dec
pop
lods
lahf
and
mov
xchg
inc
push
movsb
or
jb
sub
leave
insb
in
sti
pop
jb
xor
loop
adc
cmp
push
leave
xor
sbbl
testl
jmp
mov
push
fsubr
or
xor
cmp
dec
leave
mov
fldl
cmp
test
jnp
imul
xchg
imull
xor
cli
mov
in
xchg
ja
sub
lods
les
in
and
dec
lods
popf
cmp
ja
fidivrs
sbb
inc
xchg
shrd
addb
stc
out
push
lret
cmp
cs
aad
jl
adc
jnp
shl
cmovnp
pop
popf
push
push
adc
mov
push
mov
mov
je
js
mov
jmp
in
mov
xor
pop
mov
pop
pop
out
pop
leave
cmpsb
jne
jno
repnz
cmpb
and
and
push
pop
mov
xor
inc
adc
pop
xor
push
addr16
fnstsw
enter
mov
fldenv
jb
clc
xchg
jae
mov
add
call
aas
mov
scas
ljmp
mov
ds
add
adc
adc
popf
mov
dec
jno
sub
dec
dec
xchg
dec
imul
daa
mov
jge
popa
fs
out
stc
cmpsb
repnz
xchg
adc
fxch
stos
sub
and
ja
xchg
in
cmp
mov
mov
dec
sarb
mov
pop
cmpl
mov
roll
adcb
in
jl
adc
aas
xchg
mov
mov
jne
or
adc
iret
sbb
popf
cmp
insb
je
mov
out
vpmuludq
add
adc
fidivrl
pop
les
arpl
inc
gs
mov
add
ljmp
test
lds
mov
ja
clc
je
and
mov
popa
insb
sub
sbbl
icebp
notl
fs
sbb
lret
dec
push
and
imul
pop
mov
inc
outsl
mov
mov
adc
jmp
cmp
jb
add
daa
popa
add
pushf
pushl
adc
scas
sbb
dec
pop
in
xor
iret
dec
ja
lock
sbb
negl
jno
xchg
lods
rorl
mov
cltd
jg
in
js
in
ja
and
sti
hlt
jnp
lock
imul
sub
test
negl
ss
psllq
ret
or
adc
fistpll
mov
mov
xor
push
popf
sbb
int
push
aam
out
mov
add
andb
ja
and
dec
clc
mov
sahf
mov
lds
adc
pop
aas
aas
pop
pop
jo
jecxz
fdivr
dec
cmp
adc
rclb
dec
lret
and
mov
xlat
lahf
jns
inc
gs
lds
loope
xor
ja
idivb
out
sti
sti
sbb
shlb
inc
push
xor
andl
inc
fidivrl
pop
dec
cmp
mov
aad
in
pop
cwtl
hlt
insl
sub
pop
push
imul
lret
and
shr
inc
mov
hlt
nop
adc
int3
lods
addr16
push
xor
mov
mov
lea
mov
ja
jo
int3
pop
sqrtps
push
andl
lea
pop
or
imul
sub
lods
jmp
fnstenv
mov
sbbb
xchg
out
out
loope
in
or
sub
mov
pop
sbb
nop
mov
mov
mov
xchg
lahf
fimull
push
cltd
mov
daa
or
mov
xchg
addb
mov
ret
std
repz
mov
inc
sub
cmpsl
leave
test
shlb
jg
xchg
das
pop
std
lods
iret
lcall
gs
sbb
xchg
mov
ljmp
ja
inc
jns
pop
sbb
clc
ficompl
roll
jl
pop
in
jl
jb
fsub
fisubl
aad
ja
js
ret
leave
ljmpw
fisttps
nop
xchg
jbe
aam
pushf
cmc
add
jmp
clc
jl
inc
jnp
push
scas
adc
add
xor
or
nop
cmc
andl
fs
imul
imul
and
mov
lahf
insb
mov
sbb
test
dec
jmp
std
push
xchg
pop
test
cmpsb
inc
jp
adc
mov
mov
lods
aas
cmp
xchg
rorl
or
xchg
insl
jp
std
xchg
cld
sbb
mov
fwait
pusha
je
sbb
push
jnp
insl
xchg
stc
push
mov
xchg
or
movsb
fs
fcomps
dec
push
pop
push
in
push
in
add
xchg
xor
add
insl
lods
fucomip
sbb
imul
lds
sub
cmp
adc
loope
cmp
or
out
rcrb
ret
leave
notb
aaa
and
pusha
stc
ret
and
dec
daa
test
pop
jecxz
inc
mov
sub
push
imul
out
xchg
jp
xor
dec
adc
test
mov
mov
jo
js
int
cmpsb
rcll
xor
decb
scas
or
sar
dec
cmp
lcall
jns
jge
scas
add
jnp
test
xlat
loop
xchg
jbe
xchg
scas
cs
rorb
jecxz
adc
daa
imul
pop
leave
mov
add
ret
adc
jb
std
imul
in
inc
push
inc
daa
hlt
dec
or
sahf
in
aam
mov
jge
andb
test
incl
fcmovne
sbb
je
push
xchg
dec
outsl
fimull
and
hlt
mov
push
sub
push
scas
mov
sub
pop
fsubl
in
std
outsl
mov
aam
fbstp
leave
add
jne
add
cmc
or
pop
mov
mov
mov
leave
pop
shlb
pop
cmp
jns
or
mov
pop
inc
or
xchg
in
pusha
inc
sub
or
out
mov
pop
mov
or
lock
cmp
aaa
dec
push
shlb
pop
gs
sbb
pop
scas
fidivs
mov
jne
jg
test
mov
push
cmp
icebp
insl
insb
inc
fcoms
fcmovnu
lret
cmc
pop
outsl
inc
push
loop
pop
repz
pusha
in
out
inc
adc
outsl
lds
sub
push
pop
stos
mov
into
push
rcl
iret
add
test
fistpll
xor
jbe
and
aas
cmp
cmp
ja
jle
mov
mov
sub
xchg
imul
lahf
das
jmp
scas
pop
ffree
call
rol
mov
imul
cmpl
inc
mov
jge
cld
fstl
gs
mov
pop
cmc
add
push
push
aam
xor
loope
sbb
and
enter
xchg
aam
lods
leave
and
pop
pop
adc
sub
jl
sarb
jl
pop
push
mov
scas
inc
jmp
int
sbb
mov
daa
jnp
cmpsb
xor
fistpll
insl
xor
adc
push
in
mov
push
rol
gs
testb
aas
add
pop
xor
add
je
pcmpgtd
dec
ljmp
pop
cmp
mov
fstpt
lret
mov
add
ret
roll
xor
xor
pop
dec
lock
cmpsb
jnp
stc
out
mov
inc
sub
int
dec
cmc
pop
add
insl
sub
stos
orb
icebp
rcrb
into
imull
cwtl
or
outsl
js
or
dec
xchg
inc
aad
into
xchg
packsswb
pop
lahf
sbb
sbb
and
mov
popf
mull
push
jnp
xchg
xor
je
nop
dec
test
dec
xchg
dec
mov
iret
adc
add
test
mov
sbb
pushf
scas
dec
push
enter
ret
pop
sub
les
push
pop
popa
cld
in
push
incb
push
fwait
mov
lea
in
pop
pusha
jae
inc
pop
mov
pop
popf
jae
jmp
repnz
add
cltd
das
mov
xchg
push
cmp
loop
mov
cs
xchg
pop
push
mov
jmp
imul
jae
or
filds
scas
sub
lock
sahf
fisubrs
lods
lds
cld
pop
add
ficomps
mov
adc
and
cs
fs
jno
add
imul
ss
rcrb
loop
jnp
cmpsb
insl
xchg
xor
scas
decl
ja
popf
sub
add
xor
test
clc
inc
je
push
add
jg
adc
push
loopne
sub
data16
pop
ljmp
and
shrb
pop
mov
cmp
jb
cld
adc
pop
add
push
mov
xor
call
push
ja
mov
lcall
enter
in
and
pop
xchg
arpl
out
divl
dec
jmp
sub
nop
mov
pop
and
jns
int
push
jle
daa
jge
mov
scas
movsb
leave
xchg
mov
or
jmp
ret
cwtl
inc
push
add
or
lods
push
scas
inc
push
addr16
lret
or
sub
outsl
sub
sub
mov
loope
movsl
sarb
adcb
std
pop
jb
repnz
insl
std
test
popa
popf
in
pop
push
aaa
adc
mov
addr16
mov
je
call
fstpt
movsl
stos
iret
dec
sub
push
and
fs
mov
mov
arpl
jbe
xchg
out
mov
fs
ficoml
add
jl
mov
notrack
adc
in
mov
inc
scas
and
xorl
fwait
dec
or
lcall
pusha
outsl
jl
push
adc
add
inc
or
fs
push
mov
jno
test
jnp
repnz
je
xor
stos
adc
mov
dec
pop
inc
fbstp
pop
xchg
stos
repnz
pop
pop
add
add
mov
out
in
out
cmp
stos
aam
jg
dec
cmp
mov
ret
sub
sar
out
loop
xchg
adc
jo
es
out
jecxz
jmp
add
popf
repnz
mov
xchg
in
ljmp
adc
jl
aad
test
inc
dec
mov
dec
cwtl
shl
lods
pushf
xchg
les
xor
xor
add
inc
cmp
mov
pop
cmp
sbb
xor
push
int
sti
mov
xor
lods
ficoms
das
xchg
inc
adc
cwtl
inc
dec
leave
add
movsb
cli
incb
psubb
adc
or
inc
jb
jne
or
aaa
mov
enter
xchg
sbb
movsb
or
arpl
ret
xor
pop
or
or
sbb
jae
mov
test
loop
adc
jmp
adc
cmp
testb
jo
movsl
int
inc
lods
ret
sarb
inc
stos
cld
mov
dec
sub
mov
adc
push
sub
jge
subb
mov
lret
in
outsb
sbb
loopne
shlb
mov
pop
xchg
jne
pop
loopne
in
sbb
in
mov
rolb
mov
jne
loope
push
and
or
sbb
pusha
mov
sbb
push
lret
pop
xor
mov
loop
loopne
je
mov
jo
iret
xchg
push
adc
movsb
sti
xchg
xchg
and
jae
je
dec
dec
sahf
mov
sarb
add
clc
pop
cmpsl
xchg
fwait
mov
jne
aad
mov
xchg
mov
inc
adc
lahf
or
hlt
test
push
mov
out
cmp
cmp
jle
icebp
out
mov
inc
sub
push
stos
pop
mov
rclb
dec
mov
xchg
mov
ds
ret
call
adcl
data16
xor
pop
jae
or
jecxz
icebp
outsb
cmp
lds
lock
xor
int3
sarb
xor
rcll
mov
jmp
xchg
out
out
cltd
popa
sbb
movsb
sbb
cmp
jle
pop
je
xchg
adc
xlat
lret
lds
popa
push
cmp
pushf
int3
inc
pop
xor
lcall
mov
push
arpl
testl
inc
xor
inc
ficomps
enter
sub
mov
aas
xlat
and
sbb
mov
jmp
jbe
dec
xor
rolb
dec
sbb
lock
std
jecxz
xor
or
int3
pushf
adc
xchg
daa
pop
scas
in
insb
iret
lods
pusha
mov
shll
pop
cmpl
xchg
hlt
cmp
push
mov
adc
dec
add
pop
iret
jb
out
mov
leave
aam
sbb
data16
cmp
push
cmp
in
int3
je
jge
jae
xchg
or
pushf
insl
or
sar
rol
or
aam
dec
ss
fnstcw
aaa
fnstenv
sub
ja
cltd
outsb
push
xor
add
shl
fs
cmpsb
xchg
mov
mov
aam
js
push
mov
imul
out
lcall
cmp
pop
inc
stos
es
add
mov
loopne
xchg
in
mov
push
stos
adc
pop
shll
jg
push
fists
in
mov
jecxz
adc
sub
imull
outsb
popa
mov
mov
or
arpl
fistps
pop
sbb
mov
jns
divl
inc
insb
arpl
pushf
cltd
xchg
sbb
mov
sub
pop
icebp
fstpt
data16
add
push
mov
sarb
notl
sbb
push
sahf
push
test
and
jp
lds
int3
fwait
and
out
ret
aas
mov
add
outsl
or
loopne
aam
xchg
das
lock
js
aas
mov
pop
das
adc
clc
pop
jge
lret
shr
jl
cli
cld
sbb
in
add
sahf
xor
fiaddl
mov
jno
scas
mov
or
iret
adc
fcompl
loope
ret
lret
dec
fcompl
mov
inc
adc
scas
das
jl
xor
adc
mov
pop
das
xchg
and
mov
decl
sub
jmp
cmp
cltd
test
ss
out
lahf
lds
xchg
mov
push
outsl
pop
loop
cs
mov
and
dec
lods
xchg
push
cli
jecxz
dec
adc
cs
jne
and
outsl
js
xchg
fdivr
sbb
fstpl
addr16
or
out
dec
mov
dec
push
data16
dec
mov
jo
fistpll
xchg
add
out
pop
and
lcall
dec
loope
outsb
pop
and
xchg
cmc
rcll
or
pushf
push
xor
cs
push
cmp
loopne
mov
idiv
jbe
es
inc
fdivrl
jnp
enter
adc
inc
les
lea
cmp
xor
and
jge
jnp
xchg
jnp
clc
stos
lock
and
in
add
push
push
sub
pop
cmovg
daa
scas
nop
mov
mov
mov
rol
add
xor
mov
outsl
push
dec
shrl
cltd
pminub
jl
adc
inc
and
adc
movsl
in
jp
mov
sub
loopne
inc
or
mov
addb
sub
repnz
bound
or
addr16
mov
aad
aas
lods
mov
jo
arpl
mov
testl
xor
mov
lock
push
mov
cmp
xchg
out
jo
aam
clc
cmpsl
jne
pushf
mov
dec
in
call
gs
ret
push
jae
adc
mov
loop
scas
mov
lret
fldl
add
subl
dec
repz
or
sub
iret
scas
jbe
scas
mov
pop
ss
xchg
mov
cmp
cs
jnp
ret
sbb
stos
clc
scas
test
mov
scas
js
mov
dec
mov
xchg
outsb
pop
dec
jl
popf
cli
scas
cmp
jl
and
shlb
adc
faddl
mov
adc
jbe
sbb
jb
sbbb
fs
sti
or
mov
repnz
xor
and
and
insl
das
xchg
ret
xlat
pop
push
test
mov
call
cmpsl
cmpsl
imul
xchg
cld
dec
mov
xchg
mov
cmpsl
loop
jbe
repnz
rol
std
mov
inc
cmovge
push
push
dec
cltd
xor
adcl
repnz
fisubs
lret
xor
stos
lds
cmpsl
out
cmp
xor
inc
pop
pop
shll
pop
cmp
lret
mov
dec
jmp
mov
pop
in
xchg
adc
fdivp
fldenv
push
ds
mov
pop
imull
lret
mov
roll
add
out
and
jo
pop
jecxz
int
mov
pop
loop
dec
popa
daa
and
shll
jnp
and
cwtl
stc
movsb
inc
dec
jnp
jns
fmull
pop
sbb
sub
adc
rcll
aas
data16
pop
push
jnp
push
stos
js
mov
cmp
punpcklbw
add
mov
std
pop
or
adc
dec
jmp
dec
fwait
cmp
pop
push
cs
pop
pop
push
inc
xor
stc
aam
mov
mov
in
sbb
fisubrl
lahf
aam
pusha
xchg
lahf
sbb
inc
sub
ret
jecxz
jmp
pop
jno
stos
test
call
jp
ret
jns
movsl
push
pop
cs
mov
sbbl
loope
aas
mov
jb
mov
sbb
jnp
sbb
dec
xchg
out
bound
push
inc
inc
pop
sbb
and
push
imull
div
xchg
andl
loopne
les
in
mov
inc
cmp
cmpsb
mov
xor
push
in
and
inc
testb
sti
insb
jmp
and
fisubs
inc
or
pop
test
orb
cmp
lods
mov
xchg
adc
fsubrs
std
dec
popl
or
scas
or
cmp
scas
pop
test
and
push
int3
cmp
lret
sbb
out
pop
xor
movsb
leave
mov
popa
jmp
std
mov
addr16
lcall
enter
pop
test
dec
jecxz
cld
call
adc
or
lahf
sub
xlat
fisubrl
add
in
int3
pop
dec
lret
add
inc
adc
xor
and
xor
les
arpl
es
jno
inc
aaa
ja
mov
cmpsb
addr16
add
out
cs
inc
push
cmp
push
push
mov
push
mov
or
lea
add
mov
dec
xchg
ss
add
rcl
insl
mov
aam
stc
rolb
jmp
movsl
lea
add
mov
push
movsb
ficoms
mov
cmp
repnz
jmp
pop
mov
das
and
xchg
dec
push
lock
pop
adc
mov
pop
and
xchg
mov
popa
in
dec
cmp
sbb
jns
xchg
mov
mov
or
sub
iret
push
imul
mov
call
lds
xchg
mov
nop
adc
sti
sub
sbb
add
xor
hlt
jmp
mov
adc
inc
mov
adc
arpl
add
sbb
cld
or
rcl
push
jae
loope
cmp
mov
cmp
and
sub
xor
test
add
dec
test
jg
cmp
jge
bound
jno
mov
dec
stc
push
dec
inc
mov
leave
and
pop
in
imul
push
pop
lahf
add
loope
or
iret
in
jbe
je
adc
lods
mov
cmp
fdivrl
sub
push
and
test
insb
inc
push
cmp
cltd
jae
xor
std
adc
mov
xor
xchg
sub
inc
mov
rcrl
jno
nop
or
and
mov
fcmovne
xor
clc
xchg
xchg
in
je
inc
clc
pop
mov
push
test
mov
fstp
xchg
jp
push
jns
mov
push
push
adc
lods
xchg
jnp
push
test
inc
sti
sbb
nop
jb
jl
sub
xor
mov
jmp
push
aas
inc
aas
inc
cmpsb
sarl
xchg
fcoms
mov
adc
repnz
xor
cmpsl
inc
cmp
shll
add
sub
xor
sub
sbb
pop
sub
xchg
int3
push
mov
cwtl
push
shll
inc
mov
inc
pop
and
rcrb
fs
aam
xchg
les
xchg
push
and
push
dec
and
mov
out
mov
cld
cmp
cmp
adc
inc
lret
jp
pop
insb
loop
pop
lahf
lret
inc
sub
adc
movsl
inc
mov
fwait
and
and
xchg
and
adc
shlb
hlt
std
test
mov
nop
jl
ficompl
xchg
mov
das
mov
push
xor
nop
push
add
xorl
lret
adc
out
cmp
rcll
inc
dec
jmp
mov
jp
pop
pusha
mov
out
xchg
mov
push
push
push
test
int
pusha
test
icebp
sub
nop
lea
mov
pushl
icebp
mov
xor
push
jne
xor
and
push
xchg
test
push
sub
hlt
push
cmp
push
jnp
dec
sbb
inc
push
and
push
mov
lea
sahf
and
fidivs
scas
pop
out
sarl
xor
gs
dec
and
mov
inc
xchg
pop
pop
push
sbb
fbld
ss
xchg
mov
mov
push
test
fcoml
stc
and
xchg
sti
fldcw
incb
xchg
mov
push
mov
mov
movsl
push
or
jecxz
and
mov
pop
shlb
mov
xlat
pop
fdivrs
lods
and
bound
or
cmc
push
pusha
mov
movsl
dec
adc
ja
adc
jae
lret
mov
iret
mov
sti
and
cld
mov
mov
cltd
xchg
imul
or
testl
mov
push
push
cltd
lret
and
push
ljmp
fs
jle
fs
mov
jno
mov
popa
cmpsl
pop
dec
out
push
sub
push
xchg
mov
add
enter
add
inc
adc
and
adc
out
enter
mov
bound
rolb
mov
in
aas
mov
aam
lcall
pop
cli
push
xchg
add
jns
lods
rcr
jns
xor
ret
fisttps
enter
cwtl
aas
pop
test
gs
lds
addr16
add
jne
inc
mov
clc
push
mov
loope
and
test
jecxz
bound
daa
into
inc
mov
fdivrl
inc
mov
xor
jne
xchg
and
cmpsb
pop
push
neg
in
xchg
pop
and
and
enter
xchg
xor
and
ljmp
ret
aaa
fwait
push
out
scas
ret
sub
enter
in
xor
jecxz
arpl
shrl
sub
aad
mov
dec
mov
mov
pop
lret
jo
dec
xor
and
daa
arpl
sub
pop
jmp
jl
hlt
cmpsl
cs
xor
adc
cmpsb
enter
bnd
mov
inc
xchg
es
jo
dec
pop
jbe
inc
push
divb
aad
or
push
dec
out
jno
imul
mov
hlt
orl
mov
sarl
or
sub
imull
xorl
cs
add
and
enter
jo
and
push
shl
xchg
or
inc
fiaddl
in
jae
into
loop
xchg
mov
jmp
xor
mov
dec
push
shll
fwait
push
insb
mov
shll
out
cwtl
mov
test
aaa
dec
mov
add
subl
jmp
bound
xor
sbb
mov
push
filds
push
dec
mov
iret
mov
push
cmp
jnp
aaa
xchg
loope
adc
dec
fisttpll
stc
fiaddl
adc
jb
notl
test
pop
sti
jb
imul
stos
sbb
push
insl
hlt
scas
test
xlat
loopne
loope
cltd
add
int3
sub
jecxz
movsb
loopne
pop
and
push
rol
ds
stos
sti
xor
mov
jp
sahf
int3
lcall
leave
pop
cmp
and
cmp
xor
out
js
shlb
js
jb
mov
outsb
mov
test
aas
adc
pop
scas
xor
adc
leave
or
mov
sub
fsubl
loope
jl
or
xchg
push
lods
xlat
imulb
jae
js
xor
inc
jbe
aas
mov
cmp
jo
imul
fstps
ror
adc
jecxz
jg
orb
je
sbb
les
xor
in
cmp
pop
inc
test
cmp
mov
pop
or
jl
je
sub
pop
inc
aad
cmp
dec
jmp
or
jbe
push
mov
adc
add
pop
pop
out
int
jg
ja
pop
imul
lret
xchg
and
mov
aam
sub
lret
lahf
cmpsl
add
adc
leave
out
popf
pop
xchg
stos
mov
sbb
push
xchg
push
inc
shr
mov
scas
lods
dec
out
mov
std
dec
clc
mov
stos
xchg
inc
mov
pop
icebp
sbb
sub
xchg
out
pusha
insl
dec
loope
inc
test
jbe
mov
jle
aad
out
in
repnz
sbb
ret
mov
jl
movsl
sbb
jecxz
mov
data16
cmp
cmp
xchg
mov
gs
and
jecxz
adc
test
push
sub
pop
xor
xchg
sbb
jmp
jo
enter
dec
xchg
out
or
adc
lahf
mov
pop
xchg
js
push
xchg
shlb
xchg
je
adc
xor
cmp
fs
cltd
loope
add
and
xchg
sub
xchg
test
fstps
xlat
cmp
out
fs
test
push
push
sub
xor
repnz
daa
mov
xchg
add
out
lret
fistl
xor
mov
and
adc
movsb
mov
roll
lret
pop
loopne
stos
sarl
mov
dec
stos
cmp
je
fwait
enter
mov
insb
push
shlb
xlat
mov
sbb
clc
xor
sub
inc
cmp
push
xor
daa
xchg
adc
xchg
dec
lock
or
mov
int3
jle
test
out
mov
cwtl
cmp
lahf
xchg
mov
mov
push
cltd
hlt
sar
fbld
push
and
int
add
mov
or
fptan
in
or
in
cmp
sub
fdivs
cmp
lea
leave
inc
out
mov
mov
mov
imul
jne
gs
pop
js
push
xchg
inc
or
pop
push
xchg
xchg
iret
gs
lahf
jbe
jl
sbb
xchg
inc
lods
lds
xor
mov
push
jns
push
enter
lret
aas
mov
mov
jg
push
imul
mov
test
jnp
pop
mov
jl
fdivl
fs
xor
pop
xor
pop
fistps
inc
xor
or
aaa
hlt
bound
lcall
cmp
fs
mov
jne
test
aaa
lea
pop
xchg
negl
mov
jbe
aaa
das
push
clc
push
push
add
push
sub
add
or
movsl
scas
adc
fst
sub
fisubs
rcll
pop
lret
setbe
cltd
movsb
dec
popa
cltd
ret
push
jmp
stos
jae
mov
xchg
xor
sub
pop
popf
in
popa
adcb
add
pop
mov
mov
cli
add
cmp
add
and
jle
dec
and
pop
mov
fidivrs
jae
dec
add
adc
sub
les
aaa
dec
in
jo
xchg
popl
sbb
shr
cmp
lahf
adc
push
xor
push
mov
jae
flds
push
pop
pop
mov
push
stos
xchg
cmp
lcall
pop
into
mov
cmc
add
outsb
orl
scas
not
insl
fisubs
ss
lahf
sbb
loopne
bound
fs
fimuls
ja
loopne
xchg
mov
test
mov
test
sbb
jnp
xrelease
sub
push
jbe
cmp
or
inc
je
sbb
aad
daa
jne
out
mov
repnz
inc
in
les
sti
icebp
push
fs
and
out
cmc
xchg
xchg
nop
decl
mov
lock
pop
inc
inc
or
sbb
jmp
rolb
cwtl
scas
ljmp
pop
shrb
test
daa
adc
xor
or
add
jnp
clc
add
movsb
adc
push
mov
in
add
jne
and
test
test
ja
sub
shll
xchg
out
ficoms
daa
test
jmp
jbe
mov
mov
les
xor
mov
cmp
in
cli
jne
cmp
adc
mov
dec
aas
pop
inc
or
pop
inc
fdivrs
add
pop
stos
es
and
rclb
or
arpl
or
push
fnstsw
outsb
inc
rcll
out
stos
pop
shl
out
mov
addr16
int3
ss
jae
pop
sbb
into
subb
push
inc
jnp
push
mov
mov
call
daa
stc
cs
pop
jbe
mov
xchg
push
fwait
mov
xor
lahf
das
cli
adc
mov
in
xchg
sbb
arpl
mov
lds
cld
incl
pop
mov
loope
or
xor
mov
mov
jbe
into
movsl
xchg
fists
mov
mov
popl
mov
jo
jns
sbb
adc
push
lahf
mov
mov
andb
lock
loop
cwtl
adcb
cmpsb
pop
js
lock
jnp
mov
add
sahf
mov
push
push
ds
jnp
push
rcrb
push
jb
mov
mov
movsb
mov
and
sub
test
clc
xchg
jle
out
jmp
cmp
rorl
fists
in
stc
push
push
jbe
sub
repnz
into
dec
inc
dec
mov
push
leave
or
push
lret
int3
mov
and
lcall
cwtl
cmp
cmp
jmp
push
sbb
data16
push
lahf
nop
pop
test
jp
stc
or
mov
jl
dec
out
cmp
add
out
pusha
mov
movq
scas
enter
push
mov
adcl
mov
lret
add
mov
push
imul
in
jmp
adc
mov
sub
sub
dec
loope
stc
cmpsl
lods
rorl
jmp
scas
test
push
mov
imul
test
xchg
xor
mov
stos
sbb
jp
sub
push
or
sub
mov
cmp
iret
jns
mov
dec
mov
mov
xor
xlat
fldt
lods
mov
scas
push
sbbl
sub
push
cmp
add
fbstp
push
stos
clc
aaa
push
cmp
lahf
das
jb
mov
fisubrl
fistps
push
dec
push
in
mov
adc
pop
inc
nop
and
xchg
pop
add
push
or
mov
inc
ret
xchg
in
pushf
inc
or
sbb
jno
ss
sti
outsb
lahf
xor
dec
push
fstl
int
lret
daa
mov
in
mov
jo
ds
mov
cwtl
adc
stos
movsl
icebp
out
push
inc
aaa
xchg
popf
lods
xor
or
icebp
or
jecxz
push
mov
insb
push
push
and
ss
add
pop
mov
dec
push
ret
int3
lahf
out
sub
arpl
add
repnz
fisttps
mov
mov
sti
inc
roll
and
jl
dec
xchg
rolb
jns
arpl
pop
movsl
popa
ja
adc
aad
ja
cmp
sub
mov
jne
adc
jl
mov
cmp
inc
mov
xor
hlt
addr16
mov
test
lret
jl
jnp
fcmove
xchg
imul
dec
sbb
and
icebp
push
pushf
ja
cmp
imul
movsl
or
push
jae
clc
sarb
sbb
jns
ss
add
push
mul
and
test
repnz
add
fisubrl
cli
sub
gs
and
nop
add
jne
mov
gs
jg
add
out
and
inc
inc
mov
or
test
aam
pop
leave
movsb
add
mov
push
push
mov
out
add
imul
dec
insb
dec
mov
loop
xor
mov
and
jo
in
cmc
decb
shl
jmp
sub
jecxz
sub
jle
int
or
fs
inc
jecxz
test
enter
les
mov
adc
xor
aam
scas
aas
xchg
lret
scas
inc
or
sub
mov
lods
mov
dec
sbb
pusha
call
pop
add
or
sub
push
rolb
imul
mov
push
dec
xchg
dec
push
mov
mov
jp
hlt
add
lock
jmp
stos
pop
adc
sub
push
test
adc
in
push
pusha
jle
jno
in
jo
inc
insb
inc
lcall
cmp
mov
shrd
insl
push
jbe
or
push
stos
sub
dec
cmp
sbb
cwtl
cmp
inc
mov
pusha
popa
mov
inc
mov
xchg
daa
sub
icebp
fldl
mov
jae
in
add
jns
ljmp
xchg
push
cmp
lds
dec
pusha
aad
sarb
dec
sbb
mov
pop
add
data16
ja
mov
ja
lods
pop
roll
lret
mov
push
out
inc
or
mov
out
jl
es
pushf
out
loopne
inc
xchg
enter
pop
shl
ror
inc
or
out
lods
loope
popf
bound
push
sbb
inc
les
arpl
dec
hlt
mov
les
add
sub
mov
pop
sub
cmp
out
cmp
fucomp
cmp
add
sub
icebp
mov
movsb
inc
adc
xor
sbb
out
and
outsb
xchg
sbb
ja
and
das
pop
psubusb
sub
sbb
pop
pop
stc
aaa
push
jnp
ret
adc
push
js
insb
mov
jns
xchg
sub
xor
stc
xorb
ja
sub
push
push
sub
lret
cmpsb
dec
jl
sub
inc
into
fwait
xor
mov
jg
popf
mov
stc
xchg
jge
rorl
test
hlt
das
cmp
dec
pusha
dec
mov
pop
and
jmp
pushf
cmp
jl
cwtl
mov
xchg
push
jo
jb
imul
push
mov
test
mov
shl
in
mov
lcall
cmp
dec
inc
pop
nopl
adcl
ret
mov
popa
inc
dec
popl
sub
or
sti
hlt
push
and
fstps
cmp
inc
idivl
or
xchg
inc
adc
icebp
cmpsb
lcall
mov
adc
sarb
iret
inc
mov
jmp
cld
pop
daa
inc
and
fisubs
mov
mov
shrb
pop
push
jns
or
stos
lock
push
jmp
adc
push
lahf
in
out
test
dec
lds
in
test
adc
add
inc
or
jb
inc
dec
out
sub
jge
stc
cmc
dec
repnz
mov
mov
add
popf
xor
imul
cld
or
sbb
in
add
dec
push
cltd
and
cmp
lret
mov
bound
jno
popl
cld
dec
mulb
inc
pop
stos
xchg
imul
cmc
fcmove
lds
sbb
adc
icebp
int
push
xchg
stos
rcrb
jo
mov
xchg
int3
dec
aad
add
leave
fidivrl
out
jno
repz
xchg
and
dec
sbb
pop
ret
dec
dec
sbb
xor
and
enter
sbb
hlt
insl
popf
shlb
pop
adc
add
or
add
das
repz
xchg
jg
jg
enter
insb
or
mov
mov
popl
mov
sbb
out
aaa
lods
mov
and
int3
jecxz
fcomps
ja
leave
test
repnz
sub
ljmp
fildll
pop
jl
adc
iret
out
mov
cwtl
mov
or
dec
mov
stos
outsb
lahf
mov
orl
cwtl
xor
push
lahf
sub
mov
aaa
or
cltd
je
mov
movsl
xor
dec
imul
fadd
test
aas
bound
xchg
loopne
scas
sti
xor
sbb
in
cmpsl
imul
push
test
xor
mov
pop
test
mov
dec
faddl
add
xlat
xor
daa
mov
loope
cltd
pand
cmp
mov
mov
sub
jmp
mov
pop
jno
arpl
dec
jbe
cltd
out
vpslld
cmc
pop
push
xor
repnz
cs
sbb
push
jecxz
pop
jmp
rol
roll
jb
scas
adc
cs
mov
sub
cmp
addr16
rolb
and
inc
pop
lret
push
mov
cltd
push
ret
cmp
lret
mov
cmp
sbb
test
add
and
sub
daa
xchg
cmp
out
jge
call
or
inc
mov
jns
and
movsl
iret
jl
add
and
jl
sarl
push
cltd
mov
rolb
jl
inc
jns
adc
mov
mov
clc
lods
gs
movsl
int3
mov
insb
cmp
stos
int
dec
rcpps
or
xchg
inc
jl
mov
inc
addr16
test
aaa
push
mov
test
inc
dec
xchg
xchg
push
mov
pushf
scas
sbb
jl
in
sub
jo
xchg
iret
cmp
inc
ret
push
inc
xchg
aas
push
lret
sti
pop
insb
dec
push
xorw
aas
movswl
ja
js
shlb
xchg
push
fldl2e
testl
test
sub
out
or
je
push
jnp
insb
sub
mov
mov
aas
cld
roll
insb
aaa
and
lock
les
or
xchg
hlt
test
xchg
pop
sbb
fdivrl
or
xchg
sub
aaa
push
dec
dec
mov
popf
cmp
mov
bnd
orb
mov
lahf
lcall
lds
inc
add
mov
fdivrl
and
push
push
in
jnp
rorl
rcll
daa
ds
xchg
push
mov
fsubrl
mov
xchg
or
aad
jb
andl
xor
lds
mov
add
out
pop
push
cs
fs
leave
lods
cmp
cmp
sub
mov
sbb
jl
inc
lods
add
mov
jae
test
scas
das
lret
shrb
jp
std
pop
push
inc
insl
add
mov
negl
adc
das
mov
lret
jg
xchg
mov
cmp
dec
and
cld
adc
push
div
jns
ljmp
test
orl
movsb
fs
ljmp
or
cmp
or
jmp
sti
rcrl
push
mov
in
sub
xor
mov
adc
adc
pop
sbb
sarl
adc
ror
add
xlat
push
dec
in
sub
xchg
aaa
frstor
stc
cli
pusha
nop
pop
inc
jnp
mov
cmp
jnp
ret
pop
outsb
adc
adc
mov
xchg
cmp
leave
int
jle
gs
addr16
and
out
cli
cmp
dec
xchg
lods
in
fwait
dec
mov
rcr
pushl
xchg
pop
aas
movb
ds
out
in
mov
cltd
lds
idiv
inc
neg
stc
push
pushf
mov
fsubr
cmp
add
outsl
mov
mov
pop
add
push
or
mov
pusha
mov
lods
sbb
leave
sub
mov
mov
cmpsb
repz
or
repz
aas
outsl
or
std
pop
mov
dec
fnsave
or
rorl
test
std
xchg
inc
push
cmpb
add
push
push
iret
sbb
fisttpll
dec
add
fwait
jbe
sub
or
gs
daa
sub
cmpsb
ljmp
sti
ret
aad
jo
cmpsl
into
out
push
cwtl
sbb
in
lcall
push
xchg
out
sbb
bound
push
jo
sbb
js
xchg
inc
rorb
pusha
jl
loope
pop
je
pop
add
cmp
jmp
dec
adc
mov
xchg
mov
lahf
gs
pop
or
jne
int
aas
outsb
sbb
aam
bound
gs
pop
pushl
pop
and
lods
addr16
arpl
pop
icebp
mov
cli
lds
fcompl
inc
add
aas
inc
cmc
or
pop
mov
into
repnz
les
fs
pusha
mov
out
aad
mov
lret
icebp
outsl
push
jns
jg
in
pop
clc
fiadds
mov
rolb
outsb
bound
xor
xor
aam
add
push
push
cmp
mov
mov
adc
inc
jp
inc
mov
mov
sub
adc
cs
or
or
adc
divl
dec
sub
sub
add
lahf
jb
lods
mov
cld
pop
ss
scas
xchg
cli
leave
int
xlat
fs
cmp
push
ljmp
inc
repnz
mov
andb
mov
in
xor
test
cs
fadds
push
xchg
dec
adc
xor
int
cmpsb
push
das
cmp
stos
test
or
xor
iret
mov
xor
insb
popf
leave
rorb
mov
lods
or
or
cwtl
ret
jno
ja
test
addb
out
aad
stc
add
leave
mov
outsb
xchg
cli
pop
push
jp
or
jl
mov
jb
stc
sbb
or
loop
jb
add
icebp
jge
or
sub
iret
xchg
aad
aam
arpl
sbb
xchg
mov
dec
mov
xchg
in
jp
xchg
jnp
push
fucomi
clc
into
das
inc
cwtl
jge
fs
cmpl
out
sub
pop
enter
cmp
lods
movsl
xchg
cmc
dec
cltd
sub
pop
lahf
popa
inc
xchg
push
jl
int
mov
pop
xchg
add
lahf
fnstcw
xchg
mov
xchg
sub
fidivrs
xor
add
sbbl
stos
out
js
test
mov
imul
jns
addr16
inc
notl
jbe
mov
sbb
ror
push
jge
adc
nop
mov
xchg
out
jecxz
xchg
dec
ljmp
or
sub
nop
ret
pop
mov
shrb
sbb
xor
loopne
rcr
mov
pop
push
sahf
movsb
or
inc
cmp
mov
ja
rclb
dec
in
adc
fnstcw
pop
test
test
mov
jge
and
sbb
jae
out
mov
inc
iret
fldl
xor
fsubrp
sbbl
aam
xlat
add
popl
mov
stos
or
push
xchg
jne
aam
fisubl
outsl
push
dec
xchg
push
int3
pop
fwait
xchg
mov
or
hlt
mov
cld
movsl
dec
imul
aam
sbb
mov
pushf
imul
inc
nop
push
rorl
sub
pushf
cmpb
ror
jmp
dec
push
fsubr
dec
sbb
and
add
test
xchg
xor
mov
out
jl
popf
pop
or
pop
xor
xchg
push
arpl
or
mov
jge
popf
inc
ljmp
iret
ret
lahf
clc
push
rcl
xchg
push
bound
movsl
repnz
into
adc
add
decb
enter
jo
fstp
ret
stos
imul
in
xlat
andl
jno
lret
in
mov
ret
jae
jb
lret
mov
das
loope
push
mov
mov
in
lcall
repz
adc
mov
and
sub
lock
testb
pop
testl
sbb
jbe
pop
in
or
push
mov
int3
scas
int
lret
hlt
mov
test
push
mov
xchg
inc
adc
mov
mov
sub
leave
ja
push
cltd
jns
sbb
in
test
fdivs
lcall
push
pop
ds
jmp
enter
ret
dec
jae
movsl
mov
add
aas
adc
test
aam
pop
into
and
popa
popl
xchg
cwtl
mov
xor
mov
pop
and
push
jo
push
js
cmp
cld
mov
fldt
dec
xchg
les
cld
cwtl
cmp
stos
mov
andb
repnz
push
inc
lret
mov
subb
movsl
fcoms
cmc
xchg
lock
mov
stc
jmp
mov
mov
imul
fdivl
inc
clc
pop
out
je
sub
sbb
push
sub
idivl
nop
mov
mov
das
pop
ss
loop
jbe
aad
or
lret
cmp
pop
xchg
dec
das
shl
jg
cmp
out
xor
xor
movsl
shll
cmp
loope
insb
dec
xor
push
pushl
dec
mov
and
hlt
pusha
stos
mov
shr
icebp
mov
daa
arpl
cmc
mov
jp
xchg
addr16
push
cmp
jmp
aas
xor
xchg
xor
sub
ljmp
insb
mov
xchg
xor
inc
jb
and
xor
leave
lea
inc
movsb
gs
sbb
jp
pop
into
mov
shrl
jbe
pop
movsl
inc
or
mov
bound
cmp
loopne
add
arpl
mov
pop
bound
mov
cli
scas
and
lret
outsl
cmpsl
stos
outsl
jae
sub
mov
sar
lock
fstps
loope
jbe
adc
lahf
cmp
mov
cmp
xlat
icebp
das
push
dec
xor
dec
sahf
push
icebp
pop
xchg
lcall
popa
scas
cmp
out
sbb
add
xchg
xchg
add
push
add
mov
dec
jl
inc
outsl
imul
adc
xchg
adc
imul
cwtl
push
mov
fndisi(8087
xchg
dec
lock
sub
jl
loop
lds
xchg
cld
out
or
rcl
fs
inc
loop
push
js
dec
xchg
dec
dec
push
cltd
sub
fdivl
pop
mov
push
pop
xor
xor
int
fs
sub
dec
xor
mov
je
iret
aas
sub
repnz
lds
jg
add
adc
outsb
nop
loop
scas
leave
lods
es
aaa
mov
data16
aaa
xchg
out
mov
add
dec
das
stc
xor
call
mov
xchg
lds
out
mov
lea
inc
mov
int
ja
aad
insb
jo
pop
mov
rcr
jg
mov
push
arpl
cs
mov
pop
mov
pop
mov
icebp
add
ret
incb
mov
scas
xor
shrb
push
mov
push
lds
std
cmc
out
fisubs
and
fidivl
outsl
xchg
call
cmpsb
dec
aas
out
mov
fsub
pop
cmp
in
pop
jmp
out
outsb
jmp
dec
lods
fistl
dec
add
cs
xchg
cmp
sbb
lret
stc
mov
cld
ja
lea
es
js
inc
iret
mov
fnstenv
div
lret
or
mov
cld
test
or
insb
add
inc
lock
repz
int
mov
lahf
sbb
shl
mov
negl
leave
rcr
movsb
sti
dec
sbb
fisubrl
mov
pop
es
aam
pop
cmp
inc
cmp
test
push
int
insl
sar
in
mov
inc
loop
mov
sub
mov
lret
mov
out
jae
cld
jecxz
pop
insl
movsb
insl
mov
mov
sub
jp
lock
cli
lods
mov
and
cltd
cmp
xchg
stos
inc
lret
sbb
pop
dec
mov
sub
mov
mov
mov
jb
or
cmp
jl
daa
cmp
ljmp
out
addb
nop
rol
cmp
in
insb
pop
inc
shr
jge
mov
add
data16
and
jmp
mov
js
add
and
insb
xor
arpl
sub
mov
cmpsb
xchg
test
sahf
adc
pop
pop
xlat
push
cmp
outsb
or
cmp
shrb
sti
pop
xor
imul
and
push
call
sbbl
dec
repz
mov
test
js
ror
adc
je
mov
inc
repnz
icebp
push
mov
outsb
inc
jle
sub
jge
sub
outsl
imul
and
sub
and
testl
adc
inc
and
call
ret
imul
adc
inc
pushf
xor
leave
divl
nop
sbb
cwtl
adc
das
xor
xor
add
shlb
mov
push
cmc
xor
and
in
fdivrs
mov
mov
add
in
push
mov
in
xorl
fiaddl
xchg
push
adc
pop
aam
repnz
xchg
push
daa
pop
inc
leave
bound
enter
int3
shlb
out
cltd
mov
mov
inc
pop
fwait
stc
js
outsb
mov
mov
sub
mov
outsb
push
call
sbb
enter
ret
fisubs
jne
push
mov
adc
movsl
mov
pop
movsb
xchg
daa
jmp
addr16
popl
push
mov
aaa
mov
in
sti
adc
sbb
lock
and
mov
arpl
ret
les
inc
outsb
push
in
sbb
leave
je
js
cmp
push
cmp
inc
int3
mov
sub
test
fwait
repz
jle
in
and
enter
sbb
ret
push
xchg
gs
pop
cmpsb
fsubs
nop
rorl
ss
mov
int3
lret
ret
subb
dec
mov
inc
out
gs
pusha
pop
pop
repnz
cmc
ds
xchg
xor
dec
lods
sahf
jbe
aad
and
int
or
pop
xlat
nop
outsb
ljmp
ss
xorl
and
stos
xlat
je
fisubl
ss
adc
mov
xchg
adc
int3
faddl
mov
out
mov
or
add
adc
inc
push
and
sub
xchg
mov
cmp
cmp
sbb
sub
dec
sbb
dec
push
hlt
and
jno
mov
fisttpll
jle
mov
pop
ficomps
mov
inc
mov
jnp
jmp
xlat
push
clc
adc
lret
outsl
and
or
fwait
add
push
cli
jnp
jle
mov
sub
loopne
adc
add
inc
dec
inc
dec
xchg
notl
sub
mov
std
push
nop
jl
push
lods
adc
cmc
scas
push
add
aad
out
fbstp
mov
aas
rcll
cmp
repnz
lock
mov
insb
dec
roll
push
outsb
nop
test
xchg
push
lret
arpl
popf
test
jmp
call
cmp
leave
pop
add
dec
stos
inc
dec
repz
xchg
adc
and
cmp
shl
inc
sub
cltd
sbb
xlat
fmuls
push
cmova
sub
leave
mov
jno
cwtl
ret
add
and
je
cmp
dec
test
push
mov
int3
mov
rcll
addr16
idiv
or
push
xchg
call
mov
sub
xor
xchg
add
pop
test
ret
cmp
jo
cmp
dec
lret
pop
push
clc
inc
xchg
sbb
push
lock
inc
pop
insl
out
dec
fisubrs
scas
mov
movsl
enter
jge
mov
xor
inc
arpl
jae
repnz
xor
test
test
pop
scas
fwait
push
lock
stc
rcrb
divl
sub
mov
test
mov
or
push
xor
fiadds
and
mov
das
mov
push
jae
insb
and
mov
xlat
movsb
cli
ret
cmpsb
lods
loope
pusha
fs
xchg
push
xor
xchg
iret
fadd
pop
sub
xchg
jo
dec
xor
js
add
push
xchg
jle
mov
cmp
inc
es
shrl
lods
std
lcall
sub
jo
leave
cmc
jbe
aad
shll
mov
test
mov
es
add
cmp
cmp
aas
les
sub
test
clc
gs
mov
dec
sahf
ja
or
push
aaa
mov
fiaddl
cmpl
pushf
push
cmpsl
or
pop
pop
daa
aas
pop
xchg
inc
push
and
lea
mov
mov
dec
xor
push
pop
call
or
add
insl
xor
mov
or
mov
out
outsb
sub
loope
xor
daa
ficomps
fistl
xchg
dec
mov
orb
xchg
int3
sbb
inc
dec
xchg
pop
add
hlt
xchg
outsb
loopne
sahf
jb
xor
cmpsl
jb
mov
xor
mov
sub
int
jne
pusha
nop
je
mov
test
inc
or
lret
sti
lods
jnp
sbb
or
aam
add
dec
mov
fnstenv
pop
negl
addr16
popa
pop
cmovns
popf
add
out
push
push
fmuls
mov
sub
cld
ja
and
icebp
cli
mov
outsl
jmp
test
rol
mov
aad
insl
xchg
cli
push
mov
jp
test
cli
jo
xchg
sti
rcrl
jne
sbb
xor
mov
test
int
inc
mov
add
stos
cmp
inc
out
add
cli
iret
or
jg
inc
les
inc
repnz
mov
xchg
mov
cli
ret
pop
loop
sub
ss
scas
dec
xor
dec
xchg
pop
outsl
jae
into
ja
mov
pop
gs
sti
mov
out
shll
sub
into
fidivs
sbb
add
or
cmpsb
adc
sti
mov
pop
std
fisubrl
mov
cwtl
pop
sbb
fs
ljmp
dec
cltd
pop
ljmp
fsubrp
push
mov
dec
fisubs
pop
mov
fidivl
scas
iret
mov
push
xchg
add
and
imull
push
dec
mov
out
push
repnz
sbb
lea
rcrl
mov
fcomps
and
rorl
xchg
sahf
jnp
ficoms
jbe
fsubl
lcall
call
sahf
and
test
roll
imul
pusha
jns
sub
add
push
sub
jl
adc
cld
cli
lods
pusha
jmp
xor
mov
sbb
dec
shlb
cmp
and
inc
ljmp
out
popa
jae
rclb
jns
xor
adc
mov
adc
pop
mov
cld
popf
mov
mov
ret
jg
pop
xchg
xor
and
popf
xchg
int
arpl
or
movsl
push
in
cmp
sbb
jg
les
xor
call
bound
push
rcrb
int
insl
aad
inc
push
inc
insb
mov
cwtl
pop
mov
into
les
jbe
rcr
cld
mov
adc
fld
lret
gs
stc
pop
cmp
mov
sbb
inc
decb
cmp
mov
xor
jmp
in
push
xchg
push
push
pop
fsubrs
loopne
cmp
lret
mov
mov
movsl
daa
fdivrs
adc
mov
das
mov
mov
shll
sahf
popl
xor
int3
cmp
cmp
pop
inc
add
mov
call
fadd
dec
gs
hlt
mov
push
and
sbb
push
jne
inc
inc
imul
jno
lock
sub
loopne
test
dec
movsl
xchg
inc
imul
sbb
ret
loop
je
fsubs
test
cld
shr
push
and
xchg
pop
xchg
icebp
cmp
inc
cmp
in
mov
hlt
sbb
jle
int
out
jg
fucom
jmp
pop
mov
or
loop
xchg
mov
je
or
fstp
push
pop
test
push
shll
std
sti
out
add
pop
pop
outsb
cmp
xlat
pop
mov
sbb
jns
dec
and
flds
jecxz
or
pop
mov
mov
mov
cwtl
xor
and
mov
jle
cmp
daa
stc
sbb
aas
movsb
xchg
fisubl
test
outsb
pusha
in
hlt
mov
dec
lret
test
shrl
sub
push
lods
repz
outsl
subl
in
in
arpl
cmp
jb
pop
lock
les
jnp
aam
scas
repnz
bound
add
dec
lret
cmpsl
pop
mov
jno
sub
ror
nop
inc
dec
loopne
out
clc
dec
pop
jo
adc
push
cltd
and
insl
dec
jge
je
mov
pop
inc
mov
repnz
divl
adc
iret
aaa
insl
sub
mov
cmp
outsl
or
fiadds
jnp
test
cmp
adc
or
fldenv
mov
xor
xor
xchg
or
aaa
mov
xchg
enter
push
sbb
call
daa
aam
mov
cld
loop
pop
fnstsw
rcl
rcl
xchg
or
jae
out
repz
push
add
popf
addb
xor
js
in
push
out
dec
inc
stos
movsl
mov
daa
sbbb
mov
ja
push
or
and
xchg
cmp
movl
pop
imul
test
fldl2e
xchg
pop
sub
pop
shrb
pop
sti
inc
push
pop
mov
sub
sbb
dec
gs
mov
pcmpgtb
push
fisubs
and
xchg
notl
popf
add
pop
mov
mov
xchg
xchg
std
push
jno
lret
scas
cmpsl
push
pop
xor
add
pop
push
or
bnd
cmpsb
add
mov
dec
sub
dec
stc
into
lds
jle
inc
lea
hlt
pop
mov
sti
push
out
popa
fsubrs
outsl
sub
sti
add
cmpsb
and
pop
sbb
adc
cwtl
pop
bnd
lret
mov
clc
jnp
or
or
out
adc
jle
mov
mov
inc
or
mov
add
and
loop
and
xor
inc
movsb
and
push
mov
std
jns
into
imul
popf
daa
xchg
in
pop
int3
push
testb
outsb
cwtl
cmp
adc
pop
ljmp
sbb
mov
popa
dec
cli
cmp
or
stos
shrl
rorb
sub
hlt
sbb
push
aas
nop
xchg
xchg
add
lcall
mov
icebp
adc
or
xor
mov
and
sbb
xchg
stos
xor
test
adc
sbb
je
mov
inc
mov
sbb
sub
shll
xchg
pop
mov
jno
scas
inc
jle
aaa
xchg
mov
adc
cmpb
testl
stc
int3
xor
movsl
loope
outsb
xchg
sarl
cmc
shlb
scas
leave
out
out
mov
or
xchg
fdivs
mov
sub
xchg
fucomp
int
dec
mov
cmpsl
mov
scas
popf
fisubs
cmc
imul
mov
mov
xchg
nopl
loop
pop
add
or
gs
pop
sti
mov
add
pop
cmp
jae
xchg
jns
loop
sbb
inc
andl
jle
mov
outsb
cmc
jmp
mov
jno
sbb
mov
test
in
nop
lds
cmp
cld
jbe
lea
mov
popl
push
push
add
and
pop
pop
pop
mov
in
jae
or
test
mov
inc
pop
sti
out
jae,pn
push
into
stc
and
shl
popa
xchg
or
jge
aam
pop
loop
bound
iret
iret
mov
mov
sub
mov
fdivr
mov
icebp
inc
ss
jle
xchg
cmp
rcll
inc
call
std
dec
in
testb
leave
inc
inc
sub
pop
testb
int3
push
enter
xor
arpl
mov
mov
xor
call
iret
bound
les
cmc
mov
les
lods
clc
dec
imul
loop
xchg
cltd
or
jp
cmc
lock
and
and
or
mov
loop
dec
int3
inc
loop
lret
out
mov
rcl
adc
cs
dec
icebp
or
fadds
or
pop
xchg
push
mov
dec
in
pop
fldt
inc
ds
jp
out
cmp
pusha
outsl
sub
adc
jb
movsl
loope
enter
push
std
outsb
xlat
in
fisubl
mov
mov
adc
or
push
aas
pop
movsb
rol
add
rcrl
xchg
cmp
testb
in
testl
imul
fisttpl
dec
mov
fadds
repnz
ds
pushf
jmp
cli
in
loopne
or
xchg
cmpsl
insl
sub
popa
sbb
mov
ror
cltd
sub
cmp
cmp
jl
dec
aad
dec
fisubl
jmp
cmp
mov
divb
and
jecxz
into
cwtl
sbb
pop
pop
pop
out
adc
clc
rclb
stos
pop
cmpsl
out
mov
insl
sub
int3
das
push
rolb
gs
sbb
lea
cmp
loope
cmp
dec
int3
cmp
sbb
lahf
add
pop
addr16
xchg
scas
xchg
mov
pop
and
ret
cld
sahf
xchg
shll
sbb
cmp
mov
jno
push
stc
inc
les
outsb
sub
adc
test
jbe
ja
das
test
cmpsb
pop
cmc
jge
push
ds
push
stos
ljmp
mov
dec
cltd
jae
aad
push
jge
cmc
xchg
or
fstpt
cmp
stos
sbb
or
adc
fldl
out
loope
bound
lock
mov
xorl
gs
ret
xchg
push
roll
jge
dec
test
sbbb
xchg
stos
mov
sbb
aas
popf
ds
adc
into
mov
arpl
or
pusha
inc
sarl
shlb
movsb
pop
clc
jge
gs
or
pusha
jp
test
pop
push
or
movsl
push
outsb
xor
daa
aaa
mov
jno
xor
pop
inc
and
dec
lahf
jnp
xor
add
xchg
jmp
dec
pop
push
loop
incl
loopne
mov
and
fbstp
les
inc
push
cmp
xlat
sbb
call
cwtl
and
pop
mov
insb
adc
loop
jbe
and
repnz
dec
add
cmp
cwtl
fwait
xchg
test
fcomip
pop
adc
cmc
jecxz
add
call
cmp
mov
mov
sbb
mov
enter
inc
sti
adc
psubsb
loopne
adc
adc
mov
aaa
xchg
xchg
jmp
adc
mov
and
rcr
lahf
testl
mov
imul
lret
dec
push
mov
lcall
mov
loop
sbb
inc
sti
fsts
rcr
or
ret
aad
lods
dec
test
fldt
nop
mov
test
not
arpl
loop
pop
xchg
cwtl
mov
cmp
push
mov
adc
add
scas
in
mov
sahf
jb
iret
out
cmpxchg
sbbb
inc
xchg
pop
popa
mov
push
mov
out
cmp
call
push
enter
ret
mov
pop
jl
imul
xchg
rcrl
push
shll
jle
sub
fsts
add
mov
movsl
pop
xchg
sbb
subl
mov
mov
aas
orl
jae
sbb
pop
repz
out
or
push
lods
in
adc
xchg
push
adc
dec
mov
sbb
dec
pop
inc
pop
adc
les
lret
sub
xchg
fdivrl
ds
inc
xor
das
or
loopne
adc
lea
fmull
test
pop
orl
sbb
mov
push
mov
fisubrs
loop
push
in
out
push
sub
test
ret
aad
xor
push
cmp
mov
lock
sub
adc
jne
push
jmp
sbb
cmp
mov
lcall
xchg
xor
jne
dec
jg
mov
call
lahf
adc
ss
fisttpll
int3
das
cmp
jb
popf
xlat
mov
jo
lcall
sub
cmp
xor
lahf
orl
pop
mov
jns
pop
mov
mov
mov
dec
add
fmull
jp
inc
sbb
pop
push
in
mov
adc
cs
jge
lret
cmpsb
jns
icebp
xchg
mov
fldl2t
add
sar
sub
aas
dec
jne
iret
xchg
dec
adc
outsb
lds
loope
daa
sti
imul
ja
ja
call
push
push
and
sub
sbb
mov
push
and
or
and
dec
cmpsb
cmpsl
jmp
and
jge
in
cwtl
test
xchg
and
lret
cmp
and
or
dec
push
pop
push
ficompl
pushl
jnp
push
inc
in
hlt
and
out
mov
movsb
rcrl
sub
fisubl
test
cwtl
shlb
xchg
cmp
xchg
daa
mov
pop
test
jns
frstor
shrl
jl
inc
mov
xchg
es
jecxz
out
pusha
dec
add
xchg
fstpl
dec
fmull
add
cmp
or
jmp
mov
and
jne
fists
inc
int
cmp
mov
jl
out
push
mov
nop
mov
pop
xchg
xchg
dec
xor
mov
pop
dec
mov
outsl
dec
mov
jno
int
insl
xchg
movsb
jbe
arpl
ret
out
pop
mov
jo
arpl
or
xchg
ja
push
mov
cmp
ss
imul
mov
pushf
cmpsb
pushf
push
popa
test
shl
loop
or
test
and
dec
es
fistl
cltd
cld
push
mov
sbb
call
or
movsl
lds
inc
jae
pop
mov
pusha
and
mov
imul
push
mov
xchg
inc
inc
jne
out
inc
lock
aaa
jp
movsl
push
add
push
xchg
scas
sbb
xor
pop
in
push
rol
daa
jecxz
push
jle
pop
fwait
sti
std
popf
loopne
mov
in
fisubrl
xchg
das
fldl
fcmovnbe
xorl
dec
jnp
xor
adc
sub
mov
cli
push
mov
fdivrp
push
cli
out
adc
mov
in
xor
repz
sbb
es
rcr
packuswb
fdiv
orl
or
stos
in
lcall
or
xchg
inc
fistps
dec
cmp
cmp
ljmp
inc
push
roll
xor
repnz
push
test
and
cld
inc
sub
jmp
and
ds
or
dec
dec
test
sar
imul
popa
ret
mov
insb
or
jge
jle
sub
jae
fidivl
sbb
icebp
mov
xchg
lahf
in
es
mov
aaa
shll
insl
push
scas
inc
mov
xchg
push
xchg
dec
xchg
xchg
in
insb
enter
xorb
cmp
push
scas
cli
enter
xor
aam
add
into
push
xor
or
sahf
xchg
stc
daa
xor
repz
imul
sub
inc
pop
js
mov
mov
cltd
icebp
insl
lds
loop
fs
jne
push
push
xorb
pop
loop
jle
lock
pop
ja
xlat
xchg
movsb
icebp
pop
xchg
mov
xor
lods
fidivl
data16
ret
js
xchg
std
je
and
mov
lods
jne
aam
inc
xchg
call
jg
jl
inc
lret
push
in
push
movsl
ljmp
mov
xchg
or
ret
sbb
mov
leave
or
push
in
lret
aas
mov
jne
imul
jl
imul
jmp
add
lret
pop
sbb
movsb
fwait
and
and
daa
lcall
int3
loopne
xor
rolb
push
inc
dec
lahf
addr16
stos
daa
inc
out
clc
add
jecxz
ret
jae
xchg
cwtl
into
inc
rcrb
out
popf
fwait
test
shl
mov
dec
stos
sbb
and
adc
mull
pop
xor
jp
xchg
fsubrl
push
sub
jae
in
mov
pop
mov
jmp
xchg
iret
int3
inc
sbb
movsb
cmpb
insl
mov
xchg
mov
cmp
push
test
rclb
cs
push
stos
outsb
jp
clc
imul
adc
ret
out
adc
mov
mov
loopne
dec
inc
jo
push
sub
gs
pop
pop
add
insb
enter
xor
loopne
xlat
repnz
shl
mov
stos
push
inc
stc
sub
pop
les
push
jmp
lret
fwait
xchg
or
fistps
pop
fistpl
rcrl
imul
out
push
lds
iret
xchg
xchg
daa
push
enter
jl
cs
push
xchg
fnstenv
sub
mov
sub
jge
outsl
pop
xchg
mov
mov
pusha
dec
imul
mov
loope
push
call
stos
out
paddusw
lahf
les
jne
push
lret
and
sahf
ret
in
push
inc
mov
orb
push
mov
nop
add
sub
fnstenv
repz
dec
cmp
ficoml
out
mov
mov
xchg
sbb
aam
cli
das
xchg
cmpl
add
pop
leave
int3
sbb
loop
sahf
mov
add
rorb
stos
imul
lahf
mov
test
mov
idivb
push
loope
xor
mov
movsb
mov
repnz
pop
and
mov
flds
aad
aaa
fildl
lcall
xor
insl
scas
fs
mov
mov
pop
cwtl
out
into
hlt
repz
mov
addr16
fwait
jmp
testl
xchg
mull
or
stos
repnz
shll
add
jp
push
jp
fwait
push
mov
outsl
xchg
in
bound
out
fimuls
mov
mov
inc
aad
sbb
add
cld
jnp
mov
fldt
repnz
xchg
daa
xor
xchg
shrb
mov
flds
sbb
push
jo
pop
and
add
popa
imul
movb
sbb
test
sbbb
sti
dec
xchg
dec
iret
sahf
lea
inc
jbe
popf
push
sub
in
mov
sub
pop
and
lds
xor
das
push
in
fwait
popa
lods
movsl
inc
into
ret
inc
fidivrs
mov
scas
jo,pn
fwait
jae
inc
pop
adc
aaa
or
or
sti
stos
jno
push
pop
add
mov
das
fiaddl
xchg
loope
jle
cld
in
jmp
ret
arpl
les
push
pop
mov
mov
dec
pop
cmp
dec
pop
jnp
dec
lds
scas
jmp
jg
sbb
enter
xchg
loope
cli
nop
dec
push
xchg
lret
adc
jne
pushl
xor
sub
std
rorb
cli
sbb
lret
cmp
add
inc
mov
stos
or
pushf
ret
icebp
push
and
pop
add
mov
jb
mov
sbb
mov
shll
fistps
mov
hlt
mov
outsl
data16
addr16
sub
mov
mov
adc
push
cmp
scas
or
add
dec
stc
jmp
cmp
mov
adc
lock
clc
mov
fimuls
jle
xor
cwtl
jecxz
ss
xchg
sub
arpl
in
xchg
mov
cltd
stos
xlat
out
outsl
xor
sub
mov
mov
cmp
pop
pop
fcompl
or
cld
lret
jae
or
inc
sub
dec
pop
ret
sub
shll
cmp
test
and
mov
sarb
pop
rcll
xchg
fcoms
hlt
sbb
stos
mov
lret
hlt
xor
sbb
lea
jmp
lock
imul
mov
push
xchg
mov
xchg
jl
scas
lahf
push
outsb
testb
mov
mov
add
or
mov
ds
pop
mov
xchg
stc
mov
rcll
push
pop
outsb
leave
xchg
in
scas
adc
aas
mov
aaa
and
rcrl
rclb
leave
mov
icebp
push
adc
cvtdq2ps
jl
cmpsb
inc
enter
fstpt
or
xlat
sbb
jbe
inc
jmp
sub
imul
jg
inc
mov
mov
test
pop
dec
xor
cli
shlb
lock
sbb
jne
fwait
mov
cmpsb
test
jg
fcomi
mov
testl
out
add
mov
inc
and
cmp
pop
pop
push
xchg
or
inc
das
outsb
cwtl
inc
iret
aam
pop
lcall
pop
sub
mov
lahf
clc
emms
sub
jecxz
je
sbb
and
mov
jns
fdivl
inc
dec
jbe
loopne
rorl
dec
es
in
pop
sbb
es
push
mov
push
lahf
dec
push
adc
jne
mov
andl
dec
or
xlat
pop
xor
fimull
jge
inc
mov
xor
mov
das
loop
aaa
xchg
sbb
xor
test
cwtl
sti
sub
imul
mov
xor
dec
jnp
inc
fbld
sub
les
leave
or
xchg
xor
scas
add
shr
stos
sar
icebp
call
lock
cmp
jecxz
stc
xor
in
adc
les
das
les
sbb
push
sub
js
and
cmp
xor
and
xchg
scas
int3
outsb
enter
lds
mov
mov
popf
and
icebp
lock
data16
repnz
aas
out
cmc
pop
out
lcall
mov
jl
xor
enter
icebp
lock
loop
add
dec
fstpl
sbbl
loope
ljmp
xor
pusha
cmp
mov
pop
aad
xchg
cltd
aas
inc
mov
stos
jecxz
dec
jno
popa
inc
xchg
rclb
fisttps
mov
daa
sub
pusha
pusha
jno
jo
cmpsl
inc
into
repnz
into
hlt
jl
mov
pop
pusha
xchg
jo
repnz
pushl
out
int
dec
sub
sub
xchg
std
jns
lock
cmpsl
fdiv
lea
jnp
ss
xor
jg
xchg
adc
mov
mov
push
sbb
push
adc
int
fiaddl
mov
fidivrl
add
lock
fidivs
adc
out
jmp
dec
xchg
roll
mov
imul
aad
jecxz
adc
mov
xor
mov
popa
testb
jle
sbb
cld
cmpl
fcmovne
pop
roll
or
sti
and
dec
push
mov
out
bound
adc
inc
mov
popa
sub
xor
xchg
mov
pop
call
push
add
mov
inc
ret
fistpll
insb
jp
insl
or
jo
iret
jb
xorb
movsb
sbb
cs
jmp
dec
xor
xchg
add
scas
or
test
dec
ficoml
in
xchg
cmp
clc
jl
gs
les
push
out
dec
cs
jle
sbb
mov
test
sbb
out
or
test
rolb
dec
jns
stc
dec
lcall
ret
mov
repz
insl
push
jl
push
pop
fcmovnbe
imul
insb
rcr
mov
jno
into
sbb
adc
add
loop
test
addl
xchg
scas
les
mov
mov
das
fistl
int3
nop
sbb
les
push
and
enter
std
imul
cmp
test
mov
and
add
or
rclb
cwtl
sub
nop
fnstenv
add
out
insl
push
xchg
enter
shl
mov
xchg
jecxz
das
call
jbe
loopne
gs
lds
cmp
lods
fisubrs
popl
and
dec
sbb
pop
stos
xor
int3
pop
pop
xchg
cli
es
push
out
xor
scas
sub
push
jnp
clc
shll
dec
in
and
add
sahf
stos
cmp
lret
sbb
sbb
shlb
adc
and
push
cmc
mov
fsubs
je
sub
and
repz
lods
lret
cmp
rcrl
add
mov
dec
xchg
xchg
fcoms
test
push
daa
cmpb
outsl
mov
stos
mov
stos
scas
push
inc
sub
nop
repz
add
inc
cmp
sub
clc
fs
sub
in
paddw
pop
push
lock
mov
pop
mov
pop
mov
mov
fcomp
cs
shlb
push
xchg
xchg
lcall
or
dec
movsb
test
jmp
inc
sti
aam
mov
into
adc
and
popa
lea
out
sahf
and
in
jns
push
sbb
lock
popf
jmp
out
push
andb
xchg
data16
mov
ret
ljmp
xor
inc
mov
xor
mov
aad
aam
mov
mov
into
scas
mov
aad
xor
aam
cli
fwait
ja
fildl
mov
ja
mov
mov
adc
push
sbb
mov
jb
in
andl
jbe
cwtl
dec
cmp
push
jge
pop
push
icebp
les
cmp
jmp
pusha
outsl
pop
das
xor
mov
das
adc
inc
int
xchg
xchg
adc
xorb
enter
mov
sbb
rorb
test
sbb
lds
or
loop
lret
xchg
imul
push
add
sbb
add
inc
lea
push
adc
add
dec
sbb
mov
mov
test
sub
ret
push
pushf
inc
mov
aas
mov
push
pushf
ffreep
push
mov
andb
movb
hlt
popf
inc
mov
xor
imul
xor
mov
add
or
xchg
int3
fsts
ret
xorl
or
repnz
mov
mov
jmp
cmpsb
icebp
repz
dec
mov
and
and
xchg
xor
mov
cwtl
mov
xchg
sub
inc
lret
aam
adc
loop
out
outsl
sbb
sbb
loop
imul
inc
dec
ret
jb
and
xor
fldl
push
in
stos
xor
std
pop
pop
pop
rcl
fldl
cmp
sti
push
clc
testl
int
mov
mov
sub
test
scas
or
sub
jp
mov
jns
sarb
mov
imul
pop
push
xor
jge
pusha
in
sub
cmp
jno
mov
sbb
mov
adc
stos
push
dec
movsb
aaa
das
jns
dec
inc
jmp
mov
add
jb
mov
scas
dec
aam
xchg
dec
xlat
push
inc
movsl
insl
sbb
jg
mov
mov
mov
gs
loope
push
add
adc
cmpsb
int
sbbl
daa
push
jnp
push
stos
mov
into
jl
xor
into
incl
outsb
or
sub
pop
int
sbb
jmp
push
jge
adcb
ds
xrelease
inc
ret
pop
lret
sbb
add
lcall
inc
popl
int3
test
add
add
ret
and
jl
jns
mov
xchg
lret
mov
mov
iret
cld
dec
mov
cwtl
dec
sbb
jnp
mov
inc
jge
and
sub
pusha
out
pop
dec
add
push
test
inc
sbb
sahf
out
mov
mov
mov
pop
jae
or
sbb
jecxz
dec
mov
dec
lret
and
cmpsl
sarb
sbb
fistpll
in
daa
pop
orb
data16
imul
dec
mov
call
xor
mov
ficoml
shlb
xor
xchg
mov
jnp
adc
fiadds
sbb
or
leave
fsub
std
or
add
pop
std
nop
popa
and
inc
xchg
pop
cmp
inc
ljmp
ret
imul
neg
jecxz
cld
mov
or
mov
mov
std
jmp
out
fs
adc
lods
xor
add
inc
push
sub
push
push
out
push
int3
outsb
push
lcall
mov
insb
sarl
xchg
addl
mov
int
mov
test
ja
ret
ljmp
call
imul
cld
and
dec
and
dec
mov
inc
outsb
stos
and
mov
std
inc
dec
jbe
jge
adc
mov
cmc
mov
adc
adcl
in
xchg
rcll
and
shll
xchg
sub
mov
fwait
daa
jbe
gs
cli
sahf
pushf
adcb
dec
sbb
and
adc
xor
iret
call
out
pop
cs
mov
xchg
sbb
sub
adc
jb
mov
adc
loop
dec
fimull
cmp
je
or
pop
sub
into
out
cmp
ja
or
fsubrl
sub
mov
jb
loop
push
mov
xchg
dec
jle
xchg
cwtl
cmp
and
cmc
jns
repnz
fdivrs
iret
cmp
sbb
xchg
xchg
clc
ret
jo
lcall
lcall
adc
fstl
sub
shll
in
lahf
sub
js
and
insb
shr
xor
adcb
pop
push
dec
fs
imulb
sbb
add
pop
cmc
jns
fdivl
insl
dec
lret
faddl
dec
data16
addr16
xchg
out
mov
call
cmpsb
xchg
cwtl
xor
call
and
jbe
imul
repz
in
fisubrl
jp
mov
adc
cmp
cmc
pusha
in
test
cwtl
pushf
sbb
mov
aam
addr16
lods
rorl
insl
pop
xor
xlat
stc
xchg
push
in
adc
faddp
in
frstor
loop
sub
mov
mov
fstl
push
scas
mov
lods
or
mov
jmp
lcall
sbb
ficoml
add
sbb
sub
imul
pop
loop
cld
push
outsl
lret
inc
cld
sahf
aas
loope
mov
pushf
sbb
add
push
movsb
xadd
inc
dec
add
fisttps
movsb
in
inc
in
pusha
js
mov
mov
ds
xor
mov
cmp
mov
stos
fstp
cmp
mov
jp
push
sub
mov
sub
push
jne
or
outsl
mov
mov
dec
push
cmpsb
lahf
daa
gs
jne
outsl
inc
sub
call
add
mov
arpl
cmp
gs
mov
mov
aam
mov
adcl
loop
push
adc
popf
into
jbe
push
sbb
in
lahf
inc
mov
and
subl
lret
fsubp
arpl
pushf
xor
adc
fsts
fsin
inc
ficoml
xlat
push
xor
ss
push
lods
inc
ljmp
pop
mov
jg
xchg
push
add
xorb
xchg
and
sarl
test
push
xor
sbb
movsb
sbb
push
push
push
lret
aas
push
or
mov
xlat
inc
fadds
sub
mov
jmp
add
mov
and
roll
imul
sub
enter
xchg
cli
loopne
jle
adc
jp
xchg
jle
lahf
fimull
imul
stos
scas
repz
stos
jns
sub
roll
mov
in
mov
cli
in
rcl
xchg
lss
fistps
pusha
lods
test
push
mov
mov
pop
mov
cmp
sub
mov
loopne
pushf
outsb
dec
and
jle
jle
mov
add
cmp
jae
pop
andb
lret
dec
dec
push
rcrl
or
cmp
adc
and
outsl
cmp
push
and
outsl
xor
mov
lock
xor
addr16
inc
sbb
or
or
lock
xlat
ja
iret
into
stc
adc
mov
fstpl
sbb
sub
int3
or
jae
push
xor
adc
xchg
repnz
fadds
xchg
cmpsl
add
out
pop
andl
mov
mov
imul
push
add
xchg
clc
hlt
jno
iret
insb
daa
and
jns
leave
das
dec
sub
icebp
xchg
testb
mov
add
jecxz
out
fs
sbb
popa
push
ds
pop
fldenv
dec
lcall
outsl
jmp
popa
and
pop
mov
aad
push
adc
xchg
pop
or
mov
xor
std
mov
ja
call
pop
leave
and
adc
out
pop
xchg
or
inc
dec
pop
mov
jecxz
adc
lea
inc
orb
xchg
mov
ss
rolb
xchg
movhps
decb
push
inc
jecxz
jo
sbb
push
inc
add
mov
aad
add
mov
sub
mov
movsb
in
mov
jbe
mov
inc
jne
in
ss
jnp
mov
or
popa
xorl
adc
or
cld
shrb
add
mov
stos
icebp
loop
xchg
sbb
push
fdivl
sub
stos
cmp
loope
and
mov
fidivrs
mov
sub
testb
mov
and
in
sbb
je
cmp
lcall
xchg
and
sbb
sbb
aas
sbb
xchg
push
and
jle
loop
std
jno
pop
add
repz
mov
push
les
xchg
sub
pop
jno
push
std
dec
rclb
or
clc
out
or
data16
pop
repz
fimull
mov
or
inc
mov
cmp
cmpsb
ljmp
enter
lods
int3
adc
mov
lea
jns
xchg
lock
jmp
xor
repnz
insb
push
jle
sub
xchg
punpckldq
lods
xchg
int
and
push
xor
sub
movsl
push
inc
mov
mov
jbe
jbe
xlat
inc
inc
mov
push
pop
arpl
pop
xor
pop
mov
or
cmc
fstpt
push
rorl
jae
lahf
rclb
jnp
jle
inc
pop
fdivrl
clc
in
das
pop
les
add
jno
mov
pushf
xor
loopne
pusha
jnp
or
aam
fldl
lfs
bsr
or
int3
es
subb
and
mov
pushl
cltd
ret
push
into
rolb
cmp
jmp
stos
enter
sbb
lock
push
xchg
jno
sarl
test
fnstsw
dec
test
insb
loope
dec
xor
mov
int3
outsb
mov
shl
daa
xor
jae
fs
xchg
sub
cmp
cmpsl
lock
rorl
stc
jo
mov
fdiv
push
arpl
mov
mov
jmp
adc
lahf
fsts
mov
or
xchg
sub
and
imul
mov
lock
scas
or
xor
stc
not
lds
repz
pop
jge
push
adc
mov
cmp
fsubl
inc
cmp
mov
mov
test
movsb
mov
insl
lret
fdivrl
in
pop
inc
jns
jns
leave
mov
sbb
loope
movsl
add
xor
sub
jecxz
je
push
int3
negl
adc
mov
and
inc
ret
and
xchg
xor
pop
cmc
and
xchg
dec
jbe
pop
push
lea
je
mov
push
push
push
dec
push
jne
les
or
pop
popf
cli
imull
jmp
mov
push
int
mov
imul
and
push
outsl
xor
mov
popa
and
dec
lods
and
aad
outsb
in
hlt
xor
insl
push
enter
setp
dec
mov
dec
cmp
xchg
cmp
leave
dec
cmpsl
lods
dec
inc
iret
jg
pop
push
fs
fwait
ret
or
pop
cmc
jbe
sub
lds
gs
lock
movsl
push
pop
xor
sbb
mov
cmp
dec
imul
jmp
mov
mov
out
sub
cs
sub
or
rorb
jge
repnz
mov
out
mul
push
sbb
mov
mov
popf
and
repz
das
std
xor
xchg
xchg
mov
pushf
rorb
ss
mov
sbb
std
imul
xchg
mov
or
aas
sbb
les
cmp
pop
mov
mov
jbe
dec
add
push
cmpsb
xorb
mov
cmc
pop
push
lods
les
popf
test
jmp
popf
and
jl
pusha
divl
lcall
mov
repz
dec
pop
mov
cmp
xchg
xor
pop
jecxz
in
pop
pop
movl
insb
repz
stos
pop
in
or
adc
cli
mov
cmp
push
dec
mov
push
and
inc
scas
int
int3
mov
in
or
pop
inc
cld
push
xor
mov
sbb
lcall
hlt
or
lods
pop
push
mov
push
mov
and
jae
push
and
outsl
jbe
rcr
popa
or
jne
mov
rcrb
frstor
adc
in
pop
fsubs
enter
cmp
inc
out
jmp
les
pushf
adc
push
addl
adc
imul
and
sbb
pop
stos
dec
pop
popa
mov
or
fwait
cmp
inc
pop
jb
fnstenv
out
dec
ss
sbb
and
pop
aad
pop
daa
push
xchg
outsb
add
lods
inc
jnp
in
aas
xchg
cmc
adc
push
cmp
imul
nop
ret
sar
sbb
sub
test
inc
jg
adcl
sbb
loopne
aam
inc
sarb
fidivrl
fidivrs
stc
or
out
cmp
pop
aad
xor
jo
sbb
pusha
aad
pop
jp
mov
std
or
out
es
stos
sub
cld
insb
or
sbb
imul
in
lret
cmp
xchg
leave
push
pop
push
cmpb
mov
insl
jmp
push
bound
dec
aad
test
add
in
adc
cs
add
push
and
xor
pusha
iret
movsb
shl
inc
out
fst
lcall
inc
fs
xchg
insb
sbb
mov
pop
inc
mov
icebp
ja
jmp
aad
loope
mov
iret
jmp
dec
xor
mov
pop
mov
push
into
stos
lcall
scas
cld
fcoml
pop
nop
out
push
push
pop
movsb
ja
cmc
dec
fs
mov
or
xchg
mov
or
lock
scas
dec
mov
xor
aaa
adc
arpl
jg
scas
and
call
inc
das
adc
adc
daa
jnp
outsb
add
add
lods
js
sub
mov
xchg
mov
push
js
cmpsb
xor
mov
cwtl
out
enter
xor
fs
cli
bound
xor
jp
add
jno
push
cld
xchg
outsb
cli
cli
add
into
mov
and
mov
stos
scas
fiaddl
dec
mov
dec
cmpsb
mov
jno
pop
lock
rcl
mov
int
je
add
jne
hlt
push
push
stos
movsb
fists
push
cmp
dec
dec
pop
sub
adc
dec
imul
cltd
sbb
adc
mov
xor
add
xchg
popf
cmp
gs
call
jno
addl
ljmp
lret
sub
loopne
pop
std
mov
push
push
mov
sbb
mov
xchg
mov
out
shr
sar
popf
inc
stos
dec
bound
adc
mov
pop
test
cmp
mov
pusha
and
mov
adc
lea
lret
dec
icebp
mov
ljmp
mov
add
rorb
sbb
lock
icebp
jo
repnz
nop
cld
outsl
jle
jne
sarb
call
fisubrl
rolb
enter
lcall
add
add
ficoml
lahf
bound
popf
aam
dec
repz
jge
out
mov
jo
lock
test
icebp
lock
mov
gs
ljmp
movsb
movsb
lret
mov
xchg
mov
movsl
imul
mov
inc
jno
push
and
ret
cmc
xchg
inc
xor
inc
jbe
push
in
cmp
lods
or
push
sbb
sahf
xlat
fidivrs
and
stc
gs
stos
ljmp
jmp
push
int3
cmp
inc
jp
leave
aad
int
pop
arpl
sub
leave
add
sub
das
sbb
loope
aaa
add
pop
sub
sbb
xor
xchg
dec
add
or
pop
lock
mov
je
js
jnp
popf
mov
lahf
jge
cld
cmp
arpl
jae
mov
test
xor
pop
sti
addr16
shr
sbb
sub
dec
daa
fcompl
sbb
inc
in
mov
add
sahf
mov
xchg
sbb
cmpsl
std
lret
cmp
cmp
sub
xchg
xor
mov
pop
pop
sub
mov
mov
les
xchg
insb
mov
xlat
and
jmp
fwait
imul
andb
sbb
and
lds
and
fst
dec
bound
subl
sbb
adc
jecxz
jl
mov
mov
and
es
pushf
push
or
frstor
jne
lahf
pop
ds
nop
sub
push
jb
ret
dec
xchg
push
outsl
nop
jge
dec
imul
and
fs
cwtl
adc
clc
mov
xor
inc
or
lret
scas
pop
ljmp
stos
in
mov
rorl
dec
add
pop
cmp
lret
mov
mov
jl
cmp
jo
scas
adc
testl
inc
insl
outsl
in
imul
outsl
ljmp
imul
or
adc
mov
outsb
rcll
fmuls
dec
pop
push
sahf
jns
xchg
adc
and
test
iret
xchg
addr16
mov
and
push
stc
mov
dec
mov
xor
add
les
jmp
add
mov
xchg
cmp
aaa
insl
jecxz
test
xchg
test
xchg
shl
mul
jecxz
test
xor
jmp
mov
pushf
test
mov
pop
or
loope
sti
mov
testl
cwtl
orl
in
lea
jle
movsb
es
push
test
cld
add
mov
inc
sub
or
icebp
stos
scas
xchg
xor
sbb
sbb
or
nop
or
cmp
dec
inc
mov
xor
and
pop
jmp
push
and
jl
test
push
sub
sbbl
iret
je
int
adc
mov
add
pop
ja
xchg
nop
das
mov
add
mov
divb
or
lret
clc
adc
or
push
mov
stos
aam
sar
xorb
iret
xchg
fstpt
aaa
movsl
push
mov
scas
adc
and
pop
and
jecxz
icebp
sbb
cmpsb
xor
lock
cmpb
pop
repz
ljmp
pop
cmpsl
add
push
mov
dec
jno
fidivl
cld
imul
cmc
loopne
xorl
add
dec
sarl
cmp
std
pusha
pop
cmpb
fwait
jnp
icebp
lds
xchg
jle
sbb
out
jno
js
jecxz
mov
idivb
xor
js
or
cld
and
dec
inc
out
monitor
jo
popf
and
push
stos
or
push
pop
out
dec
xor
lods
fwait
xchg
fnsave
and
push
lods
xchg
or
out
add
fwait
pop
mov
inc
in
and
mov
ja
jecxz
shll
scas
repnz
mov
pusha
cmovl
mov
fimuls
lea
in
pop
and
and
leave
hlt
sbb
stc
and
imul
jnp
add
test
andl
mov
mov
movsl
jge
movsl
dec
jns
movswl
add
pusha
icebp
push
mov
roll
inc
shlb
mov
loopne
rcll
rorl
ds
aam
cmp
jns
pop
sub
es
jo
add
xchg
pop
cmpsb
aas
hlt
jge
xchg
bound
iret
pusha
loop
push
iret
and
or
shl
mov
ficoms
into
add
sahf
dec
or
aas
fildl
daa
push
mov
repnz
imul
int3
push
pushf
adcl
adc
lahf
int3
mov
lret
cmp
or
push
in
jge
aaa
cmp
vpcmpgtb
jp
xor
mov
popa
ja
cld
stos
dec
cmp
sub
push
imul
sarb
fwait
loop
cli
push
out
mov
add
in
sub
and
or
add
cmp
sti
pop
inc
sbb
popf
sbb
push
xchg
dec
inc
int
dec
lcall
xor
shlb
cmp
push
lods
jmp
jg
inc
out
pusha
cmp
or
aaa
cltd
fadd
dec
xchg
jle
jns
mov
jbe
outsb
pop
dec
mov
or
dec
sarb
mov
cld
in
sbb
inc
mov
pop
sbb
push
mov
in
mov
xchg
sbb
mov
and
iret
or
pop
jmp
adc
jmp
mov
mov
neg
add
or
dec
popa
mov
mov
jmp
fistpl
mov
push
cmp
dec
into
adc
out
xchg
jbe
not
das
ret
and
test
push
push
adc
rcl
push
mov
sub
cld
adc
lods
adc
pop
lods
push
cltd
aad
dec
rcrl
cmc
call
mov
es
push
imul
dec
out
frstor
jmp
sti
stos
adc
popf
add
loop
pop
mov
movsl
jecxz
les
add
push
cmp
imul
mov
in
pop
xchg
jge,pn
pop
out
adc
mov
enter
aam
cli
and
xor
or
jo
dec
cmp
adc
jne
call
pop
pusha
jmp
xchg
or
test
in
cltd
fld
cmp
jmp
scas
aaa
push
jp
insb
sub
orb
es
mov
push
xchg
pop
xor
and
cld
adc
sub
imul
neg
xchg
cmp
stos
adc
icebp
ficompl
aaa
insb
lcall
lds
and
xchg
insb
pop
pop
jge
cwtl
ret
clc
fnsave
or
or
xor
js
inc
push
push
mov
rcll
add
pop
mov
push
sub
hlt
sbb
fnstenv
dec
fisubl
jo
mov
aad
sub
xchg
sahf
call
aad
inc
pop
gs
sbb
cmp
call
jae
insl
aam
neg
bnd
loop
add
add
cmpsb
jecxz
stos
movsl
fsub
mov
mov
insl
cmp
rorl
mov
cmp
imul
adc
xchg
je
adc
push
xlat
test
dec
dec
jo
hlt
xchg
scas
or
cmpsb
shrl
xlat
mov
xchg
mov
call
inc
ja
jecxz
dec
and
push
dec
test
jno
mov
mov
push
jns
mov
int3
sahf
sub
repz
std
push
lock
movsb
lock
lods
sbb
lds
mov
push
inc
pop
popw
daa
fstl
jbe
dec
jp
adc
dec
rolb
pop
mov
clc
fadd
out
lods
mov
adc
sbb
push
xor
in
pushf
pop
mov
fsts
loope
faddl
mov
or
loop
loop
push
and
mov
in
pop
dec
popf
xor
andb
dec
inc
cmpsl
pop
sub
in
iret
movsl
test
mov
enter
mov
notl
xor
mov
inc
sbb
pushf
fdivrp
and
int3
xchg
popf
into
rcrb
lret
insl
lods
jp
lcall
jge
sub
clc
and
rolb
aam
push
xchg
out
push
clc
xchg
lods
leave
ss
ret
lods
or
dec
loopne
in
dec
and
das
icebp
cmpsb
jl
ss
and
push
into
cwtl
push
sbb
imul
inc
mov
jge
push
fimuls
outsl
push
mov
daa
add
mov
fldenv
out
andb
mov
out
sbb
loope
out
push
pop
pop
mov
daa
mov
mov
lahf
xor
xchg
aam
in
mov
lret
inc
mov
push
pop
cli
cmc
jle
dec
dec
sub
aaa
lea
insl
das
push
mov
xor
arpl
dec
aaa
xchg
sub
or
mov
add
mov
out
xchg
mov
sbb
mov
stos
jl
xor
int
and
movsb
or
xor
pop
sbb
dec
adc
int3
outsb
mov
jge
imul
xchg
jp
insl
push
cli
push
mov
sub
and
xor
fildll
not
fisttpll
shl
inc
sub
je
rcr
ret
das
ss
stos
mov
inc
sub
xchg
filds
les
loope
pop
call
jno
jg
ja
mov
bound
pop
sbb
fldl
mov
cltd
cld
jmp
jg
test
insb
xlat
jle
mov
fwait
push
cmc
and
ret
ss
jbe
jecxz
stos
cmp
cmpsl
xchg
sbb
nop
dec
dec
roll
and
dec
out
xchg
out
add
mov
jg
and
jmp
ds
pop
scas
dec
insb
call
cmp
add
insl
push
adc
xor
jno
minps
mov
sub
ss
fwait
loopne
push
dec
pop
sub
and
sbb
jl
addb
inc
fwait
ret
or
xchg
lret
jp
jle
movsl
xchg
popa
insl
out
mov
aas
inc
cmp
test
sub
mov
push
push
test
push
out
aas
ds
decb
mov
sbb
pusha
rcrb
dec
pop
ret
or
out
ret
mov
jg
arpl
lret
pop
sbb
mov
iret
cs
dec
repz
insl
std
rcr
stc
sbb
jnp
jp
repnz
stos
inc
ficompl
jbe
mov
movsl
push
xchg
or
aam
scas
mov
xchg
fnstsw
jl
pop
outsl
pop
imul
xrelease
out
mov
scas
dec
sahf
cmp
mov
aad
fmuls
lock
pop
jecxz
imul
mov
lea
and
inc
sub
popf
dec
mov
add
mov
xchg
leave
inc
xor
pusha
sbb
mov
inc
pop
les
sahf
repnz
daa
cmp
test
add
xchg
std
lret
mov
mov
test
shlb
jge
and
arpl
push
mov
sti
jg
cs
andl
dec
mov
add
cs
or
push
das
pop
cmp
push
repz
std
sub
lods
mov
insb
or
push
aam
inc
jnp
arpl
cli
icebp
lock
pop
push
sbb
test
negl
mov
add
add
xor
ss
xor
jmp
cs
pushf
popa
adc
or
jp
inc
mov
bound
or
cltd
cmp
popa
push
shll
int
mov
jns
cmp
push
in
inc
xchg
jb
popa
pop
aaa
stos
cltd
div
xchg
pop
adc
mov
xchg
stos
lods
shl
shll
dec
or
inc
sti
test
out
jge
dec
add
es
adc
xchg
ret
push
fstpl
sbb
xchg
push
sbb
push
mov
jns
adc
pushf
pop
popf
push
mov
mov
fistpl
mov
aaa
insl
fdivs
fidivs
pop
push
sbb
mov
jns
add
lods
outsl
and
ljmp
dec
push
cmp
fsubrl
mul
js
movsb
cltd
inc
mov
es
leave
mov
nop
inc
mov
fists
in
stc
incb
or
scas
loopne
testl
ret
enter
lea
cmc
jns
stos
push
lcall
ljmp
mov
cmp
mov
fildl
pop
xchg
outsb
mov
and
sbb
in
aaa
push
sbb
dec
sti
hlt
xchg
jb
outsl
outsl
xor
cli
loop
mov
mov
aam
xchg
inc
jno
lret
pop
push
pusha
sbbl
xor
push
inc
push
in
jmp
or
xchg
cltd
or
mov
test
xchg
enter
jbe
inc
ret
xor
and
mov
mov
aam
or
cmp
inc
pop
aaa
or
ss
add
push
negl
popa
int3
jne
sub
mov
add
arpl
test
add
out
xor
sub
int3
aam
dec
pop
test
les
test
or
mov
sub
jp
sub
stos
in
cmp
fwait
sahf
js
loop
out
mov
data16
xor
mov
sbb
shll
loop
xor
and
test
stos
mov
loopne
sub
jl
jmp
test
arpl
inc
adc
inc
add
and
mov
xor
xchg
cs
cmpsb
and
and
mov
enter
pushf
fmuls
adc
out
xlat
pop
mov
xor
push
pop
jnp
mov
push
leave
out
cmp
adc
es
add
idivb
hlt
or
fisttps
js
outsb
in
insl
mov
aas
clc
inc
fs
jle
jl
lcall
into
popf
imul
xchg
ja
ja
cmpsl
les
jp
aas
pop
inc
fsubrs
pusha
jae
pop
les
mov
push
mov
outsb
gs
inc
add
scas
mov
or
jmp
cmpsb
cli
insl
mov
ret
sub
sti
into
cld
lods
pop
jle
pop
clc
popf
sub
jecxz
es
mov
loopne
ret
xlat
push
push
hlt
sub
inc
loop
sub
jge
jne
ret
pushf
aas
cld
rorl
mov
fisubs
push
je
sub
lret
nop
outsl
jg
xor
add
xchg
mov
xor
je
ret
adc
imul
xrstors
sbb
icebp
xorl
xchg
jl
mov
mov
test
inc
in
das
lcall
dec
xor
mov
scas
shr
ds
lar
and
aam
popf
sub
pop
mov
addr16
fsubrs
xor
cltd
data16
jo
sbb
out
lcall
aad
xor
ret
dec
mov
lods
imul
pop
cmp
inc
mov
mov
loopne
mov
add
xor
cs
inc
mov
enter
jo
imul
popf
jge
lea
pop
cmc
lret
mov
mov
pop
andl
fldcw
cmp
xor
testl
loop
inc
jp
daa
sbb
stc
mov
lods
jge
addb
or
mov
nop
aad
mov
jge
js
cltd
add
in
sbb
pushf
sbb
test
ds
or
push
ljmp
adc
shlb
sub
push
lods
add
fcoml
aas
sub
pop
add
pop
out
jmp
xor
sub
jne
dec
pushf
adc
inc
dec
lcall
rcll
pushf
inc
je,pt
inc
inc
loop
cmp
and
stos
xchg
add
test
aam
leave
insl
mov
xchg
inc
adc
cmp
inc
repz
fisttpl
pop
mov
sti
lds
incb
out
cld
bound
vpmacsswd
aaa
mov
adc
lret
or
scas
pop
mov
xchg
cwtl
jp
stos
or
inc
icebp
mov
jle
aas
adc
notl
rcr
aas
mov
mov
xor
and
in
mov
lods
test
push
je
sbb
scas
xchg
cmpsl
aad
movsb
data16
aad
ficomps
xchg
icebp
test
ds
pop
inc
push
lods
fs
xor
jnp
cmp
ss
loope
add
pop
cmp
stos
adc
addr16
sub
jb
enter
mov
mov
into
call
fimull
ja
mov
xor
sahf
inc
mov
negl
loop
dec
out
adc
adc
jmp
mov
out
out
pusha
sub
mov
sub
ljmp
in
inc
xor
mov
mov
insb
icebp
push
shl
repz
imul
js
xchg
loopne
ja
lock
aam
cmp
mov
aad
mov
cmp
js
scas
jge
mov
mov
fiadds
mov
pop
jge
in
and
inc
movsl
rcrb
pop
sub
mov
and
add
inc
pop
lret
in
mov
mov
xchg
jmp
adc
jns
outsl
ljmp
mov
movsb
push
or
sub
ljmp
or
popf
jl
mov
daa
and
out
call
out
adc
or
faddl
test
andb
and
dec
mov
add
sub
and
sahf
jl
push
xchg
lret
sub
or
cmp
push
dec
test
sbb
cmpsb
in
xchg
pop
sahf
sub
outsb
pop
xor
cld
enter
push
cmp
mov
push
dec
adc
stos
icebp
cmpsb
xchg
sub
add
push
xor
dec
ljmp
jmp
xor
jmp
and
rcrb
in
je
inc
dec
fdivrl
flds
jp
jnp
mov
ds
out
jnp
sub
mov
jne
jns
bound
in
test
std
outsb
mov
fdivs
dec
inc
in
xchg
mov
test
cld
jge
mov
mov
pop
out
into
lea
movsl
sbb
in
xor
xlat
pop
stos
fsubl
push
xchg
mov
scas
fcmovnbe
or
mov
loope
into
imul
fsubrl
cld
lock
add
xlat
lret
pop
pop
jecxz
pop
test
lods
sbb
jmp
icebp
and
and
or
adc
jp
ficomps
mov
lods
xchg
shlb
xor
test
cld
jp
fcomip
fwait
cmp
lea
lds
mov
jae
test
xchg
call
out
sub
rorb
cmc
pop
sti
out
dec
testl
and
sbb
and
cmpb
stc
cmp
sbb
adc
fnstenv
ror
mov
mov
scas
shl
sbb
xchg
ja
or
push
and
aad
jne
movsl
adc
test
mov
in
jbe
ret
sbb
or
fsubs
icebp
push
push
jl
nop
cmp
cmp
push
mov
ffree
jg
aas
mov
cwtl
jnp
out
mov
std
mov
jbe
and
add
cld
sub
xchg
add
xchg
lea
xor
scas
loop,pn
test
sbb
cmp
and
or
call
imul
in
ret
pop
adc
and
addr16
scas
popf
in
in
jo
aaa
mov
and
adcl
pop
push
add
dec
xor
shll
mov
lea
push
out
test
jmp
push
gs
or
dec
mov
mov
xchg
xor
xchg
mov
jp
imul
lea
mov
mov
pop
mov
test
out
pop
lods
test
pushf
rcr
sti
push
sbb
push
dec
je
andl
mov
pop
mov
icebp
fdivr
add
mov
and
xchg
mov
push
leave
push
divb
mov
xor
int
cwtl
adc
jmp
aam
push
dec
stc
push
lods
push
test
inc
mov
fcompl
mov
push
nop
xor
stc
in
std
imul
push
int
cmp
and
fwait
nop
dec
paddusw
inc
popa
xchg
push
add
loope
jmp
inc
shlb
mov
jb
and
rorb
lock
lret
test
stc
adc
lea
clc
jae
icebp
mov
lcall
aad
inc
test
lcall
cmpsb
cmp
aaa
cld
outsb
stos
je
jne
xor
and
in
jp
out
sub
js
xor
daa
adc
test
stc
shrb
sbb
adc
add
push
and
inc
push
sbb
loop
lea
sub
subb
sahf
and
add
xor
sbb
icebp
push
mov
sti
das
shrl
outsl
mov
test
imul
add
pop
inc
or
fildl
dec
negb
mov
jge
leave
pop
xor
outsb
cltd
cmpsb
lods
cmpsl
adc
pop
sbb
inc
dec
sbb
pop
cmpb
cmp
jmp
mov
or
inc
ja
das
mov
mov
pusha
sahf
mov
subb
push
out
mov
pusha
jno
lods
sbb
mov
sti
into
shll
add
mov
inc
clc
jle
add
orl
adc
push
movzbl
push
ss
mov
mov
in
xchg
add
and
or
pusha
stos
or
xchg
and
in
mov
sbb
cmp
cli
fsubrl
lcall
xchg
pop
mov
mov
cmpsl
cmp
out
fs
js
mov
fxam
les
cltd
pop
fs
sbb
mov
inc
adc
sbb
xchg
pop
cltd
sbb
inc
mov
into
sbb
push
pop
rcr
add
cmpsl
sbb
lcall
pop
and
sbb
mov
insl
and
mov
orb
stos
arpl
push
cli
inc
or
test
test
push
sbb
sahf
andb
xchg
jg
xchg
mov
adc
loopne
aas
or
dec
dec
andb
inc
adc
iret
xchg
pop
arpl
cld
sub
cwtl
inc
cmp
sbb
cmc
inc
xor
in
ret
and
in
out
gs
loopne
test
pop
es
jae
iret
push
sbb
jmp
pop
cld
dec
mov
scas
insb
in
sub
cmp
push
cwtl
ja
icebp
xchg
lahf
push
push
cmpb
sti
mov
cs
lods
jo
jnp
cmp
insb
adc
ja
enter
lods
sbb
sub
iret
fstps
inc
dec
push
enter
repnz
inc
jl
xor
add
in
sub
stos
xchg
mov
dec
pop
sub
push
dec
icebp
jb
dec
dec
nop
decb
jb
and
cmpsb
ret
mov
mov
es
frstor
sub
mov
out
mov
jmp
rcr
dec
adc
ret
add
xchg
dec
loope
dec
aaa
icebp
jl
xchg
ss
or
aas
test
mov
jmp
mov
nop
xchg
adc
jge
jo
mov
adc
sbb
push
dec
cmp
inc
mov
rclb
out
fnstenv
cmp
mov
mov
mov
jle
or
adc
cmpsl
add
sub
fisubrs
pushf
stos
cmpsb
nop
aam
loopne
cs
dec
mull
ljmp
push
shrl
push
ss
jecxz
and
mov
and
nop
sub
jnp
test
jno
jl
stc
imul
add
mov
adc
pop
jl
adc
out
loope
daa
cli
mov
sbb
aas
dec
mov
sti
pop
push
sub
xor
popa
push
push
cmp
enter
push
repnz
xor
push
mov
mov
pop
sbb
push
subb
lcall
xor
lock
pop
sbbl
push
push
xchg
adc
fcomip
filds
test
loop
outsl
fidivrl
test
inc
xlat
or
jne
adc
push
in
ss
mov
cmpsl
fisttpll
mov
aas
stc
lock
sbbl
xor
cltd
add
or
fsubrs
fimull
ss
xchg
jmp
sbb
fistpl
jo
ret
insb
imul
dec
jbe
dec
push
sahf
adc
cmp
pop
jg
sti
dec
inc
mov
xchg
add
and
push
adc
xchg
push
dec
cmc
or
dec
lret
or
xor
ds
aaa
rcll
lret
push
jnp
xor
jmp
jl
dec
pop
jbe
push
out
imul
aas
in
dec
push
test
mov
or
jg
sahf
out
mov
aas
adc
adc
nop
and
xchg
insb
xchg
imull
icebp
ret
and
dec
stos
lret
lods
popf
mov
dec
cli
daa
cmp
mov
sbb
arpl
sbb
lds
mov
xor
rcll
pop
je
lahf
stc
jge
dec
mov
lock
cli
repz
cmp
xor
inc
sbb
xor
jmp
cmp
ss
int
mov
adc
inc
dec
cld
call
dec
xchg
sbb
and
ds
ljmp
icebp
jge
mov
sbb
sub
xor
mov
add
stos
xlat
popa
jnp
scas
js
pop
push
scas
mov
sbb
sbb
into
inc
inc
ficompl
inc
adc
into
cs
sarb
inc
sub
dec
or
push
ss
icebp
jae
fadd
xchg
xchg
mov
insl
cmp
add
pop
xlat
sub
push
outsb
sbb
mov
cmp
push
aaa
jb
jns
jne
adc
addr16
add
shll
fwait
add
pop
mov
lcall
cmp
jp
jl
xchg
inc
mov
insl
ja
out
fisttpl
push
cld
cwtl
sti
push
stos
aam
pushf
mov
push
mov
mov
cmpsb
xor
inc
and
dec
push
and
jl
xchg
sub
rcll
pop
rcll
jmp
xchg
jo
lret
es
fmulp
insl
test
mov
incb
xor
cmp
dec
cmp
push
sbb
shlb
pusha
dec
pop
pop
pop
js
in
mov
rolb
mov
test
lret
push
rclb
into
sbb
cltd
mov
ds
cmp
pop
mov
push
push
mov
adc
mov
add
inc
mov
testl
and
push
lahf
pop
andb
jae
sahf
or
sbb
sub
test
pop
mov
adc
pop
mov
add
and
xchg
in
adc
pop
push
cmp
pusha
enter
or
jmp
shll
mov
cmp
lea
mov
ret
fwait
jae
add
icebp
xor
les
xor
xchg
and
xchg
aam
rol
fsubrs
pop
or
jne
in
sub
out
imul
jge
adc
pop
sub
movsl
popa
sbb
aad
pop
cmp
pusha
in
daa
roll
xchg
jg
mov
add
cwtl
jmp
int3
rcr
inc
insl
fwait
lret
cmp
cwtl
mov
mull
mov
and
subb
out
das
leave
inc
clc
fistpl
xchg
adc
and
mov
push
or
mov
jns
in
les
popf
add
xchg
jmp
cltd
add
idivb
inc
push
adc
mov
mov
pop
lods
pushf
outsl
xor
lods
clc
xor
shlb
pop
push
lcall
lds
jl
or
nop
cmpsl
cmc
xchg
dec
sbb
add
stos
xchg
jbe
pop
into
add
push
js
push
mov
rorl
lods
jns
inc
pop
addl
and
stos
loop
mov
xchg
fwait
add
in
dec
fs
adc
pop
push
daa
test
loopne
xlat
outsb
es
cld
xchg
pop
js
lods
inc
xor
es
and
shll
xor
mov
push
pop
pop
aad
inc
js
scas
xchg
ljmp
fsubl
repnz
pop
mov
aam
pushf
das
subl
inc
fisubs
mov
insl
test
add
cmp
jecxz
movsb
sub
hlt
jmp
xchg
rorl
jo
push
sbb
and
loopne
xchg
mov
jecxz
xchg
rol
cmp
iret
outsb
dec
pop
ds
sar
test
sbb
mov
icebp
mov
mov
pop
adc
dec
jb
xor
xor
stos
pop
push
jp
jge
cmp
xor
adcb
stos
xor
ja
jl
sub
jg
ss
out
jl
iret
jmp
jb
out
aaa
gs
testl
push
xor
shll
or
dec
and
stos
negb
ss
xor
cltd
ss
and
xchg
pop
jne
shrb
jbe
jecxz
xchg
jae
cmpsb
subb
adc
add
push
push
stc
jmp
fimuls
ret
fnstcw
shlb
adc
push
cmp
hlt
cmp
lds
es
cwtl
dec
and
out
push
daa
sbb
push
stos
lds
push
xor
mov
dec
loopne
jns
enter
lret
pop
dec
pop
push
cld
inc
push
jmp
inc
cwtl
repnz
adc
movsb
xchg
outsb
ljmp
loope
insb
lods
jl
imul
and
lods
sub
mov
dec
lock
mov
lods
lods
clc
int
loopne
cmpb
cmpsl
and
pushl
pop
sub
mov
pushf
pop
sarl
xchg
cmp
mov
xorb
addr16
xlat
sub
iret
jge
mov
lea
insb
sub
jnp
loope
sahf
mov
or
movsb
std
push
mov
push
xchg
mov
cs
xchg
mov
lret
ljmp
mov
fs
ljmp
leave
add
rcl
or
pop
pop
lcall
mov
and
addr16
mov
cld
cmc
xchg
mov
cld
pop
insl
shlb
add
js
mov
aam
sarl
mov
packuswb
sahf
stos
mov
idiv
int3
xchg
inc
jecxz
pusha
fcomip
xchg
push
ret
or
mov
push
sub
leave
fdivrs
add
insl
mov
xchg
leave
movsl
lods
enter
mov
push
pop
dec
jne
jmp
mov
aad
xor
sbb
subb
ret
ret
xchg
mov
inc
dec
ret
pop
xchg
mov
sbb
fidivs
call
cmp
xchg
aad
push
cmp
push
push
shl
xlat
xchg
mov
sub
dec
inc
outsb
xorb
fnclex
insb
add
repnz
ret
mov
leave
insb
scas
cwtl
jno
sarl
pop
jle
jb
inc
mov
cli
adc
mov
insb
dec
dec
movsl
xor
fdivrp
aaa
pop
int3
aas
fxrstor
dec
jmp
int3
enter
dec
clc
fbstp
stc
xchg
add
mov
mov
out
movsl
mov
ror
xchg
mov
inc
fucomp
mov
adc
mov
add
andb
es
shlb
sbb
imul
enter
pop
add
add
roll
push
inc
dec
insb
into
xchg
es
pusha
xchg
xchg
repz
or
xor
add
repz
int3
popf
in
aad
cs
jl
pop
rclb
in
sti
das
gs
add
cmp
sbb
leave
ds
mov
cmp
pop
adc
or
fwait
dec
mov
lahf
in
lcall
jne
xlat
mov
xchg
imul
pop
jg
test
das
xor
cmpb
jle
int3
and
cmpsl
adc
lret
std
xchg
push
in
fbld
push
jb
stc
jo
xchg
fdivrl
inc
repnz
pusha
pop
adcl
push
mov
ret
jl
cmp
dec
icebp
jb
dec
test
mov
add
lock
push
cmpsl
movsl
push
addb
lahf
mov
lds
or
lods
mov
nop
outsl
stos
push
js
push
inc
lock
nop
jns
or
pushf
fwait
cld
mov
cmp
sub
js
push
pop
ret
rorl
and
add
push
mov
add
mov
sbb
xchg
cmp
add
push
and
xchg
adc
ljmp
pop
mov
jo
cmp
sub
and
pop
jns
cmc
loopne
lods
cmp
ja
imul
cs
cmpsb
daa
mov
dec
jg
out
push
cmp
add
pop
scas
leave
cmp
js
push
xchg
pop
bound
popa
gs
jbe
cmp
sbb
jle
mov
jae
mov
cmp
cmpsb
mov
cmp
stos
xchg
xchg
pop
ret
arpl
aas
jge
into
pop
ds
cmp
push
mov
and
sbb
jno
imul
repnz
shl
aaa
fs
imul
out
mov
out
cmp
mov
lods
mov
les
pusha
lds
mov
imul
inc
arpl
clc
fldenv
pop
xchg
sbb
mov
aad
cmp
sbb
push
jns
fnsave
xlat
cmpb
pop
mov
clc
subl
rcr
repnz
clc
fstps
mov
aaa
adc
inc
push
mov
pop
mov
fsub
dec
pop
mov
dec
mov
inc
hlt
xchg
cmc
das
cmova
stos
out
mov
xchg
mov
mov
insb
cmpsl
mov
rol
aas
nop
cld
xchg
test
dec
mov
in
add
popf
ds
ja
bound
aas
mov
and
je
cli
fiadds
lods
push
pusha
xor
fnstenv
cmp
dec
insl
jno
mov
jg
and
add
xchg
and
add
push
mov
repz
idivl
mov
fidivl
lahf
or
mov
adc
mov
mov
rcl
out
inc
xor
ret
inc
jmp
fidivs
add
ret
fwait
ja
ret
jns
jno
inc
push
into
andl
mov
lea
shlb
je
or
lods
pop
dec
stc
xor
dec
pop
aaa
shll
sti
js
repz
popf
pop
rorb
jno
pusha
xchg
je
mov
adc
lds
js
adc
insb
sub
inc
es
int
cmp
push
sbb
mov
cmp
gs
fcoml
xchg
popa
pop
adc
jbe
arpl
and
push
sub
popl
xor
daa
int
jno
inc
aam
xchg
pushf
sbb
es
aas
rcrl
lods
or
mov
ds
out
decl
js
shlb
fldt
or
xchg
xor
hlt
sub
jecxz
xor
xor
stos
xchg
dec
mov
jp
xor
jbe
mov
fsts
clc
cmp
add
inc
inc
push
mov
cwtl
fnstenv
mov
mov
imulb
jo
lea
add
les
mov
sub
sbb
jae
test
rolb
call
insb
pushf
sub
xlat
clc
inc
repnz
adc
sti
adc
loop
sub
add
adc
negb
jp
test
call
adc
into
cmpsb
add
xchg
mov
scas
mov
lds
inc
adcl
sub
xchg
pop
push
cltd
jbe
and
push
mov
mov
ret
fs
lods
into
shl
and
adc
push
rcr
call
in
jo
js
dec
movsb
xorl
xor
stos
dec
lret
pop
popa
out
mov
push
jae
mov
jp
jl
mov
sub
test
push
sub
jno
push
pop
and
sti
jmp
mov
inc
mov
leave
pushf
ret
jno
sbbl
jbe
test
inc
mov
mov
cld
stc
fisttps
iret
dec
inc
dec
inc
ret
arpl
cld
in
push
sbb
ljmp
addl
add
pop
adc
pop
stos
fs
add
les
ljmp
sub
mov
das
cld
gs
stc
mov
aad
aas
iret
add
mov
xchg
adc
lret
fsubl
out
dec
inc
mov
push
dec
fists
out
inc
lods
xchg
nop
aam
icebp
lcall
das
and
add
cli
jecxz
loopne
hlt
push
ret
out
in
negb
movl
pop
ljmp
popa
ss
dec
mov
xor
lods
xchg
dec
lea
xor
jecxz
mov
sub
js
sbb
ss
into
sarb
mov
sti
out
fstps
cmpsb
cwtl
mov
jno
push
std
repnz
push
sarl
push
scas
inc
in
adc
popa
adc
mov
lret
mov
jb
cmpsb
loopne
or
aas
ss
hlt
pop
out
inc
cmpsb
int3
add
dec
andb
cltd
inc
xor
outsb
add
and
mov
icebp
and
xchg
xchg
xor
xchg
jle
or
mov
cmc
fidivl
mov
push
mov
stos
mov
sti
cmp
ret
mov
fldt
into
fldt
popf
xchg
jp
mov
xchg
cmp
clc
out
pop
inc
sti
int3
and
xor
pop
pop
jecxz
in
add
repz
cmpl
mov
mov
xchg
leave
xchg
mov
out
lods
je
mov
jae
imul
inc
daa
test
addr16
adc
mov
addl
lds
pusha
mov
mov
mov
cmp
mov
cmpl
dec
and
adc
lods
fwait
push
stc
jle
and
mov
hlt
out
xchg
call
cltd
lahf
mov
sbb
dec
sbb
mov
xchg
movsb
mov
sbb
add
or
frstor
pop
loopne
sbb
mov
in
xchg
fnsave
jg
lret
out
push
lds
sbb
in
add
shlb
jp
cmp
xchg
jbe
xor
cs
mov
iret
xchg
pop
jg
and
stos
push
sbb
jne
ret
jns
nop
or
and
push
lret
dec
or
fnstcw
mov
lret
faddl
fadd
sti
jb
dec
add
xchg
aam
cmpb
test
mov
addr16
jecxz
fwait
aas
inc
xor
out
jl
push
add
in
and
mov
ljmp
fisttpll
pop
push
jecxz
push
popa
mov
pop
sti
cmp
mov
aaa
sub
sbb
sarl
sub
jno
mov
pop
or
outsb
push
test
or
adc
or
jns
mov
xchg
cmpsl
jns
hlt
push
aam
fdivl
cmp
push
fwait
jns
les
in
out
daa
xchg
inc
dec
xor
and
add
adc
dec
mov
or
push
push
les
or
jnp
fdiv
xor
cmp
jmp
add
mov
add
dec
enter
popf
jo
jmp
leave
mov
test
mov
mov
xchg
jl
lods
rcr
jge
out
mov
mov
mov
pop
mov
roll
pop
nop
sbb
xchg
dec
xorl
fidivl
dec
inc
and
cmpsb
push
fwait
mov
sbb
pop
pop
jb
callw
push
pop
push
push
fsubrp
adc
mov
jmp
outsb
loop
ja
mov
rorl
jbe
add
imul
lret
popf
xchg
xchg
loopne
std
add
or
push
add
pop
cmp
aam
fsts
xchg
addr16
int3
lock
aas
pop
ret
sti
mov
adc
arpl
cld
inc
lret
shlb
dec
mov
sbb
mov
shrl
ss
add
movl
into
fmull
fstl
clc
pop
xchg
fdiv
hlt
mov
push
xchg
cmp
loopne
mov
mov
cli
in
pop
jge
sub
or
jnp
dec
rorb
inc
add
jecxz
movsl
mov
xor
xor
mov
icebp
negl
hlt
pushf
aam
insl
arpl
hlt
sub
mov
xchg
std
sbb
jecxz
xchg
in
jnp
mov
pushf
jle,pt
sbb
out
mov
popa
dec
cli
scas
adc
pop
and
xchg
and
cmp
mov
fnstsw
sbb
fwait
and
or
and
push
pop
push
mov
jl
lret
sbb
inc
push
pop
pop
inc
cmp
je
js
inc
jg
add
xchg
into
inc
sbb
jns
jecxz
xor
and
pop
mov
adc
cmp
enter
sti
pop
ret
cmp
daa
pop
pop
mov
cmp
inc
or
in
sbb
icebp
adc
pop
mov
imul
inc
mov
arpl
xchg
push
rcl
pop
mov
push
adc
xor
enter
out
adcb
jle
lds
jo
jbe
xrelease
sub
xor
add
sbb
pusha
adc
sub
fwait
jns
insb
rcrb
jmp
inc
mov
jo
inc
ftst
jb
cltd
add
aad
orb
popf
aad
enter
jns
cmp
pop
cmp
in
insb
fisttpl
pop
sub
mov
cwtl
cmpsl
js
mov
or
adc
daa
dec
cld
add
fstpl
xchg
sbb
and
xor
outsl
lods
push
mov
mov
adc
push
inc
dec
in
cmpsb
ss
lds
ja
cmp
adc
or
xchg
loope
cmp
test
push
ja
jo
in
mov
inc
loope
addr16
js
xchg
dec
fs
das
and
inc
jg
loopne
lret
outsl
fsubl
negb
loop
inc
push
mov
outsb
stc
mov
popf
ret
nop
or
jmp
stos
in
ss
fdivs
inc
rcrl
add
call
mov
movsb
mov
dec
pop
stos
in
es
icebp
loopne
mov
cmc
inc
sbb
push
pop
divb
jmp
push
dec
mov
jp
stos
mov
mov
loop
movsb
push
pop
pop
mov
inc
ds
aam
xchg
inc
shlb
cmc
pop
les
push
sbb
aas
push
jnp
sub
fwait
inc
stos
mov
sub
test
test
sub
adc
dec
xor
pop
or
add
cli
xor
arpl
push
es
mov
xchg
jns
fildl
lock
dec
pop
sbb
inc
push
imul
jmp
mov
pop
pop
pop
aaa
or
push
mov
add
je
ficoml
inc
in
sbb
dec
scas
xchg
js
cmpsb
subl
sub
mul
dec
xor
movsl
or
xor
ljmp
push
scas
mov
jg
add
data16
xchg
int3
shr
outsb
mov
loope
or
scas
lret
and
push
mov
pop
jno
cwtl
mov
invlpg
xchg
or
lods
cmpsb
test
cwtl
push
or
inc
cmp
fildll
xchg
sub
mov
leave
lret
push
test
jecxz
xchg
jle
pop
xorl
pop
pop
sahf
fisubrs
jb
push
inc
lret
push
or
lea
mov
popa
jo
scas
gs
hlt
jae
enter
int
cmp
mov
inc
cmp
ret
cmpsl
stc
jl
jmp
in
cmc
adc
shrl
ret
outsb
aad
out
loope
cmpb
in
and
das
clc
push
call
js
xor
xor
movb
dec
add
js
fstps
xor
nop
bound
xor
adc
mov
loopne
push
lods
adc
rorb
push
xchg
fs
cmp
xor
add
dec
std
push
jmp
test
mov
int3
jae
pop
dec
mov
loope
lock
mov
aad
mov
fnstcw
iret
or
sahf
and
arpl
mov
push
dec
ja
push
scas
into
aam
and
dec
or
xchg
mov
jo
ret
sub
imul
cmpsb
inc
xor
dec
sbb
jmp
fwait
add
pop
push
cmpsb
mov
dec
mov
subb
inc
adc
int
adc
sbb
lock
mov
jge
cltd
push
int
mov
and
sbb
push
mov
jo
fdivl
pop
and
shr
js
cltd
stos
xchg
inc
cmpsl
shrl
cmpsb
cwtl
std
out
push
mov
push
or
xlat
pop
jne
xchg
int
cli
lea
ljmp
and
sbb
int
pop
add
push
xchg
or
jns
pop
es
hlt
pop
leave
enter
xor
and
ret
popf
dec
and
daa
inc
pop
ret
and
or
ret
outsl
dec
sub
addb
adc
sbb
xchg
inc
dec
idivb
pop
fwait
push
pop
adc
xlat
jb
popf
sbb
popf
and
repz
dec
outsb
lock
dec
lds
pop
cmp
push
sub
aad
movsl
call
jmp
pop
mov
mov
lock
cmpsl
je
bound
sti
xor
xor
fnstenv
push
sahf
lock
jge
addl
fdivrl
jecxz
popa
shufps
mov
xchg
sbb
iret
xchg
xchg
int3
xor
fbld
stos
lods
cmp
int
rcr
pop
in
sti
mov
test
outsl
sub
sub
lahf
push
jbe
icebp
cld
or
mov
add
mov
mov
xchg
sub
and
in
mov
fildll
xlat
loope
add
xchg
add
sbb
notb
insb
inc
dec
xor
xchg
jmp
shlb
xchg
mov
ss
cmp
pop
add
or
mov
pop
dec
test
addb
sbb
mov
aas
ss
mov
or
es
lods
sbb
adc
inc
addr16
push
dec
mov
dec
mov
cmp
mov
arpl
ds
loope
and
and
cmp
xor
jnp
aaa
sahf
shll
push
stc
das
call
repnz
fnstsw
mov
lcall
dec
jle
mov
dec
repnz
mov
lods
ljmp
pop
mov
les
sbb
xor
xchg
into
xor
sbb
pop
pause
fs
push
dec
testb
add
dec
icebp
mov
sub
xchg
bound
cltd
pop
mov
adc
sarb
mov
jle
cld
and
test
push
adc
rcl
js
fwait
inc
fnstcw
decl
inc
push
das
dec
imul
cmpl
mov
mov
movsl
add
push
in
outsb
imul
ret
test
mov
push
jg
jmp
dec
sbb
mov
sbb
pop
popf
std
call
push
dec
jns
arpl
or
mov
inc
sar
and
pop
enter
iret
or
iret
nop
mov
fbld
daa
cmpsb
xor
sbb
into
push
ss
mov
les
idiv
mov
test
and
jmp
xchg
mov
sbbb
push
pop
ret
and
dec
shrb
mov
mov
not
icebp
outsb
dec
and
adc
fldcw
ds
or
sub
jle
aas
inc
je
inc
into
scas
fwait
adc
jecxz
jnp
das
mov
cmp
add
adc
dec
inc
push
dec
imul
jbe
push
mov
clc
jle
adc
rolb
icebp
mov
dec
ds
xor
pushf
out
jle
daa
fwait
lcall
push
push
pop
adc
faddp
mov
movsb
mov
and
test
clc
out
test
jae
add
scas
lret
outsb
imul
push
xlat
or
imul
retw
mov
testl
cmp
ret
push
push
add
mov
lods
sub
gs
mov
sahf
mov
out
or
or
push
mov
push
arpl
imul
addr16
sbb
mov
or
fimuls
outsb
xchg
push
cmc
inc
stos
mov
fimull
stos
stc
sub
ret
int
mov
xor
mov
cmp
lds
push
and
push
mov
in
aam
out
cmp
xchg
data16
fsubrs
push
xchg
sub
cmp
in
outsl
xlat
hlt
fcmove
ficoms
pop
jb
mov
inc
aad
jp
nop
inc
jns
inc
mov
test
xchg
xchg
add
sub
je
mov
cld
push
and
enter
dec
push
cli
push
hlt
mov
push
pop
xor
mov
cli
aaa
jo
xchg
js
sub
popf
dec
jno
push
insb
popf
or
popa
call
out
inc
xchg
fldt
fsubl
sub
push
sbb
pop
sub
xchg
pop
cmp
push
xlat
add
add
pop
addr16
add
adc
push
cs
inc
sub
fdivs
or
mov
insl
outsb
or
fadd
jns
nop
lret
roll
imul
cltd
call
insb
sbb
dec
jbe
sbb
mov
popf
dec
push
imul
mov
loopne
adcb
js
xchg
add
xlat
xchg
adc
push
jg
sbb
movsb
sub
jno
cs
push
les
and
inc
push
push
push
pushf
enter
cli
push
ret
xlat
ja
xor
add
imul
ds
xchg
mov
es
test
movsb
pop
dec
sub
inc
out
insb
lods
or
fmuls
pop
pop
mov
popa
loop
fs
cmp
mov
sbb
imul
addr16
mov
imul
add
adcl
psrlq
pop
jbe
into
or
in
jecxz
cmp
sub
mov
cmpsb
pop
jmp
push
aas
sbb
popf
mov
sarb
add
push
flds
stc
outsb
aas
mov
roll
into
pop
shrb
push
jle
insw
lret
push
mov
imul
xchg
enter
mov
sub
pop
les
ss
repnz
mov
scas
xchg
push
test
push
sub
xchg
mov
enter
jae
cmp
xchg
fisttpl
sub
cmp
push
std
xchg
data16
dec
fcomi
xchg
fimull
pop
ljmp
xchg
out
inc
das
xor
mov
hlt
jns
mov
or
jp
dec
addr16
popf
into
push
popa
in
sub
std
jmp
es
xor
jp
fsub
cvttps2pi
daa
ljmp
test
sub
or
test
fnstenv
test
xchg
push
jae
pop
adc
or
inc
loop
jmp
gs
roll
test
rclb
push
test
inc
push
mov
and
xchg
popf
pop
sub
sbb
adc
sub
enter
xchg
out
imul
pop
stc
dec
jmp
rolb
dec
jl
dec
divb
addb
cmpb
inc
cmc
ss
cmp
inc
jae
mov
pop
movsl
mov
mov
les
adc
lcall
mov
sbb
rcll
out
dec
sbb
pop
push
or
imul
jp
and
mov
fcomps
xchg
aas
xor
stos
mov
xchg
jb
gs
iret
inc
or
inc
xor
movsb
aad
das
and
dec
addr16
data16
out
mov
and
dec
lea
addr16
je
adc
mov
loop
jnp
fistpll
es
dec
repnz
dec
pop
pusha
sub
or
or
adc
pop
nop
fiaddl
push
cmp
fsubl
movsb
shr
mov
fs
mov
pop
punpckldq
pushf
push
sbb
into
mov
insl
fidivrs
push
cld
push
pop
adc
dec
inc
inc
push
inc
jl
in
lret
outsl
add
clc
testb
ret
sbb
rcll
jl
dec
adc
dec
aam
cmp
xchg
loopne
sub
jl
jl
pop
gs
xchg
daa
lret
shl
xor
cmp
test
cmp
test
pop
bound
sbb
or
aad
les
cmp
cmp
and
sbb
cmp
add
leave
je
mov
add
and
loop
cmpsb
lods
adc
ss
clc
cmp
jl
and
lahf
jns
testl
or
add
fwait
in
push
in
or
inc
ret
bound
int
xchg
xor
mov
jae
adc
cld
addr16
jmp
std
add
push
std
jmp
out
cwtl
mov
or
arpl
push
pushf
test
inc
push
fstl
cmp
add
add
fldl2e
sarl
repz
mov
sbb
lea
adc
out
testb
add
aam
fs
pop
es
xor
push
insl
hlt
in
lea
mov
rorl
xlat
rcll
sub
inc
mov
push
clc
mov
icebp
cmp
fadd
stc
mov
cmp
inc
stc
jge
mov
inc
das
out
movsl
lods
stos
jg
mov
and
lret
sub
sbb
xor
out
out
bound
cs
stc
xor
mov
rcr
cmp
jmp
push
sub
addr16
cwtl
mov
clc
mov
and
in
push
push
pop
ja
pop
sbb
mov
xor
jge
xchg
popl
loope
jg
dec
icebp
lret
loope
hlt
data16
add
push
andb
ficompl
in
rcll
and
mov
outsb
sbbl
jl
setp
incl
xchg
cwtl
push
popa
dec
push
out
mov
sub
and
movsb
mov
xchg
movsl
ljmp
pop
fldenv
fcmovnb
adc
and
loop
cmp
shlb
outsl
shr
xor
scas
pop
xor
ret
mov
in
lds
jae
insb
mov
sbb
mov
lret
cli
mov
loope
mov
in
insl
jle
aaa
add
shll
addl
xor
pop
inc
pusha
pop
mov
cli
sub
movups
jb
fildll
stos
inc
push
notl
or
mov
scas
push
pop
in
mov
aam
add
lds
inc
fstpt
imul
inc
or
add
test
in
adc
adc
pop
cmp
aaa
rcl
cmp
mov
pop
push
outsl
cmp
lds
dec
adc
imull
add
inc
dec
dec
jne
pop
push
pop
out
inc
testb
js
test
fistps
lret
cmp
mov
or
sbb
push
or
cmp
jbe
roll
decl
sti
or
data16
add
mov
dec
aas
xor
sub
mov
adc
ds
outsb
lahf
insb
outsb
test
mov
xor
je
mov
shrl
mov
test
xchg
pop
scas
shr
dec
add
sbb
inc
addr16
gs
mov
xor
orb
lods
xor
cld
xor
pop
clc
and
sub
ds
in
sti
sub
sbb
jg
inc
sub
faddl
jb
or
dec
mov
insb
aas
inc
jb
cmp
into
stos
cmpsb
subb
pop
and
bnd
xlat
test
iret
sarl
test
out
jnp
sbb
dec
test
aaa
roll
cmpsl
adc
cmc
add
mov
xor
mov
or
imul
mov
stc
jno
psllq
jnp
enter
mov
mov
repnz
jp
inc
push
mov
inc
mov
push
xchg
out
or
mov
sub
dec
sbb
aam
imul
int
mov
repz
je
lahf
insb
into
ds
ja
mov
cli
int3
xchg
sar
nop
imul
dec
push
rcrl
or
and
dec
xchg
mov
pop
mov
mov
lods
outsl
dec
int3
sti
decb
pop
inc
in
xor
inc
pop
or
loopne
adc
test
fldcw
inc
push
dec
icebp
rcrb
mov
push
orb
push
adc
push
js
lahf
dec
lret
lods
cmp
popa
mov
pop
xor
add
out
xchg
add
inc
shlb
outsl
sbb
and
and
ljmp
ret
and
mov
shrl
roll
mov
add
or
jp
mov
data16
fwait
loopne
adc
andb
inc
cmpl
test
jo
roll
aad
dec
push
ja
movsb
jge
in
div
outsb
pop
jp
cmp
pop
aam
mov
outsb
enter
mov
mov
mov
mov
fdiv
pop
mov
pop
cmp
jmp
jmp
dec
add
xor
xchg
inc
pop
mov
or
inc
add
leave
jb
test
faddp
repnz
dec
out
mov
fisttps
add
inc
pop
cld
cli
out
enter
sub
mov
stos
mov
scas
pushf
adc
out
cmpsl
jbe
sub
and
into
scas
std
aas
mov
pop
pop
ljmp
in
cmp
push
xchg
adc
jo
dec
inc
or
mov
dec
push
sub
fsubrl
cli
add
jg
cmp
mov
out
sub
xchg
jle
xlat
popf
jb
adc
ficompl
inc
mov
fsubs
aas
adc
pop
mov
mov
cli
and
mov
out
mov
and
and
xor
fs
in
out
cwtl
sbb
jmp
bound
xchg
sbb
lods
jnp
jecxz
call
daa
sub
mov
out
cmp
cmpsl
mov
xchg
loope
int3
pop
sbb
adc
push
lock
test
push
jle
iret
push
bound
loopne
add
cmp
and
inc
xchg
pop
dec
repnz
xor
aas
inc
mov
out
add
into
bound
jp
cwtl
jl
mov
mov
push
sub
mov
mov
push
sbb
jnp
xchg
rcrb
mov
das
pop
cmpsb
dec
sahf
inc
sahf
out
test
push
outsl
sub
or
decb
xchg
inc
sbb
in
sbb
popa
les
cld
mov
inc
cmp
out
fsub
dec
das
cmp
jp
jge
pop
addr16
and
cwtl
mov
ds
mov
hlt
ljmp
int3
jp
test
inc
lahf
push
push
daa
push
sti
adc
mov
aaa
dec
push
dec
imul
bound
xchg
sarb
dec
insb
or
in
pushf
pusha
mov
mov
lds
jb
mov
mov
pop
ja
cli
adc
pop
negb
int
mov
xchg
insb
sub
out
in
test
add
rorb
pop
imul
pop
cmp
sub
cmpsl
stc
sbb
cld
outsl
negl
daa
cmpsl
les
mov
jno
sbb
fcmovnu
mov
hlt
aas
dec
and
adc
es
pusha
cltd
xchg
das
pop
ret
and
inc
loop
rolb
adc
and
sub
mov
incl
repnz
mov
dec
loope
daa
push
cs
aad
adc
sbb
mov
out
mov
inc
rcrl
test
sbb
pushf
cmp
daa
jno
mov
xchg
jae
sbb
xor
pop
stc
adc
jge
loope
xchg
push
out
dec
cmp
clc
cmpsl
jo
shrb
hlt
mov
jg
push
cmp
mov
pop
in
xor
sub
xlat
out
adc
and
mov
stc
shl
or
lods
mov
mov
dec
cltd
sub
movsl
or
and
les
cmc
cmp
pop
ss
loope
sbb
hlt
push
stos
and
jne
rolb
enter
mov
ficomps
inc
pop
mov
cltd
lret
scas
subl
decb
cmp
xchg
mov
sub
in
mov
and
mov
imul
jne
mov
xchg
inc
mov
and
mov
aad
scas
adc
adc
add
push
push
push
incl
and
icebp
sub
inc
push
jle
popf
js
xchg
jnp
std
jno
mov
in
cltd
clc
sbb
sub
rcrb
leave
jns
pusha
mov
push
leave
pop
jle
push
daa
stos
xchg
popa
std
lea
or
insb
xor
gs
lret
fistpll
into
fisttpl
sub
jne
push
dec
icebp
xchg
and
fists
lret
dec
xchg
je
mov
pop
jecxz
xchg
bound
insl
js
cmp
pop
hlt
sbb
xlat
ret
add
ss
cmp
loope
bound
xor
adc
cmc
fprem
push
movsl
jae
lret
push
xor
inc
ljmp
outsl
enter
fcmovbe
push
push
dec
push
push
lods
dec
push
jne
sbb
bswap
or
jg
es
and
cmp
pop
adc
mov
add
outsl
lods
inc
add
xchg
test
jns
jno
loopne
mov
sbb
in
pop
dec
int3
sub
ss
dec
xchg
hlt
in
scas
xor
push
dec
das
bound
out
je
cmp
test
fiaddl
stos
addb
stos
pushf
pop
add
rcl
jne
jbe
rol
push
sar
call
push
js
inc
mov
mov
pop
ret
jne
adcl
inc
push
xchg
out
push
adc
aas
in
cmp
xchg
outsl
push
mov
lret
aad
inc
fisttpll
popf
call
lret
mov
movsl
or
sub
push
push
das
das
jl
push
int3
out
sbb
dec
int
jp
sub
pop
aad
test
fisubs
mov
cmp
sub
in
nop
out
dec
imull
jb
xor
pop
push
push
and
push
push
pop
mov
icebp
sbb
inc
pop
negl
push
xchg
lock
and
test
sarb
mov
adc
out
int
lcall
rorb
sub
popa
cmp
push
mov
imul
push
jl
enter
add
js
mov
notl
mov
adc
aad
xchg
xlat
xchg
divl
fdivl
push
cmc
pushf
mov
xorb
stc
ror
mov
sub
mov
xor
push
mov
dec
jp
mov
adc
push
dec
xchg
scas
sbb
pop
mov
lock
push
xor
mov
mov
es
mov
stc
sub
cli
in
outsb
in
sub
rcll
dec
movsl
shr
jge
gs
addb
adc
xor
icebp
out
dec
inc
jnp
subl
cmp
sbb
in
ret
sahf
loopne
sbb
sub
pop
shlb
mov
andb
test
xor
mov
add
dec
iret
mov
jmp
pop
cmp
lods
add
mov
test
popf
dec
mov
push
cmpsl
mov
pop
fdivrp
shrb
pop
sti
sbb
imul
jne
xor
and
sub
push
jb
into
pop
add
mov
out
mov
rcr
jl
sti
cli
jae
cmpsl
mov
loopne
shll
insl
lret
and
mov
push
jns
cmp
mov
jmp
aas
or
and
sub
mov
roll
data16
fistpl
mov
mov
inc
insl
mov
mov
mov
mov
aas
push
jge
stc
add
je
pop
or
rol
or
adc
test
std
push
stc
mov
add
aad
dec
or
movl
mov
addr16
or
cmc
nop
xor
ss
les
push
stos
popf
push
xor
stc
push
aam
dec
cld
ljmp
pop
push
mov
fistpll
cld
pushw
mov
arpl
add
sub
addb
call
das
into
sarb
movsb
sub
inc
adc
jp
fildll
insl
fisttps
or
and
mov
and
cmp
data16
popf
cwtl
mov
dec
loope
mov
or
test
icebp
adc
inc
loopne
mov
xchg
mov
add
flds
insl
jne
xchg
adc
rol
mov
or
fcomp
ja
hlt
notl
rolb
mov
or
rclb
js
add
bnd
xor
cltd
ds
pop
test
mov
jl
adc
cmp
cwtl
xor
aas
leave
jp
cmp
xchg
call
ficompl
out
int
push
mov
push
les
cmp
mov
dec
push
ja
and
mov
call
les
dec
in
and
jge
mov
orb
test
xor
enter
popa
fisttps
stos
push
and
insb
mov
sbb
jae
push
sub
adc
test
imul
mov
gs
inc
pop
leave
nop
inc
sbb
xchg
dec
mov
das
ret
filds
or
xchg
or
jae
mov
paddsw
fisubrl
push
push
std
aad
pop
pop
dec
sbb
bound
or
lret
ret
xor
lret
jp
andl
pop
or
aaa
fidivrs
dec
mov
jecxz
xor
mov
mov
stos
sarb
sub
fucomi
ret
loopne
stos
aas
out
shr
cmp
sahf
pusha
xchg
std
xchg
mov
adc
mov
push
xor
loop
xchg
mov
mov
in
adc
mov
jae
aas
repz
addl
aaa
sub
test
cmpsl
rclb
dec
adcb
inc
dec
enter
pop
js
fs
mov
cmp
daa
push
in
mov
cmp
adc
inc
repnz
scas
jmp
or
test
scas
xchg
cltd
cmpsb
cltd
insb
sub
scas
clc
jmp
ja
add
lahf
mov
xor
mov
mov
shl
mov
inc
pop
incb
outsl
mov
mov
push
pop
repnz
jl
push
mov
inc
stos
cmpsl
dec
sbb
cld
mov
push
inc
adc
push
mov
popf
push
add
stos
add
lret
aad
sub
pop
jns
sub
stos
adc
ss
arpl
xorb
adc
hlt
adc
xor
cs
and
and
fiadds
cmp
mov
clc
inc
jge
mov
cmp
loop
xchg
je
test
xchg
imul
pop
jns
ja
add
popa
in
mov
mov
dec
cld
mov
mov
inc
xchg
xchg
addr16
pusha
movsl
nop
jg
inc
shl
shlb
mov
mov
outsb
and
je
and
adc
je
je
jle
aad
sub
pop
or
adc
cmp
lcall
or
jnp
mov
fucom
adc
sbb
jnp
xlat
mov
out
lcall
fwait
sbb
cmp
insb
dec
push
or
xor
clc
pushw
adc
loopne
mov
mov
adc
andl
jl
xchg
fbstp
fmuls
sti
push
dec
ds
fdivs
add
int
jbe
inc
test
add
mov
imul
adc
jns
jmp
adc
mov
lock
sbb
jge
or
in
xchg
sub
lds
arpl
sub
repnz
xchg
dec
dec
rcll
dec
pop
mov
push
test
mov
mov
sqrtps
fdivrl
and
sar
inc
mov
xchg
dec
cmc
xor
movsb
movsb
movl
pusha
test
rcl
or
rcr
notb
dec
notl
mov
fstpt
cmp
dec
rcrl
je
adc
jb
cmpsl
rcrb
popf
imul
ljmp
leave
imul
dec
in
jbe
fadd
or
xor
adc
sahf
mov
leave
jecxz
aam
not
push
and
cmp
xchg
adcb
arpl
dec
inc
sahf
cmpb
jl
fdivs
or
push
ficomps
nop
push
cwtl
mov
jne
dec
pop
cmp
xchg
pushf
pop
mov
sahf
test
arpl
add
xor
pop
sahf
mov
xchg
mov
jl
mov
pop
mov
test
std
push
insb
jb
or
insb
insl
push
shlb
adc
out
push
adc
ja
clc
xchg
mov
inc
and
add
mov
adc
jbe
sub
das
jne
test
lcall
mov
cwtl
jmp
in
out
sbb
mov
pop
fchs
inc
sbb
popf
push
inc
sub
test
or
ret
cltd
sbb
sbb
jg
rolb
ljmp
cmp
xchg
cmp
mov
or
fsubrp
sub
inc
call
cltd
fld
jns
fdivl
mov
addr16
out
mov
outsl
lret
dec
jle
cmpl
inc
and
pop
jno
es
test
stos
cmp
jbe
test
sub
push
mov
ds
sub
or
xor
or
das
pop
es
sub
cmp
jp
outsb
mov
jle
adc
adc
std
into
mov
testb
fidivl
push
sbb
arpl
dec
std
sbb
push
fsubl
int
addr16
cmp
gs
mov
sub
fdivrl
cmp
mov
mov
push
repz
push
sub
xor
loopne
movl
pop
fiadds
sub
inc
repz
cs
int
scas
stc
ljmpw
jl
pop
jne
loop
sub
nop
pop
xor
fdivrp
les
loopne
lods
pop
sbb
out
addr16
fisttpl
nop
fbstp
add
sahf
sbb
repz
test
push
push
xor
xchg
push
push
sub
scas
dec
icebp
mov
fs
inc
and
out
xchg
xchg
xorl
inc
popa
and
xchg
jb
inc
xchg
mov
int3
dec
mov
push
dec
jp
mov
test
add
andl
roll
aam
jnp
inc
sahf
test
adc
stos
leave
sub
add
cs
mov
fdivs
lcall
xchg
pushf
inc
mov
ja
cmpb
fcmovne
mov
sub
repz
stos
cwtl
cltd
aad
loope
sub
dec
pop
and
mov
aam
addr16
sarl
lds
xor
cmp
xchg
rorl
inc
stc
jne
mov
aam
dec
or
aas
ret
mov
sahf
lret
xchg
mov
sub
jecxz
jmp
jnp
xlat
aas
sbb
iret
sub
inc
mov
pusha
mov
pusha
callw
xchg
dec
sub
enter
pop
add
ljmp
and
stos
sbb
mov
shlb
pop
xor
mov
stos
or
into
jns
xchg
js
inc
pop
push
jae
or
dec
and
jno
inc
xchg
fcompl
fadds
lds
iret
daa
cli
int
mov
loopne
or
loopne
sub
and
ret
in
arpl
fistpl
cmp
cmp
mov
mov
cli
mov
sbb
enter
out
outsl
push
out
scas
sub
fadds
push
in
or
jle
paddd
add
mov
mov
xchg
fmul
xor
xchg
dec
daa
push
pop
scas
xor
jl
jae
ljmp
xchg
xor
insl
add
mov
add
or
add
mov
jl
into
mov
jp
xchg
andl
testl
pop
adc
push
add
xchg
fstl
mov
mov
mov
mov
outsb
sbb
in
fsubrp
xchg
xor
and
sub
fidivs
cli
dec
jg
add
out
mov
vpmullw
es
adc
loope
pop
repnz
aas
negl
leave
cli
push
xlat
mov
jp,pn
xor
andl
cld
jl
mov
or
ret
mov
insb
ljmp
mov
inc
sbb
popf
idivl
sub
mov
adc
scas
push
cmpl
mov
mov
cli
xor
cltd
inc
sbb
mov
xchg
cmpsb
ret
sbbb
stos
cld
fidivl
jp
or
ljmp
clc
sbb
arpl
pop
add
in
xor
xchg
es
cmp
fwait
dec
stc
sub
inc
mov
les
mov
daa
sbb
ret
dec
xchg
std
push
inc
cmp
popa
daa
enter
dec
mov
cmc
push
loop
je
jne
add
das
sbb
xchg
int3
sub
cmp
inc
sarl
call
push
pop
loopne
lret
jae
sub
shll
shrl
out
pop
mov
addb
js
mov
inc
and
nop
add
stos
xorb
fimuls
jbe
mov
in
insl
xchg
mov
pushf
loopne
or
push
in
in
jle
aam
sahf
out
jle
iret
insl
add
jg
hlt
push
xor
mov
lcall
mov
jbe
dec
test
icebp
inc
insl
xchg
cmc
dec
mov
shrb
lds
sub
mov
js
mov
add
int3
and
idivl
icebp
push
out
and
sahf
xor
adc
or
cmc
les
std
sahf
mov
and
mov
add
je
add
or
mov
movsb
cmpsl
insl
loopne
push
pop
call
pop
sub
mov
clc
inc
imul
ret
sbb
insb
mov
dec
xchg
lock
loopne
ja
out
and
pop
xchg
shrb
xor
pushf
dec
xlat
add
popf
andl
sti
out
dec
outsl
fcomi
mov
ljmp
pop
or
std
mov
lods
std
dec
mov
dec
xchg
push
je
insl
shll
jae
shll
cwtl
mov
mov
sbb
ljmp
jl
pusha
cmp
std
sub
sbb
inc
lods
and
jne
in
daa
test
out
push
mov
push
mov
sahf
pop
inc
test
movsl
inc
lret
sub
fsubrl
rclb
shrl
cmp
in
mov
enter
adc
das
xor
sti
add
stos
lret
loop
enter
adc
or
mov
arpl
add
sbb
fisubrl
icebp
mov
adc
dec
mov
outsb
sub
dec
push
sub
lcall
mov
xor
ds
push
adc
add
insb
sub
xor
in
add
adc
jae
fwait
and
in
in
sbb
je
dec
add
out
gs
push
push
addr16
or
push
je
je
rcrl
push
test
outsb
mov
cs
pop
arpl
push
add
shll
sbb
mov
stos
test
loopne,pt
pusha
cmc
mov
or
sti
ds
jo
loopne
cmc
js
call
es
add
daa
imul
mov
testl
inc
add
mov
push
aad
push
jge
mov
and
add
ja
leave
fs
dec
xor
cmp
sbb
sub
loop
iret
movsb
lret
dec
ja
mov
fisubl
aam
ret
fs
jno
ret
jp
cmpsl
mov
dec
cmp
inc
movaps
bound
ljmp
xchg
leave
mov
sbb
aad
les
sbb
add
or
jae,pn
addr16
fnstsw
cmpsb
movsb
mov
or
dec
les
xor
lcall
pop
scas
out
roll
cmp
out
xor
add
fldcw
pop
lock
cmp
fidivrl
aas
aam
jbe
xor
lods
fmull
das
lods
mov
push
or
cli
sahf
outsl
pop
fldl
pop
xchg
daa
mov
into
cmpsl
mov
fsubrs
test
mov
and
pop
mov
mov
cmc
int3
ds
dec
jge
cltd
lret
push
out
cmp
imul
sbb
das
and
jnp,pn
or
jp
das
dec
out
fnstsw
add
mov
fs
or
test
mov
mov
rol
insl
xchg
adc
adcb
ret
sub
mov
lea
xor
cmc
adc
mov
jge
scas
mov
into
ret
sbb
nop
lods
pusha
in
clc
cmp
mov
add
and
xchg
lock
fdivrs
dec
lret
sub
jae
in
mov
or
push
sbb
pop
jg
adc
cltd
push
jae
jmp
xchg
divb
jbe
les
add
mov
lret
mov
mov
jne
cmp
fcmove
mov
pop
ljmp
out
mov
inc
inc
sub
movsb
stos
sbb
lretw
jnp
aam
ljmp
jae
adc
add
outsl
mov
xor
and
sbbl
inc
shll
mov
cli
aam
ja
pop
cmp
push
push
adc
js
inc
inc
fistps
push
mov
mov
mov
repnz
pop
insb
mov
sub
mov
aas
cmp
sbb
xchg
fcomps
ja
ret
popa
or
shl
jne
and
scas
sub
xchg
jnp
push
out
ret
ja
inc
shlb
add
lahf
xor
mov
test
pop
add
push
int3
outsl
sti
sub
add
dec
enter
mov
testl
pop
jae
push
in
sub
mov
sti
loopne
les
xor
pop
dec
add
cmp
aad
iret
test
shr
jle
jb
in
repnz
inc
jbe
xor
add
push
adc
fsubp
push
cmp
pop
push
xchg
mov
sbb
out
cmpsb
dec
dec
mov
es
repnz
jecxz
inc
adc
pop
xor
sbb
mov
outsb
data16
add
pop
jnp
jmp
fnstcw
je
add
sbb
inc
es
loope
loopne
movsl
mov
dec
lret
dec
dec
sub
test
clc
das
es
test
sub
dec
int3
xchg
ja
lahf
jne
sar
jge
or
sbb
stc
cmpsb
inc
daa
push
xchg
push
mull
addr16
xchg
xchg
add
lcall
enter
sub
cwtl
outsl
adc
xor
outsl
jp
dec
mov
stos
xchg
test
and
cmpsb
repz
mov
inc
cld
inc
loopne
ret
mov
push
or
xchg
inc
sub
js
push
pop
movsl
mov
and
movsl
test
test
aam
nop
add
les
pop
push
or
push
and
push
je
add
push
sbb
cld
loop
push
mov
imul
je
cwtl
pop
nop
stc
jnp
pop
stos
in
aam
scas
xorl
xchg
ret
popa
xor
fnstenv
mov
mov
xor
add
mov
in
mov
mov
xchg
gs
insb
inc
hlt
mov
inc
mov
int
iret
dec
adc
fcmovne
mov
lods
xchg
out
inc
fidivs
nop
lret
loopne
and
repz
fs
jge
dec
mov
inc
js
mov
nop
inc
add
xlat
es
jb
loop
mov
fcomi
lret
int3
pop
jbe
movsl
cwtl
lock
pop
repz
fnstcw
lcall
ljmp
fnstcw
rcll
dec
cli
inc
mov
mov
xor
arpl
inc
cmp
cmpsl
enter
shlb
mov
mov
xchg
sbb
cmp
inc
adc
stc
gs
sbb
mov
inc
mov
sub
ss
jns
mov
into
jns
scas
pop
push
into
cmpsb
add
jne
sub
add
mov
aad
ja
xchg
xchg
mov
and
push
jnp
xlat
sbbb
dec
xchg
jnp
in
sub
push
xor
insl
gs
adc
sbb
iret
fwait
iret
sbb
mov
negb
cmp
loopne
or
adc
addb
fwait
jecxz
fistpll
jne
lret
sahf
mov
pop
in
imul
jae
add
mov
push
mov
lock
cmpsb
xchg
in
iret
mov
shrb
inc
sub
sub
into
jecxz
mov
mov
add
movsl
cwtl
sub
fsubr
or
jg
push
cmpsl
or
stos
mov
mov
xchg
int
aas
cmp
sahf
push
mov
loopne
cwtl
xchg
jmp
lea
add
sub
out
push
cmp
mov
dec
cli
cmp
fucomi
xor
sbb
imul
stos
push
mov
adc
enter
mov
jg
jnp
sbb
pusha
call
scas
or
jg
aas
xor
sarl
xchg
lahf
xchg
mov
lods
int
xor
js
enter
rep
insl
sbb
aas
insb
adc
outsb
or
cs
fistpll
adc
pop
and
outsb
mov
add
xor
out
push
push
xchg
mov
pusha
sbb
sbb
and
xchg
push
test
imul
stc
or
std
xor
and
mov
lret
hlt
jmp
fsubp
dec
xchg
jno,pn
add
jb
xchg
mov
cmpb
fcomps
mov
aas
pop
mov
mov
stos
inc
fwait
sub
and
aam
mov
xchg
cli
mov
clc
inc
into
sbb
out
decb
add
jmp
pop
je
data16
jo
shlb
inc
fidivrl
mov
test
filds
rorl
popa
jecxz
xor
xor
sbb
adc
adc
movsl
xchg
xchg
ja
fs
inc
mov
push
add
xor
jl
inc
loope
lods
pop
pusha
das
cmc
leave
fadds
cltd
loop
in
cwtl
movl
xor
sbb
addr16
je
cli
mov
fwait
push
mov
add
rorl
cmpsb
es
jae
fbstp
inc
scas
arpl
push
enter
stc
and
into
or
push
or
out
jg
mov
push
add
aas
sti
std
sub
xchg
and
add
add
into
push
and
test
xchg
mov
jne
xchg
fldl2e
mov
rcll
add
mov
fisubrs
or
add
mov
mov
fistpll
add
je
pushf
sub
mov
sub
mov
mov
sbbb
out
adc
dec
xchg
ss
ret
repz
sub
aas
or
cli
add
push
mov
mov
xchg
mov
loop
xchg
movsl
cld
xor
xor
sub
mov
pop
or
fidivrs
sub
mov
insb
or
ljmp
clc
push
xchg
into
fcompl
nop
stos
pop
push
push
add
nop
out
imul
stos
pop
jmp
subl
cld
sub
jp
xor
clc
movsl
push
lahf
cmp
pop
insl
dec
jp
pop
jbe
in
and
jp
pop
xchg
mov
icebp
test
adc
rcl
adc
stos
pop
push
ret
xchg
lock
inc
jecxz
mov
adc
mov
sub
adc
outsl
pop
pop
or
add
dec
sbb
pushf
dec
sbb
fs
sbb
xchg
adc
int3
stos
xchg
je
test
sbb
movsb
sub
lcall
mov
xchg
fdivl
stos
subb
push
jp
inc
mov
jge
adc
xchg
mov
pop
cwtl
cs
rcl
leave
cmp
or
jno
ret
sahf
mov
mov
shlb
sbbl
popf
or
push
and
sub
popa
and
int3
sbb
adc
mov
cmp
jge
rolb
lds
pop
mov
jge
xlat
in
jb
mov
shl
dec
jbe
outsl
dec
inc
sahf
mov
leave
add
je
cltd
inc
out
fnstenv
xchg
lds
test
or
clc
fstpt
cwtl
dec
mov
or
aad
mov
lcall
sub
fwait
ss
stos
jl
lahf
jo
push
and
mov
add
lcall
loop
sbb
ja
jns
pop
pop
fstp
and
dec
sahf
popf
dec
sub
cmpl
jle
clc
mov
mov
fisttpl
ja
lods
sbb
sub
add
in
mov
test
clc
mov
pop
je
rcr
pushf
hlt
mov
add
rorl
cltd
and
adc
iret
xor
lods
sahf
mov
imul
or
nop
push
mov
sbb
xor
sub
lret
jno
sbb
mov
cwtl
pop
nop
insl
jbe
cld
inc
pop
pop
es
das
xlat
fdivrs
outsl
dec
pusha
dec
inc
insl
js
pop
stos
mov
hlt
mov
js
sahf
es
int3
push
mov
jno
adc
adc
inc
push
pusha
pop
fwait
add
jne
or
stos
cs
fdivl
bound
call
sbb
mov
jno
push
popf
in
sti
popf
fnsave
pop
mov
mov
jb
xor
stos
aad
fsub
mov
and
lods
push
pop
adc
sbb
ret
insb
out
sahf
dec
add
int3
imul
repnz
and
shrl
push
aam
dec
or
push
cld
adc
stc
xchg
xlat
or
and
das
jecxz
inc
xchg
add
push
pushf
lcall
push
jmp
ljmp
pop
addr16
jae
das
cmpsb
and
mov
add
xchg
cmp
jl
mov
add
fsubs
enter
mov
add
mov
pop
or
adc
scas
and
shlb
leave
dec
repnz
push
out
cmp
pop
jns
push
xor
sub
andb
push
push
pusha
sbb
shlb
in
rclb
adc
jno
scas
fbstp
inc
sbb
arpl
push
aad
cmp
or
inc
push
ja
inc
leave
ds
cld
add
jnp
mov
lods
xchg
pop
dec
mov
push
mov
cwtl
or
push
or
lock
lods
or
jp
lds
ja
pop
je
push
pusha
sarb
out
jne
test
out
jmp
rcl
aaa
cli
cmpsb
xchg
out
jp
movl
scas
xchg
cltd
hlt
out
jg
repnz
mov
sbb
xchg
jg
add
pop
enter
xor
addl
hlt
repnz
mov
les
lcall
pop
push
lahf
sub
imul
xlat
push
sub
lods
add
imul
sbb
push
or
lcall
inc
cld
inc
push
push
mov
dec
repnz
cmc
mov
inc
adc
lret
movl
loop
adc
jno
mov
mov
iret
or
shlb
push
mov
jbe
sub
xchg
mov
adc
push
repnz
repz
aas
mov
xor
xchg
shrl
inc
jae
aaa
pushf
movsl
mov
shld
xor
repnz
mov
enter
iret
arpl
cmp
mov
int3
dec
jle
jo
xchg
xor
pop
lods
push
sub
mov
adc
mov
lcall
gs
dec
cs
add
rcrl
popf
sti
iret
dec
push
inc
push
insl
enter
sbb
mov
mov
jne
mov
xchg
mov
arpl
ds
out
mov
aad
inc
push
and
shlb
sahf
psrad
movsl
jae
nop
xchg
stos
mov
enter
inc
ret
push
ljmp
pushf
int3
inc
xchg
jbe
andb
loope
xchg
fnstenv
repnz
mov
mov
pop
test
mov
pusha
iret
inc
push
repnz
jl
clc
leave
mov
mov
dec
push
testb
int
jp
push
adc
jo
push
mov
dec
inc
fisubs
inc
sbb
xor
movl
jne
sub
test
or
jecxz
mov
gs
mov
jle
push
movsb
fildll
sub
subb
mov
inc
cmpsb
andb
cmp
jb
movsl
mull
xor
out
mov
subb
out
outsb
xor
loopne
aad
mov
ficompl
mov
les
loopne
mov
popf
pop
bound
cmp
lret
rol
xchg
cs
add
call
enter
xchg
pop
arpl
out
rolb
sub
pushf
imul
mov
enter
mov
dec
sbb
xor
test
mov
movsb
push
popf
aad
jecxz
lock
jle
lret
negb
jno
jg
or
sbb
adc
arpl
in
insb
rol
addr16
setl
xchg
add
or
xchg
iret
xchg
cmp
xorb
jno
xchg
add
xchg
fcoml
xchg
cmp
inc
sub
pop
adc
mov
in
push
pop
popa
loopne
mov
mov
push
and
xor
iret
pop
and
cs
cld
adc
pop
lea
jo
lock
icebp
cmp
sti
lret
dec
push
lea
jl
and
mov
dec
rcrb
out
in
xor
cwtl
xchg
int3
pop
jbe
sbb
cmovg
jae
js
or
clc
mov
jns
push
cltd
sbb
sbb
xlat
sbb
cmpsb
push
repnz
jp
aaa
jo
test
repnz
mov
insl
jecxz
dec
xlat
cmp
or
scas
push
icebp
xchg
push
add
pusha
xadd
insl
inc
outsl
stos
cmp
and
mov
xchg
push
je
push
xor
dec
pop
xchg
sub
sbb
cmp
enter
cltd
les
pusha
dec
mov
aam
jo
insb
stc
in
inc
lock
aas
pop
mov
push
into
jecxz
pop
out
mov
jmp
mov
cmp
push
ljmp
lcall
push
sub
pusha
inc
cmp
cmp
repnz
ret
cmp
rcrb
jge
add
pop
ss
pop
jns
sbb
lahf
xlat
or
popf
fsts
std
das
rolb
int3
mov
xor
addb
scas
das
out
pop
push
push
jmp
xor
stos
shll
and
dec
cmp
mov
pop
lods
pop
mov
adc
adc
inc
adc
ret
push
out
inc
mov
xchg
xchg
icebp
test
adc
or
dec
insl
jmp
call
les
push
and
mov
mov
jbe
xor
add
cmp
xchg
adc
and
sub
inc
xchg
push
mov
sbb
cmpl
push
xor
pop
push
es
pop
int3
flds
lret
stos
or
jp,pn
stos
inc
adc
push
and
bound
std
fmull
call
sbb
scas
rorb
and
pusha
mov
fdivrl
imul
nop
js
popa
imul
roll
jp
lcall
mov
outsb
or
addr16
subl
sti
int3
dec
mov
add
xchg
jnp
je
ljmp
add
inc
inc
fdiv
mov
dec
notl
arpl
clc
cltd
out
ret
repnz
xchg
xor
mov
xchg
sub
int3
scas
xor
out
cmp
test
arpl
jae
in
xchg
mov
pop
fcmovbe
xchg
cs
dec
jns
sub
inc
dec
repz
mov
in
je
cmpsb
dec
je
iret
push
mov
pop
imul
mov
cltd
mov
out
push
pop
imulb
and
stos
jnp
or
mov
jecxz
xor
stos
outsl
ja
mov
inc
pop
loope
je
lahf
jecxz
fisttpl
idivl
sbb
cld
xor
dec
mov
push
xor
xor
add
ss
mov
inc
fidivrs
push
cmp
inc
adc
pop
js
pusha
shrb
push
insb
adc
adc
xor
lret
jecxz
rcll
ret
mov
sbb
movsb
int3
inc
push
pop
sub
scas
mov
dec
cwtl
enter
sbb
jbe
dec
jae
xchg
mov
dec
mov
cld
adcb
jecxz
cmp
xchg
jbe
add
sar
into
adc
cmp
sub
inc
insb
jg
stc
xchg
xor
mov
xchg
mov
mov
stos
cwtl
or
or
or
sub
fcomps
roll
repz
lcall
adc
mov
cltd
inc
xchg
rolb
in
int
jb
sbb
lock
adc
push
fisubl
inc
repnz
mov
aas
sar
mov
cmp
fnsave
dec
popf
xchg
mov
mov
mov
stc
and
pusha
in
push
outsl
repnz
xor
sbb
mov
or
in
jle
xchg
xchg
jbe
jns
cmc
xchg
push
fldt
add
lahf
leave
pop
cli
and
rcrl
cwtl
sub
sbb
adc
mov
sbb
clc
xor
sub
sti
adc
jg
rol
fidivs
jle
lret
jecxz
or
sbb
iret
lock
lds
and
mov
lds
cli
push
clc
pop
popa
icebp
cmp
ror
inc
push
and
imul
inc
xor
xchg
cs
add
stos
lds
addl
push
jo
ds
insl
out
dec
add
sub
pop
lcall
stc
cmp
mov
movsl
lods
pop
xor
mov
push
icebp
xor
mov
aam
xchg
add
jl
outsb
mov
in
sarb
adc
test
or
fisubrl
jns
add
push
sub
aam
xor
jmp
xor
xor
sbb
aam
cmp
and
subb
cwtl
fistps
pusha
test
bound
adc
adc
mov
addl
jmp
mov
repz
cmc
adc
aam
jmp
push
lret
adc
test
cli
adc
xor
add
cld
dec
hlt
mov
inc
call
imul
aam
or
test
cwtl
pop
push
lea
int3
push
add
mov
or
mov
xor
outsb
pop
repz
test
inc
add
mulps
sbb
xchg
or
sti
lret
sysret
out
fwait
mov
mov
shrb
fucomip
stos
push
loope
outsb
and
cltd
out
push
loope
cmp
mov
scas
mov
xchg
lock
mov
neg
adc
mov
int
inc
jecxz
xchg
addb
mov
call
lods
mov
push
sub
jmp
adc
sbb
pop
pop
fisubrl
push
ret
hlt
dec
push
inc
jo
cmovg
push
aas
sub
push
dec
sub
lea
xchg
lahf
xchg
cmpb
jnp
clc
sbb
sub
sub
es
aas
in
cmp
dec
das
cmp
dec
and
cmp
adc
xor
xchg
and
nop
jge
pop
cmpsb
rcrb
mov
pushl
loop,pt
mov
mov
sub
xorl
or
push
push
xlat
or
mov
dec
xor
and
adc
mov
push
insl
std
mov
push
jmp
jle
push
movsl
movsl
insl
fcomps
lcall
jno
fbld
inc
dec
adc
hlt
push
add
sub
mov
daa
les
inc
clc
sub
outsb
dec
xlat
xor
cmp
xchg
mov
outsb
dec
mov
jnp
testb
outsw
sbb
call
jb
lret
fisubrs
dec
xchg
push
inc
inc
ret
lret
pusha
es
inc
mov
pop
mov
xor
sub
mov
pop
sbb
cmp
push
sub
popf
cmp
and
out
pop
test
dec
orl
or
push
popf
or
and
or
xchg
nop
mov
mov
loope
lret
ret
imul
pop
rcr
jo
push
fdivl
movsb
adc
mov
xor
insl
stos
daa
sbb
xchg
cltd
inc
dec
frstpm(287
inc
xor
mov
addr16
add
xchg
sarl
movsl
pop
push
cwtl
dec
testb
push
ret
jns
cs
ret
push
cmp
flds
iret
add
jb
mov
mov
dec
push
and
icebp
pushf
push
sub
xor
dec
add
and
test
sub
js
push
movsb
je
cltd
mov
dec
dec
outsl
cmp
jo
iret
adc
dec
xchg
xor
push
in
mov
xchg
push
rol
subb
xchg
pop
push
adc
adc
popf
mov
insb
mov
xchg
pop
xchg
fnstcw
gs
cmp
push
xchg
cltd
lret
call
sbb
add
sbb
push
cmp
aaa
pop
outsl
cmc
dec
mov
pop
lcall
sub
lods
pop
sbb
pushf
pop
js
stc
xchg
jne
inc
outsb
in
pop
shr
inc
pushf
insb
fldt
repz
push
cld
fdivs
mov
sub
out
dec
roll
mov
cs
clc
pop
mov
aas
pop
imul
cmc
addr16
sbb
xchg
push
mov
jmp
sub
cmp
push
push
xchg
pop
mov
pop
cmpsb
repz
iret
loop
xor
cmp
aam
adc
and
dec
repnz
mov
idivb
mov
mov
mov
jecxz
imul
test
push
repz
sbb
xchg
dec
sbb
popa
pop
and
cltd
jne
jle
aas
xor
andb
mov
push
mov
xchg
dec
dec
icebp
iret
mov
mov
mov
push
test
sub
rorb
idivb
inc
btc
popf
daa
cmp
adc
dec
sbb
fstps
clc
fisubrl
pop
ret
jmp
push
mulb
invlpg
dec
mov
ffreep
in
dec
adc
enter
sbb
pop
arpl
cltd
jp
arpl
mov
xchg
inc
pushf
cmp
bound
xchg
aas
dec
popa
dec
jmp
leave
pop
push
jns
dec
inc
lods
jb
or
fwait
add
jge
lahf
pop
sbb
fpatan
jno
insb
pop
jb
jbe
push
or
std
jg
xor
mov
sbb
and
or
sti
sbb
sbb
mov
and
inc
pop
mov
dec
arpl
int
push
sub
lahf
jae
lods
xor
push
adcl
mov
out
mov
rcrb
or
pop
in
fwait
hlt
nop
xor
push
push
icebp
inc
mov
xor
cld
adc
xchg
cmp
enter
dec
or
sbb
test
cltd
xor
popf
xchg
jns
sbb
outsb
push
mov
xchg
adc
pop
sbb
jns
inc
mov
xchg
mov
notl
cmp
adc
jns
pop
je
pop
mov
mov
lods
insl
dec
and
cmp
pop
mov
and
mov
xor
mov
jmp
sbb
add
and
cmpsl
fists
test
in
push
mov
sub
xchg
insb
fmul
cmp
jle
dec
dec
clc
fsubrp
add
push
push
cmp
movsb
push
mov
fcmovbe
out
ljmp
and
out
int
addb
pop
cld
sub
xor
ja
and
outsl
mov
lret
mov
push
stc
ljmp
xchg
sbb
mov
arpl
xchg
jne
cld
xchg
jecxz
mov
fs
cmp
add
popa
out
scas
out
xchg
negl
inc
pop
pushf
std
aam
jmp
pop
mov
and
xchg
xchg
sub
test
sub
subl
and
scas
fbstp
sub
or
add
lcall
mov
cwtl
test
int3
subl
testb
cld
loopne
mov
sbb
sbb
sub
inc
ja
sub
jmp
mov
add
in
xchg
clc
jmp
movb
in
jle
push
cmpsb
hlt
pop
gs
mov
sub
cwtl
test
xchg
in
jp
jmp
push
mov
add
push
xor
sub
cs
pop
out
xor
inc
mov
outsb
dec
fwait
mov
mov
jge
dec
sar
jno
or
mov
xchg
imul
ss
add
int3
scas
pusha
xchg
sub
pop
add
lods
xorb
add
fisttps
mov
lock
pop
fsubrl
adc
loop
out
mov
and
push
xchg
nop
lods
and
inc
scas
cwtl
push
scas
mov
lods
mov
das
cltd
xchg
add
sub
shl
scas
push
sbb
lahf
adc
sahf
lods
inc
stos
mov
mov
addr16
sub
addr16
loope
call
or
push
sbb
push
push
lret
fcoml
or
or
dec
je
lcall
xchg
inc
sbb
mov
out
ja
mov
repnz
pop
lret
insl
pop
cwtl
dec
push
xlat
int
leave
cmp
sbb
je
mov
xor
clc
or
dec
mov
jmp
loope
cmc
and
mov
rcrb
mov
ja
dec
sbb
add
fdivl
repz
ror
insl
daa
cs
xor
pop
sahf
loop
push
imul
test
cmp
fsubp
mov
xchg
sbb
in
push
aad
fmulp
ljmp
pop
and
js
inc
mov
popa
cmp
sub
mov
int3
scas
pop
es
add
sbb
call
pop
cmp
sbb
test
jg
push
sub
sbb
dec
add
jbe
orps
jle
add
test
lret
lcall
pop
cmp
push
xor
add
pop
icebp
out
push
mov
mov
add
sar
xor
pop
xchg
mov
xchg
sub
jae
movsb
inc
mov
mov
roll
cmp
sbb
int3
fdivs
test
xlat
mov
movsb
lea
inc
jecxz
aad
andl
inc
xchg
das
mov
xchg
cli
mov
dec
dec
test
test
daa
cmp
clc
inc
enter
pusha
xchg
xor
adc
sub
and
dec
push
jo
add
cli
xchg
cmp
js
mov
dec
sbb
into
mov
popf
gs
dec
sbb
dec
fsubp
repz
pop
scas
inc
loope
mov
jne
pop
or
dec
fcmovnu
stc
sbb
ret
test
fs
jle,pn
push
daa
lret
loop
cli
jae
sbb
sub
jb
es
and
ljmp
lcall
les
lods
fidivrl
inc
sbb
mov
hlt
inc
cmc
push
cmp
xlat
mov
hlt
int3
call
sbb
rorl
mov
test
testb
jp
pop
sub
bound
pusha
fnsave
ficoms
clc
xchg
test
pop
jnp
xchg
jmp
mov
clc
hlt
outsl
enter
xchg
fwait
or
repz
push
and
adc
jmp
pop
unpcklps
ret
push
pusha
sub
xor
inc
jo
insl
jle
xlat
mov
lret
xor
dec
push
jae
adc
icebp
gs
orl
out
xchg
inc
mov
sarl
xchg
scas
jno
sbb
mov
add
and
jbe
inc
test
lahf
lock
lea
in
or
cmp
aaa
cmp
ret
push
andnps
xlat
ljmp
loop
or
sbb
mov
cmp
mov
lret
xchg
cmpsb
out
pop
mov
mov
leave
insl
es
movaps
insl
mov
adc
push
fildll
pop
les
mov
add
jle
in
xchg
es
inc
push
push
add
sbb
popf
xlat
icebp
cmp
push
js
stc
pushf
mov
pop
push
inc
cmp
mov
push
repnz
test
mov
popa
stos
adc
std
je
dec
cmp
push
ja
sbb
and
cs
or
mov
push
ljmp
mov
push
in
push
rolb
xor
ds
add
pop
loope
sbb
das
data16
xor
mov
aas
mov
mov
cmpsl
sub
jbe
pusha
clc
fwait
repz
inc
adc
pop
mov
adc
mov
lods
xchg
popf
out
stos
fs
rcll
in
movnti
in
shlb
sub
lock
adc
shrb
xchg
sbb
test
in
or
inc
insb
leave
cltd
xchg
pop
push
cltd
repz
les
xchg
pop
cwtl
or
adc
bound
jae
mov
jno
and
addr16
jae
notl
pop
lcall
imul
flds
lcall
ds
adcl
inc
sub
or
inc
dec
lods
inc
das
stc
add
ljmp
jb
dec
std
xchg
or
pop
aas
push
cmpsl
pop
mov
hlt
in
add
add
sbb
scas
jo
jmp
pop
jne
subb
jnp
ss
mov
ret
adc
push
pop
pop
lea
lods
test
movsl
dec
nop
imul
xchg
jmp
icebp
imul
or
xor
rcr
mov
sub
js
jnp
xor
mul
pop
or
clc
fmulp
xor
adc
push
insl
xchg
fsubs
ljmp
push
or
xchg
fucomip
sahf
cli
loopne
dec
ffreep
jbe
xor
negb
mov
xor
fs
fstps
mov
mov
enter
cmp
pop
sbb
xor
mov
sbb
sbb
in
in
outsl
leave
cwtl
add
jp
mov
dec
sti
cmp
mov
jle
jge
xor
movb
push
xchg
cmp
fs
sbb
or
and
mov
movsb
outsw
mov
subl
in
cmp
stos
and
fucompp
cld
mov
addl
add
fstl
mul
inc
insl
in
xor
jo
lods
sub
jle
pushf
sbb
cmp
movsl
or
ret
inc
out
mov
stos
dec
sarb
jle
pop
push
and
sarb
or
sbb
ret
mov
bound
inc
idiv
cld
ljmp
xchg
add
xchg
popa
pushl
mov
js
pop
push
ss
lret
stos
in
xchg
mov
jl
xchg
pop
rorl
mov
in
into
sub
xlat
jmp
je
sub
mov
in
jae
and
push
mov
pop
sbb
add
cmp
jae
pop
sbb
stos
ljmp
insl
push
dec
js
and
insl
gs
push
stos
dec
outsb
mov
push
repz
or
mov
shrl
jo
mov
dec
inc
imul
lds
adc
jmp
jae
iret
into
mov
aad
dec
popa
add
xchg
mov
test
incb
adcl
daa
jmp
icebp
mov
sahf
push
cli
hlt
int
test
and
int3
js
ret
icebp
cmpsb
inc
cmp
jbe
add
jns
rclb
sbb
push
adc
popf
xchg
and
pop
je
pop
sub
cmp
scas
bound
fwait
push
push
and
in
ljmp
push
mov
dec
pop
sbb
cwtl
ret
mov
ds
inc
in
push
xor
scas
sbb
add
sahf
stc
pop
loope
aas
pushf
clc
andl
pushf
cltd
or
pop
pop
aas
adc
push
in
into
add
subw
dec
mov
sub
testl
imul
sti
out
lret
inc
sub
bound
daa
stos
pop
stos
or
push
dec
xor
into
orb
stos
adc
in
pop
inc
dec
jp
leave
add
cmpsb
faddp
sbbb
sbb
mov
cld
or
mov
jecxz
pop
mov
jg
add
add
sub
push
movsb
ret
repnz
pusha
push
es
push
arpl
into
dec
call
dec
cmpsl
hlt
sahf
int3
mov
je
dec
lea
pushf
jne
xchg
add
pop
push
mov
outsl
push
xchg
frstor
dec
into
xlat
pusha
out
mov
arpl
sub
movsb
rcrb
adc
dec
lret
rorb
push
int3
mov
mov
orl
ret
add
sarl
lods
xchg
lret
cltd
aam
lea
add
mov
push
outsb
mov
je
js
jge
je
imul
jo
gs
pop
xchg
test
add
aam
lods
incl
push
jbe
inc
out
mov
pop
or
aad
jecxz
in
mov
xlat
jl
sbb
or
dec
lret
dec
subb
jae
popa
shlb
inc
sbb
repz
xlat
cmp
mov
lods
or
push
dec
mov
cmp
jno
fcoms
xchg
mov
fildll
xchg
inc
negb
push
in
sahf
sbb
leave
aaa
adc
pushf
mov
mov
xchg
cmp
mov
push
out
fsubl
mov
fildll
fstpt
xchg
js
rorb
out
push
aam
andb
and
jg
sbb
lock
in
pop
mov
inc
dec
outsb
pop
adc
dec
cli
loopne
push
movsb
cs
inc
inc
aaa
push
jno
lods
push
daa
mov
adc
dec
sti
lret
sub
bound
jo
jp
and
popf
pop
sub
inc
das
cmpsb
cli
sbb
mov
aas
outsb
adcb
das
jo
dec
popf
loope
fs
cmp
call
js
enter
mov
imul
mov
dec
popa
cmpsl
mov
shrb
dec
or
add
icebp
imul
cmp
les
mov
in
aas
inc
push
in
inc
lods
ds
iret
test
and
mov
out
sub
mov
push
push
arpl
xlat
into
pop
ja
mov
xchg
pusha
push
scas
jno
stos
xchg
inc
int
add
scas
push
stos
or
cmpsb
add
sub
movsb
adc
fnstsw
jmp
mov
andb
and
xor
mov
xchg
dec
xlat
or
daa
mov
hlt
sub
or
xchg
arpl
stc
xor
or
adc
rcll
jp
nop
sbb
jbe
stos
sub
sbb
sbb
mov
mov
lods
jl
add
out
fidivrl
aam
and
add
out
movsl
pop
sahf
sbb
mov
sbb
push
lds
adc
lods
std
and
cmp
je
xor
outsb
dec
inc
mov
pop
push
das
lods
nop
arpl
fistpl
je
icebp
repz
sbbb
mov
fists
pusha
in
pop
mov
fisttps
sub
jnp
push
nop
pop
adc
mov
push
out
inc
mov
lods
pop
out
jbe
or
inc
or
push
ja
sarb
ret
inc
fstps
call
mov
mov
xor
enter
ljmp
add
xchg
inc
sub
sbb
popa
pop
mov
inc
sub
mov
lcall
call
int3
dec
fldcw
negl
xor
repz
pushf
inc
insl
push
pop
and
movsl
aas
mov
stos
in
cmpl
inc
roll
fcomps
sbb
ljmp
add
jl
out
scas
xor
outsb
pop
push
xor
sti
ljmp
jmp
gs
push
imul
aaa
or
test
data16
insl
dec
lock
sub
fs
ret
stos
inc
push
lods
or
inc
int3
mov
gs
xor
jb
xor
dec
add
or
inc
or
rcrb
dec
adc
adc
or
frstor
mov
mov
xor
and
int3
pusha
mov
outsl
mov
lret
xchg
nop
mov
lods
out
loopne
lret
add
and
jns
in
in
loopne
inc
jns
leave
sub
fidivs
xchg
dec
pop
test
lds
imul
xor
push
testl
cmpsl
and
mov
mov
insl
jae
out
dec
testb
fldcw
push
mov
mov
cs
fdivp
push
gs
jecxz
sub
mov
inc
jns
insl
aad
fwait
in
mov
mov
mov
mov
inc
mov
les
add
dec
ret
sbb
js
pop
data16
outsb
les
mov
mov
add
jl
ss
clc
leave
aaa
je
lret
xchg
pop
and
mov
lock
push
mov
pop
movsl
cmp
sbb
mov
cmpsb
int3
xchg
pop
sbb
imul
or
pop
cmp
push
xor
fcom
adc
mov
xchg
mov
mov
adc
popf
je
inc
xchg
daa
ss
sub
scas
cmp
cmpl
out
pop
ss
inc
sub
incb
xchg
mov
lods
adc
inc
aas
aaa
popf
stos
call
in
sub
jns
push
pusha
sbb
pop
inc
in
stos
clc
dec
sbb
pop
inc
xor
adcl
pop
cmc
out
cmp
xchg
dec
repnz
or
inc
mov
es
cmp
pusha
lea
cmc
lods
arpl
cmp
push
mov
add
leave
mov
outsb
leave
mov
add
repnz
mov
push
stos
int3
sub
sub
cmp
inc
xlat
sbb
out
nop
push
xchg
fimuls
inc
cmpsl
aad
mov
xchg
mov
adc
mov
and
and
add
das
push
mov
pop
sub
sbbb
je
pop
xchg
shlb
sbb
push
dec
test
daa
push
mov
jg
jnp
ret
loopne
mov
cs
and
rolb
int
add
jae
mov
jg
inc
xchg
or
movd
and
push
xchg
push
test
out
imul
sub
fdivs
loope
xchg
jnp
inc
rolb
xchg
inc
add
gs
imul
scas
mov
imul
aad
add
mov
stc
clc
cmp
add
cmp
mov
out
pop
xor
out
in
jo
xchg
mov
mov
xchg
dec
xchg
sahf
sub
mov
xor
rorl
stc
cmp
sub
ljmp
push
insl
or
push
cmpsl
stos
cmp
stc
test
ret
cmpsb
cmp
xchg
push
imul
sahf
jl
jle
push
nop
imul
cmp
adc
mov
and
cmp
xchg
mov
xchg
enter
mov
addb
notb
ret
out
cwtl
add
sub
pop
cmpsb
xchg
popa
mov
pop
cmc
push
xchg
out
shrb
addb
out
sbb
fidivrl
cld
test
mov
daa
xchg
pop
aam
mov
mov
aaa
sbb
xorl
movsl
shrb
addl
pop
fistl
jmp
int3
subb
xchg
xchg
jne
xchg
jae
xchg
adc
pop
jne
shll
repz
test
aam
sub
fidivs
adc
lods
sbb
mov
and
add
adcb
add
inc
mov
out
push
sub
mov
pop
cmp
adc
scas
mov
jg
insb
sub
mov
push
mov
cmp
adc
pop
imul
pop
into
stos
mov
fwait
stc
xchg
fiadds
divb
sub
ss
subb
aaa
fmuls
mov
test
ror
cmp
out
and
test
je
inc
sub
repz
push
gs
jne
mov
xor
fistl
nop
std
jns
lcall
jl
inc
mov
cwtl
mov
jne
cmp
pop
fwait
repnz
and
andl
les
pop
jle
and
jg
and
jnp
in
int
cmc
and
add
cld
inc
clc
pop
loop
out
add
mov
push
add
call
rorl
xor
nop
inc
pop
sbb
std
mov
call
aad
insl
pop
outsl
mov
adc
imul
scas
mov
repz
add
ja
jg
js
sbb
in
test
or
cmp
sbb
cs
int3
mov
mov
mov
daa
mov
adc
daa
es
xchg
jb
inc
adc
repz
mov
js
inc
xor
cld
dec
pushf
jge
xor
rcr
and
xchg
sbb
xor
das
sti
stc
pop
push
dec
and
repz
imul
cmp
or
mov
jmp
dec
adcb
ds
adc
push
mov
mov
leave
jp
ja
xor
xchg
cwtl
movsl
in
dec
fwait
cmp
xchg
in
sbb
xor
sub
outsb
lock
push
mov
pop
loopne
mov
out
inc
jp
xchg
jg
mov
dec
loop
xlat
call
push
scas
aam
pop
mov
jmp
jb
das
aaa
xor
je
mov
rorl
mov
sub
and
sbb
jbe
imul
jno
test
xor
es
and
mov
cwtl
and
stos
aaa
inc
jle
push
subb
ss
fstps
inc
cltd
aad
xor
insb
lods
movsl
in
lods
xchg
cmp
dec
roll
inc
push
inc
xchg
int
fldcw
scas
or
stos
xchg
pop
push
cld
test
cmp
xor
jmp
mov
lds
test
push
jl
push
jns
and
out
les
mov
data16
data16
mov
cmova
jb
sahf
cmpb
xorb
cmpsl
scas
out
out
sub
loope
adc
jno
mov
enter
adc
push
ficoml
xchg
ds
sbb
xchg
mov
sub
fs
lock
pop
or
sbb
lds
iret
sbb
in
mov
push
testl
roll
pop
es
or
push
pop
xchg
jne
outsb
push
adc
orl
imul
lret
and
ljmp
movsl
pop
daa
ss
add
jne
mov
out
add
mov
sbb
dec
rclb
adc
fcmovb
mov
cs
xchg
xchg
mov
aaa
int
mov
push
mov
stos
mov
std
xor
fcmovnu
jae
or
lea
jge
mov
mov
sub
xor
jle
sub
dec
lahf
ror
outsb
push
sbb
shll
xor
pop
test
jo
rorb
or
adc
test
bound
inc
bound
mov
pop
sarl
pop
sbb
enter
ljmp
arpl
icebp
test
sbb
cs
xchg
cmpsl
xor
fwait
aaa
prefetch
inc
rorl
cmpsb
cmpsb
xor
gs
or
pop
jne
sbb
mov
push
pop
push
sbb
loop
mov
loope
ss
ljmp
ja
stos
mov
cli
xlat
icebp
fidivs
sub
scas
or
dec
adc
fcmovnb
cs
push
and
sahf
xchg
xor
dec
addr16
aam
sbb
or
daa
inc
fwait
mov
adc
jo
cmp
adc
addr16
pop
ja
mov
aas
adc
dec
icebp
fdivrs
add
stos
sahf
and
int
pop
push
lods
in
imul
test
mov
js
mov
mov
outsl
inc
sarb
packssdw
jge
cli
or
std
cmpsb
pop
push
repz
or
int3
pop
add
or
cli
aam
mov
in
push
adc
dec
inc
repz
ljmp
push
jle
push
movsw
imul
or
ds
cmovnp
not
dec
lods
cmp
dec
sahf
sbb
mov
fcomps
pop
xor
flds
push
mov
cmp
xor
jbe
xchg
rcrb
bswap
add
lcall
ds
ss
popa
lahf
jbe
pop
adc
mov
outsl
aad
mov
inc
jbe
dec
push
add
rclb
and
sub
insb
jo
dec
xorb
mov
lds
sbb
lret
xor
sbb
push
aam
adc
das
loop
push
pop
push
test
leave
lcall
add
pop
inc
xorl
xchg
xor
ds
dec
lods
out
and
inc
popa
std
mov
mov
cwtl
adc
jnp
mov
mov
jnp
xlat
cld
mov
std
xor
sub
cmp
or
insb
pop
fsubrs
pop
add
push
and
insb
out
jge
jge
mov
cmp
cli
jge
cmp
and
pop
rcll
scas
lret
and
mov
or
jbe
rolb
mov
test
xor
hlt
or
insl
pop
jmp
xchg
mov
fwait
jo
adcb
test
and
loope
and
imul
push
fcmovu
xor
xor
dec
push
ret
data16
repnz
mov
adc
movsb
mov
cmp
adc
insl
xor
fisubl
or
int
movsl
ljmp
add
lcall
jbe
lcall
dec
cmpsl
mov
fstps
int3
notl
jl
sub
mov
xchg
cmpsb
lock
nop
jno
int
push
xchg
shlb
out
pop
popa
cmp
mov
stc
test
cs
mov
mov
add
add
aas
push
xor
jle
shll
testl
push
xchg
loope
mov
imul
imul
aad
cs
lea
mov
out
loopne
and
mov
push
aaa
mov
stos
add
js
sub
mov
xor
clc
fcmovb
out
icebp
sbb
jge
call
sbb
mov
fdivrs
fsubrs
inc
popa
iret
inc
testb
lods
push
test
xor
pop
xor
mov
cwtl
ffree
test
add
sub
rcrl
mov
dec
imul
daa
lock
fcmovb
adc
sbbl
aas
rcrl
inc
mov
cmpsl
add
lods
mov
mov
lahf
loopne
iret
nop
scas
inc
mov
loop
test
sub
insb
aaa
stc
cmp
mov
dec
cld
lcall
cltd
mov
sub
jb
clc
push
fcoms
lock
lahf
ds
mov
mov
or
hlt
mov
and
xchg
cltd
ljmp
jns
mov
xchg
mov
dec
daa
aam
inc
adc
push
dec
mov
shrl
lock
sbb
mov
jne
jne
inc
clc
pop
orl
pop
sbb
xchg
or
sahf
loop
daa
dec
jmp
push
arpl
insl
or
jmp
ja
aam
or
sti
mov
cli
mov
or
inc
mull
cmp
stos
cmp
jge
mov
aas
loop
xor
xor
mov
into
push
lods
daa
mov
cli
mov
out
iret
les
aaa
sti
mov
cmpb
shl
dec
add
arpl
lds
xor
rolb
lods
test
mov
xchg
insb
push
sbb
or
rep
push
xchg
mov
xor
fildl
adc
popf
pushl
cld
cmpsl
mov
aam
add
mov
xor
and
mov
rcll
inc
repz
mov
sahf
or
pusha
cs
sub
int
in
xorl
jbe
jnp
mov
push
xchg
daa
lock
inc
rorb
adc
push
in
cmc
fidivs
imul
leave
push
sti
cli
and
add
incb
fsubr
ucomiss
sub
lods
adc
or
data16
dec
mov
push
pop
xchg
mov
push
fistl
cs
aam
sub
cmpsb
sub
xor
cltd
push
mov
and
stos
pop
jp
sbb
push
notl
mov
rcll
pop
mov
dec
mov
ds
lock
dec
mov
mov
cs
popa
loopne
clc
xchg
outsb
mov
rorb
push
fnstcw
jp
jne
adc
add
ljmp
xor
in
in
shlb
xorl
mov
or
ret
icebp
decb
outsb
mov
cwtl
pop
in
add
and
jle
mov
test
or
xor
jle
bound
roll
imul
pop
sbbb
dec
pop
push
das
push
fucom
dec
or
xor
test
in
adc
push
shll
movsl
mov
mov
dec
gs
push
jnp
inc
mov
mov
pushf
mov
dec
mov
add
cmp
dec
pop
pop
xor
negb
subb
pushf
popa
mov
dec
cwtl
cmc
outsl
mov
test
pop
cli
pop
mov
in
sub
pop
sub
xchg
lahf
xor
cmp
sbb
jmp
mov
mov
add
xchg
lock
mov
fdivs
xchg
ret
popf
ds
das
pop
pop
stc
andps
test
mov
les
lcall
mov
xor
repnz
jecxz
xchg
xor
fstpl
pop
and
icebp
sbb
test
add
lds
rclb
stc
in
xor
sub
and
stc
popa
xchg
pusha
insb
sub
inc
stos
adc
cmp
jb
aad
pop
stos
push
inc
inc
push
mov
lods
cmp
fidivs
xor
xchg
xor
call
push
sub
xchg
xor
mov
out
cmp
out
jge
repnz
cmpsb
dec
fcoms
cmp
cmp
sti
outsl
arpl
daa
adc
cmpsl
add
cmpsb
int3
lahf
out
jno
icebp
repz
mov
push
jne
pop
jle
pop
lahf
xchg
mov
mov
xor
sbb
out
daa
jp
pop
cld
movsb
xchg
inc
fwait
push
lret
in
imul
sub
hlt
test
jns
aad
enter
push
dec
gs
sub
fcmove
stos
xchg
jg
sub
add
pop
push
sar
cwtl
inc
dec
lahf
or
arpl
mov
inc
in
inc
or
lcall
pushf
fcoml
adc
xor
fists
sbb
inc
adc
stos
jbe
movsl
push
aas
sub
aam
das
stos
in
aad
xchg
pop
xchg
jnp
pushf
cmp
divl
mov
mov
cmp
push
sbb
ja
mov
sub
xchg
lcall
gs
jae
add
dec
adc
mov
hlt
and
xchg
mov
mov
mov
xor
push
cs
and
repz
mov
push
sbb
into
and
stos
push
lcall
xor
test
xor
xorl
jae
xor
dec
cmpl
and
clc
jns
fisubs
cmp
nop
dec
roll
fiaddl
sub
cli
xor
and
fldl
push
fwait
lds
push
mov
inc
int
icebp
testl
hlt
scas
push
stc
fwait
lds
notb
jmp
int
add
and
ljmp
arpl
std
pop
lret
lds
sbb
ljmp
out
call
cld
into
jge
dec
leave
js
decl
sbb
fs
fcoml
ffreep
cmp
pusha
dec
xor
mov
shl
and
scas
push
std
jb
xchg
xchg
call
in
inc
xorl
movsl
mov
nop
fcmove
aam
adc
and
sub
xchg
xchg
popa
popf
push
push
in
xchg
pusha
lods
lahf
sbb
jl
mov
inc
in
jnp
fstps
ret
push
dec
push
jg
push
pop
sub
xorb
pop
mov
inc
sbb
std
test
scas
xor
cli
mov
scas
and
inc
mov
cmc
or
movsl
inc
jl
clc
mov
iret
sbb
pop
push
lods
xchg
nop
add
out
rol
xchg
inc
mov
test
out
and
cmp
lea
test
jnp
sbb
das
cmpsl
incb
cld
ss
lods
inc
and
nop
push
stos
bound
xor
push
fs
xor
mov
inc
cmpsb
repz
sbb
or
addb
push
and
cs
inc
into
jl
inc
push
and
fmull
mov
hlt
notl
sbb
fistl
pop
jnp
call
scas
mov
and
insl
and
cmp
dec
jl
xchg
movsl
mov
mov
jl
and
movsb
sbb
ror
xor
inc
cltd
xchg
lods
decl
mov
arpl
inc
dec
outsb
sub
out
cwtl
ljmp
je
mov
mov
sbb
inc
mov
jl
push
stc
sbb
mov
add
mov
mov
pusha
push
out
lods
mov
dec
cltd
bswap
fnclex
lds
insb
xchg
jle
jno
bound
enter
repnz
aam
xchg
xor
sbb
in
or
mov
xor
pop
inc
movaps
rorb
adc
push
fadds
imul
sbb
imul
sti
mov
outsl
in
loop
xchg
insb
xlat
incb
push
mov
insl
or
xchg
movsl
adc
in
cs
hlt
loopne
inc
dec
xchg
and
push
pop
aas
lret
xchg
inc
push
mov
repnz
jge
mov
cs
into
sbb
dec
mov
xchg
sti
fstl
mov
cld
or
sbb
aaa
xchg
out
rcr
and
sbb
popf
repz
mov
popa
cmp
xchg
or
inc
mov
aad
lock
xor
or
ja
jo
out
enter
pop
mov
xchg
jno
pop
jne
sub
dec
push
adc
push
je
inc
test
int3
push
push
mov
jmp
stos
div
mov
xchg
cmp
xor
sbb
ljmp
dec
mov
loopne
and
jns
int
shlb
iret
shrl
fwait
call
jmp
sub
push
in
dec
mov
outsb
aad
lahf
mov
nop
jae
in
pop
sbb
adc
push
outsl
inc
rcll
pop
mov
fcompl
insb
jecxz
jne
dec
xchg
pop
cmpsb
ficoml
nop
call
mov
pushf
test
sbb
stc
inc
test
std
add
gs
mov
dec
cwtl
jge
enter
jle
and
jbe
xchg
loopne
and
test
adc
cld
leave
sbb
inc
call
popa
roll
fdivs
pop
xor
jmp
xor
lods
iret
or
sub
es
pop
std
mov
stos
dec
in
imul
hlt
mov
scas
adc
dec
cvtpi2ps
cmc
cmp
loop
mov
pop
push
sbb
repnz
lret
js
shll
inc
insb
push
jae
xchg
out
mov
xor
and
dec
daa
adc
sbb
cmp
jle
enter
jge
wbinvd
lea
jbe
fisttpll
mov
fs
faddl
in
sub
aad
arpl
mov
dec
lahf
js
and
mov
mov
adc
insb
int3
dec
cmp
cmp
rorb
data16
push
aad
enter
aaa
divb
and
in
add
fsubl
mov
jno
ss
cmpsl
mov
and
xorb
test
call
pop
outsl
lea
push
ds
xchg
pop
xor
add
sbb
add
hlt
cmp
test
outsl
dec
pop
push
mov
jmp
ljmp
xchg
mov
pop
xor
dec
sbb
es
stos
ret
aad
fsubs
lahf
and
gs
mov
and
repnz
jo
mov
mov
mov
push
daa
aad
mov
in
jne
jl
rolb
in
negb
cwtl
fsubrs
jns
scas
lret
out
rcrb
jb
rorb
movsl
lods
sub
fcmovnbe
insb
adc
xchg
enter
out
push
sub
xchg
fcoms
dec
adc
add
mov
imul
movsl
clc
xorl
fsubs
sub
icebp
test
in
shr
sbb
dec
or
aad
adc
daa
in
in
dec
mov
lret
inc
les
sub
and
int3
lret
mov
adc
jno
sub
adc
or
in
pop
sub
shl
sahf
popf
add
cs
and
push
mov
lods
sub
adc
xchg
out
rcll
jno
jmp
sub
adc
dec
aam
arpl
js
hlt
and
adc
rclb
inc
pop
lds
test
cs
call
jp
adc
cltd
push
push
movsb
int
mov
incl
jecxz
fisubrs
jne
xchg
pop
dec
imul
cmc
icebp
es
cmpsb
jle
mov
je
out
test
ljmp
push
pop
repnz
mov
and
sub
inc
in
xchg
addr16
inc
mov
mov
fisttps
mov
stc
or
inc
push
fcomps
dec
push
pop
adc
mov
add
and
ss
jecxz
in
add
dec
faddl
jae
stos
push
cmp
and
mov
in
into
and
mov
lods
pop
pop
mov
in
mov
sti
sbb
mov
icebp
iret
cs
mov
or
jge
jbe
or
mov
xchg
push
cmpsl
addb
dec
int3
push
inc
mov
lret
nop
andps
movsb
in
in
lods
mov
adc
ds
cmpl
repz
pusha
mov
dec
jb
and
xor
adc
sbb
mov
jae
dec
xor
and
cmp
xchg
add
add
xchg
inc
adc
int3
push
orl
aaa
imul
push
mov
jno
push
jp
negb
add
lret
jmp
cmp
dec
dec
clc
sub
in
inc
or
cmpsl
imul
add
push
rorl
xchg
pushf
ret
pusha
flds
femms
sub
mul
cmp
ret
push
add
daa
dec
xchg
popf
pusha
loope
bound
jp
mov
imul
arpl
xchg
push
add
ljmp
mov
cmc
aad
pop
sub
inc
shlb
jp
mov
xchg
gs
add
add
sti
xor
inc
pop
mov
aad
inc
insl
push
jnp
and
push
rol
mov
cld
mov
sbb
int
add
stos
xchg
xor
pop
call
imul
icebp
xlat
adc
enter
cmpsl
sbb
fmull
sub
aas
mov
sbb
dec
add
add
sub
movsl
xchg
scas
in
icebp
inc
pop
fidivrl
adc
js
push
testb
out
xchg
imul
lods
jp
cmp
sub
test
dec
scas
test
xchg
ljmp
imul
inc
lods
loop
jbe
xchg
jb
femms
or
jns
pop
mov
push
mov
mov
adc
dec
mov
cs
mov
inc
aam
inc
in
xlat
ret
dec
sahf
add
js
cltd
out
imul
adc
sub
xor
rcrb
or
mov
add
add
mov
pop
stos
jo
pop
insb
push
pushf
push
pop
out
loopne
fdivs
lock
je
aaa
xor
leave
hlt
frstor
push
sub
mov
aad
lds
sbbb
je
mov
adc
out
ss
jecxz
pop
push
test
pop
repz
xor
sub
add
inc
lret
push
jnp
in
or
inc
sbb
and
rcrb
jne,pn
or
enter
pop
cmp
mov
push
les
or
push
ds
jo
xchg
nop
movsl
out
leave
mov
and
or
inc
push
jno
ret
cmp
and
jl
nop
pop
sub
xchg
mov
hlt
add
mov
sbb
xrelease
dec
outsb
repz
inc
stos
push
jnp
popa
call
hlt
pop
push
bnd
sahf
jecxz
hlt
sub
loopne
rcrb
mov
push
xchg
es
inc
pop
repnz
add
push
xor
or
or
mov
mov
mov
inc
or
mov
or
add
mov
or
ja
sbb
push
lods
sub
rolb
adc
dec
sarb
xchg
mov
adc
popa
cmp
cmp
daa
mov
cmp
sub
repnz
cmc
jb
xchg
out
fcmovu
loopne
into
xlat
in
xchg
add
xchg
in
push
and
stos
fwait
jp
fwait
jno
cmp
mov
or
push
cmp
scas
bound
subb
test
jne
insb
jmp
or
mov
xor
jns
fnstenv
mov
repnz
adc
dec
dec
loope
mov
ljmp
cmpsl
aaa
rcrl
mov
jbe
test
inc
lods
daa
ret
cmovno
jl
imul
icebp
cmp
sub
fwait
sub
mov
das
mov
xor
call
sbb
stos
sahf
add
adc
aam
icebp
dec
sbb
int
in
fcoml
mov
ret
test
in
in
int
lea
dec
popf
enter
mov
mov
xrelease
shll
add
out
push
insl
in
lods
lock
sbb
mov
cmpsb
pop
push
fldenv
dec
sub
sub
out
pusha
add
and
out
repnz
je
arpl
xchg
mov
pop
jae
nop
and
jp
ds
and
mov
jns
xorb
notb
adc
pop
xchg
shll
mov
inc
cmp
inc
sub
mov
jmp
pop
push
add
les
out
pop
aad
int
xchg
arpl
xor
pushf
fadd
pop
out
out
dec
cmpb
inc
jle,pn
loop
shll
mov
inc
pop
sub
mov
dec
je
aas
sarl
nop
mov
pushf
xchg
xor
ret
lret
aaa
stc
mov
repz
fs
lcall
adcl
adc
dec
fsubrl
lcall
scas
xor
addl
add
inc
movsb
mov
xor
mov
lods
insl
and
lcall
imul
ss
jns
push
mov
adc
hlt
mov
sti
in
insl
lret
mov
pop
stc
push
pushf
lret
jp
inc
or
sbb
shll
pop
cmp
add
mov
lock
mov
xchg
or
scas
hlt
dec
and
push
add
inc
je
movb
mov
sub
jns
xchg
or
xchg
inc
scas
sbb
loopne
scas
xlat
xor
es
cmp
push
fiadds
jg
es
in
leave
or
test
or
adc
jl
mov
mov
ds
push
insb
in
pop
jns
or
xor
dec
xor
les
mov
jns
mov
mov
scas
neg
jge
cli
rolb
test
mov
xchg
scas
pop
clc
testb
ja
scas
int
sti
cwtl
push
ds
mov
test
fistl
pusha
and
jge
sbb
ret
jae
pop
adc
lods
fwait
pop
sar
repz
js
inc
add
jae
cmc
mov
loop
mov
fdiv
jp
pushf
cmp
or
lret
js
outsl
stc
push
push
mov
sbb
xor
dec
jo
je
out
and
push
mov
ja
mov
mov
sub
dec
mov
mov
rorb
loope
inc
or
outsl
gs
mov
aas
enter
outsb
adc
xchg
fs
inc
clc
lea
out
sbb
adc
add
mov
sti
mulb
mov
mov
mov
cmp
out
mov
sbb
ds
mov
out
jl
cmp
inc
inc
icebp
mov
in
es
pusha
jns
out
xchg
addl
pop
mov
test
inc
mov
mov
xchg
out
pop
xlat
aad
push
xchg
xchg
inc
insl
push
arpl
cmpsl
sub
pop
rcrb
jbe
and
icebp
jns
jl
popf
adc
dec
lret
daa
cwtl
and
mov
or
mov
ja
cmp
orb
xchg
js
xchg
and
stos
cmp
mov
fidivs
inc
sub
call
dec
mov
out
mov
pop
push
int3
sub
adc
out
adc
test
mull
xchg
add
aad
mov
jge
sbb
push
lret
in
mov
mov
pop
inc
push
int
mov
dec
mov
out
aaa
adc
dec
xor
mov
data16
out
mov
or
or
push
xchg
jle
nop
loope
jecxz
sub
cmpb
ss
out
cmpsb
repnz
addr16
add
adc
xchg
das
and
xchg
popf
sbb
lds
pop
sub
add
imul
and
leave
mov
outsl
in
popa
shl
xsha256
cmpsb
xchg
xchg
ss
mov
cmpsl
cmp
and
and
or
pushf
or
cmp
nop
cmp
xor
test
rolb
cmpsb
test
in
pusha
imul
out
addr16
icebp
inc
stos
xor
mov
bswap
jmp
dec
lods
cmp
xor
mov
dec
pusha
mov
sub
jp
mov
or
mov
mov
or
loope
in
loope
mov
mov
std
cwtl
scas
test
aas
stos
adc
and
pop
fstps
push
push
push
adc
lock
jg
dec
in
cmp
pusha
stos
rcl
sbb
dec
es
xchg
aaa
sbb
lahf
xor
push
fmull
add
xlat
lea
mov
lcall
fucomip
mov
test
loop
jmp
call
xor
lcall
ficoms
cmp
enter
add
push
leave
clc
mov
push
daa
jbe
push
das
mov
jb
out
or
or
cmp
rorb
jno
mov
insl
dec
xchg
jl
jae
insl
subl
sti
mov
andb
jmp
inc
test
pop
xchg
imul
push
out
jno
ret
mov
repz
dec
xchg
lock
push
jb
ds
jp
and
sub
cmc
iret
ficomps
pop
lds
repnz
pop
icebp
pop
std
outsl
stc
movsl
js
or
inc
jmp
cwtl
xor
inc
and
mov
cmpsb
repz
inc
fcompl
fidivl
mov
rorb
and
lret
sbb
sbb
in
pop
xchg
call
inc
dec
scas
dec
jbe
sub
push
xchg
aas
xchg
cs
jmp
and
cmpsl
pop
dec
into
add
dec
xchg
ljmp
jnp
xor
add
sub
dec
aad
ljmp
mov
push
sarb
sarl
cmp
mov
sti
push
addr16
addr16
int
repnz
sbb
jle
arpl
clc
icebp
test
aad
fwait
out
aam
notl
cmp
sbb
fsubrl
add
lods
xchg
test
movsl
add
cmpsb
lret
pop
call
mov
pop
lcall
cmpsb
daa
jl
lahf
iret
push
inc
xor
repz
loope
out
sbb
xor
and
sbb
pop
pop
jbe
adc
int
xor
push
out
xor
sub
mov
in
lret
popa
jmp
addr16
mov
jae
imul
and
js
je
mov
not
repnz
aad
fwait
rcr
into
pop
xchg
pop
std
je
ss
dec
pop
je
cld
test
pop
mov
std
push
dec
push
mov
xchg
pop
xchg
iret
mov
xor
in
ja
or
arpl
push
xchg
mov
sbb
mov
sub
mov
xor
je
or
pop
cmp
shrl
mov
aaa
aaa
fnstenv
sbb
jo
inc
push
in
mov
add
pop
outsl
dec
ss
mov
mov
loopne
or
jo
in
test
mov
add
add
test
aad
sbb
jns
sbb
cmp
int
shl
mov
cmp
pop
sar
bnd
sbb
mull
mov
cmp
mov
sbb
and
push
mov
lret
ds
adc
mov
cmp
mov
and
out
enter
jae
sahf
sub
inc
lea
mov
xchg
cs
push
pop
pop
fsubrs
add
cmp
inc
stos
outsb
lret
sub
or
xchg
or
pushf
ja
fnsave
popf
lcall
fiaddl
mov
add
sbb
ja
sbb
out
faddl
sub
xor
mov
xor
ljmp
cmpsl
sub
fnstsw
inc
cmp
cs
cmp
pushf
stos
sub
xchg
mov
mov
aad
scas
mov
hlt
mov
fsubs
jge
jbe
cld
adc
mov
outsw
xor
or
shr
sti
test
mov
out
das
dec
jbe
mov
sub
or
lds
popf
xor
xor
mov
sub
fmull
pusha
sbb
rol
mov
rol
cltd
and
jb
gs
cmpsb
sub
sbb
repz
ljmp
jns
mov
out
cmp
xrelease
xchg
cmc
and
push
jecxz
cwtl
pushf
mov
pop
dec
add
xchg
mov
rolb
jg
leave
jle
cmovp
xchg
loope
fnstsw
popa
icebp
cmp
iret
sub
les
and
rcr
cmp
cwtl
or
dec
in
lods
js
dec
insb
inc
push
xor
das
mov
leave
call
loope
adc
add
cmpl
and
push
test
sti
and
shrl
fcompl
pop
xchg
out
cmp
push
clc
mov
mov
inc
sbb
mov
fwait
jle
pop
sbb
xor
ds
and
jns
xchg
push
js
add
jne
add
xchg
lret
dec
inc
outsl
jg
xlat
xchg
cmp
out
jae
jp,pt
xor
mov
mov
in
adc
shlb
jmp
fimuls
adc
sub
sbb
adc
push
insl
adc
and
sbb
ja
aaa
sar
jg
pop
test
cltd
push
aam
cmp
fnstsw
inc
lock
jb
movsb
inc
jb
loopne
jecxz
push
pop
add
and
lret
or
int3
xor
pusha
imul
jp
pushl
add
outsl
shll
dec
outsl
add
add
xchg
hlt
or
sbb
push
fsubs
rcr
adc
insb
xor
test
xchg
mov
pop
sbb
icebp
cmp
lcall
dec
xlat
adc
insl
mov
pop
mov
decl
xchg
cli
add
dec
push
push
or
cmp
sbb
iret
xchg
sbb
adc
push
cmp
mov
out
and
fisttpll
in
dec
add
push
mov
mov
sahf
sahf
call
int
adc
packssdw
fildl
mov
stos
mov
ret
push
pop
adc
push
mov
xlat
test
popl
mov
neg
xor
inc
stc
addb
cmpsb
fcmovnu
jg
adc
xor
mov
in
bound
xchg
cmovge
push
pop
cmpsb
pop
scas
loop
loope
scas
dec
icebp
pop
cmp
lods
fdivrp
and
and
push
dec
frstor
jb
xchg
push
push
ss
popa
cmp
pop
mov
loope
and
cmp
mov
lea
jecxz
leave
stos
inc
in
popa
xchg
xchg
xchg
popa
mov
fwait
jb
je
into
sub
fcoml
movsb
mov
jmp
in
roll
cltd
arpl
push
jl
repnz
mov
cmp
mov
rolb
enter
shll
lds
push
cltd
xchg
inc
jb
pop
mov
popa
pusha
jae
mov
mov
test
mov
sbb
push
cmp
aaa
out
movsb
mov
add
dec
not
aam
sub
lret
popf
ss
add
cmc
movsl
ja
jecxz
popf
in
or
cmpsl
sub
xlat
je
push
or
xchg
mov
dec
daa
adcb
std
ja
and
dec
pop
cwtl
mov
jg
mov
cltd
ljmp
cld
dec
cmp
adc
fdivrl
daa
rcr
movsl
xchg
push
jbe
dec
stos
add
data16
mov
das
dec
in
push
mov
enter
pop
and
aas
push
add
jns
xchg
mov
adc
aad
cli
sub
xchg
in
icebp
xlat
xchg
add
clc
dec
push
nop
cwtl
stos
arpl
cmpsl
jmp
ret
sar
cmp
cmp
lahf
mov
imul
in
pop
mov
mov
sbb
adc
add
cmpsl
fmuls
mov
mov
aaa
and
pusha
xor
daa
push
cmpsl
dec
pop
cs
lret
repnz
push
loope
sub
adc
pop
xchg
xor
pop
dec
mov
sub
or
mov
out
fildl
out
cmpsl
lret
shl
cmc
mov
push
aam
lea
and
and
sbb
cmc
and
inc
js
jbe
gs
in
or
les
fdivrl
call
stos
call
addr16
pop
push
pop
pop
fwait
ret
and
sbbl
fistpl
lcall
xchg
js
xor
shrb
jle
cltd
dec
ja
push
aas
movsb
test
or
jb
outsl
adc
pop
mov
ds
aas
sub
inc
stos
pop
mov
aam
popf
ss
push
mov
aas
xor
add
xor
jnp
shrb
loopne
cld
scas
cli
scas
dec
lcall
sub
sub
test
add
and
mov
mov
mov
xchg
pop
lods
xor
ret
loop
adc
push
leave
add
call
fdivs
sub
add
jb
nop
notb
xchg
jo
aaa
pop
push
test
cmp
sti
les
clc
cmpsl
push
adc
push
lahf
mov
adc
subb
xchg
add
lods
ror
cmp
shll
lods
adc
mov
sbb
push
sub
jno
fldl
daa
add
nop
and
fwait
jecxz
and
stc
loop
ficoms
cltd
pop
bnd
pop
inc
adc
out
or
xchg
or
and
xchg
roll
mov
out
push
push
push
rcrl
fnsave
push
ss
es
adc
aad
mov
cmpsl
cltd
scas
add
adc
ss
enter
rep
pop
popa
or
inc
xchg
cld
mov
stc
push
movsb
rcrb
and
les
pop
out
arpl
mov
xor
push
sbb
insb
adc
lret
xor
sti
push
std
inc
fwait
xor
scas
test
mov
xor
cltd
js
dec
subb
test
cmpsl
inc
and
inc
nop
lcall
std
outsb
pop
jns
pop
fnstcw
inc
ret
jmp
lock
or
lds
xchg
add
pushf
inc
pushl
mov
in
dec
lcall
inc
fiadds
pop
sbb
dec
mov
jo
pop
stos
cltd
test
bound
loope
or
sub
sbb
fcoml
add
movsl
push
lock
int
std
stos
jns
mov
jg
mov
adc
shll
outsb
aam
push
push
mov
pop
fcomps
mov
inc
mov
lret
addr16
lds
fistpl
or
test
test
sbb
push
lret
add
cmc
loop
xorb
outsl
xor
xchg
or
xlat
lret
jl
lahf
imul
das
jne
mov
jo
push
mov
lahf
and
mov
or
ljmp
fwait
lods
pop
sbbl
or
movl
dec
test
loop
fldl
sub
inc
data16
nop
leave
shrb
mov
and
das
cmp
stc
out
push
mov
jnp
cltd
testl
mov
into
aas
imul
and
rorb
pop
sbb
add
jmp
sub
pop
stos
xor
xor
jl
push
pop
or
rol
inc
jne
add
cmc
and
pop
int3
mov
xchg
mov
rclb
sub
inc
arpl
lahf
mov
or
popf
in
inc
jmp
sub
push
inc
dec
imul
jmp
shll
and
cmp
aad
mov
jecxz
std
pop
dec
imul
roll
and
add
repnz
les
call
loope
add
ja
add
out
cmp
pop
insb
imul
or
repnz
push
xchg
adc
inc
stc
push
sti
cmp
lcall
iret
xchg
xchg
jb
jecxz
scas
gs
dec
mov
aaa
cmp
iret
scas
sbb
fdivs
cmp
lret
jge
or
int
fildl
adc
in
or
inc
push
and
or
or
xor
inc
cltd
shrl
or
ret
mov
out
sub
mov
mov
int3
inc
pop
movsl
jle
movsl
adc
pop
sub
int
jp
pcmpgtd
stos
pop
push
mov
fdivl
sti
and
daa
lods
push
test
lahf
add
aas
insb
cmp
xor
pop
xchg
fdiv
fldt
adc
push
xlat
test
repz
fists
lods
cltd
aaa
mov
fld
jo
call
push
or
pop
mov
inc
dec
pop
dec
mov
sbb
push
adc
add
inc
and
lods
outsb
sbb
inc
repnz
popl
inc
jl
or
lods
repz
nop
in
mov
movsl
or
pop
aas
js
lret
jmp
push
and
mov
xchg
test
les
adc
xchg
jp
jle
rorb
in
dec
outsl
fisttpll
fxam
cwtl
cwtl
or
inc
mov
adc
dec
lock
mov
ja
hlt
jl
enter
cmpsl
lret
mov
int3
jo
cld
lds
aam
add
add
pop
icebp
lds
adc
ret
fsubl
repnz
sti
in
xor
cmc
push
fiadds
push
test
cmpsl
lock
ds
pop
push
sbb
jb
xor
push
rcrb
ljmp
outsb
les
xchg
push
ljmp
mov
leave
iret
dec
sahf
aas
push
lret
out
cmp
add
inc
icebp
mov
mov
lods
fsubrs
sbb
jae
fsubl
push
lahf
sbb
mov
fsub
filds
and
or
jmp
fmull
xor
jge
scas
mov
aad
sub
loope
and
ljmp
enter
mov
in
jg
push
imul
sti
mov
mov
sbb
jp
imulb
cmpsl
repz
pop
fdivr
test
loop
dec
cmp
pop
push
loopne
or
mov
sbb
xor
aam
or
rolb
mov
lds
and
insb
pop
push
add
mov
rcll
dec
aam
sub
es
jae
pop
cmc
or
test
out
xor
mov
add
scas
sub
int
inc
popf
mov
roll
std
fimuls
test
mov
push
jno
add
fstl
xchg
in
adc
jae
sub
es
pop
nop
mov
hlt
sub
ficoms
fstl
clc
pop
cmc
add
cmc
mov
in
and
repz
outsl
pop
xorl
mov
dec
fnsetpm(287
ret
insb
pop
push
insb
jmp
test
into
mov
cmp
mov
jb
ret
adc
das
cmp
dec
lahf
lds
dec
inc
cwtl
mov
jo
loope
scas
xchg
mov
inc
enter
aaa
lods
sbb
and
sub
dec
add
mov
and
adc
ffree
popa
sti
jb
cmp
aad
pop
xchg
test
jge
jnp
das
arpl
mov
dec
xor
in
xor
stos
xchg
xchg
push
or
push
aas
mov
sahf
arpl
jge
movsb
std
xchg
inc
hlt
xor
aam
cmp
out
jnp
ja
push
pusha
and
inc
mov
pusha
divb
xchg
scas
push
test
mov
push
sbb
stos
xor
cli
and
orw
pop
push
mov
and
or
mov
roll
adc
jg
aas
mov
int
push
aad
pusha
adc
addr16
and
jnp
std
mov
sub
cmp
pusha
into
cli
iret
mov
sti
push
mov
stos
dec
push
arpl
lock
sbb
into
fnop
popf
lods
pop
clc
and
dec
addb
gs
pop
stc
xchg
sahf
add
and
lret
ficoml
mov
cmpsb
jns
bound
or
dec
outsl
sbb
dec
je
loopne
mov
dec
ljmp
push
mov
cmp
test
dec
loope
ret
out
pusha
aaa
hlt
fisttps
cmp
jae
popa
xor
movsl
loop
icebp
aaa
adc
xchg
pop
mov
xor
popa
push
jno
push
xor
popa
hlt
or
cmpsl
cmpsl
nop
xchg
jb
rclb
and
pushf
mov
xor
test
pop
mul
jge
mov
in
outsb
mov
xchg
xchg
cmpsl
xchg
jbe
mov
and
inc
ja
cs
xor
cld
ljmp
negb
fs
decl
pop
cltd
adc
mov
mov
lcall
mov
lahf
inc
push
mov
popa
je
or
out
pop
and
daa
xchg
inc
add
jb
mulb
push
movsbl
add
aaa
mov
mov
sbb
push
cmpl
jne
stc
adc
mov
adc
data16
adc
lds
aaa
arpl
lods
xchg
pop
mov
or
inc
mov
cmp
bnd
movsb
cmpsb
loop
enter
adc
pmuludq
jg
cltd
xchg
rcrl
dec
cltd
fwait
sbb
cli
xor
out
std
int3
pop
xlat
bound
in
pop
mov
mov
add
insb
cwtl
add
arpl
cmp
hlt
bound
cmp
mov
push
pop
stos
mov
ja
mov
je
push
hlt
nop
call
cld
fldt
int3
inc
fldcw
and
int3
xchg
pop
mov
cs
pop
test
jnp
cmp
push
xlat
aas
and
push
and
sub
cmc
jno
sbb
mov
fsubrl
xor
lds
or
cs
addl
jae
inc
cwtl
sub
shll
mov
lds
jge
outsb
movsl
daa
sub
stos
daa
pop
xchg
or
jns
xor
sub
pop
lcall
mov
xchg
sub
into
mov
xor
sub
cld
js
clc
cld
inc
cwtl
jg
lea
gs
lahf
add
xor
shrb
push
rcrl
nop
fwait
add
push
fcompl
xchg
mov
stc
andb
jp
cmc
lret
inc
data16
ret
icebp
in
cltd
jne
add
loope
cmp
pop
mov
iret
sub
int3
dec
cmp
mov
leave
push
dec
in
sub
ja
shll
loop
leave
sti
jo
adc
adc
imul
js
sub
sahf
add
cmp
popf
or
mov
in
hlt
xor
std
inc
dec
jne
pop
push
daa
insl
adc
add
loope
cwtl
mov
mov
cmp
or
adc
leave
fwait
pop
jb
add
mov
xchg
adc
stos
adc
es
nop
mov
hlt
pop
out
lret
inc
mov
add
mov
out
in
mov
icebp
cmp
imul
pop
inc
or
hlt
stos
sahf
enter
push
lahf
cltd
dec
shrb
dec
in
xchg
into
in
adc
xorl
into
pop
mov
popa
lods
inc
pop
adc
leave
into
mov
xor
movsb
jmp
xor
dec
cld
sub
mov
shll
inc
pop
inc
daa
inc
pop
aam
and
pop
push
cli
sarl
push
rclb
push
xor
pop
lods
xchg
test
xor
imul
jne
sub
mov
xchg
out
push
shrd
data16
fistl
adc
lret
cmpsl
pusha
mov
sbb
push
jb
mov
and
pop
push
insl
leave
test
jmp
and
ret
dec
and
add
mov
lcall
or
fstpl
in
movsl
xchg
cmpsb
outsb
out
mov
test
mov
gs
pushf
loop
add
xchg
or
inc
push
or
ss
cmp
xchg
pop
add
sub
loope
sub
xchg
xchg
jne
mov
imul
std
repz
push
inc
mov
adc
jne
xchg
push
repnz
out
stos
mov
mov
mov
pop
rcrb
or
push
push
ljmp
test
cmp
out
mov
cwtl
sub
jbe
xchg
cmc
cmp
into
xchg
push
jbe
inc
or
xor
inc
mov
rcl
sub
jno
das
popf
sub
push
jae
sbb
sub
push
leave
xor
mov
repnz
cmp
negl
cwtl
mov
popf
dec
inc
repz
or
in
fsubl
pusha
adc
fildll
xorl
fists
fcomps
clc
sub
fs
jmp
inc
adc
jp
dec
es
notb
xor
jbe
sub
jl
cltd
mov
or
and
inc
push
pop
or
or
lret
inc
sahf
negl
int3
loope
adc
fadds
or
mov
lcall
xchg
dec
push
push
enter
test
mov
or
test
repz
mov
or
pop
cmp
jns
mov
out
ret
add
outsl
cmp
ss
mov
inc
pop
mov
sbb
jmp
xchg
cld
out
push
cmp
lea
mov
push
ret
jbe
mov
cmove
dec
mov
sbb
or
mov
push
ljmp
sbb
xor
mov
ja
and
sbb
xorl
popf
stos
dec
imul
inc
xchg
fcoml
outsb
push
push
inc
push
mov
std
jmp
enter
pop
cmpsb
popf
or
jae
jae
pushf
test
cmp
or
inc
push
mov
and
add
iret
fdiv
outsl
pop
jns
ja
fs
out
in
filds
lcall
mov
les
stos
fldl
mov
cli
pop
imul
repnz
mov
or
stos
and
xor
loopne
das
outsb
inc
gs
dec
es
mulb
push
popa
aam
int
mov
cmp
scas
inc
pushf
xor
push
ds
xor
mov
inc
scas
add
jb
jnp
loopne
pop
out
inc
jnp
mov
cmp
fs
repnz
ja
inc
out
mov
mov
pop
mov
cli
outsl
xchg
scas
and
push
shll
jo
in
stc
or
fdivrs
mov
pusha
pop
xor
push
and
add
out
add
sbb
mov
stc
mov
push
in
or
jnp
sbb
out
sbb
lret
cmp
ret
xchg
cmp
adc
sbb
push
lahf
test
out
mov
lcall
jmp
and
mov
movsl
or
sbb
cmp
push
mov
inc
scas
inc
inc
mov
and
push
call
jb
sub
push
xor
and
jle
push
pop
negl
or
dec
ja
icebp
lds
pop
jge
adc
aaa
mov
cmpsl
lcall
adc
add
and
pop
mov
push
je
sbb
pusha
sub
clc
gs
xchg
lea
mov
lret
test
mov
mov
dec
cmpsl
popf
xchg
movsb
sub
mov
or
inc
out
jo
xchg
leave
addr16
mov
xchg
jmp
xchg
pop
pop
push
dec
add
sbb
js
dec
lea
int
mov
shrl
mov
jmp
outsl
push
enter
out
push
out
push
insl
pop
add
jp
je
pusha
jno
stos
in
mov
movl
insb
mov
inc
out
dec
pop
sahf
add
jo
cltd
push
pusha
jbe
mov
pop
push
rcrl
cmp
or
loope
add
adc
mov
adc
jb
inc
enter
add
sti
ror
loop
mov
test
xor
jg
or
mov
cs
sbb
stos
cmpsb
sub
push
mov
pop
xchg
ret
jge
pop
addr16
xlat
aas
cmp
decl
xor
pop
and
fcomps
adc
int
scas
js
ja
lock
clc
dec
cwtl
add
jmp
sub
mov
sub
lahf
xor
gs
loop
sub
jmp
mov
xchg
jmp
addb
hlt
lret
les
ret
in
fidivs
enter
sub
fbld
or
sbb
fnclex
xor
mov
roll
lea
ja
xor
inc
aad
adc
jbe
std
movsl
and
sti
pop
inc
loop
fsubrp
mov
fldt
rcrb
in
mov
sub
ret
in
and
xchg
push
es
push
sti
xchg
xor
int
sub
or
mov
xor
jne
scas
out
shll
pop
mov
cwtl
daa
lcall
xchg
and
inc
lds
imul
les
cmp
jbe
mov
nop
mov
sbb
pop
push
sub
pop
mov
cmp
jge
push
mov
fwait
cmp
jg
sub
lret
notl
scas
gs
xlat
lods
push
stos
pop
mov
loop
sub
mov
mov
push
cwtl
shlb
out
dec
cmc
aad
pop
lret
push
jl
push
push
cmc
lahf
out
jae
adc
in
mov
mov
pop
sbb
mov
xchg
pop
push
adc
xorb
xor
inc
xor
ret
xchg
xor
mov
xchg
xchg
xor
hlt
arpl
pop
sub
sbb
test
inc
xor
loopne
fwait
stos
fsts
rcr
addr16
sub
sbb
lcall
push
mov
jle
incl
data16
sub
cmp
sub
in
popa
repz
out
or
imul
imul
shl
cmp
bound
jg
sti
pop
inc
addr16
aaa
add
imul
outsb
adc
cmp
sub
fimull
addr16
out
jecxz
pop
add
push
mov
jl
in
jge
xchg
xorl
cmp
icebp
loope
adc
iret
push
and
xchg
enter
lds
push
rclb
push
mov
jmp
add
xchg
push
gs
xor
std
mov
rorl
xchg
dec
ds
xchg
andb
and
xchg
mov
sub
pop
subl
js
pushf
out
aam
add
adc
das
lret
or
testl
inc
in
addb
mov
rolb
loope
cmovo
mov
jecxz
jmp
mov
cmp
mov
and
xchg
fs
sti
inc
cmp
in
subl
mov
xchg
mov
push
add
add
shl
xor
fimull
dec
xlat
pop
mov
add
xorl
inc
jle
ret
test
push
mov
lock
jne
sahf
sub
mov
fcoml
out
fs
sbb
jp
shld
lahf
inc
insb
int
popa
mov
push
xchg
dec
cli
pusha
push
xor
jle
imul
xorl
lods
mov
fdivr
lods
xor
imul
fcoms
xor
lods
push
test
xor
jmp
push
sub
mov
push
push
and
inc
dec
int3
das
cs
fistpl
data16
pop
pop
and
inc
jne
pop
in
dec
in
jb
inc
pop
sahf
fidivs
in
mov
push
push
sbb
mov
outsl
lahf
push
cmpsb
inc
fdiv
push
popa
xor
dec
pop
sbb
xchg
sbb
xchg
ret
and
rorl
ret
xor
rcrb
jge
loop
sbb
adc
lea
rcrb
adc
data16
pop
imul
mov
inc
sbb
cmc
xchg
inc
xchg
sbb
adc
pop
arpl
je
iret
add
jp
push
cmpsb
inc
dec
into
xchg
sbb
lret
aad
inc
dec
cli
test
mov
mov
mov
sbb
or
adc
aaa
sub
mov
pop
and
lret
std
insb
sub
mov
jae
lods
out
sbb
mov
pop
rorb
popa
imul
pop
call
jns
orl
test
test
ret
into
je
and
jo
pushl
in
dec
adc
pop
in
mov
push
ret
in
out
jae
xchg
cmp
push
add
int3
iret
mov
cli
adc
mov
add
xlat
mov
or
cli
test
testl
scas
test
int
inc
push
in
pop
pop
fldt
adc
dec
lods
ds
or
in
xor
mov
cmp
test
popa
jl
sarl
ret
rorl
mov
mov
out
pop
call
push
pop
adc
and
mov
dec
add
in
inc
xchg
shlb
jge
je
into
inc
and
adc
addr16
jle
clc
cmp
scas
fmuls
lahf
jo
cmp
arpl
or
clc
or
hlt
xchg
mov
mov
insl
in
add
outsb
xchg
mov
sub
lret
jno
jo
mov
movsl
lods
out
jge
loope
add
sti
mov
cmp
iret
scas
call
mov
xor
push
mov
inc
push
mov
jmp
mov
pop
xchg
mov
jecxz
sbb
inc
mov
jge
mov
popa
sub
inc
mov
jl
inc
jns
stc
or
outsl
xor
sub
jnp
int3
mov
cs
aas
sti
or
inc
push
pop
pop
test
inc
push
add
mov
out
andb
jge
mov
dec
mov
xor
aad
jmp
sbb
enter
into
sti
mov
insb
jnp
xor
push
lea
scas
movsb
shrl
adc
cmp
add
ja
scas
in
movups
ss
ret
pop
mov
push
inc
popf
cmp
mov
jne
in
imul
jl
adc
int3
fsubrl
add
mov
sahf
xchg
or
in
sub
mov
aam
xchg
jae
test
pop
mov
jns
mov
cmc
dec
es
mov
sub
cmp
cmp
sbbl
xor
stos
scas
dec
add
mov
std
inc
dec
mov
mov
insb
jb
cmp
adc
xor
adc
fld
cmp
pop
inc
jp
js
in
pop
aam
xlat
and
rcll
adc
hlt
sbb
test
dec
pop
inc
and
jge
adc
inc
sbb
dec
ffreep
fs
mov
rcll
iret
fs
cli
pop
mov
mov
int3
add
xchg
xchg
popa
shlb
jnp
adc
or
push
data16
lcall
lea
xor
aas
add
pop
arpl
add
mov
xor
outsl
std
fdivrs
push
push
stc
mov
lahf
mov
mov
mov
rorb
lods
sub
push
mov
sbb
inc
or
xor
cmp
xor
push
pop
popf
cmp
xor
popf
mov
xchg
imul
out
xlat
leave
mov
shr
xor
outsl
movsl
mov
push
push
in
mov
xor
lock
fcomip
push
pop
jne
pop
jg
popf
test
cmp
sbb
imul
or
sub
pop
bswap
jg
jnp
inc
in
cmp
pushf
mov
shr
aam
shl
xlat
cmp
add
sub
fwait
mul
bound
push
lret
repz
adc
sub
xlat
mov
in
ret
ret
outsl
add
sub
loope
mov
push
repz
xor
hlt
cmp
enter
in
repnz
arpl
cmpsl
outsb
dec
sbb
aaa
sbb
das
push
clc
mov
push
ret
mov
mov
or
mov
scas
loop
ja
xchg
push
cltd
aaa
xchg
adc
aad
pushf
test
mov
in
mov
adc
dec
lret
xchg
icebp
mov
mov
adc
cltd
inc
jmp
jbe
jmp
push
je
lods
inc
cli
xor
loope
subl
xor
ljmp
mov
cld
or
lahf
xor
jns
mov
sbb
in
loope
push
sahf
xor
mov
jl
incl
cvttps2pi
sub
mov
and
dec
bt
stc
aaa
in
push
popa
movsl
sbb
fwait
sbb
shll
frstor
push
das
jp
mov
cmpsb
or
pop
jno
testl
add
sub
into
inc
jmp
inc
xchg
sahf
push
insb
push
mov
dec
das
pusha
sub
jle
shl
lcall
pusha
sbb
sub
rcrl
mov
fs
gs
pop
sbb
loop
imulb
push
jb
pop
jle
sti
push
inc
out
fwait
std
fwait
or
push
fmull
arpl
inc
dec
imul
das
cwtl
gs
jmp
xor
sahf
xor
xor
and
dec
fistpl
xchg
cld
fs
jg
daa
gs
mov
scas
call
jecxz
mov
in
int3
das
outsl
es
lret
lcall
mov
aad
mov
dec
stos
arpl
or
add
dec
test
out
cwtl
fs
ljmp
push
loop
mov
dec
cmpsb
sub
dec
test
push
xchg
es
xor
cmp
cmp
pusha
lahf
adc
inc
js
ss
jecxz
sbb
adcb
out
sub
inc
sbb
aaa
aad
stos
pop
add
cmc
pop
loopne
sar
jmp
xor
jle
je
dec
insb
or
cmpsb
push
mov
or
sub
ss
loope
lret
ljmp
adc
fnstenv
or
cmp
repz
mov
outsl
mov
popa
cmp
mov
jne
nop
jle
push
sub
mov
cmp
bound
add
pop
aad
push
mov
outsl
mov
dec
movb
sub
adc
sbb
lds
push
pop
mov
mov
fbld
xor
sahf
cwtl
js
mov
push
sbb
mov
or
jno
jmp
das
xor
sub
loopne
fwait
iret
push
daa
cmp
mov
lods
inc
dec
or
ret
sub
xchg
pop
lock
mov
data16
ret
pop
push
or
or
dec
jecxz
push
lea
stc
xchg
bound
iret
les
adc
jae
cmpsb
or
xor
dec
aad
mov
jp
inc
or
out
and
es
jnp
push
ret
push
mov
aas
cltd
movsb
push
popw
test
sbb
repz
std
jmp
ja
lcall
push
sbbb
int3
mov
mov
mov
inc
mov
push
out
or
ljmpw
sub
rcr
clc
inc
dec
xor
insb
dec
mov
cmc
dec
mov
mov
loopne
scas
mov
addr16
mov
jle
xchg
lret
cmpsl
in
icebp
shlb
adc
sub
ds
leave
jp
fs
pusha
jecxz
dec
pop
inc
ss
jno
mov
adc
xchg
mov
cmp
lods
jnp
sub
pusha
pop
testl
outsl
xor
out
adc
mov
hlt
mov
add
mov
stos
mov
and
cmc
sbb
pop
ljmp
jno
add
call
shrl
fisubl
lods
das
insb
stos
pop
dec
cmp
push
xor
leave
inc
mov
aam
xchg
sbb
mov
cmp
mov
rol
stos
mov
push
stos
cltd
into
clc
testl
mov
aaa
ror
pop
adc
out
out
jo
adc
sbb
imul
mov
cmp
ret
gs
mov
aam
mov
loope
sbbb
inc
sbb
cmp
mov
aaa
shll
ret
test
cmpsb
pop
mov
dec
test
jp
lock
xor
push
outsl
lods
xchg
jecxz
cmpsb
fadd
jmp
sub
mov
imul
jmp
aaa
imul
ret
mov
pop
lret
xor
push
clc
push
jnp
flds
mov
add
aaa
int
je
xor
dec
movsl
jae
and
push
movsb
in
pop
out
xchg
out
aas
pop
pusha
xor
pusha
sahf
retw
cmp
cmpsl
test
loope
test
subb
fwait
cmpsl
sbb
and
mov
and
add
add
sti
mov
push
sub
out
adcl
cli
nop
out
jo
adc
pop
push
bound
shrb
mov
leave
stos
mov
inc
sbb
mov
or
mov
movl
fstpl
mov
sub
sbb
ret
repz
add
test
fwait
enter
cli
cmp
fmuls
pop
and
pop
scas
icebp
mov
loope
ret
add
out
std
xor
cwtl
test
mov
add
ds
loopne
frstor
fsts
mov
aad
jge
push
pop
stos
inc
pop
inc
fs
addb
xlat
inc
or
or
pop
pop
jns
cmp
out
movsb
test
xchg
lcall
mov
sbb
pop
insl
imul
shll
cmp
iret
and
pop
out
repnz
jae
cli
and
cli
inc
dec
mov
rorl
xor
inc
pusha
add
jge
movsl
ffreep
rol
jp
sbb
andl
inc
cli
icebp
lock
std
out
ja
data16
aaa
cli
movsb
in
xor
popf
sbbb
mov
dec
dec
stos
mov
pop
pushf
jbe
scas
cs
pop
aad
cmp
aas
nop
cmp
jnp
mov
jb
insl
xchg
dec
pop
sub
enter
das
iret
add
test
inc
mov
and
xchg
xchg
mov
pop
es
lret
inc
ja
std
pop
lock
inc
scas
scas
js
inc
bound
adc
adc
mov
fistps
mov
push
leave
push
loop
nop
test
sahf
test
inc
shrl
shrb
jbe
jae
push
imul
call
int
push
stos
negb
pop
out
inc
adc
sbb
jae
sub
out
xlat
mov
fisubl
movsl
movsl
scas
sbb
push
xchg
in
movsl
push
in
mov
jae
adc
push
or
rcll
je
loope
dec
fnstcw
into
testl
mov
mov
movsb
dec
mov
lret
call
fcomps
mov
xor
push
lret
in
mov
push
je
clc
test
inc
sub
inc
fcomip
rorb
ja
cmpsb
sub
sbb
push
sub
pop
xchg
popf
sbb
int
push
xchg
ret
shl
or
int
mov
movsl
cs
xlat
mov
inc
mov
xchg
outsl
adcb
je
fwait
xor
mov
ss
push
xchg
dec
mov
and
mov
cmp
jl
rcrb
imul
and
mov
repz
sti
jbe
pop
dec
xlat
mov
cltd
ficomps
rol
mov
outsl
add
xchg
and
nop
shr
sub
mov
sarl
xlat
and
mov
sbb
xor
out
jge
cmp
cmp
scas
pop
and
mov
pop
ret
cmpsb
pushf
rcl
mov
stos
mov
bound
pop
jb
pop
gs
jl
inc
mov
xchg
das
cmp
xor
data16
and
test
inc
mov
push
jae
into
inc
pop
divl
into
leave
adc
push
or
dec
inc
jbe
sub
jp
adc
pop
xor
clc
inc
nop
pop
test
pop
xor
dec
push
jle
add
outsl
xor
insl
in
sbbb
jae
test
pushf
jle
xor
mov
cmc
orl
cmp
mov
jbe
ss
pusha
cmpsl
stc
shr
and
outsb
mov
mov
inc
ja
adc
ljmp
leave
sbb
add
sbb
stc
jge
add
loopne
leave
pop
xchg
sbb
cmpsl
mov
sbb
push
imul
insb
dec
adc
sbb
push
inc
aaa
add
xchg
push
in
mov
in
int3
insb
or
push
mov
jo
leave
xchg
pop
shr
jb
ret
rcrb
arpl
push
adc
stc
cld
repnz
repnz
cmp
fdivl
stos
pop
xor
jge
pop
sub
insl
jns
sti
xchg
jl
sub
or
shlb
add
pop
dec
pop
sub
mov
push
test
push
pop
pushf
adc
lcall
xor
dec
fistpll
push
jg
sti
leave
call
sub
orb
test
dec
pop
movsl
rorb
pop
shll
inc
lret
mov
lcall
mul
and
outsb
adc
mov
lods
push
lret
sbbb
inc
push
cmpsl
or
pop
add
out
scas
fwait
arpl
roll
jge
cwtl
pop
cmp
les
cld
push
inc
or
pop
mov
xchg
adc
mov
hlt
pop
and
dec
orl
in
inc
jmp
sbb
jmp
adc
shrb
pop
cmp
lcall
mov
test
and
ljmp
mov
scas
fldenv
push
lods
xor
mov
jns
int
mov
fistpll
jbe
cmp
out
ret
rcll
dec
popf
or
jb
push
mov
fisttpll
in
jb
das
inc
das
pushf
add
xor
lret
inc
leave
sbb
mov
hlt
loopne
dec
leave
out
inc
xlat
lret
pop
lock
aaa
repz
or
sbb
pushf
fwait
orb
add
xchg
cmp
pop
shr
pop
xchg
ja
adc
push
mov
loope
fs
mov
loope
mov
cmp
loope
push
xor
xchg
sahf
jne
add
push
clc
mov
and
int
ficoms
sub
sub
and
mov
push
insl
xor
jnp
sub
cld
xchg
cwtl
icebp
mov
xchg
xchg
lcall
jecxz
cwtl
insb
cltd
pusha
sar
clc
ss
jnp
or
lcall
sbb
jae,pn
add
jecxz
in
and
je
es
xchg
push
jl
out
xchg
aas
add
mov
fidivl
lahf
pop
push
jge
and
add
ret
pusha
stos
adcl
movsb
fldz
ss
push
cmp
test
int
into
cwtl
cld
sub
shlb
lahf
xor
jnp
mov
stos
int3
mov
jbe
pop
mov
sti
ficomps
loop
and
ficomps
scas
into
xor
mov
in
mov
pushf
sub
divb
dec
inc
dec
jbe
arpl
lock
js
popf
popa
xor
jg
inc
iret
mov
aad
sbbl
mull
loopne
sahf
int3
mov
or
jbe
out
xchg
std
aam
pop
cmpb
sbb
leave
fdivs
je
in
aaa
mov
jle
adc
ljmp
repnz
jno
xchg
inc
mov
shll
test
mov
lds
hlt
cmc
popf
loopne
std
or
fnstenv
inc
in
mov
test
mov
inc
inc
push
cmc
orb
or
sbb
stos
lahf
mov
sub
push
inc
add
out
es
lods
subb
loopne
and
mov
push
pop
cld
ds
insl
push
std
ljmp
rolw
jb
scas
push
and
mov
iret
hlt
jbe
daa
adc
push
push
jl
push
mov
push
xor
jle
test
lds
jg
loope
adc
mov
movsb
adc
dec
pop
mov
cmp
out
testl
pop
mov
inc
mov
and
sbb
lock
dec
push
into
inc
push
cmc
push
mov
jo
pop
sub
clc
aad
pop
push
repnz
adc
jno
jno
aas
xor
sbb
stos
mov
arpl
push
xchg
mov
icebp
data16
mov
loop
data16
mov
out
mov
bound
scas
pushf
int
test
pop
add
pop
stc
jae
fstps
stos
aaa
jns
or
mov
das
or
mov
dec
pop
popa
cmpsl
je
xchg
cmp
imul
mov
sbb
xchg
cmc
out
fs
mov
dec
dec
dec
sbb
inc
lahf
and
adc
call
or
hlt
push
cs
in
ffreep
pop
cmp
hlt
adc
daa
sbb
cmp
ret
and
jnp
xchg
nop
add
lret
pop
inc
add
or
das
and
jb
ds
fisttps
imul
dec
jo
xorl
pop
es
push
add
jecxz
fidivs
rep
out
arpl
daa
aad
jnp
test
xchg
xor
xchg
int3
test
pop
mov
fucomi
pop
sarb
in
test
inc
xchg
sbb
imull
outsl
and
mov
mov
add
pop
jnp
insl
push
sahf
sbb
jbe
push
xchg
mov
and
jge
mov
push
insl
and
xor
sub
arpl
aas
push
pop
popf
dec
push
aaa
ret
push
and
dec
cmc
mov
mov
push
pusha
fwait
xchg
sub
or
cltd
shrb
out
cmp
and
push
rcrl
sarb
mov
aaa
pop
pop
sbb
test
or
lods
sub
push
inc
bnd
repz
in
jmp
dec
mov
shll
jl
cmpsl
adc
inc
out
jnp
cmc
in
add
xchg
aad
lock
daa
adc
or
mov
gs
add
xchg
mov
adc
pop
cld
ret
mov
icebp
cld
stos
pusha
mov
imul
popf
jne
push
lret
and
inc
test
lea
movsb
or
pusha
test
xchg
sarl
xchg
sbb
and
adc
enter
jmp
test
push
sbb
jo
jmp
pop
mov
xlat
les
sub
notl
xchg
pop
cmpsl
scas
dec
lods
sub
adc
fcmovnbe
cli
cmp
cmp
js
sub
and
in
test
sub
pop
jp
lret
lret
js
scas
pop
cmc
mov
mov
pop
adc
xchg
fcomip
loop
xchg
rolb
faddl
adc
sub
orb
xchg
xor
or
flds
mov
dec
mov
adc
lods
jne
mov
popa
sbb
stc
andb
dec
fsts
lcall
mov
cwtl
and
pop
mov
loop
iret
sub
cmp
in
and
es
fstl
popf
inc
arpl
cmp
sub
dec
cmc
repnz
add
ror
push
cwtl
jmp
push
add
pop
mov
fcompl
push
fcoms
imul
xchg
jecxz
jl
cld
mov
cmp
jg
loopne
or
out
pop
and
cmc
sub
insb
mov
sbb
xorl
pop
bound
lcall
rcrb
addr16
iret
dec
and
daa
das
loope
lret
hlt
js
std
add
aas
testb
dec
or
pop
xchg
cmp
lods
sub
dec
mov
test
sub
jmp
loope
popa
stc
mov
inc
dec
pop
clc
sub
les
in
incb
pop
adc
xor
pop
push
push
loopne
lea
arpl
jp
push
sub
xor
add
cmpl
mov
int3
push
bound
xchg
jl
roll
pusha
leave
jb
mov
add
jae
push
in
push
cli
and
cmp
sub
adc
lods
loop
sti
hlt
xchg
adc
jnp
pop
mov
sti
or
scas
push
sbb
insl
scas
lahf
mov
push
push
inc
fisubl
inc
inc
push
sbb
and
stos
fsts
pop
push
ret
adc
and
push
or
sbb
xor
lea
push
mov
sbb
add
sti
and
testl
and
gs
jbe
mull
imulb
int3
jo
es
movsl
cltd
sbb
es
mov
fadd
mov
sub
or
push
pop
adc
pushf
adc
inc
jecxz
xlat
in
cmpsl
in
pop
loopne
dec
dec
jle
pop
dec
cltd
xchg
imul
sub
adc
or
inc
or
repz
insl
loopne
ds
nop
dec
repnz
xchg
fnstcw
lods
mov
cmpsl
lcall
inc
inc
add
xchg
movsl
bnd
push
fcom
push
shlb
test
fucomi
rclb
das
ret
sahf
sarb
push
mov
inc
push
mov
bound
in
xlat
adc
inc
lds
dec
adc
xchg
fists
xchg
mov
dec
mov
sbb
pop
cs
jnp
push
pop
mov
push
not
jb
push
push
out
cmp
xchg
xchg
out
pop
inc
mov
xchg
mov
in
push
leave
cs
in
jo
ret
ss
std
jne
pop
fwait
cmp
sub
adc
mov
pop
int3
out
shrl
fistpll
add
ja
rol
adc
add
or
cmp
arpl
inc
loop
add
xorb
or
ret
jle
addb
lret
or
lds
fdivrs
xchg
inc
jbe
mov
gs
jle
das
sbb
test
push
adc
scas
out
inc
or
sbb
xor
adc
add
push
push
jno
dec
cmp
in
jl
sub
negb
in
mov
add
out
mov
pop
sarb
in
mov
push
fdiv
sbb
jle
push
mov
jnp
lcall
mov
rorl
cmpsb
mov
in
adc
add
out
adc
insl
ja
aam
cmp
xchg
mov
mov
push
ret
lods
push
jne
push
jo
mov
jmp
sar
negb
adc
shl
adc
xor
dec
shrl
imul
xchg
pushf
sub
pushf
icebp
jb
orb
pusha
loope
testl
ds
cmpl
dec
out
out
es
insb
push
sbb
imull
dec
xchg
popa
nop
mov
aaa
dec
in
mov
stos
lahf
lea
or
jne
cmp
sub
nop
ret
or
test
inc
outsb
xchg
cmc
es
lods
outsl
out
shrb
or
sti
xor
es
mov
lock
and
pop
mov
xlat
scas
fldl
jne
fdivp
cmp
scas
dec
loop
addr16
push
cmp
lock
jb
daa
arpl
imul
sbb
xchg
jg
arpl
in
mov
outsl
jecxz
jne
jbe
jo
shrb
out
mov
mov
dec
jl
mov
xlat
pop
sbb
imul
data16
into
mov
push
stos
pop
ret
jg
add
xchg
int3
or
cli
cld
enter
push
stc
mov
cltd
and
mov
jmp
mov
inc
js
add
in
mov
in
leave
pusha
mov
or
lcall
dec
daa
inc
int
sbb
dec
test
jno
pop
lcall
aam
mov
mov
push
aam
sbb
dec
push
push
sbb
mov
das
loopne
sub
outsl
jmp
mov
rcll
shl
inc
inc
jne
xorb
or
cmc
jb
pop
pushf
sbb
add
cli
es
loopne
lret
fwait
popf
cmp
and
adc
fsubs
insl
sbb
cld
fldcw
pop
jp
movnti
hlt
xchg
push
sbb
imul
mov
cld
mov
push
mov
stc
xor
nop
inc
sbb
add
pop
orl
test
cmp
imul
push
adc
nop
sub
lret
stos
nop
aam
orl
lea
fnstcw
jae
mov
xor
in
jge
sub
cwtl
in
fst
loop
add
dec
mov
imul
mov
xchg
xor
imul
sti
inc
cmp
fcomps
push
adc
mov
in
jns
dec
mov
or
mov
or
popf
xor
pop
int
fsub
aas
xchg
inc
sbb
inc
adc
aas
addb
or
scas
or
inc
cli
add
mov
inc
fwait
les
aad
std
outsb
popf
iret
mov
dec
sti
je
lcall
fs
pop
insl
into
shrl
or
add
ret
idivb
fbstp
enter
les
inc
sub
lods
cmpsb
pop
cltd
sub
xchg
jne
jl
dec
negl
push
loop
jmp
out
pusha
pushf
inc
fidivl
dec
rcrb
or
leave
popa
mov
jg
cwtl
mov
ja
addl
mov
lret
jo
xchg
daa
pop
daa
fcmovnu
lret
call
mov
test
inc
out
cmpsb
mov
and
adc
dec
test
inc
sbb
mov
movsb
sbb
inc
xor
mov
mov
pop
jecxz
cli
outsb
adc
sub
lahf
sbb
inc
out
mov
or
sub
cmpsl
imul
inc
mov
lahf
fsubr
daa
push
roll
xor
jne
jb
fisttps
fdivrl
pop
into
and
out
aam
xchg
push
jg
icebp
outsb
xchg
xor
adc
gs
gs
in
dec
xor
je
test
ss
sub
jno
arpl
jge
lods
les
or
inc
bnd
push
inc
dec
inc
inc
imul
mov
xor
es
incb
nop
fisubl
sti
fadds
adc
lahf
mov
loop
fiadds
push
or
jl
push
mov
and
fucomip
adcb
jo,pt
outsl
and
cs
ret
mov
add
pop
jne
adc
adc
adc
pop
adc
movsb
push
xchg
sub
and
fldenv
or
adc
data16
add
lret
mov
fdivrs
inc
pop
xor
pop
lea
or
lds
jle
nop
stc
cmp
sub
sub
sub
push
mov
aas
sub
sbb
xchg
pop
repnz
xor
jb
inc
addr16
imul
and
pop
cmp
mov
ror
mov
xor
dec
pop
ret
sbb
cmp
or
mov
ret
lods
jnp
and
sarb
int
pop
out
nop
pushf
mov
push
aaa
fisttpll
roll
cmp
push
js,pn
pusha
mov
xchg
loopne
mov
jmp
push
jns
xor
out
roll
ret
inc
inc
scas
sbb
or
js
out
push
mov
push
xlat
xor
lea
cmp
daa
xchg
sub
loopne
add
xor
xor
adc
push
aad
hlt
push
nop
jnp
and
add
mov
sahf
scas
mov
push
pop
shlb
popa
loop
sbb
cmp
mov
scas
fs
sbb
ljmp
inc
cmp
stc
fisttpll
cmp
std
imul
imul
add
push
nop
fwait
es
in
adc
stc
dec
test
push
push
mov
dec
jecxz
push
mov
movsl
lcall
sbb
and
cmp
test
out
mov
jg
jp
mov
daa
cmpsl
dec
xor
sti
push
out
or
ror
bound
pop
sbb
xlat
ret
pop
mov
mov
jbe
sub
xor
mov
mov
inc
loop,pn
movsl
or
mov
out
push
inc
sbb
xor
cmp
jmp
or
sub
and
lea
ret
mov
push
and
mov
lcall
xor
sahf
imul
nop
and
adc
lods
aam
sub
lds
scas
xor
mov
mov
or
cltd
nop
inc
or
inc
pop
pop
fldl
sarb
in
push
jo
mov
cld
mov
dec
out
sbb
pop
mov
int
adc
roll
adc
ss
push
call
nop
cmp
sbb
outsl
leave
iret
stos
inc
mov
sbb
rcrb
lret
push
decl
mov
cltd
push
stc
sub
testb
imul
mov
or
push
and
mov
xor
cld
add
xor
aas
cli
cmpsb
dec
test
subb
cmp
or
inc
sbb
fnstenv
ljmp
jg
pop
inc
outsl
fmuls
idivl
rorl
adc
call
cmp
shll
in
aaa
call
or
or
ds
push
mov
fcom
jecxz
jnp
dec
ret
pop
sarl
test
rolb
divb
mov
nop
cmpsl
xorb
pop
xor
xlat
subl
push
mov
push
jmp
test
add
test
mov
mov
mov
jno
ret
movsl
aam
scas
xlat
ret
add
push
dec
push
pop
scas
jb
call
xchg
es
add
test
sbb
add
or
iret
ljmp
xchg
xor
jl
js
shlb
sub
fwait
add
das
dec
sbb
xchg
ljmp
inc
aas
adc
mov
cmc
push
enter
out
loop
test
adc
sahf
jg
cs
mov
divl
pop
and
pushf
imul
aas
adc
cltd
data16
fdivl
int
gs
pop
jbe
inc
mov
cli
ss
inc
push
inc
dec
test
and
idivl
pop
pop
push
sub
sub
mov
int
popf
pop
es
imul
outsb
push
pusha
ja
jo
roll
hlt
stos
adc
jbe
and
cwtl
iret
addr16
xor
push
cmc
nop
inc
mov
stos
pop
mov
sti
hlt
dec
lods
fnstcw
or
test
repz
inc
inc
aas
aas
push
jb
stos
dec
mov
sub
int
sub
pusha
cmc
insb
xor
push
fldenv
clc
cmp
in
nop
mov
pop
pop
dec
dec
and
mov
pop
xchg
lret
mov
push
out
inc
inc
arpl
xor
xchg
mov
sahf
fistl
adc
stos
clc
test
add
mov
les
aaa
lods
inc
pop
leave
in
dec
ljmp
sub
fbld
push
xchg
int
call
cmpl
lods
mov
in
xchg
loop,pn
xchg
lahf
das
adc
cld
sub
mov
and
fsts
hlt
outsl
aad
and
sbb
mov
int3
mov
dec
xchg
sub
enter
cmp
stos
mov
or
push
push
jns
push
ss
aam
nop
dec
out
and
aad
test
in
dec
aad
aad
push
push
fimull
dec
and
xor
inc
and
and
dec
aad
insb
mov
adc
or
adc
adc
mov
fldcw
mov
xor
notl
aas
leave
mov
adc
cli
cmp
out
pop
xor
cmc
cs
adc
sub
hlt
and
popa
andl
loopne
je
pop
cwtl
sbb
ret
cmp
testb
jp
outsl
jbe
cmp
cmp
or
xchg
push
leave
loopne
popa
in
aas
inc
or
in
popa
jg
je
xor
xor
sbb
adc
aas
sahf
repz
sub
push
stc
pop
lret
enter
stc
stos
sub
sub
stc
mov
add
push
movsb
jne
loope
into
fcos
outsl
cmpsb
mov
pop
into
cli
sub
mov
xor
das
mov
add
dec
sub
push
std
jne
cltd
shlb
lods
clc
xchg
shrb
test
aas
andl
arpl
sbb
mov
imul
add
fs
mov
scas
shrl
fisubl
jp
adc
ds
stos
imul
sub
jle
lods
lock
mov
stc
dec
sarb
jne
data16
add
mov
mov
inc
cmp
mov
cmp
arpl
pop
push
and
out
insb
pop
mov
rorl
scas
jbe
mov
notl
adc
pop
sub
cmp
call
push
mov
adc
adc
push
jmp
mov
loope
daa
and
xchg
cld
jg,pt
add
inc
iret
jmp
or
and
dec
and
sub
fstps
out
inc
inc
and
fisubs
aad
fbstp
fisubs
mov
insl
pop
fidivrl
addl
jmp
jp
das
xchg
decb
mov
push
push
pushl
leave
mov
fidivs
pusha
add
hlt
pop
outsl
jecxz
es
loopne
jecxz
and
mov
pop
xchg
cmp
stos
adc
jmp
outsl
lds
push
sbb
sahf
pop
mov
ja
pop
xchg
aaa
jmp
pop
xchg
leave
pusha
cwtl
setnp
hlt
mov
cmp
and
cmpsl
aad
pop
cmp
dec
sub
pop
into
fwait
mov
pop
fsts
mov
fsubs
xchg
dec
pop
xchg
xchg
cmp
add
lods
xchg
dec
dec
std
fdivrl
sbb
sub
lods
les
mov
shl
push
in
scas
call
mov
mov
push
mov
repnz
in
mov
test
adc
jmp
lahf
xchg
in
adcb
xchg
mov
js
sahf
icebp
jmp
sub
adc
out
lret
and
repz
fldcw
pop
loopw
push
mov
aam
leave
mov
testb
in
adc
mov
mov
sbb
fmull
jne
pushf
daa
insl
sbb
or
inc
sahf
cwtl
psubusb
cmp
pop
jg
roll
xor
mov
cld
fcompl
enter
or
mov
fadd
sub
test
xchg
stos
mov
push
cmpsb
push
lock
xor
cmp
icebp
movsl
mov
into
adc
jno
sbb
mov
mov
pop
mov
mov
xchg
mov
out
mov
jo
lcall
vdivpd
pop
sahf
sahf
test
bnd
mull
xchg
jae
mov
jb
adc
std
mov
in
add
inc
sub
mov
ja
and
or
scas
aad
test
mov
cli
push
mov
add
mov
inc
call
cs
orl
mov
jne
cli
push
adc
loope
clc
add
sbb
mov
fidivrl
push
pop
fyl2x
xchg
leave
cmpsl
cli
addr16
xchg
popa
cld
ret
adc
cltd
cld
scas
push
loope
jl
roll
into
cmp
shll
pop
inc
ja
add
xor
and
int3
pop
and
xor
aaa
movsb
lahf
mov
or
sub
jl
xchg
push
mov
sub
sub
or
mov
adc
dec
nop
imul
fwait
in
aam
lret
out
mov
movsl
jns
ja
loop
cltd
mov
jl
jmp
aam
or
aaa
testl
rcll
fdivr
push
mov
xor
stos
out
pop
inc
sbb
adc
insb
push
clc
jmp
shl
mov
sahf
fwait
and
mov
dec
jmp
sarl
cs
lds
outsl
jge
leave
lds
into
or
add
aad
outsl
ss
inc
mov
mov
outsb
test
fiaddl
repz
les
mov
inc
lret
fwait
mov
mov
test
jg
leave
and
pop
push
inc
sub
cltd
ds
sbb
stos
in
jl
mov
outsl
xor
adc
sub
call
fcomps
fisubs
mov
adc
pop
ljmp
pop
push
pop
push
sti
adc
cwtl
das
pop
jns
push
test
xchg
push
fidivrl
push
lock
push
pop
push
push
les
ret
mov
imul
or
in
sbb
adc
adc
xor
aas
outsb
in
cmp
xchg
out
out
lcall
lret
add
mov
in
sahf
in
lea
js
add
test
cs
imul
lahf
aad
pop
ljmp
clc
adc
fs
and
mov
xor
das
dec
notb
pop
daa
ja
rorb
xchg
mov
inc
sub
movsl
popf
insb
scas
stc
xor
sti
push
cli
aas
cmpsl
loop
dec
sbb
jg
outsl
aaa
mov
stos
test
iret
ja
mov
lcall
jo
push
and
andb
test
xchg
pop
test
mov
push
push
mov
arpl
rep
dec
ds
in
popf
mov
scas
ret
fbld
outsl
mov
in
jg
iret
addr16
push
push
mov
dec
adc
mov
push
jo
es
mov
push
jb
lahf
push
loop
addr16
mov
and
scas
xchg
xchg
jg
or
loop
enter
xor
xlat
dec
inc
test
push
sbb
lret
in
out
xchg
xchg
leave
mov
pop
xchg
aaa
sbb
add
inc
fcmovbe
cmp
jmp
lds
and
mov
mov
sbb
flds
push
into
add
cltd
push
add
cmpsl
cld
clc
dec
mov
mov
push
stos
shl
rclb
cmp
aad
fwait
push
and
cmpl
movsb
ret
cmpsl
ret
inc
mov
pop
pop
adc
aam
and
adc
fcomip
lock
gs
ljmp
xor
in
sarb
xchg
vmwrite
das
insb
inc
jae
pop
pop
ret
iret
add
repnz
xor
ret
inc
mov
fdivrp
xchg
xchg
js
cli
insb
sub
mov
add
pop
xchg
pop
popf
sahf
fstl
fildl
addr16
arpl
mov
push
push
cmp
xchg
push
dec
push
inc
pushf
dec
lahf
fdivrl
adc
and
shrb
xchg
ljmp
mov
or
out
call
cli
js
push
mov
and
dec
addl
mov
loope
ja
in
sbb
mov
loope
mov
jl
jge
sbb
cwtl
mov
cmp
or
insl
fiaddl
lcall
sbb
add
jns
sbb
es
sub
and
sbb
jo
xorl
imul
fildl
dec
sbb
mov
sub
enter
push
pop
cmpsl
jne
cmp
std
pop
and
push
mov
push
stc
gs
xor
push
stc
scas
sbb
loop
sbb
faddl
xchg
xchg
sbb
iret
cmp
outsb
rcll
mov
and
fadds
mov
fwait
or
imul
xor
mov
inc
lret
lods
out
and
ret
push
scas
and
lods
jb
xchg
lret
xorb
imul
cmp
lods
pop
in
sbb
or
mov
shl
mov
insb
xchg
repz
loop
test
stos
and
mov
mov
xor
insb
les
dec
pop
aam
les
xchg
ret
clc
rorl
or
bound
jg
xor
mov
mov
ja
push
lds
dec
movsb
pushf
cmc
sub
ret
jno
js
mov
inc
rcrb
or
lahf
inc
cmp
dec
jb
xor
pop
mov
fbstp
out
jo
mov
test
es
fnsave
loopne
pop
xchg
sti
addb
ljmp
mov
faddl
insb
cmp
sahf
mov
cmc
mov
jo
adc
jmp
loop
xchg
jne
pop
clc
or
jl
xchg
inc
xlat
sbb
lock
aas
rol
xchg
inc
enter
sbb
cmp
test
cmpsb
pop
ret
adc
out
sub
lahf
cmp
ss
loop
dec
mov
cli
shrb
test
pop
sub
xchg
xor
cmp
xchg
cwtl
jge
insl
enter
icebp
lock
cmpl
bound
ss
jne
out
cmp
push
sbb
dec
aaa
lret
push
ds
stos
sub
mov
fsubr
icebp
xchg
mov
ficoml
xchg
mov
mov
loope
clc
cmp
adc
inc
ret
pushl
jmp
dec
test
jp
ret
rcl
push
adc
test
pop
sbbl
ja
dec
inc
pop
psubusb
das
inc
xor
jbe
sbb
test
cwtl
pop
ds
sub
cld
addr16
and
xorl
adc
js
or
cwtl
push
or
aas
adc
jl
cltd
popa
jae
dec
test
leave
pop
xchg
pop
out
dec
add
jle
xchg
add
mov
push
jns
xchg
dec
cmp
loopne
loopne
jmp
jne
enter
negb
jno
negb
movsl
or
insb
cltd
push
stos
sbb
pop
stos
lcall
test
xlat
xor
cmp
inc
push
sub
ljmp
mov
bnd
rcl
aad
ds
sarb
mov
mov
xchg
mov
int
xchg
test
or
adc
cmc
icebp
inc
into
pop
cmc
xchg
aaa
xchg
dec
repnz
leave
xor
mov
scas
sti
ret
sub
cmp
rcll
dec
inc
mov
lock
sbb
aas
shrb
xor
add
pop
movsb
jae
push
out
mov
scas
mov
xor
aad
sub
je
popf
pusha
adc
lods
push
jle
das
filds
xor
mov
aaa
mov
mov
nop
xchg
das
xchg
repnz
sahf
test
aas
jp
xor
fnstenv
adc
nop
pop
js
lret
test
inc
cmpsb
js
push
pushf
xchg
inc
push
push
xor
cmpsl
jne
xor
push
fldcw
sub
or
xor
jp
pop
int3
cmp
fadds
cmp
sahf
push
jge
xchg
adc
mov
and
std
sub
xor
psrlw
mov
and
rol
iret
xor
adc
mov
icebp
insw
imul
xchg
xor
jl
loopne
push
pop
addr16
sub
psrad
lret
in
les
outsl
add
ret
jae
imul
lods
sti
push
adc
or
push
xor
insb
ficompl
adc
jbe
mov
and
aas
mov
loopne
adc
popf
std
dec
mov
lret
cmpsl
rcll
pop
sub
add
mov
inc
jb
jbe
mov
mov
rcrl
add
test
loope
jns
test
add
filds
jb
mov
dec
lea
inc
pop
ljmp
mov
mov
mov
push
xchg
subl
ret
push
sbb
add
jo
icebp
aas
cltd
andb
data16
mov
fbstp
add
jl
push
xchg
xchg
push
xchg
mov
mov
jge
stc
pop
out
adc
push
sub
mov
xchg
in
mov
repnz
movsl
lcall
cmp
mov
dec
dec
and
jg
popa
xchg
loop
sub
mov
jns
std
mov
popa
sbb
push
adc
adc
cmp
add
and
stos
mov
mov
sti
subb
out
xchg
adc
test
mov
xchg
das
mov
mov
pop
movsl
in
outsl
cmp
adc
xor
mov
sub
add
sahf
push
aad
push
into
jmp
push
cmp
fildll
pop
jle
push
xchg
jo
xchg
adc
mov
out
fsts
hlt
in
pop
jge
or
mov
cli
xchg
mov
rorb
imul
sbb
xor
and
mov
fists
push
xor
ss
xlat
push
xor
pop
jo
xchg
and
int
push
lds
push
insb
imul
insl
jns
fdivrp
mov
xchg
adc
mov
dec
adc
xor
xor
enter
ret
iret
cli
ret
dec
pop
and
shrl
cmpsl
jmp
fld
data16
mov
add
imul
out
mov
inc
mov
in
call
cltd
pop
rolb
sub
fcom
incb
js
fstpt
jbe
sbb
in
enter
mov
push
push
fstpt
shrb
mov
out
lods
lahf
xchg
jl
push
fcoml
orl
jo
out
push
into
insb
fsubs
js
or
imul
sub
scas
pop
cmp
inc
mov
or
imul
jns
xchg
pop
xor
and
cli
dec
ficompl
mov
jge
es
adcb
lret
out
push
sbb
adc
fsub
or
lea
push
sbb
sbb
hlt
and
push
scas
push
stc
ret
clc
push
push
movsl
aas
in
repnz
mov
cmp
mov
mov
in
push
mov
fdivrl
xchg
in
scas
lret
jmp
inc
add
and
scas
test
xchg
loopne
jno
mov
sahf
adc
adc
repz
cs
daa
push
je
xor
push
rorl
in
enter
mov
push
insb
jle
into
aaa
xor
sti
jge
pusha
gs
add
push
addr16
fwait
rolb
jle
fmull
out
movsl
pusha
pop
rol
gs
iret
xor
xchg
cmp
ds
sahf
xchg
cmp
shlb
mov
push
stos
pop
popf
xchg
cwtl
addr16
aaa
into
aad
fnstsw
lds
fnsetpm(287
call
in
outsb
mov
jb
fwait
sbb
push
push
mov
cmp
push
jp
push
in
pop
dec
int
gs
ret
sbb
addb
faddl
es
in
jns
push
or
jbe
ret
mov
xor
loopne
sbb
sahf
cmc
mov
xchg
push
test
add
lahf
addr16
lods
shll
adc
xchg
inc
cmc
xchg
popf
ret
into
test
mov
push
shll
or
aas
lds
mov
mov
es
push
orb
jns
mov
mov
pop
pop
mov
mov
lock
or
push
int3
js
je
adc
fcoml
and
jb
xchg
mov
mov
add
into
or
cmp
inc
ss
xcrypt-cbc
cmpsl
push
xchg
mov
xor
jp
mov
pop
and
mov
push
xor
cld
shrl
mov
lods
fdivrl
push
adc
dec
loope
jle
pushf
or
fwait
jb
pop
pop
push
je
jbe
pop
loope
cmp
mov
xchg
imul
imul
fdivr
out
int
ret
adc
mov
jnp
or
xchg
mov
enter
movsl
dec
xchg
lds
lahf
lea
add
lret
roll
jmp
dec
add
mov
mov
iret
popf
add
sub
or
test
inc
int
shll
fistpll
or
mov
sbb
mov
andl
xor
stc
lahf
mov
dec
shll
mov
dec
repz
sbbb
ja
cmc
loop
mov
cmp
out
and
and
xchg
adc
inc
xchg
fwait
sbb
jl
dec
sbb
xchg
pop
and
jno
sbb
sbb
xchg
xlat
ret
xchg
mov
popf
test
push
les
push
pop
and
shlb
pop
fwait
push
cmp
and
inc
pop
inc
xlat
popf
nop
ljmp
mov
jno
cmp
add
and
jne
xor
and
dec
cld
out
sub
int3
int
scas
repnz
jnp
or
call
mov
scas
jnp
negl
fildll
sub
aam
xor
lret
dec
xor
xchg
xchg
gs
push
lcall
jo
add
aad
adc
mov
out
xor
sub
std
fucomp
sub
pop
mov
sub
push
push
out
jo
push
pusha
cwtl
and
scas
sbb
dec
mov
jno
lods
js
roll
push
jp
mov
push
jbe
adc
shld
inc
jmp
pushf
mov
push
int3
lds
adc
aaa
adc
pop
iret
sti
adc
cmc
dec
xor
and
push
cmpb
add
test
mov
ret
dec
pop
insb
inc
mov
nop
xlat
add
sub
negl
sub
scas
lds
test
pop
jg
int
rorb
inc
ja
jge
stos
sbb
xor
mov
decl
fcomi
cmp
xchg
jno
shll
or
sbb
inc
jge
jecxz
fistps
sahf
xchg
xchg
push
jbe
xor
lahf
ffreep
into
mov
mov
icebp
cld
jo
fsubr
aad
jnp
pop
inc
adc
je
lcall
push
or
lahf
inc
aam
mov
dec
pop
lea
pop
inc
pop
addr16
std
jl
pop
fnstsw
or
ret
pop
mov
out
sub
cli
push
push
daa
pop
push
mov
and
sub
call
test
js
cmpsl
xchg
shlb
mov
inc
andb
and
cmp
jg
pop
jne
xlat
add
test
mov
mull
test
pop
inc
out
scas
ret
aaa
cli
shlb
ds
lret
mov
lods
mov
lock
je
xchg
mov
scas
jmp
add
pop
movsb
outsl
aas
sbb
sbb
ds
or
js
dec
push
pop
xchg
lahf
icebp
pop
addr16
xchg
std
xchg
jmp
les
es
mov
cld
aad
sub
outsl
icebp
lcall
sbb
pop
jns
xor
jecxz
repnz
cmpsl
mov
cld
jp
in
dec
mov
std
or
pop
aas
mov
sub
cmpb
mov
popa
js
dec
mov
hlt
jge
adc
jbe
ja
jmp
cs
imul
sbb
or
inc
sub
fs
loope
out
test
sub
sub
inc
jno
push
aam
sbb
mov
push
scas
fs
je
pop
add
aaa
stos
push
pop
aaa
jge
sub
jb
adc
xchg
cmp
jle
loope
sub
mov
orl
repnz
inc
push
mov
jmp
rcll
xor
leave
lods
scas
sti
sbb
mov
lea
cwtl
push
cmp
sbb
xchg
and
add
and
addr16
mov
aad
in
jbe
fadds
mov
xchg
push
adc
mov
push
mov
into
jl
add
sbb
xor
push
scas
cmp
sub
or
or
mov
movsb
jge
nop
call
repnz
and
jo
loope
cmc
and
mov
rdmsr
inc
xlat
insl
pop
mov
pushf
jp
ds
lcall
xchg
out
icebp
mov
jb
cltd
mov
stc
iret
inc
sahf
enter
adc
cmpsb
push
xchg
and
rorl
ret
adc
fnsave
daa
pop
pop
push
ret
imul
loop
sahf
xor
pop
pop
sbb
xchg
aaa
mov
arpl
xor
push
rcl
popf
dec
dec
mov
arpl
aas
pop
add
adc
call
xor
stos
mov
sub
push
mov
loop
xor
sub
mov
or
adc
imul
pop
pusha
jge
inc
scas
fadds
mov
xor
inc
mov
pushf
jle
and
aaa
cmp
ror
dec
leave
in
sarl
push
pop
shlb
mov
push
sub
push
fs
ljmp
pop
es
fldt
into
orb
ret
mov
rol
imul
mov
cmpsb
adc
aad
jb
lods
cmpsl
cmpb
int3
shll
pop
mov
leave
aam
dec
cld
ret
push
enter
or
and
sbb
subl
sub
sbb
idivl
pop
mov
fdivrs
ss
jb
inc
insb
stc
outsl
iret
lret
mov
add
dec
popa
fidivl
and
sub
push
outsl
fwait
sbb
dec
sarl
xchg
into
mov
aam
ss
adc
and
sarb
adc
cli
push
popa
imul
jl
sti
adc
pop
mov
xchg
pop
pop
scas
mov
cmpsb
insl
shrl
jo
xchg
outsb
pop
cmp
add
cmp
pop
and
push
popf
lock
lods
aas
adc
test
lods
push
cltd
push
test
ja
in
scas
lods
std
es
mov
in
xchg
jl
enter
popf
dec
push
mov
adc
imul
mov
imul
movl
es
and
xchg
aas
jp
lods
adc
inc
pusha
insb
outsb
mov
mov
push
or
add
mov
jle
dec
lcall
scas
inc
dec
pop
les
ja
jp
movsl
push
jne
xor
adc
dec
sub
inc
adc
lock
jbe
pop
cmpsl
mov
mov
mov
add
mov
add
mov
fwait
xchg
inc
fwait
push
addl
xchg
jnp
pop
dec
and
sbbl
fstps
call
mov
mov
int3
outsb
vpxor
sbb
cmp
ffree
aad
into
mov
clc
roll
xor
movsl
out
jo
jns
dec
xor
jns
fisttpll
xor
repnz
data16
data16
fcmovu
mov
cmp
pusha
push
pop
aas
call
jbe
enter
faddl
lock
push
add
pop
inc
inc
jmp
insb
aam
ret
push
cmpl
sbbb
or
mov
ret
mov
and
cmc
rclb
dec
bound
or
dec
push
dec
cmp
cmpsb
push
or
rcr
mov
out
jbe
mov
ja,pn
push
hlt
mov
inc
push
pop
mov
adc
or
inc
mov
dec
sahf
add
lea
lods
mov
xor
xor
push
push
out
insb
xchg
into
cmp
push
test
mov
cmpsl
jp
inc
ficoms
sub
sbb
sbb
enter
push
insb
cmp
in
sti
pushl
popf
inc
mov
sub
cmp
cmp
mov
inc
pop
lock
leave
mov
popf
sub
or
pop
jp
pop
xlat
fs
mov
sbb
add
imul
xor
sub
xchg
jp
enter
pop
test
sbb
test
xlat
fwait
jae
leave
xchg
and
mov
push
sub
sub
loop
fcomps
xchg
lret
pop
aas
pop
jl
mov
jle
xlat
imul
mov
ret
jp
gs
int
in
mov
ss
jecxz
mov
mov
in
jl
mov
mov
cltd
loop
mov
addl
test
xor
xor
stc
test
xchg
and
push
mov
add
jo
mov
mov
ficomps
inc
push
xchg
sbb
fisttps
das
orl
pop
sbb
pop
loop
call
in
gs
dec
pop
adc
add
cmp
xlat
adc
or
cmp
xchg
cmp
imul
cltd
aad
pop
cmp
lcall
leave
fmull
sbb
push
cld
mov
leave
roll
outsb
dec
jp
gs
pop
and
stos
decb
lahf
arpl
mov
mov
xchg
mov
jae
pop
fisubrs
mov
popf
aas
push
lcall
xchg
add
or
dec
mov
adc
out
jmp
sbb
scas
push
mov
in
or
push
inc
push
mov
adc
cwtl
fcmovnu
sar
ret
lds
pop
or
das
lds
push
mov
xchg
add
pop
shrb
sahf
mov
ret
mov
mov
iret
cmp
pop
jbe
cmp
add
test
pop
pop
mov
add
pop
aas
push
enter
mov
out
xchg
xor
fdivrs
mov
ret
daa
xor
scas
xchg
add
bound
cmpsb
loopne
lahf
aad
in
pushf
add
sbb
xchg
sub
repz
sbb
mov
lods
mov
aam
push
sub
out
mov
mov
jo
insb
mov
pop
and
sub
mov
popf
mov
pop
ret
push
in
cmc
fdivp
test
xchg
dec
out
dec
sub
dec
or
mov
mov
jbe
push
adc
xchg
fdiv
sbb
mov
xchg
mov
pop
xlat
lock
movsl
ret
push
xchg
jecxz
inc
mov
sub
test
into
cli
mov
shr
mov
adc
nop
loopne
outsb
push
mov
pop
push
dec
sbb
mov
nop
pop
xor
cld
adc
sub
and
test
cmp
pop
or
xchg
cltd
lret
lods
xchg
mov
cmpsb
int
jae
addb
lret
scas
xlat
sti
inc
push
mov
pop
lret
sub
add
int3
leave
cmpsb
cmpsb
loope
mov
pop
and
push
ret
in
xor
dec
shrl
dec
jmp
into
adc
movsl
lods
data16
pop
mov
std
xchg
rcll
jo
cmp
in
xchg
lock
cltd
shrb
cmp
cmpsb
jbe
mov
dec
stos
sbb
test
icebp
scas
daa
push
sub
movsb
and
repz
mov
cwtl
cltd
inc
int3
xchg
add
clc
mov
adc
pop
repz
xlat
repnz
mov
or
mov
mov
adcl
inc
xlat
gs
movsb
jnp
or
dec
dec
lods
es
int3
inc
les
stos
pop
mov
pushf
xlat
fucom
add
xchg
das
xchg
fwait
cmp
lds
mov
pop
jae
sbbl
nop
clc
xchg
push
rcrl
add
cmp
add
mov
xorb
cltd
sub
jp
outsb
push
push
inc
cmpl
cwtl
and
cmp
push
bound
cmp
pusha
mov
test
or
jb
jp
in
mov
test
push
imul
out
sub
and
mov
cmp
mov
xor
mov
in
pop
outsb
aam
cmp
adc
loop
push
aam
lea
wrmsr
push
data16
test
test
mov
cmp
inc
fcmovu
inc
mov
les
cmp
xor
add
std
jle
loop
cmp
lcall
fadds
insl
cmp
push
mov
mov
inc
xor
call
shlb
cs
setle
clc
ljmp
or
mov
loope
sub
outsl
mov
pusha
add
adc
rcrl
dec
test
xor
push
out
sub
jl
mov
cmpsl
push
outsl
dec
orl
lods
pop
dec
lea
ds
push
adc
or
pusha
test
jecxz
mov
aam
into
sub
leave
add
hlt
out
pop
dec
mov
negb
clc
popa
in
andb
gs
data16
fdivrp
cmp
mov
pop
pushf
nop
add
sbb
aad
jge
mov
sbb
das
fbstp
pop
aaa
xchg
pop
jg
cltd
mov
sbb
rclb
jmp
sti
sahf
test
incb
nop
dec
nop
jnp
inc
pop
dec
popl
out
hlt
push
sub
outsb
cmp
xlat
jmp
iret
fwait
push
mov
inc
scas
mov
xlat
sbb
lock
push
cmpsl
and
dec
inc
mov
xor
mov
in
mov
adc
fwait
xlat
fsubl
add
jmp
push
add
ror
ret
mov
jle
loop
xchg
outsl
push
pop
sarl
jo
lret
push
cmp
icebp
loop
pop
outsl
push
mov
ljmp
mov
pop
mov
scas
leave
xchg
std
sbb
out
pusha
push
jae
stos
gs
mov
dec
fwait
and
call
jns
les
loop
aam
clc
mov
inc
sub
or
loope
incb
jo
fsubrl
or
pop
cmp
inc
adcl
pop
mov
fimuls
movsl
or
dec
inc
xlat
xor
loopne
iret
xchg
in
aaa
ss
enter
jg
int3
mov
xchg
jbe
or
in
in
into
inc
xchg
daa
iret
in
xchg
movsb
data16
cmp
ja
xchg
add
outsl
sub
loope
xchg
add
and
rorl
or
dec
add
ja
out
mov
hlt
lds
movb
pop
xchg
xchg
pop
incl
pop
stos
gs
push
dec
int
movsb
mov
mov
outsb
stc
loope
jp
jmp
stos
ret
scas
push
pop
jbe
mov
sub
ret
loop
and
lahf
mov
mov
mov
push
das
push
cs
daa
stos
or
or
fsubl
in
or
repnz
outsl
punpcklwd
int3
int3
pop
daa
das
arpl
imul
add
jbe
lret
xor
pop
adc
insb
arpl
cwtl
fwait
jne
push
sar
fwait
shll
dec
push
pop
mov
frstor
lea
insl
stc
xchg
adc
jnp
mov
mov
cmp
movsb
mov
fsubl
imull
dec
xchg
fst
add
insl
cmp
lods
xor
fadd
mov
stos
aam
dec
mov
cmp
push
popa
or
sub
xchg
aad
repz
scas
and
in
push
pop
les
bound
ds
addr16
pushf
xchg
sub
cmp
dec
cmp
jnp
xor
push
cmpsb
fstpt
std
push
testb
mov
insb
jl
or
mov
mov
je
add
mov
jge
ret
inc
mov
xchg
fcom
test
xchg
imulb
das
out
mov
lret
icebp
xlat
fstps
dec
sarb
test
pop
insl
call
popf
das
pop
add
jb
pop
sarb
push
xor
sub
lcall
add
mov
add
mov
cwtl
outsb
pop
popf
in
ror
cmpsb
pop
mov
push
or
pop
lds
pop
arpl
mov
cmp
loope
scas
lock
rclb
push
mov
cmpsb
pop
je
out
cltd
lahf
jg
push
into
sbb
jg
cmp
js
and
dec
lret
imul
test
mov
inc
jnp
mov
xor
cli
xchg
mov
bound
scas
pop
arpl
adc
mov
lcall
sub
jl
rorl
in
clc
aaa
xchg
in
jne
int3
and
pop
rorl
cli
subl
fucomip
cmp
and
ret
ss
ss
push
mov
dec
mov
pop
push
xchg
jge
int3
inc
jmp
add
fmull
enter
jl
lret
iret
scas
es
pusha
out
out
ljmp
xor
outsl
mov
imul
in
iret
je
fsubr
movlps
lds
dec
lea
cmp
cmpsl
fcom
in
xchg
mov
dec
ds
or
push
fdivrl
dec
lret
ja
stos
jmp
cwtl
add
dec
nop
inc
cld
and
test
and
js
sbb
cmp
inc
jle
sbb
cmpsl
fildll
pop
icebp
dec
inc
sbb
dec
into
xchg
pop
aas
xor
cmpsl
into
xchg
movsl
js
fcmovbe
mov
test
movsb
push
insl
pop
iret
ret
aas
or
inc
xor
subl
data16
sti
push
pushl
daa
xchg
shlb
xchg
pushf
jp
ret
mov
pop
cmp
out
mov
and
mov
mulb
fcoml
inc
add
cmp
push
inc
mov
jp
stos
xchg
lret
rcll
push
xchg
fs
fs
enter
out
inc
ja
fcompl
iret
cmp
jg
jns
add
iret
mov
pop
xlat
adcl
sub
mov
and
and
loope
push
and
mov
xor
xor
add
call
xchg
shll
cmpsb
jg
push
xchg
xor
jp
repz
rclb
mov
imul
mov
and
pop
lcall
hlt
pop
fistpl
pop
push
data16
sti
cmp
jne
add
arpl
push
scas
dec
pop
divb
ljmp
mov
xor
push
adc
xchg
loopne
pop
sahf
mov
loop
push
aaa
mov
xorb
loop
hlt
loopne
mov
mov
loope
in
cmc
xor
pushl
bound
mov
call
and
xchg
pop
jnp
sub
fsubp
lods
test
mov
dec
lds
mov
mov
lret
out
gs
pop
popa
and
mov
dec
repz
or
lock
sahf
add
jnp
mov
add
lock
sbb
adc
ds
mov
daa
enter
leave
lods
dec
out
cmp
mov
mov
ret
add
pop
fimuls
cwtl
loopne
jecxz
lcall
pop
ficoms
les
scas
add
das
pop
ljmp
or
insl
jno
sbb
in
mov
add
add
jecxz
and
xor
jbe
ds
xchg
or
and
mov
xchg
sarb
test
idiv
cltd
scas
dec
inc
call
fisubl
lret
gs
dec
or
cmp
mov
or
and
arpl
lods
aad
cmp
or
jne
adc
andb
dec
xlat
cmp
js
jnp
push
mov
cmpsl
sub
lock
packsswb
jbe
mov
pop
inc
mov
pop
sbb
sub
ljmp
sub
sub
mov
clc
in
adc
cld
insb
push
aas
clc
push
mov
jno
or
ffreep
aas
lea
lods
inc
int
popf
or
fs
rol
adc
bound
mov
dec
mov
mov
cmpsl
std
loopne
xchg
inc
xor
aas
stc
test
popl
adc
bound
daa
mov
add
fistpl
int
fldenv
push
inc
dec
mov
push
cli
xor
nop
add
mov
mov
adc
mov
push
mov
shl
and
push
shrb
or
inc
mov
loopne
lods
mov
lock
xchg
xor
mov
cwtl
fdiv
jnp
into
push
jg
and
mov
jp
and
push
xchg
shll
scas
sti
push
pop
lret
movsl
xchg
movsl
out
loop
adc
push
orl
cwtl
std
ljmp
insl
push
inc
ljmp
rorl
inc
ffreep
and
xchg
andl
mov
sbb
mov
addr16
fisubrs
cmpb
iret
push
pop
cmc
pop
fstpt
inc
pop
lods
test
pop
pop
dec
xchg
in
mov
mov
cmp
loopne
dec
cltd
lret
andb
ds
out
sub
adcb
cmp
sbb
out
bound
jae
dec
movsb
jnp
pop
jne
and
mov
mov
add
cmpsb
and
cltd
mov
cmp
hlt
jnp,pt
cld
inc
jb
adc
mov
adc
es
adc
mov
scas
pop
cltd
inc
icebp
adc
daa
mov
jp
das
fsubl
insb
sub
pop
stos
inc
out
sub
in
cmpsb
scas
movsl
add
inc
and
in
xchg
iret
jo
mov
mov
gs
pop
pop
addr16
mov
aaa
push
cmp
hlt
cmp
mov
cmp
pusha
fsts
add
loopne
xchg
icebp
sub
cmp
pop
pusha
sbb
xchg
jb
int
sub
push
mov
sbb
add
pusha
jg
outsb
dec
sbb
repz
inc
das
sbbl
cmp
or
mov
inc
cmp
fsubrl
dec
or
mov
mov
jmp
push
lret
lods
lock
sub
lods
sbb
add
mov
xchg
xor
and
lea
pusha
fs
lds
or
aad
rorb
sub
jbe
xor
pop
in
ja
mov
loope
push
in
movsb
add
push
and
push
addr16
dec
dec
or
fmuls
jb
imul
fisubrs
mov
sbb
and
mov
popa
test
cmp
or
sub
call
pop
ss
mov
jbe
outsb
popa
insl
pop
mov
inc
inc
cli
pusha
popa
cmp
mov
jecxz
adc
loope
fs
cld
shlb
pop
aad
call
outsb
inc
lahf
out
insb
xchg
sub
mov
inc
push
push
inc
sub
jp
xchg
int
xchg
iret
testl
mov
andb
and
pop
pop
jge
sbbb
jnp
push
dec
gs
mov
or
mov
dec
adc
bnd
jle
dec
movsb
sub
dec
xor
pusha
les
pop
jg
ss
mov
mov
mov
test
xchg
bound
add
pop
xchg
enter
push
xchg
sbb
push
xchg
dec
mov
and
mov
jbe
xor
push
mov
cmp
pop
xchg
cmpsl
dec
sti
pusha
aad
mov
pushf
imull
stc
jmp
stos
sbb
mov
in
insb
enter
leave
pop
mov
andb
xchg
cmp
lock
add
xchg
xor
mov
mov
and
stos
and
sbbl
fdivp
daa
sbb
cmpsl
jno
mov
in
orb
roll
and
push
test
mov
jecxz
or
sahf
and
dec
pop
adc
sub
jnp
pop
dec
insb
hlt
dec
mov
in
push
and
imul
cmp
fwait
and
inc
push
icebp
ss
add
push
adc
push
test
out
addr16
push
xor
je
sbb
andl
sub
push
cmp
jmp
sbb
jne
out
sbb
add
fcomi
xor
sub
cmpsw
stc
sbb
or
push
ret
and
cmp
xlat
pop
sub
mov
stos
scas
movsb
movsb
fwait
in
scas
jb
loopne
lcall
pop
pop
scas
xchg
dec
mov
fs
inc
adc
test
cmp
jecxz
lcall
dec
xor
out
and
int
ds
sbb
hlt
mov
add
andl
mov
mov
push
or
add
mov
dec
xchg
push
jge
mov
loop
dec
ja
pop
pop
ror
jno
jb
and
shll
mov
int3
repz
jle
rcr
push
or
lods
rcrl
stos
adc
jmp
daa
push
mov
outsb
push
aam
les
dec
add
out
enter
inc
idiv
fwait
scas
and
xor
cmpsl
mull
repnz
jecxz
lock
stc
jp
ret
mov
pop
jo
icebp
dec
stos
mov
pop
orb
push
cld
fsubrl
imul
call
addr16
clc
lock
xlat
mov
fldcw
mov
mov
test
mov
int3
xlat
out
repz
sbb
sub
sub
loopne
addl
repz
mov
and
jmp
insb
out
sub
adc
cmpsl
add
mov
cmp
fcmovbe
cmp
xchg
popf
mov
cmpsb
cmpsb
jg
fistpll
lcall
call
adc
jecxz
cmp
jecxz
jp
hlt
xchg
andb
push
pop
gs
scas
adc
ret
mov
jmp
inc
jg
and
scas
jg
cmp
pop
orl
dec
sub
add
dec
out
jmp
xor
push
xchg
push
daa
xchg
stos
fwait
cmp
mov
pop
stos
xor
or
rcrb
gs
and
loope
dec
jne
xchg
xchg
pop
inc
cmpsl
pop
push
ds
pop
inc
shl
xchg
mov
inc
pop
lret
pop
cwtl
sbb
cmp
mov
cmp
decb
leave
bound
adc
imul
pop
sub
sbb
add
mov
mov
and
call
jge
iret
lcall
scas
js
out
lahf
enter
in
pop
push
xchg
xor
addl
cmpsb
ret
add
sti
mov
out
cmp
and
or
in
jns
aas
pushf
mov
jg
xor
pop
dec
xchg
inc
pop
push
xor
xchg
dec
lcall
jp
mov
imul
subb
loope
xlat
jge
sub
mov
fidivrl
loop
add
dec
mov
dec
pop
or
data16
rcr
and
mov
inc
pop
xchg
daa
jnp
fbld
jge
push
jecxz
repz
mov
in
xor
pop
sub
fldl
sbb
jnp
mov
add
mov
sub
fisubrs
scas
push
mov
jp
push
jae
bound
repz
add
xchg
fisttps
adc
fcompl
mov
dec
inc
push
out
adc
push
cwtl
xchg
inc
in
or
jmp
daa
jo
mov
out
mov
mov
lea
mov
dec
lock
insb
inc
fmull
push
ljmp
mov
mov
aam
pop
lahf
arpl
cmp
sbb
inc
cmp
ljmp
cmp
jle
in
jne
or
mov
cmpsb
mov
inc
add
js
cmpsl
sub
push
mov
cld
mov
sar
inc
stos
lea
insl
test
dec
dec
push
xor
xchg
test
gs
addr16
ja
ret
xorl
clc
repnz
push
pushf
pop
and
jbe
mov
dec
lock
lahf
add
loopne
stos
rclb
dec
mov
xor
movsb
push
inc
pushl
adc
xchg
mov
stc
push
push
dec
movsb
inc
pop
out
xorb
insl
int
mov
pop
sbb
push
pop
and
mov
repnz
cmp
mov
inc
pop
pop
dec
es
jmp
dec
inc
inc
fwait
std
push
pop
sub
and
imul
cwtl
sahf
push
xchg
push
fs
sub
mov
out
or
cmpsl
pop
jno
xchg
dec
sti
popf
loope
adc
rcrb
shl
in
loop
out
lods
xchg
and
or
call
aam
in
xchg
xchg
push
jno
sahf
adc
mov
sub
xchg
sub
cmp
mov
in
nop
ljmp
lret
test
push
cmp
jmp
inc
nop
push
gs
sub
and
and
xor
xchg
mov
push
sahf
mov
lret
pop
pop
mov
cli
push
and
leave
pop
mov
mov
jmp
push
and
sbb
idivl
jmp
lods
pop
fstl
and
out
cmp
jae
mov
sbb
xchg
test
xchg
ss
xor
dec
push
imul
mov
xchg
sub
cli
scas
insb
out
std
cmp
loopne
jnp
movsl
sbb
push
sahf
pop
mov
es
test
rcrl
int
sub
adc
dec
add
sbb
or
adc
pop
add
mov
adc
pop
shlb
dec
jo
sub
aas
pop
dec
aad
enter
jl
shrb
jno
pushf
push
subl
xchg
dec
pop
and
fdiv
mov
ja
pusha
xchg
ror
adc
mov
bound
mov
imul
lods
inc
int3
sub
xchg
mov
mov
scas
and
pop
fisubrs
in
loope
stos
sub
aad
cmp
inc
jp
push
test
cmpsb
and
xchg
arpl
shrl
dec
stc
xorl
addr16
imul
hlt
and
ja
push
xchg
call
push
aas
stos
cmp
and
lods
sbb
pop
xchg
ljmp
mov
sahf
mov
arpl
test
xchg
repnz
mov
dec
shrl
dec
sbbl
inc
or
pop
leave
lods
dec
and
cmp
fiaddl
push
cmp
mov
leave
sub
pop
roll
mov
push
add
stos
shrl
mov
or
dec
cwtl
cmpsl
adc
and
and
leave
or
outsb
sbb
fstpt
test
sub
mov
cmp
push
and
ljmp
sahf
daa
adc
bound
out
stc
push
inc
ret
mov
xchg
or
jmp
fwait
pop
xchg
movsl
imul
adcl
cmp
inc
mov
test
bound
pop
cmpsb
sub
mov
divb
je
popa
call
sub
ds
call
push
jo
jo
jecxz
sti
int
sti
or
mov
mov
push
push
sub
xchg
xchg
into
fcoml
sbb
mov
cmp
repnz
cwtl
sti
xchg
pop
mov
jae
and
xchg
xchg
pop
scas
movsb
or
inc
dec
cwtl
daa
std
lret
mov
adc
ja
lret
xor
and
xor
mov
cli
push
and
mov
xchg
lcall
fmuls
jp
pop
sti
pop
xchg
out
sub
mov
jle
ss
repnz
sub
lret
mov
inc
scas
and
lds
les
or
out
mov
call
int3
xor
out
cmpsl
adc
mov
push
push
jb
je
scas
subb
icebp
int
mov
adc
rclb
adc
push
xchg
inc
loop
bnd
add
push
xor
ret
push
sahf
in
mov
pop
sub
mov
cmp
push
call
jl
mov
das
and
mov
jne
xorl
imul
fisttpll
lods
and
loope
fcmovnb
sti
sbbl
loop
sub
dec
mov
test
addr16
dec
mov
repz
movb
pushf
and
test
subl
das
sbb
jo
imul
push
dec
xor
lcall
xor
aaa
mov
fcomps
into
mov
jp
push
or
fcmovu
adc
adc
sub
aaa
mov
lock
mov
aas
xor
jl
in
and
mov
adc
jae
sti
jmp
out
xchg
loope
xor
shrb
inc
cwtl
cmp
inc
cmpsl
adc
repnz
and
scas
loope
pop
jno
loope
dec
xor
add
shlb
mov
ret
xor
fisubs
jg
add
or
subb
sub
cmpsb
insb
loop
mov
mov
loop
fadds
sub
cmp
and
addr16
sti
addr16
jne
lret
rorb
cmp
adc
add
mov
lods
xchg
xchg
aas
out
sbb
insl
scas
call
das
js
mov
test
xlat
fs
cs
arpl
jnp
movsb
dec
fistl
outsl
in
bound
in
jmp
pop
mov
enter
jnp
sbbl
cmp
sub
scas
cmc
in
sti
lds
pop
pop
enter
lahf
dec
or
icebp
dec
data16
xchg
inc
das
cli
cmpsl
cmp
repz
or
out
add
rorb
int
push
fs
and
neg
pusha
or
mov
add
adc
cmpsb
iret
or
lods
lods
push
pushf
shrb
xchg
pop
cmc
adc
pop
jg
sbb
insl
push
xchg
or
and
sub
std
dec
cmp
cmp
int3
sbb
subb
add
insb
ja
and
das
frstor
in
pop
subl
push
shll
add
cltd
lock
int3
sbbl
jb
mov
adc
fwait
dec
in
jmp
sbb
jbe
mov
addb
sbb
push
sbb
rorb
push
ja
mov
adc
jmp
pushf
mov
lret
aad
xchg
sbb
mov
idivb
mov
ss
push
nop
adc
inc
sub
mov
or
jge
in
nop
in
cmpl
js
imul
icebp
xor
test
shrl
scas
imul
xchg
or
idivb
adc
stos
out
sub
and
jp
sub
fdivs
xor
add
add
and
xor
push
and
icebp
popf
mov
les
imul
sub
stos
mov
lds
or
clc
pop
pop
inc
mov
pop
mov
xchg
sub
dec
or
les
xlat
xchg
in
test
inc
mov
in
loop
cmp
gs
aaa
in
daa
pop
outsb
mov
cltd
mov
ljmp
xor
add
xchg
push
adc
pushf
jl
or
stos
push
dec
test
icebp
repz
dec
iret
lahf
mov
popf
xlat
inc
and
mov
cmp
sub
xchg
jle
pop
scas
jle
icebp
adc
sbb
mov
inc
dec
cmpsb
rolb
lock
pop
mov
ss
jecxz
and
outsb
lods
or
xchg
cmp
dec
or
enter
aaa
sub
and
fiaddl
fdivrl
jge
mov
pop
into
pop
dec
test
fists
jb
orl
mov
or
mov
outsl
call
sti
shll
scas
testl
lods
pop
call
dec
movsb
or
jae
sbb
addr16
inc
cmc
jns
cmp
cmc
loope
sub
test
leave
dec
cmc
mov
sub
fs
jle
xor
in
adc
push
jge
pop
shld
or
add
enter
lret
xchg
xor
and
mov
loopne
call
outsl
jge
or
adc
mov
test
jo
je
fmull
jecxz
mov
or
ret
imul
arpl
fisttpll
mov
test
stos
mov
xchg
jg
out
je
psadbw
cmp
dec
or
div
xchg
xchg
push
xor
xchg
cmp
adcl
leave
pop
pop
jmp
subl
xor
pop
dec
je
cmpsb
inc
push
dec
lods
rorb
jmp
and
jg
stos
cmc
inc
mov
push
inc
loopne
popl
jbe
loopne
cltd
dec
hlt
loop
inc
mov
cmp
jmp
jmp
and
mov
or
jno
insb
loopne
mov
jg
test
mov
and
push
negb
xor
and
jmp
xchg
xorl
jg
fs
and
outsl
js
popa
rolb
push
inc
xlat
lds
jnp
lock
fidivrl
inc
cmp
clc
ret
imul
fcomp
aas
and
addl
and
jle
or
xor
hlt
daa
jae
lods
or
scas
idiv
dec
pop
mov
mov
jmp
xchg
xchg
insl
sar
subb
jno
push
imul
push
loope
or
pushl
sbb
and
test
mov
pop
test
sbb
icebp
shlb
test
into
push
aaa
jge
popw
iret
loopne
cmc
add
shr
sbb
jo
fisttpll
decl
clc
cwtl
or
push
insb
lds
and
xchg
fwait
dec
loopne
movsl
pop
dec
loopne
jbe
stos
sub
faddl
inc
jmp
cmp
aad
test
adc
jmp
jg
sub
cmp
jnp
add
movsl
sahf
in
std
inc
mov
shlb
movsb
ljmp
mov
push
cmp
sub
mov
fisttpl
sub
add
add
add
inc
mov
add
xor
dec
mov
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
