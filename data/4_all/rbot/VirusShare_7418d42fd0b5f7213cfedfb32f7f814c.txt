jg
out
call
in
sub
push
pop
incl
jne
push
call
std
faddl
or
xchg
mov
xor
pop
mov
add
add
add
or
les
xor
decl
add
push
dec
aaa
mov
divb
mov
lea
add
xor
in
push
mov
sete
lret
out
fcmovnb
push
xor
adc
inc
pop
push
sbb
ret
xchg
jb
add
fstpt
sbb
hlt
je
fcmovnu
pop
mov
pusha
adc
add
jbe
inc
test
test
dec
mov
outsl
jb
clc
push
push
adc
leave
call
in
mov
cld
dec
lock
leave
movsb
push
inc
in
mov
data16
push
push
std
push
jmp
cmpl
jne
das
or
out
int
or
dec
dec
add
std
xchg
outsb
dec
clc
add
jne
incl
jne
or
push
incl
lock
dec
add
call
inc
lcall
out
pop
add
enter
test
adc
cmp
hlt
pop
leave
add
push
mov
push
and
jae
or
scas
pusha
ds
mov
sti
pop
in
push
mov
or
jne
mov
mov
ss
push
and
fdivr
mov
cmpb
je
dec
jne
jmp
lea
fcoms
mov
push
outsl
imul
pop
adc
mov
add
add
sub
mov
and
in
mov
gs
adc
das
push
adc
repz
addr16
adc
add
cmp
pop
inc
or
clc
fimull
in
lahf
test
mov
sahf
xor
pop
pushf
dec
add
add
xor
ja
mov
or
mov
mov
lea
push
fldcw
and
pop
aaa
xchg
pushl
mov
rclb
clc
mov
sarl
test
ret
ja
and
cld
call
loopne
xchg
add
mov
ret
imull
lret
cmpsl
ja
mov
mov
dec
hlt
push
add
add
call
insl
aaa
pop
int
cmp
xorb
mov
mov
outsb
mov
sbb
neg
aas
lea
cmp
je
and
shlb
mov
adc
fildl
or
in
mov
test
in
shlb
in
add
shlb
pop
mov
sub
shrb
mov
cmp
jbe
jmp
inc
add
test
jne
mov
or
cmp
push
call
fnstenv
addl
clc
adc
cmp
test
int
mov
andb
test
gs
into
mov
mov
sbb
pushl
pop
add
leave
mov
and
int
jbe
or
push
jl
pop
sbb
and
rcrb
pop
adc
mov
pop
je
movsb
pop
clc
xchg
jne
cmpsb
pop
in
adc
xchg
or
adc
xor
xor
pop
pop
or
pop
shll
inc
movsb
push
inc
sub
idiv
mov
pop
pop
push
mov
push
mov
and
and
neg
movsb
aas
xchg
push
push
inc
and
lea
xor
sbb
mov
pop
jne
mov
enter
test
sub
mov
adc
xor
mov
insb
dec
add
mov
and
nop
add
pusha
mov
mov
mov
or
lea
push
sbb
fnstsw
add
adc
sub
fstps
adc
mov
mov
adc
sbb
out
mov
add
inc
insl
adc
test
je
fdivrs
mov
or
or
popa
jmp
cmpsl
into
mov
and
fsubl
sub
movsb
xor
xorl
ss
clc
inc
and
jne
cmp
jl
adc
fisttpl
mov
inc
push
adc
jb
aad
mov
sub
jbe
in
add
clc
add
push
push
lret
int3
inc
mov
popa
insb
out
inc
cmp
and
jbe
movsb
and
add
in
in
push
or
xlat
xchg
mov
add
sub
fwait
mov
add
push
push
enter
fstpt
add
lcall
inc
inc
cs
mov
pop
or
clc
mov
jnp
int3
mov
mov
jo
test
cmp
jbe
je
push
xor
stc
cltd
outsl
cmp
inc
dec
cld
jle
adc
fmulp
and
xchg
movsl
dec
jne
lea
mov
sub
je
cmp
adc
and
or
pop
jecxz
mov
add
insl
jnp
inc
cmp
clc
jge
jnp
insb
mov
adcl
mov
aad
xor
icebp
int
add
leave
je
or
cmpsb
jmp
and
cld
jb
xchg
fwait
sub
adc
jno
dec
fbld
sbb
je
jmp
imul
jo
dec
cld
cwtl
push
push
lcall
mull
mov
mov
rcll
insl
loope
cwtl
cwtl
push
je
or
lea
add
sbb
pusha
mov
in
andl
jns
aas
in
dec
movsl
jg
push
sti
jnp
cmp
xor
xor
mov
and
cmpsb
push
cs
out
cmp
push
push
ret
int3
sahf
sti
enter
punpckhbw
pop
enter
daa
dec
mov
call
pushf
sub
push
cmp
jp
mov
insb
movsl
in
mov
or
jle
cld
jmp
push
fisubrl
lods
sub
push
xor
pop
rcrb
lock
fwait
out
mov
jns
cld
ror
data16
sub
cld
dec
negb
stc
pop
mov
jl
bound
jmp
push
mov
ja
movsl
aaa
push
lea
pop
das
push
xchg
push
mov
jg
fcmovnb
or
fmuls
xor
jb
outsb
cmpl
popf
fdiv
add
push
cmp
rorl
mov
lods
xor
jnp
fistpll
out
or
dec
orl
cltd
neg
add
mov
pop
cld
aaa
sbb
mov
mov
adc
or
fstpl
sbb
cld
and
push
push
fs
pop
ljmp
add
pop
adc
mov
sbb
pop
pop
lret
and
loope
add
int3
add
or
inc
loope
insl
adc
jp
lret
adc
or
js
cmp
pop
xor
sub
add
pop
popa
pop
movl
sbb
in
pop
enter
mov
add
add
add
sbb
and
nop
repnz
or
pop
xchg
jbe,pt
sbb
ret
mov
push
dec
pop
mov
push
stos
out
add
mov
push
lea
lcall
jae
fcomp
pop
jne
or
sbb
pop
push
sub
lds
add
cmp
mov
test
pop
or
mov
outsb
jns
cvttps2pi
shll
push
push
xchg
imul
jl
add
pop
pop
pop
pop
xchg
gs
fsubl
pop
sub
int3
insb
es
jl
in
and
xor
push
jae
sbb
xchg
call
or
cs
in
fs
jne
and
inc
decb
push
icebp
cmp
push
mov
xor
pop
out
inc
ret
mov
jmp
loopne
nop
gs
call
adc
call
or
add
adc
sbb
fsts
in
ret
int3
cmpsl
jmp
cmp
mov
xchg
jb
mov
add
gs
repnz
leave
addb
ss
loop
or
adc
pop
sahf
and
movl
xlat
insb
xchg
clc
adc
fucom
xchg
sbb
enter
push
mov
clc
inc
loopne
js
and
mov
mov
addr16
gs
add
adc
push
adc
mov
dec
sbb
mov
das
or
lock
loopne
std
mov
push
push
orl
or
push
push
orl
or
push
mov
lahf
and
dec
mov
cmp
popf
mov
sbb
sbb
std
shll
mov
add
daa
jbe
imul
cmpsl
not
jne
push
adc
ss
clc
sti
sbb
lods
fldz
aam
imul
sbb
push
or
repnz
or
push
cs
add
imul
jne
add
and
add
pop
sbb
movb
add
sub
loop
mov
dec
gs
add
push
push
popa
add
dec
pop
adc
sbb
shll
cmp
jb
aaa
lock
ds
pop
and
add
and
add
sbb
aas
lahf
gs
pop
adc
outsb
adc
jne
enter
mov
lods
mov
rclb
xchg
xor
sub
mov
lcall
xor
sub
add
data16
cli
jne
and
test
and
je
or
cmp
aaa
mov
jnp,pn
sub
sub
sub
mov
or
fdivs
mov
inc
adcb
or
sahf
test
dec
jmp
pop
xchg
fsubrp
adc
lahf
pop
jl
jns
or
push
ret
cmpsl
aam
scas
add
js
pop
xor
cmp
jl
lahf
jp
sub
mov
lea
ja
mov
stos
stos
adc
sub
jecxz
aas
ret
int3
or
lock
add
mov
js
inc
ror
push
repnz
push
jns
cli
int3
lcall
cmp
xchg
movsl
pop
inc
add
cltd
je,pn
add
mov
js
and
daa
ss
push
pop
mov
xchg
int
sbb
outsb
scas
jmp
xor
lock
mov
incl
pushf
xor
ljmp
fmuls
add
addr16
jl
cmp
jg
mov
mov
push
inc
mov
cmp
jne
movsl
mov
and
daa
insb
faddl
lret
and
xor
nop
js
iret
sbb
pop
aad
enter
or
pop
or
in
in
test
mov
test
xchg
xor
outsl
rclb
fs
sbb
cmp
jb
mov
sti
pop
bound
and
push
jmp
mov
test
push
mov
bound
mov
xor
ret
pop
mov
pop
xchg
mov
inc
xchg
ss
xor
cmpl
popa
pop
loope
mov
jne
inc
adc
xor
clc
inc
add
mov
cmp
adc
inc
addb
pushf
cmpsb
xchg
pop
ljmp
and
add
dec
cmp
pop
enter
mov
push
aaa
inc
lret
shll
mov
fstpt
add
pop
test
cwtl
dec
xor
in
add
inc
aaa
sbb
xorl
xor
pushl
dec
and
sub
fdivr
fwait
jnp
xor
cmp
shlb
jnp
cli
je
mov
or
mov
sub
and
pop
jl
insl
in
push
std
or
mov
mov
xchg
sbb
xor
or
mov
pop
mov
leave
je
out
imul
push
ja
sbb
pop
cmp
shlb
jo
fsubrs
adc
cs
enter
inc
sub
je
popa
and
or
pop
adc
mov
sub
cltd
movsb
or
adc
xor
sti
mov
push
pop
push
dec
mov
lock
jo
cmp
lock
cmp
push
push
push
rclb
xor
mov
add
aaa
push
std
push
shll
das
int3
xchg
or
or
jbe
es
popa
lahf
and
stc
rolb
push
in
inc
pop
mov
pop
xlat
mov
cmp
loopne
cmp
mov
jge
pop
loop
mov
adc
aaa
or
enter
sub
fucomi
fldl
sbb
sbb
icebp
dec
mov
mov
sarb
pushf
imul
jb
pop
xchg
jbe
sti
stc
sbb
or
pusha
push
cli
out
mov
add
movsb
mov
mov
std
pop
push
push
push
push
pushl
xchg
xchg
xchg
xchg
les
xchg
test
movsb
mov
inc
inc
pop
sbb
aaa
je
sbb
mov
dec
scas
sti
loop
cli
inc
cmp
je
mov
add
cmp
sub
sub
jbe
xchg
inc
daa
jp
popl
div
mov
push
inc
and
dec
jb
sub
xchg
pop
neg
divb
fs
pop
jbe
pushf
add
test
inc
sub
adcb
mov
sbb
aam
je
add
aas
daa
add
adc
cmp
sbb
adc
mov
sbb
fs
test
mov
mov
pop
jno
call
pop
push
pop
sbb
data16
add
xchg
or
into
push
pop
test
popf
rcll
in
movl
jl
xchg
add
mov
push
or
mov
fstpt
inc
inc
and
mov
adc
cli
ss
push
adc
mov
lahf
jne
arpl
popl
je
mov
xor
je
dec
add
sbb
add
mov
push
jne
mov
inc
mov
aas
lea
shl
mov
int
add
pop
and
out
fcmovu
push
xlat
xor
fisubrl
js
lea
mov
sbb
cld
das
add
add
loope
insb
aaa
mov
mov
idiv
inc
sti
fldpi
es
or
push
cld
imulb
mov
or
mov
push
inc
clc
das
or
mov
push
push
adc
fdivrp
dec
pop
jle
xor
mov
mov
or
icebp
fildl
adc
push
add
inc
clc
scas
jg
mov
test
mov
xchg
fcoml
cmpl
adc
xor
adc
jge
imulb
cmp
daa
mov
rorb
in
pop
es
fdiv
ret
cmp
in
add
add
je
push
stc
dec
inc
xchg
js
jp
mov
xor
outsl
lea
scas
jbe
jmp
push
ds
imul
and
or
mov
push
fiaddl
lret
xor
pop
imul
mov
js
mov
mov
mov
movsb
mov
sbb
sbb
sbb
jmp
sub
rol
gs
cltd
adc
ror
jae
adc
or
push
sub
jle
adcl
add
jns
xor
enter
int3
adc
mov
insb
add
push
fdivrs
jae
push
movsl
push
popf
pop
mov
in
movsb
xchg
push
mov
fs
pop
push
in
pusha
inc
fldt
and
subb
leave
ja
das
inc
push
jo
iret
xchg
out
js
les
test
jl
sahf
js
sbbb
negl
das
test
enter
adc
mov
fstl
insb
push
nop
and
mov
clc
sbb
subb
insb
jg
fldt
push
js
xchg
jge
mov
and
movl
sbb
xor
sub
sbb
sbb
lods
add
sub
in
mov
push
xor
sbb
pushf
cmp
sub
in
nop
int
std
out
std
sbb
out
mov
push
aaa
jne
xor
and
adc
decl
fcoms
add
in
adc
mov
clc
stos
stos
cmpsl
pop
mov
xchg
jne
inc
xor
fstpl
push
inc
jmp
adc
jnp
mov
and
lds
jp
flds
or
adc
xchg
in
jbe
movb
pop
notl
adc
popa
inc
jl
out
test
dec
adc
and
pop
pop
js
push
xchg
and
and
mov
dec
push
xor
push
int
push
daa
or
push
clc
sbb
inc
or
test
loope
xchg
mov
outsl
and
pop
testl
jle
adc
scas
out
and
out
push
mov
das
cmp
adcb
adc
ss
call
fs
jbe
out
mov
mov
rcrb
loope
mov
jbe
dec
push
shr
inc
jns
mov
and
dec
dec
dec
jne
pop
mov
xlat
enter
movzbl
rorb
mov
in
adc
lret
shr
shl
movl
push
fidivrl
or
push
sbb
dec
push
mov
xlat
pop
xor
or
into
ret
push
test
mov
jb
mov
push
sbb
jne
aaa
popa
popf
sti
out
and
pop
xor
and
sbb
mov
and
testb
adc
add
jecxz
add
ror
or
dec
add
in
inc
ret
sbb
xor
adc
push
push
or
mov
cmpb
or
or
sbb
push
xor
inc
push
sub
cmp
subl
fwait
cli
fwait
and
add
mov
divb
insb
jl
pop
inc
ss
push
add
mov
loopne
clc
andb
mov
setnp
mov
into
fstps
or
jmp
nop
cwtl
divb
mov
pushf
ret
cmp
mov
cwtl
or
push
js
adc
add
mov
cmp
pop
pop
add
scas
loope
adc
cltd
mov
mov
rolb
jp
fsubr
cmp
adc
or
push
sahf
orb
push
js
adc
shr
push
sbb
inc
and
cwtl
adc
xchg
insl
clc
push
push
testl
mov
insl
mov
data16
jb
in
adc
or
lock
add
mov
mov
test
sar
movl
in
jl
fsubrl
jl
jno
arpl
pop
jle
jl
push
leave
push
xor
or
test
mov
sbb
enter
fwait
cmc
jns
add
push
test
mov
jmp
jmp
out
fdecstp
adc
add
out
push
pop
mov
cmp
pop
push
ja
imul
xor
jno
or
call
ljmp
clc
inc
pop
or
js
clc
cli
and
mov
xor
pop
mov
call
push
mul
add
or
add
mov
loopne
lods
xchg
cld
jle
rcrb
xadd
push
movsb
gs
pop
jbe
add
add
fadds
pop
cmpsl
lahf
add
pop
jecxz
pop
testb
mov
push
andb
mov
and
test
addr16
out
push
push
or
out
xchg
push
pop
pop
mov
pop
cmpl
push
sbb
xchg
js
test
leave
inc
cld
cmp
pop
jne
push
jmp
movsl
add
dec
push
nop
add
push
in
clc
ret
test
cmp
mov
jbe
and
aaa
in
mov
aaa
ds
pushf
imul
xor
test
jbe
mov
push
scas
add
sbb
cmp
jb
jmp
dec
push
jae
sub
mov
push
add
mov
jb
decl
or
fcomps
sbb
add
imull
pop
test
push
jb
xchg
mov
lods
roll
pop
fstpt
shll
jg
sbb
out
mov
inc
out
xor
ret
test
lret
ret
cmp
xchg
sub
cmp
jl
shll
imull
hlt
div
imul
lea
push
push
cmp
test
hlt
cltd
and
lcall
ret
xorl
pcmpeqd
xchg
test
test
adc
adc
and
dec
cmp
jae
pop
pop
adc
sub
adc
xor
push
mov
pop
adc
mov
jno
xor
ja
and
cld
pop
fs
stos
push
sbb
push
jg
fcomps
loopne
cmpsb
inc
mov
loope
pop
cmp
adc
jo
xchg
mov
mov
pop
daa
or
or
sub
mov
or
push
mov
inc
add
inc
cmp
mov
mov
ret
lcall
push
or
cmp
and
enter
mov
mov
cli
mov
sub
mov
stc
inc
mov
add
and
sub
sbb
in
jge
xor
lea
mov
clc
icebp
pop
or
sbb
push
lea
cmp
nop
adc
cmp
ret
jb
jge
xlat
ljmp
mov
adc
jb
outsl
test
push
pop
push
testl
mov
mov
adcb
out
cld
mov
rcrb
or
or
jbe
test
inc
mov
js
add
je
inc
add
mov
and
in
fldt
in
fmull
int3
jle
mov
test
mov
add
ljmp
sub
xor
out
imul
sub
or
adc
les
repz
loopne
jmp
movsbl
and
add
sbb
je
fsubrs
pop
in
sub
add
xchg
je
aam
loop
cli
push
jmp
iret
clc
mov
insb
push
stos
push
push
add
fnstenv
daa
or
sub
xchg
and
mov
mov
xchg
test
xchg
rorb
addl
out
rclb
adc
mov
leave
xchg
fcmovnu
fmul
xchg
xor
loopne
fadds
jmp
xchg
scas
ficoms
or
add
cmp
pusha
jecxz
outsb
cmp
cmp
aam
imul
shlb
mov
xlat
push
popf
push
jbe
cmp
cmp
jb
out
mov
pop
and
test
or
lea
xchg
adc
cmc
dec
cmp
jb
or
pop
xlat
push
imul
pop
and
cwtl
xchg
mov
in
inc
cwtl
in
push
sbb
sbb
popf
sti
xchg
jmp
dec
xor
xchg
pop
pop
mov
adc
adc
sub
pushf
add
test
insl
pop
push
and
add
cmpsl
xchg
fs
jb
push
sub
xchg
mov
jg
outsl
push
ret
cs
lds
push
imul
sets
adc
adc
imul
cltd
std
pop
clc
inc
push
test
fnsave
out
push
mov
testl
lea
jle
or
neg
push
and
mov
add
pop
mov
mov
sbb
mov
movb
add
sbb
or
and
pop
mov
sbb
adc
jmp
inc
or
cmp
push
lock
dec
out
pop
mov
mov
shlb
loop
je
pop
gs
xor
movb
gs
and
roll
ret
in
divb
scas
andl
mov
sbb
jecxz
mov
clc
mov
push
jmp
mov
push
fwait
mov
mov
inc
jb
adc
adc
push
popa
mov
aam
mov
call
adc
rclb
jge
push
loop
pop
add
outsl
clc
cmc
or
mov
inc
test
call
jbe
mov
sub
push
sbb
mov
mov
in
and
and
push
bound
sti
cmp
jb
mov
pusha
jp
cs
movl
add
dec
ret
xchg
add
subb
enter
inc
scas
outsb
add
add
jle
test
mov
cltd
je
mov
sbb
push
mov
imul
adc
or
mov
adc
cmp
adc
loopne
testl
dec
cmpb
mov
and
add
scas
or
fcompl
sub
mov
jp
aaa
mov
mov
ret
sub
add
push
sbb
sub
int3
push
or
xor
and
pop
and
lret
aas
dec
nop
dec
cmp
je
inc
mov
and
adc
dec
roll
mov
jle
incl
adc
push
fisttps
jo
mov
xchg
insl
add
rolb
inc
push
cmp
jl
cltd
pop
push
nop
mov
xor
pop
daa
fldcw
mov
cmp
or
push
inc
sbb
mov
lcall
inc
adc
and
sti
lea
push
popa
stos
pop
rcr
in
cmpsb
mov
lock
or
sbb
dec
adc
adc
loop
insb
hlt
push
arpl
xchg
es
mov
xchg
inc
or
jb
aaa
adc
mov
mov
mov
jle
pop
mov
adc
pop
je
cmp
popf
cmp
jg
dec
sub
ficoms
cs
cmp
fists
or
mov
cmc
xchg
call
je
inc
lods
push
or
aam
xor
push
jmp
adc
lea
push
aas
adc
add
or
push
xchg
cld
sti
or
mov
jne
test
rolb
adc
icebp
push
push
rcrb
mov
sbb
in
add
inc
jbe
loopne
and
xor
nop
add
imul
arpl
cmp
mov
aam
add
push
cld
lods
stos
movsl
cltd
cs
lea
int
cmp
add
sbb
popa
xchg
cs
add
jp
xchg
push
test
or
cld
jg
rcll
mov
fistl
dec
cmpl
add
mov
hlt
test
je
jg
jne
cs
jle
fnsave
cmp
mov
and
pop
fcom
xor
iret
jl
mov
incl
addb
mov
outsl
cmp
aaa
inc
les
int
or
cli
add
adc
outsl
ja
out
push
xchg
add
sbb
push
mov
fdivrl
push
push
add
out
aaa
jmp
xor
jecxz
jae
lods
push
ljmp
push
lock
jl
cmp
add
cmp
ja
cwtl
subb
popf
stos
test
inc
push
or
mov
add
push
adc
jo
push
outsb
loopne
pop
aaa
push
js
add
cmc
or
add
ret
pop
fstps
mov
fsubs
inc
orb
fistpl
adc
adc
sbb
or
aaa
sbb
mov
dec
xor
sbb
mov
and
call
or
loopne
lcall
rcl
mov
add
lret
adc
mov
adc
mov
pop
jecxz
or
frstpm(287
enter
nop
insl
xlat
xor
in
jmp
sbb
add
add
mov
add
mov
xor
add
nop
lds
push
pop
leave
jne
jecxz
pusha
addl
and
add
xor
loopne
inc
in
sti
ljmp
sbb
sbb
in
ja
inc
call
xor
test
rcrl
mov
sbb
pop
push
popa
dec
mov
pop
push
pop
imul
adc
mov
inc
add
push
mov
or
adc
push
addr16
pop
or
adc
pop
testb
add
cmpl
ja
es
ss
sbb
into
push
add
adc
pushf
mov
push
sub
ds
pop
into
and
sub
and
jge
mov
sbb
jo
and
sub
or
loope
and
dec
shll
test
rorb
adc
push
dec
xchg
push
cmp
or
dec
pop
adc
dec
inc
cmp
std
adc
lock
andl
test
or
inc
xor
xor
push
add
rclb
and
inc
push
das
ret
push
add
scas
int
fmuls
fimuls
cmp
xchg
leave
stos
or
ret
or
cmp
ficoms
inc
jne
sbb
add
es
dec
stos
dec
sahf
in
pop
jg
jno
bound
dec
mov
add
es
outsl
js
adc
or
dec
push
push
stos
jp
jge
sub
rol
daa
and
das
push
xor
addr16
rcll
lods
push
mull
scas
push
mov
test
mov
sub
push
je
push
clc
clc
pop
ret
sub
fisttps
data16
push
sbb
and
or
punpcklbw
cmp
lock
dec
dec
test
or
adc
jne
jl
loope
test
push
insl
sbb
and
adc
mov
cmp
andb
jnp
and
inc
xlat
orl
addb
jp
mov
inc
pop
sbb
or
push
add
or
in
add
mov
je
jmp
loopne
and
mov
push
mov
sub
cmp
xchg
mov
jne
mov
push
xor
arpl
push
pop
inc
sub
or
insb
add
cmp
test
adc
fisttpl
fwait
ret
sbb
clc
pop
mov
sbb
or
xorl
dec
xor
cwtl
std
aaa
push
insb
and
push
sbb
pop
ror
into
imul
loopne
sahf
sub
pop
xor
add
add
cmpsl
cmp
jne
std
push
nop
pop
stos
es
jne
incb
ret
xor
mov
pop
jl
and
xchg
cmc
push
aas
adc
dec
push
fcoms
and
leave
push
inc
lock
and
mov
add
mov
data16
mov
sub
test
in
pusha
pop
push
mov
cmpl
add
popf
test
add
pop
jo
and
adc
insl
xchg
cmp
adcb
ss
ret
aad
inc
insb
mov
pop
or
mov
hlt
ja
jb
lahf
jo
or
mov
sub
sbb
and
hlt
xor
dec
or
ret
jbe
mov
cmpl
test
ret
push
dec
cmp
mov
cmp
sub
sbb
insb
xor
and
js
addb
xchg
int
jge
jle
xchg
dec
jno
xor
push
dec
push
inc
sar
mov
dec
jno
mov
mov
cmp
lea
insl
push
xchg
xlat
loop
xor
push
lock
fnstsw
and
push
or
daa
jb
sbb
add
popf
ss
rcl
scas
xchg
sbb
push
fdiv
out
xchg
subb
fsincos
mov
stc
int
push
cld
pop
sub
adc
movsb
xor
hlt
fidivs
sbb
sub
inc
cli
mov
lea
sahf
imul
mov
or
push
movb
push
cmp
pop
mov
jp
mov
jmp
sti
popf
jge
into
lea
cmp
shll
lock
cs
pusha
mov
jns
jne
jle
push
sbb
iret
push
or
and
shrb
repz
hlt
mov
arpl
push
push
xor
push
xlat
cmp
push
jns
scas
insb
cmp
and
pusha
inc
or
mov
mov
pop
jmp
mov
mov
movb
mov
imul
or
mov
incb
xchg
sub
push
xor
pop
loopne
and
mov
xchg
adc
clc
test
mov
and
lods
mov
jmp
sbb
push
push
insb
pop
dec
and
nop
into
adc
or
enter
adc
jg
push
dec
stos
adc
pop
and
push
test
or
jmp
mov
aad
sahf
sbb
xchg
jmp
pop
call
xor
mov
sub
jne
ja
fs
fisttpl
aaa
sub
je
sbb
js
cmp
sub
push
xor
fildl
xor
daa
gs
pusha
push
push
or
xchg
push
sub
jg
inc
icebp
int
pop
andnps
adc
addb
andb
inc
dec
jns
sbb
insl
ror
lods
pop
jmp
dec
jecxz
jno
pop
mov
mov
outsl
ja
or
dec
and
mov
test
jne
pop
addb
pop
cmp
add
lcall
push
xchg
dec
xor
roll
rep
pop
ljmp
inc
mov
repnz
or
mov
xchg
push
std
and
add
mov
fildl
and
out
mov
aaa
jl
into
cmpsb
lea
loope
xchg
nop
jmp
jne
mov
push
mov
sbb
imul
bound
or
sbb
fldt
sbb
push
fsts
outsl
push
mov
mov
cmp
dec
jle
insl
popf
sti
das
cld
lea
sub
jmp
push
test
cmpsl
aaa
shll
inc
mov
stos
add
aad
push
or
sub
aad
sbb
sbb
jl
mov
sub
cs
mov
dec
movsb
push
mov
jo
into
aam
aaa
ret
inc
in
pop
sbb
stc
add
push
mov
test
inc
dec
pcmpeqw
movb
out
and
mov
cmpb
je
push
js
add
mov
add
jg
mov
icebp
push
fs
add
je
std
pop
test
je
shl
imul
push
lock
and
loopne
loope
lods
call
or
add
inc
ret
xor
loopne
or
andl
mov
sub
js
mov
add
mov
lret
stc
out
dec
stc
movsbl
lea
cmp
push
and
dec
mov
or
enter
jb
mov
jmp
int3
adc
paddusw
or
out
jmp
lea
add
js
jne
fwait
dec
inc
jmp
add
pop
aas
jge
mov
rcr
inc
xchg
and
pop
mov
ret
mov
fmull
sahf
adc
and
push
inc
mov
add
inc
inc
or
jo
das
in
adc
imul
jmp
addb
mov
inc
jle
filds
add
dec
cs
sbb
xor
clc
add
jmp
ret
add
push
movsl
ret
std
jmp
or
adc
lods
push
cmp
shrl
inc
or
fidivrl
das
stc
jnp
add
mov
or
ret
push
or
pop
notl
jle
cmp
je
add
ja
push
push
xor
jbe
push
in
mov
lcall
adc
sbb
mov
inc
neg
pop
sbb
imul
cmp
jne
cmpb
sub
cmp
push
movsl
jmp
inc
jae
sbb
sub
lods
or
das
ss
fsubs
sub
mov
cmp
adc
fisttpl
and
mov
or
imul
pop
loopne
push
cmp
lods
orb
push
pop
mov
pop
push
sbb
cmp
push
dec
jno
mov
test
or
add
addb
add
mov
push
mov
and
xorb
out
cmp
fbstp
push
jbe
or
jge
int
int3
inc
gs
adc
enter
adc
out
mov
ror
pop
xor
in
or
je
mov
cmpb
in
clc
jb
and
ss
aaa
shr
lret
ret
lock
adc
gs
fs
aaa
hlt
adc
lcall
cld
loopne
sbb
xchg
ret
ljmp
jnp
cmp
pop
mov
mov
sbb
or
and
jne
mov
addr16
cmpb
shll
fidivs
jl
mov
cmp
add
jne
cmovb
fadds
in
pop
and
inc
sbb
add
add
leave
and
sub
aaa
sub
xor
sbb
dec
lods
fstpt
inc
sbb
push
sbb
push
mov
jae
outsl
pop
imul
jb
repz
inc
loope
ja
sbb
jle
fcmovu
insb
or
pop
ja
jb
mov
push
jae
push
push
adc
push
adc
jns
imul
out
cs
push
sbb
jae
xor
mov
add
pusha
jae
xchg
mov
pop
lods
std
or
inc
faddl
pushf
call
push
or
pushf
test
shll
add
and
seto
mov
fs
push
idivl
xchg
lea
xchg
ljmp
pop
shr
shr
in
bound
pop
jge
adcb
or
push
dec
cmp
adc
push
hlt
adc
fistpl
cmpsl
xchg
ds
lods
pusha
or
pop
jno
mov
push
mov
add
inc
rep
arpl
es
add
jbe
outsl
push
sub
inc
loopne
push
jne
push
add
pop
fs
lods
or
or
sbb
and
add
test
insl
xor
cs
push
or
sbb
repz
dec
pop
jne
adc
imul
or
adc
sbb
jns
or
add
lock
das
jne
cmpb
or
test
mov
ja
xor
movsl
test
imul
inc
mov
mov
add
lea
and
lds
nop
push
pop
fwait
jmp
push
sub
aam
bound
sub
sub
addb
subb
adc
es
stos
and
aad
sub
fisttpll
mov
je
pop
leave
add
cmc
or
mov
pop
rcrl
sbb
add
fs
sbb
xorb
and
inc
mov
std
mov
incl
cmp
loopne
fwait
add
ret
lret
out
sub
pop
cld
mov
pop
pusha
ss
andb
push
xchg
and
sbbb
sub
xor
sbb
xor
xlat
stos
inc
pusha
pop
jbe
add
inc
fs
jns
ds
xor
cmp
addb
inc
loopne
add
arpl
pop
or
idivb
xor
mov
or
dec
or
push
jbe
and
cmp
cmp
jmp
insb
and
clc
cmp
cmp
mov
jmp
push
ficoml
lds
ret
inc
sbb
push
arpl
gs
xor
xchg
xor
or
sub
icebp
jne
shr
aaa
lea
inc
xchg
movsb
in
adc
or
insb
adc
pop
pop
andb
adc
xchg
pop
das
xor
adc
inc
mov
pop
movsb
fisubs
jb
and
inc
inc
mov
test
inc
mov
add
jno
mov
in
or
xchg
imul
pop
outsl
pop
pop
inc
mov
add
cmp
cs
mov
cwtl
shrb
adc
push
cmp
mov
adc
add
push
sub
mov
clc
hlt
fildll
fstps
cmp
push
fcmovnu
test
inc
push
push
and
add
gs
pop
repnz
or
jbe
sbb
or
lods
inc
push
push
int
sub
test
mov
cs
call
xor
roll
jne
add
leave
add
sbbb
pop
in
push
lock
and
xchg
xchg
int3
push
ljmp
mov
mov
fdivp
je
ja
and
cmp
call
or
adc
loope
ret
push
mov
and
mov
mov
pop
push
add
lock
push
in
in
push
push
cmp
lock
inc
jae
and
addr16
sbb
xor
iret
xlat
xchg
mov
sub
mov
repnz
clc
lret
pop
iret
gs
into
shrl
popa
cmp
sub
push
adc
xorl
add
xchg
pop
out
repz
xchg
test
hlt
xchg
test
xchg
and
mov
push
fcmovne
pop
fs
xchg
out
sub
inc
xchg
dec
arpl
push
sbb
shll
mov
adc
dec
push
inc
add
cmp
sbb
in
lret
xor
sub
sub
jo
sbb
sbb
xor
xor
mov
lock
xor
inc
sbb
icebp
repnz
cmp
leave
mov
enter
mov
scas
adc
popf
cmpsl
jno
push
fistpl
or
push
xchg
rep
movsb
mov
mov
xor
adc
sub
mov
mov
or
xor
in
mov
cmpsb
int3
daa
mov
pop
mov
jo
add
mov
enter
divl
call
cs
insb
pop
pop
cltd
mov
add
push
hlt
xor
sbb
out
inc
out
mov
rcl
out
je
dec
loopne
test
jg
inc
mov
pop
mov
ljmp
sbb
mov
and
nop
and
adc
pop
pushf
or
cmp
xchg
icebp
outsb
xchg
xchg
mov
mov
adc
jo
leave
pusha
inc
pop
pop
cmp
push
jns
add
jns
movb
xchg
xchg
mov
xchg
cmp
sbb
dec
fdivr
or
pusha
sub
jns
sti
hlt
jl
jg
push
lock
or
jl
clc
jbe
setl
imul
adc
sbb
jne
fcmovnb
jmp
outsl
adc
sub
cmovl
and
rorb
mov
dec
xor
ret
daa
cmpsl
or
jno
push
sub
ret
mov
loopne
and
sbb
mov
adc
mov
push
add
mov
pop
andb
lods
pop
mov
call
push
loopne
push
mov
dec
ret
xchg
lods
add
sub
bound
arpl
lds
add
imull
push
call
sbb
call
jno
mov
lock
push
or
push
mov
sub
push
es
jno
push
xchg
aam
add
jle
test
push
rclb
loopne
scas
or
fadds
test
mov
loopne
adc
cmp
mov
or
adc
dec
clc
lea
pop
add
rclb
cwtl
fcomp
mov
sbb
or
clc
and
dec
inc
sub
jbe
scas
loop
and
loop
mov
jmp
fidivl
adc
inc
fistpll
lahf
cmp
je
inc
lods
cmp
jl
add
or
push
cli
push
adc
into
xchg
or
and
mov
inc
add
cmp
stos
mov
pop
lret
aaa
xor
jo
or
sarb
imul
int
movsl
jle
into
mov
add
adc
sbb
mov
push
and
ja
push
xlat
andb
pop
sbb
decl
push
sbb
fildl
outsl
repz
xor
mov
push
mov
push
lods
adc
cmp
cmp
ja
in
js
add
lret
sbb
push
or
hlt
mov
mov
and
fiadds
pop
test
push
je
jo
pop
imul
pop
cmp
adcl
clc
pop
mov
dec
jle
inc
add
gs
pop
jo
jne
jo
jle
mov
fwait
ret
test
dec
inc
mov
mov
arpl
push
icebp
js
mov
data16
mov
or
push
movl
sbbb
jmp
mov
or
mov
and
in
mov
nop
fnstsw
cmc
fiadds
add
push
fimuls
aas
popa
xchg
fidivrl
push
xor
lock
dec
push
sbb
sub
inc
out
loopne
cmp
push
jecxz
imul
push
add
dec
dec
fcomps
decl
adc
pop
sti
pop
sub
insb
inc
je
sti
push
mov
pop
aaa
pop
mov
jo
xchg
add
mov
repnz
pop
stos
aam
push
sbbb
es
xchg
mov
mov
adc
mov
jl
mov
popa
pusha
inc
inc
xorb
sub
dec
xor
xor
jo
sbb
and
and
sti
jl
push
push
adc
aaa
addl
push
orb
xchg
adc
sbb
pop
rcrl
mov
mov
lock
aaa
inc
je
in
in
call
xor
in
inc
xor
lock
pop
push
xchg
in
xor
lock
xchg
mov
mov
ficomps
fsts
mov
sbb
addb
loopne
mov
adc
aaa
pop
aam
sub
add
stos
adc
and
pushf
inc
dec
push
inc
mov
mov
jo
jb
jns
adc
dec
inc
or
push
mov
push
push
mov
loope
mov
pop
out
out
clc
mov
push
add
pushf
jb
test
fadds
lods
sub
mov
xor
std
adc
xchg
and
pop
call
pop
cmp
mov
je
or
pop
mov
and
and
cwtl
cld
mov
out
movb
dec
cwtl
or
xor
inc
mov
and
sbb
lret
sbb
in
push
sub
test
movswl
and
sbb
fsubr
cmp
add
loopne
inc
jb
fsubrs
insl
pop
mov
repz
and
inc
sub
mov
clc
cld
in
sbb
pop
pop
pop
cmp
add
ja
or
add
in
aam
mov
test
jne
push
fsubl
sahf
jae
stc
mov
push
xor
cld
jbe
sbb
push
push
jbe
data16
call
mov
hlt
inc
cmp
loope
fdivs
aad
fcomps
bound
sarb
aam
fadds
jmp
dec
repz
add
icebp
and
jne
lock
or
xchg
insb
push
insl
sub
sub
and
mov
sub
and
cmp
fistps
cmc
mov
cmp
jbe
ret
or
bnd
out
cmpsl
jg
andl
pop
repnz
xchg
sub
mov
andl
popa
or
fs
add
div
mov
loop
sbb
lea
mov
dec
xor
popa
aaa
aam
and
cmp
pminub
adc
pop
outsl
push
pop
and
xor
repnz
out
sub
daa
or
mov
xor
sub
mov
cmp
add
test
das
add
push
js
jo
adc
dec
add
or
arpl
mov
push
addl
adc
sub
stos
fwait
push
test
xor
daa
pop
mov
xor
mov
xor
outsb
mov
xor
icebp
dec
or
and
movsl
dec
push
shrb
clc
incb
sbb
adc
jle
clc
out
mov
jl
addr16
addb
sub
je
fsubrs
dec
imul
lds
cmp
dec
push
xor
fildll
mov
push
xor
add
pop
or
fdivrl
cmp
je
push
es
bound
push
test
lea
add
sub
or
and
jne
mov
add
fstpt
ret
cmp
and
cld
cmp
xchg
push
jb
sbb
or
inc
and
test
imull
and
mov
mov
or
mov
jp
pop
jae
add
aad
adc
cmp
mov
mov
loope
push
faddp
xchg
adc
icebp
push
pop
or
and
je
push
stos
dec
sbb
push
ds
lock
lds
fildll
jg
test
je
cmp
jne
push
in
or
shll
jg
insb
xchg
add
jne
cmp
jl
cmp
mov
inc
inc
jmp
cmpb
sbb
push
push
aas
adc
add
inc
mov
outsb
stc
push
sub
imul
fmull
insl
imul
adc
adc
call
jle
popa
jl
jp
or
cmp
cmp
repz
cli
cli
stc
stc
stc
pop
jb
pushf
test
pop
push
sub
inc
pop
clc
push
das
enter
adc
cmp
ret
int
loopne
lea
sbb
add
notl
dec
mov
andb
and
adc
daa
nop
inc
push
mov
adc
sbb
and
push
pop
popf
inc
leave
lret
stos
aam
dec
add
pop
out
lea
push
mov
mov
cmpsb
and
push
fwait
das
inc
and
push
mov
movsb
push
mov
out
out
gs
jl
xor
out
popf
fisubrl
daa
mov
jb
pushf
out
pop
adc
mov
xor
in
nop
sti
sti
jl
push
nop
xchg
daa
add
mov
push
push
insl
mov
mov
rcll
fldt
push
pop
loopne
add
addb
mov
gs
push
in
jg
lcall
in
push
fcoms
xor
mov
roll
xor
sbb
pop
test
or
xor
or
ret
fisttpl
or
add
aas
push
out
sub
mov
or
dec
loopne
sbb
jne
pop
pop
push
and
cmp
push
mov
push
shrl
push
sub
aam
pusha
in
fsts
mov
loopne
rorl
outsl
pop
jbe
in
dec
add
js
add
aad
push
lret
stos
jbe
add
inc
call
imul
lds
mulps
or
add
mov
jle
imull
pop
push
mov
xor
push
pushf
add
add
and
lock
sbb
or
dec
add
push
inc
mov
sbb
and
jo
insb
mov
repnz
ss
dec
and
xchg
adc
aas
ret
adc
call
je
push
and
cmpsb
push
cltd
xor
das
cmp
dec
or
outsl
or
adc
pop
adc
stos
mov
imul
cmp
lahf
cmpsb
sbb
add
mov
scas
or
icebp
cmp
adc
push
in
shl
in
scas
insl
push
bound
mov
and
pop
sbb
arpl
sbb
sub
push
mov
lahf
andb
sbb
dec
pop
push
add
ja
sahf
mov
loop
clc
or
sub
ret
in
or
fwait
pop
and
jne
rorb
mov
mov
adc
lea
mov
icebp
negl
sbb
adc
push
and
into
dec
adc
cmpb
in
aas
adc
shlb
mov
add
jg
inc
leave
por
cmp
mov
and
cmp
mov
xchg
add
cmp
xchg
hlt
insb
push
push
sbb
cld
xchg
inc
pushf
or
inc
sti
sbb
outsb
mov
sub
loopne
rorb
and
lods
and
sti
outsb
mov
ljmp
xchg
nop
add
insl
mov
and
jge
jl
lret
outsb
push
cmp
xor
or
test
cmp
jo
cmp
xchg
jo
fstl
rolb
or
add
dec
aad
push
push
clc
push
pop
jnp
lea
sub
push
adc
test
xchg
ret
jbe
ss
mov
jp
sbb
jo
dec
inc
adc
ret
push
sbb
or
test
mov
jb
popf
ljmp
inc
mov
fs
mov
insb
or
pushf
fdivrs
lret
out
mov
sbb
xchg
mov
mov
je
sub
outsb
sub
dec
and
push
fnstcw
in
or
cmp
dec
pop
fimull
jge
pop
jmp
push
cwtl
out
lods
int
push
push
mov
cmp
bound
rol
sub
adc
and
pop
and
pop
or
mov
inc
fs
or
movl
add
outsb
jg
addb
in
cmp
decl
and
add
sahf
pop
add
pushf
cmp
add
cli
xor
test
sbb
sar
mov
adc
pop
add
jp
inc
cmp
ret
fdivs
jae
jne
outsl
push
sarb
adc
add
dec
xchg
es
mov
loopne
les
pop
flds
mov
int3
faddl
inc
push
xor
jbe
sub
xchg
arpl
sub
pop
inc
lahf
jmp
sti
mov
lods
repnz
or
fstpl
fs
add
mov
jp
dec
stos
sub
sbb
jns
sbb
movsb
dec
inc
push
inc
and
mov
xchg
mov
fsubrs
insl
adc
push
jmp
cli
cs
cmp
inc
cmp
add
lods
add
inc
js
leave
or
add
mov
dec
ret
sub
add
hlt
or
lret
in
xchg
add
xchg
gs
lcall
shrl
add
sub
inc
ja
push
pop
cmpb
dec
adc
lret
cltd
or
pop
sbb
subb
mov
push
cltd
add
lock
fdivs
jl
dec
stos
xchg
mov
push
pop
push
fstpl
mov
add
movsw
movsb
stos
aam
jo
fistpll
xor
mov
cmp
and
test
pop
push
fbstp
pop
lock
je
sti
dec
mov
imul
pop
mov
xor
pop
or
or
jg
rclb
cld
in
lods
xor
jl
add
jg
mov
mov
and
mov
push
sub
cmp
mov
loopne
push
adc
sub
adc
insl
lods
insl
push
sub
jae
scas
adc
test
add
adc
vphadddq
das
mov
lods
pop
in
add
sub
fs
stos
call
or
pop
inc
jge
xchg
mov
mov
mov
cmp
adc
fsubrl
mov
add
inc
cmp
jne
data16
fwait
inc
sbb
xchg
jl
ljmp
sbb
cmp
sti
add
sbb
push
mov
or
dec
popf
add
das
mov
and
add
incb
cmp
pushf
add
jl
out
ja
pop
jge
push
push
xor
pshufw
xchg
cmpsl
lret
outsl
popa
inc
push
hlt
inc
mov
adc
push
xor
cmp
aas
aaa
sub
pop
in
pop
gs
sub
sbb
aam
das
sbb
mov
fldenv
in
cmp
mov
or
clc
mov
incb
jle
lea
push
stc
cmp
sub
jmp
je
std
mov
into
sub
cmp
push
adc
daa
jnp
cmpl
mov
fcoml
test
iret
gs
hlt
lahf
filds
insl
cmp
cmp
inc
test
xchg
cmp
sbb
or
frstor
cmovo
jmp
outsb
daa
add
push
pop
lods
leave
test
dec
push
add
in
sbb
enter
nop
and
lock
in
cmp
xchg
xor
fbld
das
xor
fnstcw
iret
movb
or
out
pop
in
push
adc
push
ljmp
popa
ljmp
add
clc
jl
sbb
adc
pop
rcrl
pop
push
in
rolb
push
jle
test
or
repnz
push
lahf
jnp
cmp
adcl
dec
bnd
push
jo
or
mov
jnp
pop
push
push
test
inc
push
repnz
je
add
sahf
ret
ret
nop
enter
outsl
nop
pop
add
cmp
or
mov
adc
adc
xor
inc
test
pushf
add
fsubl
push
nop
dec
stos
imulb
in
mov
push
inc
adc
or
add
in
push
sahf
add
addr16
sub
push
or
xchg
inc
aad
cmc
dec
enter
add
xor
sbb
sub
adc
sbb
shlb
fimuls
adc
pop
push
jl
push
dec
add
pusha
jne
or
popf
pop
pop
in
imul
jg
mov
rcrb
jno
in
pop
test
jge
popf
fs
stc
push
cmpsb
nop
and
mov
stos
js
iret
insb
inc
je,pn
into
inc
js
mov
dec
sub
stos
jge
mov
test
popw
adc
pop
jb
fs
and
iret
and
lret
scas
adc
adc
add
jl
and
and
nop
popf
icebp
cmpsl
cmp
lahf
cltd
add
push
cltd
mov
mov
or
cmp
push
push
outsb
add
push
jb
and
add
out
js
push
mov
mov
mov
cmpsb
and
sub
scas
out
ret
lcall
inc
jne
in
push
xchg
mov
movsl
inc
dec
mov
adc
mov
inc
rcrb
call
push
popf
or
enter
sbb
test
jg
inc
push
rclb
sbb
cs
or
push
aaa
jnp
cwtl
jo
sahf
cmp
repnz
and
jl
wrmsr
push
jb
dec
jo
jg
jno
pop
fldenv
pusha
dec
repnz
nop
daa
nop
sahf
push
sbb
inc
push
and
pushf
sbb
stos
mov
sub
out
ss
shll
aas
mov
jnp
rorb
mov
and
cmp
sbb
mov
mov
dec
add
lds
and
sbb
cmp
dec
lcall
sbb
pusha
push
ja
aaa
or
clc
fwait
and
test
dec
sub
out
jg
out
jo
into
jl
daa
cmp
push
cmc
fldenv
pop
cmp
pusha
pop
or
in
fildl
push
cltd
in
int
fdivrl
adc
and
stos
and
inc
sahf
in
rolb
xlat
add
add
dec
int3
adc
int
sti
mov
mov
push
pusha
mov
mov
stc
or
adc
popa
sbb
add
iret
lods
addr16
jle
mov
fldl
js
inc
inc
or
jo
fs
push
pop
dec
sbb
pushf
mov
dec
or
push
dec
inc
out
add
xchg
or
push
cmpsl
pop
push
xchg
push
ljmp
fstpl
mov
sbb
mov
mov
mov
sbb
lcall
fs
stc
sub
fcomps
sbb
out
test
add
cmp
xchg
xor
cmp
push
push
js
dec
test
dec
add
subb
and
ds
add
add
dec
cmpb
cmp
xchg
jg
dec
add
cmp
out
ja
lea
push
cld
mov
pop
adc
inc
sub
fistpl
sbb
js
jge
push
in
lcall
lock
add
insl
lds
jmp
jle
sbb
popf
data16
and
insb
sbb
cmp
mov
xor
lcall
lcall
mov
into
or
adc
outsl
xchg
out
jno
gs
lea
cltd
add
dec
inc
inc
sbb
cmp
inc
mov
div
mov
add
testb
negl
gs
cli
clc
stc
cld
cli
jp
xchg
gs
sti
cld
or
std
mov
fsubrs
xor
cli
std
push
adc
xor
and
cli
push
or
xor
xchg
pop
hlt
dec
adc
dec
pop
xor
dec
jle
mov
movsb
cltd
mov
rclb
stos
push
adc
mov
or
add
jl
jb
addr16
jae
ret
leave
addb
adc
mov
xchg
dec
repnz
push
cmp
adc
add
cmpb
or
push
or
sbb
popa
shrl
inc
sbb
jb
jecxz
out
imul
push
shr
jne
sub
cltd
dec
add
xchg
je
fs
insb
cltd
movsl
sbb
cltd
add
jae
add
cmc
add
cmp
add
xor
fldcw
mov
sub
pop
xchg
mov
push
lcall
dec
push
push
xchg
mov
jb
push
sbb
pop
fistps
xchg
das
adc
push
rorb
ds
lcall
imul
loop
and
or
inc
rclb
or
clc
test
cmp
cwtl
gs
pop
mov
push
int
pop
orl
or
ret
inc
inc
mov
add
mov
into
push
and
in
cmp
and
jb
mov
mull
sbb
mov
pop
or
or
mov
mov
roll
sbb
sahf
gs
or
adc
call
inc
or
inc
push
scas
xor
ds
sub
cmpsb
adc
push
out
stos
mov
cli
and
cwtl
dec
mov
pushf
cmp
insl
jp
and
ljmp
jmp
lods
and
push
add
dec
cwtl
or
aas
and
push
xor
dec
adc
inc
mov
sub
dec
insb
push
jge
cli
or
dec
je
nop
jp
sub
inc
cld
xchg
js
sub
pop
push
lret
mov
outsl
add
pop
mov
adc
pop
xchg
sbbb
inc
add
xchg
rorb
cmp
sub
out
sbb
pop
push
cmpl
dec
inc
bound
je
xchg
push
stos
inc
sub
mov
xchg
or
inc
ss
push
adc
mov
mov
frstor
add
flds
pop
adc
sub
loopne,pn
inc
xor
xor
add
add
mov
loopne
xadd
adc
sbb
inc
rclb
pop
xor
rcrb
push
test
push
xor
jo
and
not
adc
mov
push
mov
addr16
inc
cmp
je
jmp
push
mov
or
out
xor
adc
fists
popa
orl
test
pop
mov
inc
or
jbe
pop
add
inc
pop
adc
push
jmp
sti
or
outsl
sahf
xor
pop
je
adc
or
fldenv
iret
xor
mov
ret
xchg
jmp
ret
mov
push
sbb
mov
jmp
and
pop
lods
mov
push
mov
adc
add
sbb
fs
add
or
shrb
cmp
bswap
pop
jmp
pushf
std
xchg
pop
push
rolb
adc
inc
push
adc
cld
jmp
push
cmp
je
mov
cmp
pop
sarl
and
int3
add
sub
mov
hlt
sub
bound
adc
pop
sbb
xchg
adc
sti
jmp
and
loope
mov
xchg
adc
ja
mov
scas
adc
push
mov
mov
fstl
out
lock
subb
adc
or
adc
adc
xchg
mov
or
push
mov
inc
stos
push
rorb
or
aad
adc
mov
add
loopne
sbb
jmp
sbb
sarb
jl
pusha
aam
je
inc
mov
sub
sub
adc
cs
lea
or
out
push
sbb
push
xor
ss
adc
sub
mov
add
cltd
push
add
and
and
mov
dec
add
mov
inc
push
pop
lea
es
push
push
mov
xor
push
sbb
add
adc
adc
or
pop
mov
adc
andb
add
lds
cmp
dec
nop
cmp
and
pop
dec
popa
adc
add
push
cmp
inc
mov
dec
jmp
and
pusha
inc
mov
jne
mov
push
adc
or
adc
das
in
in
clc
add
sub
dec
adc
jo
loope
push
add
stos
inc
ret
and
adc
sub
data16
cmp
sub
and
sbb
inc
dec
js
mov
cmp
mov
xchg
adc
out
gs
fstpl
xorb
mov
ja
xor
outsb
push
sub
sbb
cmp
andb
sbb
adc
add
lock
je
daa
in
cmp
adc
add
or
rolb
je
xchg
dec
pop
mov
and
jne
je
insl
xor
sub
or
or
mov
mov
mov
adc
leave
adc
or
cwtl
inc
xor
pushf
decl
push
xchg
dec
or
adc
push
sub
or
les
fcomps
jge
and
sbb
je
sbb
mov
jge
sahf
adc
mov
stos
out
mov
add
mov
int
aaa
mov
cmp
sarb
out
cmpsl
jb
je
pop
pushf
cmp
or
sbb
cmp
jno
scas
movl
cmc
or
and
hlt
sbb
jo
cwtl
and
mov
adc
cli
add
mov
sub
xor
push
lock
scas
xchg
jmp
sbb
pushf
je
sub
outsl
jne
loopne
mov
add
pop
loop
adc
jle
loope
fsubr
add
jl
push
pop
xor
mov
fsub
pop
insl
push
pop
and
or
addr16
add
sbb
fisttpll
inc
add
or
or
hlt
sub
test
xor
js
add
pop
sbb
aas
inc
fwait
add
insl
inc
cli
sbb
pop
loopne
and
aam
aam
cmpsb
imul
loope
dec
mov
add
add
add
aam
imul
ja
mov
sub
push
or
loopne
push
loopne
dec
inc
addl
push
mov
jae
test
mov
shlb
mov
lods
stos
pusha
leave
sub
insl
stos
popa
fists
push
xlat
adc
cwtl
fidivrl
dec
inc
add
push
mov
movsb
sbb
js
int3
cmpsl
xchg
xor
or
or
mov
sbb
lret
pop
adc
js
pop
les
adc
repz
pop
mov
mov
ja
test
push
sbb
push
jmp
cwtl
and
sbb
nop
ret
sbbl
or
jnp
or
lods
xchg
lds
and
lods
adc
lods
mov
leave
lods
ret
add
xchg
mov
cmp
xor
mov
sbb
test
add
insb
pop
orb
das
aam
jae
mov
ja
arpl
and
insl
add
pop
cmpsl
jnp
inc
adc
hlt
xchg
mov
ret
in
test
fwait
scas
mov
xchg
pop
mov
adc
xor
dec
push
or
test
or
out
in
das
or
sbb
lret
xor
inc
add
add
or
mov
incl
enter
pop
sbb
fsubs
je
push
rolb
movsb
scas
xchg
add
test
sub
adcl
aas
and
bound
fidivs
insb
out
sbb
cmp
jne
pushf
and
clc
das
xor
pop
imulb
sbb
mov
jb
jo
int3
mull
adc
scas
lcall
sub
fsts
mov
cmpsb
ret
or
mov
enter
loop
mov
pusha
add
mov
mov
or
mov
cltd
jno
and
je
lods
mov
and
pop
imul
push
and
adc
mov
jge
inc
rcll
adc
out
mov
jle
pop
add
or
sub
pop
mov
push
shrb
mov
add
mov
jae
adc
cwtl
xor
pop
loopne
mov
push
or
dec
and
out
jecxz
xchg
dec
jle
adc
shlb
sarb
shll
adc
test
jae
sub
ret
jae
es
mov
add
push
pop
inc
jns,pn
dec
dec
push
add
pop
or
push
add
rorl
add
outsl
inc
je
cld
push
insb
dec
and
aad
loopne
add
rorl
test
mov
xchg
pop
or
mov
lock
sbb
inc
pop
je
insl
mov
int
or
cmp
out
jp
aam
ret
and
dec
cwtl
adc
cmp
pop
xor
sbb
add
aas
sbb
es
int
cmc
jns
clc
call
dec
mov
out
xor
ret
repnz
dec
xor
add
stos
bound
xorl
jge
add
jnp
es
adc
stos
and
add
mov
sarb
jo
lock
xor
adc
add
mov
enter
xor
adc
lock
adc
mov
popa
jno
inc
gs
add
adc
enter
xchg
stc
mov
mov
push
sti
jmp
lar
jae
or
adc
popf
pop
add
adc
push
adc
in
je
push
and
pop
add
sub
push
movsb
add
mov
cmp
dec
out
mov
sub
enter
pop
inc
decb
cmpsl
inc
push
sbb
push
in
lods
in
adc
mov
adc
mov
jl
out
inc
sub
ds
cmp
shll
lock
mov
pop
lods
je
data16
outsb
cmp
test
dec
adc
stos
add
push
adc
subl
push
stos
sub
movsl
cmpsb
ljmp
mov
leave
jl
leave
adc
ja
jne
popa
cmp
mov
int
fcoms
push
ljmp
test
pop
jle
push
movsb
pop
mov
cmp
jne
adc
push
sti
push
cmp
jne
mov
add
jmp
push
pop
inc
cmp
jl
pop
pop
das
incl
pop
adc
jle
mov
push
aaa
test
inc
je
dec
or
mov
ret
ret
mov
pop
dec
inc
mov
jp
add
push
loope
adc
inc
add
addr16
mov
test
cwtl
orl
jnp
rolb
add
cmp
les
cltd
into
imulb
sub
or
inc
mov
sbb
add
outsl
shrl
dec
adc
iret
and
pop
mov
or
sbb
or
dec
jne
jl
or
and
sti
pop
repnz
sub
rorl
push
mov
dec
rol
cwtl
jae
fmull
outsb
mov
cmp
sub
inc
mov
xchg
popf
movzbl
push
mov
shr
or
adc
push
pusha
cmpsb
sbb
ret
pop
jp
cmp
int3
jle
jbe
push
jne
test
push
ss
bndstx
fs
mov
sub
dec
mov
pop
add
movsb
pop
subb
inc
or
arpl
nop
test
xor
xchg
sub
movsb
and
call
xchg
into
push
dec
cmp
inc
scas
sub
sbb
inc
mov
cmc
orl
mov
sbb
add
mov
mov
mov
negb
mov
and
jo
popa
xor
pop
or
xchg
xchg
dec
mov
xchg
pop
jno
rcr
popf
xchg
rdpmc
stos
cmp
jg
sti
popf
sbb
daa
push
outsb
enter
sbb
js
insl
imul
inc
pop
shlb
mov
stos
test
mov
push
xor
or
movsb
pop
push
das
mov
loopne
adc
cmc
lea
idivb
adc
dec
test
leave
sub
sbb
stc
int3
icebp
sbb
sbb
loope
or
and
pusha
sbb
fsubrl
sbb
mov
int
or
sbb
mov
aad
mov
imul
scas
jl
jecxz
inc
add
xor
dec
std
push
xchg
xchg
cmp
and
cmp
scas
cmp
js
fwait
adc
call
mov
call
je
out
add
dec
add
pop
add
outsb
cmc
cli
cmp
push
xchg
test
or
inc
incb
lods
dec
mov
and
and
cld
lea
cmp
adc
fs
inc
add
mov
inc
data16
or
nop
enter
nop
pop
and
jmp
inc
mov
outsl
imul
std
or
push
ret
int
adc
push
clc
pop
out
or
sbb
sahf
shrb
or
add
sub
mulb
es
push
mov
sahf
out
call
sub
and
les
cmp
jne
mov
inc
mov
rcr
add
jge
push
cmp
orb
mov
dec
push
sti
daa
inc
mov
xor
add
mov
pop
adc
inc
cmpl
loope
sub
adc
jmp
iret
shl
inc
fnstenv
call
xor
or
jl
jbe
jmp
mov
out
dec
pop
aaa
lea
scas
jnp
imul
aas
jo
adc
push
dec
enter
or
movl
mov
push
test
fnsave
inc
inc
xchg
sub
jb
mov
fisttpl
stc
and
sub
cmp
fiadds
sub
fs
jge
neg
scas
hlt
sub
ljmp
aas
jae
sub
ljmp
sub
mov
sub
movsl
adc
das
lret
jge
push
and
je
add
outsb
sub
adc
cld
shrb
cld
pop
pop
mov
xor
jo
sbbl
jns
inc
mov
clc
adc
cmpl
movsl
push
jmp
add
ds
sub
push
test
or
push
or
mov
shrl
sbb
mov
pop
mov
push
or
dec
subb
iret
or
dec
icebp
jbe
mov
xor
ss
mov
pop
jl
push
sarb
addr16
aaa
mov
sahf
mov
add
push
scas
mov
dec
pop
mov
fcmovnu
out
sahf
jne
aad
cmp
jg
rolb
cmp
mov
xor
filds
sub
jbe
push
xchg
jmp
scas
adc
stos
bsf
aaa
int3
jne
movsb
pop
rcrb
pop
cmp
je
addr16
sub
mov
inc
enter
mov
push
mov
mov
lods
dec
enter
enter
mov
sub
movsl
cmpb
cmp
mov
inc
mov
stc
dec
mov
or
and
insb
and
sbb
inc
clc
or
add
push
adc
pop
mov
in
sub
pop
test
push
das
xchg
cld
aaa
cs
dec
jae
jl
inc
dec
jb
add
pop
pusha
mov
xor
pop
xchg
sub
sti
push
mov
or
mov
mov
or
cmp
inc
cmp
bnd
xchg
mov
mov
jl
sbb
mov
js
aad
popf
imul
sbb
adc
mov
imul
mov
icebp
push
hlt
ss
mov
in
xor
adcl
add
jae
test
or
inc
inc
cmp
pop
jp
jge
xor
std
jne
fwait
inc
shl
or
fbstp
mov
ja
sbb
mov
xor
and
jb
inc
add
orl
mov
cmpsb
test
pop
lea
pop
sbbb
jp
push
sub
xchg
or
mov
xor
mov
and
xchg
cmpb
and
sbb
sti
mov
mov
or
mov
or
and
push
shlb
inc
and
and
je
imulb
fs
and
and
inc
mov
or
sub
add
fnstsw
lret
dec
add
add
jno
jno
lods
data16
leave
sbb
loope
out
xorb
rolb
or
sbb
push
or
add
call
or
push
cmp
jne
fidivrl
xor
add
scas
incb
pop
js
push
add
loopne
clc
fildll
fmull
add
add
out
add
inc
mov
mov
sbb
aas
jecxz
mov
push
addr16
push
aas
ja
push
dec
add
fistps
mov
rol
mov
dec
jne
lret
xchg
orl
clc
or
popa
jb
jmp
testb
add
add
adc
aaa
popa
and
fadd
jne
pop
push
fiadds
xor
xor
xor
add
stos
loop
pop
xchg
mov
dec
sub
das
push
or
jle
shlb
incl
sti
mov
shlb
aam
das
fsubl
xor
push
sbb
testl
xor
scas
push
cltd
idiv
mov
sub
mov
xor
shlb
shlb
xor
ret
insl
or
adc
ret
pop
pop
imul
push
push
push
jne
fstpt
pop
mov
cltd
pop
mov
testl
imul
sbb
mov
notb
mov
gs
or
mov
popf
clc
mov
add
jns
mov
add
pop
hlt
xchg
das
add
andb
data16
push
inc
lret
or
push
andl
pushf
fsubrs
cs
aaa
push
push
lfs
cmp
enter
dec
divb
daa
test
jl
lea
outsb
push
pop
and
stc
in
add
rolb
ja
js
loopne
cs
push
inc
push
jg
outsl
inc
pop
subl
outsl
sti
notb
cmp
jle
sub
dec
push
pop
fldt
mov
negb
add
pop
out
loop
sbb
ja
ss
test
jle
andl
sub
imulb
inc
addr16
mov
inc
mov
mov
xor
fs
inc
sbb
push
mov
adc
incl
mov
mov
add
sub
push
ret
mov
dec
xor
pop
sub
cmp
add
push
jmp
insb
adc
push
push
push
cmp
sbb
fwait
xorl
cmp
mov
sti
shr
cmp
adc
mov
jmp
dec
jne
push
and
mov
std
cmp
lea
in
pop
xor
jnp
and
push
rcl
push
test
add
push
push
testb
inc
push
fwait
pop
sbb
clts
inc
jnp
cmp
add
pop
jmp
xchg
in
add
push
fcomps
movsb
push
cmp
inc
mov
add
xor
mov
inc
xchg
sbb
divl
mov
push
or
push
faddl
stos
shll
clc
sub
mov
incl
xchg
insl
adc
add
add
add
cmp
in
or
test
fcmovnu
inc
lahf
outsl
and
jb
mov
adc
aaa
ds
mov
xor
repnz
and
or
add
mov
lea
sbb
lea
rcll
or
add
mov
and
not
and
or
mov
add
mov
fdivl
call
lods
out
push
add
mov
dec
jle
neg
xor
and
or
add
and
fisubrl
sub
and
or
add
push
and
mov
sub
and
jle
daa
or
pop
pushf
xor
into
mov
push
fmuls
push
fistpll
fisubs
notl
mov
lea
mov
inc
mov
stc
add
das
mov
mov
lock
xlat
and
std
jbe
inc
adc
mov
sub
xchg
adc
mov
int3
or
mov
pop
push
lcall
mov
iret
sub
adc
test
fcmovnu
mov
xlat
xchg
out
mov
fimull
insl
imul
sti
lods
dec
fdivrs
std
mov
out
mov
or
pop
or
mov
fwait
aaa
fcomps
shl
loopne
fs
testl
fbstp
and
or
mov
pop
lods
insb
insl
test
loop
mov
add
push
push
and
and
cmpsb
stc
xchg
mov
loope
shr
lret
mov
mov
mov
and
nop
imul
mov
and
and
adc
lock
jno
xor
cwtl
std
adc
setno
es
mov
sub
cmpsb
mov
ds
mov
aaa
mov
cmpsb
test
es
lds
sub
and
fdivrp
and
pusha
jle
mov
mov
cs
stc
cmpsl
ljmp
push
mov
cld
or
push
testb
lods
mov
inc
jne
pop
xlat
mov
dec
jmp
in
out
inc
mov
lds
pusha
js
xchg
add
mov
scas
sub
adc
fcmovb
jge
mov
jne
lock
repnz
stc
out
dec
xchg
loop
shll
repz
out
mov
lods
insl
rorb
das
mov
mov
pop
inc
jl
cmp
ret
adc
sub
or
loope
lods
fisttpl
int
je
sub
dec
iret
movsb
fsts
loopne
clc
outsb
or
jmp
mov
mov
movsl
cs
lods
icebp
mov
cmpsb
enter
jno
xchg
ljmp
stc
fsubl
push
loopne
pop
adc
int
and
and
inc
stc
in
mov
pop
hlt
mov
pop
aaa
ret
cmp
cwtl
in
or
jns
mov
mov
aad
je
xchg
in
push
divl
jo
popf
or
in
adc
inc
cltd
test
shr
int3
ficoms
mov
jecxz
sbb
or
xor
mov
mov
clc
mov
fwait
test
aam
lret
mov
xlat
ret
add
or
outsl
scas
shll
lret
and
orl
out
jmp
repnz
xor
in
pushf
cmp
cli
clc
dec
fildl
call
xor
xor
rcrl
xor
or
int
cmpsl
push
xor
xor
call
ficompl
xchg
adc
rcll
adc
fcomip
and
or
in
cmp
cs
add
movsb
fistps
in
add
lcall
sahf
aaa
pop
or
test
or
inc
mov
xor
xor
pop
fsubrs
notb
adc
lret
ja
lods
xor
sbb
mov
sbb
cmp
cmp
sbb
jle
sub
or
cmp
ss
push
mov
ljmp
out
fidivrl
mov
ja
xchg
enter
out
aam
out
mov
xchg
sbb
sbb
out
sbb
sbb
popf
xor
xor
repz
aam
sbb
out
out
and
cltd
in
pop
inc
pop
repnz
jl
pop
sbb
repz
gs
lods
les
or
inc
xor
or
jne
testb
sub
sbb
lret
inc
lret
repz
xchg
ljmp
inc
push
or
jp
and
lods
test
and
adc
es
mov
sub
mov
shl
push
xchg
lods
je
xchg
or
js
shll
sarb
aaa
jl
scas
ficomps
jnp
int3
or
dec
jo
jecxz
jp
pop
and
repnz
movsl
cltd
in
jge
pop
mov
jecxz
mov
sbb
fimuls
rcl
test
outsb
xchg
jle
pop
jnp
mov
sbb
jne
jae
sbb
ja
repz
sub
push
jp
pop
enter
adc
add
aaa
mov
cmpb
repz
lea
xor
imul
add
arpl
movd
repz
roll
lods
adc
inc
mov
out
mov
fmuls
loope
dec
flds
lret
sbb
pop
or
pusha
jno
lretw
pop
or
loope
or
loop
push
mov
fiadds
pop
faddl
js
mov
xor
aam
xor
mov
or
add
pop
in
jb
add
lock
sub
fisubrl
sbb
stos
and
xor
shrb
add
pop
push
push
fs
fs
jb
xchg
sbb
stc
jle
adc
add
pop
in
jns
out
pusha
ret
daa
nop
dec
es
mov
shlb
in
xor
xor
frstor
fstl
inc
sbb
or
lret
cmp
and
sub
add
add
aas
jge
into
mov
xor
cmp
insb
cmp
adc
mov
mov
adc
jge
mov
and
test
mov
jl
and
js
sbb
jle
sub
mov
ret
dec
xor
ljmp
sbb
cld
add
add
mov
sarl
push
test
lock
es
adc
mov
xchg
or
inc
dec
jne
jecxz
mov
sbb
imul
scas
jbe
dec
adc
scas
inc
pop
stos
fiadds
push
xor
fidivl
inc
paddusb
pop
jb
push
les
fldt
loop
cmpb
ja
mov
addl
imul
fisttpll
xor
enter
sti
and
cld
sub
and
pop
inc
add
add
enter
sbb
test
mov
dec
xchg
mov
pushl
jo
sub
fsubs
xchg
idivl
push
repnz
sub
and
int
xchg
sbb
clc
movsl
pushf
push
adc
fsts
xchg
rcr
es
negl
adc
sub
stc
pop
push
xor
adc
loope
pop
inc
and
dec
jecxz
adc
and
cli
or
sbb
ret
popa
sub
bound
loopne
inc
xor
in
sbb
lock
add
dec
xor
cwtl
sub
jno
out
nop
sbb
or
or
and
pushf
outsl
push
aad
ds
call
inc
aaa
fmul
push
sub
add
mov
ja
push
inc
adc
add
mov
dec
and
dec
push
sbb
inc
aas
cmp
cmp
movsb
add
and
mov
inc
adc
pop
and
sub
add
cmpsb
or
or
cmp
mov
inc
add
bound
add
sbb
or
jb
jnp
add
jae
xchg
shl
fbstp
test
lret
out
popf
lock
mov
jp
loopne
and
xor
cmp
push
adc
test
and
int
cmp
push
faddl
stc
fisttpl
cmp
js
inc
mov
xchg
jmp
dec
cmp
inc
sub
ja
mov
push
ret
pop
sub
xchg
cmp
xchg
pushl
dec
push
in
adc
jno
pop
add
xchg
xorb
fisubrl
test
xchg
je
insb
inc
adc
notl
fstpt
jns
enter
sub
mov
sub
push
sub
popa
mov
and
or
jb
push
inc
dec
repnz
adc
pop
push
ljmp
sarb
add
mov
cmpsl
sbb
sub
rclb
and
out
jg
adc
addr16
add
sub
add
jge
jne
push
or
or
std
sbb
add
cmp
cmpsl
cli
in
das
roll
sub
jmp
adc
jne
ljmp
dec
jmp
inc
add
adc
imul
adc
setle
mov
orl
dec
or
daa
nop
jb
in
loop
jnp
push
and
lret
or
loope
or
cmp
mov
mov
xchg
pushf
les
lcall
hlt
leave
lock
stc
shrb
sub
add
dec
rcr
es
push
shlb
mov
in
out
notb
push
fstps
push
xchg
adc
pop
adc
je
mov
out
add
icebp
adc
jo
pop
mov
jo
lea
shlb
mov
add
push
add
pop
or
rorl
ljmp
or
adc
dec
mov
test
sahf
and
xorb
fadds
mov
call
andb
ret
in
push
dec
and
outsb
adc
out
clc
xor
mov
add
dec
ds
xor
push
out
lods
jns
jmp
mov
or
add
enter
stos
lock
xchg
xor
dec
and
ret
add
les
clc
mov
xlat
les
jb
pop
jle
pop
popl
push
dec
mov
int3
jno
xlat
dec
push
and
mov
xor
push
lret
mov
and
inc
outsb
scas
orb
jne
incb
xchg
sti
adc
or
sub
jns
add
sub
inc
push
or
add
stos
rcr
sbb
fwait
xchg
das
jle
and
sub
jo
movsb
stos
int
mov
adc
mov
mov
mov
jge
and
outsl
mov
cld
cmp
pop
and
mov
fstp
bound
xchg
dec
je
dec
je
lcall
pop
xchg
mov
shrb
mov
push
enter
xor
sbb
dec
orl
jbe
mov
or
mov
addl
push
mov
push
sbb
xor
mov
xchg
add
ja
ja
out
push
bound
in
loope
adc
and
out
ja
xchg
cwtl
hlt
mov
mov
sbb
cmp
mov
stos
pop
bound
jb
incb
jl
sub
test
sahf
enter
jle
pop
xchg
push
and
lret
into
push
sbb
shrb
xchg
cwtl
xor
mov
add
lret
push
mov
mov
mov
adc
hlt
dec
sub
and
fdivrl
in
adc
adc
sbb
test
adc
or
iret
xor
mov
pop
and
push
jl
cltd
fnstenv
addb
in
mov
and
push
and
push
stc
and
add
cmp
sbbl
inc
cmp
push
pop
xchg
push
xor
enter
push
or
xchg
add
dec
mov
xor
fdivl
call
mov
jnp
je
jo
inc
enter
int
icebp
pusha
inc
cmp
enter
cmp
test
repz
or
cmpsb
cld
and
cli
push
cld
xchg
cld
lret
fisttpll
push
push
les
inc
inc
push
pop
push
inc
cmp
adc
jecxz
sbb
add
ja
push
repnz
pop
faddl
lock
and
dec
pushf
imul
or
leave
adcb
add
push
and
insb
mov
pop
pusha
xchg
enter
add
lock
pop
dec
mov
out
dec
sub
push
or
mov
add
mov
cmp
or
int3
dec
push
cmp
and
and
call
pop
daa
push
mov
dec
pusha
lahf
add
add
cld
cmc
push
mov
insl
mov
add
push
sbb
js
aam
lods
or
call
lea
in
popa
or
aam
fstps
daa
hlt
out
cmc
repz
mov
es
repz
sub
or
aam
pop
andb
std
pop
in
or
lods
xchg
mov
sahf
dec
mov
pop
xor
mov
xor
mov
inc
inc
dec
pop
sbb
cmpsl
or
cmc
es
mov
fstl
pop
or
push
imul
xor
icebp
xor
push
jo
and
xor
inc
int
jae
pop
sub
inc
mov
sti
xchg
or
adc
xor
push
mov
mov
cmc
and
test
nop
xchg
addr16
mov
adc
out
xchg
cmpb
add
fs
sub
add
daa
sbb
mov
mov
fcomps
adc
inc
or
and
sub
ret
lret
or
movsb
jg
add
pop
mov
sbb
push
push
pop
push
lahf
cmp
and
xchg
movb
inc
ds
call
dec
sub
pop
mov
mov
or
dec
sbb
scas
aad
outsl
roll
ret
add
xor
inc
enter
mov
push
xor
sub
fcoms
das
cmpb
clc
bound
and
fnstcw
jmp
push
xor
push
packssdw
mov
pop
xlat
pop
adc
mov
loop
xchg
adc
ret
add
and
or
lea
xor
jecxz
das
loop
movsb
push
aam
adc
sub
dec
clc
dec
dec
xor
pop
push
xchg
xchg
add
es
lcall
leave
pushf
mov
sub
inc
cli
push
inc
dec
outsb
flds
or
push
push
push
cli
inc
jmp
pop
fistpll
mov
push
cmp
mov
enter
clc
push
xchg
insb
aam
add
inc
xchg
jae
bound
push
add
and
loopne
leave
clc
jmp
inc
pop
clc
andb
mov
hlt
test
clc
or
das
sbb
insb
mov
or
xchg
add
xchg
jl
mov
out
dec
test
mov
inc
and
testb
enter
in
mov
add
xor
ret
insb
inc
test
sub
inc
sub
or
imul
mov
and
dec
or
in
sbb
mov
push
les
bound
push
lret
fcomp
lds
ret
mov
sub
push
ret
adc
out
add
nop
scas
push
inc
filds
rcrb
add
stc
imul
lea
rolb
sbb
xor
rolb
daa
mov
jbe
clc
pop
sub
xor
insb
mov
jge
push
stos
xor
sub
sarb
adc
add
pop
and
mov
mov
je
mov
xorb
out
popl
jbe
dec
jl
fnstcw
cmp
out
push
mov
mov
mov
lock
loope
and
int3
sbbl
cmp
jge
pusha
mov
add
jbe
movzbl
add
mov
mov
push
push
mov
lret
push
xchg
add
call
push
lds
cmp
jl
movsb
lahf
lods
push
lret
push
stc
mov
mov
lods
sbb
or
mov
adc
push
push
adc
iret
pop
add
mov
xor
jecxz
pop
cwtl
movsb
loope
sbb
mov
cmp
xor
sub
sbb
add
add
jb
mov
and
or
ljmp
adc
sti
or
push
or
jmp
push
adc
pop
jg
pop
push
icebp
add
aad
shlb
add
flds
nop
lock
int
lock
mov
push
jbe
mov
filds
mov
mov
ffree
call
incl
mov
mov
fimull
fiadds
aad
adc
aad
bound
jmp
outsl
inc
xchg
js
paddd
sub
dec
fstpt
adc
add
test
inc
fsubl
add
sbb
adc
adc
mov
jge
adcl
or
inc
xor
movzwl
or
xchg
imul
or
sub
addl
jne
loope
rep
pop
je
sub
jbe
push
aaa
sbb
sub
sub
push
push
subl
cmp
pop
je
pop
add
sub
push
mov
or
and
push
int
pop
rcl
xor
mov
sub
rorl
add
cwtl
int
or
mov
cmp
call
push
sub
out
mov
pop
xor
mov
mov
fsub
addl
sub
cld
mov
mov
adc
leave
outsl
addl
pop
and
inc
or
sub
je
shrl
mov
xorb
aam
int
xor
idivb
popf
cmc
jo
mov
nop
rorl
jns
pop
adc
je
fmull
inc
pop
add
sbb
fisubrs
mov
aaa
sbb
sub
push
xor
mov
insb
enter
mov
stc
fadds
fs
cmp
jb
push
cmp
jno
dec
ss
push
adc
dec
ret
mov
xor
push
test
xor
outsl
movsb
mov
push
and
idivb
add
lods
xor
inc
ss
shl
stos
add
mov
adc
add
sub
paddusb
push
inc
cwtl
push
sub
lcall
or
dec
sbb
add
pushf
out
xchg
cs
sub
dec
movsb
or
mov
jmp
mov
mov
adc
mov
or
mov
sub
insl
pop
rolb
add
pusha
inc
jns
xchg
jbe
leave
add
scas
cmp
clc
adc
arpl
lea
mov
test
jne
iret
cmpb
dec
mov
pop
add
jno
inc
push
inc
xchg
test
sti
add
add
das
add
fstps
scas
push
outsl
mov
stos
aas
push
push
dec
mov
push
and
cmp
xchg
jnp
aas
inc
mov
mov
add
dec
sbb
fcomp
adc
push
push
lods
subl
mov
insl
rcrb
pusha
add
dec
popa
xchg
mov
or
leave
loopne
data16
inc
sbb
sbb
mov
add
xchg
ss
add
push
push
jae
arpl
inc
add
push
adc
or
mov
pop
mov
jmp
mov
subb
xchg
test
cli
loopne
add
loop
stos
ja
and
or
mov
xor
sbb
adc
in
pop
pop
filds
hlt
setne
push
shl
lea
adc
lods
in
dec
test
add
dec
aam
pop
in
adc
push
in
movsl
cs
sbb
sub
or
xor
scas
mov
sahf
adc
pshufw
or
mov
mov
lmsw
movsl
sbbb
jge
push
pop
adc
sbb
mov
pushf
or
dec
or
jl
clc
or
adc
notl
adc
and
adc
pop
mov
dec
cmp
and
iret
shll
test
aam
or
std
loope
loopne
jmp
icebp
call
addr16
push
shrl
cltd
or
mov
xchg
push
adc
rcrb
adc
pushl
adc
or
sub
push
or
out
rcr
push
sub
mov
out
aaa
lock
and
fisubrs
pop
fisttps
sbb
push
leave
sbb
or
je
insl
popa
test
lds
inc
mov
xchg
add
les
fmull
sub
jmp
dec
push
sub
push
jae
xchg
addb
adc
xchg
es
arpl
push
popa
mov
pop
addl
mov
push
mov
jmp
cmp
lea
push
xor
add
imul
lcall
mov
test
rcll
xor
mov
pushf
mov
add
push
mov
mov
and
push
add
and
inc
cmpsl
xchg
sbb
lods
xor
mov
mov
sub
inc
mov
rcll
pusha
add
jg
stos
cmp
jne
testb
je
adc
mov
or
mov
adc
inc
push
jg
mov
xchg
or
sar
pop
mov
or
call
aas
rcll
or
cld
pop
adc
mov
sti
push
cwtl
xchg
arpl
mov
call
jge
sbb
sub
xchg
add
adc
or
int
mov
mov
fiadds
and
stos
mov
mov
mov
pushf
and
dec
out
out
push
lds
int3
push
jne
adc
pop
fistpl
sbb
jnp
lahf
push
iret
lcallw
sub
or
fldcw
ds
adc
pushf
je
outsb
fbld
push
dec
adc
pusha
push
add
dec
rcr
js
xor
into
add
movsl
arpl
popf
cmpsl
jae
add
in
mov
or
adc
outsl
push
inc
test
aam
push
push
sbb
inc
mull
xchg
cmp
sub
adc
xor
inc
movsb
sbbb
or
lea
adc
sbb
dec
addb
pop
ss
pop
jecxz
add
and
adc
xchg
in
mov
int3
aas
test
icebp
and
nop
sbb
or
add
pusha
outsl
mov
add
jge
in
cmp
int3
fbld
fmuls
mov
pop
sbb
or
cli
loope
repnz
je
lods
add
sub
aad
adc
jnp
and
and
ret
addb
lea
xchg
sub
jo
push
es
cmp
int
jmp
mov
jne
leave
or
cld
int
mov
xchg
or
xor
add
push
rcl
adc
cmp
push
enter
adc
and
in
and
test
rorb
add
nop
jmp
xchg
clc
int
pusha
daa
or
push
dec
xor
enter
cmp
add
int
xchg
shll
jns
call
sub
sub
fs
or
and
inc
incl
mov
push
incb
mov
orl
mov
or
pop
cld
mov
push
repnz
inc
or
adc
jl
and
adc
cmp
lar
xor
cli
or
inc
orl
push
incb
out
and
sbbl
push
rorb
inc
add
bound
push
cmpsb
sbb
mov
lods
out
pop
mov
adc
jmp
and
adc
leave
inc
lods
push
lcall
xor
lods
xchg
dec
dec
enter
aam
mov
nop
jo
or
xchg
andb
movsl
pop
push
push
pop
push
sub
gs
inc
or
cli
scas
cmpb
inc
push
les
push
test
push
cmpsl
call
dec
enter
add
inc
lock
inc
rcrb
test
inc
mov
cmpsb
mov
adc
lcall
pushaw
push
cltd
jb
rclb
adc
adc
push
fldt
cwtl
sbb
mov
fadds
hlt
les
cld
inc
sbb
dec
cmp
mov
inc
in
or
sahf
fcompl
repnz
cmp
mov
xor
stos
enter
xor
mov
cmp
cmp
sbb
fucomi
std
je
cld
jo
xor
fstps
push
add
xchg
lods
incl
and
cmp
aaa
fwait
unpcklps
fiadds
adc
jo
adc
outsb
and
xor
hlt
std
jbe
mov
add
aam
insb
mov
adc
xor
sbb
dec
fdivl
push
push
push
sub
push
cmpsl
mov
mov
stc
imul
popa
pop
mov
adc
push
js
jmp
inc
mov
lods
or
xchg
pop
lret
inc
or
push
or
lods
lahf
jle
cmp
loop
inc
add
js
leave
xchg
or
pop
add
es
add
jb
shlb
lods
loopne
test
or
pusha
push
icebp
je
jns
mov
dec
inc
data16
loopne
test
adc
inc
mov
fs
mov
or
cmp
jl
das
and
popa
or
ja
and
test
sarl
adc
icebp
and
dec
pop
sbb
leave
and
cmp
fldl
push
pop
in
out
ljmp
fidivrl
add
je
inc
cmp
popf
add
divb
inc
cmp
jb
push
js
sub
adc
sub
repz
pop
mov
adc
or
neg
out
sahf
popl
pop
xor
jne
mov
mov
mov
xor
es
pop
adc
sbb
xchg
addr16
lea
lods
pusha
mov
inc
push
mov
sbb
mov
movsb
mov
pop
into
add
loope
insb
mov
sub
xor
dec
push
test
insb
loope
in
jb
clc
imul
sbb
pushf
iret
aad
cmp
add
jge
stos
add
and
repz
mov
cmp
jl
mov
pushf
je
push
cwtl
hlt
arpl
mov
pop
add
int
lea
jmp
mov
mov
mov
mov
jno
add
dec
jecxz
xlat
or
aaa
add
leave
jbe
xor
inc
and
xchg
mov
pop
lea
pop
or
inc
cmpb
xlat
xor
mov
xor
divl
clc
test
jl
je
stos
test
aam
rcll
adc
test
sbb
and
sub
cwtl
push
pop
mov
je
sub
fcoms
sbb
mov
push
inc
mov
mov
sbb
fsts
and
popa
popa
pop
arpl
hlt
cmp
mov
sahf
pop
push
mov
rcll
shlb
cmp
inc
mov
pop
or
scas
or
sarl
cmp
std
inc
cmp
jmp
imul
jecxz
mov
push
int3
sahf
cmp
inc
pushf
adc
adc
pop
movsl
jp
add
sub
sub
xchg
dec
push
scas
jae
adc
ret
adc
sub
adc
push
xor
cwtl
dec
aam
arpl
push
adc
fadds
cmp
cmpsl
inc
xor
lcall
lahf
insb
mov
or
mov
dec
fdivrl
ret
mov
push
dec
cmp
and
je
adc
mov
mov
outsl
pushf
int3
push
cmp
or
mov
out
dec
ja
test
push
push
insl
or
dec
jns
jmp
push
and
add
xchg
cmp
loope
mov
inc
jmp
fidivrl
sub
jg
push
cwtl
loop
sbb
jne
add
sbb
sub
sbb
in
xor
jg
or
sub
or
or
pop
cmp
testl
inc
cmp
mov
lock
hlt
sbb
push
xorl
mov
out
sub
stc
sti
subl
pop
test
testb
mov
add
inc
xor
int
add
xor
daa
in
xor
rol
jb
cmpsl
inc
jb
les
add
push
enter
push
mov
lods
sub
push
sbb
push
push
insl
jbe
icebp
sti
daa
sbbl
pop
sbb
and
stos
call
dec
or
push
sub
into
movsl
and
mov
and
pop
jp
sub
push
aad
cld
je
add
adc
mov
add
push
xchg
mov
arpl
or
cltd
fsubrs
add
inc
or
xor
pop
pop
mov
clc
nop
push
push
cmp
push
icebp
and
add
mov
push
sbb
stc
outsl
or
pop
mov
cmpl
or
cmc
fildl
push
inc
cmpl
fiaddl
add
mov
adc
addr16
dec
fimuls
push
mov
test
dec
fadd
test
addb
xor
xor
clc
mul
andl
push
lahf
adc
xchg
dec
adc
std
mov
insl
fcoms
xchg
add
sub
pusha
adc
or
lock
jo
push
cmp
pop
xor
ljmp
sub
movsb
or
mov
pop
sbb
cld
mov
aas
push
push
mov
pop
mov
add
push
pop
movsl
mov
test
sub
inc
mov
add
or
or
lds
adc
sbb
jne
aam
dec
shll
sti
mov
imul
sbb
adc
aaa
imul
mov
ficomps
testb
jne
pop
mov
sbb
cmp
inc
stos
insb
mov
inc
jp
mov
push
subps
dec
sbb
or
pop
repz
out
sbb
dec
dec
mov
mov
repnz
mov
hlt
and
sub
adc
sbbb
and
adc
jge
rolb
sbb
insb
sar
fnstsw
test
xor
mov
sbb
repz
sbb
jne
mov
or
mov
scas
sub
movsb
jp
adc
inc
int3
out
lock
push
adc
out
push
cmp
adc
les
popa
xchg
orl
ja
jmp
adc
test
xchg
adcl
setg
dec
inc
pop
sbb
mov
sbb
iret
movsl
xchg
inc
out
sbb
sti
mov
sbb
xchg
mov
adc
and
insb
adc
push
les
inc
push
shrb
xor
sub
xchg
imul
ja
negb
xchg
fimuls
pop
mov
fsubrs
inc
xlat
or
push
push
cmp
pop
pop
or
xor
fmuls
movsb
mov
aas
je
nop
int
cli
sar
adc
mov
loop
pop
dec
ret
testl
adc
loopne
cs
push
and
dec
jae
cli
jo
daa
push
test
testb
jge
xchg
jle
orb
leave
pop
pushf
std
fnstsw
cmpb
shlb
std
test
lea
lds
and
pop
mov
in
or
mov
push
mov
stc
add
xchg
cld
xchg
push
jo
jo
jg
inc
mov
gs
xor
push
loopne
lret
lods
xor
mov
sbb
sub
mov
gs
dec
testl
fnstenv
xor
mov
out
scas
pusha
enter
xor
popf
adc
pop
push
flds
pusha
or
hlt
ja
jno
stos
xor
sub
test
mov
arpl
imul
cmp
jae
bound
or
mov
adc
xor
fstps
addb
xor
int3
fdivl
sub
mov
fistpll
sub
dec
xor
dec
adc
divl
xchg
mov
imulb
inc
mov
xor
or
std
lock
nop
add
pop
or
and
mov
addr16
push
dec
add
outsl
dec
push
sar
or
add
cld
flds
lret
xchg
in
or
sbb
dec
icebp
insb
sub
sub
ret
out
clc
inc
ficoml
pop
cwtl
dec
xor
insb
sbbb
inc
cmp
enter
and
or
mov
adc
nop
push
dec
push
xchg
xor
or
xor
push
xchg
push
push
pop
orl
adc
pop
xor
daa
push
fcoms
xor
repnz
lock
std
adc
jmp
cmpb
or
lods
and
push
fwait
popa
jns
pop
je
xor
into
aaa
xor
cld
unpckhps
je
call
add
mov
imulb
sbb
add
adc
xor
jl
pop
mov
add
mov
xchg
sub
cmp
adc
add
ds
add
std
jle
mov
lahf
adc
mov
sahf
or
xchg
add
adc
mov
and
sbb
push
adc
aas
xchg
add
out
sar
out
or
cmp
pop
call
test
fldl
dec
adc
xchg
pushf
sbb
add
adc
cld
cld
adc
orl
adc
sub
push
adc
clc
sbb
ss
push
xchg
test
cs
mov
inc
cmp
push
movsb
imul
mov
lods
and
mov
adcl
mov
jg
cmpsb
loopne
jo
jge
mov
enter
mov
xchg
aaa
insb
das
or
testb
adcb
andl
insl
loopne
add
test
and
add
movl
test
cmp
mov
inc
loopne
insb
movb
out
mov
mov
add
push
enter
icebp
leave
mov
fbstp
bound
idiv
push
pop
pop
adc
pop
lea
jne
sbb
pop
cmp
push
mov
mov
bound
push
push
mov
push
adc
mov
js
xor
mov
push
cwtl
push
xor
scas
xchg
scas
push
sbb
xor
dec
sbb
mov
addb
mov
mov
dec
call
cmp
mov
hlt
in
cmp
ds
fisubrl
arpl
out
sbb
es
xchg
mov
add
add
jg
cmp
sbb
pop
in
jge
mov
push
std
orl
sbb
mov
mov
push
push
scas
pop
jecxz
movsl
ret
cmp
sti
pop
sub
add
jne
pop
mov
sub
cs
mov
notb
or
push
sbb
push
std
lcall
pop
test
xchg
sub
jns
adc
push
pcmpgtd
sub
jge
cmp
lahf
pop
adc
jmp
enter
mov
pop
cmp
cmp
lods
push
jb
xchg
subl
repnz
adcb
loope
xorl
or
mov
imul
mov
ja
and
push
test
rolb
das
mov
sub
adc
call
dec
repnz
inc
fisttpl
xchg
adc
mov
xor
cmp
mov
ret
jg
pop
incb
stc
cmpl
mov
ds
in
mov
mov
daa
jns
in
dec
popf
mov
mov
adc
loopne
mov
mov
inc
test
or
pop
add
cmp
enterw
ret
loopne
xchg
add
lock
mov
adc
add
or
jbe
pop
push
jmp
je
jmp
cli
jns
pushf
js
ret
dec
lock
cs
sbb
out
pop
rol
sbb
mov
cwtl
cmp
fsubl
jbe
mov
out
adc
pop
or
push
push
xchg
dec
sbb
xchg
pop
shll
cmp
stos
and
add
nop
pop
adc
cld
insb
push
add
or
adc
int3
mov
sbb
arpl
out
push
aam
xchg
inc
push
xor
sbb
sub
mov
push
sbb
xchg
pop
push
push
add
adc
mov
jg
adc
fisttpl
mov
faddl
mov
sbb
push
lds
sbb
xlat
inc
fimull
mov
adc
or
ja
das
jle
add
sahf
iret
cmp
rcll
int
add
mov
adc
push
mov
test
adc
imul
aaa
pop
push
addr16
loope
mov
sbb
nop
fdivl
aad
bound
ret
jg
mov
push
mov
or
pop
in
adc
inc
add
cltd
in
push
pop
push
xor
adc
sub
add
daa
pop
xor
lea
cld
clc
cld
mov
xchg
mov
mov
add
push
or
pusha
je
shrb
push
mov
or
ret
lods
add
adc
stos
add
push
nop
add
leave
movsb
fsub
xor
push
lea
ds
int
jle
push
push
test
mov
mov
out
mov
fstl
sbb
je
and
cmpl
test
fwait
repnz
push
or
fcoml
inc
push
sub
or
dec
xor
fdivrl
pop
ja
je
inc
inc
jmp
mov
cmp
push
lret
inc
cld
jl
dec
add
pushf
jnp
adc
cmp
and
push
mov
hlt
or
repnz
add
adc
inc
mov
push
jns
popl
push
decl
mov
leave
fadds
add
fadds
mov
sbb
or
mov
repz
int
addb
pop
mov
fnstsw
lea
lds
bound
out
ss
outsl
push
add
push
popa
sbbl
fstp
int3
mov
ljmp
sub
outsb
xor
and
sbb
xchg
cmp
adc
das
insl
add
sbb
les
daa
sarl
or
pop
dec
mov
or
and
pop
mov
mov
test
dec
sub
hlt
test
ss
cmc
dec
cltd
clc
push
sbb
pop
inc
pop
mov
push
push
and
sbb
push
cmpsb
negb
lock
or
mov
cmp
cmpsl
push
jne
add
jecxz
push
pop
imul
inc
inc
add
and
insb
faddp
hlt
add
lods
mov
in
in
decl
ret
hlt
jl
push
js
in
mov
testb
fsubrs
and
enter
hlt
push
adc
add
adc
add
pop
je
lock
sti
jno
mov
divb
mov
addl
jecxz
push
xor
xchg
in
adc
and
xor
enter
hlt
add
cmp
add
in
lret
cmpsb
pusha
push
imul
add
push
rcll
imul
mov
push
pop
ss
adc
test
jecxz
push
rsqrtps
sti
lea
jmp
gs
cmp
icebp
aas
xchg
call
sbb
pop
fnsave
iret
enter
dec
pushf
fidivs
pop
pop
mov
jl
cwtl
prefetchwt1
std
in
push
sub
add
dec
pop
je
and
xor
ljmp
lods
sbb
push
and
popl
inc
outsb
add
add
lods
mov
in
outsb
imul
push
imul
sbb
and
testb
pop
mov
jae
fsub
or
cmpsb
inc
mov
std
sbb
sti
push
cmp
push
rclb
or
adc
cld
or
adc
push
sbb
hlt
pop
xchg
lea
mov
xor
add
movsw
jae
cmp
lret
fcoml
int
insl
add
int3
push
into
cmp
cs
mov
fcompl
gs
xor
mov
fdivs
arpl
arpl
comiss
ror
add
rcrb
inc
clc
shl
or
jae
cmp
jo
inc
mov
insl
call
sbb
cltd
lods
addl
sbb
loopne
lea
cmp
jae
sbb
negb
sahf
sarb
repz
mov
jg
add
mov
pop
arpl
lds
or
jbe
cmp
jb
mov
inc
mov
sbb
rol
frstor
and
or
xor
cmp
testb
push
mull
je
or
nop
mov
adc
iret
inc
aad
test
mov
cmpb
sub
or
das
inc
pop
push
xor
out
mov
pop
xchg
pop
daa
mov
and
adc
and
push
xchg
loope
add
jbe
mov
cmp
gs
mul
cmp
bound
mov
push
cmp
je
add
je
pop
dec
outsl
inc
jbe
mov
jb
jo
cmp
sbb
xlat
insl
and
adc
jbe
inc
movsl
ret
add
adc
fldcw
add
adc
push
push
sbb
sbb
add
mov
pushf
int3
rorb
call
xchg
mov
cmp
clc
and
or
in
and
rcr
fistps
in
inc
add
nop
and
push
mov
and
fistpll
mov
mov
mov
sbb
mov
pop
jae
mov
adc
lea
push
sub
inc
mov
push
mov
inc
dec
out
insb
or
insb
mov
dec
pop
repz
sahf
adc
cmp
adc
clc
popa
add
fidivs
cs
jbe
adc
jbe
push
mov
mov
mov
cwtl
and
jl
in
ljmp
stc
and
orb
je
or
lock
xchg
xchg
sub
imul
int3
inc
shlb
in
test
and
add
dec
hlt
inc
inc
xor
xor
nop
daa
jns
sbb
or
jg
cmpsb
in
mov
mov
dec
cmp
cld
movb
cwtl
mov
push
fnsave
mov
sub
dec
outsb
push
addb
adc
loop
add
and
lods
inc
xchg
addl
sbb
inc
lahf
xchg
inc
sub
inc
cmp
inc
nop
lods
cmpsb
push
mov
push
jns
loope
adc
and
or
clc
mov
sarb
cltd
scas
in
cmpsl
das
add
sbb
nop
stc
xchg
mov
jnp
loopne
cld
pop
je
cmp
jne
add
jne
lock
push
xchg
xchg
sbb
jne
or
mov
push
adc
outsb
mov
and
xor
icebp
or
jnp
jne
leave
or
cld
pop
aaa
or
push
cmp
es
lret
xor
repnz
rcll
jecxz
and
or
pop
and
or
add
xchg
or
lahf
push
lods
push
push
push
push
pop
xor
mov
pop
inc
je
jbe
jp
fcmove
pop
ret
nop
inc
jp
add
adc
pop
idiv
or
sbb
nop
or
das
and
and
inc
aam
and
push
out
xor
jne
mov
push
and
inc
jo
daa
cmp
xchg
stc
sbb
add
and
and
jae
add
inc
dec
fldcw
in
in
add
lret
pop
inc
sub
dec
insb
stos
in
in
in
mov
scas
in
daa
push
addr16
inc
in
or
fidivs
pusha
fwait
push
pushf
rcrl
addb
fs
daa
xchg
ds
dec
sub
pusha
cwtl
out
popf
xchg
daa
mov
test
push
pop
and
lret
pop
add
and
adc
push
xor
testb
mov
repnz
iret
push
mov
sub
mov
push
or
push
adc
je
stos
mov
push
ljmp
dec
in
sub
jl
sub
call
es
test
int
mov
dec
mov
addw
adc
sub
jo
dec
add
sbb
sbb
or
mov
push
xchg
fwait
add
push
cmp
data16
mov
fstl
scas
mov
into
add
out
cmp
pop
push
jle
push
or
xchg
subl
adcb
sub
push
cli
jae
jb
aas
inc
cmp
add
mov
jp
push
jl
aam
fnstcw
mov
sbb
out
nop
sbb
fsubrl
sti
and
and
mov
faddl
xor
test
xchg
add
popf
loopne
inc
xchg
xor
jle
stos
ds
jge
add
xor
loopne
add
fldenv
clc
leave
lods
push
and
adc
repnz
push
dec
jmp
mov
xorl
sub
inc
xor
adc
mov
xor
push
sbb
or
loopne
sbb
sub
add
or
mov
adc
aaa
fbld
sti
add
insb
out
push
push
xchg
mov
lahf
sbb
pop
add
xor
adc
add
ljmp
test
push
rcrb
stos
adc
add
cmp
sub
xchg
imul
adc
inc
std
push
push
and
mov
stos
js
int3
inc
out
add
stos
fwait
cltd
in
add
jl
or
sub
adc
sub
shlb
add
inc
or
pop
popf
add
sbb
inc
jne
push
xorb
addr16
nop
mov
dec
cwtl
push
out
nop
in
sub
fsubrs
js
rorl
mov
ss
addl
adc
les
mov
cmp
add
shl
mov
xchg
inc
cmp
arpl
sbb
pop
and
mov
test
pop
xlat
mov
and
jmp
call
push
movsl
mov
inc
call
add
shrb
and
inc
aad
cwtl
pop
addr16
pop
shlb
idivl
idivb
lea
cmp
jae
pusha
jg
mov
or
jmp
mov
sbb
cmp
addl
sbb
inc
mov
pop
mov
je
fwait
imul
jl
sbb
lock
inc
sahf
add
cli
jo
les
cmpsl
jne
repnz
add
sbb
shl
stos
fwait
sbb
dec
lock
aam
pop
lds
inc
aad
add
add
cmpb
pop
mov
pop
sub
sbb
stos
outsb
test
dec
sub
push
cmp
sbb
jg
or
jle
mov
inc
inc
cmp
jne
mov
mov
xor
lret
mov
daa
adc
mov
xor
fcoms
and
and
clc
aam
mov
inc
sbb
in
adc
push
stc
bound
pop
xchg
adc
mov
push
push
push
shlb
bound
test
xor
mov
push
icebp
pop
jg
sub
jmp
xchg
pop
inc
mov
pop
mov
add
mov
sub
into
mov
fldt
adc
sub
insl
imul
add
push
sbb
cld
sub
nop
push
stos
add
int
jp
je
roll
sbb
adcb
add
sub
leave
mov
or
sbb
push
add
ja
sbb
mov
xchg
sub
mov
add
lds
cltd
sbb
jp
mov
fbld
inc
jecxz
jns
call
in
inc
and
rclb
pop
test
and
imulb
dec
xchg
lods
in
ss
add
push
or
aas
movsb
shll
mov
mov
and
fisttpl
add
and
dec
push
mov
push
fwait
in
or
jb
fnstsw
cmc
movb
or
push
and
adc
testb
inc
mov
fcoms
nop
negl
push
sbb
std
lods
sub
in
loopne
xor
inc
fildl
cmp
push
sbb
jae
lock
xlat
jge
pop
push
in
sbb
pop
mov
mov
push
sbb
hlt
inc
adc
jnp
mov
fldlg2
xor
fwait
scas
lcall
mov
pushf
sbb
push
pop
testl
lods
shl
movsb
add
cltd
mov
add
pushf
or
popf
cmp
push
jg
call
sti
clc
test
sbb
or
lock
ss
in
repnz
mov
mov
or
xchg
cmp
sbb
sti
and
xor
stos
shll
or
stos
stos
je
sbb
lods
sbb
or
jnp
movsb
inc
lods
cmp
jb
ds
adc
movsb
mov
add
mov
xlat
enter
test
pusha
nop
pusha
xchg
mov
lcall
adc
rcrb
push
sbb
xor
out
or
dec
mov
or
push
and
mov
test
adc
cmp
nop
fimull
fistpl
fistpl
fcomps
insl
popf
inc
mov
bound
into
je
push
jge
nop
in
or
pop
jle
je
gs
jg
jge
or
mov
or
jmp
stos
cmp
sbb
loopne
orb
push
test
jmp
cmp
cli
sub
out
cmc
xor
and
cltd
daa
jle
lcall
das
sub
pop
and
popf
dec
sbb
repnz
inc
sub
xor
in
cmp
in
push
sbb
sub
sahf
in
pop
sub
jmp
and
push
inc
pop
mov
jmp
sbb
sti
test
jmp
bound
nop
xor
and
sbb
push
pop
inc
js
fnstsw
inc
es
or
sbb
mov
adc
lea
push
and
je
jbe
mov
or
push
pop
or
add
pusha
pop
bndstx
xchg
out
push
sbb
mov
nop
aaa
dec
lret
jns
cmp
fcoml
and
or
in
sbb
inc
pop
and
and
sbb
push
add
add
lds
mov
ljmp
lock
pop
in
sbb
orb
jge
sbb
sub
cmpb
clc
jne
mov
add
mov
jae
orb
loopne
stos
xchg
dec
inc
dec
repnz
pop
adc
jne
adc
add
stos
jo
lahf
jb
mov
pusha
add
sub
dec
cltd
dec
xor
insl
ret
xchg
push
xchg
insb
xchg
and
push
or
and
imul
sbb
push
add
add
or
push
mov
and
leave
fisttpl
repnz
clc
or
mov
add
lret
jb
mov
dec
add
push
sbb
dec
adc
call
xchg
int
cmpsl
push
nop
xchg
and
xchg
mov
stos
and
out
push
call
rol
or
stos
push
lods
fs
scas
rorl
cltd
out
enter
imul
mov
push
sub
add
adc
ret
iret
aaa
adc
jno
sbb
shr
testl
sbb
mov
call
stos
mov
not
cmp
lahf
daa
push
fcoms
testl
mov
sub
pusha
inc
push
in
nop
std
divl
test
daa
stos
push
cmp
in
sub
mov
aaa
jne
sbb
jle
xor
nop
or
fs
and
dec
and
adc
je
cmp
jb
mov
mov
rcrl
test
sbb
pop
sbb
inc
sbb
notl
out
arpl
sbb
or
in
push
inc
cs
icebp
lret
and
sbb
mov
sbb
jecxz
jp
into
stc
idivl
push
andw
in
push
cld
imull
test
lds
dec
ss
nop
sub
push
inc
add
fsubr
pop
dec
dec
repnz
dec
xor
rclb
sub
or
xchg
push
push
sbb
rol
movl
mov
push
xchg
push
test
jge
sti
push
mov
mov
int
xchg
shrb
push
jo
and
and
std
xchg
cmpl
std
fdivr
fscale
cltd
dec
push
test
sub
std
mov
movsb
ss
lret
cmc
push
repnz
push
push
xchg
rcr
aam
sbb
cmp
ja
fcmovu
aam
cmpl
fnsetpm(287
or
popf
or
xchg
rcrb
inc
fisttpll
add
add
sbb
add
add
cmc
sti
sbb
sbb
stos
pop
or
shl
xchg
xchg
jb
xchg
loopne
aam
jle
shl
sti
stos
pusha
add
adc
in
cmp
sti
shlb
std
movsb
ret
add
pop
add
and
test
push
push
sbb
cld
cmp
sbb
ds
aas
xchg
mov
push
adc
push
lea
mov
jl
mov
pop
push
shll
push
sub
inc
lret
xor
inc
pop
adc
pop
xor
mov
jne
adc
push
outsb
push
adc
pop
mov
jns
add
inc
mov
dec
pop
sub
push
mov
inc
or
sub
push
push
push
and
cmp
push
loope
xchg
push
loop
and
iret
xor
or
rorl
or
cld
std
pop
pop
mov
xor
nop
ss
adc
lock
nop
dec
push
mov
sbb
xchg
je
push
xor
repnz
xor
add
push
or
fstps
repnz
push
pusha
int3
pop
fisttpl
and
add
dec
into
out
repnz
or
xorb
and
add
aas
loopne
and
jmp
stos
mov
pop
adc
pop
xchg
shlb
or
dec
js
sbb
adc
into
jl
outsl
and
test
and
in
xor
pusha
push
mov
cmp
push
or
shlb
int
dec
jbe
adc
enter
dec
div
xor
lahf
dec
or
sahf
jne
and
mov
pop
mov
or
in
cltd
inc
bound
in
adc
clc
push
ficoms
mov
addr16
repz
fistpll
mov
dec
ss
or
loop
sbb
push
mov
mov
adc
inc
xchg
cmp
dec
mov
mov
cmp
xlat
ret
push
jecxz
jb
cmp
test
or
imul
pusha
test
jo
jp
subl
pop
or
loope
cmp
ret
and
or
std
pop
loop
or
mov
clc
mov
mov
out
mov
cmpsb
adc
nop
shrb
fldl
cs
mov
pop
movsb
lods
adc
pusha
divl
sbb
sub
jne
mov
fdiv
fistpl
fildl
imul
std
add
fmuls
pop
data16
sahf
icebp
sbb
or
xchg
je
pop
sti
adc
loope
push
test
mov
aam
mov
and
add
loopne
jmp
adc
aad
xor
adc
out
cld
or
sbbl
dec
outsl
mov
out
or
in
xchg
in
and
imul
nop
cmpsl
out
imul
pop
jae
jmp
and
pop
xor
insl
test
insb
frstor
test
pop
jmp
sub
jo
or
in
push
andl
xchg
xchg
shr
push
adc
add
fwait
and
jle
aam
push
scas
jp
adc
cwtl
add
dec
insb
adc
add
mov
inc
push
add
and
xor
cmp
xchg
push
and
xlat
mov
sub
add
jae
insb
add
test
scas
mov
xor
push
xor
xor
or
sbb
xor
loopne
pop
aam
imul
pop
test
pusha
sbb
jmp
sub
stos
add
das
mul
stc
inc
inc
sub
repz
clc
popa
xor
xor
pop
sbb
fisubrs
sarb
jns
jmp
cmp
cmpl
inc
pushf
andl
leave
lea
sub
lods
sub
and
mov
add
mov
push
push
add
fucom
insb
adc
jmp
rcll
or
and
adc
push
sub
roll
lret
push
arpl
test
inc
cmp
jbe
in
sarl
pop
subl
jns
add
inc
repz
roll
push
dec
dec
push
fsubs
les
test
dec
jb
sbb
cmp
or
or
inc
push
mov
push
push
dec
mov
or
add
push
fdivr
test
int
dec
sub
fldenv
dec
xor
add
push
adc
xchg
nop
rcr
sbb
or
xchg
out
push
adc
mov
add
cmp
insb
xchg
sbb
xor
or
movsb
daa
push
sbb
popf
andb
add
or
mov
scas
add
mov
push
pop
inc
cs
push
aam
and
and
add
fistl
pop
push
pop
test
bound
jne
add
test
into
out
pop
stos
dec
loop
inc
mov
sub
dec
mov
mov
add
pusha
stos
in
sub
jmp
push
cmpsb
loopne
cwtl
test
loopne
jp
jne
inc
xchg
mov
push
adcb
nop
cmpsl
stos
loop
push
int
push
loope
push
aam
adc
mov
out
sub
mov
dec
inc
sbb
insb
sbb
sub
lcall
or
push
insl
sub
or
test
push
pop
add
fnstsw
cld
pushl
pop
out
jl
data16
mov
push
mov
inc
sbb
adc
addl
jle
dec
add
shll
push
mov
xchg
fstps
jbe
pushf
orb
or
testl
push
ss
int
pop
repnz
mov
test
test
lock
mov
inc
sbb
hlt
stos
sbb
cltd
in
sub
mov
add
test
fs
scas
bound
adc
pop
adc
dec
sub
sub
in
cmp
divb
or
jmp
cmp
fnstsw
and
rolb
sub
push
adc
popa
js
test
add
sbbb
and
push
mov
mov
or
lds
pop
imul
add
andl
add
mov
aam
cltd
call
test
mov
sbb
dec
push
data16
mov
jo
ss
ljmp
test
jmp
jnp
mov
push
lret
xchg
mov
push
in
mov
push
or
jbe
xor
inc
cmp
clc
mov
push
add
je
in
add
shrb
int
and
inc
ds
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
mov
int3
int3
and
mov
sti
rorb
das
push
cmp
adc
jmp
out
sub
jae
sub
mov
or
loope
adc
push
stc
inc
ret
pop
mov
and
arpl
test
push
lods
adc
adc
hlt
add
pop
ja
add
mov
sbb
jmp
rcr
or
ja
insl
xorl
sbb
fs
shrl
fsubr
jb
cmp
or
sub
aaa
fnsave
adc
or
fimull
sti
pop
and
adc
cmc
sbb
jmp
fmuls
pop
shr
inc
adcb
fcmovne
nop
xor
enter
adcl
adc
or
add
and
or
inc
jb
jl
dec
sub
pop
jnp
sub
movsl
test
xchg
sbb
sbb
mov
aas
mov
sti
and
sbb
jmp
fnstenv
fcomi
sbb
mov
adc
inc
push
inc
xor
shll
inc
movb
inc
inc
inc
pop
pop
push
push
inc
inc
inc
inc
dec
dec
inc
cmp
inc
inc
inc
cmp
push
inc
mov
insl
or
sbb
or
xorl
inc
enter
sbb
clc
inc
adc
lea
push
ret
push
cld
icebp
in
adc
mov
or
ss
int3
push
or
inc
lods
push
lahf
pop
cmp
push
aaa
mov
hlt
es
shll
ret
addr16
mov
sbb
sbb
add
adc
cmp
andl
dec
jge
inc
or
push
cld
js
mov
jb
jecxz
test
mov
out
inc
mov
or
cmp
mov
push
mov
sub
inc
or
push
lcall
sbb
pop
inc
and
icebp
cwtl
loope
adc
push
push
mov
fcompl
nop
xchg
daa
sub
xor
in
push
rolb
inc
push
sbb
fdivrs
mov
and
inc
jbe
add
int
push
outsl
adc
cmp
imull
add
leave
in
push
imul
popf
pop
pop
jb
jns
lcall
mov
lds
pop
push
push
sahf
insb
add
pop
outsb
mov
add
arpl
jne
sbb
fldenv
dec
or
cmp
ja
pop
add
inc
adc
sub
adc
inc
or
add
push
stc
jo
inc
and
or
add
aaa
dec
shll
cmp
add
cwtl
orl
adc
push
inc
fdivrs
adc
dec
mov
and
jg
add
xor
and
and
outsl
imul
and
je
and
and
mov
gs
inc
adc
push
jb
popa
fs
jo
xor
push
daa
nop
add
lcall
shll
lahf
xchg
cli
mov
lock
xchg
xchg
movsb
pushf
lds
lcall
repnz
mov
movsb
pushf
xchg
out
jmp
std
xchg
mov
mov
ljmp
in
mov
cmc
sbb
mov
xchg
lret
stos
push
nop
std
jg
mov
mov
mov
mov
out
add
decl
cmc
sub
and
loope
outsl
jne
and
ljmp
ss
jae
add
sbb
fs
push
and
pop
and
punpckhwd
ja
imul
push
cmp
xor
dec
imul
mov
insl
fs
and
inc
mov
arpl
cmp
add
jb
pop
xchg
mov
push
fs
inc
insb
outsb
fstp
mov
and
fldt
insl
xor
insb
insl
and
add
adc
dec
packsswb
arpl
insb
mov
sub
dec
filds
sub
outsl
jo
outsb
and
sbb
jbe
adc
and
xor
pusha
mov
push
jae
jmp
push
xor
inc
das
push
mov
or
fistl
fcoms
ja
das
push
jb
jae
gs
fldt
aam
es
or
fcmovnu
arpl
inc
insb
fnstenv
mov
jg
mov
dec
fs
push
add
inc
inc
inc
push
sbb
outsl
and
inc
and
mov
fs
icebp
add
aaa
add
xchg
mov
lret
lock
add
jecxz
mov
sub
cmp
mov
pop
adc
sbb
push
and
sbb
push
push
push
das
xor
xor
fsubr
cmp
repz
insb
jne
jo
jnp
sbb
mov
fcmovnb
insb
mov
mov
sub
jae
popa
bound
dec
popa
xor
push
push
inc
dec
lahf
push
jne
xchg
xor
jecxz
data16
jns
outsl
ja
insb
outsl
bound
xor
clc
pop
sbb
or
in
or
mov
xchg
lods
mov
fdivs
out
das
add
cmp
sub
adc
out
rolb
jns
jne
pop
xor
int
loop
push
add
xor
je
insl
xchg
fiaddl
jae
ss
jb
jae
das
jnp
insl
or
gs
jmp
fmulp
lcall
lods
insb
inc
idivl
outsl
and
sbb
and
mov
push
dec
cmp
xchg
adc
mov
mov
xchg
fs
push
cs
add
arpl
jae
test
popf
mov
jnp
cmp
fcmovnu
inc
pop
push
xor
pop
or
adc
push
jb
push
dec
or
push
sbb
dec
inc
mov
inc
push
or
dec
mov
push
jbe
pop
test
dec
add
ss
dec
sub
jle
mov
pop
inc
inc
push
push
dec
dec
dec
pop
inc
push
add
dec
dec
push
pop
lahf
mov
fistpll
dec
inc
inc
pop
inc
pop
pop
pop
inc
push
dec
add
push
push
inc
inc
jbe
mov
dec
pop
dec
push
sbb
dec
push
sbb
xchg
lods
cld
in
dec
dec
dec
push
inc
inc
dec
sbb
popa
out
test
inc
push
or
dec
cmp
push
push
pop
js
xlat
xor
outsl
inc
inc
dec
fwait
jge
push
inc
adc
dec
push
dec
mov
dec
push
jb
lods
popa
jae
gs
add
or
push
icebp
mov
inc
js
ja
imul
and
mov
rcl
pop
mov
add
aaa
pop
mov
out
addr16
and
pop
arpl
data16
sbb
iret
fs
sub
ja
cmp
sbb
in
push
sti
jae
pop
xor
xor
push
dec
sbb
mov
fisttpl
jle
or
push
fs
inc
loopne
aas
sbb
sahf
jbe
test
in
xor
inc
inc
ficoml
mov
adc
insl
out
lock
mov
add
imul
jne
dec
mov
push
nop
jae
mov
das
jo
inc
jne
dec
int3
mov
add
push
xlat
dec
or
push
dec
inc
rcpps
jbe
andnps
push
or
and
or
cmp
popa
and
bound
add
jp
addr16
addr16
arpl
push
lret
inc
outsb
scas
rclb
out
leave
daa
imul
test
aaa
mov
sub
cltd
or
pop
push
arpl
ds
or
sbb
push
fistpl
jbe
and
hlt
dec
and
xor
cmp
cld
incl
mov
shl
mov
jecxz
pop
pop
lods
inc
ja
pop
jle
and
xor
mov
lcall
xor
xor
sub
insb
mov
sbb
sbb
inc
or
mov
fucompp
daa
pop
inc
xadd
mov
push
and
pop
jae
adc
stos
push
sbb
mov
xor
cs
add
cmp
jo
cmp
cmovg
adc
xor
rclb
xchg
jo
lea
cmp
push
jg
jb
sub
jne
push
lea
imul
test
popa
imul
addr16
push
out
mov
and
pop
psubusb
sub
add
pop
and
add
cmp
jae
outsb
inc
outsb
and
xchg
cmp
loopne
int
cs
inc
gs
insb
xchg
int
cmp
imul
pop
mov
xchg
jb
aaa
inc
xchg
dec
xchg
imul
mov
outsl
popa
xor
outsl
stc
les
pushf
mov
or
pop
mov
cmp
mov
xor
add
xorl
push
ret
mov
mov
jns
insl
imul
mov
add
jmp
fldt
scas
icebp
jp
insb
sbb
aad
xlat
sbb
fs
gs
mov
sbb
jae
add
pop
fisttpl
aaa
cs
jp
popa
or
outsl
add
mov
inc
imul
lods
imul
test
add
mov
cmpsb
subl
jae
call
xchg
or
sti
mov
and
pop
imul
shll
aaa
js
lcall
pop
jae
je
aad
jae
sub
outsl
adc
jbe
lods
loope
loope
jo
jo
ja
jb
imul
or
pusha
jns
pop
je
jb
mov
mov
jno
sub
lods
addl
cmp
push
push
shl
rolb
mov
fisttpll
cmp
movsb
fisubs
dec
jno
popa
idiv
scas
xorl
inc
arpl
add
and
int
in
aad
sub
and
dec
and
pusha
xor
xorb
pusha
xor
add
xor
jg
or
ret
leave
xor
add
ja
lcall
stos
xchg
sahf
add
mov
insb
stos
jb
mov
push
shl
add
sbb
je
sbb
bound
sbb
jmp
add
stos
fcompl
inc
adc
or
popa
mov
inc
adcl
adc
out
add
ret
jne
pop
arpl
jne
cs
jo
jp
inc
repnz
mov
sbb
pop
add
insb
mov
insl
lods
pop
jae
fwait
mov
cmp
outsb
xchg
mov
add
add
arpl
inc
addr16
jb
ljmp
ficoml
jo
jae
add
fdivs
bound
pop
imul
inc
jle
jae
loope
arpl
ret
jg
add
push
xor
mov
fimull
loopne
imul
sbb
cmp
bound
das
sti
insb
in
inc
adc
insb
add
mov
jae
push
jae
mov
push
shrb
popa
add
jns
ss
mov
cmp
push
int
stc
lods
dec
add
fs
add
pop
lods
mov
add
push
outsl
push
lods
adc
outsl
scas
test
mov
mov
jnp
outsb
pop
insl
loop
or
inc
push
sub
jle
xchg
insb
sbb
aas
mov
aam
mov
je
xor
or
push
shlb
xchg
sbb
inc
insb
jo
sbb
int
mov
jp
push
lret
jge
dec
lods
jbe
lods
or
jae
mov
xor
xchg
addr16
or
add
js
lock
add
shrb
insl
jmp
jae
adc
rclb
arpl
addr16
add
rcll
push
popa
pop
mov
mov
sbb
add
jne
sub
jb
jbe
jo
mov
nop
xchg
mov
push
stos
mov
in
add
xlat
xchg
int3
arpl
jo
xor
dec
mov
jp
lods
popf
pop
mov
push
push
inc
nop
push
imul
jbe
test
push
mov
dec
in
rcrl
mov
or
pop
fistpl
inc
insb
sub
mov
add
imul
outsb
jbe
gs
arpl
xor
divl
inc
outsb
loop
add
imul
mov
jae
jmp
jb
cmp
insb
mov
fsubs
jns
arpl
xchg
ljmp
pop
int
nop
mov
iret
js
or
inc
pop
es
je
divb
add
addr16
xor
gs
sub
sbb
jne
cmp
bound
xchg
pop
mov
repz
add
popa
jae
jns
div
fwait
loope
or
nop
add
push
pop
insl
jecxz
cmp
mov
insb
popa
sbb
jecxz
add
shlb
int
add
test
call
pop
mov
mov
mov
jno
sbb
out
jae
jo
push
push
fiaddl
push
arpl
outsb
fmul
ret
insl
outsb
add
push
loopne
dec
mov
test
loopne
gs
clc
inc
imul
enter
jb
xor
test
icebp
je
roll
je
jp
add
push
mov
push
add
das
sub
xchg
addl
pop
int
aam
push
outsl
push
repnz
adc
bt
inc
je
add
je
stc
or
cmp
movsb
mov
into
je
ja
addl
pop
sub
pop
xor
cmp
sub
scas
lock
in
outsl
aad
lods
jae
mov
testl
cs
mov
cmp
outsb
outsl
popf
in
imul
insb
jne
push
stos
insl
add
mov
xchg
fs
ss
add
push
subb
lcall
add
jne
aam
repnz
xor
jecxz
jmp
lret
out
mov
pop
je
imul
imul
inc
fs
dec
insl
rol
mov
mov
fs
cli
test
lods
insl
lcall
mov
sbb
add
or
add
imul
cmp
data16
xor
movsl
xchg
test
js
dec
lods
pusha
xorl
xor
jo
push
dec
jg
fwait
dec
lret
insl
jbe
add
jns
gs
fldt
add
insb
cmp
add
jl
adc
lea
arpl
jb
scas
pop
mov
push
outsb
test
sub
fdivl
mov
push
es
loope
imul
add
jl
icebp
cmp
mov
arpl
jae
sub
fwait
shlb
fldt
imul
jns
push
sbb
pushf
xchg
add
pushf
sub
das
xor
popf
imul
add
xchg
pop
insb
stos
jns
add
or
sbb
or
push
sarl
mov
outsl
jne
ljmpw
mov
mov
bound
cmp
mov
int
mov
add
xlat
icebp
push
push
xchg
lea
fiaddl
arpl
and
xor
dec
scas
sti
mov
mov
pop
and
jae
imul
lods
or
fbld
push
xchg
fs
out
lahf
test
mov
sarl
jp
cmp
jnp
je
aaa
arpl
insb
jge
outsb
add
in
inc
inc
cwtl
gs
insb
js
insl
ja
mov
and
or
jb
outsl
jae
icebp
mov
dec
arpl
nop
imul
clc
jno
sti
add
sbb
add
stos
xchg
movsl
data16
cmp
pusha
mov
sub
jae
lret
inc
cmc
outsl
jo
imul
jo
bound
jae
dec
lods
cmp
data16
sbb
pusha
nop
jns
dec
movsl
push
movsl
insb
jle
jmp
data16
xchg
test
xchg
arpl
jp
test
popa
out
sub
in
xor
xchg
jb
ja
scas
push
mov
popa
mov
or
outsb
jae
xchg
ljmp
jb
dec
push
inc
jae
int3
outsl
aad
and
pop
clc
fidivl
pop
je
jge
inc
adc
add
jb
add
test
xchg
add
pop
cwtl
test
add
add
dec
or
jbe
lcall
jno
add
pop
push
stos
jne
sub
push
xor
test
pop
push
mov
xlat
jns
push
xor
scas
and
imul
push
cwtl
add
roll
bound
scas
pop
pcmpgtd
sub
add
test
xchg
sbb
add
fildll
pshufw
jb
pop
add
pop
xor
jp
sub
in
pop
jp
pop
insb
jb
dec
shll
insb
add
outsb
jb
imul
mov
fwait
jns
add
pushf
js
cmp
out
pop
insl
adc
xor
xor
scas
add
pop
loope
pusha
add
jnp
pop
add
jl
fisubs
xor
cmp
dec
dec
push
push
or
dec
dec
pop
pop
xor
inc
push
push
or
cmpsb
fwait
push
adc
and
adc
js
sar
and
mov
adc
pop
and
loop
jo
inc
arpl
and
repnz
inc
scas
adc
adc
or
mov
add
push
pop
inc
daa
xchg
dec
rcrl
in
mov
mov
xor
shll
pushf
mov
and
inc
and
add
fcoml
enter
or
call
loopne
mov
xchg
mov
in
jecxz
mov
pop
in
sahf
stc
mov
xchg
orb
cmc
shr
xchg
movsb
mov
mov
fcmovnb
movsb
call
mov
lods
stos
scas
xchg
out
arpl
pslld
mov
stos
aad
stc
int3
test
xchg
setl
aad
ret
xchg
clc
mov
shlb
lret
lock
cld
ret
xchg
sahf
add
shr
mov
jecxz
pop
test
nop
xor
sbbb
ret
xchg
add
mov
rsm
xor
ljmp
jge
repz
loopne
xchg
orl
call
push
stos
les
pop
mov
sahf
ljmp
jl
scas
mov
xchg
test
ret
jmp
mov
nop
fists
xchg
cmp
dec
xchg
adcl
scas
xchg
orl
test
jmp
fwait
in
mov
flds
mov
enter
sub
pop
add
xorl
push
inc
fwait
push
addb
dec
rclb
or
add
stc
jb
push
sub
call
mov
inc
mov
and
sbb
pop
imul
das
inc
cmp
sbbl
inc
xchg
jnp
push
mov
scas
lods
call
cmp
jecxz
popa
je
and
and
mov
inc
in
add
push
mov
inc
pusha
add
sbb
cmp
xchg
bound
add
xor
mov
xchg
xor
and
xor
add
mov
ds
movsl
push
mov
std
nop
lods
leave
nop
les
in
xchg
and
aad
stos
lcall
sarl
xor
subl
mov
int3
scas
mov
lret
cmpsb
jmp
push
adc
mov
add
out
xchg
adcb
xchg
nop
xchg
mov
xchg
outsl
mov
loopne
loop
xchg
stos
mov
pushl
sti
shr
int
mov
mov
testb
lcall
mov
adc
mov
xchg
mov
ljmp
xchg
cld
leave
mov
pushf
test
loop
fcompl
std
test
fadds
into
subl
lods
push
test
xchg
xchg
dec
sbb
enter
out
xchg
mov
nop
test
fdivl
sti
psraw
movsb
mov
loope
scas
scas
test
leave
cmc
call
loopne
mov
fldt
call
daa
jl
into
mov
sar
int3
stos
shrl
popf
xchg
push
cmp
xchg
lea
sbb
cmp
xchg
pusha
xor
sub
jbe
mov
insb
lods
add
or
cmp
push
cmp
adc
jp
push
jnp,pn
push
enter
das
or
dec
negb
push
jbe
cmp
sub
in
push
inc
dec
xor
push
push
pusha
push
mov
push
push
mov
outsl
and
dec
cmpsb
cmpb
mov
je
dec
mov
cmp
or
inc
push
inc
push
add
mov
inc
inc
push
or
pop
sbb
push
sbb
adc
leave
ss
xor
xchg
mov
xor
xor
push
add
xor
in
jmp
cmp
and
dec
loop
outsb
mov
aas
add
imul
leave
imul
adc
mov
test
push
jns
mov
inc
inc
inc
inc
mov
mov
mov
adc
lods
inc
test
rorl
aad
aad
dec
daa
clc
sub
in
stc
push
push
inc
xchg
call
xlat
pop
inc
mov
inc
jge
lock
inc
aam
pop
test
adc
outsb
addl
aad
imul
cmc
and
int3
into
pusha
scas
pop
mov
pop
mov
adc
shlb
aaa
aaa
fsubl
cmpxchg
or
mov
push
in
or
mov
xchg
insb
test
je
jecxz
aaa
or
jbe
ret
ss
dec
js
mov
pop
int
sbb
loopne
je
stos
cmpsl
adc
jg
push
push
mov
xor
int3
or
or
dec
jle
cwtl
test
sub
add
fbstp
adc
sub
data16
adc
or
xchg
adc
jb
xchg
pop
rorb
inc
cmp
insl
add
inc
dec
push
and
sub
push
mov
arpl
add
pop
mov
and
and
add
fildl
add
add
cmp
fwait
xchg
sub
sub
sbb
ss
arpl
mov
insb
dec
lods
inc
pop
adc
pop
gs
loop
xchg
sub
fldcw
xorb
lods
and
cmp
dec
sti
push
cmp
push
aaa
or
and
or
rorb
lock
cmp
or
jo
adc
addb
jmp
mov
nop
adc
push
mov
mov
jno
pop
fs
inc
push
cmp
lock
pop
or
nop
movsb
mov
rcll
iret
cmp
pop
push
ja
test
sbb
int3
add
sub
mov
mov
mov
xor
add
push
push
or
cs
jmp
iret
and
dec
push
leave
dec
outsl
testl
inc
gs
aaa
push
dec
dec
inc
jae
pop
mov
or
pop
and
inc
pop
mov
or
and
mov
push
and
push
dec
push
cmovg
gs
mov
outsl
xchg
pusha
ss
mov
mov
movsb
pop
jne
xchg
pop
xchg
nop
andb
insb
mov
arpl
inc
inc
push
jns
js
jp
jo
lods
push
out
pop
insl
jo
jns
jb
mov
sub
roll
sub
add
push
insl
popl
or
push
xor
add
popa
push
mov
or
pop
push
das
mov
shlb
pop
out
mov
cltd
xor
in
mov
insl
addr16
add
repnz
pop
outsb
imul
or
dec
aam
push
xor
fsubr
imul
arpl
xor
ret
push
mull
stos
mov
cs
lods
inc
imul
xor
in
mov
xor
push
xor
add
lea
cmp
sub
or
mov
dec
lret
dec
call
mov
or
sub
pop
inc
aas
in
pop
push
add
dec
mov
in
pop
repnz
xor
rcrl
push
std
xchg
sbb
jnp
sarl
cmpsl
add
sub
pop
jno
es
popa
aas
push
mov
mov
flds
dec
dec
enter
fsts
imul
loope
inc
int3
cwtl
shll
xchg
cmp
push
push
shlb
imul
out
iret
add
mov
and
push
or
push
mov
dec
push
mov
mov
daa
es
orb
insb
fsts
rorb
and
xor
lock
and
inc
jae
and
pop
mov
fucomi
test
and
into
pop
sub
aaa
add
cld
cmc
fs
push
pop
xor
push
imul
adc
jb
js
gs
sub
inc
mov
jae
jno
lock
jnp
dec
pop
jbe
or
test
push
dec
inc
loope
in
xchg
fnsave
enter
orl
cwtl
fldcw
or
aad
orl
or
in
xchg
sbb
outsb
cltd
lahf
int
or
adc
adc
xor
outsl
call
mov
xchg
xchg
or
leave
push
jno
clc
lret
mov
or
jle
dec
cwtl
in
sub
jnp
ret
push
dec
ss
dec
or
fmuls
add
jmp
bound
ret
loope
lock
push
xor
fists
pop
scas
mov
insl
push
nop
xchg
sbb
rclb
fmulp
aaa
or
or
or
cmp
in
xchg
rcrb
popa
flds
in
jae
adc
or
jle
test
xor
xchg
std
fs
push
push
mov
jnp
lret
mov
es
push
inc
dec
xchg
aas
lock
mov
or
sub
mov
movnti
mov
fabs
test
mov
mov
std
ret
popf
enter
scas
mov
jmp
mov
or
cmpsb
lahf
in
mov
fsubs
out
mov
push
das
xchg
jge
adc
jae
flds
call
idivl
hlt
mov
movsl
xchg
mov
outsl
xchg
lret
call
les
pmullw
xchg
xchg
pushf
mov
fucomi
mov
cmpsb
xchg
rol
nop
xchg
pop
mov
in
fsubrl
fsts
cmc
lods
stc
fscale
ret
popf
mov
repnz
cwtl
xchg
repz
imul
sarb
clc
jno
imul
or
add
daa
in
or
imul
pcmpgtd
loop
xor
shrb
movsb
add
ret
pop
addr16
stc
and
es
sub
cmp
and
and
sub
andb
push
mov
nop
das
pop
add
js
xchg
lahf
test
aas
ret
push
dec
sahf
in
mov
add
jl
dec
xlat
or
inc
push
push
pop
and
push
adc
add
add
in
jecxz
aaa
popa
loopne
mov
dec
jle
xor
xor
ss
push
xor
js
sbb
psubusw
sbb
sub
iret
jne
sub
popa
push
mov
and
and
fiaddl
sti
and
aaa
and
jne
call
clc
and
xchg
es
popa
enter
xor
pop
pop
popa
inc
inc
mull
aad
ror
sub
call
mov
add
add
and
dec
out
ret
inc
push
or
push
xchg
and
inc
test
or
lds
sbb
and
push
push
js
add
pusha
add
jbe
aas
xorb
inc
inc
dec
pop
pop
inc
push
insb
pop
push
ja
je
lret
in
jae
cmp
das
fs
mov
xchg
outsb
andl
jae
fstp
or
adc
icebp
add
inc
leave
push
and
jbe
mov
xor
bound
aaa
je
xor
xor
or
cmp
bound
add
mov
mov
xor
test
aad
stos
aaa
mov
inc
popa
or
xchg
ds
call
repz
add
inc
ljmp
or
add
sub
push
jbe
add
add
out
or
cmp
outsl
inc
in
data16
insb
ret
inc
clc
pop
and
and
push
jne
add
mov
or
es
sub
dec
call
mov
daa
add
jne
loopne
push
or
shrb
push
inc
dec
dec
xorl
enter
xchg
cmp
inc
adc
int3
fsubrs
negl
mov
fldt
inc
mov
dec
dec
push
js
lret
loopne
mov
imul
push
and
mov
pcmpgtw
jg
int3
add
lret
data16
stos
jae
sbb
test
sub
cmp
js
mov
add
movsb
test
ret
add
incl
dec
cmc
fildl
and
inc
dec
dec
dec
mov
outsl
push
mov
push
adc
pop
pop
pop
jnp
mov
stos
mov
fisttps
mov
jns
jle
xor
adc
cmp
das
inc
outsl
and
and
cmp
or
sub
loope
fcomps
inc
dec
popf
inc
inc
mov
add
push
cmp
arpl
mov
leave
jmp
add
aas
mov
and
pusha
adcb
push
push
sub
add
jb
or
add
and
addb
jnp
imul
nop
inc
add
jg
mov
or
or
add
and
outsb
or
cmp
std
jg
sar
shrl
sub
mov
call
pushl
push
call
push
mov
shrb
lret
adc
hlt
inc
push
or
aas
cli
xchg
add
mov
push
jg
inc
aam
mov
mov
sub
push
add
inc
fcompl
jp
imul
sbb
call
ja
lea
addl
addl
push
jno
add
mov
jg
pushl
xor
pushl
mov
bound
idiv
incl
mov
repz
je
inc
jmp
mov
popl
pop
popa
ret
pusha
mov
adc
fnstsw
pop
mov
add
cmp
pop
sub
mov
mov
cmp
cmp
std
mov
adc
std
add
mov
mov
fldt
ss
mov
dec
mov
fistpll
push
add
sbb
jecxz
dec
mov
mov
add
xor
xchg
cld
lods
cmp
je
ror
add
jmp
lret
mov
orb
and
mov
dec
or
sub
adc
ret
popa
ret
decb
jnp
or
nop
add
aas
lods
mov
push
inc
hlt
cmc
inc
sbb
stos
inc
pusha
lret
jb
addl
lret
or
add
roll
and
inc
or
and
push
data16
push
enter
nop
add
lret
bound
add
fsubrl
pop
mov
dec
push
dec
das
dec
inc
push
inc
dec
and
pop
jae
add
and
adc
ja
push
stos
cld
push
xor
cwtl
add
popa
daa
dec
and
pop
aam
pop
lods
mov
xor
xor
sbb
xchg
test
add
or
pop
mov
fcmovnbe
or
lcall
push
or
in
mov
mov
add
je
push
push
inc
pop
fbld
push
mov
decl
pop
mov
inc
imulb
jmp
nop
add
fadds
jmp
cmp
inc
mov
push
pop
mov
or
cmp
pop
cld
cmc
sub
or
jg
xor
jne
es
xchg
repnz
mov
or
stc
ja
add
add
incl
jno
jnp
jno
aad
ja
push
xchg
jl
push
push
xor
mov
sbb
test
xor
aam
cltd
add
ss
pop
mov
gs
xor
xor
cmp
mov
push
aam
fsubs
imul
daa
fildll
std
lods
inc
push
lret
inc
push
push
int
test
pushl
mov
mov
scas
jne
add
mov
adc
sub
mull
or
lsl
cmpsb
jmp
or
adc
sbb
push
add
mov
lcall
mov
sbb
adc
dec
pusha
inc
mov
adc
pop
or
jb
pop
and
jbe
jg
call
add
add
pop
push
in
decl
xor
std
int3
inc
fs
mov
pusha
pop
or
fwait
jo
jg
pop
add
dec
lock
call
into
adc
jb
enter
xchg
gs
xor
mov
add
add
dec
push
sbb
xchg
sbb
add
xor
sub
inc
icebp
pusha
pop
add
or
movsb
outsb
dec
cli
fiadds
fadds
outsb
lock
les
xor
sub
inc
ss
mov
and
xor
movsb
xor
xor
jb
xlat
pop
nop
mov
test
rcl
push
rorb
outsl
dec
mov
and
sbbl
or
cmp
das
js
or
jmp
jecxz
sbb
cwtl
xchg
cwtl
dec
rclb
test
daa
sub
push
and
xor
test
sbb
pusha
add
inc
xor
test
sbb
add
jmp
mov
sbb
sub
add
out
aas
bound
ficompl
bound
arpl
adc
dec
add
inc
push
fcoms
rorl
iret
or
inc
add
jae
fidivs
xor
popa
or
frstor
fisubl
jnp
add
adc
mov
sub
or
imull
mov
add
adc
sbb
push
push
popf
adc
push
sbb
cli
adc
enter
cs
incl
dec
lahf
dec
sbb
iret
adc
jge
jl
xchg
pusha
jo
add
jne
test
in
jmp
inc
mov
shlb
push
mov
and
and
or
aaa
xor
mov
pop
out
cld
add
cmpsb
cli
dec
loopne
inc
xor
or
jmp
out
aam
mov
gs
add
add
inc
and
out
sbb
jne
add
or
sbb
jne
sub
add
mov
cmp
mov
sti
pop
xor
js
das
push
jmp
push
pop
or
inc
test
pushl
fsubs
xchg
incb
movsb
in
pop
popa
sti
adc
imul
dec
shlb
dec
or
loopne
cmp
leave
arpl
xor
or
lods
jmp
push
fiaddl
repnz
enter
ficoml
xor
pop
inc
nop
roll
out
push
push
add
adc
pop
adc
dec
xor
add
in
sbb
scas
jl
cmp
addr16
in
fbstp
sbb
or
xor
popa
dec
cs
add
ja
sbb
push
jns
add
pop
add
dec
addr16
ds
or
add
add
popa
sbb
lahf
add
xchg
subl
mov
sbb
mov
outsl
pushf
and
cmpsl
adc
mov
jmp
push
pop
es
and
sti
lea
mov
pop
push
push
sbb
or
rclb
fwait
test
rorb
cmc
and
dec
cmpsl
or
inc
pop
leave
out
mov
and
enter
mov
mov
in
pop
xchg
adc
xchg
and
jo
filds
loopne
fstps
inc
adc
in
or
xor
pop
cmpsb
jmp
xchg
push
iret
or
decb
das
inc
dec
pop
ret
add
mov
lock
mov
test
jns
or
leave
addr16
sbb
jo
smsw
inc
pop
test
xchg
verr
daa
mov
insb
verw
lods
dec
js
test
inc
adc
lahf
aad
stos
in
sbb
jmp
push
add
adc
ja
daa
mov
push
rolb
xor
stos
or
mov
push
sub
or
add
movsl
out
daa
and
xor
add
mov
mov
xchg
es
je
or
pop
inc
outsl
arpl
push
push
inc
test
dec
les
jae
inc
insb
insb
jg
and
je
pop
xor
arpl
lock
xor
jae
pop
lret
add
negl
das
or
sbb
push
jmp
inc
pop
sbb
and
inc
sub
add
jmp
xchg
rcrb
mov
stos
add
inc
push
inc
pop
inc
inc
bound
or
cmpsb
nop
add
data16
adc
adc
or
js
pop
and
adc
call
inc
inc
dec
lahf
lea
imul
sbb
mov
nop
cmpsl
pusha
xchg
cmpsl
cmp
dec
daa
inc
push
nop
or
cmp
and
inc
mov
pop
dec
jne
arpl
add
jae
mov
jmp
push
cmp
insb
inc
mov
pusha
in
loopne
or
adc
jmp
pop
addr16
inc
adcb
inc
mov
adc
mov
mov
cmp
add
ret
stos
inc
inc
and
sbbb
daa
rorb
inc
and
push
mov
push
and
or
or
pop
and
es
cmp
out
fstpt
add
jmp
les
cmpsl
and
jl
mov
dec
dec
lahf
dec
push
inc
dec
dec
inc
inc
push
roll
add
loope
add
popa
faddl
adc
fsubrs
cmpsb
int
cmp
inc
push
inc
dec
roll
mov
enter
sub
add
outsb
pop
mov
js
insb
xchg
xor
jnp
jne
and
cmp
ds
add
stos
mov
cmp
ja
jbe
outsb
jae
and
push
cmp
lods
pop
ret
insb
or
insb
mov
cmpsb
push
cmpsb
popa
jns
and
mov
xchg
jnp
out
sub
das
das
xor
pop
out
jb
scas
ret
adc
adc
rcl
or
mov
mov
mov
adc
mov
mov
mov
xor
aaa
leave
or
gs
xor
mov
test
stc
xor
inc
repnz
jmp
and
cmpsl
inc
leave
and
dec
andb
mov
rolb
addr16
adc
ljmp
add
ret
call
push
lock
add
push
pop
xor
roll
idiv
out
xor
adc
ret
shl
shr
push
xor
add
sub
data16
sub
pop
xor
add
rolb
ja
xchg
fs
add
rolb
pop
gs
jmp
jmp
cwtl
sar
imul
test
enter
cwtl
xor
clc
jle
pop
imul
std
imul
arpl
or
pop
or
xchg
out
xchg
mov
mov
loop
mov
aaa
sbb
out
fisttps
xchg
lret
adc
or
jmp
mov
sbb
stos
jns
imul
cmc
clc
stc
jns
iret
repz
std
daa
add
aaa
dec
add
add
inc
inc
jnp
cmpl
and
and
jns
out
dec
dec
dec
dec
xor
jp
dec
cwtl
lahf
dec
xchg
add
clc
xchg
add
xchg
adc
jp
mov
and
imul
call
imul
dec
shll
pushf
xchg
shll
insb
push
fs
pop
push
push
dec
inc
cmp
xor
xor
adc
add
or
imul
fmuls
cltd
scas
push
mov
xor
pushf
xchg
mov
cmp
cmpsb
imul
jmp
sub
and
jbe
and
adc
xor
cltd
pop
or
fwait
hlt
leave
add
out
imul
push
stc
rcrl
inc
cmpsb
jmp
aam
rolb
les
mov
mov
lcall
je
imul
imul
dec
out
cld
cltd
xchg
or
bswap
insb
or
and
mov
ror
fsubs
enter
rcl
enter
lods
das
mov
shld
mov
daa
mov
out
xor
sbb
jl
insb
je
lcall
dec
dec
inc
push
xorb
gs
mov
dec
xor
sub
push
mov
fists
add
imul
add
in
in
dec
scas
mov
movl
movsb
nop
pop
add
frstor
insb
or
cmpsl
mov
in
mov
push
mov
movl
mov
cmpb
jle
test
add
cwtl
scas
add
push
cltd
decl
mov
subl
outsl
adc
and
cld
pop
xor
add
adc
dec
jo
mov
add
and
xor
outsb
mov
sbb
lret
xchg
mov
add
stos
imul
dec
sahf
pop
xchg
add
add
in
je
push
push
enter
jecxz
adc
addr16
or
fidivl
jp
add
pushf
loopne
sbb
stc
sbb
xor
cmp
sbb
les
ficompl
arpl
out
imul
push
call
mov
cltd
dec
fnstsw
add
out
lret
xorl
mov
dec
pop
mov
xchg
xorb
leave
addr16
imul
push
sub
into
and
xor
mov
push
aam
stc
and
jns
mov
adc
and
xor
add
jb
xor
pop
add
add
pop
pop
and
outsl
or
daa
xchg
rol
push
jmp
nopl
jmp
or
add
test
pop
add
dec
xlat
stos
adc
mov
data16
or
fnstenv
add
pop
jne
imul
inc
xacquire
ret
inc
jg
mov
popa
cmpl
gs
insl
sahf
jno
arpl
sahf
fwait
or
sbb
insl
arpl
lds
mov
out
popa
ss
add
idiv
outsl
imul
adc
mulb
imul
push
xor
pop
cmp
repz
lahf
pop
jne
imul
lret
mov
push
xchg
and
adc
jne
pop
mov
add
imul
pop
jp
mov
dec
push
jo
inc
out
push
pop
push
push
sub
and
xlat
push
out
xchg
mov
out
pop
inc
sbb
repnz
or
fcomp
fs
imul
add
lds
sub
push
cmp
pop
imul
outsl
and
pop
nop
mov
add
jae
mov
cmp
push
or
xchg
mov
inc
pcmpeqb
xor
fildl
xor
sub
ficoml
pop
lds
scas
cs
pop
enter
cmpl
and
and
pop
mov
and
xor
adc
fs
js
and
daa
lods
or
xchg
es
pop
or
xor
adcb
adc
mov
push
pop
pop
xlat
jle
sub
sub
dec
xor
xor
insb
stos
js
sub
in
and
sub
add
or
mov
add
xor
and
sti
pop
xor
cwtl
lods
mov
cmpsl
xor
aaa
imul
rcpps
xlat
das
rcrb
push
mov
and
insl
or
mov
movsl
adc
add
or
mov
add
add
fmull
add
sbb
push
mov
push
xor
je
mov
adc
add
mov
mov
xorb
loop
jmp
add
or
call
mov
inc
inc
jmp
mov
call
popl
cmp
pop
cmp
fists
pop
and
mov
add
xor
lods
xor
rol
jg
decl
imulb
lret
pop
sub
shr
pop
add
sub
or
in
fisttps
push
adc
push
mov
addr16
mov
mov
mov
fidivl
mov
stos
pop
xor
mov
cmp
mov
neg
jg
and
arpl
pusha
pop
sbb
add
or
sbb
stc
add
loop
out
ret
int3
in
push
mov
jl
cld
add
mov
or
shrl
and
ror
jns
or
inc
push
mov
jb
sbb
fstpt
cmpl
push
add
add
stos
clc
add
mov
lods
sub
jg
push
ss
fiaddl
sbb
lret
sbb
mov
or
sbb
add
data16
aam
mov
adc
sbb
popl
cmp
lcall
cmp
shrl
dec
sbb
shll
dec
js
test
sbb
push
add
je
mov
je
push
movsb
push
sbb
mov
mov
jmp
subps
out
or
outsl
leave
loopne
cld
mov
stos
dec
imul
in
in
push
push
push
add
icebp
xchg
es
inc
push
push
mov
lret
fidivl
or
jbe
ja
xchg
jg
test
pop
mov
or
jecxz
pop
pop
xchg
jne
adc
adcb
mov
adc
jecxz
inc
test
aas
adc
sbb
and
xor
pop
enter
cwtl
out
test
enter
add
es
cmp
jle
mov
fwait
cmp
iret
pop
repnz
jb
frndint
idivl
add
enter
lods
mov
inc
pusha
pop
out
fucomp
lods
das
int
shlb
mov
jecxz
add
mov
nop
repnz
jno
fcoms
test
div
out
mov
rorb
stos
lcall
test
mov
adc
inc
add
das
cmp
xor
lret
shrb
jmp
scas
jmp
test
jb
into
cmpsb
cwtl
in
std
ret
sti
mov
leave
and
mov
cmp
mov
test
loope
out
xchg
jae
cmp
das
cmp
test
test
mov
into
mov
jecxz
mov
mov
mov
mov
or
mov
cmp
fbld
inc
ds
out
xchg
mov
sub
add
push
test
insl
pop
push
jl
pop
jo
inc
stos
add
das
ud2
pop
rcrb
inc
cmpsb
sub
cmp
xor
mov
adc
cmp
dec
mov
test
rcll
xchg
xchg
cmpb
outsb
in
cmp
mov
xchg
add
push
adc
mov
shl
les
mov
sbb
out
call
sub
push
or
push
xchg
push
jmp
sub
sub
sarb
cmp
add
or
add
hlt
add
aaa
sbb
je
and
sbb
insb
and
xlat
fdivl
mov
add
xor
pop
or
pop
daa
jge
sbb
xor
jae
and
jnp
xchg
sbb
inc
and
outsb
aaa
xor
and
sbb
test
insb
gs
sbb
adc
arpl
lahf
mov
push
ljmp
arpl
push
inc
xchg
adc
xchg
cmp
in
ret
sbb
insl
push
ret
mov
mov
mov
sbb
imul
mov
faddp
push
mov
sbb
outsl
or
pop
loop
inc
cltd
jnp
xor
inc
cmp
adc
test
xchg
mov
call
cmpsl
adc
xorl
dec
sub
mov
data16
popa
sbb
jnp
daa
sbb
adc
pop
test
out
sar
outsl
std
jg
inc
xor
jp
xor
fs
push
inc
push
addr16
insb
mov
jbe
xchg
inc
insb
xor
pop
push
pop
stos
inc
insb
lds
adc
je
lds
jbe
push
push
sbb
pop
xor
xchg
fwait
xor
ret
push
jo,pn
out
stos
loopne
xor
inc
push
popl
rcrl
or
dec
jo
cmp
or
pop
adc
fstps
test
sub
pop
inc
dec
sbb
xchg
and
push
inc
inc
add
and
lds
push
adc
cltd
stos
mov
xlat
jnp
mov
or
pop
pop
or
retw
xchg
ret
dec
pop
add
inc
inc
cwtl
mov
jae
aad
and
push
inc
test
or
cmp
mov
and
cmp
pop
pop
adc
or
and
into
fmulp
cmpsb
mov
pop
and
arpl
stc
insb
pop
inc
or
mov
inc
lock
cs
stos
mov
das
pop
push
add
push
pop
pop
mov
xor
nop
xor
mov
ja
push
dec
and
sub
sbb
add
jmp
xor
arpl
or
dec
mov
adc
in
gs
gs
arpl
mov
add
mov
dec
push
mov
xor
inc
xchg
iret
in
and
test
outsl
pop
mov
adc
push
icebp
rclb
mov
aas
adc
sub
mov
mov
outsb
or
push
je
and
and
and
pop
xchg
cmp
cmp
lods
fwait
push
push
insl
adc
ret
push
stos
add
out
jo
outsl
pop
push
lds
shrl
push
mov
sbb
jbe
pop
or
jp
aaa
outsb
xchg
call
xchg
pop
ss
jbe
test
jne
and
mov
je
dec
adc
mov
push
push
and
and
inc
cld
pushl
loopne
mov
fiadds
mov
aas
mov
aad
mov
std
lea
fistps
orb
scas
lahf
out
xlat
cli
ficoms
movsb
mov
loopne
shll
mov
mov
lahf
movsl
out
mov
int
pop
adc
fucomi
mov
shlb
lcall
stc
mov
mov
mov
ljmp
lret
int3
scas
test
aas
stc
fisubs
adc
fdivrl
push
fucomip
mov
cltd
sarb
cli
fsubr
xchg
test
incb
pushf
jmp
stos
call
popf
lcall
lret
mov
lods
xchg
lcall
out
subb
shl
movsb
ret
mov
test
cmpsb
out
xchg
and
sti
stos
mov
sti
mov
sti
push
int3
mov
in
test
call
sahf
xlat
stos
lods
test
mov
sarb
add
decl
or
shr
and
pushf
fcompl
mov
stos
lock
mov
mov
xchg
mov
cld
leave
nop
lret
icebp
lcall
sub
test
into
adcl
push
add
scas
lods
xchg
call
roll
push
imul
lcall
call
mov
repnz
inc
xchg
or
mov
fchs
mov
mov
iret
mov
movsb
icebp
pushf
scas
lock
ljmp
xchg
lahf
ret
int
mov
ret
ljmp
mov
mov
aas
stos
ljmp
xchg
fildl
pushf
hlt
movsb
sti
aad
ret
fdivrp
inc
mov
lods
sahf
icebp
mov
loope
mov
fstps
jmp
call
ljmp
jmp
lods
test
loope
test
aad
scas
aam
jg
mov
lods
nop
cmpsl
mov
mov
iret
stc
lret
leave
ret
nop
shll
mov
fcmovnb
clc
leave
nop
mov
xchg
mov
nop
cld
xchg
lahf
enter
icebp
mov
jecxz
mov
pop
cmpsl
xchg
in
iret
test
mov
pop
mov
fcomip
mov
call
aas
mov
fsub
test
xchg
incl
call
mov
stos
cmpb
mov
sti
push
test
mov
xchg
rolb
cmpsl
clc
aam
xlat
cld
ffreep
pushf
ret
jle
cwtl
mov
cli
pop
add
enter
scas
enter
test
or
mov
xchg
ret
cld
iret
mov
scas
test
ffreep
sahf
ret
cld
aaa
dec
mov
pminub
aad
lahf
idiv
ret
stos
cmpl
imulb
mov
scas
xorb
sti
inc
sahf
xlat
addl
call
xchg
aad
mov
sahf
mov
jecxz
movsl
out
xchg
stc
mov
xchg
lods
xchg
nop
fstps
jmp
stos
cmpsb
faddl
iret
out
jmp
ret
sti
outsl
mov
nop
int
daa
in
ljmp
mov
shr
lods
cwtl
in
jnp
fiadds
call
int
lret
cwtl
xchg
aam
mov
shr
xchg
lea
cmpsl
mov
lcall
mov
test
in
stc
pop
nop
jg
filds
lahf
mov
neg
mov
ret
orl
dec
rcrb
cli
subl
mov
iret
mov
xchg
mov
cmpsl
mov
xchg
loope
xchg
into
xchg
adc
scas
pop
nop
iret
mov
in
pushl
pop
andl
mov
subl
mov
das
jge
lock
popf
mov
out
rcl
xchg
hlt
fcmovnbe
out
aam
mov
mov
jmp
fdivp
jg
loopne
mov
adc
sbb
xchg
test
mov
xchg
push
fsubp
xchg
pop
iret
call
test
out
sbb
bound
iret
adc
xchg
adc
jae
xor
sub
inc
pop
insb
arpl
xor
and
dec
rorb
and
mov
xchg
rorl
dec
imulb
push
xor
xor
dec
or
inc
mov
mov
dec
es
or
test
pop
mov
xor
adc
pop
adc
popa
xchg
scas
inc
add
adc
adc
and
xor
jb
aaa
in
and
jae
addr16
dec
scas
cmp
sub
or
inc
add
jmp
in
or
enter
enter
and
es
or
add
mov
test
sbb
mov
push
enter
push
dec
cmp
orl
xor
orl
push
cmp
enter
hlt
in
xchg
pop
nop
inc
in
fsubr
or
enter
enter
and
xorl
xor
fidivrs
xlat
movl
imul
pushf
sbb
nop
xor
and
adc
mov
fldt
pop
jae
outsb
add
sub
cmpsb
adc
xor
cmp
inc
sub
xor
pusha
adc
arpl
daa
add
xlat
sub
int3
pop
push
sbb
and
enter
loopne
lcall
jae
push
fisubl
and
in
cmp
push
and
adc
cmp
jbe
and
dec
lods
imul
push
mov
sub
adc
ja
test
pop
dec
or
xchg
mov
hlt
in
dec
adc
nop
stos
cmp
jp
xor
dec
jne
pop
pop
push
push
jle
lcall
fstps
xor
outsl
decl
lock
push
loop
mov
lock
call
iret
lret
rcl
jmp
and
jmp
adc
test
int3
lret
mov
mov
sbbl
int
hlt
sahf
or
or
int3
lcall
mov
lahf
les
movsb
mov
mov
iret
sti
push
testb
test
int
out
adcl
sbb
xchg
sahf
addr16
mov
clc
in
fdiv
loope
or
loopne
mov
dec
cmp
xor
rcrb
test
stc
nop
jg
aas
and
daa
in
mov
add
adc
inc
sahf
clc
push
add
test
dec
push
pop
movsl
sub
sbb
fdiv
mov
mov
cld
aas
lret
sahf
add
add
mov
add
in
scas
adc
daa
add
add
popa
decl
fdivrp
xchg
jecxz
or
pushl
adc
push
lods
dec
in
add
lods
mov
icebp
mov
pop
cmp
sub
dec
mov
dec
lcall
frstor
mov
call
push
bnd
popf
hlt
stos
test
cs
adcl
push
inc
mov
sahf
jecxz
lock
fldcw
in
test
test
out
cmpsl
std
imul
cmp
mov
sahf
in
mov
test
loope
scas
xchg
inc
in
sbb
pop
xor
insb
jmp
adc
jnp
sti
mov
pop
outsb
jne
testl
pop
sub
cmpsl
cmpl
add
enter
push
add
lahf
cld
aas
pusha
cmp
sbb
mov
add
sub
sbb
inc
aas
inc
push
fildl
pop
mov
inc
das
cmp
pop
andb
sub
inc
push
add
cmp
xchg
add
cmp
mov
loopne
adc
mov
or
sub
inc
inc
inc
xchg
mov
aaa
sub
push
das
adc
mov
dec
mov
jns
dec
mov
mov
jae
enter
and
data16
rcpps
dec
add
insb
mov
pop
jge
das
mov
pop
lret
outsl
xchg
and
mov
dec
or
mov
mov
cmp
adc
xchg
xchg
inc
dec
icebp
imul
jns
push
outsl
push
or
adc
dec
imul
xor
adc
add
mov
imul
mov
popa
jno
adc
fwait
mov
movsl
xchg
icebp
invd
pop
push
mov
and
inc
stos
push
add
push
ror
inc
jne
roll
lods
std
sub
imul
in
xchg
int
push
gs
fsubrp
inc
inc
mov
or
lock
test
fldcw
push
or
inc
mov
fadd
sub
push
push
and
pusha
adc
rorl
mov
or
cmpsl
test
lock
bound
fcmove
jo
inc
adc
imul
dec
mov
loop
int3
add
int3
arpl
or
and
insb
sti
jb
outsb
jge
lods
insb
cmp
or
mov
mov
test
inc
lret
lcall
push
les
add
insl
lret
in
adc
mov
jbe
cmpsl
adc
jl
jnp
sbb
push
leave
push
ret
and
sub
dec
sub
xor
aam
pop
nop
adc
add
aam
rolb
and
dec
lods
mov
int
add
addr16
mov
jne
push
test
and
sti
dec
gs
sub
dec
rclb
sbb
xor
pop
pop
adc
cmp
and
scas
mov
outsb
int3
je
xor
outsb
push
pop
cmovno
push
add
stos
fsub
or
shld
fxch
cli
sbb
pop
addr16
popf
mov
mov
mov
or
js
adc
das
jno,pt
fdivrl
xor
pop
pop
sub
aas
in
sbb
lock
je
ja
jae
pop
fisubs
fldt
adc
or
pop
push
inc
leave
mov
imull
incl
push
insb
push
cmc
outsl
imul
pop
jbe
outsb
ja
testb
pop
sbb
xor
jnp
stc
incb
inc
pop
dec
inc
pop
or
xor
sub
cmp
pcmpgtw
pop
push
or
data16
push
mov
cwtl
fistpl
insb
andl
pop
xchg
xchg
xor
adc
sbb
out
cmp
stos
daa
push
push
arpl
imul
pop
ja
pop
add
leave
jmp
jae
and
arpl
addl
lds
popa
xor
cmp
ret
maxps
imul
insb
fwait
in
enter
out
adc
sub
mov
push
hlt
adc
xor
outsl
mov
mov
or
or
pop
pop
mov
push
loopne
pop
fildl
ljmp
insb
jo
push
rcr
add
imul
ja
je
cwtl
adc
add
gs
xchg
gs
add
adc
xchg
or
xor
gs
xchg
add
or
xchg
gs
or
or
pop
pop
xchg
je
adc
push
push
inc
dec
xchg
test
in
xor
cmp
jae
mov
inc
add
dec
add
ud0
inc
loopne
add
add
fnsave
adc
dec
or
mull
pop
inc
pop
pusha
or
popa
adc
rolb
and
jmp
dec
bound
adc
add
fs
mov
or
mov
dec
inc
adc
loopne
jb
fsts
xor
rcpps
lds
inc
add
es
lcall
test
stc
jle
cs
push
push
cld
or
daa
sbb
pop
pop
pop
add
add
add
add
and
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
