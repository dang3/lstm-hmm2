push
call
ret
ret
add
lcall
adc
push
sbb
mov
ja
shll
pop
es
adc
inc
push
repnz
sub
mov
out
int
rcrb
mov
das
xchg
insl
rolb
jno
dec
ljmp
adc
push
dec
bound
xchg
and
call
or
mov
or
loope
add
adc
sub
mov
push
shrb
mov
or
ja
and
xlat
ss
xchg
jg
sub
mov
ljmp
stos
pop
inc
loop
arpl
pushf
sti
or
fbstp
lret
shlb
xor
jnp
adc
cwtl
dec
or
fistpl
ret
add
gs
cld
cwtl
sti
out
repnz
mov
sub
and
aam
jge
jg
mov
dec
mov
jne
and
cs
mov
jno
cld
scas
jne
ds
loop
add
addr16
adc
movsl
adc
lcall
xor
sub
jno
sub
cmp
scas
sub
cmc
push
dec
ds
cmp
out
loope
cld
lret
sbb
bound
inc
mov
pop
push
add
lret
push
clc
cmp
dec
pop
bndstx
aaa
inc
loop
ret
cmp
add
out
divl
cmp
xchg
push
dec
push
mov
jecxz
movsl
loopne
or
in
dec
imul
sub
popf
call
pushf
pop
addl
in
jo
jmp
inc
inc
fbld
loopne
mov
sub
mov
pop
sarb
xchg
popf
and
movsb
lret
stos
lods
or
inc
rclb
sbb
mov
and
mov
shll
and
cmc
cmp
dec
mov
mov
push
xor
mov
push
adc
and
jl
cmp
fld
shr
dec
xchg
movsl
aad
call
jmp
jae
xchg
hlt
jno
push
jmp
adc
and
adc
lret
shlb
imulb
outsl
pusha
jmp
in
adc
mov
xor
js
jo
add
dec
in
add
test
out
dec
pushf
adc
add
cmp
pop
inc
xchg
cmpsl
or
adc
mov
cmp
jmp
lea
dec
ja
xor
sbb
fstl
cld
fdivrs
lods
movb
repnz
push
push
xor
jle
je
scas
cmp
mov
aam
xchg
pop
push
mov
data16
mov
aam
call
cmp
aas
inc
xchg
imul
or
call
dec
ficompl
jl
and
add
xchg
cmp
xor
jg
in
cmc
xlat
jg
and
insl
xchg
test
cmp
push
jp
sub
inc
pop
add
jb
repz
xor
in
ret
inc
sahf
xor
cmp
push
and
test
mov
sbb
rclb
inc
xor
fisubl
or
dec
les
clc
xorb
icebp
aam
mov
fidivl
xorw
sti
add
mov
cmp
leave
pusha
mov
jnp
bound
sbb
orl
cmp
jno
or
sub
stos
push
cmpl
ret
dec
push
movsb
clc
and
jno
add
arpl
iret
movsb
sbb
dec
push
ja
lret
jbe
sub
mov
add
iret
leave
pusha
pop
mov
in
dec
mov
into
xchg
mov
pop
imul
adc
lret
cmp
and
dec
icebp
jmp
dec
je
inc
xchg
lcall
cmp
xchg
nop
idiv
xchg
lock
xchg
adc
mov
or
js
cmp
lret
repnz
xchg
cld
jno
adc
fimuls
push
or
test
pop
stc
fisttpll
imulb
sub
fcompl
or
mov
sti
into
push
cmp
sti
aam
xchg
movsl
mov
mov
sbb
jne
push
xlat
idivb
jecxz
repz
adc
jbe
fiaddl
or
aad
push
jp
push
ret
stos
pop
add
jle
pop
cwtl
and
mov
fldt
mov
sub
mov
xchg
cmp
mov
sub
jecxz
ret
mov
nop
adc
jns
or
xor
popf
testb
insl
or
mov
pushf
aaa
dec
insl
imul
in
pop
ja
push
out
sub
push
xor
mov
dec
cli
mov
repnz
fwait
test
decb
stos
test
jb
xchg
xor
cmp
outsb
popa
cmp
push
mov
pop
jp
jmp
jp
jae
add
jmp
ja
jp
or
dec
lcall
xchg
adc
mov
dec
ret
sbb
push
xchg
mov
rolb
cmp
pop
fsub
push
pop
nop
dec
notl
mov
jl
jg
stos
jae
jns
clc
sbb
call
sbb
js
popf
das
sbb
cmp
jno
stc
int3
cmc
lods
fsts
mov
out
xchg
mov
jl
je
icebp
push
notb
xchg
repnz
aam
pop
pusha
bound
out
and
in
loop
mov
fsubp
imull
cli
add
and
dec
les
pop
insb
mov
cltd
cwtl
mov
xor
add
mov
ret
mov
popf
and
adc
test
enter
lahf
jno
imul
imul
xor
aas
or
cmpsb
mov
jns
and
lcall
sbb
inc
xchg
jge
mov
cmp
and
cltd
sbb
in
sbb
addl
mov
pop
clc
push
loop
enter
dec
xor
jo
jp
cmp
lret
andb
mov
and
xor
sarb
lret
jecxz
addb
pop
inc
cmp
xchg
and
add
lods
bound
popa
dec
lea
nop
in
mov
and
mov
jle
dec
in
fmull
test
mov
cmp
add
push
mov
call
mov
pop
xlat
aaa
fwait
jecxz
add
cld
jp
aad
testb
lret
xor
mov
push
adc
icebp
dec
loop
add
pop
or
insb
pop
sub
fdivrp
or
pop
ret
push
test
sub
loope
rcll
int
in
lock
movq
nop
movsb
sub
dec
out
adc
or
cltd
push
popa
fisttps
add
mov
mov
dec
mov
inc
les
inc
xor
jecxz
and
dec
push
adc
mov
xor
fcmovb
je
jns
out
ljmp
xchg
adc
or
cmp
add
in
xor
mov
fldenv
pop
sbb
xor
pop
inc
pop
lahf
fwait
push
out
jbe
negb
cmp
xlat
mov
sub
arpl
xor
or
pop
ja
mov
pop
das
mov
arpl
imul
fnsave
mov
xlat
mov
mov
inc
in
icebp
loope
cmp
scas
lret
jmp
mov
insl
cs
sbb
push
jnp
lds
shll
in
fstps
mov
and
add
pop
lretw
mov
sti
mov
loop
dec
pop
iret
enter
arpl
repz
jmp
gs
xor
pop
loopne
push
movsl
faddl
mov
mov
mov
repnz
pushf
push
aad
aaa
sbb
pop
and
mov
push
hlt
push
push
adc
jae
dec
add
lret
cmp
sarl
adc
rol
lds
dec
lods
testb
jp
fadds
mov
sti
jne
xchg
xor
sub
cmpsl
rcll
xchg
repnz
fcomps
scas
and
imul
jns
mov
cli
js
inc
test
pop
push
adc
mov
std
mov
sub
ret
xchg
cmp
pop
xchg
dec
cmp
orb
xchg
mov
dec
xor
push
or
dec
xor
adc
and
xor
push
in
aam
dec
dec
test
add
add
shrb
push
mov
mov
cmp
ficoml
inc
pop
cmpsb
negb
dec
stc
jae
jne
loope
cmp
mov
cmc
pop
in
clc
out
sbb
dec
xor
xchg
pop
in
jne
or
jne
xchg
cmp
jle
push
mov
stos
xchg
cmpsl
push
ja
xchg
adc
cmp
jbe
cltd
aad
stos
jl
xchg
imul
adc
xor
je
mov
je
pop
cld
cmp
xlat
sahf
push
cli
push
fsubl
inc
jg
xor
loop
push
aaa
lret
adc
divb
mov
dec
pop
out
sbb
out
fs
push
sbb
push
cli
inc
jle
cmp
push
mov
mov
sbbl
jno
sub
dec
les
stc
dec
mov
fiadds
jmp
mov
pop
subb
xor
inc
pop
stos
out
addl
push
jb
stos
mov
push
pop
fbstp
jge
or
pop
adc
jbe
push
fldl
ljmp
icebp
mov
adc
fwait
push
popf
popl
cmp
push
sub
nop
sbb
stos
push
pusha
and
sbb
cmpsl
and
adc
lret
fnstenv
repnz
rorl
mov
mov
push
cmp
lret
and
xchg
cli
mov
test
mov
and
push
sub
aam
test
fistps
jl
je
out
stos
outsb
sub
test
or
push
or
mov
and
cld
mov
bound
filds
push
pop
dec
call
ljmp
lods
or
mov
inc
stos
dec
adc
xchg
mov
adc
jno
jge
popf
mov
insl
dec
mov
sti
leave
mov
and
out
ret
cwtl
loope
push
jnp
mov
pop
cmp
xchg
outsl
jp
xor
insb
sbb
jmp
es
xorl
mov
ljmp
les
mov
sub
mov
in
je
jp
adc
mov
pop
filds
loopne
test
fwait
jle
push
shlb
dec
rcrb
xor
stc
or
std
lods
jge
jmp
ror
stos
clc
dec
out
sbb
mov
xchg
cmp
jne
sub
ret
inc
sar
clc
aad
push
lods
fcoms
mov
daa
enter
mov
mov
insl
pusha
push
call
cmp
roll
movsl
cmpsb
add
pop
pop
int
adc
add
mov
mov
and
jno
sbb
es
movsb
loop
push
or
mov
sbb
js
mov
test
xor
xchg
lds
mov
inc
cld
push
add
mov
dec
push
sub
pop
xchg
push
je
or
or
test
test
push
dec
and
cltd
xchg
jmp
pop
dec
fisubl
pop
jns
movb
pushf
adc
push
adc
xchg
imul
das
out
mov
stos
adc
fmull
sbb
scas
icebp
fstps
push
shl
lret
xor
lcall
dec
insb
jecxz
xchg
cwtl
sahf
xchg
iret
and
xor
inc
pop
push
adc
or
aam
and
je
movsb
push
pushf
test
fdivs
pop
leave
cwtl
loopne
fwait
pop
frstor
or
mov
push
jae
ds
insb
push
push
jo
aad
mov
pop
stos
fwait
dec
out
jle
hlt
jge
pusha
mov
rcrb
scas
xor
xor
ret
rolb
bound
sbb
lods
int3
sarl
loope
insb
les
sti
dec
ror
mov
adc
enter
cmpsb
cmpsb
jmp
xor
cld
cwtl
imul
pusha
scas
and
push
enter
test
pop
pop
cmp
popf
dec
popf
or
imul
or
test
add
push
and
pop
sub
sar
dec
test
jne
dec
xor
cmpsl
fldenv
jl
push
jecxz
repz
xor
inc
pop
inc
clc
mov
push
xchg
push
mov
push
cmp
imul
in
mov
aaa
das
jmp
lds
mov
cli
inc
sbb
scas
loopne
in
iret
mov
lahf
inc
adc
stos
jo
in
pop
test
sub
fists
pusha
xor
jne
and
outsb
and
ss
imul
mov
int3
jno
dec
lds
stos
repz
std
pusha
pop
pop
dec
mov
imull
ds
ds
pop
outsb
add
iret
lds
mov
loope
adc
scas
les
add
inc
iret
shlb
jmp
test
xlat
sbb
mov
cmp
das
lods
loop
jmp
fldl
call
ja
jne
daa
cmp
lods
loope
test
andl
xchg
jbe
push
xchg
arpl
call
loope
add
jns
dec
adc
lock
in
or
neg
jmp
fistpll
sub
fcom
add
popf
inc
dec
js
and
mov
adc
adc
sbb
movsl
mov
adc
pop
mov
pop
mov
dec
lods
popa
xor
nop
jbe
sub
mov
push
cwtl
addr16
into
addr16
xor
jmp
add
xchg
mov
mov
jno
jle
mov
mov
aam
xor
or
xchg
cs
sub
push
ljmp
and
addr16
loopne
mov
insb
into
clc
aad
out
jns
jne
sbb
push
adc
flds
shl
out
and
cmc
mov
daa
adc
push
loop
mov
xchg
push
stos
into
mov
ss
iret
dec
mov
pop
repnz
test
cmc
or
adc
or
push
add
xor
jp
jb
popa
ret
pop
adc
dec
out
dec
xchg
sbb
pop
leave
cs
mov
test
xlat
xchg
push
lahf
stc
mov
test
xchg
pushf
jbe
movsl
int3
leave
push
stos
xor
sbb
or
flds
xchg
sub
jno
cltd
rolb
pusha
mov
sahf
xor
fbstp
cmp
in
pusha
jmp
leave
jge
shrb
push
jle
push
adc
or
xchg
pop
lret
iret
xlat
movd
out
int3
sub
mov
xchg
ds
xchg
xor
dec
test
push
jle
jmp
imul
jo
and
in
movsb
loop
xchg
pop
mov
adc
repnz
lods
loope
jbe
mov
pusha
mov
xchg
and
or
popf
inc
adc
xchg
out
fcmove
rcrb
push
fcoms
add
ret
ss
xor
xor
pop
jns
jmp
jnp
lahf
inc
mov
stc
mov
mov
pop
stc
addb
pushf
jecxz
and
cmp
fscale
adc
aam
subb
push
in
aas
scas
lret
mov
stos
cmp
repnz
out
jp
sub
bound
jg
test
jecxz
enter
shll
repz
pushf
sub
mov
test
sbb
pop
mov
xchg
mov
data16
cwtl
add
lods
or
xor
sbb
xor
call
lcall
lods
ret
fsubl
pop
push
icebp
jge
call
repz
dec
xchg
sub
sub
jb
int3
repz
or
push
ljmp
bound
mov
test
pop
sub
test
and
sbb
in
dec
dec
test
mov
jae
outsl
lods
scas
and
popf
jne
out
mov
outsl
push
je
int
inc
aad
cmpsb
jbe
mov
mov
lcall
mov
repnz
lods
rcrl
nop
dec
jb
push
pop
daa
xchg
xchg
fistps
jg
sarl
repnz
mov
push
insb
xchg
fildl
loope
mov
xor
nop
out
gs
rorl
je
in
jb
jmp
shlb
arpl
aaa
or
scas
xchg
jnp
jecxz
dec
mov
pop
cld
rcrl
out
out
and
or
cmp
cmpsb
cmp
jl
nop
push
jo
pop
loopne
pop
cmp
or
pushf
pop
add
int
pop
pavgb
in
add
test
adc
pop
into
cmp
push
and
flds
outsl
sub
stc
xchg
pop
jl
js
lcall
xchg
loopne
push
or
test
fwait
scas
ds
mov
sbb
mov
fwait
vphaddwq
push
mov
out
pushf
data16
nop
and
xlat
sbb
daa
or
sub
cmpsb
jbe
fs
rorl
in
fbld
fimuls
addb
push
daa
jl
stc
mov
adc
mov
lea
push
popa
push
cmpsl
aaa
enter
or
xchg
pop
sbb
xchg
add
pop
and
push
pop
mov
dec
sahf
jl
call
mov
jnp
iret
aam
shll
es
lret
popf
pop
mov
cmp
data16
cmp
sbb
out
dec
xchg
rcl
push
je
aam
adc
fiaddl
pop
rolb
push
pop
dec
add
cmp
leave
mov
lahf
xor
and
jecxz
xor
jbe
mov
or
popl
xchg
mov
scas
scas
or
out
vpsraw
xlat
pop
xor
mov
mov
std
cmp
cmp
sbb
mov
add
xchg
lahf
sbb
in
lea
mov
sbb
ret
pop
cmp
and
icebp
imul
scas
lea
push
loop
adc
dec
pop
jns
add
add
sbb
stos
cmp
mov
inc
nop
or
movsb
das
sahf
mov
lods
inc
lods
out
sbb
shll
inc
iret
jne
movsb
out
adc
and
jmp
mov
xlat
add
stos
cmpb
pop
fdivrl
xor
imul
dec
je
inc
pop
xchg
sub
mov
push
mov
push
pop
ret
inc
push
lcall
and
fiaddl
mov
dec
mov
test
add
xchg
lahf
push
and
mov
cmc
outsb
ljmp
sarl
orl
cltd
loop
in
sbb
xor
jecxz
cld
pop
movsb
ret
inc
insb
jg
idivl
out
or
aam
iret
andl
popf
je
cltd
out
mov
mov
jge
mov
mov
lcall
mov
mov
mov
int
fdiv
in
dec
xlat
mov
stc
std
and
mov
xor
pop
das
pop
xor
arpl
pop
and
out
xor
lcall
jge
int3
clc
mov
imul
add
xchg
jmp
jns,pn
lock
sub
aas
inc
jmp
sahf
pop
and
rol
in
jecxz
mov
jp
enter
cmpsb
xor
dec
adc
sub
dec
pusha
pop
and
out
or
xchg
jnp
cltd
test
push
dec
cld
test
add
imul
repz
repz
orl
or
rcrb
jp
cld
ret
or
mov
or
dec
push
roll
fsub
mov
pop
xchg
gs
jo
push
xchg
add
aaa
mov
shrl
xor
lcall
or
mov
fneni(8087
pusha
out
cmpsb
in
call
sbb
push
adcb
push
mov
nop
xor
ljmp
out
mov
push
cld
test
sbb
mov
xlat
insl
movsb
xor
jg
pop
add
dec
push
data16
pop
roll
mov
mov
sbb
ja
outsl
imul
cmp
push
incl
and
xchg
jp
imulb
add
push
shr
loopne
inc
test
xor
stc
push
fdivrl
int
in
xchg
xchg
std
sub
testb
sbb
lret
pop
sbb
popa
jl
sti
push
jmp
inc
xlat
enter
pop
pop
ss
and
inc
pop
pushf
in
add
stos
shlb
mov
scas
sub
adc
mov
addr16
xchg
sbb
mov
xchg
xor
sub
gs
xchg
lahf
push
xchg
mov
jbe
scas
inc
repnz
jbe
sbb
fucomi
lret
cmp
int
fcomi
mov
sub
flds
mov
push
lock
loopne
mov
aam
nop
lods
int
mov
push
jmp
and
loop
push
aaa
in
mov
out
cmp
add
or
aam
mov
notb
mov
and
cld
jecxz
bound
stos
mov
adc
gs
fimuls
mov
bound
pushl
adc
imul
and
es
dec
stos
cmpl
cmpl
and
xchg
divl
mov
push
jmp
push
negl
fldcw
sbb
and
xchg
fldl2e
lods
xlat
ret
comiss
pushf
ds
dec
push
scas
xor
mov
sarl
xor
jecxz
jp
mov
daa
pop
stos
fidivl
push
mov
outsb
fimull
pop
std
clc
pop
push
pusha
cmpsb
sbbb
sub
loope
orb
into
jb
jle
std
mov
rol
dec
call
mov
add
adc
sbb
ss
push
cmp
sub
movsl
aad
stc
addb
dec
sbb
mov
test
stos
fwait
sub
push
jecxz
or
and
js
jge
enter
outsl
cli
dec
repnz
xor
cmpsl
mov
adc
add
outsb
lods
cmpsl
addr16
mov
stc
mov
mov
ret
and
inc
cwtl
sbb
lds
sbb
sbb
in
js
sbb
inc
aad
pop
lcall
fstpl
adc
xor
iret
out
push
les
lcall
jmp
xor
in
ds
imul
cmpsb
test
add
clc
enter
aad
or
leave
out
pop
arpl
mov
ss
aad
lcall
call
sahf
mov
es
daa
mov
push
cmove
and
or
push
adc
fs
mov
inc
out
fwait
pop
pushf
sub
add
cwtl
dec
lret
inc
frstor
fsubrs
push
dec
in
into
pop
scas
xor
ljmp
cs
add
push
dec
rcrb
inc
ror
scas
push
cmp
or
pop
outsl
inc
mov
jo
inc
adc
popa
popa
es
mov
xor
dec
jecxz
jle
das
jnp
adc
imul
adc
sbb
aas
aam
lcall
xlat
dec
insl
adc
lcall
sahf
leave
mov
pop
je
push
jnp
push
scas
push
inc
sbb
xor
lock
mov
sub
mov
dec
fisttpl
not
mov
js
fwait
decl
mov
and
push
into
call
sbb
cvtps2pi
bsf
cmp
rcrl
add
movsl
mov
mov
cld
mov
adc
push
pop
cli
mov
fxch
add
inc
jecxz
mov
jmp
cmpl
int
and
add
popf
inc
je
sbbb
in
mov
mov
add
lret
mov
cmp
sub
shl
mov
dec
insl
xor
cmp
sbb
scas
sbb
nop
add
sarl
pop
xchg
cmpsb
push
push
lret
push
sub
inc
mov
ret
out
insl
push
push
pop
mov
inc
cmpsl
lahf
xchg
je
jne
arpl
mov
inc
lock
push
add
cmpsl
or
adc
outsb
aaa
jle
push
shrb
adc
in
mov
in
les
icebp
sbb
adc
inc
mov
jns
sbb
xchg
adc
jbe
fcoms
cwtl
mov
adc
fs
xor
inc
mov
inc
mov
not
sub
and
std
cmpsb
jecxz
je
pusha
loope
int
imul
sahf
dec
sub
repnz
jge
jmp
mov
sbb
push
xchg
push
mov
mov
out
push
xor
leave
ret
int
cmpsb
mov
fisttpl
xchg
jp
lcall
pop
add
pop
sub
push
add
adc
adc
loope
xchg
sbb
fcomip
lock
into
mov
xchg
rcrb
xor
adc
in
inc
pop
clc
stos
push
aaa
enter
pop
sbb
sbb
push
dec
iret
and
fwait
dec
fwait
add
mov
loopne
xor
mov
xor
inc
push
adc
enter
lods
mov
xchg
mov
lds
jne
push
fwait
adc
jo
xor
add
pop
outsl
jl
inc
xchg
push
mov
fdivs
dec
jne
or
mov
lret
leave
xchg
push
cld
jecxz
inc
fsubrl
lret
mov
mov
mov
test
pop
xchg
and
push
add
lahf
imul
jnp
mov
xorb
pop
test
inc
jbe
xchg
cli
loop
stos
fsubr
jg
mov
inc
rcrb
loop
mov
ljmp
imul
aas
je
mov
mov
shl
dec
xor
stos
inc
adc
iret
xor
mov
loopne
sbb
sbb
push
cmp
adc
and
add
sbb
mov
mov
mov
or
and
les
mov
dec
fxch
hlt
fistpl
fs
std
iret
outsb
pushl
js
mov
ss
sarb
mov
or
xchg
aaa
test
test
fs
jnp
cld
pop
mov
sbb
mov
dec
mov
and
xlat
and
cmp
unpckhps
adc
jnp
dec
dec
cmpsl
out
inc
sub
sbb
push
lea
stos
xchg
daa
push
ss
outsl
jns
out
push
icebp
insb
in
push
pop
cmp
jbe
jmp
arpl
add
push
cmp
clc
push
mov
or
out
sbb
inc
xchg
dec
adc
push
push
lods
in
inc
mov
fcmovbe
push
out
outsl
pop
mov
mov
xor
outsl
pusha
outsl
dec
jg
pop
aad
mov
movsl
les
je
sub
movsb
jecxz
adc
xor
sbb
sti
out
pusha
jle
add
into
dec
push
and
mov
sub
insb
ret
pop
and
aaa
xor
jno
mov
fidivs
jnp
fdivrs
push
addr16
sbb
fs
sub
ja
cmp
fsubs
sahf
aaa
mov
and
jle
xor
lret
push
mov
pmulhuw
xchg
pop
xchg
aaa
stos
aam
or
dec
push
rolb
into
cmpsl
mov
xor
adc
fwait
xchg
inc
lock
rol
test
test
dec
sahf
les
push
cmp
sub
inc
jbe
fs
das
cltd
mov
ja
push
gs
test
xchg
cmp
jl
inc
es
stc
test
jno
or
jne
xchg
and
shrl
pop
cmp
testl
or
and
push
sbb
test
mov
dec
sbb
test
adc
dec
stos
push
lea
mov
and
mov
dec
sbbb
xor
cmp
dec
jns
xchg
xor
xchg
jns
test
loopne
and
and
push
push
sahf
and
mov
push
fcomp
popa
in
aas
stos
add
and
idiv
sbb
aaa
lea
stos
inc
xchg
pop
gs
cltd
or
sbb
xchg
les
mov
movsb
rcr
push
jno
xchg
add
in
cmp
fildll
sbb
and
addb
popf
pop
jg
mov
xchg
mov
cmp
add
aaa
aad
les
xor
dec
mov
inc
jp
push
jg
fisubrl
push
xchg
out
cld
cmpsb
and
sub
in
mov
adc
cmp
fwait
mov
mov
cld
insl
iret
in
cmp
mov
in
and
jecxz
dec
mov
nop
jne
ja
mov
fsubrs
dec
leave
dec
push
xlat
mov
popa
mov
arpl
aam
test
and
mov
xchg
add
push
jne
sbb
pop
mov
call
pop
ffreep
adcb
call
addr16
add
outsl
mov
xor
fwait
push
dec
push
add
cmp
test
in
call
lahf
mov
jecxz
fdivrs
xchg
dec
cwtl
divl
sub
lcall
sarb
cmp
inc
add
xor
addr16
sub
icebp
jle
stc
int3
ljmp
adc
dec
mov
add
pusha
add
test
aam
lret
rcrb
mov
pop
pop
lret
push
cltd
call
or
int
mov
daa
cmpb
je
fsts
or
std
shll
jbe
inc
fdivl
aam
out
add
ljmp
aam
jbe
jmp
push
sbb
push
push
out
frstor
leave
pop
cltd
push
ds
lods
insl
sub
inc
push
ss
push
xchg
add
dec
push
cmpsb
or
dec
add
idiv
rcr
cld
jno
mov
ja
or
xlat
push
xlat
add
or
cltd
nop
xchg
fwait
arpl
push
gs
push
lods
cmp
stos
inc
repz
and
bound
jge
add
ss
shll
lret
sub
fs
push
sub
xlat
das
test
pusha
pop
and
movsb
xchg
js,pt
xchg
jb
out
pop
pop
aaa
cmc
cmp
clc
fidivrl
xchg
xchg
and
ja
mov
adc
std
gs
enter
aas
lock
ja
jle
in
lcall
aas
add
loopne
mov
jb
iret
arpl
push
test
out
xchg
movsl
aas
mov
nop
call
scas
rcr
popf
sub
push
dec
sub
repnz
adc
int
mov
sub
mov
push
push
pop
cmp
imull
icebp
icebp
jb
add
and
outsb
scas
jl
dec
fwait
pop
test
push
mov
push
jb
ds
pushf
add
adc
xor
push
adc
stos
insl
in
xchg
ret
int
or
mov
mov
and
leave
xor
cli
and
test
mov
mov
jo
filds
cltd
inc
sar
xlat
mov
mov
sbbb
mov
addr16
add
push
jb
ja
incl
jne
or
cs
jmp
aam
cwtl
mov
bnd
xchg
lea
pop
cltd
and
push
and
mov
cmp
xlat
inc
dec
jl
dec
fst
call
xchg
push
in
cltd
mov
xor
mov
push
or
sub
sbb
dec
leave
mov
xor
and
sbb
push
cmp
cmc
lods
dec
mov
int
test
test
cmp
pop
mov
bound
pop
mov
push
pop
add
std
inc
lahf
pop
lods
negb
into
ret
cli
add
push
pop
or
std
int
scas
dec
xor
sub
jl
push
and
dec
jge
clc
mov
es
outsl
xchg
xlat
fsubl
loopne
inc
into
add
leave
jno
cwtl
sub
ss
or
inc
insb
loopne
jecxz
cmp
mov
das
and
aas
add
sahf
mov
cmp
and
jo
cmp
add
in
xor
sbb
call
lods
jbe
aaa
lock
shll
mov
std
jg
hlt
and
pop
sbb
inc
sar
inc
sbb
rclb
sub
cmpsb
fbstp
fs
adc
sbbb
push
out
aam
dec
jnp
aas
fs
out
and
lret
xchg
ja
add
aaa
in
stos
mov
rorl
test
sbb
jno
pop
fdivs
out
dec
push
movsl
jns
xchg
pop
adc
cmp
lods
lret
or
aam
add
loope
jnp
popa
jle
jg
insb
sub
xchg
sahf
xchg
outsb
test
insb
dec
sub
xchg
repz
test
mov
dec
mov
pop
jae
cmp
xor
pop
stos
mov
dec
sub
mov
fisttpl
lret
inc
jnp
sti
loop
adc
push
cmp
dec
cld
mov
jns
fldt
lock
mov
mov
jecxz
stos
sbb
andb
sbb
mov
fcom
mov
and
movb
xor
mov
in
insl
jl
arpl
lret
push
out
dec
inc
idivl
sub
cs
push
lahf
popa
test
or
sub
aam
inc
pop
movl
inc
in
cmpsb
leave
xchg
add
sahf
cmpsl
dec
xchg
ficoms
leave
push
jge
jno
jne
xor
xor
inc
mov
cmc
in
mov
gs
dec
mov
xchg
jl
jo
jge
jle
lods
dec
scas
les
les
loope
movsb
enter
pop
sbb
out
loope
or
fwait
mov
inc
jmp
icebp
push
xor
pop
push
lods
ljmp
jg
inc
je
enter
test
jecxz
sbbb
outsl
lea
aam
and
jg
mov
insb
cmp
lock
rcrb
loope
sbb
push
dec
lods
fs
jl
das
pop
jbe
mov
test
and
mov
lods
fmul
in
xchg
mov
sub
pop
fnstcw
stos
fldl
add
jl
das
dec
filds
je
adc
xchg
leave
mov
lds
incb
aam
aaa
cmp
mov
sub
jle
int
dec
outsl
mov
push
aam
add
and
pop
and
popf
push
scas
cmp
aam
cld
js
jp
push
icebp
cmp
or
jbe
dec
aaa
aaa
and
imulb
push
shlb
inc
sub
and
xchg
mov
mov
test
fsubrl
mov
cs
cmp
and
or
ljmp
sbb
popf
neg
mov
or
mov
jp
into
mov
inc
cmp
and
lds
loop
paddusw
out
xchg
std
nop
lcall
push
xor
sub
xchg
dec
loope
insb
cli
cmp
dec
leave
mov
jecxz
push
lret
sub
lods
jmp
ljmp
mov
sar
inc
jle
out
aas
push
sbb
scas
ss
adc
and
push
or
adc
cltd
adc
push
sub
push
jle
shll
dec
push
gs
adc
adc
aaa
leave
inc
xor
mov
push
aas
pop
mov
push
pop
pusha
insl
dec
sti
mov
aam
and
push
sahf
mov
cmp
adc
rcrb
das
pop
ficoms
jno
pop
hlt
xor
sub
inc
cmp
push
mov
or
popf
sahf
and
fistps
mov
fists
in
mov
dec
fisubrs
or
divb
sbb
lahf
icebp
sbb
arpl
or
cmp
mov
and
xor
xchg
and
mov
cmp
cld
lret
jg
cmp
outsb
sub
std
jb
jle
jo
ret
mov
jae
adc
test
rcrb
cld
sbb
cmp
jmp
dec
adc
rolb
xchg
ss
push
ret
xchg
and
rcll
push
mov
or
push
push
sub
push
imul
lahf
push
mov
imul
and
dec
int
jnp
scas
clc
push
insl
jne
mov
rcll
lods
inc
hlt
imul
imul
test
ds
xchg
and
jp
cwtl
mov
pop
adc
cmp
push
mov
sbb
xchg
sbbb
mov
inc
call
jnp
xlat
fsubs
cli
out
mov
pop
sub
nop
leave
jbe
repz
push
lcall
bound
adc
sbb
mov
daa
mov
jle
repz
into
mov
int
xchg
fwait
ss
jns
pop
fistpll
dec
sbb
or
mov
sub
test
adc
push
ds
adc
push
lds
mov
stos
aaa
rcrb
in
test
icebp
add
loop
mov
mov
bound
push
movsl
mov
pop
mov
jl
add
lret
xor
dec
dec
fisubl
mov
ljmp
or
xor
aad
addr16
scas
push
lret
jg
divb
or
jbe
lods
dec
adc
dec
push
mov
loope
pop
sbb
fadds
xchg
clc
in
sbb
cmc
push
gs
adc
xchg
cmp
dec
push
xchg
sahf
jle
push
or
std
pop
mov
ds
and
jl
gs
jno
test
lahf
gs
addb
and
mov
addr16
rcrl
mov
js
ret
stos
push
loope
call
popa
adc
jnp
cwtl
outsl
rorl
inc
cld
xor
in
cld
lea
pop
bound
mov
dec
cmc
testl
pop
in
int
inc
pushf
pop
mov
pop
push
add
add
mov
pop
xor
xor
addr16
cmp
jne
pop
nop
add
repnz
mov
dec
sbb
fists
pop
dec
insl
fimull
lods
cmc
imul
cwtl
xor
mov
lock
aad
xchg
and
mov
cmp
daa
sub
and
jb
mov
outsl
adc
and
pop
push
lods
dec
in
xchg
mov
sbb
test
imull
jle
and
jp
pop
and
push
dec
mov
sub
xchg
inc
sbb
decl
mov
fwait
aad
add
ds
out
arpl
adc
dec
lods
jb
andps
pop
mov
sub
cmp
das
scas
scas
jge
mov
or
outsl
gs
mov
test
sbb
pusha
pop
dec
mulb
out
adc
insb
sub
cmp
arpl
ds
fimuls
call
ret
aas
jb
inc
xor
outsb
pop
and
popa
subb
cmpsl
or
daa
pusha
mov
gs
sub
xor
clc
cmp
iret
aas
mov
rorl
lock
push
inc
ds
sarb
adc
sbb
ret
pop
rcrb
push
fmull
adcb
cltd
fsubs
or
and
movsb
les
mov
sub
inc
pop
out
das
sbb
fnstsw
mov
aad
out
xchg
andl
adc
rcr
ds
pop
imul
es
mov
enter
mov
lret
cmc
cwtl
mov
adc
popa
xchg
loop
add
in
frstor
xor
fmuls
loop
push
clc
jp
push
cmp
addr16
movsl
jb
xor
sub
lret
rolb
iret
or
jle
or
lds
lds
mov
add
cwtl
ljmp
sbb
int
cs
push
mov
mov
gs
and
nop
mov
pop
cmpb
push
addr16
sbb
adc
les
rorb
push
lcall
mov
mov
xchg
cwtl
fists
jle
in
dec
mov
pusha
popa
cmp
add
shl
nop
cmpsl
popa
push
pushf
dec
jo
push
mov
popf
xlat
fdivrs
dec
push
jb
das
push
or
mov
das
lret
out
lret
stos
ret
popf
push
pop
in
add
movsb
push
stos
fsubrs
shrb
pop
mov
ret
pushf
mov
mov
push
sbb
wrmsr
call
cmpsl
fs
xor
add
int3
push
mov
sbb
push
mov
aas
lcall
mov
sbb
ficoms
mov
js
test
push
in
xor
mov
cwtl
mov
int
sub
push
pop
lcall
sbb
mov
test
xchg
xchg
lea
jne
sub
imul
cmp
xchg
xor
test
inc
push
dec
sahf
or
jno
ret
cmp
stc
cwtl
pop
sti
iret
pop
jl
icebp
addr16
lahf
push
sarb
cmpsb
mov
scas
cmc
in
leave
jns
mov
xchg
xchg
ja
cmp
dec
pop
in
xchg
lretw
mov
aaa
mov
inc
mov
jns
pop
inc
cmp
xchg
movsl
adc
adc
and
push
sahf
lahf
add
dec
xchg
and
cmp
lcall
sub
dec
add
and
movsl
outsl
sub
movsl
pushf
jae
push
xchg
aam
lret
and
sahf
pop
push
sbb
xchg
fimull
jne
cmp
nop
sub
xor
and
jb
into
sahf
mov
out
sbb
imul
dec
sbb
lcall
sub
dec
outsb
cli
jl
lods
lret
mov
in
bound
imul
fdivrs
cmp
or
jae
push
ljmp
adc
pop
subb
gs
insb
out
push
and
pop
xchg
push
repz
push
and
mov
divl
lcall
mov
mov
int3
mov
sbb
mov
jae
lret
fisubrs
outsl
jo
or
and
jecxz
mov
pop
mov
sbb
gs
int
frstor
ja
in
and
mov
jo
sbb
popf
xchg
xor
leave
jg
mov
inc
pop
xor
dec
jp
cwtl
xlat
and
cltd
std
in
jmp
jne
stos
daa
push
iret
cs
push
loope
jmp
jno
pop
rorl
pusha
cmp
daa
jne
arpl
gs
pop
rcr
add
mov
lods
imul
outsb
lret
nop
inc
pop
loop
movl
fisubs
js
mov
scas
mov
daa
movsb
enter
sub
cmp
mov
int
adc
mov
inc
fcoms
jmp
sbb
hlt
iret
push
mov
sti
sub
jge
sbb
push
jbe
sbb
movsl
je
xor
rol
mov
mov
mov
mov
std
pop
sbb
ja
daa
fldenv
js
movsl
divl
addl
or
jmp
cmp
mov
inc
aas
push
pop
fsubl
push
shl
int3
mov
in
loopne
xor
repnz
sbb
jno
loop
out
mov
scas
mov
aas
mov
and
dec
pop
scas
aam
loop
lds
pop
fwait
mov
mov
iret
insl
sbb
cmpsb
js
cmpl
push
aaa
inc
rcr
outsb
dec
xor
inc
mov
out
mov
and
jno
mov
mov
jmp
pop
xor
mov
out
add
xchg
xor
add
xor
jl
out
ret
test
xor
add
cmp
mov
popa
arpl
ljmp
add
sub
je
out
insb
shll
loopne
nop
es
loopne
cwtl
add
repz
pop
add
cli
pushf
jle
add
jbe
xor
daa
cld
xor
icebp
shl
fcompl
or
and
pop
shrl
lret
or
data16
mov
sbb
adc
jbe
ds
adc
imul
mov
xchg
push
mov
loope
sbb
jle
stos
lret
cmp
insl
nop
sarb
sbb
fwait
psubd
xchg
dec
cld
inc
aad
movsl
mov
scas
loope
pop
push
xor
adc
shlb
shll
jb
and
sbb
dec
dec
xor
xchg
xorb
or
mov
mov
xchg
fdivs
in
lahf
cmpsl
iret
xor
movsl
xchg
mov
jl
pop
xchg
inc
and
lret
stos
rcrb
add
imul
mov
inc
arpl
and
mov
pusha
sarl
fsts
aam
mov
mov
enter
sbb
mov
or
sub
adc
or
outsl
push
repnz
mov
testl
push
in
mov
xor
sbb
mov
push
pop
call
lret
bnd
jmp
insb
add
pop
mov
loopne
pop
mov
out
aad
mov
sbb
lret
andl
cwtl
push
pop
aam
or
stos
and
cmp
pop
sbb
test
cmp
fcoml
mov
jae
leave
bound
and
pop
insl
or
mov
loop
fs
inc
repnz
xor
push
out
dec
cmp
mov
lock
push
or
add
jmp
pop
test
sbb
jbe
and
add
jbe
push
fidivs
icebp
inc
jb
in
aas
sbb
sbb
xorl
ja
std
mov
daa
xor
ret
popf
lods
dec
xchg
fwait
dec
cld
loope
aaa
jno
call
test
push
cld
sahf
xchg
ret
lret
les
push
testl
fcompl
jo
stc
push
cld
lods
lods
cmp
lods
dec
add
sbbb
ljmp
dec
dec
sub
sbb
mov
sbb
pop
fdiv
cs
and
inc
xlat
outsl
stos
cli
movsl
cmp
test
in
dec
jbe
add
xor
mov
lock
int
fsubl
pop
out
mov
push
imul
or
jns
mov
and
sbb
aas
fldl
sbb
xchg
mov
outsb
push
lret
mov
xchg
xchg
outsl
movsb
icebp
stc
xchg
push
bound
shl
push
inc
dec
out
out
sbb
mov
orl
xor
pop
jo
mov
ficompl
cltd
fnstenv
sbb
insb
int3
mov
shlb
or
sub
andl
fwait
sbb
add
and
or
mov
shll
fs
std
jp
jmp
push
arpl
jp
dec
divl
jge
inc
mov
fdivrp
sbb
mov
pop
cmpsb
or
ss
pop
orps
cmp
mov
xor
push
fcmovnb
pop
cmp
je
jmp
inc
adc
ret
mov
fists
call
xchg
imul
rorb
test
jg
sti
ds
lock
call
out
cltd
enter
xor
jl
fwait
cmp
dec
stos
xchg
xchg
rcrb
in
jge
dec
pop
in
adc
push
jge
mov
add
xor
std
mov
sbb
xor
std
imul
lcall
mov
fstl
xchg
jge
mov
rcrl
mov
lcall
xchg
jge
jne
into
adc
arpl
loopne
lods
jge
push
pop
stc
mov
cmp
popa
jbe
cmp
mov
and
push
gs
add
mov
xor
test
lock
and
sub
xchg
shll
inc
sub
xchg
jb
jle
out
push
loope
xchg
ja
cwtl
orb
jnp
mov
or
pusha
es
cmp
or
mov
rcrl
lahf
ljmp
lea
jno
pop
shlb
lds
dec
dec
icebp
int3
js
mov
mov
loopne
dec
ss
loopne
test
rclb
test
into
into
jge
int3
stos
ja
lcall
xchg
pop
pusha
inc
mov
and
push
mov
out
scas
in
push
push
jo
dec
icebp
movsl
aam
sub
jb
clc
adc
cmp
xchg
adc
daa
push
stos
insb
mov
ret
mov
cltd
popa
call
or
mov
testl
test
dec
add
xor
xchg
es
mov
mov
xchg
sub
bound
enter
mov
fbld
sahf
sbb
push
shr
test
mov
out
incb
cmp
push
ret
hlt
insb
add
fcoml
hlt
dec
dec
lods
add
cmp
xchg
punpckhdq
jl
negl
inc
mov
adc
rcrb
lods
das
add
mov
fnstcw
or
pop
xchg
jbe
and
mov
inc
mov
pusha
sbb
push
jmp
lahf
aam
xchg
mov
add
jo
inc
xor
add
clc
jnp
pop
push
imul
jns
inc
and
jb
sbb
fcmovb
cmc
dec
es
insb
pop
out
mov
data16
mov
or
fidivrs
je
es
pushl
hlt
lds
fnstsw
lahf
mov
push
and
mov
inc
arpl
pop
aad
lahf
stos
ret
rcl
xchg
mov
dec
adc
mov
ss
aam
adc
call
aam
xchg
pop
push
js
sub
int
xor
out
xor
and
and
cld
xchg
lahf
lret
mov
cmp
or
mov
sub
dec
push
or
inc
xchg
sub
pop
sbb
stc
das
insl
sar
test
sub
inc
and
movsb
lock
mov
out
cmpsl
xchg
int
ss
fsub
out
add
stc
loop,pt
call
and
xchg
xor
aaa
pop
mov
ret
in
lret
pop
int3
push
bnd
cmp
push
fwait
mov
push
xchg
mov
out
sub
sub
dec
lcall
sbb
test
int
inc
sub
mov
fwait
mov
push
push
cli
pop
or
mov
add
outsl
enter
jns
bound
sbb
lods
cld
aam
jge
mov
xorl
int
popa
push
hlt
adc
cmp
adc
mov
ret
std
nop
or
faddl
lds
insb
mov
jmp
and
xlat
jae
int3
and
push
es
mov
sub
push
jno
addb
loopne
inc
aam
or
sarb
sub
inc
push
jae
push
lcall
push
mov
in
cltd
push
and
iret
shll
or
jle
xchg
xchg
ds
sarl
jbe
out
mov
in
arpl
dec
push
or
lods
ret
sub
jne
and
push
add
outsl
xchg
jecxz
xchg
imulb
idiv
adc
repnz
inc
lods
les
xlat
xor
stos
cmpsl
sbb
mov
sahf
xchg
test
lds
std
lods
test
mov
iret
lea
mov
pop
repnz
fs
lret
enter
cmp
int3
or
dec
pop
lahf
ss
sub
mov
sub
popa
insl
mov
call
inc
mov
bound
test
in
loopne
out
mov
das
push
cli
mov
and
mov
dec
pop
cmp
hlt
popf
lcall
inc
push
inc
mov
test
mov
out
or
shlb
xor
inc
cmpl
sub
sbb
aad
and
jae
mov
adc
dec
mov
lods
pop
cld
clc
in
push
nopl
sahf
sbb
sarb
test
add
nop
push
enter
loope
mov
xor
xchg
repnz
xor
adc
into
sub
push
add
add
dec
sbb
pushl
mov
cmpsl
nop
lods
mov
push
rcrl
xchg
or
add
push
mov
sbb
sub
outsb
and
imul
aas
movsl
mov
lock
orl
rcl
inc
jo
pop
cmpsl
js
cmpsb
ja
popf
test
std
out
js
ja
jl
add
popl
ja
mov
mov
cs
adc
popa
popf
push
xor
push
sbb
aas
je
call
inc
loope
mov
fmuls
xor
cmp
xor
movsb
push
mov
pop
insb
push
inc
arpl
sub
or
jle
xorb
push
loop
mov
jp
add
cld
aas
movsl
mov
lods
or
xor
and
cmc
add
sub
fwait
cwtl
mov
add
adc
aam
lods
xor
mov
mov
rorb
ds
jo
jnp
xchg
xchg
das
xlat
adc
jge
cwtl
cmc
mov
test
pop
andl
daa
jae
and
add
push
pushf
mov
xchg
outsb
jno
stos
lock
xor
clc
imul
shll
hlt
int
pop
hlt
andl
and
adc
test
sub
push
xor
or
into
std
mov
sbb
fs
ret
data16
stc
inc
fcmovnbe
out
aas
lea
or
dec
inc
aaa
mull
dec
lret
pop
push
mov
insb
fldenv
add
push
cmp
xchg
and
push
sbb
imul
xlat
nop
jmp
addr16
mov
scas
mov
mov
mov
cli
cmp
inc
push
mov
lock
imul
adc
inc
or
adc
shlb
adc
dec
cmpsb
arpl
iret
push
cmovnp
shlb
and
fwait
sub
or
or
test
test
jmp
arpl
jp
sub
lahf
movsl
jo
cmpb
in
adc
adc
cmp
test
mov
icebp
push
push
push
int
call
loopne
xor
or
jae
lods
mov
mov
mov
cmpsl
rorb
push
mov
pop
mov
lahf
or
adc
jns
xchg
pop
clc
in
jns
gs
jns
mov
jg
sbb
mov
xchg
pop
add
add
popf
xchg
xchg
in
mov
pop
es
cs
dec
mov
and
or
sub
lds
call
leave
sub
sbb
or
jp
iret
fldcw
lock
jae
mov
pusha
filds
das
dec
mov
dec
and
ss
fstp
cltd
out
sub
inc
fs
cltd
push
loope
mov
sbb
inc
fdivrl
adc
dec
mov
sub
xchg
push
sti
bound
mov
inc
mov
mov
mov
pop
adc
pop
push
sub
movsb
xchg
mov
add
je
xchg
xor
insb
xor
push
and
cmp
das
mov
and
icebp
jp
dec
dec
in
call
rorb
sub
sahf
js
imul
mov
call
flds
lret
sbb
push
jae
inc
cs
dec
xor
jae
icebp
push
adc
roll
out
xor
xchg
loope
xchg
mov
inc
int
sbb
dec
lock
add
pop
adc
repz
movsb
ds
adc
mov
dec
pop
or
add
pop
or
mov
pushf
adc
push
pop
pushf
mov
aam
pop
or
icebp
scas
testb
fucomip
xchg
loope
xchg
dec
pop
adc
adc
inc
sbb
dec
and
leave
adc
jl
sbb
movsl
jp
ja
add
pop
pop
dec
jno
arpl
pop
add
clc
lods
sbb
aaa
je
mov
push
lret
jno
aam
dec
adc
jle
add
cmp
adc
das
outsb
imul
shufps
pop
ret
xchg
add
mov
or
dec
imul
ret
test
sbb
jle
jne
inc
loop
in
dec
inc
push
into
jecxz
das
call
sbb
or
lods
fwait
mov
xchg
out
xchg
popa
and
add
lds
cmpsl
cmp
push
xchg
test
mov
cld
pop
arpl
stc
es
adc
jne
out
dec
sub
mov
xor
sbb
mov
jae
xchg
dec
or
sub
fwait
int3
or
xor
cld
xor
xchg
pusha
xchg
sbb
pop
cltd
je
dec
inc
dec
mov
mov
and
std
out
es
pop
repnz
pop
dec
jnp
cs
les
inc
or
mov
xchg
arpl
fildll
mov
dec
pushf
xor
test
hlt
pop
pop
negl
sbb
and
loop
shr
jp
mov
jno
divb
out
notl
xchg
sahf
push
mov
inc
mov
aaa
popf
clc
mov
sbb
or
and
cmp
push
sub
lahf
adc
je
mov
mov
add
ss
hlt
outsl
jno
pop
cmp
push
cmp
or
icebp
mov
clc
adc
daa
push
dec
mov
push
xor
sahf
hlt
dec
sbb
jl
xor
imul
testb
jmp
jl
mov
xor
insb
mov
mov
dec
inc
cmp
adc
add
stos
xor
xor
cli
mov
and
sbb
mov
pop
pop
dec
sub
mov
sbb
dec
sbb
push
bound
mov
fidivrs
adc
sub
mov
lods
les
fcoms
pushf
or
push
jl
and
test
movsb
adc
lods
loopne
iret
negb
or
in
gs
push
test
inc
rorl
decb
enter
push
popa
rcrl
mov
sub
pop
inc
jl
addr16
dec
mov
lret
mov
shl
push
loop
push
mov
mov
cltd
jp
out
xchg
cwtl
adc
add
adc
int
in
fidivrl
pop
xlat
lds
adc
jno,pt
pop
cmp
adc
fwait
pslld
andl
subl
push
iret
pop
adc
adc
push
mov
pop
pop
push
repnz
jnp
loop
sbb
cwtl
fidivrs
jne
sbb
les
xchg
inc
pop
xchg
cmp
lcall
leave
in
outsl
lods
add
loopne
rcl
loopew
adc
mov
xor
sbb
notb
mov
test
push
jg
and
dec
sbbl
mov
pop
inc
cld
loope
pop
and
push
sub
nop
sub
xchg
push
mov
push
cmpsb
mov
mov
sub
fsubrs
xor
mov
adc
inc
filds
lea
repz
cs
inc
icebp
ds
gs
cmp
push
lcall
aaa
and
mov
cs
and
sub
loope
enter
add
cli
cmp
into
or
xor
cmp
xor
adc
stc
stc
cwtl
mov
fiadds
or
repnz
les
sbb
cmpsl
movsb
adc
inc
int
aad
lods
add
insb
roll
xor
push
dec
popf
add
loopne
sbb
mov
jo
test
cmp
insl
mov
lahf
test
dec
clc
sub
cmp
icebp
pandn
fwait
sbb
xchg
out
and
push
mov
dec
pop
jns
pop
mov
xor
cs
mov
jmp
or
enter
cmp
cmpsb
mov
mov
mov
out
daa
js
jns
jge
add
xor
xchg
scas
cltd
arpl
or
push
jnp
insb
and
jb
jno
mov
lea
cmp
xchg
cmc
sub
stc
decb
in
jl
push
daa
clc
fstl
mov
jp
ds
sarb
ja
xchg
adc
xor
mov
aad
ret
imul
inc
cmpb
aas
inc
pusha
arpl
push
mov
or
sub
ret
into
ret
inc
gs
test
or
lea
je
dec
leave
mov
inc
icebp
andb
dec
in
cltd
shll
jl
push
in
pop
adc
dec
mov
xchg
in
pop
icebp
push
and
ljmp
fldl2t
rcll
aad
xchg
fdivrl
pop
gs
out
lds
divl
orl
pop
notb
cmp
in
sub
cmp
loopne
mov
sub
xor
pop
repz
inc
testl
loop
popf
fs
dec
adc
mov
dec
mov
je
aaa
popa
jmp
cmp
loopne
pop
loope
insb
xor
inc
jnp
xchg
cs
lds
mov
cmc
push
pop
or
mov
push
pop
or
lcall
xor
pop
dec
aam
scas
cmp
cld
test
dec
and
ss
clc
mov
mov
lcall
xchg
aam
adc
addb
ficoml
rcll
jb
popf
out
dec
sbb
aad
dec
addb
push
in
adc
mov
in
das
cltd
mov
xchg
cmp
into
add
nop
dec
mov
push
sub
or
push
sti
mov
pop
ret
das
pop
sbb
sbb
pop
in
lock
mov
popf
pop
sub
mov
fcompl
lret
test
stos
xor
sub
pop
aas
js
je
aaa
and
cli
xchg
daa
movsl
fcomps
pop
push
call
push
xchg
aas
inc
cwtl
xor
pop
cli
fisttpl
or
xchg
sbb
fs
mov
outsl
push
enter
and
int3
jecxz
sbb
test
lret
mov
xor
dec
and
leave
xchg
repz
sbb
add
lds
ss
xlat
ffree
lahf
mov
loop
push
sbb
faddl
cmp
in
clc
ds
pusha
enter
mov
xchg
jp
fistpl
lcall
leave
or
mov
jae
or
jp
jmp
xor
add
fiadds
gs
nop
push
mov
aaa
ss
mov
and
lods
xchg
and
adc
mov
aas
adc
lahf
adcb
sub
mov
and
pop
incb
and
or
dec
jae
lret
push
lods
js
shll
jle
mov
testl
mov
push
outsl
mov
leave
jmp
sub
inc
imull
mov
cs
fs
dec
jae
out
jno
push
and
ljmp
in
add
pop
xchg
jae
push
lods
data16
imulb
cmp
jmp
divl
movsl
jbe
push
lret
out
test
inc
loope
lcall
sbb
shrl
push
ljmp
lods
insl
es
mov
jno
ret
xor
dec
cmpsb
inc
adc
lods
addr16
lds
sbb
dec
jmp
invd
inc
ret
ja
cmpsb
mov
lods
or
ss
ds
fcmovb
imul
jb
pushf
movsb
push
push
jnp
xchg
xor
outsl
mov
mov
cli
mov
add
dec
push
js
or
lea
rep
mov
pusha
leave
sbbl
add
outsl
cmp
test
jp
test
adc
or
ret
pushf
or
xchg
sub
add
inc
adc
inc
fnsave
lea
inc
mov
jecxz
nop
mov
movsb
fucomi
and
stos
or
dec
add
and
jg
insl
and
dec
push
clc
imul
fistpl
and
in
ffreep
out
lock
inc
inc
push
mov
and
fisubrl
jl
dec
lock
sbb
inc
jp
mov
pop
inc
ja
mov
hlt
lret
xchg
and
mov
popa
fsubs
push
loop
push
ja
imul
mov
mov
rorb
mov
outsb
ljmp
lret
xchg
adc
or
aam
jb
cwtl
sahf
lret
cmp
ja
add
mov
ret
adc
ret
pushf
rcll
imull
xchg
pop
daa
or
mov
mov
mov
clc
js
bound
andl
cld
cmp
or
xchg
mov
or
aaa
sbb
ss
enter
cmc
fstpl
jno
xchg
nopl
aad
cwtl
rcr
cmp
ja
outsl
pop
pop
pop
pop
xchg
cmpl
enter
xor
and
mov
scas
mov
hlt
fnstenv
inc
sarl
jmp
icebp
jmp
mov
test
inc
lahf
or
pushf
test
sbb
aad
push
jg
xchg
pop
jl
dec
enter
scas
cmpb
jp
mov
and
sub
shlb
enter
add
mov
in
out
cmc
cwtl
int3
adc
inc
ja
adc
ljmp
mov
in
cmp
dec
mov
cmpsb
mov
leave
out
pop
mov
push
fisubrs
xchg
and
mov
in
xor
inc
les
cmp
cmp
sub
repnz
shlb
xchg
test
fcompl
subl
dec
and
lcall
out
jns,pn
sbb
mov
adc
aaa
pop
inc
aas
sarl
int3
movsb
dec
dec
aad
push
sbb
enter
pop
mov
daa
push
mov
jnp
popa
sub
daa
push
mov
jb
dec
add
fsincos
lods
ret
mov
jo
lret
mov
dec
insl
test
imul
dec
mov
fstl
add
mov
sti
jmp
or
mov
aam
pop
pop
incl
mov
jne
inc
sbb
xchg
lds
jae
fnstenv
inc
sbb
sbb
jb
pop
daa
and
or
rcll
and
xor
lcall
mov
cmp
mov
add
push
in
leave
jg
adc
je
loop
mov
pop
cmp
dec
je
adc
testb
std
inc
sub
inc
stc
movsb
sti
jno
movsb
dec
mov
mov
pushf
lds
push
mov
jl
ljmp
inc
ds
jo
mov
lret
xor
mov
lods
mov
repz
adc
cmp
popf
cmpsl
xorb
jg
add
mov
pop
test
cmpsl
bswap
xchg
cmp
mov
out
repnz
shr
rorb
xchg
fld1
outsl
mov
sbb
jnp
jnp
and
jge
or
lock
adcl
clc
std
or
jecxz
push
pushl
mov
mov
xchg
jno
scas
inc
lret
std
cmp
jno
popa
je
hlt
out
push
stos
add
imul
xor
xchg
cld
out
sub
and
jae
sub
mov
push
js
in
hlt
int
fisubs
sub
arpl
and
xor
in
ficoms
or
add
enter
pop
sub
ret
mov
rcl
jbe
sub
arpl
fs
aad
sub
adc
cmp
sbb
int3
push
or
fiaddl
and
dec
icebp
iret
push
jmp
mov
xor
lar
pop
jge
adc
jle
cmc
hlt
jmp
fisubs
cmp
and
testb
das
xlat
cmp
cwtl
and
add
loop
in
fstpt
insl
add
sbb
cltd
pop
adc
add
int3
inc
lea
out
xchg
mov
dec
inc
fwait
imul
mov
mov
sbb
dec
outsl
pop
pop
scas
fists
ja
and
cli
arpl
movsb
movsb
daa
outsb
loope
pop
sbb
xor
inc
dec
adc
das
xchg
cmp
sti
in
out
mov
nop
inc
popa
pop
push
pop
and
inc
out
mov
xor
movsl
cli
mov
jp
sbb
lea
clc
sub
sub
loopne
outsb
sub
nop
fnstenv
push
adc
aad
loop
movsb
push
cmp
mov
shl
mov
decb
cmp
stc
push
inc
call
or
push
sbb
mov
add
sub
in
clc
push
adc
sarl
sbb
adc
add
cmpxchg
pop
sbb
lahf
fldt
stos
test
sbb
cld
fs
push
dec
inc
popa
push
mov
hlt
ljmp
or
sub
dec
js
jecxz
inc
inc
sub
mov
aad
imul
sbb
mov
sub
nop
pop
lcall
inc
and
dec
xchg
jp
or
pop
outsb
xor
lret
or
fiaddl
cmc
ljmp
cmpsb
mov
xchg
mov
cli
pop
pop
clc
loopne
popa
dec
mov
cwtl
push
mov
mov
into
aad
lret
sub
xor
sub
aas
xchg
jb
arpl
lods
pop
mov
lods
sub
xchg
jnp
adc
js
pop
aas
sbb
mov
mov
repnz
sub
mov
jne
addr16
adc
pop
sub
jae
cmp
mov
jae
cmp
dec
jmp
testl
test
outsb
in
std
sub
dec
fldl
jns
movsl
pop
out
lock
pop
icebp
cmp
jnp
sub
stos
mov
dec
sub
inc
repz
xchg
arpl
shl
adc
push
jp
adc
pusha
flds
add
movswl
and
sti
mov
lea
lret
cltd
xchg
cmpsb
out
mov
pop
xor
pop
fstps
call
std
ljmp
xchg
mov
jae
call
mov
xchg
inc
rol
sub
popa
push
dec
orl
das
inc
repz
xor
add
inc
fdivrp
pop
pop
xchg
aad
sbb
xchg
or
in
push
loop
ja
mov
fiadds
into
pushl
ret
xor
add
push
fdivs
fidivl
mov
ss
loope
push
std
mov
repnz
xor
shrl
jns
sbb
ret
cmp
and
jecxz
jecxz
enter
xor
enter
iret
add
jae
mov
ja
shr
inc
lret
test
in
cmp
dec
aaa
mov
into
ljmp
test
imul
jbe
mov
loope
cli
dec
mov
fwait
mov
jo
xor
cmpl
sahf
loopne
sbb
les
jmp
sbb
xor
dec
imull
xor
sahf
rcrl
stos
and
pop
adc
out
add
sub
fwait
cmp
sbb
sarb
cmc
insb
or
cmpsb
pushf
lret
inc
jge
jge
hlt
mov
mov
add
and
lret
mov
popa
mov
out
cmp
and
xchg
mov
xchg
fxch
out
insl
neg
fbld
mov
jmp
ret
xor
movsl
out
add
pop
rcll
inc
subl
rolb
push
jae
inc
outsb
mov
aad
jnp
lods
jmp
cmp
stos
xchg
add
mov
test
inc
leave
add
pop
idivl
push
push
jecxz
iret
mov
popa
jbe
sbbl
push
lods
test
data16
cwtl
xor
cmc
cmpl
xor
xor
jg
mov
lcall
mov
scas
mov
mov
sbb
add
mov
xor
dec
cs
lods
mov
imul
xor
jmp
leave
mov
mov
push
leave
outsb
jecxz
nop
cltd
pop
into
fs
push
mov
pusha
addr16
sarb
add
jecxz
je
enter
mov
imul
in
test
popa
cmp
pop
mov
movsb
imul
fwait
adc
sti
or
es
out
cmpsb
add
jbe
out
and
in
push
xchg
int3
mov
push
inc
or
inc
fwait
sub
adc
aas
dec
adc
cltd
pop
dec
or
mov
rcr
xchg
xlat
pop
dec
repz
jg
jg
mov
cmp
pusha
sub
mov
jmp
inc
sub
dec
adcl
aaa
inc
insl
sub
fwait
and
pop
mov
lods
push
rcrl
loopne
lret
add
inc
xor
rol
sub
and
int
dec
in
sub
xor
cmc
mov
inc
mov
out
push
and
cmp
inc
adc
std
cmp
dec
cs
xchg
sbb
pop
sahf
lods
inc
dec
push
outsl
lret
xlat
jmp
in
stos
ret
inc
je
mov
mov
push
mov
push
push
push
add
into
xor
pop
and
rclb
adc
xor
mov
lcall
or
xchg
push
fsubp
jmp
push
loop
xchg
stc
call
cwtl
xor
sub
imul
jg
ret
mov
pop
and
ljmp
lahf
popf
lods
inc
mov
cltd
pop
scas
pushf
push
mov
cmp
or
decl
cmpsl
xchg
inc
adc
mov
jl
cmp
mov
jg
pop
test
aam
jmp
mov
mov
andl
mov
subl
das
push
mov
negb
push
mov
mov
xchg
gs
popf
cmpsl
aas
pop
pushf
shr
pop
add
jge
push
mov
add
sub
daa
inc
mov
sahf
pop
mov
jecxz
test
rcll
xchg
iret
sub
inc
push
mov
cmc
repz
and
shl
jmp
movsb
out
mov
repz
dec
fildl
popl
pop
lods
pop
xchg
xor
in
fsubl
mov
hlt
sbb
push
and
into
add
hlt
int3
dec
fidivrs
iret
push
mov
pop
sub
mov
pop
loopne
je
inc
pop
je
stos
adc
cli
xchg
icebp
iret
popa
daa
or
xchg
jecxz
psubusw
mov
cli
mov
sti
fisttpll
daa
xchg
mov
outsb
scas
sbb
out
mov
rclb
fists
mov
mov
jns
dec
push
jb
mov
sahf
mov
icebp
ss
mov
add
sbb
inc
and
and
xor
add
pop
jp
das
lods
stos
bound
jae
xchg
jno
push
push
jp
fdivrp
mov
jl
test
jo
and
stc
lds
fidivl
mov
imul
cwtl
insb
dec
mov
pop
sub
lret
jp
andl
fiaddl
mov
cwtl
adc
aaa
daa
push
pop
dec
xchg
fisttpl
adc
popf
pop
push
jbe
mov
dec
ja
jmp
out
xchg
jbe
adc
std
push
stc
xor
mov
stos
sbb
xchg
adc
jle
popl
pop
insl
dec
pop
cmc
pusha
movsl
insb
sbb
lds
dec
mov
ret
cs
inc
lret
addr16
lcall
mov
ficompl
je
cwtl
push
jg
sub
fbstp
int3
add
mov
ljmp
mov
stc
sub
add
rolb
sbb
cli
jbe
insl
sbb
lds
sbbl
adc
repnz
aam
adcb
mov
fldcw
rolb
xlat
fmuls
lods
push
adc
inc
pop
insb
push
incl
cmp
add
ficomps
push
xor
jle
arpl
xor
jne
add
shll
dec
mov
cld
iret
js
adc
or
mov
jle
sub
cmp
movsb
mov
cmp
lds
cmpsb
add
adc
push
pop
out
sbb
fdivr
ficompl
push
gs
and
and
xchg
dec
push
lret
sbb
enter
sub
loope
imul
inc
pop
push
imul
hlt
roll
and
dec
stos
dec
nop
ror
test
dec
xorb
out
sarb
jne
xchg
lock
mov
gs
add
mov
cs
insl
sarl
xor
lret
xor
popf
mov
push
pusha
push
cli
fnstcw
std
ret
jb
shlb
xchg
cs
jns
pop
adc
in
pop
into
daa
sub
push
movsb
mov
sti
xchg
mov
repnz
pop
into
sub
out
and
js
test
jp
xor
adc
and
sub
pop
sub
stos
mov
cmpb
pop
push
pop
adc
push
in
les
xlat
dec
adc
popa
add
leave
ja
aas
mov
in
loop
mov
fwait
or
ret
sub
lock
push
movsb
push
xor
cwtl
pop
sub
mov
mov
add
jg
adc
stos
sbb
mov
orb
jg
pop
ss
in
js
test
xchg
and
mov
sub
xor
jnp
pop
rclb
lret
add
adc
mov
jo
pop
mov
sahf
cmpsl
out
enter
jp
arpl
push
push
scas
stc
sbb
mov
sar
movsl
dec
pop
mov
cmp
mov
sub
nop
ret
mov
jb
daa
xchg
cmpsb
les
or
imull
stc
jae
inc
lea
jl
fiaddl
add
and
and
rsm
xor
push
adc
sub
fistpl
mov
xchg
ljmp
mov
std
sbb
push
push
les
xchg
jne
mov
js
scas
xchg
inc
ret
fldl
bound
inc
xchg
imul
inc
cmp
int3
xor
addr16
out
xchg
js
xchg
imull
aaa
shr
sbb
jle
cwtl
push
rcrl
pop
pop
in
es
fstpt
adc
enter
push
shrl
xchg
js
in
sbb
sub
fwait
sbb
jo
int
or
mov
cmc
lock
mov
cmp
mov
dec
insb
xchg
jbe
push
mov
or
xchg
sbb
jo
pusha
lret
pop
call
clc
in
push
mov
sbb
imulb
lahf
inc
push
pop
push
push
dec
leave
push
pop
jbe
test
dec
lret
inc
pop
aas
arpl
push
inc
dec
ljmp
jo
dec
cmc
cmp
stos
les
xlat
jne
or
push
adc
cwtl
push
aaa
xchg
add
cmp
cmpsb
add
push
jne
cs
push
cli
push
hlt
fldcw
jnp
xchg
sub
ret
bound
enter
xor
jno
adc
mov
and
lret
lret
aad
sbb
cmp
fistl
mov
dec
cld
pop
in
popa
push
roll
jns
mov
test
lcall
pop
push
or
mov
jg
mov
xchg
inc
jecxz
in
outsb
jnp
and
popf
insl
jecxz
sub
sbb
sti
lods
mov
popf
inc
sbb
or
clc
jne
inc
xor
dec
arpl
repnz
sbb
ljmp
mov
jae
test
push
sbb
stc
adc
mov
adc
cwtl
hlt
jns
aam
int
cld
add
inc
jl
fidivrs
xchg
lcall
js
repnz
or
orl
push
add
adc
leave
jmp
imul
push
inc
cmp
test
ret
arpl
jne
mov
pop
mov
push
xchg
cmpsb
ret
movsl
mov
and
sub
imul
pop
int3
movsl
int
jnp
mov
aaa
ret
add
sbb
lock
push
movsl
lea
dec
leave
rorb
or
lock
js
mov
pop
jmp
aam
imul
cld
leave
inc
rorl
shll
push
lea
xchg
sub
in
std
das
sbb
add
mov
imul
repnz
inc
cmpsl
cmc
in
sub
pop
sub
call
bound
faddl
cli
xor
les
jle
out
lcall
mov
mov
into
shll
sub
sbb
mov
ret
ds
dec
fwait
bound
mov
xchg
mov
and
daa
leave
jle
pushf
xchg
lock
les
scas
push
cmpl
sub
pop
or
adc
mov
dec
mov
shll
je
dec
ret
jns
inc
pop
andl
sarb
mov
adc
pop
sub
out
or
sbb
pop
rclb
data16
repz
test
les
and
int3
sbb
loopne
or
cmp
popf
roll
sbb
mov
xor
lret
jecxz
cmp
shlb
pop
dec
cmpsl
sub
pop
cmp
shll
mov
sub
lods
dec
nop
test
data16
xchg
lret
es
subb
xor
sbb
xchg
jecxz
lods
xchg
cmp
pop
push
negl
lock
es
mov
fsubrl
fs
outsb
ret
sahf
ja
cmpsb
and
push
cli
dec
jmp
jge
mov
xor
sti
test
adc
cmp
adc
push
mov
sbbb
xor
js
mov
xchg
mov
movsl
fdivrl
sbb
in
push
pop
inc
outsl
xchg
arpl
pusha
xchg
mov
scas
cmp
xchg
mov
push
and
outsb
inc
adc
push
adc
mov
das
dec
rclb
insl
scas
testl
lods
ret
xchg
pop
inc
and
aaa
mov
add
mov
push
aaa
jne
call
xchg
in
adc
jne
sub
addr16
push
fwait
es
jbe
and
push
jne
in
aaa
test
sub
add
mov
test
mov
add
xchg
stos
dec
cmp
mov
add
into
mov
push
pop
ja
lret
sbb
push
jle
lods
popf
rcrb
cs
push
sahf
or
add
jle
movsb
mov
imul
decl
and
push
and
jbe
sbb
add
pop
testl
data16
xchg
mov
jb
lds
xor
cmp
xchg
mov
jbe
pop
addb
cs
shll
stc
sbb
sbb
jo
into
jl
enter
int3
vorps
stc
fists
les
mov
in
or
insl
pop
xchg
xchg
add
pop
loopne
inc
leave
mov
sbb
jp
mov
xchg
xorl
movsb
js
xor
cmp
fnstcw
ret
outsb
insl
push
push
xchg
loope
test
cmpsl
pop
icebp
sbb
jle
or
jnp
aam
mov
push
push
test
aad
xchg
xlat
push
jns
jae
outsb
xor
push
mov
or
loopne
mov
scas
and
stc
push
mov
cs
inc
ljmp
inc
insl
sbb
pop
dec
mov
cs
cmp
mov
fcoml
fildll
mov
pop
push
jne
jp
fstp
mov
jecxz
xchg
popa
push
out
div
fcom
mov
add
lret
or
popf
scas
mov
in
mov
lods
and
xor
js
test
jecxz
add
mov
dec
add
adc
jge
xor
and
rcrb
aaa
sub
or
stos
dec
sbbl
fcompl
xlat
imul
jle
mov
mov
or
adc
xchg
ret
or
out
outsl
scas
sub
bound
sub
hlt
mov
pop
jl
out
xchg
xchg
setge
test
imul
ljmp
scas
push
push
scas
iret
sub
jg
insb
pop
outsb
or
popa
push
in
push
push
scas
sub
dec
mov
or
jp
pop
add
dec
fisubl
jns
cmp
cmc
fidivrs
roll
sbb
add
xchg
enter
and
push
pop
mov
dec
jl
mov
inc
outsl
test
sbb
sbb
add
cmpl
lods
add
test
adc
jl
push
lret
mov
lea
sub
dec
rclb
xchg
pop
leave
push
out
push
cmpsb
ss
mov
aam
arpl
or
addr16
dec
jl
mov
insl
sbb
or
ret
jle
andb
outsl
popa
lcall
inc
xor
lahf
inc
dec
or
icebp
inc
adc
xor
cmp
dec
push
mov
and
mov
lock
push
sbb
sti
das
call
rcl
inc
cmp
cltd
jbe
loop
sbb
mov
pop
push
add
lea
cmp
jl
roll
pop
jl
lods
or
rclb
jno
sbb
inc
pop
cmpsb
jmp
mov
data16
arpl
pop
xchg
imul
xchg
fimull
dec
jl
mov
push
lods
sub
outsl
std
js
xor
fisttpl
loope
fs
leave
cmp
cmpsb
cs
fldcw
push
jno
cld
pusha
jge
and
fbld
aas
mov
not
xor
xor
push
mov
cmp
sub
fdivrp
mov
push
lret
jbe
pcmpgtb
fwait
in
addb
pushf
push
pop
push
sbb
aam
push
je
popf
jno
sub
sahf
mov
nop
adc
test
iret
cltd
mov
mov
xchg
xor
jo
cmpsb
adcb
sti
and
mov
push
fidivs
bnd
cs
ret
clc
cld
into
mov
xor
inc
dec
outsb
adc
lock
movsl
stc
mov
dec
push
add
sub
sub
mov
das
and
mov
lcall
cld
add
jmp
push
cmp
xor
lock
sti
mov
fistps
pushf
inc
out
cmp
add
dec
stos
test
aam
loop
jl
sub
insb
xchg
jne
test
les
shlb
scas
ja
js
mov
ljmp
cmp
pop
sbb
shrl
pop
leave
jmp
add
les
loop
arpl
insl
mov
mov
testb
pop
xchg
lcall
sub
insl
rolb
cwtl
mov
sbb
cmpsl
mov
aas
test
cmp
gs
mov
xor
cwtl
xchg
por
adc
jno
in
pop
pusha
sub
xchg
loop
or
fsubl
into
and
sub
jmp
lret
dec
lock
push
popf
stos
mov
cli
xlat
mulps
xor
sbb
lods
adc
icebp
cwtl
inc
jae
push
es
mov
nop
cmpb
xchg
pop
sbb
insb
mov
cwtl
fdivs
pop
lret
mov
clc
lea
pusha
ret
imul
xor
ret
adc
or
jmp
int3
sub
or
out
lcall
pop
inc
movsl
ss
rolb
cmp
fwait
stc
call
mov
sub
in
test
mov
pop
push
stos
out
sbb
fs
aad
out
jns
or
ds
cld
clc
push
mov
mov
mov
repnz
push
mov
inc
push
andb
test
aam
bound
lret
je
lea
pop
dec
adc
out
and
pop
inc
pop
fcmovbe
and
sahf
jno
jno
dec
xor
cltd
ja
gs
cmpsb
imul
inc
jns
pop
sbb
pop
xor
mov
sub
clc
xchg
sub
cmp
xor
loopne
in
pop
and
bound
mov
adc
and
xchg
sub
addr16
mov
ret
cmp
cmc
pop
movsb
pop
mov
lret
mov
cmp
outsl
lret
xchg
int
lret
mov
sbb
das
ja
ficoms
xchg
ja
xor
ret
es
pop
adc
imul
sbbl
fstpl
jno
xor
out
and
cmpsb
ja
xor
adc
and
aas
pusha
inc
data16
test
pop
stos
cmp
jno
inc
sub
sbb
popf
mov
pop
enter
scas
ja
mov
jae
in
fimuls
notl
scas
std
movsb
mov
cmpsl
aam
out
and
es
loop
xor
push
ror
incb
jns
std
mov
xchg
push
dec
cs
jae
mov
test
aad
or
data16
lsl
dec
inc
sbb
sub
lock
outsb
push
sti
mov
push
sahf
test
inc
int
test
jecxz
pop
pop
cmp
lds
sub
outsl
dec
sbb
mov
adc
xor
popa
mov
sbb
sub
and
or
lret
mov
xchg
jae
ds
data16
lods
sbb
lahf
repz
stos
dec
add
jae
and
aad
mov
outsl
pop
int3
pop
lock
xor
sbb
cli
mov
push
clc
mov
mov
arpl
fcompl
pop
xchg
stc
mov
pop
lock
mov
sbb
lods
sbb
fiaddl
sub
scas
jmp
mov
jg
xor
scas
inc
lods
loope
pop
shrl
pop
mov
lock
dec
mov
imul
dec
cmp
fstpt
test
icebp
dec
push
js
cmp
repz
scas
sti
mov
mov
sbb
mov
int
pop
outsl
add
hlt
jb
testb
or
loop
pop
pop
xchg
lret
mov
insb
je
enter
imull
sbb
inc
or
inc
mov
je
movsb
pop
aaa
sbb
cli
lock
lcall
fisubl
xchg
pop
rclb
loop
pusha
stc
out
rcll
cmp
sbb
je
int3
leave
mov
shll
pop
pusha
jns
or
popf
movsb
jbe
test
jbe
jne
xor
test
adc
fs
pop
jle
mov
shrb
mov
xchg
cli
sub
xor
testb
add
adc
stos
mov
sub
pop
inc
lret
add
mov
adc
daa
mov
sub
push
popa
mulb
dec
add
mov
xor
cmp
sub
dec
mov
push
or
and
push
push
add
sbb
pusha
fwait
aad
into
mov
sbb
fmull
sub
mov
jmp
aaa
mov
cmpsl
or
jb
pusha
lret
mov
test
out
das
xchg
andl
ss
sub
fidivrl
ja
xlat
mov
mov
aam
lcall
divb
popf
mov
jmp
nop
hlt
inc
adc
xchg
andb
loop
sbb
mov
jp
fdivrs
mul
pop
inc
push
and
cld
mov
bound
sub
test
push
insb
out
arpl
je
lahf
lahf
and
cwtl
popa
cs
lods
cmpsb
dec
push
rcll
data16
repnz
or
jno
sti
leave
dec
je
inc
dec
push
adc
mov
sahf
add
pop
inc
mov
push
xchg
fcmovnb
inc
repnz
ret
mov
adc
imul
mov
nop
pop
pushf
fnstcw
dec
xor
push
add
inc
imul
mov
jp
sub
mov
or
mov
sti
dec
fwait
and
inc
or
inc
mov
mov
js
or
ss
in
xor
mov
fldt
add
leave
xchg
shll
mov
cmpsl
mov
hlt
rcrl
iret
shll
push
scas
aaa
sbbb
ret
add
call
testb
dec
inc
add
lock
repz
out
dec
and
mov
inc
scas
adc
lock
and
test
in
jns
push
or
inc
dec
inc
testb
aad
loop
arpl
hlt
cwtl
loope
inc
xlat
mov
adc
or
ret
sahf
jb
stos
roll
sub
pop
cmp
lret
inc
jne
out
pop
adc
mov
nop
mov
pop
fildll
cltd
fwait
sub
daa
push
hlt
das
cld
negb
aaa
divb
pop
imul
xor
or
jl
sbb
mov
loopne
call
adc
pop
div
push
sub
xchg
mov
lods
push
leave
jge
fistpl
or
mov
and
in
jb
movsb
repnz
out
mov
shlb
cmp
fsubrs
imul
in
dec
mov
xchg
dec
lret
hlt
and
mov
push
mov
sub
sarb
clts
ret
cmp
xchg
test
mov
ja
lahf
insl
clc
sub
mov
shll
push
xor
or
jo
or
sbb
mov
xchg
pop
push
les
xchg
and
in
orl
fwait
out
repnz
cltd
adc
test
sti
xor
add
sub
int3
push
jnp
mov
adc
or
xlat
and
push
sbb
jns
imul
xor
xor
in
jae
and
ds
pusha
add
stos
jae
cmp
inc
jmp
push
test
lea
push
stc
push
dec
lcall
test
push
add
out
scas
movsb
in
mov
xchg
das
mov
movsl
std
mov
mov
mov
data16
loope
or
inc
pop
sbb
mov
ds
and
les
add
pop
adc
cltd
stos
pop
dec
mov
and
out
mov
jle
ja
push
push
push
jb
lea
push
iret
mov
push
pop
and
ss
jle
mov
imul
imul
addr16
push
movsb
push
adc
or
xchg
sub
mov
add
xor
mov
outsl
sbb
push
pop
out
jbe
das
jnp
stos
loope
inc
and
dec
mov
sub
popf
jl
lods
cwtl
dec
inc
dec
xchg
pop
dec
nop
lret
shlb
mov
and
or
jecxz
dec
fadd
notl
popa
push
dec
adc
or
ljmp
adc
adc
inc
movsl
jmp
push
jmp
adc
lods
pop
ror
push
push
enter
sbb
pop
stos
jmp
mov
xor
aaa
mov
sbb
je
sub
shlb
inc
jmp
and
mov
sub
fstps
movsb
hlt
fisubs
call
lock
mov
sti
pop
cmpsb
shll
xchg
jl
sti
cmp
jne
cwtl
adc
out
cmp
sar
aas
sti
lds
sbb
mov
and
lcall
out
ljmp
roll
jns
jnp
add
dec
outsl
sbb
fbld
ret
int3
popf
aaa
aas
cmp
mov
add
sbb
pushl
adc
mov
sbb
mov
or
sub
sbb
inc
hlt
pusha
xor
mov
loop
and
jb
mov
sahf
fcoms
out
or
dec
inc
clc
rolb
cmp
cmp
or
cmp
and
movsl
mov
ficoml
cmp
jb
js
imul
adc
add
sti
stos
mov
lods
inc
in
add
xchg
or
repz
mov
cmp
inc
push
js
addr16
cmp
cmp
orb
data16
push
dec
xor
icebp
cmpsl
popa
mov
push
out
lahf
add
or
bound
mov
leave
jecxz
adc
push
adc
dec
sbb
fs
stos
pop
lcall
aad
cld
xor
mov
sbb
inc
movsb
pusha
das
xchg
arpl
xor
ds
lea
push
std
lret
xchg
out
ja
lcall
sbb
mov
sbb
filds
out
xor
outsl
testl
sub
pop
sbb
or
mov
cmp
mov
cmp
cmp
adc
mov
xor
loop
jae
ret
mov
fsubrs
cwtl
dec
mov
mov
call
or
xchg
or
aaa
gs
adc
jmp
cmpsl
add
push
and
jno
mov
push
inc
sahf
jl
arpl
mov
lods
sub
sti
std
cmp
pop
outsb
nop
sar
push
or
scas
mov
stos
mov
sub
sti
daa
fldt
mov
pop
scas
loope
cli
mov
mov
sbb
fsubs
ja
aaa
push
rcrb
and
add
sbb
lock
ret
sub
imul
cmp
das
test
mov
int3
into
pop
and
pop
xor
outsb
out
movsl
pop
xor
insb
movsl
push
insb
jge
loop
faddl
jae
xchg
sub
cmp
cltd
sbb
mov
cs
gs
add
div
sbb
stos
arpl
xchg
push
and
in
ja
lea
jp
mov
adc
or
outsl
out
in
in
mov
inc
cs
jno,pn
dec
push
jle
out
ds
jb
pop
fcoml
test
push
rcrl
inc
mov
adc
dec
add
rcrb
and
cld
bound
imull
int
ret
fwait
and
jne
and
shl
xor
movsl
pop
fs
pop
dec
mov
dec
es
or
scas
mov
in
adc
push
xchg
push
out
cmp
jge
fists
mov
nop
ss
icebp
enter
insl
xor
mov
jge
ljmp
es
and
and
cwtl
jle
hlt
mov
stos
sub
shr
mov
push
pop
shll
sub
test
mov
xchg
int3
dec
shlb
test
sbb
test
xor
mov
dec
aad
pop
xlat
inc
push
cmp
scas
cwtl
addl
or
mov
pop
jecxz
or
sbb
hlt
pusha
sti
push
cld
add
pop
add
mov
push
mov
jno
cmp
hlt
ja
xor
lret
frstor
xor
xor
shl
stc
shl
mov
in
fldl
sbb
xor
jne
out
push
bound
cmp
or
xchg
xchg
push
cmp
mov
cmp
fistps
insb
cmpsl
movsb
std
jnp
sbb
in
xor
mov
and
imul
push
xor
jae
dec
dec
outsb
pop
aad
aaa
lret
pop
xor
mov
imul
in
adc
cli
dec
dec
call
ljmp
loop
adc
or
test
sbb
jae
shll
into
pop
js
fwait
or
dec
bound
dec
dec
mov
jne
pop
loopne
bound
mov
mov
iret
sub
arpl
filds
leave
mov
roll
mov
ss
iret
sbb
push
lods
pop
fimull
insl
xchg
ljmp
mov
dec
les
and
fiaddl
mov
cmpsb
mov
inc
or
inc
pop
ret
inc
lods
js
aad
aaa
ret
call
lea
sub
sub
pop
inc
pop
cmp
les
test
jp
pop
and
lret
mov
dec
jns
mov
mov
inc
cmp
lea
or
lret
mov
cmp
sub
push
jmp
pop
daa
cmp
mov
adc
mov
mov
or
xlat
xchg
aas
test
mov
jmp
sub
adc
push
je
fisubrl
jge
hlt
imul
mov
roll
nop
mov
push
lahf
pop
xchg
test
xor
subl
mov
sub
inc
lcall
push
std
lret
xchg
inc
push
xchg
stos
jne
pop
ds
fnstsw
mul
test
xchg
fisubs
fwait
add
pop
sub
sub
sbb
rcl
inc
roll
movsl
scas
mov
ret
loop
xor
ljmp
sbb
mov
insb
repnz
cmp
cmp
scas
adc
jle
dec
or
push
and
icebp
repnz
and
enterw
fs
dec
xchg
push
stc
ss
out
gs
push
stos
or
fidivrs
add
xchg
add
aas
dec
repnz
mov
repnz
mov
daa
ja
dec
pop
push
adc
aaa
add
enter
push
ret
in
mov
sbb
and
xorb
mov
test
push
test
lahf
sub
pop
lea
xchg
push
test
xor
dec
jg
adc
and
addl
std
mulb
incb
adcb
aas
push
adc
loopne
jno
push
nop
imulb
hlt
gs
nop
jmp
test
sbb
cmp
call
call
into
icebp
dec
jbe
add
adcl
frstor
hlt
ss
push
jns
mov
pushf
mov
out
mov
add
pop
stc
shll
test
xchg
lods
iret
inc
add
adc
addr16
pop
sub
xlat
push
push
inc
lahf
dec
adc
daa
bound
ja
clc
xor
sbb
icebp
or
push
jno
mov
jge
repnz
test
push
mov
pop
adc
mov
or
push
insb
sarb
xchg
jo
jge
jl
movsb
in
stos
adc
in
in
nop
in
lret
inc
cld
push
repnz
fimull
pop
ds
and
and
or
adc
jb
nop
int
xchg
sbb
ss
push
sub
movsb
stc
dec
repz
fnstsw
popa
icebp
aad
out
stos
out
out
jle
mov
rol
pop
rcr
dec
bound
mov
inc
adc
or
mov
inc
jbe
sub
js
sbb
and
int3
jne
push
cltd
or
sbb
mov
adc
xchg
push
cmove
fwait
cmp
stos
or
push
cmp
push
pusha
les
pop
fidivrl
or
lods
or
sbb
push
push
mov
enter
mov
push
dec
test
loopne
imul
sbb
cmc
divl
mov
jns
cmpb
sti
xchg
decb
mov
lcall
jle
mov
mov
and
and
pop
add
pop
jae
adc
mov
js
inc
rcrb
xor
cmp
mov
idiv
shl
lahf
adc
sti
sbb
pop
pop
push
push
dec
ja
xchg
daa
jecxz
xchg
xor
mov
fisubrl
cmp
and
cmpsl
jae
lds
cmc
mov
icebp
in
adc
repnz
mov
fs
clc
add
and
dec
pop
ss
push
sbb
pop
mov
sbb
and
cltd
jae
mov
adc
addl
xchg
or
xchg
adc
sbb
or
fdiv
sbb
push
orl
mov
jnp
push
sahf
mov
jae
imul
sbb
mov
add
cmc
mov
int
mov
popa
pop
das
push
or
add
aad
jl
cs
mov
dec
sbb
out
bound
inc
mov
add
mov
mov
add
andb
adc
push
adc
iret
push
call
loopne
mov
push
sar
lret
imul
inc
mov
push
xor
mov
icebp
and
rclb
mov
mov
or
or
dec
pusha
pushf
cmp
pop
stos
mov
mov
dec
lea
sti
pop
sub
sub
shr
frstor
sbb
mov
jl
push
test
dec
sbb
mov
insl
test
cltd
push
sub
or
cli
and
or
sqrtps
or
sbb
rorl
adc
xor
jno
push
scas
nop
mov
adc
lahf
fidivrl
or
pop
fwait
push
call
mov
jae
xchg
repz
jmp
xchg
cmpsl
push
cmpsl
or
or
ret
loope
sbb
inc
dec
mov
dec
ss
mov
adc
out
cmp
shll
in
mov
cli
xchg
mov
addr16
adc
scas
pop
mov
xor
loopne
out
cld
repnz
arpl
pop
jge
int
xor
cmp
xor
jle
and
mov
sbb
xchg
pop
jl
pop
mov
scas
hlt
push
xor
jg
fstpt
call
insb
cmp
sbb
cmp
in
dec
or
adc
pop
mov
pushf
into
jbe
cmp
insb
xchg
mov
pusha
fwait
jecxz
adc
loopne
mov
lea
sbb
cmpsl
int3
das
cmp
jge
addb
call
adc
jno
test
adc
mov
icebp
push
sarb
shrb
out
mov
in
rcr
push
kaddb
mov
stos
outsb
fs
push
insl
popl
out
das
mov
aas
adc
dec
adc
xor
data16
fsts
nop
or
jae
clc
or
sub
ret
add
dec
mov
and
push
adc
jl
push
fdivs
mov
push
mov
dec
adc
sub
adc
out
cmp
push
pop
adc
push
scas
sbb
push
mov
cld
or
stos
in
cmpsl
outsb
hlt
cmp
mov
aad
adcl
mov
lods
xor
xor
add
jg
pusha
sub
test
lock
cmp
mov
jmp
shlb
jo
pushl
xor
ja
addr16
mov
inc
sbb
jmp
sbb
cmp
mov
roll
adc
jne
idivb
ror
in
das
adc
insl
fsub
or
ret
repnz
cld
and
mov
sbb
es
arpl
jae
adcb
imul
add
fmuls
jno
push
pop
cld
jp
lock
jne
mov
push
mov
sti
mov
pop
nop
inc
in
cmp
and
loop
lock
inc
jg
adc
pushaw
mov
jae
test
mov
mov
push
xchg
sub
pusha
adc
out
test
popf
push
data16
mov
jp
or
pop
jno
roll
fcoms
mov
cs
jno
pop
leave
mov
outsb
xchg
das
mov
mov
stos
and
push
fs
mov
mov
outsl
mov
movsl
or
sub
daa
lea
scas
bound
ljmp
hlt
lods
sub
dec
pop
repnz
dec
cmp
shl
add
scas
or
loope
fcomip
jns
stos
cmc
xor
repnz
mov
cli
rcrl
ja
jp
or
xor
imul
loope
out
xchg
cmp
jno
push
mov
pop
pop
and
addr16
scas
xchg
mov
inc
xchg
lret
and
inc
cs
inc
jle
sub
jecxz
hlt
psraw
int3
repz
rcll
ss
sub
push
pop
mov
shl
add
cmp
fisttps
jp
jae
sub
pushf
cmc
shll
mov
arpl
xor
xor
add
inc
mov
jne
leave
jle
call
imull
mov
roll
inc
cwtl
icebp
cmp
testb
int
xor
pop
insb
xchg
cmpsb
hlt
call
push
push
xchg
fs
rclb
push
xor
shrb
mov
bnd
js
cwtl
dec
rcrl
icebp
or
es
sbb
jl
sub
in
jp
cmp
subb
nop
push
mov
movsl
xchg
pop
dec
mov
sbb
daa
adc
jge
lret
insb
dec
bound
push
lock
dec
jae
popa
fnstcw
xor
xchg
push
rorb
jge
mov
dec
enter
mov
dec
jmp
inc
std
push
aam
call
xor
pop
ds
int
pop
imul
cltd
jle
and
aad
js
decl
aad
lods
out
mov
sti
mov
mov
cld
sbb
xor
imul
aam
popa
cmp
xor
or
cmpl
insl
filds
icebp
jae
test
xor
sub
pop
mov
and
sub
mov
nop
xlat
pop
pop
pop
sub
or
push
ss
pop
mov
mov
jo
repnz
test
test
scas
or
imul
sub
leave
lods
jl
pop
fstl
sbb
xchg
repz
push
sub
dec
inc
repnz
push
iret
addr16
popa
mov
ds
iret
dec
sbb
push
lahf
jecxz
adc
sbb
imul
mov
stos
bound
sub
in
or
mov
cmpl
sbb
cmpsl
adc
loop
mov
mulps
push
call
inc
dec
push
out
scas
aad
dec
scas
lret
push
inc
loopne
iret
push
fwait
inc
jecxz
lds
mov
mov
test
in
out
jo
push
in
insb
cli
inc
push
mov
stos
mov
sub
pop
movb
das
inc
icebp
daa
sub
push
icebp
inc
pop
lods
daa
and
mov
jns
inc
xchg
xor
addr16
sbb
je
adc
std
or
push
lret
adc
fbstp
ret
mov
sub
cmp
test
push
xorl
divb
xor
fidivs
out
push
inc
jmp
fstps
test
jl
push
outsl
insl
sub
in
popa
push
sub
sub
out
pop
int3
or
outsl
js
cmc
xor
outsl
jecxz
dec
lods
jecxz
mov
out
stos
push
lock
into
test
adc
pop
xchg
and
jmp
fldenv
and
enter
fstl
das
add
je
cltd
subl
mov
shll
adc
lods
and
and
mov
adc
mov
loopne
sub
xchg
movsl
mov
dec
into
int
orb
ret
dec
xor
shrb
sbb
mov
and
repz
into
xchg
adc
cli
adc
mov
dec
mov
mov
cmp
xchg
lret
xchg
xchg
jle
fdivs
repz
pop
inc
enter
mov
fwait
dec
test
cld
cmp
cltd
mov
cmp
adc
push
shlb
shll
cmpsb
pop
and
xor
mov
bound
sarb
and
test
cli
sti
cmp
mov
mov
jge
ja
push
lcall
dec
cmpl
jge
inc
rcrl
sbb
and
mov
nop
cmp
dec
mov
and
sahf
dec
jbe
dec
or
lock
or
and
xchg
daa
or
insl
sbb
data16
ljmp
push
fwait
push
fucomi
lds
xchg
sbb
mov
movsb
fisubs
adcl
jno
repz
call
call
sub
sbb
sbb
out
xchg
pop
sti
and
cmpsb
je
xlat
lods
mov
jle
repz
arpl
push
xor
push
into
orl
fistpl
xor
jne
mov
popl
iret
popa
in
push
shll
lods
sbb
pop
mov
xchg
adc
je
cld
cmpsb
inc
sbb
sbb
loopne
js
addr16
sbbb
popf
jo
add
sti
jns
fldt
cmpsl
mov
mov
push
lea
lock
add
and
movsb
loopne
in
cmc
test
lds
jns
sub
mov
cmpb
lods
daa
je
pop
adc
sub
inc
popf
repz
pop
push
rcll
mov
stc
jo
lcall
decl
jb
popf
aam
iret
mov
shll
jns
cmp
inc
outsb
xor
inc
gs
xor
cmp
in
dec
fildl
cwtl
out
jecxz
xor
loop
nop
sbb
push
mov
pusha
addr16
out
mov
ss
jmp
add
repz
ret
in
sahf
mov
xor
mov
xor
or
ljmp
mov
lock
in
lds
jb
push
add
mov
xchg
jo
push
pop
out
pop
pop
sbb
mov
and
xor
jbe
out
or
cmp
test
scas
std
dec
pop
rol
sub
adc
pushf
inc
icebp
fcomps
popa
nop
add
lret
cmp
in
sub
lahf
lahf
leave
xor
cmpsb
xlat
and
dec
mov
rorb
add
push
and
js
sti
cwtl
dec
mov
mov
push
mov
sahf
repz
repz
mov
les
vmread
loopew,pn
or
js
sub
xchg
mov
lock
xorl
pushf
add
sti
bound
jae
mov
jle
xor
fs
xchg
add
pushf
insl
pop
bound
outsl
in
add
mov
and
mov
daa
ret
stos
dec
mov
ja
loopne
lret
fdivr
andl
cmpsl
dec
mov
xchg
xor
inc
and
cltd
xor
mov
add
push
fwait
inc
dec
fstp
das
xchg
movsb
push
push
dec
xor
adc
sub
xor
pop
inc
jb
adc
popa
mov
jae
or
mov
add
das
sbb
sub
push
pop
std
dec
test
pop
int
leave
xchg
mov
mov
loop
adc
mov
sub
mov
xor
movsb
mov
stos
mov
scas
int3
jnp
loopne
push
pop
cmpsb
or
mov
pop
loop
nop
pcmpgtd
icebp
shlb
sbb
and
and
jns
push
jne
sti
xor
int3
addr16
dec
sbb
js
scas
push
or
xchg
adc
nop
mov
mov
dec
mov
xchg
mov
or
cwtl
aaa
mov
inc
mov
xchg
repz
es
xchg
jp
out
imul
mov
sub
insb
scas
xchg
xchg
mov
adcb
ljmp
in
mov
aad
out
sarb
sub
popf
dec
into
orl
mov
sbb
into
mov
in
cltd
xlat
cli
xor
call
jne
aam
enter
movsb
ljmp
sbb
popa
cmpsb
dec
jecxz
mov
xchg
clc
pop
pop
xchg
dec
sti
je
in
lcall
arpl
cmpsl
test
cld
mov
mov
mov
push
adc
scas
sub
pop
aaa
adc
adc
dec
cmpsl
loop
push
lahf
xorl
push
jmp
sub
mov
stos
xchg
jge
fstl
inc
pop
and
sub
pop
sbbl
add
xchg
hlt
cmp
nop
sti
fsubrl
xchg
cmpsb
clc
inc
data16
or
stc
je
outsb
das
pop
std
xor
inc
sti
imul
divb
push
stos
cmpsl
sub
roll
xor
sbb
scas
je
cmp
movsl
push
or
pop
jmp
dec
negb
in
mov
fisttps
pop
push
stc
mov
icebp
scas
hlt
int
into
jne
ss
rcrl
mov
jnp
adc
pop
sub
dec
movsb
imul
adc
ds
test
sub
in
pop
aaa
xchg
loope
dec
sub
cwtl
repnz
push
dec
imul
xchg
mov
loop
pop
iret
sub
stos
pop
stos
mov
test
test
jmp
icebp
and
sbb
push
lahf
test
pop
mov
popf
mov
sub
into
and
jne
or
mov
sbb
je
cld
mov
leave
cs
into
cwtl
sub
push
cs
xchg
adc
movsb
hlt
roll
cmp
add
push
dec
cltd
pushf
inc
subl
sub
pop
daa
ret
cmp
dec
dec
xchg
icebp
cs
sub
rdpmc
push
rorl
and
ret
popf
and
add
loope
shl
dec
adc
roll
clc
andb
das
adc
or
xchg
bound
or
in
push
mov
ret
sbb
pop
mov
inc
out
fwait
push
mov
cmp
testb
pop
push
rcll
dec
cmp
sahf
fs
jbe
call
pop
xchg
adc
pop
xor
or
test
mov
movsl
jl
movsb
push
out
mov
adc
sub
pop
in
jb
mov
or
xchg
lds
lds
call
int3
add
push
fcomip
xlat
movsb
outsb
sub
fbld
push
xchg
pop
cli
fwait
pop
test
ja
cmp
in
dec
ds
mov
mov
cld
test
sub
add
fwait
loop
push
lcall
xchg
lret
xchg
hlt
ja
stos
psraw
xchg
shrl
jge
mov
ds
data16
xchg
cmp
sbb
js
sub
movsb
lret
les
cmp
mov
cwtl
push
in
xchg
adc
jecxz
mov
pop
cmc
popa
adc
lock
iret
cld
pop
inc
decb
lea
sarl
and
pushfw
dec
aam
jmp
fwait
in
inc
push
xlat
push
inc
sub
sub
and
repz
ljmp
mov
stos
pop
cmp
hlt
loopne
lods
pop
push
jge
dec
stos
sbb
jmp
les
decb
test
bound
repz
and
cmp
dec
or
cmpsb
pop
in
dec
mov
xor
xchg
fs
sub
scas
bound
inc
iret
sar
dec
adc
pop
mov
aam
xchg
jp
dec
pop
leave
adc
mov
loop
shl
cli
stc
dec
mov
dec
mov
cmp
in
test
cmpsb
aam
nop
and
neg
xlat
cmpsl
insl
inc
and
in
pop
lret
push
mulb
int
and
sbb
mov
and
mov
pop
bound
xor
xchg
cmpb
int
les
mov
xchg
push
std
xchg
fstpl
ret
add
mov
jns
xor
movsb
test
into
jp
jbe
add
sti
mov
jo
add
mov
cmp
jmp
pop
dec
mov
mov
sbb
xchg
fidivrs
sbbl
rcll
pusha
cmp
vpaddd
add
adc
rcrl
mov
jge
pop
loopne
push
dec
movsl
pop
addr16
gs
xor
repz
xor
push
cmp
adc
xor
xor
lret
mov
mov
scas
mov
repz
or
in
inc
test
mov
and
aaa
adc
sub
sar
dec
pop
outsl
xchg
fdivrl
xlat
test
jnp
das
mov
cmpsl
pop
sub
pop
sbb
mov
aam
imul
jns
std
ret
stos
mov
or
rorb
pop
adc
add
int
or
rcr
aam
or
out
jecxz
into
icebp
sub
out
repz
add
add
xlat
cmp
push
sbb
sti
aas
dec
mov
insl
sbb
outsl
push
loopne
inc
sub
jnp
pop
arpl
shlb
add
sub
addr16
sbb
dec
mov
add
xchg
pop
inc
test
xchg
cmpsb
or
test
mov
or
cli
xor
std
sub
inc
mov
les
aam
ss
pop
xlat
stc
or
test
je
push
cmc
ret
xchg
hlt
and
enter
mov
dec
movsl
sub
or
push
dec
movsb
movsb
cmp
or
subl
or
jge
out
in
lock
dec
pop
inc
addr16
imul
sbb
nop
cmpsl
jo
ss
or
and
dec
pop
fwait
lods
dec
and
test
std
cmpl
xchg
push
mov
dec
add
jp
or
stc
nop
lods
mov
movsl
leave
sbb
cld
xchg
pushf
fistpl
lds
cmp
mov
fbstp
mov
addr16
jnp
pop
ret
sbb
sbb
inc
jge
fsub
mov
cmp
cmp
or
cwtl
pop
movsb
in
testb
xor
daa
je
call
lods
add
cmp
jle
aam
mov
adcb
outsl
dec
adc
mov
pop
xchg
push
pop
mov
negl
test
mov
push
cmp
hlt
outsb
pop
js
mov
pop
push
cmpsb
lret
ss
sbb
inc
fists
inc
mov
les
and
push
pop
and
loopne
mov
sbb
in
aaa
cmp
mov
subl
fs
bound
dec
push
stc
cli
jb
fsubl
fstpl
jecxz
pop
mov
prefetch
jle
int
leave
rorb
test
push
cmp
shll
cld
leave
fbstp
sbb
xchg
add
test
xchg
ja
sbb
lods
or
in
cmp
push
pop
popa
xchg
cmp
int
leave
addr16
movsl
cwtl
xchg
fldenv
sahf
leave
cmpsb
mov
sbb
fildl
xor
xorb
adc
testb
push
xchg
data16
pop
jbe
mov
jmp
bound
fs
push
push
fiaddl
fs
mov
rol
sbb
xchg
popf
mov
sbb
or
mov
adc
xor
into
sbb
sbb
xor
lret
cmp
pusha
pop
fs
add
rclb
int3
bound
push
mov
adcl
push
jno
push
sbb
and
jo
subb
pop
sahf
into
movsb
mov
pusha
ret
fbld
fsts
sbb
adc
test
sbb
insl
jno
lods
aam
out
dec
insl
fidivl
iret
adc
stos
pop
int3
das
test
cmp
call
test
bound
stos
dec
pop
lds
sbb
jns
jnp
and
and
pusha
std
add
std
xor
mov
jmp
lods
mov
mov
cs
mov
mov
and
push
xchg
or
add
add
ss
aaa
aad
movsl
aam
inc
sbbl
pop
and
jno
xor
js
or
xorl
pop
xor
jbe
hlt
xlat
sub
dec
inc
jl
jmp
inc
into
mov
pop
into
and
and
pushf
or
inc
or
inc
cli
adc
mov
out
into
jo
ret
xchg
sbb
mov
out
imul
js
xor
xor
popa
push
mov
ror
sub
inc
enter
sbb
pop
icebp
stc
aaa
sbb
mov
xor
fistpll
push
fsubrs
es
adc
mov
sbb
xor
imul
leave
cmp
xchg
lcall
cwtl
cmpsb
pop
test
mov
pop
out
add
test
xor
inc
xchg
jb
xlat
iret
lea
test
into
inc
or
add
aad
iret
fisubrl
sti
pop
int
mov
mov
adc
push
inc
arpl
aad
leave
jmp
mov
bnd
xor
cli
adc
xchg
sbb
ret
add
addb
fistl
dec
fwait
or
out
lcall
in
shrb
xor
rclb
cltd
ja
sub
jle
jge
jmp
lret
bound
dec
push
fsubs
push
iret
pop
xor
pop
xor
mov
or
cmp
cmc
push
in
mov
repnz
inc
mov
addr16
or
and
aaa
rol
cmpsb
mov
mov
insb
xchg
push
sbb
lea
imul
inc
jecxz
das
fiaddl
andl
stos
mov
inc
sbb
dec
xchg
jecxz
rorl
cmp
repnz
adcb
inc
mov
add
lret
mov
mov
mov
aas
cmpsb
cmp
mov
xchg
ret
arpl
push
jno
add
mov
sbb
jp
pusha
lds
push
jmp
fidivl
lret
addb
outsl
xor
testl
je
or
jecxz
push
lahf
loop
into
jg
rcll
pop
lods
sbb
test
mov
sbb
inc
cmpsl
jp
xor
int3
cwtl
adc
xchg
dec
jecxz
mov
cs
ja
push
in
out
imul
sub
adc
push
add
push
mov
pop
fistps
shl
loop
or
movsb
in
loope
pop
lods
ret
mov
incl
dec
bound
cli
push
add
je
mov
cwtl
in
cmp
loopne
adc
pop
pop
sbb
sahf
mov
lock
adc
add
xor
or
mov
jb
aas
push
add
dec
lds
add
loopne
test
xor
cmp
sub
xor
push
mov
ds
cmp
adc
jle
mov
jmp
and
add
mov
scas
add
adc
push
cmc
pop
aad
sti
cli
xchg
xchg
js
imul
insl
mov
and
pop
mov
rcr
daa
out
cmpsb
and
push
inc
cmpsl
xchg
in
sbbb
in
movsbl
aas
and
sub
sbb
clc
xchg
xchg
mov
shl
mov
mov
pop
push
loopne
int
loopne
arpl
mov
sub
repz
aad
call
inc
cmpsl
les
push
sub
dec
test
push
push
xchg
aad
pop
out
scas
sti
mov
out
mov
addb
movsb
dec
sub
jns
in
roll
out
sbb
dec
sbb
cmpb
and
xchg
std
dec
jecxz
movsl
fiaddl
cmp
mov
mov
aas
push
and
fwait
xor
decb
xchg
das
push
sub
ss
mov
int3
jecxz
jns
inc
addl
mov
movsb
inc
mov
cwtl
and
cmp
dec
jne
jp
daa
pop
icebp
jp
mull
call
cmpsl
repnz
into
cmp
add
mov
cmp
push
sbb
pushl
aaa
hlt
imul
inc
mov
cmpsl
jl
dec
fwait
bound
cmp
aad
push
dec
xchg
sbb
jp
mov
sarb
icebp
lds
sahf
and
mov
lods
int
dec
push
insb
loope
outsl
fs
test
mov
dec
xor
mov
dec
lea
std
fdivr
shrl
cltd
lret
mov
mov
popf
test
or
jmp
cmp
sub
adc
insb
xchg
fwait
cmp
lret
inc
movsb
mov
mov
int3
and
xchg
fstps
arpl
push
mov
adc
push
xchg
cs
in
ret
loop
jecxz
xchg
jne
in
das
and
mov
aad
ss
cmp
or
dec
sub
push
mov
and
out
enter
pushf
cld
ret
sub
jo
enter
jg
icebp
push
xchg
pop
cmpsl
lea
mov
cli
ja
mov
mov
test
cmp
cwtl
mov
jns
adc
pop
movsl
jne
lret
sub
roll
mov
xchg
inc
mov
data16
mov
fnsave
fs
push
and
pop
imul
add
sbb
into
cltd
in
mov
pusha
jns
push
out
test
jbe
mov
jns
scas
cmp
adc
mov
mov
push
ljmp
mov
out
xchg
inc
ficoml
jp
push
es
sub
add
adcb
pcmpeqd
inc
lahf
les
xchg
lret
pop
fcoml
repnz
popa
sbb
enter
jne
pusha
cmp
xchg
shll
mov
fdivr
dec
jns
sub
mov
icebp
sub
clc
and
push
int3
cmp
lock
aam
das
out
push
fdivl
hlt
icebp
ret
pop
outsb
cmp
movsl
sub
mov
mov
jbe
and
jl
xchg
dec
ss
mov
in
in
push
mov
stos
cltd
test
cmp
lret
cli
fwait
ret
stos
imul
enter
jge
push
leave
and
add
or
xor
mov
std
in
fwait
inc
mov
push
mov
loope
pop
mov
sbbb
pop
xor
sub
add
call
jb
loop
xchg
fidivs
test
dec
sub
push
aam
fstpl
pop
cmpsl
cmpsl
jnp
ret
adc
outsl
mov
xchg
adc
mov
cltd
scas
or
pop
stos
insl
mov
ret
rep
loope
add
mov
stos
mov
clc
or
dec
add
inc
push
sbbl
mov
loopne
jne
push
mov
xchg
test
rcl
push
cmp
es
sub
jns
cwtl
dec
mov
mov
test
dec
mov
pop
and
cwtl
fldl
cmp
mov
or
push
mov
fwait
and
add
loope
sbb
cmp
dec
xor
je
adc
xor
mov
and
inc
adc
adc
pop
pop
shrl
into
jl
stc
test
out
aad
inc
outsb
mov
js
stos
xor
sbb
cltd
sub
xor
inc
es
cmpsb
xor
jns
sub
sub
lret
popl
push
frstor
cli
std
movsl
dec
popf
inc
shll
es
cwtl
or
mov
aam
adc
daa
out
dec
aas
fldcw
mov
and
pusha
xchg
call
xchg
mov
xor
xor
ret
fldenv
jb
out
stos
adc
sti
mov
sbb
push
ss
lock
scas
cmp
mov
jmp
jp
mov
jmp
arpl
scas
loope
sub
or
dec
add
cld
sub
out
mov
mov
idivl
lds
sbb
bound
xor
addl
mov
fisttpl
adc
push
sahf
mov
and
insb
or
les
pop
scas
dec
fdivl
cmc
fdivl
test
into
jb
pushf
jle
xchg
mov
jp
jae
and
xchg
push
push
jl
pushf
inc
adc
hlt
mov
repnz
fdivp
stc
jb
jae
cli
adc
inc
cltd
adc
incb
xor
aaa
cmp
data16
bound
dec
pop
js
out
pop
out
and
cmp
cmc
xlat
lahf
std
and
jl
stos
inc
mul
dec
mov
fists
mov
pop
sub
mov
pop
add
outsb
mov
and
mov
insl
inc
fwait
xchg
mov
leave
fmull
jp
fists
int3
lea
xor
dec
push
push
out
clc
fadds
int3
lcall
mov
pop
cmp
inc
movsb
cmp
lret
pusha
xchg
js
xor
pop
jmp
jle
sub
push
pop
mov
add
xor
fnstenv
lds
jbe
mov
sub
push
sub
sbb
lock
inc
jecxz
mov
xor
ficompl
mov
jnp
xchg
lods
fs
mov
aaa
dec
pusha
pushf
outsl
mov
jne
cs
outsl
aam
mov
test
sub
adcl
inc
inc
cmpsb
push
faddl
pop
jne
dec
cmpsb
mov
mov
jnp
adc
xchg
pop
hlt
cmp
outsl
jne
jnp
clc
push
dec
in
scas
mov
popa
xchg
mov
cmp
test
test
xchg
test
or
cmp
cmp
sbb
adc
pop
nop
dec
lds
cld
in
lds
stc
inc
mov
jl
or
mov
add
std
mov
xchg
mov
pop
pushf
adc
arpl
fstl
test
mov
fcoml
pop
fsub
sti
jmp
add
insb
in
dec
fs
mov
movsl
js
mov
mov
mov
repnz
dec
adc
orl
push
div
pop
mov
jg
lods
push
repz
pusha
lahf
push
scas
mov
out
test
xchg
lret
orb
ds
lret
push
or
cmpl
icebp
shll
sbb
add
aas
and
fildll
pop
inc
pushf
pop
ljmp
rclb
jle
or
mov
js
mov
mov
pushf
and
xchg
push
daa
sbb
imul
inc
dec
push
imul
pop
lcall
pusha
adc
call
inc
sbb
arpl
cltd
cltd
push
cli
je
and
mov
xor
cmp
shl
sbb
and
inc
sub
popa
addb
adc
mov
or
stos
push
jecxz
mov
mov
insl
lods
sbb
mov
das
mov
jecxz
in
lret
out
and
andl
mov
das
jbe
push
ss
or
or
mov
in
mov
pop
adc
cmpsl
xchg
cs
pop
cs
out
or
add
jge
mov
sub
ror
lds
mov
push
gs
inc
cmp
nop
and
aad
xor
mov
pop
call
test
sti
stc
sahf
and
stos
cli
jle
pop
fnstcw
fdivrl
movsl
es
add
pop
cmc
and
sbb
cli
gs
cmc
int
or
mov
fwait
into
popf
stos
ds
jno
jno
lock
cmc
mov
lret
add
sbb
movb
and
sub
inc
test
sahf
or
xchg
imul
fiadds
mov
in
jp
es
mov
movsl
add
xor
fadd
out
in
out
pop
sub
popa
or
fnclex
rclb
mov
pop
fmuls
mov
add
repz
push
and
xchg
inc
call
loope
sahf
stc
enter
inc
or
or
lds
test
mov
hlt
sbb
outsb
shr
ret
xor
mov
in
jle
or
cmp
repnz
rep
jne
test
sahf
mov
fidivs
pop
mov
loope
xor
add
push
dec
push
xor
fcomip
adc
mov
clc
or
lahf
call
pusha
jo
out
mov
mov
mov
sbb
pop
ret
mov
push
inc
out
xor
cwtl
jnp
xchg
or
repnz
out
lock
cmp
fidivrl
mov
out
fucomi
pop
jle
xor
test
mov
cltd
sbb
daa
fdivp
sti
cli
add
push
insl
loop
pop
clc
stos
cmc
cmpsb
sub
jecxz
adc
pop
les
cwtl
adc
in
pop
jp
mov
or
mov
jae
mov
aad
jae
xchg
jae
fisttps
aam
mov
cmp
add
push
aad
lcall
fs
or
sarb
pop
cmp
dec
mov
jg
in
add
leave
shll
inc
es
jns
fcompl
ljmp
xor
insl
in
pop
incb
bound
cmp
add
fwait
lods
inc
arpl
aad
sbb
fnstsw
out
mov
ret
sub
dec
xchg
stos
ret
cmc
mov
lahf
cli
and
test
clc
das
or
push
pop
and
pop
xchg
repz
pop
jp
test
hlt
mov
sarb
push
add
aas
test
bound
mov
fsubrs
mov
pop
mov
mov
pop
and
das
pop
test
bound
leave
jae
mov
mov
add
jo
lds
adc
jne
cld
xchg
xor
or
hlt
stos
adc
les
sbb
repz
add
adc
or
test
xor
inc
adc
push
bound
fs
jp
faddl
test
out
jae
or
fwait
xchg
jns
aad
adc
lret
roll
movsl
cs
pop
and
iret
into
xchg
fisttpll
xchg
loope
movsb
cmpsb
insl
cmp
or
push
jo
into
push
cwtl
lock
imul
dec
adc
pusha
sahf
call
pop
addl
jbe
icebp
xorl
das
test
inc
mov
add
loope
rcrb
out
in
stos
xchg
pop
add
xor
lcall
jb
outsb
cmp
inc
or
cmp
in
call
loopne
mul
inc
adc
ja
adc
add
insl
aas
dec
mov
rcrb
sbb
push
das
mov
movsb
bound
test
jmp
sbb
mov
test
repnz
je
adcl
loopne
int3
adc
lret
iret
enter
sbb
cmovp
jg
ja
pusha
movsl
add
dec
jle
jbe
sub
push
mov
lret
bound
inc
ret
das
pop
out
or
sub
xor
pusha
les
mov
push
add
add
insl
cmpsb
ror
add
roll
decl
mov
xchg
adcb
stos
pushw
xchg
push
and
movsl
add
or
int
push
andl
fadds
testl
mov
ret
xchg
xchg
mov
xor
pop
jl
jb
xor
inc
jo
jmp
xor
ljmp
sahf
dec
out
lea
jb
addr16
ret
mov
cwtl
pushf
orb
incb
mov
xchg
inc
mov
fs
in
pop
testl
leave
imul
aaa
xor
or
ss
in
add
pop
jl
loope
mov
scas
pop
inc
in
xchg
ret
fisubs
or
dec
faddl
jle
inc
std
mov
out
xor
jg
push
mov
das
clc
mov
int3
inc
lods
test
dec
mov
push
sbb
hlt
dec
push
mov
pop
or
cmp
out
mov
or
fildll
pop
adc
jbe
fldl2e
ljmp
test
xchg
data16
sub
pop
fidivs
xor
pop
inc
jae
cmp
add
cld
filds
jb
gs
stos
mov
imul
and
sub
add
and
loope
push
xchg
add
loope
jl
aad
fistps
loop
sar
in
test
jne
sbb
sbb
jnp
scas
shr
aas
ljmp
stos
ljmp
pushl
fisttpl
pusha
push
js
sarl
dec
push
les
lds
popf
jns
lret
dec
je
xor
les
stos
icebp
fdivrl
daa
mov
mov
adcl
dec
jb
xchg
ss
cmp
js
cli
cld
loopne
add
or
scas
jp
cmp
mov
dec
dec
xchg
mov
divb
pop
mov
sbb
xor
ret
and
bnd
jnp
les
frstor
aam
leave
adcl
jne
pop
adcb
push
mov
mov
adc
push
push
stos
cmp
mov
sbb
gs
aaa
adc
add
pop
fcoms
cmp
mov
inc
cs
roll
jo
jle
mov
inc
cmp
mov
lret
mov
cmp
mov
pop
push
in
add
sub
mov
sbb
aam
xor
sbb
dec
jb
xor
lock
hlt
sub
out
mov
gs
movl
xor
mov
mov
cmp
cmp
std
push
fs
jmp
and
fildll
mov
es
mov
xlat
filds
mov
inc
sub
movsb
pop
and
xchg
sbb
inc
jnp
fsubl
andl
mul
sbb
in
push
pop
jbe
in
lret
xchg
les
mov
insb
outsl
xchg
je
adc
scas
push
add
push
scas
sub
mov
outsl
loop
movsl
pop
sahf
dec
popf
xor
push
push
jo
jbe
sub
orl
outsb
push
add
clc
cmp
mov
dec
nop
inc
bound
push
and
dec
loopne
shll
testb
outsb
data16
stc
je
nop
iret
pop
add
in
cs
cld
addb
mov
push
out
ljmp
mov
inc
ror
pop
psadbw
dec
mov
movl
or
enter
cwtl
jl
add
cmp
les
sbb
jecxz
jg
jle
lea
sbb
push
outsb
cmp
clc
sbb
jmp
add
repz
dec
mov
insb
push
xchg
or
mov
cmp
jecxz
pop
fimull
cmpl
push
add
ret
push
loope
sahf
test
and
pop
mov
mov
sbbl
push
mov
mov
arpl
mov
sbb
sbb
push
xor
cld
into
int3
inc
stos
sbb
js
mov
jno
sub
xchg
in
push
aas
sbb
vcvttss2si
sub
mov
mov
dec
out
call
pop
stos
mov
push
pop
cli
bnd
dec
or
andl
test
out
jg
jno
idivl
loopne
pop
xor
das
fnstenv
rcl
jne
idiv
xor
lret
inc
push
and
or
cld
and
mov
repnz
arpl
push
jmp
lds
and
mov
cmp
pop
pop
add
push
xchg
push
in
ret
les
enter
clc
mov
pop
cli
icebp
or
xchg
jl
lods
push
mov
xchg
clc
popf
sub
cmc
lock
ret
aam
mov
arpl
ss
test
add
mov
std
xor
adc
cmp
inc
sti
push
add
add
aas
pop
icebp
cmp
adc
adc
adc
aaa
mov
mov
pop
in
test
addl
popl
xchg
movsl
lock
lock
dec
cmpsb
mov
pop
mov
and
mov
jae
cmpsb
push
loopne
arpl
jecxz
jne
jo
mov
testb
dec
call
cmp
xor
dec
mov
push
cmp
addb
mul
mov
xor
mov
xor
jnp
or
fmull
sub
stc
jmp
adc
sti
adc
dec
inc
and
mov
mov
imul
mov
loopne
repnz
shlb
flds
popf
inc
popf
push
clc
xor
loopne
and
push
data16
push
jmp
jl
call
lods
notb
rol
out
push
and
clc
inc
jg,pt
js
and
and
sbb
push
out
pop
and
cwtl
xchg
mov
fwait
jne
orb
js
cld
add
sbb
inc
pop
lock
iret
xchg
icebp
std
inc
out
push
je
xor
pop
in
sbb
xor
mov
sub
mov
daa
mov
sti
cwtl
fldt
adcl
fidivrs
jne
cli
jnp
fisttps
stos
sub
push
into
lret
cmpsl
mov
lcall
pop
inc
sbb
push
pop
mov
int
fsubl
xor
or
stc
pop
and
push
cltd
sub
inc
inc
rcr
pop
fmuls
fsubrs
sbb
add
loop
sbb
cmc
fimull
pop
shlb
mov
pop
imul
cmpsb
cmpsb
sub
gs
nop
mov
jns
push
hlt
cmpl
inc
dec
mov
testb
das
xor
fnstsw
fstp
xor
and
add
cmp
pop
sarl
pop
popa
add
in
push
push
cmp
aad
cmp
inc
mov
out
inc
and
mov
fisubs
sub
bound
xor
shrl
inc
insb
mov
mov
loopne
xor
sub
hlt
sub
mov
mov
push
sub
fucomip
iret
push
push
mov
ljmp
stc
ffree
call
push
test
clc
test
mov
adc
or
inc
scas
iret
jge
pop
jo
hlt
jge
andb
shrl
insl
bt
outsl
int3
addl
mov
and
push
sub
lcall
cmp
mov
int3
jecxz
faddl
push
push
js
scas
push
add
inc
mov
or
dec
pop
cli
sub
outsl
jbe
adc
and
lock
popa
imul
out
inc
loope
add
xchg
push
mov
call
cwtl
ret
jmp
pop
mov
cmpsb
xchg
add
mov
xchg
cmp
arpl
dec
pushf
test
or
hlt
test
div
or
xor
adc
mov
jnp
pop
inc
push
mov
mov
repz
sub
loope
push
dec
sub
jmp
jmp
loope
pop
jge
aad
nop
mov
push
lcall
icebp
lret
mov
rcll
dec
push
ret
int3
rorl
pushf
adcl
insl
lods
jbe
mov
je
xchg
add
xchg
lret
inc
mov
sbb
inc
push
cltd
in
js
xor
or
std
lcall
mov
mov
mul
aam
dec
and
pop
mov
pop
and
mov
and
adc
sti
adc
dec
mov
jl
jno
pushf
in
sbb
jmp
sbb
xchg
icebp
xor
add
fistpl
jecxz
add
pop
add
and
jno
mov
movsl
inc
pop
test
sub
jne
movsl
push
jl
cmpsl
xchg
and
mov
lds
xor
test
sbb
inc
es
fwait
test
jno
or
mov
dec
adc
fiaddl
std
xchg
arpl
push
inc
ljmp
pop
jmp
cltd
add
sbb
stos
push
push
push
fistl
movsb
out
fldl
jg
ljmp
sub
cmp
in
jge
sbb
movsl
dec
xchg
mov
mov
cld
stc
mov
mov
pop
cmc
dec
jnp
das
mov
or
xchg
lret
sbb
shr
stc
mov
xchg
pop
push
push
pop
cmp
rcrb
mov
daa
or
mov
les
push
inc
sahf
shr
shll
mov
cld
sahf
pop
in
jge
stc
sbb
test
push
pop
outsb
adc
outsb
scas
out
jge
test
mov
mov
mov
push
pop
lcall
and
pop
cmp
mov
inc
sarl
fnstsw
lcall
int3
movsb
sahf
enter
shrb
adc
dec
sub
push
sub
adc
daa
jp
cltd
mov
shlb
out
add
pop
mov
outsb
jmp
out
pusha
movsl
xchg
pop
xor
sbb
orl
popa
mov
xchg
lea
outsb
inc
mov
dec
lahf
ljmp
inc
pushf
lret
or
fisubl
and
roll
or
leave
add
clc
push
fwait
inc
sub
ficomps
cltd
out
pop
mov
and
and
mov
push
roll
push
fisubl
lock
pop
mov
pop
lock
pusha
inc
jns
fadd
bound
je
aas
mov
lds
dec
adc
divl
popf
pusha
pushf
jp
dec
repnz
pusha
repnz
into
mov
mov
fcomip
daa
mov
push
jo
xor
dec
clc
jne
xchg
dec
mov
cmp
mov
in
sbb
jno
inc
sbb
adc
pop
rclb
mov
sub
pop
cmpsb
pop
std
sbb
imul
xchg
hlt
add
cmpsl
jecxz
mov
sarb
fmull
bound
subl
rorl
or
cmp
mov
and
addr16
orl
or
or
mov
test
imul
jo
mov
loope
call
push
out
cmp
adc
imul
lock
lock
insb
test
js
mov
daa
and
mov
gs
loop
rcll
and
mov
test
repnz
inc
dec
pop
mull
xchg
testb
pop
inc
call
inc
mov
iret
test
cmpsb
fildl
push
mov
xor
ja
repnz
les
mov
push
out
sbb
notl
and
mov
shlb
jb
insb
negb
xchg
leave
jnp
movsl
push
push
cmp
das
ret
inc
xlat
xchg
sti
sub
roll
cmp
or
fildl
xchg
or
push
sbb
jno
int3
pop
mov
cs
inc
popa
ret
roll
jo
fcom
sub
mov
lds
iret
add
mov
add
and
lods
dec
pop
xchg
xchg
add
and
xchg
pop
jns
scas
sbb
inc
mov
mov
mov
mov
and
xchg
sahf
adc
pop
bound
mov
push
lods
repnz
jo
mov
cltd
push
jmp
int3
mov
xorb
imul
adc
push
lock
int
inc
adc
mov
aad
xchg
push
and
test
test
insb
and
js
fsubrl
pop
inc
mov
mov
ss
push
loop
xor
int3
enter
je
shll
pushf
pop
das
scas
pop
js
adc
inc
or
mov
cmp
jmp
movsl
repnz
call
std
sbbb
push
cs
pop
loopne
push
and
xor
out
inc
mov
and
lahf
aaa
into
mov
push
test
add
jecxz
xchg
push
push
iret
filds
leave
mov
fisubrs
or
or
std
rorb
shr
or
cmpsb
fwait
out
lea
sbb
pop
cmp
or
lds
mov
int3
xor
ljmp
xchg
jg
cmpsl
sbb
pushf
lret
xor
jecxz
clc
fsubrs
adc
add
jb
dec
and
ret
or
jo
shl
insb
fwait
pop
adc
mov
shll
or
lahf
pop
push
sbb
popa
mov
fcomps
loope
and
in
mov
out
stos
jl
sub
push
or
push
aad
mov
xchg
ret
dec
jp
inc
mov
add
fsubl
lret
pusha
movsl
popf
jle
ret
cli
jecxz
fistpll
movsl
rcrb
shlb
inc
jle
cli
outsb
or
in
scas
push
and
jle
inc
xor
ret
mov
add
fsubrs
in
lods
sbb
in
shrl
jne
lock
rorb
orb
sbb
add
inc
sarb
frstpm(287
adc
push
ljmp
push
dec
adc
mov
or
test
and
sti
inc
lock
shrl
test
std
andb
xchg
cmp
out
ss
add
inc
xchg
mov
add
inc
cli
ffree
ret
push
push
lret
dec
inc
hlt
scas
iret
jp
movsb
data16
jbe
mov
aaa
and
xor
push
adc
pop
jmp
inc
movsb
xor
inc
add
sbb
and
inc
rcr
iret
popa
mov
sbb
fdiv
int3
inc
mov
icebp
jmp
mov
fwait
imul
aam
mov
ds
mov
push
xorb
add
cmp
push
negb
fistl
pop
sub
leave
ret
fistps
scas
dec
mov
ret
or
xchg
sub
push
bound
xchg
sbb
icebp
cmp
mov
dec
push
inc
dec
dec
ret
mov
adcb
hlt
dec
pop
ds
pushf
sub
je
aas
aad
bound
mov
dec
ret
ret
lock
dec
lea
mov
inc
pop
inc
rclb
test
mov
mov
outsl
mov
jne
lea
fldcw
sub
rorb
jge
dec
push
mov
dec
int3
out
cmovs
sub
lock
cmpsl
rorb
or
xchg
jge
popa
lods
sub
addr16
dec
xor
jnp
sub
mov
int
mov
sbb
pusha
mov
inc
sbb
push
xlat
mov
add
sahf
arpl
loopne
jle
and
sub
je
mov
xchg
or
mov
lret
xchg
les
jns
sub
mov
jp
push
xchg
and
popf
loope
lods
or
testl
sub
add
cmp
xchg
outsb
mov
xor
bound
cmc
adc
sub
sbb
es
and
in
ja
int3
cs
js
add
pop
stc
push
inc
scas
ror
and
xchg
jae
jl
in
dec
cs
pop
pusha
inc
adc
sub
cmp
pop
pop
rcl
sbb
and
iret
test
pop
lea
mov
mov
push
mov
addl
xor
pop
jb
mov
mov
xor
or
push
push
jb
repnz
mov
add
in
cmp
jge
mull
dec
push
pop
fistps
das
add
aas
inc
dec
aas
movsb
mov
mov
js
pop
daa
add
lods
xchg
and
outsb
pop
arpl
repnz
fcoms
mov
aas
cmp
xchg
jno
xchg
pop
dec
xor
fnstsw
pop
push
mov
and
je
pop
jns
pop
loope
in
std
and
lods
insl
iret
xchg
xchg
push
and
jmp
lock
stos
sbb
mov
add
sbb
jge
lcall
push
inc
adc
es
es
inc
lretw
ljmp
pop
and
pop
aam
xchg
pop
rcr
out
popf
add
movb
ds
das
or
xchg
sub
and
sbb
leave
mov
inc
cmp
xor
mov
mov
jecxz
inc
jno
fbld
xchg
ret
mov
xchg
sbbl
imul
inc
in
mov
es
ljmp
dec
dec
jb
loop
leave
adcl
jbe
bound
mov
dec
pop
xor
push
arpl
das
mov
orb
mov
mov
jp
cwtl
cmpsb
push
sahf
adc
adc
mov
xchg
mov
gs
cmp
push
xchg
sbb
push
repnz
mov
in
xlat
cli
cli
dec
cs
repnz
jecxz
sbb
test
pop
lods
or
sub
cmp
mulb
jo
mov
adc
push
ret
pop
jae
dec
push
sbb
inc
cmp
mov
inc
test
dec
in
out
mov
sbbl
inc
mov
mov
jmp
sbb
dec
push
clc
fs
subb
push
xlat
push
xor
mov
pop
push
mov
push
lahf
jg
adc
jb
xchg
gs
push
outsb
fcom
pop
inc
cmpsb
fs
xor
dec
mov
jbe
lods
sub
imul
jl
jb,pt
addr16
ror
add
dec
add
mov
mov
adc
mov
pop
or
stc
inc
testb
arpl
pop
mov
xchg
clc
loopne
mov
aad
xor
test
mov
lods
and
div
fwait
inc
jo
mov
cmp
jmp
mov
in
cmpl
mov
xor
addr16
cmc
inc
and
les
sub
pop
xchg
into
xchg
or
jp
daa
mov
loopne
xchg
jp
cmpb
mov
push
out
jo
mov
mov
xchg
dec
icebp
sbbb
and
push
jns
lret
sti
cwtl
mov
test
inc
pop
push
mov
and
sbb
sub
add
mov
lods
pop
ficoms
call
out
mov
cmp
leave
movb
repnz
adc
xchg
testb
pop
and
mov
push
sbb
inc
int3
arpl
pop
ss
sbb
xchg
sahf
mov
sbb
pop
mov
call
add
jl
jbe
lahf
mov
lcall
cmp
stos
xchg
in
push
lcall
xlat
addr16
dec
jl
pushf
dec
insl
dec
loop
out
out
in
and
data16
repnz
enter
inc
sub
cs
mov
and
jge
in
mov
in
sub
and
sub
popa
adc
dec
cmp
xor
shl
aaa
or
sbb
out
jmp
xchg
sbb
popa
dec
cmp
xor
popa
hlt
jbe
lock
sub
or
dec
pusha
fs
sahf
repnz
lods
pop
xor
xor
inc
push
mov
call
popf
add
and
add
inc
in
arpl
adc
lods
incb
fmulp
cmp
cmp
lcall
int3
pop
repnz
icebp
scas
pop
inc
add
hlt
or
xor
jbe
subb
cmp
sub
pop
adc
into
pop
fldcw
in
sub
scas
andl
mov
xor
pop
mov
popa
stos
and
in
cmpsl
lret
icebp
pop
jp
int3
sub
cs
stos
dec
add
cmp
mov
xor
mov
sbb
mov
and
mov
dec
jecxz
aam
push
pop
out
xchg
jle
repnz
mov
not
outsb
or
push
adc
popl
dec
mov
jnp
out
scas
movsl
dec
jle
push
insl
iret
xlat
in
test
mov
ljmp
pop
add
jb
sub
push
mov
jns
dec
mov
mov
xchg
repz
pop
mov
lods
es
add
data16
lock
sti
aam
insb
or
dec
xchg
fdivs
mov
repnz
out
fwait
dec
sbb
rol
jnp
pop
fistl
xor
test
sbb
sub
int
out
dec
aaa
pop
xor
sub
fwait
cmp
lret
push
mov
cs
adc
lods
fmull
xchg
xor
notl
movsl
out
js
push
aas
adc
pop
xor
outsl
mov
dec
dec
pop
ret
or
mov
jge
jl
mov
inc
out
pop
pusha
push
div
out
push
int3
mov
xchg
outsb
xchg
loope
pop
popa
daa
adc
sub
or
dec
insl
int3
je
outsb
insb
cmpsl
cmpl
adc
in
mov
jno
xchg
mov
js
mov
ljmp
out
popa
loope
xor
mov
sbb
jecxz
fs
scas
fdivrs
mov
cld
sahf
push
repz
out
sahf
push
dec
mov
add
inc
inc
or
movsl
pop
cmp
or
scas
ja
dec
add
and
xor
adc
xor
sub
jb
push
test
jb
or
xor
test
mov
push
pop
insb
roll
pop
leave
mov
and
mov
mov
and
sub
mov
sbbb
sbb
fnsave
mov
into
mov
les
mov
mov
inc
test
mov
mov
jae
mov
xchg
mov
push
or
mov
sub
testb
xlat
js
ret
or
mov
into
aas
int
xchg
jl
mov
sub
mov
fimuls
divl
into
aaa
dec
add
mov
add
xor
outsb
lea
jbe
push
inc
cmp
es
mov
pop
push
sbb
js
xor
test
daa
dec
jae
fidivrl
mov
cmp
outsb
inc
out
subl
and
pop
mov
pop
xor
adc
mov
jbe
and
mov
push
xor
and
cltd
mov
mov
repz
out
pop
test
mov
arpl
xorb
dec
adc
in
nop/reserved
lcall
in
pop
js
push
out
jns
in
das
pop
mov
mov
mov
stc
enter
fsub
je
cli
lods
and
push
data16
xchg
mov
xor
jge
lock
imul
sar
push
outsb
inc
sub
pop
dec
lcall
adc
mov
mov
cmpsl
add
dec
mov
xchg
repz
loop
xchg
dec
xchg
hlt
in
mov
std
lret
cmc
xlat
inc
add
fwait
jp
outsl
mov
and
add
mov
nop
insl
adc
jns
pop
pop
ficoml
lea
je
addr16
mov
or
ljmp
mov
push
add
mov
js
push
add
inc
mov
test
ss
sub
dec
pop
shll
jno
adc
in
pop
dec
sti
pop
addr16
jg
call
hlt
mov
jecxz
adc
xor
sub
mov
fadd
mov
jb
sbb
sbb
dec
mov
mov
xchg
arpl
mov
pop
in
mov
lcall
mov
ret
pop
push
push
jbe
dec
int3
clc
andl
jg
xchg
ja
jo
add
inc
out
std
lea
movsb
imul
dec
idivl
push
inc
push
or
sti
je
or
jge
pop
mov
shlb
rcll
insb
cmpsb
xlat
push
sbb
sbb
mov
xchg
loope
xchg
and
sbb
arpl
xchg
cmpsb
sbb
push
ret
push
xchg
dec
inc
xor
cmp
jle
add
cmpsb
shlb
in
lcall
xchg
jg
fwait
and
sbb
jae
sbb
stos
lods
sahf
push
add
xchg
mov
aaa
sahf
push
fisttpll
xchg
add
pop
dec
ja
pop
jns,pt
ret
pop
aaa
dec
fdivl
pop
mov
jmp
inc
loopne
xchg
lret
subl
push
mov
shrb
jns
push
shrl
lods
pop
add
inc
sub
push
jbe
xor
test
loopne
lods
movsb
mov
sub
loope
mov
arpl
shll
daa
leave
mov
add
xchg
fisttpl
ja
xor
mov
pop
nop
outsb
int3
add
test
daa
mov
fstpt
in
adc
pop
ja
js
cld
cld
sbbb
aad
lret
mov
mov
pop
push
sub
andl
sub
call
gs
popf
xor
packsswb
cmc
ds
ja
mov
fldcw
call
aad
mov
shll
int3
fs
fwait
or
call
dec
fwait
mov
add
scas
jecxz
scas
ss
jns
in
push
iret
dec
pop
mov
test
mov
or
xchg
js
dec
nop
xchg
jne
sahf
scas
sub
cmp
lock
leave
test
inc
out
inc
add
int3
js
mov
mov
loope
mov
inc
inc
xor
jb
jge
push
sub
pop
or
add
dec
inc
sti
popf
mov
notl
icebp
dec
loope
ret
movsb
or
cmp
add
xchg
movsb
cmp
rol
jle
cmp
inc
adc
fsubp
in
xchg
jp
stos
imul
mov
out
xchg
out
jb
sub
sub
ljmp
call
scas
outsl
dec
nop
mov
aam
cmpsl
aad
pop
sbb
sbb
and
mov
dec
and
sub
std
fidivrs
sub
dec
jno
sahf
cmpsl
in
jp
sarl
cmpsl
addr16
mov
es
adc
dec
out
fildl
mov
movsl
push
mov
sub
adc
in
xchg
vmaxss
scas
int
mov
push
std
mov
and
mov
mov
out
hlt
test
addb
cli
xchg
rclb
inc
sbbb
mov
sbb
mov
mov
or
mov
mov
sub
cmp
or
xchg
mov
dec
xor
lret
mov
enter
ftst
int3
movsl
test
test
shl
outsb
jmp
test
ret
sub
test
cs
out
fnstcw
and
inc
leave
adc
sbb
pop
mov
cld
mov
loop
loop
in
fs
mov
data16
sahf
sahf
sbb
je
add
repz
lods
addr16
lods
insb
out
jg
scas
xor
addb
add
subb
sub
ret
dec
xor
dec
sub
roll
lea
mov
cmpsl
push
jle
add
add
mov
mov
out
push
fildll
mov
call
and
push
ja
das
sbbl
dec
adc
inc
mov
mov
aas
fdivl
popa
push
sbb
iret
cld
jle
stos
dec
test
std
jg
xor
inc
pop
out
enter
or
push
dec
pop
hlt
or
dec
cmpsb
subl
ds
pop
jge
xor
xchg
xchg
stc
lods
jge
icebp
hlt
mov
int3
fdivrs
add
and
jb
sub
addb
jg
fcomip
sub
sub
xor
pop
inc
pop
leave
test
jb
add
lcall
xchg
dec
xor
mov
add
lret
mulb
xchg
pop
ret
loope
outsb
push
fs
push
std
jl
xorb
arpl
insb
inc
stos
pop
sbb
dec
push
pop
ja
dec
imul
push
pushf
int3
dec
mov
adc
out
inc
fildl
movmskps
mov
adc
pop
dec
outsb
mov
mov
mov
fs
mov
out
js
push
cmp
pushf
testl
add
pop
add
push
and
mov
and
inc
or
popa
xchg
mov
movl
or
xchg
lcall
xor
mov
or
push
and
clc
inc
dec
push
inc
rol
lock
mov
xchg
dec
cs
jp
orl
std
xchg
adc
cld
add
pop
movsb
aam
clc
mov
mov
adc
xchg
lods
pushf
mov
sbb
rcrb
pop
mov
pop
mov
out
xchg
aas
mov
push
and
xchg
aam
out
cmp
cmp
in
sub
mov
lahf
test
shlb
mov
lods
jbe
mov
xor
out
jle
dec
xchg
fiadds
jns
cmp
test
ja
jecxz
and
sub
dec
shlb
cli
mov
ficoml
pop
test
test
push
aad
inc
mov
sbb
and
mov
pop
sbb
push
dec
jb
std
add
and
mov
daa
imul
popf
xchg
andl
pop
iret
cmp
push
jg
cwtl
sbb
xlat
daa
repz
jl
pavgw
mov
fists
pop
out
mov
pop
pop
cmp
lret
inc
mov
adc
rolb
xchg
pushf
test
mov
mov
fdivs
sbb
cmp
push
or
fdivl
mov
mov
enter
adc
rcrl
icebp
std
int3
pop
outsl
push
push
push
ret
or
pop
mov
dec
dec
adc
xchg
inc
lahf
mov
das
rolb
fists
adc
xchg
sarb
sbb
pushf
fdivrp
ficoms
push
ja
cwtl
push
mov
and
ja
dec
jle
cwtl
sbb
call
cmc
arpl
ds
mov
pop
add
movsb
push
lock
dec
cmp
lahf
jge
out
add
inc
pop
out
in
into
inc
jmp
ss
xchg
push
shl
fcomps
mov
cmp
lods
sub
in
xchg
sub
nop
pop
adc
xor
daa
pop
aaa
xchg
lods
sub
popf
jae
nop
mov
adc
inc
jb
ljmp
popa
mov
movsb
push
inc
push
bound
ret
jne
loopne
insb
adc
mov
mov
divl
das
dec
jae
xor
xorl
lds
sub
sub
lods
mov
xor
pop
sbb
jmp
aad
sbbl
mov
fistps
out
int3
xor
adc
cmp
fbld
lds
push
sub
adc
test
or
fs
ret
jns
adc
enter
pushf
cli
repnz
subb
dec
pop
xchg
mov
inc
or
dec
and
adc
push
sysret
test
pop
cwtl
push
in
pop
inc
mov
adc
xchg
and
aam
leave
mov
inc
push
addr16
xchg
aam
rcrl
test
or
xchg
stc
test
fistps
jne
movsb
sahf
rcll
sub
xchg
add
nop
fdiv
inc
sub
and
add
xlat
shrb
lcall
jp
icebp
fcoms
push
repz
sub
test
test
push
mov
jecxz
mov
out
or
mov
out
aam
pushf
jbe
nop
jne
xor
je
cmp
or
mov
pop
sbb
dec
stos
dec
andb
xchg
push
jp
popa
mov
push
sub
add
mov
xor
movsb
sub
pop
jb
lcall
add
jg
int3
enter
popf
mov
mov
adcb
add
repz
das
lds
rcl
in
out
sbb
lret
leave
mov
jne
mov
push
cwtl
mov
dec
js
scas
daa
push
enter
rcrb
or
cwtl
sub
mov
xor
mov
xor
add
ljmp
ds
cld
gs
pusha
sbbb
loope
in
xor
fstps
andl
into
inc
adc
mov
addr16
jb
shll
xor
inc
dec
push
hlt
xchg
data16
and
lds
adc
push
adc
lahf
cmp
adc
insl
pushf
mov
or
pop
adc
and
out
xchg
xchg
popf
or
scas
pop
rorl
xor
sub
sub
imul
scas
inc
lahf
stos
dec
mov
mov
jns
arpl
roll
repnz
out
hlt
jb
stos
scas
mov
mov
lret
jp
imul
xor
in
cld
dec
into
adc
add
lods
cmp
push
mov
or
dec
mov
in
ja
cmp
dec
addb
ja
inc
pop
aas
and
lret
call
sbb
push
push
xor
test
mov
push
jbe,pn
lods
imul
sub
xchg
mov
inc
sub
mov
into
repz
movsl
jne
clc
ja
xlat
pop
aas
das
and
mov
xchg
pop
cmp
adc
gs
loopne
daa
dec
sbb
fcmovnu
and
andl
jno
mov
sub
jo
xchg
pop
call
adc
cmp
mov
out
jbe
or
pop
xchg
call
popl
testl
test
xchg
push
sub
xorl
xor
mov
fldl
adc
test
dec
mov
aam
inc
aaa
in
aas
lcall
aas
push
cmp
fiaddl
fnstcw
stos
mov
lods
fisubrl
jb
push
cmpsl
mov
jle
divl
gs
mov
ret
fisttpl
fwait
add
cmp
daa
add
add
inc
inc
mov
fstps
adc
mulb
sub
mov
js
add
add
xlat
add
cmp
add
inc
mov
inc
and
push
js
ret
jo
adc
insb
inc
adc
lock
pop
enter
lret
hlt
adc
fsubrl
mov
lods
int3
mov
test
xchg
mov
xchg
add
push
inc
sbb
insl
inc
adc
aas
xchg
pop
addb
sbb
mov
call
pop
enter
test
stc
cmp
or
mov
outsb
and
mov
sbb
pusha
jg
fstl
loop
push
cmp
sarl
inc
pushf
testl
or
xor
push
push
add
inc
and
lret
mov
cmp
cli
inc
dec
outsb
push
cld
or
or
adc
pop
test
mov
or
fsts
roll
out
xor
jecxz
test
cmp
mov
inc
add
add
dec
adc
fisubrl
xorl
or
xchg
dec
or
sub
pusha
xor
push
push
mov
adc
stos
pop
mov
jae
adc
add
xor
lret
lods
xor
fwait
repnz
mov
cmp
mov
loope
push
daa
xchg
inc
dec
out
mov
pushf
test
xor
out
push
xchg
jnp
test
aas
pop
in
pop
hlt
rorl
xchg
pop
add
sub
dec
in
mov
popf
and
test
mov
push
xchg
push
lock
leave
push
popf
dec
data16
std
or
aas
sub
ret
push
test
jecxz
lret
rcrb
jp
or
and
and
je
mov
sub
fistpll
push
stc
addr16
mov
pop
aad
stc
push
xchg
inc
out
inc
jecxz
imul
mov
les
add
push
shll
mov
test
sbb
add
cmp
lcall
and
fcmovnu
inc
je
pop
mov
xor
fists
sti
jae
mov
out
stc
mov
push
stos
arpl
into
dec
repz
hlt
jb
sbb
ja
popf
in
jns
sbb
inc
xchg
mov
cmp
div
xchg
out
dec
adc
repz
mov
mov
jg
dec
add
call
pushf
inc
rolb
fisttpl
js
xor
jle
mov
pushf
repnz
iret
adc
sub
ret
and
adc
cmpb
inc
xchg
fwait
add
or
sub
das
xor
xchg
icebp
ljmp
cld
sbb
in
push
mov
xchg
mov
mov
vshufpd
xor
test
int3
jns
repz
pop
jo
ja
dec
sub
sub
mov
xchg
lea
in
test
xlat
and
pop
pop
jmp
push
mov
dec
add
cli
add
mov
push
cwtl
icebp
test
fistpl
imul
lret
stc
filds
inc
outsl
mov
cmc
mov
sub
inc
adc
mov
mov
xor
pop
mov
adc
cmpsb
inc
inc
push
xor
sbb
add
dec
sbb
mov
mov
push
je
mov
lahf
jo
enter
bound
iret
adc
push
test
sbb
jle
lods
cmp
mov
imul
add
push
xchg
loopne
in
mov
pop
push
jbe
je
or
clc
xchg
insb
notb
scas
shll
sti
and
sbb
cli
mov
lcall
out
lcall
mov
cld
fstpt
mov
clc
adc
mov
ficoms
scas
adc
in
inc
popl
push
cmp
sbb
xchg
mov
sub
decl
lods
pop
mov
lcall
test
sub
das
adc
loope
outsl
xorl
push
and
cmpsl
and
pop
mov
jb
jae
call
loopne
outsl
ja
leave
jb
popa
adcl
nop
jmp
mov
lods
js
cs
adc
jl
call
mov
movsl
mov
and
add
xchg
fwait
int3
pusha
inc
mov
test
sti
filds
mov
fdivrl
mov
dec
aad
and
push
int3
adc
xor
mov
jb
sti
mov
cli
add
and
xchg
nop
in
xor
and
sbb
je
cmp
movsl
in
mov
jmp
mov
jg
or
ljmp
cmp
cmp
loope
add
mov
or
xor
imul
daa
jae
cli
cmp
test
pop
xchg
cmp
movsl
cmp
out
pop
roll
mov
in
xchg
jno
lret
pop
inc
inc
loopne
xor
mov
bound
mov
push
pop
lods
nop
and
arpl
sub
xchg
ds
fs
aas
jno
and
adc
mov
cmc
insb
adc
cmp
pop
mov
adc
mulb
jle
das
sarl
lds
pushw
push
leave
in
sub
loopne
mov
sbb
popf
sub
filds
adc
xchg
add
jl
pop
movsl
xchg
movsl
rclb
loopne
dec
sti
lahf
ljmp
ja
pop
sub
leave
rcl
and
adc
fdivl
cmp
rclb
xchg
gs
shlb
xchg
mov
mov
mov
dec
rclb
mov
popf
bnd
pop
fimuls
shlb
push
call
sbb
je
or
sub
jne
and
lea
dec
into
pop
mov
inc
outsb
mov
add
cmp
xor
push
adc
pushf
or
sub
sbb
repnz
outsl
inc
les
cld
mov
sarl
sub
mov
movzbl
aaa
sbb
push
shrb
dec
sub
iret
leave
lods
sub
sbb
cmp
insl
sbb
xor
push
sub
bound
insb
mov
xor
pushf
sbb
dec
sub
jae
cwtl
jno
push
mov
inc
adc
test
cwtl
sub
iret
jb
or
inc
test
popf
pop
clc
call
or
pop
outsb
test
xchg
xchg
movsb
ds
mov
sub
ror
jl
fcom
push
loope
inc
test
push
push
js
ljmp
add
iret
push
stos
stos
outsl
lods
jo
lret
mov
jns
jl
mov
mov
loope
xchg
and
lcall
sbbl
push
push
daa
xchg
mov
mov
inc
cltd
in
sub
xchg
movsb
inc
mov
jecxz
mov
mov
adc
ljmp
mov
lcall
loopne
mov
lods
xchg
adc
dec
fnstsw
scas
or
cmp
xchg
and
and
imul
ret
ret
cmp
sbb
cmp
push
pop
jge
je
in
add
lret
mov
stos
mov
jne
dec
dec
icebp
mov
cmpsb
stos
jno
sti
inc
jl
or
push
dec
jno
mov
frstor
rorb
pusha
jecxz
icebp
mov
call
mov
iret
or
mov
dec
data16
cmpsl
mov
add
mov
jae
push
insb
jp
push
push
xchg
mov
sahf
test
stos
xchg
sbb
icebp
xor
mov
popf
cmp
inc
push
xlat
fistl
or
push
daa
loope
insb
cmpsl
shl
cs
ret
pop
pop
mov
push
sub
adc
pop
stos
sbbb
mov
negl
sbb
fadds
sti
push
xor
loope
rclb
and
xchg
into
mov
fildll
add
mov
xor
inc
jge
push
pop
call
jne
cmpsl
pushw
aad
aad
pop
data16
aaa
cmp
sbb
ret
dec
gs
sti
push
and
hlt
repnz
loopne
aam
cwtl
jl
rcll
in
nop
jp
mov
aas
sub
cmpb
mov
cmc
mov
iret
jne
push
add
adc
fsubl
add
or
cmp
and
iret
fisubl
mov
stc
lods
push
mov
popf
dec
inc
push
fs
lret
push
lods
pusha
ret
lea
push
mov
push
fbstp
cmp
hlt
loop
pop
mov
dec
addr16
out
aad
pop
mov
aas
shlb
jnp
rcrb
and
xor
pusha
insb
push
stc
rolb
lahf
dec
mov
test
adc
mov
pop
jae
dec
stc
sti
aaa
push
fs
out
sbb
cmp
test
js
pop
cli
shr
loope
cmp
xor
jg
cmp
push
je
dec
pop
or
cltd
sbb
cmp
mov
push
popa
sub
out
adc
loopne
jge
popf
in
arpl
xchg
dec
je
cmp
mov
cmp
aad
cmp
fwait
sbb
and
pop
shlb
insb
sbb
mov
into
int3
lods
into
call
sti
cmp
imul
mov
lret
mov
sbb
pop
pop
dec
pop
loop
mov
out
cltd
aam
repnz
scas
ss
aas
jp
mov
jl
mov
or
hlt
add
jmp
es
nop
cltd
dec
dec
lds
cmp
daa
adc
push
sub
mov
cmpl
ret
std
mov
push
jg
repnz
mov
pop
aad
or
or
mov
add
adc
fs
fsqrt
test
aaa
adc
xor
xlat
sub
stos
insb
imul
mov
repnz
sub
sub
imul
cs
and
mov
in
adc
fstpl
sbb
sub
add
repz
loopne
loopne
ja
pop
notl
sbb
int3
fs
or
das
mov
mov
dec
add
adc
in
andl
je
lcall
mov
in
jbe
sti
enter
mov
pop
test
sbb
push
arpl
xchg
mov
push
xor
mov
inc
repnz
lahf
mov
sbb
scas
hlt
xchg
scas
test
popf
jle
js
adc
pop
push
dec
mov
jp
test
or
inc
adc
shrl
cltd
jle
jns
outsb
das
cltd
inc
jmp
cwtl
ret
jno
lcall
mov
daa
xor
sub
in
xchg
xchg
jno
push
mov
mov
mov
sbb
push
push
iret
pop
inc
in
out
fcomps
mov
mov
push
ss
and
and
mov
push
mov
push
jmp
loop
sub
sub
xchg
gs
sbbl
push
xchg
jb
in
lahf
dec
fsub
push
or
out
cmp
sub
push
sub
pusha
jecxz
xchg
enter
int3
add
add
jg
mulb
push
cli
int3
or
adc
fiaddl
inc
jns
scas
mov
cmp
xlat
lea
lock
sbb
addr16
mov
test
outsb
jle
mov
lret
and
insb
sbb
popf
sbb
sti
cwtl
aas
mov
or
gs
add
imul
xchg
aad
sahf
icebp
xor
jle
jmp
pop
fdecstp
fcomps
jl
mov
add
jnp
into
in
lea
pop
xchg
push
aas
lea
dec
fadd
pop
mov
dec
sub
cmp
and
add
jne
jge
mov
sahf
jbe
mov
push
pop
adc
pop
aam
cld
fwait
je
and
mov
ret
mov
dec
xchg
and
push
dec
or
fcmovu
cltd
push
std
cwtl
pop
outsl
or
pop
lahf
jp
mov
sub
stos
adc
push
dec
out
cmp
pop
ret
jl
mov
dec
stos
mov
lcall
mov
rorb
cmpsl
adc
xor
cmc
mov
pop
pop
jle
gs
and
sub
jp
jno
sub
pop
data16
mov
mov
jb
cmp
pop
and
jnp
jecxz
jnp
addl
push
pop
mov
js
sub
push
gs
jge
sbb
mov
dec
nop
xchg
repz
jg
repz
lock
scas
test
cmp
inc
das
lea
xor
adc
repnz
jge
dec
out
ja
jnp
scas
popa
jo
iret
data16
add
cmp
std
scas
xchg
mov
adc
stos
repz
std
imul
stos
jmp
iret
jae
mov
xchg
dec
jno
cwtl
mov
inc
push
mov
cmp
fstpt
fdivrl
xchg
cld
push
or
lcall
and
test
imulb
ret
jmp
jnp
fs
mov
jle
out
adcb
test
dec
ja
int
rcrl
pop
cmp
ret
fidivs
jb
sbb
stc
dec
sub
movsb
mov
outsb
and
push
jae
les
push
cmpsb
rep
fs
fisubs
add
inc
sub
int
push
mov
xor
in
xor
fcoml
lods
call
or
or
repz
dec
xor
icebp
xor
mov
outsb
out
jo
ud1
sbb
imul
stos
testl
int
shl
popa
jmp
fwait
cmp
in
mov
rorl
aad
aam
mov
inc
popf
arpl
pop
xor
movsb
pusha
pop
add
incl
lock
mov
sahf
or
push
or
push
pop
jmp
mov
pop
adc
test
popa
sti
mov
sub
xor
mov
lock
mov
jl
inc
rcrb
mov
loope
sbb
movsb
lock
int
add
mov
push
lods
divb
xor
push
fnsave
mov
adc
add
jge
data16
sti
and
mov
jns
sub
out
rorl
lret
popa
rclb
dec
mov
cmp
call
or
test
js
cmp
jecxz
sbb
mov
mov
aas
cmp
pop
sub
shll
push
pop
nop
cmp
testl
jns
xor
lea
stc
jns
mov
cmp
fdivrl
cmp
xorb
sub
jl
pushf
xchg
or
fnsave
cs
push
mov
xchg
sahf
jno
ret
push
ja
sub
je
mov
jp
lahf
jp
sbb
or
pop
and
inc
in
mov
cs
pop
adc
jae
pop
lret
outsb
das
or
mov
mov
push
push
fwait
test
mov
xor
repz
mov
pop
xor
xor
push
mov
rorl
imul
das
add
sub
rcr
mov
dec
pushf
pop
daa
out
outsb
aam
fisttpll
or
jl
sub
movsl
jne
ffreep
jb
dec
push
push
push
outsb
jp
or
xor
imul
adc
in
or
popa
cmp
ret
shlb
lcall
stc
leave
popf
jno
out
sarl
cmpb
inc
or
jmp
test
add
add
mov
add
shll
popa
xor
fs
outsb
mov
sub
movsb
daa
rcrl
cmpsb
cld
les
call
mov
icebp
cmp
fistpl
adc
shr
jg
arpl
in
mov
outsb
stos
sub
push
sub
mov
and
gs
push
cmp
xor
push
xchg
push
pop
lock
push
mov
cwtl
add
movsl
mov
addr16
gs
jmp
adc
mov
push
inc
cmpsl
in
pusha
cmpsb
mov
out
mov
jmp
mov
pushl
dec
jmp
jl
sete
inc
pop
adc
dec
mov
xor
fcoms
xchg
cld
fdivrp
mov
mov
dec
cltd
mov
stc
sti
lcall
mov
popf
rorb
cmp
out
imul
jmp
dec
add
mov
fnstsw
add
pop
imulb
cmp
jg
adc
dec
inc
sbb
mov
dec
sub
sbb
iret
aas
and
sub
sbb
lds
adc
repnz
out
insl
xlat
test
arpl
dec
scas
xchg
hlt
or
inc
push
imul
test
aad
lret
out
stos
notl
enter
sub
sub
inc
xor
push
es
mov
dec
fstpt
push
add
orb
mov
iret
cmpsb
mov
adc
mov
xlat
xor
ret
pop
xacquire
or
pop
mov
mov
stc
jne
sbb
and
stos
xchg
leave
scas
cmp
jecxz
mov
fidivrs
gs
xchg
lods
subb
sub
call
shr
dec
rcr
push
je
jnp
mov
cmpsb
call
cmp
in
ret
andb
ja
out
jmp
test
sbb
in
lahf
ljmp
xor
sub
jl
mov
int
xor
pop
test
adc
fwait
cld
aad
cmpb
cmc
adc
sbb
imul
cmp
loope
in
and
inc
sahf
stos
push
shlb
inc
into
dec
jnp
stos
add
cltd
rol
pushf
das
jb
push
jo
or
cmp
dec
adc
in
cld
dec
adc
xchg
shrb
addr16
aam
scas
mov
fs
mov
ret
push
popa
sti
xchg
aaa
ljmp
or
push
jle
mov
mov
xor
shl
mov
sub
lret
call
mov
in
and
cli
jge
adc
jmp
pop
ficoms
xor
mov
sti
dec
ret
roll
nop
aas
popa
fmuls
mov
push
nop
mov
xlat
loop
or
pop
clc
mov
adc
and
jg
push
cmp
add
mov
out
pop
shll
push
inc
cmpsl
jo
mov
repz
arpl
cwtl
xchg
aad
shll
inc
dec
cli
fs
push
sub
pop
sub
inc
fwait
cmpsb
add
cmpsb
lret
and
out
push
sbb
dec
sbb
out
lret
sbb
adc
jno
jne
out
pop
add
push
lock
ret
and
dec
mov
out
mov
mov
test
bound
call
push
pusha
mov
sahf
ficoml
lea
mov
lds
clc
jmp
gs
adc
mov
cmp
stc
push
adc
rcrb
aas
std
fwait
in
sub
repnz
add
inc
sbb
mov
and
xchg
mov
xchg
cmpsb
ss
cmc
push
rorb
mov
cltd
cld
lods
ss
sbb
push
in
jle
insl
test
push
lods
xlat
mov
mov
ficoms
paddusw
es
test
mul
rcrb
lcall
mov
or
mov
out
lret
push
mov
andb
out
xchg
adc
mull
pop
insb
jmp
scas
iret
mov
movsl
push
adc
leavew
mov
mov
and
call
xor
or
sbb
pop
pop
bnd
out
aad
in
nop
cmp
scas
mov
pand
mov
pop
add
pop
mov
es
pop
mov
dec
data16
cmp
mov
or
mov
ljmp
mov
lahf
push
out
pop
jns
addr16
icebp
mov
mov
mov
lahf
mov
leave
ljmp
or
xchg
push
pop
cli
add
aaa
fimull
and
repnz
out
fildl
rolb
mov
shlb
pop
xor
adc
mov
out
rdmsr
jp
lcall
lcall
or
clc
and
xlat
aad
in
sahf
fiaddl
bound
fistpl
push
mov
in
xchg
mov
and
clc
push
test
pushf
test
in
addr16
xchg
ret
stos
testb
adc
lods
inc
and
scas
mov
pop
addr16
clc
pop
cwtl
ret
rorl
fisubrs
jge
pop
cmpsb
dec
movsb
pop
inc
loope
inc
orb
subb
xchg
push
rcll
test
push
jnp
enter
adc
cld
sbb
pop
mov
pop
popa
addr16
aas
stc
addr16
call
stos
addl
or
cmp
mov
mov
leave
repnz
xor
icebp
xchg
rorb
scas
add
xchg
add
int3
negl
nop
lock
mov
push
js
leave
dec
sbb
or
mov
mov
aam
mov
rcr
ds
pop
loopne
mov
cmp
or
mov
lock
jbe
lock
inc
mov
xchg
inc
inc
adc
mov
jmp
call
out
pop
pop
pop
sub
incb
fdivrp
push
imul
out
jg
xchg
xchg
fnstsw
dec
loop
sub
rcr
in
hlt
mov
imul
and
dec
mov
xorl
nop
mov
mov
or
push
call
mov
cmp
jae
mov
ds
xchg
dec
mov
xchg
mov
addr16
add
cmp
ds
mov
add
cmp
push
jge
test
fldenv
and
mov
push
mov
sub
test
repz
jne
sarb
inc
mov
or
and
faddp
test
and
ljmp
push
inc
lret
cmp
repz
fwait
ret
mov
sub
inc
mov
insb
lock
pop
imul
jge
dec
shrl
lret
lret
ss
xchg
push
jnp
push
add
adc
jne
test
pushf
and
add
inc
and
fcomip
push
lods
pop
jo
incl
aad
and
pop
jp
jo
ret
jmp
fistl
xchg
xchg
popf
or
dec
push
aad
inc
ds
notb
sarb
ja
gs
into
roll
jmp
dec
lret
inc
push
cmp
xor
and
ja
arpl
in
sbb
push
test
bound
jp
fsin
outsl
xor
cmp
mov
push
mov
inc
test
push
jge
jbe
ret
popf
inc
xchg
pushf
imul
cmpl
lea
xchg
lods
inc
mov
mov
data16
mov
in
ja
popa
ja
mov
mov
push
dec
fstpl
jge
adc
sub
cmp
xchg
mov
push
clc
fistpll
scas
popf
nop
adc
imul
les
lahf
or
call
das
pop
flds
xor
rol
jns
stos
sbb
outsl
les
ret
push
mov
das
call
insl
sub
insl
xchg
adc
roll
cmc
cli
test
cs
dec
out
stos
nop
lock
lods
push
push
arpl
inc
mov
sbb
loopne
lret
mov
iret
ret
or
push
cli
jmp
aad
inc
movsb
jnp
add
stc
dec
scas
ja
add
adc
jecxz
push
imul
mov
adc
push
ss
mov
push
idivl
mov
jp
cmp
adc
out
insl
in
call
pusha
dec
and
jecxz
call
add
rcrb
inc
lods
mov
cld
imul
jo
ja
inc
mov
jne
mov
in
add
stos
mov
adc
sbb
in
loop
mov
dec
repz
mov
int
mov
cmp
adc
or
stos
add
sub
mov
daa
je
aad
insl
sub
push
test
cmp
aam
sub
xchg
push
das
push
imul
or
jmp
mov
jb
dec
les
cmpsl
int3
pop
ret
popa
dec
imul
lods
cld
fbld
fdivrs
cmp
dec
lds
les
mov
dec
fs
imul
jne
push
mov
in
enter
dec
inc
inc
test
mov
pop
xor
mov
and
into
inc
aaa
mov
add
jo
notl
push
dec
lea
cmp
fwait
jecxz
shlb
test
imul
movsb
or
insl
sbb
fs
aaa
inc
je
nop
adc
jnp
testl
aaa
fucomp
out
rolb
mov
xchg
push
dec
cltd
bound
lret
or
cld
call
out
fucomi
movsb
dec
stos
or
add
mov
mov
xor
cltd
fistpl
xchg
ret
stos
in
movsb
andb
xchg
popf
xchg
pop
icebp
or
jb
pop
loope
repnz
add
fldenv
pop
ret
dec
mov
pop
mov
call
js
repz
in
adc
loopne
adc
arpl
negl
lock
sbb
in
mov
int3
adcb
out
das
data16
lahf
shlb
dec
ficompl
insb
jge
pushf
in
jg
pop
daa
jb
or
lret
ljmp
mov
jg
cmp
and
das
mov
sub
fsubl
adc
xchg
jg
dec
in
push
mov
mov
cli
cmc
cwtl
aaa
push
xor
and
pop
sahf
sbb
int
mov
into
scas
xchg
cmp
imulb
mov
or
inc
cmc
pushf
lret
into
jmp
and
addb
popf
dec
xlat
sub
mov
mov
or
push
push
cmp
cs
pusha
aas
lahf
rcr
lcall
movl
inc
cmp
imul
stc
mov
and
jp
inc
add
xor
jle
fldl
dec
mov
mov
push
sahf
xlat
inc
mov
out
mov
jle
pop
scas
scas
mov
inc
stos
insl
incb
ret
in
call
fiadds
lods
fbld
fisubs
gs
adc
cltd
sbb
mov
stos
loop
divl
push
test
stos
sbb
sbb
xchg
push
xchg
inc
imul
repz
or
fstl
ljmp
sub
repz
sub
mov
inc
xchg
push
cmpsl
test
push
std
imul
and
xchg
mov
push
jno
mov
jno
cmpsl
out
mov
je
jle
mov
sub
inc
ss
and
mov
in
sbb
in
insb
shrl
aam
fsub
sub
daa
inc
call
pop
fucomip
mov
les
mov
insl
arpl
jb
cmp
pop
sahf
pop
lahf
iret
out
mov
pop
insl
or
clc
test
jecxz
rolb
test
mov
inc
inc
add
push
loop
adc
std
sbb
jmp
xorl
fbstp
aaa
es
dec
iret
sti
and
pop
es
ja
or
rcll
clc
xor
scas
subb
sbb
jo
insb
cmpsl
mov
outsb
outsb
push
push
dec
or
mov
into
xor
xlat
push
pop
mov
insl
fs
mov
in
xor
pop
scas
push
inc
mov
cmp
negl
ret
jle
xor
push
das
and
aad
es
dec
dec
test
bound
addr16
std
adc
icebp
xor
mov
lahf
pop
cld
xchg
jecxz
xchg
xor
mull
into
or
repnz
dec
mov
pop
jg
jl
pop
add
negl
dec
and
xor
adcl
jno
jne
and
adc
add
aaa
shlb
xor
push
sti
or
popf
pop
push
lret
insb
inc
pusha
cmp
jge
cmp
adc
dec
fstps
jle
aad
jb
in
sub
mov
jb
test
sub
outsb
dec
mov
stc
sbb
in
out
xor
mov
ja
out
das
outsb
pushf
mov
lds
xchg
jbe
fs
adc
sbbl
in
in
xchg
adc
ret
subl
adc
fcmovnbe
push
leave
lods
and
andl
sbb
outsb
cmp
jbe
adc
sarb
addl
test
xor
add
cwtl
and
lds
lock
cmp
mov
xchg
xchg
jae
mov
sub
adc
inc
ss
adc
inc
jnp
sub
push
jae
jns
cmp
mov
repnz
loop
leave
jbe
xor
jmp
into
add
ds
fiaddl
loop
cmpsl
sarl
or
in
mov
jge
jp
inc
loope
mov
test
mov
inc
adc
icebp
mov
aaa
sub
std
sbb
push
xor
loopne
in
sub
cmp
aam
mov
xchg
notw
cmp
adc
out
stos
and
pop
cmpsl
adc
shrl
aas
test
sbb
enter
or
js
pop
mov
add
inc
out
outsl
push
cwtl
dec
push
je
adc
mov
scas
hlt
lret
fs
mov
and
xchg
lock
fs
aas
jo
sbb
js
notl
pop
xor
push
jb
adc
mov
rolb
cmp
jns
adc
adc
and
push
xor
ret
data16
xor
fbstp
dec
jle
jne
test
jmp
out
jno
push
push
adc
sbb
aas
ret
fbld
xchg
mov
sti
push
test
mov
outsl
jg
add
xchg
jle
adc
add
pop
xor
gs
lods
in
fistl
fidivl
dec
divl
faddl
push
xor
inc
mov
je
cmp
dec
es
sbb
test
fsubrs
mov
mov
out
pop
loope
insl
xchg
push
addr16
loope
pop
jo
mov
movsb
xor
pop
sub
cmp
mov
jns
repz
push
out
jmp
leave
jecxz
das
jne
adc
push
sbb
cs
fmull
push
mov
pop
jne
jb
push
pop
xchg
pop
andb
aad
or
cld
pop
inc
cmpsb
adc
pop
xor
mov
jae
pop
xchg
xor
int3
iret
xchg
rorl
out
cmp
pop
sbb
int
shrb
jmp
jns
test
imul
sbb
out
jnp
cmpsl
dec
sub
cmp
push
icebp
or
push
lods
jp
movsl
daa
push
insl
push
ficoml
ret
cmp
or
cli
loop
mov
lgs
pop
add
dec
pop
cmpsb
or
mov
dec
ja
cltd
stc
std
dec
push
add
adc
shlb
insl
lcall
add
dec
sbb
leave
popf
jo
fiadds
cmpsb
test
jb
pop
push
data16
pop
add
adc
pop
movb
mov
pop
mov
mov
ret
jl
into
jbe
repz
ss
jl
mov
pop
iret
push
pop
inc
sbb
mov
lret
iret
pop
aad
rcrl
aam
loope
sbb
in
or
push
into
push
in
or
call
push
cmpsb
mov
cld
mov
sub
test
push
shll
js
imul
je
xchg
jl
jecxz
xchg
fimuls
stos
mov
stos
lret
inc
mov
sahf
mov
pop
mov
scas
bnd
dec
iret
mov
iret
fs
push
inc
ss
cmp
cmp
inc
dec
pop
mov
in
jmp
pop
arpl
hlt
mov
in
pop
add
xchg
lds
loop
lahf
aaa
sub
jae
push
cmp
jno
dec
into
add
pop
xor
dec
jmp
lock
mov
sub
clc
mov
addr16
push
dec
push
push
jmp
pop
mov
data16
into
js
push
push
xor
push
xchg
pop
inc
es
sub
shll
scas
mov
mov
xchg
dec
dec
ljmp
mov
fidivl
xor
adc
lahf
and
xchg
sbb
mov
or
push
test
xor
jmp
xchg
push
cmp
scas
push
pop
ljmp
lcall
cli
or
fs
mov
addr16
xchg
lahf
repz
mov
in
dec
cmp
sub
mov
adcl
dec
loope
fstpt
hlt
leave
pop
outsb
addr16
clc
mov
mulb
orl
and
inc
fisttps
loopne
mov
jle
xchg
and
lahf
jo
das
fcompl
pop
jns
cwtl
jne
imul
adc
mov
sbb
pop
or
xchg
stos
cld
dec
outsb
mov
mov
mov
xor
or
fsts
in
and
mov
cmpb
pop
sub
stos
and
ret
cmp
adc
movsb
ffree
xchg
fsubr
adc
jne
pop
mov
shr
and
hlt
pop
push
mov
mov
movsb
dec
repz
out
fadds
clc
mov
mov
mov
testb
arpl
dec
push
mov
das
cltd
add
mull
inc
stc
shll
pusha
mov
test
push
insb
adc
sahf
sub
mov
jbe
pop
and
int
xchg
loopne
push
jbe
out
negl
mov
xchg
cmpb
stc
xor
in
mov
and
sub
lgs
int
nop
fldenv
add
cmp
mov
dec
mov
pushf
mov
mull
add
and
or
data16
out
mov
ss
divl
sbb
cmp
in
aaa
rcrb
stos
inc
jne
lret
fcoml
inc
jns
lods
cld
cmpsl
roll
push
lods
ss
das
lods
jb
out
dec
sbb
ds
andb
push
cld
rcll
mov
push
add
pushf
inc
sub
jecxz
cmpb
leave
mov
ljmp
aaa
pop
pop
addr16
aam
push
fs
jge
xor
mov
loope
xchg
push
nop
ss
nop
sub
jnp
and
out
dec
fdivrs
mov
sbb
out
js
push
jge
jg
jnp
xchg
inc
out
arpl
outsb
aad
das
stc
shll
sbb
rorb
inc
push
int
sbb
jmp
lret
xchg
aam
rclb
rorb
inc
xor
fildl
in
adc
sbb
mov
push
cwtl
or
sbb
jne
jb
gs
push
cmpsb
mov
xor
mov
insb
fidivrl
lock
pop
aas
cs
test
mov
cmpsb
mov
insb
jo
dec
sbb
mov
ljmp
bndldx
cli
stc
add
imul
pushf
pop
dec
sar
scas
mov
repnz
inc
mov
imul
or
pop
jg
fs
int
rolb
or
push
mov
pop
xchg
aas
and
push
add
insl
pop
testl
fwait
test
jge
xchg
lods
dec
test
mov
add
mov
int3
jmp
shl
mov
cmpsl
and
and
cmp
sbb
pop
daa
jl
or
mov
rclb
mov
rcrl
stos
loopne
stos
test
cld
bnd
js
or
mov
out
push
icebp
inc
stc
push
pop
mov
xor
ds
cld
push
push
mov
pop
imul
cmpsl
cmp
xor
and
pop
adc
adc
pop
lahf
fidivrl
dec
jge
adc
repz
or
cmp
sub
jl
adcb
pop
inc
jle
fbstp
add
xchg
repz
jle
mov
cwtl
test
gs
mov
call
clc
aaa
pop
in
int3
stos
xor
fsubrp
fdivrp
push
xor
jbe
inc
or
stos
sbb
mov
clc
mov
mov
jmp
mov
jns
sbb
xor
or
cmp
xchg
test
outsl
pop
mov
push
outsb
insl
loopne
out
cmp
loopne
cwtl
dec
cs
cwtl
push
pop
repnz
shll
add
out
outsb
dec
jae
xor
mov
xchg
push
call
mov
lret
jbe
std
sub
es
int
andl
imul
into
leave
repnz
daa
cmpsb
aad
xchg
ficoms
arpl
inc
xchg
sbb
and
stos
push
jne
mov
inc
xchg
hlt
cmp
aaa
into
xlat
std
fistpl
xor
xchg
push
popf
test
out
mov
es
test
lret
jp
fimuls
movsl
rcrb
sub
aas
push
xor
mov
lock
xor
push
cmp
gs
sbb
sub
out
xor
aaa
fdivs
add
xchg
gs
mov
popa
sti
dec
jnp
jnp
out
push
stos
xor
loope
outsl
in
or
andl
dec
add
and
cmp
adc
dec
add
in
stos
mov
enter
pop
jnp
ljmp
xchg
xor
sbb
jb
jno
pop
push
mov
jne
or
pop
mov
scas
jns
decl
mov
test
sub
xchg
scas
jmp
add
lcall
arpl
inc
jge
adc
stos
inc
outsl
add
ds
push
inc
push
sub
mov
ficompl
aam
mov
fprem
cmp
jb
jmp
jl
stos
mov
out
add
dec
mov
or
mov
movsb
mov
jo
lock
inc
out
cmp
or
push
lahf
scas
push
mov
sub
in
icebp
aam
pop
or
jp
out
pop
xchg
nop
data16
sti
ret
test
mov
test
pop
fisubrl
adc
push
cltd
fildl
xchg
dec
stos
outsl
data16
push
push
pop
shr
mov
mov
fcmovnb
imul
jne
push
jg
fisttpll
movsl
daa
shll
add
mov
mov
sub
mov
mov
mov
enter
inc
add
mov
icebp
jmp
mov
pop
mov
push
inc
testl
icebp
in
push
ds
pop
lds
mov
cmp
xor
movb
mov
xor
pop
and
fwait
mov
imul
sub
ds
ljmp
mov
cltd
cmp
pop
inc
movsb
nop
inc
pop
pop
push
push
cwtl
cmp
adc
insb
pop
sarl
dec
sahf
mov
into
fwait
or
add
outsl
add
shlb
jmp
cmp
leave
mov
int
sub
iret
fisttps
jg
pop
and
pop
mov
iret
sub
push
loope
imul
jne
xchg
mov
out
mov
ret
xchg
dec
int3
in
mov
push
mov
outsb
mov
push
mov
rcl
push
push
xorb
jge
insl
mulb
mov
xor
mov
cltd
dec
leave
sub
or
sti
shlb
jg
xor
adc
pop
movsb
or
sahf
sub
xchg
scas
push
adc
lret
ds
mov
jno
xlat
mov
ficoms
dec
ret
in
mov
rcl
inc
push
jp
test
inc
fdivrl
push
adc
add
popf
in
cmpsb
dec
xor
ret
push
mov
fwait
mov
outsb
popf
test
sbb
sti
outsb
sub
pop
cmc
jmp
jnp
rolb
sub
mov
sarl
inc
xor
cmp
ljmp
xor
pop
in
mov
imul
test
je
mov
dec
fwait
repz
stos
lea
and
orps
mov
xchg
orl
mov
cmp
xor
hlt
adcb
sbb
pop
sti
inc
clc
enter
add
pop
clc
or
mov
rcr
add
mov
cld
fdivrs
push
les
adc
nop
adcl
push
jmp
mov
mov
out
jmp
xlat
nop
repz
add
or
xor
inc
movsb
sbb
cmp
pusha
aaa
mov
jae
inc
dec
dec
pusha
push
ss
insb
cli
dec
sub
add
push
in
mov
hlt
jge
rolb
inc
aas
not
add
daa
call
les
cmc
pop
push
jns
pop
adc
sbb
movsb
out
imul
jnp
dec
inc
leave
jp
mov
sbb
inc
ja
in
xchg
jnp
cwtl
and
fadds
lcall
mov
jge,pn
lds
cli
jp
push
inc
daa
jb
inc
lcall
movsl
push
icebp
xchg
jge
push
neg
jmp
or
sti
pushf
sbb
lea
fstpt
sbb
dec
popf
dec
in
iret
mov
add
gs
mov
jl
cmp
push
into
lret
fmuls
jmp
dec
daa
inc
sbb
imul
cs
fwait
repz
ret
flds
orb
sarl
jb
or
in
incl
sub
mov
sbb
leave
dec
negl
fidivrs
test
ja
std
inc
mov
jns
push
cmp
outsl
inc
and
in
mov
outsl
or
cmp
xchg
sti
sub
addr16
fucomi
dec
jno
xchg
jl
test
je
fwait
es
pop
das
push
sbb
pusha
jmp
xchg
into
cli
sbb
xchg
push
mov
shl
nop
xchg
mov
shrb
xchg
xor
add
in
cltd
xor
dec
rcrl
jecxz
xor
push
mov
fs
in
pop
sub
mov
pusha
js
movsb
shrb
call
dec
or
aaa
or
xchg
inc
scas
lds
push
adc
divl
cltd
push
inc
add
sbb
dec
push
mov
fnstcw
ret
add
call
rcrl
or
xor
aad
stc
mov
add
mov
mov
push
inc
insb
xchg
pop
lods
movsb
xchg
lea
insb
jbe
mov
dec
xchg
movb
inc
imul
cs
addl
lret
or
arpl
or
or
inc
imul
jns
loop
ds
mov
mov
pop
in
mov
dec
call
lret
jbe
movsl
mov
int3
fnstcw
fwait
inc
je
popf
pop
loopne
insb
xor
out
call
fdivrl
push
cli
stos
mov
or
mov
fadd
out
pop
out
les
or
mov
push
mov
inc
xor
or
mov
cmpsb
jmp
lods
inc
and
insb
jg
in
ret
jecxz
lret
fmuls
lds
dec
outsb
sbb
pop
mov
mov
cmc
ja
dec
xchg
mov
in
mov
mov
outsb
sub
lods
pop
rcrl
sub
out
xchg
mov
xchg
mov
out
lock
and
je
enter
and
test
call
jae
or
xchg
clc
cld
push
fstps
mov
in
nop
daa
dec
mov
popf
std
fisubl
ljmp
mov
lahf
daa
mov
lcall
xor
xor
fs
sbb
rol
add
imul
clc
aas
notb
mov
call
out
pushf
addr16
pop
jne
dec
add
sub
pop
xor
mov
add
sbb
adc
sub
inc
push
outsb
cmp
inc
scas
mov
mov
xchg
mov
xchg
and
push
adc
sub
and
push
cmp
je
dec
jnp
adc
pop
out
insb
pop
adc
dec
bound
dec
mov
jl
notl
xchg
es
lock
stc
lods
out
and
ds
ja
stos
mov
and
inc
mov
test
sti
jno
xor
cmp
fbld
lcall
mov
adc
or
out
out
into
xchg
push
add
inc
movsl
or
or
out
lcall
rcrb
imul
lods
cmp
jmp
xchg
cmp
shll
shl
mov
in
push
add
test
dec
leave
jmp
enter
enter
mov
jnp
and
mov
mov
andb
sub
in
and
xor
add
lods
ja
mov
or
pusha
push
and
mov
sti
fisubl
js
sbb
scas
out
xor
mov
jl
imul
pop
cmp
lds
jecxz
and
pushf
jmp
push
scas
xchg
sti
les
sub
mov
pop
fstl
rorl
fdiv
ja
fnsave
inc
xor
mov
insl
jb
call
push
xchg
dec
xlat
nop
jle
fstpt
mov
mov
inc
mov
in
jns
loope
outsl
adc
cmpsb
jl
push
negb
jno
insl
test
mov
cmp
std
mov
push
insl
insb
jo
add
cmp
or
loopne
movsl
stos
xchg
jae
mov
icebp
sub
cli
aam
pop
mov
loopne
clc
out
ret
in
push
sub
std
dec
rorl
or
adc
ror
insb
notl
sbb
mov
sub
fwait
mov
pop
test
insl
mov
data16
cmp
pop
sub
push
mov
mov
fistpl
sbb
fld
addl
je
cmpsb
popa
mov
gs
mov
mov
sub
mov
lods
scas
inc
xchg
fisttps
loopne
adc
sub
xchg
jbe
sarb
add
cld
test
push
sbb
push
mov
push
pusha
icebp
jbe
mov
ret
stc
inc
lahf
fisubrl
arpl
out
gs
xor
mov
and
sbb
subl
mov
aad
mov
jecxz
jge
int
cli
dec
aad
mov
add
inc
mov
pusha
addr16
es
outsb
into
jmp
jp
pop
xor
ja
ds
les
cltd
cmp
popa
arpl
jp
jge
xor
gs
push
shlb
mov
test
inc
subb
cmp
inc
sub
jns
jp
adc
movsb
sbb
adcl
cmp
lods
adc
xchg
pusha
lods
or
cld
xor
lahf
dec
aam
cmp
scas
push
jb
andb
mov
out
ret
or
jmp
rorl
xchg
test
push
in
lcall
add
lock
adc
aam
shll
mov
or
sub
mov
lret
cltd
adc
test
popf
mov
gs
idivb
sub
rep
repz
cmp
orl
jne
repnz
inc
jbe
xor
adc
mov
or
cmp
xchg
sbb
es
xor
inc
dec
xor
lret
sbb
xor
push
roll
adc
nop
jle
jmp
xor
aaa
push
call
cmp
inc
sbb
lcall
das
fwait
and
sub
jo
out
adc
daa
test
mov
dec
aaa
adc
or
mov
in
rorl
dec
push
fs
repz
jp
inc
daa
push
inc
in
dec
roll
movsb
in
mov
jge
xchg
dec
les
mov
repz
js
and
bound
test
inc
fldl
sub
movsl
mov
and
shufps
or
xor
cltd
ljmp
mov
inc
cmc
and
imul
xor
inc
adc
jnp
ret
fists
gs
mov
bnd
mov
sarl
mov
sub
lret
sti
and
jno
movsl
test
ja
sub
pop
mov
js
and
xchg
xor
cmp
test
inc
mov
inc
or
jnp
mov
mov
stos
and
test
ds
inc
cltd
push
std
fildll
sbb
les
pushf
fistpll
mov
push
and
leave
cli
scas
mov
js
sub
sub
out
test
nop
mov
jne
lods
dec
outsb
add
pop
loopne
ficompl
dec
out
inc
cmp
xor
mov
xchg
or
fcmovnbe
sub
fimuls
sbb
mov
pop
mov
push
clc
dec
addr16
or
or
lahf
scas
movsl
jbe
stc
loope
inc
mov
jo
cs
jmp
outsl
movsb
aam
in
mov
es
es
and
dec
cmc
fsubs
mov
push
lret
mov
imul
cmp
vunpckhps
int
cmc
sub
cmp
jl
shl
out
add
mov
test
cmc
pop
ss
or
adc
or
lcall
lahf
mov
jno
into
dec
ficomps
xlat
pop
movsb
sahf
arpl
mov
sub
xchg
sbb
shrl
jecxz
xchg
dec
pop
int3
sub
xchg
ror
xor
push
dec
out
sub
popf
lds
inc
push
mov
sbbb
gs
out
cld
imul
lods
cmpsl
fisttpl
lcall
int3
push
repz
and
ss
stos
int3
add
push
orb
out
out
push
lret
fsubs
js
sub
push
in
inc
inc
pushf
loope
pusha
popl
add
mov
fistps
icebp
mov
stos
sub
ffreep
test
ja
aad
inc
fisubrl
adc
out
lods
xor
fldt
es
xor
push
loopne
or
mov
leave
rclb
xor
sbb
cmp
or
out
es
test
xor
fmulp
imul
pusha
pop
and
in
imul
inc
push
ljmp
daa
dec
add
jnp
mov
or
lods
repnz
mov
out
pop
in
movsb
es
loope
cmp
jnp
es
fadd
inc
mov
jo
add
jb
pop
cmp
inc
mov
aad
loopne
mov
inc
and
rcrb
xchg
push
jle
push
pop
push
inc
push
xchg
mov
cmp
sbb
lahf
mov
mov
sbb
dec
pop
test
push
aad
xor
cli
dec
mov
mov
cmpsb
mov
frstpm(287
xor
cmp
repnz
cs
mov
or
fiadds
sbb
or
aam
mov
shlb
adc
testb
mov
inc
dec
enter
leave
scas
and
cmovs
fcoms
xchg
mov
lret
out
ja
and
rcrl
add
inc
in
sbbb
push
mov
xchg
pushf
xlat
data16
cmpsb
stc
lcall
cli
sub
shrl
cwtl
push
lfence
rcrl
int3
call
movsl
mov
imul
insb
cmpsb
or
scas
lahf
adc
jp
xchg
bound
fxch
push
loopne
jmp
pop
test
adc
sbb
out
stos
and
mov
xor
adc
pop
and
push
call
insl
js
cli
test
xor
aas
sub
loopne
out
movsb
xchg
xchg
xchg
dec
cmp
push
gs
sub
in
mov
sti
mov
out
aas
loope
les
mov
sbb
repnz
dec
or
inc
les
push
das
test
fistps
popa
jae
pop
mov
daa
cmp
jno
xor
and
mov
dec
jmp
pop
into
pop
insl
clc
cmc
cwtl
lods
xchg
popf
jp
shr
loop
inc
jo
testl
movsb
mov
dec
in
in
fisttps
mov
loopne
adc
popl
aam
jmp
xchg
pop
inc
ss
repz
test
in
das
push
rorb
int
sti
in
dec
and
cmp
std
test
inc
mov
nop
jge
je
es
test
add
cmp
movsb
daa
movsl
pop
imul
or
add
dec
jns
or
jns
data16
dec
sbb
and
cmovns
xchg
sub
mov
test
ret
and
dec
xchg
lods
in
addl
jl
mov
test
imull
cmp
gs
cwtl
mov
subl
cmp
inc
repz
sbb
or
addr16
jbe
cld
cs
sub
push
popf
sub
pusha
add
push
ret
lea
mov
pop
add
or
xor
sub
out
xor
fdivrs
and
mov
or
push
das
push
insl
xrelease
or
push
enter
mov
sahf
sbb
inc
cmpsb
mov
jo
mov
ret
push
mov
and
xor
cmc
fldz
lret
push
js
hlt
nop
push
pushf
pop
mov
xchg
cmp
outsb
add
aam
or
orb
cmpb
decb
rclb
jge
lods
ds
lcall
out
mov
jo
pop
sub
shll
cmp
pop
and
iret
sbb
cmp
inc
inc
lret
ljmp
imul
rolb
jns
cmp
popf
mov
test
jbe
xchg
clc
push
or
inc
sbb
inc
inc
push
das
cld
fsub
cmp
ret
cmp
nop
push
rol
cmp
or
adc
icebp
inc
mov
jge
aad
outsl
jno
sbb
nop
outsl
sahf
into
push
dec
push
in
mov
and
outsl
movlhps
cmpsb
test
adc
nop
ficoml
jno
rol
lock
cmp
enter
or
or
xchg
inc
jecxz
mov
inc
addl
xor
lods
mov
ss
aam
mov
js
test
shl
and
push
enter
add
fcmovnbe
daa
inc
cmovs
pop
or
lret
push
js
adc
dec
xor
xchg
std
aam
mov
sub
cltd
shl
jmp
fcmove
aaa
and
mov
push
in
sbb
lods
xchg
cld
dec
ret
aas
lods
roll
fisubrs
scas
iret
popf
cmp
sbb
lret
test
or
fstpt
jmp
inc
pop
mov
arpl
lock
sub
or
adc
pop
add
jl
loope
mov
fistpl
inc
repnz
ljmp
pop
dec
mov
sbb
mov
iret
jne
inc
xchg
mov
movsl
repnz
addr16
in
add
xchg
jbe
add
stos
inc
ljmp
add
mov
ds
loop
outsb
lock
xor
or
pop
mov
call
in
inc
mov
es
lods
xor
repz
int3
xchg
pop
mov
sbbl
roll
pop
fbstp
outsl
test
jnp
jo
std
pop
xchg
movsl
lds
xchg
fisubs
incl
fs
or
insb
loop
daa
repz
jecxz
bound
lds
aam
out
ds
xchg
sahf
imul
inc
sbb
repnz
nop
subb
stos
insb
ret
dec
pop
test
inc
jae
jne
rep
shl
fildll
jnp
mov
and
fs
movsb
xchg
rcrl
xor
mov
add
out
sbb
jne
jno
add
lret
rorb
test
jne
test
pop
sub
and
fisttpll
sub
popa
pusha
dec
in
pop
hlt
cmp
loope
cld
pop
cmc
pop
dec
and
lahf
hlt
dec
decl
cltd
xchg
add
inc
adc
fildl
push
mov
inc
push
sbb
push
add
dec
push
and
mov
sbbl
bound
mov
loope
mov
sub
pushf
add
sub
jp
dec
or
lock
pop
cmp
in
divb
mull
or
arpl
xor
jns
mov
mov
add
sub
sti
adc
lds
iret
inc
test
mov
sbb
shlb
dec
in
inc
popa
push
xor
sbb
sti
push
movsl
lea
shrb
and
mov
adc
sbb
and
scas
test
adc
mov
inc
mov
xchg
mov
testl
mov
dec
test
or
adc
xor
or
ret
add
orl
cmp
rcll
sub
push
in
sbbb
dec
cmp
clc
js
and
imul
rolb
cs
mov
jge
lods
adc
cli
lahf
das
mov
aas
loop
xor
cmpsb
jmp
jecxz
pop
jg
mov
movsb
inc
xor
fdivrs
add
and
aad
xorb
xchg
addb
ret
lods
std
das
mov
test
loope
lods
xor
push
adc
iret
xchg
call
pop
int3
fdiv
fdivrs
lahf
aas
out
iret
jne
ss
mov
fwait
mov
rorl
enter
cli
mov
cs
mov
sahf
or
adc
mov
cmp
test
iret
adc
lea
testb
icebp
or
mov
push
push
jae
test
test
sub
dec
mov
xchg
lret
push
jle
lds
inc
test
sbb
call
mov
test
pop
xor
jle
aaa
mov
mov
xchg
cmc
in
xor
xor
and
test
push
or
ja
pusha
mov
movsb
sub
push
subl
cltd
test
jmp
mov
popf
pop
mov
jo
lcall
cmp
das
sbb
cmovb
clc
adc
add
pop
call
ret
cmp
dec
cmpsl
sahf
ss
fs
fwait
sub
mov
and
dec
xor
sbb
fldenv
mov
dec
jmp
add
mov
xchg
movsl
leave
pop
add
mov
and
dec
fisubrl
cltd
mov
push
sub
xchg
cmp
scas
lret
test
adc
jno
sub
jl
pop
mov
divl
dec
push
ljmp
mov
pop
int
mov
add
or
lret
mov
cmpsl
ret
mov
push
clc
mov
inc
roll
imul
sub
mov
jl
pop
push
mov
repnz
ret
mov
cmp
pop
lret
ficompl
sub
das
mov
into
push
dec
lods
outsl
decl
xchg
divl
imul
inc
cmp
or
xor
fsts
lods
jmp
mov
xchg
jge
or
lods
jne
pop
mov
inc
add
pop
mov
jbe
inc
push
cmpsl
dec
scas
lret
mov
add
clc
es
aas
push
stos
or
cmp
outsl
hlt
push
stos
mov
push
dec
xchg
icebp
sti
leave
pushf
xor
add
lods
mov
inc
in
out
and
push
adc
xchg
and
adc
ret
inc
in
and
inc
jmp
dec
loop
lock
push
sti
into
idiv
daa
frstpm(287
or
cmp
rorl
out
cmp
mov
jns
aad
mov
cmpl
sahf
mov
push
xorb
mov
xchg
push
or
mov
repz
js
in
je
cmp
pop
and
adc
mov
mov
shl
jle
loopne
push
test
sbb
add
dec
ss
jbe
xor
push
mov
xor
insb
cmp
push
add
sbb
mov
mov
shll
fwait
aaa
arpl
pushf
mov
scas
bound
add
out
sub
aam
push
lret
fcompl
sub
cwtl
add
rolb
rclb
pop
sub
xchg
lods
mov
pop
adc
sbb
shl
cmp
in
int
mov
mov
fnsave
clc
sub
bound
mov
mov
sub
test
fwait
inc
pop
and
xor
das
pop
daa
mov
call
jecxz
insb
jp
fadds
rcrl
lds
mov
loopne
mov
fwait
pop
cmp
mov
test
clc
out
push
stos
push
rorb
sbb
jo
mov
sahf
jle
or
mov
inc
addr16
xlat
js
repnz
mov
pop
jbe
mov
fnstsw
xchg
es
push
arpl
mov
sub
xor
dec
pop
dec
or
add
inc
push
sarl
adc
add
sbb
mov
fisubrs
cmp
dec
cld
rorl
outsb
in
adc
sub
hlt
adc
pop
pop
fisttpl
mov
pop
pop
test
mov
mov
je
xchg
jp
mov
icebp
call
sbb
insb
xchg
mull
imul
shrb
sbb
out
xchg
xlat
or
dec
movsb
sar
test
lret
mov
and
nop
jae
add
xchg
xchg
push
mov
lahf
jmp
and
lret
cmp
cmpsl
cmpsb
ljmp
aam
movsb
pop
mov
fs
mov
shr
xchg
and
fistps
jecxz
ret
sub
in
lahf
or
jns
arpl
sbb
push
inc
rclb
int
inc
add
lcall
jmp
or
push
out
scas
aad
lret
pop
mul
ja
add
adc
cmpb
out
fidivl
jmp
sahf
mov
jecxz
call
addr16
test
cmp
fldcw
jecxz
inc
lret
add
clc
imul
pop
lcall
cld
mov
jnp
jne
add
inc
data16
ss
cmp
adc
scas
pop
dec
lds
cs
mov
es
insb
outsl
add
mov
mov
mov
cmp
ret
cli
lds
adc
xor
push
dec
loopne
sbb
jg
shrl
movsb
sbb
cmp
pop
sbb
mov
dec
xor
mov
jae
stc
mov
sub
mov
dec
in
push
xor
dec
lea
lds
es
push
cmc
test
outsl
sbb
inc
fadds
mov
sbb
lcall
cmp
out
insl
fcmovnb
lret
out
aad
cmp
pusha
pop
sub
sbb
inc
bound
adc
jmp
ret
inc
mov
scas
and
jmp
clc
notb
inc
outsl
pop
xor
out
jecxz
or
adc
jl
jbe,pn
dec
lea
push
ret
push
ss
mov
push
jne
cmp
push
lret
inc
mov
fcomps
jmp
cmp
ror
add
rcr
sbb
rcr
inc
fwait
jb
xchg
out
dec
push
sbb
inc
int
xchg
mov
inc
sub
insb
fadds
sbb
lcall
dec
xor
pop
mov
push
sub
sub
addr16
jecxz
push
or
push
pop
cs
lret
outsl
push
mov
push
repz
imul
sub
test
inc
mov
orl
cmpsl
cs
nop
xor
daa
mov
cmp
js
add
pop
or
int3
cmc
fadds
mov
test
lods
testb
mov
int3
sti
mov
sub
sbb
mov
lcall
in
loopne
ret
or
cmp
in
jne
mov
adcb
xchg
daa
call
mov
mov
loope
mov
jnp
pusha
add
in
es
sti
nop
jp
mov
dec
xor
cld
jmp
pop
in
pop
mov
cmp
add
cmp
push
sbb
addr16
xor
xchg
xchg
mov
inc
jp
xchg
rcll
mov
scas
pusha
jp
shrb
cmp
push
arpl
xor
inc
inc
push
push
and
mov
test
lret
and
inc
mov
lret
pushf
xlat
insb
pop
sub
pushf
cs
mov
rdmsr
adc
jae
xor
hlt
cmpsl
or
arpl
pop
mov
cltd
test
jae
into
repz
jae
call
ss
mov
sub
clc
loope
jecxz
jbe
cmc
roll
sub
stc
daa
adc
pop
cmc
loope
push
cs
sub
pop
sub
or
aas
or
out
cmp
mov
lret
xchg
inc
aam
in
fst
popl
pop
arpl
mov
inc
mov
aas
pop
inc
fsubl
push
repnz
outsb
sub
xchg
cltd
orl
les
push
addr16
out
repnz
inc
push
push
pop
jbe
pop
in
pop
xlat
popf
enter
je
arpl
pop
scas
mov
dec
loop
pop
pop
adc
jmp
add
xor
fs
test
iret
es
xor
push
or
imul
loopne
push
lds
adc
add
shll
movsb
iret
jb
bound
sbb
cld
mov
inc
movb
pop
jo
jnp
xor
aas
inc
mov
or
jp
stos
iret
sbb
xchg
mov
add
mov
push
sbb
and
lahf
stos
pop
ret
dec
mov
lret
cmc
mulb
ds
mov
xor
les
sub
lds
xchg
outsl
shr
mov
push
mov
lds
adc
xlat
lock
imul
jle
or
push
push
xor
lret
sbb
inc
pop
jg
and
mov
mov
xchg
shlb
add
call
inc
cmp
xlat
pop
adc
jl
pop
pop
pop
in
xchg
sbb
push
pop
loop
icebp
inc
lcall
popf
stos
mov
cli
lods
lea
enter
fisubrs
add
pop
test
stos
xchg
dec
dec
outsl
push
xor
outsb
push
and
mov
out
cmp
stc
mov
push
add
sub
cli
or
sub
cwtl
popf
hlt
mov
popfw
mov
clc
rolb
je,pn
aas
dec
cmp
mov
js
insl
out
push
jmp
inc
rcll
stc
stc
pop
movsb
js
in
cmpsb
or
sub
bound
xor
sub
and
jecxz
mov
aad
dec
aaa
add
ret
clc
mov
mov
popf
mov
call
adc
hlt
insl
inc
push
repnz
adc
pop
add
and
mov
mov
jl
mov
inc
mov
pushf
imul
adc
out
loopne
mov
pop
enter
popf
jo
push
push
or
lods
test
dec
cmp
xor
add
shll
mov
push
js
sarb
xchg
xor
jo
jg
cmpsb
jl
rcl
lods
lcall
or
or
xlat
mov
test
push
pop
inc
xor
mov
cmpsb
aad
into
in
jge
mov
add
jbe
xlat
aaa
iretw
popf
dec
jmp
add
aad
rcl
enter
test
stos
push
add
push
mov
mov
aad
cmp
shl
ja
mov
dec
xchg
subl
dec
pop
aam
fsubr
js
int3
in
dec
jae
je
dec
pop
lea
pop
sarl
call
vinserti32x8
sti
int3
jb
mov
mov
jl
mov
push
pop
sti
aam
sti
mov
sbb
int3
aas
or
das
rcll
and
jne
ss
in
mov
shlb
mov
sar
les
sub
bound
imul
mov
add
mov
xchg
inc
stos
mov
movsl
lea
and
pop
iret
insl
fs
int
and
push
push
sbbl
mov
jmp
sbb
mov
movsl
add
add
mov
xchg
ss
sahf
sahf
enter
ret
cmp
inc
rolb
jmp
add
nop
retw
mov
dec
jns
cmp
insb
sbbl
push
jne,pt
stc
inc
insb
fidivl
mov
leave
out
fwait
cmp
dec
loop
xor
adc
lret
outsb
mov
movhps
push
jle
xchg
cmc
idivb
xchg
sbb
push
js
mov
mov
xor
or
mov
lcall
push
xchg
adc
pop
inc
pop
shrb
inc
dec
shlb
sarb
cld
icebp
pushf
lds
enter
std
or
cmp
ret
popf
call
mov
pop
cmc
and
pop
aaa
xchg
sub
aam
fincstp
je
psrlw
dec
mov
jae
xlat
and
cwtl
mov
sub
jns
push
mov
push
jl
push
mov
bound
lret
lds
push
test
inc
mov
jno
sub
es
incl
ret
push
movsl
push
mov
lds
lcall
ljmp
lret
lock
loopne
inc
scas
pusha
dec
mov
pop
and
add
ljmp
notl
xchg
das
mov
sub
sbb
ds
std
ss
xor
xor
je
lret
scas
xor
sub
fdiv
ret
sbb
daa
popf
enter
mov
sub
adc
insb
rolb
adc
inc
xchg
out
cmp
xor
out
lret
pop
cmp
mov
cmp
xchg
sub
mov
leave
xchg
frstor
notl
loope
cmp
pop
dec
and
fld
in
test
sub
adc
push
test
insl
add
xor
loope
mov
and
sahf
mov
faddl
imul
bound
ret
into
int3
mov
addr16
ret
xor
push
adc
insb
std
out
sarl
rol
lret
rorb
imul
into
sub
mov
xor
test
push
rcrb
sti
call
mov
fstpl
sbb
xchg
movsb
insl
xor
mov
jmp
ret
iret
push
mov
mov
mov
mov
test
movsl
dec
add
loop
cli
inc
or
mov
inc
sbb
mov
rcrl
cmp
inc
and
sbbb
sbb
mov
in
lea
ss
cld
xor
js
enter
inc
pushf
movsb
cmp
std
scas
andb
scas
jno
in
aaa
lock
mov
mov
push
sub
cltd
outsl
jge
movsl
fbld
push
xchg
sbb
iret
pop
xor
arpl
push
lods
pop
push
mov
imul
rclb
xlat
cmp
lea
or
mov
ret
or
mov
rclb
cwtl
les
shlb
push
dec
in
lcall
push
enter
mov
ljmp
inc
rcrl
xchg
ror
cmp
unpckhps
mov
adc
in
add
insl
les
in
push
xchg
repnz
cmc
mov
mov
xchg
lea
add
xchg
mov
in
push
sbb
xlat
mov
cld
dec
mov
vdivps
in
xor
repnz
lea
and
and
cld
mov
test
movhps
push
in
imul
test
xchg
xchg
pop
ss
mov
dec
daa
push
or
adc
dec
inc
jnp
xor
sbb
mov
stc
imull
call
mov
fstps
cmp
push
jnp
repnz
mov
notrack
out
pushl
outsb
sub
pop
push
std
ret
pop
aad
negl
in
call
mov
pop
push
popf
and
pop
out
mov
xchg
clc
in
fstp
cli
orl
lods
repnz
daa
sbb
ds
xor
jbe
inc
mov
mov
ret
daa
cld
and
in
sub
jo
or
mov
jae
adc
shll
xor
test
imul
mov
push
sti
pop
mov
std
xlat
inc
dec
test
imul
or
cmp
push
ret
mov
xor
lods
sub
push
shrl
push
xor
test
mov
mov
add
subb
pop
push
lcall
cli
jne
mov
lds
movsl
inc
pop
jl
dec
leave
ja
pop
iret
xlat
jle
mov
push
mov
mull
mov
js
sbb
xchg
pusha
or
pop
das
xchg
stc
mov
icebp
dec
ror
mov
dec
cmp
clc
pop
roll
repz
int
icebp
xor
fnsave
xor
sub
cmp
inc
js
mov
cmp
xchg
dec
inc
lods
adc
stc
jbe
push
pop
in
rcrl
insb
fldcw
jns
lock
sahf
inc
mov
incb
and
xor
adc
xchg
inc
cld
mov
pop
inc
lock
outsb
nop
mov
lock
pop
mov
and
cmp
subl
mov
out
sbb
and
xor
push
movsb
in
shrb
test
mov
or
iret
pop
loop
cmpl
fwait
les
inc
and
inc
add
movsl
sbb
mov
inc
lcall
seto
mov
lcall
outsl
scas
popa
dec
jl
and
adc
mov
popf
ss
push
jbe
xchg
cli
lret
cwtl
xlat
es
lahf
repnz
add
inc
addb
sub
adc
mov
or
push
or
sub
mov
jle
jns
sub
std
aaa
popf
push
pushl
lds
inc
mov
outsl
icebp
and
cs
cli
gs
roll
ret
das
mov
add
lahf
mov
mov
mov
inc
or
xchg
out
ret
insl
sbb
mov
jne
gs
push
ret
mov
gs
cwtl
push
and
mov
xchg
dec
scas
ds
loop
cltd
cmc
iret
cs
push
mov
rcrb
or
aad
mov
rcrl
and
adc
stc
sub
cmc
fldenv
cld
adc
test
andb
add
mov
lds
mov
inc
cmp
jl
stos
jb
subl
mov
inc
aam
call
in
cmp
movsl
into
sbb
lods
js
cmpsb
jle
out
sub
jl
js
lock
sub
lock
lods
stos
mov
imul
iret
in
jae
fadds
cltd
push
dec
adc
pushf
pop
sub
mov
cmp
daa
mov
out
cmpsl
xchg
or
mov
push
jmp
pushf
addr16
xor
jle
or
cmp
sbb
stos
js
fldt
gs
imul
dec
loop
add
into
sbb
adc
fistl
clc
sub
popf
jno
mov
pushf
add
sahf
cmp
out
xchg
ja
fs
dec
or
pop
inc
mov
push
test
roll
add
xor
dec
pop
inc
lcall
add
sub
mov
mov
inc
enter
loopne
loop
out
pusha
insl
in
pusha
jo
cmp
cmp
pop
js
hlt
xchg
or
in
cmp
insl
dec
dec
out
imul
adc
sub
int
push
and
add
iret
add
push
mov
jge
jno
call
mov
repz
cli
adcl
dec
cld
add
mov
pop
bound
mov
inc
xor
jae
sar
mov
add
jo
mov
dec
sub
sub
mov
push
sbb
aaa
sub
cwtl
cmp
mov
ret
pushf
into
pop
mov
lods
loop
pop
mov
mov
mov
sbb
outsb
pusha
out
aaa
nop
outsl
mov
clc
jmp
inc
jle
fstl
mov
leave
jge
xlat
iret
clc
mov
xor
jae
incl
lcall
in
mov
adc
fcmovnu
push
insb
test
sbb
lods
mov
xor
mov
dec
mov
aad
ret
xchg
xchg
xchg
jb
sub
push
adc
cmp
push
cltd
jae
sti
lahf
xchg
cwtl
mov
add
pop
jns
cwtl
pop
jle
sahf
mov
push
or
lods
je
stc
pop
cmp
mov
push
mov
mov
xlat
jo
jae
rclb
sub
scas
and
xor
mov
xor
fdivs
mov
out
xchg
adc
adc
das
icebp
lods
orb
sbb
jo
icebp
push
sub
pop
cmp
push
out
mov
pop
pop
xchg
lahf
mov
mov
push
xchg
adcb
sahf
and
movsb
sti
icebp
dec
or
cmp
sbb
push
insb
jmp
cmp
jno
add
jecxz
stos
shr
adc
push
push
std
ret
jns
inc
dec
dec
xor
inc
adc
rorb
add
adc
mov
or
xchg
mov
mov
xor
push
imul
lea
mov
push
pop
inc
ss
dec
cld
cwtl
test
test
sbb
mov
pop
xlat
adc
lahf
jbe
xor
lds
icebp
das
inc
pop
cld
test
jg
xlat
out
jmp
sbb
fldcw
je
xchg
xchg
incb
adc
enterw
dec
inc
pushf
nop
xchg
push
scas
cmp
sahf
adc
fcmovb
pusha
scas
cvttps2pi
mov
mov
ds
sub
test
int
or
pop
or
fistpll
cltd
je
js
enter
cmp
jmp
lahf
cwtl
enter
push
xor
dec
in
mov
movsl
or
mulb
fistpll
es
inc
xchg
popf
sub
fs
outsb
jb
dec
mov
ret
jno
xor
and
orb
pop
push
lds
mov
aaa
ret
movsl
or
nop
xchg
cld
js
mov
adc
or
add
add
xchg
aaa
cld
inc
mov
aas
cmpsl
mov
stos
add
and
jmp
rolb
lret
push
mov
iret
decb
outsl
sbb
mov
jnp
push
adc
jmp
cmp
scas
jmp
in
movsl
sub
mov
aad
inc
call
or
dec
mov
ja
out
cmp
push
adc
sbb
adc
dec
lahf
sahf
ss
xchg
lock
and
out
je
fs
sub
push
xor
rcr
add
push
mov
inc
push
jo
adc
mov
shl
sub
pop
mov
jge
mov
pop
lds
mov
cs
push
jbe
cmp
ficomps
add
aas
mov
insb
push
adc
scas
mov
popf
or
jecxz
stos
sub
call
cmp
adc
fildll
mov
test
pop
movsl
add
fidivrs
pusha
jae
push
cltd
cmp
movsb
loopne
int3
in
cmc
in
icebp
js
mov
mov
popf
mov
inc
push
jle
push
mov
mov
inc
push
int
add
clc
or
sub
cmpsl
loope
adc
jle
fimull
fistpl
push
stos
xchg
mov
or
inc
lret
or
inc
call
sub
jp
nop
xchg
jge
outsb
push
rcll
fiaddl
cmp
mov
jo
ja
mov
cli
inc
sub
scas
jns
and
inc
lods
pushf
push
add
or
jecxz
xor
cltd
cmp
imulb
pop
imul
mov
cmpsb
lds
xchg
scas
mov
push
mov
pushl
push
ljmp
push
jae
sahf
xchg
jge
repz
fiadds
stos
cmp
dec
or
dec
pop
loope
pop
sbb
fwait
in
cmp
push
lret
adc
push
mov
mov
dec
pop
dec
xchg
push
cmp
and
push
mov
jnp
loopne
filds
dec
inc
ficompl
arpl
cmp
jno
in
and
cmp
cmpsl
or
cmpl
ljmp
movsl
cltd
inc
pushf
add
adc
sbb
jne
cmc
pushf
ja
mov
cmpsb
jbe
xchg
js
add
mov
xor
sub
mov
sbb
xchg
shlb
stos
pop
rcl
movsl
sub
mov
test
ss
push
push
ret
subb
ljmp
sub
sbb
xchg
jmp
lds
push
jns
sub
fisttpl
out
hlt
pushf
adcb
and
xor
cli
hlt
or
or
movsb
ja
fildll
mov
jle
mov
fwait
xlat
aam
cltd
and
xor
addr16
inc
dec
test
sub
mov
push
dec
add
sarb
pushf
nop
and
test
dec
xlat
testl
test
pop
lret
sbb
mov
clc
xor
addr16
mov
add
sub
adc
push
rorl
insl
shlb
xchg
dec
or
inc
int
mov
fwait
loop
movsl
push
inc
fsubrs
sti
push
out
add
mov
xchg
inc
mov
or
dec
push
test
shlb
jmp
jge
xorl
outsb
xor
and
push
add
mov
pop
mov
jle
not
and
ljmp
popf
or
jecxz
fmul
xchg
mov
inc
nop
lahf
xor
jne
lock
mov
adc
test
loope
int3
outsl
adc
mov
push
jo
sbb
stos
movsb
jo
inc
nop
lea
pop
out
xor
add
ja
and
in
pop
ja
test
outsb
in
sbb
movsb
pop
inc
lock
andl
xlat
vmwrite
mov
fsts
testl
sbb
cmpb
xchg
mov
xchg
cld
jecxz
sbb
fidivrl
aam
jo
cmp
mov
pop
movsb
scas
xchg
daa
lock
mov
outsl
ret
cmpsl
xorb
fmull
pushf
rorb
pop
and
jnp
pop
scas
hlt
jge
inc
in
int
adc
jo
mov
jne
cmp
insl
cltd
aaa
stc
movsl
pop
mov
outsb
adc
jo
rcrl
rcl
fs
jbe
loop
addr16
fs
jge
pushl
and
or
aad
in
stos
cmp
addr16
xor
cmp
push
mov
test
pusha
xchg
jno
or
pop
mov
pop
inc
out
push
stc
and
add
push
or
mov
cli
lret
and
inc
aam
les
lea
in
aad
cmp
imul
aaa
les
adc
mov
pop
push
nop
daa
mov
dec
push
mov
fwait
inc
xchg
cmp
aaa
push
movsb
xchg
and
xchg
push
sbb
ljmpw
push
int
or
adc
sbb
cmpsl
xchg
xor
mov
mov
jbe
push
pop
sub
xor
xchg
pop
xor
popa
aaa
sub
or
pop
jmp
jno
clc
fiadds
mov
xor
mov
rolb
fnstenv
rcrb
mov
pop
and
sahf
pushf
mov
das
mov
dec
cmp
outsb
popf
pop
out
pop
ja
cmp
outsb
xor
dec
sbb
sub
aaa
loope
arpl
lea
xor
cwtl
sti
mov
and
lods
iret
push
das
sub
fcoml
test
rol
aas
int
test
inc
pop
inc
pop
or
shl
mov
xchg
insb
mov
sub
insl
mov
inc
mov
and
ror
push
fisubrl
inc
popf
jmp
in
out
mov
xor
mov
mov
loopne
sbb
fisubrs
ljmp
mov
sub
sub
ds
xlat
scas
pop
adcb
das
dec
push
shrl
jl
mov
stos
dec
or
cmc
ret
push
push
cmp
inc
insb
ljmp
ret
pop
adc
mov
adcb
cli
adc
fldcw
add
repnz
sbb
into
or
pop
jge
push
in
add
movsl
cli
mov
into
lods
push
cwtl
sbb
inc
ret
fldenv
and
mov
xor
stos
es
add
mov
mov
es
test
push
cmc
mov
dec
inc
mov
pop
out
lret
in
jno
fcmove
jb
mov
or
lods
pop
ljmp
add
xchg
adc
imul
cmpsb
add
jns,pn
mov
fiaddl
pop
lds
add
jae
shr
imul
cmp
sub
push
mov
push
pop
fiaddl
jbe
cltd
pop
push
dec
mov
aad
mov
sbb
push
movsl
or
popf
sub
mov
cltd
mov
lret
adc
and
pop
jo
adc
xchg
mov
sbb
lret
call
scas
addl
sbb
nop
loop
out
push
into
jp
loopne
jge
sbb
out
lcall
mov
cmp
push
out
mov
std
test
and
or
insl
mov
xchg
ds
xor
popa
jecxz
adc
and
cmpsl
call
add
imul
push
in
pusha
mov
xchg
cmp
mov
jno
cmp
push
and
pop
outsb
adc
mov
pop
push
mov
scas
bound
lds
ss
mov
outsb
jg
mov
call
lods
scas
pop
xor
add
aaa
fidivs
std
and
je
in
xlat
or
pop
mov
add
sbb
sbbb
xchg
dec
pop
xchg
lret
adcl
add
jbe
bound
mov
cmp
push
pop
shrb
gs
decl
inc
nop
dec
sub
adc
outsb
fildll
addr16
or
fcmove
fadd
xchg
andl
test
pop
cmc
pop
xorb
inc
lret
push
mov
pop
add
ds
jl
or
div
hlt
sahf
test
lods
out
xchg
jecxz
ret
adcb
lea
mov
imul
and
or
or
pop
shlb
push
sarb
jnp
icebp
sbb
lock
xchg
mov
cld
mov
or
sbb
fidivrs
test
pop
test
lahf
sub
adc
lret
add
movsl
dec
ret
popf
xchg
inc
lds
cmp
cmp
adc
cld
mov
sbb
cs
movsb
add
mov
arpl
ffreep
das
cmp
insl
add
imul
out
cmp
shlb
insb
lea
cmp
lret
push
fistps
push
test
cmp
ffree
subl
jb
sbb
adc
ret
ret
sbb
test
add
push
xchg
shrb
xchg
push
push
and
iret
lcall
push
mov
sbb
ret
mov
push
push
xchg
cmpsb
dec
xlat
inc
jo
mov
sub
cmp
jbe
ret
xchg
cmpsl
popa
incb
or
jno
push
push
popf
inc
mov
daa
push
adc
repz
xchg
sbb
mov
fsubrp
and
inc
scas
xchg
mov
cmc
mov
adc
jo
out
pop
adc
je
or
pop
gs
mov
ja
cwtl
jo
sub
cmp
ret
adc
hlt
cmc
inc
cmpsb
in
hlt
or
push
jecxz
outsb
das
jmp
push
adc
fidivs
movsl
mov
int3
or
xchg
pusha
fcoms
add
sub
push
ss
cmc
jmp
mov
sub
mov
notl
out
cmp
call
sbb
xor
push
inc
jne
xor
inc
xchg
call
ret
mov
pop
push
rcr
jne
test
mov
and
outsb
out
sbb
xor
dec
sbb
fadds
pop
test
xchg
dec
out
idivl
aas
mov
push
gs
pop
jo
ja
into
ja
cmpsb
sub
mov
imulb
and
sbb
hlt
mov
xchg
fimuls
xor
lods
shrl
scas
test
jo
fs
push
test
out
in
push
ja
mov
cs
cmpsb
rcrl
sub
aas
mov
into
jbe
outsl
dec
gs
sbb
xchg
sbb
cmp
jmp
mov
leave
into
inc
les
popa
cmp
push
outsb
out
mov
xor
xchg
out
jmp
sbb
and
cmpsb
roll
orl
int3
divb
leave
jmp
repnz
pop
int3
pop
sbb
dec
in
fwait
xorb
testl
sahf
and
add
mov
aad
aaa
or
cmp
rcl
cmpsb
imul
test
mov
inc
push
iret
push
sbb
rcl
sub
and
dec
ja
pop
cmc
xlat
mov
popa
aas
js
imul
sahf
dec
adc
inc
mov
inc
push
xchg
test
pop
cs
sahf
fstpt
lahf
dec
push
add
in
and
jmp
jae
dec
es
xor
pop
pop
scas
inc
mov
movsl
cmp
incl
ret
movsl
xlat
xor
push
cmp
inc
lods
push
push
mov
call
scas
inc
shll
js
testl
loop
fimuls
xor
or
xchg
out
les
add
gs
test
jecxz
mov
cmp
jl
in
lcall
or
and
fcmovu
xchg
xchg
stos
fimull
cltd
push
or
jge
cmp
dec
insw
jecxz
add
pop
xacquire
pop
cmc
in
popa
insl
std
dec
pop
repnz
movsb
pop
jb
pusha
dec
js
es
jbe
pop
jbe
adc
out
pop
rcrl
out
cli
cmpsl
mov
shrb
mov
jns
fdiv
fstp
call
popa
jecxz
in
dec
mov
add
test
dec
push
mov
insb
mov
int
cli
andb
gs
testl
call
repz
mov
mov
lret
enter
inc
pop
xlat
sub
xchg
or
push
aam
add
add
ret
mov
xchg
enter
xor
or
fnsave
rorl
cmpsb
fbstp
scas
or
cmpsl
scas
cwtl
sbb
rcrl
out
adc
push
cltd
pop
sbb
push
add
sub
sbb
dec
mov
outsl
sub
jg
sub
inc
lcall
sti
rol
or
xor
xorb
dec
pop
shll
add
movups
jbe
pop
fdivs
pushw
aaa
stos
inc
jae
cwtl
pop
lea
arpl
daa
push
xchg
or
enter
jnp
loope
loopne
adc
imul
aas
sbb
cmp
push
and
jb
push
cld
jae
inc
mov
sub
pushf
cmp
lcall
fildll
mov
xchg
mov
sbb
sti
out
add
fstl
fildl
dec
inc
and
into
leave
jge
aam
leave
xchg
jge
sbb
ja
leave
sub
lds
frstor
roll
inc
add
fdivp
cmp
xor
bound
lock
dec
popf
cmp
ss
shlb
testb
aam
movsl
xchg
pop
lcall
incl
pushf
jmp
cmpsb
out
imul
rclb
rcr
into
mov
int
fs
and
and
popf
getsec
dec
mov
pop
int3
or
lahf
or
xchg
sti
stc
lret
add
add
adc
inc
jb
mov
xchg
sbb
cmp
fldt
add
rcll
pop
jmp
xor
cmpsl
test
int
fwait
bound
mov
xchg
lret
nop
inc
or
mov
repnz
sbb
ret
cli
mov
pop
pop
push
xrelease
ffree
adc
imul
add
mov
push
mov
das
loop
add
jae
add
outsb
leave
enter
mov
xchg
pushf
jp
and
cmpsl
fstp
aam
leave
fstpt
sub
js
fwait
fwait
mov
jle
cmc
dec
mov
jmp
adc
es
testl
fwait
bound
shrl
rclb
xchg
aad
jbe
rcrb
mov
fiadds
mov
mov
cld
xor
mov
out
pushf
pop
push
mov
push
pushf
insb
jno
mov
inc
ret
or
rcrl
out
mov
popf
fidivs
je
xor
jle
call
dec
call
jle
rcll
dec
mov
and
mov
xchg
bound
mov
add
inc
push
fimull
jae
xchg
scas
mov
xor
and
out
dec
cmpsb
push
mov
push
fisubl
sbb
lret
mov
sahf
inc
sbb
inc
sub
and
int
push
fistl
adc
ret
in
dec
js
loopne
push
es
pop
int3
jg
cvttps2pi
jnp
leave
jb
outsl
lea
movsb
test
mov
hlt
adc
scas
mov
pop
pop
push
setl
test
and
dec
cmpsl
movsl
sbb
stos
clc
hlt
mov
popf
cmp
popa
jo
mov
insl
jb
lcall
pop
push
push
aam
mov
mov
add
ds
faddl
std
push
cmp
loop
mov
push
or
test
cmpsb
adc
movsl
adc
fmull
pop
mov
js
cs
out
scas
cmpsl
shl
pop
in
xchg
outsb
mov
pop
aad
divl
lods
jmp
mov
adc
pushf
xchg
test
pusha
leave
mov
add
jmp
xchg
movsl
aam
adc
push
push
addr16
bound
negl
inc
xchg
mov
or
pushf
out
push
push
adc
jmp
pop
push
jbe
mov
xchg
mov
pop
loope
mov
mov
aam
inc
cld
push
fcmovb
cmp
and
sbb
call
dec
loop
pusha
xlat
jnp
sub
jge
mov
xchg
dec
mov
add
dec
jge
mov
xchg
popf
cmp
mov
push
or
cmc
popl
inc
sub
dec
pop
lods
xchg
push
les
sub
mov
jns
mov
xor
sub
lds
mov
ret
cs
xchg
divl
inc
loop
mov
jle
push
inc
push
push
out
mov
cmp
inc
push
pop
ss
adc
je
push
mov
pop
xor
mov
pop
outsl
and
pop
sbb
call
jle
scas
das
imul
loop
loop
cli
adc
test
push
ja
cmpsb
out
ds
popf
mov
xchg
or
loop
xorl
jmp
add
mov
repz
movsb
enter
out
addr16
ljmp
js
pop
inc
mov
jnp
stos
in
in
lods
dec
pop
pop
clc
ficoms
mov
jns
xchg
lods
in
jbe
cmp
adc
adc
dec
inc
xor
ljmp
lods
jg
mov
or
sarb
leave
cs
xchg
sub
out
inc
aaa
gs
cmp
cmp
lods
jecxz
sbb
jmp
mov
clc
adc
mov
outsl
iret
lret
lea
lea
test
add
fwait
popa
stos
or
pop
movsl
mov
adc
inc
inc
push
lock
cmpsl
aaa
insl
pop
mov
jb
mov
pop
pop
jns
sbb
inc
sahf
pop
xchg
pop
mov
sbb
jno
les
pop
push
inc
call
push
sub
inc
and
cmp
dec
mov
les
fisubs
xchg
outsl
lcall
sbb
add
push
cmp
xor
ror
into
lahf
aaa
imul
xlat
xchg
lock
inc
jns
sahf
mov
mov
pop
mov
xchg
pop
lret
lods
test
shlb
fmull
and
test
jb
sub
cmp
sbb
lods
or
fucom
add
jmp
call
sbb
jecxz
xlat
js
mov
mov
and
pop
jo
int3
scas
cmp
push
outsl
push
fistpl
cmp
sti
lods
lcall
cmpb
in
jecxz
out
mov
sub
inc
out
mov
in
cmp
sub
mov
xor
ss
inc
adc
cmpsb
xor
imul
cmpsb
pop
add
iret
pop
lret
mov
adc
push
mov
ds
and
xchg
shll
add
push
imul
or
xchg
xchg
sahf
stos
xchg
xor
dec
and
insl
scas
loope
icebp
xchg
mov
mov
mov
jbe
outsb
in
rorl
lock
mov
xor
or
out
scas
sub
cli
sub
insl
in
data16
das
jnp
jmp
test
inc
lock
clc
popf
in
add
lods
push
jmp
orl
cmp
out
inc
pop
mov
fs
iret
mov
jmp
dec
mov
cmpsl
lret
and
sbb
jge
push
mov
lea
add
mov
push
je
insb
mov
jecxz
loope
or
push
jl
ret
push
sarb
into
scas
sti
mov
dec
enter
cmp
mov
cmp
xchg
test
add
pop
iret
nop
pop
fistpl
push
push
cmp
sbb
mov
add
jge
loop
xchg
xor
movsl
or
xchg
std
mov
jns
mov
sub
loopne
jecxz
add
outsl
sub
or
jno
nop
pop
xor
mov
fdivrl
nop
jge
sahf
pop
rcl
gs
aaa
sub
cli
jb
dec
jns
dec
push
mov
jae
sti
lea
xorb
push
les
jle
sub
fs
sub
test
or
xchg
jo
fcoml
mov
lahf
and
out
pop
and
repz
pop
ljmp
jl
pop
fisubrl
xchg
mov
add
mov
or
mov
sub
cmpsb
push
imul
adc
std
popf
xchg
mov
orl
jae
int3
cs
pop
pop
dec
insl
outsl
in
fists
stos
cld
jle
stos
pop
bound
in
pop
mov
fucom
push
push
lret
cs
push
add
orl
mov
movsb
lock
stos
xor
rcll
outsb
gs
dec
sbb
push
es
mov
cmc
sub
jbe
adc
es
add
mov
int
inc
ljmp
inc
cmp
sti
aaa
and
xchg
mov
mov
adc
ret
jle
xor
rolb
les
jb
push
icebp
cltd
stos
lods
mov
cmp
mov
pop
fimuls
xchg
call
lds
addr16
mov
adc
adc
add
rolb
xor
in
movsl
add
mov
cs
outsl
cmc
imul
mov
mov
adc
add
and
insl
push
mov
and
sti
xor
call
inc
pop
xchg
cmpsb
jbe
cmpsl
loop
repz
aas
out
loope
and
outsl
push
shl
push
ds
xor
popa
das
add
pop
adc
sub
mov
xchg
ds
cmp
jnp
out
out
mov
jl
mov
mov
adc
cwtl
popa
inc
aas
mov
cltd
in
adc
cmp
cvttps2pi
stos
fxtract
adc
push
cmp
cmpsb
jb
push
lcall
mov
jecxz
inc
xchg
pushf
dec
inc
mov
out
or
shrb
daa
outsb
adc
jmp
xor
push
sub
jb
mov
mov
fs
add
push
rolb
mov
sub
mov
jl
cmp
or
mov
scas
sar
rcrb
pop
xchg
out
ret
out
cmp
pop
sbb
jmp
out
test
enter
fsubrp
xchg
shrl
test
inc
and
sbb
sysenter
mov
fstp
loopne
mov
xchg
lods
xchg
sbb
inc
sub
in
push
pop
insl
or
adc
jnp
data16
inc
inc
adc
repnz
ficoms
dec
or
stos
in
dec
pop
xchg
and
xchg
mov
mov
adc
ret
xor
mov
xchg
mov
scas
sub
repnz
das
loopne
mov
cmpb
fldl
aaa
mov
ljmp
lcall
bound
jae
sbbb
addl
hlt
popf
lret
lahf
mov
cs
mov
and
jae
or
jmp
fsubs
adc
pop
pop
out
jl
lods
inc
hlt
pop
jnp
cwtl
leave
jae
add
mov
pop
mov
mov
push
leave
fistpl
inc
pop
jecxz
jo
xor
jb
nop
pop
data16
sub
xorb
ss
das
cmc
sbb
enter
mov
or
jae
mov
jae
jb
mov
insb
push
imul
pop
adc
and
lret
push
pop
dec
sub
pop
cmp
or
sub
sub
mov
repnz
sbb
loope
or
pop
jae
xchg
call
leave
jp
fnstsw
xlat
movsl
sbb
cld
test
mov
sti
mov
and
cmc
test
or
aad
imul
dec
lds
lcall
ja
rorl
fprem
jle
mov
in
jp
leave
and
jbe
addb
ds
mov
fbld
inc
add
imull
test
iret
push
and
loopne
pusha
call
sbb
mov
rolb
daa
xchg
push
mov
push
ja
fcomp
mov
test
sub
jg
jne
adc
ss
sahf
sbb
dec
mov
lret
nop
push
scas
js
xchg
xchg
neg
call
rcr
lods
xchg
scas
outsb
sbb
cmpsb
adc
cmp
jbe
adc
xor
sbb
into
cmpsl
stc
cmp
rcl
imul
popa
stos
push
pop
sahf
pop
jmp
cmc
loop
repz
ret
sti
adc
ja
daa
inc
inc
inc
arpl
dec
lds
add
rcrb
int3
stos
jmp
pop
or
push
adc
test
shll
mov
mov
movsl
jg
lret
loopne
mov
sahf
enter
mov
fcmovnb
insl
shlb
std
mov
iret
movsb
das
xchg
in
repnz
aaa
or
xor
jne
outsb
aas
es
fidivs
leave
push
and
ss
je
mov
pop
add
xchg
dec
push
lock
mov
mov
jo
jne
test
jle
test
iret
mov
adc
cmp
lret
pusha
mov
jnp
cmp
and
jo
test
hlt
incb
sbb
aad
inc
mov
adc
adc
inc
inc
pop
mov
push
adc
jne
repz
loope
popf
daa
or
lret
loop
sti
xchg
push
movsb
imul
xchg
xchg
adc
dec
test
jb
loopne
mov
leave
test
inc
dec
or
mov
sti
push
fwait
mov
pusha
aaa
loopne
mov
stos
fsubl
lds
pcmpgtw
jg
int3
mov
out
xchg
out
sub
daa
data16
in
cmp
add
aad
lret
pop
in
mov
subl
mov
jne
mov
or
pop
test
test
pop
xchg
clc
pop
xor
imul
or
add
inc
jmp
push
dec
cmpl
loopne
shlb
dec
jnp
stc
scas
mov
fmuls
cwtl
dec
test
jmp
lret
js
add
sbb
lea
sbb
cld
rcr
fildl
iret
add
and
sub
cmc
gs
lahf
lret
bound
adc
call
push
lods
jbe
add
mov
imul
sub
repnz
data16
mov
jae
rcrl
push
inc
scas
test
jno
mov
leave
xchg
pop
repz
into
jb
sbb
push
sub
imull
mov
cmpsl
xlat
or
cltd
cmp
cli
jp
int3
ja
test
jle
push
icebp
mov
insl
sub
sahf
hlt
out
pop
and
xchg
push
inc
ret
push
out
adc
mov
popaw
and
packssdw
dec
mov
xchg
cmp
fisubs
insl
mov
push
das
ss
rolb
inc
mov
icebp
jmp
pop
xor
fimull
and
or
dec
sbb
jne
push
mov
test
mov
sub
jg
faddl
push
mov
cmp
fsubrl
cli
sbb
fbstp
jge
inc
mov
lahf
fisubl
mov
mov
outsl
mov
stos
xchg
test
stc
add
in
shll
leave
mov
or
push
xorb
xor
xor
ret
int3
sub
sbb
or
rclb
roll
adcl
leave
inc
xor
push
jmp
and
je
dec
test
push
lea
push
rolb
dec
inc
lret
shrl
in
daa
add
inc
mov
mov
cmpsl
mov
and
pop
mov
testl
cld
sbb
sbb
jge
pop
mov
push
insb
stc
jge
repnz
xlat
outsl
xchg
outsb
lock
xor
mov
ljmp
sahf
inc
movsb
push
arpl
movsl
cmp
xchg
jns
push
pop
cwtl
jbe
cmp
or
pop
push
jnp
add
sbb
out
xor
push
out
rcrb
mov
mov
or
js
mov
cmp
push
adc
add
lret
sbb
nop
enter
subl
dec
jecxz
aad
jne
test
xchg
or
mov
mov
push
enter
cs
inc
repz
scas
jns
jbe
jmp
data16
sbb
loope
shll
jae
push
and
popa
sbb
lahf
rolb
out
jecxz
xor
movsl
mov
xchg
daa
xor
dec
push
mov
out
shlb
imul
out
lret
pusha
stos
xchg
push
jg
cs
js
lods
call
mov
xchg
movsb
xchg
inc
pop
cld
cmp
ljmp
mov
arpl
outsl
insl
jno
or
mov
push
imul
ret
test
inc
daa
int3
push
add
and
xchg
lods
rcl
pop
cmc
push
push
imul
mov
sub
jmp
clc
sahf
into
and
sahf
out
mov
pop
cmp
in
leave
jbe
ss
adc
fidivrs
mov
xchg
dec
dec
lods
ret
or
mov
testb
repz
jnp
push
sbb
push
xchg
cli
js
repnz
cs
insb
or
adc
inc
jp
cwtl
shrl
pop
xor
stc
aad
ret
repnz
xchg
das
push
fmuls
fistpll
xchg
aaa
inc
sbb
jecxz
xchg
stc
mov
and
cltd
loope
dec
cmc
xchg
mov
adc
add
inc
add
jp
mov
jl
fisubs
fdivl
pop
in
cltd
scas
stos
stos
xchg
sbb
adc
mov
mov
dec
or
pop
xchg
stos
pop
les
or
dec
lods
mov
iret
loope
or
das
jno
jno
pop
lea
and
push
nopl
adc
push
cmp
xor
pop
in
aaa
mov
add
add
inc
stc
sbb
aad
imull
dec
pop
ss
ficoms
xor
push
push
std
jns
mov
or
sbb
xchg
jae
and
lods
mov
sub
push
adc
fbstp
xchg
fisttpl
movsb
hlt
xchg
pop
sub
scas
mov
fbstp
mov
div
mov
xchg
jge
sahf
jle
pushf
mov
push
sub
shll
and
xchg
popf
in
xchg
pusha
pop
xchg
sbbb
ret
mov
inc
push
inc
pop
pop
xchg
sub
test
jo
pop
into
jnp
sbb
loop
or
sub
pop
jl
inc
idivb
mov
enter
jl
jno
std
inc
lcall
xchg
icebp
and
nop
rol
ret
adc
jecxz
imul
movl
cmpsl
ljmp
cmp
adc
es
add
mov
es
out
push
insb
icebp
enter
sub
js
xchg
push
hlt
jne
sbb
dec
mov
add
mov
lock
or
imul
pop
mov
pop
mov
gs
push
sbb
es
ret
ret
cmp
ljmp
mov
push
dec
pop
into
push
mov
cmc
out
xor
sbb
inc
test
lahf
lea
adc
add
jnp
xor
mov
xor
push
cs
mov
mov
dec
cmpsl
imul
cld
aad
sbb
adc
inc
out
pusha
shll
adc
out
outsl
divl
pop
dec
movups
in
cmp
shll
cmp
xlat
xchg
sbb
sbbl
mul
dec
xorb
test
push
jne
dec
jne
sbb
and
mov
jmp
push
push
mov
lahf
popa
in
jnp
or
pop
jmp
jns
inc
dec
xlat
jnp
rolb
inc
sbb
std
pop
in
arpl
sub
test
aam
les
fnstsw
jae,pn
sbb
mov
jo
xor
enter
call
mov
mov
data16
roll
into
and
loopne
leave
mov
xchg
push
pop
scas
xchg
mov
in
xchg
jp
mov
jns
out
xchg
jge
mov
adc
mov
mov
test
pop
mov
add
mov
mov
int
out
ds
add
jae
mov
stc
push
insb
sub
jmp
loope
je
push
mov
mov
rcrl
ret
ja
pushf
stos
jns
call
inc
clc
dec
es
xchg
and
shrl
jg
lds
iret
cmp
movsb
icebp
lret
mov
sbb
pop
sub
test
mov
loope
int
sbb
cld
inc
hlt
in
pushf
aas
fwait
loopne
pop
mov
enter
push
je
or
lahf
mov
ds
mov
je
pop
test
cmp
enter
movsl
mov
int
mov
mov
inc
mov
xor
dec
enter
das
add
jp
leave
push
mov
jo
xchg
jno
mov
cmpsb
ss
inc
ds
ret
loop
xchg
repz
dec
xchg
jno
xchg
aad
mov
int
int
andb
xor
xlat
ds
cli
dec
aam
add
add
mov
and
scas
les
sub
pop
or
lahf
inc
cmp
movsb
xchg
sbbb
xor
fwait
jo
adc
or
inc
mov
adc
nop
sti
mov
xchg
sub
pop
xchg
cmpsb
sbb
dec
imul
outsl
cli
fsub
mov
pop
mov
fbld
out
dec
loope
push
testb
or
in
imull
jo
and
rol
inc
adc
xchg
in
push
stos
mov
ja
test
adc
push
push
in
loop
or
out
insb
xor
dec
rcr
jns
outsl
ret
dec
test
jmp
mov
cmp
push
push
out
sub
ret
popf
hlt
in
pop
daa
jmp
push
lods
aam
lods
cmp
nop
call
shrl
sub
arpl
inc
bound
xchg
add
push
test
aas
xchg
mov
add
sti
and
sbb
inc
push
mov
das
movsb
push
icebp
adc
push
les
mov
pop
adc
inc
daa
test
sub
inc
add
stc
daa
lds
movsb
pcmpeqw
add
popf
inc
cli
push
popf
bound
push
jg
sub
sbb
pop
mov
pop
jl
fcoml
pop
jae
xorb
inc
shlb
hlt
shll
stc
mov
and
clc
add
iret
outsl
add
sahf
enter
mov
sub
orb
cmp
mov
or
adc
clc
ficoms
call
enter
mov
cmp
out
and
jg
dec
movsb
mov
daa
in
add
mov
test
adc
sub
leave
incb
test
mov
pop
add
hlt
and
sub
lods
xor
dec
mov
stc
jl
aad
mov
jnp
xchg
daa
mov
std
lret
mov
jns
sub
mov
stos
sbb
dec
or
mov
adc
int3
fcomi
push
mov
ss
in
jp
jecxz
insl
insl
push
dec
cmc
std
jecxz
mov
incl
jo
xchg
sub
pop
xor
test
lcall
mov
cmc
push
movsl
push
leave
add
sub
lods
ret
stc
sub
ret
test
out
push
mov
incl
add
fistl
repnz
faddl
jnp
pop
adc
xor
mov
arpl
shll
sbb
repz
ss
lahf
in
cld
clc
sub
movsl
mov
adc
dec
sub
sub
xor
mov
test
sub
test
cmp
pusha
ljmp
adc
lahf
push
mov
icebp
stos
test
xor
mov
sbbb
cmp
cmpb
or
pushf
rolb
call
lret
loop
xchg
inc
iret
aam
cmp
cs
cmp
outsl
push
out
pop
adc
pop
and
and
push
outsl
sahf
add
loope
cmpsl
sbb
test
cmp
ss
mov
inc
fstl
pusha
lret
movsb
je
jb
mov
or
push
out
test
mov
cmpsl
sub
jno
popa
in
mov
jge
loopne
inc
call
rorb
xor
rorl
fdivp
or
mov
push
data16
pop
pop
dec
cmpsb
xor
in
xor
pusha
mov
xchg
dec
cli
push
mov
push
in
xor
dec
cmp
insl
pop
pop
and
adc
dec
xchg
xchg
daa
xchg
cmp
xchg
xchg
loope
clc
stos
lea
mov
addl
lods
cmp
jno
mov
fcom
movswl
dec
imulb
xor
cmp
xchg
popf
xor
xor
mov
push
lret
test
ret
push
pop
dec
push
add
pop
fidivrl
clc
adc
xor
and
jns
cmp
push
add
hlt
xchg
lcall
inc
jle
rcrl
aad
mov
movsl
sub
cmp
adc
fistpl
mov
push
or
push
mov
sub
mov
test
subl
popa
push
sub
jle
mov
inc
push
mov
shll
fucomi
pop
inc
xor
mov
sub
push
std
sbb
dec
mov
mov
das
push
js
and
sbb
inc
fdivrp
je
stos
sbb
scas
adcb
shlb
movsl
xchg
pop
mov
stos
mov
pop
lock
sti
jmp
mov
fstpt
icebp
daa
adc
mov
cli
adc
iret
fistpl
leave
jp
jmp
cmp
adc
mov
rclb
dec
js
loope
mov
and
mov
dec
cmp
loope
dec
pop
mov
dec
sbb
mov
jnp
scas
xorb
loope
xchg
ret
mov
gs
and
inc
mov
jecxz
mov
divb
inc
iret
mov
cmpsb
ss
jmp
xchg
cmp
lret
push
lret
cmc
je
imul
jecxz
test
cltd
mov
xchg
and
dec
loopne
xchg
and
sbb
fwait
test
or
xor
xchg
test
and
adc
int3
imul
sub
mov
and
fdivrp
scas
mov
mov
push
loopne
xor
ret
mov
inc
jmp
int
inc
mov
fistps
dec
or
or
out
int3
les
and
push
sub
cmp
mov
jb
pop
cltd
out
jno
xchg
push
imull
jecxz
testl
inc
test
jl
add
arpl
push
inc
xchg
xor
in
dec
pavgb
jecxz
or
repnz
cld
xchg
imul
es
insb
pushf
cs
movsb
jle
aas
mov
pop
adc
jmp
jp
cmp
movsl
or
or
ficoml
mov
add
jg
repz
xchg
aam
add
lock
shl
daa
sbb
js
push
pop
into
cltd
jo
jl
cmpsl
test
cmpsl
pop
cmpb
sti
loop
cmpsl
add
addr16
pop
xchg
int3
inc
fcmove
loop
iret
dec
adc
inc
xor
inc
mov
mov
or
sbbl
rcll
ret
sar
scas
test
shrb
and
jo
in
lea
in
sub
fdivrp
mov
mov
enter
sysret
ret
sti
xor
je
jne
mov
push
bnd
sbb
cmp
inc
shl
xorl
sub
mov
bound
pushf
adc
clc
sub
repz
mov
aam
mov
scas
sub
iret
push
inc
fidivl
push
dec
lock
bound
in
dec
xor
fbld
cmp
imul
stc
outsl
xchg
jge
jg
xor
clc
and
repnz
movsb
and
xchg
hlt
mov
add
jno
cmp
ss
cmp
outsb
jb
dec
mov
pop
data16
lds
imul
in
call
lret
xchg
cltd
ss
xchg
jg
int3
cmp
fmull
jp
mov
inc
add
push
push
enter
push
fwait
in
ror
cmpsb
mov
imul
clc
cmpsb
mov
mov
push
ja
adcb
sbb
sub
orl
or
daa
arpl
mov
mov
pushf
mov
sbb
xor
add
cli
xor
or
xlat
pushf
fs
inc
sbb
cwtl
push
or
sbb
aam
jbe
int3
je
pop
stc
dec
rcll
dec
or
jne
xchg
or
outsl
cli
push
xchg
mov
jle
xlat
cmp
sub
dec
stos
inc
test
mov
push
xchg
nop
or
loop
daa
add
inc
aaa
insb
sbb
fsub
jmp
rcrl
stos
sbb
mov
pop
fcmovnb
jp
int
cmp
inc
lea
or
add
add
jne
mov
imul
fwait
ret
stos
std
mov
jb
sbb
std
dec
mov
or
mov
dec
test
les
xchg
xchg
add
ds
xchg
stc
or
out
fwait
sbb
rclb
xchg
cltd
filds
jl
push
dec
inc
out
sub
mov
das
shlb
out
mov
fmul
leave
ds
mov
mov
negb
jns
int
cmpsb
mov
in
pop
and
push
in
or
rep
hlt
imul
movsb
mov
addr16
mov
lock
fdivp
repnz
in
jnp
jbe
pop
mov
cmpsl
scas
std
xchg
dec
adc
mov
jp
icebp
mov
or
mov
jnp
rorl
js
insb
je
lds
xlat
test
add
adc
movsl
cli
daa
and
je
mov
fstps
clc
es
data16
mov
pop
test
cmc
push
push
or
cli
mov
rolb
iret
mov
sub
mov
cwtl
add
push
lahf
cld
mov
xor
shrl
cmp
lock
inc
mov
adc
and
enter
sub
dec
rcrl
daa
cmpsb
test
shlb
enter
xchg
pop
dec
sbb
push
adc
pop
loope
jg
jne
push
mov
dec
xor
pop
loope
or
xchg
mov
stos
int
dec
outsb
sahf
imul
cmpsl
ss
or
outsl
cld
fidivl
xor
into
popf
push
adc
adc
jecxz
es
xor
push
inc
fs
pop
push
jb
or
pushf
das
mov
test
dec
pop
pop
push
sub
mov
xchg
inc
sbb
popa
adcl
shll
std
xchg
mov
pop
mov
das
sahf
loopne
sub
cmc
ret
xor
inc
stos
cli
jo
inc
mov
in
std
jns
les
xchg
dec
iret
imul
fwait
inc
inc
in
cmp
cmp
adc
daa
sbb
scas
mov
fcompl
adc
and
insl
xor
pop
sbb
push
or
lock
ljmp
sbb
mov
sub
adc
bound
sub
bound
enter
or
mov
fdivs
aaa
pop
in
mov
orb
mov
adc
pop
jmp
aam
cmpsb
cmp
xor
inc
and
sahf
mov
leave
xchg
xor
mov
and
jb
scas
movsb
push
clc
int
mov
pop
es
mov
add
or
adc
sbb
inc
lret
mov
pop
xchg
les
pop
loop
dec
int3
add
and
cmp
push
push
mov
sub
iret
push
sbb
sub
xor
or
xor
sarb
ret
popa
adc
lcall
sbb
daa
xadd
cmovne
aad
push
fsubs
gs
jmp
dec
cmp
jno
inc
inc
jnp
fwait
jmp
lock
mov
rorb
insl
jmp
jle
ficoms
and
stos
pop
stos
scas
sbb
sbb
add
pop
pop
outsb
fdivl
in
pop
jnp
jge
jmp
lcall
call
adc
ja
mov
mov
leave
xchg
mov
or
push
mov
ljmp
fstpl
rclb
sub
xor
mov
push
jl
in
jne
sbb
jbe
insb
push
xchg
pop
xchg
fidivs
mov
or
mov
hlt
sbb
mov
subb
mov
bound
inc
jg
dec
or
rcll
jbe
pushf
mov
movsl
ret
xchg
push
jle
std
cmp
cwtd
pop
in
and
sahf
imul
ja
inc
cmp
mov
cmp
dec
or
sbb
sbb
pop
into
clc
mov
test
arpl
jne
push
imul
in
ret
sbb
mov
xor
call
sub
xchg
adc
or
push
lcallw
ss
xor
pop
xor
push
cmc
push
push
jnp
ret
aad
mov
sti
pop
fwait
push
push
cmp
push
lcall
mov
xlat
sti
xchg
pop
adc
jmp
fs
jp
out
dec
pop
adc
out
mov
mov
clc
inc
cmp
mov
dec
push
int3
and
sbb
andb
add
or
xchg
iret
ja
ret
push
xor
das
cmpsl
addr16
inc
subb
pusha
cmp
mov
test
mov
cmp
cmpsb
and
mov
dec
pop
and
add
sub
insb
mov
lds
push
cmp
out
cmc
sub
std
cwtl
iret
xchg
pmaxsw
push
xor
or
lahf
xor
push
xchg
jnp
jecxz
shll
inc
jg
inc
mov
or
out
stc
push
cmpsb
add
dec
jo
nop
mov
nop
shll
out
mov
xor
daa
jl
shrb
stos
mov
aam
mov
mov
rolb
in
shlb
mov
lahf
pop
fwait
insb
or
add
imul
cmp
sbb
inc
mov
sub
push
cltd
mov
pop
ret
inc
xchg
addr16
push
mov
shll
push
call
lock
xchg
test
lret
cmp
aas
xchg
test
sbb
jl
pop
cld
scas
imul
fmull
add
lret
lods
pop
fnstcw
int3
pop
adc
push
jmp
cmp
jbe
jae
adc
ljmp
in
add
scas
sti
cmp
xchg
pusha
xor
stc
jb
xorb
lret
or
inc
cltd
gs
mov
insb
mov
jo
cmpl
cmp
dec
xchg
sub
mov
loop
mov
idivb
or
enter
add
test
andb
jb
mov
or
adc
movsl
jb
popa
xchg
dec
sbb
add
in
jmp
outsl
cmc
arpl
xchg
adc
int3
aad
stos
shlb
int
or
int
push
push
jno
out
movsl
mov
jg
sub
mov
sbb
push
sbb
lods
xchg
out
jg
adc
int
clc
shr
pop
in
xchg
dec
mov
sbb
decl
xor
call
jp
mov
adc
cmpsl
mov
pusha
fisubl
cmc
adc
fld
dec
repz
push
pop
pop
mov
mov
dec
mov
dec
int
dec
repnz
sti
lds
xchg
ja
mov
ds
lahf
cmp
in
xchg
sbb
cmp
add
adc
adc
dec
jle
insb
ja
nop
stos
out
sub
mov
sub
movl
push
cmc
sbb
or
into
std
pop
mov
sbb
inc
fs
inc
adc
filds
mov
decb
mov
fisubs
lods
dec
xor
scas
adc
lock
or
lods
lods
dec
lret
xor
pop
out
or
sbb
adc
movsb
ja
xchg
out
pop
rol
dec
sbb
add
pop
sbb
test
mov
push
mov
push
in
aad
je
shll
call
xchg
cwtl
push
ja
inc
cld
lea
out
sub
cwtl
fwait
bound
nop
in
and
push
pop
inc
scas
or
aaa
jl
mov
xchg
jns
repz
lea
push
test
add
lahf
cmp
fisubs
dec
cmp
aaa
xchg
iret
mov
mov
push
jno
sub
out
test
push
icebp
cmp
into
sbb
ja
insl
imul
or
sahf
pop
scas
flds
in
lcall
inc
ffree
lret
movsb
jae
or
leave
lret
nop
in
jge
jg
jle
bound
insl
in
aaa
adcb
sti
sub
rorb
lock
or
lds
add
lea
cld
aas
mov
es
mov
adc
and
movsb
or
sti
xchg
inc
call
mov
jne
jge
test
iret
sbb
into
ja
in
popl
dec
cmp
pop
cmp
cmp
sbb
pop
aad
inc
dec
roll
mov
les
pop
jns
inc
addr16
lcall
int
mov
xchg
inc
popa
push
hlt
ret
addl
ret
sbb
test
or
jge
pop
mov
push
sar
inc
and
stc
dec
rclb
sub
out
enter
cltd
mov
lock
cmc
nop
fdivp
int
fstps
insb
pusha
add
aas
imul
pop
imul
arpl
xchg
es
stc
dec
mov
je
das
mov
adc
stos
xor
fidivrl
cmp
pop
repnz
orl
or
mov
lods
outsb
dec
mov
dec
lods
xlat
mov
pop
add
mov
inc
ds
dec
jo
push
icebp
popf
jmp
sub
mov
insb
test
scas
mov
fmuls
cmp
or
fcoms
jae
inc
push
in
sub
push
jge
pusha
add
push
arpl
movsl
in
rcl
aam
mov
xor
push
lea
jl
xchg
xchg
movsl
leave
call
mov
jmp
test
sbb
or
cmp
loopne
cmpsb
xchg
mov
int3
movb
mov
pop
aaa
push
insl
jp
mov
lret
ret
movsb
push
jg
in
in
and
call
push
dec
cs
xchg
mov
pop
gs
and
push
es
sbb
xchg
and
jne
imul
dec
in
adc
pusha
mov
insl
cmp
out
in
xor
dec
cwtl
pop
scas
jb
pop
fimull
fs
imul
cld
aad
fstps
daa
sub
mov
fcomi
mov
inc
popa
inc
sub
sbb
movsb
sbb
cld
test
cmp
inc
push
mov
pop
ret
jmp
jno
incl
add
cs
adc
jnp
jl
dec
push
je
mov
cld
inc
adc
mov
dec
mov
fwait
in
lds
addr16
adc
xor
in
insb
xor
in
aam
or
adc
cmp
mov
jg
je
sub
pop
fnstsw
jbe
lea
icebp
scas
sub
adc
and
mov
lret
jp
das
test
aam
cwtl
insl
add
xlat
sbb
add
cmpsb
dec
js
jae
cmp
shl
push
add
mov
fildll
es
cmpsl
mov
jbe
mov
mov
push
mov
push
pop
inc
inc
push
jo
jne
sbb
fbld
dec
cwtl
pusha
adc
ss
jnp
jo
out
jns
imul
call
add
shll
mov
inc
mov
sbb
shlb
dec
xchg
in
sbb
int3
insl
scas
sti
dec
push
jo
sti
mov
pop
notl
mov
iret
inc
ss
push
pushf
push
push
adc
gs
mov
mov
repz
.byte
.byte
aas
.byte
and
sbb
test
dec
pop
mov
aad
jns
xor
jg
inc
into
push
sti
sub
jl
fs
sbb
rcr
pop
cmp
in
and
jge
dec
sbb
mov
into
stc
jmp
adcb
es
mov
mov
xchg
fwait
sub
push
icebp
xor
push
dec
fmuls
push
shll
ljmp
arpl
xchg
add
movsl
cmp
jns
subb
outsb
in
sbb
mov
sub
xor
fdivrl
pop
sbb
jp
ja
out
xor
ja
pop
aas
pop
mov
cmp
sub
popf
xchg
leave
dec
ljmp
adc
or
xor
aad
adc
push
clc
push
subb
out
mov
clc
adc
rcrl
data16
inc
ljmp
xchg
sub
cmp
fdiv
jl
lcall
pmulhuw
mov
inc
shr
in
out
and
mov
cli
xchg
pusha
int
or
scas
pop
rcrl
adc
cmp
ja
lock
fwait
neg
lods
adc
push
cmp
stos
or
loop
or
xor
mov
addr16
mov
lret
imul
mov
je
sub
cmpsl
inc
add
rclb
push
dec
sub
dec
adc
cmpsl
jno
sub
test
nop
nop
push
scas
push
fwait
inc
xchg
mov
jge
push
lret
jae
push
dec
dec
aas
add
fdivs
xchg
sbb
and
xchg
sub
cmpsb
or
enter
mov
mov
negl
mov
std
addr16
fwait
mov
jae
out
xchg
ljmp
lahf
mov
or
lods
or
cli
adc
mov
mov
test
xorl
shll
jmp
inc
xchg
jo
rolb
or
addr16
xchg
loop
mov
bnd
ja
insl
aam
pop
inc
or
in
jge
and
sub
ja
cld
sahf
cli
sub
jne
pop
outsl
jmp
mov
mov
xor
or
or
test
xchg
scas
subl
and
sbb
adc
mov
add
xor
mov
cmp
xor
pop
shll
mov
jns
arpl
repz
inc
cmp
pop
adc
sbb
xlat
jg
add
testl
cmpsb
loopne
fs
push
sbb
dec
outsb
movsb
ret
add
dec
sbb
push
mov
pop
mov
cmp
mov
dec
scas
or
mov
sbb
adc
popa
ret
scas
fnstcw
scas
push
in
xchg
mov
loope
movsb
cmp
xchg
mov
lahf
stos
scas
repz
lds
pop
mov
psllw
sarb
jl
dec
jne
shl
mov
sti
imul
maxps
lahf
cmpsl
mov
stos
jne
push
insb
ja
movb
mov
test
loope
sbb
xchg
dec
inc
imul
stc
out
and
inc
orl
push
jae
fcompl
data16
push
stos
dec
push
out
mov
inc
mov
bound
jge
inc
push
xchg
cmp
push
mov
or
lods
and
jl
lock
pop
cmp
je
fmull
roll
mov
push
imul
mov
leave
data16
xchg
mov
test
leave
lods
mov
cld
pop
add
dec
nop
fidivrl
int
lea
mull
es
jbe
in
and
ljmp
arpl
adc
push
dec
nop
into
fdivrs
jmp
adc
ss
in
sbb
sbb
push
aad
pusha
fnstenv
dec
scas
pop
mov
cmp
fxch
hlt
mov
rcrb
cmpsb
push
sub
aaa
xor
mov
adc
xor
jmp
jp
dec
sahf
fildll
jmp
sub
mov
test
inc
inc
adc
out
mov
sti
lahf
sbb
addb
pause
popa
roll
es
inc
xchg
dec
lods
call
ljmp
fsubl
out
not
sti
sbb
fsts
mov
push
mov
in
xchg
pop
aas
icebp
outsb
xchg
jbe
les
jp
xor
and
insl
xchg
sub
ret
mov
adc
into
das
enter
roll
cltd
add
ljmp
jo
and
add
mov
test
jns
jbe
mov
jns
out
cmp
stos
mov
ficomps
pop
cmp
pushf
shlb
push
rcrl
push
mov
cltd
pusha
pop
in
xor
cwtl
xor
mov
or
divl
stc
sub
push
lcall
mov
jb
inc
das
movsl
fisttpl
dec
mov
fdivs
push
dec
mov
rcrb
xor
pop
imul
mov
in
jb
adc
sbb
adc
ds
aam
cwtl
lock
cmp
shl
stc
cltd
mull
push
aaa
mov
fisubl
push
mov
lret
roll
mov
sbb
andl
mov
add
ret
and
push
adc
imul
sarl
in
scas
pop
cmp
pop
lods
mov
notl
fiadds
add
pop
sti
sbb
sahf
aas
addr16
or
dec
inc
imull
inc
xchg
pop
imul
test
push
iret
xlat
push
and
mov
stos
fdiv
or
in
enter
mov
test
mov
test
cmp
aam
inc
mov
xchg
push
pop
adc
stos
lds
stc
add
sarl
mov
xchg
lods
push
out
mov
lods
je
xchg
pop
mov
ret
ret
jmp
ljmp
mov
lods
push
addr16
or
or
aaa
mov
cli
mov
into
or
test
inc
adc
push
xchg
jne
icebp
ret
imul
in
hlt
out
popa
rclb
addr16
out
push
iret
cs
xor
mov
mov
inc
cltd
fldl
pop
sub
out
sub
jo
bound
xlat
invd
pop
xchg
mov
mov
insl
inc
jb
push
popa
pop
sahf
pop
ret
imul
ret
push
dec
jae
mov
nop
adc
mov
shr
nop
push
push
scas
jl
inc
push
xor
std
and
jne
push
push
or
mov
cmp
fcmovu
arpl
push
mov
pop
ja
mov
loop
xor
iret
jmp
js
or
cwtl
jmp
repnz
int
dec
or
ja
cmc
insb
xor
sbb
fsubl
and
nop
ljmp
adc
mov
pop
mov
repz
or
movsl
movsl
mov
call
sbb
jb
mov
icebp
mov
inc
bnd
and
adc
sub
out
fsubp
es
fsubrs
and
mov
scas
movsb
xlat
clc
fwait
repz
mov
js
push
stos
sbb
into
imulb
xchg
inc
arpl
fcmovbe
cmpsb
sbb
popf
clc
xchg
jl
xor
fcmovnu
lahf
mov
les
add
cli
sbb
pop
cld
jge
cli
add
mov
dec
jge
add
push
cmpsb
or
fidivs
addr16
ficompl
sbb
hlt
sar
imul
mov
mov
mov
mov
jge
adc
jo
in
lods
in
rcl
push
add
and
adc
xchg
fidivrs
and
cli
bnd
xchg
ljmp
jae
adc
movsb
leave
call
fistpl
fiadds
adc
gs
mov
jno
test
es
and
clc
pop
xchg
dec
and
les
sub
xchg
std
out
rorl
js
fcmovb
jmp
cwtl
pop
cmp
daa
push
pop
mov
dec
xor
mov
sub
jp
add
xlat
and
or
add
in
xchg
movsl
jae
xchg
mov
or
hlt
jnp
push
sbb
dec
pop
lcall
out
dec
into
mov
cmp
adc
sbb
imul
iret
cld
push
add
adc
jb
pop
into
push
or
andb
outsb
divl
inc
aaa
cmp
push
aas
das
add
mov
imul
int
sbb
f2xm1
cmp
enter
lcall
mov
cmp
shr
sub
jne
or
je
int3
sub
inc
sub
movsb
mov
jge
cmpsb
xchg
sti
outsb
jecxz
xchg
mov
and
mov
mov
popf
jbe
mov
fistpll
incb
fidivrl
cmpsb
mov
scas
pop
mov
xchg
pusha
xor
jne
push
aas
pop
lods
addr16
adc
incl
jno
loop
and
out
sbb
jo
movsl
push
into
jb
aad
fldenv
inc
push
and
push
in
mov
add
sbb
data16
fildll
out
inc
push
popa
or
sub
xor
cli
insb
in
aas
repz
imul
sub
shlb
xor
inc
aad
in
shll
pop
je
and
mov
js
lea
rorl
push
inc
test
push
push
fistpll
or
and
ja
sbb
dec
data16
movsb
cmp
scas
mov
sub
adc
pushl
sbb
jae
cmp
nop
mov
push
adc
pop
je
or
out
pop
or
mov
mov
jle
js
insb
divl
aaa
inc
jmp
fsubl
pop
sbb
mov
push
cmp
fsubl
push
hlt
sub
mov
sbb
dec
in
fyl2x
sbb
xchg
inc
xchg
mov
in
call
insl
jns
les
xchg
call
popf
jge
mov
pop
mov
or
jnp
cmpl
add
adc
fisubs
add
and
sub
repnz
out
repnz
pop
into
jle
mov
push
and
push
outsl
jle
cmp
mov
xchg
aam
insl
xchg
push
push
dec
addr16
fisubrs
mov
roll
sub
add
imulb
xchg
les
sbb
pop
xchg
jae
pushf
imul
fxch
cltd
sub
cltd
pop
mov
pop
in
sbb
inc
mov
jns
and
fcmovnb
scas
int3
mov
mov
xor
xor
mov
test
add
jns
scas
ds
dec
pop
nop
test
sbb
fsts
lock
mull
pop
scas
mov
xchg
je
jg
cld
sarl
dec
or
outsl
subb
sub
cltd
jae
in
lret
sbbl
lods
and
xor
popf
xchg
mov
movsb
stos
pusha
push
ret
sbb
mov
cs
mov
fwait
mov
push
sub
push
fimull
outsl
jno
stos
sbb
idivl
or
or
jne
cmp
loope
mov
jl
mov
fbstp
inc
sbb
mov
push
mov
mov
push
lahf
ds
and
jnp
loop
xchg
dec
lret
mov
dec
lret
push
fs
leave
cmc
push
jnp
mov
mov
add
push
jo
mov
repnz
mov
aas
or
cmp
sub
jp
ret
cmp
test
bound
or
mov
jns
pop
mov
adc
nop
mov
lods
cltd
xchg
mov
jge
das
jmp
jecxz
add
loopne
inc
pop
push
or
dec
sub
loop
jmp
iret
int3
fstps
scas
or
aad
loop
jmp
xor
sbb
and
push
insl
loopne
enter
mov
or
sbb
mov
push
xchg
loop
into
mov
push
or
sti
popf
rcl
add
mov
test
sbb
and
xchg
adcl
inc
add
popf
aas
jmp
in
cmp
int3
xor
dec
je
dec
nop
or
pop
add
in
sbb
out
and
fisubrl
pop
shr
shl
jp
std
loop
push
sbb
mov
pop
add
fsub
jge
dec
jne
js
jne
aam
sbb
imul
test
dec
movsb
sbb
and
fisttps
mov
sbb
mov
push
mov
pop
adc
sahf
lds
or
inc
pop
xchg
xchg
mov
into
jle
shlb
push
les
jno
inc
ss
gs
or
push
xlat
sbb
mov
movsb
enter
or
int3
xor
pop
or
lea
sbb
push
push
mov
push
push
js
mov
sub
jb
rcrl
divl
pop
mov
cld
pop
lock
xor
divl
pop
sbb
inc
or
or
push
or
lahf
shll
adc
outsl
out
push
imul
inc
outsb
pop
xchg
inc
cmp
mov
loop
loope
ja
incb
pop
popa
clc
repnz
cmp
loop
pop
jb
fdivs
xor
fwait
push
test
ret
pop
mov
push
cmp
sbb
mov
inc
adcb
mov
lret
mov
shrb
sbb
xor
jae
xchg
sub
mov
cmp
mov
pop
cmp
xchg
xchg
es
cmp
mov
jge
loope
ss
xor
mov
jnp
push
mov
mov
sub
aad
mov
cmp
cmp
gs
pop
loope
lcall
lret
and
jno
mov
ret
roll
cmp
fisttpl
sbb
lahf
lock
insl
loopne
lahf
fucomip
lahf
loope
pusha
dec
sbb
fisttps
sub
in
outsb
sub
loopne
cmp
clc
mov
faddl
aad
sbb
jle
inc
clc
adc
add
cli
mov
xor
xchg
pop
test
sbb
std
test
lret
addl
push
and
std
lods
movsl
es
fadds
pop
adc
jno
sarl
xor
js
shl
out
mov
cmp
push
fwait
mov
outsb
out
xor
int3
mov
fdivr
sub
cli
insl
mov
push
insl
pop
adc
cs
push
dec
aad
pop
sti
jmp
dec
sbb
fnstsw
jo
pushf
mov
cmp
xchg
pop
jo
scas
dec
movsl
sub
pop
cmp
shlb
inc
or
sarb
dec
mov
mov
leave
das
mov
call
ret
repnz
pop
push
sbb
push
push
scas
jbe
dec
and
ret
mov
mov
push
imulb
in
push
lods
mov
sarb
rcrl
fcomps
cmc
sub
test
movsb
push
int
insb
ljmp
pushf
fimuls
push
sub
imul
push
mov
add
stos
mov
jo
in
scas
sub
jmp
out
mov
or
sbb
mov
dec
mov
test
jnp
adc
jp
mov
imul
out
in
je
lods
insb
mov
gs
xor
push
fcmovnu
add
out
push
aad
out
xchg
mov
or
repz
popf
jmp
or
or
aad
sbb
not
das
cmp
dec
cmp
cmpsl
add
mov
mov
and
cmp
out
jg
pop
sbb
movsl
jo
sub
int3
rolb
or
test
shlb
dec
test
cmc
shlb
je
xor
push
mov
mov
mov
push
gs
pushf
hlt
movsb
mov
dec
pop
gs
jecxz
jb
mov
mov
int
fcmovbe
ds
les
and
xor
adc
jecxz
dec
xchg
sbb
push
xchg
pop
xchg
cmp
cli
push
add
cmpsb
je
adcb
adc
xchg
int3
mov
and
fimull
aaa
lea
sarb
or
jno
jns
stc
adc
lds
inc
cmc
push
loopne
scas
out
mov
fcomp
mov
pusha
jp
inc
sub
xchg
nop
jge
test
add
xchg
inc
mov
inc
pop
sbb
pop
test
shlb
mov
cmp
xchg
test
mov
cltd
sbb
js
stc
cmp
xor
lahf
pop
pop
cld
imul
inc
out
mov
arpl
dec
shrl
dec
cmp
pop
pop
jg
sub
mov
cmc
test
daa
imul
push
setne
fs
addr16
mov
xor
outsl
adc
push
out
lret
dec
setge
xlat
adc
imul
fs
jp
sub
adc
add
sub
xorb
stos
mov
cmp
pop
repz
loop
sbb
xchg
int3
enter
xchg
rcr
mull
jl
cmp
out
mov
test
aam
xlat
pushf
lcall
push
pop
rorb
dec
add
and
cmp
repz
jo
and
outsl
jle
jecxz
jecxz
repz
lock
jno
stc
xchg
or
das
rol
call
jmp
push
scas
lods
mov
dec
inc
or
pop
mov
pop
cmc
and
out
test
pop
jecxz
add
in
enter
cli
dec
iret
test
jnp
push
dec
adc
in
xchg
adcl
mov
mov
sbb
xchg
mov
repz
shl
data16
aad
jae
xor
jge
sarl
or
and
clc
mov
lahf
mov
stos
inc
jo
jmp
cmp
xor
or
not
in
sub
dec
.byte
and
sbb
stos
sbbb
orb
fs
iret
sbb
fisubrs
or
add
movsb
fistps
mov
es
cmp
xchg
pop
or
pop
arpl
scas
mov
rolb
lock
adcb
stos
xchg
in
cwtl
push
std
repnz
aad
dec
mov
jbe
mov
daa
stos
mov
xchg
in
lret
in
mov
je
pop
es
outsl
scas
xor
sbb
mov
jne
sub
mov
jnp
test
jb
dec
es
orb
xor
nopl
and
jo
std
fists
sub
pop
rcll
jp
add
adc
aam
out
movsl
xor
mov
cwtl
push
or
ds
ret
cwtl
dec
cmp
adc
cltd
sub
or
repnz
in
or
xchg
mov
dec
xchg
lcall
in
call
sub
jmp
sbb
shll
xlat
inc
cmpsb
mov
dec
jae
mov
cmp
inc
repnz
mov
mov
nop
js
xor
lods
dec
in
sub
shlb
jns
xchg
fldcw
or
outsb
jae
pop
jae
and
ficoml
cmpsb
jnp
jg
fbld
dec
mov
es
add
inc
adc
repz
cmp
popf
or
lret
popa
mov
sbb
mov
ffree
jno
ja
shrl
pop
sahf
fidivs
cli
sti
gs
pop
andb
mov
and
leave
out
in
pop
cmp
jl
es
js
push
loopne
fdivrl
cmp
push
outsl
push
fadd
mov
stc
sahf
jno
or
jb
mov
xchg
sbb
test
sbb
lods
mov
js
and
or
jno
lock
cld
cmpsb
add
outsb
cmpsl
cmc
mov
nop
lcall
mov
shl
lret
les
mov
hlt
std
mov
sub
addr16
lret
cs
js
mov
jge
adc
jbe
cwtl
mov
dec
add
dec
add
testb
jmp
movsb
mov
mov
jnp,pn
or
clc
aas
mov
js
insb
sbb
xor
mov
shll
bound
roll
test
outsb
rcrb
aad
fs
icebp
dec
sub
pop
cmc
sbb
sbb
push
xchg
enter
pop
mov
add
add
push
std
or
or
and
loopne
cli
notb
push
cmp
mov
xor
pop
add
fistpl
hlt
adc
xor
fiadds
mov
shll
xchg
std
lret
dec
mov
mov
xchg
inc
mov
add
and
in
mov
scas
testb
aam
inc
cmc
mov
shlb
adc
std
in
and
or
jge
fs
pusha
sub
fs
enter
mov
andl
imul
fdivrs
adc
ja
xlat
neg
cmpsl
xlat
jne
jns
lret
cmpsb
cmc
push
mov
xor
cmp
testb
sub
dec
mov
repz
push
fstl
inc
sub
push
sahf
mov
lods
in
lret
test
add
cs
setl
test
dec
push
push
jle
pushf
xchg
sub
ja
mov
hlt
mov
push
je
imul
pop
fdivs
stos
xchg
xor
icebp
in
and
rorl
and
mov
sub
push
jo
push
rcl
and
sti
push
and
fucomip
push
fs
xchg
mov
das
int3
pop
notl
popf
test
cmp
aaa
inc
pop
stc
xchg
push
subl
fmulp
mov
pop
nop
push
sti
jge
fidivrs
push
jecxz
lcall
pop
inc
and
dec
xchg
mov
repz
loope
clc
sar
and
lock
mov
arpl
test
shl
je
adc
cmp
sarl
ss
in
mov
add
cmp
mov
std
cs
popf
hlt
jbe
test
sbb
cld
in
iret
stos
mov
pop
cmp
mov
mov
jno
adc
cwtl
int3
push
fisubl
and
jp
push
or
dec
nop
or
sti
repnz
xchg
mov
cmpsb
popa
dec
cli
stos
inc
lret
jg
mov
xchg
cmc
mov
xchg
push
repnz
mov
pusha
loope
push
in
sub
jns
push
inc
js
xchg
inc
xchg
xor
inc
ds
out
jo
aam
pusha
or
or
imul
fidivs
sbb
adc
mov
sub
push
add
in
and
lret
dec
add
pop
sbb
clc
mov
shl
hlt
movsl
test
push
mov
repz
pop
pop
push
lock
hlt
xchg
idivb
pop
mov
int3
cltd
iret
imul
fsubs
repz
xor
add
mov
push
push
hlt
gs
movsb
push
and
cmp
xchg
lcall
cmp
imul
sbb
pop
scas
xor
fcom
xor
sub
aas
mov
loopne
xor
sbb
jmp
adc
bound
mov
cli
pop
push
cltd
mov
lret
push
out
fistpl
roll
repnz
jno
lcall
shrl
xor
sub
jns
sub
cmp
jae
xchg
push
jmp
insb
or
fstps
cmp
pushf
test
roll
xchg
inc
or
push
out
outsl
mov
inc
loope
mov
mov
and
loope
test
idivb
xor
jp
pop
int
sub
mov
pop
iret
cld
mov
sbb
stc
jge
ret
cmp
std
inc
jge
into
movsb
cmp
mov
lock
add
xchg
mov
add
mov
sahf
arpl
xchg
into
jge
xchg
mov
das
cld
movsb
data16
ret
xor
flds
insl
xlat
xor
in
xchg
fwait
push
dec
fcomps
out
mov
jne
test
jge
lds
imul
mov
insl
or
ret
pushl
mov
xor
cmp
or
mov
test
adc
and
xor
imul
push
push
in
push
xchg
js
or
out
in
daa
orl
sbb
mov
xchg
inc
add
ds
repz
repnz
aaa
pop
sahf
xor
imul
xor
testb
mov
cli
push
loop
jg
cmp
mov
imul
cmp
decl
arpl
fs
push
mov
loop
adc
aad
xchg
gs
lea
pop
dec
mov
fimuls
scas
ljmp
add
jmp
mov
mov
pop
mov
and
add
push
sbb
sub
mulb
jae
add
jo
sub
subl
scas
ljmp
orb
dec
inc
cs
inc
sub
add
lds
pop
xchg
jmp
xchg
mov
mov
insb
adc
das
fsts
imul
pop
lret
int3
dec
dec
push
lock
dec
and
test
xor
push
dec
sbb
xchg
frstor
sbb
adc
mov
inc
jns
ret
add
and
popf
rcrl
mov
cmp
test
fucomip
mov
dec
jns
movsl
mov
ljmp
jg
lret
test
xorl
fsubl
cmpsb
ja
add
movsb
mov
or
fcmovnbe
jno
xchg
or
enter
outsb
adc
negl
jno
popa
cmp
add
data16
xor
and
push
mov
icebp
and
in
jnp
cmc
xchg
les
sbb
xchg
outsl
pusha
adc
push
sub
jmp
lea
xor
mov
sub
repnz
leave
and
jo
xor
push
push
mov
xor
movsb
inc
push
negb
test
call
sarl
popa
movsb
rcrb
les
lods
xchg
mov
adc
fldenv
test
addr16
lahf
hlt
sub
sbb
pushf
popa
in
pushf
cltd
mov
out
xchg
mov
cmp
mov
lret
xchg
mov
scas
test
xor
sbb
enter
mov
dec
mov
mov
fcoms
inc
push
push
pop
andb
mov
pop
inc
inc
out
call
in
lock
xchg
popf
xor
enter
mov
scas
push
sub
xor
loopne
fistps
mov
jmp
scas
lahf
test
mov
ja
xor
aas
outsb
subb
sub
dec
push
loopne
sbb
cmp
fdivrp
das
lods
dec
mov
and
inc
mov
sbb
sbb
fiadds
add
or
and
repz
cmp
out
shl
pop
push
xchg
iret
jns
and
fisttpl
jp
mov
inc
stc
inc
pop
or
cmc
xchg
inc
adc
or
setl
cwtl
add
out
imul
in
into
pop
nop
outsl
dec
dec
fcmovne
xchg
stc
adc
iret
fmull
fldl
call
cwtl
sbb
sbb
push
push
mov
lea
rorb
or
outsl
dec
cmpsl
scas
mov
sbb
fdivrl
loopne
pop
xor
dec
bnd
aas
adc
adc
ror
jmp
dec
xor
cltd
ror
out
ret
les
xchg
cltd
je
insb
notl
or
xor
jmp
mov
rol
loopne
dec
outsl
int
fdivrl
lea
xchg
push
and
les
push
dec
ret
mov
and
subb
sbb
sub
xchg
addb
adc
add
pusha
in
jne
test
push
stc
outsl
popf
jle,pn
repz
mov
add
int3
mov
inc
sbb
insl
rcll
sub
rorb
inc
outsl
sub
push
out
xor
mov
add
dec
sbb
mov
mov
add
sub
cmp
push
mov
icebp
push
iret
dec
subb
and
mov
add
iret
imul
popf
outsb
jecxz
popw
jl
repnz
cmp
cmp
inc
cmc
fs
push
daa
jge
nop
cmp
stos
mov
push
mov
test
outsl
out
popf
out
xor
push
ret
test
scas
jns
push
ss
adc
jg
xor
mov
lods
push
sbb
movsb
imul
pop
or
sub
dec
cmp
gs
pusha
lods
mov
pushf
mov
inc
test
inc
or
adc
fisttpll
xor
push
enter
cwtl
sahf
arpl
add
movb
dec
lock
stos
pop
sti
xchg
test
stos
cwtl
ds
dec
cmp
les
push
cmpsl
jmp
scas
imul
arpl
daa
jecxz
cmp
push
or
aam
in
inc
fcoms
pop
fmuls
mov
jbe
xor
sub
mov
cmp
sbb
push
push
cmc
mov
and
imulb
loope
pop
std
cli
mov
and
xchg
add
mov
in
and
pop
and
push
stos
into
ret
sbb
jle
cli
cld
popf
into
inc
stos
add
jg
sahf
scas
sub
ret
xor
inc
mov
cli
fidivs
mov
mov
jno
and
movsb
fs
bound
xchg
test
leave
pop
xor
push
fucomi
push
jnp
pop
push
lahf
mov
cmpsb
cmp
ja
xor
lret
pop
mov
push
es
ficompl
bswap
iret
inc
stc
into
jmp
std
jle
out
aaa
xchg
mov
out
lock
mov
mov
mov
mov
cmp
sub
sub
push
jecxz
xlat
push
jl
mov
in
cmp
mov
and
dec
push
mov
ficomps
test
add
outsl
xchg
leave
arpl
scas
pop
jne
jmp
lods
in
andb
mov
call
cli
lock
mov
mov
mov
lds
mov
outsl
inc
pop
sbb
scas
or
mov
shl
mov
add
mov
mov
mov
aam
sub
lea
cmp
push
push
or
insl
dec
test
jmp
out
cltd
adc
test
fcoms
divb
add
add
subl
ljmp
pop
in
pop
jns
sub
or
mov
in
adc
movsl
mov
jg
es
mov
jo
cltd
cwtl
or
call
jnp
enter
pushf
imulb
cmp
cltd
pop
in
addr16
xlat
mov
in
insl
or
sti
mov
repnz
adc
jno
lods
jmp
sbb
jnp
cmp
fstpt
aad
inc
adc
arpl
call
lock
call
add
enter
shl
pop
and
fwait
sahf
fidivrl
insl
push
out
test
movsb
addl
sti
and
mov
sbb
inc
and
pop
scas
shr
pop
mov
jp
nop
cmpl
add
mov
movsl
inc
xchg
sbb
sub
and
leave
mov
fcmovnbe
jp
add
adc
icebp
add
jmp
cmpb
repz
cmc
inc
cltd
lods
clc
into
xorb
repnz
xlat
sub
inc
mov
je
push
int
dec
aad
xor
bound
jnp
imul
mov
or
mov
xorb
clc
insb
mov
in
dec
xor
cltd
or
das
xchg
dec
jp
mov
cmpsb
inc
out
jecxz
mov
mov
push
stos
shll
fs
lahf
test
adc
setb
jle
lock
roll
jp
push
push
adc
sbb
adc
mov
cwtl
lods
dec
iret
pop
add
add
xor
fimuls
mov
mov
int3
popf
inc
jns
adc
cld
pop
add
inc
mov
decl
sub
xchg
jbe
push
mov
jns
sbb
jmp
sbb
xchg
or
sub
inc
leave
ja
xchg
adc
mov
push
inc
scas
push
adc
in
pop
mov
or
int
rep
push
insl
inc
ja
filds
dec
jb
or
popf
bound
fwait
inc
cmp
pusha
push
sub
and
call
outsb
inc
es
mov
xchg
std
cli
int3
dec
test
or
xchg
repnz
in
adc
mov
stc
push
xor
dec
dec
jnp
or
gs
xchg
dec
mov
fdivl
and
ret
add
add
insb
int3
mull
jle
mov
shlb
iret
xchg
std
push
and
ficomps
popf
ljmp
push
push
test
pop
aaa
cmp
rorl
out
mov
jne
mov
adc
pop
aad
or
std
les
ja
sbb
cli
sbb
mov
jb
dec
push
cmpb
and
mov
push
jl
jge
lock
push
or
mov
push
stc
and
aas
xor
mov
push
dec
loope
mov
pop
jo
stos
fcoms
es
inc
stos
cli
inc
jno
mov
into
das
data16
scas
sti
loop
xor
out
cmpsl
mov
push
popa
pop
jl
jecxz
mov
mov
in
aas
adc
bound
aas
xor
sbb
ja
mov
ds
xor
jg
hlt
push
outsl
push
sbb
pushf
jge
aam
xlat
jbe
jle
filds
stos
repnz
repz
inc
fldl
fcoms
popa
and
movsl
cwtl
jb
sahf
fimuls
dec
pop
push
jp
and
push
lock
in
aam
mov
cmp
leave
and
aad
scas
arpl
outsl
mov
or
inc
mov
hlt
dec
adcl
sahf
imul
cmpsl
sub
jb
out
mov
mov
roll
orl
ss
ljmp
fmuls
pop
pop
ljmp
or
pop
outsb
jno
repz
aaa
imul
ds
sub
mov
xchg
mov
mov
xchg
sbb
jns
pushf
roll
sub
int
jbe
in
xlat
xor
jp
xlat
mov
out
xchg
int3
and
or
inc
lret
push
rclb
cmpsb
arpl
int3
xchg
pop
jmp
push
ja
and
repnz
dec
xchg
push
inc
test
jns
ja
jle
push
es
mov
lahf
iret
pop
pop
ja
aad
aaa
dec
lret
outsb
push
pop
push
xor
jbe
arpl
enter
out
dec
xlat
mov
ficomps
sub
ds
sub
lahf
mov
mov
xor
fstpt
sbbl
lock
cwtl
add
xchg
daa
cmp
push
cmp
mov
sahf
xor
cmpsb
js
jns
adc
sub
out
int3
xchg
sarl
push
mov
mov
out
cmp
pusha
movl
mov
lods
adc
mov
jo
xchg
xchg
ds
and
lds
pushf
ss
add
daa
jbe
out
push
jle
rorb
call
inc
jge
lret
jge
hlt
bound
ss
roll
pop
ja
adc
sti
mov
mov
bound
push
jmp
roll
inc
jmp
rorl
mov
dec
in
fistpll
xor
xor
or
xor
cwtl
adc
in
cli
ror
nop
push
je
mov
sahf
sub
mov
aam
add
popf
or
xchg
gs
test
jmp
aas
add
test
inc
jp
lock
and
iret
ret
ljmp
icebp
jp
inc
fdivr
fstpl
rorl
pop
in
mov
fst
fisttps
mov
dec
rcll
pop
jo
mov
mov
xchg
xchg
dec
dec
mov
sub
psllq
shlb
pop
add
jmp
xor
dec
inc
or
pop
imul
sbb
pop
loop
cmp
ljmp
stos
add
sbb
cmpsb
push
stos
into
in
lret
bound
sbb
xchg
insl
fisttpll
push
fs
jnp
pushf
cmp
aaa
jb
mov
into
popl
xor
cmc
sub
in
xchg
in
push
aam
push
jmp
es
xor
ret
mov
push
and
adc
push
or
dec
arpl
push
add
aad
rcrl
out
aaa
dec
imul
sbb
in
ror
inc
lds
jecxz
xchg
push
and
cld
push
cwtl
shl
add
fstps
or
ret
cmp
das
inc
out
or
jp
add
jb
jle
xchg
cmp
std
mov
dec
pop
mov
and
jl
inc
out
jnp
add
cs
call
sbb
pop
add
mov
std
lea
adc
push
fdivrl
fldpi
xor
lcall
mov
mov
divb
adc
pop
jp
mov
adc
repz
cs
lcall
test
mov
mov
push
test
and
and
daa
push
mov
jb
dec
pusha
lahf
addr16
sub
mov
add
lret
fldenv
cmp
loope
fldt
inc
stc
push
aas
pop
inc
mov
in
and
outsl
pushf
cmpsl
inc
out
aas
jae
add
out
mov
jmp
jp
and
mov
cmpb
add
pop
int
enter
or
jno
fdivr
pop
and
mov
in
notb
out
dec
sub
mov
push
sub
arpl
mov
shrb
sbb
sub
bnd
in
sub
ds
add
ja
lcall
pop
dec
leave
mov
xchg
movsl
ret
das
xchg
xchg
mov
push
sbb
pop
sub
fucomi
cmpsb
ja
outsl
int3
sbb
inc
mul
sbb
and
cli
ss
arpl
push
jno
ret
movsl
add
mov
lret
test
adc
lods
cmpsb
loope
shl
sbb
imul
pop
pop
out
lods
outsl
movsl
push
cmp
fs
sub
adc
out
lods
sub
dec
loopne
sub
pop
inc
xchg
xchg
fistpl
and
mov
ss
pop
sbb
pop
pushf
sbb
add
ds
fnstenv
aas
xchg
push
repnz
daa
bound
sub
or
jno
out
ret
jb
xchg
dec
lock
add
dec
int
pop
test
mov
jo
into
js
aas
dec
aam
test
cld
pushf
out
out
sbb
and
fadds
scas
adcb
stos
cmpsb
cmp
xchg
popa
mov
mov
shll
subb
cmp
fcompl
pop
sar
or
sub
push
and
cmpb
lret
jno
roll
pushl
shlb
add
int
and
mov
cmp
inc
or
out
xchg
fiaddl
arpl
clc
cwtl
xor
pop
xchg
pusha
or
adc
add
sub
sahf
pop
cmc
xor
dec
pop
sbb
movsl
jno
push
sbb
push
fucomip
xchg
mov
sub
mov
inc
in
jecxz
shl
je
jp
dec
xor
push
inc
or
push
cmc
gs
inc
xchg
lea
and
out
push
inc
jae
and
xlat
insb
xlat
adc
inc
sub
ret
int3
hlt
jbe
inc
push
dec
push
shll
sbb
call
das
out
into
call
push
inc
lods
pushf
ret
xorl
inc
xchg
and
mov
iret
sahf
mov
nop
jl
cli
xchg
clc
or
pop
sbb
xor
in
ret
jne
push
fs
or
pop
mov
push
inc
ja
dec
pop
sbb
push
sub
inc
outsb
mov
pop
xchg
lcall
mov
sub
insl
fidivs
xchg
out
insl
push
lea
ret
xchg
mov
inc
and
std
add
ss
mov
js
push
xor
jae
add
loope
movsb
pop
movl
out
jg
sti
cmc
pop
xchg
fbstp
and
pushf
jno
or
pop
neg
and
pop
into
jg
enter
imull
sub
push
std
std
shrb
popf
gs
fnstcw
decb
movl
add
mov
dec
cmpl
iret
xor
add
in
out
xchg
int
xor
fstpt
outsb
jmp
mov
ds
mov
call
mov
hlt
js
add
clc
and
in
mov
fsubrs
sub
add
jp
lret
cld
fcmovb
insb
clc
mov
lret
in
idivb
push
std
imul
call
push
pop
jg
pop
mov
cmp
shll
pop
push
dec
lcall
loopne
and
sti
mov
add
insl
sbb
test
bound
xchg
dec
add
out
jmp
in
jmp
inc
add
or
pop
insb
not
dec
inc
std
inc
das
int3
leave
iret
fnstsw
inc
mov
sbb
sub
mov
test
in
out
jg
dec
loop
xchg
mov
test
mov
push
xor
loope
cmpb
sub
sbb
call
pop
shrl
mov
add
jecxz
movsl
mov
stos
loopne
icebp
mov
sbb
clc
and
inc
mov
stc
mov
shll
psadbw
fstl
call
jp
mov
lcall
imul
mov
push
addr16
xor
cmp
jo
out
fwait
clc
add
or
push
pop
xlat
fstps
sub
das
cmc
jmp
fists
cmp
ret
inc
ret
inc
dec
jo
jle
imull
lahf
cmp
pop
cmp
mov
jo
rorb
je
in
jno
loope
mov
hlt
stc
push
inc
xor
stos
out
jecxz
add
mov
aas
xchg
in
test
dec
add
jge
adc
arpl
roll
pop
and
dec
scas
or
xchg
loop
jne
outsl
inc
lds
sub
mov
mov
add
aas
push
dec
repnz
mov
xchg
sub
xor
cli
push
mov
or
outsl
sbb
jle
outsb
inc
and
dec
cwtl
and
sarl
stos
jns
lea
mov
jns
or
scas
fisttpll
mov
out
stos
jmp
ljmp
push
lods
push
inc
pop
push
outsl
push
sarl
scas
add
jp
fdivrl
push
sbbl
into
enter
pop
add
mov
movsl
rorb
imul
cmc
jl
mov
or
inc
in
stc
outsb
stos
std
jl
fnstsw
fs
jbe
jno
ljmp
jmp
int3
push
mov
xchg
jno
mov
add
push
dec
jecxz
dec
cmc
push
rol
xchg
sbb
ret
push
pushf
out
repnz
sub
mov
xor
popa
dec
movsl
pop
loopne
push
mov
movsb
cmp
sbb
repz
adc
in
sbb
lcall
pop
enter
insl
sbb
lahf
mov
inc
jle
or
std
mov
push
push
mov
xchg
mov
cmpsl
sar
in
cwtl
stos
sub
test
data16
pusha
cld
ds
repnz
xor
out
and
sub
enter
lods
popa
jge
std
rorl
sti
inc
jge
popa
lea
push
stos
cmp
imul
lea
sub
mov
push
gs
idivb
xabort
push
jb
mov
mov
insl
push
adc
sar
pop
add
sbb
sub
loopne
cmp
and
adc
insb
loopne
xor
pop
mov
inc
add
iret
inc
cmpsb
adc
jbe
outsl
in
pop
frstor
addl
cmp
mov
inc
jbe
bound
pusha
adc
cmp
push
cwtl
xchg
xor
push
dec
and
push
mov
pmulhuw
clc
dec
adc
pop
lahf
aas
loop
movsl
xchg
xchg
arpl
in
jnp
dec
cld
in
push
stc
arpl
es
jae
or
push
push
loope
push
pop
fsubrp
push
mov
sub
jno
loope
rcl
aam
dec
and
xlat
mov
lock
sub
jne
std
or
xchg
xchg
jne
xor
xchg
insl
push
out
insl
inc
out
push
fldt
lds
cmp
jnp
pop
push
cmp
mov
and
sahf
movsl
xor
mov
push
mov
dec
push
ret
mov
xchg
jecxz
mov
movsb
push
xchg
movsb
mov
inc
lcall
dec
mov
push
fsts
int3
fdivs
lret
or
leave
ret
cmpsb
pusha
xor
inc
xchg
cli
orb
sub
or
xchg
ja
ret
mov
adc
sub
aam
cmp
jns
add
int3
pusha
js
xchg
das
rcrb
subl
xchg
fs
push
out
cmp
in
ja
insb
rorb
mov
imul
and
ja
ret
ret
arpl
mov
xchg
aad
cltd
shr
dec
mov
std
add
push
jle
imul
inc
arpl
push
sbb
xor
sub
fst
push
xor
xor
dec
inc
jae
add
in
jae
loope
push
sbb
mov
imul
inc
mov
leave
push
push
shl
shlb
jecxz
scas
test
xchg
loope
mov
in
imul
mov
push
outsb
int
push
fsubrs
xor
jo
or
in
out
sub
push
xor
push
lea
push
stc
pop
pop
inc
insl
lods
in
test
mov
jecxz
pop
mov
arpl
fidivl
outsb
out
push
adc
lock
sub
scas
jp
enter
cwtl
mov
iret
aas
cmpsb
jae
xchg
xor
dec
push
rorl
pop
dec
cmc
sar
xor
dec
jno
dec
icebp
lea
lds
cmpb
scas
ds
sub
std
sub
jmp
cmp
sub
out
mov
outsb
rclb
int3
jbe
lock
outsl
add
outsl
jecxz
cmpsb
repz
insb
cli
stos
ds
mov
and
out
adc
and
mov
adc
cwtl
lret
cmc
push
or
push
push
xchg
pop
outsb
dec
aaa
les
add
shrl
mov
fcmovnbe
push
xor
inc
mov
push
sub
xor
mov
dec
hlt
sbb
mov
cmpsl
lods
pop
adc
or
mov
mov
fs
or
push
sub
movsb
cli
cmc
adc
pop
iret
cs
pop
jle
jl
repz
sbb
cmp
push
cmp
sbb
xchg
jno
mov
mov
dec
and
ss
inc
inc
pushf
mov
daa
lahf
jge
adc
popa
shl
nop
or
repnz
push
xchg
lret
jns
lods
push
gs
mov
jo
push
inc
sub
sti
mov
in
in
mov
or
inc
mov
pop
xchg
mov
mov
mov
orb
mov
stos
jmp
jg
or
sarb
lcall
pusha
int
xor
lahf
inc
jp
outsb
or
xor
call
dec
xchg
repz
sahf
mov
mov
push
das
shr
cmp
fildll
or
dec
clc
pop
clc
fwait
mov
addr16
les
and
jge
xchg
lds
call
mov
rorl
mov
mov
in
outsb
in
jnp
insl
movsb
mov
ja
jbe
hlt
adc
leave
test
arpl
push
sbb
testb
jmp
mov
cmpsb
stos
pop
xchg
xlat
dec
call
lcall
push
fnstenv
test
lods
jb
jnp
add
mov
jns
popa
inc
int3
cmp
push
cmp
flds
cmp
ret
mov
adc
sub
push
test
int3
xorl
dec
adc
pop
inc
jmp
and
out
cli
pop
sbb
out
out
push
pop
fdivl
xchg
lock
mov
addr16
adc
xor
jle
xchg
pop
xchg
cmpsl
jb
cmp
int3
push
mov
mov
mov
push
push
jns
cmc
call
push
mov
test
icebp
lret
sbb
movsl
and
jb
push
sbb
loope
sub
push
xor
add
or
pushf
sahf
xchg
jg
push
sub
stos
cmpsb
enter
ja
imul
fimull
cmp
out
jb
arpl
test
sti
jecxz
cwtl
xlat
rcrb
mov
mov
inc
cld
jae
pop
out
cmp
sub
push
nop
xchg
out
das
out
and
aam
gs
dec
pop
neg
pop
in
repnz
fmull
test
push
pop
aaa
xchg
adc
jb,pn
rclb
sbb
repz
or
and
inc
daa
fs
fdivl
inc
push
sub
inc
arpl
jb
nop
dec
push
stc
test
ds
inc
xchg
fs
test
std
cmp
imull
fisubl
mov
jl
popa
lods
mov
call
frstor
cltd
mov
pop
loop
fwait
push
jbe
mov
pop
xchg
and
or
rcrb
fildll
cmpsl
adc
fisttpll
xchg
movsl
xor
lcall
mov
and
outsb
iret
cmpb
dec
lock
ljmp
mov
icebp
pop
out
testl
out
jmp
idivb
inc
add
mov
jge
in
xor
decb
jb
js
cmpsb
fstpl
pop
mov
pop
xor
sbb
push
inc
fisubs
test
cmp
movsl
sbb
mov
lret
bound
xchg
add
xchg
ret
out
lock
mov
xchg
and
icebp
cmp
mov
ja
popa
sub
movsb
les
repz
sub
sub
lcall
lret
mov
jp
sub
push
add
nop
lock
push
loope
fnstsw
add
cmp
mov
mov
sbb
jge
push
jnp
divb
sbb
push
sbb
in
fwait
xchg
sub
cmp
orb
sarb
ljmp
aaa
aam
cli
pop
lret
push
iret
mov
jae
and
mov
and
xchg
cmpsb
add
out
test
pop
outsb
push
dec
imul
data16
xchg
xor
fldlg2
repnz
dec
nop
shll
cmp
pop
stos
push
daa
mov
fdivr
pop
mov
push
sub
pushf
dec
sbb
shll
leave
mov
dec
shll
push
cmp
jbe
push
inc
insl
orb
mov
mov
shlb
test
testl
mov
jp
fcoms
sbb
mov
xchg
lcall
cli
lods
stos
mov
in
push
inc
call
inc
push
sub
outsb
and
push
les
imul
and
in
inc
daa
enter
loopne
xor
cld
xor
and
xlat
mov
ja
loop
cmpsl
pop
jl
mov
ret
in
lods
fsub
pusha
mov
sbb
mov
aaa
pop
and
jnp
sahf
jns
scas
in
lea
push
sahf
jg
test
fs
int3
xchg
jg
cltd
insl
xor
cmc
adc
adc
cwtl
sub
jb
xchg
or
idiv
jl
jmp
mov
faddl
jne
pop
add
aad
in
mov
popf
push
out
push
mov
or
dec
mov
mov
cvtpi2ps
in
pop
or
mov
dec
xlat
or
cmpsb
dec
sahf
fs
es
dec
cltd
arpl
gs
lods
imul
xor
std
mov
inc
in
rol
and
imul
xchg
popa
cmp
jl
fwait
mov
pop
mov
and
cmp
cmpsb
lds
pushl
dec
cmp
movsb
daa
ret
cld
pop
jmp
mov
outsl
clc
cli
jl
jl
inc
or
fisubs
mov
xor
out
cmp
xchg
out
aas
in
xchg
sti
scas
lret
iret
sarl
push
loope
repnz
pop
mov
rcll
and
lods
in
in
pop
xchg
mov
repz
aaa
mov
popa
push
repz
pop
lea
dec
lret
popa
clc
push
xchg
cltd
stos
mov
dec
ficoml
js
fmuls
mov
pop
in
jb
popf
pop
outsl
cmp
dec
sub
lea
inc
je
cs
push
lcall
xchg
xor
loope
xchg
out
aam
cmp
ds
cmp
test
leave
leave
or
mov
xor
out
out
les
dec
fists
ror
add
xorl
pop
lret
push
push
jl
lods
mov
cs
fcompl
sbb
push
xor
sti
or
or
cmp
xchg
lcall
nop
imul
sub
jmp
or
or
dec
pop
mov
adcl
dec
push
mov
xor
or
adc
fwait
mov
mov
enter
lds
fiadds
insb
cmp
stos
dec
push
fsubl
sbb
mov
jecxz
jmp
mul
dec
popa
inc
loopne
pop
divb
cmp
push
fists
or
lahf
notb
push
imul
lcall
lds
mov
inc
icebp
lahf
or
dec
pop
mov
mov
aaa
or
mov
je
push
fadds
cmp
cltd
mov
push
inc
insb
add
xor
adc
out
jle
sahf
and
mov
imul
jmp
ss
mov
gs
jnp,pt
inc
mov
lea
stc
sub
fcmovnbe
scas
insb
push
xchg
mov
xchg
sbb
push
cmpsb
jno
cli
stc
xlat
in
pop
xor
aam
lea
mov
adc
jecxz
sub
mov
icebp
push
test
mov
leave
xlat
mov
mov
jnp
std
push
inc
cld
in
into
sub
dec
xchg
dec
cmpsb
adc
push
mov
lret
inc
ds
in
dec
out
jne
adc
adc
sub
in
push
pop
gs
les
js
orb
rcll
push
daa
loop
sar
push
jne
sub
shrd
loopne
cmp
outsb
rcrb
in
push
aam
aam
mov
jnp
icebp
jmp
xchg
or
hlt
data16
cs
mov
xchg
ret
inc
orb
insl
jb
push
js
test
bound
push
xchg
sti
mov
arpl
lods
add
dec
ljmp
lret
mov
loop
sub
pop
popa
sahf
loop
out
lock
add
inc
imul
sbb
sbb
out
cmp
loop
aam
xchg
test
stos
divl
mov
mov
rorb
movsl
iret
leave
dec
insb
ret
bound
and
inc
movsb
test
or
arpl
lods
rcl
lea
lea
adc
sti
mov
sti
cmp
pop
mov
jns
leave
push
je
test
add
jp
jo
pop
pop
sub
stos
sbb
cmp
insb
pop
mov
flds
out
data16
test
or
sub
int3
and
mov
ja
jp
and
jb
mov
fdivrs
mov
fwait
sub
xchg
inc
xchg
jo
fwait
mov
mov
jae
xor
xchg
jl
mov
mov
test
in
icebp
fsubrs
sbb
or
or
jo
jo
xor
ja
clc
fnstsw
test
insl
mov
pop
aad
inc
cmp
mov
xor
fwait
shlb
neg
inc
push
push
cmp
ret
data16
push
ljmp
dec
xor
jne
cld
mov
das
pop
xchg
aas
pop
lret
jl
jmp
loop
and
xchg
dec
add
push
mov
mov
mov
scas
shl
inc
pop
mov
lea
out
lret
xor
or
mov
outsl
jnp
sub
mov
call
aaa
imul
fdivrl
lds
adc
leave
inc
popa
mov
loope
in
insb
jns
sti
jle
aad
sub
leave
pop
xchg
test
xchg
push
decb
pop
daa
enter
pop
xor
lret
iret
bound
gs
pop
mov
pop
mov
inc
sbb
push
imul
inc
lods
add
jl
je
inc
dec
fdivrs
xchg
ds
stos
das
insl
data16
shrb
mov
pop
cmp
jl
loop
je
cmpsb
mov
xorl
inc
cmp
dec
mov
pop
xor
loopne
or
imul
ljmp
or
push
aaa
fnsave
popa
loope
lock
xchg
adc
xchg
jnp
fwait
stos
cmp
inc
and
shr
sub
mov
inc
repnz
push
int3
popf
inc
mov
int3
rcll
out
adc
emms
pop
inc
data16
jl
sbb
sbb
lahf
mov
scas
lods
loopne
xchg
test
jg
pop
push
pop
pop
stc
xor
in
or
jae
sub
rclb
repz
sbbl
mov
je
inc
dec
mov
or
lods
lcall
lock
lds
ljmp
push
inc
inc
pusha
fimull
cmp
movsl
adc
inc
dec
jecxz
punpckhbw
sbb
data16
nop
bound
xchg
nop
lahf
das
subb
mov
shrl
shrb
sarb
test
daa
cs
es
xor
test
inc
mov
add
cs
sahf
das
push
sbb
sarl
push
popl
jle
xchg
mov
ss
mov
movsb
out
jnp
mov
nop
inc
xchg
push
and
test
repz
rolb
outsb
add
shll
sbb
call
movsb
movb
movb
fdivs
fidivrs
cli
add
dec
outsl
loop
test
mov
and
xchg
popa
sub
jnp
sub
rcl
fmull
hlt
pop
dec
pop
ds
addr16
out
adc
inc
xor
jmp
or
dec
pusha
fsubrs
aad
fcomps
xchg
jmp
mov
jno
pop
or
xchg
lahf
arpl
jg
mov
jecxz
pop
mov
sub
dec
and
xchg
mov
sbb
xchg
mov
push
movsb
sbb
lods
in
lret
popa
lret
int3
cwtl
push
adc
mov
jns
xor
mov
jmp
pop
dec
insl
add
or
mov
cmp
sbb
fiadds
lock
pcmpeqb
dec
call
fldcw
fcomi
pop
dec
mov
out
icebp
lea
aad
in
mov
jb
xor
sbb
je
outsl
and
lods
lret
out
mov
mov
jp
movhps
outsb
adc
jbe
ss
xchg
and
hlt
pop
mov
mov
mov
xchg
subb
xorb
cld
fnsave
iret
mov
dec
in
sahf
xchg
out
lods
ds
nop
push
adc
scas
lret
dec
and
lahf
sub
pop
inc
setae
cs
sub
int
sub
aam
ficoml
push
and
pop
call
mov
movsl
les
ss
add
inc
push
mov
fwait
jecxz
push
stos
inc
test
xor
or
cmp
jle
into
adc
hlt
ss
cmp
cld
dec
sub
inc
repz
mov
mov
and
sahf
dec
loope
pop
xchg
rcl
clc
xor
mov
outsl
cltd
or
add
fmuls
leave
popf
inc
sti
scas
mov
aad
int3
loope
ror
xchg
jne
mov
iret
test
push
dec
xor
jge
push
out
out
add
cs
gs
scas
lcall
aaa
jmp
xchg
mov
pop
jecxz
inc
mov
sbb
in
fs
lea
iret
sub
testb
fdivs
inc
cmp
and
test
shrb
pop
dec
dec
cmp
mov
xchg
cmc
mov
sahf
inc
and
jne
adc
or
movsl
push
jg
xor
adc
out
cmpsb
fildl
es
jo
mov
cltd
rcl
lcall
call
adc
sbb
mov
call
stos
stos
les
and
icebp
cld
and
mov
xor
jecxz
in
jl
xchg
pslld
cmc
sbb
xor
rcrb
es
fsubl
push
adc
ds
or
sbb
push
pop
das
lcall
mov
lods
and
outsb
jno
out
je
sub
xchg
dec
outsl
lea
lods
fstpt
jo
push
and
popa
fcmovnb
lds
shl
pop
jbe
dec
jae
mov
lahf
test
es
pop
in
push
call
dec
sub
adc
sub
daa
addr16
test
mov
jnp
sub
jne
inc
or
hlt
mov
add
inc
std
inc
xor
xchg
test
xchg
vpshlw
mov
les
pop
inc
loopne
arpl
adc
mov
test
hlt
sbb
inc
cld
push
pop
xchg
xor
mov
pop
sub
lea
xchg
jno
jl
dec
push
pop
es
xor
sub
stc
add
pop
inc
and
sbb
add
jno
out
xchg
pop
pop
xchg
add
sbb
stc
cld
pop
or
clc
add
leave
decb
jl
mov
and
cmp
jno
adc
sub
fwait
mov
inc
push
adc
pop
sub
cmp
icebp
pop
mov
or
repz
cld
pop
jne
jbe
sti
fsubl
push
pop
fstps
inc
pusha
pop
mov
pop
icebp
adc
jmp
xlat
imul
xchg
test
fs
jbe
mov
mov
push
lret
out
xor
and
dec
dec
cmp
mov
in
inc
ret
xor
data16
lds
lods
and
mov
test
add
adc
and
loope
pop
mov
int3
dec
xor
pop
in
mov
mull
into
mov
jmp
ja
sub
push
icebp
sbb
test
mov
movsb
inc
push
es
cmp
cltd
mov
cwtl
fs
popf
dec
lahf
leave
add
pop
mov
jle
aaa
sub
fs
pop
mov
push
and
jmp
fsubl
mov
enter
or
xchg
int
das
jecxz
negl
jge
mov
and
xor
fisubl
mov
call
stc
mov
pop
fcmovnb
push
mov
sub
jno
push
movsb
sbb
enter
mov
pop
jnp
fldl
mov
mov
data16
in
or
jl
incb
mov
xchg
in
out
push
push
sbbl
xor
or
and
dec
inc
les
and
sahf
daa
rorb
daa
stos
fs
lret
xchg
mov
je
test
cmp
add
dec
mov
sahf
mov
cmc
xchg
sti
int3
in
xchg
jae
xor
push
mov
pop
ljmp
in
xchg
je
push
pusha
out
cmpsl
loope
xor
jae
xchg
cmpsb
inc
xchg
push
int3
pop
jge
push
cmp
jo
jp
jp
bound
test
inc
add
push
in
scas
fbstp
loop
xchg
inc
lahf
sub
adc
shlb
dec
cmp
movsl
jbe
rcl
and
and
sbb
inc
in
push
push
aam
je
stc
ja
push
cltd
addb
or
aad
lea
jmp
push
jmp
jle
or
pop
add
or
ljmp
adc
push
push
fwait
push
and
push
sbb
aaa
or
fsubrl
mov
xchg
dec
push
and
mov
out
repz
and
test
mov
and
cmp
sar
mov
test
shlb
mov
xchg
lret
adc
loopne
xchg
push
lea
test
xchg
shrb
or
adc
dec
stos
push
scas
and
push
sbb
mov
mov
cltd
cltd
and
push
sbb
inc
adc
js
js
pop
jo
lret
xchg
aas
ja
ds
jmp
xchg
shll
into
test
subb
mov
cmp
lods
add
aas
insb
inc
stos
lcall
jecxz
pop
xor
shlb
cmp
mov
ja
and
call
adc
cmpsl
cmc
sub
lret
jnp
adc
mov
aad
add
cli
repz
push
xlat
pop
jg
push
lcall
jo
fwait
mov
push
leave
sub
je
and
mov
lods
mov
lock
out
push
xor
les
popf
stc
jecxz
adc
dec
int
or
jae
mov
sbb
dec
xor
dec
pop
outsb
leave
fdivrl
mov
mov
dec
lods
inc
push
jbe
mov
jns
mov
rcrl
push
cs
mov
sbbb
lds
icebp
out
sbbb
ljmp
dec
mov
popa
shrl
dec
das
fidivrl
fmuls
push
aad
jp
dec
ret
lds
mov
in
adc
stos
dec
mov
outsl
and
scas
pop
dec
add
js
nop
clc
outsb
mov
pop
jp
fwait
aam
dec
cltd
pop
pop
movsb
negl
push
test
rolb
jno
inc
lea
and
xchg
mov
cli
shrl
push
sbb
dec
fs
cmp
xsha256
cmpsb
fidivrs
xlat
lods
sbb
lahf
dec
repz
mov
imul
mov
sbb
pop
mov
jb
pop
cmp
sub
sahf
cwtl
add
aas
jecxz
dec
es
add
cli
lret
push
dec
pop
les
and
push
xor
icebp
sbb
or
inc
inc
jne
mov
mov
inc
sub
push
flds
inc
jno
lret
and
mov
and
lods
adc
loope
in
xchg
jno
das
movsb
xchg
mov
dec
xchg
repnz
lea
test
jl
test
mov
sbb
pop
lret
fsubrs
pop
xchg
push
mov
jl
adc
sbbb
sub
ds
pop
ret
sub
inc
andl
enter
jl
mov
jnp
jne
icebp
pushf
testl
pop
xor
mov
cmp
test
mov
pop
xchg
fadds
or
stc
adc
push
leave
mov
or
and
sbb
in
dec
adc
lret
dec
and
xchg
js
cld
adc
sbb
push
and
sbb
loope
ret
pushf
add
cmpsl
std
xchg
sbb
or
fucomip
iret
repnz
adc
popa
ljmp
and
push
add
out
and
aad
cmc
sbb
loope
scas
mull
or
mov
xor
mov
hlt
arpl
stc
jo
push
jl
add
jle
pushl
call
movlps
ret
mov
out
cld
incb
ficomps
ja
sub
andb
mov
lar
xchg
or
and
sti
sahf
xchg
lods
int
cltd
jnp
lcall
test
push
jne
push
mov
mov
mov
xchg
fidivrl
loope
mov
mov
jno
jp
bound
hlt
mov
add
daa
push
jmp
xchg
push
adc
ja
push
in
and
adc
out
xchg
fstp
int3
lods
aam
xor
fcom
lock
aam
fcomps
pusha
je
or
pop
mov
movsl
ljmp
pop
lcall
fsubrs
sub
mov
shld
fsubl
push
and
mov
pop
lea
in
test
loop
sub
push
daa
adc
jle
dec
ljmp
sarb
jnp
and
and
add
add
rcll
cmp
mov
jo
xlat
push
ja
add
in
add
fdivrl
or
mov
mov
cli
mov
jle
mov
sbb
and
lds
jge
xchg
inc
sub
flds
inc
jg
xchg
adc
pop
push
daa
leave
test
hlt
jo
loopne
in
xor
movsl
or
lds
cmp
adc
in
aaa
push
or
mov
push
cmpsl
loop
push
xchg
sbb
jo
std
lds
arpl
es
nop
mov
push
popf
leave
mov
jo
push
xchg
popa
mov
daa
sub
movsb
sub
push
gs
dec
loopne
xchg
inc
lock
fsubl
std
outsb
sub
push
adc
leave
cwtl
fwait
add
push
pop
sbb
movsb
pop
js
dec
xchg
je
mov
aad
mov
add
pop
push
add
nop
stos
dec
lods
dec
sti
jbe
aad
xor
mov
stos
mov
lock
fstpt
shlb
cmp
or
inc
and
mov
pop
push
mov
sub
frstpm(287
insl
ja
pop
adc
clc
outsl
sub
int
xchg
mov
mov
lock
xor
hlt
cmp
ret
push
imul
cmpl
or
inc
das
cli
cmp
adc
xor
lcall
negl
in
mov
add
jbe
and
sbb
fsin
cmp
inc
aaa
or
fistpll
mov
ret
dec
mov
xchg
pop
outsb
mov
rol
xor
mov
lods
push
mov
and
pop
push
or
cltd
dec
call
xor
std
aaa
and
out
cmp
sbb
mov
jecxz
mov
push
hlt
mov
nop
mov
daa
xor
xchg
and
daa
mov
cmpl
gs
stos
int
adc
leave
sarl
pusha
push
sbb
lea
pop
jl
add
cmp
xor
lods
js
fs
rclb
xchg
mov
push
loopne
jge
addr16
xor
xlat
loopne
pop
cmp
mov
je
xor
jg
pop
jae
mov
sub
and
js
outsb
pop
mov
jmp
push
mov
push
pop
push
fisttpl
inc
adc
pop
out
repz
lcall
mov
dec
add
rcll
subl
fldcw
imul
push
lods
popa
or
test
ljmp
jmp
cltd
aad
aam
arpl
movb
gs
cmp
out
pop
test
jl
xlat
fwait
or
test
movsb
mov
sub
mov
xor
jbe
fcmovbe
xchg
or
jae
sub
push
cmc
stos
adc
add
fnstcw
pop
jle
clc
into
addr16
test
jbe
push
aam
ljmp
rorb
add
mov
pop
inc
add
jno
push
inc
xor
lock
xchg
xchg
test
into
mov
testl
adc
insb
cmp
mov
inc
fldcw
call
divb
jmp
daa
mov
mov
adc
and
dec
shlb
xor
vpcmpeqd
mov
pcmpeqb
in
pop
repz
and
iret
add
mov
arpl
cmp
in
ljmp
mov
sarb
adcb
insl
push
es
mov
leave
mov
popf
je
incl
movsb
and
loope
popa
setge
mov
mov
repz
insl
dec
xchg
int3
or
mov
mov
insb
int
sti
sub
orb
push
mov
sbb
clc
jge
sub
outsl
leave
ja
pop
dec
lahf
and
inc
adcb
or
push
movsb
ret
andl
gs
imulb
adc
enter
aad
in
mov
fld
in
ss
jmp
jmp
mov
jp
jno
and
dec
cmovns
pop
jae
stos
rclb
xchg
fwait
cmp
xor
stos
mov
jb
jo
mov
or
outsl
scas
mov
and
cmp
push
sbb
sub
add
shr
sbb
sbb
mov
push
inc
test
push
ja
nop
testl
pusha
push
cmpb
sbb
sub
inc
mov
insl
loope
movsl
insb
push
jb
cld
and
in
dec
pop
ret
rcr
ficomps
in
test
push
mov
ja
call
ret
jg
out
jg
mov
add
repnz
xchg
mov
movsl
cwtl
adc
sbb
pop
repnz
dec
add
in
sbb
mov
mov
inc
xchg
pop
pop
adc
dec
dec
sar
je
scas
daa
popf
mov
or
dec
or
or
lcall
in
push
and
clc
cwtl
in
cwtl
clc
mov
pushf
sbb
add
das
cs
sub
hlt
mov
mov
or
cwtl
sbbb
mov
sub
hlt
or
mov
scas
enter
aaa
pop
aam
inc
popa
cmpsl
movsl
lock
push
sahf
push
mov
loop
data16
jae
in
cmc
mov
jae
pop
pusha
loope
or
aaa
pop
pusha
push
cld
add
jo
gs
clc
jnp
mov
cld
add
daa
sti
and
add
enter
stos
cld
dec
xor
cmc
push
cwtl
mov
ss
loop
cld
in
into
fcoms
xchg
sub
rolb
enter
or
xchg
mov
test
jae
es
or
mov
fidivl
add
pop
push
mov
shlb
sti
mov
mov
adcb
sbb
pop
lea
inc
stc
adc
into
inc
sub
pop
scas
adc
and
mov
sub
out
repnz
jb
jp
mov
push
push
cli
rorb
jns
push
mov
cmp
inc
cmp
icebp
inc
outsl
aam
sub
mov
pop
inc
mov
mov
mov
sub
sbb
test
mov
and
cmpsb
mov
aam
or
lea
or
or
sub
mov
fisttps
dec
leave
leave
dec
mov
rol
repz
jbe
aaa
mov
mov
cmp
mov
xchg
jns
mov
add
out
mov
js
sub
shrl
xchg
add
xor
or
push
fwait
adc
pop
cltd
sbb
adc
ds
inc
and
dec
iret
add
ret
rcll
lret
or
shll
and
sar
aas
jmp
into
in
mov
and
int
cmp
daa
pop
or
sbb
pop
arpl
les
jmp
neg
addr16
push
inc
pop
aaa
pop
xor
test
xchg
leave
xchg
mov
cmpsl
icebp
push
push
mov
out
call
mov
push
pushf
jmp
or
pop
jae
aad
and
ds
xor
mov
shrl
pop
mov
jle
pushf
inc
jmp
lea
mov
ljmp
mov
and
addl
out
dec
mov
fildll
loop
popf
enter
mov
cmp
lret
es
mov
in
gs
xchg
ficoml
std
lret
jb
cmp
popf
cmp
inc
stc
push
filds
pop
fildll
inc
js
adcl
or
cld
mov
aad
inc
mov
fisubs
sbb
addb
lcall
mull
fcoms
pop
leave
dec
sbb
cmc
cmp
mov
movzwl
pop
push
mov
jge
add
sub
int3
in
push
jg
dec
in
fdivs
loopne
xchg
sbb
push
loope
scas
idivl
add
lret
scas
pop
in
repz
jbe
enter
call
inc
xchg
cmp
out
insl
jmp
cmp
in
mov
adc
adc
cmc
outsb
mov
divb
and
inc
rcrb
xor
ret
ret
add
pop
scas
push
aam
lods
out
xchg
adc
push
dec
jmp
pop
movsb
cltd
push
pcmpeqb
les
bound
push
incb
mov
subl
loope
cmpsl
ret
dec
cld
jbe
jns
inc
mov
lcall
pop
ds
daa
push
mov
xchg
pop
iret
adc
xor
and
pushf
push
mov
or
jl
or
jmp
inc
mov
test
or
push
lea
xchg
mov
mov
nop
mov
mov
repz
cmp
inc
cli
xlat
sub
add
jecxz
sbb
in
xchg
xchg
mov
cmpsl
inc
lods
xchg
ds
les
int3
or
jb
roll
add
add
and
shlb
xlat
push
test
int3
and
cs
adc
scas
pop
daa
push
rorb
cmp
dec
es
sbb
push
mov
inc
inc
lea
xchg
into
inc
pusha
pop
mov
gs
inc
cmp
sub
adc
ljmp
sbb
loope
lret
dec
xor
mov
fldenv
sbb
pavgw
xor
adc
jge
adc
jle
mov
add
repnz
pop
inc
push
fisttps
bound
test
or
pop
adc
cmp
pop
popl
jbe
cli
out
and
and
jne
cmp
cmp
mov
xchg
sti
outsb
arpl
repnz
in
push
push
adc
loop
adc
in
repnz
int3
cld
or
aas
xchg
push
mov
sbb
mov
sub
or
mov
mov
dec
loope
and
and
ret
fcomp
aam
test
mov
cltd
test
aas
jl
push
jl
add
stos
jne
push
paddb
inc
jno
push
xchg
stc
movzwl
repnz
andb
xor
pop
test
ret
stos
inc
into
xchg
dec
adc
fstpt
stos
push
mov
dec
mov
fildl
mov
push
xchg
fs
sbb
out
jne
daa
jne
jecxz
add
pop
or
xor
push
stos
add
mov
and
sbb
and
sub
sub
xor
popf
push
into
insl
cmp
adc
aam
and
mov
sub
xor
mov
std
sbb
jmp
add
sbb
fmuls
pop
inc
jle
add
test
nop
sbb
popf
cwtl
cmp
leave
or
jg
rclb
js
test
sbb
subl
or
push
outsb
inc
insb
das
pop
sbb
dec
movsl
push
in
mov
sbb
mov
pop
sti
jmp
inc
sahf
or
xlat
pop
jecxz
mov
inc
or
pop
dec
adc
pop
incb
lds
lds
notb
sub
cmp
jne
in
jbe
fs
push
adc
xchg
inc
sarb
pop
mov
mov
fs
rolb
push
bound
div
fdivl
inc
jns
scas
orb
and
int3
movsl
xorl
jns
iret
push
andps
ret
scas
repz
dec
xor
pop
push
and
enter
dec
jb
iret
jmp
lahf
xchg
jne
fstpl
cltd
fcmove
xlat
xor
ret
cmp
mov
jnp
dec
cmp
jmp
outsl
pop
fwait
push
lret
inc
stos
and
mov
mov
lea
int3
outsb
mov
cmp
sahf
mov
mov
int
stos
icebp
mov
shl
cltd
mull
adc
jb
push
mov
sbb
daa
mov
sti
daa
push
imul
out
mov
subl
into
cmc
movsl
cs
ds
push
add
les
lahf
lahf
popf
pusha
sbb
adc
les
mov
xor
push
mov
xor
jg
fisubl
mov
imul
xor
cs
test
adc
jns
or
xchg
loopne
into
inc
dec
lods
mov
imul
lods
sbb
lsl
mov
adcl
cmp
cltd
adc
cmp
int
xlat
leave
lods
dec
or
cmc
jg
fmul
in
cmp
stos
test
jae
jl
inc
and
push
in
xchg
xchg
xchg
sub
data16
fsubl
int3
dec
decl
test
je
sarl
int
xor
pop
dec
in
mov
loopne
push
daa
into
xchg
xor
xorb
pop
faddl
std
jp
or
cmp
push
push
xchg
sub
mov
mov
ret
mov
cmp
in
outsl
mov
add
les
movsl
mov
adc
push
adc
je
shrb
ret
push
push
aam
or
xchg
test
ret
xor
sbb
and
sub
push
inc
insb
inc
jno
cld
inc
dec
push
jns
inc
in
into
push
pop
addr16
sbbb
repnz
or
pop
jp
in
inc
icebp
daa
dec
addr16
jl
push
daa
jmp
or
push
jg
push
mov
adc
adc
in
push
add
repnz
and
xchg
pop
dec
lock
nop
leave
movsl
iret
aad
stc
ror
lahf
push
std
iret
cmp
xchg
xlat
orl
in
pop
into
push
addr16
push
mov
aas
xchg
push
mov
pop
out
push
cltd
push
pop
push
sbb
dec
sbb
mov
mov
cwtl
test
mov
mov
mov
in
push
ret
js
js
pushf
jmp
loop
mov
ljmp
addl
sub
insb
xchg
lret
scas
decb
mov
xor
inc
cli
jp
imul
mov
lock
sarb
sbb
xchg
and
xor
inc
cmpsl
jmp
jne
lods
leave
and
xchg
jno
xor
xchg
mov
mov
sub
adc
mov
int3
pushf
stos
push
pop
xchg
cmpsb
stos
mov
adc
cli
into
sbb
sub
sub
movsl
data16
outsb
jns
add
jo
jecxz
les
jb
lods
or
iret
pop
mov
sub
or
jmp
popa
mov
jnp
jmp
mov
filds
repz
push
or
push
loopne
sarb
push
pushf
sub
scas
sbb
cmp
leave
push
xor
cmp
push
loop
cltd
adc
clc
leave
jne
pushf
sub
xor
out
fildll
jno
pop
lahf
jae
icebp
cltd
cld
xor
pushf
mov
jb
ja
lods
jbe
icebp
or
push
stc
lahf
mov
mov
jp
mov
das
cmpsb
daa
movsb
imul
cmp
add
test
dec
cmp
divb
mov
stc
xor
adc
rorb
shl
cmpsl
push
sbb
mov
xchg
data16
xor
aaa
loop
lock
mov
sti
bound
pusha
jecxz
pop
nop
mov
add
adc
es
inc
fdivrs
imul
or
cmc
add
or
push
xchg
outsb
stos
fisttps
lret
sbb
movsb
aad
jp
inc
dec
push
xlat
stos
dec
icebp
xor
cmp
popf
in
pop
and
push
cmp
fldl2t
shll
cmpb
std
pop
sbb
add
xor
ss
ficompl
add
rolb
sub
in
or
popa
das
sub
pop
adc
fwait
out
mov
iret
imul
jne
inc
mov
notb
loopne
xchg
inc
mov
mov
mov
mov
push
push
les
xchg
mov
or
fstpt
or
popf
mov
into
add
jmp
aad
roll
pop
xchg
lret
fstpt
jne
imul
mov
shll
pushf
cmp
shlb
pushf
mov
sbb
mov
mov
adc
push
test
sub
jae
ret
pushf
or
push
jmp
push
sbb
in
jmp
jecxz
imul
pop
pop
data16
inc
xor
jno
ret
fidivl
lods
pop
popa
aad
inc
mov
sarl
fidivs
adc
orb
or
jns
push
pop
stc
xlat
or
dec
notl
outsb
leave
popa
or
inc
pop
loope
lds
enter
test
xor
mov
mov
or
inc
dec
sarb
test
push
mov
push
pop
mov
jno
pop
adc
ljmp
push
test
xor
das
cmp
ficomps
cmp
cmc
add
add
push
loop
dec
lahf
inc
mov
movsb
mov
inc
cmp
inc
insb
cmp
adc
adc
out
dec
ror
lea
lds
pop
push
nop
leave
and
and
ds
mov
hlt
fstps
int
or
ljmp
mov
push
addb
jecxz
adc
push
or
mov
sbb
das
test
mov
lods
sub
data16
push
lods
repz
lea
and
pop
or
sub
out
fldl
cmp
xor
pusha
and
sbb
loop
mov
sahf
and
cli
push
scas
js
popa
imul
aaa
shr
cmpsl
cmp
pop
mov
into
in
cmpsb
sbb
into
xchg
and
popa
ret
sbb
pop
xor
fnsave
pop
out
pushf
lods
mov
aas
shr
push
fcompl
fisubrl
ficomps
xchg
and
ljmp
adc
ja
int
mov
lret
xor
pop
and
popa
outsl
gs
cmp
shrb
jb
jnp
jecxz
in
sub
mov
iret
inc
scas
jmp
into
fistpl
mov
or
inc
push
cmp
repz
fstpl
adc
push
inc
inc
scas
sub
pop
mov
out
push
insl
jmp
ss
test
push
bnd
push
std
je
push
jle
mov
popl
add
in
out
mov
fwait
mov
mov
cmp
sbb
cld
das
pop
adc
sbb
mov
enter
add
movsb
fildl
daa
sarb
imul
adc
adc
mov
jne
xor
or
dec
xorl
xchg
clc
jae
cmp
and
lahf
arpl
loopne
mov
push
mov
xor
sar
push
fs
in
fcmovb
push
cltd
dec
sbb
movsb
test
cmp
push
in
xor
mov
add
popf
pop
jl
xor
adc
loop
test
sub
xor
pop
mov
lcall
sub
es
and
gs
pop
clc
jns
or
sbb
sbb
push
out
sub
out
cmp
test
push
xor
int
mov
repz
inc
adcb
into
mov
jl
sbb
mov
ljmp
cmp
jns
cli
cmc
aam
aas
pushf
je
lcall
mov
and
dec
mov
das
dec
jl
xchg
dec
jecxz
mov
pop
cmpb
push
jbe
cmp
cmpsb
out
dec
mov
ljmp
jns
aaa
out
lret
je
aas
pop
sbb
jl
mov
ds
nop
push
sub
sub
addr16
and
jmp
enter
jge
inc
outsl
and
fdivr
sub
sarb
pushf
imul
pop
fsub
adcl
xchg
xor
pop
pop
inc
dec
push
lcall
push
into
cmc
adc
xlat
mov
mov
push
adc
lds
xchg
inc
sub
cwtl
stos
clc
cmp
inc
pop
out
sarl
sarl
xchg
int
popa
imul
rcr
je
fadd
flds
mov
xchg
test
mov
rcrb
in
rcrl
movsl
popa
push
pop
pop
outsb
cld
hlt
mov
mov
lds
arpl
pop
jns
sbb
aas
dec
mov
jecxz
aaa
push
jnp
or
incl
pushf
sbb
inc
push
mov
sbbb
pop
adc
jne
cmp
sbb
inc
je
jne
sub
scas
pusha
pop
out
mov
push
ljmp
or
lahf
or
lea
into
inc
notb
cmp
push
mov
xor
fadd
add
push
pop
fwait
cmpb
cmp
sbb
push
in
fldenv
jmp
sahf
outsl
test
adc
das
ss
ret
in
mov
es
repz
popa
js
and
dec
pop
sbb
cmpsl
repnz
out
jp
mov
icebp
test
adc
enter
sahf
sub
jae
sub
aam
mov
sarb
scas
loope
dec
cmpsb
fimull
in
inc
std
push
iret
test
or
fldl
shlb
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
pop
add
add
add
sbb
push
add
add
add
add
add
add
scas
xchg
pop
lock
decl
hlt
mov
or
dec
adc
jno
add
push
add
sbb
in
inc
xchg
jmp
add
xchg
hlt
add
es
cmp
dec
rolb
or
adc
int3
jo
xchg
adc
mulb
mov
mov
lret
movl
test
push
inc
testl
or
sub
cmp
test
mov
pop
or
add
adcl
aas
dec
shlb
int
imul
mov
ror
cld
dec
gs
movsb
add
add
mov
mov
imul
push
leave
sbb
pop
sbb
scas
jmp
pop
repz
mov
mov
and
dec
sbb
mov
loopne
mov
stc
stc
xor
push
xchg
inc
in
push
rcll
cltd
mov
fwait
cmovs
data16
in
inc
pop
aad
cmc
mov
int
cmp
push
dec
pop
loopne
in
out
testb
jns
push
add
push
pop
shlb
int
inc
or
add
sub
pop
and
addb
pop
jecxz
pop
push
test
cmp
cmp
mov
insb
xor
scas
in
jo
andb
pop
lcall
mov
out
dec
fisubs
or
xchg
bound
fcmovb
mov
cld
pop
dec
insb
cmp
mov
fwait
mov
lea
xchg
ret
cmp
stos
and
add
and
jb
and
jbe
inc
into
outsl
mov
mov
call
cmp
cltd
mov
cmp
imul
sub
pop
cmpsl
push
pop
pop
stc
mov
sbb
lret
andl
mov
addb
sub
lret
push
push
pop
xor
ret
xor
jno
sbb
push
sbb
pcmpeqw
and
test
andl
aad
push
ss
push
mov
add
sarl
rcll
inc
xor
pop
test
push
sbb
and
in
jnp
sbb
dec
sub
cld
and
in
pop
fbstp
lds
or
clc
cmpb
mov
mov
mov
rol
fistpll
fisubrs
or
adc
aam
xor
push
jge
rcrl
test
pusha
and
mov
add
bound
mov
cli
aad
mov
loope
aam
jb
push
jl
mov
or
cmpsl
jmp
in
xor
cwtl
cld
pusha
out
and
insb
lds
or
or
cmp
lods
lahf
aas
cmp
jne
push
mov
jns
jae
push
and
dec
aad
dec
int3
jmp
pop
and
call
inc
scas
push
fucomi
cmc
dec
jo
cmc
add
cmp
mov
and
add
or
inc
inc
jne
js
ret
mov
xor
loop
pusha
call
mov
cmp
cmp
dec
mov
js
pushf
bnd
sub
lret
fwait
adc
bound
adc
ret
jmp
dec
test
leave
add
push
mov
adc
outsb
and
movsb
push
lahf
movsl
pop
les
fwait
push
pop
or
jae
dec
outsb
andl
cmp
and
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movswl
call
push
inc
sub
scas
dec
fsub
push
movswl
pop
pop
mov
add
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
fisttpl
xor
mov
sub
xor
add
push
mov
pop
push
movzwl
popl
mov
mov
sub
mov
cmp
jne
mov
jmp
xor
sub
mov
sbb
xlat
les
or
add
push
mov
pop
jmp
hlt
sbb
fidivrs
push
push
dec
shll
ds
pop
jns
xchg
xor
loope
push
xchg
and
sub
ja
shlb
sbb
adcl
cmp
pop
mov
clc
pop
push
mov
xor
data16
scas
sahf
push
add
daa
push
and
shll
mov
inc
call
idivb
shlb
xlat
repz
push
mov
xchg
mov
stc
jns
mov
mov
outsl
dec
and
mov
xor
push
dec
sahf
sub
mov
imul
in
xor
std
jnp
in
jmp
loope
mov
int
iret
std
das
int
insl
fnstenv
xor
inc
rclb
stos
jnp
sub
mov
fnstcw
shlb
sbb
fdivl
clc
pop
pop
jae
sub
test
in
jge
rcll
jo
int3
sbb
shlb
cmp
xor
fldcw
dec
mov
cmp
inc
jl
fstpl
mov
xlat
mov
jnp
and
adc
push
out
push
iret
cli
mov
pop
cmp
jbe
push
and
and
out
outsb
adc
inc
sarl
pop
imull
add
popf
add
and
and
add
stos
and
fisubl
mov
push
ds
sbb
sbb
sbb
mov
ljmp
adc
pop
adc
int3
dec
cmp
or
push
and
in
mov
ja
data16
adc
mov
mov
push
and
cltd
push
mov
mov
jmp
xchg
mov
std
fstl
aam
or
lock
and
js
and
adc
push
clc
or
lods
shll
cli
clc
pushf
and
or
shlb
out
cmp
xchg
cmp
les
pop
jl
adc
mov
push
and
add
cmp
test
loopne
pop
xlat
jg
mov
cmp
jnp
inc
jl
jl
into
pop
popf
dec
bound
jns
xchg
test
cmc
xchg
test
mov
pop
insl
ljmp
vcvtps2pd
loop
notb
or
jge
popf
or
xor
insl
scas
icebp
loopne
adc
cmp
loopne
cmp
int3
mov
ds
test
stos
loope
nop
or
xor
test
test
xchg
test
add
inc
ljmp
jb,pn
add
mov
push
jmp
cli
out
inc
pop
lret
dec
imul
mov
les
jle
push
loop
push
mov
fisttpl
rclb
imul
and
fisttpl
jno
movsl
mov
mov
fstps
dec
in
cltd
xlat
test
imul
fisttpl
inc
mov
fstps
dec
in
cltd
mull
inc
push
fisttpl
push
fisttpl
push
dec
cmpsb
cld
and
movsb
cli
and
and
pop
fisttpl
rolb
outsl
push
fistpl
aam
add
push
fistpl
cmpsb
jmp
pop
adc
pusha
insb
pop
add
out
rol
xor
imul
dec
push
push
dec
dec
push
push
push
sbb
dec
aam
fiaddl
aam
pop
pop
fisttpl
push
xor
push
imul
dec
negl
idivb
fisttpl
fadds
push
pop
fisttpl
cmp
imul
fcmovnb
xorb
push
pop
fisttpl
pop
insb
push
pop
fisttpl
pop
xlat
std
shl
xlat
dec
imul
rol
shlb
xchg
js
fdivs
inc
imul
cmp
addr16
fisttpl
sar
jl
push
inc
outsl
aam
std
js
test
insb
xchg
sub
push
insb
aad
dec
aam
das
push
aad
xor
pop
popa
je
insb
sbb
dec
cltd
popa
cmp
mov
fcmovu
ss
imul
inc
imul
pop
insl
push
fcmovnb
xchg
inc
mov
dec
adc
push
add
ret
xorb
adc
dec
pop
out
std
enter
imul
dec
dec
add
inc
insb
mov
mov
negl
dec
ret
test
fisttpl
push
adc
imul
mov
mov
rol
call
rolb
pop
sub
ret
in
loop
aad
loopne
insl
ja
dec
and
dec
pop
sub
ret
in
pop
fbld
dec
imul
ja
dec
and
push
loopne
pop
mov
or
inc
inc
xlat
dec
xchg
jp
dec
sbb
sub
ret
in
inc
xchg
inc
inc
andb
push
xor
nop
cmpsb
jnp
insb
push
fisttpl
mov
xlat
dec
xchg
jp
dec
sbb
sub
ret
in
std
cmpsl
push
and
repz
dec
outsl
mov
xlat
dec
xchg
jp
dec
adc
sub
ret
in
std
cmpsl
mov
push
xor
xor
cs
ret
insb
and
and
xchg
in
insl
mov
xlat
dec
xchg
jp
sub
mov
fimull
ja
dec
push
push
fcmovnu
pop
sbb
lret
push
xor
xor
push
fadd
data16
in
pushf
aad
aad
mov
stc
mov
dec
aam
xchg
fwait
push
xchg
xor
dec
push
cmp
xor
jge
mov
dec
mov
jge
rcr
stos
mov
fisttpl
sbb
fs
fisttpl
pop
fisttpl
push
mov
pop
jecxz
mov
dec
imul
fwait
mov
ret
aam
imul
sub
xchg
and
xlat
dec
imul
push
mov
int
sub
pop
fisttpl
push
sti
dec
pop
movl
roll
cs
lret
das
pop
int3
and
lea
inc
xchg
jns
add
in
or
aam
inc
pop
sub
ret
ljmp
mov
jg
push
xchg
inc
jne
lea
inc
push
movsb
inc
inc
out
scas
jge
xor
int3
and
aaa
adc
pushf
js
pop
movsl
add
mov
jne
je
mov
xchg
dec
imul
dec
imul
dec
imul
dec
imul
loopne
inc
fcmovnbe
pusha
pop
fisttpl
pop
fisttpl
push
fisttpl
push
fwait
dec
imul
dec
imul
fisttpl
push
fisttpl
push
fisttpl
push
fisttpl
inc
fisttpl
jb
dec
dec
and
aas
sbb
ds
xchg
out
pushf
fdivl
cltd
in
fsubl
push
roll
cld
sbb
sub
pop
iret
std
xchg
rorb
pushl
incl
jae,pn
mov
add
pop
add
dec
lds
js
popf
jl
lds
ja
xchg
mov
sub
xor
orl
push
hlt
jg
cmpsl
add
aaa
hlt
cmpsb
jne
mov
pop
push
mov
mov
dec
cmpsl
fs
ret
jl
lret
xor
mov
jecxz
ja
jge
dec
insb
adc
pop
nop
mov
pop
ficompl
xchg
fildll
movsl
sti
adc
nop
dec
and
xchg
sub
xchg
xchg
push
cld
xorl
xchg
ja
orb
cmp
mov
add
add
or
add
sbb
sub
add
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
add
push
add
sub
add
sub
add
sub
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
icebp
sub
add
add
add
sub
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
in
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
enter
add
xor
xor
xor
xor
xor
xor
bound
xor
add
sub
or
add
inc
add
insl
add
add
je
jae
add
bound
add
add
add
add
je
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
and
push
add
arpl
push
add
add
imul
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jae
je
jb
add
insl
add
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
and
xor
sub
and
xor
add
sub
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jae
arpl
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
pop
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
push
add
add
add
push
add
add
imul
and
test
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
insl
add
add
add
js
add
add
add
add
imul
je
add
jne
imul
add
xor
add
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
popa
add
dec
add
outsb
add
add
jb
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
and
xor
sub
and
xor
add
and
add
add
push
add
add
imul
inc
add
imul
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
add
cmp
or
lea
ret
out
or
cmp
adc
dec
nop
clc
jg
lcall
and
enter
sahf
add
aam
nop
mov
dec
mov
jecxz
sub
enter
inc
lods
repnz
pusha
push
inc
and
scas
push
fs
dec
or
xchg
adc
add
cmp
inc
add
push
je
imul
sbb
push
and
mov
shrb
and
add
inc
aam
mov
adc
add
pop
push
dec
bound
arpl
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
aaa
sbb
and
and
pusha
in
jo
insb
sbb
push
xchg
add
in
jb
cmp
push
sbb
sbb
or
and
fcoms
add
cmp
sbb
add
lock
test
sti
inc
add
in
adc
les
loopne
call
or
inc
inc
sub
je
movzwl
js
sbb
mov
cmp
push
pop
lods
or
cmp
xor
or
cmp
sbb
sub
and
nop
lock
push
mov
cmp
cmpl
jne
push
add
call
add
test
jne
faddl
pop
mov
mov
jb
aas
or
mov
add
lea
js
sbb
mov
addb
inc
cmp
jne
in
icebp
cmp
adc
push
popf
pop
nop
mov
xor
add
rcr
daa
add
dec
cld
add
mov
aam
sbb
iret
or
outsl
adc
pop
cwtl
add
push
add
iret
add
push
push
adc
mov
nop
push
push
pop
loopne
icebp
into
adc
add
xchg
add
sbb
aaa
pop
inc
nop
cmc
cmp
inc
addl
rolb
push
or
push
jne
adc
adc
call
xchg
add
or
inc
add
jb
push
pusha
add
ret
scas
sbb
hlt
jmp
ds
aas
push
or
ret
test
add
es
call
add
mov
xor
insb
call
ret
std
sbbb
fmul
ja
pop
and
jge
mov
incl
sub
cmpl
add
gs
push
or
inc
add
into
mov
cli
iret
mov
out
jmp
sub
cmp
stc
mov
adc
mov
add
test
dec
or
je
ret
test
sti
repz
pop
xchg
adc
add
xchg
cmp
adc
pop
mov
jnp
add
out
or
mov
inc
push
add
and
push
and
cmp
mov
test
je
add
sarl
add
adc
inc
in
mov
add
decl
clc
aad
fs
psubusw
dec
test
js
push
push
add
or
push
pop
jne
pop
scas
jns
inc
push
and
jle
ja
add
mov
insb
in
cli
dec
inc
add
dec
in
xor
or
incl
scas
push
mov
pop
sbb
rol
sub
jnp
add
repz
jae
nop
pmaxsw
and
add
add
xor
push
hlt
mov
stos
or
lock
push
jae
xchg
sub
lea
adc
adc
add
cmpsl
data16
in
jle
add
sbb
insb
or
adc
cmpsb
shrb
mov
hlt
jmp
ljmp
add
sbb
ret
xchg
and
loop
or
mov
or
inc
mov
lahf
cmp
pop
pusha
jle
es
mov
mov
std
push
mov
cmp
sub
push
add
pop
scas
shll
xor
dec
mov
or
xchg
popa
je
jl
add
adcb
or
add
leave
xchg
orb
inc
test
and
jae
mov
rorb
add
addl
push
mov
cmp
mov
add
aas
xchg
data16
pop
aam
xor
ud2
jbe
call
and
pop
add
aas
je
lods
inc
dec
add
mov
adc
xor
leave
add
add
int3
arpl
cmp
and
movsl
scas
and
push
push
call
int
aaa
adc
dec
pop
xchg
pop
je
cli
adc
aas
xchg
in
add
xor
push
jne
cmc
loopne
test
jle
lea
sub
inc
pushf
rcll
das
cmpsb
add
into
aaa
or
xchg
push
mov
push
mov
mov
pop
insl
subb
dec
xor
rolb
jne
pusha
in
adc
sbb
pop
lods
cmp
or
jp
inc
test
cmpl
aam
adc
in
inc
and
or
push
add
dec
xor
rolb
stc
rcrl
sbb
jecxz
ss
add
push
or
fidivs
cwtl
lret
add
sub
lds
int3
mov
mov
test
je
pop
add
and
add
xchg
adc
testb
or
add
imul
in
loopne
push
push
dec
fs
xor
sahf
mov
aam
sub
inc
add
jle
movsb
adc
int
popa
and
sahf
mov
mov
aas
clc
dec
pusha
mov
cmpl
mov
adc
add
hlt
add
add
add
iret
and
jl
xchg
jno
add
mov
hlt
push
xchg
ret
add
and
in
or
cs
les
dec
stc
repnz
sldt
push
sbb
xchg
jns
add
sub
out
mov
pop
hlt
leave
adc
cmp
aad
cmp
mov
in
mov
je
xorl
in
cmp
xor
pop
push
lret
inc
sbb
mov
or
pushf
in
fstpt
loopne
push
cmp
xchg
sbbl
dec
or
cmp
cmp
add
add
ror
add
add
sub
js
pop
hlt
jmp
pop
movsl
popa
ficompl
outsl
xor
in
pop
or
testl
and
mov
dec
cwtl
in
push
shll
add
or
push
cld
adc
xor
sbb
or
cmpsb
adc
cmc
mov
add
jmp
pusha
cli
or
jl
adc
xchg
rolb
ret
cmp
mov
cmp
or
or
ljmp
add
rolb
loop
add
jg
add
adc
pop
cmp
mov
jne
sub
lret
mov
or
add
ret
and
bound
fwait
dec
and
loope,pt
xchg
push
dec
je
sub
fiaddl
popa
push
inc
sub
scas
xor
test
pop
and
and
decb
inc
cmpsl
shlb
cmp
mov
push
adc
push
insb
add
push
add
adc
add
fdivs
mov
addr16
add
pusha
fsubs
test
jne
in
xrelease
xor
inc
or
addl
hlt
xchg
mov
clc
add
or
es
mov
push
aaa
sub
movsl
repz
jg
leave
sarb
cmc
sarb
push
imul
add
xchg
and
mov
and
inc
into
add
in
repnz
mov
sub
add
lcall
inc
or
call
cmp
pop
clc
shll
dec
rcl
xor
inc
fisttps
mov
sub
sbb
addl
pop
aaa
push
test
xor
dec
ret
ss
dec
adc
adc
es
xchg
sbb
adc
adc
xchg
pop
sbb
int3
sub
cmp
jl
xchg
cmp
inc
jns
add
add
sbb
nop
mov
andb
aad
or
std
movsb
add
inc
loopne
mov
enter
test
adc
xchg
sbb
scas
mov
sub
rclb
imul
orl
lock
mov
add
dec
mov
add
cmp
push
clc
pop
and
fsubs
or
addr16
sub
xor
and
cmp
or
xchg
je
mov
rclb
call
mov
add
xchg
insl
mov
add
addl
daa
adc
xchg
fxch
sahf
push
aam
icebp
adc
push
lea
xor
mov
sub
inc
add
mov
add
int3
test
push
inc
je
add
xor
jb
add
add
push
push
pop
mov
stos
rorb
jne
push
pop
shr
test
mov
mov
push
stos
ja
jg
mov
sub
pop
mov
jnp
or
inc
mov
jmp
inc
pop
sub
scas
mov
push
in
or
adc
dec
inc
dec
add
fiadds
jmp
jp
dec
movsb
add
or
jge
cmpsb
test
aas
dec
dec
adc
add
xor
fsts
in
or
out
repz
xor
dec
jmp
dec
cmc
pop
ds
xorb
cmp
adc
xchg
int3
dec
jmp
adc
push
repnz
lock
sbb
push
lahf
dec
xchg
add
aam
push
arpl
andb
mov
or
add
push
es
xor
pop
xchg
mov
sti
rolb
or
orl
xchg
fxch
and
test
jge
je
and
and
add
inc
nop
push
adc
jne
sbb
repnz
add
hlt
test
mov
or
fs
xchg
push
mov
mov
loope
popa
cmc
push
xchg
out
stos
mov
add
daa
or
rorb
jg
push
orb
push
xchg
sub
xor
scas
push
outsl
test
xchg
push
or
pop
add
push
int
push
and
ret
add
cmp
add
sub
adc
cmpb
loopne
lock
or
jb
add
test
dec
cltd
pop
and
dec
icebp
loopne
test
clc
jne
dec
inc
or
jns
or
adc
movsb
shlb
add
add
mov
pushf
push
or
stos
add
loop
push
int3
cmpsb
aas
inc
add
cwtl
dec
sub
push
inc
push
sbb
add
adc
cmpsb
mov
add
popf
add
cmp
sub
jno
push
add
mov
add
cmp
adc
xor
je
je
add
cli
add
push
or
aaa
cmp
sub
mov
cwtl
push
push
or
and
mov
mov
add
mov
int
cmp
lods
and
mov
lds
in
adc
lock
pop
push
mov
push
push
lock
mov
test
add
or
add
movaps
lahf
cld
mov
jne
fsub
es
adc
repz
push
jge
push
cltd
pop
sub
or
bound
add
testb
add
sub
roll
sahf
add
jne
and
fstl
pop
sub
cmp
jmp
movsb
xor
pop
movl
addr16
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
or
mov
xlat
jmp
xor
add
ret
add
lock
loop
xchg
loopne
adc
jmp
gs
xchg
and
rorl
inc
pop
movl
cmp
xor
add
cs
push
add
and
fcoms
jp
mov
and
jns
add
imul
jmp
sbb
cmpsl
dec
fnstsw
add
and
add
and
xorl
mov
jmp
ss
xor
add
push
repnz
push
ja
add
lock
sarb
aam
adc
add
lret
xchg
call
mov
mov
xchg
test
and
nop
mov
sub
mov
ret
cwtl
mov
stos
mov
fsub
inc
sbb
jne
add
jo
or
loopne
sbb
mov
and
es
pop
pop
cmp
stc
aad
add
push
gs
adc
rcl
xlat
xor
loopne
shl
add
stos
scas
rolb
add
rorl
xor
mov
call
cmp
out
add
int3
enter
call
fcmovnu
lret
add
loopne
jecxz
in
in
pop
push
push
push
push
sub
pop
add
pusha
loopne
push
add
popl
stc
rcr
mov
nop
push
imul
scas
in
xlat
push
cmp
add
je
mov
js
add
rep
cld
push
and
pop
jmp
pop
cmp
or
sub
add
sbb
add
inc
rorb
add
xchg
test
or
jp
cmp
jbe
cmc
cmpb
jne
or
add
out
lcall
sbb
inc
loopne
mov
add
push
push
adc
lock
loope
add
dec
sbb
pop
dec
add
mov
into
add
xor
testl
ja
inc
js
xor
cs
lea
push
pop
and
add
inc
cmp
jbe
add
or
xchg
cmp
or
push
pusha
jl
jmp
arpl
call
inc
xorb
movzwl
add
sbb
repnz
inc
add
mov
push
add
add
call
testb
mov
xor
in
js
in
or
sbb
pop
jmp
jecxz
lret
sbb
je
subb
add
push
jg
push
pop
sbb
add
bound
sbbb
mov
sbb
movl
and
or
jb
cmp
roll
pop
add
inc
xchg
hlt
jle
add
pcmpeqd
ror
call
leave
mov
xor
push
shr
add
fwait
loopne
and
push
dec
into
popa
out
pusha
ret
es
xor
enter
fnstenv
dec
mov
add
cmp
cmp
mov
ret
push
sbb
jmp
enter
pop
lock
out
je
pusha
mov
cmp
jne
xor
adc
dec
std
mov
add
add
sbb
xchg
sbb
xor
jp
jl
pop
cltd
or
push
jmp
add
xor
nop
mov
mov
adc
or
add
or
stos
adc
dec
add
stos
pop
inc
imul
inc
mov
or
int3
push
nop
xor
dec
iret
mov
cltd
xor
sub
and
in
inc
add
push
add
xchg
xor
pop
pop
jge
test
movb
hlt
jl
loopne
add
stc
inc
add
add
fnstenv
in
shll
mov
dec
jne,pt
add
sbb
add
cltd
enter
sbb
xor
mov
mov
push
inc
add
push
and
sbb
sub
or
add
rolb
popa
aas
pop
mov
push
sub
sbb
test
sarb
jmp
iret
add
and
ja
sbb
sub
rclb
jne
dec
mov
adc
pop
imulb
mov
mov
fdivrs
lock
out
cmp
in
inc
push
fdivrl
cmovbe
je
xchg
add
popa
jb
mov
jbe
or
adc
pop
ret
or
add
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
mov
repnz
inc
cmpsl
push
jae
out
push
xchg
xor
cmp
in
add
push
mov
pop
sbbl
dec
add
test
mov
lods
sbb
lahf
pop
add
adc
xchg
sub
xchg
loop
or
add
addl
add
movsl
sbb
nop
jmp
pop
xor
xchg
add
push
push
pop
pop
add
adc
dec
add
mov
es
or
pop
add
push
cmp
dec
clc
lea
xchg
jnp
sbb
call
dec
jo
sub
push
pushl
and
inc
hlt
xchg
ret
ja
add
or
xchg
loope
pusha
cmp
add
sbbl
addr16
push
inc
add
push
arpl
dec
cld
adc
out
mov
jmp
clc
or
loop,pt
int3
ret
mov
push
rorb
push
push
inc
push
inc
pop
add
outsl
jb
popa
outsb
fs
add
jo
push
dec
loopne
add
dec
popa
sbb
add
jne
movsb
imul
jo
int3
lods
jbe
ja
push
aam
leave
orb
sub
fdivr
sbb
adc
inc
lret
ret
sbb
add
xor
ss
mov
push
pop
add
call
mov
jmp
add
xchg
movlps
mov
call
or
mov
sbbb
lret
xor
loope
add
mov
sub
fidivl
cld
add
stos
mov
fadds
stos
sarl
and
pop
arpl
loop
mov
js
imul
inc
sbb
in
cmp
aam
sbb
add
testb
icebp
jnp
xorb
and
dec
add
cmp
add
adc
or
rcrb
js
shl
mov
les
or
push
push
cltd
add
and
enter
movl
ret
lods
fs
ret
pop
orb
sub
xchg
cld
mov
pusha
addb
mov
and
mov
mov
into
add
call
adcb
fstps
loope
lahf
or
add
mov
push
divb
jp
add
sbbb
add
jb
imul
and
or
and
or
pop
pop
pop
add
mov
add
or
dec
push
orl
mov
add
and
or
mov
add
push
clc
pushf
inc
test
cmp
mov
add
call
orb
add
loope
add
push
imul
cli
in
push
sbbb
sbb
fcmovnb
push
push
bound
pusha
enter
mov
add
shl
xchg
adc
add
push
mov
cld
jmp
fs
clc
push
adc
xchg
rcrb
inc
add
pusha
sub
jmp
or
pop
pop
mov
pop
ret
add
jl
push
add
imul
pop
pop
inc
pop
dec
sub
push
and
mov
jbe
cmpb
imul
cmp
cmpsb
jne
cmp
popa
fiadds
dec
adc
loopne
add
call
xchg
or
sarb
lock
add
push
adc
out
mov
mov
cmp
into
add
out
push
je
push
pop
movsl
add
jbe
cmp
loop
and
insl
xchg
push
ret
mov
les
xchg
js
inc
stos
popa
xor
lret
or
push
or
push
stos
cmp
lods
popf
daa
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
jle
add
leave
sbb
hlt
enter
das
mov
dec
add
add
jo
mov
insl
mov
add
aad
sbb
movl
stc
rcll
add
jecxz
ss
xor
xchg
mov
jmp
add
enter
je
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
cmp
add
in
lds
inc
push
out
dec
pop
cs
and
add
add
jne
pop
fs
jae
add
pushf
or
popa
into
je
adc
je
add
add
dec
add
popa
mov
mov
cld
xchg
jmp
ja
jne
add
sahf
inc
adc
daa
inc
inc
icebp
insb
hlt
xchg
and
inc
mov
xor
pop
lcall
inc
lea
call
or
rcl
and
mov
movsb
andb
movl
mov
pusha
and
incl
dec
cmp
pusha
pusha
push
push
jge
add
enter
push
add
imul
push
mov
ds
mov
ljmp
jne
or
andb
cmp
or
movsb
xchg
ljmp
mov
adc
add
mov
sub
cmpsl
dec
add
inc
pop
xchg
fs
mov
je
les
inc
add
rol
jmp
cmp
int
push
shlb
add
dec
test
sbb
lret
cmpsb
add
add
add
sub
pop
push
mov
cmp
adc
mov
jbe
xchg
cld
cmp
aas
jmp
add
mov
sub
add
ss
xor
or
adc
sub
add
inc
adc
and
jmp
add
push
mov
add
stc
sub
enter
sbb
jecxz
inc
int
and
iret
push
and
jl
jge
push
in
into
lock
fdivr
push
cld
or
frndint
push
add
roll
imul
test
pop
ret
sahf
and
repz
inc
cmpsl
jmp
lods
add
mov
cmp
cmp
fs
xor
dec
fimull
lock
rclb
sbb
sti
clc
add
add
sbb
inc
add
inc
sub
lea
bound
mov
push
movaps
cmp
dec
stos
pop
and
pop
movsb
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
adcb
add
add
and
mov
mov
sub
loope
push
sahf
jo
add
daa
push
enter
fistpl
lock
aam
add
out
cmp
adc
mov
insb
or
mov
add
movsb
jp
sti
cmp
fucomi
js
pop
inc
xor
test
repz
sbb
fbstp
ds
shrl
jg
in
pusha
mov
pushf
sbb
mov
movsl
add
add
lcall
jnp
jle
andb
pop
cmc
or
cmpl
nop
pop
mov
or
push
in
dec
push
leave
cli
inc
or
inc
mov
pop
push
mov
je
pop
call
mov
add
push
or
jne
movb
rcll
sub
inc
call
inc
sub
lea
add
inc
xchg
push
push
shll
iret
cmp
sahf
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
mov
ficoml
mov
or
add
incl
mov
push
pop
push
add
lcall
add
adc
sbb
sbb
and
sbbb
pop
xchg
sbb
sub
leave
mov
fxtract
xchg
shlb
add
cmpb
ljmp
add
pop
mov
sar
push
cmp
call
jne
nop
sbb
mov
aaa
and
push
push
add
mov
inc
jno
adc
sahf
sub
or
jnp
in
cmp
dec
adc
shrl
cmp
jne
or
mov
or
fsubrs
add
jbe
pop
fs
or
pop
and
jge
jne
mov
push
pusha
jg
pop
push
outsl
add
push
sub
orb
add
adc
js
das
add
mov
daa
add
pop
add
mov
jb
mov
outsb
add
inc
daa
jo
mov
out
inc
sub
lock
add
cmp
sub
stc
jns
add
mov
xor
jmp
xchg
outsl
neg
add
adc
inc
cs
add
inc
sub
jl
lock
test
lret
pop
push
lea
push
xlat
js
add
xor
add
test
lret
add
dec
stc
fiaddl
push
lock
inc
inc
jg
push
jne
mov
les
add
pop
in
jmp
sbb
add
inc
jl
xchg
dec
sub
sbb
jbe
inc
mov
push
jo
or
or
pop
mov
cld
add
clc
rclb
movb
inc
push
dec
mov
addb
js
xchg
sub
cwtl
hlt
lock
pop
mov
fs
mov
or
clc
cmpsl
icebp
ftst
ljmp
xchg
and
add
addr16
jge
leave
mov
sbb
push
and
call
add
andl
ror
je
xor
es
stc
mov
nop
loope
pop
inc
xchg
subb
cmp
push
mov
loop
mov
push
addl
push
cmp
stos
pop
pop
inc
push
es
add
cli
or
les
mov
adc
mov
sarl
pop
sub
in
daa
in
add
subl
pop
and
xchg
push
xor
xor
in
add
jbe
push
and
cld
inc
movsb
add
nop
push
push
push
mov
je
push
repnz
mov
pop
add
dec
xor
push
scas
or
jo
ljmp
mov
cld
testl
and
sbb
mov
jns
loopne
or
add
cmp
add
call
jp
push
dec
xor
adc
lea
testl
popa
scas
mov
jno
add
pop
mov
inc
push
inc
cmpsb
stc
dec
add
jmp
pop
shrl
enter
pop
adc
add
add
dec
mov
add
xchg
cli
arpl
add
sysenter
pop
and
dec
jg
aam
jno
mov
lret
or
push
push
roll
push
push
push
test
in
or
cli
dec
loop
and
pop
shlb
mov
adc
cli
jle
cmpsb
fadds
mov
into
push
orl
push
out
lods
inc
dec
and
pop
addps
repnz
jmp
rol
dec
lret
dec
jg
sub
add
scas
out
leave
sub
shlb
add
ret
ljmp
pop
inc
pop
dec
dec
add
pop
orb
pop
ds
xor
aaa
mov
testl
cmp
inc
adc
pop
mov
cmp
push
adc
pushl
loope
enter
add
jmp
push
popa
lret
mov
xchg
bound
out
in
add
nop
dec
rolb
or
inc
addb
mov
mov
out
sub
nop
xchg
in
movsb
pop
adc
imul
out
dec
int3
cmpsb
sub
add
insb
mov
add
add
pop
sub
das
or
sbb
hlt
sub
cli
add
je
push
in
fnstcw
aad
bound
stos
sahf
push
mov
sub
fiadds
jl
cmp
inc
jle
and
icebp
hlt
iret
in
add
jo
add
add
lea
cmpsb
jg
xchg
sti
push
push
lock
std
xor
xchg
aaa
jns
cmp
cld
lcall
add
inc
pusha
icebp
jle
jmp
rclb
mov
pop
cmp
repz
mov
je
movsl
add
or
scas
inc
pop
push
clc
adc
test
mov
and
and
cld
aad
and
and
sbb
ret
sbb
aad
xor
and
jo
push
scas
sub
add
adc
cli
nop
add
mov
adcb
add
aam
lret
pop
fistpl
repz
inc
jg
add
inc
movsl
inc
adc
pushf
push
mov
jo
in
push
loopne
std
loop
and
enter
nop
pop
sbb
and
jne
pop
clc
jl
or
scas
stos
repz
ret
mov
dec
pop
addb
iret
jmp
gs
leave
shll
or
push
pop
xor
push
movb
dec
pop
sbb
xor
pop
add
lcall
add
push
pusha
cmp
add
sbb
mov
pop
push
push
add
bound
sbb
call
icebp
shrl
pop
test
enter
pop
mov
dec
test
scas
jl
inc
push
icebp
cwtl
cmp
call
mov
mov
stc
loope
jb
fisttpll
push
in
push
pop
push
inc
cmpsl
clc
push
or
sbb
shlb
add
std
jnp
add
and
enter
mov
xchg
pop
mov
mov
mov
or
and
mov
pop
fistl
sahf
pcmpgtw
sub
sbb
cwtl
scas
pop
sub
testl
incl
adc
pop
repz
add
aad
push
xor
hlt
sub
add
jno
jmp
shrl
sbb
cs
aas
stos
cmpsl
push
add
lock
jmp
inc
sbb
setb
or
int3
movsb
popf
add
jmp
and
mov
lock
xchg
sub
push
and
shlb
cmp
inc
and
pop
das
jmp
jp
or
call
mov
sub
or
cli
mov
repz
ret
xor
xor
mov
popa
sub
pop
cli
xchg
or
xor
cwtl
add
and
mov
cltd
cwtl
cmp
into
cmp
xor
clc
push
or
pop
sarl
pop
stos
add
and
cs
addb
pop
cmp
sarb
xlat
or
push
orb
in
cld
add
pop
clc
dec
shll
mov
cli
adc
iret
call
and
jmp
dec
adc
add
push
xor
jl
add
inc
dec
xchg
dec
lock
add
or
and
cltd
xchg
in
aam
fstpt
add
cmp
addb
sbb
mov
add
ds
adc
lock
mov
pusha
sbb
cvttps2pi
ljmp
cmp
shll
add
cltd
jmp
les
inc
adc
popa
test
jge
and
subb
mulb
dec
jne
jmp
pop
and
loop
cmp
fs
add
lcall
or
and
cltd
jo
pop
sbb
pushl
cwtl
incb
pop
add
aaa
ret
jmp
mov
mov
inc
imul
add
pop
add
je
or
add
push
sub
inc
xor
mov
xor
test
push
in
movsb
scas
xchg
aaa
nop
nop
mov
mov
add
ficoml
jne
adc
fistpll
in
cmp
loopne
mov
ljmp
jno
js
imul
add
inc
sbb
cs
mov
add
addr16
pop
addb
push
or
jnp
sub
lods
mov
fdivs
dec
sub
inc
cmp
stos
add
fisttps
xor
inc
mul
shld
loopne
testb
das
insb
push
mov
add
scas
or
popf
adc
popa
xchg
inc
fcoms
add
sub
mov
nop
ret
or
cmp
std
aad
jne
cmp
jb
faddl
je
loop
and
add
mov
inc
ret
sub
or
es
or
adc
call
mov
popa
cmp
add
xchg
std
test
fisttpll
dec
daa
jmp
adc
ja
cmp
sti
xor
pusha
push
cmp
jae
sbbb
ljmp
ret
jg
push
ss
movd
xor
xchg
loop
add
or
in
cmp
pop
mov
add
inc
pusha
ret
xchg
nop
push
add
mov
or
sub
sbb
fdivrl
add
push
adc
jge
push
mov
pop
add
xor
pop
lea
inc
lock
push
inc
cmpsb
add
xchg
push
xchg
add
mov
es
fwait
scas
dec
pop
sti
add
mov
sub
loope
mov
mov
test
fyl2xp1
xor
dec
jno
add
and
jns
mov
dec
cltd
dec
jmp
test
ror
call
sub
outsl
lret
cmpl
fldl
adc
sub
sbb
lahf
aam
repz
clc
test
cld
icebp
int3
jmp
add
jge
stos
daa
push
inc
add
jb
push
mov
scas
mov
mov
jl
or
std
in
xor
mov
or
out
add
sbb
xor
ret
mov
cmpsb
daa
cwtl
imul
ja
add
aam
fdivs
jne
or
jmp
pop
cmp
add
sti
or
cs
dec
stos
sbb
push
stos
testl
add
jbe
xchg
xchg
pop
out
add
xor
xor
xor
pop
int3
aam
and
imul
sbb
push
pop
mov
add
inc
sbb
add
cmpsl
mov
imul
addr16
inc
sbb
add
shlb
inc
inc
imul
fcomps
add
les
and
push
dec
pop
addps
inc
mov
push
add
sub
cltd
imul
jae
decl
ja
add
and
nop
lcall
stos
or
dec
loopne
push
cli
lods
test
pop
jo
sbb
lods
inc
lcall
sbb
jge
mov
add
add
and
jbe
test
push
lock
mov
mov
xor
sub
inc
inc
add
cli
mov
and
rolb
jge
sub
cmp
jle
push
cs
pop
add
insl
call
fmull
cmp
cmp
push
ds
andl
popl
add
xchg
sbb
sbb
sub
jno
or
or
lock
loop
nop
pop
jg
das
push
in
add
lods
popa
jmp
decl
ja
or
lock
fadds
ljmp
push
xchg
insb
or
call
popf
xor
leave
loopne
sbb
cs
adc
push
add
push
enter
hlt
mov
sub
ret
dec
cld
daa
adc
cmpsl
add
pop
add
mov
or
sub
lock
push
add
xor
clc
adc
jle
int
sahf
xchg
dec
jo
add
aaa
jl
inc
push
push
dec
adc
dec
add
lea
add
ret
movsb
ret
out
jmp
dec
xor
mov
mov
push
pop
nop
mov
push
call
or
or
repnz
mov
jns
test
add
je
xor
pop
mov
xor
addl
ret
jl
inc
sbb
mov
adcb
pop
push
push
mov
in
out
clc
pop
ds
or
adc
fimull
fisubrl
add
pop
sbb
js
push
sbb
pusha
notb
xchg
push
mov
sub
outsl
add
ret
mov
add
cmp
push
or
add
jg
adc
adc
hlt
out
jmp
push
cmpsb
xchg
lahf
mov
fwait
out
jnp
je
add
dec
sti
jo
dec
hlt
ret
jge
xchg
je,pt
xor
jns
or
cmp
and
xorl
data16
push
add
fcoml
test
adc
punpcklbw
leave
dec
cmp
fsub
inc
or
add
jne
shl
add
cmp
mov
add
inc
ljmp
xlat
sub
add
test
pop
push
add
mov
cmp
xchg
add
add
cli
and
movsb
jg
push
push
nop
pop
xor
movb
sbb
shl
scas
dec
push
jo
mov
inc
addr16
jmp
test
mov
sub
push
addb
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
xor
fists
imul
adc
clc
push
mov
outsb
pop
cwtl
insb
xor
cs
cmc
add
inc
inc
je
outsl
outsb
add
popa
mov
add
adc
test
loopne
add
movsb
jge
jecxz
sub
rol
out
fs
add
or
dec
add
add
jno
add
pop
adc
xchg
ds
dec
or
or
pop
lea
les
cmp
xchg
outsl
test
dec
add
shlb
add
nop
dec
jmp
mov
cmp
jp
dec
dec
repz
data16
stos
jae
push
inc
inc
push
add
add
sbb
andb
movsb
or
xchg
pop
addr16
sbbb
add
test
pop
and
jne
cs
adc
mov
add
inc
cmp
scas
add
jne
xchg
jb
xor
jle
jns
inc
mov
testl
xchg
loopne
push
or
je
in
jb
rcrb
arpl
dec
hlt
jae
fcomps
pop
dec
cmpsb
js
and
sub
and
mov
ljmp
mov
dec
adc
and
push
add
icebp
mov
ret
and
out
cmp
add
testb
cmpsb
push
imul
imul
push
pop
and
dec
and
pop
repz
roll
cld
cmp
xchg
cltd
dec
add
jmp
mov
cmovnp
and
push
cld
jne
xchg
add
dec
mov
cmp
fmull
ret
add
ficoml
cld
lods
add
je
loop
add
add
jge,pt
icebp
inc
arpl
add
pop
xor
in
lock
sbb
fists
mov
stos
shrb
daa
iret
sbb
dec
or
inc
mov
sbb
jge
push
add
pop
bts
setle
add
cmpb
aam
add
pop
and
sbb
popa
adc
or
lea
rclb
mov
nop
add
sti
mov
divl
sarb
mov
leave
loope
notb
push
rolb
dec
xor
movsb
add
jno
aas
mov
sub
and
jne
cmp
cmp
movb
inc
mov
add
or
jle
add
jmp
les
cmpb
ret
inc
xor
cs
daa
sbb
mov
mov
paddsb
shrb
mov
jnp
add
mov
rorb
push
add
jae
push
sub
push
add
lods
fisubl
cmp
jmp
add
add
mov
dec
fstl
ss
inc
leave
adc
jae
pop
enter
cmp
cmp
mov
mov
scas
mov
test
mov
mov
outsb
jo
add
cmpb
pop
inc
mov
sub
dec
jecxz
sub
adc
jmp
push
cmp
mov
dec
pop
or
jle
add
sub
xorl
mov
fsts
outsl
imul
xor
adc
add
test
in
pop
ret
rorb
bound
add
jle
fistpl
iret
add
or
push
lret
data16
sbb
add
mov
and
icebp
and
cmp
sbb
add
push
adc
pop
es
sbb
psraw
sub
mov
add
pop
xor
add
mov
sub
icebp
in
and
pop
push
add
sub
test
push
orl
cli
add
push
inc
or
and
adc
sbbb
mov
lock
lods
inc
rolb
roll
sarb
rol
add
jmp
stc
inc
cmp
inc
rcll
or
inc
sbb
pushf
push
mov
sub
mov
push
dec
jbe
push
pop
dec
adc
jb
add
add
sbb
inc
repz
xorl
add
ficoml
ljmp
cmp
cs
add
dec
mov
int
dec
adc
cmp
lret
adc
jl
mov
inc
jl
add
stos
subb
add
int3
xor
and
into
mov
add
pop
aam
test
pop
int
les
popa
push
iret
ret
add
je
and
adc
cmp
cs
lods
cmovs
mov
decl
rol
add
lods
in
and
jae
test
pop
add
jbe
mov
and
push
sbb
push
pusha
mov
push
icebp
mov
push
mov
mov
cld
mov
dec
mov
inc
int3
add
jne
cs
add
mov
and
roll
sbb
add
pop
rolb
sbb
xor
ja
sub
jmp
add
cmp
add
rcrb
add
dec
adc
int
ja
pop
mov
mov
pusha
sbbb
and
jmp
mov
cmpsl
add
dec
sbb
pop
aad
jp
int3
andb
ret
sbb
push
xor
jo
imul
or
add
jle
inc
push
shrl
ljmp
nop
sbb
mov
jmp
fistl
push
clc
inc
cmp
cmp
pop
mov
pop
xor
daa
ret
loop
mov
ja
sbb
leave
inc
andb
sub
mov
dec
shrb
ljmp
sbb
pop
movsb
jno
and
add
nop
sub
loopne
pop
repnz
not
dec
sbb
pop
jbe
nop
xchg
mov
xchg
add
dec
xlat
aaa
push
jecxz
out
ja
nop
je
inc
cmp
mov
jo
pop
out
add
xchg
fldt
fmulp
add
call
add
cmp
sub
rclb
and
call
xor
mov
sbb
and
jbe
jge
jge
add
hlt
sub
flds
out
scas
adc
addb
aas
sbb
and
inc
add
or
or
cmpsb
ret
leave
add
hlt
adc
add
andl
sub
imul
idiv
mov
cld
mov
and
aam
cltd
test
xchg
xchg
cwtl
xor
and
mov
add
mov
jecxz
xor
add
leave
sbb
lds
mov
rolb
jbe
imul
fimuls
add
mov
inc
bound
lods
inc
addb
xlat
fadds
lods
add
xor
xchg
mov
add
or
sbb
test
int3
into
sbb
add
test
add
pop
mov
ror
movsl
push
sbb
nop
add
outsl
cmp
and
jo
lret
hlt
into
jo
add
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
es
xchg
jp
pusha
cmc
pop
out
jg
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
dec
daa
popl
fiadds
adc
push
push
rcrb
jmp
add
fs
aam
imul
pop
add
dec
jp
iret
mov
cmp
fadds
ds
push
jl
pop
scas
mov
pop
or
cmpl
leave
dec
dec
in
xchg
jo
add
xor
in
hlt
cmp
mov
mov
push
movsl
mov
popa
es
mov
sbb
clc
add
daa
mov
and
push
fwait
xchg
and
leave
push
add
and
aad
bound
or
xor
aas
push
cmpsl
add
enter
in
hlt
or
ficoms
add
or
jno
cmp
or
xchg
add
lock
mov
stc
dec
call
jne
or
fisttpl
or
fisubl
add
sbb
cli
movl
outsb
pop
shlb
add
loopne
shr
in
xlat
add
cmp
jb
ja
mov
repz
add
sbb
inc
loop
out
add
ret
adc
add
push
repz
shr
test
sti
or
cmp
or
jne
or
xor
add
add
ljmp
add
and
scas
stos
scas
hlt
xchg
das
add
sub
add
pop
nop
pop
shrd
lds
dec
mov
lock
add
xchg
cmc
bnd
add
fcomp
inc
xor
addl
mov
and
stc
and
jl
icebp
mov
imul
stos
shl
lds
loop
cmp
jo
push
sar
add
mov
cmp
int
lods
dec
jmp
js
icebp
rorl
call
add
test
xchg
rcrl
jne
add
aaa
test
loop
add
les
cld
ja
in
pop
add
push
movsl
xchg
call
inc
in
add
inc
shlb
add
push
shlb
add
or
mov
push
std
jmp
add
add
inc
cmp
inc
testb
data16
incl
mov
or
xchg
or
stos
cmp
imul
lods
inc
sub
or
adc
sbb
aam
outsl
sub
add
cmpsb
and
or
jno
minps
dec
verr
xchg
sbb
leave
and
sub
addr16
ljmp
and
call
adc
enter
jb
or
or
xchg
add
xor
inc
add
int3
xlat
add
jge
xor
ja
adc
sbb
inc
add
cmovnp
mov
or
idivb
add
adc
mov
add
cmp
sbb
add
call
add
sbb
push
jne
aas
xor
sub
dec
ja
push
adc
xchg
adc
pop
mov
add
sbb
mov
lods
sub
daa
dec
sbb
mov
add
sub
xor
rol
adcb
cmpsl
pop
mov
add
loopne
mov
pop
mov
cmp
aam
movsb
xor
push
stos
or
push
fsub
mov
mov
mov
orl
movsb
or
adc
dec
cmp
jnp
add
mov
jle
jne
cmp
push
add
popf
mov
dec
ja
ds
in
add
inc
mov
push
or
call
cmp
mov
adc
popf
add
cmp
xor
mov
mov
rorl
jmp
dec
loopne
inc
in
cmp
xor
cmp
xor
and
setno
sub
and
xor
aaa
pop
inc
js
lods
or
add
and
push
add
jb
cmp
sbb
call
addl
jb
cmp
andl
int3
enter
ja
mov
add
dec
and
in
jb
or
xchg
sbb
and
enter
pop
jb
or
sbb
and
push
in
add
cmp
add
mov
and
ret
jb
cmp
scas
hlt
add
and
insb
enter
fs
cmp
shlb
and
dec
or
dec
out
rcrl
dec
lods
xchg
xchg
movzwl
rolb
shl
adc
ret
call
sarb
mov
and
sbb
add
orb
cmp
xorb
scas
mov
jnp
xor
push
subl
imul
add
mov
mov
shlb
jae
in
xor
aam
or
icebp
xchg
repnz
enter
cmc
or
negb
out
add
stc
xchg
cli
enter
pop
jb
cmp
sbb
loope
sub
and
xchg
in
in
out
jb
cmp
adc
adc
jmp
gs
inc
in
or
in
sbb
inc
out
xchg
adc
shll
add
jb
cmp
sbb
subb
and
xchg
fcmovne
add
in
jb
cmp
sbb
shlb
and
xchg
add
enter
jb
cmp
sbb
leave
mov
xchg
lret
add
in
jb
and
iret
inc
inc
mov
mov
xor
mov
in
pop
test
and
in
jb
cmp
mov
dec
call
sbbb
aas
adc
inc
test
out
mov
cltd
loopne
or
cmova
mov
pop
rolb
xor
add
rorb
js
shlb
ja
add
popf
repz
fiaddl
adc
pushf
add
dec
gs
jo
pop
nop
stc
pcmpgtb
test
loopne
pusha
jmp
add
gs
outsl
add
cmp
clc
movsb
pop
divb
and
jp
and
or
dec
outsb
add
jno
lret
pop
cmp
inc
jp
and
or
pusha
subb
insb
add
nop
cmp
pop
mov
mov
fs
insb
jno
pop
pusha
enter
or
push
adc
add
or
xor
or
or
imul
mov
xchg
sarb
scas
outsb
gs
sbb
fimuls
loopne
dec
jbe
add
xor
sbb
inc
addr16
addb
or
pop
dec
lds
xor
enter
int3
popw
dec
mov
jbe
sbb
fs
add
sarb
clc
adc
mov
sarb
and
pop
rorb
xchg
push
insb
inc
popa
xchg
mov
outsb
pop
push
fs
lea
mov
punpcklbw
int
test
int
xor
push
repnz
xchg
add
stc
jp
mov
outsl
mov
fcoms
shll
adc
inc
inc
arpl
push
mov
pop
insb
popa
and
push
add
pop
sub
push
loopne
jns
add
in
nop
pushf
pop
push
jb
add
or
imul
int3
push
repnz
dec
je
cmp
loope
pop
hlt
add
inc
ds
xchg
or
lods
pop
in
popf
add
gs
push
std
inc
dec
popa
rcrb
lea
jo
add
insb
popf
pusha
inc
push
or
test
jb
jae
mov
pop
sub
lods
xchg
cmp
sbb
aas
nop
shr
adc
add
add
xor
push
and
in
mov
inc
ret
pop
ljmp
pop
or
adc
xorb
mov
stc
mov
jge
add
pop
dec
dec
and
into
imul
and
insl
jnp
add
pop
or
out
add
mov
fnstcw
xchg
fmuls
jge
push
daa
pop
pop
hlt
add
dec
sub
shl
clc
ds
or
mov
cmp
add
inc
jp
shrb
mov
inc
xor
sub
jmp
int
xchg
jbe
jmp
stc
addr16
push
mov
shll
add
in
leave
add
cmpsb
je
or
xchg
fimull
adcb
fsubl
mov
mov
sti
je
fmuls
xor
add
push
lods
nop
dec
call
push
adc
adc
adc
adc
fisubs
or
pop
inc
dec
jp
add
adcl
mov
adcb
lahf
and
addb
ja
jae
hlt
add
jge
cmp
adcb
xchg
sub
xor
add
lret
push
inc
cmc
sahf
push
addr16
shlb
ret
push
test
or
aas
pusha
ret
mov
shl
stos
adc
or
lods
and
and
and
lret
adcl
adc
dec
cld
mov
loop
mov
xchg
xor
sub
leave
sub
or
add
in
mov
mov
je
cmp
add
ds
dec
aas
sbb
hlt
dec
fidivrs
xor
push
add
add
hlt
and
mov
add
push
lock
mov
add
mov
jno
je
pop
push
inc
bound
cmpsb
dec
ds
mov
fidivl
aaa
xor
aad
mov
add
test
push
js
add
ror
dec
adc
cltd
pminsw
dec
iret
mov
stc
inc
xchg
sub
test
xchg
daa
loope
fmuls
fadd
mov
push
sub
xchg
call
sub
sbb
enter
xchg
negb
or
jne
in
aas
push
ljmp
xor
add
lahf
rcrb
fsubrs
stos
dec
nop
lret
pop
add
pop
sbb
push
nop
sub
pop
pusha
addb
xchg
rolb
jmp
cmpsb
jbe
repz
cmp
jg
mov
pop
lcall
fcompl
xor
and
push
cmc
push
aas
add
sbb
adc
add
push
divb
pusha
add
sarl
xchg
es
mov
mov
ljmp
addr16
sbb
ret
mov
xor
cmp
call
and
movsl
rol
lahf
add
cmp
or
and
add
addl
insl
dec
loope
adc
clc
hlt
push
cmp
push
add
sbb
dec
pop
sbb
lods
pop
sub
jo
sbb
add
push
adc
ret
call
das
subb
xchg
add
lock
incb
adc
enter
rorb
jmp
mov
add
shl
push
cmpsb
aas
std
roll
jecxz
mov
mov
add
out
in
in
out
cmp
dec
sbb
cld
sarl
pop
add
and
sar
add
clc
inc
cmp
adc
pop
pop
push
mov
lret
dec
mov
push
jne
add
push
add
imul
jb
bound
dec
lock
ret
adc
and
or
call
decl
shlb
add
adc
inc
push
cli
test
pop
or
pop
sbb
fsubp
cwtl
push
xor
jl
test
or
add
sub
test
lods
add
push
inc
pop
test
adc
mov
andb
jne
cs
dec
dec
inc
sub
adc
shlb
dec
je
loopne
add
cs
in
scas
add
or
icebp
jbe
push
lea
jg
nop
sbb
daa
add
and
lahf
adc
mov
add
roll
lea
por
inc
stos
shll
sar
sbb
pop
and
in
add
pop
out
jl
nop
sarb
push
call
mov
test
add
iret
jge
and
pop
add
mov
roll
dec
test
add
add
lret
decl
popa
add
stc
inc
or
and
push
add
mov
add
add
ss
inc
lea
repz
out
mov
pop
scas
push
inc
jae
add
shlb
inc
and
dec
lock
cmp
into
mov
lods
or
and
bound
aas
sub
add
dec
das
sbb
hlt
out
cmp
ret
push
orl
sbb
add
xor
or
lcall
and
jmp
adc
dec
mov
addl
loopnew
xor
jne
push
cmp
sbb
add
hlt
dec
jae
push
fisttpl
cmpb
jl
add
adc
roll
movsb
pop
xchg
mov
pop
rcr
xchg
push
faddl
lahf
add
mov
push
mov
add
jmp
pop
clc
leave
add
test
xor
sarb
getsec
imul
pusha
cmp
jae
mov
rorb
push
addb
xchg
in
jmp
mov
push
add
call
mov
jl
mov
es
je
xchg
dec
fsubrl
add
mov
cmp
push
pop
test
jne
lea
fisubs
movzbl
shr
and
sahf
pushl
add
loop
inc
stc
mov
lds
pushf
or
cltd
xchg
jns
shlb
xor
jl
add
inc
and
push
notb
movsl
xchg
push
rorb
dec
fsubrl
adc
iret
add
test
cltd
adc
leave
cwtl
push
int3
cmp
inc
cmp
push
aad
orb
jne
sarb
testl
je
leave
sbb
pop
mov
and
mov
add
stos
enter
jne
addps
out
loopne
cmc
sub
dec
add
pop
xchg
sub
pusha
pusha
mov
jb
pop
xchg
dec
push
push
mov
mov
fldl
or
shlb
lea
xorb
roll
or
add
pop
cli
jmp
mov
pop
inc
test
xchg
pop
shlb
pop
negl
dec
aas
setg
cmpsb
xchg
mov
into
add
bound
aam
add
push
js
imul
push
add
xchg
add
inc
xor
xchg
add
mov
ret
inc
mov
xor
and
cmp
dec
mov
lock
ja
add
or
push
jl
or
mov
add
pop
jle
add
push
pusha
or
xor
dec
add
stc
mov
push
add
inc
adc
inc
loopne
dec
dec
mov
mov
add
pop
pop
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
or
add
sub
mov
es
push
cli
add
or
call
pop
roll
flds
cld
and
xor
js
or
xchg
stc
dec
mov
add
arpl
popa
lahf
in
fs
or
or
shlb
loopne
add
pop
gs
xor
add
rorb
xchg
xchg
add
cmc
pop
sbb
and
fisttpll
add
push
add
inc
cmc
cmp
leave
sar
add
out
rcrl
lret
or
add
jecxz
movsb
jne
add
sub
test
out
or
cwtl
jnp
add
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
popf
aam
dec
xchg
cmpb
push
cmp
mov
outsb
add
arpl
dec
in
dec
mov
or
sbb
mov
sbbb
add
mov
outsl
enter
push
ret
xor
mov
in
cmpsl
fdivrs
add
mov
stc
popf
sub
je
add
fldt
fs
adc
int
ljmp
dec
dec
and
mov
sub
or
cmpsb
sbb
xor
sub
push
or
clc
mov
add
mov
xchg
clc
add
jl
inc
pop
pushl
jae
dec
or
add
inc
add
cmovno
fstpl
ret
adc
imul
sub
add
ret
add
add
or
rorb
and
fildl
fdivs
inc
or
sbb
mov
pop
mov
movsb
add
dec
fstl
add
push
pop
and
jp
add
popf
jno
cmp
iret
add
int
sti
imul
or
add
and
jo
jp
add
rolb
clc
pop
fwait
cmp
and
mov
adc
push
or
adc
xor
add
mov
mov
mov
adcb
xchg
inc
and
cmp
cltd
or
iret
daa
cld
add
aaa
push
and
add
imull
pop
xchg
or
test
add
loopne
mov
add
mov
mov
add
fisubrs
mov
psllw
je
xor
leave
out
sub
clc
add
dec
in
xor
std
dec
add
xchg
or
imul
jg
add
out
cmp
lds
and
popf
orb
xchg
mov
xchg
push
shlb
cwtl
aam
add
popa
jb
or
add
xor
insb
cld
xbegin
sbb
ja
adc
jle
jae
shlb
pop
dec
aas
add
in
push
mov
cltd
mov
icebp
insl
lds
add
mov
sbb
sub
lock
fwait
mov
add
jl
or
orl
add
adc
je
data16
add
test
test
and
js
imul
and
ja
adc
add
test
and
dec
std
adc
and
xlat
add
jg
insb
mov
aad
or
pop
in
mov
insl
and
fs
inc
jno
add
jl
sbb
jmp
jno
imul
in
mov
xor
lods
es
imul
jne
mov
or
imul
pop
inc
je
push
sub
lcall
dec
sub
add
add
or
sub
push
sbb
fimull
and
add
sahf
aas
xor
add
in
in
mov
push
sbb
jb
cwtl
and
push
inc
add
fistpll
add
push
add
icebp
andb
hlt
cltd
mov
push
aas
test
xor
push
dec
or
insb
pop
pop
mov
mov
pop
iret
ss
cld
mov
add
ret
fisttpll
loopne
test
push
movsb
jecxz
dec
add
or
sub
lret
cwtl
mov
xchg
in
rolb
imul
sbb
jecxz
mov
and
insl
mov
sbb
and
mov
and
mov
cltd
cld
jbe
jg
sar
or
fcmovbe
add
test
inc
adc
inc
adc
jmp
repnz
mov
add
cwtl
sbb
xchg
push
rcrb
pop
pop
sub
out
lods
nop
adc
xlat
add
add
xor
popa
in
in
insb
push
add
out
pop
pop
xchg
sub
mov
pop
add
mov
data16
pop
movsb
dec
fwait
mov
es
add
jmp
push
jnp
mov
mov
je
push
mov
mov
add
lods
js
push
adc
addl
ds
pop
repz
popa
sbb
add
push
dec
repnz
sbb
add
jecxz
dec
xor
dec
aas
out
call
rcr
push
add
sub
je
imul
add
mov
cld
sub
cwtl
and
push
in
gs
shrb
lock
xor
mov
mov
stos
adc
cwtl
in
push
mov
jge
sub
push
xchg
sbb
dec
dec
clc
loope
cmpsb
jno
orb
add
das
fsts
mov
pop
sub
dec
jne
mov
leave
sbb
fsub
add
ret
in
inc
push
add
cs
gs
jno
enter
add
jmp
inc
cmp
add
dec
xor
jecxz
adc
repz
stos
in
push
pop
aas
cmp
fbld
xor
ret
loop
push
adc
or
jno
mov
test
mov
cmpb
testb
daa
out
pusha
and
push
jmp
cmp
dec
in
xchg
repnz
mov
shlb
rorb
add
dec
adcb
add
jg
in
mov
push
jmp
inc
shrb
aam
adc
scas
cmovae
add
cmpb
jb
pop
push
inc
inc
or
dec
hlt
add
mov
add
sub
push
clc
into
jns
loop
add
sbb
mov
fadds
repnz
add
aad
add
test
jecxz
sti
push
lea
hlt
mov
cltd
out
adc
adc
mov
sub
xor
jecxz
pop
loop
cmpb
mov
add
bt
das
jae
cld
sub
lahf
clc
sub
add
dec
add
add
cwtl
add
sbb
or
adc
add
clc
sti
rorb
push
add
pop
xor
add
ja
addb
hlt
cmpsb
push
jmp
sub
or
loope
or
aaa
dec
shrl
add
rolb
ljmp
or
ljmp
inc
xor
dec
ret
mov
test
and
inc
pop
std
cs
xchg
lsl
and
outsl
sbbl
mov
xor
and
dec
mov
mov
ret
or
xor
mov
dec
es
lea
lea
cmp
iret
sub
outsl
sub
addr16
xchg
mov
jae
add
add
add
xor
xchg
push
mov
test
pop
les
inc
inc
lret
movsl
pop
add
fmuls
je
and
push
addr16
movsl
add
ja
imul
popa
das
push
call
fiaddl
scas
and
mov
mov
sub
add
and
leave
push
or
mov
loope
jne
jmp
cmpb
scas
mov
jp
sub
jl
or
dec
jg
je
jnp
add
jmp
push
pop
add
pop
cwtl
sbb
push
enter
push
inc
add
sahf
jne
mov
mov
ljmp
ror
adc
loopne
adc
add
jne
fs
add
inc
xor
mov
add
hlt
test
shlb
cmp
ljmp
push
jg
lahf
pusha
ljmp
je
xor
call
pop
jle
jp
add
push
adc
add
ds
sub
popf
loope
int3
lea
add
fmuls
loop
xchg
in
push
cwtl
rcrl
or
pop
xchg
or
test
lret
add
inc
mov
push
stos
add
dec
mov
jne
sub
or
or
push
add
sub
daa
add
add
popa
sub
xchg
add
cmp
call
repnz
shll
cltd
and
pop
fstl
rolb
add
loop
xor
cli
fisubs
pop
inc
loopne
lret
aas
mov
fwait
mov
ljmp
fcomps
mov
add
fimull
or
call
out
xor
mov
dec
xchg
cld
rolb
mov
sbb
jo
adcb
lock
add
cmpsb
dec
or
dec
int3
mulps
pop
sub
cmp
out
add
clc
lds
mov
add
pop
and
adc
lods
insb
or
stc
aaa
aas
push
add
mov
fcoms
mov
daa
lds
add
jo
inc
dec
das
push
jnp
cmp
add
sbb
insl
adc
hlt
or
add
sub
cwtl
sbb
test
xchg
fcmovu
leave
inc
ret
add
and
or
mov
dec
lds
jns
add
pop
jmp
inc
add
dec
adc
jns
aas
pushf
sbb
inc
inc
shlb
or
scas
adc
hlt
aad
pop
lds
jmp
pop
jg
inc
inc
push
add
add
popf
mov
add
js
test
fs
mov
pop
push
add
xor
jmp
mov
add
enter
setg
ljmp
mov
test
andb
or
or
jp
adc
cmp
jle
fnstsw
jle
add
scas
pop
int3
or
add
add
pushaw
xchg
cmp
jecxz
shlb
jnp
pop
mov
cmp
out
cmp
aam
mov
sub
push
mov
pop
dec
push
xor
clc
call
inc
sub
and
cmp
pop
clc
add
inc
lods
mov
xchg
fmull
call
adc
jno
pop
je
ja
sub
repz
cmp
ret
mov
mov
std
add
xor
gs
sub
fildll
je
sbb
enter
sbb
jo
push
or
loop
push
or
imul
lock
add
pop
sbb
jle
filds
ret
das
out
dec
pop
mov
add
insb
xor
ja
push
aad
xor
and
adc
call
inc
mov
es
aam
sbb
hlt
sub
mov
pop
xchg
pusha
adc
add
pop
mov
xchg
enter
sbb
or
ret
or
sbb
jle
fmuls
fnstcw
mov
push
adc
xor
jg
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
frstor
int3
movsb
add
daa
add
hlt
inc
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
sti
loopne
jle
pop
adcl
inc
out
adc
in
or
orb
inc
inc
cwtl
mov
jnp
pusha
aam
repnz
jo
addr16
jne
cld
add
inc
dec
jl
lods
jae
cmp
sub
adc
sub
lea
add
cmp
ficoms
insl
xchg
dec
jns
movsb
sbbw
push
sbb
mov
mov
add
adc
jp
pop
jno
xor
add
xchg
or
sbb
mov
pop
ljmp
jo
test
lcall
add
sbb
jb
inc
and
bound
es
out
add
mov
and
add
ss
sbb
inc
les
notb
mov
pop
call
sbb
lock
aam
sub
movsl
push
jbe
lldt
jl
dec
clc
jmp
ds
cmc
push
mov
out
push
add
adc
and
push
mov
fcompl
ds
in
adc
stos
sbb
sbb
jbe
cmpl
aaa
jle
and
jno
add
xor
insb
xchg
nop
notb
sub
mov
push
jnp
add
sub
pushf
je
fildll
test
add
fwait
cmpsl
xchg
test
or
cmc
mov
sbb
add
mov
push
pop
and
fmul
cmp
push
add
cli
pop
pop
call
sub
sbb
pop
ret
je
pop
daa
push
fmuls
mov
or
add
outsb
push
add
cli
push
out
icebp
ds
jno
maskmovq
nop
mov
movsb
mov
adc
mov
gs
pop
and
add
add
shrb
and
sbbb
call
and
test
push
pop
imul
xchg
inc
add
mov
jmp
add
sub
test
add
aad
ret
pushf
or
and
jne
jmp
roll
ret
add
inc
sbb
sbb
fildll
adc
or
lea
sbb
push
gs
push
add
mov
xor
inc
mov
add
sbb
pop
cmpsl
js
cmp
dec
pop
shlb
or
and
adc
push
iret
cmp
pusha
mov
in
sub
mov
mov
pop
sbb
fcoml
lret
int3
lea
add
add
leave
or
add
outsl
js
lods
inc
test
popa
lea
push
add
push
fmuls
push
dec
sbb
sbb
cwtl
adc
lods
icebp
and
xor
sahf
jl
sub
xchg
jbe
adc
das
jo
inc
mov
jmp
add
lods
or
sbb
add
loopne
jb
inc
or
test
dec
xchg
adcb
sub
idivl
and
cmp
aaa
or
adc
es
jo
add
and
je
add
shlb
add
inc
in
in
add
fldenv
clc
push
or
adc
js
add
mov
ret
pop
lcall
es
add
dec
rorb
add
in
shll
outsl
xorl
xchg
add
dec
bound
mov
mov
push
xchg
call
mov
popf
addl
add
aad
pop
and
inc
orb
jl
cs
std
jmp
or
adc
nop
mov
add
js
enter
in
and
inc
cmp
jg
scas
jno
dec
test
test
add
dec
jmp
insb
mov
pushf
push
sub
ficoms
push
mov
in
lahf
add
jmp
xchg
jle
je
xchg
and
pop
pop
inc
mov
add
mov
insl
jp
les
testb
pop
test
sub
add
sub
shlb
call
xchg
scas
mov
pop
or
mov
add
sti
loope
xchg
or
sbb
lock
add
insb
popa
push
xchg
aam
mov
sub
popw
add
xlat
cmpsb
push
outsl
fucom
popl
pop
std
into
inc
dec
stc
arpl
or
movsb
das
cmp
addb
mov
ss
push
add
add
push
mov
loopne
add
enter
fiadds
jl
xchg
pushf
jo
loope
add
scas
mov
nop
mov
and
imul
setl
and
addb
xor
add
subb
adc
insb
repz
stc
std
xor
add
inc
push
ud0
cmpsl
fadd
and
push
mov
inc
add
sub
adc
sub
add
jle
shr
stos
mov
mov
scas
lods
push
cmpl
mov
and
sahf
cmp
dec
dec
test
add
jmp
test
ja
xchg
cmp
lock
dec
js
jge
push
hlt
es
and
adc
jbe
pop
aas
add
sbb
sbb
test
pop
add
jne
and
and
inc
add
lock
sub
jle
adc
cld
mov
jmp
xor
xchg
mov
mov
add
lods
sub
adc
add
jge
andb
push
add
cmp
cmc
jne
push
cmp
rolb
movsl
and
mov
push
cmpl
pop
pop
popf
out
std
mov
call
and
push
dec
ds
ret
and
mov
movaps
popf
xor
mov
mov
call
inc
rolb
and
repz
and
inc
inc
mov
adc
add
adc
jae
push
sub
mov
data16
into
movsl
clc
xchg
adc
add
cs
push
mov
das
out
inc
cld
mov
add
jg
and
orl
insb
hlt
dec
je
or
sbb
or
addr16
lret
int3
add
mov
inc
mov
lahf
push
add
mov
pop
rolb
mov
or
dec
ficomps
xchg
aas
push
xchg
loopne
jbe
cmpsb
add
or
repz
add
call
add
stos
mov
addl
inc
icebp
xor
ficoms
ss
push
add
sub
jmp
dec
and
add
hlt
or
inc
add
shl
push
decb
add
jmp
fcomi
lds
sub
sub
dec
cltd
jb
enter
cmp
add
cld
add
scas
ret
mov
fwait
push
inc
test
jle
dec
pop
cltd
jl
subb
adc
sti
sbb
sahf
aad
imul
adc
mov
fldenv
add
outsb
cmp
sbb
lea
push
add
push
mov
arpl
dec
ret
testl
test
sti
pop
push
jg
or
clc
jne
icebp
inc
push
adc
add
fs
jmp
sbb
jne
mov
inc
std
loopne
test
jmp
mov
add
inc
mov
add
imul
dec
adc
rorb
push
addl
push
jb
or
and
mov
add
xorb
or
lcall
jge
add
cltd
pop
nop
add
mov
xchg
enter
cld
xchg
cmp
sahf
push
jl
adc
jg
add
jmp
pop
push
add
jo
in
addb
add
push
lock
jge
hlt
add
xchg
and
xchg
lods
add
pusha
jae
dec
in
pop
ljmp
into
inc
mov
pop
add
dec
inc
cmpsl
add
mov
les
mov
loope
mov
call
add
andl
add
sub
or
insb
xchg
lcall
enter
pop
popa
shrb
rolb
xchg
add
out
addb
xor
sbb
xchg
jmp
jae
in
xor
repz
repnz
adc
xor
push
jmp
loopne
or
add
and
add
enter
jg
pop
inc
or
orl
or
adc
jns
mov
fcoms
nop
incb
xchg
movsl
sbb
or
mov
and
adc
mov
add
cmpl
popa
jg
and
xor
sbb
add
and
lock
add
jne
pop
sub
in
and
out
test
cld
add
dec
lea
cs
mov
notb
add
mov
xchg
and
mov
les
xchg
push
ror
enter
in
mov
shlb
adc
sbb
mov
orb
cwtl
imul
jg
jnp
cmp
mov
jle
cmp
add
sbb
into
mov
mov
inc
mov
mov
outsl
call
pushl
fstps
xlat
arpl
mov
mov
cmp
rclb
add
or
lret
or
movsl
pop
sbb
add
pop
ret
stos
out
cmp
xor
addl
lods
scas
je
lock
pop
loopne
mov
xor
or
repnz
add
adc
xchg
push
add
xor
mov
testl
adc
scas
aaa
add
fistl
and
jne
mov
test
xchg
je
arpl
aas
lret
mov
and
test
cld
das
in
jl
add
xchg
add
adc
pop
or
add
shrl
and
test
clc
sahf
mov
jns
add
xor
mov
inc
dec
nop
cmp
frstor
mov
mov
add
cmp
add
add
ss
pop
lods
sbb
aam
test
or
cld
test
pusha
inc
sbb
sub
mov
mov
add
and
popa
in
xchg
pop
mov
mov
scas
pop
and
mov
daa
add
lret
add
cmpsl
or
add
outsb
ficompl
lods
xor
test
xchg
data16
pusha
mov
adc
push
fs
cld
outsb
jmp
dec
mov
add
jl
mov
xor
or
andl
nop
es
add
or
cmp
add
in
adc
stos
sbb
inc
fsubs
out
ret
pop
pop
jns
imul
add
testb
dec
sarl
xchg
imul
nop
sub
leave
push
adc
sub
xchg
cmp
xchg
mov
or
add
sub
sbb
xchg
push
push
adc
in
pop
negb
add
or
repz
les
inc
sub
sbb
incl
sbb
add
inc
shll
add
jnp
add
jle
mov
pop
push
add
adc
fwait
and
outsl
add
imul
sbb
mov
mov
rcrb
add
xor
fildl
mulb
lret
add
aas
shlb
sub
push
int3
inc
cs
shlb
roll
add
add
xchg
jg
add
jp
pop
test
jmp
decl
add
add
testb
add
cmp
test
inc
jge
cltd
or
pop
loopne
mov
add
lahf
mov
jge
adc
cli
add
cs
sub
inc
in
out
mov
hlt
cmpsb
jnp
addb
jl
in
add
js
jge
lea
add
lds
out
add
arpl
test
and
in
cmp
cmp
or
add
xlat
ret
pushf
adc
clc
sub
push
sbb
add
inc
in
ret
jne
xchg
add
dec
cmp
incb
imulb
movsl
fstl
shr
mov
sub
pop
adc
adc
call
xor
add
push
clc
jle
push
add
js
sub
adc
inc
in
jp
pcmpeqw
sti
inc
aam
daa
lods
scas
add
push
insb
movsl
mov
inc
push
or
pop
call
push
inc
stc
add
mov
mov
retw
pandn
sarb
repnz
add
adc
add
cmp
cmc
xchg
dec
push
pop
jae
dec
loop
cmp
stos
add
setg
lret
lds
mov
loopne
lret
dec
addb
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
dec
int3
lret
cld
out
add
repnz
shrb
aam
sarb
pop
int3
test
mov
icebp
orb
push
push
cmc
and
jecxz
and
test
mov
push
xchg
sub
push
roll
adc
int
add
and
in
add
jbe
add
sbbb
sub
add
xchg
add
jb
add
loop
loopne
sbb
dec
mov
mov
push
mov
repnz
pop
adc
push
xchg
push
outsb
xchg
sbb
mov
das
mov
cmc
rcr
mov
pop
cmp
sub
add
add
sbb
aam
test
jbe
sbb
mov
inc
cld
add
dec
insl
jo
mov
and
add
mov
hlt
ret
pop
shl
ja
cld
or
cwtl
push
hlt
cmpsb
daa
push
enter
inc
aam
jmp
mov
lret
sbb
les
mov
mov
pop
fsubl
push
adc
push
rol
hlt
mov
clc
inc
mov
push
cld
push
inc
pop
inc
mov
push
add
adc
adc
mov
stc
or
and
and
stos
mov
pushf
ds
add
fnstenv
sbb
mov
das
jb
popf
cmp
and
sub
out
mov
add
hlt
or
add
test
and
outsb
in
shlb
enter
ltr
nop
cmp
movsl
test
sbb
push
adc
add
cmc
and
cmpl
pop
ret
jmp
mov
test
call
inc
icebp
sbbb
and
sub
mov
cmp
pop
or
add
fsubl
add
inc
imul
add
popa
arpl
inc
xor
inc
mov
mov
add
cs
adc
add
cld
loope
enter
mov
shlb
pop
ds
dec
subb
cmpb
cwtl
sete
dec
popa
and
and
jp
iret
cli
jl
subl
adc
or
push
movsb
xor
cmp
xor
adcb
and
mov
sarb
or
cwtl
xor
mov
xchg
es
idivl
add
mov
add
in
sub
clc
sbb
fdivr
lock
in
or
call
dec
int3
sbb
outsl
adc
test
popf
call
and
xchg
shr
mov
loope
insb
in
aad
cltd
push
mov
and
rorl
adc
and
loopne
cmp
push
xor
adc
insl
pop
pushf
sub
xchg
push
loopne,pt
mov
mov
pushf
pusha
lahf
adc
dec
setg
scas
fs
or
cmpsl
repz
sti
adc
adc
mov
fistps
xor
mov
aas
xor
nop
jg
insb
adc
test
sbb
dec
jl
jle
xorl
mov
jg
add
out
sub
cmp
push
push
dec
dec
inc
inc
inc
xchg
xlat
es
mov
dec
fildl
stc
mov
pop
pop
mov
cmp
gs
jge
mov
jle
cmp
dec
or
sub
std
addb
jge
add
ljmp
inc
movsb
lock
cld
popf
add
lds
mov
fsubrp
inc
lahf
sbb
scas
jmp
mov
and
jne
mov
adc
sti
add
add
ja
xor
mov
add
pop
aaa
scas
pop
ljmp
outsb
add
rcrb
mov
add
jne
mov
rorb
arpl
insl
cwtl
dec
sub
cmp
inc
add
cmp
jl
push
sbb
leave
pop
sbb
punpckhwd
xchg
mov
and
in
jmp
sbb
stos
xor
xchg
je
clc
sbb
mov
loopne
and
stos
push
pop
lret
or
pushf
or
xor
push
aas
add
sub
mov
loopne
and
lret
adc
sbb
or
repnz
xchg
mov
mov
add
mov
stos
or
inc
xchg
jmp
nop
add
jge
cmpsl
cmp
mul
mov
stos
xchg
push
add
xor
in
add
aad
or
jmp
ds
push
adc
pop
adcb
add
push
loop
add
add
sub
fistl
roll
mov
div
mov
add
mov
dec
je
dec
add
mov
xor
sbb
ret
jecxz
aas
jns
pop
add
daa
sub
idivl
ret
mov
xor
and
and
add
cmp
fnstenv
add
int3
fisttpll
daa
mov
mov
cmp
je
push
push
in
and
nop
sub
sub
or
lcall
syscall
pop
pop
inc
loop
scas
push
ret
rolb
das
test
add
sbb
cld
inc
sbbl
and
jg
cmpsl
insl
or
and
mov
lahf
lock
sub
inc
add
and
clc
xor
mov
cli
cs
push
cmp
cli
insb
add
xor
mov
xlat
jne
xor
xchg
mov
add
mov
push
mov
addb
inc
add
xchg
jmp
pop
scas
jle
or
pusha
jmp
push
dec
lock
mov
call
pushf
adc
pop
pop
cwtl
nop
rolb
cmp
mov
scas
icebp
add
xor
aaa
dec
fimuls
pop
or
stc
add
adc
jne
and
push
add
sbb
adc
out
jecxz
outsl
xor
scas
jp
add
xor
add
int3
sub
mov
ljmp
sti
dec
sub
or
jecxz
sbb
and
mov
xchg
adc
push
pop
out
loop
mov
loopne
add
or
inc
or
rolb
lods
cmp
movsl
shlb
add
mov
add
mov
add
push
hlt
push
mov
mov
and
pushf
add
daa
xor
jb
je
add
ss
clc
inc
clc
mov
jmp
inc
inc
int
outsl
mul
add
addb
jbe
xor
add
push
mov
and
sub
mov
add
or
sti
jmp
add
testb
sub
test
ljmp
testb
or
in
ret
nop
mov
xchg
adc
movsb
push
rcrb
stos
cmpsb
and
aas
bound
sub
faddl
sbb
ljmp
add
or
cld
cmp
mov
clc
sub
adc
jbe
repz
out
and
dec
sbb
inc
push
icebp
dec
xor
into
subl
mov
test
pmuludq
shll
cld
mov
jne
fsubl
inc
inc
add
int
add
mov
xchg
add
and
xor
pop
jmp
out
push
ret
fiadds
fsubs
std
arpl
out
mov
dec
add
jmp
or
xor
les
in
adc
push
inc
or
inc
and
or
mul
cld
xor
bsr
xlat
loopne
insb
jmp
push
add
pop
inc
addl
push
jle
pop
mov
sub
repnz
jne
push
mov
dec
rolw
jecxz
mov
cmp
mov
xor
insl
pop
movsb
xor
leave
or
inc
shlb
add
or
testw
adc
add
add
dec
inc
adc
add
push
fldt
adc
pop
aas
or
imul
clc
in
test
fsubs
loope
pop
dec
xchg
jo
add
sub
fsubs
fldl
cmp
add
int
inc
pop
out
clc
filds
ds
jnp
mov
add
fucom
mov
and
mov
xor
jmp
mov
clc
lsl
add
cmpb
sbb
or
add
aas
cld
jg
sbb
orb
push
and
pop
in
jmp
add
cmpsb
xor
mov
sbb
and
inc
mov
or
ljmp
add
dec
ret
add
mov
cmp
add
or
mov
add
adc
jne
xchg
ljmp
add
xor
jl
add
sub
addl
or
push
add
sbb
lock
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
aas
lock
notl
or
sbb
ret
les
jne
add
lret
jmp
test
add
stos
and
push
and
inc
sbb
lea
xchg
push
adc
cmp
aad
cmpb
sub
mov
jmp
dec
stc
leave
lock
push
aad
dec
dec
push
inc
lock
icebp
push
rcr
loop
sub
out
add
xor
cmpsb
sarl
incl
cwtl
lds
or
add
jmp
sbb
cmp
sub
adc
je
aas
sub
add
sbb
xchg
call
sub
rolb
or
and
add
ret
popa
rclb
stc
inc
add
fchs
xchg
addl
aas
jmp
and
add
mov
std
loopne
ds
adc
loopne
ret
lods
out
add
lret
dec
cld
cmp
orb
jae
fimull
nop
repz
push
push
adc
ljmp
daa
pop
mov
dec
xchg
sub
jns
cmp
lahf
xor
sar
add
sbb
adc
cmp
adc
mov
push
jne
lret
popa
mov
es
les
push
add
and
add
push
test
inc
sbb
shrl
add
inc
pushf
mov
cmp
mov
add
rcll
sub
push
mov
jl
xchg
xor
sub
or
push
and
mov
clc
sub
add
int3
or
lret
jns
stos
das
push
loope
mov
jae
xchg
dec
movsb
xchg
pop
add
and
ljmp
add
adc
xor
sbb
clc
fldl
add
jo
scas
xchg
adc
fwait
je
add
xchg
cmp
jmp
ficoml
jo
js
and
rolb
bswap
ret
adc
and
jl
fadds
mov
pop
push
or
sub
pop
ljmp
dec
cmp
xor
fninit
push
not
mov
cmp
sarl
add
loopne
add
add
call
out
cmp
sub
test
pop
inc
cmp
cmp
or
cmp
or
jl
add
xor
mov
addb
iret
fdivr
imul
pop
add
test
jbe
arpl
add
lret
enter
stc
push
add
dec
andl
sti
mov
cmp
ja
mov
adc
push
adc
cli
jae
pop
shll
add
call
adc
inc
mov
sub
jb
pop
jecxz
adc
int3
loopne
jne
mov
sbb
dec
leave
inc
and
movsl
std
cmp
sbb
arpl
loop
int
les
fnsave
add
stos
push
ret
orb
sub
into
dec
pop
out
mov
daa
lea
dec
add
jmp
leave
addb
xor
xchg
add
daa
or
ret
lahf
sub
je
xchg
add
shlb
add
and
add
test
dec
clc
repz
ljmp
push
and
mov
mov
or
adc
xor
and
ja
add
dec
loopne
incb
test
rorl
nop
add
add
mov
aas
sbb
daa
movzwl
mov
push
xchg
mov
jl
pop
push
add
pop
cmp
mov
bnd
xchg
jb
insb
add
mov
ret
inc
inc
push
std
dec
mov
into
mov
mov
es
push
je
nop
ds
or
out
addl
push
jne
js
add
add
test
gs
pop
cmp
cmp
les
dec
sbb
add
jne
add
mov
fildl
sub
dec
pushf
in
rcrl
add
push
jne
jno
jp
mov
lods
adc
sbb
loope
setne
and
hlt
loop
add
jecxz
rorb
shrd
sbb
xor
lds
jne
aam
and
sbb
cmpb
xor
xor
lock
xor
cmp
mov
imul
xor
bound
mov
dec
xchg
cmp
daa
mov
lds
int3
addr16
pusha
or
jle
leave
in
mov
stc
lahf
add
imul
ljmp
jmp
push
divl
add
or
add
jmp
and
inc
pusha
es
pop
in
movsb
aas
cli
or
xchg
xchg
test
je
clc
out
jl
jl
add
mov
mov
pop
inc
inc
inc
inc
inc
add
dec
dec
push
dec
dec
dec
dec
add
push
push
push
add
push
mov
pop
popa
dec
bound
data16
push
insb
sbb
outsb
outsl
add
jb
je
cmp
add
jp
xor
xor
in
ss
cmp
sbb
das
cmp
sub
cmp
add
cmp
and
daa
orb
adc
mov
sub
add
cmpsl
shrb
add
bound
pusha
sub
cmp
cld
lahf
ds
ss
hlt
cmpsb
in
sub
xor
and
cld
push
add
push
mov
insl
inc
dec
lods
inc
pop
clc
cs
adc
add
cmp
or
sarb
push
mov
fcmovbe
sahf
fistps
int3
or
lret
push
push
push
scas
bound
add
mov
or
cmpl
sub
add
xchg
es
xorl
sub
enter
jl
inc
pop
ja
imul
and
sub
mov
roll
pop
bound
inc
dec
ret
out
push
data16
mov
jne
add
inc
lock
jne
fs
and
daa
push
pop
out
pop
adcl
stos
movb
lahf
jg
push
mov
jle
sbb
sub
call
fcmovu
jge
rclb
movsb
dec
push
pop
inc
movmskps
add
jg
add
lahf
lcall
add
add
add
jbe
pop
sub
jl
push
push
aas
out
fs
add
testb
add
inc
icebp
rolb
loop
xchg
aas
adc
jl
inc
jne
loope
bswap
orb
adc
add
cwtl
sbb
adc
popf
rcrb
decl
mov
add
jne
roll
adc
out
or
ret
add
jmp
mov
sti
cmp
cmp
repz
cmc
pop
flds
sub
nop
mov
add
add
mov
daa
fprem
and
repz
movsb
mov
insb
dec
pop
inc
pusha
sub
stc
jp
mov
add
aam
in
cs
mov
idivl
bound
add
adc
mov
adc
shrl
xchg
inc
sar
out
in
imul
mov
int3
adc
add
ja
shrl
je
add
pop
push
xor
jb
or
push
jbe
cs
inc
cs
fucomp
shlb
push
adc
adc
pop
rcrl
icebp
sbb
sub
clc
sbb
mov
push
cmpb
lret
add
pop
pop
xor
out
lahf
inc
shl
mov
adc
push
add
pop
mov
cmp
xor
mov
xchg
or
lret
add
cmp
mov
sti
jb
xchg
cmpsl
stos
or
push
add
pop
adc
lret
sub
fs
jle
add
cmc
enter
sbb
cmp
add
dec
pop
inc
mov
bswap
test
xor
iret
arpl
dec
mov
dec
or
mov
pop
mov
out
jl
dec
addb
lret
sbb
add
je
stos
in
add
pop
out
xor
movsb
cmp
movsl
xorb
mov
mov
cwtl
lcall
mov
ret
push
mov
mov
pop
mov
dec
fs
neg
add
jne
xor
loopne
cmp
add
pop
jle
in
cmp
mov
push
or
in
add
es
icebp
add
jae
xchg
sub
add
pop
das
push
into
sbb
fildl
out
push
mov
jne
dec
inc
and
fbstp
add
mov
add
pop
mov
inc
inc
lds
push
dec
push
add
bswap
in
add
adc
pushf
add
mov
icebp
push
sub
add
adc
rolb
or
jl
push
add
add
dec
adc
fimull
fsts
add
in
pop
cmc
add
bound
mov
jbe
add
cs
je
mov
mov
inc
xchg
mov
jo
xor
xchg
add
mov
es
sbb
mov
dec
pop
cmp
rolb
sarl
fsubs
push
add
movb
jg
xlat
fs
scas
add
jl
in
add
push
jns
cld
jne
add
push
leave
add
jecxz
push
sub
xchg
jl
pop
dec
jl
add
push
pop
add
cmp
pop
adc
cmp
or
fmull
inc
cld
xor
or
lret
sbb
add
add
add
mov
rolw
jmp
push
fdivs
loopne
and
mov
add
xor
enter
add
push
pop
not
ret
add
add
shlb
cwtl
mov
pop
cmovle
stc
enter
repz
fisubrl
sub
lods
add
cld
shll
pushf
rolb
adc
mov
push
fcomip
movsb
clc
pop
shr
add
xchg
faddl
mov
sub
mov
bound
cmp
test
sbb
push
add
and
and
call
mov
fsub
pop
filds
jge
mov
jmp
adc
fwait
sbb
adc
or
enter
and
push
jae
cld
in
lock
notb
pusha
cmp
dec
jo
add
jmp
inc
inc
cmp
jb
pop
icebp
daa
roll
sbb
mov
clc
add
enter
cltd
dec
in
add
fmuls
lods
cmp
incl
pop
jl
movl
sub
lahf
add
adc
add
inc
adc
jecxz
or
add
jne
movsl
stos
nop
add
das
gs
jmp
aad
out
les
add
int3
mov
das
into
mov
jge
mov
lds
xor
inc
pop
mov
pop
rorb
mov
pop
push
dec
mov
add
mov
int3
and
or
into
sub
sub
leave
iret
loopne
outsl
mov
xchg
sbb
fcomps
adc
xchg
lock
mov
mov
pop
mov
xor
and
pop
out
mov
inc
pushf
add
lret
xchg
rolb
and
adc
mov
inc
mov
cmp
in
in
lret
and
test
cmp
push
sub
xor
daa
out
add
dec
mov
shlb
mov
dec
jecxz
test
lock
cmpsl
adc
or
mov
add
pop
mov
jae
add
inc
loopne
movsl
insl
add
aad
scas
and
add
out
and
aam
mov
outsl
stos
les
mov
test
sbb
ljmp
xchg
int3
leave
lea
lret
mov
push
sbb
fsubl
popf
xchg
cmc
inc
out
or
jne
sub
mov
into
mov
inc
rcl
out
loop,pt
imul
data16
add
or
cld
or
mov
jno
add
jg
je
int3
push
and
sub
pusha
xlat
add
push
enter
sbb
add
jmp
nop
xor
mov
sub
push
pop
add
movsl
scas
mov
mov
dec
loope
imul
hlt
xchg
add
das
mov
int3
ja
add
incb
dec
cltd
bnd
fimuls
dec
cwtl
loopne
mov
mov
push
mov
std
jmp
jo
or
jo
pop
add
fsubl
xchg
js
and
or
and
and
mov
push
and
inc
sub
int
das
enter
add
inc
fisubl
add
push
cmp
xchg
dec
dec
dec
mov
repnz
inc
xor
ds
roll
cwtl
sbb
call
test
inc
jge
mov
add
popa
loopne
and
or
push
sub
loop
loopne
push
and
pop
das
pop
adc
and
inc
mov
loopne
pop
push
dec
or
lods
add
fwait
and
push
add
pushl
push
loopne
add
mov
lret
iret
sbb
pusha
testb
sub
xor
sahf
cltd
clc
fsub
cli
sbb
push
xchg
mov
dec
or
pop
add
sbb
fidivs
or
negb
add
or
and
add
fs
add
daa
cmpsl
pop
ds
sbb
add
xor
into
das
shr
adc
push
inc
xchg
xor
or
in
ret
mov
add
aad
pop
jl
loope
leave
pop
imul
adc
fsts
ret
inc
ret
enter
push
daa
incb
loop
push
cmp
or
shrb
in
roll
enter
mov
daa
dec
out
sar
jno
enter
jns
add
imul
insl
jae
outsb
into
call
cmp
xor
nop
add
sti
scas
inc
nop
xor
ss
in
add
pop
push
adc
xor
mov
pop
loopne
out
adc
cld
mov
mov
pusha
sbb
imul
test
and
add
push
dec
xchg
mov
adc
and
add
stc
xchg
inc
mov
add
mov
jne
test
lret
and
add
les
js
dec
jne
adc
shl
imul
and
cmp
add
push
sbb
jmp
in
add
idivb
addb
les
popf
xor
fldl
je
sub
mov
out
rclb
sbb
pop
dec
xchg
mov
jbe
push
cmpsl
clc
cld
mov
push
cmp
pop
add
add
jbe
clc
dec
call
or
pushf
adc
or
shrl
sub
and
sbb
loopne
lds
xchg
and
je
jl
add
dec
jle
adc
hlt
and
dec
and
cwtl
std
push
dec
push
mov
xchg
sarb
lds
pop
sub
add
adc
icebp
add
mov
mov
dec
jecxz
inc
pop
jge
dec
pop
mov
jne
js
lea
outsl
push
mov
test
or
adc
mov
movsl
mov
push
gs
int3
add
mov
xor
movsl
mov
call
test
lock
sbb
xchg
push
mov
rorb
mov
sbb
insl
mov
add
xchg
jmp
inc
dec
or
inc
loopne
xor
rolb
inc
rol
ja
add
add
xchg
test
mov
push
xchg
setp
jp
or
mov
mov
push
jge
mov
in
filds
aam
push
pushf
and
adc
jmp
add
adc
pop
aam
jl
mov
add
jns
cld
in
inc
insb
add
mov
push
add
fwait
negl
push
pusha
faddp
mov
or
loope
xchg
fcoms
add
add
int3
add
testb
jp
test
push
out
sbb
idivl
mov
fdivrp
loop
dec
add
jecxz
je
and
add
aad
in
subb
mov
les
cmp
movsb
push
push
mov
test
pop
cld
jl
add
adc
inc
repnz
push
mov
sub
stos
add
sub
popa
lods
arpl
dec
call
loopne
std
jbe
test
scas
xchg
stos
mov
or
pop
sub
xchg
push
in
adc
fistl
dec
add
rclb
push
imul
out
popf
lahf
add
clc
mov
add
mov
inc
add
and
sbb
mov
cwtl
es
popf
mov
out
push
push
push
pop
sbbb
adc
subb
add
roll
pop
xchg
notl
add
js
xlat
mov
fs
pop
imul
push
hlt
xor
ror
pop
dec
jns
bound
mov
push
fimuls
mov
pop
fdivs
sbb
add
add
cmpl
add
mov
adc
add
nop
in
mov
fwait
popa
sub
dec
mov
mov
xchg
cmp
pushf
popl
xchg
ret
les
cmp
add
js
or
fisubrs
sbb
iret
shlb
adc
mov
inc
sti
sar
pop
lods
adc
cli
xorb
xor
mov
sahf
inc
adc
or
gs
cld
in
add
adc
outsl
add
cmp
mov
xchg
add
jmp
mov
adc
lods
imul
pop
fidivrs
jle
inc
add
fcompl
decb
add
mov
jne
sub
mov
fsts
and
sbb
test
push
add
aaa
lret
int
inc
daa
hlt
test
jne
add
mov
lods
fcompl
roll
mov
insb
popa
add
cmp
mov
add
aam
loope
lock
add
jge
fmull
popf
sub
xchg
add
nop
fidivl
pop
rclb
mov
lahf
add
lods
insl
add
sbb
lret
jo
pop
add
mov
mov
dec
inc
sub
fiaddl
fcmovnbe
loopne
push
insb
nop
je
movsl
daa
cld
rcrb
das
add
jmp
and
imul
leave
or
in
std
xchg
inc
dec
jne
sub
push
adc
shrb
int3
adc
sarb
xor
dec
add
rcll
rcrb
pop
nop
fistps
mov
hlt
jo
das
gs
scas
icebp
mov
dec
adc
mov
loopne
mov
xchg
scas
cld
repnz
add
mov
lea
mov
push
pop
stos
inc
nop
and
and
shll
jb
cltd
mov
sti
clc
mov
inc
in
into
add
stc
test
sbb
je
std
mov
in
jae
call
mov
jno
cmp
enter
and
pop
adc
mov
cs
add
pop
data16
xchg
sahf
inc
add
jne
sub
mov
in
xor
cmpsb
aam
add
data16
pop
lcall
jecxz
enter
sbb
adc
andb
in
ret
jns
add
into
push
call
pop
sbb
test
mov
push
cmpl
or
dec
hlt
and
adc
push
pusha
dec
movsl
push
add
pop
mov
adc
add
clc
jbe
add
sbb
sub
fsubrl
repz
add
sbb
clc
xchg
mov
cmc
inc
in
daa
dec
adc
add
mov
push
scas
mov
lahf
clc
mov
push
cmpsb
mov
xchg
mov
movsl
mov
popf
mov
adc
adcb
les
das
sbb
jae
xchg
jns
and
mov
lock
mov
and
jbe
pop
sahf
sbb
mov
pushf
fists
push
arpl
add
or
rolb
mov
enter
dec
add
mov
std
add
int3
jbe
add
movb
add
cmp
shll
imul
rcrb
js
jle
shl
fcmovbe
mov
test
mov
add
pop
les
add
pop
es
mov
mov
add
and
pushf
mov
js
fmuls
js
pop
test
mov
movsb
int3
fsubrl
rcll
aad
add
push
adc
aam
les
add
dec
pop
and
cmp
add
or
dec
sarb
popf
push
add
sbb
call
and
and
mov
adc
dec
pop
push
sub
inc
fistl
xchg
adc
push
adc
outsb
mov
mov
inc
add
adc
adc
or
sbb
mov
daa
int3
scas
or
dec
mov
push
mov
dec
rolb
adc
nop
daa
fidivl
add
push
movb
lea
add
or
jg
jle
sarl
add
js
movsl
or
add
mov
cmp
xchg
mov
inc
adc
stc
or
out
andb
mov
push
sub
sub
mov
sub
add
pop
test
push
jmp
dec
inc
fdivr
ja
fldl
std
out
cli
pop
sbb
popa
pop
popa
cmp
or
or
shr
mov
pop
pop
jae
pusha
jmp
or
jge
sub
inc
adc
ljmp
add
mov
ljmp
arpl
leave
add
sahf
sub
cmp
adc
or
loopne
push
cli
sahf
dec
xor
repnz
orl
stos
enter
add
decb
add
jb
adc
jae
pop
adc
inc
nop
mov
inc
push
push
jo
ja
cmpsl
add
cmp
fmuls
fs
repnz
adc
out
add
push
and
mov
cmp
loop
sub
fidivl
and
hlt
push
paddusw
push
sbb
imul
out
mov
mov
xor
jmp
sbbb
add
repnz
cmp
jb
xor
movlps
sbb
rcrb
inc
push
decb
pop
inc
or
add
dec
sbb
add
sbb
stos
pop
pop
add
or
xor
cmp
out
add
sub
inc
addl
mov
add
adc
arpl
mov
rorl
fwait
movswl
xor
lret
adc
dec
add
or
jb
dec
or
dec
push
flds
popf
inc
and
add
xchg
push
mov
add
mov
sbb
sub
aas
and
dec
sarb
and
mov
mov
test
pop
push
sbb
lret
adc
ret
cmp
imul
test
into
adc
dec
adc
es
xor
movsb
sbbb
movb
xor
int3
cmp
and
je
add
or
dec
xor
arpl
xor
add
call
cmp
pop
jg
ret
notb
add
dec
mov
cwtl
fs
and
int
jle
pusha
sar
inc
jns
xor
push
dec
cli
add
and
aas
xchg
add
xchg
jbe
adc
jge
test
sbbb
add
std
and
dec
xor
mov
add
ret
stos
cmp
loopne
xchg
sbb
add
cs
xchg
lods
inc
add
and
iret
inc
hlt
jno
dec
cmpsl
clc
sbb
mov
mov
fadds
out
pop
and
xchg
add
test
mov
push
inc
in
pop
or
out
adc
xchg
mov
mov
mov
xor
stos
sbb
push
daa
add
fsubr
add
pushf
jmp
add
pop
ljmp
adc
jmp
les
pop
lods
in
add
in
out
add
jne
adc
outsb
push
cwtl
adc
dec
outsb
imul
mov
shlb
aad
shr
out
sub
or
movups
sbb
loopne
adc
add
or
xchg
nop
xchg
adc
jp
jl
popa
and
je
mov
push
jne
inc
or
inc
jmp
sbb
pop
pop
pop
push
and
add
rorb
fiaddl
jmp
pusha
sbb
dec
ljmp
loopne
jmp
movl
mov
ret
lock
in
sbb
addl
paddq
add
adc
scas
add
jge
in
add
mov
int
fwait
aaa
cs
lock
call
popf
into
loopne
punpcklbw
jle
rcrb
dec
add
mov
sbb
fdivrs
add
call
jg
daa
mov
inc
hlt
rcrb
pop
add
dec
push
mov
xor
or
add
sbb
jg
idivl
call
repnz
andb
out
add
add
enter
add
mov
les
dec
sub
aad
or
mov
arpl
ja
mov
imul
int3
add
stos
adc
push
mov
push
or
cmp
decb
xor
cmp
les
adc
adcb
add
fwait
bnd
and
add
push
push
jmp
arpl
add
dec
loope
xor
cs
xchg
aas
mov
cmpsb
jmp
or
xor
inc
and
push
adc
add
pop
repz
adc
in
jle
cwtl
cmp
inc
cmp
mov
push
xchg
inc
push
inc
mov
lcall
pop
push
clc
mov
lret
pop
cmc
into
out
add
aas
jp
fsubl
mov
lret
pusha
or
out
pop
pop
inc
outsl
icebp
sbb
loop
push
add
hlt
fstpt
jne
inc
sub
fs
repnz
repnz
xchg
les
and
mov
lret
loopne
mov
pop
js
sbb
xor
ficoml
pop
cld
call
gs
int
aad
test
mov
outsb
movsb
adc
add
dec
or
add
scas
dec
push
add
cmpsb
hlt
movsl
pop
dec
push
dec
loop
add
dec
push
test
cmp
aam
add
hlt
cli
and
js
or
stc
mov
ds
pop
xor
add
jno
add
adc
lock
jbe
fcoms
and
mov
pop
add
cmp
mov
ja
sbb
test
mov
mov
mulb
clc
fbld
mov
repz
add
sbb
or
and
add
fs
call
mov
add
rolb
insb
add
rorl
int3
sbb
push
sub
roll
cmp
inc
in
sbb
add
xor
repnz
dec
cmp
add
add
add
mov
fsubr
andb
fisubrl
mov
add
xchg
xor
repz
sbb
inc
or
mov
mov
add
pop
adc
pop
pop
add
xor
mov
jo
insb
flds
in
add
jb
xorl
outsb
fs
jbe
or
bswap
lock
loopnew
sub
push
add
pop
add
adc
mov
xor
or
or
cmp
mov
add
pop
cmc
sbb
jl
add
ja
fcmovb
cmp
popl
in
ror
add
shlb
leave
pop
popf
sbb
add
lcall
add
test
mov
pop
inc
xlat
add
mov
push
cwtl
add
fcompl
inc
add
push
or
loopne
push
adc
push
incb
and
mov
testl
loope
cmp
add
iret
jne
shl
movl
inc
lods
sti
and
mov
sbb
add
ffreep
pop
clc
cmp
pop
int3
call
lea
sbb
and
jmp
or
xchg
mov
out
adc
out
adc
jp
add
xchg
into
cmp
arpl
jmp
mov
fisubl
adc
out
xchg
aam
adc
pop
or
test
and
loop
pop
sbb
inc
sub
nop
je
arpl
add
mov
jl
ret
xor
sbb
test
mov
and
add
mov
lock
ftst
cmp
push
jecxz
add
call
std
in
add
mov
addl
sbbb
jno
push
shrb
out
xchg
push
jecxz
fisttpl
sub
addb
icebp
test
ret
ss
push
or
jmp
sub
ds
bound
mov
xor
mov
js
add
cmc
jp
add
and
movups
in
mov
je
jecxz
aad
arpl
test
inc
xor
pop
sbb
and
inc
sahf
xacquire
sbb
test
sub
add
or
rcrl
xor
clc
cmc
or
hlt
repz
cmp
add
mov
and
sbb
repnz
insb
fiaddl
jp
movsl
nop
stos
enter
add
add
add
jbe
in
adc
in
add
mov
fwait
add
add
lock
or
hlt
pop
xor
loopne
sarl
add
mov
dec
idiv
lock
sub
and
adc
xor
jp
add
nop
sub
jg
loope
adcl
mov
stos
mov
scas
sbb
inc
shll
and
sti
push
test
sbb
cmp
add
fcomps
sub
or
dec
cmc
enter
ja
lds
fs
sbb
xchg
add
jmp
clc
xor
and
call
add
jl
rcr
and
add
dec
dec
push
and
or
push
inc
inc
push
ja
xor
negb
pop
lods
scas
test
add
mov
adc
mov
movsl
xchg
fadd
cld
dec
add
and
inc
addr16
dec
mov
stos
int
out
add
fdivrl
jbe
xor
add
loope
rol
add
sti
mov
push
pusha
cwtl
jl
add
incb
out
int
mov
push
add
sub
pop
ja
fnstcw
add
loopne
push
aas
movb
inc
mov
add
outsl
sbb
rorb
imul
push
adc
push
test
loopne
lods
inc
mov
fldl
and
daa
mov
add
decl
mov
das
ja
add
jle
sbbl
add
aas
add
cli
xlat
and
std
push
cmp
jge
or
push
inc
sbb
sub
test
add
lea
cld
cmp
add
out
xadd
call
jl
bound
cwtl
sbb
ljmp
or
dec
add
mov
fldl
les
xchg
movsb
push
or
cwtl
fisubl
inc
add
xor
add
sti
repz
int3
pusha
push
mov
adc
xor
sub
and
lods
idivl
add
arpl
and
imul
adc
aas
imulb
mov
add
xor
xlat
ror
les
addl
repz
loopne
scas
adc
orb
nop
mov
sub
movb
dec
fcomi
pop
cmp
cmp
add
inc
xor
aad
sbb
add
xchg
arpl
cmp
adc
cwtl
push
inc
imul
add
inc
xlat
pop
mov
push
js
mov
jmp
or
xchg
in
add
sbb
cli
out
jge
jge
pop
and
imul
or
pop
xchg
jno
cwtl
std
loopne
fdivrl
addr16
repnz
adc
cmpsb
add
pusha
test
mov
dec
fs
or
mov
bound
imul
add
add
inc
mov
rolb
fstp
or
mov
push
mov
addb
xlat
data16
in
cmpsb
add
cwtl
stos
push
enter
xchg
xor
iret
dec
add
add
sti
adc
or
cmp
das
inc
mov
dec
cli
sahf
add
add
or
fsubrs
mov
leave
sbbl
cwtl
and
sti
shl
add
frstor
or
mov
sub
out
add
xor
sbb
xchg
add
aaa
ret
or
adc
cmp
aad
andb
repnz
add
adc
inc
jmp
push
sbb
les
add
and
add
loop
sti
cmp
cmp
out
cmovb
adc
jb
nop
push
add
add
xorl
mov
cmc
aam
stos
test
out
nop
add
cmp
pushl
in
popf
mov
add
jb
divb
rolb
or
or
sub
jo
popa
dec
popf
insl
inc
cmp
mov
adc
cmp
add
in
sbb
daa
pop
fists
and
or
cltd
mov
inc
ljmp
dec
test
fidivs
fimuls
sahf
add
add
mov
aas
and
or
add
mov
mov
jle
jg
hlt
roll
loop
cmp
cli
daa
sub
and
jns
out
add
add
inc
ficompl
add
sbb
loopne
mov
rcl
fld
push
out
pop
fidivrs
inc
iret
inc
in
add
push
cmp
pop
mov
int3
nop
or
add
push
lods
push
pop
out
and
sub
hlt
inc
leave
enter
out
add
inc
push
ljmp
pop
ljmp
inc
shl
or
pop
sub
fimuls
das
or
sbb
pushf
pop
add
add
rol
xorl
add
sub
cmp
dec
add
leave
or
lock
lcall
add
pop
and
sub
leave
mov
add
xchg
int3
aad
sbb
xor
add
out
decl
roll
pop
test
xor
add
dec
jle
outsl
add
adc
jge
add
out
sbb
nop
mov
rcll
mov
frstor
or
add
adc
shrb
idivl
mov
repnz
mov
mov
rcl
sub
repz
push
add
ret
roll
xlat
push
es
fstpl
popa
dec
mov
cli
cmc
call
add
es
mov
add
ret
jg
pop
push
push
fcoml
movzwl
rcl
call
adc
or
outsl
psubd
mov
mov
add
inc
sub
dec
test
lods
jge
add
testb
add
out
inc
add
mov
call
dec
xchg
stc
lock
cmp
test
or
ljmp
push
dec
mov
aas
cli
sub
add
and
jge
add
pop
sti
inc
sub
loopne
adc
push
mov
mov
mov
lock
cmpb
push
adc
mov
loopne
and
inc
pop
icebp
cmc
sub
mov
add
lahf
xlat
cmp
inc
mov
pusha
ljmp
add
inc
push
add
add
sub
push
loopne
les
or
fdivrs
sbb
loope
push
xor
clc
enter
xor
adc
loop
or
cwtl
add
pop
std
not
jns
clc
cmp
int
out
insb
outsl
dec
insl
mov
jecxz
clc
cmp
daa
xchg
ljmp
mov
adc
out
gs
jp
insb
add
dec
xor
add
sbb
iret
hlt
add
fs
cs
daa
push
test
push
add
add
jle
add
add
sbb
adcl
pop
mov
notb
cmp
lcall
add
aaa
and
adc
out
lret
testb
pop
cmp
add
or
iret
xchg
fildl
or
sbb
inc
push
in
or
pusha
clc
fwait
add
cmp
adc
adc
pop
ss
push
fwait
jb
add
ds
lods
cli
inc
add
push
and
or
adc
sub
loop
test
mov
add
jmp
mov
adc
jp
mov
push
or
inc
mov
and
dec
fstpl
xchg
sarb
jne
jge
add
addr16
enter
add
jle
cmp
call
xor
push
fidivl
loopne
adcb
and
add
dec
call
add
test
fs
les
jmp
jge
add
out
jl
pminub
imul
mov
test
aas
sub
sbb
inc
xor
xor
movsb
sbb
aas
dec
pop
adc
test
fs
fistpll
add
mov
arpl
xor
add
sbb
addl
mov
and
into
repnz
and
aam
gs
xor
sbb
push
fs
test
and
adc
or
adc
xlat
or
sub
lock
add
das
jno
jmp
jp
add
pop
scas
out
or
pop
pop
jae
mov
xor
out
test
push
xor
and
int3
add
adc
mov
push
push
in
jle
or
and
call
aaa
add
push
adcl
add
mov
and
adc
sahf
or
mov
pop
test
inc
or
pop
std
cmp
push
movsb
lcall
dec
fdivl
add
enter
mov
outsl
adc
lds
in
mov
push
xor
cmp
jle
pushf
or
adc
and
bound
les
xlat
ret
push
jns
cmp
adc
pop
sbbb
adc
ds
add
push
test
xor
lds
or
aas
xor
outsb
rorl
js
adc
lar
gs
cmp
xor
lods
jmp
pushf
push
add
pop
stos
or
xor
call
pop
aam
add
sub
cmpsb
add
and
sarb
popl
cmp
push
xor
mov
pop
cmp
incl
jo
dec
add
mov
enter
add
test
xchg
or
int
adc
sub
jge
add
std
adc
or
xchg
jg
mov
add
push
daa
arpl
cld
sub
or
stos
in
push
in
lods
fsubrs
mov
nopl
fcmovnb
sub
test
shl
shl
in
into
or
cmpsl
incl
add
je
cmp
xchg
sbb
les
and
cmp
out
sbb
push
xor
lcall
xor
adc
fcmovnu
add
sub
inc
dec
adc
or
into
mov
push
and
or
inc
aas
loopne
jmp
xor
imul
aaa
cs
inc
js
inc
mov
das
ds
mov
mov
aas
shl
enter
int3
fdivl
adc
push
xor
mov
or
pop
loop
adc
add
loope
add
push
std
les
inc
fdiv
or
cs
push
out
add
lret
frstor
jl
aas
cmc
popa
decb
push
sub
nop
pop
pop
lret
add
jbe
test
fdivs
jo
cmpsb
add
ja
jno
dec
pop
sbb
les
sub
aaa
mov
adc
mov
and
clc
lds
call
add
adc
dec
pop
loope
neg
mov
pop
or
repz
and
std
hlt
pop
fcomps
in
and
and
sub
loop
add
rcrl
adc
jo
mov
int3
orb
clc
xchg
add
sbb
nop
xchg
mov
push
and
dec
daa
add
dec
adc
inc
adc
or
cmp
js
js
add
fisttps
addr16
in
cmp
adc
pop
mov
add
and
loop
sbb
jnp
add
inc
ret
orb
sbb
dec
push
cmp
repnz
push
mov
cld
or
inc
inc
out
call
sbb
lock
xor
cld
sarl
out
mov
add
test
jecxz
add
or
aas
sub
adc
mov
sbb
addr16
adc
pavgb
testb
jo
clc
xchg
sbb
repz
mov
stos
hlt
or
add
rorl
adc
pusha
mov
movq
add
sbb
and
arpl
out
outsb
mov
or
test
stc
mov
pop
nop
inc
mov
dec
lahf
jp
sbb
add
in
adc
lahf
mov
add
inc
or
pop
loopne
jl
jnp
pop
mov
push
repz
pushf
cmpsb
and
iret
stos
test
add
les
jge
mull
inc
adc
in
add
outsl
popa
imul
push
mov
cmp
jmp
dec
cmpb
adc
add
aaa
sub
iret
or
jecxz
enter
jle
faddl
mov
out
rolb
xchg
cmp
call
and
out
adcb
jle
mov
dec
sbb
clc
xor
sbb
stos
add
movsl
adc
add
adc
clc
add
shrb
in
xchg
xor
sbb
or
lock
psubusw
and
push
cmpsl
outsb
pushf
push
cmpsb
cld
je
jle
out
mov
push
jmp
cltd
mov
sbb
sbb
mov
in
inc
jp
shrb
jle
add
cmp
sar
pop
add
or
std
xor
lcall
cli
inc
xor
xor
mov
or
push
in
cmp
into
add
pop
adc
mov
or
push
jle
and
push
loopne
mov
test
in
push
add
or
xchg
sub
adc
pop
pop
loop
aam
adc
in
pop
jbe
jle
ds
into
mov
add
jns
pop
shlb
push
and
sbbb
cmp
mov
lcall
scas
icebp
lods
xchg
sidtl
in
test
cmpsl
iret
adc
lock
loop
cli
pop
xor
xor
adc
sub
loop
add
pop
sbb
cmp
jg
add
add
inc
push
dec
adc
xlat
jno
add
sbb
icebp
pop
xor
lret
lock
push
dec
adc
pop
popf
or
ret
push
pop
repnz
aas
inc
dec
arpl
sbb
adc
jo
push
jne
clc
add
sbb
pushf
ret
jg
adcb
add
cmp
add
xchg
add
mov
xor
inc
inc
stc
mov
jmp
cld
das
xorb
add
dec
je
add
inc
hlt
xor
enter
shl
push
and
movb
cmpsl
sbb
sub
xchg
in
scas
pushf
test
add
adc
sbb
add
mov
lcall
dec
ficoml
sbb
pop
in
inc
xor
jbe
pop
test
shl
add
add
inc
xchg
add
xchg
mov
jle,pt
add
and
repnz
addb
arpl
push
or
out
sbb
add
mov
sub
stc
xor
call
lahf
inc
or
push
lods
xor
loopne
pop
mov
repz
cs
mov
test
sbb
push
fs
push
dec
lcall
xor
je
add
push
cmp
test
jecxz
jp
call
loope
and
pushf
adc
mov
push
incl
cld
pop
sbb
sbb
and
out
xor
inc
sub
xor
repnz
in
push
inc
add
inc
scas
and
inc
add
lea
or
enter
or
xchg
cli
push
stos
mov
clc
mov
mov
divb
stos
lock
lock
hlt
mov
stc
cmp
lock
jo
fsubl
in
repnz
add
and
test
sbbb
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
mov
mov
pop
push
or
test
mov
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
add
push
inc
lods
or
cmp
outsb
sbb
add
out
jmp
scas
in
inc
add
shrb
and
dec
pop
xchg
add
inc
or
and
and
sbb
adc
mov
andb
shrb
jb
pop
cmp
push
mov
xor
xchg
lcall
mov
ret
add
repz
add
es
in
jp
jo
xor
sbb
push
inc
hlt
jmp
clc
sbb
shll
add
ficoms
xor
xor
cmp
popl
push
jmp
mov
mov
scas
adc
sahf
inc
and
inc
sbb
and
rorb
sub
ljmp
xor
sarl
sbb
push
mov
aam
xorb
add
pop
dec
push
add
add
hlt
lret
cld
enter
sbb
add
mov
mov
add
roll
shll
dec
and
out
lods
mov
add
rcr
inc
daa
add
lock
outsb
nop
jecxz
jnp
std
add
add
dec
daa
jne
jbe
cmp
inc
xor
add
je
jcxz
push
and
mov
xor
movsl
call
xor
in
out
pop
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
sarb
add
roll
add
xchg
in
pop
orb
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
rcl
sar
sarb
lock
xor
pop
xor
add
shl
cwtl
mov
inc
xor
dec
testb
shlb
hlt
xadd
cld
cmp
insl
dec
shlb
movsl
push
lock
dec
cmp
cmp
sti
loopne
add
stc
addl
sub
inc
sub
imulb
cmp
mov
das
mov
in
push
sub
sarb
and
test
add
and
ret
pop
jecxz
and
loope
mov
lret
and
jmp
sti
pusha
mov
arpl
mov
inc
bound
movaps
jo
add
add
insb
shrl
add
shrb
and
scas
out
mov
out
imul
stos
add
test
push
loopne
lock
stos
add
inc
jg
jg
jg
jbe
sbb
loopne
add
mov
xor
mov
je
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
add
rcll
xchg
rclb
push
jae
jne
ja
sbb
cmp
adcl
pop
inc
popf
loopne
addb
sbbl
fwait
rcrb
cltd
mov
inc
cwtl
mov
dec
mov
rorl
cmovle
mov
rorb
inc
jo
add
roll
rolb
into
into
xchg
scas
inc
in
cmp
mov
in
add
rorb
push
mov
add
in
pushf
pop
pop
add
xor
popf
push
pusha
mov
test
inc
add
push
push
push
out
add
mov
ss
pop
popf
mov
pop
pop
pop
test
inc
mov
sbb
pusha
push
inc
shl
jae
sbb
call
aas
push
scas
add
mov
add
movl
adc
movsb
dec
rorb
sub
loopne
push
pop
xor
add
mov
fistpll
add
arpl
add
call
minps
xor
pop
mov
jle
insb
add
push
cld
cli
mov
and
cmp
lods
add
ret
rcll
ljmp
repz
sar
enter
dec
or
mov
clc
test
pop
pextrw
pushf
sub
mov
shlb
inc
lods
add
and
dec
mov
outsl
enter
cld
dec
bnd
pop
aad
int3
push
lods
cmp
push
jae
jmp
add
sub
push
test
repnz
add
mov
xchg
and
cli
add
push
int3
gs
or
decl
xchg
hlt
je
rolb
mov
cmc
add
lea
inc
pop
cwtl
mov
lock
push
lcall
xchg
cmp
inc
add
lret
jbe
test
cltd
mov
sub
push
cwtl
addr16
jge
add
xor
cmp
shrb
or
pop
cmp
mov
push
cmp
mov
pop
test
inc
add
cmp
repz
dec
and
and
addr16
stos
mov
ret
in
les
leave
cmp
icebp
pop
shlb
pop
jmp
add
or
repnz
xchg
dec
xchg
sbb
into
sbb
pop
adc
add
icebp
cmp
mov
cmp
iret
pop
fsubp
push
push
fldenv
adc
outsl
add
sub
mov
test
sbb
and
adc
shrd
mov
add
and
jno
popf
sub
add
add
mov
and
data16
cwtl
mov
sarb
or
push
adc
add
jb
stc
jbe
push
add
push
xchg
cli
fisubs
sbb
movsl
aas
stc
bound
adc
mov
pop
repz
push
test
add
nop
push
fcompl
stc
movsb
ret
in
and
lods
dec
or
addl
pusha
cmp
and
xor
push
cmp
and
and
movsl
adc
jo
add
or
mov
sbb
push
and
and
leave
or
nop
div
xor
add
imul
mov
outsb
sub
arpl
add
je
stos
leave
loope
lock
dec
pop
cld
jno
cmp
mov
adc
lret
mov
mov
mov
int3
sub
andb
sti
jo
mov
mov
sbb
nop
jecxz
mov
lock
xor
stos
pop
and
dec
pop
adc
add
add
inc
and
or
pop
icebp
add
push
mov
jle
add
pop
push
or
cmp
das
mov
inc
pop
mov
sbb
aas
aam
lea
xchg
pushf
cmp
js
or
or
add
adc
idivl
jmp
repz
stos
and
or
xor
test
add
xor
mov
ret
mov
int3
icebp
or
leave
loopne
push
popf
push
add
mov
loopne
add
pusha
xchg
roll
pop
cmp
push
adc
mov
leave
je
inc
mov
adc
roll
int
inc
dec
mov
xor
sarb
hlt
push
add
or
mov
inc
xor
dec
add
sbb
or
mov
jmp
repnz
outsb
cmpsb
push
push
inc
dec
sahf
stc
adc
scas
gs
jno
pop
inc
push
and
dec
lahf
and
or
or
fcmovbe
dec
ret
stos
add
hlt
dec
add
xor
add
inc
pop
xor
mov
pop
fnstcw
cld
sbb
or
push
push
ret
xchg
or
lret
adc
sub
adc
adcl
jmp
leave
pushf
loope
inc
push
add
and
cld
xor
mov
test
mov
icebp
jno
add
imul
pop
add
xlat
mov
add
filds
jae
sub
push
stc
lret
jg
jecxz
adc
xor
cwtl
add
sub
fbld
and
mov
mov
ficoms
dec
or
mov
jo
lock
inc
xchg
mov
push
pop
add
push
pop
pop
add
cwtl
loop
mov
sub
xor
add
shl
icebp
and
add
insl
cmc
and
xchg
push
push
lcall
data16
xor
sti
cli
add
in
repz
repnz
add
addb
push
adc
sbb
shrb
push
adc
xor
repz
nop
out
out
jecxz
mov
mov
nop
cmp
sti
out
imul
and
cmpb
cmp
lea
cmp
xor
mov
movzbl
mov
dec
add
stc
sbb
ja
mov
xor
cmp
pop
orb
cmc
push
roll
insb
int3
push
rol
mov
sti
sub
add
mov
mov
cmc
sahf
add
cmp
add
pop
cmp
test
incl
pop
shr
dec
loope
sarb
inc
mov
lea
jo
and
push
cmp
inc
push
add
dec
add
jne
xchg
lahf
push
mov
add
and
push
mov
jge
std
sbb
xor
cmp
test
popf
jl
les
xchg
dec
add
add
mov
sbb
sldt
xchg
std
lahf
add
aaa
push
sbb
jmp
mov
lods
sub
add
push
outsl
add
pushl
add
test
jge
out
adc
divl
lahf
jnp
lods
mov
cmpl
cmp
stos
popf
mov
add
mov
in
sbb
jl
enter
push
mov
inc
jno
or
test
or
testl
add
in
cmp
mov
mov
adc
incl
xchg
jb
push
or
or
out
push
add
cmp
or
xor
add
sarl
mov
xor
push
push
lea
push
dec
or
or
mov
inc
cmpsb
mov
add
mov
out
adc
mov
loope
ja
add
sub
in
insb
out
dec
clc
hlt
test
xor
add
cmp
inc
adc
dec
movsl
fisubl
and
fsubrs
mov
push
jg
adc
rclb
sub
outsb
into
shrb
mov
or
lea
xor
add
in
ss
rclb
add
mov
inc
out
rcr
push
ja
add
repnz
adc
add
loop
shll
decl
push
sbb
inc
or
pop
loop
out
pop
arpl
imul
mov
loopne
add
dec
ret
dec
inc
sbb
notb
movsl
add
loopne
subl
mov
jbe
mov
cmp
je
lret
add
jo
mov
movsl
loope
imul
mov
push
xchg
idivb
or
mov
jl
add
in
in
stos
jmp
jne
adc
les
add
pop
test
loope
dec
push
mov
add
sub
add
shrb
pop
sub
dec
test
jnp
or
lcall
xchg
pop
inc
mov
lahf
scas
loopne
xor
add
fs
jno
mov
sub
pop
out
rol
add
testb
cs
loopne
movw
ret
push
out
or
clc
adc
cli
xor
add
push
sbb
ret
fisttpll
xor
adc
mov
sbb
add
rorb
or
out
cmp
loopne
sub
jno
packsswb
je
xchg
and
pop
adc
push
adcl
mov
loop
repnz
in
inc
push
aam
push
push
mov
pop
jne
incl
jle
sbb
ljmp
les
arpl
mov
dec
test
jbe
add
loop
xor
dec
addr16
mov
dec
scas
jbe
pop
pop
xchg
push
adc
pop
mov
add
insb
inc
add
jbe
dec
xor
pop
cmp
test
inc
xor
ja
jbe
add
loope
cli
jo
movb
fcmovnu
or
inc
mov
ficompl
fstps
cmp
rol
mov
mov
das
add
int3
cmp
xor
pop
mov
push
roll
cld
mov
or
dec
es
lret
in
loopnew
fmull
mov
test
mov
imul
or
push
loopne
mov
pmulhw
or
scas
repz
mov
and
pop
loopne
dec
test
add
jle
mov
add
dec
mov
push
add
inc
daa
lahf
or
pushf
mov
cmpsl
sub
xlat
mov
cmc
add
sub
pop
adc
add
fists
cmp
mov
hlt
shr
mov
lock
ret
jg
pop
test
mov
pop
in
inc
add
xor
lea
test
sub
pop
inc
sbb
add
xorb
sub
lret
test
jmp
outsb
test
or
pshufw
adc
fildl
add
stos
add
jmp
or
jo
aas
outsl
add
xchg
pop
out
push
aad
mov
cmp
sub
mov
dec
mov
add
mov
and
inc
cmp
mov
data16
jmp
xlat
vmwrite
or
cmp
add
pop
jnp
mov
shrb
sarb
add
daa
add
jnp
mov
insb
add
iret
push
push
push
test
cmc
pop
pop
jo
add
addps
mov
cmp
and
mov
aaa
jo
add
mov
clc
popf
leave
xor
cwtl
dec
add
mov
sbb
add
jnp
out
mov
daa
sbbb
inc
sbb
hlt
jmp
sbb
jnp
stos
push
add
ss
leave
add
pop
push
jns
aaa
mov
loop
xor
call
icebp
add
adcb
fs
jb
add
adc
mov
or
cmc
dec
push
addl
sarb
pop
jecxz
cmpsb
std
or
testb
dec
jae
in
fdivrl
ds
dec
pusha
inc
or
fdivrs
sub
add
ret
add
xor
iret
cmp
ja
xchg
ror
add
push
inc
cmp
sub
push
inc
jbe
add
mov
out
and
add
lcall
jmp
inc
adc
push
mov
mov
js
pop
or
and
inc
loop
xor
sub
jnp
ljmp
nop
pop
inc
add
mov
mov
adc
add
ljmp
sub
cmp
add
and
push
pop
icebp
shll
xchg
add
or
add
or
pop
and
ret
jmp
add
add
mov
sub
lret
rcrl
add
jg
sbb
sub
or
push
arpl
inc
leave
test
fsubrl
and
cltd
cwtl
jae
sub
xchg
add
lcall
adc
rolb
push
jns
sub
je
or
dec
add
cmpb
add
jne
add
cmp
or
loopne
mov
adc
inc
add
dec
cmc
rcr
lret
pop
fdivr
push
clc
cmp
add
fcoms
or
inc
add
push
cld
mov
add
jg
xorl
js
sbb
jmp
dec
xlat
lret
mov
sub
in
jmp
add
pusha
push
sbb
repz
or
inc
dec
add
push
decl
push
es
dec
sbbb
call
push
movsl
pop
inc
in
cmove
arpl
shrb
movl
sub
pop
jne
xor
bound
sbb
popa
or
out
cmpsl
in
and
mov
lock
dec
sbb
and
adc
mov
dec
in
jne
ljmp
dec
dec
gs
jl
add
rolb
push
and
rcrl
dec
add
sbb
adc
cmp
mov
jecxz
movsl
mov
lds
std
sub
inc
addb
jl
sbbb
xchg
xchg
add
das
shlb
add
and
ja
pop
xor
or
fcmovnb
add
mov
add
xchg
cld
add
pop
xchg
and
jnp
imul
fists
or
leave
test
orb
push
add
dec
push
add
or
ret
js
xchg
pcmpeqb
mov
stos
mov
sbb
dec
scas
insb
adc
add
arpl
mov
cmpsl
sub
mov
outsl
repnz
test
in
sbb
orb
lret
add
mov
fadds
jle
jnp
jns
jge
dec
add
sub
or
dec
pop
push
sbb
or
xor
nop
movzwl
inc
sub
add
addr16
and
dec
cmp
sar
out
or
cmpsb
add
sub
push
push
mov
popf
xlat
out
adc
decl
stos
cmpsl
pop
ljmpw
jnp
aas
add
jl
aad
add
shrb
adc
pop
cltd
inc
aas
cmpsb
mov
pop
and
ret
call
adc
mov
rorb
or
movb
or
cs
add
arpl
and
pop
pop
fldcw
jne
push
add
jp
test
negb
inc
add
test
jo
or
or
adc
addr16
std
add
shlb
or
jg
loope
sub
add
cwtl
inc
aam
sarb
cmp
or
fistl
add
movsl
jmp
in
xchg
pop
inc
cmp
add
test
scas
mov
mov
add
inc
jbe
aad
dec
xor
or
xchg
ljmp
fistpl
fadds
shlb
nop
mov
enter
add
mov
lgdtl
cmp
mov
stc
aaa
push
add
adc
push
push
sbb
adc
cmp
adc
adc
rclb
stos
and
or
test
push
add
pop
rorb
add
rolb
sub
mov
add
es
add
cmpsl
mov
out
test
add
cmp
sti
ret
add
jle
and
movhps
repz
addl
push
or
add
xor
popa
cmp
push
mov
push
mov
fs
mov
lods
es
xchg
add
xlat
pop
jo
out
lahf
clc
inc
dec
sub
add
lcall
push
imul
or
jmp
push
decl
cmp
and
fbstp
add
dec
push
sbb
pop
sub
and
push
stc
ljmp
jo
pop
xchg
stc
or
mov
mov
fcoms
adc
add
xor
mov
in
jno
add
xor
inc
js
add
pushf
lret
fstpl
or
movb
adc
adc
adc
shll
iret
les
add
xchg
aad
jmp
imul
mov
add
pop
fnstcw
stos
js
std
mov
add
pushf
or
push
and
add
jno
adc
lahf
maxps
pusha
inc
push
icebp
push
push
es
pop
mov
sub
je
and
jp
add
shll
add
and
shll
fiaddl
jecxz
into
sbb
pop
cmp
in
sbb
cli
sub
xor
mov
or
adc
and
pusha
pmuludq
mov
add
mov
pusha
sbb
scas
add
pusha
mov
fmuls
sub
adc
ja
xlat
inc
add
roll
add
fldlg2
popa
enter
add
mov
sar
xor
xor
pop
adc
int
mov
mov
js
add
push
cld
push
ret
add
mov
stos
jle
add
xor
add
add
xchg
pop
xor
lea
cmp
clc
or
add
imul
mov
mov
dec
xor
add
clc
aas
jno
test
xchg
pop
cwtl
push
rorl
add
pop
pop
adc
xor
ret
movsl
or
add
pop
sbb
jle
add
adc
nop
add
dec
add
add
popa
and
jecxz
cmp
imul
test
add
jmp
or
push
int3
add
adc
mov
stos
call
adc
xorl
repz
push
add
insl
orl
jo
add
adc
mov
cli
idiv
test
add
jmp
rcl
push
add
sub
pop
add
icebp
cld
inc
add
orl
sar
popf
add
xor
shrl
cmpsb
jb
dec
or
rol
loopne
add
dec
inc
nop
clc
xchg
fadds
shlb
loopne
sarb
fwait
sub
mov
lock
rol
add
add
cwtd
inc
inc
stos
add
je
roll
mov
enter
loopne
jnp
add
dec
sub
pop
add
mov
push
les
dec
aam
shlb
add
fsubs
add
and
xchg
ja
rsqrtps
push
inc
test
ret
loop
pop
shrl
xor
cmp
or
add
and
xor
stos
push
add
adc
jno
cwtl
subl
cwtl
das
add
xor
add
aas
jnp
mov
add
and
pop
jbe
sbb
mov
add
pop
stc
mov
mov
and
dec
mov
fcoml
push
pop
inc
popa
call
je
push
std
adc
push
sti
push
test
inc
enter
push
and
sarb
xchg
lret
pop
test
pop
xchg
insb
adcb
ret
sub
test
add
xor
ljmp
add
adc
sbb
jbe
and
sub
add
es
int3
adc
mov
pop
pushf
xchg
inc
sarl
cmpsb
call
cmp
or
mov
call
mov
adc
pop
add
fwait
outsl
xlat
and
out
ss
xchg
jge
rorb
pop
leave
dec
arpl
cwtl
ss
fstps
lcall
je
inc
test
or
mov
push
or
popa
nop
repnz
mov
stos
sbb
cmp
out
ljmp
sub
xor
lahf
test
add
pop
bound
inc
add
mov
mov
stos
add
adcb
or
mov
pop
adc
xchg
lret
stos
add
mov
add
mov
es
or
add
pop
in
inc
jmp
flds
repz
and
dec
fnstsw
add
mov
inc
popf
push
and
arpl
ret
incl
stos
dec
lds
add
inc
adc
fldl
lret
les
pop
adc
lahf
test
mov
jmp
or
in
stos
dec
add
int3
xchg
and
inc
or
cmp
inc
add
adc
push
push
fistl
push
jo
add
lea
testl
int
cmpsb
pop
adc
mov
adc
add
jno
call
pusha
out
mov
stos
add
pop
cmp
int
ljmp
test
mov
stos
movb
add
push
dec
cld
rcrl
cmpsl
xchg
add
mov
add
fs
dec
sbbb
cli
push
adc
es
stos
xor
sbb
test
and
daa
gs
inc
sbb
add
xchg
out
mov
lds
xchg
mov
add
in
push
das
cmp
andb
inc
xlat
push
dec
mov
data16
jb
xchg
and
push
sub
test
out
mov
gs
sbb
aaa
sti
lcall
dec
push
push
in
pop
add
mov
add
adc
add
jmp
sub
xor
inc
scas
imul
mov
adc
or
inc
push
add
adc
ret
jmp
add
pop
push
cld
push
arpl
pop
jne
and
outsl
lret
xchg
loop
sbb
jmp
decl
orl
pop
sub
lods
daa
lahf
add
jbe
cli
push
out
add
mov
movsb
push
ljmp
pop
mov
das
push
xchg
inc
pop
add
sub
andb
pop
scas
das
cwtl
add
and
clc
mov
pop
adc
or
jbe
push
testb
test
jno
test
sub
jo
aad
rorb
jno
dec
jp
mov
or
xchg
ret
ds
shlb
xor
ja
add
std
das
mov
pusha
mov
sbb
pop
pop
shlb
add
fistpl
pop
mov
lcall
cmp
adc
add
xchg
enter
mov
mov
pop
or
push
sbb
repnz
xlat
ljmp
imul
icebp
cmpsl
sbb
sbb
push
test
and
sarb
pushl
cld
pop
mov
xor
jns
cli
push
test
mov
mov
pop
pusha
cmp
sbb
push
inc
inc
loope
call
lret
scas
addb
pop
pop
inc
rorb
push
insb
pop
mov
stos
add
cli
sbb
sbb
mov
mov
rolb
aas
and
cmpsb
movsb
mov
mov
pushf
cmpsb
pop
je
pop
movl
xchg
cmp
mov
jp
mov
movsl
pop
dec
fisttpl
in
inc
add
and
loopne
leave
test
dec
mov
pop
or
cmp
shrb
sbbb
inc
pop
testb
fwait
test
addr16
add
pop
add
push
pop
or
inc
outsb
and
add
push
mov
cld
loope
hlt
in
jbe
dec
sub
push
push
lods
mov
andb
jb
or
movsl
out
sbb
loope
push
rol
mov
dec
clc
je
in
add
sub
add
icebp
push
lock
jecxz
mov
add
fisttps
outsl
or
adc
xlat
or
mov
cmpsl
loopne
add
dec
mov
rcll
jl
mov
jg
add
out
push
jbe
cmc
repnz
or
testl
pop
fildl
imul
dec
pushf
call
jae
cmp
inc
js
in
lock
popa
addb
addl
mov
popa
sbb
ret
lret
mov
cmp
or
or
hlt
mov
cmc
sub
adc
add
out
stos
cmp
xchg
add
inc
mov
ja
push
aad
inc
jne
add
push
call
pop
shrb
lret
adcb
fbld
jns
add
mov
add
pop
loop
dec
out
test
mov
add
mov
je
cmpsl
in
mov
sbbb
xchg
repnz
shll
iret
jo
pushf
add
lds
pop
mov
fmuls
and
arpl
jae
or
xchg
xor
cmpxchg
fisttpll
imul
mov
movsl
mov
jg
mov
loopne
add
jge
inc
cli
dec
pop
movsb
add
lahf
push
mov
push
xor
sub
inc
fs
dec
je
cwtl
out
add
mov
mov
enter
mov
add
rclb
add
in
loopne
dec
push
mov
xor
or
test
add
jg
mov
mov
aam
sub
cmp
popa
mov
add
sti
sub
add
push
dec
and
xor
adc
jns
add
loopne
repz
or
push
mov
dec
push
lcall
daa
dec
es
call
mov
mov
push
jo
push
add
xchg
and
sbb
add
xchg
pushf
call
push
cmp
sti
add
xor
inc
loop
push
loop
std
add
jo
push
and
add
sub
mulb
adc
addr16
out
scas
add
imul
cmp
dec
add
movsl
adc
cmpsl
add
sarl
xorb
lret
pop
cld
adc
lahf
lods
xchg
repz
std
scas
inc
push
scas
fcmovne
push
jl
cld
push
add
inc
pop
add
rorl
test
add
movsb
pop
adc
mov
jns
add
lret
sti
push
out
jbe
add
mov
js
sub
lock
push
loopne
popl
jo
xchg
cmp
cwtl
bound
inc
mov
pop
push
dec
xor
dec
push
add
insl
ja,pn
push
hlt
jge
add
push
adc
arpl
data16
jae
addr16
cld
inc
sbb
push
push
inc
jl
inc
pusha
jbe
outsb
stc
jmp
les
lock
imul
dec
jge
jl
iret
nop
push
dec
dec
outsb
iret
jnp
mov
cmp
jne
ret
icebp
outsl
insb
clc
gs
pusha
push
out
in
jae
jns
pop
jle
sbb
and
or
cmp
add
jae
dec
add
sbb
or
push
insl
push
popa
jb
dec
pusha
ret
bound
popw
addr16
adc
jbe
push
jno
add
les
iret
test
mov
outsb
data16
push
jbe
ja
push
inc
mov
or
jb
jae,pn
arpl
add
test
push
push
sbb
imul
arpl
pop
dec
pop
iret
inc
push
pop
lock
popa
loopne
push
push
je
mov
lea
xchg
inc
cmp
outsb
inc
xchg
into
sarb
stc
and
dec
add
imul
in
xchg
xor
push
add
jl
mov
loope
xor
fiadds
push
adc
je
push
addr16
jbe
and
pusha
ja
shlb
sub
add
jp
addl
push
cmpsl
dec
push
iret
shll
enter
add
xchg
sbb
arpl
insb
shlb
jmp
add
ret
enter
and
mov
mov
sub
adc
jp
test
and
sub
sub
mov
les
sbb
mov
shlb
pop
and
ds
daa
push
cltd
xorl
add
jae
mov
enter
fs
sarb
rolb
add
xchg
adc
sbb
mov
dec
add
sbb
aam
nop
push
dec
in
xor
divb
test
jle
xor
mov
test
xchg
push
add
jp
and
rolb
nop
out
fisubl
mov
sub
mov
cmpb
add
inc
adc
push
pop
ret
out
fs
push
cmpsl
jl
or
popf
loop
sbb
in
add
push
cld
hlt
xor
add
push
lea
add
mov
mov
bswap
mov
add
add
bnd
or
push
mov
push
push
push
add
sbb
jmp
push
mov
pop
pop
aaa
pusha
xchg
dec
or
aad
ljmp
jle
clc
iret
mov
jb
pop
sbb
xor
and
shll
cmp
xchg
daa
jl
mov
rorb
repnz
and
inc
pop
adc
loop
push
pusha
movsb
push
rorb
inc
icebp
mov
flds
inc
adc
outsl
mov
rcrl
inc
into
or
ret
shlb
and
les
pop
sti
andb
cmp
fiadds
or
and
fcoml
adcb
sub
sbb
enter
inc
and
mov
cmp
xor
cmp
cmp
flds
inc
add
dec
adc
xchg
push
mov
in
ljmp
sbb
jae
out
cmpsl
shlb
or
add
xor
mov
pusha
aad
jbe
xor
insb
or
xchg
jo
adc
js
and
jl
mov
mov
mov
lods
xchg
inc
add
mov
or
xor
and
icebp
cwtl
pop
mov
ds
mov
sbb
mov
push
idivl
ret
fst
lds
movsb
aad
push
mov
or
lds
and
dec
pusha
es
cmp
je
push
aad
mov
mov
repnz
pop
insl
cmc
int3
ror
push
pop
nop
mov
and
pusha
loop
pop
inc
imulb
add
mov
inc
enter
rcl
sbb
mov
cli
faddl
push
adc
xor
dec
inc
in
movsl
mov
lock
mov
pop
arpl
mov
sbb
aad
pop
cwtl
jmp
sbb
jnp
or
or
movups
mov
addb
sbb
pop
and
or
icebp
add
xor
push
inc
cmp
cmp
xor
mov
inc
add
insb
add
call
mov
fadds
or
pop
mov
add
or
add
dec
clc
dec
add
add
mov
pushf
add
fistpll
lds
pop
leave
push
push
add
jmp
ljmp
xor
add
jbe
lods
dec
or
dec
loope
add
adc
cmp
jle
xor
sbb
rorl
mov
clc
test
cmpsb
add
cmpb
out
jg
call
repnz
pusha
out
shrd
mov
fsubp
dec
and
add
aaa
jne
cwtl
pop
test
add
xchg
push
adc
mov
call
add
pop
mov
add
pop
loop
lahf
and
rolb
jae
push
push
adc
mov
es
push
jnp
out
add
scas
or
test
rolb
cmp
cmp
addb
or
jmp
jge
add
push
or
lea
mov
cmpsb
mov
mov
cmp
lock
sub
push
add
das
js
movsb
cmp
sub
pusha
add
jl
lods
lret
jmp
sbb
push
subb
push
pusha
ret
popf
lret
mov
lret
test
jbe
cmpb
aam
jb
xor
push
aaa
adcl
add
xor
inc
sbb
jmp
repnz
or
pop
std
fadd
psrld
loope
add
pop
mov
mov
nop
jnp
jp
mov
add
inc
mov
push
cmp
mov
inc
pop
fcompl
bound
or
mov
xor
les
xchg
jnp
add
inc
insb
pusha
mov
jl
push
dec
ret
lret
push
add
call
js
outsl
jne
or
jb
cs
push
shl
and
pusha
shll
add
ret
xor
insl
mov
int3
jp
aas
sti
scas
add
dec
cli
shl
roll
sbbb
clc
jge
or
add
dec
push
pop
push
dec
add
cmp
je
jnp
xchg
popl
ljmp
push
pop
lret
jne
add
pop
push
adc
roll
lcall
inc
in
jp
add
pop
faddl
mov
dec
call
or
adc
add
nop
outsl
pushf
test
jnp
push
cli
pmaxsw
or
add
je
dec
stos
bnd
jnp
add
sti
push
call
dec
inc
sub
add
bound
fcmovb
xchg
cs
add
mov
mov
cmp
mov
mov
movsb
dec
sbb
push
mov
and
test
clc
inc
mov
xchg
lcall
jne
and
imul
addb
inc
pop
cmpl
in
scas
adc
aam
mov
pop
xchg
push
outsl
mov
mov
add
push
into
loopne
movb
jecxz
enter
add
adc
out
icebp
cmp
leave
adc
shrb
out
ds
pop
leave
adcb
add
shr
add
cmp
mov
sar
loop
xor
movb
bound
pop
jb
add
enter
mov
jl
cs
dec
cmp
xchg
jl
sbb
or
inc
cmpb
jge
adc
push
clc
and
sahf
out
inc
arpl
gs
lock
pop
movsb
add
in
inc
pop
cli
mov
enter
roll
add
and
or
jne
push
scas
add
and
cs
pop
daa
jbe
add
sbb
cmp
rorb
mov
add
push
imul
and
ja
and
hlt
out
add
fldl
call
add
test
mov
jge
cmp
dec
adc
lds
pushf
mov
dec
sahf
imul
add
shrb
jecxz
dec
xchg
inc
push
jl
idivl
add
dec
addr16
and
dec
or
add
nop
stos
sbb
sbb
jp
cmpsb
sarl
sub
and
add
push
and
test
dec
xchg
mov
inc
or
add
subl
ret
jo
push
sbb
pop
test
repz
hlt
fildll
cld
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
es
xlat
loopne
call
jno
add
inc
jmp
lea
not
ljmp
cmp
add
cmp
adc
jae
jno
dec
and
in
sbb
jne
mov
outsb
add
fcmovu
lret
add
sbb
add
or
fcmovnb
pusha
cmp
inc
or
shlb
out
out
add
sub
mov
jp
cmp
lea
xchg
int3
inc
cmp
pop
or
sarb
jle
xchg
adc
xchg
dec
iret
decb
repz
lock
bound
jnp
mov
lcall
ds
fisttpl
mov
lock
repnz
cmpsl
mov
in
loopne
adc
cmp
fistps
or
push
add
add
cmc
sub
jg
scas
mov
jge
add
mov
cmp
jae
or
loopne
nop
andb
pop
iret
sub
ret
je
inc
pushf
lret
inc
or
dec
test
adc
add
sub
mov
inc
pop
fiadds
push
push
add
add
ljmp
sbb
lea
or
sub
jbe
dec
sbb
jmp
xchg
add
or
xor
adc
sub
adc
shlb
jge
pop
sbb
jmp
sub
push
add
add
imul
pop
and
shlb
ret
imul
addb
add
inc
or
pop
xor
lahf
or
push
unpckhps
inc
mov
in
add
mov
add
push
add
inc
xchg
lret
pop
adc
test
lock
add
sbb
mov
add
jmp
out
dec
pop
test
pop
add
sbbb
add
dec
aas
roll
pop
pop
add
jmp
les
sbb
pop
add
and
fnstenv
sbb
inc
roll
loopne
test
and
and
outsb
pushf
lahf
jecxz
dec
lcall
ljmp
add
jmp
mov
gs
nop
jae
jbe
add
xchg
fisttpll
jae
cmp
and
mov
jmp
sbb
adc
aam
in
out
add
sbb
dec
xor
ja
add
adc
sbb
sbb
ja
cwtl
mov
mov
cmp
orb
adc
js
xchg
add
push
add
cmp
push
xchg
cmpsl
mov
lret
add
das
imul
insb
decb
add
mov
push
testb
out
jmp
rolb
cmp
cli
jae
mov
pop
inc
sub
cmp
mov
lret
inc
popf
inc
dec
push
cmc
add
fld
inc
or
test
sub
sub
daa
mov
es
add
mov
pop
stos
fs
inc
ret
nop
add
ds
cmp
dec
add
clc
sub
xchg
nop
sub
xchg
dec
adc
add
out
add
push
fcomi
push
es
mov
clc
jo
pop
cmp
cmp
ljmp
push
nop
repnz
clc
pop
call
call
mov
add
xchg
pop
jns
push
mov
cmp
add
scas
sub
orb
mov
cmp
pop
mov
push
loopne
mul
and
adc
cmp
rcrb
pop
pop
icebp
or
out
add
loop
cmp
add
add
or
or
es
lret
fs
add
adc
test
xchg
cli
lcall
orl
mov
lcall
and
cmp
sbb
pop
jns
pusha
pushf
fnsave
pop
sub
push
jp
push
inc
dec
xchg
add
inc
nop
jbe
push
push
add
std
shll
sbb
jle
gs
add
loopne
fiaddl
je
cmpsb
inc
pop
sub
hlt
ja
add
dec
nop
fsubrs
add
mov
xlat
test
add
jmp
dec
ud2
movsl
add
mov
rorl
fiadds
pop
sub
nop
add
popa
or
movzbl
stc
iret
loop
pop
add
das
add
add
push
inc
arpl
jae
add
dec
ret
or
add
out
dec
cmp
sbb
imul
cmovb
add
mov
ds
push
or
mov
loop
sbb
jecxz
add
clc
adc
jo
push
repnz
mov
or
lds
mov
add
pop
sub
repnz
jb
or
cmp
and
movsb
inc
dec
xchg
popa
outsb
aam
xor
enter
lahf
cmp
add
jmp
sbb
and
xchg
inc
push
mov
pop
enter
xor
shl
add
ljmp
fadds
jmp
add
jb
test
add
out
sub
adc
mov
or
add
cmp
int3
hlt
mov
add
sub
adc
iret
xor
add
xor
aam
hlt
je
js
mov
sti
add
cmp
pop
das
push
or
add
or
sub
jmp
lock
rcrb
adcl
jne
or
add
jmp
and
dec
pop
roll
loope
push
mov
cwtl
imul
jge
cmp
push
add
cmp
pop
roll
stos
mov
or
add
mov
or
add
pop
test
sub
iret
push
mov
push
add
mov
pop
sbb
imul
and
inc
sub
and
mov
subl
clc
xchg
testl
sbb
fisubrl
mov
ret
loop
or
je
add
add
pop
stos
stc
adcb
add
or
rcrb
scas
add
push
add
into
sti
jl
aas
fldl
adc
movsb
jg
push
lds
repz
or
cwtl
add
pop
or
push
mov
dec
jb
jnp
add
repnz
xor
int
push
mov
cli
imul
mov
inc
dec
inc
pusha
cli
inc
pushf
pop
movsb
shrb
leave
xor
pusha
pop
or
xor
mov
pushf
sbb
or
adc
test
aam
test
push
pop
add
push
cmpsl
push
add
int
add
pop
stos
xor
pop
in
or
or
add
sarb
jl
add
jmp
test
cwtl
sbb
add
push
cs
mov
xchg
add
rorb
clc
call
sbbl
adc
add
cmp
xor
cmp
jbe
sbb
sbb
mov
inc
stc
les
loop
jg
add
leave
xor
inc
xchg
add
in
adc
int3
movsb
add
daa
add
repz
cmp
rolb
rolb
dec
mov
jmp
mov
cmp
cli
cmpsl
inc
push
xor
pusha
ret
push
add
xor
push
test
in
add
fstl
loopne
sub
nop
cmpsb
xor
add
mov
inc
test
add
aam
adc
dec
sbb
push
jmp
xchg
xor
test
ja
jmp
testl
subb
add
popf
fsubs
add
ja
mov
add
and
roll
loopne
out
and
cld
pop
jbe
roll
out
jl
imul
mov
scas
ret
or
mov
sub
mov
push
add
or
sub
daa
ja
xchg
mov
pop
mov
adcb
xchg
aas
cmp
jbe
test
and
inc
int
cs
add
std
sub
mov
nop
loopne
push
out
add
or
inc
xor
pop
inc
mov
dec
xor
test
je
add
mov
sub
pop
push
outsb
or
pop
ss
mov
shrl
dec
mov
add
adc
inc
add
lea
inc
add
leave
repz
test
mov
movsb
out
or
inc
jne
add
dec
fdivrl
xchg
cmp
xor
pop
mov
add
add
cmp
adc
sarb
mov
add
addr16
jmp
mov
push
push
inc
pop
lods
mov
xlat
sbb
daa
add
cmp
sbb
nop
or
xorl
push
sbb
cmp
inc
mov
xchg
fcmovb
jnp
shll
push
add
mov
sti
dec
test
add
cmp
push
loope
jl
and
pop
add
into
add
xchg
mov
jno
add
xor
faddl
add
add
push
mov
inc
jne
adc
popa
and
add
cld
and
mov
fcompl
loopne
add
inc
add
push
add
mov
inc
adc
add
shl
cmp
ja
in
aas
aam
cmpl
mov
sub
aad
adc
add
mov
jae
rcll
je
negb
cmp
add
push
add
jecxz
jae
orb
and
adc
movsl
mov
aaa
inc
mov
mov
pop
jmp
and
jp
lret
call
add
clc
insl
dec
lods
cwtl
jae
add
cmp
hlt
adc
add
xor
lds
dec
cmpb
and
iret
in
inc
sub
sub
mov
imul
shll
add
push
cmp
sub
test
not
nop
jns
add
ret
push
pop
lahf
mov
aas
in
push
pusha
mov
adc
sub
sub
push
data16
inc
xor
push
add
sub
add
jae
add
cld
rolb
or
sub
ss
add
xor
inc
add
sub
add
arpl
ret
sbb
push
jecxz
loopne
jne
add
adc
rorb
inc
aas
add
out
ret
jno
add
adc
pushf
loopne
cld
xchg
clc
pop
jno
add
stos
out
push
aam
push
mov
insl
adc
movd
mov
cmp
jne
or
lods
call
inc
push
push
pop
orb
or
movsb
or
dec
push
fadds
inc
inc
bound
int
pop
into
leave
cmp
mov
jae
dec
push
add
dec
adc
dec
jl
add
pop
repnz
popf
addl
cmpsl
cmp
adcl
enter
add
cmp
dec
add
adc
jnp
add
and
jl
dec
pusha
push
add
stos
xchg
pop
loope
nop
jp
sbb
rol
pusha
or
jne
xor
push
jb
inc
shr
test
cmc
mov
xchg
lods
mov
adc
jbe
adc
aam
add
cmp
loopne
adc
add
mov
in
add
in
dec
dec
insb
outsl
xchg
add
sbb
sub
fdivs
jo
add
cmp
cmp
mov
incb
popa
icebp
push
jbe
add
pop
pop
push
add
push
mov
movsb
and
add
pop
das
jne
rorb
mov
dec
pop
shl
fists
add
out
mov
add
ljmp
mov
pop
or
std
jns
add
xor
xlat
pop
mov
bswap
add
in
and
add
repnz
shlb
movsl
pop
std
xor
inc
and
jp
mov
mov
sub
push
sbb
add
cmpsl
jns
leave
call
dec
push
xchg
cld
add
mov
stos
fdivrs
outsb
add
adcl
add
test
inc
mov
andl
xchg
push
popa
adc
je
adc
test
cmp
add
arpl
orb
xor
clc
or
and
push
or
fldl
cmpsb
sbb
add
loope
jbe
push
adc
add
mov
mov
xor
cmp
xor
dec
push
dec
outsb
adc
pop
cmp
add
jmp
jb
sarb
mov
dec
popa
repz
or
test
leave
xor
jl
xlat
mov
mov
add
xor
loopne
fsubr
pop
add
or
cs
push
mov
xlat
pop
inc
icebp
add
cmp
pop
popf
testb
in
scas
pusha
push
out
lock
call
rol
add
not
mov
lahf
pop
addl
inc
ret
fldpi
mov
shl
mov
test
mov
cltd
cmp
push
sbb
mov
xchg
test
jl
sbb
jge
add
mov
mov
sbb
add
aad
daa
add
ret
jge
cmp
cmpsb
xchg
lods
adc
add
and
mov
clc
pop
push
cmpsb
lahf
cld
and
add
in
pop
push
xchg
adc
scas
add
inc
push
sub
in
fwait
add
push
push
cmc
xchg
mov
jb
or
pop
jbe
movb
add
test
xchg
enter
out
dec
inc
add
mov
sub
sub
jmp
adc
add
sarb
repz
gs
subb
dec
or
xor
pop
xchg
add
bound
loopne
sub
cmp
enter
dec
out
iret
fdivr
jge
sahf
inc
adc
mov
daa
sub
add
mov
add
int
sub
inc
mov
incl
insb
or
adc
pop
pop
mov
fimuls
add
adc
call
sahf
fdivrl
add
insl
adc
imul
das
insb
jbe
clc
in
mov
jae
mov
pop
sub
hlt
add
cmpsb
add
push
popa
aaa
nop
add
adc
inc
ljmp
sbb
and
bound
sbb
add
xlat
testb
jns
sti
push
or
test
int
xchg
mov
jmp
sub
mov
mov
or
cmp
fists
repnz
add
loopne
jg
pop
fldl
call
push
dec
adcl
pusha
or
add
jg
fildl
jmp
push
inc
aam
dec
add
sub
pusha
hlt
mov
lcall
add
or
sete
test
push
lods
mov
add
sbb
xchg
jp
or
adc
xor
dec
sbb
js
jae,pt
inc
in
lret
adc
pop
sti
sub
and
fsubs
mov
xchg
inc
fdivrs
call
adc
push
mov
stc
xchg
dec
rol
movsb
mov
push
jae
addr16
movsl
fucomi
mov
aam
incl
jl
in
inc
in
and
data16
push
jmp
pop
loopne
add
stos
cltd
push
cmp
jl
cmp
pop
jg
pop
mov
rolw
loopne
or
ljmp
aas
jl
pop
ret
push
sub
push
pop
add
or
je
fwait
aad
mov
dec
aas
roll
or
add
and
ss
sbbb
sbb
sub
dec
mov
add
dec
stos
dec
jp
add
js
and
inc
std
pop
ret
mov
pop
and
sub
xor
add
and
gs
or
outsb
add
push
les
adc
mov
fdivrp
mov
and
add
icebp
and
sbb
and
add
add
fsubs
insb
xor
xlat
pop
outsb
rep
push
loopne
aad
push
and
inc
mov
test
and
add
push
mov
pop
add
sub
push
fdivl
mov
rclb
and
add
ret
xchg
in
mov
test
cmpsl
jo
aas
or
cmp
andb
rorl
push
call
ds
cmp
sub
sar
and
push
add
mov
jo
add
and
je
or
add
add
add
and
inc
lock
add
xor
dec
jg
jmp
cmc
ljmp
pop
jnp
clc
push
pushf
ljmp
add
xchg
lea
add
icebp
adc
fcmovu
add
repnz
and
fwait
add
add
cmc
in
adc
cmpsb
dec
inc
sti
or
add
psubsb
cmp
das
das
push
rolb
add
or
mov
lock
and
cwtl
pop
rolb
lods
inc
fnstenv
psrld
mov
pop
sbb
add
fisttpl
stos
add
dec
pop
hlt
mov
sbb
or
sarb
paddusw
out
sub
lods
je
inc
sti
add
push
mov
sahf
add
cmovle
add
or
mov
add
jbe
adc
and
insl
jnp
cmp
and
loopne
inc
and
inc
push
jmp
add
cmp
cmpsl
and
decl
or
add
push
insl
scas
add
mov
inc
add
mov
add
pop
jmp
xor
bnd
addps
inc
mov
leave
sub
mov
hlt
mov
add
or
adc
and
add
xchg
mov
xchg
push
add
mov
pushl
jbe
cmp
lods
test
int3
lods
dec
and
jge
pop
and
js
gs
mov
mov
pop
mov
xlat
pop
cmc
add
push
adc
add
loopne
movl
push
xchg
mov
push
mov
mov
out
push
js
cmp
push
mov
and
cmp
sbb
in
loop
icebp
push
cmpsl
or
add
and
scas
repnz
and
ja
add
movsb
leave
dec
lock
mov
add
push
and
cmp
add
sub
add
test
add
add
imul
ljmp
jp
or
mov
add
adc
add
shrd
sarb
add
mov
or
xchg
out
add
std
cmp
xchg
aaa
add
pop
sbb
adc
cmp
xchg
add
push
mov
out
ret
add
hlt
test
nop
fs
add
push
or
mov
pushf
out
ficomps
nop
cmpsb
les
rolb
adc
add
jecxz
out
in
inc
sbb
ljmp
inc
and
pop
cltd
xchg
and
lea
shrb
ds
or
mov
cs
push
sbb
push
je
xchg
add
push
mov
hlt
pop
and
in
push
nop
or
sbb
adc
dec
mov
mov
in
add
mov
add
scas
adc
sub
mov
roll
cmc
and
push
sahf
add
mov
jge
xchg
nop
push
pop
mov
icebp
mov
loope
add
cli
xor
addl
xchg
pop
out
jmp
mov
add
jne
aaa
fldt
ret
inc
add
mov
add
in
cmpsb
ljmp
leave
rorl
add
jmp
sarl
insl
add
xchg
mov
or
pusha
sbb
inc
cmpsb
inc
add
inc
jnp
mov
pop
mov
mov
xchg
les
pusha
xor
add
adc
adcb
pop
add
adc
cmovp
add
xchg
push
mov
nop
testl
pop
popf
loopne
push
mov
sub
add
or
pop
in
dec
ret
aad
test
push
lock
jge
pusha
lods
jl
dec
add
iret
jecxz
aad
sub
add
xchg
fcoml
nop
cmp
icebp
add
call
pop
cmp
ds
lock
push
add
out
repz
pop
push
movsb
arpl
inc
jno
xchg
push
dec
xchg
sti
sbb
cld
adc
and
push
inc
mov
pusha
add
or
or
lret
sbb
cmp
out
adc
mov
add
mov
or
sub
repz
lcall
xor
adc
add
ret
push
mov
push
lock
jge
or
mov
mov
push
inc
mov
pop
inc
lock
in
or
xor
inc
jae
push
cmp
cld
add
test
mov
add
push
mov
add
jae
pop
jp
xor
fcmovnb
fsubr
lcall
loope
sbb
push
and
jae
pop
enter
jb
sbbb
orl
add
leave
add
xor
adc
adc
int3
mov
inc
pop
sub
lret
jne
leave
and
lcall
xor
icebp
repnz
lea
dec
pop
roll
popf
in
push
xor
and
mov
enter
inc
mov
push
add
jns
shrb
fiaddl
fsubp
sbb
cli
inc
jne
aad
mov
jo
pusha
mov
loop
icebp
and
rorb
push
or
pop
pop
push
dec
cmp
outsb
out
jo
mov
les
or
inc
cmp
pop
jle
scas
inc
pop
pop
add
out
mov
test
xchg
and
inc
dec
popa
add
jcxz
jne
mov
cmp
mov
add
vcvttsd2si
es
adc
mov
stos
cmp
mov
cmpb
or
add
xor
dec
add
xchg
clc
mov
inc
ret
adc
dec
jg
add
add
add
push
jns
add
not
pop
and
sbb
imul
out
push
test
gs
bound
push
pusha
add
enter
cmp
add
and
mov
cli
rclb
cmp
call
cmpb
insb
xor
wrmsr
mov
push
add
leave
aam
adc
and
or
pop
daa
or
cmp
bound
je
loope
mov
dec
mov
pop
adc
push
sub
and
pop
inc
je
lahf
or
push
in
add
and
mov
push
cmp
or
aas
push
or
add
mov
fidivrl
jp
pop
push
and
adc
orb
jle
add
inc
jp
fimuls
add
jge
call
add
imul
add
popa
mov
fbstp
jne
stc
fsub
add
sbb
or
xchg
loopne
or
nop
add
add
add
pop
jl
add
dec
adc
and
lock
add
std
xchg
mov
jl,pt
add
xchg
and
add
dec
jne
imul
sub
add
sub
add
add
in
ror
add
test
mov
adc
push
push
sbb
inc
mov
xchg
inc
inc
addb
xchg
les
or
xchg
mov
xor
in
lea
orl
mov
enter
ljmp
stc
add
cld
cwtl
inc
test
imull
add
push
xchg
arpl
mov
movsl
jbe
add
icebp
or
js
lcall
mov
das
pop
ret
pop
jne
fsubs
mov
mov
cs
sbb
out
mov
scas
mov
inc
pushf
and
fsubs
rolb
mov
sti
das
add
jns
and
add
mov
sub
mov
or
stos
mov
loopne
sbb
stc
sub
sub
enter
push
dec
adc
push
test
cltd
subl
mov
sbb
mov
push
or
lock
test
cmp
mov
idiv
mov
test
mov
adcl
cmp
xchg
jne
in
popf
push
in
mov
xchg
push
sbb
mov
pop
xor
cmp
mov
out
add
dec
adc
lock
inc
dec
xor
jb
xor
pusha
add
pop
ficompl
mov
out
shll
shlb
mov
aam
in
jae
cmpxchg
xchg
cld
push
jmp
mov
in
pusha
mov
mov
mov
add
lock
jno
add
jns
lea
ret
pop
cmp
rcrb
cmpl
les
add
inc
pop
push
sahf
xlat
loopne
pop
pop
je
push
pop
add
mov
xchg
cmp
cmovns
mov
jb
mov
add
jo
and
out
add
or
nop
cmp
and
mov
inc
push
push
sbb
add
loope
mov
mov
xchg
push
sub
shrb
aaa
int3
sbb
inc
das
and
inc
jl
sbb
fdivl
les
loop
aas
mov
dec
push
pop
clc
jo
add
and
loopne
add
and
pop
add
hlt
push
cld
push
leave
adc
ds
and
dec
mov
xor
jo
add
cmp
push
loopne
add
pop
hlt
pop
inc
in
add
dec
push
pop
movsl
xchg
out
loopne
fbld
pop
mov
fldl
push
xchg
add
sub
mov
add
js
and
mov
cmp
or
bound
push
in
clc
into
loopne
mov
jbe
aas
enter
ret
xor
inc
daa
das
ljmp
mov
pop
jno
add
aam
in
lret
jo
cmpsb
and
imul
imul
jg
dec
daa
ret
cwtl
sub
jo
sarb
add
jge
adc
iret
mov
sub
movb
adc
mov
mov
mov
je
ret
add
pop
push
add
jae
jne
xor
cmp
sub
fdivrs
mov
lcall
aam
cmp
add
outsl
lods
ss
and
push
pop
jp
ljmp
inc
adc
lock
mov
push
xor
es
jnp
xchg
jmp
push
movb
repz
mov
divps
mov
or
pop
adc
rorl
test
jp,pn
cld
dec
xlat
movaps
shrl
push
pusha
fisubrs
add
add
jb
pop
xchg
jne
aas
inc
or
sarw
mov
sbb
cwtl
dec
adc
loopne
inc
pop
add
ret
pop
fwait
jmp
insb
jp
add
cs
sbb
movsb
inc
mov
push
mov
clc
fwait
mov
and
lock
add
or
add
cld
xor
push
stos
and
and
or
mov
pop
lods
notl
jle
nop
xchg
inc
mov
pop
adc
and
lea
rcrb
or
push
mov
add
aas
pop
jge
cltd
pop
xchg
pop
sarb
add
inc
test
or
lods
stos
dec
sbb
sbb
add
inc
xor
or
rcr
adc
fdivl
sahf
ja
sub
mov
movsb
adc
mov
push
fiadds
xorl
fisttpll
jns
adc
incl
out
mov
aaa
push
inc
push
cmpb
pop
cwtl
add
into
dec
add
leave
mov
dec
lock
loopne
arpl
add
adc
add
pop
je
push
repnz
pop
in
lret
sub
stos
sbb
rcr
movsl
cmpsl
dec
jo
cmp
add
fstpl
jge
test
mov
mov
and
stc
hlt
clts
cmp
rcrb
push
arpl
or
int3
cmp
call
movsl
dec
insb
xor
add
cmc
pop
aad
gs
loopne
adc
mov
add
popl
ret
cmp
add
mov
cltd
cmp
imul
pop
loopne
cmp
imul
add
dec
aaa
mov
inc
aad
mov
loopne
add
lret
jo
aas
pop
sbb
fdivrs
jo
add
out
sbb
push
loope
sbb
test
mov
negb
movsl
mov
sbb
xchg
add
gs
sahf
sbb
sub
test
jo
cmp
or
and
incl
sti
push
scas
xor
mov
and
xor
int
jle
sbbb
flds
shld
xor
iret
enter
lods
xor
jb
jae
add
stc
pop
fldl
push
fsub
sarb
mov
add
mov
outsb
out
push
mov
add
stos
mov
aam
sbb
sub
rcrl
ljmp
loopne
sbb
add
in
jo
add
cld
dec
int3
dec
insl
jno
cld
add
xchg
pop
test
mov
add
ret
push
cmp
nop
add
add
xor
cld
sbbb
cmp
shr
or
sbb
mov
repnz
add
lods
mov
lods
push
sahf
push
add
add
jne
ret
push
add
dec
or
add
ret
mov
outsl
jo
out
add
imul
pop
lods
xlat
add
push
pop
lock
push
cs
cmpsb
mov
xchg
pop
je
add
pop
inc
add
add
les
adc
pusha
dec
jl
cld
pop
add
add
and
xor
push
mov
inc
andb
and
popa
cmp
pop
andl
xor
pop
test
add
call
dec
cmp
xchg
inc
mov
outsl
psubusb
or
adc
fdiv
nop
cld
out
pop
and
jg
add
adc
movsl
xchg
mov
pop
add
loopne
andb
movsl
and
addr16
data16
test
xchg
dec
cmc
jo
add
mov
add
and
movsl
aaa
fsubs
cmp
das
ret
mov
lea
jb
adc
outsl
add
into
testl
xor
add
aam
add
add
shlb
push
jno
add
sarl
std
jo
add
ds
loope
aam
push
add
jae
ljmp
and
jnp
push
add
loope
cmp
out
dec
in
nop
sub
pop
push
jbe
add
out
adc
std
lods
add
enter
mov
pop
dec
dec
inc
xor
add
in
pop
sbb
pop
xchg
call
push
jmp
loop
sub
xlat
movsl
mov
push
add
stos
sbb
data16
or
add
cmpb
arpl
xchg
cmc
inc
addr16
add
out
add
cmpb
pusha
pop
test
add
xchg
mov
add
test
add
xlat
ja
fsubl
ret
mov
pop
push
in
cs
icebp
scas
rclb
cli
add
mov
stos
in
icebp
lock
xlat
out
dec
das
jle
jl
mov
mov
sub
mov
ds
add
push
std
add
add
ljmp
pop
out
mov
pop
sbb
pusha
push
imul
sub
mov
mov
add
sbb
push
sub
dec
loop
push
pop
xor
and
add
add
mov
pop
sbb
call
ret
mov
ficoms
lret
add
jg
mov
add
test
movsl
fdivr
xchg
mov
inc
add
lret
stos
sarb
inc
mov
add
loopne
pop
cmp
out
pusha
sbbl
and
pop
lret
stc
rorl
shlb
mov
sti
lcall
and
mov
orb
jp
sub
xor
shl
cltd
pop
sub
and
loopne
xlat
xor
mov
add
enter
popa
cwtl
add
add
mov
pop
stc
add
fnsave
cmp
and
cmp
fiadds
nop
jo
push
adc
sbb
add
or
cmpl
loopne
add
mov
das
push
pop
jns
stos
add
xchg
cs
add
jge
clc
jo
add
sti
das
je
mov
pop
daa
dec
push
sub
cmc
pop
add
rolb
cwtl
ljmp
add
psrlw
sbb
pop
sahf
leave
add
dec
or
loop
subb
add
jg
adc
dec
add
test
addl
pop
aam
push
add
repnz
pusha
push
inc
data16
inc
lea
ds
sbb
push
inc
clc
mov
jp
dec
addb
call
cmp
sbb
daa
add
push
add
pop
add
and
imul
int
loop
sub
xor
out
xor
push
jno
in
jecxz
rcrb
add
pop
iret
fstpl
xchg
add
or
pop
add
sbb
call
cmc
test
fsubl
test
jns
xor
negb
test
into
hlt
mov
push
js
pop
roll
mov
stos
add
or
enter
add
pop
ret
hlt
jge
shlb
jne
pop
shlb
ret
pop
cmova
insl
pop
pop
inc
repnz
dec
or
dec
loopne
xor
rclb
sub
ret
flds
mov
add
xor
sub
dec
mov
int3
pop
inc
add
movb
mov
outsl
mov
int3
arpl
push
stos
out
push
out
pop
ret
jp
cmp
mov
pop
test
add
push
pop
sbb
inc
and
mov
iret
inc
into
mov
add
fs
imul
cmp
lds
inc
add
sbb
push
and
jge
push
jg
add
adc
add
fildl
inc
dec
jne
std
les
aam
dec
mov
test
arpl
data16
fstl
scas
cmc
push
out
mov
ljmp
add
cmpb
adc
sbb
xor
add
push
fdivr
int3
faddp
add
clc
sahf
mov
call
insl
repnz
xchg
xchg
aas
add
add
stc
add
sbb
jmp
fistpll
inc
jp
test
imul
add
hlt
jo
sahf
push
jnp
je
push
fldl
stos
loop
dec
pusha
insl
bound
mov
pop
jg
es
lods
add
or
lret
mov
imul
add
push
mov
fwait
nop
arpl
add
orb
stc
push
or
mov
jmp
aaa
addr16
push
mov
idivl
pop
push
decl
cmpsb
or
mov
or
add
adc
insl
test
dec
addb
sub
dec
fstps
and
xchg
jns
add
int3
fnsave
subl
jo
test
inc
loope
sub
add
mov
push
pop
or
or
inc
push
enter
fwait
and
roll
leave
adc
add
add
jmp
pop
push
test
add
test
das
lock
adc
mov
lock
or
test
stc
lock
add
xor
add
or
add
cld
and
inc
pop
jmp
jno
lods
xlat
jbe
add
pop
fs
cmpb
pop
mov
sub
scas
sti
mov
or
inc
cmp
inc
add
adc
sbb
test
std
cmp
or
lock
sbb
jno
add
mov
pop
gs
sbbb
push
jmp
daa
repnz
sahf
mov
sar
adc
jns
add
mov
inc
das
or
fbld
mov
and
and
stos
mov
add
sti
add
int
fsubrs
mov
inc
test
inc
jle
cltd
jb
clc
roll
je
and
loopne
mov
nop
add
les
mov
mov
push
sub
cmpsl
mov
arpl
les
pop
inc
loopne
out
and
add
xor
outsl
push
cwtl
mov
bound
xchg
and
and
mov
cmp
mov
add
sar
hlt
fisubrl
add
sub
mov
bound
popl
jmp
push
push
xor
mov
sbb
adc
add
inc
daa
jne
test
incb
inc
dec
xchg
scas
mov
test
add
and
jmp
dec
jmp
sub
mov
cmp
add
cmp
bswap
lock
add
push
ds
icebp
jecxz
push
jle
gs
dec
add
das
cmp
movsl
add
inc
pop
pusha
and
bound
mov
add
add
ljmp
lcall
and
shlb
cmpsb
push
add
cmp
lock
aam
sti
gs
shrb
pop
jge
or
ja
xchg
xor
roll
cmp
add
jnp
inc
add
xlat
xchg
cmpsl
sbb
test
push
mov
loop
sbb
xchg
add
adc
push
adc
out
leave
jo
add
call
dec
loopne
add
testb
adc
sub
lcall
xchg
dec
rcrb
rclb
lret
lret
cmpsl
push
adc
and
out
xchg
add
xlat
add
and
xor
or
jbe
push
jmp
jge
fadds
insl
lea
and
les
xchg
pusha
cmp
popl
je
dec
icebp
sub
jp
jmp
inc
push
mov
in
add
and
mov
ja
mov
std
mov
cmp
mull
fistpl
jo
add
in
sbb
inc
add
push
push
jnp
jp
shrb
inc
fistl
or
mov
dec
cld
sbb
dec
push
inc
mov
sbb
out
add
into
nopl
or
sbb
in
xor
xor
sub
int
cltd
inc
add
shll
fildl
add
lretw
cmp
fdivrl
sti
add
hlt
les
sub
out
dec
int3
pushf
mov
cltd
dec
add
mov
shlb
leave
xchg
out
daa
mov
sbb
sub
lds
shrb
clc
mov
mov
and
or
ret
mov
and
xor
xchg
or
add
rorb
mov
ljmp
hlt
add
mov
stos
jns
push
jne
mov
mov
inc
add
mov
or
js
pop
or
aam
mov
push
cwtl
dec
cwtl
outsb
add
or
cltd
pop
push
sti
add
test
push
mov
mov
mov
aaa
xor
and
bound
pusha
pusha
dec
xchg
shrb
mov
or
dec
leave
in
pop
push
dec
mov
mov
add
imul
cmp
push
cmpsb
decl
add
push
jae
out
add
fsts
sub
inc
cwtl
or
or
cld
xorb
jne
clc
add
or
js
mov
adc
cmpsb
es
pop
pop
leave
add
sbb
and
cs
pop
cmpsl
iret
or
mov
xlat
add
mov
test
mov
sub
add
or
jle
cs
add
fists
inc
adcb
xchg
add
xor
jnp
adc
hlt
mov
jo
add
dec
cmp
mov
dec
ja
sbb
cmp
add
cmp
xchg
add
out
xchg
fldt
add
jnp
test
sbb
sbb
adcb
inc
mov
push
cmpsl
icebp
or
mov
push
sti
sbb
inc
fmuls
sbb
lods
and
adc
add
xchg
or
sbb
sub
arpl
adc
mov
inc
add
daa
adc
cmp
push
pop
jo
add
hlt
fcmovnbe
adc
add
lret
add
and
je
fistl
rorb
andl
and
dec
in
mov
adc
push
call
in
add
ss
push
sub
lods
push
dec
mov
lcall
loope
sbb
addb
mov
cld
add
call
hlt
inc
add
inc
push
pop
jne
test
call
pop
push
pushf
and
xlat
rcll
inc
cmp
movsl
add
mov
push
sbb
jle
loopne
sub
fwait
mov
sbb
aaa
lock
push
xchg
call
loop
outsl
das
push
loope
test
flds
jne
xchg
fs
stos
cld
cmp
mov
shlb
cltd
mov
and
push
sbb
push
add
add
mov
jle
jp
add
jmp
jb
enter
aas
inc
lods
adc
pop
sub
lea
adc
sub
push
mov
add
js
and
lret
into
pop
xor
adc
aad
nop
and
pop
sahf
cld
enter
sbb
sub
adcb
mov
xchg
inc
mov
in
sub
add
sub
jnp
pop
rorl
adcb
loopne
dec
push
add
xor
sub
lea
adc
or
cltd
lahf
mov
rcrb
pop
mov
add
roll
push
pop
jge
scas
bnd
lods
pop
pop
cmp
adc
sub
xchg
scas
adc
inc
mov
test
jae
fcoms
sbb
nop
adc
cwtl
xchg
add
dec
mov
inc
add
aam
xor
fimull
jl
adc
and
rep
daa
insl
aas
rolb
jae
data16
loopne
sbb
mov
fadds
pop
fisttpl
sub
add
testb
mov
out
sbb
or
subb
and
inc
insb
add
jno
movsl
jne
sti
popa
xchg
push
sub
mov
adcb
nop
stc
cmp
ds
stos
xor
adc
pop
xchg
push
mov
pop
add
inc
stc
and
fldl
mov
cmp
mov
lea
sub
mov
add
pusha
mov
and
mov
lock
add
adc
xor
add
add
push
scas
lods
inc
ss
add
add
int3
adc
clc
cli
add
cmpsl
repnz
sbbl
pop
loopne
jne
movsb
add
mov
dec
sti
jnp
pop
inc
das
mov
loopne
cmpsl
mov
and
gs
repz
and
shl
push
inc
xchg
clc
xchg
add
outsl
xor
sbb
sbb
dec
xor
push
sahf
pop
sub
xchg
add
xchg
es
push
push
les
cld
sbb
pop
sete
ret
dec
das
xor
hlt
and
notrack
add
adc
pop
or
sysret
dec
xor
sub
add
fldl
repnz
push
xlat
and
nop
fmuls
mov
add
repz
mov
xchg
add
or
call
and
pop
out
ret
mov
clc
ret
mov
incb
cmpsb
mov
popf
adc
sub
sbb
or
xchg
in
repz
dec
add
std
xlat
and
outsl
jns
add
lea
ja
pop
mov
mov
pandn
xor
adc
rol
mov
sti
jp
icebp
push
cmp
add
adc
and
repz
mov
push
jg
and
push
jbe
pop
out
popl
lcall
fidivs
push
rorl
xchg
mov
xchg
add
leave
mov
pop
ret
fisttps
xor
adc
xchg
xor
cmc
push
mov
pop
lret
jle
js
jo
adc
pop
add
ljmp
jne
popa
arpl
insl
cmpb
pop
ret
test
ss
push
cmp
fldl
add
sarl
push
add
les
repnz
aad
aam
add
hlt
je
add
call
imul
orb
push
cmpxchg
lods
std
sbb
in
shlb
call
lock
cmp
notl
fcmove
jecxz
ljmp
sbb
xor
pop
out
loop
loopne
xor
mov
ljmp
fisubl
cmp
add
cmp
jne
pop
jl
je
mov
fstpt
sbb
movb
pop
pop
xchg
sbb
cmc
push
jmp
das
negl
pop
rolb
push
mov
pushf
xor
cmp
les
pop
mov
int3
mov
push
cld
xor
xor
in
jnp
or
add
push
push
dec
stos
insb
movsl
add
mov
sbb
inc
es
dec
sbb
or
mov
aam
mov
fnop
pop
sbb
cmpsb
cs
pusha
int3
test
stos
addb
inc
ljmp
pop
out
nop
add
negl
xchg
scas
and
or
pop
xor
xor
dec
gs
jae
loope
add
out
adc
add
fs
cmp
insb
jne
enter
popf
add
cwtl
xlat
sub
push
xchg
scas
frstor
xchg
or
idivb
mov
xchg
ljmp
lds
in
and
jecxz
adc
inc
mov
push
out
loopne
cwtl
add
dec
dec
push
add
jae
or
or
imul
push
jp
add
dec
xchg
pushf
add
mov
add
xor
or
mov
cwtl
jl
or
cli
popl
xor
jae
add
dec
lret
jb
or
adc
sub
pop
xchg
cld
push
outsl
xor
push
mov
add
test
push
je
or
push
mov
nop
add
or
push
add
mov
sub
insb
hlt
mov
jo
loopne
aas
adc
fldt
or
js
fadd
cltd
inc
push
push
je
leave
pop
dec
or
xchg
xchg
push
jmp
outsl
in
shlb
and
fcoml
jae
push
pop
shr
mov
lret
inc
test
out
sub
cld
pop
lods
inc
clc
in
pop
stos
lret
outsb
fdivrs
mov
or
push
aam
repnz
jmp
pop
push
pop
inc
mov
fs
jno
push
add
inc
aam
add
sub
jmp
movsl
ret
movsb
cmp
bound
pop
cwtl
aam
mov
mov
les
inc
lock
mov
sti
mov
and
jge
push
stc
push
sbb
out
add
mov
jbe
pop
add
cmp
clc
lcall
jmp
add
adc
add
add
mov
leave
cmpsl
xor
and
in
cmp
push
mov
clc
jno
jns
ficomps
adc
pop
jb
movb
repz
add
aas
fmuls
add
std
inc
hlt
lock
pop
popa
cltd
add
or
mov
jo
pop
mov
jp
pop
sub
lcall
dec
jmp
add
dec
js
dec
repnz
add
mov
call
pop
scas
push
add
add
fldenv
pusha
addb
lret
nop
out
ds
dec
clc
xchg
add
add
cvttps2pi
jb
mov
and
jge
cmpb
movsb
loopne
cmp
inc
out
mov
sub
lea
mov
mov
push
filds
mov
and
sub
xor
and
or
mov
sub
nop
repz
mov
adc
add
xor
fs
jmp
add
sub
push
and
inc
call
cmp
pushl
loopne
shll
hlt
mov
jmp
mov
andl
scas
dec
push
les
out
add
or
fmuls
sub
add
int
adc
fldenv
add
cld
test
mov
mov
pop
jmp
dec
inc
inc
add
ljmp
imul
push
push
add
adcl
or
adc
mov
popf
test
dec
mov
hlt
loope
roll
jp
sbb
std
xlat
and
jl
test
mov
roll
das
ficoml
sub
jp
push
fwait
add
stos
xor
add
test
and
aaa
push
mov
and
jle
jne
or
lods
mov
jge
dec
add
push
in
andb
aas
add
cs
pop
in
or
xor
adc
in
pop
add
pop
inc
add
icebp
idivb
mov
cmp
push
adc
pop
add
push
or
stos
test
je
jns
mov
xchg
mov
adc
xchg
les
xchg
pop
sbb
push
in
pop
mov
fbstp
pop
push
lea
cld
xorb
or
adc
xor
inc
jp
pop
add
orb
push
add
cmp
add
or
pop
das
push
sbb
add
xchg
and
cmp
add
ljmp
push
nop
jg
xchg
dec
fisttpl
lods
incl
xchg
push
in
cmpb
sub
xor
sbb
push
push
add
push
test
add
repnz
stos
sub
bound
fsubl
push
add
or
dec
xor
and
dec
push
jg
push
pop
inc
in
cmp
arpl
add
add
adc
pop
pop
mov
push
hlt
pop
push
add
mov
inc
dec
push
push
andb
mov
add
mov
ret
stos
push
xchg
pmullw
mul
add
or
add
dec
imul
in
add
xor
mov
and
xchg
fwait
clc
mov
movsb
iret
jecxz
mov
xchg
add
mov
in
movswl
add
add
imul
andb
pop
add
insl
mov
movsl
dec
mov
add
fisubrl
js
lea
pop
cmp
clc
in
test
mov
fwait
pop
jl
loopne
push
xor
jle
mov
sub
add
pop
cli
insl
int3
je
add
jge
xor
movsl
or
xor
mov
repz
lcall
xchg
iret
dec
add
es
push
orb
xor
cmp
or
out
push
rcrb
cmp
adc
mov
add
mov
scas
add
aas
dec
jmp
movb
add
int3
fidivs
pop
shlb
add
mov
pop
fldt
mov
sub
or
in
xchg
push
sbb
stc
add
hlt
inc
pop
add
mov
aad
add
xor
ret
pop
push
out
jle
add
sbbl
sbb
inc
fldcw
inc
mov
push
sub
push
mov
loope
add
and
sbb
add
in
lret
add
or
cmp
add
fdivs
jp
mov
add
in
inc
rol
jge
push
es
sbb
cmpl
sub
loopne
add
sbb
sbb
jo
cmp
mov
repz
adc
sbb
dec
hlt
or
cmp
xor
aas
mov
mov
add
jmp
sahf
add
cmp
sbb
sub
mov
mov
fs
sbb
cltd
daa
add
fimuls
mov
add
inc
aam
dec
add
mov
data16
inc
sbb
outsl
add
arpl
add
cmpsb
leave
add
sarl
in
inc
test
cmp
adc
shlb
add
push
pop
sbb
in
jbe
pop
mov
inc
pusha
adc
pop
nop
add
dec
mov
shll
pop
adcb
push
arpl
and
cmpsb
movsl
add
fistpll
or
sarb
add
mov
xor
dec
add
cs
out
pop
dec
jo
add
add
sar
and
adc
enter
jmp
cmp
repnz
push
test
loopne
pop
add
pop
sahf
fcompl
loope
ds
sbb
ja
jp
add
mov
xorl
mov
sbb
sbb
add
cmp
xor
add
add
adc
arpl
xor
call
addr16
je
loopne
push
jo
loope
and
scas
sub
add
xor
mov
xchg
push
inc
icebp
inc
fildll
add
into
sbb
nop
or
iret
mov
jno
add
or
mov
incl
add
popa
jnp
sti
sbb
jns
jmp
leave
movsl
jns
sbbb
inc
add
das
lds
inc
cmp
add
pop
lret
lock
and
add
gs
add
mov
sbbb
movb
sbbl
call
adc
mov
push
jo
add
out
adc
loopne
add
int3
iret
sbb
and
out
shl
adc
sbbb
mov
add
jno
nop
lods
addb
jb
sub
adc
add
ja
mov
push
mov
addl
jbe
aad
pop
xor
add
sbb
or
push
shl
cmpsl
xor
mov
dec
stos
or
xor
flds
xchg
movsl
sub
add
add
mov
enter
lods
popf
add
jp
scas
add
and
ljmp
in
clc
repnz
enter
cs
adc
xchg
arpl
cmp
push
add
shlb
add
ret
and
mov
push
add
je
inc
sbb
std
mov
pop
add
mov
sbbb
sub
test
xchg
add
xchg
sub
and
mov
cmpsb
shlb
dec
ltr
cmp
inc
stc
push
cmp
add
pop
push
cmc
psrlq
mov
cmp
jl
std
dec
xchg
lea
pop
cltd
pop
and
test
xchg
jl
inc
addl
call
fildll
mov
clc
add
cvtdq2ps
jb
je
add
sbb
in
add
in
add
xchg
fistps
xchg
pop
sti
inc
fldcw
leave
cli
add
inc
sbb
xor
xchg
dec
pusha
dec
rorl
adc
sbb
push
add
ljmp
dec
pop
loopne
aad
add
sub
mov
or
sub
stos
es
clc
rolb
dec
adc
jne
rcrb
test
das
jns
or
scas
or
cmp
mov
ds
push
jo
xlat
pop
and
add
jne
mov
outsb
or
and
push
add
or
xchg
lods
jge
lret
fsubrs
sbb
or
idivb
mov
add
add
outsb
hlt
inc
ja
add
fwait
rorl
inc
add
into
pop
sarl
cmp
nop
push
insb
dec
bnd
push
cwtl
inc
cwtl
int
hlt
inc
or
loope
or
xor
hlt
dec
pop
add
neg
test
hlt
outsb
xor
fstps
pop
fimull
aaa
rolb
add
mov
sbb
push
xor
pusha
je
adc
add
in
jo
cld
pop
xchg
fimuls
jb
sbb
pop
add
shlb
inc
add
jmp
test
inc
mov
adc
add
dec
popa
xchg
jp
and
add
adc
mov
adc
fchs
js
rolb
cwtl
xor
cmp
xor
push
sbb
jge
add
ret
lea
aad
jmp
push
ljmp
das
inc
adc
mov
jbe
add
cmp
lods
pop
push
pop
test
push
daa
mov
add
inc
adc
je
gs
cmp
setne
nop
daa
loopne
ljmp
stc
and
xchg
ss
adc
cmp
push
shll
mov
ret
pusha
loop
adc
mov
jo
es
xor
inc
enter
mov
out
add
xor
mov
out
dec
fisubs
xchg
fnstcw
xchg
sub
adc
pop
mov
insl
dec
sbb
call
add
lods
stos
loopne
push
or
cmp
out
insb
dec
xor
sub
das
fldenv
adc
inc
add
fsubrs
inc
xlat
add
sub
sbb
pop
push
pop
cmpsl
or
add
arpl
scas
cwtl
mov
add
clc
int3
cmp
cmp
out
fldl
dec
and
mov
por
aam
aaa
sbb
shll
loop
sbb
das
adc
shlb
add
add
cld
stc
sub
cmp
lcall
out
xbegin
test
in
test
dec
pop
adc
jb
add
cltd
adc
aas
scas
mov
adc
jmp
push
stc
out
hlt
xor
xchg
inc
xor
insb
add
fs
or
or
add
and
sbb
sbb
cli
xchg
imul
pop
jnp
jnp
push
jbe
stos
inc
hlt
or
call
mov
fstps
mov
inc
cmp
inc
mov
dec
add
fsubs
push
add
daa
les
inc
cmp
pop
mov
inc
sbb
lea
testb
add
cs
enter
jle
adc
cwtl
push
jbe
movsb
enter
scas
sub
adc
add
sub
les
push
and
adc
add
jp
loopne
cs
and
mov
jne
mov
js
loop
sub
subb
icebp
clc
add
dec
sti
mov
inc
inc
test
xchg
sub
jo
dec
cld
mov
inc
sbb
add
sar
adc
add
mov
xor
xchg
repz
movsb
incb
lods
dec
adc
push
jbe
cmpsl
push
pusha
push
or
mov
add
sub
add
shlb
mov
mov
xor
lret
sub
dec
add
mov
stos
add
push
push
or
addr16
mov
add
xchg
add
push
mov
add
adc
add
or
jbe
fcompl
or
adcb
insb
add
pop
out
jl
mov
addr16
sbb
adc
insb
jle
add
in
add
imul
add
or
test
xlat
inc
rolb
adc
dec
sbb
adc
inc
add
insl
sub
test
push
mov
xchg
fwait
xor
iret
ss
sbb
sbb
sub
add
daa
imul
mov
inc
cmpb
in
or
pusha
pop
cwtl
test
push
cli
int
movb
dec
out
stc
push
cmp
mov
mov
add
ss
add
add
dec
jne
ret
pop
fsubrl
push
push
mov
addb
mov
or
scas
jne
push
add
push
cld
cmpsb
lcall
sub
inc
sbb
sbb
add
cmpb
or
sbbb
jne
push
je
ficoml
ja
add
pop
outsb
dec
sub
jle
ja
push
xchg
loop
sub
add
stc
dec
add
lea
and
movsb
push
mov
nop
mov
cmp
sub
lods
out
add
mov
sub
xchg
test
and
add
sub
jno
mov
xchg
pushf
imul
sbb
arpl
lret
add
lcall
inc
xchg
cli
add
push
mov
push
addb
ret
or
lock
in
and
mov
add
stc
inc
insb
adc
add
push
popf
add
lock
das
sbb
outsl
add
jo
clc
mov
add
dec
clc
jb
add
sti
popf
in
inc
and
dec
sub
mov
cmp
push
inc
addb
sub
in
push
cmp
rolb
popa
out
nop
add
jmp
movsb
sub
sub
jne
movsl
mov
ja
cld
loop
jl
clc
pop
mov
add
outsb
mov
ds
pop
test
jmp
mov
or
rorl
jecxz
jnp
andl
shlb
push
or
add
sldt
shlb
add
into
xchg
aam
mov
fadds
out
scas
push
fsub
add
inc
fwait
xor
or
inc
out
sbb
sbb
add
jmp
fdivr
jl
lea
adc
ret
fistpl
add
jecxz
sbb
mov
pop
stos
adcb
js
test
fwait
pop
cld
loope
sbb
test
sbb
lcall
loop
mov
daa
inc
mov
xchg
or
inc
adc
shlb
jo
jle
pusha
inc
pop
cmc
fnstsw
xchg
cltd
push
shr
inc
or
aaa
cwtl
mov
aas
in
stos
push
sbb
xor
rcrb
push
cmc
loop
shrb
and
negl
mov
test
add
inc
add
outsl
loope
adc
sbb
lods
push
dec
stos
mov
movsb
inc
cmp
xchg
pusha
enter
out
daa
enter
call
je
outsb
and
scas
stos
xchg
loopne
aam
pop
nop
mov
js
adc
lods
or
jo
test
enter
sti
and
add
pop
xchg
cld
push
mov
ljmp
ja
lds
dec
in
push
add
or
js
rorb
xlat
lahf
push
aad
repnz
jle
add
jb
inc
add
lcall
pop
lods
popa
jge
inc
jo
xor
test
push
pop
and
push
mov
add
add
xor
sbb
daa
xor
test
inc
add
xor
add
dec
or
lea
fimull
sub
push
jg
add
stc
pop
das
out
rolb
mov
es
sbb
cmpl
pop
add
das
loopne
inc
xor
sbb
jmp
cmp
cmp
ja
lea
cmp
lret
add
mov
cmpb
adc
jmp
add
vprotd
jnp
add
push
test
fsts
nop
stos
add
hlt
mov
xchg
add
mov
outsl
negb
mov
icebp
add
jle
or
ds
cmpb
or
test
add
dec
call
xorb
sbb
or
lock
add
pop
push
inc
cmp
and
add
add
das
loop
push
adc
jo
or
add
push
cmc
mov
in
mov
adc
adc
in
xorl
dec
push
mov
pop
add
cmp
fldl
scas
dec
xor
sbb
popf
jmp
ds
add
mov
ror
mov
mov
cmp
dec
mov
pop
add
add
jbe
icebp
or
dec
add
and
push
pushf
mov
out
push
add
aas
mov
mov
add
add
nop
or
out
adc
inc
jmp
inc
jne
lods
mov
push
sbb
arpl
pop
test
jg
xor
or
rclb
cmp
xor
sbb
inc
enter
sub
cmp
add
imul
push
add
in
loopne
pop
jnp
adc
mov
jmp
outsl
push
add
pop
mov
xor
fwait
push
push
or
test
mov
cltd
ss
movsl
in
clc
jae
add
mov
adc
and
jg
cmp
xchg
cmp
mov
mulb
add
ficompl
or
inc
ds
add
movsl
push
aam
xchg
clc
insl
in
std
test
leave
aas
xchg
add
mov
push
test
add
subl
add
mov
movntq
out
sbb
loopne
and
stos
int
pop
filds
sahf
add
push
sub
sub
sbbb
fiaddl
fs
cmp
shl
add
ja
sbb
jmp
imul
lahf
in
adc
fidivs
push
loopne
call
mov
dec
repnz
lret
movsb
cmc
nop
out
int3
test
in
jno
cmp
mov
xchg
nop
call
jle
pop
fs
insl
add
imul
jp
jl
fstl
cld
add
push
insb
imul
jg
mov
out
ret
in
push
sbb
jno
and
dec
loop
add
mov
shlb
addb
sub
loop
fstps
insl
jo
cmpsb
test
shrl
push
push
push
or
pop
or
push
mov
pop
push
pop
fwait
cmp
or
fcoml
psubw
push
and
daa
add
addb
inc
into
popf
jb
in
out
jge
jne
adc
test
mov
imul
cld
pushf
jno
cmp
mov
dec
push
push
add
push
pop
pop
xchg
lcall
out
ljmp
sbbl
fistpl
push
push
clc
cmc
add
fwait
outsb
fdiv
test
sbb
dec
data16
sub
test
bnd
fimull
add
cmpsl
jp
push
xchg
in
add
add
std
push
mov
push
imul
xchg
pushf
pop
dec
inc
pop
out
loopne
jmp
call
cmp
cmp
sahf
nop
ss
fidivl
xchg
sub
les
add
pop
mov
pop
xor
cwtl
mov
jmp
add
test
add
cmp
ja
jbe
jb
mov
pop
pop
mov
mov
add
sbb
jne
add
loope
pop
dec
push
pop
mov
mov
in
add
fnstsw
mov
jo
int
pop
lea
xor
lahf
mov
andl
xchg
mov
ljmp
sarb
cmp
ss
inc
inc
arpl
add
js
xor
fcompl
es
jbe
pop
pop
ds
mov
stos
push
incb
fidivs
cli
pop
pop
in
jmp
rorl
mov
call
dec
add
movsl
push
test
addb
jge
flds
jecxz
adc
add
add
jle
rclb
xchg
push
dec
jp
add
push
pop
in
test
out
pop
sub
pop
es
rcrb
jmp
cmp
add
push
mov
xchg
jno
push
out
test
call
and
dec
xlat
outsb
push
dec
pop
lock
in
pop
lret
xorl
push
and
mov
mov
jmp
lock
mov
add
inc
jle
mov
int3
add
pop
fcoml
add
out
arpl
cmp
stc
add
jmp
ror
push
pop
mov
in
and
xchg
mov
dec
decb
fldl
jmp
lods
stos
xor
test
movsb
sar
cmp
cmp
ror
ja
add
jp
bound
loope
into
arpl
fsubrl
xor
dec
loope
add
je
ror
pop
pop
add
or
add
in
iret
scas
mov
in
lods
hlt
aad
push
insl
cmp
call
pop
shlb
mov
and
pop
push
movsl
sbb
enter
daa
add
cmp
mov
loop
add
loopne
pop
push
dec
lock
mov
inc
jnp
add
addr16
rcl
add
xchg
xchg
add
add
cld
call
loope
fnclex
testl
mov
xchg
rcl
adc
rcl
add
add
push
outsl
jae
add
test
add
jmp
pushf
ljmp
lds
jne
cli
jg,pt
mov
int3
mov
and
ss
fwait
or
sbb
filds
jecxz
xchg
data16
movsb
mov
add
xor
mov
add
add
push
add
aam
aad
fmuls
jecxz
mov
add
dec
or
xchg
xchg
add
cli
pusha
stc
clc
fs
cld
lahf
aas
adc
cmp
mov
fsubs
mov
sub
or
out
sbbb
and
add
adc
sub
ror
daa
push
add
std
stos
scas
repnz
psubsb
dec
mov
jo
bound
push
int3
leave
dec
lret
movb
pop
and
add
mov
pop
bnd
ds
lret
mov
popa
cltd
lcall
test
xchg
add
adc
or
hlt
ss
xchg
cmc
popf
add
test
add
lret
add
pop
cmpl
mov
pop
xchg
add
lods
test
in
cmp
and
adc
inc
andb
jo
insl
inc
ja
je
jne
rcrb
sbb
inc
dec
or
mov
add
cmp
movsb
movsl
mov
dec
add
add
inc
lods
mov
add
cmp
add
rorb
lods
stos
push
sub
mov
xor
mov
push
adc
andb
sbb
xor
mov
sub
or
add
add
sbb
orb
popf
mov
fsubp
lds
in
inc
xchg
lods
pop
daa
sub
push
cmpsl
movsl
add
dec
dec
ret
add
push
loop
xor
and
push
push
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
sbb
push
andb
jbe
pop
mov
in
out
xchg
dec
test
sbb
ffreep
test
add
orl
add
test
mov
adc
call
arpl
add
inc
pop
xchg
outsl
insb
sub
add
and
cmc
pusha
fsubr
js
repz
add
out
addr16
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
mov
lcall
push
add
push
mov
xchg
push
add
cmp
insl
add
and
cwtl
xchg
push
push
aaa
xchg
in
sub
icebp
rol
lcall
nop
ret
add
stos
lods
or
xor
ljmp
in
add
insb
and
mov
pushf
xchg
push
add
cmp
xlat
mov
lret
add
jp
jbe
xchg
aaa
mov
cmp
addb
adc
aas
push
add
icebp
cwtl
insb
out
jmp
push
add
test
xor
sbb
xchg
mov
push
jle
fs
adc
clc
add
jge
push
cmp
rcll
roll
fldt
dec
dec
std
fmuls
mov
or
add
or
sarb
sbb
jge
inc
test
mov
add
sub
pushf
add
out
jmp
mov
add
xlat
int
loopne
lret
aam
xchg
xchg
or
pop
cmp
in
clc
add
inc
add
dec
or
inc
mov
in
cmp
jmp
add
push
mov
pop
add
es
xorl
dec
cmp
add
inc
inc
jne
popa
mov
add
push
cmp
xchg
cmp
sbb
add
cs
pop
cmpsb
pop
leave
inc
sbb
sti
push
repz
add
in
push
pop
or
ret
outsb
mov
mov
mov
fdivrs
insb
ret
add
aaa
jno
xchg
imul
insl
inc
or
mov
jg
add
lret
int3
test
jmp
lea
mov
pop
sti
cwtl
scas
rolb
das
cmp
mov
js
add
nop
stos
jge
outsb
sbb
mov
mov
sub
cld
or
rcr
lods
dec
xor
jmp
enter
and
fwait
out
xchg
mov
add
call
add
pop
cmpl
out
les
and
cmpsb
aad
cmpsl
aam
add
and
and
add
adc
imul
add
jmp
sbb
pusha
pop
sarb
loope
bound
int
dec
add
xchg
add
cmc
aaa
aad
cwtl
sub
lahf
stc
scas
dec
xchg
sbb
aas
dec
imul
xchg
mov
or
and
into
pop
push
shr
repz
clc
jmp
mov
xchg
adc
cli
bound
lock
mov
adc
push
and
fucomi
in
and
push
imul
sbb
dec
insb
clc
add
lret
xchg
xchg
jg
dec
add
repz
stc
scas
aam
xor
std
xor
out
nop
fidivl
xchg
adc
insb
bound
fcom
push
rolb
mov
dec
adcl
pop
pop
and
dec
mov
lahf
and
xchg
aam
mov
sbb
in
add
cmpsb
hlt
dec
and
iret
dec
push
aad
push
cli
push
inc
cmc
fldcw
scas
sbbb
ss
lcall
cltd
lods
xchg
mov
or
addr16
sub
movsl
ficoml
and
mul
add
pop
add
sbb
test
jmp
push
dec
or
add
mov
add
lock
add
pop
adc
loopne
adc
cmp
cmp
sbbl
mov
daa
pushf
pop
dec
sbb
cmp
jae
add
cwtl
jb
imul
ret
pop
addb
psubusb
and
popa
ljmp
loopne
fstps
sbb
push
xchg
inc
jae
ja
jb
loop
add
add
and
xorb
push
add
dec
sbbb
add
mov
insb
adc
xchg
aam
adc
xchg
aas
and
pop
insl
jmp
aam
jb
cmc
mov
lret
arpl
mov
fs
daa
push
sar
imul
mov
sub
dec
faddl
jo
mov
mov
or
cmpsl
xor
add
in
or
push
push
addb
adcl
mov
dec
pop
jno
pop
inc
or
jne
mov
mov
add
mov
jge
rolb
xlat
sbb
dec
add
arpl
mov
dec
in
add
xchg
shll
sub
mov
cmpsb
push
je
add
cs
add
imul
push
mov
cmp
and
and
mov
add
or
add
add
in
sbb
cmp
stc
pop
cmpsb
mov
pop
xchg
lods
sarb
mov
push
push
jns
pop
sub
add
push
xor
and
lock
add
dec
add
fwait
incl
add
mov
fcomp
in
cmp
add
mov
enter
inc
leave
dec
call
add
xchg
pop
mov
pusha
out
hlt
add
sbb
ror
push
pop
testl
lret
rclb
mov
daa
incl
sub
aaa
xchg
lea
shrl
aad
les
inc
fstp
or
jge
add
clc
sub
cld
add
out
add
cs
lock
add
das
aam
adc
push
add
jno
add
jmp
pop
push
inc
arpl
pop
jbe
pop
lret
add
xchg
cmpsb
call
xlat
push
or
loopne
test
jge
std
ljmp
push
dec
pcmpeqw
adc
movsl
cmp
xchg
arpl
and
mov
push
test
call
pop
dec
sub
in
push
push
pop
loop
push
xor
dec
jne
iret
push
movsb
inc
adc
or
push
adc
faddl
outsl
jb
enter
add
sbb
out
les
aaa
xor
in
dec
popl
jbe
push
xchg
cld
dec
loopne
jp
add
leave
jns
xor
add
push
lret
pop
add
sbb
cld
xlat
imul
or
push
mov
push
lock
jno
add
xchg
adc
add
cmpsl
adc
orb
add
cmp
pop
cltd
jecxz
fdivrs
out
add
and
sbb
enter
add
mov
adc
dec
jle
clc
add
jl
stos
and
inc
add
mov
add
jb
jns
repnz
cmp
or
popa
jecxz
mov
icebp
fs
nop
jae
inc
popa
adc
xor
add
sub
jno
and
push
sub
jae
adc
sbb
mov
push
pop
jo
cmp
xchg
insb
outsl
jns
xchg
sub
pop
cwtl
cs
lret
push
rcl
bound
stos
add
pop
jp
add
cmpb
repnz
add
xor
shrd
lds
push
add
leave
or
stc
and
cmp
add
aaa
inc
stos
lock
jne
cwtl
pop
cld
xchg
cli
out
add
sbb
lea
test
les
dec
and
pop
test
jg
add
clc
sbb
sbb
pop
daa
add
inc
out
cwtl
test
cmpsb
adc
loopne
cmp
aas
sub
imul
jnp
aas
mov
add
call
cmp
sti
cmp
movsb
add
scas
ja
push
mov
fstpl
mov
cmc
sub
sbb
add
movsb
mov
add
mov
clc
les
hlt
in
test
lds
add
daa
adc
imul
and
icebp
enter
add
jnp
cmp
test
jp
jbe
pop
lds
shll
jmp
mov
and
add
lea
xchg
adc
inc
cmp
gs
adc
movsl
jl
mov
cmpl
jne
aaa
std
and
dec
lahf
add
lods
sbb
add
mov
int3
add
mov
add
push
sub
lds
dec
incl
adcb
pop
int
xchg
xor
mov
push
push
aam
and
icebp
cmp
push
add
out
and
lock
daa
or
add
pop
sub
adc
pusha
out
test
add
fstpl
push
and
roll
or
out
shl
stos
add
mov
scas
add
in
ret
inc
push
cwtl
push
mov
in
jecxz
mov
clc
stos
jge
add
push
imul
ja
enter
add
cmp
sbb
icebp
dec
push
push
jp
and
and
or
xlat
jnp
and
incb
xchg
sbb
dec
movsl
cmp
dec
add
cs
adc
xor
add
add
pusha
ret
mov
mov
dec
add
ja
aas
repz
add
hlt
jg
jno
rorl
push
and
jbe
add
inc
enter
adc
add
in
or
xor
push
mov
add
inc
sbb
add
mov
xchg
loop
mov
or
add
xor
add
repnz
rcl
jns
movsl
add
cmpsl
clc
mov
add
rorl
hlt
push
addb
xchg
push
fcoms
mov
and
xlat
scas
mov
lcall
pop
add
jne
push
jp
push
add
hlt
sub
pop
sti
insl
mov
pop
inc
movsb
xor
or
in
jbe
push
in
lods
loopne
clc
imul
pop
and
inc
divb
push
popf
fdivl
jge
jae
adc
or
pop
push
leave
popa
and
ja
mov
sbb
jo
xchg
jne
add
into
jge
adc
cmp
mov
and
test
jmp
mov
mov
lods
mov
or
add
xor
cmc
dec
add
xor
test
ljmp
imul
psubusb
sbb
subb
pop
push
add
out
sbb
clc
push
jg
mov
clc
pop
cmp
add
push
rcll
pop
sub
mov
or
daa
push
sub
jmp
cmp
movsl
test
cmp
push
cmp
mov
mov
ret
push
push
or
sbb
loop
xchg
mov
push
je
shlb
orb
and
loopne
mov
out
inc
inc
add
inc
mov
mov
push
cmp
inc
xchg
adc
sbb
in
add
inc
sbb
stos
adc
add
xchg
add
hlt
add
sub
and
add
push
add
xchg
cmpsl
ja
loopne
dec
inc
inc
cmp
add
pop
mov
or
inc
pop
pop
xor
je
mov
incl
mov
rcr
add
or
and
dec
test
jnp
sbb
clc
roll
xchg
pop
inc
cmp
mov
pop
cltd
xor
xchg
sbb
adc
add
and
and
je
repnz
enter
push
add
inc
or
call
in
jl
push
xor
adc
inc
add
sub
mov
jne
out
mov
jne
add
fbstp
mov
push
lods
cmpsl
sub
jne
pop
xlat
clc
stos
xchg
pushf
and
ds
iret
add
inc
jne
add
je
push
pop
push
fbld
xor
and
sbb
dec
dec
push
push
adc
fstl
shlb
in
pop
dec
add
dec
cmp
dec
negb
jne
hlt
adc
inc
cs
rorb
or
adc
jbe
ja
cmp
sbb
inc
xor
sub
dec
pop
xchg
jae
and
lcall
and
mov
and
aad
jns
sbb
sbb
repnz
nop
xor
cld
xor
in
cli
inc
cwtl
add
jle
mov
push
xchg
adc
add
xchg
testl
and
push
lock
adc
xor
jmp
sbb
and
aam
testb
lds
into
fisttpll
testl
pop
mov
cmpsl
dec
sbb
push
andb
add
jg
lea
inc
mov
ja
mov
add
pop
cltd
sbb
or
mov
enter
fwait
inc
int3
lret
mov
push
outsl
add
les
sbb
add
test
neg
pop
add
lds
arpl
sub
or
outsl
insl
loopne
add
imul
add
cmp
inc
adc
faddl
into
mov
jmp
adc
add
xlat
movsl
sarl
mov
jb
mov
pop
int
xorl
movzwl
loop
loopne
mov
mov
and
add
lahf
ret
mov
adc
push
cmpl
mov
mov
popf
and
add
das
mov
jbe
fwait
dec
loop
in
out
xchg
add
or
inc
ja
rolb
mov
mov
add
or
mov
leave
loop
fprem1
stc
sbb
shlb
add
lahf
hlt
decb
call
sub
sub
arpl
add
clc
in
or
pop
dec
mov
flds
cld
mov
rorl
adc
ret
call
jnp
push
sti
mov
xor
push
add
imul
arpl
loopne
addl
dec
es
xor
push
add
shl
add
je
push
push
jge
lret
jp
mov
push
rcrb
dec
int3
cmpl
jge
cmp
ret
lret
out
push
or
cld
add
daa
sub
pop
adc
pop
lahf
or
cmp
jge
mov
xor
add
daa
pop
jb
inc
jbe
add
cmp
jne
mov
add
pop
outsb
adc
xor
add
cwtl
cmc
repnz
clc
jo
add
add
les
mov
dec
pop
into
inc
fsub
add
add
rcrb
mov
insb
daa
mov
inc
add
call
test
add
jl
mov
push
neg
add
shlb
add
push
jmp
cmp
add
fmul
pop
fimull
stos
dec
ss
lret
testb
mov
test
dec
push
sbb
sbb
cmpl
or
push
push
pop
ret
sub
in
enter
mov
jmp
mov
xor
nop
int3
rclb
mov
jge
adc
js
jb
push
pop
add
push
xor
add
loop
add
mov
inc
shll
add
xor
out
rclb
inc
in
dec
orl
mov
sub
cmp
inc
enter
fld1
cs
add
mov
mov
pop
movsb
fildll
push
add
lret
push
adc
xor
fdivrp
add
pop
mov
dec
mov
add
add
out
stc
mov
sub
faddl
xchg
pop
movsb
shlb
rorb
hlt
add
lea
add
sub
jo
ret
xchg
sbb
xor
add
sub
inc
xorl
or
add
mov
pop
add
fs
xor
cmp
rcrb
cmpsl
cmc
cli
rcr
fildl
and
fstl
mov
push
or
or
or
aas
add
push
sub
xor
sub
sub
push
inc
sbb
test
push
or
or
fldl
aas
and
pusha
push
jp
divb
rol
and
pandn
dec
popa
filds
or
sbb
inc
sub
adc
xor
adc
out
xchg
push
add
aad
add
outsb
push
mov
push
pusha
aad
mov
push
invd
add
inc
stc
add
ds
xor
daa
add
mov
dec
dec
mov
push
mov
movl
mov
adc
add
inc
add
dec
ds
pop
pop
or
dec
jne
mov
add
test
repnz
mov
enter
out
test
or
add
or
ret
aas
jmp
mov
push
inc
nop
jae
sbb
ss
arpl
or
in
stc
or
aaa
and
clc
lea
mov
mov
adc
adc
xchg
jns
ud2
enter
and
jno
sahf
adc
jge
in
in
and
fsubs
inc
leave
cmpl
andl
xchg
ficoms
jmp
loopne
sub
pop
ret
or
movsb
sbbl
cld
stos
add
pop
sub
xchg
daa
mov
sub
add
ds
sarb
push
or
into
xchg
fwait
rorb
pop
pop
jl
inc
sub
cmpsl
or
and
jp
adc
aam
orb
jl
je
push
enter
add
or
jmp
mov
push
in
add
pop
cmp
icebp
xor
mov
fldt
mov
mov
sbb
cmp
dec
in
add
rorl
pop
rcll
enter
and
push
xor
lds
sbb
cmp
movntps
and
les
mov
add
loop
add
push
or
sub
pop
dec
or
add
pop
or
and
ss
inc
pop
mov
shlb
jle
add
test
shrl
adc
pusha
mov
cmp
xor
bound
sub
and
inc
in
push
movsb
xchg
sbb
xor
pusha
pop
xchg
push
rolb
insl
loope
dec
add
xor
out
cmp
dec
lock
inc
inc
mov
lods
nop
pop
jae
jnp
pop
aam
xor
push
xor
jbe
ljmp
mov
adc
mov
cmp
xor
das
fcom
int
add
pop
pushf
lods
add
fisubrs
mov
je
mov
sbb
inc
add
leave
test
pop
pop
mov
lds
mov
pop
lods
add
cs
sub
jle
lock
cmp
add
popw
add
or
test
add
inc
ror
adc
lock
cmp
and
xchg
sub
pop
ret
in
xor
pop
inc
lock
add
jl
lods
cmp
jns
xor
dec
loopne
sub
add
cmp
popa
inc
pop
xchg
add
pushf
ss
int
cmp
das
add
mov
ds
sbbb
pop
inc
aam
add
gs
lods
mov
aas
and
movsb
loop
add
addb
adc
popf
js
inc
add
pop
aam
add
and
jmp
test
lods
aas
or
mov
add
add
pop
inc
jno
adc
add
out
or
add
push
pop
scas
sub
jge
cmp
insb
mov
adc
inc
test
lds
jne
insb
xchg
jns
or
nop
mov
in
cvttps2pi
add
adc
cmp
mov
xchg
dec
inc
jle
pop
icebp
insl
sub
cld
add
sbb
push
push
sub
xor
add
pslld
pop
in
das
sbb
jl
lcall
and
xor
add
xor
mov
add
ja
and
mov
xor
inc
push
aas
lods
pop
inc
hlt
inc
cmp
add
adc
cld
test
psllw
popa
outsb
add
gs
lahf
sbb
push
jne
outsl
in
ja
add
push
dec
and
pop
xchg
cltd
add
ds
xchg
add
jo
inc
outsl
and
jb
je
jne
in
js
add
adc
push
inc
dec
cmp
inc
test
mov
in
mov
push
out
fs
pcmpeqd
add
jnp
popa
je
push
jp
add
pop
add
xchg
mov
dec
pusha
cmpl
outsb
jne
sbb
std
imul
loopne
xchg
cmc
in
or
imul
je
cmpsl
adc
test
arpl
jmp
mov
xor
jne
dec
js
and
mov
mov
popa
subb
and
sub
adc
adcb
daa
cmp
add
add
xchg
adc
add
mov
add
adc
add
das
cmc
jg
stc
and
add
sbb
or
mov
lahf
fst
shlb
js
in
lret
add
xor
push
pop
mov
add
push
mov
addr16
adc
mov
pop
mov
jne
push
mov
inc
mov
mov
lea
add
add
pop
in
xor
or
loopne
pmulhuw
and
inc
xchg
and
add
jge
test
push
jo
push
out
shll
mov
js
js
add
pop
dec
push
mov
test
inc
test
add
and
add
mov
push
in
jb
mov
into
loopne
cmp
add
sbb
push
cwtl
dec
dec
add
sarl
adc
lods
into
add
inc
mov
adc
or
jne
cmovne
adc
loopne
pmaxub
shrb
pop
pop
sbb
pop
int
fcoms
add
sub
insb
inc
decb
adc
je
fwait
push
and
add
call
pop
dec
cmp
sub
subl
pop
pop
jae
mov
pop
inc
cs
add
push
sub
and
mov
xor
les
sbb
cwtl
adc
or
mov
push
add
mov
rclb
add
cmp
mov
ss
and
add
addb
ljmp
jle
sbb
dec
sbb
inc
xchg
mov
rcll
js
jae
outsb
add
dec
bound
dec
mov
xchg
cmp
test
sub
add
push
push
arpl
push
lea
mov
push
pop
test
mov
xlat
add
xchg
test
dec
or
in
add
xchg
add
push
lods
add
lods
mov
mov
mov
movsb
pop
mov
nop
xchg
mov
les
or
pop
cmp
xor
jo
xchg
add
fstl
fs
out
out
cmp
add
or
sub
mov
jmp
xor
lret
insl
sub
in
lds
xchg
jl
invd
pop
adc
adc
or
clc
call
adc
cmp
movsb
add
add
inc
sbb
loopne
adc
ja
jno
add
dec
xchg
sbb
jb
push
pusha
mov
xor
fs
imul
dec
ret
das
and
jo
inc
add
mov
cmp
fs
xor
push
sbb
enter
jns
or
dec
jo
cmpsb
sub
adc
cmp
push
or
add
xor
inc
pop
das
jecxz
pop
test
call
add
lret
orb
stos
arpl
push
mov
add
adc
cmp
jmp
pop
adc
stos
mov
rorb
push
or
arpl
test
ret
mov
add
pop
mov
dec
add
shrb
xchg
in
and
nop
adc
pop
or
sbbb
adc
cmp
dec
add
pusha
mov
add
inc
and
push
shlb
dec
add
mov
mov
and
push
jmp
xchg
push
add
jns
aad
jno
add
ljmp
xchg
hlt
mov
xchg
sbb
push
add
sbb
mov
adc
repz
ret
cli
mov
xchg
stos
orb
dec
add
push
popa
jb
clc
fisttps
lahf
sub
dec
sti
aam
pop
jg
add
push
outsb
in
cmp
test
add
add
iret
xchg
jle
data16
push
ret
icebp
and
pop
and
pop
cwtl
push
add
dec
inc
and
fadd
rorb
cmp
push
lcall
dec
add
enter
dec
or
add
pop
and
push
mov
add
out
repnz
jp
dec
sub
jnp
dec
gs
cmp
sub
jmp
ja
pop
mov
or
orb
add
clc
sub
hlt
cld
rclb
inc
pop
in
in
xchg
loopne
or
arpl
push
pop
push
subl
jne
sbb
fwait
mov
adc
jb
mov
xchg
mov
mov
pop
stos
test
xchg
or
pop
inc
outsl
insl
sbb
add
pushf
sub
cld
loop
add
jo
or
shrb
movsl
add
sub
pop
unpckhps
xchg
jb
add
inc
popf
jo
aaa
mov
aam
push
and
jl
sub
hlt
sbb
inc
arpl
adc
xchg
add
xchg
mov
inc
cmpsb
out
push
mov
xor
push
stos
jne
cmp
add
and
jb
insb
sarb
xor
add
pop
loope
jo
pop
add
adc
xor
loopne
xchg
cmp
and
sub
jae
inc
cmp
and
outsb
dec
mov
push
nop
push
les
xchg
movsb
cmp
jo
add
push
icebp
pusha
cmp
int3
push
in
cmp
in
dec
mov
shl
stos
arpl
imul
fs
cld
mov
mov
loopne
loopne
adc
sahf
add
pshufw
ret
xor
add
sbb
adc
push
pop
sbb
test
sbb
and
ret
dec
mov
mov
xor
pop
pushf
incl
adc
cmp
and
add
add
bound
push
clc
add
jl
push
psubsb
xchg
add
jle
push
pusha
mov
and
add
xor
push
mov
loopne
je
add
jg
jp
sbb
mov
xchg
aad
sti
pop
stos
mov
or
push
push
pop
add
push
cmc
add
inc
adc
fstp
addl
adc
sbb
icebp
add
outsl
cli
loope
iret
pusha
add
cld
cmc
mov
push
cmp
clc
fwait
pop
push
lea
insb
ss
imul
std
mov
les
aas
push
add
fistpll
fcompl
and
dec
test
aas
cmpsl
aam
sub
add
fs
cli
setg
adc
repnz
sub
loop
loop
mulb
add
shlb
pop
pop
add
push
push
mov
dec
shr
jo
mov
jg
pop
add
jb
adc
fmuls
add
hlt
add
push
or
or
ret
add
mov
in
add
xor
addb
mov
or
cwtl
sub
cld
rolb
dec
mov
jns
inc
nop
dec
add
je
mov
rorb
movl
adc
testb
or
add
je
mov
int
mov
clc
pmuludq
ja
add
or
jae
call
adc
push
pop
mov
sub
adc
fs
lock
inc
and
add
mov
jne
adc
jmp
add
or
cmp
lahf
clc
add
push
mov
in
push
xorl
shr
xor
and
push
and
jecxz
loope
add
movsb
sahf
push
cmc
es
push
sbb
out
pushf
scas
int3
rclb
and
adc
mov
mov
mov
add
fidivrs
or
pop
xor
aaa
je
or
adc
jg
inc
lret
mov
mov
adc
sbb
sub
add
fs
xor
add
push
add
loop
push
addr16
jo
mov
mov
imul
inc
jg
pop
dec
imul
repnz
movsb
inc
add
push
jno
xchg
sti
add
sbb
iret
or
push
push
or
add
or
mov
sub
enter
adc
movsl
popa
fildl
mov
mov
xlat
stos
add
lahf
jo
push
mov
inc
mov
push
push
push
mov
add
pop
pop
out
cmp
push
pop
inc
push
out
movsb
sbbb
adc
aad
mov
js
add
mov
jno
add
inc
xor
pop
xlat
das
cmp
push
add
cmp
add
inc
push
pushl
call
in
mov
and
out
dec
addl
cmp
loop
add
fsubrl
imul
enter
hlt
inc
dec
sarl
pop
xor
fistps
jbe
outsb
inc
lock
inc
adc
je
scas
xchg
dec
sub
add
in
cmp
and
test
movsl
inc
add
jge
in
xor
aad
fiadds
xchg
fsubrs
push
xor
cmp
je
push
andl
adc
mov
shrb
ja
fcmovnbe
dec
add
or
inc
or
inc
add
mov
or
jp
inc
xor
addr16
pusha
dec
movsb
pop
pop
cltd
mov
cmp
and
addr16
ret
fnstenv
adc
jbe
inc
jge
cmovne
test
ljmp
sub
mov
pop
add
push
jno
pop
add
pop
data16
mov
loopne
jne
adc
add
jle
add
add
xchg
rolb
and
cmp
shrb
push
aam
daa
push
inc
lea
mov
jmp
xor
jg
jg
setne
cmp
xor
pop
out
filds
jns
mov
test
push
adc
push
add
ret
clc
or
sub
mov
xor
subl
push
pop
adc
cmp
ret
mov
jne
stc
hlt
imul
inc
sarl
outsb
fstpl
lret
sub
pop
or
add
in
jl
dec
adc
or
loopne
sbb
ja
add
or
mov
inc
jg
mov
in
daa
add
clc
lahf
shll
aas
lods
int
sbb
sub
inc
out
cmp
sub
scas
dec
stos
mov
lea
ret
push
add
mov
lods
nop
xchg
add
xor
lea
xor
add
unpcklps
jne
loop,pt
ss
xor
or
sbb
and
add
adc
jmp
lock
push
stos
adc
std
adc
pop
add
add
and
fdivs
jmp
popf
dec
notl
push
jge
movsl
das
fnstcw
pop
cmp
popf
ret
ja
cli
add
push
das
movsb
out
fadds
cmc
in
cmp
add
ret
call
add
mov
sbb
add
lock
add
fildll
pop
add
sub
in
mov
daa
jbe
aad
cwtl
lahf
push
xor
xor
or
sub
aam
jne
mov
push
das
add
xchg
inc
xlat
pop
andb
scas
call
loopne
std
ds
dec
test
and
add
fcoml
insl
pusha
ljmp
cmc
sbb
aam
mov
test
adc
cmpsb
jmp
call
popf
adc
daa
test
jecxz
mov
adc
or
xor
mov
outsl
clc
push
loop
jo
inc
aaa
test
lods
dec
out
pop
repnz
nop
add
ss
shl
and
lea
jecxz
call
mov
or
add
jle
shl
jecxz
add
xchg
mov
cld
mov
test
nop
pusha
insb
push
in
add
and
ja
pop
roll
add
or
pop
fdivl
jecxz
jne
sbb
loopne
insb
mov
rorb
mov
ret
pop
push
jns
add
mov
movsl
push
inc
fdivrs
add
pop
lods
pop
xchg
dec
repnz
outsl
insb
mov
or
cmp
dec
ljmp
cmpsb
jns
add
aam
mov
and
je
adc
fiaddl
stos
imulb
or
mov
mov
mov
inc
push
ret
xchg
dec
xchg
add
inc
cld
dec
add
push
int
pop
adc
mov
jecxz
call
shlb
jmp
aaa
add
xchg
aas
inc
or
in
push
add
stc
shll
and
dec
add
mov
adc
pop
inc
inc
sbb
rclb
test
repz
loope
pop
repnz
roll
cmp
iret
sub
mov
cld
dec
add
and
shrl
dec
fidivrl
sbb
sbb
movsl
cltd
sbb
sub
out
negb
je
mov
pop
pop
test
adc
and
enter
in
jb
cmp
movsb
and
cwtl
in
jb
or
jns
leave
dec
mov
sbbb
push
pop
divl
or
loope
sub
out
sub
rolb
shlb
pop
mov
inc
leave
mov
add
cld
cmpb
add
mov
add
dec
jmp
fwait
sbb
rcl
jmp
adc
mov
sub
jne
testl
repz
pop
aam
orl
ror
sti
enter
wrmsr
mov
incb
lret
mov
add
les
inc
push
jl
mov
lds
add
push
adc
dec
mov
pop
add
lods
xchg
adcb
test
aaa
add
scas
imul
xchg
pop
add
push
in
xchg
orb
es
or
adc
push
add
add
movsb
fwait
or
ljmp
push
add
in
pusha
test
lock
orb
or
push
push
push
add
sbb
outsb
mov
or
pop
sub
add
lock
push
jl
push
push
arpl
adc
stc
and
xor
push
adc
pusha
cmp
stos
xor
add
cld
inc
aas
dec
xchg
add
in
call
push
push
rorl
inc
cmc
push
add
inc
sub
ljmp
add
aaa
pop
pop
add
test
dec
push
cmp
incl
push
scas
inc
add
cmpl
pcmpeqw
loopne
xor
inc
ret
and
incb
xlat
push
ret
or
inc
mov
and
aam
mov
jmp
or
adc
mull
test
call
sub
jo
pop
mov
dec
adc
mov
in
add
out
lahf
push
add
cwtl
test
imul
or
add
rclb
pop
add
pushf
jg
inc
rorl
or
pop
add
inc
mov
sbb
xchg
add
filds
dec
add
mov
push
add
test
add
push
xchg
fs
lds
and
lahf
or
push
in
smsw
call
out
dec
add
xor
jbe
ret
cmp
adc
stos
dec
mov
push
mov
repz
add
dec
dec
add
sub
mov
jno
mov
jae
daa
or
pop
fcoml
enter
add
pop
sub
add
xchg
fistps
lahf
add
arpl
add
xlat
mov
pop
adc
mov
lahf
adc
movsb
mov
and
sub
xchg
sahf
inc
add
mov
mov
pop
mov
push
dec
xchg
test
push
lcall
mov
cmpsb
ret
bound
je
jns
add
mov
cmp
push
adc
ljmp
add
and
mov
add
data16
mov
push
in
xchg
test
mov
add
enter
cmp
xor
sbb
shlb
fwait
push
test
je
mov
and
jg
or
mov
loope
mov
movsb
xchg
mull
repz
aam
add
or
icebp
add
and
add
cs
imul
adc
adc
inc
scas
jmp
fs
cmp
popf
or
js
les
add
mov
add
cmp
and
xchg
sub
push
and
cs
sub
or
pop
rcr
mov
imul
add
or
jl
and
sub
add
push
xchg
lea
scas
enter
dec
inc
decb
jp
loop
cmp
fidivrl
sub
add
orb
dec
and
add
dec
sbb
sbb
adc
or
push
add
push
push
and
mov
mov
pusha
pop
ret
out
add
test
sub
imul
cmp
cmp
add
fisubrs
addl
data16
sub
cmp
insb
xor
addb
add
idivb
push
and
mov
cmpb
lsl
int
mov
pop
add
repz
jno
inc
inc
enter
fcoms
push
es
enter
push
xchg
iret
lock
mov
test
cli
mov
add
pop
mov
outsl
or
hlt
sub
push
jle
js
das
pop
insb
popa
imul
test
xchg
lock
sub
cmp
dec
mov
fdivs
ltr
clc
push
xor
fs
add
mov
bound
push
add
stos
dec
cli
out
psubb
in
or
add
add
scas
add
les
fistl
jecxz
lret
add
mov
add
lahf
hlt
imul
dec
add
mov
into
adc
rolb
xchg
das
icebp
repz
sub
pop
dec
rcrb
xor
inc
mov
add
rorb
adc
in
push
fs
pop
dec
in
mov
mov
je
ja
push
push
call
add
push
das
mov
mov
add
stc
lcall
mov
in
call
push
sahf
js
je
pop
xor
adc
idivl
xchg
add
mov
jo
xchg
lea
enter
repnz
cwtl
cmc
pop
fldcw
clc
dec
and
push
sti
into
ja
dec
clc
incl
incb
push
add
dec
push
outsl
add
adc
pop
mov
jge
jle
mov
lea
test
adcl
sub
mov
mov
inc
pop
sbb
xor
mov
and
mov
add
scas
sbb
adcb
add
and
add
cwtl
scas
mov
adc
cmp
lea
lock
rorb
inc
pop
rol
push
or
inc
imul
jge
jae
jge
add
cmp
add
aas
stc
cs
lea
mov
xchg
imul
push
add
dec
or
jp
insb
icebp
inc
sbb
add
dec
or
cmp
pop
sub
sbb
jno
or
outsl
orb
movsb
xor
push
xchg
add
lret
or
cmpb
aas
pop
dec
xchg
aad
test
fcomps
imul
mov
imul
pop
loop
add
gs
lds
sub
imul
imul
movsb
ja
xchg
fcoml
add
push
push
fidivrl
sub
fstl
fsts
andl
xlat
sub
mov
pop
or
inc
inc
sub
ds
cvtpi2ps
testb
push
notl
and
or
sti
aaa
pop
add
mov
or
daa
subb
xor
fcoml
int3
or
add
imul
and
test
call
push
push
or
mov
rcr
mov
jl
add
push
repz
push
out
sbb
rcrb
xchg
cmc
add
xchg
jb
rcrb
js
loopne
sbbb
add
and
push
data16
add
fs
xchg
add
and
leave
xor
xchg
mov
inc
add
imul
repnz
dec
stos
outsb
push
scas
add
sbb
mov
add
cld
push
mov
adc
fsts
sbb
rol
sbb
add
and
test
int3
add
dec
movsb
fs
aam
pop
nop
mov
and
pusha
jmp
add
clc
xor
cmp
mov
cmp
stos
mov
les
scas
sub
push
ret
imul
nop
pop
bnd
add
arpl
adc
and
nop
adc
or
jle
fcmovu
xchg
dec
aad
jo
cmpsl
inc
xor
cmp
cmp
std
adc
xor
call
add
stos
int3
or
add
add
mov
cld
sbb
push
imul
pop
fistpl
bound
pop
mov
add
cld
add
adc
push
jo
addb
sti
xor
bswap
adc
mov
sbb
inc
or
aam
je
insl
add
xor
mulb
nop
dec
mov
fsubrs
push
dec
or
inc
add
pusha
loop
cltd
mov
push
pop
add
mov
aam
shr
out
pop
add
jnp
dec
push
push
xchg
push
jae
fildll
adc
add
int
das
lds
inc
or
cmpl
aam
mov
and
iret
test
sysexit
push
ret
mov
or
inc
pop
inc
or
lahf
xor
push
push
movsb
mov
push
xchg
mov
in
and
mov
mov
or
add
mov
sub
add
imul
mov
mov
sub
mov
cmovb
shlb
arpl
ja
mov
sub
fmull
pop
mov
dec
pop
xchg
push
sbb
lock
mov
add
mov
sub
test
add
pop
add
add
test
push
mov
adc
jbe
inc
in
fcoms
xchg
out
lea
adc
xor
test
mov
mov
fnsave
sbb
or
lods
xor
mov
inc
mov
fbld
loopne
adc
pop
mov
int3
rclb
mov
mov
mov
mov
aam
lret
or
push
mov
sub
mov
scas
inc
sub
jae
sub
pushf
shlb
aaa
or
lods
jns
push
cmp
mov
add
jae
test
xchg
add
out
rolb
push
sarb
push
insb
xchg
mov
aas
and
cmp
dec
pop
inc
arpl
inc
xor
ljmp
cmp
pop
pop
mov
push
decl
js
dec
repz
in
stc
or
test
hlt
dec
push
push
lock
or
mov
sub
jne
pop
pop
arpl
loope
notl
push
call
sub
cli
add
stos
dec
xor
inc
jl
ja
lds
mov
add
add
add
lea
out
jle
fsubs
test
jne
clc
push
pop
adc
or
test
in
testb
add
jns
mov
ret
add
push
xchg
pop
mov
pop
adc
iret
push
xor
push
inc
sub
in
sbb
push
leave
fidivrs
pop
add
enter
and
insb
add
mov
xor
pushf
adc
clc
xor
mov
cmp
loopne
jbe
inc
mov
fistl
jmp
push
lahf
nop
jl
mov
imul
adc
mov
add
mov
add
shl
sub
mov
jbe
imul
jmp
mov
hlt
and
loope
jmp
fbld
mov
push
add
cmpsl
imul
dec
jp
jp
add
sbb
pop
sub
add
inc
repz
xchg
pushf
sub
lcall
jle
mov
cmp
sub
push
add
mov
adc
je
add
jb
jo
bound
fs
subb
push
sbb
and
add
jb
cmp
pusha
and
add
js
jnp
jno
add
clc
lcall
push
mov
gs
pop
pusha
inc
and
pop
dec
dec
cwtl
aas
movups
cmp
and
add
shrb
aam
xchg
out
xchg
lock
mov
leave
aad
add
pop
fsubrl
xor
fs
cmp
add
jbe
jne
imul
adc
jle
hlt
jne
and
jno
nop
adc
push
sub
push
mov
and
mov
cld
psadbw
call
cmpl
mov
and
mov
imul
mov
push
and
pop
lcall
push
es
mov
jnp
cmp
sub
insb
jmp
dec
or
mov
stos
push
lahf
call
push
inc
or
mov
iret
push
sub
je
hlt
dec
push
dec
cmpsb
fisttps
outsb
dec
pop
or
sbbb
jge
fldl
inc
or
out
daa
lock
lret
pop
das
adc
add
pop
enter
push
add
out
arpl
imul
mov
mov
add
add
rolb
xchg
push
push
adc
fsubrs
mov
xor
pop
mov
pusha
cmpsl
lea
xchg
inc
enter
mov
push
lods
adc
mov
call
leave
push
jo
inc
scas
xor
dec
jle
adc
add
mov
shlb
pop
add
lret
and
leave
lods
les
mov
sub
shlb
outsb
test
jp
sbb
sub
inc
mov
cmp
add
popa
sbb
nop
pop
ret
jg
xlat
shlb
sbb
adc
add
adc
mov
sub
or
es
fldcw
js
adc
lods
ljmp
test
sbb
jne
add
pop
add
and
cmpl
add
out
jo
add
stos
in
jle
lods
and
cmpl
push
add
stos
add
cmp
movsb
jmp
movsl
insl
jnp
jle
adc
mov
mov
mov
push
faddl
shlb
cmp
js
jl
add
sbb
cmp
adc
jnp
inc
out
adc
fwait
bound
and
arpl
mov
push
jo
fidivl
or
fst
les
or
add
adc
add
loopne
adc
dec
add
fbstp
xchg
leave
add
push
and
add
roll
add
outsb
out
or
dec
push
mov
aaa
lds
xchg
add
call
sbb
pop
daa
js
cmc
les
and
sub
mov
add
iret
add
jg
add
fldcw
test
bound
inc
cmp
push
add
sti
inc
mov
shl
jns
fwait
aaa
lcall
hlt
push
and
rolb
inc
cmp
shrb
dec
adc
pop
mov
cmp
add
mov
mov
jb
cmpsl
add
dec
mov
insl
stos
cmp
jecxz
xchg
int
jo
add
mov
stc
jle
jb
loopne
add
ret
sarb
lds
push
or
mov
addl
inc
pop
fwait
push
sahf
cmpsl
enter
add
in
test
das
rolb
jbe
fdivl
les
push
push
push
sbbl
pop
cmp
add
dec
cmp
add
sbb
mov
cli
outsb
add
cmpsl
pusha
xor
add
pop
ret
mov
mov
mov
lret
add
dec
nop
fcoms
pop
lock
loopne
add
outsb
sbb
cmpsb
lahf
rclb
mov
add
or
sbb
in
movsl
add
bound
sub
cld
mov
push
icebp
push
insl
adc
add
add
in
mov
pop
mov
mov
jb
pop
cmovbe
rcll
pop
shlb
cmpl
cmp
add
xchg
xor
dec
ficompl
pop
addl
sti
adc
add
fcoms
cwtl
fwait
pop
push
jo
fs
pop
jo
add
push
mov
and
and
daa
cmpsb
cmpsl
xor
inc
lods
push
add
and
adc
sbb
mov
jo
add
cmpsl
mov
loopne
add
inc
mov
add
int
push
scas
stc
enter
add
cld
mov
xchg
addl
xor
and
cmp
cmc
cmpsb
mov
pop
add
cltd
jne
sbb
dec
add
mov
add
xor
xchg
sub
es
pop
xchg
xor
icebp
aad
inc
and
insl
test
rolb
lahf
pop
xchg
cmp
pop
inc
pop
pusha
loop
jb
add
lahf
push
fildll
mov
or
dec
lcall
mov
add
daa
aam
inc
jne
cs
add
mov
push
popf
add
adc
add
notb
ds
aas
lock
jne
add
add
jl
clc
test
insb
jo
add
push
aad
in
fucom
push
add
xchg
outsl
stc
orl
sub
stos
into
icebp
jg
adc
adc
jp
notb
pop
int3
sbb
pop
insb
orb
jae
mov
ret
cmp
sbb
and
add
xchg
iret
rcrb
out
sbb
mov
pop
cmp
jge
sahf
mov
jno
xchg
movsb
andl
add
pop
xchg
push
dec
scas
jo
adc
fst
add
mov
xor
inc
in
xor
loopne,pt
add
cmpsl
add
mov
add
mov
sub
gs
push
mov
add
mov
loopne
add
fnstenv
cmc
es
or
lret
dec
pop
sbb
testl
roll
ds
xchg
push
insl
sbb
add
jecxz
adc
out
pop
scas
add
xchg
sub
add
pop
aad
cmpl
cwtl
loope
lret
mull
sbb
inc
les
push
cmp
jge
inc
push
lock
xlat
call
jbe
sbb
add
je
lods
mov
sbb
mov
arpl
pop
mov
add
lret
sbb
inc
fdivrs
sub
stc
add
test
sbb
aam
pop
inc
jne
imul
je
and
sbb
xor
dec
and
fidivrs
data16
dec
lahf
jp
inc
ltr
xor
inc
push
fwait
repnz
and
pop
xlat
push
mov
ds
add
fcmovbe
ret
add
pop
mov
lock
test
loopne
shl
cmp
add
inc
neg
sbb
shrl
push
and
dec
mov
dec
sbb
xchg
or
stos
add
shll
add
xchg
loopne
test
loopne
xchg
stos
mov
loopne
seto
and
dec
jae
pop
sbb
mov
aam
repz
loopne
add
call
add
adcl
push
ret
cmc
rcrl
lock
mov
and
in
add
shll
push
rorb
loopne
add
mov
movl
loope
inc
or
inc
cltd
add
ss
jae
scas
add
sbb
inc
loopne
add
cs
push
xchg
lds
mov
push
add
int
out
fstl
in
mov
inc
push
sbb
mov
xor
add
in
push
push
mov
insl
adc
lea
call
add
ret
sarb
es
sbb
add
pop
sbb
fwait
cmp
xchg
sbb
shlb
push
mov
in
push
mov
daa
add
pextrw
test
xor
pusha
test
jnp
call
or
mov
push
or
pop
fimull
sahf
cld
inc
repz
repnz
xor
insb
test
subb
adcl
movl
add
rolb
je
inc
mov
lahf
gs
cmp
jne
add
sbb
leave
cltd
shl
cli
or
ret
outsb
mov
inc
add
loopne
adc
push
cld
pop
add
add
jne
cmc
das
add
inc
or
jno
fadds
addl
push
incb
dec
in
cmp
push
loop
ss
icebp
mov
nop
sar
or
jg
hlt
sub
xorb
jl
mov
mov
pushl
push
and
pop
mov
orl
les
jle
adcb
imul
rolb
cmp
add
xchg
stc
fiadds
mov
jl
add
push
jo
ja
pop
test
incl
js
aad
jae
add
push
push
or
cwtl
or
add
push
or
push
popa
add
sub
mov
inc
pop
sub
sarb
cmp
cmpl
or
add
or
cli
mov
push
push
cmp
rorb
mov
movb
jmp
add
or
add
push
adc
popa
add
inc
add
sbbb
out
das
test
sub
mov
add
mov
add
jmp
add
insl
push
fsubp
icebp
xor
sub
sbb
add
add
jnp
outsb
sub
or
pusha
jae
dec
loopne
sbb
data16
and
roll
and
lods
and
pop
sub
mov
push
cmp
push
in
or
adc
aas
fsubrs
add
xchg
inc
dec
sti
add
cltd
repnz
or
or
js
rcrb
ljmp
add
cmp
mov
inc
neg
adc
add
test
pop
or
shll
sbb
jg
in
push
andl
mov
pop
cmp
mov
xor
dec
sub
push
cmp
paddb
incl
jae
add
jmp
inc
inc
and
out
ja
or
cmpb
mov
loopne
inc
lret
pusha
in
sbb
inc
addl
add
ds
jnp
sub
ja
lods
mov
inc
movsb
lcall
int
xchg
jmp
fldenv
add
js
dec
push
bound
imul
fldl
hlt
into
addr16
push
dec
jge
pop
test
add
in
aaa
sbb
icebp
ret
inc
inc
adc
xor
or
add
fcoms
mov
add
test
cmpsl
add
les
cld
xchg
add
push
sbb
popf
popa
inc
add
das
into
addb
xor
daa
inc
aam
pop
add
adc
mov
xchg
mov
sbb
adc
pop
or
fnsave
addb
cli
add
jno
sbb
jb
push
outsl
add
dec
or
iret
cli
shufps
jbe
cmp
jle
rclb
add
or
sub
adc
xchg
mov
lahf
dec
mov
mov
ja
jp
add
stos
and
cltd
les
orb
test
mov
cld
movl
aam
mov
dec
lea
adc
scas
enter
sub
and
add
push
or
pop
mov
add
pusha
jmp
and
xlat
cmpb
jne
int3
adc
inc
adc
daa
je
ja
pusha
ret
jb
decl
and
call
aam
mov
add
mov
or
jne
sbb
out
iret
testl
and
pop
pop
add
cmpsl
cwtl
dec
enter
or
fs
int
push
add
scas
mov
xor
dec
xor
in
add
fbstp
lret
jg
add
imul
add
imul
xor
mov
subps
pop
xor
mov
shlb
jne
add
mov
in
add
ja
sub
mov
neg
pop
stos
cmpsb
adc
ljmp
cmpb
lahf
sub
sub
loopne
mov
and
add
es
inc
test
add
sub
popa
add
add
insb
mov
pop
aas
mov
sub
rcrb
add
jne
push
pop
inc
and
scas
xchg
test
add
or
cmp
jae
add
push
push
add
popf
inc
sub
adc
dec
scas
sbb
push
out
add
push
inc
pop
mov
sub
dec
shr
sbb
sub
add
mov
dec
or
mov
cmp
movsb
pop
cmp
xor
inc
mov
cmp
sbb
lcall
gs
xor
les
mov
jne
dec
pushf
pop
popa
add
dec
stos
sbb
rcl
loopne
inc
sbb
ficoml
into
push
push
xchg
xchg
push
add
mov
jp
jno
andb
jecxz
and
push
popa
imul
in
pushl
les
push
lods
adc
mov
add
dec
cld
fdivrl
add
jge
or
lea
add
cmp
mov
mov
push
in
es
add
jge
cmp
test
mov
and
cli
mov
add
addb
pop
add
push
pop
jo
jge
add
cmp
adc
adc
pop
enter
lret
jnp
dec
inc
popl
aas
mov
adc
add
sub
push
mov
in
sub
add
push
jb
mov
nop
outsb
cmp
pop
dec
lods
pop
add
lret
mov
decl
adc
pop
clc
push
nop
popf
into
jo
adc
loop
sub
jmp
add
mov
jg
pop
mov
nop
adc
xor
jmp
gs
add
popa
cmpsl
je
inc
into
aas
mov
outsl
pop
out
push
add
push
cmp
cwtl
arpl
sub
sbb
add
mov
call
add
lock
cmp
push
jl
mov
clc
stos
pop
pop
in
andl
dec
lock
roll
xchg
hlt
inc
inc
lret
jmp
cli
add
cwtl
testb
icebp
jp
add
or
push
pop
push
ljmp
xchg
add
cmp
cmp
push
mov
add
negb
jmp
mov
stc
das
aas
je
add
pop
jne
sbb
inc
add
cwtl
adc
test
adc
pop
sbbb
es
inc
cli
mov
or
ret
call
cmp
aas
and
add
sub
pop
ja
pop
outsb
xchg
test
in
push
idivl
dec
add
loope
add
cmp
or
push
push
loopne
lock
rcrl
add
mov
hlt
jl
add
dec
or
adc
dec
or
dec
inc
nop
inc
push
fcmovne
div
mov
inc
and
mov
add
test
ljmp
push
add
inc
mov
popf
fwait
xor
push
add
pop
mov
dec
incb
mov
scas
test
stc
cmp
push
out
imul
leave
push
cmp
push
push
jae
fs
out
mov
xor
jle
pop
pushl
add
mov
jne
add
arpl
insb
out
add
imul
clc
mov
jge
dec
dec
mov
push
out
cmp
sbb
lods
lea
sarb
pop
stos
movsl
add
pop
xor
decb
adc
jb
aaa
loopne
pop
lds
ret
rolb
xor
lret
dec
mov
inc
sub
jbe
icebp
jg
push
gs
idiv
adc
add
xchg
push
lds
lcall
mov
clc
jge
lcall
movzwl
fsts
mov
xchg
mov
pusha
mov
addb
cltd
leave
push
sbb
jg
adc
sbb
add
xchg
xchg
stos
add
add
or
adc
sbbl
mov
cmp
aaa
cmp
add
add
sbb
sub
lea
or
xchg
cwtl
les
add
push
movsl
in
jmp
test
xor
push
mov
stos
stc
adc
mov
xchg
mov
inc
punpckldq
fcoms
dec
and
cmp
mov
add
jno
add
ds
xor
lea
fisttps
push
add
lcall
add
push
and
and
add
je
xchg
add
imul
and
faddl
shl
popa
enter
inc
cli
sbb
pop
sub
scas
and
or
xchg
adc
jmp
mov
lock
pop
jns
dec
add
xchg
mov
aam
add
repnz
mov
jns
pop
lcall
sub
push
add
jg
cltd
or
sahf
inc
adc
rcrb
cmp
push
adcb
add
pop
pop
std
fiaddl
out
pushf
cli
add
pop
jecxz
clc
xchg
out
lcall
add
inc
lahf
mov
or
and
in
add
ljmp
pop
and
rclb
add
shll
dec
xchg
or
adc
push
sbb
cld
cwtl
jg
mov
fs
xor
daa
add
inc
mov
add
cmp
loop
pop
pop
stos
pushf
cmpsb
push
nop
push
clc
xchg
xchg
add
lcall
sbb
cmp
in
pushf
inc
jb
and
es
mov
inc
jno
shlb
insb
xchg
test
leave
add
jmp
sbb
or
mov
movsb
and
pushf
bound
enter
lock
xchg
subb
jo
dec
jbe
sbb
nop
mov
cmp
daa
add
xchg
aad
mov
xor
pusha
fmull
jle
xchg
pop
cwtl
mov
lds
jmp
add
int3
inc
xor
pop
push
or
add
xor
cmp
aas
int3
cmpsl
inc
sub
jnp
add
mov
in
and
scas
sbb
mov
leave
push
xchg
cmp
cmp
sbb
add
push
ds
and
xchg
mov
inc
push
cmp
xchg
add
pop
das
test
repnz
shl
leave
daa
inc
add
xor
sbb
cmpl
push
pop
negl
lret
enter
fstl
jle
pop
or
popf
push
push
fcomp
add
ret
shlb
and
add
pop
lret
ljmp
pop
push
xchg
dec
dec
push
xchg
and
aas
mov
dec
jbe
add
int
arpl
ds
pop
scas
adc
adcb
add
xchg
hlt
pop
addr16
sti
or
aam
jb
push
dec
adc
dec
mov
ja
fbstp
push
and
enter
push
imul
sub
fists
in
adc
mov
or
xorb
mov
dec
pop
mov
cltd
add
subb
xchg
pop
add
xchg
pop
cmpb
loop
orb
rcrb
aas
adc
add
scas
pop
push
notb
ret
shufps
push
cmp
loope
pop
les
test
xor
cli
adc
inc
push
mov
xchg
mov
lock
mov
mov
lea
sub
xor
enter
fiaddl
adc
sbb
push
pop
add
jb
les
cmc
jns
push
sbb
cld
pop
lods
or
cwtl
add
stc
lods
inc
inc
int3
ftst
add
scas
dec
pop
add
mov
nop
push
add
pop
jle
test
ret
jmp
out
adc
outsb
and
cmp
inc
int3
clc
or
add
dec
or
add
fcoms
inc
cwtl
mov
cmp
mov
xor
xor
incl
jp
or
pop
xor
jmp
aam
mov
xor
outsb
test
pop
lahf
push
dec
cmp
dec
xor
gs
ficomps
add
daa
push
pop
pushf
pop
sti
pop
ja
add
les
popa
add
rolb
add
xchg
xor
push
push
in
cmp
adc
inc
pop
pop
add
xchg
orl
push
push
in
call
pop
aad
aam
add
mov
ljmp
inc
dec
test
inc
push
and
movsb
add
mov
jns
out
sub
rcrl
pop
cmp
mov
add
mov
in
loop
add
sbb
push
popa
dec
push
push
add
mulb
xorb
dec
xor
adc
ljmp
sbb
or
add
ds
loope
fwait
mov
in
out
cmp
mov
inc
dec
sub
sti
aam
xlat
add
and
add
mov
add
sbb
repnz
mov
push
sbb
cmp
or
outsb
sbb
divl
or
nop
and
lods
push
cmp
ds
call
cmp
jno
add
sbb
xor
dec
adc
loop
iret
mov
in
jge
lods
cmp
sbb
or
or
add
mov
add
pusha
cltd
or
mov
insb
add
pop
xor
nop
xchg
add
add
ds
sub
sti
pop
aam
rorb
lret
add
shl
and
inc
cmp
sub
cmp
movzwl
fs
mov
jae
add
cli
rclb
mov
pop
add
leave
mov
popa
mov
add
mov
mov
ss
sbb
es
or
shl
aam
sarb
inc
cmovo
scas
add
call
jo
ljmp
jmp
sub
pop
inc
das
enter
add
mov
push
inc
xchg
and
mov
prefetcht0
mov
mov
lods
or
sahf
push
xchg
mov
inc
push
inc
and
pop
add
jno
rcr
push
cmp
mov
repz
pop
pushf
stc
sub
sub
clc
cwtl
inc
add
xchg
push
mov
dec
jb
add
push
mov
sti
enter
add
imul
mov
sbb
add
addl
add
mov
rolb
movsl
inc
push
dec
or
pop
add
push
sub
add
inc
sbb
aaa
inc
cmpsl
es
mov
push
and
ljmp
push
imul
rolb
inc
in
mov
gs
js
add
cld
ljmp
in
mov
add
xlat
push
and
fldl
and
jmp
rcll
call
ret
nop
orl
xor
andb
xchg
and
sbb
mov
or
hlt
sarb
add
dec
lahf
mov
popf
xor
xlat
add
adc
add
incb
and
sbb
aad
in
mov
nop
jle
mov
hlt
cmpsl
sub
xor
inc
mov
inc
add
jge
fs
and
sbb
add
cli
orl
loope
jmp
mov
adc
dec
pop
or
adc
inc
jo
sbb
add
ficoms
cwtl
nop
push
sbb
jnp
cli
or
sbb
sub
pushf
mov
push
add
lock
cmc
add
add
mov
mov
xor
or
adc
push
mov
movb
in
movsl
push
xchg
aad
sbb
xchg
inc
inc
test
ds
xor
aaa
pop
jbe
sbb
ljmp
mov
cld
inc
cmp
pop
dec
fistps
popa
cwtl
test
fldl
fnstenv
lcall
or
sbb
jp
mov
lcall
pop
add
inc
or
daa
add
mov
jbe
orb
enter
push
sub
in
add
pop
push
cmp
adc
inc
movsl
cwtl
mov
cmp
ss
sbb
rorb
xor
push
and
and
stos
add
pop
or
mov
cmp
sbb
or
je
loopne
ljmp
add
jne
cmp
out
mov
pop
test
lds
mov
and
addb
mov
push
pop
cmp
mov
and
sbb
sub
add
cmpl
adc
into
orb
xor
shlb
add
adc
stos
add
adc
ljmp
pop
jmp
xor
xchg
mov
mov
mov
dec
cli
add
nop
jo
inc
into
je
aas
pop
adc
mov
add
push
dec
push
add
mov
call
and
lret
repnz
sub
push
loop
add
or
jmp
add
mov
insb
add
lea
leave
sbb
hlt
pop
sbb
or
xchg
add
inc
cltd
dec
mov
jg
jle
add
not
cmc
dec
cmp
xchg
dec
mov
test
je
jbe
jnp
add
mov
decl
pop
test
sbb
inc
pop
imul
imull
add
js
push
sbb
push
add
das
loopne
mov
dec
test
inc
jmp
mov
ds
sub
sti
mov
jmp
cwtl
fcomip
add
fldcw
mov
xlat
push
pop
mov
adc
cmpsb
add
lret
cmp
cltd
addb
jo
add
add
test
test
sub
push
jo
push
aas
orl
mov
out
pop
jb
or
sbb
jle
or
das
push
lea
cmpsl
loopne
sti
add
or
xchg
mov
sub
and
clc
add
cld
int3
popa
cwtl
pop
or
mov
pusha
in
jne
or
sbb
shl
cmp
add
in
cmovl
lock
sub
test
pop
ret
rcrb
add
add
pop
js
or
daa
jl
cld
sub
push
mov
dec
push
orb
adc
or
cmp
add
sub
iret
repnz
int3
ret
call
add
inc
push
add
pop
or
fcoms
divb
mov
pop
inc
inc
xor
or
test
js
add
ljmp
bndldx
fs
mov
dec
or
xor
divl
add
inc
sub
dec
and
xor
push
inc
jp
add
mov
nop
movsl
add
adc
sahf
sub
addr16
add
jbe
xor
add
pop
mov
pushf
cmp
lds
xchg
lock
jmp
adc
inc
jb
pop
movl
adc
push
inc
enter
cli
lret
or
sub
jp
movsl
adc
jno
loopne
shlb
cmpb
enter
xor
xor
jne
mov
adc
push
and
cmp
sbb
filds
shlb
jb
mov
push
xchg
jns
bound
or
xchg
mov
pop
scas
cmp
xchg
repnz
dec
lea
add
addr16
notb
jp
add
pop
decb
loope
lods
add
jo
mov
xchg
lret
int
xchg
adc
xor
pop
enter
hlt
cmp
dec
addl
sub
dec
xor
lock
shl
add
xchg
daa
imull
orb
fwait
sub
xchg
clc
sub
cmp
adc
test
jns
sub
cltd
shrl
movsb
inc
adc
ljmp
cld
lock
rol
adc
outsl
inc
cli
ja
clc
fstl
sub
pop
testl
lret
shll
xchg
cmp
in
scas
enter
lods
mov
xchg
int3
cmp
add
in
ret
add
flds
adc
add
lods
dec
add
xorl
jle
popl
or
mov
shrl
pop
mov
in
cld
push
xchg
jmp
call
push
sahf
adc
fadds
cmpsl
test
imul
jb
popa
jle,pn
add
and
stos
add
sub
cld
or
pop
dec
repz
mov
cltd
jge
add
roll
add
and
xchg
adc
xchg
add
push
xor
and
pop
add
jns
add
ja
add
dec
cli
aam
rorb
test
add
scas
xor
jns
leave
add
ret
daa
inc
mov
sbb
movsb
nop
sub
sbb
call
neg
or
jns
or
cld
into
push
add
stos
ds
xchg
les
xor
out
enter
mov
jne
jns
data16
mov
popf
cmp
shll
scas
and
push
mov
loopne
popl
pop
push
push
and
mov
pop
xchg
out
cmp
popa
fadds
rolb
leave
xor
adc
cmp
shl
imull
or
inc
xchg
push
inc
imulb
int
mov
les
xor
push
add
dec
mov
rolb
add
mov
jmp
adc
xchg
hlt
cmp
mov
mov
add
clc
adc
in
lret
dec
inc
sbb
repnz
and
xlat
mov
dec
lret
jno
mov
clc
mov
jbe
rorb
sbb
sub
dec
call
movsl
popf
cs
jmp
dec
mov
xchg
add
pop
mov
loopne
inc
add
data16
in
stos
add
sub
fiadds
sub
add
cmp
lods
jl
pop
xchg
dec
xchg
sahf
movsb
push
pop
xchg
movups
mov
inc
add
adc
mov
jae
add
je
add
push
and
jmp
aas
mov
lea
adc
cmpsb
mov
sbb
movsl
sub
dec
hlt
xor
popf
rorb
lea
mov
call
push
hlt
mov
mov
add
lahf
arpl
cmp
jne
in
dec
ret
lods
add
insb
movsl
ds
push
pop
cld
sahf
xchg
ret
jmp
mov
shrb
popf
jecxz
pop
add
stos
cmpsb
pusha
cmp
sub
add
xchg
jge
pop
sbb
add
xchg
ret
pop
mov
sub
or
xlat
inc
mov
es
cwtl
add
pop
and
jecxz
add
or
filds
cmp
dec
xchg
popf
out
bound
pusha
push
push
arpl
cmp
sbb
mov
push
mov
roll
pop
popa
movsl
mov
mov
movsb
or
fs
xchg
pop
mov
nop
push
push
cld
xor
push
inc
add
aad
insb
aas
addl
sub
jl
add
sub
add
jge
add
or
cmpsl
sbb
inc
and
add
or
ret
pop
dec
clc
in
inc
pop
addr16
andl
faddp
xrelease
add
hlt
push
daa
pop
nop
add
sub
fdivs
in
add
insb
mov
test
xor
or
jne
and
inc
nop
pop
dec
add
aas
lods
rolb
incl
shr
adc
push
pop
adc
inc
test
add
cmp
or
mov
subb
mov
add
out
lret
dec
cli
add
ret
jb
enter
add
popa
mov
pop
and
or
ret
jne
jo
fdivl
lcall
lock
ss
es
push
add
jmp
dec
add
mov
add
and
cmp
push
scas
ret
inc
or
in
lock
insb
xchg
bound
aad
ret
or
mov
dec
rorb
pop
or
pop
or
inc
cld
dec
pop
add
add
add
add
mov
sub
add
fisttpll
add
pop
push
adcb
inc
rclb
add
jae
shll
stc
add
sub
add
push
jle
xor
mov
xchg
add
jae
sti
dec
xor
xor
dec
pop
das
pop
jmp
push
sbbb
aaa
add
fwait
sbb
xchg
data16
add
push
add
je
mov
inc
pop
sub
adc
lock
push
jle
pop
cmp
mov
or
rcrb
js
sub
or
lea
aam
jp
add
nop
out
add
imul
xor
pop
jns
or
lods
nop
or
cltd
jecxz
pop
inc
push
repnz
adc
sbb
jmp
or
sbb
inc
ret
mov
xchg
hlt
mov
adc
jb
popf
add
pop
cvtps2pi
mov
xchg
repz
fsubs
and
ret
dec
mov
mov
push
pop
in
rorb
push
mov
sub
xchg
enter
jmp
dec
lock
mov
jge
imull
orl
add
pop
and
inc
ret
std
arpl
ja
push
testb
cmp
mov
sahf
mov
sub
ret
xor
add
push
xor
lock
pop
and
cmp
jnp
sbb
cmc
nop
pushf
cmp
push
cmp
je
les
aas
add
add
hlt
cmpsb
and
lods
sbbb
lret
mov
push
loop
mov
loope
add
mov
jmp
cmp
out
jge
jl
add
jecxz
enter
or
or
mov
adc
aaa
jg
xchg
add
jle
or
outsl
cltd
or
push
adc
add
xor
xchg
jle
scas
mov
adc
dec
cli
add
aaa
dec
fsub
jo
ficoms
jns
insb
xchg
cs
adc
cmp
sbbl
jo
adc
sbb
pop
cmp
sbb
ret
mov
jmp
rorb
repnz
xchg
jno
xchg
and
sub
or
movsb
scas
jp
push
or
ljmp
push
add
andl
and
movsl
call
pop
insb
inc
or
repnz
add
and
icebp
pop
mov
rorl
cmp
or
jns
aad
orb
pushf
jb
cld
aad
andb
lea
jle
mov
and
sub
in
mov
xor
dec
push
mov
push
lahf
ljmp
mov
add
rcrl
cmp
lahf
or
mov
nop
add
jo
fbstp
inc
jnp
icebp
shr
imul
or
cmp
sbb
fwait
pop
movsb
pushf
dec
pop
sub
cmp
push
icebp
mov
repnz
fwait
mov
or
add
repz
add
adc
inc
fiadds
das
es
scas
add
adc
sbb
pop
and
fistl
dec
push
fdivrl
or
jne
imulb
sub
fidivrl
lock
ljmp
leave
inc
push
push
add
jmp
add
inc
dec
cmp
push
sub
pop
mov
xchg
decb
add
sub
add
cmpsl
test
inc
xchg
add
out
dec
sub
adc
mov
adc
dec
add
mov
mov
mov
add
outsb
sbb
cli
lods
jg
loopne
push
jno
inc
shll
or
ret
or
xor
movb
fs
mov
pop
loop
add
add
jb
cwtl
adc
pavgb
rorb
nop
mov
xlat
ret
je
sbb
mov
mov
adc
push
cmp
lods
push
lahf
inc
jno
cld
or
shr
idivb
sarb
pop
jne
add
xchg
mov
shrl
inc
sbb
dec
and
add
aaa
dec
scas
adc
movl
sbb
imul
adc
xchg
out
add
push
push
adc
adc
add
movsb
or
cmp
out
cmp
sub
adc
lea
dec
movsb
add
xchg
test
scas
sbb
cmp
shrb
jno
add
adc
add
popf
xchg
loop
rcll
dec
and
call
pop
pop
andb
lds
cmp
out
sbb
dec
and
jae
mov
adc
mov
mov
cs
fldl2e
faddl
fs
inc
fimull
add
mov
inc
add
mov
and
in
hlt
add
jns
and
dec
aas
xchg
dec
and
push
inc
arpl
jnp
fsub
addl
jmp
cmova
add
iret
jmp
daa
add
inc
push
add
mov
and
pop
or
inc
mov
and
adc
mov
sbb
cmp
inc
xor
push
add
jg
or
repz
add
cmpsb
cmp
insl
xor
cmp
in
jp
fdivs
xchg
cmpb
in
xor
sub
push
test
mov
or
pop
xchg
add
add
push
push
dec
add
jmp
pop
mov
push
mov
fdivrl
stc
cli
xchg
sbb
push
lea
test
push
add
mov
test
inc
jb
adc
into
add
lea
sub
push
lds
add
cmp
mov
jg
jbe
addl
fs
and
jno
cmp
nop
movb
sbb
or
in
pop
enter
push
add
xchg
mov
and
enter
ljmp
sub
add
or
jbe
lods
rolb
repz
cltd
add
mov
movsl
cs
push
sub
pop
or
pop
or
les
push
dec
sti
repnz
in
adc
stos
pusha
push
push
jae
push
xchg
cmp
in
test
adc
into
cmpsb
pop
xchg
les
pop
xor
test
test
push
xchg
cmpsb
mov
dec
push
push
ja
lret
rcl
add
dec
mov
cmp
sahf
gs
iret
jmp
je
js
xor
push
or
add
jne
pop
test
fists
imul
jge
or
dec
push
add
cmp
pop
dec
xchg
repz
push
sub
add
inc
clc
inc
mov
rol
insb
jb
push
push
out
push
cmp
andb
int
clc
mov
les
xor
mov
mov
push
add
lret
push
push
or
pushf
je
add
adc
out
add
add
add
stos
imul
and
aad
and
adc
cmpsb
rclb
in
jecxz
cwtl
cli
je
add
push
jg
in
sub
rorl
pop
push
int3
fsubrs
push
dec
add
es
and
jmp
xor
imul
shr
pop
and
sbb
mov
shlb
or
and
lock
adc
shll
arpl
jne
shll
fidivs
imul
mov
hlt
mov
repnz
adc
mov
fildll
mov
rolb
std
jecxz
xchg
lods
into
aam
push
fs
gs
inc
pop
pusha
scas
cmp
lock
pop
andb
add
insb
mov
lahf
jmp
add
xchg
mov
push
out
pop
lods
mov
sub
xchg
fwait
mov
bswap
adc
rcll
add
pop
add
jno
pop
popl
cmp
data16
pusha
ds
arpl
loopne
dec
jmp
fidivl
pop
mov
dec
call
sbb
iret
in
jne
add
das
sbb
incl
jmp
lods
cmpsl
jl
inc
xchg
nop
pop
cmp
dec
xchg
cmc
inc
int
sarb
add
pop
faddp
mov
popf
jmp
iret
loopne
dec
xor
lcall
orl
out
fs
imul
mov
add
and
scas
adc
cs
cmpsl
jmp
pop
add
mov
and
pop
cltd
add
mov
xchg
lret
and
push
sbb
jne
push
popa
insl
sti
xor
and
push
cmp
xchg
add
outsl
frstor
jge
fchs
mov
inc
hlt
mov
test
clc
or
add
call
add
sub
stc
add
and
hlt
or
or
rorl
and
rolb
add
dec
xor
xchg
cli
sahf
add
mov
adc
add
cmp
lret
sarb
lret
ret
and
ret
mov
sub
xchg
dec
or
push
add
fxch
shrb
hlt
movsl
xor
jp
clc
jmp
add
push
test
rcrl
mov
cmp
jne
movsl
add
and
cmp
xchg
es
ljmp
adc
data16
mov
or
punpckhbw
repz
jae
mov
lock
pop
adc
lahf
int3
divb
xchg
rorb
pop
push
or
push
in
and
add
movl
jmp
notl
mov
add
test
loopne
cmp
sbb
cmp
jmp
push
xchg
shl
pop
sbb
add
mov
add
add
scas
add
jl
xchg
lds
leave
add
mov
inc
idivl
sbb
int3
fistpll
js
unpcklps
test
add
dec
dec
cld
aam
in
dec
add
adc
pop
sbb
and
aam
push
dec
or
aad
xchg
repnz
jo
vmovsd
mov
outsb
cs
xchg
insb
add
lock
sahf
negl
imul
sti
jne
lds
lock
add
mov
js
cmp
pop
adc
mov
add
push
aam
icebp
rorl
repz
mov
push
sub
pusha
lret
mov
pop
fadds
xor
mov
xlat
lcall
sbb
xchg
add
mov
add
in
dec
or
mov
into
mov
push
xchg
in
and
mov
add
sbb
add
sub
sarl
negb
xor
cmp
rsqrtps
mov
pusha
and
repz
lret
sub
test
mov
add
mov
notl
push
push
daa
push
xor
daa
inc
inc
loopne
pop
in
call
jbe
decb
add
add
imul
cmp
sub
cmpsl
sbb
cwtl
push
push
cmp
adcl
cmpsb
aas
adc
add
popf
or
dec
ds
lock
or
fsubrs
dec
out
test
loop
xor
lods
add
js
mov
add
and
jbe
jb
and
loopne
lret
mov
cmpsl
add
mov
xor
add
lods
dec
add
mov
ficoml
mov
cmpsl
fidivs
xlat
jge
mov
mov
imul
mov
pop
in
in
cmpb
imull
movsl
mov
add
lds
ja
add
pop
fldt
or
cmpsb
add
mov
and
je
mov
jno
insb
lcall
loope
add
xor
add
add
pop
push
mov
add
fnsave
push
or
pop
in
and
fsubr
add
jmp
add
movsl
cli
and
jl
or
scas
test
out
jbe
add
adc
test
negb
bound
pop
icebp
adc
xchg
test
push
ds
and
imull
mov
add
test
adc
rcr
idivl
add
negb
test
or
ret
add
pop
add
mov
add
pop
or
lock
jl
add
insl
stos
jg
adc
data16
rorb
aam
mov
cmp
mov
push
hlt
add
and
inc
loopne
push
inc
cmp
test
adc
cmp
add
cmp
add
call
add
add
inc
pop
roll
mov
fimull
add
jbe
xchg
orb
aad
jns
add
insb
add
adc
or
xchg
add
add
mov
loop
iret
adc
add
fisubs
fistps
insl
add
repnz
inc
lods
dec
stc
xchg
add
rorb
pop
int3
cwtl
not
ss
ds
sub
dec
test
mov
stos
push
dec
push
and
adc
sub
test
stc
pop
adc
or
xchg
jmp
mov
xor
jne
mov
xor
mov
xor
loop
inc
inc
sub
jae
rol
repz
dec
mov
leave
pop
xlat
lock
add
fiadds
in
test
mov
pop
scas
lds
cmpb
cmpsb
add
sub
bound
popf
iret
xor
sbb
sbb
push
inc
aas
dec
push
pop
dec
mov
call
add
xor
inc
and
push
dec
jg
jmp
push
aam
lods
dec
and
mov
adc
daa
mov
push
inc
setbe
stc
rcrb
lods
or
cs
push
adc
add
fstl
or
mov
enter
je
add
add
gs
ret
add
dec
jno
das
push
and
pop
dec
pop
inc
cmpsl
mov
inc
push
cmpl
mov
bound
movsb
dec
adc
sti
sub
movsl
jl
sbb
push
dec
sti
rolb
xchg
cmpsb
movsl
pop
leave
hlt
mov
out
jl
pop
add
dec
mov
cmc
jbe
add
inc
adc
loope
add
pop
sub
mov
test
xor
xchg
sub
cmp
inc
dec
pop
mov
orl
pop
adc
rolb
call
aas
push
ja
add
sbb
lds
ljmp
push
xchg
mov
fcomps
in
and
xor
pop
jo
stc
push
aas
sbb
or
pop
push
adc
add
and
cmpsl
push
add
jns
pop
add
loope
lret
out
or
add
sbb
sub
add
jg
mov
jg
jg
jg
jg
jg
pop
out
mov
cmpsl
and
ljmp
mov
adc
rcl
inc
scas
divb
jo
outsl
test
pop
mov
xchg
addr16
mov
sbb
inc
sbb
lock
les
lahf
lock
adc
lods
or
lea
or
cmp
out
adc
jg
xlat
loopne
repz
shrl
das
mov
adc
add
xor
mov
dec
test
pop
dec
out
call
enter
dec
mov
lahf
xchg
loope
rcll
test
lds
fcmovnb
jno
jbe
xor
add
loop
xchg
add
int
and
add
push
loope
jmp
jb
add
aaa
sbb
stos
push
add
mov
add
addr16
test
cmp
dec
mov
xchg
pop
lock
push
mov
and
test
aaa
mov
in
dec
adc
inc
ror
lea
clc
cmp
push
add
inc
scas
hlt
mov
call
push
push
dec
jno
add
mov
popa
mov
iret
xchg
sbb
pop
orb
pusha
cld
jmp
ljmp
add
sub
jo
mov
movsl
inc
add
push
es
rolb
push
xchg
sbb
dec
sub
sbb
cs
xchg
pop
xchg
add
stos
lds
and
or
mov
or
out
test
add
push
jne
pop
notl
jle
hlt
dec
out
insb
push
add
cmpl
jno
ret
jmp
out
fildl
repz
in
cld
lret
stos
adc
scas
sbb
adc
jae
dec
loopne
inc
add
dec
and
daa
add
xchg
mov
dec
add
and
pop
mov
mov
jle
add
cwtl
imul
add
lock
adc
fs
or
dec
and
shrl
pop
jecxz
int3
add
out
movsb
or
and
inc
hlt
testl
cltd
push
adc
mov
cmp
cmp
ret
inc
add
insb
add
jnp
xor
clc
jmp
xor
stos
cmp
arpl
clc
add
stc
mov
jmp
pop
jae
cmp
sbb
lret
mov
fs
xor
or
xchg
dec
add
nop
aas
fcmovnb
xor
sbb
jle
add
adc
or
mov
int
loopne
pop
add
loope
je
test
and
nop
paddusw
mov
arpl
dec
imul
push
cmp
dec
lds
inc
xor
add
imul
jle
dec
cld
roll
and
pavgw
sub
lret
inc
jmp
cld
sbb
and
or
jl
add
inc
mov
push
lods
dec
add
sbbb
jo
pop
fs
push
adc
gs
popa
add
fnsave
pop
stc
mov
cmp
cmp
sub
sbb
sub
bound
mov
add
aas
pusha
jle
loopne
xchg
or
movl
fldl
ja
add
lock
jo
js
add
add
data16
clc
dec
mov
jnp
mov
stos
add
out
xchg
inc
mov
add
jbe
push
mov
add
incl
call
pushf
dec
xchg
ret
push
add
push
xor
add
xor
bound
cmp
add
inc
cmp
add
pop
pop
lods
mov
add
test
imulb
adc
adc
pop
push
and
mov
inc
flds
dec
adc
push
or
inc
or
cs
call
mov
les
jne
aad
mov
add
mov
sti
add
enter
add
or
jle
mov
push
add
fnstenv
mov
mov
adc
add
xor
or
sbb
xchg
jmp
test
dec
loopne
add
rorl
and
and
sub
or
xchg
add
out
hlt
add
or
sub
xorl
les
fcomps
inc
or
push
in
movsl
cmp
sbb
jns
or
int3
mov
pushf
pop
push
push
push
in
sbb
add
leave
mov
addl
dec
jne
push
loop
sbb
mov
xor
fiaddl
dec
das
clc
push
dec
push
push
cmp
jecxz
push
mov
bound
loopne
in
adc
add
jg
outsb
repz
out
mov
jo
ffree
clc
jp
add
push
pusha
adc
jne
stos
cmp
jmp
mov
dec
sbb
mov
sub
inc
xlat
xor
cmpb
jo
jbe
iret
mov
ss
daa
add
je
dec
mov
inc
adc
cmp
fdivrl
and
cmc
dec
mov
add
xor
jnp
jne
mov
add
jae
in
add
push
cmp
lea
mov
push
cmp
pop
mov
add
loop
push
inc
or
adc
dec
mov
mov
add
cltd
lret
inc
ret
stos
orl
cmc
sbb
adc
sub
cmpb
jg
add
dec
add
test
loopne
cmc
add
loop
test
pop
pop
add
add
insb
add
ljmp
sbb
and
in
push
cmp
into
sub
loopne
lock
dec
add
and
inc
sbb
test
cmp
and
mov
mov
pop
repnz
shr
jp
inc
sub
daa
add
adc
scas
fidivrs
add
or
int
mov
and
fcomip
mov
clc
out
xchg
add
xlat
in
adc
ss
and
shrb
dec
std
xchg
add
adc
fildl
aas
pop
clc
add
or
add
jno
add
xchg
mov
sub
seto
call
xor
add
jp
add
push
nop
sbb
xchg
pusha
adc
mov
mov
mov
fucomi
or
jp
push
divl
push
mov
cld
sbb
jg
add
iret
shll
xorl
pop
cltd
push
out
insb
out
scas
lock
add
add
shrd
clc
iret
cmp
mov
xor
adc
loope
out
call
loop
pushf
ret
push
clc
mov
ret
loope
sbb
push
adc
lods
dec
add
push
test
inc
jecxz
fwait
add
mov
or
jge
jge
add
jb
jecxz
test
jbe
add
test
push
xchg
jmp
ret
idivl
jg
dec
nop
mov
adc
outsb
clc
out
inc
add
jmp
pmuludq
push
or
cmp
jecxz
in
fcoml
or
dec
pop
je
test
mov
sbb
push
testl
xor
insb
add
adc
sbb
test
ret
in
daa
jecxz
jo
xchg
jno
xor
adc
test
sub
out
cli
mov
pop
into
push
dec
imul
ss
jo
testl
mov
aad
rcrl
sbb
loop
sbb
cmp
icebp
adc
scas
lock
ds
push
xor
in
stos
jmp
fadd
and
push
pop
mov
and
jle
xchg
sbb
loop
fstl
fidivrs
clc
push
mov
mov
push
or
icebp
sahf
sbb
sbb
jg
or
nop
fidivrs
xchg
sbb
pop
ljmp
cmp
mov
stc
daa
cld
cwtl
mov
fwait
cwtl
shrb
ljmp
test
in
das
xchg
jmp
push
outsl
cmp
test
std
inc
fdivr
fwait
xor
les
sti
adc
jmp
fidivrl
inc
sbb
pop
imul
sub
iret
ss
shlb
adc
add
pop
fadds
mov
jge
dec
sbb
inc
rcl
adc
rolb
ret
lods
fadd
rcl
imul
sbbb
sbb
lods
out
fstpl
and
in
andb
in
mov
arpl
or
mov
mov
mov
mov
mov
xchg
cli
dec
sub
inc
push
mov
cmpsb
hlt
movsb
jbe
out
jmp
cmpl
lds
jg
pop
in
js
fdiv
mov
adc
hlt
test
jecxz
and
insl
and
loope
out
xor
mov
adc
cmpsl
sub
jle
cwtl
dec
push
inc
xchg
xchg
repnz
sbb
lcall
mov
push
shr
cmp
xchg
push
xchg
jmp
pop
in
jmp
mov
repz
cmp
mov
jo
sti
jmp
adc
in
jg
cli
cwtl
sub
sbb
mov
nop
cmpsl
add
shll
inc
inc
sbb
in
add
sub
jge
inc
push
add
test
mov
sbb
inc
add
jmp
dec
or
xlat
icebp
popf
and
dec
inc
add
bound
add
in
or
ja
notb
mov
call
add
adc
inc
mov
add
fxch
dec
inc
xchg
and
fiaddl
test
pop
pop
pop
push
lods
adc
or
or
je
xchg
pop
adc
pusha
xor
push
inc
daa
push
jno
dec
int3
jbe
mov
popf
sti
icebp
xor
mov
cld
sub
add
mov
js
xchg
mov
sub
ret
or
jae
add
std
cmp
fistps
cmpsl
add
or
test
out
xor
mov
jo
xchg
adc
test
inc
les
cli
xlat
add
mov
inc
add
push
mov
hlt
adc
std
pop
xor
lahf
adc
jl
out
cli
shrb
add
or
repnz
jmp
dec
dec
xchg
dec
cmp
je
psraw
in
stc
mov
add
js
add
fistps
lock
cs
icebp
sbb
mov
cwtl
arpl
or
fcoms
adc
stos
and
lock
or
test
push
lret
pop
pop
and
push
fimull
sahf
je
popa
mov
push
test
ret
add
adc
syscall
mov
sbb
or
sbb
xbegin
sub
sbb
xchg
mov
fs
adc
lret
xchg
or
adc
sbb
iret
fcmovne
mov
hlt
and
pop
dec
inc
mov
dec
push
or
pusha
adc
ret
rcrb
cltd
or
or
dec
in
push
sub
or
es
or
inc
adc
popl
sub
sub
cmpsl
jl
clc
mov
daa
push
fs
sub
mov
pop
mov
add
xchg
out
adc
mov
lea
inc
sahf
iret
xor
lret
adc
and
loopne
pop
xchg
rcrb
sbb
movlps
and
sub
lahf
filds
fildll
jbe
fcomps
addb
cmpsl
js
popl
adc
loop
cmp
sti
cmp
testl
in
and
push
or
das
inc
mov
mov
seta
lahf
or
pusha
repnz
mov
imull
fistpll
add
and
bound
cmp
add
sub
dec
add
lahf
adc
and
in
sbb
mov
in
sub
adcl
push
dec
clc
arpl
and
dec
dec
mov
je
sub
shrb
mov
push
dec
or
es
xchg
ret
adc
dec
sti
js
test
stos
rolb
movsb
les
push
push
xorb
test
pop
cmc
sub
mov
hlt
pop
push
xchg
sub
pop
dec
and
sbb
iret
push
in
push
xchg
dec
out
sahf
and
xchg
push
clc
les
movsb
sbb
sub
xchg
sub
and
rcrl
cmp
cmp
dec
ljmp
shr
pop
xor
xor
pop
cmc
ret
aaa
xor
shr
push
pop
popl
xchg
mov
bound
add
adc
jae
stos
push
arpl
or
adc
mov
loop
in
testl
or
fildll
aas
adc
sbb
adc
inc
loope
daa
popf
adc
movsl
mov
daa
sti
adc
cmpsb
lock
imul
movsb
lret
push
outsb
pushf
jo
mov
popa
insl
sbb
pusha
sbb
nop
in
lock
addb
jb
gs
or
es
dec
pop
cmp
fs
jp
xchg
mov
stc
adc
daa
dec
adc
or
mov
aam
mov
add
xchg
add
outsl
adc
addb
xlat
iret
add
push
shrb
cmp
dec
sub
gs
push
nop
leave
test
and
adc
cmp
repz
adc
int3
sub
pop
pop
js
mulb
into
lods
aam
adc
push
xor
mov
inc
xor
std
es
jle
add
mov
adc
adcl
inc
dec
sub
or
pop
adc
lods
xor
push
inc
mov
mov
lock
icebp
sub
mov
lret
dec
mov
outsl
popf
cmp
in
in
enter
dec
sub
mov
fiadds
add
sub
and
sbb
mov
inc
hlt
xchg
add
push
pop
add
push
pop
jmp
or
les
iret
dec
or
in
repnz
cmp
add
icebp
and
jl
cwtl
mov
add
rclb
mov
dec
or
and
jecxz
and
mov
cmp
pop
mov
xor
jl
fiadds
cmp
lods
test
test
inc
jmp
es
inc
mov
mov
add
xorl
add
gs
jge
mov
mov
jl
nop
mov
add
das
xchg
push
dec
or
pop
add
add
jmp
cmp
lcall
inc
add
fwait
jne
clc
inc
cmpsb
clc
stc
xor
mov
inc
fbstp
aaa
pop
xchg
inc
add
adc
push
ljmp
fsubrs
sahf
popa
inc
xchg
sbbl
cmp
fcomp
and
rcrb
mov
cwtl
js
add
xchg
psubw
cwtl
stos
cmp
pop
add
cmp
xor
es
stos
mov
pop
inc
js
xor
push
adc
je
add
dec
divb
scas
lcall
popa
into
out
mov
xchg
leave
shl
push
leave
pushf
jg
sub
cmpsb
sarl
inc
pop
sbb
mov
mov
xchg
inc
sbb
push
out
add
sub
add
sarb
loop
cmp
pop
add
cmp
dec
mov
and
and
add
xor
fs
or
dec
dec
or
pop
popf
and
xchg
jno
add
mov
and
or
sub
pop
and
adc
xchg
enter
jne
xchg
inc
xchg
test
mov
dec
jg
jg
add
and
mov
out
cmp
inc
pop
add
mov
in
inc
adc
add
inc
mov
imul
addr16
pushf
sti
add
mov
add
sbb
inc
xchg
and
mov
add
xor
jp
cmp
inc
shl
pop
addr16
add
push
xor
inc
and
or
adc
adc
movsb
imul
sbb
les
jle
sbb
adc
sub
mov
mov
xchg
pop
pop
jo
into
subl
xor
or
jbe
dec
movsb
stos
pusha
pop
lock
pop
js
xchg
aad
lea
xchg
dec
pop
mov
jmp
cli
filds
mov
adc
ja
push
addr16
inc
stos
add
aad
out
xor
loope
push
jge
ret
jo
or
fcoms
std
add
adc
mov
fwait
add
or
in
sbb
cmp
sbb
sub
nop
bound
dec
inc
pop
mov
andb
loopne
inc
rorl
inc
std
cmp
clc
and
jp
ret
sub
stos
ds
pop
add
iret
shl
loope
jp
and
mov
jge
xchg
bts
mov
xchg
adc
pop
sbb
and
ret
loopne
sbb
jo
out
sti
push
pop
lret
xchg
popa
lock
and
add
icebp
xor
lock
add
loopne
add
daa
sbb
jbe
adc
aas
jno
jo
inc
add
call
fucomip
cmpb
popf
loopne
cmc
pop
cmp
shlb
mov
add
divb
imul
inc
hlt
lods
dec
push
arpl
loopne
pop
and
dec
add
adc
jb
or
and
addr16
stos
or
lock
adc
sub
lods
adc
lahf
mov
cld
push
push
add
aas
inc
inc
into
sbb
push
add
mov
add
stos
add
jo
sbb
inc
lret
jmp
repz
jecxz
js
inc
out
test
inc
push
push
jecxz
or
mov
out
movl
imul
or
arpl
add
add
mov
jp
inc
pop
xchg
lret
xor
fs
xor
adc
push
repnz
outsb
pop
add
mov
stos
sbb
cld
xadd
lret
popa
pushf
outsl
mov
fiaddl
clc
mov
cmpsb
cmp
or
dec
add
push
cmp
mov
add
aam
add
sbb
jge
int3
mov
movsl
adc
xor
or
xor
xor
fldcw
pusha
ret
add
sbb
xor
pop
sub
add
popa
outsb
daa
jns
add
insb
outsl
shll
mov
cmp
rcrb
push
sti
es
pop
pop
adc
add
mov
lea
pop
mov
mov
add
aad
push
cwtl
pop
add
ljmp
or
mov
idivb
mov
test
rcrl
das
scas
push
adc
jl
clc
sub
movsb
push
sub
sbb
pusha
mov
shl
push
ret
add
and
sbb
xor
cmpsb
dec
inc
sbb
inc
cmpl
enter
test
xor
inc
and
loope
js
cmpl
loopne
and
jge
fldcw
dec
pop
lret
and
sbb
test
xor
inc
add
and
std
jae
js
cmp
mov
cmp
inc
loopne
out
xor
add
jecxz
mov
push
shll
xorl
add
inc
inc
push
ret
adc
xor
xchg
or
frstor
loopne
movsb
push
mov
mov
outsl
in
add
dec
nop
sbb
movsl
and
jne
fidivrs
lea
push
add
jbe
push
xor
cmp
xor
add
lock
cmovl
push
aas
cs
movb
test
dec
mov
or
add
or
pop
in
nop
movl
sarb
scas
rolb
subl
out
add
cmpl
add
xchg
or
cmp
orl
daa
inc
inc
cmpb
mov
ds
mov
nop
inc
push
cmp
push
popa
xchg
adc
add
cmp
call
cmp
je
lea
and
xor
jnp
mov
les
add
add
sub
adc
mov
mov
add
lods
call
js
lahf
jle
repz
add
xlat
add
mov
enter
pushf
std
inc
xorb
sarl
flds
jmp
pop
mov
add
pinsrw
enter
int3
add
ror
push
mov
cmp
sub
daa
sti
jg
inc
std
adc
mov
push
stc
add
mov
shrb
cmp
xor
xchg
jo
pop
je
add
test
loopne
add
pop
daa
dec
aaa
pop
pop
cmp
add
push
pop
xorl
clc
sub
cmpb
rorb
inc
dec
imul
mov
fsub
push
push
add
fsubrs
cwtl
add
sbb
shlb
xchg
psubw
cmp
cmpb
pop
or
add
adc
int3
xchg
add
lods
pop
pop
adc
inc
in
fwait
inc
cmpb
ds
js
faddl
mov
xchg
sti
add
or
dec
ljmp
sbb
cmp
add
sarb
mov
cli
push
bound
adc
punpcklbw
sbb
mov
mov
nop
nop
hlt
jmp
lods
dec
or
inc
lds
add
cmp
cmp
xlat
jo
push
int3
dec
push
inc
lahf
push
mov
shll
xor
fidivrl
or
lock
dec
inc
inc
mov
neg
in
loopne
add
push
mov
int
insl
test
negl
pop
fidivl
repnz
push
push
inc
pop
std
add
mov
stos
add
push
mov
dec
movsb
scas
sub
mov
add
inc
sti
dec
int3
add
std
out
les
mov
add
ss
push
inc
add
les
popa
in
in
jnp
cld
push
add
add
adc
std
add
push
inc
inc
cwtl
and
and
call
add
push
inc
xor
imul
mov
add
ljmp
mov
pop
sub
pop
push
add
jns
mov
xchg
jo
cs
add
add
dec
jne
add
dec
cltd
mov
mov
mov
cmp
xchg
inc
push
test
pop
loopne
sub
and
xchg
xchg
add
stos
mov
or
adc
nop
mov
cmp
paddq
cmc
adc
push
cs
in
or
mov
test
hlt
ja
add
mov
imull
sub
adc
sub
mov
add
nop
push
call
xor
mov
sbb
lahf
mov
xchg
push
cli
cmp
repnz
inc
cld
je
sbb
pop
or
jl
cmpsl
aad
add
dec
pop
stos
into
sbb
scas
cmp
movsb
clc
cmp
sub
jmp
or
add
shrb
push
mov
clc
roll
daa
add
xchg
ret
jne
sub
js
and
fsubp
jg
add
adc
inc
mov
jb
add
sti
xor
sub
push
push
sub
into
in
add
dec
fidivs
imul
cli
subl
cld
cwtl
and
shlb
pcmpeqw
sub
rolb
adc
bnd
or
add
shll
and
mov
add
int
in
hlt
inc
imul
inc
cmp
add
pop
or
mov
ja
push
loop
movsl
pop
inc
mov
add
push
lea
jp
das
subb
scas
sub
mov
dec
push
jmp
sub
sbb
xorb
dec
pop
add
push
push
mov
mov
add
and
fst
das
daa
cwtl
fldl
cld
lahf
xchg
push
jmp
add
cmp
add
xchg
jne
add
push
jmp
aam
ds
cmp
ja
dec
aas
lret
iret
loop
add
inc
not
sub
add
data16
add
and
push
push
sarb
push
clc
push
cmp
cld
cltd
out
add
orb
leave
jne
xchg
add
movsb
repz
dec
ljmp
pop
push
jge
pop
push
test
push
mov
add
aam
ds
push
or
inc
sub
outsl
and
test
xchg
mov
int
jecxz
pop
mov
pop
sbbl
lahf
push
xchg
add
es
add
or
vminps
cmp
dec
rcrb
add
cmc
js
or
das
les
inc
imul
or
call
cmc
add
daa
mov
pop
pop
cmpsl
enter
cld
jp,pn
repz
adc
jmp
enter
pop
mov
push
or
jb
call
push
mov
out
push
shrb
add
xchg
test
add
jle
fisttpll
sub
faddl
arpl
mov
aad
out
add
in
add
xlat
mov
pusha
jge
mov
add
jp
dec
pop
xchg
push
loop
add
and
addb
push
imul
add
setb
fsqrt
cmp
icebp
dec
cmc
enter
sub
dec
add
push
inc
nop
pop
or
icebp
add
imul
test
cmp
in
test
push
repnz
out
adc
cmp
mov
add
orb
adc
xlat
loopne
push
hlt
adc
mov
repz
call
mov
sgdtl
jb
inc
adc
cld
add
popf
pusha
cmp
enter
sbb
ss
sub
jge
add
xor
pop
lock
popf
adc
shlb
leave
add
adc
dec
xor
jle
cs
jecxz
add
in
enter
pop
je
add
hlt
add
aam
insb
fstl
mov
mov
int3
mov
or
add
movsb
push
xlat
add
call
scas
jb
pusha
cmp
push
push
call
xchg
pop
loopne
adc
loopne
add
mov
iret
fcom
fmuls
add
pushl
add
mov
pusha
add
pop
inc
pop
test
xor
xor
cmpsb
scas
xchg
arpl
sbb
frstor
add
ret
int3
das
sbb
jmp
xlat
out
dec
cwtl
aas
pusha
inc
add
xor
hlt
sub
sub
outsl
lret
jae
mov
or
pop
or
in
sub
mov
sub
xor
int3
lcall
mov
es
pop
inc
lret
cmpb
lock
xor
xor
lock
sub
es
adc
inc
add
jnp
push
clc
sub
jle
out
jmp
sbb
out
dec
rolb
mov
add
test
imul
ret
mov
ja
add
cmpsb
add
hlt
add
jmp
push
imull
enter
jb
add
inc
cltd
mov
rorb
sbb
inc
add
dec
pop
lock
cmp
and
int
add
cmp
sbb
add
push
push
sti
repnz
pop
push
add
cmp
mov
add
push
push
and
jnp
mov
sldt
lcall
dec
mov
inc
add
mov
int3
lock
fisttps
in
inc
es
decl
addb
mov
stos
pop
add
or
add
rcll
jne
mov
push
pop
or
or
test
xorb
out
shr
add
mov
xchg
inc
and
subl
jle
push
movsb
add
out
and
movsl
test
mov
cmpsl
fldenv
xchg
insl
idivb
add
mov
int3
aas
loopne
sub
mov
add
or
jns
lods
push
push
adc
push
aam
je
add
or
dec
and
sub
fmuls
inc
std
nop
cld
or
pop
dec
mov
dec
or
push
add
push
xlat
sbb
add
imul
test
andl
mov
add
adc
sbb
call
adc
and
popa
clc
cmp
movsb
or
cmp
aam
shlb
add
jge
push
add
xchg
fistps
shll
imul
add
in
and
add
jle
pusha
add
cmp
je
or
add
jne
jno
cmp
aaa
pop
in
sbb
nop
aad
and
addb
mov
push
hlt
adc
lea
rolb
add
addr16
imul
adc
repz
jmp
scas
je
mov
add
dec
clc
daa
cs
add
adc
repz
add
pop
cld
popf
push
xchg
sarl
push
in
or
iret
enter
jle
add
out
push
mov
je
push
mov
xchg
aas
imul
add
sub
dec
in
rorb
push
fcoml
into
jmp
out
adc
or
mov
lock
push
out
jae
ds
dec
cs
lock
out
xrelease
push
pop
mov
add
lret
xor
pop
dec
bound
and
add
insb
push
sub
pop
test
xchg
sar
in
mov
add
push
push
xor
ret
pop
jl
pusha
test
add
jmp
outsl
adc
daa
mov
popl
mov
push
cld
lcall
fdivs
and
shlb
cwtl
xor
mov
and
add
clc
or
inc
rcr
add
cmpl
test
jge
jo
xchg
xor
js
add
rolb
mov
popa
adc
add
loope
aam
and
add
in
loopne
sub
test
cli
push
decl
inc
data16
les
push
test
push
cmp
add
cwtl
decl
aad
test
adc
cmpl
add
jmp
push
clc
pop
pop
add
ret
or
in
jle
add
data16
or
mov
add
aas
je
mov
add
ficoml
mov
push
ret
outsb
call
inc
repnz
or
jae
inc
jmp
inc
sbb
ss
add
bound
data16
adc
repnz
fs
xor
pop
cmp
add
mov
add
xchg
add
add
inc
or
les
mov
cmc
dec
ljmp
cmpl
jbe
xchg
lds
inc
xor
sbb
mov
add
mov
dec
push
or
jo
sbb
std
les
notl
push
inc
or
imul
in
loopne
out
mov
mov
mov
inc
xchg
add
pop
adc
and
xor
add
add
iret
mov
add
cmp
mov
paddq
pusha
adc
fldcw
mov
sub
add
and
pop
dec
ja
lret
aaa
inc
in
xchg
inc
add
sub
add
add
push
inc
or
test
jae
mov
xchg
cmp
push
ficoml
loope
jo
faddl
sahf
jecxz
fmuls
jg
loopne
movsl
cmp
add
leave
xchg
dec
cmp
adc
jne
pop
sbbb
aam
lcall
inc
pusha
movsb
jnp
out
in
xor
cmpsl
out
call
test
adcb
std
dec
pushf
push
add
mov
push
jle
add
mov
adc
loope
ja
lods
pop
or
jns
notb
cld
sbb
xchg
sarb
jp
pushf
cs
and
rcr
hlt
js
jle
add
push
push
test
call
mov
push
rorl
add
xchg
movsl
adcb
cmp
xorl
adc
mov
pop
int3
and
imul
incl
push
xor
mov
dec
add
mov
fstps
dec
push
out
fistpll
sub
lock
pop
jno
add
add
mov
mov
inc
jecxz
loopne
pop
sbb
xchg
aam
inc
inc
dec
add
add
or
mov
leave
pop
cltd
add
jb
xchg
xchg
jnp
lahf
pop
cmp
add
sbb
rolb
jecxz
mov
cmp
sbb
ret
cmp
sub
adc
sub
aaa
add
jle
sahf
mov
or
add
add
cmp
inc
sub
xorl
inc
push
call
insb
push
pop
fcomip
add
mov
xor
jge
pop
idivl
sbb
lods
push
add
sbb
orl
out
nop
imul
lock
inc
push
je
icebp
cmpsl
xlat
adcl
jnp
sbb
aas
pop
cmovnp
push
pusha
inc
rol
add
andb
insb
add
sbb
lock
sbb
sub
leave
and
jns
add
add
nop
pushf
xchg
mov
inc
cmpsl
clc
test
xchg
push
cmp
je
xor
add
std
lock
test
add
in
sub
movsb
add
jge
xchg
out
push
lock
in
add
push
or
adc
movsl
psraw
mov
cli
decl
mov
lret
inc
xchg
jo
pop
outsl
cs
or
add
scas
xlat
cltd
xor
nop
add
dec
lock
cld
push
sti
sarl
das
pop
test
adc
push
and
ret
in
pushf
push
and
xor
loopne
push
inc
xor
adc
add
pop
int3
xchg
imul
cwtl
jp
hlt
push
in
add
cs
xchg
jg
shr
lds
xor
imul
add
fildll
adc
adc
movsl
cltd
lds
push
in
dec
cltd
dec
movsb
add
pop
add
das
inc
or
test
pop
rclb
pop
in
or
arpl
pop
mov
mov
in
aas
add
subl
add
aad
out
movsl
jle
das
fiaddl
mov
std
add
add
sarl
incb
xchg
sbb
pop
lret
xchg
sub
jae
add
and
jl
pop
push
stc
aas
xchg
sbb
sti
rorb
adc
sbbb
push
test
test
je
lcall
stos
enter
insl
cmp
and
sbb
sbb
lods
fnstsw
cmp
imul
cmpsl
rclb
adc
test
shlb
cmp
push
cltd
adc
inc
call
add
aaa
cmp
sti
jnp
mov
inc
mov
and
xchg
pop
popf
movl
daa
add
sbb
mov
cmp
mov
pusha
add
outsl
sbb
clc
loopne
add
icebp
pusha
mov
mov
lods
pop
adc
sbb
and
in
or
add
mov
add
mov
repz
mov
push
and
jle
mov
or
xchg
mov
sub
cmp
lods
js
adc
fisubrs
xor
out
add
dec
or
aaa
dec
jle
add
xchg
loopne
xchg
add
mov
daa
hlt
push
add
dec
sbb
cmp
in
add
xchg
and
add
mov
ja
js
mov
cmp
jmp
xchg
inc
sub
or
add
add
add
movl
popf
out
xchg
stos
mov
jns
adc
clc
add
mov
mov
pushf
add
inc
jbe
add
ret
add
jmp
add
js
jle
mov
add
push
add
scas
out
adc
add
mov
adc
jmp
mov
push
xchg
addl
inc
add
fisubs
test
cmp
push
xorb
cs
gs
push
push
rcll
or
push
sbb
divb
fimuls
aad
shl
mov
loopne
sub
xchg
dec
push
add
sub
pop
clc
add
push
pop
and
fldl
add
sbbb
and
inc
shl
int
add
fimull
enter
xlat
add
push
pop
add
jae
clc
jge
subl
incb
dec
out
mov
pcmpeqw
pop
test
sti
push
and
inc
xchg
jns
out
scas
pop
xor
out
test
add
xor
dec
fs
bound
lret
ljmp
jae
mov
push
add
lock
jg
add
in
adc
push
jle
and
add
cmp
add
jg
dec
push
jae
push
dec
or
loopne
or
and
jle
imul
ljmp
add
call
test
mov
iret
pop
popa
into
sub
lcall
aas
add
jb
or
mov
pop
add
sub
mov
lods
or
cwtl
or
loope
pop
xor
sbbb
stc
xor
add
les
fiaddl
sbb
mov
sub
sti
add
adc
enter
divb
in
pop
aam
cmp
insb
jg
lahf
push
cmc
int3
loope
loopne
mov
mov
and
and
movsb
and
vmovups
add
xchg
fidivrs
filds
push
adc
add
add
mov
add
pop
sub
adc
push
add
add
dec
pop
stos
jno
in
rclb
or
clc
hlt
out
add
adc
out
movsb
nop
js
mov
xchg
mov
adc
dec
push
cltd
test
and
add
loopne
or
into
pop
xlat
inc
cmpsl
mov
shrl
push
add
dec
je
push
sbb
sub
add
jle
or
mov
xchg
pop
mov
and
inc
pop
cld
adc
inc
pop
imul
pusha
jo
test
xor
or
add
adc
mov
je
data16
psubusb
aas
adc
adcb
cmpsl
add
negb
cld
xchg
popf
mov
cmp
sbb
cwtl
lret
mov
add
adc
adc
add
mov
loopne
mov
je
jnp
sbb
jne
insb
imul
insl
jno
jnp
into
adc
push
int
add
les
pop
sub
or
js
mov
or
add
sbb
cwtl
pop
push
sarb
push
inc
mov
jl
pop
pop
imul
xor
negl
lcall
add
inc
int
mov
add
movsb
fcomps
mov
cmpl
call
imul
and
mov
jno
fs
and
movl
cmp
mov
rolb
mov
jbe
inc
cwtl
imul
push
sarb
jae
sbb
push
push
dec
shrb
pop
add
jne
add
mov
sbb
shlb
add
arpl
xor
aam
sub
xlat
xchg
lods
add
lcall
push
dec
inc
jo
cmp
mov
inc
movsb
adc
add
fdivs
jl
sbb
add
sub
cmp
xchg
mov
push
mov
jmp
xchg
push
xchg
je
in
call
xchg
into
rorb
lock
fistl
lret
or
add
call
loopne
pop
xchg
add
mov
sub
repnz
loopne
movsb
or
pop
lods
int3
call
pop
jo
push
jae
add
adc
push
add
je
das
add
hlt
ja
les
add
pop
sub
add
rcrb
cmp
push
xor
test
ret
cmpb
in
jmp
pop
in
xorl
push
add
mov
pusha
pushf
sbb
or
or
ds
cmp
mov
mov
mov
add
jne
into
call
xor
add
shlb
clc
push
add
xchg
in
scas
out
movsb
add
sub
cmp
js
adc
pop
in
or
add
pop
push
mov
fcompl
pop
and
sbb
add
push
dec
and
test
fstpt
mov
pop
cmp
fs
loopne
or
add
movsl
jg
push
rorb
pusha
adc
add
nop
or
jp
dec
lods
mov
or
adc
fcmove
shll
out
add
sbb
ret
push
bound
push
adcb
stos
adc
pop
mov
mov
stos
push
dec
or
xchg
sahf
mov
adc
lock
add
lret
add
xor
push
dec
rcl
adc
pop
lcall
jg
nop
add
jmp
add
inc
cmovge
mov
mov
ret
cli
pop
movsl
xchg
inc
jp
addr16
sbb
dec
cs
jl
lret
mov
add
or
or
adc
dec
add
cld
das
popf
inc
pusha
mov
mov
add
and
popa
nop
dec
sbb
add
cmp
adc
mov
cmp
adc
cmp
aas
nop
out
add
mov
mov
pop
lahf
and
outsl
mov
pop
xchg
add
xchg
cmp
xchg
jo
push
adc
fucom
and
mov
xor
lahf
add
mov
bound
jle
add
jmp
xlat
mov
and
pop
jo
scas
outsl
in
add
xchg
sub
enter
add
sub
push
popa
and
add
shlb
stos
mov
sbb
fcomps
testb
repz
mov
add
or
xchg
pop
mov
pop
push
mov
mov
testl
add
ds
in
sbb
data16
js
or
pop
lock
add
mov
add
enter
stos
fsqrt
test
cmp
add
jg
pop
mov
movsb
add
or
pop
addl
sbb
xchg
jp
cli
and
push
add
cmpsl
pop
cmp
add
push
inc
clc
add
push
sbb
sbb
adc
and
pop
mov
mov
xor
jg
mov
pushf
add
rolb
add
aaa
addb
add
mov
xchg
add
inc
add
sahf
and
push
js
or
or
dec
mov
fcoms
sub
and
dec
loopne
les
popa
sub
inc
pop
aad
outsl
sbb
hlt
add
push
add
pop
inc
or
inc
pop
add
and
sbb
add
stos
out
jo
add
mov
jb
loop
fcmovb
std
push
or
lock
mov
mov
add
and
add
xor
fistl
and
dec
jge
les
add
adc
rorb
push
push
test
or
jge
cli
pop
add
bound
fwait
push
or
sbb
add
hlt
mov
cmc
aaa
pusha
mov
pusha
enter
rclb
dec
push
inc
fiadds
add
xor
or
je
jecxz
add
cmpl
jne
add
jmp
add
out
sbb
xorb
stos
add
cmc
jne
cmp
inc
add
rcrb
fmuls
daa
fisubrl
jmp
pop
pop
pop
js
loop
add
xor
repz
adc
pop
xor
ljmp
mov
inc
cmp
sbb
sbb
mov
add
inc
adc
pop
pushf
rolb
movsb
mov
outsb
or
in
cltd
add
shll
scas
test
je
ja
add
sbb
inc
push
add
or
and
nop
cmp
lods
mov
mov
add
xor
call
dec
add
xor
sarb
inc
outsl
aas
rolb
icebp
in
dec
insb
sbbb
and
mov
test
add
push
dec
pop
push
out
add
adc
lcall
mov
sarb
and
fcom
push
add
movsl
mov
call
push
stos
or
loop
add
es
lods
or
or
pop
test
neg
cs
es
popl
mov
mov
xlat
test
add
add
mov
sbb
out
test
rcll
in
xor
push
add
mov
mov
clc
or
orb
add
xor
inc
cmp
add
push
and
cmp
mov
adc
in
pop
pop
add
ret
pop
xchg
pop
and
inc
add
mov
pop
stc
add
cmp
xchg
loopne
add
sahf
mov
cwtl
cmp
jle
add
mov
add
or
jnp
lret
push
mov
adc
push
add
repz
adc
fisubl
fnstenv
bound
and
jne
outsl
or
mov
pop
or
movb
orb
cs
jge
pop
dec
adc
or
or
outsl
jl
leave
das
loopne
lret
aam
loope
pop
sub
lret
jle
sub
dec
cmpb
dec
push
add
mov
pop
jno
add
loope
pop
popa
mov
aad
test
fcmove
push
dec
movsb
jo
add
test
rcll
roll
dec
and
mov
and
or
pop
add
cmp
out
mov
jecxz
pop
add
lea
cmp
scas
cld
add
pusha
and
fbstp
out
inc
andb
xor
push
das
ss
fisubl
adcb
jmp
sbb
data16
add
push
sub
inc
in
adcb
stos
add
je
cmpsb
mov
pop
adc
add
mov
jo
add
cmp
ret
or
cmp
dec
out
add
push
sti
pushf
mov
adc
ret
jno
xor
dec
add
shll
inc
cmp
outsl
orb
mov
adc
mov
repz
and
adc
lods
addb
sub
into
adc
pushl
cmpsl
push
add
push
les
outsb
xor
dec
push
mov
jmp
testl
ja
lods
mov
movsb
xchg
test
adc
jmp
sbb
xor
loope
icebp
jo
add
mov
js
and
mov
jg,pn
pop
jle
fnstenv
rorb
add
jns
stos
fwait
cmpl
hlt
xchg
mov
data16
or
jmp
mov
scas
jae
in
lods
jl
add
or
pop
addb
mov
fimuls
jmp
lret
xchg
movsb
or
jecxz
xor
add
jo
pop
add
dec
insl
shlb
xlat
mov
lret
mov
cmpsb
inc
repnz
jp
sbb
shrb
or
xlat
add
mov
dec
sbb
add
adc
test
dec
mov
cmp
fsubrs
add
nop
add
sahf
push
mov
pop
clc
aam
cmovl
shrb
pop
xor
dec
mov
push
adc
add
mov
test
sbb
inc
or
pop
adc
lcall
mov
xchg
add
push
ja
nop
and
dec
jno
or
inc
add
lea
roll
add
mov
js
jae
add
je
or
add
movsl
xchg
pop
or
dec
mov
dec
jne
sub
cmp
gs
jno
push
stos
add
leave
mov
add
mov
ret
or
mov
sbb
add
push
jno
pusha
mov
add
or
je
add
pop
or
nop
sub
clc
cmp
jnp
mov
push
and
add
jns
inc
orb
adc
imul
jge
testb
lcall
add
mov
add
pusha
adc
push
pop
add
fildll
add
cltd
push
add
push
or
adc
add
adc
xor
push
stos
call
or
mov
sub
andb
add
push
sub
je
popf
add
es
andl
add
jl
push
call
add
pop
in
imul
push
testb
add
jae
adc
ret
scas
xor
aad
xor
outsl
and
pop
push
sbb
mov
push
pop
push
add
push
adc
add
mov
push
loopne
mov
sub
mov
dec
inc
add
cmp
jmp
shlb
js
ss
xor
subb
insb
cmp
ljmp
fisttps
xor
add
push
in
das
call
xor
and
adc
inc
xor
mov
pop
add
addb
push
mov
push
add
cs
rcrl
xchg
push
add
ja
and
push
push
push
stos
clc
inc
rorb
jg
and
or
inc
cmp
loope
jae
es
repnz
fs
or
mov
js
loop
mov
test
lcall
test
shrb
push
cmp
add
sbb
mov
fadd
movsb
mov
cmp
je
push
mov
adc
jb
mov
add
cmp
add
jmp
xchg
call
cli
js
enter
mov
jecxz
cmp
clc
aaa
push
fiaddl
faddl
decb
hlt
ljmp
add
insl
rdpmc
testl
sub
imul
add
dec
jne
enter
add
jnp
mov
dec
shl
xor
cmp
fcmovnb
enter
or
aad
add
adc
cmp
jne
sbb
dec
cmp
call
lods
sub
js
xchg
sub
loopne
cmp
add
mov
ret
pushf
sub
scas
adcb
sub
add
mov
fsubs
add
mov
repnz
dec
mov
cmp
xchg
hlt
or
sbb
or
or
inc
fdivs
test
imul
inc
cld
xchg
pop
adc
sbb
mov
adc
mov
dec
enter
push
sub
adc
in
jg
push
clc
add
push
jmp
dec
ds
mov
sub
add
inc
and
jp
sub
lock
mov
push
fs
or
xor
call
test
ret
pop
jecxz
ror
lods
dec
mov
pop
es
xchg
pop
scas
popa
add
mov
or
mov
push
lret
and
push
sub
add
cmp
jmp
cld
jle
push
sub
push
jmp
in
adc
add
lods
lret
imul
cltd
mov
pop
add
rcr
scas
ret
push
add
and
js
add
jecxz
lea
or
out
jne
mov
cld
ret
pop
pop
and
pop
add
sub
cmpl
bound
insb
cmp
mov
or
pop
inc
loop
add
and
and
les
and
and
sub
fildl
movsb
mov
cmp
adc
add
repnz
xchg
sub
add
and
add
push
mov
leave
neg
mov
rolb
js
adc
data16
cli
xchg
add
fbld
rol
adc
movsb
sbb
sarl
add
popf
push
mov
cli
popa
jp
mov
lea
xchg
enter
arpl
rclb
pop
out
repnz
jp
out
cmpsl
jge
jnp
repz
add
fbld
fdivl
add
adc
push
lahf
add
mov
fcmovbe
pop
mov
push
add
xchg
dec
and
mov
add
in
sbb
push
iret
push
in
out
add
shr
add
pop
xor
rol
sti
cltd
push
loope
adc
pop
and
les
mov
fiaddl
insb
push
xchg
jmp
pop
loopne
das
pop
add
adcb
sti
jns
cli
out
cmp
add
pop
int
add
movsb
push
loop
sbb
add
jno
push
pop
jl
pusha
mov
sub
mov
xchg
test
rorb
mov
and
cmp
jp
fstpl
ds
add
inc
leave
xchg
dec
push
repz
idivb
enter
arpl
std
or
in
rorb
out
xor
push
int3
cwtl
dec
out
sub
mov
dec
sub
movsb
cmp
add
xor
xor
push
push
push
cmp
mov
in
sbb
and
daa
sub
ss
sub
push
mov
push
jl
orb
add
cwtl
lock
in
lret
loopne
ss
clc
std
sbb
test
sbb
mov
add
add
mov
pop
repnz
and
inc
data16
fbstp
mov
add
testb
cmp
fldl
lds
dec
mov
add
inc
jl
into
xchg
adc
faddp
and
in
cmpsl
cli
add
ljmp
addb
jae
shl
add
mov
and
add
shlb
jmp
inc
pop
pop
inc
mov
add
pusha
stos
mov
iret
jge
mov
lret
jno
lock
sbb
push
out
cmp
add
adcb
nop
add
cmp
add
cld
adc
pop
loop
fadds
push
sahf
mov
dec
add
loopne
jne
loop
loopne
xchg
mov
pusha
pusha
mov
jmp
jle
mov
or
shlb
add
adc
xor
fs
loope
xor
add
push
mov
add
outsl
movsb
fcomi
rorb
lods
add
mov
pop
orl
jl
pop
xor
add
sub
outsl
or
jmp
repz
aas
pusha
sub
in
lods
adc
les
movsb
stos
mov
push
mov
push
ret
iret
pop
daa
je
loope
add
mov
cmpsl
add
outsl
test
add
orl
xor
and
and
jo
adc
dec
loop
shrl
xor
adc
stc
mov
or
cwtl
pop
test
or
imul
sub
dec
inc
add
mov
xchg
or
add
push
leave
dec
pop
call
push
pop
mov
out
adc
mov
pop
jnp
hlt
xor
or
mov
popl
test
sbb
movl
mov
subb
add
fcmovb
out
aam
inc
add
jg
fs
stc
pop
push
sub
aas
mov
jne
fcmovbe
inc
pop
mov
pop
arpl
jg
and
andl
cmc
add
lods
adcb
sbb
jae
adc
push
enter
mov
movsb
cs
sub
cld
add
mov
adcl
and
xchg
in
add
push
pusha
push
xor
test
les
dec
pusha
xor
push
and
push
cmp
outsb
push
mov
push
cmp
push
adc
sbbb
add
cmp
pusha
pop
jo
add
fs
dec
add
inc
add
or
mov
or
fistps
or
cld
jle
mov
adc
in
jo
sub
add
jg
cmp
rclb
xor
adcb
inc
add
push
inc
or
add
out
pop
jnp
add
jp
mov
adc
inc
jae
pop
hlt
jb
adc
daa
adc
sub
shr
mov
lcall
xchg
sbb
pop
js
mov
pop
nop
push
movsb
repz
pop
dec
or
mov
xchg
jbe
rclb
sbbb
adc
add
repnz
push
push
push
adcb
stos
add
popf
mov
rep
mov
cmp
call
xor
leave
mov
mov
test
inc
inc
cmp
add
mov
and
add
adc
or
sti
add
lea
or
adc
xchg
xor
add
loopne
sub
sbb
pop
adc
xchg
jle
xchg
add
cmp
ret
cmp
out
pop
inc
mulb
insb
jl
mov
add
cmp
jnp
push
mov
out
sbb
and
lods
add
sti
mov
mov
add
xchg
add
xlat
pop
pop
jne
cmc
pop
lret
rolb
add
iret
ljmp
or
pop
out
leave
lret
mov
cwtl
vmptrst
ds
fstps
add
xor
pop
ret
es
dec
pop
add
sbbb
leave
test
clc
jbe
adc
mov
adc
add
xchg
daa
mov
add
add
xchg
ss
add
int3
sbb
cmp
add
enter
lods
mov
jno
jg
add
push
loope
js
or
jb
xor
addr16
adc
stos
pop
pop
test
mov
shl
test
inc
lret
mov
ret
add
cmc
iret
pop
stc
push
psrlq
popf
cmp
dec
sub
jge
pop
push
fst
inc
and
and
and
sub
and
jo
add
fimuls
aas
cmp
addl
sbb
enter
lcall
jle
jo
icebp
and
xor
pop
cmp
add
push
cmp
bsr
js
dec
jns
sbb
mov
or
sbb
mov
ret
int3
out
call
inc
add
add
test
adc
stc
loop
push
add
psubb
add
mov
sbb
or
add
cmpb
jb
mov
mov
push
pusha
xchg
xchg
subl
mov
loope
add
or
adc
and
inc
mov
xor
jns
add
dec
shl
jnp
push
mov
fldl
add
push
orb
push
mov
mov
pop
adc
jbe
add
addb
cli
or
call
pop
arpl
cmp
les
pop
imul
push
hlt
int
rolb
cmpb
sub
sub
stos
xor
roll
mov
ret
add
adc
in
add
repz
add
xchg
or
xsha1
cmpsb
or
leave
xor
xchg
orl
sbb
mov
in
add
jg
repnz
pop
ret
pusha
pop
xor
mov
loopne
sub
xor
pop
add
pop
bnd
push
cmp
add
cmp
in
dec
add
sbb
jmp
int3
xorb
sub
pop
push
int3
or
adc
jo
add
in
add
jl
mov
dec
adc
stos
call
sub
pop
mov
mov
les
pop
inc
rcl
lods
pop
andl
data16
or
sub
jmp
sbb
aas
test
gs
shl
movsbl
adc
jne
mov
inc
call
fcoml
dec
xchg
cmp
jl
cmp
orb
int3
movl
mov
pop
or
addr16
lcall
fildl
fildl
add
test
xor
jae
mov
xor
or
nop
add
shlb
jne
mov
dec
or
add
xor
add
int3
jno
mov
sbb
int
push
mov
movd
push
into
std
dec
xor
int3
int
iret
add
shr
xor
iret
loopne
imul
jp
mov
add
adc
add
push
push
add
dec
loopne
cli
add
cmp
jb
out
add
outsl
std
xchg
pop
sbb
pusha
push
in
vpsrad
add
das
xchg
adc
addb
push
scas
push
mov
cmp
jns
jp
add
enter
inc
out
and
adc
cmp
aas
add
cmp
add
mov
and
mov
aam
add
test
fcmovnbe
rcrl
mov
mov
loopne
pusha
xchg
pop
add
mov
inc
add
push
in
mov
jmp
add
cwtl
mov
test
push
jmp
fstl
mov
push
pusha
and
jae
add
cmp
ret
rcll
xor
adc
push
pop
loop
and
lds
xchg
add
push
add
and
into
cld
xchg
add
or
cmp
or
add
cmp
mov
or
mov
aam
dec
pop
std
cwtl
xchg
movsb
mov
mov
inc
jae
call
add
sti
pop
fstpl
fwait
add
pop
adc
out
adc
cltd
add
xor
push
mov
pop
popf
lock
xor
mov
inc
mov
les
and
jmp
pop
xor
add
cld
and
sub
bound
push
pop
add
sbb
arpl
push
jl
xor
mov
mov
pop
mov
sarb
ret
rcr
movl
out
sbb
add
mov
jns
lods
add
jl
cmp
xor
adc
inc
add
nop
inc
push
sbb
sbb
or
or
dec
pop
dec
jl
hlt
in
pop
dec
cmpl
jp
ror
bound
je
push
add
inc
dec
pop
or
lea
jns
repz
clc
aam
mov
pop
jnp
jno
jmp
or
mov
enter
pop
inc
loopne
mov
dec
loopne
dec
neg
add
sbb
cmp
xor
cwtl
or
pusha
pop
add
inc
test
pop
or
and
in
sarl
clc
jns
sbb
mov
jge
adc
mov
cwtl
fstps
shlb
and
mov
xchg
in
orb
cmpsb
clc
je
les
or
test
mov
subl
mov
lods
or
cwtl
test
sub
cmp
inc
and
mov
add
pusha
and
cmp
cltd
loop
nop
sub
mov
and
and
addb
test
xchg
js
fcompl
ret
sti
arpl
aad
cmp
push
je
ljmp
mov
sbb
add
xchg
or
jmp
mov
xor
rclb
mov
cld
lock
pop
shrb
out
xchg
loopne
ss
inc
dec
subb
jb
cld
jno
fs
xor
xor
mov
adc
add
je
pusha
js
out
and
or
push
adc
mov
dec
pop
xchg
add
add
lods
cmp
inc
sbbb
mov
add
sub
add
imul
cwtl
test
add
mov
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
je
xor
jb
loop
out
addl
clc
ljmp
inc
sbb
shrb
mov
push
and
in
or
dec
rol
pop
or
xchg
nop
movsl
jns
sub
cwtl
jo
in
add
or
ljmp
aad
add
push
insb
jo
dec
add
adc
or
test
je
pop
es
fs
shrb
dec
call
dec
bound
jle
jle
jle
wrmsr
inc
cmp
jle
mov
sub
add
psubsb
jmp
idivl
not
neg
mul
repz
add
or
inc
add
gs
cmp
pusha
and
mov
jo
addr16
les
push
bound
sub
imul
jno
push
imul
lods
cmp
mov
push
movsb
xchg
sub
aaa
adc
pop
push
inc
dec
dec
dec
add
das
cli
inc
les
push
pop
pop
push
add
dec
popa
dec
cwtl
jp
bound
jecxz
push
leave
and
je
ja
jp
add
popa
add
adc
fldenv
jns
add
push
add
sbb
push
add
imul
lock
nop
in
js
clc
les
adc
jo
xchg
add
inc
cwtl
mov
int3
movhlps
and
sub
cmpsb
sub
stc
and
orl
adc
add
xchg
sub
xor
enter
or
js
inc
xor
fsubrs
ret
add
es
outsl
shlb
js
test
inc
xchg
mov
dec
fcoms
xor
and
jo
cmp
cmp
inc
push
push
rcrb
pushf
add
and
push
sub
je
loope
jl
sub
push
cli
jge
in
push
jle
test
or
cmp
add
insb
mov
adc
add
add
pop
xchg
mov
add
mov
imul
and
dec
mov
inc
lea
xchg
add
xchg
cmp
cmp
add
ja
jmp
roll
add
or
mov
mov
push
cmp
pop
push
call
xor
aam
pusha
hlt
jo
incb
shrb
out
or
push
or
or
or
test
dec
jmp
mov
xor
inc
mov
push
xor
or
xor
or
add
and
pop
xor
add
sbb
or
xor
cmp
or
jb
insb
pushf
xor
dec
add
xor
and
add
pop
dec
sub
dec
test
add
inc
cltd
movsb
fsubl
fs
nop
cmpsl
push
mov
add
add
adc
test
test
mov
aas
rdtsc
pop
inc
pop
jl
shlb
inc
or
mov
xchg
popa
int3
cmp
push
subb
jo
pusha
aaa
pop
cld
addr16
les
pop
mov
mov
pop
rorb
int3
sub
fs
cmp
cmp
sbb
nop
fmull
call
mov
loopne
mov
repnz
and
mov
cmp
fwait
mov
and
add
or
or
add
shrl
mov
mov
fwait
shr
int
cmp
jns
cltd
dec
push
test
ret
jp
add
sub
js
int
repz
nop
adc
jl
cltd
les
push
pop
mov
clc
cmp
add
sub
mov
int3
add
popa
fwait
and
xchg
xor
add
or
out
imul
mov
dec
and
fmul
loopne
in
add
andl
es
dec
nop
loope
and
add
and
sbbb
sbb
cltd
dec
xor
add
adc
in
or
call
and
mov
xchg
nop
add
aam
fdiv
push
rolb
ret
push
add
out
outsl
add
les
add
inc
cmp
nop
inc
and
add
add
add
leave
inc
push
adc
dec
and
scas
mov
dec
add
inc
cmp
stos
sub
xchg
and
lock
cmpb
mov
nop
aad
mov
xor
push
xchg
pop
add
push
jbe
test
lahf
ror
fmuls
mulb
or
sbb
dec
push
and
dec
stos
out
mov
out
in
lock
adc
inc
add
cmp
xchg
push
add
inc
je
mov
add
adc
in
add
mov
inc
adc
mov
add
insb
and
xchg
xchg
add
adc
out
repnz
ljmp
or
mov
and
mov
add
adc
dec
add
or
call
cltd
nop
xchg
jle
jg
aas
enter
pop
pop
dec
or
in
xchg
cs
inc
jle
jp
pop
jl
mov
cmc
scas
incl
jne
hlt
mov
dec
push
adcl
xchg
sbbb
inc
jp
mov
inc
mov
lret
cld
in
jle
insb
dec
jno
mov
add
add
push
enter
mov
psrld
jae
orl
fsubrl
inc
mov
mov
cmpsl
aam
in
imulb
adc
push
adc
or
dec
andl
pushf
adc
push
add
aam
loop
clc
clc
dec
xor
imul
cmp
xlat
mov
adc
je
add
mov
mov
or
fs
sub
sbb
sbb
push
arpl
fists
jecxz
outsl
outsb
xor
xor
xchg
pop
mov
mov
sbb
insl
add
mov
pop
push
add
jb
jne
and
add
xchg
outsl
arpl
mov
sbb
sbb
push
jmp
or
add
mov
push
add
jne
mov
push
xor
or
and
jle
add
out
inc
fisubrl
ret
add
jge
sti
push
jnp
add
push
call
in
inc
js
dec
inc
and
gs
add
jne
sub
adc
outsw
inc
inc
xchg
mulb
pushf
push
jae
ss
dec
add
xchg
dec
popa
outsb
add
or
sahf
adc
inc
imul
scas
push
movsb
pop
lods
dec
cmp
xchg
inc
jb
cmpsb
jo
cmpsl
loop
add
xor
ljmp
or
mov
test
inc
xorl
hlt
push
add
jge
popf
lods
stos
rclb
sbb
push
inc
add
mov
je
add
es
adc
add
aaa
cmp
sbb
xchg
pop
add
lock
jo
xchg
xor
or
add
push
mov
add
jg
insl
push
imul
mov
jp
cmp
dec
cltd
add
jb
lret
vmwrite
mov
orb
out
out
or
addr16
popa
jne
inc
outsl
js
hlt
adc
ds
sti
insb
je
enter
aas
push
imul
xchg
sub
cmpsb
cmp
ja
adc
loope
fiadds
add
jo
inc
mov
jp
pop
dec
push
outsl
push
sbb
sub
jg
pop
and
sub
lods
sub
cmp
dec
in
xchg
adc
add
daa
xor
mov
sbb
cmpsb
into
movsb
add
inc
jbe
adc
cltd
sarb
ds
adc
adc
add
and
movsb
jbe
repz
add
xchg
xchg
sbb
adc
push
or
shrb
mov
imul
fmul
jb
aam
rorb
lock
enter
movsb
mov
mov
sar
sbbb
xor
pop
and
sbb
cmp
lahf
add
adc
sbb
add
jne
jmp
lods
mov
jo
jae
inc
push
outsl
add
repnz
jg
sub
mov
sbb
dec
sahf
push
stos
loopne
sbb
call
xor
insl
ljmp
inc
sbb
mov
xchg
mov
pusha
sarb
call
add
mov
push
movsl
add
pop
popl
xchg
sahf
aam
pop
scas
pop
into
clc
add
xor
stc
shrb
push
int3
or
mov
inc
add
dec
inc
das
mov
sub
sbb
scas
mov
punpckhdq
jns
add
mov
add
push
inc
lods
jecxz
xor
out
dec
aas
aam
inc
mov
and
xchg
loopne
insb
testb
in
mov
mov
int3
mov
lods
add
out
adc
add
cmp
dec
outsl
mov
sbb
lds
xchg
into
add
or
pop
lahf
lods
outsl
add
mov
jle
add
outsl
ja
mov
inc
sahf
xor
inc
insb
addr16
add
push
and
mov
imul
data16
aas
movsl
mov
mov
inc
mov
push
pop
pop
mov
jmp
fmul
ljmp
xchg
mov
call
inc
xchg
or
xchg
and
pop
fsubs
fcoml
jne
icebp
add
leave
movsl
sbb
test
add
sub
orl
lods
xor
daa
add
movsl
sub
or
add
es
inc
jne
cmpsl
mov
movsl
add
add
ja
dec
push
sbb
out
adc
repz
push
inc
sub
jmp
insb
inc
mov
sub
xchg
adc
and
mov
cmpsb
sbb
not
jno
stos
mov
push
jbe
fistpl
mov
or
push
sbb
pop
add
push
fmull
push
xor
jo
scas
add
jl
jo
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
incb
clc
push
xor
je
jbe
push
js
jp
jl
jle
pop
je
add
sbb
xor
popf
aad
add
xor
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
and
inc
push
dec
lock
pop
pop
call
xor
clc
popf
cld
movsl
clc
mov
mov
ret
cld
leave
cld
jecxz
ljmp
or
adc
pop
inc
xor
cmpsl
dec
pop
cmpsl
fimull
movb
add
loopne
cmp
jb
sbb
cmp
aas
add
pop
pop
arpl
jb
jns
fwait
rorl
mov
aas
add
sub
xor
sub
icebp
mov
ret
leave
lret
inc
iret
cli
dec
inc
add
cwtl
push
rorb
sub
jb
inc
je
jbe
js
jp
lea
pushf
daa
mov
dec
shll
call
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fbstp
repz
push
dec
push
cmp
cmp
test
xor
cs
inc
add
and
add
cmp
jp
sub
je
jbe
js
mov
push
add
lea
xchg
test
add
inc
daa
dec
inc
push
or
jae
add
add
xor
cld
xor
js
xchg
call
add
inc
dec
movsb
mov
ret
xor
dec
xorl
add
dec
cmp
je
jbe
sarb
jp
jl
test
cmp
popf
daa
sbb
push
inc
lahf
dec
pop
push
xchg
push
pop
dec
cmp
jno
jns
andl
lea
fwait
loopne
leave
mov
out
dec
loopne
add
loope
cmp
es
cs
lret
xchg
push
repnz
xchg
iret
mov
or
sub
icebp
cmpl
cmp
jecxz
lock
addl
shll
fldcw
add
icebp
cmp
xor
jp
adcb
lcall
cmp
ds
cmp
jg
ljmp
add
or
add
dec
xor
jle
inc
fwait
dec
stos
push
mov
push
jb
jp
xor
jle
add
mov
mov
ret
rcl
loop
ljmp
cld
or
dec
adc
sub
ja
sbb
inc
daa
test
pop
mov
in
jb
repnz
xchg
xchg
mov
stos
shll
in
clc
inc
cmp
addb
xor
inc
xchg
cmp
mov
sbb
jo
js
cmpb
nop
add
mov
jb
je
jbe
js
add
in
xchg
or
repz
maskmovq
testl
mov
adc
xlat
sti
daa
push
inc
in
dec
push
sbb
pusha
inc
push
sbb
stc
mov
mov
pop
mov
lahf
rcrb
call
add
xor
leave
adc
add
fldenv
loope
jmp
stc
inc
orb
pop
inc
aas
jb
je
jbe
js
jp
jl
jle
jle
jle
add
enter
fdivs
lock
test
add
adc
sldt
mov
shrb
adc
jo
je
fcoms
mov
vmread
jl
jle
jle
jle
jle
dec
loopne
jle
call
xor
xchg
sub
lahf
add
pop
cmp
inc
mov
js
addb
dec
ljmp
mov
fcoml
jmp
out
mov
xor
incl
mov
ret
cmp
inc
leave
sbb
dec
stc
dec
adcb
mov
nop
in
call
mov
popf
lods
pop
mov
ljmp
iret
lock
cmp
add
fmull
ss
or
mov
scas
pop
inc
dec
inc
stos
xchg
push
in
and
pusha
xchg
gs
jae
mov
iret
lods
iret
mov
mov
mov
cmp
aaa
and
adc
adc
dec
and
inc
fldenv
movsl
insb
stc
jl
jl
out
out
out
out
andb
sbb
sub
dec
cli
xchg
lods
ds
enter
jl
or
or
adc
sbb
js
jp
add
leave
cmp
mov
shll
je
js
jl
cmp
stc
cwtl
stc
mov
add
pop
int3
mov
aam
fcom
fdivl
xor
clc
jo
and
and
add
int3
jne,pt
adc
lcall
mov
and
push
inc
outsl
sbb
fsubl
push
xchg
in
call
shl
add
and
test
xor
xor
loopne
test
jb
cwtl
pop
jbe
js
inc
pusha
mov
xchg
xchg
inc
sbb
test
rclb
mov
xchg
inc
sbb
add
cld
dec
cld
jb
je
jbe
push
pop
pusha
lahf
adc
cmpsb
mov
lods
iret
mov
mov
mov
pop
dec
movb
mov
enter
cmp
jo
rcll
testb
sub
sbb
loopne
in
add
cmpsb
in
stos
lock
xchg
push
push
pop
mov
mov
xchg
movb
popf
sbb
cmp
inc
in
sti
nop
mov
daa
lret
sub
push
loop
add
mov
cmp
call
aaa
aas
xchg
movsl
mov
daa
test
inc
add
mov
loope
mov
in
xchg
inc
jne
jns
add
inc
jl
jle
dec
add
cltd
leave
popf
or
movsl
sub
sbb
xorb
push
sysexit
decb
mov
mov
jg
add
fiaddl
xchg
aaa
ja
push
inc
cli
in
std
call
add
cmpsl
js
jp
cmp
sbbb
xchg
mov
add
lods
scas
adc
mov
mov
cmp
xchg
cmp
rcl
jecxz
push
xor
push
dec
xchg
pop
mov
jo
jl
jle
push
clc
mov
nop
cmpl
push
cmp
sub
out
popf
test
or
loop
pop
rorb
xchg
xor
daa
scas
inc
mov
or
rorl
inc
jecxz
mov
jmp
add
adc
dec
iret
jbe
xcrypt-ecb
cmpsl
dec
mov
shlb
add
jb
je
dec
roll
movsb
or
mov
dec
iret
arpl
cmp
pop
xor
jae
adc
cmp
cmp
mov
adcl
dec
xchg
nop
push
jl
leave
cmp
mov
jle
inc
std
sbb
cmp
sbb
push
lahf
lods
pop
or
out
adc
add
add
cs
popa
in
inc
mov
cmp
das
daa
jns
adc
lahf
xchg
mov
add
ljmp
pusha
mov
std
lock
xor
pop
adc
pop
in
sbb
jle
das
add
inc
cs
sbb
lahf
push
popf
arpl
xchg
test
mov
mov
flds
adc
sbb
inc
and
xchg
orb
lods
loope
push
and
pop
nop
inc
lret
jnp
add
ss
psrld
pushf
cmp
repz
andb
pop
dec
outsl
cmpsl
cmpsb
mov
ret
or
add
xchg
daa
mov
rolb
mov
dec
cmpsb
push
cli
jbe
add
adc
das
mov
sbb
sti
leave
dec
sarl
pop
loope
jmp
dec
les
ror
fnop
loope
call
push
sub
or
or
bswap
adc
sbb
adc
out
in
jg
push
test
cmpsl
add
pop
and
jge
push
je
sub
lret
add
xor
dec
rorb
sub
fadd
cmp
call
rorl
add
or
inc
cwtl
sbb
sbb
jno
push
sahf
xor
xor
cmp
inc
mov
adc
loope
push
cmp
xchg
dec
pop
lcall
push
rclb
int3
test
fsub
inc
movsb
in
mov
or
or
adc
push
sbb
sub
xor
test
repz
repnz
leave
lods
push
push
jle
add
pop
cmp
add
xor
stc
int3
cli
les
imul
jno
dec
jg
popf
inc
fadd
jmp
sub
cmp
xor
add
mov
pop
call
lock
clc
mov
jb
je
dec
mov
and
mov
pop
loope
jmp
testb
mov
loopne
sub
add
iret
push
leave
pop
shrl
jnp
xchg
add
mov
mov
add
dec
femms
sub
leave
add
movl
pop
shlb
mov
rcll
xchg
mov
xor
dec
testl
sbb
sub
xlat
in
add
xchg
out
add
sbb
aaa
test
test
cmp
mov
clc
cmp
and
or
push
mov
pop
loopne
xor
xchg
pop
jp
push
call
xchg
sbb
xchg
movsl
lods
mov
insl
cmp
sti
add
push
mov
inc
push
jl
adc
add
out
sub
pop
in
add
fwait
in
stos
lock
hlt
ljmp
xor
add
shrb
push
or
inc
imul
pop
add
pop
jne
pusha
into
pusha
scas
ss
es
fldl
push
test
add
push
dec
lar
xlat
ss
xchg
add
mov
jne
sbb
sbb
movl
cmp
subb
in
and
add
jb
je
add
sbb
cmp
dec
loop
add
iret
testb
aas
xlat
inc
andl
pop
orb
xor
ss
fstpt
dec
aas
push
dec
pop
mov
jle
mov
xchg
test
xchg
hlt
adc
pushf
and
jl
sbb
sub
xchg
dec
sbb
cmp
pushf
cmp
in
je
xchg
subb
dec
jno
ds
cmp
mov
inc
lcall
lock
mov
and
lods
stos
pop
dec
enter
add
xchg
lcall
dec
call
mov
add
test
or
addr16
xor
add
jbe
loope
jmp
add
or
clc
sbb
lock
add
jge
in
psubsb
arpl
or
pushf
dec
stos
subb
in
jl
in
add
addb
adcb
cwtl
test
pop
xchg
cmpsl
dec
mov
push
push
mov
pop
rorb
mov
je
pop
mov
sbbl
jmp
push
add
pop
fdivl
push
cli
and
sar
sub
cwtl
pop
xor
add
mov
jl
clc
test
push
rcll
push
movsb
jb
pop
lods
shll
sarb
in
jle
pop
pop
hlt
cmovno
aam
cmp
or
adc
or
pusha
les
add
pop
mov
and
les
je
mov
inc
add
push
call
rolb
adcb
enter
add
int
inc
add
and
add
into
inc
mov
add
int
push
jb
and
dec
dec
add
repz
hlt
lock
xor
pushf
xor
xor
imul
add
mov
mov
ret
aaa
cmp
mov
xchg
cmp
pop
cmp
and
jle
leave
fcmovnbe
out
andb
inc
imul
add
or
add
addr16
es
add
imul
fdivl
out
ljmp
adc
sbb
xor
add
rolb
xor
in
call
add
hlt
imul
in
test
je
sti
and
add
and
xor
incl
test
push
and
loopne
roll
mov
rorb
and
xchg
sub
rolb
je
jp
mov
jle
add
pushf
lock
mov
add
push
push
cmp
dec
pop
mov
shrb
movsl
push
push
adc
dec
dec
ficomps
push
clc
inc
jp
pop
bound
mov
out
pusha
das
cmp
call
je
pop
add
adc
or
jno
jo
lahf
push
iret
test
xor
rcll
mov
pop
hlt
xor
popa
cs
movsb
cmp
insl
mov
add
push
sub
shr
add
add
cmp
dec
add
jbe
inc
daa
push
dec
add
jnp
rclb
out
ret
push
mov
cmp
pop
add
pop
daa
pop
inc
insl
xor
leave
add
push
xor
pop
pop
add
mov
cmp
mov
and
pop
test
cld
cmp
cmp
push
xchg
cmp
xchg
cmpsb
daa
stos
dec
ficomps
inc
mov
shll
push
jg
icebp
pop
mov
les
enter
inc
andps
sbb
mov
cld
jb
mov
pop
into
lahf
and
add
lock
call
and
push
xchg
push
and
fisttpl
leave
mov
push
imul
ret
xchg
pop
mov
dec
add
cmpsl
dec
cld
out
pop
cmp
push
adc
add
mov
into
mov
lods
pop
test
push
faddl
xchg
inc
xor
dec
in
idivb
imul
shrb
aas
jg
cwtl
rcrb
mov
mov
add
xor
pop
lock
shlb
sbb
push
out
add
jbe
shll
adc
dec
xor
and
loopne
add
jb
pop
mov
jo
out
add
inc
dec
sar
stc
aaa
add
inc
cmp
lds
sbb
inc
daa
aam
movsl
add
mov
and
stos
add
aam
sarl
repnz
xorl
pop
cmpsl
nop
mov
mov
sub
push
cld
cmp
cmp
incb
add
pop
lods
repnz
outsl
jg,pt
add
sarl
xor
gs
sub
mov
ja
pop
add
xor
sbb
add
pop
in
out
xor
add
sbb
fcoms
mov
scas
popf
iret
adc
icebp
add
push
jle
push
je
add
js
jp
dec
les
push
loope
mov
stc
xchg
insb
fsubr
mov
pusha
dec
scas
pop
shl
loop
cmp
xor
cmp
jnp
dec
shl
shll
jl
mov
lahf
movsb
xchg
push
test
pop
mov
cmpb
in
add
sub
je
jbe
add
or
shrb
jl
add
nop
cmp
xchg
cmp
add
imul
adc
sarb
mov
add
dec
popf
inc
pop
xor
loope
sub
rorb
or
nopl
xor
and
sub
add
cmpsl
in
jae
pop
and
and
xchg
sar
clc
test
inc
pop
mov
push
cmp
push
cmp
push
cmp
add
enter
xor
sbb
mov
hlt
xchg
cld
ret
mov
push
add
je
adc
or
and
adc
call
push
add
pop
loopne
nop
lcall
sarb
or
xor
fsubrs
sti
pop
mov
add
mov
push
adc
jnp
add
push
pusha
cltd
or
xor
and
mov
mov
mov
or
sbb
cmp
mov
jb
cmp
push
xorb
or
int
loope
repnz
loopne
add
shll
push
sbb
arpl
pop
lds
add
inc
and
sub
add
cmp
and
cmpl
rcll
bsf
dec
sbb
push
cli
cmpb
xchg
repnz
sub
ds
pushf
inc
add
fwait
push
add
movsb
cmpsb
rcrb
add
loopne
xor
lret
pusha
xor
xchg
test
int3
xchg
adc
movsl
popf
pop
sub
das
aas
mov
lock
pop
shr
push
add
mov
mov
cmp
pop
add
lock
cmp
or
mov
pop
cs
and
mov
push
lods
lock
fs
add
imul
orb
ret
pop
sbbb
pop
adc
loopne
sti
ja
dec
lcall
jp
cmpsb
jl
jle
pop
or
adc
lcall
push
cs
scas
add
inc
and
cwtl
or
jmp
insb
call
dec
mov
loopne
inc
add
and
pop
lock
insb
add
cmp
iret
mov
sarl
push
sbb
je
orb
add
xchg
jl
sahf
out
in
loop
jle
in
mov
cmp
add
daa
push
rorl
enter
jle
in
cmp
pop
xchg
sbb
fadd
and
mov
push
jl
or
mov
cmp
je
cmp
add
or
jecxz
xchg
jmp
out
jbe
pop
sbb
lahf
sti
movsb
fildl
add
add
jl
push
lret
xlat
inc
dec
addr16
xchg
ja
jge
add
xchg
repnz
lock
pop
lret
movsb
cmc
push
jo
or
add
popf
sub
add
imul
jae
ja
dec
jnp
add
jmp
call
jb
je
jbe
inc
rolb
and
inc
in
adc
mov
imul
push
int
cwtl
xor
push
xchg
dec
adc
ja
cmp
popf
repz
lods
xchg
or
aad
add
and
add
jbe
js
jp
dec
add
xchg
lret
xchg
mov
leave
mov
add
cli
mov
mov
insl
sbb
or
ljmp
and
xchg
and
js
aas
rcll
sbb
jg
add
cmp
push
cmp
push
add
fs
dec
add
mov
dec
lret
ja
lock
xlat
pop
cmpsl
xor
out
cs
in
repnz
pop
aas
sbb
cmp
fs
jmp
sbb
jbe
inc
in
and
dec
rolb
cmp
cmp
or
dec
popa
xchg
or
movsbl
push
dec
pop
shr
xchg
cmpsl
sub
repnz
xor
push
add
iret
push
sahf
xlat
clc
add
call
push
add
push
jp
dec
xor
add
inc
loope
pop
stc
mov
xchg
rcrl
inc
mov
add
inc
clc
mov
sbb
mov
inc
add
je
adc
add
push
imul
movsb
inc
push
add
sub
mov
sub
push
xchg
mov
add
icebp
add
aas
pop
xchg
test
mov
push
rorb
mov
xor
imul
test
cmp
fiadds
and
add
and
mov
js
or
cmp
pop
pop
mov
cmp
cld
push
add
je
pop
push
lcall
inc
sbbl
ret
enter
mov
add
and
adc
loope
in
pop
xchg
dec
inc
pop
popa
pop
jno
jns
xchg
xchg
in
lcall
mov
addl
ds
push
mov
fs
pop
fists
lret
pop
xor
sub
ret
pusha
ror
jb
je
and
dec
dec
ret
loop
pmaxub
adc
xchg
add
in
in
mov
add
pop
pop
mov
sahf
aas
xor
js
pop
add
int3
shl
div
or
push
mov
adc
sub
add
and
jmp
push
push
aaa
add
jmp
scas
mov
cmp
nop
daa
mov
or
enter
pop
lds
rclb
leave
andb
shrl
jle
adc
rcrb
dec
xchg
fnstenv
sub
test
add
jl
stos
aas
jecxz
in
and
add
add
or
movsl
hlt
fiaddl
fnstsw
mov
fnstenv
popl
iretw
jl
mov
dec
jge
aas
pop
mov
scas
test
ret
mov
andl
mov
cmpb
adc
mov
mov
xchg
test
add
cmp
cmp
add
mov
mov
add
call
add
addr16
pusha
loope
cmp
add
sarb
add
xchg
jge
ret
or
in
outsb
jp
add
rclb
jle
popl
mov
out
jns
cmp
dec
out
sahf
push
add
adcb
hlt
mov
add
push
roll
add
icebp
clc
cs
mov
pop
lock
add
and
add
in
cs
add
xor
mov
fdivl
dec
out
sbb
jae
xor
pop
cmp
and
push
mov
lock
decb
and
dec
mov
jbe
mov
scas
mov
repnz
in
or
ljmp
jp
cmp
insb
aas
call
in
repnz
aas
subb
xchg
arpl
clc
add
cmp
aam
outsb
mov
nop
jg
sti
stc
add
jl
or
aaa
and
vmread
mov
enter
lcall
inc
add
xchg
sbb
cmp
ds
add
push
jecxz
repz
pop
lea
stos
lret
mov
mov
leave
stos
in
cld
addb
cmp
inc
cmp
and
sub
movsb
pop
cmp
arpl
insl
add
and
push
or
add
push
adc
pop
mov
cwtl
add
lcall
add
fsub
sub
cmp
ljmp
fs
aaa
in
adc
mov
sub
sub
stc
out
nop
sti
clc
or
add
adcl
ret
dec
add
push
loop
fcompl
pop
pop
add
std
jno
add
xchg
xchg
jl
cmp
add
dec
jae
sub
icebp
add
lret
add
jecxz
and
add
add
shll
cmp
loopne
es
and
cmp
pop
add
lods
mov
leave
adc
mov
sbb
cmp
fidivrs
add
pop
push
xor
loopne
mov
mov
add
or
adcb
cmp
dec
mov
out
cmp
add
loope
push
cmp
push
inc
mov
push
pop
lea
mov
aas
lock
fcmove
in
repz
add
mov
xor
setne
push
sbb
xor
popf
fiaddl
adc
dec
aam
mov
leave
add
enter
fcompl
sbb
enter
add
ret
xor
add
jl
jge
sbb
cmp
xchg
ds
aas
cltd
leave
popf
shll
call
shr
stc
mov
jb
dec
jl
incb
mov
lea
cmp
inc
add
js
dec
repz
cld
addr16
pop
or
inc
push
repnz
fs
and
jb
mov
add
cmp
and
into
stos
or
fimuls
inc
out
lods
push
out
addb
daa
xor
popf
pop
test
or
aaa
xchg
loopne
ret
aam
push
cmp
repnz
insb
fiadds
push
sub
pop
into
adcl
mov
ret
sbb
dec
aas
add
fwait
pop
and
add
mov
lods
int3
jo
loopne
les
lods
je
jbe
add
xchg
fldenv
push
sbb
roll
cmp
jmp
out
cld
pusha
aas
mul
sti
call
xor
push
mov
add
js
pop
xor
test
dec
nop
sarb
cmp
xchg
daa
loope
mov
mov
jmp
inc
push
push
add
jno
add
cld
dec
adc
push
cld
lret
mov
inc
loopne
pop
xor
cmp
daa
sub
pop
push
xor
fs
inc
pop
jo
je
js
lcall
test
add
jo
xor
and
mov
aaa
add
fcmovb
or
mov
insl
xorl
cmp
pusha
jb
loopne
dec
xchg
pop
adc
push
push
insl
cmp
addl
and
dec
and
sub
call
sub
mov
jle
add
add
adc
pop
xchg
faddl
repnz
push
call
xchg
dec
pop
jl
lock
outsl
subl
clc
ret
je
stos
cmp
popf
ja
add
jb
pop
cmp
aad
lock
jle
in
call
cmc
ret
sub
incb
add
add
mov
pop
pusha
ret
jmp
cld
push
add
push
sbb
aas
inc
movsb
das
push
cmp
mov
or
add
jb
pop
cmp
inc
cli
xor
in
pop
xor
aam
lock
in
add
stc
xor
sarl
fldcw
push
add
jnp
inc
dec
add
add
cmpsb
mov
add
pop
cmp
clc
jmp
mov
les
call
and
dec
sub
xor
scas
jmp
cwtl
inc
mov
out
in
icebp
xor
add
push
add
add
or
dec
sbb
inc
fisubrl
clc
lock
jb
adc
and
sub
iret
das
add
flds
cmp
mov
add
cwtl
call
add
and
push
inc
mov
fs
sbb
or
xor
out
mov
outsb
ljmp
jl
pop
jbe
js
push
ret
mov
adc
pop
cmpl
cmpb
add
push
lret
jne
rolb
or
test
add
and
dec
sub
inc
iret
push
add
jge
adc
sub
not
rcr
aas
or
rcrl
je
outsb
and
ret
jle
and
mov
push
rcrb
jo
pop
insl
add
in
and
dec
pop
clc
push
loopne
mov
hlt
leave
add
popf
je
push
rolb
mov
imul
je
jbe
push
mov
pop
icebp
ret
inc
sbb
dec
in
loopne
popf
jo
and
lcall
add
nop
push
adc
dec
repnz
or
add
cs
daa
inc
add
data16
xchg
sarb
add
test
daa
roll
cmp
jnp
xchg
inc
lahf
lods
dec
and
adc
test
cmp
cwtl
pop
add
lea
sbb
stos
mov
sbb
je
rcrb
add
subb
jb
loope
add
xchg
daa
cltd
fs
int3
adcl
push
add
push
adc
sbb
popa
ds
imul
push
mov
mov
mov
ffreep
pop
jle
sbb
add
adc
int3
aaa
hlt
add
mov
push
aas
imul
test
mov
or
pop
push
scas
jle
sbb
dec
sub
dec
add
sahf
pushf
adc
sbb
push
popa
sar
ds
out
add
fsubs
xor
cwtl
lock
add
dec
adc
das
call
int3
js
xorb
es
fiaddl
add
or
sbb
sarl
dec
and
stc
scas
popf
mov
fdivp
cmc
adc
jl
add
mov
je
jbe
js
jns
cmp
icebp
add
push
mov
push
in
add
hlt
jnp
lock
mov
add
fnstcw
add
mov
pusha
fisubrs
hlt
cmp
mov
or
dec
pop
sbb
mov
mov
sub
pop
or
xor
jmp
dec
mov
add
in
dec
cmp
xchg
ret
shlb
lock
add
mov
pop
jle
add
xchg
xor
movl
sbb
adc
push
rcrb
lods
mov
enter
sbb
fimull
pop
lcall
or
lods
inc
sbb
fdivrs
dec
jnp
push
sub
repnz
push
add
jo
cmp
ret
cmp
dec
aas
mov
cmp
clc
mov
mov
cmp
popf
ss
inc
mov
add
fcoms
xor
sahf
add
inc
insl
enter
mov
popa
dec
add
shll
cmp
fisttps
scas
call
sahf
or
test
cmp
xchg
adc
mov
adc
test
loopne
pop
mov
shrb
add
ret
loope
nop
in
mov
mov
pop
leave
xchg
aad
loopne
je
adc
out
lcall
cmp
add
jp
add
xor
xchg
add
cmp
popf
push
add
ret
xchg
add
loopne
add
adc
js
jp
dec
push
pop
jo
jle
repnz
bswap
loop
test
pop
mov
xor
ss
and
fists
clc
cld
aam
sbb
xchg
sub
inc
jle
in
pop
arpl
outsl
nop
xchg
mov
mulb
pushf
rcll
adc
add
mov
sub
xchg
add
mov
insb
mov
jl
xchg
pushf
out
repnz
pop
rclb
pop
adc
pop
mov
addl
data16
add
push
lahf
push
xchg
loopne
mov
pop
dec
test
insb
and
cmove
js
jl
dec
dec
clc
loop
in
std
lcall
cld
js
pop
lret
pushf
and
inc
or
sbb
and
adc
shlb
cmp
xor
cmp
leave
mov
pop
nop
out
aas
sets
pushf
test
movsb
jmp
mov
dec
and
push
loope
dec
repz
jmp
insb
bound
add
das
movsb
inc
add
mov
montmul
cmpsb
lret
int3
add
adc
jl
lock
push
mov
ret
insb
mov
pop
nop
repnz
andl
push
cmp
in
cmpb
and
test
cmc
movsb
jg
jmp
in
adc
pop
outsl
add
leave
aam
into
pop
add
sub
xchg
in
lock
iret
sbbb
fs
lret
xchg
jl
jo
adc
add
jnp
mov
pop
mov
cmp
push
and
call
gs
fs
nop
lea
cmp
cmpb
sub
pop
das
or
inc
daa
sub
add
push
mov
loope
pusha
add
xchg
mov
inc
mov
fs
add
sub
jge
ret
testl
push
mov
jmp
adc
xchg
nop
pop
cs
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
xor
rol
add
add
pop
or
hlt
add
dec
adc
adc
nop
mov
test
pop
and
cltd
sub
ret
add
orb
or
add
xchg
mov
lea
add
sysexit
test
inc
and
mov
add
push
push
sbb
cltd
or
push
ljmp
sub
cltd
add
inc
add
loopne
sbb
mov
add
push
pop
pushl
mov
push
add
add
mov
cmpb
fisttpl
leave
add
js
scas
add
fisttpll
shr
in
cmp
add
in
sub
add
add
dec
jge
dec
loopne
sbb
pop
bound
stc
add
rep
lea
loope
sahf
cli
pop
add
mov
fwait
cmp
cmpb
or
test
jg
aam
lcall
ja
add
sbb
shlb
ret
call
mov
mov
cmpsb
jle
push
sub
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
stos
shlb
pop
jnp
inc
jl
js
pop
and
sbb
add
out
push
and
add
lods
push
adc
add
jmp
push
xchg
dec
leave
inc
adc
flds
and
cmp
add
adc
das
add
into
mov
roll
ret
xchg
sbb
lea
mov
push
lods
roll
fcoml
mov
out
add
in
or
xor
xchg
dec
add
fcom
and
or
pop
push
xchg
ret
inc
add
xchg
cmp
pop
pusha
je
jl
pop
dec
shrl
pop
and
add
clc
rorl
and
imul
add
sarb
neg
push
mov
add
popf
enter
and
dec
xlat
jp
inc
fnstsw
movsb
mov
pop
in
popa
add
mov
clc
pop
inc
dec
popf
add
imul
mov
cmp
sub
sbb
cmp
pop
aas
inc
mov
out
pushf
sti
jle
cmp
add
insl
and
mov
add
js
add
pop
out
and
repnz
and
das
cli
or
ljmp
push
out
inc
rolb
jle
or
add
gs
pop
int
cmp
add
adc
sti
inc
in
es
mov
movsb
in
cmpsb
mov
cmp
or
ljmp
pop
xor
xchg
add
mov
jge
jmp
test
and
add
jno
mov
cli
adc
and
xor
inc
aas
test
clc
jl
and
fnstcw
fldl
mov
dec
push
xchg
hlt
add
daa
stos
aas
pop
mov
sub
clc
add
jg
hlt
mov
incb
xchg
addb
push
add
dec
movsb
in
mov
ljmp
pop
pop
sub
xor
mov
lea
mov
lret
add
dec
cld
or
aas
mov
add
popf
es
jnp
dec
aam
cmp
cmp
aas
add
imul
jecxz
xor
jnp
xchg
and
inc
jbe
icebp
pop
add
xlat
in
mov
cwtl
out
add
add
loopne
mov
mov
mov
jge
mov
int
stc
dec
into
cmp
inc
mov
push
push
in
fs
add
mov
rcr
add
rcll
call
insl
sub
pop
xor
rolb
fstl
repnz
add
and
add
lods
dec
nop
jno
add
push
inc
xlat
inc
sub
or
emms
jmp
pop
xor
jnp
cwtl
cmpsb
sub
int3
mov
stc
jbe
out
mov
imul
scas
aam
add
movsb
or
inc
test
lret
xlat
pop
mov
jno
add
push
iret
fcomps
pop
xor
jb
sub
push
decb
add
or
xor
jmp
jge
inc
shl
ror
test
or
xchg
and
ja
rcrb
and
xchg
imul
push
add
test
jnp
outsb
mov
dec
xchg
pop
fiaddl
pop
jae
sbb
jp
cmp
nop
outsb
add
dec
lds
in
mov
cmp
push
mov
add
sub
rolb
sub
jg
cmp
mov
jmp
and
sub
sub
ret
push
lcall
jge
jbe
rolb
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
rclb
sub
add
movsb
pop
jmp
dec
shl
inc
mov
call
xor
jae
nop
push
add
inc
inc
lock
dec
sub
nop
push
roll
adc
leave
add
call
roll
aad
sbb
out
minps
mov
popa
add
jo
loope
mov
jnp
add
pop
push
imul
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
mov
shlb
outsb
je
adc
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
jb
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
or
add
lcall
in
mov
les
xchg
sub
mov
mov
fs
rclb
bound
ss
pop
popf
cmpsb
cltd
int
aam
dec
xchg
scas
enter
sbb
mov
mov
ljmp
orb
cmpsl
cmp
inc
outsl
or
pop
aad
movsb
les
fbld
jne
loop
sub
imul
push
sbb
fsubs
lret
repz
test
mov
dec
jg
jg
loopne
jmp
fdivrl
xor
inc
mov
push
dec
push
ret
inc
ds
mov
pop
rcll
out
jle
jp
imul
sahf
shrl
jb
out
fidivrl
iret
jmp
lret
aas
mov
xor
loopne
mov
adc
dec
test
cmpsl
cmpsb
push
mov
addb
bound
ret
outsb
push
je
popa
arpl
adc
cmp
and
sbb
lods
add
sub
dec
push
push
dec
pushf
inc
decl
xor
or
sbb
in
jns
nop
mov
sbb
inc
icebp
adc
out
push
add
dec
movsl
push
ds
jecxz
fimuls
in
push
movl
in
mov
push
sbb
pop
xor
or
xor
push
dec
inc
add
scas
or
or
jnp
adc
xchg
je
scas
mov
mov
push
pop
in
in
fnsave
or
rclb
add
sbb
xchg
xchg
ds
jg
push
pusha
fistl
cld
inc
sbb
pop
xor
jmp
push
mov
inc
mov
aam
jb
and
mov
pop
mov
jmp
in
add
ret
dec
xor
fimull
add
mov
mov
das
mov
mov
inc
mov
rclb
mov
lods
inc
aas
lock
cmp
movsl
pop
out
aas
dec
ljmp
dec
pop
cld
shrl
cmp
and
es
iret
add
and
lds
mov
shrb
adc
or
sbb
shl
mov
sbb
jo
test
pop
mov
add
mov
sub
or
in
and
pop
fmul
cwtl
lret
mov
imul
mov
mov
dec
adc
arpl
mov
xchg
pushf
jge
outsb
movsb
dec
add
dec
mov
pop
enter
cmp
mov
xchg
pop
adc
mov
and
test
fs
mov
lret
test
xchg
ja
out
out
inc
push
add
test
pop
lcall
imul
sbb
fnsave
or
push
outsb
arpl
in
push
movsb
add
hlt
out
xchg
cmp
dec
xchg
in
dec
dec
in
sub
xchg
sbb
mov
inc
popa
ret
dec
cltd
not
in
push
fwait
movsb
stc
mov
rcrb
dec
fstpt
cmpl
mull
push
inc
cwtl
mov
push
repz
popl
movsl
fcoml
push
xorb
inc
sbb
je
enter
push
out
lds
mov
mov
jg
sub
sub
sti
sbbl
jecxz
xor
xor
enter
push
fcmovnb
xchg
mov
popf
mov
push
add
add
push
rorb
cwtl
push
ficompl
mov
pop
mov
inc
mov
push
mov
xchg
outsb
lcall
pop
mov
jl
dec
and
jg
sti
and
cs
cmp
gs
or
popf
xlat
jecxz
xchg
fdiv
add
aad
loope
dec
out
cmp
xchg
xor
push
sbb
push
rcl
jbe
jns
mov
mov
sbb
cmp
cmp
ljmp
mov
dec
jge
lods
cmp
xor
fucompp
fcmovnbe
je
fsubs
mov
inc
mov
ret
inc
sbb
movsb
dec
cmpsb
enter
in
xchg
stos
out
and
xor
mov
xchg
xchg
rorb
dec
mov
mov
out
lea
shll
fwait
xorl
mov
xchg
das
and
sarb
jp
ret
sbb
mov
iret
sub
xchg
sub
fucomp
xor
rolb
out
pop
cmp
jp
cmpsl
dec
push
mov
mov
push
jmp
mov
mov
or
or
xchg
add
cli
mov
jns
adc
fmul
call
test
push
sub
sbb
in
or
hlt
fldl
push
push
add
and
mov
fs
int
mov
subb
mov
and
addl
insl
sub
std
ds
xor
adc
lret
inc
int
imul
std
inc
fwait
leave
or
jp
jne
mov
pop
out
mov
push
mov
ja
ret
mov
lods
xchg
ret
mov
or
ss
jmp
or
jbe
mov
xor
jbe
mov
push
imul
sub
or
daa
push
scas
sbb
and
notb
adc
lods
adc
lds
or
sbb
mov
adc
pop
push
dec
jns
mov
bound
lcall
lods
sbb
cmp
push
dec
subb
je
xchg
scas
rcrb
repz
test
push
fsubl
push
in
push
fs
pop
dec
push
mov
outsb
lcall
out
aaa
push
and
push
or
out
pop
jnp
stos
mov
sub
push
jp
inc
xchg
rcll
jle
rorl
push
dec
leave
pop
xchg
push
adc
dec
xlat
xchg
cmp
pop
icebp
test
lahf
push
int
pop
sbb
add
pusha
test
ss
pop
adc
pop
es
fsubrl
pop
rolb
cld
lock
rolb
paddd
lcall
jge
jae
inc
ss
out
loope
pop
movsb
je
mov
loopne
adc
jecxz
shll
outsl
push
add
mov
nop
push
out
xchg
push
xchg
std
test
ja
jns
mov
dec
imul
ljmp
add
int
in
cmp
test
rolb
call
jge
in
mov
cwtl
dec
pop
cs
or
xchg
adc
push
sahf
je
out
repz
shll
mov
lds
pop
gs
xchg
mov
sbb
in
jmp
or
test
and
in
lahf
jmp
clc
ret
das
popf
fstpt
adc
inc
pusha
push
stos
mov
push
push
js
inc
sub
inc
fimull
jb
and
cld
rcll
mov
arpl
sub
xchg
cmp
hlt
arpl
cmp
xchg
ds
jbe
inc
packsswb
rcrl
xchg
imul
mov
mov
sbb
sbb
dec
inc
cmpsb
enter
movsb
dec
sahf
inc
hlt
jp
mov
or
push
jno
test
push
xchg
cmp
mov
mov
cmp
imul
pop
jns
inc
pop
call
stos
pop
scas
dec
or
imul
aaa
test
iret
lcall
into
jnp
cmp
mov
lock
push
or
push
jnp
scas
nop
call
bnd
pushf
clc
movsb
pop
lods
out
or
pop
mov
es
fdivrs
lds
mov
mov
fistps
and
pop
push
pop
test
iret
or
je
mov
add
mov
add
enter
lock
inc
sbb
arpl
push
ret
in
int
mov
lods
sub
aaa
ja
pop
jp
adc
les
shll
lods
sbb
mov
push
xor
int
mov
cmc
mov
adc
hlt
xchg
mov
mov
int
aam
sbb
scas
push
add
test
clc
int3
sbb
nop
fmuls
inc
push
je
stc
add
pop
inc
sbb
xlat
mov
pop
imul
jge
jmp
cwtl
fnsave
xlat
lahf
adc
mov
jo
loope
mov
push
jnp
or
mov
popa
stos
pop
mov
xlat
je
mov
loope
sub
cwtl
mov
sub
cld
push
jg
aas
cltd
or
addps
xchg
adc
call
sbb
jmp
sub
movsl
mov
lods
jo
xchg
adc
inc
jge
add
pop
dec
repnz
sbb
sbb
enter
sbb
std
ja
movsl
pavgw
mov
adc
pop
icebp
lds
adcb
loopne
and
scas
mov
rcr
dec
inc
or
or
lods
push
inc
jge
xor
or
mov
dec
lcall
inc
mull
xor
adc
pop
and
cmp
xor
leave
leave
or
dec
test
inc
fisubl
jecxz
add
fs
xchg
mov
cmp
mov
cmp
movsl
xor
negb
pusha
sahf
sub
rorb
and
pusha
adc
je
scas
add
jne
and
ljmp
mov
loopne
sahf
cmp
lret
mov
cmpsb
pop
add
mov
mov
aaa
push
inc
cmp
sbb
aam
gs
in
inc
aas
setge
jo
hlt
add
push
xor
xor
sbb
sub
mov
jne
fwait
js
jbe
enter
outsl
mov
stos
addr16
add
or
ret
adc
xlat
xor
iret
sbb
outsl
test
cli
xor
mov
mov
mov
pop
rcll
andb
jnp
in
or
addl
mov
or
xchg
out
mov
mov
cmp
cmp
push
shlb
sub
out
xchg
fs
test
arpl
fwait
arpl
insb
mov
add
andb
pop
ljmp
dec
pop
daa
test
push
aad
enter
outsl
add
sbb
push
dec
xchg
into
mov
rorl
fidivl
xor
or
xor
int
sub
push
jns
rclb
aaa
adc
lock
sbb
sarb
add
popw
pop
jae
or
cwtl
das
daa
xchg
pop
xor
push
shrb
andb
js
adc
sub
lock
mov
and
fisttpl
or
cld
xor
faddp
pop
jecxz
xchg
gs
mov
shrl
dec
dec
inc
outsb
mov
sbb
jo
jb
leave
out
sub
xchg
sbb
jp
shr
push
pop
push
call
hlt
pop
sbb
scas
shlb
fwait
es
dec
fdivrs
lcall
cs
mov
and
add
fisttpll
sahf
pop
jge
lret
or
inc
mov
loope
mov
in
sbbl
mov
cmp
ljmp
loop
testl
fdivp
inc
enter
jae
xchg
sbb
sahf
ret
ljmp
fs
pop
jge
outsb
movl
mov
mov
xchg
dec
test
ds
jle
adc
insb
fiaddl
mov
das
add
mov
add
jb
and
jle
mov
mov
mov
cmc
fimull
dec
in
mov
call
mov
js
push
popf
hlt
andb
fmull
jmp
je
xlat
sbb
jns
out
les
insb
int3
and
fs
shll
dec
or
add
test
xchg
xor
clc
seto
movl
fistpl
sbb
mov
xchg
push
mov
add
cmpb
inc
fnstenv
pop
xchg
and
mov
dec
xchg
jmp
pop
inc
test
outsl
int3
mov
es
sub
jmp
and
jne
or
pop
xor
lcall
mov
mov
mov
dec
popf
and
xchg
in
repnz
mov
lss
inc
xor
jp
pop
iret
push
push
shrb
and
push
dec
in
xchg
cs
fisubrs
mov
or
mov
xchg
adc
push
out
add
out
ret
dec
lea
enter
imul
mov
pusha
out
adc
jno
mov
sub
mov
aad
mov
lahf
xor
pusha
inc
push
cmp
flds
lea
or
jnp
xor
jnp
mov
mov
loope
sbb
lret
jne
pop
adc
repz
mov
pop
add
push
sahf
popa
inc
lods
call
jbe
imul
lods
mov
mov
sarb
xor
cmp
rcrb
or
cmp
pop
test
fmull
pop
push
mov
xor
sub
add
pop
or
lret
pop
ja
xor
cmp
jno
pop
add
or
call
cmp
data16
jb
dec
or
xor
das
sbb
inc
mov
or
scas
cmp
xchg
out
sti
add
mov
or
pop
popw
mov
inc
cmp
xchg
jb
cmp
pop
ret
js
dec
pushf
dec
imul
adc
cld
pop
insl
insl
dec
enter
test
cmp
and
push
pop
es
add
jge
sbb
push
loop
scas
imull
xchg
pop
addl
addb
add
cmpb
mov
cld
idiv
call
in
or
add
or
lods
and
mov
mov
fidivrl
aad
stos
mov
insl
dec
dec
rcrb
movsb
div
test
dec
dec
mov
loope
push
cli
xlat
das
mov
pop
mov
or
hlt
or
xchg
mov
sbb
movsb
jp
sarb
xor
popa
outsl
mov
rcrb
xchg
pop
adcl
push
pop
js
cltd
mov
jg
and
daa
int
jae
mov
hlt
pusha
or
dec
call
sub
ret
je
outsb
imul
jbe
adc
adc
xchg
test
cmp
inc
sahf
sbb
sub
push
sbb
add
roll
xor
ljmp
jl
cwtl
cltd
xor
mov
mov
loopne
fisubl
test
push
mov
fisttps
clc
cmp
mov
and
dec
pusha
stos
roll
adc
adc
inc
pop
xchg
cmc
sub
cltd
aas
stos
xchg
push
xchg
nop
gs
mov
and
add
sar
sub
std
pusha
push
fcmovbe
push
jmp
mov
and
xor
out
push
ljmp
test
cmp
lods
clc
data16
dec
fdiv
sahf
imul
fwait
aas
xchg
mov
std
sub
sub
xchg
lock
mov
push
je
pop
mov
sub
mov
scas
in
mov
movb
xor
jp
push
mov
scas
inc
or
sub
push
aam
insl
pop
add
dec
jae
mov
imul
gs
test
subb
xchg
dec
inc
popf
fildl
addb
arpl
adc
scas
inc
vmread
adc
cmp
xor
sub
pop
jns
sbb
scas
push
aaa
insb
fsubs
sbb
jne
or
aad
popa
mov
mov
pop
sbb
and
mov
sub
adc
cmp
insl
imul
add
adc
cmp
pop
cmp
or
pop
notl
out
std
add
pop
cmp
cmp
push
sub
ja
cli
cmpsl
lea
push
sti
or
cmpsl
std
dec
jnp
cmc
loope
or
ds
sub
cmp
pushf
dec
cmp
adc
sbb
mov
mov
imul
mov
imul
xor
xlat
das
sbb
sub
and
inc
pop
shl
test
inc
adc
fsub
fwait
pop
pushf
xor
and
add
jno
add
mov
into
bound
pop
roll
sar
fistl
out
ljmp
test
rol
inc
leave
movsb
sub
je
adc
jno
shr
or
fs
lret
movsl
repnz
addr16
cmpsl
pop
ss
lock
dec
mov
xchg
cmpsl
test
mov
mov
xchg
addb
cmp
out
xor
lock
repnz
adc
pop
test
mov
das
pop
jecxz
mov
rcrl
cmpsl
dec
mulb
xor
mov
lahf
mov
inc
jno
insl
popa
cmp
fildll
and
sti
sub
bnd
mov
nop
mov
adc
mov
scas
andb
stc
scas
clc
fwait
xchg
ret
adc
inc
cmp
pop
js
js
cmp
pusha
inc
lret
sub
into
lcall
mov
xor
inc
js
add
add
jno
cmp
dec
je
ret
fnstcw
mov
jbe
scas
out
pusha
sbb
data16
loopne
test
push
lahf
add
add
nop
movsb
xchg
dec
leave
mull
ss
fsts
xor
shlb
sub
mov
adc
mov
dec
sub
pop
jl
dec
pusha
lds
inc
cmp
pusha
clc
lcall
outsb
pushf
lea
mov
xor
out
scas
pop
dec
inc
cmp
loopne
ja
inc
test
js
in
jmp
or
mov
clc
bound
lods
icebp
pop
movsl
and
and
loope
cmp
pop
out
ret
fmul
jl
push
rolb
push
push
cmpsb
jg
push
and
mov
adc
shll
xchg
cmc
mov
pop
mov
aas
push
jnp
stos
push
repnz
fs
repnz
shrl
pop
je
xor
push
out
sbb
mov
iret
cld
out
mov
test
mov
shlb
mov
jno
cmpsl
mov
scas
fsubrl
in
inc
pop
pop
mov
mov
xchg
ret
xor
paddusb
movsl
ror
pop
repz
xchg
cmpl
inc
int
pop
movl
mov
cmp
sahf
std
das
jb
xchg
xor
xor
lcall
dec
clc
and
push
push
sbb
cld
es
fstpt
jne
stc
mov
cmp
adc
sub
lahf
mov
jo
push
inc
or
dec
fisttpl
test
jle
test
pop
mov
and
jno
push
push
imul
das
inc
cwtl
dec
icebp
mov
jp
cmp
and
in
sub
mov
dec
sbb
rol
mov
into
sahf
ja
lret
dec
mov
in
mov
aaa
roll
jmp
xchg
xor
push
mov
or
add
pushf
movsl
out
cmp
inc
pop
xor
incl
pop
add
lea
pop
adc
das
fisubrs
iret
jl
ret
lock
lret
xor
cld
lods
lahf
jge
mov
pop
inc
cmp
int
and
fisubs
xchg
mov
sub
adc
in
cmpsb
mov
or
fwait
push
sbb
shrl
push
inc
int3
push
mov
push
loop
adc
push
pop
xchg
aas
cmp
popa
add
pusha
add
daa
ret
inc
aad
jne
push
aad
lret
mov
cmp
add
out
cmp
dec
sbb
cmc
fs
sub
in
sub
mov
outsb
out
lds
enter
jmp
imulb
mov
xchg
popf
mov
cli
sub
sbb
and
std
jle
std
or
and
mov
shrb
imul
push
mov
add
pop
adc
pop
arpl
mov
push
insl
pop
jae
call
gs
js
jmp
mov
in
fiaddl
out
xchg
pusha
sbb
cmc
data16
lods
stc
arpl
mov
inc
sbb
int3
gs
or
mov
into
xorl
outsb
je
push
les
sti
mov
movsb
xlat
and
fildl
jbe
pop
push
inc
in
ljmp
les
and
xor
adc
add
not
mov
jle
mov
data16
and
add
dec
cmpsl
xor
adc
cmc
neg
insb
out
mov
xor
mov
mov
ret
sbb
in
inc
mov
out
xor
xor
scas
cmp
insb
aad
fsub
insb
loop
sub
loop
insb
mov
mov
das
xor
fistpll
adc
sar
fistpl
cs
dec
pop
sub
xor
mov
repz
cmpsl
outsb
insl
or
roll
or
stos
cli
adc
xor
test
xor
les
cmp
js
pop
adc
test
in
ljmp
xlat
jmp
adc
xchg
divl
sub
mov
cld
ljmp
sub
adc
push
cmp
adc
lea
pop
pushf
and
jmp
subl
push
scas
pop
enter
repz
insl
push
push
test
shrb
div
jp
jp
adc
fs
daa
rol
and
fimull
cmpsb
rorb
pop
pop
sbb
pop
out
add
push
in
daa
movsb
mov
xor
adc
mov
jnp
inc
orl
add
cmp
fsub
jge
outsl
loopne
jmp
xor
aad
dec
movsl
lret
mov
mov
into
dec
cmp
pushw
test
out
pop
mov
loopne
cmp
mov
sahf
dec
imul
ss
out
and
and
sti
pop
das
pop
cmc
xor
xchg
rorl
push
push
imul
xor
movsl
lods
sbb
pusha
push
cmp
dec
cwtl
inc
scas
mov
and
frstor
loope
and
inc
sbb
or
mov
out
xor
jmp
popf
jp
arpl
mov
out
flds
int
mov
outsl
lret
stos
addr16
sub
cmp
out
stc
adc
add
xchg
pop
mov
sbb
jns,pt
test
bound
push
mov
push
mov
insl
cmp
pop
mov
inc
aas
inc
sub
cmp
inc
leave
nop
outsl
cld
loope
fsts
imul
sub
fisubl
rcr
std
dec
js
sbb
mov
adc
and
mov
push
sub
in
xchg
roll
andb
dec
std
shlb
mov
addb
dec
push
cld
or
mov
outsb
push
mov
adc
test
mov
arpl
movsb
dec
bound
hlt
jp
rcr
xchg
and
inc
test
daa
in
out
mov
xor
and
cld
mov
xor
mov
repz
push
out
out
popa
arpl
or
jns
punpckhdq
inc
cmp
dec
cltd
enter
push
jb
mov
call
mov
fistl
imul
sub
sub
and
inc
pop
mov
flds
stos
sub
fdiv
and
mov
pop
xor
push
pop
popf
insb
lea
mov
sub
pop
daa
jbe
sub
movsl
cli
mov
xchg
nop
je
mov
cmp
popf
out
dec
das
inc
jge
lahf
xchg
mov
pop
sub
sub
sahf
mov
mov
repnz
cld
out
mov
mov
and
rcl
dec
mov
xor
dec
add
jb
cmp
pop
mov
int3
mov
dec
in
mov
loopne
pop
lcall
ds
rcr
sbb
aam
idiv
sbb
lds
cs
mov
lods
test
add
int
popf
out
shrl
lret
pop
pop
hlt
mov
add
cmp
shlb
test
arpl
lds
cmp
ret
test
push
push
push
loopne
or
movsl
cli
cmp
xchg
push
mov
icebp
push
lock
dec
sbb
push
xlat
es
cmpsl
sbb
sub
in
add
mov
dec
xor
inc
call
mov
push
xor
shr
xorb
sarl
mov
inc
or
sbb
fs
cwtl
xchg
ror
sbb
sub
dec
mov
insb
js
std
sbb
cmp
test
sbbb
add
jge
mov
mov
mov
pop
cmp
nop
into
imul
scas
dec
test
pop
mov
mov
inc
mov
adc
loope
mov
maskmovq
or
mov
mov
push
iret
pop
test
sbb
ljmp
mov
add
cmpsb
movl
or
sub
loop
mov
inc
fwait
ds
xor
sub
xorb
rcrl
mov
insb
std
dec
leave
vmovss
push
or
push
sbb
sbb
mov
lods
jnp
or
push
ds
stc
jnp
xchg
test
pop
icebp
dec
dec
push
leave
jne
cmp
iret
lret
or
cmp
int3
dec
mov
push
sub
push
pusha
cs
aam
mov
dec
test
cld
aaa
xchg
imul
pushf
inc
imul
loope
xor
push
leave
icebp
ret
push
idivb
sarl
sub
flds
dec
and
nop
aad
imul
out
xchg
cwtl
cli
aam
rcrl
leave
dec
mov
popa
mov
mov
shrd
outsb
sti
movsb
mov
cmpsl
dec
lret
inc
push
push
out
mov
pusha
mov
sub
sbb
xchg
jge
dec
adc
ds
dec
dec
cltd
inc
sbb
dec
out
add
cltd
lods
mov
mov
insb
in
jno
arpl
push
shl
cmpsb
or
and
dec
mov
mov
cmp
fbld
lods
or
ljmp
cld
dec
push
fldcw
xor
cmpsb
aam
cmp
adc
dec
push
pop
imul
cmpsl
loop
ja
mov
push
outsl
add
in
push
call
xchg
jp
out
popa
inc
jle
mov
dec
xchg
imulb
xor
mov
popa
xor
jmp
fstl
daa
imulb
pop
aad
lods
jo
jp
xlat
sub
xor
add
push
imul
mov
je
ret
cmp
fdivrl
ret
stos
in
pop
cmp
std
rclb
frstor
std
cwtl
inc
adc
add
xchg
mov
sub
lret
jo
mov
pop
stos
pop
test
dec
fs
push
ja
cmp
push
orl
adcb
push
and
cmp
je
clc
xchg
push
repz
push
iret
loopne
xor
hlt
imul
adc
cld
inc
push
in
and
xchg
stc
pop
mov
jno
lods
adc
lret
mov
pop
roll
inc
test
xchg
cmp
frstor
sbb
movsl
jg
dec
cmc
lahf
aad
sahf
jne
jg
rcrl
stc
cltd
fistps
inc
jb
sub
dec
fwait
sub
into
dec
mov
je
sub
fmuls
sub
mov
jmp
mov
sub
lods
xchg
mov
sub
cmp
xlat
ret
mov
add
ja
repnz
dec
cwtl
test
hlt
clc
mov
sub
jb
in
push
add
test
jg
movsb
ljmp
in
and
rcrl
fcmovne
or
imul
cmp
or
or
dec
ljmp
clc
scas
adc
mov
in
aaa
cwtl
xchg
jg
rcrl
push
notl
dec
cmp
pop
stc
pop
ret
push
push
mov
pop
int
inc
or
xor
lea
push
les
jne
dec
lahf
inc
popa
popa
pop
pushf
dec
adc
aad
fnstenv
bound
test
xor
add
sub
mov
adc
xchg
push
adc
pop
add
into
lea
mov
mov
or
test
sbb
pushf
jge
inc
sub
add
push
xchg
sarb
cmc
jno
loop
mov
cmc
je
pushf
xchg
mov
in
fbld
push
mov
ret
mov
jnp
add
sub
mov
mov
dec
and
fwait
rcrb
movsb
push
clc
fdivrs
or
and
xchg
or
adc
shrb
mov
adc
push
leave
gs
aaa
xor
iret
sub
rol
cmp
inc
adc
adc
mov
sub
xor
stos
pop
inc
mov
iret
mov
loopne
shrb
lock
stos
adc
cmc
mov
xchg
ja
daa
adc
adcb
xchg
dec
jmp
inc
hlt
lods
icebp
adc
jle
ss
test
pop
fbld
and
ret
dec
inc
lock
add
scas
fs
xlat
mov
das
sarb
cmp
or
pop
mov
jbe
sbb
cmp
xchg
call
shlb
jg
cmpsl
outsb
mov
push
out
loope
mov
mov
sbb
push
popa
lret
pop
pop
pop
xchg
inc
xor
repnz
jge
leave
cmp
das
xchg
leave
jmp
cltd
cmpsl
jge
mov
xchg
inc
loope
push
mov
mov
or
jae
inc
in
jno
push
aam
lods
and
dec
cmp
inc
ds
lahf
mov
cs
cwtl
and
cs
inc
ret
lahf
ja
fldenv
push
out
out
xor
add
or
adc
andb
stc
jmp
rcr
fmuls
push
or
mov
int
popa
in
rorl
jecxz
dec
aas
sti
mov
sbb
add
mov
push
mov
mov
mov
lret
jmp
dec
push
pushf
outsb
fadd
xor
rcrl
roll
and
clc
cmp
cmp
and
add
sbbl
push
mov
mov
addr16
lea
xchg
jmp
adc
mov
pop
popa
adc
pop
sub
negb
xor
insl
sarb
addr16
jle
fldenv
scas
add
mov
or
adc
inc
imull
cmp
repz
pop
pop
bound
lcall
mov
cli
jmp
insl
cltd
das
and
pop
cmp
inc
sete
xlat
rcll
cmpsl
popf
xor
fisttpll
data16
out
jae
in
clc
mov
lds
rcr
adc
lods
decb
stos
cmpl
iret
inc
into
insl
mov
stos
cmp
popa
fwait
loop
add
je
pop
cmp
mov
push
insb
push
lds
test
insl
jnp
adc
iret
and
leave
xchg
adc
je
mov
mov
cmp
ljmp
mov
pop
repz
jg
push
cmp
mov
mov
pop
push
ss
outsl
out
scas
call
sar
sbb
or
push
das
fistl
out
dec
cltd
fstpl
push
icebp
outsl
jbe
enter
test
fmuls
mov
cmp
xchg
mov
shrl
push
aad
scas
arpl
jbe
mov
xlat
mov
dec
ja
mov
pop
stc
mov
pushl
lahf
dec
int
jmp
push
lds
outsb
subb
adc
push
in
push
pop
sbb
and
jo
mov
sarb
mov
rorb
xchg
inc
pop
cmp
sbb
ficoms
shlb
push
push
lock
test
sub
rorb
test
push
pop
lahf
or
and
mov
popa
sarb
std
mov
testl
and
lock
mov
dec
test
push
xchg
mov
push
lock
cmpsl
inc
or
fidivs
fld
outsl
mov
pop
sub
and
je
mov
and
and
imul
fistpl
les
and
movl
bound
fsub
fadd
stos
cmpl
test
lock
or
hlt
push
inc
ja
or
addb
push
insb
nop
mov
pop
data16
sbb
push
sbb
push
or
jmp
pop
movsb
scas
xchg
lahf
mov
or
add
or
jmp
jmp
adc
jns
xchg
repnz
stos
std
in
jge
xchg
imul
test
out
jecxz
sti
jae
outsl
jo
add
or
cmpl
test
pop
adc
rcll
xchg
das
mov
es
in
and
jp
add
xchg
icebp
call
mov
xchg
out
jp
mov
aad
nop
dec
jecxz
pushf
jge
xchg
les
sbb
mov
jmp
or
mov
mov
and
test
nop/reserved
popa
inc
cmpsl
jecxz
sbb
out
push
jnp
mov
mov
sbb
scas
ret
sbb
sbb
pop
das
sahf
arpl
pop
jp
rcrb
lods
stc
sub
xchg
xchg
inc
jle
je
pop
ds
mov
cmpsl
movsb
fsubr
cwtl
sbb
mov
test
push
gs
sahf
outsw
adc
jns
pop
stc
add
iret
xor
or
sbb
stos
xchg
negl
mov
or
sbb
lods
dec
cltd
fcoml
incb
lds
jbe
inc
sub
sbb
push
fnstcw
jns
ret
scas
inc
add
mov
pop
or
mov
push
cmp
sbb
push
ss
mov
lcall
ss
jge
movsl
into
repz
outsl
add
push
shl
add
jecxz
in
shlb
mov
mov
sub
pop
pop
pop
dec
das
cmp
jno
add
or
jmp
lods
stos
inc
dec
addl
sbbb
lcall
js
test
je
jns
call
jge
xlat
out
fsubr
pop
jo
mov
lock
pop
cmpl
xchg
fcmovbe
push
adc
subl
push
shr
fcoml
mov
ss
mov
xchg
imul
sbb
and
test
in
ja
fdivrl
dec
add
xor
jl
adc
mov
add
inc
sbb
add
imul
inc
loop
cmp
xchg
iret
inc
repnz
scas
inc
jnp
mov
mov
mov
shlb
sahf
leave
sub
das
call
repz
outsl
call
cmp
fnop
jae
je
xlat
fimull
iret
xor
mov
orl
movsb
push
mov
ss
pop
cwtl
pop
out
movsl
cmp
cmp
xor
xchg
lret
imull
jne
and
pop
fcoml
jo
sbb
imul
in
mov
mov
adc
xor
lods
jl
adc
or
pop
inc
sbb
mov
rorl
xchg
dec
push
xchg
inc
push
cli
pop
lret
cld
sbb
xchg
fcomip
cmpsl
mov
jne
inc
stos
xlat
shl
int3
xchg
push
adc
int3
out
push
mov
pop
add
aad
repnz
mov
ret
inc
imul
push
and
test
test
shll
les
xchg
scas
xor
xchg
pop
ds
add
and
sub
or
outsb
sbbl
addl
rorl
cmpsb
inc
out
inc
pop
lock
dec
movsb
nop
cli
jg
dec
jl
sbb
mov
stos
pop
mov
sarl
push
test
xchg
mov
out
sbb
mov
cmp
ds
insb
int
mov
mov
xchg
adc
bound
ss
xor
scas
push
das
inc
pop
aad
rcrb
jecxz
icebp
repz
js
dec
jbe
call
sbb
rorb
mov
js
xor
outsb
jmp
mov
jbe
jb
add
xchg
repnz
inc
std
ss
push
scas
lock
inc
test
push
sub
sub
cli
mov
fildll
mov
pop
sub
stos
mov
push
pop
inc
inc
ret
push
iret
xor
xchg
or
adc
add
xor
jg
dec
repz
pushf
push
mov
xlat
push
jmp
jno
pop
inc
fdiv
or
fisttpll
xchg
mov
enter
xchg
jnp
dec
mov
push
push
jmp
push
mov
pusha
push
inc
mov
aas
mov
shrl
cmp
jge
in
cmp
xor
into
jle
lods
movsl
xor
xor
mov
gs
pop
test
add
fsub
xchg
inc
xchg
int
stos
fisttpl
xchg
out
cli
test
test
arpl
add
cld
loop
inc
add
sub
sub
add
push
sbb
xchg
or
dec
add
xchg
push
push
push
inc
sub
dec
mov
pusha
mov
je
fiadds
push
xchg
push
add
lcall
pop
cli
xor
sbb
or
mov
adc
scas
jns
imul
jbe
add
inc
sti
les
cmp
out
lret
add
cmc
test
repz
xchg
das
jb
push
scas
jmp
arpl
xchg
xor
imul
pop
cmp
dec
js
call
mov
xchg
and
xchg
mov
sar
ret
jns
mov
loope
mov
mov
pop
mov
outsl
mov
je
xchg
in
sahf
aam
outsb
aam
push
xor
scas
dec
push
xor
inc
inc
xorl
xlat
mov
js
ret
ja
jl
js
push
cli
xor
mov
inc
cmp
add
out
adc
cmpsl
pop
cwtl
cli
xchg
jae
or
faddp
or
push
sbb
mov
int
call
nop
icebp
into
dec
adc
js
adc
mov
dec
jne
sbb
sbb
push
rclb
lods
dec
push
mov
insl
vrcpss
pop
jns
mov
inc
jecxz
push
popf
mov
sub
sbb
daa
jo
adc
and
mov
fsubrl
xor
push
push
jmp
movsl
cmp
test
sti
aam
ljmp
jl
ficompl
hlt
sub
mov
inc
dec
jg
mov
mov
fwait
outsb
mov
xor
out
and
pop
jg
sbb
lcall
xchg
xchg
imul
cltd
jo
dec
xchg
leave
add
int
int3
and
mov
pusha
std
test
jae
cmpsb
or
dec
ds
mul
je
or
or
das
decl
or
movsl
pop
mov
inc
inc
add
lods
xchg
push
inc
gs
sti
lods
in
mov
lods
movsb
inc
dec
aas
mov
sbbb
test
add
sti
adc
adc
and
ds
inc
stos
xor
clc
jbe
imul
out
push
jg
xchg
shll
push
push
push
xor
mov
popl
push
pusha
aad
push
call
mov
inc
add
or
fldenv
lock
sti
rcll
adc
stos
xor
or
data16
out
movsb
ds
inc
clc
adc
into
outsl
adc
mov
sbb
add
testb
push
mov
or
cmp
jle
out
add
mov
push
mov
shl
int3
stc
fsts
pop
mov
adc
les
mov
aas
into
push
lcall
es
enter
dec
lds
pop
insl
inc
cmp
sbb
and
and
int3
incb
pop
lahf
cmc
addl
shll
clc
popa
das
inc
imul
out
inc
fwait
mov
adc
mov
inc
lods
insl
cmp
xchg
cmp
add
int
jp
ja
dec
pushl
push
out
mov
push
leave
adc
negl
scas
pop
lret
cmp
xchg
fnstcw
in
mov
inc
imul
push
leave
inc
mov
orl
out
sbb
repnz
je
in
pop
inc
pusha
int
clc
fisubrl
mov
push
test
jecxz
cld
push
mov
mov
mov
iret
push
xchg
mov
cmpsb
inc
imul
movsb
mov
xchg
push
and
xor
jecxz
fidivl
push
out
loopne
push
iret
ds
jb
aaa
sub
cmp
push
push
mov
data16
rorb
addr16
cld
or
shl
and
push
cmp
movsb
sub
xchg
pop
pop
jae
pop
sar
decl
and
sbb
js
dec
sub
pop
outsb
fst
sub
fsubs
lret
pop
dec
jbe
and
leave
inc
movsl
xchg
repz
cwtl
test
pop
sub
sub
pop
sub
xor
push
mov
ja
scas
movsl
jbe
std
aam
lods
and
push
stos
das
outsl
fcomps
popf
dec
cld
cmp
sub
repnz
sti
repnz
cmp
fisubrs
sbb
lods
push
mov
inc
sub
dec
inc
mulb
int
mov
into
add
cmpsb
addr16
nop
cmp
sbb
rcll
std
dec
adc
fildll
test
dec
sarl
into
jb
ret
dec
xchg
bnd
popa
xchg
and
push
mov
push
das
pop
in
cmp
ss
loopne
shlb
pop
adc
mov
repnz
fmuls
mov
clc
and
dec
sub
rorl
mov
mov
lods
add
and
mov
arpl
jge
push
adc
orl
popa
leave
add
enter
sbb
jnp
and
dec
xor
fxch
in
sbb
hlt
cmp
dec
xchg
repz
add
add
negb
mov
out
daa
mov
shl
test
ss
lods
gs
popa
mov
scas
inc
jmp
add
sahf
pop
cmc
sub
mov
and
lods
inc
mov
mov
add
add
jle
xorb
sahf
iret
sub
pusha
dec
repz
xor
shll
mov
mov
mov
jp
push
mov
mov
fstps
scas
aad
mov
mov
loop
scas
rorl
pop
add
mov
push
popa
shrl
enter
inc
cwtl
pop
push
fstp
cmp
stos
cmpsb
mov
shll
movsl
jge
dec
lret
mov
lods
sub
mov
sarb
es
pop
mov
es
nop
pop
jmp
mov
xor
sbb
mov
sub
or
sbb
mov
mov
jg
leave
bound
push
fldl
mov
mov
ss
xchg
mov
mov
mov
jle
cmp
fcmove
and
hlt
cwtl
enter
mov
test
jae
jno
into
mov
outsb
hlt
pop
and
jnp
pushf
pop
out
stos
divl
or
xor
insb
or
repz
xor
pop
sbb
add
jo
pop
push
mov
xor
sbb
clc
mov
cmc
cmpsl
jo
lods
adc
fwait
adc
arpl
mov
mov
nop
xchg
mov
aad
inc
loopne
js
cmpsl
push
cli
dec
mov
cmp
in
pop
or
dec
lea
add
lods
hlt
in
jbe
inc
imul
filds
loop
das
and
enter
fadds
cmp
aas
into
jg
and
jnp
hlt
xchg
lods
xchg
push
movlps
push
aas
sbb
inc
xor
mov
inc
or
jl
mov
jno
mov
test
sbb
in
xchg
dec
push
mov
mov
mov
arpl
push
pop
lock
adcb
sti
movsb
dec
and
sub
pusha
ss
mov
sbb
push
push
jle
and
call
push
sbb
jnp
mov
cmp
dec
outsb
pop
iret
addr16
notb
leave
stc
cmc
cltd
push
mov
push
fs
sbb
jae
call
push
sub
push
or
push
pop
and
jae
lcall
pop
mov
fstpt
mov
pop
mov
mov
or
out
or
cltd
fwait
pop
pusha
mov
fxch
dec
lds
inc
filds
pop
xor
cmp
jge
mov
or
mov
stc
ficoms
pop
scas
les
cwtl
push
dec
xor
push
push
xorl
out
jo
cmp
daa
fs
cltd
lods
xor
pushf
or
int
lds
gs
pop
repz
jl
push
lea
adc
les
pop
leave
sbb
push
in
sahf
iret
leave
outsb
scas
mov
xchg
loope
or
dec
outsb
mov
push
stos
sub
mov
sbb
mov
sti
adc
fs
jp
adcl
cmpsl
insb
or
les
push
lret
pusha
jnp
add
cmp
xor
cli
xchg
rcr
das
fstps
dec
arpl
pop
stos
inc
xchg
jp
scas
ja
fucomp
add
sti
inc
ljmp
cmpsl
xor
ja
out
inc
jae
int3
mov
jecxz
sbb
js
lock
mov
cmc
divl
jbe
jnp
and
fcmovne
in
or
pop
jl
sbb
fwait
xchg
inc
mov
xchg
in
outsl
mov
adc
subb
cmp
dec
cmpsl
cmpsb
xchg
mov
lods
sbb
shlb
cmp
xchg
push
fdivl
push
dec
xor
pop
mov
mov
pop
cmp
inc
xchg
push
jg
pop
notl
pop
orl
mov
push
jge
sub
in
sarl
pop
nop
xor
adc
int
cltd
xchg
and
aad
std
rcrb
lret
mov
addr16
mov
xor
jmp
lods
dec
jnp
in
daa
ret
xor
dec
cld
mov
push
jmp
popa
fs
xor
sbb
js
negb
lea
out
lret
daa
and
loop
adc
push
cmp
orl
or
rorb
cmp
pop
divb
cmp
inc
add
xchg
jb
lahf
stos
sbb
subl
fsubr
xor
sti
jg
fwait
inc
inc
dec
dec
scas
sub
lods
and
cli
dec
notl
xor
and
and
mov
inc
inc
rorb
or
lcall
push
fldl
xor
or
bound
dec
jno
or
push
push
and
push
daa
out
pop
in
and
cs
lea
mov
adc
mov
jb,pt
bound
popf
jl
cld
mov
test
sub
pop
adc
test
test
cli
jp
ds
and
adc
or
sahf
pushf
adc
pop
xchg
dec
popa
or
push
ret
jl
stos
in
pop
lahf
adc
iret
lds
inc
aam
adc
cwtl
loope
mov
mov
dec
push
add
mov
xchg
cltd
inc
icebp
in
push
stc
mov
clc
mov
cli
sbb
xor
bound
addl
jnp
cltd
out
mov
in
lock
pop
mov
mov
dec
cmp
jecxz
dec
ret
inc
sub
jmp
pop
xchg
loop
inc
dec
incb
jbe
imul
addl
fisubl
clc
ds
mov
cld
ja
sub
imul
push
mov
pop
sbb
jecxz
xor
pop
cmp
xchg
fs
pop
and
xor
movsl
insl
rolb
insb
fiaddl
mov
in
adc
arpl
xor
xchg
pop
fistl
jmp
divl
add
stos
lcall
mov
mov
mov
rorl
clc
lods
rorl
test
lods
rorb
sub
rolb
mov
mov
xchg
sub
out
add
es
adc
pusha
push
adc
and
shl
gs
xchg
loope
push
cwtl
pop
mov
ds
xlat
mov
mov
add
xor
fdivs
sbb
js
inc
pop
jae
decb
cmp
sub
pop
or
movsb
pop
lods
and
push
js
mov
mov
clc
xchg
inc
and
fisubrl
cmp
and
add
std
sti
popa
ja
sbb
inc
mov
test
jg
push
stc
scas
xchg
add
cmpsb
dec
in
clc
daa
xchg
xor
lods
int
mov
or
in
ljmp
pop
push
shll
pushf
cmp
clc
push
adc
lcall
vmovsldup
cli
sbb
pop
sti
mov
sub
jmp
std
mov
push
in
in
inc
xchg
xor
lahf
lods
xchg
nop
xor
aaa
sbbl
aad
jg
mov
out
into
and
or
xchg
ljmp
dec
push
add
push
sbb
xchg
inc
pop
or
mov
or
popa
cmpsl
div
sub
dec
jno
sub
insl
cmc
ds
or
dec
add
dec
push
dec
sub
push
pop
or
sbb
mov
xchg
xchg
mov
movsl
pop
int3
sarl
xchg
cmp
sar
and
pusha
mov
jmp
jae
mov
test
lock
mov
lret
cmp
or
cmpsl
shlb
lods
movsl
int3
mov
cmp
push
lock
adc
pop
addl
notl
sub
test
xchg
mulb
xchg
push
insb
call
jnp
mov
and
xchg
aad
cmp
mov
ret
dec
jge
hlt
stos
lret
inc
ljmp
imul
cmpl
mov
push
loop
jae
repz
aas
sub
cmp
xchg
cwtl
sub
mov
mov
rorl
xchg
cmp
xchg
add
add
cmp
cmpsl
hlt
sub
pop
sbb
lret
sahf
or
inc
stc
adc
xor
popf
jbe
push
or
add
test
fsubr
mov
ja
int
jge
shr
or
test
cwtl
mov
dec
mov
jns
xchg
popf
movsb
stos
loope
inc
std
xchg
mov
add
cmp
xor
lds
mov
js
push
xchg
xor
int
dec
add
cmp
dec
rclb
sub
nop
scas
loop
jo
adc
ja
adc
test
push
pop
jno
add
leave
mov
addr16
xor
xor
outsb
les
sti
adc
sti
lahf
jno
test
scas
pop
pop
je
fsin
dec
daa
stc
xor
std
je
mov
sarb
xchg
fdivrs
outsl
cmp
cmp
push
out
xchg
bound
or
je
movsb
xor
mov
mov
pop
and
into
xchg
sub
xor
adc
cmpsl
dec
pusha
fwait
jb
in
out
jl
insl
adc
lods
sub
inc
xor
in
lods
cmp
pop
and
shlb
jg
pusha
cmp
adc
pusha
xor
fcompl
loopne
xchg
call
mov
jns
push
add
in
jne
repz
loopne
pop
inc
push
iret
cmp
cmp
pushf
jo
mov
jecxz
jg
pop
mov
sbb
aas
movsb
jnp
lods
cmp
jmp
lret
push
dec
pop
adc
dec
test
lds
mov
jno
mov
imul
dec
cwtl
pop
mov
stos
pop
insl
shll
mov
sub
adc
mov
and
ja
lock
xchg
in
fdivs
insb
dec
push
inc
push
or
inc
cmp
sti
push
bound
dec
into
inc
mov
dec
mov
hlt
pop
roll
add
mov
mov
push
aas
lea
mulb
iret
or
into
inc
scas
sub
xor
cmpsb
leave
loop
popf
jbe
rorl
imul
int
push
loopne
xor
loope
shr
jl
movsl
mov
lods
sub
scas
or
add
test
outsl
push
iret
pop
pusha
sub
cmpsl
leave
aad
pusha
and
sub
xor
rcrb
outsl
hlt
xor
notb
scas
push
ss
cltd
outsb
iret
cmp
shll
mov
jae
or
sbb
cmp
inc
xchg
fildl
les
call
sbb
xchg
movsl
and
fwait
mov
sub
pop
pop
mov
test
dec
test
or
out
sub
in
cmpsb
adc
sbb
xor
aas
and
cmp
lret
push
out
jns
jg
cltd
jg
adc
xlat
inc
into
fisubrl
fistpll
stos
xchg
pop
xchg
add
push
or
and
scas
lods
int
adc
fs
xchg
mov
mov
adc
or
mov
jg
sub
jle
inc
add
pop
dec
inc
mov
mov
and
mov
pop
cmc
out
aam
sbb
lock
sbb
pop
sub
add
in
sub
cmp
or
ss
sub
adc
shrl
cmp
pop
cltd
sbb
mulb
movsb
outsb
jae
shlb
sbb
aaa
ret
inc
dec
fidivs
adc
out
aas
fidivs
adc
xchg
and
aaa
dec
popa
add
ret
es
xlat
leave
dec
in
pop
xchg
sub
cmpsb
loop
dec
mov
adc
pop
nop
fidivl
int
push
cmc
lcall
in
fists
xlat
roll
cmpsb
xchg
out
and
adc
jns
xor
test
push
jl
enter
xchg
push
hlt
xor
test
addr16
sbb
pusha
hlt
adc
fcmove
dec
insb
lea
mov
mov
sbb
out
or
ja
stc
repz
mov
push
es
fbld
aam
mov
test
ja
jmp
and
loop
addl
xchg
xchg
mov
fs
push
int
fldt
mov
cmp
fcoml
xor
int3
xor
faddl
sarl
and
push
in
sub
pop
imul
add
xchg
jp
cli
ret
pop
xchg
xlat
or
popa
dec
fildll
mov
stos
dec
repz
sbb
je
data16
adc
xchg
mov
imull
outsb
pop
lret
aad
daa
rorb
mov
adc
xor
jb
out
add
push
sbb
in
fsincos
jge
push
ljmp
sub
call
push
dec
addb
out
xchg
push
xchg
mov
lea
jmp
add
jbe
mov
cmc
jns
insl
pop
pop
or
subl
push
cmpb
ficoml
and
int3
xor
lret
scas
lods
mov
imulb
mov
pop
rcrb
mov
out
add
and
and
cmp
das
test
je
lods
rclb
or
shr
lret
test
mov
jae
outsb
rcrb
jb
insb
ficoms
sub
push
or
lds
pop
pop
sub
push
jo
in
pushf
shrb
cmp
cwtl
imul
pop
add
popf
mov
xor
xchg
adc
sub
sbb
sbb
and
jp
adcl
xchg
cmpsl
push
mov
cmp
lahf
aad
cltd
mov
dec
dec
mov
shll
mov
cmp
mov
pop
leave
repnz
jg
iret
fisubrl
repz
stc
testl
std
inc
and
xchg
and
push
xchg
mov
mov
or
mov
inc
ja
fcmovnb
popf
int
out
push
mov
sbb
inc
push
mov
sub
hlt
add
pop
mov
ss
outsb
dec
mov
into
push
loope
int3
sub
xor
flds
inc
and
in
xor
inc
adc
enter
xor
bnd
fldt
lahf
sti
loopne
add
movsl
vmaxps
cmp
loopne
jbe
outsb
add
in
mov
imul
fadds
jle
inc
in
in
jo
std
fldenv
sbbl
pop
xor
mov
arpl
xchg
repnz
nop
jae
cmp
pop
ljmp
xchg
xor
xchg
mov
or
mov
xor
mov
mov
xorb
mov
out
shll
cmpsl
dec
adc
xchg
js
cmc
aas
clc
inc
sub
jae
push
jns
testb
xchg
movsb
mov
jbe
fistpll
shrb
add
jnp
xor
repz
mov
pop
xchg
loope
jns
jns
inc
mov
sbb
cmp
add
inc
adc
pushf
nop
inc
ja
out
inc
fildl
ljmp
or
ret
pop
dec
imul
repnz
push
fwait
jno
lock
xor
mov
lcall
mov
push
enter
rcrl
or
mov
in
add
xchg
dec
sub
insb
jp
pop
loop
popa
dec
cmp
nop
out
xlat
cltd
enter
xchg
call
and
xchg
sub
pop
sub
test
jo
repz
cmp
xor
mov
test
cmp
adc
push
xor
xor
adc
pop
lods
idivl
cmp
or
xor
add
insl
cld
dec
mov
jns
push
je
or
das
jns
ret
mov
sbb
or
movsb
stos
push
jbe
push
fdiv
into
cs
sub
stos
pop
nop
rcll
lret
pop
sub
popf
sub
stos
test
scas
push
mov
nop
ret
xchg
xor
cld
test
push
leave
mov
jp
addr16
mov
and
mov
jns
clc
lea
pop
dec
loop
call
pop
xor
mov
mov
and
addr16
jbe
pop
inc
loopne
aaa
dec
add
add
mov
pop
push
iret
cmpsl
das
add
inc
xchg
into
popa
movsl
addr16
sbb
fcomip
mov
pop
mov
in
fadd
cmp
jmp
push
imulb
and
rorb
mov
pop
inc
jmp
push
cwtl
data16
and
pop
dec
std
push
and
adc
adc
mov
aas
push
leave
sub
inc
pop
push
gs
les
in
aas
inc
jp
xchg
aaa
fisttpl
imul
push
dec
mov
xchg
faddl
cmpsb
push
push
inc
enter
insb
adc
insl
lods
jne
jmp
push
cmp
cltd
ss
sub
leave
jne
lea
mov
les
clc
insl
mov
call
test
mov
adc
jl
das
aaa
inc
mov
and
movd
xacquire
inc
in
or
and
xchg
and
dec
popf
ljmp
in
adc
subl
inc
add
jo
subb
sbb
pop
add
cmp
pop
jp
ljmp
mov
jnp
cmp
xchg
cmc
aas
out
aam
rcl
lods
push
sbb
scas
movsb
ds
jbe
sbb
jb
ds
mov
repz
out
shll
mov
pop
clc
mov
arpl
dec
arpl
jecxz
fs
jecxz
cli
mov
aas
xchg
jno
add
sbb
cli
add
mov
pop
addb
xorl
loope
mov
outsl
and
out
jb
das
xchg
adc
jle
lock
daa
into
nop
mov
out
pop
scas
dec
repnz
adc
xchg
sbb
test
push
push
or
jl
mov
out
scas
fcompl
and
xchg
jne
jmp
dec
or
pusha
popa
dec
rcll
xchg
stos
lods
cmp
pop
jo
adc
out
xlat
inc
adc
jecxz
imul
test
or
in
repnz
mov
cmp
in
dec
jo
inc
push
iret
outsl
lahf
ret
push
dec
imul
cmp
lds
pushf
test
cmp
mov
inc
mov
dec
shlb
inc
in
es
mov
pop
cmpsb
movsb
add
or
sbb
inc
orl
out
lods
ret
cld
div
call
xchg
sarl
mov
rcrb
xchg
enter
xchg
mov
and
pop
lods
mov
push
inc
daa
sub
jo
or
aas
repz
adc
ja
or
mov
inc
mov
pop
cmc
push
aad
add
adc
jo
jno
sbbb
push
sub
mov
insl
mov
push
shrl
inc
sti
ficomps
mov
mov
aam
cmp
pushl
or
cmp
lock
dec
negl
lret
adc
dec
cmp
add
jns
xchg
nop
pop
outsb
inc
movsb
jnp
sbb
and
mov
daa
imul
jno
cld
nop
cltd
enter
dec
in
jge
jg
imul
cs
jnp
idiv
dec
aad
mov
xchg
in
adc
dec
dec
mov
ss
push
or
and
sbb
mov
rcr
arpl
adcw
add
loopne
xchg
push
inc
ljmp
ror
xchg
pop
aam
mov
cmp
popa
cltd
cmp
pushf
es
add
inc
data16
xchg
xor
lret
pop
lret
jae
xchg
das
xchg
fcomi
lea
xorb
cmp
mov
divl
loopne
push
or
hlt
dec
stc
sbb
iret
shll
fisttpl
and
ja
dec
xor
sbb
and
lds
xor
pop
pop
dec
mov
mov
dec
pop
mov
inc
pop
and
mov
push
pop
popa
clc
je
jl
sbbl
inc
adc
and
iret
lcall
loop
int3
sub
cmp
mov
or
pop
pushl
insb
pop
lahf
popa
lods
mov
arpl
sub
add
loope
sbb
mov
mov
in
enter
out
fistl
iret
jns
bnd
jae
push
mov
mov
sahf
in
fdivrs
testl
das
outsl
push
jne
jbe
stos
es
stc
inc
notl
adc
ret
sahf
rcrb
jp
push
inc
adc
push
rorl
mov
ljmp
shrb
gs
fcom
pop
push
and
jne
rcll
push
es
lds
out
jb
jns
adc
ds
dec
in
jg,pt
and
pushf
lods
es
test
int3
fisubrl
mov
xchg
lret
into
pusha
sbb
xchg
or
xchg
leave
push
ret
push
fcmovne
movsl
xor
mov
mov
pop
pop
xor
xor
stos
pop
rolb
ds
mov
lahf
xor
mov
jno
pop
jg
insl
les
aam
pop
push
data16
rolb
mov
mov
xorl
js
aad
add
movsl
adc
xchg
sub
cmpl
xchg
clc
jp
gs
fidivrl
ret
or
test
sbb
xor
int
bswap
pop
js
xchg
das
or
imull
hlt
in
mov
test
cmp
cli
stos
or
xor
jmp
rolb
dec
outsb
xor
inc
xchg
aaa
sbb
mov
and
fcoml
push
inc
mov
fs
or
pushf
cwtl
push
sub
fwait
enter
pop
in
outsl
outsl
lcall
mov
test
clc
push
add
xchg
add
out
jecxz
xor
movsl
insl
jb
subb
in
push
sbbb
jne
sbb
mov
cmp
pop
cmpsb
xchg
adc
inc
inc
ds
loop
mov
xchg
ficoms
imul
arpl
fdivrs
dec
sbb
push
jb
xorl
rorl
inc
test
pushf
ss
sbb
jo
xor
lret
arpl
loop
in
adc
loopne
mov
roll
shlb
jp
add
mov
mov
out
mov
or
cmpsb
imul
pop
std
xchg
or
and
jp
mov
xchg
pop
repz
fdivrp
sub
fnstsw
mov
loope
and
mov
mov
ljmp
jl
out
movsl
dec
adc
and
pop
pusha
pop
mov
aas
enter
jae
int3
es
cld
sbb
lds
loopne
add
out
repz
lds
jbe
push
add
shll
in
dec
inc
or
stos
mov
xor
xor
aaa
mov
fmul
stos
sub
xchg
aad
mov
mov
in
in
into
add
jge
adc
into
fimuls
pusha
cld
sbb
lods
jmp
dec
outsl
inc
mov
mov
sbb
dec
scas
scas
jo
and
jge
sub
pop
pop
pop
jmp
shlb
insb
es
addr16
push
xlat
mov
xchg
push
fcmovb
fidivrs
sub
daa
lds
or
jle
ret
mov
xlat
mov
jne
pop
ss
push
pop
push
enter
nop
xchg
stos
mov
cs
test
orl
mov
xor
jg
adc
rcrb
lret
sub
jo
dec
cmpb
jnp
jb
lds
pop
fwait
sub
pop
adc
push
sbb
sbb
lods
std
icebp
mov
mov
mov
mov
add
dec
xor
pop
scas
aaa
or
leave
jmp
mov
inc
fwait
sti
push
and
clc
aam
xchg
ret
setle
test
sub
rclb
data16
mov
jmp
dec
xor
and
inc
test
test
cmp
std
cwtl
cmp
push
push
sub
movsl
sub
shlb
or
out
std
sub
aaa
jb
sub
adc
hlt
xchg
les
pop
clc
push
mov
lods
leave
imul
nop
je
or
jne
inc
mov
or
mov
je
loop
cwtl
popa
xor
lcall
inc
mov
add
je
xchg
mov
sbb
jle
insb
sub
stos
rol
sahf
cmc
rcll
add
jns
shl
or
add
fldcw
xchg
add
push
fists
bound
fbstp
push
imul
jns
add
mov
lahf
pop
mov
imul
roll
mov
lock
gs
jns
in
mov
dec
outsl
or
imul
cmpsb
jp
incl
ljmp
mov
pop
in
div
nop
sahf
pop
xchg
add
out
lret
cmp
and
push
mov
cmp
jno
or
push
mov
icebp
bound
test
jo
jbe
and
cmp
iret
test
adc
push
pusha
add
mov
mov
xlat
mov
in
ljmp
adc
and
rcrl
add
and
lcall
rorl
fs
add
inc
movsb
xor
int
or
push
out
pop
jmp
add
cmpsl
stos
scas
xchg
out
std
pusha
mov
mov
popl
sti
lret
movsb
dec
push
mov
and
sar
mov
cmp
cmc
or
std
shlw
repnz
xchg
push
inc
sub
mov
fs
in
aad
xor
addb
inc
andl
popa
divl
add
sbb
cli
add
jno
jge
pop
push
adc
xchg
xchg
push
sub
rcl
mov
lret
fs
aam
pop
mov
stos
nop
movl
icebp
pop
mov
je
adc
mov
jb
push
shr
insl
stos
pop
push
xor
xor
nop
sub
lea
clc
sti
mov
movsb
loope
pushf
mov
cld
test
cmp
add
test
ja
pop
ja
cmp
adc
sbb
in
adc
lock
and
pushf
push
push
or
adcb
rorb
inc
scas
adc
ljmp
or
jns
fidivl
repnz
jecxz
fwait
mov
mov
mov
call
rcrb
dec
popf
stc
lahf
mov
inc
push
mov
sub
out
sahf
cld
std
push
mov
mov
cli
jg
movsb
seto
mov
dec
xor
fdivl
xchg
cmp
xchg
jge
enter
imul
in
dec
push
adc
in
sub
and
add
xor
or
mov
cwtl
fs
aam
std
push
and
sarb
insb
sbb
scas
and
xor
repz
inc
loopne
mov
push
test
cmp
pop
in
ds
push
push
iret
sub
dec
jle
mov
clc
mov
cwtl
jmp
cltd
mov
lret
cmc
lahf
dec
xchg
cmp
jae
mov
jo
fidivl
jae
jnp
dec
jbe
es
inc
incb
jno
cmp
fildl
xor
or
push
cmp
or
loope
mov
out
stos
cmp
push
test
scas
mov
mov
popf
xchg
negb
inc
fwait
rorb
aaa
insb
scas
xchg
rclb
outsl
push
mov
sbb
arpl
inc
pop
push
leave
or
pop
add
and
nop
scas
ljmp
xchg
inc
push
enter
divb
mov
ret
aam
adc
dec
push
fdivp
mov
int
iret
lcall
push
cmp
adc
out
mov
ss
jo
repnz
lock
or
iret
dec
repz
mov
push
adc
or
xchg
loopne
jo
and
adcl
call
and
scas
je
das
popa
jnp
fidivrs
cmp
pop
icebp
loopne
in
lea
movsl
arpl
sahf
xor
cmp
mov
push
divb
and
dec
sub
adc
loop
cld
push
fsubrl
lds
cmc
xor
std
jp
dec
ja
jne
or
add
adc
jb
xor
mov
jl
fsubl
xlat
push
loope
in
cmp
ficoms
jnp
call
or
aam
lods
outsb
pop
cmp
adc
repnz
rcll
jecxz
push
popa
mov
add
push
push
pop
in
pop
jnp
in
lock
add
mov
mov
mov
sub
dec
mov
adc
popa
xchg
bnd
stos
xor
and
pop
pop
jnp
in
add
aad
clc
add
sbb
js
push
out
js
and
out
mov
sbb
xchg
cmp
mov
test
dec
lahf
dec
mov
int
mov
fucom
arpl
cmc
jp
das
sarl
or
pop
cs
in
sub
mov
cmp
inc
mov
in
xchg
xor
icebp
sub
pop
jg
xor
scas
mov
lods
dec
pop
scas
ds
iret
dec
pop
xchg
lret
aad
test
or
push
into
orl
inc
sub
gs
ficompl
inc
call
mov
adc
hlt
push
push
orb
ret
lods
scas
mov
in
xlat
jg
xor
dec
pop
push
mov
les
ret
add
sbb
xorl
pop
push
mov
int3
mov
adcb
pop
pop
push
iret
stos
and
xchg
mov
ja
decl
push
jl
xsaves
xor
ja
dec
push
mov
dec
xor
shll
ljmp
fwait
mov
fcompl
insl
jne
fnstsw
mov
inc
nop
jb
movsl
lea
pop
and
sarl
inc
pop
push
popf
sub
push
inc
pop
push
lods
ficoms
mov
mov
sbb
lahf
cwtl
scas
add
stc
mov
ds
repz
push
out
and
jl
jecxz
mov
js
cmp
pusha
and
lock
out
xlat
cli
lods
pushf
or
jg
icebp
outsb
adc
fwait
repnz
ds
push
or
sub
mov
and
nop
pop
in
pop
adc
and
icebp
in
push
dec
mov
lds
jmp
mov
mov
jecxz
sbb
push
fistpll
fidivs
js
adc
mov
ss
jge
pop
sbb
cmp
jbe
xchg
aaa
xchg
data16
in
xor
insb
sbbl
hlt
or
iret
xor
adc
stos
mov
loop
xchg
cwtl
rclb
jmp
push
adc
mov
test
and
pop
push
mull
gs
arpl
repz
jecxz
cmp
mov
or
enter
data16
dec
pop
add
ret
dec
mov
nop
aam
cmp
add
cmpsb
push
fistps
test
divb
and
pop
shlb
and
sbb
cmp
mov
lahf
push
pop
mov
inc
inc
pop
lcall
and
cmp
repnz
int3
cmp
hlt
ret
add
jecxz
xor
adc
xor
mov
fs
sub
cwtl
push
outsl
jle
fcmovbe
push
cmp
loop
stos
cmc
push
push
dec
push
pop
ss
std
lea
mov
sub
stos
rcl
dec
ljmp
ljmp
xlat
fcoml
les
dec
out
loope
add
bound
dec
lods
dec
mov
leave
xchg
outsl
and
jmp
xchg
mov
fimull
fbld
pop
mov
fs
mov
mov
cmpsb
cmpsl
int
sub
aaa
cld
xchg
mov
out
loop
iret
sbb
jl
mov
mov
enter
xor
mov
mov
push
dec
out
pop
jno
adc
push
mul
cld
test
sub
cmp
mov
cmp
aam
cs
mov
xor
dec
cld
xchg
xchg
in
cltd
ds
ret
in
and
ss
cmp
jmp
pop
mov
je
movsl
jo
lret
xchg
xchg
imul
repz
lea
mov
mov
dec
roll
andl
sti
mov
pop
sahf
dec
mov
fwait
wrmsr
inc
aas
popa
popf
dec
inc
jno
add
imul
adc
mov
enter
fwait
vmwrite
add
jp
sbb
adc
jl
movsb
push
mov
outsl
fisubrl
sub
fsubp
push
test
cmp
outsl
jmp
inc
lcall
jl
sub
movsl
dec
mov
adc
and
dec
xchg
dec
insl
mov
loopne
push
pushf
lahf
fildl
xchg
std
jno
test
jb
cmpsb
out
mov
mov
push
sti
push
mov
insl
mov
std
hlt
aas
mov
xchg
mov
dec
cmc
push
jns
cld
xor
and
bound
or
faddl
pop
jae
pop
in
test
test
fwait
mov
js
mov
mov
adc
js
pop
js
cmp
sub
push
je
add
mov
adc
mov
daa
xor
dec
scas
mov
pushf
call
lea
sub
pop
pop
mov
out
inc
repz
lods
jmp
adc
popa
fdivrl
sub
pop
call
mov
dec
test
inc
call
int3
sub
shrb
pop
inc
clc
adc
loope
mov
loopne
sti
add
lods
lods
ss
pop
js
mov
fisubs
cmc
or
jb
mov
dec
xchg
rcrb
xor
jg
lahf
js
filds
lock
mov
pop
mov
test
daa
pop
xor
das
hlt
scas
sub
pop
outsb
int
fs
call
scas
mov
xchg
add
lret
push
idiv
xchg
mov
sub
fimuls
stos
int3
and
dec
testb
clc
cmp
loope
std
popa
lcall
and
loope
xchg
adc
lcall
mov
daa
sub
jle
jl
mov
jnp
dec
jbe,pn
lcall
fs
jle
lock
rolb
hlt
imul
loopne,pt
xchg
lds
pop
mov
cmp
adc
add
sub
nop
iret
pop
xor
xchg
dec
lds
mov
ret
mov
jno
lods
dec
xchg
sub
pop
dec
add
loopne
shlb
sub
iret
jo
pop
rclb
mov
scas
rcr
sbb
pusha
cmpsl
dec
call
adc
data16
jnp
seto
fidivrl
jg
ret
mov
push
xor
add
fldl
cli
cmpb
cmp
jge
imul
out
mov
dec
push
fsts
into
in
inc
adc
pusha
cmp
push
popf
inc
pop
cmp
scas
jno
push
push
or
xor
or
jg
or
push
imul
jmp
out
idivl
or
add
int
incl
jo
sti
loopne
pop
jmp
jecxz
sub
loope
sbb
outsl
mov
enter
lods
sub
mov
mov
add
rcl
fbld
adc
lea
pop
js
cs
sub
push
std
das
push
in
mov
out
push
out
rolb
lock
popa
es
jge
mov
mov
testb
xor
cmp
push
cmp
je
std
repnz
loope
sbb
lret
popf
lea
hlt
dec
jne
daa
sub
mov
movsl
xchg
mov
inc
mov
aas
scas
mov
lret
out
lods
fiadds
add
and
out
test
movsb
loopne
mov
mov
adc
test
add
andl
adc
push
repnz
loop
xor
dec
dec
leave
enter
mov
cli
mov
pop
xor
sbb
call
loop
mov
test
cmp
jecxz
push
imul
jne
and
mov
orl
sub
jmp
in
mov
xchg
sbb
mov
loop
push
xchg
fdivrl
xor
push
xchg
push
clc
into
int
pop
sub
lods
pop
loope
xchg
mov
push
scas
cmp
iret
jnp
aas
movsl
mov
mov
jns
idivl
sbb
jo
xchg
or
adc
dec
repz
addr16
push
fwait
pusha
dec
int
fstl
lods
or
xchg
and
sarl
xchg
fisubs
xor
mov
and
xor
xor
stos
gs
lret
cs
movsl
gs
mov
gs
xchg
pop
mov
fldcw
ja
pop
insl
adc
xor
scas
das
or
stc
loop
test
ss
mov
adc
mov
inc
and
cli
or
and
dec
pop
pop
mov
push
dec
xchg
or
enter
mov
and
ja
sub
mov
cli
ret
aas
shr
pop
sbb
int3
xchg
and
sbb
insb
std
jg
adc
stos
mov
and
push
sarb
push
adc
es
dec
dec
fdivl
push
gs
popa
int
cmp
cmp
sub
sbbl
xchg
inc
pop
mov
push
scas
sti
in
cmp
test
test
cmp
rcll
mov
cmp
pop
xchg
pop
sbb
imul
in
push
arpl
aaa
popf
push
cmp
jne,pn
imul
scas
fstpt
pop
cmp
ljmp
mov
xor
jns
sub
push
loop
mov
jle
fdivl
sub
jle
add
mov
mov
add
mov
in
xor
inc
adc
in
and
pop
or
jbe
inc
fwait
add
ljmp
cs
imull
add
dec
adc
pop
mov
pop
xlat
push
mov
in
dec
outsl
sbb
divb
insb
sbb
loopne
movsl
ds
xlat
call
mov
aaa
or
mov
add
das
fisubrl
movsb
add
push
cmpsl
jne
mov
push
xlat
cmpsb
and
inc
add
push
das
push
or
xchg
inc
das
jns
js
xchg
mov
cli
pop
testb
push
xor
mov
jmp
into
xchg
xchg
jmp
pop
addr16
pop
xor
mov
stos
and
ljmp
in
xchg
push
leave
pushf
sahf
enter
xor
cmpsl
jmp
dec
negl
and
nop
dec
les
roll
add
inc
jo
cwtl
add
sbb
cmp
aaa
fldenv
repnz
mov
mov
xchg
pop
pop
or
inc
adc
idivb
insl
insl
clc
and
orl
pushf
xchg
mov
mov
orl
inc
jno
mov
cmpsl
dec
mov
dec
add
rcrb
jo
cmp
cmp
shr
cltd
sbb
jae
imul
sbb
and
rcr
dec
out
fcmovbe
std
jmp
jmp
lods
divb
jge
pop
mov
insl
cs
sbb
jo
cmp
ficomps
sbb
dec
fisubs
cltd
jne
shrl
inc
xor
push
stos
mull
sub
decl
push
cmp
xchg
adc
xor
sbb
fcomp
add
mov
ss
lahf
inc
lds
mov
cmp
mov
push
or
mov
lret
fsub
lret
jg
setge
cmp
bound
in
stos
movsl
das
in
popa
mov
clc
js
imul
push
add
mov
dec
inc
je
insb
xchg
push
or
push
fwait
mov
nop
mov
jle
adc
push
int
in
jo
es
mov
ds
add
sub
rcrb
ficoml
cmp
cmpsl
xor
mov
ja
xchg
fld
rcrb
pop
mov
xor
adc
rcl
das
ret
xchg
or
dec
jmp
push
mov
imul
xchg
repnz
pop
cwtl
repz
cmpsl
or
aam
xor
jge
mov
subl
adc
pusha
xorl
jbe
adc
push
vunpckhps
push
xlat
je
out
test
inc
cli
popa
jo
mov
dec
clc
loop
repz
outsb
jmp
and
jbe
add
sub
test
xor
mov
mov
fcmove
cmc
xor
insb
cmpb
enter
ja
imul
decl
jg
pop
stos
add
jne
cwtl
mov
inc
pop
sbb
xorb
and
jge
xchg
sbb
xchg
divl
cmp
mov
inc
mov
xchg
daa
mov
pop
mov
ficoms
subb
fs
test
stos
sub
and
mov
sub
push
repnz
inc
cmp
fwait
out
cmpsb
lret
and
and
mov
dec
sub
gs
jle
fistps
call
mov
std
or
stos
cmp
cs
mov
fnstsw
gs
mov
and
aad
movsl
or
mov
jp
outsl
mov
xor
and
cwtl
xchg
ret
lods
sbb
pop
jnp
pop
stos
jae
cmp
cmp
fidivrs
fmuls
inc
mov
ja
icebp
or
mov
in
fcoml
jns
orl
xor
cwtl
nop
dec
in
adcl
ds
leave
xchg
add
lock
ficoms
xlat
and
rorb
mov
mov
stc
subl
push
inc
sbb
push
sbb
and
bound
cmpsl
dec
fcompl
cmpsl
pop
aaa
push
inc
shrb
jb
add
sbbl
inc
scas
decb
cmp
pop
mov
clc
cwtl
mov
sbb
mov
mov
dec
in
mov
dec
loopne
jae
test
sbb
pushf
and
or
or
mov
lods
es
sub
push
cmpsl
push
mov
add
xchg
xchg
ss
adc
sti
mov
cmpsl
mov
mov
popf
inc
jns
inc
mov
dec
je
divl
add
jns
cmp
mov
xor
dec
and
sub
sub
call
je
pushf
pop
shlb
add
js
shrl
stc
add
imul
arpl
mov
jae
xlat
sbb
test
cmpl
lock
imul
ja
pop
fs
and
mov
aad
das
add
mov
dec
push
bnd
push
mov
xchg
ljmp
orl
push
aas
pop
mov
std
and
iret
mov
adc
push
inc
mov
pop
sbb
xlat
out
mov
pop
dec
mov
jo
mov
pop
push
mov
xchg
jmp
int
rcll
idivb
cmpsl
and
fidivrl
testb
imul
adcb
push
subl
divb
pop
push
insb
adc
xchg
pop
cmp
loopne
out
sti
push
in
adc
rcrl
sbb
sub
test
jmp
mov
filds
jge
mov
jae
stos
sub
dec
shr
mov
pop
addr16
addb
sbb
jl
adc
fmuls
add
mov
dec
sub
mov
jb
hlt
dec
jbe
into
das
mov
xchg
push
fstpt
inc
mov
call
lret
notb
lds
jmp
pop
and
fbld
add
loopne
sub
jge
lret
sbb
ficoml
xchg
push
rcrb
imul
xor
jnp
insb
pop
sbbb
add
inc
pop
lahf
test
xor
loope
xchg
fadd
pusha
jle
jbe
lds
sti
mov
pop
aaa
cmp
mov
test
mov
rolb
mov
mov
imul
adc
or
hlt
faddl
pop
cmp
jmp
sub
call
push
push
jl
push
add
loop
mov
sbb
aam
sbb
xchg
dec
cmp
mov
mov
or
fisttps
js
xchg
dec
scas
outsl
stc
aad
inc
es
rorb
sbb
loopne
mov
les
andb
cmpsl
jne
inc
mov
jg
insb
jle
and
cwtl
push
lds
push
xchg
in
addl
popf
test
mov
clc
stos
dec
test
sbbl
scas
xor
pop
lcall
pusha
xchg
mov
stos
adc
hlt
push
adc
les
sti
iret
push
sbb
test
es
push
xchg
inc
rcr
cmpsb
clc
rcl
sub
imul
adc
ret
dec
std
cld
les
out
stos
ds
xchg
cmp
push
jne
push
jg
fsub
cmc
int3
xchg
popf
cmp
and
mov
mov
lcall
lock
jge
sbb
mov
cmp
rorb
mov
lret
push
cld
sti
hlt
cld
lcall
fstpl
addl
and
add
and
adc
loop
adc
test
mov
dec
fcmovne
cmc
adc
loopne
push
dec
mov
jle
out
dec
ret
es
mov
cmp
add
pop
mov
push
or
lock
daa
sahf
lcall
cld
push
insl
leave
pop
xor
popa
pop
add
gs
out
stos
push
pushf
xor
dec
pop
sub
roll
adc
push
push
mov
jg
imul
and
push
or
out
pop
xor
fsubr
std
out
cmp
in
jl
push
loope
pushl
pop
inc
out
jbe
xchg
mov
sahf
ljmp
xor
in
fdivl
jle
std
cltd
outsl
mov
sbb
aas
push
and
jo
pushf
stos
mov
popf
push
adc
fs
lods
aad
popa
lahf
pop
xchg
in
stos
mov
xor
dec
cmpsb
pop
lret
push
jecxz
cwtl
xchg
xchg
jnp
xor
sub
cmpsb
cmp
out
lea
or
adc
lret
call
mov
mov
outsb
adc
pop
push
push
mov
fwait
jbe
adc
inc
push
or
pop
mov
pop
mov
js
addr16
div
mov
mov
pop
pop
push
sbb
popa
xchg
in
enter
dec
cmpsb
mov
push
inc
mov
popf
lcall
push
jno
int3
mov
sub
das
and
mov
ror
mov
mov
into
inc
mov
push
cmpb
div
pop
imul
testl
cmpb
nop
aaa
pop
fadds
jae
or
mov
in
icebp
dec
test
dec
subl
subb
lods
add
dec
pop
or
fstl
mov
jp
cmpsb
std
sub
mov
mov
push
ds
mov
pushf
pushf
insl
repnz
lret
push
movsb
aas
adc
add
dec
sbb
xor
push
lods
int3
pop
push
sub
adc
pop
cmp
add
mov
test
imul
inc
jo
push
sub
adc
adc
out
mov
test
and
aas
dec
mov
mov
lcall
xchg
pushf
add
sti
lahf
cld
js
out
fsub
rcrl
cli
cwtl
add
xor
lcall
in
cmpsl
mov
mov
mov
nop
or
sub
jo
fwait
push
imul
add
add
imul
or
shrl
jl
arpl
xor
movsl
push
xor
mov
or
cmpsb
addb
mov
movsb
jae
into
adc
or
call
push
cltd
mov
push
fsubs
outsl
pop
jg
xor
cmp
sub
mov
out
cwtl
and
mov
inc
dec
push
adc
in
inc
adc
fsubl
mov
lahf
sub
cli
std
mov
mov
icebp
pop
cmp
mov
pop
cmp
jge
andb
insl
xchg
mov
pop
lcall
popf
and
popa
or
xchg
dec
mov
sub
in
jg
fldenv
cmp
pop
rorb
inc
mov
xchg
sbb
jae
shr
loop
xor
push
shrb
jecxz
sub
inc
lods
sub
call
popf
test
repnz
add
or
jns
xor
xor
mov
repz
and
fld
out
push
xchg
lea
pop
out
popf
fisttpll
cld
enter
mov
push
fcmovnbe
repz
out
fisubrs
cmp
or
inc
mov
hlt
push
bound
out
call
in
popa
jnp
stos
imul
mov
cmp
std
adc
into
cmp
push
das
pop
lods
pop
and
sub
ljmp
push
loop,pt
icebp
jle
out
in
mov
xchg
pop
adc
rorl
iret
inc
xlat
orb
jns
xor
aas
adc
jle
inc
fldl
roll
test
and
or
jge
pop
lds
mov
xlat
push
lahf
and
movsb
bound
test
fidivrl
mov
fimull
icebp
xchg
in
xor
mov
mov
daa
fsubrl
aam
adc
add
lea
fnsave
mov
out
xchg
jne
imulb
js
and
movsb
ljmp
mov
aam
out
mov
jp
xchg
add
xlat
pop
dec
mov
xor
dec
gs
add
mov
out
sbb
xor
sbb
mov
sub
add
test
mov
stos
lds
pop
rclb
inc
xlat
xchg
pushf
stos
cmp
fstpt
ja
test
jno
or
lret
xor
fcomps
sbbb
or
sub
mov
mov
mov
pop
cmpsb
repnz
fabs
cmc
or
les
das
cmpsl
jg
loope
mov
mov
cltd
out
movsl
mov
xor
arpl
aaa
cmp
add
rol
lds
pop
or
pop
enter
call
stos
mov
mov
int3
test
push
cmp
sti
movsl
sub
cli
sbb
ret
into
ret
cmp
xlat
adc
cmpsl
or
lods
sub
outsb
jno
mov
or
pushf
dec
pop
jle
cmp
sbb
arpl
or
cmp
inc
dec
les
inc
sbb
lret
cmp
push
push
adc
jp
and
mov
or
or
cmpb
outsl
rorb
fidivrl
xchg
stos
shrl
push
push
idiv
and
xchg
jo
addr16
sub
xor
bswap
roll
and
xchg
arpl
or
lods
sub
insb
lds
hlt
jl
jp
sbb
adc
pushf
cmpl
lods
push
sti
in
bound
sub
dec
sbb
xchg
pop
add
outsb
arpl
push
jae
push
pop
jmp
out
test
cmc
jno
pop
movsl
xchg
mov
movsb
loopne
add
push
in
sbb
aam
push
pop
pop
cmpsb
repz
mov
fsubl
aam
pop
lods
sbb
xor
lret
xchg
sbb
push
les
lods
mov
xchg
iret
sub
inc
sbb
ret
gs
jecxz
jno
dec
xor
icebp
or
jo
hlt
mov
jecxz
sti
jl
sbb
pop
mov
adc
je
idivb
push
lods
popa
repz
xchg
popa
clc
mov
inc
push
ja
icebp
iret
mov
fsubrs
call
pop
fwait
je
rcrb
pop
outsb
push
sub
std
popa
mov
stc
sub
mov
and
mov
roll
fs
cld
stos
add
fsubl
aaa
mov
inc
scas
mov
or
mov
test
lahf
sbb
dec
sti
jle
test
sbb
push
ret
icebp
and
jbe
hlt
out
outsl
filds
cmpsb
push
mov
dec
cmp
mov
scas
cltd
sub
push
std
push
outsb
repnz
jmp
hlt
add
addr16
cmpl
hlt
pop
test
cmp
xchg
stc
jo
int
pop
int
bound
imul
dec
fimuls
mov
in
movsl
ljmp
and
mov
pusha
pop
jne
and
aaa
sbb
cmc
xor
sub
mov
stos
mov
pop
cmp
dec
push
imul
sbb
pop
cmp
lret
push
fs
test
les
lds
mov
push
js
aaa
cli
leave
hlt
nop
adc
inc
xchg
in
sbb
sbb
repz
ljmp
cmc
mov
mov
in
pop
std
ret
push
loop
pop
ret
int3
pop
xchg
pop
or
mov
lretw
push
mov
or
push
sub
push
aad
and
loope
push
jne
adc
test
subl
ds
xor
js
js
mov
jg
xchg
xor
cmp
add
int
pop
add
pop
and
ss
push
mov
push
xchg
sahf
and
outsb
inc
and
cmpsl
in
out
pushf
or
or
adc
xor
ja
addr16
ss
push
pop
loop
ja
sbb
sub
push
movsl
hlt
jo
addb
xor
mov
jle
cmp
cmp
fldt
jno
jle
pop
adcl
sub
and
rcll
push
adc
out
pop
movd
in
mov
mov
enter
fistl
push
sub
popl
pusha
dec
jge
pop
loope
mov
adcl
push
arpl
stc
scas
mov
or
xor
call
stos
dec
in
test
rcrb
imul
add
jo
setnp
fidivrs
cmc
test
push
stos
xchg
mov
push
in
xor
imul
xchg
loope
dec
cmp
pop
mov
je
xchg
sbb
call
movd
jae
repz
or
pop
lahf
adc
adc
lods
and
stc
mov
ds
xor
mov
or
cmp
adc
movsl
ret
scas
push
clc
jp
pop
xchg
ffreep
jmp
and
pop
cmp
lea
xorb
int3
xchg
jg
or
outsl
jl
mov
sub
add
addb
add
xchg
add
pop
push
push
fbld
lret
cmp
roll
xchg
das
fisubrl
and
dec
ja
push
mov
iret
xor
les
cmp
or
out
push
push
sub
mov
push
scas
add
ss
mov
xchg
adc
and
xorl
fstpt
mov
test
inc
mov
iret
dec
outsb
cltd
mov
cmpsb
in
sbbl
test
add
dec
or
or
sub
push
loope
pop
inc
data16
pop
cltd
or
dec
xlat
push
aas
sub
icebp
inc
popa
mov
fbld
das
xor
outsb
mov
adc
out
repnz
add
je
outsl
mov
rclb
fisubrl
jns
lahf
enter
push
mov
add
cmp
fwait
and
lret
pop
mov
out
cs
mov
push
mov
ja
push
pusha
pop
cmp
cmp
dec
pop
lea
aas
push
lret
nop
pop
iret
dec
push
cmp
mov
jbe
adc
jnp
popa
and
push
dec
pushf
sub
mov
xor
call
test
mov
ja
lea
stc
and
pusha
cltd
push
dec
push
mov
cwtl
das
mov
test
mov
stos
and
iret
dec
mov
in
xchg
scas
lods
outsb
jmp
scas
sbb
pop
and
mov
jmp
xorb
or
cmp
push
dec
cmp
lret
xchg
dec
pop
out
or
fidivrs
insl
sar
pop
pusha
jmp
push
scas
dec
imul
xchg
jbe
jg
lods
lods
inc
adc
cmp
or
cmp
repz
add
enter
shll
or
mov
xor
jecxz
into
pusha
adc
js
ss
fistpll
adc
lods
dec
sub
test
jbe
pop
popf
arpl
and
mov
fisubrs
clc
push
js
mov
inc
xchg
or
mov
cmc
jns
call
pop
incb
or
push
pop
xor
cli
dec
and
mov
int
out
push
scas
outsb
inc
mov
mov
add
or
xchg
ss
jb
outsb
lods
pop
fcmovnbe
inc
jbe
adc
inc
fdivl
cld
fistl
xlat
pop
push
cmpsb
daa
das
add
dec
xchg
mov
int
xchg
stc
mov
and
push
fisttpll
pop
jp
loopne
add
jo
mov
add
cmp
xor
jl
mov
fiadds
stc
shrl
lea
cmp
mov
test
fisttps
loop
and
scas
inc
filds
mov
or
cmp
cmp
call
test
rcr
test
jb
push
xchg
outsb
push
stos
mov
and
fldenv
or
test
pop
sahf
aas
adc
ret
mov
popa
add
cmp
sub
ljmp
push
mov
outsl
subb
subb
push
cltd
sub
out
and
dec
fidivrl
sub
jb
das
inc
loopne
scas
cmpl
mov
inc
cltd
mov
and
cmp
mov
fdivl
xchg
and
xchg
add
out
hlt
and
adc
sahf
jo
pop
lods
faddp
cld
mov
and
dec
jae
xor
repz
dec
dec
subb
scas
iret
aad
pop
jb
enter
jmp
rcl
test
jne
mov
xchg
inc
lds
mov
leave
shr
jp
mov
cmpsb
shlb
imul
push
aas
aam
jp
mov
fidivl
sar
popa
sub
adc
adc
lds
divb
mov
sti
or
pop
pushf
jg
mov
loope
mov
push
push
cmp
pop
xchg
add
test
jo
cld
or
xchg
mov
leave
push
shlb
test
into
out
mov
cmpsl
inc
jno
leave
cmp
mov
xor
ret
shlb
idiv
push
ret
xchg
test
call
dec
fdiv
gs
inc
or
shrl
call
pusha
in
les
cld
push
xchg
fstps
xor
imul
loop
loope
cmp
mov
jb
pop
cmp
adc
lea
adc
or
inc
adc
mov
jae
xchg
or
sbb
rorl
lds
add
xor
iret
hlt
je
mov
dec
subb
test
test
cmp
and
inc
jae
sbb
call
ret
loope
inc
xchg
mov
dec
in
sbb
adc
add
mov
fwait
cmpsl
scas
insl
icebp
out
xchg
jnp
add
fistps
xor
mov
xchg
mov
addb
lds
lock
and
cmp
mov
pop
mov
adc
shll
icebp
push
test
cmp
adc
pop
dec
addr16
int
movsb
int
bnd
arpl
xchg
pop
das
sbb
xchg
xchg
aas
mov
xchg
sbb
adc
push
add
push
mov
jge
lds
movsl
dec
push
popa
mov
and
inc
push
cwtl
mov
xchg
adc
ss
pop
enter
inc
mov
mov
in
out
lods
cli
enter
xchg
add
cmp
icebp
cmp
rorb
push
movsb
aad
mov
fwait
xchg
cmpb
push
mov
fcomps
aad
sub
dec
push
lcall
xor
aad
ss
fildll
xbegin
add
test
mov
fimull
push
loope
or
into
cmc
lcall
adc
imulb
cwtl
std
sub
xor
pop
xchg
xchg
xchg
push
xchg
push
add
jmp
cmp
loopne
push
sub
inc
rcll
int
cmp
jo
push
inc
or
scas
adc
std
mov
mov
sub
jo
in
adc
mov
jne
out
setne
sahf
enter
test
mov
dec
lock
in
or
sti
outsl
push
out
mov
pop
aaa
jp
dec
out
mov
lds
in
test
inc
push
ret
cmc
popf
mov
pop
mul
and
je
call
or
jge
paddsb
mov
test
push
jl
lahf
mov
mov
scas
lods
fstpt
cmp
push
and
xor
push
mov
aaa
cmp
lret
or
push
lock
jp
mov
sub
pop
xchg
mov
xchg
mov
xchg
enter
popa
cwtl
fdivrl
jg
pop
or
out
dec
pushl
imul
stc
push
inc
arpl
pop
xchg
cli
fsubrl
pop
mov
xor
inc
dec
mov
ret
pop
call
data16
mov
scas
je
fwait
ret
in
mov
sbbb
lahf
xor
sbb
sbb
xchg
sub
cmp
push
xor
mov
adc
jg
int3
addb
imul
test
xchg
xor
xor
leave
lcall
loop
fs
jnp
lock
push
mov
sbb
fwait
sbb
out
sbb
out
in
mov
incb
fsub
mov
out
mov
pop
pop
insl
xchg
scas
add
pop
jmp
lods
push
inc
loopne
ja
mov
and
out
cmp
lahf
les
stos
adc
pop
dec
je
inc
and
cmp
add
lock
xchg
adc
sti
cs
sarl
outsl
mov
ljmp
xchg
xchg
in
jno
sti
aad
jge
or
in
gs
xor
jmp
iret
out
andb
pusha
xchg
mov
movsl
xchg
xchg
std
hlt
in
inc
push
add
pop
popa
data16
mov
cmpsb
stos
jecxz
repz
mov
mov
mov
into
mov
fwait
rcll
cmp
subl
jp
popf
pop
lahf
add
int3
fnstcw
fiaddl
cmp
xchg
pop
cmp
rorl
cmp
inc
sbb
je
jnp
imul
js
leave
call
jg
push
dec
incb
outsb
jns
mov
test
stos
xor
incl
test
test
out
push
sub
adc
popf
mov
subb
sub
push
mov
insb
cld
add
inc
sub
or
jo
sub
add
xor
add
sbb
jo
loop
cwtl
cld
push
popf
icebp
mov
cmp
sbb
insl
sub
xchg
jecxz
push
mov
and
pop
imul
dec
cwtl
inc
mulb
jp
mov
repnz
and
sub
sub
mov
or
mov
mov
fwait
mov
iret
js
icebp
mov
mov
stc
fadds
mov
sub
mov
repz
sbb
mov
fisttpll
pop
test
movsb
ficoml
daa
aad
pop
hlt
movsl
xchg
xchg
sbb
sbb
xacquire
fcoms
decl
lret
sbbb
aam
push
loopne
push
int
out
into
clc
sub
rorl
fcoml
mov
movsb
adc
mov
loopne
xor
icebp
or
rorl
push
ss
daa
cwtl
fst
out
pop
cmc
adc
adc
stc
int
and
xor
sub
bound
sti
stc
inc
int3
ss
fidivl
repnz
lret
cmp
lock
outsb
jne
leave
call
outsl
addr16
in
outsb
scas
in
or
sbb
je
ret
add
das
xor
inc
pop
movsl
repz
lds
xor
leave
sbb
jae
xchg
dec
add
inc
pop
mov
lahf
or
out
mov
sbb
imul
pop
push
mov
fnstsw
mov
or
notb
mov
mov
push
pop
and
inc
repz
xor
pop
push
push
pop
lods
repnz
push
inc
or
insl
mov
call
jg
nop
data16
cs
cmp
xlat
mov
clc
jge
mov
xlat
hlt
stos
cmc
lahf
adc
out
imul
gs
cmp
or
repnz
out
push
sbb
jbe
mov
add
jecxz
clc
sub
scas
movsb
add
jge
shr
pop
aad
js
mov
xchg
dec
cmp
adc
pop
sbb
mov
aad
call
nop
scas
sbb
jle
ja
jmp
daa
mov
xchg
pop
push
dec
dec
xchg
mov
sbb
sbb
mov
mov
cmp
add
lret
jp
sub
mov
sub
mov
push
testl
mov
mov
daa
sbb
dec
scas
mov
icebp
add
cmp
aad
cwtl
and
mov
xor
int
mov
xlat
in
movsb
jg
xor
movsb
mov
pop
rorl
or
push
add
pop
js
sbb
cmpsb
scas
jo
lcall
in
pop
inc
stc
cwtl
xor
je
jg
lods
adc
jp
mov
cmpsb
insl
mov
push
jmp
sub
dec
inc
outsb
pop
xchg
lods
loop
insb
dec
sbb
or
inc
out
mov
ret
ret
call
sbb
mov
adc
dec
pop
mov
andb
fisttpll
popf
ds
xor
ss
iret
mov
mov
xor
or
mov
jmp
xor
sub
sbb
pop
push
lret
mov
in
aaa
push
xchg
loop
or
inc
hlt
jl
loop
xor
sub
sub
jbe
cmc
inc
mov
xor
dec
imul
or
sbb
sahf
push
jno
cwtl
mov
xchg
add
cwtl
jno
syscall
lcall
adc
test
ss
push
jo
sbb
arpl
insb
add
xor
arpl
mov
aad
stos
ret
ja
loopne
inc
shrb
cmp
js
mov
mov
cmp
lods
pop
or
je
movsl
int
out
imull
adc
lret
dec
mov
xchg
movnti
insb
jp
test
sarb
xchg
es
mov
add
imul
sub
das
aas
lahf
out
pop
cmp
ss
mov
aas
stos
xchg
in
dec
loop
repnz
addr16
popf
push
push
mov
sub
popf
shl
xor
dec
ss
cmp
imul
inc
js
clc
shlb
loop
inc
jle
mov
orb
jp
daa
push
outsl
sub
and
and
xor
add
sbb
test
stos
inc
cmpb
out
repnz
cmp
scas
cmp
repz
xchg
xorl
xchg
jbe
pop
outsb
out
lret
xor
cmpsb
lcall
mov
mov
data16
fwait
addr16
ljmp
int
cltd
push
push
push
or
sahf
mov
in
test
push
dec
ret
mov
jno
push
testl
mov
jecxz
jno
or
pop
push
adc
pop
add
fwait
or
lods
mov
inc
popa
shrb
cmpl
mov
dec
mov
loope
imulb
or
shr
fcomps
sbb
inc
inc
test
jne
loop
mov
mov
cmp
pop
inc
pop
aad
std
cmp
icebp
shr
js
outsb
or
pop
test
and
scas
cmp
xor
jecxz
data16
inc
push
and
mov
push
out
push
mov
dec
ss
sub
cmp
repz
hlt
cld
xor
mov
dec
jns
gs
jp
and
sub
jmp
fsubrp
ret
push
xor
call
icebp
or
je
insb
lds
leave
push
dec
in
pop
rorb
scas
xsave
push
loopne
mov
imul
sbb
dec
lret
push
jmp
adc
mov
dec
dec
sub
mov
sub
push
sbb
scas
dec
fdivrl
sub
ds
push
adc
jg
fdivl
xchg
scas
xchg
mov
dec
and
mov
call
out
mov
in
xor
push
dec
jnp
sti
push
je
mov
ja
add
mov
xchg
jge
inc
stc
jbe
add
sub
movsl
push
aas
pop
mov
mov
pop
jbe
orl
add
leave
mov
lret
ss
repnz
aas
cltd
bound
or
stos
and
jnp
cs
mov
cmp
pushf
mov
cs
lds
test
jae
jl
pushw
xor
mov
xchg
lret
mov
repnz
in
push
cmp
jnp
ret
lahf
inc
neg
andb
sbb
dec
or
lods
and
popl
jle
push
cli
mov
push
xchg
out
cmp
pop
cmpsl
add
push
lcall
xchg
xchg
aaa
jne
lods
out
xchg
cmc
hlt
es
stos
shll
and
inc
jne
cmpsb
xchg
xor
test
mov
cmpsl
rorl
popf
mov
xchg
mov
dec
test
jbe
ds
inc
push
daa
out
mov
and
mov
jp
sbb
push
jle
push
pop
addr16
xor
in
insb
ds
iret
adc
imul
sbb
push
xchg
nop
add
mov
mov
jno
test
and
mov
add
pop
mov
adc
cmp
fstps
xor
arpl
mov
xor
sarl
imulb
leave
out
sub
adc
mov
ret
fwait
out
imul
pop
adc
fcomps
scas
imul
mov
testw
cmpsl
std
aad
sbb
repz
mov
cmpsb
jl
and
in
or
jmp
ljmp
mov
fists
test
cmp
shll
ret
sbb
fldcw
inc
nop
or
jno
loope,pt
fs
mov
fwait
sub
and
icebp
pop
pusha
loope
mov
xor
imul
out
test
mov
imul
pushf
and
in
jns
jbe
or
mov
pop
xchg
test
xor
push
addr16
clc
add
insl
xchg
mov
scas
mov
inc
mov
shll
jo
shl
cmp
sbb
lock
push
jb,pn
and
xchg
dec
call
mov
push
pop
mov
out
lahf
xor
push
cli
fiadds
jmp
push
test
fbld
mov
mov
aad
cmp
mov
mov
loop
jnp
mov
iret
imul
jl
push
pop
test
lret
mov
shl
js
fsubs
out
aam
mov
mov
ficompl
pop
int
jne
pusha
cmc
jnp
stos
cmc
push
sbb
mulb
pusha
mov
rorl
sub
jbe
idivl
scas
lahf
mov
jno
sub
cmp
imul
sub
and
nop
je
scas
imul
outsb
pop
jmp
cmp
dec
or
xchg
dec
jae
pushf
push
and
andl
and
or
inc
aaa
dec
hlt
ds
pop
jae
loope
bound
sub
jmp
sti
lea
ljmp
xchg
outsl
movsb
popa
std
popa
push
icebp
jo
jle
dec
xlat
push
pop
mov
stos
ljmp
mov
repz
lods
mov
aas
xor
or
ret
call
pop
cmc
jmp
outsl
mov
push
dec
xchg
push
cwtl
jne
insl
mov
fidivrl
add
shll
jmp
in
mov
aas
fmuls
ret
sbb
jl
in
insl
push
dec
outsl
xchg
icebp
mov
mov
xchg
daa
xchg
xchg
int3
cmp
pop
test
pop
xlat
pop
out
pushf
cwtl
mov
lea
mov
push
ljmp
div
pop
lahf
dec
js
inc
cmp
xor
inc
xchg
jae
mov
in
in
mov
idivl
mov
popf
movl
jmp
and
mov
ja
inc
dec
push
cmp
mov
in
in
cmp
mov
repnz
inc
sub
jecxz
icebp
cld
xor
imul
and
dec
retw
shl
pop
sbb
das
mov
mov
fnstsw
adc
ret
jne
movsb
aad
movsb
aam
and
push
adc
pop
shlb
mov
nop
xor
addr16
or
jnp
mov
fists
cmp
inc
fwait
cmp
sbb
adc
out
pop
lret
adc
sub
pop
mov
or
les
pop
loopne
pop
mov
fldt
add
mov
cmp
in
call
sahf
int3
mov
xorl
lcall
cmp
outsl
inc
add
mov
pop
int3
in
mov
sbb
js
xor
lock
mov
add
out
cmp
es
cmp
ficoms
inc
xor
outsb
xchg
test
dec
orb
negl
jno
adc
mov
clc
daa
jp
negl
xor
push
ret
enter
mov
prefetchwt1
xchg
mov
ret
and
fs
sub
in
cmpsb
pusha
call
je
dec
jle
xchg
imull
ret
shlb
popa
xchg
mov
lret
das
mov
mov
pop
aas
adc
mov
into
lea
leave
aas
rcll
out
or
lret
cli
sub
push
cmp
mov
ret
adc
nop
ret
das
dec
mov
int3
and
xlat
sub
hlt
std
leave
fwait
adc
imul
pushf
adc
sub
pop
push
add
push
ret
jae
leave
lock
mov
inc
jp
mov
popa
dec
fistl
stos
fisubl
int
jns,pt
or
lds
rorb
scas
insl
inc
sarb
pop
adc
and
mov
mov
dec
hlt
cmpsl
jle
icebp
in
mov
aam
cld
sbb
loop
roll
xor
ret
mov
jecxz
fcmove
sub
push
pop
clc
repz
das
xor
sub
mov
lods
fisttpll
or
and
fsubrl
ret
pop
mov
dec
movsb
arpl
and
dec
pop
xchg
out
add
jne
adc
inc
in
pop
and
mov
mov
sti
popf
in
enter
lock
inc
fcoms
inc
clc
add
cwtl
dec
jmp
inc
lahf
xor
jp
cmp
dec
jp
lretw
pop
add
cltd
adcl
bound
cmp
or
pop
data16
dec
cmpsl
or
or
bound
push
jp
lods
dec
outsb
pop
dec
out
jecxz
in
pop
pop
pop
add
mov
mov
inc
int3
arpl
inc
test
sbb
clc
add
pop
sub
jbe
arpl
fwait
out
stos
sbb
pop
dec
lods
sti
cmovae
je
mov
jmp
jg
adc
or
cwtl
test
and
test
pop
mov
js
xchg
sahf
adc
jb
jbe
inc
pusha
add
jge
lahf
jmp
jmp
imul
cld
inc
mov
jnp
cmp
sub
cmp
pop
cmpl
fsubrs
mov
outsb
and
adc
stc
jecxz
xchg
repnz
iret
stos
and
sbb
sarl
cltd
lock
cwtl
push
cmp
sbb
xor
adc
fisubl
mov
jmp
or
xlat
daa
jbe
and
fistpll
test
out
mov
imul
dec
push
stos
dec
cmp
mov
push
rorb
ss
movsl
sbbl
push
stos
gs
mov
shl
xchg
add
lock
mov
mov
repz
pop
cmpl
clc
sbb
xor
stc
adc
xorb
js
jle
sbb
out
mov
enter
and
and
iret
clc
mov
inc
xor
pop
and
addb
sti
ss
dec
pop
hlt
insb
dec
test
mov
inc
pop
dec
adcb
push
cmc
sbb
cmc
lret
ljmp
cmp
xor
mov
das
add
aas
ja
or
cmp
xor
lock
out
push
xchg
stos
jne
inc
push
push
filds
lea
shl
repz
push
aas
cli
dec
lret
push
mov
ret
mov
mov
es
xor
mov
loopne
push
xchg
dec
cmp
add
pop
cld
and
fdivrl
lock
fisubrs
and
xor
ja
sbb
xchg
mov
gs
cmp
das
jp
sti
jae
pop
lds
jb
push
data16
sahf
in
fisubrs
test
or
adc
aad
mov
stos
jmp
or
sub
cld
mov
popa
ljmp
int
rorl
push
cmp
jo
cli
fdivrs
aas
cmpsl
xchg
popf
sbb
xchg
add
push
inc
jmp
inc
mov
repz
lahf
rclb
sub
into
mov
cmp
jecxz
xor
and
test
push
mov
jecxz
inc
pop
int3
fdivp
jo
fdivrl
aas
jl
lcall
ret
sub
xor
into
arpl
and
cmc
inc
mov
out
mov
push
pushf
inc
mov
dec
lods
jne
fistps
xchg
xor
cmpsl
push
inc
sub
mov
ret
jo
enter
cmp
rorl
neg
decl
imul
frstor
jp
in
add
dec
out
sahf
arpl
sub
outsb
rcl
xchg
sbb
add
cmp
adc
mov
rcr
jle
insl
nop
outsl
pop
call
push
mov
jne
push
test
lea
dec
mov
mov
imul
fnsave
dec
outsl
adc
js
outsl
in
out
push
xchg
pop
jne
cmp
mov
jae
lods
sub
push
imul
dec
and
add
jmp
adc
push
push
faddl
fnsave
pop
or
test
mov
lahf
mov
test
inc
cmp
or
dec
xchg
cli
mov
out
or
dec
pop
out
jno
mov
lea
shlb
mov
mov
adc
dec
scas
xchg
xor
jae
xchg
decl
scas
adc
cmp
pop
dec
sbb
sub
pop
pop
inc
xor
adcb
fcomp
sbb
add
jne
sub
cmpsb
jmp
mov
xchg
or
dec
lahf
jb
cli
lods
mov
jb
jnp
jecxz
cmp
movsl
inc
mov
test
lahf
pop
add
or
cld
dec
and
inc
jns
pop
lods
dec
dec
mov
outsb
hlt
sarl
insl
fcmovbe
loop
pop
mov
cmp
pop
mov
movsl
int3
jae
mov
jl
pushf
xchg
rcrl
ficomps
rorl
out
fstl
dec
outsw
into
push
push
ret
inc
popf
data16
jle
and
out
test
es
push
add
push
das
mov
faddl
stos
and
pusha
das
mov
fdivrl
adc
adc
xchg
mov
xchg
sub
outsl
fwait
jae
mov
insl
or
adc
addr16
adc
shr
push
gs
xchg
mov
ja
stc
inc
fildl
mov
jp
outsl
pusha
ret
jo
mov
outsl
add
jo
dec
pop
push
and
cmp
pop
cltd
ljmp
sti
sbb
aad
jne
push
mov
fnstcw
push
push
xor
pusha
xchg
std
rcrb
jnp
xchg
pop
mov
mov
cmpl
call
mov
xlat
xchg
outsb
pop
ja
lods
scas
orb
adc
aam
dec
or
adc
mov
xchg
push
aas
push
sbb
or
and
cmpsb
ds
test
or
push
cmp
mov
jne
xor
xchg
hlt
loopne
mov
testl
repnz
stc
or
sbb
hlt
mov
dec
movsb
rcrl
insl
cmpl
push
imul
mov
jne
in
mov
cltd
xor
jb
push
subl
mov
pop
sbb
sbb
mov
add
adc
mov
movsb
fs
ja
mov
and
je
cmc
or
out
test
mov
scas
xor
out
imul
in
inc
jne
ja
cli
dec
push
sbb
lods
dec
shlb
subl
mov
movsl
js
lcall
ret
sub
cmp
test
xchg
mul
out
push
push
adc
xor
xchg
stos
lds
cli
test
nopl
popf
repnz
addr16
iret
loopne
pop
mov
loope
and
adc
xchg
lods
enter
mov
add
add
mov
out
fcomi
push
or
pusha
dec
add
jmp
push
ror
out
inc
jbe
int
lods
js
pop
jbe
inc
fimull
sbb
pop
add
push
loope
out
jne
mov
repz
xlat
and
add
mov
and
mov
adc
sub
inc
rdpmc
xchg
adc
sub
rorb
xlat
insl
jl
cmp
fistpll
ficomps
and
stos
inc
or
add
loop
and
cltd
mov
mov
xchg
fwait
popf
pop
arpl
cmp
ficoml
gs
rcll
inc
or
pop
mov
xchg
loopne
xchg
xchg
or
push
gs
jne
dec
pop
lea
imul
mov
mov
cmp
popf
mov
cmp
out
push
sbb
jmp
dec
xor
sub
imul
test
shl
adc
xchg
cmp
dec
nop
mov
cmp
pop
mov
fsubs
xchg
jecxz
nop
jl
and
push
and
rcrb
fsubl
xor
lret
sbb
repz
and
dec
xchg
and
inc
add
xor
xor
cmp
or
in
cltd
in
lods
aaa
enter
in
jno
mov
push
mov
loop
lods
loop
je
and
push
jl
jne
jae
lret
push
dec
push
push
mov
xchg
daa
dec
pop
dec
popa
xor
gs
mov
jecxz
out
shl
enter
mov
fisubl
push
pop
push
insl
xchg
jle
nop
xchg
mov
and
insl
sahf
sub
fisttpll
jns
inc
inc
cld
or
test
fdivl
jp
ja
arpl
daa
push
and
pop
push
mov
and
rorb
adc
inc
or
ss
loope
scas
sbb
inc
cwtl
pop
fbstp
fdivr
pop
mov
jbe
sbb
mov
popl
cltd
pop
int
mov
inc
adc
adc
lahf
shl
es
cmovnp
out
addr16
push
adc
sub
cmp
ret
clc
gs
xorl
pop
lret
cmc
shll
push
inc
ret
jge
les
outsb
add
jmp
cmp
jne
lods
push
sahf
xchg
lods
dec
xchg
in
fistps
add
mov
xor
outsb
mov
pop
lea
sbb
addb
push
and
loopne
sbb
xchg
icebp
pop
repz
shl
inc
dec
les
jge
in
hlt
lret
fidivrs
and
fstl
mov
inc
out
mov
add
ljmp
fildll
ret
inc
jb
xor
sbb
enter
loope
adc
shrb
lea
or
shrl
lods
insl
insb
les
sarl
push
mov
jecxz
cwtl
mov
jne
scas
mov
xor
or
pop
int
sarb
test
ret
shl
push
push
lret
repz
lret
sbb
mov
xchg
mov
aam
sbb
and
push
loop
shlb
jb
sar
adc
push
mov
test
jno
add
mov
ss
adc
icebp
xchg
adc
dec
es
imul
and
out
inc
inc
push
inc
mov
icebp
inc
les
jge
xchg
or
pushl
jp
pop
in
jecxz
cltd
movsb
lret
push
cld
xchg
and
sarb
and
and
mov
int3
enter
pushf
std
xchg
repz
add
rorb
add
mov
fdivr
icebp
sbb
aaa
lods
mov
stos
out
cmp
mov
xor
or
hlt
pusha
push
je
or
cld
dec
adc
insb
jp
inc
inc
insl
ficomps
xchg
pusha
popf
fndisi(8087
xchg
adc
jmp
pop
adc
test
and
xor
cmpl
jl
adc
pop
ja
mov
mov
sub
test
push
push
movsb
cmp
test
mov
fbstp
dec
push
add
insb
lret
loop
add
imul
mov
in
pop
adc
xchg
dec
hlt
ja
lods
push
add
mov
sub
cli
cs
jp
jl
xchg
push
dec
jbe
clc
fwait
lock
fcoms
mov
add
popf
stc
mov
cmp
arpl
push
enter
cmp
or
pop
sub
sub
or
shll
stos
cmp
jb
ljmp
out
mov
dec
xor
add
or
sub
enter
sub
sbb
mov
push
add
pop
lcall
std
and
push
add
inc
popa
xor
subb
outsb
scas
movsl
lahf
ljmp
push
scas
sub
and
add
xor
ljmp
pop
jp,pt
adc
mov
mov
sbb
gs
test
xor
push
fbld
lods
out
adc
mov
cmp
push
mov
cltd
or
inc
sbb
pop
pop
push
cmp
jmp
adc
push
and
sub
xchg
ja
xlat
scas
clc
and
jge
jl
dec
int
xor
psrld
int
sbb
inc
xor
adc
in
sbb
mov
enter
adc
push
jge
inc
repz
enter
test
dec
bound
nop
pop
jne
xlat
mov
clc
in
push
xor
fs
or
jecxz
pop
cld
repnz
dec
fs
mov
lcall
mov
mov
int
jbe
ja
aaa
mov
xor
xchg
sbb
xchg
xchg
lcall
pusha
push
out
sbb
daa
or
ds
cmp
pop
mov
cmp
or
das
dec
lock
dec
inc
sub
adc
jp
inc
out
stos
sub
add
xor
js
mov
rcl
and
js
fsubrs
fnstenv
or
push
dec
dec
mov
and
clc
out
pop
jne
pop
hlt
xorl
leave
or
jne
icebp
mov
repz
aaa
xchg
xchg
lds
loope
mov
mov
lret
mov
jno
push
sub
in
sub
js
inc
pop
xchg
addb
push
lods
xchg
lods
dec
xchg
rcll
mov
adc
add
lcall
mov
jo
dec
sub
incb
pop
in
fstl
dec
or
jmp
hlt
mov
inc
mov
fdivl
push
mov
je
mov
jg
movsl
pushf
cld
shrl
jge
imul
mov
jnp
pop
lahf
je
jbe
shll
lock
mov
test
dec
sub
xchg
mov
push
mov
cmp
xlat
adc
xor
mov
into
jecxz
ds
stc
pop
loope
lahf
xlat
cld
push
dec
rcrb
push
push
fisttpll
std
adc
fmul
sarb
divb
jecxz
and
inc
outsl
xchg
mov
jge
repnz
push
in
test
pop
push
mov
stc
mov
ficomps
cmc
test
mov
cld
xor
cmp
ljmp
loopne
xchg
push
add
fstpl
jmp
push
ror
cmpsl
push
mov
adc
fbld
mov
sub
or
ds
leave
neg
mov
stc
mov
push
lock
repnz
mov
icebp
xchg
aam
dec
adc
ret
inc
dec
or
cmp
adc
jae
lea
dec
cmp
add
push
mov
dec
fstpl
je
outsb
lock
and
jp
push
test
pop
sub
iret
adc
lea
imull
fisubl
ja
mov
push
add
add
xchg
movsl
in
test
push
or
imul
lds
stc
jmp
out
or
movsl
shrl
ds
lods
sub
mov
test
cld
in
pusha
mov
in
inc
dec
in
pop
xchg
push
es
ret
hlt
stos
lret
cltd
push
in
aad
popa
sbb
pop
mov
out
add
sbb
sbb
jnp
sbb
lahf
sbb
in
sub
fsubr
sbb
sub
fbld
mov
ds
mov
filds
pop
mov
and
jecxz
rol
stos
cmp
std
fists
pop
inc
push
inc
mov
dec
test
xchg
xor
repz
mov
aas
lcall
adc
fwait
add
jle
push
jnp
cmc
dec
adc
sub
mov
cmp
mov
push
out
xchg
dec
and
mov
pop
loopne
jne
mov
and
je
lcall
jg
adc
dec
fstl
xchg
mov
pop
mov
and
mov
or
aaa
inc
jge
jbe
movsl
xchg
dec
popa
inc
loope
pop
sub
mov
fs
xor
imul
jl
jmp
and
cmp
out
pop
add
repz
jbe
adc
dec
mov
add
test
adc
cwtl
or
repnz
inc
jae
es
mov
inc
sbb
pop
dec
sbbl
shlb
outsb
decl
in
scas
lahf
icebp
iret
rorb
daa
ret
add
stc
inc
hlt
outsb
nop
xor
je
mov
pop
inc
je
xor
xor
insb
inc
push
movsl
sbb
mov
popl
or
pop
cltd
call
addr16
mov
mov
mov
cs
dec
jl
cmp
pusha
mov
jb
mov
ja
out
mov
inc
and
xchg
push
add
dec
pop
aam
mov
and
sbb
inc
mov
test
repz
xchg
jl
inc
jb
add
loopne
push
repnz
int
push
sub
mov
push
dec
js
mov
push
insb
jge
push
push
outsb
jb
adc
sub
sahf
sbbb
mov
loope
cmpsb
orb
cwtl
pop
lea
dec
mov
lret
fimuls
movswl
cmp
jno
jnp
aam
insw
fprem1
out
mov
mov
add
cli
pushl
in
aam
stos
sub
outsl
add
pushf
jne
xchg
movsl
insl
sub
add
ret
pop
jno
mov
and
dec
push
in
push
in
fbstp
xchg
addb
push
sbbb
and
pop
mov
leave
xchg
sub
ret
xlat
jns
fs
stos
cmp
sub
cld
enter
inc
rolb
pop
mov
cwtl
push
mov
mov
lock
cmc
loopne
nop
clc
sahf
and
adc
mov
ficoml
jo
mov
pusha
les
mov
mov
mov
cmpl
xchg
lods
arpl
xlat
mov
and
fcompl
imull
cltd
xor
and
inc
push
push
xchg
mov
in
adc
icebp
insb
cltd
xchg
jb
mov
jge
fistpl
cmp
les
sbbb
sub
sub
push
out
repz
cmp
aaa
pop
xchg
mov
push
mov
insl
inc
repz
pop
xchg
cli
dec
jle
add
outsb
add
add
nop
outsl
mov
add
inc
lock
mov
add
dec
jb
lret
sbb
mov
mov
xchg
popf
push
jmp
sbb
loop
sbb
xchg
pusha
jae
jno
or
xchg
leave
stos
or
push
mov
pop
cli
mov
or
xchg
or
mov
bound
scas
pop
movsb
stos
dec
add
shll
add
icebp
aaa
fldl
pop
rorb
mov
adc
add
xchg
or
mov
lds
mov
push
mov
stos
xchg
cwtl
xor
js
push
xchg
mov
dec
test
fsubr
subb
jb
push
aaa
lods
mov
cmp
and
push
out
xchg
out
mov
inc
pop
in
mov
xchg
xlat
dec
jg
push
dec
adc
inc
pushf
cld
push
fwait
stc
push
aad
repnz
or
sbb
jge
repz
sbb
jne
pop
out
xor
les
clc
jmp
cmp
ret
jp
push
xchg
mov
xor
dec
pushf
and
pop
mov
cli
jae
icebp
pop
pushf
xchg
popf
push
pop
test
int
pop
mov
ja
in
pop
dec
hlt
sbb
ss
into
fwait
clc
jl
outsb
cld
jb
jg
lret
cmp
mov
push
ret
outsb
cmpb
sbb
mulb
sub
mov
cmp
push
or
enter
jp
out
jne
insl
in
sbb
shlb
inc
fwait
cmp
or
sbb
imul
ret
sahf
or
jbe
shll
add
lea
fldcw
sub
and
or
into
mov
out
aaa
mov
mov
mov
scas
rorb
cmpb
and
loop
ret
in
jno
jmp
jg
xchg
les
sub
stos
cmp
and
roll
jl
jne
cmp
into
jo
test
jo
outsb
push
fs
xor
call
cmpsl
jge
in
add
mov
sti
dec
push
sbb
sbb
stos
movsl
jae
adc
sti
jnp
aad
les
aad
sub
in
push
je
pusha
xchg
lods
bsr
scas
mov
add
and
testb
pop
jno
jl
daa
inc
int3
lock
inc
pop
mov
pop
jle
loop
mov
pop
dec
pop
fildll
stos
pop
pop
jae
pushf
mov
aaa
subl
ret
sbb
push
das
cmp
mov
mov
push
fildll
jmp
xlat
add
imul
sub
pusha
dec
push
fucomi
int3
minps
sub
fdivrs
in
jne
ror
ret
dec
pop
ljmp
shll
dec
in
nop
idiv
pop
test
lcall
notl
rcl
inc
loopne
cltd
mov
push
out
inc
cwtl
daa
int3
out
cmpsb
xchg
es
loop
loopne
jnp
rcll
and
pop
add
push
pop
xchg
xchg
iret
ds
xchg
mov
jne
cmc
jge
int3
scas
push
sub
pop
rep
jg
jmp
push
pushf
pop
ljmp
lods
movl
sbb
inc
data16
fadds
mov
or
pop
sub
or
dec
pop
fwait
push
ret
push
or
ja
xor
or
sbb
loope
cmp
js
sbb
pop
jb
mov
hlt
pusha
mov
and
lret
cltd
inc
addl
xchg
lods
cli
leave
push
pop
lods
cmp
je
or
mov
pop
push
sub
xorl
cltd
sbb
popa
cmp
mov
add
sbb
mov
push
jne
int3
mov
lods
stos
pushf
jecxz
dec
pavgw
jnp
cmpsb
or
pop
cs
fs
sarb
cmp
popf
and
xor
sbb
pop
inc
and
or
jns
sbb
xchg
not
arpl
stos
test
pop
lods
gs
jp
lea
dec
inc
iret
mov
mov
mov
mov
idiv
dec
and
push
sbb
xor
jnp
and
in
repnz
das
dec
js
xor
sub
jae
ja
pop
jns
inc
cltd
push
jns
insb
lret
fbstp
cmp
and
leave
mov
lock
sar
push
push
cmp
insl
inc
push
push
idivb
push
add
imul
jle
dec
data16
jge
lahf
or
push
jns
cmp
jno
jp
jecxz
sbbl
js
pop
push
mov
popa
ss
ret
and
cwtl
xchg
gs
xchg
sti
test
jle
xchg
sbb
out
push
push
std
nop
lods
imul
add
adc
or
xchg
xchg
and
je
mov
add
jae
add
mov
sahf
push
int
lahf
mov
ret
testl
pushf
sbb
out
popf
jp
mov
jbe
lea
cmp
shll
sub
in
or
testb
mov
mov
sahf
in
jle
xchg
out
pop
adc
xchg
xlat
sbb
jns
pop
xor
nop
xor
dec
and
imul
lds
and
or
fldenv
aam
jecxz
cmpsb
push
fwait
out
xor
push
adc
mov
adc
cmpsl
lock
test
mov
call
add
into
mov
movsb
pop
xor
jge
insl
into
xchg
mov
mov
call
and
in
push
divps
gs
fists
adc
insb
and
cmp
pusha
push
or
std
sub
mov
stos
data16
sub
dec
mov
jmp
nop
sbb
fisttpl
movmskps
sbb
jle
pop
inc
cmovnp
mov
mov
repnz
adc
outsl
sub
sbb
stc
addr16
in
cmpsl
dec
xchg
and
andb
pop
push
push
mov
adc
mov
mov
jmp
sbb
add
mov
push
mov
mov
je
addr16
cmp
inc
mov
cmp
pop
and
faddp
or
and
pop
and
or
push
iret
pop
jl
mov
mov
mov
scas
addr16
add
popa
stc
mov
movsb
pop
shl
jbe
push
mov
lahf
inc
int3
pop
loop
jns
or
push
xchg
sub
xor
xlat
rclb
jge
xor
pop
mov
add
jb
sub
lds
mov
in
mov
fistpl
and
mov
push
out
jmp
cmp
lret
mov
dec
hlt
sahf
lock
mov
mov
sbb
or
sub
inc
jmp
scas
mov
xchg
hlt
or
cld
mov
fs
dec
in
push
ficomps
jecxz
aas
sbbl
pop
fstl
in
fildl
sahf
jnp
mov
movsb
mov
cmp
cmpsb
aaa
xor
add
ficomps
pop
or
add
mov
pusha
insb
test
arpl
and
pushf
addr16
int3
push
stos
and
inc
push
jge
shl
test
xchg
shlb
jne
inc
lock
mov
xor
jge
mov
rorb
aaa
cmpsb
dec
push
int3
mov
or
cmpsb
lahf
fwait
daa
test
xor
cli
pusha
ss
stc
in
shl
out
call
xor
lea
imul
mov
fiaddl
xchg
inc
sub
xchg
addb
add
mov
jl
sbb
pop
aam
addb
nop
scas
test
inc
scas
loop
aas
inc
dec
repnz
cwtl
mov
test
dec
xor
inc
push
mov
jne
cmp
or
mov
mov
int3
cld
ds
adc
fsts
icebp
cmp
shll
adc
mov
push
rcr
mov
lods
fists
jge
fdivr
jmp
icebp
and
and
fnstenv
xchg
shl
mov
add
jmp
js
ficoms
ret
pop
stos
fwait
dec
fiaddl
push
xchg
xchg
fnclex
test
add
sti
clc
xchg
and
add
mov
scas
jbe
xor
inc
in
aad
incl
insl
dec
pop
xor
jno
xchg
push
dec
adc
cs
xor
stos
fldt
sbbb
adc
ja
cld
push
jns
inc
lock
jnp
mov
adc
imul
inc
dec
fcompl
mov
lock
out
jne
inc
pop
shl
mov
xchg
xlat
jno
sub
and
pop
xchg
jg
cmpsb
jae
and
sbb
push
add
repnz
popf
into
std
sub
stos
js
ficompl
mov
push
cltd
jge
ror
jbe
cmp
test
cmp
adcl
into
ret
insb
mov
or
aas
stos
cwtl
pop
sti
scas
lods
adcl
cmpsb
push
push
inc
pusha
lock
into
out
sahf
xor
jmp
or
out
pop
bound
rclb
stos
inc
data16
daa
and
shll
adc
xor
xor
lds
cwtl
lods
push
push
lcall
adc
push
fisubl
pop
loopne
loop
rcr
mov
incl
jne
sub
aaa
out
xor
or
ljmp
sbbl
fnstcw
stc
lea
and
cwtl
rorb
sbb
sbb
jb
cmp
mov
fbstp
jnp
shrb
mov
and
adc
ret
sub
and
inc
fadd
fists
enter
jp
enter
push
pop
pop
es
test
mov
arpl
mov
dec
lods
sbb
rclb
add
pusha
sti
xchg
dec
pushf
hlt
inc
test
into
sti
add
sbb
and
pop
mov
and
xor
je
enter
mov
or
ret
add
dec
outsb
sub
xor
pop
mov
mov
mov
cltd
cli
je
mov
popa
fadds
push
rorl
inc
xor
mull
cmp
outsw
xchg
pop
and
test
dec
push
addr16
scas
lret
sbb
jle
sub
cld
pop
in
hlt
xchg
fs
mov
or
mov
movsl
push
mov
insb
dec
filds
lret
mov
clc
paddsb
xchg
cs
jle
arpl
imul
xchg
mov
lds
xor
push
xchg
rcrl
rolb
out
xor
xchg
xchg
xchg
adc
fcomps
stos
vandps
xor
or
fs
or
push
fdivrl
rclb
aad
xor
in
inc
in
in
test
adc
repnz
loopne
push
imul
fdivrl
add
jl
aas
jmp
arpl
ds
jmp
ja
inc
mov
mov
pop
divb
dec
mov
xor
mov
dec
pop
adc
jae
in
clc
lods
stos
les
int3
mov
pop
or
jp
fimuls
xchg
and
push
and
pop
xorb
in
sbb
icebp
xor
dec
add
push
push
sub
or
sub
pop
lret
mov
cmp
movsl
cmpsl
xlat
out
sub
cmp
mov
xchg
je
je
iret
pushf
data16
push
push
dec
repz
scas
mov
xchg
mov
addr16
out
push
xor
xlat
jmp
lock
jge
loope
mov
pop
lods
pushf
imul
ficoml
movsb
xlat
fsubs
or
insb
dec
cld
sub
lea
and
add
push
in
pop
sarl
inc
fisubl
mov
das
xchg
mov
xor
mov
popa
xor
and
push
mov
divl
jmp
fstl
cs
push
mov
jbe
ret
outsb
sub
popa
xchg
rclb
fnstenv
arpl
push
pop
fisttpl
xchg
mov
jae
cmp
xor
jnp
add
push
aas
cld
jmp
out
cmp
xor
xor
mov
mov
inc
sbb
pushf
outsb
push
shrb
push
adc
mov
outsb
xchg
xor
push
jo
int
dec
sub
aam
icebp
mov
call
sbb
in
decl
loopne
and
mov
xlat
notl
mov
mov
mov
lret
sbb
das
shl
clc
sub
data16
sbb
inc
hlt
mov
iret
push
xor
leave
movsb
pop
ss
adc
fcomps
fnstsw
adc
jns
out
sbb
jge
or
sub
mov
xor
lahf
mov
lea
pop
sbb
mov
mov
and
push
les
push
mov
lds
xlat
adc
aas
pop
sub
into
or
bnd
pop
sbb
aaa
dec
aas
dec
jae
pop
jae
and
ss
inc
sbb
add
roll
dec
lea
sbb
pop
nop
aad
enter
mov
fnsave
ds
xchg
sbb
aam
lret
std
data16
push
xor
es
dec
mov
jg
sbb
jg
mov
rcll
xchg
icebp
xchg
xchg
decl
mov
aaa
call
enter
xchg
xorb
xchg
xchg
jnp
pop
pop
cmp
negl
lea
ljmp
movsb
dec
jns
sub
xchg
xchg
sbb
cmpsb
or
ja
and
rcl
xlat
sub
pop
out
je
daa
cld
xor
fs
sbb
mov
les
mov
add
fisttpl
jnp
pop
sub
popf
xchg
xor
add
jp
mov
movsb
pop
stos
mov
shl
test
mov
xor
nop
cmp
movsl
lods
inc
cmp
cwtl
jl
test
xchg
scas
lahf
mov
xchg
sub
and
dec
mov
adc
shll
jo
into
jne
fldenv
inc
xchg
cltd
out
jecxz
clc
cmpsb
fnop
pop
pop
ret
subb
in
inc
and
push
cwtl
andw
mov
mov
insb
inc
out
jno
imul
pusha
or
testl
mov
mov
push
fisttpl
xor
pop
cwtl
add
xchg
cmpsl
das
or
insl
ficomps
roll
lods
orb
icebp
mov
popf
adc
in
scas
test
jno
jb
cmpl
sub
sbb
jle
jbe
mov
mov
or
outsb
mov
adc
fs
lret
popf
adc
ja
cmp
aad
je
mov
movsb
imul
adc
add
lret
mov
aas
ret
push
and
pop
pop
leave
cltd
inc
sbb
lock
cwtl
sbb
rcrb
and
testb
fistps
push
movzbl
jmp
les
ss
cltd
loopne
or
incl
je
inc
lods
scas
jecxz
jmp
icebp
cs
dec
pop
je
lcall
push
out
imul
in
popa
rolb
dec
cmp
xchg
cmp
subl
mov
aam
cltd
xor
lock
xchg
xchg
mov
rorl
inc
fwait
cmpsl
sbb
fidivl
popf
cmp
in
jge
jge
jg
and
jmp
mov
insl
push
fsubr
scas
xor
mov
mov
pop
mov
faddp
inc
sub
cwtl
pop
cmpb
insl
loope
ret
cmp
dec
shll
dec
lock
xchg
mov
fsubs
mov
add
or
xor
adcb
dec
pop
fs
test
mov
popf
leave
inc
ret
cmp
xchg
adc
stos
dec
xchg
cmp
push
enter
sarb
adc
xor
insb
inc
pop
sti
pop
bound
and
mov
std
test
mov
and
lahf
icebp
sub
outsl
sub
mov
jbe
pop
pop
lret
add
into
cs
mov
aaa
add
cmp
and
rcll
mov
pop
mov
jmp
push
sbb
mov
popaw
std
andb
xchg
lret
pop
pop
xor
in
insl
mov
out
or
pop
lret
adc
mov
arpl
int
movsl
pushl
mov
push
sbb
cmp
pop
inc
push
xchg
inc
cld
cmc
movaps
xchg
aaa
push
cs
dec
xchg
mov
cltd
popa
mov
test
or
sbb
adc
xchg
clc
cmp
rcl
pop
xor
inc
in
xchg
xlat
mov
xor
mov
nop
mov
pop
pop
sbb
cmc
imul
or
outsl
les
add
daa
and
fisubl
outsb
sub
cltd
mov
fmull
add
mov
hlt
adc
mov
das
xlat
mov
fs
mov
xchg
loop
sub
jmp
mov
xchg
and
ret
outsb
shll
test
imul
lds
mov
pop
xor
fisttpll
sbbl
pushf
test
out
dec
mov
xor
ret
jmp
imul
ret
pop
add
push
mov
in
lods
sbb
pop
das
mov
jge
dec
sub
in
mov
das
fstpt
sbb
pop
sahf
cmpsb
lods
iret
into
adc
jns
cmp
push
push
scas
adc
xchg
xchg
or
adc
repz
ret
test
out
add
adc
shrb
pop
mul
js
hlt
js
and
and
fimuls
xor
pop
cli
out
mov
fdivrl
es
popa
lcall
push
xchg
ljmp
iret
jne
das
ret
add
scas
adc
or
das
divl
adcl
inc
out
fdivs
divl
push
fmuls
inc
stc
sbb
int
push
mov
fisttpll
pop
imul
adc
inc
pop
cmp
out
mov
sub
outsb
rcl
js
sbb
shlb
js
shrl
xchg
xor
adc
rolb
fsub
ret
xor
cmp
xchg
sti
push
pushf
test
mul
hlt
mov
jp
mov
jnp
into
adc
daa
fdivl
or
sarb
push
add
or
sarl
xor
mov
out
xchg
xchg
ds
popf
std
fwait
aas
push
mov
pop
cmp
dec
mov
stc
andl
pop
inc
ror
leave
adc
jg
ret
int3
push
dec
arpl
sbb
lret
mov
and
add
mov
mov
jno
or
add
enter
dec
icebp
sbb
cwtl
and
jb
and
dec
and
jb
cs
pop
jmp
push
in
out
mov
stos
push
xchg
cmp
inc
jmp
lret
or
cmpsl
outsl
jmp
dec
std
js
pushf
fs
outsb
shl
loop
push
mov
in
jb
clc
and
cltd
insl
lds
ror
mov
xchg
ljmp
xor
push
mov
cwtl
push
or
cltd
icebp
mov
pop
and
and
cs
vmwrite
js
mov
fstp
aas
sub
mov
adcb
mov
popa
push
addr16
mov
lds
fldt
popf
loopne
fnstsw
addr16
mov
inc
test
ljmp
pop
in
push
scas
bswap
in
mov
and
lods
movsl
or
ret
in
jns
xor
stos
iret
fldcw
insl
cld
sahf
or
out
xchg
clc
mov
mov
push
in
mov
pusha
or
aam
imul
aad
jns
cs
xchg
push
xchg
ret
and
xor
cmp
lret
cmp
jmp
and
pushf
es
cld
cld
mov
pop
jp
push
push
jmp
inc
cmp
mov
inc
ret
fldcw
ja
pusha
and
mov
out
jmp
movsb
pop
lods
sub
push
roll
icebp
in
and
push
mov
and
and
sbb
mov
in
sub
pop
test
jns
popf
sbb
mov
inc
movsl
jnp
push
jg
sub
inc
repz
enter
fwait
pushf
aam
adc
jecxz
fdivrp
push
out
aam
xchg
xchg
mov
push
ljmp
aas
mov
xor
inc
and
or
mov
dec
incl
jne
jle
mov
xchg
mov
fisubrs
scas
jmp
push
in
negb
test
add
shll
loop
push
jp
fs
jmp
pop
xchg
jl
leave
xchg
jecxz
sub
or
sub
inc
mov
mov
imul
mov
ds
cli
loope
dec
mov
inc
test
push
xchg
mov
cwtl
lock
xchg
in
or
dec
movsl
jns
inc
lahf
insl
aaa
xchg
dec
pop
cmp
divl
imul
adc
xchg
fnstsw
xchg
js
enter
push
and
sbb
jno
push
leave
ja
movsb
inc
pop
cmc
leave
movsb
fdivrl
adc
sub
jbe
pop
js
sub
std
das
pop
push
jne
cmp
sub
jg
dec
insl
ds
xchg
push
add
cwtl
sbb
fisubs
jno
dec
loopne
adc
push
nop
xor
sbb
mov
inc
lret
scas
sbb
ret
cmp
mov
test
xchg
ja
and
jmp
fimuls
sub
dec
adc
sbb
cltd
insl
pop
dec
sub
cmc
out
jg
jle
xchg
mov
dec
iret
test
add
sub
dec
mov
cmp
push
cmp
int3
ss
pop
je
imul
push
cmpsl
and
jp
test
mov
shlb
outsl
or
jecxz
mov
inc
fs
mov
pop
pop
jmp
adcl
add
xor
jg
stos
sahf
mov
dec
gs
add
or
mov
or
lcall
jge
lods
fdivr
in
imul
sub
jg
adc
sbb
sbb
and
cli
and
aas
add
jecxz
mov
cmc
adc
ss
dec
jae
mov
aam
aad
pop
iret
pop
je
adc
and
push
lret
xor
test
cmp
inc
jg
fsubl
jo
add
stc
and
pop
leave
decb
xor
in
xchg
movsb
fsts
xchg
adc
push
call
cmp
inc
xchg
nop
mov
or
dec
ja
inc
movsl
rcr
adc
push
andb
aad
lcall
lcall
inc
movsl
inc
outsl
scas
shlb
in
gs
xchg
pop
fnstcw
fmul
inc
andb
sbb
or
int
imul
push
es
clts
test
fisubl
pop
dec
add
ja
mov
xchg
lea
xchg
jmp
mov
stos
mov
adc
cld
fs
adc
imul
fldcw
or
push
sub
cli
mov
cld
not
adc
daa
pop
push
rcrl
jle
mov
sbb
add
adc
inc
dec
outsl
inc
push
pushf
mov
lret
jecxz
fisubs
call
push
ret
mov
mov
leave
push
js
add
loope
fistps
jl
mov
jo
xor
movsl
fisubl
add
mov
mov
shll
popa
es
movsl
int3
or
outsl
jl
movsb
xchg
sub
shll
popa
dec
dec
fbstp
cmc
js
xchg
add
jecxz
adc
dec
loopne
int
imul
rcrl
in
jecxz
jae
call
inc
loop
stc
push
cmp
jecxz
cmc
inc
incl
shrb
ljmp
mov
test
or
or
int3
jp
sbb
into
adc
mov
stos
pop
test
lds
jl
jno
js
sbb
iret
push
sbb
inc
das
cltd
sti
fsubl
mov
jb
popa
aaa
ja
adc
jp
int
adc
lds
test
xchg
xchg
xchg
inc
mov
mov
dec
xchg
frstor
cmp
test
and
jg
les
shll
mov
cld
sbb
jmp
lods
mov
pop
popf
dec
je
daa
pop
dec
cs
xor
and
xor
dec
ret
jae
scas
sub
pop
mov
pop
movsl
out
and
stos
test
frstor
cmp
fiaddl
adc
inc
lds
jae
es
mov
out
rclb
or
and
fcmovu
lods
dec
add
imul
scas
mov
sub
sub
cmc
iret
sub
fmulp
stos
push
dec
in
ljmp
xor
sub
mov
push
sub
cmp
dec
cmp
dec
ds
pusha
sbb
das
mov
daa
adc
cwtl
mov
pop
lods
in
ja
fsubr
cmc
das
xchg
push
out
insl
test
out
sarb
dec
jnp
lcall
pop
test
dec
rcrl
orl
add
inc
mov
xor
out
inc
or
sbb
pusha
mov
test
testb
call
mov
int
xchg
jle
xchg
pop
pop
loope
outsb
inc
cmp
iret
sbb
mov
sbb
jmp
sbb
dec
mov
inc
in
int
cltd
xchg
dec
lcall
sbb
es
pop
mov
mov
fdivs
shl
inc
xchg
mov
mov
ja
lods
test
add
in
enter
fs
shlb
adc
pop
xchg
hlt
leave
gs
addb
ds
shlb
cmp
shlb
dec
movl
jecxz
xor
fwait
mov
ss
fimull
subl
call
push
orl
aaa
cmc
inc
push
cmp
jmp
fstpt
mov
push
sti
mov
gs
push
clc
mov
xor
out
loopne
ret
mov
mov
inc
mov
or
mov
cmp
arpl
push
xchg
mov
mov
sbb
stos
call
push
shlb
cli
lods
xlat
or
in
sbb
xor
int
adc
jp
cltd
out
mov
jns
dec
call
mov
aad
or
add
xchg
jb
mov
adc
fs
add
push
pop
cmp
loope
fnstcw
mov
lea
test
ja
imul
and
jne
mov
sbb
movsl
push
add
imul
leave
mov
cmp
pop
std
in
loopne
lret
adc
lock
lret
dec
ud1
sbb
int
fsubs
mov
pop
in
dec
xor
ja
lods
push
frstor
gs
adc
jne
jo
push
sub
aaa
mov
test
push
aam
fidivl
scas
push
into
addb
sar
cli
push
aaa
dec
mov
addr16
pop
xlat
pop
sub
ljmp
hlt
ja
dec
push
push
mov
aam
and
cwtl
adc
push
cs
mov
cs
mov
call
sbb
in
sahf
add
mov
mov
inc
rorl
in
inc
das
js
or
push
or
leave
pop
aad
rcrb
es
negb
int3
lock
adc
clc
in
fwait
xchg
loop
aad
ficompl
lods
aas
fldcw
js
xchg
cmpsl
in
test
rolb
and
adc
sub
pop
add
add
push
sbb
cmpsl
adcl
imul
pop
inc
hlt
inc
mov
mov
in
push
sahf
cmc
inc
test
int
xchg
push
aam
mov
and
push
xchg
and
bound
pop
or
sahf
test
mulb
adc
inc
sbb
xor
cmp
inc
ja
les
pop
shrl
xchg
aad
mov
pusha
sbb
inc
or
repz
pushf
inc
shrl
repz
jl
insl
mov
pop
pop
ljmp
aad
insl
sbb
xor
ret
add
jnp
jecxz
iret
xchg
in
pop
sbb
int
lahf
xor
or
pop
push
ja
ficoml
in
std
stos
in
data16
popa
lret
sbb
xchg
ja
add
mov
les
mov
jb
mov
jmp
mov
aad
pusha
push
inc
inc
js
xchg
add
sahf
sub
mov
jge
push
sub
push
inc
push
scas
in
and
xchg
or
inc
data16
or
outsl
loop
scas
jnp
sbb
mov
pop
sub
jne
repnz
lds
xor
dec
fnstsw
adc
arpl
xchg
outsb
pop
mov
add
inc
icebp
sahf
rcll
xchg
pop
cmp
faddl
push
popf
loop
sbb
and
fbstp
and
dec
loop
in
sub
push
mov
cs
sbb
std
inc
loope
add
xor
sbb
popa
inc
pop
lods
cs
add
stos
xchg
dec
jb
scas
push
js
pop
sti
aad
sub
sti
es
xor
push
cmp
adc
test
pop
aas
cmpsl
jge
xor
ret
push
jnp
pop
mov
dec
jne
addr16
xor
stc
push
pop
mov
cld
std
sti
imull
push
testb
adc
pushf
leave
pushf
cltd
mov
add
dec
or
iret
std
xor
out
ficoml
sbb
sbb
inc
sbb
pushf
xor
push
pop
push
adc
mov
addb
int3
rcrb
or
mov
dec
stc
inc
cmp
push
jle
dec
sub
inc
jb
test
shl
xor
cmp
pop
xchg
cs
out
adc
test
mov
xchg
lods
and
dec
adc
cmp
inc
test
mov
sbb
iret
pusha
jmp
sbb
and
inc
sub
insb
sbb
cmc
or
cmpsl
adc
push
sub
fstps
jmp
cmp
xchg
pusha
add
test
and
dec
xchg
xor
aas
push
fisubs
dec
mov
xchg
subl
pop
loop
notb
add
or
dec
addr16
test
call
repnz
sahf
cltd
jae
push
sbb
dec
push
inc
or
shrb
jae
jecxz
cmp
cli
pusha
cld
pop
enter
mov
mov
mov
adcb
dec
inc
jnp
cmp
xorb
mov
cmc
push
test
add
mov
imulb
dec
adc
dec
mov
fildl
arpl
cmp
mov
cwtl
lds
push
popf
divl
outsl
inc
lret
pop
dec
test
add
mov
add
xor
lret
xor
inc
xchg
add
loop
cmc
fldl
push
es
dec
dec
mov
and
push
mov
push
ljmp
arpl
sarb
push
rclb
mov
lret
lods
lret
aas
cmp
icebp
test
sbb
mov
negl
dec
test
pop
jl
lods
xchg
scas
lea
mov
sbb
sbb
lahf
jnp,pt
repnz
sarl
add
fimuls
out
pop
insl
jno
js
mov
scas
jae
in
xor
aam
jmp
das
mov
jecxz
fadd
test
inc
pop
sbb
adc
nop
das
test
cmpsl
inc
addr16
jp
aas
xchg
jp
movsb
pop
into
imul
icebp
int
xor
lcall
and
aam
xor
mov
icebp
add
lea
jg
dec
fiaddl
mov
fbld
fisubs
pop
divb
mov
and
ljmp
into
xor
cmp
cmc
and
mov
movsb
adc
stos
mov
jmp
xlat
dec
pop
or
xor
or
das
insl
loop
inc
mov
imulb
aas
xor
outsl
sahf
push
cmpsl
lea
mov
adc
negl
outsw
cwtl
into
sti
lock
mov
pop
cmp
mov
addr16
adc
jge
mov
xor
iret
add
sti
lock
dec
and
stos
jb
int
lods
pop
sbb
ljmp
add
int
scas
add
push
sub
out
fstpl
ja
aaa
inc
push
cmp
jecxz
inc
iret
xor
iret
dec
repnz
in
mov
mov
push
sub
es
dec
sbb
insl
and
mov
jp
icebp
add
mov
add
imul
xor
pop
or
test
sti
mov
loopne
int
stos
icebp
xchg
sub
add
idivb
jbe
lahf
adc
push
or
jp
enter
hlt
xor
sub
mov
mov
xor
stc
xor
lret
out
pop
daa
sti
jno
cmp
out
push
mov
and
xchg
mov
inc
insb
movsl
and
push
mov
ss
sbb
and
in
or
xlat
cmpsb
cli
jecxz
add
fildl
inc
shrl
jnp
cmc
sbb
and
pop
inc
sbb
inc
loope
adc
and
push
push
lods
jne
inc
cli
dec
jns
addr16
hlt
cmp
popf
mov
stos
pop
xchg
jo
gs
add
mov
xchg
xor
in
add
in
push
dec
mov
mov
out
cmp
movsl
pop
lahf
fdivrl
into
pop
xchg
outsb
inc
imul
into
aad
out
jbe
negb
or
cs
xchg
je
jno
mov
pop
cmp
adc
xchg
das
outsl
pop
cmp
rclb
dec
or
xor
mov
xor
and
push
dec
js
negl
test
sub
imul
rol
stc
rcrb
inc
std
and
in
or
test
fsubrl
in
xor
insl
das
in
mov
cmp
gs
das
jle
inc
pusha
cmpsb
lods
inc
lods
jnp
pop
jns
jmp
lock
adc
je
rcl
adc
pop
sub
fcmovne
js
cmp
sbb
xchg
sub
lcall
std
adc
mov
adc
in
push
test
xchg
insb
push
mov
sub
sbb
xchg
xchg
xchg
or
jns
mov
cmp
or
jae
repz
test
sub
sti
popf
push
mov
js
add
jp
and
add
mov
jns
pusha
mov
xor
pop
mov
jl
aas
push
jmp
mov
sbb
cmp
jecxz
inc
das
dec
sub
test
push
and
mov
bound
add
div
push
jae
test
inc
loope
fsubrl
out
pop
repz
mov
mov
movl
gs
xor
cmpsb
jmp
ret
inc
cmpsl
rep
pop
jae
cmp
cmp
sbb
insb
int
repnz
and
fwait
inc
das
fldl
rcrb
addr16
mov
cwtl
add
xchg
test
sbb
and
ret
push
aam
leave
inc
dec
cmp
out
sub
add
inc
or
mov
push
push
jecxz
imul
push
xchg
mov
rcrb
stc
pop
in
push
jg
pop
ficomps
xlat
addb
adc
jg
push
fucomi
xchg
lods
repz
xchg
aaa
shll
bound
jg
stos
sbb
push
pop
sub
or
fwait
dec
cmp
jle
shr
mov
imul
sbb
sub
outsl
sbb
out
lea
pop
xchg
into
imul
mov
dec
xor
stc
jno
test
adc
test
sub
dec
icebp
mov
push
xor
gs
xchg
leave
inc
dec
dec
xor
mov
ret
push
sbb
test
std
pop
or
mov
scas
xor
mov
shlb
push
xchg
jne
out
inc
lahf
push
fs
stos
push
add
pushf
and
loope
rclb
adcl
loopne
inc
int3
notl
aad
testl
lods
ja
test
sbb
cs
pop
mov
dec
scas
push
cltd
sbb
xor
outsl
outsl
pop
xchg
jne
push
into
in
test
xchg
mov
push
pop
and
out
in
inc
jae
xchg
in
jp
call
mov
and
and
sbb
add
xor
pop
mov
jnp
in
fmuls
adc
gs
cld
pop
xor
push
out
add
or
xlat
mov
sbb
dec
test
push
jge
add
std
nop
ja
dec
ja
ljmp
lds
std
loop
lcall
call
inc
lods
add
push
jle
cwtl
or
jp
push
push
test
fcmove
fnstcw
sub
int
sbb
and
inc
mov
sub
dec
and
stos
movsl
mov
mov
enter
mov
xchg
cmp
sbb
outsb
jge
es
inc
nop
mov
mov
mov
push
lea
add
add
push
dec
dec
dec
iret
inc
iret
inc
push
lcall
pop
lcall
bnd
and
bound
mov
sub
jle
les
mov
les
ljmp
xchg
jmp
fsubrs
and
ljmp
xchg
pop
push
dec
push
and
hlt
je
mov
loope
insb
fisttpl
addr16
adc
and
jb
mov
cmpsl
xchg
pusha
mov
ret
xchg
mov
mov
cltd
mov
in
dec
push
pop
cmp
push
mov
in
cmpsl
pop
ljmp
mov
outsl
xchg
fcmovu
ret
or
imul
xchg
leave
stos
ss
pop
pmuludq
test
lret
enter
mov
test
sbbl
je
ja
jg
xchg
jg
enter
push
sub
jne
dec
rcrl
mov
dec
add
adc
fildl
das
mov
dec
int3
mov
adc
xor
add
mov
xchg
inc
cmp
mov
lret
add
dec
jecxz
mov
mov
call
inc
mov
mov
cltd
sbb
mov
mov
xor
jp
inc
dec
and
push
gs
push
push
aaa
sub
cwtl
adc
cmc
sub
data16
jo
dec
xor
pop
lcall
divl
mov
mov
push
std
fnstsw
cs
repz
add
pop
add
int
xchg
mov
pushf
insl
xor
filds
pop
leave
nop
sbb
push
xchg
xor
jbe
add
sub
arpl
cwtl
dec
xchg
cmc
mov
fsubl
mov
cmp
xchg
jo
int3
fs
or
adc
ds
mov
add
das
fdivl
push
orb
orl
xor
push
add
lret
pop
bound
sbb
lret
sub
pop
pop
fisubs
int
mov
adc
push
notl
pop
jo
test
cmp
mov
int
pop
outsb
jb
or
add
push
and
orl
leave
enter
pop
shlb
sub
sub
mov
ret
shrb
mov
decl
push
sub
repnz
sbb
push
ljmp
pop
ret
push
dec
out
mov
lea
int
jne
xchg
popa
inc
and
mov
cs
jne
fcompl
cmp
xchg
jb
and
ss
inc
cmp
jp
loopne
jl
mov
loop
stc
insb
in
sar
mov
in
push
pop
xor
pop
adc
xchg
lds
movsb
sarl
cmp
add
sub
pop
ss
sbb
gs
popf
fisttpll
out
sub
push
mov
cmpl
lock
in
adc
ds
or
sbb
pop
cmp
jns
mov
mov
in
mull
adc
xchg
sahf
popa
dec
shll
and
filds
lret
jge
xchg
ljmp
jg
dec
cmc
fisubrl
sbb
cmpsb
push
xchg
mov
pop
fs
push
into
ss
push
or
sbbl
push
dec
lods
pusha
dec
sbb
sahf
cmp
pop
scas
stos
adc
loop
outsb
xor
jp
mov
ja
push
sub
pop
js
push
lods
sti
repz
rorb
mov
lock
adc
xor
mov
movsl
scas
jbe
dec
fsubl
or
xchg
sub
sub
test
lds
call
jmp
jl
xchg
sub
es
add
add
icebp
cmpsl
std
mov
jg
insl
pop
dec
aaa
sbb
movsl
dec
jb
pop
sbb
mov
mov
inc
in
add
mov
cmp
or
repz
mov
xor
sub
mov
cmpsl
cwtl
push
shll
mov
xchg
pushf
fs
ja
add
cmp
aad
enter
std
iret
jge
popf
adc
xor
ret
rcrl
out
mov
jnp
repz
adc
jno
xchg
jge
or
cld
movsb
xlat
pop
ret
inc
and
pop
in
sbbl
shrl
jno
xchg
mov
ret
or
fisttpll
inc
mov
push
fdivs
subb
lcall
pop
or
xchg
pop
mov
loop
sub
cmp
mov
out
lret
out
inc
es
popf
stos
jmp
addb
dec
push
mov
dec
adc
jae
je
les
lock
out
insb
aam
rol
aam
xor
cltd
fcomi
pushf
mov
bound
xchg
inc
cwtl
mov
dec
sbb
cwtl
int
fists
test
dec
jmp
cmp
cld
mov
mov
xchg
lock
xor
inc
hlt
hlt
in
lcall
add
nop
dec
scas
xlat
mov
lcall
lods
mov
pop
outsb
pop
xchg
int3
xor
das
cmc
outsl
pop
lcall
jne
mov
mov
stos
mov
daa
adc
or
in
pop
stc
cmp
in
ja
flds
popf
sub
mov
mov
inc
xchg
inc
cmp
loope
cld
outsl
shll
mov
push
pop
ss
push
iret
sbb
movsb
and
movsb
and
mov
stos
xor
or
es
push
jp
pop
scas
push
sbb
adc
mov
sahf
adc
aas
stos
fwait
pop
sbb
pop
xlat
cltd
push
jge
mov
ret
add
pop
mov
jb
pop
fsubrl
mov
add
pop
push
popa
push
push
and
jno
ret
jo
xchg
imul
fnsave
pop
nop
xchg
xchg
test
lds
mov
push
pop
pop
inc
add
daa
mov
cmp
notl
into
lahf
addr16
in
push
cmpsl
fisubrs
out
jle
ficoms
xchg
mov
mov
fisubrl
shlb
jl
shrl
jbe
xor
std
sbb
dec
insl
push
loopne
sub
fcoml
sub
xchg
fdivr
cmpsb
mov
mov
or
in
insb
dec
repz
push
test
in
sbb
bound
std
je
xchg
es
mov
into
push
xchg
cmc
scas
je
mov
dec
add
es
xor
cs
lret
out
mov
imul
cmp
mov
rclb
fs
jle
movsl
lods
into
push
fsubrs
fs
cmpb
mov
cmp
sbb
xchg
outsb
sub
jmp
inc
cmpsl
sbb
rclb
jp
sbb
jp
lahf
lds
lcall
xor
jecxz
mov
cmc
mov
in
xor
add
cmpsb
cli
leave
pop
popf
mov
and
lcall
pop
and
mov
ret
mov
subb
out
repnz
enter
std
outsl
xchg
adc
or
sub
sub
out
aas
xchg
pop
out
mov
jns
pop
jno
or
mov
imul
aas
cltd
aas
push
cmp
lods
mov
pushf
andl
repz
mov
push
pop
xchg
push
ja
push
sub
jmp
mov
pusha
jbe
inc
xchg
daa
andl
xchg
xlat
jns
cli
adc
or
sub
lods
inc
push
sbb
sub
ret
dec
fdivrp
movsb
add
pop
jle
and
mov
sub
loopne
push
lock
std
mov
mov
mov
pop
xchg
int
ret
xorl
fwait
xor
aas
dec
lahf
add
jg
bound
jecxz
push
mov
int3
push
iret
add
xchg
arpl
jg
push
cltd
pop
xchg
mov
into
jns
add
jbe
pop
push
cmp
mov
ja
sbb
mov
out
imul
sbb
add
push
push
add
xchg
push
sbb
xor
gs
test
or
js,pt
adcl
pop
leave
ljmp
pushf
mov
dec
mov
push
lcall
mov
subl
fcompl
aad
jbe
push
imul
cld
insb
xlat
sub
and
cmc
mov
movsb
xchg
imul
ja
subl
xlat
add
xchg
in
mov
mov
lret
mov
xchg
jo
bound
imul
arpl
gs
es
push
inc
cltd
xchg
int
dec
cmpsl
lods
push
sbb
lds
cltd
orb
rol
ret
jne
test
insl
aam
hlt
lmsw
push
jnp
sub
push
dec
loopne
std
jecxz
push
mov
xchg
mov
dec
shrb
in
out
push
mov
loopne
mov
xor
popa
cmp
sbb
lods
test
loop
adc
sub
or
cmp
sub
push
pop
mov
mov
mov
lahf
cs
or
movsb
sar
js
push
and
inc
fs
pushf
adc
mov
out
push
ficoms
ret
rcll
pushf
jbe
psubb
sub
inc
dec
xchg
fdivs
outsl
lods
lods
orl
mov
into
push
cli
int3
mov
fadds
mov
sbb
out
scas
popf
push
mov
push
imul
lret
in
ja
dec
dec
cmp
andl
lret
pop
inc
dec
stc
xor
mov
pop
xorl
aad
mov
mov
lods
xchg
sub
sub
cli
in
out
and
js
or
sbb
sub
xchg
lcall
jno
test
sarl
aas
jmp
add
gs
imul
or
into
sti
ds
and
in
dec
pusha
dec
in
pop
inc
inc
aas
xchg
jb
lods
frstor
inc
mov
nop
inc
mov
cmpsb
add
shrb
rcll
push
in
mov
lods
test
aad
push
pushf
test
mov
popa
dec
push
call
rol
xchg
fcoms
hlt
aam
movsl
jge
pop
fs
or
or
sahf
out
jns
inc
mov
movsl
rclb
push
les
and
push
inc
dec
jl
scas
rcrb
jb
or
notl
and
jmp
arpl
and
stos
fisttpll
enter
sbb
iret
push
sbb
lcall
dec
xchg
mov
mov
fwait
mov
jmp
stos
push
pop
push
into
mov
cmc
jns
es
ret
jo
std
hlt
mov
and
int
shlb
subb
in
cmovne
in
fildll
add
adc
shrl
push
pop
xchg
pop
dec
les
test
lock
mov
mov
iret
cmp
movsb
jge
push
mov
in
add
mov
mov
add
popf
mov
sti
mov
lods
push
clc
fstpl
pop
jno
sub
cmp
dec
in
dec
imul
insl
adc
pop
daa
xor
xchg
icebp
or
aaa
pop
pop
imul
mov
jmp
or
repnz
fmul
in
mov
pop
iret
pushf
enter
pop
xchg
push
and
pop
mov
xchg
ss
and
push
mov
push
loopne
icebp
add
orl
pop
movsb
leave
mov
and
sbb
mov
push
xchg
dec
inc
jmp
and
push
cmp
rorl
jnp
popl
and
push
ret
aad
popf
and
pushf
jns
or
mov
push
and
xchg
mov
sub
cmp
fwait
rclb
scas
notb
cmp
in
dec
out
pop
in
sar
stos
lahf
cmp
hlt
push
push
xor
pop
xor
lret
rorl
pusha
int3
cmp
ljmp
sub
rorl
out
les
xor
xchg
pusha
shll
mov
push
lcall
dec
int3
test
fwait
and
in
jmp
jno
mov
cmpsl
or
jb
xchg
inc
fsub
int3
mov
jmp
ret
out
sub
sbb
jg
cld
sub
cmp
dec
cs
push
lods
mov
mov
mov
icebp
addr16
rol
cmpl
mov
imul
insb
frstor
test
clc
sbb
repz
mov
scas
mov
mov
gs
mov
mov
js
xchg
call
xor
addr16
jecxz,pt
insl
fidivrs
cmp
ret
lret
push
iret
add
mov
movsb
int3
mov
mov
popf
jne
cmp
inc
jge
jno
mov
imul
jne
hlt
into
in
aad
ss
xchg
xchg
movsl
cli
loop
xlat
sarl
jbe
repz
and
cmp
inc
cmp
dec
aaa
xlat
call
ljmp
jp,pt
mov
rcll
aaa
mov
imul
cmp
imul
outsl
add
xchg
stc
lock
lea
daa
cmp
adc
and
mov
inc
cli
leave
pop
mov
pop
daa
xchg
pop
add
repnz
loopne
dec
push
icebp
inc
daa
xchg
add
or
push
sub
in
mov
cs
cli
dec
cmpsb
sub
scas
inc
sbbb
popa
sbb
data16
ds
aaa
aaa
xor
inc
and
insb
cmpsl
aaa
push
inc
sub
xchg
js
mov
xor
mov
aad
add
mov
or
mov
out
inc
mov
dec
mov
int
xor
mov
addb
fdivrl
lahf
xchg
js
dec
mov
imul
cs
cld
aam
mov
aam
push
cmp
mov
cmpsl
ja
sahf
and
fistps
loope
aad
shrb
cmp
or
mov
add
add
add
adc
sti
mov
sub
pop
je
or
and
cmp
test
jg
cmpsl
mov
adc
lds
dec
rorl
xor
push
jmp
subl
sbb
dec
mov
push
adc
push
xchg
inc
or
mov
add
repnz
icebp
and
jns
in
and
dec
out
sub
movsb
xor
ja
imul
sub
mov
mov
orl
outsb
imul
stos
mov
jp
pop
push
std
or
fdivl
push
push
mov
aad
fcoml
adc
sbb
test
cmp
mov
inc
push
divb
mov
xor
and
cltd
mov
stc
lock
fsub
add
cmp
test
xor
int
sbb
mov
xchg
pop
add
jg
xor
fildl
xor
imul
xchg
pop
test
pop
xor
bound
aad
xchg
int3
cmp
aaa
xor
out
dec
ret
in
dec
add
imul
adc
add
aad
fwait
ret
mov
std
bound
push
jnp
or
hlt
xchg
jg
push
push
push
shlb
sahf
movsb
jbe
popa
imul
jns,pt
test
sarl
popa
adc
cmpb
fsub
mov
adc
inc
loop
popf
cmp
lcall
sbb
lret
cmc
adc
negl
fwait
mov
out
sahf
mov
addl
aaa
cmp
in
aad
pop
pop
jg
push
xor
xlat
ret
lret
cmp
jl
jle
ss
cs
ret
adc
pushf
popa
xchg
sbb
iret
ljmp
xchg
push
clc
pop
jae
cmp
xchg
mov
pop
push
scas
test
mov
jbe
cmpsl
cmp
sub
stos
and
cmp
int3
sbb
lea
xchg
mov
dec
lock
mov
out
out
pusha
loop
jmp
or
ljmp
push
jecxz
pop
dec
adc
cmp
mov
je
lret
push
les
pop
xchg
lahf
fcoms
jmp
fisubrs
push
xchg
nop
push
rorl
and
clc
repnz
mov
xor
loop
mov
ret
xor
outsl
scas
dec
sub
xchg
into
mov
mov
les
lcall
xchg
test
mov
icebp
mov
lret
es
iret
push
cmp
mov
inc
inc
dec
add
pop
ljmp
lret
jl
and
inc
pop
cld
cmp
adc
xchg
mov
ficomps
lcall
pushf
arpl
cmp
mov
cld
cmp
pop
outsb
and
push
add
mov
in
jnp
int3
pop
mov
adcl
scas
rcl
hlt
jle
in
out
inc
mov
in
repnz
push
subw
dec
jne
xor
dec
adcb
popa
pop
xchg
clc
mov
pop
dec
stos
inc
out
and
negb
call
rcll
add
call
int3
or
in
add
popf
mov
and
mov
stos
ljmp
pop
repz
mov
lock
mov
aas
ja
lcall
add
sub
dec
or
das
scas
movsl
push
aad
jnp
repnz
mov
pusha
mov
dec
hlt
pop
xchg
in
js
mov
mov
sti
faddl
adc
js
lds
popf
jge
xor
push
cmc
adc
aad
je
loop
fsts
adc
rorl
test
mov
hlt
call
mov
imul
cld
mov
mov
popa
aad
pop
push
add
add
icebp
ja
jno
jo
loopne
xchg
daa
addb
lds
repz
sub
push
push
and
mov
pop
call
adc
jb
sbb
mov
cli
add
dec
fstl
out
and
add
xchg
push
cmp
dec
lds
cs
decl
sbb
int3
push
push
cmp
or
pop
inc
cmp
xchg
mov
mov
out
mov
pop
in
test
inc
and
push
or
adc
movsb
in
fstpl
popf
push
jmp
outsl
adc
mov
pop
sbb
lock
rcll
aaa
orb
cli
aaa
imul
inc
and
pop
and
pop
or
std
sahf
mov
cmp
jg
je
dec
int
in
stos
mov
sub
or
loop
in
jle
insl
mov
call
lahf
mov
sub
push
lds
or
ret
push
test
xchg
out
out
mov
push
idivb
mov
nop
sub
xchg
dec
sbb
lds
or
call
aas
xor
pop
push
pop
dec
scas
cld
lcall
jnp
loope
jns
in
sahf
or
inc
sbb
xchg
inc
jle
test
sub
xor
cltd
hlt
add
add
mov
xor
dec
cwtl
arpl
fbstp
xchg
xchg
das
push
shlb
jb
ja
mov
cli
pop
mov
jne
inc
dec
cli
data16
push
movsl
xchg
out
jno
push
add
mov
out
xchg
mov
js
ljmp
lods
rorl
mov
inc
push
mul
sub
mov
scas
ljmp
cwtl
mov
clc
jmp
cld
sub
sbb
pop
mov
jp
lret
mov
call
adc
cmp
sbb
mov
out
iret
or
in
lcall
pop
jnp
mov
mov
xchg
pusha
sbb
daa
ret
aas
adc
sbb
out
sbb
out
adc
lret
pop
scas
mov
ds
lret
andl
out
or
movsl
in
adcl
sub
or
push
jmp
push
mov
push
sbb
sbb
mov
ljmp
sub
xchg
adc
fidivl
push
push
jo
pop
loope
add
or
ja
rcl
loopne
stc
mov
sbb
lret
mov
or
xor
and
mov
sub
ss
and
mov
pop
daa
fbld
outsb
push
sbb
or
mov
pop
xchg
pop
sti
jge
pop
push
insb
daa
inc
pop
xchg
pcmpgtd
mov
mov
xlat
int
sub
cmp
popa
popa
stc
gs
mov
or
xor
mov
out
lods
inc
lahf
lea
scas
popf
and
jno
ret
faddl
les
repnz
pop
push
fwait
cwtl
sub
stos
mov
push
cmp
jae
cmpl
repz
clc
cmp
dec
aad
push
sahf
std
sbbl
leave
xchg
mov
or
shll
jp
shll
cwtl
aad
aas
push
lds
aam
mov
fwait
pusha
jb
in
sbb
scas
adc
inc
lahf
add
cld
add
add
aad
vcmpps
adcb
cmpl
mov
inc
xor
adc
lock
dec
mov
xlat
mov
js
and
inc
ret
jle
leave
jge
ds
adc
pop
push
lock
sub
cmp
mov
and
push
iret
mov
or
repz
mov
jmp
insl
out
dec
inc
mov
stc
out
and
dec
jge
pusha
aaa
mov
adc
lods
xor
imul
add
dec
cmp
mov
and
jecxz
pop
pop
cmc
incl
mov
cwtl
inc
jbe
lock
and
mov
fwait
dec
xchg
lods
xchg
fidivl
mov
dec
mov
xchg
xchg
jnp
push
loopne
xor
pop
xchg
mov
enter
cmpsl
xor
or
push
loope
mov
cmpsl
xchg
mov
or
fisttpll
sub
hlt
call
inc
pop
cmp
fbld
push
ds
sbb
lods
cltd
jbe
add
xchg
fsts
push
pop
jmp
xor
dec
test
jge
adc
into
dec
jmp
adc
mov
sub
add
popa
jno
aas
adc
jne
inc
mov
push
jnp
pusha
sub
mov
pop
or
fisubrl
bound
inc
mov
pcmpgtb
icebp
call
insb
lods
jmp
sbb
daa
jbe
aam
push
dec
cmpl
int3
mov
fmuls
pop
out
call
push
xchg
xlat
or
std
test
insb
dec
out
or
es
push
add
dec
dec
icebp
fdivrl
push
in
jle
adc
sbb
inc
outsb
hlt
les
sarb
in
popf
adc
iret
or
cmp
jns
and
mov
rcrb
xor
andl
pop
sub
xchg
inc
pushf
fistl
sysexit
iret
lahf
mov
jmp
test
movsl
cli
push
cmpb
inc
nop
mov
sub
xor
insb
xchg
scas
mov
push
xchg
mov
mov
adc
insl
dec
pop
and
bound
push
push
int3
rcrb
fucomp
pop
popl
fstl
ret
ja
fwait
or
sbb
insl
cmc
dec
inc
clc
andb
jnp
xor
roll
imul
cwtl
movsl
and
lods
add
mov
cli
lcall
inc
lret
insl
das
push
fistpl
jecxz
lahf
mov
and
pop
mov
loop
push
cld
jmp
push
adc
lea
jo
or
xchg
test
adc
dec
pushf
out
int3
dec
repz
mov
or
cmp
rclb
outsb
cmp
stos
xchg
sbb
mov
jno
aam
sbb
out
aas
gs
insb
xchg
pop
lahf
popf
and
jle
in
and
cltd
or
add
jecxz
stc
jne
cmp
jg
or
push
loop
add
mov
movsb
negb
inc
cmpsl
jmp
jae
fst
inc
loop
mov
pop
cmp
jecxz
mov
mov
aam
jno
inc
jbe
gs
push
push
lock
int3
jns
dec
jno
or
mov
pushf
and
imul
fsub
test
sub
nop
mov
push
lret
pop
mov
inc
mov
mov
mov
addr16
sbb
into
test
lds
shlb
hlt
jns
push
push
jl
enter
aas
ficomps
incl
xchg
jecxz
insl
pop
loope
cmc
fiadds
dec
sbb
in
inc
scas
dec
movsb
jb
js
push
shlb
lret
gs
xchg
jbe
xchg
push
sub
or
or
xchg
push
test
daa
push
xchg
adc
jmp
movsl
mov
aaa
aad
mov
xor
gs
add
shlb
or
pop
hlt
rorl
add
pop
mov
mov
fbstp
pop
add
insl
mov
push
inc
mov
lock
out
ja
xchg
or
sbb
jle
dec
push
cmpsl
sub
mov
xchg
ficoml
mov
xchg
jge
dec
jbe
pop
push
lret
aam
nop
mov
bound
mov
xchg
mov
push
sbb
dec
lods
jge
inc
adc
mov
test
mov
mov
cmp
out
mov
sub
xor
jg
mov
aam
pop
cli
cmp
fistps
scas
xor
enter
jge
pop
inc
inc
xchg
or
mov
inc
stos
push
dec
aam
cmp
mov
xchg
xor
fcomps
inc
push
imul
out
std
stc
add
pop
jl
fstps
fs
mov
cmp
cmp
add
xlat
lods
stos
sub
mov
sbb
imul
mov
xor
out
jmp
or
jno
cmp
mov
sub
xor
sbb
cmp
paddusw
outsb
leave
int
push
dec
mov
dec
xor
lret
subl
inc
sbb
outsb
stc
outsl
adc
xchg
cmp
mov
cld
call
inc
mov
leave
outsb
or
add
push
arpl
pop
mov
int3
int3
sbb
mov
xchg
jge
pop
pop
mov
popf
pushf
test
and
sub
cmp
add
and
stos
sbb
jne
pushf
es
pop
sar
out
imul
pusha
pop
mov
pop
lret
cs
shrl
mov
pop
pushf
inc
sti
or
pop
imul
push
adc
add
inc
mov
ret
pop
lods
mov
subb
popa
outsb
leave
inc
sbb
addr16
dec
jnp
mov
addr16
mov
mov
fnsave
xchg
addr16
lret
movsl
repz
and
lock
test
sti
sub
jl
rcl
pop
push
xor
xchg
stc
jmp
dec
repz
sbb
or
mov
test
fwait
pusha
ds
int
cmpsl
je
mov
cld
sbb
fisubs
sub
inc
clc
cmp
xlat
aas
xchg
rclb
ja
xchg
xchg
cs
or
daa
add
add
push
int
xchg
xor
push
icebp
mov
out
mov
popf
cmp
jnp
ja
std
loopne
loop
add
xchg
sub
nop
add
cmp
mov
pop
mov
adcb
fildll
mov
mov
lcall
pop
adc
inc
fcmovnbe
roll
gs
inc
lcall
xor
or
cmp
and
test
ds
mov
les
pop
andb
xchg
jle
lds
mov
popa
cs
pushl
push
cmp
cmp
adc
hlt
push
pop
sub
sbb
dec
add
or
inc
push
push
std
xor
sbb
xlat
mov
stos
hlt
pop
push
loop
hlt
hlt
addr16
shl
fmulp
ret
push
aam
xor
in
data16
inc
push
imul
scas
jmp
push
cmpsl
into
add
out
xlat
ret
pusha
xchg
sub
jb
pop
xor
mov
xchg
ret
mul
sub
aaa
sub
jecxz
xor
mov
adcl
dec
pmulhuw
mov
cltd
les
mov
movsb
mov
and
sub
in
shll
cld
out
push
iret
mov
lea
mov
push
out
loope
jge
sahf
ds
pop
jo
mov
push
pop
stos
int3
push
cmc
inc
orl
mov
sub
idivb
push
pop
mov
xchg
das
mov
jo
jbe
pop
js
lret
jl
lret
xchg
shrb
mov
les
imul
dec
pop
cmp
add
sti
sbb
test
sub
cmp
out
iret
mov
pop
adc
and
and
icebp
adcb
xor
push
lods
mov
icebp
push
rcrl
push
enter
inc
aaa
mov
icebp
jae
add
cmp
nop
or
adc
imul
sbb
pop
loope
loope
jb
test
sarl
or
in
xchg
mov
mov
in
xchg
xchg
stos
pop
xlat
hlt
lcall
pusha
cld
sub
xchg
insl
mov
shll
add
test
rcll
arpl
test
repz
push
sub
cs
push
scas
mov
int3
fwait
pop
cmp
jle
call
jbe
adc
dec
jne
xchg
jns
push
jo
sub
pop
loopne
mov
jle
dec
pop
jmp
enter
repz
dec
sub
je
jnp
lods
pusha
mov
movsb
mov
jmp
dec
out
add
ss
jl
cmpsb
push
sbb
ja
fs
cmpsl
lods
out
jae
imul
pop
dec
leave
lret
pop
aam
enter
push
push
jmp
dec
arpl
sub
pop
and
popa
and
jne
mov
adc
cmpsl
pop
mov
mov
pop
mov
test
adc
inc
push
and
fdivr
mov
adc
ja
adc
cltd
push
push
pusha
das
sbb
sbb
and
popl
test
cltd
sub
and
data16
jae
lret
sub
jg
test
dec
fsub
lock
sub
ljmp
jmp
loope
repnz
mov
push
xor
lret
insl
inc
ja
xchg
and
adc
pop
lahf
mov
or
jp
mov
int3
testb
pop
cmp
lret
imul
sub
push
jno
imul
sbbl
out
mov
aas
push
jmp
int3
xchg
in
add
stc
fidivrl
mov
fldcw
adc
stc
popa
mov
rcrl
ret
xor
mov
movsb
push
mov
mov
adc
movsb
in
cs
pop
mov
cwtl
fimull
cmpsl
cmpl
shrb
fldt
xor
xor
jl
pop
sbb
movb
fcom
xor
xchg
dec
and
mov
xchg
mov
jg
out
sub
pop
repz
fcomps
adc
push
ljmp
pop
or
sbb
icebp
adc
jb
out
jno
mov
leave
lds
andl
rcrl
sahf
add
adc
push
push
or
mov
xchg
ror
pop
enter
jecxz
adc
jb
lahf
insl
push
sbb
mov
xchg
add
adc
loope
push
push
incl
mov
es
mov
add
mov
add
jo
and
push
jge
int3
rol
xorb
js
in
das
mov
das
dec
testb
mov
and
mov
loope
mov
popf
mov
scas
cwtl
in
jae
pop
jge
fldcw
and
movsb
jns
pop
push
jge
adc
nop
pusha
mov
xor
gs
sti
or
pop
dec
int
mov
lds
xor
iret
add
inc
loopne
sarb
insb
xchg
int3
fstl
mov
pusha
lret
fldl
stos
outsl
sub
dec
xor
inc
sbb
ret
in
add
push
inc
stc
in
icebp
jle
call
cld
jbe
sbb
adc
jmp
ret
xchg
push
mov
cmpsl
or
mov
out
pop
adc
cmp
pop
in
xchg
push
lret
mov
or
sbb
or
mov
and
cmp
add
jae
add
adc
add
adc
add
outsb
mov
cmp
fdivl
cmc
sub
ds
jl
in
ds
and
shlb
test
mov
xchg
in
mov
aaa
add
cmp
mov
mov
push
or
cmp
cli
jmp
ja
mov
mov
cmpsl
mov
imul
rcll
fwait
xchg
jae
xchg
sbb
lahf
sbb
fbld
mov
xchg
cmp
and
mov
mov
aam
out
mov
mov
adc
push
test
jl
cltd
fistps
pushf
popa
test
movsl
insb
fstpt
inc
xchg
lret
xchg
aas
xor
xor
mov
int3
les
cld
pop
inc
sbb
mov
mov
test
and
pushf
sub
cmp
sub
and
lds
mov
push
cmp
xchg
rorb
lock
je
repz
xchg
inc
ret
std
testl
xor
insb
jl
mov
sbb
testl
dec
test
fs
fmull
rcl
or
enter
lock
lds
lods
lds
addr16
dec
dec
shrl
gs
jne
mov
divb
out
jle
dec
icebp
jae
cli
mov
dec
test
cmp
popf
cs
subl
jl
inc
mov
xchg
incl
and
iret
cmp
lret
orl
mov
lds
add
cmp
cmp
pushf
dec
pop
jg
cmpsb
in
mov
xlat
aam
sub
dec
pop
ljmp
dec
shlb
ja
mov
mull
jge
fsubl
rcrb
cli
and
mov
sub
cmp
shrl
cli
xchg
jns
pop
icebp
push
cld
pop
lods
mov
push
mov
mov
cltd
cmpsb
jno
das
mov
cmp
dec
je
cmp
sub
lahf
lods
or
and
push
add
divb
sarb
push
rcrl
and
outsb
mov
popf
push
and
lds
inc
sbb
and
rcl
or
xchg
and
test
sub
xor
shrl
aam
inc
adc
add
data16
cmp
arpl
scas
xor
cmp
gs
pop
add
out
mov
nop
dec
and
popa
mov
add
gs
mov
pushf
and
jg
fidivrs
loope
imul
xchg
fstps
jecxz
cmpsl
dec
adcb
imul
aaa
pop
mov
outsl
xchg
dec
push
push
inc
and
inc
jno
outsb
adc
lds
jb
cld
adc
sbb
ds
push
and
iret
mov
movsl
jg
pop
fbld
mov
pop
mov
daa
adc
jno
xchg
ja
or
ficoms
pop
lcall
xchg
loope
jmp
fdivs
ljmp
and
je
mov
adc
jo
out
dec
mov
mov
adc
xor
js
aam
ret
int
sub
int3
or
cmp
popa
add
sbb
pop
sahf
mov
hlt
cmp
adc
and
mov
scas
test
ljmp
cmp
imul
mov
fucom
lds
xchg
int
aad
sub
jae
mov
iret
add
cmp
mov
mov
add
xor
movsb
js
loope
jmp
ret
push
xor
add
into
pushf
and
ficoms
sarl
mov
pop
cmp
and
push
int3
inc
outsl
pop
xlat
dec
mov
pop
fsubl
mul
pop
bound
mov
shrb
iret
jg
push
mulb
testl
jo
mov
push
mov
mov
jge
out
pop
cltd
movl
data16
mov
shl
arpl
jl
add
dec
mov
lock
jp
mov
and
add
mov
bound
sub
push
adc
sbb
pop
xor
cltd
movsl
inc
jnp
sahf
sbb
sbb
mov
and
lods
cld
add
sub
mov
cmp
out
pop
hlt
jbe
jns
inc
ljmp
jbe
mov
push
pop
cmpsl
add
mov
insl
loope
js
out
sub
pop
ret
popa
jmp
cli
jge
push
cmc
jp
mov
into
scas
sub
out
jae
shr
pop
jno
mov
mov
lret
rcll
arpl
mov
cld
int
lock
mov
int3
sarl
cmpsb
mov
lock
xor
lcall
inc
scas
xor
pop
xchg
or
mov
arpl
punpcklbw
int3
jbe
push
in
into
inc
sub
icebp
cmp
int
xor
stos
or
popf
pusha
test
xchg
push
cltd
in
repz
jg
mov
dec
test
ret
fsts
or
mov
bound
movsl
lret
cmpsb
and
xor
repnz
jecxz
jb
mov
mov
insl
sbb
or
dec
add
push
subl
cmpb
ljmp
dec
fidivrl
mov
pop
and
je
mov
fwait
and
dec
daa
inc
push
push
lock
dec
popf
sub
add
xchg
stos
mov
in
lcall
sub
ret
xor
lods
lahf
stc
xchg
leave
cmpsb
pushf
dec
std
pop
push
push
aam
inc
xor
and
ds
or
fnstenv
jns
mov
pop
pusha
mov
xchg
int
dec
scas
mov
fs
scas
cmp
pop
loopne
add
rcr
inc
mov
pop
push
push
add
push
fdivrl
sbb
loopne
mov
pop
add
outsb
pop
shll
sub
int
dec
sub
jge
xorl
test
sahf
popf
mov
cmp
add
xchg
rorb
sbb
sub
sub
cs
movsb
fnsave
imul
shl
in
adc
and
xor
dec
xchg
psubb
sub
sub
sub
adc
in
stc
mov
mov
pop
lock
fwait
mov
inc
les
stc
iret
ret
dec
je
and
bound
insb
movsl
dec
cmc
popf
sbb
xchg
in
mov
push
dec
hlt
scas
cmpsl
movsl
xor
pop
cli
xchg
or
jo
fsts
mov
insl
jmp
fimuls
cmp
sbb
sbb
repz
sub
mov
xlat
xor
gs
rol
push
es
sbb
mull
enter
pushf
dec
mov
inc
adc
div
mov
dec
inc
xor
das
mov
data16
xor
add
sub
pop
repnz
adc
xchg
jp
cmp
hlt
stos
movsb
inc
pop
jle
leave
das
mov
push
cmc
cmp
shll
aad
outsl
lcall
mov
insl
and
inc
lock
jge
popa
call
add
mov
jns
mulb
xchg
cmp
adc
repnz
xor
xchg
loop
push
push
mov
mov
lds
dec
pop
aas
icebp
or
sbb
push
mov
lea
js
aam
xchg
test
lret
dec
inc
dec
push
imul
mov
imul
pop
cmp
popa
sbb
fmuls
frstor
push
mov
mov
repnz
jne
fistl
add
test
lcall
cld
shr
inc
ss
dec
adc
ja
adc
icebp
mov
adc
filds
sarl
pop
out
and
cmp
sub
mov
and
sub
jo
test
cmpsl
pop
mov
xchg
aaa
hlt
mov
and
clc
pushf
jmp
hlt
sahf
lods
int
cmc
sbb
loope
loopne
jae
fists
xlat
out
xchg
aas
xchg
inc
add
sub
insl
xchg
and
sub
in
ss
xorl
ds
cwtl
mov
pop
cmp
cmp
adc
and
xor
lret
daa
lea
push
pop
jp
cli
ret
cmp
arpl
es
arpl
mov
pop
mov
jmp
push
stc
pusha
pop
sti
pop
mov
fisubrs
mov
pop
and
push
out
nop
mov
outsb
js
ljmp
push
lods
lods
adc
mov
jae
mov
mov
xchg
daa
adc
lcallw
jge
and
pop
iret
int3
leave
or
lcall
stc
push
cli
xchg
mov
insl
or
dec
mov
sbb
xchg
mov
sti
mov
add
cli
aad
icebp
xor
in
insb
outsb
das
les
add
inc
sub
or
ret
jnp
mov
cltd
dec
inc
mov
jl
xchg
lock
xlat
rcll
pushf
dec
jmp
pushf
adc
bound
cwtl
mov
inc
pop
aas
add
and
adc
add
cmc
cmp
pop
lods
daa
mov
push
lock
push
mov
mov
adc
int
std
dec
fldl
inc
nop
sbb
adc
mov
pop
aas
mov
mov
mov
jge
jl
xchg
subb
out
js
mov
xchg
dec
insb
jecxz
xchg
and
cmp
push
cltd
xor
mov
cmp
int3
xor
mov
fbld
iret
in
jbe
or
cmp
cmp
jp
popf
in
sti
xor
pop
dec
insb
cld
aad
dec
cmpb
jp
mov
add
std
xchg
aas
mov
roll
cmpsb
sub
fwait
out
out
repnz
add
pop
fs
mov
push
add
jo
into
leave
arpl
xor
lock
mov
mov
jmp
call
mov
lock
xor
dec
xor
dec
xorb
push
ret
cmp
jge
cmp
jmp
movsb
jge
pop
dec
dec
adc
shr
cmp
adc
mov
cwtl
pop
sahf
inc
sti
fsubrs
in
xor
mov
inc
jecxz
pop
lcall
jne
jmp
das
jle
andl
scas
outsb
dec
fiaddl
xchg
out
mov
in
scas
out
leave
stos
or
cmpsl
clc
cld
adc
subb
dec
arpl
xor
cmpsb
xorb
aam
add
mov
mov
movsl
xor
add
test
fxch
and
sbb
cmpsb
mov
scas
mov
in
adc
xor
out
cmp
lcall
scas
xchg
clc
lret
or
jecxz
xchg
lds
loop
push
cwtl
pop
jl
stc
icebp
bound
add
rclb
jg
cmp
psubd
popa
xor
mov
out
xor
clc
cmpsl
stc
push
test
in
gs
daa
mov
js
and
jmp
lods
jmp
mov
jb
popa
ficomps
xor
mov
cmp
cwtl
xchg
mov
mov
sbbl
sub
mov
mov
pop
mov
arpl
dec
div
movlhps
mov
push
xchg
aad
out
ss
cmp
stos
adc
les
sahf
and
push
pop
mov
js
adc
fimuls
inc
xor
loopne
mov
fldcw
lret
xlat
cld
mov
jmp
scas
and
sub
or
int3
ljmp
ret
jnp
fisubrs
and
and
xchg
lods
lahf
mov
scas
je
daa
mov
xor
mov
and
xchg
jne
loopne
xorl
nop
push
scas
pop
dec
lahf
jle
imul
arpl
loope
pop
add
mov
inc
cwtl
or
fmuls
aam
or
repnz
sbb
inc
out
mov
in
pop
pop
jne
add
mov
push
int
ss
push
in
inc
sub
les
sub
sbb
mov
sub
add
inc
jle
push
mov
jnp
shll
decb
add
inc
js
in
and
xchg
jbe
xor
mov
add
push
popa
scas
loopne
sti
fcom
adc
lods
stos
test
jae
mov
xchg
out
shlb
mov
int3
ljmp
lret
repz
pop
pop
loop
dec
test
ds
fadds
loope
ret
lahf
push
movsb
sbb
xchg
test
jbe
cmc
and
xchg
fwait
pop
je
push
mov
push
stos
in
or
cmpsl
cmpsl
mov
cwtl
or
imul
xchg
or
shrb
cli
xor
or
jg
adc
dec
pop
fdivr
enter
cmp
shrb
fimull
adc
sbb
push
out
jne
sbb
mov
cld
fists
ficoml
add
cli
mov
imul
jnp
jo
mov
inc
aad
mov
cmpsb
dec
aad
jns
jb
push
subl
fdivrs
popf
xor
pop
pop
mov
imul
mov
pushf
fisttpl
lret
cmp
or
push
inc
mov
pop
sbb
aad
push
sbb
xor
mov
scas
filds
repz
xor
pushf
aad
mov
test
rcr
iret
scas
jnp
movl
addr16
jae
lea
pop
jmp
stos
jmp
getsec
pop
push
andl
cmc
and
ljmp
xchg
push
call
mov
div
cmp
mov
repz
mov
sub
mov
adc
inc
fbld
fisttps
sub
fwait
mov
cmp
jns
lds
mov
adc
push
ds
arpl
mov
sbb
fsubs
int3
mov
lret
in
mov
outsl
jbe
or
add
sbb
adc
cs
insl
mov
or
sbb
sbb
icebp
and
lods
push
jo
lcall
leave
hlt
add
sbb
push
sub
adc
sti
fists
add
xchg
insl
mov
push
into
pop
and
jmp
stos
je
andl
adc
mov
lahf
dec
jnp
cld
push
ret
into
adc
pop
mov
add
fisttpl
mov
xchg
addl
fisttpll
mov
sbbl
sbb
arpl
xchg
std
test
arpl
ljmp
into
push
mov
push
addr16
mov
outsl
cmp
push
adc
jle
fimuls
sbb
or
xchg
jnp
test
sbb
dec
mov
push
jmp
enter
or
inc
xor
adc
pushf
push
enter
test
xchg
and
add
sbb
fimuls
popa
pop
push
in
idivb
loopne
insl
adc
and
jmp
loopne
je
mov
xchg
push
adc
mov
cmp
insb
push
sub
enter
stc
dec
rcl
and
jne
mov
sti
into
fstps
stos
lret
mov
shrb
shl
dec
sbb
ret
jl
mov
push
adc
cmpsl
add
pop
enter
iret
adc
lret
dec
cmp
lods
data16
pop
add
pslld
bound
add
inc
lock
fbstp
ds
sahf
mov
sub
outsb
push
mov
inc
and
xlat
push
adc
mov
xor
lods
and
xor
inc
sarb
cmp
notb
pop
or
add
pop
in
pop
stc
fldcw
ss
push
test
push
loope
int3
loopne
mov
cmp
pop
ja
mov
jns
add
test
jne
movsl
int
lcall
sub
mov
test
sub
pop
sbb
push
jb
into
leave
sbb
fnstenv
fstps
shr
out
nop
mov
mov
ficompl
in
out
ds
in
aad
cmp
mov
cwtl
movaps
je
mov
dec
mov
mov
in
gs
cmpps
and
sarb
push
pop
add
subl
push
fs
cmc
add
pop
pop
testb
shlb
loope
fbld
adc
shl
mov
rcl
and
mov
mov
std
pop
push
cmpsb
mov
popf
js
mov
mov
stos
mov
in
sbb
mov
cmp
loope
scas
jo
arpl
sub
mov
dec
jmp
jns
mov
mov
mov
xor
in
sbb
fdivl
inc
sub
and
cmp
adc
pushf
fucomip
addr16
cmp
sarl
aad
jns
mov
mov
xor
cmp
push
add
jne
ficoms
aas
mov
lods
test
jbe
pusha
inc
jo
inc
lret
cwtl
push
mov
xlat
dec
pop
in
stos
shll
jecxz
mov
leave
cmp
adc
mov
adc
fimull
dec
or
mov
mov
sub
push
mov
mov
xor
adc
and
inc
mov
das
cmpsb
adc
mov
adc
cmc
push
stc
lcall
jp
ficomps
stc
sahf
pop
cld
mov
mov
inc
and
clc
sarb
xchg
sub
add
sub
pop
push
out
leave
xor
mov
into
mov
inc
mov
cwtl
insl
mov
push
cmp
rolb
adc
sti
xchg
pop
jge,pt
mov
push
jg
int3
pushl
fwait
repnz
ljmp
adc
pop
xchg
inc
test
je
pop
ss
ret
xchg
lret
inc
pop
es
sub
xor
inc
aas
sahf
andb
adcl
out
xchg
jno
mov
adc
push
test
imul
incl
or
and
ljmp
in
movsb
fadd
cmp
sbb
add
mov
pop
sub
and
pusha
lea
stos
lcall
movsb
mov
mov
pop
pop
fneni(8087
ss
xchg
mov
pop
lods
inc
pop
xor
mov
das
lcall
in
fmulp
std
ljmp
mov
mov
mov
ds
adc
sub
cli
mov
pop
in
adc
out
dec
mov
lods
pop
cs
sbb
shrb
xchg
mov
sub
dec
test
mov
loop
pop
xchg
icebp
and
daa
imul
or
outsb
mov
mov
jno
adc
mov
sub
mov
and
clc
mov
adc
scas
fs
inc
sbb
xchg
insb
outsl
cmpsl
inc
or
xchg
dec
roll
scas
mov
sahf
mov
pop
rcr
and
xor
push
mov
enter
rcrl
enter
in
mov
lea
outsl
cmp
stc
or
cmp
ja
jnp
jnp
mov
dec
imul
test
mov
or
stos
daa
insl
jge
mov
aad
mov
sbb
outsl
movsl
push
mov
les
jo
pusha
sti
push
xchg
or
or
mov
aaa
xchg
ja
add
loopne
repz
out
hlt
cltd
pop
hlt
fildll
repz
or
or
sub
pop
cmp
hlt
or
bnd
fistps
adc
nop
mov
fimuls
pop
stos
mov
and
das
xor
push
mov
iret
les
and
test
js
adcb
ret
sub
aas
lea
mov
fsubr
inc
pop
mov
sbb
push
arpl
adc
xor
cmp
int
or
ret
orb
xor
lret
daa
insl
nop
test
mov
and
dec
xchg
loop
mov
mov
cwtl
push
xchg
push
hlt
push
lea
pop
dec
add
add
shrl
cli
movsb
lcall
jne
pop
or
scas
movsb
jg
movsb
mov
adc
sbb
push
enter
pusha
ja
adc
movsb
icebp
cmp
adc
mov
lock
mov
xor
adc
mov
aad
dec
fnsave
mov
lods
aam
lret
call
loope
lahf
ret
xchg
dec
iret
pop
mov
cld
mov
shll
pop
jmp
lock
mov
data16
jge
jne
hlt
stos
sti
xchg
inc
pop
sbb
or
adc
jmp
out
lods
jnp
push
icebp
add
jb
addr16
pusha
inc
adc
jg
call
pop
jecxz
xor
or
cs
shl
pop
daa
clc
jbe
jnp
sbb
push
roll
rcrb
sbb
jl
xlat
scas
or
inc
int3
push
jl
mov
jbe
push
aaa
loopne
adc
ja
sbb
dec
push
sbb
xchg
aas
mov
ljmp
cmpsl
add
cld
lret
push
lret
sub
fbld
jecxz
mov
jl
out
xlat
cmp
jae
add
mov
into
jae
xchg
pop
cmp
sar
dec
pmaxsw
or
nop
add
lds
xchg
ljmp
gs
aas
xor
push
jg
and
pop
gs
lcall
mov
outsb
jns
mov
mov
inc
jnp
aaa
loopne
ds
fnstcw
iret
ret
loope
sti
sbb
cmpsl
adc
jmp
les
push
mov
repz
dec
adc
jo
mov
xchg
xor
arpl
xorl
test
push
pop
lods
decb
jns
sbb
add
add
lret
stos
mov
dec
push
mov
jp
dec
stos
jno
fnstcw
loop
xor
inc
or
cmp
xchg
movsb
icebp
jmp
ret
pop
enter
push
dec
push
pop
adc
xor
pushf
fstpt
out
loope
mov
mov
popa
cltd
lods
push
insl
inc
inc
sub
and
mov
or
sub
lcall
add
push
dec
inc
out
lods
scas
into
fabs
xchg
lods
sbb
mov
icebp
shll
dec
sbb
jp
insb
cmc
or
dec
mov
push
shlb
icebp
repz
arpl
lret
cmpsl
mov
inc
ret
pop
cmpsl
les
pop
test
xchg
aad
xchg
rcll
add
outsl
jecxz
mov
mov
mov
mov
jge
scas
push
jle
xchg
xor
repz
mov
sub
pop
cmpl
mov
inc
stc
xchg
sti
loope
popf
push
test
mov
fmul
out
cmp
lret
cmp
lods
lods
ret
and
ret
xchg
sub
ret
inc
or
mov
sbb
xchg
mov
sbb
jns
daa
enter
sahf
ljmp
lods
pop
minps
pop
test
adc
add
mov
lahf
sbb
int
push
daa
hlt
sub
insb
outsl
lock
pusha
hlt
jno
sbb
inc
ficompl
stos
call
xor
insl
cld
in
xchg
push
repz
cmp
and
mov
jl
pop
and
dec
lcall
mov
shll
or
fs
lahf
pop
cli
fnsave
xchg
push
cmp
and
jge
ds
mov
or
inc
lea
mov
insl
ss
add
aas
ljmp
mov
repz
shr
bound
mov
sbb
pop
cmp
xor
int
out
xchg
push
pop
lods
jmp
mov
pusha
jb
cwtl
mov
hlt
push
push
in
mov
addl
fisttpll
mov
fadds
inc
divb
xor
and
bound
cmp
or
cmpsb
imul
cltd
cmc
pop
sbb
aam
insb
mov
data16
and
outsb
dec
loopne
xchg
fisubrs
add
mov
mov
loopne
test
cmp
xchg
in
adc
or
int
inc
inc
mov
or
fistl
shr
imulb
lret
pop
jle
adc
call
lock
cmp
ret
adc
sbb
mov
cmp
into
fdivrl
sub
loop
imul
xchg
cli
mov
mov
jmp
sub
bound
test
jg
cltd
repnz
jl
pop
mov
mov
in
std
xchg
aad
push
mov
jne
adc
scas
jbe
fsubrs
push
inc
cltd
inc
mov
mov
xor
mov
jo
bound
cmpsb
hlt
or
add
scas
les
stc
cmp
xlat
sbb
jae
outsb
imul
and
xor
ret
jnp
xor
add
sub
push
xchg
mov
pop
sbb
and
orb
jo
mov
imul
cmp
push
xchg
pop
adc
push
mov
imul
roll
rcr
clc
sub
daa
mov
clc
push
dec
imulb
mov
imul
mov
sub
test
daa
or
cmp
or
or
sub
xchg
fadds
cmpb
imulb
xchg
or
xchg
int
and
fcompl
inc
pop
outsb
leave
or
pop
call
xor
inc
sbb
push
adc
nop
fldl
outsl
cmc
cmp
pop
dec
or
in
jne
test
pop
cmp
cmp
aam
movsb
push
stos
pushf
dec
arpl
data16
fldt
loopne
movsl
cs
fsubr
aaa
or
or
out
pop
outsl
mov
andl
icebp
jnp
rcrb
sub
add
add
cld
loope
aad
arpl
bound
inc
jmp
jbe
sub
inc
sarb
adc
iret
sahf
clc
push
loop
orb
add
sti
mov
and
sub
pop
cmp
sub
mov
push
lock
ret
repnz
mov
sbb
fs
push
movsb
cltd
sbb
stos
jg
jne
jne
mov
or
imulb
and
lahf
mov
fimuls
or
mov
sbb
dec
fcoml
jle
loop
jno
gs
add
nop
filds
ds
mov
sarl
subb
pop
push
popa
in
mov
int
loope
push
cld
stos
jnp
andb
mov
and
shrl
ret
shrl
aas
xlat
push
ljmp
es
mov
test
sub
in
stc
lret
mov
faddl
add
sbb
adc
repz
lods
ffree
das
ja
pushf
xor
jo
fimuls
push
xor
rorl
add
and
mov
enter
cltd
adc
jg
mov
dec
les
xor
xchg
mov
out
mov
sbb
insl
dec
xor
inc
add
mov
lock
mov
xor
mov
adc
jae
xor
bound
popa
pop
ret
ds
aad
daa
cs
das
gs
xchg
or
iret
jne
cltd
xor
pop
lds
mov
ja
add
adc
out
push
or
mov
ljmpw
inc
loope
jnp
jae
lahf
xor
out
cmpsl
insl
pop
fldt
ljmp
xor
fimull
and
mov
and
cld
mov
xchg
inc
sarb
xor
add
dec
mov
mov
xor
sub
lahf
dec
push
cmc
jmp
rorb
sbb
mov
adcl
inc
pop
adc
int
in
mov
ret
or
jg
dec
jae
cld
mov
jno
and
dec
sub
repnz
sti
mov
cmpl
fadds
jle
aas
cmp
test
xor
mov
xor
aad
jb
sub
jmp
or
pop
cmp
adc
or
mov
orl
lret
jecxz
test
or
xchg
movsl
iret
clc
dec
push
mov
filds
inc
jne
fisttpll
sti
fmul
in
mov
aad
outsb
stos
dec
push
fimuls
pop
popa
pop
mov
push
mov
outsb
sbb
jns
es
clc
pop
push
jl
movsb
sbb
xchg
lds
jb
les
push
pop
sbb
pushf
mov
ret
and
inc
dec
push
push
jle
addl
cmp
stos
inc
push
dec
dec
inc
push
test
xor
xchg
in
cltd
loope
subb
xor
imul
jg
xchg
jnp
cmp
aas
lock
cmp
sti
ret
push
sub
imul
adc
daa
rcl
sbb
scas
fiaddl
sbb
das
out
inc
out
and
lahf
push
jns
lods
add
or
and
and
test
inc
aad
cld
outsb
jge
mov
pop
call
add
aas
sub
dec
fldl
int
pusha
int
arpl
mov
aas
rclw
dec
fiaddl
jle
cmp
push
sti
mov
mov
sti
fistpll
ret
mov
xlat
aad
mov
xchg
scas
lret
inc
xchg
lret
inc
and
ja
stos
cmp
mov
hlt
push
movsl
shll
xchg
andl
sub
jnp
add
fdivl
fmuls
cmp
jae
pop
cwtl
mov
cwtl
ret
jg
std
push
cmpl
add
xchg
pusha
pop
xor
in
int3
pop
add
mov
call
mov
lea
into
inc
in
add
imul
add
sarl
mov
mov
add
outsl
dec
push
lds
jns
mov
pop
cmpsb
push
push
xchg
lahf
push
inc
out
mov
mov
fisubrs
dec
into
in
pop
cs
mov
adc
push
or
sbb
xor
mov
andl
pop
xor
repnz
jae
mov
insl
fwait
pop
push
pop
push
xlat
xchg
cmp
inc
cmpsl
pop
jge
sub
enter
push
int
push
xchg
pop
ja
jecxz
jecxz
shlb
jp
mov
arpl
inc
mov
push
loope
mov
dec
sub
rcr
xchg
mov
rcrl
sbb
or
or
mov
idivl
repnz
cwtd
cli
mov
xlat
lods
int3
enter
dec
sub
lret
xchg
mov
xor
pop
test
repnz
mov
xchg
mov
xchg
or
pop
jge
out
mov
lods
or
sbb
testl
mov
dec
sbb
ficomps
xchg
ds
add
jae
adc
mov
int
rorl
mov
inc
inc
mov
and
push
test
push
fs
add
ds
mov
dec
push
xchg
fwait
insb
mov
lock
xchg
stos
aam
mov
and
outsb
xor
jnp
mov
push
sub
pusha
test
lods
dec
leave
sbb
xchg
jle
jns
nop
repnz
push
out
mov
mov
mov
jp
aad
incb
inc
pop
in
sti
andl
loope
pop
lea
dec
pcmpgtd
subb
mov
dec
push
xor
test
pop
or
mov
pop
enter
imul
loope
jmp
les
cmp
popf
ljmp
fists
mov
call
jp
ds
mov
adc
into
pop
jge
push
nop
data16
in
cmp
loopne
test
cmp
sub
lds
lret
cmp
out
adc
imul
lret
fnsave
mov
jle
mov
lret
call
movsb
dec
jae
dec
roll
sahf
jb
daa
scas
in
ljmp
lods
ret
xchg
pop
xor
mov
rorl
in
or
cmc
fcomps
cmp
rorl
mov
addl
or
and
pop
ss
pusha
cmp
scas
gs
xchg
mov
cmp
mov
pop
cld
rcll
inc
stc
cs
jo
and
mov
jle
pop
fildll
and
and
add
imul
out
pop
outsl
insl
mov
lods
inc
xor
loope
add
cmp
jp
lock
out
jmp
int
xor
scas
add
adc
fstpt
or
sbb
mov
lcall
add
adc
inc
push
jno
data16
adc
mov
hlt
stos
adc
mov
sbb
jno
ret
loop
ds
sahf
loope
dec
sub
xchg
cli
mov
add
and
and
or
or
cli
push
cmp
sbb
push
add
dec
inc
pop
out
int
dec
cld
mov
mov
dec
aas
push
or
gs
test
repnz
xchg
cmp
or
sub
push
xor
cld
or
push
or
ja
mov
movsl
push
ret
pop
mov
mov
push
lea
xchg
inc
decb
and
xchg
jp
loope
adc
dec
xchg
imul
or
insb
cld
psubd
shl
imul
subl
shll
bound
daa
xchg
loopne
rolb
pop
fwait
pusha
addr16
lcall
jmp
js
test
jle
out
mov
add
xchg
xor
dec
movsb
push
sbb
inc
mov
and
adc
cmp
adc
aas
jl
pusha
mov
pop
cs
fistl
jge
mov
aas
imul
xchg
int
hlt
mov
sahf
lcall
test
dec
in
aas
fldl2t
loop
mov
dec
fs
jp
shll
push
pusha
incl
test
pop
gs
pop
stos
gs
mov
mov
push
bound
js
orl
ficoms
add
test
sbb
divl
nop
roll
or
rcrb
iret
or
jo
lods
inc
xlat
imul
mov
inc
insl
cmpsl
push
xlat
popf
xor
xor
in
or
out
add
or
mov
fcompl
test
sahf
aam
cmpsb
pop
push
xor
sbb
movsl
pop
push
aaa
push
inc
repz
testb
jbe
in
inc
mov
xchg
mov
or
loopne
xchg
adc
imul
fildl
pop
lods
ret
pop
cs
mov
jle
lods
add
mov
cld
fcmovnb
sahf
push
jmp
scas
test
test
fbld
lcall
push
adc
mov
xchg
add
js
leave
lahf
mov
cltd
std
dec
xor
cmpsb
inc
pop
mov
mov
pop
shrb
jge
xchg
mov
add
dec
mov
jb
add
imul
nop
and
or
push
jo
mov
xchg
insb
mov
push
aaa
and
in
lock
jae
or
xchg
clc
or
not
pop
mov
jb
pop
mov
xor
enter
add
out
push
or
push
and
testb
ror
sahf
mov
negb
cmp
ret
ret
mov
push
pop
addl
xor
jnp
inc
popa
inc
push
mov
loope
arpl
mov
xchg
cmp
and
push
jne
cmp
cmp
cmp
movsb
add
std
pop
cmp
leave
xor
xor
pushf
movsb
shrl
leave
adc
rcrb
dec
lahf
mov
xchg
xchg
cmp
push
out
push
test
push
out
cmp
out
repnz
jae
stc
xchg
or
jecxz
and
cmpsl
pop
aad
cmp
or
scas
inc
je
addr16
cmpb
xchg
loop
pop
insb
inc
sub
rcl
add
fwait
sbb
mov
roll
lcall
push
jg
jne
dec
enter
lods
adc
fdivrp
nop
jp
jne
sbb
mov
dec
dec
negl
push
test
mov
adc
sub
incl
ret
xchg
jno
nop
rol
pop
jbe
lcall
dec
daa
test
xchg
mov
fadds
fstps
daa
fldt
pushl
pop
sub
push
xor
es
mov
mov
jb
lock
iret
pop
test
negb
not
xchg
adc
in
cmpsb
xor
pop
mov
add
loopne
mov
stos
cld
loope
and
add
lcall
sbb
pop
int
mov
pop
js
mov
adc
mov
dec
push
mov
or
jmp
mov
push
inc
adc
jmp
roll
and
inc
mov
in
sbb
pop
rep
cmp
mov
cwtl
push
cltd
jae
xchg
jno
nop
popf
ja
cmp
cld
or
ss
sbb
sti
lcall
mov
dec
xchg
call
adc
pop
shll
jnp
xorl
xchg
mov
jno
movsl
ret
xlat
mov
dec
mov
or
pop
lret
and
mov
fimuls
push
std
dec
xor
es
sub
loopne
outsl
pop
xor
lcall
nop
jl
pusha
imul
pushf
fnstcw
gs
xchg
or
fists
cltd
mov
add
cvtps2pd
cmp
jo
xchg
mov
and
sbb
inc
loope
cltd
es
push
mov
or
cmpb
repz
outsl
lods
test
inc
cmp
jne
lcall
mov
adc
in
mov
shll
push
sbbb
loop
lahf
bound
ret
cmp
arpl
push
arpl
outsl
cmp
lods
or
stos
cmpsl
mov
dec
popa
div
hlt
andl
int3
dec
cmp
push
and
rclb
mov
fmul
xchg
ss
inc
int
or
into
xor
jnp
jb
repz
pop
addr16
pop
mov
aam
cmpsb
mov
aad
inc
add
imul
and
notb
jbe
fwait
pushf
fwait
pop
pop
and
dec
roll
popfw
addl
cld
dec
cmpsl
rorl
cmp
pop
imul
out
jo
pushf
add
mov
push
push
mov
add
ss
test
sub
lock
sahf
adc
repz
pop
ja
cmp
in
mov
jl
or
push
inc
pop
repnz
jmp
cmpsb
push
dec
or
jge
and
fucomip
add
mov
mov
mov
mov
repnz
stos
push
je
cmp
inc
add
adc
inc
out
jne
std
pop
fmuls
add
push
in
mov
push
icebp
mov
sub
dec
adc
outsl
adc
cld
jo
mov
jl
pop
testl
fcompl
arpl
rol
pushf
mov
xchg
mov
dec
enter
enter
lcall
sarl
jmp
add
cmp
adcb
pop
jge
jg
or
outsl
pop
insl
mov
lock
push
mov
cmp
xor
cmp
xor
test
mov
mov
nop
xchg
jp
ja
orb
push
into
and
call
mov
xchg
out
xlat
sahf
pop
mov
or
fs
shlb
mov
das
dec
inc
scas
popa
dec
in
insb
mov
push
push
aas
incb
divb
lods
sub
and
xchg
xchg
mov
mov
push
rorl
aad
pushf
js
cld
js
loop
mov
push
push
icebp
mov
pop
aas
scas
jg
in
or
sti
ss
jp
hlt
xchg
push
mov
dec
cmp
es
test
lret
sub
in
loopne
push
data16
repnz
jmp
ret
mov
cmovg
test
rolb
stc
xchg
push
insl
shll
daa
pop
fsubr
cs
inc
in
mov
or
repnz
shrl
mov
mov
cmp
int
mov
lock
pop
push
in
pusha
enter
add
xlat
shrl
xor
out
insb
insl
sub
sbb
lret
call
mov
adc
rolb
adc
push
sub
xchg
shrb
mov
and
les
pusha
cmpsb
data16
into
xchg
test
mov
mov
aam
mov
mov
mov
sbb
in
mov
mov
cs
bound
pop
jecxz
ds
xor
je
sbb
add
rcr
mov
adc
shrl
addr16
subl
stc
cmp
jle
out
dec
test
scas
sbb
jno
loopne
popf
ss
jb
push
cmp
xor
cmc
lret
pop
bound
jmp
sub
push
repnz
and
sbb
cmp
fstl
sarl
or
lea
or
dec
or
adc
add
push
sub
and
aam
movsl
or
out
clc
dec
dec
jg
cs
inc
mov
jecxz
push
scas
aas
jge
stos
mov
sub
rorb
dec
push
in
fadds
dec
sti
and
mov
aas
dec
hlt
clc
sub
repnz
push
icebp
mov
cld
inc
xchg
xchg
fsubr
popf
scas
in
and
scas
cltd
pop
repz
push
das
test
mov
aad
aaa
jle
loope
cmpsl
xor
out
jns
cmp
arpl
dec
pop
jno
insl
mov
gs
xchg
cmp
sbb
lret
pop
mov
pusha
mov
inc
push
cmpsb
adc
imul
aas
cmp
pop
dec
imul
sbb
fdivr
outsb
or
add
mov
out
add
mov
inc
je
nop
dec
adc
lock
loop
cmp
daa
push
scas
fsub
nop
push
loope
pop
mov
sub
cli
jl
lods
mov
push
add
pop
fdivrs
pop
in
test
repz
popa
test
and
and
adc
jbe
or
in
or
cmp
mov
repnz
hlt
je
rol
lret
mov
sub
and
adc
and
and
sbbb
xchg
lds
mov
in
popf
enter
lock
mov
add
mov
inc
mov
xor
add
inc
repnz
pop
jae
pop
fadd
cmpsb
rorl
dec
or
mov
cld
or
repnz
jne
fnstenv
cs
pop
rclb
add
and
in
inc
push
ds
mov
mov
push
and
sbb
int
out
std
ret
ret
xchg
sbb
xchg
adc
pop
push
rcll
loop
inc
push
sbb
pop
jmp
test
pop
mov
sub
add
cmp
enter
inc
repz
fimull
pop
jle
mov
mov
cmpl
mov
sub
nop
test
xchg
mov
cmpsb
add
cltd
ret
fstps
cli
and
inc
hlt
inc
daa
fcomps
jae
cwtl
and
mov
push
sub
jecxz
mov
inc
jmp
xor
in
cmp
lea
sub
hlt
outsl
data16
xchg
nop
incb
lock
js
and
dec
and
mov
push
call
in
pushf
jge
icebp
sub
mov
lock
inc
cmc
ds
mov
sub
pop
cltd
mov
dec
xor
jmp
sbb
gs
fs
cmp
cwtl
shl
push
mov
out
rcrl
push
or
int3
mov
mov
jmp
mov
push
fstp
mov
inc
cwtl
mov
mov
call
jo
out
xchg
nop
pop
lahf
nop
stc
bnd
ss
pop
out
jne
sbb
inc
test
je
sub
hlt
lret
push
sbb
jge
cmp
mov
mov
pusha
and
inc
insb
arpl
push
or
mov
neg
hlt
sbb
add
mov
les
adc
cli
scas
xor
arpl
mov
push
call
and
ljmp
cmp
xchg
stc
mov
dec
ds
test
pop
test
mov
hlt
jge
jmp
dec
adc
imul
lcall
sub
pop
sahf
xor
push
add
xchg
leave
pop
cmp
mov
inc
xlat
pop
aad
leave
orl
ja
sub
pop
movsl
lcall
mov
adc
xor
in
cmpsl
xchg
dec
adc
shlw
sbb
inc
rorl
repz
inc
dec
and
jge
pop
icebp
xchg
or
xlat
imul
xor
scas
sti
adc
cmc
cmp
or
cmpsl
xorb
movl
outsw
shlb
aas
mov
xor
and
out
ficompl
add
fistpl
mulb
insl
hlt
testl
push
xchg
movsl
sbb
lds
jb
and
sbb
or
xchg
les
stc
jnp
inc
call
into
sub
clc
std
inc
and
push
rcrl
jnp
mov
scas
mov
sbbb
mov
daa
dec
xor
add
or
ret
or
adc
ljmp
push
mov
je
pop
es
stos
or
xchg
adc
out
dec
roll
adc
roll
insl
testl
data16
and
push
inc
call
mov
dec
adc
xchg
pop
pop
lcall
fistps
mov
out
fistpll
xchg
lds
inc
test
or
adc
pop
cmpsb
mov
cmpsl
sbb
or
xchg
arpl
nop
or
les
icebp
jmp
daa
scas
xchg
ljmp
test
xor
or
cmp
std
gs
bound
mov
mov
mov
fstps
cmp
adc
sub
mov
sti
testb
pop
xchg
enter
aaa
mov
mov
sub
jbe
lret
fs
mov
shll
inc
outsl
leave
addb
xor
push
je
jmp
inc
fdivr
push
call
pop
add
inc
xchg
inc
mov
lock
repnz
cltd
les
xor
jp
add
ss
cli
push
sahf
inc
aaa
stc
xchg
lea
lret
sbb
push
addr16
rorl
adc
pushf
dec
test
dec
adc
mov
loopne
dec
sbb
mov
negb
test
scas
hlt
push
lahf
mov
pusha
mov
jg
aad
mov
push
adc
xchg
loopne
jmp
xor
aas
push
fsts
pop
mov
mov
arpl
mov
cld
lods
pop
roll
loop
mov
sub
scas
mov
lcall
push
cld
sub
insw
mov
mov
aas
and
mov
jmp
push
leave
or
mov
ja
xor
add
testl
mov
jmp
mov
sub
and
mov
push
mov
adc
cmp
inc
jmp
adc
test
insl
push
ds
insl
adc
in
sahf
jo
test
add
xchg
mov
mov
xlat
jp
add
push
inc
je
movsb
stos
push
lock
inc
ss
cs
pop
cli
jno
cmp
inc
je
mov
inc
subl
cwtl
xor
lods
inc
mov
sub
pop
xchg
imul
mov
mov
test
push
push
push
js
xlat
orl
dec
pushf
call
pop
popf
jb
pop
adc
adcl
sub
sbb
enter
loopne
mov
inc
xor
adc
and
jbe
iret
inc
push
inc
loope
adc
and
les
dec
mov
mov
sahf
cmp
test
pushf
adc
in
sub
pop
mov
lods
fs
sbb
arpl
jl
out
jge
xor
cmp
add
mov
mov
adc
inc
ss
inc
sub
lret
cmp
popa
test
cmp
mov
daa
pop
pop
dec
add
inc
push
adc
jecxz
imul
dec
mov
fdivl
and
mov
jno
lock
push
xchg
inc
mov
fldl
bsf
dec
mov
and
stos
sbbb
xor
mov
fbld
es
push
insb
pushf
jmp
lods
add
adc
fisubs
fst
fistpll
mov
jle
xchg
mov
insl
and
cli
fidivrs
or
dec
xchg
rcrb
inc
in
adc
adc
popa
les
pop
loop
inc
jmp
repnz
lods
div
push
push
pusha
xlat
addr16
xchg
inc
inc
adc
shrb
out
pop
cmc
lcall
ret
mov
nop
inc
pushf
movl
test
xchg
mov
out
fwait
push
vunpckhps
lret
iret
inc
mov
stos
push
mov
cltd
test
and
lock
mov
test
decl
jg
inc
dec
and
ljmp
xchg
jno
rep
shll
stos
lret
xchg
lret
movsl
das
push
popa
xchg
rcrb
xchg
mov
jecxz
adc
pop
ret
stos
lods
pop
mov
movsl
dec
lret
add
mov
jle
xchg
popa
sub
push
movb
xor
and
jae
mov
cli
fiaddl
push
outsl
and
add
xchg
pop
arpl
sbb
push
add
xchg
inc
xor
sub
xor
test
jmp
leave
xchg
or
adc
sarb
in
sub
cmp
push
add
outsl
cld
out
xchg
cmp
add
push
jle
xchg
lds
into
mov
jo
sub
push
pop
aam
popa
ficompl
das
push
xchg
movsb
xorl
cmp
add
aam
lret
xorl
rorl
or
cmp
cli
push
mulb
push
xor
jns
dec
xchg
cmpsb
out
sbb
fs
dec
mov
insb
cmp
xchg
movsb
stos
sub
in
sub
ret
mov
into
in
mov
mov
lods
rcrl
adc
aaa
out
arpl
ficoml
pop
data16
lods
dec
xchg
aas
mov
mov
aas
adc
addr16
mov
jb
push
stc
and
clc
xlat
ffree
fistl
lock
cli
push
cmp
lock
xchg
inc
jp
test
in
jmp
add
rclb
ja
fcmove
xchg
shrl
jge
stos
mov
cmp
lahf
or
xchg
in
xchg
movsl
mov
pop
mov
repz
fists
mov
pop
lock
jae
rcl
xchg
sub
aad
mov
inc
ret
fldt
fimuls
lret
sar
out
xor
mov
sub
cmp
mov
sbb
fucomip
sub
fwait
adc
add
loopne
outsb
push
cld
and
rcll
jg
lock
and
fimull
pusha
jbe
ljmp
adc
insb
cltd
in
sub
inc
aad
addr16
hlt
cld
mov
jge
out
scas
in
scas
xorb
sub
movsb
xor
mov
xchg
popa
and
xor
mov
dec
adcb
jb
mov
outsl
dec
sarb
lret
in
mov
cmp
jp
insl
fmuls
push
push
mov
aam
adc
cmp
mov
adc
fs
xchg
xchg
add
aaa
jnp
aaa
imull
iret
push
push
push
or
mull
push
jecxz
fldenv
repz
adc
xorl
lahf
clc
sub
nop
insb
jb
cli
mov
ljmp
jns
je
mov
loop
and
ror
sarl
mov
pushf
mov
int
mov
dec
pusha
xor
xor
call
loop
add
push
inc
movsl
daa
loope
cs
jecxz
das
or
loop
xchg
in
lds
xchg
inc
test
inc
test
test
bswap
dec
cmp
imul
mov
push
fcmovb
jb
sbb
aad
ret
mov
jl
sub
jne
fcomp
mov
arpl
into
inc
xchg
fcomps
pop
cmp
push
pushf
mov
or
gs
in
cs
cld
out
or
int3
jns
cmc
pop
jne
lcall
pop
inc
das
je
test
cli
stos
mov
pop
inc
test
mov
sar
cwtl
pushf
lods
cwtl
outsb
subb
push
push
push
mov
fisubrs
jo
xor
aam
mov
fisttps
or
ret
insl
jb
out
jno
jno,pn
es
pop
xor
jl
nop
dec
push
adc
sub
shll
call
xlat
cmp
mov
dec
xchg
mov
ss
imulb
cmp
mov
add
js
xchg
ja
cmp
ljmp
aas
dec
xor
mov
xor
jne
mov
mov
popa
addr16
fsub
cmp
or
hlt
nop
hlt
insl
bound
rorb
mov
mov
fadds
fadds
jecxz
leave
mov
ret
jl,pt
and
mov
mov
je
xchg
imul
stos
inc
ljmp
push
stc
dec
ret
lock
or
aam
test
ret
sbb
xchg
scas
or
ds
repnz
xchg
sbb
cmp
movsl
pop
cmpsb
sbb
shlb
or
jno
pop
lea
in
aaa
clc
and
sub
scas
sub
push
insl
das
sub
fs
xor
addb
fisttps
pop
cld
pop
mov
xor
push
or
movsb
lods
int3
push
cltd
xchg
inc
jno
loop
lds
shr
pop
mov
jae
inc
sub
sbb
or
inc
mov
sub
stos
stos
stos
jmp
daa
mov
xchg
xchg
cld
aaa
xchg
jmp
push
sar
test
fwait
mov
sbb
xchg
mov
in
and
xor
jmp
bound
jmp
jbe
inc
mov
les
adc
adc
leave
jmp
lea
push
push
repnz
test
sub
mov
mov
pop
jp
mov
jl
dec
cmp
push
xor
shrb
jns
and
jle
pop
fildll
loope
movsl
scas
rorb
xor
repz
cmp
out
xor
ss
mov
rcr
cmp
je
jnp
jmp
sti
mov
arpl
sbb
sbbl
popa
mov
daa
movsb
fwait
mov
jo
mov
call
cmp
scas
jl
lret
rorl
jae
push
add
imul
cmc
insb
div
pop
imul
fnstenv
jecxz
fstl
cmp
sbb
sarb
push
hlt
iret
add
les
mov
mov
nop
cmp
mov
mov
mov
lcall
pop
and
dec
loop
nop
es
add
gs
les
scas
stc
test
mov
push
call
push
cmp
push
pop
loopne
cs
jne
lea
daa
in
pop
push
jbe
adc
fists
int3
push
mov
cmp
mov
xchg
push
sahf
lahf
sub
pop
sbb
push
les
clc
dec
cmp
xchg
mov
cmp
movsl
or
cli
incb
cmp
out
sar
data16
push
pop
cmpl
xor
cmc
pop
in
mov
je
movsl
lock
push
jns
sbb
jb
inc
addl
inc
repnz
add
testb
int
ja
repnz
subl
jbe
dec
fwait
repz
out
fldcw
insl
aas
dec
inc
or
in
add
push
fabs
or
jb
push
xor
mov
dec
pop
and
xor
iret
push
sahf
mov
pop
pop
fstpl
test
xlat
pop
stos
sub
repnz
iret
imul
out
and
roll
jno
inc
shlb
and
aas
lods
sbb
pushf
xor
imul
jo
pop
ret
or
xlat
xor
mov
mov
mov
je
in
sbb
dec
push
jge
xlat
mov
cmc
pop
out
jb
or
aas
mov
and
lock
jecxz
and
sub
dec
hlt
or
mov
jmp
lret
cli
cmp
pop
aad
or
sub
bound
leave
dec
outsb
pushf
xor
or
in
loopne
das
pop
mov
pop
pop
cmp
add
inc
cwtl
inc
inc
arpl
aam
aam
xchg
lock
xchg
sub
dec
andb
sub
mov
cmc
mov
gs
nop
pop
fisttpl
popf
in
outsb
xchg
lcall
pop
push
adc
mov
mov
xor
inc
lea
cli
in
lret
data16
add
adc
ds
ret
cmp
outsb
inc
incl
and
dec
mov
add
je
loopne
sub
adc
cltd
bound
push
addb
jmp
push
rorb
inc
xor
xchg
das
pop
or
push
add
or
ficoms
inc
mov
sub
sbb
push
and
into
dec
mov
xchg
inc
add
mov
mov
mov
stc
cmp
aaa
inc
iret
xor
mov
mov
gs
clc
je
push
cmp
jno
stc
aad
mov
les
adc
pop
mov
adc
mov
or
or
rcr
xor
jge
dec
xor
xor
pop
int
pop
pop
cmpsb
mov
sbb
sub
cmp
adc
adc
push
jns
je
fs
scas
call
mov
lods
inc
cli
push
xchg
add
aaa
pop
add
mov
fdivl
out
adc
clc
repz
nop
cmpsl
push
out
cld
fnstsw
in
cmp
pusha
xor
or
add
pusha
popf
jle
outsb
aam
outsl
cmp
adc
xchg
xor
mov
rcrl
pop
incb
insb
insl
insb
mov
sbb
clc
mov
jle
pop
gs
dec
addb
pop
push
xor
pop
xor
mov
test
ds
add
das
xor
cmp
mov
enter
pop
and
int
sbb
inc
ljmp
movsl
adc
pop
push
push
mov
mov
xor
lea
add
push
loopne
push
mov
add
sbb
fsubs
ror
shll
sahf
bound
push
jo
es
mov
mov
push
mov
jbe
jmp
leave
mov
das
mov
xchg
add
popa
add
fsubs
jo
xor
jb
dec
xlat
inc
iret
adc
add
icebp
adc
add
sbbb
xor
scas
cltd
inc
stos
aas
xorl
out
repz
gs
xor
sub
aaa
or
mov
ret
fcoml
push
xor
inc
and
pop
jne
xchg
jecxz
adc
lods
pop
pop
xor
dec
dec
inc
jbe
push
xchg
cmpsl
popf
sbb
out
or
fcmovnb
push
xor
cmp
sbb
imul
daa
xor
clc
pop
les
sub
shll
or
mov
imul
ja
or
and
add
shrl
xor
mov
cmp
in
test
mov
add
pop
mov
cmp
cmp
sbb
push
sub
pop
adc
stos
pop
in
lods
sbb
push
dec
scas
adc
movsl
mov
inc
push
jmp
fiadds
inc
push
call
mov
inc
daa
xor
cmpsl
stos
jae
sub
push
ljmp
stc
leave
xchg
iret
sti
push
dec
sub
jl
xchg
dec
xchg
fidivs
sbb
lock
je
addr16
or
xchg
xlat
stc
inc
dec
ljmp
call
or
add
sub
xor
lret
mov
addb
mov
xor
inc
into
mov
cmp
movsb
jg
data16
arpl
dec
scas
cli
push
inc
bnd
bnd
sbb
and
sub
push
push
aaa
adc
test
xor
pop
dec
insl
or
roll
inc
gs
out
push
testb
adc
mov
repz
stos
inc
scas
pop
inc
xchg
out
jbe
adc
jbe
inc
mov
sbb
jge
subb
push
xor
or
cmp
and
jmp
mov
clc
aam
sahf
pop
xor
adc
stos
mov
push
not
es
lret
pop
and
adc
xor
popa
or
or
mov
out
imulb
adc
pop
sbb
or
rcrb
jge
pop
decl
test
in
cmpsb
test
dec
pop
cmp
lcall
or
mov
mov
push
mov
lods
mov
cmp
orb
das
outsb
sbbl
je
adc
pop
andb
stc
pop
sbb
cmp
inc
xchg
push
aad
nop
cmpsb
adc
push
aad
mov
popf
inc
xchg
repz
push
nop
stos
dec
cs
into
adc
sbb
out
stos
js
jle
dec
inc
testl
cmpsb
dec
cli
test
cmp
fstl
mov
aas
push
shl
inc
in
nop
jmp
push
xor
and
pop
fld
std
out
fsubs
shl
mov
cmp
shl
mov
daa
inc
addr16
outsl
aad
cld
push
cmpsb
lods
and
dec
mov
push
sahf
cmp
lea
xchg
out
sub
imul
jno
push
cmp
aam
rolb
int3
dec
aas
out
inc
push
xchg
nop
cmc
cs
xchg
mov
mov
sti
fisttpl
fwait
les
push
cmp
cmp
test
dec
repz
in
jmp
imul
dec
into
into
mov
mov
sti
cmpsb
cmc
jg
sahf
xchg
push
jl
mov
jbe
mov
xchg
pushf
jg
insl
xor
jle
fldz
or
lcall
lds
cmpb
xchg
xchg
in
mov
aas
mov
popf
popa
mov
mov
xchg
mov
sarl
pop
push
out
mov
in
adc
ret
in
ret
push
dec
jae
stos
inc
ds
pop
xchg
add
jg
jae
xchg
xor
test
out
dec
mov
dec
cs
out
jge
inc
cli
push
rcrb
out
mov
lock
scas
xchg
dec
pop
fcomps
fs
movl
test
lods
dec
xchg
pop
ficoml
inc
inc
jl
mov
inc
or
inc
mov
stos
shrl
pushf
sar
in
ror
mov
pop
test
addb
add
dec
ret
push
mov
fwait
or
cmp
pop
or
decl
cwtl
lahf
sub
ret
push
sub
jo
sti
jl
add
ror
mov
in
sti
pop
pop
int
outsl
mov
out
shrb
push
ljmp
mov
movsb
cmp
or
xchg
add
in
outsl
jae
dec
xchg
mov
les
orb
icebp
mov
mov
data16
andl
stc
negl
std
cmp
cmp
inc
dec
pop
lcall
scas
into
push
inc
pop
js
outsl
dec
and
xchg
popl
xchg
ljmp
fldenv
imul
adc
scas
push
xchg
loopne
push
or
imul
cmp
pop
dec
mov
pop
mov
test
jbe
out
or
scas
inc
js
xlat
dec
sbb
jle
decb
fsubs
movaps
sti
mov
cmp
inc
push
adc
sub
int
das
cmp
in
or
dec
data16
and
mov
test
xchg
adc
mov
sub
cmp
scas
das
push
xchg
lcall
pushf
lcall
pop
cltd
out
jecxz
test
adc
sub
push
shrb
sub
out
ljmp
test
inc
repnz
add
mov
cmp
dec
jne
stos
cmp
imul
cmpsl
jno
cmp
xor
ja
sti
and
lock
adc
add
dec
xchg
push
js
push
jb
in
fbstp
mov
sti
sbb
push
sub
adc
mov
into
cmp
xchg
fbstp
mov
adcb
add
jnp
shlb
jge
add
inc
cmpsb
sbb
pop
lock
js
fcomip
stos
rclb
or
jbe
xchg
mov
lret
inc
cs
jecxz
lods
movsl
ja
add
add
inc
lahf
sti
cwtl
mov
hlt
repz
notl
shr
pusha
mov
out
cmpsl
adc
sbb
mov
push
outsl
in
popl
inc
dec
test
mov
jecxz
mov
cmpsl
mov
pop
xor
mov
cmc
sbb
pop
aas
push
mov
sbb
dec
test
xchg
bound
cs
sbb
mov
mov
arpl
add
jb
fidivs
rcl
jno
in
fwait
cld
mov
test
push
mov
push
mov
aad
jl
inc
and
jmp
jmp
pop
inc
ret
enter
jmp
pusha
lret
dec
insl
sbb
mov
jb
insl
or
add
xchg
pop
and
jle
movsl
sub
mov
shlb
jno
cmp
add
hlt
out
xchg
hlt
test
and
mov
test
sti
movsb
xchg
sbb
push
cld
shl
cmp
push
sub
mov
mov
fabs
lock
sbb
mov
inc
mov
lods
pop
dec
jg
push
out
jg
dec
mov
shrb
mov
pop
rcll
mov
pop
pop
pusha
inc
mov
out
mov
stc
daa
rcrl
imul
adc
mov
outsl
test
xor
jl
int
mov
push
xchg
mov
and
add
xor
imul
push
mov
and
sbb
in
pushf
sub
aad
cltd
sub
inc
insb
cmp
in
push
mov
and
push
adc
cli
xchg
cli
sbb
dec
add
push
pop
mov
sbbl
stos
cltd
rcrb
test
lock
sub
push
mov
sub
push
jl
push
dec
cmc
mov
jmp
xchg
adc
sahf
adc
adc
sbb
add
xchg
add
sbb
call
loop
fisttps
xchg
adc
ja
outsb
outsl
or
cld
mov
mov
dec
loopne
xchg
jbe
mov
cmp
sub
stos
fistl
xlat
imul
shll
pop
mov
jp
mov
pop
mov
or
mov
add
imul
mov
jo
cmp
cmp
adc
push
std
test
js
mov
sbb
lret
stos
and
scas
cmpsb
adc
aaa
pusha
lahf
in
cmpsl
cwtl
inc
std
movsb
fs
dec
xchg
xchg
js
dec
ljmp
cltd
sub
and
jne
mov
in
je
inc
add
push
fisttpll
in
dec
pop
jle
jb
cs
lahf
into
and
or
xchg
mov
cwtl
inc
mov
xchg
test
dec
mov
add
pop
shlb
xor
loop
and
call
inc
pushf
les
or
mov
sub
leave
mov
cld
inc
fstpt
mov
loop
lahf
outsb
insl
shlb
pop
sbb
icebp
test
lds
sti
popf
and
cmp
push
xchg
lahf
adc
mov
adc
fldln2
rol
scas
insl
adc
adc
insl
xchg
xor
aaa
dec
shlb
repnz
mov
mov
add
fcmovb
insb
sti
lods
clc
jo
mov
in
jg
or
fdivl
pop
xchg
aam
and
fdiv
in
or
inc
and
roll
sub
xor
mov
pop
xchg
lods
int3
mov
mov
aas
ja
and
clc
les
loop
into
cltd
unpcklps
pop
inc
arpl
cmp
push
mov
dec
mov
rolb
leave
ret
ds
push
out
movsb
push
mov
jecxz
clts
loope
pusha
mov
mov
mov
stos
mov
xchg
sbb
ja
mov
adc
mov
xchg
clc
dec
popa
pop
push
mov
mov
addr16
adc
insb
pop
dec
out
push
fisttpll
push
rcrl
pushf
dec
addr16
sub
mov
jmp
xor
into
cmpsb
jno
sbb
fdivrl
repz
jb
mov
hlt
aaa
xchg
cltd
xlat
push
cmp
iret
and
dec
sub
imul
ljmp
into
xlat
loopne
push
jo
mov
pop
cmp
int3
or
xchg
or
hlt
aaa
shrl
lock
jl
jmp
icebp
in
jl
lock
and
push
adc
ljmp
push
cmp
into
inc
scas
xor
inc
std
dec
jbe
jecxz
out
jne
lret
cmpsb
sub
push
fwait
dec
pmulhuw
aas
je
or
cmp
mov
mov
jmp
adc
dec
lahf
out
pop
ret
jbe
inc
cltd
sub
xchg
loope
nop
inc
popf
sbb
and
hlt
inc
adc
arpl
lret
shlb
mov
pop
mov
dec
add
dec
jg
in
jbe
out
adc
xchg
mov
lods
mov
aaa
pop
loope
pusha
jbe
arpl
jg
int
mov
push
cmpsb
test
push
dec
jbe
dec
rclb
pop
rclb
jbe
fnstsw
iret
clc
adc
push
rcll
or
sarb
clc
movsb
and
xor
and
mov
or
scas
test
pop
push
mov
mov
hlt
add
pop
sbb
add
insb
mov
outsl
stos
cmp
adc
sub
and
gs
adc
sarb
and
cmp
cltd
inc
sub
out
mov
scas
or
inc
cmp
cmpsb
mov
in
or
popf
xor
out
mul
insb
xor
repnz
adc
xchg
adc
jns
rol
push
inc
sarb
ret
insb
dec
scas
cmp
mov
xchg
sub
hlt
int
lret
inc
adc
pusha
inc
xor
jo
push
adc
rcrb
sbb
outsl
mov
and
test
and
dec
mov
sub
pop
mov
test
repnz
sub
ljmp
push
dec
jge
xor
adc
sbb
arpl
out
push
int
out
stc
sbb
popa
rcll
add
or
jecxz
cmpsb
xlat
leave
clc
test
sti
push
scas
mov
pop
pop
dec
in
add
lea
mov
out
push
adc
mov
push
lret
xchg
xchg
mov
inc
jl
int3
push
jns
les
xchg
aam
enter
stc
inc
inc
adc
add
clc
dec
cmpsb
rolb
insb
insl
dec
aam
das
in
cmp
lds
ror
jmp
add
out
sarb
aam
fidivrs
addl
mov
das
stos
pop
inc
ljmp
cld
jae
cmp
movsl
push
cs
repz
popa
xchg
pop
mov
rcrb
js
cli
int3
and
les
and
or
nop
movsl
js
lret
gs
outsl
into
test
test
add
imul
or
mov
rolb
pop
pop
mov
push
inc
nop
push
aad
lds
add
cmpsb
mul
jbe
jb
pop
jbe
mov
mov
and
sub
cmp
pop
push
pop
mov
adc
pop
mov
stc
mov
cmp
es
add
bound
sbb
mov
fadd
push
idiv
and
lret
ljmp
jle
inc
cmpsl
cmp
and
mov
inc
pop
test
jge
lcall
jns
js
sub
add
or
daa
pusha
sub
jo
add
popa
xchg
inc
ljmp
dec
cmp
test
aaa
and
push
or
and
je
mov
stos
bnd
xchg
cmp
mov
sarb
popl
dec
xchg
pop
icebp
clc
add
dec
loopne
setns
and
jge
xchg
xlat
sbb
xor
xlat
loope
xchg
cs
test
fbld
push
or
dec
in
mov
add
repnz
out
orl
mov
rep
jbe
xchg
scas
xchg
dec
xchg
jecxz
xchg
pop
pop
sbb
mov
fstl
jns
mov
insb
mov
outsl
je
out
dec
outsl
sub
idivb
xchg
lcall
mov
loope
mov
inc
adcb
inc
mov
mov
dec
test
fnstenv
mov
fcoms
fs
das
clc
and
xor
mov
xchg
dec
mov
jns
shrl
das
lock
dec
leave
lea
and
dec
mov
inc
fdivs
mov
or
push
fstpl
jl
jae
and
jp
xchg
pop
jg
xlat
or
mov
push
xchg
popa
xor
ret
dec
aaa
and
cmp
aaa
in
xchg
cmp
xor
jge
ja
sub
or
out
xlat
iret
pushf
movb
imul
cmp
int
iret
jno
push
dec
inc
jo
pop
sahf
fwait
pop
clc
fildl
dec
xchg
dec
mov
aad
adc
inc
hlt
std
in
sbb
inc
or
dec
sub
lahf
pusha
popf
jb
jmp
push
lods
int
gs
cmp
out
mov
xchg
adc
imul
sahf
xchg
inc
adc
mov
inc
sub
call
mov
dec
hlt
loop
int
or
notl
insl
inc
data16
mov
shrl
fs
mov
fcoms
push
mov
cmc
aad
add
inc
outsb
pop
hlt
cld
aam
add
xchg
lcall
daa
lcall
fildl
adc
sub
push
inc
iret
popf
pop
and
adc
out
sbb
push
jmp
fidivl
ds
ficompl
jnp
inc
cli
movsb
lea
jnp
insl
aas
push
push
fisubs
adc
es
insl
xchg
es
cmp
hlt
adc
xor
outsb
leave
sub
cmp
fwait
cmc
and
mov
cli
sub
lods
mov
repnz
cmp
add
xchg
jo
mov
call
ret
jae
inc
gs
adc
scas
out
call
jl
mov
sub
les
push
test
call
lea
pop
outsl
insb
mov
mov
fiaddl
xor
leave
xor
or
call
js
push
ss
xchg
or
xor
cmp
ret
ret
stos
lock
stos
bound
mov
mov
pop
fs
movsl
pusha
clc
pop
insl
lock
push
jb
leave
add
jns
xchg
jp
mov
or
inc
xchg
out
loopne
fsubrl
jbe
pop
xchg
jg
je
int3
xchg
or
cld
dec
xor
imul
xlat
leave
scas
stc
in
xchg
mov
inc
dec
stos
icebp
lret
js
into
hlt
xchg
push
cmpsl
mov
or
dec
shrl
xor
mov
jecxz
loopne
cmp
shr
jno
sbb
jnp
cwtl
movsl
pop
sub
inc
decl
dec
mov
push
rcll
ret
and
mov
inc
add
clc
sbb
lds
sarl
enter
sub
imul
out
imul
fsubr
in
inc
jp
xor
mov
rclb
ja
inc
out
nop
lea
sahf
test
push
mov
lock
ret
sub
and
lcall
addr16
xchg
sbb
rcll
lods
aad
cmp
fistps
int
call
add
popl
xor
and
repnz
icebp
repnz
fwait
insl
data16
shl
xchg
ja
daa
jae
shlb
es
outsb
sub
in
data16
outsl
mov
leave
inc
push
or
sahf
in
pop
push
pop
mov
fdivrl
popl
sub
mov
pop
repnz
rcll
pop
inc
test
add
in
mov
dec
mov
dec
repnz
sbb
mov
cmpsl
dec
add
aaa
mov
fldcw
mov
inc
and
sbb
sbb
jb
or
cs
mov
xor
adc
adc
sub
dec
test
ret
in
nop
imul
es
mov
stc
ficomps
aad
mov
xchg
push
ret
xchg
lret
fistps
lret
lahf
ja
adc
aam
xor
jno
or
dec
mov
push
into
scas
mov
inc
pop
xor
push
stos
and
in
fbstp
movsb
fisubs
or
mov
add
daa
outsl
dec
sub
ja
jle
pushf
xor
and
push
pop
sbb
stc
ljmp
jae
lahf
addr16
jge
push
arpl
add
pop
rcrb
and
pushf
iret
xor
fisttpll
shrb
cli
cwtl
and
add
jl
outsb
repz
jmp
adc
roll
pop
leave
dec
push
divb
xor
rcrl
es
nop
in
jecxz
outsl
mov
xor
orl
jnp
and
sbb
loope
sbb
aaa
jnp
insb
push
xchg
mov
enter
repz
xorb
testl
stc
sub
inc
nop
cli
es
sbb
nop
fistps
popa
and
out
sbb
mov
xchg
xor
mov
push
ss
movsl
xchg
push
adc
jge
mov
or
fisubl
pushl
repz
inc
pop
movsl
movsb
pop
mov
bound
int
mov
push
sbb
loopne
inc
sti
pushw
fwait
insb
xchg
push
loopne
and
mov
out
addr16
jno
loope
jecxz
fld
pop
arpl
int3
and
imul
pop
pop
mov
popf
lods
cmp
fsub
xchg
inc
jle
fcomi
dec
gs
test
ss
xchg
jge
je
inc
push
fists
sub
cmp
jno
cmp
adcb
jb
fsubrs
pop
sbb
dec
flds
jae
sahf
pop
push
dec
dec
das
sahf
cmpsl
cmpsl
sarb
in
cmp
dec
pop
mov
rcrl
rolb
movq
add
ss
and
and
lret
or
in
inc
jg
push
sbb
and
fnstenv
fiadds
adc
jo
test
das
out
xor
rorl
mov
pop
movsb
in
jns
ficomps
inc
mov
lock
adc
loope
mov
adc
lds
enter
lret
push
scas
xchg
mov
inc
test
fisttpl
jb
movsb
sbb
out
pop
push
je
xchg
fldcw
or
xchg
adc
inc
std
mov
aad
addr16
push
add
mov
xchg
xor
jl
int3
mov
or
lcall
adc
mov
in
pop
jmp
sbb
pop
mov
add
cli
pusha
movsl
jo
test
adc
roll
mov
rclb
mov
push
lret
call
jbe
inc
inc
adc
jg
pop
and
sbb
call
ja
add
jle
mov
sarb
xchg
dec
sub
jecxz
aaa
mov
movsb
aad
push
ja
adc
push
pop
push
push
mov
xchg
and
scas
sbb
mov
lods
testl
push
les
hlt
inc
cld
rolb
jecxz
je
lods
stos
in
xor
addb
pop
mov
sub
or
push
lahf
xchg
dec
or
add
xchg
dec
xor
mov
xchg
xchg
shlb
jmp
mov
stos
sti
fsubrl
movl
pushl
loopne
pop
in
jnp
lods
sbb
repnz
xlat
iret
stos
pop
jg
mov
fistpl
inc
sbb
and
push
rorl
pop
mov
call
into
movsb
mov
loopne
lcall
stos
lahf
pop
or
xor
mov
mov
call
movsb
adc
mov
les
fs
aad
movb
imulb
cmp
xchg
sub
clc
pop
stos
mov
jp
insb
mov
in
insl
xchg
loopne
shlb
xchg
push
lock
xor
pop
or
pop
or
aad
fdivrl
jno
adc
lea
jge
mov
cli
inc
pop
pusha
ja
sbb
bound
cmpsb
jno
test
mov
sti
cmp
leave
and
es
inc
xor
mov
sub
testb
jns
pop
mov
ret
cmp
mov
inc
and
mov
sbb
mov
xchg
clc
cmpsb
xchg
aad
sbb
fs
or
xchg
cld
adcb
sbb
cmp
repz
in
in
or
push
clc
and
mov
dec
aad
js
and
mov
aas
and
int3
sti
out
sahf
arpl
testl
cs
mov
mov
or
das
pop
jnp
mov
nopl
stos
lahf
icebp
call
mov
xchg
dec
push
mov
pop
mov
mov
lret
push
pop
jae
scas
movsb
fidivrs
add
jle
pop
sub
testl
dec
test
push
sub
cmp
in
dec
cs
rorl
dec
out
cmp
js
jecxz
or
and
mov
nop
xchg
sub
xor
jmp
jg
cli
cmp
adc
pop
pop
add
sahf
xchg
push
xchg
movsl
mov
adc
add
sbb
in
mov
pop
or
test
andl
test
cmp
sbb
pop
jb
mov
mov
inc
sub
xor
mov
sbb
sbb
xchg
ret
sub
mov
fldenv
in
addr16
test
int
mov
mov
push
mov
mov
pop
dec
orl
xor
nop
movhps
leave
shlb
jns
cld
adc
jmp
jne
pusha
jne
addr16
add
mov
sub
pop
push
pop
jne
inc
fisubrl
xchg
mov
in
ss
adc
xchg
bound
sub
jnp
aad
popf
cli
xchg
xchg
fimull
out
cmp
inc
push
push
ret
and
dec
inc
jne
jp
pop
pop
jo
loopne
outsb
sar
lcall
jae
imul
aas
sbb
mov
jp
sahf
mov
cmc
test
push
ss
ds
lea
push
cmpsl
sbb
pop
fisubrs
xchg
xchg
add
leave
mov
insl
test
int
push
in
lret
push
loopne
mov
cs
mov
mov
or
aaa
xchg
xchg
movzwl
add
sub
jl
adc
and
inc
popa
mov
push
mov
fwait
leave
xlat
fwait
or
out
ljmp
add
or
js
xor
pusha
add
std
sub
cmp
lds
int
test
lds
ret
sbb
pusha
mov
shl
cld
stos
jno
stos
cmpsb
mov
adc
dec
mov
je
pop
ret
push
test
sub
cwtl
gs
xor
mov
xor
cli
insb
fwait
and
adc
xchg
imul
arpl
iret
mov
ja
fdivp
jns
fstl
push
repnz
out
popa
mov
inc
rcll
adc
xlat
inc
xor
adc
dec
pop
das
in
sbbl
out
jl
jecxz
scas
ljmp
cmpl
fildl
nop
inc
mov
frstor
jl
lret
test
pminub
insb
jmp
ja
sub
and
shlb
sahf
jns
dec
vcvtss2si
stos
xchg
inc
ds
lcall
xor
pop
adc
int3
popf
lods
push
and
adcb
nop
push
rcr
sub
addr16
arpl
mull
push
nop
insb
mov
scas
mov
imul
adc
lods
movsb
push
mov
fmuls
xchg
adc
iret
mov
pop
mov
jae
repz
in
aaa
push
or
data16
jnp
inc
jnp
xchg
movb
imul
xchg
mov
mov
pop
sbb
rolb
mov
addr16
loope
inc
inc
fstps
push
dec
xchg
jne
sbb
inc
aad
imulb
inc
pop
and
movsb
or
call
or
aas
xchg
int
ja
adc
xchg
cmp
faddp
daa
cmc
add
pop
int
ficoms
scas
jle
xchg
loopne
ss
mov
popf
lret
scas
pop
push
xchg
push
jl
and
jo
mull
pop
std
or
lods
enter
cltd
arpl
mov
arpl
dec
daa
jo
outsl
mov
or
fcomip
lahf
mov
scas
sbb
dec
and
adc
bound
jo
stos
jns
and
xchg
cmp
stos
push
jbe
mov
mov
mov
or
movsb
rol
mov
push
jb
cmp
inc
pop
push
dec
call
pusha
cmp
dec
adc
sub
ljmp
or
leave
call
push
pop
divl
cmc
insb
pop
dec
call
fidivs
and
in
mov
dec
lods
mov
cmpsl
fildll
or
repnz
dec
ffreep
jl
in
sub
arpl
sbb
inc
mov
divb
lds
mov
clc
mov
in
lods
dec
daa
jg
xor
scas
arpl
rcr
roll
xlat
xchg
mov
sub
add
inc
in
sbb
xor
and
fsts
js
mov
div
inc
or
adc
ret
add
add
inc
jae
dec
loopne
jl
repz
cmpl
pop
lret
shl
lock
jle
out
repnz
insl
pop
dec
fcomps
sahf
xor
cmp
ret
ja
pop
add
sbb
pop
add
or
sub
fwait
imul
dec
xchg
push
pop
pop
mov
mov
scas
jnp
jae
je
push
imul
int
fwait
pop
dec
scas
insb
out
jne
mov
lcall
rolb
lret
fiaddl
xchg
lahf
adc
cmpsl
out
outsb
jle
iret
cmp
in
lods
leave
sbb
and
mov
jo
sbb
mov
iret
addr16
add
add
mov
pop
mov
cmp
sub
dec
daa
paddq
movb
orb
inc
xchg
out
lea
into
pop
fwait
xor
out
lods
mov
and
fcmovu
inc
mov
or
cld
mov
mov
popf
pop
ljmp
jo
or
lahf
cmpsl
int3
sbb
outsb
imul
aad
hlt
dec
js
add
out
lcall
iret
pop
adc
mov
mov
mov
popf
sbb
repnz
mov
sbb
std
cs
or
adc
dec
mov
or
mov
push
fstp
jnp
pop
mov
mov
dec
mov
xchg
sti
inc
jge
add
mov
and
xor
shrb
mov
aaa
mov
rcl
std
jae
jmp
ret
mov
sbb
iret
insl
or
fisttpll
pop
xor
inc
notl
jb
pop
and
xor
dec
arpl
call
scas
or
outsb
rcll
or
test
adc
es
aaa
enter
push
aas
repz
mov
ds
mov
inc
cmp
loope
test
pushf
and
jp
nop
scas
cltd
sub
loope
int3
add
mov
fildl
xlat
inc
outsl
lret
push
jne
push
pop
ja
repz
push
fsubl
shlb
stos
or
push
frstor
pop
xor
insb
aaa
stc
and
ja
test
cmpsl
fs
mov
mov
xchg
pop
testl
and
jge
jp
ret
aaa
test
ror
fdiv
inc
add
push
fsubrs
inc
in
cmp
sahf
ljmp
je
or
shrb
mov
ret
ja
sub
adc
hlt
inc
jl
xorl
icebp
cld
sub
loope
nop
push
sub
mov
data16
jnp
in
shrl
dec
cli
repz
call
testb
jne
mov
fsubp
dec
lar
ret
inc
adc
pop
jns
loopne
dec
sbb
push
clc
repnz
les
xchg
leave
gs
rcrl
inc
push
sbb
cmpsl
lds
lods
movsb
iret
xor
dec
daa
flds
andb
inc
or
push
fbld
jle
push
xlat
xchg
inc
aad
rcrb
and
jg
mov
jnp
and
mov
add
mov
es
inc
call
push
xlat
mov
stos
sbb
fbstp
cmp
pop
sub
push
mov
sub
cmp
filds
mov
imull
sahf
es
jo
jnp
mov
jae
shlb
insl
inc
xchg
xchg
mov
sub
shrl
gs
sbb
stos
outsb
adc
pop
sub
std
cmpsb
in
mov
fistl
cmpl
shll
xor
fiadds
dec
sub
lret
test
hlt
mov
jb
hlt
cmp
aad
shll
or
addr16
xchg
add
lods
push
dec
adc
and
xchg
and
sub
out
cmc
loopne
fldpi
pop
push
cs
sti
lret
pop
cld
test
xchg
mov
xchg
subl
pushf
loop
and
shlb
mov
rcll
jg
in
adcl
xchg
call
inc
pop
cmp
out
jmp
push
pop
into
mov
lds
aas
sti
ja
mov
xchg
rcrb
in
mov
jbe
or
mov
mov
inc
movsl
mov
inc
or
adc
mov
xchg
fwait
aas
stos
adc
inc
mov
scas
cmc
inc
mov
or
lret
fs
stos
push
and
fidivl
ret
sbb
mov
push
pop
xor
ja
dec
mov
xor
push
ja
daa
outsb
mov
in
push
jp
pop
or
jbe
lock
scas
and
jne
scas
das
out
dec
arpl
mov
scas
sub
sti
call
fs
repz
pop
sbb
inc
xchg
xchg
cmpb
lds
cmpl
imul
ja
xor
enter
pop
ret
add
and
cmp
pop
lock
cmp
mov
popa
in
fstpl
add
mov
repnz
inc
mov
ret
mov
xchg
jmp
es
nop
and
mov
inc
mov
fs
shlb
sbbl
idivb
sbb
or
scas
inc
mov
xbegin
jae
ss
mov
jmp
push
clc
rcll
loope
in
adcl
enter
cmp
iret
repz
xor
mov
cltd
fsubrp
mov
roll
dec
call
adc
mov
dec
rolb
popf
xchg
xchg
lret
scas
stos
repz
and
mov
in
pop
inc
xlat
sub
subl
into
inc
or
xchg
push
push
push
xchg
cmpsb
arpl
cmp
out
repz
adc
out
les
call
lret
mov
push
cmp
test
mov
mov
je
or
pop
adc
rolb
xchg
xchg
movsl
loope
push
or
ret
ret
add
xchg
gs
and
outsb
rclb
sbb
xchg
into
inc
mov
cbtw
decb
in
imull
dec
push
sub
push
add
cmpsb
dec
lahf
mov
xor
sbb
and
sbb
push
pop
xor
pop
out
in
push
mov
xchg
out
out
imul
dec
xor
mov
std
pop
adc
pop
push
fadd
mov
inc
mov
test
jno
cs
cmp
lock
js
fsubrs
mov
and
aas
jne
aas
jmp
inc
xchg
xor
outsb
xor
pop
gs
adc
ja
and
sub
cmp
rcll
in
lcall
imul
push
jle
out
call
stos
enter
cmp
inc
out
add
mov
sahf
pop
mov
push
rcll
mov
mov
add
lods
loop
enter
jp
ja
push
icebp
jb
xchg
xchg
addb
xor
jmp
adcb
ss
movsb
mov
popf
aas
push
or
pop
mov
jle
pop
popf
cmp
pusha
pop
and
nop
pop
push
inc
cmp
push
mov
cmpsl
or
sub
je
aad
jp
mov
push
imulb
push
add
out
adc
setae
and
mov
bound
fs
out
and
vaddss
ficoms
fs
add
gs
mov
lods
jae
scas
insl
and
inc
jg
adc
pop
xchg
aam
stos
pushf
hlt
dec
push
push
xchg
repz
testl
sar
push
rorl
jmp
sbb
inc
shlb
imul
xchg
xor
call
mov
cli
stos
push
and
xchg
adc
cmc
pop
dec
sbb
dec
adc
and
xor
pop
and
and
xchg
pushf
or
mov
mov
test
adc
aas
pop
cmpl
sahf
arpl
ret
or
or
bound
sarb
xor
adc
xchg
pop
jge
inc
and
mov
aas
mov
jne
loope
push
enter
mov
cmp
hlt
aam
test
jmp
testb
xchg
xor
push
adc
lcall
insb
ja
into
xlat
pop
gs
jmp
sbb
gs
filds
push
sbbl
fimuls
push
into
rcrb
adcb
mov
jmp
cmp
or
mov
insl
clc
jno
pop
int
mov
jl
pop
daa
out
jg
lock
scas
stc
pop
push
pushf
sahf
es
dec
pop
mov
and
lds
and
lahf
jns
push
and
mov
adc
mov
mov
clc
jg
xchg
xor
sub
xor
dec
xor
iret
xchg
mov
sti
add
insl
xchg
jge
adc
fs
sarb
dec
stos
pop
adc
in
data16
jl
cltd
outsb
dec
hlt
mov
mov
mov
aas
enter
sub
jbe
jl
lods
mov
fistl
lret
mov
mov
cmp
movsb
lods
or
xchg
pop
lea
mov
push
cmp
das
adc
insb
xor
cmp
scas
test
fidivrs
leave
xchg
mov
cmpl
or
imul
mov
std
cmpsl
inc
repnz
cmpsb
movsb
xchg
jle
adc
jns
jle
xchg
push
jl
sbb
jg
dec
lcall
dec
mov
lret
add
mov
shrb
xlat
in
movsl
cmp
mov
ljmp
lock
push
push
outsl
aaa
mov
sub
and
fisttpll
adc
lret
in
dec
leave
aad
jecxz
sub
mulb
add
xor
fdivl
pusha
sub
push
movsb
sbb
insb
inc
dec
ss
inc
or
mov
adc
sub
ret
lret
or
adc
mov
mov
adc
cltd
bound
mov
sbb
inc
mov
sti
sub
fwait
mov
es
cmp
fsubrl
cmpsb
jecxz
aas
sbb
fs
cmp
frstor
add
pop
mov
ja
fs
lods
inc
cwtl
jne
pop
ret
sbb
fbstp
test
xchg
mov
in
outsb
lahf
xor
aad
push
mov
imul
std
ss
test
popa
add
testb
mov
mov
fdivrs
test
outsb
stc
in
inc
repz
popf
and
lret
in
push
imul
xchg
shll
imul
loopne
push
inc
mov
xchg
adc
jmp
dec
xchg
push
addr16
lret
pop
scas
cmp
mov
outsb
or
bound
push
xlat
sti
scas
mov
cltd
sub
inc
sbb
inc
enter
mov
mov
push
fiadds
fwait
inc
filds
mov
xchg
int
sub
decb
add
aaa
mov
cmp
jecxz
incb
addr16
sub
arpl
inc
push
push
inc
shl
or
daa
and
pop
cld
cmpsl
and
cmp
and
hlt
mov
xchg
fadds
xor
or
xchg
mov
out
scas
xor
dec
gs
mov
idivw
lds
inc
nop
outsb
popl
jb
cmp
pushf
ficoms
cmp
loopne
inc
sti
sub
rcr
xor
les
out
mov
outsl
cmp
sbb
pop
mov
push
xor
jge
bound
xchg
nop
push
pop
aad
mov
stos
out
or
dec
inc
inc
adc
push
scas
daa
sub
into
shlb
movsb
cmp
sbb
test
clc
adc
iret
mov
mov
ja
mov
or
adcb
pop
stc
iret
push
cmc
rcrl
and
mov
xchg
jle
stc
addr16
fs
push
jle
cmc
adc
cli
jecxz
jmp
xchg
pop
aad
sar
mov
aam
push
out
push
dec
jns
lahf
loope
xor
lds
adc
andb
ja
stc
fnstenv
adc
push
sub
fsubl
push
std
sbb
scas
jnp
sub
adc
xchg
xorb
sub
sub
adc
in
xchg
fsubs
mov
mov
or
jno
add
negb
aaa
rcll
xchg
push
mov
into
fcoms
pop
jnp
sbb
adcb
repz
ljmp
je
js
push
and
sub
lods
adc
mov
jmp
setae
iret
jnp
inc
sub
mov
jns
outsb
jp
movsb
bnd
push
jbe
mov
lds
dec
imul
dec
cmp
xor
mov
imul
rorl
aaa
push
add
xchg
loop
mov
jl
cmp
cmp
sub
scas
adc
in
lds
xor
enter
in
js
fisttpll
out
lcall
bound
sbb
ss
dec
push
out
mov
iret
ds
lods
shrl
repnz
sbb
mov
mov
mov
testb
sbb
or
sarb
fidivrl
pop
cwtl
jno
sub
xor
insb
cltd
and
std
dec
jae
daa
cmpl
pusha
xor
pxor
in
mov
nop
fwait
mov
das
and
aam
or
lods
push
enter
loope
into
loopne
fwait
call
scas
sbb
pop
xchg
rclb
ret
mov
sbb
push
mov
es
mov
sbb
inc
fiadds
pop
or
mov
rclb
movsl
xchg
mov
xlat
inc
fildl
mov
stc
jmp
sub
aam
clc
arpl
out
sahf
ljmp
mov
mov
push
in
mov
test
aas
cmp
push
movsb
std
dec
rcrb
push
sub
inc
adc
xchg
mov
add
jmp
outsb
pop
add
xchg
sub
pushf
rorl
in
movsl
xor
mov
lahf
jo
pusha
lcall
adcl
cmp
int3
mov
mov
adc
data16
and
dec
lcall
in
call
jp
mov
shrb
insl
push
and
jmp
add
pop
outsb
stos
jnp
push
les
pop
cmp
cmp
cmp
add
lret
repz
test
dec
into
lock
push
rep
roll
cmp
pop
flds
mov
jge
pop
xor
or
aad
rcr
pop
call
xor
stos
ficomps
xchg
loopne
and
push
std
sbb
inc
pop
sbb
push
inc
dec
fcompl
insb
jae
jg
mov
lret
mov
fstl
dec
push
pushf
mov
cmpsb
push
dec
mov
inc
mov
aas
in
mov
push
fwait
and
repz
popf
fs
lret
sahf
test
call
push
adc
add
lahf
xchg
add
enter
sub
subl
leave
mov
std
push
sbb
pop
sarb
and
pop
das
mov
mov
pop
and
push
or
sub
or
jbe
mov
mov
push
pop
mov
outsb
fisubrs
inc
mov
lcall
popf
dec
sub
mov
sbb
sub
jae
loope
neg
scas
shlb
mov
mov
xor
iret
sarl
popf
and
rol
enter
mov
dec
in
sub
gs
test
dec
ficoml
popl
sbb
dec
rclb
pop
add
mov
lea
ja
pop
lock
dec
mov
and
add
sub
popa
adc
sub
dec
icebp
jnp
loop
sbb
scas
or
dec
loope
cmp
and
insb
or
inc
push
fildl
mov
dec
cltd
jmp
leave
lods
pop
jecxz
mov
mov
mov
mov
daa
add
mov
mov
sub
adc
push
or
mov
lsl
dec
outsl
shrb
cmp
out
cmp
inc
jo
aaa
je
pop
sub
ja
insl
ljmp
stos
sbb
in
daa
cmp
push
inc
sub
pop
enter
adc
adc
mov
jle
dec
nop
push
jmp
pop
cmpsb
lods
adc
xchg
sub
incl
xchg
xchg
mov
dec
mov
fmull
ficompl
mov
shlb
fwait
testl
mov
sbb
adc
shll
or
adc
pop
hlt
icebp
pop
jnp
ljmp
and
jmp
push
mov
cli
rcr
push
jo
mov
inc
pusha
inc
lret
pop
mov
clc
pop
js
lret
mov
shrl
pop
adc
mov
sbb
pusha
dec
in
sub
push
cs
jge
inc
test
push
mov
shl
fwait
test
in
lret
add
add
xor
or
xchg
mov
mov
neg
icebp
ds
call
inc
jno
add
mov
cmp
movsl
call
xchg
pop
and
pop
gs
jmp
adc
enter
in
outsb
dec
shlb
jmp
call
outsl
sub
mov
cmpsb
sarb
insb
mov
into
loop
in
xor
lret
jne
inc
aaa
dec
lds
std
xor
xor
push
flds
arpl
clc
xor
mov
dec
shlb
xchg
ja
int3
sub
lods
inc
xchg
lods
nop
repz
je
hlt
xchg
xor
in
dec
pop
aad
push
insb
pcmpeqd
les
int3
mov
add
mov
mov
pusha
imul
and
lcall
cmp
add
mov
sub
inc
inc
addl
jp
mov
push
fstp
lods
add
and
adc
outsl
push
sbb
aad
mov
cltd
cmp
mov
xor
or
and
xchg
ret
xor
ret
cmp
jle
daa
push
mov
add
mov
sbb
rcrb
loopne,pt
test
int3
sbb
xor
mov
out
pop
xchg
push
loope
and
push
sbb
outsl
test
mov
sub
inc
out
test
or
mov
addr16
rolb
fildl
sahf
jecxz
pop
xchg
push
push
imul
pop
mov
cmpsb
mov
nop
pop
xchg
mov
mov
int
and
mov
sbb
icebp
push
insl
push
mov
cmpsl
inc
sti
mov
out
cltd
fsubl
aam
and
pop
pop
lret
mov
and
andb
rcll
imul
aad
out
jo
clc
stos
pop
mov
shrb
fildll
mov
rcrl
addr16
push
popf
pop
pop
stc
cmp
dec
push
add
xchg
sbb
addr16
fsubrl
mov
in
inc
movsl
xor
test
lahf
insb
out
or
out
sub
enter
out
scas
pop
imul
or
lock
xor
idivb
sbb
push
pop
insl
add
fbld
cmp
push
lahf
add
clc
imul
popf
push
test
cwtl
js
hlt
enter
arpl
sub
insb
mov
fdivrs
scas
sar
cmpl
imul
jecxz
or
popa
fcmovb
mov
data16
adc
lea
mov
inc
fstpt
test
pop
leave
xorb
sub
mov
sahf
aaa
out
fwait
mov
pop
cmp
fistps
mov
clc
stos
das
mov
lods
inc
js
dec
int3
shrl
insl
xor
fisubrs
repz
xor
sub
mov
mov
jnp
dec
jle
aam
jne
sahf
sahf
or
jecxz
scas
push
arpl
inc
add
jno
arpl
fsubrl
fcmove
push
orl
mov
cli
push
test
data16
movsl
jo
lds
clc
sarl
lods
and
les
mov
inc
or
or
mov
lea
loope
add
push
fisttpl
jmp
mov
es
add
shlb
or
or
cli
dec
outsb
mov
sub
mov
dec
jg
jb
sbb
repz
out
jle
jo
les
imul
scas
jp
iret
lea
ror
mov
add
mov
jno
test
jne
shlb
dec
lret
outsl
das
cs
lds
cs
lret
movsb
and
jns
mov
jno
xlat
jne
test
cld
testl
adc
cmp
add
push
xchg
cwtl
lret
stc
jne
mov
sub
neg
mov
or
push
lret
mov
pop
mov
xlat
mov
pop
inc
daa
xchg
js
mov
jmp
mov
sub
ss
mov
mov
loopne
push
xor
sub
add
jb
xchg
push
and
cmp
sub
mov
gs
dec
ficoml
mov
pop
jmp
insl
xlat
dec
lock
cmpb
rcl
sahf
nop
test
jno
pop
add
test
mov
loope
pushf
mov
xchg
stc
pop
imul
test
ja
pushf
jle
sbb
in
sub
pop
or
mov
jmp
jae
or
daa
rcrb
push
adc
mov
dec
sahf
xor
aad
xchg
xchg
out
ja
mov
dec
cmp
mov
cs
jno
mov
push
clc
cs
xor
sbb
xor
aam
mov
popa
push
mov
mov
pop
add
pop
icebp
test
jae
xchg
mov
icebp
shlb
js
outsb
pop
je
mov
enter
into
and
cmc
lds
cmp
and
jbe
xchg
les
xchg
aaa
in
in
frstor
xor
pop
adc
pop
jne
subl
fsin
dec
lock
push
cli
push
fistps
inc
clc
adc
jecxz
imul
mov
add
ret
dec
mov
insb
int
cmp
iret
sahf
idivl
leave
lahf
add
sti
insl
aad
inc
jne
or
push
repnz
loopne
mov
std
in
aad
lock
iret
loop
outsb
mov
jecxz
jmp
ljmp
push
jnp
popa
sbb
fs
push
xchg
jle
sbb
dec
mov
pop
lahf
fstl
adc
repz
jb
and
popf
aad
cmp
cmpsb
incl
int
in
js
lods
fnstenv
mov
lret
pop
out
lea
mov
in
sbb
stos
mov
push
popa
pop
push
cwtl
iret
loope
add
test
and
pop
sub
fs
sub
and
inc
nop
cltd
sbb
mov
xchg
inc
xchg
push
testl
das
ret
xchg
mov
dec
jb
sbb
add
inc
fwait
cmp
cmp
insl
fdivrp
xor
jge
or
lods
ss
adc
inc
cmpsb
test
jmp
mov
nop
mov
rdmsr
pop
jbe
int3
push
movsb
mov
xchg
pop
add
mov
mov
sarb
shlb
push
cmc
mull
stos
pop
or
sbb
or
sti
jmp
lahf
adc
js
mov
cwtl
test
xorb
cmp
bound
cmpsb
and
dec
cltd
popa
cmp
bound
outsb
push
sahf
iret
xor
sub
lods
scas
xchg
sbb
jecxz
pop
xor
xchg
jnp
adc
cmc
fwait
and
cwtl
mov
popf
add
in
add
popa
mov
sub
push
push
adcl
clc
pop
rcll
xchg
das
jecxz
das
jecxz
jg
sub
or
adc
andl
mov
lds
sub
stos
xchg
in
pop
mov
cmp
js
push
out
mov
mov
shl
lahf
cmp
cmp
outsl
gs
hlt
inc
sbb
sub
mov
into
dec
jl
mov
out
mov
mov
nop
adc
lcall
testb
lahf
cmp
dec
jl
add
cmpsb
adc
xchg
flds
mov
dec
cmp
andb
es
aad
pushf
shrl
arpl
pop
leave
lret
push
arpl
dec
lods
mov
aas
mov
out
or
rcrb
push
xor
push
or
xchg
mov
add
outsb
pusha
pop
jg
sub
enter
int
mov
adc
stos
jp
icebp
and
icebp
pop
pop
push
adc
mov
lods
inc
out
mov
call
aam
fmul
sbb
setne
xlat
mov
jnp
and
ss
dec
inc
xor
daa
fistps
orl
push
fdivp
pop
fdiv
stos
andb
push
imul
in
jmp
lret
pusha
mov
int
pop
lahf
fisubrl
leave
add
js
or
mov
es
cmp
popa
lret
out
push
inc
pop
mov
lret
mov
movsb
xchg
xchg
jae
rcr
and
std
outsb
out
jle
in
push
in
roll
fadds
cmp
cwtl
xchg
xor
call
and
pop
adc
loop
mov
push
jno
mov
cld
mov
add
xchg
jno
adc
mov
aaa
mov
into
js
fiaddl
loop
repnz
xchg
cmpsb
push
sarl
repz
mov
jle
test
or
inc
mov
sbb
sbb
cmpsl
in
jle
dec
es
or
inc
andl
loopne
push
lcall
jo
and
sub
jg
push
xchg
ljmp
sahf
packssdw
or
pop
mov
mov
jecxz
in
in
ja
push
and
xchg
xor
xchg
lret
lahf
cmpsl
or
cld
sbb
jbe
xchg
rolb
push
cmc
mov
mov
adcb
sarl
popa
testl
int
add
stos
cmp
push
cli
lds
jb
cli
out
int3
imul
jno
fdivl
testl
pop
fists
leave
loop
cwtl
mov
fs
push
cld
sub
add
rclb
sub
xchg
or
imul
sub
push
shl
xor
inc
sub
jo
jl
addl
mov
fmull
test
cmpsb
aaa
nop
sbb
adc
pop
cltd
arpl
call
mov
mov
movsb
loope
scas
inc
cmp
jae
fcoml
sub
mov
arpl
pushf
fsts
int
arpl
stos
pop
xor
fwait
int
rcrb
mov
jae
cli
xor
and
jecxz
shl
inc
ja
xor
push
sbb
fadds
movsl
mov
inc
popa
pop
mov
sbb
insb
imul
xor
dec
jecxz
lcall
xchg
mov
lock
xchg
or
push
pop
xchg
pop
lret
outsb
pop
bound
ret
aad
cld
inc
pop
js
sarb
inc
fnsave
lret
popf
lcall
lods
in
pop
sti
and
or
mov
ss
test
dec
fildll
push
cmpsb
fsub
inc
decl
xchg
fs
xor
xchg
xchg
add
adc
inc
ja
xor
mov
shlb
jmp
ss
xchg
icebp
sbb
sub
fidivs
xor
fcoml
push
pop
and
and
push
jne
test
add
ljmp
jns
push
popf
into
fs
push
ret
scas
ret
loopne
sbb
into
push
ds
add
cmp
je
lahf
insl
mov
mov
test
mov
pop
aam
fisubs
and
adc
sbb
adc
loop
popf
mov
adc
and
sti
sub
xchg
push
mov
sbb
lahf
orl
fsubl
fs
jl
sbb
dec
mov
in
pop
test
push
mov
jne
cld
clc
cmpsb
mov
mov
repz
ds
add
arpl
test
fdivl
fdivrl
lret
add
popa
push
adc
mov
insb
mov
rclb
pop
pop
stos
test
xchg
jg
push
adc
mov
sbb
nop
adc
mov
pushl
xchg
mov
jmp
aas
add
test
push
pop
out
adc
or
xchg
lock
jmp
jle
pop
xchg
sarl
call
lock
sbb
movsl
cmpl
pop
cli
add
push
out
pop
aaa
mov
ljmp
pop
sbb
mov
xchg
mov
pop
adcl
and
pop
cmpsl
push
or
es
mov
pop
scas
loope
lods
lahf
xchg
std
mov
int
jae
sub
ss
dec
movsl
aas
pop
jno
mov
stos
call
sti
sub
adc
test
dec
adc
mov
xor
pusha
push
pop
loopne
shll
andl
fcom
sub
or
mov
out
mov
addr16
mov
je
jno
xchg
jo
mov
jno
inc
cmpsb
fmull
dec
addr16
and
mov
xor
aad
and
sahf
sbb
repz
pop
aam
int
icebp
push
xor
inc
aas
stos
jae
les
aas
arpl
aad
mov
dec
fsubs
ds
in
arpl
mov
or
and
cmp
or
cs
xor
sbbb
sub
popf
test
fidivrs
cmpsb
sub
loop
pop
cli
mov
mov
push
lcall
push
add
sbbb
lret
adc
jne
test
cmp
xor
loope
flds
mov
sbb
js
jl
fmull
lcall
push
jmp
lret
xlat
addr16
mov
roll
dec
aaa
mov
push
inc
popa
jecxz
xlat
xchg
sub
mov
stos
lret
xchg
mov
mov
sub
loopne
aad
sti
xor
dec
or
push
adc
push
aaa
mov
incb
push
ret
lds
sub
pop
push
ja
rcl
and
mov
repz
out
sbb
in
push
or
sub
inc
imul
xchg
cli
and
mov
jp
xchg
dec
subl
scas
ljmp
inc
push
test
jbe
mov
push
xchg
sbb
lods
mov
cmp
mov
mov
orb
ret
popf
sbb
aad
cmp
jnp
test
jnp
aas
push
es
sti
int3
or
mov
sub
enter
ja
pop
nop
nop
lods
jge
movsl
mov
sbb
mov
gs
clc
push
pop
sahf
inc
ficompl
jg
lret
push
jbe
fisttps
cltd
fdivl
adc
test
mov
fstpt
and
cmp
jnp
xorl
cmp
push
popf
ljmp
bsr
xor
jbe
push
xor
push
add
cld
jp
mov
inc
aas
cltd
scas
stos
push
add
inc
or
add
js
push
jl
sbb
pop
andb
mov
dec
xor
sub
dec
add
xor
arpl
pop
lret
mov
dec
mov
sbb
fwait
test
nop
xchg
cmp
xchg
in
xchg
lock
movsb
repz
sti
cmp
push
out
shrb
fisubs
inc
and
dec
out
mov
xor
imulb
inc
sub
lock
xor
in
ret
imul
mov
mov
add
jae
ja
iret
loop
sbb
out
inc
in
mov
push
mov
inc
insb
cs
ret
inc
push
mov
hlt
movsb
daa
or
inc
sti
xor
fsub
pusha
inc
in
sub
push
jmp
pop
lds
xor
inc
push
in
arpl
mov
cmc
cld
out
jle
out
ffreep
mov
int3
aaa
mov
jbe
out
mov
sub
ror
mov
dec
dec
lret
aam
xchg
loopne
push
cmp
dec
bound
int
ret
int
leave
jbe
movsb
stos
sub
incb
or
mov
cmp
sbbb
shlb
mov
cltd
addr16
add
xchg
cmpsb
cltd
jp
shlb
xchg
mov
mov
clc
ljmp
test
push
mov
out
cwtl
add
jb
xor
loopne
jecxz
push
lock
and
out
adc
push
in
push
mov
dec
sbb
shr
sahf
mov
js
ljmp
cwtl
jno
pop
jp
sbb
outsb
or
mov
push
stc
test
dec
or
mov
repz
test
and
xchg
loope
push
mov
xchg
sti
arpl
ret
ret
xchg
cmpsl
mov
sub
lret
xor
sub
movsl
ljmp
ds
and
dec
stos
pushf
xor
rcll
xchg
pop
nop
push
in
dec
push
movl
popa
repz
in
mov
cwtl
inc
xor
sub
testb
add
xchg
mov
es
dec
negl
dec
inc
int
pop
sahf
incb
cmp
mov
fstpl
or
shll
je
addr16
movsl
add
lock
adc
mov
mov
js
mov
inc
cmp
xor
adc
icebp
testl
cld
lea
push
mov
xchg
rolb
int
popa
cmp
sub
dec
pop
push
icebp
popf
mov
loop
adc
gs
ret
fimuls
xchg
ljmp
add
loopne,pn
xchg
xor
pushf
adc
movsb
or
insl
or
insb
jae
sbb
cmc
pop
xor
pop
insl
sub
mov
cmpsb
jo
mov
xchg
xor
sbb
xchg
mov
ficoml
mov
add
push
test
popf
in
stos
jmp
pop
outsl
jo
jns
ret
add
and
pop
in
ds
xchg
shlb
add
inc
and
adc
sub
and
push
sbb
movsl
test
into
in
ficompl
mov
bound
mov
sub
xor
xchg
lods
push
mov
mov
push
mov
ret
xor
xchg
pop
repnz
dec
pop
pop
xor
push
loope
mov
jns
add
mov
lds
mov
fwait
pop
jecxz
push
in
call
adc
push
ja
or
lret
lock
jl
fmulp
adc
push
pop
cmc
adc
mov
mov
jno
stos
inc
popf
add
push
insb
lret
xchg
dec
jns
outsb
jae
adc
dec
outsl
sbb
mov
lcall
cli
and
cmpsb
hlt
mov
pop
fisubl
mov
mov
test
and
mov
insb
out
push
adc
jae
jg
jg
sbb
sbb
insb
mov
fimuls
mov
popa
call
or
mov
mov
sub
sti
call
gs
push
icebp
mov
sbb
cltd
es
cmp
inc
addl
stc
imul
dec
inc
stc
divl
xchg
icebp
and
in
sbb
mov
xchg
and
jmp
std
xchg
stc
dec
es
jno
test
jp
adc
daa
mov
mov
ja
dec
cmp
ret
xchg
xchg
add
test
mov
and
shlb
subl
push
jle
mov
mov
dec
pop
sarb
dec
rolb
lret
dec
mov
jb
cmc
shl
out
sbb
add
mov
pop
int
hlt
aam
mov
stc
push
mov
pop
lahf
push
jecxz
pop
xchg
dec
ficoms
xchg
adc
cwtl
mov
addr16
cmc
fwait
shrl
pop
in
out
sbb
inc
mov
sbb
gs
subb
mov
lods
cmp
sub
cmpsb
movsb
mov
stos
xor
dec
minps
xor
roll
testb
mov
popa
in
jo
xchg
dec
ret
stos
dec
push
cmp
add
arpl
adc
cmc
or
hlt
xchg
lret
mov
and
sahf
and
jbe
cltd
cmp
mov
ret
das
mov
mov
lock
stos
imul
jo
dec
sbb
cmp
sbb
in
push
das
fidivrl
pop
ja
sub
cmp
mul
dec
lods
shll
fwait
pop
inc
mov
mov
xorb
fucomip
testb
push
inc
idivb
mov
lods
jne
nop
sti
sub
push
mov
or
and
sbb
cltd
xchg
ljmp
movsb
test
jmp
or
jb
fs
popf
push
leave
adcb
call
out
sbb
sbb
jne
jno
stc
pop
and
mov
aad
ror
pop
sbb
fcomps
push
push
xor
dec
push
jne
pusha
dec
inc
pop
or
mov
sbbl
add
call
add
fisubrs
mov
jne
in
add
lea
and
push
sbb
test
leave
scas
in
aas
inc
jne
push
mov
xor
movsl
xchg
sti
pop
jo
arpl
stos
leave
cmp
pop
clc
hlt
scas
sbb
mov
add
mov
cmpsl
adc
mov
out
pop
out
xor
int
sbb
xchg
mov
cli
add
clc
jne
shl
xlat
test
repz
orb
cmpsl
adc
cld
push
jae
adc
stos
jmp
inc
popa
movsb
aad
push
sti
sbb
in
fwait
pushf
out
fldcw
adc
lock
sbbb
sti
je
jae
inc
icebp
dec
and
fists
testb
fisttps
xchg
xchg
mov
jmp
mov
and
movsb
fimuls
mov
test
hlt
lret
leave
ret
jmp
loopne
cwtl
add
cld
cmpsl
or
pop
sbb
sahf
nop
mov
js
push
pop
push
adcl
pop
cs
pop
insl
loop
add
or
adc
lret
scas
mov
ret
insb
pop
aas
mov
inc
sbb
or
out
aam
sahf
and
and
cmp
mov
cmpsb
dec
push
in
and
mov
loopne
arpl
push
add
popf
mov
adc
cmp
inc
ret
sub
sbbb
jmp
fbstp
jg
pop
mov
and
push
nop
test
sub
push
sub
pop
stos
sbbb
outsb
cmp
frstor
cmpsl
icebp
cmpsb
ret
sub
out
xchg
mov
movsl
xor
clc
cmp
stos
xor
sbb
outsl
push
aad
mov
push
div
push
xlat
andb
inc
cmp
mov
cmpl
stc
stos
push
cltd
sbb
mov
mov
mov
push
data16
jge
cmpsl
ret
mov
xlat
rcrb
or
mov
mov
xor
roll
add
repnz
adc
inc
mov
fs
cmp
int
push
cmpsb
inc
cmc
sti
add
xchg
loopne
test
in
sqrtps
imul
popa
mov
push
add
or
aam
popf
adc
and
cld
ja
pop
push
fucomi
aad
xlat
jg
xlat
jne
adc
dec
xchg
out
test
jns
into
fsubr
xchg
and
jmp
fldl
in
icebp
mov
sbb
inc
subl
sbb
mov
subb
dec
xchg
mov
push
push
push
jne
push
add
call
out
rorb
test
shll
pop
jae
or
add
repnz
data16
push
dec
ficoml
jb
push
cwtl
es
es
insb
lcall
test
clc
insb
aam
pop
fildl
inc
mov
dec
shll
std
inc
cmp
inc
jp
jg
cmpsl
pop
lea
and
inc
hlt
push
daa
mov
aad
out
xchg
push
pop
cmc
popf
pop
sbb
arpl
mov
or
ja
out
inc
jg
and
push
pop
fidivs
dec
dec
std
insb
lcall
jbe
mov
hlt
stos
and
out
mov
decb
pushf
arpl
mov
outsl
inc
inc
lock
divb
enter
mov
mov
daa
ss
jo
or
pop
into
xchg
fisubs
cmpsb
cwtl
sub
jge
cmp
mov
cld
aam
mov
sbb
mov
xchg
and
in
test
std
test
xchg
and
leave
je
mov
shlb
jns
out
xchg
cmp
jno
jp
jae
and
dec
insl
pushf
xchg
das
pop
pop
int3
popf
lcall
cmp
test
call
ds
sbb
in
mov
xlat
mov
add
push
out
cli
les
and
pushl
mov
mov
aad
sbb
lahf
push
leave
hlt
in
sahf
sarl
add
push
es
fildl
mov
push
pop
sbb
mov
and
sub
outsb
repnz
ja
sub
dec
sbb
lret
pop
add
pop
pop
xor
cmp
push
mov
push
fwait
int3
push
and
sub
fdivl
inc
aad
push
mov
xor
adc
fucomi
stos
add
lods
sahf
lahf
lock
popf
pop
aaa
inc
stos
mov
cmc
sub
sahf
push
jmp
sbb
mov
enter
mov
and
ret
push
cmpsl
loope
jecxz
cmpsb
sbb
mov
je
rcrl
inc
movsb
aam
aad
sbbl
sbb
scas
jb
mov
cwtl
dec
push
or
mov
adc
inc
jmp
es
ss
sub
dec
and
push
mov
and
insl
push
sar
jmp
push
pop
lods
nop
or
dec
ss
sbb
sbb
ret
pop
hlt
movsl
xor
jle
push
inc
aas
add
jge
sbb
push
dec
bound
ficompl
outsl
aas
xor
sahf
sysexit
add
xchg
and
lock
mov
in
mov
scas
jl,pt
mov
repz
aad
rorb
pop
in
jecxz
inc
or
sub
and
inc
mov
fldcw
fndisi(8087
cmp
shl
mov
cmpsb
pushf
push
mov
into
dec
xchg
pop
call
ja
int3
inc
scas
cmp
loope
jmp
mov
push
cltd
jo
leave
add
lret
ficoms
inc
cmp
aad
cmp
push
out
sbb
mov
nop
mov
inc
mov
or
xor
iret
mov
mov
sbb
imul
mov
push
add
and
lcall
loop
push
notl
pusha
insb
adc
stos
pop
cmp
popf
mov
andl
out
aas
call
test
sti
scas
xchg
mov
dec
loopne
test
and
sbb
cli
mov
or
repz
cmpsl
mov
iret
pop
and
jecxz,pn
stos
enter
xlat
xlat
mov
mov
or
cs
popf
sbb
cld
loopne
data16
sbb
push
ret
ds
aad
mov
cmp
mov
adc
pop
mov
js
xor
test
cld
xor
cmp
rclb
xor
sbb
sbbl
lcall
and
inc
or
jp
cmp
jg
add
jne
lret
ja
inc
mov
push
rol
movsl
mov
bound
xchg
inc
cmc
inc
pop
stc
jns
sbb
sbb
fsubr
sub
lcall
arpl
stc
sub
loop
cmpl
xchg
xor
out
xor
inc
les
movsl
dec
clc
jno
jbe
jle
dec
xchg
loop
mov
negl
notb
sbb
push
fistl
jns
stc
arpl
gs
push
aas
cmp
xchg
xor
sub
and
scas
mov
sub
pusha
pop
lret
xchg
jno
rclb
stos
ljmp
fistpl
fcmovnbe
jnp
movsb
add
mov
arpl
sbb
add
inc
lahf
icebp
add
or
cs
xchg
push
jae
push
sub
dec
jns
cmpsl
ja
and
or
jl
pop
test
jbe
mov
sub
mov
fdivrl
jnp
adc
insb
shl
out
jo
cmp
adc
adc
mov
imul
jl
imul
or
pushf
jmp
dec
iret
subb
dec
int3
out
adc
push
cmpsb
fidivrs
inc
mov
lock
mov
and
push
in
xor
movsl
ret
jl
rcrb
jo
mov
cmp
int3
dec
hlt
int
xor
std
push
sub
xchg
cmp
mov
mov
pop
pop
jge
and
fcoms
xchg
int3
or
stos
push
scas
push
imulb
daa
push
shr
mov
sti
sbb
xor
imul
popf
lods
ret
adc
das
jb
ret
cld
and
mov
and
mov
ss
inc
push
and
mov
and
cmc
xchg
lcall
cli
mov
std
into
or
fildll
inc
adc
adc
aaa
sti
cmp
dec
pop
mov
fldl
js
adc
ret
mov
es
outsb
jnp
inc
mov
jo
test
sub
dec
xchg
mov
pop
insb
sbbb
aad
or
leave
fisttps
into
int
hlt
pop
jmp
test
inc
mov
stos
sub
sbb
xor
repnz
adc
push
repnz
mov
and
ljmp
and
sbb
pop
divb
cs
cmc
adc
in
push
or
xchg
test
mov
xchg
cmp
cmp
bound
stos
dec
incb
adcb
call
xlat
mov
outsl
pop
inc
test
and
icebp
sub
or
push
or
mov
mov
out
inc
xchg
int3
or
in
fnstenv
jno
aaa
ret
mov
fimull
mov
loopne
adc
cmp
scas
repz
push
mov
dec
pop
add
es
hlt
leave
cmc
xchg
cmp
outsb
dec
push
mov
sbb
and
into
cli
xchg
pop
sub
orb
pop
cwtl
dec
int
mov
out
mov
mov
sub
sub
inc
pop
call
divb
pop
sub
lcall
sub
ret
lods
stos
xchg
repnz
push
jnp
inc
and
inc
data16
cmpsl
loopne
scas
movsl
pop
lahf
xchg
popa
add
mov
adc
clc
and
xchg
pop
sarl
pop
sarl
inc
repnz
dec
popf
loop
inc
je
stc
cmp
js
sahf
enter
mov
lods
push
addr16
jae
call
sub
jl
xchg
cmpsb
in
jle
mov
out
fucomi
mov
or
xor
cmpsb
xor
pusha
aaa
je
or
push
mov
cmp
mov
stc
negl
scas
mov
and
lods
enter
dec
out
movsb
jnp
nop
mov
mov
les
mov
lods
dec
dec
xchg
scas
hlt
in
cmp
dec
pop
sbb
push
inc
and
and
popa
iret
divb
xchg
in
xorb
lahf
xor
aaa
dec
xor
sub
xor
inc
icebp
sti
shrl
negb
out
into
jmp
cmp
and
and
cmp
add
or
cwtl
int
cmc
adc
or
inc
pop
dec
push
inc
pop
xor
jmp
test
and
lret
adc
add
lcall
mov
stc
pop
stc
lds
push
cs
dec
dec
sahf
inc
sub
fcomip
popf
add
and
jp
rcr
mov
aad
xlat
dec
sbb
add
scas
fxch
pop
int
mov
test
repnz
rorl
lods
mov
mov
mov
lds
dec
int3
rcl
mov
push
sbb
xchg
mov
inc
jno
sahf
xchg
inc
and
test
and
jo
add
pop
arpl
imul
xchg
repz
pop
mov
fldenv
outsb
push
nop
ret
jecxz
push
xor
cs
ds
insb
rolb
push
sbb
jns
add
les
inc
lahf
adc
pop
scas
push
arpl
cmp
push
loopne
pop
lods
and
xor
aam
dec
pop
dec
xor
push
mov
out
int3
es
push
in
adcl
push
stos
jo
adc
xor
mov
cmpsl
test
aad
adc
int3
jmp
sub
repz
jle
outsb
xor
les
adcb
mov
mov
cld
or
das
ffree
flds
jl
pushf
mov
xor
into
filds
test
jno
jae
cs
jg
js
inc
xor
push
mov
and
mov
rorb
sub
xor
pop
mov
sub
pop
jb
js
inc
inc
dec
enter
dec
jl
pop
stos
adc
adc
push
orb
into
std
push
nop
sub
or
mov
arpl
fst
sub
add
jnp
or
pop
in
rcrl
dec
push
fcmovnb
or
mov
scas
int
dec
outsb
outsb
mov
push
and
out
xchg
pop
je
inc
xchg
mov
push
cmp
das
mov
push
and
mov
in
sbb
pushf
xor
out
mov
cmpsl
mov
imul
popa
lea
add
insl
mov
sbb
nop
xchg
pop
es
sti
push
pop
mov
icebp
dec
pop
add
fisubs
pop
lea
push
sub
fs
push
xchg
movzbl
mov
push
or
sahf
fsubr
mov
jl
mov
pop
and
xor
fdivrs
mov
lods
pop
stos
pop
mov
nop
in
push
addr16
addr16
jns
pushl
repnz
pop
fsubp
push
and
xor
and
shll
nop
fwait
pop
mov
and
sarb
lahf
lahf
mov
push
das
jno
mov
mov
insb
adc
rol
test
cmp
dec
mov
pop
rcr
adc
or
pop
faddl
push
jno
pop
jg
xchg
fs
fsubrs
sub
dec
fisubs
jns
jns
cmpsl
mull
mov
loope
test
ret
mov
cmp
inc
mov
lods
jb
cli
or
and
imul
and
inc
mov
outsl
mov
jb
repnz
and
adc
mov
repz
dec
test
call
out
je
int
inc
jmp
mov
ljmp
inc
mov
sti
xchg
lahf
stos
jae
push
popa
inc
and
jg
jne
cmp
test
cmp
test
jge
sub
jne
ret
push
inc
jno
arpl
cmc
add
xchg
push
pop
aad
pusha
jno
mov
cmp
jbe
pop
pushf
push
adc
xchg
pcmpgtb
aas
aas
push
cmpl
daa
xor
cmpl
cltd
outsl
dec
lock
mov
mov
pop
jnp
push
push
sub
push
je
fsubrs
sbb
aaa
mov
or
gs
cli
scas
test
fcoms
cmpsl
cmpsb
dec
mov
inc
lock
mov
ficomps
mov
int
repnz
jno
dec
xor
pop
or
icebp
push
inc
movsb
rcrl
mov
xchg
inc
mov
ja
push
add
scas
mov
aas
je
pusha
pop
frstor
xor
fsubrp
in
daa
movsl
and
pushf
stos
cmpsl
mov
jle
mov
jg
jmp
xchg
out
dec
mov
lods
pop
inc
insb
call
jp
and
jbe
cli
sahf
push
scas
push
push
xor
jle
repnz
mov
movsb
inc
popf
loopne
adc
hlt
cltd
insl
cli
pushf
fisttpl
mov
jge
sub
pop
jne
pop
mov
push
pushl
and
add
and
jnp
dec
cmp
scas
adc
mov
mov
aas
test
lods
gs
sbb
sbb
inc
cmp
aas
and
cmpsb
repz
hlt
xor
add
xchg
popa
into
cli
and
fmul
ja
test
mov
dec
aad
aam
filds
mov
and
fisttpll
in
stc
jmp
inc
out
pop
jno
push
cs
add
inc
fildl
add
aam
lds
stc
adc
in
pop
loopne
jmp
push
sahf
ja
jg
out
dec
sub
aad
cmp
sub
mov
jmp
imulb
cmc
gs
fadds
js
fsubrs
arpl
sub
stos
xchg
pop
jmp
in
mov
jne
or
or
cmc
cmp
daa
pop
and
cs
bound
push
outsl
sub
mov
mov
je
les
pushf
movsb
fmull
dec
push
and
int3
sarl
test
add
out
leave
dec
inc
push
xor
sbb
cltd
insl
xchg
dec
mov
clc
lods
decb
mov
add
pusha
out
pop
cmpsb
jne
pushf
pop
xor
test
loope
mov
and
sbb
les
jns
xchg
scas
inc
mov
js
jbe
jns
iret
pop
pop
or
mov
aam
mov
mov
xor
and
movsl
push
mov
push
xor
xlat
push
push
adc
sti
adc
or
and
cmp
lods
daa
or
add
scas
pop
pop
cmp
mov
in
out
add
inc
sbb
sbb
pushf
gs
or
into
daa
iret
or
loope
pop
pop
iret
daa
sbb
dec
vmaxsd
ds
je
push
or
pop
pop
shll
and
sti
mov
sbb
fidivrl
roll
mov
aaa
insl
or
adc
jbe
mov
mov
cmp
fwait
sbb
pop
pop
lea
lret
add
push
pusha
mov
lds
into
jne
mov
cmp
fists
popa
outsl
dec
cmp
jae
or
xchg
add
push
scas
xor
pop
aas
ss
jecxz
and
jg
jns
mov
stos
push
or
push
lods
daa
fisubs
sbb
mov
test
jecxz
icebp
xorb
mov
call
mov
pop
push
pushf
mov
mov
into
xchg
mov
insb
ljmp
or
popf
aas
push
xchg
in
shll
into
addl
movsb
cmp
mov
scas
adc
sbb
add
sbb
pop
push
in
insl
xchg
outsl
add
mov
mov
jmp
ja
jae
sahf
cs
pop
pusha
xor
cmpsb
fsubrl
dec
sub
adc
fwait
jmp
popa
sbb
sub
cs
outsl
scas
xor
mov
jecxz
adc
cmp
dec
push
sbb
pop
cmpl
jmp
cmpb
jecxz
pop
and
lock
out
or
cmpsb
ds
cmp
test
sahf
sahf
fwait
shl
sub
imul
das
mov
dec
scas
sbb
mov
push
scas
jns
aam
ljmp
jbe
mov
mov
nop
arpl
in
clc
cmc
lret
lock
or
inc
icebp
cld
jp
leave
sub
aas
ret
jb
out
sub
ja
jbe
inc
inc
pusha
push
shll
loop
cmpsl
mov
inc
clc
arpl
test
movsl
cmpsl
lret
fmuls
ljmp
jbe
loop
inc
std
fstpt
aam
push
test
ljmp
js
les
sarb
and
sub
lds
lea
xor
and
or
xorb
push
popf
inc
dec
add
in
pop
sbb
inc
pop
mov
mov
or
sub
or
jmp
add
std
pop
dec
stc
or
test
or
pop
mov
lret
pop
dec
sbb
mov
ja
dec
xchg
data16
pop
rclb
lock
jmp
mov
pop
mov
pop
inc
dec
lock
test
cmp
cmpl
outsl
insb
lret
fwait
sbb
les
jle
cmp
jbe
mov
lock
std
aam
mov
lahf
xor
test
loop
movsl
fimull
inc
loopne
xchg
dec
mov
je
out
leave
lahf
mov
xor
cmp
out
mov
sub
outsb
lods
stc
out
mov
icebp
int
cmp
fiaddl
outsb
in
cmp
sbb
add
xor
jmp
cmpl
addr16
xor
push
shlb
popf
leave
add
inc
mov
lock
fmulp
lea
stc
ret
xor
arpl
cli
xor
fidivrl
insb
adc
sar
xchg
rol
mov
add
push
mov
mov
fs
push
xchg
les
imul
gs
xchg
xchg
inc
ss
adc
cmpsb
into
leave
inc
pop
lret
mov
sbb
scas
pushf
inc
cli
pop
inc
stos
inc
jle
rcrl
push
sub
inc
pushf
lcall
arpl
cmc
xor
xor
stos
mov
jb
dec
jne
mov
jbe
cli
sahf
mov
lcall
xor
mov
adc
sub
xor
adc
gs
repz
add
and
imul
push
call
push
fsubs
bound
mov
popa
push
adc
mov
push
sarb
sahf
in
out
dec
push
inc
dec
inc
sarl
lock
xchg
push
fs
pop
mov
mov
cmp
mov
xchg
or
pop
xor
push
add
cmp
gs
mov
mov
push
mov
pop
ret
stos
sbb
popa
jb
dec
push
daa
rcrb
outsl
push
movsl
movb
mov
imul
sbb
push
pop
pop
es
and
add
shll
mov
shlb
push
xor
mov
cmp
inc
imulb
out
cmp
add
cltd
and
mov
jnp
add
aaa
mov
inc
stos
dec
sub
xor
and
stc
mov
mov
es
icebp
les
je
je
or
stc
xor
int
or
mov
mov
in
iret
jmp
pushf
shlb
sbb
or
insl
lock
sub
lret
adc
clc
addr16
jb
orl
popa
test
inc
sub
shll
loope
mov
sbb
inc
scas
sub
cmpsb
fsubr
pop
xchg
push
into
loope
push
jle
mull
shlb
pop
mov
test
xchg
jne
xchg
pop
mov
popf
mov
imul
loopne
xchg
pop
out
mov
repnz
sbb
int3
adc
jg
bound
arpl
xlat
jg
test
push
ljmp
push
in
rorb
jno
inc
lds
cmpsb
not
sbb
stos
xchg
mov
pop
out
cmp
pushf
cmp
and
push
jnp
js
movsb
or
lea
arpl
xor
push
jne
mov
cmp
cmpb
and
test
sbb
mov
cli
dec
sub
loope
mov
das
sub
xchg
adc
dec
arpl
frstor
jne
xor
mov
out
inc
jbe
mov
pop
aam
ret
adc
mov
cmp
jl
subb
stc
scas
adc
ja
dec
pop
sub
adc
mov
mov
mov
xchg
je
lcall
test
mov
shl
in
jl
mov
mov
hlt
cmc
fisttps
mov
test
or
mov
int
sub
popa
out
push
add
in
sub
xor
jae
pop
daa
lea
lods
pop
pop
sbb
andb
mov
add
sub
jae
clc
faddl
and
enter
lcall
sti
enter
js
inc
clts
xor
mov
popa
xor
mov
out
fdivr
and
sbb
pop
or
xchg
or
cwtl
inc
mov
scas
movsl
bnd
addr16
sti
dec
test
dec
pop
movsb
ret
dec
ljmp
xchg
popa
stos
jge
shll
jbe
fucom
xor
push
hlt
mov
dec
cmp
xchg
cmp
test
pop
and
cwtl
sbb
in
lret
jp
addr16
popf
rorb
mov
mov
ficomps
mov
je
fs
cmc
push
mov
xor
cmpsb
daa
mov
test
jmp
movsb
les
inc
mov
cmc
popf
fyl2xp1
mov
ja
rcrb
pop
dec
movsl
add
mov
ljmp
lods
dec
push
dec
int3
test
or
or
fwait
sbb
pusha
push
jge
jae
sti
fldcw
je
sbb
pshufw
lds
mov
jg
out
fs
roll
ret
and
test
popa
push
mov
inc
daa
add
xchg
or
mov
rolb
pop
movsl
mov
mov
cmpb
mov
jne
fstpt
cltd
imul
dec
xchg
lea
add
and
add
iret
cmp
testb
xlat
loop
ljmp
lret
pop
pop
and
jmp
jbe
push
lret
hlt
or
sbb
inc
cmc
pop
xor
pop
mov
push
sub
jb
push
lods
hlt
push
adc
cmp
inc
fcmovnb
repz
hlt
subb
lahf
pop
add
xchg
sbb
ret
inc
push
xor
rcrl
or
imul
dec
loope
or
mov
fcomp
add
idiv
sub
mov
sub
or
xchg
push
into
out
movsl
xchg
testb
fcomip
push
loopne
xchg
add
pop
inc
je
stc
gs
lahf
xor
bound
lds
mov
int
rdmsr
mov
icebp
sub
sub
adc
jbe
sbb
push
xor
fsub
mov
or
pop
add
adc
pop
pop
inc
into
dec
cmpsl
pop
mov
pushf
jnp
xchg
push
xchg
ds
daa
lods
mov
cmp
pop
es
pop
lods
dec
or
fcmovbe
ljmp
insl
mov
orl
sbb
movsb
scas
mov
popl
or
out
mov
mov
or
in
mov
xor
popf
inc
lea
dec
or
fdiv
lea
scas
les
push
repz
or
xchg
pop
and
in
js
out
lods
outsb
jns
popa
leave
jecxz
daa
dec
aas
fldenv
sub
scas
out
loop
lret
push
imul
in
in
out
rorb
js
sbb
jb
repz
push
ds
rorl
and
mov
and
jle
cwtl
xchg
add
pop
scas
cli
rcll
scas
mov
mov
sahf
xchg
mov
imul
pop
cs
adc
call
fsubrl
sbb
xor
sahf
sub
lret
nop
jno
xchg
call
fmull
mov
test
push
in
stc
sub
fsubrs
ja
cmc
enter
push
jl
fbstp
pop
enter
bound
jmp
sbb
lcall
mov
sbbl
and
mov
sub
mov
adc
xchg
push
cwtl
cmc
jo
nop
push
cld
in
inc
ret
mov
or
jl
cltd
pop
jl
push
push
pop
or
add
jbe
ret
cmp
pop
ror
fcoml
mov
stos
sub
adc
fucomp
and
notl
mov
jmp
mov
rclb
sbb
and
mov
pop
clc
test
mov
dec
lock
fdivrl
fisubrs
test
xor
jnp
cs
cmpsb
push
push
das
adc
or
insb
lock
stc
or
cmp
cmp
jg
xchg
inc
add
sub
and
jmp
int3
das
pop
cmc
and
test
lock
pushl
mov
setnp
filds
jp
out
or
add
mov
pusha
sbb
lahf
test
push
icebp
stos
aaa
lret
jle
insl
hlt
xchg
lea
jp
add
xchg
push
emms
ljmp
push
jbe
stos
xlat
xorb
xchg
or
into
mov
mov
rcr
pop
sbb
push
jb
or
and
movsb
mov
ja
push
jecxz
cmp
fadd
push
inc
jae
stos
daa
sahf
sub
adc
mov
lahf
fnstenv
and
rorb
pop
jb
lods
int
cld
shr
mov
lret
ret
gs
add
dec
dec
rolb
xchg
out
out
cli
shl
imul
sahf
mov
es
into
fdivrs
inc
movsl
jg
lea
and
int3
jae
add
test
leave
inc
pop
movsb
clc
pop
xor
push
xor
mov
sub
sbb
xchg
inc
jne
pusha
movsl
fbstp
push
lea
mov
mov
repz
int3
inc
dec
addr16
imul
into
cmp
mov
mov
jge
cmpl
mov
lods
ret
inc
mov
add
in
pop
out
xchg
jne
test
mov
jp
jbe
fabs
sub
fistpl
sub
pusha
negb
cmp
dec
out
or
sbb
mov
or
daa
rorl
sbb
or
test
and
push
call
adc
loop
mov
pushf
mov
test
testb
lret
adc
lods
mov
push
faddl
ja
jne
mov
outsl
mov
les
not
sub
pop
and
lock
push
idivb
xchg
jmp
cmp
stos
sub
aam
add
sbb
add
inc
pop
ds
sarl
xchg
subb
add
adc
jb
subl
fsubr
xchg
ds
xchg
out
sbb
jp
mov
test
add
je
jmp
pop
or
hlt
rcrb
insb
jmp
xor
pop
subb
cmp
xchg
pop
xchg
adc
out
scas
dec
aas
les
outsb
adc
fsubrl
mov
js
mov
movsb
push
sbb
mov
mov
mov
jge
fstps
xchg
rclb
insb
mov
cmc
das
inc
icebp
jge
fbstp
fistps
xchg
shl
rcl
mov
add
loope
mov
xlat
insw
or
push
lods
ljmp
mov
cmc
and
pop
xor
mov
outsb
adc
mov
sbb
mov
and
cmp
outsl
testb
jnp
les
xchg
jbe
xchg
test
sbbl
aam
lret
xor
jo
and
inc
add
sbbb
xchg
xchg
mov
mov
sti
loope
loopne
popf
aaa
pop
push
clc
dec
mov
inc
popa
cmp
arpl
pop
lock
inc
fbld
fists
inc
fbld
push
lret
jb
adc
cmpsl
stos
xor
push
add
push
pop
cld
lahf
ret
shrl
sub
imul
mov
lret
in
lock
and
adc
sbb
dec
lock
push
add
xor
cmpsl
shlb
add
fiadds
sub
out
fsqrt
cmpsb
shll
xchg
jg
jo
xchg
sub
mov
movsl
jle
sbb
or
push
aaa
mov
lea
cld
xor
data16
movsl
xchg
inc
cvtps2pi
nop
dec
ss
jno
imul
sbb
sub
jb
and
inc
std
or
gs
sbb
les
mov
cmp
jns
mov
call
mov
stc
cmp
xor
movsl
rcll
enter
jns
scas
xchg
outsb
cwtl
mov
pop
outsl
push
push
or
inc
js
sub
dec
test
into
dec
or
mov
inc
pop
test
pop
inc
cmp
sbb
mov
jg
lcall
pop
test
sub
movsl
mov
jno
lret
data16
cltd
ret
mov
sub
push
mov
mov
roll
inc
dec
mov
icebp
in
jb
jg
imul
cli
call
mov
mov
cltd
add
mov
int
loopne
xchg
cmp
adc
adc
imul
aaa
in
cmp
and
mov
gs
push
pop
xchg
popf
movsl
push
loopne
int
push
pop
orl
push
ficoml
xor
out
fidivs
rclb
pusha
add
lea
inc
sub
into
data16
xor
lret
adc
addb
lods
mov
xor
add
fstps
inc
fnstenv
fdivs
jmp
fldenv
outsl
aaa
fcompl
dec
dec
into
jae
dec
aam
repnz
xchg
fs
dec
and
decb
lret
cmp
cmp
aaa
addl
mov
lret
pushf
leave
call
xor
into
int
scas
call
lods
adc
test
or
mov
in
inc
pushf
xchg
or
out
adc
adc
orb
outsb
jp
jecxz
jnp
mov
lret
pop
fs
mov
adc
mov
mov
pop
jb
dec
vshufpd
cmpsb
xorl
xchg
adc
mov
in
pop
pusha
dec
into
fisubrl
jp
fnstenv
cwtl
xchg
out
sbb
inc
aad
outsl
xor
jb
mov
xchg
add
jg
add
sub
and
or
pop
shufps
test
sbb
and
mov
push
xor
xor
dec
pop
icebp
sub
daa
sub
mov
idivl
int
add
inc
int
push
dec
arpl
iret
scas
xor
jle
ds
mov
jns
aad
enter
roll
jp
ja
fmull
mov
pop
dec
jmp
push
lock
mov
and
out
testb
popa
call
lret
push
or
jl
pop
xchg
test
mov
xlat
inc
pushf
xlat
xchg
ret
jbe
jle
cmp
fs
mov
test
adc
jb
out
fisubl
jb
dec
dec
inc
xchg
sbb
adc
adc
pop
push
dec
out
stos
lods
dec
or
cltd
mov
mov
imul
push
pop
xchg
mov
lahf
push
sub
pop
loopne
cltd
iret
jge
xor
mov
dec
movsb
or
mov
ljmp
cmpsl
xor
popa
mov
add
jmp
test
movsl
cmp
jle
lahf
mov
repz
dec
mov
mov
jbe
daa
or
adc
and
push
mov
stos
in
dec
cmpsb
int3
test
sbbl
sub
icebp
faddl
enter
mov
xchg
mov
mov
push
mov
ss
xchg
and
pop
push
gs
and
or
mov
scas
jb
test
popl
push
mov
sub
je
movsl
into
xlat
or
and
push
scas
add
stos
loopne
jle
mov
xchg
mov
ja
cmpsl
xlat
dec
lret
mov
seto
test
xor
ja
inc
jne
inc
mov
mov
loop
aas
xor
inc
outsl
jns
mov
push
cmovg
xchg
mov
fstps
dec
cwtl
int3
or
cltd
out
jno
push
push
mov
jl
mov
adc
ds
jns
je
sub
adc
int3
sub
mov
adc
xor
lret
arpl
sub
aad
shl
cmp
test
add
adc
pop
lahf
notb
pop
push
pop
outsl
jbe
stos
bound
jnp
or
shlb
js
lds
adc
xchg
dec
jne
jnp
fsubl
dec
lret
ret
imul
mov
and
adc
cmpsl
es
sbb
shlb
push
inc
jno
fidivs
sbb
xor
or
int3
ja
leave
notb
lods
lret
sbb
rorb
push
sub
in
push
das
and
scas
dec
outsl
inc
call
les
js
adc
ja
mov
leave
in
lds
dec
pusha
cmp
mov
mov
scas
repnz
in
negb
into
push
push
pop
mov
dec
out
mov
cmpsb
pop
dec
movsb
jle
sahf
xor
cmp
lods
cltd
jns
mov
pop
lret
dec
hlt
mov
not
and
or
pusha
pop
ss
pop
mov
movsl
xchg
mov
shlb
jp
sahf
testb
inc
es
outsb
das
push
stc
mov
mov
hlt
sub
aad
popa
add
cmpsb
fcmovnu
sub
jl
dec
mulb
dec
pop
arpl
pop
add
xchg
push
stos
ret
pop
and
mov
push
pop
lret
test
mov
movsb
xor
dec
push
shll
jae
loop
fsub
fs
in
shl
mov
jle
fwait
jle
fimull
stos
push
adc
cmp
adc
pop
adc
fldenv
ss
sti
adc
movsb
dec
out
data16
stos
sub
and
sub
cltd
lahf
fsubrl
xor
cmp
lods
jno
rorl
sub
loop
inc
les
addb
lock
ret
dec
lea
mov
pop
adc
jno
pop
mov
aam
or
out
in
jge
lods
cs
pop
js
or
imul
ret
xchg
sub
sub
addb
stc
fistps
lret
into
sbb
sahf
xchg
push
pop
jg
popa
lock
and
add
test
pushf
push
idivb
xchg
stos
aaa
pop
cmpsl
inc
jno
fwait
jecxz
xchg
mov
ficompl
mov
xchg
pop
fimuls
ds
adc
fs
inc
mov
aaa
dec
mov
and
xchg
outsb
push
lcall
lret
xorl
dec
xchg
or
push
inc
repz
addb
shlb
test
push
insb
stos
mov
xor
xchg
sub
dec
dec
mov
in
pop
mov
mov
push
and
sub
sub
in
xlat
xor
push
in
cmc
xor
in
mov
push
enter
sti
arpl
sarl
shrl
jo
test
add
cmp
cmp
aaa
push
sbb
mov
popa
adc
pop
inc
add
add
cmc
xchg
dec
test
imul
push
and
in
sbb
lds
jmp
fidivl
pop
or
cltd
push
or
lods
out
mov
mov
add
xchg
insb
sbb
and
dec
lret
insb
in
loopne
jp
mov
mov
repnz
fs
test
pop
pop
mov
cwtl
ffree
cmc
xor
cmp
mov
ss
xchg
testb
cmpsb
mov
xor
ret
test
and
pushf
xchg
inc
ret
cwtl
jp
into
test
mov
mul
pop
and
adc
inc
mov
je
xchg
push
ljmp
adc
orb
je
jg
gs
test
xchg
rorb
gs
fst
psubusb
mov
sub
hlt
and
inc
jmp
push
clc
mov
movsb
or
mov
popf
mov
aas
addr16
lds
pushf
mov
sbb
mov
pop
sahf
push
lret
or
mov
arpl
or
in
mov
sbb
sahf
push
cmc
in
mov
pop
popf
xchg
push
fucom
pop
jb
sub
push
push
mov
add
mov
cmp
sbb
mov
cld
leave
pushf
dec
dec
pop
jg
and
mov
pop
lret
ds
dec
jae
ret
jne
insl
dec
dec
les
es
dec
add
jno
mov
lret
outsl
adc
sbb
jns
ficompl
aaa
shrb
lods
lret
dec
lcall
repz
stos
test
sbb
repnz
and
pop
dec
movsb
movsb
stos
repnz
cmpsl
lods
test
test
sbb
sbb
into
out
adc
mov
loopne,pt
dec
repz
mov
enter
sahf
cmpsb
push
adc
xor
jg
dec
push
push
mov
inc
pushl
lcall
mov
inc
cmp
pop
in
push
imul
shll
mov
clc
add
aam
pop
xchg
cld
cmp
dec
shl
orl
cli
sbb
lmsw
hlt
dec
xor
ss
and
mov
fisttpll
mov
ljmp
inc
pop
xor
mov
xor
xor
scas
xor
ret
js
cmp
sub
std
aam
cmpsb
loopne
pop
and
jo
out
mov
push
sub
shrl
sbbl
in
sub
fmul
adc
or
xor
aam
inc
mov
loop
or
lret
jne
mov
inc
jmp
int
sub
lcall
mov
test
sbb
jmp
pop
dec
inc
call
xchg
mov
fdivs
into
sbb
imul
out
pop
inc
cltd
ret
out
dec
test
mov
dec
push
out
sbb
adc
inc
movsl
loopne
sub
adc
cmp
push
inc
pop
jae
xchg
push
cmp
sub
pop
setg
mov
in
rorl
insl
cli
mov
loop
mov
ret
cli
mov
jl
mov
test
xchg
repnz
pop
dec
movsb
leave
cmp
sbb
sbb
lret
mov
nop
mov
arpl
pop
mov
aas
cmp
add
imull
push
idivl
fs
push
push
ret
mov
push
push
sbb
dec
ret
push
xor
and
gs
push
test
je
or
mov
jp
loopne
xor
repz
xchg
mov
dec
mov
es
mov
cmpsb
pushf
ds
fsubs
and
inc
and
insb
mov
push
ret
jae
orl
xor
jb
sub
push
mov
test
out
inc
inc
mov
int3
add
lcall
insl
enter
xchg
mov
shr
ret
test
push
adc
xor
dec
test
pushf
lea
xor
mov
out
xchg
push
xchg
test
idivl
ljmp
mov
sub
mov
call
les
imul
bound
sahf
or
or
or
xor
push
fcmovnbe
inc
outsl
xchg
test
movsl
push
jae
sbb
lods
int3
xchg
and
xchg
call
les
jle
and
jae
mov
ss
gs
iret
push
sahf
loop
lret
mov
pushw
jg
inc
pop
adcl
dec
popf
enter
sbb
nop
lret
and
test
fimuls
cmpl
cmp
cs
mov
xchg
imul
dec
iret
sti
rorb
mov
sub
push
loop
push
test
mov
das
test
mov
imul
mov
pop
and
inc
or
xor
jns
aaa
mov
stos
inc
das
xor
mov
and
jge
das
sub
cmpsl
mov
jl
cmp
jecxz
mov
and
push
test
xchg
ret
fdivp
das
andl
push
push
lds
fnstsw
push
sarl
mov
lods
xchg
hlt
test
shll
popf
cmp
or
inc
leave
mov
mov
insb
jmp
mov
push
cld
inc
ja
divb
jns
mov
mov
or
hlt
xchg
add
jbe
adc
je
mov
imul
std
or
and
bound
sub
hlt
and
addr16
sub
xchg
out
div
fdivrl
push
addb
xor
push
faddl
mov
xor
pop
cmp
add
and
inc
lret
fstps
lcall
stos
fcmovnbe
adc
es
mov
out
sbb
aad
jo
mov
pop
mov
xor
push
adc
inc
sarb
stos
mov
pop
mov
xor
jg
int3
lahf
lods
pop
adc
loopne
in
xchg
pop
mov
movsl
cmp
adc
dec
je
out
add
jmp
sbb
fwait
js
fs
sti
cmpsb
xor
imul
or
dec
cmp
sub
jbe
cli
outsl
and
pop
lods
lahf
push
mov
jbe
mov
pop
fdivr
add
jno
and
negl
mov
outsl
jno
bound
push
lea
jbe
sub
popf
jno
jl
shrb
cmp
and
test
ds
pop
mov
icebp
hlt
add
inc
mov
and
xchg
add
and
cmp
fwait
mov
inc
sub
and
jb
mov
sahf
pop
shrl
out
rorb
sub
xlat
out
outsb
mov
inc
and
leave
dec
divb
mov
mov
mov
shl
fdivrs
push
clc
orl
je
mov
in
sti
sbb
push
arpl
xchg
push
ficompl
fistl
and
ljmp
ret
adc
popf
subl
fs
push
inc
ljmp
divb
sub
xor
xor
lret
xchg
mov
xor
push
insb
int
pop
inc
rcll
out
xchg
repnz
sbb
into
inc
pushf
or
lret
pop
and
mov
ret
xor
lahf
xor
stos
or
xchg
mov
cmp
iret
sbb
sub
shrl
fistl
cmpsb
xchg
pop
pusha
fwait
or
mov
imulb
xor
dec
or
and
xchg
sub
dec
loopne
xor
nop
cmc
xor
xchg
rcrb
jne
xor
dec
mov
sti
mov
jbe
adc
adc
mov
xor
ret
clc
lahf
pop
lret
or
xchg
or
repz
jae
popa
mov
test
push
clc
push
cltd
stos
cmp
fidivl
jno
cld
in
dec
jge
jecxz
in
das
or
mov
bound
jnp
divb
int3
mov
sub
cmp
adc
mov
ds
dec
xor
mov
decl
add
jb
mov
js
andb
addr16
shl
cwtl
les
aaa
pop
sbb
int
mov
lods
and
jecxz
lret
or
jno
sub
cmpsl
xlat
ljmp
sbb
mov
out
or
je
jns
loop
push
add
ss
pop
pop
mov
mov
gs
test
cli
push
mov
jo
enter
mov
mov
mov
mov
adc
add
sub
in
xchg
hlt
push
or
mov
clc
jmp
rol
pop
addl
fsts
jns
cmpsb
gs
sub
scas
jnp
test
xchg
mov
cltd
lds
out
jl
mov
aad
mov
jge
push
adc
fistps
inc
movsb
fisubl
sub
or
cmpsl
cmp
cwtl
lea
sbb
in
movsl
rorl
rolb
loop
adc
fcmovnbe
out
imul
inc
aas
and
mov
mov
jo
jae
ljmp
cmc
out
push
daa
rcl
mov
sahf
ljmp
dec
scas
lcall
arpl
mov
mov
sub
xchg
push
xor
fidivl
in
outsb
jmp
or
dec
sbb
dec
fstl
adc
popa
mov
fsubl
push
enter
fisubrl
mov
imul
inc
mov
inc
stos
stc
xchg
stc
jb
mov
push
cmp
test
fcomi
mov
mov
jb
cmpsl
push
enter
ror
mov
leave
xor
cmp
aas
lret
cmc
xchg
addr16
push
int3
mov
sahf
cmp
pop
inc
fcompl
dec
and
aad
clc
pop
jle
jb
mov
adc
cmp
xchg
xchg
movsb
mov
daa
xor
sbb
daa
add
cmp
jne
shrb
adc
jo
cltd
cli
sub
out
inc
lock
jbe
mov
test
push
and
loope
push
dec
fbstp
ja
mov
inc
std
mov
lods
mov
push
std
pushf
sub
frstpm(287
inc
movsb
sbb
jb
push
leave
mov
out
add
das
imul
adc
cmc
jns
lock
cmovp
sbb
push
pop
inc
cmp
scas
aas
push
loop
sahf
or
jnp
push
jle
pop
mov
leave
bound
xchg
dec
mov
jmp
push
dec
repz
mov
cmc
pop
jb
jb
mov
sbb
hlt
adc
mov
test
jg
jle
sbb
dec
pop
mov
jae
xor
into
sbb
js
push
adc
adc
push
repnz
scas
clc
xchg
movsb
push
xchg
insb
mov
repz
outsl
insl
mov
mov
fmulp
xchg
xchg
sbb
mov
hlt
cmpsb
mov
popf
push
adc
jecxz
dec
je
cmp
pop
mov
mov
xlat
mov
cmc
cs
cs
adc
push
in
scas
imul
sub
test
insl
sub
lret
mov
mov
add
mov
inc
dec
and
sub
jp
xchg
cmc
jecxz
add
mov
outsl
ja
roll
sub
cmpsb
lret
icebp
test
mov
scas
je
inc
pop
stos
dec
gs
mov
or
push
mov
stos
ret
cmp
fidivrs
stos
push
jo
xor
or
adc
add
and
or
jmp
lea
xor
js
xchg
roll
lods
fisttpl
cmpb
out
lahf
pop
push
adc
shrl
rorl
sarb
push
rclb
scas
and
push
lds
or
bound
lret
push
cmpsl
push
xchg
jmp
lret
fisttpll
pop
and
rcrl
lock
out
cmp
je
xchg
xchg
ret
rcr
lea
jb
push
fwait
add
xchg
cmp
icebp
sbb
ja
xchg
and
pop
fwait
jecxz
andb
push
dec
mov
mov
mov
mov
pop
push
jecxz
sub
xor
xchg
dec
int
jmp
cmp
icebp
fbstp
scas
mov
adc
adcb
into
sbb
dec
fbstp
push
movsb
lds
inc
adc
fisubrs
jge
in
mov
sbb
and
xor
loop
stos
lods
mov
cmpl
sti
sbb
xchg
fmulp
popf
stos
inc
sub
or
adc
rcl
pop
insb
push
icebp
or
ror
fildll
mov
push
cmp
dec
nop
insl
test
adc
jp
pop
inc
cmpsb
add
das
mov
das
inc
sbb
push
arpl
into
xchg
cmp
mov
fldenv
cltd
inc
xchg
addr16
inc
cmpsl
aas
lock
mov
cmp
dec
mov
imul
push
lcall
mov
adc
fdiv
clc
or
sub
or
inc
fisubrl
jns
ret
movsb
jp
dec
sub
ret
fistl
xchg
pop
jns
jns
in
inc
imul
scas
test
mov
into
sbb
movsl
mov
or
pop
cltd
ljmp
push
xchg
add
push
jecxz
inc
fwait
push
fdiv
adc
sbb
inc
popa
insl
sub
loop
mov
jno
inc
cmp
fstps
xchg
repnz
je
jae
lods
xor
push
xor
mov
pusha
lahf
test
xor
repnz
arpl
inc
add
inc
lret
ljmp
repnz
cs
jecxz
pop
in
clc
push
mov
into
jnp
mov
dec
testb
pop
ljmp
jge
push
sar
xchg
shr
xor
dec
mov
mov
pop
pop
pop
imul
adc
add
cmpl
mov
jae
out
and
in
push
es
lea
and
je
and
fs
pushf
sbb
fwait
xchg
xor
jg
push
loop
sbb
cmp
jmp
mov
dec
js
xor
mov
adc
fstps
xlat
out
push
cld
jl
dec
xchg
loope
mov
mov
add
insl
sbb
lcall
sub
rcr
imul
push
idivb
lods
mov
ret
xor
popf
icebp
cmc
iret
jno
jo
push
bound
xlat
jmp
stc
iret
mov
and
pop
and
es
mov
sahf
add
outsb
sbb
cmp
das
push
movsb
mov
jns
push
jecxz
movsl
sub
lcall
cwtl
fwait
aaa
jg
and
hlt
test
xchg
js
lds
fsubr
jl
mov
cmp
sbb
sub
std
xchg
pop
outsb
lahf
jo
faddl
out
and
push
das
or
rcrb
cs
inc
test
sbb
bound
mov
push
in
loopne
adc
shrl
shll
fcmovnb
sub
fucom
notb
fdivrs
push
jg
cli
jmp
mov
sbb
pusha
addr16
scas
scas
cwtl
data16
imul
jge
sti
jb
lock
out
pop
adc
mov
cmp
push
lea
mov
and
mov
push
inc
rol
pop
pop
jmp
sbb
mov
mov
mov
sbb
jne
and
cmc
push
jecxz
pop
nopl
dec
aas
push
add
mov
insl
mov
in
scas
push
pop
es
cwtl
jae
or
inc
jb
sub
daa
push
and
mov
adc
cmpsb
dec
roll
in
in
dec
sbb
pop
add
std
out
mov
inc
pop
mov
push
imul
fildl
pop
std
out
cmp
jbe
dec
dec
fcoml
in
mov
fldt
sbb
repnz
inc
sti
imul
pop
jl
push
insl
cmp
std
add
cwtl
inc
xor
jl
add
fidivl
in
in
push
jl
mov
cmp
lods
aaa
mov
mov
pushf
adc
add
mov
call
push
jp
sub
ja
pushf
loopne
jecxz
or
jbe
movsb
popf
incb
sbb
jo
push
shll
arpl
outsb
add
shlb
xchg
xchg
push
ss
push
mov
ds
arpl
cwtl
pop
ficoms
lock
sahf
in
jae
dec
das
mov
cltd
mov
dec
sbb
in
cld
mov
nop
ss
std
stos
fstpt
xchg
cld
mov
jbe
sbb
movaps
repz
mov
adc
notl
mov
push
lret
jl
fimuls
mov
mov
inc
clc
fwait
push
gs
decl
outsl
and
je
aad
daa
sbb
cwtl
jl
dec
add
mov
xlat
xchg
jge
xor
xor
jbe
pusha
inc
mov
jle
arpl
fs
adc
sbb
or
in
insl
test
daa
pop
insb
adc
rcrb
sbb
ja
test
mov
jne
cltd
jmp
mov
xchg
test
sbb
inc
clc
mov
cmp
pop
movsl
and
scas
int3
sub
icebp
ret
mov
aaa
ret
sub
stc
jge
iret
mov
dec
ret
jle
add
sbb
das
push
adcl
jl
cmc
inc
and
sub
fldenv
cmp
add
lcall
arpl
mov
icebp
stos
cltd
and
or
add
ret
fnstenv
mov
mov
mov
jp
out
popa
adc
push
fdivl
out
test
mov
inc
sub
mov
and
scas
push
jp
mov
add
push
cwtl
push
sbb
decb
push
inc
mov
push
push
ret
icebp
inc
popa
add
dec
aas
push
in
jae
loopne
xchg
inc
xchg
popf
xchg
pop
lret
inc
leave
dec
or
enter
cmpsb
sarb
push
cmp
ds
or
dec
sub
xchg
popa
and
cmp
mov
fisttps
jmp
jae
notl
dec
hlt
ds
add
rcrl
push
jns
repz
xchg
addr16
push
jns
hlt
stc
outsb
jg
push
mov
mov
mov
inc
fcomps
dec
movsl
mov
and
sbb
inc
lret
add
or
adc
push
sar
test
mov
clc
inc
push
movsl
xchg
mov
jl
pop
add
sar
and
iret
push
push
inc
cmpsl
call
jmp
mov
and
xchg
ret
mov
inc
dec
jg
repnz
pusha
ret
cmc
lods
mov
add
rcrb
push
mov
xor
out
icebp
ret
mov
adc
sahf
jecxz
cwtl
push
loope
fwait
lea
loope
jp
cltd
rcrl
pushf
adc
jl
xor
fwait
in
or
jecxz
add
push
shlb
mov
rcr
repnz
mov
je
aas
xchg
cmp
in
sub
xchg
insl
xchg
addr16
cmp
shrl
jnp
mov
ret
xchg
cmpb
imul
inc
int
jl
pop
mov
in
adc
dec
outsb
icebp
aas
mov
adc
mov
fwait
cwtl
jl
push
cmp
inc
adc
into
cld
popa
xor
subl
jmp
cmp
test
add
std
xchg
jle
dec
mov
in
inc
aam
xchg
add
jno
insb
std
fmull
pop
mov
mov
dec
sub
jae
out
and
cmp
xchg
subb
mov
pop
lret
fwait
addr16
inc
pop
mov
shlb
sub
dec
enter
jnp
push
mov
mov
lods
push
xchg
mov
inc
add
mov
inc
sti
decb
mov
shlb
sahf
cmp
dec
adcb
aad
xor
xchg
cs
add
pop
push
jg
xchg
xchg
push
sti
leave
mov
popa
rorb
pop
dec
decb
jge
mov
mov
dec
arpl
imul
lea
fwait
mov
mov
inc
mov
mov
clc
rclb
rcll
loop
imul
cmp
jle
lods
push
cmp
shrb
jmp
inc
and
xchg
adc
sbb
rorl
xor
loop
shlb
push
inc
jmp
push
lea
call
push
push
in
push
pop
jg
clc
add
scas
int
repnz
fs
fstps
pop
pop
jae
fst
daa
test
enter
call
sub
cmc
jge
aas
fmull
sbb
lret
xor
repnz
jne
subb
in
fsubs
or
dec
push
mov
adc
sbb
in
aas
push
pop
pop
iret
xorl
sti
xchg
iret
cmpsb
pop
adc
mov
in
pop
adcb
pop
mov
fisttpll
mov
into
cmp
cmpsb
or
xchg
mov
insl
inc
xchg
jae
fimull
mov
pop
lret
pop
faddl
popa
fdivp
add
sbbb
out
sbb
xor
cmpsl
mov
sub
testb
sbb
fidivrl
xchg
repz
jns
add
mov
jle
loop
test
movsb
scas
adc
or
in
insb
pop
ret
pop
int3
outsl
repnz
arpl
dec
jp
adc
pushf
add
push
pop
mulb
jge
mov
mov
push
and
jmp
into
xor
mov
into
inc
sti
cli
pop
aam
mov
pop
retw
xchg
test
jno
in
sub
ljmp
aad
data16
fdivr
cltd
xor
and
fs
fwait
in
rolb
aaa
jecxz
cmpsb
in
shlb
push
dec
gs
sub
in
imul
mov
lds
in
scas
add
stc
es
add
test
sub
aas
sbb
cmp
inc
ds
bound
popf
iret
js
ljmp
jbe
gs
jecxz
mov
cmp
shl
sbb
sbb
mov
add
xor
pop
mov
dec
imul
jmp
adc
mov
jle
sbb
push
fs
push
and
and
jmp
mov
dec
ret
inc
scas
das
cli
inc
cli
push
movsb
fcmove
repz
insb
jo
pop
cmp
outsb
ds
pop
jbe
stos
inc
ljmp
ret
push
inc
and
fld
and
jae
int3
into
gs
aad
push
repz
aad
mov
add
sbb
sbb
mov
mov
mov
push
clc
lock
call
pop
sub
pop
mov
lods
sbb
mov
lock
repz
dec
pop
xlat
jg
mov
aas
lret
divb
xchg
cmp
enter
int3
pushw
jmp
das
shlb
sub
fsubr
xchg
test
stc
call
adc
cmp
jb
inc
out
loopne
rcl
push
mov
xchg
js
adcl
dec
push
shlb
jge
movsb
movb
lret
mov
jbe
in
sub
xchg
hlt
out
out
pop
in
mov
orb
xchg
and
mov
pop
pop
scas
je
icebp
xchg
scas
add
ret
test
jmp
sbb
push
cld
out
xchg
and
add
ss
insb
repnz
mov
dec
and
movsl
pop
mov
in
scas
add
loopw
out
scas
xor
mov
out
loop
imul
push
lret
cmp
xor
push
mov
imul
inc
loope
xor
int3
sti
inc
pop
movsl
fisttpll
cmp
pop
xor
adc
fidivl
mov
xor
test
pop
or
lcall
scas
inc
push
xor
xchg
xlat
inc
in
out
pop
lea
cli
idiv
fidivs
jbe
adc
bound
jge
subb
rclb
dec
mov
fidivrs
push
loop
call
xchg
lret
xchg
lret
push
pop
push
fisttpll
pusha
xor
push
dec
popa
pop
adc
loop
insl
xor
inc
jae
push
or
ljmp
mov
xor
jbe
cmpb
subl
push
jp
jmp
dec
adc
push
add
and
outsl
mov
dec
xchg
rcl
push
insl
loop
out
or
xchg
mov
sub
mov
inc
es
imul
xor
sbb
aam
lds
and
fisubrs
sahf
fadds
lcall
fcomps
gs
mov
lcall
testl
testb
dec
testb
outsl
jnp
mov
sti
je
outsl
xchg
adc
jg
xor
daa
mov
clc
test
in
in
xchg
ja
xor
xor
fisubrs
pop
andl
add
outsl
and
push
test
jb
fwait
sbb
mov
sbb
add
call
fs
sub
fwait
bound
sub
les
mov
mov
and
pushf
shlb
cmpsb
cs
mov
les
sub
mov
ja
aam
mov
out
mov
out
jno
emms
aad
or
lcall
pop
sbb
inc
cmpsl
jnp
xor
sub
shl
inc
jo
cmovbe
push
sbb
out
pusha
dec
mov
lock
add
add
inc
inc
out
cli
adcl
ret
js
fisttpll
and
lds
add
imul
add
jnp
in
or
jg
jle
mov
pop
mov
xchg
in
or
aam
xor
aad
adc
aad
xchg
add
cld
or
fwait
pop
lcall
je
popf
sbbb
rcrb
repz
cmpsb
cmpsl
inc
jmp
xor
loop
jbe
or
inc
inc
cmp
dec
shl
pop
subb
jle
cmpsb
cmp
mov
push
sbb
es
or
xchg
iret
pop
jne
pop
inc
cmp
popf
icebp
cmp
or
mov
push
scas
lret
gs
cmp
dec
dec
xor
pushf
rcr
sub
adc
cmp
dec
ret
dec
lcall
push
js
jbe
jge
das
or
mov
jne
or
enter
icebp
fwait
lods
ljmp
lock
stc
push
mov
pop
mov
filds
lcall
inc
cld
aas
and
pop
scas
lcall
cld
lret
xorl
movsl
fistpll
aad
and
icebp
xchg
xchg
mov
mov
mov
lods
mov
inc
inc
jl
notb
cs
call
pop
jp
leave
add
dec
mov
xor
add
push
cmp
mov
or
sbb
or
mov
sub
lds
jb
ja
je
iret
dec
xor
call
cmp
enter
inc
fisttpll
dec
pop
bnd
pushf
aad
mov
bound
mov
push
in
or
xchg
ss
cmc
andb
cltd
shr
and
fcom
mov
and
mov
or
loopne
dec
addr16
add
sbb
sahf
add
daa
inc
clc
inc
cmpsb
jp
sub
inc
sbb
mov
dec
aaa
arpl
loop
psraw
pop
jmp
repz
mov
inc
pop
or
mov
and
outsb
jg
mov
lods
mov
or
faddl
in
inc
cmp
outsl
addl
xchg
xchg
jb
ss
jnp
pop
loopne
mov
pop
rolb
adc
sti
loop
add
mov
mov
cltd
nop
add
fmull
lock
cmpsb
std
movsl
fwait
insl
jle
loope
in
xchg
mov
imul
or
jb
test
aam
xchg
add
fisubrl
sub
orb
aaa
lods
inc
iret
fscale
mov
xchg
mov
fimull
push
aam
xchg
imul
sub
add
test
clc
rdtsc
cs
fsub
push
insb
sub
hlt
pop
jne
js
jno
stos
rorl
jbe
lcall
jbe
inc
je
xchg
les
dec
incb
lods
insl
and
stos
jecxz
in
jno
jmp
lock
mov
or
cltd
aas
fcmove
inc
add
sbb
adc
sub
xchg
push
gs
mov
mov
out
dec
and
lcall
mov
or
icebp
xchg
adc
pop
fwait
adc
into
adc
dec
test
fdivs
movsb
sbb
negb
sbb
adc
jle
push
popa
inc
rolb
adc
fcos
xchg
movsl
xchg
adc
lods
ds
lcall
xchg
cmpl
bts
je
dec
aam
enter
in
cmc
pop
cmpsb
pusha
jne
mov
adc
push
cmp
loop
jnp
inc
shll
and
jne
mov
mov
out
pusha
and
jb
jns
or
xchg
sbbb
xchg
push
popa
add
push
lods
popa
xor
repnz
jnp
push
addr16
sub
lcall
dec
dec
push
xor
jge
test
and
jge
arpl
int3
pop
ljmp
lahf
stos
fstl
inc
dec
xchg
and
push
movsb
and
dec
or
mov
push
push
or
iret
into
cld
ret
sub
fisttps
cmp
insb
shll
add
iret
js
insb
outsb
mov
and
push
jle
insb
mov
nop
test
jns
cld
xor
lods
fld
cmp
shrb
fwait
mov
jg
fdivl
push
and
inc
inc
cmp
mov
insb
jae
orb
and
lods
pop
push
jns
mov
jno,pn
arpl
nop
mov
in
fstpt
in
nop
inc
in
mov
add
mov
mov
lahf
in
rorl
inc
mov
rorb
insb
clc
cli
inc
dec
test
inc
xor
movups
and
jb
xor
mov
and
jae
xor
adc
gs
dec
dec
push
dec
mov
scas
int
mov
loope
popf
jno
es
add
mov
je
stos
xchg
test
mov
jae
xchg
sahf
pop
jg
repnz
mov
in
adc
and
xor
movsl
ss
sub
mov
shl
xchg
cmc
lret
dec
jbe
clc
sub
and
or
cmpsl
mov
mov
es
nop
cmp
mov
xchg
mov
es
xor
enter
jns
inc
xor
mov
fs
or
aam
xchg
loopne
jae
xchg
jns
add
jge
push
loopne
adc
jno
je
leave
clc
inc
mov
aad
ret
or
popl
cmpsb
cmp
int
in
loopne
rcr
cmp
mov
jmp
push
dec
mov
mov
sti
mov
loope
cmpsl
push
push
add
stos
dec
and
rclb
inc
pop
jb
jnp
xchg
fisttps
push
lods
xchg
pop
sub
jg,pt
lds
pop
add
inc
faddl
popf
arpl
test
call
test
or
call
pushf
xor
sbb
insl
mov
in
outsb
jo
dec
lcall
rolb
out
push
call
pop
outsl
ret
lock
push
jb
aaa
jl
adc
jns
mov
fs
int
sbb
outsb
jmp
fisubrl
in
jno
subl
push
push
lret
fwait
sahf
mov
jno
js
push
cltd
mov
xorl
lret
ja
daa
je
in
xlat
dec
cwtl
jle
lods
jb
fcmovnbe
outsb
or
mov
push
push
out
push
jns
dec
mov
jnp
in
inc
add
sbb
clc
jno
jb
enter
jle
fldl
cmc
xchg
push
cmpsb
out
hlt
sub
lods
mov
xchg
mov
scas
imul
push
mov
dec
mov
xor
dec
adc
imul
nop
loope
aam
sbb
loope
in
ja
push
push
inc
jmp
add
dec
pop
stc
je
idivb
cwtl
mov
xor
iret
notb
mov
shrb
movsb
rclb
push
icebp
lock
mov
ffree
das
gs
aaa
pop
push
imul
arpl
cmp
pop
sbb
pop
and
cli
loop
loop
add
fstl
lcall
push
movsb
ds
pusha
and
push
aas
scas
xchg
mov
mov
xlat
sbb
lahf
stc
repnz
mov
pop
ja
mov
or
mov
jbe
cltd
pop
adc
inc
mov
mov
testb
data16
pop
jnp
sahf
push
or
mov
push
stc
loopne
mov
push
xor
cmpsl
cli
sub
mov
rol
scas
push
sbb
int3
mov
xchg
imul
or
adc
popf
inc
fidivrs
lret
int
imul
repz
adc
jne
iret
outsl
sub
push
add
push
aam
push
add
add
pop
dec
jnp
test
inc
dec
adc
fs
mov
cmp
xor
add
les
popl
xor
pop
pop
or
mov
push
xlat
or
xor
xor
push
ds
roll
and
push
cltd
and
fistpll
lods
pushf
mov
jle
sub
cmp
cmpsb
dec
jmp
add
mov
mov
pop
movsb
xchg
xor
pop
sbbb
mov
mov
in
scas
dec
fimuls
jg
inc
ficompl
mov
stc
lods
push
lahf
cmp
test
or
addb
jmp
das
adc
js
insl
aad
or
and
fbstp
out
dec
scas
push
sbb
pop
lret
jmp
push
push
mov
out
loopne
stc
fnstsw
mov
cmc
mov
jg
push
mov
pop
shll
adc
mov
stc
bound
dec
or
loopne
push
pop
movhps
xor
cmp
test
loop
fdiv
mov
cmp
dec
shlb
or
mov
insl
stos
mov
sbb
dec
aaa
xor
pop
xor
lret
mov
into
mov
push
push
inc
xchg
cmc
in
mov
les
out
inc
xor
inc
mov
mov
ss
insl
mov
ret
rorl
hlt
lahf
cs
or
sbb
pop
mov
or
mov
mov
xor
dec
inc
popf
fmul
cmpsl
aad
mov
mov
rcll
sarl
inc
push
pop
jcxz
jb
fwait
pop
repnz
cs
mov
ljmp
or
jno
push
inc
push
xchg
mov
push
rorb
lret
fs
jbe
mov
orl
fs
dec
imul
inc
shrl
or
xchg
testl
mov
jmp
jnp
in
cmp
mov
iret
sbb
push
subb
ror
push
js
aas
lea
fsubrs
dec
sub
cli
pushf
pop
sbb
pop
out
pop
push
lahf
addr16
sbbb
js
imul
clc
dec
inc
dec
pop
ss
inc
es
stos
jp
cli
movsl
adc
inc
lahf
mov
xchg
fwait
sbb
lret
cltd
je
in
stos
sbb
ror
mov
stos
push
pop
sub
mov
mov
rcll
imul
test
lret
xor
out
sub
stc
out
mov
mov
sub
mov
mov
ljmp
arpl
sub
pop
jp
sbb
leave
push
jmp
mov
pop
idivl
cltd
mov
subl
jo
rcr
mov
lret
push
adc
fisttpll
daa
mov
push
mov
add
dec
js
lss
xor
pop
gs
jge
aaa
inc
lods
jmp
dec
fwait
cwtl
pop
xor
lock
mov
add
ljmp
adcl
or
mov
jp
mov
mov
popa
jb
ds
repz
je
out
das
push
lods
mov
imul
push
insb
push
add
jne
in
mov
es
push
fistps
fs
vpunpckhwd
int3
dec
xchg
mov
push
pop
and
xor
fbld
xorl
out
sbb
iret
les
inc
push
mov
pop
mov
mov
or
jne
fnstcw
negl
xchg
sub
sahf
adc
pop
fadd
ja
sub
inc
es
orb
or
jge
fisttpll
xchg
sub
pop
push
rcrl
sub
cmp
ja
scas
add
jnp
pop
lea
jle
or
into
cmp
jo
jmp
inc
mov
imul
xchg
test
jo
dec
scas
ljmp
in
mov
fimuls
inc
ds
mov
das
cltd
adc
jle
add
daa
stos
mov
in
shrl
pop
sbb
inc
sub
pop
lods
ss
lods
mov
and
lds
stc
fwait
in
mov
sub
jne
jne
cmp
sub
adc
repnz
ficoms
shrl
xchg
xchg
xor
dec
mov
xchg
mov
lods
sti
leave
lods
xor
xor
mov
push
and
imul
pop
push
xchg
in
adc
inc
test
jae
push
dec
mov
loop
fwait
pop
out
bound
orl
mov
int
or
fsubrl
incl
es
pop
add
inc
notrack
jge
std
pop
sub
jle
cmpb
jp
mov
lret
sbb
push
imul
mov
adc
or
jge
test
add
mov
orb
out
pop
push
mov
arpl
mov
sbb
pop
roll
jb
or
xchg
pop
xor
lcall
cmp
mov
mov
pushf
addl
in
loopne
xchg
dec
add
imul
bound
push
cld
adc
ja
xchg
mov
jp
clc
test
adc
xchg
xlat
or
fbld
xchg
gs
stos
mov
aas
test
sbb
in
ret
xor
fs
into
sbb
imul
dec
jecxz
lret
jmp
fisubrl
dec
mov
bound
xchg
jl
cltd
stos
cmc
pushf
mov
and
cmp
dec
inc
sbb
sbb
icebp
ficoms
push
pop
sti
add
mov
dec
mov
pop
push
divl
dec
sub
sbb
in
push
pop
and
xor
shlb
inc
mov
aas
pop
adcb
and
push
in
ja
dec
popa
and
or
pushf
cmp
les
xchg
cmpsb
pop
fisttpll
xchg
out
aas
push
rolb
add
icebp
int
push
pop
pop
loopne
add
scas
fwait
xchg
pop
adc
add
out
push
add
loop
andb
inc
scas
in
add
sahf
xor
and
aas
cltd
pop
jle
jae
cli
scas
cmp
pushf
mov
push
jns
add
jge
pusha
pusha
imul
xchg
outsl
pop
int
sti
sub
or
xor
xor
enter
sbb
mov
cmp
notb
pcmpeqw
sar
xchg
xchg
cmpl
test
push
mov
xchg
inc
repz
mov
cmp
xchg
mov
sub
inc
mov
adc
dec
mov
insb
ret
cmp
cmp
int
xchg
add
inc
repnz
mov
pop
xchg
xchg
sub
inc
inc
jnp
mov
mov
aad
mov
stc
push
push
gs
mov
mov
sbb
daa
addr16
jl
xchg
aaa
movsb
mov
cmp
fsubl
pushf
cmpsb
mov
aaa
fwait
insl
lret
vaddss
js
adc
lret
fbld
cmp
pop
ds
fmull
cwtl
add
mov
mov
stc
pop
ret
sbb
add
add
pushl
cld
xchg
inc
inc
call
jecxz
dec
psubusb
xchg
mov
shll
loopne
push
gs
shll
add
mov
arpl
mov
loopne
gs
iret
mov
adc
scas
sbb
dec
xor
cmp
mov
subb
stos
lahf
fldl
mov
mov
mov
jmp
or
mov
pop
ds
pop
sub
dec
std
test
fmuls
cmpsb
andl
lock
jne
push
movsb
adc
popa
ret
in
ljmp
pop
jle
jmp
mov
push
fwait
mov
jge
aaa
or
add
cwtl
push
cmp
stos
int3
mov
mov
loope
repnz
adc
je
xchg
gs
cli
push
dec
ds
sahf
inc
push
jne
push
out
pop
in
adc
nopl
dec
arpl
push
loop
xor
imul
inc
in
mov
aad
cwtl
mov
sub
xor
call
fwait
int3
shll
mov
or
pop
mov
push
lds
jae
xchg
rcr
aad
cmp
cltd
dec
inc
stos
aaa
jb
or
ror
lret
adc
imul
cmc
pop
ja
stos
cmp
int
repz
aas
mov
push
jecxz
test
fcoml
jg
fadd
jp
add
les
sbb
push
cltd
das
jge
inc
insl
xor
call
pop
aas
pop
pop
sub
jne
xchg
data16
adcb
push
add
inc
ja
incb
test
arpl
ret
xchg
sbb
les
mov
or
fwait
jae
ss
inc
cmpsb
inc
shrl
jl
and
sub
xor
dec
xor
adc
lods
push
fdivl
dec
in
mov
cs
aas
add
lret
mov
stos
shlb
mov
adcl
pop
mov
push
je
inc
jbe
fadd
cmp
mov
inc
pop
pop
fiaddl
mov
mov
jl
sbb
lods
lret
mov
add
pusha
int3
ja
clc
js
test
in
mov
fwait
std
xor
jnp
shl
dec
popf
ret
adc
push
cmpsl
sahf
push
mov
sub
xlat
out
dec
xchg
jae
icebp
fnstcw
repz
pop
jae
mov
lahf
jl
bound
push
rorb
xchg
mov
cs
ds
loope
jp
add
cmp
sub
inc
add
adc
and
adc
lds
jb
stc
mov
jmp
int
pop
sbb
push
imul
pop
cltd
inc
lret
mov
ljmp
push
inc
std
nop
std
out
sti
sub
cld
xchg
imul
cmp
cmpsb
les
inc
lahf
pop
test
jnp
test
in
dec
in
jae
jnp
out
xchg
adc
arpl
adc
dec
adc
xchg
cmc
popf
mov
pop
push
dec
call
ret
lock
jbe
icebp
push
cmc
outsl
pop
bound
mov
test
mov
shll
in
dec
fimuls
bound
mov
push
pop
dec
ret
sub
je
arpl
pop
mov
cli
inc
dec
iret
nop
fsubrl
jae
lds
adc
mov
mov
rcrl
dec
mov
test
out
je
enter
and
mov
mov
sbb
and
repz
cmp
dec
mov
pop
leave
inc
sar
scas
fadds
shl
test
jne
rcrl
filds
push
in
dec
mov
sbb
xor
dec
mov
mov
popf
leave
cmp
cmc
adc
out
mov
mov
add
pop
jmp
ficoms
lret
loopne
sbb
outsb
int
icebp
and
push
xchg
pusha
loope
stos
pop
or
in
repnz
popf
repz
ljmp
mov
pop
in
cs
dec
xlat
rolb
xchg
mov
jb
ds
add
and
scas
outsl
lret
xchg
negb
mov
std
loop
xor
mov
or
repnz
mov
repz
ds
sub
fimuls
arpl
inc
adc
shl
jmp
dec
test
ficompl
adcb
aam
push
xor
in
mov
int
sbb
jmp
mov
cli
mov
ja
and
jmp
ja
insb
mov
fimuls
data16
inc
pop
ljmp
scas
pop
mov
enter
push
xor
or
and
aam
bound
sub
stos
insb
push
shrl
push
mov
cli
shrl
push
xchg
xor
mov
or
lret
or
jne
imul
jmp
pop
jp
dec
xchg
mov
pop
add
das
insl
mov
xchg
int
incb
in
rclb
movsb
adc
imul
lods
lret
shlb
ljmp
mov
inc
call
aad
push
popa
mov
fdivl
jmp
cmp
aaa
sti
gs
aad
sbb
insl
mov
imul
lds
push
in
or
aaa
sbb
fsubs
and
sbb
inc
xchg
in
mov
mov
sbb
mov
pushf
hlt
and
xlat
int
scas
roll
jge
jne
sti
sbb
sbbl
fcompl
and
xchg
out
sub
in
cwtl
ja
pop
pop
jae
rol
sub
inc
mov
iret
xor
shrb
jg
scas
jb
scas
mov
or
daa
jmp
ds
pop
mov
ret
je
pop
adc
clc
push
fsts
push
sub
fisttpll
das
scas
and
lahf
xor
or
nop
dec
adc
cmpsb
mov
push
cli
shlb
or
in
stos
addr16
xor
fdivrl
xchg
iret
xchg
stos
cmp
pop
push
push
stos
lods
mov
inc
stc
pop
loope
fildll
std
xchg
lret
jl
repnz
cmp
stos
dec
jg
test
cmp
push
inc
iret
fnsave
lcall
imul
std
mov
sahf
lea
sub
dec
rolb
bnd
mov
and
test
aaa
xor
push
dec
xchg
inc
cmp
dec
sub
xchg
popa
adc
stos
aaa
push
adc
mov
cmpb
pop
movsl
inc
lret
insb
test
packuswb
cmp
rclb
and
sbb
mov
or
popa
mov
push
das
pop
insb
ds
pop
mov
xor
inc
inc
mov
xlat
mov
mov
xchg
push
xchg
push
xchg
das
adc
push
sub
out
mulb
hlt
popf
xor
cmpb
mov
xor
jno
subb
inc
lods
cli
fdivrs
stc
and
mov
push
leave
xchg
imul
dec
sbb
into
in
lea
jns
jbe
jl
xor
clc
or
fisubl
roll
popa
push
outsb
not
add
aas
arpl
push
loopne
repnz
insb
pop
lock
lcall
das
stos
test
xchg
xchg
mov
mov
or
cwtl
mov
int3
loopne
stos
lcall
pop
int3
stos
pop
mov
insl
dec
dec
call
jae
lea
cmp
xchg
mov
out
or
lods
cmp
fimull
cmp
insl
adc
cmp
movsb
cwtl
jbe
xchg
sub
or
xchg
add
push
ds
cmp
fwait
xchg
arpl
jb
sbbl
xor
jo
scas
mov
inc
dec
mov
addb
sbb
out
xchg
shlb
dec
inc
mov
call
mov
imulb
jb
pop
cs
sub
sarb
dec
adc
jecxz
call
cmp
jg
or
push
pop
mov
test
fs
aas
mov
movsl
sub
or
lcall
xor
mov
sbb
cmp
push
and
and
xchg
or
mov
popa
in
and
aas
aas
mov
xchg
mov
cltd
notl
mov
xchg
xor
xor
jne
pop
dec
imul
es
loopne
jae
inc
sub
push
js
or
lahf
nop
popf
jns
fisubrl
outsl
pop
jmp
xchg
inc
inc
stos
int
jbe
and
xchg
shr
loope
sbb
enter
nop
or
lds
or
rclb
xor
xor
add
sub
dec
sub
pop
lcall
jne
mov
out
add
and
mov
fisttpll
push
fcmovnb
inc
scas
xchg
psubusb
sbb
xor
inc
jmp
bound
cwtl
rolb
gs
notl
jns
sbb
insl
sbb
xorb
repnz
popa
mov
fstp
or
cmp
imul
ss
inc
shlb
test
inc
and
outsl
in
xor
fs
dec
sub
xchg
packuswb
cmp
ss
mov
and
jno
inc
cmp
stos
mov
cltd
cmp
inc
mov
mov
movsb
jle
test
hlt
xchg
scas
stc
shlb
cltd
outsl
loope
add
push
leave
inc
jecxz
sbb
inc
adc
cmp
push
mov
push
lock
out
dec
cli
retw
xor
jns
inc
scas
dec
add
xchg
inc
lret
add
xchg
xor
inc
out
jno
cmpsl
mov
mov
jb
push
repz
subb
negb
add
cmp
mov
push
nop
enter
leave
addr16
popa
aaa
cmp
or
ret
xor
jp
and
sub
mov
pop
mov
cmpsl
inc
mov
call
mov
mov
cmp
bound
aaa
or
adc
mov
stc
data16
andb
push
ret
add
test
inc
mov
add
outsl
mov
mov
sbb
adc
sbb
repnz
and
push
cmp
shrl
jl
push
popa
je
jp
sbb
sub
add
sahf
iret
aaa
mov
repnz
add
ret
sub
lods
push
pop
jno
push
sbbl
xchg
lret
pop
cmp
cmpsl
jmp
in
imul
fwait
ret
mov
test
adc
sbb
roll
pop
pop
sub
add
inc
mov
stc
inc
in
pushf
insl
ja
inc
int3
push
test
jp
pop
lea
lret
fadds
sub
icebp
mov
rcr
add
jne
inc
fwait
xchg
scas
inc
in
es
fisttpl
jmp
subl
sti
loope
sub
lea
push
sbb
cli
lock
mov
dec
jne
pop
sbb
inc
pop
sub
adcl
fisttpl
fwait
shll
dec
or
sbb
inc
rcrb
cmp
pusha
test
dec
push
add
adc
cmp
pop
repz
fcmove
mov
and
sub
push
jl
insl
push
mov
cli
pop
inc
mov
cmc
out
test
arpl
gs
sub
mov
into
cmp
sub
pop
dec
and
jns
add
adc
mov
sarb
les
push
sbb
xor
test
pop
iret
inc
cs
pop
jbe
ja
xchg
pop
xchg
inc
ja
arpl
loop
insb
jnp
bound
pusha
or
test
inc
in
test
push
mov
mov
repz
leave
pop
fsubs
xchg
mov
push
repz
and
iret
adc
lds
outsb
popa
dec
mov
das
mov
push
xchg
xchg
pop
pop
inc
pusha
push
xchg
xlat
ret
divl
and
pop
pop
and
leave
scas
or
add
mov
ret
pusha
mov
xor
xor
mov
jnp
pushf
adc
or
stc
ljmp
ja
in
dec
andb
cmp
loop
and
push
dec
xchg
or
es
ljmp
fstl
cmp
and
scas
and
push
xchg
shrl
fbstp
outsl
movsb
jnp
and
filds
jecxz
cmp
shl
and
js
push
and
jno
std
xor
mov
dec
test
loop
add
test
mov
ret
lods
xchg
cmp
fucomi
jb
sbb
mov
sbb
pop
mov
andl
mull
mov
aad
sbb
sbb
sbb
sub
inc
fsub
xchg
inc
iret
bnd
popl
push
sti
add
es
in
xchg
xchg
jmp
ret
push
mov
jg
fldcw
mov
mov
in
fcompp
inc
fwait
add
in
ljmp
mov
stos
sub
inc
in
ljmp
xor
push
stc
fmull
sub
lret
in
in
sbb
mov
dec
int
cmp
into
dec
imul
dec
dec
repz
jo
jo
push
push
sbb
scas
ror
xor
xor
mov
and
adc
mov
in
xchg
sbb
add
xor
push
cmp
jo
jae
mov
cltd
sbbb
mov
jno
cmpb
cmp
inc
mov
shlb
outsb
fisttpl
test
int3
aaa
xchg
lea
jnp
mov
push
loop
nop
loop
inc
clc
pop
adc
fisubrs
jbe
fcomps
and
leave
push
pmullw
gs
andb
jnp
mov
adc
das
roll
push
je
test
arpl
push
cmpsl
mov
test
push
icebp
cs
xor
fadds
jns
rcll
fimull
add
paddsw
out
add
lods
jl
pop
lods
cltd
sub
out
out
and
bound
bound
jge
ss
lock
js
arpl
inc
inc
ja
mov
or
push
gs
popf
rorl
add
out
mov
mov
cmp
cmp
jo
roll
addr16
subl
ficomps
sbb
dec
loope
ss
push
xchg
xchg
ljmp
movsb
sub
shrl
icebp
dec
xchg
inc
sub
into
std
xchg
das
icebp
and
fs
sar
fadd
pop
pop
mov
xchg
subb
dec
mov
rolb
sti
jecxz
sbb
push
pop
mov
push
jne
test
jb
jo
jecxz
in
loopne
bnd
cld
or
mov
data16
inc
aad
fnstcw
addr16
mov
mov
and
dec
mov
xchg
jo
xchg
inc
inc
enter
fsubl
rep
pop
sub
pusha
add
or
test
mov
ja
mov
jnp
hlt
jl
mov
scas
fiaddl
inc
sub
jb
shrl
dec
rcrl
in
jg
mov
pop
aam
push
shll
int
outsl
fucom
mov
test
clc
add
xchg
loopne
mov
in
pusha
and
inc
rolb
shr
or
or
or
shll
mov
ficoms
int
mov
dec
aaa
rolb
fnsave
int
outsb
or
or
pop
jecxz
pop
out
cmp
loop
xlat
jle
aaa
imul
sub
sub
add
orl
adc
push
pop
call
pop
cmp
sbb
test
loopne
mov
or
in
cwtl
inc
mov
pop
stos
push
jnp
in
add
add
loopne
and
xchg
ret
or
stos
scas
pushf
xchg
mov
je
ret
mov
jo
jne
lods
fstps
push
pop
enter
inc
jecxz
add
sub
idiv
cmp
pop
jo
stos
adc
cmp
xor
scas
add
lea
jle
lret
daa
and
fldcw
outsl
loop
jge
sub
frstors
stos
or
push
das
sbb
loop
mov
jle
adc
sbb
jg
sub
xorb
in
lods
xor
pop
pushf
push
jbe
push
stos
cwtl
es
leave
cmc
shl
leave
lret
xchg
jle
int
je
ret
mov
mov
mov
int
lahf
and
popl
data16
or
into
xchg
add
inc
dec
mov
dec
test
pop
push
push
mov
movsl
xor
data16
std
fcoms
adc
jb
jb
sub
cltd
loope
call
fistpl
jg
inc
xchg
sub
cmp
insb
mov
cmpsl
xchg
in
mov
in
out
mov
push
jecxz
inc
mov
sbb
cmpsb
jp
in
xchg
lock
xchg
jbe
nop
pop
or
out
mulb
and
orb
pop
dec
sub
ljmp
dec
jmp
mov
push
adcb
outsl
ds
inc
mov
inc
dec
push
jmp
pop
mov
jecxz
out
pop
dec
fs
or
gs
imull
push
or
ja
sub
xchg
icebp
xchg
jbe
xor
jns
cmp
pop
pusha
and
sbb
aas
ljmp
sbb
mov
fildl
popa
inc
push
inc
sbbb
int
mov
pop
mov
xchg
push
mov
loop
jmp
bound
mov
enter
push
mov
mov
aaa
pusha
push
call
leave
dec
jl
popa
rolb
test
aad
ja
stos
mov
sub
pop
push
sbb
dec
mov
mov
mov
cwtl
into
push
mov
mov
mov
mov
xrelease
pusha
fs
xchg
daa
fidivl
jb
add
adc
in
das
pop
loope
in
test
inc
dec
rclb
lds
in
popa
mov
cmp
jbe
test
add
cli
ljmp
or
idivb
inc
jge
sbb
push
loopne
test
mov
or
imulb
jmp
cmpsb
lretw
std
sub
jmp
scas
adc
pop
xor
mov
and
mov
mov
sbb
xlat
fsubr
jbe
jge
js
adc
mov
ljmp
lock
imul
dec
push
pop
hlt
jl
inc
jb
popa
and
adc
scas
sub
pop
lock
daa
or
push
push
mov
adc
pop
movsb
sbb
les
and
aas
in
fiaddl
ja
pop
xor
lods
loop
cwtl
jno
pop
arpl
push
stos
cmp
adc
out
js
ds
aam
xchg
or
push
push
loop
stos
lahf
xor
xchg
push
sbb
inc
pop
pop
cltd
sbb
mov
lret
push
pop
sbb
in
mov
lock
ret
pop
fisubrl
lahf
mov
int3
ljmp
jae
mov
inc
cmpsb
push
cmp
or
es
pop
mov
and
jp
inc
ljmp
fdivs
jecxz
inc
pop
loopne
loop
xchg
or
stc
js
inc
add
stc
test
add
pusha
and
mov
sub
pop
pause
adc
pusha
xchg
mov
hlt
roll
iret
subb
fcom
in
dec
or
insb
insl
in
cld
mov
push
mov
stos
hlt
sti
roll
jno
dec
add
fnsave
mov
dec
lret
in
outsb
lock
mov
mov
test
lock
mov
out
mov
lret
dec
int
pusha
push
adc
push
insl
add
loop
pop
lcall
lret
sub
and
mov
jno
mov
and
rcrb
or
and
pop
scas
adc
cltd
icebp
enter
fimull
adc
xchg
bswap
pop
add
shl
rcrb
mov
in
fldenv
out
xchg
sub
mov
rclb
jbe
in
testb
jmp
jae
mov
add
fidivl
mov
outsl
jp
data16
sub
mulb
divb
orb
out
cltd
fdivl
jae
imul
inc
push
xchg
or
mov
jg
jl
icebp
xchg
mov
mov
push
fadds
popf
fst
notl
psraw
cmc
pop
dec
adc
cmpsl
fwait
leave
mul
into
xchg
repz
xor
cmpb
dec
lods
das
shll
arpl
cmp
adc
add
enter
jl
cli
enter
xchg
cmp
outsb
push
fs
lods
lds
lret
and
cmp
mov
or
sti
fcoms
addr16
mov
jno
inc
and
cmc
aaa
ret
outsb
xor
fiaddl
orl
fyl2x
xchg
fdecstp
cmc
xor
gs
dec
imul
fsubp
xor
dec
je
jns
xor
pusha
les
pop
inc
cmp
insl
push
xor
jge
mov
inc
shrb
xor
shll
in
je
add
dec
cmpl
scas
mov
xlat
iret
mov
aaa
cs
fmuls
xchg
jbe
and
xor
shrl
loope
in
push
mov
aaa
lea
add
jns
je
lods
fld
push
hlt
in
or
repnz
stos
xchg
or
mov
and
jbe
and
mov
push
inc
addl
rcrb
and
ja
push
fwait
insb
sub
aaa
xchg
jns
and
mov
je
ljmp
xor
mov
cmp
push
arpl
and
mov
stos
clc
cltd
cmp
mov
pop
sbbl
pop
in
test
xchg
and
xchg
popf
jo
out
pop
je
out
dec
rcll
in
pop
adc
jmp
jno
xor
les
aam
aas
mov
sub
sub
mov
aas
andb
cs
mov
mov
insl
adc
xchg
jmp
sub
ds
jle
mov
jg
stc
pop
push
push
imul
sub
push
mov
movsb
dec
or
jns
out
cmc
and
xor
and
mov
mov
jl
cmp
pushf
fmul
rcrl
dec
add
xchg
fstpl
fiadds
mov
jb
leave
inc
nop
inc
lret
jl
mov
jne
dec
int
inc
test
aaa
adcb
insb
mov
movsb
and
adc
pop
mov
lcall
mov
movsb
fdivrs
sbb
inc
cmp
add
loope
popa
adc
or
mov
sar
fidivrs
dec
add
push
stos
jp
xchg
add
lret
out
fisttpl
push
adc
cmpsl
aam
mov
fsubl
mov
add
xor
lcall
push
fsubl
or
and
fisubrl
jbe
mov
dec
jno
repz
shl
aad
push
push
call
data16
inc
jmp
xlat
mov
sbb
mov
and
xor
lea
int3
mov
xor
mov
sbb
xchg
stos
adc
outsb
sbb
jne
mov
repnz
mov
ficompl
jmp
ds
push
xor
test
add
mov
in
sbb
loope
cmpb
jnp
lods
scas
mov
dec
adc
call
push
js
jecxz
sti
shll
lahf
sbb
imul
sarl
push
test
xor
adc
adcb
insl
int3
ret
aad
nop
inc
lahf
mov
shll
pop
sahf
in
mov
xchg
cmp
xor
ret
enter
nop
jmp
addr16
test
pop
sbb
cs
mov
clc
adc
fcompl
fiaddl
xchg
cli
sub
and
sarl
and
pop
ret
incb
out
push
xchg
lret
push
add
or
int3
fxch
cmp
lods
jecxz
mov
jae
aaa
jle
dec
mov
and
imul
xor
mov
jmp
and
pushf
lahf
js
sub
popf
mov
cmp
pop
jl
movsb
and
jp
mov
xor
push
enter
ror
and
adc
ja
and
pop
aaa
and
mov
ret
push
es
pop
inc
leave
xor
call
repnz
mov
mov
sub
popf
shlb
jp
hlt
push
adc
jmp
inc
adc
adc
lea
cmp
and
idivb
fs
int
ficomps
mov
out
notb
int3
decl
pop
jo
in
cmpsl
popa
fcoms
dec
pop
in
jl,pt
pushf
pop
jmp
pop
push
out
and
enter
sbb
les
push
sbb
std
dec
mov
jae
push
fildl
mov
push
aam
orl
mov
test
out
pop
and
pop
pop
adc
movsb
fdiv
mov
push
push
cmp
cwtl
insl
sbb
push
mov
test
dec
inc
test
and
cs
lods
roll
cs
or
xor
es
ret
aad
and
adc
mov
jmp
xlat
mov
pop
cmpsl
mov
xor
and
jb
jmp
push
dec
sub
lea
cld
and
loope
jle
fidivs
add
push
mov
cmc
sub
jl
lcall
adc
fbstp
pop
int
mov
mov
das
pop
lods
mov
testl
stc
jns
pop
popa
add
mov
push
pop
or
div
ret
test
dec
lods
xchg
test
aaa
sub
stos
repnz
push
jbe
stos
xchg
inc
and
fstl
xor
dec
jmp
insl
lds
xor
push
mov
sub
mov
hlt
push
pushf
adc
nop
mov
movsl
js
jg
jge
in
push
repnz
loopne
test
mov
or
jne
sar
jbe
out
push
es
xor
jp
cmpsb
xchg
xchg
test
fildll
xlat
imul
cmp
mov
mov
insb
add
insl
insb
fisubl
mov
in
je
cld
mov
in
fildll
das
jmp
out
insb
inc
jl
jns
xchg
pop
sub
insb
jns
out
mov
in
rol
nop
jmp
xchg
jo
add
xchg
daa
lds
ret
mov
stos
rcll
flds
and
add
pop
cs
inc
pop
hlt
lds
jg
lds
adc
ja
test
je
sub
js
pop
push
dec
push
push
aam
fmuls
fiadds
inc
leave
ror
aas
push
cmp
arpl
push
jle
push
scas
js
mov
lret
test
or
inc
inc
sub
sub
sub
repz
nop
mov
xchg
pop
push
sub
imul
xchg
stc
scas
rcrl
mov
push
mov
jbe
int3
and
cli
mov
test
jmp
and
sbbl
xchg
mov
pusha
jns
fcom
dec
and
js
cmp
dec
gs
mov
cli
adc
mov
fbstp
or
push
mov
in
fs
lock
lods
ret
rcrl
and
xchg
test
sbb
push
inc
repz
inc
or
push
cmp
dec
adc
adc
je
push
cmp
imul
mov
fsubrl
int3
adc
and
rcl
cmp
cmp
outsl
adc
fldt
adc
aas
mov
mov
and
mov
loopne
push
fdivrl
adc
enter
mov
das
lret
pop
insb
inc
shr
fmul
add
movsl
rcrl
xchg
pusha
scas
aaa
repnz
jae
insb
icebp
mov
xchg
int3
inc
popf
mov
and
jae
mov
sbb
adc
push
sub
in
dec
dec
xor
scas
dec
pop
push
cmpsb
cmp
xor
jae
sbb
stos
and
cmp
dec
push
adc
fstps
inc
pop
ficompl
sbb
popa
adc
ret
lock
jp
push
loopne
icebp
push
lahf
enter
xchg
fwait
notb
sbb
add
pop
shll
sbb
rorl
andl
mov
sub
icebp
pop
adc
scas
leave
mov
adc
lret
or
cmp
iret
mov
mov
pushf
outsb
loop
mov
icebp
lods
dec
cmp
inc
jg
pop
mov
insl
cmc
je
xchg
jp
sahf
mov
push
in
mov
cli
jle
rcll
adc
dec
aam
sbb
std
and
xchg
je
push
lcall
popf
ret
mov
iret
and
mov
cmc
inc
pop
mov
xor
hlt
add
cmpsb
mov
loopne
adc
inc
mov
mov
xor
adc
out
and
in
fwait
mull
nop
inc
faddl
ss
fwait
lds
xchg
jno
shlb
xor
enter
sub
outsl
jmp
in
into
inc
vmovd
xchg
cs
or
adc
push
jo
lret
and
cmp
sub
sub
daa
dec
ds
or
data16
subl
ss
adc
fsts
inc
mov
xor
adc
cmpsl
aas
adcl
mov
insb
mov
sbb
in
imul
push
cmp
lcall
in
imul
xlat
pop
test
pop
jae
push
xor
xchg
lods
and
pop
mov
jle
jp
cmp
push
rcl
push
repnz
lahf
xchg
cmovg
mov
jns
outsl
mov
xchg
adc
addr16
mov
pop
cmp
test
movsl
scas
gs
lahf
xor
adc
roll
pop
adc
mov
fisttpll
js
dec
popf
out
pop
in
mov
shrl
lods
inc
add
mov
out
imul
adc
imul
sub
test
test
enter
pop
movsb
jbe
fs
cmpsl
sub
push
mov
nop
mov
lea
icebp
outsb
pop
divb
cmpsb
inc
mov
into
cmp
shrb
mov
ja
dec
sub
and
cmp
std
xchg
push
mov
mov
sub
into
in
xchg
add
jmp
sub
int3
and
dec
adc
das
aaa
ret
mov
les
pop
push
shlb
je
jno
xor
lds
sbb
pop
add
cmpsl
jge
aad
mov
jmp
dec
fsubrl
ja
jecxz
add
cwtl
outsl
mov
std
je
xchg
pop
aad
scas
sahf
push
data16
sbb
ds
push
jno
ret
add
dec
sti
sti
or
xchg
fidivs
ss
jae
in
mov
stc
ja
mov
dec
pushf
sbb
and
lcall
mov
adcb
fwait
sub
sub
sub
jbe
or
les
lds
mov
sti
pop
fwait
adc
and
popa
cmpsb
arpl
mov
dec
xor
addl
in
out
jp
subb
daa
mov
jae,pn
push
jae
jmp
xchg
inc
loopne
xlat
xchg
push
repnz
mov
pushf
and
lret
stos
cmp
out
inc
inc
shll
jne
jp
ss
bswap
loopne
adc
loop
and
pop
int3
fs
xchg
repnz
jge
fnsave
xor
stos
adc
scas
sbb
sub
mov
xor
addr16
test
aam
xchg
lock
sub
bound
lret
fcmovu
es
or
lods
jo
cmpsb
and
fstps
jne
pop
inc
fimuls
enter
test
in
mov
mov
sbb
push
std
inc
fildl
mov
in
clc
cmp
xor
pop
rorl
push
test
jno
push
cs
ds
incb
sub
dec
or
fisubl
mov
scas
xor
xor
and
int3
inc
inc
ss
shrl
or
xchg
scas
push
sub
test
std
cmp
fwait
int
imul
jge
fidivrl
rcrb
adc
jb
inc
inc
lock
add
imul
test
dec
jnp
inc
sub
int3
sahf
xchg
jnp
repnz
inc
call
shr
jbe
mov
dec
aad
sbb
mov
enter
mov
nop
jae
adc
xchg
and
in
mov
mov
nopl
and
call
cmpsb
mov
fwait
bound
xor
out
push
cmc
into
fs
aas
fs
jbe
jmp
and
test
push
mov
sti
jae
xlat
push
cld
push
movsb
sub
push
mulb
in
repnz
xchg
add
arpl
incb
xchg
pop
inc
sub
sbb
push
fisttps
inc
cmp
sub
rorb
pop
sarl
call
cmpb
sub
inc
xchg
fs
push
adc
adc
mov
add
ljmp
lock
jbe
lret
push
into
dec
inc
out
jg
dec
push
sbb
in
adc
xchg
das
cmp
andl
roll
xchg
pop
jne,pt
lea
negl
sbb
xchg
sbb
lahf
pushf
dec
sub
fwait
stos
sbb
sti
sub
cmpsl
ret
cmc
push
xchg
xorl
xchg
daa
sub
pop
imul
sub
pop
mov
pusha
leave
insb
adc
adc
filds
roll
push
adc
scas
inc
xchg
fisubrl
jbe
push
scas
enter
push
fists
addr16
push
sbb
rolb
push
pop
andl
xor
push
xor
fdivrl
out
cmp
pusha
negb
inc
dec
adc
aam
push
sub
cli
mov
rcll
pop
or
pop
imul
mov
adc
pop
mov
jo
cmp
xlat
mov
daa
or
fstps
add
sub
insl
cmpsl
mov
fcmovnu
xor
push
mov
jge
loopne
dec
xor
lret
in
sarl
aas
popf
jb
fisubrs
mov
sub
push
jg
push
mov
outsl
pop
pop
xchg
mul
arpl
mov
sbb
lret
shll
sub
fidivrl
inc
in
pushf
data16
jp
sub
mov
and
pop
and
sbb
and
inc
ss
jecxz
sti
fwait
mov
shr
xlat
or
sbb
sti
inc
sbb
lds
out
mov
mov
sti
pop
pop
mov
scas
gs
popa
testb
hlt
adc
lods
dec
mov
inc
xlat
rcr
stos
orl
and
mov
lret
mov
push
jmp
iret
pop
xchg
enter
scas
mov
mov
xchg
sub
inc
jle
push
and
ret
adc
iret
out
fimuls
out
clc
xchg
cmc
push
and
add
idivb
push
cs
imull
pop
enter
int3
insl
or
out
pop
mov
pusha
das
inc
fs
leave
rcll
cmpsl
rorb
xlat
xchg
enter
cs
dec
test
and
les
bound
movsl
jne,pt
and
mov
jmp
adc
xchg
dec
fsts
int3
xor
stc
jae
mov
mov
dec
pushf
cld
push
dec
lods
push
stc
mov
jne
popl
lcall
mov
mov
in
jns
push
mov
pop
jge
jge
jmp
xchg
push
cmc
add
out
mov
cli
mov
lret
out
rcrl
dec
outsb
lret
cmp
outsb
shl
jnp
xor
mov
dec
xlat
insb
mov
add
out
cmpsl
pop
insb
dec
jne
outsb
inc
cmp
inc
scas
bound
fcmovne
jbe
sarb
jge
idivb
int
adc
push
adc
fs
jle
pop
popa
add
ret
mov
insl
adc
out
xor
testb
xor
inc
xchg
aaa
imul
repnz
les
mov
les
aas
pop
sub
repnz
xor
sbbl
dec
jmp
scas
pop
cwtl
dec
lret
daa
add
sbb
mov
cmc
cltd
push
or
jae
mov
pop
cmp
icebp
ljmp
insb
mov
add
lods
jle
mov
mov
inc
xchg
rorb
cwtl
stc
inc
ljmp
xlat
addr16
sbb
aaa
stc
notl
pop
cmp
lods
scas
push
daa
mov
pop
or
fadd
les
aas
push
pop
sub
jp
leave
add
ja
xchg
or
ja
and
jnp
mov
and
xor
jb
ret
ds
inc
mov
aas
cmp
les
shrb
enter
lahf
loope
xlat
xchg
cmc
cmp
lret
outsl
addb
hlt
mov
sbb
loope
xchg
push
jge
cmp
iret
cmpsb
xchg
lret
aad
dec
mov
adc
inc
jmp
out
ljmp
jmp
sub
gs
lods
cmp
mov
shlb
cmp
mov
aam
fsubrp
pop
push
sbb
push
clc
call
addr16
jae
fmul
xchg
or
repz
aad
jecxz
inc
pop
dec
or
stc
inc
mov
fsubrl
inc
scas
icebp
inc
pop
lahf
aas
adc
add
adc
mov
ljmp
clc
loope
dec
cltd
and
mov
scas
aaa
mov
stos
adc
cmp
xor
xchg
lret
fwait
js
xor
jg
xor
mov
lcall
jge
addr16
data16
icebp
pop
jmp
inc
stc
push
push
cmp
fdivp
push
pop
fs
dec
and
xor
mov
dec
icebp
lds
xor
fnsave
test
mov
fistl
ffree
push
push
push
fcmovnbe
outsl
mov
adc
or
mov
imul
jmp
test
enter
xorl
add
mov
mov
les
ljmp
dec
arpl
leave
sti
bound
sbb
mov
pop
or
sub
pop
xor
shll
pushf
jb
repz
iret
sbb
sub
xchg
adc
aam
mov
popf
push
subl
pop
loop
enter
cmpsl
inc
pop
ljmp
shrb
or
mov
xchg
test
dec
add
sti
shll
sbb
aam
sti
inc
fdivrs
loope
lock
scas
imul
add
iret
dec
mov
push
scas
pushf
imul
cld
mov
cli
dec
sbb
imulb
mov
push
sub
sub
jmp
push
insb
ja
pminub
aam
int
xor
jne
or
lods
xlat
inc
in
or
cmp
scas
hlt
xor
push
in
rolb
repnz
and
outsl
nop
and
jl
jne
test
in
loopne
push
and
cmp
dec
data16
and
push
inc
leave
lea
shlb
jne
jg
test
push
pusha
or
lcall
inc
loope
dec
sbb
xor
in
dec
leave
loopne
imul
popa
xchg
or
imul
popl
lds
ret
jp
aad
push
mov
dec
push
cmc
rorb
lea
dec
xor
fmul
pop
xor
rcrb
xorl
es
mov
test
jnp
add
ljmp
jmp
lea
jp
sbb
inc
lock
push
iret
movsl
push
iret
pop
mov
pushf
dec
xchg
lods
jle
mov
xchg
std
daa
lods
add
or
lds
sub
pop
inc
mov
stos
aam
mov
outsl
sub
test
aas
pop
out
pop
sub
test
aad
cld
xchg
gs
and
insb
xor
mov
pop
shrb
xchg
in
bound
jns
sbb
iret
xchg
mov
rcl
mov
add
outsl
xchg
imul
push
pop
sahf
mov
lea
pop
imul
push
xchg
dec
test
lcall
jmp
pushf
inc
jp
sbb
into
mov
inc
and
jb
sub
scas
xchg
xchg
inc
ret
nop
fistpl
andl
mov
es
adc
lea
mov
test
xchg
adc
das
test
xchg
data16
pop
jbe
xor
and
fwait
mov
fbstp
push
jae
or
push
add
or
lods
enter
sti
push
cld
js
icebp
xchg
shlb
popf
pop
push
xor
enter
and
jne
into
pop
add
popa
mov
movsl
mov
mul
call
push
rcll
cmc
pop
and
int
mov
sub
loop
lcall
mov
cmc
lods
xchg
add
mov
jmp
pop
xlat
sub
iret
iret
push
inc
jge
repnz
push
inc
xchg
hlt
jmp
popf
xor
rorl
mov
ret
sub
das
sbb
mov
sti
push
mov
clc
inc
mov
jecxz
xchg
push
adc
stos
sbb
pusha
pushl
xchg
or
add
inc
inc
js
cli
and
sbb
ss
aas
ss
mov
jno
sbb
std
pop
repnz
cmp
cld
js
fdivp
popa
inc
adc
lds
aam
cmp
pop
jae,pn
pop
push
push
stc
ficoms
lcall
lods
push
jnp
or
adc
fcmove
lock
mov
rcll
push
pusha
mov
add
mov
sbb
mov
arpl
lds
or
insl
pop
add
add
jae
lret
add
data16
and
jbe
cltd
sbb
imul
loopne
push
and
icebp
pusha
scas
lret
push
cmp
mov
jmp
mov
stos
cvtps2pi
and
jecxz
cmpsl
ja
mov
sbb
imul
mov
and
repz
mov
push
les
or
push
xchg
outsl
insb
xchg
inc
popa
xchg
adc
pop
dec
inc
jmp
cmpsb
mov
jg
imul
mov
lahf
lods
jle
outsb
int3
hlt
sub
mov
out
mov
jne
fldcw
or
xor
in
sbb
sti
rcll
inc
lret
mov
push
jmp
sbb
movsb
dec
pop
repnz
sub
mov
xor
int3
inc
or
dec
cmp
fcmovnbe
mov
cmpsl
add
xor
xor
test
cmpsb
aam
stos
clc
or
pop
mov
aaa
outsl
and
sub
pop
cmc
adc
pop
ss
nop
push
pop
jp
nop
mov
pop
xor
jne
fsts
js
cmp
fstp
sbbb
test
test
mov
shl
cmp
and
outsl
cltd
js
bound
aad
sub
inc
pop
scas
cmp
pop
sbb
adc
dec
dec
mov
pop
jmp
mov
out
jecxz
adc
mov
sub
cs
push
push
in
aas
cwtl
call
mov
cmp
daa
mov
insl
icebp
xchg
push
adc
push
testl
xor
sbb
fwait
sbb
in
sub
stos
fs
les
mov
aas
pop
pop
jle
xchg
arpl
pop
dec
shrl
sbb
mulb
or
dec
fsts
mov
xchg
mov
scas
cltd
lods
daa
mov
push
jl
lods
mov
dec
sub
fdivrl
cmpsl
and
push
xor
add
stos
stos
into
xchg
sbb
rcr
and
dec
mov
inc
in
imul
push
sub
mov
pop
jl
mov
cli
sub
jnp
xlat
push
or
test
imul
and
pop
rcrb
and
push
sbb
mov
nop
and
data16
inc
pop
mov
sub
test
not
gs
mov
loop
mov
repz
add
aam
jecxz
popa
or
daa
cmp
cli
ret
arpl
movsl
lret
dec
fildl
cmp
test
lock
pushf
jb
iret
fimuls
push
imul
xlat
add
faddl
int
mov
mov
mov
mov
push
mov
push
jmp
xchg
fldcw
imul
inc
imul
xor
test
jmp
cmpsb
or
iret
push
and
iret
arpl
xor
mov
add
xor
stc
sub
addb
or
mov
outsb
in
cmp
xchg
sub
enter
sahf
xor
jno
fwait
mov
cmp
jl
repnz
dec
pop
in
std
ret
dec
cmp
jmp
sub
rclb
mov
cmpsl
xchg
popf
mov
xchg
popf
jg
js,pn
adc
or
add
mov
or
int3
sbb
pop
xor
adc
push
subl
andl
stos
cli
or
mov
mov
outsb
push
push
in
fistps
xor
test
dec
or
mov
jns
pop
and
mov
fisttpl
pop
adc
rolb
movsb
lock
fwait
mov
dec
mov
iret
dec
cltd
test
cs
add
mov
pop
lods
mov
lea
cmp
push
pop
push
add
popa
iret
jg
mov
and
aaa
cmp
sbb
ljmp
and
push
mov
pop
pop
sbbb
ja
cmc
push
inc
xor
mov
and
cmp
mov
frstor
lods
xchg
cmpsl
insb
mov
je
xchg
cmp
js
and
lcall
jle
or
data16
ss
dec
hlt
cltd
adc
and
push
loopne
adc
dec
sbb
fisttps
push
lret
aas
pop
push
ret
clc
ja
cmp
jle
add
fwait
jl
xlat
notl
dec
out
out
iret
bound
stos
cmp
push
mov
push
xchg
cmp
mov
jmp
and
or
xor
fisttpll
cmpsl
movsb
rclb
lock
es
xchg
fldenv
pop
xchg
inc
push
clc
xchg
clc
out
mov
jnp
jae
int
sub
clc
das
inc
sbb
out
es
fsubrl
mov
and
mov
dec
fwait
or
stos
call
cwtl
add
sahf
sbb
push
add
xor
int3
fisttps
jge
inc
lods
pop
xor
ds
mov
pop
das
mov
popa
mov
add
jp
sti
sti
lret
loope
adc
mov
cld
adc
cmp
jecxz
and
std
repnz
xor
ficoml
inc
or
imul
mov
dec
dec
cmp
dec
loop
loopne
ss
rolb
stos
dec
or
jnp
nop
xchg
jg
or
icebp
dec
in
fisubs
outsl
repz
popf
rol
je
xchg
mov
loopne
aaa
jae
xchg
pop
roll
scas
lds
mov
xlat
sub
enter
fimuls
iret
xor
and
xchg
pop
cmp
stos
cmp
stc
jno
xor
pusha
call
sahf
outsb
add
or
out
jle
repnz
cmp
pop
lods
mov
dec
je
inc
sbb
cld
loopne
cmp
mov
sbb
mov
push
mov
mov
dec
inc
mov
lock
mov
test
pushf
inc
and
mov
enter
fisttps
fidivl
or
rorb
aas
mov
or
jnp
xchg
push
xor
lods
iret
ds
fisubl
addr16
std
jnp
aam
fadds
jle
cmp
mov
cmpsl
inc
mov
nop
xlat
pusha
fisubrl
std
loope
and
mov
aad
sub
xor
mov
adc
push
aas
and
fadd
mov
lret
lret
xor
xorb
std
enter
dec
jecxz
cmp
pop
mov
sub
cmp
adc
xchg
or
mov
xchg
add
out
mov
out
sub
mov
shl
mov
negl
jno
sub
or
inc
jne
mov
mov
xor
sbb
or
js
or
lods
xor
js
lret
pusha
mov
popa
xchg
jmp
shrl
jecxz
cld
pop
das
ja
xor
xor
mov
fcomp
fwait
pop
mov
add
dec
pop
dec
clc
cs
lret
icebp
and
icebp
pop
push
jmp
ja
cmc
fwait
jno
jo
imul
leave
sbb
sbb
sahf
adcl
stc
dec
mov
and
dec
jle
jle
mul
lods
lods
dec
jl
mov
aaa
sbb
push
adc
in
xor
shl
cmp
xchg
adc
xlat
and
mov
mov
cmp
and
xor
test
and
add
mov
clc
cltd
sbb
push
jbe
cmpsl
mov
add
gs
call
std
ret
negb
inc
mov
jg
pop
out
jg
ficoml
or
add
or
push
cmpsb
xor
jl
rolb
push
daa
cld
fnstsw
mov
xchg
arpl
scas
adc
scas
shlb
push
fimull
xor
lahf
cmc
in
icebp
lcall
mov
xchg
mov
fists
lcall
lods
sub
and
xor
aaa
imul
mov
sbb
mov
lods
clc
ss
sbb
xor
into
daa
and
sahf
cmp
std
fldcw
jp
pop
sub
jmp
ljmp
aad
out
aad
or
add
cmpsl
sub
leave
into
push
fisubrs
mov
add
xorb
adc
add
mov
repz
or
dec
sub
mov
push
dec
popa
jo
je
inc
or
leave
jge
into
xchg
ljmp
sbb
adc
cmp
popf
dec
jae
jo
mov
repnz
mov
cmpsl
test
aad
inc
push
outsl
pop
mov
sbb
cmp
xor
push
xchg
mov
sub
mov
push
jne
push
jae
xorb
sub
movsb
pop
pushf
scas
jb
rclb
inc
nop
cwtl
negl
in
sbb
push
mov
or
je
dec
mov
fsubrs
push
add
call
test
mov
popf
js
add
adc
sub
cmpb
shrb
push
push
jmp
mov
call
aam
xchg
mov
xor
push
mov
cmp
frstor
sbb
dec
shl
testl
movsb
pop
sub
cld
cli
add
call
mov
dec
mov
sbb
mov
lea
adc
fidivs
fidivrl
jmp
inc
and
ja
mov
inc
ss
popf
sub
addl
push
inc
mov
and
jmp
in
jge
push
lea
jae
cmpsl
rcrl
push
xchg
cmp
jmp
push
jnp
int3
mov
xor
xchg
sub
gs
push
fimull
jno
jno
mov
rcl
lock
cmp
cmp
sbb
xor
sub
clc
loop
cmp
dec
dec
loope
rcr
lcall
out
mov
sub
imul
jl
add
enter
fsubl
pop
sahf
cmp
cmp
mov
push
cmp
pop
in
jae
cmp
imul
and
ljmp
loop
inc
ja
cli
imul
push
stc
mov
xor
lret
xor
sarb
sbb
leave
fnstsw
daa
les
shrl
loopne
in
in
sub
leave
xchg
loope
push
inc
insl
xchg
mov
divl
add
pop
fildll
fistpll
repnz
dec
xchg
dec
xchg
push
mov
pop
pop
push
imul
ds
fld
add
mov
ss
mov
jg
enter
sbb
adc
add
out
es
out
mov
movsb
das
mov
jae
sbb
int
inc
adc
pop
xchg
xlat
xchg
adc
hlt
call
loope
in
pop
std
and
pop
lock
push
push
fisubrs
xor
xor
addr16
mov
mov
add
fnstsw
rorb
pop
dec
or
jecxz
push
inc
push
fstl
stc
xor
or
fidivs
cmp
leave
mov
int3
cmpsb
adc
inc
inc
xchg
ds
out
stos
mov
jbe
into
lock
in
jg
push
mov
push
mov
repz
jp
cmpsb
insb
cmc
pop
inc
and
xlat
inc
mov
push
xor
inc
stos
pop
pop
fistpll
stc
nop
nop
rcrl
cmp
inc
fldt
fadds
imul
mov
vmovshdup
sahf
orl
sub
in
test
ja
pop
jb
mov
in
pop
call
shlb
mov
daa
aam
cmp
xor
out
xor
icebp
or
mov
ret
scas
das
arpl
or
adc
mov
xor
adcl
arpl
mov
sub
dec
dec
pmaxub
pop
testl
cld
test
scas
or
js
stos
dec
jge
std
add
sub
fcmove
ds
scas
jo
adc
adc
lahf
lea
jecxz
adc
scas
push
jp
inc
add
in
add
cmc
add
outsb
scas
lea
test
inc
outsb
adcl
add
jne
loop
lahf
out
enter
push
cwtl
inc
pop
cli
pop
rcrb
enter
movsl
je
fmull
add
mov
push
mov
test
jbe
test
sub
imul
repz
sti
mov
mov
or
das
dec
divl
and
sub
pop
fstpl
popf
xchg
pusha
inc
mov
filds
stos
mov
popa
jbe
insb
jg
jb
push
push
adc
pop
inc
.byte
