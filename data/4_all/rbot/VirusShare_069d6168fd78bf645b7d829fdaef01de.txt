fcomp
add
ror
add
imul
add
mov
jge
jnp
xor
addr16
sub
leave
dec
fdivrl
dec
out
aas
shl
icebp
pop
stos
mov
pop
in
popf
pop
adc
rcl
push
movsb
fwait
adc
out
mov
xchg
mov
icebp
jb,pn
fbstp
push
pusha
xchg
movsb
sub
test
xchg
and
xchg
sub
push
mov
adcb
jo
add
xlat
xor
and
mov
and
pop
mov
inc
sbb
pop
insl
std
ret
ja
jecxz
mov
xchg
push
jge
mov
ja
rol
and
adc
je
lds
ljmp
inc
fcoml
mov
ljmp
test
fildll
dec
stc
adc
xchg
xchg
add
jp
inc
xchg
inc
adc
inc
in
or
mov
or
mov
push
insb
inc
pop
or
shrl
hlt
ljmp
adcl
pushf
jg
pop
adc
inc
or
js
inc
push
sbb
pushl
negb
jae
test
out
adc
outsl
adc
inc
jne
cs
inc
mov
pop
lock
in
mov
daa
jbe
fcompl
pushf
cmp
fldcw
pop
arpl
mov
push
pusha
jmp
and
addl
stos
add
inc
fs
in
sbb
sbb
mov
fisubrl
cmp
dec
jmp
push
outsl
pop
pop
jbe
mov
and
jb
add
mov
xlat
sub
xorb
xor
jo
incb
dec
xchg
out
in
das
jecxz
pop
and
hlt
cmpsb
jbe
pop
loopne
mov
pop
xor
adc
cmpsb
adc
fisubrs
add
in
and
inc
mov
cwtl
push
sub
jne
fwait
imul
inc
test
xor
adcl
cltd
or
xor
data16
jmp
ret
enter
pop
rcrl
push
fcmovnbe
sbb
ja
cmp
out
call
lods
sub
sub
call
in
pop
dec
jo
mov
shrb
mov
pop
loopne
enter
xor
inc
or
push
loopne
movsb
pop
cwtl
ss
xchg
loop
cmp
sub
lcall
fildl
jmp
mov
mov
mov
dec
jge
mov
addr16
cmc
aad
inc
cs
inc
sbb
mov
std
cmp
or
sti
mov
ret
ljmp
jo
sbb
fimull
ss
jmp
jns
icebp
lods
mov
pop
inc
pushf
pop
push
in
xchg
push
pop
out
add
sub
addr16
inc
mov
cltd
iret
jecxz
add
sahf
bound
sub
ja
mov
cld
sbb
xor
enter
lds
call
mov
inc
mov
mov
in
fiadds
pop
cmp
dec
or
adc
imul
dec
jnp
stos
rorl
data16
fdivs
movsl
enter
ret
cmp
mov
jle
mov
pop
fs
inc
popa
js
orl
mov
dec
notl
mov
lods
jl
mov
out
xor
shlb
dec
adc
push
pop
push
mov
lret
or
in
out
in
cltd
imul
jmp
divb
loope
jbe
lret
punpckldq
sbb
xchg
pop
cmp
outsl
or
adc
and
and
sbb
jmp
inc
insl
mov
dec
test
jle
popa
mov
mov
popa
xor
lret
shrl
scas
xchg
pop
push
sbb
test
lods
cmp
adc
pushf
mov
shrl
std
pop
mov
enter
repz
mov
pop
test
arpl
and
jb
jb
jmp
lahf
mov
and
cmp
adc
push
cmpsb
sub
add
jnp
rol
cmc
ja
std
jmp
mov
pop
sbb
jbe
sahf
inc
jecxz
mov
fldcw
jg
sbbb
in
call
mov
testb
xor
stos
call
xchg
adc
into
push
js
fs
adc
sbb
daa
add
dec
and
mov
mov
pop
pop
inc
adc
loopne
inc
or
in
in
fldl2t
fisubl
xchg
and
lcall
pop
jae
shlb
push
mov
and
out
aad
dec
dec
jecxz
mov
std
cmp
sub
jle
call
mov
jns
test
cmpsb
xchg
jne
mov
adc
xor
stos
movsl
insl
sbb
outsl
cmp
fldenv
push
jmp
dec
jmp
xor
xorl
sub
push
std
int
loop
mov
sbb
int
test
sbb
dec
pop
cmp
pop
sub
jge
nop
bound
hlt
jbe
sbb
mov
fwait
add
mov
cltd
call
push
outsl
jns
or
xchg
in
test
sbb
mov
sub
add
cmc
daa
je
lcall
push
mov
sbb
aam
cmpsl
mov
mov
add
mov
repz
mov
cmpsb
fwait
pop
pop
inc
test
pop
xchg
cmp
xchg
call
jp
mov
sbb
fs
stc
subl
jl
repz
lea
xchg
pop
cmp
cmp
jo
dec
fisubrs
push
sbb
jle
jg
push
repnz
xorb
pop
loope
mov
fs
jmp
mov
mov
enter
mov
xchg
imul
jle
cmpsl
jecxz
push
or
aas
dec
lea
and
ja
scas
add
xchg
shlb
push
lods
cs
loop
inc
xchg
and
and
cmpsb
scas
rorl
sub
lds
mov
push
dec
testl
std
sbb
lahf
jmp
sbbb
aaa
mov
jecxz
div
mov
push
cmc
inc
fistps
in
xchg
pushaw
mov
push
fsub
sbb
clc
cld
test
outsl
test
loope
add
mov
mov
leave
lahf
test
flds
cwtl
mov
mov
mov
add
or
aad
clc
insl
cld
enter
jle,pt
ds
jp
or
dec
jo
cmc
jne
dec
push
lods
scas
sarl
add
sbb
adc
cwtl
pop
insl
cmpsl
lcall
repnz
popa
jns
mov
jne
test
inc
subb
add
push
aas
loopne
movsl
sub
or
jae
in
sbb
xchg
adc
push
stos
lret
rolb
testb
cmp
pop
pop
jae
mov
sbb
and
sbb
repz
in
mov
dec
mov
xor
test
xor
fisubl
mov
inc
int3
sub
pop
mov
mov
notb
xor
push
out
test
mov
bound
inc
inc
dec
in
sub
ds
test
mov
push
add
mov
xlat
adc
mov
add
xor
daa
hlt
cmp
xlat
and
test
pop
and
dec
mov
sbb
mov
cmp
pop
inc
out
pop
adc
ja
pop
fimull
test
xchg
ja
cmpsb
inc
xor
bound
mov
pop
add
nop
add
mov
movl
popf
jmp
insb
dec
fdivrs
lds
inc
mov
sub
and
adc
push
fildl
pushf
mov
dec
mov
inc
fsubr
push
cmp
es
outsl
push
inc
sub
movsb
adc
inc
je
loopne
in
push
inc
shrl
pop
sbb
shl
and
mov
inc
cli
and
out
fwait
scas
mov
jns,pt
push
dec
add
mov
gs
test
dec
cld
popf
sbb
outsl
mov
dec
push
mov
xchg
mov
xor
xchg
mov
data16
aas
arpl
and
mov
xchg
mov
adc
add
jns
lcall
add
fildll
xchg
aaa
fldenv
sahf
push
outsb
jmp
push
in
out
or
inc
int3
outsl
jbe
outsl
dec
out
pop
adc
mov
pop
cmp
or
add
add
push
xchg
xrelease
fwait
jg
loop
jns
addr16
inc
inc
call
lahf
ja
cltd
stc
int
jne
jle
dec
xor
rep
fs
push
jg
mov
out
pop
pop
inc
and
pop
pop
push
or
mov
shll
sbb
mov
mov
fdivs
mov
fs
imul
fnstcw
lods
fiadds
mov
into
stc
jo
cmp
cli
pop
es
imul
pop
push
push
test
push
scas
sarl
push
std
adc
sub
iret
cmpl
inc
pop
lock
stos
test
and
stos
mov
mov
push
ret
int
int
push
sub
mov
imul
xchg
pusha
fiaddl
pop
in
jp
bound
pandn
movsl
mov
cld
mov
rol
aas
jo
add
lret
call
pop
enter
imul
sti
mov
dec
sbb
cmpsb
data16
cld
mov
sbb
jecxz
sbb
push
mov
add
and
dec
std
mov
cmp
mov
test
add
dec
pop
push
cmp
rolb
adc
clc
cmpl
jne
ja
mov
stc
inc
mov
lock
dec
scas
sub
mov
subb
es
mov
mov
das
popf
mov
bound
daa
mov
fnsave
xor
js
mov
inc
fnsave
pop
inc
mov
insl
shr
or
xor
and
push
add
scas
bound
push
ljmp
mov
sub
es
jecxz
xor
push
in
push
jle
outsl
pop
fstp
lock
mov
loope
cmp
xchg
daa
dec
cltd
sarl
sbb
add
push
jno
std
int3
adc
sbb
je
and
mov
lea
fidivs
add
ret
leave
int3
sub
mov
sub
mov
in
or
dec
popf
pusha
sbb
cmp
jb
shrl
inc
lret
insl
arpl
scas
mov
std
fsubrs
push
fidivrl
cmc
sub
lods
cmpsl
cld
mov
ljmp
adc
int
add
add
outsl
pop
mov
arpl
sub
sub
cmpb
or
aas
in
xlat
xlat
adc
sbb
inc
xchg
insb
push
in
jle
inc
lcall
test
add
ret
push
mov
data16
xor
repnz
jb
gs
call
jo
and
xchg
adc
movsl
jno
add
mov
loop
aam
fcomi
std
mov
aad
in
testl
ret
std
fistpll
pusha
rcl
jb
rcr
pushf
sbb
clc
mov
popa
lret
fsubrl
push
insb
xor
jbe
push
mov
lock
lds
pop
bnd
mov
and
jl
and
push
es
test
dec
push
adc
mov
mov
imul
push
push
add
cmc
pop
std
in
in
imull
add
dec
xchg
idiv
or
loope
cmp
hlt
push
jecxz
jo
adc
das
subb
aaa
fidivl
pushf
jno
bound
sub
jge
push
jg
out
xor
cmp
mov
mov
aaa
sahf
inc
jae
in
jecxz
popf
sahf
cwtl
aad
or
les
cmp
int
adc
data16
sbb
cmpsb
xor
adcb
push
mov
inc
mov
cmp
sarb
mov
movsl
jmp
movsl
scas
pause
and
or
aad
add
sbb
in
cs
jb
xor
mov
push
jns
xchg
jno
dec
movsb
outsb
dec
dec
sbb
addl
pop
in
jecxz
div
fs
outsl
aad
mov
xchg
dec
push
pop
sbb
sti
hlt
xor
dec
inc
sarb
pop
pop
jnp
xor
or
pmuludq
in
xlat
dec
add
mov
call
ret
repnz
add
or
pop
into
pop
mov
leave
dec
ret
pusha
adc
or
lock
pop
and
ds
scas
cltd
in
or
push
mov
in
fwait
cmc
das
popf
sub
mov
mov
or
lods
hlt
mov
and
and
jns
es
mov
loopne
movsl
repz
xlat
jno
fistpl
lock
loopne
mov
and
or
jmp
or
dec
jae
or
jmp
mov
test
xor
push
sub
lds
outsb
repz
cmp
aad
sub
sbb
or
loope
adc
jl
in
mov
roll
jnp
pop
mov
sub
dec
or
dec
cmpsb
add
decb
cmpsb
cmp
mov
cmp
cwtl
pop
rcr
enter
movhlps
fdivrs
aad
shll
stos
and
or
mov
ret
cs
cmp
push
xor
or
loope
lods
xor
jl
fmulp
mov
ficomps
scas
sar
jle
sbb
fistps
push
in
adc
pop
rclb
movsl
xor
test
or
hlt
arpl
pop
and
call
shl
shll
shll
cmpsl
imul
fists
aad
lea
pop
leave
sub
lcall
jno
js
mov
shll
xchg
mov
daa
adc
cmp
or
adcb
jp
xchg
jb
cli
cltd
jecxz
les
ret
cmc
das
inc
adc
call
lods
into
dec
adc
dec
aad
push
lret
icebp
imul
fs
nop
or
inc
sbb
cmp
xor
add
push
cmpb
mov
shl
push
add
loopne
push
ja
mov
pop
std
stc
add
mov
idiv
je
subl
les
sbb
cmp
sub
mov
push
lock
imul
adc
sbb
pop
inc
mov
inc
xor
aam
mov
mov
pop
lret
std
xchg
fldcw
and
dec
add
push
dec
fnsave
fnstsw
add
outsb
jne
add
jne
dec
rclb
outsl
ficoml
imulb
and
sbb
jb
xor
fimull
ret
add
in
int
je
leave
push
out
es
test
popa
scas
sti
scas
jno
add
test
push
iret
insb
mov
iret
pop
inc
inc
repz
inc
addr16
sarb
out
cwtl
aam
int
mov
add
or
push
gs
pusha
and
dec
or
bound
dec
pop
sub
fidivrs
xor
rcr
xchg
es
js
or
std
pop
fists
test
movsl
jne
xlat
test
xchg
loopne
and
dec
aas
adc
and
cltd
pop
rolb
or
shrl
push
int
mov
int3
sub
sti
sub
xchg
adc
sub
lret
bound
loope
mov
inc
lahf
leave
and
imul
jl
pop
add
and
jb
test
mov
enter
lea
mov
lds
loope
das
xchg
adc
pop
gs
push
adc
jg
inc
cvtps2pi
and
pop
fdivrl
dec
int3
cmp
dec
arpl
mov
xlat
mov
enter
push
or
xor
dec
mov
and
mov
je
fldt
sub
inc
mov
sub
mov
xor
roll
test
icebp
mov
std
sub
in
jns
in
mov
push
shlb
and
cmp
in
out
push
add
fistps
gs
out
inc
dec
stos
es
dec
lea
push
adc
movsb
pusha
icebp
mov
xchg
push
and
mov
mov
std
xor
addb
push
sub
push
testb
cmp
xor
push
mov
mov
pushf
dec
nop
jg
xchg
xchg
mov
xchg
mov
into
je
push
popf
sbb
les
add
pushf
hlt
adc
dec
or
push
jae
sbb
out
or
repnz
mov
int3
xor
adc
add
pop
mov
sbb
mov
inc
push
jmp
addl
inc
pop
xor
loope
loopne
inc
repnz
popa
daa
dec
lods
mov
test
pop
jns
cmc
lock
lret
aas
fsub
pop
cmpsb
subl
arpl
adc
or
mov
lret
test
loop
cmp
jmp
mov
jo
lret
jge
inc
pop
repnz
in
repnz
adc
push
jg
shl
xchg
std
cli
pushf
jne
idivb
jl
pusha
pop
jne
vpsraw
xor
lods
mov
push
jecxz
ret
leave
out
xchg
or
push
scas
dec
aaa
inc
in
movsb
sub
ljmp
adc
fbstp
dec
mov
enter
cwtl
pop
loope
mov
lret
and
repz
dec
xchg
mov
pusha
cmp
movsb
cmp
test
push
cmp
das
push
inc
ds
filds
les
popa
fdivrs
orl
mov
inc
pop
popf
dec
pop
sub
jns
outsb
add
dec
push
xchg
push
dec
jle
fsubr
xlat
jne
inc
call
push
fmul
scas
sbb
out
lret
ret
pop
sub
mov
push
jnp
and
fucomi
ficompl
push
pushf
xlat
jmp
adc
push
subb
call
and
push
cmp
ret
cmc
mov
dec
js
push
daa
push
popf
sub
sbb
adc
dec
mov
jb
mov
and
mov
pop
mov
sub
xchg
inc
mov
je
xchg
sub
fwait
mov
push
push
xchg
cmp
push
fs
int3
sbb
fadds
jge
ja
jge
out
cltd
jecxz
xor
cwtl
sub
out
gs
push
inc
mov
outsb
add
or
pop
adc
mov
cmc
mov
aam
jb
clc
pop
sbbl
sub
adc
pop
cltd
jge,pn
or
mov
pop
push
xor
sbb
sbb
shll
fnstenv
push
and
pop
and
cmpsl
jge
jnp
jl
or
jae
mov
dec
popa
jb
fwait
scas
jl
jge
mov
sub
in
test
mov
xor
push
or
lods
sti
mov
movsb
sti
adc
mov
or
shl
xor
push
xor
bound
jnp
pop
adc
or
push
mov
cli
std
fsubrl
adc
lcall
lret
outsl
jg
in
jo
xor
mov
popa
add
dec
jno
fcmovbe
cmp
mov
mov
in
insb
mov
fwait
loopne
repnz
pop
cmp
fcmovbe
dec
aad
push
test
inc
jecxz
xor
scas
sub
and
adc
cmpb
cmc
stos
cmp
mov
pusha
stc
out
ret
adc
xchg
pop
add
push
dec
pop
neg
sti
in
repz
and
and
mov
lds
pushl
sub
push
jns
cmp
pop
add
jns
push
ret
mov
sbb
adc
arpl
pop
add
fidivl
fldl
test
insb
dec
and
jb
mov
mov
sub
ret
ret
sarl
pushf
jno
loop
dec
add
ss
mov
cmp
idivb
sub
push
push
ffree
subl
fs
and
push
jecxz
ljmp
sbb
mov
pop
push
mov
out
test
out
not
cmp
mov
mov
popa
sar
cmp
sbbl
jp
adc
cmp
loopne
repnz
shrb
int
mov
push
and
add
push
rorb
std
popa
faddl
es
mov
sarl
push
les
xchg
cmp
xor
fldenv
pop
pop
jo
ss
and
fstpt
inc
in
pusha
stc
sbb
into
mov
sbb
lods
sbb
fisttps
add
push
xchg
xlat
lmsw
addl
mov
int
dec
sbb
lahf
and
lahf
xchg
fldcw
sbb
bound
rorl
adc
mov
and
inc
jl
lods
add
jno
fwait
cmp
into
mov
fidivrl
and
leave
adc
jg
adc
addl
clc
adc
outsb
xchg
jae
iret
sub
add
mov
call
mov
fs
adc
xchg
jne
enter
and
fcomps
xchg
loop
fnsave
inc
xchg
stos
inc
or
and
shll
pop
cmpsl
adc
pop
testb
jno
and
push
outsl
fistpl
mov
push
xor
mov
aas
pop
push
loope
xchg
ret
xor
stos
mov
mov
into
jmp
cmp
cmc
inc
pop
jg
push
mov
and
test
repz
or
nop
pop
inc
and
sbb
xor
mov
adc
outsb
mov
cmc
mov
add
mov
rolb
mov
xchg
scas
jne
pop
fldenv
stc
jo
fldt
ret
inc
sbb
mov
sbb
daa
jo
or
arpl
in
cmp
jecxz
push
pop
je
lods
les
fs
add
xchg
lret
ja
push
cmpsb
jbe
push
and
push
adc
jno
in
jne
adc
adc
ret
mov
arpl
mov
mov
sub
adc
adc
int3
lret
rclb
lods
sbb
roll
mov
cwtl
xor
pop
lret
xor
push
cwtl
pop
insl
add
rcr
pop
xor
in
push
out
int
sarl
adc
mov
lds
dec
cwtl
sbb
popa
shlb
push
push
cmp
loope
mov
cmp
or
in
cmp
mov
pop
pop
cwtl
pop
js
loop
subb
popf
pop
sub
leave
popf
mov
outsl
jae
arpl
add
push
mov
bound
push
mov
xchg
faddl
int3
adc
mov
test
mov
mov
inc
cwtl
ret
sbb
fwait
shr
adc
mov
out
das
pop
js
mov
push
xchg
idivb
sub
mov
inc
and
fisubrl
dec
push
bnd
lock
sti
fiadds
xchg
ja
jmp
pop
mov
push
jbe
sub
adc
or
push
insb
add
ljmp
test
fdivrl
add
or
int
pop
inc
test
pop
neg
jne
xor
movsb
push
and
rol
adc
pop
or
movsb
and
notb
mov
pop
push
aaa
fdivrs
data16
js
adc
int3
dec
inc
ficoms
sbb
sbb
scas
and
jmp
aaa
stos
cwtl
mov
lods
cmpsb
cmp
adc
fdiv
rcll
lcall
outsb
test
cmp
cs
aam
and
and
adc
testb
cli
lret
stos
stos
js
cmc
out
cld
xorl
pop
add
sbb
shll
das
lds
or
push
aad
jbe
imulb
mov
jns
shl
hlt
adc
and
pop
fsubl
fmuls
lock
sbb
sub
sbb
mov
xchg
test
dec
pop
jle
sub
push
stc
add
out
jne
mov
test
out
pop
aaa
lret
popa
and
or
js
negl
outsl
fdivr
sub
adc
out
gs
adc
jne
or
cmpsb
es
cmpsl
pop
mov
sti
int
or
imul
data16
sub
bound
inc
mov
push
xchg
cmp
jmp
dec
testl
push
cmp
inc
aam
ljmp
mov
pusha
push
rcrl
xlat
inc
pop
mov
mov
inc
loop
mov
in
mov
out
mov
xorb
ret
rcr
cmp
movb
inc
jno
arpl
rorl
negb
or
negl
or
lods
out
cltd
lds
in
out
inc
xchg
xchg
pop
ret
je
test
mov
and
fsubs
sub
dec
xor
outsb
jmp
jo
inc
int
mov
jnp
scas
mov
int
jb
mov
dec
aad
push
inc
fisubrs
shll
sahf
rcl
xchg
sub
jecxz
jbe
add
call
mov
scas
dec
bound
aas
sub
lcall
sti
cmpsl
les
mov
fidivl
inc
or
cwtl
cmp
xchg
mov
push
xor
movsl
std
lds
out
inc
leave
sarb
dec
lods
addr16
hlt
push
outsb
out
add
sub
scas
test
and
mov
nop
fsubrp
ja
mov
pop
push
out
shlb
xchg
jno
icebp
ret
je
nop
fidivs
sbb
jge
repnz
lds
or
push
cmpsl
je
xchg
lcall
fnstenv
cmp
popa
lret
jl
mov
dec
movsl
idivb
rorl
mov
push
inc
adc
arpl
lcall
mov
sbb
cwtl
sbbb
pop
inc
dec
dec
mov
dec
cmc
fstps
bound
cmpsl
shlb
mov
mov
or
dec
push
lcall
lock
cmp
inc
cmp
pop
js
outsl
inc
pop
mov
mov
jge
loop
sti
outsb
xlat
popf
xchg
adc
dec
jns
pop
lret
addb
sub
push
in
out
mov
call
iret
inc
push
mov
clc
pop
in
mov
xlat
sarl
clc
jmp
ret
sbb
mov
mov
lret
vpaddsb
inc
xor
push
push
mov
scas
nop
jecxz
adc
iret
push
loopne
add
filds
xor
lret
pop
mov
sub
mov
adc
pop
jecxz
cwtl
addl
dec
mov
sti
mov
movsb
or
pop
fs
call
test
sbb
out
mov
push
lret
rol
lcall
int3
addb
jg
negl
pop
scas
inc
repnz
andl
cmpsb
rcr
pop
test
lret
out
mov
mov
sbbl
mov
imul
or
xor
push
pusha
and
fwait
test
cmp
mov
push
ret
mov
sbb
inc
mov
mov
inc
call
int3
sub
mov
push
and
mov
mov
out
inc
or
xor
cmp
lods
and
in
test
lds
xor
add
push
shrl
insl
daa
or
cmp
xor
fwait
imul
in
xor
lret
test
mov
mov
frstor
push
test
bound
pop
or
clc
xor
stos
aas
xchg
xchg
jmp
add
daa
jo
test
jl
ffreep
ret
aaa
adc
dec
repnz
jmp
and
xchg
test
push
mov
aaa
adc
inc
fwait
hlt
inc
cli
mov
out
cmpsl
fsubl
in
push
loope
jae
and
scas
orb
cwtl
sbb
ljmp
cli
pop
add
mov
outsb
bnd
mov
pop
pop
repnz
mov
sti
push
pop
push
add
mov
mov
adc
inc
fwait
test
pushf
cltd
inc
pop
dec
or
bts
rcl
push
xlat
mov
testw
lock
mov
dec
popf
xchg
jp
pop
xchg
sbb
and
cwtl
inc
cld
lods
push
dec
add
mov
insl
adc
add
stos
fnsave
mov
das
insb
inc
repnz
mov
clc
jle
pop
cmpsb
lds
addr16
dec
cmpsb
pop
daa
push
loope
inc
sub
test
out
movsl
mov
mov
fimull
dec
inc
insb
cmpsb
xorb
ds
in
add
push
adc
dec
ret
mov
pop
pop
out
sbbb
shlb
imul
insb
aad
aam
ud0
cmpsb
xchg
mov
vrsqrtss
nop
cmp
icebp
inc
adc
xchg
in
rclb
ljmp
or
sbb
push
pop
cmp
mov
jge
sbb
outsl
out
outsb
xlat
push
mov
cmp
sub
stos
jb
sub
sbb
sbb
mov
mov
lahf
or
push
shl
sub
mov
add
cmp
in
addr16
shll
iret
jb
push
jbe
cmp
xchg
dec
ss
cwtl
mov
out
cli
cmp
pop
sbb
mov
pop
movsl
push
fildl
push
scas
sub
popl
push
popf
jle
in
inc
ds
xchg
cmp
into
scas
mov
push
sbb
xchg
add
mov
pop
sarl
sbbb
jb
fcoml
ljmp
sub
cmp
adc
and
test
adc
jns
shrb
lea
cld
cwtl
clc
push
loopne
enter
pop
adc
hlt
rcrb
or
sahf
dec
mov
ret
adc
outsb
jnp
mov
mov
fwait
or
or
xor
fs
cli
cmp
mov
mov
xchg
inc
jmp
jge
jne
cmp
add
stos
sub
xchg
cmp
and
or
sbb
mov
hlt
out
xchg
mov
inc
daa
mov
xchg
fs
sub
mov
sbb
mov
adc
xchg
push
loop
dec
push
or
aam
sbb
push
jne
mov
xchg
cmp
push
jmp
lods
or
jno
mov
into
sub
sub
imul
fcoml
popf
mov
inc
in
hlt
lret
repnz
xor
add
ret
mov
fadds
sub
cmp
pop
out
ror
test
dec
mul
mov
gs
movsl
xchg
jg
mov
ret
mov
test
sub
push
cs
cs
push
fs
pop
hlt
or
push
cmpl
pop
sub
xchg
xchg
pop
and
andb
xchg
mov
ss
lret
fildl
push
fstl
adc
les
lret
pop
in
int3
nop
jle
mov
mov
pop
jns
repz
andb
jbe
dec
mov
push
scas
fsts
add
xchg
add
lcall
inc
es
pop
outsl
pop
es
fldl
inc
adc
xchg
test
jb,pt
je
jl
ret
arpl
mov
jmp
xchg
test
push
cmp
mov
xorl
out
aaa
iret
jecxz
or
or
lret
ret
mov
xchg
insb
dec
cs
inc
adc
push
cld
mov
sub
in
xor
and
fsubrs
mov
ja
inc
xchg
cwtl
test
mov
xorb
mov
shrl
xor
mov
inc
mov
jmp
sti
xchg
fcmovne
insl
mov
addr16
gs
rcrb
ret
xor
mov
mov
add
in
jp
cmpsl
aad
cmpsb
mov
lret
dec
xorl
sbbl
xor
test
cld
xchg
lods
cmp
mov
adc
leave
or
jo
ja
test
fs
jb
lret
lret
loop
mov
js
test
mov
ja
add
movsl
scas
loop
xchg
decb
rcrl
dec
sub
mov
pop
cltd
and
call
ret
addr16
lock
fwait
cld
jno
lret
repnz
dec
sbb
addl
sub
add
push
xchg
stos
sbb
sbb
fisubl
insl
mov
lret
cmpsb
lock
pop
jg
outsb
fdivrs
mov
push
push
lahf
mov
clc
push
dec
xor
into
or
data16
pop
adc
test
inc
data16
adc
and
popf
or
mov
jo
roll
sbb
jg
insl
adc
xor
pop
adc
repnz
enter
xor
rol
xor
push
out
or
inc
test
push
cmpsb
jns
xor
mov
fsubrl
jnp
pusha
idiv
adc
imul
sbb
rcrb
jge
pop
cmpsb
stos
xor
sub
cmp
mov
sarl
test
rcr
mov
aam
out
dec
mov
cmp
inc
sbb
fwait
leave
jo
pop
jo
sub
sub
loopne
sbb
scas
movsb
mov
loope
jge
call
push
jl
mov
nop
pusha
pop
cmp
das
mov
mov
stc
pushf
shll
arpl
int3
aas
pop
xchg
lret
je
into
call
das
pop
jb
and
aam
jae
and
xchg
mov
aaa
sub
mov
cmp
or
mov
adc
stc
lahf
dec
fiaddl
pop
inc
or
daa
gs
sbb
je
repz
movsl
fs
ficoml
loop
lods
lea
lcall
lods
das
add
adc
out
aas
cs
rcrl
dec
pop
add
add
fnstcw
xchg
aas
stc
xor
iret
mov
lock
sahf
or
push
xchg
or
and
out
addr16
adc
push
movsb
out
dec
push
lea
aaa
das
mov
mov
mov
add
xchg
and
aam
insb
cmpsl
or
fsubrl
jle
xor
negl
pop
aas
pop
adc
out
push
sbb
jg
outsb
cmc
xchg
mov
jmp
xor
jne
movsb
xchg
stos
push
jo
scas
push
jo
lret
sub
mov
imul
add
sbb
mov
scas
mov
xchg
fmuls
or
mov
jne
inc
push
inc
xchg
and
lcall
dec
xor
cmp
aam
outsl
pop
inc
sub
dec
out
mov
and
mov
outsb
pop
pop
inc
xchg
xorb
int3
cwtl
adc
cli
leave
enter
pusha
divl
loopne
adc
and
pop
mov
lea
xchg
lods
lods
jge
mov
out
fnstsw
aam
jne
fiadds
shrl
ja
inc
es
sub
adcb
imul
call
lret
mov
das
int3
dec
mov
ret
in
add
stc
cmpsl
hlt
mov
sub
mov
mov
stc
push
orl
sbb
pop
mov
lcall
sbb
jo
je
mov
test
cmp
sub
cmp
or
shrl
in
adc
int3
cltd
test
jne
xchg
test
js
xchg
sbb
cltd
out
mov
ret
inc
scas
sahf
jbe
sbb
negb
out
jg
adc
roll
push
lds
in
leave
and
gs
insb
sbbl
add
outsb
data16
pop
in
jbe
pop
sahf
faddp
mov
push
pop
addr16
in
or
sbb
cmp
dec
into
pop
add
or
mov
xchg
and
je
or
cmp
inc
pop
pusha
cwtl
mov
add
ja
icebp
cmp
inc
xor
aam
adc
xor
xor
mov
js
xlat
push
gs
shl
adc
adc
nop
xchg
cmpsl
adc
ss
cmp
sbb
and
out
or
insb
xlat
cmp
adc
lods
xchg
xchg
pop
aad
test
mov
jbe
sbb
arpl
pop
fld
leave
push
cmp
lea
push
jnp
mov
gs
ds
aad
sub
add
jl
addl
mov
movsb
je
nop
jge
imulb
int
repnz
enterw
mov
das
pop
push
aaa
adc
mov
out
into
pusha
addb
and
add
daa
das
popf
adc
xor
pop
pusha
sbb
cmpsl
push
iret
xor
filds
aam
and
dec
cmp
push
jnp
lret
test
movsb
pop
mov
inc
pop
icebp
inc
cltd
xor
mov
jo
or
enter
and
pop
xor
jns
jecxz
push
mov
mov
mov
xor
pop
jb
cmpb
mov
dec
sbb
jne
loopne
int
sbb
enter
fsin
xchg
rcl
ljmp
mov
out
xlat
cld
pop
jge
cmp
ljmp
shl
sahf
xchg
popa
stc
and
and
push
mov
scas
fdivp
pop
jmp
mov
jo
dec
mov
sbb
decl
movsb
pop
fsubr
add
aad
leave
xchg
xor
mov
jnp
mov
fwait
or
push
lahf
mov
shrl
jnp
popa
icebp
rol
pusha
jle
xchg
xlat
cwtl
xor
sub
andb
mov
cmp
jmp
pop
loopne
mov
shll
and
outsl
rorb
mov
dec
bound
in
adc
fs
mov
push
cmp
xchg
sbb
xchg
mov
and
pop
cmp
jle
cmp
inc
jmp
imul
stos
rol
cld
sub
fninit
dec
cld
int3
jl
dec
idivl
sahf
in
dec
aad
test
imul
push
dec
jmp
popf
lock
cli
inc
ja
pop
push
jmp
fcoms
mov
insl
dec
or
cmpsb
or
add
rcrl
dec
rcrb
dec
movsl
jl
lret
call
dec
mov
or
ror
mov
push
int3
mov
inc
imulb
sub
push
add
cmp
cltd
xor
int3
das
and
mov
inc
addb
push
sub
and
and
inc
jae
fwait
jbe
aam
hlt
xchg
test
scas
in
sbbb
repnz
adcl
fidivl
mov
lock
sub
mov
adc
lcall
cmpsb
loopne
mov
ds
sbb
inc
mov
stc
ffreep
mov
cmp
mov
repnz
pop
xorb
push
out
lahf
pop
add
testb
lret
add
mov
pop
aaa
out
sbb
cmp
lods
mov
iret
mov
sub
sahf
add
sub
jp
gs
jns
jg
inc
shrb
mov
frndint
cmpsb
cmp
aaa
roll
data16
daa
sub
int3
jo
dec
jnp
js
popf
int
cmp
add
mov
xor
sahf
and
mov
and
outsl
jno
ret
or
into
out
sbb
lret
inc
adc
or
loope
sbb
sub
mov
adc
cmp
mov
jbe
hlt
jo
sbb
push
dec
xchg
hlt
pop
in
add
iret
mov
cmp
bound
push
add
dec
repz
mov
sbb
pop
fstpt
mov
mov
pop
aam
push
xchg
movsl
sub
mov
sub
pop
mov
jne
xchg
mov
cmp
pop
cmp
mov
sub
add
sbb
sub
sbb
adc
dec
mov
adc
in
cmp
subb
cmp
icebp
pop
in
push
mov
mov
movb
aaa
xor
mov
out
ret
pop
shll
inc
push
and
jle
dec
add
mul
lret
loope
jbe
icebp
in
fwait
in
ljmp
pop
adc
mov
loope
pop
sti
insb
pop
cwtl
aam
in
or
dec
sbb
dec
jne
mov
in
cld
push
daa
cmpsl
and
arpl
pop
and
in
push
push
mov
insw
jecxz
push
mov
pusha
rorl
dec
or
jl
add
in
loop
nopl
in
adc
daa
es
enter
xlat
or
sub
add
pop
lcall
push
movsb
mov
mov
push
adc
jp
mov
push
into
add
cmp
add
les
incb
jl
push
adc
inc
int
xor
fsubrs
xchg
out
test
inc
insb
cmpsl
lret
pushf
cs
iret
or
push
pop
fidivl
psubd
icebp
andb
adc
mov
mov
dec
xchg
mov
jl
jae
mov
push
cwtl
rclb
inc
lods
shl
xor
dec
mov
notl
cld
repnz
push
leave
and
cli
push
sbb
scas
cli
lock
ret
pop
stos
push
xchg
jbe
jp
mov
add
dec
sbb
pop
test
rol
std
mov
xlat
cmpsl
xchg
rorl
and
and
jb
or
dec
jb
mov
xchg
movsl
or
push
mov
std
xor
cltd
fisubl
dec
xor
rolb
mov
xlat
std
pop
repz
outsb
sub
dec
aad
iret
rcll
push
out
push
pop
and
fnsave
subl
mov
outsl
sub
inc
aaa
jb
pusha
test
xchg
or
dec
adc
xchg
push
mov
sub
fyl2x
jecxz
out
ss
icebp
mov
jp
adc
aad
mov
jns
or
jns
jns
clc
dec
cld
sub
xlat
sub
inc
mov
adcb
call
mov
mov
lds
pop
push
es
sbb
nop
push
ljmp
xor
fdivrl
insl
adc
jecxz
int3
mov
xor
test
insb
mov
lea
es
enter
lcall
push
pop
xor
clc
mov
mov
fisubrl
inc
arpl
loopne
mov
xor
xchg
in
outsl
mov
inc
jb
pop
ljmp
loop
push
mov
test
cmpsb
lods
cmp
lea
inc
inc
sub
inc
cmp
dec
sarl
xor
imul
mov
je
jo
repz
insl
xor
pushf
test
jmp
fnstcw
cmp
jl
int
mov
fadds
int3
sarb
int3
inc
mov
jle
and
adc
ficoml
dec
popf
outsb
mov
pop
pop
ret
jb
rclb
ret
push
mov
fbstp
in
mov
and
mov
pop
aaa
sar
xchg
in
mov
pop
sub
out
arpl
pop
xchg
scas
ljmp
and
daa
loope
jns
mov
push
pop
dec
ss
sbb
stc
xor
sbb
xor
sub
mov
cli
jbe,pn
ret
and
mov
addr16
cwtl
pop
mov
cmp
mov
iret
fmull
adc
mov
jno
frstor
push
push
shr
adc
or
mov
pop
mov
xchg
jbe
or
mov
mov
mov
ret
pop
mov
jge
testb
roll
out
mov
jo
leave
cmpb
pop
sbb
lcall
xor
adc
sbb
loope
sahf
aad
xor
int
push
nop
adc
push
push
cli
sbb
lcall
or
mov
int3
movsl
or
ret
aam
jno
and
adc
ret
sbb
or
lahf
cmp
pop
push
and
fdivl
push
xchg
std
dec
jge
cld
mov
adc
sbb
lods
push
into
dec
mov
aas
mov
in
gs
and
and
push
adc
fnsave
cmc
mov
stc
add
ja
adc
insl
and
cs
add
mov
mov
add
cmpsl
roll
xor
or
jl
mov
stos
sbb
out
mov
mov
mov
mov
jle
and
xor
repnz
jno
inc
add
xchg
sbb
mov
clc
fadd
xorb
add
cmpsl
add
aaa
fsts
add
push
inc
inc
cwtl
lahf
addl
inc
add
insb
cli
mov
jecxz
shll
jle
out
hlt
mov
pop
mov
lret
call
mov
cmp
in
dec
subb
xor
pop
adc
pop
into
jb
int3
sarl
inc
sub
aas
mov
mov
lods
mov
sbb
cmp
xchg
or
in
iret
pop
fdivrl
aad
fldt
sti
orb
xchg
or
and
jns
or
cs
movaps
mov
idiv
sti
stc
jno
addr16
push
or
dec
mov
sub
jnp
ja
loop
scas
stos
adc
xchg
jmp
rcll
mov
mov
xor
mov
cld
pop
cmpsb
iret
ds
stc
lods
sub
xor
xor
adc
movsb
mov
cwtl
testb
jne
int3
pop
idivl
xor
aam
cs
jne
out
mov
push
mov
jbe
pop
and
loope
inc
xchg
or
int3
xchg
call
in
roll
xchg
inc
in
sti
incb
iret
jbe
sahf
test
stos
jnp
cmp
jecxz
mov
ret
push
es
ljmp
pop
mov
fldenv
popl
fstpl
sbb
addl
call
cli
xchg
xor
imulb
rol
cltd
nop
pop
out
repz
xchg
mov
pusha
xchg
popa
add
adc
dec
push
pop
lods
dec
xchg
mov
mov
andb
jp
jmp
mov
dec
out
pushl
mov
inc
loope
data16
jno
cmpsl
xor
fisubl
sti
imul
pop
int
gs
test
mov
inc
and
dec
sub
or
xchg
in
jecxz
scas
aam
xchg
cli
jns
xchg
xchg
jmp
and
xchg
into
inc
jbe
loope
jmp
ljmp
push
sub
or
addr16
jl
mov
sbb
push
ljmp
sub
push
adcb
cmp
xchg
jne
js
cld
push
repz
sbb
pop
fucomip
jmp
nop
lcall
cmpsl
out
push
pop
lds
int
pop
pop
divl
dec
sbb
int3
fwait
jnp
aas
inc
cmc
push
xor
cli
pop
pop
neg
les
les
pop
loop
push
xchg
int
adc
xadd
push
lcall
out
mov
pop
mov
dec
inc
dec
mov
jg
sub
sub
repz
fdivrl
cmp
dec
pop
mov
and
cmc
arpl
ret
std
push
push
xchg
xor
dec
mov
pop
adc
mov
enter
pop
lea
fcmovbe
lret
out
mov
imul
xchg
pop
mov
fidivl
es
jno
mov
lock
mov
addr16
or
daa
xchg
inc
mov
xor
stc
mov
test
xchg
loop
jno
xor
loop
roll
or
enter
insl
cwtl
hlt
pop
mov
sti
mov
imul
aam
xor
mov
ret
add
pushf
jns
dec
xchg
mov
testb
stos
aaa
sbb
popa
and
adc
out
test
pop
and
int
jbe
mov
call
adc
jns
scas
xchg
js
xchg
and
ret
dec
push
mov
lea
cvtdq2ps
fucomi
ret
sbb
or
dec
mov
mov
xor
call
ljmp
lcall
pop
sub
jbe
clc
sub
xchg
push
mov
jnp
inc
dec
shrl
xchg
xchg
pusha
test
sub
out
pop
sbb
sbb
mov
inc
leave
jmp
mov
mov
cmp
bound
stc
and
mov
xchg
js
push
lock
and
mov
test
xor
sbb
dec
push
movsb
ljmp
gs
inc
lret
push
xchg
jmp
mov
xchg
push
mov
lods
cmp
xchg
inc
cmp
add
lret
push
ss
shrl
ret
mov
xchg
lret
sub
repnz
shlb
push
stc
lcall
push
pop
sbb
adc
inc
xchg
cmp
dec
push
push
arpl
lcall
sub
in
mov
push
dec
mov
hlt
dec
lret
mov
addl
xchg
into
lock
negb
lahf
dec
xchg
mov
inc
inc
lock
je
jno
xchg
aaa
aas
int3
pop
insl
mov
jno
ret
mov
shlb
out
fcmovnbe
nop
jge
push
js
mov
aad
cmp
xlat
std
dec
or
jmp
cli
nop
scas
loope
cmpsb
int3
ficomps
rcrl
mov
je
cmpl
inc
jecxz
jg
shl
subl
mov
test
jmp
cltd
loop
test
xor
adc
jmp
mov
push
aas
mov
dec
jns
popf
stos
cwtl
mov
mov
mov
mov
xchg
sbb
xchg
scas
pop
mov
stos
mov
nop
int3
inc
or
leave
mov
shrb
add
inc
sub
je
ret
pop
or
sbb
mov
push
and
ljmp
outsb
mov
dec
push
and
ret
adc
adc
xchg
adc
into
data16
gs
sti
fimull
lock
fisubrl
mov
in
stc
mov
xchg
stos
inc
daa
lcall
test
std
pushf
fwait
aas
push
cmp
stos
sub
dec
popf
out
push
sub
or
stos
ljmp
fwait
das
push
or
mov
mov
fwait
rcrb
and
nop
sbb
jmp
mov
test
flds
dec
and
sbb
mov
gs
das
mov
dec
and
enter
ret
dec
mov
out
fimull
loopne
movb
push
cld
cld
jae
movlhps
pop
pop
adc
ljmp
mov
testl
mov
xor
dec
cli
cmp
push
inc
js
bound
data16
imul
add
nop
ret
pop
mov
or
xchg
or
or
arpl
scas
cs
out
sbb
mov
pop
pop
std
add
push
xor
or
mov
jmp
arpl
jne
ja
addr16
dec
xchg
cmpsb
leave
mov
insb
lods
push
enter
jno
push
fwait
xchg
mov
push
cmp
outsb
adc
add
and
cs
sub
lds
inc
jle
lock
jae
jns
adc
hlt
push
adc
push
xchg
dec
movl
hlt
mov
push
mov
jmp
push
xchg
sti
jns
mov
jg
dec
push
xchg
lahf
jnp
mov
dec
popf
test
mov
leave
in
ror
sbb
mov
aad
rcrb
pop
nop
ja
add
jns
sub
movsb
xor
cmp
push
sbb
lock
notl
test
xor
mov
repz
lods
mov
mov
mov
mov
and
out
lret
daa
xor
mov
push
sbb
in
or
data16
sbb
icebp
push
xchg
xchg
test
popa
nop
call
icebp
jo
add
dec
jge
mov
push
outsl
dec
mov
test
adc
lret
and
insl
lods
push
cli
pop
cmpsb
and
mov
xor
push
push
incb
out
mov
pop
in
cmpsl
lods
mov
xor
push
xor
jnp
dec
cmp
dec
bound
push
out
xor
hlt
xlat
sub
xchg
popf
jne
mov
das
jl
cmp
push
inc
xchg
repnz
fimuls
add
out
push
repz
or
and
or
sub
pop
sbb
outsb
ss
jg
stos
lret
in
cmp
mov
lret
inc
fidivrl
mov
sahf
lods
ds
in
aam
jg
jg
lcall
cmp
mov
pop
sub
scas
sbb
mov
movl
lods
mov
and
popf
cltd
cmp
xor
gs
xchg
mov
movl
aaa
adc
xchg
into
fmull
mov
imul
bound
cmp
xchg
imul
jne
xchg
mov
mov
or
rclb
dec
enter
das
xchg
cmp
xor
xor
movsl
stos
stos
or
dec
icebp
filds
ss
mov
sarl
mov
inc
push
cmp
sbb
pop
adc
int3
jmp
sub
mul
int
cmp
pxor
or
fcmovbe
xor
or
outsl
lahf
inc
lahf
jae
or
xor
aad
or
sbb
cwtl
sahf
fmuls
or
jmp
mov
mov
ror
adc
outsl
ficompl
and
push
or
out
mov
decl
cmp
in
into
insb
cmp
sbb
outsb
or
pop
into
push
or
pop
add
jmp
mov
inc
das
pop
pusha
fidivrl
hlt
xor
vrsqrtps
cmp
mov
lret
jge
mov
push
stc
pop
sahf
and
push
cmp
mov
es
faddp
sti
sbb
int3
das
lods
das
cs
sub
je
out
xchg
loope
mov
and
cwtl
cmp
orb
jg
xchg
sub
pop
je
xchg
lret
and
div
sub
inc
int3
or
push
cmpsl
sbb
ja
jno
cmp
inc
push
mov
das
sahf
adc
inc
fldcw
stos
call
aam
pusha
mov
fildll
pop
out
es
or
fldt
mov
in
test
ss
sub
stos
cmp
dec
call
int3
dec
jl
shrl
inc
sub
fstpl
cmp
daa
psubusw
rorl
xor
scas
cli
mov
lds
mov
loop
mov
iret
dec
mov
adc
cmpsl
sub
pop
jae
dec
sub
popf
or
jbe
outsb
xchg
jo
push
xchg
cmpsb
aad
add
sbb
jno
inc
mov
mov
add
mov
jle
rcrl
mov
mov
mov
call
jae
lea
push
enter
jl
push
dec
out
xchg
cmp
rclb
adc
fs
xlat
sub
push
jp
cld
les
fists
ja
adc
jb
dec
adc
leave
cmp
addb
int
aad
stc
mov
xchg
mov
sub
lret
arpl
or
push
add
dec
sub
lea
xor
adc
and
data16
test
repz
loope
int3
adc
sub
sub
std
dec
push
mov
repnz
cmp
iret
in
jno
inc
push
jno
mov
ljmp
or
and
movsb
or
cli
in
rclb
fldcw
test
test
mov
xor
imul
cmp
jb
cmp
inc
mov
jae
movsb
outsb
rcrl
jl
pop
ds
mov
fs
lret
das
inc
xchg
mov
dec
scas
out
xchg
lods
dec
add
push
gs
mov
or
aaa
aas
adc
or
in
push
mov
outsl
loope
jnp
pop
cwtl
nop
pop
push
out
inc
xorl
lods
pusha
cltd
je
sbb
push
xchg
in
dec
push
push
cs
and
and
cmp
stos
jg
into
cmp
imul
into
jbe
adc
jg
or
xor
push
xor
cmpsb
xor
stos
movsb
push
into
xchg
sahf
jecxz
jb
ret
movsb
push
notb
pop
xor
jns
add
sti
popf
insb
lock
int
cmp
lods
dec
pop
xlat
stos
fnstcw
test
add
mov
pushf
push
xchg
fbld
adc
repz
test
pop
shll
call
dec
ror
dec
jo
fcompl
cmp
fwait
cmp
loope
sbb
ja
or
mov
scas
ret
push
sub
push
sbb
or
gs
lods
cwtl
mov
cs
iret
xchg
jmp
inc
cmpsl
xchg
repnz
pop
inc
lods
pop
sti
ja
das
rcl
adcb
push
cld
addb
pop
mov
jo
pop
mov
scas
jg
mov
dec
pop
test
push
push
mov
or
ficoms
push
push
clc
push
mov
into
jg
push
mov
fnstcw
rorb
clc
out
loop
loope
les
and
adc
and
xor
push
jle
cmpsl
jg
inc
cmp
mov
rcr
ret
inc
lods
jno
iret
or
cmp
sub
lret
xorl
ret
bound
rcrb
insl
mov
xchg
inc
push
xor
enter
cmp
insb
push
push
imul
and
dec
pop
push
or
jb
sub
sbb
xlat
push
fnstsw
popa
mov
mov
push
mov
mov
dec
and
pop
or
jno
mov
in
mov
inc
ss
jae
sbbl
push
push
inc
loopne
mov
jp
popa
es
idiv
scas
insb
shlb
jnp
loop
outsb
roll
push
sbb
cmp
mov
pop
ds
int3
fwait
inc
jp
iret
in
into
leave
pop
fmull
insb
repnz
lret
hlt
and
sub
push
mov
data16
iret
fadd
xlat
mov
pusha
lret
cmp
sbb
pop
bound
mov
xor
xor
jnp
mov
mov
into
add
adc
push
adc
add
push
stc
stos
nopl
mov
adc
ds
fimull
or
in
adc
mov
jns
push
add
mov
cmp
movsb
test
cmpsl
jmp
fcomi
push
mov
repnz
repz
or
in
xchg
sub
pushl
jg
cld
icebp
mov
cmpl
push
cltd
xor
sbb
test
jns
shll
xor
pop
dec
sar
pop
cmpsl
and
lods
jne
sahf
fwait
hlt
stos
push
xchg
imull
leave
fistl
jno
cmc
cmp
cmpsl
sbb
shll
mov
push
cltd
or
xorl
sub
push
ds
mov
or
stc
std
inc
jae,pn
jns
ljmp
xor
dec
fildll
cmpsb
mov
repz
sbb
and
loope
lock
xchg
loopne
ljmp
push
cmpb
inc
loop
sbb
leave
sub
test
mov
or
sub
hlt
add
aam
mov
stc
or
lret
cli
adc
mov
and
icebp
loop
jle
clc
je
mov
mov
scas
call
jbe
and
and
fdivs
add
or
int
add
pop
sub
fildl
xchg
pop
mov
push
ret
jno
mov
roll
nop
inc
xlat
jo
pop
test
negl
lods
inc
mov
loope
sti
pop
lea
bound
outsb
sbb
cmpsl
jp
lret
xchg
adc
repnz
push
repnz
push
xchg
shll
stc
cmp
cmp
mov
or
cmpsl
adc
pop
sub
lods
ljmp
test
icebp
jno
sbb
rorb
dec
fdiv
enter
mov
pop
and
mov
inc
cmpsl
add
add
fstpl
ss
lret
cmpsb
aas
cmc
push
outsb
pop
xlat
iret
lahf
ss
fsubrs
repnz
je
xchg
push
sbb
cmp
inc
cmp
or
shll
int
push
into
icebp
or
adc
imul
fdivl
stc
das
int
sahf
xor
dec
push
inc
mov
sbb
sbb
cmc
cmp
leave
dec
mov
sub
mov
jb
jno
test
dec
mov
jecxz
js
inc
xchg
into
lea
and
and
xorb
fldt
mov
js
add
loope
jnp
mov
aaa
push
xchg
loop
stos
hlt
mov
imul
insb
xor
pop
add
mull
sub
lahf
call
dec
sbb
out
cmpsl
out
mov
adc
jmp
out
dec
pusha
in
sub
das
mov
xor
int
daa
aas
push
insb
jmp
movsl
lret
xor
call
push
push
add
mov
pop
dec
cmpsb
xchg
and
lods
or
into
mov
lahf
movsl
jl
push
neg
sub
xchg
aad
ljmp
sahf
pushl
ds
fidivl
lods
js
stc
rolb
dec
and
adc
adc
mov
mov
stc
fwait
jp
out
add
push
jmp
std
into
cmpsl
ficompl
insb
cmpsl
cmc
lock
int3
ja
adc
pop
sbb
xchg
movaps
xor
sub
cmp
jle
dec
imul
ljmp
jmp
jb
cmp
arpl
roll
inc
push
adc
and
and
divb
hlt
push
arpl
test
dec
dec
das
cltd
mov
push
repnz
ja
ret
clc
pusha
nop
stos
pop
lock
xlat
int
mov
int
push
mov
push
push
jge
inc
sbb
insb
inc
sub
stos
mov
es
out
push
loop
adc
sti
aas
fisttpll
inc
xchg
inc
pop
aaa
pop
loopne
or
push
dec
jb
push
nop
cmp
pusha
or
jge
rol
cmp
add
shlb
fwait
add
lret
loopne
fsubl
xchg
test
in
mov
jle
xchg
movsl
gs
lock
inc
mov
inc
rcrb
pop
cmp
add
pusha
sbb
mov
das
sub
divb
fcmove
out
pop
fstpt
push
mov
pop
shlb
jnp
insl
aad
es
mov
sbbl
and
movsb
dec
icebp
fnstsw
xchg
sbb
rcl
mov
stos
lods
add
xchg
sbb
or
mov
sub
sbb
pop
xor
xchg
jae
lock
jae
jb
std
inc
pop
inc
push
jecxz
test
dec
cmc
les
dec
out
sbb
ret
jbe
arpl
std
test
push
fcmovu
push
pop
hlt
mov
or
enter
negl
outsb
dec
or
out
ret
in
jge
inc
adc
iret
mov
lahf
daa
mov
add
xor
xor
jno
push
pop
fimuls
rcrb
testb
adcb
mov
or
pop
xor
in
jle
add
xor
cmp
jmp
in
sbb
sbb
inc
xor
ds
xor
xor
cmpsb
lcall
xor
inc
pop
lods
mov
aas
nop
das
xchg
jg
or
idivl
test
inc
pop
and
icebp
sub
cmp
push
xchg
mov
xchg
cmovg
and
pop
stos
pop
cld
mov
xor
sbb
lods
das
loop
mov
aas
add
testb
inc
shrb
fdivr
xchg
inc
sub
lret
loop
jg
xchg
xor
mov
jb
add
std
lret
sbb
shl
xlat
xchg
inc
mov
ret
aaa
mov
mov
jp
out
jmp
or
xor
push
std
int
and
mov
gs
lods
pop
jnp
mov
repz
push
ret
repnz
pop
push
popf
mov
repz
out
lock
cmp
daa
mov
or
shll
iret
lcall
xchg
or
xor
shrl
lret
mov
ret
sub
mov
sarl
xchg
dec
push
add
pop
and
popa
xor
imul
test
or
jecxz
sti
inc
mov
bound
pop
and
aaa
sarb
stos
adc
and
sub
scas
cmp
mov
xchg
pop
xor
ljmp
push
xchg
aaa
outsl
inc
test
xchg
lcall
addl
mov
sarl
test
mov
mov
sub
mov
and
or
int
cwtl
rcrl
test
stc
jae
sarl
or
stc
and
dec
in
gs
lcall
add
and
pop
xor
mov
and
inc
pusha
push
imul
add
or
xchg
jno
enter
mov
divl
mov
cmp
push
push
fnstenv
xchg
cwtl
stos
lods
jge
xchg
jno
xchg
mov
cmp
mov
flds
lds
sbb
push
flds
push
mov
popf
sti
or
ss
xchg
lret
outsl
pop
cmp
add
rcrl
mov
test
jge
mov
jg
pusha
xor
xchg
jno
in
outsb
xorl
jle
test
fldenv
aas
push
jge
lock
repnz
adc
cmc
cmp
mov
push
popa
jp
xor
add
mov
push
cli
mov
test
or
cmp
fwait
insl
cmp
je
mov
dec
push
repz
aam
fsub
out
dec
push
shlb
push
sahf
xor
jns
push
popa
imul
mov
jge
stos
push
ret
jmp
mov
pop
push
mov
aad
cmp
dec
insb
adc
sbb
inc
jl
xchg
jmp
int3
inc
lds
xor
fs
aaa
aaa
ret
pop
xchg
in
aaa
cs
jmp
cld
jns
pop
adc
jno
js
aam
rorl
scas
notl
cmp
push
inc
cmp
cwtd
sub
lret
jmp
push
sbbb
cmp
cli
push
das
gs
sti
pop
nop
add
cmpsl
jg
xchg
out
xchg
addl
pop
jge
ljmp
inc
add
fildll
cmc
push
in
ret
int3
mov
lret
das
iret
push
pop
push
inc
fsubl
inc
daa
jns
mov
aad
inc
arpl
jmp
fnstenv
out
enter
or
aad
mov
adcb
fsubs
push
sub
mov
jmp
push
push
push
sbb
mov
xchg
xchg
pop
inc
sbb
push
push
lcall
scas
aas
inc
iret
jo
or
xchg
or
mov
lret
dec
xchg
test
cmp
int
loopne
imul
in
sbb
sbb
or
roll
sbb
jbe
and
sbb
into
mov
jecxz
outsb
jp
lock
add
outsl
xor
bound
inc
stos
stc
add
popa
xchg
mov
push
push
mov
sub
dec
cmp
ret
ret
lds
or
sub
jae
cmp
cmc
xchg
jns
lock
xchg
xchg
arpl
or
adc
rcrl
mov
dec
pop
inc
sbb
sahf
mov
push
faddl
popa
lar
sbb
pavgw
imul
in
add
jle
arpl
sub
add
adc
dec
pop
les
and
push
lods
push
loopne
popf
ret
test
mov
cmp
fwait
cwtl
dec
in
xchg
stc
xor
js
ja
cmpl
pop
mov
inc
adc
movsb
loopne
mov
adc
scas
push
les
popa
fnstsw
jecxz
loop
es
push
in
incb
pop
mov
mov
cmp
in
mov
lret
jb
mov
pop
addr16
mov
sbb
inc
sbb
mov
jg
lods
sub
push
scas
clc
add
rorb
cli
push
jne
out
in
pop
jg
lods
rol
xor
movsl
jae
rolb
loope
divl
lcall
orb
or
pop
cld
ret
out
cmp
xchg
sar
fdivs
adc
jbe
aaa
xchg
ljmp
adcb
sub
sti
cvtps2pd
add
aaa
daa
lcall
test
fwait
sbb
loop
mov
jge
lcall
adc
mov
psrad
out
adc
pop
xor
mov
std
inc
mov
dec
push
mov
insb
out
fsubrs
xchg
pop
rcrb
jae
or
je
adc
mov
ljmp
out
push
sub
sbb
loope
adc
xchg
cmpl
daa
xchg
adc
cwtl
nop
push
cltd
xor
pop
rorl
je
lds
shll
sub
jo
mov
fs
dec
jne
jmp
xchg
mov
data16
enter
cli
mov
scas
rorl
pop
adc
cmc
aaa
sbb
adc
pusha
outsb
test
lods
test
jecxz
imul
mov
or
add
jnp
test
mov
aas
subl
mov
pop
test
dec
mov
nop
mov
out
out
or
fsub
cmp
es
aas
xchg
and
and
inc
ret
imul
mov
sub
xor
sbb
stc
fisttpll
stos
and
jb
inc
andl
fbstp
mov
out
pop
aad
loope
pop
and
cmpsb
sbb
xchg
loopne
roll
jb
or
or
lds
sub
lcall
xchg
sbb
xchg
dec
fdiv
xchg
mov
aad
dec
lds
shlb
cmp
jg
inc
mov
fistpll
cmpsl
adc
mov
inc
mov
mov
incl
push
out
mov
out
xchg
scas
mov
movsl
xchg
pop
sbb
inc
push
lret
outsl
jp
movsl
dec
pop
dec
pusha
mov
mov
and
push
xchg
add
sbb
add
mov
divl
int3
mov
iret
mov
inc
ret
mov
dec
lds
imul
insb
xchg
popf
je
subl
add
inc
fstps
mov
push
dec
adc
add
pop
jno
sbb
rorb
mov
jne
arpl
iret
inc
jmp
mov
add
test
mov
sub
lods
repz
xchg
jno
decb
insl
sbb
sbb
mov
add
icebp
sbb
sub
out
out
pop
test
jae
push
je
lods
daa
sbb
scas
out
int
mov
sub
cli
hlt
xor
adc
xchg
inc
xchg
fwait
arpl
dec
fcoml
add
aaa
sbb
int3
addr16
insl
push
inc
and
dec
pop
nop
lret
pusha
ficomps
hlt
cmpsb
lahf
mov
xchg
jnp
dec
fs
and
ret
cmp
xlat
mov
add
shlb
out
lea
xchg
mov
test
aad
and
mov
rol
cltd
in
jmp
mov
jmp
push
pop
dec
mov
push
int3
xor
add
std
sub
fprem
fwait
and
iret
gs
shll
push
lret
xchg
and
cmpsb
jge
pop
or
mov
or
mov
sub
sub
shlb
push
test
or
add
sti
mov
jge
std
out
test
loope
decb
outsl
push
dec
mov
aam
mov
nop
mov
adc
out
jae
addr16
imul
lock
mov
sbb
movsb
lcall
nop
lea
adc
stos
rcr
cmp
or
mov
jnp
roll
mov
add
mov
adc
sub
pop
out
out
scas
cmpsb
add
sbb
xchg
in
sbb
outsb
xlat
out
and
divb
mov
sub
cmpsb
mov
adc
dec
mov
inc
cmp
stc
mov
push
or
pop
pop
sub
aaa
je
dec
push
movsl
inc
int
movsl
ret
test
mov
and
lcall
push
push
mov
xor
or
push
stc
scas
jbe
movsl
lcall
cli
jl
xor
push
dec
push
test
adc
sbbl
pop
bound
mov
jb
lea
jle
sbb
nop
jae
repnz
or
or
or
jmp
inc
pop
in
jp
dec
cmp
dec
out
cli
xor
dec
dec
call
cmc
mov
dec
mov
adc
jle
outsb
inc
push
div
xor
dec
or
add
sub
mov
pop
mov
pop
pop
jae
inc
add
adc
push
jne
addb
mov
frstor
jbe
lods
int3
push
stc
iret
xor
mov
imul
push
push
je
fsts
jno
adc
sub
or
outsb
push
lret
out
shlb
add
pop
insl
out
cltd
mov
fstpl
jbe
testb
stc
or
push
jge
dec
mov
jle
push
mov
fisttps
add
adc
insb
in
pop
aam
divb
xchg
sbb
ret
mov
xor
adcb
mov
ljmp
arpl
aaa
dec
nop
fwait
dec
xchg
jp
add
bound
push
iret
pushf
ss
movb
ja
pop
test
xorl
jp
xchg
int
cltd
and
call
lea
add
add
dec
push
adc
test
or
iret
xor
xor
and
ljmp
add
test
mov
lahf
cmp
jo
mov
push
and
loope
gs
daa
xchg
stc
xor
mov
dec
out
push
or
std
or
int3
xor
out
dec
jae
int3
in
adc
sbb
cmp
inc
sahf
mov
inc
add
mov
push
add
or
xor
addl
jne
mov
shr
jns
not
icebp
scas
lahf
in
xchg
dec
mov
and
ret
jle
es
adc
mov
data16
cld
arpl
xor
cltd
jg
push
stos
mov
aaa
insb
mov
pop
lahf
mov
add
jge
sub
sbb
aas
pop
test
cmpsl
jo
cmp
fidivrs
filds
into
sub
insl
push
and
and
in
mov
loopew
out
out
fwait
hlt
data16
mov
cmpsl
sbbl
mov
bound
pop
pusha
andl
mov
xchg
xlat
jns
in
add
int
dec
cltd
das
inc
inc
std
adc
jb
insb
jae
out
fidivrl
xchg
out
xlat
add
inc
mov
stos
push
test
jle
incl
jecxz
cmp
out
push
ffree
sbbl
lds
lea
add
clc
lea
jo
ss
and
push
push
sub
inc
xchg
mov
inc
lea
jbe
jb
push
sbb
add
out
xchg
js
lea
xchg
cmp
loopne
jl
xlat
sbb
out
movsl
mov
xchg
outsb
sbb
loopne
mov
lea
inc
cmpsl
add
xchg
std
out
loopne
dec
jae
ljmp
dec
jns
or
or
push
ds
push
cmpb
dec
ficoml
pushw
cmp
hlt
inc
dec
ret
mov
inc
sub
outsl
mov
mov
mov
and
in
daa
mov
and
jae
push
xchg
pop
xor
push
test
pop
push
testl
decl
add
dec
lret
xor
mov
mov
xor
scas
jl
fiaddl
call
clc
shl
and
jmp
outsb
add
push
ret
ss
jns
lcall
mov
sbb
adc
mov
rcrb
sbb
stos
popf
enter
mov
sahf
mov
mov
adc
dec
stc
pop
adc
aad
fcomi
and
out
outsl
faddl
lea
jle
stos
scas
mov
repnz
cmpsl
mov
fwait
sbb
jmp
lods
jp
push
jp
nop
xor
inc
sub
mov
cmp
xchg
add
jmp
mov
sbb
test
fldenv
ds
out
leave
sbb
mov
cs
push
and
stos
lods
mov
loopne
sub
ljmp
cmp
rclb
push
cmp
cwtl
mov
pushf
jecxz
call
or
fdivrs
fsts
mov
mov
test
shll
sbb
imul
iret
into
leave
adc
mov
xlat
leave
push
out
pop
loopne
in
ljmp
test
jecxz
fs
cltd
push
out
sbb
add
iret
mov
mov
or
push
rol
mov
sub
inc
pop
ds
cld
add
mov
mov
and
mov
fs
pop
aad
push
cmp
add
dec
pop
push
repnz
scas
cmp
data16
dec
add
lea
insb
sub
dec
jg
or
add
pop
adc
stc
add
lods
fs
mov
in
sub
in
out
jne
pop
pop
mov
aaa
ret
push
popf
dec
scas
out
lods
xchg
add
lcall
jg
mov
dec
cmpsl
mov
fidivrl
fwait
add
inc
leave
cmp
dec
push
ret
mov
out
adc
out
orb
ljmp
mov
sbb
xchg
shlb
and
jp
cmpsb
adc
imul
jno
jp
and
or
push
aas
lds
idiv
call
sub
sahf
inc
test
icebp
lods
pop
push
loopne
shrb
dec
sub
rcrb
jge
cmp
jl
loopne
mov
cmp
in
icebp
les
dec
push
repz
inc
lret
in
dec
xchg
test
pop
fprem
ret
inc
add
fmuls
cmpsl
lods
sbb
shlb
pop
ljmp
insb
shlb
jge
insl
dec
fidivrl
out
jbe
xchg
int
lds
ret
sete
mov
jne
cmp
stos
and
adc
sbb
jne
sahf
inc
addr16
outsb
inc
mov
pop
int3
test
mov
jmp
mov
roll
mov
inc
stos
mov
divb
jno
sub
stos
std
ret
xchg
shr
mov
pop
jp
out
es
cmp
repz
aas
jb
mov
sub
or
push
arpl
push
mov
push
mov
lds
int3
loop
xchg
mov
aad
into
mov
lods
xchg
xchg
lahf
sarb
mov
cmp
cwtl
jg
jmp
adc
scas
in
lahf
repz
mov
or
out
movsb
aas
or
and
mov
jne
sub
cld
out
dec
xchg
mov
xchg
dec
dec
divb
pop
aas
adc
dec
test
mov
jnp
lcall
enter
pop
test
sbb
enter
pop
jo
arpl
mov
mov
ja
and
xor
sub
xchg
jg
push
je
add
mov
test
stc
enter
push
ret
adc
pop
sbb
xor
push
data16
out
sub
add
ja
adcb
jne
fcomps
pop
scas
jl
jp
dec
outsl
or
mov
test
ret
pushf
test
in
jno,pn
cmpsb
das
shl
in
pop
cmpsl
andb
mov
sbb
xchg
adc
popa
xchg
cmpsl
adc
je
pop
cld
cs
jns
test
and
adc
pop
mov
jp
push
inc
add
push
test
add
lds
pop
lea
cld
aas
movsl
lods
and
call
arpl
rcrb
mov
data16
xor
pop
cld
mov
hlt
enter
mov
das
ds
adc
xor
shll
sub
arpl
push
ljmp
xchg
dec
in
mov
sbb
or
lds
lahf
mov
add
scas
std
mov
or
pop
rolb
dec
add
cmp
add
push
daa
mov
iret
mov
jbe
mov
pusha
push
xlat
inc
mov
popa
outsb
fwait
decb
inc
xor
dec
lcall
cmp
push
and
ficoms
out
sub
popf
inc
stc
push
lods
lret
jp
cmp
xchg
test
aad
mov
inc
cmpsb
loopne
in
pop
xor
stos
xchg
lret
int
mov
push
jo
pop
dec
sti
mov
lock
inc
or
dec
push
int
sbb
ret
mov
cmpsb
and
push
mov
pop
in
outsl
leave
in
push
sbb
mov
negb
xchg
shll
sub
fdivl
push
dec
sub
cwtl
inc
sahf
bound
fwait
adc
fstps
jle
jo
stc
xchg
mov
cmpsb
xor
daa
test
nop
test
or
inc
mov
cmp
mov
cmpl
pop
lods
lock
or
or
cmovne
cmp
fnstcw
add
push
pusha
inc
js
push
loopne
mov
push
cmpsl
push
dec
mov
mov
sbb
fimull
loop
jne
fucompp
lods
sub
xchg
iret
or
xor
mov
popf
out
outsb
lds
sub
sub
in
cmpsb
pop
lret
insl
stc
jo
push
sbbl
aaa
pop
ds
xor
jne
fwait
rolb
sub
cmp
lods
enter
es
insb
push
ret
pop
cs
mov
cmpsl
push
inc
cltd
xchg
push
or
adc
out
lock
cmp
mov
push
nop
int3
into
jle
push
call
imul
sarl
je
add
ret
sub
push
push
js
xor
addb
movsl
jecxz
push
mov
cltd
decb
int3
and
fbstp
push
scas
pop
mov
mov
mov
rol
in
cwtl
jge
ds
push
and
xchg
or
jge
jnp
popf
jge
test
mov
testl
lock
pop
sub
sub
push
xchg
mov
mov
and
cmp
xor
mov
icebp
aam
dec
stc
xor
and
mov
push
lahf
call
adc
and
iret
or
out
inc
test
cs
fcompp
stos
cmp
dec
dec
adc
sbb
gs
mov
pushf
loope
jecxz
add
imul
push
jbe
xchg
out
rol
pop
jmp
stos
decb
test
mov
dec
mov
mov
cli
add
push
mov
ds
jo
mov
cld
lds
cmc
dec
ljmp
pop
roll
mov
or
mov
add
in
mov
mov
and
lahf
xchg
test
jb
in
mov
or
fistps
insb
outsl
mov
fisttps
cmpl
inc
mov
in
jl
jge
push
sbb
shlb
cmp
out
nop
xchg
mov
cmp
fbld
ds
fnsave
mov
shlb
jl
mov
rcll
stos
mov
fdivrl
push
mov
repnz
push
sub
arpl
pop
lea
rcrl
adc
mov
push
out
or
movd
mov
clc
hlt
cmpsl
fdivs
add
push
xor
inc
mov
and
and
das
or
lea
jmp
cmpl
lods
cmp
pusha
or
inc
push
fmuls
sbb
and
pop
add
fwait
movsb
sbb
mov
xchg
movsl
shll
mov
mov
paddw
cmp
cwtl
cmp
mov
inc
out
in
fmul
popa
addb
in
and
lret
ret
hlt
pop
mov
or
add
je
ss
or
aam
pusha
mov
rclb
add
icebp
pop
cld
movsb
pop
dec
mov
in
mov
fsts
add
loope
lahf
int3
mov
jmp
icebp
xor
sbb
lds
dec
sbb
adc
adc
movsl
jecxz
out
cld
roll
adc
fldenv
xor
inc
mov
daa
push
into
shll
arpl
stos
sub
adc
sbb
in
cmp
ret
js
cmpsb
fcoml
mov
cmp
sbb
mov
out
scas
inc
add
mov
jmp
jge
scas
lods
scas
fs
pop
add
fnstcw
stos
popa
out
test
in
out
xchg
out
in
enter
jl
cltd
adc
leave
cwtl
test
fisubl
ret
xchg
xchg
imull
cmp
mov
clc
inc
push
cmc
jge
sub
aaa
mov
push
in
xchg
scas
pop
cmp
adc
stc
add
add
fildll
pop
adc
mov
fidivl
and
jae
mov
scas
and
ret
jg
push
mov
xchg
xor
push
stos
xchg
inc
orl
fs
add
jbe
mov
test
mov
stc
add
aam
pop
sbb
ljmp
out
inc
dec
mov
push
push
fmul
adc
xlat
xchg
adc
cwtl
adc
in
mov
outsl
mov
inc
mov
scas
add
loope
adc
aaa
add
push
movsl
cli
sbb
jb
cmp
insl
int
inc
loopne
xchg
dec
push
leave
notl
fwait
jmp
mov
in
fstl
popa
stos
jo
call
ja
add
lods
mov
lock
sbb
clc
sti
mov
scas
sahf
jno
ss
add
pop
sub
mov
or
bound
hlt
scas
rol
mov
mov
test
add
in
in
jbe
movsl
loopne
sbb
stos
mov
scas
push
push
in
repz
es
xchg
iret
lea
xchg
ljmp
int3
xor
push
cmp
loopne
test
sbb
add
das
dec
ljmp
dec
adc
and
push
arpl
jl
mov
pushf
push
sub
das
and
cmpsl
mov
add
aaa
push
jecxz
pop
add
lea
pop
movl
jnp
inc
add
lret
add
out
push
xor
ljmp
stc
or
mov
repnz
pushf
jl
je
sti
xlat
sbb
repnz
mov
lret
mov
out
sbb
mov
cmp
and
stc
inc
push
cli
out
adc
push
shll
sub
cld
or
icebp
das
rcrb
mov
push
jno
add
fs
aad
mov
loop
mov
pop
rol
jg
mov
dec
jge
push
fs
or
fnstenv
sbb
popa
cmpsl
cmp
jnp
mov
or
clc
xor
fldt
leave
mov
movsb
jno
push
pop
xlat
mov
lods
jns
mov
sbb
jg
jae
xor
sti
sub
lahf
in
roll
jne
pushf
dec
pop
loop
pop
dec
sub
aad
mov
mov
lock
jo
bound
jbe
push
jge
cmp
pop
dec
cmpsb
mov
and
mov
cwtl
xor
push
jmp
pushf
push
inc
and
push
mov
rclb
sbb
aaa
movsb
lahf
inc
cwtl
mov
je
mov
xchg
vpunpckhwd
popf
enter
or
xchg
jne
cli
sub
cmp
ljmp
test
push
mov
mov
popa
sub
lcall
and
aas
test
enter
mov
jp
pop
add
stos
lods
xchg
shlb
dec
fldl
sbb
xchg
in
jns
pop
scas
push
and
mov
lret
add
in
mov
mov
push
test
adc
imul
loopne
jbe
fisubrs
inc
or
xchg
sbb
aad
xchg
xchg
xchg
cwtl
in
jge
inc
iret
pop
mov
jmp
cmp
es
imul
lods
sub
sbb
call
push
or
jno
jle
mov
inc
xchg
cmpsb
pop
sbb
xor
push
fs
sbb
xor
dec
cmpsb
jp
jns
mov
aad
dec
mov
out
addl
adc
mov
repz
loopne
ss
scas
push
in
xchg
loop
xchg
nop
sbb
pop
cld
xchg
ljmp
test
ja
rcll
add
push
and
add
cwtl
fstpl
jbe
add
xor
in
pop
sbb
jle
mov
xchg
add
xor
mov
call
inc
data16
es
sahf
sub
add
push
stos
pop
jne
lret
sub
pop
std
pop
xor
test
pusha
dec
and
jnp
xor
cwtl
std
cmpsl
shlw
and
rcrl
inc
or
cmp
pop
fs
cltd
imul
aad
jp
inc
xchg
imul
mov
push
sub
mov
data16
xchg
dec
adc
ds
jns
inc
mov
inc
inc
mov
aas
inc
and
out
xor
lods
cwtl
sahf
shl
out
xchg
cltd
fistpll
dec
sbb
mov
in
insb
rorb
and
push
push
movsb
dec
inc
lods
test
leave
stos
jb
adc
cwtl
cmovs
inc
and
push
push
mov
rclb
fnstenv
dec
mov
mov
div
jns
or
cmp
xchg
cmp
pusha
xchg
scas
push
ss
sub
mov
add
stos
dec
jns
dec
inc
std
ds
test
dec
ret
mov
or
add
jae
mov
in
cmpxchg
adc
rorl
sub
add
mov
bound
jp
hlt
mov
jae
pop
or
dec
fwait
pop
lcall
scas
jnp
hlt
pushf
cmp
repz
cwtl
add
inc
imul
jle
jne
hlt
lret
xchg
dec
jmp
repnz
dec
cmpsl
out
pushf
inc
lret
dec
jns
inc
mov
hlt
mov
mov
mov
and
add
cmp
outsl
outsl
lahf
fwait
inc
aas
aaa
add
stos
sbb
cmpsb
and
pop
xor
test
rsqrtps
shlb
dec
xchg
lahf
daa
cmp
pop
int3
scas
mov
xchg
jnp
ret
inc
jne
shr
xchg
stos
jo
outsb
lea
push
push
leave
sbb
movsl
sbb
call
data16
cmp
pop
sahf
adc
popw
mov
xchg
push
mov
cld
ret
scas
bnd
xor
sahf
aaa
rclb
inc
cs
xorb
outsb
jecxz
je
test
cs
aam
jmp
popf
out
cmpsl
add
cmpsl
jbe
inc
xchg
sbb
mov
jno
icebp
fistl
xor
aaa
int
add
and
mov
std
scas
push
dec
dec
cmp
jbe
cmpsb
jecxz
pop
fldl
das
mov
adc
fsub
stos
jl
push
pop
dec
fsubrs
pop
mov
push
xor
fs
push
inc
inc
addr16
fstp
fstpt
xchg
ljmp
pop
imul
hlt
lods
pusha
std
push
bound
or
orl
mov
adc
out
pop
lock
stos
jle
mov
shlb
cltd
xchg
pop
sbb
sbb
push
sub
and
ret
and
outsb
xlat
sbb
or
mov
cld
fdiv
push
push
test
cmp
sti
xchg
sub
or
lods
mov
popa
push
jg
std
call
ja
xchg
cld
aam
fidivrl
lcall
mov
inc
dec
sbbl
ret
inc
pop
cltd
sub
outsb
lahf
jp
cmp
cmpsl
add
mov
cltd
xchg
jp
cmc
pop
add
ss
mov
add
or
movsl
data16
sarl
jne
lret
sbb
mov
aad
adc
std
inc
cs
mov
nop
add
das
in
push
shlb
inc
push
sbb
xlat
or
stc
mov
jbe
xchg
sbb
push
sarl
repz
adc
mov
push
mov
mov
cmc
cwtl
push
iret
add
mov
lea
xor
mov
loop
jmp
test
dec
shll
push
in
inc
pop
or
insl
mov
jne
mov
and
pusha
and
scas
mov
xor
or
xor
jecxz
push
cmp
pop
and
pop
jno
push
in
cltd
dec
hlt
ja
adc
mov
mov
add
aaa
pop
lods
pop
or
and
je
aas
mov
pop
out
cltd
inc
popa
mov
push
test
out
xchg
jae
mov
push
inc
jns
repz
or
hlt
arpl
cmc
aad
jbe
adc
fimuls
sub
xor
pop
push
jno
inc
shll
fwait
sarb
adc
fsubrs
jg
xchg
in
pop
xchg
outsl
push
les
fstl
xorb
mov
aas
in
movsb
lret
mov
adc
fstpl
pop
xchg
int3
insl
mov
imul
add
pusha
xchg
in
mov
and
scas
fistps
iret
push
clc
mov
fcmovnb
add
xor
jmp
rclb
ret
popa
enter
or
loopne
jnp
cmpsb
fabs
loopne
hlt
scas
mov
rolb
cmc
xorb
xchg
mul
in
jle
ret
pop
cmp
mov
stos
aad
or
push
sbb
jae
inc
push
je
stc
int3
sbb
popa
int
xor
sete
lcall
mov
mov
repnz
das
ss
pop
movsb
inc
mov
das
cmp
je
sbb
mov
jp
cli
fisubs
dec
mov
fs
push
fistps
mov
dec
cmpsb
in
faddl
pop
inc
pop
mov
sub
mov
lret
mov
jg
or
imul
xor
xchg
pop
mov
stos
cmpsb
stos
inc
fwait
mov
jns
mov
data16
jo
sbb
mov
xchg
cmp
pop
push
mov
mov
pushf
icebp
xor
fldt
fbld
jmp
push
insb
pop
xchg
and
push
jge
mov
mov
xor
stc
into
and
mov
imulb
adc
inc
inc
pop
fadds
mov
jno
adc
test
sbb
mov
and
cmp
mov
cmp
push
push
jecxz
into
mov
xchg
cmp
shlb
sbb
xchg
jns
or
push
mov
push
push
or
pushf
push
or
nop
push
icebp
adc
jg
aas
lret
test
dec
rolb
bnd
icebp
xor
push
sbb
clc
out
dec
sbb
adc
lret
dec
dec
rolb
arpl
add
lret
test
ja
jle
push
cltd
insl
mov
test
jg
pusha
and
into
std
pusha
shll
pop
or
cltd
fistps
mov
sbb
in
sahf
sbb
into
push
outsb
dec
outsl
sub
xor
jle
loop
loope
xor
dec
inc
fwait
insb
fisubrs
clc
hlt
dec
shlb
das
jno
or
xchg
jl
movsl
sbb
jo
mov
je
in
pop
cli
mov
dec
pop
xchg
fucomp
jg
mov
and
cmpsb
or
cmc
loopne
jl
loop
lret
push
adc
push
add
mov
add
ss
sbb
arpl
sub
pop
xchg
call
insb
push
imul
and
frstor
int3
sub
ja
and
cmp
stos
repz
mov
cmpl
pop
push
je
dec
mov
sahf
sub
jecxz
mov
sahf
in
sarb
repnz
js
shrl
xchg
jl
repz
xlat
push
aam
mov
ljmp
in
pop
add
mov
xor
les
ret
adc
fisubs
mov
xchg
jo
dec
add
sbb
jp
in
ficomps
movsb
lock
stc
cmp
jne
dec
repnz
bound
pop
lea
dec
jb
mov
cld
jne
mov
jne
add
rol
pop
shll
int3
cs
adc
imul
xor
xor
jbe
stos
push
outsb
fisttpll
test
lods
int3
and
xor
in
cmpsb
jbe
fimuls
out
hlt
push
sub
fisttpl
fisttpl
call
ss
push
ss
pop
nop
call
lods
pop
add
cmp
xor
and
sti
jb
cmp
enter
push
insb
test
adc
push
cli
xchg
fisttps
mov
cmpsb
sbb
and
push
add
cmc
dec
sub
adc
data16
and
push
cmp
outsl
jp
int
push
data16
xor
lcall
ljmp
and
cmpsl
or
lds
xchg
add
pop
and
inc
jbe
add
or
leave
repnz
pop
pop
int
dec
mov
xchg
pop
and
out
xor
mov
fbstp
test
push
gs
lds
je
inc
imul
andl
ja
xor
movsb
out
cmp
nop
xchg
jb
shlb
sahf
lret
xor
hlt
out
dec
gs
add
sub
hlt
rorl
mov
imul
push
mov
sub
js
jle
fmuls
push
sub
arpl
xor
ds
pop
xchg
rol
mov
mov
pop
bound
jl
sub
mov
and
leave
adc
mov
inc
shlb
dec
dec
out
add
outsl
sbb
data16
les
mov
fwait
push
pop
inc
popf
ret
test
jge
in
and
call
popl
lret
ja
ja
cmpsl
lods
push
push
sbb
aad
xor
inc
xchg
dec
nop
outsb
push
js
call
jl
rorl
push
test
xchg
lock
xchg
pushf
cmp
loopne
cmp
jge
pop
pop
cld
subb
mov
sbb
popa
lcall
fiadds
jp
inc
xchg
pop
jnp
aad
xor
xchg
movsl
push
ds
sbbb
or
gs
notl
or
cmp
mov
push
mov
inc
leave
xchg
sbb
sbb
or
adc
sbb
popf
dec
ja
subb
test
fsubl
mov
or
push
push
outsb
and
stos
and
loop
cld
push
xchg
outsb
movsl
or
repnz
or
cmpsb
inc
cmp
fisttpll
pop
leave
lret
pop
sbb
mov
stos
es
mov
fs
mov
xchg
push
lret
xor
fisubl
or
sub
bound
inc
dec
jp
xchg
imul
cmpsl
sub
bnd
clc
xchg
out
cmpxchg
sbb
mov
cld
jg
pop
push
repnz
jb
xchg
pop
dec
popf
shrl
adcb
inc
and
lock
arpl
cmp
xchg
in
addl
mov
pusha
in
inc
dec
divl
arpl
lret
mov
es
aas
xor
and
loope
inc
cmp
aaa
sbb
xlat
xchg
fstl
or
push
ficompl
dec
xchg
xorb
sbb
loop
lds
pop
ds
repnz
push
fcoml
mov
and
adc
data16
inc
mov
fisttps
out
xchg
loope
pop
pop
jecxz
xor
enter
cwtl
mov
sub
xorb
jnp
imul
movsl
fisttps
cmp
push
xor
sbb
ret
pop
and
scas
and
inc
sbb
push
loop
out
mov
and
lods
fisubrs
je
or
pop
in
fidivrl
fs
fistpll
sub
dec
faddl
fisubrl
push
dec
rolb
inc
mov
xchg
xor
add
xchg
in
cmp
cmpsl
repz
or
sub
xchg
lcall
mov
mov
or
pushf
jnp
mov
outsl
xchg
pushf
sbb
shrb
lcall
dec
cld
enter
sbb
and
mov
lcall
xor
mov
xchg
sbb
jnp
popf
mov
std
push
mov
popf
inc
jle
or
and
aad
std
and
adc
lcall
push
adc
push
data16
and
pusha
cmp
pop
fsubp
in
mov
or
lea
or
mov
ss
mov
jle
mov
adc
inc
push
lods
arpl
ds
mov
add
rolb
cmp
and
arpl
imul
lcall
repnz
test
je
imul
cmp
inc
adc
sub
xchg
mov
sub
test
inc
lahf
adc
push
pop
or
scas
rep
mov
ret
sti
pop
sub
fisubl
push
jle
mov
cmpsl
or
gs
adc
shlb
dec
call
pop
in
loope
sahf
inc
jg
shl
mov
adc
mov
out
sub
mov
inc
sub
iret
pop
fdivs
xor
mov
andl
mov
dec
jb
lods
push
add
imul
aad
ljmp
sbb
fidivs
inc
popf
sbb
jle
out
in
mov
push
inc
daa
mov
pop
loop
aaa
add
xor
xlat
dec
sub
xor
pop
mov
inc
repnz
aas
pusha
jne
cmp
mov
and
jmp
xlat
leave
ja
icebp
jb
aas
lods
imull
inc
out
ljmp
fdivrs
xchg
int3
mov
mov
jns
mov
ds
mov
and
stc
into
fxam
repnz
lret
inc
loope
pusha
nop
or
data16
lcall
dec
xchg
mov
ds
xchg
fwait
sub
cmp
shl
add
add
fistps
dec
aaa
mov
sbb
adc
jno
xchg
stos
lahf
lahf
jbe
stc
xor
push
jo
out
cmp
mov
outsb
ja
lock
mov
aam
sti
orb
popf
dec
fs
test
adc
push
out
inc
mov
mov
add
sarb
mov
imul
pop
push
test
lock
xchg
cmp
mov
rcrb
sbb
rorl
push
sbb
cmp
pop
js
je
jae
push
xchg
mov
jmp
addl
rorb
or
pop
adc
mov
mov
pop
sub
cmp
sbb
mov
and
pop
je
or
and
xchg
sbb
add
xor
or
mov
jl
sahf
arpl
push
adc
lea
mov
jmp
mov
out
inc
add
out
cli
mov
out
xchg
jno
mov
fsubr
and
xchg
js
push
nop
cmpsl
dec
pusha
mov
aaa
dec
jno
clc
or
push
adc
rcr
out
adc
cld
sub
mov
pop
or
shlb
dec
je
and
pushf
cmpsl
inc
test
mov
divb
mov
fucomp
out
add
push
movsb
data16
fisubrl
fiaddl
adc
insb
repnz
jnp
sbb
mov
loope
sub
xchg
xor
or
les
lahf
fisubrs
dec
ret
scas
mov
mov
xchg
negl
rcll
call
inc
push
jns
jb
cmp
pop
and
xor
hlt
prefetch
rol
sbb
movsl
mov
and
jnp
mov
movsl
cs
mov
test
dec
jecxz
xchg
pop
rclb
shlb
sub
jg
mov
addl
adc
lahf
bound
popf
stos
out
xchg
add
dec
inc
jne
push
jno
xor
test
xor
pop
xchg
jb
xlat
je
mov
jb
and
lret
push
jmp
enter
mov
es
in
je
sarb
sub
inc
push
xchg
jbe
xor
and
pop
mov
mov
add
lahf
fs
pop
jge
mov
dec
jl
xor
clc
adc
filds
push
and
xor
jns
jb
ret
popa
mov
pusha
shll
mov
push
fisubrl
cmp
fistps
push
enter
pushf
jp
mov
ljmp
pop
repz
ret
push
lds
xor
cli
jp
testb
push
cwtl
pop
sti
add
lea
mov
lahf
push
les
mov
movsb
int3
enter
outsl
out
pop
je
repnz
outsl
mov
mov
and
mov
icebp
fidivrs
jg
in
push
inc
dec
inc
lret
pop
inc
scas
test
pop
sbb
scas
sub
push
jae
outsl
js
cmpsb
push
mov
add
fimuls
push
xchg
in
popa
adc
movsl
xorl
push
add
test
inc
dec
aas
add
int3
loop
push
outsb
mov
inc
mov
push
push
jp
ss
or
dec
jg
and
pop
add
sub
dec
adc
pop
sbbl
icebp
ss
sbb
andb
test
mov
std
xchg
xchg
pusha
mov
pop
sub
cmpsb
mov
jge
rcrb
push
rorl
out
pop
movsl
cmp
loopne
inc
dec
iret
icebp
or
loop
and
xor
popf
jae
xor
push
pushf
addl
jmp
jmp
addr16
daa
cmp
test
daa
rcll
cmp
push
mov
mov
or
inc
stc
xchg
push
inc
xchg
sbb
lcall
jbe
and
push
mov
push
scas
fildll
mov
pop
sub
enter
cmc
mov
loop
jo
es
cmp
mov
rclb
data16
sti
fwait
jmp
cwtl
sub
addb
sbb
nop
xchg
mov
fsts
xor
add
and
mov
lret
push
ds
pop
cmpsl
out
jns
dec
lret
push
jp
mov
add
in
js
sbb
lret
pop
cmp
pop
xor
lods
sbb
jae
repnz
mov
lods
mov
in
mov
dec
mov
fnstsw
and
inc
pop
cmpsb
fbld
fidivrl
iret
aam
out
sbb
stos
ror
out
daa
jmp
lahf
aas
push
adc
adc
adc
add
xlat
sbb
mov
add
mov
add
cmp
inc
add
pushf
adc
pop
cmp
sub
adc
pop
add
fprem1
or
fidivrl
xchg
fiadds
stos
imul
dec
sbb
fidivrs
scas
push
adc
add
jl
movsl
xchg
in
out
daa
pop
push
popl
xchg
jg
scas
push
mov
ljmp
jb
adcb
out
jae
and
dec
addr16
sbb
test
inc
shlb
push
sbb
icebp
or
loope
int
mov
cmpsb
and
fnstcw
mov
fbstp
push
jae
clc
shll
movaps
pop
popa
imul
fdivr
add
stos
rolb
push
and
or
push
outsl
xor
push
movb
lods
repz
lods
loop
push
arpl
pop
jno
xchg
xor
lahf
and
cmp
fst
jns
jp
inc
push
jecxz
or
bound
mov
inc
inc
and
test
jecxz
loop
add
mov
mov
mov
pop
push
nop
inc
sahf
das
and
and
xchg
pop
popl
and
addb
fldt
add
jno
sarl
and
out
sbb
ss
mov
sbb
pop
mov
and
pushfw
xchg
sub
jnp
rcll
inc
js
stos
cmc
lea
or
inc
mov
sub
xor
scas
mov
dec
jno
mov
dec
push
clc
sub
mov
jle
out
ljmp
jmp
das
stos
lret
mov
inc
cmpsl
pop
jb
inc
adc
fldenv
dec
cmp
mov
in
jmp
mov
pop
jne
add
adc
jl
and
and
mov
outsb
push
and
in
cs
push
push
add
push
cmpb
imul
cmp
xchg
jl
testb
or
sbb
inc
inc
or
mov
or
sbb
and
jbe
in
int
lea
notb
imul
cmp
inc
sbb
mov
xor
sahf
repnz
jne
decl
lret
pop
popa
push
pop
xchg
jns
push
adcb
popa
jmp
roll
data16
and
movsb
pop
jno,pt
mov
xor
pushf
cmpsb
adc
je
or
sbb
cmp
lods
sbb
add
push
lahf
add
mov
mov
inc
cmp
push
aaa
sarb
xchg
inc
lea
jle
stc
inc
insb
push
mov
jne
rcrl
mov
push
clc
jo
push
pusha
sbb
sbb
fidivrl
lods
sar
sub
ret
sub
jnp,pt
jge
iret
test
ret
imul
ss
js
dec
push
std
add
lock
jne
push
push
dec
ljmp
xchg
add
loopne
repnz
sti
in
adc
lahf
mov
adc
icebp
stos
dec
dec
aad
enter
fs
les
leave
aaa
stc
cmpsl
sub
lock
cmp
and
rcrb
mov
xchg
flds
aad
fcompl
push
std
fistpll
inc
add
dec
or
mov
pop
add
aad
lods
pop
in
add
iret
lahf
dec
sti
sbb
imulb
ja
in
lcall
std
outsl
out
ljmp
rcrb
pop
cmpsl
aaa
sbb
rcr
adc
cmpsb
mov
pop
leave
int
jp,pn
xchg
and
daa
enter
pop
das
in
mov
sub
and
jmp
jecxz
scas
sub
ret
movb
dec
lcall
loopne
loope
std
subl
in
cmp
pop
xchg
sbb
roll
pmaddwd
inc
insb
jge
scas
bound
sar
push
or
mov
subb
rclb
xor
lock
pop
movsb
arpl
mov
sbb
fisubrs
test
movsb
fcmovb
dec
sahf
jns
cmp
sbb
and
push
dec
xchg
dec
jmp
add
int
mov
push
adc
add
inc
sbb
fsts
aaa
ja
aaa
sub
ljmp
xchg
call
jno
loope
into
insb
loope
sbbl
sbb
popa
fiadds
into
into
js
std
mov
test
pop
adc
shrb
int
mov
scas
mov
push
xchg
int
jne
push
cltd
test
push
dec
jo
xchg
mov
daa
xor
hlt
lahf
xchg
pop
push
cmpsb
jo
iret
pushf
push
lds
add
or
scas
mov
ror
js
icebp
filds
or
mov
stos
jle
incb
mov
jle
pushf
adc
xchg
stc
mov
sbb
mov
mov
leave
imul
out
dec
pcmpgtb
cmpsb
sub
cmp
xor
fcompl
adc
or
mov
pop
mov
outsl
popl
mov
adc
xor
pop
pop
insl
jecxz
xchg
dec
adc
sub
stc
jns
dec
fs
mov
out
clc
lret
xor
test
xchg
pop
xlat
or
stc
mov
inc
rorl
pusha
arpl
jle
sbb
jp
xchg
movsl
gs
notb
xchg
jo
push
mov
or
clc
and
xor
push
rorl
inc
es
fldl
icebp
es
mov
test
insb
xchg
xchg
xor
je
lcall
inc
into
fs
pop
add
dec
sub
inc
insb
fiadds
js
dec
std
cld
jmp
jge
arpl
rorb
aad
jmp
pop
mov
jb
add
popa
jo
xchg
xlat
xor
or
dec
inc
cmp
outsb
push
loop
add
push
iret
fsubr
adc
push
roll
push
in
daa
ss
sbb
push
xchg
loope
pop
pushf
sbb
or
jmp
cmp
scas
xchg
lods
or
pusha
mov
inc
jne
aad
mov
loop
insb
out
xor
push
out
daa
mov
mov
test
arpl
push
push
jnp
push
repnz
lahf
mov
insl
inc
shlb
ret
fs
cmp
test
mov
fs
movsl
in
xchg
scas
or
enter
and
xor
leave
pop
and
jo
dec
mov
aad
pop
stc
pop
mov
mov
jmp
push
mov
mov
mov
jg
hlt
mov
movsb
jns
mov
or
ljmp
sahf
push
ljmp
add
in
outsb
sbbl
xchg
mov
sarl
in
mov
in
mov
fnstsw
mov
pop
mov
lods
iret
bound
mov
shlb
xchg
in
inc
mov
push
add
pop
and
dec
loopne
mov
lret
jle
mov
test
loopne
imul
pop
adc
pop
sub
repnz
and
je
clc
loope
or
xor
cmp
xchg
inc
rcll
cmpsl
dec
xchg
jl
pop
xchg
call
outsb
inc
fisttpl
in
inc
cltd
inc
std
xchg
insb
lret
pushf
loope
mov
notb
stos
cmpsl
dec
sub
and
jle
adc
shll
mov
adc
dec
sub
lahf
xchg
inc
loope
daa
xchg
sbb
arpl
jo
stc
cs
dec
sub
lcall
inc
out
pop
jg
add
mov
xlat
dec
push
mov
or
out
and
fnstcw
inc
lahf
icebp
xchg
and
pop
or
pop
xor
sbb
lcall
mov
add
outsb
xor
dec
lds
les
push
mov
mov
inc
es
adc
fxch
xchg
jno
sub
dec
jne
push
ljmp
in
lret
or
push
xchg
cmpsb
hlt
lret
sbb
in
cmp
and
push
scas
loop
dec
adc
pop
test
cmp
pop
repnz
push
adc
pop
subl
in
sbb
orl
cmp
bound
or
out
push
loop
jl
add
push
icebp
in
pop
xchg
loopne
dec
sbb
idiv
subl
outsb
cmpsb
and
mov
and
insl
scas
repnz
mov
in
ja
test
imul
bound
jo
jno
inc
adc
xchg
cmp
cmp
add
cmp
stos
xchg
mov
xchg
dec
and
int3
inc
jge
orl
xor
lea
orb
cwtl
shlb
jle
pop
out
or
cmp
push
lret
mov
aad
xor
inc
xor
jb
pop
jb
mov
add
cmp
mov
mov
test
fdivl
lcall
inc
xchg
rcll
add
sbb
int3
ror
mov
adc
and
out
in
mov
pop
dec
mov
mov
mov
daa
subl
mov
pop
xchg
test
clc
stc
imul
rclb
inc
cmpsb
xchg
mov
pop
or
jecxz
aam
dec
notl
and
fs
adc
out
ja
pop
jg
xchg
dec
mov
mov
push
inc
imul
bound
jbe
rcll
out
cmpb
pop
jb
es
imul
addr16
sbb
mov
stos
sarb
jg
or
adc
clc
iret
fbstp
mov
and
push
es
sbb
sub
shr
inc
test
loope
adc
xor
imul
jmp
jbe
jne
jp
push
dec
adc
repnz
repnz
xchg
inc
sti
mov
js
sahf
ds
sarl
xor
pop
dec
imul
lods
test
in
cli
add
sub
jae
dec
dec
imul
xchg
pop
es
mov
sub
jo
icebp
ds
sahf
add
movsb
scas
fwait
inc
loopne
pop
aad
add
sbb
icebp
inc
pop
repnz
jne
xor
popf
add
and
cmp
and
and
scas
jae
jmp
enter
mov
mov
gs
inc
lahf
cltd
dec
lahf
jbe
sbb
fsubs
repz
imul
cmp
inc
push
or
and
lock
inc
mov
xor
lock
xchg
adc
mov
arpl
inc
out
test
fldenv
sbb
mov
jmp
fistps
fsts
iret
in
add
les
scas
xchg
or
stos
mov
pop
mov
lods
push
mov
xor
push
test
dec
test
les
xchg
mov
mov
jns
ja
gs
push
mov
out
pop
dec
add
or
insl
xchg
pop
test
xchg
subl
mov
gs
lcall
mov
sub
outsl
in
push
xor
and
out
adc
stc
add
or
cmc
sti
jb
ljmp
addr16
push
sbb
lock
adcb
movsb
adc
scas
xchg
push
mov
pop
mov
add
in
mov
push
mov
add
mov
mov
sub
cmpsb
cmp
outsb
dec
divb
aas
mov
mov
jns
adc
inc
bnd
jne
aas
in
dec
mov
cmp
mov
pop
fistl
or
cmp
xchg
jl
shrl
sub
or
mov
divb
jns
inc
mov
xchg
leave
lock
xor
jge
psubsw
insb
movsl
push
push
mov
and
fdiv
mov
fstps
popa
pop
popf
out
loope
cs
mov
adc
loop
call
mov
push
xlat
fisubrs
jno
fs
aaa
jne
aam
out
cmpsb
push
dec
jp
out
cs
sub
pop
cmc
mov
sbb
arpl
aas
pop
lods
sbb
pusha
scas
xor
xchg
dec
js
iret
adc
filds
dec
push
aad
sbb
mov
notl
loope
fbstp
mov
add
xchg
fcompl
pop
xchg
cmp
fwait
stos
cmc
dec
das
dec
sbb
ja
xor
or
xor
fsubl
insb
sbb
adc
jne
xchg
mov
aad
mov
jp
push
cmp
into
mov
pusha
or
adc
adc
push
add
sub
aam
hlt
inc
shll
ffree
jnp
lea
fwait
mov
shrl
je
lret
movsb
movsb
testl
adc
dec
mov
xchg
inc
iret
pusha
popa
mov
rep
mov
adcb
add
or
popf
jecxz
fildl
fdivrl
jnp
mov
fwait
cmp
iret
jp
xchg
sub
lea
lret
les
int3
lahf
mov
pop
cmp
loope
dec
xchg
mov
outsl
sub
xchg
pop
sbb
stc
cld
sub
repnz
js
pop
mov
sbb
test
shl
sti
pop
icebp
adc
and
sbb
sub
mov
sahf
and
push
jbe
mov
repnz
je
mov
cld
inc
hlt
fidivl
jl
sbb
out
je
pop
scas
js
mov
lock
ror
xchg
sub
shll
xor
stos
jg
in
scas
push
cs
in
sbb
pop
jle
dec
rorb
insl
ds
gs
stc
es
dec
aam
in
pop
xchg
adc
std
aas
lcall
push
and
lock
or
cmp
pop
push
lahf
lock
mov
cmp
std
ljmp
jmp
repz
imul
xchg
cmpsl
sub
out
mov
aaa
ds
pop
ja
out
pop
xor
ja
mov
sti
mov
or
push
mov
sbb
push
dec
clc
push
jecxz
pop
add
push
sub
pop
shl
mull
sub
aad
fucom
sbb
xchg
add
ja
shrb
mov
jbe
add
mov
test
test
in
and
sarb
outsb
orb
jne
test
popa
mov
adc
aas
stc
out
lea
mov
adc
pop
pop
fprem1
pop
cmpl
movsl
or
stc
shl
dec
fldenv
sub
mov
jmp
mul
xorb
adc
aam
pop
ds
lods
ds
xor
je
mov
test
movsl
jmp
iret
cmpsl
sub
mov
mov
cwtl
aad
adc
jmp
mov
mov
sub
popa
sub
or
in
ja
xchg
pop
in
pop
sub
scas
cmp
xor
inc
aad
dec
push
rcrl
dec
xor
mov
xor
xor
xchg
push
push
stos
out
hlt
add
cmp
or
sbb
xor
rep
leave
cmpb
cld
cld
adc
adc
mov
out
add
xchg
pop
in
sub
les
in
aaa
cmp
ds
mov
mov
and
sti
cld
push
jecxz
fistl
loope,pt
and
jl
ss
mov
shlb
pop
or
fnstenv
push
movl
mov
sbb
inc
mov
add
mov
imul
movsb
add
ja
int
sahf
sub
jl
les
pop
sbb
out
addr16
add
jp
mov
ret
dec
or
loop
cld
loopne
cmc
adc
stos
imul
mov
aaa
and
inc
mov
repnz
push
and
loopne
outsl
fwait
mov
jmp
or
inc
push
in
lea
push
repnz
xchg
shrb
hlt
mov
pusha
push
lret
das
call
lods
stos
inc
and
pusha
adc
aad
push
loope
cmpsl
cmp
enter
xchg
pop
jmp
cmp
cs
leave
clc
mov
or
xor
inc
loope
out
loope
sbb
inc
push
lret
push
loop
enter
jge
xor
aad
imul
in
lea
incl
stc
insl
xor
xchg
dec
decb
lods
sub
sbb
lret
divl
icebp
sbb
out
testl
jbe
inc
outsl
push
cmp
lea
sbb
mov
int3
dec
pop
dec
lret
repz
pop
enter
dec
cmp
mov
push
mov
stos
xor
out
inc
xchg
in
jge
div
lahf
inc
js,pt
cmp
lcall
arpl
xlat
sub
jl
cmp
dec
and
fsubrp
mov
xor
push
jp
ret
and
jnp,pt
jge
sub
ds
sbb
test
les
enter
notl
sbb
pop
xchg
sub
pushf
fwait
add
addb
fs
xchg
cs
sub
cmp
jno
xor
cmc
xchg
ss
cwtl
roll
mov
js
loop
adc
xor
add
add
push
arpl
aam
pusha
sbb
mov
cwtl
idivb
inc
orb
sti
sbb
inc
adc
pop
fs
xchg
cmp
lcall
aaa
scas
test
or
xchg
ficoms
insl
sti
dec
jae
adc
xlat
push
es
sub
mov
out
ss
test
popa
iret
xchg
add
sub
mov
fwait
mov
repnz
sub
stos
in
add
pop
into
shlb
int3
mov
push
testb
mov
mov
gs
rclb
xor
xor
pop
or
sbb
fldt
jne
jge
xor
inc
push
loopne
xor
int
pop
mov
int
or
rcr
rcrb
imul
xchg
ss
lcall
dec
mov
sahf
mov
cwtl
lcall
test
aaa
subl
jp
mov
mov
inc
jg
ja
mov
cmc
shl
out
ret
xchg
xlat
pop
loop
cmp
or
mov
cld
pop
sti
adc
dec
cmp
ret
lret
jmp
in
and
cmpsb
outsb
xorl
mov
sub
aas
cmp
and
iret
enter
dec
lcall
jbe
xchg
test
lcall
mov
out
shll
mov
push
out
loopne
inc
data16
adc
and
popf
ljmp
scas
mov
outsb
loope
push
xchg
fcoms
sub
mov
std
out
sahf
pop
clc
cmc
push
js
mov
dec
fldt
or
pusha
dec
in
js
cwtl
adc
mov
dec
lret
inc
mov
in
or
adc
rolb
test
mov
mov
adc
scas
jae
jbe
add
or
xchg
or
jmp
xor
pop
scas
pop
inc
aas
fistl
cmp
aaa
sbb
mov
push
inc
xor
add
cld
sbb
rcl
add
jbe
mov
and
jl
in
pop
adc
lods
pop
scas
aam
mov
cmp
test
dec
cltd
and
and
xor
sub
dec
and
xlat
leave
mov
aaa
push
mov
stc
cmp
lret
test
aas
inc
pop
add
shll
in
lods
xor
out
insb
inc
repz
daa
leave
lret
fsubs
pop
mov
int
pop
repnz
in
js
xchg
daa
push
popa
jmpw
sbb
mov
xchg
es
ffree
repz
gs
adc
loop
cmp
cwtl
loope
mov
loope
push
cld
dec
inc
push
lds
rcrb
insl
rclb
mov
cmp
mov
pop
sbb
pop
cmp
jg
add
aam
inc
xchg
and
sub
daa
cli
aaa
dec
inc
or
sti
inc
add
stos
mov
sub
sub
repnz
inc
mov
push
loope
fidivrs
outsb
fidivl
dec
and
enter
cmp
cltd
imul
sbb
dec
xor
ret
cmp
shll
pop
sbb
int3
jl
loope
jmp
and
clc
dec
lods
divb
fsts
fsubrs
jnp
hlt
stos
into
sbb
dec
addr16
cmpsl
inc
jecxz
lods
scas
mov
daa
cld
cld
insl
call
loope
jmp
sbb
pop
mov
push
jns
in
xor
imulb
push
ret
js
adc
dec
xchg
add
xlat
push
mov
pusha
pop
mov
push
cmp
stos
addr16
lcall
lret
rcr
cmpsl
in
mov
pop
icebp
out
stc
mov
sti
push
iret
ss
mov
loope
mov
push
mov
xor
orb
inc
mov
jp
lahf
mov
lods
sti
push
mull
outsl
xchg
cmc
cmc
and
add
cmp
les
sarl
mov
sub
sbbl
insb
and
aam
dec
mov
out
imul
inc
movsl
inc
fsubs
jmp
andb
ljmp
scas
cmpsb
sub
mov
shll
jb
lea
aad
imul
bound
mov
sub
mov
arpl
push
lods
inc
jne
fs
lock
adc
push
adc
into
push
int3
jns
jae
mov
adc
add
arpl
repz
add
mov
jbe
mov
mov
dec
pop
pop
adc
inc
vcmpsd
jnp
leave
leave
inc
enter
sbb
mov
or
cmp
cltd
hlt
or
xchg
sub
jne
dec
and
scas
jbe
shl
mov
dec
call
inc
in
ljmp
sbb
dec
sub
notb
movsl
addr16
nop
push
xor
ficompl
call
inc
fwait
fs
xchg
ja
pusha
stc
sbb
clc
jecxz
bt
push
sub
add
inc
mov
je
aam
or
jl
pop
ficoms
scas
dec
rcrb
movsl
popa
test
sub
jae
je
call
fs
lds
sub
push
insb
out
or
bound
or
pop
mov
imul
jp
outsb
pop
lahf
inc
fstps
xor
jl
jnp
ret
jp
icebp
jle
mov
xor
sbb
xor
adc
push
loopne
mov
fisubrl
mov
out
xchg
or
sub
xchg
std
and
into
jl
dec
outsl
rolb
dec
cmpl
dec
test
movsl
les
cmp
fisubs
imul
lret
sbb
aaa
into
movsb
iret
int
jmp
cmp
jg
mov
jbe
fnstsw
add
loopne
push
inc
inc
mov
int3
mov
pop
push
or
enter
jl
inc
mov
jmp
ret
xchg
push
and
ret
or
sarl
lock
fabs
rorb
shrl
sbb
scas
int3
cmp
lods
mov
test
rclb
mov
inc
lods
push
test
cmp
or
jne
mov
jno
scas
push
push
mov
pop
clc
cmp
pop
cli
sub
add
mov
loope
mov
lret
push
mov
repnz
in
cmc
cmp
push
xchg
ss
ret
push
loopne
xchg
mov
ja
in
jecxz
push
mov
lods
imul
mov
lock
mov
lret
ljmp
cmpsl
pop
stos
or
ret
mov
iret
test
das
xlat
lret
mov
inc
std
ja
push
lock
in
mov
mov
cwtl
or
push
cmp
mov
dec
sub
iret
sbb
inc
call
data16
ljmpw
cmp
js
inc
into
into
xchg
xor
pop
inc
sbb
mov
add
fildl
fildl
sub
push
loopne
clc
cmp
aas
fnsave
in
xorl
add
inc
pushf
push
cmc
xorb
lret
lcall
mov
push
dec
pop
ljmp
loopne
mov
dec
rorl
or
test
stos
mov
or
dec
or
pop
add
adc
mov
or
daa
mov
mov
lods
pop
xchg
push
xchg
loopne
jl
pop
inc
or
subb
rorl
inc
test
or
cmc
int3
add
xchg
sbb
dec
rclb
xor
xor
xchg
lds
jmp
mov
dec
arpl
jns
mov
fdivrp
lds
push
adc
add
inc
insb
ficoms
stc
jmp
adc
movsb
or
pop
pop
jbe
mov
push
in
orb
and
add
mov
mov
pop
movsl
adc
jne
cwtl
or
jp
add
sbb
lret
jmp
in
push
mov
add
cmp
ficoms
jo
xchg
jle
add
jnp
cmpsl
out
xchg
adc
add
xchg
lds
mov
call
add
ljmp
mov
mov
push
test
and
outsb
and
adc
mov
je
jle
xchg
sub
fdivs
shrl
sbb
xchg
add
xchg
sub
add
test
shll
lret
lods
les
popa
jecxz
push
sub
sub
xor
cmpsb
add
pop
or
add
push
inc
sarb
mov
or
clc
cmp
inc
mov
lock
inc
xor
sub
andb
out
es
insb
movsb
loop
mov
add
pushf
popa
andb
add
andb
mov
sub
mov
rcll
out
fisttpl
push
out
cltd
push
jnp
insb
adc
or
push
call
data16
cmc
mov
cs
jle
adc
push
arpl
dec
in
test
into
pop
push
mov
fldl
fwait
mov
adc
or
pop
xor
add
lret
mov
lcall
cmpsl
mov
pop
pushl
incb
jl
fcomps
push
repnz
shl
cmp
pop
popa
out
call
out
add
xchg
jp
mov
add
add
pop
sbbb
ja
mov
mov
scas
push
jmp
dec
ret
loopne,pt
clc
int3
stc
cmpb
xchg
das
lea
adc
lahf
rorl
xor
xchg
in
loopne
out
lods
jecxz
cmp
sahf
inc
ficomps
les
cltd
mov
pop
jno
js
andl
mov
mov
mov
and
dec
pop
aam
mov
mov
lock
ficomps
dec
mov
data16
dec
jno
das
in
push
pop
outsb
inc
fs
inc
sahf
aas
dec
jge
je
test
addr16
pop
loop
jp
shr
adc
mov
lret
pop
mov
dec
enter
add
jae
ret
push
inc
and
cld
mov
test
gs
aas
ficoms
mov
nop
sub
cmp
out
mov
cmp
add
mov
jne
sbb
xor
mov
sbb
incl
add
push
lcall
sbb
hlt
or
int
jecxz
je
ja
shrl
sub
push
sbbb
clc
xchg
jg
mov
mov
or
mov
and
pop
xor
clc
gs
insb
inc
pop
pop
or
dec
sahf
add
push
out
sarb
inc
mov
mov
pop
jb
leave
jne
imul
incb
mov
dec
cmc
mov
mov
fdiv
mov
push
jnp
jg
stos
jnp
cmpsl
inc
cs
inc
xchg
dec
mov
ja
sahf
push
dec
sub
jo
dec
mov
icebp
mov
notb
cmc
or
movsb
add
int
sub
jb
andb
test
loope
mov
jae
mov
sahf
cli
hlt
sub
and
sub
stos
xor
add
mov
xor
pop
adc
cmpsl
and
je
xor
push
xchg
mov
psubd
jno
xor
mov
mov
bound
mov
inc
push
mov
mov
mov
or
inc
stos
les
or
pop
mov
adc
pop
int
sub
xchg
scas
mov
jae
or
iret
orl
and
push
std
fsubl
add
test
sbb
fidivrl
pusha
lret
out
sbb
sbbb
in
mov
fiadds
mov
jmp
test
lea
clc
cmp
adc
cmp
add
sub
sbb
cmc
pop
xacquire
dec
fcoms
mov
xchg
outsl
out
mov
cmp
mov
cmc
out
stos
popa
ret
pop
xor
gs
xchg
aas
mov
adc
cld
lret
nop
or
pop
divl
xor
dec
cs
jb
inc
mov
push
xchg
push
insl
roll
or
lret
adc
xchg
xor
sub
push
or
mov
lods
int
dec
pop
lret
dec
mov
mov
aad
loope
xchg
xchg
fnstsw
inc
pop
rcll
insb
sbb
mov
jb
aas
popa
mov
jl
jo
sbb
loop
jne
lock
mov
mov
or
js
dec
stos
push
sbb
out
subb
lret
jmp
xor
ds
addl
add
aaa
mov
rorb
outsb
dec
stc
in
pop
scas
stc
loope
cltd
pop
jbe
sub
cli
mov
cwtl
leave
push
mov
int
jb
mull
aam
outsl
jmp
inc
add
les
adc
dec
aad
pop
pop
movsb
jp
adc
add
pop
dec
rolb
sbb
lahf
sub
pop
mov
xchg
sub
or
icebp
stos
cmp
lods
ret
std
dec
addl
call
add
mov
and
loop
add
test
jns
pop
std
mov
iret
jnp
sbb
sub
mov
or
cld
fs
jle
lret
jb
xlat
xchg
iret
scas
movsl
insb
push
xor
push
test
fwait
sub
sbb
add
addb
int
mov
fdivrl
mov
adc
jp
jmp
arpl
mov
adc
cltd
push
bnd
push
clc
inc
rcll
int
mov
lods
add
dec
mov
xchg
ja
dec
mov
and
pop
xchg
xchg
cmpsl
loop
fwait
scas
mov
dec
pushf
andb
sti
ret
push
pop
pop
sbb
loop
inc
sbb
xchg
push
sbb
add
lds
loope
push
inc
mov
fwait
mov
stos
jnp
lea
test
jge
push
mulb
insb
sarb
mov
cvttps2pi
rcr
pop
aaa
xchg
mov
mov
in
sahf
inc
movl
loop
or
cmp
pop
outsl
movsb
cmp
cmp
or
push
lret
addl
arpl
out
pop
shrb
pop
stc
sub
push
cmp
cmp
mov
push
jno,pn
sbb
ret
lea
jge
cmpsb
xchg
cmpsl
sbb
mov
out
lods
out
imul
bound
push
int3
out
imul
cmp
loop
and
shr
bound
insb
inc
push
cmp
lods
dec
icebp
jo
fnsave
leave
loope
stos
in
sub
pop
adc
or
mov
cmpsb
aam
push
jae
xor
cmp
andl
cmp
subb
test
scas
sub
jns
in
mov
jecxz
mov
js
pusha
int3
adc
cli
lock
inc
or
jno
fwait
cmp
and
pop
icebp
or
and
out
and
gs
push
movsb
loop
dec
mov
js
repnz
leave
repz
mov
cltd
mulb
push
imul
js
push
hlt
test
das
mov
loopne
or
inc
dec
fwait
das
push
and
js
ljmp
inc
enter
mov
xchg
rclb
js
in
cmp
int
cmpsl
cmp
mov
fcom
pop
sub
dec
cmpsl
pop
inc
dec
xchg
popf
hlt
outsb
dec
mov
dec
imul
addr16
es
jge
cmpb
mov
or
and
adc
lcall
push
mov
outsb
push
mov
testl
mov
lcall
mov
mov
mov
inc
push
sbb
push
push
repz
scas
push
mov
nop
jg
out
decb
xchg
mov
test
lahf
jmp
push
mov
rcll
stc
jne
mov
fnstsw
adcb
je
sub
test
cltd
pop
bound
push
mov
rorl
sbb
fmuls
std
je
dec
jo
lods
mov
xchg
dec
fldt
and
pop
mov
test
pushf
xlat
dec
mov
pusha
sub
mov
xchg
out
xor
cmpsb
shl
jge
mov
sti
pop
mov
imulb
xchg
enter
gs
pop
cmc
int3
mov
fistpll
mov
adc
or
and
loop
nop
fldcw
ljmp
bound
pop
into
and
cmp
jg
jns
dec
or
std
xchg
movsl
mov
je
pop
push
out
inc
cmp
push
sub
clc
mov
lods
loop
sbb
filds
cmp
inc
fadds
push
es
mov
cmp
sbb
jae
cld
cmc
or
out
orl
test
sbb
sar
mov
jns
scas
cmp
mov
pusha
fisubl
and
add
mov
cmp
les
rcrb
stos
fwait
and
loopne
adc
in
mov
aad
xchg
fmull
pushf
jg
repnz
hlt
xchg
xor
in
mov
xchg
clc
scas
mov
movntps
inc
dec
adc
jnp
sbb
lret
insl
xchg
sbb
push
out
mov
xor
or
xchg
jae
dec
push
lahf
adc
cs
jle
cli
imul
xor
fstl
movb
and
and
in
cwtl
mov
or
enter
sti
sbb
clc
pop
and
enter
or
mov
cmpsl
mov
dec
outsb
pop
pop
lds
rolb
or
sub
sbb
pop
jmp
and
sub
dec
dec
cmp
cltd
pop
and
sbb
adc
push
adc
divl
dec
fcmovnb
push
dec
mov
add
or
xor
jae
arpl
dec
fcmovnb
or
es
jl
and
add
cmp
mov
pop
mov
cmpsl
jmp
mov
xchg
xchg
daa
clc
scas
xor
popf
inc
jns
adc
dec
sub
fsub
cmp
push
push
or
xor
adc
es
imul
push
xchg
jne
les
addr16
and
fisubs
pop
pop
icebp
sbb
scas
sub
mov
pop
pushf
in
je
xor
pusha
xchg
ljmp
xor
or
adc
xchg
add
xchg
mov
aad
add
daa
movsl
ljmp
scas
push
xor
xor
jno
adc
mov
mov
xchg
add
lea
pop
push
and
xor
jmp
rolb
int
cmp
fdivr
scas
lock
sub
and
mov
cmpsl
sbb
rcr
cmp
ljmp
xchg
adc
jge
ret
ljmp
mov
inc
mov
and
into
jbe
cmp
sarb
jns
mov
jno
fs
das
mov
cmp
cmpsl
mov
cmp
movl
andb
fwait
pop
popa
fstl
dec
cmp
dec
sbb
lahf
sahf
mov
jecxz
aad
push
adcb
adc
sbb
pop
je
xor
lods
and
lret
std
xor
sub
dec
and
rclb
ret
ja
adc
mov
push
lret
mov
loope
ret
mov
xor
aaa
gs
jns
or
xchg
jne
fisubrs
mov
jne
fs
lock
inc
pushf
aaa
testb
mov
and
rorl
div
pop
sahf
add
jle
mov
mov
pop
dec
jl
mov
int
push
popf
sbb
lret
pop
inc
mov
mov
jns
mov
and
jge
test
hlt
fldt
mov
sub
pop
sbb
pop
push
mov
imul
adc
cmpl
jo
enter
cmp
imul
popf
cli
push
dec
sub
sbb
in
pop
test
loopne
test
pop
xchg
push
sbb
stos
shlb
hlt
lods
cltd
dec
lods
push
inc
imul
cltd
push
xchg
push
xchg
push
xor
nop
les
push
cltd
or
pop
lock
jp
loopne
or
mov
js
mov
call
pop
xchg
ret
popf
and
pop
cmc
jb
shrb
or
ss
outsb
xor
mov
call
nopl
out
test
and
cmp
sbb
cmp
mov
lcall
mov
xchg
les
mov
out
sbb
and
push
scas
jne
lcall
daa
add
adc
outsb
adc
sub
add
test
fldt
or
es
push
cld
jae
mov
nop
outsb
loopne
mov
mov
push
jnp
movb
jnp
ret
sub
dec
xlat
dec
push
cmp
mov
push
push
lret
cmp
push
loopne
jl
adc
cmc
push
or
lret
fwait
out
push
pop
addr16
push
cmpsb
movsb
or
rcl
mov
add
into
fcompl
mov
inc
rcrl
inc
inc
clc
popf
jecxz
sub
cmc
jne
adc
int3
ja
inc
in
fcoms
out
test
sub
xorl
popf
movsb
jle
push
sti
xlat
sub
push
pushf
xor
or
insb
int
arpl
divb
adc
push
jp
xor
add
aam
rcrb
xor
test
test
push
or
nop
pop
cwtl
dec
sbb
pusha
pop
cli
inc
mov
pop
fmull
adc
mov
pushl
push
loop
aad
daa
sbb
push
pop
or
das
test
add
xor
imul
icebp
in
mov
mov
jmp
leave
cmp
push
out
push
sub
jb
or
ljmp
xor
xchg
fs
push
inc
aam
mov
out
ljmp
mov
sbb
fiaddl
jae
test
and
lods
mov
idivb
das
xchg
sti
mov
mov
outsl
jp
shll
fidivs
cli
ss
out
adc
jge
je
mov
int
ds
mov
call
in
push
loop
inc
mov
pop
fwait
inc
xlat
bound
xor
xchg
adc
mov
mov
test
jmp
jecxz
mov
and
mov
testl
cmp
or
aam
mov
scas
push
and
xor
cmp
or
nop
fadd
jp
insl
popf
stos
pop
jle
sar
mov
int
nop
jae
icebp
aam
sarl
data16
jl
out
scas
add
lock
mov
mov
cs
repz
testl
mov
mov
lock
mov
arpl
dec
inc
ss
cld
mov
test
ss
fcoms
mov
cwtl
push
push
sbb
js
outsb
leave
lret
push
pop
cs
and
sub
xchg
cmp
cltd
push
adc
jmp
pop
mov
mov
pop
mov
push
lret
xor
call
or
shlb
push
sub
cmc
notb
test
aas
cmp
inc
adc
lret
dec
and
bound
loop
mov
into
jge
pop
cld
aas
cmc
add
push
cli
roll
pop
ret
cmpsl
push
mov
or
mov
sub
or
aam
rorl
pusha
add
xlat
sub
jmp
cmpsl
inc
dec
push
out
sbb
sahf
mov
mov
loopne
and
adc
test
dec
and
xchg
and
jne
int
adc
rclb
xchg
xor
sub
mov
xchg
and
jns
mov
jne
icebp
aad
dec
loop
mov
cmp
into
pop
xor
xchg
insl
ret
insb
in
das
cmp
mov
and
push
in
sbbl
cmp
aad
clc
mov
inc
jnp
jge
lret
push
lahf
jae
jge
fwait
cli
sub
xchg
add
fsubs
sbb
mov
inc
addl
mov
aas
adc
pop
stos
fistpl
test
ret
incb
call
popf
pop
jno
jle
pusha
ja
loopne
and
cmp
jge
pop
cmc
adc
jp
mov
aad
jle
sub
fdivrs
aaa
daa
pop
inc
inc
and
or
rcll
inc
mov
and
pop
cmc
leave
mov
in
loopne
sbb
stos
and
subb
pop
sub
inc
mov
sarl
sbb
dec
add
pop
pop
push
mov
and
push
sbb
mov
jg
jae
cmp
out
test
push
jle
cmp
lahf
add
das
mov
std
cmpsb
cmp
mov
cltd
stos
inc
sbb
xchg
insl
int
pop
ds
out
imul
add
add
sbb
sub
shr
push
int3
jno
or
inc
rcll
hlt
jge
mov
xor
rorb
icebp
test
ds
fcmovbe
add
fstpt
xor
popa
lahf
xchg
adc
addr16
cmp
pcmpgtd
push
cmp
xchg
pop
ds
or
sbb
movsl
push
inc
lock
lret
jb
sub
enter
xor
xchg
push
cwtl
sub
jmp
ret
sbbb
push
dec
ja
or
mov
or
scas
mov
ret
push
mov
cmpsl
adc
xchg
cmpsl
add
lret
lods
pop
cmp
rolb
ss
insb
mov
push
ret
add
sub
lret
fs
dec
into
int
shll
mov
sbb
arpl
pop
mov
mov
sbb
iret
pop
jmp
cmpsb
push
sbb
mov
outsl
xchg
lahf
xchg
push
arpl
rorl
mov
fdivs
pop
xor
test
ja
cmpsl
push
sbb
mov
jae
add
and
repz
rorl
movsl
jnp
lahf
add
imul
out
cmp
aaa
cmpsb
mov
jp
sub
lods
jmp
imul
xchg
iret
add
lds
mov
cmp
std
cmc
sbb
icebp
stc
or
mov
mov
fisubrl
mov
mov
xor
imul
jp
das
jmp
rcrl
lea
test
popa
bound
aam
int3
mov
ds
jb
pop
jae
push
pop
jmp
fwait
and
inc
scas
shll
or
andb
gs
test
xor
mov
add
in
adc
cmp
cmpsl
movl
jno
dec
mov
pusha
ja
test
loope
push
sub
rcll
xchg
call
pop
ficoms
out
nop
push
and
adc
xor
imul
fsts
inc
cmp
mov
add
aam
mov
dec
lds
add
call
jmp
push
inc
out
sbb
inc
dec
inc
fistl
push
ss
or
mov
pusha
sbb
push
mov
dec
jge
add
test
cmp
cmc
lcall
push
mov
push
fildl
je
scas
add
test
sub
push
push
cvtpi2ps
or
imul
cltd
adc
sub
pop
pop
aad
int3
jns
xchg
sub
imul
hlt
stos
incl
jno
ja
mov
cmp
sbb
push
aas
faddp
sarl
cmp
jne
enter
adc
inc
mov
inc
adc
pop
sti
adc
add
lahf
andl
sarb
lock
jbe
mov
cmp
mov
fs
mov
jg
mov
and
lret
push
inc
xchg
mov
divb
shrl
aas
pop
xchg
or
mov
and
ficoml
xor
mov
xchg
mov
daa
dec
cmp
ret
lods
fcmovnb
lods
jo
and
shl
addl
mov
mov
push
inc
or
push
jge
lret
daa
jae
and
in
icebp
cmp
xorb
in
int
lret
jae
add
mov
push
add
mov
leave
mov
imull
sahf
test
cmp
stc
cs
xlat
pop
jb
xor
xor
or
jo
int
nop
out
jecxz
and
in
mov
je
inc
bound
in
repz
icebp
mov
outsb
sub
or
lcall
adc
dec
js
or
stc
in
cmpsb
stc
lahf
inc
cmp
inc
cld
cld
add
inc
das
in
lcall
push
add
rcrb
dec
es
adc
mov
mov
sbb
mov
mov
flds
pop
add
lods
ret
cs
add
es
daa
dec
daa
jmp
or
in
repz
add
xor
repnz
stos
adc
sub
jl
xor
xor
scas
add
sarl
loop
fnstsw
ret
cmpl
sahf
cmp
jne
sbb
adc
das
fucomp
stos
ret
mov
xchg
mov
push
mov
aas
mov
push
lahf
outsl
add
lock
cmp
test
mull
in
dec
stos
mov
das
lock
into
xor
addr16
roll
mov
xchg
nop
je
fbld
sub
or
adc
into
int
add
lret
mov
sbb
adc
jle
or
out
xchg
and
ss
outsl
and
negl
cmp
push
and
ret
jp
push
push
xchg
xor
or
mov
jae
jbe
dec
data16
setae
ficompl
mov
xchg
dec
adc
test
xchg
ficomps
imul
ds
aas
add
enter
xchg
mov
xorl
divb
sbb
cmp
inc
add
gs
leave
or
movsl
clc
out
or
lret
cmp
mov
add
and
fldcw
ret
or
lcall
in
addr16
xor
inc
mov
sub
mov
fsub
js
fxch
imul
jge
loop
mov
rclb
mov
push
lret
lods
xor
cmpl
cwtl
icebp
mov
xor
test
pushl
cmpsb
aad
mov
pusha
push
rclb
fs
jo
out
or
fwait
mov
push
in
jo
movsb
testb
int3
adc
sbb
sar
js
cmp
xor
decb
adc
fsts
fimuls
aaa
and
push
mov
sbb
jo
add
movsb
xor
add
or
xchg
repz
dec
xchg
jp
jg
cmpb
jb
jecxz
mov
sbb
mov
js
fsubl
lods
rol
jp
rclb
stos
lret
popa
cmpsl
adc
inc
jnp
inc
icebp
aas
fmul
pushf
rcll
inc
gs
mov
lock
pusha
lea
mov
das
daa
push
int3
cmpsl
in
xor
mov
jp
lods
xor
in
pop
and
aas
push
jnp
subl
inc
adc
sub
or
fnstcw
fdivr
sti
and
mov
repz
xchg
or
in
mov
cmpl
stos
mov
mov
scas
pop
imul
mov
inc
mov
int3
lcall
mov
test
cs
push
lods
push
mov
jb
call
js
jecxz
out
lods
mov
add
sbb
incb
pop
jg
cld
cmp
pop
cld
push
xchg
lret
jecxz
jae
insl
and
ret
cs
sbb
push
mov
push
rep
mov
imul
rcl
cltd
js
xchg
sarb
fbstp
mov
leave
bound
mov
add
enter
lods
xchg
into
cmpsl
jbe
xchg
and
scas
pop
in
loop
out
xor
xchg
add
pop
js
int3
dec
pop
and
inc
dec
xchg
sub
lea
fidivl
in
loop
popa
and
mov
push
adc
popa
pop
xchg
rorb
xor
out
pop
arpl
xlat
faddp
mov
sarb
adc
sahf
xchg
mov
or
sub
push
imul
pop
fsubp
ds
loope
jmp
cwtl
jae
pop
cld
ret
inc
inc
aam
dec
adc
inc
xor
push
xchg
hlt
and
or
pushl
mov
xor
jmp
push
adc
push
mov
xchg
push
aam
pop
test
test
adc
je
pushf
ret
shlb
in
xchg
inc
addr16
jge
adc
dec
out
ret
xchg
add
sbb
and
in
out
jl
mov
gs
pop
adc
sub
cmpl
enter
jmp
dec
cmp
lret
test
dec
insl
mov
dec
mov
xor
xchg
push
mov
out
xor
imul
outsl
outsl
fnstenv
push
ret
adc
xor
cmp
rcll
mov
stos
xchg
rcl
clc
mov
testb
sbb
shll
loope
pop
clc
pop
ret
fwait
mov
xchg
push
xchg
fwait
rcrl
mov
pop
sub
nop
or
xchg
into
jb
mov
rcrb
or
sub
inc
xor
stc
adcb
jge
jo
sahf
xor
insb
cwtl
imulb
xor
jecxz
test
push
js
xlat
mov
and
inc
ret
inc
enter
icebp
jno
cmpsl
jnp
jnp
loope
cmp
sbb
jg
sbb
cmp
add
sbb
mov
imul
ret
inc
shlb
xor
cmc
mov
hlt
adc
fsub
sub
mov
or
sbb
sbb
ss
or
jno
xor
sbb
in
inc
sub
outsl
push
ss
lods
lock
jb
or
pop
rol
cmpsl
imull
cmp
pop
mov
inc
sbb
pop
in
or
xchg
jmp
shr
outsb
aas
clc
and
mov
fisubrs
cwtl
popw
and
push
xchg
or
ds
mov
psrad
cmp
add
push
lahf
and
ja
pop
data16
mov
jbe
jne
mov
fucomp
jno
inc
pop
ljmp
imul
add
shrl
outsl
dec
xchg
negl
testl
mov
push
cmpsb
stos
mov
mov
aam
jns
xor
lds
sbbb
xor
cmp
int
fldl
pop
xor
stos
sbb
aaa
mov
fbstp
mov
mov
or
pop
jo
lds
push
test
popf
mov
orb
or
fistpl
je
arpl
xchg
outsl
std
in
jecxz
scas
jnp
roll
sarl
jb
dec
mov
imul
mov
test
bound
aas
dec
pop
sti
into
jo
test
jo
cs
xchg
ja
push
call
push
mov
testb
and
ret
pushf
or
ret
ret
xchg
pop
mov
pop
test
cmp
pop
mov
lret
fisubrs
jns
mull
imul
ret
inc
mov
mov
push
dec
push
or
cmpsb
sarl
rep
jae
gs
mov
dec
dec
xor
mov
sub
pop
cmpsl
mov
jno
and
ret
jnp
sahf
adc
cltd
cmp
jo
lret
arpl
cmc
ja
jae
push
xchg
imul
inc
cmp
mov
pop
rclb
add
jbe
adc
mov
cltd
mov
stc
mov
nop
jo
or
mov
loop
xchg
adc
sbbl
sbb
pop
and
xlat
int3
leave
cmp
or
or
xchg
mov
push
in
fnsave
lods
fsts
ret
lock
mov
push
out
data16
inc
loop
sub
scas
out
or
dec
mov
and
add
mov
push
push
outsb
mov
das
mov
push
cmp
movsb
fwait
lahf
lock
dec
cmpsl
xor
scas
aad
xchg
fiadds
xor
mov
xor
mov
or
or
sub
ficoml
scas
cmp
jg
in
push
stos
mov
mov
mov
add
mov
scas
adc
jle
mov
xor
mov
mov
mov
into
test
jae
ret
lds
mov
jecxz
adc
xor
mov
xor
pop
lahf
pop
loop
aad
leave
outsl
pop
sbb
xchg
mov
mov
lret
adc
jl
jno
jns
daa
mov
test
stc
stos
and
or
ja
adc
data16
jnp
add
mov
pop
call
clc
ficompl
pop
mov
cmp
xor
sbb
nop
inc
or
xchg
out
daa
popa
jecxz
fdivr
xchg
pusha
je
push
fcoml
icebp
ror
add
pusha
sbb
fwait
test
inc
or
sbb
stc
imul
adc
icebp
mov
repz
sub
adc
pop
rcrb
xor
dec
ret
pop
or
adc
lret
mov
es
icebp
sbbb
data16
das
xchg
mov
and
inc
mov
aas
dec
fcoms
mov
mov
inc
mov
movsb
and
fcoms
mov
pop
xchg
sti
xor
or
cmc
adc
add
std
bswap
ret
adc
dec
aad
mov
ret
and
and
xchg
stos
out
mov
cmp
push
xchg
test
mov
jbe
or
ficomps
loop
add
iret
jnp
cli
dec
icebp
add
popw
jge
xor
stos
ljmp
cmp
inc
jns
sub
add
dec
mov
jb
sbb
icebp
sbb
mov
adc
outsl
adc
test
pop
sbb
pop
sar
pusha
inc
xchg
insb
cmpsb
pop
ret
fdivs
in
add
cmc
xor
xor
inc
stos
ret
mov
jnp
mov
ret
push
bound
repnz
cmpsl
outsl
and
xlat
dec
push
scas
sub
xlat
xchg
cld
ret
cmp
lret
aad
cmp
jmp
aaa
int
dec
cmp
es
cltd
pushf
es
mov
xchg
cwtl
pop
and
leave
jp
xor
fnstsw
sub
add
loope
gs
scas
pop
cmpsl
scas
add
loope
xor
lahf
mov
imul
cmp
push
dec
shr
and
sti
insb
mov
adc
jmp
xor
repnz
fst
mov
xor
mov
or
adc
aam
add
stc
fdivrs
stc
push
test
push
push
cmp
jbe
js
xchg
and
add
cld
adcb
rcll
sbb
fidivrl
inc
dec
mov
push
pusha
mov
mov
xchg
arpl
fcmove
jo
push
jnp
push
mov
invd
pop
stos
popa
xor
test
aas
mov
icebp
outsl
sbb
sub
jb
fisubs
gs
loopne
pushf
cmp
xchg
push
std
stc
mov
ret
stos
push
mov
fistpll
mov
lods
dec
lds
pop
sbb
cmp
rcrl
fcomp
sahf
jb
clc
test
or
cli
rol
mov
cld
mov
fdivrs
xchg
cmp
adc
push
loope
or
push
stos
lea
push
inc
xlat
xlat
jbe
pop
push
test
ret
scas
es
pop
xchg
mov
xor
sub
jl
aaa
and
shlb
cwtl
xchg
ljmp
ja
mov
push
out
icebp
cs
sbb
dec
movsl
adc
aas
and
rol
loope
sub
jb
mov
mov
mov
or
xchg
sbb
dec
sub
adc
enter
inc
jecxz
mov
mov
bound
bound
outsb
mov
test
jge
fdivl
cmp
dec
inc
nop
cs
mov
xchg
xor
pop
mov
pop
test
xor
lcall
sbbl
sub
cmpsl
test
xlat
shrb
pop
push
ja
mov
push
or
loop
mov
pop
cli
mov
testl
mov
jp
cmp
das
fs
cmp
out
mov
stc
icebp
shl
arpl
push
jns
jle
loopne
mov
sub
stc
cli
stc
or
pop
mov
cmp
vmread
aad
and
add
inc
pop
out
dec
mov
sub
daa
add
mov
add
adc
mov
sub
sbb
jnp
inc
ret
loope
sub
adcb
cmc
fistps
dec
imul
fisubrl
xchg
iret
shrb
jns
add
add
inc
ret
mov
xchg
xchg
jbe
sbb
popf
mov
repnz
stos
imul
daa
jne
cmp
xor
xor
test
fs
and
cmp
mov
addb
call
in
inc
pop
sahf
jmp
jb
or
add
mov
push
arpl
clc
aad
push
or
xlat
push
stos
addr16
and
sub
or
mov
sbb
inc
scas
lret
mov
sbb
pop
xchg
decb
addr16
lods
pop
pushf
add
or
xor
mov
fs
cwtl
ljmp
pop
push
imul
push
roll
jg
pop
mov
pop
jge
aad
jg
sbb
mov
inc
jl
add
js
cmp
push
mov
mov
cli
mov
lds
fisubrl
pop
mov
aam
lret
insb
stos
mov
shlb
push
mov
add
ljmp
push
faddl
ja
sbb
insl
sub
cmp
jl
in
push
pop
dec
or
test
lds
iret
pop
push
adc
scas
ljmp
sub
push
inc
out
mov
aam
dec
add
call
ret
xor
imul
sbb
dec
je
loop
es
mov
ret
iret
rorw
fcomps
popa
adc
push
jge
push
add
stc
stos
sbb
xlat
jmp
xchg
inc
mov
clc
and
add
fldenv
or
shr
fimull
loop
aad
cld
xchg
or
and
add
lock
std
mulb
xchg
and
pop
xchg
jno
add
jmp
sarl
push
mov
nop
dec
outsb
stos
fisttps
xchg
and
lods
mov
aas
mov
cli
adc
xchg
movhps
popa
enter
mov
push
mov
leave
repnz
mov
popa
push
adc
divl
jne
adc
frstor
pop
or
jg
dec
mov
mov
adc
subl
rcll
jge
insl
or
mov
sbb
cmp
imul
sub
add
cmp
mov
and
or
pop
adc
and
stc
ljmp
jge
cli
add
xor
sbb
xchg
dec
movsl
ja
ret
push
xor
inc
shlb
pushf
add
add
leave
movsl
sub
sbb
decb
cmp
adc
xor
js
int3
fs
mov
jnp
sbb
daa
sbb
mov
push
std
popa
jmp
inc
cli
fsts
jl
je
lds
xor
out
and
fisttpll
andl
fwait
mov
dec
movsl
shrl
sbb
mov
je
dec
dec
movsb
in
lretw
andl
jns
loopne
adc
jno
sbb
xchg
and
push
stos
jle
sbbb
sti
add
in
popa
push
inc
icebp
push
sub
cmp
mov
mov
stos
iret
ds
xor
imul
gs
mov
sub
jmp
push
js
sub
pop
out
xchg
mov
add
pushf
push
out
push
sbb
pop
lret
jge
ret
add
jns
scas
data16
mov
shlb
xchg
aas
add
enter
hlt
mov
jb
fisubrs
jecxz
cmp
or
fnstenv
loop,pt
cmpb
repnz
push
push
jmp
mov
outsb
insl
lret
sub
sbb
loopne
add
push
jne
aaa
mov
pop
cmp
stos
and
cmpsb
push
pushf
out
test
add
shrb
push
jge
sbb
jbe
movsl
aad
addr16
jle
dec
rol
push
jg,pt
bnd
repz
fsubrp
and
xchg
or
ljmp
gs
xor
repz
jg
fildll
cmp
jbe
cmpsl
xchg
jge
inc
shrb
inc
int3
movsl
lahf
rcll
lahf
mov
jle
add
fimull
rol
push
inc
je
insb
sbb
sahf
mov
out
inc
add
mov
loope
cmovg
sbb
cwtl
lret
mov
add
lods
jbe
mov
shrb
addr16
roll
cmpsl
lcall
repnz
sub
xor
in
xchg
movsl
xor
stos
xorl
loop
lods
dec
dec
xor
push
fwait
mov
fstpt
or
xchg
shl
ficoms
imul
rol
rcll
roll
jg
fcmovnu
mov
lods
aas
scas
mov
cltd
jmp
iret
pusha
push
or
mov
mov
icebp
sbb
repz
daa
sub
xchg
mov
cmp
cmpsl
decl
mov
mov
mov
mov
xor
fdivrl
into
mov
cmpsl
mov
pop
push
sbb
shll
sub
call
je
das
sub
pop
imull
dec
push
mov
or
sbb
mov
movsl
mov
incl
jne
imul
mov
add
mov
gs
stos
pop
and
inc
xchg
inc
sbb
rcl
or
cmp
cmc
push
ficoms
and
jl
imul
xchg
stos
stc
mov
mov
in
sbb
movsb
lretw
push
jmp
cmpsb
inc
rolb
rolb
sbb
test
lods
dec
scas
adc
push
sbb
xor
push
call
pop
arpl
fs
mov
les
jnp
jl
or
jp
jo
sub
push
push
push
jecxz
cmp
inc
subb
gs
dec
mov
scas
pop
xchg
ja
sarb
jmp
dec
in
or
mov
cld
jnp
mov
jmp
divl
push
cwtl
jge
les
or
rorl
cmp
in
fdivr
aaa
xlat
push
int3
dec
or
pop
inc
lds
adc
movsl
mov
addr16
ret
aas
sarl
int
adc
mov
and
jmpw
push
repz
mov
fidivs
dec
dec
xor
push
cli
cmpsb
and
lods
or
cmc
ret
aad
ret
sub
mov
orl
cld
jns
dec
inc
rorb
cmpsl
cltd
sbb
cmp
out
insb
lahf
xchg
iret
outsl
sbb
jmp
mov
mov
add
stos
mov
pop
std
push
stc
mov
jo
xchg
pushf
sbb
lds
pop
les
ret
movsb
out
jg
fistl
xor
dec
in
cmp
push
adc
shl
and
mov
movsl
sbb
sahf
fstpt
sub
xor
movsl
mov
xor
pop
mov
mov
mov
xchg
fcmovnb
loop
in
out
sbb
lret
fists
inc
push
pop
sbbl
addb
je
add
daa
lods
fwait
push
sub
fstps
ljmp
mov
iret
sub
cmp
pop
cld
movl
sahf
inc
mov
insb
sbb
lret
mov
pop
mov
outsl
outsb
mov
jle
mov
stos
push
fwait
pop
xchg
rolb
out
stc
ljmp
ja
inc
ljmp
cs
xchg
jns
pop
ret
cmp
jae
cmp
mov
pop
testb
fnstenv
aam
fidivrs
adc
fisubrl
adc
ja
or
leave
sub
fldl
pop
cmpsl
mov
dec
testw
loop
sbb
dec
sub
push
nop
inc
xchg
aad
jl
push
call
mov
xchg
cmp
icebp
lcall
pusha
push
mov
insb
xor
shl
fwait
xor
out
or
pop
stos
jmp
aas
pop
cmp
sti
cmp
xchg
adc
divl
cmpb
cwtl
push
sbb
stos
fsubrl
pushw
pop
jo
adc
les
ret
arpl
add
les
pop
adc
pop
lock
adc
cmp
or
jno
push
mov
addr16
mov
mov
sbb
adc
test
pop
out
jnp
push
mov
and
xchg
dec
aam
lods
push
jo
mov
movsb
adc
mov
xor
inc
aad
and
sub
fld1
or
stos
inc
jb
movl
xor
and
jae
jmp
cltd
dec
mov
push
or
xchg
and
push
pop
leave
pop
fwait
mov
shl
add
in
add
mov
cmp
call
and
mov
inc
push
add
or
mov
xor
mulb
sub
sarb
push
lcall
dec
test
mov
inc
and
test
xchg
push
xchg
pop
aaa
stc
sub
shll
ljmp
add
les
lock
arpl
movq
femms
out
dec
lcall
or
jnp
adc
clc
dec
fimuls
mov
shrl
out
dec
lea
mov
fidivs
mov
aaa
xchg
divb
xor
out
loop
and
adc
push
lahf
test
add
or
mov
mov
dec
lods
fistl
push
or
xor
insl
lea
cltd
or
mov
outsl
cli
mov
nop
adc
sbb
mov
jnp
clc
rolb
pushf
rolb
pop
add
and
sub
divb
addl
pop
mov
add
mov
fsubl
or
pop
decb
mov
xchg
sbb
cmp
jae,pt
sti
mov
push
push
xor
xchg
in
roll
out
fimuls
negl
sarl
pop
inc
daa
xchg
ljmp
jecxz
dec
adc
cmp
mov
inc
in
aad
dec
aam
jbe
adc
repz
pop
cmpsb
jmp
add
dec
call
insb
outsl
repnz
adc
mov
jle
and
adc
adc
jns
mov
add
pop
int3
adc
dec
pop
mov
sbb
out
nop
das
pop
inc
jle
sub
test
lds
or
sub
jl
jp
inc
cmp
xchg
icebp
pop
aaa
sub
dec
aam
mov
sbb
test
repnz
rcrb
in
push
sar
cld
popa
xchg
shlb
mov
dec
fwait
in
daa
into
into
stc
mov
mov
and
xor
loopne
adcb
pop
sbb
pop
mov
das
fcompl
iret
pop
shlb
aas
mov
dec
or
or
mov
repz
cmc
xor
mov
test
cs
xchg
pop
adc
jne
push
scas
aas
or
cli
jecxz
xchg
jecxz
insb
hlt
fcoml
sbb
stc
push
push
jbe
push
out
arpl
xor
test
ret
cmpsb
lret
and
pop
jge
jge
mov
stos
mov
xchg
inc
push
push
inc
mov
loope
mov
call
mov
inc
mov
cs
movsb
mov
jg
jge
jp
add
jmp
cld
repnz
mov
sbb
mov
das
int3
push
fldenv
jbe
in
loopne
xchg
xor
add
rclb
mov
fldlg2
mov
call
and
lea
dec
push
mov
jns
in
pop
pop
mov
shrl
xchg
inc
ror
out
shrl
enter
and
xchg
gs
out
adc
fsubrs
imul
xchg
mov
lods
cmp
jmp
jbe
xor
or
test
leave
iret
call
add
xor
add
adc
or
push
ds
mov
nop
data16
cmp
and
mov
xor
xor
pop
fcmove
add
cmpsb
pop
pop
mov
outsb
xchg
outsb
in
outsb
jle
add
sarb
jnp
notl
movsb
adc
xchg
cld
xchg
or
pop
pop
mov
jne
inc
pop
into
and
jb
push
sbb
test
movsb
mov
sahf
cmpsb
xor
or
inc
sub
pop
push
or
mov
arpl
or
pop
inc
andl
dec
ret
mov
add
out
sub
cltd
insl
iret
push
in
mov
mov
rolb
arpl
push
mov
dec
pushf
es
dec
xchg
push
ds
daa
je
mov
shll
jmp
sbb
ljmp
in
roll
push
stc
sarb
xor
cmpsl
sbb
mov
outsb
vpandn
frstor
enter
hlt
fcompl
fs
dec
cwtl
jp
push
or
xor
lock
aad
add
vcmpss
aam
pop
arpl
sub
xchg
addr16
jo
roll
jecxz
dec
cmp
jecxz
insl
inc
dec
or
mov
dec
mov
dec
dec
ss
add
xchg
and
sbb
push
cmp
faddl
lds
lahf
fwait
scas
in
aas
test
or
pusha
push
ja
xor
push
shll
gs
in
aam
push
test
jge
fidivs
cmp
push
xor
sbb
xacquire
pop
and
popa
jle
mov
sbb
js
test
xor
adc
add
arpl
xlat
dec
icebp
inc
lods
lret
rorb
fidivrs
jne
and
push
jl
cs
enter
and
in
out
push
mov
outsl
mov
sti
icebp
xchg
enter
cmp
cs
lahf
pop
mov
outsl
jmp
mov
aaa
and
and
cld
inc
sbb
call
dec
orb
push
sbb
rcrb
hlt
in
outsb
sbb
outsl
xor
push
and
sahf
daa
and
jns
cs
xor
inc
imul
jmp
jno
stos
pop
sub
insl
inc
xor
mov
dec
inc
cmp
arpl
pop
mov
mov
adc
sbb
mov
je
xor
adc
aas
pop
dec
mov
lds
add
jg
add
outsb
lods
clc
cli
into
ljmp
out
aam
inc
sub
sti
sti
and
insb
test
fdivs
std
mov
sarb
iret
pop
mov
pop
push
jp
pusha
or
loopne
dec
sarl
pushf
cmc
arpl
aaa
je
test
das
popl
enter
add
xchg
or
fimull
mov
mov
pop
fdivrl
inc
in
dec
out
cmp
ja
push
sub
cmp
insb
outsb
outsb
mov
dec
jb
addl
add
mov
js
add
mov
orb
add
fwait
aad
sbb
ret
mov
cs
pop
loop
incb
xchg
jbe
aaa
mov
adc
dec
decl
mov
and
and
push
ljmp
lahf
fsub
mov
or
or
js
sub
sub
fldenv
xchg
inc
loop
mov
sbb
jns
test
push
icebp
jle
xchg
paddw
adc
jno
and
push
jo
les
adc
push
test
cwtl
jb
or
lret
or
lds
test
test
push
mov
sahf
jp
and
or
insb
pop
int3
out
pop
push
mov
cmp
shrl
clc
sub
das
addr16
and
inc
jmp
pop
clc
xchg
jg
std
dec
mov
lds
inc
out
mov
andb
dec
push
cs
push
jb
ss
in
mov
or
push
inc
inc
lds
out
andl
addps
mov
inc
inc
xchg
push
push
rcll
dec
lods
sub
test
mov
inc
fucomp
inc
subl
jnp
fistpll
stos
inc
mov
ret
and
mov
inc
cwtl
and
out
in
out
adc
outsb
jge
insl
fistps
ret
adc
fisubrl
je
sub
mov
push
movsb
jl
scas
loopne
push
insl
leave
jge
xor
mov
addr16
mov
test
movsl
lods
ror
cld
xchg
pop
mov
pop
or
lods
jb
ret
shrb
aad
sub
lods
dec
js
mov
jmp
fwait
mov
lret
sbb
insl
inc
iret
jmp
or
dec
mov
in
sbb
sbb
lret
xchg
sbb
push
xlat
icebp
pop
cli
xchg
jae
outsb
lret
push
jmp
sub
ficomps
sbb
rol
into
add
fcoms
sbb
int3
pop
aad
cmpsb
sar
sbb
inc
mov
loop
mov
dec
stc
out
cmp
stos
popl
js
ds
jp
sub
lahf
je
push
xchg
jmp
outsw
call
iret
jg
mov
push
ficomps
push
pop
inc
cmp
lcall
loope
adc
mov
mov
cmp
mov
pop
mov
ljmp
xchg
or
inc
dec
repnz
sbb
xchg
cld
inc
push
sti
pop
fwait
pop
into
pop
inc
sub
int3
lret
lds
cmp
or
xor
inc
hlt
lcall
or
ret
mov
das
inc
dec
std
pusha
call
pop
and
je
sahf
cmpsl
jnp
into
idivb
cli
lock
pop
mov
ret
mov
mov
lods
xchg
or
loop
fistl
subl
cld
std
daa
call
xor
paddb
popa
stos
imull
aad
xor
jns
je
push
sbb
dec
test
into
call
pop
dec
mov
loop
loop
cld
pushf
or
cmp
shll
pop
into
cmp
cmpsb
pop
pop
ss
push
xchg
lret
loop
xor
push
xchg
xor
bound
lcall
pop
xor
fwait
push
pop
fidivrs
sbb
and
mov
cmpsb
lret
movsl
sub
popa
loope
jle
and
inc
and
scas
clc
add
sub
stos
dec
fstl
adc
sbb
push
push
push
adc
les
dec
stos
pop
arpl
aaa
pop
aas
inc
lds
push
push
add
jmp
cmp
cmp
add
mov
cmp
mov
scas
and
gs
mov
rorb
push
inc
data16
cwtl
push
js
xlat
jb
sbb
out
push
frstor
push
cmp
test
xor
clc
fs
ljmp
pushf
sbb
sub
sub
adc
and
nop
cmpsl
movsb
repz
pop
idivl
jb
das
push
cmc
js
ror
cmovnp
add
mov
mov
stos
roll
and
or
roll
dec
popf
and
sub
mov
cmp
insb
mov
into
lods
adc
jmp
jp
movsb
add
mov
js
and
je
fisttpl
inc
jnp
rcrb
hlt
push
insl
jbe
pop
mov
icebp
outsb
popa
scas
sti
mov
test
and
sub
dec
pop
sbb
dec
or
stos
popa
stos
loope
cmp
movsl
adc
popa
push
out
inc
mov
in
and
lahf
cmp
mov
jns
dec
movsb
and
imul
cmc
xchg
xor
push
cmp
mov
push
aaa
and
pop
fnstenv
push
leave
push
loop
adc
sub
test
sbb
test
stos
jo
loop
and
dec
sub
sti
sbb
hlt
and
addr16
inc
sbb
int3
dec
stos
scas
into
mov
loopne
add
pop
nop
jne
repnz
fadds
repz
xor
adc
dec
stc
sub
mov
pop
test
xchg
stc
sbb
or
jno
add
vlddqu
cmpsb
and
js
mov
or
jne
dec
sbb
test
mov
loopne
flds
pop
repnz
xchg
adc
stos
movsl
ljmp
imul
inc
jl
push
lcall
sub
mov
cmp
into
scas
pop
xchg
int3
out
daa
mov
jecxz
and
js
jle
cld
or
jg
into
push
cmp
das
in
mov
lret
xor
jmp
ja
cmp
out
mov
subl
movlps
push
push
ds
sub
sbb
xchg
jmp
pushf
inc
lods
mov
cmpsb
repz
std
cli
lds
cmovno
lret
mov
xchg
repz
pop
test
stos
faddl
and
add
ja
outsb
push
pop
pop
cmp
arpl
cltd
mov
das
adc
cmp
xchg
cmp
lock
aas
cmpsb
sbb
ds
das
mulps
gs
mov
int
int
mov
int
je
add
lods
mov
jo
rcr
lahf
lahf
les
ret
pop
or
ss
xor
insl
sub
stos
adc
xchg
lahf
mov
jnp
hlt
loopne
mov
jge
mov
mov
in
xchg
dec
xchg
or
jb
cmp
aas
jne
or
push
and
pop
mov
pop
xchg
mov
push
xchg
push
sbb
ret
lret
push
mull
jp
or
dec
xor
sahf
cmp
add
xchg
xor
inc
mov
icebp
das
sbb
add
push
push
dec
push
jmp
adc
push
dec
sbbb
xchg
test
and
test
loope
and
bound
push
add
and
lret
fnsave
mov
jo
into
cmpsb
mov
fcoml
push
in
cmp
jne
out
and
in
add
fnstenv
aad
inc
clc
sbb
and
xchg
repnz
mov
xor
jmp
xchg
dec
out
lcall
pop
cmc
xchg
ljmp
pushf
test
fiaddl
out
cwtl
jp
loope
notb
or
jl
shlb
sub
popf
push
jb
mov
jl
mov
xor
pop
pop
insb
hlt
inc
and
daa
pop
cmp
sti
rol
fwait
and
aaa
fmul
int3
je
adc
clc
popf
daa
pop
and
inc
push
cmp
xlat
addr16
movsb
pop
repnz
ds
lcall
pop
pop
inc
lahf
mov
xchg
jle
ljmp
mov
pop
xchg
jecxz
sbb
in
test
inc
push
out
sahf
leave
push
call
mov
cwtl
sub
imul
ret
imul
lea
pop
or
mov
pop
push
sub
out
test
dec
test
stc
filds
adcb
dec
scas
ffree
xor
push
fs
sub
mov
loop
dec
jne
jmp
int3
mov
mov
pop
bound
stc
pop
xchg
xchg
add
or
cmp
movsb
xchg
out
stos
xlat
addr16
adc
mov
sti
sbb
jbe
call
adc
mov
outsb
cmp
test
jo
adc
je
lea
and
int
mov
mov
insl
inc
es
bound
cmp
xor
add
test
lahf
inc
jmp
xchg
cmp
jle
sbb
cwtl
jbe
lahf
or
data16
adc
jle
int3
xor
mov
imul
cli
mov
mov
dec
push
adc
and
shlb
sbb
sub
cltd
mov
mov
roll
adc
ds
cli
inc
stos
mov
outsl
cltd
adc
adc
jns
sub
mov
loope
test
dec
outsb
mov
xchg
push
das
data16
cmp
loop
jmp
push
jle
test
xor
movsl
push
call
mov
das
xor
xchg
mov
fs
mov
ret
sbb
fcomip
jne
or
out
xchg
jne
xor
pop
cltd
jnp
out
psrlw
xchg
popa
adc
out
out
aaa
cmpsb
jae
sub
mov
add
sti
jle
pop
add
repnz
ror
loop
mov
and
fs
push
sub
pop
jno
xchg
sbb
xor
leave
xlat
cld
lret
stc
out
cmp
and
mov
mov
loopne
jl
dec
shrb
mov
fldt
leave
int
push
lret
andb
loop
sub
dec
insb
repnz
popf
les
mov
xlat
aad
repz
mov
sbb
or
sbb
dec
loop
xchg
push
mov
xor
dec
loop
mov
cmc
scas
scas
adc
repnz
jle
xchg
rorb
add
xor
in
sbb
lret
hlt
pop
xor
pusha
xchg
mov
cmp
cmp
cmp
in
dec
jmp
pop
xchg
ret
bound
gs
fisttpl
notl
xor
xchg
mov
sub
mov
jae
inc
jge
dec
inc
xchg
mov
mov
cmp
sub
cli
push
mov
or
lret
lods
push
add
lahf
add
lods
lock
inc
sbbb
mov
dec
nop
testb
lock
frstor
xchg
adc
mov
cmp
jp,pn
pop
dec
in
push
jno
ss
mov
loopne
add
lret
fstpt
mov
cmc
sub
lods
popl
hlt
ror
addb
xchg
add
mov
aad
scas
scas
nop
mov
xlat
pop
pop
dec
add
fdivrl
cmp
insl
mov
mov
repz
or
inc
call
sqrtps
xor
rorb
decl
pop
sbb
inc
push
je
imul
test
imul
adc
hlt
test
add
sub
dec
push
cmp
das
js
enter
push
mov
negl
fwait
xchg
cs
shl
jns
cltd
xchg
sbb
inc
dec
daa
push
lahf
pop
rorb
push
call
sub
cmp
mov
sbb
loopne
push
sahf
xor
push
rorl
in
dec
std
xor
out
jne
sub
jnp
scas
mov
inc
aas
sbbb
popa
xchg
pop
stos
xlat
mov
outsb
rcrl
imul
insl
dec
jmp
bnd
mov
push
mov
leave
mov
jns
and
cmp
sub
xchg
test
mov
dec
jle
push
lods
mov
inc
ja
dec
mov
ds
xlat
mov
ss
mov
fiaddl
loope
mov
ret
dec
inc
mov
mov
test
add
ljmp
in
xchg
lods
xchg
cmp
in
fcompl
mulps
call
or
jo
mov
fnsave
push
popa
mov
into
call
add
xchg
xor
les
sbb
cltd
sub
inc
xchg
popf
cs
cmp
xchg
iret
aas
mov
ror
movsb
testl
push
repnz
data16
mov
jle
nop
mulps
add
sarl
mov
dec
or
stc
xchg
pop
orb
add
or
cli
xchg
mov
fs
xor
outsb
cs
xchg
and
ret
repnz
in
adc
sub
xorw
xchg
mov
xlat
and
mov
jecxz
dec
adc
mov
jecxz
rcl
mov
mov
xlat
insl
fsubrs
repz
pop
ljmp
inc
loope
sub
pop
xor
mov
imul
xchg
push
push
mov
int
movsl
je
test
xor
inc
fidivrs
imul
loop
scas
xchg
popa
add
fwait
repnz
sbb
mull
lock
mov
push
xchg
sbb
jl
imul
and
mov
int
sub
dec
repnz
mov
lahf
leave
xor
arpl
scas
nop
push
pop
sub
into
jp
sbb
out
fs
and
ljmp
cli
dec
add
push
mov
iret
pop
mov
adc
mov
mov
cmpl
add
adc
ljmp
loope
jl
fwait
mov
inc
sub
outsl
cmp
lods
orl
pop
dec
jmp
fsts
push
out
and
cmpsl
daa
mov
sub
jmp
cwtl
arpl
inc
pop
fistl
fcoms
inc
imul
lods
xor
movsl
mov
adc
ljmp
cmp
sti
enter
add
mov
xchg
out
sbb
lret
les
cmpsl
mov
nop
dec
add
add
adcl
jno
je
jno
dec
out
pop
xlat
in
gs
xor
push
push
cmp
pusha
popf
pop
cs
jl
ret
sub
call
xor
cmp
jmp
cmpsb
in
pushf
shl
pop
je
jnp
xchg
pusha
sub
mov
xor
jecxz
xor
cmc
test
loopne
mov
add
imul
ds
push
add
lcall
push
sub
popf
dec
mov
jo
dec
cmp
adc
mov
lfs
lods
out
xor
ret
sub
xlat
mov
popa
push
xor
lret
icebp
push
ficomps
out
mov
mov
cwtl
sub
test
data16
pop
rcll
into
stos
jne
gs
inc
fcoml
out
jge
push
or
add
fbstp
cmp
mov
mov
jae
mov
jb
mov
sub
mov
mov
sbb
fcomip
mov
dec
push
aam
push
lret
lcall
dec
or
xor
in
mov
fdiv
inc
gs
mov
les
and
dec
cmpsl
lea
cmp
mov
adc
push
cmp
or
add
cmp
mov
xor
adc
sahf
insb
les
testl
jecxz
jns
xor
aas
cmp
and
add
fisubl
fimuls
fcomps
jmp
pop
nop
lods
push
cmp
pushf
loop
mov
mov
inc
add
stc
mov
sub
jns
add
scas
hlt
inc
and
repz
out
fs
fnstsw
cmp
mov
std
sbb
or
aad
loop
xchg
imul
xor
lods
cmp
mov
fmul
add
mov
insb
add
js
mov
xchg
add
subl
mov
jl
xchg
and
adc
in
ds
mov
dec
add
xchg
test
mov
in
nop
in
pop
dec
addr16
mov
inc
jo
sub
or
xor
aaa
into
xlat
or
fmuls
movsb
cmpsl
test
pop
shrl
dec
inc
mov
ss
mov
daa
add
adc
mov
mov
repnz
leave
add
test
lahf
or
ret
fs
add
aaa
sub
repz
andb
add
pop
aad
movl
sbb
int
pop
cmp
mov
adcb
xor
xor
idivb
cs
stos
outsl
xchg
sbb
pop
mov
sahf
lods
pusha
mov
inc
outsl
mov
ffree
into
leave
jne
mov
jno
xor
popf
insb
rorb
clc
inc
test
dec
push
lds
dec
cld
gs
sarb
mov
fsubrl
dec
out
adc
xor
xchg
jg
frstor
lea
das
fnstcw
xchg
jle
sbb
xchg
sbb
cli
pop
lahf
adcl
lret
ret
les
imul
xor
mov
pop
fidivl
mov
inc
xchg
push
es
loope
call
leave
iret
sbb
dec
xor
xor
add
out
sar
out
add
sbb
add
and
xchg
ret
call
mov
into
aad
lea
adc
js
xchg
in
stc
cmp
bound
movsb
jle
lret
aaa
xlat
and
mov
jb
sbb
mov
out
push
adcl
fnstcw
jne
and
addb
dec
cmc
aad
icebp
cs
xchg
mov
sbb
mov
adc
xchg
jmp
jg
push
stc
lea
pop
ret
and
dec
mov
loopne
xlat
mov
cwtl
mov
nop
idivb
int
jmp
fcomi
icebp
jno,pt
popf
xor
or
mov
push
jmp
mov
fwait
std
pop
xchg
xor
xor
roll
dec
scas
sarl
adc
ljmp
sub
mov
pop
or
lods
push
jbe
mov
cld
push
fwait
push
les
clc
dec
mov
add
ljmp
out
nop
cld
xchg
pop
push
stos
lret
mov
fidivs
lods
cmp
cmc
popf
fildll
sbbb
dec
mov
adc
test
enter
enter
mov
xor
and
sub
xchg
scas
pop
inc
mov
and
dec
out
btc
test
sub
std
rorb
push
xor
sbb
in
inc
xchg
loop,pt
in
pop
xchg
leave
lcall
cmp
mov
dec
sbb
lahf
cmp
cmp
jl
iret
adc
inc
gs
add
les
outsl
mov
add
sbb
inc
jae
mov
or
rcl
stos
lahf
stos
xchg
xor
push
xor
ja
sub
cmpsl
packuswb
dec
and
mov
push
js
sub
fadds
notl
rclb
push
out
mov
mov
xor
shrb
sbbb
gs
mov
out
scas
popa
outsb
and
push
add
bound
jnp
push
cmpsb
call
dec
cmp
adc
or
jmp
xchg
dec
neg
in
imul
cmp
jb
and
jns
outsl
add
push
jge
pop
fstpt
mov
push
aam
mov
sti
popf
ret
leave
pop
jle,pn
es
cmp
inc
fbstp
cmc
push
jg
mov
inc
sub
ret
out
das
in
addr16
lcall
das
mov
insb
lcall
jnp
cli
stos
mov
adc
sbb
repz
jbe
inc
and
inc
or
pop
mov
shrl
mov
jp
inc
adc
clc
scas
jg
js
adc
dec
mov
or
jecxz
lea
mov
and
jp
dec
fucomip
aaa
imul
push
xor
fstpt
sub
add
sub
xchg
fyl2xp1
jo
add
jno
add
mov
bound
out
inc
cli
cmp
push
mov
lds
cmc
addr16
adc
sub
adc
out
sub
sbbl
add
push
push
cs
cmpsl
add
sub
pop
pop
dec
aas
jle
mov
lods
mov
lods
xor
cmpsb
movsb
fidivs
rcll
adc
sbb
push
xchg
jae
fmuls
ja
sub
inc
movsw
mov
scas
std
arpl
jle
pop
jb
jl
dec
pop
sub
or
jp
push
stos
pop
inc
sbb
mov
rolb
dec
sbbb
add
sbb
es
sbb
sub
cmp
jp
xchg
jnp
mov
ret
sbb
cmp
loop
lcall
nop
out
out
adc
pop
xchg
lods
nop
or
push
cli
nop
popf
loope
mov
mov
aaa
test
xchg
jl
js
and
ret
jns
adc
push
push
add
jns
mov
call
repz
jo
jno
pop
push
xlat
fcomi
movl
push
pop
mov
push
add
popa
pop
push
pop
ss
xor
cwtl
shlb
mov
repz
push
std
lds
mov
xor
sbb
mov
cmp
nop
add
out
arpl
in
cmp
lods
lock
jg
pop
notb
cmp
shlb
lock
out
mov
lret
jnp
pushf
jge
cmp
and
mov
js
jne
fs
pusha
lcall
lock
les
gs
inc
mov
xor
stos
nop
jge
das
scas
adc
mov
jo
sbb
aaa
xchg
inc
sub
push
xchg
out
subl
inc
pop
sub
cli
out
cmp
sti
push
adc
addr16
xchg
loop
and
pop
mov
gs
cwtl
popf
test
imul
sub
xchg
inc
push
mov
sbb
cmpsb
fwait
mov
xchg
shlb
outsl
int3
fcoms
dec
sarl
mov
neg
shll
aaa
loopne
or
jo
fwait
movsl
add
psrld
xchg
rcrb
andl
sarb
idiv
ret
adc
into
fisubs
push
mov
xchg
out
fstl
adc
dec
adc
stc
mov
pop
cmp
lock
cmp
and
loope
leave
mov
insb
scas
int3
rcrl
mov
imul
jnp
jle
dec
fsubs
adc
lock
hlt
adc
mov
mov
jnp
int3
jb
xchg
push
inc
mov
aas
xchg
mov
fimull
sbb
add
lahf
scas
mov
stos
test
jmp
mov
cld
push
or
jnp
jnp
lret
daa
inc
mov
dec
pop
adc
fstl
jle
pop
ja
adc
mov
out
mov
fsubrl
aad
orl
lds
cs
insl
push
pop
or
sbb
out
mov
pop
xchg
adc
jecxz
jge
test
leave
lods
push
cmp
pop
mov
pop
jo
movsl
jl
xchg
sbb
or
mov
adc
pop
ret
add
stc
call
ljmp
js
dec
mov
push
sub
jo
cmp
mov
cmp
stos
sahf
ss
ja
lret
push
xchg
cmp
jns
js
hlt
out
test
xor
xor
hlt
repnz
jo
push
sub
push
push
sbb
mov
imul
js
shl
aas
cwtl
push
fnsave
iret
sub
push
jo
dec
push
cmpb
fsubs
ss
jne
idivl
mov
aad
and
test
jge
xor
les
sarb
insb
pop
push
push
jmp
xchg
sub
inc
sbb
push
imul
mov
or
mov
jp
xlat
pop
lods
pop
add
jnp
adc
jbe
lret
jg
jb
in
push
add
xor
mov
pop
cmpsb
rolb
or
adc
pop
mov
arpl
xor
ss
stos
cmc
lds
pop
dec
or
mov
mov
ss
jg
fcmovb
movsb
outsl
sti
gs
and
stos
imul
fnstcw
movsb
cmp
insb
sub
aaa
xor
call
pop
cli
pop
sub
out
add
push
inc
xor
fcomi
pushf
ret
add
xchg
cmpsl
and
pop
mov
ljmp
jo
cwtl
pop
jns
xorl
mov
ss
add
pop
mov
cmp
orl
test
jle
xchg
mov
xchg
xor
call
mov
lret
mov
je
lcall
sub
scas
mov
arpl
fisubrs
daa
test
push
and
add
pop
ds
inc
push
imul
dec
adc
ja
in
iret
out
mov
jmp
inc
push
int3
mov
inc
popf
stos
mov
push
repz
jne
cmp
call
mov
cmp
ljmp
arpl
xchg
outsb
es
mov
scas
adc
add
lods
unpcklps
push
insl
cmp
mov
loop
cmp
jl
add
int3
fistpl
popl
das
mov
push
adc
mov
adc
dec
inc
or
jno
adc
mov
dec
addl
add
sub
sbb
sub
jbe
inc
dec
xchg
les
mov
lcall
out
jmp
push
xchg
mov
mov
int
dec
jle
in
mov
adc
daa
inc
push
sarl
xchg
jno
pop
lods
pop
ror
mov
jne
sub
test
jmp
js
sbb
enter
repnz
shl
out
or
incl
mov
cmp
jp
pop
jb
push
xor
loope
enter
push
call
pop
cltd
fildl
nop
out
decb
in
mov
xor
pop
adc
xchg
pop
jle
scas
filds
adc
mov
loop
addr16
aam
orb
orl
and
rolb
add
sub
xchg
xor
and
shrb
cmp
mov
jns
sub
sahf
or
not
imul
cmp
add
adc
dec
ljmp
gs
sti
and
fsubrl
dec
push
fidivrs
je
xor
pushf
stos
jno
std
and
test
cmpsl
sbb
jns
xor
cmp
les
cli
or
ljmp
mov
sbb
or
add
xor
add
or
xchg
inc
push
aaa
dec
pushf
rcrb
and
pop
xchg
sahf
out
mov
repz
fbstp
sub
sub
test
and
fstpl
adc
and
popf
rcll
add
pop
or
push
std
push
out
sub
mov
pop
shll
jnp
sub
mov
addl
lea
bound
sbb
fnstenv
push
fidivs
ret
lahf
xchg
js
hlt
cmpsb
mov
imul
lea
cs
stos
test
lods
cltd
xor
cs
jp
pop
xor
rorb
or
push
movsb
xor
decl
lods
push
aad
cld
cmp
sahf
mov
mov
jmp
daa
lock
lcall
xchg
int
sbb
sbb
ljmp
adc
mov
outsb
ds
es
inc
and
cs
inc
sub
mov
inc
mov
push
sub
xlat
out
daa
fs
jnp
in
mov
ss
jns
scas
lods
sbb
std
dec
mov
inc
sbb
fwait
ret
mov
push
mov
push
fcmove
sahf
push
cmpb
sub
bound
mov
mov
fistl
inc
insb
in
dec
bound
push
inc
rcl
xchg
in
adc
int
fldl
inc
pop
add
sub
push
aaa
and
xor
and
lea
and
and
pop
aam
divb
out
enter
fdivrs
outsl
pop
xorl
pusha
fwait
jne
jbe
aam
gs
inc
gs
fildll
imul
jb
aad
movsb
and
adc
loop
xchg
mov
pop
xchg
mov
or
stos
sbb
lods
imul
gs
inc
cld
ljmp
mov
cld
inc
mov
xor
xlat
hlt
or
out
and
ret
cltd
jecxz
sbb
xlat
jl
add
mov
pop
aaa
gs
push
rorb
addr16
ds
mov
mov
jno
testl
push
lds
jo
fs
lock
lea
mov
stos
in
call
inc
xor
mov
jg
ljmp
loopne
inc
mov
out
or
es
lahf
pop
or
ret
pop
test
mov
mov
out
pop
cmpsb
inc
and
mov
inc
and
mov
adc
aam
mov
sbb
mov
sahf
movl
mov
loopne
loop
mov
inc
lods
xchg
lock
adcl
int
outsl
mov
call
and
dec
jmp
mov
push
jbe
stos
jecxz
pop
push
cmp
cmc
pop
xchg
jmp
pop
mov
add
adc
sub
push
xchg
mov
mov
rcrb
pop
sbb
add
xor
loope
mov
insb
movsl
fucomi
jns
out
in
clc
xlat
and
inc
iret
and
xor
clc
push
imul
sbb
scas
in
in
and
inc
cli
cld
scas
ja
mov
inc
fwait
out
xchg
std
aas
stos
insb
inc
rcl
or
xor
pop
aam
ss
loop
lcall
flds
divb
jnp
shrb
jae
in
icebp
js
sbb
mov
jbe
jne
adc
cmpsb
mov
stos
and
push
cmpsb
and
xor
mov
jg
mov
pushf
or
inc
adc
daa
sub
mov
dec
leave
int3
push
rcl
fsubr
mov
cmp
lret
out
lock
push
and
fildll
or
inc
icebp
imul
cmpb
stos
push
and
dec
jecxz
arpl
js
mov
sahf
sub
and
jge
xlat
test
sub
mov
shll
into
mov
aad
sbb
hlt
in
fwait
lret
inc
je
cmpsl
loopne
xorb
pop
push
push
push
inc
mov
sub
mov
rorl
inc
cmpsb
jb
rcll
dec
incb
rcrl
adc
lcall
nop
ud2
ss
pushl
rolw
cmp
cli
mov
ror
pop
jo
test
pop
jns
in
jo
sub
xor
jg
insl
daa
stc
push
inc
call
pushf
dec
and
xchg
push
adc
push
pushf
dec
lds
jl
jle
or
enter
pop
push
adc
sbb
mov
insb
xchg
lods
push
out
imul
scas
pop
fildl
mov
or
pop
stc
jl
xor
pop
test
popf
int3
push
in
dec
mov
imul
xor
push
ja
insb
imul
sub
mov
mov
scas
adc
pop
sbb
jno
jmp
das
add
movsb
arpl
lret
fucomip
lock
and
xorb
int
sbb
pushl
mov
out
cld
pop
inc
pop
movsb
clc
jle
mov
inc
jne
mov
sbb
das
arpl
hlt
push
push
into
mov
mov
arpl
xchg
fisubs
addr16
jg
mov
cmp
rol
mov
fdiv
fcomps
repnz
or
push
popf
lock
xor
sbb
dec
les
xor
cmpb
inc
dec
mov
adc
xchg
lds
in
or
popf
xchg
ds
stos
pop
arpl
daa
test
dec
xchg
inc
lods
mov
ret
scas
mov
pop
sub
push
dec
jmp
aaa
sti
push
in
fimuls
cmp
lods
popa
addr16
imul
xchg
mov
add
loope
pop
dec
repz
adc
pop
orl
mov
mov
sub
clc
push
lret
mov
mov
test
fsts
jl
icebp
repnz
in
mov
push
aad
sub
cltd
out
lahf
rorb
and
incb
and
add
mov
dec
out
jbe
lcall
stos
lret
dec
sbb
add
dec
mov
insb
cmpsb
pop
pusha
mov
mov
ss
fisubs
lret
fwait
push
test
outsb
fisubs
jo
push
fidivrl
and
cmp
in
pop
cli
das
lock
fisttpl
push
mov
mov
push
out
dec
sub
sbb
xchg
mov
test
les
sub
dec
pushf
gs
aas
push
in
jg
pop
xlat
xor
insl
xlat
scas
ret
sahf
sub
js
mov
cmp
stc
rcll
xchg
cmp
test
push
mov
cmpsb
in
ljmp
cs
push
addr16
lods
jle
movsl
test
dec
cmc
cmp
daa
jbe
mov
mov
xor
pop
xchg
push
mov
mov
inc
cmp
les
fidivrl
scas
clc
ficomps
in
cwtl
cwtl
jnp
int
ja
and
xchg
jnp
mov
jae
lahf
jo
andl
jb
xchg
xlat
or
ss
dec
mov
aaa
push
jge
mov
fisubl
mov
pop
mov
das
mov
pop
fnsave
int3
add
sbb
inc
push
pop
inc
and
test
in
fsts
rolb
cmc
inc
mov
inc
cltd
jae
addr16
add
xchg
jae
dec
jne
xorb
xchg
outsl
shll
sbb
xchg
ja
leave
cmp
cwtl
jp
call
dec
push
test
lret
push
test
mov
sub
adc
in
scas
sub
icebp
test
pop
inc
pop
mov
sti
push
into
cwtl
adc
std
mov
adc
add
ret
push
pop
jb
inc
stc
push
popa
adc
sti
or
or
sbb
inc
lahf
push
pusha
out
std
jp
xchg
repnz
cmp
mov
jp
push
push
xchg
or
filds
mov
mov
or
mov
sub
xchg
std
inc
aas
fcoml
sbb
mov
stc
inc
imul
xor
dec
stos
dec
push
xchg
enter
aas
les
shll
pop
xchg
andb
aas
sub
fstl
xor
movsl
sbb
mov
rorb
imul
pop
cmpl
idiv
hlt
jo
popf
test
mov
int3
adc
fs
xchg
push
mov
push
push
in
stos
ljmp
fchs
sub
push
or
xchg
or
lds
dec
js
or
xchg
fstpl
loope
bound
out
daa
mov
adc
push
lret
sub
lea
fwait
setnp
pop
sti
outsl
scas
rep
ljmp
or
aas
inc
mov
fmull
or
pop
mov
cmp
aas
pop
inc
adcb
roll
add
repz
iret
xchg
cmp
mulb
pop
adc
xor
js
cwtl
shr
sub
pusha
mov
test
scas
jne
xor
out
jne
or
push
jl
adc
insb
mov
aaa
mov
loope
jne
mov
stos
enter
in
daa
and
stos
dec
stc
fs
fisubs
inc
pop
push
psubw
incb
stc
dec
decb
mov
pushf
popa
xor
jnp
mov
jno
push
out
sbb
aam
enter
cs
push
adc
xchg
aam
or
imul
and
push
ljmp
xor
imul
cmpl
les
hlt
or
mov
int3
ljmp
imul
and
out
pop
out
fwait
add
push
mov
mov
popa
into
js
enter
xchg
and
sub
test
mov
pop
adc
call
in
repz
xor
jl
lods
cmp
ss
jb
push
imul
test
lret
jae
ffreep
push
jne
arpl
inc
xchg
push
pop
in
andnps
lods
and
cmpsb
xchg
xor
jl
ret
lret
popa
arpl
je
or
daa
mov
xor
xchg
mov
popa
ss
rorl
maxps
loop
mov
jne
add
fs
dec
lcall
sbb
movsb
mov
icebp
or
dec
mov
call
cmc
xor
das
cmp
test
inc
aad
mov
lods
push
inc
cmpsb
sbb
xor
inc
jb
dec
push
jo
outsb
out
xor
pop
pop
pop
mov
xor
fisubrs
push
repnz
push
and
mov
mov
pop
test
jp
pusha
lret
xor
pop
lcall
cmpsb
xor
push
add
orl
mov
in
mov
js
test
in
adc
or
and
fistps
js
mov
pop
shlb
lcall
fbld
mov
insb
mov
sub
mov
fcomps
sahf
mov
inc
lock
mov
adc
mov
aad
rolb
shrb
mov
ja
jge
fldenv
or
xor
fisttps
and
pop
cs
scas
in
and
int3
sub
fs
pop
iret
enter
or
add
fidivl
in
lcall
pop
call
outsl
movsb
outsl
gs
xor
sub
sub
mov
sub
mov
lret
or
outsb
nop
test
shlb
adcl
and
dec
outsl
lock
outsl
out
daa
pop
test
pop
mov
push
adc
clc
inc
push
mov
jne
cmpsb
push
mull
and
outsb
or
mov
sti
mov
add
jbe
pop
mov
jl
in
mov
add
hlt
push
lods
outsl
mov
dec
mov
dec
in
sub
inc
cmp
orb
lret
outsb
dec
out
mov
clc
mov
adc
push
lahf
sbb
out
mov
pusha
add
fmuls
in
pop
mov
in
addr16
popa
rcll
lcall
cli
sarb
stos
cmp
pop
lds
xchg
mov
sub
push
sub
jmp
cltd
mov
or
sub
mov
push
mov
inc
loope
jg
jmp
xlat
jle
std
mov
aaa
lea
fwait
test
pop
nop
cmp
dec
mov
insb
cmpsb
push
ljmp
sbb
insl
pop
dec
ljmp
cmpsb
or
or
imul
lods
imul
push
shlb
or
adc
cld
repz
fdivrs
jbe
loope
mov
cmp
push
scas
push
js
mov
aam
dec
jae
dec
ret
sub
daa
mov
inc
adc
sbb
fistpll
enter
and
addr16
mov
stos
dec
sub
aad
jmp
xor
jmp
dec
repnz
jmp
fcmovnbe
int3
lahf
mov
add
mov
push
xchg
xor
sbb
dec
in
mov
js
pop
sarl
xor
sub
aas
popf
scas
mov
inc
icebp
jne
push
mov
js
in
fildll
addb
lcall
dec
stos
test
or
pop
arpl
outsb
adc
push
or
inc
and
sbb
ds
dec
xchg
mov
add
sbb
out
xchg
incl
ret
idivb
cmp
mov
jmp
nop
push
call
add
cld
pop
xor
sub
pop
mov
outsb
inc
lds
cmpsb
loop
inc
rcll
ss
xchg
pop
xchg
sbb
add
rorl
sbb
aad
fcmovb
stc
sbb
and
lock
data16
icebp
jle
lret
sub
loope
mov
xchg
adc
cmpsb
popa
lods
jb
shl
xchg
insl
fs
fsts
pop
dec
ror
xchg
mov
je
ret
inc
sbb
cmpsb
addb
call
loop
fst
aas
pushf
cmc
and
clc
pop
bound
cmp
pusha
loop
and
add
cwtl
movsb
push
sbb
das
push
aas
icebp
sub
ret
mov
in
pushf
subb
adc
pusha
dec
in
aam
or
push
pop
mov
aad
lock
inc
scas
cltd
jb
js
sahf
or
leave
mov
mov
xor
jb
daa
insb
dec
xchg
icebp
nop
jae
fwait
inc
testl
fidivs
add
pop
lret
push
mov
ja
adc
inc
xor
jnp
xor
negb
cmpb
stc
ljmp
pushf
xor
mov
jbe
call
imul
nop
aam
jae
in
jne
rol
sbb
xchg
mov
inc
xchg
aaa
sub
mov
push
pop
xchg
push
lret
lods
jmp
jge
ja
test
cs
imul
ljmp
push
data16
mov
popl
dec
sub
fsub
adc
push
mov
test
xchg
mov
lods
adc
jnp
std
push
adc
xlat
jmp
pop
mov
xchg
and
das
cmp
rclb
xorl
lock
mov
or
insb
test
and
cmp
stos
test
push
in
icebp
push
test
cli
cli
lock
mov
sub
imul
daa
pop
insb
mov
jae
sub
and
mov
and
mov
add
movsl
pushf
in
cmpsl
rclb
out
adc
test
fnstcw
or
mov
xor
xor
mov
in
mov
cs
xchg
mov
in
sbb
test
cpuid
fnstenv
out
jp
neg
std
push
push
add
enter
cld
mov
jge
mov
gs
shl
rcrl
loope
arpl
sub
mov
test
add
aas
add
loopne
mov
cmp
push
cwtl
sub
lea
jne
icebp
into
xchg
js
pop
and
adc
sub
xchg
push
pop
sbb
dec
add
roll
in
mov
jns
imul
jg
adc
test
mov
or
jmp
cmpsl
sub
leave
push
cmpsl
cmp
insl
dec
xchg
dec
xchg
pop
pop
xchg
mov
cmp
leave
lret
pop
xchg
pop
test
rorw
lods
cli
enter
sub
cmp
cltd
jnp
mov
aad
movsb
in
push
imul
shrl
rcrb
aad
and
imul
js
sub
inc
xor
xchg
xor
push
repnz
push
mov
aam
mov
imul
xor
dec
es
xchg
xchg
std
sahf
inc
dec
sub
int3
test
inc
ja
jmp
mov
lods
frstor
addr16
push
add
pop
jge
adcl
push
les
xchg
push
lea
push
fcmovnb
sub
insb
imul
movsl
mov
in
mov
xor
push
jecxz
cmc
and
insb
pop
pop
aaa
mov
popf
dec
mov
cmp
lods
adc
xchg
jmp
jmp
movd
test
or
jae
sbb
pop
repnz
out
fldl
cmpsl
adc
and
jle
dec
bound
push
outsl
in
cld
mov
add
popf
scas
xchg
cmpsl
sbb
adc
xor
insb
xchg
sbb
rol
jns
xlat
adc
arpl
pop
rcr
iret
in
cwtl
pop
pop
decl
dec
imul
insl
jle
loopne
fisubl
ljmp
inc
daa
aad
mov
rcrb
mov
out
mov
xor
inc
mov
aas
mov
ror
movsb
dec
cmpsl
scas
lahf
mulb
cmp
sub
mov
je
pusha
mov
incl
popf
pop
insl
subl
je
cs
mov
lea
imul
btr
aad
push
jp
lret
lcall
mov
xchg
cmpsl
sub
pop
and
ret
loope
out
mov
add
jae
push
mov
dec
je
gs
sbb
mov
lock
cmpsl
jecxz
lret
ds
add
stc
sbb
pop
and
arpl
in
fmull
mov
or
idivb
mov
imul
and
mov
pextrw
sbb
loop
jmp
orl
jns
cmp
mov
loopne
scas
add
andb
scas
test
cld
sbb
je
xchg
push
xor
sti
jecxz
imul
mov
fs
mov
cmpsb
mov
pop
in
push
imul
xor
out
sbb
add
mov
pop
popa
js
test
test
fcmovnbe
adc
cmp
aas
inc
inc
imul
std
mov
jp
dec
pop
ds
dec
dec
repnz
inc
mov
popa
hlt
cli
dec
jne
jmp
enter
cmpsl
stos
mov
pop
cs
test
insb
xchg
jo
push
mov
movsl
leave
negl
cmpsb
pop
add
insb
push
mov
testl
sar
or
sahf
cmp
jmp
dec
leave
clc
push
xchg
dec
pop
jl
sub
push
or
sbb
xchg
cli
loopne
mov
jle
mulb
xchg
adc
mov
sub
add
cmp
xchg
aas
ja
inc
sarl
pop
xchg
sub
dec
sbb
dec
lcall
jb
mov
mov
roll
jae
imul
mov
push
pop
cmpsb
inc
lods
jge
incb
lret
loopne
push
inc
adc
sbb
push
mov
push
mov
ret
popa
jmp
sbb
mov
xor
jle
and
int
lods
cmpsl
ds
imul
inc
cmp
or
icebp
mov
adc
ret
xor
cmp
pop
mov
inc
cmp
mov
iret
mov
mull
fcmovnb
xchg
lods
loopne
inc
ficoms
ret
xor
pop
xchg
jg
xor
xlat
add
or
ss
out
add
lock
add
sub
iret
rcrl
pushf
ds
push
je
dec
jle
fidivrl
jge
mov
testl
sub
mov
pop
xchg
test
adc
bound
and
cmp
call
mov
push
inc
in
xor
lea
loope
push
gs
loope
into
mov
dec
aaa
pop
imul
aad
add
push
pop
int3
fcoml
lret
mov
or
sub
stc
jle
xchg
jns
pop
in
ret
push
mov
imul
neg
pop
cmp
gs
fidivrs
xchg
ds
or
xchg
fimuls
mov
out
jp
leave
push
lahf
in
cmpsb
lcall
xlat
popf
idiv
out
in
cwtl
jmp
cltd
stc
movsb
movsl
test
push
add
or
xchg
xchg
mov
or
push
mov
cmp
lcall
cmc
neg
lea
cld
push
jmp
jno
adc
jmp
inc
loope
add
xorl
cmp
out
xor
push
out
je
jecxz
insb
mov
ja
mov
add
sbb
jg
or
fldenv
jo
lods
insl
mov
pushf
sbb
lretw
divb
push
mov
lods
cltd
aaa
in
fidivs
push
adc
mov
rorl
sbb
xor
outsb
adcb
es
aad
jbe,pt
sbb
aad
push
inc
mov
and
cs
je
cmp
dec
mov
mov
fstpl
mov
fdivs
push
mov
fstps
jp
dec
and
jne
inc
inc
or
shr
pop
inc
or
addb
xor
sub
jle
mov
adc
insb
in
sbb
insb
cmp
cmp
dec
shrb
jnp
push
andb
adc
push
jnp
fdivl
dec
call
mov
fnsave
inc
shl
jle
sbb
sub
movsl
test
cs
pop
dec
sub
sbb
xchg
rorl
lret
in
addb
pop
sub
out
addr16
cmp
lcall
bound
jns
xlat
ret
mov
aad
mov
jae
pop
push
sub
adc
leave
adc
cmc
xchg
repz
jnp
dec
sahf
push
fldenv
cmc
adc
pop
shll
push
jecxz
addr16
inc
jae
into
mov
push
inc
imull
sbb
jb
out
pop
lret
lds
ret
inc
jmp
jecxz
jmp
hlt
rcrb
ret
xchg
dec
es
bound
jl
sub
popa
pop
movl
and
fldcw
rcl
movsl
inc
jmp
dec
or
sub
sbb
movsb
dec
popf
std
and
cmp
push
test
lahf
dec
xchg
data16
outsl
in
imul
xlat
pop
aam
ljmp
test
sub
inc
or
mov
into
into
mov
mov
cltd
xchg
lock
mov
jmp
in
and
cli
fnop
pushf
data16
in
push
fcoml
sbb
mov
xchg
sub
ret
sub
aas
mov
mov
sahf
dec
mov
jle
dec
daa
test
inc
cwtl
bound
dec
or
or
mov
adc
sub
testb
daa
jo,pt
shl
rolb
add
push
mov
fprem1
and
aad
add
add
and
push
pop
lds
push
aad
mov
dec
bound
sub
leave
mov
push
dec
ret
aas
or
je
dec
scas
or
sbb
nop
adc
mov
xor
mov
inc
xor
mov
lods
jo
jp
stos
icebp
scas
std
push
lret
es
fs
ret
push
jecxz
pushf
mov
lods
xor
arpl
xlat
pop
test
cmc
test
and
or
mov
ja
enter
mov
dec
ficoms
cltd
cmpsw
icebp
adc
fidivrs
jns
mov
cmpsl
fdivs
dec
sbb
fnsave
jns
sbb
sbb
mov
cmp
loopne
sbbb
xor
dec
js
push
mov
clc
ret
and
dec
mov
int3
loope,pt
cmp
out
add
ret
pop
out
adc
push
cli
or
mov
sub
mov
push
mov
mov
adc
in
test
dec
add
rolb
repz
fstps
add
xor
insl
bound
sbb
jno
add
xchg
and
test
and
cmp
cld
or
add
int3
aaa
inc
out
mov
scas
imul
push
inc
les
pop
cmpsb
dec
or
sbb
inc
das
add
sbb
jne
mov
or
sbb
push
icebp
mov
jg
hlt
stos
push
insb
fisubl
mov
js
xchg
call
inc
and
icebp
sub
inc
cli
dec
inc
je
rcl
mov
sub
les
or
stos
sarb
dec
push
add
mov
mov
add
fmuls
mov
adcl
and
sbb
or
fsubl
in
cmpsl
aam
test
cmc
pop
cmp
repz
cmpsb
test
shlb
movsb
xor
inc
fstpl
xor
push
sub
xor
jge
mov
jae
sbb
dec
les
int
sub
lds
call
fdivr
dec
xor
cmp
ret
ffree
iret
lock
pop
and
push
fistl
loopne
pop
and
mov
or
cmp
mov
and
bsf
into
test
js
jae
inc
jne
out
add
lcall
dec
dec
sub
xchg
inc
mov
mov
test
in
xor
xlat
clc
stos
cmp
cli
insb
cmp
sbb
stos
inc
andb
jb
sbb
xchg
lods
push
scas
mov
clc
xchg
xchg
and
cwtl
xorb
into
xlat
mov
imul
xor
mov
mov
mov
aam
xchg
xchg
aad
imul
lods
loop
pop
dec
jle
jle
adc
divl
decb
fldcw
mov
xchg
pop
push
cmp
jg
jge
mov
sub
cmpsb
jp
mov
cmpsl
cltd
scas
mov
sub
inc
pop
adc
ret
and
mov
in
xchg
aas
cmp
ds
ljmp
shl
fcomip
xchg
nop
js
in
cmp
cmp
or
push
cmp
xor
inc
insl
jmp
outsl
sahf
loopne
push
push
std
lret
add
sbb
pop
jmp
into
inc
push
mov
jle
cmp
mov
or
movsl
sbb
imul
jp
or
jo
fs
xchg
lret
cli
fcom
mov
pop
cmp
and
jge
jg
jne
sub
jmp
mov
flds
imull
cmpsb
popa
iret
add
adc
aas
repnz
ja
js
mov
in
pop
pushf
fiadds
mov
in
push
je
xchg
addr16
push
out
sub
jp
sti
pop
std
mov
into
adc
lret
jbe
adc
nop
add
inc
lcall
out
cmpl
pop
cmp
jle
sti
mov
push
test
icebp
adc
aas
daa
or
push
pusha
dec
mov
cmpsb
sub
mov
dec
outsl
arpl
add
std
pop
inc
test
mov
inc
mov
xor
push
add
lods
outsb
add
sub
add
pop
xlat
xchg
mov
cmp
pop
jg
dec
ljmp
movsl
leave
ds
pop
hlt
jns
pushf
in
stc
pop
mov
scas
out
js
fmulp
push
and
shll
mov
lods
fistl
lret
jnp
mov
js
xor
pop
mov
ss
aas
aaa
loop
pop
adc
sub
cmp
or
push
scas
sub
mov
dec
or
iret
jge
mov
jge
lcall
js
adc
ja
js
inc
movl
mov
dec
in
dec
xchg
std
jnp
mov
ss
lds
dec
push
fisubs
sub
and
mov
push
mov
enter
jne
fdivr
popf
es
mov
mov
xor
pop
imul
les
imul
adc
lret
clc
int
jns
push
not
pop
aas
jno
andb
clc
cmp
xchg
cltd
xchg
mov
pop
shll
sarl
sbb
push
inc
inc
fistps
ret
and
dec
fnstsw
imul
dec
sub
das
dec
inc
cmpsb
ds
jge
cwtl
addr16
inc
lds
mov
fidivrs
push
rcrb
ret
adc
inc
fldt
add
data16
mov
or
cmp
shr
and
cmp
out
or
enter
aam
lods
push
adc
inc
stos
jbe
mov
ficoms
xchg
lcall
ss
sahf
dec
xchg
sub
fmuls
sti
int3
scas
cmp
xlat
pop
dec
cli
or
push
jecxz
cmp
addr16
inc
inc
xlat
pop
mov
and
sub
fdivr
and
ljmp
cli
imul
inc
xchg
push
and
add
lret
mov
aas
mov
lds
test
xchg
sbb
dec
pop
push
lret
dec
ret
mov
mov
dec
lcall
sbb
mov
or
mov
cmpsb
push
jo
dec
jnp
ficomps
lods
xchg
push
xor
jl
add
test
pop
xor
xchg
aad
sbb
mov
notl
mov
insl
popf
cltd
lods
int3
outsl
xor
xor
mov
or
arpl
jo
ret
int3
sub
pop
in
icebp
xor
lcall
into
push
int
cltd
or
cli
dec
cmpsl
or
lock
push
out
jecxz
jno
fdivrs
cmp
ja
imul
rcrl
dec
add
inc
ds
scas
dec
xchg
xchg
outsb
jae,pn
adc
dec
xor
daa
mov
enter
cmp
xchg
jge
lock
add
adc
scas
cmpsl
mov
int
mov
jmp
pop
sub
xorl
mov
movsl
test
inc
das
in
pop
dec
and
push
icebp
or
psrlq
cmp
cmpl
jo
add
add
dec
lret
and
mov
in
cmpsb
adc
cmpsl
mov
jnp
loope
or
inc
lret
enter
pushf
lret
call
lods
pop
lcall
lock
push
mov
inc
ret
cltd
in
cmp
adc
xor
sbb
push
pop
pop
out
jo
cmc
xchg
push
outsb
test
adc
lods
adc
iret
enter
mov
nop
jl
cs
stos
inc
add
sub
sahf
add
jmp
aam
adc
xor
sbb
jp
out
sbb
ret
or
mov
test
sub
jp
mov
scas
jmp
clc
xchg
mov
lahf
repnz
test
mov
cli
or
or
pop
or
mov
and
sub
fs
es
mov
aad
add
test
lea
push
test
outsb
daa
cmp
jae
mov
xor
push
mov
mov
jnp
or
push
inc
js
and
jno
repnz
cmp
pusha
push
stos
int3
mov
fwait
sub
cmpsl
mov
push
or
or
jg
pop
adc
or
dec
mov
loop
stc
inc
out
xor
lock
mov
pop
daa
ret
int3
rorb
outsb
xchg
movsb
push
rclb
test
mov
or
sahf
out
mov
and
xchg
sahf
cmpsl
fsubrs
cmpsb
push
mov
mov
cli
in
pop
jne
fsubl
lods
pop
jb
ret
fdivp
mov
vpsrld
aam
mov
fsts
mov
xor
lcall
xchg
idivl
rcrl
lahf
mov
xchg
lock
and
dec
andl
daa
mov
mov
fnstenv
push
popf
cli
lds
push
mov
rolb
lret
int
mov
cmp
hlt
lcall
adc
push
jo
test
push
pop
movsl
dec
lret
imul
pusha
sahf
sbb
mov
not
push
add
fstpl
mov
cmc
xchg
mov
bnd
lret
stos
shrl
inc
notb
mov
mov
test
or
lods
aam
ljmp
lret
dec
add
and
adc
mov
sti
inc
dec
xor
and
mov
test
mov
cmp
xor
sub
leave
ljmp
popf
loopne
pop
mov
rolb
nop
xchg
mov
jb
dec
pusha
std
rcrb
aad
jo
xor
mov
push
push
jnp
push
mov
dec
jg
pop
aam
adc
mov
pop
jns
ja
jbe
lock
cmp
mov
pop
mov
ret
jmp
es
lds
pop
out
adc
outsb
out
mov
clc
add
ret
inc
dec
mov
push
and
lcall
adcl
das
push
push
jge
mov
sub
push
pop
shll
inc
mov
jmp
test
cmp
pushf
jmp
mov
stos
or
in
cmp
jbe
mov
aaa
inc
xor
sbb
adc
sub
push
jl
mov
xchg
nop
lock
xchg
adc
mov
cld
stos
rcl
call
dec
pop
and
enter
dec
stos
das
test
xor
jmp
jne
mov
dec
fcomi
imul
mov
push
loopne
mov
jge
fst
movsb
cmp
or
sti
iret
lret
jbe
pushf
negb
xchg
fwait
repz
lahf
loop
push
enter
push
stos
imul
cmp
dec
cmp
jbe
push
js
xor
mov
xchg
rorb
dec
adcl
in
pop
jl
notl
lods
dec
jge
mov
js
pop
sub
push
xchg
inc
insl
xorl
sbb
mov
add
sub
xor
scas
mov
mov
or
repz
in
inc
xchg
and
push
fsubl
popa
add
fidivs
sub
pop
mov
je
inc
xor
sbb
add
cwtl
mov
mov
mov
mov
into
push
inc
fwait
dec
pop
ds
dec
lret
inc
inc
shll
movsl
pop
xchg
sbb
pop
inc
dec
fisttps
insb
cmpsl
jp
push
mov
and
ds
push
push
jle
or
sbb
pop
mov
packsswb
dec
push
dec
xlat
sahf
shlb
xchg
jne
test
pop
lock
push
xchg
mov
xchg
jmp
cmpsl
add
ficoml
gs
adc
and
push
cmp
gs
dec
push
lcall
scas
fdivr
push
sub
out
pop
and
sbb
mov
or
jecxz
scas
je
jp
xchg
xchg
cmp
pop
ficompl
push
mov
adc
xchg
fwait
loop
lds
mov
int
sbb
incl
xchg
ret
pop
aaa
orb
mov
testb
sub
cltd
mov
jnp
mov
in
aam
mov
icebp
ret
xchg
ror
pop
scas
in
mov
cld
aad
jl
dec
nop
or
cmp
imul
mov
fstpl
push
lock
sub
jmp
daa
inc
daa
adcb
push
rcr
insb
in
in
mov
push
add
fs
jnp
sub
add
dec
or
out
je
cli
push
jns
jns
dec
lea
mov
test
cmp
cltd
push
inc
inc
and
in
sub
lds
lds
cmp
pop
sbb
inc
jmp
pushf
out
lods
jl
subl
adc
popf
loope
sub
jl
hlt
jne
mov
repnz
cs
cld
aaa
aam
jne
cmpsb
jbe
mov
shlb
outsl
inc
inc
mov
out
in
adc
loope
mov
mov
fsub
mov
loope
mov
cmp
icebp
hlt
popf
hlt
sti
jne
pushf
xchg
outsb
lcall
lea
pop
sub
outsb
sahf
les
cmp
sahf
pop
xlat
or
lds
xchg
push
inc
clc
add
lds
xor
mov
lods
cmc
jb
sub
rcr
std
sbbb
jbe
jo
dec
xchg
and
sub
jmp
into
sbb
push
xchg
cmp
inc
pop
or
and
mov
mov
push
loop
cmp
lret
enter
adc
repnz
rorl
es
mov
sahf
inc
fcompl
push
push
fldt
sbb
cmp
lret
push
push
gs
lahf
mov
push
ljmp
out
jp
xchg
cmc
and
inc
popa
add
adc
decl
mov
jmp
mov
outsl
adc
enter
add
xor
in
divb
int3
sub
fldenv
dec
xchg
pop
adc
negl
cmp
outsb
xchg
sub
outsl
call
stos
xchg
push
sbb
shlb
jbe
cltd
jns
inc
aas
sbb
xchg
insb
insl
sub
mov
jmp
lret
adcl
scas
jge
aad
mov
pop
mov
dec
mov
insb
fisubrl
stos
fbstp
jle
in
and
pop
jo
in
pop
mov
inc
lcall
xchg
add
cwtl
mov
xor
and
sbbb
lret
outsb
pusha
movsl
pop
inc
into
mov
mov
pop
scas
loopne
aad
and
sbb
lahf
decl
sub
or
call
inc
and
pusha
mov
mov
fadds
les
leave
mov
rcrl
push
push
in
xchg
out
push
aaa
xchg
push
xchg
pop
mov
ret
xor
push
mov
aas
and
pop
data16
fists
cmpsb
jns
movsb
rorb
pop
testl
mov
vmwrite
les
aaa
mov
in
stc
data16
sbb
leave
js
pop
repz
dec
es
lods
add
rcrb
xchg
idivl
cwtl
xchg
sbb
inc
stos
scas
pop
push
xchg
or
add
mov
fnstenv
hlt
cmpsl
fs
addr16
rcll
addr16
xchg
out
pusha
xchg
cmc
sbb
push
ret
mov
sti
jp
sub
lods
mov
outsb
jno
jp
mov
fdivrs
pop
daa
cltd
pop
in
lcall
fcoms
push
sub
js
push
mov
adc
mov
bound
outsl
mov
cmp
das
push
dec
add
adc
mov
adc
sbb
adc
clc
shlb
adcb
xor
ss
jp
and
lcall
mov
lds
divl
test
push
mov
sbb
push
add
xor
and
mov
insb
dec
push
stos
dec
mov
lcall
sub
orb
ss
fstpl
mov
or
mov
push
mov
lcall
cwtl
inc
test
loopne
cltd
int
mov
pop
fdivl
int3
btc
lds
push
stos
int3
jo
push
push
mov
pop
les
xorb
insl
arpl
cmpsl
clc
push
aas
adc
in
stc
adc
pop
dec
cli
push
cmp
gs
idivb
mov
nop
fwait
dec
cwtl
xchg
jo
cs
rcrb
test
pop
sub
mov
insb
nop
daa
shl
bound
xchg
mov
jnp
xchg
stos
and
mov
fcomps
mov
jg
loop
mov
mov
pop
movsl
sarl
inc
loope
popf
test
inc
int3
push
cmp
cli
inc
mov
mov
cmc
inc
int
jge
popf
sbb
int
test
iret
loope
mov
cmp
and
loopne
lock
push
insb
sbb
stc
jecxz
xor
repz
cmpsl
adc
daa
addr16
jmp
inc
insl
ss
icebp
cwtl
fs
mov
pop
mov
ret
ds
out
into
push
adcl
xor
rclb
das
stc
ljmp
mov
out
lret
fstl
or
cltd
add
sahf
xor
shrl
repz
inc
repnz
xor
je
cli
and
mov
cmpl
pop
testb
sub
jo
sub
inc
cltd
enter
cmpl
ja
push
movb
dec
arpl
xor
popfw
mov
add
das
cmp
sti
stos
cld
stc
mov
adc
call
ret
das
test
fisttps
call
jmp
mov
adc
sbb
cmp
or
jne
outsl
inc
and
int3
filds
lds
sub
rcrl
sbb
dec
jns
pop
or
push
divl
add
loop
scas
push
rclb
mul
or
cld
mov
jno
mov
push
jmp
xor
mov
or
pop
cli
fisubl
leave
lods
add
inc
inc
jg
fsub
es
dec
adc
leave
mov
imul
add
adc
sub
loopne
mov
pop
out
add
gs
add
pop
out
rcr
inc
add
popa
aad
mov
sub
andl
or
cmp
pushf
inc
loope
dec
sbb
push
movsb
outsb
add
ror
xor
icebp
popf
jg
mov
rcpps
push
pop
je
and
mov
ja
imul
sub
mov
xor
or
loop
pop
insb
mov
push
add
testb
or
fsin
sahf
xor
sbb
popa
fdivs
dec
sub
pop
xlat
loopne
mov
icebp
mov
rcrb
or
sub
jnp
and
or
jp
popf
mov
adc
sub
and
test
sbb
sub
rol
pop
sbb
imul
jbe
push
fwait
outsb
out
mov
or
sub
stc
loopne
adc
mov
xor
lahf
inc
rcll
aaa
adc
stos
and
and
ret
cld
add
sub
pop
add
test
mov
call
pop
outsb
push
sbb
push
mov
or
out
outsb
fadds
add
mov
outsl
in
mov
and
mov
lods
pop
mov
inc
aas
dec
lods
mov
mov
lock
or
jmp
scas
pop
inc
adc
scas
jmp
mov
mov
arpl
outsl
cmp
xchg
iret
cli
cld
enter
ljmp
sti
dec
xchg
fsubl
repz
movsb
into
call
orl
cs
dec
mov
out
mov
in
leave
aaa
test
popf
cli
insl
lock
test
loope
fdivl
and
jge
sbb
gs
test
aaa
mov
cmp
cmp
xor
pushl
out
mov
rcl
das
push
ja
and
mov
jbe
bound
aad
bound
lds
sub
fldcw
sub
fsubrs
cwtl
sahf
bound
inc
pop
ljmp
stos
je
test
loop
dec
add
loope
test
movsb
sahf
fidivrs
fisubs
inc
aam
rorl
sarb
ljmp
js
sub
outsb
push
inc
xchg
aas
int
jb
jmp
and
mov
xchg
sahf
mov
push
inc
lds
adc
push
mov
cli
pop
lahf
test
rclb
cmpsl
mov
pop
lcall
subb
loopne
stos
mov
push
aam
sub
push
jecxz
decb
mov
add
or
xchg
aad
or
cltd
sbb
and
loope
dec
adc
or
xor
loope
jns
enter
push
jne
nop
imull
fnstenv
xchg
pop
and
inc
gs
xor
in
lea
xchg
mov
movsl
pop
scas
xchg
inc
or
pop
fldenv
das
addr16
stos
sub
testb
inc
lret
repnz
movsb
mov
pop
xchg
xchg
pop
push
push
pop
stos
psubd
fimuls
lcall
mov
lcall
mov
or
jns
xor
sub
jmp
stos
sbb
cmp
cs
push
xor
lcall
leave
fs
add
cs
pop
bound
push
cmpsb
mov
fldl
mov
dec
jl
xchg
jg
cltd
paddsw
pop
popa
fstp
jbe
sub
adc
dec
shl
and
fsubrl
mov
mov
sarb
shll
adc
mov
ret
nop
sbb
xchg
dec
add
fst
push
mov
jno
or
cmp
mov
add
fidivrl
nop
sbb
sub
sbb
xor
dec
jmp
das
addr16
xor
xor
in
and
imul
in
cmp
idivb
push
repnz
jne
jp
sbb
scas
or
in
pop
sub
xor
mov
jnp
add
xchg
push
addr16
nop
lcall
cmp
add
bt
xchg
insb
out
dec
jno
out
cmp
mov
mov
test
mov
call
push
repz
js
mov
xchg
in
movsl
mov
or
sub
cmpsl
or
jo
call
xchg
sub
lret
and
jne
loope
xor
rol
xor
fdivs
cmpb
inc
and
lret
jae
clc
mov
fnsave
sbb
int
add
insb
sub
pop
mov
sub
push
cmp
sub
lret
jp
scas
out
or
fmull
leave
jne
xor
orb
in
or
ljmp
inc
cmp
inc
pusha
and
sbb
cli
xchg
lcall
inc
pop
dec
ret
mov
add
cld
cmp
jmp
mov
dec
test
mov
add
fadd
mov
int3
pushf
add
adc
jmp
push
or
dec
mov
cmp
aam
mov
les
jne
push
cltd
push
popl
push
mov
sbb
mov
dec
into
mov
insl
mov
jns
xor
xchg
clc
out
cmpsb
daa
lods
data16
mov
sbb
out
ret
push
xlat
iret
iret
xorb
imul
cmp
jnp
out
cmp
mov
sti
or
mov
adc
out
fnstcw
rcrl
in
pop
aas
lods
mov
mov
push
mov
xchg
sbb
in
sub
xor
rcrb
stos
cmp
rclb
clc
bound
cld
xor
call
mov
xchg
sub
push
jb
jg
movsl
sub
mov
stos
cmovge
xchg
das
cmp
pop
inc
xchg
jbe
inc
or
xchg
inc
cli
int
cmp
movsb
dec
lods
inc
fwait
jb
sbb
mov
jmp
push
call
in
mov
pop
mov
ja
mov
push
xchg
pop
movsl
imul
sub
push
sbb
cli
aas
sub
mov
in
mov
mov
sbb
mov
int3
mov
mov
lds
push
jb
push
into
loopne
dec
pop
mov
and
aad
inc
loop
pop
in
cmp
xchg
stos
out
mov
adc
mov
push
push
mov
shlb
mov
inc
pop
push
rcrb
cwtl
repz
int3
or
or
push
cs
js
jb
mov
ret
js
add
sbb
in
cwtl
imul
aas
rcrl
jmp
test
arpl
stos
xchg
insb
dec
leave
xlat
sbb
sub
and
xchg
rcrb
cmp
inc
sbb
xchg
insb
sahf
test
out
scas
adc
dec
mov
lods
xor
xchg
cmpsl
imul
jne
pop
mov
out
and
fs
xchg
imul
add
pop
sbbb
sub
sub
sub
icebp
and
cld
push
arpl
push
movsl
mov
add
fdivr
cmp
mov
jb
or
dec
adc
sbb
sar
lds
cli
fdivrp
hlt
sub
pusha
mov
subl
scas
leave
and
sti
jg
push
xchg
mov
mov
inc
dec
cmp
jmp
pop
cmp
in
stos
dec
push
mov
fsubl
fcmove
sti
cmp
jae,pt
xchg
testl
stos
test
cli
pop
mov
movb
mov
pusha
and
xor
aas
aas
mov
or
je
lcall
mov
cmp
pmuludq
pushf
and
or
xchg
jl
xor
ja
int3
mov
sahf
jle
js
ret
xchg
sbb
mov
mov
fisttpl
sub
sbbb
push
push
sub
mov
inc
loope
shlb
outsb
int
cmp
push
cmp
subl
jns
lds
jb
jb
lret
and
inc
xchg
inc
sub
outsb
iret
jb
dec
pushf
les
stc
pop
sti
aaa
int3
cmp
mov
out
dec
lock
mov
insl
jle
xchg
add
imul
sub
ret
pop
cmc
xor
sbb
ja
stos
nop
mov
inc
mov
andl
mov
faddl
out
push
push
jno
sbb
mov
xchg
dec
movsl
mov
sbb
jecxz
sub
lret
stc
arpl
lret
xor
push
imul
aad
fwait
jp
aad
xchg
enter
inc
mov
sub
fstps
mov
fnsave
sub
adc
cmc
add
fisttpll
cltd
ret
pusha
jle
cs
inc
sbb
sub
sub
enter
rcrl
xor
hlt
mov
and
test
mov
sti
mov
push
cmpsb
cld
iret
imul
xchg
xchg
or
sub
lret
insb
sbb
dec
push
xchg
scas
mov
push
scas
xor
mov
jl
mov
pusha
icebp
mov
sbb
jmp
jp
out
jecxz
sub
dec
fmul
jmp
cmp
loope,pn
mov
lods
jae
lret
cmpsb
cmp
and
loop
rcrb
xor
ljmp
xlat
testb
in
push
ja
ffree
mov
xor
sub
push
icebp
add
adc
ret
pop
and
dec
loopne
adc
sbb
pushf
pop
jmp
adc
fs
and
subl
xchg
outsl
loope
shrb
es
xchg
pop
je
nop
lock
aaa
and
je
xor
test
mov
mov
rolb
outsl
push
test
daa
cmp
xor
movsb
cli
mov
insb
cmp
jnp
xchg
leave
nop
iret
push
jae
fs
sbb
rorl
adc
inc
loopne
add
jmp
iret
in
mov
incl
stos
jge
test
stos
cltd
out
scas
add
les
sub
mov
inc
shrl
mov
ficoml
jle
add
push
stos
in
pop
js
inc
push
cmp
pop
sub
xchg
iret
aaa
xchg
inc
add
dec
dec
in
jns
out
loope
loopne
jne
imul
sbb
jbe
mov
and
cmp
test
push
cs
and
ret
orl
in
dec
addl
jmp
sbb
dec
movsl
adc
xchg
dec
lock
hlt
les
push
jl
pop
sbb
ja
test
push
dec
xor
xchg
outsl
pop
xchg
jbe
mov
cld
daa
call
cmp
mov
nop
xor
lret
lea
insb
aad
mov
sbb
popa
jmp
inc
jle
fistps
std
sbb
add
or
das
push
or
daa
sub
cmp
ret
sbb
push
dec
pusha
jbe
jecxz
xor
sbb
add
mov
push
jecxz
jecxz
out
rcrl
mov
mov
aam
les
mov
addr16
mov
sti
insl
fisubrl
sub
xchg
js
movsl
mov
test
dec
ljmp
and
push
add
mov
sbb
loop
pusha
sbb
pushf
jecxz
nop
nop
daa
adc
fcmovne
mov
pop
fdivrs
scas
repz
pusha
xor
std
jno
es
dec
mov
mov
int
xor
sub
ds
ljmp
xchg
jmp
xor
ficoml
das
inc
or
add
mull
ficomps
int3
fs
pop
movsl
std
int3
stos
mov
and
clc
and
pop
push
pop
xor
pop
add
xor
dec
lahf
xchg
push
mov
scas
pop
push
insb
int3
add
lret
add
add
loope
inc
push
sub
enter
lahf
das
mov
mov
cmp
mov
insb
jns
or
inc
rcl
push
aaa
push
lret
aad
cmpsl
and
mov
repnz
pop
jb
xchg
hlt
sub
mov
pop
in
aas
popf
cmp
in
mov
adc
push
mov
icebp
cmp
les
cmpsl
stos
nop
sub
es
subl
dec
sbb
aas
cltd
push
lods
or
cld
and
or
mov
lock
sbb
push
sbb
imul
pop
push
mov
int3
out
push
xor
adc
sar
push
push
mov
mov
pop
call
pop
inc
jo
movsl
data16
mov
fs
out
popf
cli
and
push
fidivrl
jae
in
inc
push
xor
into
popa
shll
jns
std
fs
aas
shrb
jg
push
sbb
cmp
sbb
rol
out
test
fs
adc
and
sti
add
cmp
out
dec
movsl
cmc
jno
dec
js
rorb
dec
xor
xchg
xchg
and
into
jno
push
pop
mov
mov
inc
in
loop
sahf
xchg
mov
inc
mov
loop,pn
add
ret
das
lcall
testl
mov
push
in
ret
sub
nop
int3
scas
out
mov
inc
xor
lock
adc
mov
push
xchg
mov
push
mov
mov
ret
jnp
inc
push
xchg
out
dec
xchg
jge
or
xor
sbbl
jecxz
mov
movsl
jbe
roll
cmp
xchg
push
pop
inc
aas
cwtl
push
ficompl
lret
lret
leave
lods
inc
xchg
push
push
pusha
and
sbb
mov
loopne
bound
dec
cmp
jne
jbe
mov
por
mov
mov
negl
loope
and
add
lock
cs
xchg
cmc
sti
insb
stos
pop
sbb
sbb
cmp
ljmp
mov
and
shr
push
in
xor
add
mov
pop
test
jl
ss
pusha
lret
fcmovb
and
push
int3
int3
xchg
dec
rol
daa
mov
jno
lea
dec
dec
clc
or
pop
inc
movsb
test
pushf
xor
pusha
sti
mov
jnp
xor
cmpsb
push
out
sbb
push
sti
jae
sbb
jae
push
les
push
inc
adc
aad
movsl
mov
repnz
test
push
pop
repz
sbb
and
lcall
add
test
inc
xchg
in
in
inc
lods
es
and
leave
pop
sbb
fs
sbb
adc
push
inc
xor
or
jp
daa
jg
push
pop
pop
cmovs
rcrl
inc
dec
into
pusha
jg
mov
loope
je
sbb
dec
outsb
jns
cmp
cmp
fildl
push
nop
test
gs
sub
inc
xchg
aaa
dec
jle
xchg
scas
pusha
adc
cmp
outsl
xchg
ljmp
scas
sbb
jmp
inc
mov
addr16
stos
inc
mov
bound
iret
nop
push
add
test
cmp
push
jns
shlb
loopne
int
popf
enter
add
xchg
or
sbb
sti
cld
movsl
lret
lods
aam
into
aad
dec
dec
daa
adc
cmpsb
imul
mov
movsb
add
mov
test
push
stos
in
cmc
push
test
mov
mov
stc
fldcw
pop
cmp
in
add
sbb
mov
loopne
ds
iret
loopne
loopne
xchg
and
add
add
pop
test
add
lret
push
fwait
cmp
jb
or
rclb
and
adcb
cmp
jecxz
xor
je
aad
pop
jecxz
cwtl
cs
addr16
iret
cmc
pop
mov
in
add
popa
push
dec
push
xchg
test
dec
jle
adc
test
popa
jg
mov
lret
jle
push
js
dec
lahf
lds
dec
xor
mov
insl
fs
mov
and
shll
cmc
cmp
out
icebp
cmp
js
jo
cld
cs
scas
and
popf
dec
jge
xchg
loop
int3
dec
repz
and
pop
jae
sub
cmpsl
fldt
jl
ljmp
jmp
fs
push
xchg
test
or
xchg
repz
add
les
fnsave
call
cs
cmp
and
bound
clc
cmpsb
lods
jmp
or
sbb
push
dec
xlat
dec
cs
sahf
xchg
sbb
shl
jle
clc
imulb
fistpll
mov
mov
es
movsb
inc
push
cmp
push
jmp
mov
and
rorl
cmp
sbb
jnp
xor
cwtl
push
sti
sbb
jno
sub
xor
mov
dec
mov
mov
add
sti
jne
in
xorl
pop
xlat
cmp
test
lahf
lods
aam
shlb
in
sub
or
sar
or
lret
pop
insb
out
pop
adc
scas
imul
mov
pop
call
cli
push
dec
ljmp
adc
mulb
vpsllq
je
cmc
leave
sbb
inc
cs
pusha
xchg
xlat
repz
idivb
jae
adc
jns
inc
or
ret
lods
js
jg
lods
scas
xchg
rcrb
push
lods
xor
divl
mov
mov
sbb
rcrb
rol
sub
rclb
jne
jns
xorb
pop
sub
call
les
into
fildll
xor
adc
pop
or
and
xchg
mov
lods
and
adc
or
fucomi
adc
ds
push
push
adc
orb
cmpsl
dec
not
insb
imul
mov
stc
or
arpl
js
testb
jae
fistpll
mov
mov
ds
mov
jmp
cmc
in
pushf
lds
mov
scas
dec
pop
pop
setbe
xchg
inc
or
push
xor
lea
pop
testl
js
pop
inc
inc
sbb
outsb
movsl
iret
sbb
mov
mov
in
es
xor
pop
adc
repnz
jp
adc
lcall
inc
loop
movsb
mov
jle
daa
xchg
xchg
loope
mov
lods
inc
in
add
sbb
xchg
movsb
cmpsl
js
xchg
repz
repnz
daa
call
in
fimull
dec
inc
std
mov
mov
mov
cld
mov
es
sbb
loopne
and
je
test
nop
fwait
ret
jmp
cmpsl
fcompl
sub
and
inc
xchg
push
je
lret
repz
lds
sub
cmp
mov
ja
into
jge
and
sub
enter
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pop
orb
dec
js
xor
mov
sbb
cmp
shr
mov
mov
pop
andl
push
xchg
inc
int
orb
test
cs
jmp
ja
insl
rorl
dec
test
decl
clc
ror
sbb
jle
loopne
in
inc
dec
mov
sbb
cmp
fimuls
or
orl
ret
sbb
mov
sub
adcl
aaa
pusha
aad
clc
xor
test
mov
adc
add
inc
or
and
insl
mov
int
test
out
pop
cmpb
ss
ja
loop
loope
data16
sbb
jl
movsb
lret
xchg
into
jge
push
cmp
loop
inc
aad
sbb
cmp
mov
mov
cs
add
ret
pop
in
cli
aam
jge
gs
or
aaa
xchg
mov
sub
in
or
and
addl
call
frstor
test
dec
cmp
dec
cwtl
scas
xchg
sub
dec
xor
rcrl
icebp
push
sbb
mov
test
and
dec
jb
jle
xchg
sbb
xor
xor
stc
push
add
jl
hlt
cmp
int3
sbb
nop
push
mov
les
jb
cmp
cmp
cmp
lods
cs
jge,pt
cmpsb
hlt
or
jne
test
xor
and
pop
stos
pop
pusha
into
sahf
shlb
and
mov
addr16
xor
pop
aam
xchg
call
sbb
pusha
jecxz
loope
mov
cld
jecxz
or
ret
lret
adc
add
ds
mov
aaa
arpl
sbb
pushf
das
sbb
xchg
dec
sbb
dec
sbb
dec
orb
outsb
push
cmpsb
dec
icebp
mov
mov
lea
repz
ljmp
lods
push
mov
idivl
push
mov
mov
clc
pop
loopne
dec
aam
loopne
cvtps2pi
lret
ss
rorl
sbb
ffree
or
and
sub
push
jno
and
shlb
addl
lea
sub
rorl
pusha
add
inc
in
lods
andb
clc
aad
mov
jno
rclb
add
add
insb
sub
int
fucom
and
out
mov
push
mov
and
mov
cmp
mov
imul
and
inc
mov
shl
imul
pop
icebp
ret
sahf
lds
popa
das
out
pushf
push
add
dec
cmp
repnz
aam
mov
xchg
test
imul
shrl
aam
xchg
pop
les
pop
jb
pop
xchg
cld
fxch
addb
xchg
mov
xor
mov
xor
xchg
cmp
xchg
or
xchg
push
int3
mov
pop
and
popf
rol
and
scas
lcall
dec
jp
pop
pusha
bound
push
shll
test
mov
out
push
pop
dec
orl
mov
mov
and
xlat
and
sarb
inc
lods
mov
lods
js
push
popl
test
mov
test
popa
mov
and
scas
shl
cmc
adc
shrl
imul
pop
mov
dec
adc
test
push
nop
jle
mov
shlb
xor
xchg
js
cmpsb
push
out
roll
imul
cli
data16
cli
iret
stos
push
into
push
or
inc
cwtl
or
dec
sti
jp
mov
mov
jp
std
inc
ss
jecxz
xor
mov
push
jno
imul
mov
push
mov
loopne
je
dec
push
sub
and
sti
test
sbb
push
xchg
and
sub
in
movsb
lret
movsb
cmc
jge
jns
push
popf
sub
shrl
or
inc
and
dec
adc
sub
push
sbb
sub
adc
jo
adc
pop
dec
cmc
mov
sub
loop
sub
xor
arpl
add
out
sbb
sub
orb
bnd
cs
xor
push
lea
lret
lock
xchg
xchg
mov
pop
add
sub
mov
clc
lods
adc
sbb
inc
adc
dec
sub
lock
iret
sbb
or
outsb
or
adc
nop
jns
cld
scas
fwait
mov
fbld
iret
data16
call
ds
rdpmc
and
push
push
push
and
pop
out
adc
jg
nop
sysret
shrb
sahf
ficoms
mov
pop
les
inc
mov
inc
pop
mov
and
cltd
inc
push
push
les
imul
push
test
out
xchg
or
or
dec
jne
fildll
ljmp
jmp
adc
cltd
pushf
in
push
cmc
pop
and
out
sbb
stos
andl
fst
sahf
pop
adc
dec
pop
inc
add
sub
dec
pushf
push
fiaddl
test
or
in
leave
fsubrl
xor
jne
add
lea
cmp
pop
dec
shrl
sub
nop
je
add
add
add
lock
add
add
add
lock
add
add
add
decl
add
lock
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
pop
cmp
sti
adc
sbbb
adc
test
insb
mov
xor
and
stos
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
aas
sbb
add
lock
inc
addl
adc
fistps
fwait
adc
mov
adc
xor
lds
inc
orb
pop
sbb
add
sub
lods
adc
sbb
pop
or
adc
sbb
inc
ror
xor
mov
inc
dec
test
imul
mov
push
cmp
add
call
mov
or
push
call
js
les
fstl
mov
inc
dec
rolb
arpl
dec
jp
push
movsb
jbe
add
lea
stos
fstpt
jnp
add
jae
test
push
mov
ja
icebp
jnp
cli
rep
std
mov
push
popl
das
outsl
add
or
movsl
ret
sbb
push
call
mov
inc
pushf
sbb
stos
and
mov
lea
push
xor
adc
out
rcrl
xchg
jbe
inc
xchg
cmpsl
and
sub
or
adc
add
mov
mov
xor
leave
inc
add
int3
or
aaa
push
shlb
sub
lret
adc
jne
jmp
test
push
cwtl
roll
test
sbb
call
outsb
jno
stos
inc
push
aas
mov
lods
xchg
or
sbb
push
aam
inc
xchg
aad
or
push
xor
xchg
daa
jne
or
inc
les
shl
test
sub
pusha
test
mov
sub
add
or
xor
test
pop
pop
pop
pop
adc
and
call
pop
sub
xchg
jne
add
push
call
nop
add
inc
sar
mov
add
ret
jne
enter
cld
inc
cmpsl
stos
pop
add
jmp
mov
lods
push
jne
scas
leave
push
nop
add
pop
jp
push
pop
dec
loop
inc
out
lods
scas
pop
add
or
hlt
cltd
or
setns
call
jb
cmp
dec
cmp
or
and
xchg
stc
cs
jmp
sub
push
clc
punpckhwd
adc
mov
adc
imul
insb
jns
ds
push
cld
inc
pop
adc
add
cmp
jge
jge
add
push
inc
movzbl
push
cld
sub
shll
sbb
xlat
jne
sub
rorb
rclb
or
es
push
push
add
cwtl
jmp
jmp
pop
pop
mov
push
popf
xor
jne
sbb
mov
adc
test
clc
xor
adc
sub
andb
pop
mov
das
push
inc
lods
rclb
mov
mov
negl
mov
inc
in
xorl
inc
pushf
sub
pop
jge
dec
or
sar
rep
push
fs
rcrb
push
cli
adc
or
movsb
outsl
rcrl
stos
lret
int
stos
pop
into
pusha
cmp
cmp
adc
mov
push
hlt
pushf
lcall
push
xchg
sub
push
outsb
mov
mov
mov
dec
sub
lret
inc
movsl
lock
and
fs
out
add
lret
dec
in
xchg
lds
hlt
push
dec
or
iret
into
jle
mov
in
shr
xchg
mov
enter
inc
adc
decl
sub
adc
jmp
pop
sbb
cltd
inc
popa
jne
stc
jmp
fiaddl
out
or
stos
adc
sub
jno
sti
pushf
dec
pop
push
mov
in
lahf
and
leave
mov
cltd
or
xor
pop
cmpb
mov
cli
fcoml
je
add
inc
or
mov
jle
test
and
push
dec
inc
push
push
push
push
call
add
mov
jmp
lods
lret
sarl
insl
jae
bound
lret
in
sbb
and
mov
mov
inc
mov
sti
adc
jo
rorl
test
xor
mov
out
dec
arpl
jmp
mov
jge
push
adc
rclb
ds
testb
iret
daa
mov
pushf
pushf
adc
test
push
cs
or
push
and
inc
data16
gs
push
inc
inc
imul
pop
fldcw
enter
mov
lods
xchg
imul
mov
inc
cld
outsl
repz
sub
addb
mov
call
or
inc
jmp
je
cmpsb
scas
ss
test
mov
push
or
dec
adc
jl
sbb
adc
pusha
loope
cld
push
test
dec
notb
mov
inc
pop
testb
pop
sbb
inc
push
movsl
xchg
adc
sbb
or
sub
cmpsl
sbb
jo
imul
add
and
cld
dec
popl
push
push
pop
ffreep
jg
adc
jae
jns
cmp
outsb
jbe
outsl
jge
bound
pop
ss
icebp
imul
int3
sub
xor
insb
and
or
imul
insb
push
call
sub
shrb
inc
mov
andl
xchg
xor
dec
loopne
daa
popa
addr16
outsl
js
ja
xor
popf
xchg
je
adc
arpl
xchg
cmpsb
int3
inc
jnp
jae
or
inc
aaa
sub
imul
add
popa
outsb
fs
jo
mov
sbb
dec
jmp
insb
sbb
decb
pop
fiaddl
arpl
ret
inc
loope
xchg
enter
push
inc
and
out
sbb
int3
pop
test
add
je
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
lock
add
add
idiv
pop
add
lock
add
pop
add
add
adc
pop
add
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
