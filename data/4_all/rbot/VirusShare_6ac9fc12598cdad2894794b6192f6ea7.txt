int3
jo
add
add
add
cmp
pop
add
pop
add
add
add
call
jno
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
jo
add
jo
add
jno
add
inc
add
xchg
dec
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
add
add
add
add
jle
aad
test
or
sbb
inc
lock
lods
xor
push
testb
jg
andb
mov
xor
subb
inc
loop
roll
sbb
out
mov
inc
cs
ds
fildl
iret
stc
jg
mov
negl
orb
sub
xchg
inc
inc
test
dec
sbb
mov
push
jno
or
add
push
outsb
and
pop
xchg
push
dec
mov
jne
or
hlt
push
arpl
in
es
rorb
mov
push
loopne
mov
repnz
adc
cmp
stos
xlat
scas
in
lret
xor
stos
enter
movsl
push
dec
adcl
lock
sti
xor
jle
rol
nop
push
movsb
iret
adc
mov
mov
pusha
pop
sti
cmp
les
push
cwtl
jns
jle
pmaxub
daa
add
leave
out
mov
cmc
out
rolb
arpl
or
in
pusha
test
popf
inc
adc
add
shll
pop
or
adc
jbe
dec
dec
jns
es
or
iret
cmp
lret
roll
das
mov
push
adc
sbb
popf
fsubl
xor
loopne
daa
cmpsb
or
test
shlb
adc
and
push
lds
in
sub
dec
and
sub
int3
inc
xchg
test
inc
ret
dec
stos
push
mov
gs
cli
push
push
inc
mov
sub
movsb
fisubrs
lahf
dec
mov
mov
xlat
pop
js
push
adc
fwait
imul
pop
or
dec
dec
add
sub
movsb
adc
sbb
mov
rcll
dec
push
push
push
mov
lcall
mov
fwait
push
rclb
int3
xchg
xlat
sbb
jle
jmp
jl
data16
cwtl
andl
loope
ret
lret
popf
pop
xor
out
or
xchg
sbbb
sub
lods
push
pop
add
jp
push
jmp
jp
cltd
sbb
movsl
mov
add
and
insb
inc
cmc
add
shlb
ds
mov
inc
je
mov
jne
aaa
sub
or
xlat
fdivrp
in
mov
sub
lcall
movsl
inc
outsl
jb
sub
sbb
inc
stos
push
je
pop
cwtl
adc
push
xchg
test
cmp
mulb
sbbb
in
fstps
gs
ljmp
aad
mov
sub
fs
ja
cld
notl
popa
jb
js
or
push
popa
mov
adc
cltd
sar
push
and
js
ret
inc
adc
pop
sub
int3
mov
shrl
cmpsb
aam
fistpl
pop
or
or
sbb
push
and
xor
inc
add
test
sbb
inc
mov
insl
adc
fildl
jl
ss
or
shll
icebp
mov
push
int3
mov
push
sbb
es
sti
loope
jmp
xlat
jno
iret
inc
and
jne
mov
dec
cmpsb
sahf
movsb
fsubrl
xor
xor
cwtl
inc
shl
mov
xor
xor
lret
xor
add
outsl
test
or
jo
es
sbb
mov
jb
outsl
loop
and
or
adc
inc
cld
mov
adc
jge
jp
movsl
inc
add
sbb
xchg
lock
add
add
mov
enter
sub
sub
add
pop
ret
mov
ret
into
icebp
popf
sbb
add
add
mov
sbb
pop
sub
lcall
sbb
repnz
aaa
imul
popa
stos
sahf
xchg
lds
data16
subb
ljmp
loope
or
xchg
aas
push
pop
dec
sbb
and
jp
aaa
adc
sbb
and
outsb
cld
mov
repnz
and
xor
outsl
ret
fildll
pop
and
std
test
test
das
sub
movsb
and
gs
push
out
fisttps
pop
jb
int
xor
mov
outsb
mov
jo
fldl2t
stc
pop
pop
dec
int3
scas
push
pop
fs
dec
cmp
xor
jne
lret
jbe
ljmp
and
xchg
loop
bswap
cmpsl
fsubl
adc
dec
jmp
lcall
repnz
lea
fs
sub
lcall
aas
movsb
pop
in
into
sarb
inc
push
pop
scas
jno
aam
cmp
call
pop
or
loop
fdivr
loopne
stos
adc
ljmp
pop
xchg
nop
mov
jbe
sub
mov
cmp
adc
mov
and
adc
push
sbb
jnp
inc
loopne
xor
push
shlb
xor
mov
sbb
std
clc
iret
dec
mov
mov
xorb
and
adc
addl
sbb
js
sbb
adcl
dec
outsl
aaa
loopne
adc
mov
sahf
xor
shrb
lods
lea
add
inc
push
pop
aaa
push
mov
int3
or
test
ret
pop
mov
cmpsl
sbbb
mov
lds
pop
addl
push
mov
pop
in
ja
fisubs
orl
push
aam
or
popa
dec
mov
sbb
add
pop
shrb
cmp
loopne
sub
add
cmpsb
push
icebp
mov
or
jo
cmp
int3
mov
rcrl
or
pop
inc
cmp
test
jg
ljmp
hlt
adc
aam
movl
lds
loopne
sub
jg
inc
and
cltd
xor
dec
cmp
add
dec
add
xor
repnz
add
ficompl
cwtl
pop
sbb
pop
sub
mov
call
sub
sub
push
xchg
xchg
test
or
adc
daa
push
inc
adc
xchg
jb
pop
cmp
mov
inc
dec
sub
adc
mov
clc
jo
rolb
rdtsc
jb
aad
inc
scas
mov
xchg
dec
adcb
or
xchg
sub
dec
adc
xor
adc
nop
cli
mov
fs
adc
xor
rclb
dec
or
sub
add
fistpl
int
xchg
dec
push
pop
addr16
subl
jb
loopne
negb
loope
xchg
push
out
cld
sub
arpl
sahf
mov
subps
shll
pusha
pop
insb
push
jns
inc
adc
mov
lods
sbb
mov
or
in
aas
pop
cmp
sbb
jmp
push
test
mov
clc
orl
add
sub
xor
incb
adc
mov
adc
xchg
fwait
ss
mov
clc
adc
xchg
inc
inc
or
xchg
mov
ljmp
shrl
pop
xor
fists
mov
dec
jg
out
lcall
xchg
mov
repz
xor
mov
stc
pusha
xor
mov
xor
mov
cmp
xor
or
xor
adc
and
xchg
enter
jae
xchg
xor
adc
jne
add
and
mov
adc
cmpsb
les
clc
and
rol
sbb
cmp
cmp
shrb
shll
add
pop
cmp
push
sub
xchg
test
loopne
mov
pusha
enter
lea
ss
and
orl
je
es
les
lcall
loope
lods
push
aas
mov
mov
sub
cwtl
push
or
jnp
add
sbb
push
lret
xor
adc
add
rorl
cwtl
push
sub
and
cmp
cltd
cmpsb
pop
lods
mov
cmp
pop
aam
xchg
mov
xchg
pop
pop
add
push
ficompl
xchg
cwtl
inc
jmp
add
rolb
adc
dec
inc
std
cmp
ds
sbb
push
or
test
mulb
push
rclb
fcmovb
test
fcomi
jle
rcrb
xor
movl
es
add
pop
nop
add
and
fimuls
jmp
fcmovbe
mov
sbb
pusha
aas
in
sbb
mov
add
add
xor
mov
add
lock
dec
rcrb
movsb
xor
fisttpll
call
jl
dec
lock
cmp
popa
jle
loopne
or
out
adc
lret
sbb
push
add
enter
scas
pop
inc
pop
js
inc
ret
cmc
add
add
inc
cwtl
je
mov
inc
mov
push
push
sbbb
lret
push
ss
mov
sub
mov
xor
add
xor
xor
cmp
inc
mov
lods
rorl
sbb
clc
lock
insl
mov
lret
rolb
lahf
sub
push
and
push
lods
push
addb
sub
shlb
or
inc
rcrb
mov
xlat
les
jg
loop
pop
and
mov
cwtl
add
xorl
sahf
scas
jb
xor
mov
ffreep
xlat
push
cmpsl
or
cmpsl
adc
push
rcll
ret
xor
shll
ret
paddsw
pop
aaa
cmc
jnp
cli
pop
pop
jmp
mov
dec
lds
jb
sbb
and
push
push
ret
mov
cld
or
inc
gs
leave
inc
js
and
add
pop
xorl
or
das
pusha
mov
add
mov
pusha
test
inc
rorb
xor
push
sub
add
nop
imull
sub
sbb
jp
jbe
sbb
sahf
and
test
addr16
jne
inc
mov
cld
lods
dec
and
add
inc
mov
out
mov
and
mov
xor
sbb
push
mov
jmp
xchg
fiaddl
mov
xor
xlat
pushf
daa
roll
jge
test
das
gs
sbb
test
jl
add
push
jb
sbb
mov
pop
adc
lods
and
divb
push
mov
cmp
dec
lea
sbb
cmp
lret
mov
jecxz
mov
adc
adc
sbb
adc
popf
or
in
sub
je
jge
in
jecxz
add
aad
out
sub
in
adc
adc
xchg
lea
ret
pop
xchg
cmp
jg
je
push
inc
push
or
in
clc
push
adc
test
sbb
and
sub
lcall
aas
mov
inc
stos
pushf
shl
push
fdivl
in
fisttps
mov
mov
imull
mov
or
cmpsb
sbb
mov
push
mov
pop
xor
scas
mov
and
mov
lret
pop
int3
les
lods
loope
jne
gs
pop
bound
sbb
andb
mov
mov
adc
stos
mov
adc
sbb
inc
xor
jmp
pop
ret
ja
push
adc
mov
xor
pop
lret
push
int
mov
jecxz
lea
fwait
aaa
stos
aaa
mov
adc
xchg
aad
mov
loop
insl
fidivrs
shrl
sbb
sbb
sbb
movsl
shrb
movsb
add
and
ljmp
cmp
xchg
andb
xchg
mov
pusha
test
push
jmp
add
add
mov
push
repz
mov
push
push
cld
in
push
dec
mov
ja
jbe
and
sub
fisttpll
cmpsl
adc
js
aam
fistpll
cli
in
inc
push
imul
xor
jg
inc
movsl
adc
in
cld
push
mov
mov
xchg
or
and
adc
leave
push
pop
psrlq
test
enter
sub
sbb
jne
mov
adc
test
test
mov
or
addl
aam
dec
push
repz
mov
add
push
pop
gs
subb
xlat
ja
sub
popf
add
int3
and
jno
mov
pop
mov
jg
das
lret
leave
les
pop
clc
shlb
sub
rcr
sbbb
jmp
mov
scas
rol
and
mov
sbb
loop
sbb
fdivs
daa
insb
push
add
lods
loopne
add
sub
lds
mov
test
xchg
xlat
mov
loope
pushf
in
push
pop
inc
or
push
popa
pop
push
inc
flds
test
pop
sub
and
jb
jp
xchg
test
fsub
insb
sti
dec
mov
push
sub
mov
nop
fisttpl
dec
jle
mov
or
xor
push
popf
sti
movaps
xor
xchg
lods
enter
hlt
iret
xchg
les
int3
scas
mov
adc
push
popa
or
add
lds
cmc
cld
sub
cli
mov
shrl
push
lret
mov
test
fdiv
inc
popf
or
adc
mov
push
add
or
cli
fdiv
add
cs
int
mov
mov
xor
jno
cmp
jmp
shlb
xor
pop
cmp
ljmp
roll
add
popl
aas
lock
arpl
push
xor
aaa
pop
jo
aaa
xchg
cmp
jge
mov
push
les
mov
mov
or
mov
ret
fists
pop
xorb
add
stos
add
jp
push
out
out
lods
jp
in
lods
push
fists
popa
adc
in
das
out
lods
dec
pop
add
jo
aad
mov
gs
ja
lds
jae
imul
or
rcll
sub
cltd
or
cwtl
mov
std
pop
and
scas
and
pop
ret
iret
idiv
dec
dec
pop
leave
sbb
div
scas
dec
sub
mov
mov
and
adc
jg
test
out
call
cmpsl
mov
cmpsb
enter
adc
rcl
adc
mov
outsb
xchg
lret
idiv
dec
adc
xchg
shr
xor
push
test
inc
fs
in
in
or
lds
daa
push
in
xchg
sub
cltd
shl
mov
mov
pop
cmpsb
rorb
hlt
or
outsl
data16
imul
loope
dec
dec
xlat
mov
fcmovbe
in
jl
das
test
lds
mov
and
pmaddwd
decb
repnz
test
mov
les
sbb
outsl
adc
sti
adc
nop
scas
movsb
jmp
sbb
xchg
push
push
sbb
push
test
inc
fldt
xchg
jns
pusha
imul
or
es
jmp
hlt
xchg
jb
inc
fwait
mov
ret
cmp
mov
inc
call
and
roll
jle
cmp
shll
sub
mov
pop
mov
fisubrs
xor
adc
dec
push
adc
lcall
bound
test
ja
cmpsl
lods
adc
cmp
add
adc
xchg
andb
cs
pop
push
sar
sbb
mov
add
movsb
jno
xor
pop
fisttps
lret
cs
mov
jle
sub
ljmp
je
sbb
mov
pop
loop
sbb
sbb
add
mov
adc
xchg
out
repz
jnp
xchg
dec
adc
ja
dec
in
inc
jmp
pushf
xlat
call
rolb
inc
mov
inc
rorl
out
test
repnz
aas
xchg
insb
fiadds
push
popa
adc
sbb
add
pop
test
test
cmp
mov
out
stc
ljmp
mov
popa
popa
dec
add
inc
out
in
lock
mov
add
sbb
nop
aad
add
push
mov
mov
push
or
add
push
stc
mov
add
call
cmp
xchg
fnsave
mov
inc
or
movsb
sbbb
pop
sbb
mov
subb
or
mov
add
push
fs
xor
adc
mov
pop
pop
jns
ss
push
lods
push
mov
int3
dec
sub
lret
mov
dec
inc
push
jge
stos
or
push
stos
mov
cmp
sub
mov
bound
leave
dec
mov
lret
mov
sbb
xor
or
cmp
movsb
push
stos
faddl
jo
jb
out
and
test
cli
inc
std
jae
cmp
mov
in
aam
ret
dec
scas
dec
nop
and
in
push
in
aad
or
dec
xchg
xchg
adc
xchg
pop
in
pop
cmpsl
fucomp
loop
sub
addb
pop
movaps
cwtl
xor
pop
int3
fs
xchg
cwtl
fdivl
sub
mov
mov
push
inc
jl
mov
or
pop
xchg
push
adc
add
jmp
sti
and
dec
pop
mov
adc
mov
dec
jmp
repnz
cmp
fwait
dec
push
push
cwtl
mov
jno
daa
fsubrs
push
les
testb
ja
xor
rclb
das
and
pop
and
adc
sub
adc
inc
jbe
popf
inc
cld
push
ss
dec
pop
sbb
sub
dec
imull
cmc
clc
in
adc
scas
sbbb
mov
xchg
xor
sbb
cs
mov
mov
into
push
mov
lcall
push
testl
mov
mov
jmp
clc
adc
popl
push
dec
out
inc
adc
and
jb
and
pop
and
dec
mov
or
test
dec
mov
loop
sub
jo
into
sahf
xor
cmovs
xchg
jne
xchg
mov
xchg
out
add
cli
xchg
and
add
push
sbb
stc
inc
xchg
jmp
inc
cmp
orl
adc
mov
push
loope
pop
pop
iret
sub
jmp
jo
rcll
cld
mov
xchg
sub
loopne
test
loopne
xor
mov
jne
xor
pop
sbb
jnp
aam
mov
mov
mov
mov
gs
dec
xchg
daa
ror
mov
mov
es
loopne
lods
mov
xorl
or
cmp
fimuls
fs
sbb
mov
cmpsb
dec
or
sub
xchg
jmp
sub
jb
ljmp
clc
mov
ljmp
mov
adc
or
mov
roll
mov
fwait
cmp
and
nop
int
cmp
xchg
mov
xchg
and
ds
xor
lret
fisubrl
adcl
pop
insb
push
pop
cld
or
pop
jl
cs
shl
cmpsl
or
cmp
and
add
xor
popa
test
pop
insb
shrb
test
xchg
mov
xchg
sti
xchg
jge
lods
dec
xchg
adc
or
cmp
pusha
xor
mov
std
push
xchg
pop
adc
or
jmp
pop
shlb
mov
push
loopne
pop
shll
hlt
mov
das
out
push
pusha
cld
jnp
mov
xor
andl
outsl
push
lahf
push
pop
mov
and
test
push
sub
mov
loope
inc
mov
dec
dec
gs
mov
mov
stos
adc
or
repnz
mov
loope
add
outsl
or
cwtl
mov
repnz
stos
movsb
add
jmp
cmp
mov
mov
xchg
fisubl
cmpsl
les
push
dec
mov
sub
jo
mov
jae
int3
nop
adc
stos
sbb
pop
inc
xchg
xlat
fs
or
les
push
mov
mov
incl
pusha
aad
push
orb
pop
les
loopne
push
add
cmp
mov
mov
jo
ds
fwait
push
inc
cmc
lds
push
ret
bound
outsl
and
sbb
cld
inc
or
mov
adc
adcb
test
nop
jg
adcb
xchg
sub
sub
and
bound
je
aas
test
fldl
fiadds
push
push
in
add
lcall
push
xchg
aaa
inc
jmp
push
mov
lret
sbb
cmpsb
push
add
nop
add
repnz
insl
and
xor
dec
lret
pop
dec
add
icebp
fsubl
add
lcall
sub
ja
es
sbb
inc
inc
mov
jbe
lods
sbb
subb
lods
ja
mov
andl
fdivrs
lock
mov
adcl
lock
adc
pop
loopne
cmp
je
pop
loope
and
in
mov
jge
pop
mov
cli
mov
inc
mov
cmp
inc
stos
jbe
out
pop
in
jmp
dec
shrb
ja
enter
sub
enter
xchg
cltd
cli
xchg
adc
cmp
fldl
outsb
jbe
inc
add
shll
bound
je
mov
pop
test
sbb
cmpsb
adc
cli
inc
cld
inc
xor
pop
adc
mov
cmpsb
jne
les
push
mov
xor
cmp
mov
push
mov
sbb
aas
xchg
pop
or
loop
sbb
cmpb
mov
imull
lods
xchg
aaa
mov
adcb
pop
pop
push
mov
or
lret
loop
pop
jne
das
imull
call
hlt
stc
adc
les
push
rcl
push
insb
xor
xor
mov
mov
mov
xchg
clc
ds
pop
adc
push
fs
bound
stos
or
jle
sub
stos
in
mov
push
push
dec
adc
pop
or
pop
jmp
pop
xlat
mov
out
rol
inc
lods
test
inc
dec
xchg
xchg
leave
cmp
in
xchg
movsl
mov
dec
xchg
jne
xchg
pop
lcall
test
pop
cmc
fstl
out
xchg
and
std
sub
dec
rcr
jmp
pop
sbb
xor
cmc
pop
aas
call
xchg
jno
push
xor
sub
movsl
scas
xchg
inc
mov
sub
test
jle
rclb
icebp
jle
fistps
fdivs
lret
insb
divl
addr16
pop
push
addl
mov
adc
push
out
in
sbb
lds
aaa
out
add
sub
xchg
mov
and
mov
jg
sub
xchg
inc
adc
rcl
lods
sbb
add
subl
pop
push
sub
and
mov
push
aad
jns
pop
inc
in
mov
add
sub
out
mov
and
sbb
imul
jo
inc
add
mov
inc
xchg
out
sub
invd
movsb
cwtl
mov
into
push
insl
cwtl
insb
adc
push
inc
bound
ja
mov
fdivrs
sbb
mov
shll
inc
leave
inc
leave
movsb
xor
mov
push
sub
nop
dec
mov
lret
scas
dec
js
int
and
loop
shll
loop
sub
out
dec
sub
call
sbb
into
pop
add
mov
dec
xchg
and
mov
xchg
dec
xchg
sub
dec
xlat
sub
inc
xchg
sbb
popa
jmp
dec
dec
test
xchg
arpl
inc
push
pop
lea
lea
add
push
imul
dec
loopne
or
flds
in
inc
cltd
adc
mov
dec
dec
jmp
jmp
xchg
aad
xlat
and
fiaddl
mov
lods
jae
cwtl
pop
and
mov
mov
mov
xor
inc
cs
cmpsb
sbb
and
jo
push
push
cltd
mov
jnp
adc
push
and
xchg
push
lods
push
out
adc
inc
mov
out
daa
out
cwtl
shrl
pop
das
mov
adc
mov
lret
add
imul
dec
add
in
xchg
clc
into
lods
cwtl
and
and
mov
jle
cwtl
aas
xlat
adc
adc
aaa
out
mov
cld
mov
adc
pop
pushf
xor
jnp
sbb
lret
inc
sub
lcall
mov
push
cmpb
int3
inc
sbb
fwait
jne
mov
mov
sbb
cltd
pushf
push
adc
cmpsl
inc
clc
ret
pop
les
pop
add
pop
inc
jbe
pop
add
je
xor
adc
call
adc
xchg
leave
stc
jge
mov
and
outsb
in
das
movsb
push
cmpsl
mov
fidivl
or
add
stc
jae
pop
fbld
mov
ljmp
xor
fisubrl
push
outsl
adc
insb
adc
pop
jmp
xchg
rcrl
push
pop
push
add
ja
inc
scas
pop
les
jmp
ds
sbb
xchg
inc
mov
jecxz
cli
inc
fdivs
subb
hlt
mov
frstor
test
mov
inc
jo
add
into
mov
lea
dec
adc
insb
and
imul
push
movsb
jmp
push
sbbl
push
cmpsl
incb
jl
testb
mov
pop
dec
mov
ss
dec
jb
ss
bound
ljmp
inc
or
fsubl
xlat
push
popa
scas
adc
cmp
xchg
inc
lret
adc
movsl
add
inc
in
mov
push
pop
or
dec
ja
push
call
sub
popl
bound
or
les
imul
ja
push
and
sbb
inc
xor
adc
sbb
lds
dec
insb
stos
cs
pushf
ret
inc
les
mov
and
loop
shll
mov
lods
out
fisubs
or
or
dec
notl
dec
addb
xchg
arpl
jae
sub
hlt
xor
outsb
xchg
ljmp
xor
adc
les
mov
outsl
int
leave
push
jno
jg
adc
scas
mov
rorl
in
cmpsb
nop
cmp
or
sbb
mov
mov
jbe
cmp
pop
sbb
mov
mov
cmpsb
test
and
xchg
push
xchg
jns
jmp
movsl
cmp
lock
into
mov
dec
test
or
popf
arpl
or
jle
cmp
sbb
adc
movsl
je
xchg
test
add
inc
arpl
ljmp
orb
outsl
jbe
movsb
dec
xchg
test
dec
and
push
xchg
pop
push
pop
inc
mov
adc
xchg
mov
js
or
movsl
fdivs
iret
enter
cmp
aad
lret
or
loop
fimuls
call
rorl
or
jp
inc
jns
cli
es
jae
call
ret
xchg
insb
sbb
insl
or
sub
lret
jp
data16
outsb
mov
movsl
adc
adc
adc
pop
mov
pop
jae
jmp
stos
movsb
push
add
lds
fists
cvtps2pi
fidivs
rorl
push
in
sub
pop
pop
scas
mov
je
push
out
dec
imul
test
lds
lds
sub
inc
add
inc
jae
loope
ret
and
mov
pop
xchg
add
or
jnp
add
arpl
jne
cmpsb
and
xchg
or
test
in
push
mov
dec
andl
push
pop
mov
adc
outsb
cld
enter
adc
shlb
lret
andl
xchg
mov
dec
or
cltd
test
cld
xlat
jmp
adc
inc
push
mov
dec
sub
call
aas
scas
push
dec
mov
mov
cwtl
imul
shlb
cmpsl
fstps
bound
xchg
xchg
movsb
shlb
and
push
add
movnti
mov
call
fiadds
pop
cltd
vmovupd
roll
push
in
add
add
dec
xor
fimull
dec
and
push
and
sub
pop
inc
sbbl
pop
pop
xlat
mov
sbb
shlb
mov
mov
hlt
fwait
mov
and
and
and
leave
and
lods
push
cmp
cmc
add
rcl
inc
sbb
icebp
jp
mov
lahf
push
dec
or
daa
lret
sbb
pop
sahf
mov
dec
dec
jge
cs
inc
push
in
test
in
sub
xchg
mov
mov
imul
ret
dec
dec
mov
les
inc
add
dec
sbb
dec
mov
mov
das
sbb
dec
mov
sub
shlb
mov
outsl
and
ss
sub
lret
cmp
ljmp
xchg
sbb
ret
mov
cmp
jg
inc
inc
jmp
xchg
adc
out
cld
sbb
or
adc
mov
adc
data16
nop
mov
cmc
clc
dec
in
mov
imul
mull
jecxz
mov
xor
test
mov
es
in
imul
call
imul
xlat
sub
xor
or
mov
push
lret
lret
mov
and
cmc
out
cmpsl
in
aam
movsl
movsb
sbb
sbb
cmp
popa
pusha
xor
mov
ret
in
mov
sub
repz
andl
shl
adcb
xchg
call
dec
imul
cwtl
outsb
dec
pop
lods
movsbl
out
push
push
add
inc
mov
inc
lods
aad
das
cmpb
test
or
pop
dec
or
or
inc
push
sbb
scas
popf
mov
adc
sub
cmpb
adc
xor
xor
inc
mov
data16
mov
xor
icebp
aas
inc
and
jge
sub
sub
cmp
out
sbbl
adc
sub
fadd
mov
mov
lock
and
or
aad
adc
add
pop
mov
andl
loopne
xchg
or
mov
mov
mov
inc
fisubl
xor
nop
in
sub
add
xchg
adc
jno
int3
xchg
push
inc
test
or
ss
shrl
aad
xor
cltd
pop
repz
test
pop
mov
mov
inc
mov
dec
shll
xor
jmp
int3
pop
insl
xchg
dec
mov
xor
sub
cwtl
test
mov
dec
add
adc
adc
insb
pushf
xor
stos
ss
out
cmp
das
and
mov
lea
ss
push
push
shlb
inc
mov
cmpsb
sub
call
imul
adc
fsts
sub
push
mov
adc
pop
test
jne
test
outsl
shlb
movsl
mov
ja
shlb
rcrl
daa
popa
and
xchg
push
call
sbb
int3
mov
cmp
out
fstpl
hlt
sahf
sar
dec
mov
push
in
jle
sbbb
mov
test
mov
mov
pop
push
pop
lret
mov
or
and
mov
inc
or
inc
rcrl
xor
adc
je
sub
push
packuswb
daa
inc
push
out
xchg
dec
scas
dec
dec
jp
into
mov
mov
or
ja
inc
int3
cmc
jge
mov
repz
jno
or
arpl
cli
push
ret
and
xlat
les
outsb
mov
dec
mov
insl
lock
movsb
addr16
jecxz
mov
scas
inc
sub
push
push
dec
cmpsb
out
xchg
imull
and
call
mov
arpl
int3
dec
pop
add
jne
sub
ret
or
pushf
cmp
and
fucom
cmp
fwait
cmpsb
sbb
inc
fadd
xchg
mov
jmp
subb
fcomps
insl
pop
cli
stos
and
dec
pop
jg
add
dec
sti
js
test
add
jns
push
cmp
mov
sub
movl
push
shlb
add
or
or
cmp
mov
rorl
jbe
mov
cltd
ffreep
pop
mov
dec
add
sbb
pop
dec
xlat
pushf
loop
sub
push
adc
adc
sub
leave
data16
add
mov
imul
sub
dec
stos
rcll
pop
xor
ja
inc
push
pop
pop
or
mov
adc
shr
cmc
std
jp
stc
sarb
jge
clc
jb
pushw
adc
mov
mov
pop
mov
pop
add
and
mov
nop
lock
pop
mov
test
push
sub
mov
dec
stos
jno
je
scas
inc
loop
inc
pusha
mov
add
lcall
push
pop
shll
loopne
je
pop
add
and
aad
addl
movsb
rorb
mov
adc
imul
addr16
aaa
pop
inc
lcall
jmp
push
insl
pusha
mov
shll
and
or
dec
mov
imull
mov
xchg
ret
fiaddl
pop
jl
and
and
xchg
add
add
inc
nop
lods
inc
sarb
mov
data16
adc
adc
pop
jbe
mov
sbb
and
inc
loopne
inc
bound
xorb
fdivs
aad
repz
mov
cmc
add
cmp
xor
mov
push
mov
inc
in
ret
sub
loop
jbe
push
pop
inc
pop
dec
xor
adc
movsl
bound
inc
pop
gs
aam
das
mov
add
adc
jmp
lea
push
push
push
mov
adc
das
sti
test
es
push
sub
push
xchg
add
cmp
aad
iret
in
or
push
std
out
inc
dec
lahf
pop
shl
dec
scas
sub
test
fiaddl
xchg
jg
cmp
inc
inc
mov
sahf
icebp
sub
repz
adc
push
jmp
add
hlt
cli
or
adc
int
jae
push
mov
lret
popf
sub
das
popf
xor
adc
dec
arpl
bound
add
dec
add
mov
data16
out
fldenv
pop
aaa
push
test
cmp
jae
xchg
inc
addb
inc
jnp
pop
lea
jnp
scas
addr16
inc
pushf
js
addb
in
in
fldcw
scas
popa
into
rolb
mov
cmp
jp
sbb
sub
sbb
pushf
sbb
mov
arpl
jl
sbb
sub
or
andb
fstps
mov
adc
outsb
hlt
cmp
inc
cmp
jbe
rorl
or
pop
pop
test
adc
mov
or
cmp
xor
jo
xor
xchg
insl
push
and
sbb
xor
jns
dec
cmp
movsl
mov
dec
pop
scas
outsl
lock
pop
dec
and
pop
xchg
sbb
pop
fisttps
sbb
repz
mov
out
jg
sub
orb
pop
jle
lret
scas
push
in
adc
andb
jge
cltd
mov
push
sub
mov
pop
cmpsl
and
ja
int
aad
mov
push
cmpsl
fbstp
pop
rclb
mov
ret
mov
cmp
ljmp
out
xor
scas
mov
mov
lds
adc
inc
sbb
addr16
cwtl
push
test
xchg
xchg
out
mov
and
mov
push
fcoms
inc
jle
mov
jae
dec
shr
stos
or
ficoml
sub
fstpt
aam
jo
movsl
xlat
inc
cmpsb
jmp
stos
sub
inc
and
inc
xchg
cmp
lret
mov
or
or
mov
mov
pop
cmp
std
insl
and
testb
mov
andb
mov
bound
push
fldl
jns
daa
or
jb
cwtl
push
out
xor
nop
push
jg
inc
scas
push
pop
and
and
and
lret
mov
mov
scas
ret
daa
adc
shlb
cmpsb
fstpt
push
stc
dec
sub
addl
sub
js
xchg
mov
pop
int3
mov
push
add
inc
popf
sub
xchg
pop
rcll
xchg
pop
stc
faddp
insl
loop
loopne
xor
lret
and
sbb
in
cld
push
and
aam
add
movsb
adc
loopne
pop
push
xchg
mov
insb
push
pop
sbb
test
movsb
dec
pop
sbb
mov
adcl
xor
test
rorb
mov
unpcklps
call
shr
bound
mov
push
jge
add
cmpsb
mov
or
das
imul
icebp
mov
mov
pusha
and
test
add
jbe
mov
stos
daa
xchg
mov
mov
test
insb
push
push
push
inc
add
add
imul
aam
lds
lods
mov
mov
shrl
daa
mov
repz
lcall
jae
es
mov
stos
mov
mov
divl
shrl
push
xchg
cs
push
sti
pop
mov
jecxz
add
or
mov
scas
and
test
ficoml
push
fistps
xor
vpcmpgtw
add
mov
adc
shr
push
xor
decl
scas
ficoml
and
add
pushf
mov
outsb
je
sahf
cmp
dec
xchg
push
ret
xchg
dec
imul
push
inc
aad
fsubs
int
sub
mov
mov
out
dec
stos
mov
mov
jp
pop
pop
pop
pushf
jo
loope
into
insl
cmp
cmp
jmp
lret
xor
pop
inc
adc
cmc
scas
inc
push
push
xchg
inc
mov
and
aad
jecxz
int3
sti
inc
popa
jp
jne
push
loop
sahf
adc
inc
mov
mov
adc
mov
jb
pop
sub
mov
add
sbb
xchg
or
add
cs
pop
xchg
icebp
xchg
cmp
jno
sbb
dec
hlt
xor
insl
xchg
lcall
add
lret
mov
sub
mov
test
icebp
mov
out
xchg
mov
mov
xorl
adc
or
sub
pop
fdivrl
decl
hlt
std
add
data16
mulb
mov
push
gs
inc
sbb
shlb
in
addl
cs
fbld
xor
inc
sub
jge
dec
mov
mov
test
call
jno
lcall
pop
xor
add
pop
add
outsb
add
mov
xor
mov
adc
ds
loop
mov
mov
data16
out
or
push
jmp
add
cmpsb
and
addl
mov
roll
sub
or
add
dec
xchg
or
test
xlat
and
add
cmp
xchg
xchg
inc
xor
jbe
add
mov
dec
mov
iret
lods
jns
ret
sbbb
fisttpl
cmp
dec
adc
xchg
je
jmp
repnz
cmpb
xchg
int3
jmp
mov
test
jnp
fldl
scas
or
push
mov
sub
pop
sti
jne
iret
roll
pop
fists
loope
aam
sbb
rcrb
xchg
or
push
hlt
mov
push
and
push
and
aas
nop
jl
xchg
scas
test
ljmp
popf
std
stc
outsb
repz
pop
inc
pop
cmp
adc
out
or
fnsave
pop
or
sbb
jmp
jb
xor
fiadds
inc
hlt
enter
dec
add
xchg
imul
jb
jne
stc
std
xchg
je
adc
jle
mov
in
dec
cmp
fcmove
pop
jne
dec
mov
push
scas
xchg
mov
mov
mov
mov
jmp
dec
out
shrl
outsl
mov
into
dec
mov
add
daa
enter
dec
addr16
and
into
sbb
shrb
and
and
data16
and
ret
mov
mov
orb
pop
adc
inc
cmp
xor
test
cmpsb
mov
xchg
push
mov
push
xchg
xor
jne
push
jmp
ds
cmc
and
scas
jl
scas
pop
lcall
testb
ds
or
sbb
xor
pop
adc
iret
ret
outsl
mov
push
sbb
ret
sub
in
movl
mov
sbb
jbe
adc
ret
data16
mov
into
clc
inc
inc
xchg
adc
popa
push
mov
adc
ficoms
inc
sub
popf
sub
push
xor
fidivrs
sbbb
lods
add
mov
sarb
incl
scas
inc
fdivs
sbb
rorl
fdiv
sbb
adc
in
cmpsb
xchg
and
test
imul
or
mov
pop
sbb
repz
jns
push
jecxz
jne,pn
inc
xlat
loopne
jae
out
xor
andl
push
pushf
add
js
inc
add
test
lods
xchg
jo
xorb
lcall
xchg
stos
movsb
jnp
ljmp
sbb
ficompl
addr16
sti
dec
cmp
clc
pop
pushf
push
push
outsl
pop
and
push
int3
add
pushf
push
sti
cmpsb
sbb
cmp
and
adc
or
stc
fld
flds
inc
unpcklps
cmp
push
sar
shl
cmpsb
lret
aaa
pop
dec
fildll
and
jl
testb
xor
loope
xlat
rcrl
and
xchg
lahf
das
push
adc
test
jecxz
mov
pop
mov
xchg
movsb
out
nop
in
sbb
je
outsl
out
sub
adc
push
inc
mov
lods
fdivr
and
adc
mov
xor
xor
ljmp
mov
std
lahf
mov
mov
push
inc
add
mov
mov
jle
scas
andb
sub
out
notl
sbb
pop
popf
dec
sbb
addr16
mov
iret
fidivl
xchg
jbe,pt
fstpt
sub
dec
and
mov
fldl
cltd
push
stos
xchg
cmc
mov
movsb
sub
jmp
out
mov
loop
sbb
ret
push
adc
lahf
mov
inc
sbbl
inc
xor
push
lea
push
jmp
popf
push
jns
push
mov
test
jns
imul
cmp
int3
push
pop
les
push
adc
sbb
push
sub
or
loop
bound
and
mov
js
jns
es
push
int
roll
iret
ficoms
jmp
rol
cmc
nop
inc
rorb
inc
sbb
inc
inc
sub
inc
and
push
loop
stc
and
cmpb
pop
pop
sbb
xor
lea
es
dec
subb
bound
movsb
das
aaa
clc
sti
pop
in
iret
xchg
sarb
or
lret
das
aaa
decb
test
lret
sub
test
or
sbb
ja
mov
insb
testb
mov
clc
sub
add
push
pop
mov
sbb
es
mov
mov
sarb
xchg
xchg
inc
lahf
add
or
movsb
aad
xchg
or
notl
add
inc
pop
aas
outsl
int3
dec
test
bound
nop
dec
mov
adc
push
dec
loope
in
xchg
dec
pop
push
stos
jbe
and
ja
hlt
lds
movsb
cmc
mov
ja
lahf
add
aad
cmc
ja
xchg
movsl
test
push
test
and
arpl
and
jle
mov
fistpll
jg
hlt
jmp
incl
clc
daa
and
push
in
cs
stc
dec
sub
xor
adc
fstpl
lret
xor
jns
mov
xor
push
sub
mulb
lahf
bound
mov
dec
in
inc
jbe
push
pop
sbb
cmp
mov
lock
xor
or
mov
scas
stos
inc
push
push
mov
or
outsl
mov
iret
mov
sahf
loopne
cld
xchg
test
jmp
or
push
sbb
aaa
out
jb
std
fadds
mov
and
mov
mov
bound
sbb
xchg
int
aad
jbe
adc
dec
pusha
hlt
jb
add
andb
pop
das
andl
scas
cmp
repnz
outsb
aam
pusha
jo
leave
imul
and
push
sbb
sub
xbegin
imul
xor
fnstsw
cltd
mov
mov
xchg
movsb
scas
call
sub
push
addr16
nop
xor
shlb
idivl
cld
andl
xor
lcall
jg
lds
mov
mov
setns
in
cmpsb
sbb
mov
push
into
push
loop
xchg
and
sbb
mov
or
pop
sub
adc
sub
dec
pop
push
ss
push
xchg
icebp
ss
jge
fucomi
hlt
dec
sub
xchg
jae
mov
dec
mov
dec
bound
sub
cmpsl
mov
stos
dec
fwait
pop
jb
gs
add
dec
ret
mov
movsl
adc
jnp
push
cmp
mov
inc
push
or
jg
and
pop
lds
outsb
sub
adc
imul
xor
leave
jae
iret
idiv
push
test
lods
lea
push
out
shl
loopne
test
inc
ficoml
sti
cmp
cmp
rolb
mov
lcall
popa
in
lods
adc
jmp
dec
mov
ficompl
mov
arpl
pop
lock
lds
dec
pop
mov
mov
mov
pop
pop
add
jbe
dec
pop
test
es
xor
cld
adc
adc
fwait
loopne
mov
aaa
int
notb
or
fnstcw
scas
mov
int
test
test
pop
ja
mov
push
fadds
fwait
push
ret
lods
xor
jns
shrl
test
adc
daa
add
xor
and
call
ret
mov
sbb
or
aam
xchg
mov
dec
dec
jo
add
jne
scas
cltd
inc
jmp
mov
icebp
test
lret
aas
pop
sub
push
and
mov
test
cmp
int
push
sbb
shll
inc
das
movsb
and
xor
loop
cmp
cmp
iret
mov
clc
mov
outsl
mov
sbb
ja
push
dec
leave
mov
add
jae
in
cmpsb
loop
push
loopne
std
out
out
stos
push
xor
adc
lret
out
popa
jno
or
lods
not
add
pop
test
mov
ja
pop
jl
sub
or
xchg
and
sbb
popa
xor
dec
mov
ficoml
stos
repz
push
xor
int3
popa
test
push
pop
add
sbb
loop
xor
or
insl
rcl
daa
push
push
hlt
jl
rorb
add
aaa
xchg
mov
jle
push
mov
out
and
out
insb
mov
xchg
push
pop
pop
lock
fldl
inc
jge
dec
push
or
rolb
cmpl
es
icebp
xchg
out
jmp
xchg
mov
mov
scas
popa
pop
and
and
and
or
dec
adc
notl
sub
add
decb
or
jge
cmp
pop
push
decl
test
add
inc
int3
xor
out
call
cmp
lcall
dec
push
push
inc
xchg
adcl
mov
inc
or
push
aas
std
xor
cmp
dec
push
inc
pop
dec
pop
lret
stc
mov
add
xchg
jbe
pop
arpl
inc
and
push
jns
xchg
lret
dec
shrb
push
pop
mov
sub
and
outsl
fdivs
cwtl
jno
insb
mov
and
or
and
adc
xchg
jnp
int3
pop
std
jl
out
fwait
movsb
jge
add
imul
js
movsb
sbb
xchg
rorb
pop
ljmp
cmpsl
stc
xor
les
or
cwtl
mov
xor
cwtl
adc
mov
arpl
add
imul
and
stos
sti
cmc
mov
out
push
cmp
push
mov
sub
cmpsb
inc
ss
cmp
mov
jno
inc
or
mov
jmp
inc
sbb
xlat
push
xchg
das
xchg
push
ss
jbe
mov
pop
and
xchg
daa
mov
movb
mov
hlt
mov
xchg
fidivs
cs
pushf
adc
stos
push
sub
jmp
in
sbb
cmpsl
mov
cwtl
cld
stos
dec
push
cmp
xor
mov
push
mov
xchg
sbb
orb
inc
dec
adc
or
pop
cmp
mov
je
aad
cmp
stos
dec
add
cmp
and
pop
out
ja
dec
pop
push
fmuls
mov
movsl
fstl
push
push
xchg
cmp
pusha
in
scas
ret
xlat
pusha
push
cmp
pop
int
sbb
ljmp
sbb
repnz
adc
loope
mov
push
or
pop
cmp
push
cmp
mov
ret
jnp
mov
inc
xorl
aaa
mov
lods
mov
pop
fistps
jo
xchg
test
repnz
jne
inc
xor
addb
rcrb
pop
pop
push
push
push
scas
push
aam
adc
xchg
mov
push
sti
sti
push
ja
pop
je
cmpsb
mov
sbb
push
jg
xchg
test
inc
cmp
xor
lret
mov
sahf
xchg
je
mov
cmp
call
lret
dec
inc
or
jo
test
test
scas
mov
pop
aad
in
stos
cmpsb
ret
lret
push
or
aam
mov
mov
push
push
add
popf
pop
mov
insl
lret
loop
jg
cmp
sub
outsl
sahf
jl
sbb
or
test
fiadds
xchg
enter
mov
jge
into
push
inc
in
push
mov
addr16
pop
pop
out
test
ss
or
or
xor
pop
push
stos
dec
push
push
movsb
cmc
into
and
gs
addr16
and
das
stc
xchg
clc
cmc
adc
push
popa
fs
jge
stos
cmp
jecxz
lahf
stos
mov
mov
cmp
aad
scas
mov
jns
fsts
lock
xor
mov
or
and
adcl
pop
ja
and
or
into
pop
call
js
mov
xor
or
dec
sahf
push
sbb
stc
mov
sbb
leave
icebp
add
pop
jl
or
push
jl
pop
mov
jle
xor
je
cmp
out
out
aad
mov
sbb
or
jle
pop
das
or
leave
and
adc
sub
imul
loope
jg
loop
mov
mov
push
iret
inc
data16
fisttpll
fistpll
push
xlat
and
adc
scas
jbe
inc
mov
stos
pop
inc
rcrb
aaa
rclb
mov
leave
dec
push
sti
dec
addr16
mov
push
push
add
rorb
adc
iret
xlat
mov
arpl
lret
jb
add
mov
pop
test
or
mov
mov
pop
cmc
jmp
push
jmp
cmp
mov
xor
pushf
mov
sarb
jg
sbb
adc
mov
add
or
mov
pop
les
cltd
pop
add
cmp
inc
xor
dec
xor
jnp
jnp
fidivrl
mov
mov
push
inc
and
cmpl
add
shld
push
sbb
pcmpeqd
icebp
mov
cmp
xchg
sbb
rorb
cld
sub
jge
add
imul
pop
inc
dec
cmp
test
cmp
xchg
push
push
mov
and
scas
xlat
and
in
ss
scas
push
jmp
cmp
sub
mov
sbb
mov
lock
push
adc
sub
psubusb
stc
and
pop
xchg
enter
sub
hlt
std
push
pop
inc
lods
and
pop
adc
mov
pop
int
popa
push
addr16
mov
dec
mov
mov
sbb
lret
into
inc
sub
mov
scas
jmp
add
negb
jo
and
lcall
cmp
das
xchg
das
enter
loop
xchg
adc
scas
aas
push
xor
cli
mov
xchg
cmpl
popa
push
cmp
xchg
test
cmp
insl
out
pushf
dec
loope
or
mov
faddl
and
inc
sbb
fsubrl
in
push
jmp
add
mov
mov
inc
movsl
inc
rcrb
push
cmpsb
adc
fstl
inc
lret
dec
sub
push
cmp
add
fs
add
xchg
addb
lahf
cld
lds
mov
push
and
adc
jno
dec
pop
movsl
sbb
loop
shrb
out
xchg
or
or
xor
sbbb
xchg
xlat
int
push
inc
movsl
and
rorb
addb
in
push
mov
das
in
add
daa
ret
lcall
and
in
imul
push
push
std
mov
mov
sub
leave
ss
jp
cmpsl
xor
ret
mov
adc
addr16
mov
pop
sbb
pop
xchg
insl
cld
sti
xor
orb
mov
mov
mov
scas
or
sub
and
adc
xchg
jmp
mov
or
inc
cli
cmpb
jp
lock
adc
jne
scas
and
inc
cmp
mov
scas
test
fs
or
mov
sbb
xchg
in
dec
test
cmovns
jo
xchg
dec
insl
jno
inc
out
jnp
and
ret
adc
pop
add
adc
xor
les
inc
in
pop
aad
decb
lock
in
lahf
inc
ret
cwtl
lret
push
ja
mov
add
xchg
sbb
mov
fisubrs
pop
push
and
leave
cmp
test
je
loop
rorl
aaa
adc
xor
inc
ret
outsl
pushf
sbb
add
mov
movsb
cmpsl
add
and
sbb
xor
les
add
sbb
and
sbb
push
or
inc
push
adc
add
sbb
mov
inc
cmp
pop
adc
scas
add
sub
stos
mov
stos
dec
mov
sbb
sub
cmp
jns
mov
push
outsl
test
fimull
mov
pushf
clc
cltd
sbb
add
mov
addl
lahf
adc
imul
mov
rclb
lret
loope,pt
or
xorb
push
repz
test
outsl
nop
aaa
add
or
xor
das
outsb
subb
inc
dec
leave
pop
lret
and
dec
inc
les
pop
divb
loope
xor
jno
sub
push
cmp
sbb
cmpsb
sarl
dec
decb
mov
adc
repnz
test
or
xor
push
lea
push
and
push
ret
aad
cmp
ret
pusha
fisubl
adc
inc
jae
sbb
daa
addr16
mov
mov
pop
mov
movsb
adc
sbb
pop
popw
push
popf
nop
fiaddl
mov
adc
or
push
mov
ficoml
jp
fadd
into
rcrb
or
lods
jo
fcoms
sub
xchg
inc
ljmp
dec
sbb
and
dec
fst
push
inc
xor
mov
or
inc
js
adc
pusha
fiadds
pop
inc
fs
mov
push
es
xchg
mov
andl
xchg
mov
add
inc
mov
fmuls
rcrb
pop
and
jnp
int3
pop
and
xor
mov
sbb
loope
add
xor
aam
add
and
bound
test
mov
inc
pusha
ss
xor
subl
and
adc
fmuls
pop
test
dec
adc
stos
fldenv
mov
les
jl
jle
stos
fwait
scas
cli
aaa
loopne
test
jnp
loop
inc
lcall
fiadds
xor
inc
enter
cmp
imul
fwait
arpl
mov
fwait
pop
sub
or
loope
lahf
or
fcmovbe
sbb
mov
mov
lods
pop
adc
push
data16
or
daa
lret
test
addb
dec
rorl
sub
xor
mov
jecxz
push
add
mov
test
sbb
or
addr16
sub
push
cwtl
lea
add
xor
cmp
mov
add
mov
add
inc
shll
add
dec
jo
sbb
es
adc
subl
arpl
sbb
fadd
or
roll
fadds
push
clc
sbb
xor
mov
stos
mov
scas
sub
andb
movsb
mov
sbb
xchg
sbb
dec
loopne
out
cmpsl
aaa
add
add
sub
add
xchg
push
ljmp
inc
out
adc
adc
loope
mov
push
adc
hlt
movsl
push
aaa
inc
lods
ja
mov
jo
push
add
mov
push
mov
ljmp
inc
or
and
or
and
or
xchg
mov
pop
xchg
inc
inc
adc
sarl
shll
mov
add
mov
cltd
push
xor
rorb
cltd
xor
das
cmpsb
test
mov
adc
and
add
dec
jno
and
loope
sbb
rcrb
bound
push
mov
shlb
out
xor
adc
add
lock
adc
jl
dec
and
cmpsb
dec
mov
cwtl
test
rcl
lahf
sbb
jb
sbb
and
adc
mov
shlb
or
dec
call
or
sbb
cltd
cld
cltd
iret
cltd
push
popa
mov
and
iret
inc
enter
xor
loop
mov
rcrl
sub
pop
je
add
cltd
push
sbb
xor
inc
pushf
nop
jmp
dec
xor
int3
add
jo
dec
cwtl
push
ficomps
cmp
push
es
xchg
lea
nop
jbe
lds
sbb
nop
inc
ljmpw
jbe
jno
mov
inc
shrb
js
add
mov
adcb
aaa
ret
cmpsb
push
inc
fnsave
xchg
test
imul
rolb
adc
das
or
sahf
imul
lea
out
inc
in
jb
cltd
jno
adc
jl
cwtl
or
rorl
pop
loopne
adc
and
mov
hlt
test
data16
jo
jno
test
gs
mov
pop
leave
pusha
adc
les
clc
cli
hlt
pop
xor
jecxz
or
add
rclb
cmpl
push
jns
sub
pusha
ljmp
mov
loop
inc
cmpsb
lds
pop
shlb
inc
sub
sahf
stos
adc
lcall
lcall
lock
out
inc
push
add
cmpsb
loop
fisttps
push
xor
cld
add
cmovae
inc
jae
xor
test
inc
daa
sub
mov
inc
and
in
add
or
dec
pop
stos
push
mov
jecxz
push
ret
jae
sar
cltd
mov
xchg
stos
lcall
lods
sub
dec
jo
loop
pop
popf
xor
xor
cwtl
inc
test
dec
inc
fisubrl
pop
inc
or
adc
xchg
arpl
pop
in
xor
dec
dec
call
inc
sbb
fmull
cmp
mov
add
mov
adc
in
dec
fimuls
dec
inc
nop
sub
loopne
adc
adc
popl
loopne
cmp
adc
cmp
dec
mov
adc
repnz
adc
rolb
call
adc
js
sub
sub
push
push
aad
les
pop
shll
xchg
cld
in
rolb
add
lahf
sub
and
pop
push
and
shrb
loopne
ret
and
stos
in
cmp
inc
mov
sbb
mov
repnz
push
pop
stc
dec
call
dec
sbb
xchg
xor
call
sbb
mov
shr
push
cmc
pop
das
mov
cwtl
pushf
mov
mov
mov
hlt
jl
jge
js
mov
movsb
nop
rep
and
mov
or
mov
jl
mov
adc
pusha
pop
test
cmc
push
stc
push
gs
cli
sub
rolb
cmp
addr16
add
add
nop
cmp
and
jmp
inc
push
je
xchg
int3
jg
xchg
fucomp
xchg
scas
cmpsb
inc
in
ficoml
xlat
mov
sti
fdivl
mov
mov
fnsave
or
sub
xor
ljmp
jmp
rcr
cmc
sub
adc
sbb
adc
mov
and
add
movsb
sbb
repnz
xor
mov
inc
jbe
push
dec
iret
rcll
add
stc
stos
cli
mov
in
pop
or
sub
sti
pop
test
int
inc
lcall
xchg
repz
cmpb
sti
sub
mov
out
mov
inc
xchg
fdiv
nop
arpl
idiv
push
out
data16
dec
mov
leave
pop
divb
rorl
add
faddl
pop
mov
ficompl
mov
xor
push
mov
cmpsl
cltd
mov
pop
xor
push
jnp
outsb
cmpsb
scas
inc
loopne
in
adc
mov
iret
and
stc
and
lds
popf
fcompl
fwait
mov
clc
imul
mov
fisubrl
mov
out
ret
popa
cld
arpl
adc
clc
push
or
das
jle
rcr
adc
out
and
lcall
sub
jmp
sbb
jns
sub
cmp
sub
testb
out
mov
je
loop
mov
add
mov
pushf
cmpsb
lea
stc
jl
out
or
jmp
fs
mov
cmp
sbb
test
mov
movsl
jecxz
shl
mov
pusha
in
scas
pop
xor
pop
ret
fstpl
xchg
hlt
fstp
add
insl
push
xor
cmp
jne
movsb
pop
sbb
repz
dec
outsb
push
popa
jae
scas
lock
jne
pop
dec
push
rcrl
fwait
add
insb
es
inc
cmc
add
cmp
mov
ljmp
insb
pop
inc
pushf
add
xlat
sub
jbe
out
inc
sub
orl
cs
mov
xor
xor
sbb
pop
jmp
and
xchg
jne
xorb
dec
adc
stc
les
cld
mov
push
insl
stos
div
rclb
int3
out
pop
scas
cmc
lds
xchg
push
mov
push
mov
popa
lods
enter
lcall
push
adc
xchg
sub
hlt
jle
test
mov
ret
sub
inc
aam
adc
push
mov
aad
sub
mov
test
es
xchg
jmp
dec
adc
into
aam
or
sahf
mov
int3
stos
stos
scas
xchg
sarb
add
mov
outsb
add
out
out
loopne
shll
or
cmp
pop
push
in
xchg
jp
in
outsl
cld
lahf
nop
or
movsl
sbb
stos
lods
mov
mov
mov
imul
add
loop
add
fsubrp
loopne
inc
add
inc
lds
es
sub
cld
mov
push
push
movsb
inc
loope
popa
cli
inc
test
js
out
sbb
es
mov
in
lods
pop
push
fildll
jmp
xor
stos
adc
cmp
push
lods
popa
popa
sub
movsl
cli
lahf
cwtl
clc
movsl
and
pop
pusha
inc
es
inc
rorl
stc
pusha
mov
les
jno
add
dec
fsubl
fisubrs
mov
adcl
pop
mov
addr16
pop
cmc
mov
aas
stos
ret
sub
sarl
pusha
xchg
sbb
sbb
test
test
mov
sub
data16
mov
jmp
dec
pop
jne
jno
insb
cwtl
xor
mov
push
xlat
inc
stos
xorb
xor
cwtl
loop
orb
mov
lcall
lods
or
fdivs
addb
add
clc
adc
test
add
sbb
xchg
movsb
xchg
out
and
out
xchg
rcll
cmp
jecxz
push
pop
xor
lea
outsb
das
shll
cld
jne
or
sbb
inc
movsb
mov
lea
fiaddl
aas
and
imul
outsl
push
sub
xlat
mov
insb
stos
pop
or
mov
inc
lods
sub
sub
mov
pop
xor
pushf
cmpsb
stos
adc
push
jbe
mov
aam
sub
jnp
rol
jno
pop
dec
pop
xor
or
outsb
sbb
std
push
lret
inc
sbb
mov
bound
xor
enter
jb
fcoml
fldt
in
sar
mov
loope
push
aaa
push
sub
xor
cmp
pop
inc
ja
ret
xor
xor
int3
mov
loop
enter
das
inc
lahf
test
and
stos
fisttpl
adc
mov
ror
adc
dec
or
adc
mov
add
repnz
jb
pop
push
dec
lahf
mov
push
cmp
and
in
mov
pop
add
jg
scas
not
and
daa
add
fs
jle
adc
cli
sub
push
cmp
push
mov
sub
pop
sub
gs
push
adc
mov
cs
fdivrl
add
pop
jns
jge
mov
in
mov
aam
push
lds
aam
rclb
test
stos
add
faddp
sahf
inc
adc
fstpt
and
mov
pop
movsl
sub
push
push
pop
in
jnp
ljmp
mov
shll
aas
ds
push
jl
jl
jne
je
cld
lret
sbb
sahf
faddl
push
push
mov
pop
mov
fisttps
ffreep
dec
xlat
jmp
pop
lahf
mov
add
popa
dec
lds
aas
mov
jb
outsl
mov
imul
clc
fucomp
mov
push
pop
sub
out
adc
lock
and
adc
sti
jo
or
aaa
or
ljmp
cmp
es
in
hlt
jmp
xor
push
and
fistpl
fadds
or
mov
sub
mov
hlt
aas
into
roll
es
or
add
inc
repz
inc
xchg
push
bound
xchg
jb
shlb
bound
or
ret
iret
cmp
bound
arpl
dec
xor
mov
addr16
iret
ret
add
or
jg
mov
in
fnstcw
xor
and
ret
ja
pop
pop
mov
jmp
inc
lds
insl
test
mov
lea
test
roll
pop
lahf
adc
shrl
dec
or
sub
mov
mov
push
sbb
les
les
sub
data16
dec
sub
icebp
aam
ret
jae
inc
adc
out
cmpsb
adc
cltd
sub
scas
cld
add
or
cmp
fcmovne
and
in
insl
jo
mov
sar
add
pop
popf
add
test
aaa
adc
cmp
aam
hlt
inc
adc
add
lea
push
sub
mov
mov
loopne
int3
hlt
sbb
push
lods
xor
dec
and
es
pop
jge
popf
push
and
flds
lds
mov
push
mov
notl
push
or
int
jbe
cli
cmp
arpl
sub
xlat
sbb
sub
inc
ret
or
push
sarl
aad
test
out
out
pushf
imul
add
out
cwtl
dec
add
movsl
lret
sub
into
xor
stos
sbb
orl
lahf
insl
push
pop
popf
push
push
mov
mov
cwtl
aad
je
add
cmpl
decl
sub
mov
aam
or
loopne
out
xchg
dec
jne
addr16
enter
mov
jmp
in
test
dec
and
or
daa
and
pusha
inc
inc
cli
push
push
rorb
cmp
out
sahf
stos
xchg
jle
sub
push
pop
mov
dec
mov
lods
jmp
ficoms
or
ljmp
cmp
fld
popf
out
pusha
sbb
loope
insl
jl
inc
cwtl
or
aas
stos
and
mov
xchg
adc
movsb
lret
cltd
xor
fisubl
stos
pop
mov
lret
pusha
sbb
lahf
adc
push
pop
xchg
push
adc
test
test
add
dec
ljmp
adc
push
cmc
xor
mov
inc
xchg
mov
aam
push
lcall
cmpsb
add
int3
jne
insl
jp
adc
push
or
in
add
jg
add
hlt
push
jbe
cmp
push
sub
jb
dec
ljmp
lcall
je
mov
xor
loop
adc
pop
vprotd
movsl
and
mov
xchg
push
pop
jmp
mov
jle
ljmp
out
cmp
xchg
test
aam
mov
lods
sti
xchg
sbb
sub
xchg
mov
dec
cs
or
lret
fs
lret
ret
lods
mov
mov
cwtl
std
pop
push
mov
push
stos
and
mov
adc
pop
dec
test
cmpsb
mov
push
ret
out
sub
test
inc
adc
and
push
je
cli
add
xor
sub
movsl
popa
jmp
sti
cmc
aam
loopne
jmp
cmp
mov
sub
addl
data16
cmp
push
mov
ja
mov
stc
mov
mov
lret
data16
into
sahf
jb
jl
sub
jmp
imul
clc
fdivl
or
adc
gs
sub
mov
addr16
mov
push
mov
ja
shl
lds
sahf
push
dec
je
add
stc
adcb
add
fstpl
xchg
aam
push
nop
test
ljmp
jns
addr16
mov
sbb
xchg
mov
test
add
xor
fwait
xchg
stos
lcall
mov
insl
lods
addr16
iret
mov
mov
notl
test
and
mov
inc
mov
xchg
shll
mov
cli
and
lea
push
subl
pop
and
inc
xchg
les
rclb
xchg
pop
mov
mov
pop
add
loope
repnz
in
mov
sbb
cmc
in
push
dec
les
fst
inc
mov
cmp
xor
sbb
xor
sti
sbb
ret
push
pop
dec
jno
push
mov
adc
ret
shlb
sub
add
and
stos
lahf
enter
and
jno
jbe
loopne
sarb
inc
xchg
cmp
cmpsb
fnstenv
fisubrl
jp
fwait
ljmp
out
sub
adc
test
cmc
es
ret
out
adc
sbb
out
das
pop
lcall
or
mov
jle
stos
psubsw
push
inc
fwait
enter
lock
loope
bound
rclb
or
fs
pop
mov
push
lcall
enter
cmp
sbb
aam
je
pop
inc
cmp
sub
jo
mov
insb
stos
dec
adc
sahf
push
ljmp
pop
xor
cmp
in
pop
xchg
ja
adc
and
pop
fisttpll
pop
movsl
and
ret
aas
mov
add
test
enter
cmp
push
mov
jmp
and
iret
xor
fiadds
aaa
sbb
imul
out
and
xor
addb
mov
add
sub
mov
aas
aad
inc
arpl
mov
int3
xchg
std
cltd
cli
xlat
xchg
mov
xor
mov
pusha
mov
movsb
aad
push
shrl
lret
out
stos
inc
pop
shrb
jae
pusha
push
icebp
jecxz
loopne
movsb
test
mov
popa
mov
popf
inc
cmpsb
fbstp
or
sub
clc
jp
mov
mov
divb
cli
mov
xor
inc
in
sub
or
rol
ret
xchg
ljmp
mov
sub
lret
mov
icebp
mov
sbb
adc
ljmp
mov
loop
clc
call
or
out
out
cmp
loopne
push
cld
jmp
add
mov
dec
cld
stos
cwtl
dec
adc
mov
sub
test
adc
mov
rorl
jp,pt
inc
or
shrb
lds
outsb
mov
popa
sbb
aam
sbb
dec
xchg
push
stos
enter
shll
in
add
adc
fdivs
sti
sub
das
dec
mov
pop
cld
push
push
cmp
and
xchg
out
iret
loopne
fsubl
test
cmp
pop
incb
jb
push
insb
inc
adc
popa
pop
push
push
stc
jae
scas
scas
mov
inc
hlt
rcrl
shll
mov
adc
mov
push
or
in
outsb
int3
jne
into
test
sub
inc
popa
and
in
mov
sub
sub
push
int
ret
push
pop
push
dec
adc
mov
or
pop
iret
push
xor
sbb
mov
into
addr16
sahf
fnsave
cwtl
mov
adc
in
push
mov
mov
syscall
adc
dec
movsb
xchg
imul
xor
cmpsb
mov
xchg
sbb
mov
loope
add
mov
add
push
push
mov
pop
sbb
push
fimull
xchg
mov
push
mov
jecxz
pop
inc
aad
mov
jns
into
shll
popa
or
aaa
hlt
push
inc
jns
orl
cmc
cltd
fs
push
out
push
call
jno
xchg
aad
into
xchg
test
mov
and
jnp
lcall
ficompl
xor
sub
inc
iret
mov
inc
mov
jecxz
xchg
daa
jp
inc
mov
outsb
test
loopne
cld
stc
dec
shrb
aam
mov
xor
adc
and
arpl
xorb
bound
in
xor
adc
adc
cmp
stos
fldl
test
in
lods
xchg
cmc
add
cmp
adc
dec
outsb
rclb
nop
cmp
xchg
mov
mov
or
cmp
jg
ss
sub
insl
jne
jg
or
sahf
jp
push
pop
push
dec
cli
mov
scas
push
les
add
mov
das
jmp
mov
push
outsl
and
dec
inc
add
scas
inc
testl
mov
dec
fiadds
fsubrs
and
push
push
jg
cli
js
rcr
add
push
fldenv
loope
gs
inc
mov
daa
inc
pop
push
pop
pop
push
cmpsl
es
scas
push
push
out
or
fcoml
sbb
inc
jmp
sbb
jno
cmc
xor
xchg
test
and
test
cmp
sub
rorb
aad
ss
adc
cwtl
mov
scas
cmp
xor
push
sub
or
jae
inc
lods
shrb
lea
popf
scas
pop
leave
adc
test
popf
push
in
stos
xchg
shrb
jne
or
arpl
icebp
lock
lods
shlb
mov
mov
stos
hlt
lret
add
xor
sbb
push
push
cmp
lods
jae
hlt
pusha
sub
mov
jns
scas
rcl
xchg
mov
dec
xchg
jo
sub
loop
sub
push
test
or
adc
mov
arpl
aam
loope
das
mov
add
mov
testb
sbb
and
mov
xor
insl
pop
adc
sub
mov
pusha
jge
imul
add
pop
pop
adc
adc
add
and
mov
scas
loop
inc
lcall
subb
add
xchg
out
sbb
jg
or
aaa
or
arpl
lret
icebp
xchg
or
out
fcmovb
push
jo
popf
pop
push
push
and
xchg
adc
popa
sahf
inc
shrb
or
adc
int3
sub
aam
or
pop
std
mov
fcmovne
mov
push
shlb
and
lret
iret
sbb
add
jnp
xchg
cwtl
mov
imul
in
jbe
in
aam
push
in
jecxz
imul
jae
cmpsl
sub
shrb
push
scas
jl
mov
movsl
cmp
fiaddl
mov
sub
or
movsb
iret
dec
pop
pop
sbb
cltd
cli
out
xor
pop
and
dec
enter
jmp
jge
lea
stos
sub
call
aaa
arpl
inc
jno
fwait
subb
or
lea
in
daa
and
dec
es
dec
and
loop
jmp
mov
push
shl
mov
aaa
mov
arpl
xor
daa
mov
xchg
jmp
mov
jo
push
mov
mov
and
cmp
out
iret
push
inc
jge
bound
mov
push
arpl
ret
imull
test
xchg
lock
jne
fbld
imul
xor
jp
popa
mov
cmp
cmc
jg
cld
adc
xor
pop
rorb
aas
push
add
test
xlat
adcb
push
mov
sub
adc
sub
data16
inc
pop
lock
mov
inc
adc
inc
adc
add
shll
pop
int3
adc
jg
jae
lock
imul
mov
and
push
test
rclb
dec
test
xor
or
out
in
insb
outsb
aam
cmp
mov
subb
xchg
push
mov
in
mov
add
loope
mov
mov
jbe
or
negl
adc
mov
inc
mov
lret
push
sbb
or
add
xchg
fwait
dec
outsb
addr16
test
xchg
xor
loopne
lods
cmp
bound
and
adc
jecxz
je
sub
push
daa
decl
fists
call
pop
pop
cmp
mov
xchg
movsb
pop
inc
aam
lret
lods
inc
and
pop
xchg
test
fdivrs
adc
dec
mov
cld
mov
enter
push
xchg
js
dec
push
les
xlat
adc
mov
dec
cmpsb
incb
dec
push
test
data16
ds
cmc
or
negl
push
fisubrs
xchg
scas
adc
sbb
push
into
or
cmc
xchg
inc
add
fbld
jmp
mov
mov
mov
popf
push
push
pop
pop
sub
lahf
add
ret
mov
call
subb
insl
inc
nop
cs
rorb
adc
mov
aaa
jp
dec
lea
in
push
aas
cld
aam
aam
mov
sub
jmp
lcall
mov
insl
mov
int
mov
mov
push
xchg
adc
sbb
adc
cwtl
xchg
xchg
lret
test
je
test
mov
aas
mov
xchg
mov
pushf
shll
roll
mov
jmp
cs
lods
divl
and
lods
add
push
cmp
pop
cmpsb
jne
in
mov
stos
xchg
dec
xchg
add
in
mov
sub
dec
adc
sahf
shlb
or
or
lds
out
aam
icebp
inc
inc
or
je
pop
pop
mov
stos
lahf
popa
clc
add
xor
push
jl
cmp
jmp
mov
sub
mov
push
and
mov
or
adc
push
pop
sti
nop
mov
outsb
xchg
lea
test
call
or
or
dec
xchg
lods
lret
sub
test
rolb
sub
ret
popa
jb
and
push
pop
adc
mov
ficoms
adc
gs
adc
lret
popf
sbb
test
bound
movsl
mov
jne
jmp
shr
cmp
xor
add
mov
out
out
inc
pop
mov
sbb
xchg
push
into
lock
mov
jbe
dec
add
call
sahf
sub
cmp
jge
mov
nop
mov
gs
imul
or
pop
xchg
jmp
mov
inc
out
xor
push
in
add
aam
add
pusha
sub
pushf
inc
xchg
push
inc
inc
or
push
je
inc
jns
ret
xchg
scas
adc
movsl
inc
push
jle
popa
movsb
inc
ljmp
or
int
mov
pop
movsl
subb
das
addr16
add
rcll
jg
jno
push
mov
xchg
bound
cmp
sub
mov
or
mov
cmpl
int3
mov
repnz
lods
gs
cmp
mov
outsl
xchg
mov
insl
and
inc
sub
sub
test
inc
arpl
mov
xlat
xor
adcb
jmp
mov
pop
outsl
call
mov
xor
jno
sub
mov
test
nop
cmp
pop
shrl
cmpsb
dec
jp
xor
call
insb
mov
sbb
push
ljmp
cmpb
sahf
jl
mov
pop
cld
lods
addr16
imul
jbe
jmp
pop
aad
mov
out
push
cli
jge
mov
jecxz
pop
test
pop
pop
test
jmp
jns
cmp
or
insl
mov
sbbb
fnstsw
lahf
add
pop
add
sub
and
sbb
add
jbe
or
or
push
popa
aaa
and
sub
sub
xchg
push
inc
pop
cmp
cmp
les
adc
cmp
imul
icebp
xor
sahf
sbb
and
rcll
sub
stc
adc
add
mov
loopne
mov
mov
mov
add
add
sbb
and
push
mov
aas
clc
add
outsl
add
test
mov
shll
cmpb
adc
xchg
adc
xor
xchg
xchg
jecxz
push
xchg
sahf
add
inc
and
inc
inc
js
xchg
inc
jo
xchg
inc
fs
lcall
mov
dec
and
lods
inc
pop
and
adc
lods
adc
sub
xchg
inc
xchg
pop
xor
xor
push
xchg
ljmp
addr16
or
das
fwait
cmp
fisttps
addr16
testl
mov
stos
rcr
xor
sub
jp
sub
mov
call
jmp
xor
push
std
dec
movsl
or
cmc
insb
stos
fidivrl
pop
icebp
hlt
cltd
aas
mov
cwtl
loope
enter
dec
mov
js
inc
shll
pop
out
pusha
pop
mov
jno
dec
fcomp
jg
mov
test
xchg
sub
jno
xor
jo
mov
scas
xchg
dec
xor
setge
push
in
xor
das
sbb
adcl
mov
fsubl
ficoml
lcall
mov
sahf
lock
stc
mov
test
push
shlb
andl
xor
adc
adc
push
push
lea
cmpsb
popf
test
lock
sbb
xor
add
inc
int3
lea
sbb
lea
das
adc
push
add
adc
clc
dec
pop
cmp
xlat
movsl
push
and
push
sub
loope
gs
movsb
mov
dec
in
aas
loope
and
iret
sahf
dec
or
aaa
ss
jno
pop
dec
ret
movsb
adc
or
test
test
pop
adc
dec
in
pop
lods
fwait
mov
dec
or
cmc
and
in
ret
push
jnp
push
lods
mov
sub
es
push
rcll
inc
movsl
xchg
adc
bound
cmp
xchg
scas
std
ret
stos
and
mov
xor
sub
mov
dec
int
or
mov
adc
popf
sbbl
xor
stos
dec
sbb
and
and
mov
scas
shl
divl
pop
cmpsb
loope
inc
popf
int3
jl
pop
mov
mov
ljmp
and
xchg
gs
outsb
push
mov
and
push
adc
movsb
dec
filds
popa
bound
push
fistl
inc
mov
rclb
sbb
int3
ss
and
add
sbb
lret
test
repnz
cli
mov
adc
push
sub
mov
jne
stc
rcl
lret
shll
fcoml
fdivrp
push
mov
push
jmp
aas
cmp
mov
sahf
ret
fucomip
xor
pop
jl
adc
xchg
jae
lods
mov
aas
test
pop
rclb
add
lods
out
addb
mov
add
das
mov
pop
push
inc
jg
loope
xor
pop
sbb
adc
jb
idivb
pop
loopne
loopne,pn
rolb
jge
push
int3
mov
mov
mov
sbb
cmpsb
pop
xchg
xchg
loope
inc
iret
sbb
push
mov
adc
xchg
jne
mov
ja
adc
stos
sbb
mov
call
daa
xor
add
pop
or
sbb
xchg
or
sub
jbe
popf
sbb
cld
or
xor
mov
clc
out
mov
sub
adc
stc
stos
push
sub
push
or
or
loop
mov
bound
testb
xchg
mov
inc
addr16
shlb
dec
jnp
and
mov
xor
push
adc
mov
xchg
stc
mov
stos
mov
jle
popa
out
orb
jno
cmp
fidivrl
mov
push
fsubrl
dec
lret
or
pop
call
mov
leave
jecxz
pop
arpl
decb
sahf
pop
ja
xorb
out
mov
int3
stos
mov
clc
inc
mov
gs
mov
adcl
popa
orl
ja
movsl
subl
mov
or
push
cli
les
iretw
pop
fs
orb
fdivp
test
inc
mov
stc
or
int3
cwtl
clc
adc
push
arpl
xchg
rolb
cltd
pop
in
xchg
mov
mov
sbb
jle
push
dec
std
into
pushf
inc
addr16
fcmovbe
sub
nop
data16
xor
pop
jne
out
lret
jl
fdivl
scas
lret
jl
rol
push
mov
mov
mov
jecxz
insl
rclb
ja
clc
loop
push
popf
clc
test
inc
nop
dec
repz
xchg
loopne
add
jmp
add
mov
pop
out
imull
test
mov
aaa
sub
xor
lea
out
loop
out
push
andb
xchg
prefetch
jnp
lds
js
lods
cmp
dec
sti
dec
dec
sti
mov
xor
mov
jns
lret
xor
movsl
pop
inc
fistl
ds
out
dec
xchg
and
mov
cs
mov
inc
xchg
movsl
sub
sub
scas
in
or
lea
mov
push
sub
loopne
push
sub
mov
fidivl
cmp
test
inc
pop
pop
mov
loop
std
mov
pop
sbb
inc
cld
jge
enter
and
push
xchg
jae
insb
rorl
sarl
dec
cwtl
cmp
ds
stc
push
imul
mov
bound
addl
cmpsb
cmpsl
mov
lods
adc
pop
and
jae
inc
or
cwtl
push
inc
ficomps
pushf
inc
push
sub
mov
inc
bound
push
inc
lahf
dec
loop
loop
fcompl
add
xchg
and
int3
or
push
mov
sbb
test
repz
pop
dec
mov
lods
xchg
fdivl
adcl
outsb
jmp
cmp
mov
mov
sub
stc
movd
push
dec
movsl
out
cmp
sti
sbb
pop
jmp
push
mov
xor
jmp
jne
sub
push
dec
dec
mov
xchg
scas
and
inc
jnp
jge
add
lock
adc
mov
xor
xchg
popa
pop
stos
mov
clc
das
xchg
es
push
stos
jecxz
aas
push
rcrl
fdivrl
pop
je
movsl
inc
mov
cmp
mov
cmp
test
xor
push
inc
cmp
jle
adc
mov
mov
sub
pop
xchg
or
jae
cs
pop
fsubrl
pop
and
test
or
dec
pop
pop
jecxz
dec
daa
data16
popa
pop
xchg
movsb
ret
and
sbb
cmc
cmp
std
pusha
pop
adc
inc
cmc
and
shll
stos
rolb
pop
dec
leave
sub
cld
pop
add
repnz
inc
pop
pushf
pop
cld
xchg
dec
icebp
sub
out
pop
bound
ret
jge
mov
pop
xor
jmp
inc
into
dec
ja
mov
mov
dec
mov
sub
dec
pop
iret
cld
adcb
addb
mov
orl
orl
add
xchg
or
mov
pop
scas
xor
push
jne
push
out
pop
sub
xchg
add
cwtl
aam
loope
test
add
test
and
cmpsb
rclb
adc
push
mov
cltd
dec
daa
add
cli
mov
adc
and
jno
add
pop
sete
jno
inc
mov
js
xchg
ljmp
shl
push
push
lret
pop
or
lods
xlat
cmc
xchg
jecxz
pop
mov
adc
push
push
sbb
lock
fwait
xlat
cmc
xchg
push
ljmp
jne
leave
mov
jl
out
push
and
ret
inc
rcrb
dec
dec
je
ret
xlat
sub
mov
pusha
xchg
mov
cli
adc
testl
push
dec
mov
push
movsl
jb
mov
adc
loope
stos
negb
fldenv
inc
pop
ja
test
in
mov
ret
add
adc
mov
pop
lahf
in
imul
push
aam
cmp
adcl
imul
mov
fistpll
arpl
sub
insb
jae
rclb
popf
ret
ja
mov
or
in
sahf
mov
int3
es
lds
in
push
mov
adc
mov
sub
inc
xchg
xchg
add
adc
loopne
insb
mov
out
cmp
test
repnz
mov
cld
aad
dec
xorb
xor
inc
push
fcmove
add
rolb
test
loope
dec
add
adc
pop
cmp
into
dec
roll
adc
fwait
cmc
dec
mov
or
pop
inc
test
fisubrl
scas
and
lock
mov
fwait
mov
add
and
sbbb
mov
push
add
xor
pop
inc
mov
std
bound
xlat
cltd
lock
lock
xchg
lds
adc
lahf
xor
in
scas
loope
leavew
push
xchg
xchg
loopne
xor
scas
cwtl
test
fimuls
pop
sub
lods
dec
adc
lock
aad
and
loopne
test
test
jge
scas
rol
aam
pusha
adc
inc
nop
inc
data16
cmpsb
sbb
jmp
mov
mov
subb
bound
insl
push
xorb
icebp
jne
daa
push
xchg
xor
or
ljmp
push
inc
cli
inc
cmpsl
scas
test
push
inc
push
cltd
into
jb
push
push
test
xchg
out
xchg
scas
mov
pop
inc
jp
cltd
push
aam
out
jp
movsb
out
shll
xchg
mov
xorl
mov
xchg
out
mov
pop
add
inc
cmp
movsb
adc
pop
or
mov
ljmp
mov
enter
xor
add
inc
movsl
or
negb
cwtl
mov
dec
ret
xor
mov
xor
xchg
in
sub
jl
movsb
jge
pop
push
or
popa
xor
test
lea
sbb
xor
xor
movsl
repz
ret
fucomp
mov
mov
into
shlb
andl
mov
repz
out
xchg
rolb
rclb
inc
xor
out
and
cwtl
popa
iret
sarb
cmp
add
aad
loopne
cs
cmpsl
pop
enter
inc
scas
and
mov
mov
sysenter
xchg
dec
xchg
ret
inc
mov
lret
mov
sub
lock
push
test
filds
adc
push
jmp
inc
outsb
sbb
or
cmp
das
pop
test
inc
and
mov
ljmp
add
repz
or
scas
sbb
cmpsl
mov
jbe
in
xchg
scas
call
fdivrs
add
sbb
mov
add
pop
sub
push
loop
jecxz
adc
push
fimull
mov
xor
scas
pop
sbbl
mov
fwait
inc
in
pop
adc
mov
adc
lea
adc
jo
sub
add
mov
push
jno
inc
xchg
in
push
jae
push
xlat
dec
cmp
add
jecxz
dec
adcb
add
mov
outsb
inc
iret
fdivrl
xchg
push
xlat
push
in
js
or
pop
adc
xchg
mov
or
inc
in
aaa
mov
jno
sbb
inc
inc
fdivl
push
enter
push
bound
mov
outsb
in
inc
xchg
ret
dec
or
pop
sbb
xchg
insb
pop
inc
or
lock
je,pt
push
sbb
xchg
pushf
mov
jecxz
stos
sarb
std
jp
jge
mov
and
mov
add
add
add
add
add
inc
add
add
add
add
add
and
dec
shrb
pop
mov
mov
adc
sbb
sahf
push
adc
stc
dec
dec
cmpsl
in
and
jmp
shlb
popa
dec
lods
dec
fs
leave
mov
adc
and
push
dec
inc
push
xchg
sub
sub
xor
and
mov
test
adc
mov
jp
mov
sbbb
insb
or
adc
push
in
dec
pop
leave
mov
push
xchg
mov
sub
dec
leave
movsl
inc
xchg
xor
out
pop
inc
sub
xchg
js
test
and
inc
add
mov
mov
push
xchg
add
jecxz
adc
sub
adc
xor
add
sub
jae
xchg
or
jbe
inc
and
xchg
fildll
add
or
mov
sub
imul
cltd
jo
mov
pop
daa
xchg
mov
xor
and
dec
fwait
xchg
fisttpl
ret
int3
and
ljmp
mov
aad
add
mov
pop
mov
or
shll
push
sbb
add
leave
inc
xlat
pop
xor
js
mov
and
and
movsl
lods
mov
aaa
das
sub
sub
mov
mov
mov
or
sbb
add
or
enter
pop
mov
add
push
fildl
inc
add
and
mov
dec
or
pop
hlt
subb
push
fcomps
lds
mov
mov
shrl
fwait
mov
dec
inc
bnd
add
aad
insb
lret
xchg
add
push
pop
mov
and
ret
and
adc
mov
shrb
dec
outsb
and
xchg
jb
stc
mov
push
repnz
add
pushf
pop
adc
add
add
inc
shll
mov
fwait
dec
popa
adc
jl
cmp
pop
or
push
mov
movsl
int3
cltd
imul
cwtl
ss
mov
pop
mov
sub
xor
add
pop
sub
xchg
jl
and
mov
inc
sub
sub
ss
movsl
inc
cltd
cmp
push
cmp
mov
add
dec
inc
in
mov
outsb
sub
and
jo
cltd
push
stos
sub
push
and
dec
or
cmp
nop
addb
insb
clc
mov
in
aam
xchg
and
ret
push
mov
mov
mov
sbb
cmp
or
adc
and
add
jecxz
testl
add
mov
add
lea
or
mov
mov
xchg
xchg
cld
mov
pop
or
addl
mov
movsb
gs
sbb
push
stc
addb
mov
push
or
es
cmp
sub
stos
xor
inc
mov
inc
mov
add
mov
nop
mov
sbb
popa
test
xchg
arpl
dec
shll
adc
jbe
add
add
sbb
push
and
lods
add
mov
dec
stos
xorl
cmp
stos
mov
loopne
add
and
mov
adc
lret
or
pop
mov
sahf
add
mov
mov
rorb
xchg
insl
fldl
and
lret
mov
popa
jle
xchg
xor
fisubl
push
fildl
pop
dec
in
pop
lea
add
or
mov
test
jne
mov
roll
and
and
mov
inc
outsb
push
cwtl
xchg
push
fsts
outsb
dec
add
add
aad
add
xor
lret
lock
inc
push
mov
dec
inc
shlb
push
dec
add
mov
cmp
insl
or
fistpl
xorl
jmp
in
nop
int
sbb
add
push
ss
nop
je
and
mov
lret
xchg
movsl
jcxz
push
imul
push
push
mov
push
out
xor
shll
inc
xor
adc
stos
nop
mov
adc
or
gs
pop
mov
int3
inc
fs
xchg
pop
cwtl
adc
nop
adc
add
mov
invd
xchg
lcall
aam
add
and
pop
or
int3
insl
xlat
pop
mov
xor
or
inc
outsb
mov
push
jne
test
lea
popa
pushf
mov
xor
in
stos
pop
push
stos
xor
xchg
push
jo
mov
push
or
movsb
mov
mov
pop
or
lods
xor
add
test
movsl
outsl
pusha
popa
add
test
mov
inc
cmove
jae
stos
add
sbbl
xchg
pop
sti
push
sub
mov
adcl
filds
mov
fstps
add
lcall
outsb
inc
movsl
xor
into
mov
call
jno
or
movl
add
add
add
dec
inc
add
add
dec
xchg
and
adc
jae
inc
pop
dec
insb
repnz
dec
pop
in
xor
pop
scas
pop
jl
push
rclb
cwtl
sub
test
xchg
and
pushf
sub
ret
push
and
movsl
aad
jae
ret
in
jge
mov
leave
je
aaa
mov
imul
push
clc
in
and
lea
xchg
jnp
loop
adc
dec
mov
out
push
adc
stos
pop
or
shl
pop
or
fcmovne
fmuls
mov
int3
dec
push
push
jecxz
jb
xor
jne
idiv
pop
xor
xchg
jnp
loopne
sub
rcr
inc
pop
sub
xor
into
mov
into
adc
sbb
add
popa
xor
add
lock
popf
and
xchg
fimuls
fldenv
xlat
jnp
sub
sarb
leave
adc
add
out
sub
cmpsl
scas
mov
not
inc
daa
cmp
sbb
sub
pop
notb
add
or
inc
call
aaa
scas
push
out
pop
loop
jmp
mov
pop
mov
inc
rolb
mov
mov
les
subl
dec
addr16
mov
jecxz
aad
imul
stc
test
loope
and
or
cmc
xchg
cli
pop
xchg
mov
sti
cmc
sub
jp
xor
pop
dec
fdivrs
xchg
aam
test
dec
or
cmpsl
jp
xchg
jne
xchg
sub
or
pop
dec
sahf
push
and
mov
xchg
add
xor
dec
outsb
jns
and
add
shlb
mov
and
push
enter
call
mov
lret
jle
imull
shlb
xor
roll
dec
add
in
fcmovb
mov
arpl
mov
mov
dec
mov
inc
test
fbstp
call
leave
xchg
mov
loop
insb
ret
or
fwait
xchg
inc
in
sbb
sbb
popa
lds
add
test
xor
test
xor
aas
gs
inc
or
mov
push
or
rolb
dec
cwtl
push
jle
adc
dec
andb
dec
out
je
aam
jmp
mov
pop
pop
xchg
push
push
sub
loope
adc
add
movsl
mov
inc
adc
dec
fs
push
or
or
sbb
in
pop
push
sub
dec
jbe
xor
mov
mov
add
rorl
xor
ss
or
jno
xchg
or
xor
gs
or
sbb
add
int
sbb
add
inc
inc
insb
int3
xchg
or
sub
xchg
add
push
popa
in
or
pop
mov
outsl
sbb
mov
push
mov
pop
ja
cmpsb
xor
outsl
jmp
ss
mov
pop
dec
inc
pop
pop
pop
push
imul
push
jbe
sti
add
js
add
fs
je
pop
xor
movsb
pop
dec
sub
xchg
add
adc
push
std
loope
adc
xchg
cmpl
rcll
nop
fmuls
cwtl
js
sub
xchg
mov
add
push
sub
mov
pop
push
dec
cwtl
addb
add
aad
mov
in
int3
subb
mov
mov
xchg
pop
fcoms
je
nop
shlb
add
push
add
das
sub
dec
and
nop
push
push
jbe
adc
push
rcrb
or
and
add
pushf
loope
mov
sub
subb
cmp
sbb
or
sub
add
sbb
xchg
xchg
and
dec
sub
cmpsl
dec
push
popf
sub
or
fs
mov
xlat
stos
dec
pop
lods
mov
and
lods
mov
dec
xchg
lret
xchg
cmp
popa
sub
sbb
shlb
les
push
adc
mov
jmp
adc
rolb
sbb
and
fisubs
adc
mov
imul
xor
movl
shlb
jge
jmp
mov
xor
and
cli
adc
push
jecxz
xchg
insl
int3
nop
and
cmp
adc
xorb
in
jl
es
jo
test
mov
or
push
fs
int
and
arpl
ret
mov
div
cld
out
nopl
cli
aad
stos
rol
sbbl
jle
sbb
jecxz
xor
icebp
shlb
inc
pop
or
int
cli
test
dec
inc
mov
sbb
mov
rcr
adc
or
enter
push
mov
lcall
xchg
ret
jp
sub
add
add
xchg
loop
mov
imul
stc
cmp
inc
mov
out
dec
cli
jmp
push
inc
xchg
inc
push
dec
or
pop
int3
add
mov
xchg
mov
or
xchg
decl
push
loop
cmp
mull
out
and
dec
data16
mov
inc
lret
dec
push
xchg
and
clc
mov
imul
or
leave
adcb
and
jnp
or
adc
cmp
int
shll
inc
pop
add
pop
or
jl
sarb
pop
sti
xor
inc
cmp
std
arpl
sarb
and
add
dec
rolb
and
add
push
imul
pop
add
push
inc
gs
jp
js
cmp
mov
push
push
test
mov
movsb
sub
sbb
imul
jg
xor
daa
add
and
orl
pop
test
std
cmp
add
cltd
xorb
addb
sbb
adc
cli
addl
jb
cwtl
add
xor
mov
adcb
xchg
push
inc
jo
orl
sbb
and
xor
and
add
mov
pop
aam
lods
mov
pusha
and
mov
inc
add
mov
lock
mov
lret
sub
loope
dec
dec
and
xchg
outsb
cltd
popa
or
mov
xor
xor
and
outsl
mov
cli
jb
inc
fwait
inc
add
cwtl
push
test
pop
mov
call
ss
and
stos
dec
mov
mov
daa
add
xchg
push
push
inc
into
and
or
subl
sbb
push
test
aad
cmp
mov
cmpsb
aad
mov
cmp
daa
in
mov
and
mov
cmp
test
inc
insb
stos
add
repz
adc
insl
push
mov
lea
jo
push
lret
xor
mov
std
jmp
fs
sub
out
push
addb
add
ds
loopne
mov
pop
cmp
hlt
push
add
mov
test
jmp
loopne
fsubrs
rorb
sbb
shll
cmpsb
push
cs
and
mov
push
cs
sarl
adc
pushf
mov
sbb
js
cmp
mov
loope
jbe
or
mov
lock
fcoml
imul
mov
sub
mov
push
cmp
or
cmp
xorb
ljmp
xchg
and
or
pop
cmp
int
repz
ss
lods
lret
mov
inc
mov
mov
add
pushaw
adc
stos
sbb
cmp
arpl
rolb
mov
sbb
lods
fcmovne
int
popf
jp
bound
or
xor
pop
add
sbb
add
imul
xchg
cmp
popa
pop
cmp
push
add
pusha
lods
or
lcall
inc
push
push
and
mov
add
fwait
enter
inc
inc
xchg
out
fwait
add
sub
pop
xor
pop
lcall
mov
test
lods
dec
cltd
xor
and
addb
not
xor
mov
loop
lds
adc
imul
push
sub
movsl
or
lcall
xchg
subb
lea
mov
push
repnz
mov
sbb
pusha
ljmp
mov
sub
mov
shrb
add
movsl
stos
cmp
xchg
push
push
sub
push
xlat
test
lods
inc
aad
mov
inc
movsl
ficoml
inc
add
jo
cmp
mov
andb
add
inc
mov
xchg
scas
sub
push
call
and
gs
ljmp
dec
aas
sbb
or
xchg
or
mov
sbb
mov
inc
pop
insl
test
inc
andl
dec
mov
popf
mov
sahf
ret
mov
movsl
mov
sub
lods
push
fwait
xor
and
inc
gs
gs
stos
or
xlat
ret
pop
test
mov
mov
lret
cmp
push
xchg
push
mov
jne
push
fs
sbb
popa
sti
xchg
lods
and
push
mov
scas
mov
dec
push
fs
jecxz
push
xchg
test
nop
mov
mov
ss
test
inc
add
xor
pushf
push
pop
mov
mov
into
stos
arpl
mov
adc
and
lods
shrl
xor
lret
mov
mov
or
xchg
and
fcom
test
outsl
fisubrl
push
adc
aam
add
ljmp
pop
inc
bound
dec
mov
insl
adc
sub
xorb
jnp
addl
push
into
sub
leave
ret
aam
push
jae
pop
add
pusha
dec
bound
imul
dec
add
mov
push
jg
or
sub
mov
pusha
rolb
push
adc
or
rclb
enter
sbb
xchg
xchg
adc
imul
outsb
push
pop
add
scas
and
pop
push
or
xchg
lds
jb
or
or
mov
cld
movsb
cmc
push
pop
cmpsl
mov
adc
mov
repz
js
jnp
push
fisubrl
add
outsl
pop
sub
sub
lea
fmull
adcb
loopne
stc
mov
push
add
sbb
cld
mov
fildl
les
hlt
fmuls
inc
mov
add
jge,pn
add
shl
sbb
xchg
loopne
push
sbb
add
popa
flds
inc
test
add
sub
lret
xor
adc
fisttpll
dec
pop
test
es
jp
pop
push
jle
cmp
movsl
mov
adc
sub
rorl
and
test
clc
inc
add
adc
mov
and
andl
add
sbb
push
fcomps
inc
add
jb
test
mov
sbbl
and
mov
push
imul
or
mov
sub
dec
iret
jo
add
or
sarl
sub
mov
xchg
das
repnz
mov
mov
push
lret
dec
fmuls
push
xchg
lret
mov
gs
iret
dec
ret
daa
pop
push
popf
push
mov
push
icebp
mov
and
jge
movsl
xchg
push
scas
rorl
pop
sbb
inc
lock
sub
rcll
mov
sbb
ret
push
add
sarl
call
movb
loopne
orl
inc
push
xchg
or
pusha
push
inc
adc
loop
mov
fwait
and
bound
xor
adc
lret
xor
and
xor
pop
mov
push
add
scas
in
ljmp
dec
std
lret
xor
cmpsl
push
mov
mov
or
adc
and
sub
cmpsl
mov
xchg
pop
movsl
arpl
roll
scas
pop
or
lock
pop
dec
add
test
iret
insb
cwtl
adc
adc
inc
sbb
mov
sbb
ljmp
sub
or
jb
pop
sbb
adc
sbb
add
test
das
mov
inc
sub
and
dec
mov
or
sahf
mov
mov
dec
inc
in
push
sbb
mov
dec
add
jecxz
adc
js
lods
lret
lds
cld
popf
cltd
or
test
pop
dec
cltd
aas
sub
out
test
in
push
sbb
aas
loop
and
mov
mov
xchg
shrl
adcl
dec
rcrb
xchg
cmp
loope
add
sub
cld
or
les
enter
and
adc
shll
or
xor
je
movsb
mov
nop
push
lds
outsl
mov
jg
out
leave
xchg
inc
push
test
jbe
or
mov
xchg
gs
push
dec
dec
xchg
in
xchg
cltd
stos
gs
dec
push
add
mov
jno
push
adc
pop
adcl
bound
add
pop
pop
push
add
inc
mov
sbb
cltd
adc
hlt
stos
push
test
jnp
test
subb
sub
jne
sbbb
ret
dec
test
adc
je
lea
or
fdivs
mov
test
stos
push
ss
dec
push
sbb
push
push
mov
xor
xor
or
ss
mov
inc
xchg
jnp
shrl
jo
inc
and
sbb
fiaddl
repnz
xchg
repz
and
ret
jbe
rolb
ss
pop
or
mov
push
aam
inc
std
push
mov
add
jns
and
sarb
js
mov
jp
inc
mov
fisttps
arpl
lgdtl
sbb
insl
push
test
xchg
sub
sub
or
orb
jno
loope
or
lods
xchg
cs
jae
xchg
popf
sahf
das
popa
or
xlat
cwtl
stc
mov
clc
mov
mov
sub
in
int3
xor
ret
jne
rorb
pop
cmp
adc
jb
ljmp
push
dec
add
pop
in
mov
lret
mov
loopne
sbb
repz
pop
xchg
sbb
push
and
repz
pop
cltd
std
xchg
test
xorl
mov
sbb
sbb
mov
outsb
mov
mov
bound
or
outsl
sahf
sbb
cmp
repnz
stos
popa
sbb
add
push
xchg
mov
imul
mov
sub
scas
xor
cmp
mov
lcall
cmpsb
sub
js
mov
mov
fldl
sub
fidivl
out
ret
dec
xor
fsubr
fisttps
les
mov
adc
lods
cmp
pop
stos
mov
aas
push
mov
sub
js
fadd
xor
shlb
lock
cmp
ja
pop
add
inc
sbb
adc
addr16
push
jno
mov
out
or
fsts
lods
pusha
push
dec
data16
stos
mov
clc
lret
cmp
mov
aaa
xor
pop
fcmove
lcall
mov
pop
mov
and
and
iret
add
mov
jb
repnz
popa
pushf
scas
add
out
pop
add
pop
in
inc
es
jbe
xor
sub
or
xor
out
sub
lock
imul
hlt
sub
lret
cmp
and
jbe
aam
lods
iret
fbstp
xchg
ret
inc
push
jmp
pusha
cwtl
xchg
or
mov
les
or
mov
fnstenv
outsb
dec
or
aam
nop
imul
push
mov
inc
and
insb
das
xor
push
fnstsw
mov
add
sbbb
cmp
xchg
stos
repz
mov
int
pop
out
out
mov
rcrl
dec
mov
xor
mov
fwait
ror
lods
stc
aaa
cltd
int3
xor
lret
mov
insl
adc
std
push
mov
repnz
nop
sbb
sbb
out
cmp
hlt
mov
adc
mov
or
cmpb
adcl
sub
or
and
jns
xchg
sub
bound
xchg
xlat
jecxz
dec
mov
cmp
cwtl
push
cmpsl
xchg
nop
xchg
xor
sahf
int3
mov
scas
xchg
sbb
adc
stos
sbb
pusha
lods
cwtl
popf
lret
add
sub
cmp
xchg
popa
imul
scas
dec
xchg
test
xchg
aad
repz
jbe
out
ret
dec
adc
xlat
add
clc
mov
dec
xor
lods
mov
lret
lret
mov
je
jbe
daa
out
loopne
inc
and
rolb
pop
inc
popa
mov
rclb
cltd
inc
pop
xchg
jno
xor
or
fcmovnu
inc
sub
fldenv
pop
push
mov
jno
ljmp
jmp
sub
and
jge
jno
cmpl
jmp
xor
in
repz
fmuls
push
sub
pop
jp
mov
jnp
add
stos
cwtl
lea
pop
mov
test
xchg
js
sbb
mov
dec
enter
add
mov
pop
fidivl
iret
bnd
jo
sub
lret
inc
cmp
cmpb
add
lahf
mov
mov
je
or
fstps
lahf
popf
cltd
pusha
mov
xor
les
mov
sbb
cmp
dec
push
and
jae
test
test
add
mov
test
inc
xchg
lods
add
dec
addl
mul
data16
insl
push
mov
push
add
adc
cmpb
outsl
xchg
addr16
cmp
xlat
and
mov
xchg
mov
dec
and
jl
sbb
sti
or
adc
or
xor
jae
in
je
push
sub
das
int
test
add
cmp
popa
and
push
loopne
dec
adc
clc
lds
comiss
dec
sbb
and
bnd
fdivl
add
adcl
inc
adc
push
adc
sbb
fldenv
imul
int3
dec
iret
push
mov
sbb
cmp
xor
nop
mov
or
int
loopne
into
cmp
pusha
sahf
mov
mov
popa
mov
pop
mov
rcll
dec
enter
popa
push
mov
mov
add
aam
dec
xlat
enter
xchg
cmp
sbbb
cmpsl
test
or
sarb
shll
push
outsb
mov
jbe
push
scas
sub
mov
push
clc
jnp
mov
in
inc
sub
lret
stos
mov
dec
jo
repz
and
push
cmp
or
int
rolb
xor
mov
xor
xor
push
out
and
or
subb
fisubrl
mov
mov
icebp
ja
jb
sub
push
mov
or
mov
push
and
sub
jge
add
icebp
daa
mov
sbb
or
lcall
add
arpl
inc
pusha
mov
xor
into
xchg
testb
dec
adc
notl
inc
pop
or
dec
addr16
data16
mov
jb
or
daa
dec
xor
adc
adc
xor
leave
and
je
insl
in
mov
add
xor
fnstenv
push
sbb
enter
add
xchg
movsb
jo
flds
mov
fs
or
pushf
inc
loopne
inc
loopne
add
add
pop
mov
or
push
add
or
cltd
add
movsb
jecxz
sbb
sbb
add
cli
jp
daa
popa
outsb
add
in
cltd
out
sbb
dec
stos
inc
add
in
popf
call
mov
in
sbb
and
es
loopne
testb
or
cmp
pop
and
orb
jae
arpl
hlt
jne
loopne
repz
and
push
xor
push
add
stc
xchg
packuswb
cmp
sbb
repz
ljmp
andb
loopne
xor
out
dec
test
jge
into
ffreep
jae
imul
mov
roll
gs
xchg
or
loope
mov
sahf
xor
mov
or
js
cmpsb
adc
jmp
lds
mov
dec
or
lods
sub
fidivrl
loope
sub
int
add
mov
ss
sbb
lea
sbb
mov
mov
andb
xchg
jmp
mov
sti
rcll
mov
mov
jmp
shll
sbb
pop
mov
repz
test
inc
inc
mov
nop
pusha
xor
popa
xchg
push
xchg
push
je
out
push
stc
pop
push
add
repz
push
scas
mov
out
push
mov
pop
pop
popa
inc
pushf
xchg
xor
adc
inc
lcall
adc
pop
pop
xlat
xor
cmc
and
dec
into
fistpll
xor
pop
fistpll
in
adc
lret
dec
jae
mov
leave
push
adc
mov
stos
xor
test
mov
lods
dec
rcrb
jb
jmp
add
push
lock
stos
sbbl
andl
icebp
xor
mov
cmp
scas
jae
mov
fcmovnb
cs
push
clc
jbe
dec
cwtl
adc
pop
movsl
xchg
lcall
jno
aad
inc
add
inc
adc
fldenv
dec
cmpsb
sbb
push
rolb
mov
jne
push
addr16
pop
push
adc
gs
mov
or
mov
mov
push
nop
xor
scas
aaa
push
insb
fstps
sub
popa
and
add
inc
sbb
cmp
cmpsl
add
dec
test
xchg
sbb
push
pop
xchg
int
push
mov
test
pop
or
lret
lods
and
cmp
js
cltd
insb
ss
push
les
push
cmpsl
out
jge
jmp
arpl
push
or
test
scas
sbb
testb
xor
sbb
jae
pop
xchg
subl
ja
xor
cli
inc
icebp
arpl
das
inc
test
mov
lahf
sbb
ss
jo
push
jecxz
lock
xchg
cmp
add
push
pushf
frstpm(287
push
xchg
add
lock
mov
mov
push
loopne
daa
mov
shrb
mov
adc
xor
lods
cs
stos
sub
add
pop
sbb
clts
pop
push
rcl
pop
xchg
int
sbb
pandn
push
sbb
pop
rep
xlat
arpl
sbb
out
add
bound
sarb
repz
sbb
roll
jne
pop
pop
and
out
sbb
jb
cld
loopne
loopne
in
jge
in
mov
rcll
xor
stos
in
xor
mov
push
loope
imul
jmp
pusha
out
loope
sbb
or
push
add
fmull
lock
sti
sub
or
mov
ds
in
aas
loopne
loopne
sub
das
sbb
bound
xor
lds
mov
xor
hlt
mov
mov
stos
jecxz
cmc
pop
push
ret
push
xor
adc
aaa
mov
add
cmp
xor
dec
mov
popa
pop
cli
sub
push
bound
aas
mov
dec
mov
sub
jmp
mov
outsb
les
cmpsl
popf
cmc
mov
inc
xor
ss
mov
cmp
or
fcompl
adcb
rcr
dec
xchg
pop
aam
push
dec
xchg
inc
pop
test
adc
mov
xor
sub
js
lods
xor
mov
adc
xchg
orl
sub
adc
and
arpl
dec
mov
jmp
push
sti
push
adcb
dec
inc
pusha
repnz
push
aas
call
add
pop
push
pusha
js
orl
aaa
adc
and
lret
inc
pop
push
mov
xor
loopne
test
cmp
push
das
ret
lcall
dec
das
xchg
mov
and
test
pop
sbb
jl
inc
repz
add
dec
dec
xchg
sub
ret
xor
push
adc
dec
or
nop
or
sub
bound
shll
push
mov
xchg
or
int
rorb
or
sbb
push
push
sbb
xor
jne
pop
mov
xchg
insl
fnsave
cmpsl
push
out
push
cwtl
hlt
repz
xor
pop
and
push
inc
insb
inc
test
cs
or
xor
push
pop
xor
jg
repz
loope
pop
mov
push
ss
mov
lea
xchg
pop
lods
lret
cmp
insb
sbb
leave
iret
mov
jge
push
mov
inc
sub
xchg
inc
push
sbb
sub
bnd
mov
jle
sub
rcrb
dec
sub
add
aas
mov
sbb
sub
jae
loope
cmp
and
in
or
pusha
mov
pushl
test
je
mov
pop
inc
xor
dec
pop
sub
cli
nop
sbb
push
mov
mov
into
dec
inc
shll
push
data16
add
and
sub
jmp
push
outsb
jle
mov
pop
jmp
pop
push
shlb
repz
mov
jp
xchg
sarl
sbb
out
jns
cwtl
hlt
int3
into
sbb
addr16
aam
push
inc
xchg
pop
fsubr
push
jne
out
xorb
inc
mov
add
or
incl
stos
mov
mov
cmpsl
enter
inc
fisubrs
and
pop
xchg
mov
cmp
dec
gs
pushf
and
bound
test
or
insl
sub
sbb
lret
subl
sbb
gs
or
shrb
push
mov
daa
sahf
jg
arpl
dec
xor
pop
cmp
dec
inc
rcr
sti
popf
mov
dec
shll
stos
scas
pop
dec
lea
pop
xor
or
lcall
shrb
push
add
xchg
mov
pop
mov
adc
cwtl
push
adc
push
dec
cmpsb
pop
mov
loope
fxch
add
lods
rorb
mov
xor
cwtl
shlb
and
xlat
pop
in
mov
mov
push
scas
sub
aad
mov
scas
fmull
out
clc
stos
xchg
mov
das
ljmp
sbb
pop
push
mov
loop
cmc
jmp
icebp
pop
push
adc
cmc
outsl
outsb
popf
scas
mov
sbb
mov
mov
loop
cmp
xlat
dec
pusha
ds
mov
xor
cmpsd
arpl
test
cmp
jmp
jl
mov
movl
mov
call
hlt
cmp
cmp
mov
ficompl
lea
cmp
cli
sub
ret
fcoms
js
mov
push
repnz
mov
mov
mov
sub
flds
jno
ja
jg
push
inc
js
stos
sub
mov
sub
pop
push
jb
out
lods
adcl
push
mov
lods
mov
ret
jle
out
bound
push
out
dec
push
sahf
rol
fisubrl
imul
into
aas
ljmp
mov
std
mov
mov
or
sti
push
cmp
mov
xchg
test
sbb
lret
lcall
mov
sub
jp
mov
hlt
sub
ja
bound
push
jno
or
iret
in
cmp
push
inc
cltd
ds
fisttpll
inc
ja
rcr
pusha
mov
pop
push
lahf
loope
call
sbb
mov
orl
pushf
adc
push
dec
xor
sub
inc
cltd
icebp
dec
das
mov
add
test
adc
mov
sub
xchg
inc
mov
pop
cmpb
push
xchg
or
adc
inc
dec
sub
sub
movsl
mov
pop
inc
pop
adc
mov
or
push
mov
test
push
mov
sbb
repnz
push
xor
pushf
test
xchg
and
scas
insl
call
adc
or
hlt
mov
cmpsl
xor
std
nop
xchg
xchg
scas
push
push
or
push
or
push
leave
stos
push
test
stos
push
imul
push
or
push
leave
test
push
mov
push
dec
test
push
or
push
leave
test
test
test
imul
popa
push
sub
sti
inc
jp
movsb
das
jge
pop
fs
ds
push
jmp
mov
fiaddl
mov
push
cs
xlat
cmc
std
lret
xlat
pop
dec
dec
sbb
std
sbb
iret
add
lds
add
les
not
add
out
cmp
push
inc
shll
loop
or
out
push
add
inc
pushf
in
jb
in
inc
out
inc
outsb
dec
push
push
dec
pop
out
sub
jne
mov
and
ret
stc
cmp
cmc
mov
addb
add
mov
repnz
push
bound
es
or
mov
enter
lahf
cld
cmpl
jl
mov
or
xor
cmp
mov
nopl
out
mov
int3
fimuls
into
bnd
or
push
loope
lods
cmp
cmp
pop
push
pop
adc
xor
xor
insl
pop
out
cmp
and
pop
mov
xchg
sti
push
mov
pushl
jno
in
add
call
cs
mov
subb
popf
sbb
sub
int3
sti
mov
pusha
xor
or
xor
clc
ficomps
add
mov
jge
pop
daa
adc
aam
popl
hlt
adc
mov
add
gs
dec
fsub
loope
or
not
outsl
xor
sbb
ds
lods
pop
loop
jne
rorl
and
add
jns
mov
add
mov
in
mov
jo
int
addr16
pop
pop
or
clc
pop
xor
push
js
loop
mov
xchg
xor
xchg
sbb
popa
aam
psadbw
sbb
std
push
insb
inc
push
addb
iret
or
jl
adc
cmp
outsl
pop
add
lret
into
inc
aam
push
aam
cwtl
testb
push
dec
cmp
out
roll
cmp
dec
jecxz
or
cmp
out
jle
fdivrp
or
push
push
add
add
lret
sbbl
mov
or
loop
mov
bound
cmpsb
push
push
mov
jmp
mov
sbb
xor
iret
mov
mov
sub
cmp
xchg
jl
push
shrl
jge
repz
insl
dec
decl
ljmp
push
push
test
pop
push
inc
dec
sbbl
aam
testb
adc
outsb
mov
scas
das
bound
loopne
xor
pop
out
sub
push
fldenv
fstl
add
mov
add
or
dec
loope
pusha
and
notl
iret
iret
fs
jns
add
cltd
xor
mov
sbb
jbe
testb
pop
dec
cld
mov
xor
adc
cmp
sbb
js
mov
inc
cmp
insb
sub
adc
or
cmp
xor
inc
rcr
pushl
lcall
push
ja
xchg
mov
mov
jl
frstor
add
add
inc
add
test
add
add
add
cld
xor
adc
lahf
xor
xchg
pop
fcoms
push
pop
or
clc
adcl
popa
jns
add
mov
pop
pusha
loop
decl
jae
xchg
and
in
sbb
js
mov
imul
ret
repz
sbb
cmc
or
cs
icebp
dec
adc
popa
pop
xchg
mov
mov
add
mov
lahf
push
and
call
and
inc
sarb
mov
lock
jns
mov
addr16
adc
dec
leave
or
daa
fiadds
dec
sahf
jbe
loopne
cli
paddusb
stos
xorb
mov
sbb
and
loopne
mov
adc
rcl
pop
arpl
cmp
scas
shrl
mov
in
jmp
scas
cmc
ret
insb
ja
fistl
push
cmp
into
mul
push
mov
add
jno
int
mov
out
mov
out
mov
add
mov
pop
leave
mov
push
jmp
sahf
or
mov
cmp
xor
sub
mov
add
or
packuswb
ficompl
add
out
pop
sar
push
dec
fcmovbe
lea
adc
das
cmpsl
dec
inc
push
rcll
dec
rcll
hlt
lea
add
and
adc
scas
dec
mov
push
push
xchg
or
push
int
jno
sub
mov
xlat
shlb
mov
push
adc
insb
mov
sub
pop
stos
aad
jecxz
movsb
jb
fidivs
adc
adc
push
dec
sub
fsts
and
fimuls
mov
call
adc
xor
paddw
sub
adc
or
subb
push
dec
sub
roll
jp
mov
cmp
cmp
les
not
int
addl
cmp
mov
mov
shrb
sub
lea
in
sub
clc
in
sbb
jb
out
out
and
mov
orb
push
jno
loopne
aam
sub
aaa
xlat
and
loope
lcall
subl
lock
in
mov
jg
les
xor
dec
addl
popf
xchg
mov
addl
lds
dec
mul
mov
repnz
sahf
pop
xor
add
adc
push
adc
das
lcall
and
sub
adc
jge
aad
push
lret
cmc
loope
loop
add
movsl
pusha
bound
repz
sub
pop
cmp
js
insl
xchg
jb
xchg
enter
mov
add
sar
pop
stos
jae
mov
and
insb
sbb
daa
data16
movsb
xchg
cmpsb
and
inc
jl
xor
rcll
and
jecxz
lahf
push
in
or
outsl
repz
xor
pop
imul
xor
jns
pop
xchg
mov
rcr
inc
imul
outsl
movsb
push
mov
jp
xor
jb
jae
xlat
adc
je
or
jb
cmc
aas
das
pop
mov
mov
inc
cmp
out
out
pop
mov
sub
jecxz
out
cmp
lcall
push
stos
xor
cmpb
jnp
mov
add
cli
mov
pop
std
data16
push
mov
push
divl
push
pop
push
mov
mov
fwait
pop
loope
das
adc
cmp
jge
mov
inc
cmpsb
es
je
outsl
lods
dec
lods
pop
mov
mov
adc
jbe
fidivrl
test
adc
lods
fchs
stos
push
mov
pop
leave
add
aas
mull
xchg
pop
and
pushf
sbb
dec
ljmp
les
inc
scas
add
pop
or
inc
jmp
movsb
lds
sti
insb
push
int3
loop
pop
mov
jo
lcall
mov
xchg
ror
inc
jne
mov
fbld
lock
pop
xorl
jp
push
xor
cmpb
movsb
pop
movsb
sub
dec
jl
inc
add
mov
adc
js
add
shll
nop
fsubr
add
jp
inc
das
dec
out
shrl
and
pushf
inc
xchg
mov
and
pop
push
jecxz
lret
js
outsl
lret
push
jle
push
out
pop
je
out
fwait
cmc
imul
popl
xor
call
in
mov
pushf
ficompl
jecxz
out
xor
ret
dec
movsl
imul
dec
inc
and
or
adc
enter
stos
dec
inc
jge
ret
test
mov
cwtl
cmp
xor
mov
add
jmp
add
jl
call
mov
lcall
inc
or
sahf
ret
adc
or
push
aam
out
or
push
rol
dec
mov
pusha
and
lods
add
sahf
inc
and
rcr
jno
push
fwait
mov
mov
and
nop
mov
mov
or
out
and
sbb
test
mov
sahf
arpl
jmp
aam
push
xor
inc
arpl
les
or
mov
or
adc
sub
push
int
jns
push
jns
lea
fisttpl
stos
xlat
out
add
xor
out
test
cli
or
jecxz
add
popf
loop
jbe
pop
cwtl
sti
jp
jg
loopne
or
cmc
in
jns
inc
or
xchg
pop
out
or
cmp
jo
fs
and
jg
mov
push
stc
add
and
bound
mov
adc
insb
cmc
and
loopne
fisttpll
inc
enter
or
call
xchg
add
cli
xchg
xchg
bound
cli
movsl
icebp
mov
dec
add
test
negl
out
aas
push
lock
sar
xchg
and
mov
fimuls
sahf
mov
dec
pop
aaa
jne
aad
push
push
push
add
insl
push
lods
mov
stos
out
add
lcall
cld
xchg
insl
and
ja
jb
jae
repnz
int3
xor
cmp
into
inc
sbb
jp
jae
pop
push
cmp
inc
jnp
lahf
ret
mov
sub
mov
inc
std
pop
or
mov
subl
clc
dec
push
pop
sub
in
popl
das
dec
mov
add
xchg
and
xor
push
fiadds
arpl
js
insl
idiv
enter
jns
repz
imul
std
pop
mov
sbb
xor
pop
test
idivb
push
add
mov
push
cmp
iret
mov
je
fs
adc
mov
fldl
fistps
testl
test
rolb
or
outsl
je
sub
movsl
clc
pop
adcb
mov
and
lds
lods
bound
ljmp
ljmp
lahf
xchg
xchg
js
rorb
cmpsl
sbb
mov
cmp
movsb
push
or
insl
push
fnstenv
xor
or
mov
ljmp
mov
xchg
imul
mov
sub
shrl
jp
push
dec
xchg
add
push
test
sub
out
fldt
lea
push
ret
pusha
std
push
push
sbb
mov
fwait
data16
pop
adc
mov
es
inc
sub
nop
sahf
mov
inc
mov
push
jo
push
sub
adc
dec
sbbb
dec
cmp
test
xchg
rolb
fisubrl
testl
lret
add
inc
dec
lret
fstps
stos
imul
mov
sbb
and
xchg
sub
subps
pushf
lods
jmp
pop
push
push
push
insl
test
int3
pop
jno
shlb
jno
mov
xor
out
lret
xor
mov
not
sub
pop
sbb
push
mov
mov
add
sub
mov
mov
pop
push
fwait
into
add
xchg
adc
adc
pushw
cmp
cmp
cmp
mov
lods
pop
mov
mov
fidivs
cmp
imulb
push
inc
enter
test
sub
negb
xor
push
mov
rol
imul
imull
xor
call
xchg
jle
push
movsl
dec
lahf
jbe
inc
imul
add
mov
stos
fsub
xlat
mov
rcrb
dec
mov
pop
int3
push
cmovle
fdivrl
add
add
pop
test
push
pop
clc
test
enter
ljmp
mov
movsl
mov
jne
mov
push
sbb
push
push
mov
pop
or
ret
jg
push
aam
lahf
pop
cmp
jne
ds
clc
mov
out
add
dec
and
nop
int3
ficomps
push
push
inc
loopne
int
mov
aaa
jnp
mov
pop
ror
add
jecxz
pop
pop
mov
shlb
out
add
mov
or
mov
inc
daa
jecxz
jo
outsl
in
sahf
subb
mov
pop
movsl
in
add
mov
stos
cmp
xlat
mov
add
sbb
ja
mov
adc
add
das
ss
insl
mov
fucomip
push
push
xorb
sub
xor
negl
pop
inc
dec
jle
push
fildll
inc
inc
std
rorl
inc
outsl
mov
xlat
js
sbb
aas
sbb
sub
insl
out
dec
push
clc
adc
out
jmp
rcl
in
loop
test
es
enter
xchg
clc
jmp
cwtl
adc
cltd
out
repz
and
outsb
sub
std
add
ljmp
das
inc
les
xor
test
movsl
icebp
aaa
adc
mov
push
sahf
dec
pop
xlat
movsl
stc
sub
push
cld
jb
cmp
xchg
or
inc
xchg
repz
sub
sub
sub
js
test
xchg
pushf
cwtl
es
or
sbb
mov
inc
xchg
and
lahf
mov
mov
xchg
aaa
mov
jl
frstor
xchg
jge
inc
sub
jo
xchg
fcomps
adc
sub
rcrl
test
sbbl
int3
fiadds
mov
inc
faddp
int
adc
out
divb
mov
es
lahf
addl
jmp
mov
push
aas
xor
aas
sub
imul
out
lock
insertq
lods
ret
iret
cmc
mov
push
pusha
enter
fdivr
pop
dec
lods
sbb
or
or
cmc
subl
mov
scas
dec
loopne
jmp
out
sbb
movsl
adc
mov
sti
push
push
jle
aaa
shrb
jp
xor
lods
loopne
mov
and
inc
mov
test
dec
addr16
dec
iret
add
jle
or
cmp
popa
repnz
push
pop
popa
add
pop
push
outsl
dec
sub
inc
push
js
jne
jg
push
pop
or
xor
mov
push
cmpsl
int3
hlt
frstor
pop
push
shrb
inc
or
sbb
adc
sub
orb
mov
cwtl
subb
into
in
test
jo
insb
add
pop
in
push
shr
fimuls
insb
stos
cli
cwtl
icebp
cmp
and
out
jecxz
outsb
lock
mov
repz
push
subb
lea
lods
stos
aad
cmp
fcoml
jbe
les
insb
push
and
xadd
xchg
mov
repz
js
mov
ror
lods
lock
mov
pop
push
cs
push
cld
rcrb
jl
xor
mov
xchg
aam
sahf
insl
aam
sub
lods
mov
pop
cld
pushf
add
leave
add
addr16
or
das
lods
mov
xchg
out
adc
jo
mov
in
pop
sbb
outsb
push
jns
sub
pop
insb
jns
into
push
sub
in
xlat
sbb
inc
mov
in
or
pop
dec
cmpsl
mov
imul
ds
sub
test
dec
mov
stos
mov
dec
daa
cmp
push
ret
jmp
add
sbb
mov
add
pop
pop
push
adcl
add
popf
mov
lret
scas
stos
cmc
sub
insb
lret
mov
xor
mov
lods
test
inc
jnp
adc
out
jg
add
mov
sbb
lods
loope
mov
and
add
push
ds
cli
pop
pop
pop
cmpsl
add
imul
ja
xchg
mov
les
addb
xchg
fsub
loop
pop
rep
mov
stos
cmp
hlt
add
lret
add
shlb
rcl
adc
mov
insb
jo
fadds
pop
cmp
outsb
int3
filds
cmc
ret
mov
inc
aad
jle
mov
or
fcmovnbe
adc
pushf
jns
sti
mov
hlt
fistpll
adc
cs
imul
inc
dec
ret
jnp
xchg
clc
mov
push
inc
and
add
mov
cmp
cmp
outsl
ret
jne
mov
xchg
inc
stos
xor
adc
mov
lds
inc
pop
sub
and
in
out
push
and
enter
and
inc
cwtl
mov
mov
jo
aaa
lret
or
negl
push
repnz
xchg
dec
push
jnp
sub
mov
mov
adc
iret
pop
xchg
and
out
fisubrs
mov
lea
aaa
idivl
idiv
mov
sub
cmpsb
sbb
daa
add
adc
jge
sbb
or
test
lds
mov
mov
cmp
sub
pop
scas
push
xchg
jnp
out
sub
xchg
jge
adc
bswap
mov
sbb
repz
aas
push
orb
clc
out
mov
insb
cmp
mov
push
mov
jl
nop
ljmp
pop
jmp
pop
divl
adc
insl
call
in
insl
lret
enter
dec
fdivl
fwait
cmp
cmpsb
xor
mov
cmp
push
sub
mov
test
adc
pop
cli
add
out
pop
sbb
movsb
inc
cmp
xor
pushf
ds
cmp
xchg
push
inc
sub
fimuls
cld
fsts
sub
sub
mov
repz
xchg
xor
bound
stc
cmp
add
in
movsl
lahf
xchg
inc
fstps
pop
mov
and
cwtl
stc
repz
arpl
fadds
fdivr
mov
cwtl
ds
sbb
rol
pop
test
aam
negl
ret
xchg
or
mov
or
mov
test
ds
idivl
xorb
loopne
inc
insl
je
pusha
cltd
jmp
ds
jle
pusha
push
call
pop
add
fwait
inc
inc
jmp
js
ret
xor
lret
ficoms
mov
xor
jle
cmpsl
gs
sbb
push
mov
mov
add
xchg
mov
inc
shl
add
cs
daa
test
sub
jmp
insb
cwtl
das
fldl
ret
cmpsl
push
xlat
adc
sbb
cld
fst
je
mov
addr16
stos
into
mov
xchg
int3
outsl
in
xor
repz
pushf
xorl
jmp
mov
ror
adc
je
mov
sub
vpaddq
push
out
mov
testl
scas
sbb
loopne
adc
jmp
cld
lock
in
lahf
xchg
jns
jo
mov
leave
mov
jecxz
stos
add
xchg
sub
lods
jae
cwtl
mov
push
clc
std
fwait
jp
cli
and
xchg
bound
inc
pusha
in
inc
sarb
pop
stos
mov
mov
pop
daa
ret
shll
and
sbb
stc
jo
inc
fcmovu
loop
mov
hlt
stos
fcompl
inc
or
dec
pop
sub
or
mov
stos
and
sti
push
sbb
add
bound
cmp
mov
jle
neg
outsl
stos
icebp
add
pop
bound
sub
push
rol
push
js
sub
adc
mov
mov
or
es
push
push
rolb
mov
mov
jns
sti
xor
jge
jae
push
or
push
mov
insb
mov
outsb
jns
xchg
pop
mov
and
icebp
jecxz
add
shrd
insl
les
xor
movsl
loop
insl
bound
pushf
xchg
cmp
xor
add
cmpsb
inc
push
aad
imul
test
push
inc
jne
jnp
adcl
outsl
vmread
pop
dec
adc
push
lea
loopne
push
add
xor
rcrb
int
movsb
fwait
add
or
int3
mov
mov
repz
push
popa
add
in
add
int3
mov
mov
insl
adc
aam
dec
in
fdivl
push
cwtl
imul
sbb
add
sub
in
outsl
mov
stos
inc
cmpl
int
cld
sarb
mov
sub
ja
push
lds
jb
jno
add
popa
xor
xchg
mov
jne
outsl
mov
dec
jg
fs
xchg
sub
or
adc
pushf
icebp
icebp
push
lahf
sahf
lret
cmp
pop
lahf
cs
std
or
das
pop
ret
sub
xlat
out
mov
movsl
mov
xchg
mov
addr16
pop
faddl
mov
imul
pop
inc
lods
sbb
fucomip
inc
jo
mov
data16
cmp
adcb
fdivl
push
pushf
push
sbb
pop
adc
adc
out
fwait
inc
or
lret
dec
and
jl
sub
xchg
xor
es
ret
call
bound
lret
mov
subb
and
cli
imull
ds
daa
push
pop
jge
in
add
jl
pusha
push
into
lea
pusha
mov
jp
test
dec
iret
mov
out
mov
jo
fdivrs
addr16
xor
insl
and
and
ss
xchg
push
pop
lret
into
stc
movsl
aam
mov
ljmp
fs
mov
fisubs
fs
in
add
into
xchg
sub
mov
jmp
dec
ds
cmp
ret
push
outsb
sti
sbb
or
mov
outsl
adc
adc
sub
sbbb
xchg
add
jnp
scas
ficomps
ss
andb
inc
jno
cltd
fidivs
arpl
mov
push
mov
xor
jno
into
dec
inc
mov
sub
imul
adc
sbb
in
mov
xchg
add
pop
popa
push
xchg
mov
leave
je
pusha
push
and
aaa
stos
push
sub
sbb
jp
fldl
inc
aas
ljmp
xor
jo
lret
cmpsl
push
clc
test
loop
pusha
cmpsb
fnstsw
mov
push
xchg
push
push
dec
pop
jne
push
lds
sti
out
push
ds
sbb
mov
inc
out
daa
aaa
outsb
or
xchg
lcall
es
mov
outsb
js
mov
repnz
xor
bnd
mov
xchg
out
add
enter
inc
mov
negl
mov
leave
adc
rorb
es
lods
and
ret
mov
stos
lahf
jle
or
ret
pop
icebp
insb
push
outsl
push
cmp
inc
pop
jae
outsb
idivl
mov
xor
xchg
int
stc
xor
push
dec
popa
xor
in
insb
popa
dec
and
sbb
movsb
pusha
xor
nop
sub
pop
cmp
scas
imul
adc
mov
popf
adc
sub
mov
jb
lods
mov
sarl
call
roll
fdivl
mov
movsb
sub
sbb
jnp
xor
inc
cld
push
adc
mov
js
jb
adc
adc
adc
andl
or
gs
mov
lds
out
adc
repnz
ret
repz
ds
mov
es
outsb
xor
jecxz
mov
icebp
xor
dec
mov
xlat
xchg
jmp
pop
xor
and
std
hlt
stos
ds
sbb
pop
movsl
stc
ja
push
jae
adc
xor
pop
pop
lahf
out
repz
pop
aad
push
dec
clc
sbb
shll
push
push
fmull
dec
lahf
fistl
lods
pop
and
sti
std
inc
pop
mov
fnstsw
imul
cmp
mov
sub
rcll
xchg
mov
fs
das
cmp
movsl
mov
je
adc
xchg
cli
inc
vmwrite
in
sti
or
mov
inc
in
imul
sbb
jns
std
adc
cltd
call
clc
in
lock
push
inc
lock
int
jae
and
fldt
aad
jb
dec
or
mov
xchg
push
inc
and
xchg
pop
cmp
push
jae
jmp
mov
push
pop
pop
dec
or
jae
jns
jne
mov
add
xorl
call
jge
pop
jo
pop
fdiv
cmp
sbb
mov
dec
stc
cmp
pop
inc
sar
xor
ds
icebp
js
stc
bound
pop
fldt
jns
cmp
xchg
stos
cmp
jecxz
cli
pop
push
mov
aam
mov
push
scas
cltd
jmp
je
push
xchg
mov
lock
movntq
pop
ljmp
icebp
cmp
jne
sub
shrb
pop
std
popa
in
or
popa
add
nopl
loopne
dec
jmp
sar
out
in
inc
xor
rorb
or
mov
sub
fistl
fwait
push
xchg
lods
add
aad
add
mov
shlb
jns
xchg
mov
loope
or
sub
sbb
out
jl
pop
jno
rcrl
mov
shlb
pop
cwtl
loope
and
inc
lret
in
cmp
push
iret
ret
movhps
push
push
jl
es
dec
nop
lret
cwtl
xchg
sub
mov
mov
rorl
jg
cmc
ljmp
pop
cli
repz
in
shrl
mov
insb
jmp
in
sbb
mov
mov
sub
mov
fdivl
xchg
pop
stos
cmp
sti
int3
mov
aad
icebp
cmpsl
add
pop
or
pop
cmp
jne
xor
sub
inc
in
call
xor
fsub
sbbl
out
ret
lds
pop
into
adc
sti
jo
xor
adc
adc
in
shlb
xor
sbb
adc
sub
xchg
insl
and
cmp
fs
aas
add
jb
pop
sub
stos
add
xchg
adc
inc
and
jae
mov
push
insl
out
xor
jae
rclb
mov
testl
inc
xchg
sub
rcrb
push
xchg
fistps
sub
repz
imul
xchg
cmp
int
jnp
add
mov
mov
cmp
cmp
sub
mov
je
dec
ret
mov
pop
dec
dec
mov
sti
dec
data16
fwait
dec
stos
adc
jae
xor
mov
jl
test
nop
adc
mov
xchg
arpl
je
ja
rol
ret
push
filds
push
xchg
xor
xchg
jp
sub
ret
or
or
add
push
or
icebp
out
stos
das
xchg
lret
data16
stos
jb
mov
mov
sbb
jnp
and
fstpt
arpl
sub
cmp
mov
mov
pop
fcmovu
daa
push
leave
mov
sub
roll
std
xchg
pop
adc
jb
outsb
sub
ret
icebp
aaa
aas
xor
xor
and
add
fildll
lret
xchg
push
ret
gs
mulb
fwait
mov
pop
inc
int3
sahf
sub
ret
popa
adc
lret
mov
jae
mov
inc
push
insb
push
aas
lds
fst
fs
shrb
iret
fiadds
cmp
mov
pop
daa
mov
fwait
mov
je
cmp
jl
fiadds
dec
or
dec
jge
xchg
xor
outsb
cld
fs
push
paddq
mov
mov
sahf
add
xchg
cld
push
sbb
cmc
sub
mov
or
aam
insl
fldl
enter
testl
lret
ret
imul
stc
or
and
mov
mov
mov
adc
outsl
int
fcmovnb
les
pop
cmp
jp
movsb
sub
cli
inc
lock
jbe
or
ds
stos
iret
mov
aam
dec
icebp
inc
mov
fcom
mov
pop
pop
cmp
fnstsw
aaa
pop
dec
ja
andl
inc
inc
bound
pop
shrl
push
xchg
popf
or
lods
inc
mov
pop
cld
lods
ret
stos
xchg
adc
popa
inc
xor
cmpsb
int3
pop
push
push
sbb
rcl
mov
call
jo
pop
sti
xor
add
xor
stos
lds
pop
jl,pn
rcr
dec
or
sub
cmp
mov
pusha
pop
hlt
sbb
andl
lods
loopne
jo
jns
mov
jb
leave
push
xlat
clc
aaa
jo
dec
ret
push
test
or
pop
pop
std
out
dec
sbb
cli
leave
fucom
faddl
inc
leave
daa
inc
jmp
mov
shlb
mov
adc
popa
push
and
push
sub
imulb
pop
stc
femms
lahf
xchg
mov
out
sahf
sub
jnp
xor
sub
out
jnp
push
rsm
adc
xchg
dec
sub
pop
inc
add
dec
mov
sahf
scas
rep
jp
divl
gs
inc
nop
jmp
in
jnp
js
mov
stos
mov
inc
add
mov
mov
sbbl
adc
scas
mov
or
lret
dec
inc
ds
lea
xchg
dec
sbb
fsub
das
jns
inc
aas
roll
push
out
push
ret
pusha
arpl
mov
and
roll
addb
xchg
push
jo
adc
xchg
imull
push
ljmp
pop
outsb
ss
popf
mov
and
or
and
test
mov
and
in
mov
pop
cld
jb
cmpsb
jae
jns
mov
aam
jp
leave
sbb
sbb
mov
mov
cmp
push
incb
shll
inc
push
sahf
add
cmp
icebp
in
cmc
lcall
arpl
cld
dec
fbstp
notl
add
mov
lcall
push
dec
xchg
inc
mov
mov
adc
shrb
shl
insl
loop
jl
xchg
push
mov
out
es
in
stos
test
push
mov
jo
mov
mov
add
arpl
jg
sahf
or
cmpsb
add
pop
xchg
pop
mov
pusha
bound
loopne
ret
jne
js
in
repz
iret
icebp
mov
sbb
shrb
push
jbe
pop
inc
pop
gs
pop
aaa
loopne
repz
test
mov
sbb
mov
or
leave
mov
and
mov
add
fstpl
sarl
push
icebp
sub
xor
frstor
mov
lret
cmp
or
stos
std
stc
stos
pop
pop
fidivrl
int3
pop
add
dec
in
ja
lds
inc
scas
cld
mov
inc
cmp
xchg
popf
sbb
outsl
add
jge
stos
inc
pop
lods
mov
fisubrl
or
dec
lahf
jmp
xchg
mov
bound
movsl
dec
stos
add
mov
jmp
aaa
aad
mov
sub
ss
arpl
setne
test
ljmpw
iret
or
or
add
adc
mov
jne
movsb
out
rcll
add
and
pushf
cmp
jo
push
pop
imul
xor
add
jns
push
jmp
dec
push
in
fisttpl
inc
subps
repnz
loope
int3
sbb
pop
push
jbe
leave
cld
push
je
xor
mov
imull
out
jecxz
and
xchg
mov
pop
sbb
push
adc
push
movsl
adc
js
stos
xor
push
mov
mov
leave
jb
mov
cmp
dec
js
in
cltd
adc
jne
mov
bound
ds
icebp
jae
gs
stc
arpl
pushf
jle
dec
lcall
dec
sub
cmpsl
loope
shr
lods
lahf
push
div
or
sub
inc
outsb
jne
dec
jbe
or
sahf
das
add
clc
push
push
push
stos
add
add
bound
outsb
adc
cvttps2pi
lods
inc
icebp
ret
std
loope
or
add
push
add
scas
aad
std
pop
jo
lock
cmpsl
cs
outsl
test
or
push
pop
in
mov
lahf
mov
adc
push
sub
popa
add
add
out
and
inc
add
xchg
sbb
pop
mov
and
xchg
ret
pop
mov
leave
lahf
loop
xlat
mov
inc
stos
mov
mov
js
in
cwtl
gs
xchg
dec
dec
dec
mov
jle
inc
nop
or
lds
pop
and
sub
movsb
dec
gs
sub
fdivrl
aas
mov
shrb
testl
cs
fsubs
xor
jno
fwait
mov
ficoms
add
fwait
sahf
or
pop
xchg
jb
aas
xchg
imul
or
mov
aaa
push
lret
rcrl
out
push
imul
lock
or
bound
lcall
mov
stc
pusha
cld
push
leave
pop
add
cmp
cmpsl
or
call
dec
lods
addr16
pop
scas
sbbl
insl
lods
xabort
out
dec
js
pop
add
mov
gs
in
mov
shl
fwait
rclb
adc
mov
std
shll
mov
insl
pop
mov
shl
or
jns
filds
rorb
xor
sbb
jmp
outsb
xchg
push
test
mov
lods
stos
ljmp
xor
shrb
adc
lret
std
sub
lods
sub
push
adc
sbb
push
sub
push
inc
jmp
xor
xlat
movsl
les
repz
xlat
mov
out
jl
inc
mov
push
inc
mov
pop
bound
incb
je
mov
xchg
lds
mov
jecxz
rorb
stos
repnz
int
sbb
jp
sub
push
in
lret
jbe
mov
rcll
rolb
andl
dec
sub
enter
test
mov
add
push
insb
std
xlat
out
sbb
pop
pop
ja
out
mov
test
mov
rorb
movsl
pop
out
xor
pop
mov
aam
lret
fsubrl
das
out
dec
xchg
in
fimuls
adc
or
in
pushf
mov
dec
pop
lret
inc
fiaddl
pop
hlt
inc
popf
ljmp
add
add
adc
pop
sti
xchg
aam
dec
jge
dec
fstpt
in
add
mov
xor
lcall
aad
add
jns
out
into
aas
cld
lret
imul
sar
sub
shll
mov
xor
clc
sahf
mov
jns
or
mov
mov
cmc
xor
jl
ja
inc
xchg
or
mov
xchg
inc
sub
ja
cmc
lock
pop
pop
xor
mov
lock
push
in
iret
outsb
or
enter
in
fsubrs
sti
scas
repnz
fucomp
hlt
scas
sub
outsl
out
jge
inc
jmp
repz
outsl
mov
repz
jp
jmp
push
cmc
nop
jo
test
cld
jne
jmp
pop
loope
out
outsl
and
add
fs
pop
push
pusha
push
aas
mov
movsb
sarb
dec
daa
orl
insb
outsb
sub
subb
jb
inc
jns
jb
lock
pop
adc
jae
jmp
xorb
push
clc
loopne
ret
inc
and
or
fistps
out
push
sbb
add
mov
cmp
mov
dec
fbld
nop
mov
jbe
mov
mov
cli
out
outsl
out
mov
sbb
ret
addr16
ror
jl
dec
ret
mov
test
imul
ret
dec
dec
popf
inc
outsb
xchg
das
push
shlb
outsl
add
jo
cmpsl
pop
mov
jo
or
jge
icebp
dec
xchg
pop
pop
jb
je
dec
add
pop
mov
lcall
add
fistpll
repz
jnp
rcr
inc
push
sub
fs
push
mov
mov
pop
cli
fildl
inc
mov
enter
imul
or
inc
lods
ret
push
pop
fwait
arpl
add
dec
cmp
sub
loope
movsl
jle
xor
les
daa
jb
dec
jae
pop
mov
mov
push
outsb
cmp
push
jae
into
inc
iret
cwtl
addl
jno
jle
divb
outsl
cmp
mov
jle
mov
lock
dec
into
sub
cmp
pop
shrl
mov
mov
into
xchg
and
jae
jecxz
mov
mov
add
mov
test
jno
cmp
pop
std
xchg
sbb
shrl
jno
push
mov
aam
cmc
idivb
addr16
pushf
push
aam
or
mov
xor
ljmp
lock
cmp
lock
loope
sbb
xor
mov
cmp
int3
cmpl
sbb
jne
loopne
adc
pop
repnz
sub
xchg
add
daa
cmpl
aas
cmc
push
lock
imull
mov
dec
mov
xlat
test
xlat
imul
faddl
pop
bound
adc
je
push
lea
add
pop
aad
shrb
aaa
jb
jecxz
icebp
xchg
sub
adc
fldl
scas
xchg
js
or
fiaddl
sbb
pop
in
rcrb
insb
hlt
sbb
adc
adc
inc
cld
adc
sbb
sbb
mov
cmp
adc
ficoms
dec
aam
rcrl
cmpsb
xlat
jns
pop
sbb
and
outsb
push
sbb
and
aam
int3
cmpb
or
sbb
cmpsl
jb
movsb
outsl
xchg
mov
adc
xchg
addr16
adc
jns
xchg
imul
push
push
jbe
sbb
loope
mov
cld
into
mov
sbb
jecxz
outsl
xor
pop
fidivrs
test
bswap
push
add
bnd
fcmovu
pop
rolb
insl
push
callw
sti
push
pop
aaa
lahf
fldl
stos
mov
and
xchg
sub
in
in
mov
or
orl
iret
std
add
movsl
repnz
sub
loope
mov
lretw
lods
add
pusha
add
fists
add
mov
shlb
nop
jne
lods
sbb
loope
pop
jle
stos
lret
ja
lahf
mov
sahf
popf
adc
addr16
out
or
dec
jb
in
shll
mov
mov
mov
int3
repnz
sub
cmp
pop
out
sbb
cmpsl
repnz
clc
aad
enter
jp
mov
int
sarb
pop
loope
adcb
push
test
jno
imul
notb
inc
jno
icebp
mov
mov
pop
adc
sbb
fcmovnbe
push
icebp
aad
cltd
xor
rol
mov
adc
xchg
loope
mov
test
jp
push
into
sub
push
jg
loop
push
mov
scas
or
out
inc
dec
pop
mov
mov
lods
fistpll
add
mov
sarl
jbe
sbb
inc
loopne
jb
add
inc
sbb
prefetchwt1
inc
pop
imul
leave
jecxz
xchg
pop
outsl
xchg
jo
lcall
in
mov
lock
fisubrl
ss
dec
enter
enter
xchg
in
pop
test
cli
dec
mov
call
hlt
xor
fsubp
imul
jecxz
jno
aas
popf
pop
sub
dec
dec
inc
mov
sub
mov
aad
imul
fdivs
push
addb
aad
stos
lea
mov
push
outsl
subb
or
sub
rol
les
mov
ret
out
pop
or
dec
in
jle
and
sub
jge
pop
stos
sahf
repz
je
movsb
stos
test
mov
out
push
sub
lret
sti
in
push
mov
into
in
pop
ret
cmpsb
data16
mov
fisttpll
mov
sub
xchg
daa
mov
int3
mov
sti
jle
ss
xor
jecxz
cmpsl
aas
int3
daa
lahf
add
test
pop
filds
pop
jmp
jne
pushf
scas
cmp
mov
stos
test
or
in
popf
sti
rcrb
das
mov
mov
add
cld
lods
mov
iret
inc
jge
xor
fidivl
sbb
mov
xor
sbb
aam
jbe
js
ret
dec
dec
pop
aas
pop
fwait
hlt
ds
pop
mov
lods
incb
mov
dec
jg
push
sbb
adc
insb
inc
push
addr16
inc
mov
push
dec
xchg
fisubs
call
jecxz
jno
lcall
sub
scas
adc
add
sarl
punpckhbw
test
popf
mov
pop
dec
cli
add
dec
add
mov
mov
int3
pop
lods
xchg
mov
sbb
adcb
cli
into
jmp
sbb
test
or
in
cmp
and
mov
mull
jae
js
cmc
pop
test
xlat
fldenv
mov
lahf
or
enter
sub
or
cmp
lock
fwait
into
sti
dec
sub
popa
push
in
sub
inc
sbb
icebp
cmp
lds
cmpsl
aas
neg
xchg
pop
xchg
fs
fildll
push
add
cs
je
lods
test
dec
jbe
adcb
push
clc
lods
fisubrs
or
push
xor
lret
movsl
and
cmp
push
fildl
lds
xor
cmpsb
not
outsl
les
mov
sub
in
add
mov
and
sub
sbb
scas
loopne
adc
pop
jecxz
mov
push
adc
sti
pop
lock
stos
mov
dec
xrelease
hlt
pop
cmc
sbb
push
cmp
arpl
dec
lea
in
adc
push
pop
adc
push
cmp
sbb
and
push
pop
sbb
ja
sub
enter
push
mov
outsl
xor
cmpsl
mov
mov
jg
dec
scas
rcl
loop
pop
pusha
hlt
jae
es
mov
cld
jl
nop
sub
jle
shll
std
out
sbb
or
and
jmp
test
cmpsl
xchg
test
call
and
push
and
ja
daa
cmp
push
pop
lret
jb
arpl
xlat
mov
sub
sbb
push
jns
int
or
mov
mov
mov
ret
out
shll
inc
repz
jle
outsl
rorb
jmp
clc
movsl
cmp
cmc
out
sbb
mov
inc
adc
loop
aam
mov
out
lods
push
xor
pop
clc
push
rorb
inc
xchg
pop
add
mov
in
pop
lock
dec
pop
push
fs
mov
loopne
out
jo
popa
push
inc
dec
cli
push
cmpsl
leave
mov
aad
out
mov
sti
das
imul
ret
mov
or
inc
mulb
inc
sti
mov
leave
inc
outsl
xchg
jp
shl
pop
inc
in
shrb
cmp
stos
jae
das
rclb
stos
mov
pushf
call
lods
jle
sub
jl
mov
lods
add
mov
ror
add
iret
outsb
jne
push
jge
les
xchg
cld
mulb
jl
add
test
pop
movsl
pop
mov
or
mov
outsb
pop
mov
jbe
ljmp
outsl
add
rol
scas
mov
cltd
add
scas
adc
addr16
negl
scas
leave
insl
not
out
mov
icebp
andb
sbb
push
dec
or
push
jg
mov
ret
pop
call
adc
sub
out
xchg
push
jecxz
mov
lods
lock
les
xor
aas
xor
iret
xchg
es
mov
mov
ja
xchg
movsb
jl
or
ds
pop
xchg
mov
push
imul
jnp
mov
jmp
sbb
push
sbbl
clc
ret
jecxz
ds
stos
push
or
loop
push
rolb
xchg
mov
add
push
pop
and
cmp
loop
mov
xchg
mov
les
mov
fs
mov
int
ficompl
mov
jl
xchg
ds
stc
popf
loop
out
cli
jbe
les
and
pop
add
sub
aas
hlt
cmp
cltd
push
outsb
fcompp
iret
jne
aas
aam
mov
jge
adc
fcompl
vcvtpd2psx
ja
sub
lods
sub
add
or
jecxz
sti
aam
sbb
mov
fcompl
aad
adc
daa
xchg
ss
insl
ljmp
int
adc
je
mov
jmp
ret
cmc
cmp
in
in
filds
dec
pop
mov
cmc
repz
incb
les
add
dec
mov
fsubl
cmpsl
mov
mov
pop
shrb
inc
and
push
test
lret
ret
sub
shr
push
jb
cmpsl
pop
cwtl
mov
outsl
imul
loopne
adc
test
aam
jae
mov
fwait
pop
aas
xchg
nop
leave
mov
mov
lahf
imul
mov
dec
pusha
jl
scas
aam
sub
cmp
fisubrs
in
xor
in
sub
push
js,pt
mov
stos
sub
std
test
lods
icebp
cs
push
nop
adc
nop
iret
push
dec
mov
andb
jne
scas
mov
out
jle
add
mov
adc
xchg
ret
das
add
xchg
movsl
out
jns
xor
lds
je
mov
push
inc
stc
adc
mov
or
dec
inc
bound
or
cmp
lods
push
push
sbb
fld
xchg
jp
shlb
dec
push
pop
movsb
sub
mov
ja
testl
roll
aaa
push
decb
loop
add
add
in
pop
std
inc
aad
jp
mov
jmp
je
mov
inc
aas
mov
ficoml
mov
testb
push
xchg
js
pop
cli
cs
xlat
xchg
jne
sub
fldl
or
fiaddl
cli
jle
dec
daa
pop
test
inc
xor
dec
ror
adc
pop
lcall
imulb
jl
xchg
pop
sbb
mov
jmp
scas
and
movsb
pop
stos
int3
rol
iret
push
xchg
push
jle
lea
add
or
jae
push
sub
inc
pop
add
stos
out
test
sti
ucomiss
lret
mov
cs
test
pop
stos
xlat
in
push
frstor
aad
movsb
pop
inc
mov
ret
mov
cmp
and
adc
int3
test
sbb
sub
push
dec
mov
jmp
incl
push
fsubr
mov
adc
adc
pop
or
pop
bound
jmp
aam
ss
pop
es
xor
mov
fnstenv
xlat
clc
pop
jae
testl
ja
in
mov
fsubp
xchg
mov
in
mov
mov
insb
insl
add
mov
cmc
cltd
push
adc
into
je
gs
mov
outsb
lret
pop
xchg
cmp
cmpsl
mov
xchg
js
outsl
mov
add
cli
xlat
bound
andl
push
mov
jae
aas
or
adc
pop
cmp
cmp
test
jge
int3
imul
mov
imul
into
icebp
xchg
pop
jnp
sub
sub
fidivrl
mov
xor
push
jns
stos
subb
lods
bound
lock
fisttpll
jg
cltd
dec
gs
mov
cmpsb
fst
push
pop
push
jle
cmp
jne
mov
insb
xor
mov
jo
subl
mov
enter
fxam
mov
std
insb
in
sub
mov
scas
cmpb
mov
push
js
iret
push
dec
pop
adc
pushf
popf
pop
jb
mov
xor
or
das
mov
jae
mov
lret
mov
jl
and
inc
push
pop
mov
repz
scas
mov
pop
push
arpl
mov
fcomps
mov
iret
mov
leave
xor
and
pop
inc
jno
gs
out
add
pop
in
pop
push
adc
mov
loope
ljmp
sub
gs
pop
sbb
pop
cmpsb
ss
pop
clc
mov
adc
daa
outsl
lods
lret
mov
mov
jno
add
cmp
fbld
test
xchg
mov
mov
das
push
es
sub
mov
loope
outsl
cli
je
dec
movsb
xchg
pop
jmp
repnz
js
mov
and
add
lret
mov
je
dec
sbb
push
imul
jl
sbb
adc
sub
mov
mov
mov
cmp
aad
add
cmp
mov
sti
adc
dec
clc
adcl
cmp
mov
shlb
pop
in
cmpl
cltd
push
or
cmp
jns
loope
mov
mov
je
iret
jmp
loop
jl
lods
jmp
mov
test
stc
pop
out
dec
lods
arpl
mov
jb
hlt
cld
shr
mov
in
sub
outsb
jnp
sti
jp
pop
mov
push
ficompl
lods
push
lods
dec
or
sti
or
push
mov
ds
loop
cmc
xor
mov
inc
pop
mov
add
lahf
push
subl
jp
out
sbb
ret
mov
icebp
cmpsb
jp
scas
and
jg
push
hlt
lods
imul
es
jb
jg
pop
scas
xchg
pop
adc
test
mov
js
iret
mov
int3
fsubl
ss
dec
nop
mov
or
lods
pushw
call
insb
int3
cs
jbe
movsl
push
out
aad
jno
mov
loop
mov
je
pop
xchg
das
jle
lahf
sbb
out
mov
mov
pop
push
cmc
stc
sbb
fdivrs
mov
push
jnp
mov
jp
jmp
cld
cmp
xchg
mov
leave
loope
dec
mov
loope
mov
das
pop
icebp
and
sub
push
pop
shlb
mov
pop
dec
fcoms
test
pop
in
sbb
add
je
iret
sub
and
and
stos
loopne
mov
shll
and
es
out
in
xchg
add
movsl
and
repz
xchg
dec
nop
fs
push
lahf
or
sbb
ja
inc
mov
xor
out
iret
mov
cltd
lea
nop
and
sub
push
cmp
inc
cmp
int
mov
idivl
pop
or
xchg
popf
add
sbb
cwtl
stos
mov
lea
or
push
sub
pop
ss
jo
sub
repz
movsb
mov
insl
pop
or
fcomps
mov
mov
xchg
cltd
ja
and
in
imul
jo
inc
rcl
add
xor
cmpsl
push
mov
push
loopne
mov
mov
lods
mov
jns
xchg
cmp
cmp
pop
and
dec
pop
sbb
jge
enter
mov
and
mov
call
push
inc
into
cmc
lods
pop
add
out
jae
stc
ja
lods
or
cli
rolb
insl
pop
cmp
add
mov
fs
fsubrs
into
push
popf
stos
jno
xor
pop
sub
out
sub
push
mov
add
ljmp
sub
sbb
sbb
outsb
je
xlat
jp
pop
fcoml
fcmove
xlat
push
push
lahf
jo
push
mov
push
mov
xor
in
imul
mov
or
or
lds
and
or
mov
mov
pushf
scas
adc
popw
icebp
push
ja
xchg
sbb
cmp
adc
jge
and
arpl
bnd
mov
push
mov
jl
pop
in
mov
xchg
mov
out
mov
and
dec
scas
xor
aaa
adc
and
xorb
mov
push
pop
inc
stc
mov
and
outsl
dec
xchg
mov
or
xchg
xchg
pop
aad
mov
sbbb
fsts
jbe
jl
cmpsl
pop
jmp
test
lea
jle
add
mov
leave
mov
jbe
rorl
or
xchg
xlat
mov
in
mov
shll
inc
cmpl
insl
popa
pushf
mov
js
pop
mov
icebp
hlt
push
xor
and
add
pop
or
aas
in
pop
test
in
sub
sbb
add
mov
je
mov
leave
js
mov
mov
ja
jnp
pusha
test
lcall
cmpsb
or
hlt
imul
call
jns
jne
xchg
mov
jge
into
lods
sbb
xor
shll
mov
imul
cmp
jbe
lret
outsl
and
sbb
enter
cli
int3
enter
cmp
adcb
mov
gs
out
push
sub
std
mov
jl
fs
cmp
mov
repz
lret
stos
aam
or
push
in
scas
inc
lock
push
aad
ficoms
push
bound
xchg
imul
loope
cwtl
enter
push
sub
pushl
enter
pop
xor
push
movsb
adc
shrl
xor
std
jnp
out
or
mov
or
movsl
mov
iret
cld
sti
sarb
bound
lock
inc
inc
cmp
imul
out
dec
push
mov
pop
push
mov
and
sbb
cmp
sbb
push
out
mov
test
aas
ror
mov
leave
fidivl
or
cmp
arpl
inc
ds
adc
ror
fwait
movsl
fnstenv
or
cmpsb
jo
cmp
cli
mov
add
fs
lahf
inc
and
std
jp
xchg
int
lds
loopne
in
mov
pushf
sub
movsb
in
out
xchg
jo
sbb
notb
test
jno
mov
pushf
je
sysret
xchg
cmp
xchg
sbb
adc
inc
xchg
xchg
mov
inc
dec
sub
dec
mov
and
jmp
mov
pop
xchg
pop
js
mov
cmpsl
sub
out
xchg
dec
mov
out
lahf
shlb
jb
inc
inc
stos
cmpsl
test
das
nop
jmp
jp
dec
mov
call
jmp
cmc
test
pushf
pop
inc
cs
outsl
stos
or
notb
icebp
ret
shll
or
xchg
arpl
icebp
add
mov
enter
pop
scas
cld
fcoml
mov
push
lods
sahf
or
xchg
mov
orl
jne
jo
das
divl
and
fs
mov
xor
mov
test
cmpb
inc
or
fiaddl
js
clc
and
call
xor
inc
and
into
push
add
enter
test
imul
mov
testl
shll
add
add
lds
lea
sbb
pop
adc
mov
pop
fldt
int
cmp
imul
adc
and
mov
icebp
mov
imul
inc
lea
jg
icebp
loopne
dec
xchg
pop
push
aaa
jb
cltd
push
or
sbb
xchg
iret
adc
mov
mov
out
std
mov
mov
dec
stc
adc
mov
movsl
xchg
mov
insl
movsl
mov
pop
xor
imul
imul
popa
rorb
jl
cmpb
mov
out
dec
push
mov
mov
sbb
sub
mov
add
pop
outsl
ds
aad
stos
add
mov
xlat
or
xchg
inc
daa
inc
push
dec
not
xor
cld
scas
in
or
pop
sbb
mov
lret
jbe
lahf
sub
push
lcall
push
orl
adc
sarb
cmp
adc
and
push
lea
jns
jmp
std
xor
push
paddd
cltd
sub
cmpsl
stos
jbe
and
mov
jnp
push
int3
imul
xorl
out
jnp
lods
pop
sub
push
sti
pop
sti
rcrb
pop
adc
mov
pushf
push
dec
ja
repz
pop
cmpsl
xor
xchg
fbld
insb
outsb
sbb
fs
shl
inc
jno
mov
jle
pop
mov
testl
notl
push
rorl
pop
inc
or
dec
xor
adc
mov
push
inc
and
pop
call
and
imul
xor
shlb
pop
mov
jmp
adc
in
cli
xchg
mov
lret
mov
adc
insb
sbb
jae
je
mov
add
sub
push
jbe
pop
stos
sbb
adcb
int
xchg
lret
dec
jno
adc
mov
loopne
mov
lret
insb
push
loop
aam
not
sub
scas
ss
jmp
ds
jecxz
movsb
push
xchg
dec
sbbl
loope
xchg
jmp
repz
pop
les
mov
adc
aam
lea
xchg
jp
push
xchg
movsb
cltd
out
fwait
lret
sarl
in
out
adc
clc
lcall
stc
shl
jl
fsubp
into
xor
mov
cli
push
or
adc
mov
mov
adc
mov
or
daa
dec
inc
mov
mov
mov
mov
fidivs
jnp
add
lods
xchg
lcallw
xlat
cltd
insl
fnstcw
fdivs
mov
out
cs
scas
inc
in
arpl
call
and
rcrl
repnz
and
outsl
cwtl
outsb
test
push
nop
pop
pop
movd
add
fstl
stc
int
out
pop
pop
mov
ljmp
cmpsb
mov
jbe
insl
dec
push
lock
dec
les
mov
jecxz
enter
pop
out
jecxz
pop
push
pop
jmp
jmp
fisttpl
mov
aad
ficomps
icebp
mov
dec
iret
inc
jmp
pop
jns
stc
ljmp
cltd
shlb
dec
push
int
or
jne
xchg
dec
jae
push
into
scas
mov
sub
loopne
push
cmc
pop
js
push
js
scas
inc
push
inc
fistps
repnz
fimuls
aad
lahf
push
icebp
pop
outsl
jns
push
mov
sbb
loopne
xchg
gs
sub
and
dec
dec
sbb
loopne
inc
scas
or
sarb
adc
outsb
or
outsb
stos
xchg
cmp
addl
fsub
push
and
and
insb
mov
std
repnz
sub
jp
loope
iret
mov
mov
sub
xchg
add
cs
and
mov
xor
jnp
out
loop
aad
mov
sbb
mov
inc
loope
pop
cmp
xchg
jne
lea
clc
leave
fldt
pop
ss
clts
add
lcall
mov
pop
in
mov
inc
out
out
pop
psubw
inc
and
lret
icebp
mov
icebp
mov
pushf
xchg
mov
daa
mov
sbb
jg
cld
cmp
div
jge
push
jge
xchg
incb
dec
xchg
cmpsl
add
cs
int
mov
mov
into
or
cmp
es
lods
pushf
lods
jl
pop
dec
pop
aas
mov
sbb
cld
icebp
mov
fbld
push
jge
dec
movsb
fdivrl
int
sub
push
dec
test
push
cmp
mov
movsb
adc
aad
lea
cli
push
imul
dec
in
addr16
push
lock
pop
xchg
out
pop
mov
xorl
divl
es
icebp
cmpsl
push
fwait
dec
push
lods
movsb
jmp
fwait
mov
icebp
ret
std
rcrb
mov
call
cli
rorb
push
xor
mov
and
shll
pop
aas
call
addr16
xchg
push
loop
xor
fs
cld
inc
fidivrs
inc
lret
inc
stos
pop
and
lea
jo
mov
cltd
fs
and
test
aam
shl
xor
push
mov
bound
inc
sbb
xor
lods
pop
movsl
mov
jo
add
daa
into
xchg
cld
add
mov
rcrl
sub
pop
push
push
fistps
aam
cmp
sbb
roll
bound
arpl
loopne
fisubs
jno
pop
jmp
leave
cli
les
int
loope
clc
inc
sub
dec
xlat
push
fadds
pop
test
xlat
subl
dec
ror
and
sbb
pop
add
xchg
popl
fadds
out
pop
pop
repz
xchg
xchg
fists
stos
stos
inc
push
mov
mov
std
and
pop
dec
mov
jno
dec
xlat
ljmp
sub
sub
jmp
fists
push
mov
dec
popa
sbb
shll
popa
fmuls
cmc
stc
or
outsl
jnp
fistpl
sub
fidivrs
lods
movsl
inc
cltd
leave
sbb
and
incb
ds
in
cmpb
in
imul
out
xchg
pop
and
outsb
adc
mov
cmp
xor
ficoms
cmp
loop
push
movsl
mov
or
jecxz
pop
sahf
cmp
push
movsl
xchg
xchg
push
add
jge
mov
mul
mov
icebp
les
dec
sarb
mov
pusha
fdivrl
stos
sti
in
js
inc
adc
xchg
mov
aas
cwtl
push
cli
push
inc
cmp
ljmp
clc
jge
clc
test
repnz
xchg
cmp
and
inc
lret
push
ret
xchg
adc
ret
rclb
cmpsb
inc
or
ficompl
cmpsl
push
mov
xor
mov
push
mov
outsl
mov
sub
sbb
xchg
in
sbb
xchg
je
ds
js
fimull
cwtl
fsubs
test
aam
pop
test
mov
or
fldl
int
jbe
sub
fmul
sub
sub
scas
ficoml
sbbl
into
scas
test
push
xchg
sbb
push
stc
lret
add
xor
div
out
cmp
iret
mov
loope
pop
out
jecxz
test
add
ds
jne
push
lret
xchg
test
hlt
xor
lods
imul
add
pop
rolb
sar
sub
sti
daa
mov
loop
push
mov
mov
insb
test
fisubrs
jb
mov
jbe
jnp
adc
loop
lret
cltd
mov
orb
push
jne
sub
lods
sarb
jae
mov
cmpsl
pop
stos
mov
out
mov
scas
pushl
shl
dec
or
push
push
jnp
popf
xor
scas
push
cmp
cmp
adc
sbb
addr16
nop
insl
dec
rcrb
stos
ja
jge
loope
xlat
lret
sbb
jo
jle
sbb
addl
cmc
pop
jmp
imul
mov
sarb
pushl
lahf
cmp
xchg
or
or
pop
mov
outsb
loop
movsl
ljmp
idivb
lock
jnp
push
call
stos
loop
push
sbb
xchg
add
add
add
add
in
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
jbe
add
add
add
jnp
fbld
nop
cmp
mov
rolb
bound
mov
mov
cltd
pop
stos
adc
test
cli
int3
inc
and
shlw
repnz
pop
add
xor
shlb
pusha
fisttpl
shlb
jge
xchg
lret
push
cmovle
lcall
mov
test
mov
mov
mov
mov
sub
inc
add
dec
add
mov
test
int
adc
and
fdivrs
and
pusha
loop
test
dec
adc
movsb
faddp
xor
insl
sub
pop
js
jg
outsb
mov
setle
inc
and
mov
pop
outsb
cwtl
jne
lds
push
pushf
jmp
ja
in
mov
pop
pop
rcr
lods
jo
jns
andb
mov
cmp
movswl
dec
or
hlt
ds
mov
loopne
add
mov
in
sub
in
cmp
imul
dec
stos
push
cmp
dec
or
scas
insl
iret
jg
xor
mov
pop
fldenv
sahf
sbb
js
xchg
push
loopne
scas
fiaddl
cmp
xorl
imul
subb
sbb
sbb
in
fsubp
push
aaa
or
rolb
mov
push
push
lret
pop
mov
aam
push
cs
lds
sub
push
mov
sbb
mov
push
adc
push
mov
inc
xchg
xor
add
xor
push
ret
cmpsl
cld
movl
adc
rcrb
aas
xor
fwait
xor
movsb
inc
icebp
push
adc
pop
addr16
idiv
int3
rolb
push
add
lds
inc
fldcw
inc
scas
std
jmp
adc
mov
imul
pop
add
mov
add
dec
js
in
out
jge
sub
fldl
fcoml
pop
ret
fsubr
cmp
les
mov
addr16
mov
ret
inc
and
jge
notb
pop
jae
mov
ljmp
push
imul
stc
or
popf
inc
lea
pop
xchg
divb
lock
push
jle
jbe
cli
and
and
sar
fs
mov
mov
dec
pushf
jae
out
sbb
subb
ja
push
mov
cmc
jmp
rorb
adc
sbb
bound
stos
cltd
add
mov
or
or
in
and
dec
loopne
and
pusha
inc
adc
ret
aad
imul
test
in
call
aaa
push
leave
jle
xor
enter
mov
aam
hlt
add
test
push
sub
lcall
insl
cmpsb
ljmp
or
sarl
jl
sbbl
cmpsb
out
add
xchg
or
sub
jno
pop
xchg
add
int3
orb
jecxz
jmp
into
sub
int
pop
add
or
cld
dec
ret
rolb
mov
fwait
cmpsb
shll
xor
push
xchg
xlat
xchg
js
pop
test
mov
aam
xchg
pusha
sbb
js
cmpsb
icebp
mov
inc
add
inc
pushf
inc
or
lock
jne
push
les
pop
pop
or
test
push
pusha
daa
dec
hlt
out
fisubrs
xchg
push
cmp
loopne
pushf
popf
mov
jmp
adcb
inc
stc
movsb
pop
das
dec
push
movsl
pushf
fidivrs
and
and
mov
mov
inc
in
lods
dec
and
mov
xor
cvtdq2ps
xchg
repz
add
out
insl
loopne
insl
in
les
dec
aas
mov
xchg
xor
incl
aam
sub
mov
ret
mov
imulb
pop
movsb
pop
push
rolb
push
cmpsl
nop/reserved
jge
aaa
stos
or
aad
jbe
ret
in
loope
cld
bound
icebp
mov
das
incl
sub
sub
sub
pop
dec
sub
out
imul
or
gs
shld
pop
xchg
lcall
out
jmp
mov
xchg
cmpsl
jecxz
fisttps
mov
pop
jg
jg
pop
inc
test
pop
iret
ds
in
jmp
mov
cs
mov
sarb
das
aad
jmp
cmp
xchg
mov
dec
mov
jnp
sbb
xor
jmp
adc
pop
inc
int
stc
and
mov
inc
cs
mov
shlb
lret
pop
xchg
xchg
or
in
mov
cmp
push
imul
lock
jmp
repnz
push
mov
imulb
and
outsb
arpl
xor
aad
sub
dec
mov
aad
pop
repz
fs
lret
xor
mov
xchg
jle
scas
add
push
sub
mov
jge
and
jo
mov
xor
leave
sbb
mov
lods
ljmp
fwait
cwtl
fcmovnu
cmp
aaa
xor
jle
sub
aas
xchg
imul
jmp
mov
lea
out
cmp
loope
loope
cmp
lds
out
lods
insl
mov
cmp
in
xchg
xlat
jp
sub
push
lods
dec
cmpsb
fdivrl
add
add
nop
cmp
out
add
cmc
inc
shll
outsl
sub
out
dec
jne
call
inc
pop
mov
mov
sub
and
xlat
add
mov
push
jge
fdivp
rcr
pop
and
push
jne
ljmp
push
xchg
das
mov
mov
pop
inc
stos
add
xchg
sarl
outsb
mov
dec
outsl
xchg
aad
push
lock
push
daa
rcll
jle
add
and
xchg
push
ljmp
push
pop
mov
mov
pop
bt
xchg
sub
xchg
lcall
xor
pop
xor
loope
sub
push
psllq
jg
jecxz
scas
in
sar
mov
mov
cmpsl
jle
cmp
inc
pop
add
mov
mov
lcall
push
and
cwtl
xlat
rcll
xchg
les
dec
dec
pop
imul
cltd
loop
push
sub
into
ss
jo
stos
cmp
add
arpl
in
sub
rcrl
bound
shl
xchg
add
push
mov
ds
lods
sbb
loopne
out
in
pop
inc
rcrl
adc
repnz
fnstcw
loop
decb
push
cmp
add
cmp
repz
or
sarl
subb
cmp
push
add
push
push
or
sbb
push
aaa
push
repnz
mov
mov
cmp
test
call
popa
cli
movsb
jbe,pn
jge
wbinvd
test
xchg
iret
nop
jbe
das
lods
cltd
sahf
mov
dec
jp
dec
stos
xor
push
cmp
xor
enter
mov
adc
mov
or
add
pop
pop
dec
mov
jle
inc
mov
pop
in
jnp
pop
dec
scas
lock
cmp
outsl
xor
mov
enter
mov
and
pushf
inc
scas
mov
repz
dec
pop
pushf
fisubrs
das
fs
or
fcoml
aam
in
xchg
cmc
ret
mov
sub
repnz
imul
les
adc
lock
lods
mov
test
or
repnz
mov
punpckhbw
into
cmp
mov
dec
jo
and
les
js
addl
lds
clc
push
outsl
pop
sub
jbe
inc
fmull
sarb
mov
and
stos
sbb
leave
mov
add
sbb
fsubs
sub
or
adc
test
sbb
movsl
add
mov
cmc
xor
lods
adc
nopl
jno
bound
ss
into
ljmp
insl
mov
cmp
mov
fnstsw
and
pop
mov
out
nop
sbb
faddp
jne
add
rol
jmp
cmp
andb
jp
movsl
sbb
push
jne
fnstcw
rcrl
mov
mov
daa
pop
sbb
inc
jns
sub
push
mov
or
sub
pop
in
mov
jl
clc
add
mov
hlt
shl
adc
dec
adc
fwait
leave
out
mov
enter
sub
push
push
jb
push
test
fidivs
mov
aaa
icebp
sub
pop
jl
jp
adc
aaa
mov
insl
add
dec
fcomp
add
arpl
popa
loopne
push
xchg
mov
arpl
xor
jle
xchg
arpl
jb
aam
loope
bound
cwtl
fdiv
dec
and
movsb
in
dec
push
pop
pop
fldenv
push
ljmp
inc
push
aam
or
adc
push
loop
loope
int
sahf
sub
push
fistpl
data16
out
xchg
jns
ljmp
mov
enter
cltd
pop
sub
test
jns
movsb
sbb
fcmove
xchg
cld
mov
cmp
out
testb
imul
or
push
mov
mov
sub
dec
nop
and
sbbl
pusha
imul
pop
push
enter
push
or
adc
out
xchg
mov
ss
lock
mov
std
loop
imul
out
imul
xor
cmpsb
aaa
add
pop
pop
loope
push
sbb
lret
pop
pop
xchg
mov
dec
xor
popa
enter
sub
ror
inc
mov
jg
xchg
pop
pop
jg
push
insb
pop
mov
nop
fwait
xchg
pushf
push
in
push
xor
lret
mov
sbb
fisubrs
into
mov
fstp
lea
adc
sub
jns
and
cmp
xchg
mov
adc
outsl
cmpsl
xlat
push
mov
jns
mov
push
mov
cld
lds
inc
push
in
cmpsb
lret
jmp
ds
sub
mov
mov
bound
mov
push
jns
jo
out
shll
xchg
dec
cmp
add
imul
orl
xchg
ret
push
popa
jge
cmc
mov
mov
mov
mov
imul
repnz
aaa
push
sub
mov
or
into
mov
inc
mov
pop
mov
inc
les
sbb
clc
mov
mov
fistps
jb
pop
pushl
mov
pop
shrl
mov
in
std
jmp
jno
cltd
cmp
mov
fcoms
add
push
push
sbb
push
or
xor
sub
sbb
cmpsb
jne
mov
mov
jp
pop
mov
xlat
mov
xor
or
fsubrs
pop
add
int
dec
add
jmp
int
out
inc
daa
mov
push
rcrl
pop
test
hlt
fisubrs
fcoml
fsub
pop
cmp
jo
movsl
pop
fidivrl
inc
mov
shll
adc
sub
push
sub
push
xor
hlt
insb
xor
ftst
leave
inc
inc
lods
inc
jns
icebp
outsb
imul
fldl
add
fdivr
les
push
xchg
and
frstor
mov
push
std
adc
inc
xchg
test
ljmp
hlt
iret
ja
std
lock
inc
cmpsb
push
xchg
pop
testl
pop
xor
cmc
pop
jl
mov
loop
xor
test
stos
loope
scas
mov
xchg
add
data16
out
jae
cmp
sahf
sarl
push
lock
pusha
mov
sbb
lret
sbb
sbb
popa
in
add
sub
jmp
pop
inc
cmpps
std
inc
icebp
loopne
fcoml
xor
cmp
pop
and
sub
lcall
mov
cmc
int
push
rcll
mov
dec
cmp
dec
test
cltd
out
dec
nop
test
push
jmp
inc
test
jns
mov
jo
and
sbb
lock
mov
xchg
mov
ret
adc
sub
fmull
pop
inc
sahf
das
mov
mov
and
jne
push
or
cs
out
aad
in
imull
cmp
inc
jbe
xchg
out
jg
jecxz
sub
sbb
sbb
scas
lret
es
iret
sub
xchg
icebp
inc
sub
inc
repz
shll
mov
pop
dec
cmpsb
or
sti
xchg
xchg
jmp
add
data16
cld
xchg
mov
push
adc
jp
call
inc
xor
and
cmp
adc
xchg
mov
mov
lods
sbb
inc
or
addr16
jns
dec
jg
scas
inc
insl
roll
addr16
lds
xchg
push
sbb
repz
add
pop
int
pop
pop
arpl
aas
ret
int3
push
in
sub
sbb
out
subl
loop
fsubp
loope
cwtl
jle
int
aam
lret
add
jg
pop
hlt
in
push
pop
das
in
jmp
mov
mov
adc
or
addr16
int
lock
hlt
rclb
lret
pop
test
jmp
out
sub
bound
push
movsb
jg
dec
arpl
push
sbb
xchg
in
jae
xchg
test
out
adcb
dec
fldt
outsb
sahf
sahf
std
mov
lret
cmp
daa
cmpsl
mov
adc
dec
push
cmc
imul
mov
pop
call
mov
sbbl
sbb
fwait
mov
add
in
push
dec
rorl
mov
fistl
mov
test
out
fcoms
loopne
mov
test
out
mov
xchg
dec
xchg
sti
fwait
pop
xor
and
mov
adc
pop
push
cwtl
and
daa
inc
mov
xor
dec
rol
mov
mov
aam
xchg
dec
cli
push
cmp
mov
xchg
lss
add
fidivl
cwtl
xor
dec
mov
mov
sub
and
dec
in
out
push
fldt
xchg
xchg
cmpsb
popa
xor
lock
jg
dec
pushf
fcoml
enter
jmp
data16
lret
sub
loopne
fcomps
testl
fdiv
pop
pop
scas
out
cmp
sub
cs
aaa
fldcw
jo
aam
xorl
rorl
jp
sub
jg
bound
xor
xchg
loop
pop
push
pop
popa
pop
aad
jle
shll
fsubr
inc
hlt
fs
aad
dec
jp
or
rorb
stos
in
ret
popa
push
xchg
aaa
fxch
adc
test
sar
nop
scas
mov
inc
cmc
gs
stos
out
stos
nop
mov
fcoml
mov
call
pop
repz
sub
bound
sbb
mov
clc
mov
orb
or
call
cmpsl
adc
call
lahf
cwtl
mov
mov
jae
and
mov
in
cwtl
dec
add
cmp
sbb
test
clc
adc
jp
mov
testb
pushf
je
xchg
push
mov
sbb
xchg
lea
icebp
xchg
cs
iret
jge
xor
mov
cs
insb
jl
insl
shlb
nop
mov
fstpl
push
pop
scas
push
mov
inc
les
cmc
push
jns
sub
ljmp
cmp
cltd
pop
jns
jge
cli
sti
pop
repz
sub
rolb
loop
xchg
cmc
jle
inc
rcll
mov
outsl
pop
stos
stc
shl
xchg
or
negb
xchg
sahf
lods
cmpsl
int3
and
ds
push
das
mov
cmpb
pop
out
sub
fchs
push
pop
test
loopne
repnz
cmpsl
jecxz
cld
push
inc
scas
in
and
jb
ja
mov
sub
pushf
xchg
and
add
add
mov
cmp
add
jnp
pop
je
jg
mov
mov
lods
mov
stc
mov
jbe
inc
pop
dec
mov
sahf
ss
sub
sub
push
add
int3
repz
xchg
lret
dec
div
push
movsb
cmp
sbb
mov
fwait
pop
pop
add
out
imul
mov
mov
insb
dec
fiadds
std
mov
jmp
mov
mov
aaa
xchg
cmp
fldenv
arpl
lods
imul
dec
xchg
xchg
daa
sahf
js
in
push
inc
shl
inc
cli
xchg
ror
cmp
mov
aas
sarl
movsl
pushl
fsubrl
dec
lret
inc
int
inc
mov
sbb
fcomp
push
jp
aad
jle
cld
mov
cli
dec
shlb
dec
jp
outsb
sub
leave
jo
test
push
inc
hlt
xchg
lods
mov
jo
sbb
loopne
outsb
mov
sub
es
jp
sbb
shrl
mov
pop
hlt
xor
and
fsubr
les
test
cmpsb
sub
pop
setae
lahf
stos
stos
dec
cltd
push
js
iret
in
nop
sbb
pusha
jg
lea
push
fsubl
popf
ret
dec
pop
mov
inc
mov
ficoms
jnp
in
and
mov
enter
cwtl
adc
add
mov
leave
lret
subb
dec
in
rorl
pop
or
mov
xor
add
hlt
pop
or
mov
mov
outsb
xor
int
sub
gs
subb
lods
add
scas
fstl
mov
ljmp
cmp
jo
push
push
dec
out
lods
test
loopne
outsb
scas
push
leave
std
mov
fs
adc
pushf
mov
pushf
inc
das
enter
mov
cmp
stos
aas
jecxz
adc
pushf
dec
mov
jg
or
inc
iret
sbb
cmp
pop
add
mov
push
flds
mov
ret
jnp
jno
iret
push
dec
mov
pop
jg
dec
shl
mov
jne
ret
mov
test
xor
push
sub
mov
xor
jmp
adc
dec
scas
sbb
daa
xlat
dec
pop
xchg
dec
jns
mov
cmp
sub
sub
or
pusha
int3
pop
jb
mov
cmp
test
sub
jge
inc
in
dec
hlt
push
es
pop
pop
xor
mov
push
pop
ret
cmp
mov
mov
arpl
popa
shrl
and
icebp
add
mov
jns
outsb
mov
inc
jmp
in
or
testl
mov
shlb
repnz
mov
xchg
or
pop
movsb
or
mov
pusha
bound
jo
out
xchg
or
daa
push
mov
sub
stc
mov
jecxz
push
sbb
jecxz
out
jle
pop
push
dec
jmp
pushf
movsb
add
into
mov
sub
incl
pop
xchg
sub
inc
add
lds
lcall
adc
pushf
rcrl
mov
mov
addr16
outsl
pop
sti
mov
enter
mov
fdiv
das
scas
pop
pop
sub
repz
jmp
mov
xchg
inc
pop
cmp
jl
or
js
jge
cmp
fsts
mov
aas
cmp
sbb
dec
push
cwtl
jg
testl
loopne
stc
mov
cmpsl
popa
shlb
fstpt
cli
clc
jne
pushf
ds
push
es
imul
xor
movsl
push
movsl
lea
sub
inc
incl
adc
push
jle
iret
sbb
into
pop
or
mov
mov
stos
imul
aam
idiv
mov
loopne
int
cmp
xchg
xor
cs
or
or
add
cwtl
popf
jne
clc
js
lahf
mov
xor
lret
scas
inc
push
and
sub
loope
pop
or
subl
ds
enter
sub
jae
std
cmpl
sahf
mov
push
cltd
jle
test
in
sbb
jno
push
shrl
cmp
aas
add
sbb
push
mov
mov
jp
push
lret
xchg
and
xor
adc
mov
neg
mov
loop
int3
jns
pop
cmp
js
inc
mov
popa
mov
push
jo
inc
sub
mov
push
rcrl
dec
cmp
fdivrs
cmp
ljmp
loop
pop
xor
mov
in
dec
les
es
mov
xchg
inc
or
in
ficoml
jae
pop
cmp
xlat
jnp
loop
out
lret
daa
cmpsl
out
cmp
xor
xchg
cmpsl
adc
mov
clc
aad
adc
mov
sbb
mov
push
aam
xchg
cmpsl
stc
ret
pop
les
in
pop
fdivrs
shrl
addr16
cmpsl
testl
sti
cmpsb
xchg
ficoms
in
push
and
stos
mov
mov
loopne
aas
pop
loop
jb
xor
shrl
add
test
add
fcmove
cltd
mov
mov
dec
jbe
inc
dec
in
xchg
push
dec
jg
scas
mov
mov
push
scas
push
mov
out
and
iret
stos
inc
or
push
dec
std
cli
fstl
xchg
xor
cmp
int3
lret
adc
mov
pop
pop
xchg
pop
addb
stc
sti
pop
dec
inc
adc
push
push
jo
ljmp
dec
jae
inc
jecxz
mov
jp
das
sbb
fsubl
or
out
ficomps
ror
inc
lahf
ljmp
inc
outsl
jno
fbstp
xchg
in
add
lcall
sti
movsl
and
icebp
cmp
pusha
ss
fiaddl
test
dec
mov
ljmp
pop
mov
cmp
cld
mov
hlt
movsb
popa
inc
aam
add
scas
mov
sbb
fdivrl
jge
or
inc
sub
inc
or
xlat
movsl
gs
test
pop
cmp
sub
cmp
push
out
mov
inc
loopne
les
clc
das
fidivrs
push
mov
into
sub
cmpsb
test
sbb
loopne
push
mov
pusha
jo
jecxz
xor
in
jb
or
dec
ror
mov
push
mov
jnp
mov
rcrl
dec
dec
hlt
xor
ret
movswl
sub
dec
mov
and
push
xlat
daa
leave
xchg
cmp
outsl
inc
insl
shll
mov
dec
xchg
xor
pop
mov
insb
rclb
jb
clc
stos
cmp
fidivrl
cmp
xchg
lds
test
fucomi
jae
push
test
push
daa
in
mov
aam
inc
std
adcl
cmp
xor
xchg
inc
lret
adc
pop
popf
pop
cs
mov
fcomp
xor
je
mov
push
mov
loope
push
in
aaa
mov
push
jmp
bound
xor
pushf
dec
mov
push
pop
call
sbb
mov
sub
aas
xchg
adc
cmp
pop
pop
cmp
mov
fsubr
xor
xchg
xor
gs
jp
fistps
pop
hlt
ds
pop
add
sub
mov
jge
out
imull
mov
bound
cltd
aas
push
movsl
and
std
testb
cmpsl
jecxz
xchg
cmp
in
sahf
mov
mov
mov
cmpsb
xchg
fbstp
mov
xchg
pop
pop
inc
push
js
scas
add
cmpsb
jbe
or
and
gs
mov
jmp
lret
bound
std
cwtl
shlb
mov
mov
cli
cmp
mov
lock
fdivrs
iret
mov
insb
push
mov
mov
shlb
outsb
daa
jno
mov
mov
or
cli
lds
movsl
movb
sahf
jecxz
mov
dec
xchg
lret
pop
test
sti
sbb
inc
bound
xchg
or
mov
jecxz
insl
xor
jecxz
mov
jns
mov
mov
cmpsb
dec
or
or
cmc
cmp
dec
in
pop
rcl
sub
lods
les
stos
fists
pop
sbbb
scas
imull
cmp
lock
out
xor
sbbl
jbe
mov
dec
sarl
mov
mov
sbb
pop
sarl
loope
or
ret
cmp
aas
leave
scas
mov
sar
icebp
and
mov
stos
and
aaa
xlat
out
xor
insl
xorb
jbe
mov
dec
or
ds
mov
pop
imul
cli
aad
bound
dec
iret
dec
push
sbb
cmp
decl
lds
insb
jae
xchg
add
jmp
ret
sub
adc
loop
mov
mov
stos
dec
ss
xchg
mov
cmp
insb
sbb
fs
fsubrs
xchg
mov
out
fisttps
and
shll
push
dec
ficomps
out
mov
push
and
mov
jmp
mov
push
jb
sub
in
rol
fimull
mov
stos
daa
cmp
push
push
mov
mov
leave
cld
inc
ja
ffree
push
cmpb
sbb
mov
in
mov
inc
and
jge
mov
lods
fisttps
push
add
inc
add
xchg
or
lret
stc
or
in
lods
pop
or
jg
sub
ss
ja
int3
sub
mov
xor
ret
mov
ss
inc
fcoms
outsb
das
push
pop
out
out
repz
std
std
lds
mov
dec
dec
inc
mov
outsb
cli
pushf
loopne
stc
movsl
fdivl
jge
pop
mov
ss
imulb
repz
into
add
sbb
sub
in
subb
xlat
push
mov
sub
repnz
mov
aam
or
xlat
or
repnz
fisubrl
mov
repz
pop
jge
jo
and
clc
and
aad
mov
and
outsl
sbb
nop
mov
addl
jbe
add
fcmovu
out
fistpll
in
mov
xor
inc
out
dec
gs
push
add
adc
aas
push
mov
jle
testl
xchg
push
pop
cs
xchg
insl
push
ret
mov
sbb
sahf
mov
aad
mov
jge
test
testl
pusha
jecxz
adc
lcall
pop
push
add
movsb
vmovups
ret
inc
ljmp
sarl
pop
aad
xchg
sbb
mov
dec
and
mov
scas
sub
lea
repnz
mov
or
push
dec
mov
pop
push
aad
fbld
in
out
or
mov
flds
out
or
mov
jecxz
pop
shrb
mov
repnz
movsb
and
mov
fstp
push
adc
push
mov
pop
adc
int
and
xchg
loopne
fs
shll
out
and
push
test
adc
mov
dec
dec
jl
cmpl
sub
sahf
enter
fs
cltd
or
fsubp
js
sbb
movb
xlat
lcall
mov
push
mov
sarb
push
jno
jb
fistl
mov
and
push
fiaddl
adcb
outsl
dec
mov
das
xchg
xchg
cmp
sbb
das
xchg
call
or
lahf
shrl
aad
lcall
dec
pop
pop
sub
out
aaa
int3
inc
scas
push
fimull
out
jge
cmp
push
push
cltd
cwtl
test
jecxz
scas
dec
xor
pop
push
das
pop
icebp
aam
xchg
aaa
pop
addr16
and
xchg
repnz
sti
mov
gs
inc
or
xor
jmp
mov
sub
pusha
push
in
dec
out
aad
scas
adc
pop
and
aas
xor
cld
iret
adc
or
mov
mov
jnp
xchg
pop
mov
sub
pop
mov
push
mov
popf
sub
fwait
pop
cld
sahf
fsubrl
mov
lea
sbb
mov
mov
ss
aaa
inc
sbb
hlt
cmp
lcall
stos
cmc
adc
xor
jnp
adc
adc
xor
mov
or
out
add
mov
fs
fstps
aaa
sub
inc
sbb
mov
cld
ljmp
cmpsb
or
subb
lret
pop
testl
push
push
xchg
shrb
hlt
sbb
rcll
sub
jle
enter
sub
data16
mov
mov
xchg
jno
push
ret
mov
outsl
daa
ja
lea
pop
orl
mov
mov
lret
hlt
push
cltd
mov
cwtl
adc
inc
inc
dec
xor
pop
cmp
dec
fwait
mov
stos
mov
xchg
sbb
movsl
repnz
xchg
enter
push
push
sub
add
test
das
cli
or
push
inc
add
std
hlt
gs
int3
jo
push
xchg
loopne
sarb
arpl
sti
jge
shl
jge
mov
data16
jo
scas
lds
xchg
add
pushf
scas
popf
lea
xchg
push
int
lret
jae
add
pusha
cmp
lock
adc
mov
pusha
lds
fcoml
inc
pop
aaa
shr
clc
push
mov
ss
fisttpll
pop
imul
xchg
push
pop
popf
pop
fsts
sub
imulb
inc
das
or
dec
cmpb
adc
adc
jae
mov
pop
xor
mov
cmp
and
push
in
in
push
pop
sub
shll
in
inc
int3
outsb
pop
push
mov
clc
aaa
xchg
pushf
mov
enter
enter
adc
idivb
ljmp
leave
fmull
or
lods
fwait
pop
xor
mov
cli
aam
rcrl
xchg
out
xchg
pop
fidivrs
adc
fwait
rcrl
loope
loope
in
jge
add
das
sub
das
imul
or
test
and
cld
lahf
dec
testb
sub
movb
sbb
lahf
loop
stc
ror
mov
paddd
into
jno
sarl
mov
sub
aad
lock
or
jmp
lahf
jl
cmp
frstor
pop
loopne
pop
pop
xor
sti
push
hlt
pop
in
loop
pusha
cmpsb
push
cmp
pop
sarb
adc
imul
fucom
dec
shl
mov
or
sub
aaa
push
lods
jp
cmpsl
aaa
repz
je
inc
sbb
and
lret
jne
aam
sbb
mov
pop
stc
test
fsubrs
and
sub
dec
xor
ds
cmp
out
add
stc
xor
cli
jae
pop
popa
rolb
sbb
sbb
mov
jp
pop
jmp
and
in
rcll
imul
pop
cli
test
lcall
fstp
hlt
in
ret
cmc
pop
das
sti
cmpsl
push
ja
adc
aam
push
xchg
cli
sarb
xchg
push
dec
pop
decb
push
mov
imul
adc
sub
mul
pushf
push
pop
push
mov
dec
enter
fnstenv
cmpsb
mov
lcall
iret
fldenv
mov
rolb
dec
scas
stos
push
rorl
dec
cmp
cmp
jg
in
stc
sbb
adc
sub
mov
adc
mov
push
fstps
stc
and
mov
movsl
sti
xchg
pop
aaa
cli
cmpsb
push
clc
and
lock
cmpsb
out
lods
push
sub
inc
push
dec
hlt
mov
loop
sbb
fbld
pcmpeqw
xor
mov
mov
add
test
adcb
ja
xor
ret
push
push
stos
fbld
pop
xor
nop
xor
clc
bound
pusha
sarl
imul
sarb
shrb
hlt
xchg
and
or
pop
mov
movsb
lahf
mov
adc
aaa
pop
mov
cmp
pop
cmpsb
cmpsb
mov
pop
mov
stos
std
push
mov
pop
jne
or
mov
and
in
pop
out
mov
push
in
hlt
jp
mov
mov
int
jb
jge
ret
shrl
xorb
loopne
stos
or
mov
mov
aaa
sarl
gs
cli
xchg
out
cmp
sti
sub
lods
xor
mov
mov
pusha
pop
mov
imul
loop
ljmp
push
sti
loop
mov
pop
outsb
jecxz
mov
push
lea
dec
xor
test
sbb
sbb
xor
sub
mov
dec
repz
rcr
fmulp
in
push
aad
cmp
scas
gs
sahf
push
fstl
arpl
cmpsl
pop
jmp
xchg
dec
jns
dec
lock
sbb
fidivrs
and
movsb
sbb
jle
iret
subb
pop
jnp,pn
xor
mov
arpl
pop
arpl
jmp
rcl
les
jmp
mov
sbb
inc
cmp
scas
test
int
inc
shrl
daa
lea
in
in
sub
jo
mov
and
loope
test
and
shl
dec
stos
xor
mov
hlt
ss
adc
stos
push
adc
in
xchg
fdivrl
cli
inc
test
imul
mov
jg
cmp
add
aam
orl
adc
push
mov
loop
push
ficoml
mov
cltd
mov
mov
dec
jb
in
int3
sti
ret
mov
enter
mov
cwtl
and
xor
push
mov
ja
cli
loop
das
inc
js
pop
shlb
xor
jg
ss
dec
cmovl
loop
out
mov
mov
or
ret
mov
pop
lahf
shll
stos
rolw
xchg
in
adcl
jg
int
or
add
int
fsubl
or
push
dec
mov
xchg
xlat
cld
loope
test
jmp
pop
fdivs
mov
mov
mov
int
xor
jp
pop
stos
repnz
lds
and
xlat
dec
cli
mov
push
aaa
pop
pop
fildl
adc
xor
pop
push
imul
ficompl
clc
daa
fdivp
ss
and
push
pop
dec
mov
xor
mov
mov
sub
mov
and
das
addl
shll
push
loope
lcall
hlt
je
in
xor
clc
mov
jnp
push
pop
jecxz
test
mov
mov
pusha
inc
mov
cmp
xchg
push
xchg
pop
cmp
cmc
stos
clc
pop
movsl
xchg
jle
nop
sbb
lahf
cltd
pop
pop
push
iret
mov
scas
std
sti
adc
insl
lea
push
xchg
cli
cmp
pop
sbb
sbb
gs
inc
out
jmp
int
loopne
ret
mov
adc
cld
sub
shrb
xchg
js
mov
dec
pop
aad
out
pop
and
and
pushf
es
pop
mov
movsb
and
sti
push
jp
into
adc
pop
test
xchg
inc
insl
cltd
jecxz
cwtl
sbb
cld
int3
push
jnp
push
cmp
pop
lods
cmpsb
je
push
adc
clc
mov
mov
shrl
jae
and
push
scas
push
out
dec
cmp
ja
dec
ret
jb
pop
inc
xchg
push
push
lea
jno
lds
clc
test
jge
dec
lds
push
js
dec
cmpsl
dec
adc
mov
in
adc
xorb
repz
mov
and
ljmp
ret
stos
jmp
push
adc
scas
or
adc
popf
sub
mov
ljmp
xchg
add
or
jge
xchg
scas
jns,pn
dec
mov
sub
xchg
lods
imul
sub
or
dec
push
cmp
clc
mov
dec
lods
pop
xchg
out
xor
lahf
pop
add
add
stc
movsl
xor
xchg
xor
inc
mov
std
stos
mov
and
jmp
lock
push
mov
test
push
jmp
icebp
sub
loopne
push
push
stc
pop
insb
pop
lret
cwtl
mov
divb
sahf
cmp
adc
aad
sti
orl
inc
jmp
notl
stos
jno
mov
jne
pop
xchg
pop
and
pusha
es
mov
stc
or
inc
xchg
fbstp
ret
sbb
jae
sbb
push
test
addr16
mov
addb
mov
pop
xor
lds
xchg
bound
push
test
je
shrb
push
jge
dec
xchg
xor
ljmp
pop
mov
jle
cmpsb
cli
shlb
ljmp
insb
sbb
pop
sbb
repnz
mov
ja
lock
xor
hlt
push
lea
mov
push
rorb
push
xchg
mov
pop
loop
pushf
mov
call
inc
xchg
push
insl
cmc
jp
xor
sar
pop
movsl
pop
ds
mov
sar
jne
test
pop
pop
movsl
mov
sbb
pop
cmp
fs
mov
cli
push
jne
jmp
mov
adc
fwait
in
dec
out
jnp
addr16
jl
inc
shrb
in
push
inc
xchg
inc
dec
pop
imul
xor
mov
aas
adc
and
inc
xchg
push
cli
pushf
mov
sbb
xor
cmc
aad
and
sbb
imul
add
test
frstor
mov
std
test
lock
push
aas
cmpb
repnz
inc
xchg
pushf
cli
std
outsl
or
lret
cli
mov
gs
std
cmp
ficompl
into
mov
cld
cmc
pop
add
xchg
mov
and
cmp
je
lods
sti
inc
in
je
cmp
dec
cmp
jbe
sub
negb
call
xchg
mov
pop
aad
notb
stos
inc
cmpsb
mov
out
xor
sti
or
sti
dec
push
fdivrs
scas
dec
mov
sbb
ret
jge
insl
mov
mov
lods
or
mov
pop
loopne
lea
les
ficomps
sub
ja
imul
gs
dec
inc
mov
add
inc
in
adc
test
cmpsb
cmc
dec
jns
in
in
je
push
cmpsl
scas
das
jl
add
add
jmp
paddusb
jmp
aam
lret
aad
pop
mov
shlb
hlt
decl
mov
stos
hlt
out
fcoml
cmp
xchg
loop
jo
int
and
fsub
pusha
add
pop
leave
int3
aad
jle
jne
jmp
dec
sbb
hlt
or
enter
lcall
jl
pop
cmp
push
sub
insl
mov
call
jae
sub
fildll
push
xchg
repnz
dec
push
add
pop
sub
sub
adc
mov
xchg
pop
scas
push
and
fsubrs
inc
inc
je
lcall
fists
pop
hlt
test
pop
xchg
movsb
notb
call
int
jno
xor
sti
push
test
in
lea
fwait
pop
inc
xchg
dec
daa
lds
iret
dec
rcrb
lea
sub
cmpsl
je
and
cmp
jecxz
cmpsl
xor
scas
and
mov
loope
das
xchg
inc
xor
test
repz
xor
mov
insl
or
push
aad
les
cli
psllq
dec
dec
push
sub
push
insb
sub
xchg
mov
push
hlt
mov
push
push
xlat
dec
aam
sbb
lock
jnp
push
int
rcl
pop
or
or
xor
dec
or
sub
imul
fdivrs
add
stos
rorl
lahf
pop
xor
inc
xor
std
dec
test
xchg
imul
pop
sarl
xor
add
scas
ds
inc
arpl
mov
adc
shll
loopne
aad
outsb
icebp
cs
popf
inc
scas
xchg
std
mov
stc
lods
popf
pop
cmp
xor
pop
xchg
jl
mov
lret
mov
std
ja
pushf
lods
pop
out
dec
cmp
pop
fiadds
cmp
cld
enter
iret
ret
mov
lods
xchg
dec
in
dec
outsl
cmp
movsb
enter
aad
xor
call
mov
cmp
mov
adc
pop
outsl
add
fs
movsl
jae
inc
inc
iret
stc
test
sub
pop
cmpsl
mov
push
push
rol
mov
das
push
pop
sub
adc
rclb
pop
jb
push
das
xlat
sbb
ja
repnz
outsl
dec
aaa
leave
push
xor
push
mov
cmp
push
int
fisubrs
les
into
mov
cmp
shll
xchg
ja
inc
jl
cmpsb
pop
jb
jns
cs
loope
or
sbb
clc
div
mov
adc
xchg
or
mov
pop
mov
jmp
bnd
subps
mov
cld
xor
dec
call
push
in
ret
lock
sub
ss
orl
test
xor
dec
or
push
mov
imull
or
in
xchg
cmp
jnp
nop
jge
ljmp
rcl
push
sbb
lea
imul
push
pop
test
rcrl
outsl
lahf
mov
jnp
pushf
jne
push
cli
aam
call
pop
call
mov
stos
movl
adc
add
jb
daa
adc
jp
test
xor
aam
imul
sub
adc
es
lcall
sti
loopne
cli
imul
sbb
mov
mov
or
cmpb
adc
mov
mov
jns
stos
add
stos
jle
pop
dec
xor
push
icebp
insl
add
mov
pop
sarb
jecxz
xchg
std
cmp
data16
push
pop
les
cmpsb
cmpsl
cs
sbb
mov
mov
mov
adc
inc
sub
into
mov
pop
lret
dec
mov
jo
jecxz
cmpsl
outsl
push
gs
push
push
dec
in
adc
mov
repnz
sbb
xchg
mov
fdivrl
popa
jns
push
push
fstps
hlt
jle
scas
lret
jns
cltd
pop
gs
push
mov
or
mov
cltd
dec
xchg
ss
cmp
in
xor
cmp
mov
jo
xchg
dec
mov
das
fucomp
xlat
mov
inc
add
add
lret
jne
jmp
fs
test
mov
adc
sbb
add
pop
inc
scas
mov
fists
cmp
inc
mov
cltd
jns
mov
xor
aad
xadd
push
jb
mov
pop
mov
fbld
pop
jmp
jmp
sbb
insb
mov
lret
mov
mov
adc
aam
sarl
pop
push
imul
add
mov
dec
lock
xchg
adcb
mov
jge
das
jb
test
add
out
outsb
inc
pop
testl
aas
mov
pop
popa
cmp
add
dec
test
rolb
push
xchg
add
shl
pusha
stos
fs
adc
ja
or
fcompl
movsl
sbb
inc
mov
stc
insb
stc
push
cmpsl
mov
shlb
adc
bound
pop
and
xlat
es
rorl
out
xor
test
std
adc
xor
push
into
es
xor
push
sub
mov
loop,pn
xor
lahf
mov
pop
aad
push
push
mov
pop
dec
push
imul
movb
imul
sub
sub
mov
push
xchg
testl
pop
fiadds
cmp
sbbb
and
lock
mov
mov
add
mov
inc
int
mov
xor
mov
mov
adc
inc
shll
loope
les
xor
data16
sub
sub
cwtl
nop
lods
repnz
push
cli
nop
enter
mov
fbstp
xchg
jg
jecxz
pushf
pop
jge
jbe
cltd
out
jp
scas
push
mov
jne
push
jae
lock
or
add
xchg
mov
stos
sbb
fbld
inc
cli
dec
pop
push
aad
push
lret
xor
lret
pop
mov
mov
pop
mov
sub
lea
sarl
sti
lds
add
lods
push
mov
das
pop
lock
pop
sti
out
loope
lock
push
xadd
daa
dec
mov
clc
jle
lods
jle
adc
mov
test
aaa
cmpsb
cltd
incb
arpl
mov
lds
scas
pop
in
lea
xchg
xchg
int3
pop
data16
mov
adc
lcall
imulb
pop
mov
mov
insb
in
fucom
mov
jl
push
push
loopne
div
in
xchg
outsb
out
mov
xor
lcall
movsb
idivl
gs
cmpsb
leave
xchg
mov
jmp
mov
in
shll
add
rorl
pop
in
shrl
jo
mov
jecxz
mov
fistps
cltd
outsb
roll
inc
popf
lds
jge
pop
fstp
adc
rcrl
pop
movsl
aam
andb
xchg
int3
sbb
mov
jge
lahf
stos
test
jecxz
lret
sar
pop
xchg
or
jle
rcl
or
dec
ljmp
push
sbb
cmpsl
sbb
int3
mov
mov
xchg
jne
rcrb
test
pop
jnp
push
inc
mov
lret
adc
arpl
or
out
mov
jnp
xor
inc
adc
adc
icebp
jp
add
aam
mov
sub
movb
sbb
roll
pop
das
or
jp
jb
jb
push
xchg
cmpsl
inc
inc
pushl
shlb
add
mov
mov
mov
int3
roll
lret
es
addr16
cmp
pop
add
test
add
test
lock
rolb
and
push
rol
push
out
es
sub
pop
scas
scas
pop
out
fwait
aas
adc
fists
dec
and
mov
sub
ja
mov
scas
xchg
sbb
arpl
cmp
cwtl
mov
jle
in
fsubs
sub
sub
and
out
mov
scas
call
popf
into
sub
and
inc
push
fs
fcmovnb
dec
mov
fistpl
sti
pusha
ret
xchg
stos
call
imul
mov
xchg
jno
add
cltd
sbbb
mov
xor
sub
in
movsl
push
and
sbb
mov
shrb
loope
daa
xchg
mov
or
jle
fisubs
inc
and
mov
jge
jp
repz
xor
loope
ja
or
or
stc
sar
lahf
test
imul
inc
outsl
xor
mov
add
sbb
je
push
fs
jb
push
sub
sub
ret
es
shl
inc
sub
sub
cmpsb
fs
ret
pop
out
push
or
fnstsw
xchg
out
cltd
fdiv
add
inc
gs
inc
imul
in
insl
test
mov
rcll
je
cmc
js
imul
cmp
adc
test
je
or
mov
mov
pop
fwait
xchg
mov
stos
movsb
jmp
in
cs
dec
fcomp
dec
mov
hlt
add
cs
mov
xchg
fldt
inc
and
xchg
xchg
cwtl
mov
jmp
pop
jg
push
insl
ljmp
ja
xchg
lea
loopne
ja
cmpsb
jmp
adc
mov
aaa
mov
cmc
rorl
sbb
lods
into
lods
repnz
ret
ret
cmp
outsl
pop
xchg
cmp
mov
sub
dec
test
std
gs
sbb
push
cmc
fidivl
mov
xor
xor
cmp
pusha
jns
test
push
clc
imul
xchg
fcomip
addr16
cmp
in
cmovns
in
sub
sub
or
stos
sbbb
loop
inc
adc
mov
scas
mov
cmp
in
or
repnz
into
cvttps2pi
fwait
neg
out
cmp
hlt
loop
stc
test
sub
mov
sahf
add
adc
sub
ret
sbb
pop
cmp
mov
xchg
jae
push
xchg
inc
insb
lock
test
and
jo
jge
push
sub
or
mov
and
mov
pop
sahf
pop
mov
mov
mov
gs
pop
and
add
call
push
inc
daa
fdivrp
xor
and
je
or
push
loop
cmp
movsl
mov
push
pop
pop
adc
loope
add
test
insl
fsubs
sub
adc
inc
adc
fldcw
insl
mov
add
fwait
rorl
xchg
lock
sub
lods
roll
mov
pusha
dec
cmp
mov
lret
mov
fcomps
adc
and
inc
add
xor
jo
xchg
mov
ja
fcmovne
aad
je,pn
sbb
jle
mov
push
cld
icebp
push
xchg
inc
fsubp
lcall
add
je
jns
pusha
push
outsl
pop
subb
shrl
ret
fldl
adc
bound
mov
add
xchg
nop
xchg
inc
stos
test
push
enter
sti
pop
jnp
out
dec
std
sahf
push
pusha
aad
add
mov
dec
fisubl
aam
pop
xchg
xor
push
inc
fists
sbb
pop
jge
pop
cmp
lea
fistpll
cwtl
nop
xor
clc
jl
imul
ret
dec
mov
dec
lock
push
cli
iret
insl
xchg
neg
sbbb
mov
cmp
cmp
out
pop
jae
push
add
pushf
insl
cmp
decl
mov
out
hlt
xor
scas
pop
test
jnp
ss
xchg
jle
popa
out
xlat
jno
jae
inc
cld
cmpsl
lret
pop
hlt
or
dec
insl
popf
pop
in
xchg
nop
scas
xor
icebp
pop
out
in
sbb
fs
or
adc
inc
sub
push
or
popa
mov
jp
out
cmpsl
dec
iret
mov
out
jp
shr
shlb
mov
scas
out
inc
xor
inc
mov
push
adc
mov
cmp
loope
lea
mov
add
sbb
sbb
add
pushf
out
cli
inc
pop
xchg
cmp
cmp
out
movsb
daa
jmp
mov
popf
or
ret
pop
sbb
cmpsb
jmp
int3
out
je
fistpl
push
cmp
pop
jno
adc
icebp
fxch
sub
shlb
and
or
adc
pop
sub
mov
lea
popa
sbb
lods
or
mov
add
stos
inc
cltd
pop
into
scas
inc
jbe
andl
lahf
and
aaa
or
sub
mov
mov
out
jle
mov
lock
jno
roll
pushf
out
jne
sub
jae
sti
jp
mov
mov
mov
xchg
ret
leave
sahf
ret
and
scas
movsl
xor
loope
into
sub
or
test
cmc
jecxz
cmpsb
mov
and
add
dec
lods
leave
ret
xchg
imul
aas
pop
je
jo
mov
in
hlt
sbb
dec
and
mov
movsl
mov
pushf
adc
xor
daa
pop
xchg
outsb
sub
jmp
mov
shlb
sub
xchg
jbe
mov
or
lds
test
mov
adc
ret
aad
jp
xor
add
sbb
jg
add
mov
cmp
lret
clc
ret
int
pusha
dec
subl
enter
xchg
xor
int3
add
sbb
pop
jno
sub
jo
dec
mov
je
dec
fildll
xchg
ja
mov
loop
mov
push
and
dec
fwait
xor
ficompl
pop
rcrl
xor
cmpsb
lods
mov
call
push
and
add
clc
into
xchg
pop
test
cs
sbb
mov
adc
imul
bound
push
cmpsb
pushl
mov
xchg
mov
das
cmp
pushf
in
cltd
outsl
dec
stos
mov
mov
lcall
push
jo
int
insb
cmp
xchg
roll
push
push
sub
nop
mov
mov
jl
and
aam
inc
inc
inc
jmp
js
inc
rcrb
pop
jmp
nop
pop
out
clc
jecxz
jg
xor
shll
xor
sub
mov
xor
lods
repz
aas
aam
imul
xor
hlt
stos
mov
loope
push
js
stc
fcmovnu
mov
movsl
jmp
jp
rorb
push
fs
fucom
jae
aaa
inc
js
jl
fsubrs
lock
or
inc
dec
shlb
cmp
dec
popf
jmp
mov
sub
loop
ljmp
or
inc
xchg
cwtl
loopne
fsts
pop
test
or
cmc
shl
lods
jge
mov
cmc
or
and
fildll
pop
mov
push
or
mov
mov
jb
test
pop
aam
jge
jno
bound
lret
cmpsl
pop
push
and
testl
and
jg
cmp
fcoml
lds
imul
rorl
sbb
or
jmp
xor
clc
test
xlat
sub
scas
je
xchg
les
adc
clc
gs
jnp
dec
cmp
cwtl
fwait
mov
pop
sub
mov
fcoml
in
fisttps
ja
insl
pop
dec
mov
out
nop
pop
shll
or
insb
cwtl
inc
push
xlat
mov
pop
outsb
add
cwtl
mov
or
mov
inc
shl
or
clc
nop
int
xor
mov
lcall
fstp
daa
jmp
jecxz
cmpsb
inc
or
sahf
cmpsl
je
cwtl
imul
js
pop
mov
cmp
gs
push
imul
mov
mov
rorb
iret
in
mov
sahf
adc
adc
or
xor
insb
lret
sbb
sbb
rorl
mov
mov
mov
int3
in
imulb
inc
int
dec
jne
xchg
add
xlat
std
mov
daa
sbb
mov
push
fistpl
jle
xchg
mov
push
mov
lahf
shr
fiadds
stc
push
cmp
xchg
jne
xchg
sar
ljmp
jg
inc
or
subb
shrb
imul
push
inc
push
jo
jecxz
daa
xor
jle
jbe
or
stc
cmp
loope
repnz
ljmp
dec
pop
jecxz
lahf
jbe
adc
mov
out
and
push
cwtl
jo
mov
add
shrb
aaa
dec
push
sbb
dec
pop
sbb
push
push
cmc
aad
loopne
mov
loope
inc
popf
ja
ret
leave
sarl
data16
rorl
adc
lret
dec
inc
mov
push
dec
xor
aam
mov
bound
aaa
xor
fprem
mov
sbb
adc
add
daa
adc
mov
push
imul
jp
jno
mov
enter
dec
iret
jl
jecxz
sub
jns
divl
std
popa
cmp
pop
adc
mov
inc
les
cmp
jns
iret
jae
inc
xchg
lods
call
pop
int3
inc
pop
ret
adc
mov
iret
sub
loope
or
sub
pop
dec
test
dec
pop
js
decb
pop
in
xchg
rolb
les
lock
push
add
push
shlb
xchg
js
loope
jae
in
movsl
jne
imul
xor
scas
mov
jae
inc
jmp
loop
xorb
ljmp
test
fcmovne
dec
daa
jp
inc
jae
xor
sub
inc
jle
mov
pop
or
and
aas
stos
inc
xor
in
push
rcrb
cmpsl
jge
daa
mov
lea
cwtl
jmp
orl
int3
sahf
loope
sti
dec
rcl
test
pop
lods
mov
mov
lcall
push
int3
cmp
push
sti
mov
popf
dec
js
jmp
stc
rorb
shrl
mov
shll
arpl
jge
rdpmc
stc
dec
sub
test
xchg
pop
push
mov
or
test
orb
pop
add
wrmsr
movsb
jl
call
out
std
repnz
cmpsb
mov
push
xchg
in
ja
push
mov
lret
sbb
testl
cmp
lods
ljmp
lahf
test
std
jns
sbb
out
ficoml
popa
dec
shl
sbb
push
ret
shlb
daa
dec
pop
sbb
fiaddl
ja
adc
jno
and
scas
sub
fcomi
sub
push
in
outsl
mov
and
lods
das
nop
and
xchg
pop
andl
and
xlat
stos
pop
sub
dec
push
xchg
push
fs
mov
mov
fmuls
movl
test
adc
lcall
cli
inc
imul
and
lods
mov
push
jo
pop
adc
cwtl
popa
pop
mov
incb
call
or
movsb
flds
jb
call
sarb
jbe
dec
pop
inc
jns
imul
icebp
xor
inc
push
popf
popf
adc
xor
mov
ljmp
jne
pop
das
js
and
cmp
lods
pop
outsb
push
ret
add
dec
push
test
popf
xchg
xchg
jns
loopne
inc
sbb
mov
add
js
in
sbb
push
xchg
adc
aam
sub
or
loopne
scas
movsb
fdiv
or
aas
mov
or
jo
cmp
jecxz
sti
mov
and
repnz
mov
and
data16
mov
popa
sub
xorl
push
fwait
or
sbb
sbb
mov
es
cmp
in
inc
in
pop
push
dec
cmpsl
mov
mov
or
push
sbb
arpl
mov
dec
push
push
clc
je
rcll
push
pop
or
inc
jbe
scas
shrl
jnp
or
loop
adc
sub
mov
mov
inc
xchg
mov
stos
xor
xchg
aaa
rcr
stc
cmp
push
lods
push
push
dec
xor
jg
stos
push
cmp
mov
inc
inc
add
mov
xchg
daa
aaa
out
xor
movsb
push
popf
ljmp
mov
test
mov
sbb
sub
mov
add
pushf
aaa
pop
imul
aad
cld
push
or
jl
xor
aam
push
fcmovb
cmpsl
dec
jbe
aam
out
xor
xchg
jb
pop
andb
cmpsl
js
sub
adc
sbb
roll
mov
pop
test
mov
aaa
fisttps
adc
test
bound
jb
dec
or
sbb
hlt
out
push
and
test
leave
repnz
cmp
rcrl
jg
test
fidivrl
imul
ss
sbb
stos
mov
das
add
insb
push
jno
push
xchg
outsb
push
pop
out
enter
xor
idivl
inc
xchg
mov
popa
imul
cmp
shll
cmp
fistl
stos
pop
cli
sbb
pop
mov
nop
roll
ss
cmp
xchg
fsubs
rcll
push
cltd
out
addb
movzwl
and
aas
dec
mov
aam
cmp
mov
sbb
fwait
outsl
cmp
ds
mov
or
out
mov
out
pop
in
dec
subl
loop
pop
dec
sub
sub
jno
es
jmp
cmp
mov
fiadds
add
shl
out
mov
das
out
inc
popa
test
push
aaa
icebp
bound
pop
jo
mov
adc
push
xlat
pop
lret
adc
int
push
push
cli
ja
pushf
sbb
int
fs
scas
icebp
pushf
fmul
mov
int3
jl
mov
in
fsubl
daa
test
mov
xchg
leave
movsl
adc
jo
jge
push
inc
cltd
xchg
enter
sub
lock
cmp
loop
mov
and
cwtl
bt
rcr
add
lret
fistpl
stos
data16
add
sub
lahf
lcall
push
mov
sub
push
in
in
xchg
js
enter
ljmp
and
jo
scas
ss
xchg
arpl
test
fldenv
lods
ficomps
mov
jl
xor
and
lret
xor
pusha
pop
call
xor
mov
popf
lret
cmp
arpl
jb
orl
in
repz
repnz
push
xorb
ss
pop
push
dec
sbb
lods
add
mov
cwtl
mov
arpl
mov
or
mov
aad
repz
cmp
push
mov
pop
dec
pop
inc
sti
pop
inc
popa
jl
pusha
xchg
sarl
sbb
jae
lock
cli
divb
push
xchg
fisubl
and
popf
sub
mov
out
xorl
cmp
lret
in
inc
and
push
jge
std
outsl
cmp
xchg
out
fwait
addr16
fldenv
stos
cltd
js
sub
pop
loopne
push
sbb
inc
adc
cmp
je
cmp
addl
dec
dec
push
mov
sub
cmpb
imul
adc
mov
fists
and
adcb
xor
mov
nop
mov
mov
cld
and
cmp
and
push
xor
ja
jne
xchg
push
movsl
clc
push
aam
in
jno
fs
rorl
jp
pop
adc
sub
andb
popa
jo
repnz
sbb
adc
enter
cmp
and
es
pusha
bsf
jne
adc
inc
je
aam
rclb
cmp
and
js
fwait
lock
add
jmp
setne
sub
push
mov
cltd
mov
stos
rorb
cmpsl
daa
test
inc
lahf
imul
mov
shll
popf
test
ret
leave
xchg
or
insb
pop
push
adc
mov
enter
pushf
adc
leave
mov
mov
rol
daa
inc
es
stos
fistpl
arpl
cmp
fdivs
xchg
pop
cmp
mov
jo
cmp
addr16
cmp
add
fcoml
ds
data16
push
lret
mov
push
int
inc
insb
sub
ja
push
imul
call
sti
test
andb
xor
stc
mov
lret
movsl
fisubs
pop
int3
aam
or
aas
mov
ja
shl
cs
dec
fnstsw
and
xor
sbb
dec
inc
dec
orb
mov
push
icebp
rolb
test
mov
sub
outsb
pop
repnz
pop
cwtl
gs
test
fnsave
push
sbb
rcrl
mov
out
aas
add
inc
xlat
xlat
xor
lahf
push
lea
ja
in
in
mov
cmp
sub
mov
out
daa
inc
xor
inc
js
or
bswap
ret
sub
mov
xlat
sub
mov
test
xchg
jmp
testb
test
inc
das
mov
cmpsb
mov
pop
insl
lret
mov
lods
dec
call
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
jecxz
lods
fistl
iret
sub
sbb
test
or
int3
test
ljmp
mov
xchg
lahf
icebp
inc
xchg
mov
sub
xchg
mov
xchg
pushl
mov
into
xchg
je
sub
incl
jmp
call
add
jmp
call
lcall
