aam
and
pop
xchg
or
shll
jbe
call
mov
dec
mov
imull
add
xchg
jnp
std
movsl
sub
loop
mov
push
fadds
and
pop
clc
and
lahf
lret
jnp
lcall
int
sub
leave
imul
cmc
pusha
mov
sub
xor
sbb
adc
jae
roll
test
inc
sarb
push
inc
push
das
popa
pushf
adc
jecxz
fs
negb
fldt
test
inc
pop
and
js
cmp
aam
pmulhw
jmp
adc
push
xchg
pop
sbb
das
inc
adc
and
jbe
pop
stos
popa
movsb
dec
mov
cld
repnz
pop
pop
or
push
push
addr16
inc
hlt
jns
pop
fmull
outsl
jecxz
mov
daa
mov
push
dec
add
ss
mov
push
clc
popl
mov
pop
xchg
in
pop
inc
jns
out
ficoms
sub
dec
out
inc
sub
jg
jbe
pop
sub
mov
mov
ss
mov
fisttpll
xchg
jns
pop
ret
pop
insl
xchg
test
and
xor
lcall
lods
sbb
pusha
inc
rcl
and
mov
arpl
mov
jg
sub
jecxz
idivb
sub
fiadds
adc
add
xor
bound
sbb
notl
test
in
scas
mov
xchg
mov
leave
dec
cmp
mov
lcall
xchg
ficomps
jmp
jle
jecxz
mov
call
add
clc
popf
sub
pop
lcall
aam
bound
imul
and
dec
icebp
mov
daa
push
outsb
out
iret
in
and
adc
jo
data16
inc
lret
jne
xlat
mov
cmpl
imul
push
out
pop
cmpsl
clc
js
or
ret
hlt
cmpsb
test
sub
jnp
push
cmc
cld
mov
fstpl
or
shrl
lods
cmpsb
mov
add
cmp
pop
mov
cld
repnz
dec
stos
icebp
sbb
rorb
rcr
pop
adc
addr16
dec
lds
popa
testb
sbb
or
cli
cmp
push
push
lahf
std
cmpb
aad
fldcw
xlat
or
in
enter
insl
sbb
mov
stos
loop
decb
fisubrl
ljmp
or
std
jg
pop
lcall
jno
jp
out
faddl
fiadds
mov
pop
or
insb
pop
mov
cmpsb
adc
mov
shl
add
movsb
inc
or
nop
mov
mov
lods
fadds
pop
xchg
out
push
int
cmp
leave
dec
cmp
inc
pop
sub
movsl
ja
push
icebp
mov
pop
mov
mov
fs
mov
jnp
insl
mov
gs
adc
xchg
mov
sub
aas
cwtl
cmp
arpl
mov
lret
jmp
add
lret
lods
xchg
xor
lret
mov
js
dec
test
fnstenv
mov
cld
jp
add
dec
pushf
or
aam
test
loopne
mov
xor
mov
int3
push
enter
pushf
mov
popf
inc
maskmovq
xor
xlat
arpl
ljmp
mov
pop
divl
jbe
jns
pop
lds
test
pop
lds
inc
mov
shlb
ret
xor
jge
shl
shrb
mov
cmp
test
jbe
cmp
scas
fsubs
iret
rclb
lret
stos
sti
jp
cmpsb
rcrl
mov
cwtl
mov
fsubrs
bound
cmp
dec
ja
daa
mov
inc
leave
xchg
inc
xchg
sbb
jmp
push
pop
mov
rolb
repnz
cwtl
and
stos
xor
jecxz
jp
pusha
imul
cwtl
les
arpl
sarb
lds
or
add
fnstenv
sbb
ss
enter
xchg
xor
das
cmp
jg
cli
aad
enter
sbb
dec
sub
loopne
sub
add
jl
adc
sbb
and
into
stos
imul
sbb
mov
add
rclb
addr16
dec
cmp
pop
push
out
arpl
rolb
clc
nopl
lcall
pop
in
popa
xor
add
fs
lea
dec
inc
xchg
xor
pop
in
loope
cmp
and
dec
lods
jg
cmc
cmp
add
test
cmp
push
xchg
out
and
filds
fdivrs
insb
jle
rcll
dec
out
pushf
mov
add
inc
inc
mov
in
in
filds
and
sub
loop,pt
xor
movsl
pop
stc
insl
loop
adc
or
push
fwait
push
lret
cli
jne
stc
xor
sbb
cmp
adc
lret
fldenv
push
movsl
sub
xchg
add
cmp
movsb
daa
les
pop
push
stc
out
jo
je
push
stc
push
cmp
jp
pop
xor
cld
mov
ret
repz
data16
mov
cmpsl
lahf
daa
jne
push
push
inc
fsubs
cmp
sti
cmp
ret
sub
subb
lcall
out
fcmovnbe
xor
hlt
mov
dec
iret
jmp
aad
jb
pop
cmp
mov
lods
add
pop
xchg
fsubrl
add
add
sub
push
insb
out
pop
out
insb
lds
sub
sahf
sbb
xor
movsl
sub
mov
xchg
cmovbe
add
pop
popa
movsb
mov
pop
ret
in
sar
mov
mov
fnstsw
pop
lcall
cmc
add
idivb
mov
arpl
push
rorb
in
andb
push
jg
rorl
ret
lcall
dec
cld
xchg
aam
mov
jle
ficoms
adc
jb
adc
pop
aaa
pusha
mov
or
push
push
icebp
pushf
push
adc
lods
insb
pop
cmp
or
sbb
lods
imul
scas
mov
adc
shrl
jmp
call
push
mov
test
adc
imul
rep
mov
cld
adc
jns
mov
adc
test
add
pop
je
fs
dec
ss
mov
shlb
mov
popf
negb
nop
or
imulb
insb
inc
shll
jae
sub
or
gs
out
dec
js
push
outsl
loopne
pop
shr
pusha
add
inc
fildll
mov
sti
xlat
or
mov
pop
decl
mov
push
cmpb
fmuls
cwtl
xchg
sti
sti
mov
pushf
lahf
nop
insb
movsl
add
mov
rolb
setne
jp
inc
mov
cmpsb
outsl
insb
or
pop
gs
fldenv
pop
repz
xor
mov
add
aaa
mov
mov
repnz
shll
stos
shlb
sbb
lods
adc
fistl
aam
idiv
popa
shlb
sbb
aaa
je
xlat
sbb
rcll
in
insb
jmp
cld
punpckhbw
push
mov
cmpsl
das
dec
ja
adc
mov
cmovno
sbb
in
xlat
dec
sbb
xor
pop
push
stc
push
mov
leave
pop
jl
or
xor
nop
div
cs
add
jnp
arpl
mov
fdivr
adc
lds
mov
lret
lcall
aaa
outsl
stos
adc
and
mov
sbb
ret
mov
stos
or
in
xor
xor
mov
cmp
mov
fisubrs
out
pop
push
fwait
ss
arpl
in
mov
dec
or
inc
mov
or
mov
mov
daa
into
mov
mov
xchg
pop
cmp
fcompl
inc
sub
mov
xor
dec
hlt
lahf
xchg
ja
jb
xor
push
and
test
call
scas
adc
xor
or
lcall
jecxz
and
scas
movb
icebp
adcl
orb
pop
test
dec
ret
pop
bound
stc
push
es
in
cmp
mov
xchg
push
sahf
imul
pop
dec
orb
test
mov
cmp
xor
xor
aam
or
jecxz
xlat
stos
mov
js
push
push
inc
sbb
pop
sub
aaa
es
sub
cmpsl
dec
insb
xchg
mov
mov
xor
push
es
inc
push
nop
jne
rolb
ret
inc
and
jns
pop
xlat
insb
push
int3
movsb
pushf
in
adc
push
sub
cmp
xchg
pusha
sub
stos
lahf
adc
sbb
mov
ds
imul
lock
xor
loopne,pn
insb
cwtl
adc
testb
xchg
mov
jge
sti
xchg
mov
lret
and
dec
inc
inc
dec
pop
xor
ljmp
cmp
in
mov
sbb
scas
cmp
cmp
mov
cmpl
xlat
das
xchg
roll
push
pop
sub
adc
mov
lds
push
dec
fistps
ss
add
xor
popf
call
xlat
sarb
pop
jp
push
mov
mov
add
or
pop
jg
dec
and
lcall
mov
xor
lea
xchg
jge
sarl
mov
xchg
cmc
xchg
mov
add
and
test
lret
out
ss
xchg
fbld
mov
pop
or
outsb
inc
lock
std
roll
adc
jmp
into
sub
filds
add
mov
mov
nop
xor
or
xorb
pusha
shl
cmp
add
jp
sarl
arpl
or
adc
cli
psubb
je
sti
mov
lahf
sub
clc
inc
in
push
test
sti
or
aas
sub
movsl
inc
arpl
cld
testl
cmpsl
test
imul
hlt
sub
cwtl
mov
lods
bound
ret
in
incb
fwait
push
cs
lock
mov
jl
lret
dec
jl
cmp
xchg
ds
lock
push
idivl
push
jb
cmp
outsl
icebp
sbb
shll
inc
fidivrl
and
mov
pop
mov
sti
pusha
xchg
stos
and
pop
xor
inc
out
daa
aas
xchg
ret
subl
mov
mov
loope
dec
sub
outsb
imul
add
or
push
iret
add
out
cmc
xchg
push
dec
cmp
and
add
push
mov
inc
shlb
sbb
ljmp
jbe
jle
sbbb
lds
mov
mov
gs
stos
push
inc
out
adc
aad
pop
jmp
stc
and
sbb
xorl
and
and
sbb
fadd
xchg
cmpsb
sti
rolb
jmp
mov
add
or
js
iret
frstor
loope
cmp
or
mov
leave
dec
pushw
add
add
in
shll
xor
inc
push
je
mov
mov
fisubs
inc
es
add
imul
jbe
cltd
push
mov
mov
in
push
ret
inc
jmp
xchg
xchg
add
and
push
sub
incl
das
test
jbe
pop
ret
sbb
cli
movsb
ljmp
pop
subb
cmpsb
fcmove
daa
add
inc
aas
mov
inc
in
fdivrs
mov
jbe
in
cltd
push
sti
stos
mov
in
in
stos
out
lods
push
lret
xchg
stos
rcr
cmpsl
inc
stos
jb
gs
mov
sbb
mov
mov
testl
sbb
aaa
jmp
iret
lcall
fidivl
js
mov
and
sub
lods
jae
jle
adc
pop
ret
mov
iret
push
loope
ficomps
lds
push
mov
adc
rolb
mov
outsb
ljmp
pop
rcll
mov
repnz
iret
adcb
daa
in
rclb
xchg
repz
fiaddl
ja
loopne
dec
ret
dec
and
and
sub
loop
dec
pop
jge
xchg
push
lds
jg
out
xchg
mov
movsb
sbb
xchg
mov
cmp
jns
mov
fildl
jne
mov
cmp
mov
or
nop
enter
dec
mov
fdivrs
xchg
push
ret
mov
or
daa
int
in
mov
push
cmp
faddl
int
out
rcr
in
daa
fs
xchg
jo
push
xchg
dec
out
inc
scas
scas
sti
xor
mov
add
test
aas
jb,pt
aad
ss
mov
xor
xchg
xchg
insl
push
xorl
jg
add
adc
pop
jo
push
pushf
and
push
adc
push
jae
je
xchg
mov
or
jne
adc
andl
dec
mov
push
jmp
and
aas
xchg
jno
mov
test
mov
jnp
add
ds
add
jne
and
jge
stc
divb
or
out
es
cmp
outsb
jmp
rclb
hlt
pop
movsl
jl
fistl
jg
xchg
mov
pop
outsb
jbe
or
mov
inc
cmp
stc
xchg
sub
or
or
and
test
cmp
gs
test
pop
sbb
or
in
adc
mov
fldl
sbb
xor
gs
sbb
fisttpll
andb
add
xchg
idiv
lret
mov
test
fiadds
repz
sbb
sbb
stos
or
insb
aaa
xchg
popa
test
and
sbb
icebp
push
cwtl
rcrb
mov
es
push
add
jl
adc
pop
in
hlt
mov
fwait
mov
negl
cmp
add
sub
jnp
out
cltd
push
or
xchg
push
test
fnstcw
sbb
int
lods
pop
push
xor
adc
fists
clc
add
sub
push
je
in
lock
into
push
shll
adc
adc
scas
xor
push
cmp
add
inc
and
stc
orb
out
ficompl
cwtl
push
insl
cmpsl
jo
mov
flds
lret
cmp
lea
and
pushf
mov
in
aas
add
testl
cmp
cli
mov
pop
lret
sbb
lret
push
mov
aas
out
sbb
xor
or
jnp
outsb
pop
xor
test
xor
dec
adc
incb
sarb
in
daa
mov
lahf
sbb
out
mov
mov
dec
loop
cmc
in
mov
mov
into
cmp
jge
test
mov
cli
xlat
xchg
and
pop
out
cmp
shl
push
cli
mov
cmp
cmp
dec
cmpsl
jae
adcl
sub
in
mov
int
dec
cmp
gs
and
movsl
nop
jle
mov
mov
pop
mov
mov
sub
test
mov
dec
cmp
gs
xacquire
pop
fcom
cwtl
sbb
adc
xchg
and
and
and
ror
inc
out
fst
xchg
fwait
clc
lea
sbb
daa
push
fmull
inc
or
inc
mov
xchg
loop
ret
icebp
xor
dec
loopne
xor
sti
xchg
mov
xchg
fdivrl
xor
mov
push
or
pop
into
xchg
fwait
outsb
mov
and
push
repz
mov
mov
dec
mov
pop
and
sub
sbb
pop
inc
add
mov
daa
rcl
cmpsl
out
xor
push
das
dec
pop
pop
aam
adc
push
xchg
mov
arpl
insb
push
aas
test
jp
testl
jmp
jle
inc
jnp
loop
and
outsl
popa
cs
scas
scas
xchg
cltd
pop
arpl
cmc
pop
rolb
ret
out
mov
in
xor
and
and
cli
mov
in
call
mov
mov
sbb
scas
icebp
outsb
xor
mov
adc
jno
and
popf
rcll
stos
xor
sbb
fcmovnbe
data16
inc
repnz
or
cmp
sub
ja
lahf
add
int3
and
adc
mov
mov
call
xchg
push
xlat
repnz
add
add
into
scas
int
cmc
and
fst
or
and
mov
std
inc
aaa
aas
call
sti
rorl
push
sbb
fistl
pop
repnz
sub
sbb
pop
add
adc
mov
pop
inc
mov
movsb
loop
mov
pop
shlb
outsb
and
hlt
and
repnz
scas
hlt
or
cmp
dec
pop
xor
imul
mov
rclb
test
push
adc
flds
icebp
mov
cmp
mov
pop
add
outsb
and
and
mov
lods
sbb
out
dec
xor
cmp
cmc
pushf
xchg
cmp
jmp
sbb
mov
cmpl
sub
insl
add
clc
and
decl
ret
jmp
xchg
cld
jp
je
adc
or
enter
fidivl
scas
ds
sbb
mov
push
cmp
adc
mov
jbe
jb
cmp
xchg
lret
sub
push
adc
sub
inc
jne
sar
cmp
pop
rol
and
dec
push
popf
repnz
mov
jb
pop
add
add
pop
mov
xor
cmp
mov
popf
push
pop
cmp
test
pop
sub
mov
loop
lods
sub
dec
xchg
shrl
lret
inc
mov
fidivrl
inc
scas
push
or
mov
sahf
xchg
push
js
mov
fdivs
jbe
push
mov
jb
addr16
lock
and
mov
shrl
jecxz
loopne
cmp
cmp
cli
js
mov
and
call
testl
jl
ficoms
sti
and
dec
repnz
fidivrl
ficomps
mov
jne
or
repnz
and
mov
push
fisttpll
sbb
insb
mov
mov
cli
xorl
cmp
inc
xlat
push
scas
cmp
pushf
cs
stc
mov
jne
and
js
icebp
sub
inc
ja
pop
rcll
pop
adc
adc
push
sub
jg
arpl
pop
stos
rcrb
add
outsb
mov
es
imul
adc
dec
in
push
mov
push
pop
test
inc
mov
imul
mov
jg
fisubs
out
cmc
push
cmc
pop
sub
jne
jb
sub
scas
adc
dec
jl
adc
mulb
mov
pushf
rcrb
push
mov
pop
dec
and
in
and
popa
mov
push
daa
or
mov
add
outsl
and
lcall
fistl
dec
dec
hlt
dec
mov
push
inc
cli
lahf
out
loop
jo
mov
add
xchg
test
ja
shll
cmp
adc
ss
xor
test
sub
and
comiss
sub
mov
aas
inc
ds
std
ss
popa
es
shrl
pop
stc
fstp
jmp
loop
mov
jbe
outsl
es
mov
sti
xchg
shrl
ja
or
adc
xchg
pop
repz
dec
fbld
xor
call
ret
les
dec
jp
cmp
loopne
in
test
add
or
iret
mov
sti
mov
fwait
lds
mov
pop
gs
and
or
push
xlat
jbe
shlb
js
dec
xchg
inc
out
cmp
pushf
fwait
sbb
xchg
mov
movsb
imul
es
inc
stos
sub
pop
enter
mov
pop
inc
adc
fucomi
lret
xchg
pop
adc
scas
xchg
push
rclb
aaa
mov
xchg
repnz
or
js
cmp
hlt
cld
lods
repz
dec
in
or
jno
insl
inc
add
out
ret
std
loopne
sbb
test
cmc
cltd
push
clc
push
int
es
int
aad
jp
lret
repnz
adc
lds
fadds
in
in
jl
sar
fldl
cmp
jne
mov
and
cmp
sbb
subl
sti
add
mov
mov
fisubrl
add
fisubrl
push
popf
push
xor
push
aas
sbb
sub
fs
pop
rcrl
popf
stos
lret
push
sbb
pop
jb
adc
mov
jl
lds
fbstp
fcomps
adc
mov
int
ljmp
and
jae
cmp
sarb
mov
cmp
sahf
push
icebp
lock
add
xchg
jp
sub
lret
sbb
shrb
push
repz
add
ss
and
mov
mov
mov
adc
xchg
cmp
std
lds
arpl
jbe
jp
out
fidivrs
sahf
nop
gs
push
pusha
jp
cmp
test
push
outsl
push
fsubs
adc
cltd
lahf
xor
insl
xchg
mov
std
mov
add
pop
mov
cmp
les
pop
aaa
xchg
dec
mov
cmpsl
mov
mov
push
dec
or
jmp
push
sbb
outsl
sbb
cmp
shrb
movsb
xchg
insb
std
lods
cmp
imulb
rclb
mov
call
and
mov
jo
sbb
mov
mov
inc
fwait
in
ret
mov
inc
sub
or
mov
jno
push
xchg
insl
in
jbe
mov
call
gs
test
or
imul
andl
jo
jo
jle
fs
mov
push
xlat
push
fsts
mov
nop
sub
pop
int
pusha
sub
adc
and
mov
in
nop
push
and
repz
cwtl
pop
sbb
ficompl
nop
les
xlat
xor
sub
jno
fwait
jg
ljmp
test
shrl
das
mov
sub
inc
into
idivb
notb
fld1
jmp
or
push
sbb
dec
addr16
sub
adc
push
mov
lea
enter
ljmp
push
mov
xor
iret
mov
mov
lahf
inc
js
inc
mov
dec
popl
sarl
pop
sti
push
mov
orb
daa
sbb
lret
in
jns
jnp
push
fstpt
enter
in
cmp
lret
sahf
hlt
sub
push
push
add
jno
cmp
fmull
in
cli
fst
mov
fstl
leave
rorb
andl
sbb
pop
sahf
dec
or
pop
sub
int
xchg
dec
adc
ss
icebp
ret
adc
lahf
icebp
push
lret
out
push
stos
dec
int3
cmp
std
add
push
test
dec
push
xchg
push
mov
jmp
addr16
mov
adc
sbb
outsl
push
js
imul
sar
repnz
std
ret
scas
add
or
inc
xor
daa
push
popf
push
add
fdivrl
cmp
rcl
test
mov
or
adc
xor
and
int3
mov
pop
xchg
push
fdivrl
or
daa
mov
pusha
add
neg
fildll
sti
daa
add
pop
ljmp
xchg
xor
dec
push
xchg
nop
movl
jmp
ret
mov
cmp
or
mov
sub
inc
cmp
insl
jne
pop
jne
jnp
jne
rcrl
shll
dec
in
and
clc
lahf
rcrl
cmpsb
shlb
mov
into
jns
cs
mov
inc
clc
aam
and
mov
mov
sub
jle
mov
imul
lods
xchg
xchg
in
ret
mov
jno
ret
movl
mov
faddl
and
out
mulps
mov
adc
adc
push
push
xchg
sbb
in
js
push
jmp
pop
and
jmp
pop
pop
aam
int3
mov
or
jle
in
lea
iret
scas
orb
stos
mov
test
rcrl
pusha
adcb
mov
adc
sub
adc
pop
popf
add
mov
pop
sbb
adc
push
cmp
div
sub
mov
je
jae
andl
inc
xor
imul
pop
mov
or
lds
mov
xchg
mov
dec
bswap
adc
pusha
adc
sbb
pop
push
popf
inc
jmp
lods
shr
and
add
popa
inc
dec
repz
mov
xchg
xchg
imul
sub
inc
or
or
inc
movsl
nop
insb
mov
in
fidivrl
and
mov
das
sar
sub
leave
or
loope
movsb
sbbl
fsts
cmp
cmp
push
or
cmc
sahf
insb
ret
mov
dec
loop
bound
pop
lcall
sti
mov
ds
sub
negl
mov
pop
lods
cmp
sbb
ds
jge
lahf
lcall
inc
es
inc
stos
vxorps
and
cmpsb
jns
dec
test
ds
fldcw
jb
addr16
into
push
push
cltd
push
dec
dec
xchg
and
push
pop
or
into
dec
lahf
sbb
lods
mov
shr
sub
xchg
push
pop
cmp
pop
or
fstpl
lcall
cltd
mov
mov
insb
cld
or
cmp
pop
pop
mov
mov
cli
pop
cmc
fstps
pop
xchg
dec
mov
lock
xor
out
dec
inc
aam
mov
sbb
ficomps
mov
aam
pop
je
mov
dec
enter
icebp
fsubrl
popf
xor
inc
in
sarb
mov
adc
mov
mov
std
add
aad
mov
dec
adc
mov
lods
mov
clc
xchg
aaa
mov
movsb
lds
pop
je
inc
lods
or
sbb
mov
lock
mov
mov
loopne
xchg
std
inc
lret
mov
call
sbb
test
sub
jge
in
mov
fs
rcl
push
push
sbb
xor
xchg
es
mov
mov
jo
jge
inc
outsb
scas
mov
hlt
mov
cmc
test
mov
ss
sbb
xchg
in
int
jp
add
jbe
repz
test
fwait
mov
sbb
int3
ds
mov
push
mov
fiaddl
adcb
repz
and
xchg
jle
dec
div
pop
inc
mov
fiaddl
cld
sub
mov
movzbl
loope
dec
xchg
insl
jg
sbb
dec
xchg
arpl
add
xchg
xor
pop
sub
push
sub
xchg
jo
jns
xchg
adc
adc
iret
cmpsl
pop
jae
jns
pop
pop
jle
jg
add
mov
pop
pop
popf
pop
xlat
inc
rolb
out
cmpsl
adc
push
pop
cmp
lcall
cmp
push
jns
fstpl
pop
sarb
rorb
jb
sbb
mov
mov
adc
jns
cmpsl
mov
test
es
repnz
mov
cs
mov
je
push
popa
ret
fsubr
and
test
stc
jp
lcall
aaa
or
je
mov
xrelease
jecxz
jecxz
nop
pop
push
pop
bound
test
sbb
adc
rorb
iret
inc
test
push
iret
movsb
inc
inc
and
inc
mov
mov
es
jo
push
in
mov
pop
dec
sbb
push
or
add
fidivs
cltd
cmp
cmpl
mov
out
in
mov
in
sbb
aad
jbe
sbb
rcl
cmp
out
mov
repz
dec
dec
imul
nop
cmp
gs
sbb
aam
ja
add
pop
push
or
push
test
fimuls
mov
dec
push
in
lret
aam
cld
mov
xchg
push
mov
jp
in
je
xchg
iret
inc
and
int3
call
pop
test
in
sti
addr16
adc
repz
dec
lret
xchg
push
les
or
or
xor
pop
jecxz
jge
and
push
out
push
mov
ret
mov
add
adc
movsb
stc
and
adc
push
jl
push
icebp
jle
dec
std
iret
lcall
aaa
ret
mov
shrb
cmp
jl
mov
dec
insb
add
sub
adc
push
push
sub
xchg
pop
fisttps
and
push
dec
aad
ret
scas
xchg
out
cltd
jge
shlb
icebp
cmp
mov
xchg
dec
lahf
mov
push
cmp
mov
insb
pop
push
loop
mov
clc
int
cmpsl
dec
outsl
movsl
and
sti
test
inc
jl
push
jne
es
cmpsl
lea
xor
jbe
push
mov
lea
cltd
xor
std
push
lcall
std
jecxz
and
subl
sub
rcrb
push
nop
stos
dec
xchg
or
test
sbb
and
pop
mov
test
or
jnp
mov
jge
sbb
add
push
dec
nop
test
xor
jle
cmp
les
jns
adc
cwtl
stos
pop
mov
add
cs
inc
push
or
sub
and
or
push
cli
xor
mov
and
fistpll
mov
xchg
test
push
gs
push
pop
cmp
push
adc
iret
enter
xorl
loop
xchg
rorb
push
cltd
fnstenv
lods
or
or
mov
cmp
sbb
xor
dec
scas
lds
out
jecxz
inc
adc
adc
icebp
or
aas
pushf
gs
inc
inc
shll
jns
jle
out
add
jl
sbb
nop
or
push
or
and
cmpsb
cmp
fildl
andb
inc
cmpsl
cld
pop
lds
repnz
mov
jo
jg
pavgb
jl
adc
ds
adc
or
fcomps
aaa
lds
xchg
outsl
xchg
jmp
sbb
pop
pop
jle
fnsave
adc
es
jg
js
fs
pop
dec
pushf
xchg
dec
sbb
adc
sbb
imul
cltd
loop
adc
fdivrp
xlat
aam
flds
popa
adc
imul
pushf
adcl
fstpt
lcall
sub
pusha
pusha
cwtl
rcr
push
cmpsb
rolb
lret
cmp
add
add
lods
jp
imul
push
cmc
cmc
mov
sar
push
loop
lods
sahf
test
enter
push
imul
dec
push
jp
movsb
add
sti
enter
xor
out
xorl
loopne
add
int3
ljmp
jae
sub
and
jnp
xor
cmp
push
das
shr
stos
fildl
sub
push
lods
dec
sub
adc
stc
scas
mov
lret
pop
addr16
subl
xchg
sti
ficomps
mov
add
shlb
pusha
jmp
adc
daa
add
aas
addr16
orb
sbb
imul
jnp
loopne
lahf
or
jl
loop
cmc
mov
jg
out
and
xor
out
or
add
loop
mov
loopne
sub
scas
xor
jge
xchg
inc
jnp
xchg
notl
es
lea
jnp
mov
add
insb
insb
cli
push
mov
sub
orb
mov
push
cmp
mov
or
bound
push
add
fbstp
mov
sub
push
dec
adc
and
lcall
jg
ja
xor
imul
or
adc
mov
pop
push
in
xorl
ljmp
mov
xchg
in
xchg
call
xor
pop
pushf
push
jae
mov
cmp
ja
mov
xchg
mov
clc
or
or
or
jo
dec
loop
int3
adcb
xchg
mov
dec
xor
ret
sub
scas
xor
sbb
mov
shlb
cs
lea
inc
stos
int3
push
mov
std
pop
les
inc
and
xchg
outsb
xor
mov
daa
mov
add
out
fisttps
dec
and
scas
lret
jb
xchg
pusha
arpl
xor
add
in
mov
dec
dec
negb
shll
add
in
mov
out
in
sub
push
dec
dec
mov
or
scas
mov
xchg
shlb
cmpsl
mov
inc
mov
std
lock
addr16
dec
adc
pop
ds
mov
out
jbe
mov
aaa
mov
loopne
aam
and
cmp
xor
daa
aas
mov
mov
and
xor
mov
inc
mov
daa
inc
pop
push
push
aam
mov
cwtl
in
movsl
and
xchg
pop
xchg
lahf
sub
xor
or
dec
inc
movsb
push
push
daa
xchg
fs
gs
insb
in
lods
and
jge
pop
push
jle
dec
push
mov
cmp
cmp
into
lret
dec
or
mov
push
fiaddl
rcrb
fs
out
mov
pop
pop
ljmp
jge
xchg
or
adc
pusha
aas
loopne
cmp
out
adc
or
int
aam
pop
les
dec
fdiv
loopne
xchg
dec
das
pop
or
sbb
xchg
jnp
and
or
cmpl
push
mov
adc
loope
aam
jp
lea
rolb
mov
jae
rcr
addl
cmpl
jge
dec
hlt
mov
in
lds
push
ja
add
dec
stos
ljmp
aad
and
dec
repnz
in
dec
sahf
lret
mov
aas
cltd
xchg
pop
adc
sub
xor
or
mov
roll
cmpsl
aaa
jecxz
and
ret
jg
xlat
movl
dec
icebp
sub
push
pop
je
aad
loopne
out
push
cltd
jb
ljmp
rolb
push
je,pn
mov
or
in
push
xchg
imull
sub
imul
inc
into
movb
mov
and
xchg
shll
fmull
ljmp
cmc
mov
in
mov
mov
or
fstpl
jle
les
mov
mov
or
mov
leave
stc
js
sub
xchg
xchg
mov
pop
push
mov
dec
mov
js
xor
lret
mov
adc
loop
insb
rolb
aas
lret
inc
dec
outsb
aaa
sub
fistpl
sub
push
ret
lret
xlat
je
xchg
data16
mov
mov
pop
sub
xchg
lock
test
xor
sbb
mov
mov
ds
mov
or
faddl
mov
lea
or
xchg
inc
or
and
fstps
xor
addr16
add
add
addr16
jg
sub
outsb
ret
test
daa
fs
sub
mov
cmp
jmp
loope
pushf
sub
or
addr16
xlat
rclb
mov
andl
jp
push
dec
xor
cwtl
fs
ja
pop
sbb
popa
shrd
hlt
or
popf
sti
mov
xlat
adc
aad
cltd
or
cld
negb
jmp
mov
imul
or
loope
push
rcr
pop
out
pop
xchg
ja
in
fistl
outsl
jb
rcrb
jno
push
push
movsl
cmp
or
rcrl
cli
xchg
push
cmp
add
xchg
xor
mov
push
test
fsubrl
pop
out
add
call
jbe
out
or
je
push
or
jbe
jmp
push
dec
sbb
test
inc
js
cld
adc
insl
daa
push
arpl
add
or
mov
push
mov
xchg
fiadds
inc
arpl
xchg
xchg
jns
fldl
mov
int
jo
cmp
popa
mov
std
push
lret
cmp
cmp
scas
inc
repz
add
inc
ret
xor
ja
insb
jl
shrb
adc
cli
dec
cmpsl
pop
push
fcoms
aam
mov
sub
push
pusha
mov
pop
lods
inc
mov
popa
mov
out
sti
dec
jl
not
js
movsl
aas
call
js
push
lahf
lods
sub
mov
and
dec
push
sbb
scas
aad
cmp
lret
les
pushf
jg
ljmp
pop
jecxz
mov
inc
test
cltd
shlb
mov
scas
cmp
fdivrs
negl
adc
pop
inc
mov
ljmp
loopne
and
cmp
or
loopne
mov
push
jmp
jge
dec
dec
nop
pusha
rorb
nop
mov
inc
cmp
or
arpl
push
xor
inc
aas
leave
cmp
ja
pop
fmull
push
outsb
hlt
je
imul
outsb
mov
or
cli
xchg
xor
adc
mov
or
mov
daa
mov
dec
jmp
cmp
hlt
mov
jb
push
lea
pop
cmpb
fisttpl
push
pop
mov
xchg
adc
or
push
lcall
ss
or
cmp
scas
jns
and
scas
into
and
or
push
jno
xchg
jne
rorb
add
cwtl
push
mov
jbe
xor
loop
imul
testb
stc
ss
or
into
out
sbb
test
cltd
dec
mov
mov
aas
adc
mov
leave
pop
js
mov
mov
mov
xor
jns
add
jae
ja
pop
shll
into
jecxz
xchg
mov
inc
fstl
add
int
xchg
in
and
movsb
pop
jb
mov
mov
or
std
repnz
leave
data16
or
rcrl
jno
insl
xor
andb
out
aad
cmp
jne
xor
mov
dec
mov
mov
stos
mov
or
fs
sbbl
pop
ja
mov
adc
shrb
add
insb
ljmp
or
shlb
mov
lahf
jbe
out
imul
nop
push
cmp
xor
jne
mov
sub
sub
or
mov
out
iret
arpl
push
ret
loope
mov
fmul
call
ljmp
pop
cmp
stos
jb
lret
xchg
xor
repnz
test
sub
je
sbb
mov
xchg
mov
aaa
fs
push
imul
adc
data16
mov
adc
mov
cmp
in
mov
push
fisubrl
push
shll
push
test
push
inc
leave
xchg
jl
inc
ss
int3
pop
sbb
sub
rorb
xchg
jo
mov
pop
ret
jae
adc
movsb
inc
mov
xor
mov
xchg
sbb
stos
orb
loop
or
hlt
and
jbe
stos
dec
xor
adc
in
imul
rorb
arpl
cltd
push
add
xchg
mov
cli
jecxz
mov
test
pop
xchg
call
mov
cmpsl
ret
mov
sub
out
mov
mov
sbb
leave
daa
xchg
iret
notl
jecxz
in
xchg
scas
test
xchg
das
mov
push
jns
inc
lea
imul
lea
out
inc
out
jns
lcall
push
pop
cwtl
cmc
bound
data16
jle
push
cli
pop
sbb
loop
mov
iret
in
int
xor
es
xchg
pop
loopne
lock
jo
xchg
xchg
in
cld
ds
aad
mov
mov
cmp
popf
adc
ds
mov
pop
xchg
dec
mov
sbbb
loope
lret
xor
mov
cmp
pop
or
iret
lret
or
fisttpll
jg
frstor
mov
adc
push
jmp
iret
ljmp
in
mov
sub
jne
cmp
jg
mov
add
mov
pop
inc
mov
and
sub
cmp
push
cld
sub
jecxz
sub
xor
in
fldcw
stc
inc
pop
mov
jg
outsl
popf
rol
adcb
jle
xchg
cmpsl
push
jge
dec
andl
in
cwtl
mov
sbb
stos
xchg
icebp
fcmovnu
mov
std
or
xchg
adc
or
adc
std
testb
xlat
xchg
add
dec
inc
cmc
push
pushf
xor
orl
ret
pop
xlat
xchg
andb
xchg
adc
lods
leave
lock
xor
and
sub
push
cli
adc
pushf
in
es
add
in
sbb
sub
push
jl
xor
add
shl
incb
call
xchg
dec
push
sbb
xchg
xor
data16
mov
repz
adc
xchg
ds
int
call
fimuls
lods
mov
daa
xchg
push
mov
adc
xchg
clc
shlb
enter
std
mov
mov
out
clc
pushf
ljmp
sbb
nop
addr16
sbb
das
dec
call
stos
sarl
pop
leave
xchg
ja
fimull
cmpsb
out
std
xor
orl
xor
xchg
cmp
pushf
mov
jbe
adc
jb
pop
and
sub
add
loopne
inc
fwait
gs
daa
lock
aas
mov
aad
xchg
mov
add
leave
and
inc
mov
aad
sub
dec
or
popl
aaa
add
add
add
push
push
jg
push
push
fistpll
mov
xchg
sub
aas
iret
shll
iret
add
stos
push
add
in
fidivs
push
push
cltd
and
imul
jg
mov
addr16
test
stos
cmpsl
cmp
pop
test
mov
jno
jecxz
mov
mull
sub
cmp
push
sbb
fldcw
inc
dec
cmp
xchg
out
out
cmp
push
shll
icebp
lods
add
xchg
test
sbb
adc
mov
popa
mov
aad
sub
mov
pusha
sub
mov
mov
mov
xor
pop
fidivrl
std
dec
inc
enter
jne
rcrl
lret
jmp
cmp
inc
addr16
mov
pop
hlt
mov
movsl
cmp
and
add
out
or
mov
xor
xchg
jbe
lahf
or
sti
nop
sbb
test
mov
sub
push
pop
jno
and
scas
shl
mov
pop
int3
push
adc
cltd
push
lea
pop
lds
xchg
rcrl
cmpsl
setg
pop
mov
ds
mov
push
out
lcall
xchg
or
scas
out
stos
sahf
stos
das
test
loope
sbb
push
ss
hlt
mov
imul
or
push
insl
movsl
rorl
pop
movsb
scas
cmpsl
inc
push
jo
aam
out
je
pop
push
movsl
lods
lret
addr16
mov
in
aad
fidivs
out
lret
test
fistpll
sbb
insb
pop
clc
fcmovb
pop
jmp
int
jmp
mov
rcr
lods
dec
push
mov
xor
movsb
sarb
movsl
xchg
mull
inc
loope
jae
mov
add
fs
push
or
cmp
es
ss
outsb
outsb
inc
fisubrs
inc
out
mov
mov
notl
cmp
mov
sti
sub
das
pushf
js
cs
bound
int
push
jno
int3
dec
inc
fiadds
push
push
and
dec
out
jb
add
outsb
mov
out
rorl
call
mov
sub
mov
mov
and
mov
mov
jae
jae
addr16
ljmp
add
fnstcw
push
push
fdiv
dec
inc
mov
sub
mov
ljmp
cmpsb
add
rcrb
jno
dec
mov
add
je
pop
jl
xchg
hlt
cmc
lcall
inc
mov
int
inc
mov
or
add
cld
popa
inc
mov
imul
inc
movsl
rclb
push
xchg
dec
lret
outsb
add
cwtl
push
xchg
out
cmp
push
jg
push
pushf
rcr
push
cmc
jecxz
pop
leave
addr16
xor
xor
in
outsb
adc
xlat
rcrb
jbe
test
std
sub
mov
xchg
xor
mov
xor
andl
pop
xchg
repz
sbb
lods
or
push
sbb
jbe
xchg
inc
mov
test
cld
sahf
inc
xor
push
cmovae
jge
inc
mov
es
jb
lds
push
and
lcall
xchg
mov
or
add
jae
push
rorl
ja
jb
pop
stc
add
in
jne
push
adc
arpl
sub
mov
sub
push
aaa
mov
push
ds
je
jge
orb
jbe
movswl
stc
outsl
adc
cli
es
or
or
cltd
mov
das
and
mov
add
arpl
aas
xchg
pop
popa
mov
push
imul
int3
dec
out
mov
jp
movsb
push
icebp
aas
test
negl
xor
mov
dec
sub
lods
mov
jnp
int3
mov
jmp
xor
jae
andb
leave
sub
xor
pop
ja
jb
mov
jne
stc
lcall
sbb
aaa
adc
pop
jo
push
jmp
mov
pop
jnp
repz
arpl
cmp
ret
mov
cltd
or
xlat
dec
jmp
orl
orl
adc
xor
inc
stos
push
sbb
stc
popf
jecxz
sbb
mov
sub
xorl
xchg
rclb
xor
inc
sub
into
les
dec
inc
sub
cmpsl
js
push
cli
mov
jl
mull
xchg
mov
mov
loopne
test
std
inc
xchg
adc
pop
push
xchg
mov
loope
push
sar
pop
adc
mov
mov
ja
pop
inc
push
sti
mov
shrb
and
dec
aam
xchg
mov
subb
mov
in
cmpsl
jmp
insl
jo
shrl
je
mov
fildl
leave
mov
pop
jbe
repnz
mov
js
addr16
adc
push
test
scas
imul
mov
sub
loop
lds
fisttpll
inc
mov
cwtl
cmc
and
pop
add
shll
sub
ja
rolb
or
aad
test
insb
push
repnz
inc
jns
mov
test
aam
mov
xor
and
lods
or
mov
sub
ret
xchg
iret
aam
and
xchg
fucom
mov
mov
scas
cld
inc
inc
cmp
add
adc
pop
jne
in
mov
pushf
int3
ret
sbb
sub
pop
sbb
sbb
rclb
inc
inc
or
xchg
int3
cmp
adc
mov
dec
cli
pop
pop
adc
xor
adc
mov
movsb
filds
rclb
mov
push
lds
bnd
dec
and
sbb
divl
lret
out
ja
xchg
xchg
xchg
in
call
stos
pop
xchg
mov
mov
int
insl
inc
mov
fldt
icebp
push
out
push
lret
pop
ret
sub
jge
mov
push
jnp
cmpsl
in
lret
fs
in
jecxz
je
fsubs
cmp
sahf
popf
xchg
xchg
std
aaa
xchg
and
imul
push
pop
lahf
pop
inc
jecxz
pop
cltd
jnp
aas
insl
xchg
fisttpl
push
nop
test
aaa
hlt
dec
jno
dec
enter
iret
rcll
push
repnz
inc
cwtl
jmp
fisttpl
std
pushf
mov
mulb
lahf
jne
jnp
call
inc
cmp
jmp
popa
sub
lods
sarl
loopne
push
lods
mov
ret
rcr
and
xchg
ss
fistpll
cld
push
arpl
fdivl
jne
ss
xor
mov
inc
dec
or
mov
test
and
add
testb
mov
daa
sub
pushf
stc
pop
push
jb
js
jl
icebp
mov
cmp
push
hlt
mov
and
jne
les
inc
sub
repnz
leave
cmpsb
pop
sub
xor
ljmp
pop
push
les
xor
and
dec
mov
and
divb
add
clc
push
cmpsb
arpl
addb
arpl
icebp
fst
mov
dec
lods
dec
jmp
xchg
addr16
dec
shll
push
lcall
jg
in
test
lret
mov
mov
dec
pop
mov
pop
test
jno
xchg
daa
jae
add
add
mov
mov
push
pop
outsb
enter
jo
jg
pop
lahf
sahf
mov
in
inc
xchg
dec
jmp
inc
imulb
push
sti
jne
add
ror
inc
xchg
in
mov
movb
and
cmp
mov
and
inc
gs
inc
and
leave
push
data16
insl
arpl
add
loop
rorb
jge
xchg
dec
xor
jl
xchg
test
xor
aas
pop
mov
stos
mov
mov
fnstcw
xchg
rorb
push
mov
xchg
pusha
mov
jno,pt
test
mov
add
dec
mov
insl
sub
pop
out
dec
xchg
and
cwtl
mov
idivb
mov
pop
xor
sahf
rorb
insl
jne
push
or
cmp
les
sbb
sbb
out
test
push
leave
dec
aaa
lret
lret
aaa
rcrb
inc
fcoml
mov
lds
dec
stos
push
mulps
mov
mov
add
jmp
inc
cli
flds
adc
fdivrp
xchg
push
cld
mov
stos
xchg
ss
es
and
or
in
push
jbe
or
fsubrl
push
sbb
icebp
enter
lahf
pop
arpl
jmp
or
and
mov
pop
and
push
xchg
mov
pop
repnz
shll
dec
movsl
push
add
jg
pop
rcrb
js
or
out
into
push
js
pop
push
div
pushf
or
ss
mov
xor
mov
xchg
rol
iret
mov
add
sbb
or
mov
jae
xor
movsl
test
jb
mov
sub
ficoms
sub
data16
cmp
in
sahf
pushl
js
inc
mov
adc
and
or
mov
outsb
cmp
mov
mov
xchg
cmp
fadds
add
inc
out
xor
push
test
stc
push
in
dec
pop
adc
or
mov
inc
sti
andb
pop
rcrl
cmp
mov
pop
or
xor
pop
fidivs
shll
mov
push
aad
pop
dec
inc
push
cld
or
mov
sti
jnp
push
cmp
ret
and
lods
stc
xchg
xchg
jb
push
sahf
insl
add
jb
dec
and
pop
mov
cs
fisubl
dec
xchg
outsl
jns
enter
add
inc
mov
faddl
je
or
dec
jb
mov
sub
xor
or
jnp
outsl
jns
pop
xchg
ret
fdivrl
mov
add
negl
mov
mov
les
add
shrb
adc
sbb
xor
movsb
cmc
jne
cmp
testl
sarl
cmp
test
fmulp
jmp
dec
mov
cwtl
cli
fstl
adc
in
inc
cmp
mov
lahf
imul
rclb
lods
outsb
sub
ja
inc
out
pop
and
les
mov
shrl
por
sub
ja
cmpsl
or
mov
jle
stc
cmp
iret
xor
stc
je
call
jns
and
int3
xchg
sbb
jecxz
outsl
lahf
pop
ljmp
lea
xchg
pop
mov
adc
pop
or
pop
adc
popf
sub
test
sbb
ljmp
repnz
xorb
sub
mov
or
inc
sub
add
sbb
mov
dec
push
xor
jae
mov
scas
lock
mov
jge
hlt
ret
fsubrl
mov
mov
adc
or
mov
lret
mov
inc
sbb
push
dec
push
or
lods
push
loope
das
add
loopne
pop
mov
add
add
out
mov
xor
or
mov
mov
cmp
pop
je
cmp
mulb
loop
shl
lds
pop
or
mov
jb
sub
sub
bound
mov
insb
add
mov
pop
push
cltd
lret
push
loop
mov
fwait
mov
ss
xlat
push
inc
jle
out
jns
sbb
jb
mov
je
jmp
sub
mov
scas
in
adc
out
or
fdivrl
loop
popf
std
sbb
out
out
clc
fucom
pop
clc
mov
rcrb
rep
dec
jge
lods
aad
jmpw
sub
fs
fisubl
pop
add
jbe
dec
cwtl
jge
mov
inc
loopne
push
out
push
jge
cmp
push
ror
or
jo
mov
jo
enter
adc
mov
push
mov
push
data16
push
inc
xchg
jp
jge
add
test
loopne
mov
add
lods
mov
sti
dec
push
xchg
sbb
sbb
dec
xchg
out
daa
xor
jns
pusha
push
mov
pop
xchg
xor
cmp
mov
fcmovnu
or
outsl
ljmp
scas
cmp
test
jo
xchg
dec
mov
cltd
cmp
jns
xchg
cmp
inc
dec
push
repz
adcb
lret
leave
sbb
or
fadd
sbb
data16
xor
pusha
outsl
lahf
sahf
push
jnp
movsl
xchg
push
in
out
aad
dec
inc
imul
inc
push
cmc
lea
cmp
and
bound
popf
jno
inc
dec
mov
das
xor
lea
std
in
adc
cmp
pop
cwtl
jnp
out
fucomip
sbb
cwtl
xchg
cmpsb
xlat
mov
cwtl
sub
push
sbb
stc
das
cmp
mov
pop
gs
scas
jge
outsb
add
mov
sub
mov
jns
cli
outsb
xor
test
aad
jns
iret
cltd
inc
vorpd
pop
pop
test
push
mov
push
outsl
inc
aas
aad
testl
push
inc
jbe
add
lock
out
daa
sahf
push
pop
clc
xchg
fmuls
insl
lds
fwait
clc
sbb
jmp
dec
xlat
aam
fstl
call
xlat
and
inc
push
test
dec
push
inc
lea
stc
rorb
fidivs
mov
add
mull
addr16
scas
sbb
xcrypt-ctr
cmpsl
cltd
out
sub
mov
and
test
or
push
sbb
pop
mov
sub
xchg
dec
mov
out
sub
adc
jnp
mov
in
fisubs
xor
iret
ljmp
xchg
and
and
mov
out
sbb
mov
inc
nop
pop
add
sub
add
rorb
and
stc
cli
jg
dec
jb
fcomps
test
popa
cmp
sub
decb
inc
xor
adc
mov
fwait
mov
dec
mov
orl
xor
lock
mov
push
enter
cmp
dec
and
pop
fsubl
inc
xor
or
sbb
jle
enter
mov
shll
leave
iret
xchg
lret
xor
scas
mov
nop
cmpsb
outsb
mov
cld
lcall
outsb
pop
stos
scas
outsl
jmp
xor
push
pop
dec
jle
sbb
div
xchg
jnp
rcll
lret
pop
dec
adc
jne
clc
sbb
push
cld
jae
mov
mov
popa
andl
pop
je
imul
jo
add
add
cmp
push
fisubs
repnz
xor
jns
xor
cmp
sbb
mov
push
pop
loop
out
mov
sbb
sbb
jle
add
adc
xor
add
aad
dec
cmc
dec
adc
adc
outsl
xor
sbb
xbegin
cltd
mov
mov
mov
cmp
mov
jecxz
xchg
leave
and
cmpsl
cmp
or
jns
inc
xchg
push
and
push
test
add
cmp
ja
lods
pop
enter
stc
in
test
in
enter
aas
call
ret
dec
dec
je
outsb
mov
fdiv
xor
dec
xchg
mov
mov
js
push
cmpsb
and
jl
adc
negl
aaa
xchg
xchg
push
mov
loope
filds
ret
dec
mov
push
or
jns
xchg
arpl
cmpsl
pop
clc
xchg
push
cmp
sub
bound
jbe
imul
testl
jnp
es
push
das
pop
mov
adc
pop
xor
add
push
mov
fistpll
cltd
cmp
sbb
push
out
divb
xor
or
jbe
nop
add
sub
addr16
sub
sbb
mov
dec
mov
je
xor
insl
sub
fildl
add
mov
cmp
xchg
ret
and
sti
inc
mov
in
daa
ret
scas
xchg
jg
inc
push
pop
stos
add
push
sub
andb
inc
add
cwtl
and
inc
pop
fists
fdivrl
cmc
pop
or
movsl
mov
sub
shld
xor
jg
jge
lds
adc
jb
sub
adc
dec
scas
aad
sub
mov
jl
test
xchg
pop
nop
ljmp
add
gs
add
xchg
jp
mov
ret
ret
cs
sbb
mov
jecxz
shrb
xchg
mov
pushf
test
pop
ljmp
stc
pop
sbb
ret
jmp
adc
aas
dec
popf
in
or
fsubs
rorb
mov
mov
outsl
scas
xchg
sub
fsubs
lahf
pop
bound
imul
add
arpl
xchg
xchg
adc
mov
leave
xchg
jl
incl
inc
sub
inc
sahf
cmpsl
push
in
repnz
mov
movsb
ret
xor
enter
pop
push
test
jae
dec
xlat
mov
mov
jg
loopne
xorb
mov
repnz
in
xor
mov
mov
rorb
push
cmp
jno
xchg
fwait
test
sbb
pop
jb
adcb
mov
fnstsw
mov
sub
push
mov
sbb
loop
dec
add
push
pop
les
arpl
aam
les
addb
push
aam
aad
inc
sbb
mov
pusha
insl
js
mov
pop
jne
lahf
add
pop
xor
xor
xor
outsb
repnz
mov
out
xchg
aam
imul
imul
adc
mov
fcomps
fmull
or
dec
outsb
sbb
sub
mov
scas
dec
and
stc
sbb
jo
pop
and
add
adc
mul
or
fidivs
dec
mov
sbb
lahf
sub
push
int3
xchg
pop
jecxz
push
inc
xchg
rcrb
add
jp
cmp
adc
mov
lods
inc
cwtl
pop
loopne
mov
sti
seto
xorl
and
jno
and
clc
add
mov
in
test
xchg
jecxz
frstor
imul
sti
lods
sbb
xor
inc
jae
sbb
neg
mov
loop
adc
jle
dec
or
subb
stos
mov
sbb
bound
mov
sarb
mov
fisubs
mov
pop
fwait
aas
mov
push
mov
jnp
cmp
jl
pop
popa
es
inc
xor
out
jg
fs
sbb
add
mov
fsubrl
xchg
out
mov
into
cmp
or
inc
jno
sbb
mov
movsb
stos
mov
outsl
movsb
insb
je
jne
int3
cmp
ret
lods
cmp
mov
rclb
sub
sbb
push
in
mov
mov
iret
mov
xor
mov
cmp
sbb
data16
and
or
sarl
push
push
pop
rclb
push
mov
in
cltd
inc
and
adc
xor
jp
sbb
ljmp
pop
sub
fsubs
scas
cmp
xor
in
pop
jae
mov
xchg
xor
jae
aas
and
cmpsl
fldcw
xchg
xor
test
adc
add
adc
mov
stos
andl
cli
jns
pop
mov
push
fists
xor
add
cli
cmp
aaa
pop
xchg
push
dec
inc
mov
loopne
mov
aas
push
jp
inc
or
insl
mov
cmp
mov
test
or
cmp
popa
scas
out
jo
icebp
les
add
gs
out
xchg
inc
jg
inc
addl
jmp
je
xor
add
mov
pop
push
xor
pop
push
xchg
or
ret
push
lret
mov
xchg
pushl
and
dec
jmp
mov
jne
sub
lods
fsubrs
test
pop
mov
cltd
xchg
test
jp
stos
pusha
or
stos
pop
fisttpl
cmp
jne
mov
sub
jae
push
mov
add
cmp
xchg
cmp
mov
rorl
adc
jnp
xchg
pushf
push
cmp
push
ja
and
sarb
xlat
int3
xchg
in
stos
sub
shrb
or
push
fnstcw
iret
fs
cmp
jle
int3
add
cmp
jae
js
jnp
test
popa
jnp
push
sub
ds
add
movsl
rep
out
lods
aas
outsb
iret
mov
hlt
iret
xor
js
cmpl
mov
mov
pop
loope
adc
push
mov
js
loope
cs
jo
enter
sbb
push
data16
mov
sti
xchg
sahf
xchg
je
jns
inc
jp
sbb
rclb
mov
push
add
fwait
push
mov
fstps
cmpsb
push
popa
sbb
lods
cmp
push
adc
push
push
test
adc
mov
or
sub
loopne
mov
aad
gs
lods
pop
aas
idiv
cmp
dec
and
pusha
mov
mov
adc
cmp
jp
xchg
dec
pop
enter
push
leave
std
arpl
xor
cmpsl
push
jmp
repz
test
jp
jg
lds
fidivrs
push
lock
pushl
and
dec
js
inc
xor
arpl
adc
sbb
loope
rcrl
in
std
sub
lods
nop
outsb
or
insb
or
fs
stc
adc
or
pop
and
insb
mov
or
inc
hlt
pop
stc
arpl
pop
jno
mov
sbb
jno
sub
dec
in
shl
js
mov
or
loopne
rolb
and
mov
pop
sub
xchg
pop
mov
jp
arpl
jne
or
jbe
add
loope
out
bswap
and
stos
mov
icebp
inc
push
fst
jl
insb
dec
cmp
mov
pop
sbbb
incb
insb
fbld
mov
inc
popf
dec
sbb
push
jbe
ljmp
pop
xor
fxch
pushf
mov
ja
xlat
cld
addr16
subl
test
inc
popl
lret
lods
jno
in
movsl
in
sarl
das
dec
sub
divb
sbb
int3
loop
inc
and
jns
iret
scas
mov
and
fistl
add
mov
pop
push
jp
repz
push
movsl
dec
arpl
popa
jmp
stos
cmp
push
fimull
dec
mov
leave
lds
push
out
rcl
arpl
bound
cmpsl
cmp
mov
stos
out
mov
pop
movsl
out
and
push
shlb
inc
and
pop
jne
stos
test
or
insl
and
enter
push
das
inc
jecxz
incl
mov
fdivr
out
mov
inc
and
mov
push
fiadds
jns
ficomps
jno
xchg
test
out
stos
adc
out
nop
pushf
jp
cs
fucomp
pusha
ja
gs
scas
fdecstp
test
je
sbb
or
mov
jg
sub
jb
data16
and
adc
cmpb
xchg
outsb
sbb
sub
xchg
inc
mov
sub
jnp
xchg
les
sbb
inc
xor
cwtl
push
int
push
mov
mov
pusha
mov
mov
lea
inc
add
out
loopne
inc
xor
scas
xor
xor
mov
xor
sbb
mov
inc
push
or
or
addr16
mov
push
icebp
and
popf
jmp
inc
frstor
xchg
fists
xor
stos
jne
jbe
icebp
lods
sahf
push
jmp
add
xor
call
inc
xchg
inc
aad
pop
imulb
out
push
lods
in
stos
call
shl
inc
loop
xchg
mov
adc
dec
stos
adc
les
inc
daa
adc
mov
fcomps
ror
test
lcall
addr16
js
mov
mov
inc
fs
pop
ret
mov
xchg
push
mov
ds
into
out
outsb
hlt
fistpll
imull
dec
and
xchg
mov
push
cltd
pop
pop
cs
std
sub
js
hlt
pop
aam
inc
enter
ret
sub
inc
push
scas
cld
aaa
and
or
std
cmpb
cmp
aad
inc
adcl
pop
push
mov
sbb
repz
inc
inc
sbb
cmp
or
mov
call
mull
mov
xor
pop
lock
jno
and
subb
lahf
mov
push
cmp
mov
jmp
test
loopne
adc
xor
stos
mov
je
xchg
es
test
nop
pop
aaa
cmpsl
repnz
ja
outsb
or
out
cli
ja
adc
addr16
mov
push
shl
shl
into
push
dec
push
aam
xchg
xchg
mov
adc
ret
sbb
lods
mov
mov
jbe
xchg
xchg
pop
or
aas
rorb
jle
cmp
xorl
add
add
adc
hlt
cmp
cmp
jmp
fwait
lret
cli
jmp
sbb
icebp
fwait
mov
aas
es
add
es
and
mov
pop
mov
mov
add
sbb
movsb
stc
sbb
clc
stos
inc
xor
loop
inc
sbb
jbe
jl
ret
xor
cmp
push
sbb
fneni(8087
xchg
iret
and
sbbl
and
testb
out
pop
cli
fmulp
mov
pop
pop
xchg
mov
sub
dec
mov
rcll
fidivs
lcall
ret
adc
iret
stos
lea
push
push
jne
dec
xor
sub
mov
fxch
pop
les
add
and
sti
cs
and
pop
nop
mov
mov
push
cmpl
pop
mov
aad
push
lcall
ficomps
xchg
inc
inc
in
mov
loope
push
mov
push
in
scas
adc
xchg
imul
push
in
cltd
add
cli
popa
enter
push
xchg
hlt
xor
movsl
pop
mov
lret
pop
mov
rcr
leave
rorb
int3
clc
enter
add
add
mov
push
sbb
add
adc
and
xlat
orl
insl
or
out
pushf
ja
inc
cmp
push
aaa
in
rcl
scas
jge
jp
fstpl
mov
mov
ss
jmp
cmpsl
jmp
inc
inc
iret
and
sbb
aas
lods
xor
outsb
stos
das
call
push
std
xchg
push
pop
pop
aaa
roll
movsl
test
xor
jo
lds
mov
int3
pop
xchg
push
popf
or
bound
int
sahf
call
add
or
pushf
cmpsb
push
push
pop
pop
mov
jecxz
jp
mov
pop
mov
jl
cwtl
xchg
mov
out
aas
adc
fscale
xor
push
stos
popl
mov
enter
iret
sub
jb
xlat
insl
inc
and
sarl
xor
dec
or
imul
lcall
shll
mov
or
and
ret
aad
push
push
lret
pop
mov
fbstp
int3
insl
cmp
inc
inc
dec
mov
xor
mov
daa
test
cs
sbb
add
cmpsb
aad
mov
stos
pusha
daa
xchg
sbb
xchg
nop/reserved
pusha
mov
loop
test
mov
add
mov
addr16
cmp
cs
lret
sbb
rcrb
out
in
cli
sub
mov
sub
mov
mov
adc
adc
daa
push
filds
popa
idiv
pop
in
test
sub
ret
je
loopne
data16
mov
mov
cmp
xor
and
cmpsl
push
push
push
mov
mov
mov
xchg
xchg
sub
sub
fwait
std
ds
sub
adc
push
imull
mov
adc
pop
adc
jmp
fimull
popa
jg
sub
push
add
push
lock
int
fstl
mov
xchg
xchg
xchg
movsl
pop
mov
cmpsl
jmp
psubusb
add
icebp
enter
popf
shll
dec
scas
push
jl
shl
decl
xchg
repnz
test
addr16
mov
cs
hlt
sub
nop
mov
cmc
xor
or
dec
fisubl
movsl
es
cmp
das
jb
fildl
xor
in
stc
lods
mov
ss
jge
rclb
cmp
jbe
in
mov
out
inc
lds
movsb
in
imulb
loopne
dec
cld
rcr
out
shrb
mov
pop
adc
push
cmpsl
push
lret
or
in
ds
cmp
mov
inc
inc
das
rorb
xor
mov
pop
movsb
fldcw
xchg
sub
jae
and
lods
imul
mov
outsb
sbb
ret
xchg
es
js
ret
cld
xor
mov
add
ss
jae
ror
iret
and
in
adc
adc
mov
xchg
loop
and
mov
lods
aad
pop
stc
lahf
pop
and
in
dec
lea
xor
mov
rcll
das
loope
stc
loope
sahf
icebp
push
sbb
je
or
mov
pop
and
inc
fucomip
add
mov
cltd
jmp
pusha
hlt
sahf
xor
pushf
andl
mov
inc
call
scas
nop
push
mov
out
ret
popf
xchg
cwtl
mov
xlat
or
fiaddl
nop
xor
mov
push
pop
int3
push
inc
xor
adc
dec
clc
test
cmp
mov
mov
sbb
inc
test
dec
in
jle,pn
mov
sub
jmp
sbb
out
cmpl
repz
inc
mov
out
mov
dec
pop
push
in
add
sub
or
sbb
mov
icebp
divb
adc
js
fucomip
push
mov
pop
call
pop
xor
pop
push
adc
or
dec
add
push
mov
cmpsb
and
imul
jae
stos
test
iret
loope
jg
icebp
mov
xor
jae
arpl
push
adc
or
cltd
or
cmp
repz
ljmp
je
dec
roll
fadds
mov
stos
add
mov
lret
popf
adc
mov
sbb
sbb
push
nop
jg
adc
jl
loop
das
sub
mov
xchg
shll
ja
cltd
leave
jl
jbe
lret
popf
inc
pop
sti
inc
int3
shrd
mov
insb
pop
xor
out
add
pop
addr16
fsubr
cmpsb
and
push
jne
insb
or
add
sahf
xchg
mov
das
xlat
xor
xchg
out
or
pop
test
mov
adc
and
or
leave
cwtl
pop
popl
sbb
jno
xor
dec
push
jmp
push
xchg
push
mov
cmpsb
arpl
negb
sub
cmp
mov
adc
int
insb
mov
test
jae
jns
int
es
xchg
insb
movsl
pop
cmp
xor
push
in
bound
movb
mov
in
and
ja
jmp
icebp
loopne
cmpsb
cmp
js
jo
mov
mov
lods
jl
xchg
ljmp
outsb
add
and
rcrb
rorl
adc
sbb
mov
lock
push
shl
insb
dec
adc
fs
xor
cmp
bound
mov
aam
adc
adc
dec
icebp
stos
xchg
stos
pop
jb
insb
mov
cmp
xor
mov
movsb
sub
inc
lods
jnp
ret
lret
cltd
or
mov
lods
inc
adc
daa
outsl
pop
in
push
inc
cmp
pop
adc
pop
aam
mov
cltd
mov
sbb
cmpsl
gs
inc
xchg
cmpsl
xor
in
int
add
inc
add
out
pop
cmp
xor
mov
push
out
outsl
rcr
dec
sbb
hlt
mov
mov
clc
ljmp
push
iret
pop
sub
sbb
out
dec
push
mov
xchg
mov
jnp
lock
xchg
adc
js
mov
xchg
in
in
shlb
std
lret
mov
pop
adc
mov
push
lret
pushf
popf
idivl
xor
icebp
fiaddl
jp
xchg
fstpl
sti
cmp
scas
daa
int
pop
dec
push
or
and
ror
mov
ret
cmp
sbb
push
push
mov
scas
bound
push
cmp
test
and
jne
add
xchg
stc
fstps
and
cmpsb
sbb
test
push
fadd
push
loopne
xchg
dec
xchg
sub
push
lock
sbb
sub
or
cld
pop
pop
nop
in
mov
ret
loopne
inc
mov
call
or
fs
mov
mov
sbb
adcl
mov
adc
adc
cmp
mov
lods
in
dec
out
out
xchg
shrl
out
pop
lock
jae
movsl
ficomps
int3
mov
mov
xor
and
ds
adc
cmpsb
ficompl
popa
lods
jmp
in
mov
xchg
rcll
push
push
jns
inc
adc
jno
xchg
xchg
inc
jp
out
jb
mov
das
mov
orb
cmpsb
pop
or
out
or
mov
xor
in
repnz
jbe
sbb
cld
sub
pop
and
je
iret
lahf
inc
mov
mov
arpl
sbb
lret
shr
js
mov
push
inc
jno
or
aaa
sbb
sub
nop
xchg
mov
sub
insb
and
or
cmp
test
fisttpl
cmp
mov
ds
lea
insb
mov
cmp
add
jne
mov
add
jg
push
rolb
cmp
add
hlt
cmp
mov
mov
arpl
mov
mov
inc
out
inc
addr16
in
inc
xchg
jl
sub
add
jnp
in
mov
lret
cmpsb
stos
push
dec
mov
push
mov
iret
mov
jo
xchg
push
filds
mov
inc
xchg
fcmove
xchg
push
pushf
xchg
int3
imul
add
push
shll
jmp
cmp
daa
add
cli
push
mov
ss
enter
adc
xlat
mov
fldenv
dec
movsb
adc
lret
cmp
pop
dec
out
jae
xchg
xchg
inc
add
lock
pop
mov
push
mov
mov
out
adc
scas
push
enter
push
add
test
sahf
stos
jmp
frstor
nop
cmp
pushf
scas
dec
dec
outsb
pop
lahf
jge
sahf
sti
test
jno
in
inc
mov
in
rcl
and
xor
push
fldcw
mov
and
sub
jg
cmc
call
add
or
mov
jae
bound
les
inc
movsb
adc
and
test
pop
push
jmp
inc
ret
shl
pop
xor
mov
testl
push
xor
or
sub
clc
adc
xchg
mov
std
outsb
aas
mov
pusha
je
jne
sahf
das
test
and
enter
popl
in
push
sbb
negb
sub
xor
enter
mov
dec
and
mull
inc
add
push
test
xchg
outsl
push
int
add
imul
mov
jo
inc
inc
into
push
jmp
mov
daa
dec
pop
cmpsb
fists
mov
xchg
pushf
xor
push
repnz
lods
sbb
in
pop
xor
dec
lods
push
cmovg
imul
ds
lods
sub
mov
mov
or
cmp
jae
shll
sub
jns
mov
outsl
dec
imul
arpl
cli
loope
scas
push
cs
cmp
leave
mov
rcll
push
ror
jl
pop
inc
cli
push
sbb
xchg
cmc
outsl
std
andl
mov
scas
or
andb
mov
fmuls
sbb
xchg
or
xorb
push
mov
lret
xor
cmpsb
ror
scas
dec
nop
cmpl
out
xlat
xchg
adc
jle
movl
mov
jo
loopne
sbb
xchg
std
fadd
or
jl
out
jno
and
out
push
fimull
out
mov
xchg
mov
mov
daa
insb
adc
cmc
pop
adc
loope
mov
cmpsb
lock
mov
inc
jb
or
test
subb
or
fists
mov
inc
sarl
xchg
in
or
idivb
cmpsb
fisubl
adc
nop
mov
sarb
mov
int3
jl
push
imul
shlb
loop
mov
shrb
sahf
sti
mov
hlt
sub
xchg
push
cs
popf
fcoml
sbb
push
ja
cmp
inc
inc
pop
mov
aad
push
enter
das
lahf
add
testl
add
jecxz
sub
cli
rcrb
pop
and
inc
ret
insl
push
jbe
jb
sar
mov
jae
outsb
or
nop
lods
adc
out
inc
pop
out
dec
pop
push
loopne
gs
negl
rolb
and
lods
jne
pop
fiadds
int
outsb
scas
dec
stos
rol
jmp
or
mov
cmp
mov
jo
es
xlat
jne
sahf
out
test
and
mov
jno
rcrb
mov
daa
pop
push
popf
and
sbb
xchg
sub
sbb
fildll
mov
mov
fcoml
les
or
inc
mov
dec
ret
ret
mov
imull
xchg
inc
sti
enter
mov
add
jp
add
in
inc
mov
adc
inc
xor
jmp
or
and
cmc
imul
in
mov
fwait
ja
xor
mov
jns
sub
movsl
and
jge
mov
stos
mov
xchg
les
jno
mov
not
aaa
jb
rcrl
push
lea
les
add
test
jp
sti
aad
lods
push
or
dec
out
push
pop
inc
jae
les
add
jo
pop
push
mov
sahf
sub
fidivl
iret
sahf
out
pop
mov
decl
cli
aaa
add
adc
stc
xchg
lcall
mov
aaa
xchg
out
cmp
push
xor
sbb
sarl
inc
loop
push
data16
lea
jo
and
cmp
and
jno
dec
lcall
ret
add
rcr
lods
xchg
in
or
jbe
lahf
std
sbb
cmp
pop
cld
add
repnz
cmpsl
cmpsb
daa
int
jae
or
push
outsl
imul
pop
jg
jbe
push
and
outsb
fnclex
mov
pslld
mov
jnp
ss
enter
shrb
rcr
sub
pop
pop
add
dec
repnz
pop
adc
scas
iret
sahf
in
popf
loop
mov
bound
cmpsl
iret
lock
dec
jmp
add
push
je
dec
aam
jnp
in
mov
add
es
and
mov
lea
ret
push
jnp
or
mov
add
pop
mov
out
xchg
into
adc
dec
lahf
sub
shlb
push
push
pop
add
xchg
daa
jge
mov
cmp
sub
sub
push
in
lret
sbb
adc
cmpl
int3
fwait
pop
js
mov
repz
cmp
adcl
mov
out
fisubs
dec
sub
je
mov
mov
cmp
stc
imul
loopne
and
lcall
frstor
ret
jp
pushf
pop
imul
push
xor
mov
xlat
or
stc
scas
cmpsl
enter
lea
icebp
xchg
sbb
add
jmp
lea
adc
add
push
adcl
cld
mov
dec
push
lods
xchg
pop
pop
push
jl
sbb
mov
adc
pop
pop
jmp
and
sarl
or
dec
leave
pop
and
stc
fisubl
pop
sub
cmp
sbb
inc
out
and
xchg
inc
cmp
out
push
mov
out
pop
cld
out
sub
cmp
in
lock
imulb
aaa
push
xor
int
sahf
or
mov
nop
jmp
outsb
cmpsb
clc
add
test
mov
inc
mov
test
lea
push
or
jp
xor
mov
adc
data16
mov
add
xchg
fidivrl
cmpsb
mov
int3
xchg
out
cmc
sahf
shll
or
mov
push
lods
mov
pop
in
mov
dec
cmc
or
sub
jae
pop
fs
adc
dec
int3
pop
adc
mov
jmp
pushf
pop
and
sahf
aad
jae
iret
fsts
jno
dec
sbb
or
inc
mov
pop
adc
xchg
xchg
xchg
add
mov
push
sub
mov
cmp
les
outsb
cmp
stos
sbb
fidivl
mov
push
rcl
mov
or
out
xchg
xchg
mov
rcrb
push
hlt
cmp
insb
adc
pop
ret
insb
orl
xchg
stc
daa
cs
adc
shll
cmp
sub
aas
js
jmp
jg
rorl
xor
inc
sub
or
fistpl
sub
dec
and
fsub
jmp
or
ret
dec
leave
divl
cmp
je
pop
jmp
negb
add
mov
mov
and
pop
jbe
push
es
mov
fwait
xchg
dec
test
les
xor
push
cmc
pop
shrb
mov
cld
jb
jnp
mov
or
mov
push
addr16
mov
inc
mov
xchg
mov
inc
fldcw
movsb
sub
rorb
mov
scas
adc
fists
je
adc
adc
or
out
rcl
call
es
xchg
fnstsw
cmpsl
cmp
xchg
xchg
daa
add
and
pop
test
jg
mov
aaa
std
sub
mov
lret
in
lret
jnp
sbb
mov
cmpsl
dec
lock
xorl
pusha
jae
mov
sbb
xor
mov
xlat
xlat
int
leave
pop
xlat
cli
dec
pop
mov
push
out
jae
sahf
lock
mov
leave
mov
sbb
scas
inc
sbb
insb
jns
and
inc
mov
inc
sahf
repz
mov
scas
cmp
dec
or
cmp
aad
sti
dec
lret
int
aas
mov
mov
jle
ret
mov
clc
and
aas
mov
pop
incb
cld
shl
mov
inc
cmpb
popa
std
pop
aaa
cmp
pop
jmp
popf
and
or
adc
ljmp
mov
dec
sarl
dec
cmpb
pop
insw
mov
fnstenv
mov
fnstenv
test
push
lahf
inc
loope
push
aad
movsb
fstpt
mov
inc
outsl
ljmp
shrl
and
subb
jbe
adc
inc
pop
jno
mov
jnp
das
mov
sub
mov
cmc
aaa
pop
xlat
or
adc
push
jns
ss
bnd
test
and
push
sbb
jo
in
pop
cld
in
adc
out
dec
hlt
aaa
scas
adc
out
inc
fldl
jmp
push
mov
xchg
test
mov
stos
movsb
in
sbb
js
lcall
cld
aas
inc
jmp
cltd
jp
add
pop
in
nop
pop
adc
lds
movsl
jg
push
cli
loop
mov
les
fs
xlat
jbe
sub
leave
je
data16
fisubrl
jl
mov
pop
push
jae
inc
and
adc
cs
fs
mov
stos
push
aad
shl
jle
mov
inc
out
and
test
je
iret
pop
std
outsb
mov
mov
add
cmp
out
mov
sbb
hlt
push
mov
ja
fdivrs
xchg
or
ffreep
sbb
adc
js
inc
push
scas
push
popa
mull
add
ss
push
stc
or
cs
adc
lds
push
add
pop
mov
mov
xor
dec
mov
daa
out
int
fcoml
mov
sub
mov
push
dec
call
clc
xchg
cmp
popa
mov
mov
shrb
sub
in
cs
fnsave
sbbb
mov
xchg
mov
dec
and
sub
repz
popf
dec
pop
shlb
adc
add
mov
pusha
les
push
mov
adc
fcmovnu
xor
lods
xchg
sub
das
into
push
jo
sbb
pushf
je
mov
xchg
adc
pop
and
pop
ja
push
addr16
rclb
cmp
test
adc
xor
xor
lret
adc
jns
dec
cmpsb
add
mov
stos
repz
or
jg
into
xor
jbe
in
jne
jne
jne
lods
dec
dec
addr16
flds
cmpsb
xchg
cmpsb
lret
jno
mov
inc
sbb
push
jg
mov
pop
popa
imul
testb
jl
inc
fistps
movsb
pop
cmp
push
mov
arpl
test
ljmp
add
jl
xchg
insl
push
xor
fnstsw
dec
ljmp
clc
daa
dec
out
cmp
mov
ljmp
cwtl
xchg
rclb
or
adc
jg
xor
dec
das
outsl
pusha
jae
popa
cmp
sub
fidivl
icebp
mov
shrl
xor
jnp
mov
es
xchg
pop
push
pop
int3
fsubr
imul
iret
mov
jns
sub
into
pop
sbb
adc
sets
xlat
pop
jbe
es
adc
add
dec
xor
adc
cmp
push
cmp
aad
xor
add
mov
jae
sti
mov
insl
out
rcl
xor
mov
push
stos
add
adc
push
popf
and
and
loope
xchg
mov
lret
popf
push
loope
mov
ds
ss
inc
shlb
adc
aam
int3
rcrb
jl
sub
sbb
push
jae
mov
test
movsb
xchg
orb
clc
ja
cmp
jmp
jmp
or
xchg
outsb
jle
test
aas
mov
into
repnz
pop
inc
and
xor
hlt
jno
mov
cmp
cli
in
pop
cmpb
mov
movsl
xchg
or
cs
mov
call
out
add
loope
sub
mov
jae
test
popa
mov
cwtl
add
lret
inc
mov
or
in
jle
ljmp
pop
adc
ss
push
das
xchg
stos
or
call
inc
aaa
in
enter
sub
leave
inc
mov
pop
imul
in
ljmp
mov
and
cmp
aad
cmp
addr16
mov
add
fldl
ja
cmp
cmp
xlat
cmp
mov
and
add
stc
push
lds
and
repnz
arpl
testl
ljmp
popa
push
push
sub
aaa
push
jg
rorb
push
pop
xor
scas
out
push
lods
daa
ficoms
mov
push
push
jo
inc
test
in
mov
inc
cmp
dec
cmp
pop
stos
add
pop
xor
fcoml
dec
or
or
pop
sarl
and
push
int
jbe
daa
jecxz
fcomip
rcr
sbb
push
jb
adc
sbb
cmc
xchg
cmp
pop
mov
mov
mov
cli
vmovddup
call
mov
or
shrl
xchg
je
sbb
jle
jecxz
xor
nop
add
pop
pop
xor
out
cld
es
ljmp
mov
sahf
daa
mov
inc
cmp
lods
xchg
lds
movsl
loopne
cmc
dec
dec
mov
mov
sarb
pop
dec
add
ret
and
out
mov
and
sub
dec
jo
push
mov
sbbl
lret
cmp
cmpsb
push
xor
icebp
sbb
ja
or
push
lret
inc
sar
sub
jg
sub
rcr
xchg
inc
aad
addr16
test
insb
mov
inc
lcall
aad
andl
loopne
fsub
jb
js
inc
xor
jns
stos
leave
fwait
repnz
out
cmp
inc
push
pop
sbb
mov
and
cmp
cmpsb
pop
mov
cli
adcb
pop
push
pop
dec
lods
pmaddwd
out
add
pop
int3
pop
mov
fisttpl
fs
xchg
cltd
push
sti
je
mov
mov
fs
cmp
pop
jb
lock
inc
add
lock
or
icebp
jne
lret
aad
ss
and
jne
test
stos
shlb
sub
jle,pt
push
es
jae
in
aad
mov
mov
mov
sbbb
add
stos
pop
xchg
dec
cs
out
mov
mov
xor
xor
sti
ret
mov
stos
pop
out
insb
cmpsl
outsl
test
jne
pop
mov
les
imul
inc
xchg
mov
xor
jns
or
jecxz
aad
outsb
jnp
cmpsb
nop
insb
jecxz
lea
or
inc
adc
in
cmc
div
stos
movsb
add
cmc
sub
pop
mov
repnz
cmp
rcr
mull
nop
testb
mov
pop
mov
mov
imulb
dec
je
mov
jb
xor
jno
push
adc
icebp
sub
push
ret
cmp
imul
filds
jmp
std
sysret
hlt
mov
mov
cli
rol
loop
mov
dec
add
out
jnp
movnti
addl
mov
outsl
cltd
xor
mov
jl
push
add
in
sub
jbe
das
inc
out
ret
sbb
mov
adc
xchg
fcoms
sub
hlt
subb
pop
mov
scas
addl
add
enter
pop
mov
push
mov
les
dec
ja
je
out
imul
dec
outsl
or
sub
adc
mov
xor
sub
frstor
fsubrl
or
add
enter
xchg
pop
lret
testl
jg
testb
shl
sbb
out
cmp
test
lods
xor
int3
loop
mov
inc
jmp
scas
test
xchg
gs
cmp
or
fcoms
adc
lret
dec
leave
repnz
mov
mov
cmp
imul
lret
dec
divl
movsl
adc
sub
cli
jmp
ret
arpl
xlat
lret
add
jl
mov
dec
imul
or
and
out
test
pusha
iret
repz
add
dec
mov
pusha
test
sti
lds
incl
or
loop
mov
xchg
sub
call
ds
icebp
inc
cmc
stc
lock
and
inc
dec
popf
or
enter
sbb
push
add
push
enter
int
bswap
adc
xchg
sbb
inc
insb
inc
adc
mov
mov
lahf
xchg
adc
mov
push
jge
cmp
push
fildll
cld
adc
decl
mov
pop
inc
movsb
fcomi
inc
jg
fs
ficoml
mov
pop
xchg
fiaddl
pop
and
cli
adcb
sbb
jecxz
arpl
pusha
mov
sbbb
push
clc
sbbb
les
mov
insb
push
lds
fistpl
fistpll
fs
ret
jmp
cs
mov
pop
pop
mov
push
das
fisttps
jb
xchg
cmp
outsl
mov
icebp
nop
outsl
je
adc
cmp
jmp
dec
and
enter
cld
cmpsb
rcr
jge
adc
repnz
pop
jmp
jecxz
addr16
push
call
mov
or
xchg
ss
inc
je
mov
jnp
sub
xchg
mov
scas
inc
and
mov
mov
js
shrl
xchg
mov
nop
pop
dec
sub
stc
jge
lret
xchg
xor
sbb
cmpsl
sahf
loopne
push
loope
shll
cs
test
or
ret
in
insb
imul
fcoml
cmp
jle
lret
in
sub
jns
nop
fsubr
lods
icebp
pushf
enter
ss
lret
mov
into
mov
cmp
cli
pop
testb
pop
enter
imul
sub
mov
add
xor
iret
mov
lods
mov
and
lea
test
cmp
xor
mov
mov
xchg
or
popf
push
sub
lret
add
xchg
ret
xchg
xchg
rcr
rol
shll
sbbl
aad
sub
leave
add
loopne
cmp
or
pop
inc
inc
pop
inc
inc
push
mov
sub
rol
add
mov
sbb
into
scas
pop
push
lods
in
aam
test
inc
xor
pop
jg
add
cvtpi2ps
add
ss
sbb
mov
std
pop
imul
adc
jne
add
loop
incb
pop
pop
dec
enter
mov
cmp
data16
cmc
mov
and
or
out
sub
sub
pop
lea
jg
pop
xlat
aam
shld
shl
sbb
clc
cmp
fistpl
imul
clc
pop
add
xchg
out
xor
jae
xor
push
popa
mov
out
cmpsl
sub
ja
ret
mov
and
lods
push
int3
mov
and
dec
mov
jbe
jge
out
icebp
mov
sub
and
jge
push
xor
in
mov
push
and
aas
xor
pusha
rol
dec
sub
pop
mov
icebp
mov
inc
popa
popa
and
jo
test
sub
mov
cli
insb
pop
push
scas
aam
pop
bound
cwtl
into
xchg
fldcw
decl
xor
js
scas
and
xorl
adcb
mov
idiv
jae
xlat
divl
aam
hlt
jmp
add
outsl
sbb
sbb
pop
test
jmp
xor
roll
or
in
fisubrs
stos
adcb
test
mov
div
pushf
push
or
or
xchg
nop
cmpsl
inc
sbb
inc
mov
push
pop
ret
in
dec
adc
push
jg
fistl
subb
or
testb
jns
leave
or
mov
cltd
mov
inc
mov
sbb
ljmp
sub
ljmp
lea
inc
dec
pusha
mov
fisttpl
pop
jns
xchg
xlat
outsb
mov
icebp
pop
into
sbb
fmuls
mov
shrb
cmpsb
sub
shll
out
push
jl
cli
popa
outsl
aas
cmpsb
iret
cwtl
mov
dec
outsb
jg
and
cs
imul
add
push
rcll
cs
cltd
int
and
cmp
lahf
mulb
cmp
mov
lds
lcall
roll
or
pop
sar
jb
cmp
ja
mov
enter
mov
push
dec
xchg
push
xor
fwait
cmpsb
push
jle
leave
mov
pop
and
or
cwtl
frstor
fnstsw
fscale
lahf
rol
je
js
shlb
rorl
fwait
mov
or
fildll
aam
ds
lret
xor
or
fcompl
pop
pop
rorb
lods
mov
dec
enter
clc
xor
or
ljmp
js
rorb
xchg
jecxz
hlt
jge
pop
pop
call
sbb
sarb
sub
mov
sub
push
fildl
mov
mov
incb
adc
inc
sub
xchg
pushf
leave
pop
ret
push
sbb
pop
mov
fsubl
in
inc
in
xchg
jge
inc
push
add
test
subl
mov
mov
push
xchg
int3
dec
lea
into
repz
xchg
jno
push
mov
mov
pop
add
mov
mov
sbb
jle
push
leave
jb
cmp
jno
ficompl
sbb
or
aad
mov
data16
aad
pop
stc
sub
scas
ret
aaa
jae
adc
push
sub
dec
jne
stos
test
pop
sbb
rorl
push
pop
aas
shrb
sahf
sbb
pop
or
xor
push
mov
adc
xor
mov
inc
adc
jo
mul
out
push
add
les
in
lret
xchg
lds
cli
ficomps
icebp
adc
hlt
adc
cmpsl
flds
mov
mov
ds
xchg
dec
fmulp
stos
sub
mov
jg
jp
ror
jnp
inc
pusha
jne
aad
fimuls
mov
aaa
push
jecxz
inc
sbb
popa
jecxz
mov
mov
mov
jle
jg
popl
gs
adc
mov
add
mov
cmpsl
jecxz
enter
mov
repnz
dec
xchg
adc
shll
flds
dec
cmpsb
push
out
jae
jge
loopne
mov
cmp
and
cmp
fucomp
sbb
or
or
or
sub
loopne
ja
adc
sub
mov
and
outsb
pop
rcll
and
sti
add
mov
insl
ja
xor
jb
push
xchg
pop
rorl
pop
fcomps
stc
sub
adc
js
fwait
shll
push
lahf
iret
jg
mov
or
inc
mov
pushf
fnstsw
sbb
repnz
jb,pn
xchg
add
sub
outsb
sbb
pop
dec
loop
or
dec
push
int
aam
dec
add
sbb
push
shr
test
sbb
push
jmp
cmp
hlt
xchg
or
sub
test
mov
iret
pop
loope
rclb
cs
fidivl
adc
pusha
mov
sub
cmp
mov
clc
cli
enter
adc
in
sbb
xchg
pusha
and
out
in
and
fcomp
cld
js
xchg
repz
movsl
faddl
fildl
xchg
add
cltd
cltd
adc
addb
dec
xlat
mov
cmp
mov
cmpsb
cmp
outsl
daa
fmull
pusha
and
jle
mov
pop
lcall
in
lcall
sbb
movsb
add
sub
aam
jmp
cltd
pop
aas
jmp
xor
fstps
sub
in
loop
repz
inc
out
push
and
push
fldt
add
push
mov
outsl
pop
mov
pop
xor
imul
sbb
and
and
dec
push
push
inc
movsb
dec
adc
sub
push
xchg
test
push
out
inc
inc
repnz
scas
adc
mov
jmp
xchg
xchg
nop
add
sub
pop
jno
fsubrs
js
mov
dec
jmp
jle
mov
test
push
add
push
andl
jge
adc
cli
mov
jnp
sub
mov
ficomps
push
out
or
test
push
mov
popl
das
lea
dec
sub
xor
rcll
pop
cmpsb
mov
imul
faddl
pushl
inc
jnp
inc
mov
push
mov
jge
clc
mov
xor
add
lcall
push
es
mov
outsl
cmp
adc
in
fmul
jb
sub
and
add
push
pop
xchg
insb
popa
mov
jns
les
pop
leave
mov
pop
mov
in
ucomiss
sbb
inc
pop
cld
ja
mov
fxam
jo
outsl
data16
mov
inc
movsl
sarb
or
dec
push
fstpl
push
mov
out
inc
dec
xchg
add
mov
fimuls
test
es
sbb
rorb
cmc
aam
cmp
pop
ja
into
jb
rcr
testl
pop
mov
fistl
cmp
jnp
fwait
or
dec
fs
pop
cmp
pop
fst
icebp
mov
mov
idivl
orb
mov
pusha
pop
mov
xchg
pop
scas
adc
loope
xor
aas
mov
inc
and
pushf
call
cmp
int3
jns
sub
pop
push
ljmp
push
stos
or
push
data16
in
fisubs
mov
sbb
sub
test
or
sbb
test
xor
inc
mov
mov
inc
in
jnp
pop
mov
repz
loope
jmp
mov
mov
cmp
mov
sbb
cmc
fisubrs
xchg
push
cmp
jl
and
mov
xlat
lds
ja
push
fs
mov
xor
pop
inc
sub
dec
add
add
inc
xchg
in
adc
mov
inc
in
lahf
sub
adc
out
mov
pop
mov
cwtl
mov
cwtl
add
ja
hlt
cmpw
in
sub
inc
or
jecxz
ds
mov
rcr
jb
lock
cs
push
cmp
repnz
jecxz
sahf
and
aam
push
push
inc
inc
nop
push
sbb
loope
pop
sti
add
mov
or
outsl
sub
pusha
sub
jbe
jge,pt
dec
int3
fidivl
inc
dec
or
or
mov
dec
mov
test
scas
push
lock
mov
orb
sub
js
mov
dec
mov
popa
mov
repz
sub
test
mov
ss
in
out
rorb
test
push
mov
add
rcrl
jnp
inc
push
scas
sub
mov
outsl
dec
test
mov
add
mov
jecxz
adc
xchg
push
dec
mov
ret
dec
pop
sbb
pop
dec
sahf
xchg
xchg
dec
sbb
addb
or
sbb
xorb
loopne
loop
ds
add
pop
loopne
cmpxchg
mov
pop
test
pop
fwait
pushf
stos
jle
ffree
ja
test
and
addr16
push
cmpsb
testb
or
cmpsb
inc
pushf
cli
frstor
sarb
push
jp
lret
popf
add
movsb
xchg
mov
pop
mov
jb
aas
jmp
mov
jb
add
arpl
xor
inc
cmpsl
addr16
pop
mov
pusha
mov
adc
test
jge
sahf
out
sub
xchg
dec
cli
cmp
lahf
mov
or
lret
test
or
arpl
ret
aaa
test
adc
sbb
aaa
cmpsb
xchg
enter
lcall
mov
add
pop
in
int
in
or
jbe
pop
mov
imul
mov
xor
lahf
or
inc
popa
xchg
clc
clc
xchg
inc
out
in
fs
in
fcoml
xchg
sub
negl
jge
rorl
lods
lea
iret
iret
sub
loope
es
mov
pop
or
les
repz
imul
rolb
scas
in
mov
cmp
popf
or
jns
lock
add
adc
push
jl
adc
xchg
dec
test
daa
dec
in
xor
inc
xchg
xchg
cltd
or
cmpsb
push
jbe
mov
jne
mov
mov
mov
pop
inc
cs
arpl
pop
xorb
or
in
adc
dec
dec
pop
test
xor
hlt
divb
les
pop
inc
int3
popl
test
dec
add
cmp
data16
push
inc
movsl
jp
movsl
add
popf
insl
add
mov
dec
scas
rcrl
divb
ljmp
lahf
movb
and
and
add
test
dec
cmp
jl
cmp
mov
lret
fmull
mov
jbe
fstpt
sub
inc
fwait
mov
mov
test
das
dec
adc
jne
scas
add
inc
jbe
das
push
mov
psubd
push
and
faddl
lods
pop
mov
mov
fs
outsl
and
cmp
or
adc
dec
xor
fistpll
jno
mov
and
leave
fwait
loop
jmp
popa
scas
add
add
cmp
push
xchg
mov
aaa
imul
push
add
dec
pop
imul
jo
icebp
enter
xor
lahf
arpl
and
push
daa
inc
push
stos
mov
fadd
sub
test
xor
mov
es
jl
xchg
push
add
pop
mov
adc
mulb
call
push
xor
add
movsl
inc
out
xor
bound
js
int
jae
std
jb
pop
cs
bound
mov
xor
out
imul
xor
pop
jecxz
dec
mov
push
fistl
xor
dec
add
shrb
insb
scas
stc
jmp
daa
fs
or
into
mov
lea
in
in
rclb
std
pop
xor
xchg
ret
mov
sti
aaa
mov
jnp
je
int3
adc
aam
xorb
es
rorl
in
mov
dec
mov
fwait
cld
mov
rol
xchg
sub
push
push
jbe
pop
xorb
test
in
icebp
pop
leave
xchg
call
inc
out
cs
inc
in
mov
mov
jle
stc
sub
lret
push
cmp
es
push
incb
inc
cmpsb
jno
xchg
sub
cmp
pop
cmp
out
sub
addr16
lods
fwait
jmp
int
or
fmuls
int3
sub
nop
daa
jae
xchg
jle
add
inc
mov
leave
test
cwtl
sub
mov
loope
mul
mov
scas
mov
lods
dec
cltd
jns
scas
sbb
xor
dec
hlt
jae
repz
insb
aas
mov
sub
push
cltd
sub
nop
pop
rcrb
push
push
cmp
cmc
xor
lahf
stos
inc
cltd
mov
cs
xchg
decl
inc
adcl
pop
cwtl
push
fsub
loope
xchg
in
cmp
xor
cwtl
inc
dec
sub
inc
sub
je
lret
jne
dec
cmpsl
repnz
js
and
je
push
cltd
shll
mov
or
and
bound
mov
cld
or
xor
cwtl
pop
call
fdivrl
rclb
dec
fsubrs
ret
test
cmpsl
dec
repnz
push
mov
je
xchg
jl
dec
subb
in
dec
pop
xor
push
testb
shlb
stc
cltd
add
loop
pusha
inc
dec
add
jl
dec
aad
lods
in
js
jo
pop
js
and
sub
cmp
sbb
or
jns
hlt
pop
add
xchg
out
pusha
add
test
add
push
add
sbb
mov
jmp
pop
jne
shrb
es
dec
popa
mov
fwait
cmpsb
push
test
call
adc
inc
push
icebp
cltd
mov
inc
xchg
xlat
xor
cli
mov
loope
popa
inc
mov
dec
rcrl
lahf
jl
mov
decb
jns
sbb
cmp
sbb
dec
xchg
cmp
pop
jmp
popf
in
jno
mov
xchg
rcrl
imul
mulb
sub
sbb
dec
xor
push
dec
std
cmp
std
mov
test
mov
je
sub
iret
push
sub
jne
and
jmp
ds
data16
das
inc
rorl
test
dec
sbb
fists
adc
rcrb
mov
insl
mov
out
sbb
sahf
add
push
xchg
cmp
in
in
adc
push
xchg
sub
popa
pushf
mov
mov
pop
pop
jl
xchg
xchg
ficomps
ss
jecxz
loopne
mov
test
pop
fisubrl
pop
popf
mov
or
lcall
jmp
orb
and
mov
inc
popa
stos
stos
lahf
xchg
xchg
enter
inc
andl
lock
mov
xchg
call
and
push
xchg
fstpl
loopne
addb
in
jmp
test
mov
rorb
jbe
cmp
dec
mov
iret
add
cmp
imulb
in
xor
pop
dec
sarb
lds
orb
cltd
in
xor
add
push
xor
ret
mov
pop
and
pop
mov
xchg
push
sub
inc
xchg
fcmovbe
pop
loop
rorb
dec
jp
leave
sbb
sbb
mov
push
lret
jno
fs
popa
sbb
xlat
clc
ret
add
xor
fcompl
or
dec
push
pushf
loop
add
outsb
jnp
orb
imul
mov
jecxz
xor
mov
xor
ret
out
mov
ds
lret
ljmp
and
mov
lret
int
gs
mov
cli
jmp
into
adcl
inc
mov
jle
cmp
push
stos
xlat
int3
sbb
movsb
ss
fdivl
ljmp
mov
cs
dec
addr16
shrl
subb
aam
xchg
popf
pushf
sahf
sarl
dec
mov
push
movl
and
outsb
push
pop
dec
stc
jle
cli
or
cld
push
push
mov
inc
das
xchg
jmp
lret
adcl
pop
xchg
mov
fwait
pop
cmp
mov
add
stc
rcl
sub
ret
ljmp
dec
push
fwait
sahf
das
inc
jl
pop
add
insb
mov
shrl
cmc
adc
push
cmpsb
scas
xchg
in
or
mov
incl
movl
xchg
or
imul
push
daa
cmp
arpl
adc
xchg
jno
fldt
xchg
adc
loopne
out
lcall
pop
adc
cmp
inc
mov
xchg
les
pop
xor
lods
and
jae
cs
sbb
cmp
pop
es
cltd
sub
dec
fs
stos
out
fsubl
lods
gs
add
add
adc
mov
xchg
xchg
cmp
loop
jns
jg
xchg
push
adc
in
fisubrl
inc
mov
lcall
test
ds
jg
insl
push
cmp
iret
jge
hlt
out
stc
movsb
pop
push
or
jnp
addb
jnp
int3
mov
jp
dec
dec
ss
xchg
push
test
cltd
and
imul
repnz
and
addb
ficoms
mov
mov
pop
cltd
push
test
add
dec
jmp
xor
sarl
cmpsl
dec
sub
aas
rcr
inc
cmp
aaa
das
adc
aad
sub
dec
adc
dec
repz
rol
cmpsl
cmp
pop
xchg
mov
cltd
stos
sti
and
clc
inc
cmp
jnp
xchg
sub
pop
fnstsw
je
mov
xlat
cmpsb
pop
add
jns
jo
xchg
sub
inc
adc
jb
out
aam
loope
jecxz
mov
repz
lods
add
inc
into
aam
inc
je
ja
add
aas
cltd
ja
xchg
pop
and
cmp
dec
fwait
and
sbb
movsb
int3
adc
or
in
jl
lock
das
xchg
out
inc
jb
mov
test
dec
and
test
inc
push
mov
mov
xor
mov
aad
sbb
aad
add
out
push
inc
mov
xor
outsl
loope
dec
lock
or
jg
gs
test
sub
xor
add
pop
xchg
dec
out
xchg
push
bound
cmp
gs
jp
leave
push
das
icebp
pop
dec
and
fwait
sbb
cmp
sbbl
les
mov
sti
pop
dec
rol
cmp
cld
bound
jmp
dec
bound
outsb
jl
and
add
and
push
ficoms
test
xor
lea
out
rcrl
cmc
and
add
xchg
mov
out
icebp
jo
or
outsl
je
mov
dec
mov
loopne
sub
jae
pop
movsb
movsl
insb
and
push
jle
push
jle
filds
sub
adc
pop
enter
cmp
xchg
xchg
sub
movsl
and
ss
icebp
sub
cld
ljmp
jp
xchg
scas
fcoml
push
xor
mov
mov
add
loopne
pop
fcompl
fisubl
push
mov
mov
mov
add
jb
push
xorl
int
pop
loopne
jne
js
or
cmp
rorb
mov
sub
jmp
pop
in
push
inc
rcll
dec
add
cmc
jmp
lods
scas
or
pop
ficomps
data16
rcrb
test
or
sahf
push
ds
movsl
mov
mov
scas
mov
bound
fstpl
cmpsb
cmp
leave
sbb
dec
outsl
popf
dec
call
repnz
mov
cld
out
sub
sub
push
adc
xchg
jnp
jae
lds
mov
or
hlt
cltd
lds
fadd
outsl
inc
xchg
cmp
js
push
aaa
inc
pop
shrd
push
sahf
bound
dec
jbe
iret
loop
test
pop
les
pop
push
mov
inc
lea
sub
or
std
rcll
inc
subb
xchg
in
jae
ljmp
pop
xor
mov
test
repnz
clc
push
arpl
adc
daa
cmc
sub
adc
mov
dec
xchg
sub
pop
fdivrl
addr16
adc
mov
jecxz
mov
mov
adc
inc
jmp
fbstp
or
xor
or
loopne
push
addb
femms
inc
lret
inc
dec
pop
fsubrs
int3
stos
gs
jno
insb
js
adc
jns
sarb
iret
movb
push
mov
mov
xchg
fnstsw
sbb
lahf
cmpsl
jg
add
pop
push
mov
loop
ljmp
mov
ljmp
iret
dec
xor
sbb
movsb
in
out
shl
xor
js
lahf
fwait
nop
jae
xchg
sub
fmull
lods
das
lret
sub
mov
js
and
outsb
aaa
add
out
jge
ret
out
out
jle
test
inc
rcl
loop
push
aaa
mov
mov
push
pushf
shr
icebp
mov
mov
push
fsubs
into
pop
enter
pusha
adcl
jg
dec
xchg
adc
ret
call
mov
cld
insb
xlat
in
mov
pusha
push
dec
aam
pop
popa
stc
jge
push
jle
inc
cmpsl
dec
cmpsb
mov
out
sbb
jp
sub
lock
pop
sbb
pop
dec
lds
sub
mov
push
push
aaa
loope
mov
lock
testb
scas
lods
pop
mov
lret
or
xor
pop
inc
loop
mov
jmp
test
test
mov
fsubrl
xorb
fdecstp
pop
out
leave
ljmp
int
fldenv
push
scas
sarl
das
xchg
arpl
xor
sbb
icebp
pop
and
ret
dec
mov
push
cmp
jns
cli
imul
pop
cmpsb
or
cmpsb
stc
jecxz
mov
jmp
and
push
adc
dec
fcom
add
push
cwtl
in
loop
pop
push
mov
mov
cmc
bound
roll
lcall
ja
dec
test
xorb
mov
inc
jl
in
or
dec
xor
mov
and
in
sub
scas
sbb
adc
adc
mov
xchg
fwait
ljmp
addr16
out
jle
jge
pusha
adc
outsl
bswap
imul
adc
add
hlt
cmpl
pop
cli
mov
and
xchg
adc
sub
pop
pop
mov
dec
out
xchg
or
pop
fmul
into
inc
jae
or
into
or
inc
xlat
dec
lret
testb
jmp
fndisi(8087
mov
inc
push
aaa
psubusw
mov
lock
push
mov
repz
jb
testb
or
int3
mov
mov
fdivs
xor
sbbl
jecxz
in
cs
jge
hlt
mov
inc
jl
cmp
orl
sub
xchg
sahf
loope
lea
loopne
jnp
sub
stc
rcll
push
cmp
pop
jle
loope
loop
out
int3
mov
and
xor
cmp
push
int
je
jne
pop
lret
dec
js
xor
xorb
or
dec
push
mov
pusha
insb
sarl
add
adc
or
scas
rcrb
push
divb
in
stos
data16
pop
cmpsl
dec
ret
and
dec
mov
outsb
add
call
in
jecxz
fwait
mov
loop
pop
mov
mov
push
xchg
or
fsubrs
push
mov
cmp
push
mov
jp
rorb
xchg
in
cmp
gs
adc
adc
push
nop
or
shl
lahf
pop
pusha
mov
cmp
fwait
int3
inc
jo
or
adc
jmp
rol
and
aam
cmc
xchg
push
pop
dec
addr16
stos
add
xchg
data16
sbb
xor
mov
and
mov
sub
lods
fcomps
inc
cmpsl
in
inc
jmp
adc
roll
lds
sbb
mov
movsb
lret
pop
cld
imul
pop
xchg
mov
fwait
mov
mov
inc
or
cwtl
mov
inc
das
mov
mov
or
sbb
push
je
cltd
aam
push
or
push
sbb
cmp
inc
les
sbb
pop
add
sub
mov
pusha
dec
inc
push
in
outsl
mov
pop
add
pop
cmpsb
in
xlat
aad
divl
add
xor
mov
dec
sub
and
cmp
xor
sub
pop
daa
pushf
xor
jno
test
out
inc
scas
mov
jnp
jp
lods
in
dec
in
sub
aad
sub
iret
shrb
aam
or
adc
cmp
das
cmpsb
push
scas
cmp
inc
repnz
jmp
andl
and
imul
push
mov
out
cmp
push
ljmp
add
out
jle
mov
jae
adc
inc
mov
popl
movsb
xlat
add
sub
cli
daa
lods
adc
repz
out
sbb
jg
pushf
sbb
sbb
dec
inc
out
cmpb
pop
rorl
pop
lods
pop
adc
test
testl
addr16
movnti
lret
pop
imul
out
clc
out
mov
sahf
mov
fwait
jle
and
mov
jmp
pop
cmp
mov
push
lods
mov
push
vmwrite
jecxz
iret
jbe
lods
pop
ficompl
movsl
mov
cld
cmp
lret
fwait
int3
popf
mov
aad
test
mov
sbb
fsubl
std
ficompl
shl
dec
mov
int3
add
sub
dec
or
and
sub
sub
outsb
xor
bound
ret
jl
into
in
in
push
out
jg
in
xor
mov
or
sub
sbb
dec
sbb
pusha
dec
jle
jp
mov
scas
das
dec
sub
sub
xchg
insb
out
mov
mov
mov
outsl
or
negl
dec
stos
cs
popa
sub
aaa
adc
jne
push
lods
cwtl
or
mov
stc
pop
out
ret
xorb
xchg
in
negb
inc
mov
call
or
pop
mov
and
stc
add
imul
icebp
inc
pop
ljmp
dec
ret
xchg
pop
jae
push
popa
and
xchg
imul
pop
ja
xchg
insb
adcl
leave
int
mov
mov
dec
loopne
lods
or
jge
mov
push
jge
in
sahf
outsl
testl
or
dec
jg
cmpsb
add
popa
xchg
test
fidivrl
xor
pop
fldcw
sahf
push
and
jp
insl
cwtl
mov
cmp
outsl
shr
in
mov
sbb
ds
dec
jecxz
imul
mov
adc
in
sbb
repnz
jecxz
cmpsb
push
mov
sbb
pop
push
stos
sbbl
lea
mov
mov
mov
mov
int
add
int3
and
pop
addr16
pop
or
sbb
shll
cmp
jp
sbbl
jae
cmp
mov
pop
es
loopne
jns
test
and
dec
jne
mov
or
nop
mov
jge
push
jecxz
nop
cmp
pop
push
aad
mulb
or
xorl
xor
cltd
andb
mov
pop
dec
mov
test
mov
mov
ffreep
add
lods
rol
stos
sbb
adc
pushf
fldcw
es
aaa
fwait
gs
xor
add
push
loopne
enter
js
sub
mov
jecxz
pop
mov
mov
xlat
jecxz
mov
or
aas
shl
push
mov
int
push
xor
cmpsl
clc
pop
push
or
xchg
xchg
bound
and
mov
push
inc
push
int3
push
jbe
imul
mov
sahf
pop
into
xor
cmp
lcall
adc
mov
in
xchg
cmp
sbb
xchg
fnstsw
aaa
cmc
sti
pop
mov
cmp
cltd
adc
or
sahf
rcrl
mov
leave
out
popf
leave
sbb
popf
fcmovnbe
pop
xchg
mov
add
movsb
sbb
iret
movsb
push
sahf
jo
jo
cmp
mov
test
test
sahf
jnp
mov
pop
pop
sbb
jl
or
divb
jno
dec
add
add
cld
imul
mov
and
aas
inc
js
mov
cli
test
and
jo
pop
andb
lock
adc
insl
and
and
sti
in
xchg
mov
sub
jl
repnz
mov
sbb
lds
insl
js
xchg
ljmp
sub
mov
shrb
movsl
shlb
xchg
movsl
divb
push
loop
mov
int
push
fsubs
pop
int
fisubs
je
add
xchg
xor
ja
push
outsb
imul
push
sub
fcmovnb
scas
pop
shlb
xchg
sub
pushf
push
shr
jb
pusha
lods
shlb
xchg
or
pusha
test
mov
sbb
ret
aad
and
loop
pop
pop
xor
cmp
inc
int
clc
data16
icebp
mov
lods
lahf
pop
cmp
xchg
movsl
mov
leave
mov
inc
ud0
aas
cs
inc
jmp
xor
jmp
dec
xorb
imul
mov
jecxz
addl
imul
fiaddl
loope
fiaddl
loope
sbb
fidivrl
cmp
dec
int
es
mov
xchg
adc
mov
dec
jo
cld
and
fnstsw
mov
inc
loop
dec
jl
jl
adc
cmp
aaa
fsubrp
adcl
hlt
inc
and
and
jp
mov
pop
ss
push
xchg
adc
in
test
xchg
sbb
test
out
jg
jns
in
cmpsb
inc
js
xor
jne
sbb
std
mov
test
push
in
mov
enter
aaa
dec
mov
mov
in
push
jnp
sub
outsl
jecxz
stos
es
jecxz
setno
clc
mov
cmc
xor
es
cmp
es
mov
xchg
cmp
adc
pop
xor
mov
test
xchg
xchg
outsb
repnz
das
fwait
lds
xchg
fnsave
sbb
loope
ds
pop
jecxz
jb
ss
jo
subb
add
scas
mov
dec
adc
nop
mov
ret
mov
dec
and
dec
xor
dec
xchg
mov
push
mov
mov
dec
movsb
cmp
mov
xchg
enter
add
push
addl
js
in
push
rcrl
fcompl
lcall
jl
popf
ret
xor
jg
xchg
cmp
in
sbb
xlat
test
mov
and
idivb
sub
aaa
sarl
jle
dec
and
jecxz
loopne
lahf
lahf
push
or
inc
add
setle
jne
sahf
cmpb
push
out
and
cmp
dec
in
movl
test
dec
jo
mov
push
sub
adc
insl
jb
sub
xchg
inc
inc
movsb
cli
gs
inc
adc
clc
mov
test
push
cmp
std
movzbl
push
fwait
sbb
stos
xor
dec
pop
or
lahf
push
fs
icebp
mov
out
lds
das
test
mov
mov
inc
das
ret
cld
jb
les
mov
int3
inc
sub
pop
ja
nop
aas
out
push
mov
mov
mov
mov
jp
sbb
lods
jbe
mov
and
cld
repz
push
push
cwtl
dec
je
mov
arpl
or
xchg
inc
fwait
cld
out
jge
imul
xor
fimull
sbb
xchg
adc
js
jb
or
mov
repz
pop
cmp
jl
xchg
inc
clc
pusha
imul
xor
sbb
sahf
inc
shl
adc
mov
mov
je
nop
cli
mov
mov
pushf
cli
sbb
and
fdivrs
insl
lcall
test
arpl
pusha
and
ja
cwtl
dec
fcoms
pusha
mov
mov
lahf
dec
dec
sbb
imul
out
aad
orb
push
xlat
push
and
dec
dec
mov
fstl
cli
jb
jnp
das
lcall
sahf
mov
jo
ljmp
jmp
fsubrl
leave
xchg
bound
dec
test
arpl
arpl
and
jmp
inc
fs
inc
lret
jne
sub
pushf
loopne
mov
rep
iret
shl
or
scas
sbb
cwtl
into
push
sub
ret
cwtl
mov
mov
fiaddl
xor
pop
mov
push
add
iret
push
push
enter
or
int3
ljmp
ret
rcrl
pop
test
mov
cmp
mov
mov
sub
adc
sub
xchg
pushf
pushf
and
repz
jns
add
inc
lods
test
je
mov
and
jne
inc
mov
fs
mov
push
and
insb
sub
cmp
jns
test
cltd
xorb
inc
scas
push
sub
pop
std
sbb
and
lret
mov
les
pop
mov
sbb
mov
pop
mov
inc
and
and
aad
loop
jecxz
mov
fldcw
add
leave
cmp
xchg
inc
les
jns
jg
sub
sbb
push
mov
out
daa
pop
or
dec
lock
jae
punpckhwd
mov
int3
sysenter
push
or
testb
into
xchg
jmp
sub
ja
lcall
adcb
adc
xchg
push
dec
fs
mov
ja
pop
push
mov
pop
lret
mov
push
das
mov
fstps
nop
mov
cmp
imul
mov
mov
faddl
mov
cmp
sbb
sbb
cld
dec
add
pmulhuw
sbb
xorb
scas
lods
xorb
sahf
stos
cmpsl
xchg
push
negb
lcall
popa
sti
aas
mov
les
sub
cmpsl
mov
dec
out
dec
pop
fisttps
adc
cmc
pop
in
inc
int3
adc
ds
push
add
dec
xlat
cltd
xor
fdivrp
enter
cmp
push
int3
int
pop
repnz
lods
sahf
test
or
and
mov
insb
pop
cmp
xor
repnz
loopne
scas
stos
push
mov
xchg
cli
add
movsb
xlat
add
mov
mov
cmc
imul
and
xchg
jg
add
aas
and
lret
fmuls
add
movsb
sub
enter
lret
inc
mov
test
imul
icebp
mov
inc
aaa
inc
test
sub
loopne
inc
inc
xchg
cld
test
inc
fidivl
ret
gs
jbe
push
mov
or
fiaddl
cmp
xor
ret
stos
rcr
hlt
scas
ret
outsl
test
jbe
adc
mov
add
stos
jo
add
aad
lret
push
stos
outsl
mov
loope
loopne
sbb
out
imul
jp
xor
adc
fmuls
rcrl
push
lds
popf
imull
lret
xor
jmp
outsb
adc
outsb
mov
imull
loopne
les
es
in
dec
dec
cmp
in
jns
mov
xor
cmp
jmp
inc
pushf
mov
sbb
lret
dec
test
sub
sub
adc
dec
and
jb
js
jp
add
imul
pop
mov
in
aaa
inc
mov
mov
dec
cmp
xor
pop
pop
mov
outsl
out
js
jmp
cmp
sub
push
ljmp
dec
push
sbb
pop
pop
clc
mov
mov
enter
test
sbbl
mov
dec
fdivs
pop
mov
pushf
outsb
nop
ret
cmp
fnstsw
xchg
xchg
fidivl
out
shlb
dec
ja
push
inc
insb
mov
mov
in
and
movsb
sub
out
add
dec
mov
mov
add
cmp
scas
inc
or
movsl
fstl
call
fildll
sub
pusha
aad
sub
and
add
divb
add
inc
dec
inc
into
xor
inc
add
pop
sbb
cmpsl
pop
dec
mov
or
add
dec
mov
dec
or
cltd
adc
inc
jne
das
xor
jns
and
dec
bound
cmp
jno
push
stos
stc
push
jne
test
cmp
test
outsl
or
jmp
ss
cmpsl
push
in
sbb
mov
mov
mov
lea
daa
aas
sub
add
cmpsb
jnp
shlb
je
pusha
sub
mov
push
jge
lods
push
ret
ljmp
or
sbb
or
mulb
nop
push
cli
or
dec
orb
sbb
push
jbe
push
ss
inc
dec
inc
cs
fadds
imul
out
or
in
jne
mov
mov
cld
dec
popa
mov
jnp
cld
in
fisubrl
adc
sub
fstpt
and
push
adc
mov
movsl
cmp
jne
daa
push
sbb
test
mov
fldt
cmpsl
cmp
imul
mov
pop
shlb
imul
gs
xor
scas
scas
testl
sub
xor
test
imul
orb
xchg
jmp
add
repz
test
push
and
mov
jle
sub
enter
and
push
xchg
xchg
fsubrs
xlat
add
int3
jbe
in
loope
mov
mov
sub
sub
movsb
pop
fmul
and
into
mov
and
mov
xchg
dec
add
xchg
adc
jle
sbb
movsl
xchg
inc
mov
mov
mov
loopne
sub
mov
repnz
xor
imul
fisubs
push
adc
add
and
sbb
dec
subb
jbe
fisubs
mov
iret
pop
mov
scas
fisubl
jne
xchg
inc
lret
xorl
icebp
cltd
outsl
cli
fisttpl
jb
mov
lods
jno
subb
lret
mov
and
leave
sub
xor
mov
and
and
fs
pop
dec
repnz
xchg
jle
xorb
mov
dec
loopne
push
sub
adc
aad
fcomps
jmp
out
adc
mull
fwait
iret
sub
xchg
push
jnp
in
xchg
xor
clc
push
fisttpll
fsub
and
dec
xorb
inc
fistpl
insl
xchg
adc
adc
mov
rol
call
divb
adc
sahf
push
cmp
xor
cli
cli
cld
add
jmp
pop
and
ss
daa
sbb
dec
enter
popa
xor
xchg
imul
in
pusha
or
fdiv
mov
out
outsb
adc
aam
sub
lods
jb
adc
stc
imul
inc
imul
fimull
mov
movl
or
inc
rcll
jno
shlb
jae
push
rorl
push
shlb
inc
jg
inc
call
mov
dec
mov
insb
push
js
xchg
pop
cmp
push
imul
push
dec
sbb
mov
pop
repz
mov
ja
jle
jns
cs
dec
fwait
cmp
or
sbb
arpl
push
and
into
int3
rol
mov
push
aam
pop
out
mov
pushf
push
mov
or
ds
xchg
sbb
jae
mov
hlt
movsb
shl
fsubp
sahf
mov
sub
mov
sbb
scas
sub
lods
addb
nopl
xchg
in
xchg
xchg
rorb
inc
ret
fcomps
test
adcb
push
movsl
pop
notl
gs
sub
fildll
push
jo
mov
cltd
in
fs
or
rep
fwait
cmpsb
or
jecxz
jae
and
out
add
mov
leave
sarl
dec
pop
mov
xor
movsl
push
jb
ja
push
mov
or
iret
dec
cmp
fwait
and
cmpsb
adc
fnstenv
mov
gs
or
into
mov
cmp
shlb
mov
pop
mov
pop
movsb
jbe
popa
addr16
mov
xor
les
fnsave
imul
sub
inc
lea
fidivrs
push
shl
fisttps
lods
inc
pushf
adc
adc
jno
mov
daa
in
in
in
out
pop
push
sbb
repz
or
iret
shrb
sub
mov
aam
rcl
mov
roll
xchg
sahf
push
outsl
cmpl
xchg
out
xchg
push
dec
or
out
adc
sbb
movsb
test
push
cwtl
xor
sub
fidivrl
jmp
mov
cmp
and
push
outsl
ja
lcall
add
sub
in
divl
lret
cmpsb
add
adc
sahf
xor
or
shrl
adc
sub
xchg
push
leave
es
out
pop
jg
or
mov
fistpll
int3
sahf
notb
pop
add
pop
inc
mov
xchg
sub
int
jne
neg
dec
mov
jmp
sbb
add
sahf
dec
cli
mov
ds
push
js
cmpsl
fdivrs
jne
das
fs
jle
sbb
out
xchg
push
int
repnz
movsl
addb
mov
mov
movsb
sbb
pop
sbb
ss
push
pushf
mov
insl
jnp
ds
je
xchg
sub
jnp
sahf
js
xchg
adc
mov
in
popa
push
in
dec
inc
add
pushf
insl
pop
or
daa
sub
movsb
mov
iret
adc
push
push
jge
insl
int3
jne
icebp
and
sub
imulb
or
and
mov
int
fisttpl
mov
sarl
adc
frstor
adc
pop
int3
or
and
and
imul
js
mov
jle
aam
or
jno
mov
lods
and
imull
sbb
clc
jle
cmpsb
in
es
xor
xor
push
dec
xchg
inc
xchg
xor
inc
inc
xor
sbb
jb
int
insb
xchg
inc
push
fistpl
adc
stos
mov
dec
mov
cmc
sub
jb
das
cmp
cmp
pop
cmpsb
aam
jmp
pop
test
nop
adc
xchg
mov
jg
out
imul
popf
test
lods
fwait
in
xor
loopne
inc
mov
lock
or
inc
lahf
dec
or
shll
les
in
cmp
adc
fmul
subb
jno
inc
test
dec
mov
inc
xor
push
adc
push
lods
jge
dec
or
jle
pop
adc
jno
xchg
cmpsb
out
pop
and
test
add
sub
mov
add
pop
jne
cmp
adc
dec
add
push
andl
dec
jl
lcall
mov
mov
into
orl
cmpsb
pop
cld
mul
call
dec
es
and
mov
lock
cwtl
ret
fidivl
dec
clc
add
adcl
popa
ss
push
popf
cmp
cltd
lods
jb
dec
leave
movsb
cmc
icebp
das
mov
adc
mov
mov
mov
dec
jns
xchg
sub
sub
bound
dec
jg
ror
in
gs
xlat
xor
loope
dec
dec
cli
push
popa
mov
sbb
jle
in
push
and
in
mov
or
jecxz
insl
or
mov
jle
inc
xchg
daa
mov
mov
sub
scas
loope
adc
and
iret
mov
push
jmp
daa
xchg
lods
ja
sub
repnz
incl
push
jo
fmuls
push
push
aam
lret
mov
lds
mov
xchg
cmp
push
fisubrl
fsubrl
mov
out
mov
ljmp
push
lret
xchg
imul
test
add
xchg
jnp
insl
mov
dec
nop
movsb
addb
mov
rcll
pusha
inc
mov
or
popa
adc
sbb
cmp
test
push
test
push
outsl
mov
dec
outsb
mov
mov
rcrl
jp
add
daa
out
adc
sub
aas
jne
sbb
jb
mov
xor
dec
inc
jnp
inc
dec
inc
add
pop
sti
out
stos
sbb
push
insb
cmp
lds
aam
or
cltd
add
mov
rorb
or
fldt
inc
add
xchg
loop
jecxz
add
sub
push
sub
cltd
rclb
mov
js
test
in
pop
mov
push
lret
and
pop
idiv
shlb
cmpsl
adc
dec
push
lods
cmpsl
cmp
jg
cwtl
insb
imul
es
pop
int3
fistl
cmpb
push
inc
js
adc
jmp
jge
jnp
lret
xor
mov
sub
add
pusha
mov
enter
lret
rorl
and
cwtl
mov
pop
xchg
cltd
ss
sub
inc
into
int
sub
leave
cmpb
sub
daa
gs
into
sarb
scas
mov
fistpll
sub
pop
pop
pop
inc
dec
gs
add
mov
or
push
and
jmpw
and
jb
test
cmp
into
xchg
sti
cwtl
adc
or
lock
sbb
into
inc
inc
xor
into
dec
adc
insb
loop
mov
mov
movl
sub
and
shl
or
out
jnp
add
jo
leave
push
lahf
out
arpl
push
outsb
sbb
cmp
aas
jge
jl
fcoml
push
jl
mov
push
mov
rclb
pop
daa
fcom
pop
les
jo
sub
push
aad
out
cmp
out
jne
int3
out
sbb
loope
push
fsubl
or
mov
das
push
adc
mov
jecxz
and
and
stos
xchg
mov
gs
clc
loop
push
xchg
cmp
mov
or
dec
lahf
sbb
jmp
sti
push
sub
mov
dec
leave
xchg
imul
mov
fstps
lret
xor
loopne
sbb
mov
inc
sub
dec
mov
lret
int3
hlt
pushf
jnp
mov
mov
adc
and
or
out
mov
pop
adcl
lret
sub
jne
pop
ret
jl
ret
jo
fcompl
xor
mov
pop
fcomi
outsl
pop
dec
sbb
adc
add
dec
std
xchg
pop
lret
pop
fcmove
or
fs
sub
or
in
jae
mov
addr16
inc
mov
jns
sbb
xchg
jnp
cmp
mov
push
xchg
sbb
mov
pop
pop
test
or
ja
add
ss
movb
and
cli
jne
sarl
leave
mov
and
test
inc
insb
mov
jge
imul
fbld
push
jno
inc
sbb
aad
mov
add
fsts
dec
stos
xchg
insb
test
cwtl
cmp
pushf
jle
add
andl
jecxz
jmp
ret
insl
push
push
xchg
sub
mov
jmp
out
mov
xor
out
popa
mov
in
mov
cmpsb
dec
adc
mov
in
loopne
rorl
fdivrl
mov
dec
mov
adc
sub
sub
add
div
je
adc
lea
mov
scas
inc
adc
sub
pop
or
bound
pushl
fidivs
rcrb
mov
mov
jno
dec
mov
mov
out
xor
cmc
testb
aam
cmp
sub
shll
rclb
push
andl
hlt
adc
cwtl
cmpsb
mov
stos
decl
aas
cmp
cmp
sbb
cmp
lods
jge
and
pop
lods
xchg
adc
lret
sbb
stc
filds
pop
stos
dec
sbb
bnd
lret
add
push
call
jmp
fnstenv
xchg
jp
mov
inc
daa
scas
inc
popa
dec
je
pop
movsb
adc
sub
add
jo
es
loopne
int3
shll
out
xchg
loope
imul
lods
icebp
rcr
outsl
jbe
pop
lock
inc
loopne
xchg
inc
xlat
test
dec
test
shr
inc
popa
scas
xchg
in
mov
loopne
adc
icebp
clc
scas
jl
mov
scas
in
sub
xor
xchg
adc
add
cmpsl
adc
and
pop
mov
jbe
inc
testb
or
mov
and
call
push
xor
das
mov
test
inc
adc
lods
ss
add
jbe
xchg
es
inc
inc
push
lock
clc
gs
sbb
cwtl
cmc
js
lea
push
mov
pop
or
not
int
xchg
add
sbb
pusha
int3
inc
pop
xchg
loopne
repz
mov
test
repz
out
jle
add
mov
xor
ja
inc
adc
fdivr
fs
jns
cmp
xor
mov
and
sub
sbb
mov
xor
pusha
jae
lea
jo
mov
lcall
hlt
testl
outsl
pop
cmc
cmp
imul
inc
cmpsl
scas
out
jle
adc
shl
mov
and
adc
jnp
pop
push
adc
sbb
add
cmc
sbb
repnz
or
sub
imul
jmp
pop
xor
popl
sub
scas
pop
iret
xor
mov
std
fcomps
sub
sub
testb
sub
cmp
dec
std
xchg
jle
cmp
cmc
loop
pop
outsb
sub
add
cmp
mov
stc
mov
in
sahf
inc
shr
push
push
aaa
jns
inc
xchg
cmp
sahf
std
and
add
adc
xchg
push
out
push
cmp
stc
fbstp
imul
push
rolb
mov
inc
ss
mov
mov
xchg
fwait
jb
xchg
imul
mov
dec
add
cmp
pop
cmpsl
notb
jbe
into
lds
adc
test
stc
and
insl
inc
loop
jp
clc
jmp
jb
xchg
aaa
rclb
out
lds
jae
lods
mov
mov
cmp
push
test
push
adc
push
inc
gs
xor
mov
insb
add
mov
scas
cmp
push
mov
out
mov
xchg
mov
fsubr
lods
sbb
cmp
pop
stos
mov
js
bnd
ds
out
into
int3
inc
push
mov
xlat
leave
in
xor
dec
and
sub
jmp
jge
mov
lahf
outsl
or
cmp
sbb
call
notl
out
das
dec
divb
xor
xlat
sti
mov
or
fwait
lahf
test
xchg
push
dec
nop
mov
pop
aas
pop
xchg
rcl
imul
mov
mov
mov
pop
popa
sub
frstor
cmpsb
shrb
enter
gs
dec
pop
ljmp
mov
inc
out
aad
mov
dec
fs
mov
xor
push
test
cs
repnz
sub
pop
lret
mov
cli
jne
ds
loop
adc
mov
sbb
mov
mov
loope
and
dec
lret
test
lahf
mov
fsubrl
jmp
scas
cli
sbb
dec
jp
xlat
ds
fistpl
repnz
or
sub
dec
outsb
add
inc
jmp
test
add
jae
mov
outsl
pop
and
fmulp
les
mov
rorl
stc
cmp
or
mov
mov
int3
jne
lcall
jg
sbb
fcomps
or
outsb
mov
sbb
sahf
loop
push
icebp
adc
sbb
xchg
and
stc
rclb
ljmp
fs
adc
cmp
test
fs
jge
rolb
pop
sti
mov
add
test
rcrl
jle
mov
test
outsb
push
pop
push
jbe
pop
ljmp
add
adc
and
sub
test
sbb
fcoms
sbb
xchg
shl
mov
push
push
xor
mov
repnz
es
int
xor
sbb
rcrb
jns
mov
stos
sti
adc
fcomp
leave
pop
mov
ret
enter
cltd
mov
and
mov
xchg
test
cmpsl
jns
adc
sub
push
inc
ss
adc
mov
and
add
scas
xor
loope
lret
vpshaw
mov
jnp
jle
repz
or
jae
inc
das
out
push
gs
and
inc
jne
mov
and
mov
jns
pop
xchg
mov
dec
les
out
fstpl
pop
jg
cmp
inc
inc
iret
fisubrs
jmp
mov
lcall
jne
adc
inc
and
in
and
lock
mov
cwtl
jmp
bnd
lds
and
pusha
pop
inc
push
dec
xchg
push
dec
push
mov
pop
in
and
je
push
cmp
subl
jmp
es
lods
dec
mov
cmp
inc
out
fiadds
xchg
out
jp
jns
xchg
out
or
mov
push
xchg
pop
imul
rcl
cmp
and
dec
inc
icebp
jno
xlat
fildl
and
mov
ja
mov
dec
sbb
loopne
mov
out
push
inc
mov
mov
lock
jns
sub
add
add
pop
inc
and
shll
xchg
jae
mov
jge
out
inc
push
rcrb
outsl
sbb
std
testl
maxps
enter
push
or
aad
add
out
call
jo
test
popf
aam
cmc
xchg
add
aad
cltd
je
push
shrl
jmp
jne
fnsave
fimuls
insl
inc
adcl
lea
out
dec
mov
mov
push
inc
outsb
or
mov
xchg
rorl
mov
add
xlat
sbb
mov
pop
bound
inc
and
cmp
nop
aam
and
out
pop
jmp
test
mov
fmulp
or
jmp
cmp
xlat
jmp
scas
dec
lock
mov
sub
xchg
jmp
movsb
jle
jl
pop
idivb
insl
rorb
inc
mov
xor
mov
shrl
jmp
mov
adc
push
and
pop
pusha
or
add
jae
pushf
stos
rclb
mov
sbb
lret
aam
stc
loopne
out
add
jnp
frstor
out
jmp
arpl
repz
shll
or
inc
in
inc
push
outsl
adc
sbb
cmpl
cmp
pop
push
daa
call
mov
push
int
mov
lcall
push
pop
int3
ds
in
sbb
inc
test
ds
out
jg
inc
pop
movsl
inc
addb
sbbb
rolb
insl
nop
jl
jno
add
jmp
pop
push
je
lret
adc
mov
rol
xchg
rorl
push
notb
roll
add
mov
jae
imul
dec
jns
imul
loopne
pop
movsl
dec
es
and
adc
inc
dec
add
orb
cmp
push
test
cli
inc
xchg
ss
popa
inc
lret
xor
mov
sub
rcrb
and
pop
adc
popa
bound
sbb
add
scas
sub
and
mov
pop
mov
ljmp
in
shll
cli
xor
mov
stos
add
xchg
shrl
xor
mov
pop
out
cmp
cmp
ljmp
mov
rcrl
bnd
mov
repz
jne
push
into
insb
icebp
and
inc
int
addl
roll
adc
add
push
mov
fisubrs
inc
and
outsl
js
and
mov
jnp
sub
cmpsb
mov
xor
inc
push
xor
mov
adc
outsl
lds
sbb
aas
icebp
mov
je
fidivl
jns
pushf
xchg
pop
mov
adc
loopne
dec
iret
cmp
aam
xchg
int3
iret
cmc
movsb
mov
int
scas
cli
insb
repnz
gs
adc
mov
xchg
push
cs
add
push
in
mov
or
jbe
ror
movsb
and
ja
aaa
sbb
xchg
in
in
insl
mov
adc
ljmp
push
jmp
out
aad
mov
and
dec
jae
dec
inc
mov
lods
sub
std
mov
jbe
lods
sbb
xchg
cmpsl
jnp
outsb
ja
mov
je
jp
andb
aaa
push
mov
ds
je
js
xchg
mov
sub
sub
pop
sarl
pop
dec
imul
jb
lret
or
mov
mov
pop
in
jg
sbb
add
adc
in
or
imul
lret
cmp
mov
mov
mov
iret
mov
insb
into
or
outsb
sbb
adc
xchg
pop
fmull
and
popf
clc
das
adc
jae
loope
mov
sub
xor
xlat
adc
fcomps
sub
ret
test
sub
daa
or
adc
out
mov
das
repnz
push
test
mov
test
imul
adc
in
pop
adc
loop
fs
mov
mov
adc
pop
dec
into
xchg
cmc
cld
out
repnz
sub
sti
negb
rcll
arpl
push
push
loop
xlat
test
sahf
enter
test
add
mov
mov
pop
das
in
pop
sarl
sub
ret
pop
push
loop
nop
lea
jb
mov
divl
mov
sti
fistps
mov
pop
pop
sarb
negl
std
loop
push
add
sub
mov
xchg
push
stos
pop
xor
mov
add
clc
jmp
inc
in
insb
loopne
sti
in
push
mov
cmp
decb
pusha
or
push
repz
cwtl
lret
scas
mov
or
rorl
inc
roll
stc
xchg
cwtl
pop
nop
cmp
xchg
ja
sub
inc
cs
or
cmp
lcall
loop
lock
icebp
hlt
js
out
push
inc
in
mov
mov
dec
mov
cld
mov
popf
mov
fdivl
imul
adc
dec
jl
jge
fistl
loope
mov
dec
and
out
cwtl
jmp
mov
ret
pop
lret
sahf
lret
es
sub
pop
rcll
fbstp
outsl
inc
das
xor
insl
rcrl
push
dec
or
lods
pop
rcrb
push
in
out
mov
jnp
das
cmpsl
fsubr
mov
es
xchg
out
aam
pop
or
sub
fs
out
icebp
dec
sub
and
mov
dec
fnstenv
cli
push
insl
push
data16
jno
cs
shrb
pop
loopne
arpl
pop
imul
les
ss
jb
sbb
adc
aad
cmpsl
shrl
pop
push
push
fstpt
test
dec
shll
dec
cmp
fs
fbstp
push
mov
out
aad
xor
das
and
sub
cmpsl
inc
sbb
sarb
int
sti
dec
fs
fldt
sbb
xchg
lea
pinsrw
addr16
mov
lahf
add
xor
out
or
mov
int
jbe
xlat
sbb
fdivl
xchg
jge
ljmp
cs
dec
adc
xor
in
out
mov
pop
dec
sbb
pop
mov
adc
out
sbb
push
dec
and
mov
adc
xchg
and
popa
shl
pushl
outsb
jge
push
push
mov
in
add
iret
jmp
sub
xchg
push
xchg
xor
clc
nop
add
mulb
cmp
jp
pusha
ds
jl
js
pop
push
jp
imul
add
mov
pop
lahf
inc
jmp
jge
ja,pn
or
mov
cwtl
or
xchg
and
fsubrs
pop
xchg
leave
add
sar
fstpl
dec
mov
add
push
insl
outsl
cmp
sbb
lods
repz
cmp
les
dec
arpl
pop
jge
js
cmpsb
push
jae
mov
rcll
mov
jne
dec
push
dec
cmp
sti
push
add
jne
pop
sbb
mov
mov
aaa
mov
hlt
pop
jae
sbb
jae
lds
sbb
dec
and
xchg
jne
fsubrs
mov
and
sbb
rcl
test
xor
cmp
test
test
add
orl
int
test
xor
sub
pop
jne
inc
ret
rorb
mov
cld
aam
pop
cmp
jne
sub
loope
mov
push
popf
xor
cmp
outsl
mov
and
in
push
or
push
pop
xchg
scas
cli
pop
cwtl
sub
push
pop
and
ret
sub
cmp
jo
lahf
inc
fbld
cmp
xor
inc
inc
mov
mov
mov
xor
pop
jl
xor
outsb
push
xchg
xor
xor
sahf
jae
mov
inc
loope
shlb
push
fs
lahf
out
adc
adc
push
pop
lahf
imul
mov
and
dec
out
lods
pushl
add
pushf
and
arpl
or
loopne
push
rolb
cld
loope
sbb
sbb
mov
test
insb
xchg
jle
out
mov
adc
insb
push
popf
inc
push
lods
out
mov
xchg
add
scas
and
or
dec
dec
data16
rcrl
push
cld
out
cmp
jmp
dec
ss
cli
xchg
pushl
sbb
mov
ja
in
fwait
jle
cli
negl
cmpsb
dec
mov
xor
aas
test
adc
add
pop
fidivl
xchg
inc
aaa
fdivl
scas
int
inc
dec
inc
pop
repz
js
cmp
pop
pop
loop
xchg
push
mov
lea
dec
repnz
adc
inc
test
scas
dec
or
out
insl
lret
js
dec
enter
enter
icebp
jmp
subl
iret
fwait
jae
aaa
inc
jge
xor
jl
mov
or
stos
cmpsl
mov
mov
into
mov
mov
xor
arpl
sub
xor
adc
lds
in
in
xchg
les
cmpsb
inc
in
mov
xor
or
xchg
sub
bndstx
aam
cmpsl
popa
mov
rol
cmp
repnz
or
dec
cmpsl
insb
js
addr16
cwtl
mov
mov
cmpsl
loopne
mov
push
inc
inc
mov
xchg
popf
jg,pt
pushf
rcrb
pop
sbb
xlat
cli
cmp
insl
daa
fiadds
mov
arpl
adc
aaa
mov
push
cld
dec
push
ja
mov
adc
inc
sbb
jne
mov
jmp
out
jo
std
dec
and
imul
out
sub
sub
shr
jp
outsl
cmpl
and
lds
lock
movsb
push
mov
mov
je
lret
int3
popa
push
dec
pop
loop
or
and
stos
insl
lods
mov
inc
aam
or
mov
xchg
mov
sbb
mov
jo
mov
or
jmp
mov
pop
out
jb
xor
jae
sbb
rorl
inc
fmul
sti
push
jae
add
movsb
or
int
mov
cwtl
lcall
call
xchg
mov
enter
and
addb
lds
jmp
fdivs
xchg
out
dec
call
in
fisubrl
pop
sub
addb
rorb
push
add
popf
push
fistps
pusha
xchg
cmpsl
imul
jmp
mov
int3
sbb
mov
xchg
sbb
xchg
push
mov
lea
and
mov
adc
or
sti
scas
lods
sub
lods
pop
xchg
daa
lret
mov
mov
add
sub
push
fucom
adc
xchg
push
dec
lcall
insb
pop
imul
add
fldl
lea
add
push
jae
repnz
xlat
iret
ss
rolb
jge
stc
leave
in
push
push
pop
sbb
iret
lods
aaa
loop
cld
or
daa
mov
rorl
jecxz
loope
push
xor
icebp
in
inc
xor
cmpl
add
pop
or
rcll
push
and
clc
popa
in
int
sub
cmpsb
pop
in
pusha
pop
push
rcrb
lods
sbb
dec
mov
xchg
sub
cmp
xlat
sbb
and
or
je
lret
mov
lret
mov
lods
mov
stc
outsl
mov
scas
sbb
adc
cmpl
popa
mov
dec
mov
pop
jne
adc
sbb
sub
pop
cmp
repz
jmp
rol
mov
cli
rcrl
jle
icebp
fisubrl
xor
push
ss
or
adc
ret
cmpsb
cli
or
mov
mov
hlt
pop
lret
mov
sti
clc
add
jmp
mov
aad
or
sub
xor
inc
outsl
lods
icebp
or
mov
jecxz
push
pop
pushl
push
insb
inc
or
repnz
and
lret
nop
out
fwait
aam
outsl
add
add
fcoms
stc
and
sbb
mov
jns
push
sub
les
lret
dec
sbb
jge
fisttpl
pop
xor
and
mov
cltd
in
cmp
xchg
inc
test
fcmovnb
movsb
int
js
mov
mov
jnp
adcl
test
lods
out
sub
xor
adc
push
dec
fildl
xchg
or
icebp
and
jo
add
jo
jge
in
subb
clc
mov
nop
xorb
insl
mov
and
das
or
clc
jb
js
jae
lahf
push
xchg
fstl
inc
xor
mov
jl
xchg
add
in
adc
xchg
shrb
rclb
std
insl
div
cld
xchg
insb
jecxz
cwtl
xchg
mov
lret
cmp
shll
pop
into
mov
cmp
xlat
jb
cmp
adc
popl
jg
adc
jle
and
or
lds
stos
cmpsl
inc
or
call
mov
pop
and
adc
add
push
sar
popf
movsb
pop
inc
out
nop
push
jne
cli
loopne
das
jnp
sbbl
outsl
iret
int
inc
pop
out
xlat
lods
ret
xor
dec
mov
add
sub
pop
loopne
loop
xchg
insb
mov
movsl
push
outsl
sub
sub
pop
inc
call
pop
inc
sarw
jo
cli
inc
push
in
and
stos
es
repz
xchg
imul
add
mov
xchg
lds
inc
mov
clc
push
add
aam
jmp
push
movsl
and
rcll
cmc
cmp
dec
jo
mov
hlt
jae
out
xor
cmp
mov
mov
cmp
sub
stc
popa
jg
and
leave
jg
daa
repz
inc
xchg
cmpsb
mov
mov
out
es
xor
fnstcw
sbb
scas
mov
in
test
arpl
pop
fwait
lods
out
out
mov
cmp
das
dec
and
stc
pusha
add
and
adc
test
stc
gs
shlb
cmp
mull
sbb
jle
cmp
add
ja
repnz
cmp
dec
xor
icebp
inc
outsl
ljmp
lods
inc
inc
mov
jbe
sub
pop
in
cli
dec
lea
icebp
cmp
js
push
sub
arpl
daa
mov
xor
clc
jle
adc
mov
pop
and
lahf
fimull
jmp
insl
mov
jmp
mov
jne
jae
rorb
inc
sub
push
dec
call
mov
mov
fs
sub
adc
adc
jmp
jb
xor
loop
in
and
repz
pop
sub
fwait
xchg
adc
and
pop
add
add
js
fs
push
mov
dec
adc
iret
pop
mov
and
icebp
adc
outsb
mov
sub
ljmp
ja
lods
dec
push
jae
pushf
sbb
xchg
lcall
push
ficoml
xchg
aas
jl
loope
ljmp
inc
das
pushf
popa
aad
repz
ret
jb
outsl
fcoml
test
aas
sbbl
movsb
cmp
pop
adc
push
or
mov
sub
nop
push
rep
fists
dec
fists
lcall
fwait
mov
gs
sbbb
roll
int3
hlt
jecxz
mov
cmp
gs
or
icebp
adc
cmp
fs
cmp
dec
test
adc
popf
dec
mov
dec
cmp
dec
fbld
les
dec
mov
mov
xor
pusha
cld
xchg
xchg
icebp
mov
addr16
imull
inc
imul
mov
or
pop
clc
aas
aas
mov
dec
loope
fisttps
loope
cs
lahf
orb
xchg
les
xchg
sub
pop
pop
dec
adc
in
out
sahf
lds
dec
pop
xor
fsubrs
pop
je
mov
lahf
xchg
and
cs
andps
cmpsb
push
scas
fnsave
stos
inc
mov
loop
jno
or
mov
fs
sub
insl
xor
cwtl
fimuls
cmp
std
nop
mov
and
les
dec
sarb
xor
repnz
fcoml
into
xor
fcom
test
aam
xor
push
xchg
cwtl
push
lret
loope
push
sbb
and
mov
sub
movsl
ficomps
pop
mov
and
xchg
in
movsb
repnz
push
mov
adc
xchg
enter
test
mov
jg
inc
bound
add
shrl
call
dec
lods
orl
movsl
mov
fwait
xchg
sub
imul
jns
cld
xchg
add
cs
sub
pushf
pushf
push
jg
or
inc
in
push
lock
pusha
stos
mov
jge
mov
cmp
adc
sub
add
ret
popf
sub
cmpb
andb
sub
test
mov
rcrb
lcall
imul
and
stos
imul
cmp
sar
cmpsb
fdivrl
sbbb
rcrl
std
sub
add
sub
push
push
imull
xchg
xchg
mov
mov
or
loope
xor
mov
cmp
xchg
sahf
cmp
lcall
cmc
inc
pusha
int3
inc
aas
xor
jmp
cwtl
sbb
test
pushf
hlt
mov
xchg
mov
arpl
mov
sti
mov
js
mov
aaa
bound
ret
lods
test
xchg
fcompl
cmpsl
aad
fcmovne
inc
popl
xor
push
and
hlt
push
jmp
scas
in
mov
add
and
push
mov
mov
mov
jne
xor
pop
cli
cmp
mov
mov
mov
xlat
repz
xor
and
mov
xchg
aam
or
out
loopne
bnd
push
xor
mov
test
inc
inc
xchg
sbb
xor
imul
cmp
int3
pop
test
lds
aas
jl
cmp
lea
push
testl
mov
fmull
lret
int
cmpl
or
int3
mov
adc
mov
pop
mov
mov
fldl
dec
lea
push
in
dec
mov
clc
add
test
pusha
in
aaa
mov
lret
ret
xor
iret
cmp
lret
mov
xchg
sbb
arpl
clc
push
mov
int
lret
cmp
movsl
jb
fdivrp
jp
and
dec
mov
and
sti
dec
mov
jnp
xor
lcall
mov
dec
jns
outsb
add
fists
adc
cwtl
jg
push
fcoms
popf
dec
test
jo
push
xchg
sbb
pushf
adc
xor
inc
andb
popf
movsl
inc
inc
daa
popa
and
testl
cmpsb
jb
add
in
flds
roll
adc
jo
test
dec
jae
or
inc
icebp
dec
sub
lock
ficompl
lcall
test
addr16
xor
mov
insb
adc
ret
inc
sbb
or
add
xlat
sub
mov
cwtl
out
movsb
dec
sub
jo
inc
bnd
mov
dec
ret
sub
inc
enter
aam
and
xor
mov
inc
sbb
pop
popf
js
roll
jg
mov
pop
or
sbb
add
jge
in
adc
rcr
aad
mov
add
cmc
jp
dec
roll
int
sarb
pop
sbb
mov
insl
pusha
cltd
cmpsb
jg
mov
fcmovnbe
ljmp
clc
std
mov
lea
mov
ja
fmull
mov
loop
mov
movsl
dec
fsubr
cmp
arpl
dec
lret
jecxz
mov
in
add
inc
lret
lret
fiadds
mov
inc
pushf
cltd
ds
leave
push
jle
push
les
sub
sub
add
xchg
xchg
fs
dec
enter
fstpt
fistpll
and
mov
lcall
add
iret
xor
test
dec
stos
call
sub
cmp
adc
push
dec
cmc
xchg
inc
xor
scas
mov
addr16
inc
push
mov
pushl
mov
sbb
jo
les
jbe
inc
or
fbstp
pop
test
rolb
out
xor
push
fldt
ja
mov
dec
data16
dec
add
popf
cmpsb
or
leave
xor
jne
and
adc
lcall
push
or
lds
or
mov
out
pop
sbb
lods
ss
nop
sub
gs
mov
outsb
mov
stc
mov
neg
mov
lea
hlt
fsub
sbb
jbe
stc
and
adc
xor
loope
jp
test
pop
xchg
mov
add
out
mov
xlat
mov
push
hlt
push
pop
mov
mov
xor
fbstp
push
sahf
or
mov
push
scas
add
sub
mov
mov
rcr
add
or
jae
cmp
sub
fisttpl
fnstsw
lds
cmp
lret
int3
pop
stos
jns
mov
mov
mov
add
jb
loop
out
or
jle
test
inc
xchg
cltd
out
mov
push
and
xchg
add
jb
sarb
test
push
out
loope
mov
add
subb
push
pop
js
xchg
mov
adc
sbb
mov
xor
cltd
or
fbld
xor
pop
faddl
add
popa
ret
orb
lret
das
inc
daa
lea
mov
cmpsl
add
lahf
cli
adc
push
lods
addl
insb
pop
shll
adc
js
dec
scas
jle
jbe
lret
pop
dec
lods
xchg
xor
jecxz
out
inc
loopne
stc
mov
pop
movb
adc
decl
xchg
nop
sti
push
xchg
inc
scas
popf
cmc
add
xor
popf
push
sarb
cs
sub
fidivrs
insb
mov
jg
enter
mull
push
je
icebp
stos
dec
mov
iret
and
xchg
pop
cmp
jne
inc
out
push
jp
adc
xchg
sub
dec
pop
pop
sarl
sub
xchg
sbb
pop
int3
mov
pushf
xchg
mov
xor
or
pop
mov
subl
push
fcmovne
add
push
sub
push
and
ret
dec
push
pusha
and
hlt
push
cwtl
xchg
pop
sub
inc
xlat
pop
pop
in
cwtl
sahf
add
xorl
lcall
push
adc
enter
in
ret
test
jp
push
cwtl
jb
cs
push
pop
inc
push
mov
and
and
jae
mov
fwait
jge
mov
push
sub
and
in
dec
cmp
movsl
jl
adc
cmp
stc
mov
lods
and
aas
mov
stc
and
dec
xor
ss
outsb
pop
imul
mov
data16
sub
mov
fistpl
xor
or
in
push
rorl
inc
inc
sbb
aad
jg
hlt
movsl
or
aam
xor
mov
out
popa
dec
cs
pop
mov
xchg
push
xchg
sub
mov
mov
aaa
jg
iret
test
fcmovu
xchg
roll
pop
stc
inc
mov
add
jno
lods
add
outsb
mov
adc
js
sbb
push
ret
mov
repnz
in
mov
push
or
xor
sub
adc
int3
jbe
pop
adc
ja
sbb
dec
ds
stos
pop
in
sbb
hlt
hlt
jg
mov
push
ljmp
jns
sub
pop
test
adc
mov
push
add
jae
dec
mov
inc
mov
cwtl
mov
push
notl
and
add
mov
jecxz
lcall
popa
dec
mov
sbb
add
pop
pop
or
mov
xchg
jmp
push
push
comiss
sub
mov
push
out
mov
add
sub
mov
add
sbb
iret
adc
cmp
jg
push
popa
pop
or
lods
xor
mov
arpl
pop
call
sub
aam
jnp
pop
xchg
xlat
pop
inc
and
out
lods
jmp
jns
pop
sbb
movsb
push
addb
sbb
push
lret
mov
push
mov
scas
xor
pop
xchg
dec
pop
stc
fwait
lea
xor
or
je
in
add
xor
std
jmp
scas
push
mov
adc
jbe
mov
dec
push
jle
mov
inc
pop
sahf
jae
es
pop
sbb
xchg
inc
das
pop
inc
fwait
push
push
adc
mov
shl
sub
jl
es
dec
movsl
and
aas
or
aad
inc
pusha
cltd
dec
mov
push
inc
rcr
xchg
cmpsb
adc
mov
jecxz
sbbb
dec
jl
ljmp
pop
lahf
mov
fs
cli
test
ret
and
mov
dec
pop
xor
data16
xchg
pop
pop
jg
js
mov
cltd
jo
and
push
pushf
fwait
pop
icebp
mov
les
mov
insb
or
push
fiaddl
int
test
sahf
jge
push
popw
outsl
xor
rorb
aam
push
outsl
imul
idiv
push
divps
testb
test
mov
jb
push
push
std
xchg
push
mov
xchg
and
push
adc
cld
mov
icebp
fildll
mov
mov
pop
or
insl
cmp
repz
dec
mov
inc
cltd
or
js
mov
cmpsl
cmp
mov
fucom
movsb
sbbb
sbb
xor
ds
cmpsl
pop
pop
dec
mov
mov
jno
jle
insb
in
out
insb
psubusw
cmp
or
dec
mov
iret
xor
adc
out
test
jl
mov
shr
mov
jg
mov
test
push
push
or
lock
adc
pop
sub
cmp
mov
pusha
sbb
fcomp
sub
aam
adc
je
lret
dec
test
jo
nop
cmp
jae
scas
arpl
mov
into
sub
sub
pop
cwtl
pop
inc
or
popf
mov
or
adc
jae
jle
pop
daa
jbe
movsl
lock
imul
pop
add
js
dec
push
in
xor
iret
pop
dec
les
lea
into
pop
popf
jle
adc
lahf
out
push
sbb
cmp
clc
std
aam
andb
sub
mov
sbb
test
jecxz
mov
out
and
fimuls
stos
push
mov
pop
icebp
adc
and
add
pop
mov
xchg
sbb
ljmp
mov
aad
push
xor
inc
pop
adc
cmp
test
or
mov
push
push
mov
adc
sbbb
outsb
shl
cli
and
insl
std
inc
jmp
mov
jge
fisubrl
pop
mov
push
xor
push
lcall
adc
sarl
xchg
push
pop
addr16
add
dec
xchg
xchg
push
mov
xchg
cltd
ds
fdivl
lock
pushf
adc
inc
rcl
subl
push
mov
insl
pop
jns
mov
mov
outsl
sbb
pushf
pushf
mov
jae
push
or
bound
pop
adc
bndstx
sub
pop
shll
lods
xor
jbe
mov
mov
repz
push
pop
pop
insl
xor
in
repnz
mov
inc
out
cwtl
mov
sub
or
insl
sbb
pusha
sbb
push
jb
std
cmp
jecxz
call
sbb
loopne
loope
pop
jmp
pushf
and
mov
mov
inc
cmp
ds
jns
clc
jnp
push
mov
jo
notl
aad
mov
mov
lcall
sub
in
add
xchg
inc
add
or
aaa
mov
int
fldt
jae
out
andb
leave
push
sub
pop
pop
fcmove
mov
and
mov
mov
mov
shrl
fucomip
dec
popf
adc
cmp
lahf
jbe
into
sbb
fistpl
adc
jne
rcr
sti
inc
lret
mov
inc
arpl
push
in
les
xchg
dec
ljmp
mov
mov
pop
repz
sbb
xchg
and
les
cmpsl
sar
test
and
addps
xchg
pop
into
sub
mov
jbe
popa
sarl
sti
xorl
imul
loop
sub
ss
in
or
es
mov
sbb
fcompl
mov
mov
cltd
mov
push
fnsave
sub
ss
xor
pop
clc
das
ss
fisubrl
ret
aad
cld
das
pop
jnp
das
cmc
adc
mov
mov
hlt
jnp
cmp
std
cmp
inc
fsubr
push
repz
pop
ljmp
mov
jmp
outsb
mov
cmp
mov
sbb
xlat
sub
nop
or
and
mov
mov
adc
mov
sti
lret
rcl
ss
cld
repz
sub
cmpb
sbb
cld
mov
lret
xchg
sub
mov
inc
lcall
push
fldcw
out
add
push
mov
mov
push
mov
sub
in
data16
xchg
gs
mov
cltd
stc
imul
xchg
repnz
loop
fcomps
and
call
jg
inc
sub
pop
je
ret
testl
fimull
mov
sub
pop
push
add
xchg
jbe
roll
test
imulb
push
adc
bound
jb
mov
loop
cmp
or
es
std
and
loop
aam
push
push
lds
stos
jae
mov
arpl
movsl
add
pushf
int3
cmp
in
call
icebp
cli
dec
lods
loop
jecxz
data16
mov
inc
imul
dec
outsl
int
hlt
jle
and
cltd
fistl
fwait
orl
fmul
xchg
inc
lock
mov
pop
mov
loopne
cmp
pusha
insb
ss
orl
mov
xchg
loopne
jne
mov
aad
test
mov
in
or
imul
add
xor
out
mov
inc
jp
shlb
icebp
mov
jns
shlb
cmp
jnp
pop
adc
cmp
adcl
sub
je
jbe
push
lods
jnp
or
xor
clc
shlb
or
popf
mov
data16
lcall
inc
inc
es
cmp
lods
cmp
or
lods
pop
sti
xor
in
sti
and
lret
arpl
es
inc
add
and
add
adc
push
sti
in
xchg
orl
shll
sbb
aad
mov
xchg
and
mov
pop
mov
aas
add
sub
jge
sbb
mov
lret
sahf
push
jge
sub
and
shlb
andl
or
xchg
dec
sahf
push
popf
lret
les
addb
or
cwtl
pop
mov
fwait
and
decb
aam
les
outsb
dec
inc
or
sbb
sub
mov
shl
orl
sub
or
cmpb
call
pop
mov
mov
mov
clc
adc
in
hlt
xchg
je
cltd
ds
or
jmp
fidivrl
sub
jno
jbe
pusha
mov
out
bound
scas
int
cltd
cs
notb
sub
push
inc
rcrb
mov
arpl
inc
mov
and
scas
data16
add
sub
push
xchg
and
js
repnz
iret
or
and
xchg
mov
ljmp
ja
dec
aas
mov
cmp
cmpsl
pop
rcrb
aaa
push
iret
mov
lods
fisttpll
fstl
jae
mov
inc
ret
outsl
cli
cwtl
nop
and
inc
enter
divl
jl
ret
add
sub
scas
outsb
xchg
daa
pop
pop
sub
clc
test
xor
cmp
mov
fidivs
xchg
repz
push
push
sbb
or
ja
aaa
out
cmp
pusha
mov
iret
jge
stc
in
mov
mov
popf
mov
cmpsl
cwtl
xchg
or
dec
push
dec
and
push
mov
and
arpl
inc
and
daa
outsb
pop
adc
sub
test
mov
mov
lock
xchg
and
iret
inc
scas
lret
mov
enter
vpminub
inc
faddl
stos
or
mov
js
aam
xchg
fsubrp
dec
loop
dec
stc
stos
dec
sub
pop
cmovb
test
mov
mov
imul
aas
int3
addl
add
es
dec
mov
mov
out
not
dec
or
xor
adc
sbb
inc
jbe
fisubl
loop
mov
adc
jecxz
shlb
repz
jle
mov
div
lods
mov
aad
movsb
pop
pop
pop
movsl
popa
es
dec
push
sbb
xchg
inc
fcmovbe
mov
add
std
notb
fs
insl
dec
int
push
nop
jb
outsb
fwait
loop
hlt
imul
inc
mov
or
insl
mov
push
out
cmpsb
push
jbe
pop
xchg
mov
js
jbe
mov
rcrl
and
lds
and
ljmp
xchg
popf
les
push
jb
xchg
xchg
push
pop
fstpt
jnp
shlb
pop
cs
adc
dec
or
ud1
push
add
adc
jno
lea
leave
lret
xchg
ficoml
xchg
imul
push
mov
inc
lock
js
dec
sahf
or
sub
aas
insl
jb
and
mov
test
lahf
or
rol
sbb
imul
call
cmc
mov
and
push
xchg
in
jo
in
adc
dec
out
sub
jns
lret
in
stos
pop
or
sbb
movsl
jns
out
cmp
movsb
xchg
es
inc
fmul
sub
push
sub
fwait
adc
mov
inc
popa
mov
and
inc
xchg
push
mov
es
cld
sub
std
xlat
mov
jo
mov
add
jmp
mov
inc
xchg
test
imul
and
xchg
push
adc
out
andl
es
cmp
adc
push
and
xchg
mov
pop
in
pop
and
dec
dec
lret
ljmp
push
mov
subl
ret
push
mov
fdiv
jle
inc
shr
cltd
lds
arpl
addr16
cmp
jl
repz
mov
jns
cmp
sarb
jg
add
popa
outsl
popf
mov
fadd
push
data16
fildl
enter
icebp
insl
fcmovbe
in
fcoms
mov
pop
sbb
mov
inc
scas
adc
sbb
jae
shll
inc
adc
or
testl
fwait
scas
lods
rclb
add
insl
sbb
pop
roll
dec
inc
push
inc
gs
or
inc
flds
orb
jo
cltd
in
and
lcall
int3
pop
mov
jbe
xor
push
add
fwait
push
adc
test
outsb
xorb
es
cli
jns
icebp
call
pop
mov
lret
in
mov
dec
test
pusha
xchg
imul
in
fildl
lret
in
subb
adc
sub
jge
bound
outsl
or
adc
clc
cmp
lahf
adc
insb
sub
rorb
pop
xor
pop
movsl
sarb
mov
pop
das
sub
cli
mov
jp
push
nop
sbb
pushf
mull
out
cvttps2pi
movl
and
sbb
sub
rcrb
aad
fmuls
pop
imul
fimull
shl
out
mov
and
push
xchg
stc
adc
sbb
rcrb
pop
iret
xchg
inc
and
adc
lods
fadd
or
jmp
push
mov
out
jno
in
dec
cmp
mov
xchg
jp
scas
add
outsb
lcall
testb
or
add
inc
insb
lahf
lock
fistpl
cmp
test
sub
loope
lahf
jb
xchg
cs
cmp
test
push
pop
add
sub
pop
test
add
push
imul
shlw
loopne
push
dec
xlat
pushw
mov
jl
cmpsb
mov
xchg
adc
mov
lcall
pop
pop
inc
fdivr
xchg
xchg
cmpsl
add
dec
jl
dec
movsl
mov
push
lret
mov
add
les
xor
mov
ret
jbe
pushf
insl
hlt
gs
test
movsb
andb
daa
sub
scas
xor
das
fcmove
push
ss
aam
or
jmp
sbb
dec
clc
les
mov
popf
adc
mov
mov
mov
loop
jnp
and
jae
dec
fdivl
ja
and
lret
mov
aaa
jae
daa
dec
mov
push
popf
js
mov
bound
cmp
xchg
sbb
mov
ss
adc
push
jmp
mov
fcomps
std
mov
xor
cli
out
pop
cld
pop
lods
mov
dec
inc
popf
add
adc
pinsrw
mov
mov
mov
lds
test
mov
mov
jmp
push
jbe
lds
stos
jle
fwait
lret
pushf
addb
add
jge
xchg
sbb
test
int3
int
insl
cmp
nop
test
dec
pop
jo
ret
or
cli
in
outsl
fucomi
in
push
cli
push
ret
insl
sahf
sub
pop
bound
data16
clc
push
push
ljmp
pop
jo
stc
cltd
test
xor
sub
std
or
nop
mov
lret
js
add
imul
sbb
push
leave
inc
jno
ss
mov
pop
fsubl
dec
push
stos
ret
inc
and
pop
cmp
enter
ret
int3
cs
sahf
xor
add
mov
and
xlat
test
popf
xchg
sub
cmp
daa
cmp
mov
clc
pop
xchg
adc
movl
xchg
aam
loop
mov
mov
mov
test
out
xor
popa
adc
push
sbb
addr16
sahf
sub
je
adc
loop
sarl
and
xchg
xor
and
repz
pop
push
popa
push
roll
cli
jmp
in
out
mov
mov
xor
jns
adc
push
fwait
mov
orb
fmull
clc
or
push
jmp
jns
aam
xor
fstpl
pop
xor
sbb
add
adc
mov
dec
jno
outsb
andb
cli
aad
in
scas
cmpb
push
divl
sahf
push
je
cmp
cmpsb
nop
insb
sub
push
adc
ret
outsb
fmuls
pop
dec
mov
mov
sub
hlt
mov
rolb
mov
cld
sbb
cmp
and
out
bound
pop
jl
movsb
stos
xchg
pop
xor
mov
ret
push
mov
loopne
fdivr
and
testb
fnsave
ds
movsl
push
std
mov
loop
pop
addl
cmp
jb
or
mov
fiadds
jnp
jp
nop
inc
mov
inc
jb
mov
decb
sub
dec
jb
insb
jno
loop
push
xlat
pop
popf
cmp
xor
cmpsl
aad
jae
pop
insl
dec
mov
jns
fiadds
xchg
les
cltd
cvtps2pi
popa
pop
mov
iret
xchg
popa
xchg
arpl
lcall
pop
mov
pop
xchg
je
mov
popa
es
mov
jno
js
xor
scas
mov
ja
xor
popa
xchg
outsb
dec
adc
fcoms
cmp
pop
pop
xor
rcll
push
xorb
pop
sbb
clc
jecxz
xor
pop
and
es
sub
imul
movsl
and
add
call
in
mov
pop
mov
lods
lds
das
sbbb
sar
fdivs
and
ret
push
and
push
xchg
mov
push
dec
add
xor
push
pop
insl
sub
je
out
ror
mov
ss
int3
sbb
and
xor
inc
cmp
pop
leave
out
fdivs
cli
jno
pop
xchg
pushf
jmp
cltd
jl
rcl
dec
jb
aaa
sbb
jge
and
push
es
jo
and
push
push
imul
lahf
stc
sbb
sub
jne
sbb
pushf
add
dec
dec
cmp
mov
mov
push
adc
xchg
inc
jle
cltd
movb
cvtps2pi
and
xchg
addr16
mov
loopne
in
jbe
jle
mov
pop
ficoms
xchg
jmp
popa
jb
scas
nop
adcl
push
gs
enter
or
adc
or
negb
ret
enter
pop
out
xlat
insl
mov
stc
lret
imul
sub
sbb
add
mov
enter
mov
mov
push
dec
pop
ja
and
cmpsb
cmpsb
push
dec
call
jns
and
lods
push
adc
test
aad
cmpb
push
jo
and
lcall
cmc
sbb
mov
mov
ss
ja
popa
mov
out
cmc
subb
aad
pop
icebp
jg
jns
dec
aaa
out
aas
dec
or
jnp
cmp
and
in
push
or
clc
outsb
in
ja
imul
and
cwtl
xor
lods
push
hlt
sbb
and
xchg
and
pusha
incl
sbb
test
and
adc
jg
cmp
movsl
sti
loope
dec
sub
dec
js
aam
push
je
jp
ljmp
jae
adc
mov
jle
int3
push
sub
cmc
push
rcrb
or
or
cwtl
rol
scas
filds
lods
sbb
arpl
adc
stos
aas
mov
xchg
fsubs
pop
or
sbb
dec
call
sarb
andl
push
pop
stos
dec
movsl
push
orb
jge
xor
cltd
rcll
test
ss
rolb
cwtl
xor
bound
inc
mov
inc
jns
repz
push
xor
lret
ret
mov
popf
pop
push
push
sbb
xchg
gs
mov
add
data16
push
mov
dec
imul
sti
mov
or
inc
mov
sahf
dec
sub
cld
xor
xchg
fidivrs
dec
or
jo
ds
add
pop
sbb
bound
lea
mov
fdivrl
mov
or
xor
cmp
push
mov
jle
cmp
mov
or
push
aas
fld1
rolb
mov
shr
fistl
ja
arpl
outsl
xor
mov
push
sub
clc
mov
scas
jns
mov
sti
xchg
clc
int
mov
jle
push
hlt
test
roll
mov
in
mov
cmp
pop
pop
add
and
std
xlat
and
mov
xor
pop
jno
mov
arpl
or
in
inc
popf
xchg
sub
imul
insl
adc
ss
adc
jae
jb
xor
fistps
cmp
popa
jle
fwait
xor
loope
push
sbb
das
imul
jne
add
scas
xchg
or
movsl
or
ss
hlt
cmp
sbb
dec
jo
mov
hlt
stc
dec
cmp
clc
sub
imul
mov
rcr
mov
insl
inc
aad
pop
popa
or
jecxz
mov
push
xchg
mov
in
pusha
cmp
test
leave
xchg
mov
es
mov
cmp
fildll
push
sub
out
or
xchg
imul
clc
mov
cli
jl
xor
pop
js
ret
sahf
test
sub
mov
adc
inc
lock
xorl
xor
xor
outsl
sahf
ret
test
xorb
pop
fstps
aaa
add
mov
hlt
popf
int
mov
pop
and
and
mov
shll
cs
fldt
lods
sub
cli
dec
push
les
rcrl
sbb
in
addr16
ja
sbb
enter
jne
xchg
or
xor
or
dec
bound
out
xchg
and
push
add
fwait
mov
xor
jnp
jle
fwait
sarl
jb
icebp
sub
insl
push
aad
repz
adc
sbb
orl
loopne
js
sub
cmp
mov
mov
int
mov
popa
bound
sbb
icebp
and
std
out
in
pop
loopne
xchg
loop
popf
jae,pt
jl
movsl
dec
or
jne
pop
push
xchg
shrl
mov
push
mov
iret
repz
mov
pop
inc
imul
add
repnz
dec
push
cmc
in
popa
icebp
jnp
fwait
jl
jb
popf
loope
cmp
ja
inc
mov
adc
jle
and
inc
cwtl
add
mov
jp
jo
js
pushf
mov
pop
sbb
mov
push
js
bound
push
pop
in
mov
push
ret
sti
stos
add
push
int
and
push
dec
outsl
sub
adc
add
add
jbe
cmp
out
push
cmp
ds
sarb
leave
lcall
roll
sub
es
cmp
or
adcl
mov
scas
push
mov
push
or
jb
adc
push
jns
clc
rcll
flds
dec
fnstenv
push
test
insl
dec
jl
mov
aaa
xor
sbb
lret
push
popa
mov
stos
sbb
dec
jge
lahf
stc
shl
or
xchg
call
mov
mov
mov
imul
movsb
scas
pop
gs
lcall
lahf
ret
movsl
add
sbb
jmp
push
test
xchg
inc
inc
js
xchg
push
mov
int
inc
lock
ss
jno
inc
inc
int3
or
lds
mov
daa
je
push
loop
cmp
aas
dec
fidivrl
jne
push
mov
xor
adc
in
add
sub
push
mov
frstor
inc
insl
scas
mov
repz
mov
das
inc
mov
ret
test
ret
nop
mov
jl
int
jp
add
int3
inc
shlb
dec
shrl
ret
or
inc
stc
adc
and
inc
mov
mov
cmp
sub
mov
lahf
lret
cli
jae
add
or
movsb
addl
xchg
xchg
es
sub
lret
nop
ljmp
sbb
inc
pop
pop
or
adc
filds
fs
push
jno
test
mov
loop
fidivrs
das
loop
mov
inc
repz
xor
or
push
fcomip
pop
cmpsb
ret
ja
or
sbb
xchg
push
and
sarb
adc
stos
movsl
xchg
push
cmc
fldt
sbb
add
in
push
or
inc
cltd
jne
mov
mov
jecxz
xchg
sarl
mov
dec
add
mov
pop
popa
sbb
in
sti
loop
test
xor
sbb
jnp
adcb
xor
lods
out
mov
and
rol
and
mov
xchg
out
fs
pop
and
dec
jbe
jp
call
inc
cmpsl
lret
inc
pop
sbb
lock
mov
mov
stc
fdivrs
mov
aaa
or
aad
jne
out
dec
mov
mov
sub
jno
fiadds
ja
xlat
inc
xor
cmp
mov
imul
jcxz
ret
mov
pop
dec
loop
mov
repnz
or
push
rclb
gs
das
sbbb
repz
jne
data16
add
push
mov
outsl
xchg
shr
and
push
fld
lock
inc
pop
hlt
lods
insb
cmp
hlt
sub
rol
mov
in
fdivl
ljmp
sahf
inc
or
sahf
lods
fldcw
shll
cmpsb
sbb
shll
mov
aam
xor
mov
dec
mov
dec
push
ds
sti
mov
mov
mov
scas
daa
adc
inc
lret
fwait
jmp
inc
fnstsw
mov
loope
stc
mov
dec
and
cld
pop
shlb
or
push
fwait
insl
adc
in
and
mov
fwait
arpl
cli
push
out
movsl
cltd
jns
adc
pop
jne
adc
mov
out
inc
mov
jle
rol
stos
in
ljmp
lods
lcall
rol
push
insl
sarb
dec
rorl
aaa
pop
ds
js
mov
lds
inc
mov
in
pop
adc
sti
push
fcoms
test
adc
ret
jns
ret
adc
sahf
jle
lret
roll
dec
cmp
sbb
inc
cmp
mov
mov
inc
and
mov
jne
cld
pushf
jp
jno
mov
dec
jle
ror
movsl
gs
mov
xchg
jnp
inc
fldl2e
fisubl
adc
mov
cmp
add
pop
pushf
sub
xor
enter
mov
leave
stc
mov
add
add
xchg
call
mov
fsubrl
pushf
fnstenv
adc
push
bound
in
mov
or
or
fidivrl
sub
xor
xchg
cmpb
dec
xchg
stos
mov
cmpsb
mov
dec
xchg
aaa
xlat
loop
fistpll
mov
rcrl
in
push
int
sbb
cmp
inc
stos
jmp
mov
cmc
inc
ds
mov
rol
xor
adc
xor
pop
xchg
or
lret
push
lret
add
out
fsubr
mov
sbb
xor
jmp
outsb
stos
cmc
je
aas
jecxz
cltd
push
cmpsb
js
dec
push
movsl
mov
stos
push
jb
mov
js
mov
pop
adc
sub
shrb
popf
andl
icebp
out
pop
out
lcall
add
mov
cltd
aad
cs
lea
jecxz
divl
jl
cmp
add
movsl
loopne
sub
test
mov
add
dec
test
mov
fldenv
clc
dec
dec
jb
clc
and
mov
add
ss
stos
frstor
lret
daa
add
out
in
movsl
dec
or
aam
dec
mov
xchg
nop
or
xchg
ds
inc
dec
lods
in
rcr
shlb
hlt
jb
and
jo
dec
pop
push
andb
daa
rcrl
inc
pop
xchg
lret
pop
je
fwait
sbbl
dec
mov
inc
repz
mov
clc
dec
add
or
sub
addr16
pop
inc
rcll
add
hlt
mov
es
fnstenv
sub
rol
pop
xor
sub
adc
xor
sahf
sbb
fistpll
sahf
sub
push
lods
push
sbb
ret
adc
int3
and
mov
test
xor
das
sti
add
jne
inc
pop
loopne
loope
mov
fwait
idivb
inc
sub
loope
and
sub
out
mov
je
add
jg
push
push
adc
xchg
into
cmc
movb
push
mov
sub
addl
mov
add
cmp
stos
xor
cwtl
push
push
dec
xchg
imul
mov
jecxz
ds
enter
jnp
jae
adc
dec
cmpsl
mov
movb
movsb
pop
gs
mov
inc
xchg
adcl
jae
cltd
je
sbb
imul
xchg
mov
lcall
sub
int3
xchg
test
lahf
rolb
jecxz
fs
jae
sbb
dec
enter
pop
xchg
jb
popf
movsl
pop
mov
sub
and
and
push
imul
pop
lds
pusha
enter
jno
dec
xchg
and
shlb
cltd
jnp
mov
aaa
cmp
sahf
test
popf
and
pop
pusha
in
clc
push
add
adc
iret
out
inc
gs
ds
and
push
and
arpl
xchg
bound
dec
icebp
mov
out
cltd
xchg
imul
es
mov
enter
mov
mov
outsl
and
nop
fbld
xrelease
sub
cmc
ror
dec
dec
cmc
push
out
xlat
pushf
shlb
xor
pop
cmpsl
sbb
aas
sub
addr16
mov
aaa
iret
jne
push
int
enter
mov
mov
jne
cmp
nop
hlt
dec
pop
adc
cmp
testl
cli
into
lahf
pop
mov
call
or
mov
xor
sbb
adc
push
aaa
adc
xor
xchg
or
jno
ret
fwait
xor
loope
cltd
in
jno
ds
out
add
inc
adc
filds
push
xchg
xchg
sbb
mov
mov
push
push
xchg
push
lods
jo
out
ss
repz
xor
xchg
sub
cmp
dec
push
shlb
rcrl
dec
lahf
test
sbb
iret
adc
ja
xor
xchg
rorb
lods
xchg
inc
jne
ds
mov
cmp
scas
add
cmc
sub
clc
es
dec
xor
dec
dec
jo
xlat
fistpll
push
inc
aaa
add
dec
inc
sub
push
insb
xor
pop
rorl
lret
jl
pop
imul
fstpt
shll
push
xchg
xchg
jmp
xchg
jl
scas
icebp
repnz
sub
call
imul
shl
pop
mov
mov
and
movsb
push
pop
lahf
push
cmp
ret
push
scas
sbb
mov
cld
xorl
fsts
insl
ret
mov
lahf
out
sbb
dec
lods
mov
mov
sbb
or
out
sub
frstor
fs
xchg
adc
push
popf
dec
pop
dec
pop
int
inc
insl
icebp
pop
test
cli
cmpsb
cmp
push
sbb
mov
adc
cmpsl
sti
wrmsr
dec
orb
add
adc
popl
ds
or
inc
add
jmp
sbb
adc
loop
mov
pop
mov
mov
lret
xor
jo
nop
cs
les
scas
jmp
shrl
das
popf
sahf
outsl
jmp
pop
mov
mov
cmp
call
les
sub
stos
js
sbb
jno
push
imul
mov
test
mov
stos
mov
add
mov
jo
out
dec
sub
in
cmpsb
sub
push
stc
mov
cmpsb
jb
lret
adc
and
mov
pop
mov
cmp
aaa
pop
ds
sti
movsb
jbe
notb
pusha
shlb
test
adc
fidivs
push
mov
lret
das
js
lahf
and
or
aas
scas
push
dec
fisttpl
pusha
jmp
or
stc
shrb
in
xor
movb
mov
and
push
loope
mov
mov
fmuls
mov
lods
cmp
bound
mov
dec
pop
jp
and
xchg
sbb
sbb
ret
xchg
fistpll
popf
andl
mov
ljmp
xsha256
cmpsb
adc
ds
mov
roll
cmp
kmovw
and
ss
lahf
mov
sbbl
pop
mov
cltd
fsubrs
fisubrl
in
sub
adc
icebp
adc
out
mov
or
jb
leave
push
scas
ret
pop
xor
daa
fimuls
or
mov
xor
clc
jnp
lods
push
sub
mov
mov
pop
jne
fld
xor
xchg
mov
cmpl
pushf
aas
xor
push
aaa
xchg
add
dec
lahf
jns
sbb
pop
aaa
mov
dec
mov
lock
test
fbstp
xchg
icebp
stos
fcompl
je
or
pop
sar
cmp
pop
mov
jno
dec
adc
xor
xlat
xor
push
sbbb
scas
es
mov
sub
mov
in
ret
and
sub
adc
inc
inc
add
mov
inc
sub
lcall
addb
mov
cmp
and
fildll
outsb
movsb
mov
or
mov
aad
aaa
sahf
test
ss
sub
mov
mov
das
dec
ss
and
mov
inc
adc
das
mov
mov
adc
adc
pop
addb
imul
gs
or
addb
fsubrs
cmp
mov
sub
push
lret
mov
sbb
and
push
and
aam
push
rcrb
adc
ja
dec
add
push
int3
cmp
jle
sahf
out
mov
xlat
sar
addr16
add
aas
testl
and
in
xorb
sub
fs
insb
lret
mov
fdivrs
shll
rorb
sahf
int3
sbb
cmc
cmpsb
cmpsl
dec
lods
adc
xor
push
mov
dec
sbb
xchg
mov
lcall
pop
xchg
pop
xor
into
sub
outsl
test
add
imul
pop
mov
daa
mov
pop
push
cs
and
push
shlb
push
insl
je
and
pusha
clc
nop
push
cmp
push
outsl
pop
xchg
lahf
int
repnz
or
xchg
fs
movsl
jg
repnz
push
repnz
xor
or
xchg
push
ja
fsubrs
cmpl
pop
fdivr
sub
xchg
out
stc
sbb
imul
dec
xor
mov
jecxz
test
adc
xor
pop
cmp
inc
loop
jns
cmp
or
push
jp
mov
ret
mov
cmpsl
dec
cmp
movsb
inc
push
mov
scas
icebp
movsl
imul
shlb
mov
dec
test
orb
jg
adc
out
sar
stc
fs
pop
test
scas
push
and
ret
repz
loope
xor
test
cltd
mov
add
icebp
push
into
cli
cmp
pop
pusha
and
push
outsl
push
or
lods
in
mov
sbb
mov
xchg
xor
inc
sbb
dec
shr
xor
mov
jb
sub
pop
out
ret
insl
pop
mov
cmp
fstl
push
push
lods
test
pop
push
mov
scas
pop
int3
dec
fsubrs
cmp
mov
xacquire
rcrl
xlat
fstl
cs
lods
dec
insb
sub
push
test
addb
or
sub
sbb
rcll
int3
cmp
fisubl
ja
xchg
or
lds
mov
rcpps
enter
dec
and
rcll
sti
imul
push
pop
sub
mov
movsb
addl
mov
js
push
sti
adc
xor
lods
mov
jge
test
iret
pop
cmp
cmp
add
and
int
xor
mov
popa
mov
fstl
imul
sahf
scas
fistl
pop
out
add
ficoms
rcll
cld
imul
inc
fistps
push
xchg
dec
jmp
mov
push
es
add
pop
or
cld
add
pop
mov
fadd
jbe
imul
mov
xorb
and
ret
stos
mov
mov
push
mov
pop
loop
pushf
mov
movsb
outsl
test
inc
push
into
repz
pusha
mov
cmp
int3
leave
sub
fistpl
sti
mov
das
jl
fstp
addb
loopne
cmc
out
mov
out
pop
out
filds
cli
rorb
iret
sub
add
xchg
xor
dec
jnp
test
lcall
stc
xor
jecxz
popa
cltd
js
mov
mov
adc
inc
test
push
test
xchg
jnp
dec
mov
inc
pop
cmp
into
movsl
jnp
pop
cwtl
test
dec
popa
stos
call
movaps
inc
push
or
movsl
push
lods
pop
mov
mov
mov
cmp
dec
jge
sahf
lret
jp
insb
xchg
cmp
add
push
push
mov
xchg
imul
jb
inc
lahf
in
cmp
or
cmp
cmp
xchg
call
into
mov
inc
sub
xchg
in
cmp
dec
test
cmpsl
jns
insl
rorb
dec
dec
in
imul
mov
jns
mov
pushf
repz
imul
jo
and
mov
aam
loope
xchg
or
shlb
mov
mov
or
push
jae
push
and
imul
mov
popf
mov
cld
fstps
lcall
cmp
sbb
sbb
and
pop
adc
pushf
jp
jb
ret
pop
popf
push
lahf
cmp
ljmp
es
cltd
jl
mov
xchg
dec
out
push
pop
fxch
jp
add
or
fstpt
mov
shlb
add
xchg
inc
and
lock
adc
mull
mov
test
cmp
in
addl
shll
loop
adc
sub
and
inc
pusha
jge
add
imul
sahf
cltd
xor
jno
aas
dec
aam
enter
mov
inc
mov
daa
shrb
in
xor
aas
mov
cld
inc
stos
cs
xchg
xchg
jecxz
pop
jg
jnp
aam
sbb
pusha
pop
cmp
jmp
int3
adc
dec
sub
push
cmp
ljmp
or
cmp
or
pop
or
mov
lcall
les
xchg
and
and
or
in
inc
mov
push
fsubp
inc
cmp
mov
xor
repnz
sub
shlb
pushf
sbb
jl
jle
js
jns
in
lret
push
push
aas
jl
and
test
int3
ret
hlt
mov
das
push
xstore-rng
cmpsl
push
cmp
mov
xchg
xlat
rcl
hlt
out
xchg
or
jle
add
sbb
dec
insl
pop
fnstsw
aam
push
fbstp
add
mov
stos
adc
mov
and
push
fmull
inc
push
int
dec
clc
or
pop
dec
leave
mov
xor
mov
test
cs
adc
es
fsubs
mov
loope
jne
imul
inc
xchg
iret
jo
sub
mov
push
loop
outsl
pusha
pop
loop
jmp
pop
adcl
pop
ds
ds
int3
jae
repz
and
das
in
dec
inc
add
add
insl
xchg
mov
cmp
repnz
add
push
mov
add
xchg
jne
shll
mov
fisubs
xlat
jp
pop
imul
pop
stc
xchg
insl
cld
push
rcll
cltd
mov
xchg
jae
addb
pusha
ret
and
cltd
fisubl
test
out
jl
loop
push
and
jmp
push
out
aas
jmp
mov
stos
nop
cmp
xor
inc
mov
dec
add
not
add
nop
sahf
arpl
push
sub
xchg
call
cmpsb
or
and
andb
pop
fimuls
iret
mov
lods
in
push
addr16
xchg
or
cmp
bound
xor
arpl
fwait
rol
xchg
mov
cli
fnstcw
sbb
aaa
push
std
cltd
mov
push
mov
pop
jmp
cmpsb
lea
adc
pop
and
adc
test
cli
arpl
pop
gs
lds
xor
dec
cmp
and
lods
lods
xchg
lret
in
push
jge
sahf
movsb
ret
stos
mov
fbstp
mov
dec
jle
sbb
push
pop
pop
daa
aas
or
xchg
mov
adc
or
data16
sbb
out
repz
cltd
lret
cld
add
xchg
out
inc
lods
stos
in
es
adc
shr
mov
pop
jae
or
in
mov
inc
shrl
mov
rorl
scas
add
repz
mov
push
sub
sti
stos
cmp
jbe
addr16
or
fwait
dec
xchg
mov
adc
sub
adc
and
imul
xchg
mov
inc
mov
pop
adc
aaa
fdivrp
adc
dec
pop
popf
adc
in
push
inc
scas
fcoml
cmp
mov
sbb
mov
push
test
xorb
dec
mov
loope
stc
cmc
cli
inc
in
pushf
push
rorl
into
xor
xor
in
sub
or
aam
out
daa
cmp
mov
clc
std
xor
adc
es
mov
cmpsb
shll
movsl
push
into
nop
aas
fstps
xor
cld
jno
mov
push
or
adc
out
sbb
and
mov
push
icebp
inc
cli
mov
int
push
and
lret
and
sbb
ja
xor
and
aaa
and
xchg
adc
mov
lods
rorl
push
stc
push
arpl
mov
mov
push
pop
sbb
aas
ljmp
das
and
add
jmp
inc
push
pop
push
dec
dec
pusha
sbb
in
cmp
sub
sub
loopne
xchg
inc
pop
or
loop
hlt
sub
adc
pop
int3
pop
mov
push
aas
pop
sub
into
add
mov
rorl
mov
sub
cs
xchg
jo
xlat
push
mov
mov
adc
push
clc
std
xchg
fwait
adc
adc
ja
inc
mov
push
inc
push
sbb
jo
push
and
repnz
or
jp
out
arpl
aad
jns
fdivl
ljmp
cmpl
fldt
dec
popf
jle
push
cmp
cltd
push
pop
cmc
cltd
outsb
loopne
xchg
int3
push
out
jne
inc
mov
popf
fwait
add
cmp
mov
mov
lods
test
xor
pop
frstor
iret
pushf
fnstsw
out
jo
outsb
stc
cmp
std
mul
and
shl
push
jge
sarl
repnz
jo
test
sub
adc
dec
stos
xor
jge
ret
cmp
lcall
add
je
nop
dec
lds
inc
xor
sbb
sarb
repz
jle
test
adcb
dec
enter
jg
push
push
lret
fistps
mov
faddl
cmpsb
and
cld
mov
or
mov
lcall
movsl
stos
stos
loopne
int3
insb
cs
jne
pop
es
push
sahf
std
push
mov
aad
scas
rcrl
lds
xor
aad
sub
call
lcall
and
mov
stos
cmp
nop
hlt
lods
shll
sub
adc
mov
cmp
push
jbe
cmpsb
lods
mov
mov
jmp
push
pop
jle
cmc
lcall
lods
xor
jnp
inc
jno
ds
call
pop
nop
sbb
pushf
mull
test
xchg
mov
test
jecxz
fnstenv
sbb
je
js
sahf
cmp
xor
les
xlat
lcall
mov
js
shrl
jge
cmp
or
cld
mov
dec
mov
sbb
push
push
push
jns
push
mov
cmp
push
add
mov
or
pop
je
or
push
pop
arpl
inc
stos
in
and
xchg
push
rclb
push
in
and
pop
and
xchg
sub
pushf
iret
inc
mov
cld
lods
jp
int3
xchg
mov
inc
movsb
out
pop
jmp
imul
or
sbb
pop
mov
jge
lods
imul
cwtl
xor
lahf
pop
adc
ss
filds
imul
test
push
pop
or
jmp
mov
orb
cltd
pushf
les
inc
in
aad
cmp
in
std
add
xchg
data16
jno
cmpsl
mov
mov
push
mov
stos
aas
mov
push
or
dec
mov
out
das
in
lret
iret
cld
sub
dec
mov
jbe
movsl
cs
pushf
or
jnp
cmp
pop
out
call
dec
inc
pop
sub
out
adc
lock
or
iret
out
jp
std
sbb
mov
incb
mov
jp
gs
mov
pusha
or
mov
cmpsb
test
jne
cs
cmp
sti
xor
dec
sub
sub
add
popa
fwait
sbb
jle
test
mov
dec
mov
repz
dec
lcall
lods
pusha
pop
jmp
mov
scas
into
popa
pop
jne
gs
orl
dec
shl
das
and
fildll
out
notl
xchg
es
mov
dec
arpl
pusha
and
les
outsl
adc
xor
fldl
adc
and
add
decl
xor
and
loope
iret
dec
jae
outsb
jb
nop
stos
inc
in
xor
xchg
addr16
fdivs
mov
add
push
in
dec
and
test
lds
shl
leave
push
or
movsb
jo
test
jp
sub
daa
xchg
pop
test
adc
shll
fsub
insl
jb
mov
cs
cli
pop
pop
stos
xchg
and
bound
cmp
and
cmp
roll
fldenv
fs
inc
xchg
cli
dec
enter
mov
addl
imul
pop
jno
dec
or
push
dec
in
fcomi
inc
sti
dec
lock
es
hlt
mov
mov
push
push
push
dec
xchg
add
jmp
scas
inc
ljmp
mov
ds
add
cli
jns
jno
mov
cmp
mov
mov
inc
mov
jmp
cmp
imul
pusha
outsb
fwait
loopne
pop
cmp
lret
sbb
notl
dec
pop
jbe
and
adc
xor
aam
mov
shl
std
pop
into
mov
pusha
adc
inc
push
and
repnz
sub
test
xchg
sbb
es
lds
push
sti
dec
cmp
movsl
insl
aaa
adc
pop
enter
hlt
jl
jne
jmp
xchg
movsb
push
stos
cmp
jne
imul
jecxz
xchg
test
ret
and
je
mov
test
fcompl
cmpb
push
insb
hlt
and
jp
and
mov
cld
cs
shl
es
and
push
jp
mov
fstl
enter
enter
push
fisubs
mov
out
mov
outsb
shlb
sbbb
xor
rclb
dec
and
inc
mov
or
pop
iret
mov
fidivl
or
inc
mov
aaa
push
icebp
pop
xchg
leave
daa
testb
fsubrl
mov
pop
gs
mov
cmpsl
xlat
addl
push
jmp
mov
lock
mov
movsl
inc
adc
loope
fwait
shlb
mov
xor
or
lods
out
and
jnp
jecxz
lcall
dec
cld
push
cltd
test
insl
xchg
push
outsl
in
jp
imul
sarl
xor
and
orb
addr16
cmp
mov
stos
push
imul
into
xchg
gs
rcrb
fpatan
sub
fsubl
dec
lods
lock
aad
cwtl
mov
jmp
js
insb
cli
cmpb
dec
mov
mov
test
scas
pop
inc
mov
ret
jmp
and
jmp
sbb
inc
sbb
daa
pop
pop
outsb
pop
ror
adc
push
stc
adc
out
jp
and
jecxz
inc
cmp
inc
inc
adc
jno
cwtl
dec
cmp
fsts
icebp
movsb
xchg
imul
insl
and
cmpsb
stc
ds
cmp
test
aam
xchg
mov
into
xchg
jmp
sub
insl
sub
push
sbb
popf
insb
mov
xchg
pushf
mov
sarb
ret
ret
cli
addb
bnd
decl
mov
sbb
jmp
cltd
je
pop
xorb
lea
xchg
rclb
push
pop
fucom
fwait
iret
adc
push
jns
inc
fisubl
inc
adc
add
sbb
xchg
push
push
mov
nop
push
int3
xor
cmp
es
popf
xchg
popa
shll
and
add
xchg
dec
mov
adc
and
out
xchg
jl
arpl
sarl
mov
xor
scas
pop
cmpsl
mov
jne
mov
aas
adc
repz
cmp
inc
loop
nop
enter
ret
fcmovbe
aad
jl
js
adc
aaa
in
xor
and
xchg
fstpt
push
ss
js
cltd
arpl
scas
inc
cwtl
inc
insb
sbb
xlat
jo
loop
cmp
lods
pop
mov
xlat
mov
aad
ficoml
adc
jno
jle
fildl
push
ja
movsl
enter
push
pop
outsb
mov
inc
push
mov
push
adcl
into
or
xchg
jae
psllq
xor
lret
xor
cmc
push
cmp
loopne
pop
incb
pusha
popf
pop
fdivl
aad
adc
cmp
mov
popf
mov
jb
add
ja
notb
xchg
mov
cs
cltd
cli
mov
clc
cmp
enter
push
mov
fmuls
xchg
jae
mov
scas
test
push
dec
dec
daa
cmp
mov
sbb
or
movd
mov
push
mov
jle
ret
sbb
sbb
mov
ja
je
mov
xchg
dec
add
sbb
outsl
and
cmp
mov
enter
sub
sahf
push
fidivs
mov
and
mov
shll
xchg
dec
arpl
mov
flds
cltd
inc
mov
mov
clc
adc
jge
mov
cmp
jne
xor
mov
aad
push
mov
js
mov
out
setle
leave
cmpsl
inc
in
in
iret
push
test
ss
fwait
dec
repnz
or
add
push
popf
or
and
xchg
and
stos
sub
jbe
rolb
test
mov
cli
test
lock
lret
nop
repnz
bound
shlb
mov
jne
in
shl
xchg
xchg
shrl
and
push
in
xor
adc
xor
and
mov
leave
mov
jmp
mov
push
and
sub
add
mov
sbb
out
and
into
lods
jno
jle
push
adc
cmpsl
jecxz
data16
xor
jge
imul
iret
rcr
cwtl
insl
jp
rorl
mov
cltd
mov
cmp
mov
mov
adc
adc
idivl
mov
xchg
xchg
rorb
in
lock
lcall
aaa
aad
jb
jl
dec
ficoms
sbb
arpl
cwtl
xchg
cwtl
pop
sbb
out
add
inc
fsubr
shl
mov
shrb
pop
repz
dec
cmpsb
push
cmp
out
cwtl
sub
dec
cmp
mov
fwait
push
fistps
outsl
xlat
jb
and
loopne
popf
ror
daa
dec
repnz
cmpsl
jae
andl
add
aad
setle
scas
iret
xorb
push
in
int
mov
icebp
ret
add
and
lods
mov
xor
dec
aad
fnsave
xchg
sub
cmpsl
enter
aas
stc
jmp
xchg
sbb
in
mov
jae
push
sub
push
xor
xchg
jo
int
xor
ja
aad
dec
jmp
lods
sbb
lock
rolb
xchg
mov
mov
stc
pop
bound
push
cmpsb
or
mov
sub
jns
cmc
pop
jns
mov
dec
and
popf
rcr
mov
push
adc
or
mov
loope
push
jnp
inc
mov
sbb
pop
pop
sti
or
inc
test
pop
out
inc
sbb
mov
xchg
rolb
push
loopne
mov
sub
jo
jne
xor
jle
cs
repz
xchg
jnp
popa
sub
fimuls
or
out
dec
cltd
leave
mov
in
test
addr16
movsl
dec
out
xor
push
cmp
bound
dec
js
ficoml
mov
xor
test
fisubrl
sub
mov
push
sub
xchg
cwtl
inc
sub
shll
pop
movsb
mov
sbb
lea
and
gs
loope
insl
jnp
pop
jbe
jb
push
push
dec
add
addb
std
jecxz
push
nop
sub
or
addr16
sbb
mov
cmp
pop
xor
adc
ds
cld
push
mov
cmp
inc
mov
sarl
pop
cmp
ja
test
sahf
cli
adc
test
shrl
loope
xor
adc
mov
mov
cmp
cmpsb
fs
xchg
mov
es
adc
outsl
insl
inc
enter
xor
pop
fdivrp
adc
iret
mov
repz
int3
sub
sub
ret
adc
push
mov
cmpsb
sahf
movsl
jl
loopne
outsl
cltd
xor
push
sub
test
push
push
frstor
adc
and
push
push
sub
lea
xor
ss
flds
mov
hlt
fcompl
and
insl
mov
inc
aas
mov
pop
dec
pusha
inc
mov
lcall
push
cmp
notl
cmp
divb
dec
adc
in
cmpsl
into
cld
imul
push
repnz
aam
fcompl
fsubl
mov
mov
rcll
mov
in
bnd
mov
outsb
daa
pushl
push
pop
subb
adc
xor
andl
rol
fnstsw
cld
jns
or
inc
inc
ja
xlat
fcomip
adc
cld
pop
mov
jns
orb
push
lret
cmp
add
shl
xchg
outsb
jge
fwait
cmp
mov
loopne
iret
jp
scas
xor
mov
das
xchg
and
inc
sbb
ljmp
mov
lds
cmp
mov
inc
mov
add
pop
aas
mov
xor
mov
ljmp
mov
cmp
xchg
pop
fsubrp
aad
pop
outsl
cld
adc
pop
sub
mov
lock
dec
xchg
out
inc
mov
pop
ficompl
xchg
jns
jecxz
enter
rolb
fdivrp
jl
fwait
sbb
sub
loope
cli
xchg
lock
js
in
insl
je
jmp
mov
xchg
ds
and
xorb
sbb
xchg
or
imul
popf
arpl
xchg
mov
jle
mov
sub
dec
add
inc
aas
aaa
negl
pop
loope
mov
cwtl
das
sbb
fsubrl
dec
outsl
lods
in
inc
sbb
mov
arpl
xchg
shl
ret
sub
es
add
repz
dec
push
cmp
negl
in
out
pushf
inc
add
inc
mov
test
int3
add
in
pop
lret
pop
fiadds
pop
push
jo
push
mov
scas
negl
stc
mov
and
dec
imul
mov
push
enter
add
rcrl
iret
mov
add
lods
or
xchg
popl
lahf
sbb
je
sub
ds
stc
pop
in
lods
in
xchg
mov
bound
fcomps
push
neg
jns
sti
mov
xchg
ss
pop
lea
jno
pop
and
data16
fisubrs
inc
mov
test
repnz
jecxz
or
daa
fstps
sbb
mov
addr16
addb
cmp
dec
mov
cwtl
ret
push
ds
add
pop
and
inc
dec
jae
push
add
fidivrl
mov
jb
pop
inc
cmp
loop
orl
mov
dec
lahf
or
mov
cwtl
ret
loope
xchg
jnp
xchg
cli
repnz
adc
adc
inc
adc
fnstcw
popa
mov
add
push
xor
pop
fmul
insl
test
ljmp
stc
lcall
push
adc
les
adc
jle
ljmp
fsubrl
cmp
pop
mov
sub
jb
das
fldl
loope
and
shlb
jmp
daa
mov
xlat
mov
jo
stos
xor
push
int
xchg
ds
mov
hlt
cmp
outsb
xchg
iret
push
xorl
jno
cmp
mov
inc
test
out
and
mov
cmp
xchg
jmp
inc
aaa
sbb
sub
gs
mov
popf
js
inc
push
xchg
xor
xchg
mov
sahf
jl
cmpb
pop
sbb
adc
sub
cmp
add
push
inc
loop
lret
xchg
jl
pop
jmp
sbb
cmc
stos
enter
inc
sbb
cli
xor
mov
insb
das
xchg
fmull
mov
push
lahf
cli
ja
xor
cld
push
pop
jmp
mov
pushf
insl
loopne
repnz
ds
lahf
sub
pop
lahf
adc
xchg
gs
bound
lock
and
push
pop
ror
popa
adc
pop
push
xchg
sarb
ret
mov
mov
add
pop
or
jg
cmp
movsl
iret
in
lahf
inc
sub
jl
sti
rorb
push
mov
test
dec
lods
add
das
xchg
cld
pop
pop
cltd
fisubs
or
mov
cmc
mov
sub
mov
cltd
jb
in
lea
jp
inc
int3
dec
jle
jl
rcll
inc
pushf
out
scas
pop
lods
mov
lods
mov
jle
add
push
adc
pop
lret
lret
mov
jg
inc
popa
inc
int3
sub
sbb
seta
arpl
add
adc
inc
cli
xor
sbb
mov
cmp
fiaddl
xor
cmp
lods
xchg
lds
insb
call
movsb
jmp
std
pushf
call
mov
pop
pusha
hlt
out
test
jg
fldt
sub
nop
mov
iret
xchg
pop
push
out
loop
sti
pop
mov
sbb
fadd
mov
movsb
rol
mov
fs
or
sbb
pop
sub
sub
leave
push
pop
adc
jbe
loope
xchg
xchg
int
jno
stos
ljmp
das
lock
push
out
es
dec
mov
cs
and
mov
add
cmp
scas
xchg
dec
repnz
pop
mull
xchg
popf
je
jns
push
jl
rcrl
cmp
sahf
shll
adc
xchg
mov
mov
lock
fstps
ret
jp
add
hlt
shr
cmp
sbb
ret
mov
icebp
sub
js
push
mov
sbb
shll
scas
push
cmc
loop
out
and
lret
fidivs
out
mov
and
subl
pop
sbb
mov
test
and
rcrl
add
daa
jecxz
jb
leave
out
mov
and
lcall
jo
add
jl
fnstsw
mov
and
push
add
nop
cmp
mov
cs
pop
mov
jp
rol
fistpl
inc
add
inc
pushf
lret
fstp
dec
dec
ret
sub
aam
repnz
mov
jecxz
std
rcl
in
or
jle
inc
loope
cwtl
mov
hlt
sarl
scas
fisubrl
push
mov
call
dec
clc
push
jl
mov
push
call
fstpl
andb
int3
jns
or
ds
lock
jae
mov
mov
adc
lcall
filds
mov
inc
enter
lret
aam
pop
jo
js
add
xchg
ret
xchg
inc
ljmp
jae
mov
idiv
or
in
and
test
icebp
mov
dec
push
aas
push
or
bound
push
dec
sub
mov
int3
fmuls
push
add
enter
adc
sub
xchg
adc
mov
xchg
cwtl
pop
syscall
int3
adc
sarl
xor
or
sub
add
cmp
inc
dec
test
popf
into
dec
movsl
push
icebp
jns
loop
push
xor
cs
jbe
out
gs
test
clc
dec
movsl
push
ret
and
inc
aam
mov
repnz
lret
mov
fs
test
jmp
cli
xor
inc
int3
sub
in
jno
cmpb
adc
lcall
and
fsub
imul
dec
ds
inc
js
mov
fnstcw
push
std
mov
mov
ss
xorl
repz
in
test
arpl
test
out
mov
addr16
mov
push
daa
pop
cmp
jmp
aas
std
mov
cmpsl
inc
shrb
aas
adc
aam
or
cmpsb
adc
fisubs
sti
std
outsb
in
fnstenv
stos
aas
push
jno
out
fmull
mov
shlb
test
data16
push
mov
imul
jle,pn
jns
into
and
mov
aas
pop
icebp
push
mov
adcb
xchg
mov
jmp
stc
and
mov
pop
jb
outsb
push
test
or
dec
movsb
scas
sub
out
and
adc
neg
mov
pop
mov
ss
insb
outsl
subb
mov
clc
inc
loopne
test
xchg
sub
fbstp
xor
ja
add
jns
mov
push
daa
mov
rorl
jns
mov
aad
int3
rolb
jmp
lahf
fidivrs
inc
inc
aad
lock
sbb
mov
cmp
sub
sub
mov
adc
mov
stos
sahf
cmp
enter
sbb
icebp
inc
adc
pop
add
jl
mov
ret
inc
add
test
xor
pop
pop
mov
xchg
jnp
xor
sbb
jns
mov
sbb
shlb
or
mov
mov
dec
mov
fcoms
jne
fsubl
sbb
test
cmp
xor
pop
dec
popf
jno
test
xchg
loop
popa
lcall
subb
sbb
lret
lret
mov
adc
dec
ret
sahf
movsl
push
popf
lret
gs
bound
sub
aam
mov
aad
or
or
in
stc
mov
cli
adc
fmuls
in
ljmp
mov
hlt
iret
sti
mov
aaa
or
add
je
dec
inc
dec
jp
mov
adc
xchg
aad
push
imul
mov
shl
repnz
adc
push
aaa
xor
inc
adc
mov
imul
in
in
inc
pop
pushf
mov
insb
call
cltd
mov
out
inc
cs
and
repnz
xor
mov
sub
faddl
out
addr16
gs
add
out
js
dec
dec
mov
xchg
push
adc
daa
rcl
addr16
jl
aad
jl
ror
scas
mov
or
add
jno
push
adc
mov
popa
dec
addl
pop
mov
ficoms
setns
shl
mov
enter
nop
rcll
xchg
mov
cmpsl
mov
cli
cltd
mov
test
sub
pop
vmread
test
xor
test
push
dec
sbb
sbb
dec
mov
dec
lret
movsb
fstpl
sti
repz
test
rorl
mov
in
mov
lcall
mov
out
mov
mov
ds
push
into
xor
jb
lods
mov
jg
mov
sbb
mov
pop
adc
rolb
loopne
mov
cli
out
jno,pn
mov
mov
or
sub
jp
cltd
cmp
lcall
aad
ret
adc
xor
scas
ficomps
scas
repz
and
and
inc
nop
jge
inc
arpl
push
mov
cmpsl
pop
aad
in
jge
adc
jnp
pusha
fcomi
pop
mov
scas
nop
cmp
jle
push
aad
in
and
iret
ds
cmp
cmp
add
cmovae
icebp
leave
arpl
push
mov
cmp
mov
ja
add
negl
sbb
in
dec
pop
cmp
shr
aas
pusha
xchg
divl
dec
jmp
push
mov
popa
xor
movsl
adc
push
testl
pushf
adc
and
shrl
test
pop
out
mov
sub
lea
fadds
pop
out
je
outsl
in
loopne
fstpt
mov
cwtl
ret
pushf
inc
jge
in
push
pop
popaw
lods
icebp
jne
insl
mov
xor
dec
ret
nop
mov
jns
or
push
dec
add
inc
mov
push
ljmp
aam
loopne
xlat
jbe
jge
js
dec
movsb
ja
adc
push
jle
jbe
cmp
imul
stos
mov
nop
es
cmp
cmp
or
mov
rclb
data16
sub
repnz
cmpsl
ficoms
jle,pt
push
mov
test
aas
test
fs
pop
sbb
fs
lahf
sub
xchg
insb
or
out
lret
mov
pop
jns
insl
loope
xor
xchg
pop
fwait
sahf
stos
out
movsl
lret
push
in
mov
cmp
mov
in
xor
orps
fmull
cld
mov
stc
in
adc
push
fldcw
fmuls
outsl
loope
cmp
sbb
rcl
ja
push
nop
mov
testb
arpl
repnz
jp
xchg
cltd
xor
jg
stos
sub
pop
xchg
push
shlb
add
jg
stos
and
and
shll
inc
xchg
inc
nop
jmp
pop
or
add
jo
imul
and
nop
enter
xchg
orb
arpl
jnp
jmp
scas
ja
cmc
push
test
lret
push
mov
lods
push
pop
aad
cmpsb
into
jge
cmpsl
sbb
mov
lcall
adc
push
push
and
jmp
jo
mov
lahf
jle
insb
pushf
cmp
push
adc
mov
lea
es
dec
je
ljmp
movsl
dec
insl
dec
cmp
das
mov
push
in
cltd
scas
imul
and
inc
loope
adc
pop
mov
push
popf
dec
cltd
adc
dec
or
adc
pop
add
popa
push
sub
movsb
lret
jnp
in
pop
or
mov
xor
sarl
loop
cmpsl
push
outsl
in
popa
adcl
lods
insl
xor
mov
test
xchg
mulb
add
aad
mov
mov
int3
mov
daa
mov
mov
cli
inc
jo
mov
xor
filds
jge
xor
push
inc
add
pop
in
push
cs
cmp
push
pushf
pop
push
pop
xchg
into
or
push
aam
push
xchg
add
scas
cmp
mov
cmp
shll
popa
sbb
int
jg
sub
mov
test
inc
mov
pop
jecxz
dec
jno
cmp
ljmp
xlat
mov
or
js
mov
mov
pop
and
adc
jne
inc
das
int
and
push
ret
xlat
sahf
scas
and
push
cmp
jne
xchg
aam
call
jge
mov
fistpl
dec
testb
mov
loopne
jns
dec
jmp
repnz
mov
aad
es
sahf
shr
sub
push
and
cmp
jg
lods
cmc
inc
cmp
pop
and
pop
fisttpl
mov
dec
add
pop
pushf
add
cmpsb
jmp
popa
call
dec
mov
scas
pusha
xchg
imulb
or
and
lods
cs
dec
jl
scas
outsb
sets
inc
xorl
cmc
dec
mov
sub
mov
xchg
ret
imul
sbb
jle
mov
je
mov
xchg
mov
mov
cmp
sbb
cltd
push
and
into
orl
sbb
cmpsl
mov
cwtl
loopne
lret
aad
bnd
dec
dec
subl
adc
in
dec
add
filds
mov
adc
iret
sbb
add
pcmpeqb
add
pop
mov
jae
cmp
stc
sub
ljmp
fstps
scas
push
mov
ret
pushl
dec
push
gs
and
push
xor
dec
adc
adc
cltd
icebp
in
cld
push
std
sbb
data16
pop
fistpll
lock
sub
inc
and
enter
jg
mov
out
or
sub
xor
sub
xchg
pushf
sahf
inc
js
jno
mov
sub
in
mov
pop
pusha
mov
push
insb
mov
adc
cmpsl
jne
outsb
pop
push
addr16
movsl
sti
icebp
push
or
scas
xchg
pop
pusha
mov
cwtl
pop
mov
scas
jl
jbe
and
aam
mov
or
pusha
sbb
cmc
mov
shl
std
push
jg
mov
jo
popa
das
push
cmpsl
es
inc
aas
pop
mov
pop
je
lret
lcall
rcl
add
mov
inc
sub
fs
jae
test
data16
testb
cmp
cmp
and
cmp
cltd
mov
notl
inc
cltd
inc
movsb
jecxz
imull
add
aaa
scas
push
loope
sar
jp
jmp
rol
lds
cmc
lea
push
mov
adc
sub
mov
outsl
popf
cmp
mov
xchg
daa
sub
test
pushf
jecxz
mov
pop
nop
and
push
or
push
sub
sub
rcrb
fisubl
push
add
fimuls
cmpsl
dec
dec
ds
mov
jecxz
sub
add
shrb
jge
sbb
pop
mov
leave
adc
xchg
push
inc
xchg
pop
loopne
leave
insb
and
sub
push
or
jmp
nop/reserved
les
fistpll
bound
out
cltd
lock
shl
xchg
xor
mov
sbb
inc
push
iret
and
clc
outsl
push
in
aam
push
inc
xorl
pusha
outsl
jne
loop
shl
or
fwait
iret
out
int
addr16
add
cmpsb
std
arpl
out
outsb
or
outsl
movsl
sub
rolb
jo
mov
mov
icebp
iret
or
lods
mov
dec
jo
mov
imul
andl
mov
sub
pop
xor
push
adc
push
xor
sub
xor
icebp
xchg
or
insb
mov
xor
pop
adc
pushf
pop
mov
dec
cli
push
repz
fisubl
xor
adc
jge
push
cli
outsb
pop
jns
push
arpl
andl
adc
lods
jae
or
pop
rorb
sub
cmp
aad
xchg
dec
xor
stc
jae
mov
adc
add
dec
sub
enter
add
scas
pop
pop
cmc
dec
frstor
lods
paddq
movsl
adc
pop
sub
xchg
push
hlt
pop
dec
mov
pop
mov
fcmovbe
xlat
adc
ds
test
and
xchg
je
mov
jl
idiv
mov
xchg
out
mov
fsubs
jno
mov
mov
cmc
jecxz
xchg
xor
xchg
stos
pop
sahf
inc
rorb
sub
or
jne
aas
mov
and
sti
shlb
inc
cmovnp
sub
fs
lret
dec
mov
adcb
out
sub
insb
outsl
xchg
jb
xlat
ret
ret
mov
mov
loope
or
out
call
sub
mov
test
adc
mov
xor
mov
mov
add
or
arpl
sub
aaa
mov
jl
mov
cmp
addr16
lcall
mov
es
out
adcb
call
mov
js
add
jg
fsubs
xor
jmp
jecxz
in
cld
adc
out
and
cltd
mov
nop
xchg
pop
and
mov
sbb
mov
or
and
aaa
gs
push
pushw
ljmp
pop
ljmp
jecxz
sbb
iret
cmc
mov
mov
mov
lret
movsb
popa
adcl
mov
mov
test
dec
mov
adc
mov
imul
jge
cli
dec
das
data16
inc
ss
pop
rcrb
je
lcall
and
or
jo
int3
cwtl
push
sbb
fists
push
shrl
into
ja
js
xor
mov
in
dec
dec
mov
xor
mov
ret
sbb
aam
aam
lock
int3
xchg
push
add
rol
adc
mov
cmc
cmp
mov
mov
lahf
xchg
push
mov
mov
jo
test
lcall
mov
das
lret
sbb
sbb
cltd
outsl
adc
mov
lahf
pop
gs
xlat
lods
jp
dec
pop
sbb
gs
lret
and
cwtl
cmp
cwtl
insl
into
test
pop
add
fidivrs
mov
popf
push
fiadds
pop
jp
jbe
sbb
outsb
fpatan
out
lods
test
lock
cmp
scas
xor
inc
dec
sub
and
fmull
into
into
adc
xor
push
sbb
jl
push
sub
rep
addb
movsl
pop
mov
mov
pop
push
sbb
pop
sub
scas
stos
pop
jbe
jns
aam
inc
pop
out
add
inc
stos
sub
pop
add
pop
pop
and
call
scas
addl
inc
insb
push
outsl
jno
pop
push
cmc
out
loopne
test
mov
mov
into
mov
mov
iret
aas
int3
leave
cli
fmul
ret
addr16
xchg
fdivs
add
pop
jmp
adc
pop
inc
jp
mov
iret
pop
shlb
mov
movsl
aad
mov
lods
xor
mov
jns
into
lods
push
imul
outsb
fs
fwait
mov
je
das
pusha
or
mov
xchg
xchg
xchg
or
stos
dec
icebp
shll
mov
inc
jnp
pop
xor
adc
inc
mov
inc
jne
out
fidivs
add
sbb
cmp
push
cmp
fcmovu
sub
add
js
jbe
data16
adc
ljmp
adc
inc
xchg
mov
hlt
xor
addr16
xor
insl
push
dec
cwtl
nop
into
test
inc
or
jns
jae
and
push
xchg
sbb
lock
iret
adc
cs
adc
or
sub
sbb
sub
push
push
and
out
in
adc
int
mov
mov
xor
pop
push
mov
arpl
sbb
and
push
pushf
xchg
xchg
inc
scas
imul
rorl
test
addr16
gs
cmp
sub
mov
fsubrs
mov
pop
mov
mov
pop
ret
iret
mov
sbb
or
or
add
in
jge
sbb
fisttpl
iret
lods
jl
movsl
popa
mov
andl
mov
mov
int3
cmpsb
push
dec
dec
in
cmpsl
pop
sbb
cmp
adc
aaa
int
sub
int3
es
ljmp
cs
cmp
loopne
mov
cmc
notb
ds
icebp
out
inc
mov
ret
pop
out
mov
js
push
adc
xchg
mov
cmp
inc
negl
push
in
xchg
mov
pop
sbb
lods
add
xchg
jo
in
enter
test
cmpsb
mov
in
js
rolb
shl
push
push
call
or
xor
dec
loopne
add
nop
js
ljmp
mov
inc
roll
sbb
lods
mov
lea
popl
addr16
xorb
clc
inc
cltd
mov
dec
loop
and
rorl
add
adc
sub
pop
insb
pop
icebp
adc
xchg
arpl
jns
xor
and
xchg
add
aas
mov
test
lds
cwtl
or
test
push
aaa
cli
jne
mov
mov
xor
setge
movsb
orl
sahf
mov
jo
cmp
jmp
mov
lods
dec
fnstcw
imul
pop
adc
data16
popf
sbb
and
out
in
dec
or
rolb
aad
cmpsl
sbb
pop
add
ret
inc
repz
add
adc
mov
fmull
test
push
aam
nop
pop
adc
shl
jmp
test
aam
cwtl
fs
clc
cmp
lods
das
arpl
or
mov
sbb
dec
inc
xor
pop
sbb
cmpxchg
and
outsb
xor
mov
mov
sbb
cmp
mov
and
lea
push
stc
and
pop
sub
imul
jno
mov
or
ja
xchg
cmp
stc
push
xor
and
lods
mov
fimuls
loope
cwtl
ss
lret
dec
sub
and
test
sbb
loop
imul
mov
dec
insb
jg
mov
xchg
sbb
mov
rcrb
adc
out
cmp
mov
xor
fmull
mov
popa
aas
sbb
pushf
fs
loope
lret
lea
and
shlb
mov
adc
fadds
pop
loop
repnz
cli
jo
dec
popa
mov
ds
dec
lcall
into
iret
shlb
push
xor
outsb
movsl
cmp
mov
mov
and
pop
pop
push
pop
mov
ds
jge
mov
je
xchg
pop
pop
jbe
mov
sbb
xchg
inc
and
mov
cld
inc
sub
push
lods
mov
pop
in
shrb
lcall
or
xor
or
out
cli
adc
mov
mov
daa
in
in
or
add
push
xchg
rcl
out
call
dec
into
movsb
in
loopne
adc
pop
dec
push
ret
xchg
mov
xchg
inc
adc
movsb
data16
xlat
imul
pop
imul
inc
addr16
mov
cmpsb
pop
push
mov
cwtl
xor
sub
push
int3
or
jae
bound
inc
mov
daa
cmpb
cmp
push
mov
out
jge
mov
ss
das
enter
lea
sbb
pop
filds
add
mov
pop
cmp
les
sub
push
bound
mov
fdivl
insb
shl
popa
xchg
popf
cmp
jp
lahf
addr16
in
push
repz
push
mov
insl
jns
lock
das
add
dec
adc
push
mov
sbb
sbb
or
cmc
sub
imul
jl
jo
nop
jbe
and
pusha
imul
sbb
pop
mov
push
notl
nop
jno
out
push
lods
or
outsl
stos
ja
xlat
jl
sbb
mov
scas
jl
test
adc
int3
xor
lds
pop
sub
lahf
imul
and
sub
fnstenv
test
push
inc
dec
jb
fdivrs
jo
lahf
out
enter
bound
mov
std
inc
fists
sbb
in
test
cld
push
inc
out
sbb
jnp
lods
pop
xchg
ret
fnstcw
adcb
push
sbb
push
mov
cmpsl
dec
adc
cltd
jnp
sbb
bound
adc
js
fnstenv
rcll
add
rolb
push
add
decl
insl
and
jl
fbld
or
out
stos
push
cmp
adc
and
pop
bound
aas
out
dec
loope
dec
lahf
scas
cmp
icebp
pop
mov
lods
jecxz
outsb
xor
pop
lea
adc
lahf
sub
push
shlb
inc
fdivl
inc
out
loope
jno
inc
and
cmc
and
les
inc
xor
nop
cmpsb
inc
push
in
cmp
or
cmp
adc
pop
mov
or
sbb
into
xchg
adc
leave
lret
sub
cmpsb
mov
out
mov
xlat
test
push
sub
aas
addl
inc
ss
stos
fstps
cmpsb
xchg
sarl
xor
push
mov
adc
movsb
mov
push
push
aaa
mov
xchg
pop
gs
out
or
pop
bound
xchg
or
fisubrl
enter
es
mov
adc
mov
std
aas
mov
leave
push
dec
cwtl
and
shll
jl
sahf
xchg
ljmp
aas
inc
fwait
cmp
imul
cmp
add
mov
jns
sbb
jbe
jns
xor
in
arpl
and
jo
jno
mov
cwtl
int
test
test
and
int
push
lds
jp
jp
sti
mov
cmp
mov
out
jle
in
dec
pop
mov
and
mov
lret
jo
data16
ret
mov
mov
cld
aad
shrl
nop
stos
and
je
or
mov
fisttpl
jne
cs
xor
mov
mov
addl
xchg
outsb
das
fisttps
adc
xor
fdiv
sbb
pop
and
or
imul
mov
adc
jne
pop
pop
mov
int3
cmp
push
shll
daa
sub
hlt
push
movsl
into
cmp
mov
or
iret
add
and
mov
popa
daa
in
out
mov
mov
sbb
push
outsl
cmp
popa
cld
xchg
mov
xchg
sub
inc
xchg
outsb
jnp
jl
loop
jp
mov
clc
push
mov
cltd
cs
pop
mul
enter
pusha
andl
dec
test
mov
inc
cltd
in
dec
mov
hlt
push
int
xchg
sti
mov
mulb
pop
movsb
mov
out
repz
mov
sub
pop
mov
add
arpl
pop
test
int
fs
into
out
data16
adc
and
xchg
les
and
fists
je
cmp
mov
mov
push
dec
lcall
cmp
aam
adc
cmp
cmpsl
sarb
icebp
dec
xor
test
punpckhdq
mov
jnp
mov
mov
test
adc
enter
imul
fnstsw
lock
movsb
mov
dec
stos
fnclex
jl
xor
inc
mov
adc
es
into
enter
nop
jle
inc
mov
and
cld
ljmp
xchg
int
enter
inc
sti
imul
shll
jnp
push
sarb
cmpsb
pop
sub
push
and
dec
loopne
cli
test
sub
les
shl
pop
addr16
fwait
sbb
js
and
aad
adc
jecxz
mov
pop
negb
mov
dec
sbb
adc
xor
cli
je
sbb
jnp
outsl
mov
sar
xor
sbb
jbe
push
jmp
shrb
pushf
lods
pop
aad
and
clc
jae
rol
sti
inc
pop
in
cmpsl
mov
jecxz
ja
pop
pop
out
bound
out
mov
pop
mov
aam
rclb
cmp
and
sub
lods
or
notl
push
negb
sub
pop
pushf
scas
in
mov
add
push
rclb
jne
aam
xchg
push
fwait
aas
sbb
call
cmp
sbb
inc
lds
mov
pop
call
xor
adcb
ret
faddl
jg
add
test
push
pop
aas
add
mov
add
rol
xchg
dec
mov
shrl
dec
imul
pop
lret
push
or
pop
repz
and
bound
mov
mov
fs
int
push
sbb
push
dec
scas
in
jle
adc
cwtl
cmp
adc
mov
push
jns
out
int
add
stos
jmp
aad
cmp
xchg
xchg
jo
arpl
iret
inc
in
dec
xorb
sub
test
pop
cli
leave
data16
jns
sub
lcall
rcrb
pop
in
inc
test
sub
sbb
or
das
movl
jnp
fdivr
cli
dec
daa
nop
cli
push
gs
mov
xchg
aas
sbb
mov
cmp
xor
mov
mov
jne
nop
hlt
adc
imul
xchg
enter
mov
testl
xchg
lds
pop
loop
pop
adc
inc
cmovbe
xchg
adc
inc
stc
mov
jg
xchg
test
fnstenv
popa
shlb
imul
lahf
inc
cmp
add
movsl
inc
cltd
adc
insl
inc
jae
push
adc
jg
pop
pusha
ds
xor
lcall
push
jmp
addb
push
push
or
hlt
jecxz
push
shlb
cmp
bnd
jbe
cli
sub
sbb
dec
imul
int
lea
cmp
out
pop
adcb
or
sbb
stc
sbb
jge
arpl
cmpsl
test
mov
bound
xchg
adc
pop
lahf
popa
jg
and
mov
xchg
test
or
mov
sub
or
fidivs
push
iret
outsb
fwait
pop
out
mov
cmp
je
cmp
push
inc
sub
mov
inc
and
cmc
out
pop
push
mov
pushl
sub
in
in
push
pusha
or
pop
stc
aam
fcoml
shll
jl
repz
mov
mov
negl
sub
inc
xchg
dec
sbb
testl
ss
jae
xor
ret
mov
sub
jb
neg
sbb
daa
ret
jg
xor
addr16
mov
orb
push
and
mov
cmpsl
lret
addr16
or
xchg
sbb
pop
adc
test
jne
aaa
add
out
hlt
pop
dec
lea
clc
shlb
aas
popa
cs
loopne
pop
sti
push
inc
jmp
sub
xchg
jle
mov
mov
sub
mov
in
or
ret
dec
push
xchg
sub
add
xchg
out
out
xchg
mov
jbe
into
movsb
fisttpll
sbb
sbb
in
xor
xorb
jns
ljmp
into
in
hlt
push
movd
add
lods
lret
dec
dec
jnp
shrd
push
sbb
adc
xchg
les
mov
mov
cmp
cwtl
xchg
sub
ror
jne
rorb
ret
lcall
adc
movups
fstl
outsl
pop
add
jno
icebp
dec
xchg
xlat
push
pop
push
sbb
add
and
movsl
sbb
add
add
mov
sub
cmp
test
data16
mov
add
xchg
push
sbb
or
pop
ljmp
sub
addb
push
scas
and
or
cmc
sub
lods
scas
or
sbb
push
shrb
std
xchg
or
xor
or
loope
push
stos
jl
mov
dec
add
mov
push
movsb
mov
jno
sbb
add
dec
or
mov
jne
xchg
fwait
gs
add
test
jb
push
nop
iret
jno
pop
push
stos
mov
test
mov
xor
or
sbb
adc
and
or
jg
mov
sbb
lret
in
mov
data16
cwtl
mov
mov
jg
xor
jge
fdivrs
fwait
sbb
mov
xor
orl
inc
loope
jbe
xor
sbb
xor
outsl
or
aas
arpl
in
lods
stc
pop
mov
out
and
insb
mov
add
mov
and
inc
jmp
lret
cmp
gs
movl
xchg
inc
es
mov
sbb
or
cmc
icebp
je
sub
inc
xlat
jmp
mov
or
push
push
stc
push
xor
call
fsubrs
pop
xchg
push
stos
repnz
mov
lds
test
outsb
in
and
mov
int3
adc
leave
popa
insl
call
dec
inc
ljmp
ret
das
push
movsl
incl
dec
cld
rorb
jne
adc
lock
popf
push
in
movsl
aam
pop
pop
aaa
je
sahf
outsl
fsts
enter
test
ds
shrl
mov
mov
jnp
add
cmp
enter
shll
sahf
mov
push
arpl
std
in
daa
lcall
inc
mov
inc
lret
jp
xor
fidivrl
test
inc
xor
aaa
and
hlt
lahf
les
mov
stos
lahf
push
call
push
out
push
sbb
xor
shll
xor
jae
lods
pop
mov
xchg
inc
insb
stos
pop
les
fwait
push
out
call
lock
sahf
pusha
leave
jecxz
push
xor
clc
or
mov
fwait
imul
xchg
out
repnz
pop
fs
rcrb
fstp
xor
mov
add
pop
xor
lahf
mov
sbb
inc
mov
adc
sbb
pop
adc
in
or
pop
adc
pop
loopne
jae
fiadds
xchg
js
ds
popa
xchg
out
dec
insb
stos
ffreep
inc
push
cs
cwtl
pop
mov
loope
and
or
loop
andb
mov
xchg
mov
imulb
sub
mov
add
fistpll
pop
dec
mov
add
xchg
xor
int
es
inc
jno
je
pop
mov
push
iret
lds
xchg
push
ret
mov
cld
lds
sbb
stc
cmp
ret
lahf
pop
movsb
cmp
icebp
into
xchg
and
mov
and
aaa
sub
mov
push
imul
pop
rol
int3
cwtl
jg
clc
add
pop
std
mov
shll
jae
or
xor
xchg
and
mov
push
mov
popa
test
inc
in
push
and
shlb
dec
cmc
lods
inc
cmovbe
fs
scas
jmp
mov
fwait
lock
out
dec
bound
lret
outsb
add
and
sub
mov
pop
cmpsl
jg
cmp
xor
mov
out
scas
loop
push
sub
into
lods
ret
cmp
int3
ret
sbb
dec
mov
es
push
dec
sbb
les
ss
jl
ret
popf
fcoms
jp
das
mov
push
test
pop
lds
lcall
ret
push
cmp
out
mov
push
mov
or
adc
sub
hlt
mov
lock
jae
push
aad
test
mov
xchg
jae
mov
cmp
fisttps
insl
mov
ja
rcr
cltd
addb
mov
iret
aam
scas
push
mov
sub
mov
mov
cmpsb
sahf
dec
and
stos
jnp
mov
inc
scas
ja
loope
mov
je
repnz
ret
cltd
or
jecxz
test
and
xchg
lds
sti
adc
adc
lahf
cltd
dec
xchg
push
sbb
cmp
push
and
scas
fstl
dec
cli
test
ret
push
sbb
mov
popl
jb
sbb
andb
ds
std
rolb
xchg
inc
repnz
mov
and
xchg
lret
inc
bound
mov
xor
rcll
data16
insl
leave
push
shrl
adc
ja
les
out
fildl
xchg
out
mov
repz
loopne
mov
mov
or
addr16
push
inc
fisttpl
mov
loop
pop
fucomi
mov
push
in
lock
outsl
sub
roll
and
mov
pop
xchg
les
mov
and
ror
push
cwtd
test
je
sti
ljmp
xor
adc
icebp
lds
les
adc
mov
sub
sbb
ror
push
js
inc
cmc
cwtl
sub
jmp
scas
test
xchg
outsl
cmp
or
dec
add
stos
mov
rorb
shr
imul
xor
mov
jnp
sub
adc
mov
inc
int3
scas
add
ljmp
fldenv
lret
and
test
mov
xor
lds
and
xor
inc
and
lods
out
push
or
sub
mov
adc
xor
push
adc
xor
mov
test
test
outsb
xchg
rorl
outsb
mov
pop
lret
ljmp
stos
in
jbe
ds
es
mov
jmp
jmp
pop
xchg
fcmovnu
out
data16
inc
inc
mov
xor
aas
push
lahf
testb
sub
jg
dec
xor
or
sbb
stc
cmp
lds
cli
push
fstl
outsl
jne
mov
push
xor
jp
pop
rorl
or
cwtl
testb
test
aas
xlat
popa
jo
fstpl
mov
flds
inc
dec
rcll
repz
inc
test
pop
fisubrs
faddl
imul
push
mov
push
mov
push
xchg
cld
add
push
cmpsb
and
stc
icebp
outsl
stc
decl
pusha
mov
xchg
comiss
cmp
repz
ja
movsb
mov
pop
mov
mov
and
leave
inc
xor
jne
pop
mov
gs
sub
xchg
movsl
sahf
xor
push
xor
jns
das
movsl
int3
stos
mov
sbb
adc
loopne
mov
xchg
jne
ljmp
push
dec
jecxz
icebp
push
cmp
fneni(8087
lods
enter
mov
xchg
adc
andl
in
inc
adc
lods
test
add
sbb
push
push
jnp
into
or
cltd
add
inc
xlat
or
push
push
pop
fdivs
pop
inc
call
or
mov
mov
ds
rcll
cmp
lods
cli
add
inc
add
mov
in
and
xchg
xor
mulb
adc
fcompl
xor
sub
jne
and
xchg
aam
lahf
push
push
cmpsb
and
cmc
insl
jmp
sar
bnd
cmp
cmpl
bound
sub
push
and
ja
cmp
inc
rorb
lahf
fldenv
push
adc
pusha
icebp
repz
shlb
hlt
lock
jmp
data16
xor
lods
popf
push
adc
xlat
dec
adc
and
call
ret
test
sbb
sarl
shlb
mov
jae
ret
jbe
mov
add
dec
pop
aaa
insb
jl
and
mov
jp
or
mov
insb
mov
fs
int
jmp
insl
inc
jno
and
sbb
and
dec
pushf
jmp
mov
dec
out
pop
aas
add
dec
push
movsl
add
pop
inc
and
aas
cmp
and
push
push
mov
pop
and
gs
pusha
cmp
jmp
out
imul
add
loope
les
aam
pop
aaa
test
xchg
aaa
sub
je
xor
push
mov
add
mov
push
aam
stc
jb
mov
inc
push
jns
jae
clc
leave
out
xchg
addr16
mov
jns
mov
jb
jns
xchg
adc
inc
sbb
sar
sbb
add
push
xchg
nop
jl
jbe
in
mov
sub
sub
jnp
pop
rcrb
and
sti
pusha
mov
popa
cs
cmp
repnz
cmp
mov
das
ljmp
mov
inc
js
mov
int3
call
movsb
je
push
inc
cmp
into
stos
pop
sub
dec
lods
pop
pop
push
dec
mov
xlat
xor
add
mov
cmp
aad
mov
dec
fisttpll
int3
mov
mov
or
lods
xchg
and
inc
and
loop
jmp
xorl
pop
lret
and
hlt
sub
add
mov
fld1
fsubs
pushf
mov
add
popf
dec
jp
cmp
rcrb
stc
shr
pop
jge
jmp
cmp
les
dec
or
dec
mov
dec
mov
xor
sbb
pop
in
cmpsl
xor
or
mov
pop
cmpsl
ja
adc
std
imul
pusha
outsl
xlat
mov
jmp
les
mov
jp
mov
lods
xor
add
imul
in
push
xchg
pop
mov
mov
inc
bound
jge
stos
dec
xchg
cmpsb
out
outsl
movsl
add
dec
setl
pushf
test
loope
mov
outsl
scas
push
mov
dec
pop
fcmovnu
xor
std
popa
cmp
xchg
mov
aam
mov
out
jbe
pop
cmc
mov
aam
cmpsl
and
cmp
mov
in
mov
subl
jg
jnp,pt
iret
rcrl
out
ret
xchg
sbb
daa
mov
sub
jo
stos
add
adc
jp
ja
xchg
scas
insl
inc
pop
ljmp
mov
xchg
add
fiaddl
repz
dec
lahf
mov
std
jp
mov
xor
mov
push
pop
scas
aas
popf
pop
cmc
push
lret
push
inc
and
mov
cmp
faddl
stos
inc
or
lret
arpl
mov
or
fs
cmp
mov
xor
mov
push
mov
test
pop
ret
push
dec
add
fsts
push
adc
mov
mov
jne
and
mov
movsb
cmpsb
iret
inc
das
inc
pusha
imull
push
dec
xchg
inc
cmp
push
std
dec
inc
int3
xor
pop
dec
xchg
add
push
imul
mov
cltd
ss
pop
and
push
in
jp
insl
fisubs
mov
push
sub
mov
daa
sbb
pop
or
fsubrl
popfw
aaa
mov
mov
pop
jbe
mov
jae
push
dec
pop
sub
nop
lret
jle
sub
repz
test
movsl
xchg
xor
dec
mov
loope
pusha
and
movsl
sub
cmp
sub
or
sub
mov
push
call
jb
inc
js
movsb
addr16
adc
das
inc
cli
sbb
xchg
cmpsl
and
mov
stos
push
mov
cli
arpl
jmp
lahf
mov
xor
in
arpl
mov
pusha
and
je
rcll
and
inc
lds
jg
lds
push
sub
mov
dec
add
inc
movsb
mov
push
dec
ret
adc
into
test
xlat
ret
shlb
xchg
scas
push
cmpsl
dec
adc
push
adc
pop
and
andb
in
cltd
sbb
jnp
clc
adc
imul
adc
add
mov
or
addr16
shrl
or
pop
inc
push
sub
fdivs
enter
pusha
cmp
inc
mov
js
sub
popf
inc
or
mov
pushf
imul
lahf
scas
lret
sbb
insl
jb
out
cmpsb
jge,pt
mov
and
pop
add
sbb
xchg
sub
xlat
inc
sarl
adc
or
or
in
fcoml
mov
or
xor
stos
xchg
mov
cs
add
inc
mov
insb
cltd
add
add
or
leave
xor
in
push
mov
cmp
dec
fwait
add
inc
into
in
pop
fdivrs
lahf
test
insl
and
loope
add
test
lahf
mov
clc
std
inc
pop
inc
inc
or
push
jnp
repz
or
stc
inc
aad
adc
sub
pusha
in
ret
xchg
adc
cld
sub
mov
push
add
mov
test
clc
mov
stos
shrb
and
and
xor
fwait
add
stos
std
jnp
xchg
in
imul
movl
jecxz
sub
inc
xlat
pop
lock
bound
xchg
cmp
test
xor
pop
gs
xchg
out
gs
stos
and
dec
loopne
xor
and
cmpsb
das
sbb
negl
aad
mov
test
push
dec
movsb
sbb
xchg
dec
lcall
jne
ds
mov
xchg
sbb
adc
sbb
fldt
push
and
test
scas
lcall
nop
adcl
push
jo
jno
inc
xor
xchg
dec
jecxz
sbb
stc
cmp
xchg
cmp
xor
sbb
cmpsl
fsubr
push
les
aaa
loopne
fildl
jbe
push
je
cmp
popl
lahf
jl
push
xchg
xchg
cmp
ds
movsl
mov
movb
sti
ss
ss
cltd
stos
xor
sahf
imul
xorb
xchg
dec
sub
dec
mov
adc
gs
enter
sbb
insb
push
cmp
push
add
xchg
xor
std
and
fs
and
xchg
incl
push
cmpb
sub
push
aaa
filds
lahf
push
inc
int3
imul
jmp
or
lret
sub
jae
xor
cwtl
or
push
call
leave
jb
pop
add
mov
js
aaa
sbb
jne
xchg
scas
or
out
jno
popl
push
inc
xor
dec
loope
jmp
and
pop
cli
daa
fldenv
adc
popa
in
fsubs
mov
pop
dec
adc
jbe
popf
in
xor
push
icebp
sbb
je
ds
lds
les
ret
and
and
je
aaa
sbb
pushf
mov
mov
in
xchg
imul
pop
aaa
and
adc
frstor
jne
pop
jnp
jge
or
inc
mov
jmp
cmp
rclb
std
sbb
lock
fisttps
mov
repz
pop
popa
adc
ret
mov
and
test
cltd
add
inc
fdivs
xchg
shlb
clc
loope
loopne
test
xor
inc
jbe
jbe
dec
and
imul
loopne
decb
ss
and
cltd
mov
mov
in
cli
fistps
inc
fldl
inc
addb
lahf
dec
and
int
dec
pop
push
lahf
mov
outsl
add
cmpsw
outsb
std
ret
das
jno
divb
mov
or
rol
xchg
test
push
push
xchg
inc
mov
sub
cmp
mov
addr16
ds
jno
arpl
add
xor
lods
add
roll
push
push
and
xor
pop
fisubrs
ds
push
popf
ja
add
adc
mov
and
push
imul
or
dec
lcall
add
add
inc
pop
mov
mov
pop
xor
loopne
out
sub
pop
mov
scas
mov
xchg
insb
jecxz
jno
ljmp
and
push
push
xor
repz
sub
jbe
loope
xchg
mov
ja
popa
jb
mov
push
xchg
lret
fimuls
andb
lret
xor
dec
popf
add
mov
push
inc
cmpb
xchg
mov
jp
cli
jne
push
lcall
stos
mul
adc
mov
cvtps2pd
in
out
pop
push
sahf
mov
sbb
mov
mov
out
dec
filds
jae
out
loop
in
rorb
rcr
mov
mov
rorl
movsl
fisubl
mov
outsb
and
mov
pop
test
dec
inc
push
mov
repnz
cld
scas
push
insl
in
push
bound
add
repz
sti
push
xchg
mov
icebp
in
pop
stos
cmpsl
and
in
fisubrl
jmp
cmpsb
cmpsb
jo
sub
jge
ret
out
adc
inc
xchg
cwtl
mov
sbb
std
xor
xchg
mov
lods
adc
pop
pop
ret
fildll
movsl
sbb
adc
mov
push
push
pop
jl
dec
dec
xchg
mov
mov
and
int3
adc
les
in
sbb
test
bound
push
push
mov
dec
mov
sbb
jmp
outsl
sub
outsl
adc
mov
adc
btr
je
add
iret
pop
pop
ret
ret
lret
push
dec
sbb
ja
ja
pusha
fwait
mov
jmp
into
lea
adc
add
mov
xchg
sti
imul
sub
sbb
gs
sub
xchg
outsl
lahf
push
jl
lods
cli
or
xorb
adc
clc
icebp
xchg
fmul
bswap
pop
nop
inc
fwait
pop
mov
or
or
out
or
xlat
icebp
or
das
pop
roll
push
or
stos
xorb
in
andl
scas
xchg
and
sti
adc
pusha
fstl
jg
mov
call
aam
mov
mov
mov
or
mov
mov
push
ret
rorb
dec
sub
ja
xchg
push
adc
push
scas
int
and
mov
pushf
test
int
jge
repnz
fidivs
inc
dec
idivb
stos
adc
mov
imul
ja
mov
adc
cs
adc
cli
push
cmp
ds
dec
pop
pop
jb
out
divl
sub
inc
imul
inc
aas
clc
xchg
loope
adc
cmp
cmpsl
add
sbb
mov
xor
out
cmp
mov
add
scas
mov
leave
inc
adc
pop
rorb
and
cli
addr16
mov
xor
sbb
pushf
adc
xor
sub
ja
aas
and
clc
xor
testl
outsl
inc
jle
xchg
jl
pushf
mov
cld
imul
loope
pusha
inc
sbb
xor
leave
addr16
fldcw
sti
cmp
arpl
cwtl
fists
xor
std
jge
jmp
outsb
call
cli
and
call
and
stos
and
and
frstor
jle
pushf
mov
inc
leave
push
insl
cli
jl
mov
sarl
outsb
pop
push
or
jbe
loope
cmc
xchg
fstl
lods
mov
data16
jp
rcrb
pop
loope
mov
jmp
fwait
insb
lret
test
outsb
imul
jmp
jnp
popa
in
xlat
mov
aaa
fbstp
ret
out
push
sub
aad
insl
mov
pop
dec
subl
ja
jae
inc
xor
adc
add
push
ljmp
mov
bound
or
fcmovne
inc
sub
dec
push
dec
pop
inc
test
int
lret
and
in
mov
loope
out
outsl
test
dec
sub
pusha
mov
arpl
jl
out
mov
pushf
rcrl
and
mov
jnp
ljmp
sub
sub
lea
jmp
sbb
xor
add
sub
mov
cmp
popa
enter
adc
jmp
loopne
add
imul
mov
clc
addr16
adcl
sub
ljmp
mov
ds
mov
std
rorl
or
adc
cmpsb
lods
mov
pop
inc
jo
sbb
stc
pop
es
jns
and
mov
sti
out
adc
and
bound
push
mov
outsl
clc
test
adc
add
jae
cmp
or
and
leave
cmpsb
jbe
aad
adc
cmp
and
xchg
aad
fs
and
xor
mov
sbb
lock
jo
and
pusha
pop
or
push
cltd
clc
cmp
sbb
insb
jge
pop
test
add
in
movntps
fwait
push
mov
add
iret
dec
mov
sti
pop
int3
in
xchg
cltd
jmp
jae
shll
sbb
dec
or
cli
xchg
into
sarl
fwait
jnp
add
or
lock
mov
movsb
xor
into
movsl
shll
adc
in
jno
insb
jmp
vpsubusb
add
sbb
dec
fwait
test
or
cvtpi2ps
dec
iret
bound
in
or
jbe
mov
push
call
sti
repnz
and
shrb
out
bound
sub
mov
and
stos
int
test
jmp
jb
aas
fs
mov
pop
scas
mov
xor
push
xor
fwait
xchg
and
dec
gs
int3
pop
stc
push
jbe
outsl
test
and
pop
push
and
pop
clc
in
pusha
adc
pop
sbbl
jecxz
fiaddl
leave
jno
movsl
push
cli
rolb
insb
dec
mov
bound
fdivrl
inc
stc
imul
and
mov
rcrb
sub
mov
pushf
fwait
sub
mov
mov
or
imul
insb
int
fnstenv
aam
sub
in
ds
cli
inc
out
aas
xor
lahf
aad
inc
mov
pop
cmc
dec
mov
jge
and
rcl
fwait
mov
xchg
add
mov
rol
test
cs
pop
mov
xor
jge
sti
pushf
sub
jo
jns
add
icebp
sahf
je
dec
add
sub
and
lods
dec
test
loopne
jo
or
stos
mov
mov
xchg
js
fistl
bound
push
scas
ss
xor
sbb
je
push
shlb
mov
ja
pop
jae
add
jmp
js
int3
addb
sti
jg
mov
fisubrl
mov
inc
mov
sub
adc
cmp
cmp
hlt
ret
lock
inc
pop
fmull
or
push
addr16
fldenv
hlt
xchg
repz
jb
stc
test
xchg
clc
pop
sti
pop
adc
mov
nop
jmp
adc
or
gs
aaa
fldl
loop
mov
orb
inc
and
mov
push
daa
cmp
jmp
adc
xchg
cmpsl
mov
stos
push
stos
imul
add
adc
cld
push
pop
outsl
jmp
sbb
jnp
in
inc
out
aas
clc
shr
lret
sub
push
and
xor
mov
push
ljmp
or
std
or
punpckhbw
add
gs
add
push
addl
fnstenv
sbb
popa
jnp
into
and
lret
cmp
jecxz
sbb
lahf
or
je
test
icebp
das
pop
insl
popl
repz
lahf
sbb
xor
ret
mov
stc
stc
sbb
clc
int3
imulb
jmp
sub
popa
pop
mov
jo
jne
aas
outsl
gs
fbstp
push
arpl
dec
lods
xor
testb
mov
dec
adc
imul
mov
lods
mov
call
or
clc
int
repnz
push
divl
dec
cwtl
jae
pusha
xor
ja
sbb
ljmp
xchg
nop
and
push
jle
pop
dec
in
ds
add
jb
sub
outsl
subps
mov
lds
rorl
jp
push
imul
mov
adc
xor
popf
cld
pop
push
sbb
adc
cmp
mov
fistpll
jmp
inc
push
jnp
sarl
add
mov
xchg
or
push
sub
sub
jo
adc
dec
dec
sti
ja
fisubs
cli
inc
fs
clc
xchg
ds
test
jns
roll
xchg
xchg
cmp
lea
xor
sub
imul
xchg
scas
xchg
ss
rol
loope
lahf
or
mov
es
out
adc
pop
or
adc
dec
je
dec
pop
test
push
mov
dec
jnp
cltd
or
xor
pushf
jo
insl
xor
cli
ret
and
pop
paddusb
mov
idiv
jle
cmp
dec
add
mov
lcall
shll
pmulhuw
lcall
les
dec
pop
outsb
jae
lahf
lcall
ret
cmp
mov
cmp
xor
push
out
fwait
out
aas
fwait
cwtl
or
or
adc
iret
sarb
xchg
adc
out
push
testl
cltd
out
or
test
rol
jbe
sarl
xchg
in
ljmp
lock
sar
ss
mov
inc
jo
dec
and
cmp
cmp
ja
cltd
xchg
fldcw
and
arpl
adc
leave
loop
hlt
mov
sub
rcl
add
xchg
js
mov
xor
mov
fisttps
mov
jl
pusha
mov
cs
jne
mov
push
fistl
iret
cmp
loopne
in
mov
lock
cmpsb
js
or
lcall
push
mov
loope
mov
fiaddl
pop
enter
add
test
std
icebp
negb
rcrb
dec
insl
rcl
jo
icebp
fstpt
rorb
popa
out
xchg
add
push
mov
jne
jp
sbb
test
fwait
adc
ficompl
xlat
lret
jg
lcall
cmc
ss
xchg
cli
hlt
movsb
dec
pop
testl
adc
in
in
shll
mov
aas
aam
add
jge
and
jl
xchg
and
mov
mov
lea
cmp
aad
pop
pop
and
ret
jl
fistpl
js
loopne
mov
lods
rcll
sarl
scas
jmp
out
or
sub
cmpb
outsl
or
jg
in
mull
push
enter
pop
popf
mov
fs
pop
aam
inc
dec
sarb
mov
cld
cmp
call
stos
in
repz
pop
xor
and
test
stos
mov
jo
dec
mov
outsl
pop
cli
movsl
sahf
fcoml
arpl
les
js
addb
jecxz
xchg
mov
aaa
pop
jae
jo
lock
cld
inc
push
scas
push
rolb
js
dec
mov
inc
jae
out
sahf
sbb
popl
out
mov
stc
mov
mov
push
xchg
lds
test
insl
jbe
lret
stos
push
push
jg
mov
xlat
insl
rcll
pop
aad
cmpb
cmp
into
icebp
sbb
mov
mov
in
jb
xchg
jnp
jb
clc
call
scas
lods
adc
enter
movsl
push
fs
js
cmp
lea
xchg
pop
mov
outsb
pop
and
in
sub
pop
repnz
in
add
repz
sbb
inc
or
xchg
mov
movsl
dec
or
cmp
stos
pop
inc
add
jmp
push
inc
adc
sub
adc
outsl
mov
mov
sub
shll
push
cmpl
mov
mov
or
sub
or
mov
mov
lea
in
outsl
xchg
popf
mov
jmp
xchg
push
sub
adcl
mov
enter
repnz
dec
pop
inc
xchg
or
call
lods
and
cltd
sarb
lret
sbb
adc
fwait
jae,pt
xchg
lcall
sub
or
xchg
mov
push
xchg
push
add
fs
cwtl
lret
inc
mov
adc
xlat
inc
jge
mov
cmpsl
inc
jmp
xchg
and
inc
cs
or
inc
in
arpl
adc
jmp
loop
inc
pop
stos
lcall
and
pop
enter
stos
pop
imul
mov
mov
adc
les
fnsave
into
and
mov
jne
adc
sub
push
inc
xor
pop
mov
popa
int3
into
mov
aas
rorb
ret
jp
mov
mov
inc
arpl
dec
or
or
xchg
jmp
adcb
fisubs
inc
sbb
mov
adc
scas
lock
lahf
pop
mov
pop
cmpsl
js
enter
rorl
mov
das
fldcw
xor
xor
mov
mov
inc
icebp
adc
and
or
ja
mov
roll
outsb
popa
fstp
test
xchg
orb
adc
fcom
rcrl
pop
or
lods
dec
insb
test
movsb
loopne
adc
call
insl
outsl
sbb
push
ja
lds
adc
jg
into
insb
sub
dec
push
jge
mov
in
je
cmp
mov
xchg
outsb
cmp
int3
loopne
cmp
rorb
mov
inc
sbb
sub
jbe
mov
dec
shll
into
add
int
cmp
into
fcoms
jns
ret
mov
xchg
push
mov
or
jmp
jp
je
je
mov
adc
sbb
jecxz
and
jno
sub
mov
pop
dec
push
bound
imul
dec
jle
pop
aas
adc
inc
fstl
divb
out
mov
sub
add
movsb
outsb
dec
mov
in
cmp
jno
jb
dec
adc
cmp
mov
add
push
mov
push
shlb
dec
xchg
into
and
inc
push
push
push
mov
sub
inc
out
lods
fiaddl
test
jmp
pop
and
sub
and
sbb
fmulp
mov
and
mov
or
sbb
inc
jno
mov
mov
sbb
in
inc
xor
sbb
cmp
out
jle
mov
sbbb
pop
pop
add
pop
ret
mov
hlt
loopne
outsl
int
add
sahf
sub
lods
ret
fwait
loope
nop
sub
out
mov
imul
mov
sti
pop
or
outsb
test
sub
bound
dec
fstps
ds
out
adc
and
movb
adcl
sbb
call
out
aas
pusha
repz
inc
stos
mov
sbb
push
sub
mov
popf
std
mov
int
push
push
inc
add
sahf
mov
fs
and
push
push
pop
fdivrs
cmp
sbb
dec
xor
mov
repnz
syscall
add
adc
std
mov
or
loop
mov
les
leave
inc
test
dec
loop
push
test
and
adcb
lea
aaa
add
std
pop
loope
dec
jno
cmpsb
iret
xor
fsubr
cltd
mov
dec
inc
jle
jg
and
out
popf
int
xchg
cmp
sub
mov
sub
or
jle
test
jno
rcll
out
aaa
je
popa
jl
popl
xchg
fsubl
mov
test
xchg
or
fcoms
push
stc
xlat
xlat
dec
sbb
cmpsb
adc
les
mov
or
jg
dec
outsb
cs
pushf
jbe
cmpb
pop
iret
dec
aas
out
and
arpl
sub
sbb
rcll
pop
adc
mov
ret
andl
pop
mov
addr16
insl
xchg
rcrb
cmp
cmp
mov
je
add
mov
push
out
xchg
inc
pop
sbb
or
fdivrs
lds
cmp
xchg
pop
and
rcll
jle
sbb
andl
dec
pop
sahf
movsl
jecxz
popa
repz
and
int
inc
sub
dec
cld
test
xor
lods
andl
jnp
int
ds
adc
adc
inc
and
hlt
orl
aam
inc
cltd
jmp
jmp
or
adc
sbb
mov
ds
scas
mov
pop
int
push
mov
fs
stc
cmp
adc
xlat
and
lods
lahf
testl
mov
adc
aas
movsb
dec
mov
fcompl
xchg
subb
shll
out
mov
inc
ss
push
popw
xchg
inc
mov
lock
lds
cmc
pop
int3
mov
jecxz
mov
cmp
data16
notb
pop
test
or
fistpll
mov
mov
popf
adc
iret
je
or
ja
fsub
sbb
leave
aas
imul
pusha
xor
cmp
mov
push
dec
insl
sub
jo
sbb
mov
je
scas
rorb
movsl
sub
dec
sbb
or
dec
inc
xor
out
divb
sbb
inc
test
fnstenv
test
aam
inc
movsl
inc
enter
add
mov
hlt
out
push
icebp
sahf
dec
ja
jp
sbb
pop
lea
mov
repz
imul
es
add
clc
dec
cmp
sub
fucom
mov
mov
mov
lret
aad
int3
popf
mov
xor
scas
test
sub
cltd
fdivl
dec
pop
mov
inc
xchg
mov
sub
popf
lret
and
push
nop
andb
dec
cltd
sahf
xor
push
nop
sbb
cmpb
js
ds
loopne
das
inc
push
rol
fcoml
push
loopne
test
insb
adc
adc
pmovmskb
cwtl
jo
jmp
jle
and
xor
lods
mov
ret
mov
adcb
push
add
xchg
mov
repz
jl
adc
cmp
dec
sti
mov
sub
jbe
out
loop
pop
daa
lods
dec
jg
test
xor
pop
cmp
add
push
mov
and
or
dec
jne
pop
popa
jbe
jne
xor
adc
loope
sbb
xchg
sti
imul
loop
pop
dec
and
jae
adc
lret
shl
inc
aam
sbbl
jmp
sahf
inc
cltd
fwait
pop
sahf
jg
inc
and
lods
sbb
and
xchg
pop
rolb
lods
add
jae
fidivs
xchg
ss
fiaddl
cld
push
repz
cwtl
dec
cmp
std
repz
setle
mov
sub
jne
add
mov
jge
cmp
sbb
mov
xor
insb
pop
xchg
notl
call
lret
mov
addr16
jp
outsl
push
dec
xchg
or
call
mov
xor
insl
push
popf
push
ficompl
clc
jns
movsl
lock
xor
jnp
dec
dec
add
test
aam
loop
loopne
fcomip
inc
add
lods
jl
cld
jns
or
xchg
push
add
lods
outsb
push
or
adc
and
in
mov
push
rorl
dec
mov
gs
jb
cmc
adcl
sbb
adc
push
sbb
pop
mov
jno
in
dec
insl
iret
sub
addl
in
jb
das
xchg
das
shl
je
xchg
enter
adc
aam
jg
fisubrs
fwait
inc
pop
push
mov
out
sub
fs
sbb
lods
sbb
mov
or
cld
dec
inc
cmp
push
push
xchg
out
shll
jp
shr
xchg
xor
add
add
add
inc
push
aas
scas
dec
xor
movsb
dec
lods
imul
xchg
pop
rorl
jbe
jne
mov
lods
addr16
or
sub
jno
pop
sarl
rcll
adc
and
adc
xchg
jmp
and
jo
out
add
mov
sbb
roll
inc
mov
mov
dec
cmc
lods
arpl
es
xor
mov
pusha
je
or
scas
test
xor
fsubrs
xor
testb
rep
fbstp
roll
aas
dec
mov
jl
popa
icebp
push
jbe
movsb
xchg
push
dec
xor
xor
pop
mov
push
shr
fdivr
pop
lods
push
jl
dec
rorl
fistl
lret
dec
insl
test
push
dec
data16
lods
mov
cmpsl
add
xor
xchg
popl
lods
call
int
or
xchg
pop
lods
lret
shll
mov
xchg
pusha
sub
sbb
add
in
aad
leave
jge
mov
dec
movsl
sbb
adc
jo
mov
mov
fimuls
insb
lods
add
mov
jmp
imul
adc
rcll
mov
push
out
cmpsb
hlt
jg
xlat
cmp
add
lods
cmp
scas
idivb
push
clc
mov
popl
jg
cmpsb
push
jmp
loope
add
cmp
adc
jns
push
lret
icebp
adc
int
shl
dec
fwait
repz
into
mov
cmp
mov
lret
xor
cmp
pushf
loop
fnsave
adc
inc
ret
dec
xchg
movl
sub
inc
int3
out
fldenv
rcrb
lret
mov
cmpl
cmp
mov
and
adc
or
mov
pop
cmc
inc
lcall
ret
int
nop
adc
flds
xorl
push
sbb
cli
mov
testb
or
aas
pop
in
test
aaa
inc
or
shll
mov
mov
sub
cmp
xchg
mov
out
mov
arpl
push
movsl
cmp
lods
cli
mov
pop
pop
sar
inc
mov
clc
mov
push
insl
cmp
push
fsts
pop
scas
push
jl
rcl
jp
sub
xorb
lret
xchg
xchg
cs
icebp
fildl
inc
xchg
mov
andl
bound
and
jge
jp
sub
jnp
jmp
movq
cmp
scas
pop
inc
inc
rcl
cld
addr16
icebp
cmpsl
inc
test
and
xchg
inc
jns
push
push
jnp
dec
fwait
rol
xlat
adc
cmpsl
mov
cmp
repz
aas
xchg
bound
sahf
cmp
insl
pop
jle
xor
fstpt
adc
jae
xor
mov
mov
pop
fwait
dec
insb
cmp
imul
xchg
dec
fists
cmp
or
push
imul
inc
cli
dec
mov
xchg
int3
and
xchg
int3
shlb
cltd
adc
aam
jbe
rcr
repnz
add
out
or
add
leave
in
bnd
bound
push
xchg
sbb
push
dec
out
call
mov
enter
adc
popa
rolb
cltd
adc
mov
push
cmp
sub
test
stc
movsl
or
aaa
jmp
add
mov
mov
dec
add
jnp
jl
jno
shrb
xorl
aas
stc
lods
fs
jmp
mov
inc
fisttpl
push
or
or
lods
push
inc
adc
sbb
into
mov
mov
je
sahf
negl
pop
data16
aas
xchg
or
ficompl
xor
and
xor
add
mov
mov
cmp
adc
pushf
inc
in
cld
ss
and
push
push
pop
adc
sub
rcrl
test
xchg
add
xor
xor
dec
les
sbb
das
hlt
xchg
icebp
ss
in
js
les
out
jne
mov
shr
push
cmpsl
aaa
in
bound
cmc
jb
mov
cmp
das
sahf
mov
xchg
sub
jmp
jp
mov
lds
mov
jge
outsl
sbb
out
sti
movsb
push
mov
jb
cs
std
push
mov
mov
stc
or
or
dec
nop
data16
lock
pop
lods
pop
xchg
add
daa
adc
fisubrl
push
push
push
lret
xchg
shlb
push
stos
outsl
cmp
jb
cmp
cmp
push
enter
lret
jg
xchg
dec
xchg
jns
dec
adc
xor
mov
jb
lret
fdivs
sbb
les
add
xchg
sub
and
mov
pop
or
jp
mov
stc
xchg
ja
shl
xor
ja
adc
icebp
aaa
in
ljmp
sarl
gs
mov
andl
addr16
mov
pop
int
negl
pushf
push
mov
sarl
mov
jl
dec
mov
aas
movsb
fcompl
jb
push
mov
imul
jge
sbb
es
je
fcom
jmp
xchg
sahf
pop
cmc
mov
aam
adc
xlat
lahf
hlt
dec
addl
fisubl
add
jbe
add
and
imul
inc
testb
xor
in
inc
cmp
test
popf
mov
xor
cmpsb
inc
mov
movsl
insb
mov
mov
inc
outsl
mov
jns
stos
repnz
dec
mov
jno
ss
mov
cmp
sub
mov
pop
incb
enter
subb
mov
andb
adc
jo
sub
push
jae
xchg
enter
lea
jnp
xchg
cmpsl
lcall
sub
dec
mov
or
xchg
mov
aad
repnz
jge
dec
push
xor
js
loope
or
and
imul
mov
lds
icebp
push
repnz
enter
and
es
fstpl
sub
mov
mov
mov
iret
fnstsw
mov
xchg
mov
test
and
mov
add
cmp
arpl
imul
hlt
adc
cmc
cmp
xchg
popf
popf
sbb
imul
add
jle
js
enter
and
rcrl
add
paddsb
jnp
int
or
ret
sub
or
sti
mov
fldl
fistpl
nop
loope
pop
pop
push
insl
cltd
decl
push
jg
jp
cmp
sbb
push
or
xor
cltd
push
les
test
jg
sarl
or
cmp
nop
imul
std
sbb
int
outsl
and
push
adc
gs
or
mov
scas
push
lods
loopne
dec
mov
pop
out
add
push
int3
hlt
jl
bound
mov
neg
jge
outsb
in
movsl
jecxz
mov
pop
pop
sub
push
cmp
jmp
adc
add
test
arpl
negb
cmpb
mov
adc
sub
lock
mov
sbb
or
dec
outsb
mov
stos
loop
fildll
add
jns
call
sbb
adc
lret
out
inc
push
les
cmp
push
leave
adc
cmpsl
xchg
sub
clc
dec
inc
sbb
add
mov
ljmp
test
mov
jbe
xchg
lock
mov
jns
iret
xchg
cmp
push
sbb
jbe
mov
xchg
mov
mov
sbb
xor
mov
das
xchg
ss
lret
inc
repnz
cmpb
mov
sub
jle
aas
push
sahf
stc
out
push
inc
cwtl
mov
lcall
pusha
insl
or
mov
into
push
inc
push
xchg
mov
xchg
sub
dec
dec
mov
lock
aaa
mov
push
jb
mov
push
and
test
adc
leave
dec
bound
lds
popf
xor
mov
xor
jb
les
push
shlb
adc
cmpb
fiadds
inc
sub
and
push
cmp
lret
push
pusha
fs
icebp
jl
mov
stc
std
xchg
bound
sbb
or
out
jecxz
fcompl
adc
hlt
and
dec
vmovlpd
loope
pop
adc
jp
push
and
mov
mov
ficoml
sbb
mov
mov
aad
push
popf
push
xchg
xchg
dec
add
cltd
jne
fwait
data16
push
mov
pop
jae
jmp
cmp
fcoml
sub
decb
cld
inc
les
cmp
add
inc
stc
ror
cltd
enter
adc
fsubs
movsl
test
lods
andb
push
pop
in
sbb
imul
shll
xor
sbb
sbb
lahf
dec
jmp
pop
icebp
dec
dec
push
xchg
loop
sbb
jmp
cli
and
adc
mov
xchg
outsb
or
inc
leave
cmp
lret
pop
sbb
or
jge
xor
xchg
mov
fistpll
adc
addb
xor
mov
mov
and
fstpl
lds
leave
adc
stos
loop
out
scas
jg
dec
jl
mov
sbb
lods
pop
aaa
mov
movsl
addb
sub
xchg
cmp
inc
add
insb
lcall
xchg
cli
js
dec
idivb
das
in
push
int3
shll
sub
mov
popf
movsl
insl
movsb
imul
xchg
cmp
pusha
aam
mov
bnd
pop
test
lods
lock
pop
xlat
or
aam
outsl
sub
in
roll
test
mov
int3
sub
push
sbb
dec
faddl
lcall
mov
jp
dec
xchg
lahf
daa
add
push
lcall
stos
add
push
daa
repz
and
cmp
mov
aad
aaa
and
shr
ja
mov
jmp
jmp
cmp
movsb
lret
out
add
inc
stos
or
lcall
cltd
pop
in
je
push
lock
or
and
nop
jmp
shrb
out
test
inc
inc
or
fsubp
fsubr
jmp
push
cmp
pop
adc
xchg
in
fwait
iret
scas
stos
scas
adc
ret
mov
ss
jmp
in
xchg
push
add
cli
jge
xchg
add
ja
fldt
mov
add
pop
jecxz
shll
orb
xor
addr16
lret
out
das
pushf
mov
inc
pop
mov
cmp
adc
icebp
add
inc
push
cmp
out
int3
jp
dec
mov
mov
pop
xor
fnstsw
jmp
cmp
cltd
jp
sub
adc
push
mov
or
xor
cmpsl
pop
lahf
cmp
mov
xor
pop
jmp
ljmp
int
jecxz
xchg
dec
loopne
lds
pop
xchg
cmc
jmp
add
ljmp
test
push
or
lds
and
aaa
cmp
mov
pusha
push
inc
and
push
jb
fsubrl
adc
push
jecxz
mov
adc
pop
in
lds
out
pop
dec
inc
xchg
incb
or
jmp
jb
clc
push
fsubr
int
enter
and
int3
aas
ficomps
add
or
fcomps
adc
and
clc
lods
sub
jnp
adc
pop
cltd
dec
std
cltd
popa
enter
xchg
or
shlb
and
pop
push
aam
push
xor
imul
aad
negb
test
sub
lds
scas
decb
fbld
outsl
fwait
dec
nop
xchg
xchg
rcrl
loope
and
or
cmp
repz
add
mov
xchg
movsl
xchg
inc
cmp
push
daa
fndisi(8087
cmc
or
adc
lret
scas
and
xchg
imul
sbb
add
jle
rolb
dec
mov
lcall
cmp
and
insl
lds
test
xchg
test
add
push
leave
nop
add
fs
insb
aas
stc
or
mov
add
xchg
mov
pop
xchg
fistpll
pop
mov
pusha
sub
stos
aaa
mov
sahf
mov
mov
inc
frstor
pop
cmp
pop
bound
dec
push
divb
pushl
jbe
cmp
add
sub
aas
xor
jmp
pop
add
scas
inc
test
mov
mov
pop
int
inc
nop
sbb
add
pop
daa
mov
mov
or
adc
in
add
xchg
out
push
or
loopne
sar
cmp
filds
push
orb
lock
jg
add
mov
cmc
jmp
adc
scas
sub
sub
adc
rorb
cmp
and
aad
lret
pop
scas
sub
dec
pop
rclb
hlt
fsubs
popa
mov
ret
jecxz
sub
dec
and
xchg
repnz
in
or
xchg
mov
sub
fnstcw
sub
jmp
cli
repz
sub
icebp
aaa
jl
pop
not
cmp
imull
bound
int3
aad
pop
out
inc
jae
inc
fwait
adc
cmp
cmp
dec
into
mov
ss
pop
inc
daa
jge
mov
cmp
insb
or
dec
bound
fs
pop
cmpsl
daa
jne
ret
mov
out
adc
lret
add
clc
push
out
test
mov
add
dec
and
pop
fsubrs
jg
lods
inc
loope
and
gs
or
push
push
xor
mov
push
xor
mov
jecxz
xchg
mov
imul
cmovne
icebp
outsb
inc
fsubp
xchg
dec
push
pop
outsb
insb
bswap
push
cld
jbe
imul
stos
cmp
iret
test
pop
mov
or
ljmp
xchg
arpl
cmp
push
mov
lret
push
pop
rcl
cmp
cmp
pop
xor
mov
dec
mov
cmp
cmc
ds
or
sbb
ja
in
push
sti
xor
or
xchg
adc
stc
nop
pop
insb
decl
inc
xchg
push
gs
sub
mov
addl
sbb
gs
sbb
adc
fildl
cmp
adc
mov
sub
test
add
repz
aaa
loope
cmpsl
shrl
sub
dec
cmc
out
inc
or
xor
inc
jae
out
jmp
outsl
adc
xchg
das
test
pop
or
shrb
sub
rclb
and
pop
test
xchg
jmp
mov
push
mov
fisubl
std
xor
sub
adc
mov
xchg
xor
out
icebp
dec
ja
mov
jno
and
pop
xor
ret
push
pusha
sbb
adc
sbb
lahf
mov
inc
mov
jmp
add
in
outsb
mov
movsw
xor
sub
pop
sub
fimull
testb
pusha
add
push
ljmp
cmp
xor
add
cmpsb
pop
mov
test
sbb
sub
into
fwait
jnp
movsb
loope,pt
push
imul
xchg
sahf
mov
cwtl
xor
mov
mov
sbb
adc
cld
dec
outsb
popf
sub
jno
data16
cmc
fistps
enter
inc
movsb
repz
dec
pop
pushf
cmc
mov
in
je
jge
sbb
mov
cwtl
lock
push
cmpsl
adc
and
pop
pushf
jae
aam
mov
test
in
sub
mov
sub
push
je
sbb
xchg
push
mov
jge
push
punpckhwd
int
jns
jle
out
cmpsl
push
divb
dec
cli
pop
andb
mov
push
cltd
add
pop
loope
dec
inc
shrl
ljmp
or
push
sbb
fmull
test
popf
shrb
push
ja
push
push
dec
sbb
lock
xlat
xchg
xchg
mov
mov
mov
out
xor
lods
jmp
and
out
jecxz
sbb
jbe
test
sub
mov
push
push
cmpsl
or
push
lea
xchg
sbb
addr16
outsb
outsb
stos
pop
xor
add
pop
lret
pop
js
adc
inc
fwait
xor
mov
jmp
out
xchg
mov
cmp
mov
sub
cwtl
mov
push
and
insl
mov
pop
rorl
mov
xor
fs
pop
dec
addr16
inc
je
out
in
addr16
pop
bt
cmc
xchg
mov
inc
jmp
popf
and
sbb
mov
addr16
dec
js
mov
jp
push
mov
pop
and
cltd
xchg
or
out
cmp
out
jge
push
movsb
mov
inc
xchg
repnz
cmpsl
or
xlat
mov
jo
mov
dec
adc
sub
je
dec
mov
add
pop
mov
out
fistpl
mov
imul
addl
mov
inc
int3
cs
inc
add
sti
outsb
leave
cmpsb
bound
dec
jae
mov
push
ucomiss
movsl
xchg
lods
shlb
sahf
int3
add
insb
loop
ljmp
inc
movsl
lret
sti
or
aaa
jns
dec
cmpsb
inc
es
test
xlat
xchg
fildll
ret
fdivrl
inc
stos
int3
jl
inc
jno
iret
jle
jb
push
mov
or
data16
out
xchg
invd
imul
and
negl
stos
pop
cmp
outsl
inc
jns
pusha
adc
cld
lret
pop
or
ljmp
sbb
mov
dec
sbb
jo
dec
in
adc
push
xchg
jle
pop
inc
scas
mov
std
imul
fisubrs
jno
mov
or
shr
cmp
imul
pop
outsl
push
jno
int3
jo
hlt
mov
cmpsl
dec
and
or
cmp
cmp
cmp
sub
cltd
xlat
cmpsb
dec
lds
push
call
add
xchg
jg
xchg
push
mulb
add
add
cmp
fbld
sbb
shll
in
jbe
cvtpi2ps
mov
adc
pop
jno
add
stos
inc
push
flds
cmp
pop
push
push
std
popa
mov
mov
arpl
xchg
nop
sbb
xchg
divl
cmpsb
pop
shr
fs
sub
popa
push
cmc
pushw
ja
js
inc
std
and
adc
xchg
xor
sub
mov
in
jle
sti
mov
jg
sub
inc
inc
stc
mov
lea
sarl
cmp
adc
pop
mov
out
mov
sub
sub
test
insb
and
mov
out
jge
stos
stos
out
decb
ret
arpl
test
adc
push
mov
cwtl
loop
fwait
pop
out
enter
jns
pop
mov
fst
lret
and
xchg
xchg
mov
mov
loopne
les
cmp
mov
add
adc
mov
push
mov
jl
lock
imul
loop
mov
and
ljmp
jne
enter
push
and
ret
mov
das
mov
push
adc
sahf
cltd
test
push
xchg
nop
fists
pop
les
cmc
mov
sub
shlb
popa
jbe
ss
aaa
adc
xlat
dec
mov
pop
lea
sbb
int
call
xchg
rorb
mov
dec
pop
pop
aad
test
or
push
or
pushl
cmovb
and
mov
xchg
mov
dec
loopne
mov
xor
fs
mov
adc
dec
movsb
gs
scas
inc
lea
jl
cmpsb
bound
inc
imul
ljmp
fidivrs
fidivrs
aad
mov
cmp
mov
cmp
sbb
scas
xor
aaa
cmc
or
cmp
std
adc
pop
sbb
push
jmp
mov
int3
pop
sub
xor
and
xor
movsb
jl
repz
pop
dec
rclb
int
mov
ret
adc
ret
or
gs
fcomp
mov
cs
lock
orb
daa
inc
or
xchg
cmp
dec
push
add
dec
sub
inc
or
or
lock
push
lods
pop
insb
jmp
mov
xchg
sub
sbb
pop
daa
js
lods
cmp
jl
cmc
in
imul
xor
push
ss
jge
test
dec
pop
lret
lods
icebp
push
mov
pop
dec
cltd
xchg
cmc
sbb
jle
std
aas
adc
add
mov
out
mov
jns
xchg
and
xorl
mov
sub
fwait
jno
mov
imul
pop
jno
xchg
out
xchg
push
adc
dec
inc
jp
fs
or
outsl
ja
sahf
xor
mov
mov
incl
test
mov
jecxz
sarb
popa
lahf
pop
sbb
xchg
fidivrs
cli
and
int
mov
ss
xor
xchg
ljmp
insl
sub
cwtl
mov
dec
out
sbb
dec
push
mov
std
xor
std
pop
in
fwait
mov
into
jne
test
aas
pusha
sub
nop
test
fbld
in
outsb
pop
xchg
pop
push
test
int3
mov
push
imul
inc
cmp
push
sub
iret
adc
in
aam
pusha
sub
rcll
mov
adc
pop
lods
sbb
in
add
sbb
cmpsl
aam
dec
cs
jg
scas
adc
jbe
in
cli
xchg
pop
popf
push
roll
insl
movsb
loopne
pop
nop
ds
addl
mov
xchg
xchg
pop
hlt
push
pop
jmp
mov
pop
adc
sbb
lcall
adcl
and
adc
adc
jnp
in
rorb
mov
andl
insl
push
clc
sarb
xchg
imul
aam
cwtl
or
pop
je
test
or
jns
cmp
jb
out
mov
mov
jae
sub
loope
dec
hlt
frstor
xor
imul
arpl
mov
xor
mov
mov
fucomip
ret
fstps
pop
dec
push
popa
fldt
cmp
dec
pop
pop
pop
pop
lds
clc
push
lods
adc
sub
in
mov
notl
jp
outsl
cmp
clc
mov
sbb
fmuls
xchg
push
arpl
cmpsl
pop
pop
subb
aad
ss
pop
adc
xchg
sub
adc
xchg
xor
cmp
mov
out
push
loop
xchg
push
add
fisttps
or
fwait
add
loopne
outsl
jg
imul
sub
cmpsb
arpl
mov
enter
lcall
dec
je
arpl
push
inc
push
mov
cltd
xchg
adc
lcall
data16
adc
jo
sub
sbb
push
add
scas
lods
push
rcrb
ds
inc
mov
inc
mov
mov
jns
out
movsl
stos
fsubr
dec
jge
sqrtps
nop
xchg
cmp
add
xor
fs
fsubr
lds
sub
inc
repz
push
leave
jbe
xchg
inc
pop
and
mov
xor
mov
xor
xchg
dec
test
push
inc
or
cmpsl
sub
sbbl
mov
js
pop
test
int
pop
cmp
and
out
imul
sub
fwait
jg
pop
xor
lret
inc
xor
mov
inc
gs
jns
inc
movb
inc
xor
fimuls
xor
cld
test
adc
cmp
dec
mov
in
push
push
cltd
jmp
test
scas
adc
push
insl
jl,pt
jo
push
push
imul
mov
add
iret
testl
jg
movsb
xlat
jnp
filds
rolb
pop
pop
mov
add
mov
inc
fdiv
cmpsl
adc
xor
lds
js
or
testl
push
in
adc
cld
push
outsl
sbb
cmp
cmp
ja
jle
xchg
sbb
jmp
cli
popa
xor
popa
xchg
hlt
out
push
adcl
ss
cmp
mov
jne
in
push
inc
mov
or
mov
popf
mov
movsb
es
and
sub
rorl
jne
inc
dec
sbb
sub
mov
ud0
sub
xor
fisubrs
dec
iret
inc
mov
jmp
in
inc
lcall
fnstsw
ret
push
add
div
cli
cmp
sbb
xor
mov
imul
test
cmp
sub
jle
mov
push
dec
pop
ljmp
add
popf
sbb
mov
nop
pop
sub
sbb
adc
ljmp
hlt
jp
sti
out
fs
out
insl
and
sbb
or
test
sbb
add
sbb
jmp
daa
push
dec
lret
sub
movsl
xchg
or
leave
cmp
imul
pusha
rcr
ficomps
pop
dec
scas
xor
lods
pop
lods
sbb
mov
bound
int
pushl
sbb
push
xchg
sahf
jl
jp
loop
push
or
movsb
dec
or
or
lcall
push
inc
pop
fmull
jecxz
out
or
cmp
push
test
fs
and
aas
mov
pop
mov
das
mov
ret
je
push
scas
dec
sahf
cmp
movsb
pop
out
mov
sbb
sbb
inc
mov
test
into
inc
int3
dec
out
sub
mov
leave
add
jne
stos
test
or
add
loope
add
adc
aam
test
adc
adc
popf
fcoms
out
cmp
andl
cmp
push
outsl
lods
scas
mov
je
fs
test
call
jecxz
mov
jbe
push
xor
aad
sub
loopne
outsw
in
cmpb
imul
rclb
xchg
mov
out
jo
mov
add
jge
ss
fdivr
pushf
mov
das
rol
push
xor
ja
orl
fistps
mov
lret
les
clc
in
ljmp
mov
dec
aam
stos
mov
fstpl
incl
pop
inc
push
or
repz
pop
jl
arpl
into
adc
testl
div
gs
mov
pop
icebp
into
xchg
in
cmp
sbb
mov
jge
jg
pop
outsb
add
repnz
push
scas
push
jmp
jbe
mov
pop
jb
sbb
out
mov
xor
inc
stos
push
test
and
out
push
mov
xchg
lock
ret
xchg
pop
xchg
push
and
loop
xor
inc
dec
adc
rclb
inc
jbe
sub
push
gs
push
das
cmp
mov
adc
sub
and
pop
cmc
add
xor
testb
adc
pushf
jno
sbb
int3
in
adc
jne
shrl
mov
mov
adc
adc
aaa
push
addps
in
sbb
and
arpl
sub
jae
mov
rcrb
mov
fldt
or
and
mov
es
lret
and
xchg
cs
dec
push
ljmp
in
repnz
mov
sbb
mov
xchg
fsts
jecxz
push
and
loop
add
cmp
push
cmp
dec
sbb
aas
sub
push
fs
popa
inc
sub
mov
jnp
scas
mov
jnp
loopne
lds
imul
je
in
out
iret
adc
pop
scas
imul
xchg
xchg
inc
lret
outsl
mov
push
daa
rcrl
sub
adc
into
mov
push
cmpsb
out
mov
icebp
lahf
push
mov
jbe
sbb
sbb
dec
shll
int
ds
push
and
out
adc
xchg
push
les
cmp
push
or
xchg
cmp
pop
push
std
clc
in
dec
mov
jp
xor
movsb
popf
orl
cli
gs
xchg
cmp
push
xchg
xchg
push
subb
sahf
sbb
jb
jmp
pop
sbb
jne
arpl
pop
nop
or
mov
stos
or
lods
cmc
or
fnstenv
fiadds
sub
ss
icebp
push
or
cs
mov
sub
int
lods
jns
cwtl
jmp
leave
pop
dec
ret
rcrl
cmp
inc
mov
js
push
pushf
xchg
jo
and
sub
mov
or
es
dec
sbb
push
dec
lods
cltd
dec
jae
sub
stos
xchg
jl
dec
sbb
clc
and
test
jae
fimull
jb
adc
cmpsb
sbb
dec
stc
fisubrs
or
push
test
leave
mov
mov
lods
insl
test
pop
push
sbb
jo
and
js
jb
cmc
sub
xchg
pop
xchg
xor
xchg
jbe
sti
xchg
in
lret
mov
lret
adc
inc
and
add
ja
push
ljmp
insb
xchg
movsl
add
fstpt
les
pushf
pop
push
movsb
aas
out
push
xchg
jl
shlb
push
cmpsl
lods
adc
decl
out
mov
out
push
mov
xchg
loop
inc
ret
lahf
add
cli
add
mov
shlb
stc
shlb
mov
sbb
dec
jmp
jns
sahf
mov
subb
xor
xchg
fbld
lds
out
or
movsb
mov
sarb
nop
push
fwait
mov
push
loope
push
outsb
jg
xor
subl
out
in
fwait
icebp
or
ret
ds
adcl
or
rcll
xchg
out
cmp
sub
andl
adc
lret
jmp
dec
jae
das
xchg
adc
add
cmc
mov
stos
jb
jae
jmp
push
push
mov
and
pop
orb
and
gs
or
gs
rol
fstpt
test
cs
call
or
dec
and
pop
jle
loope
inc
notb
mov
cs
inc
mov
mov
xorl
in
push
xchg
ja
push
cmpsl
mov
push
das
or
fdivr
int3
mov
fldt
or
lcall
mov
sub
add
ljmp
ret
icebp
negb
sbb
inc
stc
cld
inc
push
or
pop
hlt
loopne
mov
xchg
gs
mov
roll
jo
frstor
cld
or
push
add
into
and
dec
mov
cmpb
mov
mov
jmp
stc
xchg
fists
ret
outsl
adc
inc
pop
sbb
xor
or
dec
popa
fstl
int3
das
add
cmp
rcrl
std
enter
insl
nop
shll
leave
mov
rorl
mov
dec
adc
cmp
xor
rcl
popa
push
push
push
xchg
fimull
jmp
lretw
mov
stos
cmp
insb
inc
mov
cmpsb
in
pop
jmp
imul
mov
mov
add
add
hlt
xchg
inc
repnz
push
inc
cmc
jg
cmp
cmpsl
add
fucomi
cli
sub
mov
pop
rclb
pop
jbe
loope
jnp
enter
popf
inc
sub
std
fnstenv
pop
outsl
in
or
mov
fucomp
or
bound
pushf
add
lods
add
or
stos
sbb
push
scas
mov
fidivrl
mov
shlb
inc
les
jge
faddl
insb
out
cwtl
dec
push
repnz
mov
testl
push
ss
fs
arpl
sub
mov
sub
fistps
jae
mov
stos
ret
test
jb
mov
sbb
fsubs
lahf
jecxz
jg
mov
jno
mov
add
repnz
mov
or
sub
add
and
loop
or
pop
addr16
cmpsb
push
dec
out
push
lock
lods
or
sarl
pop
cld
insl
push
mov
adc
out
fcomps
jecxz
cmpb
and
cltd
add
subl
ja
ljmp
bound
or
xor
popa
sbb
dec
nop
mov
pop
dec
sarb
xlat
or
push
aad
sbb
inc
add
jmp
cmp
mov
sub
in
roll
prefetch
and
cltd
cmp
push
xchg
push
imul
out
xchg
cmp
pop
xor
sub
ret
pop
pop
mov
inc
lret
xlat
adc
in
jp
out
add
fmuls
push
jno
add
sti
hlt
fdivl
push
in
jbe
fisubs
jae
mov
sub
dec
repz
jbe,pt
mov
or
mov
xor
shrb
ret
cmpsl
into
lahf
mov
dec
inc
cs
jl
call
mov
cmpsb
pop
loope
mov
mov
jns
dec
cmp
pop
push
sahf
popa
or
xchg
dec
dec
fistpll
mov
xlat
out
dec
ficompl
jl
add
xchg
dec
dec
push
sbbl
test
mov
enter
mov
xor
scas
aaa
mov
out
push
in
lods
daa
sbb
add
in
fsub
and
daa
les
scas
dec
scas
scas
js
dec
jmp
fstpl
cmp
cltd
add
add
push
fistl
jno
xor
mov
sbb
xor
pushf
movsb
sarl
js
das
xchg
lahf
cmp
inc
movsl
mov
xchg
inc
fidivs
lock
movsb
pusha
pop
cli
mov
insl
lret
sbb
roll
stos
mov
inc
sub
mov
in
dec
mov
dec
mov
clc
add
jno
jnp
ret
out
mov
push
jns
jae
idiv
iret
sahf
dec
add
repz
js
daa
mov
int
cmp
into
clc
mov
into
jns
dec
jns
push
cmp
pop
leave
pusha
mov
fdivrp
dec
cltd
mov
push
push
nop
mov
jge
cld
adc
xchg
add
or
in
xchg
mov
rcrl
jb
sub
pop
jmp
cmc
arpl
in
aam
mov
sbb
aas
cmp
dec
jp
jb
stos
jno
pop
add
dec
insl
or
int
insl
into
int
inc
xchg
mov
lea
sub
cltd
popa
sbb
jecxz
jmp
roll
cmpsb
inc
jnp
lcall
sti
inc
xchg
cmp
mov
inc
xchg
inc
xor
pop
xchg
aaa
daa
mov
lods
aam
fmul
xchg
sub
loope
and
lea
fisttps
sti
xor
test
jnp
xchg
std
js
ret
mov
add
icebp
pop
xor
pop
out
call
jmp
xor
lret
xor
cmp
pop
test
push
aam
or
jge
popa
add
test
shll
jmp
cmp
mov
fsubp
xchg
jbe
out
adc
in
addr16
sahf
into
outsb
push
xor
leave
pop
mov
push
lahf
stc
pop
stos
add
and
insl
int3
mov
in
inc
ror
or
test
js
sbb
andl
call
cltd
xor
pusha
shlb
xlat
dec
mov
and
arpl
mov
mov
sub
push
jo
ficoms
test
xchg
mov
inc
fstpt
bound
call
lcall
push
pop
mov
outsb
or
les
enter
int3
sbb
test
arpl
andb
mov
push
add
sub
and
mov
or
xchg
mov
mov
or
xchg
mov
mov
stos
pop
add
push
ja
ret
jne
repnz
stos
pop
xor
mov
push
mov
daa
push
xlat
int3
dec
test
ror
fdivr
or
inc
sbb
pop
push
and
pusha
cmc
cmp
cmp
add
pop
adc
pop
mov
shl
call
in
sbb
es
mov
hlt
mov
mov
popf
fisubs
xchg
jg
pop
or
movsb
lock
scas
leave
repz
inc
push
dec
add
jp
jno
bound
mov
adc
hlt
mov
dec
mov
mov
xchg
je
das
out
fcoml
sbb
sub
mov
shlb
mov
cld
inc
sti
add
push
stos
mov
adc
mov
xor
mov
mov
lods
inc
lret
add
popa
repz
sbb
xor
lret
sbb
mov
add
mov
popa
jns
add
adc
rcrl
sub
xchg
mov
sub
movaps
pop
in
xchg
daa
test
dec
aaa
xor
popa
je
mov
inc
imulb
push
and
lahf
push
mov
int
ja
xchg
inc
jnp
add
mov
fwait
xor
mov
mov
daa
add
imul
les
add
insl
fcmovu
test
adc
test
or
mov
inc
mov
testl
out
xchg
popl
jns
mov
in
or
xchg
bound
dec
out
andl
mov
loop
mov
xor
pcmpgtw
nop
mov
cmp
mov
call
rorb
jbe
pop
mov
lds
orb
imul
lods
xchg
testb
ljmp
sub
aad
stos
xor
stc
test
fstl
int
push
out
add
fs
jbe
aam
cmp
aad
push
and
int3
mov
insl
cmp
adc
adc
testb
push
iret
dec
mov
inc
push
fsubp
rcl
jg
mov
cld
mov
stc
xchg
dec
ja
lahf
lods
scas
jne
aam
movsb
inc
cmp
mov
sahf
inc
add
push
inc
lret
mov
mov
ljmp
testb
cmc
or
subb
dec
dec
aaa
mov
ds
out
retw
lret
imul
rol
rcrb
cltd
test
xor
cmp
adc
in
jl
sbb
jnp
jecxz
mov
cmp
push
inc
xor
cs
jns
cltd
call
jg
or
clc
sti
aad
mov
fimull
lret
mov
int3
and
jl
mov
mov
push
rcrl
dec
movsb
cmp
and
sti
adc
jecxz
and
and
js
out
stos
push
add
xor
imul
daa
insb
pop
inc
inc
fwait
xchg
pop
mov
pop
repnz
adc
stc
xor
inc
ret
test
cli
mov
dec
sahf
push
push
fsubrs
and
mov
sbb
rorl
lret
jp
xchg
push
dec
and
andl
in
mov
jl
dec
push
dec
mov
pop
push
jno
xchg
ret
add
int
push
loopne
adc
sbb
sub
sahf
cmp
out
nop
jbe
mov
gs
movups
insb
clc
aam
aam
mov
outsl
das
xchg
cs
loop
insl
dec
sbb
loop
jl
adc
adc
outsb
aas
and
cmpsl
add
jle,pt
into
mov
loopne
sbb
sub
pop
jge
and
scas
adc
add
hlt
das
mov
mov
push
mov
mov
dec
arpl
cmpb
ss
mov
mov
dec
testb
idivb
out
lods
arpl
test
inc
pusha
jb
lret
xor
pop
xor
dec
popf
fnstsw
adc
mov
mov
hlt
clc
jo
aad
jmp
idivb
loope
xchg
mov
jnp
push
out
mov
pop
mov
push
dec
shll
fdivrs
je
loopne
scas
movsb
or
dec
jl
das
shrl
xor
add
inc
add
add
jo
and
testb
push
aaa
mov
ja
or
push
dec
sbb
jl
lret
sbb
nop
fsub
xchg
js
sbb
loope
fsubs
mov
dec
xor
push
inc
cltd
pushf
mov
imul
lds
mov
ret
jmp
xor
popf
or
or
push
lcall
out
insl
stos
rcrl
add
pop
mov
mov
add
push
aas
adc
out
notl
jmp
jnp
imul
xor
lret
insb
and
push
es
xor
xchg
loope
mov
add
mov
in
sub
push
cmc
jnp
xchg
pushf
mov
add
or
xor
es
pushf
sub
into
pop
mov
test
out
int
lods
repnz
repnz
inc
inc
fsubrs
es
pop
mov
rorb
in
and
pop
call
adc
add
lock
inc
jle
xchg
icebp
sub
out
add
dec
stos
call
xchg
imul
lods
loop
sub
cld
mov
movsl
or
imul
adcb
int
mov
push
mov
mov
dec
lods
lods
fwait
mov
push
xorl
imul
cmpsl
cltd
adc
sbb
mov
dec
shlb
xor
adc
aad
push
js
stos
pop
enter
xlat
sub
test
shlb
cmp
xchg
jae
xor
mov
xchg
push
testb
pop
cmpsl
add
inc
pushf
pop
test
pop
cmp
pop
ljmp
xor
pop
sahf
popf
rorl
or
leave
mov
push
xchg
push
divl
jbe
mov
jg
xchg
imul
out
push
stos
fbstp
xchg
mov
sbb
adc
imul
in
inc
loopne
cli
push
and
pop
pop
test
ret
lods
adc
or
jbe
add
inc
or
into
cld
sbb
cmpl
jnp
repz
in
repz
sub
sub
xchg
or
movsb
fadds
roll
jp
loope
add
jnp
sub
scas
inc
orl
out
push
add
lods
jae
xchg
pop
std
aaa
in
adc
cmp
loope
stc
out
mov
mov
int3
sub
in
mov
aad
cmp
jns
ja
mov
mov
cmp
inc
cmp
mov
cmp
adc
jb
xchg
mov
mov
mov
dec
in
add
mov
ljmp
das
lods
xor
jle
dec
sub
outsb
pop
mov
fcmovnb
inc
subb
mov
adc
mov
lea
shrb
cmp
popf
xchg
and
xchg
fcmovnu
mov
ficoml
push
and
sub
or
aad
and
test
js
movsl
fsts
adc
cld
mov
jbe
cmp
in
fisubrs
lcall
and
add
sbb
jnp
cwtl
repz
add
test
sub
ja
gs
jbe
adc
fstps
js
shlb
cltd
pusha
daa
xchg
test
arpl
sarl
adcl
loopne
je
aad
orl
out
mov
xchg
mov
lcall
jb
mov
cmp
int3
cmp
push
cs
dec
std
push
sub
sti
pop
rorb
xchg
pop
dec
or
sbbb
aaa
or
jmp
js
faddp
jl
mov
test
jp
adc
cmp
or
repnz
xchg
ret
sub
sub
jno
lods
mov
and
inc
insb
sub
mov
js
sti
mov
jb
rolb
add
xor
cmp
sbb
push
cmp
fisubs
sbb
or
cmp
test
dec
sub
neg
mov
or
push
push
cvtps2pd
and
mov
or
rorl
add
mov
pop
lods
adc
xchg
xchg
shll
lea
add
ror
xor
push
movsl
sbb
dec
add
dec
add
pushf
or
lock
jns
loopne
or
inc
sbb
xchg
sub
xorl
sub
and
fadd
test
fwait
adc
push
stc
jae
jbe
fdivl
bound
xchg
add
dec
pop
lret
adc
mov
add
mov
mov
xor
scas
push
repnz
in
stos
out
test
jbe
popf
mov
or
push
data16
push
add
push
pop
cmp
lods
mov
dec
rorb
fimuls
sbb
or
das
loope
jg
scas
lods
dec
adc
xorl
js
add
push
cmpsl
sbb
lds
pop
push
cli
dec
lock
ficomps
xor
mov
mov
enter
push
pushf
cmp
push
mov
adc
ret
push
sahf
xor
sbb
xlat
sbb
movsl
in
mov
sbb
ss
icebp
andl
stos
mov
jle
sub
adc
dec
mov
push
rcrl
out
sbb
push
sub
iret
mov
pop
jnp
call
imul
xor
xor
call
pop
inc
xchg
clc
cltd
mov
mov
je
fstpl
lods
pop
sub
mov
xlat
inc
stc
or
pop
rolb
mov
stos
cwtl
jae
fisubrl
cmp
les
sbbb
fwait
aad
sub
mov
jg
and
test
in
sbb
xchg
cmp
mov
sbb
jge
adc
inc
sbb
xchg
je
std
nop
imul
hlt
add
cwtl
xor
sbb
mov
jl
testb
pop
movl
mov
scas
add
bound
jg
mov
jp
push
scas
fnsave
jbe
push
fwait
dec
popa
and
or
imul
frstor
jb
imul
cmpsl
pop
mov
or
jmp
xchg
push
test
jo
pop
adc
in
test
pop
mov
or
call
hlt
cmp
gs
fnstenv
jg
out
in
ja
inc
inc
mov
jmp
inc
cs
jns
jecxz
js
jno
xchg
sub
cmp
inc
xchg
and
mov
in
in
pusha
es
add
cmc
pop
jle
xlat
mov
mov
inc
hlt
or
jb
inc
xchg
test
fldt
inc
aam
xchg
mov
pop
pop
cmp
xchg
movsb
mov
jne
repnz
and
or
lods
xchg
dec
les
lock
insb
cmpsb
pop
jbe
icebp
movsl
movsb
divl
jnp
scas
popf
fcoms
pop
rcrl
enter
mov
dec
mov
push
jo
cs
stos
shrb
mov
sahf
jnp
data16
mov
mov
lahf
sub
testb
test
adc
inc
jnp
xchg
sbb
xor
sbb
and
scas
jl
loopne
lock
sub
jl
jmp
ja
das
mov
adc
mov
fidivrl
daa
lret
inc
scas
push
hlt
xchg
mov
into
xchg
add
push
pop
xchg
lea
mov
lea
aaa
lahf
out
push
push
pusha
iret
imul
mov
jmp
cmp
push
sbb
dec
xchg
inc
fmull
or
mov
popf
dec
or
arpl
dec
pop
pop
pop
dec
js
push
testb
test
jb,pn
int
jl
mov
adc
mov
and
pop
mov
stc
dec
sub
pop
and
or
cmp
jno
data16
or
lcall
insb
or
cmp
lds
mov
ficoml
aas
xor
dec
dec
xchg
mov
icebp
xor
mov
stc
xchg
pop
sarb
xor
insb
push
adc
jl
and
cmp
insl
xor
xlat
enter
push
add
and
mov
lock
mov
into
lahf
repnz
or
js
push
inc
xor
gs
cmp
lahf
sbbb
lods
test
dec
push
incl
imul
sbb
mov
fdivrs
mov
daa
sbbl
movsb
lock
or
dec
adc
fnstcw
in
add
int
add
movsl
adc
sub
jmp
push
stc
mov
cmp
stos
in
cmp
movl
fstps
inc
push
dec
cmp
xchg
pop
in
and
push
call
shr
cmpsb
add
dec
jns
xor
repz
ljmp
popa
inc
notb
dec
adc
and
popa
adc
push
push
jge
sbb
cmp
cmpsl
xchg
sub
std
push
push
lock
out
sub
in
add
fidivl
inc
int
lret
repz
or
cmpsl
ss
inc
data16
test
mov
sub
les
cmp
mov
mov
sub
movsb
insb
inc
jecxz
lret
inc
and
adc
andb
mov
and
shlb
push
cwtl
jg
mov
push
jle
fdivrl
sbb
jmp
jecxz
push
or
cmp
call
movsl
nop
jg
nop
inc
aas
jmp
imul
and
mov
xor
inc
sub
jecxz
lret
cld
jne
cmpsb
cmp
into
xchg
xor
in
xchg
push
outsb
mov
lcall
aad
inc
lret
add
pop
cmp
lds
call
sub
jmp
das
lret
imul
shlb
lahf
mov
pusha
pop
add
sub
xorl
test
push
dec
xorl
lahf
and
popl
pop
mov
sbb
inc
out
mov
push
mov
inc
fildl
cli
pop
or
out
mov
cmp
pop
push
sti
imul
xor
pop
lahf
mov
movsb
pop
jb
div
cltd
cmc
pop
mov
setae
add
or
pop
pop
mov
inc
xchg
xchg
push
cmp
enter
dec
sub
pop
sub
movsl
fwait
pop
popf
or
clc
dec
sub
movsb
out
dec
in
xchg
call
roll
lcall
xchg
fisubrl
inc
pop
push
sub
xorb
mov
dec
xchg
je
int3
xor
jae
inc
xchg
xchg
jmp
in
arpl
jecxz
addr16
xchg
adc
inc
xchg
jg
and
sub
push
mov
shrb
adc
xor
imul
cmpsb
loop
push
jo
add
mov
insl
xchg
pushf
xchg
movsl
jle
jae
pop
ljmp
push
adc
dec
aad
mov
adc
jns
pop
and
arpl
sub
xchg
push
xchg
mov
out
scas
mov
loope
or
inc
pop
in
dec
lret
jo
cmc
jb
test
shll
jo
cmp
scas
in
addr16
in
sub
add
and
xchg
add
cs
sub
imul
popaw
fistpl
scas
push
cmp
dec
mov
mov
fisttpl
inc
int
lock
mov
stos
mov
inc
sub
in
jmp
push
xor
shl
es
mov
mov
insl
mov
iret
mov
push
hlt
pop
mov
push
xchg
fisttps
mov
repnz
into
jg
jp
cs
lea
add
jno
cs
jge
movsl
outsb
data16
inc
adc
sbb
xor
cld
in
insl
pop
dec
add
clc
xchg
fs
push
loop
aam
mov
dec
add
loop
pop
push
push
cmp
jns
stos
lea
testl
ficoml
iret
mov
jmp
les
loop
inc
punpckldq
test
cmp
lret
mov
adc
and
lods
mov
mov
xor
loop
or
cmpsl
lret
test
clc
mov
test
push
push
pop
in
mov
pop
or
arpl
jmp
movsl
xchg
jnp
and
icebp
adc
add
dec
in
stos
inc
or
push
mov
outsl
leave
sbb
mov
mov
pop
hlt
adc
pop
scas
repnz
fdivs
fisubrs
mov
hlt
ss
or
stc
sub
mov
jno
mov
xor
pop
fimull
and
lret
iret
jnp
push
mov
scas
mov
adc
push
aaa
sbb
and
aaa
jae
mov
or
je
pop
incl
mov
and
pop
shr
and
inc
dec
in
mov
in
jno
imul
lods
sbb
dec
rclb
dec
sahf
jle
mov
sub
xacquire
data16
mov
sbb
popf
fdivs
xor
test
in
mov
sbb
notb
xchg
jne
aaa
adc
jae
xor
dec
and
jne
psubusb
mov
out
sub
inc
mov
xchg
es
mov
int
das
sbb
cmpsb
pop
sbb
outsl
dec
ss
inc
movsb
scas
leave
in
jmp
xor
int
in
cmp
fadds
test
sti
add
mov
mov
xor
imul
rcrl
subl
mov
scas
jae
jne
icebp
lds
ljmp
stc
inc
bound
pop
pop
push
ret
jnp
aad
cmpsb
push
mov
sub
inc
xchg
and
pusha
adc
jno
xchg
in
jg
out
or
mov
stc
mov
or
gs
subl
jge
add
push
pop
imul
inc
xor
fnstenv
and
fbld
idiv
mov
mov
mov
pop
repz
cmp
jmp
popa
std
mov
cmp
mov
das
leave
sub
lods
cld
rcll
cmc
frstor
addl
sbb
xor
js
cs
das
xchg
sarl
sarl
call
dec
inc
out
out
fcomip
cmp
mov
inc
dec
ret
lahf
push
out
sub
scas
cmc
pop
ds
dec
push
popl
out
pop
test
mov
fcmovb
pop
jbe
add
dec
push
pop
rcrl
xor
xchg
cld
cmc
jmp
push
mov
test
add
push
daa
enter
adc
aaa
insl
pop
cmpsl
push
cltd
mov
bound
jo
out
jns
dec
rcll
loope
daa
cmp
imul
pop
loope
add
adc
sbb
clc
push
insl
xor
adc
insb
sub
fisttps
out
jae
call
xlat
jmp
lcall
push
cli
adc
shll
jne
bound
std
xor
lret
pop
les
test
mov
mov
and
nop
push
movsb
lret
push
cmp
add
xor
dec
dec
pushfw
dec
hlt
push
push
xchg
in
push
mov
iret
pop
rol
sub
xor
out
lahf
or
jnp
pushf
ljmp
out
movsb
jge
shl
fnstcw
xchg
sub
or
jl
cmpsl
into
push
pop
aaa
shll
arpl
rorb
inc
jg
loope
cmpsb
mov
mov
fmull
xchg
sti
and
nop
stos
and
dec
and
jns
xor
fmull
mov
sub
mov
mov
shlb
sub
fsts
push
cmp
lcall
cmp
mov
dec
sub
and
sahf
shlb
mov
jnp
ret
flds
xor
cltd
insl
inc
xchg
jecxz
add
mov
cli
arpl
mov
sahf
dec
and
pop
mov
test
add
aas
rol
imul
scas
pop
inc
or
idivl
mov
sub
nop
testl
dec
test
adc
xchg
fisubrl
push
or
in
das
rolb
jle
ja
xor
cmpsb
or
mov
mov
xchg
mov
stos
mov
stc
les
add
sbb
and
push
int3
inc
mov
adc
or
bound
repnz
test
in
push
jle
adc
dec
and
mov
fisubs
cwtl
fistpl
or
mov
jecxz
and
pop
xor
push
mov
popa
test
fdivrl
push
sbb
xchg
mov
pop
aam
jo
movsl
add
imul
nop
jg
jp
enter
xor
aas
lock
dec
xor
bound
repz
out
add
jl
in
sub
add
jmp
push
xchg
aaa
arpl
imull
addr16
shrb
das
push
bound
cmp
out
mov
push
xlat
in
aam
xchg
adc
inc
push
push
das
sub
mov
mov
out
stos
xchg
xchg
pop
push
cmc
xchg
fstl
movsl
jp
mov
inc
mov
ja
or
sbb
cmp
push
lret
or
inc
add
mov
cmp
jae
xlat
mov
inc
ret
push
jle
lods
ror
aas
je
and
shrl
int
pusha
mov
cwtl
mov
jbe
nop
jp
inc
bound
inc
ja
rcrl
jns
lret
and
jno
stc
add
sbb
loope
push
mov
lcall
push
dec
lods
and
aam
daa
xchg
clc
fisubrs
xchg
pop
int
pop
xchg
sbb
lahf
mov
out
insl
ljmp
push
jne
ret
stos
loop
pusha
insl
xlat
repz
repz
adc
lea
and
aas
xchg
xor
xor
sub
jle
lods
inc
mov
mov
mov
icebp
je
ror
out
inc
push
test
fdivrs
sub
jl
xor
dec
test
pusha
in
sub
enter
inc
scas
pop
fldl
dec
dec
xchg
loop
pop
mov
xchg
push
jns
repz
test
in
add
mov
push
movsb
in
mov
scas
mov
je
adc
nop
out
add
sahf
repnz
and
aas
in
stc
dec
les
cmp
loopne
out
cmp
or
test
out
add
gs
or
or
imul
ffree
addb
xchg
or
add
adc
cmpsl
push
icebp
movsb
pop
mov
popa
fmull
test
pop
mov
xor
lods
push
mov
imul
push
mov
rorl
repnz
push
cmp
mov
mov
fimuls
mov
pop
sbb
in
adcb
or
mov
fcomi
adc
or
lods
sub
pop
dec
pop
fisttpl
pop
mov
into
adcb
jl
xchg
rcll
push
xchg
js
lds
cld
ja
sahf
pop
and
or
stos
lock
push
imul
mov
pop
or
cmp
into
outsl
mov
insl
sub
imul
mov
add
cmp
adc
cld
sub
push
jmp
cwtl
mov
sbb
xchg
add
add
test
dec
xchg
push
lock
ret
mov
stc
push
fadds
jl
or
add
push
negl
fisttpll
je
sbb
and
sbb
jb
add
mov
push
cmp
insb
push
cmp
push
xor
rcll
stos
sub
inc
pop
das
ss
and
mov
andb
xorb
pusha
push
repnz
jp
jmp
mov
hlt
in
xchg
enter
daa
xor
pop
xor
call
dec
outsb
pop
cmpl
mov
inc
mov
repnz
test
cmp
lds
aaa
hlt
scas
mov
loope
mov
gs
dec
mov
pop
xchg
adc
add
fisttpll
fimuls
daa
dec
dec
xchg
cld
inc
fstpl
xchg
out
xlat
ss
adc
jbe
push
cmpsl
add
jo
xor
rorl
lock
testb
lret
mov
jecxz
pop
out
pusha
xchg
in
push
inc
adc
cwtl
aam
leave
xchg
cmp
adc
pop
daa
mov
or
add
adc
aas
push
add
pop
mov
pop
in
aas
push
in
push
sbb
pop
lods
adc
add
sub
sahf
mov
aaa
mov
add
je
scas
frstor
aas
sbb
leave
out
dec
test
mov
test
xor
sbb
out
andl
or
movsl
add
mov
pop
pushf
test
clc
out
int
or
mov
mov
add
iret
xor
xor
sbb
sbb
in
call
push
ds
cmp
int3
ficompl
mov
xlat
jmp
imul
lret
and
jno
out
flds
adc
fdivr
sahf
dec
cs
imul
imul
lods
decl
mov
icebp
xor
add
inc
dec
fs
dec
lock
or
jle
cmp
jmp
aad
inc
rorl
icebp
mov
pushf
ds
mov
insb
dec
pop
cmp
adc
in
int
pop
ret
subb
stos
cmp
jb
push
outsb
add
stos
xchg
repnz
xor
pop
adc
outsl
out
mov
mov
cmpsb
push
jo
mov
and
sahf
push
mov
cmc
fnstsw
sub
mov
aad
cmp
lods
mov
add
movsl
adc
dec
or
and
push
xchg
mov
mov
and
int3
adc
mov
mov
dec
push
xchg
jne
fstpl
push
insl
scas
out
popf
insl
movsl
insl
push
mov
fs
fadds
jnp
lret
ljmp
mov
loopne
sti
idivb
adc
testb
ret
cmovnp
or
mov
sarb
fmull
ds
popa
fisttpl
mov
fsubs
das
aam
xor
ds
cld
dec
jmp
and
mov
in
sahf
inc
outsb
inc
int3
mov
lds
mov
ret
lahf
stc
fwait
out
push
push
pop
fwait
xchg
xchg
push
adc
and
jae
notl
insb
pop
js
ds
dec
xor
sbb
xchg
xor
jmp
mov
pop
cmc
fdivs
imulb
add
adc
xor
push
rorl
jb
or
and
in
push
xor
cmp
mov
repnz
lret
in
inc
dec
cmpsl
pop
mov
sub
push
outsb
sub
adcl
lods
or
lcall
out
insb
mov
pop
pop
xor
mov
mov
or
adc
jns
add
shll
inc
push
sahf
fildl
scas
inc
mov
sbb
xor
int3
push
xchg
cmp
sbb
dec
sbb
xor
out
lcall
fdivr
pushf
inc
pop
outsb
adc
movsb
xchg
outsb
push
or
pop
push
cmp
nop
movsb
inc
scas
add
dec
test
jmp
xchg
cmp
xchg
push
mov
popf
pop
xor
add
testl
push
test
test
dec
das
inc
aaa
cli
xchg
paddusw
inc
mov
ss
js
or
fwait
pop
xchg
lret
sbb
leave
inc
mov
out
pusha
push
bound
cwtl
mov
or
xor
mov
mov
lcall
dec
jp
mov
int3
mov
pop
ficompl
xor
cmp
sub
dec
not
mov
xor
sub
ret
or
push
shr
xchg
movsb
pop
pop
insl
add
sbb
fdivrp
sbb
and
xlat
out
aad
stc
xlat
sahf
or
jno
mov
int
xchg
xor
scas
in
inc
daa
mov
dec
or
sub
ss
fisubrs
fsubl
aaa
imul
mov
pop
aaa
ret
mov
cltd
lret
sub
xor
sbb
sub
mov
cmc
in
cmp
lds
std
mov
adc
inc
xchg
sbb
mov
xor
pop
rorl
sbb
inc
cmp
push
lret
cmp
insl
mov
push
pushf
sub
cmp
xchg
adc
imul
mov
aas
sahf
mov
xchg
mov
or
sti
xchg
lahf
adc
enter
add
adc
or
mov
push
or
out
gs
stc
cmpsl
addr16
clc
sbb
fistpll
lahf
rclb
lea
and
call
std
daa
xchg
xor
pop
dec
inc
add
jo
loope
inc
addb
xor
ret
arpl
push
mov
mov
add
mov
push
inc
adc
jnp
test
test
dec
jne
and
dec
loopne
testb
out
popa
add
ret
jae
daa
fildl
inc
int3
push
call
cs
imul
mov
xchg
movsb
dec
jg
adc
mov
and
es
insb
movsl
pusha
push
cld
dec
xlat
test
fdivrs
dec
inc
adc
push
adc
dec
negb
jns
sbb
xchg
mov
add
mov
adc
aad
mov
aaa
int
iret
pop
int
push
cmp
jl
and
fstl
scas
std
fstps
icebp
mov
mov
daa
in
les
mov
push
pop
test
outsl
push
stos
inc
xchg
enter
sbb
and
lcall
test
xchg
sahf
rolb
ret
sub
stos
icebp
push
dec
xchg
adc
dec
imul
push
push
add
dec
jo
std
imul
sub
divl
dec
lock
imul
xor
rcll
dec
push
int3
push
arpl
dec
pop
mov
push
pop
pusha
xor
and
mov
and
sub
pop
or
mov
push
negb
cs
outsb
jmp
and
and
adc
add
push
scas
insb
xchg
mov
sbb
popa
movsl
adc
psubsb
sub
cmc
and
and
shll
pop
add
mov
add
mov
test
jns
je
and
nop
test
inc
test
ds
fwait
xlat
in
jmp
jp
push
fstpl
pcmpgtw
mov
lods
out
push
ljmp
ret
jmp
inc
je
jle,pn
cwtl
jo
pusha
aam
in
and
cld
in
stc
stc
fcoms
faddl
jge
inc
cmp
xor
xor
in
jecxz
dec
out
push
add
jns
and
xor
push
inc
sbb
shl
leave
stc
bound
adc
outsb
in
and
jo
inc
push
cmpsl
rorl
in
mov
dec
cwtl
adcl
push
pop
xor
inc
or
mov
arpl
jo
lcall
test
sbb
arpl
insl
sbbb
sub
xchg
push
push
stos
aaa
cmp
es
jmp
sahf
fnstcw
jp
incl
daa
int
insl
and
xchg
filds
pushf
pop
mov
jecxz
adc
dec
dec
cltd
rcrb
ja
adc
lds
pop
push
pop
or
lock
in
gs
repz
dec
int3
mov
repz
sbbb
sbb
cmpsb
loope
cmc
adc
pop
push
xor
int
sub
jns
and
fadds
es
je
fcmovnu
repnz
ja
push
mov
jno
xchg
loop
mov
or
mov
mov
add
add
out
pop
adc
pop
push
stc
cli
data16
addr16
enter
or
or
sbb
jg
and
add
das
pop
cvtpi2ps
inc
pushf
mov
or
out
div
out
mov
icebp
pop
sbb
mov
fildll
push
iret
push
xchg
loopne
pusha
inc
int
push
jo
ss
mov
mov
push
xor
clc
test
pop
pushf
sbb
subl
cmc
dec
movsl
test
mov
and
mov
nop
jmp
sbb
mov
cmp
pop
sbb
popa
jnp
lahf
hlt
aad
test
xor
in
pop
pop
pop
shll
adc
mov
or
mov
movsl
and
aad
sahf
or
dec
mov
and
lret
mov
orb
pop
cmc
xor
mov
outsb
inc
xlat
shl
rclb
sbb
sti
xor
sbb
sbb
out
faddl
sub
ljmp
loopne
sub
es
jae
ja
orb
jecxz
inc
sbb
fabs
mov
push
cltd
adc
sub
aas
rorl
ja
push
mov
movsl
lods
movsb
ss
jnp
push
cmp
test
push
lea
pop
dec
das
sbb
push
pushf
xor
jl
cltd
test
popa
loope
cli
fstps
jno
imul
inc
dec
adc
das
movsb
pop
xchg
aad
aad
lods
inc
enter
xchg
shrl
xchg
out
call
adc
mov
xor
sbb
stc
les
imul
loop
mov
xor
fildll
and
mov
and
and
in
push
cmp
sarb
lret
xchg
lock
enter
mov
xorl
pop
and
cmp
loope
adc
lock
mov
loop
sub
mov
mov
mov
out
mov
xchg
and
cli
adc
bound
push
fldl
xchg
xchg
test
and
ljmp
lea
push
jle
pop
mov
into
lds
inc
std
cmpsl
scas
fcmovnbe
xchg
pop
cwtl
je
mov
jp
dec
adc
push
imul
int3
repnz
js
insl
xchg
inc
pop
inc
sub
cs
mov
dec
nop
stos
aad
xchg
and
lods
rcll
add
addr16
push
jecxz
imul
aaa
call
jle
mov
loop
movsb
jae
popf
addr16
loop
dec
nop
ss
pop
or
dec
mov
mov
loope
and
and
inc
pop
popa
and
pop
adc
or
push
bound
fistpll
fildll
cmp
push
mov
repz
int3
jo
xchg
scas
ja
cmp
ror
cli
sbb
movsb
loopne
cmp
int3
pop
fnsave
clc
jbe
xchg
cmp
insl
sub
pop
xor
out
cwtl
test
jl
add
xor
call
sbb
stos
fs
aas
repz
fldl
test
loope
popl
pop
and
adc
cwtl
xchg
adc
mov
inc
sbb
lods
cmp
cwtl
cwtl
mov
imul
add
pop
pop
test
push
jmp
dec
fdivrl
push
mov
mov
repz
rcr
add
ljmp
mov
mov
insb
shl
adcl
jecxz
rcll
pop
in
sub
cmp
aad
xchg
mov
rcrl
push
xor
adc
inc
push
adc
in
push
pop
or
inc
adc
loopne
add
rcrl
push
mov
call
jb
lret
out
pushf
xor
jge
stc
ljmp
rcrb
and
pop
lock
test
or
insl
sub
js
pop
dec
or
mov
fwait
ss
push
rclb
mov
push
xchg
mov
mov
mov
icebp
sbbb
fimuls
pop
ss
ret
mov
fs
ss
fwait
shrb
push
jno
data16
add
xchg
cli
repnz
add
fstpt
mov
mov
int3
ljmp
stc
icebp
add
scas
mov
push
mov
cmpsb
jmp
mov
add
mov
adc
scas
negb
push
lret
dec
in
xchg
mov
movsb
mov
imul
jge
fildl
imul
inc
xor
imul
sbb
andb
flds
stc
pop
addb
jg
into
lahf
fdivr
sub
ljmp
jmp
push
ja
in
adc
jo
mov
xor
cmp
mov
xor
xor
les
fildl
push
stc
push
ljmp
and
push
sbb
imul
bound
inc
loop
sar
xor
mov
inc
icebp
bound
sahf
mov
pop
push
add
push
mov
cmp
cli
mov
fs
lds
jle
lock
xor
xchg
adc
sbb
fs
loop
sbb
out
int3
out
sahf
jl
loop
pop
stos
push
cs
pop
push
lcall
aam
ljmp
in
cli
sahf
push
ds
cmp
lods
xor
daa
stos
ja
dec
lcall
ficomps
add
mov
in
or
test
sahf
push
xor
or
movsl
mov
sarb
push
push
fsubr
pusha
imul
mov
fidivl
and
inc
pop
out
mov
sbb
hlt
cmp
cld
push
push
lret
add
fsts
adc
inc
cmp
sub
sub
test
add
mov
xor
mov
imul
outsl
nop
pusha
mul
cltd
imul
das
subb
xchg
test
stos
adc
lock
dec
out
shlb
adc
jg
sub
iret
mov
std
jno
mul
pop
mov
push
jmp
jmp
xor
xchg
cli
test
or
in
jmp
adc
in
mov
cmp
roll
push
stc
adc
aaa
push
xor
adcl
call
out
mov
and
mov
aaa
mov
mov
scas
pop
lods
out
xor
adc
je
pop
arpl
sarb
and
or
add
fldcw
dec
ret
inc
loop
cmpsb
sbb
inc
in
lahf
pop
lea
out
xor
dec
push
xor
call
aaa
cmpsl
in
xchg
xchg
in
xorl
aam
loop
jo
jae
imul
sub
ljmp
iret
add
fisubs
sbb
adc
cld
jecxz
cmpsl
mov
aas
in
stc
xchg
movsl
inc
sbb
aaa
lret
lock
cvtpi2ps
dec
das
dec
js
addr16
xchg
clc
lds
xor
hlt
bound
scas
or
notl
push
sub
lret
sub
pop
mov
adc
daa
insl
negl
push
daa
loope
movsl
js
sbb
inc
clc
sbb
inc
insl
xor
scas
mov
lahf
repnz
je
push
jecxz
rolb
decb
out
loope
and
mov
jb
sub
mov
xor
mov
jmp
mov
pop
push
xor
push
add
movsl
out
int
jne
xchg
pop
push
add
jne
mov
rcrl
cmp
xchg
push
aaa
stc
or
push
cmpsl
dec
imul
dec
sarb
fiaddl
and
scas
ss
adcl
dec
sub
aam
inc
divl
mov
ja
cmp
xorl
je
sbb
sbb
stos
jmp
rclb
pop
dec
cmp
inc
pop
and
loop
pusha
mov
gs
dec
movsl
lcall
mov
dec
cmc
xchg
int3
xchg
insl
push
cwtl
ja
mov
cmp
scas
push
inc
sub
inc
loope
xchg
std
filds
mov
jecxz
sub
mov
ret
daa
pop
mov
or
sti
mov
xchg
push
scas
ret
jb
and
lds
std
mov
xchg
push
xchg
jbe
incb
sub
out
popf
xor
pop
adc
sub
syscall
jmp
xor
xchg
cmp
xacquire
gs
and
std
out
scas
cs
icebp
in
out
repnz
adc
or
ljmp
imul
xorl
sub
imul
scas
ficoml
incb
mov
xor
inc
lahf
mov
adc
mov
mov
adc
clc
mov
push
int
mov
js
stos
or
shld
stc
shll
pop
and
mov
aad
fbld
popa
fs
pop
cmpsl
inc
xor
js
int
inc
sub
rorl
xorl
scas
sbb
shl
mov
jg
repz
jne
imul
repz
shrl
sbb
sub
mov
mov
and
test
cmpsb
xchg
or
pushf
push
jmp
mov
xor
rcrl
push
push
out
fdivrs
loop
test
mov
xchg
out
outsb
jno
mov
mov
sub
lods
sti
sbb
in
pop
add
fdivrl
xchg
push
and
pop
xchg
mov
test
out
mov
stc
or
cmc
xchg
sarb
jp
push
cmp
addr16
ja
xor
aas
sbb
pop
mov
push
mov
pop
daa
pop
pushf
dec
test
addr16
xor
mov
adc
call
popa
jnp
sbb
stos
lret
xchg
mov
call
test
pop
imul
sbb
ja
dec
pop
xchg
sbb
sbb
js
mov
addr16
pop
mov
sub
and
adc
aad
shrl
cmpb
mov
pop
sbb
sarl
sbb
inc
jle
push
hlt
push
pop
mov
pop
jno
inc
push
lock
sbbl
push
movsb
ret
imul
mov
mov
clc
idiv
pop
aam
push
pop
in
aam
ds
dec
xchg
xor
lahf
jp
dec
jo
test
call
inc
std
and
sbb
roll
fst
sbb
dec
and
push
xchg
in
xchg
sbb
test
repz
ret
add
push
jl
fs
enter
fnsave
jns
or
or
pop
outsl
ss
outsl
ss
pop
and
andl
cld
mov
jbe
fnstsw
ja
repnz
movsb
adc
ss
jge
and
xor
xor
sub
fcomps
mov
in
lods
pop
das
movsl
xor
call
clc
jbe
sbb
pop
inc
leave
orl
inc
in
aas
jmp
mov
mov
push
jns
sbb
enter
inc
int3
mov
repnz
jg
fsubl
sbb
insl
sbb
mov
nop
pop
cmpsb
pushf
mov
ljmp
sarw
mov
loopne
adc
push
aaa
std
cli
lret
cwtl
sahf
mov
and
jl
shll
sbb
repnz
out
shlb
pusha
push
cld
and
xchg
orb
imul
sbb
out
ja
jle
pop
stc
or
mov
push
out
cmpsl
mov
cmp
pop
sarl
jb
or
out
mov
xchg
or
cld
pushl
gs
add
stc
imul
push
fstp
adc
xor
fiadds
decl
and
pop
and
mov
sub
xchg
dec
rcrl
adc
mov
push
test
sbb
push
add
lret
jle
int
mov
add
pop
xchg
push
mov
leave
or
dec
and
cmp
dec
sti
mov
scas
push
cmpsl
sub
adc
push
mov
xlat
mov
out
push
push
shlb
push
shl
das
xor
subl
inc
aam
push
mov
loope
push
or
jg
pop
lea
hlt
movsl
xchg
xchg
sub
and
mov
mov
gs
pusha
or
xchg
rcrb
inc
iret
imul
clc
mov
and
sub
cmpb
lods
imul
idivb
ret
gs
test
cwtl
loop
shll
ficompl
scas
cmpsb
lret
pop
xor
push
ss
adc
sbb
daa
lock
outsl
je
sbb
xor
or
push
jmp
push
pushf
iret
inc
jno
xor
mov
sarl
dec
int
lock
jge
and
fs
std
push
inc
fists
dec
sbb
in
mov
cld
add
sub
sub
add
and
scas
iret
mov
sarl
outsl
inc
xlat
arpl
loopne
and
pop
les
pusha
push
add
mov
inc
sbb
or
xor
out
cmp
push
outsl
dec
and
ss
stos
cltd
and
add
leave
jbe
inc
pop
adc
out
add
fwait
cld
pop
dec
cwtl
inc
nop
mov
cmp
mov
mov
add
mov
lret
daa
and
and
xor
clc
cmpsl
sub
pusha
push
push
stos
mov
adc
jp
in
shlb
fisttps
data16
xchg
push
add
sbb
xchg
fyl2x
cmp
std
lods
mov
and
lods
dec
xchg
sbb
cmpsl
mov
pop
scas
and
mov
fsubrs
cmpsl
add
std
pop
pop
loopne
mov
loop
mov
push
sub
sub
or
add
pop
lea
jl
push
jp
in
lods
mov
cmc
ljmp
sub
loop
adc
mov
push
push
gs
add
jmp
aaa
add
sahf
inc
and
icebp
xor
int
repz
xor
push
lea
jmp
jne
out
sarl
dec
add
mov
sub
mov
in
mov
push
cmp
je
into
add
sub
xchg
cld
xor
repz
aam
shr
aas
pop
xor
icebp
sti
stos
roll
idivl
mov
sbb
in
cld
jb
and
push
loopne
adc
push
stos
inc
mov
and
mov
fucomi
les
inc
ret
gs
xlat
bound
inc
adc
lret
adc
insb
loopne
dec
push
shrb
mov
push
rcll
lds
xchg
jle
dec
fisttps
mov
mov
cmp
daa
insl
insb
add
mov
mov
sahf
dec
push
mov
push
clc
push
xorb
sbb
stos
cmc
push
addr16
mov
out
shll
mov
jb
lcall
cmp
mov
xchg
cwtl
lods
or
mov
jge
mov
cmp
adc
inc
jae
inc
lods
movsl
out
push
push
mov
dec
sub
xlat
push
rcr
into
adc
mov
jo
loopne
pop
fdivrl
popf
mov
shrl
aam
imul
mov
cld
ret
and
cmp
out
sahf
xchg
push
insl
sarl
arpl
add
aaa
out
sbb
push
jbe
sbb
outsl
jp
xchg
rolb
xchg
xor
xchg
push
daa
icebp
push
push
or
inc
pop
fisttpl
fistpll
xchg
dec
fwait
cmp
xchg
insl
andb
dec
stc
inc
or
mov
dec
daa
imul
pcmpeqb
and
outsl
add
dec
push
fdivr
jecxz
add
cltd
fists
push
cld
insl
sbb
imul
push
movsb
push
adc
xor
xor
insb
jmp
lcall
push
mov
das
ret
inc
pop
adc
popa
test
lret
repnz
push
rcrb
ds
pop
stos
mov
xchg
insb
xchg
pusha
inc
push
xor
call
dec
pop
rolb
xchg
cmp
call
loope
push
push
xchg
and
bound
sub
leave
cmp
sti
iret
test
dec
stos
test
dec
mov
lds
xlat
mov
jecxz
mov
xor
jae
std
dec
mov
test
inc
punpckhdq
arpl
outsl
imulb
xorw
stc
rcrb
mov
and
sbb
mov
dec
add
fs
mov
adc
sbb
push
std
sti
repz
scas
ja
cmp
fiadds
mov
daa
inc
mov
mov
test
rclb
push
in
pop
cmp
dec
lcall
xor
test
ss
cli
push
and
jge
push
ja
scas
cmp
test
xor
fsubr
dec
and
jl
ss
jne
mov
and
jecxz
in
rclb
sti
mov
pop
jo
mov
add
mov
add
dec
mov
jb
outsl
rep
in
adc
xchg
aaa
gs
jle
and
iret
or
fsts
insl
jns
popa
mov
test
fwait
inc
push
cwtl
ficompl
pop
adc
xchg
fsubl
imul
fildl
add
out
mov
in
lret
mov
add
outsb
sub
dec
push
push
mov
iret
pusha
mov
adc
mov
popa
lahf
adc
movsb
lods
fdivrp
inc
pop
add
int
js
pop
or
jmp
push
or
or
in
clc
jecxz
rclb
cwtl
dec
or
aas
mov
push
loop
aad
sub
adc
lahf
adc
sub
sarl
inc
pusha
stos
out
jmp
out
sub
mov
mov
mov
ret
and
mov
dec
add
mov
add
shll
add
push
fisubrs
fdivrs
sub
mov
xor
lock
push
ja
xchg
jno
fiaddl
xchg
popa
dec
or
cmp
dec
push
fbld
pop
cmp
mov
sbb
cmp
push
add
push
lret
negb
dec
pop
imul
scas
pop
inc
dec
loop
ja
mov
xchg
rcl
add
loop
dec
sbb
dec
rcl
test
inc
xchg
ret
jb
repz
jp
adc
sub
movsl
repz
mov
jge
xchg
rcrl
push
and
cmp
add
xchg
jmp
cmpsl
or
jno
loop
mov
ljmp
lret
testl
adc
push
cwtl
dec
cs
in
or
mov
jg
shrb
adc
arpl
lods
scas
ror
adc
cmp
cmp
inc
mov
std
xchg
xor
mov
sub
mov
xor
xor
mov
inc
xchg
pop
pop
cmp
movsb
cltd
jo
lods
arpl
pop
push
mulb
movsl
mov
out
adc
adc
aaa
or
mov
or
mov
imul
out
inc
out
sub
lea
or
mov
loope
es
sub
jo
aad
mov
cld
mov
mov
jmp
jmp
test
jb
fiadds
ljmp
push
ds
data16
push
xor
fs
imul
pop
sbb
adc
rcr
hlt
jae
comiss
sbb
sbb
xchg
jo
notb
mov
stos
sub
stos
mov
lea
sub
inc
std
orb
outsl
imul
in
pop
sbb
pushf
sbb
arpl
push
fdiv
and
bound
or
cmp
xor
sub
fmull
stos
push
andl
xchg
add
xchg
aaa
es
std
lcall
in
or
cltd
jns
test
jo
push
ljmp
mov
je
pusha
pop
gs
dec
lea
xchg
push
mov
pusha
in
cmp
xchg
loop
pmaddwd
jl
into
popf
inc
jg
add
and
adc
pop
or
sarl
xchg
adc
or
in
add
mov
in
lret
dec
cmp
inc
or
inc
movl
inc
mov
and
mov
sub
mov
mov
mov
mov
push
iret
ja
mov
and
xchg
sbb
sub
outsl
call
pusha
mov
ds
aaa
fdivp
push
push
push
shlb
ret
sub
pusha
mov
test
dec
cli
jno
pop
jb
xchg
cmp
mov
ljmp
les
jg
imul
lods
xor
icebp
scas
loop
jg
outsl
js
pop
ljmp
std
xor
xchg
dec
repnz
push
jg
negl
js
fdivrl
out
orl
dec
popf
out
popf
mov
cmp
pop
fistps
inc
mov
lret
mov
sub
les
mov
sub
pop
mov
dec
push
fcomps
lock
mov
jbe
sub
xor
mov
mov
das
mov
mov
inc
inc
rcrb
push
in
mov
xchg
mov
mov
ss
xchg
test
push
sub
push
push
pusha
mov
filds
adc
les
pop
mov
mov
xchg
inc
sbb
sub
fstps
aad
sbb
gs
cmp
int3
out
inc
dec
imul
shrb
and
lea
test
sub
pusha
inc
cmp
stos
xor
fwait
and
pop
inc
mov
movsl
add
fsubrl
jnp
cmpsb
pop
js
rclb
lret
mov
xchg
decb
int
test
sarb
pop
pop
sub
mov
negl
in
mov
adc
fstpl
and
loopne,pt
repnz
lods
or
and
sbb
jno
dec
xor
cmc
jge
jno
mov
xor
or
ret
lea
inc
mul
nop
xor
mov
pop
shll
sbb
sbb
sbb
movswl
mov
repnz
cs
clc
pop
cltd
xor
sub
or
adcb
lret
push
ljmp
stos
mov
fbstp
test
push
jecxz
cmp
fbstp
and
flds
sbb
aam
pop
inc
outsb
mov
sar
push
insb
push
sbb
sub
push
cli
and
repz
xor
mov
and
out
orb
loopne
mov
jecxz
inc
fprem1
jge
pop
xlat
dec
out
fsubr
cmp
pop
jb
inc
mov
paddb
inc
in
sbb
enter
sub
and
fiaddl
sti
fwait
lret
sbb
cld
mov
or
jb
loopne
andl
mov
sbb
mov
std
outsl
aad
fidivrs
pop
sbb
ret
or
ret
inc
lods
add
shr
and
lock
sahf
sbb
fimull
leave
pop
mov
les
fiaddl
jmp
out
or
popl
cltd
push
test
push
adc
fmull
pop
or
sbb
out
int3
or
xor
jge
sub
lret
fwait
adc
subl
mov
mov
scas
pop
pop
sub
sub
adcl
push
loope
adc
inc
mov
add
daa
test
adc
fnstenv
iret
outsb
jae
sbb
ds
add
sbb
shr
sahf
fiaddl
sarl
add
mov
cmpsl
enter
daa
insb
mov
or
les
mov
insl
je
sub
jp
and
adc
mov
das
mov
pusha
mov
pop
add
jle
aam
insb
add
xchg
dec
int3
and
jne
mov
and
lret
mov
popf
sbb
mov
aam
nop
mov
adc
lret
mov
jne
inc
pusha
xchg
gs
jle
jecxz
sbb
and
pop
mov
push
jmp
adc
xor
ja
jo
cmpsl
pop
int
or
les
stos
pop
pop
insl
mov
or
xchg
jno
inc
mov
sbb
sub
fdivr
dec
jge
mov
aad
fsubrl
pop
cli
iret
fcomi
dec
daa
jg
and
fxch
jbe
pop
add
mov
xchg
add
shrb
enter
test
mov
shrb
int
mov
or
xor
xor
pop
jns
sub
lcall
fwait
and
push
arpl
call
and
add
and
mov
aaa
in
push
jnp
iret
hlt
outsl
call
sahf
filds
testl
shll
add
in
cltd
mov
out
cmp
in
sub
incb
xor
mov
push
nop
dec
daa
adc
add
pop
mov
shrl
fisubl
xor
push
dec
xor
pop
xchg
dec
adc
fsubrp
sti
or
adc
adc
mov
popf
aaa
data16
or
out
dec
mov
cmp
dec
fs
sarl
fimuls
fwait
jo
mov
mov
jb
bound
adc
sub
test
push
xchg
push
fwait
mov
arpl
cmc
cwtl
aad
negl
cs
sbbb
out
or
mov
sti
je
pop
mov
pop
movsl
ja
fldenv
out
pop
pop
cli
insl
ficompl
inc
mov
mov
add
lods
int
in
rclb
inc
decl
xor
lds
cmpsb
je
fdivrl
out
dec
pop
push
sub
aaa
ss
test
pop
decl
stos
int
outsl
jmp
mov
test
cmpsb
jle
pop
xchg
sub
cld
fwait
data16
push
loope
test
aam
test
dec
mov
fs
jnp
cmpsl
lock
out
jmp
xlat
jb
cs
lock
inc
cmc
adcl
aam
fsubs
jno
es
push
xchg
cltd
sbb
bound
lahf
fs
mov
inc
in
cmpsl
sbbb
or
adc
sub
and
lock
jl
movsb
mov
divb
jmp
jmp
leave
xor
jecxz
hlt
lahf
and
adc
xor
sub
cld
xchg
push
jmp
lret
mov
or
clc
cmp
jbe
pop
jg
jns
fnstcw
xchg
xor
mov
mov
loopne
pusha
add
rol
pop
movsb
xor
insl
ja
add
mov
lock
vpmadcswd
fisubl
sub
xchg
cwtl
inc
mov
fiadds
scas
mov
jmp
int3
hlt
mov
mov
dec
or
jmp
decl
inc
ror
xchg
fwait
push
movl
sub
ja
xor
or
inc
jp
imul
xor
sub
ficoms
mov
pusha
push
sub
sub
mov
movsb
out
es
addl
ljmp
pop
mov
push
je
ret
adc
jb
push
inc
fcoml
inc
dec
xchg
jle
inc
sbb
stos
pop
mull
cmp
mov
insl
popa
or
pop
testl
jo
adcb
test
mov
dec
jmp
inc
dec
dec
xchg
incl
fiaddl
push
sbb
outsb
and
fdivl
pusha
mov
lret
in
sahf
cmpsb
adc
push
or
loopne
mov
cmp
mov
mov
sbb
lds
orb
xor
and
inc
sub
jno
pop
adc
xchg
jge
jno
fcomps
fnsave
jmp
xorl
and
stos
pop
popf
jnp
cmp
imul
or
xchg
cld
dec
xchg
pop
jg
iret
push
ds
xor
stos
xor
xchg
inc
mov
jmp
cld
std
dec
push
cmc
or
pusha
testb
fists
andl
dec
xor
xor
mov
cmp
add
add
insb
jns
outsl
pop
test
fldenv
sahf
xchg
arpl
mov
pop
rsqrtps
loop
shll
aas
sub
jns
lds
js
mov
push
mov
and
outsb
xchg
imul
cmp
scas
sub
or
movsb
shll
xor
pop
stos
pop
inc
xlat
jae
lods
addl
or
push
insb
lahf
mov
push
fdivs
cmpsl
aad
add
sub
cmp
mov
test
pop
bswap
mov
cwtl
popf
dec
mov
add
movsl
in
jno
sbb
sbb
sub
loop
mov
lock
adc
sti
cltd
mov
adc
aaa
shll
xor
lahf
dec
and
lcall
push
out
aad
ror
xchg
dec
movsb
scas
cli
hlt
push
jg
je
mull
mov
add
and
clc
xchg
adc
inc
pop
ss
outsb
mov
adc
int
hlt
jo
ja
or
daa
xor
sub
push
pop
and
jns
inc
cmp
xor
or
adc
divb
mov
fidivs
sub
es
sbb
adc
inc
push
dec
movsb
mov
jb
lahf
inc
pop
xor
xor
xrelease
stos
outsl
inc
sub
movsl
in
sub
fimull
pop
insb
ds
das
push
dec
cmc
fistps
test
shll
push
in
test
clc
ds
leavew
dec
or
es
mov
push
dec
outsb
push
sbb
jge
dec
push
pushf
or
je
cmp
jne
js
xchg
into
daa
nop
cltd
aaa
je
pop
lret
and
cmp
mov
icebp
and
movsl
arpl
imul
cmp
and
stos
fxch
ja
inc
xchg
dec
gs
mov
dec
inc
inc
loope
fwait
mov
add
xchg
cmpsl
and
push
push
fcoml
cmp
and
mov
mov
push
push
jmp
call
jl
cmpb
stos
std
mov
sub
shlb
nop
gs
aad
mov
pop
repnz
in
out
ljmp
or
jmp
push
sub
aas
fsubrs
insb
mov
pop
and
mov
xchg
xchg
iret
dec
loope
mov
ret
and
insb
jecxz
jp
mov
scas
adcb
repnz
push
dec
ret
fildl
imul
mov
hlt
imulb
into
add
mov
inc
daa
in
cmc
mov
mov
mov
clc
mov
or
icebp
pop
jne
cmp
rcrl
into
aam
dec
mov
jnp
clc
mov
sbb
adc
mov
dec
add
jne
xor
pop
daa
dec
int
out
in
decl
xchg
jge
out
out
sbbl
jns
xchg
fsubs
fiaddl
xchg
lock
xchg
add
mov
xchg
pop
mov
push
jle
jb
shll
fucomip
lods
std
sti
mov
adc
ljmp
js
bound
pop
cmc
ret
add
sarb
addl
push
pop
sahf
mov
adc
and
lahf
pop
fwait
sub
mov
lods
adc
iret
add
pop
or
lds
ds
pop
sbb
adc
lcall
js
sub
enter
pop
sbb
jle
mov
mov
or
test
pop
sbbl
push
xor
stos
pop
cmpsb
sub
push
popa
fs
bound
stos
cs
fnstsw
inc
cwtl
ja
sub
pop
fistl
pusha
add
in
in
stos
loopne
testl
cmp
in
in
inc
add
sbb
cmpl
bound
mov
jmp
mov
mov
out
bound
andb
popa
in
shll
jb
jae
inc
add
lcall
mov
sbb
out
mull
cmp
sub
aaa
sbb
push
xor
inc
lds
push
mov
addr16
or
add
sub
or
call
ljmp
and
fistl
inc
in
or
lock
aad
cmc
inc
fsts
or
lock
jns
insb
add
mov
mov
lret
repnz
enter
movl
sbb
pop
aam
sub
xor
xor
mov
arpl
and
sub
imul
fs
add
rcrb
jo
movsb
inc
and
jmp
outsl
aaa
ss
push
inc
cmpsl
push
aaa
in
mov
cli
pop
xchg
push
push
xor
icebp
and
jmp
out
gs
ret
sbb
push
dec
xchg
jno
rcll
bound
jg
jmp
push
addr16
pop
loop
xchg
psllq
push
mov
iret
mov
test
mov
xchg
pop
fidivs
outsb
mov
mov
or
cmp
cmp
aam
sbb
gs
lock
inc
aam
inc
jle
inc
es
pop
out
mov
out
xchg
std
mov
popl
xor
xor
fsts
inc
pusha
rclb
cwtl
xchg
cmp
ficoml
shlb
pop
pushf
stos
jmp
push
push
push
mov
mov
push
test
sub
or
lcall
lock
cmp
mov
add
scas
add
mov
push
or
fxch
dec
cmp
repnz
rol
mov
jmp
push
inc
fs
aas
push
jbe
aam
fsubs
test
hlt
clc
pushf
mov
push
data16
shll
imul
sub
leave
dec
shlb
jp
inc
fldt
les
add
or
lods
lahf
shl
cmp
hlt
inc
xchg
mul
pop
cmovns
call
imul
pop
push
jge
ret
or
jecxz
jns
aaa
cltd
pop
sub
xor
aas
xor
inc
mov
lock
dec
pop
sbb
mov
orb
mov
push
jns
jmp
mov
adc
or
xchg
push
and
ja
cmpsb
push
sbb
adc
dec
fisttps
popa
push
or
xchg
jecxz
xor
xchg
js
cmp
aas
int
jp
jmp
mov
cld
jp
pop
pop
bound
mov
cmpsb
cmp
repz
roll
movsb
stc
fstl
mov
pop
inc
leave
cwtl
fimull
loope
add
pmulhw
mov
push
mov
clc
out
outsb
cli
mov
fadds
lods
mov
cmpsl
cmp
ret
popf
and
push
rcl
inc
jb
cmp
es
mov
call
movsb
dec
lock
std
out
test
pop
mov
mov
je
test
mov
push
cmp
mov
jns
jecxz
cltd
lret
out
dec
add
cmpsl
sahf
inc
mov
dec
lret
aaa
and
fisttpl
negl
xchg
scas
rcrb
adc
dec
daa
negl
fisubrs
adc
dec
pop
xor
or
subb
imul
js
ret
fimull
cmp
or
loop
and
enter
xchg
in
mov
or
stos
jns
dec
fwait
xor
push
test
movsb
fcmovnb
stos
int3
test
xchg
ja
mov
mov
push
cld
and
loope
add
pop
mov
js
xchg
xor
mov
scas
sbb
int3
mov
popl
mov
bound
lds
call
mov
mov
lock
dec
and
pop
dec
xor
mov
xchg
ss
stc
mov
shlb
push
sub
sahf
jg
cmc
test
outsb
cltd
pusha
sbb
subl
cmpsb
adc
ss
insl
jo
dec
mov
jb
or
fcomps
sbb
ret
imul
xor
fcompl
inc
sbb
jp
jbe
int3
xor
sbb
shll
je
imul
es
push
inc
or
cmp
cs
xor
sbb
add
xchg
insl
repnz
in
lret
adc
inc
or
neg
add
mov
jns
pop
sub
loopne
mov
and
jp
ficoms
clc
lret
faddp
leave
jecxz
xchg
iret
frstor
adc
inc
notb
dec
scas
in
ret
jmp
inc
rolb
cld
push
pusha
fucom
lret
mov
adc
pusha
cli
adc
dec
xor
pop
int
loope
mov
inc
rcrl
jp
ret
outsb
pop
or
sbb
icebp
call
and
dec
ret
cmp
inc
insb
loopne
mov
adc
imulb
push
inc
pop
aaa
lock
jns
jae
ficoml
cli
nop
cmc
in
sbb
out
sbb
mov
jmp
cltd
sysenter
int3
je
jg
pusha
sub
cmpsl
mov
es
sub
scas
pop
pop
mov
js
and
popf
cli
data16
ljmp
dec
hlt
mov
jg
jle
lds
pop
mov
and
test
or
inc
and
sbb
fistpll
test
or
lods
and
and
insb
test
fstpt
push
mov
cmp
xchg
push
jo
jae
femms
mov
inc
jno
cmp
loop
adc
mov
xchg
cli
mov
dec
mov
mov
jp
or
sub
enter
mov
push
mov
fsubs
inc
mov
imul
iret
or
push
mov
arpl
daa
fwait
rolb
and
cmp
adc
dec
mov
and
sbbl
or
rcll
pop
pop
movsl
add
andl
xor
mov
dec
rolb
test
mov
enter
les
jb
inc
mov
xchg
jge
jnp
pop
mov
imul
loop
mov
mov
dec
xor
xchg
js
hlt
adc
jecxz
or
rolb
dec
xor
in
dec
dec
lea
popa
dec
xchg
sar
and
add
psllw
rcl
push
orb
movsl
mov
sahf
mov
pop
mov
mov
sbb
lods
inc
push
pushf
push
scas
pushf
gs
cmp
cmp
xor
test
xchg
jmp
cmc
xlat
cmc
fs
sub
loope
sbb
cmp
pop
loopne
fbstp
loop
xchg
xchg
bnd
imul
stos
loop
jecxz
aad
cmp
adc
inc
jo
lock
leave
sub
cmpsl
cmp
sub
pop
xor
mov
aas
fstpl
cmpl
push
xchg
popa
insb
dec
add
fimuls
fs
lahf
popf
fs
xor
sbb
cli
insl
inc
push
sub
sub
es
xor
jl
jbe
dec
sub
cmp
sbb
mov
mov
pusha
movsl
cmp
adc
outsb
add
ja
int3
gs
fidivl
inc
sbb
mov
fsubrl
fsubrs
repnz
rcl
push
cld
aaa
fcmove
in
int
xor
das
ret
mov
hlt
addb
pop
push
add
sahf
and
mov
add
leave
outsb
jnp
jp
jl
arpl
ljmp
stos
push
or
test
mov
out
insb
or
push
nop
js
iret
mov
jns
mov
mov
mov
fldenv
out
and
out
and
in
mov
pop
test
or
inc
lods
es
insl
ljmp
sub
pushf
inc
pop
push
sbb
jp
mov
push
leave
push
mov
xchg
int3
adc
xchg
push
gs
shlb
dec
jne
rorb
cmpsl
loope
adc
xorb
mov
into
ds
out
or
mov
jmp
xchg
push
mov
or
aad
cld
shll
mov
xor
mov
js
cmp
cmp
add
pushf
mov
mov
test
or
rorb
in
xchg
jge
rep
dec
das
cmp
lods
lea
out
cmp
push
dec
sub
adc
into
pop
push
cli
fcoml
sub
cmp
add
je
add
nop
inc
push
adc
cmp
sub
and
inc
call
aam
push
push
pop
fistl
inc
dec
lods
push
xor
pop
idiv
mov
sub
dec
lahf
aas
pop
es
leave
cmp
in
out
enter
test
addb
xchg
cwtl
and
lahf
dec
out
xchg
xorl
push
or
push
sub
jo
sbb
jnp
add
decl
sub
pusha
add
les
dec
loope
adc
sbb
jle
mov
inc
jmp
xorb
fsubrp
adc
sub
sbb
inc
orl
adc
and
movsl
sbb
in
or
mov
aas
push
mov
shll
xchg
mov
daa
mov
mov
in
dec
jnp
popa
mov
mov
dec
xor
mov
pop
cmp
or
push
shlb
mov
or
test
push
clc
xlat
or
iret
jmp
iret
pop
mov
sti
cli
dec
fwait
sbb
inc
adc
lret
sub
cmp
push
popa
xchg
pop
cmpsl
cmp
inc
hlt
aaa
in
jle
xchg
mov
movsb
add
sub
std
aad
test
push
jle
out
sbb
insl
adc
mov
dec
jecxz
test
mov
outsl
popf
push
popf
cld
mov
xor
adc
xchg
dec
popa
xchg
in
mov
enter
lea
pop
and
lods
shlb
cmpsl
lock
stos
sub
jae
xchg
lret
sahf
mov
ljmp
xchg
and
cs
daa
rcrl
or
xor
xchg
and
jb
xor
jb
rcrl
hlt
incl
or
mov
mov
inc
push
imul
call
test
int
xchg
popf
daa
test
lcall
cli
das
daa
lods
mov
cmp
or
pop
pop
test
cs
jmp
dec
lret
sbb
xchg
stos
push
push
sub
and
inc
cmp
xor
stos
rorl
fistl
cmp
test
cli
adc
repnz
push
jns
lds
imul
adc
out
mov
or
jle
cmc
inc
pushf
sub
mov
out
push
jae
sbb
inc
mov
lret
cmpb
cwtl
jp
push
dec
pop
into
flds
jmp
cmc
jp
jns
and
push
out
add
pop
and
adc
mov
scas
inc
mov
inc
jb
inc
nop
mov
cmp
ja
rcl
mov
out
aas
dec
and
sbb
shrb
pop
in
into
cs
mov
cmp
stos
dec
inc
adc
mov
or
aad
int
and
outsl
test
cmp
iret
test
outsl
dec
fcoms
dec
or
addr16
cs
push
and
lds
adc
fucomp
jne
aaa
paddd
jle
sbb
pop
sub
add
mov
jnp
insb
ss
lods
push
and
pop
out
cmp
fstpl
xchg
repnz
xor
in
or
sub
ja
lock
cmp
mov
add
mov
cwtl
test
cmp
sti
sbb
and
mov
fnstcw
and
jle
dec
mov
jno
mov
dec
fwait
test
adc
ror
mov
movsb
pop
mov
and
pop
pop
pop
shl
in
stos
push
fcoml
stos
ljmp
jae
xchg
scas
pop
lret
push
cmp
pop
sbb
es
adc
push
ss
sbb
mov
call
add
pop
dec
mov
int
mov
into
jl
iret
mov
inc
test
push
add
inc
in
xor
adcl
stos
mov
arpl
test
jle
jmp
stc
dec
jb
jns
out
cli
cmp
mov
test
pop
pusha
push
sbb
push
xchg
test
hlt
mov
repz
cmpsb
out
cmp
cmp
fcoml
sbb
insb
pop
push
add
xor
aas
sti
pushf
sub
fimuls
aaa
xchg
adc
cltd
and
clc
in
jmp
or
pop
xor
xor
fnstsw
sarl
or
lret
sub
adc
dec
outsl
test
xor
pop
xor
rol
hlt
lret
out
inc
shlb
sub
push
nop
xor
mov
jmp
cmc
sub
or
pop
arpl
cltd
addr16
cmp
je
jns
int3
add
hlt
lcall
in
fldcw
ljmp
aaa
mov
mov
cmp
jno
int
cmpb
mov
leave
imull
push
mov
push
lahf
adc
daa
sar
dec
jge
add
cmpsl
pop
aas
push
sub
xchg
xchg
push
call
push
fnstcw
xlat
fistps
loope
cs
movsb
test
or
mov
arpl
push
out
lret
pop
lods
andl
push
lods
mov
xchg
mov
hlt
shufps
mov
jns
dec
mov
ja
sub
cmp
lds
sbb
jb
or
das
and
dec
ja
mov
push
dec
es
adc
cld
jnp
cli
and
fyl2xp1
adc
add
add
adc
inc
into
push
mov
jb
movsb
lahf
add
pop
xor
and
fistpl
push
and
addb
lahf
mov
test
aaa
sbb
adc
xor
jmp
mov
popf
mov
mov
jns
icebp
nop
jno
push
xor
movsl
mov
stos
inc
xorl
imul
jp
xchg
jmp
lock
mov
jo
cld
xchg
fwait
out
out
cs
pop
sbb
js
imul
inc
add
dec
ror
jnp
lock
test
push
lods
mov
xor
or
mov
jge
inc
sbb
jp
cmpsl
das
cmp
sub
out
dec
popa
push
dec
mov
pop
xchg
mov
movsb
push
mov
cmp
add
clc
cmpsl
xlat
add
repnz
jno
mov
in
cmp
jo
or
mov
imul
jl
lcall
or
cmp
ds
lret
les
cmc
mov
pop
test
lock
xchg
pop
mov
jmp
popf
pop
sbbl
add
push
mov
sbb
repz
das
inc
sbb
call
mov
idiv
jne
mov
das
stos
add
sub
mov
cmp
sub
test
xchg
pop
push
je
or
imul
push
push
test
dec
push
xlat
popl
lods
mov
aas
insl
xchg
rorb
cmpsb
xchg
lret
add
popf
jno
pop
and
xor
mov
push
pop
in
mov
inc
dec
adc
sahf
out
lahf
out
mov
stc
popf
cmp
xchg
cmp
cltd
mov
cmp
inc
scas
cmpsl
stc
outsb
popa
cmp
push
sbb
lcall
mov
xchg
scas
adc
rorl
dec
jmp
mov
inc
fsubs
xchg
and
and
jnp
enter
shll
sbb
orl
mov
or
push
mov
xor
sbb
movsb
add
rcrb
aaa
xchg
loopne
incl
or
pusha
je
adc
cwtl
sbb
mov
popa
jecxz
movsl
mov
pop
jmp
sbb
movsl
sbb
adc
mov
out
stos
lahf
inc
test
testl
lods
push
test
xchg
mov
mov
xchg
aaa
scas
jle
push
and
sarb
push
fsubr
jnp
cmp
fmull
push
add
fucomp
mov
pop
xchg
js
sbb
test
dec
cmp
add
insl
sbb
and
test
shlb
stos
pop
jae
call
and
add
arpl
dec
xor
mov
sbbl
icebp
push
mov
mov
adc
xchg
sar
dec
dec
rcl
pop
ljmp
mull
sub
xchg
mov
push
or
mov
test
mov
pop
ret
fnstsw
subl
insb
sbb
mov
hlt
mov
adc
push
or
ret
sub
stos
pop
scas
into
push
xchg
pop
insb
js
jge
std
push
mov
iret
aaa
xor
pop
jno
sarb
lds
loopne
fimuls
das
xorl
dec
movsb
fstps
movsl
fidivs
and
loopne
fldenv
in
repnz
xor
jns
lea
pop
push
bound
in
mov
jno
xchg
imul
inc
adcb
pusha
add
loope
shlb
mov
inc
sbb
jecxz
jle
push
arpl
xchg
es
pop
dec
ss
cli
xor
test
jge
lcall
mov
fldt
sub
fs
inc
mov
cmpsl
aam
mov
mov
jo
push
mov
cmc
ss
mov
cwtl
lods
inc
test
inc
push
xchg
repz
mov
sti
fistl
sub
mov
mov
decb
add
xchg
js
icebp
pop
sub
inc
mov
rorl
xlat
jne
and
clc
xor
push
shrl
lret
xor
jecxz
mov
mov
add
adc
imul
adc
mov
pop
mov
leave
mov
leave
push
mov
rorl
icebp
sub
ficompl
out
int
xchg
or
xchg
insb
add
add
inc
adc
mov
push
fmull
pop
jge
cmpb
jge
and
xchg
aad
insb
pop
cmpsb
xchg
ja
je
pop
adc
mov
push
lcall
cmp
mov
xchg
roll
fimuls
outsb
repnz
xchg
imul
imul
pop
into
arpl
nop
rolb
cmpsb
push
repz
out
xor
and
cltd
cmp
mov
pop
mov
sub
repz
jbe
lds
lcall
std
aas
or
rclb
push
mov
adc
dec
lcall
testl
add
test
mov
cmp
pop
stc
jecxz
loop
icebp
mov
mov
popf
push
cmpsb
enter
xlat
add
mov
pop
inc
or
xchg
sahf
adc
lods
mov
mov
insb
cld
mov
push
push
loope
sub
jns
loope
mov
dec
and
mov
inc
xor
fucom
stos
popf
xor
add
rcr
je
push
aad
cmpb
push
lods
sti
loope
pop
push
mov
scas
ds
mov
or
out
stos
icebp
push
mov
cmp
inc
aad
shrl
jge
mov
insl
push
push
shlb
adc
idivl
pop
mov
test
adc
cmpsb
cmp
gs
cld
xchg
out
xchg
inc
jno
adc
rol
inc
fdivr
dec
mov
pop
rcr
daa
stos
and
inc
outsb
mov
or
jle
std
arpl
mov
aam
icebp
fadd
rolb
in
push
mov
xor
mov
xchg
xor
fisttpll
call
fimull
cmp
sub
fidivrl
fs
lods
and
mov
sbb
dec
cld
call
push
arpl
jnp
sahf
andb
or
int3
test
xchg
dec
ror
fs
sub
sbb
and
xor
jl
or
adc
test
adc
mov
jo
ss
aas
push
dec
mov
imul
and
out
xchg
stc
fwait
test
shll
inc
ret
dec
push
faddp
cwtl
xor
stos
sub
imul
aas
int3
inc
stos
mov
jb
insb
jne
std
lods
mov
and
iret
dec
push
hlt
mov
mov
xor
in
mov
stc
xor
popa
push
xorb
mov
push
movl
mov
mov
mov
push
ljmp
push
test
pushf
jae
fmul
lret
pushf
popl
cmp
imul
sahf
dec
aaa
mov
loopne
mov
popf
jecxz
test
das
loope
scas
cmp
mov
and
pop
bound
xorl
mov
dec
jno
test
nop
shr
imul
mov
jbe
jmp
popf
push
mov
pop
leave
jecxz
add
add
jae
in
pop
cmpb
add
stos
rcrl
sub
pop
lret
cmp
pop
pop
sbb
mov
dec
sub
sub
insb
dec
arpl
lods
sbb
sbb
mov
jmp
dec
pushf
cmp
or
cli
fwait
adc
fmul
sbb
jns
aas
lods
pop
daa
push
push
fwait
inc
lock
icebp
cltd
dec
mov
mov
pop
or
xchg
or
sarl
arpl
dec
inc
jecxz
inc
add
xchg
dec
gs
cs
inc
and
pop
imul
inc
xchg
mov
test
adc
and
add
jae
test
xchg
cmc
mov
mov
mov
mov
mov
addb
fwait
hlt
mov
and
into
or
mov
insl
xor
xchg
ljmp
and
mov
stc
dec
out
enter
loop
dec
inc
dec
repz
lock
cmp
and
lret
pop
push
and
mov
xchg
test
inc
lds
cltd
sbb
push
fistl
std
data16
sub
je
push
or
add
xchg
pushl
xchg
xchg
push
jp
add
ret
stos
pop
push
ljmp
mov
xor
std
cmp
ficomps
inc
inc
bound
fiaddl
mov
adc
add
loope
movsb
fcomps
adc
popf
xor
cmp
pop
fldenv
sbb
jmp
lods
adc
cwtl
lret
push
das
or
sbb
pop
aad
das
xor
pop
testl
aas
test
fdivs
xchg
into
imul
push
mov
int
movsl
fdivrl
sarl
mov
and
inc
iret
cwtl
test
out
rclb
pop
fisttpll
filds
gs
mov
mov
stc
icebp
pushl
mov
push
sbb
xchg
stos
mov
xchg
std
mov
les
sbb
movsl
repnz
es
pop
jmp
pushf
or
mov
lods
stos
mov
mov
mov
frstor
aas
sbb
jbe
xor
mov
pop
mov
mov
fcomip
mov
pop
pop
fisubrl
mov
cmp
notb
dec
icebp
cmpsb
fisubl
outsl
insb
test
pop
lds
pop
adc
clc
push
adc
idivb
sub
fs
mov
cmp
icebp
or
adc
xchg
inc
repnz
and
inc
int3
mov
cs
mov
sub
out
xchg
ljmp
test
aad
lds
add
adc
dec
in
daa
sub
iret
sbb
mov
cmpsb
stos
mov
jns
cld
icebp
mov
popa
fs
add
je
or
adc
cmp
adc
push
xor
fidivrs
mulb
adc
in
movsb
ret
sbb
into
popw
mov
scas
scas
mov
mov
test
ret
cltd
dec
mov
cmp
jo
or
xor
insl
mov
out
push
cltd
in
xlat
shl
jp
pop
mov
imul
cmc
cmp
xchg
js
pusha
aaa
xchg
pop
push
pop
jno
jo
loopne
jmp
adc
pusha
in
mov
add
ret
lods
push
sbb
shlb
mov
clc
jmp
add
scas
push
je
inc
inc
or
arpl
cmp
push
test
push
addr16
scas
jmp
out
jg
cmpsl
cld
stos
push
out
hlt
pop
lret
xchg
pop
and
insb
pop
xchg
nop
out
out
xor
sub
clc
mov
aam
out
jae
push
add
imul
aam
dec
aas
sub
loop
or
sti
pop
add
add
lahf
xchg
arpl
in
or
cltd
mov
pop
mov
dec
mov
dec
xlat
dec
enter
mov
sbb
xor
lods
loope
pop
and
out
push
cmp
cmpsl
lahf
or
cwtl
inc
xchg
mov
mov
inc
cmpsb
rcrl
push
add
and
clc
xor
xchg
sti
inc
mov
inc
sub
adc
dec
sub
push
sbb
cmc
and
outsb
push
and
dec
ljmp
sub
add
ja,pt
and
pop
mov
mov
ret
out
cmpsb
mov
push
fmuls
xchg
sbb
fnstcw
pop
popf
mov
dec
sbb
ss
push
int
fwait
shlb
xlat
fnstenv
insl
mov
xor
push
loop
jp
movsl
mov
cld
lods
or
pop
xlat
inc
lahf
loope
add
mov
sbb
pop
ds
xchg
dec
out
cmpsl
xor
test
ret
sub
cmp
rol
push
sub
or
ret
inc
and
xchg
cwtl
add
sub
mov
cli
stc
add
test
xchg
inc
xchg
cltd
test
xor
ficoml
ss
loop
lock
mov
testb
sar
test
add
lret
in
sub
push
lods
cmpsl
xor
out
inc
pop
jne
inc
std
xlat
mov
or
mov
mov
mov
es
pop
scas
push
rorb
std
jb
rcr
sti
mov
mov
sub
outsl
pop
movsl
xor
fstl
xchg
repnz
xor
adc
inc
mov
sti
icebp
jb
jg
js
icebp
mov
mov
lods
lahf
dec
dec
sub
lods
fisubl
dec
adc
ss
pop
sub
loope
mov
sbb
sti
scas
pop
xlat
and
or
jb
and
fwait
stc
cmpsb
out
sarb
ljmp
cs
jae
dec
pop
enter
add
mov
into
xor
movsl
jne
push
sar
fmull
paddd
xor
scas
dec
dec
push
push
stos
xor
xor
mov
enter
xlat
sbb
out
jo
mov
shlb
mov
inc
out
cmpsb
pop
mov
mov
mov
test
inc
jne
jle
aam
bound
lods
lds
mov
push
cmpsb
mov
xchg
mov
jecxz
dec
outsb
mov
out
dec
rorb
enter
mov
and
fadds
and
sarl
scas
mov
cmpl
fdivl
jl
loopne
and
inc
xor
adc
xchg
fisttps
cmp
xor
loop
dec
pushf
lahf
push
cmpsb
sbb
mov
jbe
adc
popa
xor
xlat
cld
sbb
mov
sbb
mov
xor
dec
push
xlat
add
and
inc
ret
fwait
sahf
lods
mov
sbb
mov
push
mov
push
sbb
push
xor
cwtl
mov
adc
mov
into
xchg
out
outsl
lods
jnp
xor
jnp
lcall
das
jnp
pop
std
aam
mov
adc
movsl
mov
dec
outsl
test
insb
cmp
sahf
lcall
out
xchg
jno
sbb
jns
js
and
dec
icebp
movsb
ds
inc
or
xchg
mov
inc
jo
imul
xor
sub
jne
push
sub
lds
loope
into
sub
in
rorb
jne
imul
cmpsb
cmp
leave
jecxz
push
daa
scas
imul
shll
loop
dec
cmc
pop
ljmp
imul
andb
das
push
dec
jecxz
fcmove
dec
pop
fidivrl
loope
xlat
pop
jae
inc
sbb
es
test
roll
mov
mov
test
sub
mov
outsb
mov
insl
mov
xchg
rcr
bound
test
push
dec
je
cli
mov
adc
mov
sarl
out
and
lods
arpl
xchg
mov
pop
jle
mov
rorb
pop
shl
clc
mov
mov
mov
cmp
repz
lods
cmp
dec
test
fisubrs
pop
push
push
mov
pop
stos
fcmovnu
xchg
sub
mov
ret
and
inc
out
xor
cltd
mov
test
dec
into
mov
jnp
adc
sub
pop
cmp
inc
cmpsl
push
jp
mov
repnz
push
lods
cmp
lods
imul
enter
into
cmp
mov
adc
xchg
xor
adc
xor
lods
or
fwait
jno
ficomps
mov
jo
and
sti
sarl
sbb
jecxz
repz
mov
pop
outsl
mov
cmp
in
lcall
icebp
xchg
or
lods
mov
xchg
lods
mov
int
sub
xor
in
push
sti
jmp
jl,pn
push
dec
mov
add
loopne
mov
scas
insb
pop
adc
jge
jo
int3
push
mov
lret
jmp
arpl
mov
cld
push
test
fs
shll
aam
xor
mov
imul
mov
and
or
push
pop
jns
out
in
pop
icebp
scas
fwait
mov
mov
jecxz
cmp
leave
or
mov
add
mov
ret
mov
iret
xchg
into
xchg
daa
dec
mov
sahf
mov
insl
mov
jbe
mov
test
stos
cld
and
lea
and
mov
cmp
movsl
ret
ret
dec
sub
les
mov
movsb
add
add
lds
ljmp
push
ret
mov
clc
mov
jmp
xchg
pusha
cmpsb
sub
cwtl
rcr
jne
xchg
iret
arpl
test
dec
cld
sbb
aam
insb
jg
in
int
push
dec
in
test
clc
stos
shl
insl
inc
punpckhwd
pop
into
lock
ljmp
jb
xchg
push
mov
icebp
insb
push
pop
into
out
mov
dec
xlat
dec
pop
ss
fldl
popf
rcrl
mov
and
jnp
jo
sub
stos
mov
mov
push
sti
mov
into
fprem1
and
ds
sti
stos
fidivl
aaa
or
dec
int3
mov
jns
jnp
xchg
mov
jp
and
clc
movsb
dec
ret
outsl
icebp
push
lret
jge
pop
ret
call
mov
mov
push
xchg
in
xor
cmp
shll
es
push
mov
sbb
adc
or
mov
mov
mov
lahf
movsl
push
mov
mov
std
sahf
cmpsl
out
push
adc
test
sti
push
lock
lds
jo
mov
movsb
mov
mov
push
jb
pop
fmull
xor
fnsave
fucomip
mov
xor
adc
jb
pop
pop
sub
add
xchg
fdivs
mov
psraw
pusha
dec
sub
sbbl
cs
mov
sub
mov
mov
enter
inc
and
fbld
insb
mov
adc
mov
cmp
aaa
testw
pop
jmp
jle
mov
add
lahf
xchg
pop
test
xchg
and
push
mov
xchg
sub
cmp
shl
or
cmc
cld
lcall
fs
xchg
cli
scas
pop
addr16
outsb
push
ljmp
mov
inc
mov
xchg
popf
xchg
movsb
xchg
or
int
daa
sub
out
jge
and
ljmp
push
nop
pusha
jmp
das
shll
add
or
mov
shld
loopne
mov
mov
test
lret
pushf
adc
cmpsb
ss
in
ror
fwait
mov
bnd
adc
add
dec
or
mov
fwait
outsb
fs
sub
or
iret
xor
sbb
jle
adc
aaa
shl
popa
dec
lods
xchg
in
sbb
pop
mov
xchg
pushf
ret
movsl
loope
or
or
sbb
mov
in
pop
or
je
mov
mov
imull
adc
fstpl
movsl
lcall
or
es
push
xchg
movsb
jnp
push
add
jmp
or
inc
addb
adc
stos
push
and
cmpsl
pop
into
insl
xchg
mov
jno
cmp
push
push
inc
add
pop
jo
rcll
sbb
xchg
mov
es
jbe
lret
mov
fsubl
leave
loope
lret
lcall
xor
in
lahf
cltd
hlt
push
xor
jo
push
scas
sbb
cmp
in
dec
movsb
mulb
sbb
push
fucomip
call
mov
mov
pusha
push
movb
jl
rcrb
pop
popf
lds
sbb
or
push
push
mov
insb
lahf
lods
fstpt
add
mov
dec
pop
rorb
sbb
andl
mov
sarl
daa
mov
aad
in
imul
mov
xor
sarb
div
jo
sub
mov
out
sub
sbb
hlt
inc
outsb
mov
pop
pop
add
out
out
jl
push
ret
ficoml
jne
incl
ficoml
ret
cmp
sub
shlb
sbbb
pop
cs
das
sub
dec
stos
cmp
test
jge
test
mov
pop
gs
adc
jmp
push
aam
movsb
adc
or
sbb
rcll
mov
icebp
mull
mov
mov
mov
cltd
loopne
insl
xor
or
out
cli
mov
arpl
pop
pop
mov
xor
cmpsl
jns
cmpb
dec
sub
fbstp
push
inc
aad
enter
xchg
pop
mov
push
push
or
sbb
xchg
les
mov
ja
mov
stc
add
cmp
adc
adc
sti
mov
cmpsl
push
xorl
add
call
jmp
push
mov
loopw
std
cld
mov
push
outsb
jle
imul
sbb
and
inc
inc
cwtl
push
ss
rol
lret
int
stos
jb
dec
dec
jo
sbbl
aam
fldenv
dec
xor
and
inc
mov
pop
int
repnz
loope
ret
sahf
out
pop
inc
pop
push
test
arpl
push
outsb
sub
fisubrl
mov
ret
orb
push
cmpl
jp
mov
lock
nop
orl
outsb
hlt
lods
mov
adc
and
lcall
insl
push
mov
arpl
dec
xchg
loop
jecxz
cmp
mov
cltd
push
sar
jno
dec
jge
jecxz
loopne
test
push
xchg
adc
mov
jne
shll
fisubrs
rcl
jl
dec
stos
mov
add
aad
xor
test
stos
or
test
repnz
lret
xor
mov
mov
cmp
xor
test
repnz
mov
pop
xchg
in
inc
sbb
add
imul
push
scas
push
cmpsl
fwait
rcrb
ret
frstor
mov
gs
aad
je
mov
xchg
inc
jl
das
jp
lcall
scas
ljmp
insb
movsl
mov
imul
jle
push
inc
push
inc
rorl
jmp
sub
loope
push
addr16
mov
sbb
lods
cmpsl
stos
xor
ss
leave
lahf
test
faddl
adcb
push
bound
sahf
jl
pop
mov
adc
sbb
jns
mov
jle
cs
mov
push
cmp
cmp
jmp
scas
sbb
fisttps
fwait
push
jg
stos
loop
arpl
dec
and
pop
repz
ret
sbb
xchg
sbb
adc
add
xor
mov
loop
nop
sbb
leave
out
in
nop
test
daa
push
mov
data16
and
scas
jo
inc
and
mov
es
pop
adc
test
or
cmpsb
out
xchg
dec
es
jg
push
arpl
in
add
push
xchg
sub
dec
addb
sbb
aaa
out
loope
and
mov
dec
add
add
and
imul
xchg
mov
sub
or
dec
lods
inc
sbb
mov
mov
add
xor
mov
mov
dec
ja
push
sub
rolb
imulb
cs
jmp
scas
push
fs
jbe
cmc
xchg
push
jb
lods
cmp
scas
xchg
gs
cmp
cmp
je
arpl
je
dec
or
je
fnsave
lods
sahf
jno
lret
xchg
fstpl
daa
stc
ss
push
cmp
add
gs
dec
fisubl
mov
les
ret
jnp
rclb
lret
in
pop
add
mov
pop
push
fcompl
xchg
repz
lcall
ljmp
xor
push
jo
test
aad
pop
in
popf
mov
in
inc
sbb
out
rclb
loopne
fucomp
mov
push
aas
push
jno
adc
mov
je
adc
pop
push
inc
mov
mov
les
lock
insb
jp
andl
jle
outsl
dec
loope
fisubrl
sbb
mov
shrb
shrb
roll
test
ja
clc
xchg
jg
fstps
cmp
lret
mov
mov
test
mov
jnp
or
fcmovnbe
add
inc
sti
pusha
cli
arpl
sub
lods
sub
fisttps
or
xor
int3
mov
in
in
mov
add
jb
shll
cmp
sub
insl
pop
pop
stc
xor
scas
shrl
loopne
add
addr16
jne
pop
xchg
push
bnd
inc
adc
dec
or
flds
mov
lock
ret
fidivs
adc
ljmpw
mov
inc
push
inc
cmp
addl
mov
jo
jp
xorl
scas
in
pushf
mov
hlt
add
cwtl
imul
loop
xchg
add
adc
pop
xchg
and
icebp
pusha
xchg
pop
out
mov
cmp
clc
and
pop
rorb
lahf
iret
mov
mov
andb
icebp
cmp
mov
lret
das
mov
mov
in
mov
add
mov
iret
mov
sti
pushf
and
adc
shll
mov
jno
loopne
lret
adc
nop
jle
add
mov
cmpb
sub
fsub
add
and
and
push
daa
cmp
push
sbb
and
pop
dec
sub
hlt
roll
inc
xor
mov
push
mov
scas
or
cmpsb
pop
and
lock
or
loop
xlat
sub
sbb
mov
mov
inc
in
ffreep
sub
mov
data16
add
outsb
jne
shrl
mov
push
adc
std
fdivrl
pop
faddl
inc
dec
icebp
xchg
adc
mov
adc
mov
xor
push
sbb
nop
lock
mov
sbb
imul
push
enter
xchg
inc
aam
xchg
xchg
sub
pushf
inc
outsb
mov
adc
mov
sub
mov
or
sub
inc
fldenv
xor
cltd
xor
in
stos
sub
mov
adc
in
mov
and
sbb
sbb
out
cmp
bswap
add
lcall
xlat
imulb
and
mov
std
fbld
pushf
rcll
sub
test
lahf
xor
iret
cmpsb
dec
pop
push
push
in
and
dec
addb
adc
mov
movsb
mov
cmpb
xchg
out
test
mov
sbb
test
mov
mov
scas
mov
pop
pop
scas
xchg
jo
popf
int
sbb
xor
out
movsl
mov
pop
sub
xor
aad
pusha
cwtl
inc
in
fdivs
xchg
sbb
lds
xchg
cmp
mov
mov
fimull
jbe
jne
ljmp
int3
loopne
jb
sarl
pop
mov
insb
out
jmp
int3
test
int3
mov
fcomi
loopne
cmpsb
mov
outsb
ret
bndldx
mov
mov
fbstp
xchg
xchg
mov
adc
jle
pusha
pop
out
and
dec
les
ret
and
fwait
fwait
je
pop
ja
rorb
data16
cmp
pop
loop
and
jl
jp
mov
es
sarl
std
sub
lock
adc
push
or
and
pop
mov
mov
js
cwtl
ja
sbbl
push
xchg
xor
xorb
add
leave
push
pushf
aad
je
dec
mov
push
scas
enter
mov
pop
mov
push
xor
inc
inc
cld
bound
cmp
push
fidivrs
mov
aas
popf
aaa
add
es
cmp
jb
or
mov
pop
data16
cli
adc
xor
repz
push
or
enter
ljmp
subl
rcll
or
mov
lds
cld
mov
mov
iret
or
out
int3
and
push
add
fmul
pop
out
xchg
aas
ret
mov
push
mov
insb
arpl
fsubs
aad
dec
push
cld
mov
ret
cmpsb
aam
cmpsl
jp
mov
aas
dec
stos
cltd
dec
mov
stc
inc
jbe
sbbb
pushf
xchg
inc
cld
fwait
xchg
push
jecxz
inc
jbe
inc
jo
out
sub
sbb
and
or
and
push
add
imul
jmp
stos
xchg
cmpsl
rorl
dec
fcomps
dec
jecxz
andl
sti
mov
push
or
mov
pushf
into
mov
daa
nop
mov
in
hlt
aam
lods
sub
lret
cmp
jnp
sti
mov
lret
adcb
or
push
dec
test
stc
pop
inc
mov
jmp
rdtsc
push
mov
dec
in
inc
jo
enter
xor
int
roll
movsb
adc
enter
lock
jno
into
inc
lods
nop
lret
or
cwtl
pushf
stos
dec
mov
andl
in
inc
xchg
adc
or
jb
and
push
repnz
push
pop
fldenv
in
ljmp
mov
je
testl
add
add
sar
mov
cmp
or
lods
pop
test
cmp
mov
ret
test
cmp
std
mov
xchg
xor
stc
xchg
loope
popa
push
push
in
mov
mov
test
test
lret
inc
shll
lds
add
popa
fimuls
xor
jb,pn
dec
add
daa
fdivrs
loop
mov
lcall
aam
cmpsb
sub
pop
mov
mov
xor
mov
mov
insb
and
test
pop
bound
rorl
xor
sbb
pop
mull
cmp
mov
movsl
pop
loope
push
or
add
xlat
dec
pop
rcll
enter
lds
xor
into
mov
dec
iret
sbb
pop
pop
mov
in
cmp
cltd
jl
jl
out
jnp
jl
pop
dec
cmp
outsl
mov
test
ret
outsl
sub
icebp
push
fbld
dec
inc
cs
dec
xchg
test
mov
test
sub
push
std
dec
xchg
add
cvtps2pi
js
pushf
outsl
lods
sub
pop
add
iret
fcmovb
pop
push
iret
fldcw
cwtl
push
add
mov
fucom
sbb
and
or
dec
mov
push
xor
lods
jle
sahf
jbe
lds
insb
mov
pop
fmull
push
enter
push
adcl
test
jle
insl
xor
cmp
insl
lret
and
lock
inc
lods
cwtl
cwtl
leave
xor
xor
rep
fstpl
addr16
rolb
dec
sub
adc
das
movsb
push
mov
push
add
cmp
dec
jge
pop
fdivrl
adcb
mov
repz
rcll
stc
mov
jecxz
adc
lret
lahf
loopne
in
inc
pop
dec
ljmp
mov
insl
in
xchg
or
mov
pop
push
sbb
xchg
jmp
xchg
jo
sub
sub
push
dec
jp
fists
mov
loop
imul
jae
in
imul
jmp
mov
movsl
sbb
mov
addr16
lds
loopne
mov
cs
inc
sarl
loop
mov
xor
shl
in
sub
sub
mov
and
mov
dec
outsl
dec
mov
dec
enter
add
mov
loopne
rcl
fstps
push
pushf
fmuls
sbb
hlt
push
adc
or
stos
adc
mov
fldcw
jp
lock
mov
mov
loope
jl
mov
and
divl
stos
ret
inc
jle
adc
lcall
mov
pop
jg
in
add
enter
push
pop
and
jo
mov
jns
sahf
adcb
fimull
dec
les
add
add
scas
mov
xor
jmp
stos
push
or
test
xor
cmp
mov
std
aad
js
jg
addb
subl
aaa
cmpsl
inc
fstpt
pop
xchg
pop
xlat
nop
pop
push
sbb
mov
movsl
ret
xchg
fnstsw
fdivrp
xchg
fiadds
mov
dec
sub
insb
lods
nop
jp
mov
lcall
fsincos
call
mov
mov
outsb
je
and
fsub
jns
mov
das
and
sbb
insb
jnp
sbb
jno
incl
pop
inc
int3
xor
inc
inc
push
lods
push
inc
test
push
imul
sub
xor
push
jp
mov
mov
xor
sbb
loop
xor
adc
out
xchg
fwait
repz
enter
jns
add
mov
in
and
cmp
loope
sbbl
inc
dec
in
pop
addr16
sbb
push
outsl
js
add
imul
or
cmp
int
jb
test
aaa
pop
inc
lret
inc
es
pop
inc
lds
dec
fildl
xor
lcall
in
adc
xor
ret
clc
nop
movl
sti
fcoml
inc
es
or
xor
sbb
arpl
js
outsb
fs
shlb
dec
xor
cmc
std
fmull
dec
inc
and
xor
popf
push
shlb
push
or
aas
cmc
inc
xorb
pop
push
push
jno
test
xlat
in
and
xchg
movsl
iret
out
cmp
jae
into
ja
xchg
rol
test
sti
mov
outsb
jmp
lock
aam
sub
movsb
js
cmp
sbb
dec
jae
fcomp
inc
scas
jmp
rcll
and
fsubr
scas
dec
out
push
sub
adc
clc
sbb
jae
push
xor
and
dec
mov
or
testl
dec
sbb
mov
mov
loopne
add
or
aam
push
dec
push
inc
pop
cmp
sub
in
xchg
cmp
jl
xorl
cmp
xlat
inc
sub
mov
or
arpl
push
mov
test
into
push
pop
loope
add
test
stc
pop
push
repnz
add
mov
cli
cwtl
cmp
in
pop
push
mov
dec
test
cmp
out
cmp
xor
dec
sub
fwait
xlat
push
push
sub
mov
sbb
mov
push
push
jl
mov
fcomip
pop
notb
bnd
gs
dec
inc
cli
je
dec
jne
out
insl
jmp
jne
mov
sub
inc
inc
cmpsb
sbb
arpl
pop
push
dec
mov
loopne
mov
aad
andl
xchg
inc
xorb
movl
add
mov
ret
push
sbbb
rorb
xlat
pop
or
xchg
mov
outsl
inc
pop
mov
ljmp
daa
repnz
mov
dec
ja
ja
jne
std
lds
iret
je
cmp
xchg
push
mov
jno
pop
dec
jle
dec
sub
cmp
shrl
loopne
aaa
das
jmp
pop
loop
nop
jp
xchg
stos
dec
fwait
cmp
out
mov
addr16
dec
gs
divb
dec
mov
insb
inc
rclb
sarb
xchg
lods
pop
jge
stos
adc
incl
xchg
push
repnz
test
lods
fs
mov
iret
popl
sub
or
and
jnp
jp
lea
out
fildll
sbb
cwtl
mov
es
inc
shlb
cld
xchg
std
xor
imul
mov
jne
fwait
popf
adc
ds
bound
lods
cli
icebp
lock
rcrb
in
andb
js
sbb
lret
sbb
inc
pop
pusha
jle
lods
sbb
cmp
inc
push
adc
xchg
sbb
mov
scas
cltd
xor
or
sbb
sub
mov
add
cli
push
cmp
lds
mov
or
push
std
loope
jle
shll
lea
and
addr16
pop
pop
call
gs
or
lret
dec
int
cmc
call
mov
rclb
loope,pt
aaa
cmp
sub
mov
pop
xchg
sub
aaa
mov
iret
mov
idivb
cld
mov
xchg
pop
mov
push
xor
or
in
mov
jg
mov
cmpsb
add
inc
and
addr16
sbb
inc
lods
mov
fmull
xor
lods
ljmp
adc
push
cmp
cmpsl
xchg
lret
sti
fadds
add
pop
fwait
xchg
loopne
aas
decl
outsl
cmpsb
lock
jne
insl
mov
pop
pop
jl
in
jl
out
test
cmp
adc
rcrl
incb
mov
mulb
loopne
icebp
daa
adc
push
and
in
popf
dec
lahf
mov
sub
scas
mov
lods
xchg
dec
cmp
adc
jae
ficoms
push
and
and
push
mov
mov
ret
nop
pop
xlat
sub
mov
jp
jmp
call
nop
inc
dec
push
insb
lds
cmpsl
add
push
or
addr16
mov
jmp
pop
dec
sbb
fadds
dec
shrl
inc
xchg
jmp
push
dec
inc
pusha
push
fwait
out
fildll
in
adc
xchg
pop
jno
lahf
insl
outsb
push
mov
push
icebp
inc
lods
inc
pushf
test
enter
sub
sub
outsl
pop
cld
ret
cmp
rorb
arpl
mov
and
add
outsb
inc
fucomi
iret
xchg
fbld
outsb
jge
and
inc
sub
xor
fdivr
pushf
stos
xchg
or
inc
into
sub
push
mov
adc
xchg
mov
cmp
add
pop
ret
test
xorl
dec
xor
shr
lret
imul
stos
add
enter
mov
shll
scas
push
push
or
xchg
cwtl
xor
fimull
fs
push
ds
imul
mov
xor
pusha
and
or
jbe
loope
das
popa
push
jae
pop
arpl
add
add
mov
lret
push
ret
lcall
add
stos
and
fwait
loopne
xor
inc
mov
inc
lret
and
outsl
fisubl
cmpsl
dec
push
scas
dec
mov
ja
call
mov
push
dec
fildll
mov
inc
sub
push
mov
dec
ficomps
lods
xor
fimuls
xor
add
rcrl
mov
fcmovb
pop
add
jnp
mov
inc
pop
dec
jecxz
aaa
clc
inc
dec
cld
add
adc
ljmp
fisubrs
xchg
push
push
xchg
xor
adc
test
and
scas
fnsave
pop
ud0
rorl
popa
cmpsl
repz
aaa
mov
sbb
pop
dec
jns
xchg
mov
push
sub
sub
inc
add
repnz
add
icebp
pop
mov
jl
lret
popf
xlat
push
out
lret
test
add
notb
push
lret
test
int
fwait
add
mov
cmp
lods
inc
sbb
stc
adc
xor
adc
cli
pusha
xchg
cmpsl
scas
push
push
ljmp
mov
ljmp
nop
aaa
xor
stc
mov
mov
into
mov
out
fcmovnu
js
adc
in
mov
ja
sub
jp
sahf
out
pop
xlat
sbb
pusha
imul
mov
pop
push
je
xchg
push
mov
jp
js
lds
in
das
test
push
adc
arpl
int3
and
mov
xchg
popf
mull
add
mov
mov
and
push
ret
cld
mov
add
jbe
xor
mov
jmp
and
pusha
push
push
push
outsb
loopne
mov
sbb
xor
xlat
outsl
jmp
cmp
mov
inc
xor
faddl
call
adc
xor
dec
dec
jp
pop
call
push
jnp
imul
mov
push
ljmp
or
and
dec
mov
imul
add
lds
lcall
iret
mov
fistl
mov
add
jg
dec
mov
aas
test
sbb
mov
inc
pop
jecxz
dec
sbb
das
and
rorl
scas
push
xor
in
rolb
cmpsl
inc
into
xchg
mov
int3
mov
bound
fcmovbe
pop
test
mov
and
out
push
xchg
repnz
in
pop
mov
enter
dec
ljmp
test
mov
sbb
cs
and
mov
repnz
sub
jmp
test
or
add
in
mov
push
fs
pop
fidivrs
inc
mov
or
jge
push
idivb
std
test
leave
inc
insl
arpl
daa
mov
cs
fsts
pop
add
pop
jne
push
jg
aas
mov
or
sbb
pop
cmpsb
popa
mov
ss
in
subl
adc
ret
xchg
addl
mov
leave
cwtl
xchg
lods
adc
jnp
or
push
sti
xchg
add
rorb
mov
push
ss
enter
inc
mov
adcb
mov
es
imul
fidivrs
add
push
inc
lds
fadd
mov
lret
in
mov
mov
ljmp
fwait
ja
pusha
dec
psrlq
and
pop
xchg
clc
dec
lret
or
orb
mov
and
cmp
nop
mov
push
fildl
jmp
cmpsb
mov
cwtl
inc
mov
lahf
sub
pop
cmp
dec
test
fiadds
fwait
test
arpl
and
mov
jg
cs
arpl
sbb
lds
outsb
push
xchg
daa
inc
add
stc
gs
out
or
test
fnstenv
incl
call
sbb
mov
mov
pop
xchg
mov
aaa
push
cmp
dec
mov
hlt
cmpsb
xchg
push
mov
xor
inc
inc
loopne
je
inc
popf
xor
push
xchg
shll
daa
insl
ret
loopne
dec
stc
in
rcll
mov
aad
fs
jae
scas
jo
and
out
int3
fdivrl
addl
lea
movsl
js
pop
jp
pop
cwtl
sarl
jo
xor
not
pusha
jl
notb
and
dec
cmpsb
inc
pushf
movsl
mov
jp
push
push
fmuls
or
sub
mov
inc
xchg
fsubl
xor
loop
jae
sub
inc
cmpsb
pop
sub
dec
push
ret
jp
adc
mov
adc
xchg
arpl
pop
pop
or
shlb
pop
sbb
push
into
mov
cmpsb
push
inc
fwait
add
mov
mov
mov
and
and
dec
sti
cmp
dec
aam
add
jmp
dec
push
and
adc
or
cmp
or
aas
mov
fistl
sub
cli
aaa
dec
add
ja
into
dec
jbe
test
jmp
jecxz
jbe
hlt
in
shl
sbb
cmc
xchg
das
lret
push
sahf
jbe
mov
inc
push
fmuls
icebp
push
inc
mov
in
ds
stos
in
mov
movsl
pop
testb
sbb
sti
ss
nop
aaa
inc
outsl
adc
cmp
mov
test
or
cli
je,pn
rcrb
mov
ret
cmpps
and
or
lcall
xchg
sbb
xor
push
clc
movnti
mov
test
pop
fs
ret
ss
dec
add
test
xor
mov
sub
lcall
or
inc
and
push
dec
add
jbe
push
xor
out
pop
rcr
divb
pusha
push
sub
push
aam
ljmp
test
pop
cmp
adc
jp
mov
add
mov
add
arpl
push
and
pushf
cltd
addb
out
adc
or
out
faddl
es
outsb
mov
adc
mov
popf
es
or
pop
mov
mov
jg
arpl
aam
sbb
pop
sbb
ds
or
dec
cltd
imul
xorl
imul
cmpsb
fwait
push
mov
out
or
fildll
jl
mov
jle
loopne
and
add
and
in
iret
scas
sub
sbb
jmp
les
sbb
repz
arpl
mov
ret
mov
push
push
inc
cwtl
and
mov
fldl
aas
cltd
and
push
idivl
xorl
push
fbld
mov
sbb
jle
das
adc
sub
cs
shll
loope
insb
inc
sbbb
pop
fcompl
adc
mov
or
cwtl
daa
cld
sbb
mov
das
lods
pop
push
js
fisttpll
xchg
add
negb
push
movsb
roll
in
repz
inc
fistl
nop
jns
sub
inc
lret
mov
dec
sub
dec
mov
pop
fisubs
lret
lock
push
mov
mov
push
into
nop
mov
sbb
dec
in
test
loop
dec
dec
in
dec
je
xlat
insl
jb
mov
sub
rol
rcrb
mov
dec
mov
in
jg,pt
mov
ss
jle
cltd
mov
jmp
cltd
pop
enter
aad
les
or
ret
or
cld
xchg
mov
jecxz
test
into
test
fiaddl
mov
sub
pop
je
imul
sbbb
add
inc
cwtl
daa
shll
mov
or
in
data16
and
pop
adc
or
cmp
mul
inc
cmp
cmp
pop
pop
or
dec
scas
adc
frstor
xchg
jg
xchg
daa
insl
insb
pop
outsl
iret
fwait
out
and
xor
add
movsl
push
into
roll
aad
adc
mov
aad
fmuls
es
sbb
pop
fwait
out
out
mov
jnp
pop
push
mov
dec
fisttps
add
adc
iret
jo
bound
daa
andl
xchg
sub
lods
pop
mov
dec
js
imul
das
dec
jle
mov
or
dec
gs
gs
fninit
push
add
dec
inc
jbe
out
inc
mov
inc
in
mov
imul
loope
test
push
adc
mov
cmpsb
push
pop
lretw
cmpsb
hlt
ss
fcomi
nop
xchg
lcall
out
cmp
popa
nop
or
dec
pusha
test
mov
mov
outsb
xor
jp
imul
ret
je
inc
aam
mov
clc
push
and
inc
inc
add
leave
dec
pop
cmovno
sbb
mov
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
push
add
add
add
add
add
push
call
stos
mov
fbstp
lret
ficomps
lods
insb
test
sub
cmpsb
and
loop
xor
sbb
sarl
xor
imul
es
faddl
mov
mov
adc
data16
aas
push
jle
xor
lea
mov
xchg
repnz
inc
scas
mov
cmp
stos
sti
mov
inc
dec
push
xchg
rorb
jg
ret
sarb
shll
cld
daa
xchg
jno
jae
sub
popa
lds
dec
nop
mov
push
pop
fs
adc
add
dec
xlat
scas
adc
divl
pusha
or
and
in
jl
fldcw
or
aad
mov
outsl
lcall
mov
mov
or
jae
add
lret
push
bound
in
inc
sbb
mov
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
