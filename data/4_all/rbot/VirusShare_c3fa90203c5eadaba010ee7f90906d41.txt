js
cli
adc
outsl
rorl
push
lods
cmp
cld
sbb
shlb
push
or
hlt
inc
jae
lods
lods
repnz
stos
xchg
pusha
or
or
jno
mov
ja
dec
fcompl
scas
in
rorb
test
mov
subb
stos
data16
andb
dec
add
xchg
sbb
mov
ds
bound
cmp
fwait
mov
out
pop
xchg
mov
mov
fisttpll
mov
xorps
sbb
cwtl
ds
cmp
cmp
pop
and
sbb
sbb
cmp
dec
cld
stc
sub
mov
lock
inc
imul
cmp
sti
jg
ret
ret
inc
xchg
xor
jp
adc
sbb
test
cmp
inc
or
xor
jbe
add
cmpb
std
fmull
movsb
mov
mov
adc
addr16
movsl
add
cmp
repnz
add
std
or
cmp
test
lods
jno
adc
mov
and
cmp
push
sub
mov
fisttps
pop
cld
and
cmpsb
sbb
pop
jp
lock
fsub
adc
or
test
imul
rorb
es
xor
sub
fdivp
mov
aas
into
cmpsb
mov
sahf
or
sti
mov
loop
faddl
loopne
pop
sub
leave
outsb
fmull
push
insl
fldt
ret
jl
mov
xchg
jg
mov
or
mov
adc
nop
pop
lret
push
stc
jo
out
xchg
push
or
sbb
arpl
lea
jle
push
sti
add
inc
jns
stc
mov
es
shlb
cmpsb
mov
mov
scas
sbb
dec
mov
push
dec
hlt
push
push
adc
pop
imul
push
add
shll
push
xchg
inc
mov
pop
fcoms
lock
ret
outsl
or
insb
sbb
in
out
xchg
push
dec
mov
int3
bnd
shlb
popf
xor
lahf
sbb
push
cmp
lock
pop
test
test
loopne
shl
jp
xor
push
sbb
mov
in
int3
mov
add
popa
fs
mov
add
roll
ja
push
adc
sub
test
jae
fwait
int3
fdivs
xchg
push
sbb
test
das
pusha
sahf
lea
pop
mov
mov
out
js
inc
in
mov
xor
pop
lahf
or
popa
sub
insl
mov
bnd
movsb
outsb
in
sub
out
lahf
ja
and
repz
inc
sbb
shlb
pop
and
mov
cli
hlt
sahf
cmp
add
fildl
jno
jne
shr
xchg
mov
or
adc
lock
dec
rclb
mov
push
incl
push
cltd
sub
sbbl
fmulp
mov
rcrl
mov
inc
pop
or
loope
sub
xchg
ret
outsl
insb
test
pop
pop
add
in
nop
in
cmp
push
lret
jge
mov
pushf
dec
shlb
movsl
push
imul
or
adc
cmpb
cmp
in
stc
orb
add
popa
push
lret
sub
lea
and
inc
test
add
out
add
lods
lret
mov
inc
jl
sbb
ret
shl
xchg
les
push
out
xchg
jmp
jno
jl
lods
clc
std
out
fcomps
cmp
outsb
cmpsb
or
ja
push
aad
mov
inc
dec
lahf
rcrb
ljmp
lcall
pop
fistps
pop
lock
xchg
jle,pn
and
ret
lock
jne
ljmp
mov
jne
pop
inc
je
pop
mov
adcb
xor
or
lret
clc
ja
pushf
lock
push
mov
add
jmp
push
out
pusha
andl
imull
push
inc
and
call
mov
dec
mov
cmpsb
mov
pushf
fs
dec
xchg
sbb
stc
adc
std
xchg
lods
pusha
xchg
add
sbb
or
jne
leave
js
movsb
insb
inc
stos
outsb
cmp
sti
mov
jp
andb
pop
je
cmpsb
sbbl
dec
add
out
fwait
shlb
fs
sub
xchg
ljmp
mov
fisubs
pop
mov
mov
fildl
mov
out
dec
clc
adc
cwtl
out
aam
add
pusha
aas
es
mov
cmp
sbb
mov
sbb
ss
lea
shll
popf
in
repnz
pop
mov
or
add
mov
inc
sahf
jns
loope
sub
pusha
xor
mov
cmp
sub
fsub
in
test
jmp
call
pop
sbb
sbb
jns
test
add
push
rclb
test
into
mov
test
cmp
cli
loop
inc
xchg
shll
dec
add
rorl
idiv
jecxz
cld
scas
sub
inc
or
loop
cmc
mov
push
cmp
inc
out
dec
out
cmp
cmc
mov
push
icebp
push
jo
popa
mov
jge
pop
loopne
aaa
add
jecxz
movl
jge
lret
adc
jne
hlt
push
mov
fnstcw
xchg
pusha
cmp
or
adc
or
add
sarb
jl
pop
push
push
in
or
jmp
push
mov
sub
fisubs
imul
mov
int
mov
lcall
lret
add
adc
addr16
mov
pop
sbb
int
sbb
js
add
push
enter
or
mov
jb
sub
sub
dec
rclb
pop
int3
repz
dec
push
pop
arpl
loop
fildll
cwtl
pushf
fcmovbe
push
mov
pusha
mov
pop
test
aad
es
cmp
clc
dec
jns
movsb
dec
andb
sbb
or
mov
and
inc
icebp
mov
mov
mov
ja
les
push
cs
and
incb
pop
adc
bound
adc
inc
adc
lret
mov
test
cmc
pop
cs
aad
push
sbb
in
das
jbe
sub
inc
lcall
or
gs
push
out
xlat
xchg
das
rclb
lods
inc
cwtl
adc
push
ljmp
sarb
push
and
scas
cld
cmc
test
xor
lret
cwtl
les
sub
jp
into
and
lret
aas
aad
dec
stos
sarl
fistl
dec
fidivrs
jb
mov
mov
mov
sub
std
jle
xor
inc
jecxz
adc
data16
inc
push
dec
push
xchg
pushl
inc
add
sarl
sub
rcr
movsl
je
and
pop
andl
cli
lret
xor
fs
cwtl
sahf
push
or
sbb
cmc
fsub
popf
adc
std
adc
adc
push
push
loopne
fs
das
xchg
loop
les
fildll
lods
test
mov
dec
sbb
jo
xlat
in
inc
xchg
hlt
and
sub
adc
sbb
mov
mov
and
roll
or
lods
dec
add
jge
movsl
rorl
inc
loope
sar
test
mov
shlb
adc
pop
xchg
inc
push
ret
ljmp
push
test
jp
lret
loope
lods
xchg
xchg
adc
jns
mov
cmp
sub
sub
aas
mov
popa
jae
in
pop
dec
je
in
cmpsb
xchg
push
leave
jns
gs
lret
shll
dec
mov
in
bts
sbb
or
inc
loop
push
sbb
repz
ljmp
stos
xor
or
fdivr
and
out
fisubrs
fisttpl
in
repz
aaa
push
xchg
nop
mov
ja
pop
mov
push
cmp
cmp
mov
push
jno
add
daa
inc
imull
inc
dec
imul
lods
jnp
jae
add
fwait
sub
mov
clc
pop
xor
insl
cs
push
or
jb
pusha
or
enter
lods
int
push
aam
or
jnp
movsl
lret
or
imull
sub
adc
aad
push
stos
loope
adc
ds
add
xor
adc
stc
arpl
stos
pop
rclb
push
decl
cmp
mov
rolb
or
dec
cmp
inc
mov
sti
pushf
jmp
sti
bound
sub
xor
addb
sbb
xchg
mov
jae
test
mov
jbe
sub
jmp
inc
adc
pop
add
pop
xchg
xorb
jnp
xchg
xlat
cwtl
pop
clc
scas
clc
iret
and
jle
out
daa
jnp
push
cltd
and
scas
xor
out
es
cwtl
or
add
push
xchg
loop
mov
mov
push
inc
jns
lds
inc
cmc
test
mov
arpl
mov
iret
xor
push
pop
sbb
shrl
mov
orl
xor
test
mov
xchg
sbb
inc
mov
imul
pop
test
mov
sbb
add
leave
jl
cmp
ss
lock
data16
push
addr16
pop
cmpsl
int
stos
xchg
pop
push
xchg
jns
pop
int
les
imul
ja
test
pop
in
pop
mov
xor
ja
inc
bound
push
test
inc
mov
mov
pop
orl
pushl
fdivl
or
ret
jg
sti
insl
fistps
jbe
stos
idivb
scas
jae
out
lahf
lcall
repz
aam
or
fisubrl
add
in
fimuls
mov
fistps
nop
das
and
inc
and
mov
jo
cwtl
imul
inc
cmpsl
mov
call
repz
jecxz
jnp
mov
arpl
inc
jecxz
jne
fisttpll
test
cmp
cmp
dec
cmp
in
xor
clc
fcmove
push
jnp
fcoml
stos
stc
pop
pusha
mov
cmpl
adc
adc
adcl
fidivrl
pushl
fmuls
sbb
jg
fsub
rcrl
cmpsl
lods
mov
dec
inc
inc
pusha
clc
cmp
cld
push
sub
andb
ds
mov
das
add
es
fcmovnu
pop
dec
jg
inc
push
push
xor
or
fcoms
mov
int
add
jg
add
mov
mov
cwtl
aaa
cmp
ss
fcoml
pop
jo
popa
js
xor
outsb
push
and
call
cmp
es
sbb
nop
cmc
pop
mov
jmp
xor
mov
faddl
xor
push
lahf
loop
cmp
out
sbb
pushf
mov
and
pop
xchg
ljmp
mov
jne
jg
add
sub
loope
mov
fs
mov
bound
rclb
xchg
pop
mov
add
insl
mov
or
les
jmp
ret
pop
push
insb
push
mov
fimuls
adc
cmp
dec
mov
pop
cmp
dec
out
push
and
testl
or
pop
xorb
jecxz
ret
jge
fs
insb
lgs
aas
mov
fcomip
pop
lret
jmp
popa
nop
push
pusha
and
mov
sahf
sbb
cmp
cmp
sbb
stos
add
repnz
mov
ror
insl
aaa
lods
xor
cld
das
fnstcw
repnz
inc
mov
test
adc
cmp
gs
adc
mov
jb
test
mov
es
add
lock
jno
push
arpl
and
pop
hlt
cmp
xchg
das
mov
fisubrs
add
pop
and
int3
push
aad
dec
and
orb
iret
sbb
mov
addr16
shrl
push
pop
inc
and
movsb
out
push
in
jae
scas
xlat
inc
sub
lea
imul
loope
sub
pop
add
lret
cmp
daa
cmp
mov
adc
pop
push
mov
movsb
cmp
sbb
mov
mov
daa
lds
push
out
fsubrl
mov
pop
inc
push
mov
aas
cs
mov
cld
sbb
mov
sub
rclb
mov
roll
pop
add
ret
int3
lret
icebp
fbstp
cld
push
icebp
cs
push
ja
xchg
repz
cmpsb
jle
data16
xor
and
out
imul
cmp
push
outsb
out
xor
enter
cmp
adc
pop
pop
mov
jnp
adc
or
int3
ret
push
adc
mov
push
xor
push
ss
sbb
dec
rclb
or
popf
add
push
cmpsb
mov
fisubrs
mov
stc
movsl
cld
adc
daa
push
testb
push
cltd
inc
push
push
pop
aam
inc
fnstsw
shlb
shlw
mov
hlt
lock
into
loop
pop
inc
push
repz
fstpt
daa
xchg
pop
lea
dec
jp
xchg
mov
and
imul
sahf
and
nop
pop
leave
mov
insl
add
popf
xlat
sub
jp
sbb
ret
test
cmp
mov
adc
sbb
pusha
inc
lahf
adc
mov
out
adcb
cs
int3
jmp
xor
or
jno
push
sub
mov
cwtl
dec
inc
jo
pushf
outsb
cltd
fcom
outsb
sub
repz
cwtl
lcall
push
outsb
outsb
mov
inc
sub
dec
add
out
push
fldenv
decl
shll
daa
lret
fbld
mov
mov
loopne
int3
push
mov
daa
ja
mov
push
mov
cld
dec
mov
xchg
test
mov
mov
in
mov
fsub
push
sahf
or
inc
rcll
je
scas
gs
dec
sar
fistps
rcl
sbbl
cmp
pop
or
cs
int3
out
adc
aam
ror
sub
mov
pop
sbb
inc
cli
push
or
int
push
xchg
cmp
sub
inc
mov
les
loop
in
xlat
add
and
push
pushf
sub
xchg
or
loop
int3
adc
outsl
xchg
add
aaa
flds
cmp
imul
mov
mov
es
or
std
mov
cmp
jbe
iret
movsb
mov
push
ja
mov
and
or
bt
add
test
mov
xchg
stos
aam
mov
xchg
jne
xchg
push
mov
in
and
inc
hlt
pop
xor
test
push
popf
aad
lret
jns
or
stos
sbb
push
xlat
push
jp
xor
push
mov
add
nop
scas
hlt
xchg
fwait
push
xchg
mov
cmp
or
rorl
xchg
ret
sub
inc
daa
cmp
loop
aam
jp
imul
jb
mov
cs
pusha
sbb
ss
je
lret
jae
add
dec
pop
fstpt
and
fcom
mov
mov
fisubrs
mov
mov
lcall
dec
test
mov
sub
jle
add
xchg
jmp
test
xchg
push
jg
fldcw
jp
dec
mull
sbbl
loopne
inc
enter
xor
mov
fs
or
push
sbbb
outsl
roll
dec
aaa
fwait
jecxz
fidivs
cmp
cmp
pop
xchg
and
dec
xchg
in
in
out
mov
out
into
push
jns
ficoms
jmp
inc
mov
scas
repz
dec
dec
call
repz
popa
lea
out
dec
jl
repz
adc
sbb
fucomip
jbe
or
cltd
sbbl
lods
push
das
lret
lahf
and
mov
orb
xor
adc
pop
loope
in
or
addb
push
shrb
xor
loopne
push
xor
bound
add
leave
mov
mov
outsl
cpuid
xchg
xchg
or
pop
in
xor
lea
fdivrl
xlat
jbe
cmpsl
add
adc
imul
push
clc
out
imul
sar
sbb
cmp
int3
push
sbb
inc
sbb
inc
jns
test
gs
dec
das
mov
inc
inc
adc
pushl
pop
imul
inc
and
jno
xlat
xchg
mov
lret
xchg
sub
fisttpl
jbe
xor
push
popl
xchg
outsl
inc
repnz
andl
scas
jnp
xor
push
or
push
and
pop
mov
xor
mov
dec
mov
pop
movsb
ret
ret
daa
adc
pusha
or
test
jbe
mov
cmpsb
pop
rorb
sbb
test
jno
dec
adc
xchg
cmp
imul
ja
cltd
inc
movsb
pusha
sbb
daa
xor
lock
test
inc
cmp
leave
or
test
sbb
lret
xor
sbb
pop
cmpsl
iret
popf
aad
push
mov
push
clc
out
jle
xchg
inc
aas
int3
or
outsl
dec
jae
int
xlat
ja
and
push
inc
std
imul
mov
xchg
xor
inc
or
outsb
adc
fdivrl
and
mov
out
out
pop
xor
int
fcmovbe
stc
arpl
mov
fsts
bnd
movntq
rep
ret
pop
aas
imul
adc
mov
out
jg
dec
outsl
mov
int
outsl
push
fstps
repz
inc
mov
push
mov
xchg
sub
push
mov
xor
test
adc
out
lock
lcall
cmp
shll
and
mov
jl
add
incl
add
push
out
add
inc
cli
mov
aam
cmp
dec
pop
xchg
mov
adc
xchg
and
into
adc
es
adc
cwtl
add
pop
ss
inc
sahf
ret
and
test
jle
idiv
fincstp
test
mov
popf
jns
jp
cmp
or
lods
xorl
loope
cmpsl
add
xchg
mov
aaa
pop
inc
out
sbb
cmpsl
or
jecxz
pusha
inc
mov
stos
cs
sub
pop
xchg
outsb
inc
push
dec
out
cmp
xor
dec
mov
mov
jae
scas
in
cmc
or
mov
sub
movsb
or
pusha
mov
pop
mov
fdivs
js
cmp
mov
cld
mov
mov
inc
out
add
movsb
jl
add
lahf
pusha
jo
inc
cmp
lret
lock
mov
in
popa
mov
jp
sub
push
scas
mov
jl
xchg
and
addr16
into
shl
sub
xor
out
dec
jmp
fwait
mov
sub
cs
dec
test
push
or
lods
xor
sbb
sbb
pushw
sbb
sub
pop
loopne
repnz
mov
ret
or
int3
add
movsb
lea
insb
push
push
rol
lds
test
data16
pop
push
mov
adc
in
addb
in
sub
std
or
push
pop
int3
sar
lcall
xchg
dec
shlb
or
loop
mov
or
fimull
pop
sahf
inc
rcrl
or
fsts
adc
mov
call
sbb
scas
jno
int3
aas
imul
pop
xchg
aas
es
pop
xchg
xchg
pop
cmpl
into
push
cmpsb
out
repz
mov
lods
aam
stc
rcrb
lret
repz
xchg
lcall
insl
xchg
js
loop
jae
sub
cmpsb
sbb
ss
mov
add
jp
fmulp
add
mov
shll
dec
push
add
out
inc
jbe
leave
cld
sbb
pop
pusha
xchg
add
popf
xchg
movlps
scas
fdivrs
sub
xchg
jo
dec
in
cmpsb
cmp
mov
cmp
jmp
jnp
add
jns
stc
mov
ja
sbb
push
mov
cmpsb
xor
sarb
sub
fcom
test
fsubl
xchg
dec
aad
dec
cmp
xchg
dec
out
sub
xor
jp
inc
aas
lea
sbb
aad
pushf
ss
rorb
popf
mov
and
dec
repz
mov
fildll
div
jle
popa
int3
inc
or
add
dec
fwait
rcrb
pop
or
push
dec
cmc
ret
rclb
call
outsl
cmp
mov
inc
stos
loop
pop
mov
cmpsl
add
call
scas
add
sub
or
mov
addl
add
xchg
sub
mov
movsl
mov
fld
jg
int
pop
pop
movsl
and
and
mov
mov
push
clc
cmp
cwtl
test
xchg
xchg
addr16
fsubs
mov
call
jb
lods
mov
pop
xchg
aam
pushf
pop
xchg
push
testb
ss
fcomi
jmp
mov
loope
mov
in
fidivl
insl
test
inc
xchg
or
mov
push
faddl
fxtract
aaa
or
movsb
jmp
and
clc
cmc
addb
lcall
cwtl
mov
xlat
sub
xor
sub
fdivs
fidivs
dec
loop
inc
sub
xchg
lods
sbb
cwtl
pop
jl
jp
movsb
enter
mov
loopne
lret
add
xor
fwait
jecxz
fcompl
js
test
aad
sarb
dec
icebp
or
std
insl
mov
loope
popa
mov
icebp
jo
sub
mov
jl
test
in
pop
int3
lods
mov
push
xor
je
lods
pop
cmp
pop
xor
push
mov
mov
add
sarb
ds
jo
sub
je
stos
aaa
int3
or
iret
xor
shlb
es
jb
add
fwait
inc
xor
rolb
sub
ret
xchg
adc
mov
inc
dec
sbb
adc
lahf
imul
xchg
inc
lcall
shlb
outsl
fnstenv
pop
cmp
bound
lret
dec
lock
pop
out
and
cwtl
gs
scas
sbb
mov
adc
rol
and
cltd
xchg
in
xchg
cmpsb
testb
rcrl
dec
mov
pop
xchg
jb
push
ret
pushf
into
popf
cld
out
fsubrl
jmp
dec
call
fdivrp
andb
popa
mov
jp
pop
stos
addl
xor
les
insl
dec
mov
cli
jo
fnstenv
sub
in
sub
aam
pop
movsl
adc
sarb
repz
xchg
mov
notb
fwait
mov
les
jno
cmpsl
leave
and
pop
push
movsb
inc
loopne
jmp
imul
mov
xor
data16
je
outsb
xchg
or
mov
pushf
mov
shr
sub
xchg
sub
mov
movsb
inc
add
mov
pop
ror
stos
js
sbb
scas
fcmove
aas
mov
dec
add
mov
xchg
xchg
movsb
mov
push
pop
mov
mov
jnp
orb
pushf
ds
mov
loopne
push
push
cs
arpl
pop
shlb
push
sbb
fnstsw
dec
addr16
pop
sub
push
cwtl
jns
inc
cmpsl
add
push
daa
dec
in
sbb
lods
pop
jmp
jle
hlt
mov
std
or
jle
xchg
inc
xor
push
xchg
nop
popl
mul
cmpsl
cltd
fcomip
push
inc
dec
lahf
arpl
dec
cmpsl
dec
lret
mov
adc
inc
mov
xor
xor
add
sbb
pop
dec
and
jb
incl
and
mov
pop
out
sahf
adc
cli
jge
mov
ds
rorb
and
fildll
sbb
out
ret
aad
imul
cs
or
push
les
dec
mov
sub
mov
push
cmpsb
cmp
cmp
sub
aas
enter
xor
push
fwait
scas
mov
sub
jp
sbb
add
xor
xor
mov
arpl
mov
mov
rcr
push
jle
cmp
jbe
mov
jge
and
pop
inc
insl
cmpsl
sbbl
xchg
ljmp
xor
test
dec
mov
test
dec
xor
push
lcall
jnp
xchg
sub
mov
stos
rcrb
add
in
lock
xchg
cli
in
jmp
lcall
fmul
dec
sbb
scas
sbb
ljmp
mov
sbb
mov
mov
add
in
in
mov
fwait
or
xor
push
cmp
gs
mov
xor
psubusb
in
sbb
mov
jnp
outsb
call
jne
pop
mov
mov
popf
into
sub
mov
mov
aas
fisubl
lods
push
fidivl
mov
and
sub
movb
insl
pop
pop
addr16
je
faddl
xchg
jnp
and
ret
fmuls
mov
jecxz
jmp
lea
leave
leave
outsb
xchg
jb
daa
jl
mov
aaa
inc
push
out
outsl
outsb
fidivs
push
inc
outsb
ja
push
sub
aam
jp
or
xchg
std
inc
xor
rcl
or
or
jno
and
jne
aam
add
in
insl
inc
xchg
jb
and
sbb
ret
icebp
lret
movb
cmp
and
mov
stos
stos
stc
dec
aam
sti
inc
fiaddl
lds
inc
xlat
insb
inc
and
push
sub
adc
mov
cli
fdivl
loope
xlat
jmp
mov
mov
inc
mov
sub
repz
push
push
test
into
pop
in
add
jg
cmpsb
lods
hlt
pusha
clc
arpl
gs
test
in
lahf
in
and
inc
icebp
cmp
pusha
dec
push
sbb
mov
cmp
popa
movsl
int3
push
xchg
popf
fsubr
cld
lcall
cmc
loopne
cmp
jmp
adc
push
adc
jle
addr16
xchg
test
bound
inc
aam
out
dec
les
inc
cltd
xlat
xor
inc
and
lahf
aas
icebp
leave
mov
test
insl
out
fs
or
std
popf
fistl
pop
rclb
std
pushl
inc
pop
mov
lret
xchg
negb
sbb
mov
in
je
aam
cmpsb
clc
mov
stos
add
flds
xor
pop
push
shl
pop
jp
or
sub
movsl
repz
push
mov
pop
cmc
cli
or
iret
sbb
sub
fisttpll
or
insl
nop
shll
inc
das
stos
mov
xorl
daa
xor
cs
mov
loopne
nop
jmp
add
shll
cmp
push
cmpsl
fs
sub
adc
xchg
rolb
xor
push
enter
adc
inc
inc
hlt
add
or
sub
hlt
rolb
mov
and
test
ffreep
hlt
adc
lds
inc
andl
aas
arpl
int3
lahf
repnz
or
adc
inc
mov
cltd
dec
fs
adc
jae
movb
cmp
call
xor
data16
mov
mov
or
inc
jmp
and
push
dec
test
jne
decb
sub
cmp
mov
push
adc
and
adc
sbb
ret
lock
enter
mov
push
cmc
iret
cli
xchg
or
sarb
in
test
cmpsb
add
and
dec
repnz
sbb
cs
cmp
repnz
add
mov
lcall
push
ja
sub
fsubrp
or
aam
stos
sbb
mov
xlat
repz
xor
pop
mov
push
cmp
cwtl
mov
divb
lods
jmp
cmc
stc
push
cltd
scas
shll
sbb
cmc
ja
xchg
mov
test
shlb
inc
and
push
insb
jne
dec
mov
cmp
mov
aad
xchg
sti
pop
sbb
imul
dec
sar
cmp
mov
push
je
enter
je
pop
pop
inc
mov
test
xorb
jb
jl
repnz
mov
mov
imull
icebp
mov
out
lret
dec
in
pop
push
inc
fistps
lcall
enter
xor
in
mov
stos
gs
pop
push
adc
shll
sbb
dec
push
addl
scas
inc
int
test
in
lods
pop
add
xchg
gs
shlb
or
ficompl
mov
or
add
add
cld
fisttpll
mov
jmp
inc
ret
dec
add
push
mov
pop
push
test
out
lret
xlat
dec
fldcw
test
push
loopne
aad
adc
xchg
ret
in
shrb
movsl
inc
imul
jne
mov
movsl
jmp
shll
inc
inc
mov
mov
loop
fmuls
scas
movsb
in
lea
movsb
pop
btc
aad
dec
insb
in
js
add
lea
outsb
ffree
in
push
jg
mov
divb
orl
pop
xchg
xchg
loopne
mov
sub
imull
orl
add
cs
sahf
int
test
dec
pop
mov
loop
icebp
test
in
push
inc
sbb
and
xchg
inc
adc
outsb
into
or
xchg
cmp
push
mov
adc
sarl
adc
adc
in
fistpl
sub
insl
adc
mov
sbb
adc
xor
rolb
adc
js
or
sbb
out
int3
gs
sbb
inc
cmp
enter
aad
sbb
rorl
mov
leave
dec
pop
xor
cmp
lret
mov
subl
mov
sti
add
in
int
inc
add
jns
ljmp
push
mov
fcomi
pop
or
clc
sbb
inc
sbb
fcomps
adc
ljmp
sbb
sub
repnz
xor
adc
loop
enter
cmp
sbb
adc
neg
sbb
cld
js
inc
fbld
mov
jmp
into
cmp
or
jl
push
mov
ffreep
outsb
sub
mov
das
lahf
ljmp
movsl
add
mov
shlb
iret
das
or
scas
push
imul
imul
cmp
stos
jmp
addr16
orl
insl
adc
dec
xchg
imul
jnp
and
lret
or
jge
xor
xor
or
call
loop
and
and
mov
shlb
sub
aas
je
imul
add
orl
nop
xchg
dec
les
mov
ljmp
sahf
call
iret
add
outsl
pusha
or
push
push
out
rcl
cmp
push
xlat
sbb
cmp
add
push
stc
jle
add
test
pushf
dec
adc
xchg
xor
scas
inc
or
inc
int3
push
jbe
int
xchg
push
out
pop
xor
pop
jns
push
sarb
lahf
pushw
sbb
sbb
movsb
fcom
mov
jp
lret
sub
or
movsb
xchg
mov
clc
pop
hlt
push
pop
push
jo
or
push
cmp
mov
push
int3
pop
dec
add
inc
add
sar
xor
and
push
pop
sbb
pop
enter
outsl
jns
in
pop
ret
sub
cmp
mov
and
jb
sarl
pusha
in
ficomps
movsl
test
push
popf
push
jb
icebp
sub
cs
inc
ljmp
lds
subl
pop
xor
je
jl
mov
cmp
dec
sti
lds
or
pop
shlb
fcoms
push
and
test
sub
pop
xchg
or
or
mov
pop
xchg
dec
out
cld
xor
inc
sbb
jecxz
aas
inc
ret
mov
xor
je
xor
cmp
pop
mov
dec
add
jb
push
push
jb
les
inc
add
lds
jbe
out
pop
dec
cwtl
cmp
loopne
pop
lock
pop
push
pop
fisubs
pop
cmpsb
fadd
mov
outsb
outsl
stc
in
addl
popl
notb
or
inc
scas
shlb
cmpsl
add
jae
cmp
mov
daa
xor
add
sub
mov
inc
sarl
std
movsl
xchg
repz
das
xchg
cmp
movsl
repz
mov
jge
push
push
push
push
or
nop
lahf
mov
jl
sub
lcall
lods
rolb
push
in
and
push
add
std
subb
sbb
fldt
ret
jmp
sbb
in
adc
jbe
mov
in
cmp
ljmp
mov
cmpsl
inc
jmp
test
xchg
dec
mov
cltd
jb
stc
outsl
inc
testb
cmp
mov
bound
jl
and
popf
incb
mov
dec
add
pop
lahf
pop
xchg
in
and
dec
or
call
insb
add
das
loopne
sub
lcall
insb
fcoms
inc
jle
xchg
mov
repz
mov
pop
pusha
sti
add
inc
or
stos
mov
lock
mov
dec
xchg
or
lret
orb
lods
movsb
cltd
stos
call
xorb
dec
mov
dec
xor
jl
les
jecxz
fimull
test
lea
mov
mov
mov
roll
lds
xchg
outsb
mov
mov
and
sub
enter
mov
or
xor
push
push
xchg
aad
cld
and
sbb
std
inc
adc
push
mov
pop
mov
sbb
out
cwtl
xchg
mov
xchg
mov
xchg
push
mov
jnp
push
and
rcll
loope
add
and
rclb
mov
add
add
jle
pop
dec
cmp
test
jl
mov
repz
aas
xor
imul
cmc
adc
arpl
std
push
inc
cmp
xchg
jns
mov
and
mov
and
sub
add
push
roll
mov
and
inc
stc
push
in
pop
jae
and
mov
xor
mov
insl
fidivrl
sbb
dec
lahf
adc
dec
shlb
mov
dec
out
ss
lods
push
xchg
cmc
test
jmp
push
cmp
pop
jmp
dec
add
fs
mov
mov
adc
pushf
xor
repnz
cmpsb
arpl
std
fwait
xchg
and
sub
dec
push
repnz
daa
jne
xor
in
repz
cmp
mov
fdivrs
rolb
xchg
jbe
cmp
sbb
mov
fstpl
sti
jnp
jbe
fwait
test
adcl
jne
loop
mov
stos
xor
mov
aaa
jae
mov
loop
pop
aad
mov
xor
lea
ret
imul
loopne
cld
sbb
mov
lods
dec
jle
imul
lret
mov
movsl
pop
mov
jbe
cs
jae
sub
pushf
inc
xchg
sbb
xchg
sahf
adc
push
jnp
cmpsl
mov
aas
pop
and
sub
sbb
and
ret
jge
cmp
jl
fistps
xor
and
ficompl
lods
cmp
inc
je
dec
loop
out
mov
shrb
sub
repz
jl
call
sbb
xchg
aas
and
sti
xlat
aam
movsl
and
inc
mov
pusha
jg
les
int3
lock
sbb
lock
mov
mov
out
aad
lret
and
push
ss
adc
xchg
in
lock
or
mov
ret
das
cmc
xor
in
fisubrl
xor
loop
addw
inc
push
jg
inc
leave
jnp
fadds
pop
das
xchg
dec
push
in
jns
sbb
out
xor
leave
loope
sbb
inc
adc
movb
pop
xchg
inc
cmp
mov
push
dec
nop
scas
dec
vmovapd
dec
cmp
lret
jg
lea
scas
pop
imul
pop
add
mov
xor
fstpl
sbb
sbb
sub
mov
jb
pop
jbe
aam
dec
xchg
or
in
xchg
or
cmpsb
daa
daa
jb
pop
add
mov
mov
int3
dec
cmc
fs
psubb
das
xchg
cmp
ds
mov
jae
pop
pop
dec
cmp
mov
ret
push
cmp
dec
bound
outsl
xchg
xchg
loop
sbb
pop
push
outsb
mov
xchg
mov
je
fldt
xchg
out
cmp
cwtl
mov
pop
test
adc
jae
and
push
fistpll
shll
add
sub
sbb
insl
aam
movsl
repnz
jne
fisttpll
sub
or
add
mov
inc
sub
jle
movsb
lods
pop
push
loopne
test
fs
stos
scas
test
gs
push
xchg
addr16
pop
pop
jge
cmpl
dec
out
xor
push
xlat
call
mov
das
daa
dec
dec
fwait
sti
insl
sub
rcrb
mov
push
pop
scas
jl
sbb
push
fldenv
je
sbb
insb
sbb
lock
jae
lock
data16
lods
mov
sub
jb
adc
pop
stc
outsl
cld
inc
cmpl
rolb
pop
xchg
enter
jo
fisubs
addr16
stc
inc
stos
xchg
push
sbb
sbb
pop
add
mov
mov
or
repz
inc
sbb
xor
js
mov
js
ja
test
sub
add
in
xchg
lea
fcoml
jmp
dec
stos
and
mov
ror
xor
pushf
dec
mov
int3
outsb
rcrb
sbb
fbstp
and
pop
fcoms
iret
pusha
xlat
adc
out
int3
mov
cmovne
out
add
jne
push
cmc
sahf
push
pop
and
movsl
scas
aam
popf
cli
sar
push
add
arpl
sti
fcomip
loope
add
sarl
or
lods
in
andl
cmp
push
inc
repnz
push
xor
inc
xor
cwtl
add
adc
xchg
loop
mov
dec
sti
aaa
arpl
fucompp
fsubrl
xchg
ret
xor
idivl
fldenv
push
mov
cli
add
test
aam
insl
mov
out
aam
xor
dec
and
mov
imul
addr16
lods
adc
dec
mov
mov
jge
aas
inc
andb
mov
int
outsb
dec
rorl
fcomi
add
xchg
mov
mov
dec
fldcw
add
xchg
pop
mov
in
rol
pop
test
out
inc
rolb
mov
inc
mov
sbb
shr
test
push
or
div
pushf
mov
fldln2
rol
cs
mov
add
inc
push
scas
sub
push
aad
dec
push
or
jmp
int3
cmp
or
sti
movsl
ds
inc
mov
pop
inc
adc
test
inc
cwtl
pop
or
cli
addb
movsb
leave
mov
mov
rcr
add
adc
mov
dec
dec
addl
in
cli
pusha
cmc
fucomp
push
lea
data16
aaa
xchg
out
rorl
js
dec
adc
dec
sub
push
mov
rcrb
aam
and
and
push
insb
add
jg
inc
mov
mov
xchg
cltd
das
or
and
or
or
int3
clc
push
pop
jae
sub
inc
sub
xor
loope
ljmp
loop
mov
jmp
pop
shrb
mov
jb
push
cld
sar
fwait
xchg
add
stos
fnstsw
int3
pop
sbb
test
pusha
arpl
icebp
and
aas
add
push
or
push
mov
imul
sbb
xor
pop
inc
sub
mov
push
das
es
add
movsb
push
jmp
fstl
imul
incl
clc
xchg
mov
push
dec
mov
jmp
movl
pop
out
jne
shlb
cmpsb
les
or
loop
pop
push
lret
mov
test
jp
ja
hlt
mov
xchg
les
jno
clc
rcrb
cli
sub
xchg
dec
pop
xchg
mov
jl
sti
movsl
addr16
pop
cmc
jg
push
push
or
sti
or
push
push
insb
and
mov
push
sbb
iret
rolb
outsl
adcl
cli
or
adc
ljmp
mov
dec
call
std
cmp
sub
imul
xorl
insb
and
or
xor
nop
xchg
mov
mov
lcall
lahf
fs
pop
in
mov
js
imul
jae
inc
mov
or
icebp
push
sub
xorl
sarl
pop
scas
scas
movb
test
mov
fcomps
xchg
jae
xchg
mull
cmp
inc
inc
jl
rcrb
mov
out
cli
fidivrl
mov
out
mov
push
cltd
das
enter
and
mov
inc
js
sbb
iret
or
fldl
movsl
dec
ja
outsb
sbb
dec
repz
nop
adc
cwtl
jle
imul
ficompl
clc
outsl
mov
pop
jbe
cmpl
mov
xchg
stos
sbb
add
push
adc
lods
xor
fiadds
std
std
pop
fdivp
push
mov
pop
jg
loope
adc
mov
outsb
nop
mov
jb
mov
or
ret
jle
orl
cmp
filds
sbb
mov
add
inc
mov
andb
sbb
insb
xlat
mov
add
setns
pop
sub
adc
imul
xchg
xor
pop
mov
cli
ds
mov
cld
pop
mov
pop
xchg
jbe
movsl
jle
in
xchg
mov
cmp
dec
lret
dec
cmpsl
cmpsl
fcompl
jb
push
popf
inc
scas
in
fmul
jo
mov
jle
jne
les
inc
mov
adc
sbb
mov
movsb
sub
inc
push
imul
ret
xor
aas
inc
iret
cmp
ss
int3
push
hlt
add
aas
es
dec
lods
out
dec
fucomp
lcall
insl
cmpl
mov
mov
popa
leave
iret
mov
jecxz
lret
mov
mov
stos
xor
lods
icebp
jecxz
pushf
insb
pop
cld
xor
dec
and
fnstcw
in
cmp
lret
loopne
movsl
pushf
arpl
cld
or
inc
push
push
dec
pcmpeqd
or
sub
cmp
inc
or
mov
xor
das
neg
idiv
je
iret
push
clc
in
cmc
lock
clc
inc
xor
pop
data16
xchg
in
adc
and
xchg
dec
add
loop
add
mov
lods
pop
rcrl
inc
pop
sar
jb
mov
or
inc
cmpsl
pop
mov
pop
jmp
inc
or
cld
repz
mov
sbb
ljmp
jecxz
movsb
push
inc
dec
mov
mov
jle
push
rolb
movl
mov
mov
outsl
negl
in
lahf
mov
add
dec
and
push
pop
ret
xchg
pop
mov
sbb
into
adc
mov
ret
sbb
dec
arpl
add
iret
xchg
jmp
cmpl
inc
aam
jge
adc
xor
jp
test
adc
jle
cmp
popf
sub
dec
push
call
bnd
add
scas
mov
enter
mov
dec
mov
iret
push
dec
out
mov
aad
test
leave
sahf
mov
cmc
pop
xchg
cmpsb
mov
pop
mov
mov
xor
xchg
dec
in
int
aam
sub
bswap
xor
push
bound
sti
mov
mov
push
gs
xchg
icebp
dec
rorb
adcl
jmp
sbb
movsb
or
cltd
punpckhbw
mov
jo
jbe
xor
sub
xor
push
sti
cmp
and
fcoms
push
mov
repnz
inc
jb
mov
add
xor
ljmp
test
xor
cld
cmp
fists
ret
and
aad
jae
add
sti
cmp
push
xchg
jg
dec
sahf
addr16
inc
in
mov
int3
xor
notb
push
leave
push
sbb
movsl
jmp
xchg
add
sbbl
or
sub
jb
adc
xchg
mov
js
inc
cmp
mov
xchg
mov
lock
outsl
dec
cmp
dec
add
sub
or
mov
out
xor
sahf
test
inc
xchg
sub
or
pop
push
bound
or
loope
sbb
and
jne
cmp
fsubr
dec
adc
mov
mov
pop
lds
movsl
adc
add
popf
lcall
test
add
fbstp
jnp
sbb
sub
insb
jl
add
gs
and
pop
push
xor
and
lret
inc
add
dec
out
mov
std
add
shrl
mov
mov
jb
pop
pop
push
pop
push
add
adc
rorl
xor
mov
sbb
dec
mov
push
xchg
or
lds
pop
jnp
sub
out
inc
sbb
out
das
nop
lea
in
xorl
push
mov
js
push
push
in
dec
iret
xchg
pop
out
add
mov
push
lea
test
jo
stc
pop
xchg
xor
cmp
ret
and
mov
das
pop
push
stos
jge
bound
add
leave
rcl
push
xchg
les
movsl
inc
sub
xchg
imul
ror
xchg
dec
mov
outsb
xor
imul
sarl
lock
ret
xor
pop
or
cli
pusha
and
ljmp
push
and
xorl
out
xchg
and
xchg
icebp
jnp
shll
jb
test
fadds
push
dec
lock
mov
repz
push
nop
orl
je
test
xor
mov
nop
sbb
stos
mov
mov
imul
sbb
jno
and
pop
ss
std
out
push
jp
out
jne
movsb
orb
imul
popf
and
adc
cmp
add
sbb
fwait
push
nop
iret
leave
add
clc
jae
in
cltd
xchg
xchg
gs
neg
mov
stos
icebp
push
dec
popa
cmpsb
enter
mov
jno
icebp
xchg
mov
test
sti
push
jns
cli
push
or
and
and
add
xor
ret
adc
sahf
les
out
adc
and
imul
es
xor
das
lods
fcomi
aam
in
cmp
imulb
je
aas
ja
lds
mov
mov
inc
repnz
neg
cmpsb
inc
or
xor
clc
push
jmp
sbb
cmp
cs
mov
in
or
push
jns
lret
int
imul
xchg
sbb
shlb
mov
mov
push
jno
sbb
fdivrp
xor
cwtl
movsl
cmc
dec
int3
std
loope
pop
outsb
push
xor
lret
fwait
test
mov
es
aas
je
inc
cld
cmp
pop
push
out
push
pop
adc
mov
ja
or
cmp
pop
ds
icebp
stos
lea
pop
in
mov
or
std
mov
adcl
int3
je
adc
mov
xchg
dec
mov
sbb
inc
in
mov
jne
xchg
mov
dec
mov
and
xchg
rorb
lock
pop
xor
adc
sahf
sbb
inc
jecxz
mov
push
mov
rclb
scas
mov
xchg
stos
fcoml
cli
out
ret
ret
mov
out
or
pusha
aam
dec
push
fcmovu
fs
sub
xchg
add
mov
sahf
ficomps
add
mov
or
push
dec
lods
std
int
mov
xlat
or
push
arpl
popf
mov
xchg
mov
and
sub
inc
gs
test
jecxz
lods
mov
xor
cmpsl
inc
and
shl
cwtl
cmpsb
add
sub
sub
lds
icebp
sahf
stos
mov
mov
ja
and
xor
ljmp
clc
push
jmp
jmp
aam
sub
loop
test
pop
xor
or
pop
jp
mov
xchg
dec
daa
push
clc
lods
push
pop
mov
test
lods
jecxz
pop
xor
xchg
lds
js
fidivrl
cmp
xor
movsb
mov
das
mov
jbe
or
jp
mov
xlat
inc
mov
pop
outsb
clc
bound
xor
xchg
cld
cli
push
add
outsb
shrl
ljmp
lret
aam
andl
scas
push
push
push
push
in
push
pop
cmp
jb
jnp
rorb
pop
adc
sbb
ret
das
pop
popa
fiadds
movsb
jmp
inc
or
sbb
pop
adc
inc
arpl
sbb
xchg
loopne
cmc
clc
xchg
mov
sbb
and
push
aas
aam
or
pop
cmpsb
frstpm(287
aas
jecxz
adc
insb
call
imul
mov
aad
dec
lods
shlb
cli
bts
pop
jle
ret
out
mov
filds
daa
xor
mov
leave
pop
pop
insl
jns
xlat
mov
shrl
movsb
lock
mov
xor
mov
cld
adc
ret
insb
jbe
in
inc
int
lock
jne
stc
mov
dec
aad
sti
mov
cmpl
das
push
in
adc
int
rcll
fistpll
mov
dec
sub
test
inc
push
xchg
stos
jmp
inc
or
cmc
sbb
pop
mov
sub
subb
out
cmp
sub
daa
jge
xchg
mov
ss
inc
test
xchg
dec
shll
dec
sbb
jae
jae
cli
push
sub
push
sub
cld
mov
jbe
loopne
outsl
push
mov
ficoml
xchg
pop
mulb
push
or
push
push
xchg
fcoms
ja
xchg
mov
adc
inc
sbb
je
ds
gs
pop
aaa
cs
adc
inc
jecxz
or
add
stos
jle
test
xchg
jae
shlb
jmp
shrb
ret
xchg
mov
test
mov
xchg
out
fidivrs
test
pop
cmpsl
std
les
rol
rorl
lret
cmp
in
aaa
data16
lahf
cmp
xchg
mov
jg
pop
inc
jle
jno
test
adc
pop
stc
iret
outsl
bound
sbb
jge
addr16
scas
fwait
cmpb
iret
xchg
sub
jb
dec
xchg
add
mov
rorb
icebp
xor
xor
mov
jg
mov
outsl
inc
out
push
pop
add
push
adc
lret
iret
mov
loop
cmp
pop
xchg
in
imul
pop
fstpl
hlt
mov
cmpsb
sbb
aas
pop
push
jg
mov
decb
je
out
clc
dec
mov
orl
inc
pushl
or
adc
sti
lret
push
or
aam
decl
lcall
lods
and
ret
mov
xor
mov
mov
nop
fwait
js
push
in
mov
scas
js
and
inc
aas
jmp
push
imul
add
popa
adc
ret
addb
fwait
inc
mov
xor
mov
nop
cmp
xchg
push
insb
lods
popf
adc
stos
aad
push
iret
ja
cmpsl
lea
outsl
adc
and
sub
stos
dec
pushf
movsb
fldenv
loope
jbe
pushl
pop
addr16
subb
js
mov
mov
adc
scas
lods
inc
inc
inc
and
jne
setle
add
dec
pop
push
outsl
nop
ljmp
mov
fwait
in
adc
inc
cmpsl
cmc
mov
dec
test
shrl
ljmp
pushf
fbstp
xlat
cvtpi2ps
jecxz
add
popf
push
add
out
inc
cmp
test
push
jnp
and
push
cmc
add
and
add
int
inc
inc
insl
adc
mov
fucom
in
pop
aaa
mov
test
sbb
pop
out
mov
mov
dec
push
fisubrs
inc
sbb
cwtl
test
sub
cmp
xchg
fwait
add
iret
shll
pop
and
rcl
cmc
xchg
cmp
or
dec
gs
shlb
or
test
rorl
xor
or
divb
pop
scas
fildll
inc
xor
sub
cmc
popf
dec
std
jp
cmpsb
test
add
in
fcompl
lods
je
in
out
aad
pusha
push
daa
xchg
and
sti
and
push
cwtl
push
filds
arpl
clc
dec
aaa
lahf
or
jns
add
jl
pushf
and
loop
pop
or
loop
lret
fsincos
dec
push
mov
mov
test
fdivs
filds
mov
or
ret
add
sub
jb
movsb
loop
or
mov
lcall
jmp
imul
outsb
test
popa
mov
sbb
movsl
iret
insl
add
lcall
jns
inc
dec
rorb
hlt
mov
js
pop
xchg
jg
adc
add
sub
pop
inc
shl
push
mov
dec
cmc
jmp
cmp
inc
mov
jge
rcl
xor
out
jmp
shll
jno
sbb
mov
scas
push
mov
out
hlt
push
ret
popa
jg
cmp
outsb
in
push
or
or
cmp
xchg
pop
push
jl
cltd
fmul
add
cmp
adc
mov
imulb
adc
scas
adc
inc
aam
add
mov
sbb
std
addr16
testb
mov
mov
dec
pop
les
sub
loopne
ss
test
ljmp
or
and
in
adc
push
mov
fldcw
mov
addb
push
dec
rorl
popl
aaa
sti
push
mov
sub
nop
jo
in
jno
dec
mov
lds
sbb
sbb
lds
mov
rolb
daa
xor
inc
or
cltd
push
jne
enter
push
push
xchg
jo
add
js
into
add
mov
adc
daa
mov
xor
fcom
loop
push
mov
adc
inc
mov
sbb
jecxz
insb
cld
add
sti
fadds
lret
pop
jno
cmp
popa
out
imul
and
shlb
ret
inc
jb
scas
pop
pop
mov
pop
stos
sub
dec
pop
mov
and
xchg
pop
fmul
cmp
je
mov
ret
push
das
pop
sbb
add
push
cmp
das
in
or
lcall
repnz
inc
dec
push
mov
xchg
xor
and
xlat
jb
or
xchg
sub
mov
lcall
pop
rcrl
cld
sbb
pop
lret
sub
lcall
imul
xlat
dec
sti
clc
jno
fdivrp
test
sub
dec
jle
inc
xchg
negb
xor
sub
lahf
pop
sqrtps
ficomps
lods
pop
jne
rorb
int3
lret
jo
cmc
mov
das
sub
lock
sbb
jbe
push
fwait
dec
insb
sub
dec
lcall
std
jmp
cmc
arpl
dec
jo
ficomps
rolb
imul
inc
push
sbb
inc
pop
shlb
cmc
data16
adc
repnz
sub
cmp
xchg
mov
ror
outsl
pusha
mov
pop
adc
les
adc
or
mov
fsubp
xor
cwtl
in
dec
pop
int
push
xchg
sahf
or
sahf
mov
in
ja
jae
dec
das
push
repz
lock
inc
js
imul
adc
mov
popa
test
mov
jns
and
push
fidivrl
into
jg
jp
outsl
insl
sbb
mov
in
and
popa
cld
mov
sub
data16
mov
fisttpl
sahf
sub
xchg
adc
lock
hlt
ds
xchg
sti
add
sub
hlt
out
out
lods
lahf
sub
adc
xchg
and
fistl
cmp
js
mov
outsl
mov
xor
pop
jmp
xchg
sbb
pop
std
jo
xor
adc
dec
jl
inc
add
fiadds
mov
fs
jno
test
rolb
loope
dec
inc
push
mov
pop
bound
mov
lcall
inc
mov
imul
xor
push
int
sub
xor
mov
push
xchg
sub
cmp
mov
mov
xor
sbbl
add
fstpt
sub
lods
fwait
adc
inc
ljmp
insl
inc
sbb
jl
mov
push
push
mov
jp
aam
insl
lock
or
mov
sbb
push
fwait
inc
insb
jecxz
xchg
lds
jno
fs
shlb
rclb
sbb
jno
les
lahf
rorb
pop
outsb
ret
cmp
data16
jne
jl
iret
or
pop
jne
movsb
add
mov
push
popf
out
or
jge
mov
test
fs
sbb
cli
pop
xchg
aaa
stos
and
popa
out
daa
outsl
insb
repnz
call
leave
or
repnz
jae
inc
mov
xor
sbb
fucomp
rcll
sbb
pop
scas
mov
xchg
xorl
dec
jo
push
xor
sti
lods
lgs
test
ret
inc
inc
mov
imul
inc
pop
loopne
add
mov
and
lret
addb
leave
mov
jne
jg
movsb
fisttps
push
shrb
jmp
xlat
je
shl
xor
orl
sub
out
addr16
stc
decl
jg
scas
mov
mov
scas
push
cmp
sbb
mov
pusha
pop
jge
ret
std
arpl
adc
or
test
aas
mov
ficompl
push
inc
xlat
stc
test
insb
or
imul
pop
push
jle
mov
call
mov
scas
and
sar
adcb
add
je
xchg
scas
in
adc
push
fldcw
or
in
mov
je
mov
dec
push
pop
jno
and
mov
sbb
jle
pop
xor
push
lods
lods
or
sbb
jns
cli
sub
add
cmpsb
fsts
mov
mov
dec
add
mov
add
or
shll
mov
int
mov
sub
es
call
adc
inc
sub
pop
sbb
push
out
xor
shll
sahf
enter
fdivl
scas
inc
repz
jp
pushf
jl
adc
lret
inc
xchg
xchg
repnz
mov
adc
push
cmp
sbbb
add
inc
mov
jo
lea
into
cmp
fidivrs
xlat
push
aas
into
jg
dec
aad
mov
jnp
imul
in
add
cmp
outsl
mov
xchg
push
xor
inc
sub
rcrl
leave
dec
mov
and
pop
loopne
xchg
lods
popa
adc
mov
jo
fcomps
lahf
sbb
adc
mov
into
daa
jne
inc
push
xchg
mov
add
lods
mov
and
dec
mov
lock
faddl
stc
xchg
shlb
fldl
fcomp
daa
repz
jle
add
sbb
mov
xorb
mov
cli
dec
inc
dec
das
lea
cltd
out
andl
xchg
and
dec
test
inc
xchg
sbb
into
adc
bnd
inc
ret
push
or
mov
les
in
lods
mov
lods
call
jecxz
and
cwtl
imul
mov
pop
loop
imul
sbb
popa
mov
mov
ret
sbb
jb
push
fistl
sbb
movsb
arpl
test
add
sub
sbb
inc
mov
xchg
inc
lds
mov
jnp
rol
jne
add
push
lret
test
adc
mov
lods
mov
inc
jno
pop
inc
lahf
aaa
or
xchg
add
sub
push
xlat
or
sti
mov
cmc
lahf
push
and
negl
clc
in
popa
cmp
mov
push
cmc
cmp
cmp
adc
xchg
lcall
jl
xor
adc
xchg
lods
fstpl
out
cld
or
xchg
or
inc
fcmovb
je
loopne
jg
add
push
fbld
adc
dec
xor
daa
push
dec
push
xor
mov
bound
stc
ds
push
mov
icebp
mov
addl
mov
push
cld
cs
movsb
cmpsl
es
dec
cltd
lcall
incl
mov
out
negb
lahf
popa
fstpt
mov
out
adc
mov
xor
inc
jne
mov
xchg
add
scas
jbe
jno
icebp
mov
sub
jecxz
xor
jbe
jg
mull
int3
daa
jns
jne
xor
mov
test
xchg
jmp
insl
repz
in
sbb
stos
pop
dec
js
cmc
jp
je
ds
push
test
sbb
mov
adcb
pop
jle
push
dec
rclb
jns
aas
pop
push
icebp
je
mov
lods
and
aas
jae
cltd
repnz
mov
test
push
jnp
ja
jg
mov
ret
arpl
xchg
aaa
movsl
mov
aas
jg
add
test
jecxz
push
sbb
or
xchg
addr16
loop
out
rcrb
out
xchg
cmp
insb
jbe
xchg
fdivr
enter
dec
in
aaa
ret
das
popa
pop
mov
andps
dec
mov
inc
lahf
cs
jl
outsb
cmpsb
pop
int3
popa
jmp
adc
add
imul
roll
test
cmp
lods
xchg
mov
bnd
or
push
dec
icebp
pop
es
pushf
cmp
pusha
addr16
movsb
push
ds
cmp
fnstcw
sbb
or
ja
ljmp
add
cmp
sbb
push
and
dec
mov
or
pushf
cmc
adc
push
das
adc
clc
scas
lahf
lods
cmp
cmp
and
aaa
test
fs
lret
imul
test
inc
and
cmp
add
sbb
pop
clc
mov
push
adc
mov
cmpsb
xor
cmc
ficompl
mov
shll
ja
or
pop
xor
inc
repnz
cmpsl
jg
mov
clc
cltd
sbb
mov
jae
sbbb
mov
sub
xchg
lcall
movsw
sbb
scas
mov
mov
lds
dec
xchg
mov
jb
cwtl
dec
gs
and
rorb
mov
adc
inc
cs
lods
js
jne
insl
cmp
js
mov
aad
ds
mov
outsl
nop
enter
addb
in
inc
mov
lret
mov
in
es
jmp
inc
and
xchg
xlat
ljmp
pop
fldl
jo
sarl
bound
arpl
jmp
cli
mov
xchg
sahf
xchg
pop
vxorps
xchg
aas
push
roll
and
mov
int3
test
in
jmp
mov
je
cmp
pop
roll
out
ficompl
lret
add
and
mov
jno
mov
loope
in
les
divb
sub
pop
push
fsubs
andl
test
rclb
loopne
fmull
cwtl
xchg
lret
stc
lds
or
shrl
sbb
ljmp
jg
stos
imul
jg
lods
sub
in
cmp
pop
mov
je
icebp
mov
or
aas
mov
jl
jnp
out
mov
push
inc
mov
pop
ret
lea
inc
inc
mov
mov
cli
xchg
adc
call
stos
xor
xchg
xlat
cmpsb
pushf
fstl
mov
mov
or
mov
or
fs
lret
loopne
stos
add
push
sbb
or
rcll
rcr
inc
xlat
cmp
ljmp
std
xor
jp
xchg
out
les
icebp
mov
xor
cmpsl
cltd
mov
inc
sub
mov
outsl
jne
aaa
daa
inc
xor
out
mov
gs
xchg
jp
stos
xchg
or
das
mov
and
sbb
adc
xchg
out
xor
into
or
or
adc
sbb
push
xchg
pop
pop
cwtl
push
or
repz
sbb
add
es
cmp
loope
cmp
pop
xor
xchg
push
or
pop
frstor
cmp
inc
push
aad
movsl
scas
pop
jle
cmp
js
pop
mov
pop
clc
popf
jno
pop
sbb
fildl
pushf
push
int3
in
sahf
add
cmp
pop
adc
adc
mov
test
sbb
mov
dec
fs
or
xor
test
dec
ss
push
jp
mov
sbb
pop
iret
inc
fisttpl
aad
int
fimull
jmp
inc
xchg
pop
scas
pushf
shlb
push
push
xor
sbb
jp
jo
jae
scas
iret
mov
sbb
jne
rcll
xchg
les
dec
cltd
movsb
xlat
sub
cmp
xor
ja
pop
cmp
xor
mov
stos
push
cmp
jbe
dec
push
movsb
ljmp
sub
mov
dec
fdivrp
inc
sti
dec
fidivs
or
dec
outsl
popa
inc
jno
jge
or
stc
add
inc
xchg
cmpl
fnstcw
loop
mov
sbb
sub
test
inc
imul
cmp
inc
pop
movsl
fistps
jns
mov
vpperm
and
repnz
sub
adc
out
sub
add
bound
sarb
mov
sub
cltd
sahf
adc
shlb
or
les
or
nop
sub
mov
add
mov
adc
push
cli
pusha
fcoms
aas
sub
jae
lret
mov
lods
sub
popf
pop
sub
xchg
into
aam
and
sbb
dec
jp
js
sti
and
int
sub
stos
mov
scas
mov
jae
pop
xor
hlt
in
imul
mov
js
clc
repnz
hlt
push
xchg
jl
mov
pop
sahf
test
sub
sbb
mov
hlt
bound
sbb
leave
pop
scas
dec
and
pop
jne
jae
pop
sbb
in
push
ret
int
pop
sub
add
loope
and
aas
add
incl
xchg
add
jae
pop
mov
sbb
cmp
scas
sbb
sub
nop
pop
or
and
cwtl
push
filds
or
mov
popf
mov
les
bound
xchg
mov
jl
xchg
cs
fsub
xor
addr16
lock
popf
sbb
cld
andl
pusha
dec
popf
movsb
lahf
test
bound
bound
sbb
push
cmp
pop
out
cmpsb
jecxz
dec
mov
mov
push
out
dec
aaa
lret
ficoms
xchg
inc
push
clc
xchg
cltd
cmp
push
scas
push
mov
or
dec
sbb
jge
outsl
xchg
push
sbb
pusha
xchg
loopne
push
lea
mov
and
and
ret
cmp
xor
dec
lret
mov
fbstp
sub
jns
push
jbe
jmp
or
mov
ret
fcmovu
adc
add
adc
outsl
stos
fsubs
in
add
sub
cmp
adc
or
leave
insl
ret
adc
and
sbb
mov
add
jnp
stos
ss
popa
pop
mov
cli
sub
lahf
cltd
das
fadds
add
or
shll
pop
mov
cmc
mov
push
arpl
ret
cmp
mov
push
mov
sbb
dec
or
sbb
imul
fcoml
decb
cmp
and
sub
push
ret
in
mov
jnp
sub
xor
xlat
xor
in
in
fistps
and
or
repnz
mov
xlat
lods
xor
aas
cmpb
or
cli
sub
clc
adc
call
xor
push
pop
jecxz
xor
mov
adc
mov
push
sbb
dec
das
push
dec
movsb
mov
adc
aam
or
lods
dec
dec
jo
filds
sbb
dec
or
in
xor
push
arpl
arpl
mov
ljmp
and
xlat
ja
flds
inc
or
test
std
sbb
lret
imul
subl
or
test
scas
add
mov
mov
ja
mov
cmp
cs
sub
inc
popa
es
mov
mov
adc
and
adcl
xchg
imull
jg
lods
push
dec
jo
dec
mov
pushf
loop
loop
sbb
insl
cmc
mov
adc
cmp
out
mov
inc
mov
icebp
inc
mov
inc
aad
popa
dec
jnp
ljmp
mov
xchg
mov
cmpsb
mov
sbb
incb
pop
add
push
mov
test
aad
pushf
or
jmp
fstl
cwtl
aad
pushf
std
loope
lea
dec
imul
out
sub
mov
mov
repz
cmp
in
mov
enter
and
inc
testl
adc
dec
stc
pop
clc
add
push
mov
sarl
cmc
xorl
ret
cmc
addr16
loopne
mov
xchg
pushf
lods
cltd
pusha
xor
cmp
sbb
adc
inc
mov
std
repz
ss
push
or
inc
stos
cmpsl
xor
cmpsb
insl
xor
shl
cmp
mov
cmp
adc
repnz
cmp
test
jecxz
sbb
xor
dec
jmp
mov
fadds
pop
ljmp
mov
or
imul
cli
push
and
jno
stos
xchg
jle
or
xor
gs
sub
jae
mov
arpl
into
and
xor
push
int3
call
or
sub
stc
pop
sbb
and
or
je
pop
pop
xor
rcrl
mov
stc
aas
sub
mull
xchg
push
push
or
dec
loopne
mov
dec
sub
mov
repnz
pop
xlat
xchg
jecxz
insb
cmp
jo
lret
shll
rclb
push
sbb
sbb
subb
clc
cltd
sbb
or
into
sbb
push
mov
stos
xchg
cmp
sub
rcrb
sarb
jnp
add
pop
cmc
sub
mov
adc
sub
adc
addb
loopne
pop
jns
data16
sub
mov
mov
push
out
sub
lods
xchg
inc
mov
in
add
decl
cmp
repnz
xor
xor
jne
cwtl
popa
dec
or
insl
push
iret
dec
mov
punpckhdq
mov
adc
and
fmuls
mov
push
icebp
pushl
in
sbb
adc
ds
sti
cmp
and
xor
mov
jns
out
sub
int3
shrb
xchg
sub
cltd
sub
sarb
rcr
add
mov
addl
xchg
xor
push
imulb
inc
test
push
add
mov
sub
in
loope
and
push
int3
cmp
cs
addr16
ret
adc
push
pop
jno,pn
mov
fidivs
jle
ffreep
jne
mov
shll
jmp
mov
mov
pop
dec
cwtl
xchg
repnz
cmp
mov
or
lock
sbb
mov
je
ret
insb
movsb
roll
cmpsb
cmpsb
faddp
mov
imul
subb
adc
ss
xchg
and
mov
push
in
outsl
jle
cmp
std
repz
faddl
jge
inc
inc
not
sahf
xchg
mov
arpl
shrb
popa
sbb
mov
mov
cmp
test
dec
inc
jg
push
arpl
in
movsb
int3
pusha
jne
jl
cmp
cmpsl
ljmp
mov
or
mov
hlt
in
pop
cli
ret
inc
sti
dec
add
pushf
das
adc
sarl
sbb
aaa
and
jnp
movsl
cmp
repnz
repnz
push
sbb
iret
xchg
sbb
cmc
push
stos
mov
pop
loopne
fyl2xp1
iret
fimull
cmc
jnp
adc
imul
and
dec
push
or
in
inc
shrl
dec
and
pop
stos
icebp
je
mov
nop
inc
adc
mov
sub
pop
dec
pop
push
fwait
xchg
test
imul
stos
sub
cmpsb
movsb
lret
and
mov
test
imulb
fsts
ja
lcall
xor
js
push
lahf
sarb
in
sub
repnz
or
lock
push
addr16
test
test
mov
mov
fldt
add
sbb
or
insb
fildll
mov
cmpsb
or
sar
lods
lock
test
xor
iret
pusha
and
mul
pushl
fs
dec
mov
cmp
mov
stc
and
xor
popa
dec
add
cmp
movsl
mov
pushl
xchg
pusha
xor
inc
aas
js
icebp
inc
dec
xchg
stos
push
adc
or
jge
mov
addb
push
gs
mov
mov
repz
xchg
cmp
mov
mov
insl
mov
sbb
xor
scas
or
and
std
inc
popl
push
test
and
cmp
inc
out
jp
into
pop
xchg
add
mov
adc
add
sbb
adc
xor
or
jecxz
jl
mov
repz
je
mov
ss
jbe
xchg
fwait
jnp
or
call
lcall
sub
dec
jne
xor
and
or
add
jae
jecxz
cld
and
jmp
enter
xor
fiaddl
lods
setns
lods
orl
add
inc
addl
dec
sub
mov
aad
pop
stc
xchg
xchg
xor
or
bound
movsl
cmp
or
lahf
cmp
and
test
mov
adc
popa
ffree
cltd
mov
je
jmp
in
xor
or
sti
loop
jp
adc
add
ljmp
cmc
fnsave
and
fstps
mov
xorl
out
pop
add
ss
test
xchg
out
dec
int
in
bound
add
clc
dec
mov
xor
and
jae
pop
rcll
hlt
lods
inc
lcall
cs
out
mov
cmp
aaa
mov
or
call
jno
in
arpl
movsl
inc
add
pop
mov
call
aad
fildll
test
mov
aam
adc
xchg
scas
dec
push
and
mov
mov
jnp
int
in
and
in
loopne
lcall
pop
push
push
test
xchg
fs
inc
xchg
lods
ja
adc
sarl
mov
jmp
popa
inc
sbb
pusha
mov
hlt
inc
test
dec
dec
adc
test
mov
nop
sbb
leave
rcl
adc
xchg
stos
ja
fs
xor
fdivl
adc
xlat
mov
inc
jmp
aad
js
mul
addr16
repz
xchg
xor
std
jmp
adc
movsl
lea
aam
inc
xor
push
jg
mov
xor
mov
cmc
push
idiv
mov
mov
jnp
inc
popa
sahf
mov
pushf
shl
das
adc
shlb
mov
lods
push
jb
lcall
ret
fistpll
sub
jge
sbb
rorl
pop
dec
pop
adc
cli
pop
dec
adc
jge
jb
mov
arpl
adc
dec
dec
hlt
mov
mov
outsb
lea
sbb
rcrb
inc
jl
jp
dec
dec
dec
addr16
lea
scas
out
out
loopne
repz
cli
xor
cs
subl
lods
adc
lahf
ret
cmc
cmc
jo
jne
lret
lods
pop
push
sbb
arpl
popa
ret
push
cmp
add
arpl
push
repz
loope
cmp
out
push
out
lds
in
xor
jg
and
subb
testl
out
jno
inc
cmp
shll
pop
fmul
inc
out
cmpsb
loope
pop
ret
and
dec
mov
jp
add
jecxz
lahf
jae
fisubl
xchg
adc
cmp
sbb
mov
dec
cmpsl
dec
movsl
pop
cmp
pop
fidivl
mov
pop
adc
sahf
mov
es
mov
pop
test
cli
sbb
inc
cs
jg
xor
xor
enter
sbb
ljmp
iret
inc
inc
or
push
ret
aaa
add
xchg
sub
ret
cltd
cmp
cmpsb
push
outsl
xor
int
pop
aam
outsb
push
cmp
or
mov
dec
pop
nop
xchg
repnz
enter
xchg
cmp
lods
not
iret
repz
pushf
fstpt
fdivr
fsubrs
das
hlt
cltd
pop
daa
or
cmc
movsb
insl
jg
jne
push
das
push
add
popf
sbb
sti
call
pop
fwait
lock
cmp
insb
dec
aam
out
jle
xor
jg
pusha
lret
test
ret
bound
pop
pop
dec
bound
or
xor
sub
lahf
ficoms
dec
mov
bound
fwait
and
inc
scas
ficoms
dec
stos
loop
loop
sbb
jno
mov
push
jne
push
out
sbb
sbb
iret
mov
jo
sti
mov
mov
xchg
aas
aas
popa
jno
mov
std
jno
mov
sarb
cmpsb
sub
mov
shrb
dec
and
dec
or
sub
jbe
fwait
lds
bound
push
adc
and
lcall
into
jmp
lods
adc
xor
dec
jno
mov
inc
jbe
fldcw
jmp
adc
aas
fidivl
push
insb
adc
dec
outsl
insl
mov
push
inc
mov
les
loopne
mov
inc
mov
addb
ljmp
sub
mov
xchg
es
adc
add
jge
ret
movsl
call
lcall
shlb
dec
fidivrs
loope
std
mov
out
fiaddl
in
inc
test
shr
dec
cmp
lods
into
scas
int3
mov
loope
mov
add
pop
ljmp
incb
ss
dec
imul
test
mov
arpl
inc
sub
adc
mov
pop
outsb
sbb
xchg
cmp
xor
test
pop
mov
mov
mov
pop
mov
mov
add
push
stc
clc
push
jl
fistpll
pushf
fdecstp
out
and
sub
aas
out
xchg
push
shrd
pushf
lods
adc
mov
jecxz
aam
aas
outsl
shrb
jno
fisttpl
sahf
fisubs
test
fs
sub
popa
mov
ret
stos
out
sub
mov
xor
adc
aaa
and
inc
push
in
dec
dec
pop
cmpl
inc
repnz
movsb
mov
adc
sbb
inc
push
fxch
lret
push
inc
nop
icebp
inc
xchg
gs
cltd
mov
or
incl
mov
fstpl
or
dec
cmpsb
xor
push
daa
dec
inc
or
or
mov
and
xchg
dec
pop
dec
sub
stos
or
xchg
int
jge
mov
aad
scas
and
or
stos
das
outsl
cmp
stc
mov
pop
xlat
sarl
fdiv
ljmp
cmp
or
push
cmc
mov
inc
mov
inc
lcall
push
arpl
xchg
xchg
je
mov
sub
sbb
adc
sarl
mov
fucom
adcl
gs
mov
les
fnstenv
dec
pop
into
test
add
cmc
push
test
ja
xchg
ret
mov
or
xor
dec
push
inc
aaa
cltd
cmc
mov
mov
adc
xlat
sbb
sbb
fisttpll
popa
cs
mov
adc
add
stos
cli
stc
outsb
add
loop
andl
lds
fwait
sahf
push
push
push
dec
arpl
adc
lods
mov
push
mov
cmpsb
stos
adc
push
ds
repnz
inc
jb
dec
cmp
fucomip
mov
rcl
mov
dec
jmp
pop
fld
pop
dec
jle
cmp
cmpsl
inc
cld
inc
sbb
add
inc
dec
push
movsb
jae
pop
inc
xor
scas
adc
mov
adc
and
out
loop
imull
shrl
repnz
lret
cwtl
icebp
push
scas
push
out
scas
mov
sub
rcll
dec
enter
in
push
cmp
mov
ljmp
dec
mov
mov
mov
jo
movb
dec
cli
cmc
xor
ljmp
test
inc
xchg
dec
js
xor
inc
pusha
mov
inc
jbe
js
jns
movsb
aas
into
jno
or
repnz
push
nop
mov
cmpb
push
test
popa
push
dec
mov
nop
lods
fstpt
mov
pop
inc
fdivrl
fildll
lods
stos
add
ljmp
aam
mov
push
enter
pop
push
adc
fisttps
shl
test
fbld
mov
pop
iret
push
shll
xchg
movl
push
adc
cmp
jg
pop
xchg
les
inc
mov
frstor
stc
cld
es
xchg
pop
mov
enter
pushf
in
xor
push
out
jg
dec
inc
inc
sbb
xchg
ret
arpl
pushf
mov
in
sbb
sbb
pop
filds
stos
jno
shll
imul
ds
mov
jp
push
xchg
mov
sbb
or
dec
test
enter
outsb
lock
jae
imul
pop
or
jae
aas
lcall
mov
stos
sub
or
jno
jb
and
mov
rcrb
call
mov
cmp
pop
dec
push
jnp
test
sahf
shlb
pop
and
mov
xor
movsl
cwtl
pop
int
testl
outsb
movsb
mov
scas
push
test
dec
jbe
pop
arpl
imul
mov
leave
cmp
es
dec
cmp
fistpl
pop
icebp
xchg
or
jbe
mov
sbb
or
in
xchg
jle
adc
pop
sub
xchg
psubusw
mov
fnstsw
addb
mov
mov
sub
mov
movsl
sbb
ja
dec
insl
stos
mov
pop
cli
cmc
lahf
test
fidivl
add
btc
or
dec
jecxz
lret
cmc
mov
jge
popa
sbb
cmp
xchg
movsb
push
je
not
mov
scas
das
or
stos
jle
dec
leave
inc
in
adc
push
push
jmp
lds
iret
push
xchg
add
mov
notb
and
xor
outsb
push
lret
sar
scas
xchg
mov
adc
in
push
adc
lods
jmp
shrl
dec
fldt
pop
mov
inc
stos
cmpsl
dec
ficomps
psubq
mov
add
and
stos
jmp
and
xor
jl
jno
repz
mov
lods
xor
std
xor
enter
or
out
inc
push
adc
sub
sub
mov
lds
loop
mov
iret
and
fs
testb
popf
cmpsl
test
pusha
mov
dec
push
or
scas
lea
es
mov
xchg
ret
cwtl
bound
dec
xlat
dec
xlat
xor
dec
mov
out
mov
xchg
mov
pop
movb
fwait
jg
inc
xchg
add
jecxz
mov
add
sub
mov
xor
add
sti
and
lahf
xchg
jb
cld
xor
pop
xchg
sbb
mov
je
push
mov
arpl
push
sbb
jmp
mov
xor
cmp
les
mov
sub
fbstp
mov
test
dec
sbb
dec
push
testb
stc
in
pop
sbb
daa
andl
lock
subb
ror
rcll
adc
or
rolb
sbb
loop
aad
push
lahf
in
mov
sub
pop
mov
and
lcall
shrl
mov
jl
insb
mov
in
movsb
in
dec
dec
jl,pt
jecxz
jb
jne
mov
push
or
popf
test
mov
sahf
call
test
adc
push
add
in
test
scas
add
leave
sbbl
incb
or
jae
mov
int3
or
ss
sub
shrl
test
adc
cmp
nop
fwait
pop
sbb
in
adc
pop
out
pop
inc
xchg
sarl
push
cs
xchg
out
xchg
or
lahf
add
dec
icebp
enter
mov
int
aam
mov
or
pop
loop
or
nop
pop
es
jae
push
pop
xor
fnstsw
popa
cmp
adc
mov
cmp
xchg
mov
and
cmp
xchg
xor
das
and
xchg
push
xchg
xor
shl
sbb
pop
jl
mov
addr16
and
int
test
fiaddl
and
pop
dec
fistpll
lret
adc
stos
bound
sub
jl
icebp
mov
test
test
rcll
sti
fdivs
jae
test
xchg
lret
shlb
pop
clc
and
arpl
push
and
mov
clc
jno
decl
xchg
cmc
aaa
data16
xor
insb
push
filds
lea
jge
rcrl
xchg
aam
test
inc
std
mov
dec
xchg
movsl
outsb
ret
jne
mov
in
jnp
mov
andl
push
aam
imul
test
jmp
pushf
lret
test
fcoms
add
mov
dec
ss
rclb
xchg
pop
repnz
xor
ljmp
add
sbb
lret
mov
lret
xchg
push
jle
pushf
adc
into
jno
data16
mov
js
fadds
pop
jae
mov
mov
int3
cwtl
sbb
inc
cmp
mov
les
jne
aaa
ficompl
xchg
rcrl
jne
or
stc
pop
or
cmpsl
push
in
xor
mov
ror
push
cmp
rorl
jp
mov
xor
jecxz
lret
pop
aam
ljmp
inc
repnz
xorl
lods
and
adc
and
lea
adc
mov
lods
popf
and
es
adc
nop
pushf
mov
bound
sub
les
fdivr
xchg
popa
mov
and
mov
cli
pop
mov
sahf
push
aad
xor
mov
jo
popa
dec
and
adc
xchg
push
push
lcall
jl
sbb
ret
roll
iret
sbb
aas
xor
and
popf
addr16
aam
pop
popf
mov
or
mov
insb
outsl
push
orb
int
mov
fnsave
add
or
bound
arpl
dec
stos
js
cmp
add
xchg
mov
dec
femms
lock
sarb
cmpsl
outsl
or
rcr
cmpsb
sbb
jmp
xchg
mov
pop
push
add
insl
mov
fistl
sub
dec
mov
std
pop
stos
mov
dec
sub
scas
jns
mov
xchg
fucom
filds
iret
mul
fsubl
xor
xor
mov
mov
nop
jge
test
sub
hlt
pusha
mov
xchg
arpl
lret
jno
test
je,pn
xor
adc
fnsave
js
lret
dec
repnz
xchg
and
cmp
ds
stc
mov
or
sub
jnp,pt
clc
pop
pop
lock
cs
cwtl
xchg
mov
push
push
divl
mov
mov
and
into
sub
cmp
inc
jae
mov
xchg
enter
add
insb
roll
jns
jl
mov
cli
int
loope
mov
adc
call
lods
cmpsb
sahf
pop
gs
aad
dec
rdpmc
js
adc
or
out
pop
adc
pushl
dec
leave
or
lds
mov
xor
subl
bt
jo
das
sahf
call
adc
jno
push
push
repz
xchg
xchg
adc
arpl
mov
sub
sti
jae
call
dec
ja
jg
cltd
xchg
jmp
mov
das
xorl
ret
xor
andb
insb
les
enter
cmp
xchg
mov
xchg
ss
cmc
mov
sbb
repnz
scas
test
push
adc
sbb
scas
mov
or
stos
inc
ja
adcb
or
sahf
in
jns
mov
bndstx
jle
push
in
sbb
pop
xlat
sbb
pop
or
jmp
data16
inc
movsl
lret
mov
movsl
and
mov
aad
inc
adc
mov
jg
push
sbb
bound
ret
jne
stos
jae
mov
push
mov
jle
decl
push
and
fistl
push
cld
push
std
gs
mov
cmp
mov
pusha
test
or
popf
pop
ja
dec
pop
popf
push
les
and
test
sbb
adc
dec
movsb
jo
mov
adc
ds
outsl
inc
jo
cmp
fldlg2
xchg
mov
aad
fs
and
std
jbe
pop
push
cltd
fistl
xchg
lock
push
in
repz
mov
mov
adc
inc
jne
jecxz
push
jle
or
mov
xchg
stc
in
jl
dec
push
xor
xchg
xorl
addr16
dec
das
jmp
lret
mov
and
inc
add
push
xor
mov
rorl
cltd
inc
mov
jl
jle
or
in
adc
pop
leave
cmp
mov
mov
into
xor
lock
adc
mov
adc
push
jmp
int3
mov
inc
ja
call
xchg
loope
fsub
cmp
mov
mov
push
push
sub
rcll
jmp
aas
outsb
in
outsl
fadds
pop
push
loop
out
popa
sub
push
push
mov
cmp
pop
outsb
add
fimull
mov
jle
nop
in
push
ds
pop
xlat
xchg
adc
xchg
stc
jno
das
push
rcl
loope
ljmp
lods
popa
and
int
dec
lret
int
cmpsl
xchg
add
mov
sti
imulb
and
insl
mov
mov
std
push
mov
fbstp
imul
sub
stos
aaa
sarl
jns
ja
mov
inc
ficompl
arpl
cs
dec
out
dec
fmull
dec
es
lds
mov
arpl
daa
movsl
and
pop
push
les
imul
test
jmp
cli
fcmovne
ljmp
das
fnstenv
pop
push
ja
mov
mov
mov
xchg
sbb
and
cvtss2si
sbb
or
in
mov
aaa
dec
sahf
xor
jbe
pop
pop
int
and
adc
and
arpl
decb
in
or
iret
push
test
push
push
movsb
popf
hlt
jb
push
sahf
into
xor
inc
adc
hlt
xchg
test
and
and
mov
cmp
sbb
cmp
addr16
pop
addr16
test
xchg
aam
xor
test
inc
addr16
or
call
in
inc
stos
enter
sbb
sbb
gs
ret
xchg
push
lcall
fiaddl
cmp
repnz
ja
dec
cld
enter
sub
fwait
push
fmull
dec
loop
cli
notb
jns
dec
xlat
fstpl
add
ds
push
inc
xchg
sbb
hlt
rorl
xchg
je
aaa
sub
xor
test
push
mov
fucomp
push
lahf
mov
pop
or
in
jne
fbld
stos
out
in
mov
lret
scas
xchg
daa
in
xchg
xchg
fcoml
outsb
ds
jno
mov
sbb
mov
das
repnz
xlat
jle
push
cli
mov
rcrl
fbstp
orl
idivl
jp
das
xlat
ss
sub
push
dec
or
fwait
pop
xor
jne
cs
aas
sti
xlat
cmc
cmpsl
or
and
lahf
pop
js
js
aad
mov
roll
btr
repnz
je
pop
mov
add
cmp
into
mov
out
xchg
mov
mov
sub
js
push
cltd
movsb
loopne
cmpb
mov
repnz
leave
inc
call
push
shrb
or
int3
mov
mov
mov
mov
add
leave
lock
push
dec
xchg
mov
dec
bsf
fsts
mov
xor
test
push
jbe
push
mov
movsl
push
or
xchg
dec
fnstenv
mov
mov
mov
push
mov
repz
in
push
xlat
data16
jo
repz
dec
ror
aas
es
push
cwtl
mov
cmp
fsubrl
xorl
pushf
xor
mov
ret
or
test
pop
push
outsl
ljmp
out
dec
ljmp
leave
orb
mov
gs
icebp
add
in
not
cmp
popa
dec
mov
scas
shrb
lret
lret
jle
xor
bound
and
pop
in
adc
jp
sub
sub
js
or
mov
mov
mov
push
cmp
push
sbb
inc
xchg
test
sahf
mov
shrd
daa
xlat
popa
out
js
movsl
jnp
mov
js
sub
and
push
out
fdivrs
xchg
adc
movsl
gs
arpl
mov
sbb
fcoml
int3
pop
test
jg
push
push
lret
push
cltd
mov
sub
aad
lods
testl
add
mov
cmpsb
lret
shl
test
jne
out
hlt
cmp
push
shl
add
jge
xchg
aad
jp
mov
fadd
jo
jbe
jmp
scas
movsb
inc
pop
stos
out
add
xchg
mov
inc
sub
adc
add
lret
aaa
es
lcall
pusha
mov
inc
inc
data16
pop
pop
cwtl
add
aad
call
push
pop
sahf
stc
adc
lea
loopne
arpl
adc
out
push
test
and
xchg
shl
out
cmp
in
fistpll
mov
jne
jle
adc
dec
aas
sub
adc
nop
pop
fiaddl
cld
aas
pop
xchg
test
mov
out
ret
jmp
shll
adc
fistpll
sub
push
aad
je
and
icebp
mov
loopne
adcl
ljmp
pop
push
cltd
sqrtps
mov
mov
jmp
and
dec
cmp
aam
lea
jge
out
mov
mov
stc
out
fnstsw
icebp
pop
adc
mov
dec
sbbb
in
sahf
lods
xchg
mov
insl
loopne
orl
inc
sbb
lret
ret
sbb
clc
loop
xor
out
fnstenv
adc
or
or
cs
pop
mov
stos
lock
adc
sbbb
clc
idiv
sbb
cmp
xorl
divb
mov
jecxz
mov
mov
jo
pmuludq
push
xchg
clc
test
pushf
jmp
rclb
fnsave
xchg
into
push
mov
jns
push
cmp
insl
jl
pop
mov
rol
lahf
mov
gs
inc
in
pop
cmp
cmp
lods
jne
pop
adc
push
xchg
inc
mov
sub
fwait
mov
bound
aas
je
mov
outsl
testl
test
lahf
rclb
xchg
in
call
dec
pop
sti
mov
add
shlb
ds
inc
inc
mov
xchg
cmp
test
lds
cld
dec
dec
jo
pop
sub
add
fs
jg
lds
or
cli
sub
rcrb
fsubp
sarl
xchg
sahf
mov
adc
mov
or
xor
scas
lea
pusha
mov
testb
imul
testl
sahf
sbb
fnstsw
mov
pop
paddsw
mov
js
inc
mov
adc
incl
sub
push
pop
ret
test
lcall
lods
mov
pusha
subl
dec
jl
inc
scas
arpl
push
scas
pop
push
sub
insb
xchg
shl
add
jb
je
inc
shlb
mov
ja
fld
xor
and
out
and
cmpsl
pop
shrb
ljmp
inc
sub
sub
mov
jl
pop
jnp
mov
in
shrb
xor
mov
dec
xchg
cmp
push
dec
mov
inc
add
ja
push
ret
cmpl
push
jmp
sbb
push
pushf
push
je
and
fsubr
imul
lds
sbb
mov
lahf
mov
xrelease
aaa
out
insl
enter
arpl
cmc
jb
xchg
std
into
fidivs
mov
in
jnp
loop
jmp
cmc
inc
lea
cmc
out
bound
loop
iret
ret
into
sub
pusha
repz
mov
push
push
xchg
lcall
aas
ret
imul
in
lea
push
insb
sahf
mov
dec
push
mov
mov
pop
jl
fstl
adc
dec
gs
enter
repz
loope
inc
inc
scas
push
pop
stc
push
dec
leave
and
jl
in
and
and
dec
xchg
cmpsl
stos
je
ja
xchg
out
aas
inc
iret
popa
not
lea
es
jbe
push
sbb
andb
and
ror
iret
add
test
sbb
test
dec
sbb
pop
in
or
lcall
pop
add
jne
ret
enter
xor
cmp
jg
test
sti
or
out
sbb
mov
lock
test
dec
pusha
inc
pop
push
shr
cli
mov
mov
popa
xchg
push
lcall
psubb
hlt
insb
stos
gs
test
mov
inc
sub
in
jno
lret
clc
shll
enter
add
or
testb
sti
addr16
push
jg
ljmp
shrl
movsb
fists
inc
cmpsb
orl
xchg
repz
into
mov
jnp
dec
lods
cmpl
mov
imul
mov
inc
cltd
fcomi
lret
mov
gs
xor
loope
movsb
out
iret
int3
push
out
movsb
mov
out
mov
stc
js
xchg
xor
setns
pop
pop
lods
xor
cs
add
pop
mov
pop
idiv
pop
in
test
cwtl
fcom
xchg
movsb
mov
mov
es
dec
add
adc
jbe
insb
push
jnp
mov
jno
test
bound
call
aaa
mov
lret
adc
movsb
push
sahf
scas
loop
jne
sbb
test
lods
aas
mov
vpmullw
lock
lret
lods
aas
test
inc
mov
popa
mov
test
movsl
cwtl
mov
test
das
rorl
faddl
or
aam
out
fs
dec
jb
cwtl
fldt
xchg
pop
fistpll
aaa
ljmp
cli
mov
lcall
je
sub
inc
fcmovnbe
icebp
cld
imul
sbb
jb
push
jmp
lods
std
push
add
insb
fcmovnbe
lret
dec
push
push
pop
js
test
mov
push
stc
aas
and
push
jge
sbb
sbb
decl
scas
pusha
sbb
or
xchg
orl
fisubrl
daa
insl
mov
test
pushf
cmc
aaa
mov
sbb
pop
push
addr16
dec
inc
loope
stos
push
mov
pop
movsl
lea
inc
or
xchg
aas
aas
bound
xchg
sbb
pop
push
and
push
ja
xchg
leave
cmpsl
scas
shlb
inc
std
mov
sub
fistps
movsb
sbb
into
jecxz
hlt
test
lahf
jl
mov
push
xorl
push
insl
out
lea
ret
sub
arpl
mov
fisttpll
mov
adc
pop
xchg
dec
add
mov
mov
call
xchg
jecxz
stos
push
nop
jno
pop
addb
push
xchg
dec
add
adcb
xchg
shll
adc
shrb
add
and
dec
je
jne
es
adc
xchg
mov
add
sub
popf
adc
jle
jo
dec
fildll
ds
daa
imul
dec
cmp
mov
add
push
push
mov
xchg
sbb
daa
movsb
bound
rolb
or
daa
rcr
push
das
jg
iret
enter
mov
stos
pop
mov
jg
call
mov
jns
aad
sbb
sbb
adc
insl
imul
ja
mov
mov
sbbl
inc
sub
into
push
insb
aas
adc
cld
popf
int
xor
mull
mov
inc
jb
push
jge
jne
sbb
mov
sbb
sbb
lds
rcr
adcl
jnp
mov
lcall
mov
loope
sbb
pop
dec
into
lret
inc
sbb
adc
cmpb
mov
js
mov
sti
adc
cld
lock
sbb
test
fldenv
inc
fsub
xor
add
mov
cwtl
fchs
out
rolb
cmp
jbe
pop
ljmp
cmp
jge
and
in
fbld
jg
dec
inc
mov
xchg
in
sbb
xchg
pop
xor
pop
imul
push
stos
sub
aad
je
stc
adc
push
push
jle
xchg
or
sbb
in
int3
push
or
sbb
sub
sub
fadd
xchg
adc
push
adc
sti
sbb
lret
xor
jle
mov
and
in
scas
mov
psubw
repz
int
out
in
int
insb
inc
fiadds
inc
pop
push
mov
and
lods
aam
subl
cmc
pop
mov
cmc
data16
icebp
sub
mov
cmp
in
in
aad
inc
mov
push
mov
rclb
pushf
jb
shll
inc
cs
lock
push
in
jbe
add
rorl
push
lock
push
outsb
cwtl
cmpsb
idivl
push
xlat
out
jns
cvttps2pi
adc
out
lcall
push
push
pop
cli
jae
int3
xor
cwtl
mov
in
xor
push
dec
mov
sbb
int3
mov
dec
sbb
dec
sub
mov
mov
cmc
sub
push
mov
addr16
ret
pop
cmp
jbe
pop
jnp
cmpb
bound
adc
mov
xor
xor
call
ss
inc
cmp
dec
lods
daa
mov
xchg
pusha
out
fcom
cmpsb
rol
cmp
pop
xlat
fcomps
jl
cltd
or
rorl
aad
les
push
fimuls
mov
stc
adc
pop
mov
rorl
xchg
ljmp
dec
sbb
fildll
push
fcompl
xlat
dec
ljmp
lahf
xchg
sub
cmp
in
cs
push
nop
aas
arpl
movsb
lret
mov
cld
pushf
lods
scas
cmp
cmp
test
cli
or
and
dec
test
xchg
mov
push
mov
test
or
les
and
aaa
inc
fisubs
add
pop
imul
outsl
push
add
jb
xchg
jl
lods
fwait
jmp
stos
bound
mov
std
mov
and
pop
sbb
in
ret
mov
inc
dec
add
and
enter
jge
sub
fistl
lret
mov
es
out
push
sbb
and
cs
out
inc
enter
pop
ss
dec
aad
movb
jno
cld
mov
movsl
xchg
out
push
imul
sub
pop
mov
mov
mov
jge
fmuls
xchg
arpl
lret
xor
mov
adc
xchg
pop
test
leave
arpl
cmp
mov
and
cmpsb
pop
cmp
sub
into
loope
loopne
loope
jmp
dec
sti
add
icebp
cmp
and
pushf
loopne
clc
sbb
aaa
cli
mov
cmpsb
cwtl
mov
pop
in
sub
ror
lret
add
nop
out
jp
push
or
popf
loope
jl
inc
rcrl
shrl
scas
scas
movsb
roll
adc
cmp
adc
mov
mov
std
mov
loopne
rcr
aaa
pop
je
jge
xchg
cmp
es
or
in
mov
xchg
and
pop
pop
les
sbb
sti
lret
inc
mov
ret
cmp
mov
dec
pop
inc
jno
jecxz
es
lret
loope
mov
dec
inc
push
mov
shl
jp
iret
dec
sub
sub
daa
and
fstpt
insb
xchg
rorb
xchg
movsb
and
mov
aaa
mov
lods
push
jl
lds
mov
jb
mov
popa
sbb
fwait
push
inc
ret
repz
leave
jno
inc
dec
push
arpl
mov
scas
stos
aas
jmp
inc
or
pop
stos
cmpsl
or
int3
lds
adc
shlb
aad
dec
inc
mov
jne
gs
cs
popf
cmp
jp
cmp
sahf
add
popf
ret
scas
ret
mov
into
jne
mov
jbe
ljmp
push
adc
rclb
xchg
test
sub
jge
cmp
jnp
stc
mov
sbb
sbb
or
cmp
or
aaa
or
fimull
int
xor
push
push
popa
inc
out
mov
mov
roll
cmp
les
int
clc
sbb
inc
loop
out
pushf
push
add
clc
inc
lock
js
xor
xchg
xchg
xchg
adc
xorb
jbe
jg
pusha
add
add
and
mov
dec
dec
das
insl
sarl
mov
aaa
call
push
insl
dec
sub
lea
mov
shll
adc
nop
mulb
fcomip
pop
dec
sub
cmp
sahf
lcall
push
stos
shlb
pop
ret
xchg
stos
sahf
jmp
insl
xchg
es
outsl
fbstp
xchg
int
push
jne
sub
js
lret
push
or
bound
outsb
jg
call
std
cs
sbb
movsl
cmp
xor
sti
or
and
jp
subb
scas
xchg
sbb
std
cmp
rcl
lcall
jo
mov
add
inc
cmp
push
jle
jmp
jbe
xchg
or
add
push
jnp
xchg
fistpl
shll
push
clc
insb
rcrl
cli
mov
es
xor
sub
xchg
cmp
clc
mov
push
cmp
das
push
scas
fwait
scas
mov
add
loop
mov
jp
inc
adc
rcl
ljmp
adc
jae
add
lcall
cmpsl
das
popf
outsl
daa
pop
repnz
push
ficomps
inc
lods
push
lods
or
popa
pop
sbb
add
pop
pop
cmp
sahf
icebp
push
sbb
lahf
mov
fwait
jle
fidivs
xor
into
and
or
mov
bound
sbb
shr
loop
mov
outsb
xor
pop
cmp
enter
aad
std
rolb
out
dec
or
and
xchg
mov
mov
and
aam
ret
cltd
cmpsb
add
sbb
inc
frstor
mov
cmp
roll
int3
pop
das
add
dec
push
mov
cmpsl
push
inc
jae
dec
fcomip
or
push
sub
hlt
jg
dec
mov
push
xor
or
mov
stc
mov
push
adc
aaa
xor
mov
sub
jecxz
and
rcll
push
fsubl
mov
push
mov
sbb
aad
insl
fbld
push
ret
mov
testl
nop
pop
or
mov
sbb
or
pusha
push
cmpsl
xchg
lret
mov
mov
add
xor
fdivrs
add
mov
and
dec
std
lds
add
push
cmp
inc
mov
jp
mov
sub
inc
inc
les
mov
repz
or
lret
gs
sub
pop
jp
movl
pop
and
leave
xor
cmp
sbb
sbb
xor
jb
mov
loope
pop
testl
jb
ss
sub
mov
xchg
add
mov
push
outsb
xchg
in
add
jp
lock
imul
shll
cmc
imul
adc
sub
mov
loope
xor
sbb
mov
insb
popf
popa
pop
cmp
inc
aam
arpl
ljmp
mov
or
mov
adc
sbb
cmp
and
and
pop
xchg
push
clc
push
cs
scas
movsb
andl
push
dec
enter
clc
ss
leave
adc
jns
daa
outsl
mov
mov
aaa
push
cmp
push
lods
ljmp
pop
sbb
inc
inc
mov
popa
cmpb
out
cmp
or
xor
push
ret
xchg
and
xchg
add
data16
jns
sbb
mov
bound
cmp
fwait
mov
ljmp
pop
dec
lock
stos
dec
icebp
xor
cmp
insl
pushl
or
enter
out
pusha
test
jno
pop
in
scas
mov
push
repnz
imul
xchg
not
add
lds
pop
jecxz
sahf
mov
repnz
fisttpll
mov
fstps
pop
insb
mov
gs
xchg
std
dec
aad
orl
push
shrb
stos
cmp
mov
mov
lcall
faddl
inc
cmp
lods
cmp
hlt
xor
nop
inc
outsl
popa
mov
out
xor
sub
sahf
negl
ret
cmp
fwait
dec
mov
loop
icebp
cmp
dec
cmp
jle
xorl
inc
arpl
or
ljmp
test
cmpsl
jno
cmp
xorl
xchg
xchg
push
fiadds
dec
push
sahf
mov
pop
xor
push
xchg
je
adc
lods
cmpsb
in
sbb
std
clc
inc
insb
andl
negb
jnp
mov
add
xor
or
mov
loop
fwait
movsl
aad
shrl
and
cmp
add
add
cs
sbb
jno
mov
repnz
mov
or
jmp
ret
data16
xor
sahf
jle
cltd
int
fcomip
std
cmp
cmp
aad
sub
adc
or
pop
or
or
sub
mov
inc
pop
mov
test
jae
dec
jb
subb
pop
lahf
daa
lcall
mov
mov
pop
sub
pop
dec
push
pop
xchg
adcl
xchg
rcl
arpl
stos
add
and
sarl
cmp
mov
inc
jl
xchg
sbb
xchg
inc
pusha
rcrl
xlat
jae
in
sub
outsb
test
popl
mov
mov
sub
push
mov
xor
popa
adc
loopne
in
adc
mov
pop
sub
popa
pusha
ret
cmpsl
and
les
inc
jp
jecxz
push
into
das
mov
add
outsb
dec
sub
mull
je
add
jecxz
mov
inc
add
sbb
scas
adc
popf
and
nop
push
test
adc
out
clc
add
lahf
mov
push
push
cmp
lock
lcall
ret
sub
in
adc
jge
inc
add
cs
lahf
out
lods
das
insb
mov
and
es
mov
out
xchg
adc
add
or
add
testl
push
pusha
clc
push
les
push
lret
lcall
inc
dec
cmp
xor
bound
rcr
je
into
or
call
sbb
jecxz
add
push
add
popf
ds
jmp
shl
inc
popf
add
iret
lret
iret
sahf
cmp
pop
push
xorb
shr
lods
scas
in
xor
ja
in
pop
sarb
or
mov
lret
xchg
out
cs
into
xor
shl
mov
jb
mov
mov
fs
movsb
cli
xchg
aaa
mov
mov
cmc
mov
hlt
mov
imul
cmp
out
sub
sub
sub
mov
xchg
mov
cmp
jmp
xor
ficompl
sbb
sbb
sbb
stos
insb
add
and
aad
and
or
and
cmp
repnz
andl
mov
sbb
out
pop
stos
mov
and
notb
and
pop
mov
jecxz
push
and
mov
fwait
mov
dec
std
mov
pop
movsl
sbb
movsl
add
loope
and
mov
stos
sahf
mov
sub
outsl
adc
gs
and
xchg
je
leave
andl
fwait
les
imulb
icebp
cmp
add
jb
xor
mov
imul
ret
add
aad
jl
pop
jmp
lahf
repz
cmpsb
xchg
sub
sarb
mov
add
icebp
jns
ljmp
fs
lret
stc
push
test
inc
xor
ja
push
ret
lea
xchg
into
xchg
adc
stc
sahf
adc
and
dec
adc
nop
arpl
nop
cld
sbb
int3
and
ljmp
mov
rcll
test
and
xchg
aaa
or
sti
ret
mov
push
shlb
jno
subb
add
fdivs
dec
popl
je
mov
stos
or
mov
mov
in
fdivrl
ret
mov
fadds
das
mov
loope
test
and
arpl
fwait
sbb
inc
mov
push
cmp
adc
sahf
mov
push
lods
sub
das
add
or
sub
out
mov
xchg
sub
sub
mov
mov
int
pop
and
push
add
rcrb
addr16
jno
adc
dec
mov
outsl
xchg
pop
cmpsl
testl
sbb
jns
scas
pop
inc
mov
cmp
sub
pop
lret
mov
lods
adc
push
imul
int
sbb
test
adc
daa
or
imul
cltd
loop
add
mov
ror
or
mov
sti
sbb
popf
addb
pop
iret
faddl
fmull
jle
fcomp
sub
xchg
test
shr
fisubrs
cmpsl
adcl
or
stc
outsb
sub
inc
arpl
fldl
adc
or
cs
pop
push
or
inc
shll
rcrl
cmp
loope
push
add
enter
cmp
xchg
inc
lds
mov
pop
mov
jmp
mov
xchg
sub
xor
sub
daa
jg
pop
notb
notb
jo
adc
push
xor
repz
negb
test
aad
scas
jl
mov
jne
mov
push
sbb
xchg
fwait
jbe
ss
subl
leave
mov
icebp
sbb
push
sbb
imul
mov
out
push
into
push
aad
cmp
inc
mov
arpl
add
in
mov
mov
pushf
clc
test
hlt
fld
or
jp
repnz
lahf
pop
push
cmp
lods
sub
mov
jmp
loopne
sbb
scas
push
das
fs
add
xchg
mov
jecxz
inc
mov
adc
int
or
mov
and
inc
test
mov
jae
hlt
mov
loope
lahf
fwait
mov
in
insl
push
test
mov
out
outsl
loop
test
xor
xor
push
inc
icebp
fnstcw
movsl
sbb
mov
pusha
pop
mov
out
pop
mov
add
stos
sub
push
mov
sbb
andl
int
sbb
daa
inc
push
push
aad
ret
fs
pop
sub
jecxz
roll
fstpl
add
aad
push
cli
push
jne
outsl
xlat
ret
push
pop
mov
scas
xchg
mov
in
mov
psrad
scas
testb
push
pop
push
stos
dec
jo
mov
aas
pop
jge
mov
mov
std
mov
push
dec
stc
push
cmp
lahf
or
push
and
or
rorl
idivb
fisttps
rorl
inc
mov
mov
xor
mov
cmc
pusha
outsb
out
je
mov
mov
cs
das
test
dec
fyl2xp1
push
xor
mov
pop
mov
mov
loop
jmp
aaa
pop
cmp
lods
sbb
push
lcall
lahf
inc
xchg
xor
ret
daa
jle,pt
test
cs
mov
cmpsl
xor
mov
push
notl
test
in
scas
sbb
sti
cmp
jmp
mov
push
idivb
sbb
jle
sbb
adc
xchg
test
pop
ljmp
scas
gs
jae
push
jns
leave
and
das
stc
mov
scas
jne
enter
xor
push
and
sub
or
cmp
jl
and
sbbl
sub
xor
das
add
or
xor
adc
lret
xor
test
add
scas
mull
in
data16
push
jo
lcall
sbb
addl
lea
ja
sbb
bound
das
pop
push
cmpl
aad
pop
xor
jge
push
add
or
push
out
fdivrl
and
mov
mov
sub
adc
mov
dec
sbb
sbb
jg
pop
jae
mov
or
cmpsb
mov
in
adc
lret
div
push
mov
hlt
push
pop
cli
push
shlb
pop
popf
pop
inc
insb
shl
cmp
test
aaa
inc
xor
cmpsl
xchg
sarb
aad
test
das
mov
cmc
mov
cli
stos
mov
das
xchg
call
movsl
xor
jo
movsl
sub
les
mov
ss
in
xor
and
push
in
jb
add
or
ljmp
pusha
pop
mov
mov
mov
mov
inc
jno
shrl
int
fwait
mov
dec
test
dec
add
neg
push
inc
mov
xchg
adc
inc
push
js
lea
lahf
cmp
shrl
pop
das
jns
mov
or
lret
mov
cmp
inc
or
cmpsl
mov
and
mov
and
dec
and
adc
pushf
cmp
nop
pop
xchg
mov
sub
pop
cmp
push
scas
les
insl
push
inc
popa
pop
sti
scas
and
cmp
mov
push
cld
lea
sbb
fisubrs
inc
push
sub
sbb
inc
int3
pusha
rcrl
enter
aam
stc
sbb
test
xchg
aad
lahf
pop
iret
lahf
cmc
sub
cmp
loope
idivb
dec
adc
inc
cmpsb
ror
aam
imul
out
movsb
sbb
loopne
mov
inc
pop
add
fidivrl
fists
addl
xchg
sbb
mov
popa
jmp
jge
xchg
sub
jp
int3
add
mul
imul
lcall
and
sbb
mov
and
mov
aam
inc
xchg
mov
movsl
mov
xchg
into
inc
arpl
dec
ss
das
imul
pop
ds
les
pusha
frstor
pop
in
cmc
push
add
mov
jae
movsb
stos
lret
mov
test
mov
shl
loop
std
mov
in
mov
fldl
clc
pop
aam
mov
out
aam
push
pusha
lahf
call
push
inc
inc
mov
imul
lods
je
sub
adc
add
das
in
aaa
cmp
mov
pop
pop
adc
xor
fnstcw
jg
push
xchg
inc
into
add
repnz
sub
scas
cmp
xor
pop
ss
jno
mov
hlt
fsubrs
dec
mov
ret
push
sbb
inc
sbb
jmp
add
ljmp
jo
mov
fidivrl
pop
pop
add
icebp
inc
pusha
scas
xchg
xchg
pop
add
and
adc
xchg
nop
scas
push
xchg
ja
fisubl
sahf
pop
push
stos
fildll
cmp
arpl
and
adc
xchg
adc
sbb
adc
or
fildll
pop
mov
pop
sbb
push
rcrb
jl
lds
mov
and
lock
sbb
ds
dec
sub
mov
loopne
push
scas
sbb
dec
xchg
or
pop
test
ret
mov
add
xchg
and
popa
fbstp
icebp
sbb
js
cmp
push
add
mov
int3
pop
push
insb
jmp
es
pop
invd
sbb
ror
insb
enter
add
jl
gs
inc
adc
mov
xor
inc
jmp
addb
rcrl
sub
jbe
sahf
pop
xchg
sbb
pushf
cltd
les
stos
mov
mov
sub
adc
aaa
xchg
dec
add
nop
rorl
ret
adc
mov
movsb
repnz
cmp
add
pop
mov
push
insl
lods
inc
icebp
rcl
fcomip
xchg
sbb
pop
hlt
in
lret
ja
jo
add
movsl
mov
mov
call
rcrb
xchg
xchg
push
jno
cltd
dec
xor
xlat
push
or
dec
mov
rolb
adc
lea
push
push
roll
ljmp
jno
dec
jecxz
js
or
xor
mov
mov
jmp
negb
mov
leave
push
mov
cmpb
jle,pt
jg
mov
pop
mov
push
and
arpl
push
adc
loop
jmp
hlt
push
mov
mov
gs
ss
into
mov
outsb
jmp
call
sahf
sub
aaa
rcrb
inc
pop
cmp
mov
sub
dec
inc
xchg
addr16
dec
pop
jno
mov
push
call
dec
lret
out
sbb
jmp
pop
or
jno
cmc
or
mov
les
mov
sbb
mov
jno
pop
enter
and
dec
aas
mov
dec
fimuls
inc
daa
fidivl
push
pop
ss
fldl
mov
mov
sub
xor
xor
adc
cmpsb
add
mov
lock
pop
lcall
hlt
jnp
dec
mov
sbb
pop
xchg
inc
dec
adc
sahf
mov
fimull
in
mov
or
ss
mov
mov
fadd
cmp
icebp
js
decb
icebp
pop
mov
cwtl
jle
mov
inc
jl
add
push
int
in
mov
shll
push
mov
pop
sbb
jo
pop
pop
cmc
ds
xchg
repz
xor
divb
dec
mov
push
mov
xchg
fucomp
loope
lahf
test
or
cltd
rcrl
nop
lret
adc
mov
or
adc
aaa
aaa
xchg
pop
ret
loope
faddp
xlat
adc
aas
lret
pop
or
imul
xchg
cmpb
mov
cli
sahf
scas
and
test
ret
cmpsb
jbe
test
fidivrl
xchg
popf
outsb
repz
jge
gs
pop
addr16
mov
sbb
cmp
mov
shlb
cli
or
aam
mov
arpl
ljmp
ds
pop
movsb
lods
sbb
or
loope
loopne
ret
das
aad
and
jne
xlat
inc
int3
fdivl
aad
ds
xchg
pop
aam
add
stos
mov
test
sahf
mov
jge
int3
mov
mov
sbb
call
gs
enter
stc
cltd
imul
xor
mov
fistl
adc
push
pop
xchg
pop
mov
cli
ret
adc
imul
fs
imul
inc
sbb
jno
cmp
lock
call
imul
adc
sbb
or
push
sbb
push
clc
pop
fdivs
lret
setle
and
mov
lret
repnz
add
adc
mov
scas
pop
in
jmp
sarb
cmp
and
adc
adc
gs
inc
push
and
iret
mull
xchg
gs
int
lds
mov
outsl
jecxz
mulb
testb
lcall
into
mov
push
mov
mov
rcll
xchg
xchg
mov
pop
xor
ja
pop
push
xor
mov
insb
xchg
ret
mov
mov
setl
push
in
sbb
xchg
std
add
push
mov
je
sub
dec
ljmp
out
lahf
xor
adc
push
inc
ficomps
mov
add
add
addr16
in
sub
std
int
mov
pusha
mov
cmp
sbb
out
movsb
dec
dec
push
hlt
cmp
pop
xchg
in
js
sbb
loopne
lahf
lret
adc
ficoms
out
adc
imul
fs
sahf
cvtps2pi
push
jbe
loopne
sbb
xchg
outsb
cmpsb
lret
ljmp
je
dec
cmc
icebp
frstor
mov
sahf
cmp
movsl
sbb
imul
sub
xor
js
addr16
push
out
test
insl
les
gs
fucom
in
inc
mov
aas
cmpb
adc
mov
repnz
pop
fwait
adc
ds
mov
jg
cmpsl
inc
sbb
inc
mov
lcall
jmp
fcomps
pop
dec
lret
das
leave
ret
push
out
clc
push
cmp
push
fcomp
cltd
jl
ljmp
rcrl
aad
xor
aam
inc
pop
xlat
in
or
adc
cmp
leave
hlt
es
icebp
je
pop
jnp
dec
int3
popa
sub
mov
cmc
pop
jnp
daa
js
pop
sub
xchg
and
adc
int3
fdivrs
adc
je
mov
jo
push
mov
inc
incl
or
gs
pop
mov
js
mov
and
pop
pop
jae
add
mov
xchg
shl
add
and
test
fdivl
adc
ss
sbb
jmp
cmp
fisttpll
aam
pop
fisubl
insb
sbb
sbb
testb
jbe
enter
cmpsb
inc
sti
mov
movsl
mov
repnz
in
arpl
xorb
inc
xchg
push
aaa
pop
push
mov
out
xchg
cltd
dec
aad
cmp
iret
lea
adc
subb
fimull
xor
cmp
lret
loope
out
or
enter
outsb
inc
mov
shrl
push
mov
iret
mov
jns
adc
sbb
aam
inc
mov
xrelease
mov
mov
jp
and
incb
sbb
sbb
pop
sbb
xor
xchg
sbb
lea
frstor
mov
fdivl
inc
stos
jl
test
xor
in
fsubrl
xor
inc
pop
dec
mov
and
clc
push
mov
int3
sbb
lods
adc
nop
inc
cs
and
out
sub
push
mov
mov
inc
fs
rorl
adc
xor
mov
push
stos
mov
adc
lret
jmp
out
outsb
loop,pt
push
repnz
and
cld
sbb
fldenv
mov
insl
int
push
clc
outsl
xchg
in
adc
cmp
cmp
int
and
ljmp
popa
push
jnp
xor
cmp
and
push
add
or
aam
movsl
shl
pop
nop
rolb
test
leave
popf
imul
mov
ficoms
outsl
daa
cmp
cmpb
and
mov
cmc
rclb
andb
das
ret
call
in
mov
push
mov
es
scas
xchg
shlb
or
cmp
es
mov
mov
jle
out
push
xchg
mov
xor
or
aaa
push
les
fdivr
mov
cli
cmpl
sub
sub
and
or
jbe
stos
test
mov
cltd
xor
add
test
lcall
std
pop
clc
les
in
xchg
in
xchg
roll
dec
fsubl
adc
imul
cmp
xor
mov
in
mov
lods
data16
mov
out
fisubl
jecxz
fadds
jns
sbb
xchg
pusha
mov
mov
into
enter
mov
sub
fs
mov
cli
jecxz
stos
mov
int
push
std
scas
or
loop
jp
sbb
xchg
in
or
mov
sbbb
popf
mov
fcomip
fbld
divb
inc
pop
fnstcw
ret
std
andb
fnstenv
jp
orl
test
push
shll
mov
in
xchg
je
or
ss
sti
gs
out
mov
dec
pop
inc
jl
out
sub
stc
sub
cmpsl
cwtl
mov
das
mov
movb
orl
jg
lds
jb
pop
in
in
xor
inc
adc
or
sbb
lret
or
jp
fstpt
mov
lods
popf
xchg
adc
or
out
jmp
jo
scas
fimuls
inc
sub
movsb
call
subl
push
loope
cmpb
or
movsl
dec
pop
push
mov
subl
dec
and
adc
out
sub
in
imul
popf
nop
nop
ds
xor
addr16
int3
mov
cmp
leave
inc
add
push
addl
out
push
outsl
xor
ja
dec
je
pusha
lret
mov
xchg
push
loopne
cld
inc
adc
push
jo
lret
lds
fwait
mov
out
fstps
and
cmp
mov
iret
cli
test
scas
enter
sbbb
and
outsl
xchg
out
and
push
ljmp
lcall
lret
pop
cltd
fdivs
test
jecxz
roll
jg
cmc
es
mov
jg
push
adc
xchg
fwait
cmc
dec
loop
cmp
in
rorl
aam
mov
sub
xchg
imul
sub
mov
mov
mov
inc
mov
ljmp
sbb
cmpsl
push
dec
jmp
aas
cs
xchg
cmp
or
cmp
stos
push
mov
loopne
mov
pop
dec
stc
mov
mov
sbb
push
jge
outsl
fcmovu
fcos
loope
sarb
enter
xchg
pop
push
add
push
add
sub
mov
pop
out
mov
aas
dec
pop
pop
stos
mov
adc
out
inc
add
sbb
jb
and
lock
negb
mov
dec
or
and
test
sbb
jb
mov
jne
cmp
and
out
ja
insb
test
mov
and
jle
ud1
call
inc
iret
jbe
mov
sbb
dec
xlat
pop
sbb
push
shlb
mov
insl
ret
pop
xchg
dec
dec
or
test
inc
cmpsl
leave
xchg
fsubrs
call
iret
pop
dec
jmp
mov
in
sub
and
jnp
mov
mov
push
ja
bound
pop
jle
pop
fistps
add
lea
fwait
cwtl
push
adc
jmp
stc
jg
cmp
xchg
adc
or
out
orl
jge
daa
xor
ficoms
pop
or
dec
cmp
xor
daa
cmp
jge
or
ds
fs
orl
in
push
fistpl
pop
and
jae
scas
jg
jno
jge
xor
sub
gs
out
xchg
into
and
push
les
imull
pop
mov
nop
arpl
jmp
pushf
in
fidivrl
mov
pop
outsl
hlt
dec
jmp
lods
dec
mov
int3
xor
cmovl
xchg
add
jnp
cld
push
xchg
or
inc
push
fmull
pop
inc
out
add
mov
jge
sbb
push
mov
test
jnp
xchg
xor
arpl
sub
js
in
jo
imul
sub
xorl
jae
mov
movsl
dec
ljmp
leave
outsb
sbbl
imul
adcb
xlat
mov
es
sbb
loopne
jg
adc
pop
xor
stc
mov
sahf
hlt
mov
xlat
out
stos
shll
jns
insb
jno
mov
and
mov
cmpsl
pushf
dec
stos
dec
and
jnp
jno
adc
push
xchg
sti
jl
cmp
xor
jle
and
popa
push
test
mov
pop
or
cmp
mov
or
repnz
add
cmp
stc
hlt
jno
mov
into
adc
in
outsl
xchg
jbe
push
pop
inc
and
mov
dec
scas
mov
stos
jo
and
cmp
adc
push
les
jb
enter
mov
loope
push
or
and
sbb
pop
or
cmc
xchg
sbb
inc
and
sub
dec
lods
mov
arpl
rclb
loopne
and
mov
fwait
scas
adc
call
jecxz
popf
lcall
pop
stos
pop
int
shll
lock
aam
outsl
adcl
adc
inc
jg
add
sbb
jno
add
gs
jge
add
ljmp
inc
mov
scas
add
mov
add
lock
repnz
loope
ret
jmp
out
xchg
sarl
aam
icebp
xor
das
adc
jnp
xchg
and
bound
jge
mov
add
mov
hlt
nop
dec
push
inc
push
or
pop
or
scas
push
push
mov
xchg
mov
icebp
add
pusha
nop
in
pushf
mov
jle
push
xchg
out
xchg
mov
sbb
aad
xchg
in
in
popf
pop
faddl
dec
nop
xor
sbb
xchg
mov
jne
imul
or
outsb
ret
push
mov
xchg
into
mov
jp
into
mov
push
xchg
cld
dec
das
imul
and
scas
sbbb
cmp
cs
sub
sub
dec
aaa
xchg
lock
clc
mov
imul
pop
das
loopne
pop
out
xchg
sub
pop
or
sub
mov
jle
cmp
out
sub
push
mov
aad
push
aad
sti
sub
cmp
xchg
mov
inc
std
pop
xor
sahf
call
xchg
xor
xchg
cmp
mov
sbb
cld
addr16
repnz
sti
pop
das
push
jp
and
jno
andb
cmp
outsb
cmc
movsb
arpl
pop
sub
xchg
dec
mov
mov
lods
mov
sbb
sub
xchg
movsb
jne
test
add
movsb
js
adc
push
mov
pop
addl
fmul
lods
enter
test
pop
pop
push
or
mov
mov
fdiv
mov
and
mov
js
add
mov
sub
orb
sub
push
je
fistps
call
mov
sub
mov
ljmp
cli
in
xchg
sti
inc
adc
jle
hlt
and
xor
cmp
mulb
jno
lods
mov
or
add
out
sub
arpl
dec
sbb
mov
call
jae
jns
movsl
es
pop
rep
aad
adc
ss
movsl
fldl
lret
pushf
dec
outsl
fildl
mov
xchg
push
sahf
pushl
push
cld
mov
lock
lret
adc
ds
int3
into
jle
jbe
mov
call
icebp
pop
adc
dec
sbb
aas
pop
dec
jge
imul
out
sub
adc
adc
cld
sbb
into
in
cmpl
adc
add
in
je
sbb
aaa
fbld
inc
push
movsb
je
test
clc
push
test
loopne
in
and
inc
cli
fisttpll
js
out
inc
mov
mov
sub
lahf
push
stc
inc
call
in
xchg
nop
mov
xchg
mov
xchg
or
into
xor
inc
push
jecxz
inc
jno
lods
int
outsl
imull
stos
out
pop
cmpsb
aaa
daa
or
push
sbb
icebp
sbb
stc
xchg
stc
outsb
clc
pshufw
mov
add
jg
push
or
sbb
jne
icebp
aas
mov
xchg
arpl
out
sbb
mov
inc
inc
adc
idivb
pop
mov
mov
das
xchg
or
leave
lock
mov
mov
shrl
call
insl
or
add
xor
aas
addr16
lock
sub
sbb
fsts
mov
xchg
mov
push
test
jle
rorl
adc
push
cmp
cld
xchg
repz
stos
mov
mov
mov
or
repz
dec
adc
jmp
stos
js
ljmp
push
ss
push
pop
xchg
out
fimuls
and
and
mov
xor
scas
xor
icebp
into
int
jno
sub
adc
test
push
mov
rcrl
push
xchg
outsb
shlw
cld
outsb
stc
and
jp
mov
inc
and
xchg
popl
sbb
leave
and
cli
sub
mov
enter
sbb
jecxz
jns
je
mov
test
sbb
sub
out
adc
jbe
fidivrl
lea
jg
add
sub
movsb
cmpb
adc
cmp
jmp
fstps
adcl
mov
aam
inc
test
lret
sub
mov
gs
sub
cmp
pop
fmuls
movsb
out
enter
movsb
loope
faddl
and
repnz
cmp
ljmp
lods
adc
mov
jg
mov
xchg
jl
ret
repnz
mov
js
fadds
ljmp
adc
and
gs
xor
test
cltd
daa
addl
es
inc
or
xlat
jae
fstl
pop
jle
cld
jecxz
dec
int3
jmp
jo
sahf
and
sub
pop
sahf
fsubrp
scas
cmpl
push
jle
outsl
ret
dec
sub
jns
inc
mov
push
in
int
insl
mov
dec
add
ss
sub
dec
adc
xor
mov
xor
adc
adc
push
js
jo
push
out
push
xlat
arpl
xchg
or
xor
enter
dec
mov
xchg
push
std
sbb
mov
jg
fldcw
xchg
test
jbe
jb
sub
ja
aad
sbb
sub
jecxz
xchg
rcrb
repz
or
mov
icebp
cmp
out
icebp
push
push
loopne
adc
dec
aad
and
test
je
mov
add
inc
mov
push
or
addr16
daa
or
mov
into
cld
daa
out
add
cwtl
dec
ret
xchg
jnp
xor
xchg
leave
sub
test
fwait
xor
pavgb
jo
xor
push
in
shlb
shld
xlat
push
iret
ss
push
push
xor
inc
xchg
ds
cmp
xchg
mov
and
push
push
fdiv
sub
imul
call
adc
cmp
shl
icebp
rorl
add
inc
cmpsb
in
cwtl
jne
jo,pn
jb
cld
fistpll
aam
ret
push
notb
dec
fidivl
std
jae
in
jmp
mov
pop
divb
in
dec
aas
addr16
lret
cmc
mov
pop
push
cwtl
pop
lcall
or
test
orps
mov
lea
pop
jns
ret
and
jb
in
out
dec
out
loopne
or
xor
adc
cmp
cmc
inc
sub
dec
aas
pop
movl
add
push
jns
jg
cld
popf
sarl
js
ljmp
sub
or
xchg
iret
jg
mov
or
adc
xchg
or
hlt
inc
lods
cmc
mov
dec
mov
push
push
insb
pop
mov
lods
pushf
movsb
pop
xchg
stos
pop
xor
jg
jns
jl
daa
movnti
mov
or
push
test
lret
sar
mov
jge
scas
clc
cmp
mov
stos
xor
aad
inc
mov
fstl
xlat
lds
faddp
sar
or
mov
mov
sub
dec
in
cmp
cli
out
cld
inc
aaa
sbb
ss
jo
dec
imul
add
inc
and
mov
mov
fcmovnu
enter
testl
pop
sarl
or
stc
fsub
int3
xor
rcll
jmp
inc
in
fldenv
cli
push
jb
push
cmp
stos
mov
mov
repz
cmp
push
lods
adc
lods
mov
push
push
les
aaa
mov
and
push
pop
dec
lock
push
repz
or
daa
cmp
divps
adc
push
sbb
xchg
dec
mov
or
cmp
mov
dec
loope
dec
mov
push
push
xchg
pop
pop
aaa
jo
shr
xchg
fwait
test
ljmp
push
mov
mov
btc
loop
adc
pop
jb
or
mov
jl
push
mov
test
fsts
jp
int
cwtl
test
pop
inc
jmp
aam
call
pop
or
jl
ja
mov
ds
xlat
mov
popa
dec
movsl
xor
std
stc
cmpsl
cltd
scas
dec
sbb
insb
push
sbb
dec
xchg
mov
ficomps
pop
mov
lcall
mov
ret
fcomps
sbb
adc
subl
stos
fistps
dec
and
adc
mov
cmp
mov
decl
xor
jb
mov
xchg
pop
bound
fs
hlt
shll
repz
movsb
jns
pop
xchg
cld
jne
mov
and
sub
loope
or
cmp
and
inc
pushf
clc
and
mov
fisubs
and
or
push
and
inc
mov
iret
lds
xchg
scas
shrb
cmp
imul
cwtl
cwtl
iret
sbb
inc
jae
aad
das
cmpb
orb
aam
push
popf
xchg
mov
jnp
fistps
test
mov
push
out
adc
pop
xor
cmp
in
cmp
sar
and
loop
adc
mov
mov
outsl
je
or
push
int
cmp
adc
mov
loope
out
not
shrb
imul
mov
jae
lret
out
dec
jb
push
daa
filds
xor
dec
push
hlt
pop
out
cmp
cmp
fwait
sub
popa
outsb
push
inc
jp
mov
pop
mov
ljmp
lcall
divl
dec
out
mov
jg
jg
add
xor
fidivs
xlat
mov
mov
inc
or
push
or
adc
je
jecxz
dec
insb
sarl
jbe
mov
icebp
jl
mov
out
xchg
inc
fdivrs
mov
push
push
divl
add
add
orl
fwait
and
push
xor
jge
mov
sub
sbb
adc
stos
dec
std
das
in
or
xchg
mov
sub
popa
idivb
outsb
popf
xchg
rcll
and
sbbl
lea
pop
out
enter
lods
mov
mov
dec
push
aas
leave
sub
mov
aas
sub
pop
mov
aad
imul
loopne
daa
cmp
js
or
mov
dec
mov
in
in
bound
int
xorb
arpl
xchg
out
mov
adc
mov
int3
xchg
add
mov
pop
in
daa
xchg
xlat
cmp
outsl
push
aas
push
scas
mov
ds
test
sub
les
lahf
xchg
cltd
inc
sarb
imul
xchg
or
cmp
nop
jge
movsl
mov
add
rcl
in
jb
pop
scas
xchg
adc
xchg
pushf
mov
aad
dec
out
fmull
xchg
jae
push
mov
sub
sti
dec
cld
cmp
push
out
xlat
mov
out
xlat
xchg
mov
push
out
dec
mov
in
test
decb
je
adc
mov
rol
rclb
cli
add
daa
adc
cmp
arpl
inc
repz
add
add
hlt
gs
aad
aas
test
lock
enter
stos
cmp
push
mov
fisttpll
adc
jnp
pop
sbb
fildl
mov
add
dec
into
xchg
jg
repnz
das
jp
fsubr
subb
sub
pop
mov
int3
pop
sub
cli
loop
pop
pop
sbb
ljmp
icebp
rclb
sarl
stos
scas
loop
dec
inc
test
lea
stc
sti
pop
mov
xor
andb
and
ja
sbb
mov
dec
out
adc
je
fwait
push
dec
iret
jo
int3
rcr
dec
pop
rorb
in
scas
mov
adc
xchg
mov
jbe
inc
test
and
shl
aad
mov
into
cli
add
ficoms
cs
sbb
scas
test
test
sbb
inc
dec
push
dec
repnz
xchg
lret
push
xor
xchg
push
je
pop
dec
pusha
hlt
cmpsl
call
addr16
rcr
call
and
std
xchg
push
xor
mov
mov
pop
je
sbb
inc
jae
loop
jno
test
pusha
in
sbb
rcrl
mov
add
ss
aas
adc
mov
cld
sub
push
mov
xchg
out
jno
dec
mov
ret
popa
cltd
inc
repnz
push
and
mov
je,pt
push
add
hlt
int3
jl
dec
adc
imul
js
or
out
jmp
pop
mov
mov
push
pop
out
adc
in
test
sahf
push
jmp
mov
out
sub
jmp
jp
lret
add
inc
lods
adc
pop
xchg
push
adc
data16
jb
test
loope
jnp
mov
hlt
jmp
jns
sub
imul
movsb
jne
sbbl
dec
aas
cs
lcall
and
xchg
cwtl
loopne
mov
xchg
sbb
jno
sbb
xlat
sub
pop
rorl
or
pop
adc
scas
dec
xor
testl
sbb
add
ret
add
fists
mov
push
jge
stc
test
call
addr16
push
dec
clc
adcl
aad
push
jne
or
or
xor
mov
inc
mov
push
std
test
adc
aam
sub
jo
adc
pop
push
push
sbb
aas
or
jle
sub
push
sub
inc
mov
ds
xchg
pop
sub
dec
shlb
test
lods
sub
rolb
push
mov
jl
or
mov
jb
inc
mov
rcll
inc
lcall
add
andb
data16
pop
sahf
jae
aam
sub
add
mov
xchg
cwtl
xor
xchg
in
or
xor
cli
mov
adc
jl
mov
popf
fsubrs
xor
jl
popf
and
fcmovne
int
pushf
add
out
cwtl
call
mov
lods
scas
jge
ss
pop
xor
push
sbb
shrl
stos
xor
es
loope
adc
xor
rolb
mov
pushf
movsb
xor
shll
insl
data16
insl
xor
jae
outsl
or
mov
subl
loop
outsb
or
mov
aad
dec
es
xor
or
aaa
lock
cli
xor
cltd
mov
jns
jle
into
fisubrl
push
ret
cmp
int3
mov
sub
cmp
mov
popa
xchg
movsb
in
ss
cmp
outsb
mov
lods
xor
inc
lcall
stos
lret
jle
cltd
cmp
jo
loopne
stos
xor
ja
push
xlat
pop
faddp
ja
xchg
es
adc
pop
test
adc
jmp
idiv
test
sti
mov
aas
loopne
enter
add
and
and
cli
shrb
inc
dec
sbb
or
jp
fimuls
and
aaa
jg
push
inc
rol
addr16
xchg
jp
xlat
test
dec
scas
lret
pop
pop
mov
fdivl
ss
std
push
add
and
popf
loop
movsl
inc
add
insb
sbb
es
and
sub
fstps
scas
mov
int3
xchg
repnz
lods
sahf
mov
ret
add
js
addb
fdivl
mov
test
mov
shll
popf
mov
jb
lret
adc
lock
scas
cmpsb
test
mov
cltd
mov
mov
ret
jle
sbbl
cmpsb
repz
xorb
adc
jb
or
bound
add
insl
dec
mov
shll
repnz
aas
aaa
jmp
pop
scas
mov
fsubr
cmp
leave
pop
mov
mov
cmp
mov
sub
lahf
cltd
hlt
jecxz
or
sub
mov
mov
cmpsl
orb
ds
repnz
jae
ja
daa
fistpl
pop
inc
test
jl
push
fdivrl
sub
std
stos
ficomps
jp
addr16
xchg
or
cmpsl
and
lahf
lret
addb
test
push
xchg
std
jle
arpl
or
push
cs
shrb
es
add
sub
hlt
sar
add
into
pop
pop
mov
jae
pop
adc
mov
cmp
iret
fs
pusha
clc
in
out
or
fldl2e
sub
add
clc
lcall
add
je
mov
int3
aaa
rclb
cmp
test
cmp
inc
inc
and
sub
dec
cmp
cs
icebp
cmc
into
add
dec
and
adc
pop
xchg
outsl
and
mov
add
mov
mov
push
lea
inc
insb
mov
jb
xor
xchg
stos
jmp
mov
xchg
ljmp
cmc
mov
inc
int3
mov
in
xchg
scas
adc
and
fs
xchg
push
sub
mov
mov
cmp
cmc
inc
add
repnz
adc
add
insl
hlt
mov
ss
cmc
xor
popa
push
xchg
sahf
jge
iret
dec
test
adc
sbb
xor
je
pop
mov
fs
js
sub
in
sbb
add
jb
stc
adc
cmc
dec
mov
inc
movsl
xchg
shrl
sti
push
push
pushf
cmp
jge
or
movsb
test
add
dec
push
push
rcrl
adc
dec
xorl
mov
mov
sbb
jge
push
cwtl
iret
pop
es
add
in
cs
bound
fwait
sbb
loope
jl
add
mov
and
ffree
in
jmp
dec
add
arpl
pop
add
xor
adc
xchg
jns
pop
nop
adc
inc
lods
mov
xor
inc
xchg
repz
pop
push
add
mov
pop
adcb
repnz
or
push
xchg
and
cmovle
mov
lods
ja
repnz
mov
inc
or
or
test
dec
add
inc
and
lret
nop
icebp
test
mov
andl
ficomps
cwtl
cli
and
repnz
mov
or
repnz
imul
jb
xor
ret
jg
stos
cmpsl
add
fistps
nop
mov
clc
mov
cmp
mov
jle
cmp
adc
xchg
orb
adc
int
pop
call
xchg
shlb
add
orl
out
jg
adc
inc
mov
aad
pusha
push
mov
aam
sbb
fsubl
push
call
jl
adc
pop
sub
sub
xor
pusha
push
xor
je
pop
inc
ja
add
mov
or
or
lods
mov
pop
sbb
lcall
inc
inc
and
loopne
push
xor
and
in
rorb
jne
addl
xor
jmp
jb
jecxz
insl
shlb
test
aam
mov
inc
or
push
bound
fwait
xor
mov
adc
cmp
sub
pop
mov
repnz
mov
push
loop
sti
sbb
xor
shlb
sbb
ret
xchg
es
hlt
adc
inc
jle
pusha
adc
iret
into
ret
mov
mov
dec
aas
aam
add
xchg
jo
lea
jno
je
fistl
xor
dec
sbb
mov
jle
cmp
sti
sub
pop
std
in
jnp
aaa
inc
mov
xchg
adc
push
call
sub
cltd
fstpl
sub
test
inc
push
ret
insl
sar
xor
cmpsb
or
jns
rcrb
lea
nop
lock
adc
pusha
ret
push
aam
sbb
add
fildll
xchg
push
int
sahf
lock
popf
mov
loope
jle
xchg
xor
lods
pop
or
xor
test
scas
sbb
push
push
addr16
push
and
or
aam
inc
xchg
push
and
and
sub
pop
movsl
cmp
push
sbb
push
xchg
fistpll
fldenv
sub
xor
dec
ds
mov
xor
sub
add
sbb
or
movsb
jp
outsl
xor
leave
pop
fisttps
push
xor
iret
pop
jne
mov
popf
cmp
pop
ljmp
push
lods
xchg
sub
mov
shll
adc
fistpll
mov
adc
jo
sbb
icebp
mov
xchg
loopne
mov
sbb
and
jmp
lahf
test
xchg
int
pop
movsl
pop
push
add
out
lret
push
lcall
clc
and
insb
and
adc
adc
cmc
in
mov
in
or
mov
mov
jno
aam
test
dec
and
ret
and
cmpsl
enter
mov
ja
sarl
push
rorl
xorl
jge
push
jle
mov
push
pop
lcall
arpl
sbb
sbb
fildl
fwait
cmpl
adc
push
pop
out
adc
jno
xchg
mov
sbb
pop
dec
mov
fsubl
int3
dec
dec
and
cmp
add
test
cld
js
lcall
mov
es
pop
mov
sbbb
cmp
mov
add
dec
add
test
cmp
xor
xchg
adc
xchg
leave
jns
dec
and
repz
scas
mov
imul
repnz
cs
cs
and
in
jno
pop
ss
mov
jbe
mov
cmc
push
fdiv
push
mov
push
movsb
and
sub
leave
push
or
in
aad
jne
cmp
fldenv
cmp
fistl
xor
insb
pusha
xchg
je
aad
xchg
std
mov
gs
push
les
les
push
cmpsl
test
mov
inc
pop
pop
xor
jge
outsl
ljmp
clc
jmp
jno
jae
sbb
scas
fbstp
fmul
push
sarl
push
hlt
sbb
inc
sub
and
repnz
aas
aad
cmp
divb
je
sahf
sbb
fldl
mulb
mov
push
inc
pop
adc
scas
mov
test
cmp
jno
dec
fwait
insb
adcl
xor
xor
push
mov
nop
mov
bound
pop
cs
addr16
lcall
mov
mov
mov
jl
or
nop
add
push
mov
dec
pop
or
and
pop
sub
inc
test
mov
push
aaa
push
or
ljmp
cmp
sbb
jnp
jmp
mov
jl
inc
push
push
lds
xchg
jle
cmp
pop
clc
fstl
mov
test
std
ret
rorb
nop
out
xor
xor
jge
cmp
sbb
cmp
and
mov
int
sub
les
imul
mov
dec
add
dec
notb
jle
add
sub
int3
aam
fistps
jl
hlt
add
ret
adc
leave
mov
scas
fsubr
mov
mov
ret
jne
in
sbb
data16
mov
bound
inc
inc
pop
imul
mov
bound
cld
xlat
push
xor
push
je
or
inc
movsb
cmp
push
jb
sub
dec
out
test
out
test
mov
pop
nop
xchg
jae
test
xchg
cmp
add
pop
std
push
mov
lahf
hlt
mov
das
xchg
push
lea
mov
fiaddl
lock
cmpb
mov
pop
out
out
fidivs
mov
push
out
adc
rolb
aaa
rcll
jnp
test
inc
aas
xor
daa
jge
leave
xor
or
int
inc
arpl
in
xchg
lds
and
adc
test
int
ljmp
or
test
mov
mov
aas
mov
xor
mov
jb
in
jg
scas
pop
mov
adc
adc
mov
sub
cmp
out
adc
jns
stos
lds
mov
adc
sarb
scas
insb
inc
push
and
and
cmp
and
fisttps
xchg
arpl
shlb
je
push
in
mov
outsl
cmp
jb
test
int3
imul
sbb
pop
js
adc
mov
xor
sub
pop
test
and
stos
rcll
mov
roll
mov
xlat
iret
dec
add
cmp
mov
out
pop
adc
dec
mov
cmp
fsubrl
in
and
repz
jl
sbb
cs
jne
ds
rol
in
out
inc
push
xchg
inc
jne
sahf
and
ficoml
sub
or
int3
xor
mov
pop
sbb
fldt
je
jnp
imul
inc
movsl
scas
out
ja
pop
xchg
sbb
dec
cmpsb
repz
or
or
jbe
out
add
test
rorl
sbb
pop
arpl
add
addb
dec
ljmp
sti
jmp
mov
and
fidivs
outsb
shrl
xor
adc
mov
in
pop
aad
push
push
dec
mov
or
popa
xchg
sbb
es
es
in
jno
or
int3
fists
lret
sahf
mov
insl
pop
push
jb
add
scas
add
xor
gs
inc
mov
mov
repz
notl
shlb
inc
cs
sbb
out
inc
push
lret
xor
jnp
ror
int3
mov
add
sbb
mov
xchg
sub
arpl
jnp
or
sbb
sbb
xor
cmp
sub
lret
push
adc
and
sahf
xor
enter
out
clc
rcll
push
xor
lock
mov
add
int3
hlt
arpl
pusha
jle
sub
mov
popa
mov
xlat
pop
in
repz
out
aaa
push
sub
pop
cld
clc
loop
repz
mov
xchg
or
in
in
mov
dec
xor
xor
addb
push
jl
and
push
xor
inc
sbb
xchg
in
aad
test
cmc
leave
push
es
jbe
in
sub
push
imulb
pusha
outsb
lock
jns
lea
pop
dec
and
inc
inc
xchg
sbb
jmp
push
mov
and
ss
push
sti
cld
repnz
fs
sbb
push
jo
sub
sbb
adc
xor
outsb
mov
and
cmp
cmp
fsubrp
jp
aas
pop
sub
mov
or
jnp
bound
xor
shll
pusha
fs
pop
das
sub
lahf
or
xor
imul
fnsave
or
int
pop
push
imul
rclb
int3
push
ret
les
std
pop
dec
stos
add
mov
push
xchg
mov
sbb
sbb
sub
and
mov
cmc
dec
or
or
fdivrs
loope
out
jp
push
dec
mov
xor
or
sbbl
push
in
inc
mov
pop
jne
daa
mov
fsub
xor
and
pop
rcrl
movsl
call
in
mov
fildl
ret
adc
push
int3
and
mov
cmp
cli
sub
mov
arpl
and
lds
scas
mov
fiaddl
movsl
inc
mov
jge
push
mov
cmp
mov
pop
mov
sti
in
sbb
push
sbb
xor
fs
std
inc
add
sbb
stos
ret
xor
and
lret
push
test
adc
repz
rcrl
or
inc
cli
loopne
popa
sbb
jle
scas
cmp
jg
aam
sarb
mov
inc
popa
push
push
push
int
icebp
sub
arpl
sub
or
jbe,pn
or
jno
sub
jg
imul
dec
aad
jnp
jecxz
and
pop
dec
imulb
jno
test
jl
mov
mov
cmc
outsl
lods
xchg
nop
sub
icebp
lcall
push
rcr
jne
mov
test
push
jo
sub
pop
pushf
jmp
insl
dec
xchg
out
push
push
iret
mov
ffree
mov
test
mov
in
iret
pop
fisttps
std
mov
cmp
push
loopne
popa
sub
or
loop
clc
push
in
popf
hlt
lock
cvttps2pi
pop
int3
fstl
inc
sub
mov
push
imul
aaa
int
mov
mov
cmpsl
bound
bound
mov
ret
mov
mov
nop
imul
sar
add
inc
inc
insb
rcrb
adc
cli
mov
mov
inc
jb
mov
sub
sti
in
mov
mov
lea
fwait
and
inc
inc
sbb
test
out
jns
sbb
mov
xchg
mov
jge
xor
lret
imul
dec
add
and
xchg
loop
in
jno
outsb
mov
jne
mov
popf
cmp
ficomps
mov
sbb
push
and
fmuls
or
test
mov
and
inc
pop
mov
mov
or
fdivrl
cmp
xor
or
pop
or
xchg
repz
or
je
pop
xor
inc
repz
stos
aam
adc
rcr
int3
pop
mov
add
daa
adc
rolb
lcall
iret
push
cmp
dec
arpl
lds
adc
and
jle
into
push
adc
out
sbb
dec
cwtl
repz
decb
cmp
or
xchg
sub
leave
loopne
jbe
push
add
or
sbb
sti
xchg
push
adc
xchg
pop
adc
sti
mov
bound
daa
ficomps
cli
rcll
sarb
mov
push
gs
xchg
mov
jp
or
sbb
stc
or
pop
mov
scas
movsb
sbb
mov
push
out
cmp
pop
andl
push
xor
push
mov
int3
mov
fisubrs
mov
lock
dec
inc
std
in
xchg
push
movsb
mov
sbb
inc
sbb
in
dec
and
xchg
jb
out
mov
and
stos
daa
pop
sbb
bound
fs
pop
add
ret
jle
stos
lds
andb
jl
lods
mov
pop
adc
fisttpl
pop
sarl
xor
sub
fldl
fdivp
pushf
cmp
or
loope
mov
mov
fsts
push
repnz
jle
sub
out
push
or
jle
xor
int3
mov
jbe
stos
pop
mov
pushf
mov
sbb
aad
push
nop
cmp
or
popf
xchg
xor
xchg
push
stc
in
jo
and
cmp
mov
loop
shll
stc
repnz
outsb
gs
mov
adc
inc
pop
dec
push
leave
test
add
loop
add
cli
sahf
cwtl
fs
and
inc
add
js
jnp
and
dec
iret
cld
push
cmpsl
insl
cmp
inc
sub
test
lods
pop
stos
and
xor
hlt
mov
out
mov
insl
mov
adc
add
bound
stos
mov
or
repnz
jbe
and
adc
dec
lea
jg
mulb
lds
rclb
mov
sub
lods
xchg
add
cld
sarl
and
scas
inc
xlat
adc
cli
pop
out
gs
cmpsb
push
or
or
dec
in
imul
jp
cmp
jnp
in
xchg
dec
leave
jno
popf
bound
mov
pop
lock
cmp
dec
stos
mov
sub
push
push
test
outsb
js
jecxz
lods
roll
mov
stc
dec
in
push
mov
decl
xor
jo
or
fwait
movsl
cmpb
jle
inc
je
cmc
cmp
mov
inc
test
mov
ss
xchg
cmc
mov
lea
mov
adc
adc
insl
add
sarl
stos
push
ficoms
stc
dec
loope
mov
add
sub
enter
sub
and
cmpsl
adc
add
inc
mov
adc
pop
xchg
ds
xor
leave
jmp
int3
xor
push
test
mov
arpl
dec
xchg
bound
pop
xor
jmp
movsb
cwtl
dec
mov
push
cmp
data16
or
mov
and
cmpsb
xchg
pop
dec
jns
inc
popa
and
bound
stos
in
js
pop
dec
push
xor
bnd
fistpl
mov
jnp
mov
loopne
loop
sbb
sbbl
fcomp
out
daa
into
mov
mov
sbb
push
mull
mov
lcall
lret
mov
mov
sbb
or
ret
and
fiaddl
sub
ret
sub
jb
inc
or
cltd
jmp
daa
int
lcall
dec
mov
mov
jbe
jl
push
outsb
jg
outsl
mov
scas
loope
addr16
pop
and
pop
test
bswap
inc
cmp
inc
cmp
repnz
inc
stos
jo,pt
int
dec
das
pop
divb
jmp
pop
lret
shrl
rorb
cmp
sar
and
clc
lea
xchg
fdivp
adc
xlat
or
xor
xchg
out
mov
push
fidivs
enter
shrl
mov
pop
ret
push
pop
inc
es
xor
stos
jg
cmp
inc
xor
aas
jns
outsb
or
dec
or
and
jmp
in
jg
mov
mov
xacquire
in
ds
push
push
xor
inc
cli
fsubrl
cmc
dec
jb
insb
lret
add
aam
dec
std
and
sub
rcrl
outsl
clc
sub
push
mov
push
dec
ret
int3
int
out
cwtl
aaa
fs
fldcw
inc
and
imul
dec
xchg
repnz
sahf
std
adc
inc
insl
pop
cmp
dec
jge
in
in
cli
xchg
scas
lds
push
popa
loop
mov
pop
testl
fisttpll
mov
in
addl
jns
movsl
pop
loope
xchg
mov
cmp
setne
fdivp
mov
mov
fstpl
jae
cli
and
ljmp
call
mov
shll
adc
or
out
jnp
inc
cmp
mov
and
xchg
mov
mov
sbb
daa
xor
or
mov
es
rcr
jl
sub
hlt
add
loop
call
mov
fwait
addr16
fstps
jb
scas
stos
add
mov
outsl
push
inc
stos
aaa
cli
sub
stos
test
pop
cwtl
inc
aam
inc
push
wrmsr
sub
sbb
aas
cmpsl
pop
data16
mov
dec
icebp
mov
int3
int3
sub
ss
sub
fisttpl
xchg
in
bt
aad
imul
mov
add
addr16
mov
fsts
inc
inc
subl
jge
ljmp
mov
movl
into
ret
xor
imul
test
push
push
es
xchg
stos
cmp
mov
mov
jno
jmp
shrb
lock
and
bswap
scas
data16
inc
iret
dec
mov
xchg
aad
in
clc
sarl
push
mov
or
inc
push
push
mull
std
movsb
push
dec
cld
addr16
cs
in
mov
and
imul
fisubl
lahf
aas
scas
testl
jge
and
aad
mov
inc
inc
mov
pop
mov
cmpsl
in
sbb
leave
clc
dec
inc
ss
insl
mul
mov
aas
iret
mov
mov
gs
out
arpl
fisttps
cwtl
loop
pop
jmp
xor
and
shll
daa
mov
adc
dec
inc
in
rcrb
inc
xchg
or
jns
xor
push
or
add
sub
mov
mov
dec
ss
jmp
jne
data16
add
and
aam
mov
mov
repnz
jge
mov
fildll
jmp
cmp
jl
ds
sub
xchg
push
xor
roll
test
and
sbb
pop
pop
and
imul
in
xor
fiaddl
mov
pop
ret
stc
cmp
jne
and
sub
xchg
dec
sub
sbb
cmpsb
and
ss
push
mov
cs
pop
sbb
sub
pop
fnsave
push
loop
bound
mov
insl
fimull
clc
addps
loopne
pop
leave
sbb
fs
cwtl
push
xchg
das
movsl
es
dec
fldenv
jns
cwtl
popa
loopne
aam
sar
ret
fstpl
sbbb
and
dec
je
inc
lods
loop
jmp
loope
jns
out
stos
adc
fucom
mov
mov
pop
nop
cmp
adc
je
cs
mov
and
mov
adc
divl
mov
mov
aaa
sbb
jmp
xor
add
out
mov
icebp
sbb
or
sbb
decl
cmp
in
lahf
sub
pusha
xorl
lahf
mov
jb
dec
cmp
adcl
shl
gs
gs
fiadds
dec
test
popa
jb
movd
adc
jl
dec
jne
aam
scas
rolb
inc
pushl
aaa
add
mov
das
sahf
lods
or
xchg
lea
pop
cmp
hlt
repz
xor
cli
lods
and
mov
cs
jo
jmp
sahf
lahf
xlat
ljmp
xchg
es
movsb
inc
mov
dec
add
dec
add
push
cmp
sahf
out
jecxz
mov
pop
or
shl
cmp
cltd
dec
je
or
add
sahf
pop
outsb
or
push
pushf
lret
cltd
push
pop
or
jecxz
mov
push
shlb
cmpsl
add
pusha
push
mov
dec
test
hlt
xor
sub
xlat
jg
dec
pop
mov
js
out
gs
sub
jnp
in
pop
push
jmp
repz
push
sti
sub
mov
aam
sti
sti
add
test
cltd
clc
rorl
or
sub
cltd
xchg
mov
mov
fwait
cmp
jbe
shrb
repnz
ds
and
aas
movsl
fbld
cmpsl
sub
lret
and
dec
adc
es
jg
fdivrl
xlat
sub
sub
cmpsl
bound
sbb
dec
cmp
ljmp
pop
test
repz
cwtl
aad
dec
popa
lods
pop
subl
and
je
push
or
sti
in
hlt
loop
repz
xor
dec
or
jecxz
es
movsb
dec
pop
sahf
sub
push
dec
pop
adcb
pop
dec
ffree
pushf
movsb
insb
dec
test
adc
xor
xchg
xchg
sub
bound
push
sbb
or
mov
push
popa
pop
int3
mov
add
ja
or
out
pop
lret
shll
rcrl
cmp
mov
outsb
je
mov
pop
jbe
fldenv
and
dec
push
and
jae
es
mov
jecxz
cmp
ja
gs
out
mov
inc
mov
pop
pop
jecxz
mov
test
lods
jnp
jnp
imul
jb
stos
push
dec
call
cltd
int3
or
jbe
or
dec
adc
mov
call
sahf
pop
lahf
test
out
add
data16
jb
adcl
xchg
rclb
dec
xchg
sub
xchg
sbb
cmp
sub
mov
lods
loop
and
cmp
xor
cmp
out
addl
lahf
js
xor
mov
jmp
jmp
xlat
loope
bswap
das
cmpsl
movsl
sub
push
sbb
ja
dec
fadds
ss
cmp
add
sbb
pop
iret
ficoms
mov
mov
addl
test
pop
dec
xlat
jno
jmp
xchg
lea
iret
xlat
mov
xchg
fwait
data16
xchg
cwtl
rcrl
adc
add
add
xor
sahf
jb
cmc
pop
push
or
push
pop
dec
push
or
push
jmp
add
jbe
mov
xchg
push
mov
lods
repnz
dec
out
pushf
gs
mov
cmpb
mov
cmpsb
les
leave
aaa
scas
test
daa
cwtl
stc
aad
sbb
test
in
lret
sub
into
cmp
mov
push
shlb
dec
iret
jb
stos
push
lea
cmc
and
clc
and
xchg
xchg
out
imul
jae
movsl
sub
pop
cwtl
pop
mov
xchg
mov
pushf
or
nop
das
shlb
and
dec
mov
jmp
jecxz
mov
mov
mov
dec
fnstcw
imul
pop
push
sub
dec
push
std
insl
data16
mov
inc
jnp
or
filds
aas
xor
cs
std
cld
sbb
mov
ffreep
mov
filds
aad
or
or
mov
xchg
push
dec
bound
test
loope
xchg
jg
jmp
add
mov
test
inc
das
addr16
mov
add
bnd
push
ljmp
pop
pop
in
cmp
jp
pop
popa
mov
push
out
mov
jl
pushf
ja
cmp
jmp
add
outsb
xor
inc
jmp
in
lds
ljmp
sub
pushf
rcrb
adc
addr16
call
xlat
divl
pusha
pop
mov
ds
enter
sub
popf
leave
ret
mov
adc
sub
mov
mov
add
add
dec
insb
adc
mov
adc
pop
fisubrl
inc
xchg
imul
inc
xor
sbb
or
mov
test
pop
hlt
inc
imul
nop
dec
insl
out
fwait
mov
or
lret
and
jmp
movsl
mov
dec
sub
insb
adc
xor
nop
cs
stos
cltd
push
adc
mov
inc
leave
icebp
mov
dec
gs
push
lock
mov
jl
mov
mov
xor
stos
aaa
ljmp
in
data16
sbb
push
jg
adc
xchg
pop
pop
add
sbb
dec
lret
xchg
wrmsr
adc
mov
insl
jae
and
push
xchg
mov
movl
cmp
ret
add
xorl
imul
sub
dec
pop
xchg
into
xchg
dec
aas
jb
std
shlb
inc
mov
inc
push
js
inc
fwait
xor
ja,pn
fimull
arpl
out
pop
adc
mov
icebp
inc
sub
jb
add
adc
mov
pop
fnstsw
pusha
popf
lret
das
sbb
movsl
aam
push
xor
bound
mov
mov
push
xor
ret
sbb
lods
bound
std
imul
push
mov
mov
bound
sbb
xchg
les
xor
scas
add
push
jmp
xor
push
shr
rcr
outsl
repz
jb
or
jle
pop
lahf
fadd
nop
pop
ss
jno
popf
aam
jnp
pop
bound
inc
mov
cld
or
lds
sbb
push
fwait
and
jns
mov
pushf
xchg
int
movsl
jmp
rcrb
sub
cli
dec
dec
xchg
sub
leave
or
inc
es
sti
pop
sub
mov
push
jb
fsubl
loop
outsl
xchg
or
dec
mov
xor
sahf
jmp
jae
rcrl
or
lods
mov
cmc
xchg
cmpl
idivb
inc
jne
pop
sar
icebp
testb
ljmp
xchg
neg
pop
inc
fcmovne
cli
mov
push
mov
xor
xchg
push
sbb
rcl
loope
inc
pusha
out
pushf
jne
fistps
cmpsb
scas
sarb
push
adc
xlat
xor
cmp
cmpsb
in
repz
sbb
xchg
loope
add
mov
add
xlat
mov
push
in
mov
mov
jle
rcrl
cmpsb
and
lret
push
ret
lret
pop
add
mov
pop
xchg
in
cld
mov
jbe
mov
negb
and
dec
fcompl
cltd
aam
insb
test
dec
sub
daa
sbb
mov
into
scas
mov
shrb
jge
dec
and
cmp
pop
mov
cmp
and
outsl
addr16
or
add
rcll
pop
inc
aam
prefetcht0
push
and
sub
sub
pop
jns
xlat
xchg
outsb
dec
lret
daa
mov
ja
int3
sarb
js
cltd
aad
cmpsb
xchg
clc
mov
flds
aam
push
or
xchg
push
icebp
push
inc
shrl
fcmovb
iret
flds
nop
pop
sub
xchg
add
inc
pop
xor
push
add
cmpsb
in
fisttpll
fwait
push
lock
jp
push
gs
imul
jo
lock
mov
rcl
jle
int3
inc
xor
add
into
fcmovb
pushl
loope
adc
mov
or
pop
out
dec
in
lret
sbb
sub
push
loope
jle
pushf
or
nop
add
add
mov
and
push
pop
adc
cmc
push
fsts
jo
pop
jge
lea
test
cli
cwtl
lret
loop
sub
shll
sbb
aam
sahf
mov
mov
sub
insb
faddl
pop
jns
test
pushf
sub
dec
arpl
inc
cli
out
in
xchg
aaa
int3
cmp
or
add
xor
fld
in
rcr
cmp
sbb
iret
rorb
xor
mov
push
movsb
pop
push
inc
and
sub
jg
or
mov
add
jmp
mov
popf
xor
push
subb
nop
repnz
out
jp
pop
iret
adc
leave
or
mov
sbb
xchg
push
ret
leave
test
and
test
mov
fisttpll
push
rolb
lock
inc
arpl
xchg
dec
push
inc
cltd
popf
sbb
push
fisttpll
fisttps
pushf
xlat
fwait
inc
adc
push
mov
mov
mov
mov
mov
cmp
shl
dec
imul
popf
and
leave
mov
adc
outsl
sbb
dec
nop
mov
or
movsbl
xor
lds
into
repz
loope
mov
out
jmp
jle
pusha
cmp
add
add
mov
dec
jmp
inc
call
cmc
xor
imul
sub
leave
inc
or
pushf
jo
roll
mov
repz
leave
and
sbb
inc
push
jg
xchg
mov
sub
sbb
ud2
push
dec
and
hlt
xlat
add
in
out
xchg
insb
out
lcall
pop
push
push
jl
pop
jp
push
lret
add
jb
pop
adc
mov
or
push
adc
mov
mov
cmpsl
test
rolb
push
sbb
fs
call
pop
jl
les
imul
sub
push
push
es
in
lcall
pop
pop
cwtl
xor
mov
int
sti
fsubrl
mov
loope
mov
mov
mov
adc
mov
inc
dec
xchg
xor
rolb
adc
or
in
sbb
push
out
jmp
pushf
and
lahf
push
cmpsb
inc
sbb
stc
xchg
filds
push
mov
in
pushf
call
fptan
mov
push
je
cmp
in
dec
cmp
clc
and
sub
loop
sub
push
xchg
push
push
xorl
push
mov
enter
cmc
jae
push
push
arpl
cmp
push
and
movsl
negb
push
cwtl
stc
sub
mov
mov
popa
mov
mov
decb
jecxz
add
jmp
pop
shrl
addl
movsb
xchg
sarb
test
sub
pop
pop
ds
and
data16
dec
adc
lcall
mov
ds
test
mov
jnp
lret
mov
and
mov
inc
and
mov
sbb
out
jmp
daa
mov
cmp
push
jg
push
dec
cmp
les
sub
adc
push
stos
scas
push
addl
ficompl
push
sahf
dec
jl
dec
stos
jnp
push
adc
aaa
xchg
add
pop
loopne
popf
mov
mov
adc
push
push
push
add
dec
insl
insl
pop
sbb
cmpsb
out
add
push
test
inc
into
cmpl
cmp
fnstenv
push
cltd
fldcw
pop
cmpsb
jge
ja
mov
das
int
pop
les
clc
hlt
in
out
push
cmp
int3
jno
jne
scas
sbb
in
cmp
mov
push
rolb
and
xlat
jne
mov
pop
sti
int3
shll
cwtl
xor
bound
mov
lea
fimuls
ficompl
xchg
inc
or
mov
stos
cmpsl
pop
push
xor
xchg
fsts
adc
dec
in
stc
jl
jmp
mov
xchg
push
neg
jbe
ja
out
xor
jne
insl
call
ljmp
lret
nop
shrb
add
jno
in
mov
inc
pop
ds
jns
dec
ljmp
mov
int
mov
call
and
sahf
ret
leave
aam
shrb
ss
leave
fs
fdivl
in
loope
stos
xchg
daa
idivb
and
into
scas
xor
inc
mov
das
imul
cmp
mov
aas
nop
add
add
mov
sbb
mov
fabs
and
pop
inc
xchg
lea
and
fwait
call
add
jno
fmuls
dec
xor
sarl
dec
imul
add
pop
pushf
pushf
xchg
fnstsw
or
xor
nop
dec
and
mov
jecxz
outsl
sub
push
jecxz
mov
loopne
jbe
les
sub
pop
add
pop
mov
insl
jl
jb
cmp
cmc
push
cltd
fistps
lods
cmp
insb
sub
mov
mov
aam
xchg
ja
test
adc
lahf
inc
xchg
mov
fistps
lret
push
sbb
mov
insl
cmpl
mul
shrb
and
xchg
fdivl
or
pop
ja
inc
pop
inc
shlb
cmpsl
pop
push
mov
inc
loop
bt
insb
xchg
call
movsl
mov
subb
lret
pop
scas
call
int3
add
sub
clc
dec
sbb
jmp
mov
push
adcb
stos
js
add
jno
push
dec
jb
into
call
out
loop
cmpsb
mov
lea
pop
shr
stc
es
aam
push
push
xchg
out
mov
pop
mov
orb
xchg
ss
sar
movups
int3
pop
mov
stos
add
ljmp
js
xchg
inc
pop
mov
jg
bound
lea
dec
stc
dec
pusha
daa
mov
lods
imul
je
push
aaa
mov
or
mov
dec
or
ficomps
pop
sbb
cmp
out
out
pop
mov
cmc
test
test
lahf
mov
cs
xchg
push
pop
mov
xor
and
shlb
test
jg
ret
mov
in
cmp
mov
or
jnp
fistl
lods
pop
push
mov
push
cli
sub
jge
mov
jns
std
mov
mov
adc
mov
cs
mov
or
xchg
jns
push
inc
clc
loop
lock
dec
pushf
xlat
and
ja
pop
sbb
sbbl
mov
xlat
out
jmp
xchg
sub
outsb
and
xchg
inc
out
pop
int3
mov
push
int3
daa
sub
cmpsb
push
mov
push
mov
sbb
push
jns
in
dec
mov
cld
xchg
push
jg
insb
dec
les
aaa
cmp
test
test
and
repz
push
jmp
jae
pop
xor
rorb
ret
dec
push
adc
mov
mov
sub
cmp
push
jge
lret
pop
or
mov
leave
outsb
into
mov
add
pop
dec
fs
fisubs
and
push
push
dec
jb
mov
fisubl
int3
push
mov
push
out
jno
lods
adc
jbe
aas
inc
xchg
sub
mov
pop
push
stc
sahf
cmc
fidivrl
xor
inc
add
test
xchg
aam
push
mov
scas
cmp
mov
stos
mov
push
and
decb
popa
and
movsl
pushf
dec
mov
mov
xlat
fdivrl
cmp
inc
call
fistpll
push
adc
fbld
bound
sbbb
xchg
xchg
push
fsubs
sub
ja
cltd
pop
mov
test
fdivrs
ljmp
cs
mov
cmp
xor
shrl
es
mov
rol
or
fsubrs
sbb
andb
mov
jbe
std
mov
hlt
pop
adc
jnp
gs
cmpsl
clc
dec
hlt
lock
fcmovne
sub
pushf
mov
sti
test
inc
adc
lock
insl
pushf
mov
push
iret
fcmovb
test
xchg
cwtl
ret
fsubs
in
gs
xchg
adc
pop
jg
inc
out
enter
stc
dec
sbb
leave
leave
mov
pop
cwtl
jnp
push
adc
mov
stos
xor
in
test
imul
test
into
dec
push
stc
push
cmp
xor
popa
bound
sub
addr16
pushf
cmp
rcrb
ljmp
mov
mov
out
pop
fldt
mov
sub
movsb
inc
arpl
mov
xor
mov
fdivrl
push
mov
cmp
jle
andl
data16
lods
inc
push
jp
mov
mov
insb
xor
mov
xor
hlt
call
mov
sbb
movsl
test
pop
mov
loope
add
mov
xchg
push
cwtl
shrb
hlt
add
pop
into
add
xchg
and
insl
push
int
sub
fdivs
and
push
fstpl
pop
aaa
mov
mov
sti
aaa
cmp
jl
adc
inc
jns
dec
test
ret
xor
xchg
push
fmull
repz
cltd
sbb
sarb
or
idivb
xchg
repz
xchg
ret
std
lahf
test
cwtl
mov
or
pop
ret
sub
or
sar
daa
rcl
xchg
sbb
outsl
outsb
inc
cmpsb
shll
pushl
sarb
test
jnp
inc
and
lods
bound
inc
mov
pop
adc
add
push
inc
jp
inc
sub
iret
adc
loopne
push
pushf
or
sarb
mov
add
or
jns
shll
cli
push
scas
repnz
cmp
daa
daa
xor
cmp
push
cmpsb
mov
sub
ss
pop
es
out
bound
pop
lds
push
cltd
sti
lret
test
mov
cmpsb
cs
testl
sub
xchg
sbb
cmpsb
repz
sbb
test
fs
lcall
xchg
pop
dec
dec
enter
pop
arpl
pop
push
leave
mov
out
je
fwait
or
ret
mov
in
pop
popa
cmp
adc
add
pusha
popa
xor
adc
int3
xchg
fwait
cmp
into
mov
or
stc
test
adc
jns
sub
xchg
pusha
aad
jo
ss
pop
and
jbe
xor
dec
stc
push
scas
outsb
jg
pop
xor
sbb
sub
mov
jne
lret
fs
adc
ret
mov
das
or
jns
das
pop
loope
outsl
cs
outsl
sti
cs
sub
pop
dec
mov
fisubl
inc
hlt
push
das
fcomps
sbb
scas
das
sbb
inc
or
dec
add
das
xor
mov
add
rcr
push
or
lret
out
push
loopne
mov
and
cmpsl
cmp
mov
pop
inc
and
rorl
pop
test
cmc
orb
clc
aad
jo
cmp
or
mov
mov
jg
jle
adcb
sbb
mov
nop
andb
jae
pop
push
int
dec
lcall
xor
sub
into
push
push
adc
out
sub
dec
and
stc
movb
xchg
arpl
mov
xor
out
adc
push
jno
sub
and
repz
push
movsb
or
mov
pusha
loope
cli
mov
std
mov
lock
mov
dec
xor
mov
cmp
sub
ljmp
adc
mov
cltd
push
aas
out
sbb
pop
ljmp
fsubrl
scas
lea
pop
lea
out
xchg
push
and
aas
aad
cmp
repnz
lret
fbstp
ja
sbb
loop
in
lahf
fisubl
movsl
push
or
push
cmp
es
int
xor
xor
jae
in
dec
jb
mov
inc
sti
divb
add
xlat
push
inc
xchg
lods
jno
lods
in
je
mov
int
sub
repz
dec
je
and
mov
xor
dec
insl
leave
inc
jg
pop
dec
je
cmp
dec
adc
mov
clc
xor
fcom
mov
ret
cmp
sbbb
in
cmp
jg
xor
daa
xchg
loopne
jne
shll
cmpsb
jg
test
mov
insb
in
test
or
scas
pop
inc
into
in
cmp
jno
ss
and
cmp
cwtl
andb
xor
dec
push
fwait
fs
xlat
fwait
dec
cmpsb
ret
je
roll
lret
out
repz
dec
sarl
sbb
mov
pop
xor
jle
mov
pop
push
cltd
lcall
xchg
sbb
jmp
pushf
stos
jno
or
into
add
sti
loope
sbb
jmp
jno
push
dec
ljmp
sub
sbb
sub
cmp
test
je
in
xor
stc
rclb
sub
pop
pop
aam
pushf
pop
lock
shlb
pop
aad
xor
aad
lods
mov
jmp
dec
dec
daa
cmc
adc
mov
cmpsb
adc
inc
orb
fistpll
aad
xor
mov
cmpsl
shrb
sub
or
dec
pop
mov
nop
xchg
enter
test
add
das
adc
daa
pop
scas
xchg
pop
pushf
sahf
cmp
orb
add
push
and
jecxz
pop
cmc
fs
and
push
lcall
andb
shlb
pop
int3
jns
arpl
mov
pop
psubsb
fldt
into
call
sub
mov
sub
divl
cmp
dec
test
xorb
sahf
aas
or
fisttpl
sbb
xor
imul
cli
sub
imul
jmp
sbb
add
shrl
call
and
ljmp
int
sahf
or
fs
int3
pop
das
rclb
mov
cmp
xor
jae
adc
xor
mov
lds
insb
sub
dec
lock
mov
ja
ret
fnstcw
fdivl
xchg
pushf
mov
out
xchg
out
mov
xchg
add
lods
add
aam
addr16
xchg
jmp
cmp
lcall
and
pop
mov
divl
xchg
mov
xor
jl
mov
pop
inc
lock
mov
rorb
xor
dec
scas
jmp
adc
xchg
dec
loop
mov
loope
push
punpckhwd
jle
test
cmp
cli
fcomps
push
mull
inc
popf
repz
push
gs
aas
lcall
sub
aad
stc
loope
rclb
mov
popa
jb
sub
xor
int3
subb
or
addr16
adc
daa
sti
les
and
imul
daa
xchg
xlat
pop
dec
mov
add
xor
xchg
aam
dec
mov
mov
rorb
sub
and
ret
repz
jge
sub
ss
push
cmpsb
aaa
mov
mov
idivb
arpl
mov
rorl
dec
cmp
mov
sbb
add
xchg
popf
lock
js
repnz
xchg
cmp
outsb
cmp
and
mov
lods
aad
push
in
xor
pusha
and
outsl
xor
mov
sub
sub
movsb
cmp
shrb
int3
xchg
test
sub
movsl
out
insb
frstor
pop
repnz
adc
mov
cld
adc
add
adc
jo
sub
lret
push
adc
or
sbb
dec
inc
and
enter
stos
stos
inc
loopne
loop
inc
sbb
movsl
lea
lods
cmpsl
add
push
jp
xchg
iret
jmp
or
cli
sbb
out
inc
and
mov
nop
mov
mov
inc
pop
push
jg
out
adc
jno
in
add
outsb
bound
mov
push
testl
mov
mov
daa
lahf
push
add
dec
sbb
rol
xchg
std
mov
out
pushf
xor
inc
test
xchg
mov
xor
push
and
and
incb
pop
testl
jns
xchg
pusha
fdivrp
repz
mov
cmp
or
jle
jg
insb
push
adc
imul
pop
or
lds
jno
jns
cmc
into
cmp
outsb
das
lea
inc
xlat
sub
dec
push
lds
pop
adc
js
gs
sbb
daa
enter
fsts
jg
cmc
mov
nop
mov
jne
mov
mov
in
lock
ffree
lods
cli
sbb
movsl
and
dec
inc
mov
lcall
adc
dec
cld
and
xor
call
jle
mov
ror
fdivr
stos
cmp
inc
sti
jecxz
xlat
xchg
stc
and
inc
pop
push
cmp
inc
jae
adc
xlat
aad
mov
lea
stos
inc
jle
int
in
jl
out
inc
push
cmp
cmp
mov
movsl
arpl
dec
inc
popf
and
mov
fs
rcrb
or
fdivr
lahf
adc
dec
enter
fs
out
in
lds
mov
mov
insb
lods
mov
and
fists
sub
dec
outsb
loope
push
adc
mov
jg
xor
inc
lea
or
pop
ret
xor
mov
pop
test
cwtl
shlb
out
inc
dec
dec
lds
shrl
in
fdivp
mov
mov
mov
sbb
adcl
and
push
ja
ret
std
pusha
jb
jne
in
jno
xchg
pop
mov
outsb
or
pusha
aas
icebp
cmpsl
add
into
xor
out
and
push
jns
loop
ret
test
jo
mov
inc
test
mov
mov
clc
stc
fsubp
and
xchg
lcall
es
add
fldl
and
pop
or
scas
outsb
sbb
xchg
sub
mov
clc
jg
out
and
pop
lcall
sti
in
nop
sub
or
xchg
inc
push
out
dec
sbb
xchg
cmp
push
pop
cli
js
mov
bound
jae
inc
pop
sbb
loope
in
jp
call
fildl
push
sub
cwtl
ret
cmp
inc
lock
imull
out
jg
imul
ficoml
jae
xchg
add
cmp
push
outsl
sub
fstps
sbb
inc
push
adc
movb
jp
mov
pop
sbb
stc
aad
ficoms
bound
divb
sbb
jo
mov
cli
flds
sbb
adc
xor
sbb
adc
repnz
out
mov
fiadds
scas
daa
aaa
adc
leave
lret
ja
scas
call
in
inc
jmp
out
ret
and
lcall
cmp
cwtl
xor
movsl
rclb
jnp
sahf
push
stc
push
es
add
xorb
xor
adc
dec
jns
stc
cli
inc
je
pushf
movb
out
cmp
mov
in
sub
std
mov
push
push
push
lods
mov
sbb
ljmp
jae
ret
add
jle
dec
clc
repz
ficomps
dec
xor
push
shl
cvttps2pi
mov
jae
inc
mov
sub
pop
fisubrs
aaa
push
push
clc
jnp
ss
jo
cmp
lcall
lods
sarl
xchg
lahf
imul
fildll
jnp
sub
ja
ret
jecxz
sub
jo
ret
fdivl
mov
jecxz
sub
enter
sbb
ljmp
rclb
mov
and
fisttpll
add
xchg
sbb
repnz
outsl
jg
jecxz
je
cmc
push
faddl
movsb
aam
divl
and
mov
mov
inc
mov
outsl
mov
xor
sahf
scas
cmpsb
in
call
pop
hlt
aam
mov
mov
jmp
lds
out
jns
jge
push
je
clc
test
out
push
push
insb
cwtl
xchg
mov
pushf
push
mov
pop
xor
ret
or
pusha
inc
push
int3
lods
sub
lods
inc
sub
mov
test
in
mov
pop
pop
lret
and
lahf
sbb
push
rcrl
mov
push
jp
test
and
xor
push
ret
xchg
test
pop
pop
insb
std
insl
loop
push
popf
push
dec
sub
add
push
jmp
dec
or
dec
ja
sbb
mov
and
int3
imul
cmp
sbb
add
stc
in
jecxz
cld
inc
dec
and
stc
adc
loop
out
or
shlb
iret
dec
ja
fnstcw
aaa
js
mov
lea
cmc
jl
xchg
cltd
jnp
inc
jle
push
and
or
das
lret
mulb
pop
sbb
dec
xchg
mov
fnstsw
out
nop
mov
cmp
lret
sub
xchg
lret
arpl
mov
outsl
ds
push
insl
mov
lahf
mov
jmp
jmp
jns
roll
sbb
inc
mov
cmc
ja
xor
sub
xchg
inc
push
xor
sub
fwait
cmp
jg
out
sub
xchg
mov
xorb
sub
dec
sub
stos
xchg
stc
inc
rcr
inc
mov
mov
sbb
lret
and
push
out
lret
shl
ja
cmp
inc
popf
jl
aam
insl
adc
sub
mov
mov
int3
lret
sarb
sbb
inc
mul
adc
imul
jo
adc
mov
add
xchg
insb
jmp
in
pop
fisttps
loope
inc
mull
repnz
in
out
flds
or
xchg
out
outsl
in
inc
jp
ja
sbb
adc
jo
fbld
sbb
mov
inc
sti
and
std
rcr
rorb
ljmp
xor
xor
fldt
jns
lahf
int3
outsb
xor
or
and
xchg
test
hlt
pop
lahf
cltd
xchg
and
out
mov
lods
pop
or
das
mov
aas
pusha
test
xchg
jmp
testl
adc
xor
fstl
push
pop
mov
inc
arpl
xchg
rcrb
push
mov
adc
mov
lret
xlat
pop
add
mov
cmp
cwtl
push
in
adc
ficoms
ret
push
jecxz
cmp
mov
cmpsb
lret
loopne
inc
std
int3
cmp
xor
sbb
sbb
lcall
cltd
dec
fiaddl
jae
xor
popa
stos
pop
mov
push
push
aas
imul
jecxz
aad
adc
out
or
jns
mov
push
iret
imul
pop
dec
insl
pop
pop
cli
jge
xor
sti
or
jecxz
ss
push
clc
adc
push
sub
fs
xchg
xor
in
jmp
sahf
push
cmp
in
pop
add
or
push
stc
leave
dec
out
out
clc
cmp
arpl
fs
sbb
sub
les
test
lock
iret
sub
add
icebp
stos
xchg
enter
jge
jb
ror
lret
adc
fbld
or
dec
js
fdiv
jo
adc
inc
mov
hlt
aaa
dec
nop
push
add
jmp
cld
cmpsb
mov
cmc
cmp
inc
incl
nop
scas
in
insl
push
in
sti
pop
mov
in
sbbl
aam
sub
inc
aam
hlt
cld
mov
sbb
and
push
mov
adc
sub
jo
les
in
mov
lods
xor
lahf
push
call
and
mov
shr
js
arpl
and
mov
cmpsl
aaa
push
or
test
xchg
cli
nop
loope
or
dec
mov
je
push
fs
ds
jge
lock
dec
jns
popf
jecxz
sbb
sub
mov
xchg
xchg
adc
and
pop
js
arpl
xor
icebp
inc
sarl
pop
imul
repnz
xchg
movsb
repz
adc
xchg
loop
shrl
pop
mov
sbb
push
sahf
mov
stc
xchg
sbb
jl
inc
xchg
mov
jecxz
xchg
mov
pop
cmp
or
imul
pushf
pop
dec
in
sbb
lods
pop
mov
mov
jno
mov
dec
jb
lods
adc
mov
in
mov
jmp
test
lock
repnz
ror
fsubl
add
adc
or
fistps
push
sbb
stos
jmp
mov
cmc
ficompl
mov
pop
cltd
or
xchg
movsl
sarb
mov
es
or
es
rcll
jns
xchg
or
jne
cmpsl
mov
jne
pusha
icebp
xor
mov
add
hlt
in
dec
jns
xchg
jns
jno
adc
scas
sarb
leave
cmp
cmp
mov
mov
adc
and
jno
and
and
icebp
movsl
xchg
icebp
mov
mov
pop
jle
pop
cs
and
mov
mov
mov
jo
fstp
hlt
das
jmp
xor
lahf
paddw
and
push
push
das
in
pop
mov
fnstcw
mov
in
fidivrl
xchg
sbb
testl
shll
addr16
mov
fiadds
mov
ret
sub
enter
inc
jmp
mov
pop
sub
sub
mov
js
rclb
or
mov
jbe
fimull
repz
sti
sbb
cltd
pop
add
mov
rcl
and
mov
add
push
sub
mov
xlat
into
hlt
push
test
adc
lock
test
test
data16
and
fnstenv
mov
and
js
aad
fwait
xlat
popf
scas
enter
fwait
mov
adc
icebp
mov
mov
jae
or
test
lret
dec
imul
cmp
cld
dec
adc
xchg
jbe
mov
gs
xor
out
sahf
mov
xchg
mov
mov
or
xor
pop
scas
shll
push
sub
xchg
negb
xchg
mov
stc
mov
mov
mov
mov
sub
mov
sbb
pop
push
jnp
xchg
repz
mov
js
sbb
add
shlb
dec
stc
jo
add
jle
xchg
push
ret
in
xchg
mov
dec
push
push
push
pop
int
in
and
push
fs
leave
pop
mov
push
insl
and
mov
imul
or
pop
lea
int
mov
jne
mov
xchg
jns
gs
or
inc
frstor
sub
jne
jmp
sbb
jp
and
or
cmp
dec
pop
incl
or
sbb
imul
insb
pop
sti
mov
test
cmp
test
stos
dec
cmp
mov
repz
mov
sbb
mov
rcrl
dec
adc
ret
daa
movsb
jne
and
cmp
jecxz
mov
push
mov
sub
icebp
stos
fstpt
xchg
ljmp
sbb
out
insl
lock
xor
js
ffree
dec
and
push
scas
insb
mov
stc
sub
popa
mov
leave
popa
mov
cmp
dec
nop
test
fistps
aad
xchg
pop
shl
sbb
outsl
data16
jns
xchg
xchg
xor
ja
icebp
lea
jl
pop
push
jecxz
movl
pop
dec
or
call
popl
pushf
loope
test
lahf
dec
dec
mov
outsb
add
mov
into
or
call
movsl
gs
add
mov
pop
ljmp
mov
inc
cwtl
ret
pop
cmp
lahf
inc
jnp
imul
xchg
jg
xor
or
xor
fbld
cmp
arpl
repz
roll
jmp
mov
push
in
es
jno
mov
scas
out
pop
xchg
loopne
cmp
cmp
in
fdivrl
jl
lods
pop
jns
add
negl
pop
pop
cld
mov
sarb
and
mov
lret
xor
mov
leave
push
insb
cmpsb
adc
fsubl
xchg
mov
or
xchg
dec
cwtl
or
inc
pop
adc
in
mov
sub
pusha
stc
sahf
jae
fiadds
mov
imul
mov
xor
pop
imul
call
jp
outsl
jl
mov
and
out
or
lcall
jge
loope
cmp
sbb
mov
push
in
dec
and
lods
cmp
xchg
sbb
pop
xor
cmp
rep
pusha
or
mov
lea
popf
pop
imul
sbb
xor
lahf
lcall
pop
ljmp
pop
pusha
xor
add
sbb
test
imul
ljmp
mov
mov
add
mov
std
les
lds
aam
jne
mov
push
mov
ret
push
xchg
inc
push
cmp
and
pop
es
xlat
ficoml
xor
adc
sub
movsl
jge
int
test
stc
fcmove
out
and
fdivl
punpcklwd
cmp
pop
push
data16
add
sbb
cmc
cwtl
std
jo
push
out
or
ljmp
adc
push
mov
scas
push
xor
cmp
call
stc
fbstp
icebp
xchg
fwait
or
lds
xchg
icebp
sbb
ds
fprem
lret
xlat
pop
adc
imul
xor
cld
dec
mov
lret
cmp
push
mov
pop
rsm
lods
loopne
stc
or
imul
mov
mov
and
cmp
cmp
rcr
sti
aam
lcall
push
xor
pop
push
pop
dec
adc
jb
aam
hlt
mov
mov
lret
scas
out
js
sahf
popl
les
ds
mov
dec
push
dec
cmp
xor
or
mov
cli
mov
mov
inc
out
push
xchg
test
jge
fdivrp
ficompl
add
les
js
sub
adc
xchg
imull
test
lret
test
fnstcw
loope
insl
lds
pop
adc
loop
stos
inc
add
pop
xor
mov
fldcw
cmp
scas
or
pslld
scas
inc
mov
inc
ja
sbbb
pop
sbb
adc
aas
xorb
adc
arpl
ja
cwtl
xor
scas
sbb
xor
mov
mov
inc
cli
dec
and
insb
in
mov
fmul
arpl
lret
sub
ret
imul
dec
stos
ret
sbb
dec
ja
mov
int3
mov
pop
sbb
inc
in
sbb
cmp
cltd
mov
jge
lcall
nop
cmp
out
push
sahf
add
lahf
fwait
pop
scas
js
dec
mov
inc
and
loope
aaa
and
sub
pop
jmp
fsts
adc
stc
mov
in
es
mov
mov
pop
xor
dec
stc
fwait
jmp
and
into
lock
sahf
ja
pop
call
sub
fcmovbe
fucomip
outsb
aaa
cltd
mov
pop
enter
cltd
in
filds
fistps
pop
jge
sub
lods
sbb
mov
out
adc
inc
inc
adc
sub
xchg
gs
imul
shlb
data16
mov
push
sub
add
fcomip
xchg
rcrb
fnstcw
je
adc
icebp
pop
cltd
arpl
fsubs
and
mov
out
sub
outsb
push
add
sub
repz
xor
xchg
rcrb
push
imul
mov
test
jb
sbb
add
xor
mov
cli
push
in
add
lds
sbb
inc
push
sub
sti
adc
push
lds
int
decb
loope
outsb
pop
ds
ja
jo
sbb
jmp
push
push
es
dec
cld
push
push
adc
push
xchg
add
int3
dec
test
mov
push
mov
ficomps
xchg
push
adc
ficomps
pop
inc
sub
out
fldt
popa
push
cmp
jle
xlat
mov
jnp
jb
rcrb
rcl
xchg
cmp
outsl
sbb
mov
frstor
and
push
add
jae
mov
mov
adc
rcll
adc
sub
mov
repz
es
cmp
out
jo
cltd
inc
fidivrs
add
iret
aad
in
stc
or
add
fnstcw
sbb
loopne
mov
call
idivb
cmp
jnp
insl
adc
sti
loope
divl
sbb
andb
cmp
lods
scas
in
loop
inc
sbb
inc
mov
loopne
inc
dec
adc
mov
jno
fists
mov
movsl
jecxz
mov
jnp
push
xor
mov
cltd
mov
cmp
mov
xor
jl
in
xchg
lds
dec
ficompl
sub
lods
jo
sarb
cmpsb
add
sub
mov
loope
dec
and
lret
lahf
mov
adc
and
jne
mov
add
lock
ret
and
into
or
sub
mov
push
add
test
xchg
adc
cmp
cmp
inc
inc
jmp
movsl
jno
sub
int3
jnp
mov
movq
in
nop
push
mov
sub
cmp
hlt
pop
push
and
sub
mov
fmull
push
mov
jp
jb
cli
fdivr
pop
add
or
jl
mov
lods
and
leave
adc
repnz
pop
lcall
mov
cmpsb
sbb
lret
inc
xchg
sbb
push
cmp
jge
dec
sahf
std
decb
sbb
xor
inc
imul
dec
push
cmp
sarb
sahf
mov
loopne
xor
imul
repnz
fildll
sub
pop
stos
mov
iret
dec
ljmp
gs
sub
sbbb
mov
push
int3
adc
jno
test
xor
mov
int3
into
jae
out
cwtl
inc
and
daa
mov
xor
in
jne
inc
pop
jo
test
adc
adc
repnz
dec
or
push
push
xchg
repnz
out
ret
das
xchg
aad
dec
sub
lods
mov
icebp
into
fnstcw
cmp
jl
movl
adc
or
xor
insb
cwtl
int
jns
mov
xor
rcll
jo
sbb
and
stos
push
push
testl
jmp
mov
mov
ret
add
test
sbb
mov
shll
test
xchg
outsb
cmpsl
inc
lcall
cmpsb
aam
js
xchg
orb
xor
ljmp
sub
mov
leave
push
in
jl
jno
jge
sbbb
aam
push
div
mov
inc
sbb
xor
sti
mov
mov
jp
ficoml
sbb
loope
lods
cmp
sub
push
sub
jl
push
sti
adc
mov
xchg
dec
and
sbb
popf
lods
mov
push
test
jb
cmpsb
mov
cltd
shll
imul
lret
sbb
pop
les
pop
scas
mov
fwait
push
test
sahf
dec
and
pop
movsb
and
es
sub
sub
shlb
mov
and
lret
movsl
jecxz
movsb
xor
lret
fcoml
xchg
mov
out
rorl
add
call
mov
push
aas
pop
ljmp
dec
cmp
sarl
imul
adc
inc
cmp
xchg
jecxz
adc
cli
stos
int3
cmp
cs
add
ja
mov
jae
sbb
fwait
sub
xchg
or
adc
mov
js
mov
lret
jnp
xor
or
sub
aas
mov
sub
scas
mov
mov
mov
ja
xor
push
lret
jge
out
mov
scas
cld
lods
je
lahf
bound
add
pop
sub
ret
popa
push
dec
adcb
mov
jecxz
int3
dec
sub
or
repz
mov
enter
test
aad
sbb
jns
mov
and
mov
popf
mov
sahf
jo
mov
dec
ret
mov
fmuls
bound
mov
sub
push
mov
ror
cld
pop
das
stos
and
xchg
cmpb
cmp
mov
sub
xchg
cli
insb
mov
lcall
clc
or
mov
push
jmp
add
incl
imul
aaa
push
mull
data16
dec
cmp
push
or
in
cmc
fnsave
stc
bound
mov
dec
rorl
jns
notb
subb
adc
and
les
xchg
js
push
pop
and
and
sub
daa
out
pusha
shll
adcl
sti
add
cmc
notb
stos
out
aas
xor
ljmp
xchg
jg
out
ret
and
and
mov
es
ljmp
nop
int
add
in
inc
mov
ret
xor
das
les
das
pop
pop
cmp
sub
insl
mov
repnz
sbb
aaa
in
xor
mov
adc
xor
loope
das
cmp
mov
out
pop
jb
or
xchg
xchg
es
push
sbb
leave
mov
mov
mov
dec
mov
addb
and
data16
and
cmp
dec
dec
mov
loope
nop
fs
hlt
mov
iret
inc
xor
cmp
jle
inc
inc
push
cmc
scas
and
push
insl
sbb
hlt
shlb
rcl
dec
mov
and
cmpsl
lds
mov
push
dec
adc
outsl
mov
sbb
and
lahf
push
pop
out
in
inc
mov
hlt
int
mov
adcl
push
ret
cmc
in
adc
cmp
ss
cli
lcall
call
xor
pop
push
mov
mov
in
cwtl
addl
and
das
jle
rcrl
jb
push
dec
repz
jl
push
pop
in
cli
mov
push
cmp
int3
dec
aas
mov
xchg
push
movsl
test
xchg
leave
inc
stos
cwtl
dec
or
push
leave
xchg
shrb
pop
push
sbb
cmpsl
imul
push
mov
gs
adc
inc
faddp
mov
jge
add
or
outsb
cwtl
pop
int3
dec
aam
sbb
cli
add
jl
andl
pop
mov
lods
daa
xlat
mov
jnp
pushf
xor
push
adc
jl
popa
ja
push
leave
in
mov
lock
lods
fildll
mov
push
cmp
cld
adc
push
rolb
ror
aam
ljmp
js
dec
pop
jp
stos
jae
div
push
movsl
mov
loopne
xor
stos
stos
or
mov
push
mov
test
into
push
push
xchg
stos
loop
cmp
dec
xor
ljmp
sub
pop
loope
adc
cmpl
stos
in
hlt
inc
add
and
cmpsb
xchg
loop
xchg
inc
add
jle
pop
sbb
mov
out
shll
mov
jmp
out
cmp
inc
xor
dec
jmp
cmc
sbb
insl
jle
sahf
sbb
jnp
mov
out
fnstsw
fdivl
and
orb
icebp
xchg
cmpsb
xor
mov
imul
fucomp
dec
das
mov
cli
ret
aas
mov
andl
pop
test
sbbb
mov
cmp
insl
fcoms
jno
jb
push
xor
in
inc
std
push
popa
mov
mov
test
sbb
push
push
es
mov
dec
fsubp
jmp
cmp
inc
dec
xor
lea
repz
imull
mov
cwtl
fdivrp
insl
add
mov
adc
std
mov
pop
fbstp
insl
inc
lret
push
in
pop
sub
bound
arpl
out
push
jle
cmp
int3
sbb
add
fs
push
dec
decb
pop
or
in
lods
bound
fmul
test
cld
nop
push
mov
add
negl
shrb
add
inc
addr16
xchg
mov
push
adc
jp
sub
call
mov
dec
xchg
mov
mov
jbe
enter
enter
test
pop
xchg
cmp
insb
inc
lea
and
push
pop
nop
pop
repz
push
xchg
pop
cs
sbbb
lods
sub
imulb
inc
mov
je
nop
push
cmp
mov
fwait
xor
mov
mov
cmpl
lds
sbb
and
or
out
cmp
push
adc
push
rcrb
pushf
xchg
jo
cmp
not
nop
and
jbe,pn
inc
add
mov
sbb
pushf
cld
lcall
or
out
and
into
sub
add
gs
jb
mov
int
adc
dec
cmp
sub
fwait
mov
lcall
mov
xorl
loopne
and
test
xchg
lods
fildl
outsl
pop
jae
xor
and
pop
in
xor
and
ss
or
push
rorl
nop
out
mov
or
nop
push
nop
mov
xor
std
xchg
shrb
pop
jmp
fadd
into
mov
cs
cli
xlat
fldenv
push
daa
xchg
jp,pn
xlat
fmul
pop
outsl
inc
addb
pop
aad
add
cmp
imul
lcall
fadds
fsubrl
int
jb
sbb
or
in
or
push
cs
sbb
addb
adc
rcr
out
fdivrs
mov
incl
imul
shlb
test
or
aas
add
popf
xchg
arpl
js
inc
dec
cltd
push
xor
push
int
mov
cmp
aam
outsl
push
mov
cmp
jecxz
jle
adc
sbb
push
test
enter
pop
mov
mov
popf
lcall
enter
push
sbb
in
cmp
leave
out
popf
mov
scas
xor
jno
ret
ret
out
addr16
fs
adc
gs
test
jl
int
rcrl
ret
xor
mov
scas
xchg
xchg
push
cli
inc
adc
mov
popa
mov
sub
pop
and
cmc
mov
fiaddl
jmp
mov
iret
xchg
dec
xor
jb
pop
adc
std
loopne
jb
cs
inc
outsb
mov
mov
jo
jle
aad
adc
or
in
sub
push
xchg
mov
jb
mov
fimuls
pop
out
sbb
fisttpl
jbe
or
cmpb
fwait
dec
lods
push
sub
xchg
jo
jns
push
xor
movsl
mov
movl
sub
adc
jnp
xor
ret
pop
dec
xchg
cli
push
mov
cmpsb
icebp
push
mov
jg
dec
mov
scas
repnz
fwait
cs
jmp
inc
mov
mov
xchg
sbb
in
lea
mov
shrl
xchg
xor
adc
pop
addl
dec
push
push
stos
xchg
jmp
lock
mov
lock
stos
ss
cmc
mov
nop
or
mov
add
and
adc
pop
mov
inc
pop
stc
lcall
xchg
int3
cmp
xchg
int3
dec
es
mull
mov
stos
push
mov
push
xor
test
xor
and
sub
pushf
add
test
mov
push
mov
cmp
xor
shll
dec
shrl
pop
ljmp
or
movsb
add
push
scas
fimuls
sub
iret
rolb
pop
push
movsl
lcall
mov
clc
push
pop
leave
testl
pop
mov
nop
in
popa
stos
out
push
loopne
sub
pop
or
xor
les
cltd
scas
and
jl
addl
xchg
subl
loopne
jmp
mov
and
adc
movsb
test
sub
mov
fs
decl
gs
stos
jnp
sbb
out
add
xor
xlat
push
adc
inc
das
pop
and
and
out
mov
int
scas
xor
cmp
movsb
dec
stos
sub
add
and
mov
ja
xor
sbb
pusha
lock
or
movsl
jae
xor
jle
ljmp
cld
inc
ds
in
mov
pop
and
loopne
fnstcw
mov
or
sti
xchg
jecxz
jmp
lods
stos
jecxz
lret
rorl
pop
in
loop
jg
mov
insl
out
jmp
jg
cld
and
or
out
lods
lcall
fdivrl
out
add
xor
jb
pop
xchg
push
je
mov
lea
sahf
add
mov
jne
mov
adc
push
out
xorb
add
xor
push
addr16
test
and
das
xlat
inc
dec
add
xchg
and
fsubl
inc
fimull
daa
push
xchg
fs
arpl
out
mov
imul
cmp
popf
mul
mov
inc
xchg
std
addr16
pop
jge
pop
adc
xchg
cmc
dec
mov
pop
sbb
jo
mov
sbb
adc
shl
test
in
or
inc
push
push
sbb
cli
xchg
inc
jl
fsubl
mov
adc
fs
inc
rol
push
and
dec
mov
push
das
cmp
js
ret
lods
xlat
cmc
lods
xchg
mov
imul
or
mov
and
pop
popa
bound
pop
lret
jp
xor
sbb
pop
dec
add
mov
stc
out
scas
adc
clc
andl
js
pop
cld
out
aaa
test
lods
mov
clc
sub
cwtl
dec
mov
dec
repz
xor
sbbb
xchg
lods
dec
inc
lcall
js
adc
rclb
dec
push
push
faddp
or
mov
arpl
lahf
mov
aas
mov
push
sbb
rorb
mov
out
sbb
fs
jnp
cmp
pop
xor
dec
out
and
or
shll
fwait
xchg
pop
testb
mov
cmpsl
movsl
imul
repnz
xchg
xchg
into
xchg
xor
mov
lock
shll
pop
pop
or
data16
xchg
or
or
in
xchg
nop
fstpl
lods
jb
nop
dec
in
aas
test
cmpsb
adc
inc
pushf
outsb
sbb
inc
xchg
int
jne
push
pushl
pop
insb
iret
inc
decb
mov
in
jmp
and
in
jb
out
movsb
ror
int3
sbb
add
out
in
bound
xchg
mov
scas
xor
sub
push
dec
jo
je
out
jbe
jl
movsl
xor
or
cs
adc
cmp
inc
ljmp
jl
sub
mov
ja
xchg
lcall
ficompl
xchg
rolb
jle
push
inc
sub
xorb
cmp
push
flds
mull
push
fwait
dec
pop
push
mov
insb
ret
das
xchg
and
test
mov
mov
inc
scas
or
or
add
pop
cmp
repz
cmpl
out
loopne
in
int
in
mov
in
sbb
lods
pushf
in
xor
ja
sub
dec
andb
xor
sbb
hlt
andb
cltd
pop
loopne
mov
enter
mov
cmp
cwtl
scas
sbb
sub
cs
push
mov
mov
mov
push
jl
in
roll
stos
loope
mov
inc
cmp
fmull
jbe
fldt
inc
and
cmp
movsl
pop
fistl
push
mov
je
mov
xor
xchg
sbb
sar
imul
add
mov
mov
push
cmc
dec
out
cmpsl
jnp
int3
xor
shrl
jae,pt
push
repnz
pop
fcoml
lea
jo
mov
push
mov
cmp
adc
cmp
mov
mov
mov
dec
inc
divss
loope
push
stc
xor
adc
inc
mov
fists
jno
or
or
xchg
inc
mov
lea
sub
xor
or
dec
pushf
cmp
xchg
xor
xchg
aam
call
xlat
pop
imul
les
pop
cmp
sub
sub
data16
mov
out
loop
cmp
stos
and
mov
jb
icebp
lock
test
xchg
imul
dec
imull
inc
addr16
cmp
xchg
sbb
loop
orb
fs
rcl
mov
cmpsb
gs
pop
inc
mov
adc
cmp
fwait
or
test
aad
leave
mov
inc
and
jo
rorl
loopne
leave
xor
inc
adc
inc
cmpsb
cs
fcoms
sub
das
in
mov
je
inc
ja
pushf
gs
jo
fcompl
cltd
jo
sbb
xor
or
or
stos
ret
mov
xchg
movsb
dec
aad
ret
jo
or
jnp
mov
lret
outsl
inc
adc
das
jl
ja
adc
imull
sbb
lea
lret
jne
nop
out
push
sbb
test
xchg
dec
dec
ja
jp
jmp
jp
loopne
jns
enter
mov
jne
push
push
push
push
mov
xor
sbb
out
mov
pusha
mov
xchg
lds
pop
sbb
je
mov
sub
out
push
add
or
inc
sub
outsl
jno
fwait
mov
sub
pop
mov
mov
stos
ljmp
pop
push
add
dec
xor
in
xor
in
mov
stos
adc
pop
mov
aam
xor
lds
pop
push
sbb
outsb
daa
adc
sub
test
sub
fistpll
push
xchg
pop
movsb
jnp
cmc
cmpsb
jae
cmpsl
adc
push
mov
data16
bound
cmp
jmp
adc
sub
or
addb
dec
jge
pop
cmp
lods
and
push
jge
or
push
fwait
je
mov
inc
repnz
xchg
loop
and
shll
fstpt
popf
xchg
movsb
or
gs
push
movsl
xchg
repnz
mov
iret
jbe
mov
cmpsl
cs
jns
test
ret
dec
dec
repz
loopne
popf
pop
add
out
mov
jb
inc
adc
aad
iret
daa
xor
sarl
mov
or
mov
sbb
xor
cmp
inc
jg
clc
inc
lods
fidivrs
inc
push
and
push
push
insb
insb
imul
mov
pop
add
popf
xchg
push
mov
or
adc
xchg
lds
jmp
notb
pop
call
or
outsb
mov
and
cmp
mov
stc
ds
adc
cmp
imul
xorl
cmp
icebp
insb
aam
cmp
lcall
add
push
xchg
add
ret
adc
rcr
shll
sbb
cs
mov
jle
in
sub
inc
popf
and
adc
push
aas
aam
les
xor
call
arpl
popa
das
lcall
fwait
mov
js
cmpsl
nop
pop
xchg
fcmovu
stc
loop
jo
adc
test
stos
arpl
pop
jnp
mov
xchg
mov
cmp
in
xchg
ss
rcrl
dec
or
je
lret
mov
dec
inc
aad
fsubl
xor
or
pop
clc
outsb
jno
fcoms
fadd
mov
dec
imul
cmc
mov
mov
idivl
xchg
sub
xor
dec
and
jno
ds
fcoms
xor
inc
sub
lret
loopne
mov
lods
xchg
aaa
mov
mov
sti
mov
mov
and
das
dec
dec
xchg
push
inc
jno
incb
or
xchg
cmpsl
int3
dec
stos
inc
mov
and
mov
fnstsw
sub
xor
jne
stc
fwait
jne
dec
mov
jle
xor
push
ret
push
mov
or
sbb
in
mov
push
push
cmp
arpl
bound
xor
push
stos
add
into
inc
pop
insl
xchg
jne
add
pop
lahf
out
mov
rclb
fcomps
mov
arpl
and
or
iret
daa
mov
cld
and
inc
popf
leave
push
inc
popf
and
aaa
cmp
mov
ds
ret
jnp
mov
jns
cltd
or
xlat
lds
mov
sub
imul
lret
mov
mov
andl
mov
inc
test
mov
or
mov
pop
scas
fldl
cld
ljmp
mov
mov
in
out
adc
test
sbb
xlat
out
dec
inc
add
scas
bound
pop
scas
sbb
lret
ret
jne
dec
adc
fisubrl
fwait
pop
int3
mov
in
std
out
jne
out
sub
dec
push
cmp
test
out
push
mov
out
rep
pusha
gs
shll
fs
ret
or
cmp
mov
lahf
std
lret
lock
adc
test
inc
cmpsl
sub
movsb
push
sbb
xor
ljmp
jp
mov
inc
mov
leave
pop
aad
cmp
dec
or
push
sti
adc
inc
sbb
mov
dec
inc
and
paddsw
call
fimull
and
adc
xchg
notb
nop
jne
inc
xor
cli
jle
dec
adc
rcrl
adc
icebp
in
les
xorb
adc
popf
ret
push
roll
push
xor
dec
insl
out
sbb
clc
dec
shlb
cmp
stc
sbb
mov
cmp
sti
xor
xor
test
jns
mov
xor
sbb
mov
adc
cmp
stos
add
fnstenv
inc
sbb
je
int3
jmp
icebp
enter
cmp
or
in
xchg
adc
loope
xor
int3
popa
sbb
push
imul
push
mov
xchg
push
xchg
jl
add
xchg
mov
cmp
loop
push
fdivs
pop
stos
push
jge
mov
xor
in
push
fs
jp
call
adc
int
inc
lret
in
sub
adc
test
push
pop
xor
mov
jmp
ret
fstpl
rcr
clc
xor
in
ret
dec
xlat
aaa
fdivrs
stos
adc
or
hlt
notb
sbb
in
mov
push
ds
icebp
mov
lods
shrd
mov
roll
xchg
mov
jb
or
jg
inc
call
std
cmpl
and
mov
jb
test
cld
pop
add
sbb
mov
sti
lret
int3
pop
mov
cmc
jmp
jmp
faddl
push
adc
out
popa
call
push
push
mov
xchg
imul
jnp
pop
pusha
jo
add
dec
sbb
inc
cmp
das
mov
retw
cltd
cwtl
nop
outsb
and
inc
lea
mov
daa
scas
rcrl
push
popf
popa
pop
out
lea
adc
stc
sub
shrl
shlb
lret
lahf
popa
add
cmp
ljmp
lods
push
mov
cmc
dec
mov
enter
dec
mov
sub
dec
out
arpl
aaa
dec
popl
leave
inc
sbb
sub
lock
div
andl
jmp
push
xorb
xchg
lods
shlb
pop
and
xchg
rorl
faddp
mov
int3
xor
jmp
jg
pop
hlt
mov
fucomp
in
cs
adc
xchg
mov
daa
xchg
movsl
call
mov
sahf
lahf
dec
inc
adc
or
push
dec
and
sbb
xchg
ja
jg
mov
sbb
lock
arpl
push
mov
arpl
fwait
push
lods
mov
pop
sar
es
push
fistps
push
mull
mov
jg
out
scas
xchg
lcall
cmp
sbb
mov
push
sub
cmp
cmp
sbb
xchg
dec
sub
addl
pop
inc
cli
pop
faddl
dec
js
insl
stos
and
inc
outsl
adc
iret
mov
cli
add
xorb
sub
fidivrl
nop
xor
cmp
xor
insb
testb
xchg
cmp
push
ds
popa
jb
pop
lods
pop
clc
shrb
jnp
dec
push
imul
daa
push
jp
dec
mov
stc
pop
or
mov
pushf
and
pushf
mov
adc
pop
cmp
xor
lcall
rclb
pop
xor
xor
mov
cli
out
sub
pop
mov
pop
arpl
xchg
dec
push
sub
cs
icebp
dec
xor
imul
mov
jp
jmp
or
mov
call
lock
in
dec
fdivrl
xchg
lock
in
lea
and
push
inc
mov
sbb
sbb
rol
sbbl
sub
push
aas
call
sub
mov
sub
add
sbbb
addr16
sub
xchg
cmp
repz
push
or
mov
pop
mov
xchg
hlt
xchg
ja
xchg
jno
and
inc
sub
jno
push
idivb
movsl
sub
pop
mov
add
jecxz
or
jge
sub
mov
adc
inc
out
or
and
mov
lcall
repnz
xor
mov
in
xchg
test
or
sub
cs
jg
jno
dec
aaa
test
cmp
xchg
cmp
subb
pop
jns
mov
into
std
stos
lods
lods
cmp
ja
js
mov
aam
push
pop
adc
or
and
mov
jmp
leave
xchg
cmpsb
pushf
and
add
ret
sbbb
enter
mov
mov
inc
in
push
cmp
rolb
push
lcall
mov
stc
push
dec
fldenv
adc
fsubl
adc
std
out
push
lahf
mov
xchg
loop
push
push
popf
ja
ret
mov
js
xor
or
cmpsl
enter
pop
dec
xor
rcll
jbe
push
pop
mov
addl
icebp
aas
pop
jp
mov
xor
push
add
orb
adc
stos
lret
inc
mov
jne
mov
add
add
inc
mov
stos
inc
std
daa
aas
inc
sti
jge
sub
adc
sub
push
cmpsb
mov
cmp
xor
mov
mov
lret
data16
aaa
xchg
inc
movsb
mov
jge
dec
aaa
cltd
push
xor
test
pop
mov
jnp
xchg
push
lock
and
mov
sbb
xchg
mov
loop
and
fidivl
pop
outsb
fstpl
dec
cmp
movsl
push
sarb
sbb
jbe
push
aad
movsl
mov
inc
jmp
rolb
shl
push
insl
sbb
adc
inc
scas
fdivs
push
dec
lret
mov
fcmove
and
lret
mov
adc
dec
inc
pop
xor
dec
imull
movsb
repnz
push
addl
subb
in
out
adc
push
push
jg
cli
fucomi
lock
ss
mov
mov
jae
lods
pop
sub
pop
lret
jae
std
icebp
pop
loop
in
adc
pop
mov
pop
push
push
push
mov
enter
add
ljmp
sti
xchg
mov
js
movsb
xor
scas
xor
loopne
aam
imul
nop
jb
fisubrl
mov
ss
or
cs
push
mov
jns
das
push
inc
dec
dec
fildl
stos
and
dec
scas
in
jp
setp
shrb
dec
add
subl
cmpsl
jnp
mov
add
or
cwtl
pop
lock
mov
addr16
adc
push
sbb
fwait
iret
pushf
sbb
imull
cmp
mov
mov
addb
adc
loope
mov
lock
add
pop
bound
xchg
movsb
nop
lods
lcall
loop
adc
mov
inc
push
lods
rcl
cmp
dec
mov
stos
inc
cli
testl
sbb
outsl
sahf
push
xchg
cmp
xchg
jbe
cmp
pop
loop
add
sbb
insl
xchg
in
aam
dec
test
xchg
inc
lcall
xchg
repnz
or
xor
mov
es
pop
push
push
fsubl
dec
inc
ret
lret
mov
adc
sub
jae
sbb
or
adc
andb
cld
jne
outsl
notb
idivl
orl
mov
inc
sbb
mov
mov
pop
rorb
lock
cltd
cli
xor
pop
xor
adc
faddl
imul
sldt
cld
jmp
stc
add
lret
popa
sti
adc
mov
rcll
mov
or
cmp
mov
sub
test
pop
lock
adc
xor
push
push
fstpt
adc
loopne
jle
cmp
push
scas
pusha
cmp
add
push
pop
dec
sub
xor
insb
adcl
push
pop
cs
xorb
pop
jbe
mov
fistpl
xchg
stos
jb
xor
aam
pop
das
sub
inc
pop
rorb
shll
push
xchg
dec
mov
inc
mov
pop
in
fistl
mov
cmc
sbb
das
jg
faddl
xchg
jg
mov
repz
mov
insl
nop
inc
lcall
push
push
loopw
roll
shrb
mov
daa
mov
ds
xchg
push
in
add
mov
je
ja
cmp
insl
or
decl
and
push
xchg
add
xchg
scas
out
or
and
inc
dec
mov
lret
in
test
out
fiaddl
cli
sti
inc
aaa
decl
jmp
pop
jp
cmp
sbb
imul
mov
jne
add
les
stos
dec
or
mov
aas
pop
imul
jns
call
pop
xchg
and
sbb
lcall
not
pop
in
cmp
jo
mov
adc
mov
xlat
xchg
lock
daa
ja
jle
jo
cmp
jbe
gs
inc
rcrb
ss
idiv
sub
adc
lahf
mov
dec
dec
shlb
and
imul
pop
hlt
add
sbb
push
mov
scas
xor
cld
jg
orb
sahf
push
push
xchg
hlt
mov
lret
ret
xor
lods
jle
mov
xorl
bound
adc
lock
fidivl
daa
mov
jo
es
push
cmp
jge
sahf
inc
incl
lea
push
dec
movsb
ret
stos
sbb
adc
xor
daa
out
push
rorb
add
imul
cmp
adc
xor
jle
push
pop
mov
dec
repnz
les
dec
add
out
shl
push
cmp
pushf
cmp
rcll
push
repz
ja
popa
je
adc
ja
jne
cld
dec
sub
sbb
lock
add
sti
push
pushf
adc
fcoml
or
push
cwtl
daa
push
ret
das
imull
jecxz
cmp
aad
in
or
cmp
roll
enter
xor
mov
xchg
pop
out
sub
add
in
xchg
mov
ret
and
dec
cmpsl
in
daa
xchg
or
dec
dec
fdivrl
or
movsb
repz
sub
inc
push
test
cmp
test
sahf
es
push
in
add
jmp
sbb
dec
mov
sarb
iret
mov
imulb
jmp
aaa
sub
xor
fbstp
shl
in
push
sub
push
dec
addl
or
je
jne
cmc
popl
idivb
mov
push
sbb
test
test
mov
in
test
aas
cli
jns
lea
call
iret
fstl
mov
or
pop
enter
aaa
sbb
or
shlb
outsb
mov
push
jmp
sbb
js
mov
sbb
xor
in
jle
mov
cmp
xchg
arpl
sbb
ja
pop
xor
cmp
mov
out
fisttpll
dec
lods
adc
shrl
into
adc
mov
push
loope
popf
sbb
fs
and
fcoms
and
push
or
movl
and
adc
inc
aas
mov
push
and
xor
sbb
js
xor
sub
sbb
test
das
repz
xor
outsl
stos
cmp
pop
jg
inc
xchg
bound
mov
sbb
popf
dec
cli
sahf
outsb
jne
add
push
mov
cmp
stc
clc
movsl
out
dec
mov
arpl
jl
adc
pop
adc
push
cmp
and
test
imul
stos
stos
or
aam
lock
jne
ja
dec
icebp
push
and
idiv
mov
sti
pop
lock
xlat
or
cmp
xor
leave
insb
xor
movsb
lret
les
cmpsb
add
dec
and
or
rorb
jb
dec
jge
lock
es
cmp
stos
in
aad
int3
pop
add
sbb
arpl
mov
sbb
mov
mov
xor
jnp
repnz
push
movsb
push
mov
sahf
lods
fs
mov
jnp
pop
enter
pop
scas
cmpsb
add
nop
rol
roll
fld
neg
pushf
in
test
in
in
repz
ret
int3
lret
jo
inc
dec
fiadds
mov
lret
cmp
ret
xor
jp
sub
add
loop
xchg
dec
add
cmpsb
mov
push
inc
cmp
dec
int
mov
and
mov
sub
cwtl
push
std
sub
fbld
lahf
jae
in
push
pop
pop
sub
pop
testl
dec
int
ljmp
jae
in
les
sbb
ret
pop
rcrb
dec
subb
mov
mov
mov
movsb
push
enter
repz
adc
xchg
movsl
in
xchg
or
stc
hlt
push
and
test
imul
pop
cmp
and
add
sub
pop
cwtl
sub
inc
dec
sbb
lea
push
cwtl
sbb
nop
loopne
xchg
xlat
add
inc
int3
nop
push
push
ret
scas
dec
push
sti
in
jns
fsub
adc
jo
jne
cmc
test
push
xchg
pop
dec
or
jmp
in
mov
or
pop
push
cltd
xor
in
mov
or
outsb
into
nop
inc
movsb
cmpl
sub
nop
xchg
mov
pop
cli
pop
aad
js
aas
cmp
push
stos
ss
lret
pop
mov
lock
arpl
loopne
gs
ret
insl
addr16
fdivr
add
cmpsl
push
in
rclb
lds
inc
jbe
adc
sbbl
nop
in
hlt
xor
shlb
push
in
in
jmp
movsl
rclb
inc
rcll
sbb
lahf
mov
dec
jecxz
jae
xlat
inc
fwait
out
mov
and
fst
testl
pop
xor
mov
test
push
push
lret
mov
push
lahf
and
mov
inc
xchg
sahf
neg
fst
add
cmpsb
mov
xchg
pushf
mov
mov
xchg
mov
push
pop
out
test
fwait
cmpsl
and
mov
test
ret
dec
notl
mov
xor
lods
dec
mov
clc
int3
leave
hlt
cmpxchg
or
hlt
adc
inc
js
aam
stc
insl
dec
enter
clc
mov
nop
pop
cmp
aad
test
bound
popa
xor
xor
dec
jle
fldcw
sub
sbb
mov
jo
ja
pop
sbb
in
sbb
inc
test
int3
enter
pop
push
sub
loop
cs
push
in
jnp
jnp
sbb
cmpsl
jp
mov
jbe
push
push
icebp
popf
pop
fbld
jmp
push
fstps
lahf
jns
jecxz
ljmp
aad
in
pop
cmpsl
and
lea
test
dec
mov
arpl
frstor
fwait
xchg
aam
jp
jnp
stos
dec
fldt
shll
adc
cs
das
sbb
sarl
dec
mulb
pop
dec
inc
xchg
mov
or
movsb
dec
or
shlb
or
imul
sub
mov
push
stos
leave
jbe
add
adc
mov
jle
pop
dec
jo
cld
aas
and
leave
pop
call
repz
in
mov
orl
fnstenv
imul
cmpxchg8b
test
mov
push
inc
dec
subl
popa
cmp
in
ds
mov
repnz
dec
icebp
add
xor
aaa
pop
out
mov
push
sti
adc
sub
or
inc
mov
xchg
add
imul
push
cmpsl
xlat
sbb
rcrb
mov
clc
not
add
pop
pop
cwtl
scas
shlb
je
dec
ss
inc
bound
imul
fistpl
xor
push
es
adc
lret
hlt
pop
push
sbb
loopne
pop
leave
popa
in
dec
lahf
pop
xlat
xor
cmp
sub
push
into
fmull
arpl
mov
fcompl
adc
jb
add
mov
cmp
jle
xchg
test
loope
cmpsb
mov
and
add
arpl
fistpl
lock
xchg
shrl
push
pop
adc
mov
mov
fcoms
imul
out
push
testl
dec
add
pushf
stc
call
and
push
jecxz
xchg
sbb
stc
mov
mov
out
loop
sub
mov
addr16
inc
sbbl
xor
decb
push
or
add
sub
xchg
jbe
loope
jb
push
repz
jecxz
jne
sbb
out
sub
mov
sub
test
push
lock
sub
cld
xchg
test
jle
jecxz
in
mov
pop
jg
ret
xor
sbb
mov
mov
mov
jmp
in
mov
pop
outsb
mov
in
mov
or
sub
mov
adc
in
add
lcall
into
push
idiv
push
push
fs
je
or
clc
add
sbb
xchg
mov
rorl
mov
gs
test
ret
add
mov
inc
add
dec
inc
jno
add
adc
lcall
lahf
insb
and
ficoms
xor
fisubs
xlat
push
mov
nop
loope
imul
dec
dec
stc
lret
aam
imulb
sub
sub
cmp
pop
mov
enter
sub
sub
mov
outsl
xchg
nop
xchg
std
insb
mov
push
inc
sbb
loope
cltd
arpl
jne
push
xchg
mov
rcl
xor
add
inc
pop
sbb
mov
repz
ja
push
cmp
jle
out
test
ja
and
icebp
das
add
arpl
movsl
and
insl
movsl
lcall
das
jge
mov
movsb
popf
push
aad
lds
test
jmp
jbe
mov
push
sahf
jp
fs
out
xchg
pop
inc
subb
daa
stos
sub
dec
xor
add
cli
and
xchg
jg
dec
cmp
jg
testb
das
or
cli
stc
sub
cmp
test
mov
int3
lods
addl
push
cli
mov
icebp
or
aad
sti
cmpsl
mov
cmpsb
out
daa
int
or
sub
add
add
fcmovu
add
cltd
mov
loope
mov
pop
and
testl
popl
imul
pushf
test
push
jl
mov
out
in
lret
mov
sti
mov
mov
dec
popa
rcrl
fmuls
push
mov
push
push
xchg
jmp
jne
sahf
dec
int3
sti
out
ds
xlat
sti
js
xchg
lds
pop
iret
push
xchg
andl
andl
jno
sbb
push
insb
fs
mov
or
mov
rcrb
jle
enter
into
fninit
movsl
sub
sbb
jbe
mov
fwait
sub
xlat
ret
pop
push
bound
mov
loope
add
shrb
jle
add
xor
xchg
xor
sti
popa
arpl
aam
outsb
cmpsb
push
cmp
jge
mov
xchg
dec
jbe
jbe
pop
mov
shr
mov
push
mov
pushf
out
aad
adc
jo
int3
jnp
add
rcll
in
xchg
clc
data16
sub
bswap
push
je
sbb
xchg
push
movl
test
push
mov
mov
lret
cmpsb
out
mul
pop
movsl
cmpsb
sub
add
es
adc
mov
negl
cltd
mov
enter
mov
ret
clc
or
cmp
icebp
dec
lods
dec
sbb
mov
mov
sbb
xor
ljmp
sti
and
push
jne
inc
xlat
jl
hlt
test
test
test
cmc
cmp
sbb
fidivrs
cmpl
dec
cmp
in
in
test
fimull
xor
pextrw
pop
pop
and
and
mov
or
daa
fistl
in
jecxz
jge
dec
mov
mov
xor
pop
pop
andb
pop
out
mov
inc
lea
jnp
xchg
ds
je
aaa
ja
int3
fwait
movsl
adc
pop
cmp
and
xchg
sub
push
aas
imul
movsl
jno
lahf
jg
nop
sbb
xchg
cmp
in
pop
push
daa
negl
dec
outsl
or
inc
stos
mov
rclb
dec
ficomps
jnp
and
dec
cmp
ret
lret
cmp
leave
mov
sub
rcl
lea
cwtl
stos
adcb
les
sub
xor
in
lcall
add
push
imul
mov
dec
push
jbe
and
and
mov
daa
into
repz
inc
test
lahf
add
or
cwtl
and
push
fcmovnu
cs
xor
push
fistl
pop
add
std
dec
fbld
pop
sbb
xor
dec
inc
mov
sub
mov
cld
ja
pop
push
lahf
insb
inc
and
icebp
adc
sub
adc
inc
pop
add
adc
ds
push
jg
ljmp
xchg
mov
mov
mov
or
test
xchg
clc
mov
jge
fiaddl
jnp
sbb
inc
es
pop
sbb
stos
dec
push
out
pop
xchg
add
outsb
cld
or
enter
jp
or
addb
dec
xor
mov
mov
jns
mov
popa
inc
pop
call
rcl
filds
inc
sub
adc
mov
pop
jo
pop
push
popa
lds
adc
mov
fwait
inc
loope
das
ljmp
and
icebp
test
jge
sbb
xor
test
sti
adc
into
movsb
jle
scas
xchg
cmp
dec
out
sbb
cwtl
pop
testl
sbb
mov
mov
pop
test
mov
adc
sarb
out
sbb
int3
push
loop
mov
pusha
repnz
movl
clc
xchg
fnstenv
into
inc
std
or
mov
mov
in
repnz
mov
movsl
test
loope
popa
add
fmull
adc
cmpb
mov
sbb
cltd
in
pop
sbb
pop
repnz
ror
mov
aas
xor
jne
out
lret
data16
mov
add
adc
xchg
popl
dec
test
mov
sub
lea
and
sahf
cmp
je
sbbb
ja
cmpsb
cmc
mov
aam
js
mov
mov
push
pop
test
pop
repnz
fisubrs
repnz
cmc
or
in
mov
dec
in
jbe
sbb
cmp
data16
fbld
push
adc
xchg
in
add
shlb
adcl
clc
mov
call
sub
movsl
xchg
popf
mov
lret
jns
xchg
pop
movsl
int3
sub
clc
adc
sbb
xchg
jle
jge
pop
mov
ja
iret
aas
fnstenv
stc
ja
mov
cmovbe
inc
inc
sbbb
or
jl
dec
clc
push
imul
paddd
mov
flds
inc
sbb
outsw
mov
xlat
in
test
gs
inc
hlt
inc
outsb
xchg
jo
push
cs
xchg
cmp
aas
lcall
mov
pop
inc
stos
cmp
in
test
push
iret
cmpsl
in
iret
mov
and
xchg
or
adc
nop
das
pop
orb
adc
mov
arpl
xchg
divb
inc
or
outsl
add
inc
jns
mov
aaa
mov
bound
lret
pop
jbe
cmp
pop
pop
pop
mov
jbe
mull
setno
adc
out
sahf
int
xchg
jne
test
cs
push
or
out
lock
push
subl
sub
push
loopne
mulb
pop
and
rorb
push
dec
ds
rcrl
add
clc
push
mov
repz
js
pop
push
lock
dec
iret
out
cltd
pop
in
pop
and
arpl
push
mov
inc
cmp
std
sub
pop
jae
push
mov
mov
dec
xchg
lcall
sub
es
in
push
jae
lret
mov
loop
jle
out
into
mov
fildl
lret
stos
cs
jae
dec
jge
in
stos
fstl
outsb
or
cwtl
testb
dec
shrl
scas
subb
inc
mov
pop
dec
dec
aam
loop
scas
adc
jnp
loope
in
faddl
jl
cltd
adc
pop
ret
xchg
loop
jle
ljmp
fucomp
outsl
xor
sti
pop
nop
adc
sbb
js
jo
lahf
xor
xchg
or
mov
pop
or
mov
and
cmp
add
jns
xor
adc
cwtl
fdivr
sahf
dec
adc
adc
and
dec
xchg
mov
jb
mov
int3
mov
sti
lret
and
adc
aam
in
dec
xchg
dec
fimull
dec
stos
adc
insl
mov
jo
subb
repz
push
rorl
bound
gs
enter
xchg
mov
aas
cmp
pop
adc
lret
push
or
sbb
loopne
popa
das
or
stc
fldenv
and
int3
push
jo
inc
push
sbb
movsl
add
mov
testb
push
loope
sti
inc
mov
mov
mov
pop
movsb
pop
adc
xor
movsl
scas
sahf
imul
daa
lcall
pop
movsl
subb
cmpsl
pop
xchg
dec
xchg
mov
or
into
idivb
stos
sbb
push
shl
push
push
mov
pushf
notl
add
fxch
mov
out
scas
sahf
xchg
xor
aad
sbb
push
loopne
arpl
stos
sbb
outsl
bound
fdiv
test
enter
sub
xlat
jo
pop
rcr
dec
rorl
rorl
pop
sbb
jno
pop
dec
outsl
addr16
movsl
xor
dec
and
fwait
or
mov
sbb
imul
popf
dec
imul
push
ud0
mov
pop
je
icebp
repz
dec
cmp
lcall
lret
scas
xchg
push
jo
mov
sub
movsb
ficoms
pop
pop
cmp
addr16
mov
addr16
xchg
aam
insl
test
adc
push
sahf
sub
push
mov
pop
mov
addl
mov
cmp
stc
push
je
lahf
aas
jle
jo
ret
rorb
lods
in
xchg
cmp
aam
into
cmp
je
call
add
add
sbb
jo
bound
pop
mov
cmpsb
out
push
mov
leave
dec
sub
fadd
cmp
out
fldcw
rcrb
into
addr16
mov
movsb
sub
push
inc
lock
sbb
into
add
dec
div
adc
mov
pop
jmp
pop
shll
iret
mov
mov
hlt
xor
cmp
xchg
hlt
int3
mov
push
cmp
add
or
mov
arpl
cmc
cmc
pop
into
or
or
mov
xchg
xlat
dec
adc
adc
enter
push
or
inc
adc
int
test
push
stos
push
xchg
incl
dec
dec
push
nop
or
call
or
push
pop
jecxz
mov
pop
jne
repnz
fildl
inc
pop
cld
xchg
add
cld
ss
adc
pop
loopne
hlt
insl
xlat
std
mov
in
aad
jae
mov
test
pop
mov
call
dec
or
lods
cmc
cmp
push
movsl
pop
push
ljmp
mov
stos
jmp
inc
dec
not
jb
push
into
and
jmp
movq
cmp
sub
dec
mov
jmp
popa
insl
sbb
and
cmp
ds
hlt
jae
or
and
arpl
xor
int
sub
mov
jle
jle
test
jmp
movsb
mov
flds
scas
sub
shll
bound
dec
inc
cmpl
mov
aas
shl
lret
mov
xchg
bound
inc
popf
sbb
popf
pushw
daa
inc
jp
jmp
jmp
lods
nop
daa
sub
inc
inc
jbe
jno
sub
fisubs
mov
and
sub
in
mov
jge
xchg
das
add
push
cli
std
hlt
sub
outsb
mov
fmull
inc
in
mov
faddl
aad
aad
scas
dec
push
inc
push
stos
ret
or
lahf
push
adc
sub
outsl
sub
add
sbbl
push
stc
sub
int3
xchg
pop
pop
shrl
sub
dec
or
loopne
push
pop
adc
int3
popa
popf
cmp
in
sub
popf
dec
nop
mov
jnp
lahf
mov
loopne
pop
dec
mov
out
cs
clc
sub
test
insl
pop
xor
mov
mov
gs
pop
loope
lea
in
aas
or
das
sbb
pop
sahf
xchg
gs
xchg
and
mov
in
pop
mov
mov
push
jle
adcb
xlat
fistl
test
and
dec
sbb
stc
ret
pop
out
inc
xorl
push
push
js
sub
xchg
orb
inc
add
xor
and
movsb
cmp
gs
xchg
popa
mov
addr16
adc
movsl
add
xchg
adc
xchg
or
pop
adc
sbb
or
rolb
mov
pop
popa
dec
mov
pop
xsha256
cmpsb
xchg
and
stc
test
cmp
mov
mov
mov
jle
and
movsl
push
sbb
lret
mov
or
and
mov
outsb
inc
add
or
in
lcall
fists
sbb
int3
aad
lcall
mov
inc
mov
dec
lret
and
sub
dec
dec
sbb
xchg
lods
cmp
mov
fnsave
xor
dec
incl
push
inc
pop
mov
pop
std
loop
adc
cmp
xor
mov
inc
stos
pop
std
dec
xchg
sahf
pop
mov
sub
mov
addr16
and
and
fwait
sub
cmp
mov
sar
cmp
out
inc
xchg
dec
xor
pop
push
rol
imul
xor
push
jno
mov
jns
addb
pop
les
sti
sarl
movsbl
inc
sarl
hlt
sbb
jno
movb
pop
mov
ja
xor
adc
orl
xchg
shrb
pushw
xchg
dec
jle
es
or
push
jg
sbb
loopne
je
dec
push
in
inc
scas
push
xchg
and
inc
sti
rorb
loope
aam
inc
ficoms
push
outsb
out
or
jmp
sub
and
outsb
and
leave
cwtl
mov
jne
push
push
xchg
mov
fwait
and
iret
stos
mov
jae,pt
cmp
sarl
or
test
call
pop
or
sub
ljmp
pop
cmp
data16
or
rolb
pushl
inc
xchg
out
mov
movsl
aas
lds
enter
das
sbb
xchg
and
fs
fnstsw
adc
jb
jg
dec
enter
stc
movl
cmp
pop
dec
ret
mov
sar
and
fwait
ljmp
mov
nop
add
fisttpl
mov
or
mov
jnp
pop
jge
push
jnp
sub
add
ficompl
push
scas
mov
dec
xchg
cmpb
adc
sub
cs
pushw
mov
sub
mov
out
int
repnz
gs
sbb
clc
bound
rorb
pop
les
jns
cltd
mov
pushl
lods
aam
lahf
je
cmpsl
call
int3
jb
and
in
or
cltd
cmp
popf
or
adc
dec
inc
bound
out
adc
cmc
and
and
xor
or
lods
mov
or
and
punpckldq
faddl
fisubrl
out
iret
mov
out
push
mov
pop
push
push
dec
mov
push
sub
arpl
or
or
and
jge
xor
mov
divl
mov
push
js
test
mov
out
mov
out
aaa
cmp
sbb
lock
pop
pop
lcall
push
mov
sub
stos
sqrtps
xor
scas
pop
push
lea
inc
std
pop
fsts
sbb
push
pop
jns
in
or
scas
insb
fs
push
or
hlt
bound
sub
sbb
lods
lea
aad
inc
aam
lods
adc
fstps
jge
stos
mov
pop
pushl
imul
mov
cmc
imul
xor
or
xchg
adc
test
leave
sub
pop
push
mov
mov
mov
xor
loop
dec
xchg
cmc
cltd
push
inc
imul
popa
das
push
mov
adc
pop
adc
test
adc
sete
jge
sbb
mov
and
bound
stc
fsubl
shl
adc
in
adc
out
jb
cmp
adc
jmp
stos
sub
or
inc
stos
icebp
or
inc
xchg
notl
daa
inc
mov
sub
push
das
imul
cmc
andl
jno
pop
xor
aad
ret
aam
inc
pushf
jle
inc
inc
sbb
in
movsb
mov
add
sbb
sub
in
ret
xor
iret
add
and
mov
add
mov
mov
dec
inc
in
bound
scas
leave
aas
cwtl
or
addr16
pop
xchg
lods
mov
lahf
cmpsb
jmp
ljmp
sub
into
in
jmp
mov
pop
inc
push
adc
jg
push
dec
push
test
in
scas
jg
jbe
shlb
lcall
stc
cltd
addr16
out
xor
vmovaps
pop
sub
clc
ljmp
pop
xorps
outsl
stos
adc
loope
lods
je
adc
rol
mov
jbe
es
xor
mov
pop
dec
xor
dec
push
or
sahf
jmp
lods
push
movntps
rcll
dec
jge
inc
fldcw
fwait
sub
das
fisubl
imul
xchg
shl
das
mov
xchg
int
ljmp
sbb
rolb
out
js
ret
mov
lods
sub
xlat
inc
cmp
jb
enter
scas
lret
fdivl
gs
ljmp
es
insb
xchg
push
or
rorb
add
xor
jb
xchg
mov
test
in
jle
or
out
rcrb
inc
xor
xchg
loop
cmp
mov
mov
mov
dec
shrb
dec
and
pop
and
je
cmp
mov
xchg
or
sbb
mov
test
sbb
push
mov
xchg
sbb
bnd
daa
pop
push
out
sarb
mov
aam
fmuls
cwtl
roll
or
mov
stos
jmp
mov
nop
sub
fisubrl
inc
test
inc
add
push
add
movsl
flds
call
inc
pop
jecxz
mov
adc
mov
in
pop
iret
fidivs
pop
add
test
gs
sub
xchg
and
sub
jno
sub
push
arpl
cld
icebp
aad
jmp
jno
push
mov
jnp
int
mov
push
cmp
mov
push
cmp
ss
insl
or
pop
sbb
pop
addb
and
push
pop
mov
sub
movsl
cmpb
stos
cmc
ret
mov
xchg
mov
inc
jg
mov
xlat
jecxz
adc
neg
pusha
in
stos
cmp
lods
dec
push
or
js
xor
inc
rcll
imull
ljmp
fldenv
pop
loope
daa
out
bnd
jnp
test
jno
shlb
inc
outsl
std
fisubl
negb
add
xor
enter
movsl
sub
leave
push
dec
sbb
popf
xor
das
push
movsl
ss
pushf
inc
movb
iret
xchg
movsl
push
ja
push
and
pushf
and
adc
xchg
rol
push
push
js
mov
movsb
pusha
xchg
jae
pop
rcl
ss
push
xchg
xchg
icebp
xchg
xchg
sub
or
iret
outsl
in
pop
xchg
mov
repz
arpl
cs
imull
xchg
in
or
mov
sub
mov
shlb
xor
scas
sbb
jecxz
aas
repnz
sub
daa
out
pop
js
stc
inc
int
das
fsubs
cli
mov
adc
cltd
mov
sbb
outsb
fiadds
xchg
rcr
xlat
out
fidivrs
popa
es
inc
in
or
je,pn
pop
jmp
xor
scas
stc
inc
ss
xchg
push
push
cmc
pop
aad
cmc
ud2
mov
ds
ljmp
scas
std
xor
out
faddl
std
cwtl
push
lahf
je
ficompl
stos
jecxz
sub
bound
sbb
add
dec
fidivs
push
and
out
sub
sbb
jle
cmc
jb
mov
lea
cld
xorb
aad
int3
loop
pop
add
lds
data16
cmp
mov
sbb
cli
jp
and
lock
in
aas
sbb
adc
popf
pop
or
aad
aas
clc
jg
movsb
ret
fmuls
insb
daa
dec
loop
pop
leave
add
loopne
sub
rolb
aam
mov
inc
lds
fdivs
jg
or
in
mov
outsb
out
sbb
dec
or
xchg
popa
and
or
lret
sub
in
data16
inc
adcl
dec
pop
inc
mov
mov
xchg
pusha
loopne
ficomps
adc
and
adc
ret
inc
mov
mov
adc
int3
jno
adc
ret
sbb
stos
xor
or
int
int3
sub
in
add
jo
jge
test
pop
sahf
cmpsl
aaa
inc
push
daa
mov
loope
jg
lea
cmp
mov
std
lret
mov
jbe
lods
testl
jns
repnz
inc
pop
rorl
push
pusha
mov
movsb
mov
pop
cmpsl
add
fists
dec
fcmovnb
adc
fwait
outsl
pop
or
xlat
xchg
out
stos
hlt
adcb
xchg
jmp
jmp
insl
or
lret
shrl
inc
push
sti
jle
inc
xchg
insl
ljmp
dec
cmp
je
ret
push
sbb
insl
add
xor
mov
shr
out
pop
sbb
push
test
cmp
repz
lods
jecxz
jns
mov
mov
out
inc
ja
test
adc
cmp
mov
fcomps
test
es
mov
ds
jbe
cltd
push
mov
lods
xor
sbb
cwtl
and
pop
mov
sub
scas
mov
fildl
pop
sub
stc
jp
repz
js
jmp
int
cmp
js
or
inc
push
pop
push
cmp
jno
sbb
call
adc
int3
add
inc
mov
cmp
pop
xchg
jge
or
mov
test
insl
and
push
mov
cs
mov
jnp
or
in
or
imul
or
sub
fld
fiadds
push
es
dec
jne
and
push
mov
push
mov
pop
insb
cs
sub
inc
cmp
sub
bound
bound
cmp
mull
adc
cmp
js
sub
call
enter
pop
sbb
push
lcall
or
push
stos
in
mov
in
sbb
dec
in
mov
pop
subl
or
inc
push
fistps
bnd
std
les
mov
or
loop
add
xor
push
hlt
mov
movsb
pop
mov
aaa
sbb
jge
pop
sbb
jp
mov
xchg
bound
add
add
push
xor
and
cmp
dec
dec
xchg
cltd
ja
orl
pop
in
sarb
pop
mov
sub
jo
add
shrb
shrb
les
dec
xchg
dec
xchg
mov
imul
push
push
in
stc
xchg
jno
jg
mov
xor
push
inc
mov
jo
pop
pop
jmp
lds
rorb
mov
pop
or
lea
jp
dec
cwtl
test
outsl
enter
out
pop
lock
loope
ror
sub
movsb
inc
xor
push
inc
cmp
jns
push
dec
imul
jno
mov
test
cli
mov
fs
mov
mov
aaa
std
xchg
mov
out
sbb
inc
pop
xchg
or
mov
scas
arpl
inc
popa
aad
out
jl
test
int
push
cwtl
insl
dec
lret
cmp
lods
addb
arpl
mov
js
test
cmp
push
adc
push
sub
adc
fadd
push
inc
inc
jg
or
cltd
test
addl
adc
cs
or
xor
add
aad
outsb
sub
jl
sbb
and
cmpsl
lock
outsb
push
push
mov
mov
repz
stos
cltd
mov
setnp
or
stc
test
mov
int3
adc
adc
xchg
sub
in
das
stos
test
ret
dec
fsubrl
sarb
mov
adc
aad
cmpl
mov
and
or
mov
xchg
push
outsb
adc
mov
xor
jg
nop
mov
ja
pop
lcall
add
mov
fdivr
inc
push
sbb
repz
mov
push
push
cli
sub
sub
test
cmpsb
xchg
jge
call
xor
into
sbb
adc
imul
ret
int3
hlt
xchg
or
xor
mov
pop
out
pop
bound
stos
sub
mov
jae
sahf
or
jmp
adc
ds
and
sarl
sub
les
inc
das
sbb
pop
lahf
xlat
int
insl
adc
in
movsl
into
mov
xchg
or
sub
xchg
sub
mov
cmc
inc
pop
arpl
mov
pop
popf
xchg
inc
int
mov
mov
and
or
test
jle
das
subb
cmp
mov
call
rorl
lods
pop
sub
mov
int3
test
xlat
lds
sbb
in
ret
outsb
adc
rolb
jecxz
pop
clc
fadd
dec
addl
sub
dec
adc
fmul
cwtl
push
iret
sbb
xor
add
sub
out
sub
or
push
pop
insb
call
xor
jo
jl
sti
mov
add
push
imul
scas
mov
pop
sarl
leave
test
mov
jb
mov
dec
andl
pop
mov
push
ret
xchg
popf
inc
dec
add
scas
gs
test
stos
push
test
shll
lret
loop
movsb
adc
add
ds
and
inc
icebp
mov
mov
negl
rol
mov
popa
sahf
ret
xor
pusha
pop
mov
into
nop
inc
inc
rclb
xchg
stos
push
repz
and
xchg
xchg
pushf
xchg
sbb
loope
cmp
push
fildl
cltd
and
xor
neg
xchg
sbb
dec
hlt
pop
and
push
ficoms
pop
pop
mov
stos
cmpsb
or
getsec
xor
int3
add
xchg
push
pop
cmc
xchg
push
outsb
rdpmc
pusha
or
pop
sub
dec
outsb
pop
mov
cmp
mov
push
mov
cmp
xor
cmp
mov
adc
mov
arpl
loopne
js
or
loope
xchg
jle
into
fiadds
pop
dec
js
shrb
negl
add
popf
push
andl
push
lds
mov
push
cmp
dec
aad
add
gs
mov
cmp
ja
or
dec
add
cmp
das
xchg
les
dec
mov
mov
mov
jge
xor
rorl
negl
pop
test
push
lcall
and
andb
ja
addr16
mov
js
sbb
aad
pusha
fs
aas
shll
and
push
sahf
jmp
aad
test
ror
xchg
jb
clc
andl
mov
and
dec
cmp
dec
ret
insb
pop
adc
insb
out
xor
adc
and
push
ds
cmc
mov
stc
lret
xchg
out
xchg
scas
mov
sbb
imul
mov
mov
sub
rorb
add
inc
xchg
loopne
sub
and
mov
sbb
sbb
push
test
mov
xor
das
sbb
imul
xchg
lods
sbb
add
add
push
mov
push
push
mov
js
movsb
incb
cmp
or
dec
jno
add
push
inc
jne
mov
in
lret
push
mov
cmp
mov
sub
int3
mov
sub
popf
pop
jbe
pop
dec
cmp
repz
mov
jmp
test
push
dec
sbb
das
jge
mov
insb
rcr
arpl
fs
pop
or
fistl
in
push
mov
aam
mov
icebp
lock
out
je
jmp
mov
rep
popl
jl
push
mov
daa
push
pushf
jl
lret
call
xchg
sbb
arpl
clc
xchg
test
mov
mov
and
push
adc
sarl
das
or
sarb
add
adc
out
cmc
jno
es
scas
cmp
dec
and
icebp
popa
mov
addr16
xchg
aas
xchg
in
arpl
movsl
ja
mov
xchg
aad
enter
inc
jne
data16
mov
movb
stos
andb
outsb
xor
in
int
push
dec
bound
cmp
pop
sub
or
test
daa
or
add
insb
xchg
loop
lods
or
adc
subl
add
push
mov
inc
push
cli
aad
je
cs
movsb
sahf
dec
adc
lods
vcvttpd2dqx
dec
dec
into
enter
xchg
movsl
dec
push
push
shlb
mov
and
mov
outsb
pop
sub
je
mov
aad
rcll
adc
or
movsl
push
rol
pop
jne
add
or
adc
cli
imul
ljmp
arpl
insl
outsl
xchg
dec
imull
fwait
dec
sub
ret
pop
pop
inc
mov
cmp
sbb
bound
jge
dec
js
es
arpl
in
inc
les
les
xor
xor
pop
push
int
pop
cld
fmul
adc
std
dec
clc
or
push
sbb
pop
lea
mov
dec
push
pop
xchg
push
js
ljmp
int
xchg
shll
inc
pop
stc
ret
lahf
cli
mov
sbb
nop
jecxz
mov
pop
sbb
dec
sti
or
dec
lods
mov
sbb
or
cmpsl
push
stos
jno
cmc
mov
divl
loop
sub
inc
push
mov
sbb
xchg
xor
pop
outsl
insl
loope
out
adc
test
mov
dec
adc
dec
mov
aas
mov
add
push
ja
nop
mov
pop
xor
imul
xchg
dec
stos
pop
test
pop
sarb
pop
es
adc
cltd
pop
pop
rorl
rcll
push
pushl
and
inc
xlat
cmc
mov
pop
rcrb
cmp
imul
push
outsb
je
clc
cmp
xor
cmpsl
imul
mov
xchg
push
imul
lret
dec
or
xor
sti
cmp
xchg
test
stos
mov
cltd
insb
lahf
push
inc
push
mov
jne
sbb
std
lds
es
cmc
mov
or
ja
mov
ret
loope
aad
outsl
and
or
enter
mov
rcrl
rcr
pop
xchg
jmp
xchg
cmp
and
sbb
icebp
adcb
das
repz
push
lret
lods
inc
in
mov
lahf
cmp
es
nop
fiaddl
mov
push
notb
mov
inc
scas
test
xchg
xchg
push
fstpl
mov
movsl
mov
cli
adc
movsl
jmpw
inc
pop
imul
jne
ret
js
fst
xchg
sbb
push
scas
xor
imul
pop
pop
jne
mov
cli
mov
in
test
std
xchg
mov
pushf
or
jmp
push
ljmp
das
ja
enter
out
in
cwtl
test
roll
jnp
mov
ficoms
jns
into
sub
hlt
xchg
out
mov
aaa
imulb
repz
lock
or
mov
and
aas
and
out
je
mov
test
outsb
mov
mov
inc
nop
and
leave
sbb
xor
add
repnz
jb
loop
sub
adc
inc
dec
push
cmp
pop
pop
dec
push
xchg
enter
call
xchg
add
in
inc
subl
test
mov
mov
mov
test
test
aaa
fistpll
pop
cltd
xchg
xor
push
movsl
xchg
mulb
rclb
out
scas
cmp
pop
js
shr
nop
rol
movsb
or
inc
into
icebp
sub
js
arpl
lret
and
adc
pusha
arpl
rcrl
gs
repz
lahf
call
gs
xchg
jecxz
mov
add
sub
xchg
push
adc
out
jno
or
push
gs
and
mov
push
pop
cs
lods
aam
in
rorb
jg
insl
cmp
je
out
or
sti
sub
dec
roll
push
dec
enter
int
ss
push
stc
outsl
imul
sbb
shl
je
cltd
jb
in
jecxz
sub
popf
pushl
cltd
jb
dec
xor
imul
pop
add
pop
jecxz
jae
loopne
cmp
mov
adc
lods
inc
push
inc
xlat
pop
roll
into
repnz
rol
arpl
xor
adc
sub
mov
mov
lea
jmp
ja
loop
cwtl
mov
cmp
bnd
cli
xchg
cld
mov
pop
xlat
sarl
nop
loopne
fisubl
ja
fsubr
inc
cmp
in
pop
adc
or
test
dec
aad
ja
dec
pusha
xchg
dec
add
pop
ljmp
mov
jg
xor
mov
sbb
push
repz
cmp
inc
jno
pop
jp
and
repnz
and
lret
add
fiadds
cltd
test
icebp
jae
rcll
loop
bnd
pop
ret
mov
test
scas
test
pop
fcos
cmp
scas
or
lret
enter
in
dec
pop
loope
and
aas
pop
push
and
push
push
daa
mov
mov
xchg
pop
ror
mov
test
pop
dec
ret
sub
cli
pusha
ret
mov
rcll
mov
fucomip
rcll
jecxz
js
xchg
test
movsl
lcall
xchg
int
sti
pop
cltd
xor
cli
leave
mov
jmp
mov
je,pn
daa
shlb
movsl
xchg
divl
outsl
inc
mov
jmp
bound
addl
and
push
nop
xor
cwtl
jg
adc
lret
cmp
sbb
and
test
pop
or
ficoms
jmp
ret
push
addr16
and
pop
pop
sbb
movsb
xchg
xchg
jge
jo
imul
and
outsl
into
dec
fsubs
mov
jne
push
mov
push
leave
lret
mov
insl
decl
je
daa
sub
jmp
das
sub
stc
scas
pushf
movntq
sub
insb
dec
das
adc
mov
and
outsb
cmp
and
call
into
test
mov
sub
push
sub
pusha
fdiv
and
incl
imul
pop
dec
gs
insb
xchg
and
pop
outsl
int3
mov
fadds
addr16
dec
xor
pop
mov
jmp
in
xchg
stos
cwtl
jp
mov
dec
pusha
xchg
hlt
sbb
ret
dec
pushf
or
cs
push
mov
popf
sub
lods
dec
mov
mov
xchg
jae
inc
and
xor
ret
rorl
sets
int3
sbbl
inc
orl
shlb
out
jnp
out
aas
test
jne
push
scas
cltd
rclb
in
subb
jnp
inc
aaa
std
cmp
test
cli
adc
icebp
xchg
bound
enter
outsl
call
cmp
scas
push
scas
xor
cmp
cld
cld
push
mov
repz
popf
jmp
rorl
dec
iret
cmp
rcll
push
test
stos
sahf
and
adc
hlt
fs
push
clc
push
das
adc
sahf
sub
dec
stc
repnz
pop
push
push
jne
mov
inc
inc
popw
popa
cmp
ficoms
mov
jae
jmp
cmp
call
stos
pop
dec
nop
or
xor
subb
mov
in
inc
dec
or
push
fistps
icebp
ret
in
jno
xor
cwtl
pop
xchg
inc
jg
cwtl
fs
cmp
jp
xchg
pop
xchg
in
rclb
sbb
add
pop
dec
mov
arpl
jno
mov
pop
adc
cmp
jo
dec
sub
stos
sbb
sbb
lods
jmp
mov
inc
lahf
lock
out
mov
or
sub
and
and
xlat
xor
add
pop
aad
repnz
bound
adc
dec
pop
insl
lahf
xchg
arpl
mov
pusha
repz
or
jge
xorb
mov
jmp
imulb
mov
mov
testb
mov
sbb
or
xchg
and
mov
in
das
scas
push
jnp
test
mov
movsl
or
daa
push
test
or
sub
sbb
das
adc
mov
inc
scas
dec
mov
jo
jmp
mov
cld
add
in
fs
jb
test
out
aas
xlat
orb
insl
mov
pop
fsubrl
dec
or
call
cmc
fcmovne
jb
cmpsl
test
xor
loope
dec
repz
push
leave
add
jno
mov
repnz
jnp
cltd
sbb
add
scas
adc
jno
xchg
push
lods
clc
sbb
ret
cmpsb
mov
pop
arpl
arpl
push
imul
jmp
sub
pop
nop
mov
mov
xlat
data16
fisttpll
inc
sbb
test
aas
mov
loopne
pop
in
outsl
xchg
sub
aas
cmpsl
cmp
test
sti
daa
cld
in
sub
ja
add
shlb
lock
sub
rcrb
push
dec
or
data16
cmp
jmp
das
push
pop
mov
orb
ljmp
filds
or
lcall
inc
adc
jmp
pop
iret
pop
addb
or
in
ss
mov
sti
mov
sbb
mov
fdivr
mov
xchg
ja
add
fs
bound
adc
push
adc
dec
push
fnstenv
jmp
and
sub
jmp
repnz
ror
or
movsl
cmpsb
rcll
jle
in
or
cs
mov
inc
lea
leave
shrb
cmc
sub
sbb
inc
fmuls
sahf
cmp
cmpsb
nop
sub
orl
adc
mov
push
stos
or
cmc
push
push
jbe
inc
sbb
mov
fwait
xor
inc
es
push
add
pop
stos
es
ljmp
ret
lret
add
or
mov
xor
fincstp
in
mov
xor
rorb
popa
test
inc
pop
ds
dec
bound
cmp
sub
cli
or
test
sub
int
cmpb
sbb
and
pop
fst
in
cmpl
inc
scas
lea
outsl
adc
clc
popf
arpl
xor
imul
les
mov
rcrl
sub
adc
test
cmpsl
mov
lock
pop
cs
out
mov
push
and
xchg
pushf
out
mov
and
push
pop
or
mov
mov
mov
stos
add
sub
mov
and
adc
faddl
push
negl
and
adc
adc
mov
in
xlat
add
mov
scas
incb
cmpsb
pop
rcrb
sbb
mull
mov
mov
int
ja
mov
inc
jne
mov
enter
gs
jp
sbb
les
aad
push
xchg
or
loope
lret
jb
inc
mov
repnz
insb
push
cmpsl
dec
lret
ss
inc
inc
rcl
insb
int3
pushf
mov
jb
sbb
sbb
popa
pop
xchg
adc
repnz
loopne
cwtl
pop
jmp
jle
adc
cli
mov
test
jae
mov
cmpl
cmpb
cmp
adc
cmpsl
cli
mov
cwtl
cmp
bound
mov
cmovs
decb
sub
nop
or
js
loope
xchg
push
push
sahf
cmp
mov
dec
in
iret
sbb
mov
mov
push
and
mov
xorl
repz
in
aaa
xchg
mov
loopne
sub
xor
push
ss
jp
cld
test
lret
int3
cld
cmp
fmull
shlb
rclb
ret
loope
and
fwait
pop
sbb
xchg
inc
std
jo
push
push
and
addb
addl
in
inc
dec
stc
pop
fsubrl
mov
ret
call
fisubrl
cmc
jl
sub
es
fldenv
lds
sub
sub
dec
xorl
jge
jecxz
mov
lods
stos
stos
mov
adc
sbb
xchg
or
aas
jmp
les
outsl
inc
popa
push
or
js
sbb
push
mull
roll
jecxz
inc
xchg
test
pop
jecxz
jae
ljmp
xchg
stos
insl
pop
push
push
adc
inc
and
cld
std
and
fiaddl
mov
push
fldcw
mov
out
mov
xchg
sub
inc
icebp
mov
std
pop
dec
dec
test
mov
mov
push
ret
pop
rcrb
scas
xor
sub
inc
inc
sub
enter
cmp
xchg
out
dec
jecxz
je
lahf
jae
lcall
adcb
loopne
jmp
test
push
cmp
inc
fdiv
mov
jp
cli
adc
xor
adc
mov
add
xchg
ja
fisubrl
rcll
pusha
jae
fiaddl
insl
push
and
lahf
test
popa
dec
push
push
xor
or
mov
fistps
mov
and
std
jo
jo
enter
xchg
mov
add
mov
subl
int3
adc
mov
or
sbbl
add
inc
je
fldcw
out
adc
mov
lea
cmpsb
ja
mov
pop
lds
in
xchg
push
shll
outsl
jne
and
inc
xor
jecxz
dec
or
out
pop
aad
dec
sub
cmp
mov
push
pop
and
test
mov
ficomps
loopne
clc
cwtl
add
iret
mov
or
jmp
aam
cs
aam
inc
add
and
ffree
pushf
sub
xchg
mov
aas
sbb
stc
sbb
nop
mov
xor
xchg
adc
dec
stos
fs
add
jecxz
movsl
test
pop
ret
sbb
and
mov
sbb
sbbb
jecxz
mov
fisubl
mov
fs
leave
aam
mov
ret
xor
inc
je
xchg
sbb
movsb
cmp
sbb
outsb
xchg
push
les
inc
movsl
ss
lea
or
sahf
cmp
mov
jg
and
sub
js
mull
shl
inc
add
dec
shlb
incb
ss
mov
mov
int
push
push
mov
outsl
pop
mov
dec
mov
add
mov
repz
pusha
jecxz
enter
sub
xchg
mov
repnz
mov
popf
inc
sbb
cmp
rclb
cli
mov
mov
inc
jp
dec
xchg
sub
fcomps
fistl
or
and
idiv
repz
add
shlb
es
xor
lods
mov
inc
push
inc
mov
test
or
loope
in
mov
cltd
sti
scas
mov
aam
in
push
cmp
push
iret
sub
popa
mov
mov
sahf
mov
jae
jo
sbb
stos
sbb
adc
in
stc
out
cmp
xor
inc
sbb
rcll
xchg
inc
and
shr
out
rcrb
mov
imul
aam
mov
or
sbb
mov
xor
adc
loop
jge
fsubp
call
or
mov
leave
mov
inc
xor
mov
mov
inc
and
call
sub
push
jge
in
nop
lret
mov
and
rorb
pusha
jae
and
mov
je
mov
jbe
xor
das
dec
cmp
cs
cltd
out
push
xchg
bound
fisubrl
int3
test
adc
mov
out
cmp
jmp
cmp
sbb
push
ror
lret
mov
test
mov
add
es
jl
out
rolb
std
inc
cmpsb
mov
push
shll
sub
pop
pop
cld
enter
push
call
mov
insl
nop
push
cmp
cmp
mov
pushf
add
shll
adc
outsl
mov
mov
mov
adc
add
xchg
aaa
dec
inc
lret
fs
fwait
pop
pop
or
jle
jno
xor
enter
adc
fistpl
stos
test
jle
dec
dec
lcall
add
or
testl
ficomps
mov
sbbl
mov
cmp
add
fnstcw
rcrb
jge
int
loop
ss
or
mov
imul
int3
iret
sbb
dec
fnstcw
pop
insl
sub
jle
data16
dec
sarb
sub
mov
mov
jbe
adc
jno
ds
or
push
xchg
sub
and
test
mov
sbb
rcrb
mov
push
push
sarb
inc
pop
adc
jnp
imul
shll
out
add
sahf
sbbl
mov
movsb
mov
cmp
cld
jecxz
das
adcb
inc
ja
xlat
xchg
push
in
push
cwtl
jnp
and
rorb
movsl
imul
jno
daa
insb
inc
inc
mov
cmp
pop
rolb
out
mov
push
aam
bound
inc
dec
in
push
xchg
add
ljmp
mov
ljmp
inc
inc
shl
xchg
icebp
cmp
jnp
or
xlat
jp
nop
and
gs
insl
jns
fcomps
sub
lret
andl
cmpsb
repz
mov
iret
out
mov
push
loop
std
xadd
lahf
ja
mov
fsubrs
pop
cli
pop
push
notb
cmp
out
sbb
jecxz
and
xor
int
xchg
dec
movsl
jmp
add
add
rcl
and
jnp
stc
xchg
insb
imul
dec
popf
ss
xchg
mov
movhps
or
adc
test
jae
andps
add
fldenv
repz
adc
add
jle
mov
outsb
add
test
clc
ret
pop
xorb
sub
sbb
movsb
sti
rclb
fidivrs
dec
cmp
imul
add
pusha
outsb
hlt
bndstx
or
stos
insb
sbb
jmp
jne
test
fsubl
xlat
les
int
jle
add
rorl
fs
outsb
jnp
sti
dec
inc
jo
lock
and
lea
fs
pop
aam
mov
std
lods
sub
jae
sbb
pop
mov
out
jno,pn
arpl
jg
push
lods
cmpsl
lds
xor
mov
mov
dec
gs
cmp
add
ret
mov
and
icebp
xchg
dec
push
xlat
cmp
cwtl
sub
popf
rcrb
or
push
xchg
xor
xor
and
aaa
jg
cmp
sbb
mov
ljmp
es
adc
orb
xchg
and
mov
cmpsb
push
cmp
pusha
mov
outsl
gs
pop
pop
lock
push
aam
fstpt
pop
sub
add
fidivs
lahf
or
clc
clc
sbb
js
xor
xchg
lods
leave
mov
adc
xchg
xor
repz
xchg
mov
xor
mov
outsb
aam
push
hlt
stos
cltd
nop
xlat
out
popf
out
ret
fimuls
jle
clc
mov
and
cmp
pop
cmp
mov
sub
or
cwtl
enter
out
sbb
lods
lcall
test
xchg
jmp
jmp
push
mov
in
mov
push
fwait
popa
mov
aad
pop
and
clc
mov
lret
fs
repz
mov
adc
jno
pushf
ds
or
xchg
push
mov
inc
inc
jno
xor
out
mov
jns
jg
fimuls
daa
and
gs
mov
mov
daa
cld
jmp
out
psubsb
aad
loop
push
popf
mov
leave
andl
push
imul
shufps
test
xorl
mov
cltd
jmp
mov
xor
int3
mov
mov
stc
rclb
int3
js
mov
add
inc
push
mov
imul
loop
aam
std
mov
xchg
xchg
int3
jmp
pop
test
mov
pop
mov
mov
out
and
shll
inc
dec
mov
mov
inc
inc
pop
test
cs
adc
adc
sub
cbtw
test
aad
jb
outsb
testl
out
sub
adc
inc
mov
sti
mov
mov
mov
inc
fists
lret
mov
mov
stc
test
and
ret
jo
ret
push
xchg
cmp
xchg
cmp
sbb
mov
xor
push
add
cmp
mov
mov
cli
ljmp
sarl
push
out
jge
jno
js
sbb
pop
dec
gs
pop
loope
adc
scas
addr16
xchg
sub
cs
mov
mov
lds
ficomps
fwait
insb
inc
mov
sahf
xor
xchg
subb
pop
dec
pop
mov
inc
jmp
dec
pop
dec
adc
ds
pop
enter
inc
aaa
or
mov
mov
or
cltd
in
adc
add
sbb
mov
sbb
js
lahf
mov
mov
pushl
into
mov
loopne
push
jne
pushf
xor
pop
lret
sub
add
xchg
aaa
mov
inc
dec
out
insb
out
test
shlb
push
call
incb
and
mov
mov
mov
mov
out
fs
xor
and
lea
or
lods
int
mov
dec
mov
lods
push
mov
inc
mov
mov
add
pop
mov
divl
in
std
mov
jo
int
ljmp
hlt
add
outsb
mov
sbbl
fwait
stos
inc
jecxz
out
push
lea
jnp
cltd
das
addr16
int
mov
popa
in
or
jne
into
mov
pusha
ss
cmp
shll
je
cmp
ret
mov
pop
repnz
das
int3
xchg
pop
sub
cmp
addr16
dec
pop
es
mov
sub
xchg
adc
push
mov
ret
jle
adc
sahf
dec
lahf
dec
jmp
rcrl
cmpsb
mov
into
es
push
pop
mov
cmpsb
cmpsl
mov
cmc
mov
notb
ljmp
pop
lret
mov
pop
mov
mov
sbb
or
jp
ret
cmp
test
pushf
dec
call
sbb
lock
mov
sar
icebp
jo
aam
ja
and
test
or
rclb
into
dec
test
or
outsl
into
adc
cmp
in
mov
lret
lcall
rcl
push
lock
or
and
fcmovnbe
aam
cmp
jae
inc
push
hlt
mov
pop
xor
test
adcl
rol
inc
nop
sub
aam
je
cs
js
rorl
and
sahf
std
jo
pop
mov
cmp
pop
jg
or
dec
sub
fmulp
pop
out
cmpsl
movsb
test
and
sbb
fildll
testl
movsb
jmp
cmp
jns
cmp
or
lea
je
ljmp
add
xor
js
pop
stos
dec
inc
loope
mov
je
aaa
pop
cs
pop
cld
sbb
cwtl
lods
push
and
fcomi
inc
mov
pop
adc
xor
jo
neg
push
incb
mov
mulb
iret
xor
imul
push
mov
inc
stc
jl
shlb
mov
cmp
shll
getsec
mov
push
dec
fs
icebp
cmp
or
jecxz
xor
shrl
repnz
rcrl
test
fs
mov
mov
xchg
sarb
pop
pop
mov
mov
inc
mov
out
xor
mov
stos
dec
fisubrl
cmp
inc
dec
jne
push
in
and
fisttpll
mov
hlt
jns
aas
inc
repz
push
pop
xchg
inc
lret
das
adc
xchg
sub
jb
aad
mov
cmp
aam
pusha
imul
call
scas
jmp
xor
std
lods
les
in
imul
int3
pop
test
lret
les
push
movsl
mov
popf
mov
xchg
dec
mov
frndint
int3
pop
shrl
pop
push
mov
fwait
lret
mov
ljmp
ja
loope
dec
mov
and
fildl
pop
shlb
and
andl
xchg
data16
aad
mov
data16
cmpb
lea
jae
inc
xlat
or
xchg
jmp
dec
pop
inc
inc
cmp
inc
rcll
test
xorl
xor
push
aad
mov
stc
fcomi
mov
and
out
xchg
sbb
lds
xorl
xchg
push
pop
sahf
dec
in
jb
pop
jo
xchg
cld
or
mov
aaa
xchg
inc
inc
inc
and
adc
shrb
inc
negl
call
sbb
outsl
pop
jl
jge
xor
or
js
mov
fstpl
push
mov
dec
xor
sbb
xor
shrb
popf
loop
inc
ljmp
enter
xor
rcrl
mov
mov
fsubrs
push
cwtl
sub
sbb
movsl
sub
fwait
dec
fcoms
lods
subl
mov
fsubs
mov
ja
lods
sub
lahf
inc
cld
mov
xor
aas
ds
cli
mov
push
arpl
cmp
ficoml
mov
jno
lods
jge
lret
sub
and
jge
mov
jg
pushf
jp
int3
into
add
push
icebp
xor
jl
rorl
sbb
sahf
mov
loop
adc
dec
jo
mov
sub
jo
cmpsb
dec
mov
push
shll
mov
mov
les
inc
in
mov
or
push
inc
push
push
push
xor
and
mov
xor
testb
rclb
mov
aaa
out
push
push
cld
shll
hlt
sub
lcall
lret
and
inc
shr
nop
stc
je
shlb
mov
mov
lcall
roll
pop
sbbl
fildl
pusha
push
fidivs
test
add
dec
out
xchg
fldt
adc
ret
dec
pop
mov
jae
pop
dec
lock
dec
add
jnp
inc
push
xchg
jne
in
push
lds
test
jbe
mov
jl
pop
cltd
insb
jl
mov
sub
pop
je
clc
sbb
lret
outsb
add
outsl
mov
sub
loop
repnz
cli
pop
or
int
pop
push
pusha
jb
cmp
mov
add
aas
jmp
pop
aas
enter
pop
leave
in
push
adc
call
push
add
int
inc
push
inc
call
addb
sub
sub
stc
and
push
or
xlat
pop
out
jmp
repnz
dec
arpl
leave
sub
or
lock
fildll
sbb
nop
lock
or
loope
dec
dec
in
sub
dec
shlb
pusha
outsl
fldl
cmp
in
dec
cmp
loop
jle
sub
idivl
dec
mov
sbb
lret
adc
xor
enter
ss
sti
mov
iret
and
dec
ss
mov
test
loop
popf
data16
mov
adc
loope
push
je
mov
xchg
pop
xchg
test
add
or
or
inc
mov
sti
sbb
xchg
mov
clc
out
adc
mov
pop
std
inc
mov
fnstcw
inc
mov
cmp
cmp
loope
lret
jg
inc
test
es
mov
imul
movsb
or
hlt
xlat
stos
mov
scas
iret
stos
sbb
scas
cmp
std
and
pop
ja
inc
pop
aaa
jmp
jae
frstor
subl
stos
adc
cld
lds
xor
outsb
dec
shrb
jno
int
and
xor
stc
and
jg
lcall
mov
adc
cli
iret
lock
adc
mov
push
scas
jl
hlt
mov
cmp
stc
push
and
xchg
insb
mov
or
mov
pop
ret
xchg
lods
pusha
mov
repz
sahf
or
ret
jge
lock
push
or
mov
xor
std
jmp
pop
jp
out
xchg
sbbb
or
cmp
std
movsl
roll
ja
mov
insl
decl
xor
cmpsb
imul
inc
pusha
lds
jne
cltd
dec
lods
pop
out
rcl
out
stos
sti
push
fadd
icebp
xchg
aas
xchg
ret
int
incb
mov
or
sub
mov
sub
jl
mov
es
and
push
flds
dec
enter
js
or
stos
xchg
and
data16
xor
mov
leave
aad
push
dec
push
hlt
in
adc
add
das
subl
or
inc
out
fistpll
hlt
fsubrs
addr16
mov
das
pop
lcall
mov
out
js
adc
xchg
jg
mov
pop
mov
stos
or
aad
inc
xchg
outsb
add
orl
add
loopne
call
ss
rcr
out
lcall
jmp
fwait
inc
shll
xor
ret
or
dec
add
mov
mov
xchg
push
mov
push
cmpsl
lea
lods
out
mov
jecxz
push
jmp
sub
adc
andb
cmc
sbb
pop
lret
cmp
out
pusha
lcall
xchg
jmp
fadds
daa
loopne
jg
lahf
xchg
jne
nop
or
mov
xor
ds
or
pop
aaa
call
pop
aaa
and
jae
jo
lcall
call
movsb
xor
fs
sbb
jp
mov
push
and
scas
fwait
and
dec
add
jae
mov
xor
cmp
mov
and
int
jno
mov
repnz
and
enter
xchg
gs
jle
sbb
rcll
pop
mull
cmp
fwait
sub
jg
pop
pop
les
cltd
mov
cmpsb
push
mov
fwait
aad
cmp
repz
sub
push
adc
cs
stos
mov
sarl
aad
stc
mov
aaa
in
cs
imul
push
mov
xchg
adc
sub
aam
in
shrb
dec
adc
mov
dec
addr16
fists
jecxz
fs
divl
lods
add
pop
mov
hlt
adc
or
xor
jecxz
enter
cmp
test
push
aad
lock
loopne
push
jbe
lahf
pop
fsubl
bound
sub
cmp
cmp
push
out
jg
dec
rol
ljmp
aam
mov
lret
in
ret
push
dec
scas
repz
add
add
mulb
or
xor
popf
cmpsl
stc
or
aam
adc
jno
or
dec
das
inc
mov
xchg
loopne
push
cmp
fildl
jb
aad
ja
stc
add
jb
dec
aas
ficompl
xor
mov
adc
dec
imul
int3
test
mov
cmp
xor
xor
daa
outsb
cmp
js
roll
popa
push
out
cld
iret
int3
add
cli
outsl
testl
sbb
jbe
push
dec
xor
adc
outsb
cltd
dec
cmpsb
cwtl
loop
push
pop
and
xor
add
mov
xor
pop
adc
lods
add
sbb
ret
lea
rcrl
lret
std
in
push
inc
inc
ds
mov
jns
fiadds
ljmp
int3
mov
leave
inc
test
negl
dec
out
xchg
sbb
xchg
xor
ffree
sahf
in
ret
pop
out
not
jbe
das
fimull
lods
rclb
ja
scas
call
shrl
cltd
cmp
jmp
push
jmp
aas
addl
in
das
jns
iret
cmp
jne
jl
jo
das
aad
inc
cmp
lds
mov
call
jp
popf
rcpps
mov
loopne
xchg
xor
xchg
mov
dec
push
lahf
test
movsb
mov
loopne
xchg
xchg
insb
loop
pop
or
scas
dec
pop
mov
mov
shlb
cmp
xchg
testb
push
data16
ret
ret
mov
or
aaa
or
rclb
lret
ja
pop
maxps
arpl
cmpl
sti
out
jecxz
and
mov
add
cmpsb
outsb
xorl
fs
hlt
ret
dec
add
aad
rcl
fwait
sbb
xchg
and
inc
lret
ja
rolb
xchg
push
cld
enter
gs
cltd
gs
sub
lea
push
mov
sub
ret
mov
lods
or
out
cmpsl
inc
add
and
lahf
fsub
ljmp
inc
sahf
jp
int3
lds
xchg
mov
dec
mov
add
cli
out
out
mov
pop
test
jnp
cmpsl
shrl
inc
adc
mov
int
dec
mov
les
add
xlat
lea
scas
loope
lahf
push
dec
stos
sub
mov
mov
inc
jmp
or
mov
lock
loopne
add
neg
pop
cmp
xchg
call
ret
insl
xchg
js
mov
mov
xchg
pop
bound
push
aas
mov
mov
aaa
sarl
mov
inc
or
or
aaa
push
sbb
mov
fnsave
shrl
loopne
cmp
cmp
lock
pop
aaa
or
imul
or
push
dec
sub
add
inc
dec
lds
dec
in
sbb
cmpsl
test
clc
xlat
mov
cmp
fidivl
or
cld
cld
inc
jl
dec
sub
jbe
mov
nop
sub
mov
push
xchg
xchg
iret
stos
insb
or
mov
imul
sbb
xor
add
cld
xchg
bound
shrb
xor
mov
jns
dec
adc
cmpsl
scas
jmp
jmp
clc
mov
push
loop
test
inc
stos
cltd
stos
test
fs
inc
jg
pop
cwtl
lahf
icebp
push
ds
jle
mov
call
push
imulb
add
adc
mov
mov
push
sahf
outsl
enter
stc
pop
ret
xchg
xchg
inc
mov
insl
fdivrs
dec
icebp
lcall
ret
flds
xchg
dec
jecxz
pop
stos
ret
out
add
mov
test
je
push
jg
sbb
dec
cmpsb
push
mov
pop
jmp
jmp
js
or
pop
mov
sbb
clc
pop
jl
and
out
add
aas
aaa
je
ret
xor
movsb
or
xlat
push
adc
or
cmpsl
test
jno
jle
inc
or
mov
lods
dec
enter
inc
sbbb
mov
fistl
jno
mov
push
and
jne
jb
xchg
mov
bound
arpl
insb
mov
pop
imull
in
mov
adc
scas
sbb
aad
frstor
out
mov
cli
push
lock
cld
mov
inc
jo
mov
sbb
push
jno
call
fcmovu
push
fistpl
jnp
fildll
je
push
mov
xor
adc
pop
push
aas
movsl
dec
dec
mov
pushf
pop
lahf
push
mov
inc
orb
scas
push
enter
mov
cs
cli
push
push
adc
xor
lret
jl
and
mov
pusha
pop
mov
int3
xchg
inc
addr16
lods
adcb
mov
jecxz
in
pop
cmp
sub
bound
lods
out
mov
mov
or
mov
xchg
addr16
xor
ss
data16
sar
dec
cmpsb
nop
outsb
ficomps
lcall
je
hlt
mov
stos
inc
lret
or
outsl
mov
ja
push
or
xor
mov
lcall
roll
in
icebp
pushfw
jg
mul
leave
jns,pt
jmp
sbb
mov
cmp
test
mov
hlt
rcll
outsl
xlat
jnp
out
loope
fsubrl
jecxz
inc
xor
jg
and
test
and
push
pop
imul
push
push
mov
inc
jecxz
push
dec
fistl
pop
lretw
cs
fwait
sbb
leave
pop
popf
inc
xchg
gs
int3
pop
frstor
xchg
jo
iret
pusha
es
ficompl
mov
cmp
in
pop
and
stc
mov
push
or
ljmp
shlb
jge
lock
xchg
test
mov
pop
mov
pushf
sbb
andl
push
jmp
aaa
scas
xchg
fsub
dec
xchg
lret
cmp
out
stos
faddl
ret
dec
xchg
or
icebp
daa
fs
add
sub
dec
loopne
pop
sarb
push
fsubrp
imul
sbb
cmpsb
pop
dec
xchg
lods
sar
call
fdiv
jmp
fwait
leave
fdiv
pop
cmp
sub
in
iret
call
fstps
std
out
inc
decb
in
fcom
or
fstpl
cs
lea
or
dec
xchg
popf
es
inc
add
lret
push
testl
sti
stos
movsl
cmp
daa
push
jb
sub
push
push
xor
pop
fidivrs
xchg
pop
lahf
rorb
sahf
mov
add
add
sub
dec
lods
jnp
xor
fwait
adc
jle
int3
stos
push
inc
xor
mov
adc
push
xchg
xorb
inc
sarb
push
jae
pop
and
push
mov
add
pop
repz
shrl
xchg
filds
bound
xor
mov
mov
loop
add
in
jp
mov
mov
aaa
inc
mov
stos
mov
std
xor
call
cmpsb
outsl
mov
pop
testl
stos
dec
jnp
mov
js
xchg
stc
inc
push
movzwl
mov
push
pop
inc
cmp
inc
mov
jnp
out
les
mov
rep
xor
add
cmpsb
fldl2e
pusha
pop
fmul
or
pop
out
js
adc
pop
sti
aad
jnp
fdivrs
or
incl
out
or
in
mov
mov
jp
push
mov
mov
fwait
mov
push
js
sar
int3
add
mov
stos
imul
cltd
ret
sbb
hlt
push
in
scas
arpl
shrb
jo
fisttpl
jno
and
mov
or
loop
adc
loopne
cmpsl
repnz
in
scas
arpl
jl
pop
popa
lret
or
cld
bound
jmp
fdivrs
mov
loopne
fildll
stos
adc
push
fwait
or
pop
jp
inc
push
and
adc
jae
sub
fwait
mov
dec
addr16
pop
pop
cmp
scas
cmp
xchg
sbb
cmp
stc
ljmp
lods
ja
fxtract
bound
aam
adc
push
insl
jae
pop
leave
sahf
mov
lcall
jno
outsb
mov
dec
xchg
test
cwtl
lods
mov
or
pop
push
hlt
mov
jl
mov
out
xchg
stc
insl
mov
and
adc
fidivs
ja
inc
jecxz
popa
xor
xchg
adc
jo
rcll
repz
jg
and
jmp
addr16
pop
out
and
in
or
lahf
mov
orb
mov
movsb
loope
inc
cmc
adc
pusha
sbb
sub
and
inc
add
xchg
adc
jno
pop
aad
out
push
adc
cltd
xor
into
cwtl
add
mov
lea
and
incl
loope
and
xchg
dec
fists
movsb
mov
sbb
stc
mov
out
xor
jnp
mov
scas
cli
mov
add
push
push
inc
lock
nop
outsl
mov
or
cmc
lods
mov
pop
in
sbb
popf
fwait
or
mov
incb
xchg
xchg
sbb
dec
mov
andb
in
sub
mov
sahf
fstpt
rol
loop
ret
mov
xchg
push
fucomip
push
repz
mov
mov
aam
gs
xchg
sub
aas
loop
pop
mov
add
rclb
inc
sub
mov
adc
call
cltd
lret
mov
cmp
stos
sub
iret
sbb
sub
ret
and
std
out
lahf
and
pop
lahf
adc
jnp
xchg
call
fdivp
out
sub
xor
stc
sbbb
sbb
sub
aam
sbb
mov
leave
or
shlb
mov
popf
aad
pop
xchg
or
dec
fisubs
inc
mov
jl
mov
push
cmpsb
adc
call
aad
sbb
mov
cld
fcmove
stc
mov
subb
and
lcall
js
int3
sbb
jmp
push
push
jl
push
sub
push
idiv
mov
pushf
dec
cs
mov
push
adc
pop
lods
jp
sub
add
ror
jb
imul
cmc
cmp
outsb
dec
lods
xor
push
push
jp
add
aam
jns
pop
notl
scas
insl
dec
or
and
or
pop
mov
adc
fildll
loop
sbbb
add
test
xorl
fstl
test
and
lods
and
xchg
cmpsb
cmp
sahf
jnp
mov
dec
and
jge
xor
xchg
push
lret
mov
icebp
or
jo
mov
fimull
mov
lock
cltd
cmpsl
dec
lock
mov
test
rorb
pop
cmpsb
gs
and
sub
rcrl
int
or
and
bound
cmpsl
jno
push
test
dec
inc
std
shlb
cmp
adc
cmp
leave
push
cmpsb
divb
mov
jnp
lods
cmpsw
iret
jp
mov
jb
scas
inc
in
stos
fsubrs
outsl
push
mov
movsb
dec
add
xor
xchg
mov
jns
ret
xor
jo
in
ret
dec
mov
push
mov
adc
push
shll
arpl
jb
xor
pop
add
xchg
divl
aad
mov
pop
add
mov
pop
mov
mov
ret
xchg
mov
or
int
js
clc
mov
es
mov
push
fldl
xor
and
adc
mov
mov
push
lret
insb
sub
mov
xchg
cmp
jo
cmc
mov
pop
mov
ret
jg
inc
jnp
sub
es
dec
arpl
andb
mov
adc
jecxz
orb
ss
adc
nop
mov
jmp
jg
cmp
test
mov
movsb
push
and
sub
popa
rcr
cmpsb
inc
jbe
mov
dec
mov
xor
cmp
incb
outsl
ret
dec
jle
mov
in
add
cmp
insb
out
stos
inc
inc
jge
jl
out
test
mov
pop
jo
sub
and
mov
lahf
aam
jle
sub
sbbb
push
stos
scas
roll
ss
out
insl
mov
shl
ljmp
jmp
jl
and
inc
adcl
mov
mov
push
loopne
out
mov
inc
aad
xlat
lahf
xchg
ja
nop
es
outsl
or
lds
fdivrs
scas
fs
pop
clc
popf
mov
inc
push
and
jb
adc
outsb
xchg
lea
sub
pop
sbb
jbe
adc
sub
bound
stos
sub
inc
add
call
xorl
mov
and
dec
mov
xchg
pop
cmp
adc
mov
fstpl
std
in
pop
clc
or
lcall
push
in
jne
scas
lods
iret
jb
push
add
shl
xchg
sub
dec
push
loopne
nop
mov
jle
aaa
push
movsl
xchg
rclb
popf
das
mov
filds
rol
pop
in
mov
push
ss
lods
mov
jno
mov
fs
mov
dec
cmp
inc
dec
dec
add
sub
flds
sarl
xor
nop
insb
and
mov
inc
xchg
into
jnp
lods
mov
cmp
fdivs
push
jmp
xor
scas
jp
aad
in
neg
mov
adc
lcall
mov
inc
xchg
cld
jecxz
cmp
cmp
scas
add
fld
sarb
mov
xchg
xchg
fcmovb
xchg
pusha
lea
mov
lods
jno
inc
push
pop
lret
adc
bound
inc
mov
and
in
mov
cltd
inc
pop
mov
xor
jle
xchg
in
xchg
clc
mov
ss
fsubl
xchg
xchg
mov
fwait
je
loop
pusha
imul
out
pop
bound
or
sub
and
scas
hlt
das
je
pusha
fnsave
add
sbb
cwtl
or
aad
aas
or
stos
add
scas
xor
adc
out
ss
mov
das
push
and
xchg
cmp
dec
sahf
int
xor
loopne
push
sub
and
lods
mov
lods
pop
xorb
mov
mov
sbb
std
mov
fnsave
xchg
xchg
xchg
or
adc
out
insb
sbb
cld
adc
pop
add
lds
mov
xchg
push
imul
nop
push
mov
in
xchg
mov
mov
js,pt
jne
ja
jp
sbb
fcmovbe
jge
arpl
push
fcomps
scas
xor
mov
push
push
out
in
je
pop
roll
out
xchg
sbb
btc
jg
and
repz
or
inc
xchg
faddl
jnp
enter
cmp
sbb
fisttpll
xchg
mov
dec
test
and
xchg
pop
mov
xchg
xchg
icebp
outsb
push
in
rcrb
xchg
test
mov
add
adc
arpl
rcrl
xchg
fisubs
stos
shrl
xchg
popf
and
lret
ret
jno
jb
or
xor
xchg
xor
jnp
pop
fildl
imull
xor
mov
insb
repnz
lock
jp
adc
cli
push
lock
lods
xchg
pop
push
rorb
iret
sub
mov
fldl
scas
xor
xchg
jp
test
mov
jge
mov
jbe
pushf
sub
dec
in
cs
pop
add
inc
and
subl
mov
mov
pop
push
out
testb
adc
in
sbb
pop
mov
mov
shlb
jae
jg
in
mov
fdivrs
mov
movsb
mov
push
push
ds
popa
add
jbe
push
enter
cltd
bound
dec
hlt
sub
jae
adc
jp
adc
outsl
mov
xchg
out
push
mov
cmpl
mov
inc
loopne
cmpsl
sbb
push
movsl
mov
sar
out
fidivrs
in
mov
xlat
dec
inc
mov
insb
inc
imul
cli
or
adc
imul
out
popf
pop
sbb
stc
or
daa
mov
mov
stos
subl
pop
mov
aas
scas
nop
xchg
push
add
popa
daa
and
inc
pushl
adc
cmp
inc
jo
mov
xchg
xchg
push
lret
pop
cmpl
addr16
shl
sbb
in
mov
xchg
dec
add
sbb
sub
addr16
jne
xchg
pushf
loopne
push
std
std
add
inc
dec
cmp
fwait
fs
or
cmpsb
adc
jne
jb
cmp
dec
stos
rcrb
adc
xor
test
pop
imul
pop
and
pop
push
fs
inc
imul
nop
jns
dec
jbe
add
mov
ficoml
insl
fstpt
pop
inc
ret
test
xchg
out
jb
sub
popl
xchg
xchg
iret
adc
scas
mov
loop
xchg
scas
shll
cmp
xor
add
xchg
and
cmp
and
jae
dec
sti
loop
or
push
aam
pushf
and
test
int
inc
lds
mov
lock
jns
jp
sub
scas
dec
sbb
or
and
int3
outsb
jno
addb
or
or
xchg
cmp
mov
shll
jae
xchg
daa
sarl
mov
jns
pop
dec
mov
and
jae
mov
je
mov
mov
dec
dec
push
scas
pop
sub
xchg
jnp
sbb
aad
test
add
mov
inc
pop
dec
inc
movsb
add
shrl
lea
test
mov
sub
mov
jmp
shl
or
sub
dec
inc
mov
addr16
xor
push
jge
popa
aas
loopne
xchg
dec
shrl
fidivs
ret
addr16
outsl
or
mov
pop
adc
jb
jne
xor
stos
js
push
xchg
insl
movsl
ljmp
stc
repz
xchg
andb
das
xor
jno
popa
mov
xchg
jle
mulps
leave
stc
push
dec
cmc
push
loope
jg
dec
out
outsl
ja
ljmp
inc
cwtl
ror
xor
xor
push
mov
and
hlt
cmp
fcoml
std
mov
imul
push
sbb
xchg
jg
out
inc
jl
pushf
rcl
dec
and
add
jmp
or
jl
adc
sti
daa
mov
xchg
mov
xchg
enter
ret
fdivrp
sbb
pop
test
pop
xor
lods
dec
std
icebp
pop
jmp
dec
adc
addr16
popf
cmp
mov
jns
adc
rol
push
gs
fidivl
hlt
cmpsl
jae
sub
stos
cmp
adc
fildll
jo
sbb
inc
push
pop
jl
leave
mov
mov
cmp
cmpsl
mov
jmp
es
sub
sub
xchg
shll
lock
into
cmpsl
repz
fldt
pop
xchg
lods
addl
scas
cmp
jecxz
xor
stos
push
cmp
and
fidivrs
fiadds
mov
loopne
fcompl
jge
into
mov
cmp
sti
adc
xchg
pop
pop
mov
dec
out
movsb
xor
mov
rcl
dec
xor
jmp
jb
xorb
inc
cmp
push
mov
sahf
rol
cmpb
pop
call
pop
jns
push
std
push
fs
rcrl
cmpl
mov
mov
out
dec
cmp
pop
outsb
lods
or
imul
pop
or
inc
cmp
cmpsl
pop
sahf
mov
pushf
jae
rorb
mov
and
aas
or
mov
mov
insb
xchg
jl
subb
outsl
sub
xchg
and
mov
xor
iret
pop
inc
test
push
mov
daa
lea
and
popl
mov
and
lcall
mov
imul
sub
lret
les
sub
mov
cmp
jnp
inc
xchg
rorb
jp
test
int
ss
pop
scas
and
out
adc
mov
inc
into
push
sarb
inc
add
aad
hlt
lock
cmp
idivb
and
jp
in
fmul
mov
stos
pmaxub
inc
mov
jnp
ficomps
inc
and
push
adc
jae
test
mov
adc
mov
movsl
xbegin
rcll
add
inc
in
insb
dec
lret
mov
sbb
cwtl
push
in
cmpsl
rorl
fistpl
fidivs
imul
cli
adc
cmpsl
stos
sbb
aad
cmpsl
arpl
xor
pop
orb
inc
xor
sbb
sub
neg
je,pt
sti
pop
mov
xchg
mov
fnstenv
outsb
je
inc
mov
shlb
pop
lds
outsb
rcrb
sbb
adc
mov
test
out
sub
fildl
nop
sbb
test
jo
dec
jae
jl
cld
xchg
popa
mov
daa
mov
pushf
or
mov
nop
cld
idivb
push
popl
adc
out
aaa
lcall
popf
ljmpw
mov
push
into
jmp
cmp
and
add
adc
cld
out
mov
leave
or
in
jle
repz
xchg
lret
dec
test
sub
push
loope
add
test
xchg
and
cltd
adc
idivb
adc
or
sub
mov
jne
inc
int3
scas
mov
mov
push
push
cmp
mov
aas
lods
movsl
call
fsts
je
pushf
jae
mov
cmpsl
bnd
sub
xor
fisubl
jl
mov
insb
push
sub
xor
xchg
lock
stos
cmp
stc
in
test
dec
sub
ljmp
aad
sub
push
cwtl
mov
xor
icebp
sbb
fstp
xorb
sub
into
outsl
or
and
cltd
popf
mov
dec
pop
inc
sub
mov
or
pushl
rol
inc
mov
imul
out
stos
jecxz
dec
mov
push
push
xor
daa
jmp
push
ljmp
pushf
or
mov
sarl
mov
or
loope
js
jmp
out
xor
icebp
jle
ds
jo
fadds
cld
sbb
in
push
sbb
scas
mov
or
jne
xchg
mov
jecxz
add
xchg
xchg
mov
ret
in
jbe
je
movsl
arpl
cli
inc
sub
aas
mov
std
mov
ficoml
push
fbld
sbb
int3
ret
outsb
jae
out
push
movsl
dec
loope
jp
push
insb
fnstcw
adc
cmp
repnz
adc
inc
movsb
pop
gs
fiaddl
in
cmp
int
out
loopne
cmp
mov
xchg
cwtl
test
iret
cwtl
xor
lret
test
sub
add
cmp
cltd
xchg
dec
mov
xchg
iret
jl
imul
dec
xchg
add
adc
xchg
jmp
das
mov
lret
adc
jo
xchg
fdivr
imul
sub
xor
jo
test
mov
mov
or
ficoms
inc
jp
outsl
pop
and
inc
in
mov
xchg
adc
mov
and
cmpsl
or
push
xor
and
jle
cmp
clc
lods
add
dec
mov
xor
mov
xchg
daa
and
add
inc
and
outsl
shlb
push
lods
mov
aam
sbb
mov
aad
mov
push
scas
mov
sbb
mov
inc
into
or
xchg
nop
jge
xor
pop
inc
rclb
push
js
sbb
stos
test
mov
lcall
add
mov
in
and
inc
sub
cld
sbb
jp
push
mov
sbb
or
imulb
imul
cld
jno
inc
push
das
pop
insb
add
xchg
add
lock
sbb
sub
xchg
xchg
jl
pop
push
cmp
mov
sub
fisttps
lods
cltd
movsb
data16
popa
sbb
imul
popa
add
dec
clc
aas
jl
sub
dec
mov
fldt
mov
fisubrl
jo
je
insl
mov
and
cltd
adc
into
xor
out
dec
std
das
call
inc
shl
sbb
inc
push
inc
insl
fimull
dec
jmp
inc
popf
pop
shll
push
leave
or
lds
mov
dec
repz
xchg
xchg
or
cmp
push
testb
pop
and
lret
imul
or
outsl
jl
push
scas
mov
jb
out
std
fstpt
xlat
dec
pushf
mov
mov
cltd
push
mov
xchg
or
scas
pop
sbb
fwait
pop
scas
cmpsb
pusha
add
jb
inc
jne
jne
push
sub
repz
adc
sbb
sub
decb
push
pop
push
xor
stos
dec
outsl
ret
in
sbb
lahf
push
test
ds
ja
cmc
ret
ret
je
fs
jle
cwtl
into
mov
cmpl
lea
add
clc
lahf
sahf
sbb
pop
adc
cmp
sbb
push
inc
jg
insb
out
sub
dec
xchg
aaa
fisubrs
lods
cs
push
xchg
dec
aam
xchg
clc
test
data16
fdivrs
movsb
sbbb
insl
add
and
cs
notl
dec
inc
add
dec
ja
icebp
push
sbb
mov
cmc
cmp
push
ljmp
dec
jb
sbb
dec
mov
push
or
add
out
adc
lret
pop
adc
stc
mov
push
sub
and
cmp
xor
inc
shl
dec
sti
xorl
test
add
inc
test
adc
sub
mov
add
cmc
xlat
push
ljmp
cmpsl
mov
mov
leave
dec
int3
xchg
add
lret
jg
out
xchg
nop
push
mov
jne
lcall
leave
mov
cmpsl
scas
dec
mov
bound
jmp
cmc
or
xchg
jl
xlat
frstor
fwait
mov
lahf
cmp
sbb
xchg
mov
add
pop
in
pop
pop
jns
dec
fdivs
stos
add
test
fyl2xp1
push
mov
inc
jg
imul
jnp
movsl
sub
fimull
mov
jne
mov
iret
cwtl
lahf
add
test
push
inc
in
scas
inc
adc
sub
adc
mov
cmc
jo
dec
sbb
scas
notb
xchg
add
add
rclb
aad
pop
test
enter
or
loopne
testl
aas
xchg
add
lods
inc
add
and
pusha
inc
xchg
inc
ds
shl
int
mov
cltd
dec
xchg
pop
fnstcw
sti
out
sub
cmp
add
or
xor
jo
icebp
pop
test
sub
pop
out
xor
dec
sahf
pop
hlt
lahf
sbb
les
mov
pusha
adc
nop
jo
adc
sub
jle
cld
add
mov
fistpll
adc
ljmp
add
mov
ljmp
cs
add
cli
cmp
adcl
sub
mov
xchg
cmpsb
xchg
xchg
fs
jo
nop
push
inc
adc
mov
ror
nop
cld
aam
shlb
nop
fwait
dec
mov
fdivrl
out
rorl
jne
adc
int
cwtl
jp
ds
jae
arpl
pop
sbb
push
jbe
jnp
aam
dec
lods
leave
lds
addr16
popa
test
daa
inc
loop
mov
mov
dec
xor
xchg
push
data16
lds
pusha
out
out
cmp
add
add
loop
ret
dec
mov
imul
sub
out
xchg
std
shll
xorl
ss
mov
clc
sbb
cmp
pop
mov
add
fistps
or
and
cmp
xchg
movl
fs
insb
lods
cmp
cmpsb
jl
ret
rclb
mov
stos
rcll
dec
xor
jb
add
hlt
repnz
les
push
out
xchg
sbb
push
dec
mov
pop
and
push
sahf
push
mov
into
out
aad
sbb
and
mov
fidivrs
push
mov
movsl
pusha
adc
dec
cmpsb
push
or
rol
out
div
mov
gs
mov
je
decl
lcall
pop
jle
dec
outsb
mov
or
gs
jmp
or
dec
and
cmpsb
mov
icebp
sbb
in
mov
fs
outsl
mov
cmpsb
pop
enter
jle
mov
rorb
cmp
add
push
xchg
jg
pop
orb
cmp
sahf
loopne
pusha
outsb
js
mov
movsl
popa
jg
or
lret
add
add
sub
dec
xor
jb
jle
pusha
fxch
ret
cs
mov
rorb
xor
xor
inc
mov
push
pop
fnstsw
xor
pop
lcall
pop
fldcw
fsub
push
mov
sub
push
addr16
cmp
xchg
lods
jmp
bound
cmp
inc
cmp
popf
sbb
or
adc
cli
cmpsl
imul
nop
jl
das
loopne
mov
stos
xchg
test
jecxz
cltd
test
jno
mov
movsl
addl
int
mov
dec
outsl
mov
les
int
jnp
adc
clc
pop
in
out
sbb
push
outsl
fisubrl
jmp
aad
pop
pushf
add
lods
jnp
in
jle
lahf
mov
repnz
inc
hlt
dec
lea
es
mov
pop
test
out
cmpsb
or
test
xor
test
dec
mov
insl
cmpl
or
repz
jnp
es
std
xchg
push
sub
jo
xor
rcrl
bound
mov
push
mov
test
jg
push
test
clc
lods
cltd
xchg
dec
jne
mov
lret
inc
jnp
pop
xor
popf
push
stos
shlb
or
icebp
jg
jle
into
xchg
xor
cltd
jne
xchg
leave
bnd
ffree
add
into
sub
dec
jnp
jl
lcall
mov
xor
xchg
fisubs
test
xchg
lods
pusha
sub
data16
and
jp
jbe
insl
mov
add
adc
mov
data16
xchg
sub
arpl
ja
repz
arpl
mov
and
lea
call
mov
jae
mov
push
and
xor
je
jne
ret
mov
fnsave
ret
xchg
mov
sub
adc
or
lock
push
pop
cs
jb
jae
inc
loopne
std
mull
inc
in
mov
loope
out
jo
hlt
adc
lods
and
cld
cltd
xor
inc
xchg
in
out
pop
out
inc
cwtl
jno
sahf
adc
dec
cwtl
pop
cmc
inc
cwtl
mov
xorb
mov
inc
or
xor
push
clc
mov
and
or
ror
sbb
aas
sbb
movsl
mov
push
in
jg
ja
lret
dec
mov
int3
xor
mov
in
into
out
mov
scas
rclb
lods
ljmp
lock
fdivrp
enter
pop
xchg
dec
mov
mov
pop
fwait
and
leave
clc
int
sub
push
lods
fildll
jmp
xor
push
push
decl
sub
push
jbe
xchg
aaa
shrb
cmp
xchg
push
ss
mov
rcl
nop
ss
rcrb
or
xchg
leave
adc
bound
into
mov
sub
mov
icebp
and
aaa
cmpb
shlb
cwtl
stc
scas
pop
nop
aas
inc
imul
test
out
inc
or
xchg
cmp
lret
push
inc
add
and
stc
pop
nop
cltd
stos
lcall
outsl
insl
push
or
sbb
shlb
pop
inc
negb
mov
hlt
mov
fwait
jo
xorl
out
adc
sahf
push
or
mov
mov
cmp
lcall
lcall
mov
out
jg
jae
fcoms
inc
mov
pusha
inc
mov
xor
call
add
mov
add
push
popa
lea
pop
xor
cs
mov
fsubs
in
bound
mov
xchg
lods
popa
dec
mov
cs
sub
mov
jecxz
dec
clc
pop
scas
push
xchg
sti
popw
push
cmp
cs
pop
pop
jge
push
aas
mov
xor
stc
mov
jbe
push
inc
jo
or
outsb
cmp
frstor
and
push
es
outsl
cmp
and
mov
cmp
lret
jb
push
testl
test
cld
xor
add
jecxz
call
xor
mov
movsl
cli
out
mov
loop
icebp
adc
aam
push
arpl
lahf
imul
lcall
leave
clc
jo
jno,pn
lret
mov
sub
add
mov
movsb
xchg
pop
std
cltd
mov
outsl
icebp
loope
outsl
inc
gs
xchg
push
inc
sar
dec
adc
jnp
dec
cmp
mov
orl
xchg
imul
icebp
mov
inc
aas
js
cmp
test
repz
je
push
mov
and
or
pushf
push
pushl
xchg
mov
push
dec
rcr
push
pop
lods
or
repnz
dec
inc
sbb
mov
cmp
mov
push
mov
push
jns
dec
pop
push
mov
fnstcw
repnz
or
fwait
sub
fwait
xchg
mov
sbb
xchg
mov
jbe
stc
inc
pop
mov
test
arpl
sub
add
repz
repnz
inc
cmpsb
popa
popa
xchg
je
je
fsubrl
stos
movsl
cmp
add
mov
and
stos
add
push
jo
jg
push
je
cmp
pop
ja
sbb
pop
xchg
sbb
frstor
lahf
out
outsb
xlat
int3
dec
out
mov
cmp
fcmovnbe
cld
negl
inc
lods
ret
and
jecxz
pop
sbb
adc
pop
repnz
gs
sub
inc
imul
dec
scas
in
mov
dec
pop
ds
out
mov
sbb
mov
cmp
leave
pop
pop
inc
incl
and
inc
test
jge
pop
fldenv
push
or
out
div
loop
sbb
sub
mov
fwait
std
vpshad
mov
inc
mov
sub
mov
clc
in
scas
subb
mov
aas
push
add
cmp
sub
fcmovbe
xchg
lods
hlt
jg
dec
icebp
mov
test
and
ret
inc
xchg
mov
add
js
aas
sbb
inc
push
pop
stos
pop
fstps
fs
xchg
imul
stc
imul
hlt
rcrb
dec
cmp
fisubl
mov
or
jno,pt
aad
clc
aas
icebp
int
test
mov
mov
ljmp
stos
mov
xchg
mov
ret
fwait
outsb
sbb
push
lods
fwait
xor
outsl
ffree
cmp
aam
pop
adc
mov
data16
incl
fsts
dec
fcomi
sbb
cmp
jg
loope
xorb
incl
cmp
mov
mov
or
push
fistps
cmp
jge
mov
ffree
repnz
aas
push
pop
sbb
mov
add
sbb
or
push
es
mov
out
sbb
mov
lds
xchg
or
mov
cmp
popf
mov
stos
mov
mov
call
sub
fwait
cmp
scas
push
fcompl
pop
sub
jb
add
mov
cwtl
cld
mov
sbb
xor
loope
cmpl
adc
movsb
jg
cltd
int3
add
dec
cmp
mov
jle
and
push
lods
dec
add
jbe
add
pop
push
push
mov
sbb
inc
stc
inc
xchg
or
jp
jp
les
and
push
lods
sbb
pop
and
data16
ret
std
fbstp
sub
pop
lea
jns
mov
jecxz
adc
jecxz
mov
mov
add
and
sub
push
fmull
les
daa
xlat
lea
push
and
stos
leave
aad
mov
jae
lods
lahf
mov
cmp
icebp
pop
movl
xor
add
dec
movsl
in
add
out
sbb
aam
imul
mov
or
or
bound
stos
jne
cmc
ret
insl
inc
dec
and
and
fdivrs
pop
out
sbb
cmpb
xlat
aas
mov
or
cli
jbe
sbb
push
bound
sbb
cmpsb
xor
jle,pn
or
xor
sbb
clc
ret
mov
cli
out
les
mov
pop
pop
test
mov
sti
daa
nop
insl
jle
pop
mov
into
cs
sbbl
mov
les
mov
out
mov
xor
ss
movsb
test
sti
negb
pusha
jb
gs
gs
push
lds
or
mov
adc
fsubrl
shrl
ret
pop
push
enter
fdiv
insb
pop
test
sahf
and
inc
sub
xlat
cs
inc
or
js
and
mov
jmp
mov
gs
lcall
fisttpll
mov
push
pop
jns
or
inc
xor
cmpsb
hlt
adc
mov
int
xor
pop
mov
mov
cmp
mov
mov
mov
push
ja
outsl
aam
cmp
sbb
or
xor
into
addr16
adc
rolb
pop
push
stos
adc
cmpsl
inc
aaa
mov
lock
lods
jmp
popa
jne
enter
aad
inc
jmp
aas
xor
add
loope
xor
ret
push
js
lahf
popa
fsubr
mov
lret
inc
andb
fstpt
pop
lret
sbb
fldl
cmp
sub
pop
mov
mov
sbb
jle
and
lods
ret
inc
xchg
int3
lret
pop
nop
in
xor
loope
ljmp
jecxz
sbb
fimull
ret
mov
xchg
fsubp
mov
in
out
pop
xchg
fstpl
cmp
push
cmp
mov
lods
xchg
lahf
cmpsl
add
xlat
push
daa
inc
adc
mov
and
cmc
push
test
sbb
adc
sbb
repz
call
sub
outsb
and
divb
xchg
dec
pop
insb
add
mov
inc
movsl
sbb
xor
sbb
movsb
push
sbb
cli
stos
imull
sub
pop
fcmovbe
fiaddl
frstor
sahf
out
insl
cmpsb
mov
inc
das
pop
add
pop
adc
jns
dec
out
in
cmc
psllw
lea
popf
mov
sub
lock
sahf
dec
pop
sbbl
add
xor
mov
cmp
lret
cmpsb
les
pop
popf
outsl
sbb
test
nop
hlt
mov
adc
cmpsb
outsl
out
aad
push
sub
ds
outsl
cwtl
pop
rcrb
iret
ret
out
inc
daa
mov
out
adc
mov
cmp
test
cwtl
repnz
sub
rol
push
decb
mov
add
xchg
test
push
mov
dec
mov
dec
incb
xor
fmuls
adc
adc
aad
mov
aam
std
cmp
xchg
xchg
xor
sbb
push
invd
cs
inc
gs
mov
mov
clc
mov
or
adc
mov
andl
test
lret
pop
mov
cmpsl
subb
hlt
push
inc
fwait
inc
loopne
mov
loop
bound
int
add
pop
and
sub
in
cs
fs
pop
btcl
test
repz
or
dec
cmp
pusha
mov
iret
jo
mov
inc
pop
mov
icebp
bswap
repz
pop
jns
aaa
pop
push
ja
adcl
jmp
ljmp
hlt
xorb
aad
in
fstpt
and
xchg
xor
xchg
adc
mov
or
loopne
pushf
add
dec
enter
cmpsb
jecxz
pop
mov
add
fs
sbb
inc
adc
outsl
mov
xlat
xchg
test
stos
cwtl
mov
sbb
xor
inc
pop
pop
icebp
enter
dec
jne
fs
pop
cmpsl
in
xchg
shll
mov
cmp
in
mov
add
add
pop
jb
js
hlt
jno
push
or
mov
pop
daa
mov
jecxz
sub
mov
adc
sub
aas
repz
fwait
add
mov
jl
mov
xchg
dec
enter
insb
cli
mov
lret
sub
inc
iret
xor
xlat
push
jb
dec
mov
sub
xorl
mov
ds
dec
xor
lret
out
jne
sbb
push
out
jne
jb
leave
xchg
dec
fwait
sub
lret
xchg
xchg
fists
sbb
mov
rcrb
inc
fisttpl
aas
fbld
add
ficoml
sti
lcall
aaa
pop
xor
mov
pop
jp
push
add
cwtl
ss
push
mov
lcall
pop
jg
aam
fmuls
int3
out
fidivs
cmp
roll
adc
xchg
test
ja
int
xchg
jl
fld
adc
lods
mov
dec
push
mov
push
out
fs
stc
sbb
xchg
pop
pop
mov
sbb
std
sti
daa
or
sbb
lea
inc
cmpsb
push
repnz
outsl
xchg
and
push
icebp
add
cmpsb
push
mov
sbb
fs
push
jae
enter
pop
adc
inc
push
cmpsb
ds
sub
and
stos
pop
jg
or
pop
icebp
push
add
decb
lahf
ret
jp
mov
jnp
inc
shrb
sbb
les
sub
lods
ljmp
mov
in
sub
adcb
sbb
shll
cltd
movb
push
loop
xchg
pop
add
xchg
shrl
xor
daa
shlb
xor
rorb
int
fstps
scas
jne
subb
dec
jb
jno
add
push
outsl
add
pop
ror
out
insl
outsb
leave
inc
pop
popf
movsl
cmp
mov
xor
in
dec
lds
call
fsubrs
mov
cs
popf
orb
push
jle
sti
pop
mov
out
xor
aas
in
push
push
ss
movsb
or
xchg
inc
push
pop
scas
nop
mov
xchg
rcrl
or
lods
call
jg
or
inc
out
xor
sub
stos
xchg
pusha
mov
lcall
jge
pop
jo
lret
push
xorl
and
arpl
lret
xchg
je
xchg
or
cmp
pop
inc
push
sub
xorl
movsl
and
pop
faddl
daa
mov
mov
mov
sbb
or
and
pop
cmpsb
mov
pop
cld
xchg
insb
test
jecxz
pop
pop
jnp
cmpl
pop
or
mov
leave
xor
ret
sbb
and
inc
test
lods
sbb
dec
lods
ror
or
loope
sub
fnstcw
test
ljmp
mul
add
mov
mov
jbe
lcall
sbb
or
add
ret
cs
shrb
dec
push
dec
adc
mov
popf
fdivrs
add
push
ret
mov
xchg
mov
mov
push
sbb
scas
xor
pop
sbb
sub
sahf
fistl
je
cli
mov
dec
or
lods
pop
fisttps
fimuls
mov
cmc
rol
mov
rcrb
movsl
dec
fdivr
jmp
pop
dec
mov
dec
mov
or
rorl
int3
clc
sub
xchg
xor
into
in
push
pop
xchg
popa
pusha
cmp
jg
pop
sahf
sbb
clc
int3
test
cwtl
clc
fwait
jl
sub
das
dec
in
pop
dec
rorb
loop
jb
jae
scas
and
inc
lock
mov
pop
adc
lret
insl
stos
cmpsl
and
dec
adc
mov
mov
insb
add
mov
dec
dec
notl
adc
rcrb
xor
pop
mov
scas
push
sbb
adc
ficoms
inc
sti
mov
insl
xchg
out
out
mov
push
or
outsb
mov
cmc
mov
sbb
pop
insb
sbb
out
repz
test
pushf
mov
inc
data16
xor
lcall
jae
subb
mov
shl
dec
sub
ja
jmp
das
ja
adc
movl
mov
jge
add
hlt
fdivr
pusha
test
mov
popa
or
sub
fldcw
adc
imulw
movsl
pop
add
push
add
insl
push
fwait
mov
adc
les
mov
test
pop
lcall
mov
testl
inc
xchg
andl
out
xor
ja
fcomp
pop
xor
je
stos
inc
push
sbb
stc
jle
cld
mov
dec
add
jmp
or
mov
cmp
icebp
sub
pop
sbb
inc
dec
js
or
xor
orb
or
out
push
pushw
loopne
adc
jl
dec
movsb
imul
and
xor
push
cmp
add
les
cmp
rorb
xor
xchg
fnstsw
lds
push
movsl
daa
push
out
insb
adc
incb
or
int
insb
test
jae
into
fisttps
push
icebp
rcll
add
pop
stos
cmp
pushf
fiaddl
or
iret
pop
test
ret
jnp
adc
jo,pt
in
pusha
lods
sbb
xchg
loopne
pushl
testl
fwait
jl
adc
and
push
xchg
and
xlat
cmp
lock
leave
pop
mov
testb
dec
xchg
loope
test
test
mov
lret
sbb
std
jl
add
cmp
dec
fisubl
cmpsl
pop
dec
mov
adcb
jle
sub
sub
div
leave
jns
or
mov
popa
call
xchg
mov
loopne
inc
mov
xor
push
pushl
fbld
cmp
push
and
mov
xchg
dec
pop
lcall
hlt
test
imul
test
inc
aaa
mov
sub
dec
mov
inc
icebp
or
inc
stos
fdivrs
mov
icebp
push
lcall
nop
icebp
cmp
je
mov
mov
push
sub
push
jns
sbb
in
ja
jns
and
es
jg
adc
jbe
dec
or
test
lea
pop
xchg
cmc
loopne
xor
lds
mov
sbb
mov
adc
sarb
mov
xlat
test
inc
cs
sub
cmc
dec
movsb
bound
loopne
adc
in
or
test
lods
jno
cmp
stos
push
mov
xchg
cmp
cs
test
ret
adc
adc
dec
shufps
pop
mov
fnstenv
in
lret
xchg
lock
jne
lea
out
movsb
xchg
xchg
arpl
fdivl
xchg
xor
xchg
test
cmp
stos
sbb
outsb
movsb
xor
mov
pop
leave
cmpsl
xchg
sbb
inc
mov
or
pop
sub
push
aas
xchg
in
in
lret
enter
jb
mov
mov
mov
pop
jl
jb
sub
das
xor
sbb
loop
test
pop
mov
in
into
inc
or
aad
pop
das
pusha
fldenv
cld
jno
add
insl
inc
add
gs
mov
adc
arpl
not
mov
cmp
cmp
mov
and
lcall
push
arpl
pop
bound
jl
mov
scas
cmc
add
sub
pop
and
lods
leave
mov
lods
scas
roll
pop
leave
stos
fstl
xor
sub
and
popa
addr16
xor
cmp
mov
jae
cmp
pop
mov
jae
pop
in
out
add
lods
push
xor
shll
in
mov
decl
js
out
cmp
or
rcrb
mov
mov
jae
in
push
lods
dec
cmp
mov
push
sbb
push
mov
cli
outsb
psubsw
and
out
in
test
cmp
lods
xchg
loope
ret
or
std
notb
subl
or
pusha
xchg
fdivrp
in
jne
and
push
stos
cmp
dec
sub
sub
rcl
cmp
cmp
scas
inc
cmpsb
pop
fiaddl
cmpsb
pop
add
cmp
mov
inc
insl
sarl
inc
xor
add
push
in
jecxz
xor
lret
icebp
xor
sub
roll
mov
flds
dec
loopne
sbb
dec
call
pop
mov
mov
repz
sub
outsl
cmp
cmp
popf
mov
scas
fildl
lock
xor
addr16
xor
mov
sbb
jae
sub
and
inc
dec
test
loopne
sahf
push
sub
faddl
into
push
rorb
sub
pop
pusha
out
jle
jge
ja
xchg
cltd
add
xchg
enter
adc
in
xor
je
int3
rcrb
adc
sub
out
es
xor
js
mov
arpl
scas
test
popf
rolb
shll
iret
pop
xchg
push
loopne
pop
iret
ret
push
repz
mov
popf
mov
scas
xchg
adc
sarl
xchg
jp
pop
push
and
mov
rcrb
pop
loopne
fistps
sbb
pop
fsubrs
lcall
ss
rclb
ss
mov
fbstp
xor
inc
rcll
xor
cmp
lds
hlt
xlat
hlt
jo
jecxz
mov
jb
lahf
jo
lret
pusha
andb
pop
scas
xor
xchg
inc
pushf
mov
stos
mulb
icebp
dec
daa
cmp
std
ret
arpl
rol
fimuls
inc
fldt
inc
xor
adc
mov
lods
inc
pop
pop
add
cmpsl
cwtl
icebp
pop
pushl
in
xlat
outsl
adc
js
sub
enter
mov
push
jmp
jmp
jb
ds
gs
cli
mov
icebp
sub
insl
mov
js
jo
ret
les
int
mulb
sub
and
jnp
lods
movsl
into
inc
mov
stos
xor
sub
and
mov
adc
rcl
xchg
xor
xor
mov
lea
mov
pop
dec
xchg
pop
scas
das
sti
add
sbb
flds
rcrb
stos
aaa
stos
push
sbb
ret
cmp
test
fyl2x
adc
fdiv
mov
mov
jae
insb
out
mov
mov
test
cmp
cli
call
mov
xlat
xchg
sbb
mov
push
imul
les
jmp
cltd
rcl
add
mov
jae
lcall
adc
jbe
xchg
ror
je
jo
rcrl
adc
shlb
call
cmpsl
and
push
cld
push
aad
cltd
popa
pop
xchg
pop
repz
shll
pop
xor
mov
sti
xchg
popa
xchg
jae
mov
ss
imul
sub
sbb
or
lds
jmp
rorb
cs
test
sub
dec
aaa
cmpsb
je
sub
shll
test
xchg
xor
add
jns
in
movsl
stos
pop
xor
push
mov
dec
mov
insl
mov
ds
mov
sbb
lret
xchg
sarl
jp
ja
outsl
les
cmp
xchg
ret
ja
pop
xchg
shlb
mov
xchg
mov
mov
lods
xchg
xorl
mov
cmp
shrl
pusha
lds
mov
imul
int3
fucomp
mov
cld
pop
mov
sbb
outsb
into
xchg
shll
and
out
arpl
sti
mov
xlat
lods
out
nop
mov
out
ljmp
add
mov
outsb
dec
inc
jmp
into
lds
jle
es
xor
std
or
sub
bound
and
mov
sahf
mov
rolb
shrl
cmp
or
jno
ja
outsb
sbb
push
inc
sahf
outsb
test
incb
xchg
pop
cld
or
les
in
test
sub
fcomps
push
lock
in
loop
mov
or
pop
ret
mov
mov
stos
add
ror
cli
in
add
mov
mov
mov
or
xlat
fnsetpm(287
rorl
xchg
les
pop
push
scas
pop
add
and
push
ljmp
sub
xchg
stos
mov
insl
or
pop
sub
and
cmp
lock
nop
shll
in
jge
call
mov
dec
push
cld
pop
test
fistpl
dec
jle
pushf
bound
les
fisubrs
inc
loope
cli
jl
jns
dec
add
shll
call
out
mov
in
aad
lock
cmp
dec
fstp
jno
enter
sub
mov
int
pop
fildl
sub
pop
jbe
inc
mov
clc
xor
sbb
add
movsb
leave
xlat
pop
mov
out
aam
sub
adc
or
jmp
sbb
or
pushf
repnz
jge
negl
cld
mov
push
pop
call
inc
lahf
movl
pop
mov
das
aad
dec
lret
cmc
scas
jg
push
subl
add
nop
es
sar
aaa
scas
and
loop
sbbl
mov
ficompl
aam
sub
dec
iret
fimull
fnstcw
rolb
jl
lods
movsl
pushf
fsubl
xchg
or
mov
ljmp
jg
adc
jne
cmpsl
popa
and
es
add
sub
xor
aam
lods
push
sbb
push
push
sbb
je
add
sbb
lods
mov
add
xlat
mov
sub
mov
sbb
push
shll
loop
lods
jne
mov
and
out
inc
andl
vcmppd
stc
xchg
loope
test
jno
cmp
mov
stos
push
ds
or
das
repnz
lods
sub
popf
cwtl
cmp
scas
jmp
sub
xchg
push
in
out
loopne
shrb
fcmovnbe
adc
xchg
add
filds
cmc
stc
jb
inc
fstl
outsl
add
testl
lods
les
dec
xchg
lahf
jno
or
xor
sbb
push
jle
stc
loopne
fsubrs
insb
dec
and
ljmp
jo
mov
xchg
vorps
test
sub
cmp
sbbl
sbbb
stos
cmpb
mov
hlt
icebp
inc
icebp
ret
xchg
shld
jp
test
xor
pop
pop
cld
bnd
mov
xlat
xor
xor
sbb
xor
adc
rcr
xchg
std
inc
or
mov
aad
cmp
test
pop
sub
mov
hlt
jnp
and
push
push
or
xor
xchg
mov
hlt
lret
scas
ret
push
dec
jl
adc
in
stc
rclb
xchg
scas
jns
adc
pop
fimull
push
cmp
out
mov
inc
mov
push
shll
into
popf
in
mov
add
int
mov
orb
mov
call
mov
mov
daa
push
cld
jnp
xchg
push
inc
into
jbe
cmp
repnz
loope
jnp
cmc
cmp
or
stc
cmpsb
cli
mov
mov
push
xchg
sbb
in
scas
mov
paddb
inc
lods
popf
lea
lret
jns
pop
sti
out
in
xchg
jge
rcrb
repz
mov
or
inc
and
call
in
bound
aam
fucomip
mov
sahf
push
mov
aam
jp
mov
ret
cmp
adc
imull
mov
scas
inc
cs
in
not
push
xchg
out
adc
sahf
xchg
stos
cmp
xchg
jecxz
mov
cli
insb
jp
dec
imul
arpl
sbb
cmp
xor
mov
int
test
lods
test
dec
aaa
cld
mov
aas
mov
mov
fisubrl
mov
sbb
leave
push
xacquire
cltd
gs
mov
pushf
mov
repz
mov
lock
fwait
mov
push
fisttpl
pop
jns
jne
sti
mov
push
sbb
mov
nop
fdivl
out
lret
adc
jg
add
mov
xchg
lahf
inc
xor
pop
push
adc
jle
cmp
idivb
les
xor
and
sub
ja
clc
lods
fnstcw
ja
dec
push
mov
cmp
xchg
roll
sbb
push
lods
insb
sbb
out
pop
inc
and
test
mov
mov
loopne
inc
shll
cmpsl
cmp
pop
jnp
add
dec
clc
icebp
data16
sub
in
push
adc
pop
cmp
ja
in
xor
jbe
adc
loopne
loope
ss
ds
and
pop
push
cmpl
ss
imul
movsl
or
pop
dec
push
jecxz
mov
ret
inc
filds
jle
std
stc
sbb
mov
cmp
xlat
xor
cld
sbb
lods
jb
mov
in
out
cmp
or
shrl
lret
pop
test
pop
adc
dec
push
data16
addb
mov
lcall
and
jp
pop
cmp
sbb
mov
xchg
mov
xor
adc
or
mov
sbb
js
out
or
imul
sub
into
sub
jns
dec
mov
xor
add
mov
push
mov
sbb
pusha
mov
addr16
inc
jbe
mov
inc
mov
and
xor
bswap
test
stc
inc
pop
push
xor
push
fisttpl
mov
cmp
lret
dec
mov
adc
je,pn
sbb
push
sub
mov
mov
cs
std
or
jbe
mov
andb
rorb
jno
in
and
xchg
push
adc
or
outsl
jbe
lcall
cmpsb
loope
dec
fmuls
dec
ror
dec
push
pop
leave
sti
or
outsl
pop
inc
aam
call
rclb
mov
sti
stc
fld
repz
nop
or
jl
cld
lods
cmp
pop
into
outsb
jae
sub
mov
jae
inc
fistpll
ds
es
pop
stos
ret
dec
push
or
dec
loop
out
cmpsb
mov
fstl
mov
xchg
dec
mov
push
lahf
mov
std
arpl
in
std
lahf
ss
sub
sbb
mov
mov
sub
dec
jl
push
pop
mov
push
mov
inc
jecxz
push
adc
shrl
pop
imulb
fsubs
pop
pop
inc
dec
mov
inc
mov
dec
inc
test
int
lret
out
jle
mov
pop
cli
sub
mov
add
mov
dec
xchg
add
dec
xor
or
mov
mov
dec
push
lahf
mov
dec
cmpb
in
push
jb
enter
inc
movswl
mov
adc
stos
mov
fldenv
fists
add
cli
movsb
xor
js
ret
fwait
stc
in
clc
dec
jp
mov
imul
popf
gs
arpl
lods
bound
fbstp
loopne
mov
inc
inc
inc
stos
in
stc
mov
xchg
int3
cmc
sub
xor
mov
mov
cmp
lret
and
adc
inc
push
fisttpll
fcmovu
out
and
testl
shrb
mov
enter
sub
sbb
in
mov
xor
ljmp
push
add
sub
imul
test
mov
or
pop
shll
jo
mov
leave
and
jbe
xor
push
dec
outsb
addr16
xor
or
sbb
or
leave
inc
loope
lcall
dec
mov
pop
add
jno
jecxz
out
cmpsb
xchg
int3
jae
lods
xor
pop
adc
bound
push
xchg
mov
and
insl
sti
cmp
mov
xchg
loope
dec
icebp
sub
aas
fdivp
nop
orl
sub
out
gs
adc
aaa
sbb
ss
sbb
sub
pop
xchg
dec
fiadds
lret
xor
stos
cmc
jecxz
push
nop
mov
scas
pop
repnz
sbb
mov
push
mov
leave
addr16
xor
stc
add
in
sbb
mov
or
ja
mov
dec
xchg
test
shrb
iret
jl
cmpsl
je
add
pop
pop
xor
inc
fcmovu
mov
jmp
or
jmp
add
and
cltd
jge
arpl
or
jo
mov
xchg
jle
roll
pushf
mov
sub
pop
test
icebp
mov
call
jne
xorb
sbb
dec
inc
add
or
mov
pop
xor
fs
js
xchg
leave
fldenv
jle
fisubrl
xchg
faddl
mov
and
jbe
push
adc
iret
jbe
dec
adc
sbb
fsubs
push
push
std
rorl
arpl
mov
add
xchg
and
roll
sub
ljmp
imul
fidivrl
mov
inc
leave
rol
leave
ficoml
dec
fcmovu
imul
sbb
xorl
sahf
xor
or
or
jge
and
je
lock
negl
mov
clc
add
or
and
in
jo
shl
hlt
or
andb
and
ret
lock
inc
mov
ret
js
stos
mov
fidivrs
pop
in
ja
out
fstp
ficomps
rorb
sti
add
pop
jns
dec
mov
in
icebp
subl
data16
xchg
adc
cmp
sub
fildll
cs
jae
sbb
loopne
dec
jns
xor
sti
popa
out
sbb
or
or
int
cmp
aad
loop
or
fdivrs
xchg
jbe
in
pop
dec
in
pop
jnp
out
push
mov
and
in
cmp
subl
scas
add
mov
push
sahf
jnp
jo
cltd
pusha
cmp
lahf
psllq
mov
mov
mov
adc
stos
add
pop
lret
sub
pusha
xchg
add
or
and
and
push
inc
insl
test
ss
incb
xchg
data16
stc
cld
out
sbb
add
pusha
stc
sub
and
stos
jmp
test
mov
mov
insl
enter
push
ljmp
cmc
and
push
imul
cld
push
in
jecxz
out
test
int
scas
adc
cwtl
and
repnz
mov
mov
scas
and
push
sub
enter
add
sahf
adc
or
sbb
popa
dec
dec
stc
mov
ret
mov
roll
aaa
jp
mov
and
jmp
xor
pop
les
inc
mov
sysret
lretw
add
jmp
out
nop
pop
sub
ror
xchg
dec
sub
adcl
push
and
xor
out
pop
add
cwtl
push
pop
push
jmp
movsb
pop
aas
pop
mov
xchg
in
pop
enter
push
sub
clc
sub
xor
idivl
aas
pop
add
and
insl
bound
in
lock
mov
mov
sbb
hlt
cmp
jnp
jle
xchg
lcall
ja
js
jecxz
or
sahf
lock
push
int
push
cltd
mov
in
lods
cmp
xorl
aam
std
sti
test
xchg
adc
test
leave
push
ljmp
push
test
iret
xorb
addl
cmp
ljmp
push
int3
dec
out
xchg
iret
jecxz
mov
icebp
jle
add
cmp
mov
clc
rcl
je
outsb
out
std
or
mov
mov
iret
cmpsl
mov
and
or
je
rclb
inc
mov
cmp
cmp
jne
stos
sub
cmp
mov
loope
sbb
inc
mov
hlt
cmpb
jo
dec
lret
scas
jp
pop
jg
mov
cmp
out
fcmovu
loop
mov
sbb
cmp
xorb
jne
pop
jbe
jo
fistpll
mov
jge
decl
and
pop
jo
aaa
mov
mov
mov
jno
in
jb
test
or
aaa
in
sbb
dec
and
das
clc
fstps
int
ffree
sub
sub
shl
mov
into
rol
ja
aas
and
jo
inc
mov
pop
inc
push
xor
jmp
push
dec
data16
negl
cli
lahf
es
lea
push
cmp
jl
rclb
mov
pop
or
add
dec
mov
je
scas
jle
movsl
jb
loop
cmc
idiv
cli
mov
hlt
sbb
iret
sub
jns
ret
jle
or
inc
cmpsb
movsl
pushf
jae
sbb
aas
mov
icebp
mov
push
iret
in
adc
cmp
out
icebp
gs
fadd
xchg
cmpsb
andl
rcrl
loope
rcll
hlt
push
jo
push
sar
js
mov
xchg
dec
test
mov
lods
lret
cltd
cwtl
addb
loope
sub
or
push
scas
test
subl
aad
pop
add
jle
ficoms
lahf
insl
out
push
leave
adc
xor
xlat
jne
cmpsb
ss
lods
mov
mov
loope
xchg
xor
jbe
xlat
out
adc
rolb
pop
decl
pop
lods
xor
and
or
jmp
mov
gs
and
push
xchg
in
ss
jle
xchg
imul
mov
mov
into
or
fldt
mov
dec
sub
adc
mov
lods
test
xchg
mov
mov
or
xor
fisubs
push
inc
cmp
jo
clc
jecxz
cmpsl
push
jge
clc
test
add
jmp
lret
or
mov
jmp
lock
fisttpl
js
cmp
div
cmovno
push
test
in
loopne
and
xor
xchg
notb
or
jne
hlt
movsl
das
test
mov
and
or
adc
mov
mov
jg
mov
aam
inc
pop
out
pushw
mov
or
fldpi
pop
sbb
fcmovne
int
roll
rcl
dec
mov
sahf
mov
repz
xchg
repnz
mov
push
sbb
jp
adc
push
ret
movsb
es
xchg
jns
lods
fwait
mov
out
in
in
sbb
pop
adc
xchg
and
ljmp
leave
xchg
mov
out
iret
pop
lcall
negb
ret
jo
dec
ss
iret
sub
xchg
xor
mov
pop
cmp
iret
ds
lock
ret
inc
loopne
lods
push
xchg
call
sbb
xchg
jle
xchg
or
mov
cmc
adc
pop
xor
lret
sub
jl
rclb
je
movsl
leave
jns
adc
or
mov
cmp
test
add
notb
hlt
lret
pop
mov
adc
sbb
je
xchg
loop
pop
in
cmp
mov
pop
iret
je
rcl
repnz
sub
outsl
or
dec
in
jae
jne
sbb
push
add
and
movsl
cmc
add
enterw
sbb
xchg
cmc
and
push
inc
out
nop
add
mov
fiaddl
fnstsw
imul
pop
push
data16
dec
iret
mov
lods
cmpb
aad
cwtl
cmp
lock
pop
mov
loope
jnp
fisttps
add
sbb
sbb
in
pop
and
add
lds
popf
imul
pop
ss
sbb
cmpsb
repnz
arpl
orl
out
mov
outsb
push
sarb
xchg
xchg
push
or
xor
mov
mov
push
daa
cmp
addb
xor
or
push
outsb
jmp
shlb
repnz
jno
push
push
std
mov
add
popf
and
or
push
std
hlt
adc
leave
jmp
out
inc
repnz
pop
xchg
in
sub
adc
fwait
push
divps
cmp
clc
jecxz
ds
je
insb
ss
and
mov
mov
jbe
jno
add
out
idiv
rcr
cmp
jg
sub
sub
sub
dec
sahf
pop
ret
fdivl
push
in
bound
sahf
clc
negb
test
mov
outsl
inc
and
fsub
dec
jle
or
fdivrl
mov
add
inc
and
mov
mov
clc
sub
rclb
int3
xchg
cs
out
lret
outsb
psadbw
ss
aas
add
mov
xchg
aam
iret
nop
pop
xor
inc
xor
xor
jle
fisubrl
insl
aad
sub
push
push
incb
enter
clc
aaa
addr16
or
loop
sub
icebp
jae
test
ds
jmp
sbb
outsl
xor
pushf
or
xchg
dec
sbb
lret
in
and
mov
add
bnd
jbe
fisubs
add
bound
add
in
xor
cli
orl
mov
cvtpi2ps
or
fs
ret
push
xor
mov
sub
outsb
adcl
cmp
out
and
xor
xchg
scas
mov
stc
into
mov
pop
mov
xor
popf
aaa
push
ljmp
add
push
xchg
xor
sbb
push
hlt
adc
push
sub
outsl
and
mov
ret
pop
in
mov
mov
outsl
sbb
testb
fstps
and
add
loope
adc
clc
sti
xchg
adc
jg
jno
mov
and
in
adc
add
stc
add
dec
add
mov
push
jl
aas
xor
mov
mov
lea
cmp
inc
div
loope
fsubrs
fwait
sbb
pop
and
and
pop
es
dec
shlb
xchg
in
popf
inc
add
cmp
das
jne
nop
push
mov
jl
inc
lods
inc
call
cmp
jle
xchg
mov
push
fmuls
cmpsb
mov
out
aas
cld
pop
push
push
and
push
sub
fnstcw
popf
rcr
jge
sbb
daa
inc
lret
aas
xor
filds
sub
inc
int
jb
sbb
add
mov
mov
jne
jne
cli
in
stos
pop
icebp
in
ficoml
xchg
inc
stos
sub
je
std
add
push
push
fists
xor
jno
cmp
mov
andl
add
bnd
sbb
movsb
out
jp
pop
fdivs
int3
lock
mov
mov
icebp
mov
fndisi(8087
jnp
pushf
or
xchg
sti
clc
int3
aad
decl
dec
cmp
inc
js
shlb
mov
push
push
mov
sbb
add
pop
add
repz
fbstp
jnp
sub
call
in
fcompl
mov
fisubl
xchg
push
sti
out
adc
add
bound
xchg
sbb
cmp
add
movsl
xchg
sbb
push
mov
cmpsb
or
in
int
pop
and
gs
add
rcrl
sub
mov
push
inc
and
std
stos
cs
andl
daa
jmp
pop
dec
dec
int
push
xchg
xor
mov
adc
aaa
aaa
push
push
out
dec
jg
xor
das
pop
sbb
cmpl
mov
add
stos
push
jns
cmp
push
aam
sbb
jle
or
mov
inc
insl
pop
jbe,pt
dec
rclb
jmp
inc
loop
out
and
cmp
xchg
jne
ljmp
sub
sbb
leave
cmc
divl
ret
xor
xor
inc
movsl
lahf
jmp
pop
lcall
loop
mov
jmp
sub
test
ja
push
js
jo
icebp
jp
jnp
mov
outsl
popa
iret
iret
xchg
ret
js
mov
test
or
das
aas
scas
mov
in
pop
xlat
daa
add
scas
rcrl
int3
sub
push
lcall
iret
mov
jmp
add
ficompl
push
jmp
mov
sub
dec
loop
pushf
xlat
lret
outsl
fistps
jl
lahf
sbb
push
repz
and
andl
pop
loopne
xchg
call
push
mov
sub
sbb
scas
bound
in
xchg
mov
pop
mov
mov
pop
outsb
push
mov
rorb
mov
in
shlb
inc
xchg
scas
sub
les
icebp
nop
and
and
clc
push
stos
xlat
sub
sub
dec
stos
ja
fdivr
ss
sahf
movsb
mov
mov
xchg
and
xchg
inc
mov
adc
mov
shr
aad
insl
dec
ret
xchg
xorl
pusha
ret
mov
and
movsl
in
or
mov
scas
andb
add
fwait
jl
mov
mov
movsb
into
xor
rorb
lods
push
pop
push
iret
xorb
inc
mov
xor
rcr
cli
adc
bswap
lea
roll
sub
test
sub
sub
mov
cwtl
sub
or
cmp
arpl
pop
lcall
rorl
push
in
add
sbb
push
movsl
adc
or
addr16
dec
inc
sbbb
mov
and
cmpsb
test
adcl
loopne
inc
scas
mov
or
or
add
cmpsl
and
in
pop
jp
sub
stos
jmp
pop
jae
and
cld
addb
pop
cld
lret
dec
xchg
mov
hlt
sub
mov
xchg
or
lods
xchg
sub
test
xor
popf
mov
push
push
mov
aas
xor
pusha
arpl
arpl
pop
jns
jno
push
mov
cwtl
das
mov
in
lock
sub
ret
and
cmc
jge
push
add
cs
pop
movsb
leave
cmp
push
out
xor
rcl
daa
outsl
mov
rcrb
shl
fistl
ss
imul
sbb
fucom
xor
js
adc
subb
mov
mov
and
xchg
dec
pop
mov
aam
jbe
inc
mov
sbb
or
xor
add
ret
std
repnz
add
pop
jecxz
lods
mov
sub
cmpsl
shlb
cld
icebp
jp
cmp
jae
cmp
inc
mov
sub
sbb
push
xor
inc
adcl
or
xor
xchg
andb
aad
mov
pop
shll
enter
adc
pop
inc
fwait
jo
pop
xorl
jge
test
add
or
cmpsl
inc
adc
popa
pusha
sbb
leave
insb
cmp
jne
and
loopne,pn
loopne
addr16
iret
xchg
mov
or
xchg
enter
adc
pop
pop
sti
or
sbb
gs
mov
imul
xchg
mov
pop
adc
and
cmpsl
stc
xchg
mov
in
call
lcall
test
or
push
ret
nop
cs
push
ret
jo
pop
add
outsb
lods
icebp
xor
lret
int3
cmpb
pop
xor
cmp
rorb
xchg
sub
xchg
dec
push
clc
sub
mov
xchg
cli
insb
stc
pop
sub
push
dec
js
sub
incb
mov
push
inc
cli
scas
js
mov
jge
int
pop
xchg
fs
pop
popf
ja
std
xor
adc
in
stos
pop
mov
hlt
adc
add
stc
repnz
in
add
cltd
aam
into
rorl
cli
dec
inc
mov
mov
inc
popf
aad
push
xor
sbbb
xchg
dec
sti
daa
das
iret
jp
lret
xor
mov
sbb
xor
fldt
into
loope
ja
sub
cmp
sbb
stos
xchg
sahf
add
sub
jle
scas
sbb
dec
push
and
pop
cmp
imul
ret
jg
call
lahf
adc
data16
in
pop
jns
scas
es
insb
xor
pushf
das
pop
mov
cmp
movsl
sub
out
push
pop
pushf
addb
std
test
repnz
loop
sahf
bound
es
test
xchg
adc
fwait
xor
pop
std
loop
sub
push
addr16
scas
loope
cmp
add
add
insl
daa
outsb
imul
jb
mov
add
cmp
pop
in
loopne
popa
dec
mov
inc
pushf
jl
or
dec
fistl
pop
fcompl
int3
adc
out
fwait
sub
inc
mov
fstpt
stos
cmp
addb
icebp
xchg
push
pop
inc
pop
mov
call
les
or
push
movsl
jnp
dec
enter
sbb
mov
cs
std
scas
adc
push
pop
lret
and
sub
add
ja
int
scas
out
imul
dec
sahf
rcrl
mov
std
jns
pop
xchg
jecxz
jnp
xchg
test
data16
rcll
hlt
and
imull
jp
in
pusha
fisttpl
test
xchg
nop
cmpb
cmp
xchg
pusha
lret
and
mov
pop
repz
neg
adc
jno
push
fisttpll
pusha
adc
sbb
or
aad
mov
call
jo
lret
insl
inc
sbb
add
mov
in
adc
ljmp
mov
inc
ret
pusha
aas
adc
cmp
and
ss
xor
lea
ja
sbb
push
sub
incl
inc
gs
xchg
scas
shl
jns
pop
sarl
sub
imul
xchg
test
and
aad
lret
aad
xchg
dec
jae
out
inc
mov
addr16
adc
fcomp
dec
addl
mov
cmpsl
loope
out
lahf
and
jae
jbe
cmp
fwait
int
cmp
sub
and
inc
lahf
ja
lods
xchg
xor
xor
and
or
adc
sbb
mull
mov
dec
sarb
nop
sbb
stos
add
movsl
mov
inc
shll
fnstenv
or
push
inc
pushw
xor
cmp
enter
lret
cmpsb
xchg
jmp
jo
or
sbb
negl
cmp
xor
lods
adc
insl
adc
pop
icebp
xor
sbb
cwtl
scas
lock
cmp
sbb
xchg
or
sti
lcall
dec
add
or
out
lods
jle
sbb
mov
sub
or
divb
scas
sbb
data16
pusha
push
pop
xchg
mov
call
push
mov
gs
jmp
sub
mov
testl
push
push
or
enter
mov
pop
dec
popa
cmp
cmp
imul
popa
inc
mov
dec
adcb
cmp
xchg
push
pop
sbb
jae
push
je
adc
mov
push
jns
mov
lea
mov
mov
clc
das
dec
lds
nop
dec
insb
push
mov
dec
call
mov
arpl
test
jge
xchg
mov
push
inc
mov
in
jnp
out
fidivrs
and
fistpll
lahf
jb
xor
fisubl
loop
adc
push
js
jle
clc
lret
cmp
adc
sbb
fiaddl
pop
mov
ror
inc
sub
and
inc
loop
add
lret
in
and
push
sbb
clc
icebp
mov
shll
mov
popa
mov
or
xchg
sub
sarb
ss
xor
sub
in
and
mov
stc
fnstcw
cmpsl
jno
pop
sub
add
xor
xchg
stos
scas
mov
mov
ss
push
xchg
pop
andl
push
push
inc
lods
arpl
xchg
sub
mov
mov
jl
into
aam
xlat
test
popf
pop
out
outsb
movsl
mov
push
repnz
lret
inc
imul
ret
fstl
mov
or
cmp
int
loopne
jns
test
pushf
lret
cmp
lock
and
imul
jecxz
icebp
adc
sub
push
lret
lahf
sub
aad
push
iret
pop
xor
pop
sbb
xor
xchg
push
or
test
xorl
mov
push
cltd
dec
ret
clc
or
adc
push
pop
dec
es
outsl
or
fisttpl
xchg
cmpsb
push
mov
mov
add
popf
cmpsl
popf
push
mov
dec
into
notb
loopne,pt
pop
stc
inc
lods
mov
lahf
mov
cmpsl
jmp
xor
mov
jge
cmp
mov
xchg
sub
stos
loope
xchg
fs
movsb
cmpsl
pop
mov
nop
idivb
lret
mov
or
fbstp
pop
sahf
fucomp
insl
jbe
loop
stc
mov
nop
jg
xchg
test
mov
rclb
bswap
lea
and
cld
mov
loope
xchg
mov
lods
pop
sbb
les
scas
inc
call
enter
mov
adc
xor
jne
pop
cmpsb
adc
cmp
or
push
out
push
negl
fdiv
xchg
cmp
jo
mov
in
xchg
ss
fwait
and
rolb
cmpsl
sub
jge
push
imul
inc
notb
pop
cltd
adc
mov
cli
ds
out
mov
dec
bound
ljmp
pop
movsl
lcall
je
mov
or
iret
out
movb
inc
shlb
iret
mov
push
mov
mov
std
add
inc
or
push
add
dec
test
scas
cmc
push
bound
stc
mov
lds
mov
stos
jae
add
adc
clc
sbb
nop
sbb
in
into
popf
mov
xchg
pop
aas
xor
inc
out
jb
sbb
cmp
add
xor
dec
push
sbb
and
daa
xchg
xchg
inc
jno
cli
lock
pop
fstpt
pusha
push
inc
mov
add
ljmp
incb
ret
lock
out
xchg
ds
xor
mov
jb
addr16
out
ret
insl
rclb
testl
push
fisubrl
inc
jb
filds
adc
and
inc
xor
add
loop
sbb
push
mov
mov
xor
xchg
aam
mov
sub
pop
mov
fldenv
scas
jns
insl
cmp
mov
insb
je
push
ror
xchg
insb
shrl
outsl
icebp
push
insb
movsl
xchg
cmp
push
fcomps
movsl
jge
test
fcompl
jns
jne
cmp
scas
jle
int
sarl
sarl
enter
int
test
mov
mov
loope
sbb
adcb
movsl
inc
adc
lods
inc
aas
dec
pop
stos
cmp
push
loope
cmp
popa
adc
stc
sbb
cmp
imul
jo
and
adc
add
inc
pop
mov
scas
int3
pusha
inc
insb
out
and
popa
aas
test
xlat
arpl
lods
testl
adc
or
or
hlt
cmpsb
push
add
into
fidivs
mov
leave
jge
and
lock
imul
mov
cmp
scas
movsb
cmp
call
cmp
enter
lea
jmp
fucomp
xchg
dec
mov
imul
mov
add
fstps
sbb
adc
int
xchg
sub
jne
push
hlt
movsl
incb
out
push
mov
xchg
movsl
sbb
out
out
push
sbb
jb
mov
movsl
push
inc
mov
cmp
mov
jno
push
test
fiaddl
dec
pop
mov
jnp
cmp
sub
shll
fisubrs
loopne
push
and
in
jg
pop
push
xor
xlat
mov
mov
sub
scas
aaa
lcall
mov
xor
inc
rcrl
mov
lock
scas
cli
shlb
inc
or
lcall
mov
jno
cmpsl
add
test
dec
add
dec
and
stos
mov
idivb
fwait
cmpb
in
add
out
cmpb
cmp
xchg
xchg
sub
pop
insb
popf
jns
out
and
pop
test
xor
out
hlt
imul
stc
and
loop
fstpl
dec
push
subl
in
pop
mov
aam
out
mov
pushf
scas
stc
xor
mov
in
test
sarl
fldcw
jge
scas
lods
or
sub
movsl
je
jb
sbb
test
int3
mov
xchg
mov
jge
push
ss
imul
iret
mov
in
aad
inc
pop
dec
cmp
push
imul
test
cmpsl
out
adc
push
aad
imulb
lods
cmpsl
cmp
mov
push
push
dec
inc
daa
or
jmp
jo
or
pushf
inc
cmp
fstp
stos
push
lock
and
and
je
adc
sub
stos
mov
jns
mov
xchg
out
ljmp
adc
div
push
jae
and
fsub
cmp
inc
outsl
ja
cmp
cmpsl
and
cmpsb
enter
sub
lea
mov
cmp
out
fs
cmc
mov
repnz
mov
mov
jnp
sbb
ljmp
jnp
jl
xchg
rcl
out
loope
pop
dec
sbb
loopne
pop
pop
scas
add
imul
or
xor
lea
and
stc
cmp
ret
ss
repnz
jno
sbb
mov
idivl
sub
lock
jmp
push
js
loop
cmc
xchg
test
xor
xor
aam
fidivl
rolb
iret
and
or
add
dec
pop
xor
pop
add
les
dec
imul
mov
jno
es
out
pop
int
fsub
mov
push
cmp
and
mov
xor
loope
jle
icebp
pop
xchg
mov
jns
and
jmp
ret
xchg
sub
push
pop
add
lea
cmp
loopne
mov
and
mov
movsl
fwait
mov
sub
mov
out
daa
or
das
mov
mov
xor
push
rorl
push
pop
sbb
add
rcl
xor
or
in
stos
mov
iret
jbe
leave
xlat
pop
daa
add
in
xchg
imul
mov
jae
hlt
in
in
xor
cmp
mov
dec
jbe
xchg
mov
and
xor
cli
lret
mov
cmp
or
cmpsl
jmp
adc
inc
mov
movsb
test
pop
push
add
mov
add
jb
in
pop
or
or
and
pop
sub
add
mov
jo
rorl
jge
das
inc
stos
sbb
push
dec
jb
mov
int3
decl
sub
fmuls
imul
in
int
test
popa
mov
cmc
popa
test
ds
pop
sub
in
cmpsl
sahf
mov
int
pop
mov
or
and
movsb
icebp
sub
cmp
inc
and
and
test
mov
push
in
data16
fwait
xchg
push
sub
dec
cmp
cld
outsl
dec
xchg
inc
jle,pn
lods
xchg
leave
sbb
aaa
lea
xchg
mov
mov
cmp
int3
and
inc
dec
push
jp
xor
and
mov
xor
mov
mov
and
lret
fs
mov
or
dec
mov
lahf
pop
dec
mov
dec
out
les
movsl
in
xchg
pusha
ror
std
mov
pop
xchg
add
add
cwtl
hlt
xchg
mov
loopne
mov
incb
or
rolb
adc
cltd
pop
sar
xchg
jp
rcrb
lods
cmp
es
test
or
jle
add
lcall
add
aam
js
mov
fmull
std
fstl
add
cld
dec
mov
dec
pop
popf
sub
inc
xor
push
sbb
sbb
fadd
mov
jns
dec
xor
adc
push
mov
pop
jl
xlat
xchg
loopne
imul
cmp
and
out
and
lahf
push
jge
or
jbe
xchg
pop
jmp
popa
test
negl
enter
push
jne
imulb
jl
notb
loope
shrl
dec
jl
stc
mov
cmp
inc
jp
test
call
lea
std
or
push
aaa
iret
pop
nop
xchg
bound
nop
sub
mov
jne
aas
mov
adc
adc
jge
add
or
loope
mov
icebp
out
enter
xor
test
push
mov
cmpl
cmp
jl,pt
mov
push
push
push
repz
enter
cwtl
pop
loopne
rcr
mov
aas
or
mov
pushl
xchg
cs
or
mov
xor
or
mov
icebp
int
pusha
cltd
xchg
imul
outsl
mov
ja
jg
mov
cmc
loopne
jmp
lods
fnsave
cli
rcrb
int3
mov
lods
outsb
adcb
mov
xchg
fisttps
or
push
mov
cli
pushf
clc
es
jg
xor
bt
or
gs
adc
dec
shrb
sub
adc
daa
xchg
xor
fsts
sbb
dec
movsb
fs
call
mov
ja
xor
lock
lret
xor
adc
rorl
int
les
adc
adc
jge
mov
jmp
shr
xlat
ss
mov
aas
jecxz
add
pop
push
sbb
int
mov
adc
test
je
cmp
cltd
out
out
push
sahf
push
push
loop
notl
jo
cmc
and
imul
out
xor
imul
aaa
lods
iret
cmpsb
inc
lods
adc
outsb
das
sub
inc
sbb
adc
outsb
mov
in
mov
iret
mov
dec
cmpsb
jnp
push
mov
fistl
sbb
out
dec
xchg
pop
jne
inc
fwait
xor
pop
push
pop
ret
and
xorb
mov
sub
jne
outsb
push
rorb
dec
lcall
imulb
leave
sub
sbb
mov
push
call
dec
push
es
or
cmp
int
arpl
inc
fisubl
mov
inc
pusha
sbb
sbb
sub
xchg
sbb
add
aaa
dec
in
out
sbb
orb
sarl
sahf
pushf
mov
pop
mov
xchg
int3
iret
pop
mov
inc
xor
sbb
fidivs
inc
movsb
int
mov
inc
and
mov
push
sub
mov
pop
insl
loop
rclb
movsb
addr16
pop
std
pop
jns
je
pop
sub
clc
sbb
xchg
gs
imul
es
clc
pop
or
pop
jl
or
mov
push
cmpsb
fldcw
inc
outsl
pop
mov
in
out
ja
inc
cmc
sub
cltd
jge
hlt
sub
ror
pop
and
dec
rcr
jns
xor
cmpsl
lods
pop
push
mov
into
mov
fcmovu
sub
adc
shlb
popa
and
call
xchg
cmc
hlt
ret
test
or
adc
mov
fwait
out
pusha
js
insb
ds
sbb
sbb
lcall
stos
stos
inc
scas
sbbl
fwait
std
push
push
ljmp
fnstcw
jo
push
lods
mov
clc
popa
popf
push
mull
fwait
sub
movsl
daa
cmp
and
leave
sbb
xor
into
or
ds
arpl
pop
add
daa
cmpsb
pop
inc
push
idivl
mov
insl
sarb
mov
and
loopne
iret
insl
aam
jnp
ljmp
xlat
jne
or
hlt
add
xorl
aam
cld
jg
in
or
and
or
daa
aam
outsl
mov
xchg
scas
out
push
ss
jne
fsubrl
bound
xchg
pop
fsubs
lods
or
popa
mov
call
in
daa
cwtl
jecxz
gs
mov
leave
jnp
jbe
fisttpl
dec
test
inc
punpcklbw
sbb
xor
lret
nop
pop
loopne
les
xchg
push
outsb
leave
sbb
loopne
lahf
cmp
mov
cli
negl
mov
es
popa
pop
add
mov
js
test
pop
cmpsb
scas
mov
cs
imul
push
aad
jo
scas
mov
xor
in
lds
call
sbb
push
jecxz
jle
out
push
adcl
cmc
dec
or
js
pop
scas
jp
pop
adc
mov
inc
dec
ja
mov
mov
imull
push
xchg
inc
add
mov
shrl
adc
setg
popa
sbbl
sbb
pop
inc
shrb
enter
pop
inc
pushf
jbe
mov
or
mov
out
sarl
ds
mov
or
addr16
add
pop
aas
sbb
fcompl
sub
xchg
cwtl
mov
fidivrs
rolb
outsb
jb
or
popa
and
call
push
popa
fldenv
arpl
leave
xor
test
xor
outsb
push
cli
ss
lds
insl
int
ret
out
adc
sub
or
popa
imul
push
fs
addb
sub
sub
xchg
je
push
cwtl
jae
roll
xchg
clc
dec
or
out
xchg
int
push
xchg
jb
mov
js
in
andb
cwtl
dec
xchg
lahf
out
mov
inc
lcall
ret
and
push
and
in
repnz
push
repnz
xchg
or
pushf
cmp
jp
lret
enter
cwtl
ds
pop
mov
les
add
gs
stos
cmpsl
out
or
cmpsl
adc
xor
test
stc
xchg
faddp
sbb
cmpsl
push
pop
sahf
fsubrs
jnp
aas
das
test
lea
je
xchg
sub
lock
fidivl
sbb
sub
or
xchg
mov
pop
push
outsl
pop
or
and
loopne
in
jp
inc
sub
inc
ret
cmp
jnp
adc
mov
push
mov
pop
and
jbe
insl
dec
imul
inc
outsl
jmp
lahf
xlat
inc
jmp
cwtl
das
add
and
movl
add
fisttps
jecxz
sbb
push
loopne
dec
lods
mov
into
ret
pop
sti
add
xchg
jp
pushf
lahf
adc
cmp
outsb
or
pop
push
int
rorb
sbb
cmpsb
fildl
cmp
sahf
cwtl
cmpsl
push
fidivrl
inc
loop
dec
les
call
cmp
out
imul
test
and
sti
mov
dec
cli
push
enter
mov
xchg
insb
inc
lods
mov
lods
jmp
sub
aad
repnz
or
add
sub
push
hlt
fstps
mov
and
loopne
negl
cmp
mov
outsb
subb
xlat
loopne
leave
mov
test
fs
idivb
shlb
sti
push
repz
push
scas
leave
push
push
stos
fwait
inc
outsb
in
pop
idiv
popa
sarb
pop
mov
mov
xchg
fwait
adc
mov
mov
cmc
cmc
cli
xchg
sbb
pop
xchg
push
adc
add
mov
lret
and
mov
push
aad
cmp
mov
adc
xchg
or
das
in
cmp
mov
test
cwtl
lea
pop
scas
jmp
add
pushf
and
clc
add
xor
in
into
inc
clc
adc
data16
aaa
out
and
punpckhwd
test
dec
and
push
jg
push
pushf
fidivl
icebp
out
test
xor
nop
jge
cmp
cmpsb
add
out
bound
jbe
jg
xchg
cmp
insl
mov
les
call
pushf
mov
scas
stc
mov
xor
addb
sub
fbstp
fs
scas
mov
sbb
cli
pop
fldcw
outsl
add
jo
inc
lds
cmc
sti
lds
mov
add
xor
add
insb
mov
addr16
insl
stos
cli
or
push
in
mov
lock
dec
inc
dec
shrb
pop
cmp
ljmp
inc
pop
les
std
scas
or
sahf
fs
cmc
clc
xor
pop
push
rcr
mov
sub
shl
xchg
jae
jl
mov
movb
inc
jo
lret
test
or
subl
push
push
test
mov
outsb
mov
push
aaa
int
call
sarl
pop
jb
mov
xchg
dec
pop
ret
fcmovne
mov
mov
inc
jge
cmp
sahf
inc
mov
pushf
inc
add
aad
dec
pop
xchg
mov
push
dec
or
dec
jl
aas
mov
nop
or
test
and
push
loopne
subb
jmp
add
stc
xor
mov
shrl
into
push
adc
mov
ds
mov
mov
mov
lret
add
aaa
lcall
das
aam
fiadds
mov
and
cmp
imul
cli
pop
test
and
int
sbb
stc
icebp
in
and
imulb
nop
pop
hlt
cli
in
fcoms
mov
pop
es
pop
and
inc
cmp
sbb
inc
push
xchg
in
clc
in
aam
mov
jo
add
cmp
jp
pushf
mov
add
mov
fildl
lods
imul
aas
add
es
inc
dec
in
das
cld
out
insb
and
mov
xor
fsubs
pavgw
mov
dec
cmc
mov
out
jae
jl
dec
gs
mov
xor
fmull
inc
test
icebp
xor
pop
push
and
pop
insb
ficoms
dec
xchg
rdmsr
mov
mov
incb
in
and
inc
roll
leave
cmpsl
xchg
jecxz
jno
mov
loop
mov
movl
iret
movsl
rcll
int3
cld
push
scas
shr
out
mov
jne
ret
insb
mov
add
in
xchg
pop
mov
adc
or
sbb
popf
and
xlat
inc
inc
jae
or
fld
or
mov
pusha
testb
enter
cmp
sbb
negl
aaa
stos
in
ret
sub
ja
out
or
add
and
inc
cltd
lods
pop
ret
inc
inc
fstsw
dec
int
sbb
jae
in
out
mov
jecxz
lret
mov
pushf
sbb
jecxz
jp
lret
shl
mov
cmp
xchg
xchg
iret
xor
jl
sbb
sub
mov
mov
pop
cmpl
rcll
nop
nop
lahf
bound
adc
and
int
imul
cltd
std
in
push
shr
cmp
fidivrs
in
xchg
dec
cmpsb
mov
cmpsb
scas
loope
or
stos
mov
xor
push
aad
popa
and
mov
js
into
mov
cs
jp
lock
bound
outsb
dec
inc
pop
xchg
mov
xchg
rcll
dec
adc
dec
subb
jb
std
mov
pop
les
or
iret
fisttpl
cmp
insb
stos
mov
mov
imul
in
enter
iret
ja
adc
mov
in
jecxz
call
dec
add
push
je
mov
fnstsw
xor
xchg
push
and
lahf
xchg
subb
subb
outsb
jo
lea
in
adcl
jno
mov
or
out
cmp
lods
lret
mov
add
insb
jl
dec
and
fnstcw
lahf
jmp
push
xor
int
popf
or
lods
mov
inc
mov
in
out
sti
frstpm(287
jp
adc
xchg
data16
sbb
add
andl
les
push
xchg
mov
pop
add
xlat
pop
cmp
pop
bound
ret
pusha
jl
xor
mov
mov
adc
mov
sub
fnstcw
fadds
out
sbb
xchg
mov
xor
mov
inc
dec
xor
lcall
bound
stc
outsb
sti
dec
xor
sub
int3
mov
scas
jb
aam
fcomi
dec
call
dec
mov
add
fidivl
cmp
in
pop
xchg
inc
ficompl
fistpl
lahf
cltd
jg
jmp
sub
jmp
int3
roll
aad
push
pop
shrl
add
es
daa
cmp
inc
push
dec
cmp
roll
sahf
cmp
or
mov
int3
dec
out
add
dec
push
jns
fildll
add
lcall
je
test
mov
adc
aad
inc
in
int3
cwtl
iret
push
leave
testl
mov
dec
xor
outsb
mov
ja
lcall
inc
jb
mov
aam
mov
xor
xchg
push
fwait
dec
xchg
divl
adc
aam
push
sub
mov
sub
mov
js
sbb
cli
ds
imul
test
inc
in
popa
dec
or
sub
and
out
dec
lahf
pusha
jl
mov
pusha
xorl
sbb
xchg
cli
cld
adc
sub
jns
adc
fidivs
mov
and
popa
aad
ss
dec
loope
push
loope
mov
xchg
movsl
stos
aaa
test
or
jle
mov
inc
inc
fadds
ret
pop
add
xor
dec
mov
sbb
xchg
jae
mov
inc
rcrb
loope
sbbl
invd
mov
jl
sbb
in
lret
add
dec
cmp
xchg
push
cli
add
xor
popa
cmp
outsl
insl
or
mov
rorl
ds
jae
and
es
aaa
hlt
mov
sub
pop
aaa
aad
sbb
imull
push
push
mov
nop
mov
pop
jne
fstpt
pop
cmp
out
mov
mov
fldl
mov
stos
stos
ret
adc
je
sub
cmp
pushf
sbb
push
aam
leave
ljmp
jmp
mov
mov
outsb
and
mov
adc
jmp
or
movsb
mov
mov
insb
or
cmpsl
clc
aas
aad
outsl
push
fidivl
roll
sub
repnz
loope
repz
test
pop
dec
and
stos
scas
cmc
pop
ss
adc
fldl
push
imul
adc
lcall
mov
rclb
adc
mov
cmc
jg
push
sbb
test
mov
jle
inc
les
and
pop
cld
das
fidivrl
out
sub
stos
dec
push
sbb
movsl
imul
jns
lret
adc
sub
out
adc
sar
pop
clc
test
mov
popa
push
xchg
inc
jge
xor
jle
xchg
mov
jle
mov
andb
nop
jbe
dec
add
and
out
adc
dec
ja
xor
jg
insl
rorb
out
sub
push
sbb
cmp
or
dec
jbe
dec
mov
repz
mov
mov
rorb
pop
cmp
fildll
jbe
jnp
push
adc
outsb
movsb
out
xchg
jbe
rorb
scas
and
pop
test
in
jns
fs
call
je
and
jmp
in
pop
enter
je
movsb
andl
mov
cmc
loopne
push
stc
mov
inc
inc
adc
inc
jp
stc
push
sbb
or
push
loop
or
cmp
imul
and
test
cmp
cmc
sub
ja
or
xchg
les
sbb
add
lret
inc
cmpsb
or
rol
shr
leave
fisttps
aam
mov
jnp
adc
or
xchg
aaa
inc
aad
mov
push
jge
callw
orl
stos
hlt
int3
push
ljmp
push
xchg
xchg
popf
pop
std
cmp
daa
js
cs
xor
dec
adc
insb
pop
add
aaa
sub
mov
mov
test
mov
stos
and
mov
inc
jne
pop
push
cs
daa
inc
adc
jmp
call
cmp
push
ds
xchg
fcomps
sbb
add
sbb
les
mov
inc
bound
les
push
scas
mov
adc
adc
gs
mov
fimuls
pop
dec
mov
mov
push
add
mov
fs
rorl
gs
sub
or
mov
add
gs
adc
vcvtsd2si
sub
cmp
push
jo
fdivs
xor
xchg
inc
sub
pusha
and
fucomi
es
mov
cwtl
cmp
jp
dec
jl
push
adc
sbb
mov
mov
mov
or
je
inc
inc
or
cmp
imul
mov
sbb
push
cmp
out
push
lds
push
or
test
test
add
mov
fidivrl
mov
clc
and
or
pop
gs
sbb
xor
movntps
loop
push
pop
xchg
je
in
mov
inc
xchg
lahf
imul
into
cli
jmp
bound
adc
dec
pop
mov
sub
iret
sbb
mov
cmp
lods
xchg
cli
sbb
fucomip
inc
sti
and
jne
push
xor
sar
cmp
or
mov
push
xor
add
mov
leave
sub
movsl
cmp
xchg
incl
fbstp
xchg
ja
hlt
cmpsb
mov
jmp
mov
addr16
xchg
leave
das
mov
add
push
mov
fs
lret
mov
cmp
xor
xor
loope
cmpsl
add
cmc
or
out
shlb
inc
pop
and
stc
std
pop
cltd
insl
mov
stos
pop
mov
clc
mov
mov
leave
sbb
test
adc
test
mov
stos
push
stos
sub
push
inc
cmp
shr
and
add
bound
fdivrs
push
jg
jp
mov
insl
lret
pop
cmpsl
dec
mov
faddl
sbb
clc
mov
sub
pop
cld
jne
mov
push
inc
popa
cmp
mov
rcrl
mov
or
pop
es
popa
mov
clc
and
sub
or
sub
ffreep
add
adc
and
pop
jns
mov
shl
dec
rcrl
lahf
lods
in
push
rcl
sub
rolb
pop
int3
stos
shll
lret
mov
inc
inc
lret
fiadds
shlb
or
add
jno
sarl
out
aam
sub
in
sbbb
jg
adc
cs
lahf
ficomps
jecxz
mov
negl
add
sub
aad
pusha
add
aam
cltd
nop
jmp
adc
cmp
or
lcall
ret
xor
cmpsb
imul
clc
jb
imulb
movsl
js
out
jb
cmp
lods
push
mov
lret
dec
not
gs
mov
mov
and
adc
fisttpl
notl
inc
xor
jne
lea
mov
not
jb
fcompl
adc
jg
mov
adc
jp
pop
std
pop
mov
adc
adc
test
or
daa
jge
dec
int
fcoml
dec
hlt
or
std
mov
xchg
nop
jmp
xchg
add
cmp
pop
iret
roll
fisubrl
stos
sub
stos
ret
leave
mov
mov
insl
push
mov
inc
add
pop
in
ds
xor
push
dec
push
and
aad
jo
jle
out
leave
hlt
loop
call
and
mov
lods
sub
outsb
sahf
out
es
imul
mov
inc
das
or
call
lds
inc
xchg
mov
or
push
xor
lcall
xor
pop
sahf
loop
mov
cmp
repz
push
sub
clc
jo
cs
pop
sti
aas
pop
xchg
jbe
insb
push
add
insb
xchg
rol
jecxz
pop
sub
rcrl
stos
sub
mov
mov
stos
mov
and
test
cltd
or
or
and
push
xchg
out
jo
cmp
scas
in
in
fimuls
mov
add
mov
inc
stc
sub
out
push
aas
hlt
insb
imul
mov
ja
jg
hlt
push
pop
stc
imul
sbb
and
xlat
shrb
or
les
cwtl
inc
inc
or
mov
int
es
ljmp
inc
mov
ds
inc
addb
adc
out
jae
sub
inc
sub
out
xlat
mov
dec
fisubrl
sub
enter
test
shr
bswap
ret
add
push
pop
inc
leave
pop
push
test
lret
push
and
nop
in
jno
xchg
shl
inc
mov
inc
jge
pushf
dec
sub
xchg
in
mov
mov
popa
push
fistl
and
loopne
sub
les
lahf
pop
mov
mov
add
inc
cmp
adc
mov
out
xchg
jl
inc
mov
dec
mov
dec
jae
jge
or
sub
or
dec
sbb
ret
push
outsb
cmc
mov
fcompl
pop
push
inc
cmp
push
imul
cmp
scas
xchg
lea
stos
popf
pusha
dec
fucom
loopne
stc
int
repnz
imul
in
movsl
or
unpckhps
lret
int3
mull
sahf
ss
xor
and
lret
inc
lret
cmp
cmp
testb
jnp
mov
outsb
xor
mov
fld
cltd
addr16
cmc
aam
and
imul
popa
pop
mov
lret
scas
pop
icebp
mov
mov
lock
data16
dec
daa
dec
mov
inc
aas
fcoms
ljmp
sbb
ljmp
ret
inc
pop
xlat
xor
or
das
dec
mov
mov
jge
push
movsl
push
shlb
js
cltd
push
inc
outsl
adc
and
lds
into
mov
es
cmpsb
mov
movsl
cld
data16
fdivs
loopne
and
nop
mov
ficoml
cmp
mov
mov
cmpsl
jb
xchg
dec
cmp
mov
mov
sbb
fmul
or
sub
mov
mov
pushf
sub
bound
jl
out
cmpsl
jg
cmp
cld
dec
fdivl
inc
aaa
and
add
loop
inc
cmpsl
loope
pop
xchg
push
add
cmp
sbb
dec
inc
les
test
imul
xlat
xlat
xchg
xchg
ljmp
fsin
cmpsb
fldt
mov
pop
push
mov
imul
test
push
nop
adc
pop
mov
xchg
cli
das
xchg
push
scas
lret
push
xchg
xchg
outsb
sub
and
mov
mov
mov
cwtl
sub
loopne
adc
clc
outsb
xor
jno
add
lods
inc
xorb
push
std
rcll
jmp
lods
lea
or
xchg
test
inc
xchg
fdivrp
pop
or
cli
xor
inc
xlat
outsl
cltd
push
add
test
or
out
test
mov
mov
lahf
das
ss
sub
cwtl
fcompl
in
push
xor
cld
mov
iret
or
mov
pop
cmp
jbe
jmp
mov
sub
in
inc
or
jns
popf
lahf
xor
push
jl
xchg
aad
mov
dec
pop
cmp
inc
pusha
xchg
mov
aaa
pop
push
sub
pop
aad
and
inc
fidivrl
pop
add
or
mov
jge
int3
dec
adcl
xorl
loopne
mov
ja
je
xor
push
aad
nop
dec
sub
push
loope
sbb
int
sbb
rcr
lds
je
push
out
xchg
add
mov
aad
test
cld
push
subb
mov
outsb
mov
mov
mov
stc
popa
inc
scas
lret
xchg
mov
scas
js
ljmp
sub
outsb
mov
sbb
inc
test
outsl
mov
push
inc
lods
add
mov
scas
xchg
popa
pop
imul
les
ljmp
adc
jge
jno
inc
insl
test
mov
test
pop
popa
int3
adc
sub
push
pusha
mov
icebp
aas
push
jg
notl
pop
mov
test
int3
push
ss
mov
pop
andb
jo
nop
mov
lods
push
out
test
pop
push
cmpsb
inc
add
outsl
mov
das
movb
movsl
rclb
ljmp
insb
xor
mov
out
ja
sub
lock
xchg
aam
mov
jnp
scas
out
fnstsw
leave
pushf
xor
push
js
pop
scas
mov
stos
in
icebp
andb
pusha
mov
cltd
mov
mov
repz
jmp
dec
pop
jg
jle
test
dec
jb
mov
add
adc
adc
mov
sub
out
pop
jno
inc
popf
std
out
jecxz
push
push
inc
and
or
fistps
outsl
pop
push
push
addl
and
outsl
push
setle
shl
lret
lods
jbe
inc
lcall
dec
stos
cld
repnz
ss
mov
or
sub
stos
frstor
mov
outsl
xor
cld
aaa
cmp
test
adc
fdivrl
xor
inc
cwtl
mov
cmp
in
add
dec
jp
inc
pop
pop
gs
mov
fnsave
mov
cli
fisubl
dec
arpl
mov
cwtl
jecxz
mov
dec
cmpb
loopne
pop
out
imull
jno
cmp
dec
js
mov
daa
pop
mov
into
sahf
cmpsb
mov
push
sbb
adc
fisttpl
mov
dec
in
movsb
xchg
arpl
orl
cmp
popa
int3
nop
dec
and
in
ss
cmp
mov
ds
sarl
jno
popa
lods
xchg
mov
or
aaa
outsl
pushf
and
pusha
push
cmpsb
push
mov
mov
das
cmpsb
push
stos
stc
mov
dec
add
and
add
sbb
mov
mov
push
adc
add
adc
mov
outsl
mov
or
loopne
shlb
xchg
sub
loope
dec
movsl
sti
cmc
inc
add
repnz
cmp
and
negl
leave
fistps
sahf
in
cmpsl
dec
fwait
enter
dec
fisubs
pop
out
and
jns
ret
enter
imul
jmp
xor
add
dec
outsl
mov
xchg
push
cmc
lret
mov
mov
or
bound
mov
lods
mov
jb
mov
data16
loop
repnz
sub
xor
iret
jae
jne
xor
repnz
int
fldenv
mov
adc
pop
bnd
popf
xor
jae
push
xchg
mov
mov
dec
pop
popa
add
cmp
xchg
cli
xchg
jle
cmp
decl
cmp
rolb
in
out
in
clc
dec
sbbb
sub
dec
repnz
fwait
sbb
xor
lret
repz
pop
push
insb
cld
shll
mov
or
fbld
pop
adc
pop
mov
xor
movl
pop
fs
stos
sahf
in
add
das
jb
out
jge
aas
sub
nop
push
adc
es
outsl
push
sub
or
mov
filds
xchg
mov
fsubl
lret
push
add
ds
filds
stos
xchg
jns
adc
aas
pop
cmp
es
dec
shl
in
outsl
push
ds
iret
fcompl
cld
cmp
mov
and
inc
in
subl
cmove
loop
or
scas
adc
in
or
outsl
jl
xor
mov
lret
mov
inc
cld
test
fs
pop
out
out
out
bound
outsb
jae
push
es
enter
and
jle
dec
and
cmp
test
mov
fxch
insl
scas
in
lret
or
subb
jmp
cmp
push
hlt
imul
inc
cmpsl
aam
lds
js
or
inc
mov
mov
xor
call
mov
aad
mov
stc
aas
and
outsb
jge
push
jns
xchg
and
js
push
js
jge
cmp
insl
lret
mov
stos
and
pop
mov
test
jae
movsb
mov
or
in
movsb
inc
pop
loope
adc
insl
add
xchg
mov
ljmp
and
or
sarb
fnsave
push
out
mov
nop
push
add
pusha
or
loopne
pop
enter
push
mov
xor
dec
xchg
or
cmp
popa
lret
das
inc
fidivs
xchg
push
pop
repz
jo
in
add
pop
xor
push
jl
push
dec
jmp
push
jae
jle
lcall
imul
mov
pop
jae
xor
sub
pop
js
xor
xchg
nop
daa
popf
push
push
mov
add
enter
xchg
mov
scas
xor
cmpsl
call
dec
fisttpl
int3
pop
scas
enter
clc
push
sbbb
xor
and
cmp
push
hlt
cltd
adc
lods
add
test
xor
adc
pop
or
shlb
xor
fs
addr16
or
sbb
pop
notl
fmuls
mulb
cwtl
insl
sub
data16
out
mov
sub
jle
dec
mov
mov
ret
aam
insl
int
pop
rcrl
rclb
ret
outsl
push
pop
jno
out
fsubl
dec
nop
jecxz
jb
leave
mov
and
push
lret
jo
js
sbb
mov
or
insb
loope
add
pop
xor
sbb
jmp
xor
pop
add
jnp
cmpsb
xlat
xchg
subl
mov
shlb
inc
push
and
inc
xchg
scas
inc
mov
jns
cld
jmp
jno
and
xchg
dec
mov
mov
jae
cmp
xchg
mov
loopne
cltd
rcll
mov
jb
ret
ret
addr16
jmp
adc
add
push
adc
mov
rorl
sbb
push
cltd
imul
out
into
inc
mov
add
dec
rorl
stos
push
mov
enter
test
sbb
aaa
and
sbb
dec
or
mov
andb
sti
mov
mov
cmp
icebp
add
andl
clc
mov
cltd
roll
bound
xor
push
mov
add
mov
sub
stos
popf
test
inc
cmpb
jmp
add
xor
xchg
ret
stc
cld
add
or
sub
pop
xchg
fsubrl
lahf
imul
bound
in
or
sti
fdivs
xchg
shll
stos
shrl
sub
mov
dec
insb
inc
mov
lret
pushl
loopne
daa
xor
or
add
xchg
shrb
repnz
lea
xlat
sub
pop
cmc
jmp
mov
loopne
sub
aad
inc
jb
nop
xor
adc
cli
mov
lock
scas
out
add
ja
sub
pop
add
mov
pop
ficoms
jmp
movsl
xor
push
xchg
jns
push
mov
cmc
inc
repz
aad
leave
xlat
add
inc
fstps
insl
mov
adc
out
inc
popa
pop
lods
out
mov
jbe
into
ljmp
cli
mov
bound
push
push
and
mov
call
adc
outsb
test
sahf
mov
cli
adc
add
ds
repz
pop
xchg
andb
dec
cwtl
lcall
and
jae
lahf
test
mov
cmp
lock
or
es
and
or
sbb
lret
popa
adc
divl
incl
lahf
mov
mov
inc
mov
dec
cs
pop
dec
fldt
fucom
pop
sbb
mov
pop
sub
pop
mov
loop
mov
sbb
mov
adc
ror
mov
or
sub
pop
inc
clc
xchg
cmpsl
sub
ja
call
mov
mov
sbb
mov
jne
adc
mov
in
sbb
leave
stc
outsl
cmp
rcr
in
push
push
int3
push
mov
mov
fisubs
dec
or
inc
pop
xor
or
ficomps
int3
jns
enter
arpl
xor
mov
xor
mov
pop
dec
adc
inc
or
pop
in
bound
lods
or
xorb
test
mov
cmp
int
xchg
fsubl
push
fwait
sub
jmp
xor
loope
sub
fwait
mov
mov
nop
xchg
mov
in
jge
arpl
in
in
ss
cmp
test
mov
sub
fdivs
jmp
es
iret
xchg
bound
push
jnp
jg
jecxz
xchg
je
pop
xchg
xor
adc
jne
add
add
cmp
rorl
int3
adc
jle
aad
xchg
mov
xorl
aam
test
push
pop
into
mov
dec
fsubrs
mov
jmp
rcll
dec
pop
jo
mov
mov
push
sbb
out
xchg
mov
add
repnz
adc
add
into
ja
test
push
into
mov
or
leave
outsl
xor
sahf
popa
cmp
xlat
pop
rcll
fwait
xchg
lret
imul
cltd
sbb
aas
mov
int
jge
outsb
jae
aam
nop
test
xor
test
stos
sbb
js
outsb
jecxz
mov
dec
jl
or
cmp
jb
gs
inc
faddl
xor
repnz
push
loope
sbb
sub
xor
jg
aas
fistpl
loope
repz
or
pop
fstl
cmp
push
enter
mov
fldcw
dec
lods
data16
mov
ds
pop
push
push
test
daa
push
xchg
pop
lds
mov
xorl
xorb
push
xchg
and
shl
ret
imul
adc
mov
ret
cmp
adc
es
sbbb
mov
arpl
xchg
in
fldcw
fmulp
gs
ret
lods
fidivl
ret
push
bound
clc
lahf
ja
stos
xor
stos
pop
push
adc
bound
into
push
sbb
outsl
cmp
inc
into
dec
cwtl
into
cmp
repz
fsubrl
fidivrs
inc
add
cmc
sub
push
shrl
or
sub
stos
adc
test
int3
in
jmp
jns
inc
dec
pop
sahf
xchg
lret
shlb
inc
adc
jns
push
xor
adc
dec
inc
out
sbb
movsl
xchg
xor
stc
pushf
imul
pop
jnp
ficompl
mov
loope
push
enter
shlb
shrl
sub
add
xchg
xor
cld
add
mov
fcoms
pop
lods
add
xor
lea
mov
stc
or
out
aam
jmp
repz
rol
faddl
daa
sarb
lds
pop
push
adc
rol
shll
repnz
cmp
inc
sti
mov
scas
mov
xchg
jl
add
mov
mov
popf
jle
cltd
loope
sub
and
cltd
mov
inc
lods
and
jno
xor
and
mov
dec
push
adc
inc
push
js
out
insb
mov
xchg
mov
in
mov
imul
in
push
test
push
add
or
and
push
push
filds
adc
scas
mov
je
cld
ss
xor
ret
mov
add
cmpsb
mov
or
fwait
mov
rclb
jge
xor
in
and
mov
pop
jb
xor
adc
cmp
leave
fmull
mov
and
and
ja
pop
xchg
mov
jle
cmpb
add
sti
and
fisubrl
scas
adc
xchg
imulb
mov
sbb
cwtl
push
push
add
fwait
pop
int3
stos
loopne
loopne
push
cmp
xor
leave
arpl
pop
insb
psubusw
arpl
xchg
xchg
ljmp
mov
arpl
mov
in
in
stos
or
fidivs
shrb
xchg
mov
stc
adc
push
mov
mov
cmp
xor
inc
aam
das
scas
jle
outsb
loopne
ja
mov
pusha
arpl
fistps
adc
pop
dec
insb
mov
push
and
xchg
inc
sahf
adcb
movsb
and
cld
push
and
mov
adc
sbb
rolb
sbb
and
shll
mov
cmp
ja
mov
in
out
pop
rorl
ucomiss
dec
mov
xor
mov
ss
xchg
mov
ret
dec
fstl
out
and
repnz
iret
jecxz
lcall
inc
xchg
add
aad
fcoms
or
ret
mov
and
testl
dec
or
in
out
sub
popa
pop
mov
stos
add
mov
or
loop
fsts
or
add
xor
test
xchg
lods
shll
mov
out
imul
fildl
sbb
mov
and
int
xchg
xchg
sbb
cmp
push
mov
jge
out
ljmp
xchg
repz
cli
pop
xorl
cmp
and
ret
mov
nop
or
fidivrl
icebp
sahf
or
fwait
sbb
rorb
xor
call
add
mov
add
or
pop
pushf
and
outsb
ds
sar
inc
pusha
push
sbb
or
pop
pop
xchg
mov
cmc
dec
mov
mov
mov
scas
mov
clc
or
push
stos
testb
or
popl
loop
test
cmp
loope
xor
repz
cmp
lds
and
mov
insl
and
inc
pop
js
fcomps
mov
jae
pop
or
test
shrb
testl
sub
popl
insb
inc
mov
scas
mov
dec
mov
lods
pop
lods
std
dec
dec
inc
lods
inc
dec
cmp
sub
scas
lds
or
loope
jb
fcompl
inc
pop
adc
push
inc
dec
sub
mov
push
sti
mov
imul
pop
sub
lds
add
mov
in
pop
icebp
sub
and
or
fucomp
ljmp
sbb
or
dec
xor
aaa
sub
add
insl
xor
fs
fcmovnbe
cmp
or
and
test
jecxz
das
loop
test
push
cmp
popa
lahf
cmpsl
enter
icebp
mov
dec
sbb
call
xchg
lock
stos
pop
sub
cmp
mov
sbb
arpl
jno
shll
dec
nop
jne
andl
pop
loopne
movsl
cmp
scas
mov
sbb
add
cltd
mov
sbb
sub
xor
incl
fwait
jge,pt
push
lods
outsl
push
pop
fadds
lds
or
pop
jmp
movsl
hlt
leave
pop
and
or
mov
add
in
lcall
aaa
fisttpl
loopne
orb
jecxz
enter
jbe
pushf
fmuls
in
out
xlat
cmp
ja
call
nop
lret
arpl
fdivs
lods
xchg
insl
out
ljmp
sahf
lods
xchg
rcrl
inc
stc
mov
mov
dec
xchg
push
aaa
je
xchg
xlat
push
sub
imul
pop
sbbb
int3
cwtl
push
xor
jmp
sarb
movsb
es
or
fcomps
xor
cmp
popa
mov
je
jg
outsl
divb
in
andl
inc
test
sbbb
sti
inc
mov
xchg
enter
add
fcomps
push
out
adc
mov
mov
cwtl
pop
movsl
cmp
popf
jae
aam
enter
sbb
popf
lods
ret
popf
outsl
sub
xlat
negb
ds
out
add
scas
cmp
movsl
adc
xor
test
in
pop
fchs
add
repnz
test
out
jge
int
shlb
add
andb
fsubrl
into
xchg
fiadds
icebp
mov
and
sbb
mov
and
shlb
int
xor
addl
dec
push
test
sbb
sbb
repnz
push
mov
mov
jbe
lea
mov
clc
cmc
aas
and
fucomip
jbe
sbb
xchg
push
sbb
ja
xchg
mov
aam
aaa
xchg
adc
test
mov
ljmp
jp
push
mov
cmpsl
in
lea
enter
loopne
mov
mov
push
mov
outsb
scas
rol
mov
jnp
xchg
dec
mov
mov
fwait
mov
movsb
or
imul
lret
scas
mov
loope
dec
repz
insl
js
sbb
add
ret
jecxz
jne
jp
popa
adc
lods
jbe
addb
loop
lea
mov
int3
mov
sub
mov
mov
nop
ss
movswl
jbe
imul
inc
mov
add
mov
push
or
in
sub
push
std
out
scas
clc
xchg
aam
hlt
mov
sahf
mov
testb
or
or
lcall
or
pop
movsl
testb
xchg
inc
xchg
subl
jp
mov
push
add
call
push
sbb
xchg
jns
cmp
adc
adc
xchg
mov
pop
xchg
pushf
push
push
push
aam
sbb
xor
scas
xchg
lods
in
push
fs
in
inc
adcb
nop
xchg
data16
loope
sar
and
cmp
addr16
mov
pop
jne
mov
inc
pop
cltd
add
jecxz
or
or
stos
pusha
xchg
sbbl
mov
icebp
push
mov
cmp
pop
jae
fstl
cld
dec
inc
int
xchg
inc
xchg
jl
jl
mov
lods
inc
daa
call
and
adc
pushf
push
adc
sub
ficompl
fistpll
sbb
push
outsb
arpl
loop
shlb
jno
loopne
sub
add
aas
ja
sub
lods
cld
mov
pop
dec
adc
data16
int
js
jmp
inc
sub
sar
or
repz
xchg
jp
addr16
mov
call
dec
mov
decb
fs
pop
repz
mov
arpl
mov
scas
dec
clc
jne
ficoms
pop
lret
xlat
push
ds
mov
lods
add
and
sbb
xor
dec
xchg
xchg
enter
sub
or
pop
hlt
sub
pop
lret
sub
mov
cld
mov
pop
xchg
imul
pop
mov
jg
orl
out
pop
cli
lock
loop
rcr
int3
push
fcomp
dec
das
cwtl
iret
hlt
bound
cmp
push
popf
mov
mov
inc
sub
xor
stos
sbb
mov
aad
hlt
lods
adc
sub
ret
xchg
mov
and
movsb
lock
negb
jmp
mov
jmp
pop
fwait
xchg
lods
dec
bound
pop
out
dec
cmp
xchg
cmp
and
add
xchg
inc
xchg
dec
add
fcomps
cltd
cmp
mov
jae
rcll
mov
mov
rol
stos
out
sbb
push
push
shrb
or
dec
incl
jnp
xor
inc
and
dec
mulb
xchg
lea
cmp
addr16
subb
mov
xchg
mov
jmp
mov
into
push
cmp
dec
xor
cmpsl
icebp
xor
mov
das
repz
dec
leave
mov
bound
push
loopne
jmp
iret
cmp
adc
or
cmpsl
out
xor
push
lds
cmp
mov
xlat
jp
psllq
lods
cmpsl
and
mov
add
mov
cld
sub
pop
push
jno
xor
push
mov
pop
mov
mov
mov
mov
lods
gs
adc
push
lret
imul
fnstcw
fisttpl
cmpsl
sub
jle
xchg
pusha
enter
mov
test
mov
or
pop
cli
ds
adc
scas
lcall
mov
ror
add
ja
xchg
ja
jmp
int3
and
in
andb
jmp
xor
mov
adc
cmp
std
imul
sbb
lret
call
testb
in
out
jo
pop
daa
rcrl
icebp
subb
out
push
add
and
cli
std
out
mov
test
repz
mov
test
mov
jg
fcmovnu
mov
shll
pop
ds
out
adc
ds
adc
mov
fdivr
pop
mov
idiv
jb
dec
ljmp
or
sub
mov
into
sub
ja
inc
add
std
shll
push
xchg
add
push
nop
mov
gs
pop
sbb
out
addr16
cmp
adc
mov
enter
fisubrl
jmp
mov
das
xchg
sub
xchg
mov
xchg
movsl
add
add
rolb
jle
inc
inc
pop
bound
inc
enter
cmp
xchg
into
add
mov
jnp
adc
shrl
adc
clc
lret
cmp
xlat
jp
push
inc
xor
addl
stos
fnsave
xchg
shlb
jle
ficoml
inc
dec
push
rorb
cmp
pop
cli
jmp
arpl
jbe
dec
shlb
mov
and
push
mov
push
out
cli
cmpl
cmpsb
int3
mov
add
mov
sub
repz
pop
xchg
in
sbb
jb
push
push
aam
call
loopne
pop
lcall
int3
push
in
jno
mov
dec
shlb
push
add
iret
aam
inc
jge
lock
sahf
mov
insb
in
pop
ja
subb
xchg
pop
fsubrp
or
cmpsb
jne
dec
and
dec
imul
pop
push
lock
cli
jne
scas
mov
push
pop
and
cmp
cmpsb
lods
jno
mov
jp
jno
sbb
sub
cmp
bound
and
daa
fs
repz
pop
fmull
pop
pushf
std
mov
xchg
xchg
mov
in
xchg
cltd
mov
sbb
jp
leave
movsb
push
aad
cmp
dec
jne
pop
adc
hlt
sub
inc
int3
aaa
inc
je
lcall
loope
mov
repz
mov
mov
xor
xchg
fwait
mov
fwait
in
shlb
fwait
shrl
adc
popl
in
push
mov
sub
sbb
outsl
cmp
lods
pop
jecxz
repz
lds
lock
les
jge
sbb
adc
shrb
movb
push
outsb
cmp
js
sub
inc
add
insl
test
sub
mov
or
dec
xchg
sub
cmp
loop
cmp
shrb
cmp
das
xor
inc
mov
xchg
mov
cltd
aad
arpl
mov
fists
fcomp
pop
stos
bound
mov
xchg
or
icebp
incb
jmp
jb
mov
loop
jnp
mov
or
mov
cmp
test
pop
xchg
cmpb
std
mov
movsb
sbb
addb
or
nop
rcll
mov
stos
cwtl
data16
pop
fsubr
adc
ja
sub
jle
fs
and
subb
fiaddl
xchg
push
jg
popa
mov
mov
and
stos
jmp
add
imulb
pop
sbb
push
loopne
sbb
adc
inc
sbb
dec
sbbb
push
in
dec
movsl
and
outsb
cmp
mov
add
lds
jg
stos
rcrl
and
jmp
mov
stos
and
mov
stc
push
movsb
pop
dec
mov
or
push
xchg
insb
inc
jmp
add
dec
lods
mov
xor
shrb
test
and
add
xor
popa
add
push
pusha
sar
pop
add
mov
loop
ljmp
mov
push
into
ljmp
in
lcall
dec
sub
pop
iret
fs
add
mov
dec
mov
hlt
addb
outsl
inc
mov
stos
dec
in
fstpt
push
pushf
cltd
insb
ds
xor
ret
add
mov
popa
cwtl
push
and
or
push
stos
jns
jmp
push
hlt
fs
stos
cmc
pushf
popl
and
adc
jo
pop
ret
xor
shr
out
in
movsb
sub
push
insb
repz
cmc
jp
add
add
xchg
mov
test
or
test
fidivs
adc
mulb
shrb
push
push
inc
xchg
xor
repnz
mov
mov
jbe
xor
pop
mov
ret
inc
sbb
je
repnz
or
ror
and
stos
inc
jne
cwtl
repz
jecxz
int3
jno
js
stos
stos
xor
sbb
out
or
movsl
scas
rclb
and
jecxz
xchg
fildl
mov
loopne
in
je
ljmp
mov
pop
cmp
mov
and
xchg
loope
stc
lock
and
cli
cs
rcr
xchg
aas
test
xchg
out
or
dec
or
frstor
aam
jae
stos
insb
insb
test
mov
nop
xchg
stos
pop
xchg
xor
sbb
lahf
int3
mov
adc
xchg
popf
sbb
xor
xor
call
iret
and
jecxz
dec
pop
add
es
icebp
mov
andl
push
enter
sarb
ret
stc
cmp
add
or
inc
add
mov
aaa
aaa
mov
cli
andl
push
aad
loopne
jno
xchg
jo
mul
add
lret
mov
in
add
out
js
and
xlat
push
cltd
mov
sbb
loopne
sbb
enter
in
mov
repnz
dec
add
std
rcll
out
hlt
in
cli
aaa
pop
les
cmp
cmp
add
fildll
jle
mov
loop
stos
cmp
inc
mov
dec
ret
add
jne
insl
jg
rol
std
xor
jg
sbb
pop
subb
sbb
xlat
xor
pop
pop
and
in
xchg
jecxz
aaa
inc
jb
lds
ficoms
mov
jno
sbb
repz
push
fldenv
xor
cmp
sub
gs
cmp
dec
pop
dec
daa
inc
rcl
leave
das
mov
dec
arpl
ret
sub
and
mov
mov
xchg
lock
cmp
jecxz
sbb
repz
cmp
ljmp
dec
sbb
pop
ficomps
inc
mov
aad
push
lock
sbb
pop
dec
shll
or
push
sti
mov
mov
push
xchg
adc
mov
or
aas
movsb
inc
outsl
xchg
jo
insl
cli
decl
jge
mov
stos
divb
imul
imull
adc
adc
addr16
pop
or
inc
out
sbb
push
mov
push
pop
cmp
mov
int
jae
sub
mov
and
inc
jno
into
clc
sub
mov
movsl
insl
aas
mov
int
hlt
push
xor
in
ja
fprem
pushf
push
and
imul
push
shlb
popf
push
or
ljmp
cwtl
cltd
lahf
aam
sub
leave
xor
or
aas
pop
xor
rolb
push
mov
sbb
push
xchg
scas
iret
mov
cmp
inc
sub
or
cmpsb
pop
lcall
push
fsubrs
and
xor
bound
sbb
pop
lock
loopne
xor
xchg
jns
and
jp
mov
lret
and
xchg
or
shrb
flds
inc
fidivrl
idiv
jno
movsbl
sbb
jnp
aad
das
repnz
push
stc
pop
mov
sarb
int
mov
cmp
push
push
cmp
adc
call
cli
push
inc
xor
push
int
scas
push
mov
in
sahf
jp
cld
shl
mov
xor
call
jl
pop
inc
jo
lahf
cmp
dec
sahf
mov
push
daa
dec
dec
jle
scas
or
adc
aas
or
pop
das
orl
mov
sbbl
and
dec
xor
push
hlt
pop
stos
dec
lods
xchg
mov
push
es
mov
inc
and
out
sub
xchg
dec
jle
dec
lods
pushf
subl
loopne
push
test
das
in
push
ret
inc
mov
mov
mov
jno
movsl
mov
xor
mov
adc
mov
inc
xchg
push
or
sbb
pop
add
sarl
repz
mov
xchg
vmwrite
jo
icebp
add
sbb
xchg
sbb
push
or
in
sub
loope
cmp
mov
pop
outsb
sbb
jle
jb
or
xchg
out
push
fstpl
pop
std
cmc
push
mov
stos
std
inc
xchg
xchg
loope
pop
mov
and
test
lahf
dec
popa
inc
std
or
stos
call
jne
cmp
sub
cmpsb
in
add
adcb
repz
lds
mov
sub
push
lret
mov
in
sarb
mov
dec
cmp
cmp
and
xchg
ljmp
add
sub
out
jnp
mov
push
movsl
ret
imul
sti
push
adcb
mov
push
mov
movsb
xor
add
cmpsb
sahf
dec
add
xlat
pusha
sti
push
and
push
cmp
and
es
hlt
loop
mov
and
mov
add
mov
insl
rcll
pop
mov
stos
sbb
dec
repnz
xlat
jb
jnp
inc
fisubl
dec
add
xor
in
aas
inc
mov
and
sub
addb
mov
enter
sub
pop
sbb
adc
xchg
inc
jne
ljmp
imul
dec
jbe
mov
dec
jle
pushf
cmp
jmp
lods
dec
stc
clc
add
sub
sbb
inc
fisubs
adc
std
sbb
mov
lret
inc
in
je
mov
adc
push
dec
pusha
nop
xor
add
pop
icebp
jl
out
mov
jge
jne
sub
dec
xchg
jbe
ret
xchg
or
xchg
cwtl
lea
cltd
mov
add
pusha
div
or
xchg
add
insb
cmc
mov
fdivr
loope
mov
dec
mov
mov
cmpsl
push
inc
sbb
mov
sbb
movsl
pop
call
stc
arpl
mov
insl
fisttpl
inc
mov
mov
out
or
xchg
lahf
adc
dec
lahf
call
cmp
jmp
js
imul
xlat
fiaddl
fbld
sbb
pusha
push
push
sbb
or
fcmove
push
pushf
pop
daa
cmpsb
mov
iret
or
or
in
popf
imul
lret
lock
cmpsl
pushf
push
jp
cmp
hlt
inc
pop
ss
stc
ret
dec
cmp
mov
shll
out
xchg
ds
lret
push
ja
lcall
loopne
pop
xor
adc
add
xchg
lods
ret
mov
jl
je
pop
sbb
and
mov
push
mov
movw
or
loop
test
push
dec
push
jnp
or
subl
clc
or
loop
shll
add
jg
xorl
flds
push
adc
xchg
mov
leave
movsb
jl
negb
popa
xchg
aaa
in
cld
and
call
pop
sub
xchg
inc
std
daa
loope
ja
or
aam
fimull
mov
les
mov
mov
lea
pop
adc
popa
push
pop
stos
mov
ja
ficoms
xchg
rorl
les
adc
add
sub
ljmp
adc
repz
mov
pop
in
cltd
out
sub
pusha
sub
sub
adc
aaa
cwtl
aam
or
and
sub
out
orl
inc
js
sub
xor
mov
jle
imul
aas
scas
dec
shrd
or
ds
add
push
push
out
cmp
leave
js
or
mov
push
push
repz
cs
mov
stos
lahf
filds
sahf
push
lds
sub
fisubl
and
repnz
xchg
jmp
aaa
mov
icebp
inc
in
out
stc
push
std
and
adc
mov
or
sub
mov
ljmp
lret
jge
push
fwait
lahf
incb
fwait
in
and
scas
adc
adc
xchg
and
repnz
nop
xor
dec
sub
loop
inc
stc
imul
sbb
divb
out
mov
clc
jo
fcmovne
mov
lock
pop
setnp
xchg
lahf
inc
push
xor
insl
xchg
jmp
push
scas
dec
hlt
insb
mov
lods
cmp
push
loope
push
add
repz
mov
ja
gs
jg
cltd
adcl
addr16
in
or
ljmp
mov
or
outsb
jnp
repnz
fldcw
in
repz
mov
push
pop
dec
jne
fidivs
into
lret
std
sub
out
mov
push
sti
stos
mov
mov
push
fs
outsb
fimull
inc
xchg
add
out
and
sbb
xor
iret
and
xchg
jnp
and
pop
leave
sbb
pop
test
loope
push
neg
jg
cmpps
cmpsb
mov
test
movsb
sbb
and
mov
bound
sbb
repz
std
popf
out
adc
mov
cmpb
insb
fwait
scas
jg
cs
movsl
mov
jmp
sub
adc
lret
jns
dec
lahf
popf
int
clc
dec
mov
mov
and
popf
std
jl
pusha
xor
sub
aas
push
mov
or
cmp
pop
lahf
mov
cmpsl
inc
jl
cmp
push
hlt
arpl
data16
in
popl
mov
or
outsb
sub
fistl
inc
jae
cmp
in
movsl
adc
xchg
or
xchg
push
inc
sub
push
sahf
pushf
mov
inc
mov
or
cmpsb
icebp
pop
std
add
push
mov
sbb
push
divl
pop
sti
lods
lcall
jmp
bound
push
mov
fisubs
out
stc
aam
lret
test
cwtl
jle
xor
fistl
mov
ss
xchg
fnstcw
fimull
nop
jmp
daa
out
push
cltd
mov
and
aaa
xchg
jno
test
mov
push
inc
inc
push
inc
adc
daa
fdivrs
add
jnp
mov
jbe
stos
mov
mov
mov
aam
sbb
push
sbb
ds
mov
add
dec
jne
lods
adc
mov
clc
sarl
push
xor
sbb
jp
call
mov
sub
jl
or
cmp
adc
cmp
jecxz
test
test
inc
or
nop
cmp
or
das
loop
dec
dec
push
fstps
or
ds
push
scas
xchg
ja
add
or
dec
nop
jmp
pop
out
stos
inc
xchg
insl
inc
sbb
imul
mov
cmp
fisttpl
mov
adc
daa
cmp
add
jge
filds
pushf
cmp
arpl
adc
xchg
roll
mov
pop
mov
jbe
fbld
push
cltd
push
sti
out
push
cltd
fdivs
iret
movsb
ds
loopne
ret
mov
push
mov
push
iret
subl
mov
cmp
push
stos
js
lret
sbb
ds
sti
ja
xchg
lds
dec
mov
outsb
nop
xchg
push
push
mov
and
es
adc
mov
repz
sub
jge
out
sbb
mov
cmp
or
ret
sbb
gs
mov
add
outsb
adc
loop
pushf
imul
cld
out
sbb
push
push
and
enter
lret
outsb
in
jne
add
ds
clc
and
pop
cmp
or
adc
adc
call
jae
push
adc
sub
xor
jge
leave
repnz
aaa
ds
fiadds
xor
jge
shr
clc
xchg
mov
sbb
fdivrs
ret
add
gs
iret
add
push
push
in
stos
inc
xchg
les
dec
sbb
loopne
adc
mov
cs
es
movsb
jg
mov
push
iret
std
cmc
push
dec
std
jne
out
daa
in
mov
in
ljmp
fdivl
call
les
scas
loop
push
int3
adc
jae
xchg
hlt
mov
and
ja
stc
outsl
jnp
mov
mov
xor
iret
push
sub
roll
cmc
jnp
push
icebp
ss
testb
ss
dec
cmpsb
xchg
insl
cwtl
mov
mov
push
imul
and
out
sbb
mov
jo
sub
sbb
int
fld1
sbb
xor
add
into
call
rolb
test
fwait
jbe,pn
jecxz
dec
xchg
sub
mov
lods
pop
inc
out
outsb
leave
adc
enter
jp
adc
paddsw
adc
dec
shlb
mov
mov
add
cld
dec
or
cmp
sbb
xchg
rolb
adc
int
roll
sbb
cmp
loop
scas
movl
mov
out
push
les
mov
jge
test
out
jg
xor
data16
test
mov
into
pushf
pop
pop
mov
loope
pop
xchg
gs
and
dec
in
pushf
push
add
movsl
push
add
dec
inc
adc
flds
cmp
loope
jp
mov
push
and
dec
pushf
add
aas
call
in
fdivp
loope
cwtl
mov
loopne
ljmp
pusha
scas
mov
jbe
inc
dec
icebp
cmpsb
or
or
xchg
pop
lds
and
in
jbe
data16
scas
mov
mov
adc
andb
loope
mov
adc
loope
jecxz
lods
clc
inc
icebp
mov
out
inc
fs
cmpsl
pop
rcrb
pusha
inc
fisttpll
repz
cmpsl
int3
subl
in
in
push
shlb
orb
repz
loopne
jbe
lcall
inc
in
jl
sub
mov
xlat
and
cmp
loop
jg
mov
mov
or
ds
sub
add
js
fs
aad
bnd
pop
stos
cs
add
dec
mov
out
and
cld
xor
nop
xchg
insl
lds
pop
push
mov
in
scas
push
ds
or
jecxz
scas
inc
xor
jle
std
cltd
pop
xor
sbb
fidivrl
call
mov
xchg
cmpb
sbb
jmp
push
xchg
jp,pt
mov
mov
ror
mov
and
test
add
rcrl
dec
rcrb
adc
ss
mov
push
or
xor
sahf
pop
int
jbe
aam
sar
aad
cli
push
in
or
inc
in
mov
dec
mov
sub
sahf
adc
jbe
mov
xchg
cli
lcall
and
add
add
inc
cmpsl
cltd
mov
push
int3
lret
hlt
daa
cmpsb
pop
into
insl
or
cmpsb
fwait
cs
les
push
lahf
adc
les
mov
pop
fwait
lods
aam
into
add
cmp
pop
je
or
insb
jmp
xor
push
or
negb
shlb
mov
pop
mov
in
icebp
lods
and
xor
ss
cmp
mov
mov
cmp
inc
filds
vpaddq
and
push
lret
and
ja
outsb
mov
jmp
mov
mov
push
mov
inc
mov
or
adc
in
sbb
arpl
mov
adc
xor
pop
sbb
cmp
shlb
xchg
fmull
dec
icebp
cmpsl
xchg
ror
stos
test
sti
inc
lods
cld
loopne
mov
fisttpll
pop
cltd
pop
dec
pop
cmp
fs
or
sub
cmpsb
iret
xchg
or
cmp
adc
and
add
sbb
jne
inc
push
cmp
mov
cmp
rorb
pusha
pop
cs
in
inc
jecxz
mov
xchg
push
add
sbb
out
imul
add
mov
and
mov
fadds
add
dec
pop
ret
mov
mov
dec
push
shll
mov
loopne
pusha
xchg
jnp
jb
fiadds
push
ljmp
mov
xor
sub
or
add
xchg
or
pop
xchg
out
orl
sub
jae
lahf
test
or
in
push
lahf
lcall
in
daa
push
xchg
push
cli
xor
mov
pusha
lods
mov
xchg
sarb
lods
js
outsl
sbb
test
cmp
push
dec
adc
ss
je
sbb
jbe
pusha
xchg
aas
stos
add
mov
lock
push
scas
cmc
sbb
out
cmp
mov
das
pop
mov
mov
mov
xchg
ljmp
xchg
cmp
cmp
stos
xchg
popf
sbbb
lahf
outsb
test
pop
xchg
test
rorl
mov
cmc
mov
je
std
cmpsl
and
add
push
das
fildl
lret
out
lods
popl
inc
xor
pop
adc
inc
cmp
add
in
push
xor
jbe
loop
or
pop
test
sqrtps
negb
loope
mov
cmpsl
les
lds
mov
mov
das
divb
and
test
out
dec
sbb
cmp
cmp
push
stc
add
imul
jecxz
jb
push
inc
int3
mov
xchg
push
and
jp
xchg
shlb
xor
js
sub
sub
ja
ljmp
cld
push
aam
or
or
fcmovb
cmp
pop
sub
add
lret
in
push
xchg
lcall
xor
imul
fmull
jns
cmpsb
pushf
push
lods
or
mov
mov
lds
test
lahf
xchg
loope
sbb
in
fiadds
cmp
cmpsb
lea
cmp
pop
bound
fs
mull
pusha
std
popa
loop
mov
fisttpl
mov
cmp
subb
push
lods
pop
cld
fidivs
hlt
loopne
test
lret
inc
inc
imul
jecxz
mov
dec
push
roll
cld
aam
add
cmp
lahf
scas
movsl
xchg
add
dec
mov
cmpsl
fldcw
insb
mov
jno
jg
scas
cs
mov
shll
insl
sbb
fisubrl
cmp
jo
adc
mov
xchg
and
push
enter
mov
jbe
cs
mov
movsb
sbb
stos
push
cmp
sbb
and
in
inc
pop
shrl
call
jb
fsubrs
jns
loop
jno
pop
dec
aam
mov
or
and
pushf
dec
jo
aaa
inc
xchg
push
rorb
mov
lock
jnp
jbe
popf
sub
inc
cmp
add
imul
and
in
dec
pop
xchg
or
clc
ja
pop
add
push
sub
push
cmp
jo
cmp
xor
sbb
shl
push
cmpsl
jmp
test
mov
cmp
cmp
outsb
xchg
add
inc
ds
push
jmp
lcall
leave
sub
lea
jb
mov
push
insb
mov
mov
pop
pop
pop
test
jnp
xor
les
lods
adc
jae
mov
out
imul
not
push
dec
mov
adc
push
dec
call
jmp
repz
sub
pushf
bound
out
mov
fdivrs
dec
test
xor
mov
sahf
in
dec
paddsb
rclb
adc
enter
in
cmpl
push
sbb
dec
js
scas
fldenv
adc
popaw
push
sbb
mov
into
cld
push
es
inc
fdivrs
and
clc
test
jns
pop
gs
push
xchg
mov
ljmp
das
sbb
mov
mov
enter
mov
mov
repz
cs
adcl
cld
call
mov
aaa
fwait
cli
loope
cmpsb
outsb
xor
ss
orl
arpl
dec
enter
mov
jp
cmpsb
inc
jb
test
mov
lods
lods
push
adc
dec
mov
xchg
inc
jle
adc
push
pop
pop
in
xchg
push
cmpsb
add
adc
fwait
ds
or
pop
es
ret
in
pop
jbe
push
and
mov
pop
sub
aad
inc
ret
mov
andb
sub
loopne
xchg
sbb
fnsave
mulb
fcom
mov
or
out
nop
mov
popa
sub
lock
xchg
into
and
adc
mull
outsb
cmp
pushf
xchg
loopne
arpl
cmp
cwtl
push
adc
int
pop
subb
test
mov
call
push
loope
std
fmull
jae
loop
cmp
cmpsl
movsb
arpl
loope
hlt
test
mov
in
mov
dec
xchg
ljmp
dec
dec
icebp
xor
cli
jb
mov
das
gs
rol
das
ljmp
dec
push
mov
jne
mov
in
mov
jno
jp
loopne
call
add
imul
mov
push
jno
movsb
cmp
mov
sbb
cs
mov
add
sti
cli
hlt
mov
shll
jp
mov
push
or
push
sahf
mov
pop
mov
lods
mov
adc
pop
push
xchg
loopne
mov
shll
push
push
out
jae
cli
sahf
insl
enter
sub
sbb
push
imul
jae
jp
mov
pop
jae
or
cmpl
stc
je
xchg
and
aas
loopne
orl
ficoml
daa
call
ljmp
in
movsb
in
jge
orl
xchg
ffreep
inc
loop
incb
int
xchg
push
into
push
dec
orb
ljmp
mov
gs
or
popa
sub
pop
cmpsb
dec
jb
sarl
pop
mov
push
int
repnz
std
cmc
outsb
fisubrs
dec
popa
bound
lahf
adc
fs
cld
adc
mov
and
aam
mov
ret
insb
mov
je
push
rcl
ljmp
inc
dec
and
dec
push
lock
xor
arpl
mov
mov
arpl
jb,pn
xor
outsl
fcoml
cmp
push
rolb
std
jns
cltd
push
leave
jno
inc
mov
sbb
mov
arpl
sarl
xor
mov
dec
mov
xor
out
jne
xchg
repnz
pop
mov
inc
sbbl
punpckldq
ja
cmp
cmp
sbb
push
mov
das
jle
les
leave
clc
fistps
repnz
xlat
sub
cld
ljmp
popa
jb
roll
imul
test
pusha
aas
fldenv
mov
cwtl
push
lahf
sbb
repz
je,pt
stos
rcr
jo
push
ljmp
subb
pusha
sbb
cs
enter
xchg
out
pusha
mov
push
inc
movsb
sub
lds
and
mov
clc
xor
lcall
jmp
popf
push
cmp
dec
mov
aaa
inc
lds
outsl
and
jbe
adc
lahf
or
scas
adc
inc
lret
cltd
iret
fildll
dec
sbb
mov
pop
daa
dec
imul
and
sbb
and
scas
add
stos
xor
clc
mov
das
dec
test
jg
jne
xor
jg
shlb
or
or
xchg
mov
enter
ss
or
jo
dec
sub
jae
mov
in
push
jb
aas
sub
adc
jae
loope
rorl
adc
jl
lock
scas
loopne
xor
test
pop
pushf
push
jle
cmpsb
add
mov
jge
jae
xor
mov
adc
in
das
ss
or
lds
pop
clc
aam
jl
movsb
test
test
jo
push
adc
scas
mov
call
scas
pop
les
pop
jl
jmp
push
insl
mov
icebp
movsb
loope
mov
cwtl
pop
adc
movsl
inc
shlb
stc
push
or
and
xor
push
inc
adc
les
aaa
xchg
jnp
stos
sbb
aas
mov
cmp
xchg
rcrl
dec
sub
loopne
and
ret
outsl
or
jmp
lods
pop
mov
and
pusha
scas
scas
inc
mov
jle
scas
cwtl
movsl
mov
add
xchg
push
hlt
inc
adc
mov
stos
aad
cmpsb
aas
mov
inc
mov
lcall
sbb
shlb
leave
push
sub
sahf
xlat
jmp
fmuls
cmp
iret
adc
jge
call
mov
push
jo
mov
mov
lds
adc
adcb
adc
cmpsl
cwtl
jb
out
clc
rclb
frstor
and
or
lcall
push
xchg
stc
lods
jbe
xchg
pushf
daa
push
push
xor
xchg
mov
sbb
xor
loop
cmc
in
xor
cltd
gs
enter
mov
or
pop
mov
cmpb
int3
and
add
mov
scas
into
sti
pop
mov
sbb
jnp
jge
addr16
or
mov
sbb
iret
or
clc
outsl
imul
push
jno
push
xchg
or
lcall
adc
cmc
rcr
inc
iret
cmc
fdivrp
es
adc
mov
pop
fcomps
fists
dec
pop
aaa
mov
and
and
push
call
or
ljmp
inc
gs
out
mov
insl
inc
push
jnp
dec
sub
push
test
sub
mov
push
mov
xor
mov
mov
pop
xor
dec
xor
and
push
pop
mov
cbtw
bound
mov
andb
xor
arpl
ret
inc
lods
and
out
xchg
mov
add
shrb
or
push
scas
adcl
sarl
outsl
xchg
inc
repz
dec
movsl
adcl
lret
xchg
add
xchg
in
sbb
mov
hlt
inc
ds
mov
stos
xor
sbbb
lods
dec
test
aam
add
xchg
dec
in
inc
mov
test
pushl
es
cmpsl
movsb
xchg
cmp
fnstsw
cmp
adc
bswap
mov
xor
rcrl
inc
sbb
pop
fisttps
addr16
mov
int
or
inc
call
out
pop
adc
or
lods
rclb
xchg
push
insl
push
and
arpl
aad
xor
mov
cmp
xor
lret
jle
aas
jo
les
pop
arpl
push
push
notb
xchg
cmp
ss
mov
aad
push
nop
aas
loop
sbb
jle
jecxz
das
cmp
and
or
lret
adc
aaa
call
sarb
aas
jge
cwtl
cmp
nop
gs
jl
mov
aas
lods
ret
dec
mov
ret
adc
lret
setl
or
inc
fnstenv
loopne
mov
push
pop
xor
mov
divps
in
jnp
stos
push
inc
fadd
sbb
push
cwtl
outsb
jle
ja
xchg
sub
mov
xchg
xchg
stos
addr16
das
adc
cltd
cmpsb
mov
sub
xchg
mov
adc
lds
scas
jmp
dec
pop
cmp
mov
xor
adc
add
aas
addr16
sbb
lock
dec
data16
int3
ss
push
xchg
jmp
or
icebp
inc
inc
mov
cmp
outsb
enter
pusha
das
shlb
cmpsb
xor
xchg
lds
push
mov
mov
into
in
arpl
btr
lahf
dec
lret
pop
ja
daa
or
dec
mov
push
test
sbb
push
pushf
xorb
xchg
sahf
out
std
lods
loope
mov
cmp
xchg
mov
pop
pop
mov
xchg
xchg
and
push
popf
movsl
std
sub
cmp
adc
aam
mov
rcrb
into
fs
shll
test
xor
jns
jp
sub
mov
mov
insb
pop
iret
adc
ja
pusha
mov
ja
mov
mov
outsl
int3
loope
jecxz
mov
sbb
out
lret
pop
andl
movsb
loopne
jae
fstpt
loopne
negb
pop
inc
outsb
cmp
cs
push
es
pop
cmp
dec
loop
pop
adc
cmp
jle
add
out
mov
push
insl
in
sbb
xchg
jae
clc
adc
pop
hlt
lret
xlat
ljmp
mov
pop
pop
xchg
loope
adc
pop
int
dec
add
jbe
jb
dec
gs
sub
mov
dec
jno
mov
cmpsl
mov
dec
das
or
sub
not
cmp
mov
inc
addb
aad
or
mov
clc
dec
sub
xchg
mov
xchg
cmp
inc
sub
push
xor
lods
sbb
ja
insb
ja
cwtl
dec
aaa
sahf
sbbl
mov
in
cmpb
or
push
test
dec
mov
push
cltd
call
sbb
mov
out
xchg
clc
jb
scas
std
test
cmp
adc
xor
je
pop
mov
xchg
dec
rorb
mov
inc
mov
xchg
mov
ja
lret
outsb
dec
sub
and
jmp
les
arpl
dec
mov
fmul
out
arpl
cmp
shl
xlat
shl
enter
cltd
dec
sbb
pop
xchg
mov
fwait
hlt
sahf
sbb
mov
push
cmp
push
xchg
mov
jae
adc
ja
test
gs
push
je
leave
mov
filds
add
dec
xor
cmp
insl
addr16
aas
and
add
std
xchg
xor
insl
out
sub
and
out
enter
outsl
mov
sti
fildl
adc
adc
iret
ror
ja
cltd
pop
test
jnp
mov
pop
ja
dec
add
xor
mov
outsb
les
fsubs
test
adc
movsb
shrl
sbb
shrl
sarb
rorl
add
adc
add
add
push
lcall
shlb
fs
popf
push
lret
dec
mov
or
xor
daa
mov
sbb
pop
cmp
or
test
fadds
bound
and
mov
inc
jl
mov
jg
dec
mov
cmpsl
clc
fbld
das
outsl
in
insl
jbe
andl
je
cwtl
test
push
mov
movsl
aas
xor
mov
scas
inc
mov
add
mov
add
sub
fbstp
and
mov
rorb
rcr
dec
lds
fcomp
into
mov
outsl
lret
cmpxchg
call
fmuls
imul
loop
dec
mov
jge
jns
push
stc
push
xchg
jbe
push
call
mov
sbb
add
cmp
outsl
pop
pusha
out
ret
ret
outsl
mov
pusha
xchg
mov
lcall
adc
lret
mov
mov
shr
lock
je
loope
cmp
loopne
es
add
and
in
in
jmp
and
and
adc
jge
cmp
fildll
or
fstpl
lods
pop
dec
mulb
mov
push
cmc
sti
or
mov
mov
mov
fisttpl
rcrl
sbb
sub
mov
clc
inc
inc
ja
outsb
mov
test
pushf
in
push
xchg
cltd
add
push
lea
xchg
xor
stc
sti
sbb
sub
push
cltd
fdiv
cmp
test
loope
xor
int
in
and
arpl
cmp
adc
sub
pop
and
add
push
mov
ret
and
ficoms
jge
div
pop
rcll
adc
lods
xchg
or
xorl
pop
push
dec
xchg
jge
adc
cmp
aaa
out
sub
movb
mov
imul
push
sbb
into
mov
cmp
xchg
in
sub
pushf
ss
cli
stos
iret
cmc
jle
pop
hlt
loop
sbb
sbb
in
jmp
pusha
mov
push
push
icebp
mov
test
inc
cmpsb
mov
das
push
jle
jg
inc
mov
jae
dec
and
mov
ljmp
xchg
push
mov
sub
aad
outsb
jmp
mov
push
popa
call
xorb
pusha
in
popf
std
cmp
sub
dec
out
dec
cmp
lret
outsb
int
arpl
aam
mov
rorb
jne
out
fimull
or
mov
xchg
mov
jae
sub
lods
inc
mov
test
pop
stc
js
mov
xlat
xchg
ds
mov
inc
lcall
mov
dec
jge
pop
stos
push
sbb
cmp
pop
sbb
ds
imulb
mov
xor
sbb
daa
sub
dec
pop
in
sub
or
int3
xor
add
push
cmpsb
xor
push
adc
jo
mov
sub
jae
or
mov
inc
mov
xchg
ss
subb
test
dec
push
test
jp
test
mov
sub
and
js
cmpsl
jns
cwtl
inc
dec
mov
hlt
nop
jle
fwait
jge
mov
sub
add
or
test
jge
and
stc
mov
lds
cmc
aas
sub
xchg
nop
std
sar
adc
int
test
adc
pop
lret
outsb
dec
and
test
js
or
jb
inc
enter
cwtl
std
iret
dec
daa
jno
sub
rorb
addr16
cmc
stc
or
xchg
aam
call
jo
cmp
lret
add
aam
loope
adc
push
iret
mov
xchg
lods
or
fists
sti
dec
inc
loopne
daa
jecxz
cmpsb
out
add
push
dec
orl
js
push
jae
sbb
movsl
es
popf
movsb
sahf
pop
jnp
jle
add
enter
pop
and
adc
loopne
mov
mov
jg
pusha
mov
or
push
dec
lahf
or
dec
shl
stos
adc
mov
and
mov
mov
ja
inc
lods
xchg
sarb
mov
cld
sarl
addr16
daa
mov
xor
jl
imul
jmp
xchg
lods
or
mov
cwtl
mov
fidivrs
in
adc
repz
sbb
aaa
in
xorb
stos
aas
mov
sub
inc
push
jb
rcl
loopne
loopne
imul
dec
cmp
add
mov
xor
fiadds
addl
aad
xchg
mov
stc
jp
incl
cmpl
rcrl
mov
es
sbb
data16
mov
dec
ds
iret
out
add
jb
imul
sbb
enter
xor
cmc
push
rorl
mov
mov
outsl
xor
insb
adc
sbb
xor
ret
mov
dec
or
lret
mov
and
lods
jbe
cmc
sbbb
xor
imul
sub
xchg
sub
fldenv
cld
in
cmp
fsubr
ss
into
cmc
and
xor
push
ja
cmpsb
push
sti
stos
push
sub
cmp
shll
movsb
adc
inc
lret
pop
out
lods
shll
repz
mov
xchg
daa
clc
test
je
sub
push
push
adc
pop
lcall
fnstenv
xlat
mov
test
lock
roll
cmp
jb
test
lahf
cmpl
addl
imul
pop
push
xor
ret
push
pusha
pushf
pop
arpl
pop
test
xchg
push
sbb
mov
mov
cmp
aad
in
adc
add
push
push
test
add
aad
add
rorb
sub
sub
mov
fwait
stc
daa
mov
jb
int
pop
xchg
mov
xor
xbegin
mov
jae
cmp
daa
pop
fists
xchg
jp
push
mov
lds
insl
adc
mov
pop
push
nop
pushl
adc
incl
push
insl
xchg
fnstcw
leave
cmp
inc
popf
xor
test
mov
push
inc
push
push
pop
xor
xchg
mov
iret
cmp
imul
sub
mov
cmp
nop
das
and
scas
xchg
jg
jl
test
sbb
adc
gs
fimull
adcb
test
imul
insb
loope
dec
pop
jo
mov
xchg
push
sub
sub
adc
xor
push
cmp
pop
bound
dec
idivl
push
sub
lcall
inc
jno
push
stos
sub
in
dec
imul
add
jne
sbb
call
cmpsl
and
xchg
insl
xor
inc
popa
and
mov
jnp
sbb
mov
int3
mov
es
mov
jns
icebp
fcomps
jmp
cs
int
shrb
add
mov
addb
fs
adc
jb
mov
insl
lods
mov
lock
and
frstor
push
rclb
or
adc
and
and
jmp
ljmp
dec
add
push
cmp
cmpsb
pop
mov
adc
test
jns
lcall
jae
sti
testl
sub
bound
sub
adc
mov
mov
mov
xlat
sbb
out
push
fs
insb
mov
mov
inc
inc
scas
jb
jnp
pop
dec
into
arpl
loope
add
xor
dec
stc
scas
sar
xor
mov
gs
mov
inc
push
fiadds
sub
das
inc
and
add
std
add
add
lcall
aaa
rcrl
movsl
inc
enter
ja
jne
int3
sub
pop
fbstp
inc
scas
adc
jb
dec
xor
adc
add
pop
or
cwtl
push
mov
sub
cltd
pcmpeqd
out
fs
pusha
xchg
jb
jle
outsb
rorl
call
and
cltd
xchg
gs
pop
push
test
aad
lret
repz
mov
lock
mov
dec
insl
cmpsl
inc
cmp
adc
pop
jp
not
push
les
leave
movsl
xlat
inc
cld
add
lcall
cmp
or
fisttpll
sub
dec
rol
cmp
push
mov
out
aam
inc
cltd
test
ljmp
incl
push
loopne
xchg
sbb
xchg
xor
fisttpll
mov
jl
xor
cmp
cmp
push
shr
cmpl
push
int
cmp
sub
cld
shl
jo
loope
ret
sbb
add
test
bnd
sbb
insl
mov
xchg
fldcw
loope
inc
mov
and
cmp
lret
jo
dec
inc
add
jb
sub
iret
mov
sbb
divb
xchg
adc
lods
insl
js
jb
sbb
testb
adc
in
insb
daa
int3
lea
daa
shlb
ljmpw
inc
dec
xor
int
xchg
or
popf
inc
mov
sub
je
jo
ja
add
mov
shl
adc
lahf
repz
xchg
notl
adc
loope
inc
or
icebp
pop
cmp
es
adc
cs
push
call
jl
dec
cmc
or
ja
dec
popa
in
adc
pop
push
inc
add
mov
mov
mov
xor
jne
cltd
and
les
lahf
push
sbb
jmp
arpl
mov
out
inc
xchg
cmp
testl
dec
out
aam
cmp
sub
ljmp
xrelease
fcmovne
xor
stos
xor
mov
push
inc
push
cmpb
pop
pop
cli
fsubrs
add
int
xchg
cmp
jmp
shlb
and
test
pop
inc
jp
lods
pop
inc
sti
xor
mov
add
or
divl
pop
ret
inc
subl
push
add
xor
push
xor
xor
jmp
std
sub
add
mov
je
sub
aad
outsl
shll
xchg
push
xchg
sub
add
repz
jo
mov
mov
insb
ljmp
mov
mov
pop
xor
cld
test
adc
in
dec
fs
in
insb
addr16
daa
jl
adc
lcall
cwtl
ret
lahf
push
shlb
jp
iret
cmp
pop
add
push
pop
push
xchg
and
outsb
or
pop
int
or
or
jle
clc
es
fstl
dec
fsubrs
jbe
mov
arpl
add
dec
stc
nop
cmc
add
push
fiadds
cmp
es
and
movl
loope
mov
or
mov
xor
mov
or
push
sbb
scas
push
and
xchg
pop
jne
mov
sbb
xchg
arpl
sahf
gs
imul
in
sti
daa
in
filds
stc
mov
xor
lcall
test
adc
out
jnp
cmpsb
lahf
mov
lods
push
add
xorl
mov
scas
lahf
xchg
add
enter
jge
aam
daa
adc
inc
mov
and
test
cmc
cmpsl
sub
fs
les
lret
stos
inc
fisubl
xchg
cmp
inc
add
jb
outsb
sub
lock
xchg
adc
or
lds
cmp
mulb
popf
xlat
fimuls
and
int3
pop
cmp
int
dec
mov
mov
xchg
pop
jecxz
adc
inc
rorl
stos
adc
or
addl
insb
sub
jl
and
add
fdiv
cmp
inc
pop
lods
out
adc
sub
mov
sub
aad
pop
push
pop
xchg
push
inc
pop
xor
ficoml
fsts
sbb
pushf
jns
jne
push
leave
sbb
and
inc
jne
clc
mov
add
int3
in
mov
cmp
aad
gs
mov
lds
push
sub
mov
dec
xchg
data16
out
mov
negl
pop
lods
cmpsb
in
xchg
sti
repnz
add
js
rolb
sahf
cmpsl
les
std
inc
bswap
das
xchg
inc
push
mov
imul
dec
dec
and
push
inc
stos
sub
loope
insb
jle
mov
pextrw
sub
sbb
out
lahf
push
mov
and
inc
pop
or
cmp
sbb
inc
ret
fildll
inc
scas
push
int3
aad
cmp
cld
fstl
add
add
sarb
rcr
pop
lock
push
nop
inc
cmp
movsb
cwtl
dec
shll
jle
cmp
subl
inc
lea
std
mov
or
je
mov
movb
sub
mov
iret
jo
and
dec
cli
adc
lcall
rcll
pop
jle
sub
lea
sub
cmp
outsl
sbbb
es
dec
and
shr
fsubl
and
sbb
loop
or
in
fbstp
xchg
or
lcall
pop
xchg
lret
insl
fmulp
push
dec
stc
and
pop
je
xor
pmuludq
xor
enter
mov
mov
mov
shl
fdivp
fs
mov
sbb
push
mov
loopne
shlb
rcr
mov
das
mov
adc
scas
sub
pop
arpl
jnp
stc
insl
pop
aad
jg
pusha
pop
push
das
and
cmp
lret
cli
xor
adc
jbe
cmc
sub
inc
add
shrl
inc
dec
fiaddl
jbe
mov
int
out
imul
repnz
shlb
int
ds
hlt
iret
cmp
xchg
pop
ja
mov
lea
imul
scas
lods
push
sub
push
outsb
xchg
js
adc
gs
cmp
sub
imull
cmp
and
cmpb
adc
fs
pushf
and
mov
es
pushf
scas
mov
dec
stos
frstor
bound
add
mov
rorl
mov
into
iret
lock
xchg
lea
adc
out
and
push
popa
xor
adc
adc
adc
movsl
push
sbb
std
inc
enter
test
call
push
aas
pop
sbb
fcmovb
pushf
jmp
sbbl
or
fs
insl
mov
test
jno
and
mov
movsb
add
mov
jp,pt
clc
int
adc
jge
test
lock
les
jg
cltd
pop
pop
mov
cld
cmp
cld
js
aaa
inc
xchg
cmp
popa
inc
call
or
cld
cld
cmp
lods
sub
push
frstor
imul
lcall
inc
icebp
rorb
int
push
dec
lods
fcmovnbe
xor
mov
fildl
les
mov
and
mov
pop
xor
rcll
mov
xchg
je
stos
ret
sarl
lea
pop
in
push
add
dec
cmpsl
push
notl
pop
inc
sub
outsb
push
mov
insb
xchg
dec
bound
mull
cli
add
dec
xor
pop
int3
push
in
nop
jb
sub
adc
and
cmp
popa
xor
mov
in
jne
popa
xchg
dec
add
dec
jecxz
sub
dec
jno
inc
sbb
xchg
aad
insl
sbb
jl
pop
out
es
test
pop
les
dec
sti
mov
pop
pop
push
repz
data16
cmpsb
jg
pushf
in
pushf
xchg
and
test
cmp
inc
jno
inc
fwait
mov
xor
add
dec
lret
aaa
adc
cmp
leave
xchg
dec
adc
fidivl
dec
sti
js
loopne
pop
cmpsl
rorl
push
or
call
dec
push
aas
mov
adc
mov
sarw
imul
aaa
dec
testl
cltd
cli
jno
xor
xchg
jg
ja
cmp
fwait
pop
and
mov
ja
aaa
shlb
movb
shrb
sub
push
je
in
pop
iret
loopew
pop
push
inc
es
es
push
dec
and
dec
sbb
mov
xor
pusha
popf
cld
fucomp
lcall
pop
sahf
jg
dec
jge
sub
loope
pmulhuw
mov
fcompl
ret
loope
add
out
stos
fcmovne
mov
xor
das
push
repz
add
insl
jb
mov
fisubs
push
ja
xchg
divl
clc
shl
outsb
dec
xor
fdivl
insl
inc
into
pop
xor
adcl
inc
lret
and
out
jo
push
stc
jnp
loopne
mov
test
add
pusha
mov
ds
aad
mov
or
cld
dec
jne
xchg
popf
in
aaa
lods
cli
inc
xlat
xchg
aaa
enter
inc
into
push
inc
sbb
aaa
stc
negl
xor
pop
fwait
stos
push
inc
cli
bound
ja
mov
ret
fistps
jge
xor
in
inc
sbb
imul
popf
xor
mov
mov
lock
js
loopne
fldenv
sub
mov
or
pop
es
add
jae
lods
bnd
data16
push
push
or
mov
aad
pop
dec
mov
lret
loopne
jp
push
push
ss
cmp
xor
pop
ret
stc
mov
jns
cmp
rep
into
xchg
mov
cmpsl
push
dec
and
xchg
lock
insb
push
cmp
or
jb
pop
outsl
decb
mov
shl
pop
sub
dec
es
mov
fisttpl
jmp
and
pop
aad
jle
es
inc
out
push
mov
in
out
pop
notb
sub
in
pop
xchg
xchg
pop
pop
cmp
in
pop
dec
and
xor
push
mov
test
and
fisubrl
xchg
or
add
xchg
adc
push
xchg
fwait
dec
call
xor
sbb
je
xlat
pop
inc
pop
lret
push
xlat
inc
and
adc
cmp
xchg
nop
jo
lock
xor
and
loopne
sbb
adc
adc
sub
or
ljmp
xorl
mov
lret
call
sbb
xor
lds
sahf
adc
mov
dec
mov
push
scas
cmpsb
ljmp
push
mov
test
jecxz
into
fisubrl
mov
gs
add
sbb
sbb
sub
cltd
loopne
sub
data16
sub
or
push
mov
and
stos
pushf
cmp
xchg
lds
fcomip
outsl
fiadds
popf
shrl
sub
jg
clc
jb
popa
movsb
push
pop
sub
xchg
rolb
bound
sub
adc
lret
or
int
pushl
mov
cmpsl
push
ds
pop
ret
lcall
mov
mov
adc
pop
mov
inc
or
mov
test
push
leave
cmp
ret
and
xor
lahf
repz
lea
mov
loopne
sub
loope
add
shlb
mov
jle
xchg
movsb
sbb
cli
test
insl
daa
push
notl
sbb
je
insb
pusha
aad
imul
in
arpl
mov
dec
sbb
dec
hlt
inc
add
cmpsb
jge
cmp
or
mov
push
mov
stos
rorb
dec
jb
xchg
lods
leave
fwait
dec
enter
pusha
test
outsl
dec
stos
cmp
adc
stos
sbb
lahf
sbb
adc
cmp
lock
pop
jb
das
jl
adc
inc
movd
mov
fs
adc
add
test
cmpsl
mov
aam
or
add
and
fistpll
imul
mov
push
xchg
or
pop
mull
mov
fldcw
in
cwtl
into
sbb
das
mov
das
pop
pop
lret
jae
inc
jns
xor
adc
rcll
push
or
loope
mov
daa
cmp
push
push
nopl
call
mov
data16
inc
xchg
mov
and
or
subb
daa
fwait
cmpsb
aaa
mov
daa
inc
cmp
rcl
test
popa
mov
mov
add
mov
icebp
xchg
lods
xchg
push
dec
je
fwait
add
xrelease
out
jb
push
lods
add
popa
sub
gs
lret
jmp
xchg
push
xchg
stos
movsl
and
test
shlb
push
cmpl
ret
push
rorl
jp
sarl
in
movsb
scas
and
mov
jae
fwait
xorl
bound
enter
push
mov
stos
je
push
adc
orl
out
rorb
scas
push
sahf
mov
jmp
std
insb
push
and
hlt
leave
iret
sbb
sti
sub
cmp
into
jne
dec
cs
mov
les
adc
imul
outsb
mov
pushf
fs
mov
movsb
push
xor
jno
popf
movsl
mov
fsubl
outsb
out
dec
push
sahf
inc
xchg
and
add
into
popa
mov
sbb
dec
sahf
bound
or
fwait
pop
xchg
adc
mov
mov
in
xchg
in
inc
sub
mov
idivl
cltd
cmp
push
addr16
imul
pop
int
add
shll
mov
sub
pusha
inc
js
push
jmp
push
and
push
sbb
ljmp
mov
jb
adc
mov
jmp
repnz
dec
lds
mov
jecxz
or
and
or
jae
sbb
ret
stos
and
lds
outsl
into
call
xor
sub
aad
push
sbb
call
enter
add
fmulp
lret
loope
push
inc
out
and
iret
mov
push
add
push
sarl
ds
push
push
aam
or
movsb
add
xor
lea
call
and
xchg
out
aas
icebp
mov
inc
or
adc
mov
and
push
inc
or
xchg
insl
sub
xchg
xor
xlat
inc
popl
loope
popa
or
fisubs
stc
pushf
stc
xor
popa
push
pop
cltd
xor
adc
cmpsb
out
xor
mov
jp
xor
adc
loopne
or
inc
or
cmp
test
scas
mov
push
movsl
dec
cmp
xor
fistpl
sub
mov
and
fmul
pop
inc
or
and
test
and
or
pop
xor
or
ljmp
jecxz
or
inc
and
xchg
jo
loope
xor
inc
xchg
sub
xchg
call
mov
stc
mov
mov
insb
or
mov
jge
test
cmc
ret
scas
inc
dec
in
cmp
sbb
inc
mov
pushf
and
fs
mov
fildl
push
add
mov
or
inc
stos
jns
dec
pop
mov
sbbl
popa
es
movsb
dec
sub
xchg
lcall
cmp
int3
mov
push
dec
ret
jg
sbb
fnsave
fbstp
jbe
adc
pop
sub
dec
fsts
push
cmp
mov
scas
inc
jno
dec
lods
jb
sub
lret
shlb
lret
pop
outsl
in
ret
adc
pop
test
testb
xchg
popf
and
shlb
or
test
and
outsl
mov
stos
out
popf
pop
adc
jle
pop
fistl
fucomp
or
subl
fs
mov
sub
and
cltd
or
outsb
mov
mov
pushf
ds
es
pop
cmpb
xor
je
jl
mov
xchg
add
aaa
call
not
fwait
test
dec
or
in
sbb
pop
pop
mov
in
adc
das
repnz
push
mov
aad
xor
pop
push
jnp
adc
inc
rcrl
xchg
testb
cmp
adc
mov
push
icebp
mov
inc
test
sub
cld
ss
imul
mov
shlb
xchg
test
cmp
ds
mov
lock
xlat
xchg
adc
push
inc
sub
adc
mov
out
jnp
insb
sbb
or
push
push
test
xor
jle
mov
sahf
out
enter
mov
cmc
enter
cmpl
stc
into
and
pop
push
jno
or
jg
cmp
sti
cmp
mov
lret
and
jbe
cltd
mov
repnz
or
cmp
scas
out
lds
sbb
inc
test
xchg
aaa
push
mov
cmpsl
mov
cmp
push
inc
xor
fstpt
je
mov
cltd
daa
insb
mov
lahf
outsb
hlt
rorb
cmp
mov
movsl
popf
pop
pop
xchg
pop
xchg
in
and
aam
xor
mov
sbb
imul
je
xchg
mov
push
dec
cld
fistl
pop
es
out
mov
jmp
push
test
in
or
hlt
jg
and
stc
or
out
xor
push
push
inc
and
repnz
out
in
xchg
lock
xor
push
outsl
jbe
push
push
fwait
mov
add
insb
and
pop
sub
into
fidivrl
arpl
inc
sbb
xchg
mov
punpcklwd
push
sub
in
insb
jbe
fs
shlb
out
inc
shrb
push
js
xor
sub
cmc
push
jns
jae
pabsd
push
lea
addr16
and
popf
and
jne
int3
cmp
xor
xor
js
or
notb
dec
call
neg
xor
lret
jbe
mov
and
pop
and
or
stos
lahf
test
cmpsb
push
push
mov
call
les
push
cld
dec
and
or
or
js
push
je
test
jne
cmp
sbb
xchg
adc
xchg
test
adc
std
test
mov
fbld
addl
stos
inc
xchg
shl
jmp
pusha
ret
mov
loope
dec
xchg
or
jecxz
inc
stos
aaa
add
notb
fldcw
aas
xor
inc
aad
fdivrp
xchg
adcb
cli
dec
or
ror
and
mov
adc
dec
aaa
mov
into
cwtl
xchg
push
nop
dec
mov
loope
mov
sbb
pop
repz
pop
cmp
mov
xchg
scas
pushf
shll
fwait
mov
mov
xchg
stc
sbb
pop
mov
adc
mov
cli
int
lea
loope
aas
outsb
or
ret
out
xor
sbb
das
xchg
xor
jbe
dec
inc
jmp
das
xor
push
dec
mov
and
cli
xor
xchg
daa
xor
pop
movsb
outsl
icebp
in
add
int3
mov
scas
push
push
dec
inc
push
or
orb
xchg
pop
test
push
mov
and
ds
push
out
xlat
xchg
push
lret
pop
mov
fsubs
mov
stos
sbb
xchg
aam
les
dec
inc
adc
and
sub
cwtl
fwait
test
mov
or
scas
clc
sbb
stos
mov
xchg
pop
pop
cltd
push
lods
xor
pop
or
push
sbb
xchg
cmpsl
movsl
xor
stos
andb
test
push
call
jae
xlat
in
std
mov
test
mov
fs
push
sahf
movsb
xlat
cli
mov
hlt
xlat
lret
icebp
mov
cmp
xor
fdivrl
xor
mov
int
cmp
outsl
filds
push
outsl
imul
popf
ljmp
lahf
jno
lret
add
mov
xor
push
mov
cmpsl
es
dec
movsl
in
push
mov
add
js
mov
mov
int
jb
inc
lret
mov
xchg
leave
dec
aad
mov
push
stos
addr16
cli
jo
enter
jge
divb
jmp
push
dec
rolb
mov
insb
pushf
cwtl
out
inc
out
or
movq
pop
cmp
cmpsb
enter
and
dec
cmp
test
xor
scas
mov
sub
subl
push
jo
jne
ja
cmpsl
mov
jecxz
leave
cmc
and
pop
cmc
js
sbb
fwait
adc
pop
fnsave
shll
call
add
lea
cmp
out
cltd
adc
adc
fs
jne
cmp
enter
mov
push
lret
lea
push
int
jo
in
fcmovne
inc
test
lcall
dec
add
enter
cmp
xor
adc
stc
dec
fstl
cltd
sbb
sub
call
ljmp
popa
xor
ss
sbb
add
jecxz
cmpsl
pop
fwait
xor
rcrl
xor
mov
mov
lods
insl
loope
in
ds
mov
jp
int3
or
repz
sub
add
inc
int3
ret
pushf
addl
imul
adc
aas
adc
mov
pop
inc
es
addr16
cwtl
ss
cmp
lods
je
lret
push
movsb
das
imul
cmp
mov
sahf
pop
lea
xchg
bound
cmp
orb
dec
pop
and
pusha
stos
xchg
xlat
and
mov
cld
fildl
addr16
mov
adc
cmp
cltd
jae
push
aas
mulb
pop
rolb
jno
pushf
subl
lods
cwtl
sbb
mov
mov
icebp
add
push
movsb
mov
push
fwait
neg
test
rcrb
pop
mov
cltd
mov
xlat
pop
pop
enter
add
jp
xor
add
mov
or
cmp
jbe
inc
popf
xchg
and
inc
jo
and
jbe
xchg
addr16
pusha
insl
ja
aad
sub
or
jns
lret
hlt
inc
and
jbe
hlt
jne
xchg
push
mov
xlat
adc
xchg
pop
ret
add
mov
ds
dec
int
xchg
jbe
and
cltd
inc
push
out
and
sbb
inc
popa
je
fdivrl
jge
pop
push
inc
mov
pop
ljmp
add
lds
aad
inc
test
repz
adc
jle
je
xor
in
bswap
sub
stos
jae
das
dec
mov
jne
iret
je
add
aaa
rol
jl
ljmp
pushf
xor
sbb
push
xchg
js
xchg
imul
lods
movsl
sub
div
mov
aam
ret
xor
imull
pop
dec
inc
adc
jle
sarb
xor
aad
dec
push
lret
call
cmc
nop
xchg
mov
push
mov
test
rcll
sbb
jmp
sub
mov
or
imul
push
jmp
sub
cld
jae
add
sarb
std
or
pop
pop
mov
dec
inc
std
hlt
stc
dec
mov
push
inc
ret
lods
test
inc
sbb
and
and
cwtl
in
cmp
dec
ja
jne
pop
adc
xchg
test
sbb
out
cmp
bound
push
dec
add
xchg
call
sub
or
and
loop
adc
aam
add
push
cmp
push
pop
lds
cmp
scas
jne
lods
jne
or
or
or
dec
movsb
xlat
inc
into
mov
insl
pop
stos
or
xlat
cltd
jge
scas
test
out
xor
xchg
cltd
lret
mov
push
mov
pushf
add
dec
xchg
lret
fs
outsl
jg
cltd
mov
cltd
fcomp
mov
xchg
cmp
add
jmp
jae
sbb
or
jecxz
jne
mov
add
inc
xchg
loope
pop
enter
stos
mov
arpl
jb
and
xlat
and
rolb
insb
sbb
mov
in
fsubrs
cmp
jns
cmp
jb
adc
in
test
pop
cmp
xor
jmp
fmuls
adc
imul
inc
lock
outsb
popf
dec
push
fmull
stos
in
aad
ficomps
mov
mov
mov
pop
data16
adc
sbb
jb
inc
pop
fidivs
cltd
xor
out
mov
aad
fmul
push
jnp
stos
sarl
cmpsl
ret
pop
dec
sti
mov
xchg
xchg
cmp
mov
mov
adc
lcall
scas
push
dec
jmp
xchg
sub
repnz
shll
mov
pop
fadd
inc
lods
jge
xchg
push
mov
lea
push
add
cli
fcomps
les
mov
xchg
inc
dec
in
aaa
jb
mov
pop
adc
popa
fldl
imul
iret
mov
mov
into
in
lds
fsubr
xchg
mov
sbb
mov
daa
pop
shll
and
leave
sbb
add
mov
or
dec
arpl
insb
push
movsl
hlt
insl
test
xor
fs
je
adcl
or
cmp
and
mov
fildll
bound
leave
outsl
sub
inc
dec
dec
xor
add
push
add
mov
neg
fcoml
sub
out
sti
jne
inc
adc
decl
sub
mov
inc
mov
aaa
rorl
mov
das
dec
aad
xchg
dec
cmc
mov
dec
dec
inc
xor
inc
and
sahf
xchg
out
jp
inc
imul
aam
pop
and
jo
loopne
push
sbbb
in
adc
rolb
or
enter
aaa
inc
mov
jmp
popa
mov
mov
idiv
out
push
std
mov
je
scas
jae
fildl
pusha
int3
jmp
mov
jb
in
mov
loop
push
fdiv
and
rorb
clc
and
dec
sbb
xchg
push
mov
adc
push
adc
or
repz
js
xchg
sub
mov
xorl
xchg
mov
js
bound
sbb
rclb
ljmp
xlat
jns,pt
lods
pop
pop
dec
aad
data16
enter
mov
mov
pop
stc
int3
fwait
out
xor
arpl
subb
jmp
aad
sub
dec
sbb
cmp
mov
or
cli
call
in
lods
out
repz
subb
lds
inc
dec
mov
loop
pop
or
inc
cmpsl
aad
popf
xchg
mov
lods
push
enter
jg
repnz
xchg
bound
mov
pop
or
ss
adc
iret
dec
adc
sbb
loope
mov
xor
and
push
mov
loop
pop
sub
add
out
sbb
cmc
js
call
faddp
pop
clc
aaa
adc
xchg
adc
dec
in
mov
ret
adc
scas
mov
subl
jb
gs
pop
daa
xchg
loope
push
xchg
fisubrs
aaa
out
jmp
lret
adc
test
aas
pop
push
sarb
mov
subb
jge
push
cmp
pop
dec
sbb
xchg
jb
mov
push
push
adc
addr16
add
push
and
mov
dec
sub
movb
cmp
mov
jmp
rorl
xlat
js
jl
in
movsl
push
adc
shlb
mov
clc
inc
sub
inc
fwait
xchg
push
out
fdivl
mov
movsl
jmp
and
xor
test
ja
xor
jo
xchg
insb
push
jg
push
in
mov
push
push
movsb
inc
lahf
dec
call
ret
test
xor
add
xorl
xchg
cmp
or
inc
cmp
sahf
leave
inc
cs
ljmp
sahf
inc
mov
jge
repz
movb
sub
in
aas
push
out
ret
mov
je
push
fistps
ljmp
ret
loope
mov
add
repz
and
pop
push
inc
mov
sub
orl
sbb
add
insb
pop
mov
dec
je
sub
lods
sahf
add
loope
jmp
movsl
ljmp
inc
stc
into
shll
aad
push
xchg
push
loope
and
xchg
cld
jg
clc
add
repnz
xor
dec
lret
fdivs
inc
scas
lods
adc
cmp
iret
mov
mov
push
mov
push
shrb
inc
inc
imul
adc
fimuls
jo
adc
aaa
sub
add
push
incb
jne
ret
daa
jl
insl
xchg
sbb
sti
cmp
das
aas
sbb
add
xor
es
jo
aas
mov
or
das
xchg
push
lea
loopne
out
sbbb
repz
xor
lcall
jbe
scas
add
jb
xchg
dec
adcb
mov
js
insl
pop
mov
cmp
sbb
mov
mov
pop
mov
das
adc
or
xchg
fsubr
and
push
shr
dec
fsts
shl
fmul
movsl
scas
pop
les
out
test
jmp
fwait
in
aaa
push
xchg
jl
lock
fsts
test
cltd
sbb
ficoml
fs
imul
fbstp
shlb
cmpb
aam
pop
mov
add
cmpb
sbb
sarl
or
test
xchg
push
loope
push
mov
mov
js
fldl
int3
rol
ror
inc
push
and
mov
aam
sbb
jge
lock
xchg
push
int3
cwtl
shr
push
shr
inc
jne
inc
mov
xchg
inc
lret
add
mov
call
lret
into
xchg
sub
test
mov
add
inc
or
scas
inc
mov
in
mov
or
xor
mov
xor
cmc
rorb
out
insb
or
rcll
mov
jnp
fdivl
in
fistps
jg
cmp
mov
push
jp
fists
sub
mov
push
mov
inc
pop
add
xchg
dec
out
in
push
sbb
xchg
or
push
push
mov
pop
mov
and
cltd
rorb
pop
lahf
lcall
shl
cmpsl
idivb
je
mov
clc
fnstenv
sbb
dec
push
mov
jne
mov
lret
mov
push
jl
mov
sub
dec
stc
cmpsb
sbb
loope
orb
lret
out
pushf
addr16
mov
loope
push
fwait
mov
push
lahf
ljmp
sbb
pop
cmpsl
pop
je
rcrb
adc
mov
fistps
hlt
adc
push
call
cmp
scas
xchg
shrb
inc
push
lcall
push
clc
jnp
push
adc
sub
pop
push
inc
pop
test
scas
fsubl
cmpsl
out
std
fdivp
nop
std
leave
add
inc
sbb
outsl
in
adc
and
jns
mov
loop
jle
cmc
iret
jge
ds
pop
rcll
mov
cli
fwait
mov
out
not
mov
add
add
int
arpl
push
or
fld
push
jl
clc
push
mov
or
or
jnp
stos
ljmp
inc
cld
in
mov
xchg
loopne
cs
in
aas
fidivrs
jp
stos
inc
stc
xchg
and
imul
lcall
popf
push
sbb
pusha
scas
mov
cmp
push
inc
pop
repnz
xchg
and
xchg
inc
mov
mov
mov
fsubrl
rcll
fisubs
mov
xchg
mov
inc
mov
test
lcall
jnp
mov
int
repz
xchg
dec
nop
fstpl
sub
adc
jle
insb
das
sbb
insb
lock
test
sub
jmp
sbb
add
jg
add
iret
sbb
int3
mov
pop
pusha
pop
jl
push
loope
pop
loope
or
insl
cld
fisubl
dec
dec
scas
lahf
pop
das
mov
shl
push
xacquire
addl
pushf
into
fwait
jl
push
jmp
sbb
pop
loopne
repnz
sub
jl
gs
ss
lods
lcall
pop
out
sub
push
jb
push
pop
nop/reserved
mov
cmp
adc
mov
int
test
adc
dec
jnp
mov
mov
test
jns
movsl
xor
pop
jge
lcall
xorb
scas
push
inc
jmp
shll
rcl
xchg
adc
fmuls
xor
hlt
fistpl
sub
orb
lods
xor
out
jp
enter
fs
pop
jecxz
push
and
ret
push
pop
jle
pop
test
ficoml
lds
add
mov
mov
xchg
sbbl
fdivl
or
and
dec
inc
aad
or
cmpsb
lahf
adc
push
gs
mov
insl
test
mov
cmp
nop
adc
in
jle
jno
addr16
jl
jbe
out
mov
pop
cmp
push
ret
xchg
dec
dec
aam
xor
cmc
leave
pop
mov
adc
jnp
push
fidivrl
in
mov
or
xchg
dec
fimuls
push
out
push
xchg
rclb
inc
sbb
pop
adcl
mov
mov
xchg
bound
adc
inc
outsb
mov
aas
mov
mov
sub
in
xor
addr16
push
ds
mov
roll
or
and
pop
lahf
add
fsubrl
cld
decb
in
mov
ja
movsb
aas
lcall
loope
xchg
test
and
hlt
lahf
and
clc
loope
push
loope
mov
pop
cmpsl
ficoml
jo
inc
adc
mov
popf
repnz
or
sub
mov
sbb
cwtl
scas
mov
jae
ds
sahf
jnp
in
cmp
lods
cmp
cmpsl
in
into
xchg
icebp
int
dec
mov
push
ret
fcoms
scas
sub
inc
insl
lret
cs
xchg
into
fwait
inc
or
add
sbb
fnstsw
cmp
aaa
outsl
push
sub
das
imul
lret
push
andl
push
mov
aam
push
inc
ja
push
bound
push
inc
test
xchg
movsb
push
xchg
cmp
popf
aad
stos
mov
adc
and
mov
divb
and
sahf
mov
adc
cmp
inc
mov
mov
cmpsb
cld
daa
fcomi
mov
pusha
rcl
icebp
adc
adc
sarb
xchg
sti
pop
and
mov
add
cld
xchg
jae
xchg
scas
stc
mov
aaa
lds
fimull
neg
fcomps
pop
xchg
leave
mov
ror
repz
mov
int
stos
mul
ret
int3
sub
cmp
mov
mov
cmpsb
cmp
pop
fcmovu
mov
jo
addb
push
imul
sub
cli
add
pop
mov
pop
ret
cs
xchg
hlt
bound
ss
add
je
or
jb
imul
cmp
cmpsl
pop
push
mov
cmpsb
xchg
out
jl
loop
in
xchg
pop
add
lds
in
xchg
sub
ja
mov
int3
adcb
frstor
mov
add
xchg
inc
add
push
add
or
cmp
pop
push
inc
cmp
dec
jle
push
sbb
mov
inc
movsb
sahf
into
hlt
jns
out
cmpsb
mov
int3
movsb
shlb
xor
sub
pop
or
jnp
xor
aaa
sti
xorb
push
add
fisttpl
mov
mov
mov
in
ja
or
inc
out
adc
in
cs
roll
leave
mov
or
xchg
or
mov
mulb
sbb
lret
mov
cwtl
bound
inc
pand
loopne
push
xchg
mov
ret
mov
fsubrl
add
and
ljmp
loop
divb
jnp
popf
idiv
inc
mov
push
cltd
push
inc
pusha
cmp
inc
inc
int
pop
cmp
fwait
lds
lea
mov
jp
xchg
outsl
push
test
adc
ret
pop
sbb
or
pop
and
outsb
and
iret
inc
mov
xor
mov
sarb
movsl
push
sub
cwtl
and
cwtl
push
ss
cld
out
and
mov
add
sbb
xchg
cli
bound
mov
aam
add
js
xchg
lret
hlt
icebp
and
repz
je
or
push
imul
or
xchg
in
scas
lcall
push
cmp
mov
int
fdivrs
xchg
cmp
mov
roll
ljmp
and
enter
sub
imul
adc
mov
out
cli
sti
sbb
stos
fnstenv
stos
ret
je
in
js
inc
adc
in
and
lea
shrb
in
js
mov
mov
mov
xor
addl
add
shl
lods
in
enter
out
call
and
adc
mov
addr16
dec
mov
stos
scas
xor
js
jnp
pop
add
jne
lea
movsb
stos
push
add
and
jbe
jecxz
pop
cltd
xchg
rorb
and
pop
scas
sub
dec
iret
inc
in
sbbl
sbbb
enter
aad
add
push
cmpsl
sub
sub
mov
xchg
jle
mov
dec
adc
into
xor
push
mov
dec
cwtl
frstor
ds
nop
xor
fmuls
mov
push
push
mov
test
pop
pop
cwtl
jb
sbb
mov
inc
iret
or
push
cs
add
ret
outsl
and
pcmpeqd
jg
xchg
inc
inc
movsb
xorl
sub
andl
mov
enter
inc
stos
out
mov
je
fisubs
pop
adc
dec
pusha
mov
inc
call
push
shll
sbb
push
lock
or
mov
sbb
rol
push
lret
xchg
loop
push
lea
adc
mov
add
stos
out
pushf
into
out
xor
inc
ds
inc
or
xchg
xchg
push
imul
push
cmp
mov
or
pushf
add
ret
loope
stos
inc
adc
insl
sbb
jns
insl
mov
push
imul
mov
fbld
rdtsc
fdivl
pop
out
mov
cmc
sbb
scas
in
sarl
dec
ljmp
inc
and
mov
pusha
sti
sti
icebp
loope
mov
xor
xchg
pop
xchg
popa
and
clc
fs
xor
adc
mov
stos
bound
cli
test
mov
push
mov
jb
int
add
addr16
mov
sub
mov
dec
fisttps
add
mov
xor
adc
pop
or
push
cmp
jbe
scas
jp
pop
inc
push
xchg
push
cwtl
shlb
cmpsl
sbb
sub
inc
dec
js
and
jge
ss
movsl
and
popa
xchg
xchg
fcoms
aam
aad
pop
in
mov
icebp
js
fs
stos
es
adc
xor
xor
mull
test
sbb
addr16
adc
push
adc
push
pop
mov
daa
cli
and
mov
insb
mov
cmpsb
or
lcall
and
lods
dec
minps
mov
mov
jmp
cmp
add
mov
not
les
push
clc
sbb
insb
cmp
mov
cli
gs
mov
imul
cmovo
ja
repz
pop
bound
test
xor
jmp
pop
and
rolb
push
fmuls
mov
push
sti
hlt
addb
or
xor
cmp
add
bound
out
mov
out
jnp
xorl
dec
ljmp
in
testb
jae
aaa
dec
mov
cmp
test
ds
faddp
test
sbb
dec
xchg
xor
pop
je
mov
ss
mov
ret
jl
push
inc
jnp
mov
gs
jbe
addb
in
mov
mov
inc
cmp
inc
cmpsl
out
add
cwtl
rorl
aas
push
jle
or
cmp
lods
out
push
imul
inc
pushl
jb
mov
mov
das
ljmp
xchg
andl
jle
and
push
mov
std
ret
lds
jp
outsb
sbb
pop
lods
mov
jnp
or
mov
daa
mov
sub
aad
out
rolb
int
or
je
mov
es
push
cmpsb
cwtl
sub
lods
add
out
fs
fstl
fiadds
out
xlat
es
mov
pop
jmp
mov
ja
pushf
pop
dec
popl
filds
mov
repnz
daa
outsb
mov
and
sbbl
mov
cmpsl
cmc
inc
sbb
les
daa
xlat
aam
push
lock
out
or
cmp
inc
adc
xor
lahf
pop
stc
in
std
lret
adc
push
filds
popa
add
jnp
add
dec
decl
add
shr
cmc
xchg
xlat
scas
jno
add
sbb
inc
dec
ret
pop
jl
and
xchg
pusha
push
pop
mov
cmpsb
out
mov
pusha
adc
pusha
sbb
iret
lcall
or
or
iret
add
pop
jne
and
out
mov
jae
jmp
fstpt
mov
inc
or
mov
jb
icebp
imul
out
lea
pop
addr16
addr16
popf
mov
mov
dec
loopne
addb
sti
lods
outsl
in
and
enter
in
cmp
into
xchg
adc
xor
cmp
mov
ret
cmp
fildl
cs
lods
jne
xchg
in
mov
cmp
pusha
xchg
mov
ljmp
inc
std
sub
xor
jmp
shll
cmpsb
xchg
enter
lahf
and
cltd
pop
imul
sbb
hlt
add
leave
jae
or
fbstp
jge
xor
insl
jl
mov
sub
enter
mov
stos
push
jbe
xchg
pop
pop
gs
ficompl
pop
enter
aad
push
push
xchg
pop
mov
arpl
push
sub
or
jecxz
xchg
push
ret
es
dec
mov
lret
mov
cmp
ret
dec
cli
ret
idivb
js
lds
mov
pop
adc
and
in
add
sti
scas
dec
mov
inc
xor
std
inc
sti
and
popa
hlt
rolb
inc
jb
test
shll
mov
hlt
mov
xchg
lds
and
inc
test
sbb
mov
rol
xchg
sbb
push
add
adc
add
adc
push
ljmp
push
das
popf
add
popf
icebp
adc
and
inc
sti
test
xchg
sub
pop
or
data16
imul
sub
pop
orb
out
mov
call
push
in
mov
inc
xchg
jp
mov
jg
mov
pop
dec
cwtl
xor
mov
adcl
jg
cvttps2pi
adc
ds
jl
sub
aad
or
mov
sbb
add
pusha
adc
sub
or
adc
sub
sub
aas
lods
add
divl
ja
ljmp
repnz
pop
aad
icebp
xchg
lret
in
jge
dec
pop
add
pop
ficoml
jne
lods
lret
xchg
test
add
sbb
lods
incl
sub
adc
sbb
nop
fsubl
mov
sbb
lcall
ror
mov
repnz
or
push
int3
pop
test
dec
cli
sti
mov
js
mov
clc
mov
imul
or
out
xor
jno
aaa
pop
xchg
mov
icebp
inc
mov
mov
inc
test
mov
mov
adc
imul
add
fists
dec
adc
in
mov
movsl
and
cmp
idiv
sub
xchg
ds
inc
mov
sub
out
cmp
dec
aas
loope
lcall
rcll
daa
stos
add
std
mov
cmp
sarl
call
inc
mov
mov
sub
or
push
and
xor
es
fninit
push
clc
adc
add
pop
or
adc
dec
adc
imul
ja
outsl
dec
dec
inc
sbb
pushf
enter
lcall
mov
inc
inc
lods
or
sbb
inc
pop
adc
lret
dec
in
int
mov
test
push
jp
scas
cltd
sbb
sub
in
mov
xchg
push
jo
lret
rolb
jmp
icebp
jp
pop
mov
jl
int
mov
nop
ss
loopne
jge
lret
sbb
mov
push
adc
jbe
shrb
jae
pusha
out
dec
push
xchg
jnp
jb
pop
jl
and
hlt
cs
lahf
mov
mov
xchg
xor
pop
std
xchg
pop
jns
shl
es
sar
loop
jae
std
ds
add
xchg
dec
xor
adcl
fiadds
adc
xor
mov
xor
mov
push
xor
icebp
push
lahf
gs
jl
dec
cs
push
ja
mov
and
jno
push
inc
cmc
jge
adc
fcoms
lahf
in
dec
movsb
jg
mov
mov
lods
out
test
cmp
mov
or
ja
movl
inc
in
and
data16
xchg
ds
andb
jmp
hlt
or
insl
pop
pop
incl
aas
xor
rolb
push
jecxz
or
fs
mov
xchg
push
icebp
jb
cli
xor
insl
add
mov
pushf
pop
ret
push
mov
outsl
xchg
jle
mov
dec
jb
lods
aas
pop
outsl
outsb
sub
cmp
xlat
mul
outsb
sbb
mov
sar
fst
sbbb
imul
repnz
icebp
insb
outsl
sub
lea
mov
std
nop
imul
dec
mov
and
rorb
push
ds
cltd
sub
mov
es
jg
jecxz
xchg
jo
lahf
or
push
in
jp
adc
dec
mov
divl
sarl
ret
mov
add
jp
xlat
out
xor
mov
icebp
adc
push
inc
xchg
outsb
or
ja
mov
sub
loop
and
fcmovne
dec
jmp
fcmovb
shrb
idivb
hlt
bound
movsb
mov
xor
addl
sub
push
fsubs
test
push
ret
fsubs
pop
xchg
aaa
fxch
or
jecxz
mov
mov
sub
push
push
andb
mov
out
in
movb
rcr
jae
xor
insb
jne
insb
in
rcrb
and
inc
imul
subl
call
mov
ja
jnp
repnz
mov
push
adc
std
sbb
inc
fstpl
mov
popa
test
push
push
xor
or
das
pop
in
aam
scas
aam
and
cmpsl
mov
imul
sub
mov
mov
lods
divl
testb
pop
icebp
add
aam
jb
mov
dec
inc
fcompl
lahf
dec
jecxz
fwait
push
add
outsl
jb
in
and
or
into
adc
or
add
fdivrs
test
push
test
push
cmc
xchg
cmp
mov
pop
pop
addr16
xchg
jae
mov
mov
dec
pop
pushf
cmc
sub
test
pop
push
xchg
cmp
sub
in
push
stos
inc
stos
pop
adc
and
mov
cmp
cmpsb
pop
aaa
add
pop
jecxz
addl
xchg
lods
mov
rcll
pop
into
enter
cltd
mov
rolb
cmc
insb
sti
imul
lock
dec
test
xor
ja
int3
addb
cmp
inc
enter
sti
push
sbb
sbb
jne
sbb
cmp
in
push
mov
mov
cmp
jmp
lods
mov
ds
xchg
mov
repnz
popa
insb
fnstcw
dec
push
dec
mov
mov
pop
pop
out
xor
clc
add
jp
sub
iret
test
sbb
xor
popf
pusha
daa
insl
cmc
icebp
fldcw
sbb
sub
pop
lea
lea
dec
js
ret
ljmp
sub
mov
sub
mov
ss
hlt
and
fmul
scas
loope
mov
cld
adc
pop
nop
or
dec
lea
hlt
mov
loop
xor
std
mov
xor
scas
push
inc
ja
push
mov
lea
shlb
ret
inc
and
sbb
lcall
insb
cmp
std
jno
push
or
pop
adc
and
int
adc
stos
push
xorl
fidivs
xchg
pop
mov
mov
inc
jae
pop
fwait
pop
aad
mov
dec
test
sub
mov
and
mov
adc
int3
repz
mov
jmp
mov
mov
and
sbb
mov
pop
mov
mov
outsb
mov
mov
mov
push
cmpsb
mov
fwait
ret
imul
pop
and
push
andb
add
out
leave
in
pop
pop
aam
pop
leave
popf
cmpsb
cmp
xor
sub
int3
jnp
ljmp
or
scas
or
and
cmp
dec
push
mov
mov
add
xchg
and
inc
popf
jb
adc
lcall
mov
sub
imul
mov
mov
jp
out
or
mov
add
push
mov
je
imul
pushf
or
mov
lahf
insl
nop
jns
dec
adc
cs
into
fisubl
mov
xchg
lods
out
dec
jle
adc
jp
xchg
js
sbb
pop
xchg
pop
cwtl
push
aaa
cwtl
jl
mov
inc
inc
rcr
sbb
xlat
repnz
ret
cltd
push
js,pt
mov
cmp
xor
clc
adc
sbb
rolb
sub
enter
movsb
jecxz
ret
xor
addr16
add
arpl
sbb
adc
movsb
pop
mov
stos
arpl
int3
aaa
push
int3
pushf
inc
insb
stos
into
ja
cmpsl
mov
push
add
lcall
or
scas
or
subl
mov
mov
and
dec
stos
mov
ret
sub
and
inc
pop
popf
jns
and
inc
inc
cmpsb
mov
adc
mov
fwait
push
inc
cli
andb
xlat
je
imull
in
xchg
aad
aad
mov
clc
mulb
shl
pop
dec
mov
aaa
pop
lock
dec
add
outsl
xchg
inc
dec
adc
inc
jle
out
mov
jo
xchg
mov
js
popa
cmpsl
test
repz
movsl
xor
pop
cld
mov
addb
inc
add
mov
sub
and
in
fwait
cmc
out
pop
or
sahf
add
sub
dec
mov
scas
addr16
ja
and
dec
aas
dec
or
or
testb
addr16
and
scas
and
enter
sarb
mov
lahf
rorl
mov
mov
inc
xor
xchg
cmp
fdivr
in
into
shrl
hlt
leave
sbb
push
mov
push
pop
pop
inc
fcmovnbe
dec
jae
mov
dec
push
push
int
inc
dec
mov
arpl
mov
sbb
hlt
jmp
inc
enter
stos
fdivr
dec
pop
push
lods
cwtl
mov
ret
lods
in
pop
clc
daa
jno
pusha
aas
mov
mov
xlat
out
in
push
xchg
ret
xor
pusha
jg
xchg
cwtl
sbb
sbb
inc
xchg
dec
sbb
bound
lock
jp
mov
cmp
mov
push
pop
leave
mov
and
mov
add
adc
pop
and
push
out
sbb
sti
sub
js
push
jb
pop
pop
addr16
enter
dec
or
aam
fcoms
pop
or
je
cmp
sub
add
push
xor
inc
mov
imul
enter
xchg
adc
mov
add
bound
popf
loop
mov
test
mov
add
adc
push
pop
les
push
sbb
fidivs
cmp
add
out
jge
jb
cltd
push
loopne
push
movsl
cmp
mov
mov
stc
sbb
loopne,pn
cmpsb
aaa
mov
arpl
sbb
das
cwtl
mov
enter
sub
pop
cmp
into
in
repz
xchg
or
mov
es
or
fucom
push
call
mov
test
subl
lods
mov
mov
xor
cwtl
mov
pop
in
je
xchg
mov
aas
xor
mov
xchg
jg
lods
inc
mov
adc
insl
pop
pop
adc
mov
ja
sub
adc
icebp
repnz
jb
pop
jno
mov
bnd
das
insb
and
mov
sbb
bnd
add
mov
inc
pcmpgtd
ret
mov
mov
mov
inc
xor
ja
aad
mov
enter
push
clc
push
push
pusha
repz
sub
pop
frstor
lock
enter
cmp
add
in
cmp
inc
test
xor
orb
jne
test
push
cli
adc
or
into
xchg
jg
out
mov
dec
pop
add
cmp
cmp
sub
ljmp
out
push
push
push
bound
lds
push
lea
xchg
xchg
ss
jo
and
mov
inc
push
push
sti
sub
push
mulb
adc
pusha
js
ficompl
jae
xchg
inc
and
call
lcall
cvtps2pd
pushl
and
mov
adc
outsb
sub
lds
fsubs
cli
mov
jae
out
mov
rorl
jnp
enter
lock
popa
mov
push
inc
repnz
call
fdivrs
xchg
mov
pop
pop
xchg
sub
arpl
and
jge
cmp
push
xchg
test
add
out
push
aam
mov
mov
cs
mov
push
mov
sub
cmc
inc
dec
lods
ret
sbb
enter
push
outsl
and
sbb
jg
mov
sub
inc
xchg
std
in
int
mov
ficoml
mov
cmp
mov
popa
cltd
sahf
mov
ret
arpl
out
mov
popa
xchg
idivb
sbb
lret
pop
negl
dec
aad
cmp
push
cltd
mov
pop
dec
addb
fwait
imul
jg
enter
jb
lds
xchg
shr
mov
dec
lods
fs
adc
add
jno
inc
je
mov
rcll
lds
push
inc
cmp
xchg
jmp
aas
lcall
mov
stc
mov
jbe
add
fwait
rcll
les
xor
loopne
sub
dec
xchg
mov
push
out
js
mul
lcall
push
push
pop
js
movsb
cmp
loope
push
mov
mov
pushf
leave
xchg
mov
sub
scas
sbb
sub
stc
sbb
and
jmp
sbb
sub
lret
lods
jns
lock
insl
fwait
mov
pop
fistl
mov
push
inc
sbb
jbe
repz
sub
fnstsw
int3
clc
inc
mov
leave
loopne
add
xchg
dec
das
es
ljmp
and
int3
jno
les
jl
add
pop
iret
push
mov
push
and
divl
adcb
out
fmuls
add
adc
xor
fwait
cwtl
cli
cltd
je
push
pusha
push
xchg
pop
jp
imul
cwtl
movsb
lods
and
cwtl
adcb
pop
loope
add
orl
xchg
hlt
mul
mov
add
pop
cmp
leave
fsts
pop
lock
xorl
xchg
mov
lods
sbb
add
lcall
cld
imul
pop
fistpl
jne
dec
mov
lahf
adc
jne
add
out
sbb
aas
int3
das
pop
in
pop
dec
pop
dec
cltd
aaa
pop
jno
fidivs
adcl
mov
incl
bswap
loope
xchg
or
inc
aaa
jo
clc
in
mov
cmp
das
data16
fsubr
dec
xor
push
xchg
add
push
aad
popa
in
daa
mov
adc
mov
repnz
xlat
into
aam
lods
jb
js
fwait
ja
sub
xor
push
repz
test
gs
sbb
fsubrp
adc
fs
add
loop
dec
ja
gs
mov
insb
jne
xchg
and
aad
mov
je
mov
imul
mov
jmp
or
and
xor
popf
ja
fldt
cmp
sub
push
add
inc
xchg
sbb
call
mov
data16
xchg
dec
pop
aam
mov
xorb
cmp
sbb
xor
pusha
movsl
cmpsb
adc
mov
and
or
adc
sbb
sbb
push
insb
iret
jb
mov
pop
add
jae
mov
mov
pop
sub
sarb
inc
mov
loop
mov
testb
shrl
mov
loop
dec
jbe
insb
jp
xlat
push
addr16
adc
fadds
lock
or
dec
and
in
out
sahf
divl
mov
sub
dec
add
pop
sub
push
jg
sub
push
cltd
in
jmp
jne
push
and
cs
xor
sub
dec
sub
mov
jg
pop
fisttps
out
cmpsl
daa
push
popf
push
loopne
jnp
sarl
mov
loop,pt
lea
imul
jbe
xor
push
and
lahf
cmp
inc
ffree
dec
nop
rcrl
push
inc
pop
mov
inc
loopne
dec
jecxz
loope
movsl
sub
and
jb
fiaddl
ja
in
shll
movsb
mov
mov
push
sub
or
out
xor
lods
cmp
out
mov
loope
mulb
pop
push
jmp
mov
dec
cld
mov
jns
fiadds
push
rcll
out
add
jge
mov
aas
push
adc
mov
fdivrs
outsb
xchg
repz
xchg
adc
fs
jb
cltd
test
push
pop
pop
sarl
cmpsl
jne
mov
push
push
mov
ljmp
sub
sub
add
ret
jno
push
repz
or
arpl
and
lods
push
mov
pop
sbb
std
dec
dec
cltd
sub
fsubl
and
rorb
dec
dec
in
inc
test
cmpsb
pop
sub
mov
cs
adc
ret
mov
incb
and
or
inc
jo
aam
orb
pop
lret
pusha
fnstcw
testb
je
popf
int3
int
lds
mov
pop
cld
dec
out
pop
xorl
stc
sub
mov
ss
mov
and
test
sub
imul
imul
jg
adc
xchg
jg
loopne
cmp
xor
sti
adc
push
mov
mov
aad
imul
ficoml
iret
lods
inc
outsb
stos
push
push
xchg
popa
popa
clc
sub
xor
pop
xchg
test
cmp
pushf
aas
inc
cmovo
das
jbe
sub
mov
jecxz
lods
jl
daa
hlt
cmp
js
nop
bound
push
lods
or
and
movsl
mov
mov
ret
mov
or
movsl
cmpsl
ret
jo
mov
aas
mov
out
jmp
adc
outsl
or
sub
xchg
add
lods
dec
mov
repz
jl
xor
adc
bound
cmp
mov
push
inc
pushf
adcb
stos
mov
fildl
ja
xchg
jl
loop
jle
push
xacquire
mov
pop
xlat
and
push
in
add
daa
pusha
int
add
mov
pusha
stos
mov
xor
xor
rcr
push
add
icebp
adc
pop
jo
add
push
mov
iret
icebp
lods
rcrl
test
mov
jae
mov
mov
orl
loop
dec
loop
pop
xor
adc
mov
adc
test
dec
imul
js
fwait
push
int
push
cmp
mov
les
sbb
fiaddl
cmp
cmpsb
enter
das
mov
xor
dec
xor
mov
test
pop
dec
js
dec
loop
jp
fisttpll
imul
mov
and
test
ret
xor
shrl
and
aas
std
jns
mov
cwtl
mov
sub
mov
inc
jl
xor
cli
or
repnz
aad
bound
fs
push
movsl
mov
test
fdivrs
aam
sub
repz
mov
xor
cld
dec
ret
cld
and
pop
repz
push
cltd
pop
inc
fs
scas
mov
cltd
icebp
aas
sbb
stos
lret
repz
mov
lret
cmp
xorb
fbld
in
jne
int
mov
out
dec
pusha
push
inc
inc
ret
inc
insl
cmc
arpl
xor
cmp
xchg
sti
xchg
rclb
out
pusha
shrb
std
enter
sbb
add
aaa
rorl
es
pop
scas
bound
or
fwait
xor
push
cmp
jns
push
cli
lahf
dec
call
jl
push
and
mov
jne
pop
inc
add
bound
lock
sbb
sti
cli
jns
addl
xor
cmpsl
jns
dec
jle
lea
jo
mov
in
lods
add
inc
sub
cs
sub
enter
pop
lret
adc
push
stc
push
int3
push
pop
push
push
mov
fcom
jmp
bswap
int
xchg
scas
cld
cmp
out
sub
js
add
shll
pop
xchg
repz
cwtl
jbe
xchg
mov
pop
mov
test
cmp
and
cmovs
xchg
shrl
mov
iret
cld
fwait
cmpsb
cld
mov
pusha
loop
jo
xchg
in
nop
and
jmp
loopne
out
xchg
nop
mov
and
or
mov
mov
aad
xchg
mov
pop
mov
test
das
insl
dec
es
nop
in
pop
xor
es
popf
fcompl
dec
imul
mov
mov
dec
xor
fiadds
mov
add
pop
rcrl
mov
push
and
lret
sub
inc
addr16
push
pop
adc
jns
push
icebp
cmpsb
jno
and
xchg
cmc
add
adc
jg
dec
or
enter
mov
cmpsl
adc
imul
daa
sbb
in
xchg
adc
mov
cld
arpl
outsb
dec
sbb
sbb
xchg
pop
fcomps
std
ret
movsl
in
xchg
bound
or
fistpl
cmc
mov
out
or
lahf
adc
les
jp
adc
movsb
push
push
gs
addr16
fstpt
in
jne
inc
call
add
pushf
mov
enter
jno
hlt
mov
loope
and
cs
js
cmp
enter
lock
call
loope
lret
data16
fdivrl
ss
es
clc
sub
cmpsb
pop
cmc
inc
sbb
dec
js
add
pusha
lea
xor
dec
pushl
scas
pusha
sbb
adc
mov
mov
leave
stc
pushf
hlt
adc
ja
pop
aaa
jno
movsb
call
shr
dec
mov
dec
sbb
movsl
jl
shr
and
xor
imul
push
mov
jmp
lret
mov
xor
sbb
inc
testl
mov
sbb
inc
cmp
pusha
pop
stc
or
call
in
test
cmp
lea
pop
sbb
fiaddl
push
orl
jp
lret
cmp
in
jge
cmp
pop
shrb
mov
fmuls
jno
dec
fwait
ja
aaa
inc
pop
add
pushf
dec
test
sahf
pop
loopne
aaa
xchg
lock
adc
cmp
sub
lret
xchg
cmpsb
xor
in
dec
mov
shll
shl
cwtl
ror
int3
and
imul
sub
pop
mov
jle
push
push
gs
xchg
mov
push
aas
pop
lahf
popl
test
loop
xchg
lret
mov
insl
jno
mov
xchg
in
jnp
cmp
cmpb
clc
mov
mov
add
shrb
inc
fimuls
push
in
loop
mov
jge
loopne
scas
mov
sahf
fidivl
xlat
sub
xor
xchg
pop
dec
outsb
nop
cwtl
in
test
mov
or
or
iret
add
sbb
or
xchg
test
jp
jae
pop
push
jne
and
lock
insb
aad
aad
in
and
std
cmp
xor
push
xor
dec
xchg
pop
repz
ja
pop
push
jp
xor
xchg
sbb
dec
sbb
ja
cmp
mov
push
pop
pop
lods
fst
aas
out
and
sbb
add
add
add
inc
xchg
aaa
insl
and
lret
sub
movsb
or
adc
cltd
xchg
js
or
push
mov
idivb
mov
lock
mov
mov
lods
icebp
ret
cli
movsl
dec
fistpl
cld
pop
sub
dec
mov
mov
add
jecxz
jne
outsb
fimuls
sub
outsb
sbb
iret
sub
sub
sbb
dec
popf
outsl
flds
add
xor
int3
mov
lea
xchg
ljmp
inc
mov
inc
std
out
inc
loop
cli
mov
pop
addr16
rclb
jle
xor
call
mov
mov
cmp
push
adc
mov
in
icebp
rol
mov
leave
inc
xor
jecxz
jp
xor
sub
js
pusha
cmp
fbld
cmp
mov
pushf
inc
pop
lds
inc
xchg
xor
mov
pop
add
aad
mov
adc
xchg
add
dec
cmp
sub
pop
arpl
addb
xor
cmp
enter
jmp
mov
dec
xor
jl
lock
mov
pop
icebp
ret
inc
out
dec
sahf
jg
loopne
sbb
xchg
fildl
fildl
and
pop
iret
inc
add
mov
aaa
sbb
jmp
xchg
mov
dec
pop
stos
mov
jl
pop
xchg
pop
ret
iret
mov
into
pop
fwait
rcrb
cwtl
xchg
jae
add
pop
aam
cli
and
add
idiv
push
shrl
xchg
or
fwait
or
int
pop
frstor
cmp
push
add
cmpb
adc
cmpsb
and
xchg
dec
in
sbb
xor
add
adc
mov
pop
lahf
mov
inc
add
addr16
xorl
ljmp
nop
adc
xchg
std
and
jae
and
into
lahf
cld
sbb
lret
popa
jno
out
movsb
and
inc
or
ror
aaa
and
push
test
nop
dec
jo
sbb
sbb
shlb
das
cltd
je
xchg
test
jg
jo
ficoms
sub
pop
cmp
xchg
mov
pop
movsl
cmp
call
imul
nop
sbb
sbb
jg
mov
iret
lret
sub
cmp
jnp
fcompl
mov
sti
or
xchg
pop
cmp
mov
jge
and
and
adc
aas
jl
ret
outsb
arpl
sbb
not
mov
or
repnz
xor
xor
arpl
rorl
mov
mov
push
inc
pop
xor
aam
pop
movsb
movsl
shr
jg
jno
adc
dec
jp
pop
or
pop
add
lods
test
sahf
dec
jmp
lahf
pop
cld
into
jp
adc
dec
jb
mov
sub
data16
jmp
insb
or
jecxz
mov
xor
insl
jge
lcall
rclb
test
cmp
push
out
bound
or
aas
or
nop
xchg
and
jbe
in
push
adc
loope
scas
push
addr16
int
xchg
roll
cmp
jp
add
repnz
lcall
sub
cmp
push
push
insl
mov
ds
or
in
sbb
xchg
adc
enter
outsl
jmp
repnz
mov
push
inc
fcmovnbe
testb
pop
add
dec
xor
cmpl
xchg
pop
inc
add
and
shl
imul
das
inc
daa
js
mov
je
shlb
mov
out
xor
popa
inc
sbb
and
mov
mov
xor
mov
pop
out
xchg
jmp
das
push
push
call
lods
out
lgdtl
imul
shrb
enter
mov
les
push
sahf
iret
aam
push
test
sahf
lds
repz
ds
or
test
ret
test
xchg
pop
div
mov
subb
jl
aaa
in
gs
jecxz
test
movsb
mov
cmp
mov
js
mov
mov
sti
pop
sbb
movsl
jge
sub
xor
or
xchg
mov
jo
inc
adc
push
enter
out
in
rol
pop
xchg
imul
mov
push
fdivrs
repnz
sahf
test
pop
sti
leave
shlb
sbb
xchg
inc
sbb
inc
sbb
aam
dec
daa
jae
sbb
fidivl
pop
cmpsl
adc
jns
jl
scas
mov
inc
jmp
mov
lret
and
cld
push
adc
lock
test
push
or
test
and
mov
pop
test
jno
mov
xchg
mov
repnz
lea
fs
sbb
popf
xor
fucomi
lcall
or
mov
adc
lret
jmp
imull
xor
icebp
mov
dec
inc
cld
in
fildl
pushw
pop
sarb
loope
test
in
mov
out
gs
int
adc
inc
les
jl
add
std
add
nop
or
data16
xchg
sub
jb
gs
push
xor
leave
fbld
aam
ret
lock
sbb
movsb
dec
mov
divl
add
shr
pop
ja
lret
mov
mov
pop
mov
lret
add
and
xor
sbb
leave
sahf
push
in
in
xor
mov
pop
xor
adc
mov
dec
pop
je,pt
dec
dec
jne
cmp
leave
bnd
cmp
xor
sahf
cmp
cmp
xchg
mov
cmp
aas
rol
jae
or
or
push
dec
sbb
pop
xchg
fsubrs
xchg
loop
pop
ja
dec
xorb
mov
or
dec
adc
cmp
sarl
pop
outsb
fidivrs
dec
sti
imul
add
mov
ret
in
aad
dec
mov
or
aas
adc
cmc
rcrl
ds
push
mov
dec
dec
dec
xchg
inc
sti
inc
add
add
cmp
jmp
sbb
jb
mov
push
pop
xchg
jg
jp
rorl
lea
or
add
je
adc
in
aas
cld
inc
sub
call
outsb
mov
sub
xchg
andl
xchg
xchg
push
xor
ret
sahf
jae
faddl
or
repnz
in
roll
or
rcrl
lahf
ljmp
and
pop
aas
js
mov
add
adc
stc
mov
xor
jo
rorb
push
pop
xchg
loope
mov
push
push
mov
outsb
movsl
cmc
pop
test
dec
repnz
adc
shlb
lds
ljmp
xor
hlt
pop
lret
jecxz
in
push
add
test
shl
add
pushf
in
inc
add
scas
xchg
lret
mov
xor
ret
pop
js
sub
push
sbb
adcb
popa
sbb
xchg
push
testl
cmpsb
lret
inc
jge
cmp
in
stos
push
in
insb
ljmp
mov
enter
insb
jne
ljmp
cwtl
mov
mov
and
mov
jne
les
fcmovb
lds
or
cmpl
sbb
sub
test
add
loop
push
clc
mov
loop
addb
sbb
dec
enter
jmp
nop
sbb
sub
into
sub
std
jbe
xchg
enter
cmp
xchg
test
in
dec
addr16
test
cld
iret
lds
inc
mov
enter
and
sub
mov
repnz
sti
lds
cmp
dec
in
mov
jge
jge
inc
mov
lcall
push
mov
xor
add
mov
lcall
scas
movsb
fs
stos
mov
jmp
mov
fdivrl
fsubrl
inc
xchg
out
jle
dec
shll
sarl
dec
sub
jg
xchg
pop
inc
xchg
xor
dec
test
insl
xor
jp
in
pop
dec
jbe
pop
insb
stos
pop
xor
mov
insl
sbbb
cmp
push
jae
sub
sbb
outsb
push
lds
cld
imul
sub
jmp
pop
adc
push
push
aam
and
lods
mov
lret
cli
cmp
mov
test
std
leave
in
jne
adc
xchg
xlat
inc
mov
out
push
or
mov
jmp
js
in
mov
mov
jecxz
pusha
mov
sub
jecxz
and
es
and
shll
iret
lea
mov
out
mov
cld
int3
inc
mov
push
pop
mov
ss
hlt
arpl
in
in
add
and
push
jb
add
and
xchg
in
mov
pushf
xor
cmp
xor
xor
lret
sub
imul
jne
mov
jg
or
cmp
mov
and
int3
ret
test
insb
into
xchg
push
adc
insb
sub
cmp
movsb
mov
clc
scas
stos
cwtl
jne
in
pop
pop
cmp
inc
cmpb
pop
sbb
loopne
jmp
fstpt
pop
add
pop
stc
cmovnp
sbb
insl
and
movsb
mov
hlt
aam
xorl
iret
mov
or
mov
mov
sar
jae
adc
shrb
test
out
dec
or
or
cmp
dec
mov
fcompl
test
sbb
xchg
je
jnp
push
xlat
adc
or
data16
movsl
dec
repz
fwait
sbb
dec
adc
xlat
inc
leave
jnp
adc
cmpl
mov
pop
dec
aad
adc
xor
popa
divb
arpl
out
enter
bound
xchg
sbb
fldcw
jnp
movsb
push
ret
xchg
lods
iret
pop
dec
in
xchg
test
rolb
mov
in
subb
xchg
dec
pop
xchg
dec
pop
inc
in
negl
aas
xor
cli
or
loopne
push
andl
andl
jbe
mov
ret
movsb
mov
mov
push
and
sbb
and
cmp
bswap
int
into
popa
fisubl
lock
pop
xor
push
adc
xchg
cmp
iret
cmp
divb
dec
test
inc
fnstenv
xchg
cmc
lods
adc
sub
int3
fstpl
aas
inc
aaa
sub
xor
mov
loop
sbb
popf
stos
repz
cmp
aas
fwait
jns
mov
mov
mov
or
iret
out
add
add
mov
imul
jp
mov
sahf
enter
push
push
ret
xchg
push
lds
pop
sbb
and
ljmp
scas
push
ds
push
out
and
mov
push
popa
add
xchg
sub
popa
push
bound
pop
int
arpl
and
das
call
adc
scas
adc
loopne
mov
and
loope
lock
ficoms
push
sbb
aaa
ret
xchg
sbb
out
jecxz
nop
adc
into
or
dec
pop
fchs
mov
jne
jge
add
incl
jg
xchg
pop
xor
nop
cmpsb
mov
scas
out
dec
test
and
in
int3
sti
out
arpl
cli
xor
pop
add
sarl
inc
das
movsb
aaa
lock
cmp
lar
ljmp
ljmp
js
adc
sbb
pop
ja
aad
lock
data16
push
xchg
sub
inc
fcoml
jne
idiv
sub
pop
or
cwtl
mov
cltd
jns
inc
ffree
ljmp
cs
push
push
lea
push
fcompl
mov
hlt
call
cmp
cs
js
loopne
jnp
arpl
pop
xorl
jo
jmp
pop
jns
outsb
enter
and
mov
outsb
sub
faddl
dec
cmp
mov
inc
pop
imul
xchg
nop
add
ljmp
pop
add
ficoms
sbb
rcr
sub
int
push
in
inc
std
cmp
cmp
pop
int
pop
mov
mov
and
xchg
repz
test
movsb
mov
jp
pop
pop
sbb
push
adc
cmp
xchg
xor
jg
pop
add
sbb
add
sbb
mov
popf
pusha
sub
lds
sub
hlt
cmpsb
repz
and
fucomp
push
inc
pop
pop
and
adc
lods
mov
test
push
or
cwtl
push
pop
add
mov
xchg
mov
into
je
sbbb
call
jp
cmpsb
jecxz
cwtl
das
mov
int3
inc
fldt
fsubs
clc
lret
flds
mov
sbb
jo
push
add
addr16
popf
dec
jle
add
cmp
push
jp
inc
cmc
mov
iret
pop
mov
push
test
mov
push
cwtl
jns
aam
mov
outsb
xor
leave
ss
enter
nop
lcall
mov
sbb
mov
testl
adc
or
push
pop
cmc
jge
test
and
outsb
mov
push
test
enter
or
ret
adc
out
pop
push
or
adc
push
cmp
mov
push
jp
cltd
lahf
mov
bound
jecxz
fiadds
mov
xchg
cmp
pop
mov
mulb
inc
dec
push
test
jmp
gs
push
lret
or
and
rorl
in
xor
mov
cmpsb
or
cs
icebp
xchg
popf
mov
cmp
loope
pop
ret
cmp
stos
adc
sbb
add
fcoml
ds
fidivs
das
cmp
pop
dec
std
int
push
in
mov
push
adc
pop
xor
sub
xor
xor
xor
xlat
les
lret
jge
mov
pushf
mov
xchg
and
push
fisubs
jmp
mov
inc
push
sub
jg
lret
xchg
push
jnp
dec
mov
ficoms
in
pusha
sbb
scas
xchg
fiadds
orl
lret
sub
dec
xor
inc
shlb
xor
rcrl
jl
loope
loope
dec
in
pop
cld
jg
cmp
xchg
mov
pop
xor
push
js
fucomi
or
pushf
push
ss
pop
sbb
dec
int
jbe
loop
push
mov
mov
xchg
adc
push
lret
xchg
repnz
fidivs
movsb
enter
mov
mov
mov
sbb
es
jno
jg
aas
mov
mov
rcrb
cmpl
outsb
xor
jg
gs
imul
popf
xlat
sbb
addr16
loope
or
jecxz
mov
pop
mov
and
push
arpl
lea
and
loopne
adc
jl
cmp
rolb
lock
pop
sbbb
call
and
xchg
cltd
sahf
cmp
cmp
outsb
andb
insl
xchg
lahf
nop
jle
into
xor
xchg
inc
adc
jmp
mov
mov
cmp
add
add
pop
sub
mov
loope
or
ljmp
out
fwait
call
jb
adc
mov
push
int
mov
mov
outsb
adc
or
cmp
jecxz
and
sbb
jne
dec
dec
mov
ss
adc
fldcw
jns
das
in
test
add
movsl
pop
nop
lahf
and
push
orl
das
inc
dec
sahf
clc
cltd
or
sbb
sbb
sub
call
mov
inc
mov
xchg
jp
dec
out
jg
cli
call
jp
stos
jns
mov
jne
xor
lods
shrl
mov
push
jbe
add
or
cmp
lods
mov
fsubs
mov
cmpxchg
loope
rclb
stos
lcall
addl
jbe
enter
xorl
jge
push
push
mov
enter
and
fsubs
push
arpl
cltd
mov
mov
push
dec
cld
add
loopne
in
aam
shlb
push
nop
or
mov
cs
insl
add
mov
js
cmpsb
pop
pop
das
mov
or
add
movsb
ret
xchg
repz
xchg
ja
add
lods
mov
xchg
mov
sbb
mov
jge
cmp
adc
loope
addr16
mov
stc
add
gs
pusha
cmp
cwtl
mov
push
jb
push
fs
push
das
movsb
scas
lcall
jmp
sub
jp
or
inc
xlat
cltd
push
out
lock
xchg
fisubrs
sub
jns
push
jnp
sbb
std
std
in
sbb
dec
jnp
loop
sub
pushf
pop
sti
sar
lret
leave
fldl
data16
aad
sub
pusha
inc
das
mov
ljmp
into
adc
notl
pop
loopne
pushf
push
movsb
mov
ficompl
or
xchg
mov
jbe
es
pop
cmpb
addr16
cmc
or
mov
cmp
adc
andl
dec
jecxz
addr16
cmp
lcall
pop
jmp
inc
test
addr16
inc
dec
inc
mov
mov
push
push
add
test
mov
and
in
fwait
cmp
cli
in
in
stos
cmpsb
mov
sti
insl
stos
pop
sbb
or
hlt
inc
std
fisubs
pop
cmp
cmpsb
mov
and
adc
lret
mov
outsl
pop
xor
pop
sub
inc
sub
subl
mov
xor
push
int3
les
or
jo
push
mov
cmc
fldenv
cwtl
jl
mov
cld
into
sahf
xor
add
add
outsl
pusha
icebp
jne
bnd
mov
out
pushl
xor
sahf
mov
stc
fisttpll
lds
add
push
or
fdiv
fisubrs
xor
in
lods
cmp
mov
or
or
cli
sbb
into
repnz
cmp
int
mov
jb
mov
push
pusha
and
mov
inc
repz
dec
cli
orl
mov
lcall
out
lea
ds
mov
adc
mov
pop
shlb
in
pop
cmp
mov
test
mov
sbb
xchg
mov
ret
ljmp
loop
and
xchg
jb
jmp
in
mov
aas
xchg
int
xor
mov
lcall
imul
sub
testb
push
push
push
dec
lods
or
push
pop
ret
and
imul
and
cmp
imul
or
test
mov
dec
mov
push
pusha
push
push
sar
mov
orb
jl
mov
inc
add
or
sub
cwtl
mov
movsl
mov
lea
loop
pop
jecxz
add
aas
lods
iret
xor
xor
test
test
daa
sub
out
mov
arpl
adc
jno
adcb
push
cltd
adc
and
fwait
nop
aaa
fldenv
fcoms
mov
push
inc
pop
pop
xor
mov
icebp
mov
or
dec
in
mov
aam
out
fsubr
sub
jle
adc
mov
pushf
cmc
aam
add
mov
jno
imul
pop
das
mov
mov
lcall
jge
ljmp
ds
and
lret
mov
std
sahf
lahf
jp
int
pop
cmpsb
cli
cmp
sti
mov
lret
fldenv
fstl
xor
mov
popa
shl
pop
mov
pop
push
push
push
movsl
push
xchg
inc
cltd
mov
hlt
int
movsb
inc
mov
push
jmp
into
sub
cmc
push
sbb
push
les
cmp
imul
jmp
xchg
sub
mov
xor
push
cmp
mov
insb
adc
dec
std
or
dec
outsb
out
mov
test
push
adc
adc
pop
cs
ret
shrb
sbb
mov
gs
mov
and
bound
and
push
xor
fstpt
movsl
xlat
ret
xor
and
jo
mov
add
cli
popf
jl
mov
fwait
sbb
inc
pop
jnp
xchg
push
js
clc
dec
add
push
aaa
js
sti
mov
int
pop
sub
xor
or
xor
repz
mov
push
mov
push
fidivrs
cmpsl
pop
xchg
sbb
push
out
mov
adc
std
out
stos
jl
repnz
xchg
inc
push
mov
out
jmp
or
popf
ret
insb
sbb
aam
xchg
iret
jbe
mov
xlat
dec
sub
loope
sbb
mov
sbb
lret
pushf
gs
xchg
fsubp
gs
shrl
fists
jae
inc
insb
fistpll
imul
or
leave
shrb
sbb
xor
dec
das
mov
or
loop
cmp
lods
ds
outsl
xchg
xchg
xchg
ds
pop
pop
pop
xor
leave
xchg
inc
cmp
mov
or
scas
cs
lock
mov
in
push
xor
test
mov
into
inc
jge
xor
stos
dec
mov
mov
pop
xor
push
mov
or
mov
push
dec
xor
pop
pop
fsubp
xor
push
icebp
lret
sbbl
outsb
sbb
lds
test
jl
lcall
repnz
pushf
int
sbb
gs
and
cmpsl
mov
cs
pop
inc
lds
mov
inc
insl
sbb
mov
jb
xor
out
push
xchg
push
xor
insb
add
ja
movsb
jo
aas
enter
shll
test
inc
adc
in
insb
mov
mov
or
out
push
lahf
stos
pushf
mov
adc
xor
inc
lret
clc
sub
push
dec
movsl
dec
push
daa
lods
sbb
mov
xchg
jns
and
jno
adc
outsl
movsb
pop
xor
out
push
sti
test
mov
cs
fstpt
std
mov
fs
stos
rorb
inc
xchg
imul
lret
inc
mov
stc
xor
pop
aam
out
lea
ds
out
je
repnz
and
dec
or
push
aad
test
das
lahf
imul
rorl
xor
loope
lds
jns
frndint
daa
push
add
insl
iret
jno
push
mov
ljmp
xchg
adcl
in
loop
pop
jle
in
pop
push
rorb
mov
popa
or
imul
out
popf
sub
and
int
and
call
push
inc
jecxz
mov
xchg
jb
popf
xchg
in
loopne
push
fsubl
sub
xorb
es
es
mov
cmp
mov
mov
test
mov
lods
mov
int3
adc
and
adc
mov
daa
push
cmc
or
mov
in
mov
xor
jge
xchg
push
xor
push
push
pop
sub
add
notl
aaa
dec
loop
cmp
movsb
or
cmpsb
jp
inc
add
and
out
push
fsubs
or
adc
jle
pop
pushf
xchg
lods
in
push
or
inc
sti
xor
clc
loopne
popf
push
lock
sbb
xchg
inc
pop
out
fimull
loope
aam
fdivrp
test
nop
imul
cmp
sahf
lods
sti
movsl
out
xchg
frstor
sub
rcrl
std
sub
fdivs
out
je
lds
movsl
cmp
sbb
cmpsl
xor
mov
int3
jle
push
ds
adc
mov
testl
mov
jo
cmp
mov
loope
mov
imul
mov
mov
ficompl
ja
adc
add
sbb
mov
pop
push
movsl
fists
mov
stos
adc
xchg
push
shll
add
add
rol
adc
jae
stc
aam
neg
jecxz
mov
lahf
pushl
mov
jle
mov
push
sbb
outsl
push
ds
out
int
sbb
xor
pop
lcall
cs
int3
pop
jecxz
shll
cmp
je
clc
out
ja
inc
insb
sahf
jno
sahf
je
or
repz
mov
xchg
xor
cltd
lret
mov
and
lock
loop
mov
aad
push
rcll
ret
push
pop
popf
test
cltd
pop
sbb
xor
dec
jp
icebp
clc
dec
push
xchg
inc
mov
add
xchg
outsb
sahf
pop
stos
and
sub
add
add
hlt
jle
inc
push
in
int3
or
add
pusha
stos
push
fwait
sbb
enter
imull
outsb
mov
jle
sbb
into
cltd
in
xchg
insb
mov
aad
adc
jge
test
out
stc
xor
js
out
inc
mov
jmp
test
lcall
or
das
fwait
jecxz
sub
sub
and
adc
jo
loop
scas
sub
fwait
cmp
out
mov
sbb
xor
add
adc
cs
leave
in
xlat
inc
into
imul
adc
test
add
push
test
and
sbb
inc
sar
in
inc
mov
fwait
and
fisubl
popa
mov
push
push
add
jae
add
jle
insb
popl
pusha
in
test
jp
and
push
out
fbstp
loopne
addr16
rclb
sub
popf
ja
test
pop
push
cmp
fsubr
jmp
xchg
xor
lods
aaa
dec
out
and
bound
hlt
std
xchg
pop
loop
sbb
movsl
push
cmp
pop
add
repz
inc
jmp
roll
sti
xchg
xchg
push
push
push
add
cmp
mov
xchg
adc
fwait
jg
jb
clc
push
ljmp
and
ret
mov
mov
xor
sub
inc
push
jle
lock
pop
outsb
aaa
inc
or
mov
mov
fists
shll
xchg
ja
jnp
push
cmpsl
fnstenv
int
inc
xor
addr16
add
je
pop
jg
loopne
mov
dec
mov
pop
lret
push
mov
inc
adc
ljmp
and
in
ds
xor
jg
mov
inc
stc
pop
or
fsubs
leave
mov
inc
pop
lret
mov
push
rorb
addr16
fadds
sub
dec
inc
xor
ja
adc
lock
push
push
test
sbb
sbb
les
cli
enter
xor
pop
mov
loop
mov
popf
enter
ret
shlb
cld
push
aad
ret
xorb
out
mov
repnz
sbb
xchg
leave
mov
lods
xor
fs
push
popf
fwait
xchg
insl
movsl
insl
cmp
xchg
jle
insb
sub
movsb
mov
mov
add
jo
add
aad
mov
fcoml
scas
movsl
push
pop
adc
cs
cmp
xor
mov
fcomps
ret
cmpsb
les
movsl
ret
out
and
mov
stos
or
lock
xchg
mov
dec
jge
and
xor
or
fsubrl
add
jns
gs
mov
add
adc
pop
or
dec
loopne
loop
aaa
or
jmp
lods
jb
sbb
push
in
adc
or
mov
or
mov
sbb
mov
pop
mov
fcompl
and
or
movsl
jle
mov
sub
inc
icebp
fimull
es
xchg
ds
jne
mov
mov
cld
push
leave
dec
outsl
insb
mov
ret
filds
outsb
jns
sbb
fwait
loope
jbe
ljmp
push
mov
adc
test
or
rcrb
js
mov
div
cmpsl
testl
sub
push
out
movsb
xor
pop
mov
scas
int
pop
cmpsb
cs
cmpsb
dec
int3
mov
daa
or
out
xchg
inc
sub
and
stc
jo
sbb
jne
inc
pop
js
jne
dec
imull
in
loope
lds
hlt
add
xchg
pop
leave
mov
lcall
push
lods
jp
subb
dec
push
pop
push
dec
mov
push
cmp
fisttpl
addb
xor
repz
mov
lret
popa
add
icebp
add
ret
sub
rcrl
je
call
jge
mov
aad
repnz
and
mov
pop
cmpsb
jo
dec
dec
lcall
xchg
jle
push
insb
mov
or
and
mov
jp
lock
push
ljmp
pop
jbe
mov
cmp
ja
pop
es
and
adc
mov
add
jmp
lret
loope
stos
popf
xor
sarl
inc
jae,pn
jae
jmp
adc
mov
inc
push
popa
adc
mov
mov
popa
insl
ja
or
es
imul
decl
gs
scas
push
mov
sbb
xchg
mov
push
sahf
test
fmulp
scas
and
into
fldcw
jp
lds
leave
mov
test
mov
mov
jmp
ja
xchg
jecxz
xor
cmp
hlt
xlat
cmpb
incl
fnstenv
stos
mov
adc
inc
daa
js
sbb
pop
add
mov
and
out
pusha
into
addl
ss
inc
sub
clc
js
mov
lods
das
rcl
iret
push
cli
or
aaa
xchg
stos
arpl
dec
lds
add
fnstcw
mov
jbe
mov
sub
stc
xor
cli
cs
aas
xchg
push
jmp
jp
and
inc
aam
cmp
mov
iret
and
lcall
mov
ss
push
inc
add
movl
ficoml
loop
xlat
rdtsc
add
sub
push
and
xor
mov
cs
pop
sarl
mov
cs
lods
outsl
sti
jne
jno
add
pop
jnp
aad
cmp
push
ds
add
mov
jno
je
das
inc
jmp
cmp
in
mov
mov
jecxz
addr16
jno
dec
push
jge
add
xchg
mov
add
jno
mov
nopl
inc
xchg
sub
push
out
push
push
out
fistps
push
jp
pushf
mov
fists
mov
aaa
sahf
pop
es
sub
movsb
aaa
inc
sub
rcl
test
lcall
inc
mov
fsts
test
or
pop
cld
inc
verw
lods
dec
popw
push
dec
sbb
mov
mov
mov
pop
and
addr16
sbb
and
xor
aaa
sbb
or
mov
dec
sbb
jg
jle
push
ljmp
ja
mov
pop
and
jns
add
rorb
add
dec
pop
dec
xor
jmp
xchg
cwtl
aaa
popa
dec
jbe
jbe
push
add
dec
dec
add
cmp
add
lea
fmuls
sub
clc
and
fwait
dec
pop
scas
int
add
mov
gs
stos
das
jecxz
jle
jg
and
lahf
or
icebp
mov
nop
pushf
stc
js
outsl
pop
pop
jne
arpl
stos
aam
adc
jmp
mov
pop
enter
mov
int
xchg
dec
add
imul
mov
std
xlat
adc
and
loope
pop
push
mov
jne
dec
mov
mov
movsb
inc
shl
ret
dec
adc
or
add
pop
mov
popf
test
sbb
test
sbb
ret
fwait
les
sbb
jl
push
jae
jb
pop
fsubl
push
xor
icebp
in
xor
xor
xchg
loopne
cmp
nop
mov
jmp
fidivrs
lret
dec
inc
xor
in
or
mov
add
jbe
lds
lret
jbe
xchg
jne
stos
xor
pop
cmp
add
push
adc
insl
adc
mov
cmp
add
fucom
lret
push
xchg
shlb
push
int
jns
mov
xchg
mov
jns
cmp
stos
mov
mov
imul
mov
test
push
arpl
jle
sbb
fistl
fs
xor
push
ret
cmp
inc
les
mov
pushl
mov
popf
mov
data16
or
xchg
sbb
test
cwtl
xor
jne
xchg
outsb
and
in
xchg
xchg
js
das
dec
das
mov
push
jge
sub
jae
cltd
mov
mov
in
dec
insl
fs
sahf
mov
xor
jge
sub
cld
daa
int3
rol
repz
out
mov
sub
ficompl
xor
sub
sub
xor
inc
push
and
int3
jmp
push
cs
xor
pop
popa
mov
mov
adc
loopne
add
dec
insb
call
pop
cmp
cmc
mov
cmp
fisubrl
or
dec
xor
dec
clc
cmpsl
mov
pushf
dec
call
and
test
lret
xor
mov
inc
mov
adc
hlt
ret
lods
sbb
pop
xchg
mov
inc
fstps
iret
pop
xlat
or
mov
jb
out
shl
aaa
fwait
shlb
movsl
dec
fstps
fs
insl
cs
mov
jne
jle
fs
adc
pop
dec
fs
xor
adc
icebp
jp
add
jno
add
add
xor
fadds
pushf
std
adc
mov
das
xchg
cmp
jmp
jo
inc
outsb
pop
outsb
or
cmp
in
add
lock
jbe
mov
and
mov
push
or
add
lock
imulb
insb
mov
nop
xor
outsl
cld
pop
repz
pop
lods
jnp
mov
aad
test
sbb
dec
sub
dec
jae
lock
xchg
sbb
or
pop
scas
fs
ds
mov
mov
std
mov
push
pushf
int3
push
aaa
arpl
aad
inc
dec
add
mov
lock
movups
arpl
loopne
mov
repz
cmpsb
popa
insl
and
fbld
enter
xchg
out
popa
adc
cld
fwait
xchg
lds
in
inc
addr16
jno
mov
lock
mov
inc
add
jnp
leave
jg
sbb
test
test
add
rcll
add
aam
iret
gs
lock
mov
lret
pop
inc
sub
enter
cltd
pusha
cmp
out
aam
addb
inc
pop
mov
push
inc
dec
test
je
sub
cwtl
xchg
cld
negl
pushf
cmc
or
mov
rorl
cltd
or
and
mov
jl
jne
dec
stos
std
inc
or
outsb
dec
pop
push
xchg
pop
lret
jmp
lods
cmp
sub
xor
adc
pop
div
jge
mov
pushf
jg
push
mov
xchg
or
repz
fidivl
xlat
fxch
data16
sbbb
pop
jge
dec
iret
stos
in
inc
insb
shrb
mov
mov
cmpb
push
or
aas
and
mov
xlat
loopne
push
scas
cld
pop
loopne
push
out
loopne
aad
and
stc
push
or
out
ret
popa
in
jb
jno
dec
mov
mov
inc
xor
adc
clc
test
movsl
jl
sti
inc
je
sub
push
push
leave
or
mov
sbb
in
mov
in
pop
pop
das
loopne
imul
adc
pop
xor
xchg
or
sub
es
xlat
or
jl
jmp
bswap
cmp
push
and
and
xchg
jmp
in
jne
mov
jb
jg
stc
movsl
pop
lods
inc
and
call
ds
mov
mov
stos
cmp
cmp
lods
icebp
popa
mov
pop
jae
test
inc
testl
rorb
call
cltd
cmp
insb
call
shr
mov
jmp
push
mov
adc
push
sarl
mov
push
scas
xor
lret
mov
loop
mov
pop
sbb
testl
cltd
jmp
cli
ss
jo
cld
pop
jbe
pop
xchg
add
add
jae
out
lds
add
es
inc
sarb
sub
adc
xor
rol
push
xor
mov
repz
dec
dec
pop
and
inc
mov
addl
pusha
es
or
cmp
mov
jg
sub
dec
mov
fsubl
jno
add
inc
call
adc
mov
outsl
push
and
not
shl
or
jle
jno
in
adc
sahf
outsb
mov
rorb
xor
js
lcall
and
jge
xlat
mov
xor
hlt
subb
pop
js
daa
scas
sub
clc
cmpsl
movsl
sbb
imul
outsl
pop
imul
outsl
enter
pop
mov
test
jg
jmp
shrl
inc
push
pushf
inc
movsl
test
leave
std
inc
mov
pop
rcll
je
ss
hlt
add
ljmp
mov
mov
sbb
adc
lods
sbb
xchg
push
fstl
gs
jmp
femms
andb
cmp
xor
mov
daa
jge
and
inc
adc
les
iret
cmp
fnstenv
push
jmp
aam
mov
cmpsb
cmc
adc
push
hlt
sbb
xchg
mov
cs
ret
fdivrs
ja
and
out
lds
je
push
scas
cmp
cmp
pop
mov
adc
pop
pop
add
notl
pop
or
xor
mov
fisubl
push
jne
push
aas
and
fsubl
add
sub
out
jp
xchg
jb
and
fmul
fistps
sbb
incb
dec
cwtl
fbld
imul
adc
sub
cmp
add
imul
lcall
xor
divl
sbb
test
and
inc
sub
cmp
cmp
adc
add
roll
sub
cmp
rcrb
test
xchg
aam
pop
lds
mov
int3
push
fidivrs
add
adc
stos
mov
push
push
data16
cmp
lock
push
or
mov
mov
into
gs
test
into
lret
movsb
add
dec
mov
push
mov
mulb
jo
xchg
push
pop
add
rol
adc
sub
add
and
jns
call
pushl
test
ljmp
add
xchg
test
inc
test
mov
xor
punpckhbw
xchg
push
lahf
cld
mov
mov
xor
sub
cltd
mov
out
jge
outsb
push
ds
ds
test
xchg
push
sahf
loope
dec
push
loop
fsubs
sub
dec
sbb
aad
xorl
dec
or
cmpsl
dec
fimull
sub
sub
ret
push
mov
sbb
jl
inc
push
push
push
push
outsb
sub
inc
cltd
lret
and
pop
jl
int3
fdivs
push
sbb
add
sbb
stos
jno
inc
mov
imul
lcall
lret
and
sti
mov
hlt
mov
sub
int
adc
jno
sbb
mov
cwtl
mov
jp
add
push
out
lds
pop
inc
pop
shlb
pop
mov
pop
adc
pushf
clc
mov
je
and
push
mov
mov
icebp
adc
inc
xchg
sub
int
arpl
xchg
outsl
cmpsl
sub
sub
mov
gs
popf
and
fwait
push
xor
jbe
js
xchg
jne
int
into
mov
xchg
jp
outsb
loop
mov
cmp
ret
or
int3
xor
push
cmpsb
pop
adc
rorl
inc
in
jne
pop
hlt
lds
dec
aas
sub
out
mov
pop
test
push
aad
fiadds
decl
das
enter
adc
mov
push
notl
and
bnd
pop
lods
jbe
adc
jne
adc
ret
pusha
shrb
inc
cld
movsl
mov
xchg
in
jg
mov
rorl
sbb
loop
cmpsl
pushf
cmp
out
xchg
push
jl
mov
add
add
pop
fistpl
add
xchg
jbe
xlat
mov
scas
adc
xlat
lahf
sub
adc
xchg
clc
out
fs
inc
jnp
add
push
mov
enter
mov
cmp
jnp
mov
sti
je
fcmovnbe
xor
lcall
inc
mov
dec
fcomps
sub
mov
push
push
dec
int3
fdivl
outsl
out
xchg
xchg
subl
xchg
popa
mov
mov
sti
fldenv
out
iret
clc
scas
and
cmpsb
rcl
js
notb
iret
mov
xchg
push
mov
and
fwait
xchg
ror
out
shrb
jge
mov
ficompl
cmp
daa
xorl
push
cwtl
adcl
pop
imul
jp
push
push
or
cmpsl
xchg
sub
push
pushf
repnz
and
pusha
in
fcomip
out
pop
fcom
lods
mov
shlb
mov
cmpl
xchg
lea
push
mov
cmpsb
out
sahf
cmp
lret
lret
aad
or
xchg
or
stos
pushf
lds
push
ja
ds
loope
add
mov
pop
sbb
popf
ret
mov
jo
lcall
fisttpl
push
push
xor
data16
mov
mov
stos
adc
sbb
outsl
lods
jb
sub
mov
shlb
jne
sub
in
imul
out
dec
adc
inc
push
lods
leave
ds
mov
and
mov
adc
mov
fcmovu
pop
dec
ret
cs
jne
xchg
enter
aas
push
cmp
mov
aas
add
stos
insb
lock
mov
sub
dec
rorb
iret
add
lods
mov
repnz
mov
jmp
and
cmpsl
insl
cmp
inc
addr16
movsl
mov
sub
hlt
pushl
popf
sbb
inc
pop
xor
xchg
arpl
add
adc
outsb
add
mov
inc
mov
mov
pusha
xchg
cmc
cmp
mov
cmc
jg
int3
mov
or
push
in
fmul
cmpsb
dec
cmp
sub
nop
mov
mov
andl
imul
loop
push
test
ficoms
mov
push
adc
out
xchg
inc
das
jle
leave
jns
cmc
cmp
mov
cwtl
fimuls
int3
rol
xchg
jecxz
add
scas
cltd
shll
adc
mov
inc
in
lea
push
insl
gs
mov
sbb
enter
or
in
sti
adc
dec
cmpsl
adc
loop
insb
and
mov
add
xchg
aad
jno
popf
mov
cmpsl
idivl
add
cmpsb
xchg
push
lret
es
ja
jl
ret
test
xchg
jne
add
jecxz
mov
arpl
mov
lret
dec
jno
add
ret
mov
ficompl
inc
cltd
lcall
movsb
repnz
push
jne
adc
and
xor
roll
lods
sbb
sub
and
fdecstp
push
rcr
mov
adc
dec
and
cwtl
bound
mov
fs
and
test
jecxz
lock
mov
cmp
stc
ss
aaa
fistpll
push
popf
dec
daa
fs
fdivrs
cmp
notl
lret
out
push
aam
iret
mov
pop
xchg
je
mov
cwtl
cmpb
fwait
movsl
push
pop
testl
sbb
sbb
pop
jle
lock
clc
mov
cmpsb
xor
sub
jge
cmp
int
adc
rol
stc
shlb
xor
adc
test
movsb
fiadds
pop
pop
pushf
mov
stos
pop
and
outsl
cmc
repz
cltd
xorb
pop
xor
clc
dec
fisttpll
scas
inc
pop
ja
imul
scas
clc
ja
sub
scas
sbb
dec
mov
insb
sbb
shlb
lock
jmp
pop
aas
repnz
push
cltd
pop
mov
std
sub
sub
mov
mov
ja
adc
in
es
shrl
call
mov
bnd
jbe
mov
xor
fwait
cmp
add
fwait
shrb
xchg
push
adc
cmpsl
sarl
arpl
dec
adc
add
sbbb
xchg
sub
test
cmp
xchg
cwtl
out
stc
jg
pop
stos
nop
stos
shr
add
xor
repnz
jo
faddp
dec
lea
mov
mov
or
mov
mov
adc
sub
sub
testl
cmp
jb
test
mov
add
mov
aas
jbe
cli
push
or
lret
adc
inc
leave
cmpsb
push
sahf
dec
inc
mov
stos
les
xchg
mov
inc
adcb
mov
xchg
faddl
and
xor
push
inc
push
sub
mov
or
test
xorl
add
or
xor
jbe
test
sbb
pusha
dec
mov
scas
or
leave
insb
pop
in
orl
cmp
lods
cmpsb
ljmp
aaa
inc
inc
insl
icebp
jmp
pop
mov
test
jnp
testb
push
xor
bound
ljmp
pop
repz
inc
ficomps
mov
stos
adc
mov
mov
xchg
cmpsb
mov
push
mov
jl
movsl
push
pushf
loope
aam
int
adc
pop
dec
push
mov
test
ds
inc
sbb
dec
jns
pusha
popa
jge
jl
mov
sysenter
loope
mov
add
jl
or
stos
lahf
mov
mov
gs
inc
fmuls
test
movsl
call
xor
std
sub
imull
inc
iret
add
mov
adc
mov
scas
out
mov
sbb
cmp
pop
stos
sub
xchg
mov
xor
sub
mov
leave
ds
dec
arpl
je
scas
dec
pop
xor
out
mov
addb
int3
subl
mov
pop
xor
in
and
notb
and
popf
mov
imul
sahf
dec
push
or
sbb
mov
int
dec
sub
jl
cmp
push
jno
clc
call
and
mov
iret
test
sahf
cltd
add
xchg
xor
cmp
xchg
pop
and
jge
repnz
add
and
scas
push
inc
test
or
inc
pusha
hlt
pop
scas
dec
lods
jo,pt
mov
fs
jno
cld
test
call
jecxz
fstpt
and
int3
xchg
mov
mov
add
test
movsl
and
je
lret
add
dec
outsl
ficompl
psrad
imul
cmp
enter
sub
xor
out
gs
jae
jns
daa
jmp
mov
add
stc
inc
or
jne
cmp
mov
stc
data16
rorl
jo
daa
repz
and
inc
sbb
insl
lock
cmp
jne
bound
cmp
or
adc
lcall
mov
enter
xchg
push
imul
fwait
or
and
pushf
push
push
inc
sub
shrl
push
mov
pop
in
mov
cmp
mov
mov
loope
ret
inc
xchg
test
int
fisubrs
push
out
ret
cmpsb
jp
push
clc
or
mov
jg
cmpsb
or
jg
pusha
push
xor
push
xchg
adc
pop
xor
sbb
mov
iret
and
add
popa
fwait
mov
out
adc
fstpt
in
idivl
pop
inc
mov
movsl
xchg
jge
mov
or
push
push
cld
push
jmp
addr16
popf
mov
popf
pushl
notl
mov
pop
cs
inc
and
and
jp
pushf
test
add
leave
mov
nop
cmp
xor
stc
adc
mov
aam
ret
movq
mov
push
adc
sbbb
jl
xchg
ss
mov
dec
mov
stos
pop
insb
rorb
mov
dec
pop
testl
cs
jne
cmpl
stos
mov
popa
fs
out
out
clc
ljmp
sub
into
loopne
cs
cld
popa
xor
mov
push
xlat
and
jnp
dec
jecxz
mul
andl
repz
sub
scas
push
repnz
inc
and
pop
les
mov
xchg
leave
gs
int
mov
jns
jg
shll
add
int3
ss
je
outsb
sbb
in
sub
lret
xor
ljmp
xchg
inc
push
fcomi
icebp
incb
std
dec
sub
adc
adc
shrb
fcomps
or
xchg
inc
lret
bound
popa
loope
aam
movsb
pop
cmc
sbbb
mov
push
and
scas
repz
add
ret
ret
pop
mov
sti
fcom
xlat
pop
push
lret
scas
stos
mov
jae
iret
test
js
ja,pn
xor
loop
xchg
aas
std
lock
sub
cwtl
insl
out
into
js
repz
das
lahf
xor
cmc
adc
dec
fcmove
insl
xchg
dec
cmp
or
aad
hlt
cmp
int3
test
rorl
fistpll
pop
fs
jne
lret
pop
jp
xor
fbstp
inc
ss
mov
sarb
ret
jo
sub
pop
adc
jp
jae
push
pop
cmpsl
out
add
lods
mov
gs
adc
jge
jbe
pusha
roll
roll
outsl
repnz
push
xchg
push
jb
andl
pop
dec
insl
lea
cmp
cwtl
push
cmp
nop
es
bound
in
xchg
decb
cmp
xlat
cld
push
ret
push
stc
pusha
dec
into
adc
or
sub
mov
or
inc
push
xchg
cmp
icebp
repnz
add
xchg
ss
add
xlat
std
mov
and
sbb
loop
push
icebp
jae
dec
pop
jle
dec
lods
lds
mov
mov
or
pop
dec
in
add
jg
dec
and
call
lea
lock
mov
lcall
mov
mov
push
xor
sbb
mov
pop
sub
adc
dec
stc
sahf
lock
repz
insb
cli
js
lods
leave
sbb
gs
scas
movsb
xor
xor
jo
jp
dec
add
push
mov
call
and
mov
jno
dec
int3
das
nop
add
mov
jecxz
pop
xor
pop
js
fdivrs
jg
push
data16
imul
and
mov
sub
sarb
shl
cltd
adc
pop
je
lea
inc
shrb
pop
fwait
pop
xchg
xchg
cltd
lahf
js
stos
jnp
sub
mov
or
cmpsl
fstps
iret
je
push
pop
call
adc
cs
sarb
adc
push
pop
push
jo
xchg
xchg
dec
nop
fistpll
jne
pop
push
adc
aam
sub
js
mov
xor
add
mov
daa
shrl
xchg
cmp
add
in
popf
inc
cmp
loop
push
cmp
insl
repnz
cmpsb
icebp
stos
jne
movsb
pop
popa
inc
lahf
test
dec
leave
lret
push
cltd
push
xchg
or
decl
icebp
out
imulb
jp
mov
out
inc
ss
ss
scas
vpshufd
imul
add
imul
adc
lret
and
add
stos
jle
into
mov
test
fwait
add
stos
sbb
sub
mov
push
je
pop
les
gs
jmp
orl
xor
xor
mov
test
push
std
adc
std
xchg
jb
push
cltd
clc
mov
mov
addl
jl
lcall
adc
iret
xor
mov
stos
ljmp
loope
fwait
data16
mov
cltd
xchg
ja
mov
mov
or
int3
in
out
js
inc
mov
sub
push
arpl
cmp
stos
jns
add
and
jge
jne
dec
lret
fdivrs
or
pushf
lea
xchg
mov
movsb
xor
mov
mov
popf
cmp
in
cmp
push
mov
int
cs
jg
jmp
xor
xlat
movsb
xlat
mov
repnz
jo
xchg
mov
cmpl
xor
cltd
nop
sti
cmp
jnp
in
dec
xchg
mov
dec
xchg
xor
lret
outsl
and
das
jne
ret
inc
repnz
cmc
xor
and
cmp
adcl
lods
inc
sub
jge
imul
xchg
fs
fdivs
in
lret
stos
stos
out
das
mov
mov
cmp
addr16
andl
inc
rorl
testl
xor
cmpsb
fnstenv
fs
mov
mov
sub
sbbl
jecxz
int
lahf
pushf
mov
sbb
dec
stos
add
rcll
ljmp
fs
pop
decb
xchg
mov
popa
xchg
movsl
dec
pop
push
xor
shll
stos
fcoms
idivb
stos
push
repnz
sti
cmpsl
sub
or
mov
test
dec
add
gs
jmp
loope
fdivrs
lds
adc
lcall
add
clc
into
aas
lea
fcmovnbe
aad
ds
cltd
shl
out
jp
dec
xor
hlt
mov
cmp
nop
push
ret
push
ret
rcll
mov
rolb
add
jmp
fs
mov
out
mov
or
repz
lret
orb
xor
bound
jg
or
jno
movsl
jmp
dec
xor
mov
orb
push
pop
push
mov
ret
mov
stos
jb
out
ss
in
jmp
inc
test
int3
pusha
xlat
repz
lahf
pop
push
outsl
aaa
lds
xchg
dec
pop
scas
cltd
inc
inc
into
jecxz
loope
pop
sbb
je
lods
rcrl
test
mov
fsubs
in
insl
push
int3
add
and
jle
dec
and
xor
or
push
inc
push
ljmp
jge
scas
scas
bound
cli
inc
xor
mov
and
notb
and
push
fldcw
inc
inc
xchg
xchg
scas
inc
adc
cwtl
mov
xor
inc
mov
dec
je
icebp
xchg
push
and
pusha
cmc
pusha
jg
decb
pop
xchg
jno
xchg
dec
cwtl
inc
repnz
bound
out
popf
add
push
or
lret
sbb
negb
aas
in
mov
pop
hlt
ds
xchg
mov
xchg
sub
sub
add
push
hlt
arpl
bound
ja
inc
loopne
sbb
lock
imul
sub
sbb
lret
push
call
jbe
add
inc
push
jb
push
call
jb
xchg
pop
mov
call
jl
add
bound
out
mov
xor
cld
or
push
shr
and
or
ja
aad
xchg
rcrb
scas
inc
shrl
sub
dec
ficompl
sbb
pusha
stos
jecxz
daa
mov
stos
hlt
xlat
mov
cmpl
jl
or
or
pop
shll
add
mov
jl
adc
xor
jg
lds
bound
cs
ljmp
mov
cld
xchg
rep
icebp
out
iret
repz
mov
jno
and
sub
cli
inc
scas
fwait
stos
cmpsb
fidivs
scas
mov
in
lock
mov
xchg
jno
stc
and
add
sub
divb
cmp
ficoms
pop
cmpsl
add
cld
sub
mov
dec
jnp
xor
in
push
push
lds
test
mov
out
and
fucomi
xlat
stc
adc
inc
fdivr
aad
ljmp
sahf
popa
icebp
cmp
cmp
jne
into
arpl
call
sbb
pop
ds
cwtl
mov
loopne
aad
jo
jno
sub
insl
mulb
dec
or
sub
mov
dec
bound
test
dec
lods
push
movsb
orb
cmp
fists
test
or
pop
pushf
xchg
cmpsb
xchg
stos
and
enter
add
jge
scas
lret
aaa
xchg
shr
xchg
out
add
fsubs
test
xchg
das
sub
xchg
mov
leave
cmp
mull
push
in
aaa
lds
aad
lahf
mov
sbb
and
shr
nop
inc
xchg
sbb
xchg
mov
lcall
out
data16
sub
xor
lret
bound
sti
loopne
adc
lds
enter
or
xchg
push
imul
enter
mov
adcb
sbb
ja
pop
sub
cld
cld
cmpsb
mov
mov
or
sbb
testb
mov
push
xor
sbb
adc
loope
mov
pusha
sub
sbb
pop
dec
pop
pop
test
das
popa
adc
out
adc
mov
pop
mov
or
jg
mov
jae
push
lods
pop
inc
and
imul
xor
adc
or
and
dec
lods
dec
jno
push
mov
sub
or
lods
xchg
sbb
mov
push
push
pop
mov
aas
in
mov
push
aam
cmp
insb
fsubl
fs
fimuls
cmp
add
cmp
mov
lods
cwtl
lret
sub
jle
add
bound
bnd
or
int
int3
sbbl
mov
lret
lcall
push
cmp
bound
mov
stc
enter
fs
shl
push
sbb
test
sub
pop
xor
mov
dec
outsl
inc
fcmovnb
add
xor
leave
xchg
adc
shlb
aas
cmp
loop
loop
jp
dec
imul
mov
mov
xchg
mov
loop
out
nop
dec
sub
xchg
push
push
repnz
mov
loop
fldl
jbe
add
jno
pop
shr
cmp
mov
fidivs
pop
dec
std
mov
test
pushf
mov
pusha
fs
clc
test
add
outsb
pop
xchg
add
imul
insl
enter
mov
jb
push
add
sbb
addr16
sub
pushf
dec
cli
test
dec
lret
push
sbb
clc
add
jnp
bound
inc
inc
xlat
sbb
xor
insb
insb
shll
lcall
xor
testb
sub
jnp
stc
jle
repz
add
inc
nop
xor
adc
imul
dec
inc
aam
fcomp
insl
mov
pop
mov
jg
fsubrp
int
add
xchg
mov
jp
jno
inc
pushf
in
call
ljmp
rol
or
fidivrs
cmp
aas
or
dec
int
shlb
jmp
lock
sbb
xchg
leave
clc
lock
add
xorb
cmp
push
out
and
jns
sbb
push
data16
aas
mov
outsl
nop
std
jge
lahf
jno
data16
push
inc
adc
sub
loope
outsb
leave
mov
test
testb
enter
cltd
pop
ljmp
dec
inc
pop
into
mov
stc
das
je
cld
inc
pop
pop
cmp
jbe
push
daa
mov
mov
ja
mov
sbb
std
mov
push
dec
sti
mov
cmp
test
shll
push
popf
jo
xchg
dec
inc
pop
cmp
loope
xor
push
mov
imul
xor
sbb
jp
pop
test
inc
shlb
cmp
push
adc
jno
sar
addr16
push
sub
push
sub
fidivs
cmp
sub
repnz
xor
adc
addr16
jecxz
mov
jns
mov
insb
mov
sbb
sub
lret
dec
mov
imul
push
jmp
cli
or
repz
imul
lahf
sub
int
push
jmp
fisubl
mov
mov
aad
lahf
sbb
xchg
cmpsb
test
jnp
mov
jmp
les
cmpb
jno
popf
mov
pop
pop
adc
idivb
push
push
pop
or
inc
jp
popa
scas
push
icebp
lahf
rorb
add
adcl
mov
mov
fnstsw
mov
sbb
jae
pop
mov
stos
jp
sbb
adc
jle
pop
notl
scas
test
ds
mov
push
icebp
inc
add
ljmp
pop
arpl
or
das
sbb
insl
ret
xchg
lods
inc
push
outsb
jnp
outsb
xor
test
push
mov
sub
int
push
add
loop
stos
dec
lock
pop
pop
pop
daa
adc
and
sbb
or
inc
rolb
cmp
stc
ret
pop
aad
lea
pop
sbb
or
addb
push
call
sbb
nop
cmp
jb
sbb
aam
mov
sub
idivl
jmp
sub
out
je
inc
arpl
mov
jae
test
testb
pop
lock
xor
mov
ror
sbb
idivl
je
test
nop
cmp
subl
sbb
bound
mov
lret
mov
sbb
push
push
int
sub
in
loopne
sub
xlat
jae
daa
ds
je
xor
sbb
pop
sub
test
and
mov
shlb
in
pop
cmp
xchg
mov
popf
and
inc
sbbl
daa
or
adc
in
sar
xchg
sub
decb
out
sub
aaa
fiaddl
int3
dec
lods
sub
mov
push
nop
scas
test
call
and
aaa
pop
or
imul
push
shlb
imul
clc
shrb
pushf
push
mov
jl
mov
ret
lret
fadds
inc
cmp
push
push
dec
popa
les
inc
jns
mov
lret
ror
ret
push
dec
inc
mov
and
xor
pop
aam
inc
cmpxchg
cmp
dec
and
sbb
xor
xor
or
inc
ljmp
inc
lret
jbe
or
add
leave
add
cli
and
incl
test
hlt
push
in
jo
pop
test
sub
push
sbb
push
test
jae
lcall
packsswb
mov
push
jl
sbb
je
stos
dec
loopne
and
mov
lret
xor
in
jno
rcl
jb
dec
data16
sbb
lret
icebp
dec
mov
mov
outsl
xchg
cltd
sbb
or
push
imul
add
xor
sbb
adc
push
sbb
fbstp
inc
xchg
and
test
or
xorl
loop
pop
cmp
mov
sub
xchg
push
lock
out
imul
stos
xchg
jge
xorb
dec
rclb
sbb
xor
push
stos
fldl
ds
push
jge
cmpsb
in
imul
rcll
push
movsl
xchg
popf
adc
jmp
cmp
loope
movsl
mov
jmp
out
aas
and
rolb
push
jp
es
icebp
mov
fistl
mov
adc
and
adc
stc
dec
push
mov
push
adc
mov
in
add
jmp
mov
pushf
inc
xchg
and
int
pop
mov
push
popa
xor
inc
test
loope
sarb
pop
jb
pop
mov
scas
xchg
leave
dec
aaa
mov
gs
mov
flds
push
jle
sbb
aaa
pop
test
add
iret
pop
jns
imul
inc
test
jnp
xor
push
mov
xor
mov
pop
pushf
pop
mov
pop
jmp
dec
mov
mov
mov
push
and
stos
mov
jmp
pop
add
inc
dec
inc
mov
push
mov
clc
jg
pop
add
or
test
shrb
add
mov
xlat
xor
cltd
and
das
cmp
cmc
and
roll
or
xchg
fistps
add
or
or
dec
loopne
cmpsb
jne
repz
adc
mov
loope
hlt
push
mov
mov
jnp
aam
cmc
mov
add
jbe
sub
pop
adc
push
mov
sub
xchg
movsb
jo
mov
orl
pop
lock
sbb
mov
mov
scas
mov
mov
shll
movsb
je
inc
mov
pop
and
mov
divl
aam
and
bound
int3
xchg
in
aad
pop
repnz
pop
loope
or
sub
ret
cltd
or
adc
out
push
loope
mul
in
push
lcall
and
add
arpl
pushf
es
fidivs
lock
fwait
mov
lahf
adcb
push
and
into
mov
xorl
add
jg
cmp
mov
iret
cld
insb
clc
loop
mov
sti
fsubl
iret
lcall
stc
mov
ss
fbld
ret
pop
call
pop
jb
mov
fistl
sbb
movl
add
sub
inc
or
cwtl
adc
mov
test
test
test
or
jl
mov
outsl
push
xchg
out
loopne
jl
scas
loopne
add
jl
inc
or
insl
adc
enter
das
dec
add
inc
enter
shr
insb
fcom
pop
lods
loop
or
xchg
ljmp
and
pop
or
fidivl
sub
mov
pop
sub
aad
sarl
ret
cmc
adc
dec
push
pop
rcl
pop
lea
jge
push
jo
inc
movsl
sub
dec
mov
cltd
push
or
scas
cltd
sub
scas
ds
mov
aad
addl
mov
lret
enter
xchg
mov
sti
cli
inc
imul
mov
cmpsl
sbb
mov
shll
divl
lret
mov
cli
xor
pushf
cwtl
xor
mov
lods
pop
ja
mov
icebp
mov
jle
scas
arpl
movsb
pminub
fwait
mov
sbb
push
fcomps
fs
fstpt
fucom
ret
sub
mov
jecxz
pop
jl
testl
mov
pop
fidivrs
dec
fnstcw
mov
dec
stos
xchg
arpl
inc
xchg
inc
insl
sbbl
mov
dec
call
pop
fisttps
sub
sub
pop
scas
push
popa
divl
mov
mov
dec
mov
adc
cmp
ret
mov
ljmp
out
lahf
mov
mov
dec
pop
int3
not
cmp
push
mov
mov
in
sahf
dec
jns
jb
int3
cmp
out
cmp
cmp
pop
xchg
jle
nop
mov
xchg
push
jo
add
popa
cli
loopne
mov
xchg
jnp
inc
movsb
jl
dec
bound
cmc
lods
push
jl
sub
fwait
gs
jnp
mov
mov
or
daa
inc
or
mov
sub
and
jp
push
or
xor
and
movsb
pusha
stos
pop
mov
dec
loop
mov
pop
shlb
fldt
in
sbb
cmp
adc
movsl
mov
leave
cltd
push
mov
js
push
xor
add
out
mov
or
inc
push
loopne
mov
fsubs
adc
into
pop
rcrb
or
out
test
pop
push
xchg
sbb
dec
inc
stc
sbb
jno
dec
fsubl
xor
lsl
stos
adc
inc
inc
je
in
jmp
outsb
push
sbb
es
fsubs
hlt
push
cmp
in
and
hlt
dec
xor
cmp
inc
dec
add
push
addr16
xchg
xchg
test
xchg
sub
cmp
xchg
add
ficoms
lods
cmp
sub
test
jg
pop
lds
sub
ss
movsl
sub
mov
movb
sub
cmp
nop
and
jecxz
call
pop
js
fstps
or
les
shl
shll
mov
scas
push
enter
adc
mov
xor
cwtl
imul
sub
lret
leave
shlb
push
int3
pop
daa
cmp
add
fnsave
fnstenv
iret
stc
popa
pusha
adc
cmp
sbb
in
test
pop
pop
inc
xor
loope
mov
stc
loop
sbb
or
fmul
outsl
jno
sbb
or
sub
int3
cwtl
jl
pop
or
jno
cmp
push
lret
lea
in
jge
mov
xlat
push
inc
sbbb
enter
dec
aaa
xor
xor
mov
mov
fldl
das
out
pop
push
lods
mov
loop
mov
call
adc
fsubrl
xor
lahf
pop
mov
xor
sarl
xlat
push
cmp
add
bound
gs
fsts
xchg
jl
inc
hlt
sub
loop
ss
dec
call
sbb
out
mov
push
xchg
fsubr
insl
fcoml
shrl
pop
pop
xchg
aad
rcr
xchg
push
push
sahf
sti
jo
mov
push
mov
popf
add
sub
push
imul
int3
cli
push
pop
and
icebp
out
jo
cmc
daa
imul
jecxz
mov
in
xor
cmpsl
ja
cwtl
push
jnp
xor
stos
adc
arpl
imulb
adc
roll
mov
mov
pop
mov
and
popa
mov
inc
ja
insl
push
and
jae
push
adc
jecxz
mov
std
cmc
ja
sub
stos
xlat
sahf
fidivl
cmp
movl
fchs
mov
fcmovne
inc
ret
scas
lock
jmp
je
inc
fdivrp
cmpl
repz
dec
or
lods
js
or
cwtl
sub
bound
rcrl
test
insl
repnz
aaa
cmpl
scas
add
lock
jg
cmp
ljmp
repnz
addr16
sub
or
inc
cmp
mov
push
add
sub
mov
mov
push
add
jno
pop
outsl
xchg
mov
pop
inc
ljmp
jecxz
mov
xor
dec
pop
xchg
je
jnp
sbb
rcrb
pushf
daa
jle
xlat
iret
ret
insb
fidivrs
adc
push
scas
or
repz
fldenv
mov
mov
push
ficomps
insb
xor
cli
sbb
cld
push
shll
pop
fiaddl
ja
jl
jb
test
shl
sbb
stos
jle
add
xor
loopne
test
cmc
add
sahf
rorb
into
or
cmp
mov
lret
sahf
add
lcall
fistps
xor
cs
daa
sub
adc
sub
push
bound
lea
arpl
sub
sbb
xlat
popa
add
sub
arpl
in
add
sbb
das
adc
pop
jne
test
test
adcl
cli
loopne
das
adc
lock
aas
cltd
jbe
lods
pop
cmpb
mov
jns
fisubrs
push
add
inc
out
lret
mov
mov
jnp
mov
popl
das
mov
int
lds
mov
out
mov
pop
into
je
addr16
sbb
fbstp
dec
ds
movsl
pusha
cltd
add
sahf
cwtl
mov
jns
fucom
popf
add
cwtl
sti
gs
sbb
cmp
adc
and
fmull
int3
ds
cli
mov
mov
adc
push
and
enter
xor
inc
js
test
jae
nop
fisttps
pop
out
cmp
cmp
or
pop
cmpb
mov
cld
mov
repz
cmpl
outsl
jge
push
inc
in
mov
inc
and
es
or
leave
xchg
adc
add
pop
fidivrs
mov
repnz
movsl
cmpsb
cld
sbb
mov
inc
out
xchg
stos
stc
sub
mov
mov
and
push
mov
mov
aaa
shrl
popa
push
push
mov
xor
fidivl
inc
inc
add
movsb
addr16
out
jns
adc
in
xor
or
jecxz
and
push
push
mov
adc
xor
ret
push
adc
jp
jo
loop
ljmp
mov
les
ds
mov
mov
add
xchg
pop
xchg
or
mov
mov
and
insl
roll
adc
jecxz
ficompl
mov
dec
lahf
push
push
pusha
ret
and
repz
out
gs
rcrb
mov
add
fsts
add
mov
and
add
fldcw
add
xchg
lahf
pop
adc
dec
xor
out
add
adc
insl
insl
push
lods
mov
out
xchg
jae
jno
movsl
inc
scas
movsl
pushf
notl
jl
mov
arpl
and
movsl
mov
push
ja
xchg
xchg
gs
outsb
xchg
fidivl
cli
outsl
jmp
dec
jge
push
inc
cs
xchg
cmpsl
and
push
sbb
and
cltd
jecxz
or
jne
inc
repnz
ljmp
inc
sarl
xor
and
ret
adc
in
xchg
pop
sbb
and
add
ja
pop
xchg
xchg
outsb
fstl
sub
inc
add
mov
fadds
sbb
dec
mov
cld
roll
out
pop
mov
xor
xchg
push
repnz
pushf
icebp
dec
and
test
dec
popa
es
loop
mov
push
adc
lret
mov
or
sub
xlat
adc
mov
loope
cmpsb
stos
ljmp
orl
sub
adc
lods
fisubrl
add
dec
inc
or
cmp
out
xor
sub
cmp
pop
ret
xor
or
dec
dec
mov
jae
mov
out
jp
outsb
cmpl
sbb
sbb
ljmp
sarb
cmp
or
jecxz
mov
sbb
inc
in
fisttps
mov
add
fs
mov
mov
sbb
and
out
xlat
xchg
lret
lods
jbe
xchg
cmpsl
iret
pop
push
add
push
inc
divl
shrl
dec
add
and
sub
push
mulb
dec
cmp
nop
cmpsl
jb
mov
push
lods
cwtl
adc
scas
xchg
sub
sbbl
pop
out
cltd
jns
jmp
icebp
adc
jge
test
fdivs
inc
imul
mov
pusha
ret
cwtl
test
out
stc
xchg
pop
or
inc
shl
dec
xlat
lahf
adc
push
testb
fsubrl
inc
stos
jne
dec
ror
call
inc
inc
std
out
xchg
test
or
mov
pop
test
and
in
into
shlb
mov
mov
mov
jb
push
jnp
mov
test
dec
loopne
ret
idivb
ja
mov
push
xor
mov
lahf
cli
ror
mov
dec
icebp
loopne
in
jns
push
int
sarb
mov
mov
inc
push
negb
jns
aas
mov
add
sub
sub
add
mov
cmc
lcall
jae
jae
pop
jl
std
out
out
fnstsw
outsl
push
xchg
cltd
push
scas
cltd
mov
rorl
sbb
stos
mov
adc
imul
fadds
cmp
sbb
rorb
mov
mov
sub
mov
jno
or
push
sbb
sarb
push
push
lret
les
hlt
push
sbb
mov
mov
dec
inc
add
mov
pop
pop
mov
scas
cltd
xorb
ret
inc
inc
loopne
inc
or
int
pop
fs
pushf
test
xor
push
push
and
pop
pop
mov
pop
xchg
cmp
loopne
outsb
mov
and
fs
dec
pop
mov
or
js
loop
mov
jecxz
inc
mov
xchg
fsubrl
pop
sbb
sbb
sub
xchg
int3
sbb
out
mov
add
sbb
pop
jmp
and
sbb
push
in
shrl
movsl
js
pop
out
les
into
daa
sub
call
dec
xchg
mov
fs
inc
mov
lret
pop
mov
jns
dec
out
mov
sub
mov
shll
clc
or
into
scas
jne
int3
clc
sahf
xor
test
daa
adc
pop
push
mov
popa
std
lcall
pop
xchg
stos
ret
inc
push
inc
les
call
jae
adc
sbb
cmp
insl
scas
jge
and
mov
xchg
fs
inc
or
ss
fisubrl
push
fcoml
test
sub
xchg
es
ret
pusha
add
lods
push
call
repnz
and
dec
mov
dec
in
std
js
imull
xor
orb
push
xchg
ret
gs
dec
or
ret
stc
enter
mov
mov
sub
or
jl
lods
cltd
mov
mov
add
push
cli
jae
mov
push
jnp
cli
and
or
xor
sbb
sub
and
mov
cltd
ja
add
adc
data16
jl
jnp
cmp
cmp
ret
pop
ds
dec
cltd
sti
xchg
orl
mov
ds
inc
mov
cld
ret
jno
into
sbb
test
xchg
cs
mov
sub
std
cmc
and
mov
mov
daa
arpl
fdiv
mov
lcall
mov
adc
iret
sbb
dec
cltd
leave
pop
test
fdivrs
aam
sbb
or
pop
ljmp
mov
vpminsw
imul
jmp
sbb
mov
das
ficoms
lret
xchg
dec
add
dec
xor
mov
jmp
outsb
jmp
inc
jns
fsubl
icebp
jne
cmc
xor
jmp
cmc
push
inc
fcoms
sub
pusha
mov
in
mov
inc
stos
adc
mov
mov
shr
lock
lods
aam
js
ss
pop
pop
and
adc
mov
in
sbb
xlat
imul
push
jae
xor
xor
jecxz
sbb
das
jmp
lret
insl
bound
mov
sbb
push
es
scas
xor
mov
push
push
insb
out
nop
in
xchg
callw
xor
xchg
int
and
dec
push
call
dec
loope
repnz
xor
jns
push
jo
jp
fwait
leave
mov
mov
test
jg
jnp
push
fldt
out
mov
pop
es
mov
push
mov
mov
inc
sahf
nop
inc
jecxz
stos
scas
repnz
cmp
push
hlt
push
inc
pushf
adc
addb
dec
test
mov
fsubl
jbe
dec
and
cmc
in
sub
int
into
adc
mov
sub
dec
in
ja
rol
lds
je
inc
pop
mov
push
sbb
leave
or
push
cmp
stos
imul
mov
jb
out
imul
fcmovnb
jle
das
adc
and
and
add
jns
out
mov
pop
fld
mov
xchg
mov
mov
lret
das
adc
vfmsub231ps
xlat
lods
fdivs
repnz
iret
cmpsl
mov
or
pop
or
cli
push
jmp
clc
in
repnz
sbb
nop
dec
bound
mov
cli
ljmp
add
aad
fnstsw
fbld
inc
jns
and
mov
sub
inc
lods
int3
mov
into
rorb
test
popa
outsb
fadds
xchg
jge
push
mov
and
adcl
popa
in
je
pop
popf
sahf
xchg
cli
inc
or
mov
inc
push
fbstp
push
inc
cmp
pop
inc
jo
test
in
cs
dec
mov
mov
jg
ja
fwait
jns
and
in
xchg
lahf
mov
scas
xor
decl
sbb
adc
jb
leave
pop
ret
push
adc
inc
xchg
in
loop
cmpsl
jbe
dec
xlat
xlat
or
mov
jl
push
jno
outsb
idivl
aad
push
fxch
lahf
negb
and
sbb
fsubr
push
xor
lock
rcrl
sbb
lods
mov
sub
ja
lret
push
jecxz
and
mov
mov
stc
cwtl
insb
xor
pop
lea
inc
arpl
jnp
jo
pusha
dec
sub
push
or
mov
jg
xchg
clc
push
xor
xor
adc
jne
ljmp
xorb
inc
xor
les
outsl
int3
mov
int3
xchg
push
filds
or
stos
xchg
pushf
inc
test
lods
adc
ds
out
mov
cwtl
fidivl
stc
aaa
xchg
cli
xor
push
add
scas
sbb
xor
in
les
mov
cmpsb
loopne
mov
mov
jmp
pop
and
fisubrs
pop
sbb
std
ljmp
out
popf
jo
ret
ljmp
rcrb
es
push
sbb
in
fcomi
mov
jo
xor
dec
xor
jnp
fdivp
add
cld
lods
icebp
sahf
add
cmp
repnz
mov
iret
mov
xor
mov
sbb
mov
add
sti
stc
scas
fwait
mov
loopne
mov
lahf
int
xor
mov
jbe
ja
sub
xchg
inc
and
mov
jp
cmp
inc
jno
je
hlt
pushf
or
adc
into
sub
aad
scas
xchg
mov
mov
pop
lds
leave
scas
or
movb
cmp
mov
push
shl
xlat
mov
jg
adc
mov
std
out
pop
int
adc
stc
lds
ret
cwtl
mov
test
fsubrl
sbb
outsb
mov
inc
fcoml
mov
cmc
daa
pusha
cmp
push
imulb
outsb
out
insl
and
jge
mov
xor
das
fld
or
xchg
mov
loope
mov
xlat
mov
mov
cld
aas
jns
inc
into
fidivrs
sahf
add
xlat
and
js
mov
loopne
stc
jl
test
aas
inc
jbe
jae
jbe
cli
mov
mov
jno
clc
sbb
mov
lock
or
sub
out
pushf
pop
ja
dec
inc
cmpsb
shl
ret
mov
cmp
and
out
xchg
mov
cli
aas
das
dec
pop
les
or
iret
xor
sbb
fidivrl
andb
lock
xchg
je
divl
cmp
push
lods
call
pop
cli
addr16
fstpt
jne
inc
sub
out
mov
fmuls
or
jns
imul
pusha
testl
and
in
jl
out
dec
xchg
enter
das
lds
mov
sub
imul
mov
mov
fnsave
in
or
lock
pop
push
or
fisubs
dec
dec
push
jb
add
dec
xchg
cmpsb
dec
test
jnp
jns
mov
insl
adc
push
jns
data16
xor
or
cmpsl
test
xor
push
jecxz
jo
mov
or
lret
fucom
test
std
pop
push
icebp
push
orl
aaa
add
bound
mov
ja
movsl
mov
decb
mov
loop
into
push
and
test
stos
jg
adc
sub
sbb
popf
stos
lcall
cmp
inc
in
je
aas
sub
sbb
loop
insb
ret
xchg
jo
cld
fstl
or
mov
lea
pop
data16
outsb
outsl
push
loop
fsubs
js
leave
pop
loopne
fdivrp
and
popf
mov
gs
push
sti
jg
sbb
mov
lret
roll
jmp
dec
push
ljmp
adc
mov
mov
in
clc
and
inc
or
jmp
mov
fimull
jp
das
sar
outsl
xchg
fstpt
fstps
jmp
lret
cltd
dec
inc
iret
lods
fs
mov
jge
push
call
mov
cmp
mov
daa
sub
inc
and
lock
or
and
sbb
fwait
mov
movsb
sub
push
dec
jmp
scas
out
int
aam
xor
lock
fnstcw
add
das
mov
mov
sar
pop
jae
xchg
pop
dec
test
cmp
and
rcl
cli
pushf
aaa
mov
xor
stc
jb
xor
sub
xor
mov
xlat
fs
xchg
inc
lret
push
cmp
iret
or
in
insl
iret
push
and
mov
jle
xor
rorl
call
lds
sub
push
enter
outsb
into
dec
iret
jne,pt
lock
and
and
loop
ds
fadds
mov
mov
cmpsb
cmp
dec
mov
mulb
repnz
inc
jg
popa
add
inc
cwtl
mov
add
or
push
nop
subl
clc
sub
xchg
dec
cmp
lret
fbld
iret
and
mov
mov
mov
add
push
jo
jmp
mov
rcl
imul
mov
mov
mov
out
mov
cmpl
jmp
fcmovnu
mov
les
pop
and
jns
fs
jge
enter
xchg
inc
shll
nop
jp
icebp
add
ficomps
mov
add
ds
jmp
repnz
test
inc
psrlw
add
mov
push
sahf
cmp
xchg
out
and
in
jle
mov
test
inc
testb
xchg
push
pop
jae
rcrb
inc
fldt
jno
mov
scas
sarl
loop
sbb
js
fistl
xor
fdivl
push
mov
fimull
idivl
loope
lds
mov
jno
mov
inc
or
mov
add
cmp
dec
lret
and
fcmovb
imul
call
cmc
push
jnp
pop
mov
inc
scas
xchg
lcall
mov
adc
jno
adc
daa
cmp
pop
adc
push
leave
mov
pop
imul
cld
mov
adc
cmp
shlb
dec
mov
mov
or
adc
imul
inc
inc
cs
cmp
into
stc
fimull
mov
repnz
mov
add
or
xchg
data16
mov
adc
cld
out
push
mov
scas
out
cmc
out
fidivrl
loop
outsb
in
loope
xor
sub
push
repnz
mov
shlb
pop
inc
loopne
add
jle
cmpsl
jbe
xor
dec
push
divb
push
push
xchg
stos
pop
test
sbb
push
das
addr16
mov
lods
dec
jmp
in
sbb
xchg
cs
push
out
loope
out
mov
ret
daa
ret
inc
xor
inc
push
sub
subl
xchg
shlb
pop
sti
and
xchg
movsb
mov
mov
test
outsl
jae
idiv
mov
lea
push
xor
in
notl
dec
test
ds
fsubrs
and
ja
xor
mov
push
cwtl
or
stos
mov
mov
mov
push
cld
pop
insl
mov
in
clc
pop
pop
outsb
pop
pushf
insb
sub
cs
mov
sbb
cmp
icebp
fdivs
lods
test
or
push
inc
rorb
or
sbb
je
fidivl
lahf
es
mov
stos
dec
je
push
xor
or
mov
sbbl
out
test
xchg
out
test
dec
or
aam
int
jecxz
adc
lods
xor
out
mov
cmp
rcrb
test
add
mov
repz
fisttpl
insb
cmp
fcmovnu
jns
das
cmpsl
xlat
push
xor
div
cmpb
dec
pop
icebp
orb
lods
dec
mov
rcrb
rolb
or
adc
jae
into
jb
mov
les
pop
xchg
pop
outsb
push
push
jp
mov
cltd
repz
or
and
pop
mov
dec
shll
and
lds
pop
sub
shrb
xor
test
es
cs
hlt
in
sbb
push
xchg
adc
loop
push
andl
pop
xor
push
pop
xchg
adc
and
lods
adc
jmp
or
divl
mov
repz
movsl
sbb
pop
sbb
fnstsw
xor
stos
insl
mov
jbe
icebp
int3
loopne
xchg
fistl
inc
lods
xchg
loope
sbb
insl
scas
or
and
lods
flds
pop
cmp
out
mov
data16
mov
jnp
stos
loope
mov
test
jge
rorb
mov
xcrypt-ctr
cmpsl
sahf
pop
mov
jmp
lods
cmc
ljmp
fbld
into
je
push
dec
icebp
mov
xrelease
or
sbb
pop
mov
dec
sbb
push
pop
cmpsb
fmuls
shlb
insb
push
std
xor
jo
jbe
xor
cmc
cli
dec
adc
in
push
hlt
and
dec
mov
in
sub
lods
mov
xchg
xor
jge
mov
fs
mov
cs
pop
pop
sbb
cmp
jns
jmp
and
or
fnstcw
ret
hlt
push
jge
lahf
enter
popf
test
mov
movsl
xchg
or
pop
shll
mov
cmp
mov
sbb
push
int
jmp
fcompl
outsl
pshufw
gs
ret
jo
inc
jg
mov
cmpsb
push
or
jg
mov
push
rcrl
aas
dec
jecxz
pushf
mov
or
aad
mov
push
add
xchg
mov
mov
xor
int3
mov
jb
pop
fsts
les
cmpsb
mov
cmp
push
cld
sub
xor
cmpb
push
aad
mov
gs
clc
icebp
call
mov
push
jae
lcall
inc
mov
faddl
cltd
sub
rol
sbb
dec
clc
xchg
filds
jo
xor
stc
mov
cmc
jle
push
xor
aaa
fstpt
and
mov
pushf
sub
int3
dec
lahf
xchg
adc
dec
popa
lret
dec
dec
insb
aam
add
pop
mov
cmp
negb
fwait
mov
les
fnstsw
push
sbb
xchg
iret
or
adc
imul
adc
mov
cmpsb
repnz
aam
addr16
mov
pop
mov
xchg
iret
inc
das
inc
ljmp
hlt
jb
sbb
pop
jns
pop
mov
iret
sbb
lds
sbb
insb
in
cmp
je
mov
mov
xor
out
xor
pop
movsb
insb
enter
jnp
stos
mov
cmp
in
pop
dec
and
sbb
inc
aas
push
push
cmp
cmp
scas
scas
movsb
and
sahf
out
hlt
lods
lahf
addl
lea
mov
mov
pop
mov
stos
adc
mov
cwtl
mov
out
mov
aam
inc
dec
dec
and
movsb
add
mov
dec
jb
jle
mov
out
and
sbb
mov
inc
sbb
rorb
cmp
mov
in
adc
popa
lock
out
inc
push
cltd
cmp
mov
push
mov
jecxz
jns
or
sbbl
into
aas
jecxz
ret
lahf
sub
mov
aas
cli
fwait
and
aad
jecxz
mov
bound
mov
ficompl
int
xchg
shr
shll
stos
cmc
je
inc
mov
fldl
ljmp
stc
popf
lea
xor
mov
dec
push
mov
ljmp
add
dec
movsl
dec
adc
and
cwtl
sub
cmp
push
sbb
pop
push
xor
pop
test
mov
sub
add
lea
or
sub
cmp
cmp
and
and
pop
inc
pop
push
xchg
sub
add
notb
in
std
mov
outsb
ljmp
jae
ficoml
xor
sub
out
dec
fiadds
incl
ljmp
js
mov
mov
bound
mov
pop
mov
xor
sbb
adc
inc
fdivl
test
nop
cld
cmpsb
jp
xchg
pusha
xchg
pusha
pop
ljmp
xor
arpl
repnz
leave
mov
cld
in
loope
adc
and
lods
jl
cmp
leave
inc
sbb
sub
jle
mov
and
movsl
out
sub
test
push
repnz
jg
lret
sub
into
mov
sub
in
xchg
mov
adc
sub
mov
mov
jbe
fidivs
pop
xchg
daa
in
test
lret
cmpl
jmp
in
sub
insb
mov
cmp
push
xor
dec
cmp
aaa
cld
fdivrl
cltd
vhaddps
cmp
aam
xor
xor
repnz
sbb
push
cmp
mov
mov
fs
add
xorl
cmpl
fwait
js
cld
inc
aad
mov
adc
rcr
mov
mov
roll
pusha
ds
push
jp
sub
jmp
lahf
jns
aad
outsl
mov
test
fwait
into
mov
cmp
repnz
insl
mov
push
loopne
jae
xor
xchg
sub
mov
js
lods
mov
mov
mov
xor
repnz
jl
add
add
jmp
das
pop
lods
pop
mov
pop
repnz
cmpsl
es
adc
movsl
mov
ja
pop
iret
ja
mov
rclb
or
notb
jbe
cld
outsb
jae
xchg
ret
addl
xchg
mov
je
sub
out
dec
shlb
out
xchg
cld
subb
sahf
stc
leave
repnz
dec
rcl
jg
mov
dec
mov
push
cmpsb
lahf
arpl
sub
rolb
test
adcb
loop
pop
sub
ret
sub
cltd
pop
push
pop
mov
hlt
cmp
dec
and
and
dec
decb
repnz
jbe
imul
pop
xlat
xor
dec
or
stos
dec
push
iret
push
cltd
aaa
aam
pop
xchg
ljmp
pop
addl
cwtl
inc
mov
and
and
or
cltd
sub
test
rcll
push
scas
sbb
flds
inc
lods
mov
shl
mov
jne
sbb
mov
inc
push
in
jnp
sub
pop
add
pop
dec
imull
ds
movsb
std
adc
loopne
sub
shl
iret
fldt
fmull
lods
mov
pop
inc
into
pop
pop
push
incl
xor
je
enter
mov
je
mov
sub
sub
dec
sub
push
int3
stc
cmpsb
cli
cld
and
cmc
cmp
test
out
push
insl
pusha
fisubrs
pop
add
sbb
sub
rorl
pop
cmp
insl
into
mov
or
cmovns
gs
mov
loop
or
mov
or
xchg
adc
and
imul
jge
mov
dec
insl
push
popf
mov
shl
adc
aam
sub
or
or
jns
insl
addb
mov
lret
and
stos
adc
mov
fildl
lea
lea
adc
bound
mov
sbb
xor
or
sub
scas
insb
dec
jge
or
stos
scas
dec
sub
out
inc
jg
lock
scas
sbb
and
or
xchg
psrld
mov
push
mov
out
sbb
mov
lods
loopne
data16
into
pop
inc
dec
or
pop
in
mov
sahf
sub
xor
pop
cmp
adc
cmp
or
inc
and
pop
push
aad
inc
leave
xlat
jle
push
jmp
push
dec
xor
jbe
cli
notl
test
pop
aad
mov
jp
add
popa
insl
loope
or
fldenv
mov
js
lods
pop
loope
roll
jo
into
popa
xchg
cmpsb
jbe
daa
aaa
xchg
nop
push
xchg
inc
cmc
xor
xor
iret
pop
push
jmp
jge
cli
pushw
inc
dec
mov
out
xor
and
or
pop
jl
inc
adc
and
scas
repnz
jge
call
adc
push
shl
mov
mov
mov
dec
rorl
fldcw
rorb
mov
bound
push
xor
inc
out
adc
repnz
stc
std
movaps
jle
das
outsb
add
cwtl
inc
popf
mov
push
adc
inc
dec
cmp
or
inc
push
cmpsb
fdivl
or
sarl
imull
in
or
mov
int
imul
pop
icebp
fs
insb
xchg
clc
adc
or
ljmp
push
inc
jp
aad
xchg
idivl
adc
fstpl
nop
xchg
inc
stos
orb
fistpl
insb
ret
pusha
xchg
repnz
push
inc
xchg
fnsave
loop
push
or
testl
fcomps
mov
inc
push
ret
pop
lea
mov
test
bnd
out
xchg
push
add
movsl
and
xlat
inc
mov
or
fs
aam
mov
and
push
test
xor
push
fmul
aam
cvtps2pd
mov
sbb
lret
icebp
pop
mov
cwtl
cmp
mov
cli
dec
pop
out
xor
fisttps
xorb
push
repnz
in
leave
sub
rol
mov
xchg
repnz
cmp
std
xchg
and
movb
pop
cmp
xor
xchg
pop
sub
das
adc
push
sub
jmp
dec
cli
in
add
xlat
data16
jb
out
shufps
cwtl
push
lods
push
mov
or
jnp
jo
fdivl
insb
jns
gs
adc
nop
mov
xor
mov
ret
cmp
lret
mov
es
sub
sbb
cs
and
xchg
sub
repz
inc
dec
mov
dec
popf
cmpsb
adc
cmp
hlt
and
data16
imul
sbb
aam
ficomps
int3
mov
addr16
push
or
aas
cmp
jb
xchg
adc
imul
add
stos
add
leave
cmp
pop
add
xor
mov
sbb
xor
sbb
addr16
pop
inc
mov
xchg
adc
sub
bound
pop
in
pop
xchg
ss
push
jle
or
inc
jmp
mov
lock
xchg
test
ret
xor
fists
push
js
mov
rcrb
xchg
arpl
nop
xchg
pop
cld
lock
jmp
sbb
push
push
sahf
dec
aad
cmp
test
decb
adc
adc
cmpsl
jns
orl
sbb
add
push
or
add
cmp
and
lcall
cwtl
jno
push
xchg
cwtl
pop
enter
enter
decb
andl
or
ja
mov
xchg
xchg
pop
xor
xchg
cmpsb
inc
push
mov
ja
mov
mov
ljmp
cltd
loop
push
xchg
test
jno
pop
or
sbb
orl
add
mov
data16
mov
mov
xchg
cmpsb
lahf
jne
xchg
add
fistpl
iret
pushf
pop
jbe
sub
jae
xchg
insl
dec
fstpl
daa
xchg
test
arpl
sar
and
push
fwait
mov
xchg
sbb
push
lcall
mov
in
into
jo
nop
xor
fwait
inc
pushf
xchg
sbb
mov
adc
cmp
jecxz
mov
jp
sbb
hlt
xchg
sbb
es
or
in
ljmp
incb
rcrb
arpl
insb
jmp
adc
jbe
cmp
mov
adc
push
jnp
push
mov
cmp
mov
pop
cmp
xchg
push
mov
lcall
adc
test
mov
xchg
push
and
mov
push
pop
sbb
cmp
mov
push
pop
add
sbb
pop
lods
pop
in
popa
xor
in
enter
test
pop
or
ficoms
out
mov
adcl
pop
popa
mov
push
sbb
adc
mov
mov
test
jg
mov
int3
or
inc
fucom
lahf
out
movb
pop
sarb
lock
jg
enter
adc
rcr
pop
mov
xchg
pushf
shlb
or
mov
cmpsl
or
push
test
jl
mov
push
dec
out
int
add
cmp
ret
call
stos
fcmovnu
mov
add
xchg
aad
xor
mov
jo
repnz
ds
hlt
insb
dec
lods
rclb
aam
and
pop
les
dec
movsl
mov
lcall
les
insb
and
ret
popf
dec
cwtl
outsb
test
mov
mov
lods
lods
lods
push
sbb
movsb
push
and
pop
cmp
ds
dec
sbb
mov
ljmp
sub
jb
mov
xchg
jbe
imulb
add
pop
dec
dec
pop
mov
sub
sti
jae
iret
ja
push
in
and
je
cmp
popf
clc
mov
inc
push
jno
std
mov
cmpsl
and
subl
test
mov
jge
gs
sub
aaa
in
xchg
mov
in
loopne
das
fistl
fisubs
mov
xor
fistpl
bound
fld
jno
addr16
adc
repnz
push
inc
ror
lea
mov
pop
sbb
mov
or
xchg
xor
adc
xchg
mov
pop
pop
dec
mov
in
or
lods
or
lods
pop
xchg
push
popf
dec
outsl
in
cmp
add
js
into
shll
adc
dec
cmp
sub
in
mov
sub
add
sbbb
es
out
movsl
xchg
xor
iret
push
rolb
test
xchg
das
dec
xlat
xchg
clc
js
pop
add
and
mov
out
pop
cmp
cmpsl
lea
pop
inc
test
es
in
xchg
addr16
stos
sbb
dec
ficoml
std
outsb
cmp
ret
inc
cmp
jp
xchg
pop
loopne
mov
ljmp
sbb
fsubp
adc
loopne
scas
push
jno
andl
inc
cmp
stos
inc
and
out
outsl
lea
je
or
xor
lods
arpl
jp
push
leave
jl
leave
icebp
repz
pushf
push
dec
push
mov
cmpsl
shlb
aas
or
shlb
pop
push
lods
shll
dec
icebp
stos
pop
inc
mov
jo
dec
xchg
mov
pop
ja
in
mov
pop
test
aam
pop
adc
sahf
movsb
ds
pop
and
push
mov
inc
cmp
cmpsl
sub
bound
rolb
test
das
test
or
cmpsl
mov
lret
out
jnp
or
addr16
cmp
ficompl
fisttpll
inc
cmp
pop
inc
cmp
mov
dec
mov
pop
or
sbb
ljmp
adc
cmp
vmovaps
fdivr
scas
cmc
lds
addb
cld
scas
aaa
xchg
lock
outsl
pop
je
fcomp
inc
mov
outsb
lods
inc
xor
les
jns
ss
test
outsl
fisubrs
test
clc
fistpll
add
stc
jne
push
in
sub
sbb
lahf
gs
jp
jno
nop
adc
jmp
fidivrl
push
xor
enter
push
push
push
das
push
lods
sub
int3
push
into
hlt
fcompl
hlt
and
cmp
xchg
dec
cmp
dec
xor
mov
or
xor
aaa
mov
or
loopne
ds
adc
and
stos
xor
lods
mov
pop
das
imul
insl
je
xchg
scas
gs
xor
add
fsubl
loop
dec
fimull
fdivrs
stos
cmpsl
lcall
dec
mov
rorl
add
mov
mov
lods
add
mov
nop
jae
imul
fsubs
mov
fwait
xchg
es
xchg
mov
xchg
and
xor
or
jl
stos
xchg
add
dec
cli
jmp
mov
ret
sub
dec
dec
repnz
cmpsl
clc
cmp
lret
clc
es
cltd
mov
int
xlat
cmpsl
pop
xchg
imul
xor
xchg
sub
xor
xchg
inc
jl
and
leave
out
into
stc
xor
push
push
mov
das
sbb
xlat
bound
pop
imul
mov
or
outsb
in
push
dec
nop
push
ret
cmp
add
dec
fcomip
arpl
jmp
das
out
cmp
out
add
mov
push
in
popf
push
adc
adc
mov
scas
xlat
pop
shll
test
jbe
sbb
and
fst
jbe
cmp
pop
add
xchg
push
xchg
inc
into
popf
push
out
jle
cmp
les
fdivs
sbb
mov
clc
fdivrs
fimuls
insb
mov
jg
lcall
xor
xchg
dec
pusha
push
outsl
xchg
inc
sahf
aad
out
cmp
js
je
xchg
fsub
jb
jo
ss
sbb
xchg
fisubl
pop
jns
into
and
xlat
into
and
mov
repz
lds
daa
xor
and
mov
inc
adc
push
sbb
cmp
xchg
ja
mov
gs
jno
push
int3
std
popf
jp
jge
outsl
in
notl
sbb
stc
fwait
xor
push
dec
mov
sub
in
mov
jbe
std
std
inc
negb
xor
xor
sarb
mov
scas
dec
pop
xorl
mov
pop
cmpsb
int3
mov
and
cmp
incb
inc
test
jmp
mov
xor
inc
mov
push
cmp
movsl
cmp
sub
lods
out
push
sub
cmpsl
and
jg
jecxz
inc
sub
cld
mov
aad
sar
mov
or
jmp
pop
xchg
pusha
into
movsl
stc
movsl
fst
mov
pop
or
in
adc
xchg
or
pop
mov
rolb
inc
or
mov
jg
stc
sbb
inc
inc
arpl
jo
adc
nop
sti
dec
dec
xor
into
movsl
add
js
cld
jl
xor
xor
add
push
movsl
pushf
add
pushw
jae
or
ret
or
push
xor
pop
push
call
dec
lret
mov
or
mov
mov
mov
xchg
lods
imul
idivl
es
ss
xor
sbb
pop
jecxz
fadds
in
in
insl
pop
mov
jle
add
mov
pushf
lods
xor
xor
test
notl
leave
mov
cmp
sub
filds
push
xchg
mov
push
dec
jge
adc
mov
mov
sbb
loopne
dec
sub
mov
push
je
pop
movsl
xchg
sarl
inc
push
cmpsb
sbb
fisubl
or
mov
pop
cmp
loop
cmp
inc
cmp
cmp
sub
and
sub
or
enter
ffree
or
roll
inc
fisubl
bswap
imul
lcall
gs
roll
pop
mov
hlt
es
scas
mov
mov
push
jl
sbb
mov
pop
mov
pop
lret
jmp
popa
loope
xor
adc
adc
icebp
jmp
dec
cli
jns
and
in
adc
popa
stos
jl
cmp
sub
inc
mov
out
rcl
or
or
mov
pop
sbb
in
iret
cmpsl
ficomps
dec
xor
clc
sbb
arpl
pop
mov
je
fcmovu
not
scas
lahf
sub
add
dec
jmp
movsb
int
mov
rclb
xor
mov
add
mov
scas
jae
xor
in
adc
pop
mov
lock
pop
pop
outsb
leave
gs
sahf
arpl
adc
sarb
pushf
lock
mov
js
mov
scas
fwait
rorl
divb
pop
and
xchg
xchg
out
gs
je
daa
imul
mov
add
das
mov
out
fsubl
fcomp
inc
insb
inc
jns
add
cmpsl
cmp
inc
imul
lods
xor
inc
je
cmc
mov
in
push
mov
aam
cwtl
rclb
or
xchg
fdivp
pop
pop
fcoms
pop
add
mov
jbe
arpl
sarl
stos
mov
fwait
jae
cmp
sbb
xor
jae
call
xor
mov
jns
cmpsb
out
pop
add
movsb
add
mov
cmc
ja
out
imul
or
mov
lahf
mov
cmpb
sbb
lcall
cld
cmpsb
fisubrs
mov
cmp
loope
jmp
stos
xlat
inc
clc
add
xor
fnstcw
in
push
mov
pop
mov
jp
inc
lock
jo
inc
jmp
mov
and
movsl
push
and
aas
sub
jl
test
dec
into
dec
loopne
xor
pop
and
outsb
aad
dec
or
scas
in
or
cld
jp
cli
mov
sbb
or
sub
jl
mov
mov
in
or
outsl
cmp
pop
ror
mov
imul
bswap
dec
adc
inc
mov
cmp
imul
sbb
jge
jmp
mov
mov
leave
test
or
push
testb
adc
pop
sahf
scas
sub
mov
int
push
cmp
dec
push
clc
mov
mov
xchg
dec
mov
mov
or
xor
sbb
int3
add
out
arpl
sub
jb
and
push
xchg
dec
aam
popf
lret
stos
ret
incb
into
pop
push
aad
ja
pop
sti
pusha
sbb
shl
out
out
xchg
jg
adc
push
arpl
inc
mov
into
mov
push
push
xor
ja
push
mov
popa
pop
fcompl
mov
mov
push
fs
pop
sarb
ret
rorb
xchg
mov
xor
and
cmp
shrl
data16
pop
dec
xor
pop
fmull
sub
lock
js
stc
add
out
add
cmp
jb
clc
add
and
xor
adc
xor
rorl
mov
add
jecxz
es
arpl
push
outsb
dec
xor
pushl
push
push
mov
xor
mov
dec
outsb
imul
cwtl
test
or
daa
sbb
xor
mov
sub
movsb
jle
push
pushf
mov
jecxz
push
xchg
mov
or
or
mov
rorl
int3
test
push
sbbb
in
sbb
mov
and
or
insl
neg
mov
mov
fidivs
in
adc
cmp
and
jns
jmp
fwait
iret
out
jg
xor
fimull
xchg
xchg
and
leave
mov
push
pop
roll
test
jl
lcall
cltd
testb
push
insl
adc
mov
into
and
xor
cltd
pushf
xor
sub
mov
fiadds
cmp
adc
dec
je
mov
aam
and
push
push
fcompl
dec
js
aaa
xor
data16
aas
iret
jbe
repz
lods
mov
xorl
cmp
jbe
pushf
add
in
inc
jns
or
add
xor
mov
std
jne
mov
adc
and
mov
inc
sbb
mov
imul
or
lods
xchg
cmp
mov
clc
stc
cs
std
push
scas
mov
scas
push
hlt
xor
dec
pop
mov
inc
jbe,pt
xor
xchg
pushf
xor
cmp
rorb
sub
in
pop
in
mov
pop
sbb
or
negl
mov
push
pop
sbb
cltd
ret
int
and
aaa
push
sarb
mov
mov
and
and
pop
sbb
inc
dec
jbe
in
cltd
pop
and
mov
or
dec
or
popa
ss
rorb
pop
sar
jno
roll
dec
ret
push
push
rcr
xchg
push
xor
fnstcw
rorb
xchg
pop
add
shl
or
addr16
fs
sbb
sbb
popa
pop
in
sbb
stc
or
pop
push
mov
xchg
sbb
testb
push
or
ret
scas
xor
pop
and
push
push
repz
sub
inc
adc
nop
test
dec
nop
sub
add
insb
lret
push
mov
push
jae
push
jno
int3
hlt
ds
jg
or
mov
mov
pop
jmp
shll
lock
iret
call
mov
shll
add
jns
add
ss
mov
aas
and
add
sbb
lods
adc
xor
fnstsw
jno
mov
xchg
xchg
adc
clc
or
je
adcb
pop
iret
stc
inc
jmp
cmpsl
leave
xchg
inc
std
dec
mov
adcl
pop
cmp
push
movhps
stos
lret
pop
dec
pop
rcl
ret
xor
push
dec
in
mov
inc
xor
mov
xchg
fistps
xlat
xor
repnz
hlt
push
jecxz
dec
aaa
push
outsb
jb
notb
inc
imul
or
adc
xchg
sub
mov
in
cmp
lcall
mov
inc
push
add
push
aad
jecxz
cmp
decl
jmp
mov
aas
sbb
or
sahf
dec
pop
jge
shrl
clc
mov
outsl
dec
notl
sub
in
rcl
dec
inc
and
ss
cmpsb
push
js
jae
push
lods
movsl
adc
shll
gs
std
es
sbb
lods
jl
xor
outsl
jb
pushf
push
jo
jecxz
push
fldenv
lea
lret
jbe
movsb
xor
adc
pop
dec
icebp
lods
dec
into
push
push
out
ja
adc
inc
loope
mov
cmp
test
popa
xchg
adc
insb
sub
inc
sbb
xorl
jg
subl
les
sbb
inc
test
fldt
and
xchg
xor
cli
es
and
out
daa
mov
fcmovb
maxps
push
pop
add
sbb
jecxz
mov
adc
out
fidivl
cmp
das
jne
xchg
mov
add
push
mov
orl
mov
sbb
in
movsl
into
xchg
mov
mov
jne
pop
bound
iret
rcl
popf
das
sub
inc
push
ja
test
pop
add
insl
and
fstpt
dec
scas
dec
js
out
inc
lea
sbbl
jge
push
xor
mov
imul
cmc
jno
call
movsl
push
sub
sbb
iret
fidivl
into
leave
mov
jae
xchg
and
dec
loope
insb
or
push
daa
add
sub
test
dec
jl
cli
jbe
cli
cmp
scas
mov
adc
pop
div
adc
ret
jl
cli
insb
dec
or
add
or
mov
outsb
cmp
cmp
sub
insl
cmpsl
xor
jbe
or
dec
and
cmp
jnp
ficoml
test
sti
and
and
dec
mov
or
stc
inc
outsb
cmp
test
add
push
cmp
jbe
into
sahf
add
rol
arpl
jb
or
fidivrs
jge
push
out
jae
mov
dec
cmp
enter
hlt
xchg
ja
mov
test
jne
xchg
cmp
mov
mov
and
cmp
into
popf
fisttpll
and
inc
das
scas
xor
mov
mov
in
out
pushf
mov
out
or
sbb
repnz
aas
push
add
pop
xor
sub
mov
sub
mov
mov
sub
movl
or
xchg
sbb
gs
fwait
or
popf
jno
pop
out
in
and
xorl
mov
mov
push
xor
mov
les
xlat
adc
cmc
add
push
lods
andb
insb
icebp
pushw
mov
mov
scas
fwait
dec
fucomip
popf
bound
xor
ss
jmp
enter
cmp
dec
scas
push
in
inc
fnstcw
mov
and
dec
rol
movsb
jl
dec
and
cmc
add
inc
negl
out
jmp
jbe
imul
push
inc
cmc
ret
inc
lds
daa
je
lret
and
pop
movsb
scas
int3
mov
adc
daa
jns
gs
push
inc
mov
sub
dec
loope
js
fwait
loop
into
enter
stc
jo
or
mov
add
add
push
js
jne
xchg
scas
mov
pop
inc
cmp
lret
add
cmp
je
out
decb
pop
mul
cmpsl
jbe
pop
out
testb
jg
sahf
xchg
or
repz
dec
jg
pop
sbb
xorb
std
pop
jns
dec
bound
xchg
test
inc
add
clc
arpl
jp
add
fsts
cmp
es
adc
addr16
addb
sbb
dec
sub
jmp
jno
xor
lcall
pusha
ds
ja
mov
bound
dec
popa
sti
icebp
push
or
cwtl
sahf
mov
mov
data16
jl
mov
nop
mov
lods
sbb
dec
stos
sarb
movsb
movsb
xor
inc
and
and
loop
repz
add
in
flds
pop
sbb
xchg
loopne
and
ja
test
cmp
fidivrs
inc
sbb
adc
movsb
push
xchg
rcr
mov
aam
sub
mov
cmpsl
in
lea
mov
sbb
mov
sub
mov
movb
dec
aad
mov
mov
jo
fldcw
mov
inc
repnz
ss
std
or
xchg
cs
pop
sbb
hlt
loopne
inc
stc
fwait
cli
mov
pop
jle
dec
and
scas
mov
adc
or
jg
push
lret
pop
shrd
pop
addl
out
cmp
push
leave
push
jae
inc
int3
shrb
mov
repnz
data16
and
sbb
xchg
push
cmp
push
cmp
js
push
sti
stos
mov
cltd
push
hlt
stos
das
imulb
test
lea
jge
jmp
fimuls
mov
xor
cltd
xchg
divb
push
and
xchg
clc
adc
mov
or
or
imul
ds
stos
clc
stc
sub
cli
sub
lock
out
add
sti
cli
std
jno
daa
sbb
sbb
cmovs
lret
adc
imul
imul
sbb
add
fwait
sahf
fildl
loop
pop
test
jne
add
std
or
cmp
andb
lds
xorl
clc
jle,pn
stc
pop
roll
shl
jmp
mov
jne
outsb
cmp
shlb
dec
sahf
insl
lahf
pop
xchg
cmpsl
xchg
push
dec
mov
and
arpl
jmp
add
jo
fadd
ret
subb
test
or
xchg
repnz
imul
sub
mov
int3
movsl
jmp
cmp
mov
or
xlat
stc
sbb
dec
and
push
xor
or
jnp
aaa
mov
or
sarl
cmp
or
dec
aas
ret
mov
je
ss
lods
pop
stc
cli
insb
or
or
mov
add
inc
pop
inc
clc
shll
mov
icebp
sbb
mov
iret
loop
add
es
and
popa
adc
sbb
cli
or
rcrl
andnps
mov
and
das
aad
push
pop
in
ja
dec
fwait
mov
sbb
pop
popa
mov
mov
mov
xor
mov
xor
loope
movb
sarl
fisttpl
jns
ds
and
add
xlat
inc
xchg
loopne
popf
divl
xchg
inc
mov
push
mov
popf
cmp
or
and
mov
mov
mov
jg
and
sahf
icebp
ja
scas
jg
fnstcw
aad
enter
or
or
push
xor
adc
loope
int3
xor
js
push
das
outsb
pop
popa
jle
cmp
adcb
in
add
cwtl
insb
sub
dec
xor
aad
mov
adc
pop
loope
jecxz
stc
out
dec
insl
push
inc
push
sbbb
mov
daa
adc
fwait
sbb
mov
pop
adcb
sub
pushf
sbb
call
mov
testb
inc
sbb
dec
sub
xchg
lea
outsl
inc
iret
nop
mov
jns
test
cli
loopne
imul
inc
inc
pop
jl
dec
fildll
mov
sub
shrl
xchg
pop
xchg
test
dec
add
push
rcl
scas
jl
fnstcw
adcl
mov
pop
push
sub
or
add
cmp
jnp
subl
ffreep
jb
nop
mov
xchg
jnp
xchg
out
aaa
mov
lods
ret
xor
cld
leave
je
jp
rcl
xor
imull
push
mov
mov
outsl
inc
mov
cltd
stc
mov
out
mov
loopne
push
into
adc
inc
pop
sbbb
rcrb
leave
or
inc
adc
scas
push
cmp
adc
mov
mov
sub
call
ljmp
lea
popa
dec
mov
scas
aas
roll
divl
adc
popf
adc
push
xorb
je
dec
aam
pop
ret
add
sbbb
xchg
pop
enter
stc
leave
mov
jl
dec
sub
and
add
pop
lods
cmp
mov
pop
in
movsl
loope
inc
add
dec
mov
jge
dec
test
rolb
jmp
imul
cmpb
cmp
xchg
pop
jle
test
stc
aaa
push
sbb
jg
mov
movsl
fwait
lods
in
mov
fistpll
mov
int3
popa
sub
cs
lock
push
push
cmp
add
mov
lock
push
and
in
add
es
fisubs
xor
mov
movl
imul
shl
repz
push
jb
bound
or
test
lahf
mov
jle
xchg
cltd
mov
sub
out
dec
pop
jge
jmp
loope
push
push
lea
dec
dec
xor
push
mov
inc
pop
mov
mov
pop
mov
sub
mov
sub
adc
mov
pop
sub
mov
movsb
sbb
out
push
mov
mov
inc
int3
mov
xchg
iret
cmc
test
cmp
and
push
movsl
jecxz
int3
pop
cmc
loopne
cmpsl
pop
rcrb
outsl
loope
ss
and
in
sub
add
mov
rolb
mov
dec
leave
add
call
mov
pusha
fdivs
mov
gs
sub
rcrl
add
in
leave
dec
sarb
enter
push
lcall
sbb
pushf
cmovge
arpl
xor
cmp
push
outsb
push
insb
rolb
mov
inc
jle
lds
push
adc
mov
dec
cmp
adc
movsl
adc
push
adc
cmpsl
inc
or
add
inc
or
or
outsb
cmc
js
test
data16
mov
fmull
mov
pop
xchg
cmp
in
push
js
xchg
adc
in
test
cltd
sbb
and
rorl
xlat
or
xor
lret
sbb
sbb
add
imul
ljmp
push
mov
cld
mov
ds
dec
lock
movsl
popl
or
ret
xor
and
mov
mov
push
mov
jnp
jg
adc
cmpsb
shrl
test
lock
pop
adc
out
jns
cmp
ret
sbb
jge
lret
sub
xor
aas
cld
push
jnp
std
cwtl
ret
pop
outsl
insl
sarb
adc
inc
sub
negl
ss
in
dec
or
xchg
or
ficomps
and
fdivrl
lods
and
inc
test
std
pop
cmpsl
mov
sbb
lock
mov
testb
push
mov
mov
cld
mov
dec
adc
not
xchg
movb
cmp
add
push
sbbb
aad
arpl
les
sbb
mov
cwtl
and
push
pop
ret
ret
pop
sbb
in
add
dec
jg
inc
push
stos
mov
add
xchg
sub
out
and
mov
mov
jle
pop
pop
mov
push
xlat
add
xchg
popa
lds
sbb
cmc
sbb
and
add
mov
or
lahf
cmc
sub
push
pop
adc
pushl
dec
test
fsubrl
cmp
add
adcb
fwait
jg
daa
xor
mov
out
js
mov
js
mov
into
pop
out
lret
xchg
dec
jbe
dec
and
lds
adc
jbe
jb
xchg
sbb
xor
jmp
cmp
sub
push
test
subb
loop
xor
js
fcomps
test
popa
out
xchg
inc
cmpsl
jne
mov
test
rorl
sarb
mov
sarb
test
mov
out
pop
scas
ret
aad
adc
or
dec
int3
out
or
movsb
scas
dec
popa
mov
sbb
mov
pop
scas
add
push
mov
fwait
push
push
or
mov
xor
shrb
xor
push
xor
inc
nop
insl
xchg
inc
into
mov
mov
and
mov
lods
jb
test
xor
or
sub
or
popf
jb
cmpsl
pop
mov
mov
inc
push
and
addr16
jl
fistpl
dec
or
sbb
adc
or
out
js
sbb
shrl
push
stos
leave
sub
mov
ds
mov
dec
cmp
lods
mov
aad
add
inc
push
jb
fnstcw
cmpsb
icebp
push
repnz
cltd
sbb
and
ljmp
xor
push
loope
mov
push
mov
jecxz
xor
lods
test
mov
sahf
aas
loope
fistl
xor
jl
xor
fcomps
or
out
and
push
adc
scas
and
adc
shrl
xor
mov
mov
loope
jge
cmc
fdivl
sbb
add
fwait
add
pop
mov
aas
add
ret
stc
aam
sbb
mov
cmp
sub
lcall
mov
stc
pop
adc
mov
inc
fidivs
aas
mov
xchg
or
leave
mov
pop
push
addr16
xor
les
inc
or
xchg
sub
mov
dec
sub
nop
and
xchg
xchg
mov
xchg
push
std
jmp
mov
jp
and
dec
push
jp
ficomps
push
loope
add
push
fidivl
pop
or
and
push
ret
testl
sbb
jl
xchg
pop
xor
dec
es
ret
ret
inc
mov
jecxz
xchg
ja
outsl
mov
or
sbb
and
shr
mov
push
xor
xor
mov
loopne
push
hlt
mov
jnp
jecxz
pop
addr16
in
mov
sub
cmp
lahf
test
mov
movsb
cmp
scas
and
inc
out
in
xlat
jae
xor
jae
int3
div
jl
sbb
xor
xor
rclb
or
fwait
cltd
sub
cs
sbb
xchg
and
lahf
dec
fs
dec
int3
or
stc
push
cmp
je
rcrb
add
fiadds
jmp
mov
xchg
and
pop
idivb
xor
dec
mov
cmpsl
mov
movsb
sbb
push
ret
iret
cmp
and
mov
dec
jne
or
fnstcw
dec
and
ljmp
mov
hlt
cmc
jae
dec
mov
loope
popf
sbb
pop
popf
dec
pop
sar
stos
and
sarl
push
loope
adc
mov
xorb
js
dec
les
fs
jno
mov
subl
scas
sti
out
sub
clc
pop
outsb
movsb
sub
mov
stos
std
mov
mov
and
jg
mov
sti
inc
lret
sbb
xchg
mov
push
and
filds
stos
in
shlb
sbb
outsl
cmp
adc
in
shl
psrlw
xchg
push
rolb
cld
inc
aad
and
in
jns
loop
lds
xlat
sub
mull
pushf
test
fstl
jne
push
mov
stos
rcll
int
sub
std
frstor
xchg
cmpsl
daa
dec
xchg
imul
in
push
add
adc
icebp
gs
movl
popa
daa
push
negb
jg
or
iret
das
call
cmp
jp
cli
mov
push
testb
mov
sarl
mov
add
repnz
in
outsb
cmp
or
pop
divb
subl
loope
pop
jns
and
cmp
xchg
std
adc
ljmp
mov
stc
pop
mov
lock
jne
insl
dec
adc
cmpsl
pop
fimuls
adc
jae
mov
or
jecxz
cli
add
mov
shl
cmpl
arpl
mov
push
xor
dec
insb
fldt
sbb
rcrb
into
les
jmp
sbb
adcw
shll
xchg
es
ds
pop
cli
mov
fidivs
stc
rcr
mov
push
lock
lret
loopne
out
movsl
jg
add
ja
sub
mov
jp
shrl
mov
fdivs
jp
mov
js
mov
dec
cmp
and
jbe
fstpl
jb
sbb
and
sbb
pop
cld
sub
lea
and
loop
fnstsw
inc
push
xor
xchg
xor
jns
sbb
call
aad
setp
adc
sub
cmpsl
out
sub
mov
push
adc
fnsave
insl
fsts
ret
movsb
je
mov
push
ficoms
nop
sahf
mov
adc
push
ss
mov
jno
mov
mov
in
push
push
xchg
mov
pop
mov
popf
pop
int
imul
mov
push
mov
mov
add
imul
lea
stos
cmp
das
stc
xor
push
fistl
shlb
pop
xchg
cmp
into
pop
sbb
dec
pop
jg
cmp
rcrb
mov
mov
out
in
sbb
fbstp
scas
xor
push
push
cmp
mov
gs
xchg
fwait
in
jmp
push
mov
xchg
loope
ret
das
dec
dec
int
test
mov
call
xchg
out
or
mov
loop,pn
or
arpl
repnz
inc
inc
push
push
add
sbb
dec
pop
in
repnz
mov
mov
sub
add
xchg
add
xor
or
add
stos
fimuls
mov
or
sahf
imul
mov
adc
inc
cmp
or
sahf
mov
mov
pop
nop
dec
mov
fsubrs
or
jne
loope
jmp
dec
scas
int
aam
add
mov
inc
out
pop
push
pop
dec
or
outsl
xorl
scas
dec
push
xchg
cmp
leave
xchg
add
jne
ret
xor
cmp
jbe
lahf
fcmovnbe
jb
pop
mov
cld
mov
andl
repz
xchg
and
andb
into
aad
ret
rorl
dec
sub
xchg
stc
pop
incb
rorl
xchg
dec
add
xor
mov
sarb
insb
jge
clc
mov
aad
sbbb
cwtl
dec
roll
cwtl
xor
lods
push
inc
lea
jl
mov
test
add
int
in
pop
movsb
dec
cmpsl
icebp
movsl
imul
dec
lahf
jmp
mov
and
xchg
jo
mov
std
out
mov
test
pop
xor
add
in
adc
push
movsl
dec
scas
adc
xor
daa
bound
dec
dec
fs
repnz
dec
inc
ljmp
es
inc
rolb
or
mov
pop
dec
vmptrst
hlt
and
sub
ss
fstpt
das
adc
or
xchg
jns
lock
outsb
shl
scas
arpl
dec
out
cmp
scas
xor
jno
mov
mov
sbb
pop
test
out
les
inc
cmp
adc
pushl
jmp
mov
cltd
cmp
mov
push
cmp
pop
sub
mov
mov
sbb
stc
dec
dec
loopne
fdivl
std
lods
jno
fprem1
test
add
lret
mov
add
in
xchg
add
mov
cmpsb
push
push
inc
mov
and
jbe
jnp
xchg
mov
xor
mov
inc
out
andb
aas
jno
mov
push
sub
cmp
into
and
add
shrl
adc
pop
jle
jae
fs
shl
ret
sbb
xchg
jmp
inc
out
das
push
push
int
lea
adc
lret
pushf
nop
sbb
pop
mov
lds
loope
sbb
fs
mov
inc
nop
mov
sbb
arpl
in
sub
mov
icebp
adc
xchg
sbb
push
push
pushf
mov
pop
lret
aad
or
sbb
frstor
hlt
sbb
scas
outsl
inc
arpl
repz
pushf
out
pop
jecxz
ss
insb
repnz
xchg
ljmp
push
rcr
test
repnz
inc
mov
stc
pop
mov
incb
pop
dec
sbbl
mov
or
adc
inc
xchg
add
xor
dec
sbb
adc
lock
cwtl
pusha
sbb
add
aas
cmp
jp
mov
sbb
add
sbb
call
call
shl
gs
cmp
std
notb
je
mov
add
dec
push
jl
push
push
pop
faddl
pop
pop
sti
lret
add
loopne
data16
icebp
into
shrl
or
cld
pushf
imul
stos
sbb
scas
leave
iret
or
lods
arpl
fs
mov
jo
sbb
js
repz
sub
xchg
test
push
cmpb
gs
aaa
xor
jge
mov
test
test
ja
push
fnstsw
aas
and
jae
jmp
fldl2e
and
jae,pt
mov
jae
cld
hlt
out
mov
inc
and
in
pop
push
scas
pop
dec
scas
mov
lahf
movsb
nop
xchg
fildll
cmp
outsl
and
rcl
cmp
shl
or
xchg
aad
scas
popa
cmp
or
push
pop
lock
fwait
movsl
sbb
leave
or
test
jl
or
adcb
cmp
jns
sahf
push
and
shrl
add
sbb
pop
mov
push
adc
push
out
jle
xlat
dec
cmpsb
pushf
sbb
push
mov
sbb
mov
les
stc
dec
insl
fisubl
lds
pop
icebp
je
roll
leave
or
daa
fnstsw
es
cmp
mov
jp
inc
ret
in
sub
bsf
imul
or
jl
aad
push
dec
jmp
std
rcrb
push
imul
rorl
push
pop
push
mov
jne
mov
popf
out
jl
push
xorl
push
adc
or
mov
cli
movsl
iret
loope
imul
mov
dec
pusha
out
adc
sbb
or
inc
mov
xchg
loope
mov
mov
dec
dec
lods
lods
mov
xor
outsb
jo
jne
fisubrl
add
lret
icebp
pop
mov
jae
or
js
dec
popa
cmp
insl
adcl
arpl
and
sbbb
ret
mov
or
mov
xor
sbb
ret
pop
mov
xor
dec
lret
mov
xchg
cs
inc
jmp
rolb
dec
aam
stos
adc
pop
jecxz
cmp
mov
and
dec
std
cld
mov
int3
xor
lcall
shlb
push
jecxz
bound
mov
or
lea
sahf
pop
jmp
push
xor
jge
arpl
testl
aas
out
jg
cld
lds
mov
xchg
mov
dec
mov
and
push
iret
mov
lret
mov
xor
sbb
in
lcall
xor
and
mov
xlat
xchg
xor
xlat
pop
and
pop
adc
arpl
mov
test
jnp
in
pop
pop
xor
imul
inc
xchg
ljmp
mov
clts
jge
call
iret
mov
mov
sub
xchg
nop
mov
xor
inc
inc
sbb
mov
fcomi
mov
imul
cmpsb
mov
iret
pop
movsl
scas
das
aad
jnp
subl
leave
xor
dec
inc
out
xor
int3
iret
or
mov
int
cmp
mov
lret
mov
stos
ja
rclb
inc
jne
inc
shrb
pop
inc
idivl
popf
mov
adc
adc
outsb
loop
repz
test
jnp
or
andl
mov
scas
xchg
loopne
sbb
std
cmpsb
xchg
dec
lret
jnp
or
addr16
lods
lds
pop
fistpll
call
mov
fidivrl
jns
imull
pop
imul
jmp
add
rorl
fnstenv
jns
push
jo
cltd
inc
mov
pop
push
lahf
push
pop
sbb
test
iret
cmpsl
adc
bound
rorb
cmp
jns
fistl
inc
add
aam
loop
enter
aam
sbb
pop
imulb
inc
stos
fnstsw
fiaddl
dec
lahf
xchg
std
pop
lret
push
pop
stc
std
in
mov
mov
call
jge
rolb
and
sub
sub
pop
movq
pop
lahf
or
mov
add
sbb
xor
cmpsl
lods
test
jno
lret
xchg
add
jnp
cmc
ret
scas
pop
mov
int3
ljmp
fimuls
pop
push
or
jnp
dec
test
push
sti
aad
sbb
mov
jl
xchg
shl
pop
hlt
pop
popa
call
loop
fiadds
movsb
sub
mov
bound
ds
pop
pop
inc
arpl
scas
scas
pop
cmp
mov
push
adc
dec
subl
dec
xabort
xlat
fdivs
cmp
sub
xchg
fsub
fistpll
aaa
inc
dec
scas
fidivl
hlt
lret
or
jnp
lods
fldl
scas
push
xor
int
jno
jmp
pop
call
loopne
push
int
pop
lcall
mov
hlt
jne
fwait
inc
mov
inc
cmp
call
lock
xchg
xor
mov
add
jbe
out
adc
stos
test
outsb
sahf
lods
inc
cmp
cmp
sti
mov
daa
lods
mov
dec
insl
lret
dec
loop
dec
popf
pop
adc
outsl
clc
pop
sbb
xor
pop
ret
push
outsl
mov
pop
sub
pop
jl
mov
inc
xchg
adc
repnz
out
push
lret
ja
push
xlat
ja
hlt
jp
ljmp
push
add
sub
fstpl
aaa
mov
repz
mov
push
and
icebp
inc
pop
shr
mov
shlb
popa
ja
arpl
and
popf
xor
jno
push
mov
leave
sbb
mov
sbb
incb
xlat
in
and
sbb
mov
test
fidivs
ret
lret
dec
adc
xchg
push
and
out
jne
subb
xchg
push
pop
lea
test
or
stos
xor
add
idivb
in
andb
pushf
and
jbe
adc
push
mov
sub
test
xor
lea
shrb
jmp
movsl
divb
gs
test
pop
push
shlb
push
sti
pop
jns
lret
hlt
xchg
cmp
lret
insb
scas
stos
movsl
add
mov
cmc
cs
pusha
or
in
pop
pop
lret
xlat
aam
xchg
repz
in
cli
cli
pop
mov
int
pushf
lea
add
divl
movsb
jg
cwtl
push
out
rsm
fsubrl
push
shl
dec
shlb
pusha
cmp
out
movsl
cs
jg
loopne
pop
xchg
popf
iret
push
rcpps
and
adc
sbb
cmp
pushf
mov
lahf
inc
xorl
xchg
bound
mov
adc
mov
popf
jo
cmc
inc
cltd
js
pop
pop
push
aad
outsb
lret
fwait
cmp
lret
xor
mov
add
dec
inc
pop
sub
push
pop
mov
sbb
test
jno
mov
xchg
and
pop
mov
and
js
and
adc
icebp
iret
sub
cs
sub
pop
out
mov
fsubrs
pop
scas
test
test
sub
inc
xor
inc
clc
imul
insl
push
jns
ficompl
hlt
movsl
psrld
sub
int3
mov
sbb
clc
dec
xchg
push
cmc
xchg
xchg
test
push
or
subb
cmp
icebp
xchg
les
inc
repz
int
ljmp
inc
sub
xchg
lcall
and
xchg
mov
imul
movsl
adc
pusha
decb
sub
jg
enter
icebp
ret
out
add
outsb
xchg
jp
lahf
xor
dec
dec
mov
call
cmp
cwtl
ret
or
mov
cmp
mov
jl
mov
sbb
jns
dec
mov
inc
sbb
popa
fmul
mov
dec
int3
shl
xor
push
add
xor
or
in
loop
inc
sbb
cmpsl
and
adc
cwtl
sbb
arpl
loopne
jb
lahf
push
mov
mov
push
jmp
orl
inc
or
push
mov
jb
xchg
mov
daa
xor
pop
cmp
pop
outsl
repnz
and
adc
call
dec
les
ds
es
arpl
sub
inc
fdivs
das
add
jo
sub
mov
decb
popa
idivb
in
pushf
pushl
pop
sub
xchg
lods
sbb
hlt
xorb
and
jnp
adc
fildl
ret
inc
imul
inc
xor
and
push
lods
xchg
cs
jb
sbb
sbb
gs
out
ret
mov
cmp
aam
adc
lret
xor
repnz
das
stos
dec
cmpsb
je
je
add
adc
insl
jne
loope
sbb
repnz
sbb
mov
loop
pop
popf
inc
sbb
ds
mov
es
mov
sahf
ds
add
iret
pop
shll
jg
lret
mov
mov
push
mull
notl
jle
add
jo
into
push
mov
cmp
cmpsl
mov
and
mov
mov
cmp
pop
enter
ds
push
xchg
data16
idivb
fistpll
cli
sahf
outsb
int
sbb
pop
testl
addr16
inc
pop
fdivrl
loopne
jmp
add
pop
add
js
jnp
out
mov
fcmovne
dec
adc
dec
add
sbb
in
lcall
shrl
lahf
arpl
aad
xchg
mov
dec
jno
imul
loopne
cmp
repz
and
shr
sub
or
sbb
push
inc
fildll
pushf
dec
lcall
jbe
in
clc
repnz
or
jp
lret
pushl
andb
pop
adc
add
cs
cmp
pop
stos
dec
loop
sub
push
faddl
nop
jne
mov
shll
rcr
loopne
push
pop
stc
loopne
hlt
je
outsb
repz
repz
rcr
fisubrs
outsb
pop
push
stos
popf
inc
pop
jae
push
sbb
lods
pop
cmp
push
arpl
add
xchg
cmpsb
cmp
repz
icebp
cmp
movsl
push
xchg
lods
mov
loope
iret
push
mov
mov
lds
sub
jge
fsqrt
sbb
push
or
mov
mov
sarl
loopne
push
inc
pop
xchg
jg
fstpt
or
push
out
xchg
hlt
sub
into
push
or
jmp
xlat
loope
or
out
adc
pop
sub
mov
es
inc
mov
pop
sub
or
lods
fdivrl
jmp
xor
jg
in
sbb
mov
push
lret
les
nop
stc
pop
push
mov
or
ficoms
jae
mov
jnp
mov
jo
xchg
lods
scas
icebp
sbb
rolb
ljmp
aam
popa
insb
roll
inc
lods
fldcw
das
jge
push
mov
int
pmaxsw
cmp
int3
ljmp
dec
int3
adc
and
xor
mov
dec
mov
sub
cs
out
mov
sbb
rcrl
pop
dec
mov
mov
cmp
inc
cld
xor
push
ficomps
cltd
jge
cld
cwtl
outsb
mov
mov
cmp
push
push
add
jo
das
mov
cmp
or
enter
call
rorl
and
push
lahf
sarl
ja
sub
lock
add
ds
sub
shl
rclb
adc
inc
movsb
iret
in
or
fstl
sar
pop
pop
es
imul
out
cmpsb
pop
call
xchg
inc
out
jne,pt
xchg
add
mov
xor
cmpsb
lock
dec
push
out
hlt
and
je
mov
and
mov
inc
enter
lea
fistpl
test
xlat
jge
ret
xchg
out
add
mov
xchg
adc
or
out
jecxz
out
insl
mov
inc
push
imul
sub
movb
out
in
aam
inc
mov
leave
xor
cwtl
xor
or
scas
mov
mull
divl
push
mov
data16
pop
mov
add
jg
fwait
aad
mov
pop
into
pop
or
cmc
mov
sbb
iret
pop
insl
push
mov
or
lock
fsubrp
hlt
jge
cmp
fdivrs
ret
iret
sbb
pop
loop
and
mov
jmp
bound
cld
js,pn
fistpl
rclb
jne
sbb
cmp
jb
add
cmp
mov
push
out
popf
mov
je
mov
xchg
test
ja
iret
es
pop
jmp
pop
add
je
mov
push
mov
in
pusha
lahf
adc
dec
jecxz
sarl
add
mov
shrb
bound
jb
push
push
add
jge
fisubrl
faddl
mov
stos
pop
pop
pop
mov
call
or
loopne
fistpl
pop
mov
rorl
js
mov
aad
or
xchg
gs
sahf
jg
es
pop
and
std
push
mov
cld
cmp
aam
pop
repz
cmp
clc
inc
rcrb
std
sbb
cmp
fcmovbe
pop
dec
jg
lret
pop
mov
call
dec
aad
add
dec
out
enter
or
lock
or
push
and
mov
mov
xchg
mov
cmp
add
ja
aas
ds
lret
push
scas
mov
xor
int
fidivl
loopne
and
mov
scas
mov
mov
push
or
xlat
or
add
dec
fsubp
aam
jmp
push
js
movsb
dec
aad
out
pop
pop
scas
aam
test
fs
cmpsb
lcall
sbb
idivb
sbb
nop
jl
outsl
push
rcll
mov
xor
cld
clc
shll
xor
outsl
sti
sub
adc
cmp
mov
shlb
adc
mov
loop
mov
subb
pop
adc
mov
mov
subb
jle
pop
dec
sbb
out
and
sahf
lea
dec
inc
cld
std
lahf
push
scas
lahf
sub
xchg
ds
xor
push
jl
pop
or
adc
ret
rcrb
inc
inc
int3
arpl
mov
adc
scas
add
or
sub
stos
nop
fsts
repnz
and
and
mov
outsb
sti
in
xorl
mov
ror
mov
sbb
mov
and
adc
loope
roll
jb
jmp
daa
lahf
xor
mov
movsb
fsubl
push
hlt
imul
mov
fs
jbe
pop
movsb
push
mov
dec
mov
xchg
xor
jecxz
dec
add
fwait
sbb
add
shrl
movsb
sbb
xchg
sub
mov
push
lret
ja
inc
push
bound
aad
lods
lods
push
mov
mov
cwtl
ljmp
out
and
push
pop
mov
cltd
sti
fmull
dec
adc
jl
daa
loop
movsb
or
pop
mov
dec
in
adc
pop
stos
adc
shl
or
inc
jge
popf
aas
push
push
adc
jb
add
fnstcw
adc
leave
xor
push
imul
add
aam
stc
push
mov
jns
or
xchg
fisttpll
jbe
cmp
mov
push
aas
ficoms
negb
cmpsb
add
roll
pop
insl
mov
sub
in
addr16
clc
xchg
in
scas
nop
rol
inc
push
sahf
and
pop
xchg
ja
sub
fldenv
lock
decb
scas
cmc
mov
dec
fs
fldenv
mov
shr
mov
sahf
add
pop
pop
in
sbb
push
xor
rcll
outsl
cmpsb
inc
addr16
and
mov
mov
push
in
jp
dec
fwait
and
mov
js
or
adc
cmp
sbb
jns
cmc
gs
pop
xor
mov
into
jmp
rorb
pop
adc
int3
jle
outsb
popa
fwait
pop
or
insb
pop
bound
andb
mov
outsl
adc
or
pushf
xor
push
jp
and
sbb
xchg
cld
das
mov
stc
outsl
div
sbb
dec
xchg
pop
and
scas
push
jns
or
mov
jns
lods
cmc
dec
jae
insb
pusha
roll
mov
cmc
loop
pop
lret
mov
push
ss
mov
leave
and
cmp
andl
mov
mov
mov
push
push
das
jno
jle
loope
and
and
xor
ja
mov
inc
and
mov
pop
or
int
jnp
jge
cmpsl
dec
jb
inc
add
scas
rcll
cmc
or
jmp
add
sti
xor
sbb
inc
ljmp
sub
and
ljmp
push
push
mov
ss
mov
imul
cmp
mov
bound
cmc
sub
ss
add
xchg
lcall
pop
adc
lret
or
sarb
sub
or
fcmovnu
fs
in
arpl
testb
push
stos
inc
mov
icebp
adc
bt
push
das
fcompl
xor
fisubs
xor
mov
int3
xlat
adc
and
aam
lods
xchg
cmp
mov
mov
inc
fisubrs
ja
cmovne
loopne
js
ror
outsb
lods
cmp
popa
xor
push
ss
int
jmp
adc
call
adc
lret
ja
fisubrs
out
dec
ror
mov
pop
faddp
mov
pop
mov
jl
mov
jmp
je
sarl
movsb
arpl
mov
push
std
mov
dec
sub
clc
sbb
dec
loopne
or
test
gs
mov
hlt
je
mov
pop
in
pop
and
iret
jno
aad
push
add
adc
jne
xchg
ss
negb
out
cmp
mov
xchg
popa
jbe
nop
adcl
aas
shlb
mov
and
push
scas
push
mov
jbe
out
daa
inc
enter
les
jb
popf
fsubl
add
mov
add
inc
xchg
out
aas
cld
sahf
and
dec
xchg
jns
aaa
cli
jae
lret
add
ficompl
ljmp
and
dec
sub
sbb
pop
dec
adc
jle
aad
sbb
clc
push
bound
mov
outsl
shl
xor
ds
jne
std
addr16
aad
inc
inc
mov
adc
push
dec
ss
js
in
clc
cld
pop
pusha
inc
test
adc
ds
notl
cltd
cmp
imul
in
std
pushf
or
daa
test
popf
lret
push
cmc
movsl
data16
mov
mov
mov
push
inc
mov
pop
outsl
loope
xorl
sahf
and
daa
testl
inc
sub
pop
test
pop
pop
pop
add
jle
and
sbb
daa
and
incl
adc
pop
rolb
dec
arpl
outsb
rcll
mov
call
or
enterw
fcoms
mov
dec
fldt
sbb
cwtl
sbb
into
mov
je
inc
in
mov
push
and
aas
cld
xchg
out
lods
stos
ret
pop
js
jmp
loop
mov
int3
aaa
jge
cmp
adc
loopne
xchg
lcall
pop
push
nop
push
xchg
imul
outsb
dec
les
pop
jae
scas
adc
add
call
andl
scas
adc
push
das
add
loop
push
hlt
inc
xchg
cwtl
les
xchg
out
sbb
xor
loopne
xor
adc
cld
sub
cmp
inc
out
adc
lcall
lock
popa
mov
mov
stc
enter
ret
ret
clc
push
out
rcl
in
fsub
jge
jmp
jge
paddsw
adc
xchg
shll
add
jb
xor
inc
outsb
pop
mov
ficomps
loope
aad
sub
fbstp
jne
cld
push
movsb
dec
stc
pop
movl
adc
blsfill
mov
les
int3
popf
add
push
inc
out
mov
in
push
call
aam
inc
add
jb
mov
icebp
xor
mov
pop
or
push
ret
shlb
mov
bound
xlat
mov
bound
movsl
cmp
sbb
lds
pusha
cmp
dec
es
repnz
js
repz
jl
pop
loop
mov
or
jbe
rcr
shrl
or
mov
daa
sub
mov
sbb
inc
insl
and
inc
mov
mov
fidivrl
cmpb
push
jg
push
mov
or
sti
cmpl
insl
pushf
cli
cli
mov
sbb
push
mov
int3
pushf
lea
mov
xchg
cmp
jle
out
sub
mov
jae
cld
cmp
push
dec
inc
mov
mov
lcall
jno
movsl
das
mov
stos
jmp
ret
push
and
jp
sub
pop
xchg
pop
insl
jp
jmp
jmp
nop
pop
jns
push
jbe
jne
test
mov
jbe
mov
clc
jae
ficompl
inc
in
sbb
scas
out
mov
lods
daa
shrl
mov
lret
mov
daa
lcall
jno
int3
add
mov
in
cld
aad
xchg
das
mov
test
insl
popf
add
mov
mov
push
jg
jecxz
mov
fwait
ljmp
loop
sub
cmp
inc
pop
push
pushf
rorb
hlt
pop
cmc
adc
into
sub
jmp
jbe
hlt
cltd
add
into
push
daa
and
pop
sub
jecxz
jge
adc
cmp
dec
push
cmp
scas
inc
mov
xchg
xchg
daa
ret
test
dec
xchg
mov
adc
or
inc
pop
and
cli
jnp
das
add
sub
push
bound
insl
inc
sub
cmp
mov
pop
add
inc
sub
mov
mov
scas
cmp
lahf
ljmp
fcoms
and
enter
ret
ret
jns
dec
and
sar
lahf
mov
mov
outsl
push
sub
pop
jp
mov
jmp
cli
mov
add
ljmp
cmpsl
fcom
testb
aad
pop
popf
push
cwtl
inc
adc
pop
out
and
cld
mov
xor
push
arpl
popf
xchg
stos
dec
addr16
arpl
mov
shlb
jecxz
sbb
lock
pusha
dec
inc
cmp
cmp
repz
dec
mov
adc
in
outsl
mov
jne
add
and
gs
sub
enter
pusha
add
inc
ljmp
push
test
xor
fwait
aas
sbb
or
stos
or
test
mov
lret
push
je
mov
mov
jp
testb
lods
sbb
mov
cmp
push
sub
imul
and
mov
or
dec
rorl
jmp
mov
jp
cmp
mov
and
pop
push
in
dec
loop
mov
int
test
ljmp
popa
imul
xor
fs
in
ret
adc
sti
bound
in
sbb
mov
pusha
fwait
sub
xchg
inc
sbb
jno
xor
dec
hlt
or
adc
jo
cmp
dec
mov
and
mulb
or
lods
fwait
or
andl
or
fwait
push
data16
cld
iret
test
jl
in
gs
movsb
bound
in
jbe
cld
push
std
pop
movsl
in
je
addb
fisttpl
inc
inc
orb
pushf
fisubl
mov
mov
adc
adc
cs
ret
les
mov
or
inc
or
inc
push
loope
fdivs
imul
and
sub
xchg
leave
imul
add
and
cmp
sahf
test
stos
add
rcll
out
xchg
sub
je
push
sub
hlt
arpl
mov
xchg
add
jns
insb
ret
mov
push
and
pushf
adc
push
dec
leave
fadd
adc
dec
mov
sub
addr16
lret
push
push
dec
outsb
int
jge
into
mov
and
mov
rcrl
sub
aam
inc
idivb
and
push
addr16
or
push
jo
add
adc
in
das
pop
ret
movsb
push
xchg
pusha
pop
cmp
ljmp
std
xor
mov
xor
xchg
addr16
rcrl
shll
mov
popf
faddp
cli
loopne
jo
sub
fcoms
xchg
add
xchg
xchg
pop
cltd
aad
pop
sti
std
aas
js
inc
js
sub
rcr
lock
jle
repz
std
cmp
inc
or
xchg
out
movl
push
out
push
imul
gs
sbb
pop
lods
sti
in
out
mov
mov
sbb
aad
xor
ljmp
mov
arpl
mov
or
sub
out
rorl
adc
jmp
xor
mov
push
xor
or
ret
enter
outsb
cmc
divl
clc
sub
or
das
sub
ja
orb
jmp
std
lods
inc
mov
das
inc
mov
movsl
pushf
pop
dec
fildl
sub
add
dec
out
das
lea
insb
sub
lcall
sbb
xchg
push
cmc
loopne
mov
lock
or
ja
add
aam
arpl
cmpsb
outsl
je,pn
or
fistpll
jne
loopne
pop
orb
lock
shl
push
ja
or
xchg
dec
fwait
or
in
and
enter
push
das
incl
sbb
pop
pop
invd
mov
pop
movsb
sub
and
test
cmp
dec
dec
outsb
popa
cmp
pop
mov
add
lahf
fwait
jle
pop
notl
mov
shrl
lret
insl
jg
push
popf
mov
daa
daa
mov
xor
outsb
lock
mov
inc
cwtl
rol
mov
iret
xor
cmp
ficomps
aam
mov
add
dec
shlb
cli
inc
imul
bound
dec
mov
dec
scas
aam
mov
sbb
fildl
mov
xor
scas
jp
cmp
add
add
cmp
sbb
mov
lmsw
dec
jecxz
dec
mov
sti
inc
movsb
movsl
jmp
mov
inc
notb
mov
lods
ror
pushf
push
rorb
es
or
std
fnsave
les
je
cmp
ds
jge
repnz
pop
das
push
int
fs
push
xor
movsb
jne
das
rorb
or
and
cld
sub
xchg
jbe
xchg
jge
jl
inc
or
jmp
and
sbb
sbb
xor
int3
into
or
dec
popa
fwait
mov
mov
test
adc
insb
sub
into
lds
js
loopne
xor
outsl
int3
iret
add
pushf
lods
imul
rcrb
mov
stos
stc
into
loope
mov
push
hlt
call
outsl
cmc
xor
and
rcrb
xchg
mov
jne
repz
in
js
shll
pop
subl
mull
lock
bound
cmpb
out
mov
sub
xlat
js
jge
cmp
pushf
mov
lods
call
lcall
clc
or
push
std
pop
stos
pop
pop
push
xlat
bound
push
pop
sbb
mov
pop
andb
lock
mov
sti
pop
cld
fmull
fistpll
pop
sbb
or
push
sbb
push
bound
cmp
ret
out
inc
sahf
sbbb
sarb
mov
xchg
arpl
je
insl
repz
fiaddl
or
add
push
aam
mov
in
sbb
sub
xchg
jg
in
gs
jle
stos
add
pop
and
jmp
test
pop
xchg
lret
sbb
sahf
ja
push
mov
add
jp
es
les
jbe
and
out
xchg
lcall
into
addl
xchg
mov
scas
cmp
inc
push
push
and
mov
fsubrs
outsl
jae
adc
js
rcrl
add
and
insl
pop
lahf
dec
inc
sub
imull
xor
pop
push
sbb
pop
and
pop
ds
adc
pop
bound
subb
aas
sbb
jo
jge
shlb
decl
push
mov
xchg
mov
cli
out
in
rol
sub
or
push
pop
hlt
add
imul
test
dec
ds
jmp
mov
lret
or
push
frstor
xchg
xchg
xchg
or
flds
fmull
iret
les
add
cwtl
enter
ds
sahf
xchg
fdivrl
in
jecxz
inc
out
stc
push
add
cmp
pop
jb
and
mov
jae
inc
in
add
nop
mov
enter
jns
aad
dec
jge
in
pop
sahf
pop
mov
dec
arpl
push
jbe
adc
or
int
out
inc
out
call
push
pop
sahf
fidivs
xor
cmp
adc
pop
push
outsl
repnz
mov
dec
fisubrl
push
pop
loope
test
jecxz
dec
sub
xchg
jmp
jecxz
std
sbb
xchg
mov
sbb
in
imul
pusha
push
lahf
ja
sbb
aam
xchg
loopne
mov
inc
add
jb
pop
incb
adc
lahf
in
ficomps
pop
mov
push
sub
fstpl
idivl
xor
pushf
cmp
pop
xchg
jmp
sub
mov
dec
into
lds
adcl
push
cli
loopne
jns
adc
xchg
or
adc
mov
out
add
jne
dec
negl
lods
iret
push
xor
test
mov
pushf
push
movsl
and
mov
lock
pop
cmpsb
jns
mov
lods
loope
and
and
scas
adc
ja
aaa
leave
jbe
adc
cwtl
inc
imul
movsb
shrl
sub
dec
cmp
cmp
js
jmp
add
int3
push
xlat
loope
push
cld
mov
int3
cmp
in
mov
inc
out
xchg
push
add
mov
out
adc
fs
xchg
inc
push
and
fisubrl
xlat
sbb
pop
push
andl
adc
sbb
xor
adc
mov
jns
fnstcw
out
nop
xchg
je
dec
rorb
cltd
xchg
jns
sub
add
or
push
jg
ljmp
jb
cmpsb
and
dec
push
sub
fiadds
and
jge
cmp
in
pop
xor
add
hlt
xchg
add
cmc
mov
push
outsb
shr
sar
mulb
mov
add
mov
cmc
ret
add
mov
out
pop
sbb
mov
cld
jecxz
xor
ret
fstl
cmp
xor
add
add
outsl
mov
pop
jne
and
outsl
push
dec
cmpsb
or
push
int3
cmpb
or
dec
iret
sbb
adc
mov
dec
pushf
out
push
xor
ss
dec
out
addr16
dec
pop
cmp
adcb
pop
or
jae
dec
in
test
add
cltd
les
nop
enter
mov
add
mov
fidivrl
push
jo
cli
addr16
sarl
lea
out
aad
lea
mov
pop
pop
cmpsl
ss
pop
push
ljmp
dec
jp
jo
test
xchg
cmpsl
hlt
outsl
push
leave
ror
mov
inc
cmp
xor
lret
mov
daa
test
add
mov
sbb
int
mov
decl
ret
lret
arpl
adc
xchg
and
dec
mov
push
mov
adc
dec
or
addr16
mov
sub
test
movsb
xchg
out
stos
imul
lahf
cli
mov
jmp
xchg
mov
in
jl
lea
aaa
insb
rclb
dec
movsl
hlt
into
mov
fnstsw
pushf
jbe
dec
dec
cmc
add
lcall
fldt
mov
jmp
mov
ss
ret
aas
inc
xchg
insb
sarb
movsb
xlat
or
mov
fs
pop
das
sub
push
mov
out
cs
shrb
shrl
popf
int3
adc
into
stos
in
xchg
push
mov
outsl
lahf
lcall
out
xor
sbb
jo
cli
sub
mov
pop
int
test
mov
addr16
fldcw
lret
inc
dec
js
dec
es
push
push
mov
adc
rolb
enter
lret
or
pop
jg
shlb
cld
aaa
flds
sub
insl
mov
mov
add
dec
dec
fld
lahf
call
neg
out
pcmpeqb
push
lret
pop
scas
xchg
scas
xor
xchg
cld
into
mov
jns
out
ds
repz
clc
pop
cmp
adc
into
shl
imul
pop
repz
push
test
jne
mov
lds
push
sahf
ss
lahf
mov
xchg
aaa
pop
mov
cmp
lds
les
imul
xchg
xchg
cmpsb
fistpll
ret
mul
push
int3
addr16
mov
and
loop
lea
or
add
cmp
xor
je
imul
inc
andl
out
rcrl
test
push
add
rdmsr
push
pop
lea
inc
outsl
adc
push
dec
pop
movsl
sbb
jg
iret
xor
xor
cmp
movsb
dec
sbb
cld
sarl
dec
mov
jb
aaa
cltd
mov
sbb
mov
imul
daa
rorl
xor
push
movsl
daa
sub
dec
pop
cmp
fiaddl
rol
push
sbb
bound
call
and
outsb
enter
into
xchg
in
or
mov
mov
xor
outsb
icebp
iret
into
in
cld
mov
mov
mov
sbb
mov
inc
sub
pusha
or
jmp
shl
aam
cmc
popf
stos
ret
fiaddl
inc
fisubrs
mov
push
lds
outsl
jnp
mov
xchg
scas
cltd
dec
mov
mov
lahf
mov
jae
das
mov
dec
add
push
pop
sbb
out
imul
in
dec
rcll
fidivl
mov
mov
mov
add
das
les
rolb
out
dec
xorl
insb
in
imul
jge
mov
stc
and
sbb
xor
mov
aam
nop
lock
mov
lret
inc
arpl
stos
xlat
fnsaves
mov
aaa
mov
mov
push
sub
inc
adc
jbe
sbb
jo
scas
outsl
aad
jge
mov
mov
inc
inc
sbb
adc
jge
fstpt
jnp
mov
daa
mov
ljmp
aad
icebp
mov
pop
sbb
mov
test
cmp
scas
sbb
out
out
mov
or
push
cmp
inc
xor
outsl
add
pop
insb
fidivrl
sbb
mov
push
fnstsw
jl
jns
ja
push
jmp
sti
add
inc
les
loopne
test
arpl
inc
clc
or
push
js
xchg
mov
cmp
mov
push
jmp
addr16
movsl
iret
jb
pop
out
sti
push
filds
or
push
adc
push
lods
fisubrs
sbb
or
fimull
je
push
fsts
stc
mov
movsl
add
jns
gs
mov
loopne
sub
and
rorl
bound
dec
inc
int3
xchg
movsb
in
es
cwtl
sbb
sub
gs
inc
jmp
jle
and
cmp
test
pop
mov
jae
data16
lods
lcall
xor
xor
nop
incb
icebp
lods
push
xchg
cwtl
repz
bound
jne
movsb
sub
in
pusha
mov
cmpsb
cwtl
xor
ja
jnp
jp
and
ret
stos
and
int3
or
andb
jb
lret
sub
jns
and
mov
aaa
in
in
sbb
pop
jb
push
pop
gs
mov
outsl
push
jecxz
sbb
js
push
mov
and
out
gs
inc
imul
test
out
push
test
jmp
or
cltd
fnstcw
pop
sahf
cmpsb
push
cmp
xor
sbb
mov
outsl
jae
inc
or
stos
outsb
mov
inc
jmp
hlt
xchg
lret
fwait
and
mov
hlt
mov
add
jnp
jecxz
nop
adc
jbe
xchg
ljmp
icebp
stos
add
xchg
aas
ret
popf
mov
xchg
xor
cltd
mov
addb
sarl
mov
sub
mov
and
jp
pop
adc
jb
jae
sbb
adc
imulb
jns
leave
repz
mov
add
xchg
mov
out
lahf
dec
pop
clc
pop
dec
add
dec
push
mov
dec
push
in
jge
aas
sbb
in
pop
addl
adc
stos
pop
mov
pop
sub
movsl
nop
sub
xor
pop
flds
leave
sbb
call
pop
insb
imul
push
jae
negb
jo
pusha
mov
sbb
andps
pusha
mov
ds
jae
imul
cltd
cmp
jae
xor
loope
push
jbe
negb
rolb
test
pop
gs
sbb
mov
and
inc
cmp
mov
lahf
in
mov
jne
jnp
loopne
push
fdivrl
je
inc
test
pop
dec
jg
mov
gs
mov
xorb
inc
fisubl
dec
cmc
paddw
scas
stos
xlat
jmp
or
xchg
inc
pusha
add
jae
inc
pop
cmp
test
pop
scas
push
jae
push
aad
xor
iret
ret
cmc
jge
xor
cs
inc
decb
aad
aad
push
sbb
mov
xchg
cltd
fxch
xchg
sub
jae
push
mul
mov
xor
aaa
lcall
imull
or
fldl
pop
testb
push
jp
cmpsb
xchg
mov
dec
outsl
mov
mov
aad
jle
inc
mov
aaa
cmc
mov
xor
dec
daa
push
or
mov
repz
test
dec
mov
sar
or
mov
sahf
int3
and
pop
push
bound
add
push
mov
outsl
push
pop
push
pop
repz
ljmp
stos
or
fistpll
test
pop
or
mov
mov
cmp
dec
lock
add
mov
cmp
ret
dec
mov
test
call
xchg
fs
xor
ss
mov
push
xchg
in
jno
out
push
push
sub
inc
fiaddl
lret
mov
mov
dec
mov
inc
fisttpl
push
mov
mov
mov
pop
or
xchg
add
mov
cmc
insb
mov
dec
pop
mov
loop
test
test
int3
aaa
lock
das
push
mov
or
inc
cld
mov
dec
mov
inc
dec
mov
dec
push
jns
mov
sti
mov
or
push
fwait
jl
mov
jl
mov
sbb
or
mov
test
cmc
push
mov
loopne
xor
fcom
shlb
mov
inc
jae
xchg
cmp
lock
arpl
xor
dec
sub
lret
mov
or
xor
push
dec
test
mul
mov
loop
ds
mov
cmp
xrelease
jmp
dec
add
nop
shll
mov
inc
cmpsl
mov
pop
xor
push
jmp
jmp
inc
lock
mov
lahf
jo
fucomi
push
imul
and
push
push
clc
cmc
outsb
sbb
outsb
push
insl
pop
xchg
arpl
push
shl
cmp
mov
rorb
push
mov
test
xchg
dec
jne
test
in
pop
xchg
cmp
sub
dec
lret
cmpsb
test
out
inc
xorb
sub
nop
scas
arpl
rcrl
mov
dec
stos
addr16
xlat
pop
inc
dec
xlat
sub
or
pop
jmp
sti
ret
jmp
xchg
movsb
jnp
mov
jae
sbb
and
adc
mov
aad
mov
fimuls
addr16
mov
scas
leave
mov
xorl
inc
rsm
cmp
sbb
add
cs
add
jae
xor
sbb
cld
bound
inc
ret
dec
jmp
rclb
jns
adc
push
pop
shlb
mov
xchg
or
loopne
pop
dec
mov
or
gs
xchg
mov
pusha
dec
scas
xor
and
add
sbb
adc
cld
mov
or
sub
ja
fbld
add
flds
xchg
inc
clc
imul
stc
aad
int
popf
js
repnz
xor
addr16
add
sbb
lret
fildll
neg
arpl
popf
pop
mov
pop
mov
pop
out
jecxz
stos
pop
cli
mov
mov
mov
insb
pop
mov
jo
test
test
test
mov
sbb
xchg
jnp
jb
sahf
adc
mov
aam
popa
lret
inc
pop
inc
jns
and
sahf
or
cli
imul
mov
lods
push
sub
ror
push
fcoml
or
or
lods
adc
lock
sub
mov
inc
fwait
sbb
fld
push
xchg
call
nop
popa
mov
adc
rcrl
fadd
mov
ljmp
fwait
cltd
lea
scas
mov
mov
cmc
push
and
add
mov
iret
std
outsl
repnz
pusha
sbb
cmp
mov
sub
ljmp
dec
push
cmp
sbbb
mov
inc
int
mov
inc
loope
scas
iret
inc
stos
out
mov
and
push
fs
cmp
lret
popa
sbb
lods
add
cmp
loopne
loop
ljmp
push
into
nop
insl
add
inc
mov
push
popf
sbb
adc
dec
jbe
sbb
sbb
mov
cs
je
aad
in
pusha
push
add
aad
push
inc
push
stos
mov
mov
lcall
ljmp
inc
sahf
or
popa
rcrl
mov
mov
popa
movsb
shl
push
pop
cli
push
pop
shrb
in
jmp
pop
push
mov
pop
mov
lods
call
push
fsubr
aas
pop
pop
mov
orb
push
pop
fcoms
pop
and
jno
andb
cld
rorb
and
push
inc
add
sbb
and
sub
insl
jmp
sti
int
cli
repnz
pop
xor
fstps
sub
push
in
dec
popa
mov
call
mov
and
dec
mov
or
hlt
imul
jle
adc
pop
sbb
adc
sbb
popa
or
imul
das
pop
test
fwait
inc
adcl
js
fdivl
bound
inc
in
repz
in
xchg
out
pop
imul
cs
mov
mov
jecxz
push
sbb
lock
and
repz
clc
inc
dec
arpl
arpl
mov
sub
lea
shlb
and
lahf
dec
mov
cwtl
fs
into
aas
push
dec
hlt
fmuls
jle
or
hlt
jmp
and
adc
sbb
adc
sbb
cmp
loope
sub
adc
fidivrl
mov
inc
roll
mov
cmpsb
mov
int3
pop
repnz
pusha
test
out
mov
lock
push
push
fistl
scas
push
and
push
test
nop
sti
shll
adc
jbe
hlt
mov
fdiv
sub
and
bndstx
adc
mov
mov
aad
outsb
imul
dec
rcll
ret
inc
mov
jecxz
dec
test
inc
call
xchg
es
leave
js
pop
sbb
cltd
icebp
iret
popf
jno
nop
sbb
and
jb
jbe
sub
cmp
sar
clc
push
mov
idivb
fldt
xor
insl
in
mov
pop
jo
mov
mov
mov
add
cmc
sub
xor
dec
ljmp
test
int3
mov
mov
mov
lds
inc
pop
mov
xor
jge
sbb
pop
dec
and
push
dec
fists
pop
aad
mov
adc
inc
icebp
cltd
insb
push
sub
pop
mov
lcall
sbb
sub
add
push
dec
shrl
mov
jb
push
outsl
push
mov
ret
sbb
mov
cmp
or
or
iret
arpl
ret
fwait
out
icebp
pop
outsl
dec
aas
adc
arpl
imul
out
bound
pop
pop
ss
repnz
sbb
cmp
sarl
push
aas
aam
push
scas
popf
xor
xchg
into
das
mov
xor
mov
dec
fisubl
jmp
jo
in
aam
aam
nop
gs
pusha
jecxz
mov
adc
sbb
xor
sbb
pop
mulb
enter
cmovp
rolb
popf
aam
fisttps
outsl
mov
inc
and
dec
lea
push
out
and
rorb
jg
push
xchg
mov
inc
sbb
lds
inc
aam
inc
dec
arpl
std
in
out
push
xchg
sarb
and
int3
out
idivb
lahf
add
inc
mov
into
cmp
cmpsb
push
psrad
mov
cmp
ljmp
push
jae
out
jg
loopne
adc
xor
dec
or
fisttpl
arpl
or
sub
cwtl
cmc
pop
fcoms
jns
adc
or
in
jb
cmp
ds
lahf
sub
or
mov
jmp
mov
mov
add
out
jo
repz
push
cwtl
mov
jecxz
cld
mov
cmpsl
in
sub
dec
daa
fnstsw
bound
insb
cmp
add
pusha
dec
iret
ucomiss
mov
cmp
ret
jl
adc
dec
mov
sbb
sbb
pop
sub
out
in
or
call
shll
mov
adc
xor
xor
push
sub
or
fistpl
mov
jb
sarb
fwait
add
loope
push
push
enter
negl
and
sub
xchg
sbb
data16
dec
mul
jp
mov
cmpsb
mov
mov
push
repz
roll
sbb
in
xchg
movsl
cmp
inc
lods
pop
add
das
int3
out
adc
mov
notl
sub
inc
int
xchg
test
mov
ficomps
insb
lds
or
jno
pop
and
mov
incl
test
lods
jmp
jnp
jle
mov
dec
mov
imul
jp
outsb
in
icebp
movsb
cmpsl
sbb
jne
leave
jno
push
sarl
lcall
mov
rorb
xchg
adc
adc
scas
adc
int
sarl
cltd
and
fdivrl
mov
iret
fiaddl
sarb
outsl
push
pop
int3
jp
leave
pop
adc
lods
repnz
add
gs
xor
popf
leave
mov
dec
mov
push
inc
daa
inc
mov
mov
inc
ss
mov
adc
mov
leave
mov
xchg
pop
or
mov
mov
sub
pop
pop
cmp
aaa
adc
mov
lret
out
pop
lahf
fiaddl
ficompl
push
inc
or
mov
mov
sahf
scas
xchg
loopne
jne
sub
push
add
inc
push
jl
mov
cld
mov
mov
test
sub
sub
into
loope
cmpsl
sbb
push
lahf
scas
imul
pop
push
push
sbb
push
dec
sbb
in
daa
in
inc
jno
dec
inc
sbb
lcall
inc
leave
add
out
xor
jae
int
jb
xlat
jmp
adc
mov
ljmp
and
ja
rorl
jmp
outsl
flds
xor
jge
and
js
shlb
adc
cmpsb
push
cmp
cld
mov
aaa
in
arpl
movsb
dec
pop
adc
sub
xor
insb
xlat
cs
in
mov
xchg
or
iret
or
mov
jp
sub
push
add
or
inc
fdivrl
xchg
push
popf
xor
test
cmpsb
leave
sbbb
imul
fld
ss
movsl
fwait
ss
sbb
sbb
iret
push
fldt
loop
notl
das
into
popa
adc
test
mov
push
adc
lods
dec
sub
inc
sub
sub
push
sub
xchg
xchg
aas
in
xor
cmp
cmp
mov
cmpsb
movsl
fisubs
or
xchg
cltd
out
add
int3
mov
out
sbb
cltd
ss
leave
sbb
jb
clc
xor
xor
mov
int3
push
mov
shlb
adc
outsb
in
add
sbb
je
repnz
daa
notb
stc
cs
dec
in
mov
or
inc
inc
out
loope
mov
mov
adc
adc
scas
pop
adc
xor
adc
inc
push
inc
mov
popf
mov
jae
pop
scas
out
icebp
rclb
scas
cmp
adc
sub
inc
scas
push
jg
shll
daa
rclb
dec
das
hlt
or
jo
dec
jle
mov
xchg
or
orb
clc
add
xchg
repz
adc
dec
in
pop
test
scas
xchg
or
mov
xor
lock
sub
lahf
add
jp
add
or
ss
pop
and
inc
xor
fnstenv
js
into
push
fwait
jecxz
negl
mov
xchg
inc
notl
adc
mov
rorb
pop
pushf
sub
out
into
in
lea
jno
jb
fildll
mov
pop
repz
pop
mov
clts
bound
fldenv
ret
out
sahf
mov
dec
xchg
or
cmpsb
roll
std
std
lods
pop
sub
mov
jne
lret
out
pop
adc
inc
xor
and
jbe
loopne
leave
push
stc
ss
fstl
mov
cmc
or
mov
jp
rsqrtps
mov
das
nop
enter
out
hlt
xlat
mov
sub
xor
stc
xor
or
and
stos
pop
mov
jo
lds
lock
scas
sbb
loopne
ficoml
fs
test
aas
scas
cmp
dec
jns
xchg
mull
icebp
cs
mov
enter
je
mov
in
sbb
jle
xchg
rcl
icebp
test
arpl
mov
mov
andb
jecxz
into
aam
jne
hlt
pop
aaa
je
scas
ja
ljmp
outsl
loope
lret
leave
mov
aam
inc
fdivp
mov
call
xor
adc
push
aad
lods
mov
xchg
cmp
add
mov
ss
ret
xor
cmpsb
xor
test
out
xchg
cmpsl
and
stos
push
inc
fdivs
arpl
mov
and
xchg
mov
mov
leave
or
loop
cmpsl
les
xchg
frstor
data16
lret
push
and
cmpsl
or
xor
imul
jl
pop
pop
in
pop
rolb
sti
xchg
dec
out
loop
incl
push
mov
xchg
mov
dec
lcall
scas
popa
or
dec
cmp
cmpb
loope
cld
cmp
pushf
std
push
testb
mov
or
dec
out
sbb
pop
xor
dec
imul
rcll
fsubr
mov
adc
loop
push
fsubs
stos
outsb
outsl
scas
shlb
aad
cmpsb
lea
repz
daa
jge
int3
sbb
pushf
je
insb
stc
fistpl
dec
fisttps
aas
lahf
mov
in
sub
lahf
sub
mov
shl
push
xor
or
rcrb
sbb
sahf
mov
lods
or
and
in
push
or
and
cld
les
out
jno
test
cmp
and
ret
rcrl
push
jecxz
and
fwait
out
xor
dec
mov
outsb
cmp
bound
sub
mov
xor
and
pop
cmp
imul
bound
cmpsl
pusha
mov
lcall
xor
pop
cwtl
jno
mov
mov
cmpsb
inc
scas
and
insl
lock
in
sti
pop
sub
aam
mov
inc
iret
test
cltd
dec
inc
xchg
dec
test
divl
jg
shlb
test
and
scas
inc
mov
push
push
dec
push
shll
push
mov
dec
cmpsl
inc
roll
xchg
cmc
or
aaa
xchg
mov
hlt
adc
stos
adc
cmpsb
jnp
sub
lcall
sarl
data16
xor
dec
dec
dec
lods
scas
inc
inc
and
and
pop
sbb
xchg
fidivrl
bswap
filds
ja
scas
mov
jae
in
pusha
sub
inc
jns
push
jge
insb
scas
fcompl
cmp
mov
das
jecxz
mov
xor
sar
and
adc
shlb
and
inc
aas
push
je
mov
sbb
mov
aad
fdivrs
mov
cmpb
icebp
push
or
cmp
jle
xor
hlt
int3
and
pop
ljmp
gs
sbb
push
out
pusha
xlat
and
cmpsl
pop
out
dec
test
push
sar
push
les
dec
enter
leave
es
fucomip
imul
popf
mov
mov
in
sub
mov
push
mov
sub
std
lea
sbb
es
inc
jnp
xorb
inc
ljmp
inc
or
cli
jo
aas
xchg
scas
dec
push
mov
shlb
or
fcompl
popa
test
icebp
jnp
dec
xchg
inc
pop
cwtl
repz
sub
cmc
push
xchg
xchg
inc
imul
ljmp
cwtl
subb
inc
je
cmp
cmp
mov
and
pushf
jae
in
jmp
setbe
shrb
pop
lea
push
pop
push
fs
cmpsb
xlat
sub
sub
es
clc
pop
pop
sub
xchg
push
xchg
lret
jle
cmc
mov
push
and
bound
mov
xchg
in
xchg
subb
cmp
dec
insl
mov
and
jg
insb
mov
out
sub
movsb
mov
icebp
mov
push
in
pop
cli
xor
inc
push
data16
dec
gs
es
push
ret
mov
mov
lock
add
mov
adc
ss
es
rcrl
in
cmpsb
mov
lret
test
inc
or
shl
mov
repnz
dec
mov
add
in
mov
int
mov
jno
inc
mov
subl
mov
roll
and
addr16
mov
sbb
icebp
call
test
xor
and
lret
or
adc
in
jecxz
das
out
repnz
mulb
push
mov
dec
addr16
fildll
sbb
imul
cmp
hlt
xchg
mov
pop
dec
mov
push
push
sub
jae
adc
lods
in
xchg
mov
scas
aaa
inc
cmpsb
pusha
out
xlat
push
cmp
mov
adc
imul
pushf
adcl
push
test
cmp
lods
mov
mov
jle
inc
mov
jmp
fimull
lds
adc
mov
cwtl
and
jmp
jge
xor
and
aam
out
lret
cmp
cmpsl
call
jge
popa
inc
test
jo
jb
in
cmp
xor
pop
aad
je
jns
jg
cmp
xor
mov
push
xchg
nop
sub
cmp
cmpsb
jge
jge
pop
inc
xchg
scas
push
js
mov
arpl
push
in
mov
xchg
into
sahf
mov
test
or
mov
divl
nop
jnp
pop
or
stos
jle
jo
bound
add
xorb
mov
lea
jl
into
sbb
cli
paddsb
pop
pop
icebp
cmp
add
cmp
cld
xchg
sbb
loope
inc
in
imul
jle
xchg
jno
mov
adc
out
cmpsl
roll
es
cld
add
nop
jbe
pop
pop
test
mov
sbb
xor
ficoms
les
adc
xor
aad
cmpsb
mov
and
add
push
lods
loopne
push
dec
aas
ss
fldl
mov
mov
adc
pop
mov
outsb
ret
pop
sub
mov
fildl
push
jae
test
in
stos
rcrl
xchg
lock
cmp
cmp
fs
push
or
ficomps
arpl
ret
push
sub
loopne
pop
cwtl
test
sub
mov
and
dec
lahf
xchg
jmp
in
cld
inc
jg
dec
adc
insb
mov
cmp
sbb
mov
mov
pop
sbb
in
cmp
ss
adc
sarl
aas
rorl
cmp
rcrb
je
pop
mov
mov
jge
or
dec
fbld
add
fsubl
outsl
out
popf
lcall
iret
pop
lcall
add
aam
mov
and
fcompl
aaa
dec
or
int3
xor
push
xchg
es
inc
sbb
cmpsl
rcrl
lahf
fsubrp
sarb
push
popf
fmull
sbbb
mov
or
dec
ret
lock
inc
fwait
repnz
add
dec
xor
sub
in
inc
push
leave
add
mov
cltd
fwait
test
jg
adc
out
dec
scas
movsl
call
inc
out
shll
xor
add
ss
js
movsl
fmulp
pop
into
jle
rol
leave
cwtl
mov
xchg
bound
fimuls
xchg
jmp
shrb
aam
add
insl
mov
lds
repnz
les
xchg
xor
nop
fbld
dec
rolb
idiv
mov
push
fbstp
movsb
addr16
sbb
fdiv
lods
in
lods
js
mov
stos
sbb
movsl
aaa
inc
jmp
cmp
es
jge
mov
adc
push
xchg
inc
pop
push
es
out
cli
fcmovbe
nop
negb
addl
jae
das
lret
pop
fstpt
loop
dec
les
pop
jmp
jl
pushf
pop
shlb
into
adc
jg
add
sbb
jns
mov
std
push
pop
xchg
and
lret
cmpsb
xchg
lahf
data16
pop
and
pop
dec
cmp
xchg
in
insb
stos
fs
adc
lods
xchg
rcll
insb
lock
jle
mov
cs
test
inc
sub
outsb
lcall
shrl
call
jge
sub
inc
mov
push
cltd
lret
mov
roll
or
mov
ss
xor
jmp
mov
mov
lcall
push
ds
or
lcall
cmp
fcoms
sahf
push
sub
ja
inc
dec
cmp
lods
and
cltd
mov
int3
inc
pop
scas
fsubrs
add
in
mov
sbb
cwtl
sarl
jge
add
aaa
mov
cmp
sub
test
push
mov
mov
inc
sbbl
mov
imul
icebp
push
adc
sbb
in
lea
lret
jo
adc
jb
std
pusha
mov
xchg
sbb
add
sbb
cltd
fnstsw
push
cmc
xchg
push
dec
xorl
test
jno
jb
cmp
sbb
pop
mov
popa
add
push
loop
cwtl
fwait
xor
xchg
sbb
cld
movsl
lock
xor
cmc
xor
push
arpl
ss
fiadds
ds
and
rcr
inc
xor
popf
xor
les
stc
enter
scas
xor
add
in
push
and
xchg
hlt
scas
dec
ljmp
dec
divl
xchg
or
daa
xchg
rorb
xor
mov
loopne
nop
shrl
jp
mov
xchg
mov
and
add
ljmp
fstpt
rol
add
nop
pop
add
ljmp
out
jmp
pop
pop
push
andb
cmp
and
add
rorb
into
cmpsb
lahf
outsb
cmpsb
ds
cmp
xchg
repz
and
xchg
adcb
and
fdivs
inc
imul
sub
ljmp
scas
ficomps
fwait
lcall
ds
addl
jno
adc
sbb
stos
jmp
leave
fmull
out
or
subb
xor
cmpsl
inc
push
lds
ret
out
in
cmp
rcrb
xchg
arpl
add
fwait
add
xchg
jo
ror
adc
and
aad
push
xchg
into
imul
push
and
nop
or
mov
clc
iret
arpl
fldl
mov
adc
inc
gs
loopne
xchg
push
mov
or
xchg
push
lahf
out
pushf
push
sbb
push
jb
sub
sub
out
enter
or
jp
inc
inc
sbb
out
inc
add
out
add
sar
inc
popa
dec
jnp
sbbl
push
imulb
shl
stos
imul
add
cld
mov
jle
mov
iret
das
jle
push
pop
pop
sbb
sbb
cmp
mov
sub
ret
xchg
pop
and
scas
and
ds
mov
jmp
outsb
pop
xor
out
repnz
xchg
dec
inc
sub
jg
mov
mov
mov
and
fdivrs
xchg
xchg
fbstp
mov
jnp
pop
mov
cld
mov
inc
movsl
xor
push
or
scas
sub
mov
mov
inc
mov
pop
cmc
push
iret
loop
push
pop
add
ror
add
mov
push
cmp
jmp
hlt
push
repz
inc
lcall
lahf
stc
notl
testb
jg
cmpsb
inc
mov
aas
xor
mov
loope
roll
and
cmc
cli
outsb
and
sbb
hlt
jge
mov
xor
pop
fistl
sub
fidivrs
sub
pop
clc
adc
jbe
sbb
enter
xor
push
xor
iret
xor
pushf
sahf
mov
lcall
jmp
mov
mov
xchg
jl
les
aas
mov
cmp
push
and
movsb
dec
mov
rcrl
fists
loope
add
fnstsw
jmp
mov
add
insl
gs
and
hlt
popa
shlb
mov
lds
imul
jecxz
gs
nop
jp,pt
dec
scas
leave
mov
test
imul
cmpsl
aas
pop
fmull
repnz
push
jne
repnz
lcall
pop
cmp
cmp
xchg
xor
mov
sbb
pop
sahf
std
in
cmp
cmp
ds
int3
mov
xorb
xchg
mov
es
mov
mov
test
out
push
jge
in
xchg
test
outsb
cltd
sbb
popf
jb
rol
adc
jno
or
pushf
mov
fnstcw
xchg
ror
sub
insb
test
lods
in
mov
pop
mov
or
lods
in
push
outsb
scas
jo
jae
popf
mov
push
or
sbb
and
outsl
inc
push
cmp
and
in
fistl
insl
imul
inc
add
jns
rolb
or
adc
adc
cmp
fdivp
xchg
sub
fdivl
inc
inc
ss
not
ffree
mov
sub
mov
pop
or
inc
mov
leave
or
push
fidivrl
pop
sbb
in
dec
aas
pop
adcl
push
movsl
xor
cld
scas
stos
scas
in
add
mov
std
or
imul
mov
adcb
sahf
pushf
cmpsl
hlt
int
push
pop
lock
push
jle
cmp
dec
clc
sti
out
dec
dec
jbe
test
adc
mov
mov
ja
mov
mov
iret
cli
pop
mov
and
sbbb
jbe
movups
or
out
inc
test
adc
sub
or
cmpsl
enter
jg
subl
adc
outsb
out
pop
adc
xor
pop
cwtl
adc
xor
push
dec
mov
in
or
sbb
mov
aaa
ret
jge
push
inc
push
pop
xor
dec
sub
dec
sbb
xchg
or
sahf
mov
adc
pop
add
negb
popa
lret
cld
out
mull
pop
push
js
push
sarb
dec
sbb
pop
mov
lods
movsb
mov
xchg
pop
sarb
mov
loop
rcrl
arpl
out
push
sbb
lods
lret
mov
dec
sbb
fisttpll
scas
adc
or
cltd
mov
jle
enter
andl
lds
pop
adc
or
sbb
xchg
add
mov
sbb
fildl
inc
and
mov
jae
js
pop
out
int
pop
xchg
mov
sbb
xor
sub
or
adc
mov
pop
stos
int
in
xchg
inc
loop
mov
adc
adc
xor
pop
xchg
cltd
add
jmp
scas
int3
in
out
and
shlb
aaa
test
adc
out
xchg
fistpll
out
aas
std
cmc
xchg
inc
sbb
cmp
repz
inc
loopne
sub
mov
push
dec
mov
out
sbb
push
add
pop
das
adc
popa
push
xchg
daa
jmp
scas
jl
ljmp
adc
add
test
xchg
add
and
or
leave
pop
loopne
inc
adc
mov
std
cmp
jl
jno
inc
lods
addr16
das
lock
xor
addr16
sti
mov
aaa
imull
push
cmpsl
inc
ret
cmp
or
sbb
cmp
dec
stc
lret
movsl
adc
inc
pushf
or
xchg
clc
jo
push
out
cmc
sub
inc
xor
push
push
nop
dec
and
cld
pop
pop
sbb
icebp
inc
mov
sbb
call
fidivrs
jl
inc
push
jbe
lods
clc
into
pop
add
cmp
popa
mov
loope
lock
in
iret
xchg
xchg
out
mov
outsl
leave
test
call
xchg
aaa
or
in
adc
mov
dec
repz
pusha
xor
push
mov
mov
jbe
push
out
cmc
cmp
xchg
lret
xchg
cltd
sbb
loope
addb
cmp
cmpsb
push
push
add
rclb
pop
ljmp
out
test
mov
testl
adc
adc
shlb
xchg
inc
dec
cltd
mov
addb
mov
lret
in
inc
inc
test
popf
jb
loop
adc
jge
data16
out
adc
in
ud2
mov
xchg
adc
in
cmp
lea
movsb
mov
lret
add
dec
mov
adc
cmp
add
add
les
or
inc
btr
popf
in
jae
cmpsl
aas
in
cmp
and
inc
paddb
mov
xor
fisubs
test
adc
das
mov
jmp
imul
shl
jmp
xor
jne
adc
add
and
push
xchg
bound
xchg
jbe
xor
repnz
mov
mov
sub
xor
out
cmc
and
in
and
dec
inc
test
scas
scas
inc
and
into
aad
pop
js
xchg
jle
popl
and
mull
lea
xchg
xor
sti
in
or
in
mov
jns
and
aaa
sbb
push
xor
movsl
push
push
movsb
dec
mov
pop
enter
ret
dec
mov
and
add
pusha
add
or
ret
push
jge
xor
add
mov
xchg
jge
mov
pop
lock
lcall
cs
push
popf
adc
rcll
pop
icebp
enter
cmp
rolb
xchg
add
jp
pop
push
stc
shrb
shr
mov
cltd
test
jmp
repnz
push
sbb
es
nop
fidivrs
cmp
frstor
sub
mov
je
push
mov
push
movsb
arpl
jns
jo
lea
dec
popf
mov
sti
pop
fs
inc
ret
push
push
fsubp
push
add
call
mov
imul
jae
push
divb
or
outsl
pusha
movsl
mov
cmc
out
lret
loope
or
data16
xor
jne
mov
or
pop
outsb
into
data16
and
or
mov
xor
sti
cwtl
rcrl
out
jo
add
outsl
dec
push
add
nop
and
stos
xor
mov
movsb
mov
pop
movsb
testl
mov
outsl
movl
in
jb
fistl
xorl
inc
lock
movsl
std
push
in
mov
cmp
mov
shl
pop
cmp
sahf
das
hlt
cmpsl
ja
pop
adcb
imul
mov
stos
jge
or
mov
cmp
sahf
cltd
dec
add
jg
je
das
ret
fst
push
icebp
add
icebp
imul
mov
mov
and
push
mov
sbb
adc
add
jb
mov
shlb
jmp
repnz
pop
cmpsl
ljmp
js
testl
cwtl
xchg
int3
jmp
ljmp
jns
pop
mov
loopne
jo
xor
xor
mov
bound
mov
test
ret
idivl
and
and
mov
fcmovb
sub
cmp
imul
jb
sub
loop
in
cmp
sarb
mov
mov
pop
inc
xchg
inc
cltd
add
mov
push
add
ss
int
sub
ret
fmuls
jmp
mov
xlat
jnp
je
das
push
lds
jb
push
in
lock
lret
addr16
mov
fisubrl
xor
mov
shlb
inc
xchg
sbb
xor
test
enter
or
and
push
jle
cmp
shll
or
add
push
ljmp
lods
sbb
and
int
fdivl
mov
xchg
xor
mov
dec
push
mov
aad
ffreep
push
pop
sbb
jae
push
fidivs
xor
sub
ljmp
bound
inc
sbb
in
aas
and
jg
mov
daa
movsb
dec
mov
jecxz
mov
sbb
ja
fnsave
mov
out
stos
add
sub
outsl
cmp
loopne
cmpsb
std
push
add
in
cwtl
stc
adc
mov
add
jp
mov
xor
hlt
or
push
xor
jg
ja
dec
aam
pop
add
imul
sahf
xchg
mov
xor
test
mov
dec
or
lds
or
pop
xchg
push
pushf
pop
mov
dec
mov
int
adc
out
movsb
push
cmp
fldcw
xor
into
inc
stos
test
pop
pop
fwait
out
sbb
sti
push
in
add
pop
sub
add
cmp
jecxz
inc
divb
fldcw
lods
out
lea
or
cmpsb
and
adc
push
outsb
pop
fldl
inc
aad
daa
push
jge
jno
inc
pop
jmp
aas
rorb
lret
add
jns
out
xor
aaa
and
cmc
repz
xor
dec
dec
ljmp
subl
in
or
cmp
mov
pop
dec
xor
fmulp
cltd
cli
push
push
or
adc
push
jbe
shlb
xorl
sub
fadd
insl
jle
fisubs
aam
lret
mov
flds
fsubrl
pop
cmpsb
aam
xchg
subb
jne
pusha
flds
repnz
in
and
mov
mov
mov
inc
addl
pushf
bound
sti
cmp
add
test
hlt
inc
out
mov
hlt
mov
dec
add
mov
pusha
adc
hlt
or
xor
xor
ljmp
lahf
xor
add
outsb
jge
xor
mov
stos
cwtl
jecxz
in
icebp
nop
adc
fidivrl
and
pop
mov
dec
loope
pop
jp
mov
fwait
or
in
jg
jne
jmp
enter
mov
imulb
jmp
jecxz
xlat
and
mov
cwtl
bound
ja
jnp
ja
fwait
rol
sub
stos
sahf
pop
xor
leave
xchg
inc
sub
xchg
fistpl
aam
mov
pop
imul
sub
ds
ljmp
sbb
jecxz
dec
or
or
dec
imul
mov
pop
addr16
and
inc
dec
mov
fcmovbe
lahf
cmp
aaa
popa
push
pop
pop
movb
mov
mov
add
ret
mov
clc
push
imul
fbstp
aas
sbb
or
sbb
cmp
mov
subl
shrl
pop
sbb
das
test
inc
dec
rcll
jmp
int
dec
aas
sub
mov
movsl
cli
in
and
nop
xor
rclb
or
xchg
in
addl
mov
xchg
sbb
sarb
or
cmp
jne
mov
inc
lea
call
fcompl
pop
jnp
test
mov
sbb
ljmp
data16
inc
packsswb
leave
jecxz
icebp
mov
nop
mov
mov
xor
inc
push
jo
add
and
les
mov
cld
fsubl
sbb
inc
cs
cmc
aaa
adc
fcomps
loope
cld
scas
xchg
in
repnz
rcll
pop
enter
insb
dec
push
loop
fisttpl
pop
adc
insb
mov
mov
in
mov
and
arpl
cmp
es
cmpsl
add
pop
mov
lock
add
inc
icebp
mov
and
inc
dec
sub
dec
in
leave
pusha
cmp
into
and
ficoml
mov
shlb
in
aad
cmp
cmpsb
pop
sub
or
test
scas
mov
pop
inc
sbb
mov
jmp
sbb
pop
sub
adc
sbb
mov
lea
push
push
jle
pusha
push
mov
add
imul
int
or
push
jae
lahf
dec
insb
aas
jmp
fimull
aaa
cmpsb
scas
into
mov
sub
mov
aad
push
in
mov
xchg
inc
repz
push
pop
cmp
push
jb
gs
dec
cmp
xor
cltd
adc
orl
lcall
sete
testl
sbb
sbb
ficoms
sub
jnp
icebp
sbb
fs
stc
xlat
cwtl
mov
cmpsl
dec
cmp
cmpsl
aaa
jl
pop
lock
xor
mov
push
jns
out
dec
mov
cli
rcrl
incb
or
stos
xor
and
mov
popa
fisubs
mov
cmp
push
sbb
addr16
mov
es
sub
xor
fstl
clc
xchg
repz
add
and
pop
pop
mov
faddl
repnz
inc
insl
into
bnd
xor
addr16
or
push
add
cmpb
inc
cld
test
adc
movsl
sbb
jg
pushf
cwtl
jmp
jle
mov
fbld
xchg
jb
sub
pushf
cmp
mov
ljmp
ja
jmp
sbb
and
pusha
in
push
outsl
fcmovnu
fs
lods
lods
xorl
sbb
mov
jb
frstor
pop
push
xchg
icebp
and
clc
out
xor
cli
ss
xor
mov
cmpsb
movnti
mov
sub
pop
fisttpl
in
pop
xor
aaa
cmp
out
add
jg
add
test
fldt
sub
push
jecxz
pop
inc
idivw
fiadds
cmp
aas
pop
lcall
nopl
stc
in
mov
sahf
adc
pop
inc
negb
shll
testl
imulb
adc
pop
jns
jecxz
inc
inc
adc
fcmovu
push
clc
dec
mov
bound
jnp
cmp
icebp
xchg
into
fisubs
mov
xor
imul
jmp
in
inc
getsec
lahf
push
mov
jg
lahf
sbb
add
mov
push
sbb
mov
out
mov
shll
pop
cmpsb
aas
shrl
insl
sub
pop
cmp
jmp
jb
mov
cmp
ret
fldl
movl
shl
dec
xor
push
add
sub
mov
shrb
dec
cld
aam
push
and
sahf
ja
xchg
sbb
xchg
xchg
lea
test
push
movsb
dec
xor
fdivl
ljmp
mov
lret
subl
repz
in
xlat
sub
sbb
inc
js
or
aam
popf
mov
cld
push
stc
jg
rolb
fcmovnu
and
js
out
fidivrs
in
orl
aas
xor
mov
sub
add
push
daa
mov
cmp
mov
arpl
pop
sub
decl
xchg
inc
in
mov
sbb
push
jecxz
aas
mov
jnp
rcll
mov
mov
std
mov
inc
sti
mov
mov
cmp
js
clc
outsb
jle
lret
push
jno
insl
add
enter
faddl
pop
mov
or
in
xchg
adc
insl
clc
xchg
or
xchg
dec
dec
mov
stos
mov
test
out
lods
inc
xor
ror
dec
mov
testb
sbb
movsb
mov
in
lret
add
and
mov
xor
nop
inc
outsl
std
mov
mov
ret
inc
add
push
test
adc
lods
dec
subb
push
adc
and
pop
adc
push
mov
aas
adcb
sub
mov
sub
jl
jge
mov
in
imul
icebp
repz
in
pop
mov
int3
sahf
cmc
mov
jg
add
xor
loopne
and
push
jle
mov
pop
fwait
jl
imul
lods
lods
sub
inc
repz
jbe
pop
out
mov
or
bound
sub
mov
push
faddl
xor
ljmp
ret
in
inc
aad
pop
push
daa
lods
mov
nop
sub
sub
hlt
or
xorb
inc
aad
or
lea
fisubl
int
xchg
sub
xor
es
xchg
jp
cmp
ss
les
inc
movsl
sbb
pop
hlt
cltd
push
outsl
scas
in
add
fadds
sub
adc
jns
mov
jae
lds
jae
push
lcall
lea
inc
push
mov
cmp
and
pop
shrb
push
sub
xchg
mov
inc
iret
xchg
stos
lds
dec
adc
mov
into
lret
or
ret
and
xlat
pop
adcb
lea
daa
cli
mov
or
shlb
mov
dec
arpl
jae
fdivs
push
jg
jmp
xor
cmp
mov
and
int
mov
enter
sbb
mov
test
pop
mov
lcall
imul
imul
sbbl
adc
fdivrs
mov
push
mov
mov
mov
icebp
xor
push
xchg
fwait
sub
call
xlat
iret
push
inc
xlat
xchg
or
push
cmc
fiadds
mov
xlat
cmp
pop
stos
stos
les
out
sub
ja
test
fdivrs
shl
sbb
pop
jo
sti
and
mov
int
pop
adc
cmp
or
cmp
lea
pop
add
cmp
test
enter
in
sti
mov
xchg
adc
popa
mov
xlat
adc
data16
dec
mov
mov
push
add
sub
adc
mov
dec
das
lret
inc
add
call
stos
adc
inc
rclb
jle
lock
cmp
js
addr16
xor
adc
shrb
pop
loop
call
mov
loop
mov
mov
cmp
mov
and
rcrl
loop
loop
movups
fs
push
sbb
popf
or
repz
rorl
sub
mov
mov
js
dec
daa
xlat
push
hlt
testl
outsl
jbe
push
outsl
and
xor
dec
cmc
xchg
dec
mov
push
xchg
js
push
adc
nop
mov
pop
push
and
add
pushl
mov
repnz
or
sub
pop
xchg
push
xorb
outsb
addr16
mov
jns
push
mov
push
inc
xor
popf
out
daa
lods
into
xor
mov
lods
cmpb
xchg
jg
cmp
add
inc
push
jg
jle
movsl
xchg
imul
mov
fdivl
cs
mov
sub
jo
lea
jmp
sbb
xor
aas
pop
movsb
adc
xor
jecxz
scas
sbb
je
xor
adc
mov
cmp
mov
hlt
add
sbb
mov
hlt
pop
pop
fwait
xor
in
and
fcoms
jo
popf
ds
adc
stos
gs
dec
push
mov
inc
inc
stc
xchg
xor
cmpb
jp
lods
xchg
imulb
sub
sub
adc
fs
roll
sahf
lcall
jns
pushf
pop
lock
sbb
insb
xchg
push
lock
jmp
lret
in
push
orl
add
jbe
iret
cmp
jg
hlt
sti
scas
loop
push
ret
sub
mov
mov
jne
vsqrtss
cmpsl
roll
xchg
jo
insl
ja
arpl
jle
data16
aas
in
sub
add
lret
imull
and
sahf
call
les
push
dec
or
fisubl
push
aam
or
sarl
push
adc
xor
shll
jle
jnp
mov
or
lods
addb
sub
out
adc
jmp
shl
or
ret
fisttps
sub
mov
or
xchg
daa
mov
push
lods
adc
push
test
fwait
loope
pop
inc
frstor
icebp
imul
push
xor
sti
lret
int3
lea
sbb
mov
xchg
aam
adcl
outsb
add
cmc
xor
aad
andl
rep
sbb
push
mov
pop
sub
in
xchg
cld
das
imul
enter
inc
or
lcall
or
add
mov
dec
in
mov
sub
lock
push
add
fidivrl
dec
adc
mov
jle
jmp
mov
push
adc
mov
imul
mov
fldlg2
enter
mov
sub
nop
outsb
cmpsb
mov
cltd
sub
sti
loope
imul
or
cmpsl
xchg
aad
jge
sahf
jne
rorl
mov
cmpsl
pop
jp
push
rorl
pop
xor
xorl
and
repz
pushl
aas
push
or
shl
fidivl
leave
rorb
icebp
mov
adcl
add
sbb
fists
mov
add
inc
xor
add
jno
test
adc
mov
pop
nop
aam
xor
lea
dec
xor
xor
add
xchg
js
js
jmp
fimull
mov
inc
scas
or
xchg
push
mov
addr16
int
pop
push
mov
fildl
fnstenv
adc
dec
lret
inc
and
push
rol
div
xor
pop
subb
dec
cmp
push
cwtl
sbb
loopne
cltd
std
inc
mov
pushf
sub
inc
bound
and
sahf
jne
fwait
push
popf
push
cmp
std
cmp
cmp
mov
mov
pop
insl
hlt
push
scas
xor
adc
lock
and
into
mov
call
imul
pop
leave
mov
mov
push
adc
add
outsl
outsb
lock
push
rorl
pop
faddl
sub
mov
inc
addb
sbb
jl
dec
mov
movsl
es
stc
sbb
push
pop
loope
mov
dec
dec
mov
addr16
std
sub
fs
xchg
in
movsl
sbb
adc
dec
xchg
ret
frstor
cwtl
lahf
dec
fwait
dec
cmpsl
mov
ljmp
out
or
and
dec
fwait
inc
cmp
push
aas
adc
mov
inc
xchg
inc
cwtl
or
popl
cmp
out
mov
hlt
jo
js
fsubr
cmpsb
iret
adc
pop
cli
pop
xor
mov
and
dec
push
jecxz
mov
sbb
adc
cmpsl
sbb
outsl
add
test
xchg
imul
loop
movsl
lcall
push
popf
stos
mov
in
out
incb
test
dec
fnsave
lods
inc
stc
xlat
add
insl
jmp
imulb
jge
sahf
or
loop
adc
pop
jp
ret
push
jb
sbb
std
std
imul
cltd
jnp
mov
lahf
out
adc
loope
add
dec
mov
psubusb
adc
iret
repnz
xchg
shrb
out
arpl
jnp
push
mov
lret
xor
out
mov
push
inc
cwtl
xor
nop
sahf
mov
cmpsl
icebp
adc
lret
xchg
shl
pop
and
add
push
xchg
push
popf
out
push
ret
leave
cmpl
mov
lds
sbb
or
int
mov
mov
add
lock
fistpl
mov
pop
arpl
mov
ja
sbb
inc
jae
insb
pop
divb
xchg
mov
mov
adc
mov
addb
cwtl
push
add
enter
and
ljmp
mov
sub
or
icebp
fwait
dec
mov
add
mov
daa
adc
addr16
orl
lods
ficoms
shrl
imul
push
adcb
rol
sub
mov
pop
aaa
scas
ljmp
or
rcl
lret
mov
fcmovb
lret
test
xchg
adc
mov
mov
jb
test
cltd
dec
mov
and
rcrl
aam
push
lock
bnd
inc
or
adc
into
sub
mov
dec
xchg
daa
hlt
inc
aad
fsubrs
mov
icebp
loope
mov
mov
or
dec
ja
xchg
sahf
mov
mov
das
je
dec
push
ja
sub
lahf
aam
negb
roll
jo
pop
cmpl
outsb
mov
cmp
xchg
sbb
mov
adc
mov
jl
js
test
cmp
in
orl
mov
fsubrl
movsb
jl
adc
inc
fwait
mov
inc
stos
lret
pushf
xchg
lods
shlb
jg
movsl
repnz
insl
inc
data16
cmp
mov
out
adc
and
mov
xorb
push
js
mov
add
in
pop
pop
fs
cs
fcompl
cmpsb
and
int3
inc
mov
dec
inc
aaa
add
mov
icebp
or
add
push
or
dec
aam
stos
xchg
inc
cmp
jae
insb
adc
xchg
mov
ds
ljmp
adc
stos
inc
pop
aam
out
pop
fwait
and
pop
mov
aad
inc
loopne,pt
lret
mov
rorb
int3
xlat
decl
sbb
loopne
int3
mov
rcrl
xchg
mov
and
mov
cld
ja
div
jo
push
test
fwait
push
inc
adc
fidivrl
cmp
dec
fdivr
ljmp
out
push
addr16
pop
cmpsb
jnp
lret
inc
mov
fs
in
inc
loopne
ds
scas
lods
or
mov
inc
fwait
test
cwtl
add
rclb
mov
pop
test
pop
push
inc
ss
cmp
mov
push
sbb
mov
into
sbb
stos
add
lcall
adc
out
call
mov
pop
test
cmp
insb
add
or
mov
cltd
xchg
jnp
test
rcrl
mov
mov
lahf
mov
or
outsb
lret
lds
imul
xchg
add
scas
xor
xchg
lock
test
jae
mov
fs
ss
lock
ss
mov
xchg
movsl
sarb
testb
cmp
imull
test
mov
xchg
pop
fisttps
jns
mov
mov
cmp
push
adc
mov
stc
xchg
lock
mov
dec
leave
or
push
fsubrl
repz
lock
icebp
mov
sub
xor
stc
ljmp
fidivrs
fstps
mov
daa
push
std
into
cmp
mov
and
in
ja
adc
mov
xchg
jmp
gs
add
xchg
xchg
push
into
push
xchg
aam
pop
out
fldenv
dec
outsl
jnp
xlat
int3
dec
imul
and
jmp
call
fdivrp
fldl
push
popa
adc
or
cmp
cwtl
mov
testl
jge
in
pushf
sbb
cmp
mov
in
imull
repz
mov
push
pop
je
repz
sbb
push
fwait
pushf
es
out
enter
cmp
loope
pop
jbe
and
push
out
addb
mov
or
adc
addr16
in
fwait
inc
lea
es
ds
ds
out
in
movsl
test
adc
jmp
xchg
mov
pop
and
ja
jl
inc
mov
and
out
mov
pusha
add
or
mov
add
jle
cmp
mov
out
jp
dec
sahf
lock
fsubl
sub
loopne
int3
jbe
addr16
test
or
iret
std
into
jg
mov
leave
outsl
push
out
mov
sub
cmc
cmp
sti
mov
inc
daa
inc
mov
push
fisubs
and
or
mov
inc
xchg
movsb
inc
sub
test
fptan
lret
pop
mov
pop
outsb
pushf
je
dec
testl
xor
mov
insb
add
dec
push
sub
jp
mov
push
ret
push
inc
sahf
in
inc
xchg
and
jo
ja
adc
aad
adc
mov
ljmp
mov
shlb
scas
or
ror
push
js
loop
pop
sarb
xchg
push
push
pop
pop
cmp
in
inc
or
fcomps
xchg
pop
mov
dec
dec
sub
test
dec
xchg
inc
sub
iret
imul
rcrl
mov
ss
mov
xor
pop
lock
adc
fimull
scas
pop
iret
dec
rcll
xor
mov
adc
popf
repnz
stc
xchg
pop
xor
jno
cmp
lea
ss
ja
enter
popf
iret
jl
out
push
fdivrp
nop
xchg
push
xor
out
mov
dec
sub
sbb
push
sbb
pop
lcall
dec
jg
jmp
test
push
mov
jl
mov
jecxz
hlt
push
cmpsb
insb
add
js
mov
adc
js
movsb
lcall
loope
movlps
std
sbb
xchg
stc
ljmp
dec
shll
jo
and
scas
pop
fimuls
js
test
jge
cld
add
hlt
rcrl
subb
xor
das
pop
std
loopne
xlat
inc
pop
jmp
and
pop
adc
adc
insl
xchg
pop
loop
sub
jle
dec
dec
mov
enter
mov
icebp
int
push
sbb
inc
aam
xor
lods
ja
jge
out
sub
xchg
lret
jg
sbb
cmp
jno
add
sbb
pop
mov
push
or
movsl
xor
fwait
shrl
mov
mov
into
mov
mov
imul
stos
adc
add
push
sbb
sarb
push
pop
outsb
push
lret
sbb
loopne
and
cmpsb
subl
sub
popf
sbb
mov
mov
ret
push
cmpb
ds
loope
sbb
dec
mov
fdiv
popa
pop
inc
data16
out
arpl
mov
cld
push
adc
dec
xchg
std
sbb
das
mov
or
adc
pop
mov
add
dec
test
pop
mov
rcrl
out
push
inc
xchg
add
inc
mov
jns
shlb
xchg
push
mov
sub
aam
out
gs
pop
dec
xchg
in
add
mov
or
push
jge
xor
pop
mov
es
xlat
inc
jmp
outsb
mov
dec
lret
shr
movsl
mov
mov
pop
idiv
lods
sub
dec
dec
and
mov
rolb
sbb
or
xchg
nop
cmc
repz
ret
mov
pop
jo
in
popl
mov
inc
ss
mov
movsl
fistps
add
add
and
mov
cmp
sbb
xchg
imul
aas
out
xchg
push
enter
test
sub
ret
ret
test
call
jnp
stos
int3
nop
inc
cmp
loopne
sub
xchg
pop
stos
pop
inc
or
jb
mov
bound
jle
js
mov
pop
test
mov
jecxz
jmp
outsb
xlat
mov
cmp
outsl
xchg
sub
iret
test
mov
xchg
fildl
test
and
jnp
jnp
mov
ret
inc
dec
cwtl
mov
xchg
cmpl
shrb
rol
adc
cld
nop
inc
sahf
fmull
in
stc
add
es
dec
sbb
push
cmp
lock
movb
mov
jg
mov
sbb
fwait
add
xchg
mov
jno
pop
repz
xor
adc
inc
movsb
mov
pusha
mov
sub
jae
jge
aam
lret
dec
xor
xor
cs
sbb
les
test
fldcw
mov
in
lock
sub
out
dec
lock
call
call
test
lds
add
enter
jg
jo
ror
ds
pop
repnz
iret
xor
aad
inc
lahf
and
cli
fcom
xlat
sar
shrb
pop
push
std
filds
std
jb
mov
sub
jmp
dec
mov
ret
ficoms
and
inc
fmul
fs
dec
lret
dec
push
std
push
sub
push
sub
dec
jmp
addr16
pop
pusha
cli
cmp
test
push
arpl
push
xchg
fldenv
stc
int
aas
gs
iret
in
aam
xor
jge
sub
sbb
jge
xor
leave
mov
clc
lds
dec
icebp
jb
clc
inc
jbe
and
jle
jb
stc
adc
mov
push
inc
mov
xor
sub
xor
adc
int3
mulb
addl
aas
inc
pushf
and
xor
push
lock
mov
cmp
test
sbb
inc
out
and
fstl
lock
lds
iret
xchg
hlt
popa
sub
add
in
mov
xchg
shrb
jb
fdivs
jb
shlb
cli
jge
stc
ljmp
inc
dec
ret
lret
push
dec
or
jnp
aaa
in
and
jg
stc
xor
and
outsl
pop
push
jns
scas
testb
ljmp
mov
mov
and
lret
hlt
add
fs
clc
xchg
jp
in
andb
sub
call
aad
fs
cld
insb
ja
pop
jmp
fistps
scas
adc
outsl
movsl
mov
aaa
xlat
and
and
sbb
fisttpl
jmp
icebp
orl
pop
movsl
fcoml
insl
popf
jns
adc
roll
and
fwait
ret
sbb
popa
jecxz
cmp
outsl
lods
dec
xchg
push
dec
xchg
shrb
push
out
inc
fcomi
cmp
idiv
or
mov
cwtl
icebp
dec
jge
pop
jnp
pop
pushf
loopne
inc
test
bound
cltd
into
pop
mov
arpl
addr16
movsb
xor
sbbl
loope
in
mov
daa
mov
jae
push
ja
xor
imul
inc
out
push
xor
jg
pop
icebp
add
sbb
cmpb
test
cmp
stos
lcall
enter
in
inc
inc
into
push
lret
repnz
movswl
insl
mov
mov
test
aaa
or
stos
adc
icebp
sub
test
xor
cmpsb
stos
push
push
cmp
or
icebp
add
cld
xor
push
ret
outsl
inc
inc
ss
sbb
pop
and
sub
adc
xor
push
in
xchg
lods
in
cs
xchg
lret
push
add
mov
scas
push
test
jno
pusha
mov
pop
jo
rcll
orb
outsl
insb
inc
mov
ret
adc
das
std
cmpsb
pusha
lcall
popa
inc
bound
mov
push
sbb
mov
mov
inc
jne
sbb
dec
aam
popl
lds
fmulp
sub
pop
data16
ret
sarb
sbb
popa
xchg
leave
fidivrs
test
push
bound
test
and
fstpl
data16
aad
out
xchg
out
lret
je
pusha
arpl
sub
xchg
leave
js
sbb
and
addr16
mov
popa
add
test
sub
aam
jge
cld
mov
adc
lods
stos
aas
push
sub
insl
xor
mov
jp
mov
pop
lea
lea
lret
and
fidivl
inc
jne
lock
add
sub
sbb
movsl
add
fcmovnb
inc
or
jae
lcall
mov
subl
test
ljmp
ja
fdivl
aam
mov
ret
rorl
push
sbb
push
mov
rclb
push
leave
inc
mov
jns
and
or
add
pusha
fistpl
imul
jnp
cmp
fisubrl
push
adc
in
loopne
test
ljmp
sti
or
push
cs
sub
jns
lcall
xor
sbb
outsl
xchg
ss
call
sbb
daa
mov
shll
and
out
push
mov
push
push
fidivrs
pop
jbe
mov
pushfw
or
js
sub
imul
adc
mov
adc
outsl
push
and
bound
idiv
inc
pop
xchg
iret
bound
clc
mul
pop
bts
xchg
xor
loope
scas
int3
pusha
jo
adc
jmp
mov
sbb
inc
inc
or
inc
movsb
lods
cs
icebp
inc
xor
mov
stos
movsb
incb
je
cmp
adc
mov
fdivs
jg
mov
hlt
xor
int
dec
lods
popa
fistl
push
jbe
lcall
fldt
adc
mov
mov
xlat
imul
mov
imul
push
popa
pop
hlt
pushf
cmp
rol
pop
test
add
jmp
adc
bound
jnp
xchg
leave
sarb
fisubl
cld
ja
mov
jg
loop
testb
sbb
mov
fildl
hlt
sbb
ss
out
push
and
add
mov
jecxz
ret
mov
mov
inc
mov
cmp
pop
inc
faddl
mov
es
push
nop
insb
int3
xlat
dec
ja
push
adc
out
out
xor
clc
and
dec
fiadds
scas
push
lret
cmp
insl
pop
ret
inc
insb
cmpsl
inc
mov
mov
push
fs
cmp
cmpsb
mov
push
jl
fwait
icebp
adc
fcoml
lcall
cmpsl
mov
lahf
cmpsl
lods
xchg
fidivs
sti
lahf
cmpl
in
in
scas
in
add
arpl
sbbl
ret
dec
xchg
lcall
outsb
out
xchg
mov
and
test
mov
xor
jmp
andl
movsl
lahf
fst
clc
cwtl
sub
es
push
inc
sub
lahf
bound
sbb
jae
stos
mov
xchg
stc
dec
push
mov
addr16
push
pop
push
shrb
cmpsl
stos
scas
jl
jno
push
or
jmp
sbb
leave
les
aaa
dec
aam
clc
out
or
test
pop
inc
aas
xor
sub
ror
adc
cmpsl
shrb
or
inc
mov
sub
test
jecxz
add
add
roll
mov
push
rep
xor
jmp
inc
sbb
xor
mov
mov
out
adc
pop
push
movsb
pushf
cs
jecxz
pusha
shll
or
cmp
mov
call
mov
addr16
dec
xchg
popa
cld
jnp,pn
sbb
jge
add
xchg
lahf
jmp
aad
xchg
mov
mov
gs
push
pop
gs
cmp
xor
iret
xchg
lds
loop
and
shrl
jle
cmp
fstps
adc
cmc
dec
adc
imul
xor
clc
add
cmpsb
cmp
bnd
shrb
and
out
xchg
xor
mov
call
sub
fiaddl
bnd
jmp
mov
out
mov
cwtl
sarb
pop
std
data16
add
adc
pop
xchg
jle
jnp
cs
cs
jmp
jb
movsl
sub
mov
jo
jmp
xor
jecxz
and
or
add
lods
ss
ret
sub
sbb
pushf
push
ss
lcall
and
pop
jo
add
jp
sbb
ljmp
mov
pop
xchg
mov
jno
stc
fs
jb
push
test
stos
lea
cmp
sub
inc
xchg
sbb
icebp
add
hlt
dec
and
xor
add
mov
pop
scas
mov
insl
push
imul
adcl
cmpsl
mov
pop
hlt
popa
add
mov
jo
stc
je
iret
xor
mov
frstor
jmp
xor
dec
jecxz
fcom
xchg
jne
xor
mov
push
and
xchg
inc
pushf
test
jg
pop
push
outsb
mov
xor
pusha
push
dec
adc
rorb
sti
add
jb
adcb
mov
mov
cmp
dec
arpl
ret
cmp
std
jmp
popa
xchg
pop
mov
mov
cmp
adc
out
scas
arpl
mov
fistpl
lock
loopne
adc
jecxz
pop
add
aaa
cmpsl
adc
repz
mov
pop
pop
stos
xor
pop
in
push
addr16
call
sub
inc
jge
hlt
mov
mov
adc
mov
and
add
or
scas
or
shlb
pusha
mov
loopne
sti
xor
cmpb
xor
enter
sarl
fsubrl
scas
mov
lret
mov
fcomps
insl
sbb
pop
lcall
push
inc
and
int3
jbe
and
jle
out
dec
inc
fcomi
out
push
enter
adc
mov
mov
into
xchg
mov
in
xor
out
or
jbe
loope
xor
lea
sbb
sub
xor
xor
push
fldt
fidivl
pop
lss
jnp
nop
insl
xchg
mov
in
lods
psrlq
jbe
jle
je
push
insb
rcll
scas
and
outsl
adc
dec
mov
scas
mov
pop
cld
push
jae
outsl
shll
inc
xor
push
mul
jno
inc
jmp
lcall
xchg
sbbl
orl
xchg
mov
cmpsl
rcr
adcb
push
imul
inc
rcll
std
mov
ror
and
sbb
fnstcw
mov
ret
pop
jecxz
cltd
ret
stos
mov
push
push
sbb
mov
push
sub
in
sbb
lods
mov
mov
xor
cmp
mov
in
dec
out
lock
dec
inc
clc
xor
int
add
sub
sarb
dec
cmpsl
mov
cmp
je
jle
xchg
push
cmc
lods
cwtl
fadds
mov
jp
mov
ss
add
dec
test
fiaddl
jbe
and
push
cltd
xchg
xchg
mov
xorl
sbb
dec
das
ljmp
sbb
xchg
aaa
es
in
sub
jecxz
das
out
popf
and
jns
inc
cmp
dec
mov
sub
dec
test
mov
mov
mov
mov
sbb
aad
test
je
mov
int3
data16
je,pt
inc
xor
jae
adc
mov
inc
adc
pop
cltd
jbe
movsb
mov
and
imul
xor
hlt
pop
add
or
xchg
imul
dec
mov
cmpsb
insb
dec
jge
dec
lcall
neg
jno
push
sahf
xor
xor
dec
movsl
xor
mov
mov
jbe
adc
adc
adc
je
aas
cmp
lahf
outsb
xchg
or
inc
jnp
mov
or
or
cmpsl
aaa
fdivrs
pop
cltd
gs
dec
je
lret
das
dec
in
lret
xorps
xor
jmp
mov
scas
mov
fisttpl
dec
gs
out
stos
and
lea
pop
ja
mov
push
stc
inc
fimull
cmp
andb
ljmp
mov
mov
sbb
adc
inc
adc
push
and
fistpll
mov
adc
loope
jp
out
push
in
iret
ss
mov
mov
mov
sub
pop
dec
cmpsl
xchg
jbe
pushf
adc
pop
test
xchg
aaa
scas
jle
out
mov
mov
sbb
es
jecxz
neg
sbbb
inc
mov
je
mov
mov
mov
insb
and
jo
js
inc
xlat
xor
imull
jae
inc
out
sub
ljmp
fildl
mov
lods
and
mov
push
mov
inc
sbb
js
subl
adc
addb
test
std
inc
jo
pop
pop
push
fbstp
sti
sub
mov
pop
dec
jne
cmp
jnp
nop
aad
or
jns
les
add
shr
insb
xchg
xor
xchg
or
movsb
fisubrs
test
jecxz
hlt
popf
jl
sbb
lods
in
rol
push
add
xor
ja
inc
xor
inc
mov
insl
push
mov
cmp
mov
leave
xchg
and
fmull
sub
cmp
fs
push
xor
lds
push
inc
or
out
xchg
sbb
sarb
inc
mov
jl
sub
je
daa
das
imull
push
mov
jae
cltd
push
or
mov
adc
pop
stc
repz
pushf
outsb
xor
dec
push
in
rcr
and
pop
cltd
push
aad
pop
cmp
cmp
add
add
out
ja
sbb
and
mov
pop
stos
pusha
aaa
lods
or
es
or
test
scas
idivb
xchg
lock
shrb
insl
xor
int
cmc
ljmp
inc
loopne
push
test
push
dec
sbb
jne
cmp
pop
scas
pop
jl
pop
xchg
stos
sbb
fimuls
inc
sarb
adc
mov
in
mov
add
mov
mov
daa
insl
dec
nop
cwtl
mov
icebp
pop
fs
test
fistps
nop
addr16
add
cmpsl
or
mov
sub
pop
loopne
lds
call
shrb
mov
pop
cli
out
call
dec
imul
mov
test
inc
shll
pop
clc
shll
in
fwait
push
jbe
rolb
push
shlb
pop
popf
xchg
test
test
fnstenv
sbb
pop
mov
dec
mov
int3
xor
push
fsubl
movsb
sub
test
je
into
ret
daa
pop
adc
in
leave
aaa
mov
jae
lods
aad
push
cltd
and
push
ficomps
push
or
inc
mull
fidivs
icebp
mov
cwtl
sub
fsts
imul
sbb
push
hlt
jle
add
sarl
repz
in
inc
test
ds
sub
outsl
push
mov
sbb
pushf
insl
cwtl
std
or
dec
sbb
mov
cmp
cmp
or
cmpsb
lret
test
shll
push
int3
mov
inc
ljmp
addr16
mov
xchg
mov
les
sub
scas
jbe
xchg
leave
ljmp
cmp
xchg
ret
mov
jl
dec
imul
push
push
nop
xchg
pop
test
push
rorb
gs
mov
mov
jmp
mov
sbb
push
xor
aad
sbb
in
fcom
testb
fmulp
and
insb
les
add
inc
push
jno
scas
xchg
add
add
lods
mov
pop
ret
test
lahf
mov
sub
dec
iret
jecxz,pn
dec
jbe
not
jne
mov
pop
and
and
adc
movsl
insl
sbb
sbb
cmp
cli
sub
daa
js
pop
iret
scas
mov
inc
adc
push
insl
pusha
add
pop
jl
bnd
push
jl
ja
adc
pop
sub
mov
mov
fcoml
adc
out
adc
mov
cmp
pop
or
pop
sbb
adc
imul
daa
sub
insl
adc
sbb
imul
pop
imul
ret
leave
dec
in
scas
and
test
dec
int
mov
xchg
arpl
out
sbb
mov
sbb
or
jns
fldcw
dec
out
mov
sbb
add
aaa
lods
xchg
nop
sbb
add
ss
mov
lcall
add
rolb
ret
sbb
scas
mov
mov
cmpsb
mov
xor
mov
les
sarb
shll
movsb
gs
mov
fildll
pushf
orl
movsl
push
addl
pop
adc
xorl
push
syscall
data16
xor
imulb
movsb
mov
fnsave
fcoms
in
imul
dec
das
mov
dec
cmc
jo
cmp
jle
and
and
movsb
xchg
mov
push
adc
xchg
cs
xor
cmpsb
cmp
xor
data16
outsl
rcrl
lret
adc
xchg
popa
dec
cmp
push
dec
ljmp
mov
hlt
mov
xchg
std
fdivs
cltd
dec
movsb
hlt
and
xchg
inc
js
pop
rcrl
dec
jl
cmpsb
jae,pn
negb
notl
cltd
xchg
sbb
cmpl
popa
mov
mov
or
and
adcl
ja
xchg
cmp
push
pushf
mov
mov
push
push
cmp
outsl
xchg
aaa
sub
rolb
ja
sbb
shrl
cli
jbe
mov
mov
xchg
adc
xchg
hlt
cmpsb
dec
push
mov
and
out
cmp
out
add
and
or
add
push
sbb
cmpsb
or
leave
add
adc
out
or
repz
jbe
leave
cmp
cmp
dec
lfs
aam
mov
xchg
imul
inc
imul
cwtl
jae
fnstsw
sub
call
cmp
add
ret
sub
lds
mov
pop
repz
test
pop
shlb
mov
test
and
sbb
lock
stos
jnp
test
ss
jmp
lea
sub
shl
mov
loopne
mov
test
stc
mov
mov
loope
cmc
cmpsl
out
push
add
add
and
jb
daa
xor
into
pop
cmp
js
pusha
mov
aas
incl
xchg
push
or
sbb
cwtl
test
inc
fildll
mov
adc
or
cmp
xor
inc
scas
das
xlat
adc
and
cmpsl
pusha
ds
data16
stc
xor
inc
push
rol
ja
fs
and
stc
ficompl
ret
cmc
mov
repz
sub
test
nop
mov
into
roll
imul
mov
mov
pushf
je
sub
cbtw
sub
hlt
enter
in
aas
inc
int
sahf
das
add
mov
pop
dec
push
mov
mov
pop
outsl
sub
push
cltd
mov
fmuls
pop
jl
sub
or
jnp
nop
sahf
loope
cmc
fwait
jecxz
or
inc
add
mov
pop
and
and
mov
add
xor
test
xlat
inc
ds
jbe
xchg
aam
bound
mov
stc
or
js
out
pop
idivb
mov
push
shrb
dec
pop
lahf
lcall
push
add
int3
push
loope
sub
and
cmp
dec
out
popf
sbb
leave
xchg
out
push
mov
add
push
jle
ss
cmc
outsb
popf
popf
xchg
nop
popa
stos
ja
mov
data16
jp
rcrb
or
add
xorl
sbb
mov
xchg
sub
inc
in
cmpl
orl
arpl
stos
stos
jbe
mov
imul
mov
xchg
mov
jb
jg
fsts
inc
out
mov
add
jo
cmc
mov
test
ss
push
dec
cmp
mov
fs
jns
lcall
jbe
daa
jno
jmp
mov
out
add
jge
cmpsb
push
sbb
adc
repnz
addr16
cmp
insb
fistpl
cmpsl
jns
pause
mov
push
cs
and
xchg
push
cltd
add
lahf
std
jne
out
adcb
xchg
sub
js
sti
int
sbb
mov
sbb
add
jl
js
push
push
pop
sbb
aaa
fstps
sub
cmc
push
adc
cwtl
pop
mov
pop
push
divb
cmp
addr16
daa
mov
push
or
cld
insl
and
mov
test
dec
shrl
mov
xor
or
jmp
outsl
rolb
or
sti
into
testb
subb
push
push
loope
jecxz
mov
int
dec
scas
jle
push
ret
sub
xchg
pop
popa
out
decl
gs
and
mov
push
xchg
dec
rclb
fldl
cwtl
aam
add
cmp
sbb
lock
call
out
into
sub
int
clc
add
ffree
sub
sub
adc
call
inc
adc
jbe
mov
add
cltd
pop
xor
push
pop
nop
and
in
push
faddl
cltd
sub
jo
dec
cs
ja
outsb
pop
nop
dec
xor
outsb
add
sbb
stos
popa
lret
jns
mov
leave
inc
insl
sub
add
mov
or
repz
mov
push
adc
mov
inc
sub
enter
xchg
xchg
dec
dec
add
and
dec
out
jge
sbb
adc
in
cmp
rcll
xchg
push
imul
test
xlat
adc
ficompl
test
or
lea
xchg
mov
push
sbb
push
xchg
sbb
pop
add
inc
jae
inc
xchg
inc
or
push
or
mov
jae,pn
clc
nop
push
dec
in
mov
sarl
inc
insb
cwtl
enter
xchg
inc
test
dec
cmp
insb
sub
xchg
mov
lock
loopne
adc
shll
or
rorb
aaa
adc
test
lret
xchg
aad
pop
inc
xchg
divl
shrl
outsb
mov
jno
sbb
xchg
cmp
das
in
pusha
dec
mov
add
push
cmpsb
mov
adc
stos
pop
add
insl
inc
loopne
pop
xor
rorb
arpl
jmp
fldl
orb
jp
lods
notl
xor
cwtl
in
out
push
push
lret
jle
add
inc
adc
mov
pop
jo
sub
and
jns
int3
gs
and
enter
notb
mov
lea
sar
xor
dec
mov
loopne
or
lcall
xchg
rolb
sbb
xchg
rclb
fidivrl
je
xchg
pop
insb
out
inc
xor
push
inc
.byte
xchg
push
.byte
.byte
cmp
movsl
jns
stc
lret
inc
and
mov
inc
loope
sub
adc
xchg
mov
rclb
mov
cmpsl
hlt
pop
and
cld
popa
imul
rorl
aaa
inc
xlat
outsb
sbb
pop
jecxz
mov
mov
xor
ja
lods
lds
cld
add
pusha
pushf
js
mov
push
aad
rcll
imul
xchg
aad
push
jo
mov
inc
inc
lcall
out
or
icebp
sbb
ja
push
outsb
fwait
repz
arpl
inc
dec
je
dec
fildll
in
add
out
int3
mov
or
vpcomub
ficoml
jmp
ss
lock
incb
inc
adc
repnz
xchg
and
out
inc
cli
bound
jbe
dec
add
int
lret
sub
dec
push
sti
loop
add
push
push
push
repnz
jg
pop
xor
xor
and
mov
push
cs
rcl
inc
pusha
pop
cs
rcrl
sub
jbe
test
ss
mov
dec
mov
jae
aas
nop
dec
pop
sub
and
sbb
cmp
add
or
adc
push
or
fldl
add
clc
loop
mov
jae
cmpsl
dec
sub
sbb
addr16
cmp
rcll
shl
mov
mov
jbe
cmpl
sub
nop
push
out
push
mov
mov
andl
xorb
popl
lock
dec
loop
cmovae
dec
mov
sahf
push
gs
pop
ret
adcb
ljmp
bound
cmp
and
and
pop
lock
xchg
test
inc
jge
or
pushf
clc
iret
xchg
mov
and
mov
xor
popf
pop
adc
sbbb
mov
add
repnz
cltd
adc
test
in
xor
rorb
sbb
ret
mov
lcall
je
gs
clc
aad
ret
loop
sarb
int3
aaa
repnz
lods
mul
jns
jecxz
out
test
push
pop
rcll
xchg
adc
fisttpll
in
shrb
add
addr16
cmp
xor
jmp
adc
and
jae
rolb
mov
sub
or
ficoml
imul
js
pop
lret
inc
xchg
push
mov
jnp
mov
fs
addb
xlat
and
mov
jp
mov
je
add
out
lahf
jge
adc
test
dec
lods
negb
add
in
out
mov
int3
sbb
xor
cmpsl
dec
and
push
mov
pop
aas
call
xchg
cmp
mov
das
ja
shll
push
add
mov
hlt
test
and
and
ror
aad
push
mov
sbb
adc
out
xchg
or
in
dec
xchg
adc
sbb
loop
mov
pop
sbb
lods
push
insl
cmc
mov
jns
and
cltd
xchg
aam
lret
iret
sbb
pop
daa
pop
push
mov
fcmove
arpl
test
ja
int
popf
mov
adc
sbb
mov
xor
sbbl
xor
pop
mov
clc
in
pop
fidivs
jle
inc
test
xor
js
mov
aam
add
cmp
and
cmpsl
xchg
fsubs
mov
std
xchg
lret
or
in
or
inc
mov
shll
cld
clc
or
inc
loopne
mov
jb
je
mov
outsb
fists
in
ret
jmp
and
hlt
loop
jecxz
pop
js
testl
loope
data16
mov
add
cmp
dec
fucomi
xchg
inc
pop
test
inc
mov
push
dec
adcb
fsubs
orb
mov
jns
or
int
dec
lods
adc
lahf
into
push
fwait
adc
mov
sbb
cmpsb
xchg
jmp
xchg
cmpsl
add
loope
or
jle
pop
into
loope
xor
movsb
pop
push
ret
stc
add
scas
mov
jbe
stos
cltd
mov
jae
dec
aam
jo
rcrl
xor
mov
xor
xchg
sub
inc
test
pushf
std
add
bound
xor
mov
sti
in
cltd
int
cld
jbe
adc
jae
pop
cs
cmp
jp
in
pop
dec
iret
cmp
cmp
scas
aad
jns
outsl
dec
out
lahf
inc
cmc
jno
ret
aas
or
xchg
or
push
xor
fwait
rcrl
push
push
and
incb
inc
inc
addr16
ret
out
shrl
je
jecxz
mov
out
xor
outsl
sbb
lea
into
outsb
insl
mov
and
pop
mov
dec
sbb
outsl
aas
or
mov
lea
push
bound
pop
pop
add
sbbl
and
xor
mov
push
lock
mov
cli
xor
mov
ja
or
mov
mov
movsb
popa
mov
inc
mov
ss
cmp
pop
ja
xchg
jecxz
push
jae
repnz
js
mov
mov
push
lds
dec
mov
jmp
cltd
pop
cmp
movsl
rolb
pop
js
sti
inc
mov
into
hlt
cmp
ljmp
mov
cmp
insb
push
xor
add
or
mov
js
test
or
mov
sbb
mov
mov
out
loopne
das
jae
movsl
mov
mov
mov
lock
loopne
rorl
sbb
or
pop
inc
mov
je
or
mov
mov
rorl
mov
loopne
jae
mov
inc
mov
pusha
movsb
sti
cli
loop
inc
xchg
and
mov
or
cmp
push
cmp
pop
je
add
and
or
mov
mov
and
rcrb
outsb
sahf
lret
insb
and
mov
add
loope
pop
scas
adc
mov
cmp
in
mov
lock
adc
daa
add
push
ljmp
inc
mov
xor
adc
mov
outsl
ret
mov
mov
aad
fstpl
jg,pt
ja
imul
dec
cmpl
xlat
int
pop
adc
das
mov
insb
ficomps
add
int3
inc
icebp
push
roll
jecxz
ret
andb
mov
jb
popa
aaa
lretw
lods
loope
lcall
mov
and
jge
loop
sbb
in
mov
fisubl
adc
xchg
ret
cmp
cmc
pop
add
mov
pop
mov
lcall
add
xor
mov
mov
arpl
mov
inc
andb
push
add
lcall
push
push
mov
test
pop
adc
sbb
test
clc
ljmp
popf
cmp
xor
test
push
test
shll
arpl
pop
pop
add
hlt
fnsave
mov
and
movsb
jg
jg
insb
or
xor
or
or
pop
subb
test
jno
pusha
test
jns
ret
xchg
or
sbb
add
pusha
mov
cmp
jnp
or
jb
xchg
xchg
dec
jne
loop
sbb
inc
xchg
mov
and
aas
mov
shrb
scas
idivb
push
mov
push
negl
mov
mov
and
or
fwait
jg
pop
or
aas
mov
fsubrs
repnz
mov
jg
ror
push
andl
pop
ds
cmp
sub
call
lcall
xchg
call
lea
cmp
pusha
push
insl
mov
insl
pop
or
add
push
out
sub
out
dec
or
xchg
mov
xchg
mov
cmp
jae
sub
lock
jno
inc
sub
sub
mov
xchg
sbb
xchg
inc
push
or
das
ljmp
push
dec
dec
fiaddl
ret
lock
loopne
fs
jg
jmp
lods
test
fsubrs
adc
out
rolb
cmp
out
std
cmp
or
jp
nop
mov
dec
aas
lods
xor
sbb
inc
mov
lods
fdivl
pop
cmp
popa
arpl
aas
mov
jle
mov
pop
dec
adc
sub
or
mov
cmp
pop
sub
shlb
jb
cld
shlb
data16
das
cmpsb
xorl
pop
cmc
int
sbb
or
lea
jae
add
iret
push
in
mov
xchg
cs
or
mov
and
dec
inc
xor
mov
pop
push
mov
lcall
scas
fdivl
jg
add
out
and
inc
push
outsl
xor
xor
cmpsl
adc
sub
adc
inc
inc
push
movsl
int3
repz
imul
inc
addl
outsb
sar
lock
inc
ja
mov
mov
cli
mov
outsl
pop
mov
mov
imul
andb
xchg
mov
jb
addr16
mov
cs
test
ficoml
pop
in
fstps
mov
enter
jns
int
mov
push
mov
jmp
lcall
mov
scas
pop
outsl
test
jmp
loopne
inc
jecxz
test
push
ror
pop
dec
sub
mov
cmp
loopne
dec
or
sub
xchg
in
jecxz
loopne
or
dec
mov
lods
xlat
flds
jl
in
lods
inc
pop
popa
xorb
xchg
popa
push
insb
adc
int
cmp
mov
std
mov
xchg
inc
daa
cmp
mov
xchg
iret
fptan
pop
push
notb
push
les
mov
mov
xchg
fs
ret
je
pushf
and
dec
mov
ljmp
lock
mov
fisubrl
stos
push
push
das
popf
mov
xchg
push
cmp
pop
clc
std
inc
inc
mov
sbb
jno
fwait
mov
add
mov
adc
xor
fisubrl
movsb
scas
xor
testb
add
fildll
and
mov
jno
neg
and
pop
js
imul
xchg
rorb
sbb
popf
aam
fimull
and
mov
in
subb
scas
ret
jle
imul
xor
stos
rorl
enter
cld
lods
mov
add
push
bound
and
enter
adc
cmp
movsl
fdivrl
out
js
fdivs
sbb
rcrl
sub
insl
iret
adc
add
sub
adc
addl
pop
xchg
mov
ljmp
inc
add
jns
jl
jne
sbb
pop
cwtl
cmp
hlt
mov
mov
gs
cli
popf
popf
sbb
cltd
enter
mov
pushf
sub
adc
orl
xor
in
dec
jle
popa
fcomps
sub
dec
sub
mov
addr16
pushf
adc
xchg
push
add
movsb
es
or
out
notl
int3
xor
jno
or
cwtl
es
or
cli
out
mov
mov
sub
scas
pop
lret
mov
std
mov
out
sbb
jge
dec
in
mov
cwtl
rcll
and
insb
addr16
mov
mov
in
scas
mov
mov
xor
dec
es
and
lahf
negb
outsb
inc
out
fs
add
out
fisttps
cmc
xchg
mov
add
sti
and
iret
push
add
je
lock
jns
sub
loop
sbb
mulb
xchg
inc
xor
mov
cltd
xchg
push
enter
or
pop
and
mov
inc
mov
rorb
jno
fisubs
test
fisttpll
add
and
cmp
push
incl
ljmp
sahf
int3
fchs
and
jmp
xor
pop
loope
add
cmpsl
adc
xchg
mov
xlat
daa
jb
lret
adc
cmpsb
sbb
testb
out
aam
movsl
and
mov
scas
insb
cmp
or
mov
out
lahf
mov
imul
pop
loope,pn
push
adc
jge
pushf
frstor
jp
popa
inc
or
adc
in
inc
in
or
push
std
xchg
mov
imull
sub
ja
and
jno
das
and
aas
push
push
sub
push
jle
pop
divb
mov
je
xor
mov
inc
outsl
js
les
xor
jg
cli
adc
xchg
pop
sbb
cld
es
mov
dec
popa
inc
cmp
pushf
movsl
jl
adc
std
dec
mov
dec
push
fwait
imul
and
dec
and
ret
je
mov
add
mov
call
lea
roll
out
cmovs
mov
mov
cmpsb
jno
ss
mov
movsb
pop
cld
lods
jns
push
loop
xchg
fdivr
xchg
test
inc
cmpsb
pop
ljmp
mov
je
xor
mov
push
mov
cmpsl
mov
add
push
enter
push
fistpll
add
xchg
rcl
inc
ja
out
cmp
and
je,pn
ret
push
mov
mov
js
rcrl
enter
push
mov
fsubrs
jg
sbb
or
push
insb
push
lahf
and
loopne
daa
loope
lea
loopne
jb
mov
pop
mov
cmpsb
aam
lock
outsb
rolb
outsb
inc
or
fwait
dec
inc
sub
sbb
mov
sub
jo
cmpsb
je
std
mov
add
add
cld
addb
dec
lods
shrl
push
sub
stos
dec
dec
sbb
cmp
std
repnz
jge
sbb
push
lock
xchg
jmp
lret
cmp
in
xchg
push
jge
and
imul
das
sub
jo
xchg
mov
loop
or
out
inc
jmp
inc
inc
or
adcl
mov
pushf
adc
adc
es
sub
rcrl
aam
lods
xor
xor
or
or
pop
sahf
sbb
sbb
testb
int3
cmpb
cld
jo
add
adc
fsts
mov
cmp
ret
dec
push
pushf
cld
sbb
aam
test
iret
add
dec
mov
clc
push
vpshlb
pop
sbb
pop
jno
lahf
movsl
push
adc
mov
lds
leave
iret
add
shl
and
daa
and
enter
test
in
fs
sub
jbe
call
or
fsubr
sarb
adc
inc
jg
call
sbb
jbe
loop
push
push
add
dec
fs
and
xlat
mov
mov
jns
fcomp
daa
gs
push
stos
push
imul
cmp
mov
cmp
jp
loopne
fstpt
scas
push
add
out
sub
cltd
jno
mov
cmp
or
jmp
jne
sahf
dec
lcall
std
insl
xor
mov
lds
mov
es
jbe
icebp
icebp
fsubrs
cmp
ret
leave
jp
jecxz
pushf
push
pop
add
mov
test
ret
xor
pop
sub
in
jno
rorb
mulb
orb
lahf
inc
std
mov
or
sub
mov
repz
inc
cltd
sub
push
fs
jae
adc
ljmp
fidivs
and
call
lock
jecxz
aaa
cs
fistps
ja
xchg
or
xchg
push
scas
into
mov
mov
js
aam
cmp
lcall
pop
into
and
jp
inc
mov
cld
mov
push
sub
inc
loop
dec
xchg
push
aaa
and
loopne
lahf
add
repnz
sbb
dec
ror
and
adc
and
push
shlb
ret
sahf
inc
add
xchg
push
mov
cld
lods
xchg
clc
mov
pop
inc
inc
jno,pt
add
lret
jp
adc
push
mov
test
xchg
cmp
jo
adc
loop
lcall
pslld
xchg
leave
ds
js
pop
iret
fcomps
and
lretw
clc
add
or
ja
jg
aam
cmpb
in
mov
lds
orl
dec
sbb
jg
inc
imulb
pop
jle
mov
sub
lea
imulb
mov
test
aas
loop
and
sarb
cmpsl
inc
aaa
lahf
lahf
cmp
inc
scas
repz
nop
fst
push
sbb
loopne
sub
stos
call
push
push
pop
xchg
imul
mov
pushf
arpl
test
clc
cmpsb
aas
cld
add
pushf
mov
or
decl
fcmovnu
shlb
cmp
out
jecxz
xlat
aad
pushf
call
aam
jmp
test
and
dec
sahf
aas
sub
mov
pop
mulb
mov
paddb
jecxz
jno
movsl
out
loope
pop
jge
adc
andb
xchg
in
jb
or
lods
stc
xor
mov
push
or
vpunpckhqdq
inc
add
and
cmp
aad
lods
pop
stos
dec
or
cmpsb
dec
adc
push
cmp
dec
push
jns
xchg
adc
adc
dec
and
jbe
mov
stos
mov
cwtl
cld
mov
mov
sub
lock
test
inc
add
cmpsb
stos
mov
shl
push
inc
dec
cwtl
je
and
jecxz
arpl
outsl
jmp
pop
jne
divb
roll
sub
loope
int3
cmp
and
imul
repnz
adc
pop
sbb
in
repz
sbb
les
arpl
ljmp
pop
and
cmp
adc
xlat
sub
out
stos
lcall
jns
cmp
xchg
es
ret
fadds
push
cwtl
push
add
cmc
or
ds
xchg
pusha
sahf
mov
push
ret
jge
cmpsb
mov
ja
faddp
cwtl
addr16
xchg
mov
in
and
add
mov
int
pushf
cmp
jno
jge
or
lret
cmpsl
dec
lock
daa
sub
jbe
mov
dec
adc
jns
out
lods
push
out
jbe
sti
daa
lahf
shlb
popa
mul
or
int
push
outsl
add
pop
mov
push
or
cs
pop
repz
aam
stc
jge
orl
popa
lods
popa
pop
daa
sti
fists
fwait
mov
mov
ljmp
jecxz
xchg
push
xchg
pushf
dec
es
neg
xchg
mov
adc
rcr
mov
jbe
xor
cmp
jge
scas
or
insb
sbb
lds
lcall
pop
cmp
add
and
pop
inc
xchg
or
mov
sbb
pop
insb
inc
mov
leave
sub
in
mul
fstpt
rorl
xchg
mov
cmp
js
lret
lds
ljmp
xor
sub
sahf
hlt
mov
pusha
sahf
out
hlt
mov
pushf
fwait
lret
sub
or
mov
dec
js
ror
push
add
mov
xor
mov
sahf
push
outsl
es
jp
repnz
add
rcrl
das
inc
sbb
lods
dec
int3
jbe
xor
std
adc
xchg
add
adcb
out
inc
add
adc
xchg
sub
cmpsl
inc
fldenv
cmp
pop
cwtl
adc
fdivs
xchg
fsubs
xchg
cmc
cs
push
jg
test
pop
je
cs
repz
test
shll
movsl
add
stc
movsb
icebp
pusha
sub
dec
shll
aaa
out
inc
mov
mov
xchg
mov
xchg
xor
ret
or
lods
stc
push
cmp
xchg
sub
or
nop
xchg
xchg
mov
rcrb
jo
hlt
and
cmp
lahf
std
cmp
clc
in
imul
hlt
fidivrl
sbb
out
pop
push
js
or
mov
mov
adc
decl
add
mov
in
push
jg
mov
rclb
xchg
inc
xchg
dec
aas
mov
pop
fidivrs
bound
push
add
sbb
or
xchg
ds
pop
add
test
mov
push
lahf
cld
ret
scas
sbb
rcrl
mul
xchg
mov
adc
loopne
mov
daa
push
aas
jb
adc
xor
xchg
and
ja
pop
xchg
div
sbb
push
js
mov
mov
mov
fs
leave
movsl
ret
or
ljmp
js
cs
roll
adc
hlt
adc
add
or
daa
mov
add
lahf
mov
stos
stos
dec
sti
mov
sbbl
idivb
cmpsl
data16
sti
or
stos
mov
sbb
jmp
dec
lret
fadds
jg
insb
aad
shlb
jo
lds
sarl
cltd
sbb
push
daa
pop
sbb
dec
loope
sbb
sbb
iret
inc
push
jae
mov
fbstp
mov
sbb
inc
je
cltd
test
je
jecxz
lcall
std
add
fists
loope
negb
mov
push
sbb
cmc
push
lahf
cmc
cs
adc
xor
inc
pop
adc
mov
xor
out
mov
add
sub
or
adc
insb
add
xor
ljmp
loop
or
jp
out
test
pop
leave
jb
scas
cmp
mov
leave
gs
push
arpl
xchg
jae
mov
sbb
imul
xchg
out
sbb
sub
fldl
jmp
inc
lcall
rcrl
data16
jnp
into
ds
insl
jne
jg
mov
or
jb
es
adc
call
add
out
insb
int
out
clc
sbb
cmp
inc
lahf
mov
orl
fidivrs
push
jno
pop
pop
iret
add
sbb
and
or
jge
push
inc
outsb
out
xor
stos
pop
call
mulb
adc
in
push
and
fwait
ret
test
sar
imul
repnz
mov
arpl
lea
cmp
cmpsb
data16
gs
mov
clc
in
jmp
gs
dec
jp
push
dec
and
addb
mov
mov
sbb
test
repz
sub
sub
inc
or
mov
das
mov
mov
lret
and
inc
adcb
cmpsb
addr16
mull
cmp
jnp
pop
adc
pop
movsb
cmpsb
push
repz
jmp
sub
pop
sub
fmuls
int3
aas
hlt
xlat
push
jecxz
jge
mov
mov
js
push
andl
push
xchg
dec
and
mov
mov
scas
dec
cmp
in
add
jnp
inc
inc
shll
xor
fsubp
mov
loopne
jge
jg
insb
mov
mov
mov
rcrl
sbb
test
fucomi
inc
or
adc
pop
sbb
cmp
cwtl
orb
xchg
or
jge
loope
rclb
push
nopl
inc
sbbb
out
shll
push
test
and
cli
push
jl
lods
into
sti
ss
fidivrl
xor
add
and
js
adc
lret
dec
or
push
imull
sub
add
fildll
lret
mov
pusha
incb
cmc
jl
clc
mov
mov
mov
or
mov
push
test
lahf
mov
gs
adcl
test
pusha
mov
cli
lret
dec
dec
add
pop
test
rorb
loopne
bound
jns
jnp
je
rolb
lods
cmp
push
cmp
mov
popf
daa
divb
xlat
or
pop
sbb
and
mov
inc
add
fcomps
xor
insl
loopne
es
mov
mov
imul
in
mov
jge
cmp
mov
jae
jmp
mov
outsl
lods
fistps
loop
cwtl
mov
lahf
sub
push
popa
cmp
in
std
fidivrl
or
sub
sub
jge
push
loope
andb
sub
ret
clc
packuswb
mov
xchg
sbb
mov
add
push
aam
outsb
dec
dec
popf
loop
xchg
out
insb
mov
mov
or
and
xchg
pop
in
jge
scas
adc
inc
or
mov
sbb
cmpsl
sub
int
mov
inc
out
dec
dec
cmc
xchg
out
mov
xor
fnstenv
adc
out
je
cmpl
xchg
mov
mov
and
cmc
mov
xor
jl,pn
lret
inc
adc
in
jmp
add
pop
out
cmp
lret
movsb
aaa
push
movq
mov
push
sub
repz
dec
mov
mov
pop
test
push
dec
sahf
xchg
ret
aaa
testb
add
shlb
add
cmp
mov
add
push
xchg
into
sbb
stc
mov
xor
cwtl
pop
dec
jbe
mov
dec
repnz
adc
mov
bound
inc
and
es
cmp
sbb
or
xchg
lods
pusha
sbb
push
push
jbe
stc
aaa
xchg
jle
lcall
iret
mov
idivl
cld
std
fs
mov
push
mov
jecxz
inc
dec
divl
imul
xchg
ja
inc
sbb
or
nop
stos
jns
sti
mov
test
cwtl
jbe
mov
ja
adc
hlt
or
lds
pop
fsubrs
out
add
dec
lcall
and
cltd
add
rclb
lock
sbb
imul
fadds
jne
and
cli
xchg
ss
cs
repz
pop
loope
xchg
cmpsb
push
ja
xchg
mov
sub
pop
mov
pop
iret
fdivl
push
sbb
cwtl
xor
xchg
mull
pop
cld
pop
je
insl
test
mov
out
mov
popa
out
movsb
loopne
mov
pop
pop
data16
jns
outsl
fistpll
je
jb
loop
pop
fwait
add
cmp
mov
jno
pusha
mov
pop
aas
jecxz
fdivr
mov
adc
das
push
iret
add
xor
inc
gs
and
and
dec
xchg
jmp
sahf
jl
jle
xchg
jmp
jg
popf
jae
dec
movq
pop
cmc
and
and
sti
mov
adc
test
pushf
daa
cmp
jae
addl
daa
sub
mov
lcall
pop
cmpsl
jmp
loope
sarl
cmp
mov
add
call
imul
popa
pop
insb
mov
add
ds
dec
dec
push
addl
xchg
pop
loop
aad
movsl
lea
add
dec
xor
sar
das
ja
mov
sub
add
test
popa
sub
mov
jne
shrb
int3
cld
movsl
jns
jg
add
sub
repnz
cmc
jmp
inc
jb
or
xchg
ljmp
enter
loope
mov
int3
cltd
sub
cld
test
lds
gs
xor
out
xor
jo
pushf
cmc
pop
in
pop
roll
mov
test
in
iret
dec
sbb
add
imul
arpl
and
mov
mov
mov
pop
rolb
adc
mov
xor
dec
pop
lea
outsb
lret
push
dec
shlb
cmp
inc
push
or
aad
push
fiadds
mov
or
test
mov
jb
loop
push
stos
sub
xchg
and
fdivrp
dec
cmp
jo
push
cmp
cs
int3
scas
out
outsb
xor
aas
pop
cli
sbb
lret
or
adc
push
leave
test
xor
test
imul
mov
test
xor
fmuls
iret
aas
pop
mov
dec
call
adc
lea
test
stos
pop
mov
cli
dec
sub
into
mov
gs
fnsave
out
test
jmp
sti
push
jbe
jmp
testl
or
mov
fmuls
add
daa
out
or
dec
inc
js
lret
dec
dec
and
pop
pushf
jle
fdivs
in
mov
mov
push
mov
jge
pop
dec
mov
scas
insb
cwtl
or
dec
pop
dec
xchg
mov
bound
jle
in
xor
in
mov
inc
mov
push
adc
pop
sub
mov
push
lret
mov
mov
sbb
add
push
subl
das
std
sub
ret
push
add
popf
mov
leave
int
pop
popf
mov
push
cmpsl
stc
or
mov
sbb
cmpsb
pop
inc
daa
pop
cmp
arpl
outsb
push
sbb
jae
mov
sub
scas
inc
xchg
and
sarb
xor
negb
push
dec
sub
jmp
push
out
xchg
fisubs
or
push
mov
int
inc
lds
test
xchg
sub
add
or
xor
inc
push
jmp
pusha
lcall
clc
ret
mov
add
jecxz
mov
cs
sub
mov
push
and
hlt
xor
push
lods
mov
lret
fsubrl
out
roll
aad
test
add
std
xchg
adc
aaa
or
jge
push
jl
jecxz
jp
lods
add
out
adc
insl
popf
sahf
out
cmp
push
or
push
fs
pop
sub
lock
adc
ljmp
inc
xor
push
jns
cltd
mov
jecxz
cmp
lock
popa
mov
in
das
cmp
fsubrs
jecxz
jno
rclb
sbb
cmpsl
das
ret
cmp
mov
inc
xchg
pop
pop
mov
jl
sub
add
mov
dec
cwtl
push
and
cmc
sub
in
mov
mov
icebp
push
xor
cld
or
gs
sbb
pop
fucomi
cmc
stos
rorl
in
inc
dec
push
incb
lods
inc
pop
push
dec
ss
mov
cmpb
sti
les
adc
cmp
addr16
mov
in
jae
or
mov
enter
insb
rclb
aam
pop
cli
mov
pop
popa
es
adc
sbb
push
daa
sub
sbbb
jo
jnp
in
stos
sbb
imul
mov
or
xchg
aaa
dec
repnz
loopne
mov
dec
jno
nop
fucomp
cmp
mov
jmp
push
mov
std
cmpsb
push
out
cmpsb
push
inc
jns
xchg
xor
xor
imul
push
xchg
mov
je
xor
fisttpll
call
push
xchg
arpl
std
add
mov
jp
in
or
mov
testb
xlat
cmpsl
sbb
push
push
fdiv
sbb
add
pop
inc
jmp
fldenv
sub
aad
cltd
push
inc
in
repnz
lahf
packuswb
push
sbbb
jo
flds
cmp
movsb
shl
push
inc
or
lods
popa
mov
xchg
scas
fstps
cli
inc
cmc
cs
out
fdivrp
adcb
shrl
test
roll
shlb
pop
adc
jae
orl
in
mov
jl
inc
insl
sbb
gs
xchg
arpl
shlb
xchg
out
mov
stc
gs
adc
adc
aaa
jge
loopne
stos
shll
mov
imul
cwtl
xor
mov
and
cmc
xchg
inc
ljmp
pop
mov
incl
test
xchg
adc
inc
ljmp
insl
jae
xchg
jge
push
sbb
sbb
pusha
sar
cmp
jle
jb
dec
test
inc
push
mov
adc
repnz
push
push
scas
inc
call
push
mov
sub
xchg
lods
inc
pop
je
daa
scas
call
sub
xchg
push
sub
pop
mov
adc
out
adc
aaa
in
xchg
sahf
ds
pop
adc
scas
loope
imulb
mov
and
scas
cmc
jo
push
daa
push
fs
and
sub
pop
push
add
lret
xlat
mov
mov
jnp
nop
stos
dec
dec
divl
shll
je
test
dec
cmc
mov
and
push
add
and
lret
xor
enter
aam
mov
cmp
jae
les
jg
pop
in
aas
jge
int
cltd
imul
xchg
std
xor
cmp
test
and
jae
or
xchg
mov
movsl
dec
xlat
dec
cmpsl
lret
iret
jp
lcall
ds
fmulp
push
push
push
dec
out
testb
out
es
iret
dec
jns
loopne
mov
mov
mov
ret
jg
mov
mov
sbb
repz
and
popa
stos
jns
mov
push
cs
fucomip
push
push
dec
push
icebp
das
fwait
je
and
jg
in
pop
push
loop
mov
and
mov
movsb
stc
dec
clc
mov
lea
stos
cmp
popf
xor
cmp
aaa
lret
js
sbbl
push
xor
aad
add
pop
or
sbb
jbe
outsl
ret
mov
xchg
add
cld
and
lods
xor
dec
stc
push
shrl
imul
dec
pop
sbb
sti
shlb
into
adc
rorl
xlat
lret
add
pop
mov
xchg
or
shrl
rcl
jmp
cmp
movsl
xor
xchg
stos
inc
fnstcw
movsl
mov
iret
shr
aam
stc
jge
test
repz
cmp
int
pushf
push
or
inc
and
arpl
clc
aas
dec
pop
or
fcmovu
dec
jmp
pop
xorb
dec
imul
or
data16
push
dec
pusha
adc
fstps
mov
notb
mov
xchg
lock
xchg
jge
push
inc
das
pop
ljmp
push
insl
cmpsb
call
xorb
daa
aaa
in
loope
jnp
mov
mov
adc
cltd
outsl
les
adc
xor
dec
adc
gs
int
loopne
arpl
mov
ret
inc
mov
ret
cltd
pop
pop
and
or
xchg
ljmp
outsb
xchg
repnz
mov
enter
mov
add
add
adc
sbb
sbb
int3
outsl
mov
ret
cmp
pushf
sbbb
and
insl
xchg
jo
mov
cmp
mov
jns
daa
sbbl
sub
mov
pop
jae
dec
dec
pop
pop
cltd
pop
mov
std
sahf
daa
pop
adc
dec
and
and
push
xor
adc
push
and
scas
and
ficomps
mul
icebp
jmp
pop
cmpsl
les
popf
fimuls
push
inc
lret
arpl
xor
fcmovbe
or
push
mov
popa
add
xchg
mov
jmp
jae
inc
into
add
gs
jecxz
mov
mov
loope
push
inc
cmp
sbb
into
xchg
pop
gs
jns
pop
and
pavgw
lcall
inc
out
scas
ss
rorl
push
xlat
cld
lods
nop
dec
mov
imull
rcrl
push
xor
inc
loopne
and
pop
or
mov
rcll
pop
push
push
in
pop
rcrb
aad
jo
daa
adc
mov
test
fwait
dec
fists
in
cmp
mov
cmp
fcompl
dec
mov
gs
fucomip
mov
aam
popa
and
pop
fs
pop
lods
sbb
or
jl
loope
xchg
xor
cmp
aaa
dec
ret
int3
loop
into
and
adc
jno
xchg
or
mov
push
add
push
ja
cmp
xchg
inc
sahf
mov
adc
push
and
or
pop
cmp
jns
dec
ret
imul
jmp
push
push
jmp
ficomps
lcall
loop
lcall
loopw
inc
test
mov
pop
inc
mov
cmp
add
lds
jecxz
dec
or
in
ss
ljmp
jecxz
lcall
jno
ss
test
lea
cwtl
xor
fldcw
sti
inc
jne
mov
imul
mov
cmpsb
mov
jne
mov
sti
nop
loope
sbb
push
lock
inc
mov
jnp
xchg
addr16
sbb
adc
push
adc
jmp
sub
xchg
lahf
push
adc
push
fiaddl
mov
xor
push
xor
xchg
jo
push
testb
inc
ds
stos
xorb
mov
imul
dec
mov
addl
adc
outsb
or
cmp
dec
clc
cltd
jo
jbe
sbb
mov
or
rorl
xchg
or
jp
mov
lea
fiadds
dec
inc
xor
mov
push
sbbl
jb
fidivrl
movsl
sub
lcall
mov
push
in
dec
leave
and
mov
mov
inc
mov
dec
pop
xchg
jno
sbb
dec
insb
sub
add
or
je
out
cmp
push
push
mov
pop
push
adcl
xorl
nop
and
stc
mov
xor
notl
mulb
xor
jmp
and
pop
or
popf
stc
push
test
push
test
movsb
test
pop
arpl
and
fcoms
jo
cmp
mov
aaa
inc
adc
adc
mov
sbb
leave
scas
rclb
cli
lods
das
sub
lods
lods
xorb
adc
loopne
std
cmp
xchg
inc
insl
fs
mov
lea
roll
daa
dec
std
push
mov
or
lods
sub
jle
add
nop
inc
pop
mov
or
push
sub
pop
lcall
mov
daa
shl
mov
add
lods
dec
test
sarb
jbe
push
nop
icebp
pushf
cmc
addr16
shlb
fiaddl
nop
add
cmpsl
cmpsb
push
lea
mov
mov
add
xchg
gs
stos
jp
sub
data16
lds
int
bound
lret
pop
push
scas
sub
cmp
push
inc
pop
sbbb
rcrb
fwait
xor
jae
jb
push
cmp
inc
or
mov
cmp
jge
enter
push
mov
jle
cmpl
cmp
jge
ja
fsubl
jmp
inc
popf
or
cmp
out
xchg
int3
push
push
xchg
pop
mov
cli
mulb
test
loope
aaa
aad
dec
out
lret
and
or
lret
inc
cmp
mov
push
jb
add
loope
and
adc
lret
scas
pop
mov
inc
test
mov
scas
fcmovu
icebp
in
mov
cmpsb
xor
ret
lcall
and
xor
out
frstor
sub
cmp
insl
insb
movsl
clc
lea
xchg
stos
pop
pop
loop
add
lret
out
mov
mov
and
fs
fwait
xchg
mov
xchg
xor
lock
cmp
xchg
cwtl
hlt
sub
jnp
cmp
jns
add
loop
mov
sbb
cs
pusha
push
les
jecxz
pop
add
xchg
mov
test
sbb
inc
jg
dec
in
pop
cli
add
in
push
jg
jp
pop
dec
xor
mov
pop
cmp
add
clc
movsl
mov
push
fnsave
fimull
fistps
inc
jp
mov
adc
jp
jne
fbld
loop
insb
cs
aam
or
rorl
sub
aaa
pop
sbb
xor
addb
xchg
jno
jbe
pop
mov
mov
cmp
js
push
adc
mov
and
mov
sbb
outsb
adc
xor
mov
fcoml
lea
sub
add
add
pop
jb
ret
mov
or
inc
inc
pop
les
inc
lahf
jecxz
dec
mov
frstpm(287
out
add
inc
xor
pop
push
movsl
loopne
fcmovbe
iret
pop
ret
iret
loopne
mov
orl
inc
push
sub
xchg
xchg
mov
idivb
lret
mov
aaa
lds
testb
xor
movsb
push
pop
scas
mov
push
ljmp
pop
dec
pop
arpl
push
fdivrp
sbb
movsl
cwtl
dec
outsb
pop
pop
pop
inc
jle
or
shll
inc
out
push
xor
in
repz
stc
iret
jno
jne
cmp
cli
stc
jbe
lret
ficomps
mov
xchg
repz
out
mov
sub
rcl
adc
push
mull
mov
call
inc
sub
inc
jp
xchg
je
movsb
jecxz
and
ja
movsl
insb
mov
dec
mov
dec
ret
imul
jmp
inc
mov
dec
loope
pop
push
jmp
outsb
inc
sahf
mov
pop
xchg
adc
ret
in
ds
sub
add
out
ror
pop
pop
cld
std
or
push
int3
les
icebp
negl
cmp
jb
jg
int
jae
lret
inc
ja
test
inc
cltd
mov
xor
je
jb
push
jp
lds
jmp
lea
fisttpl
outsl
push
hlt
sbb
lods
add
stos
and
aam
pusha
sub
loop
jecxz
xor
in
dec
pop
insb
leave
mov
xchg
inc
lock
popf
jbe
and
not
fistpl
outsl
adc
fiaddl
es
jp
inc
cltd
daa
inc
sub
aam
mov
sub
in
mov
mov
pop
int3
pop
sub
xchg
lahf
xchg
mov
hlt
push
dec
sub
pusha
ds
stos
out
fcmovu
mov
test
sahf
loop
les
jge
xor
out
pop
movsl
fs
or
cmp
and
arpl
out
ficomps
pop
repnz
pop
fdivrl
sbb
gs
lds
push
fldenv
mov
aam
mov
mov
pop
lds
out
aam
pusha
push
push
stos
adc
push
adc
je
mov
pop
sbb
push
jmp
mov
xor
mov
jp
shlb
xchg
inc
pop
sbb
subl
push
leave
les
sbb
mov
lds
loopne
xchg
decl
fisubrs
or
in
lods
dec
adc
xchg
sbb
sbb
mov
cmp
and
in
or
pop
and
jo
inc
sub
enter
loope
jl
jbe
mov
popf
ss
push
and
pop
mov
mov
addr16
jnp
mov
inc
scas
testl
jmp
repnz
mov
dec
adc
add
lock
push
clc
push
cmp
and
inc
jecxz
aam
aas
ret
mov
sbb
cmp
cmp
mov
pop
dec
lock
imul
mov
mov
mov
leave
in
mov
xor
cwtl
mov
inc
xor
push
or
fcoms
jae
xchg
rol
ffree
int
sub
add
out
aas
mov
stos
aas
fbstp
xchg
sbb
jg
mov
jg
gs
shll
xchg
mov
pop
cmpsl
out
adc
aam
test
in
and
sub
mov
scas
mov
into
lahf
mov
mov
roll
shrb
shr
add
add
push
pop
xchg
mov
jp
repnz
jecxz
pusha
or
sbb
icebp
mov
xor
outsb
rclb
popa
icebp
sub
andb
xor
pop
mov
xor
cmp
mov
test
andb
in
jb
push
push
cmp
add
xchg
sbb
ja
push
out
leave
rclb
xor
pushf
pop
outsl
and
popf
cmp
out
lret
mov
jmp
push
test
cld
aaa
insl
add
and
ret
mov
arpl
icebp
pop
mov
pop
mov
inc
outsb
rorb
pop
lods
adc
test
jmp
mov
xor
divb
jne
lods
insb
popa
sbb
jne
cmpb
std
repnz
xor
or
cmp
add
jb
arpl
cmp
pop
jmp
xchg
or
inc
subb
mov
xchg
enter
mov
loop
out
or
fistl
mov
mov
add
mov
cmc
dec
xor
enter
inc
psubb
mov
xchg
or
rcl
pop
pop
aas
xor
sub
leave
in
dec
pop
push
fdivp
cmp
cmp
in
dec
sub
in
idivb
lret
adc
xor
ss
and
dec
dec
xchg
xchg
stos
dec
into
ror
cmp
push
mov
gs
shlb
sub
xor
ss
mov
outsb
jge
mov
test
iret
inc
sub
xor
cmpsb
push
ret
inc
ficomps
jbe
popf
cmc
jo
mov
lods
mov
mov
sub
pop
jbe
popa
pop
jle
bound
imul
iret
pop
ds
iret
scas
inc
shll
cmpsb
xchg
pop
out
loop
aam
mov
or
dec
icebp
scas
push
push
pop
je
outsb
jle
scas
jno
xchg
push
shlb
pop
cltd
or
dec
inc
jle
pop
scas
out
ss
imul
fwait
inc
and
push
outsb
aad
xchg
cwtl
dec
inc
andb
ds
sub
sub
gs
shlb
cmp
repz
lcall
fisttps
xor
test
xchg
jg
push
fmull
orl
aam
ja
ret
popf
push
fistpll
sahf
cmp
scas
std
and
std
mov
addr16
clc
mulb
addb
shrb
pop
cmp
rorl
xchg
movsb
and
pop
cld
das
in
fwait
xlat
xor
ror
int
jne
jmp
outsb
orb
pop
scas
mov
push
pop
hlt
add
xchg
or
xor
out
jnp
mov
push
xchg
mov
iret
mov
mov
push
jo
add
pushf
imul
adc
push
or
adc
xchg
scas
sbb
fcompl
fcmovnb
dec
push
or
jl
fimull
in
dec
push
mov
push
clc
cwtl
inc
sub
daa
xor
mov
and
test
jae
shrl
fnsave
cli
add
jl
es
mov
or
mov
push
pop
out
ljmp
xchg
xlat
xchg
jo
sbb
shlb
insb
enter
sbb
inc
pop
inc
imul
icebp
pop
jp
mov
aaa
and
cbtw
or
out
ret
in
lods
stc
int
dec
mov
mov
jl
jnp
iret
imul
inc
cmp
in
test
out
sbb
into
out
sub
adc
pop
cmp
xchg
out
movsl
xor
xor
xor
mov
mov
sbb
cmp
js
xchg
and
insl
cmp
sub
xchg
fdivrs
dec
push
xchg
mov
decl
out
push
pop
in
add
and
xchg
xchg
outsb
jne
hlt
rolb
stos
je
scas
sarl
mov
inc
pop
pop
loopne
and
mov
das
insl
sub
jno
shl
in
or
pop
into
mov
int
repz
pushf
jecxz
vcvtss2si
push
sahf
loopne
push
fdivrs
xchg
scas
xor
data16
movsl
inc
dec
jbe
outsb
mov
aam
cmp
pop
call
lock
xchg
mov
mov
xchg
outsl
inc
cltd
sbb
divl
cmp
and
and
adc
pop
pop
add
and
mov
pcmpgtd
lret
pop
scas
loope
push
push
cmp
popa
in
mov
lret
nop
xor
mov
lret
cwtl
je
dec
je
add
mov
push
push
xchg
mov
mov
mov
repnz
or
into
inc
cmc
xchg
mov
jb
subl
popl
loop
pop
stc
addr16
push
jmp
pop
insb
insb
mov
sub
lret
in
cmpsl
push
mov
dec
outsb
out
repnz
sbb
pop
xacquire
lods
arpl
scas
scas
add
test
push
test
dec
xor
int3
or
pushf
add
ss
fstpl
xchg
lret
fdivrl
imul
dec
sub
inc
ret
cs
cld
jecxz
stc
into
addr16
mov
and
and
dec
adc
test
aaa
cmc
fadds
mov
mov
insl
adc
xor
sub
loopne
fwait
mov
mov
sbb
mov
add
xchg
inc
or
xchg
jge
jae
stos
ja
or
stos
xchg
imul
pop
sub
arpl
push
imul
aam
roll
enter
pusha
lods
or
ret
gs
or
shlb
mov
xchg
iret
mov
sub
mov
inc
xchg
pusha
sarl
and
cmp
mov
aas
dec
roll
shl
ret
lods
add
pop
lock
dec
cmp
xchg
aas
cmpsb
add
lahf
hlt
pop
cld
sahf
out
adcl
sub
or
dec
aas
mov
inc
cwtl
sbb
mov
cld
mov
sub
jns
lret
bnd
mov
lods
cmpb
outsl
sub
fdivs
mov
shlb
es
fstp
xor
adc
add
out
cmc
orb
sub
dec
cli
mov
adc
cmpl
das
push
adc
sarb
pop
dec
cmpsl
fcom
sub
pop
enter
out
add
mov
inc
sti
in
lock
outsl
mov
popf
add
inc
jo
test
cmp
insl
fidivrl
shll
inc
sti
enter
in
rorl
imul
xor
push
sbb
stos
lock
loopne
and
stos
cmp
xchg
sahf
out
loopne
adc
cmp
xor
mov
adcl
add
xchg
xor
pop
clc
jl
sbb
mov
push
scas
mov
pop
fucomip
lock
je
push
cmp
popf
xor
insl
arpl
out
adc
ljmp
push
push
or
outsb
push
jno
push
xlat
data16
sub
jmp
cs
ret
jo
int
xor
shll
pop
push
repnz
add
push
insl
xchg
xor
imul
mov
add
xor
jbe
xchg
pop
adc
xor
push
cmp
mov
cli
fisttpl
int
and
jge
dec
pop
xlat
jo
jne
mov
mov
and
stos
ljmp
sub
add
pusha
int
inc
es
cld
movsl
fildll
cld
dec
add
js
lea
sahf
mov
xchg
pop
call
sahf
pushf
pop
js
cmc
and
and
sbb
mov
scas
mov
insl
orb
pop
cmpsl
loopne
test
in
pop
lahf
mov
in
mov
inc
push
xor
js
or
or
cmp
pushf
xchg
popa
jmp
and
ret
mov
ss
sub
lods
fs
mov
lret
fildl
jne
sbb
pop
jl
clc
pop
push
in
negl
push
sbb
jecxz
lods
pushf
and
out
add
test
push
outsb
pop
dec
or
pop
scas
ficoms
xchg
sub
ficoms
stos
add
std
lcall
sub
sti
test
pushf
rol
mov
adc
push
cmp
xor
adc
xor
and
or
or
ja
out
icebp
xchg
xor
cmc
mov
jp
sbb
in
jbe
sub
sbb
pushf
or
sbb
lock
cmc
aaa
cltd
add
sub
and
out
test
cmp
sarl
xchg
sub
ss
scas
dec
ss
movsl
loopne
pop
int
insl
js
sahf
mov
and
adc
divb
test
cld
fcoml
mov
mov
outsb
jle
xchg
divl
inc
mov
sbb
fimull
ljmp
cmp
fstl
cmp
mov
repnz
dec
adc
shld
pop
inc
loopne
cmp
aaa
sbb
cltd
push
mov
int3
rol
add
lods
push
adc
ret
cld
inc
mov
or
cmp
mov
push
fdivp
in
iret
das
cmc
bound
add
cmp
inc
shlb
ret
mov
or
mov
test
mov
icebp
xor
cmp
sti
into
les
cmp
rcll
cmpsl
mov
xor
popf
push
imul
call
mov
mov
leave
and
daa
inc
mov
scas
addr16
sbb
shlb
pop
sbb
dec
sbb
push
sbb
fldcw
pop
aad
inc
sbb
mov
fldt
fisubrs
js
sbb
cli
mov
sub
pop
pop
dec
test
nop
inc
and
roll
pop
inc
test
adc
or
xchg
pushl
testl
ljmp
inc
xchg
movsl
dec
fmul
test
mov
jecxz
pop
cmpsl
dec
or
subl
int
xchg
dec
lcall
xchg
test
push
enter
xchg
ljmp
jecxz
mov
add
inc
sub
xchg
jno
sub
ret
push
push
sahf
pusha
lds
jmp
ret
fstl
jo
addr16
test
fdivp
insb
jg
lahf
stos
test
sub
movsl
mov
mov
cmc
sbb
lahf
outsl
jns
out
add
aam
jmp
pop
das
test
out
aam
mov
inc
sub
jns
and
push
sbb
inc
fsts
mov
inc
xor
sbb
push
mov
out
mov
cltd
inc
xor
push
adc
les
cld
or
push
adc
cmp
xchg
dec
shlb
sub
pop
xor
push
xchg
mov
pop
and
xchg
rclb
adc
movsb
aad
mov
sub
fsub
add
jo
lods
in
and
pusha
ficompl
fisubrl
out
jl
adcb
sbb
jl
mov
or
cmpsl
inc
insb
out
inc
or
leave
loope
and
sub
dec
mov
arpl
xorl
add
mov
sub
outsl
push
or
push
addr16
or
adc
push
aad
pusha
or
ss
jns
es
out
std
idivb
scas
mulb
mov
jmp
test
mov
push
sub
ljmp
out
pop
loop
xchg
rolb
data16
mov
out
fs
addr16
ss
push
sti
pusha
orl
fwait
mov
mov
shrl
sub
cmp
push
stos
lea
sub
push
push
movsb
mov
mov
lods
imul
mov
daa
adc
rorl
lcall
cmp
jecxz
movsb
sub
pop
gs
mov
out
imul
ret
inc
enter
loope
shlb
in
mov
paddw
out
movsl
pop
int
pop
pop
repnz
mov
popf
mov
push
cmp
xor
sbb
mov
mov
es
test
imul
pop
adc
mov
xor
pop
lahf
mov
in
jg
leave
jns
inc
shl
stc
mov
in
and
and
xchg
jge
subb
dec
push
stc
add
xchg
rcrb
aam
push
mov
mov
or
inc
sbb
nop
mov
lock
dec
int
mov
sbb
sahf
lcall
movsl
pop
xor
ja
aad
dec
mov
and
or
inc
mov
mov
push
ljmp
fimuls
ret
pusha
fnstenv
sbb
arpl
pop
shlb
pop
aas
loopne
inc
or
sbb
mov
xchg
mov
pushf
add
lcall
inc
fists
mov
dec
add
pop
jg
fdivrs
das
stc
add
fs
icebp
jle
shl
pop
cmp
in
ja
cmp
xor
test
out
stc
xor
inc
daa
jne
loop
mov
add
push
loope
inc
ljmp
mov
jne
mov
xorb
shlb
dec
testl
std
nop
shlb
xor
int3
outsb
aad
rclb
dec
pop
xor
dec
inc
xchg
push
jns
inc
movsl
mov
stos
or
test
xor
dec
inc
ss
pop
adc
adc
scas
insb
roll
mov
fstl
or
add
in
comiss
cwtl
xorb
fwait
push
or
or
out
and
ret
dec
sbb
or
fwait
cs
fisttpll
jb
shlb
mov
iret
addr16
pop
negl
xor
or
push
mull
test
fwait
daa
adc
cmp
jg
into
daa
insb
cmp
fildll
jmp
roll
mov
or
aas
jle
mov
pop
push
mov
sbb
test
cmp
or
ror
xor
xor
push
popa
in
xchg
xchg
call
xchg
stos
push
shlb
cmpsb
call
mov
mov
in
or
sub
ljmp
sub
lret
pop
and
adc
mov
push
add
push
aad
mov
lock
inc
into
data16
cs
dec
and
inc
sar
add
dec
pop
das
rcr
sbb
outsb
jno
mov
in
ret
pop
push
jns
dec
in
arpl
jns
jo
pop
aam
cs
lret
dec
mov
ret
stos
aaa
mov
data16
lahf
sarl
mov
dec
out
or
adc
cmp
pop
push
cmp
push
std
jecxz
leave
in
mov
add
pop
mov
js
or
add
xchg
ret
xor
xchg
pop
mov
xor
scas
insl
jbe
cld
sub
test
sub
and
into
and
nop
cmp
sbb
xchg
cmpsl
daa
sub
ret
inc
and
and
fldl
mov
inc
iret
jb
popf
rcrb
add
sahf
imul
stc
push
jmp
enter
push
xchg
adc
inc
jno
aad
push
cwtl
je
adc
push
cli
outsl
idivb
sub
loopne
dec
pop
pop
jns
out
sub
push
sub
sbb
leave
movsl
jmp
sbb
sahf
cmc
nop
rcrb
ror
clc
push
pusha
jge
fadds
mov
shrl
ss
mov
sbb
adc
lea
fwait
je
mov
and
lea
gs
mov
adc
mov
add
pop
xor
shll
dec
iret
out
dec
test
sbb
xor
andb
std
add
nop
xchg
jnp
outsl
imul
xorb
push
imul
push
sbb
mov
xor
adc
fadds
inc
mov
imul
cmpsb
mov
push
add
mov
ret
inc
loopne
enter
sbb
scas
xor
push
xchg
xchg
lret
fs
xor
mov
insb
out
mov
mov
popf
stc
cmovno
mov
seto
inc
hlt
insl
repnz
shlb
jae
and
ds
loope
push
sub
pop
scas
mov
cmc
cli
rclb
aad
outsb
ljmp
popf
and
loope
das
push
bound
sbb
insl
sbb
sbb
inc
inc
scas
lock
inc
mov
repnz
out
lea
dec
and
cmp
icebp
ret
test
repnz
xchg
jbe
mov
mov
jne
or
xlat
fidivl
xor
stc
test
fmull
adc
xchg
insb
sbb
cmpl
lret
in
scas
inc
push
inc
lret
mov
add
adc
shlb
xor
in
sbb
and
outsb
test
mov
out
dec
stos
or
mov
mov
mov
cmpsl
sbb
mov
mov
mov
sub
cld
or
adc
mov
cmpsl
jmp
add
rcrl
mov
sub
arpl
enter
pop
lea
mov
jo
icebp
inc
test
std
popa
jns
shlb
lret
cmp
mov
sbb
divl
xchg
add
ret
mov
push
xor
cmp
cmpb
gs
lea
pop
dec
mov
out
xor
push
sbb
mov
loope
icebp
mov
sub
das
push
in
out
into
lds
sub
js
in
ss
xchg
jl
sbb
outsl
lods
mov
inc
mov
mov
ret
in
ja
jmp
mov
jge
adc
pop
push
push
add
xor
outsl
push
das
out
jmp
pop
in
inc
int
xchg
mov
outsl
out
cmp
aam
xor
scas
shlb
addr16
cmp
out
test
pop
mov
mov
mov
pop
jmp
xchg
xchg
ds
and
sub
js
ljmp
enter
mov
add
adc
dec
mov
cwtl
or
test
aam
subb
mulb
cwtl
push
not
cmpsb
insl
fs
call
aad
aad
pop
pop
test
mov
out
repz
movsb
xorl
and
xor
icebp
pop
mov
xadd
add
dec
shlb
outsl
mov
push
insb
push
dec
cmp
mov
mov
mov
inc
sbb
mov
out
mulb
inc
js
and
mov
jecxz
aaa
sbb
cmpsb
mov
loopne
ret
movsl
cmp
call
push
pop
sbb
cld
jecxz
dec
sub
mov
or
inc
sub
or
mov
add
add
icebp
sbb
pop
data16
push
mov
sub
jmp
and
add
cltd
cmp
sbb
fisubrl
add
out
mov
push
movsb
nop
cwtl
inc
mov
cmc
pop
negl
cwtl
push
mov
scas
jge
inc
scas
out
push
jnp
rorb
ret
inc
push
cli
pop
adc
mov
ljmp
mov
ljmp
xor
cmp
fisubs
jnp
dec
cmp
add
jmp
fs
out
imul
adc
movsl
and
hlt
popa
xchg
pop
movsl
lods
xlat
fyl2x
aam
lds
xor
out
jl
mov
pop
xchg
je
repnz
pop
sbbb
out
or
push
sub
mov
in
loope
fwait
sub
fdivl
adc
mov
adc
jp
ljmp
cmp
shrb
es
cmp
sbb
sub
adc
loopne
jno
shll
loop
xchg
jle
cmp
xchg
int
js
popf
pop
lcall
dec
sti
nop
or
push
fmul
mov
add
inc
inc
inc
cmp
sbb
push
jne
jae
jne
out
outsb
out
in
ret
push
andl
sarl
mov
push
shll
mov
mov
adc
mov
mov
or
orps
mov
and
xchg
or
mov
pushf
insb
sbb
mov
sti
sub
sbb
fs
mov
stc
ret
cmp
stos
int
xchg
and
cmpsl
cli
pusha
mov
in
aam
sbb
into
sub
jns
or
jmp
iret
aaa
mov
or
aas
lock
pop
inc
aad
jo
inc
sbb
scas
lds
in
sbb
cld
out
insl
mov
ss
push
fidivrs
lods
xor
leave
out
jle
aaa
aad
shrl
and
xor
mov
enter
inc
stc
int
jmp
xor
es
push
lahf
add
dec
aad
lahf
pusha
dec
sti
out
inc
imul
mov
xchg
mov
mov
int
insl
test
roll
in
pop
repz
std
out
stos
inc
lcall
shll
xchg
repnz
lock
mov
cmp
jns
mov
mov
arpl
ja
mov
dec
out
aas
inc
fdiv
ret
shll
lahf
repz
pop
mov
sub
rcr
clc
mov
jns
fcmovne
enter
scas
mov
push
cmp
mov
pop
push
add
fimuls
sbb
and
xchg
adc
mov
addr16
mov
lcall
bnd
sub
push
ja
dec
fimuls
mov
insl
xchg
cli
stos
push
cmp
mov
mov
fistps
shll
insb
fsubrl
aad
loop
mov
fdivs
lret
cmp
iret
insl
mov
xchg
stos
pop
insl
repnz
xorl
dec
sub
mov
cltd
icebp
dec
or
cmpsl
mov
sbb
lea
and
pop
xchg
lret
imul
push
xor
pop
xor
movsb
add
vucomiss
xchg
test
mov
xor
gs
mov
and
mov
inc
cmpsl
in
fistps
jns
ljmp
lea
nop
xor
inc
xchg
adc
pop
push
lods
repz
faddl
cmp
mov
addr16
xchg
jle
dec
sbb
mov
adc
pop
push
mov
movsl
lahf
sti
cmp
insb
pop
jmp
hlt
inc
enter
sti
movsb
call
xor
jbe
adc
xchg
sub
roll
dec
fisubrs
or
dec
pop
movsb
mov
ljmp
lods
sub
adc
cs
stos
es
cmpb
dec
jp
arpl
test
sbb
scas
or
cltd
adc
sub
faddp
repz
fwait
xchg
test
fwait
jge
mov
int3
adc
xchg
xor
and
mov
or
cmc
push
sti
push
push
add
iret
imul
jae
or
mov
sbb
pop
sub
jp
stc
and
xchg
lcall
ret
sbb
jle
sbb
mov
push
sbb
push
jl
cli
cli
adc
xlat
mov
scas
test
sahf
add
sub
xchg
inc
dec
fildll
rolb
cmpl
jns
int
jge
fidivs
shll
add
rcl
fwait
sbb
aaa
adc
std
mov
dec
test
xchg
xlat
mov
sbb
xor
int3
xor
push
add
xchg
mov
popf
fucomi
xor
clc
ss
inc
fldt
outsb
cs
shlb
lret
in
in
and
pop
or
xchg
inc
jmp
shlb
jle
pop
mov
orb
mov
out
jge
scas
test
jns
pusha
xchg
test
ss
inc
mov
fsubrs
mov
rol
bound
dec
out
enter
fwait
sbb
dec
inc
cltd
daa
fcomps
popa
mov
addr16
cltd
jp
fiaddl
int
or
lret
pusha
leave
scas
aaa
mov
shll
push
pop
mov
pop
xor
ljmp
sub
sub
fcomps
imul
gs
xor
and
rolb
and
ret
adc
ss
add
adc
cmpsb
push
popa
nop
adc
xchg
cmp
fadd
xor
cs
subl
mov
imul
pop
sbb
xchg
ss
pop
jo
and
lahf
loopne
cmp
and
lock
scas
xchg
sub
pop
mov
orl
sub
xor
xchg
scas
jmp
into
in
bound
push
jle
or
fidivl
mov
imul
or
ss
fstps
fnstenv
out
stc
adc
cmp
lret
fcompl
out
int
lods
cmp
adc
dec
test
cmp
cld
mov
js
lods
icebp
adc
movsb
or
cmp
scas
xor
and
movsb
leave
imul
cmp
inc
push
and
fwait
shll
int3
fdivs
mov
ss
inc
cmp
pop
push
push
push
lods
testb
cmc
icebp
ficompl
jne
push
adc
mov
pop
sbb
pop
push
jnp
in
cmpsb
sub
scas
les
movsb
aam
or
xlat
inc
nop
inc
pop
sbb
fcomps
subb
pmuludq
mov
cmp
and
popf
inc
nop
mov
or
call
aas
push
xchg
xor
inc
dec
out
insb
lods
icebp
jmp
inc
xlat
sbb
sti
dec
addr16
hlt
mov
ret
sub
pop
sub
out
test
xchg
ljmp
mov
pop
add
lahf
cmp
imul
push
jo
mov
dec
xchg
int3
sbb
mov
pushf
xchg
loopne
or
add
adc
lcall
repz
ljmp
mov
jb
xchg
fnstsw
mov
inc
mov
adc
dec
adc
out
xchg
not
xchg
lret
movsb
xorb
in
add
pop
mov
add
popf
xchg
test
add
pusha
xor
cmp
cld
push
push
call
pop
jmp
jecxz
call
shr
or
add
jmp
xor
mov
pusha
call
sub
jmp
or
jmp
xor
jmp
or
call
jmp
aad
or
jmp
or
negl
add
pusha
call
shr
or
add
jmp
xor
mov
jmp
sbbl
popf
jmp
mov
add
jmp
pop
pusha
call
sub
jmp
or
jmp
xor
jmp
or
test
sbbl
popf
jmp
mov
add
jmp
mov
jmp
jecxz
call
shr
or
add
jmp
xor
mov
pusha
call
sub
jmp
or
jmp
xor
jmp
or
xchg
test
inc
add
add
pusha
call
shr
or
add
jmp
xor
mov
jmp
sbbl
popf
jmp
mov
add
jmp
mov
pusha
call
sub
jmp
or
jmp
xor
jmp
or
movsl
mov
add
pusha
call
shr
or
add
jmp
xor
sub
pusha
call
sub
jmp
or
jmp
xor
jmp
or
add
add
pop
jmp
jecxz
call
shr
or
add
jmp
xor
sub
jmp
sbbl
popf
jmp
mov
add
jmp
sub
pusha
call
sub
jmp
or
jmp
xor
jmp
or
test
inc
add
add
add
add
sub
jmp
or
jmp
xor
jmp
or
shr
sbbl
popf
jmp
mov
add
jmp
jne
jmp
jecxz
call
shr
or
add
jmp
xor
inc
pusha
call
sub
jmp
or
jmp
xor
jmp
or
test
dec
inc
add
add
pusha
call
shr
or
add
jmp
xor
addr16
pusha
call
sub
jmp
or
jmp
xor
jmp
or
test
add
add
add
mov
jmp
or
pusha
jmp
jecxz
call
shr
or
add
jmp
xor
mov
pusha
call
sub
jmp
or
jmp
xor
jmp
or
mov
jmp
aad
or
jmp
or
testl
pusha
call
shr
or
add
jmp
xor
pop
pusha
call
sub
jmp
or
jmp
xor
jmp
or
sub
mov
add
jmp
xor
jmp
or
notl
add
pusha
call
shr
or
add
jmp
xor
mov
pusha
call
sub
jmp
or
jmp
xor
jmp
or
jmp
sbbl
popf
jmp
mov
add
jmp
mov
jmp
jecxz
call
shr
or
add
jmp
xor
mov
cld
jmp
or
sub
rcrl
add
lods
add
mov
jmp
addl
jmp
add
add
add
add
jmp
add
jmp
xorl
jmp
add
xor
add
pusha
call
shr
or
add
jmp
xor
popl
pusha
call
sub
jmp
or
jmp
xor
jmp
or
les
add
jmp
xor
jmp
or
mull
add
pusha
call
shr
or
add
jmp
xor
std
jmp
xor
jmp
sar
fdivrl
frstor
fcomps
mov
gs
inc
inc
pop
jl
in
mov
pop
push
mov
jae
imul
cmp
rclb
jle
mov
in
inc
mov
arpl
mov
movsb
imul
mov
xchg
xor
into
mov
sub
sbb
subl
mov
jne
lret
movsb
xchg
cmp
int3
inc
jl
icebp
lret
or
cmp
mov
mov
mov
jle
sti
fs
test
xchg
insl
ret
out
pop
mov
jl
cwtl
je
out
dec
daa
pop
add
push
es
fnsave
fucomip
mov
mov
icebp
in
mov
push
imul
pushf
mov
fwait
testb
jbe
jo
aaa
cmpsb
sub
mov
movsl
pop
aad
mov
out
scas
pop
add
mov
dec
pop
fs
adc
sbb
jle
outsl
out
ja
repz
pop
pop
pop
outsl
pusha
cmc
ss
test
mov
pop
lds
jo
adc
jmp
outsb
pop
or
xchg
clc
or
jns
add
sbb
push
out
loope
xchg
fsubl
or
enter
mov
mov
xchg
js
push
fnstcw
and
pop
das
sbb
xchg
lcall
lods
mov
mov
xchg
and
xor
cli
fidivs
idivb
or
repz
popf
ds
jge
push
stos
mov
out
dec
add
inc
das
lahf
insl
mov
xor
cmpsb
incb
dec
in
fidivl
pop
xchg
inc
xchg
imul
xchg
out
dec
cld
shr
hlt
cmp
xchg
cmc
push
xchg
mov
loope
fwait
pop
dec
dec
fs
in
push
push
adc
hlt
cmp
inc
mov
scas
aas
sahf
out
mov
lret
mov
into
sub
jle
mov
add
outsl
adc
pop
lahf
xchg
lds
shll
jmp
in
xchg
xor
mov
xor
fiaddl
xchg
fists
inc
outsb
push
xlat
push
imul
xchg
gs
jp
pusha
std
int
jg
mov
jns
add
out
movsl
push
add
enter
and
into
scas
je
push
sub
add
pop
pop
mov
clc
pop
loop
mov
sbb
dec
rcrb
and
dec
xor
xchg
iret
call
xor
push
outsl
dec
notb
xchg
or
mov
adc
div
mov
rolb
xchg
sarb
push
cmp
cmp
sub
or
add
inc
inc
push
push
xchg
pop
les
jbe
push
pop
dec
push
adc
loope
mov
addr16
xchg
sub
inc
pop
mov
dec
pop
mov
mov
adc
xor
lods
popl
or
pusha
xchg
leave
pop
sub
inc
or
lods
mov
aad
add
adc
push
imul
fsubs
fisubl
shl
out
shl
xor
sbb
lea
scas
xor
insl
daa
repnz
xchg
leave
pop
shl
inc
pop
inc
xchg
sbb
cmp
pop
pop
dec
cmp
out
pop
movsl
add
adc
jb
ljmp
sbb
and
mov
into
sbb
inc
daa
push
dec
incb
lock
mov
mov
outsl
mov
gs
pop
mull
outsl
in
pop
ds
xchg
mov
adc
out
ret
fldenv
cmp
stos
mov
fisttps
xor
cwtl
int3
ret
addb
or
push
sbb
out
rorl
mov
dec
and
push
loope
sub
iret
rcll
inc
mov
add
or
addr16
lahf
jp
jae
push
test
fs
xchg
add
xchg
out
mov
pop
cmpsb
xchg
ficoml
dec
cld
movsb
mov
jp
imul
das
push
mov
fwait
rcrl
mov
mov
adc
outsb
dec
fmuls
mov
fsubrl
jbe
fists
jle
mov
scas
lret
sub
lds
adc
inc
in
push
sbbb
lcall
mov
jmp
sub
and
mov
fsts
pop
xlat
lret
lahf
int3
xor
mov
dec
ret
dec
data16
mov
sbb
jge
bswap
cli
dec
int3
loope
negb
pop
jge
jo
adc
cmpsb
sbb
fs
sbb
insb
das
pushf
jnp
jecxz
dec
bnd
mov
sbb
cmp
inc
xlat
or
cmp
push
dec
stos
mov
mov
outsb
add
lds
pop
out
test
decb
test
jecxz
xor
in
jo
inc
lahf
mov
mov
subl
adc
lcall
aam
ss
imul
aad
mov
inc
sbb
dec
in
xchg
xchg
xor
sahf
mull
push
dec
mov
cmp
ljmp
bound
sub
call
adc
inc
cmpsb
pop
pslld
aad
mov
inc
call
fcmovb
push
and
push
aaa
or
push
pop
popa
fsubrl
orl
pop
adc
leave
add
mov
or
mov
and
js
add
add
lcall
sbb
pop
jbe
xchg
shr
lods
xorb
add
mov
aas
stos
xchg
cmpsl
repnz
mov
shl
push
and
sub
imul
arpl
jne
add
popl
lods
shlb
inc
in
or
mov
repz
jnp
add
and
ja
cmp
pop
ljmp
test
mov
fisubrl
sbb
inc
int3
push
mov
and
and
jbe
mov
xchg
mov
push
dec
fnstcw
test
and
and
int3
aas
or
mov
adc
mov
cmp
enter
xchg
bound
xchg
mov
pop
out
push
gs
gs
out
insl
mov
xchg
xor
fwait
add
notl
cmp
int
inc
data16
push
push
pusha
dec
leave
mov
sub
ret
mov
xor
ds
jecxz
hlt
add
lds
arpl
inc
testl
mov
mov
dec
dec
dec
test
or
push
jle
mov
mov
loopne
mov
stos
sub
mov
sbb
jb
and
add
popa
sbb
xchg
clc
test
mov
outsb
mov
shll
adc
cmpsl
jle
mov
lret
mov
lods
pop
scas
pusha
sbb
pop
cwtl
jno
cmp
sbb
sqrtps
sbb
rolb
sub
test
leave
loopne
imul
mov
sub
fwait
je
mov
insb
pop
in
subl
icebp
sbbb
cli
jbe
fdivs
and
xor
inc
jb
mov
add
add
test
mov
push
cmc
push
lock
mov
leave
mov
add
lods
xor
fdivl
push
jp
out
mov
outsl
out
sub
xchg
sub
psraw
xchg
aad
pop
daa
ds
stc
es
xchg
mov
mov
xor
mov
rcll
and
andl
sbb
add
and
popf
jl
jbe
aad
cmp
repz
cmp
push
or
push
pop
or
sahf
testb
sub
mov
cltd
adc
les
insb
adc
mov
mov
frstor
in
xchg
test
or
mov
mov
bound
cli
push
outsb
stc
cld
notb
push
inc
and
rorl
xorb
push
mov
pusha
mov
bound
inc
jae
dec
cmc
xlat
sub
jg
adc
jae
pushw
outsb
in
movb
push
add
test
lcall
mov
push
xchg
or
ret
shll
adc
popa
pop
and
call
movsl
pop
adc
cltd
sub
pop
sbb
jae
xchg
fs
jg
ret
jae
aam
mov
sbb
fcom
aam
xchg
jno
adc
xchg
dec
xchg
jae
fidivrl
mov
inc
out
stos
movsl
adc
mov
pop
lahf
out
jb
mov
mov
pop
nop
and
dec
dec
scas
rcrl
xchg
lcall
dec
xchg
shrb
sbb
clc
test
je
mov
xor
xor
mov
outsb
pushf
jle
mov
sub
xor
add
cli
and
fistps
leave
xor
mov
add
xchg
jns
sbb
and
shrl
lock
inc
ja
xchg
bound
jne
lret
dec
stc
ret
fincstp
cmp
xchg
popf
insb
int
test
stos
mov
or
loopne
mov
adc
fwait
sbb
dec
pusha
repnz
dec
inc
pop
xchg
mov
xor
xchg
jecxz
push
xchg
xor
mov
dec
gs
hlt
or
sti
mov
mov
hlt
lods
jl
sub
mov
sbb
test
push
in
imulb
sub
cmp
ficoml
mov
mov
aam
aas
dec
push
popf
fs
ss
xorb
pop
movsb
repz
push
push
ret
lret
stc
sbb
cwtl
mov
sbbl
addr16
mov
sub
inc
jg
jns
dec
mov
sub
dec
fstl
or
cmp
xlat
icebp
insb
insl
sbb
inc
sbb
aas
mov
inc
in
daa
add
insw
fwait
jg
imul
clc
mov
cmp
pop
insl
push
mov
lea
fwait
imul
sub
push
insl
lret
mov
inc
scas
push
sbb
shr
jl
pop
sub
mov
mov
out
inc
shrl
inc
std
sub
ret
jo
add
in
cmpsl
cmp
dec
outsb
cmc
jl
jnp
jp
mov
inc
pop
xor
sti
in
out
movsl
lods
mov
int3
ds
cmp
jmp
sbb
mov
call
fldl
stos
or
fstp
xchg
push
xchg
add
addr16
inc
sar
notb
jmp
mov
mov
jae
es
ja
ss
sti
xor
inc
adc
gs
lock
test
dec
bound
repz
arpl
das
scas
cmp
fdivs
inc
shrl
inc
and
insb
iret
add
jo
mov
push
pop
push
sbb
push
sub
add
rorl
movsb
sbb
mov
out
sbb
mov
inc
scas
adc
rorb
lret
fwait
push
sub
cs
push
outsl
mov
mov
mov
or
std
inc
and
repz
clc
outsb
shll
ljmp
push
sbb
ret
mov
jns
test
in
push
push
lret
dec
rolb
xchg
pop
adc
xor
in
stc
lret
mov
pushf
in
add
adc
cmp
loope
mov
xchg
lret
mov
push
js
ds
jb
mov
xor
sbb
dec
mov
inc
mov
cld
sub
pop
lods
fstps
rol
cli
jmp
jb
cs
cmp
out
out
and
sar
sarb
stos
mov
or
cmpsb
adc
movsb
lret
push
add
inc
or
pop
xor
and
hlt
inc
orb
addr16
cld
repnz
or
lods
notb
jecxz
call
cmpsl
fwait
dec
arpl
sbb
xor
jecxz
aam
jecxz
or
push
std
jl
mov
sbb
inc
ret
lea
pop
fs
mov
test
mov
inc
and
hlt
imul
or
adc
fistl
cmp
fbld
inc
aaa
ja
std
in
dec
and
xor
les
in
fstpt
pop
xor
sub
xor
jo
int
xor
repnz
xchg
xor
ss
cltd
mov
mov
adc
popa
add
imul
das
jno
movsb
sbb
out
inc
push
inc
adc
inc
stos
in
inc
mov
lret
or
xor
fucomi
mov
aaa
out
shlb
xor
inc
fidivrs
dec
cs
xchg
xchg
push
push
cmp
lret
xchg
push
pop
sub
lahf
mov
insl
insl
enter
push
lock
cmpsb
mov
insb
or
out
in
sub
fcoms
lds
jp
jne
jb
mov
leave
data16
inc
xchg
scas
add
push
inc
int
fsubrl
sub
dec
mov
mov
aam
cmpsb
sbb
mov
xchg
cmp
pop
sub
das
fldt
jmp
stc
scas
inc
cmp
mov
mov
adc
lock
sub
jp
test
mov
dec
test
out
pinsrw
movsb
fs
mov
sub
xchg
iret
sbb
mov
sbb
mov
dec
pop
pop
cmp
xchg
pushf
mov
mov
fcmovnbe
mov
push
mov
xchg
jmp
jl
pushf
aaa
and
loop
inc
idivb
and
fstpt
idivl
xor
mov
push
js
imul
push
lahf
dec
push
or
add
xchg
add
btr
cld
fiadds
pop
sahf
test
cmpl
fcom
call
pop
sub
aaa
lcall
ret
data16
dec
cltd
insl
jo
insb
les
imul
out
dec
test
cmp
sbb
out
xchg
mov
js
lods
or
int
push
sub
push
jg
rorb
inc
cld
adc
jmp
dec
pusha
cli
or
fmuls
fsub
xchg
or
xchg
ja
in
mov
mov
adc
lods
out
mov
bound
movsb
cmp
scas
jae
or
pop
scas
cmp
mul
push
jg
ret
jge
pushf
or
or
fstl
mov
call
jns
dec
dec
lods
jo
adc
push
int
insb
aam
adc
mov
out
mov
shr
mov
inc
daa
dec
jmp
mov
fadds
mov
rcrb
cmp
lea
cmp
repnz
pop
insl
jmp
mov
mov
pop
movsb
push
movsb
out
sarl
sti
pop
push
outsb
mov
ret
lds
jl
pop
jbe
addb
stos
int3
pop
ret
jle
xchg
inc
inc
ficomps
lahf
cwtl
popl
mov
dec
sarb
lods
mov
out
out
and
mov
xchg
jae
and
sahf
inc
fnsave
mov
fs
push
dec
sarl
test
fimuls
mov
movsb
pusha
clc
int
data16
adc
subl
push
jle
pop
stos
xchg
adc
mov
idiv
dec
push
fidivl
pop
icebp
xor
lcall
dec
aas
mov
push
pop
sbb
pop
stos
stos
and
mov
cwtl
inc
icebp
push
dec
or
jno
imul
aam
dec
mov
ljmp
subl
lcall
loop
fcmovnbe
push
test
and
pop
std
inc
xor
or
mov
jge
icebp
sbb
jae
pop
add
in
dec
xchg
mov
loop
sbb
sub
ret
pop
int3
ds
push
inc
mov
stos
mov
inc
xchg
imul
cltd
aas
test
shll
movsl
lret
xor
inc
dec
lcall
push
out
frndint
mov
les
sub
or
mov
stos
adc
mov
inc
add
push
jecxz
mov
and
push
aaa
pop
inc
jb
inc
cmp
sub
jge
push
push
cld
icebp
popa
repnz
mov
add
pop
pop
mov
fcompl
movsl
mov
or
pop
lods
jge
out
scas
gs
mov
sub
xchg
push
jl
xchg
dec
pop
adc
fdivrl
hlt
push
test
cmpsl
add
xchg
push
lahf
test
sbb
ret
dec
fiaddl
das
sub
ds
fisubrs
xor
cmp
add
leave
out
insb
sub
sub
pop
nop
push
into
sub
jmp
xor
add
sbb
mov
idivl
mov
in
xchg
mov
repnz
ja
xor
sub
lock
outsl
cmp
mov
xchg
outsb
push
pop
jnp
and
adc
mov
jecxz
in
cltd
inc
pop
loope
add
stos
pop
ja
adc
inc
fistpl
or
pop
mov
icebp
movsl
or
mov
or
lock
hlt
pop
sub
xchg
xchg
mov
popa
inc
stc
mov
int
and
inc
pusha
insb
jmp
add
lea
cwtl
cmpl
bound
adcl
jmp
lea
lods
mov
les
fwait
mov
adc
cmp
adc
lahf
mov
xlat
test
mov
add
dec
stc
loopne
test
in
adc
jge
fwait
jbe
cmp
sbb
cmp
push
inc
fld
mov
or
out
and
fldl
test
outsl
inc
nop
lret
ss
ffree
adc
in
pop
mov
sar
sbb
shl
mov
sub
sahf
add
lods
es
mov
push
xchg
sti
fistpl
sbb
pop
rcrl
fistl
cmpsb
test
xchg
in
arpl
mov
jns
xchg
sub
lcall
lock
movb
or
mov
out
mov
test
movsb
cmp
pop
mov
test
ss
inc
xor
pop
lods
or
fsub
lds
dec
push
sub
mov
lods
mov
sub
and
lea
fsubrs
mov
mov
mulb
mov
frstor
add
in
inc
je
mov
jne
iret
jnp
or
adc
repz
leave
xchg
jecxz
cmpsl
shrb
push
jp
mov
and
sub
mov
mov
or
lds
cwtl
mov
repnz
push
cmpsl
xor
into
sub
ret
push
lods
fnstsw
roll
push
insl
jecxz
data16
fstp
sub
jmp
xor
mov
jecxz
sub
xor
push
mov
mov
mov
inc
jno
and
ja
xor
pushf
sub
inc
es
jmp
mov
dec
outsb
fistps
push
loope
adc
rorl
jl
js
add
mov
xchg
inc
pop
jmp
pop
out
jl
or
jns
les
adcb
cmp
rolb
jae
cmpsl
push
push
mov
inc
std
mov
cmp
popl
mov
xchg
or
mov
pop
enter
add
filds
mov
inc
jg
jnp
rorb
or
dec
sbb
scas
in
mov
xor
xor
and
xchg
repz
add
push
xchg
pop
lret
inc
xchg
rcr
mov
addr16
clc
in
push
mov
lods
fiaddl
mov
xor
mov
lret
nop
add
pusha
sbb
xchg
sub
dec
push
pop
je
out
pushf
test
scas
arpl
cmc
push
rcrb
sub
mov
xor
inc
adc
push
push
adc
xor
ret
sahf
out
sbb
cmp
test
shrl
mov
gs
push
jp
movb
mov
push
cli
out
out
add
and
insb
insb
push
testl
shlb
mov
mov
mov
inc
mov
cwtl
cmpsb
daa
in
push
mov
mov
cmp
and
xor
push
jmp
jl
lods
scas
and
sbb
push
xor
xchg
mov
mov
mov
popa
lock
and
lods
ljmp
cs
outsb
inc
adc
sub
in
mov
bound
inc
jle
xor
adc
arpl
fwait
sub
add
jae
lahf
aaa
xor
ljmp
aad
and
lods
imulb
hlt
sub
stos
sub
dec
lret
fistpl
mov
cmc
xorl
imull
xor
jns
cmp
sbb
mov
frstor
mov
cmp
xchg
out
popf
notb
inc
cmpsb
ffree
leave
jne
xchg
sub
jne
in
lods
pusha
sub
mov
clc
xor
dec
jp
arpl
adcl
mov
fldenv
mov
lahf
and
adc
rcrl
out
add
xchg
pop
sub
mov
movsl
sub
dec
mov
filds
cwtl
xor
je
cmp
cmp
in
mov
xor
mov
cltd
pop
adc
fs
daa
out
sub
int3
outsl
cmpsb
cmp
xor
pop
cmp
cmc
and
sbb
inc
mov
stos
stos
loope
push
pop
add
mov
mov
jnp
jne
xchg
les
add
sbb
jns
loope
mov
fwait
pop
rorl
bound
pop
add
or
sbb
push
push
incb
mov
push
mov
in
adc
add
iret
inc
jecxz
aaa
clc
sbb
outsl
dec
cmp
mov
pop
mov
stos
jmp
sub
fxch
pop
lock
jge
pop
lods
vcvtsi2ssl
push
pop
out
xorb
sbb
mov
inc
dec
sbb
add
xor
aas
cmp
pop
mov
mov
fadd
cmpsb
fnstsw
dec
aad
xor
xchg
dec
cs
inc
fdivrl
mov
cld
mov
vmovd
syscall
cmp
pop
sbb
inc
dec
add
sti
sbb
gs
pop
mov
testb
lock
xor
shl
aad
push
jmp
shl
sar
adc
aad
xor
and
fwait
or
call
test
mov
idivb
movl
out
mov
jo
pop
lea
or
ret
pop
xchg
mov
inc
inc
cltd
test
mov
iret
lret
jne
xor
out
dec
movsb
cmc
lahf
mov
cld
sbb
mov
lahf
out
jb
leave
add
pop
pushf
cmpsl
test
hlt
sbb
push
dec
sub
mov
rorb
xchg
xchg
cmpsl
pop
inc
mov
icebp
add
subb
sbb
icebp
in
faddl
sbb
fimull
nop
je
mov
and
mov
xlat
fs
lea
dec
mov
ds
repz
mov
xchg
es
pop
pushf
mov
jo
out
in
mov
cmpsb
je
rol
mov
jb
xlat
das
fildll
hlt
cmpsb
lcall
mov
sbb
movsb
stos
andb
xor
adc
dec
adcl
xor
cmp
and
pop
shlb
or
into
and
movsb
ss
shlb
push
test
lahf
mov
cmp
lock
inc
enter
mov
insl
jns
ja
roll
fsubr
mov
push
mov
mov
mov
mov
cltd
test
loopne
add
cmp
imul
outsl
push
push
hlt
icebp
jp
mov
mov
jg
mov
lds
std
out
mov
or
sbbl
cmp
push
cmc
jl
mov
jmpw
and
in
ss
stos
int
in
movq
test
dec
data16
insb
lahf
pop
mov
cmp
adc
adc
icebp
cmp
insw
test
in
gs
adc
xchg
sti
repz
mov
loopne
xor
loopne
jg
mov
int3
test
popf
mull
inc
insl
sbb
xchg
outsb
adcb
sahf
lret
jno
lret
mov
les
popa
xor
gs
mov
mov
push
or
ljmp
cmp
xor
dec
fwait
roll
orl
ja
fidivl
add
xor
cld
and
or
fildll
xlat
jae
cmp
lcall
fnstsw
test
dec
dec
push
cmp
inc
mov
repz
push
clc
push
or
cwtl
inc
test
sub
jecxz
push
lahf
sbb
xchg
mov
dec
add
push
cmpsl
call
cmp
outsl
pusha
sub
push
test
sub
flds
scas
and
ljmp
mov
and
jge
lods
cmp
in
adc
sbb
xchg
shl
add
in
or
dec
sbb
push
rclb
aam
mov
push
mov
lahf
in
in
dec
lea
push
add
push
cs
dec
xorl
pop
xchg
mov
push
pop
test
arpl
test
xor
lods
push
or
jnp
cli
popf
mov
mov
loopne
push
popf
cmp
cmpsb
and
cmpl
sbb
fcomp
lods
xor
faddl
notb
jbe
lret
inc
daa
mov
mov
xchg
aam
sub
imul
or
mov
mov
int3
pop
mov
and
sub
out
xor
sar
mov
dec
jno
mov
fwait
enter
subb
mov
ret
mov
shrl
push
adc
stos
stc
mov
stc
xor
inc
sub
movl
in
dec
shlb
jmp
cmc
cli
cmc
insb
xchg
inc
xor
inc
pop
push
popa
or
xor
mov
adc
out
dec
jb
call
cmpsl
mov
ret
popa
daa
xchg
xchg
mov
dec
dec
or
jle
in
or
mov
insl
xor
mov
fildl
xor
push
data16
pop
lcall
mov
les
scas
cmc
pusha
mov
jmp
fwait
out
sbb
mov
insb
pop
inc
fdivl
push
icebp
ljmp
pop
ret
mov
or
rorb
mov
sbb
out
jne
jmp
int
in
testl
shrl
and
cmpsl
aas
mov
inc
push
out
and
clc
xchg
das
jle
sbb
add
ss
leave
pusha
dec
dec
cmp
lods
push
mov
or
test
repz
push
add
lcall
out
adc
pop
jp
or
in
adc
fdivl
or
push
pop
pop
popl
dec
test
lods
inc
cmp
rcrb
push
inc
sub
cmpsb
aad
lods
add
jo
je
xor
or
out
pop
push
jo
cld
bnd
or
fcoms
imul
mov
int
popa
inc
jmp
cmp
inc
or
sub
adc
popf
loopne
movsl
rcrb
loope
add
push
sub
ja
pop
cmc
pushf
jmp
cmp
cs
lds
imul
jg
or
jmp
outsb
cmp
pop
lods
fbstp
aam
ljmp
and
sahf
movsb
and
jne
dec
movsb
inc
and
loop
adc
rcr
adc
adc
sub
mov
lcall
cwtl
dec
xor
sahf
ljmp
add
hlt
sahf
mov
dec
pop
stc
fs
jle
mov
out
mov
das
pop
iret
add
repz
push
and
or
stc
movsl
in
add
mov
outsl
in
and
jle
adc
push
dec
adc
fiaddl
adc
mov
shll
fildll
lret
bnd
dec
and
out
mov
add
and
movsb
sahf
into
cmpsl
stos
ljmp
jle
xchg
sbb
mov
lcall
lods
mov
or
jo
lcall
push
shll
dec
inc
fadd
mov
sbb
sub
mov
push
cmp
jle
clc
lods
push
push
insb
adc
or
add
push
xor
shr
test
icebp
pushf
ss
sub
pop
imul
jo
lret
pop
fnstsw
pop
insl
int3
vcvtdq2pd
cmp
lods
sbb
and
pop
fwait
lret
inc
or
mov
jmp
orb
push
sub
add
outsb
or
ja
sbb
roll
jecxz
mov
push
pop
cmp
mov
jno
adc
inc
int
xchg
mov
xchg
pop
cmp
cli
pop
mov
and
ljmp
push
movsb
pop
mov
icebp
jp
sbb
in
ds
cmpb
adc
push
pop
popa
test
fisubrl
or
sub
mov
fbstp
mov
add
add
stc
add
xchg
jmp
push
movsb
inc
push
movsl
xor
std
push
es
mov
out
mov
dec
or
xchg
dec
into
and
sub
mov
loope
pushf
cltd
mov
mov
dec
dec
or
fucom
mov
out
es
test
lcall
movsl
inc
insl
xlat
pop
mov
addr16
dec
jbe
jb
or
lods
xchg
jns
out
adc
shrb
and
or
adc
aas
pushf
mov
aad
adc
ljmp
int
pop
mov
mov
aam
aad
pusha
js
jnp
mov
sbb
push
mov
sbb
ja
in
jmp
pop
xchg
xchg
pop
inc
repnz
hlt
sbb
mov
pop
out
mov
add
cltd
and
add
daa
shlb
adc
push
mov
jle
cli
inc
sub
xchg
out
push
fistl
add
xchg
hlt
sub
sub
push
pop
in
lcall
les
mov
out
jl
cltd
push
sub
int
insb
adc
jo
inc
xchg
jl
bound
push
out
stos
in
shll
jmp
flds
testl
roll
neg
mov
mov
or
sahf
push
mov
imul
mov
push
and
jnp
push
fimuls
cmp
push
jge
in
mov
js
ss
fnstcw
fsubrp
add
mov
sbb
mov
or
ss
stos
mov
mov
aaa
sbb
or
jb
ret
out
jg
loop
xchg
sbb
aas
testb
or
and
rorb
fdivrl
test
shl
inc
jp
cmp
dec
mov
mov
in
dec
xchg
in
scas
rorb
sarb
xor
pop
out
push
insb
mov
dec
cmpsb
add
test
dec
in
cmpsl
cltd
xor
jle
addr16
shl
fisttps
xor
add
ret
inc
dec
test
fmuls
push
jle
pop
add
pop
ficoms
scas
push
adc
jmp
pop
mov
rcrl
out
sbb
out
popf
xchg
fadd
pop
sub
inc
scas
nop
adc
prefetchnta
lahf
inc
stos
mov
dec
stc
mov
and
andl
pop
aam
mov
xor
pop
jmp
sahf
rcll
jmp
sub
sbb
mov
daa
and
dec
cltd
cltd
cmpl
icebp
aaa
data16
adc
add
xor
adc
es
fstps
push
dec
adc
xor
je
cltd
sbb
lahf
mov
lcall
or
arpl
mov
mov
outsb
lods
lds
nop
inc
jbe
ret
iret
sub
sahf
sbbl
mov
in
ds
sbb
arpl
roll
lea
stc
inc
mull
addl
mov
xchg
mov
cmp
inc
and
xor
cwtl
scas
push
sub
insb
fcmovnu
pop
dec
jnp
in
mov
xor
dec
jle
orb
andl
xor
jmp
sub
aad
call
mov
inc
out
xor
fs
and
xchg
fnstsw
adc
int3
mov
das
fldenv
movsb
and
jb
adc
or
push
inc
rcrb
push
and
jns
stc
ret
js
xchg
or
cmp
and
pop
adc
push
ret
loope
dec
out
and
push
out
ss
jg
lods
cmp
push
xchg
mov
in
adc
pop
sbb
pop
insb
jo
push
inc
pop
in
sbb
rcll
push
mov
xor
lock
rolb
iret
and
or
mov
lock
popf
jmp
pop
jp
inc
adc
xorl
adc
pop
sub
lret
movb
les
imul
cltd
inc
ljmp
mov
es
push
inc
sub
mov
xchg
ljmp
xchg
inc
les
mov
cmp
aas
aas
xchg
push
pop
cmp
inc
dec
daa
std
dec
popa
ljmp
out
adc
sbb
jb
stos
cmp
stc
jp
int
jmp
inc
cmp
mov
push
xchg
push
jae
adc
mov
dec
sub
lods
push
pop
sub
outsb
or
js
outsl
in
cs
jo
xor
insb
shlb
test
mul
js
sbb
xor
ffree
mov
mov
xor
inc
imul
jo
dec
scas
test
push
push
movl
negb
mov
xor
push
cwtd
lds
xor
mov
pop
daa
popl
xchg
lods
nop
aad
mov
sti
je
fincstp
aad
ljmp
sub
sbb
orl
outsl
xor
dec
lds
cmpsl
mov
outsl
out
inc
or
jmp
cmp
dec
fstps
sub
loope
flds
push
mov
lret
in
or
daa
cmp
push
cmp
mov
lds
arpl
addl
lret
fidivs
mov
test
xor
jge
lret
and
test
mov
adc
jbe
iret
nop
cmp
mov
imul
push
test
jecxz
aaa
jae
sub
stos
inc
jl
sub
mov
pop
push
mov
dec
ds
mov
inc
into
rcrl
sub
pop
sbbl
mov
mov
mov
sbb
mov
movsb
mov
push
and
or
xor
in
dec
mov
jne
les
adc
ja
cmp
xor
pop
or
jae
test
scas
addr16
mov
fwait
cltd
int3
mov
mov
sbb
mov
pop
shll
int
hlt
scas
adc
xchg
inc
adc
arpl
xchg
sub
dec
cs
lea
ret
rorl
je
add
adc
sub
call
icebp
mov
test
repnz
ja
mov
dec
sub
dec
leave
and
and
cmpsb
dec
imul
jns
dec
xlat
sbb
sub
cmpl
cmpb
xchg
cmp
popa
mov
adc
scas
pop
clc
dec
mov
and
fadds
pop
lea
roll
or
mov
mov
or
stc
pop
lock
ljmp
sub
inc
mov
sbb
push
shlb
adc
mov
jb
out
sbb
inc
xor
inc
lret
incl
dec
inc
mov
pop
inc
cmp
dec
cs
inc
fdivrl
mov
cld
mov
adc
jae
mov
xchg
lds
and
push
jp
pop
inc
lods
ret
nop
xchg
jne
fld
mov
pushf
stc
dec
jae
enter
out
test
mov
mov
add
stos
xor
outsl
les
mov
mov
mov
xacquire
repz
mov
fistps
mov
loopne
pop
jmp
mov
push
mov
adc
mov
orl
aam
adc
in
xchg
sbb
jnp
pop
jb
and
ljmp
jb
push
inc
movsl
into
cmp
scas
mov
adc
jge
movsl
push
leave
xchg
outsl
das
shr
add
sbb
pop
xchg
subb
nop
movsl
xchg
ficompl
pushf
add
jp
jno
xchg
or
adc
mov
ds
mov
mov
shlb
jno
fnsave
imull
add
fisubrl
ss
push
adc
pop
or
mov
lret
sub
push
or
stos
and
sbb
out
cs
jecxz
add
dec
xchg
jge
cmp
adc
clc
test
cmp
jno
sub
cmp
inc
iret
push
mov
cmp
pop
adc
jne
sub
in
inc
ficoml
rolb
pop
js
call
jb
mov
mov
out
cltd
push
test
mov
xor
and
sbb
push
xor
xchg
cli
add
popf
cmp
and
outsl
std
addl
std
sbb
mov
xor
sarb
inc
rorl
arpl
or
test
fisubrs
enter
xchg
mov
and
mov
stc
push
popa
icebp
mov
jp
loope
xor
fldl
and
lods
hlt
pop
fptan
in
sub
xchg
mov
int
rcll
outsl
push
fmull
inc
rcl
and
test
mov
sub
jae,pn
push
rcr
ret
fbstp
dec
fs
jmp
or
inc
mov
or
and
aaa
add
or
scas
pop
shll
stos
jae
add
cmpsb
mov
inc
test
sbb
xchg
and
pop
sbb
adc
clc
sbb
jae
xchg
push
dec
mov
mov
sbb
out
cmc
cmp
leave
arpl
mov
xchg
xlat
push
sub
and
imul
ficomps
cmp
aaa
aam
mov
mov
in
mov
inc
sub
push
outsb
out
lcall
jp
mov
and
int3
xchg
add
mov
ds
and
movsb
mov
cs
dec
xor
mov
mov
xor
jg
bound
dec
push
add
mov
dec
aas
and
sbb
jg
dec
sub
clc
test
popf
arpl
fnstenv
jecxz
ds
fcmovnbe
adc
or
adc
iret
dec
or
mov
inc
mov
dec
sub
lahf
inc
loopne
loopne
mov
lea
jae
insb
mov
cmp
mov
mov
scas
lock
scas
test
inc
xor
cmpl
fiaddl
sub
push
jnp
std
aad
push
jmp
mov
cmp
lahf
cs
jp
and
jbe
xor
sbb
sub
dec
stos
jl
imul
lret
ja
fstps
xchg
jbe
or
jmp
jnp
orl
xor
and
dec
jnp
add
call
aam
push
inc
ds
mov
mov
pop
jae
xchg
sub
pop
push
imul
test
scas
mov
pop
or
jecxz
inc
jl
inc
sub
in
lods
xlat
push
push
inc
or
das
jl
mov
mov
add
shlb
leave
pop
stos
leave
shll
imul
push
pop
mov
and
ss
icebp
data16
jbe
into
out
lahf
je
xor
sbbb
in
in
dec
dec
imul
outsb
adc
icebp
push
testb
mov
xchg
push
dec
int
jle
fs
xchg
pop
fldenv
lcall
leave
mov
out
dec
fdivs
dec
add
testl
cmp
aaa
xorb
cmp
stos
insl
aad
stos
std
in
jno
dec
popa
insl
push
mov
or
and
int3
clc
ret
push
jae
lret
and
dec
movsl
das
pop
cmp
test
or
and
mov
push
inc
push
sarb
movsb
out
dec
lods
xor
gs
jmp
loop
ret
pop
adc
call
int3
jmp
mov
cmp
clc
test
test
add
mov
sub
dec
sahf
sub
and
ffree
mov
push
call
pop
adc
sti
pop
int3
arpl
mov
pop
mov
fbld
mov
push
cltd
mov
push
idivb
loopne
jmp
loope
jge
test
adc
push
cmp
rcr
in
or
cli
cwtl
cmpsb
mov
arpl
mov
rcrl
loope
cmp
mov
les
ret
sub
mul
dec
jb
mov
push
lds
or
sbb
cmp
fdivl
and
mov
cmp
mov
push
test
popa
pop
pop
pop
cmp
inc
mov
adc
jmp
imul
pushf
adc
mov
scas
fdivl
pop
add
test
movsb
mov
inc
pop
pop
cltd
loopne
ljmp
mov
pop
push
int
xorl
jae
inc
dec
clc
mov
fiadds
in
sbb
test
pop
mov
pop
add
pop
adc
imul
push
dec
jno
nop
inc
insl
test
jg
aaa
sbb
sbb
jge
fldt
inc
inc
cmp
xchg
xchg
jmp
mov
ds
popa
mov
or
xor
iret
push
das
lret
jle
fwait
dec
sbb
and
test
test
fdivs
rcll
hlt
movsl
sbb
pop
cmpsb
mov
pop
or
xchg
cmp
or
insl
mov
add
popa
cwtl
push
nop
mov
pop
sub
add
dec
pop
cmpsl
fisubl
mov
insl
xor
adc
imul
aam
jle
jbe
iret
pop
push
dec
sbb
push
pop
xchg
ss
pop
xchg
addr16
scas
jbe
stos
jb
jbe
pusha
filds
xor
shll
scas
pop
xchg
ficoml
xor
aam
sub
jbe
out
pop
lahf
jle
test
cli
testl
iret
mov
and
lock
jo
div
jl,pt
xchg
in
jg
mov
imul
xor
call
sbb
mov
das
sub
mov
das
ret
insl
stos
xor
xchg
jae
push
mov
les
sub
stos
dec
mov
sbb
xchg
jno
dec
mov
mov
stos
xchg
dec
fiaddl
jae
push
push
jle
test
test
add
jp
xchg
orl
mov
cld
inc
pop
pop
push
adcl
sub
mov
xchg
cli
nop
out
push
or
push
mov
sub
mov
or
jno
negl
test
sbbl
sbb
push
test
es
scas
push
mov
in
sub
and
shll
movsl
enter
popa
xor
sbb
movl
fdivl
push
mov
push
in
cmc
cmp
pop
flds
scas
arpl
and
mov
pmaddwd
cmp
xlat
adc
cld
fildl
lods
ret
mov
adc
movsl
lret
int
sub
sub
mov
sub
or
mov
inc
xor
call
popa
or
fstpl
pop
mov
outsl
je
pop
push
dec
inc
imul
pop
inc
jbe
cmpsb
arpl
das
dec
or
rcrl
push
jne
fcompl
mov
into
js
clc
pushf
into
push
aaa
dec
scas
xor
insl
mov
jl
mov
lcall
notb
jmp
pop
or
sbb
inc
xor
sbb
outsl
xchg
cld
scas
lods
adc
jo
inc
scas
xor
add
bound
movsb
xchg
int
cmp
and
add
sarb
dec
les
ja
xor
mov
dec
mov
push
inc
call
loopne
dec
pextrw
pop
insb
dec
loope
imull
inc
xchg
mov
movsb
jmp
sahf
movsl
mov
loopne
bound
xchg
lea
lds
xor
mov
aas
sbb
cs
cs
idivb
xor
cmpb
into
movsl
xchg
pop
lcall
mov
test
addl
xchg
mov
test
out
mov
test
inc
mov
adcb
cmp
xchg
dec
xchg
mov
pop
int
inc
repz
fsubrp
lahf
xchg
add
xchg
lods
pop
jecxz
inc
fisubl
cmc
mov
sub
mov
addr16
push
mov
jno
or
sarl
addr16
add
pushf
repnz
cmpsl
jno
stos
call
loop
xchg
mov
inc
fstps
push
fisubrs
enter
cmp
push
mov
lcall
rcrb
and
pop
ja
jp
fstpt
pop
dec
repz
mov
mov
insb
mov
es
in
add
pop
push
cmpsl
sub
jbe
pop
stos
rolb
push
pop
sbb
sti
fs
sbb
adc
imul
ljmp
xchg
cmp
fidivrl
mov
cmpsb
sbb
pop
mov
fisttps
pop
dec
fwait
jnp
divb
inc
mov
in
push
clc
dec
pop
add
aam
into
movsb
leave
jnp
xlat
aaa
dec
sbb
mov
inc
dec
mov
adc
push
push
sahf
data16
jg
adc
or
jnp
cli
rcrb
push
and
xchg
or
mov
mov
cmp
mov
mov
jno
push
dec
mov
xor
mov
addr16
popa
jnp
dec
js
test
mov
inc
mov
cltd
pop
sahf
jg
cs
lahf
fsub
mov
movsb
shrl
ret
sahf
xor
out
dec
lods
and
loope
enter
cmc
fnstcw
aas
adcb
sub
mov
imul
and
inc
gs
xchg
mov
add
push
jg
sbb
aam
roll
sahf
pop
xchg
mov
mov
mov
mov
popa
bound
mov
cld
int
gs
icebp
test
lret
xchg
in
jmp
mov
lea
mov
insb
add
loopne
add
rcrl
xor
mov
lds
jns
andl
push
xor
push
in
rclb
aaa
outsl
lods
mov
adc
jns
cmp
in
test
dec
xchg
div
add
andl
aad
jmp
mov
aam
push
imul
out
sahf
dec
dec
test
mov
mov
jmp
xchg
push
fdivl
push
popa
and
insl
xor
js
pop
and
testl
push
pop
jmp
hlt
xchg
xchg
arpl
cmp
mov
xchg
movsb
xchg
pusha
adc
hlt
dec
push
cld
dec
xchg
jo
bt
sub
out
and
test
shrb
fwait
xchg
rclb
jbe
cwtl
out
xchg
jns
int3
cmc
and
repz
sti
je
fincstp
aad
ljmp
sub
aam
orb
cltd
lods
cmc
and
mov
xlat
test
andb
dec
test
fisubl
jl
std
in
push
fstps
sbb
push
xor
scas
and
inc
cmp
mov
enter
xlat
xlat
cld
push
sahf
inc
ficoms
loopne
or
ljmp
pop
pop
scas
inc
jle
sub
inc
lods
daa
dec
fwait
imul
mov
cwtl
lret
and
test
mov
cmp
icebp
scas
lcall
outsl
adc
cmpsl
lods
pop
cltd
adc
into
xor
pop
repnz
fidivs
cwtl
pop
pop
or
dec
out
sub
negl
shrb
repnz
adc
cmp
mov
test
adc
js
shlb
cmpsb
push
arpl
push
jo
icebp
mov
aas
pop
adc
adc
enter
mov
cld
popf
inc
or
dec
push
bound
rclb
jp
dec
test
mov
jns
jns
test
sub
cmp
or
loopne
arpl
mov
xchg
jge
push
dec
sbb
xchg
imul
adc
stc
aaa
push
xchg
pop
cmp
icebp
dec
mov
popf
sbb
sub
in
mov
lcall
sarb
repnz
iret
scas
int3
mov
cmp
outsb
xchg
inc
add
jo
jne
jnp
sbb
pop
push
in
sub
mov
shrl
adc
push
cmp
int3
mov
and
cld
and
xor
adc
fimuls
add
nop
mov
push
mov
in
xchg
stos
xchg
inc
imul
stos
es
sbb
sarb
pop
nop
pushf
xchg
jo
and
mov
add
cmpsl
push
rolb
test
test
scas
push
cmp
jbe
pop
mov
fld
xchg
xchg
lahf
inc
sbb
movsl
jne
stos
mov
dec
out
mov
fistpll
fdivrs
fidivrl
push
mov
vpsubusw
sub
iret
or
add
add
dec
add
xchg
test
add
xchg
cwtl
imul
mov
test
lods
sti
inc
pop
cmpsl
push
andb
es
fwait
sub
dec
lea
lods
sub
leave
jno
test
nop
adc
mov
out
xchg
leave
and
xchg
ficoml
pop
adc
ds
fistps
mov
rcll
pop
loope
lea
jg
out
inc
cmp
or
jno
or
aas
imulb
mov
ds
in
add
stos
aam
cmp
push
mov
xchg
out
pop
xor
xchg
ja
popa
cli
iret
mov
pop
js
cmp
sub
dec
xchg
mov
xor
sub
arpl
jmp
icebp
adc
vmread
imul
or
call
std
mov
and
aaa
xchg
cmp
pop
sahf
jbe
cmp
and
xor
push
mov
jnp
xchg
dec
mov
lcall
jle
lock
cmpsb
je
test
fwait
in
jne
pusha
and
sbb
dec
push
pop
and
xchg
mov
lock
mov
cmpsb
push
adc
into
iret
das
aaa
out
dec
inc
inc
push
dec
aaa
push
rorl
in
popa
lods
je
jbe
lock
xor
sub
sub
xchg
imul
dec
sti
sbb
idivb
in
nop
cmp
add
xchg
cli
sbb
fnsave
mov
mov
aam
in
cmp
shrb
sahf
jmp
pushf
adc
dec
and
mov
movsl
ret
xchg
dec
add
jb
or
sbb
cld
out
jg
pause
sbb
push
and
xor
lret
outsl
je
out
lea
adc
mov
aad
lret
inc
xchg
xchg
mov
xchg
fidivl
jg
out
mov
mov
mov
mov
pop
shlb
adc
lret
xchg
push
xchg
adc
mov
fwait
push
sarb
rcll
mov
lea
add
mov
bound
pop
push
xchg
and
jmp
mov
lods
xchg
dec
call
add
ljmp
shl
int
mov
mov
fdivl
out
fsubs
jae
cmp
rcrl
mov
ljmp
jo
sub
mov
sub
cltd
push
fdivs
lret
sub
mov
dec
sub
cld
orl
pop
cli
scas
clc
adc
lea
test
fs
gs
sub
inc
and
or
push
jge
pop
int3
pop
addr16
lds
ret
lea
mov
pop
cmp
mov
add
enter
pop
aad
jge
out
imul
cmc
daa
xchg
mov
jle
xchg
adcb
mov
std
and
movsb
mov
cld
dec
push
popa
dec
sbb
sbb
fistl
jl
in
jecxz
inc
push
jns
jns
dec
std
popf
jmp
dec
cmp
dec
jecxz
movsl
cmp
ud1
xchg
scas
in
cmc
cmp
push
repnz
nop
xchg
aad
dec
lods
sub
cmp
lahf
or
out
add
or
es
add
in
cld
sub
aaa
mov
fadds
add
xchg
dec
push
pop
push
imul
sub
xchg
pop
fsubrp
pop
pop
sub
adc
jmp
and
ss
jns
aas
lods
push
jg
sbb
jbe
lea
push
fistps
and
sbb
sahf
leave
pop
movsl
jle
jl
xchg
mov
call
or
mov
andl
xor
inc
icebp
repz
dec
movsl
xor
movsb
notl
pop
dec
xor
cmc
mov
lret
push
pusha
out
pop
add
push
cld
jge
add
idivb
push
add
in
popa
lret
jle
ja
sub
jge
dec
test
cmpsl
xchg
or
mov
std
or
push
scas
add
cwtl
mov
push
mov
sub
push
rcr
lret
jae
and
stos
dec
or
ja
dec
cli
jno
hlt
jo
or
sbb
push
mov
fdivs
sub
les
xor
jge
and
pop
lret
sub
aas
mov
xchg
arpl
insb
add
xchg
and
adc
pop
scas
icebp
sbb
cwtl
push
jecxz
and
pop
mov
fildl
dec
pop
ret
lods
inc
xchg
and
cwtl
adc
push
mov
push
sub
js
mov
mov
jbe
es
pop
repnz
data16
push
xorl
jo
popf
lock
push
scas
mov
lret
mov
into
imul
movsb
fstpl
lret
and
fistpll
xchg
movsl
ss
sub
daa
cmpsl
jns
leave
into
xchg
sbb
outsl
lods
inc
xchg
dec
add
mov
or
mov
aam
inc
mov
into
shll
mov
hlt
test
stos
cmp
or
or
aaa
jmp
mov
rclb
inc
insl
aam
enter
cmpsb
enter
sub
in
pop
or
adc
cmp
insl
enter
jnp
and
jg
sahf
lods
cltd
inc
cld
and
lods
xlat
cmp
inc
mov
int
stos
inc
mov
mov
mov
lahf
mov
pop
inc
test
js
xchg
cs
pop
mov
and
loopne
fstl
sub
mov
rcll
ja
sub
mov
outsb
push
add
test
inc
pop
or
xor
inc
bound
outsl
lcall
jnp
add
loope
or
loop
sbb
sub
and
xchg
ds
lret
inc
movsb
mov
cmp
leave
outsl
ror
sarl
iret
inc
push
add
movsl
pushf
or
xchg
in
cltd
inc
leave
les
adc
lcall
ret
data16
dec
cltd
insl
jo
imul
sub
repnz
ljmp
jae
je,pn
cmp
test
jns
dec
lret
dec
adc
daa
inc
ja
cmp
popf
adc
rclb
pop
xor
sbb
xchg
pop
imul
cli
pop
and
jns
movsl
subl
push
and
test
test
fdivs
rcll
hlt
inc
stos
pop
mov
aaa
pop
add
insl
inc
in
movsb
subb
sbb
sbb
test
lea
mov
pop
sub
mov
xchg
int3
je
into
cs
mov
cwtl
pop
adc
dec
repnz
xchg
ja
lods
sbb
sub
sbb
pmulhw
ljmp
ljmp
lret
cld
xchg
lds
xor
pop
insb
shlb
pop
adc
push
pop
out
test
cmp
adc
mov
fcoml
add
outsb
jp
xchg
push
movsb
hlt
scas
or
outsb
cmp
or
cli
aaa
mov
imul
mov
pavgb
or
sub
out
pop
adc
mov
call
push
in
fbstp
sti
xor
test
int3
dec
add
stos
xchg
dec
pop
sub
cmp
mov
adcb
xor
mov
add
push
pusha
inc
jne
cmc
fst
insl
movl
and
jp
clc
ds
js
in
mov
sbb
mov
xchg
fwait
leave
mov
jle
sub
fs
xchg
push
mov
jne
icebp
lcall
sub
lcall
dec
imul
push
aaa
pop
out
fwait
scas
push
sub
add
rcrl
stos
ja
addb
rcll
arpl
mov
ss
mov
shlb
iret
aam
out
xchg
mov
mov
cmpb
cmp
shrl
aaa
sarl
dec
add
mov
stos
daa
cmc
push
test
push
daa
loope
rclb
xor
mov
pop
or
dec
fisttpll
cltd
xchg
dec
lret
jno
mov
lods
dec
mov
mov
pop
outsl
imul
into
imul
dec
xor
repnz
cmp
cli
outsb
or
data16
insb
dec
xor
popf
movsb
les
push
es
add
dec
outsl
pop
ret
xchg
insl
mov
nop
sbb
sti
mov
jl
adc
ret
out
inc
push
or
movsb
or
cmpsb
mov
push
push
cli
xor
cltd
cld
popa
cmpsl
jle
add
pop
xlat
jmp
daa
out
pop
inc
loop
add
daa
or
inc
push
push
push
push
cmp
loop
mov
pop
sbb
sti
bound
jmp
inc
lret
cwtl
lcall
aas
add
cld
and
dec
xor
xorl
jnp
cmpsb
inc
repnz
inc
fwait
scas
push
pop
gs
pop
loope
stos
cs
cmpsb
adc
cld
and
mov
push
jo
xchg
fwait
lods
sub
stos
ret
jno
mov
sbb
adc
iret
ret
popa
popf
adc
jae
enter
loope
lahf
dec
rol
xor
rcl
xor
sbb
push
es
es
nop
outsb
xchg
cmc
add
aaa
jnp
push
cmp
inc
pop
rclb
div
cmpb
xlat
lods
xchg
sbb
aas
xchg
dec
dec
cmpsb
sub
dec
mov
fdivrl
push
jno
data16
xor
lret
pop
dec
mulb
jae
jp
int3
test
sbb
mov
push
pushf
ror
cltd
sbb
std
jg
jmp
jno
loopne
inc
xor
cmp
leave
cmc
jb
pop
xchg
xchg
xor
loop
stos
sub
pushf
xlat
pop
and
xbegin
cld
daa
pusha
cmp
pop
rorb
cmc
andb
add
mov
sarb
lock
shrb
sbb
mov
inc
mov
add
call
sbb
dec
fst
mov
loopne
and
les
mov
mov
gs
push
dec
jo
xor
lret
xor
push
or
pop
xchg
ret
cli
es
fldenv
mov
je
and
xor
gs
mov
cmp
lahf
fs
setl
lcall
jne
push
mov
or
jns
ss
fnstcw
pop
lahf
lcall
in
pushf
adc
lret
lcall
out
and
sbb
mulb
pop
inc
in
sub
push
nop
xchg
movsb
insl
popf
mov
int
stc
pop
lret
xchg
xor
mov
repnz
sbb
push
sbb
inc
scas
pop
and
cld
push
add
jg
mov
mov
push
inc
incl
call
push
inc
add
in
or
jb
test
mov
outsb
dec
dec
inc
sub
sbb
subl
adc
push
sahf
ja
iret
push
aam
test
pop
add
pop
cld
mov
hlt
dec
push
inc
shrl
in
xchg
sti
idiv
bsr
sub
dec
and
pop
cs
cld
leave
jb
ror
cwtl
dec
outsb
xor
push
push
js
or
pop
mov
dec
sub
fwait
push
in
idivb
rcr
aas
cld
inc
cmpsb
jae
out
test
adc
mov
sarl
jle
pop
xchg
hlt
push
int3
push
and
sbbb
mov
add
daa
and
and
or
push
daa
dec
aad
mov
fisubrl
pop
cmp
test
sahf
insl
ja
movsb
into
xor
orl
mov
pop
mov
pop
or
nop
cmc
inc
pop
mov
enter
pop
pop
sub
outsb
xor
pop
inc
xchg
imul
iret
loopne
fcomps
inc
xor
add
int3
divb
sub
daa
lcall
jmp
sti
mov
inc
mov
cwtl
gs
mov
test
xchg
inc
repz
jmp
mov
mov
mov
xor
push
xor
pop
cmpsb
stos
repnz
adc
fdivl
pop
mov
popa
lock
lock
cmp
ds
cmp
push
rol
fst
insb
pop
dec
fcmovb
or
fisubrl
and
and
mov
aaa
arpl
mov
ret
or
aad
popf
ljmp
in
xchg
stos
mov
bound
mov
imul
stos
inc
and
fisubl
jns
add
xchg
jg
xor
stc
jne
lret
in
inc
push
cmpsb
aaa
inc
and
or
out
jns
lret
movntq
adc
sub
inc
in
or
lcall
and
xorl
push
lds
dec
jp
in
pop
xor
xchg
push
mov
fldenv
mov
lahf
and
adc
rcrl
clc
clc
test
mov
sbb
mov
das
sub
push
lahf
fistps
cmp
icebp
pop
xor
push
mov
xchg
mov
ficompl
push
sahf
jb
sub
jbe
ret
mov
daa
out
and
stc
push
xlat
cmpsb
or
inc
repz
shlb
mov
cmc
xor
jle
pop
sbb
das
std
cmc
mov
mov
mov
imul
adc
sti
add
out
data16
fisttpl
hlt
cld
and
xor
cmp
fistpll
mov
aas
lret
pop
inc
lcall
fwait
push
xchg
mov
cld
sbb
inc
pop
pop
dec
je
jno
cld
sbb
add
sbb
push
pop
call
inc
mov
hlt
sbb
dec
and
and
mov
sbb
aam
mov
or
xchg
mov
inc
iret
nop
push
mov
mull
mov
sub
push
mov
mov
cmp
cmpsl
fcom
adc
popa
add
cltd
lods
adc
add
pop
in
shlb
dec
repnz
ret
orl
loop
lret
es
mov
pushf
pusha
mov
adcb
jge
loop
dec
push
jmp
shl
sar
adc
aad
xor
psrad
loope
mov
jbe
jecxz
stos
into
cmp
insl
xchg
pop
sbb
add
ds
fistps
mov
rcll
pop
loope
lea
mov
mov
pop
mov
jno
movsb
push
mov
lds
in
lahf
mov
ficomps
cwtl
aam
loopne
jb
rcrl
inc
pop
lahf
out
mov
xchg
in
or
stos
into
xchg
pusha
add
dec
sub
or
jne
push
xor
mov
mov
inc
inc
icebp
es
mov
mull
in
outsb
jae
lret
xor
pushf
xorl
sub
sub
inc
jg
sbbb
push
or
jle
sub
pop
dec
inc
pop
dec
pop
lahf
data16
rcll
mov
fcmovb
sub
xchg
orl
mov
in
mov
loopne
xchg
cmpb
int
sti
inc
idivl
push
adc
cmpl
cmp
pop
in
dec
mov
mov
xchg
fnstcw
jp
jb
shlb
xlat
dec
data16
cwtl
or
cmp
adc
mov
mov
sbb
jne
hlt
or
dec
rclb
add
dec
inc
xchg
mov
add
dec
cmc
stc
push
fdivrl
subb
or
lea
xor
cmp
js
pop
orb
inc
and
mov
ja
nop
inc
rorb
bound
cmp
push
pop
std
xor
pop
jns
lahf
mov
sub
dec
jmp
pop
dec
mov
std
mov
xor
cmp
jno
mov
xchg
mov
xchg
ds
int3
jo
gs
scas
pop
rcrb
cltd
test
dec
movsl
faddl
xchg
fwait
imul
ret
loope
cs
pop
mov
fcmovu
out
dec
bound
or
xchg
outsb
adcb
sahf
lret
jno
lret
int3
lahf
fs
cmp
mov
push
testb
inc
imul
sti
jb
out
mov
inc
std
jns
jo
fdiv
out
gs
fsubs
jge
xor
xchg
lahf
mov
xchg
out
rol
sbb
cmpsb
and
daa
das
push
pop
sbb
arpl
push
pop
inc
mov
lea
jb
add
mov
and
sub
pop
aas
pop
test
jmp
xor
inc
test
dec
ficompl
push
jmp
push
clc
xchg
push
push
das
mov
sarb
hlt
inc
cmp
mulb
idivl
arpl
push
aad
mov
inc
in
pop
and
hlt
outsl
popf
leave
cmpsb
shlb
jmp
xchg
leave
out
dec
sbb
xchg
loope
mov
loope
outsb
push
andl
and
ljmp
or
out
mov
lret
sbb
mov
dec
pop
xchg
aad
jg
push
rcrl
sub
pop
jge
cld
xchg
lea
add
add
pop
enter
adc
cmp
loope
gs
push
mov
loope
out
negb
add
adc
lock
push
mov
pop
sbb
pop
and
mov
sti
push
mov
mov
or
pop
xor
jns
movsl
fisttpll
es
sti
ds
je
push
fwait
jo
ret
or
pop
push
pusha
jo
mov
or
sahf
mov
xchg
adc
scas
arpl
lea
mov
or
dec
sbb
out
mov
test
xor
adc
imul
inc
inc
mov
dec
xor
mov
pop
inc
in
outsl
adc
es
cltd
call
enter
or
mov
in
dec
popa
shl
sti
aas
iret
xchg
in
aam
cmp
imul
xorl
xchg
push
lods
add
pop
in
mov
pop
adc
jo
in
out
and
jbe
ss
lods
jns
das
fldl
pop
in
fisubrl
add
sub
mov
sbb
mov
aaa
inc
mov
gs
lret
bound
push
out
sbb
mov
sbb
or
xor
jmp
mov
pop
mov
sbb
adc
sbb
or
bound
test
inc
inc
out
ret
mov
dec
xchg
cli
leave
repz
imul
push
inc
clc
xor
stc
or
mov
or
test
xor
push
popf
cs
push
sbb
mov
add
mov
popa
mov
xchg
mov
pop
xor
addr16
inc
into
pop
cmp
mov
das
sbb
arpl
std
jmp
icebp
jl
cwtl
or
inc
in
movsb
mov
xchg
jne
test
mov
inc
call
inc
pop
or
in
repnz
aam
jo
jmp
dec
pop
adc
pop
lcall
int3
cmp
mov
inc
fwait
and
mov
scas
push
add
xor
das
aaa
adc
enter
and
in
xchg
mov
test
pop
sub
in
stos
jecxz
insl
stc
cmp
out
into
or
sub
push
pop
jo
mov
mov
repnz
loopne
into
push
jo
out
dec
mov
mov
ret
out
jmp
imul
pop
cmp
push
pop
mov
clc
ds
in
int
aad
jo
jg
int3
scas
sbb
xchg
xchg
or
jmp
jg
mov
jbe
aaa
sub
mov
jne
jnp
ja
mov
imul
xchg
hlt
fiaddl
sbb
push
xchg
pop
sub
or
jae
pushf
dec
fisubrs
scas
icebp
pmaddwd
sub
bound
repnz
mov
enter
sub
ficompl
pop
push
mov
inc
call
outsb
ljmp
mov
loope
icebp
sub
inc
cmp
je
sbb
mov
mov
nop
gs
idivl
xchg
aaa
sbb
fsubs
jle
inc
mov
les
add
jmp
popa
mov
imul
push
mov
lcall
mov
sarb
movsb
jmp
inc
mov
cmpsb
movsb
lods
inc
or
mov
or
mov
pop
mov
jge
xchg
push
push
outsb
add
lea
add
mov
sahf
push
pop
push
dec
mov
sbb
dec
jns
cld
xchg
fidivs
iret
scas
xor
cmp
jp
dec
out
mov
jae
push
pop
icebp
jp
ss
test
add
rcrb
sub
xor
fdivrs
movsb
jno
fs
adc
loop
stos
aam
leave
mov
cli
idivl
sarb
push
sarl
jo
outsb
idivb
jl
pop
stc
ret
pusha
mov
push
movsl
bound
loope
cltd
in
int
call
sbb
mov
das
sub
mov
das
ret
insl
stos
xor
xchg
jae
push
mov
les
sub
stos
dec
mov
sbb
xchg
jno
dec
mov
mov
stos
xchg
dec
fiaddl
jae
push
push
jle
test
test
add
jp
xchg
orl
jno
xlat
ret
push
sbb
sarb
pop
inc
inc
repz
push
or
xor
pop
xlat
in
sbb
xchg
cmpsb
dec
or
sarb
xchg
mov
adcl
aas
sahf
xchg
cmp
push
addr16
fwait
scas
push
dec
fsts
push
sbb
mov
add
jb
cmc
inc
dec
cltd
pop
into
lds
mov
jo
push
mov
aaa
sub
jns
test
gs
sarb
mov
jge
subb
callw
pop
xchg
leave
pop
mov
in
jo
dec
orl
or
mov
movsb
push
fidivrs
mov
jne
test
sub
mov
sbb
inc
mov
fsubr
pop
scas
push
xchg
dec
jno
cmp
cmp
mov
mov
into
stos
dec
jle
push
ds
xor
icebp
cmp
repnz
mov
push
dec
dec
mov
pop
mov
sub
mov
sbb
mov
xchg
or
jl
xchg
adc
pop
out
dec
mov
repnz
sbbb
dec
jbe
stos
dec
cltd
push
lahf
mov
jecxz
dec
jg
mov
testb
add
xor
cmp
shrb
shl
lds
mov
sbb
sarb
pop
add
jns
jg
sarb
inc
sub
sub
je
pop
pop
in
ljmp
mov
jle
mov
or
xor
pop
dec
outsl
cmpsl
pusha
pop
dec
lcall
or
mov
pop
cmpsb
xor
pop
add
stos
sub
rorb
push
push
or
inc
mov
out
fmul
push
ja
inc
es
mov
cs
inc
scas
cwtl
adc
inc
dec
arpl
sti
fwait
pop
inc
add
into
test
stc
mov
lods
pop
inc
pop
fs
dec
push
xchg
push
mov
scas
movsl
push
cltd
inc
bound
std
das
push
dec
cmp
sub
sbb
inc
mov
jo
and
repnz
and
out
cltd
mov
jp
push
pusha
sub
testb
mov
dec
stc
xchg
ja
dec
cltd
ljmp
andl
stos
test
sub
hlt
ja
sbb
cmp
adc
sub
xchg
mov
leave
or
push
mov
sbbb
jp
adc
push
sbb
adc
xor
scas
jge
lods
adc
xor
mov
ret
and
es
pop
dec
aad
outsb
sti
sub
mov
xlat
inc
pop
cs
push
push
call
das
mov
xor
aas
sub
adcb
cmp
fwait
inc
xchg
daa
in
cmpsl
scas
lahf
inc
mov
push
iret
mov
pop
dec
icebp
in
movsl
rclb
scas
add
mov
imul
imull
pop
add
xchg
shrl
xor
imul
inc
fstpl
or
shll
sub
mov
mov
inc
loop
push
addb
lods
out
pop
outsb
or
mov
pop
mov
jns
xor
jecxz
push
jl
fcoms
insb
icebp
xor
mov
xor
out
dec
dec
push
rcr
cmp
test
cwtl
test
mov
popa
mov
lahf
addb
rorb
incl
jg
dec
js
sub
pop
subl
aaa
outsl
mulb
mov
jge
test
xor
je
or
add
push
jg
sbb
aam
roll
sahf
pop
xchg
mov
ret
xor
and
jb
fwait
imul
and
jecxz
jno
clc
icebp
xor
sbb
or
pop
out
rsm
or
shrb
cwtl
test
popf
rcl
cmpsb
push
fwait
xchg
call
lods
cmp
out
dec
cli
mov
cmp
and
dec
push
in
movl
dec
popa
pop
mov
jae
mov
insb
xchg
cli
push
js
jmp
adc
ss
imul
insl
scas
shl
or
pusha
sub
fldenv
fs
adc
mov
mov
mov
js
inc
xchg
push
mov
cwtl
jmp
fdivrs
in
lcall
adcl
mov
dec
hlt
ficompl
jle
sub
xorb
xchg
jecxz
insl
lds
icebp
or
cmp
dec
xchg
sti
jle
mov
dec
stc
sahf
icebp
aaa
mov
sub
push
nop
add
inc
rcr
inc
ss
pop
scas
sub
mov
imul
mulb
ret
inc
mov
mov
xor
lcall
mov
ficompl
fdivs
insl
movsb
cmp
mov
es
push
mov
inc
push
mov
sahf
cmp
add
pop
into
andl
clc
fs
call
adc
test
xchg
scas
inc
cmpsl
sub
push
cs
mov
loope
je
cmp
adc
idivl
insb
mov
test
cmp
add
std
xlat
stos
out
lds
xchg
repnz
lods
daa
rcrl
push
and
add
mov
pop
mov
pop
aad
and
sahf
pop
ficomps
jo
jnp
add
repnz
mov
repnz
inc
fldl
int3
mov
popa
push
sbb
aaa
mov
fmuls
shrl
xchg
adc
aad
ljmp
fcmovbe
cwtl
or
pop
mov
div
aad
mov
test
inc
inc
lea
add
mov
test
cmp
in
sub
imul
xlat
loopne
adc
inc
pop
ljmp
rorl
ret
aam
add
negb
dec
add
xchg
xchg
or
mov
test
mov
mov
and
ret
scas
negb
fildl
mov
mov
inc
fcom
push
enter
sbb
pop
and
decb
mov
xchg
and
lret
inc
test
pop
imul
fwait
and
subl
pop
xchg
insl
outsb
pop
cmc
mov
xor
or
cmpsb
loopne
cmp
cwtl
es
push
cld
and
push
out
cmp
loop
ss
jp
jnp
sub
xor
jp
outsb
mov
rclb
mov
and
leave
fucomi
mov
stos
setno
add
les
out
or
cmpl
mov
mov
aaa
jae
adc
dec
fsts
pop
mov
jo
push
hlt
mov
adc
mov
dec
pusha
mov
or
cli
or
add
mov
mov
push
ret
imul
push
pop
and
lea
mov
arpl
jno
es
xor
or
ss
xchg
mov
test
add
xchg
pop
ljmp
mov
add
adc
pop
jns
repz
push
test
loope
or
ret
shll
adc
popa
pop
and
incl
push
in
les
and
add
jne
loopne
adc
mov
push
mov
mov
xchg
mov
pop
cmp
addb
mov
mov
push
loop
mov
hlt
popf
in
out
repz
fcmovnb
mov
sub
movsb
lods
adc
jmp
rcll
or
add
jne
xor
sti
add
rol
adc
clc
into
push
sbb
fsubrl
push
bound
xchg
fmuls
jp
push
dec
pushf
add
ds
cmp
xchg
sahf
sub
bound
push
rcr
xchg
js
dec
test
mov
xchg
cli
imull
test
out
cmpsb
je
test
dec
das
adc
mov
lods
cmpsl
jae
xchg
dec
sbb
sbb
push
stc
stos
and
rcl
aaa
and
clc
mov
arpl
xor
cmpsl
in
js
addr16
mov
scas
nop
push
fbstp
jp
inc
jmp
scas
mov
push
xlat
push
daa
xchg
test
dec
sbb
mov
xor
shrl
int3
test
in
inc
lahf
jp
pop
push
mov
adc
push
dec
lock
rcrb
test
sub
les
and
push
out
mov
add
pop
or
jmp
popf
push
inc
js
test
scas
xor
out
xchg
out
ss
out
adc
daa
lret
shrb
and
fstpl
test
push
push
loopne
jg
inc
jg
js
xchg
test
xchg
adc
inc
jmp
movsl
mov
lahf
inc
mov
test
lds
push
sbb
mov
stos
daa
add
lods
xchg
push
cmp
mov
outsl
mov
movsb
gs
mov
pop
add
scas
fwait
adc
or
mov
mov
adc
int
stos
jae
add
cmpsb
mov
inc
test
sbb
retw
shl
dec
pop
loop
fcomps
pop
lret
sub
inc
into
mov
shrb
xor
cli
mov
repz
arpl
mov
into
xchg
xlat
jne
mov
ss
cmp
jl
jb
repz
les
cmp
pop
pop
cwtl
ret
cmp
arpl
mov
cmp
out
lea
adcb
add
test
pop
mov
inc
cltd
test
cmp
sbb
fadds
sub
test
mov
add
mov
scas
ljmp
fwait
and
add
cs
andb
mov
es
lahf
cmp
and
cmp
scas
or
dec
mov
ret
lods
andl
sbb
push
inc
adc
and
jl
lea
mov
adc
cmp
pop
mov
mov
pop
clc
push
setnp
mov
xchg
pop
fadds
sub
jo
fisubrs
mov
in
push
idivb
lods
scas
mov
inc
cmpsb
jns
lock
pop
mov
enter
mov
mov
into
xor
mov
into
enter
dec
jecxz
or
sahf
cli
dec
and
mov
dec
shlb
mov
jae
and
mov
loope
mov
bound
pusha
mov
sub
inc
lcall
std
mov
mov
and
sub
aas
data16
cmp
outsl
xchg
jp
pop
inc
or
leave
push
pop
jbe
inc
fidivs
ljmp
mov
cmp
and
aam
imul
out
mov
aad
jno
fs
dec
frstor
push
push
mov
jbe
jb
movsb
insl
int
popa
repnz
xor
xor
ja
sbb
movsb
data16
jbe
push
shlb
sbb
pop
mov
addb
xlat
cmpsb
adc
fdivs
lock
jno
inc
or
cli
inc
add
lods
pop
cmp
aas
mov
leave
or
subb
adc
and
rolb
imul
call
cmp
std
loope
dec
loope
push
inc
push
dec
es
xchg
sahf
enter
fdivr
mov
push
popl
fucomi
mov
lahf
scas
aas
mov
rcrl
mov
in
es
sbb
cmp
divb
daa
nop
mov
or
push
cmp
fldl
jl
pop
xor
inc
das
lods
mov
mov
add
push
ja
leave
adc
push
iret
sbb
pop
lods
ss
inc
fimuls
out
scas
lret
pop
push
addr16
hlt
jb,pn
xchg
les
sbb
icebp
inc
mov
sahf
sahf
add
push
cmpsb
std
ss
loope
adc
pusha
jb
lcall
movsb
test
aad
sub
pop
xchg
jecxz
mov
pop
jmp
xor
adc
dec
fs
loop
inc
fstl
cmpsb
jnp
inc
or
scas
and
cmc
aas
push
cmpsl
mov
push
mov
adc
sub
test
out
repnz
cmc
aaa
rcrl
ljmp
add
and
pop
cmpsb
jb
inc
or
push
mov
mov
jb
outsb
inc
mov
mov
call
shll
add
pop
and
leave
idivl
mov
cmp
inc
imul
mov
test
cli
mov
jmp
pop
scas
icebp
fucomi
mov
sub
movl
jp
jbe
inc
add
gs
daa
cltd
aas
fnsave
leave
icebp
cli
inc
dec
jns
lcall
insb
pushl
divb
cmp
jne
push
mov
repnz
mov
lods
fcomps
add
imul
jle
sbb
rolb
jecxz
test
ljmp
insb
jae
mov
push
sahf
fmul
ds
pushf
xchg
ja
adc
xor
mov
cwtl
add
subl
cltd
push
lock
out
insl
out
enter
fildl
out
pusha
repz
jl
in
call
out
mov
sub
dec
ja
dec
mov
je
fldenv
ret
cmp
adcl
movsl
dec
fldt
cwtl
pop
mov
push
push
psllq
adc
mov
dec
lods
leave
xor
mov
bound
ss
adc
pop
test
fsts
iret
int3
nop
orb
out
adc
mov
sbb
int
sti
jnp
jle
divl
or
push
shrl
sbb
dec
faddl
xchg
aam
jl
push
loope
movsl
inc
int
call
fwait
xchg
ja
popf
test
push
sbb
das
gs
mov
test
fcoml
pop
in
jl
shll
mov
sbb
out
push
adc
outsb
inc
adc
aaa
xor
movsb
cli
inc
test
push
push
jge
jne
test
xor
leave
mov
adc
stos
jne
mov
ret
cmovae
and
mov
add
cli
leave
data16
push
jno
ss
mov
insl
rorb
invlpg
test
sbb
cmpsb
imul
inc
dec
aam
out
adc
ss
pop
or
sbb
cmp
mov
in
fnstcw
test
jo
mov
lods
push
xchg
ret
push
ss
dec
dec
pop
or
mov
jle
fists
add
dec
ss
adcb
jp
sub
into
ret
repnz
pushf
outsb
pusha
mov
ja
add
mov
fdiv
mov
loopne
rcr
sbb
stos
sahf
lcall
fidivs
pop
negl
sub
jmp
or
mov
lahf
roll
loop
fidivs
cwtl
pop
test
push
push
sub
and
adc
cmpsl
repnz
es
sbb
jne
insb
dec
xchg
das
cltd
cld
jno
sti
pop
inc
in
mov
js
xor
add
int3
push
movsb
sbb
aad
lcall
outsl
test
cmpsl
andl
cltd
push
mov
popl
push
leave
es
adc
shll
mov
arpl
cmc
cltd
push
dec
xchg
sub
mov
jg
pop
sbb
cmpsl
sarl
shl
adc
sub
cmp
leave
jg
and
cmp
dec
dec
insl
pop
cwtl
in
xchg
int
fwait
cmp
cmp
ljmp
nop
cmpsl
jb
xor
cld
push
lahf
push
xor
popa
dec
mov
xchg
outsb
xor
hlt
inc
or
mov
aam
cs
imul
or
gs
cmp
jmp
dec
lcall
lret
cli
push
into
lcall
pushf
out
popf
sub
fdiv
stos
xor
sub
dec
add
dec
add
idivb
movsb
sbb
lock
addr16
notl
enter
push
dec
xchg
sbb
nop
cmp
ror
sbb
inc
dec
jmp
pop
movsl
out
into
or
inc
ficompl
jp
es
aaa
fsubrl
sbb
sub
push
mov
lret
cmpl
jg
dec
out
pop
and
mov
mov
out
lcall
les
cmp
les
enter
push
adc
outsl
sbb
mov
jp
mov
push
jo
adc
push
fsubrp
and
arpl
pop
and
jge
push
xchg
sbb
addr16
loop
mov
sahf
mov
jg
sti
mov
lcall
add
test
adc
add
xchg
sub
into
cli
mov
sbbb
xor
cmp
cmp
sti
inc
into
int
scas
adc
fs
call
mov
pop
ss
mov
jle
adc
add
and
dec
xchg
gs
clc
pop
mov
repnz
mov
sbb
stos
leave
pop
sbb
adc
sarb
sbb
loopne
test
scas
cmpsb
shll
push
and
imul
daa
mov
mov
fwait
ss
pop
movsb
jnp
xor
ljmp
fstps
push
cmp
sbb
and
inc
jnp
sbb
out
test
mov
mov
fiadds
push
jle
movsb
data16
outsb
outsl
dec
mov
mov
lock
mov
pusha
cmpsb
imul
sti
scas
cmp
ret
push
inc
dec
inc
fsubp
xchg
sahf
mov
mov
adc
cli
mov
shlb
loope
and
js
push
fnstenv
out
rcr
ds
enter
dec
pop
addl
bound
je
and
mov
jle
mov
or
and
addl
out
insl
jno
lahf
xchg
pop
stc
or
fwait
xchg
xchg
test
in
inc
leave
pop
inc
les
sub
dec
sub
push
lock
xchg
into
inc
jge
std
cmp
pop
enter
sub
in
movb
stos
fmuls
push
inc
cmp
lret
sub
inc
jo
out
and
pop
subl
mov
cmpb
and
loope
mov
and
or
xchg
inc
lret
mov
je
ja
mov
fwait
pop
add
jle
fadd
lcall
test
jge
popf
mov
aas
or
or
cmp
dec
xchg
sti
jle
mov
dec
stc
insb
scas
mov
shll
jo
add
shlb
and
iret
xchg
xor
mov
xchg
add
sub
movsl
test
ret
mov
pop
push
sbb
or
mov
loop
rolb
xchg
stos
popf
pop
jo
sahf
xchg
push
mov
test
push
rcrl
or
or
and
xchg
sbb
loopne
jmp
in
scas
lods
scas
and
pop
lods
mov
sub
fsubr
push
cmp
mov
sub
jg
and
inc
outsl
fnstsw
pop
mov
jp
aad
enter
lds
and
scas
push
mov
jecxz
js
xor
clc
cmc
push
jae
faddp
sub
mov
mov
movsb
jne
mov
hlt
mov
std
xorl
dec
sub
out
mov
addb
aaa
adc
mov
inc
and
scas
scas
jp
add
or
std
push
lds
in
dec
loope
and
gs
aaa
cmp
jl
mov
inc
mov
pop
test
push
lods
mov
inc
popf
mov
cwtl
mov
jge
jbe
jmp
addb
fsubl
inc
cmpsl
push
sub
dec
jp
inc
cmp
xchg
mov
movsl
es
iret
in
mov
lahf
or
iret
das
mov
mov
movsl
adcb
pop
lods
les
mov
xor
insl
cmpxchg
filds
stos
movl
shlb
int
imul
xchg
jae
cmp
xor
mov
jp
lods
cltd
pop
test
aaa
cmp
dec
add
mov
xchg
dec
pushf
mov
incb
mov
loope
jae
xor
mov
inc
inc
bound
add
xchg
sub
jbe
mov
mov
jb
cmp
xchg
mov
mov
call
test
loope
ljmp
rorb
mov
ljmp
sbb
cmp
bound
xlat
inc
push
adc
cmp
mov
pop
inc
sub
sub
and
dec
cmp
sub
inc
sub
inc
jle
mov
imul
mov
sti
loopne
pop
mov
and
cld
or
inc
adcl
imul
and
xchg
and
adc
mov
lea
xor
or
rcl
push
test
into
es
mov
fbld
fstpl
cmp
movsl
repz
push
mov
push
aaa
in
rolb
sub
mov
mov
pusha
pop
repz
imul
inc
push
lds
mov
dec
mov
inc
mov
fs
adc
out
popa
ds
or
dec
jae
lret
push
push
out
enter
mov
inc
lret
mov
fisubrl
push
xchg
mov
mov
cwtl
lret
add
mulb
push
inc
ljmp
arpl
mov
je
mov
lock
lds
mov
cmpsb
mov
inc
xchg
int3
xor
imul
pop
push
mov
mov
popa
add
ja
mov
xor
mov
and
incl
mov
push
js
and
push
scas
iret
mov
aaa
shlb
cmp
cmp
sub
lds
bound
jmp
jecxz
push
lret
mov
imul
subb
stc
inc
or
cmp
pusha
loope
and
push
in
push
mov
push
cmp
sub
inc
dec
mov
mov
adc
mov
int3
sub
push
gs
or
in
sti
out
mov
imul
mov
ret
mov
jno
leave
xor
mov
sub
dec
rorb
adc
xor
xlat
ret
push
lahf
mov
lret
cmp
leave
dec
pop
xorb
xor
stc
lds
cmc
xchg
mov
icebp
stc
mov
scas
hlt
and
out
fstp
mov
sbbl
and
sahf
cmp
das
jmp
push
sbb
jnp
stos
gs
xchg
inc
shrl
push
pop
xchg
pop
fwait
lods
outsl
mov
jne
lds
inc
dec
xor
insw
popa
aam
push
jne
add
or
aad
cmp
mov
jmp
lods
hlt
adc
and
nop
mov
lods
mov
scas
shrb
mov
leave
or
mov
sub
jl
sub
test
push
out
inc
xchg
inc
xor
jbe
xchg
loope
fstpl
push
dec
ror
movsl
sub
scas
push
lods
fs
stc
adc
xchg
ljmp
ds
fistpll
imul
push
jbe
xchg
sub
push
cmp
clc
fxam
pop
sub
dec
push
std
leave
mov
mov
mov
pop
sub
add
push
or
jo
repnz
idiv
pop
cmpsl
mov
sbb
pushf
add
inc
mov
pop
jae
pop
cmp
jo
xor
fists
int
mov
out
lock
mov
arpl
sbb
pop
mov
cli
loopne
push
lock
out
pop
mov
mov
and
ret
mov
loope
mov
cmpsb
int
and
out
repz
mov
enter
pushf
out
loope
aad
dec
lods
mov
mov
cmp
es
shlb
and
mov
add
lds
adc
dec
sbb
test
and
cmp
scas
aad
or
in
inc
xor
add
xchg
cmpsl
add
sti
or
in
mov
int3
imull
mov
mov
add
sbb
lock
in
inc
addr16
cld
dec
sbb
out
jmp
in
adc
nop
jnp
mov
ja
mov
aaa
sbb
lcall
dec
xorl
jo
fisubs
int3
mov
subl
call
in
push
mov
or
lods
mov
inc
jbe
aas
push
xchg
jno
jl
mov
hlt
jle
shll
stos
enter
test
pop
sbb
xchg
int
jmp
pop
xchg
xor
pop
lods
icebp
sub
mov
mov
scas
xor
push
fbstp
or
inc
xor
stos
jbe
inc
daa
mov
aad
sub
and
out
xchg
mov
lret
sbb
test
jbe
xchg
mov
in
mov
repz
popf
popa
push
leave
add
popa
mov
sub
pop
shll
dec
mov
in
and
test
sbb
aad
aaa
fdivl
inc
sbb
mov
pop
ja
add
repnz
loope
pop
inc
xlat
addr16
rcrl
mov
enter
ds
cmp
adc
scas
inc
mov
int3
and
dec
stc
mov
insl
adc
push
add
cs
cli
leave
repz
test
jmp
mov
dec
insb
xor
dec
xchg
pop
dec
mov
fadds
ret
xlat
cmp
lea
adc
fmuls
mov
shrb
adc
add
in
lds
xor
loop
out
prefetch
pcmpgtw
dec
inc
sub
xor
dec
into
in
push
bound
test
out
dec
das
pop
test
cld
mov
cmpsb
mov
inc
pop
test
pop
dec
rcrl
mov
hlt
loop
addb
jo
jle
cmp
sub
pop
cli
ja
fst
sbb
push
hlt
shlb
sbb
bound
fs
lds
popa
movsl
movsl
lds
shrb
rcrb
loopne
or
test
cmpsl
fidivrl
xor
loopne
cli
roll
add
mov
hlt
je
push
ljmp
test
jae
leave
mov
outsl
push
xchg
in
mov
mov
jo
test
mov
mov
pop
and
inc
fstl
sub
mov
rcll
ja
sub
movsb
jge
xlat
ret
test
dec
addl
cltd
or
dec
lds
push
into
push
and
lcall
adc
adc
add
push
fs
imul
xor
and
repz
cs
mov
mov
je
inc
sub
bound
fnstenv
cltd
xchg
imul
jnp
pop
ds
push
dec
push
push
mov
iret
fidivs
inc
xor
adc
in
mov
or
ja
and
xchg
lods
pop
xor
inc
frstpm(287
sub
into
aad
in
idivl
clc
dec
ficoml
fcoml
xlat
inc
clc
sbb
test
lods
cmc
test
add
or
ficoml
test
add
in
inc
or
stc
cmp
jbe
bound
es
mov
or
mov
push
lea
mov
mov
cld
mov
lods
scas
sahf
fcmovnbe
or
push
sub
roll
mov
xlat
dec
jecxz
push
addr16
mov
and
mov
stos
dec
cmp
ret
mov
imul
jo
imul
cwtl
or
lcall
inc
outsl
repz
sbb
add
mov
repnz
dec
iret
ja
mov
jbe
in
shlb
popf
ljmp
mov
es
negb
movsb
jno
dec
cmpsb
les
rol
pusha
sbb
xchg
pop
mov
add
mov
pop
push
ret
pop
cli
xchg
not
mov
lea
jbe
fsubl
lock
xor
fld
or
nop
pusha
les
dec
push
ljmp
rcrl
mov
push
jecxz
mov
cs
bt
ret
mov
dec
xchg
sbb
pop
test
mov
sbb
shrb
pop
int3
dec
cmpsl
adc
lahf
enter
rcrb
or
jge
xchg
test
xchg
lret
mov
repz
jle
jbe
bound
cs
icebp
test
xchg
xchg
ljmp
lret
xlat
ret
push
sbb
sarb
pop
inc
inc
repz
rolb
sub
stos
js
lcall
js
and
inc
push
arpl
test
xor
pop
lcall
fs
and
pop
das
sub
pop
xlat
pop
inc
loope
punpckhdq
and
mov
jo
mov
sbb
lret
loop
das
xchg
stc
fdivl
mov
dec
roll
xchg
out
popf
inc
testb
jmp
hlt
sub
push
mov
out
jnp
in
mov
ljmp
imul
int
push
adc
jo
fcompl
lods
mov
mov
adc
fdivrs
and
push
shl
or
stos
scas
sub
sub
or
popf
clc
inc
sahf
sbb
test
push
push
fnsave
xchg
cmp
in
add
sub
scas
cltd
je
fdivl
mov
loopne
xor
xor
mov
xor
mov
mov
adc
push
pushf
in
cmp
inc
imul
inc
cwtl
popa
cmpsb
pop
in
imul
repz
cs
xchg
aaa
pop
adc
inc
adc
ficoml
lcall
outsb
inc
dec
add
jmp
cmp
adc
jmp
mov
lcall
add
cmpsl
repnz
loopne
rclb
inc
ja
lods
lods
mov
inc
or
add
imul
ret
popa
cmp
shrb
and
in
stos
cltd
cwtl
imul
mov
aam
in
mov
jl
xchg
popf
ja
movsb
shlb
push
adc
jmp
inc
or
pop
mov
in
sbb
repz
mov
push
sbbl
nop
adc
dec
jb
mov
or
out
mov
pop
push
lods
jb
push
add
clc
in
psubw
xchg
mov
or
dec
jno
movsb
mov
or
inc
fisubrl
hlt
lods
mov
repz
cmpl
rorb
cltd
cmpl
icebp
aaa
data16
adc
add
xor
adc
es
fstps
push
dec
adc
xor
je
cltd
sbb
lahf
mov
lcall
or
arpl
mov
mov
outsb
lods
lds
nop
inc
jbe
ret
iret
sub
sahf
sbbl
mov
in
icebp
into
jns
pop
jecxz
fs
negb
pop
scas
aam
orb
test
pop
xor
mov
xchg
cmpsl
fisubrs
sbb
xor
xchg
add
outsb
mov
and
dec
aaa
outsb
mov
push
cmp
or
pusha
loopne
pop
dec
jnp
add
ss
mov
fldt
mov
sub
cli
imul
std
xor
lea
cmpsl
and
dec
mov
daa
cltd
stos
dec
sbb
idiv
push
popa
bound
mov
out
pop
inc
sbb
cli
pop
ret
fwait
leave
mov
pop
pop
lock
pusha
repnz
mov
fldl
and
cmpsl
mov
adc
dec
jmp
cmp
test
in
mov
jp
and
cs
fwait
pop
ret
push
int
mov
jecxz
arpl
lret
fisttpl
jmp
jo
sbb
pop
test
mov
imul
lret
ds
je
mov
inc
lock
mov
jae
outsl
adc
add
mov
dec
xor
into
dec
jecxz
pop
popa
movsb
bound
sbbl
enter
clc
lea
add
xlat
or
or
leave
outsb
inc
test
push
lret
add
xchg
movsb
mov
xchg
test
inc
mov
fbld
es
inc
dec
mov
xchg
mov
cld
xor
inc
sbb
mov
sub
out
adc
movb
lahf
mov
pop
ss
mov
shr
loopne
add
andl
inc
fmull
lea
insb
sub
adc
imul
in
outsb
mov
outsb
or
out
mov
cltd
inc
lret
adc
lods
fcmovu
cmp
xor
mov
dec
hlt
fimull
stc
push
fbld
negb
fcompl
mov
scas
arpl
cmp
in
into
dec
fdivrl
scas
out
mov
nop
add
sub
fisubrs
mov
dec
sub
inc
fisubs
push
jp
add
or
out
inc
scas
mov
sub
mov
imul
mov
test
es
cwtl
cmpsb
daa
in
push
mov
mov
cmp
and
xor
push
jmp
jl
lods
scas
and
sbb
push
xor
xchg
mov
mov
mov
popa
lock
and
lods
ljmp
cs
outsb
inc
adc
sub
in
mov
bound
inc
jle
xor
lahf
inc
shlb
mov
faddp
sub
mov
mov
xchg
jne
mov
hlt
mov
aad
popf
adc
lcall
test
loopne
sub
ja
cmpsb
ret
cltd
shl
sub
add
das
xchg
adc
xor
lods
dec
cmp
bound
aad
pop
pusha
xchg
lahf
fsubs
push
mov
es
and
and
dec
dec
outsl
inc
lods
scas
push
stos
test
mov
aas
pop
push
cmp
mov
dec
rep
add
out
rorb
into
imul
jb
in
mov
mov
test
jbe
mov
xchg
movsl
xchg
fdivs
mov
pop
jae
int
hlt
scas
enter
bound
sti
or
popa
ljmp
mov
movsb
imull
cmp
xor
jmp
data16
cmp
dec
inc
jno
inc
test
call
mov
add
rcrl
jbe
imul
icebp
and
lret
mov
jno
xor
flds
cmc
int3
cltd
adc
insb
subl
inc
jmp
add
popf
jp
std
popf
adc
movsb
xchg
xchg
xchg
lock
dec
add
xchg
dec
lahf
inc
pop
xlat
fwait
or
mov
sbb
stos
add
push
bnd
add
aam
sbb
jg
dec
inc
inc
fcompl
cli
scas
cmp
inc
movsb
xchg
cmp
xorl
mov
xor
push
lahf
test
xchg
data16
cmp
xor
dec
xor
sub
xchg
out
xorb
aas
ret
push
cld
testb
pop
loope
test
xchg
iret
out
movups
add
das
out
or
testl
sti
pop
jp
jmp
or
movsb
ret
mov
shl
mov
push
call
cltd
push
and
nop
es
call
enter
stos
into
rcll
cmp
out
out
imul
mov
outsb
dec
nop
xor
dec
cmc
ja
loopne
adc
jbe
or
out
mov
aas
or
pop
mov
xor
aam
push
xchg
stos
mov
push
fmuls
mov
movsb
cmc
popa
cmp
and
and
add
mov
rorb
add
pop
call
sbb
mov
jg
ds
sub
mov
lds
enter
lds
sbb
sbb
mov
xchg
jp
in
xchg
and
xchg
sub
sub
in
pop
outsl
and
add
xor
dec
daa
mov
adcl
enter
sub
lods
test
or
out
dec
pop
jmp
xchg
xlat
jle
cmc
mov
mov
pop
jb
mov
sub
std
pop
or
cmp
lods
jae
jecxz
mov
jae
jle
dec
push
inc
push
and
xlat
int
imul
jmp
cmp
and
sbb
lock
xor
inc
sbb
xor
fmull
rorl
out
mov
mov
push
fadd
andb
cmc
mov
popa
sub
dec
pop
sub
out
test
dec
and
negl
push
sbb
lock
dec
jnp
mov
cmp
out
or
or
mov
mov
ss
inc
mov
push
mov
push
adcb
fdivrl
fistpl
lock
pop
dec
mov
dec
into
pop
push
and
test
or
xchg
addr16
pop
jae
dec
into
push
and
and
loop
mov
push
stos
js
or
cli
ret
lahf
pop
and
pusha
cmp
add
adc
adc
and
jl
cwtl
in
mov
mov
stos
cs
sub
arpl
movl
test
or
adc
mov
std
lods
mov
pop
add
imul
sbb
dec
sbb
push
repnz
insl
inc
xchg
rorb
movsb
mov
clc
ja
ja
xchg
and
addr16
jmp
sub
fnsave
push
lods
jmp
push
adc
subl
mov
add
lea
aas
or
inc
adc
sub
pop
in
sti
mov
fcompl
cwtl
dec
sbb
into
in
push
sub
arpl
xor
mov
pop
mov
pop
loopne
push
inc
push
mov
lahf
push
or
out
shll
repz
cs
sbb
mov
lahf
test
das
repnz
inc
add
addr16
or
std
lock
jne
repnz
add
sub
mov
cmp
dec
jecxz
movsl
cmp
ud1
xchg
scas
in
add
mov
or
adc
insb
addb
icebp
inc
rcrl
xchg
jg
sub
outsl
fdivrs
mov
cmp
cltd
dec
cmpsb
es
push
les
pusha
push
test
pop
lock
lods
mov
gs
mov
push
jbe
cmp
push
movsl
scas
test
or
dec
cmpsb
js
ja
inc
mov
sbb
dec
or
mov
cld
jg
jo
mov
cmp
and
mov
add
clc
addb
pop
mov
rorb
cs
stos
push
xlat
mov
push
jmp
clc
outsb
shlb
mov
mov
ucomiss
cld
dec
sahf
dec
mov
fxsave
cmp
scas
stos
xor
jl
es
out
mov
xor
mov
adc
movsl
push
bnd
cmpb
pushf
jb
xchg
jmp
dec
sub
xor
cwtl
cli
imul
lea
dec
push
out
shr
pop
loop
mov
sub
popa
mov
addl
inc
inc
daa
lcall
test
pop
push
dec
pop
jno
mov
or
or
pop
ret
bound
in
arpl
xor
shlb
sbb
xor
mov
ljmp
test
or
daa
jecxz
sahf
push
subb
bound
mov
mov
aaa
mov
rclb
roll
cmp
pop
add
enter
fisttpl
mov
data16
mov
leave
jo
cmp
and
lock
pop
inc
push
cld
pop
sahf
pusha
aaa
repz
scas
mov
lret
mov
into
imul
sbb
out
jbe
jmp
popa
inc
dec
add
add
out
and
xor
ror
xchg
aad
gs
add
cld
cmp
and
pop
dec
fwait
pop
pushf
outsb
lret
pop
add
mov
stos
mul
push
int
enter
sahf
stos
pop
nop
sbb
idiv
pusha
loope
je
adc
loope
bound
and
clc
lret
rolb
inc
cltd
xor
mov
or
movsl
inc
add
pop
lock
pop
mov
roll
insl
je
test
xchg
mov
and
in
movsb
and
mov
pop
jnp
mov
sub
cwtl
adc
mov
cld
and
call
mov
push
xchg
inc
xchg
xchg
fnsave
test
sbbl
into
cmp
mov
in
outsb
add
jp
add
xchg
ret
xchg
iret
xor
xchg
mov
dec
cmp
and
insl
idivl
or
pop
sbbl
inc
and
push
imul
xor
imul
shlb
stc
in
sbbb
iret
movsl
pushf
push
in
stos
cltd
inc
jmp
or
and
dec
or
iret
fiadds
mov
xchg
dec
insl
fidivrl
mov
inc
sti
xlat
push
xchg
sub
ret
pop
fistl
sti
or
subl
std
xchg
xchg
cmpsb
int
jp
aam
loop
xchg
cmpsb
rol
mov
lods
cmc
or
mov
es
push
je
xor
movsl
addl
adc
rorb
sbb
js
movsb
mov
stc
adc
std
fisttpl
ja
or
or
mov
sbb
out
inc
or
mov
test
mov
sub
js
test
out
out
loope
cmp
ret
mov
imul
jo
imul
cwtl
or
lcall
es
mov
cli
pop
mov
and
ljmp
cmp
movsl
jp
jbe
cmc
rorb
cmp
mov
mov
pop
fisubrl
int
dec
adc
cmp
mov
lret
xchg
mov
enter
or
jae
mov
repnz
stc
add
call
jg
push
bound
loope
lds
or
mov
mov
out
xchg
push
test
mov
fimuls
jl
jae
into
dec
mov
cmp
push
sahf
inc
fnsave
mov
fs
push
dec
sarl
mov
adc
test
mov
mov
outsl
mov
pop
pop
mov
sbbl
pop
imul
popa
mov
adcb
fs
pop
jp
inc
jp
popf
mov
sbb
pop
lock
jno
cmpsb
add
xchg
jo
sub
inc
sbb
sbb
mov
out
add
sub
add
out
xchg
call
jno
dec
add
cmp
mov
das
pop
into
and
mul
cmpsb
pop
nop
jnp
sub
cli
inc
sub
xchg
out
push
fistl
add
cmp
shlb
push
addr16
in
cwtl
subb
lcall
xchg
pop
add
lret
cld
mov
sub
cmp
hlt
xor
inc
xchg
mov
mov
out
xor
jmp
sbb
cmp
out
ret
popa
mov
inc
xor
cmp
lods
sbb
mov
aas
xor
pop
push
dec
mov
or
pop
out
cmp
jle
cmp
ficompl
xchg
ficoms
xor
xor
jp
pushf
mov
clc
push
outsb
repnz
insb
sahf
pop
push
pushf
in
cwtl
or
dec
enter
imul
aam
jmp
scas
nop
insb
xchg
inc
imul
loope
aad
jne
or
inc
sub
sub
daa
cmpsl
jle
add
push
sub
push
in
sarb
push
mov
daa
mov
cld
ja
mov
nop
adc
sbb
pop
fnsave
sbb
fists
cmp
or
add
ljmp
or
rorl
pushf
loope
lret
cwtl
lret
in
stos
inc
jnp
movsl
pushf
adc
cmp
fdivs
aaa
cwtl
adc
mov
aad
lods
push
push
stos
xchg
fwait
mov
sbb
sub
stos
xchg
fbld
xchg
and
dec
mov
je
loopne
cld
inc
stos
lock
sahf
sbb
push
pop
stos
push
out
adc
jns
or
push
int
inc
jmp
push
xchg
and
roll
xchg
lods
xchg
test
mov
push
test
cmp
loop
sbb
pusha
sub
testb
mov
dec
stc
xchg
ja
sbb
int
data16
xchg
es
lret
mov
aam
mov
mov
repz
fmuls
mov
es
add
xchg
bound
imul
adc
rcll
mov
inc
in
add
sar
lcall
pushf
jb
icebp
jno
xchg
pusha
gs
roll
mov
fwait
xchg
sbb
jmp
fs
shrb
jo
roll
imul
jg
ret
jns
jo
jb
mov
xchg
orl
and
dec
add
xchg
push
cmp
push
cmp
lret
mov
xor
cmp
popf
lock
movsl
dec
lret
out
push
icebp
and
bswap
nop
mov
ret
aas
push
and
adc
sbb
or
push
pop
adc
lds
push
add
dec
dec
push
and
dec
jl
aas
inc
sbb
rcll
movsb
sbb
push
sub
push
or
fildl
pop
addr16
jecxz
xor
out
in
xor
xchg
or
push
movl
shrb
mov
xor
jno
lods
fnstsw
mov
outsl
push
push
sub
push
hlt
fisttpl
push
xchg
dec
in
or
notl
mov
lods
insl
mov
shlb
sub
inc
int3
xchg
out
adc
adc
add
mov
dec
push
cmpb
push
loope
adc
gs
xchg
mov
push
or
mov
lods
call
enter
in
lods
cmp
dec
add
jae
cmpsl
push
push
mov
inc
std
mov
cmp
popl
pushf
das
push
add
mov
sbb
mov
sbb
adc
lahf
shlb
and
mov
inc
dec
or
push
mov
repz
test
sub
xchg
and
out
ljmp
lret
xor
lods
lret
ja
xorl
sahf
cmp
mov
dec
push
lock
adc
fmull
jno
or
stos
orb
sub
in
popa
cmp
ret
ret
cmp
xchg
lret
xor
mov
movsl
pop
lods
and
jns
fldcw
jb
cmp
into
xchg
imul
iret
loopne
fcomps
inc
xor
add
mov
int
push
lcall
outsb
pop
fs
iret
stos
andl
push
and
aam
fldcw
lcall
call
jne
mulb
mov
stc
movsl
sarl
xor
xchg
add
jecxz
gs
pop
pop
dec
lods
jl
push
xchg
add
sbb
repz
or
aas
jb
sub
std
fwait
inc
mov
cmp
cmp
push
arpl
sbb
cltd
dec
dec
mov
mov
rcrl
add
ret
or
aam
lret
outsb
mov
and
jbe
inc
mov
mov
addl
dec
ja
push
ret
jno
xchg
adc
addl
dec
jmp
mov
sbb
lods
dec
cmp
icebp
rcr
iret
rorb
push
or
loop
push
and
ror
ljmp
xchg
outsl
jne
jp
addb
sbb
mov
ficoms
dec
inc
out
out
jne
shlb
pop
pop
sbb
imul
lret
jae
adcl
inc
repz
dec
inc
je
sbb
ja
pop
lock
xor
fisubrl
mov
xchg
mov
nop
jb
ret
lods
rcrl
je
out
mov
xchg
mov
ss
cmc
sbb
adcb
sbbl
inc
mov
orb
repnz
iret
scas
int3
mov
cmp
outsb
xchg
inc
add
jo
jne
jnp
sbb
mov
call
cmc
ljmp
adc
lret
pop
int3
cmp
cs
int3
xlat
lret
out
loop
in
jge
mov
adc
mov
and
fsubs
jg
mov
cld
cld
out
dec
lahf
mov
cmp
mov
cmpsb
sbb
jp
dec
inc
mov
xchg
mov
and
adc
jo
ror
add
pop
mov
jmp
hlt
js
lods
adc
mov
and
mov
mov
es
pop
push
mov
pop
xor
xor
fsubrs
cmpsb
mov
ja
faddl
fnsave
in
nop
sub
or
aaa
sub
push
les
xchg
ss
dec
sti
pop
mov
imul
jno
xlat
jle
loop
push
enter
jbe
test
lret
daa
jmp
push
push
daa
loop
cmc
negb
sub
es
hlt
stos
lret
fadds
insl
mov
push
idivb
sub
sbb
cltd
sub
pop
lock
cmp
ficoml
popf
jmp
mov
mov
push
test
push
push
and
xchg
mov
lods
in
fucom
jne
scas
mov
cltd
ret
in
cmp
push
mov
xchg
out
pop
xor
xchg
ja
popa
cli
mov
js
sbb
xchg
or
jo
pop
fwait
mov
lds
push
addr16
mov
sbb
aad
int
repnz
ljmp
or
xchg
mov
andl
stos
pusha
call
jnp
mov
int3
mov
jmp
or
imul
out
mov
stos
enter
push
sbb
push
leave
lret
je
mov
cmp
xlat
fsubl
sbb
jmp
js
stos
and
rcl
aaa
and
in
jns
mov
adc
pop
shlb
jb
mov
scas
movsl
push
mov
and
jo
inc
cltd
insl
xor
idivl
mov
call
das
or
mov
daa
call
or
cmp
mov
jmp
mov
sub
mov
jo
fistps
movl
mov
fstps
jne
inc
and
stc
jecxz
add
xchg
lret
inc
pop
sub
outsl
je
out
shll
clc
mov
fs
dec
xor
lods
and
dec
scas
inc
nop
outsl
mov
xchg
mov
out
stos
out
shrl
sbb
mov
js
jns
add
pop
fcmovnu
into
inc
pop
push
push
pop
mov
pusha
int
dec
cmp
xchg
adc
cli
jmp
xor
imul
fisubrs
iret
popa
sub
adc
pop
sub
push
sbb
imul
cmp
cmc
adc
pusha
and
lock
mov
in
add
daa
cmp
xor
nop
xor
rcr
push
out
fcompp
adc
push
add
ljmp
adc
xchg
popf
pop
rcll
xchg
lods
test
and
sub
fdivl
xchg
fcom
jae
push
cmpsb
push
push
mov
or
cmc
cmp
leave
arpl
mov
xchg
xlat
mov
leave
add
sbb
xchg
xorb
inc
ss
cmp
push
adc
adc
cli
sbb
xor
pop
xchg
es
push
jns
sti
ret
xchg
add
mov
mov
cwtl
cmpsb
mov
or
xor
sub
dec
push
sahf
movsb
sahf
mov
in
mov
enter
addr16
mov
push
dec
cwtl
push
jg
xchg
xor
cmp
jb
negb
int3
out
mov
repz
adc
xor
jge
fwait
in
adc
repnz
nop
xchg
aad
dec
lods
sub
xor
fs
call
loopne
or
or
lret
mov
shl
xchg
add
inc
jnp
mov
arpl
adc
jne
fmuls
fcom
ljmp
dec
out
cli
daa
or
sbb
into
fstl
dec
dec
push
and
xchg
cmpsl
lcall
int3
jl
cld
fstps
mov
int
aad
xor
push
cmp
aas
xchg
dec
add
xor
shlb
stos
mov
frstor
lret
movsl
mov
movsl
aaa
in
lods
movsb
test
sub
in
adc
dec
xor
out
cld
fldl2e
dec
xchg
cmp
push
imul
popa
inc
mov
addr16
in
insl
in
dec
fwait
dec
shll
cld
cmp
shll
dec
push
repz
mov
sahf
xchg
movsl
lock
pop
adc
jl
lds
dec
pop
fnstenv
cmp
aad
sub
mov
fbld
into
dec
imul
push
adc
mov
sbb
aam
shl
test
jl
cmp
and
lcall
push
xor
and
and
jno
pop
outsb
das
pushf
rcl
sub
mov
in
movsb
cmp
adc
sub
xchg
mov
fmul
dec
cmp
mov
fistl
inc
popa
add
ret
mov
shl
subl
push
rcr
sub
mov
dec
mov
pop
int
leave
pop
data16
out
sbb
xor
mov
adc
insb
lods
scas
mov
lods
jb
adc
mov
cmp
inc
in
push
test
cmp
jl
daa
mov
xchg
jo
jmp
dec
aas
test
scas
and
movsl
test
mov
rol
sbb
ret
insb
or
xchg
fidivrl
pop
adcl
cmp
in
ljmp
es
loopne
fisttps
jp
dec
mov
mov
add
pop
xchg
fmull
cmp
jo
xor
std
mov
mov
cmp
jg
rolb
mov
insl
enter
cmpsb
cmp
fbld
sub
cwtl
xchg
fdivl
das
orl
pop
mov
cmpps
shrb
andl
cltd
jae
push
sub
xchg
mov
mov
xor
aas
mov
mov
leave
gs
pop
addr16
addr16
jae
or
scas
mov
mov
jle
iret
mov
and
pop
aad
dec
jp
cmp
shll
add
pop
and
leave
idivl
mov
cmp
inc
jo
mov
inc
adc
cmpsl
repz
pop
push
fidivrs
inc
out
rcl
hlt
or
iret
xor
mov
aam
cltd
jmp
out
aam
cld
push
data16
xchg
jle
mov
fwait
loopne
xchg
sub
adc
imul
mov
icebp
stos
movsl
push
jmp
xor
pop
sbb
xchg
outsb
mov
aaa
sbb
daa
inc
ja
cmp
popf
adc
rclb
pop
xor
sbb
sbb
lods
lods
movl
pop
movsl
adcl
ss
mov
xchg
mov
lret
je
xchg
or
ds
mov
cmc
insb
mov
enter
cmp
out
lea
lcall
sbb
lahf
cmp
cmp
bound
pushf
mov
popa
je
ret
loop
ja
add
test
add
fldt
inc
add
test
ds
cltd
sbb
popf
icebp
dec
cmp
ret
dec
cli
mov
sbb
dec
test
pushf
je
dec
pop
add
fisttpl
es
scas
jg
aad
and
bound
out
cmp
js
ret
pop
inc
push
inc
fwait
dec
cmp
lock
mov
outsb
idivb
xor
pop
mov
fld
and
pop
xchg
aaa
mov
call
pop
test
and
in
xor
adc
in
fbstp
xchg
jmp
mov
inc
addr16
scas
xchg
scas
rcrl
ret
pop
dec
inc
or
mov
or
cld
xchg
jne
ret
jns
ja
outsb
cmp
lret
inc
push
popa
outsb
shll
dec
or
dec
std
std
hlt
ljmp
xchg
in
out
push
xor
sbb
xchg
push
fistpl
cli
jp
fwait
mov
xchg
add
imul
push
xchg
mov
jmp
adc
call
jb
dec
push
pop
sbb
test
test
xlat
int
pop
test
sub
pop
ljmp
pop
shrb
je
iret
mov
mov
sbb
inc
leave
enter
mov
out
jecxz
push
push
enter
jns
sbb
aam
loop
into
and
int
jl
cmc
repnz
js
insb
fiaddl
or
pop
hlt
shll
jmp
je
test
aaa
mov
frstor
cld
mov
test
pop
push
mov
aam
xchg
pop
out
push
icebp
dec
pop
repnz
ja
cmp
out
mov
loopne
cmp
je
inc
fcompl
adc
movsb
adc
inc
sub
loop
xchg
insl
cmp
mov
rcrl
mov
cmpsb
cltd
xor
nop
pop
or
popf
enter
push
mov
pop
cs
cmpsl
jle
add
push
sub
push
in
sarb
push
mov
inc
mov
cld
ja
mov
nop
adc
sbb
pop
sbb
pop
out
mov
dec
and
pop
je
mov
mov
das
mov
or
popa
cmp
fistl
mov
mov
pop
sub
mov
testl
in
and
cmc
fiaddl
pusha
mov
adc
jnp
int
mov
xor
jmp
mov
clc
pop
mov
or
lret
stos
clc
mov
sub
mov
jns
inc
or
inc
bound
popf
insl
sbb
xchg
btcl
push
ds
shrl
insb
or
push
das
push
dec
cmp
out
fwait
test
pop
fisubrl
hlt
sti
mov
push
test
inc
sahf
or
hlt
lahf
in
lahf
mov
dec
inc
test
jns
sub
xchg
xchg
or
mov
movsl
cld
jae
fstpt
push
mov
adc
jno
fsubrs
or
and
push
mov
sbb
sub
adc
in
mov
jp
idiv
cwtl
loopne
or
cmpsb
adc
nop
js
mov
shrl
mov
sub
scas
fs
fisubrl
cmpsb
dec
or
in
inc
outsl
mov
scas
inc
ja
inc
sbb
ret
ss
cmpsl
fisubrs
cmp
mov
mov
lret
dec
sarb
aaa
ds
pop
pop
sub
xchg
push
inc
test
scas
push
shlb
mov
das
adc
pop
inc
dec
add
jnp
push
push
es
xchg
mov
das
enter
std
xor
sub
cmp
aad
inc
mov
clc
out
cmpsb
hlt
aas
hlt
xlat
xchg
fxch
sbb
sarb
lods
inc
fs
fnstsw
or
xchg
test
aam
mull
fwait
lea
jnp
imul
mov
xor
rorb
jnp
andb
inc
addr16
cmc
xor
mov
dec
jae
test
push
cwtl
mov
mov
inc
xchg
mov
fldl
pop
js
jecxz
fmuls
rorb
add
cmpsb
adcl
and
aaa
sbb
mov
mov
push
sti
or
mov
push
cmpsb
pop
scas
pop
out
mov
and
sahf
inc
xchg
enter
push
ja
aam
push
pop
fwait
mov
icebp
dec
leave
mov
insb
mov
andb
lods
xor
push
xor
adc
aaa
dec
pop
pushf
add
xchg
arpl
iret
mov
in
add
cmp
orl
lcall
mov
jo
or
pop
mov
dec
popa
pop
mov
sub
push
fcmovb
inc
add
lahf
mov
pop
ss
mov
shr
loopne
add
andl
inc
fmull
lea
insb
sub
adc
imul
in
outsb
mov
outsb
or
out
mov
cltd
inc
lret
adc
lods
fcmovu
cmp
xor
mov
dec
hlt
fimull
stc
push
fbld
negb
fcompl
mov
scas
arpl
cmp
in
into
dec
fdivrl
scas
out
mov
nop
add
sub
fisubrs
mov
dec
sub
inc
fisubs
push
jp
add
or
out
inc
scas
mov
sub
mov
imul
mov
test
es
cwtl
cmpsb
daa
in
push
mov
mov
cmp
and
xor
push
jmp
jl
lods
scas
and
sbb
push
xor
xchg
mov
mov
mov
popa
lock
and
lods
ljmp
cs
outsb
inc
adc
sub
in
mov
bound
inc
jle
xor
lahf
inc
shlb
mov
faddp
sub
mov
mov
xchg
jne
mov
hlt
mov
aad
popf
adc
lcall
test
loopne
sub
ja
cmpsb
ret
cltd
shl
sub
add
das
xchg
adc
xor
lods
dec
cmp
bound
aad
pop
pusha
xchg
lahf
fsubs
push
mov
es
and
and
dec
dec
outsl
inc
lods
scas
push
stos
test
mov
ljmp
in
dec
inc
mov
pop
and
flds
mov
subl
or
ret
mov
dec
jnp
mov
cs
adc
je
cltd
sbb
sti
test
ret
mov
stos
or
jns
xchg
popa
pop
and
sti
inc
shrb
lcall
lea
mov
mov
jecxz
gs
mov
shrb
xor
mov
imul
test
xorb
jno
pop
aas
xlat
out
fnstsw
cltd
imul
jne
nop
imul
aas
xchg
insb
xorl
orb
cmpsb
xchg
jbe
outsb
xchg
lret
es
mov
jl
loop
xlat
xchg
cmp
mov
xor
inc
mov
xchg
xchg
mov
aas
fisttps
pop
xor
mov
pop
cmp
lea
imul
mov
scas
push
and
mov
mov
push
fsubrl
fsts
in
mov
mov
mov
mov
in
adc
push
xor
es
lds
imul
sub
cmp
inc
push
pop
lahf
or
icebp
jnp
insb
loope
nop
cmp
xlat
mov
adc
xchg
pop
mov
movsl
and
jge
sub
mov
jle
ds
jge
adc
out
mov
shlb
fwait
and
aam
enter
push
inc
add
scas
popa
mov
cmc
mov
mov
cs
mov
enter
push
jmp
push
cmpsl
cmpsl
mov
sbb
stos
idivl
adc
call
ret
sub
sbb
xchg
mov
repnz
and
aas
xchg
adc
in
inc
mov
dec
add
stos
aam
jge
imul
mov
or
xchg
rcr
cmp
pop
call
testl
jns
mov
pop
mov
xchg
jne
cmc
push
leave
dec
mov
mov
das
push
cmp
jne
stc
inc
xlat
xchg
lods
push
aam
outsb
pushf
or
cwtl
cmpsb
jp
jno
xchg
inc
cs
bound
inc
mov
in
lods
outsb
inc
pop
jp
dec
inc
jge
jo
imull
jle
or
xchg
ficompl
mov
je
inc
in
xchg
cltd
fwait
push
sub
and
jge
into
in
sbb
outsb
test
fcomps
add
mov
cmp
pusha
les
enter
lock
push
jbe
fists
test
xchg
and
rcrb
cwtl
mov
adc
data16
jbe
dec
inc
lret
insl
shlb
cltd
push
test
mov
xor
and
sbb
push
testl
xor
int3
mov
xchg
jns
cmp
gs
pop
xchg
js
roll
jg
add
popa
fs
jp
fdivrp
xchg
and
mov
xchg
lret
mov
push
cli
xchg
roll
aas
adc
loop
bound
cmp
mov
sub
mov
aaa
push
mov
clc
aaa
push
test
xchg
sbb
push
fimuls
jnp
adc
fwait
dec
cmpsl
mov
lds
add
test
mov
ja
ja
adc
pop
stos
daa
ret
mov
xchg
cmpsb
dec
and
leave
mov
cmp
mov
mov
pop
add
imul
sbb
dec
sbb
push
ret
outsb
out
aam
loopne
and
fldpi
std
mov
js
popf
insl
mov
sbb
notl
test
dec
xlat
stos
mov
push
add
fstps
roll
xchg
adc
repnz
in
add
or
sbb
pop
lahf
mov
jae
inc
adc
ss
aas
jp
ja
sbb
pushf
cmp
dec
rcrl
inc
push
mov
dec
and
rcll
flds
lods
mov
xchg
ret
mov
stos
call
cmpsb
shl
faddl
jg
sub
xor
push
out
jge
push
mov
loopne
jg
pop
in
or
push
cmpsb
add
push
mov
fldcw
mov
into
adc
lahf
jmp
and
lea
std
subb
mov
jo
ret
pop
and
cmp
scas
aad
or
in
inc
xor
add
cmc
flds
jns
aas
push
lock
outsl
je
outsb
cmp
xor
push
jno
or
pusha
cltd
push
jge
fisubrs
cmpsl
dec
adc
push
cmp
std
add
xchg
lock
lock
dec
out
jg
shll
pop
mov
enter
mov
mov
into
xor
mov
xor
dec
mov
or
sahf
mov
xchg
adc
scas
arpl
lea
sbb
outsl
xchg
xchg
stos
enter
pop
mov
jae
add
xchg
and
movsl
pop
xchg
xor
pop
lods
icebp
sub
mov
mov
scas
xor
std
ret
push
sbb
pop
pop
xchg
inc
es
test
cmpsl
mov
inc
ds
mov
mov
add
sub
xor
push
pop
adc
lock
test
scas
in
xor
pop
out
into
outsb
mov
adc
inc
mov
movsb
dec
ror
lret
cmc
mov
ficompl
push
fdiv
push
in
cmp
fdivrl
mov
aas
pop
push
push
cs
jecxz
mov
aam
out
les
push
ret
cli
adc
sti
dec
jnp
leave
inc
cmp
in
leave
xor
int3
and
dec
stc
mov
insl
adc
push
add
lea
mov
cs
mov
add
push
in
jb
lods
pop
es
sbb
lods
push
mov
lods
xchg
movsb
pusha
mov
cmp
out
test
cmp
cli
insb
lods
scas
mov
lods
push
pop
push
scas
mov
sub
pushf
cmp
std
jmp
popa
inc
dec
add
add
jecxz
aad
ret
adc
push
sbbl
xor
adc
pop
dec
subl
arpl
out
adc
pop
sahf
mov
dec
sbb
aad
std
ss
rcrb
xchg
icebp
popf
sbb
cmp
push
cmpsl
int3
and
push
sbb
iret
xor
jl
ljmp
mov
dec
or
scas
jp
jl
inc
mov
add
cwtl
lods
mov
cmp
jg
and
test
push
dec
and
ret
fldt
ljmp
int
sbb
test
dec
lea
mov
sub
pop
popf
rcrl
push
adcb
loopne
psubsw
cwtl
mov
out
lcall
and
lcall
lods
cmp
bound
ja
jb
das
dec
jl
mov
fiaddl
test
jl
movsl
out
aam
add
pop
mov
jo
rol
setbe
or
clc
icebp
pmaddwd
dec
outsl
fwait
xor
mov
daa
aam
ficoml
ds
int3
jbe
lret
rcl
pop
cltd
mov
in
dec
andl
dec
jmp
mov
fwait
cwtl
or
sbb
mov
sbbb
test
xorl
push
xchg
push
xor
cld
into
in
mov
in
jnp
xchg
aaa
lock
ljmp
lods
xchg
xorl
lret
push
cmp
jb
xor
stc
pop
or
mov
and
jno
iret
cmp
cwtl
xchg
outsb
mov
sbb
ja
xorb
mov
sub
mov
sti
movsl
xchg
arpl
xor
adc
js
sub
dec
inc
outsl
mov
sbb
xor
sahf
push
ds
xor
dec
mov
insb
daa
in
adc
xchg
fnstcw
sahf
mov
hlt
mov
xlat
push
add
data16
pusha
and
jmp
dec
outsb
ret
popf
ss
and
mov
pop
push
or
cs
jne
cmp
dec
xor
sarb
ret
movsb
inc
push
movsl
xor
std
push
es
mov
out
mov
dec
or
xchg
dec
into
and
sub
mov
loope
pushf
cltd
mov
mov
and
sahf
inc
fnsave
mov
fs
push
dec
sarl
xchg
xor
mov
xlat
adc
xchg
adc
int3
xlat
addr16
jo
notb
pushf
addl
mov
add
lcall
pop
mov
rcrb
hlt
mov
pop
jp
sbb
sub
sahf
hlt
aad
lea
out
xchg
call
jne
aam
icebp
aas
sub
xchg
inc
mov
ja
inc
iret
jb
jno
mov
pop
test
inc
cmp
mov
in
fnstcw
test
jo
imul
lods
push
leave
pop
movl
hlt
outsb
repnz
lock
repz
pop
flds
int3
imul
into
nop
leave
pop
test
jecxz
jns
sub
mov
dec
icebp
sahf
out
lods
pop
fdivrl
ss
or
fmul
and
repnz
mov
cmp
adc
sub
adc
xchg
mov
stos
adc
mov
inc
add
push
jecxz
mov
and
push
aaa
jle
push
frstor
fsubs
sub
sbb
insb
fdivl
dec
dec
mov
rcrl
sbb
out
pop
mov
shlb
in
push
in
aaa
call
insl
cmp
mov
rcrl
mov
push
enter
shrl
lock
sbb
test
fcoml
leave
es
xor
xchg
mov
jo
pusha
out
or
pop
xor
or
mov
adc
sarl
pusha
pop
jmp
push
fwait
scas
sub
and
dec
ja
cltd
clc
xchg
inc
sahf
sbb
lods
jns
cmpsl
push
and
inc
or
loope
mov
push
addb
dec
stc
stc
lcall
push
xchg
in
xor
pushf
add
inc
gs
push
mov
daa
inc
pop
in
cmpsl
orl
ja
lea
pop
inc
imul
test
sbb
rorl
xor
or
movsb
xorb
and
mull
stos
add
popf
insl
jmp
mov
push
adc
cs
xchg
push
mov
scas
movsl
push
cltd
inc
bound
std
das
xor
cmp
decb
inc
ficompl
jp
es
aaa
fsubrl
sbb
sub
push
inc
adc
mov
gs
pop
sti
adc
push
adc
mov
lret
jno
daa
cld
lret
inc
rorb
repnz
movsl
cld
imul
ss
inc
in
push
cmpsl
adc
push
and
lret
rcrb
xchg
test
out
call
nop
in
iret
add
mov
mov
fcmove
mov
sub
inc
fdivl
inc
test
les
addr16
mulb
pop
mov
dec
lea
cwtl
jmp
in
aas
ljmp
inc
lahf
movsb
es
imul
cmpsl
cmp
repnz
sarb
mov
mov
push
xor
sub
aam
adc
push
repz
push
sub
mov
fisttpll
mov
clc
neg
loop
adc
mov
add
pop
fld
pop
aaa
add
pop
sub
test
cltd
adc
add
cld
loope
sarb
sbb
cmp
xor
xor
pop
inc
pop
inc
and
mov
outsb
stos
push
fbstp
pop
pusha
mov
sarb
push
jge
jg
and
fiadds
mov
dec
in
jae
mov
inc
ret
adc
or
jae
repz
iret
cmc
inc
clc
mov
push
mov
xor
lods
push
cmp
arpl
leave
lret
in
lret
cmp
push
roll
rcrl
test
jecxz
push
sbb
mov
mov
mov
fwait
mov
push
xor
out
in
hlt
cmp
mov
lock
add
cmp
inc
ret
xchg
andb
aad
hlt
cltd
rorl
sbb
mov
inc
out
pop
mov
pop
test
in
pop
pop
fstps
sti
out
xchg
mov
lcall
iret
fnsave
mov
mov
lds
push
ljmp
out
gs
dec
pop
mov
xor
sahf
in
dec
adc
lods
gs
cmpsl
push
imul
rclb
in
mov
loop
mov
push
inc
push
test
push
inc
fdivrp
sub
test
pop
sbb
scas
lods
sbb
idivl
cwtl
jmp
push
pop
adc
fcompl
mov
pushf
aam
and
inc
or
repz
rorl
dec
adc
fmull
jno
or
stos
orb
mov
dec
push
out
pop
into
dec
fadd
xchg
outsb
inc
and
imul
mov
shlb
inc
std
out
in
mov
fisubrs
in
xor
ret
enter
imul
movsb
stc
mov
mov
adc
nop
mov
mov
pusha
xor
sub
xchg
xchg
orb
xchg
scas
rol
xchg
jns
in
push
push
mov
cmpsb
mov
sbb
or
imul
movsl
das
sub
jp
sahf
xor
push
stos
jl
fsubl
pop
push
and
xor
or
xor
and
lods
ljmp
push
lret
leave
rcll
push
test
inc
out
sbb
fildll
mov
mov
cmpl
mov
or
outsb
dec
and
and
movsb
js
mov
loopne
mov
or
dec
xchg
mov
scas
add
xchg
lods
xor
push
jl
out
out
js
sahf
adc
pop
inc
iret
push
sbb
dec
or
in
dec
out
movsl
cmpsl
xor
jecxz
xchg
and
jnp
jmp
push
iret
ret
sbbb
xchg
xchg
leave
adc
cltd
and
mov
pop
daa
mov
ror
fildl
scas
sti
push
mov
mov
jmp
jecxz
out
sbb
gs
sub
sbbb
xchg
mov
hlt
xchg
pusha
loopne
jl
loopw
andb
sub
jle
fs
mov
repz
mov
dec
xor
inc
in
arpl
push
movsl
xlat
mov
sub
pop
and
push
inc
sub
dec
arpl
xchg
add
add
jle
bound
loope
std
cmc
mov
ja
xor
dec
jne
push
xchg
mov
mov
sub
ds
push
dec
fisttpl
jns
repz
lods
fwait
dec
jg
mov
sub
jmp
push
pop
inc
pop
sti
lods
cmp
aaa
rolb
push
div
sbb
xchg
push
sti
sub
das
ss
cmp
nop
push
adc
dec
pop
and
push
les
jp
test
push
or
add
insb
adc
test
stos
test
mov
xchg
and
hlt
js
sub
or
add
inc
xor
lods
or
stos
jnp
sub
mov
dec
jnp
outsl
jno
jecxz
inc
jns
insb
imul
nop
sub
sysret
mov
xchg
add
jno
cltd
out
pop
stos
pop
mov
fidivs
addr16
pop
mov
repz
mov
rcrl
inc
jne
jmp
mov
je
inc
ljmp
dec
dec
jge
shlb
incl
push
cli
flds
jo
ja
int
xor
mov
adc
shrb
sbb
in
mov
loopne
mov
addr16
push
dec
hlt
test
xchg
jno
leave
fists
out
xor
xor
cmpsl
mov
les
sub
hlt
adc
out
rcrl
push
cmp
lods
mov
mov
mov
sahf
shll
loope
and
inc
stos
addr16
call
mov
sub
xchg
vmread
data16
dec
dec
mov
in
mov
imul
icebp
lods
fcmovb
repnz
std
loope
pop
cmp
and
lcall
movsl
push
jbe
xchg
mov
fsubrp
dec
and
dec
ss
in
ss
pop
shl
mov
or
jp
ss
xchg
jl
or
data16
pusha
push
and
push
mov
das
cwtl
lods
xchg
cmpl
mov
mov
jecxz
inc
xor
orl
and
push
repz
mov
jge
in
xchg
adc
push
rorb
outsb
pop
scas
mov
loop
xor
stos
xchg
inc
jb
pop
adc
inc
aad
mov
cld
sub
imul
adc
cs
loopne
add
xchg
push
cmpsb
fneni(8087
pop
cmpl
ficompl
in
sbb
jbe
dec
jno
fs
dec
mov
daa
mov
in
dec
pop
scas
jbe
sbb
inc
rcll
inc
sbb
mov
shll
mov
loop
jg
test
into
popf
ljmp
call
fldl
shlb
test
cmp
xchg
lods
hlt
adc
pop
inc
add
icebp
mov
mov
inc
sub
push
popa
dec
sub
shrl
xchg
adc
shlb
les
shl
mov
xor
xchg
imul
icebp
loop
add
dec
sar
clc
fstpt
lods
add
xchg
cmp
inc
fidivl
sbb
fdivrl
fstpl
mov
lds
xchg
fdivs
push
sbb
ja
mov
mov
out
movsl
xchg
repnz
or
es
je
dec
cmp
loope
jle
je
repz
movsb
lahf
push
pop
test
adc
stos
pop
clc
sub
sbb
daa
xchg
es
lods
jns
sub
sbb
push
arpl
jo
aad
rcl
inc
test
mov
rcll
and
pop
leave
cmpsb
fs
mov
xchg
shl
add
in
or
dec
sbb
push
rclb
mov
jnp
inc
inc
mov
mov
nop
pop
lods
testl
mov
cmp
jb
test
sub
xchg
andl
pop
xchg
mov
pop
or
cld
dec
push
xlat
fldcw
lret
popf
mov
or
hlt
mov
mov
je
and
add
sbb
sbb
mov
xlat
mov
pop
imul
outsb
or
les
dec
gs
lock
push
scas
test
dec
mov
inc
movsl
cmpsl
lcall
inc
adc
xchg
jo
test
mov
xchg
lea
mov
test
movsbl
pop
inc
sbb
imul
inc
scas
bound
scas
stc
dec
cmp
sub
jmp
nop
sti
xchg
fildll
pmulhuw
mov
adc
inc
in
sub
es
xor
notb
add
xchg
popf
dec
ja
xchg
push
mov
aam
test
add
orl
fldl
fmuls
enter
pop
aad
xchg
insl
dec
sbb
adc
mov
cltd
shll
pop
data16
test
loope
ss
pop
push
rcr
mov
lret
pop
out
adc
add
pop
inc
or
iret
scas
and
icebp
hlt
dec
xor
sahf
inc
je
ja
adc
inc
push
pop
cmpsb
push
cmp
jl
add
lahf
xchg
jno
data16
scas
xor
xchg
push
cwtl
in
pop
sahf
add
stc
jae
pop
cs
test
mov
xchg
mov
test
xor
fidivrl
or
fs
test
push
sbb
mov
add
mov
popa
mov
xchg
mov
pop
xor
into
fistpll
jmp
rcll
cmp
cmp
in
std
cmpsl
xchg
dec
fsubs
xor
cli
sub
test
test
cmp
in
push
mov
lods
ret
insb
or
aam
ret
inc
outsl
outsl
pop
mov
cltd
push
bound
les
jb
mov
leave
data16
inc
xchg
scas
add
pop
cli
inc
lret
mov
stc
sub
dec
mov
mov
aam
cmpsb
sbb
mov
in
mov
jmp
cmp
dec
movsl
fmuls
ss
test
cltd
js
jl
fs
imul
inc
sub
push
ds
cs
sub
jmp
ret
scas
pop
fisubl
xchg
and
adc
mov
test
mov
mov
rcll
addr16
rcrl
push
hlt
or
cli
pop
mov
add
cmpsb
mov
mov
fisttps
or
lret
mov
sbb
mov
sub
sbb
sub
popa
cmp
adc
outsl
out
shrb
dec
mov
mov
push
xchg
pop
sub
or
jae
pushf
dec
fisubrs
scas
icebp
pmaddwd
test
stos
movsl
push
inc
mov
mov
sub
std
scas
xor
mov
aad
cmpsb
or
adc
and
xor
dec
mov
lock
inc
arpl
push
cvtps2pd
shlb
inc
sbb
test
sub
pop
loop
mov
mov
rcll
or
cmpl
int3
repz
mov
xor
pop
or
nop
mov
nop
mov
or
add
inc
ss
jmp
push
xchg
jbe
mov
push
mov
sub
mov
xor
fmuls
data16
xor
xchg
mov
lods
data16
les
and
fucom
push
sbb
rcl
push
push
fistpl
mov
mov
cmp
adc
mov
xor
pop
movsw
xchg
fsubrp
ljmp
out
loope
inc
sub
cmp
ret
push
fcmovnbe
into
mov
loop
adc
adc
scas
jmp
adc
pop
shll
jg
cmp
out
xlat
loope
loopne,pt
divl
dec
mov
out
mul
dec
pop
lock
lcall
fnstcw
sbbb
insb
pop
aam
xor
daa
add
push
jl
push
sbb
mov
push
clc
mov
or
mov
pop
inc
push
dec
xchg
dec
mov
and
push
jecxz
inc
pop
pop
mov
cmc
mov
shrl
fldt
xor
add
shrb
sbb
es
jnp,pn
jnp
mov
sbbl
out
in
repnz
scas
out
lods
mov
scas
xchg
aad
pop
ja
jno
or
call
ret
xchg
adc
rol
sbb
xchg
sbb
push
test
es
scas
push
mov
in
sub
and
shll
movsl
enter
popf
jl
sahf
lret
jae
fisttps
cmp
iret
lcall
cltd
int3
and
jo
movl
or
inc
cmpsb
dec
and
add
push
cmpsl
fists
mov
jge
mov
es
mov
std
in
or
fisttpll
add
sbb
bound
aam
lret
mov
xor
jo
imull
pop
adc
daa
pusha
or
das
test
mov
inc
les
sub
xchg
outsb
mov
outsb
pop
fsubr
inc
cld
push
mov
inc
fcompl
pop
or
pop
pop
jns
push
inc
leave
bts
mov
jbe
mov
fsubrl
fiaddl
cs
jne
cmp
js
pop
dec
pop
inc
je
sbb
and
and
or
pop
xor
lea
mov
mov
out
mov
xchg
stos
inc
int3
stos
pop
dec
cmp
cmp
leave
rolb
inc
je
stos
lret
or
add
and
dec
in
div
xchg
mov
sbb
ror
jns
shrb
out
and
in
jle
dec
jnp
mov
inc
sub
mull
push
push
cld
adc
shlb
or
sbb
shr
mov
or
push
test
add
xchg
sbb
dec
add
dec
jbe
int3
inc
or
in
fs
gs
xor
cs
insb
jmp
fisttps
outsb
mov
les
scas
and
cmp
jmp
ds
cld
xchg
xchg
push
mov
mov
or
xchg
and
shlb
sub
scas
das
pop
ds
shl
or
xor
movsb
dec
daa
into
mov
xor
or
cmpsl
lds
mov
shrl
inc
arpl
mov
sbb
stc
mov
or
pop
outsl
dec
pop
ret
sub
imul
mov
jg
mov
sar
lcall
mov
sarl
mov
jns
sub
jmp
mov
sbb
jmp
fs
fisubrl
cmpsb
dec
or
in
inc
outsl
mov
notl
cmpsb
std
inc
cmp
std
les
rorb
lds
test
push
mov
push
pop
xchg
adc
xor
out
sti
cmp
mov
cmp
cmpsb
icebp
mov
pop
jmp
or
or
jbe
pop
aam
ljmp
lret
sub
outsb
add
ljmp
in
in
es
mov
or
pop
movsb
popf
iret
rorl
fwait
repnz
cwtl
push
push
cmpb
pop
repnz
jecxz
scas
xor
ljmp
mov
or
fldl2t
pop
rcl
mov
xchg
push
ljmp
repz
ja
add
pushf
sbb
sbb
iret
sub
mov
int
lret
sub
pushf
xchg
pop
adc
aaa
push
shll
sub
and
leave
sub
testl
imul
insb
or
rcll
mov
loop
jmp
jecxz
test
jno
xchg
push
pop
cmpsb
mov
repnz
mov
int
js
addl
popf
in
mov
cmp
xlat
es
les
cmpsl
jnp
mov
ja
push
jp
mov
jnp
add
push
xchg
scas
mov
fisttpl
lds
out
mov
cs
test
sub
mov
gs
andl
jl
outsb
orl
outsl
sub
loopne
mov
fsubrl
xchg
jg
lahf
ret
iret
mov
xchg
test
xlat
sbb
push
dec
addb
xlat
sti
repz
xchg
mov
es
pop
lret
inc
into
jle
lods
cmp
add
loopne
mov
out
test
cmc
jns
sbb
dec
mov
dec
mov
pop
push
pop
adc
adc
xchg
mov
imul
loop
push
sbb
lcall
adc
ss
dec
sar
lods
add
push
push
aad
mov
cmovle
inc
pop
mov
pop
and
add
cmpb
jbe
out
sbb
jne
ss
jp
xlat
btc
ljmp
iret
push
add
lds
jl
gs
dec
outsl
subl
jp
into
lahf
adc
xchg
leave
and
in
push
stos
adc
pop
rcll
or
pop
and
and
mov
push
inc
xchg
addr16
pop
fnstcw
adc
push
xchg
push
mov
stos
insb
outsl
inc
pop
and
mov
imul
mov
imulb
jecxz
sbb
rcr
js
inc
pop
mov
nop
jnp
pop
lock
imul
xor
sbb
sbb
sbb
aas
fs
pop
pop
or
js
push
push
xchg
fcos
fdivr
jb
fldcw
and
pop
cmp
das
loop
pusha
mov
fwait
and
mov
cmp
lods
out
pop
cmp
fucomip
mov
aam
std
ja
addr16
jmp
test
and
and
push
pop
sbb
cmp
out
hlt
sub
cmpsl
mov
push
mov
fcoms
mov
mov
adc
xchg
in
jb
dec
jnp
sbb
int3
hlt
sahf
mov
xor
out
popf
mov
mov
fadds
pop
repnz
test
lret
mov
mov
sbb
out
jne
sbb
aas
fcomps
push
mov
mov
adc
test
mov
sbb
pop
inc
call
or
mov
or
mov
xor
cmp
imul
int3
aas
ss
pop
repnz
sbbb
js
dec
mov
and
jp
push
xor
aad
push
pop
cmp
lea
imul
adc
mov
push
bnd
ja
mov
dec
jmp
stc
xchg
and
call
add
cmp
insb
xchg
add
xchg
lahf
inc
stc
inc
hlt
lret
js
or
or
xlat
sub
dec
pop
and
mov
popf
setae
xchg
fadd
arpl
xor
jp
mov
push
jb
xchg
add
sahf
lcall
mov
insb
xchg
imul
sahf
xor
ret
shlb
mov
shll
push
sbb
ljmp
loope
xchg
mov
inc
mov
pop
mov
jmp
bound
pop
dec
fcmovne
jge
nop
jns
data16
insl
cmp
xorl
stc
push
push
mov
stos
cmpsb
test
rcrl
mov
cmpsb
mov
fildl
sbb
cmp
xchg
nop
aam
push
lods
aad
add
jne
pop
fiaddl
inc
and
testb
test
add
mov
daa
push
pop
out
test
shl
sub
loope
rorb
push
cmp
mov
aad
xor
scas
xchg
shr
int
addb
call
int
rolb
pop
fldenv
std
mov
pop
sbbl
in
xlat
jle
gs
xchg
sti
jno
fsubrp
or
adc
mov
pop
lock
adc
xchg
sbb
jg
dec
jo
push
mov
in
ds
jg
or
sub
test
add
call
aaa
int3
jecxz
data16
je
xchg
out
enter
cmp
lods
out
xchg
out
lods
outsb
in
and
test
adc
sahf
xor
nop
xchg
invd
in
cs
mov
xchg
push
xchg
mov
es
popf
mov
pusha
data16
jnp
or
dec
cli
ss
mov
xor
out
andb
xchg
add
movsl
sahf
cmc
inc
cmp
and
push
leave
repz
js
mov
scas
hlt
and
xlat
mov
int
sbb
fiadds
xor
outsl
int3
or
fistpl
in
gs
out
outsb
cld
in
movq
outsb
inc
test
roll
test
cld
xchg
mov
loop
scas
int3
ja
scas
loop
ljmp
mov
mov
out
fldl
rcll
mov
mov
popa
lock
loopne
rolb
sbb
out
insl
adc
pop
stos
daa
add
lods
xchg
push
cmp
or
outsl
mov
movsb
gs
mov
pop
add
fwait
cmp
or
out
mov
xor
dec
insl
inc
xchg
pop
imul
int3
ds
call
and
fsubr
jmp
mov
dec
stc
std
fsubp
test
push
addr16
sbb
addl
xchg
and
adc
mov
notl
jmp
mov
addb
add
movsb
lahf
out
in
das
scas
cmp
adc
cmpsl
call
std
movsl
mov
dec
outsb
xchg
mov
aaa
cwtl
scas
xchg
in
shl
faddl
jg
mov
icebp
pop
jmp
sahf
mov
add
xor
push
std
mov
push
cmpsb
pop
cmp
push
inc
push
cs
cmpb
lahf
cmp
dec
inc
and
pop
mov
imul
test
ret
xchg
andl
sbb
pop
xchg
hlt
gs
into
lods
aaa
pop
fs
inc
lcall
lock
outsl
je
xchg
imul
stc
ficomps
stos
fcomp
lods
pusha
push
test
stos
jae
insb
push
cmp
outsb
jecxz
jp
les
dec
cmpsb
mov
daa
movsl
fidivl
push
js
dec
mov
jo
fdivp
stos
insb
lret
jns
jge
pop
cmpsb
adc
jbe
lea
mov
dec
xchg
loope
stos
lcall
stos
mov
shrl
adc
stos
or
test
mov
ds
jmp
sbb
cwtl
test
insl
xor
push
pop
clc
in
insl
std
add
push
lods
cmp
pop
inc
or
or
xchg
dec
jnp
dec
mov
mov
cmp
cltd
dec
std
inc
jmp
or
popf
push
mov
mov
jno
adc
sbb
sbb
gs
incb
xchg
mov
repz
ja
js
cmc
sti
ljmp
push
mov
add
insl
stos
in
fidivrs
push
ffree
cmpsb
push
int
jmp
sub
add
mov
lret
push
xor
inc
push
nop
add
enter
lret
xchg
inc
pop
shrl
rcr
adc
shrl
push
shlb
mov
inc
outsb
sub
sahf
fucompp
mov
inc
cmp
imul
lret
or
pop
loopne
sbb
pop
dec
lcall
cwtl
fstpt
add
xorl
test
shlb
fisubrl
jnp
adc
pop
mov
dec
cs
dec
repz
fwait
mov
dec
mov
add
inc
push
cmp
jl
jl
movsb
negl
movsb
xchg
push
fsubrl
stc
pusha
test
or
stc
popa
mov
aam
pop
push
jmp
out
mov
mov
lock
movsl
xchg
or
rcrb
stc
sub
push
bound
cmpsl
int3
outsb
movsb
mov
mov
sub
ret
cmp
jg
rolb
mov
insl
enter
cmpsb
cmp
fbld
xor
jecxz
jecxz
xchg
fsubrl
or
test
mov
test
adc
lahf
mov
test
dec
lea
cs
mov
pop
xchg
adc
push
cmpsb
les
stos
jle
or
push
mov
in
imul
es
and
sbb
inc
bound
ja
lcall
pop
pop
xchg
hlt
fiaddl
sbb
push
xchg
pop
sub
or
jae
pushf
dec
fisubrs
scas
icebp
pmaddwd
sub
bound
fnstsw
xchg
add
test
ficompl
pop
push
mov
inc
call
outsb
ljmp
mov
loope
icebp
sub
inc
cmp
je
sbb
mov
mov
push
mov
inc
test
lods
bndldx
sub
pop
insl
xor
jmp
les
add
jmp
popa
mov
imul
push
mov
lcall
mov
sarb
movsb
jmp
inc
mov
cmpsb
movsb
lods
inc
or
mov
or
mov
pop
mov
jge
xchg
push
push
outsb
add
lea
add
mov
sahf
push
pop
push
dec
mov
sbb
dec
jns
cld
xchg
fidivs
iret
scas
mov
mov
jbe
mov
adc
cld
jae
xor
xor
jae
ficomps
xchg
ss
test
add
rcrb
sub
xor
fdivrs
movsb
jno
fs
adc
loop
stos
aam
leave
mov
cli
idivl
sarb
push
sarl
jo
outsb
idivb
jl
pop
or
sbb
dec
adc
test
cmp
jbe
sbb
div
shlb
and
add
jecxz
mov
das
sub
mov
das
ret
insl
stos
xor
xchg
jae
push
mov
les
sub
stos
dec
mov
sbb
xchg
jno
dec
mov
mov
stos
xchg
dec
fiaddl
jae
lea
xchg
nop
sub
push
fldenv
xchg
jo
cs
std
lcall
adcl
sub
mov
xchg
cli
nop
out
push
or
push
mov
sub
mov
or
jno
negl
test
sbbl
sbb
push
test
sti
lods
pop
lds
push
or
shll
movsl
enter
popa
xor
sbb
movl
fdivl
push
mov
push
in
cmc
cmp
pop
flds
scas
arpl
and
mov
and
outsb
pusha
mov
out
lods
ret
mov
adc
movsl
lret
xorb
or
add
mov
in
pop
out
je
xor
call
popa
or
fstpl
pop
mov
outsl
je
pop
push
dec
inc
imul
pop
inc
jbe
cmpsb
arpl
das
dec
or
rcrl
push
jne
fcompl
mov
into
js
jl
scas
mov
out
loope
or
jl
mov
lcall
notb
jmp
insb
xchg
cmp
fcoms
cltd
push
lahf
test
fcoml
leave
es
xor
xchg
mov
jo
pusha
out
or
pop
xor
or
mov
adc
sarl
pusha
pop
jmp
xor
in
out
and
fbstp
mov
push
adc
or
inc
or
inc
scas
loop
cmpsl
jb
cmp
sub
popa
cmp
shrb
and
in
stos
cltd
cwtl
imul
mov
aam
in
mov
jl
xchg
popf
ja
movsb
shlb
push
adc
jmp
inc
or
pop
mov
shrb
add
loopne
sub
leave
xchg
jb
mov
or
out
mov
pop
push
lods
jb
push
add
clc
in
psubw
xchg
mov
or
dec
jno
movsb
mov
or
inc
fisubrl
hlt
lods
mov
repz
cmpl
movsl
sub
js
fidivl
ret
xor
nop
inc
mov
jmp
subl
enter
push
fsts
adc
jp
adc
xor
je
cltd
sbb
lahf
mov
lcall
or
arpl
mov
mov
outsb
lods
lds
icebp
adc
fistpl
jp
leave
fs
mov
repnz
jl
adc
adc
fldt
jmp
pop
and
push
int
push
mov
mov
xchg
cmpsl
fisubrs
sbb
xor
xchg
add
outsb
mov
and
dec
aaa
outsb
mov
push
cmp
or
jecxz
sbb
rclb
mov
test
fldt
mov
sub
cli
imul
std
xor
lea
cmpsl
and
dec
mov
daa
cltd
stos
dec
sbb
idiv
push
popa
bound
mov
out
pop
inc
sbb
cli
pop
ret
fwait
leave
mov
mov
and
pop
push
gs
jns
xor
imul
xchg
sub
mull
rolb
std
push
cmp
lods
fldl
inc
sarl
loop
popa
mov
arpl
scas
sbb
lret
lahf
mov
jne
dec
push
inc
lock
pop
jmp
jle
je
shr
dec
pop
pop
popa
mov
ret
aas
sub
adc
adc
out
sub
mov
xor
jne
test
mov
jle
mov
dec
push
adc
add
xchg
lods
sahf
scas
inc
icebp
cmpsb
popf
pop
mov
repnz
and
arpl
add
or
xor
mov
lret
es
inc
dec
test
or
movsl
xchg
or
shr
cld
ss
addl
jle
in
mov
jae
data16
call
daa
movb
sbb
mov
xor
outsb
shr
sub
filds
cli
out
arpl
subb
hlt
aam
push
scas
lods
jl
fistpl
add
sbb
mov
call
cli
fidivrl
dec
popa
mov
lods
cmpsl
jbe
jp
aaa
xchg
repnz
lods
and
cmpsl
sbb
lcall
pop
movsl
jbe
in
subl
push
lret
mov
subb
imul
jmp
lret
pop
std
out
in
addr16
sub
pushf
outsl
outsl
loop
xchg
lahf
ds
dec
lock
call
lea
cld
mov
xor
nop
rep
jmp
jecxz
call
shr
or
add
jmp
xor
mov
pusha
call
sub
jmp
or
jmp
xor
jmp
or
shr
sbbl
popf
jmp
mov
add
jmp
je
pusha
call
sub
jmp
or
jmp
xor
jmp
or
movsl
mov
add
pusha
call
shr
or
add
jmp
xor
mov
jmp
jecxz
call
shr
or
add
jmp
xor
cmp
jmp
sbbl
popf
jmp
mov
add
jmp
je
pusha
call
sub
jmp
or
jmp
xor
jmp
or
test
jecxz
call
shr
or
add
jmp
xor
jmp
xor
mov
jmp
jecxz
call
shr
or
add
jmp
xor
mov
jmp
jecxz
call
shr
or
add
jmp
xor
mov
jmp
sbbl
popf
jmp
mov
add
jmp
mov
jmp
jecxz
call
shr
or
add
jmp
xor
mov
jmp
sbbl
popf
jmp
mov
add
jmp
mov
jmp
jecxz
call
shr
or
add
jmp
xor
nop
ret
push
call
add
add
add
inc
add
rorb
add
mov
add
add
add
add
add
add
add
add
or
push
or
push
popf
or
js
or
mov
or
scas
popf
or
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
cs
dec
dec
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
popa
fs
imul
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
.byte
xchg
