shlb
mov
popf
in
add
xor
addr16
mov
daa
cmp
jp
push
xchg
or
sti
insl
adc
and
mov
cmpsl
je
arpl
adc
insb
lods
xorb
fildll
and
inc
mov
adc
add
out
loopne
out
mov
mov
lret
je
ret
ljmp
pop
ret
push
aaa
jae
cltd
mov
cli
fistps
pushw
sub
and
or
sbbl
test
and
fimuls
mov
inc
fsubs
add
icebp
push
aam
xchg
cwtl
jle
das
mov
inc
push
testb
pop
push
inc
add
das
imul
lret
mov
xor
inc
sub
bound
xchg
dec
mov
xchg
and
mov
hlt
fucomip
arpl
lret
aam
insb
lcall
push
fistpll
mov
stos
xchg
jle
loope
sbb
repnz
aad
out
hlt
rolb
sbb
das
outsl
stos
sbb
dec
push
jae
enter
or
mov
mov
jmp
cwtl
lahf
in
sub
xchg
aas
fdivl
lret
lret
mov
leave
push
mov
cmp
fisubrs
lret
lret
leave
xchg
test
mov
or
fs
int
outsl
jbe
test
sete
push
fists
int3
outsl
loopne
pop
xor
xor
add
or
mov
dec
xchg
inc
mov
cmpsb
cmp
xchg
in
jnp
inc
xor
cmpsb
test
add
push
add
jg
in
adc
lret
filds
test
pusha
mov
sub
scas
hlt
push
test
cmc
inc
repnz
inc
mov
insb
lcall
outsl
xchg
adcl
xor
sbb
dec
dec
test
jge
push
mov
and
fstl
shll
js
mov
popw
mov
sbb
dec
adc
inc
sub
cmp
cmc
adc
xor
rol
mov
sbb
insl
pushf
outsl
pop
addl
adc
loopne
cli
cmpsl
icebp
or
add
les
add
fdivl
outsb
stos
cwtl
into
push
lcall
out
cmp
push
mov
or
add
inc
repnz
pop
and
mov
test
xor
test
les
rol
mov
clc
add
add
adc
ljmp
jl
mov
lds
mov
sub
cmc
imul
jp
push
adc
mov
jmp
sbb
or
or
cmp
xchg
dec
push
fchs
ret
adc
popa
mov
push
stos
arpl
xchg
sub
sbb
pop
mov
clc
inc
pop
fsub
sbb
outsb
notl
adc
js
test
dec
icebp
push
into
scas
or
fstps
mov
and
mov
jge
add
lahf
and
cmp
ljmp
loopne
hlt
inc
inc
jl
out
cmp
and
mov
orl
adc
mov
lds
pop
in
push
sar
cmp
sub
mov
je
fs
je
mov
push
test
lahf
lret
add
add
pop
lahf
mov
sbb
in
pop
arpl
sub
xchg
jnp
fwait
cmc
xor
xchg
or
jbe
xlat
dec
dec
fsubs
sub
fisttpl
inc
repnz
mov
xor
xor
cltd
lahf
add
sub
mov
mov
into
mov
out
inc
out
inc
fsts
inc
loope
das
scas
inc
stc
xchg
add
cld
ja
inc
aas
sbb
rcrl
add
imul
rcrb
xchg
mov
leave
inc
mov
lea
mov
pushf
inc
sub
sbb
adc
movsb
cmp
cmp
ss
or
sbb
test
mov
xlat
outsl
mov
popf
insb
iret
lret
push
loope
adc
pop
stos
push
jo
and
insb
fs
cmp
sarb
cmpsl
ficomps
pop
pop
mov
in
or
cmp
inc
call
jno
lret
add
xchg
add
push
or
pushf
jae
les
inc
fs
sub
pop
xor
add
adc
adc
jbe
idivl
cltd
jg
movsl
mov
jae
data16
adc
popl
bndstx
pop
in
pop
shrb
xor
jns
sbb
lahf
fucomp
mov
jp
iret
xchg
int3
bound
hlt
lret
in
add
dec
xchg
mov
or
push
cmp
sub
pop
bound
or
mov
pop
push
packsswb
fldt
fcomi
cmc
jns
repz
add
dec
adc
outsb
sub
scas
push
xchg
cli
or
inc
jg
rcll
lahf
inc
outsb
jmp
imul
cmp
or
xchg
je
test
jb
mov
das
sbb
xacquire
ret
xchg
out
add
cmp
lahf
lock
cmp
add
dec
or
nop
and
ds
push
out
sbb
out
inc
jno
sbb
inc
fnsave
insb
add
sbb
outsl
mov
in
lods
jge
xchg
inc
jno
mov
fildl
stos
sbb
jecxz
fsubs
das
popa
es
mov
iret
loope
mov
xchg
pop
jp
inc
sbb
mov
clc
push
sbb
idivl
mov
out
pop
cmc
sarb
andl
ja
xor
sub
sub
jne
adc
cli
xchg
pushf
adc
jne
lret
sbbl
nop
push
inc
lcall
pop
add
repnz
fs
rcrb
je
cli
addr16
sbb
xchg
and
dec
adc
cmp
push
lea
mov
and
or
dec
mov
jp
daa
filds
arpl
aad
scas
xor
push
pusha
pop
dec
cmp
mov
push
addr16
shrl
cmp
or
movsl
in
clc
aas
xchg
fsubs
or
enter
ljmp
jb
or
jecxz
push
and
ret
popf
pop
mov
int3
mov
jl
cmpsb
imul
jge
pop
add
inc
sub
inc
pop
pop
jb
sbb
mov
and
sahf
pop
lahf
mov
pusha
cld
push
insl
jne
sbb
addr16
push
imul
cmp
pushf
jp
mov
popa
sub
cwtl
jecxz
and
leave
jg
in
push
sti
cmc
scas
cmp
jge
dec
xchg
inc
add
dec
in
mov
mov
jno
xchg
add
mov
mov
ret
rorl
push
outsl
or
sub
pop
jl
push
pop
cmpsb
mov
lret
fldenv
xchg
sarl
insb
cld
or
popa
int3
mov
push
pop
lea
out
dec
dec
sub
inc
stos
mov
push
xchg
ret
mov
adc
push
icebp
mov
mov
fiaddl
sbb
pusha
jecxz
xchg
sub
ja
in
jbe
dec
bnd
stos
jp
shll
fistpll
scas
mov
pop
sub
xor
push
add
sbb
out
mov
aad
fdivrs
fs
sbb
fisubs
test
movsb
xchg
addr16
push
sub
cs
in
bound
push
cli
add
cmp
mov
shl
fldl2e
mov
rcl
in
loopne
push
xchg
pushf
pop
xchg
xchg
mov
cmp
sub
push
sub
pop
inc
fsubrs
sub
xor
push
mov
mov
dec
add
dec
xchg
xchg
imul
adc
test
ficoms
sub
mov
xor
pusha
jns
in
jbe
fsubrs
es
ret
mov
and
xlat
enter
les
mov
mov
inc
lods
movsb
mov
xor
lods
cmp
mov
pop
xor
fnsave
pop
mov
scas
add
fsubs
ljmp
mov
xchg
out
mov
jecxz
jg
out
scas
push
adc
fiadds
lods
addr16
into
insl
into
pop
in
mov
vpcomuq
push
sbb
mov
push
in
mov
cmp
mov
sarb
cs
imul
je
popa
add
popa
js
ds
lods
jge
jb
mov
in
int
in
adc
popf
divl
shl
aaa
cmp
out
fildll
adc
and
dec
jmp
cmp
fcmove
lret
dec
test
js
nop
je
fs
movsl
mov
xchg
adc
cmp
lahf
aaa
pop
jmp
sbb
out
sbbl
mov
dec
mov
call
push
imul
jne
hlt
push
imulb
cmp
pop
leave
ficoml
stos
mov
jae
dec
mov
data16
iret
xchg
cmp
dec
xchg
jb
gs
daa
repnz
ficomps
push
cmp
mov
and
push
mov
or
jns
mov
lret
rcll
aaa
jb
adc
pop
add
mov
fildl
xchg
xchg
popf
mov
jle
dec
jo
fwait
test
addl
sbb
mov
and
les
mov
sub
frstor
outsl
stos
jp
push
mov
push
fwait
xchg
jne
into
add
mov
scas
mov
mov
das
fbstp
jecxz
push
enter
xor
mov
out
mov
test
inc
mov
pop
pop
push
dec
ss
xchg
mov
sub
adc
icebp
int3
sub
cmp
jle
pop
test
test
mov
insl
sarl
cmp
pop
je
fsubl
or
stos
repnz
out
ljmp
sahf
xlat
sub
lret
dec
jae
pop
jle
aaa
jbe
stos
sbb
and
adc
int
enter
test
mov
mov
arpl
sbb
test
iret
lods
mov
int
enter
sub
xor
ljmp
out
pop
pushf
push
mov
stc
data16
pop
in
stc
cli
adc
xchg
cmp
mov
xor
clc
sahf
shr
mov
dec
sub
pusha
cmp
jge
insl
jns
fwait
clc
cmc
mov
cmpsl
repnz
dec
decl
adc
divl
or
pslld
sub
jle
cmpsl
scas
les
push
adc
or
lods
push
push
jmp
scas
pop
cltd
mov
sbb
int
push
mov
xor
cmp
mov
jns
fidivrl
aaa
rcrl
fmuls
sub
inc
lods
dec
decl
or
mov
jo
das
xor
fiadds
sbb
lcall
dec
and
cmpsb
mov
in
ss
adc
rcr
mov
lahf
test
or
and
mov
es
jno
jl
xor
rcll
std
movsl
leave
fmull
mov
xchg
lahf
shrl
xchg
xchg
push
push
dec
pop
push
jo
outsb
add
call
lret
lock
psubd
sbb
lods
or
addl
gs
int3
stos
ret
dec
xor
inc
sbb
pop
sub
jbe
pop
int
adc
insb
mull
sti
add
jle
leave
fndisi(8087
cmp
outsl
imul
sbbb
xchg
adc
hlt
adc
test
fcompl
fstpl
test
dec
and
mov
xchg
das
dec
and
sub
cmp
pop
xorl
test
pusha
stos
leave
sbb
pusha
das
ret
pop
movsb
cmpsb
repz
xchg
dec
mov
mov
loopne
shlb
in
pop
sahf
mov
xor
push
jg
ja
dec
leave
mov
cmp
push
ret
pop
xor
out
dec
cmp
fcomip
ja
ret
sub
imull
loop
scas
jp
popa
or
pop
cmp
stos
mov
mov
lds
add
lods
push
push
jle
pop
arpl
push
pop
add
dec
adc
cmpl
xchg
ds
mov
gs
adc
loope
aad
mov
pop
fninit
xor
rorl
cmp
dec
ss
adc
lea
movsb
je
jmp
stos
jmp
lret
push
xor
out
loopne
adc
or
ss
fs
push
xor
sti
addr16
pop
mov
jbe
lret
lret
adc
and
or
cmp
ret
in
stos
mov
and
inc
imulb
inc
scas
jno
in
gs
push
add
dec
ficompl
adc
in
jge
test
fiaddl
push
je
idivb
stos
adc
sbbb
jae
jne
shlb
xor
int3
aad
mov
in
dec
pop
cmp
jbe
mov
xor
add
or
ds
into
fldcw
adc
or
jb
jp
roll
in
fiaddl
loop
mov
mov
cmp
jae
out
or
ss
and
sti
into
adc
push
daa
rcrl
nop
inc
jne
cmpsb
ss
mov
xchg
adc
int
and
pop
xchg
stos
xor
cli
inc
xorb
sbb
adc
int
out
or
xlat
pop
icebp
insl
xchg
movsb
inc
in
or
sbb
les
test
dec
rcll
mov
pop
mov
or
pop
mov
sahf
xor
xorl
negb
add
cmp
int3
cmp
aaa
out
in
mov
add
hlt
and
dec
xlat
adc
inc
push
insl
pushf
sub
imul
stos
and
fscale
add
mov
je
mov
jp
aas
sbb
sub
jmp
insb
mov
in
or
in
cs
leave
pop
loopne
int3
sbb
movsb
shlb
add
rcrl
push
push
mov
and
mov
mov
mov
arpl
ds
loope
je
sar
or
and
dec
scas
movsl
push
jbe
fs
aaa
mov
push
scas
push
sub
in
test
outsb
loop
pop
int3
lds
shlb
fwait
test
popf
fnstenv
shl
push
push
stos
inc
cmp
ds
pop
adc
mov
sub
aad
jge
sbb
icebp
inc
add
loopne
movsb
xchg
push
jl
pop
or
pop
aas
xor
mov
xor
or
cli
or
xchg
jbe
iret
adc
aad
aam
lcall
mov
shl
xlat
xor
mov
into
ds
inc
jecxz
jb
fs
and
jg
mov
and
mov
sub
nop
cmp
jnp
mov
inc
and
add
mov
jno
outsb
fiaddl
negl
jns
sbb
popf
ret
pop
insl
mov
hlt
xor
daa
aaa
mov
push
pop
add
sbb
repnz
icebp
lret
addr16
cmpb
out
mov
cmpsl
xchg
inc
ss
outsl
pop
ja
ljmp
stos
push
loopne
test
test
aam
shlb
push
push
pop
movsl
jne
mov
je
cmp
insl
icebp
and
rcr
out
aas
call
pushf
xorl
cmp
not
rcrb
je
xor
call
dec
inc
filds
lods
out
pop
xchg
lods
mov
push
rolb
pop
js
cld
out
inc
loop
adc
mov
cmc
addr16
mov
fwait
sbb
pop
loop
adc
sub
fisttpll
pop
mov
dec
mov
rolb
insl
pop
mov
mov
std
movsl
testl
mov
pop
cmc
loopne
push
fdivl
pop
int3
add
push
inc
adc
addr16
sti
mov
add
cmp
addl
fldenv
std
push
push
mov
sub
push
pop
cmp
icebp
push
pop
and
loop
dec
lods
xchg
and
and
test
out
rol
popf
add
mov
sub
cltd
sbb
movsb
add
xor
fld1
or
cmp
adc
sbb
sbb
sti
fcoms
adc
mov
xchg
ss
jmp
push
add
mov
in
fimull
shll
mov
pushw
xchg
outsl
ja
push
ret
sbb
aad
xor
lods
shll
inc
mov
mov
mov
xchg
jle
jl
movsb
gs
push
dec
push
ds
popf
gs
imul
push
movsb
adc
jg
add
mov
jp
jnp
test
pusha
ret
push
in
jae
mov
jp
aaa
mov
xchg
jecxz
dec
xor
dec
pop
in
rclb
iret
out
or
int
notb
or
std
xchg
stos
insb
pop
jp
rcrb
inc
push
loop,pt
fildl
or
jae
addr16
jbe
rep
sub
cld
cmc
test
jl
rcll
jae
insl
push
ficoml
sub
cwtl
cmpsb
pop
xor
leave
sbb
jl
in
xchg
inc
movsb
outsl
leave
mov
mov
mov
dec
jle
push
fs
dec
es
or
aas
inc
outsl
cwtl
inc
xchg
dec
hlt
fsubrl
sbb
das
add
cltd
aad
inc
dec
jg
pushf
jecxz
and
mov
xor
lods
or
and
aam
out
andb
sarl
push
add
mov
push
xchg
push
call
movsl
xor
pop
mov
mov
inc
mov
pop
outsl
mov
clc
push
nop
pop
sbb
lds
or
jns
cltd
aam
aas
in
sub
addr16
cltd
dec
jge
insb
mov
or
je
sahf
adc
jo
rorb
in
mov
adc
stos
jmp
jae
popa
jb
ja
fs
jno
pop
cmpsl
xor
mov
mov
cmp
mov
mov
and
divb
jne
popa
xlat
xchg
adc
push
xor
lahf
in
dec
std
test
jmp
js
xor
ret
mov
push
sbb
idiv
cs
wbinvd
lods
sbb
mov
test
add
pop
pop
mov
jb
adc
aad
sbb
ret
mov
int3
or
fsubs
test
add
mov
mov
mov
sbb
dec
mov
orb
fs
fisttpll
sub
je
cli
cmp
push
movsl
mov
dec
cmp
sti
aam
clc
cmp
jns
imull
jp
test
test
lret
add
mov
arpl
sub
xlat
and
jne
in
jg
xlat
xchg
push
loope
xchg
lahf
out
cmpsb
and
scas
mov
lods
repnz
cltd
xor
mov
fidivrl
int3
test
in
loop
xor
cmpsb
adc
arpl
aas
repz
sbb
test
ljmp
mov
repnz
out
bound
and
mov
loope
inc
daa
ja
cmp
roll
mov
stos
fwait
mov
cwtl
inc
pop
data16
cwtl
xor
pushf
fsubrl
rdtsc
sbb
into
subl
xor
jbe
sbb
mov
mov
rorl
loop
xchg
push
adc
dec
test
adc
ljmp
sbb
xchg
inc
test
pusha
mov
xlat
arpl
inc
popf
cli
jl
push
and
cmp
in
and
imul
rclb
data16
inc
std
shl
ret
sub
adc
xor
add
mov
les
dec
add
xchg
stos
pop
push
imul
cmp
pop
push
mov
out
dec
and
inc
and
cs
in
mov
js
data16
jle
xor
xchg
cmp
xor
add
lods
xchg
or
pusha
mulb
xlat
lcall
loop
data16
testl
pop
xor
add
lods
inc
pop
paddw
pop
fucomi
sub
lret
popa
sbb
jmp
or
push
or
lcall
inc
mov
mov
sbb
mov
mov
faddp
cmpsl
and
mov
cmp
hlt
push
sbb
loope
or
sbb
and
out
cmp
icebp
lods
shll
idivl
jb
stos
pop
add
mov
push
mov
mov
stos
repz
xor
inc
test
adcb
mov
hlt
pushf
cmp
jl
das
out
dec
mov
cmc
push
pop
ljmp
jbe
jl
imul
xor
cwtl
dec
js
and
xchg
loop
sub
loop
lret
movsl
or
or
jbe
mov
std
stos
or
pushf
dec
jne
push
imul
scas
jge
aas
in
xlat
je
rolb
sbb
sbb
int
add
sbb
lods
sahf
pushf
into
cmp
mov
or
adc
cmpsb
ror
in
or
jo
xchg
aam
mov
mov
inc
xlat
cli
xchg
leave
gs
sbb
xchg
jnp
push
insl
mov
pop
add
sbb
das
test
xor
add
inc
lret
stos
sbb
mov
aam
or
jne
lods
push
imulb
push
jb
inc
int3
flds
imul
gs
cld
sub
das
data16
xor
add
pop
stc
push
int
xlat
push
je
mov
sbb
and
mov
adc
add
mov
jns
fmuls
add
sbb
adc
gs
hlt
pusha
mul
xor
jo
cwtl
xchg
dec
fnstsw
cmpps
rolb
inc
and
push
add
bsr
xchg
shll
mov
jno
jb,pt
pop
push
add
adc
vfrczsd
jle
fists
dec
mov
movsb
or
lcall
imul
jecxz
dec
lret
xor
rolb
xchg
fildl
sbb
das
mov
hlt
xor
rclb
push
adc
mov
inc
dec
push
mov
mov
leave
movsb
addr16
std
outsb
mov
cmc
aad
jns
and
sbb
sarb
dec
push
sbb
ret
in
mov
stos
movsl
enter
and
cmp
jle
and
or
xor
inc
push
mov
xorb
pop
jne
jns
call
push
lret
test
shrl
dec
insl
fdivrs
inc
test
sbb
push
rolb
cmc
out
xor
sub
dec
mov
loope
and
jp
or
int3
xchg
jnp
dec
inc
cmp
mov
push
outsb
add
fs
fisubl
int
mov
mov
outsl
xchg
outsb
cmpsb
fstpl
fs
fwait
inc
inc
clc
dec
aaa
mov
add
repz
xor
loope
cltd
xor
jb
pop
mov
push
sbb
xlat
dec
push
outsb
inc
mov
dec
gs
mov
js
add
movsb
mov
popa
adc
jb
mov
cmp
call
add
cmp
imul
inc
and
in
xchg
repnz
xchg
sbb
lcall
jne
push
pop
addl
bound
cld
mov
pop
loop
les
addr16
mov
sahf
push
lea
push
adc
lret
push
inc
xor
cmp
lock
mov
ljmp
xor
repz
icebp
lods
rolb
inc
jnp
cmpsl
jp
pop
xor
daa
cltd
dec
jmp
mov
or
cmp
inc
inc
enter
dec
lea
dec
mov
int
stos
mov
add
std
mov
dec
xchg
ds
insb
mov
pop
xor
mov
mov
add
xchg
mov
in
push
jae
pusha
xor
mov
xor
jbe
pop
mov
pop
mov
jo
mov
add
xchg
mov
sub
jbe
adc
cwtl
sbb
pop
jns
lret
pop
fbstp
lods
stos
cltd
jge
mov
loope
xchg
jl
mov
jne
lods
sub
stos
imul
je
aaa
sub
and
and
fldcw
jge
iret
sub
outsb
fs
adc
fsubrs
int3
scas
je
loope
loope
xor
movsb
inc
ret
sbb
js
mov
jl
push
and
lret
loopne
addb
insl
dec
mov
cld
jg
mov
in
fildll
out
or
mov
mov
and
repnz
les
cmp
imul
add
bound
leave
cmp
adc
xchg
jne
jb
mov
xchg
imul
push
push
mov
movl
sub
enter
and
fnstcw
fidivrl
cmc
xchg
cmp
cmp
ds
enter
push
and
sti
outsl
mov
adc
xor
mov
lods
sub
insb
enter
dec
addb
mov
add
xchg
cltd
aaa
mov
inc
in
das
xlat
ljmp
loopne
push
or
aaa
cltd
inc
loopne
das
fs
mov
jecxz
mov
dec
jp
mov
mov
mov
xor
xor
pop
cli
push
stos
rol
lods
xchg
mov
lcall
fists
and
test
fs
imul
scas
out
and
aaa
push
add
ficomps
add
pop
scas
push
lret
mov
mov
cmp
mov
mov
call
cmp
xchg
pop
inc
gs
mov
xor
iret
adc
jo
pop
repnz
jne
ret
jae
jp
push
push
stos
arpl
push
or
loopne
add
roll
outsb
cmpsl
push
mov
aam
push
sahf
data16
mov
xor
adc
data16
mov
loope
rcrb
enter
aam
jg
dec
xchg
mov
pop
hlt
scas
pop
lcall
and
inc
out
das
sub
rorl
sub
mov
idiv
pop
mov
or
ret
out
push
sub
and
loope
sbb
jb
lods
sub
inc
loopne
adc
or
aad
inc
lods
xchg
dec
cld
adc
xor
cmp
sub
cmp
push
in
xor
pop
mov
pop
or
and
push
mov
pushf
or
mov
push
in
push
sub
dec
jo
or
sub
sub
sbb
push
icebp
sub
mov
pop
fisubrs
push
popa
adc
fidivrl
inc
bound
adc
out
pop
mov
loopne
outsb
movsb
test
add
divb
std
adc
cmp
mov
popf
cmpl
xchg
mov
jo
out
push
and
sub
adc
cmp
das
popf
fldl
enter
sub
sbb
test
mov
lea
mov
xor
push
or
insl
iret
jbe
lds
xchg
negl
mov
jecxz
ss
call
scas
lods
test
pop
out
loop
lahf
ja
movsb
cmp
fcompl
dec
mov
and
rcll
aad
test
dec
rclb
dec
sarl
add
fwait
xlat
fldt
cmp
in
mov
dec
mov
imul
mov
dec
add
push
sbb
fistpl
jno
test
inc
out
mov
dec
stos
or
and
adc
mov
pop
pop
cmc
mov
or
imul
popf
jns
daa
fisubrl
push
shr
cmp
cmp
jnp
mov
add
dec
add
adc
add
jo
insb
out
sti
push
inc
jbe
dec
mov
call
ds
insb
xor
and
mov
sbb
jg
mov
out
push
fmul
cwtl
pop
mov
mov
leave
push
cmp
sarl
push
in
adc
cmp
stc
ffree
jno
fstps
cmp
add
lahf
int3
inc
mov
clc
cmc
int3
adc
int3
pop
jl
repz
jecxz
pop
les
and
pushf
scas
adc
mov
jne
lret
sbb
xchg
jmp
lods
inc
adc
ja
jnp
xor
repnz
xor
cmp
mov
orb
jnp
cmpb
imul
push
andl
popl
pushfw
stos
cmpsl
inc
cwtl
push
outsl
filds
cmc
pop
out
adc
inc
das
arpl
add
xchg
inc
es
mov
and
fcomps
repnz
ljmp
add
xor
sbb
lcall
inc
movsl
jl
test
mov
inc
into
mov
rorb
push
movl
outsb
cltd
das
into
push
mov
arpl
cmpsb
cmp
ljmp
mov
cmc
jo
mov
fadds
adc
sbb
mov
or
xchg
or
sbb
jl
sbb
or
and
mov
and
and
clc
mov
mov
je
mov
sbb
mov
movsb
addr16
sub
cmc
pop
sbb
sbb
pusha
jmp
push
inc
imul
ja
push
mov
adc
test
push
dec
nop
mov
xchg
mov
fs
pop
mov
out
or
leave
jl
sbb
lahf
fdivl
hlt
push
and
cltd
jbe
fs
popa
mov
xor
push
or
mov
out
inc
jg
loope
out
dec
andl
lea
test
lret
push
and
outsl
sub
add
pushf
lock
in
test
mov
sbb
mov
fnstsw
fstpt
sbb
dec
xchg
jmp
cld
or
mov
repz
xlat
movb
stos
mov
hlt
lret
cmpsl
add
arpl
sub
outsb
ret
jb
inc
and
or
fisttps
xchg
cmpsb
pop
jl
pop
cli
mov
arpl
xor
imul
push
or
iret
rorb
dec
mov
cmp
shlb
fld
inc
xchg
or
fisttps
jg
sbb
mov
lret
sub
insb
xchg
lds
sbb
call
in
dec
xchg
xor
add
push
xchg
mov
sbb
lret
jne
pop
xchg
hlt
xchg
cmp
mov
xor
push
xorb
arpl
jno
jno
and
push
mov
decl
lret
fstl
fildll
lds
mov
shll
pop
imul
outsl
pushf
insb
rsqrtps
mov
lock
xchg
pop
lret
bound
push
jae
and
or
rcll
jbe
push
mov
mov
adc
mov
mov
test
and
loope
adc
mov
mov
xor
dec
out
out
jl
inc
hlt
cmp
shl
or
push
cmp
cmp
ret
xchg
xchg
and
dec
sbb
jg
shrl
repz
int
cmc
dec
out
cmp
cld
inc
cmovae
mov
or
rolb
mov
push
in
inc
gs
add
lods
es
out
addb
sub
and
notl
cmp
jg
cmp
push
pop
repz
lcall
in
ret
cmp
mov
cwtl
cltd
sti
or
mov
rcrb
testb
push
pushf
movsl
xor
mov
or
and
out
mov
popf
cltd
mov
outsl
repnz
dec
mov
xor
lea
mov
mov
or
ljmp
mov
fisubrs
push
pop
push
or
jg
mov
sbb
iret
pop
arpl
addr16
icebp
mov
xor
jb
in
sbb
mov
sbb
mov
jle
jne
shr
out
mov
and
cwtl
and
shlb
fldenv
xlat
and
xor
lds
xlat
in
xchg
mov
pusha
and
lcall
dec
adc
pop
or
cli
xchg
shrb
mov
aad
sarb
inc
dec
cmp
in
pop
fistpll
into
sub
fisttpl
add
sbb
outsl
sub
push
mov
outsl
and
or
cli
sarl
xlat
sub
test
push
xchg
fdivrs
adc
sub
or
add
in
ss
in
push
cmp
inc
xchg
lcall
and
std
shl
mov
out
sti
ret
arpl
or
sub
pop
lahf
shrb
outsl
push
cmp
daa
insb
imul
push
push
out
pop
mov
adc
rorl
jbe
ljmp
jo
cmp
inc
add
xchg
jecxz
rorb
out
push
xor
mov
xor
jle
xchg
daa
fdivr
fwait
cmp
pop
jno
mov
adc
jno
cld
sbb
test
adc
icebp
cmp
les
inc
out
mov
add
int3
ret
pop
pusha
in
and
int
iret
out
lahf
mov
xchg
adc
cmpsb
jne
mov
cmpsb
pushf
roll
dec
jl
mov
xor
jmp
inc
push
ja
popl
fadds
xchg
push
in
scas
in
push
lret
mov
es
push
ja
rcrl
sub
dec
fisttps
fsts
daa
cmc
fidivl
mov
xchg
in
mulb
or
adc
pop
movsb
aas
or
xchg
sbb
stos
popa
fidivrs
cmp
mul
add
aaa
push
xchg
push
mov
mov
ja
fwait
mov
aaa
sub
outsb
stc
pop
jmp
ret
add
sub
pop
sub
lock
pop
xor
rcrb
xor
and
push
daa
stc
cmp
loop
out
push
cmp
rclb
mov
add
fwait
nop
aas
sahf
pop
push
jnp
or
or
ret
mov
cld
and
leave
into
ss
xchg
fistl
cli
pop
pop
inc
push
out
jnp
xor
dec
into
rorb
mov
sub
sbb
sub
add
hlt
xorb
dec
sub
test
cmp
mov
jbe
pop
imul
fidivs
xor
mov
arpl
dec
pop
iret
pop
mov
sbb
adc
inc
lds
mov
fidivl
push
mov
pop
mov
lods
movsl
push
add
xchg
push
xor
mov
cli
cld
movsl
insl
cmp
outsb
outsl
fwait
add
mov
push
inc
enter
cs
mov
pop
mov
push
pop
sub
jle
es
outsl
dec
hlt
lock
popa
or
ret
push
mov
push
enter
leave
and
ds
loopne
dec
push
xor
mov
popa
loop
sbb
filds
sub
jl
sbb
adc
je
mov
jmp
cli
xlat
pop
ds
jns
inc
jne
stos
pop
insb
push
mov
cltd
or
sarl
xchg
int3
mov
cmpsb
push
repz
pop
cmpsl
pusha
cmp
lea
lods
sub
cmp
cmc
mov
push
lds
mov
inc
mov
popf
push
test
bswap
in
add
mov
sbb
cmp
notl
loop
jb
push
xor
mov
xchg
xchg
inc
dec
in
jb
inc
cmp
mov
inc
addr16
add
sub
lret
pop
pop
mov
inc
aaa
xchg
sub
sub
movsb
add
rcl
xchg
fcoms
sub
cwtl
ret
nop
mov
iret
cmpb
out
outsl
xor
int
xor
mov
js
pop
sbb
fsubs
mov
in
xor
dec
or
jno
sbb
xor
jmp
ja
pop
jb
cmp
dec
mov
into
jae
mov
enter
sahf
clc
pushf
repnz
icebp
xchg
fdivr
jbe
sarl
cmp
mov
pop
pop
adc
repz
jmp
cmpl
mov
inc
sbb
add
or
cmp
stos
inc
aas
mov
cld
adc
and
push
xchg
movsb
stc
sti
xor
cmpsl
es
jae
andb
inc
xchg
into
rorl
pop
pop
or
xchg
cmpl
imul
sbb
xchg
adc
jp
xchg
loope
cmp
mov
icebp
mov
aam
jg
stc
fwait
rcr
xchg
lea
add
inc
shrb
lods
add
sub
ret
je
sub
fwait
or
dec
add
in
xchg
enter
fcomip
push
enter
mov
push
mov
mov
pop
dec
xchg
sbb
mov
hlt
push
dec
pop
daa
jl
enter
mov
mov
pop
popf
mov
data16
and
mov
out
das
sahf
xor
xchg
push
adc
test
xchg
mov
push
lahf
xchg
mov
jo
in
jp
sbb
repnz
pop
in
repnz
call
das
xchg
push
outsb
mov
scas
xor
aad
sbb
xor
sbb
insb
xchg
inc
cmp
push
and
shrb
je
jnp
lock
int
add
xor
aad
rorb
or
mov
divb
cmp
add
rcl
mov
xchg
stos
adc
loopne
jo
or
cmp
xor
mov
iret
adc
test
int
push
stc
add
daa
jb
movsb
iret
les
addr16
add
out
sbb
dec
sub
shrl
cld
pop
sbb
hlt
popl
xchg
aaa
mov
pop
sti
inc
movsb
ljmp
or
or
push
fnsave
and
movsb
add
lods
pushf
aad
and
jbe
stos
outsb
out
mov
lock
push
fldt
loop
xor
inc
mov
std
repnz
test
scas
dec
ljmp
scas
sbb
xor
in
addb
loop
cmp
imul
ja
jg
sbb
clc
jp
push
cmp
leave
sahf
mov
add
loope
mov
push
mov
add
dec
cmpsb
xchg
cmp
ds
mov
loopne
ja
ja
daa
aaa
add
or
sub
sbb
testl
add
push
mov
jecxz
popf
push
cli
mov
push
sahf
push
lds
in
mov
out
test
in
or
push
adc
jecxz
push
jns
in
xor
stos
gs
roll
arpl
in
sub
adcb
push
iret
out
mov
das
jne
stc
dec
cmpsb
sbb
xsha256
cmpsb
xchg
imul
test
popa
lret
pop
cli
in
jo
xor
mov
clc
div
or
call
inc
mov
insl
sarl
cmpsl
fs
rcrb
jecxz
xchg
dec
cmc
mov
xchg
inc
stos
in
pushf
testl
lds
iret
jg
jae
xor
add
jae
je
pushf
or
jp
rolb
or
outsb
daa
jge
xchg
fisubs
jle
into
gs
aam
adc
pop
sub
cltd
xchg
sti
dec
in
push
add
enter
mov
and
mov
jl
dec
popa
jl
sub
sub
test
shlb
adc
jge
sahf
call
loop
mov
pushf
sub
iret
or
rep
lods
pop
inc
xchg
dec
aaa
dec
push
popa
std
push
push
incb
add
mov
int
push
lods
ja
lods
in
cmp
ja
in
pusha
xchg
insl
pop
dec
mov
sub
pop
loope
test
mov
jl
jle
xchg
mov
hlt
popf
push
fiaddl
dec
jns
sub
nopl
in
dec
push
js
or
dec
fisubrl
push
inc
out
mov
mov
jecxz
call
cmp
jecxz
loope
divb
add
xchg
test
jl
pop
mov
xchg
aad
jnp
ret
sub
call
dec
clc
push
daa
pop
and
mov
add
add
andb
sub
cs
xlat
xchg
push
dec
fisttpll
push
stos
call
pop
push
fdiv
sub
dec
stos
xchg
add
scas
jl
push
mov
lret
jns
push
pop
sbb
mov
testb
test
rorl
inc
adc
xlat
cmpsl
pop
lea
mov
lret
dec
insb
mov
mov
jae
jbe
sub
test
dec
add
push
pop
push
adc
aas
shlb
cmpl
mov
xchg
lcall
cmp
out
shrb
imull
aaa
push
jmp
sbb
sbbb
mov
xorl
and
and
jne
xor
mov
xor
push
shrl
mov
mov
lods
pop
pop
imul
and
pop
pop
inc
push
mov
xor
out
or
test
add
loop
fisttpl
push
in
into
cwtl
mov
jne
scas
push
mov
mov
push
es
daa
fdivrl
dec
push
mov
jecxz
sbb
jg
adc
call
dec
or
push
adc
ficoml
mov
stos
xchg
fstp
sub
sahf
mov
pop
mov
cmpsb
jb
jno
nop
lret
jl
pop
cmp
aaa
jmp
add
lods
or
int
in
rorl
sub
lahf
mov
loop
sarb
pop
add
icebp
and
mov
in
inc
rorl
inc
sbb
or
sahf
cmp
rorb
pop
xor
sub
mov
sub
cwtl
repz
dec
inc
aam
xchg
cmovnp
sub
mov
adc
arpl
repnz
aas
mov
lods
xor
dec
dec
jno
in
xlat
sbb
mov
mov
bound
cmp
adc
loop
push
test
fldt
and
and
pop
ja
cli
fisubrs
movsl
int
in
and
sub
mov
dec
stos
sub
xor
cmp
mov
lea
cmp
hlt
lahf
mov
cmp
jecxz
mov
adc
sti
insb
je
push
or
ficomps
mov
or
jns
push
call
in
and
je
bound
mov
scas
inc
bound
mul
test
mov
ret
repnz
aad
lcall
mov
cli
iret
bnd
movsl
pusha
pop
loop
pop
dec
negl
and
outsb
jg
shrl
fucomi
jne,pt
fcom
push
fistpl
or
rcrl
ja
jnp
dec
inc
dec
dec
push
lcall
pop
sbb
sub
ffreep
and
push
cli
jmp
pop
loop
mov
cmp
pop
js
sbb
pusha
push
sbb
and
lock
sub
std
repz
icebp
dec
movsl
out
ljmp
ja
test
imul
sbb
xchg
lods
push
cmp
mov
test
mov
xor
push
add
lds
xchg
dec
jecxz
aad
mov
pop
xlat
insb
inc
sbb
out
sbb
lret
mov
mov
push
jne
mov
into
scas
aam
loopne
jnp
dec
rcl
imul
imul
add
mulb
ret
rorb
jge
and
je
lods
fwait
xor
andb
adc
sub
ficoms
mov
or
inc
leave
jmp
popf
stos
dec
jg
mov
inc
test
or
daa
jae
and
sbb
neg
es
sahf
xor
push
nop
push
test
call
push
pop
or
repnz
in
scas
arpl
sbb
mov
add
out
test
inc
pop
push
test
dec
scas
mov
les
pop
sbb
or
or
leave
xchg
or
sub
cmpsl
lea
or
xor
and
cmp
fadds
pop
mov
add
ret
into
push
xor
cld
cltd
inc
jns
push
xchg
aas
fcomp
movsb
xchg
in
xchg
ret
inc
out
out
movsb
xorb
ss
add
adc
fisubl
sti
popf
rep
ficompl
mov
lahf
mov
adc
sub
push
fistl
xchg
rcr
jmp
mov
fsubl
fadd
jl
push
mov
mov
cmpsb
arpl
outsb
lock
jg
xor
testl
cmp
ss
adc
nop
add
movsl
adc
pop
or
pop
ret
sub
cs
sbb
adc
lret
mov
mov
nop
test
pop
sub
mov
jb
dec
mov
xor
mov
push
cmp
stos
ja
adc
icebp
push
gs
andb
mov
push
inc
dec
addr16
movsb
ss
clc
xchg
mov
or
and
inc
pop
test
and
mov
sub
push
pop
xor
jle
mov
pop
adc
pop
loope
sahf
stc
dec
imul
pop
inc
add
jg
mov
lds
or
loope
loop
mov
adc
stc
sarb
sbb
pop
mov
mov
movsl
imul
inc
int3
or
pop
pop
cmp
adc
js
push
sbb
pop
cld
mov
in
mov
mov
lahf
cld
jg
fwait
shll
inc
jecxz
dec
rcrl
sbb
or
mul
mov
out
rcr
call
inc
repnz
test
ja
xor
addl
shlb
add
imul
decl
mov
dec
inc
popf
cld
adc
adc
imul
push
mov
ds
fldt
add
and
jne
leave
mov
mov
test
pop
movsb
xchg
sti
imul
imul
jge
in
xchg
xlat
adc
vcvtsd2ss
scas
ret
mov
lds
in
sbb
repnz
xchg
adc
das
fildl
cld
lock
les
mov
cmc
cmp
push
test
xchg
inc
jno
cmpb
push
outsl
imul
cmp
mov
repz
idivl
mov
mov
or
jle
pop
and
sahf
mov
adcb
mov
or
cmc
sub
daa
or
repnz
add
pop
scas
jb
sti
push
daa
popf
pop
loopne
or
and
or
xor
jns
fdiv
pop
mov
mov
jns
sarb
pushf
mov
mov
xchg
flds
push
adc
cs
arpl
fwait
push
pop
lahf
mov
push
shr
fildl
shr
xlat
cmp
fidivrl
xchg
cmp
pop
lret
aad
jnp
push
shr
jne
dec
adc
lds
inc
fstps
movsb
xchg
sub
ret
xchg
movsl
stos
sub
pushf
jge
xor
mov
pop
pop
lret
dec
add
mov
jo
mov
out
mov
pusha
ja
jnp
mov
adc
jmp
inc
pop
push
repnz
ret
jmp
imul
cmpsb
mov
or
add
incl
jne
cmp
pop
fstpt
add
or
hlt
je
sbb
stos
outsl
idivb
subb
sbb
or
jae,pt
pop
sbb
sub
pop
ror
xchg
ljmp
sbb
add
and
imul
orb
pop
pop
cmpsl
mov
dec
jae
push
mov
sbb
jbe
adc
cmp
or
loop
inc
call
adc
mov
adc
icebp
cli
lods
mov
xor
clc
out
rcr
adc
popf
push
js
cmp
mov
xor
enter
dec
in
adc
and
fs
pop
push
cmp
std
outsl
and
arpl
setnp
add
adc
add
sub
cmp
movb
mov
mov
jl
push
pop
stos
dec
push
adc
shlb
xchg
fwait
divps
mov
sub
push
push
jp
inc
jecxz
push
ss
xchg
cs
pop
sbb
mov
insl
mov
aam
shrb
fsubs
lds
or
outsb
adc
les
pop
fldenv
aad
mov
dec
fldt
push
mov
adc
in
ficompl
loop
enter
adc
adc
push
fmuls
test
fdivp
sbb
push
mov
adcb
addr16
jp
subl
lcall
in
fcom
enter
shlb
rolb
jo
pushf
insb
mov
fsubrl
adc
stc
xor
push
fldt
mov
or
or
mov
rcrb
fmuls
and
cli
add
adc
imul
xor
sub
jmp
sub
xor
scas
movsb
push
fsts
inc
bound
cmp
das
subb
jae
xor
out
sbb
sub
push
sbb
xchg
jnp
add
xchg
imul
mov
popa
xchg
insl
pop
pop
fnstcw
push
jmp
xor
ret
mov
cwtl
lahf
jbe
test
mov
call
insl
fistpl
mov
fdivrl
lret
mov
stos
adc
add
sbb
add
jb
repnz
call
ljmp
out
ljmp
xchg
mov
or
fldenv
and
and
push
jns
jl
stos
andb
sbb
mov
jecxz
movl
mov
adc
nop
xchg
movsl
test
sbb
add
stos
xor
pusha
in
and
jmp
mov
or
xchg
fiadds
lahf
lods
loopne
jmp
add
inc
cli
sbb
lock
aam
mov
mov
gs
inc
test
push
repnz
cmpsl
ds
insl
mov
sub
mov
pop
loope
jg
or
scas
in
outsl
in
pop
movsb
int3
aad
jo
sbb
mov
stc
xchg
or
pushf
xor
push
hlt
aam
out
jbe
inc
mov
sub
jno
mov
addr16
push
daa
push
incb
shl
das
inc
movsb
sbb
pop
add
ljmp
push
pusha
ret
fists
mov
push
pop
test
mov
push
sti
dec
sbb
pop
sbb
call
cmp
mov
lret
mov
sbb
inc
out
sbb
outsl
dec
punpckldq
aam
sub
aam
repnz
cmpsb
ds
or
push
ret
out
cli
loopne
out
push
cmp
jo
inc
cmp
dec
add
call
out
into
cltd
loop
push
sti
mov
xor
lahf
xchg
shrl
mov
cmp
xchg
lret
js
cmp
lock
lea
mov
loopne
lods
cmc
mov
dec
mov
cmc
out
and
int3
mov
jl
pop
stos
es
add
jp
mov
fucomp
test
rcr
insl
sub
stos
or
in
pop
jg
scas
xor
sti
pop
arpl
iret
ret
leave
jno
sbb
push
lds
xchg
mov
push
add
cmc
jle
out
sbb
mulb
pusha
adc
aad
mov
xor
movsb
and
jne
adc
cmpsl
movsl
inc
jge
packssdw
inc
aas
or
sbb
cmp
mov
sbb
stos
jle
sti
mov
stos
rolb
outsl
sbb
sbb
fs
push
and
mov
cld
jae
rolb
pop
cmp
mov
dec
add
es
outsl
push
push
aas
imul
jns
lahf
sub
lret
out
sbb
repz
mov
fisttpll
clc
mov
stc
push
insb
mov
dec
sbb
pop
mov
lea
out
or
lret
sub
gs
scas
mov
mov
mov
lods
jbe
jecxz
aas
xor
mov
jnp
imul
pop
dec
add
fwait
or
cmp
cld
nop
sbb
fdivs
mov
std
test
movsl
push
jnp
loop
sub
addr16
ja
adc
pop
out
stos
fistpll
ret
mov
mov
push
pop
inc
iret
dec
orl
inc
xchg
mov
inc
stc
adc
cmp
fs
pop
sbb
aaa
sub
aaa
fisubl
adc
xchg
fwait
push
mov
out
stos
jne
push
jne
xchg
mov
xor
sub
rcll
das
sti
sbb
mov
lret
cwtl
lock
xchg
and
jg
bound
test
into
xorb
stos
fimull
fldl
cmp
mov
fs
xchg
lods
dec
ss
or
outsl
add
std
xor
gs
repz
iret
xlat
sti
mov
and
cmp
cmp
pop
loop
movsb
stos
cwtl
jl
nop
cmc
loop
jecxz
sbb
mov
notl
cmp
shrb
push
in
out
ss
enter
dec
jnp
sub
jle
mov
dec
lock
ds
mov
mov
push
cmp
pop
push
mov
data16
repz
jbe
or
and
jb
inc
mov
in
or
mov
sbb
repz
rcl
dec
push
lahf
pusha
cwtl
incb
int
jns
popa
popa
fidivs
hlt
call
push
mov
xor
dec
mov
gs
mov
fsts
mov
icebp
or
lahf
inc
inc
int3
pushf
push
jp
rcll
out
dec
ljmp
jae
imul
fisubl
xchg
mov
cmc
insl
inc
or
mov
out
sub
fxtract
xlat
fsubrl
out
mov
dec
cmp
xchg
lock
loop
push
lock
inc
pop
bound
imul
stc
dec
arpl
inc
add
sbb
mov
xchg
cltd
mov
xor
xlat
fisubl
push
jne
decl
inc
xor
orb
push
movsb
cmpsb
jo
test
jl
mov
mov
int
jno
fldenv
setbe
ret
sub
add
es
ror
jecxz
fidivl
push
test
cmp
xchg
mov
and
push
jmp
js
orb
aam
fbstp
pop
lock
out
pop
xor
mov
mov
mov
jmp
sar
int3
mov
dec
mov
cltd
rolb
test
cmp
rcll
push
pop
sti
aam
pop
dec
enter
xchg
icebp
mov
xchg
nop
pop
dec
sarl
dec
insl
mov
test
adc
test
imul
test
sub
lret
notl
inc
leave
fsubrl
push
adc
sub
arpl
add
jp,pt
mov
in
pop
lret
cmp
lock
xchg
addl
int
in
in
dec
cmp
test
jns
mov
cmp
in
mov
cld
sbb
add
lahf
das
sahf
std
push
pop
cmp
cmpsl
gs
in
mov
scas
mov
xor
push
ja
push
int3
scas
popf
in
jl
adc
xchg
sub
mov
mov
in
stc
or
in
and
mov
pop
imul
test
add
push
pop
dec
out
test
inc
loopne
pushf
add
nop
cmp
daa
push
or
sub
push
dec
push
pop
xchg
shll
cmc
out
arpl
jo
ss
jno
addr16
repnz
push
xchg
jbe
mov
add
mov
pop
in
jl
dec
pop
std
inc
or
lret
nop
insl
ret
or
aad
and
lea
adc
cmp
and
dec
push
aad
inc
adc
xchg
jns
cmp
mov
data16
inc
adc
lcall
jbe
pop
clc
dec
cmp
pop
out
sbb
stos
cmc
sub
nop
dec
aam
lret
mov
jmp
outsb
movsb
ljmp
arpl
pop
sbb
aam
push
jne
cmc
int3
sbb
cld
fs
into
out
fisttpl
test
sti
outsb
mov
popa
inc
stc
xchg
push
cltd
stos
call
pop
mov
adcb
cmc
in
inc
add
mov
lock
scas
in
mov
push
inc
push
push
stos
clc
jle
sub
rorb
mov
loop
mov
add
cltd
int
or
push
xchg
insb
jae
mov
scas
lret
insl
xor
cmpsb
sub
les
mov
or
pushf
lods
mov
lods
test
fisttps
cmp
adc
push
out
insb
aad
imul
lods
mov
fisubs
aam
jecxz
jb
ds
aam
je
adc
mov
mov
mov
cmp
inc
inc
xor
adc
adc
addr16
jle
stc
addb
adc
dec
add
sbb
aas
cli
out
les
iret
push
xchg
cs
insb
stos
aam
inc
nop
lds
sbb
sahf
clc
adc
inc
in
xor
jecxz
lods
jle
jp
addr16
sahf
jae
andl
add
cmp
or
ds
xorb
pop
pop
dec
add
pop
inc
push
int
cld
decl
cld
push
lahf
jp
rcrl
stos
data16
dec
mov
stos
test
adc
in
movsl
inc
ljmp
repnz
add
mov
sub
add
xchg
mov
sbb
nop
shrb
pop
pop
arpl
jo
dec
das
imul
and
sub
jmp
sub
jo
cli
lds
add
pop
frstor
sub
pop
sbb
mov
jecxz
lods
adc
add
test
test
fistpll
jnp
cmp
in
test
fnstenv
or
subl
jbe
xchg
movsb
jmp
xor
or
mov
aam
dec
add
inc
testb
in
pop
hlt
call
pushf
lods
addr16
mov
jecxz
lods
pop
mov
scas
sar
adc
xor
les
xlat
sub
sbb
nop
xchg
jb
fwait
loope
stos
pop
push
xchg
mov
les
cmp
pop
xchg
movsb
dec
aad
inc
adc
lock
cwtl
es
jns
adc
icebp
pop
jnp
fs
sarl
add
or
test
decb
sub
sbb
out
mov
test
adc
mov
mov
sbb
sbb
sub
gs
test
or
jbe
inc
dec
push
sub
mov
and
xor
gs
int
lock
cs
push
mov
and
sbb
xor
xchg
push
push
ja
cmpsb
pop
inc
das
and
or
cmp
repnz
xor
jle
pop
loopne
sahf
mov
mov
pusha
push
repz
or
ds
or
test
jmp
xchg
scas
push
cli
cld
inc
mov
pusha
cmpsl
js
scas
sub
cmp
pop
mov
loopne
cld
cmpsb
cmpsl
adc
not
or
imul
mov
lea
pop
push
cmp
cli
ja
aaa
sarb
jmp
dec
fsubl
out
loope
test
mov
ficompl
mov
mov
mov
lahf
out
push
ss
int3
cwtl
fmuls
add
lret
lods
xchg
jnp
mov
imul
jp
icebp
daa
pop
nop
sub
jmp
in
daa
repz
xor
mov
pop
aaa
push
lods
enter
mov
inc
mov
mov
dec
sbb
negl
push
and
push
shl
insb
xor
popa
test
loop
insb
imul
test
inc
dec
cmp
pop
pop
pop
mov
adc
xor
xor
sbb
cmp
lret
movsl
imul
ss
mov
bound
pop
std
addb
shrl
int3
hlt
stc
js
fsubr
cmp
pop
test
mov
outsb
test
push
sbb
jne
and
push
outsl
mov
fwait
cmc
jne
xor
sbb
scas
or
push
adc
cmp
loop
xor
sub
xor
sub
cwtl
jo
nop
and
mov
in
sahf
in
lock
mov
push
cs
or
repz
aad
imul
sub
pushl
sbb
outsl
stos
fnstcw
mov
pop
jae
adc
inc
inc
mov
push
push
and
push
pop
jae
and
es
xor
lret
test
pop
fsubr
jo
mov
movsb
ljmp
pop
std
xlat
add
dec
push
std
adcl
sbb
loope
andb
jl
mull
pop
out
nop
je
xchg
mov
xchg
mov
sarb
iret
xchg
sub
or
sub
out
in
dec
and
inc
mov
lret
jg
pop
jbe
push
test
mov
sub
push
ror
out
sub
fsubrl
mov
int
lds
push
sahf
add
ds
cwtl
shll
xchg
sarl
push
rclb
cmpsb
arpl
mov
scas
cmp
stos
inc
bound
xor
pop
add
repz
pop
sbb
aaa
fwait
ss
fs
jmp
cmpsb
sbb
push
mov
testl
pop
fs
dec
push
dec
fstpt
ja
xchg
push
add
push
cli
roll
add
mov
insl
insl
out
or
jle
ja
and
inc
add
adc
or
aad
xlat
xor
or
pop
sub
adc
out
mov
enter
mov
push
mov
addb
mov
out
aad
lret
idiv
out
pop
push
pusha
lods
mov
faddl
mov
and
int3
rcr
xorb
push
lea
xchg
jle
test
mov
push
jno
sbb
xor
xchg
inc
and
push
ds
enter
adc
add
or
jo
cs
jns
popa
push
pop
xlat
loopne
imul
jbe
adc
and
add
std
pusha
mov
mov
lret
add
push
xor
inc
sahf
xchg
push
int3
pop
mov
pop
and
pop
in
roll
add
sbb
loop
dec
add
iret
repnz
mov
enter
cmc
mov
mull
xor
clc
ss
mov
inc
repz
sub
pop
add
lods
mov
bound
test
and
insb
jb
aaa
and
xor
sahf
push
movl
mov
xchg
mov
push
push
sbb
popa
push
lret
push
pop
mov
addl
imul
sub
pop
mov
cli
outsl
mov
dec
sbb
aam
aas
cmp
push
jecxz
ds
sbb
scas
sahf
aad
inc
cmp
fisttpl
shrl
fisubrs
or
les
loope
rcrl
jge
adc
ret
sahf
sbb
lods
pushf
sbb
leave
sub
inc
push
mov
mov
repz
in
mov
dec
jle
jp
addb
cwtl
cmp
decb
pop
inc
adc
cmpsb
ss
fiaddl
repnz
dec
push
inc
mov
dec
adc
lods
stos
cmc
aaa
fistl
or
mov
mov
xchg
mov
outsl
push
jns
jmp
popa
push
pop
pop
cmc
imul
lds
sub
gs
mov
hlt
jne
dec
mov
loope
scas
mov
mov
dec
stc
sub
adc
or
jnp
xor
scas
add
jecxz
mov
ss
xchg
mov
sbb
pop
pop
add
sub
sbb
jg
adc
in
leave
sub
mov
adc
pop
mov
mov
out
div
pop
outsb
out
and
mov
jecxz
xchg
lds
ret
mov
jo
int3
ja
sti
jnp
psrlq
fisubs
jecxz
int
andl
pop
repnz
inc
mov
jne
mov
adc
and
sbb
sub
fistl
adc
in
stos
jmp
fisttps
push
aam
pop
mov
lods
mov
pop
inc
pop
adc
repnz
sbb
push
fbstp
nop
jne
jecxz
adcb
out
pop
push
sub
adc
cli
roll
sbb
inc
popf
mov
inc
fcmovu
outsb
adc
out
shlb
sub
cmpsl
sbb
int
cmp
inc
pushl
aam
cmc
repz
mov
mov
and
pop
into
xchg
jl
pop
jg
shrl
addr16
and
out
push
add
imul
inc
xchg
jne
lods
sbb
mov
or
jl
aam
test
mov
arpl
jle
add
daa
mov
lds
xor
test
mov
and
outsl
clc
push
jge
bound
and
rcr
mov
sub
pushf
push
xchg
orl
in
pop
sub
lret
add
sbb
adc
adc
push
dec
dec
int
loope
jmp
push
mov
rcrb
lods
outsl
pop
fs
inc
dec
idiv
pop
cs
in
loop
xchg
shl
push
inc
fcoml
mov
or
push
gs
mov
xchg
cmpsl
insb
push
mov
cld
aaa
ds
gs
xlat
push
inc
outsl
call
imul
mov
loopne
xchg
dec
lret
out
cmpsb
test
pop
mov
out
mov
fs
push
mov
push
pop
enter
adc
jno
adc
stos
leave
insb
sub
mov
sbb
jo
sub
fucomip
aam
jp
ror
push
mov
loopne
insb
sbb
jle
push
dec
stc
jnp
ret
inc
fsts
dec
or
repz
and
loopne
mov
inc
hlt
sarl
xchg
pop
sbb
incb
aam
sub
cmp
xchg
add
xor
sbb
scas
in
add
push
sbb
xchg
mov
sub
movsl
push
pop
xchg
xor
pop
inc
das
ss
sbb
cs
xor
add
arpl
jnp
loop
bound
mov
adc
pop
mov
xchg
inc
daa
cmpsl
es
sbb
les
cmpsb
in
ret
dec
fcompl
mov
pop
into
push
adc
xchg
test
jp
lock
stos
ja
jmp
cmp
popa
add
out
insb
loopne
loopne
inc
cld
mov
or
scas
stos
cmp
xchg
bound
roll
push
int3
pop
outsl
test
sub
mov
cmc
xorb
popa
mov
ss
pop
jl
sub
nop
call
std
addr16
adc
pushf
orl
fistpll
sub
push
lds
mov
jecxz
lea
int3
xor
sub
mov
div
subb
jp
add
in
mov
mov
sub
ja
jl
out
xchg
xchg
or
xchg
fsin
loop
call
lret
add
push
out
mov
jae
mov
neg
cmp
addl
sbb
mov
js
jl
movl
pushf
sub
cmp
data16
adc
xor
mov
sub
stos
mov
popf
sub
mov
dec
pop
in
xchg
shrb
add
gs
inc
lea
mov
loopne
inc
hlt
cld
out
or
and
add
inc
dec
bound
jp
in
cwtl
mov
mov
push
inc
scas
mov
es
push
lret
test
iret
push
shr
arpl
mov
dec
add
jae
fwait
mov
mov
sub
push
cltd
mov
outsl
xchg
insl
sbbb
mov
rolb
jb
fs
xchg
outsb
dec
lock
sbb
repz
in
or
faddl
aaa
imul
cmp
or
fs
add
fpatan
daa
mov
mov
adc
mov
xor
into
clc
or
mov
pop
pop
mov
das
scas
add
or
rcr
fdivs
insb
std
in
inc
bound
pop
pop
mov
jl
and
push
xor
fcmovnu
rcrl
dec
daa
jae
jle
sarb
pop
cmp
pop
xchg
std
rcrl
aas
lret
lret
mov
aad
cwtl
lods
lods
xchg
mov
dec
pusha
pop
cwtl
dec
push
out
cmpsl
fbstp
call
repnz
andl
xchg
pushf
repz
enter
push
fadds
outsb
dec
dec
cmp
scas
dec
scas
addr16
adc
xor
mov
daa
and
in
outsb
sbb
rorl
orb
push
je
stc
movsb
dec
adc
cs
dec
arpl
hlt
dec
mov
pushf
or
or
sbb
xchg
ljmp
repnz
mov
xlat
mov
cmpsb
in
mov
pushf
inc
rorb
xchg
popa
ss
test
sbb
cwtl
mov
push
call
jmp
out
loop
sbbl
mov
call
shl
ja
enter
repnz
and
jle
pop
jecxz
xchg
enter
int
shlb
mov
cwtl
push
sub
mov
sahf
stos
scas
clc
mov
test
lret
xor
or
push
ficomps
leave
jmp
dec
xor
xchg
add
xchg
xchg
adc
aas
pop
add
and
iret
push
out
dec
cmc
cmpsb
scas
mov
lods
repnz
fwait
movsl
sbb
push
cmp
imul
add
aam
add
push
cmpsb
push
sbb
adc
scas
je
dec
or
lods
mov
cmpl
add
or
mov
cmp
and
pop
mov
pop
nop
adc
cmp
and
call
out
test
clc
dec
adc
xlat
pop
faddl
scas
jp
sub
fwait
jbe
xchg
in
cld
cmp
data16
jae
pop
repz
dec
aad
adc
mov
test
outsb
pusha
mov
lret
lahf
fcmovu
cs
mov
mov
test
pop
and
xor
xchg
jno
push
xchg
cmp
dec
imul
push
xor
fs
or
call
cli
mov
into
push
dec
mov
inc
mov
or
testb
or
jne
inc
xor
loop
xchg
xor
ds
xchg
fwait
cmpsb
adc
jecxz
cmp
adcl
mov
inc
aad
imulb
mov
add
mov
aaa
push
cmp
or
mov
adc
outsb
lds
addl
xor
xchg
push
mov
sti
pop
dec
out
push
testb
dec
and
jmp
sub
and
lock
sub
mov
cmp
or
push
mov
mov
stc
inc
pop
into
pop
adc
stos
ret
testl
test
jecxz
sbb
stc
je
xchg
leave
ds
rolb
dec
lods
dec
lods
mov
sbb
shll
idivb
ljmp
cwtl
dec
mov
mov
filds
jbe
xchg
ret
aas
bound
cwtl
cmp
mulb
xlat
fcmovnbe
rclb
push
dec
mov
push
mov
sbb
fistpll
andb
shll
lds
scas
xorb
dec
lock
adc
adc
mov
push
mov
adc
in
xchg
xchg
push
leave
mov
out
or
or
and
jmp
std
insl
dec
pop
mov
fwait
hlt
idivl
pop
push
add
nop
sbb
mov
inc
in
mov
xchg
mov
lea
adc
addr16
jns
out
mov
pusha
xchg
cmpsb
andl
xlat
adc
xor
cwtl
addr16
int3
std
sub
fs
insl
mov
dec
xchg
push
pushf
imul
fxam
aam
aaa
sub
outsb
xchg
test
cli
in
sbb
in
push
pop
dec
add
mov
sbb
aaa
pop
sbb
jp
test
inc
lds
int
inc
int
icebp
xchg
cld
and
adc
fdiv
mov
add
mov
insl
sub
dec
jmp
outsl
mov
sti
loopne
inc
mov
rolb
jo
sub
xchg
stos
and
dec
inc
push
add
pop
push
in
push
notl
sbb
loope
dec
push
daa
mov
add
push
push
dec
mov
pop
add
stos
or
mov
adc
cmpsb
mov
scas
mov
lea
mov
sbb
arpl
xchg
sbb
pop
or
mov
adc
lret
je
mov
push
push
push
pop
scas
push
sub
pop
jmp
or
mov
insb
cmc
les
pop
cmp
pop
pop
or
mov
shll
mov
fsubr
pushf
jne
insl
xchg
adc
and
fildl
sbb
pusha
scas
nop
ret
ds
xchg
push
iret
adc
adc
ret
adc
mov
cmp
add
xchg
cltd
es
int3
into
pop
inc
mov
push
xchg
push
dec
inc
sub
ja
xchg
mov
gs
sbb
and
out
inc
mov
in
negb
mov
push
or
lods
xchg
daa
xchg
xor
sbb
or
dec
inc
mulb
lret
sbb
stos
mov
jb
fwait
sub
call
xchg
std
mov
fiaddl
aaa
cmc
mov
add
out
jns
xchg
dec
jbe
inc
inc
add
xor
outsl
xlat
jp
sub
in
repnz
jno
sub
mov
jbe
sbb
push
out
in
mov
aas
inc
pop
mov
and
test
push
movsl
gs
pop
inc
movsb
mov
scas
mov
cmp
jne
aad
mov
movsl
cmp
addr16
fldenv
or
mov
push
filds
pusha
sahf
pop
pop
mov
sub
jb
xlat
pop
dec
ja
mov
subl
sti
mov
xor
xor
mov
pop
lcall
xchg
and
bound
ret
jecxz
adc
shll
out
and
jmp
es
orb
mov
inc
arpl
xchg
mov
in
push
sbb
icebp
jns
push
add
daa
or
cs
xlat
and
jnp
test
mov
adc
insl
xor
aad
sbb
adc
sahf
stos
jne
loope
inc
jnp
lods
outsb
mov
std
test
cs
lea
repnz
gs
out
mov
jge
call
jle
sbb
pop
loopne
arpl
and
pushf
push
call
je
outsb
dec
mov
pop
repz
mov
gs
mov
push
pop
dec
and
rcll
push
or
xchg
or
lods
dec
xor
mov
jne
adc
cmpsl
stos
inc
and
cmp
cmp
mov
adc
or
shrl
sbb
jl
push
jl
mov
inc
push
data16
das
and
notb
mov
fdivr
ljmp
andb
sbb
xchg
push
and
sub
sub
mov
and
sub
es
xor
dec
and
or
xor
add
push
or
inc
sub
inc
es
push
dec
lds
inc
aad
sub
orb
xor
pop
call
sub
jae
add
pop
cmc
clc
pop
int
in
es
adc
dec
loopne
xchg
cltd
pop
inc
jmp
dec
cwtl
and
outsb
push
aam
mov
sub
jns
loop
es
ljmp
stc
jg
ret
hlt
push
xchg
mov
jg
jae
das
imul
insb
xchg
sub
movsb
sbb
popa
pop
loope
jl
sbb
add
pop
mov
fldenv
sbb
daa
jo
and
orl
mov
push
out
mov
lahf
js
xchg
mov
add
mov
sub
bndstx
arpl
jge
adc
or
adc
popf
scas
xor
andb
jp
scas
fdivrs
push
mov
les
mov
and
lods
push
and
ret
test
mov
jo
dec
mov
shrl
adc
loopne
inc
nop
dec
cmp
jnp
or
lock
jbe
loopne
mov
js
jmp
mov
add
jmp
js
rorl
das
data16
rcrb
push
xor
mov
lret
and
shrl
mov
clc
cmp
add
cltd
and
out
arpl
mov
mov
scas
or
lods
test
mov
shrl
mov
pop
rcll
mov
jl
in
xlat
adc
push
push
jecxz
sbb
mov
mov
ljmp
pusha
popa
test
push
cmpsl
adc
mov
mov
iret
inc
int
mov
out
sbb
fs
xor
mov
ss
fmull
in
mov
cld
cmp
popf
add
mov
mov
xchg
mov
push
aas
arpl
inc
push
mov
add
ss
push
inc
and
mov
outsb
cmp
fwait
in
movsb
cmp
push
add
inc
cli
mov
enter
incb
shll
mov
pop
mov
mov
dec
push
icebp
cmpl
mov
popl
xchg
gs
jecxz
mov
or
scas
xchg
sarl
cmp
insb
add
test
andl
adc
dec
loop
xor
sarl
pop
and
mov
ljmp
mov
insb
sub
mov
push
out
mov
shrb
cltd
cld
ss
xchg
popa
enter
jns
mov
fisubrs
je
push
mov
daa
ja
cmp
jnp
push
xchg
add
fcomi
add
test
xor
cmp
test
xchg
cmp
adc
pop
loopne
insl
and
cltd
imul
sbb
psllq
lret
sti
mov
push
cmpsl
jge
insb
lock
daa
pusha
roll
popa
dec
adc
outsb
out
sbb
mov
jns
shl
movsb
inc
stc
xor
mov
and
pop
mov
les
dec
xor
lds
jo
inc
pop
jnp
std
out
xlat
jne
cmp
repnz
imul
push
andb
ret
or
pop
cltd
lcall
push
mov
jecxz
lret
sub
add
xchg
in
xor
xor
sbb
sub
test
inc
dec
xchg
mov
push
jmp
subl
mov
jg
xchg
es
jae
mov
inc
out
xor
std
push
xchg
rcll
mov
adc
cmpsl
sub
xorl
inc
int
cmp
das
cmc
lahf
push
add
jnp,pn
daa
shrl
push
inc
aad
lds
cltd
cltd
adc
bound
sub
xchg
sarb
bound
xor
je
xchg
add
fnsave
push
mov
orl
stc
jp
mov
inc
loopne
cmp
jmp
push
stos
fidivl
sarl
xchg
push
cs
std
gs
jmp
mov
adc
testb
insb
xor
out
gs
cli
xor
mov
pop
jno
inc
push
lods
das
sbb
xchg
fmul
enter
push
sbb
aad
xor
sbb
fists
iret
jge
in
xor
dec
xchg
loope
js
jl
jle
cmpsb
sbb
adc
sub
repz
adc
mov
adc
push
sbbl
outsl
mov
adc
mov
out
insl
sarl
sbb
aaa
cld
jp
into
aas
and
and
ror
push
or
shlb
jl
or
sbb
push
cld
and
or
in
mov
inc
mov
xchg
mov
inc
cwtl
adcl
xor
mov
lds
sti
xchg
test
inc
jbe
pop
fsts
repz
sub
xchg
mov
cmp
in
outsb
inc
pop
sub
xor
mov
cmp
aad
mov
fiadds
inc
cmp
add
out
sti
cmp
pop
xchg
add
or
inc
mov
fidivrl
sahf
add
adc
ja
addr16
xchg
dec
cmpsb
or
ss
out
int3
ret
push
or
bnd
push
add
lea
add
or
arpl
cmc
in
repnz
xchg
or
mov
sbb
inc
xchg
xchg
scas
mov
enter
lock
js
negl
sub
out
out
cld
out
std
int3
add
scas
push
jns
iret
xchg
mov
mov
frstor
imulb
and
cmpsb
mov
ret
hlt
imul
add
mov
adc
adc
fst
jge
sub
sbb
es
xor
or
push
xlat
xor
pop
sub
fidivrs
sbb
jo
add
mov
sbb
sarb
jecxz
in
xlat
mov
stos
or
int3
and
hlt
inc
mov
mov
jbe
sub
int
mov
in
push
cmpsl
and
push
inc
jmp
cs
fs
xchg
jecxz
insb
incb
inc
popa
mov
repnz
or
dec
cmp
xor
or
xor
stos
mov
lcall
mov
mov
test
cld
and
out
mov
adc
dec
pop
xor
sub
jle
arpl
stc
xor
inc
sub
adc
lds
sbb
sub
nop
pushf
mov
xor
or
inc
dec
sub
mov
xor
int
lahf
jmp
movsl
inc
dec
or
mov
mov
adc
cld
cmp
test
sbb
pop
cmc
push
cltd
adc
pop
add
cld
mov
pop
push
jne
jnp
pop
jmp
cmp
lahf
lods
or
fmulp
cltd
cmp
sti
int3
out
adc
push
sub
andl
fs
ljmp
pop
fadds
inc
mov
scas
inc
in
sub
mov
sub
or
xor
leave
nop
nop
push
arpl
adc
cltd
fistpll
dec
inc
jecxz
cmp
das
cwtl
mov
mov
scas
in
pop
imul
es
mov
jae
lods
fcmovbe
mov
js
aaa
mov
imull
add
sub
jmp
pop
int3
ffreep
xchg
sbb
xchg
insb
jb
int
mov
jnp
and
in
adc
pushf
jge
xchg
out
push
in
cmpsb
push
mov
popa
int3
xchg
testb
scas
xchg
push
dec
adc
stos
fwait
outsb
inc
adc
lods
jecxz
pop
jo
cmp
fs
sub
loop
pop
test
fxtract
xor
dec
mov
fdivrp
push
rol
push
in
add
repz
sahf
cmpsb
fldl
or
push
xchg
dec
push
adc
push
stos
pusha
pop
mov
femms
or
testb
inc
jnp
dec
xor
aad
adc
mov
mov
mov
jns
inc
nop
shll
push
xlat
push
push
cs
adc
fld
jne
shr
test
mul
insl
xchg
ror
std
mov
dec
das
mov
aaa
mov
in
cmpsl
add
mov
mov
lret
push
outsb
fstpt
xchg
sahf
fsubl
mov
je
fldenv
sbb
out
jnp
mov
ret
cwtl
cmp
or
js
out
cwtl
jno
xor
out
jle
movsb
push
pop
push
test
jp
inc
ret
ss
mov
pop
mov
test
stc
sbb
cmp
and
xchg
subb
les
mov
or
jb
mov
or
xchg
fwait
cmp
insl
mov
js
jg
in
cld
cltd
push
xor
or
xchg
jae
fcoms
inc
xor
call
mov
in
rolb
lea
adc
cltd
bound
or
mov
in
sub
dec
ror
fwait
nop
cld
les
push
repz
mov
mov
rorb
mov
fdiv
fistl
je
loop
mov
cli
adc
test
mov
cmpsb
dec
push
out
add
fsubr
scas
ds
orb
rcrl
es
sbb
clc
push
test
mov
push
rcl
cli
jns
mov
jno,pn
pop
pop
and
or
lock
jl
sbb
bnd
mov
in
pop
inc
shrb
icebp
cmpsb
and
call
inc
or
pop
fidivs
add
fidivl
sub
mov
lahf
jp
ss
daa
sbb
pop
imul
add
adc
nop
das
sbb
jb
fisubl
push
dec
add
inc
push
aaa
fistl
cmpl
into
dec
inc
pop
dec
rcr
vmovq
and
sub
sbb
adc
adc
jne
sbb
lret
out
add
inc
sar
and
aas
lea
push
out
das
dec
stc
movsl
notl
add
leave
mov
xchg
xchg
xchg
xchg
xlat
cmp
bound
xor
orb
outsb
jl
jecxz
es
cmp
push
sub
les
icebp
mov
orl
dec
xchg
inc
mov
int3
daa
sbb
inc
mov
add
aad
js
in
dec
add
int
cmpsb
push
icebp
mov
decl
pop
xlat
inc
or
mov
decl
inc
clc
pop
jmp
dec
mov
cmp
jmp
and
jno
popa
jle
xor
das
cmp
ljmp
daa
xchg
test
jmp
sbb
jno
clc
fnstsw
je
fbstp
mov
or
flds
movsl
in
or
ret
jno
adc
in
out
and
popf
repnz
dec
aad
rcll
int3
sbbb
jmp
shlb
dec
in
jns
or
jl
cmc
out
xchg
dec
mov
cmp
mov
xchg
mov
loopne
xor
aad
icebp
sbb
test
call
ss
push
leave
jno
call
fsubrl
aam
ljmp
sti
sbbl
dec
js
push
or
test
fyl2xp1
je
clc
out
mov
inc
inc
dec
sti
sbb
cmc
clc
push
add
push
repnz
add
iret
out
mov
into
fadds
hlt
jno
scas
xchg
imul
and
outsb
pop
lcall
add
add
or
sahf
adc
xor
add
jne
fcmovnbe
clc
dec
pop
test
push
lods
jp
push
je
xor
sub
mov
sbb
cmp
outsb
scas
or
sbb
stc
insl
and
mov
dec
loopne
adc
pop
leave
xor
adc
xor
fdivs
mov
add
and
add
xlat
je
mov
dec
sub
inc
aas
xor
call
dec
and
inc
push
xor
jno
movsb
mov
stc
dec
mov
push
add
sbb
idivl
cli
xor
xchg
jo
fists
mov
loopne
jb
imul
pop
xchg
rorl
xor
push
test
in
add
xlat
push
push
push
inc
cs
adc
les
jae
mov
mov
pop
enter
mov
cwtl
ss
xor
dec
sbb
ljmp
ja
aaa
cmp
inc
cmp
xchg
push
popa
xor
dec
js
xchg
xor
cwtl
jp
dec
xchg
fdivrs
mov
adcb
inc
add
jo,pt
cltd
pop
mov
cmp
je
ds
ret
dec
dec
arpl
adc
lock
lods
std
inc
lods
out
outsb
js
sub
or
xorl
cmp
sbb
loop
ror
fidivrs
fistpl
int3
push
mov
scas
out
popa
fwait
inc
mov
or
scas
rsqrtps
cmc
pop
xor
outsl
in
fwait
mov
mov
xchg
add
adcb
mov
stc
adcl
sbb
fwait
pop
push
rclb
inc
xlat
test
int3
lock
stc
out
cmp
fidivs
movsb
in
push
fldenv
dec
incl
pop
or
sbb
out
sub
shrb
dec
test
jecxz
fnstcw
pushf
fdivs
pop
push
xor
add
sbb
cmp
inc
cld
push
jno
lret
rorb
icebp
int3
adcl
insb
imul
xor
repnz
pop
cmp
dec
xchg
fidivrs
loop
lret
lret
ss
inc
sbb
mov
mov
xchg
in
mov
and
cmp
adc
adc
add
data16
imul
adc
xor
stos
and
out
test
inc
stc
rcl
sahf
xor
pusha
cmp
hlt
push
je
std
aaa
divl
movsl
in
push
test
xchg
addr16
adc
inc
aad
jmp
jb
add
adc
mov
dec
clc
cmp
inc
lds
and
data16
lods
shll
mov
adc
or
xchg
sub
xor
adc
sti
push
int3
jns
push
push
mov
lret
les
cmp
jge
pop
out
stos
mov
xchg
mov
cmp
push
jae
lods
out
jbe
sbb
loopne
mov
lcall
imul
arpl
push
sbbl
jae
dec
jb
jo
cwtl
jnp
add
add
out
xchg
xchg
xchg
fxch
sbb
xor
aad
int
lea
mov
adc
xorb
repz
pop
mov
push
shl
cmp
adc
mov
xlat
jne
push
repnz
xchg
jg
or
out
and
test
in
xor
inc
loop
xlat
loopne
ss
or
and
imul
das
frstor
adc
mov
xor
ja
enter
mov
pusha
gs
or
or
or
mov
mov
sbb
stos
out
cmp
test
dec
aad
jno
lea
in
jg
jle
les
dec
inc
cmpsl
mov
cs
outsb
jnp
adc
out
xchg
xor
aas
addr16
adc
sbb
xchg
mov
cmpl
shll
sbb
jno
mov
xlat
in
jecxz
sbbl
inc
lods
adc
or
int
lcall
push
lcall
dec
loope
pop
xchg
push
leave
mov
sub
mov
cmpsb
jno
mov
inc
push
fisubl
mov
divl
lret
das
pop
aad
mov
mov
mov
sbb
adc
data16
add
nop
dec
mov
xor
mov
jae
mov
cli
push
hlt
adc
movsl
push
rol
lahf
dec
nop/reserved
pushf
push
addr16
out
fs
ficoms
outsl
enter
fnstcw
add
mov
aaa
lods
mov
mov
cmpsb
orb
jbe
cmp
sbb
outsl
pop
pop
push
out
ja
add
xchg
cmp
in
xchg
xor
dec
pop
dec
lods
fwait
inc
sbb
xor
sti
rcr
clc
in
cmp
adc
push
jmp
adc
lcall
pushf
aad
jmp
leave
inc
lcall
push
enter
js
xchg
and
jp
int3
fsubr
lds
test
loopne
mov
outsl
add
enter
adc
loop
xchg
inc
inc
push
sarl
testl
add
outsb
div
mov
out
fidivl
sbb
lcall
cmp
add
sahf
rclb
push
mov
addb
xchg
xor
sub
hlt
and
xor
loope
int3
lcall
and
data16
repz
push
cwtl
mov
jo
jecxz
push
xchg
cld
out
out
inc
sbb
mov
cmp
sbb
cltd
adc
insb
inc
scas
ret
popf
sbb
jns
fdivrl
jo
test
dec
inc
jecxz
cli
xor
xchg
or
out
sahf
movsb
jno
notl
jns
daa
adc
mov
sbb
jp
push
loopne
pop
fadds
inc
add
test
into
lret
int
cmp
fcmovb
in
fimull
pushf
inc
data16
mov
push
call
push
sub
out
cltd
fwait
sub
push
pop
mov
xchg
inc
pop
push
aam
pushf
lds
loope
mov
sbb
inc
cmp
or
inc
push
add
adc
cmpsb
adc
jno
inc
ret
js
pop
pop
cwtl
cmpsb
mov
call
xchg
add
aas
xor
or
lock
and
outsb
roll
fs
les
push
test
xor
sti
iret
jle
roll
test
jbe
mov
hlt
inc
data16
aas
sub
sahf
fisubs
xchg
or
lret
or
popa
adcb
scas
cld
jmp
pushf
dec
pop
test
stos
out
jge
sbb
loopne
sbb
adc
jecxz
mov
or
dec
add
das
jmp
cs
ja
or
inc
dec
call
sub
or
xor
movsl
fsubrs
pop
mov
add
aas
in
xor
in
cli
cmc
mov
icebp
cmp
pop
movsb
dec
mov
stc
in
mov
inc
xor
imul
ja
adc
jne
std
pop
or
scas
push
mov
stos
stc
adc
pop
sti
inc
int
xor
push
jg
xor
push
dec
roll
test
adc
cmp
insb
shr
loope
xor
lcall
mov
add
xor
ljmp
add
ret
ret
xor
adc
inc
xchg
fwait
xlat
dec
dec
cld
mov
push
sahf
xchg
outsl
into
shlb
adc
sub
xchg
jmp
or
mov
xor
test
sbb
ljmp
sub
sbb
jge
push
gs
push
loopne
dec
adc
adc
pmullw
shl
adc
aaa
cmp
repnz
pop
sti
xor
adc
leave
nop
mov
pop
inc
stc
sti
and
push
cmp
sti
leave
mov
sub
cmpsb
and
fdivr
mov
cmp
jne
and
fsts
add
adc
addr16
dec
sbb
xor
dec
je
out
or
inc
pop
cld
aad
popa
mov
subb
addb
or
mov
push
das
mov
stc
or
ljmp
rolb
das
je
push
sbb
test
fnsave
jns
mov
hlt
rorb
sbb
aaa
es
scas
fdiv
sbb
jmp
jbe
lret
mov
mov
or
jl
sbb
xor
xor
movsb
insb
repz
xor
xlat
mov
mov
mov
and
adc
scas
out
sti
fwait
daa
pandn
fwait
popa
xchg
daa
cmpb
idivb
call
sbb
mov
and
rorl
mov
hlt
loop
lret
xor
gs
xchg
pop
xchg
xchg
js
nop
out
push
sbb
rcrb
cmpsb
xchg
inc
cmp
or
inc
aas
out
inc
xchg
imul
jg
test
dec
fs
xor
fldcw
ljmp
xor
movsb
mov
or
adc
add
pop
mov
int
popf
jno
push
sub
xchg
sub
icebp
jecxz
out
movsl
fnstenv
jg
cmp
jo
and
or
iret
pop
call
shll
daa
sbb
and
lds
negb
pushf
lret
rclb
dec
aaa
cmp
ljmp
jecxz
adc
cmp
inc
mov
sbb
pop
addr16
je
inc
xorl
or
sbb
jle
xchg
mov
mov
cwtl
inc
subb
push
lock
mov
pushf
and
jns
ljmp
push
lock
sahf
ret
pop
lret
inc
mov
mov
ljmp
orl
fisubs
xchg
dec
cmc
loopne
incl
in
aam
sarb
or
push
dec
push
lcall
xor
sub
hlt
cld
shrb
mov
push
fstpl
ret
stos
adc
int
mov
mov
idivb
ljmp
movsl
in
xchg
or
lret
xchg
lret
adc
add
in
jle
push
adc
in
dec
into
fldt
shlb
push
cltd
movsl
push
add
fsubrl
enter
mov
int3
push
insl
ljmp
out
pop
add
lea
inc
cmpsl
dec
push
iret
mov
jno
pushf
lcall
fisubrl
rorb
push
mov
cmp
or
xor
jmp
adc
mov
jnp
mov
push
push
test
push
and
pmuludq
dec
push
ds
dec
fnstcw
out
aad
movsb
cmpsl
push
pop
mov
xchg
cmp
stc
into
test
xor
daa
push
push
jb
push
xor
and
in
jae
cld
push
stos
repnz
mov
push
lcall
imul
insl
push
sarb
divb
jecxz
into
xor
dec
lret
adc
js,pn
push
shll
inc
pop
int
cmc
mov
in
pop
dec
push
fnsave
lods
les
xchg
xchg
mov
add
imul
push
mov
or
popf
test
sti
add
xchg
and
daa
adc
stc
lahf
std
jge
scas
dec
push
and
aam
push
mov
sti
sub
jno
add
cmpsb
push
sbb
mov
jp,pn
arpl
mov
or
mov
ret
sti
cwtl
cli
push
sahf
mov
sbb
clc
aaa
daa
int
lock
mov
scas
xchg
cltd
bound
stos
adcl
push
shrl
cs
jo
lods
jo
adc
cmc
jle
daa
pop
daa
das
out
cmpsb
push
inc
pop
push
add
push
pusha
mov
lret
call
lret
xchg
add
sub
mov
clc
sbb
mov
pop
cmp
adc
mov
sub
jmp
jp
jp
mov
adc
and
mov
int
aas
inc
mov
sub
gs
adc
mov
xor
dec
adc
cmc
das
rol
sti
pushf
in
rcl
pop
adc
cmc
hlt
rorl
add
mov
out
push
out
pushf
outsb
fisttpll
pop
sbb
sub
bound
into
mov
fnstenv
sbb
mov
fdivrs
add
outsl
aaa
test
push
add
xor
dec
loop
pop
adc
mov
shl
bound
fsubr
movsl
cmp
das
adc
scas
arpl
decb
xor
push
jo
or
outsb
ljmp
cmp
xchg
push
clc
or
sbb
in
aas
mov
mov
sahf
cwtl
iret
sub
out
repz
mov
cmp
mov
sar
les
fnstsw
or
push
rcrl
cltd
xor
push
popf
enter
inc
cmp
pop
icebp
idivl
and
test
rclb
sbb
divl
aam
mov
mov
add
jp
inc
int3
aaa
in
fdivrl
cwtl
add
or
negb
icebp
jmp
cmpsl
sub
xchg
push
push
cmpsb
mov
hlt
lods
push
xchg
jmp
xchg
push
ret
in
xchg
push
in
pop
cmc
cmpl
mov
pusha
dec
aaa
imul
adc
dec
dec
cs
pushf
sub
or
push
xchg
or
xchg
dec
mov
jb
sti
mov
mov
fwait
shl
daa
movsb
cmp
ret
pop
mov
mov
pop
mov
xor
scas
xchg
packsswb
xchg
inc
jle
mov
adcb
ficoml
mov
cmpsl
xchg
push
ja
stos
sub
nop
nop
xchg
jg
cmpb
out
sub
pop
sbb
loope,pt
mov
rcr
pop
mov
cmpsl
jg
ret
es
xchg
cmp
lods
insb
xchg
or
pop
mov
pop
aad
jl
stos
xor
lcall
lcall
jnp
lahf
in
sub
mov
mov
hlt
inc
pop
mov
imul
jnp
sbb
lret
push
pop
mov
jl
inc
decb
dec
inc
out
je
mov
inc
dec
xchg
loope
pop
negl
mov
int
and
inc
pop
inc
je,pt
stos
inc
xor
jno
add
mov
pop
pop
addr16
mov
lods
into
jno
pusha
stos
xor
stos
inc
lret
lret
jns
pop
dec
cmpsb
hlt
outsb
bound
and
and
adc
cmc
add
xor
xlat
cmp
lods
pop
mov
add
popf
int3
jne
sub
lret
lock
icebp
inc
fwait
lret
test
fwait
mov
aad
les
sbb
jg
repz
stc
jbe
ja
js
adc
test
add
divb
mov
mov
pushf
js
cwtl
jne
movsbl
data16
test
xchg
mov
sub
xchg
push
and
xor
adc
add
sub
or
pusha
andl
cmp
pop
push
mov
lret
in
and
in
fbstp
nop
pop
xchg
mov
xchg
movsb
mov
pop
int3
xchg
jl
sbb
push
mov
pop
ficompl
mov
pop
sbb
movsb
fs
inc
in
rcrb
or
lods
in
in
jmp
mov
push
data16
mov
jp
push
insl
nop
testb
cltd
pop
adc
leave
nopl
push
jo
mov
ds
and
shll
mov
fcoms
sub
inc
les
lret
jnp
mov
int3
dec
fsts
xchg
pop
add
out
aad
inc
ror
inc
ljmp
push
lea
mov
xor
pusha
sub
or
repz
sbb
divb
inc
loop
aad
add
sub
xchg
push
fstpt
jmp
int
pshufw
sbb
adc
cld
out
es
xor
dec
into
push
xor
mov
outsb
xchg
div
mov
sti
int
decl
lds
add
jmp
and
inc
cltd
daa
or
lods
xchg
popf
dec
jg
loop
addl
sbb
dec
add
ds
inc
cltd
incb
cmc
lods
aam
pop
je
lock
xchg
or
mov
int
aad
ljmp
insb
sbb
jmp
sub
es
sbb
mov
mov
adc
loope,pt
insb
mov
push
icebp
push
xlat
sbbl
aam
sbb
xchg
addr16
cmpb
cltd
nop
dec
jb,pn
jle
stos
cmpl
mov
xor
add
js
push
js
push
aad
sbb
and
fdivrl
add
lea
leave
adc
dec
mov
popf
jp
cmp
das
xor
inc
mov
or
cmp
mov
and
test
sbb
les
js
push
fsts
cmpsb
sub
ds
ljmp
adc
xor
ss
jl
and
lahf
sub
mov
cld
xor
pop
das
and
jae
ljmp
adc
ret
ret
movl
inc
aas
push
cltd
mov
and
test
in
and
int
fs
pop
shrb
ss
cmpl
aas
adc
fldl
jno
and
xchg
rorl
adc
out
push
cltd
fists
stc
sbb
mov
and
mov
and
mov
dec
pop
test
cli
test
dec
mov
popf
arpl
out
xchg
pop
movsl
mov
push
mov
pop
fcoms
leave
sbb
lods
test
daa
push
sbbb
fists
sahf
push
fcomi
jg
mov
outsb
mov
pop
outsl
mov
jl
rol
xchg
cmpsl
xchg
dec
jmp
pop
mov
mov
xchg
jecxz
add
xchg
adc
movsl
xor
and
insb
bound
scas
sub
push
push
gs
mov
cmp
add
jecxz
xor
inc
xchg
jo
movsl
ds
dec
sub
jbe
ret
dec
stos
and
or
jecxz
push
int3
flds
sub
rcll
push
test
es
mov
repnz
push
repnz
daa
scas
ljmp
mov
shl
notl
dec
roll
fstpl
clc
cmp
sbb
in
std
out
imul
test
cmc
sub
mov
dec
add
inc
xor
insb
test
mov
pop
pop
scas
les
pop
inc
xor
mov
sbb
adc
push
jne
clc
int3
gs
pushf
push
xchg
jnp
jecxz
fwait
mov
xor
mov
addb
clc
cmp
addr16
in
jl
nop
aas
imul
aam
adc
push
out
andb
jb
sbb
inc
mov
xchg
in
pushf
xchg
subl
adc
gs
sub
jmp
aaa
testb
pop
push
mov
dec
shll
mov
lods
std
push
lods
dec
insb
adc
mov
neg
aas
mov
mov
cmpsb
scas
cmpsb
xlat
iret
and
inc
movsb
std
in
push
cmp
fidivrl
push
inc
jecxz
push
xor
fisubs
or
sti
aad
sub
ficomps
jp
jg
fs
mov
pop
cmp
mul
cmpsl
lock
lds
and
mov
mulb
ret
lock
sub
adc
mov
mov
pop
sbb
cltd
fildll
inc
iret
pop
daa
rol
daa
nop
mov
rdmsr
or
inc
popf
rcll
ss
mov
iret
ljmp
cld
add
jp
push
icebp
xchg
dec
leave
sahf
inc
mov
rcll
pusha
add
fistpll
xchg
or
cmpl
mov
push
xlat
or
xchg
cmp
mov
les
int3
xor
lret
popa
and
adc
negb
xor
mov
imul
popa
js
lret
testl
lods
test
test
ja,pn
loop
outsb
dec
out
fistl
mov
lea
sub
xor
dec
test
test
clc
jle
xchg
xorl
shrb
in
outsl
in
scas
xchg
scas
test
inc
pop
js
xor
rolb
imul
mov
bound
dec
mov
cmp
shl
cmp
push
clc
mov
mov
repnz
xchg
lcall
roll
das
jl
jae
adc
dec
xor
adc
sbb
inc
pop
aaa
sbb
mov
and
movb
js
aam
dec
out
add
pop
mov
jno
aas
sub
clc
pop
jnp
fs
add
inc
pop
lahf
test
push
or
bound
add
test
sub
pop
into
sub
xchg
or
and
pop
adc
in
mov
das
add
cmp
sbb
fnstsw
cmp
jl
push
mov
lret
pusha
addl
inc
idivl
ja
push
fcompl
popaw
dec
push
ljmp
adc
ret
int
sbb
dec
out
ror
xchg
adc
popf
sbb
push
add
mov
jmp
or
inc
pop
fisttpll
sbb
aaa
xchg
fs
jno
pop
and
push
shrl
xor
jg
ss
ret
push
insb
mov
fwait
push
cmp
test
ret
stos
mov
movsl
dec
xchg
arpl
hlt
fcmovnbe
cmpsl
and
fsubp
cmpsl
sub
inc
mov
sbb
cmp
jb
mov
dec
cmp
lock
fiaddl
add
es
scas
loop
pusha
jl
scas
mov
pop
mov
jg
and
xchg
divb
mov
add
je
ljmp
outsl
adc
add
adcl
jmp
iret
dec
jno
cs
mov
adc
push
mov
jnp
jmp
pop
lods
fmull
ret
mov
or
or
push
ss
cmpl
adc
sub
mov
add
jb
jno
aaa
sarb
jns
push
mov
xchg
xchg
dec
and
test
into
dec
enter
in
cmp
rcl
loope
mov
push
xchg
out
loop
fisubrs
add
dec
enter
cmpb
js
jns
imul
pop
sti
mov
push
and
and
mov
iret
sub
dec
xchg
aas
scas
gs
js
sub
inc
es
add
pop
jl
xchg
mov
dec
int3
xlat
icebp
push
repnz
pop
pop
xchg
add
or
pop
mov
mov
scas
movsb
ds
mov
ss
mov
ror
push
das
push
adc
orb
roll
dec
repz
jns
jnp
mov
clc
fnstcw
jle
les
out
mov
push
dec
lods
mov
or
cmpsb
pop
andb
mov
add
sbb
cmp
in
adc
xchg
mov
push
xchg
inc
xor
fwait
or
cmpsl
dec
mov
test
mov
cli
testl
pop
stc
cld
dec
push
push
push
add
fbstp
orl
cld
sti
mov
lods
in
popa
cld
ja
jno
lret
aam
pop
fisttpl
popa
pushf
mov
and
ret
mov
and
aad
and
test
jbe
fwait
jae
push
dec
cvtps2pi
repz
js
les
mov
jae
mov
sbb
sahf
pop
bswap
mov
fwait
inc
xchg
das
cs
or
out
mov
xor
and
xor
outsb
pusha
fistpl
jo
fs
lret
adc
test
pop
or
insl
dec
setl
lret
aam
jae
cmp
int
insb
sbb
pop
popf
xchg
loopne
push
fsubs
mov
fisttpl
arpl
ljmp
sub
adc
push
or
jns
stc
fmuls
inc
xchg
orl
lret
xchg
notl
xor
xor
sbb
scas
call
mov
push
push
adc
push
fwait
push
mov
mov
cwtl
cmp
int3
add
shlb
xchg
mov
jg
jmp
std
add
loop
jnp
xchg
arpl
mov
mov
inc
bound
arpl
or
std
gs
mov
pop
pop
inc
adc
dec
mov
rcl
sub
mov
mov
add
in
adc
adc
push
jb
add
icebp
adc
add
nop
or
mov
movsl
xchg
add
insl
mov
out
push
lea
sbbl
sub
sub
test
shrb
call
xor
add
mov
lds
jnp
std
aam
test
lods
inc
jmp
jmp
scas
pop
adc
arpl
in
sub
push
dec
into
mov
enter
jbe
test
or
addb
or
shll
into
ja
loope
pop
sbb
xchg
cmc
push
popa
rorb
pop
aaa
jmp
sahf
cmp
ljmp
pop
mov
insb
daa
mov
arpl
scas
cs
jae
xlat
sbb
leave
push
mov
loope
sub
mov
inc
adc
fidivl
rcrb
mov
stos
lcall
loop
cltd
push
and
or
cmp
pop
lahf
lret
gs
push
negl
lcall
scas
add
pop
inc
cmp
out
and
add
jae
inc
in
int3
cmp
cltd
xor
das
fisubl
scas
push
js
pop
dec
roll
adc
leave
cmp
jo
jecxz
cmp
jmp
std
in
arpl
stos
mov
push
or
insb
push
inc
dec
in
lret
jp
scas
cmp
xlat
idiv
add
shrb
add
aas
pop
sbb
cld
pop
ds
ja
fadds
sbb
push
cmpsb
mov
pop
pop
xor
push
fwait
shll
inc
xchg
popf
cli
xor
ret
inc
in
dec
and
in
es
adc
adc
xchg
or
jne
mov
js
xchg
mov
dec
push
ret
movsl
insl
outsl
or
sbbb
out
and
clc
mov
scas
cmc
icebp
pop
sbb
cmc
dec
aas
ret
test
movsl
push
and
stos
insl
push
mov
dec
sbb
test
das
sbb
mov
out
loop
or
pushf
mov
fnstenv
lahf
xacquire
pushf
mov
ret
add
dec
jg
cld
sqrtps
adcb
jns
jge
jmp
in
lea
clc
add
cs
arpl
mov
push
ret
loope
and
aad
add
hlt
repnz
push
mov
add
int3
pop
loope
cmp
sub
xchg
in
jae
and
loopne
mov
aaa
gs
push
fidivl
jle
fildll
dec
bound
xor
sahf
lcall
inc
jecxz
insl
pusha
and
adc
sbb
sbb
fistl
xchg
adc
or
mov
int
in
addb
fistpll
cmpsb
pop
ror
outsl
mov
or
mov
lret
inc
xor
js
inc
or
ss
xchg
subb
pop
in
xchg
mov
lods
pop
scas
fcmovnbe
pop
push
xchg
iret
out
imul
jp
cmpb
movsl
fisttpll
jl
push
dec
dec
dec
jne
sbb
mov
cwtl
ret
push
shlb
mov
imulb
xlat
lds
fs
out
incb
mov
push
xchg
mov
sbb
dec
jnp
in
std
mov
lods
jmp
fcoml
cli
add
test
insl
adc
jmp
mov
xor
sbb
adc
or
loope
add
inc
daa
and
xchg
lds
lahf
shlb
pop
sahf
sbb
sbb
and
into
rcrb
imul
cmpsb
shlb
int3
repz
cmp
sbb
sahf
sub
sbb
sti
pop
jnp
cmp
sbb
adcb
mov
lds
pop
and
shrb
ljmp
ja
shlb
test
imul
add
int
jno
scas
push
sti
ret
xlat
outsb
je
xchg
rclb
mov
cmpsl
fpatan
imul
inc
das
or
cmp
test
addr16
test
mov
and
fwait
xchg
adc
jl
pop
push
add
push
not
push
and
leave
xor
sub
adc
push
mov
jle
adc
test
xchg
scas
test
cli
mov
sbb
adc
mov
loop
int3
add
shl
cld
shrb
sahf
nop
and
jle
shr
fwait
inc
outsl
add
sub
and
stos
or
insl
ficoml
movsl
mov
jns
pusha
xor
and
adc
inc
das
xchg
hlt
pop
stos
scas
in
push
test
mov
sub
lds
aas
imul
push
inc
sub
sub
repz
xor
sub
in
fstpt
mov
stos
addr16
inc
stc
stos
mov
imul
data16
push
or
fwait
test
imul
xchg
mov
pop
es
xchg
and
jbe
adc
and
test
aaa
test
mov
or
adc
sahf
jp
or
fwait
inc
addl
ja
mov
int3
mov
das
jnp
cmp
lcall
dec
xor
or
ss
popf
inc
jg
stos
jge
stc
insl
test
les
in
daa
repz
out
push
and
sub
push
adc
stc
adc
call
les
out
push
pop
lret
inc
pop
call
imul
pop
push
in
sbb
call
aam
fcmovne
fdivrl
loopne
stc
loopne
xor
cmp
mov
sbb
sarb
insb
addr16
test
fisubs
dec
fiadds
jle
sub
cmp
test
in
jae
pop
clc
and
inc
pop
sbb
sbb
or
jno
push
std
in
imul
sbb
pop
push
push
loope
imul
scas
mov
xor
pop
ja
cmp
fidivrs
inc
movsb
inc
mov
sub
or
outsb
movups
bound
cmp
mov
adc
arpl
movsl
sbb
or
xchg
add
inc
xor
push
fimuls
jge
in
ror
dec
pop
in
jo
dec
add
and
cmc
jp
mov
ret
jae
ds
xor
inc
fisubs
jecxz
push
int
test
cli
stos
aaa
jae
push
or
dec
fdivrl
cmp
add
push
xchg
inc
stc
or
cmp
dec
das
or
fsubrl
lret
push
aam
or
inc
sbb
mov
jmp
call
scas
nop
inc
add
xor
push
pop
stos
lock
std
dec
inc
cld
stc
lcall
sub
mov
shl
xchg
pop
fidivs
sbb
add
xchg
test
in
in
mov
stc
sbb
jbe
mov
and
fldt
gs
pop
ret
mov
addr16
lock
inc
adc
jle
jb
out
and
push
out
or
ljmp
lods
and
and
jmp
icebp
movsl
or
into
das
negl
test
mov
mov
stc
mov
cmc
sub
pop
inc
adc
loop
sub
sbb
aas
js
incl
lret
lods
inc
sahf
dec
push
aad
push
nopl
out
dec
jne
xchg
mov
roll
mov
rcr
mov
stc
pushf
in
pop
pop
stos
pop
push
and
xchg
std
sub
pop
mov
movsb
xor
dec
jg
xor
ds
mov
jns
jo
mov
mov
sbb
dec
jns
popf
ja
dec
inc
fistps
bound
xchg
dec
jecxz
cwtl
xchg
ret
sbb
aaa
clc
pop
sbb
or
mov
lds
das
dec
cltd
or
je
xchg
ja
mov
jecxz
mov
loope
test
cmp
xchg
fldt
cs
dec
test
mov
pop
into
cmp
inc
sub
add
mov
and
mov
ja
adc
and
jb
xor
faddl
clc
push
sub
adc
loopne
jae
dec
jg
popa
out
jl
xchg
hlt
mov
dec
cmpl
dec
fsubr
leave
pop
jnp
push
enter
and
inc
loope
bound
nop
mov
xchg
jecxz
and
mov
movsl
pushf
cmc
out
xchg
notb
aas
cld
pop
mov
ret
inc
cli
mov
nop
loop
cmpsb
sub
inc
cmp
sti
xor
dec
enter
dec
jns
inc
pop
sarb
adc
in
ss
cltd
push
xchg
inc
clc
lahf
push
xlat
and
test
and
pop
outsb
mov
pop
cs
lcall
div
add
dec
cmp
add
jo
jb
xchg
test
into
push
daa
arpl
lock
sbb
and
push
sub
pop
pop
insl
and
iret
add
or
stos
insb
sub
pop
pop
lods
inc
inc
xor
cmpsb
jns
addr16
or
add
add
test
mov
push
scas
loope
movsl
aad
rol
jp
adc
dec
rorl
xor
imul
aad
add
ljmp
scas
pop
sar
jle
sub
or
subb
push
and
pushf
cs
mov
mov
hlt
ret
mov
out
xchg
mov
sub
lods
ficoml
inc
shlb
xor
inc
dec
push
aaa
add
mov
adc
dec
push
mov
jae
cmp
cld
push
out
fildl
xchg
add
out
jbe
cmp
je
lock
stos
mov
repnz
nop
mov
nop
jnp
push
imul
loop
push
mov
and
sti
mov
sub
mov
clc
fsubr
nop
hlt
pop
je
sub
mov
pop
sub
shlb
jmp
add
and
jb
pop
out
ret
ss
sub
xor
insl
add
mov
popa
in
xor
pop
call
loopne
xchg
shll
jb
mov
ja
mov
dec
add
dec
popa
sahf
shr
and
or
ret
fisttpl
aam
jns
pop
mov
xchg
imul
lahf
sarl
jge
sbb
sub
or
in
mov
adc
arpl
insl
loopne
cmp
inc
sbb
mov
cs
pop
pop
jbe
sarl
adc
jecxz
push
out
lret
jo
cmpsl
jae
movsl
inc
mov
fistpll
shlb
push
adc
add
aad
sub
outsl
cmc
clc
sub
push
jmp
rcr
fbstp
sbb
push
add
dec
setb
pop
adc
aad
inc
push
pop
aas
pushf
inc
mul
js
fcoml
addb
and
scas
add
mov
inc
sub
jge
xor
lret
push
cs
xchg
pop
adc
loopne
lret
lcall
shrb
pop
loopne
push
stos
add
data16
fcomi
cmp
add
inc
les
addl
stos
aad
jmp
or
adc
cmp
ret
mov
ret
xchg
xchg
std
pusha
rclb
js
punpckldq
insb
das
inc
xor
or
adc
or
pushf
push
and
lods
bound
sahf
inc
lock
mulb
addr16
enter
jg
jle
xchg
cmpsl
pop
test
and
jb
mov
andb
cwtl
adc
loope
mov
outsl
mov
adc
cwtl
addr16
inc
inc
xchg
or
fisttpll
jl
mov
cmp
cmp
or
or
pushl
cmp
cmp
cmpsb
mov
push
repz
push
push
dec
cmp
adc
mov
jno
cmp
xchg
fs
sub
and
cmp
jp
sbb
in
rclb
sub
xor
mov
data16
jmp
in
dec
xor
ucomiss
pop
cmp
enter
lea
jmp
lret
test
loop
pop
mov
faddl
incb
mov
mov
add
insb
imul
mov
je
lret
pop
ss
test
test
add
push
mov
cmp
jne
add
outsb
pop
sbb
aas
jmp
dec
add
xchg
add
jg
jmp
sahf
mov
mov
adc
pop
xchg
pop
pop
sbb
lret
sub
mov
xchg
arpl
mov
cmp
pop
mov
jo
push
and
aad
cmc
int
rclb
scas
test
mov
leave
adc
scas
mov
push
movsl
and
cs
popa
sbb
repz
clc
mov
cmp
xchg
call
xor
ret
inc
lods
lcall
in
insl
dec
mov
dec
mov
aaa
enter
mov
or
push
xor
movsbl
jg
add
sbb
mov
sub
dec
flds
inc
mov
pop
arpl
mov
and
xchg
into
les
jno
adc
or
cltd
nop
aam
jmp
mov
mov
dec
push
mov
subl
dec
sub
out
sub
into
pop
aaa
or
inc
ror
or
out
jp
lods
or
sbb
ss
inc
push
push
xchg
sbb
mov
leave
or
test
jl
dec
mov
add
into
pusha
test
shll
pop
hlt
jmp
inc
and
adc
stos
arpl
cmp
insb
adc
mov
push
mov
loope
mov
mov
cmc
push
sub
jbe
add
clc
xchg
sub
enter
in
int
push
mov
ret
xchg
add
in
pop
cwtl
subl
fstl
sbb
pop
jne
xor
xor
or
mov
rol
xlat
jbe
xchg
outsl
shl
fcomps
test
inc
fsubr
adc
jnp
insl
push
push
xor
lret
mov
clc
lcall
add
xchg
mov
jg
jne
add
cmpsb
cli
adc
sbb
lods
pop
aas
shl
mov
lahf
aad
fnstsw
mov
jo
sbb
cs
repz
xchg
push
mov
inc
add
pop
cmc
cltd
mov
outsb
pushf
adc
mov
jle
dec
mov
dec
sbb
insl
ret
test
cmp
jbe
nop
lock
jmp
ja
jle
out
mov
and
rcr
subb
push
xchg
stos
into
xchg
dec
mov
in
or
ds
stos
mov
outsl
sub
dec
test
xchg
lcall
addl
add
clc
mov
lods
cmc
stos
add
call
add
aad
adc
test
mov
popf
test
or
hlt
jbe
frndint
in
jnp
and
mov
lahf
insb
add
push
jmp
out
addb
ret
cmpsl
or
popf
rcr
aaa
mov
sub
pop
add
xor
xchg
jle
push
lret
jo
outsl
mov
mov
mov
popf
inc
insl
mov
in
into
sub
int
push
testb
lods
pop
mov
cmp
icebp
jmp
xchg
int
aas
xchg
negb
push
mov
cmp
sbb
loop
fs
call
test
pop
mov
and
push
lods
pop
insb
jp
mov
sub
push
and
repnz
sub
inc
xor
cwtl
aam
cmc
daa
mov
loopne
adc
loop
push
pushf
xor
mov
test
sahf
test
movsl
fwait
xor
inc
sub
loop
cmp
xchg
imul
xrelease
mov
push
push
lods
inc
cli
push
enter
inc
xchg
push
repz
mov
jnp,pn
jnp
mov
xlat
cli
xchg
cmp
in
jne
fucomip
cs
sbb
add
pop
sbb
xchg
pop
add
push
jge
push
mov
inc
movsb
pop
in
xchg
add
push
inc
shlb
aaa
mov
push
ss
adc
idiv
mov
out
adc
lods
rcl
leave
mov
mov
xchg
addr16
icebp
adc
xchg
stos
dec
sbb
xor
ds
mov
mov
into
out
sub
jl
fistps
xchg
inc
mov
dec
jl
xchg
je
push
test
sbb
ficoml
inc
divl
mov
xchg
push
sbb
xorb
push
mov
pop
and
mov
inc
add
push
sbb
fnstcw
mov
imul
jo
pop
test
mov
lret
sti
jl
in
cmp
mov
fdivs
clc
mov
jge
test
mov
aaa
cmp
pop
xchg
cmp
or
push
push
add
cmc
fdivr
ret
fstpl
fildll
push
jg
into
mov
cwtl
ficompl
sub
adc
or
lds
in
sahf
lret
mov
fidivrs
std
call
aam
cmpsl
stc
jns
mov
enter
and
adc
jo
or
pop
mov
mov
loop
fs
movb
in
imul
push
inc
push
mov
in
pop
mov
jecxz
dec
add
mov
xchg
out
push
xor
dec
sbb
pop
inc
push
shl
xor
add
adc
push
stos
xlat
xchg
arpl
jae
cmp
jg
xchg
or
fdivs
adc
adc
test
xchg
cld
dec
mov
into
mov
push
ficoms
dec
test
jge
push
push
pop
fcmovnb
xchg
sub
in
fidivs
repz
jg
lock
mov
nop
ret
cmpsb
mov
xor
shrb
and
sbbl
sbb
bound
iret
mov
outsl
in
mov
into
fadds
daa
push
inc
lea
push
or
jp
pop
mov
pop
mov
dec
mov
dec
add
push
or
adc
xchg
dec
sbb
inc
cmc
scas
out
sbb
insl
fstpt
loopne
pushf
inc
cmpsl
jae
pop
cmp
xor
into
cmpsb
fs
or
pop
call
ds
rcr
std
scas
adc
dec
ds
cwtl
dec
jle
loope
std
ljmp
xor
push
mov
push
stos
or
mov
jmp
sar
fcomps
mov
sbb
mov
dec
push
push
push
notb
sbb
leave
hlt
pop
cwtl
xchg
dec
jecxz
out
push
and
cmp
mov
cmp
incb
xchg
pop
mov
jne
add
outsb
decl
xor
adc
movsl
or
xor
jp
je
cltd
ficoms
hlt
mov
aam
movl
lret
cmp
scas
cmp
xlat
mov
shll
adc
cwtl
cmp
adc
gs
pop
cmpb
js
inc
loopne
aam
in
mov
rolb
xchg
mov
push
and
mov
test
push
dec
sbb
imul
jns
xor
sbb
fld
in
cmp
call
cmp
jbe
dec
dec
xchg
lods
dec
shlb
adc
jg
test
dec
pop
notb
arpl
iret
scas
aam
lcall
jae
or
mov
push
add
and
andl
rcll
jmp
int3
idivb
add
iret
stos
push
inc
mov
inc
scas
ficoml
mov
leave
and
std
loope
inc
push
jmp
out
inc
xorb
mov
mov
mov
jge
mov
xchg
add
xchg
jbe
out
and
and
ret
jecxz
outsl
xor
pop
jns
mov
cmp
frstor
outsb
mov
enter
add
sub
cmp
mov
mov
sub
mov
repnz
pusha
lods
stos
xor
xlat
adc
test
aaa
sub
enter
sti
imul
stc
cs
movsl
aad
sahf
mov
pushl
and
les
ret
je
sbb
or
adc
popf
ljmp
aad
mov
xchg
cmp
scas
pop
ret
mov
add
cmp
and
mov
aas
adc
add
mov
xor
ret
roll
cltd
dec
popf
mov
xor
push
dec
jge
mov
inc
mov
sbb
icebp
cmp
mov
loopne
pushf
loope
leave
inc
hlt
add
jb
pop
int3
rcrb
mov
pop
pop
add
inc
stos
jl
adc
aam
das
fistpll
nop
xor
in
or
fisttps
idiv
dec
decl
out
mov
dec
fidivrl
repnz
cmp
jae
out
cli
sub
xchg
aas
cmpsb
sub
inc
dec
jbe
ja
or
sbb
jns
cmpsl
cmpsb
or
insl
data16
imul
push
inc
add
mov
lock
repnz
shrd
out
notb
jecxz
jb
inc
ja
in
std
mov
add
pop
fbstp
or
sbb
jge
sahf
add
popf
xchg
stc
push
fmul
xchg
roll
sub
es
ret
pop
pop
cmc
mov
mov
cmpsl
jae
repnz
jo
sti
pop
popl
mov
iret
pop
jns
outsb
aaa
pop
pop
and
inc
jg
xor
mov
jns
out
pop
mov
dec
dec
jae
jmp
adcl
scas
add
xchg
dec
jle
popa
test
push
pop
and
sbb
popa
mov
xor
sbb
adc
shll
push
loopne
pop
push
fdivs
adc
mov
popf
xor
cmp
add
jecxz
mov
popf
mov
or
dec
jl
cs
lret
lods
sub
adc
rcrb
xchg
cmpsb
pop
adc
mov
or
mov
pop
mov
pusha
cmp
xchg
cmp
mov
push
icebp
in
mov
out
loope
stos
jg
shl
leave
stos
cltd
mov
cmp
push
pop
pop
rorl
test
lods
mov
sbb
call
mov
cmp
ffreep
dec
cld
in
cli
xchg
push
arpl
rcll
pop
loope
jne
clc
add
xchg
stc
push
dec
cmp
out
sbb
sbb
pop
mov
sub
rcr
gs
clc
fwait
jno
fisubs
repnz
scas
sbb
or
call
ljmp
jmp
mov
and
or
or
inc
fisttpl
xchg
dec
arpl
lods
pop
imul
push
inc
dec
mov
add
out
pop
in
cwtl
inc
bound
inc
jns
stos
dec
clc
pop
inc
test
push
mov
stos
subl
aad
in
add
mov
repnz
scas
call
mov
push
xchg
js
das
movb
mov
jg
or
lret
or
mov
sbb
sub
adcb
out
jbe
stos
sub
clc
frstor
imul
loop
jge
int
xor
std
stos
mov
sub
data16
xor
cmp
aas
iret
daa
jge
dec
mov
rorl
sub
and
mov
test
xchg
sbb
push
mov
mov
fnstsw
xchg
jmp
out
pop
fists
jmp
mov
jmp
aas
and
int
mov
clc
xor
hlt
imul
sbb
in
sub
fwait
pop
dec
pop
pop
testb
daa
cs
jmp
mov
mov
xor
jae
inc
dec
stc
fadds
inc
or
sbb
call
jl
fwait
jg
cmp
shrb
sub
in
sti
scas
sarl
into
pop
or
jb
mov
ficompl
aaa
jmp
push
sti
mov
pop
jle
cmp
loop
jmp
and
mov
jp
icebp
cmp
clc
iret
lea
lahf
lock
and
push
addr16
ss
mov
sbb
mov
inc
dec
jg
mov
sbb
sub
mov
xchg
fisttpll
add
fst
xchg
fistl
and
mov
popf
push
xchg
push
ret
xlat
and
or
adc
cld
icebp
fistpl
test
xor
fiaddl
test
pop
out
mov
test
mov
lds
xchg
xor
iret
and
repz
je
push
sub
inc
into
xor
cld
nop
test
fldenv
jb
pop
mov
cmp
fcomps
ret
and
fstl
dec
mov
mov
or
lea
push
jge
icebp
shr
pop
shl
xchg
pop
pop
cli
iret
jge
add
call
and
sub
and
outsl
mov
loop
inc
pop
cwtl
push
leave
cmp
fidivs
xchg
adc
aas
xor
mov
pop
aam
fiadds
out
add
mov
cmp
test
shll
pop
addb
mov
xchg
or
call
cmp
into
loope
cmovle
add
xchg
xchg
mov
mov
pop
mov
push
or
add
int3
out
movsb
in
add
push
cmp
add
add
pop
testb
jmp
inc
sahf
test
cmpsl
enter
pop
push
xchg
mov
aam
adc
fistpl
jl
daa
aam
rol
xchg
mov
mov
ret
in
and
int3
inc
xor
push
ja
aad
clc
pop
inc
push
dec
inc
jle
add
jg
rcrb
dec
mov
or
pop
rcr
lcall
insb
cmp
sbb
pop
or
in
popf
mov
fdiv
xchg
into
and
cmc
lds
dec
fs
jnp
lcall
jmp
mov
enter
or
dec
ret
nop
jns
jns
or
cltd
ja
aas
pop
lock
push
scas
mov
das
std
adcl
std
stc
add
ret
leave
mov
sarl
int3
in
lcall
pop
inc
cli
mov
rorl
push
lds
and
mov
cmc
cli
jecxz,pn
xchg
push
je
ljmp
lock
jg
push
mov
cmp
enter
imul
jbe
mov
sahf
add
mov
mov
gs
cmp
lods
pushl
adc
popf
cmpl
sub
dec
cmp
adc
dec
dec
shl
aad
mov
sbb
call
jbe
negb
outsb
cmpsl
push
call
mov
sarl
jecxz
mov
jb
scas
pop
dec
inc
test
xor
fsubl
popf
adc
inc
std
inc
lods
fdivrp
pop
cmc
adc
pop
fwait
popa
pop
loopne
ret
clc
lahf
das
xor
inc
pop
or
test
daa
shlb
ret
je
pusha
pop
xor
or
dec
mov
mov
jl
adc
dec
cmc
dec
out
mull
pop
mov
jp
pusha
fidivs
xor
pop
mov
mov
and
cmpsl
jecxz
pop
lock
xlat
sub
inc
aaa
push
ffree
icebp
adc
and
popa
rep
sub
fildl
jmp
sahf
into
pop
mov
hlt
cwtl
mov
mov
cmp
pop
dec
push
fdiv
push
out
mov
shll
and
loopne
and
ss
daa
push
mov
fimull
mov
gs
mov
mov
xor
stos
xchg
xlat
push
xchg
xchg
push
test
lods
pusha
out
or
mov
jb
aas
loopne
pusha
pop
add
mov
sub
int
leave
lcall
xchg
mulb
jle
pop
addl
inc
and
pushf
inc
daa
sti
insl
adc
mov
test
add
xlat
mov
xor
lea
dec
or
in
ds
enter
jne
adc
add
jo
out
cmpsb
aaa
cmp
int
mov
pop
mov
insb
out
loop
pop
pop
jno
mov
xor
out
sub
and
mov
and
into
out
fwait
dec
mov
imul
pop
sahf
mov
icebp
out
push
fmuls
pop
pushf
test
enter
and
mov
clc
mov
jae
stos
enter
cltd
push
inc
mov
inc
adc
inc
leave
stos
divl
imul
std
dec
dec
dec
int3
pushf
lahf
das
cmp
pop
movsl
mov
inc
jo
arpl
cmp
jmp
sub
insb
push
xor
jp
sub
ret
addr16
dec
imul
aas
xchg
adc
sbb
sarb
int
or
dec
jp
push
loope
and
scas
dec
dec
mov
xchg
int
and
nop
jne
int
mov
dec
jb
sub
insb
jp
loop
sub
lcall
in
adc
xchg
jns
cs
push
jbe
ljmp
mov
shll
xchg
ds
xchg
lret
stc
adc
xchg
cwtl
jecxz
xchg
push
cmp
popa
xor
sbb
and
jle
lahf
shll
aam
xchg
or
add
lahf
sbb
pop
mov
push
mov
outsb
ja
mov
mov
jecxz
iret
shrb
frstor
inc
fwait
lcall
mov
popa
jnp
push
or
shl
mov
popf
inc
mov
shl
push
or
int
push
mov
std
repz
sub
ds
mov
adc
fcoml
imul
fidivs
mov
fsts
mov
pusha
stos
rcl
mov
mov
xchg
xor
les
ds
cmpl
adc
pop
in
aad
add
rcl
fs
xor
fwait
outsl
sarl
adc
dec
popa
push
jl
mov
das
xchg
mov
notl
cmp
xlat
mov
and
testl
popa
push
andb
movsb
mov
mov
push
lods
and
xchg
fisubl
call
inc
movsl
insb
inc
cmc
dec
jne
fdivrl
hlt
ret
cmpsl
ja
test
in
fnsave
in
std
mov
adc
inc
mov
lahf
adc
rorb
outsb
pop
dec
rcrb
mov
test
push
push
imul
push
mov
xchg
hlt
test
jg
push
cli
xchg
inc
cmp
inc
mov
pop
xchg
or
outsb
xchg
and
call
sahf
jl
cwtl
xchg
adc
shl
cmp
add
xor
xor
inc
clc
cld
in
insl
scas
ds
xchg
movb
std
mov
imul
inc
call
aam
imul
pop
fst
and
test
jge
mul
les
mov
mov
cltd
xchg
jle
lock
and
dec
lahf
js
rolb
rcll
dec
fcomip
shlb
aad
lret
gs
fists
loope
mov
popa
arpl
int
imul
cs
pop
js
pop
testl
jl
mov
ret
aaa
gs
add
outsl
test
sub
stos
sub
adc
jae
sub
pop
lock
aas
pop
dec
jne
mov
call
cld
test
imul
cmp
xor
push
adc
mov
or
decl
push
pop
jmp
fwait
rclb
pushf
es
lods
and
mov
loope
dec
insl
ljmp
add
push
dec
push
out
outsb
out
adc
ficomps
mov
pop
add
jns
mov
mov
xchg
nop
inc
dec
sahf
insb
out
dec
dec
fs
cmp
xchg
xorb
aad
sbb
dec
mov
lcall
bound
pop
sub
inc
loope
pop
jb
fs
stc
std
call
aam
add
adc
pop
mov
mov
mov
das
je
popf
addr16
sub
das
cmp
into
incl
into
jo
aad
add
imul
jp
dec
jb
mov
daa
aam
aaa
pop
cmp
xchg
cli
in
add
sbbb
inc
dec
adc
je
repnz
xchg
ret
xor
aaa
sub
test
sbb
mov
push
mov
aad
lea
inc
dec
stos
jecxz
shr
aaa
sub
fnsave
dec
mov
jecxz
mov
mov
shll
cmp
add
lcall
push
ror
lods
sbb
mov
sub
cmp
icebp
int
jnp
je
sahf
mov
in
lds
pop
push
lds
sbb
cltd
aaa
subb
dec
mov
out
inc
sbb
repz
and
loop
jae
inc
js
test
test
pop
aaa
jae
or
inc
call
ret
dec
mov
pop
xor
mov
shrl
ret
popa
pop
ja
ss
das
movsw
dec
test
je
push
aad
inc
in
enter
mov
cli
repz
jmp
lods
sbb
xchg
outsl
jg
gs
mov
js
popa
aam
mov
ret
push
in
inc
mov
cmp
dec
stos
sbb
fldcw
push
out
fbstp
or
pop
xor
sarl
jnp
ret
test
cltd
testb
cmp
pop
adc
call
fcomps
je
jns
notb
shll
addr16
pop
dec
and
inc
sub
ja
and
xchg
movsl
cmpsl
bnd
push
mov
clc
pop
imul
nop
ljmp
repnz
shlb
sub
adc
outsb
je
loopne
sub
xlat
in
mov
stos
jp
jge
roll
cwtl
ss
and
jmp
cltd
les
aam
es
sbb
mov
sbb
adc
pusha
jns
mov
add
mov
mov
hlt
jo
inc
adc
pop
jge
loop
js
lretw
xlat
test
lea
pusha
push
icebp
push
gs
push
sbb
mov
push
stos
push
push
shrl
lods
aam
add
push
sub
divb
xor
mov
inc
neg
rolb
xchg
sbb
nop
lds
fdivrl
jbe
mov
push
mov
or
addr16
loopne
push
cmp
adc
pushl
repnz
lds
cmp
pop
push
sti
pusha
jne
and
inc
adc
stos
sub
sbb
daa
add
sbb
add
jmp
xor
jns
or
mov
inc
adc
push
cltd
xor
cmp
sub
adc
sub
xchg
movsb
fcomip
icebp
pushf
nopl
sbb
data16
pop
mov
pop
mov
sub
push
mov
mov
xchg
jg
les
jnp
icebp
test
mov
xchg
and
or
add
cs
cli
mov
aas
stos
inc
dec
inc
jno
je
or
and
xchg
out
popa
repnz
or
rorl
insb
aaa
in
mov
push
add
and
clc
lret
movsl
fcoml
pop
inc
or
sbb
loop
aad
aaa
pop
xchg
das
gs
jbe
in
xor
inc
stc
outsb
clc
lods
sbb
mov
ret
cli
scas
inc
movsb
hlt
decb
lods
mov
lea
mov
or
and
jae
or
enter
mov
mov
subl
lahf
mov
ret
cmp
cmc
lret
sbb
mov
or
dec
cmc
lret
lods
loope
and
push
adc
jnp
jnp
sahf
pusha
aam
es
inc
sub
scas
add
xchg
int
jae
sbbl
mov
xor
push
imul
test
push
inc
push
sub
aam
lods
xor
insl
sahf
inc
insb
adc
cwtl
inc
and
repz
mov
add
mov
shrl
mov
push
ret
inc
daa
xchg
mov
sub
inc
out
inc
scas
mov
xchg
movzwl
mov
jl
fs
popa
dec
rcll
and
or
pop
or
add
sahf
out
das
test
add
push
cmpsb
orl
stos
js
aas
nop
dec
mov
and
dec
xchg
shll
flds
popa
jp
xchg
gs
sub
lcall
cmc
out
and
mov
adcb
adc
sub
push
mov
stc
mov
sbb
leave
mov
data16
pop
mull
lods
dec
xor
mov
test
sub
test
je
jne
fucomp
push
movsb
mov
lret
dec
inc
aad
sbb
add
mov
push
fcoml
jns
xchg
cmp
cmp
mov
int
pop
mov
jns
add
mov
xchg
mov
sti
xchg
push
sbb
mov
push
push
hlt
fisttps
xor
or
jecxz
or
out
pop
pop
jbe
pop
aam
jo
add
pop
xchg
pop
cltd
push
mov
sbb
int
and
sub
mov
xchg
cld
add
ds
or
mov
sub
push
sahf
push
and
dec
push
repnz
outsb
imul
sbbb
or
cld
mov
clc
jb
inc
mov
jbe
pop
pop
pinsrw
test
call
pop
dec
push
mov
test
push
cmpsl
push
jbe
rcll
mov
sbb
inc
cmpsl
iret
ffreep
into
movlps
sub
rorb
adc
add
cltd
xchg
or
mov
imul
mov
into
cmp
add
xchg
rol
xor
add
cmp
rcrb
leave
push
xor
pop
jne
cltd
xchg
xchg
jne
shl
xchg
rcrl
inc
pop
xor
dec
enter
mov
mov
loop
or
movsb
lods
mov
push
xchg
test
fwait
lret
jge
int3
mov
pop
lahf
xchg
imul
lret
cli
int3
add
or
jno
pushf
add
lods
stos
daa
data16
les
xor
mov
or
sbb
in
xchg
out
les
add
mov
in
sub
adc
xor
jmp
hlt
xchg
pop
xor
fsubr
rorb
jl
push
and
push
imulb
jecxz
mov
sahf
and
ret
cmp
iret
mov
fcoml
and
sti
push
aad
pop
cmpsl
dec
outsl
cli
inc
push
icebp
mull
fdivr
cmp
jle
js
pop
add
out
das
shlb
and
add
es
mov
adc
fs
sub
in
sub
adc
clc
dec
push
cmp
lahf
cmp
ret
jbe
lds
mov
mov
lea
in
mov
lods
lods
pop
dec
mov
insl
inc
xlat
or
jmp
pop
inc
jecxz
mov
test
or
cmpb
fsubl
inc
mov
and
xchg
xchg
push
call
dec
or
or
xchg
mov
fstpl
or
enter
fs
sub
andb
pop
add
jne
and
in
divl
rol
pop
ss
mov
push
in
popa
inc
xor
push
push
and
dec
dec
mov
adc
into
dec
and
adc
jge
push
js
xor
push
inc
bound
gs
sub
cmp
dec
nop
or
das
push
inc
jg
adc
test
mov
out
nop
inc
mov
fnstenv
les
and
push
xlat
out
add
faddp
mov
mov
call
inc
fwait
rolb
mov
xchg
dec
pop
dec
ss
push
std
lea
adc
lahf
add
push
xor
xchg
in
mov
pop
adc
mov
mov
add
rorb
push
scas
add
sti
xor
repz
cmp
subb
inc
jle
out
fsubp
fdivs
roll
ljmp
bound
inc
jge
mov
hlt
sbb
hlt
inc
pushf
jecxz
xchg
shl
push
imul
pushf
ds
sub
lret
imul
xlat
and
xor
mov
and
mov
cli
or
repnz
fwait
push
arpl
xor
inc
shl
adc
xchg
aad
mov
leave
bound
fstpt
inc
fidivrs
stos
xor
out
ja
mov
mov
jno
xchg
pushf
xlat
mov
jl
xchg
mov
xchg
pop
or
inc
fdivs
push
jns
xchg
sbb
add
mov
or
lea
xchg
ret
mov
loop
sub
mov
fs
cmp
js
dec
cmp
shl
pop
add
ds
enter
sarb
jl
in
icebp
sahf
int
xor
and
leave
lea
ss
int
mov
cli
push
outsl
int3
sbb
clc
push
adc
je
xchg
test
shll
inc
lea
push
imul
mov
lret
pop
std
push
addb
xchg
mov
sar
xor
jl
negb
mov
cmp
xor
adc
stos
inc
pop
lds
je
rorl
arpl
mov
mov
xchg
and
jl
mov
push
xor
dec
sbb
shll
sub
frstor
cwtl
sub
add
cwtl
arpl
fdivr
push
imul
mov
enter
cmc
out
push
loopne
mov
xlat
fbstp
sbb
mov
jo
jecxz
xor
mov
mov
sub
fisubl
add
das
pop
xchg
iret
inc
fimull
gs
out
and
cmp
icebp
sbb
shr
fildll
mov
stos
push
add
sarl
test
xor
lret
and
cli
or
sub
inc
ja
sbb
scas
jp
mov
push
mov
jmp
pop
bnd
and
or
or
pop
nop
push
ss
and
jo
fldl2e
ljmp
cmp
lea
les
mov
adcb
out
or
xchg
hlt
and
push
loop
in
xchg
mov
pop
jns
cmpsl
mov
bound
outsl
jae
testb
push
pop
fisttpl
cld
pusha
hlt
fsub
cmp
test
adc
and
add
mov
mov
dec
jge
xchg
push
mov
xchg
mov
add
insb
or
sub
dec
fidivrl
cmp
push
stos
jmp
leave
popl
or
or
pop
mov
push
and
iret
mov
loop
adc
xor
sbb
int
cltd
lds
lahf
sub
pop
xchg
out
mov
push
inc
adc
int3
or
lods
xchg
pop
rolb
data16
fwait
pop
loopne
cmp
xor
sbb
jge
inc
jecxz
jbe
pop
sbb
lea
sub
push
push
test
aad
mov
sbb
out
lea
repnz
jl
loope
adc
mov
or
shlb
cmp
sbb
cmc
std
or
push
call
push
loopne
out
rcll
mov
test
add
js
jae
push
xchg
add
insl
add
xor
shlb
out
sbb
mov
test
jmp
stc
outsl
insl
leave
int3
subb
and
adc
add
div
jno
cltd
push
xor
jl
int3
cld
sub
sbb
imul
pusha
cmp
mov
or
test
jp,pn
in
repnz
stc
addl
lret
outsl
xor
popl
xchg
fs
hlt
dec
and
mov
mov
test
ss
push
fcomp
jne
movsl
xor
fcmove
cmp
dec
sbbl
add
cmp
add
xor
push
in
cmp
pop
push
shrl
scas
cmp
popf
xchg
jnp
leave
mov
fs
push
inc
stc
dec
inc
je,pt
jno
push
inc
mov
xor
xlat
aad
hlt
adc
loope
mov
subl
push
push
sub
push
aaa
cmp
fwait
pop
orl
or
in
leave
lea
cmpsb
not
fsubrs
adc
push
adc
add
and
cmpsl
bound
or
neg
insb
test
xor
inc
cltd
inc
jge
fcoml
inc
mov
imul
push
insl
mov
call
cmc
lods
or
sbb
int
pop
pushf
addr16
sub
dec
or
xchg
shll
xor
mov
stos
jmp
test
cmp
add
int3
mov
inc
adc
daa
leave
sahf
push
jb
jne
add
mov
sbb
test
decl
adc
je
jl
xchg
push
jbe
push
jbe
mov
divl
mov
push
sbb
fmuls
movsb
jl
movsl
dec
dec
cmp
ds
pop
xchg
jbe
lods
inc
das
mov
add
andb
fistps
mov
cmc
jbe
fnstcw
lds
sbb
mov
lret
xor
dec
push
xchg
jecxz
les
jmp
popf
mov
incl
xchg
sar
mov
mov
ss
cmp
mov
or
push
pop
dec
add
mov
cmpsb
pushf
sub
mov
push
lods
inc
jns
pop
jmp
mov
cli
stc
bound
and
ret
fistpll
dec
outsl
ljmp
or
inc
les
popa
dec
dec
jnp
lods
fisttps
outsl
sbb
inc
jge
pop
repz
fcomip
add
stos
loope
mov
inc
sub
mov
pushf
shrb
pop
lods
dec
cmp
sub
fnstenv
hlt
jbe
addl
adc
cwtl
adc
dec
cmpsb
icebp
inc
jnp
popa
sbb
js
xchg
das
pushf
pop
stos
ret
adc
pop
jbe
pushf
pop
sub
shll
flds
push
nop
lods
mov
pop
adc
iret
lods
iret
int3
xchg
jmp
sbb
cmp
mov
fiadds
test
push
hlt
and
and
sub
push
repnz
subps
in
adc
or
leave
scas
inc
xchg
mov
xchg
popa
adc
mov
pusha
pop
lahf
enter
dec
fisubrs
cs
loope
mov
cmpsb
fdiv
mov
pop
imull
push
cmc
lcall
mov
cmp
out
mov
cmp
gs
push
in
jge
jae
aam
xor
mov
stos
sar
daa
decw
sbb
mov
sbb
outsb
and
mov
adc
and
sti
mov
mov
mov
and
loope
stos
repnz
adc
fildll
mov
enter
lods
mov
mov
and
add
inc
jnp
popf
mov
and
jecxz
out
xchg
clc
push
mov
dec
outsb
ror
mov
xchg
pushf
fidivl
push
jb
addb
enter
adc
hlt
ss
jmp
out
cmc
aaa
sar
fisubrs
mov
je
fsts
jns
inc
icebp
out
and
cli
add
mov
jb
push
ljmp
aaa
imul
mov
jne
test
pop
popf
cmp
aaa
mov
iret
rclb
sub
mov
fidivrs
push
push
jbe
test
mov
inc
out
inc
mov
or
ss
insl
aam
es
and
lods
xchg
pop
movsl
out
or
iret
notl
xchg
pop
sbb
bound
jno
sub
or
jbe
fisubrs
arpl
sbb
jo
xchg
loop
enter
lea
mov
adc
nop
pusha
fisubrl
aad
pop
push
jb
jle
add
mov
push
fisubrs
ret
xor
outsl
aaa
movsb
imul
mov
mov
push
lcall
push
jo
outsl
mov
inc
enter
testb
pop
sub
nop
sub
jle
ds
pop
jo
fdivs
jmp
xor
xor
push
imul
xchg
or
add
mov
ja
mov
in
mov
cmp
pop
add
push
sub
xchg
add
fiadds
insb
xchg
lods
fcomps
mov
sub
mov
xor
adc
or
fwait
and
mov
iret
mov
inc
xchg
ja
push
lcall
push
and
mov
add
inc
jg
sub
cld
lea
jle
and
fldt
jmp
pop
inc
shll
mov
dec
push
cmp
and
jno
movsl
clc
out
push
arpl
addl
mov
dec
lret
es
or
negl
mov
dec
leave
jg
mov
sbb
mov
cltd
push
jmp
fwait
pop
inc
xor
repnz
xor
xor
fmul
rolb
mov
pop
enter
decb
mov
cmc
and
cltd
pop
xchg
adc
fwait
xchg
arpl
cwtl
xchg
xchg
push
xor
add
shrl
push
movsl
adc
or
mov
cmp
pop
lods
or
inc
loopne
lret
mov
push
xchg
mov
xor
pop
or
aam
in
std
or
int
sbbl
xchg
mov
sub
loop
xlat
stc
das
sbb
test
loope
mov
jno
test
push
lods
push
mov
sbbl
mov
cmp
xchg
and
add
js
fstpl
faddl
pusha
cli
inc
rcrb
inc
xor
cltd
pop
mov
mov
in
lret
out
adc
inc
movsl
sub
out
fmuls
out
gs
dec
stc
mov
pushf
jecxz
data16
xor
fs
test
xor
mov
test
dec
arpl
outsl
and
out
es
or
push
inc
shlb
sub
enter
cld
jbe
jb
push
cs
pop
inc
aas
scas
cmp
outsl
add
clc
aas
pop
jns
in
rcrb
hlt
mov
push
andl
jl
sbb
pop
int
rclb
gs
push
lahf
push
clc
or
movsb
lock
xor
adc
mov
inc
or
mov
mov
ljmp
dec
mov
scas
inc
push
jecxz
cmpsl
lock
idiv
mov
inc
and
xchg
jmp
ret
std
je
xchg
jb
pop
cmpsb
loop
or
sub
jl
fistpl
mov
xor
or
nop
or
jge
cmpsl
popf
repnz
mov
orb
sub
cltd
scas
into
addl
push
inc
out
pop
push
push
les
and
ss
sub
mov
adc
inc
je
xchg
pop
xor
fidivrs
add
pop
cld
and
scas
add
repz
mov
and
test
mov
fwait
push
push
mov
or
gs
and
xchg
scas
sbb
jmp
xchg
mov
fidivrl
add
lods
mov
cmp
jg
and
push
in
outsl
xor
jp
call
fwait
and
fidivl
cwtl
iret
int
int
lahf
jo
xchg
lret
cmc
gs
or
jecxz
jge
sub
jo
add
loopew
out
cmp
xor
mov
pop
or
cmp
into
inc
inc
lahf
aad
scas
mov
inc
jle
insb
pop
fsubrl
cmp
jmp
mov
cltd
inc
sbb
insl
cmp
push
popf
fists
aaa
xor
les
add
lock
cli
cmp
notl
je
enter
or
jecxz
push
sub
or
lahf
hlt
fimull
add
mov
aas
mov
push
xchg
xchg
pop
and
popa
icebp
push
popa
mov
adc
lahf
fwait
mov
fisttps
pop
jne
lods
fs
mov
jo
jns
je
out
push
and
jne
ds
iret
aad
or
jne
fcmovbe
dec
aaa
mov
xchg
fwait
xchg
je
pop
cmpsl
outsb
jne
gs
lret
cmp
jno
addr16
mov
sub
cmpsb
cld
dec
mov
xchg
pushf
cltd
lcall
push
icebp
rcll
lret
mov
das
scas
das
es
pop
int
je
stos
fiadds
sub
mov
jp
repnz
test
fidivs
ja
xchg
imul
push
push
outsl
cmp
test
cli
mov
xchg
cmpsb
xchg
imul
scas
add
jbe
cli
sbbb
adc
or
cmc
divb
aaa
bsr
lea
ja
add
xchg
sbb
lock
mov
and
repnz
jmp
das
cmp
mov
aaa
and
sbb
hlt
fdivr
or
mov
jp
sbb
mov
repz
sbb
sbb
add
dec
fists
imul
cmp
mov
pop
pusha
inc
inc
daa
adc
call
sbb
jne
insl
push
pop
pop
xchg
pusha
jnp
xor
cwtl
sub
inc
xor
hlt
std
cwtl
xchg
les
add
lods
cltd
mov
test
in
dec
test
sub
in
sbb
das
mov
xor
std
pop
xor
or
inc
cmpsl
test
mov
mov
dec
je
mov
pop
xor
and
or
into
dec
inc
sti
repnz
and
repnz
popa
or
mov
movsl
in
jae
arpl
jp
adc
pop
push
pop
xchg
jb
jo
xlat
das
and
addl
push
jmp
outsl
dec
xor
mov
lods
push
enter
mov
and
add
cmp
inc
dec
mov
es
gs
jge
adc
adcl
push
pushl
int3
into
or
roll
dec
scas
mov
pushf
aam
xchg
in
sub
nopl
jmp
add
xor
jb
int
xor
dec
jb
push
lahf
cld
push
stos
sbb
test
or
mov
fcomps
gs
mul
in
mov
push
cltd
in
sub
pop
incl
xchg
lret
jl
test
xor
sbb
pop
dec
aaa
adc
arpl
sbb
pusha
lret
inc
and
jmp
xchg
or
xor
mov
out
xchg
dec
mov
mov
dec
out
cmpsb
jge
mov
mov
int3
iret
incb
or
add
inc
icebp
xchg
push
pop
fcompl
pop
fs
mov
mov
pop
sub
add
sahf
fsubrs
pop
and
push
imul
ja
fsubrs
inc
mov
lret
test
fldcw
aam
rcll
jns
sub
insl
xorb
jl
jmp
es
xor
in
aaa
cmpsb
mov
sti
mov
xor
test
negl
or
cmp
clc
push
xchg
fidivl
stc
sub
or
dec
test
jecxz
mov
mov
mov
orl
bound
icebp
push
push
sub
cmp
sub
out
push
xor
inc
dec
js
mov
add
fstl
andb
mov
pushf
jae
lods
jns
dec
xor
mov
push
pop
jnp
sub
cmp
negl
pop
pushf
shlb
xchg
and
arpl
push
imul
lcall
jns
push
or
inc
fdivs
out
out
mov
mov
push
inc
std
inc
sarb
sub
idivl
adc
inc
addr16
cmpsl
pop
adcb
ret
jae
js
push
mov
xchg
arpl
sbb
nop
inc
sub
sarb
nop
and
insl
in
mov
cmpl
jg
sarb
daa
cmpsl
sahf
fdivl
pusha
inc
fucom
inc
or
or
and
push
loop
add
repz
jns
aaa
out
mov
lock
inc
inc
aam
and
out
incl
cmp
cmpsb
clc
shrl
repnz
push
mov
sti
inc
and
popa
jbe
call
loope
mov
and
pop
jmp
xchg
fstpl
adc
push
push
jle
gs
daa
push
push
clc
ja
push
les
pushf
push
mov
lods
into
out
shrl
fnop
andl
stos
dec
cltd
negl
aad
adc
xor
push
mov
fimull
and
cmc
test
adc
jmp
pop
add
scas
push
dec
out
lret
mov
fs
sub
clc
aas
and
adc
popa
jne
xor
sub
cmp
mov
xor
jb
sub
and
xchg
push
adc
and
movsb
imul
lret
sub
aad
repnz
push
push
dec
arpl
xchg
stos
push
arpl
testb
clc
int
dec
fdivr
dec
sub
xorb
test
mov
xor
jnp
jp
push
mov
adc
dec
jno
pop
add
cmp
or
in
add
xchg
adc
shll
mov
mov
push
and
mov
nop
movsb
xchg
mov
data16
dec
cmp
adc
xor
mov
sub
arpl
xlat
push
inc
dec
xor
sbb
inc
pushf
sbb
test
jge
xlat
cltd
icebp
jle
adc
sub
mov
add
jne
mov
dec
jo
mov
iret
add
jge
ja
push
imulb
rcrl
pop
scas
lea
mov
pop
xchg
dec
shll
shlb
outsl
xchg
sub
sbb
popa
adc
popf
fcos
popa
lcall
push
or
or
jecxz
or
aaa
movsb
mov
adc
pop
inc
aas
movsl
add
mov
imul
mov
mov
std
jns
pop
rcr
mov
mov
cmc
repz
mov
or
mov
dec
out
push
push
call
das
scas
das
rcr
cmp
dec
aas
pop
daa
stos
mov
xchg
push
insl
push
inc
ds
push
daa
push
cli
add
dec
dec
cmc
sub
push
adc
add
call
add
call
mov
pop
bound
mov
sbb
pusha
mov
push
fwait
ja
mov
les
jg
sub
decb
call
cmp
mov
pop
add
xchg
addr16
push
out
inc
in
ljmp
push
rcrl
pop
xchg
pop
jecxz
jo
mov
shlb
or
loop
adc
sbb
fisubl
shl
lahf
push
ret
sub
shl
pop
cld
xchg
sbb
inc
jle
push
mov
push
mov
pop
sub
fsubr
sub
or
cmovbe
jecxz
sub
add
lret
jo
push
or
xchg
jno
adc
insl
or
iret
cs
add
sub
in
out
into
adc
jns
pop
mov
lahf
arpl
iret
adc
jns
or
pop
stos
mov
loope
mov
std
and
add
jo
mov
or
mov
xchg
sbb
cli
adc
outsl
sbb
inc
int
icebp
sbb
jmp
arpl
aad
jb
push
pop
jb
cmp
push
pop
push
subl
mov
test
fisubs
pop
add
push
inc
cmp
popf
and
daa
or
xchg
inc
mov
xor
fldt
xor
test
inc
mov
push
insl
lahf
and
sbb
jns
fsubrl
aad
or
aas
jno
sbb
dec
add
push
dec
mov
popa
mov
into
filds
jbe
fldcw
sbb
fidivrs
sbb
xchg
out
xchg
pushf
push
lret
data16
aaa
or
clc
or
sahf
mov
repnz
xorl
or
repz
popa
jmp
cmc
cltd
mov
int
dec
add
and
icebp
sti
or
addr16
out
rcrb
roll
inc
test
xchg
roll
mov
cld
cmp
jns
adc
cmp
je
mov
jb
and
mov
xchg
jmp
inc
and
pop
inc
pop
lahf
sub
xor
or
out
insb
les
jmp
cmp
flds
out
aaa
inc
xor
fiadds
ss
out
push
adc
mov
lock
xor
hlt
mov
dec
and
mov
int3
xlat
pop
addl
push
sbb
xor
mov
repz
dec
out
cmpsb
lcall
lcall
jl
in
sbb
inc
push
call
sub
notb
mov
fdivrs
je
push
movsl
mov
out
push
pop
lret
bound
xor
cmp
adc
mov
fcoms
nop
mov
sbb
jae
insb
push
add
cld
inc
mov
lahf
ret
test
and
dec
rorl
in
xor
inc
lret
add
stos
adc
push
mov
jne
mov
pop
dec
sub
pushf
mov
lahf
hlt
jmp
pop
sahf
xor
leave
lods
or
mov
int
mov
inc
and
push
push
add
dec
loopne
inc
loopne
aas
jae
out
push
movsb
movsl
adcb
ja,pn
lock
and
mov
cmp
cmp
or
push
insb
add
jg
mov
dec
addr16
test
in
iret
jg
pop
mov
repnz
xor
iret
pop
and
aas
cmp
lcall
jp
cmpb
stos
ror
fcmovnbe
insl
aad
mov
jmp
mov
mov
jae
mov
mov
icebp
jne
int3
jmp
outsl
push
cmp
subb
ret
mov
fildll
push
test
add
jae
or
push
hlt
xchg
cli
xor
mov
cmc
pushf
add
mov
sbb
shlb
xor
daa
or
enter
sbb
call
fnsave
mov
repnz
push
mov
dec
cmc
jo
test
aad
es
cmp
in
or
jp
lock
cmp
xor
push
movsl
shl
scas
lea
cmp
mov
cmpsb
pop
pop
outsl
inc
xchg
sbbb
jp
mov
inc
push
mov
adc
adc
popf
pushf
jg
push
lcall
sub
das
push
loop
loop
adc
dec
or
pop
pop
insl
enter
mov
sub
dec
xchg
jns
negb
sbb
dec
lret
imul
cmp
and
sub
clc
out
xor
je
sub
xlat
xchg
pop
stc
sbb
xor
out
gs
push
mov
mov
enter
xor
addl
or
xor
out
xor
frstor
push
mov
jno
inc
cmp
leave
push
or
jne
insb
add
ds
rorl
mov
dec
mov
ja
xchg
cmpsb
js
in
mov
push
inc
inc
pop
inc
int3
dec
das
inc
push
or
fcmovnbe
call
adc
fnstsw
outsb
call
sub
jo
lret
gs
xor
or
xor
rorb
jmp
jl
into
lock
ljmp
call
loop
iret
push
aad
mull
mov
sbb
mov
shrb
imul
loop
repz
mov
xorl
sub
mov
add
mov
loop
mov
loopne
jno
mulb
add
sti
jne
hlt
jb
jecxz
jo
nop
ds
sub
lods
push
lcall
int
shll
roll
push
popa
pop
popa
in
or
vpshrdvd
shl
jns
pushf
jno
loopne
sti
leave
push
push
cmpsb
push
aas
add
out
shrb
lea
cmp
mov
fistpll
xor
cmpsb
mov
dec
pop
inc
xchg
and
and
cmpsl
add
mov
jmp
mov
jns
push
arpl
sbb
pop
jge
mov
mov
sahf
sbb
loopne
mov
jae
jo
enter
ja
ret
lret
in
ret
hlt
and
mov
rolb
xor
js
ds
rolb
dec
push
xchg
out
mov
call
icebp
lods
incb
jno
ja
iret
or
ss
iret
adc
push
jbe
jle
bound
addr16
push
jecxz
lods
xor
test
js
outsb
jle
jne
inc
nop
inc
xchg
xchg
rolb
and
push
or
pop
lods
ja
adc
and
shlb
mov
pop
xchg
call
xchg
loopne
rcrb
loopne
mov
inc
daa
fs
sbb
jne
and
pop
repz
out
daa
fisttpll
data16
sbbb
fs
dec
push
cmp
hlt
arpl
mov
adc
sub
outsb
pusha
xor
popf
pop
inc
dec
mov
shll
sub
insb
mov
call
testl
xlat
jecxz
lods
les
lods
sbb
mull
js
in
inc
cmp
xor
mov
mov
mov
fs
pop
jle
jmp
or
sbb
cs
xchg
fistl
jp
push
cld
mov
cmp
pop
push
cmp
xor
outsb
pop
mov
mov
in
mov
das
mov
sbb
and
inc
push
popf
jp
nop
sahf
xor
adc
sbbb
add
in
repz
fstl
repnz
je
sbb
pop
xor
xchg
xor
sti
pop
iret
inc
mov
rcll
cmc
mull
mov
adc
insl
lret
add
mov
xlat
sub
jne
div
push
sub
sbbl
ss
lret
shlb
sbb
in
int
test
adc
jne
jbe
ss
repz
stos
push
jecxz
push
jl
dec
add
lret
loop
fs
push
mov
shl
xchg
sbb
cmp
jnp
aas
or
mov
sarb
jno
dec
and
outsl
loop
mov
push
push
popa
in
pushf
pop
shl
test
adc
mov
stc
nop
aas
ljmp
div
xchg
dec
das
mov
xor
cmp
cmp
jg
iret
xchg
dec
push
ja
jb
pop
loop
outsl
out
pop
adc
jmp
dec
and
dec
dec
push
aam
mov
dec
or
stc
pop
test
sti
ds
and
movsb
xor
adcb
int
das
enter
xchg
and
cmp
push
test
adcl
mov
mov
dec
lds
push
inc
sahf
sbb
dec
int3
mov
pop
or
gs
loop
rcll
and
mov
stc
call
loopne
outsb
cwtl
mov
jns
pop
pop
aaa
sbb
xchg
dec
call
int
movb
xchg
xor
jle
loope
aaa
jge
jno
cltd
stos
inc
add
arpl
sbb
mov
inc
stc
jns
loop
lret
loopne
mov
jecxz
ret
push
lret
pop
rcl
add
inc
in
inc
bound
sti
sarl
int3
je
push
pop
add
test
xchg
or
cmc
or
jl
shlb
mov
cmpsl
add
clc
sub
xlat
sbb
fbstp
xchg
shlb
test
fs
in
jbe
push
shll
mov
xor
push
cld
add
jg
out
dec
shlb
fsubrl
cld
and
cltd
cld
mov
xchg
and
mov
add
xlat
add
pop
or
repz
mov
iret
sahf
cmp
add
lds
inc
aas
inc
repnz
imul
aam
inc
test
ret
test
jle
call
pop
inc
dec
testb
ljmp
xor
loop
sub
or
aas
daa
out
xchg
sub
mov
push
aaa
fidivs
pop
add
int3
loop
rorl
popf
dec
fbld
or
add
or
dec
or
lods
mov
into
popf
sub
insl
jno
push
stos
pop
dec
xor
cmp
push
imul
mov
ret
inc
jbe
das
or
scas
or
mov
sahf
pop
xor
mov
cmp
mov
push
or
sub
inc
cmp
mov
sub
or
out
leave
outsb
dec
dec
inc
mov
out
lret
ror
lcall
pop
and
cmc
jmp
lds
loopne
sbb
mov
fcmovbe
outsl
inc
xchg
xor
inc
clc
and
push
xchg
jg
jmp
pop
fcmovnu
lret
leave
sbb
or
and
mov
int
cmp
sub
push
pop
stos
daa
inc
shl
and
jge
arpl
aaa
mov
inc
enter
out
icebp
nop
sbb
pusha
inc
push
loop
mov
mov
sbb
enter
adc
outsb
inc
push
inc
pop
mov
mov
xor
jno
add
add
iret
pop
test
xor
pop
fs
push
cmp
and
test
test
arpl
mov
loopne
sub
mov
test
cmp
xor
fmuls
outsb
call
sti
jp
cmp
pushf
pop
pushf
add
int
lds
push
push
push
sub
daa
push
test
leave
nop
fistpll
push
cmc
push
test
movq
push
jp
sbb
adc
dec
movsb
cmp
mov
xchg
or
call
mov
into
ficompl
cld
mov
in
jb
inc
insl
fcmovu
iret
call
jmp
push
enter
aad
in
out
rcrb
int
sbb
jae
or
or
mov
ret
sbb
sbb
mov
cs
xchg
inc
dec
push
ficompl
lret
xor
and
push
mov
mov
mov
mov
pop
xor
push
cmp
js
ljmp
jnp
mov
lds
andl
push
cmp
cmp
test
adc
hlt
sarl
fistl
xorb
call
loope
pusha
inc
gs
jb
cltd
xchg
dec
imul
xor
int3
xor
sti
mov
repz
adc
cmp
mov
ret
inc
inc
icebp
andps
sahf
inc
adc
sbb
mov
cmp
into
dec
in
sbb
in
or
xchg
idivb
out
addr16
js
mov
and
mov
sbb
ja
jmp
loop
fsubrs
das
jbe
sbb
add
popa
les
push
shll
pop
hlt
mov
rcl
leave
aas
mov
xchg
sbb
imul
inc
lods
les
cmp
ljmp
lahf
sbb
mov
pop
shl
xor
cmpsb
sub
das
push
sub
in
xchg
sub
pop
pop
stc
ss
pop
and
incb
adc
xlat
pop
cmp
mov
daa
push
pop
push
jl
in
je
iret
adc
push
cmp
outsb
stos
aam
lods
inc
push
inc
sbb
mov
inc
leave
mov
data16
popa
push
push
jbe
data16
ret
cli
dec
repz
fisttps
mov
addr16
cs
add
test
mov
dec
and
mov
rcl
fildll
pop
mov
mov
ret
roll
jne
sbb
fdiv
sbb
mov
and
repz
in
insl
adc
mov
pop
fldl
adc
imul
add
mov
sbb
into
and
lret
xor
push
lods
xchg
add
or
mov
pop
sarb
in
movsl
and
dec
aaa
mov
add
inc
pop
addl
int3
repz
sbb
icebp
idivl
lahf
movsb
cmpsl
orb
test
sbb
lahf
outsb
pop
jl
lods
pop
in
jo
push
call
ss
mov
mov
rcl
aam
les
jp
xchg
push
add
outsl
sbb
fstps
in
mov
xor
fcmovne
mov
jecxz
push
xchg
test
mov
push
movsl
mov
rolb
into
inc
inc
movzwl
aam
fcompl
out
dec
roll
xor
stc
popa
xchg
and
push
xchg
into
test
and
jo
jbe
fstpl
data16
pop
xchg
cs
out
std
imull
and
xor
xchg
lret
out
hlt
pop
iret
repz
sbb
jno
inc
jne
xor
inc
lods
mov
mov
imul
out
lods
mov
negb
pop
icebp
mov
cs
mov
mov
cmpsb
mov
test
or
jne
cmp
sub
insl
or
in
mov
loopne
repnz
jne
pop
cltd
testl
imul
into
mov
bnd
mov
rcrl
mov
xlat
inc
pop
mov
sbb
movsl
outsb
out
pop
sbb
cmpsb
mov
and
xchg
cmp
pop
push
imul
mov
ljmp
cmpl
test
xchg
pop
clc
aad
sbb
mov
dec
es
out
fmuls
pop
inc
fwait
jmp
pop
lods
leave
mov
popf
daa
jb
enter
por
cmp
cmp
mov
inc
sbb
push
les
mov
sbb
or
aam
push
add
mov
cs
pop
sbb
mov
xchg
into
sbb
mov
cmc
inc
adc
sbb
jl
fwait
jle
fists
cli
push
int3
ficoms
inc
mov
push
sbb
imul
in
pop
sbb
mov
in
fstpl
test
dec
lahf
dec
ja
sbb
mull
cmpsl
fsubp
fsub
mov
daa
xchg
xchg
mov
insl
jo
dec
mov
sub
sbbb
test
push
push
sub
fwait
mulb
push
xchg
bound
jae
out
shr
fdivl
pop
mov
lock
dec
xchg
xor
dec
rcrb
out
aas
inc
jl
shll
rcrb
fldcw
std
mov
jl
jmp
inc
ret
dec
clc
and
xchg
adc
pop
adc
std
loopne
mov
push
xlat
out
add
lods
test
add
fbstp
xor
call
fs
push
inc
pop
adc
xlat
out
nop
adc
in
sbbb
and
lea
outsl
jo
push
inc
xchg
rorb
int
sub
and
cmp
add
inc
lret
sarb
sub
mov
outsl
inc
sahf
in
pop
imul
hlt
cmp
out
and
mov
sbb
sbb
mov
cmpb
jo
enter
adc
enter
aaa
xor
adc
pusha
call
pushf
dec
cmpsl
mulb
pop
lret
in
mov
cmpsl
dec
xchg
sbb
mov
dec
mov
xor
div
mull
adc
sahf
inc
icebp
icebp
cmp
loop
bswap
xchg
loop
fwait
inc
mov
pusha
cmp
das
xchg
inc
mov
xchg
test
popa
dec
popf
rorb
imul
push
shll
or
repz
dec
jo
imul
clc
or
loopne
or
inc
mov
jp
fnsave
stos
sbb
inc
xlat
out
js
jb
cli
and
pop
sub
mov
aaa
imul
js
sub
cli
lret
popf
dec
mov
jge
repz
nop
loopne
push
push
test
or
xchg
fmuls
ficomps
jbe
gs
jmp
cmp
sbb
xor
jo
cmc
push
dec
loopne
aam
scas
inc
add
mov
jae
cld
jmp
mulb
sbb
jo
xchg
str
xchg
out
fidivrs
add
mov
push
mov
sbb
jns
and
push
icebp
push
adc
lods
clc
xchg
fcoml
rorb
push
inc
aaa
inc
xor
aam
lea
xor
or
sub
mov
cmp
fsubrs
push
and
in
mov
loop
mov
dec
and
ljmp
xchg
call
mov
fists
test
ret
stc
jecxz
jne
lcall
popa
xchg
cmp
out
jl
and
movsb
xchg
sub
adc
addl
mov
ret
add
mov
std
push
fistl
lods
orb
push
xlat
sbb
and
inc
dec
leave
test
mov
pop
fidivs
daa
pop
mov
xor
sub
and
add
xchg
clc
and
loop
test
xor
or
and
mov
jae
jnp
jne
or
cli
adc
fdivr
sbb
push
popa
jecxz
mov
out
lods
movsl
xor
and
ja
pop
xor
cmpb
inc
xor
add
jne
dec
mov
push
and
je
jecxz
lahf
out
shrb
ljmp
xchg
mov
outsl
jb
or
es
movsl
rorl
data16
mov
rorb
mov
scas
in
cmp
inc
pop
push
mov
data16
add
fsts
cmp
neg
icebp
clc
inc
gs
je
mov
pusha
xorl
jge
adc
loopne
cld
lahf
cmc
pop
call
sti
cmp
adc
xchg
insb
movsl
jb
ljmp
jbe
and
cmc
dec
mov
decl
clc
in
rcrb
addr16
outsl
cmp
call
clc
sbb
sub
imul
dec
cmp
mov
dec
dec
xor
jns
xchg
adc
fcom
lcall
loop
test
add
pop
adc
pop
push
inc
mov
sub
lds
jge
imul
icebp
aam
ljmp
mov
jmp
xchg
clc
loop
loope
push
push
outsb
fldenv
sbb
sbb
jecxz
icebp
cmpsb
push
mov
in
movsb
adc
jl
jp
fildll
sub
and
test
cmp
aas
adc
add
dec
subb
or
or
cltd
jbe
jecxz
negl
nop
cmp
das
js
dec
mov
divl
or
jns
out
ret
mov
mov
call
mov
mov
xchg
xchg
sahf
and
out
sbbb
jne
adc
mov
sub
ljmp
test
testb
repnz
mov
pop
push
adc
sti
scas
mov
pop
adc
fcoml
xor
jle
jge
daa
shll
inc
test
mov
jmp
shll
insb
cmp
pop
xchg
and
xlat
cmp
icebp
pop
push
repnz
inc
les
lahf
mov
aam
mov
lahf
pop
jo
push
jo,pt
xchg
dec
cmpsl
in
mov
jo
cmp
pop
add
push
loop
pop
in
iret
data16
in
push
nop
popf
popf
mov
pop
call
repz
jnp
xchg
xor
addr16
jg
les
sti
xchg
in
repnz
pop
sub
jmp
pop
inc
mov
inc
jbe
push
cmp
imul
mov
lcall
xor
insb
pop
cltd
pop
or
jg
test
lcall
push
sub
add
out
mov
stos
mov
ljmp
pop
mov
push
mov
ja
xchg
pop
push
jg
aaa
int
and
adc
icebp
fs
push
lahf
pop
in
vphsubbw
test
inc
sbb
push
lahf
lcall
xor
push
pusha
bnd
pop
mov
loopne
in
xorb
xor
inc
sub
decb
xchg
push
enter
xor
sbb
adc
aaa
shrl
jbe
mov
pop
cmpl
xor
popa
pop
shlb
sbb
mov
je
lcall
sbb
loopne
mov
in
lea
xor
and
sub
dec
mov
and
sub
pop
movsl
pop
sub
and
clc
xchg
and
out
icebp
mov
sbb
push
nop
out
or
dec
fnsave
out
insl
sbb
xor
inc
mov
sbb
int
adc
shlb
mov
imul
outsl
xchg
xor
out
pop
mov
iret
sti
cmpsb
test
leave
test
pop
cmpsl
cld
repz
nop
dec
inc
fsubrp
testb
pop
mov
out
enter
nop
and
out
daa
xchg
repnz
fsubs
mov
jg
or
xor
sub
mov
fwait
adc
cs
pushf
loope
dec
add
xor
test
in
out
lret
cmp
cld
xorb
mov
lcall
clc
pop
push
pop
mov
dec
lea
jmp
mov
cltd
mov
jns
add
mov
imul
loopne
out
adc
ret
mov
in
cmp
loope
inc
leave
das
mov
push
mov
pop
jno
outsb
cmpsl
iret
ss
mov
dec
mov
or
push
call
addb
cs
inc
push
loope
mov
pop
dec
popf
cmp
dec
push
xor
xlat
inc
movb
shlb
xchg
mov
push
int
inc
push
shll
jecxz
fwait
out
das
xchg
gs
pop
adcl
cmpl
xchg
sbb
cmp
call
movsl
sti
xor
mov
call
je
push
scas
mov
aas
xchg
filds
dec
xchg
jbe
aas
subl
inc
cmp
clc
mov
fstpt
cmc
lock
popf
pop
out
jo
adc
jns
sbb
data16
xchg
lahf
insb
std
jo
fnstcw
or
fs
cmp
add
fwait
pop
xchg
hlt
ret
xchg
pop
lock
cmc
fsubr
das
aas
jl
jmp
test
fucomp
mov
out
fildl
dec
mov
mov
lds
pop
dec
ds
cmp
clc
add
fisubrs
out
lods
test
repnz
mov
leave
mov
fisubs
jnp
jne
mov
lret
in
sbbl
adc
daa
sub
lds
call
push
inc
mov
pop
mov
mov
push
mov
cmp
and
stos
aam
rorb
scas
sbb
icebp
ret
cltd
and
cmpl
inc
into
negb
inc
add
clc
repz
outsb
sub
jecxz
pop
jg
and
inc
sub
xchg
cmp
incb
mov
and
getsec
arpl
fs
lret
mov
xor
nop
lock
pop
pop
inc
ret
sub
xor
or
xchg
xchg
icebp
adc
add
lret
fs
repz
xchg
push
insl
lds
divl
inc
cmp
xchg
shll
dec
fistps
gs
in
xor
mov
in
addr16
fucomp
aam
mov
xor
sbb
pop
in
mov
inc
outsb
add
sbb
jl
and
test
adc
dec
out
push
fisttpl
adc
loope
repnz
mov
xchg
ja
sub
fmuls
test
repz
cmp
mov
xorl
sub
ret
xchg
lret
insb
mov
cmpsb
inc
movsb
add
mov
mov
out
xchg
xlat
push
inc
inc
test
addl
mov
pop
aas
adc
xor
ljmp
sbb
int
inc
push
xor
pop
cmp
imul
aaa
mov
xchg
sbb
sub
dec
in
leave
sub
sbb
mov
in
jle
mov
std
out
aad
push
into
cld
int3
imul
lock
adc
leave
or
lea
in
fsubrl
jmp
sbb
insb
dec
adc
ret
push
mov
ret
jmp
ds
adc
add
notb
mov
outsb
dec
jl
aas
arpl
imul
stc
sub
or
sub
mov
nop
xchg
fdivr
scas
xchg
test
inc
sbb
jae
and
cmp
cld
pushf
cmc
pop
mov
vpmuludq
popf
xchg
stos
fs
sub
add
inc
push
lea
or
xor
outsb
xlat
xor
mov
jns
scas
sub
data16
lcall
dec
gs
loopne
or
pop
inc
mov
dec
and
ror
pop
jmp
lahf
and
xchg
iret
arpl
dec
pop
mov
lods
adc
hlt
mov
cmc
or
cmc
pusha
call
push
filds
xchg
or
fsubr
jge
hlt
xchg
push
jns
cmpsb
cs
sti
daa
popa
and
push
sbb
pusha
inc
sbb
jecxz
mov
in
mov
lods
decl
cld
in
push
imul
test
lds
inc
push
test
imul
xchg
inc
lods
fwait
imul
adc
xchg
cmp
into
inc
das
push
jl
xchg
loopne
pushf
std
lds
or
in
clc
imul
or
jbe
popl
inc
push
mov
xlat
or
and
mov
inc
inc
fs
mov
shlb
sub
cmc
pop
jno
test
notb
mov
leave
mov
pop
mov
cmp
rorl
push
mulb
sbb
insl
addb
push
lods
fs
sti
push
insl
jno
jecxz
inc
lds
xchg
addl
xor
push
lret
jae
sub
xchg
cmp
jbe
lahf
stc
push
dec
pop
or
adc
sbb
imul
pop
and
subb
das
xchg
std
cmpsl
repnz
inc
sbbb
mov
popl
iret
and
xchg
push
sbb
lods
jecxz
pushf
mov
jle
and
dec
mov
xor
sub
sbb
or
repz
mov
test
xchg
inc
movsl
inc
mov
add
push
imul
push
mov
push
insb
sbb
testl
into
xchg
mov
loopne
pop
movsb
ja
js
sbb
popf
pop
mov
popf
jae
loopne
test
mov
sbb
mov
into
dec
xchg
cmp
rcrl
fidivl
jbe
and
xchg
jae
mov
arpl
lret
push
paddd
mov
pop
cs
cmc
stc
fdivr
lds
scas
test
adc
lret
adc
imul
into
inc
mov
mov
mov
mov
test
mov
stos
int3
cwtl
mov
movsl
shlb
push
lret
add
mov
pop
push
je
in
mov
pop
push
aam
call
add
inc
ss
push
cmp
add
xchg
sbb
rol
dec
xchg
int
mov
adc
pop
outsb
dec
mul
inc
mov
and
jge
dec
imul
push
jae
jo
inc
mov
cmp
cld
int
cmc
out
adc
and
pop
in
cmc
sub
add
xchg
mov
sub
xor
cmp
movsl
popa
stc
mov
inc
loope
ret
imul
mov
pop
mov
in
pop
fisttps
sub
sub
sub
mov
loopne
icebp
dec
movsb
inc
cld
mov
mov
rcrb
mov
stos
scas
xor
and
mov
lret
pushf
insb
out
mov
sahf
int
aad
dec
aaa
pop
push
cltd
xchg
cmp
or
pop
and
orb
or
sub
pop
arpl
or
sub
in
and
add
or
mov
adcl
js
insb
dec
cltd
mov
fs
adc
aas
cmp
push
ss
mov
xchg
paddw
out
sub
das
jl
cwtl
jae
sub
pushf
fisttps
jl
push
je
insl
cmp
mov
fwait
and
out
cli
imulb
sub
xor
incb
push
xchg
or
mov
fwait
add
inc
mov
sbb
sbb
mov
sarb
push
js
dec
cltd
xor
inc
comisd
pop
dec
mov
leave
mov
ret
dec
pop
hlt
fwait
jmp
xchg
movb
or
xchg
cltd
aam
push
inc
pop
mov
sbb
and
adc
movsl
push
mov
mov
mov
pushl
pop
or
int3
jg
cmp
xchg
in
and
sub
loop
jge
add
pushf
das
jb
daa
push
test
mov
insl
into
js
rolb
sbb
aaa
in
dec
xor
ret
addr16
int3
or
lret
jmp
push
cld
mov
dec
mov
filds
pop
jbe
les
xchg
pop
sub
ljmp
mov
mov
xlat
add
mov
cmp
test
push
fidivrl
jo
inc
adc
daa
mov
aad
fidivl
or
pushf
lods
pop
repz
mov
jae
orb
aam
inc
push
lret
jp
mov
fs
enter
push
fldenv
xchg
divl
jns
xchg
pop
sub
lret
adc
and
or
xchg
repz
das
mov
xchg
mov
nop
out
int3
sub
fs
fbld
test
sub
mov
dec
int3
outsb
fadds
mov
xor
jo
in
test
push
mov
cmp
adc
add
cli
dec
je
mov
push
push
mov
adc
cwtl
cmpl
bound
pushf
inc
leave
outsl
jno
sub
push
icebp
fxtract
adc
imul
shl
mov
mov
decl
mov
pop
jge
push
outsl
adc
mov
sbb
and
icebp
out
push
jp
xchg
cmp
popa
out
sub
jl
mov
mov
inc
mov
pop
push
sub
add
iret
dec
or
jb
sub
xchg
test
push
fisttps
sub
adc
ljmp
sarl
loope
movsl
mov
cmc
pop
dec
sbb
lret
sub
loopne
inc
add
adc
mov
mov
pop
stc
add
push
cmpsb
pop
inc
jbe
push
pop
stc
sub
or
push
adc
lods
push
sbb
pop
sbbb
aam
jecxz
push
inc
push
int3
mov
arpl
addr16
cltd
sub
push
pop
mov
jp
call
movsb
xchg
pop
pop
int3
inc
loope
das
sbb
mov
mov
test
sbb
adc
loop
outsb
and
out
popf
aaa
sti
stos
lcall
jne
jno
jg
loope
imul
pusha
xor
sbb
stos
pop
fwait
lcall
fnstcw
arpl
push
jge
inc
xchg
enter
loope
sub
adc
lcall
push
out
pop
sbb
mov
and
insb
push
push
jne
addr16
inc
aaa
push
inc
pop
sbb
mov
xchg
aas
and
lds
dec
movsb
mov
std
int
adc
ss
bound
insb
pop
sub
cs
or
push
mov
sahf
rolb
ja
push
cmp
xchg
aaa
inc
sahf
adc
xor
mov
ljmp
or
cld
cmpsl
mov
cmc
jb
mov
in
add
xorb
test
push
jg
cmp
out
cli
fadds
lret
stos
dec
jnp
rclb
mov
rcrl
dec
cmpsl
jo
sahf
mov
push
stos
iret
hlt
jecxz
mov
xor
mov
dec
pop
cmp
mov
xchg
fs
sub
jns
mov
pop
cmpsl
push
xor
jmp
adc
insb
pop
lods
shlb
aas
mov
jbe
xor
ret
sub
jnp
ret
cmp
hlt
inc
subl
push
jl
cli
cmp
movsl
pushf
or
xor
pop
shll
dec
sub
cmp
mov
in
imul
mov
lret
repz
leave
sarl
mov
mov
inc
add
pop
mov
and
add
push
sbb
fcmovu
push
cmc
pushf
es
xchg
jle
adc
enter
mov
dec
xor
inc
jo
sub
pusha
cli
add
out
test
push
mov
lcall
test
aam
movsl
inc
push
movsl
addr16
mov
pop
popf
and
mov
jno
mov
shrb
mov
and
push
sbb
ja
repz
jo
mov
dec
out
out
mov
push
iret
inc
inc
mov
lock
vpandn
rorb
pop
mov
es
dec
dec
push
cltd
insl
sub
divb
cmc
pop
lea
jne
aaa
xchg
or
scas
popa
testl
rorl
enter
pusha
push
dec
xor
or
clc
xor
testb
movnti
sub
mov
cmpsl
cmc
cmp
repz
in
jmp
rclb
push
mov
pop
and
out
mov
cmp
sarl
cmc
push
xchg
add
inc
scas
jbe
mov
leave
dec
inc
or
jp
dec
inc
addb
cs
jns
daa
push
stos
dec
dec
pop
hlt
movsl
sub
enter
or
pop
adc
lret
ss
dec
xchg
cmp
aas
clc
ja
outsb
mov
repz
mov
shrl
addb
cld
sahf
push
nopl
lods
roll
sub
and
movsl
fbstp
int3
cmp
sti
add
sbb
push
mov
adcl
arpl
jp
adc
jns
std
xchg
ss
movsb
and
test
fldenv
mov
fcmove
jnp
or
and
fisubrl
sub
push
scas
mov
in
inc
fidivs
jnp
push
stos
int
cmpsl
xorb
cmp
or
jnp
mov
rcrl
ds
loope
fdivrp
enter
cmc
mov
cwtl
insb
es
lods
mov
lret
repz
out
das
fs
mov
dec
aaa
inc
movb
fisubs
add
fcompl
sbb
shrb
je
testl
dec
scas
insb
out
pop
repz
push
lock
push
jmp
ret
negb
adc
cmpsb
or
adc
pop
fisubrl
cmp
inc
push
mov
daa
stos
loopne
in
adc
or
xlat
test
imul
lcall
inc
and
adc
pop
cmc
repz
fxch
cmp
xor
xchg
cmp
outsb
addb
lea
xor
dec
imul
pop
mov
adc
pop
aad
rorb
std
aaa
jmp
lea
cmc
jne
pop
mov
sub
pop
add
sub
mov
lods
mov
das
imul
sbb
iret
push
psubd
cmp
xchg
int3
orb
sub
sub
rcrb
cmpsb
jle
push
outsl
sarl
jns
cmp
mov
sbb
xor
push
adc
cltd
repz
in
mov
mov
test
push
push
jb
push
pop
jmp
fmull
or
cwtl
js
out
call
sub
sub
sub
add
jno
in
sbb
jae
xor
pop
xor
push
adc
ds
xlat
mov
mov
enter
hlt
lods
fs
adc
pop
mov
aaa
cwtl
cli
sbb
adc
repnz
dec
repz
cli
mov
jmp
adc
xchg
or
or
push
sahf
in
inc
dec
sbb
repz
cmp
mov
sub
xchg
jns
and
ret
in
pop
xchg
test
lods
sub
daa
imul
out
pop
adc
add
mov
and
aaa
jbe
push
and
push
jns
sub
cmp
gs
push
scas
lds
xchg
test
inc
cmpsb
and
shl
and
mov
icebp
js
inc
lods
and
mov
pop
jne
repnz
push
push
int
fdivs
ror
and
adc
test
inc
mov
rorb
shr
sbb
shrb
outsb
mov
ss
imul
sbb
jle
fldenv
cmp
test
iret
jmp
loope
inc
dec
add
pop
dec
adc
loopne
pop
pop
push
into
test
sbb
and
jg
aas
sahf
lahf
cwtl
int
aaa
cmp
jg
addr16
and
and
cmp
lock
icebp
in
cld
sub
dec
addb
xchg
aad
hlt
shll
mov
xchg
sbb
adc
out
pop
pop
call
shlb
movsb
pop
add
ss
dec
inc
rol
cmp
inc
int3
jl
sbb
fnstcw
adc
and
push
add
xlat
add
hlt
fimuls
push
sbb
xorb
dec
aaa
aaa
xchg
fs
or
sbb
push
cmpsl
pop
add
outsl
mov
cmpsl
xchg
sbb
mov
popa
sti
inc
add
sub
mov
xor
xor
std
sti
int
xchg
sbb
push
mov
inc
shl
cmc
mov
sbb
cmp
pushf
sub
xchg
and
mov
int3
pop
mov
out
fnstcw
movsl
xor
inc
movl
pop
mov
adc
add
mov
add
sub
ret
movsb
mov
dec
popa
mov
lahf
pop
push
pop
sub
push
jns
fcmovb
and
push
xor
or
arpl
aas
push
out
icebp
push
hlt
lea
ss
push
pop
je
sahf
sarl
aam
xor
sbb
cwtl
add
insl
mov
cmpsb
cmp
push
jl
movsl
cmpsb
scas
insb
popa
test
inc
xchg
fstpt
orb
xchg
adc
ljmp
fsubp
xchg
mov
jns
cld
int3
xor
jno
gs
cmpsb
dec
mov
and
pop
add
mov
xchg
pop
int
sbb
fwait
out
jle
lret
lds
xor
add
or
sbb
cmp
xor
movsl
cmpb
cmp
dec
lea
shrb
pop
dec
cltd
je
and
mov
or
subl
test
andl
jae
xchg
jb
inc
or
bound
adcb
push
and
push
fcmovbe
std
hlt
mov
pop
cltd
fdivrs
add
mov
fwait
jb
hlt
lea
or
roll
pop
mov
fnstcw
clc
fwait
xor
jo
mov
insb
or
fcomps
jecxz
push
dec
pop
shlb
scas
jae
sti
sti
mov
mov
mov
and
insl
notl
push
out
jo
mov
aam
and
inc
stc
loope
push
mul
jle
les
xor
mov
pop
test
roll
sub
cmp
sbb
sbb
add
pushf
mov
dec
lahf
aas
fs
push
inc
inc
xor
scas
aam
aas
sysret
lret
and
adc
arpl
stc
fcoml
cmpsb
mov
popa
setg
fbstp
jmp
lret
or
push
into
mov
hlt
xchg
in
push
cmp
mov
mov
faddl
or
add
pop
push
inc
bound
xor
fadd
mov
pop
out
add
or
dec
and
or
cli
push
adc
lods
std
shrb
sub
xchg
mov
int3
int3
repz
mov
mov
cld
outsl
mov
mov
dec
addr16
adc
jno
dec
push
or
sti
mov
jmp
sbb
dec
fcomps
lock
nop
sub
sbb
das
cmp
ss
xchg
and
add
add
out
lret
mov
adc
rcrb
cmp
or
dec
lcall
dec
and
mov
jle
testb
lahf
lds
pop
subw
inc
mov
out
nop
xchg
mov
sbb
in
sub
add
out
je
cmp
jecxz
lret
rclb
or
cmpsb
xchg
cmp
test
repnz
push
dec
lcall
mov
ret
jnp
fldt
and
pusha
cwtl
mov
dec
mov
lock
jecxz
xchg
lret
aad
int3
insb
jge
adc
mov
mov
repz
dec
movsl
push
pop
lods
mov
ds
xchg
inc
pop
rcl
mov
rcrl
push
cmc
push
test
add
leave
and
sbb
xchg
sahf
mov
adc
jb
push
jo
pop
sbb
rcrl
aaa
xchg
sbb
cmp
das
mov
mov
mov
inc
push
xchg
nop
push
cmp
jne
xchg
and
cwtl
inc
test
inc
frstor
xor
fs
out
scas
adc
andl
push
or
add
inc
test
andb
enter
push
mov
fsts
lods
mov
repnz
notl
push
push
pop
jg
mov
xor
cmp
sahf
or
div
push
adc
fcmovnb
icebp
mov
sbb
es
xchg
sbb
shlb
invd
sti
stc
lods
and
cmp
inc
inc
inc
inc
pop
mov
pextrw
addl
cmp
idivb
imul
gs
insb
popa
cmp
sub
or
add
mov
in
mov
out
pop
mov
mov
outsl
mov
and
sbb
into
orl
sub
shlb
lcall
mov
nop
insl
mov
and
out
inc
sti
rcll
out
imul
add
icebp
and
addr16
pusha
add
cmc
adc
jbe
iret
lods
pop
pushf
roll
sub
stc
adc
out
push
ror
ret
cmp
adc
fidivs
popf
lret
add
imul
inc
aam
pop
and
pop
push
mov
dec
xor
jne
fdiv
mov
sub
aas
lds
and
jb,pt
push
jmp
mov
adc
fistpl
push
movsb
add
inc
mov
popa
hlt
popa
mov
add
inc
jl
loopne
movb
fidivrl
negb
stos
lret
lods
push
nop
pop
mov
pushf
pop
ret
andb
push
cbtw
xor
cmp
xor
mov
pop
push
fists
jno
in
xchg
mov
add
scas
xchg
lret
nop
push
fidivrs
aas
out
dec
aas
ficoml
cld
scas
icebp
repz
push
call
mov
mov
bound
repz
fprem
stos
jb
insb
testb
inc
ret
sbb
mov
cld
cltd
cmpsb
mov
or
xchg
push
aas
lret
dec
movsb
imul
dec
mov
jno
pop
sbb
cmc
jg
or
ficoms
cmp
dec
frstor
jbe
nop
movsb
add
int3
mov
dec
rcll
add
mov
xor
out
adc
mov
xchg
push
mov
int3
mov
data16
and
sbb
mov
aad
push
fistpll
ja
imul
jp
mov
out
xor
jo
leave
push
inc
xor
xchg
xor
in
out
in
lret
mov
fdivrp
inc
cmpl
orl
into
ret
jbe
ds
rcll
mul
mov
aad
sarb
mov
jbe
mov
lock
push
shrl
insl
punpcklwd
or
pop
data16
fs
rolb
test
pusha
add
rcll
inc
mov
ficoml
fisubrl
das
fcoms
lcall
adc
inc
fldt
pop
iret
jne
orb
pop
loopne
movsb
fsubr
test
mov
adc
idivl
xchg
xchg
mov
mov
pushf
sbb
ret
insl
jle
test
aaa
adc
inc
pushf
imul
add
ss
cld
inc
fimuls
icebp
ret
nop
and
int3
imul
loopne
jnp
sub
icebp
sbb
push
hlt
and
jae
fisttpl
cmp
xchg
dec
js
mov
xor
imul
sbb
pop
or
andl
push
cli
int
data16
js
inc
insl
fistpll
dec
std
test
xchg
data16
add
fildll
inc
mov
mov
pop
jae
xor
test
int
mov
dec
jecxz
test
jp
and
rcr
ret
xor
jnp
and
push
add
bound
in
shlb
mov
cmpsb
fldenv
adc
xor
fwait
or
out
sub
jns
xchg
aaa
movsl
insb
inc
stos
lahf
jge
mov
xor
adc
mov
cmpsl
sbb
xchg
mov
pop
jle
scas
and
jecxz
out
add
arpl
sub
stc
mov
pusha
into
js
or
imul
lret
stos
adc
xchg
loope
pop
jp
xchg
cmp
add
loop
sub
loop
lcall
ljmp
arpl
push
insb
add
add
mov
pop
or
fs
mov
gs
or
push
cmc
sub
mov
jae
or
lret
mov
rcrl
cmpsl
sub
or
fwait
lds
dec
xor
daa
pop
mov
shlb
aam
outsb
mov
ret
adc
adc
dec
cltd
push
cwtl
out
or
in
inc
ja
popl
sahf
cli
fdivl
or
rolb
test
fstps
dec
pop
repnz
pop
xchg
or
in
in
xchg
push
lcall
movsb
xor
mov
pop
data16
aas
xor
push
je
mov
orb
clc
dec
adc
sbb
mov
sub
roll
shll
scas
rol
jl
je
sbb
dec
dec
js
inc
popf
and
fdivs
mov
movsl
pop
xor
add
sti
mov
addr16
ds
and
push
gs
pop
ret
cmp
mov
pop
cwtl
pop
adc
fisubs
sbb
mov
repnz
and
and
mov
mov
out
cmp
int3
lahf
xchg
sub
mov
inc
stos
and
test
adc
jne
mov
fisttps
xor
aad
mov
lea
loopne
xchg
jb
push
aaa
sub
sub
ljmp
adc
fcmovnb
mov
fisttpll
popa
mov
jmp
pop
xchg
xor
dec
fs
xchg
repz
xchg
imul
out
faddl
fidivs
lret
mov
in
insl
jnp
push
jns
sub
mov
aas
sub
xor
pop
pop
jge
inc
ret
xlat
cmp
sub
mov
adc
aas
lahf
jb
xchg
inc
out
pusha
sub
jmp
jnp
add
lods
mov
icebp
dec
mov
push
inc
test
mov
xor
lods
dec
mov
jge
pop
outsl
pop
pop
lahf
cmpsb
ficoms
negl
jmp
addb
mov
mov
imul
and
pop
xchg
subb
and
hlt
inc
adc
push
cmp
cmc
mov
push
call
mov
push
into
addr16
and
aaa
cmp
add
inc
in
and
mov
mov
pop
shrb
lods
imul
jle
shl
mov
cld
inc
pop
fnstsw
enter
adc
adc
adc
mov
or
insl
adc
imul
iret
pop
fbld
pop
popf
xor
lock
add
iret
cmp
mov
insb
pop
sbb
xlat
dec
mov
add
cmc
into
jb
push
cmpsl
adc
out
jae
ret
xor
out
fcomp
mov
int
imul
sti
pop
gs
mov
sub
xchg
cwtl
icebp
int
iret
inc
cwtl
xchg
jmp
adc
faddp
leave
sbb
int
mov
pop
inc
dec
and
mov
sub
inc
xchg
bnd
call
aas
jg
test
mov
mov
jge
cmp
daa
mov
andl
ror
jae
aad
sub
pushf
xchg
outsl
and
loopne
mov
in
repz
sbb
xor
push
lock
mov
add
outsl
xchg
les
pusha
pop
pusha
adc
pop
sbbb
pop
dec
mov
push
jb
mov
pop
or
lods
cmp
pushf
pop
xor
arpl
add
cmp
sub
push
fbld
sub
loop
rcll
mov
cmp
lret
je
loop
mov
es
add
nop
pop
adc
sbb
enter
mov
jle
pop
icebp
mov
sarb
repz
mov
test
jge
adcb
or
dec
inc
lahf
stos
je
push
lods
nop
sbb
xchg
jp
add
mov
push
xor
fdivl
ss
adc
mov
andps
rorl
inc
sub
xlat
xorl
sbb
insl
nop
aas
jecxz
inc
sub
dec
jge
xchg
and
leave
scas
sbbb
iret
dec
clc
jle
xchg
rol
push
pop
fcoml
mov
out
js
popa
xchg
adc
out
je
shll
push
fisubrl
jne
outsl
inc
xor
add
add
aad
ss
into
mov
rcrl
xchg
loopne
jae
sub
jbe
jo
mov
push
testb
adc
js
call
es
testl
mov
mov
dec
sbb
mov
test
adc
scas
cmp
shl
fcom
cli
int
push
mov
jg
jo
mov
add
jnp
mov
cmp
adc
and
xor
sbb
pop
cld
into
xlat
or
mov
es
push
push
loop
dec
cmp
or
mov
shrb
dec
pop
pop
add
cmc
out
adc
sbb
les
mov
xor
mov
cmp
data16
mov
mov
sbb
jge
lcall
cmc
cmp
clc
push
xchg
scas
cmpsl
aam
sbb
or
sub
cmc
inc
push
xchg
or
adc
jl
mov
mov
dec
nop
jle
ret
testl
out
cmp
dec
cmp
and
pop
mov
sub
dec
xor
mov
pop
inc
arpl
mov
dec
push
inc
out
jg
adc
and
outsb
pop
cmpb
mov
adc
cmpsb
loopne
hlt
pop
dec
movsl
xor
sahf
pop
repnz
mov
jnp
lods
lahf
lret
dec
repz
stc
mov
xor
and
sbb
rolb
es
jg
adc
pop
adc
pop
jmp
iret
xor
gs
bound
ror
mov
inc
adc
mov
dec
flds
dec
movsl
ljmp
clc
adc
stos
cmp
enter
pop
ds
addr16
scas
sbb
test
cmpsb
sbb
fmull
clc
dec
mov
jg
xor
das
xor
inc
inc
pop
xchg
dec
mov
sbbl
insb
out
xchg
jl
cmpsl
outsl
ret
and
sbb
scas
jb
mov
loopne
idiv
cli
push
sub
in
sbb
test
and
movsl
outsl
pop
rcrb
push
mov
movsb
test
inc
add
fdivs
xchg
into
sahf
mov
rclb
mov
xchg
or
insl
scas
std
mov
arpl
popf
divb
int3
jp
mov
icebp
mov
mov
outsl
pop
push
jmp
rcrb
and
pop
jmp
ret
sbb
icebp
add
jp
ret
push
push
mov
lods
sbb
push
cmpsb
in
testl
xchg
test
mov
mov
cmp
cli
pushf
fmul
subps
xchg
xchg
adc
into
aam
stc
test
div
fiadds
lret
es
out
pop
pop
outsl
sti
cli
xchg
sub
mov
lds
push
inc
xor
mov
lret
out
mov
addr16
dec
and
xchg
or
loop
scas
ljmp
in
shrb
cmp
inc
sbb
fdiv
xor
sar
sbb
mov
push
adc
outsb
clc
inc
mov
mov
dec
and
stos
cmp
jp
aam
in
push
test
inc
dec
dec
imul
add
stc
faddl
lds
shrb
xlat
xchg
push
ja
addr16
pop
dec
loope
jge
adc
and
cmp
fdivl
mov
adc
mov
inc
xor
stos
mov
push
in
push
mov
pop
ret
xor
test
xchg
adc
pop
fadd
mov
gs
push
jns
xor
in
jle
jne
shrl
mov
inc
int3
xchg
dec
leave
add
push
xchg
or
adc
sub
insl
xchg
adc
call
jle
and
ljmp
and
xchg
es
in
cmp
xor
pop
cmp
ret
sub
mov
pop
subb
lds
test
scas
les
pusha
add
cmp
lahf
mov
repz
aam
fldt
adc
inc
pushf
rorl
orb
add
inc
mov
stos
mov
or
cld
push
loope
xchg
inc
es
jb
cwtl
adc
cmp
inc
leave
test
cmp
insl
dec
pop
fbstp
and
addr16
cli
in
inc
imul
mov
sub
loopne
stc
add
test
fiadds
outsb
inc
inc
inc
cmp
xor
stos
scas
sahf
xor
and
enter
mov
rcrb
loope
les
sub
popf
and
aaa
adc
push
inc
cmp
mov
inc
adc
mov
xchg
ja
mov
divl
addr16
dec
pop
pop
pop
lea
imul
xchg
loop
and
push
out
or
fidivrl
adc
adcl
mov
push
adc
clc
int3
push
add
mov
mov
sarb
cwtl
repz
mov
fs
nop
push
cmp
scas
xchg
mov
inc
mov
addb
mov
push
fnsave
and
orl
push
cmovnp
test
pop
cld
inc
pop
jns
into
popa
dec
pop
jno
jmp
dec
jne
icebp
mov
adc
and
fcomp
or
outsb
and
ja
pop
dec
in
imul
inc
xchg
mov
addl
push
pop
test
lahf
lock
pop
insl
in
xor
movsb
sub
daa
aam
test
call
call
adc
mov
lds
push
aad
nop
xchg
dec
push
xchg
inc
clc
scas
inc
movsb
inc
es
inc
negb
add
ja
sbb
rclb
shrl
dec
jbe
adcl
adc
dec
fdivrs
aaa
fisubrs
out
cmc
pop
out
test
sbb
sbb
cmpsl
pop
stos
xchg
popa
xor
mov
fadd
repnz
incl
add
hlt
xchg
mov
in
push
clc
dec
jp
into
push
nop
add
in
lahf
gs
repz
push
jo
lock
jl
stc
jmp
cmp
lret
push
mov
xchg
bound
ds
pop
dec
mov
fs
sub
aaa
ds
sarl
fmulp
xor
xor
mov
ja
pop
mov
adc
scas
into
sub
add
inc
adc
cmp
xor
js
clc
inc
xchg
test
add
pusha
lds
mov
mov
js,pn
shrl
dec
and
push
mov
adc
mov
in
push
movups
pop
ret
adc
fsubrl
arpl
pushf
sbb
mov
pop
loopne
jecxz
iret
fwait
imul
jl
in
jl
xor
jno
mov
pop
dec
push
adc
imul
in
adc
mov
cmp
arpl
mov
mov
xchg
sbb
aaa
lock
sbb
add
inc
xor
and
jecxz
add
dec
xchg
and
cli
dec
lcall
ret
pop
jae
jge
xor
push
hlt
jle
push
jp
mov
push
mov
pop
addl
inc
xchg
ret
sbb
push
or
jbe
cmc
nop
fstl
test
shrl
sub
popa
mov
test
dec
xchg
fst
movsb
dec
pop
lret
mov
es
adc
mov
ds
sbb
push
movsl
sbb
mov
adc
xor
in
mov
in
add
mov
inc
mov
andl
negl
leave
rcrl
jp
fldenv
cltd
mov
aad
ljmp
out
fidivs
xchg
adc
ljmp
out
xor
add
push
dec
dec
adc
inc
xor
cmpsb
sub
jo
repz
jge
add
sbb
add
dec
and
lret
mov
dec
fcoml
inc
int
and
incl
sahf
mov
jb
jle
jb
xor
and
jmp
jno
mov
cld
mov
sub
push
push
scas
jne
aas
mov
cmp
and
add
adc
inc
insb
xlat
das
cmpsl
pop
push
jmp
jp
imul
inc
push
mov
shll
sbb
je
cmp
pusha
or
xchg
lahf
cltd
push
and
mov
movsb
ret
push
pop
lahf
scas
mov
insl
push
std
cli
adc
arpl
int3
insl
outsb
aaa
fcompl
push
dec
fisubrl
pop
push
jae
pushl
sbb
jb
fcomps
jge
sbb
mov
mov
jecxz
jae
or
mov
xor
and
and
stos
dec
adc
dec
mov
movsl
insl
das
sbb
sub
test
push
dec
jle
add
mov
daa
dec
cmp
lret
xor
cli
push
addb
push
cmpsl
divl
int
call
pop
int3
cmp
out
ficomps
mov
ljmp
ret
daa
shl
loopne
mov
pushf
mov
cltd
cld
pop
cmpsl
into
fldcw
subb
ds
dec
jnp
adc
imulb
dec
and
out
shl
cld
pop
out
dec
mov
and
movsl
orl
mov
pop
cwtl
inc
mov
fisubrl
xchg
ret
mov
pop
test
mov
out
test
pop
out
mov
cmp
jp
mov
mov
mov
aam
push
ljmp
jl
pushl
cmp
imul
imul
adc
aam
push
mov
daa
jl
leave
pusha
ds
cmp
daa
mulb
inc
notl
mov
sub
stc
adc
lds
and
xlat
test
rorl
inc
lcall
in
dec
xchg
adc
das
mov
fsubrl
or
cmc
cmp
inc
dec
mov
test
xor
mov
inc
mov
cmc
push
idivl
inc
scas
aas
jbe
arpl
pusha
dec
mov
jne
leave
shrl
out
pop
cltd
ss
pop
lds
imul
hlt
insb
dec
or
loope
mov
mov
jg
add
mov
inc
mov
pop
or
daa
mov
inc
add
repz
lret
push
call
xorb
aam
enter
insb
xor
cmp
jns
cmp
outsl
pop
mov
pop
inc
xor
or
sub
inc
out
sbb
jnp
and
or
loop
pushf
mov
lds
imull
mov
loope
sub
push
xchg
mov
stos
jne
push
cltd
mov
mov
test
test
add
dec
test
roll
out
xor
sbb
loope
mov
sub
dec
jecxz
xchg
insl
add
mov
in
mov
cltd
mov
js
cld
pusha
mov
or
inc
xchg
xor
fistl
xor
imul
inc
mov
call
adc
and
push
and
pop
sbb
outsb
std
jmp
imul
xchg
jle
xchg
pop
cmp
adc
mov
shrb
lret
pop
mov
sub
stc
xchg
jb
cmp
cmp
push
sbb
pop
icebp
fadd
mov
xchg
dec
pop
movsb
addr16
dec
jg
sub
dec
lock
or
inc
or
pop
ret
test
lahf
shl
ja
pop
fidivl
jno
mov
ret
loopne
push
ds
pop
popf
push
cltd
dec
adc
enter
add
jmp
shr
lret
pop
rorb
in
cwtl
popf
jle
std
ret
or
addr16
ja
sbb
rcrb
sub
inc
idivl
push
add
xchg
test
cmp
or
lcall
xor
cmp
and
jo
in
xchg
test
pusha
jb
jae
fsubrl
cmp
push
xchg
dec
sub
cmpsl
adc
imul
imul
or
mov
xchg
jnp
pop
push
ret
xchg
vdivpd
xchg
push
sub
std
mov
pop
in
mov
jo
xor
lea
jns
stos
mov
clc
inc
xchg
cmp
daa
jle
dec
ljmp
jnp
cmp
fsubrl
inc
or
les
adc
mov
mov
stos
dec
xor
sub
fwait
psubw
mov
and
pop
int3
stc
or
or
jmp
insb
jp
stc
lods
xchg
push
call
ss
loope
mov
std
and
in
mov
push
pop
sbb
bound
add
outsb
jne
xor
cmpsb
jns
sbb
jge
jne
add
fsubs
aad
iret
dec
xchg
test
int
int3
mov
jp
add
sbb
adc
push
daa
inc
lods
std
cmp
loopne
dec
icebp
fcomps
enter
enter
jno
mov
adc
mov
jmp
sbb
push
dec
call
icebp
clc
nop
xlat
mov
push
movsb
ds
push
jns
mov
outsb
lea
inc
je
jecxz
rcrl
pop
imul
or
lret
mov
fildl
jl
insb
fs
imul
stos
nop
mov
sbb
stos
jg
popa
cmp
lcall
leave
inc
sbb
sbb
adc
addr16
push
xchg
js
int
sbb
fcmovbe
fst
dec
dec
out
xor
test
dec
xor
sub
jns
cmc
es
xor
nop
inc
sub
jl
and
orb
xchg
or
nop
mov
xlat
mov
lock
mov
cmpsb
data16
push
mov
mov
popf
les
je
popa
sbb
xor
adcb
bound
cmc
xchg
or
push
fsubrs
and
jecxz
repz
in
adc
notl
cs
cli
cmp
jns
adc
mov
call
shrl
pop
out
push
mov
sub
and
in
push
jo
adc
outsb
icebp
sbb
cs
aad
insb
test
sbb
jmp
inc
inc
and
push
jp
nop
dec
test
loope
dec
lock
ljmp
inc
or
push
mov
pop
pop
xchg
mov
sti
insb
sub
insl
mov
notb
jmp
inc
mov
out
mov
iret
xchg
mov
insb
and
jbe
fs
in
cwtl
adc
jecxz
add
push
lods
js
je
pop
lods
and
jnp
xchg
ss
xchg
add
xor
jge
fwait
add
jb
dec
in
rcl
fwait
sahf
adc
xchg
xchg
into
insl
pop
push
push
jbe
mov
and
sub
dec
jp
filds
std
push
popf
mov
lcall
lods
pop
lds
dec
pop
out
push
lds
xchg
ficomps
dec
daa
dec
es
fldl
inc
adc
jbe
cmpsb
stos
and
rep
mov
jnp
and
aas
sub
mov
pop
or
sub
sub
jnp
fcmovnb
leave
dec
add
adcb
pop
cmp
lock
push
inc
and
add
mov
lret
in
sbb
cld
ss
adc
pop
popa
dec
test
jmp
mov
or
in
xor
cmp
dec
aam
add
adc
repnz
mov
xor
test
and
dec
lock
adc
dec
lods
jge
imul
icebp
xor
mov
test
inc
pop
xchg
push
notb
jle
loop
sbbb
test
and
mov
pusha
jb
xor
stc
adc
cld
arpl
das
lret
repz
stc
les
jae
push
pop
mov
test
xchg
mov
ficompl
xlat
jle
push
ljmp
hlt
jmp
push
add
mov
divb
add
mov
leave
mov
push
xchg
fimuls
rclb
pop
xchg
adc
mov
mov
dec
inc
adc
pop
ret
aad
sub
in
xchg
loope,pt
sub
das
cmp
imul
fnstcw
aad
sbb
cmp
inc
fisttpl
mov
mov
mov
xor
add
lods
cmc
mov
pop
movsb
mov
ljmp
jmp
xor
xchg
test
adc
aaa
sbb
dec
out
and
sbb
xor
lds
push
dec
js
mov
pusha
fcomip
push
push
aas
in
les
ljmp
jnp
repz
sub
sti
jg
mov
sbb
outsb
adc
bound
cmp
icebp
xchg
les
fildll
mov
lea
insb
fistps
mov
jb
cmpsb
dec
icebp
ds
cmpsb
call
mov
lods
stos
cmp
div
ja
and
push
fists
outsl
insb
shlb
mov
sub
in
xor
jns
push
mov
mov
mov
sub
sub
dec
xchg
pop
fcoml
cmpsb
and
lods
jle
mov
loopne
inc
inc
andb
ss
movsl
scas
imul
xchg
shlb
and
iret
inc
ror
shlb
je
fisttpll
faddl
adc
jp
lock
ficomps
test
or
jo
jb
jo
mov
add
xor
ret
aad
inc
lret
pop
idivb
xchg
lret
jmp
xor
out
dec
xchg
jmp
in
xchg
push
dec
ja
sub
adc
push
lret
pushf
jae
daa
rcr
push
divb
mov
mov
mov
lret
cpuid
and
jnp
and
mov
shll
sbb
xchg
dec
mov
sbb
pop
lret
pop
arpl
aas
mov
mov
mov
gs
lcall
outsl
jb
xlat
mov
or
mov
cli
push
cli
int3
sbb
les
fwait
cld
sbb
adc
mov
je
fildll
stos
jle
lods
movsl
cmp
loope
sub
cltd
pop
xchg
push
pop
clc
mov
scas
cld
and
cmp
enter
and
rcll
leave
mov
adc
jne
cs
ffree
cmp
mov
sub
lds
out
xor
push
mov
test
dec
push
loope
sbb
sbb
jmp
jg
mov
dec
mov
imul
mov
lret
pop
cmc
bound
xchg
inc
aam
mov
jbe
cmp
sub
loopne
rclb
ds
scas
sbb
sahf
xchg
mov
xchg
inc
adc
das
sub
jl
pop
jp
std
iret
push
add
jae
jne
enter
mov
dec
fsubrs
aam
leave
jp
xchg
mov
pop
jmp
rorl
push
int3
xor
sub
aaa
aam
mov
push
cmp
xchg
add
out
cmp
xchg
xlat
cltd
dec
repnz
jle
mov
sub
cli
xchg
repnz
mov
mov
jg
push
std
jmp
fistpl
ret
int
push
leave
sub
movsl
ja
lods
les
or
push
inc
rcr
pop
cs
fmull
mov
cltd
and
ja
stos
test
adc
push
push
cmp
dec
fdivl
cwtl
lods
stc
pop
and
fwait
push
ljmp
test
ja
icebp
enter
add
xchg
jmp
jl
lret
inc
push
aaa
mov
ds
popa
or
xor
shlb
dec
jbe
adc
or
xchg
aam
pop
inc
mov
jge
pop
dec
adc
clc
ss
shl
ja
xlat
shl
xchg
sbb
addr16
inc
loope
repz
scas
ja
ja
mov
pop
adc
fsubrs
push
out
dec
add
in
in
inc
cmp
fidivl
mov
jmp
xor
dec
sub
pop
push
xchg
sub
sub
add
mov
ret
ds
or
cmp
sarl
cs
sbb
stos
jns
adc
or
cmp
cmp
fiaddl
jl
jns
mov
jno,pn
insl
das
fwait
ror
inc
lahf
push
gs
inc
pop
popa
stos
popa
les
daa
add
mov
sti
push
stos
fcmovne
ds
pop
cmc
adc
loope
jg
pusha
test
imul
rolb
hlt
gs
pop
stos
test
mov
or
cmc
jge
into
test
mov
dec
andl
or
sbb
xchg
cmpsl
sub
ja
sub
dec
scas
inc
add
fs
fs
cmp
mov
or
mov
adc
xor
jo
into
sbb
shrb
xchg
arpl
int3
notb
dec
lcall
popf
push
pop
adc
jl
int3
ret
lock
das
cmp
mov
out
popf
mov
pop
pop
xchg
nop
cs
shlb
cmp
jnp
fs
jecxz
ljmp
push
icebp
lahf
sbb
sbb
add
inc
ljmp
and
mov
test
pop
jecxz
dec
pop
add
dec
mov
pop
sbb
aad
mov
mov
int
int
mov
into
insl
inc
leave
and
jnp
cmp
lods
pop
or
xlat
pop
mov
in
icebp
ja
out
rcll
popf
mov
imul
and
adcb
add
dec
mov
lcall
test
mov
mov
add
arpl
sub
test
mov
out
int3
mov
inc
or
mov
std
or
mov
mov
sbb
xchg
sar
decb
sub
or
into
rcrb
sub
pop
jg
inc
adc
das
fstl
push
or
mov
jnp
data16
in
cmp
les
sub
jmp
rcrl
sbb
in
test
je
inc
das
cltd
loop
push
inc
dec
fwait
iret
fprem1
daa
jbe
or
jge
mov
movsb
pop
imull
dec
mov
push
push
loop
pusha
loope
pop
mov
sti
mov
add
and
in
lret
xchg
jmp
shrl
adc
sub
pusha
pop
movsb
mov
dec
dec
and
loop
mov
xchg
jle
aad
fdivrl
inc
es
or
popf
popf
mov
ljmp
and
stos
jbe
jno
cltd
add
sti
ret
cltd
cld
jmp
cmc
stos
pop
lret
xor
push
mov
add
jl
imul
scas
xchg
inc
xchg
xchg
add
sar
pusha
mov
mov
mov
ss
outsl
push
cmp
daa
or
into
mov
pop
stos
mov
mov
and
push
pop
adc
dec
fldl
and
push
in
aaa
mov
xorb
mov
dec
xor
setle
push
or
and
sti
pushf
or
in
cld
inc
or
push
or
mov
xchg
jnp
inc
andl
das
js
jns
testl
jmp
push
ret
pop
test
sbb
mov
push
mov
ljmp
ljmp
xor
pushf
and
pop
jecxz
into
stos
sub
ds
sarb
nop
flds
inc
jb
add
popf
cmpsb
adc
iret
bound
scas
push
or
movsb
push
pop
sti
push
imul
pop
sbb
cs
std
pop
into
popf
cmpl
add
fnsave
jge
sbb
loop
xchg
sti
rep
push
push
fistl
sarb
dec
fsts
push
lods
icebp
cld
lret
xchg
aad
out
in
sti
xchg
out
or
push
lds
js
sbb
arpl
aas
mov
sbb
frstor
mov
js
mov
cli
jnp
sbb
test
jno
or
xor
subl
pop
hlt
or
repz
push
mov
jge
fs
leave
shll
sub
fldcw
or
sub
mov
xlat
jae
cmp
addl
or
jbe
push
mov
call
dec
in
orl
nop
xor
pop
insb
dec
push
jge
stos
test
stc
xor
and
mov
gs
addr16
divl
cmp
clc
mov
insb
shl
or
mov
arpl
push
and
insb
and
xor
out
out
mov
jle
out
insl
fwait
ljmp
scas
sub
dec
inc
stc
lock
lea
cli
cmp
lahf
ret
mov
and
je
dec
or
mov
ds
dec
push
add
pop
push
pop
adc
xor
pusha
sbb
ljmp
lods
pop
aam
test
pop
push
inc
jecxz
jb
inc
pop
loop
lahf
push
dec
sbbb
mov
ss
aam
ret
popa
rcrl
lret
mov
scas
jg
sbb
xor
and
jnp
lods
add
loope
sti
lds
sarb
jno
mov
test
les
or
and
les
lahf
pop
repnz
in
push
pop
mov
jecxz
dec
mov
call
fwait
cltd
mov
and
arpl
add
xchg
mov
sbb
into
xchg
inc
in
ljmp
inc
fstpt
mov
xchg
xchg
mov
jne
fbstp
int
dec
xor
xor
inc
sub
jbe
or
xor
lret
mov
leave
cmp
mov
jbe
je
scas
add
sub
jle
mov
fwait
imul
pusha
into
or
or
dec
clc
cmp
pop
in
jge
fmull
mov
fs
adcb
mov
pop
fwait
adc
shll
xchg
leave
mov
add
fs
test
add
add
inc
mov
out
out
push
insl
arpl
stos
into
cmp
dec
movsb
lods
cmpl
fwait
lock
and
adc
fcmovnu
loopne
fcomip
adc
or
adc
jbe
ds
push
stc
push
into
or
lcall
add
mov
sub
icebp
lods
cltd
popf
sahf
adc
adc
mov
jnp
push
sahf
xor
repz
and
repnz
sti
dec
arpl
cltd
xchg
inc
outsl
pop
cmp
inc
into
lret
call
or
test
and
stc
push
cmp
adc
int3
mov
idiv
pop
or
fdivl
addr16
ja
test
nop
rcll
jle
inc
mov
out
jo
in
pop
mov
jns
and
fimuls
or
add
cmp
jno
ja
lcall
xchg
pop
lret
lret
inc
lret
and
fisttps
pop
ja
push
popl
pop
cmp
fwait
jmp
jl
mov
push
ds
sub
push
into
xor
lcall
jg
dec
xor
adc
rcl
sbb
xchg
out
aas
add
add
mov
jnp
mov
xor
push
jge
xchg
lret
test
fs
aaa
iret
lret
das
mov
mov
mov
cmp
inc
addr16
in
mov
lock
stos
hlt
mov
inc
repnz
decb
mov
jnp
loop
mov
test
push
fwait
popa
jge
arpl
test
insl
imul
ja
adc
cmp
scas
cld
mov
hlt
sti
aam
popa
andb
add
cmp
ret
enter
dec
pop
add
lea
rcr
test
mov
mov
xor
or
and
aam
xlat
fbstp
xchg
inc
adc
and
notl
in
xchg
xchg
mov
mov
mov
adc
jl
xor
xor
push
mov
inc
push
dec
fistl
and
push
add
sub
iret
adc
cmp
sbb
jp
ja
or
pop
add
mov
push
sub
lret
roll
xchg
dec
xor
sahf
stos
inc
movl
or
sub
popa
push
xor
cmp
movsl
inc
js
jo
paddusb
repnz
and
cmp
cmp
imul
mov
in
ficompl
push
jns
mov
in
cmp
mov
out
mov
mov
jns
jnp
loop
add
cmp
test
pop
add
fisubs
adc
mov
mov
mov
inc
scas
mov
push
sbbl
loop
and
movhps
cwtl
je
pop
sub
adc
movsb
cmp
stc
cld
jns
or
in
xchg
gs
imul
ret
arpl
sub
pop
lock
mov
cld
jno
dec
cmp
mov
sub
insb
fs
jl
inc
add
and
leave
adc
stc
add
xchg
jecxz
subb
sub
js
mov
mov
out
push
push
std
adc
add
mov
js
stos
jge
subl
shlb
leave
inc
add
add
push
mov
mov
and
fstpl
cmp
push
mov
sub
rcr
addb
push
push
cmp
into
mov
popa
sbb
imul
mov
shlb
int3
stos
adc
test
or
incl
jb
retw
repnz
rorl
xchg
ss
push
adcb
lock
mov
lods
movsl
lret
in
xor
mov
xor
mov
pop
mov
data16
dec
push
mov
into
int
cmpsb
cmp
inc
pop
lret
xchg
ds
std
xor
push
jg
xchg
subl
std
mov
push
push
dec
mov
pop
push
rcll
inc
and
mov
jmp
int
jp
mov
xor
ror
rolb
ucomiss
lods
dec
cmp
cmp
sbb
jbe
sub
inc
xchg
adc
xor
mov
add
popf
sbb
adc
mov
mov
negb
push
test
fwait
xor
push
jp
data16
gs
loop
ss
repnz
test
and
sub
clc
notb
xor
push
iret
dec
and
outsb
hlt
fldcw
fmuls
cmpsb
and
dec
sub
out
std
mov
cmp
shr
mov
sahf
xor
xor
test
cmp
sbb
sbb
add
inc
popa
scas
sub
fnstsw
subl
jmp
popf
dec
in
cmc
add
ss
push
mov
out
inc
jns
mov
vmread
inc
push
rolb
test
ja
sbb
leave
lods
vpsubb
scas
bound
addr16
push
jg
pop
movsl
xor
cmp
xchg
or
or
aas
rcr
and
inc
add
mov
das
data16
push
or
xor
push
pop
ljmp
sbb
es
inc
loopne
or
std
ret
and
jne
repnz
stos
rcll
lds
repnz
es
xor
sub
stc
mov
add
inc
iret
insb
scas
sbbb
and
rcll
jno
push
pop
addb
cmp
sub
xor
mov
loopne
js
pop
loopne
mov
scas
clc
xchg
xchg
jecxz
movsb
xor
cmp
shll
and
pop
ds
lock
or
pop
mov
or
outsb
push
mov
in
or
shlb
jno
outsl
cwtl
push
push
insl
xchg
mov
arpl
fs
adc
or
stos
or
rorb
test
dec
insl
cmp
add
daa
popf
lock
mov
dec
mov
cmp
push
sub
aaa
jbe
repz
jno
repz
pop
aam
xor
test
mov
inc
in
xor
popa
imul
test
mov
cmc
call
mov
and
jg
and
ret
bsf
mov
xchg
rol
addr16
in
mov
pop
repz
outsb
xchg
out
xchg
push
cmpsb
shlb
add
jo
add
dec
int
mov
push
ret
fsts
xor
rorl
cmpsl
hlt
in
dec
cmpb
fcompl
aaa
xor
lods
out
xchg
add
mov
pop
pop
cmp
push
push
mov
test
ret
outsl
rcll
gs
dec
mov
push
sub
idivb
pusha
ljmp
adc
fwait
rol
mov
inc
push
sbb
stos
mov
std
mov
jns
hlt
es
mov
inc
inc
lds
mov
sahf
out
pop
jb
sub
sbb
dec
call
iret
out
sub
shrl
mov
pop
mov
ljmp
dec
xchg
mov
scas
mov
sub
outsb
clc
out
xchg
jbe
andl
outsb
es
lcall
mov
sbb
mov
dec
std
fcoml
push
enter
jne
dec
rorb
jmp
cmp
inc
ja
jae
lock
mov
and
adc
jmp
aam
mov
andl
push
dec
jle
loop
xchg
daa
in
mov
pop
insl
sub
jno
mov
call
mov
ror
fisubl
cld
sbb
xor
ds
cmp
jbe
ret
sbb
cmc
cmpsl
iret
xor
jp
cmp
fists
dec
push
aam
cmp
xchg
hlt
push
sbb
xchg
cmp
lds
jge
push
addr16
imul
aaa
shlb
jo
or
cmpl
lock
data16
xor
js
push
sbb
cmp
std
mov
fnstenv
cmp
popa
int
stc
or
or
sub
ds
pop
mov
or
sub
cmpsl
add
in
dec
pop
inc
push
mov
lock
addb
cmp
cmp
adc
push
pop
add
dec
and
int
bound
mov
movsl
loope
cwtl
cwtl
loope
cmc
dec
lcall
xor
jle
add
pushf
add
add
fcomp
in
lods
push
pop
add
data16
cmp
xchg
jae
out
cmp
push
add
xlat
jns
lsl
repz
mov
mov
mov
mov
dec
dec
jle
inc
or
stos
cmp
insl
call
repnz
sub
lret
in
xchg
out
decb
jge
sub
js
fst
ror
enter
inc
movsl
lret
add
dec
mov
xchg
icebp
sarl
sbb
scas
pushf
adc
pusha
sahf
pop
dec
insb
jbe
loopne
arpl
lret
out
xor
xchg
sbb
xchg
repnz
out
mov
push
add
js
mov
inc
mov
imul
imulb
xchg
pop
pop
in
xlat
push
jl
or
pushf
inc
clc
into
mov
cmp
fs
xchg
iret
or
or
insl
inc
push
imul
scas
push
rclb
fistl
mov
mov
jp
push
xchg
inc
imul
xchg
push
xor
sbb
dec
dec
das
shl
xchg
test
mov
mov
stos
lods
add
shlb
rorb
dec
adc
push
outsb
and
add
addl
jae
enter
imul
xchg
lods
fs
dec
loope
jmp
inc
mov
add
cld
cmp
mov
dec
loope
clc
and
mov
mov
pop
pop
mov
xor
or
pop
xor
push
in
jge
sub
out
fcmovnbe
fcompl
aam
push
sti
in
dec
xchg
jbe
inc
mov
adc
inc
data16
pop
xor
xorl
sahf
sarb
push
cwtl
repz
fs
shrl
mov
test
hlt
sahf
and
cmp
and
adc
ss
lcall
sub
ljmp
push
movsl
movsl
sbb
movsl
push
cmp
out
insl
dec
arpl
adc
sbb
sbb
sahf
add
pop
adc
inc
lea
dec
fimuls
cmp
mov
fsubrl
shrl
push
adc
dec
pop
outsl
mov
and
push
pop
inc
cltd
enter
cmp
notl
pop
sub
pop
pop
shl
cwtl
add
mov
mov
ja
xchg
mov
jns
xchg
aad
xor
andl
mov
lock
loope
fcmovnb
fadd
cli
push
jp
test
out
xchg
clc
sub
mov
loopne
outsl
mov
mov
sbb
out
mov
add
mov
ret
and
sbb
push
stos
pop
je
mov
inc
mov
push
dec
outsb
testb
jmp
es
shlb
fistpl
add
dec
pop
push
xor
insl
fmuls
dec
xorl
pop
cmp
and
add
lock
dec
adc
out
jmp
mov
loop
jno
mov
jmp
movsl
add
xchg
in
mov
inc
inc
cmp
or
dec
aaa
outsl
mov
cmpsb
in
bound
dec
lea
mov
popf
stc
negb
hlt
out
cmp
ret
notl
xchg
iret
xor
aam
cmp
adc
imul
in
mov
and
aad
repz
jbe
adcb
xorb
lods
orl
adcl
jg
imul
pinsrw
inc
lods
xor
fnstcw
mov
into
and
fistpll
and
aaa
and
popa
arpl
mov
incb
nop
cmc
shll
int
jg
je
test
cwtl
xor
insl
pop
and
cmp
daa
jmp
xchg
xor
add
sub
xchg
xor
jo
fimull
lods
sub
xor
push
int
test
mov
jns
cmp
lcall
test
pop
ljmp
add
or
xchg
mov
rcrb
aad
sarb
adc
dec
cmp
pop
bound
lret
pop
into
data16
dec
sub
in
dec
jl
hlt
in
jecxz
out
sbb
or
es
mov
call
gs
dec
jne
xchg
sub
sbb
or
or
lcall
enter
loope
mov
dec
andb
repnz
inc
push
das
fsubrs
lods
fimull
insl
cli
mov
push
sub
in
cmp
xlat
push
je
imull
jge
dec
dec
or
dec
fisubl
mov
lahf
out
enter
ljmp
inc
in
pop
pop
incb
fbstp
adc
jb
or
fwait
push
bound
ret
pop
loopne
mov
icebp
les
inc
sub
mov
adc
mov
daa
popa
clc
insl
mov
stc
stc
imul
adc
mov
or
aad
xor
out
insb
dec
and
and
push
repnz
jnp
mov
xchg
sbb
pop
mov
pushf
or
fsub
jno
push
or
cmp
arpl
sub
dec
ret
adc
ja
xchg
mov
andw
or
mov
xchg
in
mov
cmc
push
push
push
imul
mov
mov
mov
aad
fs
and
mov
subb
cltd
sarl
mov
sbb
sbb
jl
dec
xchg
mov
mov
shl
fmulp
jp
nop
movsl
pop
nop
pop
xchg
mov
jne
cli
bound
sub
push
out
stos
add
mov
test
mov
mov
mov
jae
or
lcall
lret
cmpsb
js
mov
jb
sub
jmp
dec
jns
jnp
insl
or
add
out
rcrl
subl
dec
sub
ja
data16
pop
lds
jno
scas
add
fwait
xchg
mov
data16
out
xchg
addr16
xorl
inc
xor
mov
or
xlat
sub
fdivs
fucomip
inc
inc
push
push
scas
push
jb
or
jg
inc
ss
sti
stc
adc
out
cmp
sbb
mov
loop
dec
mov
cltd
int
add
sahf
inc
imul
pop
add
push
aaa
sarb
icebp
adc
subl
pop
mov
mov
dec
xorl
mov
lods
mov
jle
fdiv
mov
push
ljmp
push
or
fsubl
jl
rolb
sbb
push
pop
and
xchg
int
std
push
push
in
lret
dec
sbb
mov
fs
jle
int3
in
or
mov
jecxz
imul
test
repnz
shlb
out
mov
pop
jecxz
loop
or
dec
fs
sbb
popf
das
fmull
leave
cmpsl
inc
xchg
or
sbbl
push
mov
int3
push
xchg
popf
pushf
push
jl
sbb
inc
aam
sub
dec
sarl
insl
mov
rcll
hlt
dec
and
xchg
mov
pushf
repz
push
popa
into
cmp
pop
movsl
gs
sti
ss
popa
sbb
push
jno
fcoms
lds
and
aas
out
xchg
stc
shrl
leave
fmull
dec
jbe
movnti
sub
mov
nop
mov
push
or
ds
int3
in
push
and
jl
pop
ss
dec
movsb
jno
iret
daa
ljmp
xchg
loope
notl
xor
in
cs
pop
or
std
fwait
push
aad
jl
jnp
mov
sub
ret
imul
add
ss
mov
mov
dec
imul
gs
aas
xchg
mov
lock
shr
out
adc
pop
mov
loope
mov
or
pop
ficoml
push
divb
shlb
cmpsb
aam
fadds
rolb
xchg
js
scas
sub
add
imul
rcrl
add
mov
inc
stos
sub
das
icebp
push
ret
aad
aas
sub
pop
iret
test
or
and
cmc
repnz
add
cli
sbb
mov
jmp
das
mov
outsb
repnz
repnz
and
sarl
jnp
stos
icebp
dec
cmp
mov
arpl
mov
fwait
aaa
push
adc
dec
xor
xor
xor
sbb
bound
push
sbb
sub
xorb
div
hlt
and
sbb
and
scas
dec
push
int3
test
incl
jno
mov
xorl
repnz
loop
dec
stos
fs
push
scas
and
push
mov
into
sbb
sbb
sub
imul
sti
or
adc
or
fs
in
out
outsl
xchg
insb
inc
sbb
popf
mov
mov
loope
repz
or
pushf
and
inc
sub
xchg
enter
pop
jbe
mov
push
out
push
pop
adc
int3
push
loopne
sub
jbe
sub
push
movsb
inc
mov
fwait
mov
imul
dec
jbe
leave
fwait
aam
in
rcll
mov
std
sub
fcompl
mov
mov
mov
adc
in
or
es
jno
push
fs
movsl
push
frstor
fadd
movsb
shrb
scas
pusha
popf
std
sub
mov
addr16
iret
std
xlat
push
int
mov
mulps
mov
lods
jmp
jnp
sub
loop
fnstenv
fistpll
outsl
imul
jp
adc
jae
add
jne
jne
aam
std
popf
mov
popf
push
out
cltd
leave
popf
xor
pushf
jmp
sub
jns
pop
stos
imul
fs
cmp
mov
insb
loop
rcrl
add
pop
in
inc
cs
push
insb
pop
pushaw
scas
fwait
rcll
jge
icebp
lods
in
inc
dec
imul
add
or
push
jne
jno,pt
mov
fiadds
push
xchg
sub
push
cmp
add
mov
dec
dec
add
push
pop
push
or
adc
dec
stos
sbb
xchg
movsl
mov
pop
xor
sbbl
mov
stc
fs
adc
testl
outsl
pop
aas
loopne
xchg
cli
insb
aam
mov
imul
push
jl
leave
jns
in
fdivl
leave
add
dec
sub
fwait
xchg
cwtl
xchg
incl
scas
fs
push
jmp
xorw
add
cltd
sahf
out
outsb
mov
ficompl
and
stos
add
or
popl
adc
pop
xor
pop
mov
data16
jae
add
icebp
add
push
dec
add
jge
mov
push
cmpl
out
mov
jl
lds
gs
pop
push
divb
mov
sub
mov
pop
adc
test
js
in
movsb
pusha
mov
and
negb
inc
jl
fimull
pop
lods
sbb
mov
or
roll
jmp
enter
push
inc
mov
mov
add
cmc
stos
daa
in
sbb
jb
lret
mov
outsb
into
xor
inc
in
push
and
movsb
jle
lret
sbb
pop
sbb
xor
and
out
scas
aaa
mov
sbb
ret
lea
outsb
loope
add
outsl
das
jo
push
sahf
lea
dec
sahf
mov
pop
push
aaa
xlat
loope
sahf
fcmovne
and
out
int3
or
jne
fs
out
int3
enter
mov
and
sbb
out
add
popa
lret
push
or
shlb
add
gs
pop
clc
dec
leave
mov
cltd
jg
xchg
cmp
nop
mov
stos
mov
ljmp
xor
xchg
mov
mov
int
sbb
push
push
movsl
sahf
push
jbe
loope
sbb
sarb
aam
lds
xor
cltd
push
aaa
dec
aaa
xorb
sbb
inc
mov
cmp
and
jno
rol
add
repnz
rcrl
call
jl
aam
loope
jno
push
repnz
xlat
imul
rorb
add
inc
mov
jmp
icebp
lea
imul
stc
mov
idivb
and
sbb
lret
imul
mov
pop
or
mov
push
push
jns
rorl
sub
jecxz
xchg
xchg
mov
in
rcll
mov
cmc
lret
fstps
xor
push
bswap
inc
aas
lret
aad
mov
xor
jmp
lods
or
adc
add
lods
cmpsb
stos
inc
hlt
ja
hlt
imul
cli
mov
lret
ret
inc
aaa
adc
dec
cmpsb
adc
sbb
test
arpl
fdivrl
sub
mov
aam
mov
rolb
movsb
out
lods
push
int
xor
mov
pop
sub
into
enter
in
dec
das
arpl
test
loop
cltd
lahf
iret
mov
xchg
les
decb
add
or
mov
cmp
push
cli
or
in
push
pusha
xlat
inc
mov
xorb
addb
xchg
push
jno
or
dec
add
mov
or
or
jmp
sbb
cli
cltd
xchg
xlat
sub
pop
xchg
xchg
push
add
xor
push
or
mov
stc
and
rorl
lcall
xchg
cmpsb
mov
lock
jecxz
int
popa
dec
loop
mov
fsub
int3
insl
repz
mov
arpl
andl
adc
push
inc
cmp
adc
push
clc
inc
sbb
jo
push
int
xchg
sti
repz
je
es
arpl
pusha
inc
xchg
sbb
xor
jle
dec
sub
aaa
or
push
ret
pop
pop
push
subl
mov
push
outsb
popa
dec
les
pop
sub
pop
mov
mov
shr
arpl
add
jecxz
fcomi
mov
pop
adc
cld
jp
andl
sub
inc
sti
pusha
dec
or
or
and
xchg
jl
je
hlt
mov
xchg
mov
imul
nop
jns
push
mov
addr16
mov
inc
outsl
and
das
lods
cmp
mov
rorl
fcompl
imul
std
sbb
inc
or
movsb
dec
push
mov
jecxz
ss
cmpsb
imul
inc
aas
fimuls
sub
int3
or
lret
test
add
xchg
jmp
fmuls
adc
xor
cmp
je
out
adc
out
mov
pop
pushf
das
push
mov
push
stos
adc
aad
sbb
mov
iret
inc
lahf
and
and
call
inc
icebp
ret
aas
das
fistpll
pop
or
mov
mov
ret
adc
fldt
sti
adc
ret
xor
test
nop
and
or
cmp
push
ror
cmp
movsb
cmpsb
fdivrs
mov
aas
mov
jl
ret
add
out
pushf
stos
xlat
sub
lds
cwtl
addb
sub
mov
jae
jbe
cltd
dec
inc
call
fbstp
add
repnz
pop
push
mov
push
scas
mov
jl
jno
jp
inc
mov
inc
push
ret
dec
sub
loope
jae
jmp
es
es
int
scas
mov
fsts
add
scas
mov
int
jle
cs
jne
jmp
inc
sbb
scas
and
hlt
lret
je
mov
negl
xchg
scas
lea
movsl
dec
pop
ja
pop
inc
dec
dec
and
cltd
daa
pop
xor
or
push
lret
cmp
push
cmpsl
test
fdivl
jle
push
sbb
dec
push
in
inc
cld
add
mov
and
cmp
adc
loop
in
mov
and
mov
arpl
jle
shr
mov
sub
xor
or
mov
jb
xchg
or
mov
loop
push
sbb
sub
jle
xlat
les
inc
decl
lods
adc
mov
repz
cltd
fadd
out
xchg
mov
push
cmp
lahf
mov
outsl
fildll
mov
cmp
jg
jb
jl
cmpsb
loopne
xchg
jmp
test
data16
sub
scas
sbb
mulb
iret
dec
ja
cmp
pop
or
loop
mov
add
xchg
add
inc
jne
pop
mov
fwait
movb
mov
setae
push
arpl
xor
lret
call
sbb
dec
xchg
rcl
mov
xchg
outsl
xor
pop
outsb
sbbb
jb
pop
es
pop
jns
mov
pop
or
xchg
insb
lods
adc
and
inc
xchg
push
sbb
and
pop
mov
testl
inc
add
je
out
lds
sub
leave
and
mov
ljmp
jp
cmp
xchg
rorl
jl
unpcklps
adc
mov
lods
arpl
mov
lods
mov
stos
and
jae
fstpl
mov
int3
out
add
xor
pop
push
mov
in
jp
cwtl
pop
and
inc
cmp
pop
ds
addr16
cwtl
or
rorl
push
sub
pop
sbb
fldcw
push
je
jne
fidivl
dec
ss
mov
inc
xor
test
movsb
jne
clc
or
pop
repz
pop
dec
cs
sbb
stos
fistps
and
ljmp
loop
xchg
jl
mov
lds
mov
inc
push
xor
faddl
outsb
inc
fisubl
inc
mov
pop
enter
push
fldl
xchg
fwait
data16
cltd
arpl
inc
and
xlat
or
xchg
out
or
cmp
pop
jmp
push
dec
inc
xchg
movsl
pop
mov
mov
sbb
adc
dec
data16
push
ret
call
xchg
mov
inc
push
stc
out
cmp
loop
dec
adc
scas
aad
mov
mov
std
and
xchg
into
mov
push
push
jns
cwtl
test
mov
pop
je
jb
lahf
pop
sub
fs
pop
repnz
insl
dec
in
pop
mov
rorb
xchg
mov
bswap
push
mov
dec
das
cmp
push
sbb
inc
mov
imul
and
sbb
insl
xor
int3
push
pushf
fwait
idivb
add
cmp
adc
jle
icebp
movsl
jnp
fidivrl
or
popf
loop
loop
jno
mov
xlat
lea
sbb
adcl
pop
sti
insl
daa
cmpsb
mov
or
repz
xchg
pop
mov
dec
jmp
outsl
repnz
lcall
sbb
add
push
cmc
adc
inc
adc
es
lods
push
or
push
ja
mov
xor
lock
xlat
scas
loopne
outsb
mov
and
sub
jns
into
int3
cmp
repnz
sbb
stos
call
std
jge
jbe
mov
adc
sub
inc
lahf
adc
js
cmp
bound
movsb
lret
xchg
enter
add
jne
dec
mov
xchg
jmp
ret
mov
in
dec
js
sub
cmp
repz
xchg
stos
or
dec
lcall
rclb
xchg
inc
ret
call
sub
setge
icebp
or
int
fwait
pop
sete
gs
int
jo
jecxz
mov
fs
xchg
push
sbb
cmpsl
dec
stc
cmpsb
les
jmp
dec
inc
leave
pop
stos
xor
xor
daa
adc
mov
out
les
loop
sbb
mov
pop
xor
xor
bound
sbb
sbb
lods
mov
inc
sti
jmp
xchg
push
xor
dec
rol
jne
add
popa
out
mov
mov
jg
inc
dec
ljmp
cmp
mov
rcl
mov
add
hlt
shrb
aam
scas
pop
sub
mov
or
scas
mull
lret
loope
add
sbb
mov
push
and
dec
nop
jle
inc
inc
mov
cmp
in
xor
cmc
and
lea
andl
sbb
int3
fwait
js
call
fsubs
xchg
fidivs
and
push
lea
test
lret
sbb
je
inc
mov
push
pop
ds
push
sub
and
mov
sbb
in
sub
imul
push
scas
ja
mov
pop
sbb
js
lahf
push
push
pop
push
jbe
inc
bound
xchg
fs
aad
nop
cli
loop
test
mov
lahf
pop
and
push
cwtl
push
js
mov
mov
sub
jge
scas
decb
repz
leave
outsb
mov
sbb
xchg
jmp
xchg
jnp
jb
adc
dec
or
and
pop
mov
push
mov
negb
cmc
sti
outsb
jg
cmc
mov
inc
cmp
xor
add
fbstp
das
popa
insb
int
dec
cmp
pop
test
mov
push
lret
hlt
mov
cltd
sbb
ret
arpl
jle
pop
mov
mov
aam
push
imul
mov
leave
inc
and
daa
imul
or
sbb
push
jle
and
adc
cmp
inc
loopne
jmp
xlat
loope
push
add
ljmp
sahf
movsb
sub
loope
adc
repz
aad
push
and
xchg
in
rclb
push
sbb
pop
xlat
popf
dec
cmp
repz
pusha
and
int
add
clc
sub
jecxz
stos
push
loopne
aam
lret
mov
inc
push
sub
mov
or
dec
jg
or
push
sarb
call
and
mov
jecxz
insl
jle
dec
pop
shrl
aad
pop
jne
or
stc
dec
insl
iret
into
add
mov
nop
lods
add
int
sets
call
fsubrl
push
test
in
and
sbb
sbb
xor
fdiv
in
jno
mov
xor
inc
pop
int3
adc
divl
fstpt
inc
aaa
bound
jb
xchg
js
fbstp
loopne
xor
dec
xchg
mov
fisubs
and
loop
push
inc
js
ret
adc
push
es
adc
mov
inc
lds
in
cwtl
icebp
fwait
cwtl
dec
add
add
lea
bound
daa
imul
pop
mov
push
test
adc
push
clc
mov
mulb
push
push
sub
ret
mov
add
lea
dec
inc
inc
stos
jbe
repz
cmc
mov
xchg
jmp
test
outsl
insb
aas
jmp
mov
jp
arpl
loope
or
lahf
or
addr16
pop
sahf
mov
mov
xor
inc
add
inc
cltd
lods
fs
add
fisubs
mov
pop
xchg
push
inc
aaa
and
jl
mov
lahf
sar
mov
xor
mov
outsb
push
jns
outsb
mov
sub
cmp
xchg
xchg
lret
push
repnz
hlt
mov
dec
int3
xchg
lahf
out
mov
in
imul
pop
add
hlt
mov
orl
add
sti
repnz
dec
dec
popa
bound
xchg
mov
xchg
test
ret
dec
mov
sbb
and
fnstsw
add
clc
lods
mov
in
push
fwait
cltd
xchg
aad
add
or
dec
test
dec
lods
and
test
aaa
cmc
pop
mov
imul
push
mov
icebp
loopne
scas
add
into
nop
jecxz
xor
pop
divb
jmp
in
fwait
xor
add
xchg
adc
inc
jno
mov
outsb
sub
pop
push
test
arpl
fcmovne
icebp
mov
test
mov
div
fcmovnu
insb
and
inc
inc
mov
lods
sbb
rorl
movsb
insb
stos
dec
xor
adc
and
insb
push
mov
jae
ja
imul
imul
jnp
sbb
nop
or
out
inc
mov
lods
pusha
rol
push
xchg
cmp
ret
jmp
add
xchg
mov
int3
sub
or
jo
lock
mov
xchg
cltd
in
mov
ror
mov
lahf
sbb
lods
ja
mov
add
push
jmp
call
cwtl
and
push
jnp
mov
dec
push
pushf
push
data16
push
pop
lea
or
push
cmp
cltd
add
ljmp
push
ret
js
push
xor
mov
push
ljmp
add
sub
xchg
movsb
and
mov
xchg
idivb
movsb
lods
jns
cmp
dec
sbb
std
xchg
cmc
push
popf
js
cmc
loopne
mov
popa
scas
leave
add
add
call
inc
jmp
dec
jg
int
xchg
out
icebp
call
icebp
popa
fidivrs
jno
push
ds
daa
xchg
ljmp
dec
mov
adc
lds
fadds
insb
repz
ss
std
mulb
jo
sub
jmp
jae
mov
shlb
out
les
outsb
adc
xchg
test
jns
fldt
movsl
inc
dec
popf
outsb
xor
cmpb
and
cmp
pop
fcmovnb
mov
mov
test
sahf
xchg
jmp
pop
cli
mov
pmulhuw
cmp
in
ja
sbb
add
lret
sbb
cmp
inc
stos
xchg
cmp
mov
into
addr16
insl
scas
xchg
mov
inc
dec
cmpsl
imull
icebp
or
lods
mov
lcall
adc
cwtl
adc
or
mov
xor
cmpsl
out
or
push
loope
aaa
leave
xchg
mov
add
mov
aam
sahf
push
outsl
addb
imul
inc
xchg
icebp
fistl
and
fcmovnbe
ss
rcll
popf
incb
xor
xchg
cmp
and
dec
stc
insl
xchg
jb
cmovge
clc
mov
pop
adc
sbb
or
mov
push
and
pop
lret
sbb
test
fnsave
cmp
enter
data16
mov
push
repnz
idivl
leave
enter
out
shll
cmp
inc
out
shrb
out
pop
mov
jb
inc
lret
dec
mov
xor
xchg
test
call
icebp
pop
sub
jnp
mov
sbb
jno
cmpsb
fs
cs
lods
inc
insb
nop
je
cmp
stos
nop
xlat
sbb
mov
add
dec
cmp
fwait
or
mov
rorb
xchg
sbb
lods
cs
gs
popa
inc
sbb
push
pop
bts
pop
sub
fpatan
xchg
mov
and
mov
jl
je
dec
lahf
aas
sub
pop
dec
insb
sbb
cmpsb
cmp
push
ljmp
insb
sub
fadds
popa
cltd
cltd
mov
cmpl
dec
xchg
out
cmc
insl
movsb
aas
mov
xchg
xchg
out
fsubrs
mov
mov
je
sbb
int
pop
mov
loopne
jl
pushf
dec
cmp
mov
repnz
mov
nop
arpl
adc
add
repz
pop
cmp
out
sarl
gs
std
xor
jge
push
nop
lcall
push
fs
or
sbb
sub
and
dec
hlt
inc
mov
mov
add
enter
addr16
imul
dec
into
cmp
subb
mov
or
int3
fistps
jo
pushf
test
xchg
out
push
push
mov
out
repz
movsb
gs
daa
push
int3
mov
xlat
and
mov
test
popf
mov
out
adc
or
jo
add
mov
sub
dec
pop
sub
sbbb
adc
aas
fldl
ret
pop
mov
xchg
pop
cld
cmp
mov
mov
sub
xchg
xchg
pop
test
xor
mov
scas
jle
and
inc
mov
lock
mov
cmpsl
mov
mov
in
imul
cli
pusha
dec
dec
andl
push
adc
lret
cwtl
pop
cmp
inc
mov
mov
icebp
mov
movsb
dec
pop
loope
sahf
decl
out
frstor
or
ljmp
es
xchg
outsb
cmc
mov
shl
fwait
push
xor
mov
cmpsb
jmp
cld
scas
xchg
or
insl
mov
in
aam
or
mov
pop
fwait
adc
inc
adc
push
jecxz
jb
sbb
dec
fsubr
mov
mov
popf
xchg
lods
mov
mov
fisubrl
lds
cmp
cli
xorb
add
pop
push
push
aad
out
jecxz
scas
aaa
cli
xchg
stos
jo
fstpl
pop
negl
or
inc
into
mov
aad
adc
stos
repnz
mov
xchg
jp
addb
and
stos
or
addl
lret
adc
fbstp
ror
cld
ja
nop
or
xchg
mov
test
push
jmp
test
lea
or
jne
ret
enter
mov
leave
pop
sub
repnz
jge
pop
repz
pop
pop
out
and
loopne
out
outsb
enter
pop
call
jl
mov
lds
xchg
dec
repnz
dec
xchg
push
pushf
incl
add
xchg
movsl
jecxz
push
jne
xchg
mov
mov
push
aam
pop
mov
pop
es
jae
xor
inc
or
insl
rclb
or
push
cmpl
mov
xor
mov
pop
out
push
sub
cwtl
adc
rclb
int3
gs
lea
sub
jmp
ljmp
add
push
insb
out
lods
or
and
popf
xor
mov
into
xor
push
dec
ret
js
push
icebp
sbb
ss
test
push
add
mov
cmp
sbb
into
inc
imul
in
pop
inc
test
shrl
gs
cltd
xor
movsb
sub
je
ljmp
mov
push
mov
or
mov
mov
push
push
adc
imul
inc
lret
and
in
test
push
fmuls
lods
aaa
loop
xchg
dec
sbb
insl
cmp
mov
mov
inc
pusha
movsl
dec
xor
js
add
xchg
xor
sbb
sahf
mov
orl
mov
jmp
push
xor
sbb
adc
push
int
and
adc
sbb
es
addb
sub
push
mov
aam
or
lods
dec
popa
test
out
mov
shlb
aaa
push
lcall
jmp
adcb
and
outsb
push
in
fimuls
sbb
xor
inc
pop
mov
dec
mov
int3
mov
scas
cmc
repnz
mov
cmp
rcrl
lret
or
cld
cmp
out
dec
push
stos
test
fs
out
aas
xchg
into
scas
lds
mov
lret
insb
jb
ss
sbb
in
inc
xchg
cmp
repnz
mov
movsl
rcrl
or
subb
xor
mov
ret
or
cld
add
fsubr
stos
frstor
xchg
mov
xchg
hlt
insb
bound
sbb
mov
test
les
adc
cmp
or
mov
fcoms
sbb
dec
xor
fs
pop
xchg
rorl
ror
stos
cmp
adc
roll
enter
inc
mov
sbbb
pop
dec
dec
shl
lahf
dec
fdivs
out
out
popf
adc
int
pop
inc
dec
loopne
fdivr
shlb
out
arpl
in
cmpb
pop
sbb
cmp
pop
jno
dec
ljmp
inc
add
mov
dec
int
out
js
mov
mov
or
popf
repz
add
jae
shlb
xchg
xchg
sub
lods
mov
loopne
sbb
adc
inc
js
mov
or
hlt
jnp
sub
dec
pop
dec
loope
cmp
add
mov
inc
push
lret
or
iret
xorb
xor
jle
pusha
xchg
test
sub
jl
sbb
clc
and
and
or
xchg
lods
fisttpll
xorb
mov
xchg
adc
mov
sbb
mov
cmpb
add
fidivs
cmpsb
adc
pop
adc
mov
mov
stos
das
test
xlat
sub
fsubl
sbb
mov
neg
stc
icebp
ret
pushf
fimull
pop
enter
xchg
push
out
push
mov
mov
stc
mov
repz
shrl
push
pop
lcall
mov
fs
cmp
push
xor
mov
jnp
jmp
leave
mov
inc
shrb
rcrb
jecxz
push
mov
aaa
jb
push
leave
jnp
and
cmp
mov
jb
insb
xchg
adc
mov
iret
clc
and
ret
cmp
push
sbb
dec
add
mov
scas
fnstsw
push
insl
push
stos
pop
sbb
jnp
call
aaa
inc
sbb
jbe
addr16
fwait
dec
jae
fstps
push
pushf
sbb
inc
pop
movsb
mov
jle
xor
addr16
ret
push
stc
loop
jb
fldenv
mov
xor
je
push
mov
sbb
popf
pop
cwtl
cmp
sbbl
gs
jo
inc
push
inc
add
aam
sbb
inc
sbb
in
fmuls
popf
fsubrl
aaa
sub
jl
lds
je
jae
inc
xor
xchg
lods
decl
xchg
cld
xchg
ret
jno
add
sub
sti
mov
out
mov
jmp
inc
add
nop
or
xchg
inc
iret
xchg
clc
aad
mov
xor
sbb
pop
xchg
and
or
inc
lcall
jno
iret
mov
dec
jg
jmp
lods
out
cmpsl
stc
xchg
es
mov
orl
imul
repnz
xor
adc
pop
arpl
jg
fildl
pop
jp
pop
aas
push
jl
inc
int3
in
xor
cmpsl
xlat
out
fnsave
pop
and
add
jb
dec
mov
test
pop
push
stc
in
inc
bound
sbb
add
sbb
dec
adc
xchg
add
and
movsl
or
inc
mov
test
xchg
add
push
jo
cmp
pop
mov
fwait
adc
clc
sub
test
jle
and
adc
inc
push
cltd
jnp
cmpsl
and
out
jmp
ljmp
ss
imull
sbb
rcll
loop
push
mov
mov
outsl
dec
dec
iret
lds
dec
cs
xor
test
fwait
insl
idivb
push
mov
lods
cmpsb
aaa
daa
push
in
or
test
iret
or
sub
dec
dec
ja
inc
sti
mov
dec
in
cmp
in
xor
rcr
mov
xchg
fxch
mov
push
in
xor
shrl
in
sbbl
mov
xchg
outsl
call
sarl
lods
mov
test
cmc
lahf
and
jnp
mov
lods
or
cmp
mov
and
mov
push
xchg
lds
push
test
inc
call
pop
adc
pop
sub
and
dec
or
rorl
mov
stc
jns
in
fcomps
out
or
es
pop
cmp
push
push
dec
cmp
fld
lret
dec
outsl
lea
fildl
cld
push
jp,pn
and
shr
jno
loope
inc
jle
enter
inc
mov
push
inc
xor
pop
inc
xor
inc
or
cmpsb
inc
jae
mov
dec
jae
cmp
lods
mov
pusha
sbb
dec
xchg
sub
imul
test
leave
mov
jae
pushf
pop
cwtl
enter
hlt
repz
sbb
inc
dec
shll
inc
and
adc
xchg
pop
call
pop
sub
in
fdivrs
mov
in
push
push
xor
shll
push
pop
adc
fstl
in
outsb
popa
loop
loope
mov
mov
pop
pop
pop
rorl
jmp
dec
out
fwait
jl
cmp
adc
cmp
lock
jge
push
es
mov
xor
adc
pusha
ss
push
push
sbb
daa
test
nop
lock
mov
je
fidivrs
ret
es
sub
xchg
std
imul
xlat
aad
nop
push
outsl
inc
ja
fstp
stos
adcb
jg
rol
jle
inc
popa
pop
outsb
add
inc
nop
outsl
push
sbb
addl
inc
lcall
call
jae
pop
lahf
or
adc
jae
adc
mov
adc
sbb
xor
insl
out
cmp
lahf
cli
mov
lods
int3
sub
mov
adc
lcall
add
sahf
loope
roll
mov
sbb
and
stos
pop
adc
mov
sbb
inc
gs
in
addl
sub
dec
rol
push
or
mov
out
cmc
cmp
popf
popa
in
dec
mov
push
jns
stos
adc
dec
mov
pusha
fsts
dec
push
mov
mov
xchg
mov
sub
test
lahf
jnp
mov
sbb
sbb
test
and
mov
arpl
pop
jnp
stos
inc
dec
shll
pop
subl
lcall
jb
sub
mov
sahf
fsubrs
sub
or
ret
dec
sub
repnz
push
andb
sahf
icebp
fidivl
call
inc
test
cmpsb
data16
mov
out
aad
jle
insb
pop
loope
ret
rclb
shl
or
push
pop
cmpsb
pop
sub
adc
jecxz
repz
pop
add
cltd
dec
cmpsl
popa
outsb
inc
inc
push
in
js
push
inc
push
pop
out
mov
scas
outsl
lods
sbb
add
rcrb
mov
in
ss
addr16
xor
scas
xchg
imul
xchg
repz
test
jmp
or
pop
insb
popa
cmp
inc
jo
test
inc
sarb
xor
dec
sub
daa
data16
dec
imul
js
jo
iret
add
mov
mov
push
xchg
xchg
inc
data16
mov
inc
rolb
dec
cwtl
push
mov
jp
sti
dec
cltd
xchg
or
dec
xchg
and
dec
push
cmp
add
jnp
add
stc
sub
pmaxub
fwait
std
repz
repz
and
push
adc
iret
stos
out
jo
stos
iret
lods
xor
out
and
pop
inc
mov
popf
dec
add
ret
sti
into
pop
pusha
pop
popf
dec
leave
dec
lret
shl
nop
mov
xor
sub
test
add
or
pop
rcrl
sbb
inc
imul
cltd
inc
cmp
inc
ss
pop
or
movsl
sub
int3
insb
xor
cmc
insb
dec
ret
int3
cld
dec
mov
jge
pop
mov
push
insb
mov
mov
clc
push
add
movsb
lcall
stc
inc
sbb
sub
ds
xchg
aam
loopne
fsts
data16
notl
shll
lret
ljmp
outsb
jle
sbb
cmp
outsl
push
and
pop
rorb
dec
mov
or
jbe
pop
shlb
popa
pop
lcall
adc
es
dec
jp
fbld
sbb
movsl
pop
mov
jp
dec
das
lock
pop
ret
imul
lret
incl
sbb
mov
stc
and
push
test
sbb
jmp
add
xchg
fistpll
mov
xor
and
lods
adcb
add
jo
cmp
xor
push
dec
mov
pop
fst
adc
ucomiss
push
mov
add
int3
dec
in
mov
inc
cmp
test
sub
jmp
adc
dec
addr16
mov
lea
mov
in
aam
adc
add
pushf
xchg
inc
cmp
xor
std
sub
enter
pushw
loope
mov
mov
jle
in
repz
addr16
scas
prefetch
or
nop
mov
cmp
mov
sub
jae
jbe
fstps
mov
or
pop
sbb
cmp
push
repz
sahf
or
sbb
cmp
inc
xor
subl
out
das
lods
in
mov
or
dec
imul
rolb
mov
in
xlat
mov
sbb
xchg
pop
push
ss
cmc
ret
pusha
and
ljmp
xchg
push
inc
mov
imul
xor
push
adc
or
mov
xchg
pop
mov
dec
fucomp
cmp
mov
mov
hlt
popa
add
dec
push
and
cmp
xor
or
int
cmpsl
xchg
movsb
pop
stos
and
mov
rol
loopne
jle
sbb
pop
mov
lds
lea
pop
jb
lcall
add
mov
cmp
shll
fwait
xor
pop
mov
int
test
aaa
lock
xchg
dec
jno
les
addb
pextrw
pop
push
popa
enter
and
and
lods
inc
lods
adc
popa
xlat
or
mov
test
xorb
mov
push
xchg
pop
xchg
mov
repz
jmp
push
lcall
jb
ss
inc
andl
mov
mov
out
push
fdivrl
mov
repnz
outsb
sbb
push
fistl
jecxz
push
nop
push
andl
dec
icebp
mov
mov
inc
jo
push
push
pop
push
and
outsl
adc
sbb
sarb
or
loope
insb
xor
and
imulb
lock
out
out
xlat
arpl
push
jo
outsb
jp
fs
inc
adc
stos
rcrl
xchg
xchg
inc
add
push
inc
js
in
out
sbb
repz
xor
xor
lahf
sbb
shll
push
lods
inc
in
cmp
out
rclb
and
mov
pop
adc
stos
mov
lcall
sarb
push
test
lret
ja
movsl
dec
cwtl
xlat
xchg
rcrb
popa
clc
jge
mull
ja
jg
out
inc
push
xor
test
lds
repz
insb
arpl
clc
lods
fwait
iret
jle
mov
mov
js
push
jp
mov
inc
add
xchg
jl
lods
movsb
jne
mov
sbb
clc
or
mov
push
mov
stos
sub
sub
insb
mov
and
xchg
aad
jnp
rcll
or
int3
leave
fldt
jae
ffree
popf
push
sub
xchg
push
push
ljmp
inc
stos
out
mov
xchg
lret
dec
das
mov
add
out
mov
push
jl
cli
mov
scas
push
sbb
shr
inc
popf
loop
ret
shl
cltd
test
outsb
arpl
mov
loopne
pusha
leave
pop
mov
sbb
and
add
push
bound
pop
inc
jp
fld
cmp
xchg
fs
out
lret
jge
insl
push
stc
ss
std
dec
cmc
push
fsubrl
cmp
inc
xor
in
loop
dec
out
scas
scas
jae
dec
jo
push
jne
repnz
mov
bound
sub
push
cmp
mov
pop
and
out
gs
fucom
shrb
stos
imul
mov
jno
outsb
jg
lods
cwtl
subb
divl
cmpsl
push
inc
adc
insb
repnz
xor
cmp
and
inc
fldt
popa
add
scas
mov
daa
out
aad
stos
or
mov
loope
subw
jb
gs
scas
or
aas
cmpsb
sti
ja
popa
xor
shlb
push
mov
sti
mov
mov
decl
mov
adc
sbb
mov
or
js
out
imul
int3
icebp
addb
in
popa
xor
shrb
sbb
jl
repnz
jbe
outsb
test
imul
bound
xor
popf
mov
inc
daa
repz
ds
mov
xchg
sti
and
mov
mov
jge
dec
xlat
xchg
in
cmp
out
push
jmp
xor
cmp
jne
jbe
add
cmp
lods
test
mov
pop
and
sub
jno
cmp
xchg
cld
xchg
xlat
dec
cs
cmp
or
int
and
ret
sub
scas
ret
mov
aaa
xchg
add
jno
cmp
sbb
pop
adc
testl
lahf
pop
add
mov
or
xlat
xor
sub
adc
sub
dec
das
jmp
jmp
add
mov
test
push
or
insl
dec
aam
mov
sbb
sub
or
mov
jno
mov
jae
fisttpl
dec
ds
push
fstpt
int3
pop
pop
inc
int
int
lods
sbb
nop
ret
xor
fstps
shrl
outsb
lock
out
mov
mov
or
test
lods
ja
sbb
lea
xchg
xchg
stos
pop
aaa
movsb
cli
push
bound
scas
add
test
popf
in
sbb
jle
xchg
in
clc
xor
ja
in
stos
mov
testl
popl
pop
dec
xchg
xor
int
mov
cmpsb
and
cmp
in
rcrl
les
imul
inc
scas
mov
push
or
fsubrl
sub
jmp
mov
xlat
aam
dec
xor
idivl
dec
andl
test
xchg
sti
xchg
fmulp
sahf
jge
push
mov
cmp
and
sub
mov
and
stc
inc
shl
mov
lahf
out
jp
xchg
mov
and
cmpsl
mov
js
fsubrl
test
pop
xor
popa
adc
push
leave
rcrb
jge
xchg
fdivl
jne,pn
add
xchg
in
loope
lcall
cmp
rolb
mov
xchg
scas
mov
in
jns
sub
adc
shrl
sub
leave
cs
or
and
gs
jp
icebp
pop
mov
push
mov
sahf
sbb
loop
inc
push
or
aaa
adc
pop
xorl
aas
mov
sbb
dec
adc
mov
das
and
dec
sbb
mov
ret
or
movsb
adc
mov
xchg
sub
adc
jbe
cmp
xchg
jbe
jge
mov
shr
mov
add
push
inc
outsl
gs
aam
jo
in
sar
daa
and
dec
xchg
test
fst
push
jp
xchg
out
sbb
mov
mov
pusha
cmc
imul
xchg
xchg
scas
add
cmp
hlt
jge
adc
mov
lock
add
int3
in
clc
cmpsb
nop
sbb
push
sbb
push
or
jge
shlb
cmp
insb
aad
das
stc
or
nop
mov
push
sub
or
aaa
iret
iret
call
jp
or
push
lods
fnsave
lods
mov
daa
iret
ficomps
test
cmp
pop
je
insb
xlat
or
add
pop
in
pop
loopne
xor
and
shl
mov
loop
push
data16
jns
xchg
xor
fdivrs
icebp
mov
cmp
bound
ror
bound
aad
inc
subb
sbb
xchg
mov
pop
sub
test
imul
sahf
je
mov
sbb
mov
sbb
inc
push
inc
mov
insl
mov
xor
out
mov
loop
sbb
pop
arpl
jmp
add
popa
outsb
in
out
mov
daa
bound
repnz
cmpsb
scas
xor
dec
sub
nop
pusha
add
fmulp
jp
or
xor
aam
sbb
sub
jnp
sub
leave
outsb
cmp
jne
dec
inc
xchg
inc
xor
xchg
jo
enter
lds
cmp
clc
dec
pop
gs
test
inc
xchg
popf
sub
dec
out
lcall
cmp
pusha
jg
xchg
xor
pop
scas
and
dec
ds
repz
ljmp
loop
outsb
push
int3
sub
filds
scas
inc
ret
inc
mov
imul
and
shl
mov
loop
adc
jae
aas
lcall
adcb
lcall
ja
push
mov
pop
dec
pop
jae
fbld
mov
adc
jp
pop
pop
fistpll
loopne
in
ret
imul
popa
rcr
in
popf
orb
pusha
out
add
pop
ss
push
test
lea
inc
ja
cmp
push
sarb
push
and
pop
enter
add
mov
int
push
sti
fsub
adc
jb
mov
loope
out
push
inc
ret
push
outsb
or
fnsave
sub
push
lea
xchg
adc
mov
lret
out
jecxz
mov
pop
jne
dec
fwait
jl
dec
xchg
divl
jae
xchg
xor
push
cmp
out
xor
adc
adc
mov
lods
or
dec
cs
inc
dec
jae
dec
ljmp
cli
jge
sub
dec
sbbl
inc
aam
add
add
scas
ret
cli
xor
add
lods
lret
test
lret
add
pop
jge
or
pop
pop
add
es
mov
inc
push
mov
fwait
sbb
clc
mov
add
dec
hlt
dec
or
jge
and
xchg
adc
push
mov
scas
loop
jge
in
aaa
push
in
dec
lea
fnstenv
mov
inc
leave
test
jp
adc
movsb
jecxz
pop
mov
cwtl
stos
push
pushf
sbb
pusha
mov
xchg
inc
nop
es
lret
pop
push
jmp
sub
stos
xchg
stos
push
mov
dec
sub
add
mov
lds
inc
xor
ds
inc
mov
insl
push
pop
fstl
andl
jmp
xchg
mov
mov
or
or
dec
dec
enter
jo
adc
push
mov
jbe
inc
movsb
incb
lods
xchg
push
cmp
lcall
push
push
mov
fidivs
stc
outsl
loopne
pop
mov
mov
adc
push
dec
int
sbb
add
push
roll
iret
loop
int3
clc
cmp
xchg
setno
pushf
lds
daa
rorb
lcall
sbb
enter
pop
push
adc
mov
mov
jge
cltd
xor
sbb
ret
xchg
cmp
in
sar
push
idivb
int3
test
test
lock
mov
and
xchg
mov
push
stos
bound
bound
xor
sub
add
aam
mov
out
mov
mov
cmp
mov
pop
add
lret
fisubs
mov
mov
push
mov
lret
cli
inc
pushl
inc
stos
gs
ds
pop
xchg
je
ss
cmp
and
ljmp
pusha
cli
aam
or
mov
sbb
loopne
out
push
test
and
dec
mov
stos
add
pop
out
lds
fcmovnu
lock
jbe
hlt
jne
cmc
je
out
icebp
mov
ja
add
mov
adc
inc
sarb
jmp
scas
mov
popa
insl
icebp
sbb
xchg
cltd
or
xor
add
and
sub
adcb
dec
movhps
dec
dec
sub
lret
ret
sbb
cmp
ds
pop
hlt
rcrl
dec
scas
push
fildll
dec
jmp
bound
in
addb
pop
je
mov
cmp
mov
movsl
stos
push
outsb
jbe
sarl
and
cld
adc
mov
loopne
sbb
dec
inc
divl
popa
out
mov
inc
nop
dec
je
pushf
in
push
out
jecxz
lods
jmp
out
or
pop
jbe
adc
shll
loop
addb
aad
mov
shrb
mov
divb
out
repnz
adc
loopne
ret
gs
fwait
jmp
xchg
jmp
mov
or
outsb
mov
sbb
pop
xor
aad
mov
adc
into
rcrb
mov
scas
push
sbb
lea
nop
inc
inc
push
add
sub
mov
lahf
cli
mov
ljmp
leave
loopne
mov
dec
push
fidivrs
aam
fdivl
push
cmp
mov
lods
push
push
and
cltd
leave
sbb
xchg
aad
mov
and
movsb
fs
pop
roll
pop
cli
outsb
subps
or
cmp
jb
xor
insl
mov
adc
outsb
lea
sub
pop
js
pushf
in
mov
push
ds
or
lcall
sti
inc
ret
mov
icebp
sub
jns
repz
dec
repz
lock
test
mov
xchg
xor
pop
outsb
in
inc
je
popf
inc
push
fbstp
data16
sub
add
sti
xlat
lahf
ja
popa
jbe
xchg
and
ds
loop
scas
into
subb
lret
or
inc
sbb
xchg
cmpsb
push
sub
out
push
aas
ret
jae
jae
out
push
cmp
stos
inc
movsl
divb
jne
aaa
out
mov
xchg
mov
sti
dec
into
imul
lods
mov
push
cmpsb
scas
shll
cmp
push
mov
lahf
mov
pop
fs
sbb
out
lret
jmp
movsb
pop
mov
repz
imul
cld
push
fmul
testl
icebp
pop
gs
int3
les
jp
adc
xor
outsl
or
cmpsl
loop
fiaddl
sbb
imul
addr16
jo
jp
push
or
cmp
jmp
js
mov
outsl
fs
mov
repz
repnz
in
outsb
xchg
cmpsl
out
jae
rcrb
dec
sub
insb
dec
lea
jge
into
and
fdivrs
outsb
mov
loope
cltd
cmp
push
out
mov
lret
inc
rorl
adc
jmp
pop
in
add
xchg
ret
mov
fnsave
lods
mov
push
xor
add
das
push
or
mov
mov
mov
scas
xor
mov
movsl
stos
test
push
cmpsl
sub
std
lret
mov
push
and
int
pusha
adc
and
jecxz
cmp
mov
push
lds
push
cwtl
rclb
int
xor
sti
jp
cmp
adc
xchg
xor
add
loopne
jge
add
scas
jg
mov
cld
xchg
cmp
cmp
cmp
sti
mov
pop
jb
cld
ds
jb
cs
addr16
add
add
je
add
mov
lock
ret
fstl
cmpsb
lcall
movb
adc
mov
push
xor
mov
mov
dec
cmp
dec
push
scas
dec
aaa
mov
aam
pop
inc
xor
in
aas
lock
dec
cmp
inc
cmp
pop
js
cmp
aaa
in
sub
in
mov
stos
fstps
or
xchg
in
mov
ret
les
push
stos
cmc
mov
jne
and
sahf
jnp
and
push
mov
dec
pop
jp
repz
leave
es
push
fisttpl
mov
and
sbb
sbb
adc
lds
add
jno
notl
dec
jecxz
mov
ror
repnz
mov
add
mov
add
and
imul
mov
out
leave
lret
shrl
lods
gs
lret
stos
ljmp
cmc
outsl
xchg
scas
and
gs
sti
gs
popf
dec
fdivr
cmc
pop
xchg
cwtd
cmc
cwtl
inc
push
fcoms
mov
loope
inc
adc
rcrl
fcoml
in
into
ja
dec
inc
jmp
mov
scas
pop
popf
jae
movsl
cs
std
fidivs
or
mov
data16
bound
xor
je
push
cld
pushf
ja
pop
cmp
cs
xchg
in
mov
and
in
or
push
sbb
ja
mov
sbb
pop
lret
xor
pop
xchg
stos
cwtl
hlt
mov
mov
pop
cmpsb
and
cli
xchg
sbb
cmp
out
cmp
loopne
or
or
add
add
xchg
in
addl
repz
fistps
jecxz
mov
scas
and
mov
jbe
xor
xchg
out
fsub
push
sub
push
outsl
cmp
inc
push
les
cmp
bound
imul
or
pusha
pop
push
in
out
push
lret
lods
push
mov
cmp
test
sbb
sbb
lds
fwait
in
sti
test
lcall
dec
andl
xlat
add
div
cld
shll
inc
or
mov
fs
push
lods
xor
inc
jg
push
xor
cmpl
mov
fldenv
scas
xor
push
mov
push
cs
cwtl
adcl
fs
mov
push
icebp
sub
mov
dec
pop
cwtl
mov
mov
push
pop
mov
mov
jno
xlat
int3
pop
push
add
pop
mov
cmpb
ret
in
insb
dec
jp
incl
mov
mov
clc
inc
lds
lret
test
xlat
fdiv
pushf
sbb
dec
xchg
mov
fldt
iret
arpl
lods
stc
inc
mov
and
in
jp
repz
lcall
sbb
mov
lock
pop
stc
int3
dec
cwtl
es
push
adc
daa
mov
xor
test
adc
cli
mov
shll
inc
jp
push
push
pop
mov
mov
jb
jo
or
push
lret
mov
jo
fsubs
aaa
fwait
or
imul
inc
and
lds
jae
cmc
aaa
sbb
pop
xchg
xchg
mov
mov
xchg
adc
mov
loope
or
xchg
bound
mov
out
pop
or
sbb
add
call
call
mov
aaa
cli
scas
sbb
repnz
jge
cmc
push
jl
out
pop
inc
jae
mov
mov
lock
mov
sub
insl
dec
jno
rorl
cmp
mov
or
pop
out
pusha
pop
xor
mov
ror
iret
aad
cmpsb
cmp
cmp
leave
lods
fadd
pop
int3
add
xchg
rorl
and
roll
dec
imul
xchg
jg,pt
inc
arpl
seto
mov
lahf
pop
insb
pop
das
xchg
filds
shl
and
fwait
imul
pushf
data16
dec
fwait
inc
clc
inc
pop
cmpsb
push
xor
cmpsl
push
cwtl
mov
mov
out
repz
or
lcall
ss
test
pop
xchg
shlb
pop
jl
inc
sub
jmp
xchg
ja
nop
sbb
into
jp
mov
mov
xor
xor
pushl
xchg
xor
jno
jns
mov
in
ja
dec
hlt
imul
cmpl
lds
stc
mov
pop
das
loope
fstl
lret
xor
fsubl
push
lods
ljmp
jecxz
in
xor
dec
cmpl
daa
pop
loopne
fiaddl
push
xchg
mov
xchg
adc
inc
rorl
into
or
in
sbbb
out
adc
stos
sbb
and
jmp
ds
push
mov
andl
das
jle
nop
push
ror
mov
sbb
xchg
xor
mov
add
sbb
cmp
cs
aad
jne
mov
lea
cmpsl
fildll
or
dec
cltd
push
pop
xchg
inc
sbb
fsts
out
sbb
nop
adc
cwtl
in
cltd
hlt
dec
or
xchg
mov
fdivrp
or
movsl
add
adc
addl
fstl
pushf
imul
mov
stos
mov
sarb
cmc
lock
sbb
push
call
mov
mov
dec
in
mov
inc
sarb
ret
imul
int3
sbb
cs
sub
and
rcrl
test
push
push
orl
dec
and
lret
sub
inc
imul
ret
pop
outsl
cmpb
xchg
push
cmp
add
pusha
adc
xchg
pop
hlt
jg,pn
adc
mov
popa
jne
xor
lahf
cs
jecxz
pop
mov
sub
stos
leave
lock
ret
push
cmpsl
test
xchg
dec
sub
add
push
cli
lahf
lods
xchg
jnp
push
lea
sbb
lahf
out
rclb
in
xchg
test
cwtl
and
lret
rorl
cmc
test
xor
xchg
lods
xchg
test
add
mov
stos
add
fisttpl
push
jnp
test
jno
ret
pop
sub
out
aam
loope
jo
imul
fxch
dec
inc
lret
sbb
cmc
mov
in
es
ret
adc
dec
lret
pop
fsubrl
adc
adc
push
cmp
cmp
aam
sarl
sarb
cmp
mov
lret
sbb
fwait
pushf
fwait
pushf
fwait
pushf
fwait
movb
fwait
lcall
lcall
mov
xor
mov
cmp
mov
mov
fiadds
das
repz
jecxz
push
pop
xchg
mov
scas
sbb
lods
sub
shl
es
insl
or
sub
pushf
mov
jle
xchg
ja
and
cltd
lcall
mov
loope
lock
xlat
rcl
mov
pextrw
jb
lret
mov
sub
lret
jne
call
cmpsb
out
mov
xor
cmc
jl
pop
lret
stos
mov
jge
mov
cwtl
fimuls
neg
imul
stc
xor
adc
fadd
sub
sub
mov
lods
aas
bnd
mov
into
es
add
cmp
mov
cmpsb
mov
lods
mov
js
push
imul
leave
sub
int
push
aaa
movsl
scas
xchg
pop
jecxz
pop
gs
cmp
xchg
loope
lahf
ds
enter
pop
ret
fcmovu
stc
push
inc
push
mov
int
addl
rcr
push
out
mov
scas
adc
das
sahf
add
hlt
xor
lcall
test
test
cmp
mov
mov
sbb
push
mov
cltd
cltd
sbb
xchg
int3
mov
mov
mov
sbb
xor
fistpl
sbb
or
sub
test
out
mov
lods
mov
je
dec
mul
add
xor
outsl
inc
mov
inc
mov
jl
mov
jno
mov
movsb
pop
loopne
jmp
dec
dec
rcl
gs
jmp
addr16
loopne
addr16
pop
dec
or
stos
out
mov
sbb
pop
out
fwait
pop
imul
mov
mov
push
shlb
push
out
dec
aaa
and
cmpsl
cmpsb
movsb
adc
dec
loopnew
pop
xorl
push
outsb
nop
pop
dec
popa
rol
lds
push
cmp
sub
aas
cmp
repnz
mov
mov
int
inc
shrb
mov
mov
sbb
dec
sub
movsb
fcmovb
cmp
push
mov
adc
dec
lcall
sub
xchg
ljmp
adc
jmp
fimull
fs
mov
dec
inc
and
aas
cmp
xor
adcl
pop
addl
addr16
sbb
jl
xchg
out
adc
lea
xlat
out
xchg
or
daa
repnz
mov
out
sub
das
pusha
sbb
push
jno
push
push
inc
xchg
xchg
adc
mov
sahf
cmp
movsb
das
push
icebp
jg
mov
pushf
aas
fsts
add
xchg
xlat
mov
adc
fcomps
and
push
mov
mov
out
mov
push
jl
jno
dec
cmc
test
addr16
in
adc
mov
jg
mov
cmp
push
adc
cmp
nop
inc
xor
stos
xchg
mov
adcl
adcl
out
outsl
sbb
jle
mov
psubw
pop
js
add
push
jp
mov
lea
cltd
out
dec
push
mov
test
pushf
pop
mov
add
cmpsb
mov
mov
push
mov
sti
pop
aad
or
enter
sbb
test
jecxz
xor
push
pop
sahf
fsubrl
adcb
mov
mov
lods
ja
pop
or
xor
jae
lahf
jecxz
xor
imul
into
mov
gs
adc
fstpl
inc
mov
xor
arpl
fadd
mov
adc
cmp
mov
mov
add
push
push
adc
inc
ret
fisttpl
insl
mov
dec
push
js
jg
dec
adc
aad
rol
sbb
mov
adc
xchg
sub
insl
jo
xor
daa
rcrb
je
push
mov
es
adc
pusha
jo
nop
xchg
movsb
ret
out
in
or
sahf
stc
sbb
mov
lcall
inc
xor
add
inc
pop
sbbl
sub
outsl
je
int
jmp
xor
je
leave
lock
fiadds
xchg
cld
cmp
ret
aad
push
incl
mov
mov
icebp
test
mov
scas
pop
sbb
add
mov
mov
xlat
inc
in
inc
mov
ret
jl
sbb
pop
sarb
fiadds
ds
clc
fdivrs
call
add
inc
add
cld
rcrb
jno
add
pop
cwtl
pop
loope
int3
mov
cltd
jo
mov
into
push
test
or
mov
lea
cmp
into
jae
jge
or
lahf
mov
jbe
popf
scas
les
aad
in
lods
xor
jecxz
xchg
mov
push
inc
movsb
pop
cwtl
pushf
aam
pop
sbb
dec
xchg
dec
rcrl
fidivl
xchg
dec
push
jmp
outsl
dec
cltd
sub
fcoms
into
movsl
js
mov
mov
cs
test
pop
mov
xchg
add
sub
fisubs
add
fnstsw
sbb
les
out
clc
out
jbe
dec
inc
push
jnp
mov
das
sbb
and
lds
call
pusha
stc
lcall
imul
aaa
pop
cmp
add
ss
adc
cmc
push
ficompl
cli
aad
hlt
sub
xchg
rcrl
aaa
sbbl
inc
or
pop
enter
sbb
inc
or
into
das
aas
pop
cmp
int3
mov
stos
ss
loope
add
cmp
out
adc
insb
test
fidivrl
stos
nop
mov
sbb
stc
jo
mov
out
or
ds
sahf
sbb
test
xchg
test
je
es
call
pop
pop
inc
or
js
daa
mov
jmp
push
jl
cli
xchg
les
jg
cwtl
repz
repnz
mov
jns
sti
out
inc
inc
aaa
popa
cmp
repz
and
out
jp
aas
jno
std
in
loope
scas
loope
cwtl
repz
inc
lds
insl
int
lcall
aas
shll
loopne
popa
mov
inc
idivb
pop
pop
stos
xor
mov
pop
adc
rcll
inc
add
lahf
into
daa
adc
inc
sbb
aam
in
xchg
or
test
movsb
add
testl
pop
iret
fiaddl
dec
cmp
mov
cmp
aad
add
dec
aas
dec
mov
mov
pop
shlb
stos
mov
xchg
test
mov
in
and
lret
pop
cmp
lds
or
pop
arpl
mov
test
inc
cmp
ldmxcsr
mov
adc
xor
iret
lods
pop
or
ret
test
int3
in
incl
and
mov
jl
pop
ss
pusha
fidivrl
cmc
hlt
repnz
push
inc
cmp
mov
outsb
pop
lods
push
je
out
lods
sub
je
ljmp
ret
gs
sbb
cmp
xlat
jmp
pop
lods
fistpl
aam
pop
shrb
jge
push
adc
mov
xchg
cmp
into
mov
fmuls
ja
sub
mov
sub
movsl
xchg
ret
xor
test
adc
daa
xor
movsl
lcall
outsb
sub
lock
mov
mov
mov
out
adc
sbb
sub
shrb
jge
sub
mov
jp
sbbb
cwtl
movsl
popf
push
xchg
pop
repz
adc
sbb
or
push
pop
imul
or
ljmp
adcb
shlb
cld
jno
addr16
dec
std
mov
pusha
aas
push
mov
cli
imul
mov
xor
subl
test
ljmp
jecxz
push
and
pop
pop
cmp
leave
ret
dec
pop
mov
outsl
rol
sbb
mov
add
dec
pop
popa
int
popa
movsb
frstor
lods
push
call
mov
push
mov
sub
or
das
pop
mov
test
gs
and
outsb
lea
pop
jo
push
jae
cvtps2pd
fcoms
and
push
cmpsl
leave
cltd
pop
inc
out
movsb
shlb
xor
mov
mov
out
cmp
in
xor
push
cltd
mov
add
iret
xchg
test
movsl
in
cmpb
shrl
lret
shlb
jecxz
inc
test
addl
pop
adc
sahf
sti
repz
shl
insb
pop
cs
jne
adc
popa
call
mov
movsl
mov
mov
push
add
enter
out
mov
mov
imul
cmp
pop
in
fwait
mov
mov
push
je
stos
xchg
mov
jno
lds
cmp
xchg
iret
repnz
popa
ret
lret
in
and
or
xchg
mov
jle
dec
daa
rcrb
inc
adc
fmul
mov
mov
mov
xlat
adc
js
cltd
mov
sub
outsb
movsl
sbb
sub
pusha
push
mov
sahf
add
loopne
cmpsl
mov
mov
es
mov
mov
cmp
jp
lock
mov
jb
stos
jg
add
jnp
testb
cmp
pop
sbb
pusha
sub
test
ja
dec
dec
jae
rclb
sahf
inc
xchg
push
pusha
hlt
jb
ror
lea
mov
mov
scas
mov
arpl
jae
adc
test
pop
sbb
push
popf
mov
dec
test
rclb
scas
pop
cltd
push
adcl
iret
nop
add
ror
mov
int3
dec
push
and
leave
repz
sbb
scas
xchg
lcall
sbb
repz
lods
jg
ja
aam
cs
cmp
mov
add
dec
cmpsb
lods
sub
inc
lcall
in
pop
or
mov
out
jmp
sarb
in
cmpsl
lahf
jo
insb
or
xchg
data16
aas
cwtl
dec
push
inc
lahf
mov
aaa
sub
lea
push
ret
sbb
fidivrs
mov
ss
lahf
test
jle
test
stc
jns
sub
testl
repz
push
or
cmp
arpl
xor
dec
aaa
cmp
push
mov
data16
lret
push
les
dec
popf
mov
push
ja
add
leave
mov
addb
leave
shlb
shrl
mov
add
les
pop
inc
push
xor
xchg
shlb
cmp
mov
mov
nop
mov
rolb
mov
cmp
imul
in
pop
xchg
stos
push
js
pop
loop
movsl
pushl
push
cwtl
mov
mov
lret
xchg
pushf
ss
dec
jnp
ficoms
aad
mov
outsl
insl
lock
lods
rcr
orb
jl
sub
movsb
pop
daa
ret
aas
orb
mov
jnp
add
mov
xchg
xchg
icebp
pop
mov
cltd
lds
mov
shll
outsl
stos
call
cmpsb
xchg
mov
pop
xchg
je
das
inc
push
bound
addr16
or
cmc
sbb
xchg
lret
fs
push
lret
sarl
stc
mov
into
lock
loope
notb
stos
dec
push
push
or
lds
subl
enter
rol
mov
cmp
movsb
mov
clc
xchg
and
mov
mov
add
add
aaa
xchg
cld
sub
xchg
sub
je
lods
lahf
stos
xor
mov
push
sub
adc
add
jecxz
mov
cmpsb
jecxz
pop
imul
popf
push
shl
aas
imul
fadds
mov
test
insl
mov
jbe
adc
mov
xchg
jmp
mov
out
sub
arpl
test
jno
and
dec
subb
mov
testb
icebp
sub
call
cmpb
inc
bound
std
push
and
jmp
rorb
mov
lods
hlt
cli
cmp
daa
loope
scas
shl
push
xorl
push
or
push
jno
adc
lret
or
shll
out
add
iret
mov
adc
ret
dec
dec
les
sbb
cli
ljmp
sbb
add
sub
mov
mov
adc
inc
xorl
ja
dec
lock
dec
cmp
shlb
mov
inc
outsb
test
pop
jp
push
fisubrl
sbb
lea
out
jbe
and
leave
notl
into
jl
aad
mov
and
add
cltd
xor
sub
outsb
stos
lds
lock
sbb
lods
sub
push
aam
ret
or
rolb
lods
ja
xchg
pushf
aaa
stos
push
outsl
lock
pop
rolb
jp
push
outsl
xor
icebp
inc
in
sbb
mov
clts
sub
mov
mov
xchg
mov
xor
jns
lret
jmp
jno
dec
addl
dec
cmp
nop
push
push
inc
mov
adc
inc
addl
je
mov
out
pop
repz
cmp
notb
mov
mov
movsb
and
adcb
cmc
xchg
cmpsl
ficoms
ret
cmp
adc
pushf
subl
inc
nop
ljmp
test
or
repz
inc
and
sbb
mov
sbb
jno
jo
xchg
in
mulb
sbb
cltd
leave
adc
inc
rcll
jnp
testl
or
inc
rcrb
sti
out
fiadds
dec
cld
js
mov
mov
data16
rcl
das
mov
out
dec
jno
jge
jmp
jmp
lret
enter
shlb
insl
sub
rorb
lahf
pop
aas
pop
and
pop
enter
cmpsb
fadd
fbld
clc
and
rorl
in
jge
shl
popf
mov
push
and
movsl
sub
inc
sti
arpl
xor
mov
xchg
and
clc
jmp
test
stc
scas
out
dec
lods
mov
mov
jbe
mov
inc
and
mov
icebp
lret
bound
cmp
lods
repz
add
std
mov
test
imul
pop
pushf
mov
cltd
sub
sahf
fldenv
pushf
jno
xchg
repnz
imul
xor
or
imul
dec
clc
movsb
and
mov
mov
lds
out
jle
std
mov
cmp
testb
xchg
sbb
cmp
js
sbb
div
out
pop
fbstp
insl
mov
adc
ljmp
dec
mov
pop
mov
add
adc
rolb
push
lret
and
xchg
cld
in
aam
adc
outsb
mov
mov
rolb
arpl
mov
dec
jge
xlat
mul
inc
mov
inc
clc
mov
add
mov
aas
insl
xorl
xchg
push
inc
lea
xor
sarl
js
in
sub
ret
and
lds
pop
popa
ror
inc
insl
mov
sub
pop
les
icebp
push
lods
mov
inc
out
push
stos
sahf
mov
xor
pushw
aad
adc
repz
imul
aam
xor
nop
aam
or
mov
dec
ret
inc
push
sti
std
pusha
lret
jne
pop
xchg
mov
jle
subl
jge
ja
add
icebp
int
xor
jmp
data16
adc
jmp
pop
hlt
dec
xor
call
adc
adc
pop
mov
insl
jne
fsubl
bound
imull
cmp
fldpi
push
add
xchg
xor
add
xor
int
add
and
mov
xor
sti
mov
sbb
shrl
adc
negl
jge
ss
jb
xor
daa
je
adc
movsl
adc
lahf
lods
sti
mov
dec
xchg
pop
push
sbb
and
imul
popa
sarb
adc
xchg
sub
lcall
xchg
push
pop
adc
dec
pop
out
xchg
jne
sahf
lock
in
lock
pop
in
fistps
inc
mov
call
outsl
push
jecxz
cli
shrl
jg
in
inc
ss
in
add
fwait
jbe
mov
lcall
mov
imul
jecxz
xchg
dec
lret
test
dec
lds
xchg
scas
fbld
lahf
fsubl
mov
inc
call
jo
addr16
cmpsl
dec
fld
push
xor
dec
loopne
and
cmp
test
lahf
inc
adc
sbb
push
or
mov
adc
es
leave
add
mov
pop
mov
movsl
mov
pop
sub
nop
test
fwait
addr16
adc
ss
dec
and
dec
lret
addr16
cmp
aas
call
mov
fstpt
movsl
out
xor
mov
imul
jae
mov
mov
cmpsb
xor
xor
cld
and
loopne
cmp
sbb
push
jnp
aaa
ljmp
mov
sti
cld
cmpsl
cmpsb
movsb
jb
and
sarb
sbb
popa
jb
sbb
lods
xchg
adc
imul
add
xor
fwait
xchg
loopne
test
gs
mov
sub
test
adc
xchg
sub
dec
frstor
add
mov
rcr
mov
imul
mov
es
loop
ret
movsl
insb
in
ret
scas
movl
fists
xor
xor
and
or
jg,pn
jge
mov
iret
pop
repnz
push
xlat
pop
nop
sub
mov
stc
pop
push
std
nop
mov
rorl
and
inc
lcall
and
stos
inc
faddl
pop
jle
stc
mov
sbb
outsl
sub
ja,pt
jle
enter
idiv
mov
push
fcmovnbe
in
out
jg
mov
cltd
les
jl
mov
imul
or
test
inc
dec
cmp
stos
cltd
adc
stc
jge
roll
adc
out
bound
xchg
jle
xor
push
sub
gs
inc
adcl
sahf
xchg
adc
sbb
hlt
iret
aam
cmp
mov
rclb
cmp
je
mov
icebp
cwtl
dec
int3
fistpll
inc
pop
data16
mov
inc
sbb
sub
sbb
into
jb
out
mov
adc
fcomps
sbb
jge
pop
sub
inc
push
aas
xchg
fsubs
push
dec
push
mov
dec
cltd
dec
inc
popf
out
mov
add
ret
mov
sbb
cmp
inc
and
push
arpl
clc
imul
int
dec
out
loopne
dec
inc
push
mov
shll
mov
icebp
mov
lahf
mov
sbb
out
xor
cli
jae
pop
jl
fildl
out
mov
nop
inc
adcb
pop
dec
arpl
pusha
in
mov
repnz
sbbb
addl
addr16
sbb
or
out
inc
mov
mov
inc
shll
mov
fwait
nop
push
mov
dec
loop
dec
shll
cmp
push
mov
cmpsb
or
cli
mov
push
cmpsl
dec
orl
aam
mov
das
jo
pop
mov
push
std
rcrl
push
popa
xor
sarl
mov
adc
sub
ss
xchg
fldenv
stos
insl
adc
movsb
push
dec
sub
insb
xor
fs
in
add
xchg
xchg
fwait
jecxz
mov
out
adc
out
sahf
not
imul
xor
xchg
sub
mov
sbb
nop
cmpsl
ss
and
xchg
and
sub
enter
jae
add
shll
xchg
out
sub
mov
test
cmp
sbb
jno
lahf
ljmp
in
cld
mov
in
jl
cs
imul
pop
xchg
fnsave
jg
xor
cmp
push
icebp
out
pusha
push
je
mov
in
xchg
jg
dec
repnz
mov
pop
enter
icebp
adc
or
test
dec
lahf
divl
jl
mov
in
push
lcall
inc
lret
pop
or
pop
loope
and
mov
fadds
int
pushf
mov
lea
flds
data16
push
adc
lock
rcr
lcall
sub
enter
sbb
inc
or
nop
insl
push
testb
out
sub
enter
adc
repz
pop
insb
in
das
mov
pop
inc
clc
aad
adc
jle
pop
and
xchg
or
dec
shll
lahf
adc
lcall
dec
jo
and
push
dec
fs
sub
jno
xlat
and
add
dec
sub
cmp
or
dec
loopne
repnz
icebp
sti
pop
and
inc
adc
or
xchg
fwait
out
cmp
shrl
and
push
dec
sbb
xchg
lods
xchg
pop
mov
adc
lds
pop
add
in
push
lods
shrl
push
or
fcmovu
jecxz
fnstcw
je
lcall
subb
out
imul
test
xchg
mov
xchg
lods
adc
mov
push
stc
xchg
push
jae
sub
loop
in
test
push
pop
push
xor
xchg
add
loope
mov
fisttpl
rorb
jo
mov
pop
inc
cmpl
jmp
or
push
loope
fdivr
xor
push
jne
add
aam
fst
pop
dec
arpl
repnz
popf
lret
ss
les
mov
jmp
pop
cmp
dec
gs
pop
loop
loope
add
xor
cmpsl
dec
jnp
les
push
jl
rorb
adc
testl
xchg
lods
orb
ficoml
xchg
add
gs
decl
lds
aas
jb
imul
cmp
mov
inc
stos
mov
mov
xor
push
push
movsl
insl
mov
xor
mov
xlat
mov
out
jb
imul
xchg
push
sti
lea
push
xor
iret
out
mov
push
add
adc
outsb
negb
and
jns
mov
xchg
orb
rcr
test
in
js
pop
pushl
cmp
mov
and
push
dec
inc
xchg
xchg
sub
shrb
xchg
add
jno
jns
insb
jmp
jns
jp
xchg
adc
xchg
adc
mov
jno
inc
stos
mov
push
xchg
sbb
ss
hlt
into
es
imul
dec
mov
dec
aad
call
mov
sub
inc
ret
iret
xor
mov
mov
and
mov
int
inc
add
and
inc
inc
aas
es
cmp
cmc
ds
mov
mov
push
adc
stc
shll
repnz
aaa
out
rorl
nop
loope
lods
push
jae
enter
jge
test
pop
pop
push
and
rolb
lahf
push
dec
and
sbb
sub
aas
gs
mov
push
dec
adc
push
xor
nop
cmp
nop
lea
insl
flds
and
fs
mov
mov
std
pushf
int3
adc
lods
cmp
loop
xor
mov
push
notb
mov
outsb
inc
mov
pop
sub
push
sahf
pop
xor
push
mov
jmp
jae
mov
push
lea
inc
xor
dec
leave
shlb
ljmp
cmp
jns
jno
jl
jp
inc
cmp
xor
mov
int
repz
fmul
ljmp
in
sahf
aaa
lahf
inc
add
ja
daa
mov
adc
cmp
adc
cmpsl
movsb
outsb
jl
mov
stc
mov
lods
or
xor
lods
mov
sbb
or
ret
lock
inc
es
lret
cltd
int
icebp
mov
lahf
sbb
hlt
dec
sub
and
adc
adc
mov
jecxz
mov
jb
jmp
cmpsb
ljmp
xchg
xor
test
or
mov
mov
jg
sbb
lret
aaa
pop
xchg
pop
dec
data16
jns
sbb
in
es
cs
mov
insb
lock
test
jmp
adc
lods
lcall
jecxz
jno
idiv
cltd
dec
mov
jb
arpl
nop
pop
sbb
xor
aaa
dec
rclb
insl
cltd
fsubl
dec
shrl
shlb
and
inc
fs
xor
inc
rolb
les
cmpsb
cmp
ds
inc
xchg
push
sub
or
mov
daa
or
inc
push
cmp
push
pop
xor
cltd
or
cmp
and
sub
sbb
mov
int3
fcomps
sbb
mov
push
mov
daa
inc
sbb
int
or
jle
iret
aam
push
mov
inc
fnstenv
div
aaa
push
ja
add
inc
daa
gs
push
push
ja
insb
mov
xchg
sub
jge
push
jae
shrb
int
or
xchg
outsl
enter
jmp
subl
push
je,pt
aad
in
repnz
and
add
pop
xchg
movsl
push
fucomi
loope
cli
pop
aas
inc
or
mov
pop
push
ficoml
and
xchg
or
or
jp
jmp
push
xchg
add
and
xchg
xchg
dec
repnz
decb
sub
cs
in
out
pop
into
cmp
andl
das
inc
sarb
mov
daa
mov
popa
jnp
mov
or
mov
lods
data16
fisttps
fstpl
sub
adc
lahf
pop
mov
sbb
lock
xor
push
or
add
mov
and
fidivl
nop
test
and
push
cli
push
xlat
xor
sbb
lods
arpl
lahf
out
gs
sub
sti
jns
xchg
cltd
cmp
xor
cmpsb
pop
or
push
sbb
out
xchg
add
jo
leave
mov
scas
jmp
jmp
jbe
leave
xchg
add
and
std
out
dec
nop
mov
sub
push
sbb
push
sahf
int
jae
mov
or
mov
add
mov
jmp
mov
leave
cli
rorl
leave
dec
cli
and
push
imull
cwtl
mov
or
mov
pop
jl
mov
jge
fisubrl
push
and
mov
imul
rol
cmpsb
inc
ret
mov
fimull
pop
sbb
adc
xchg
jg
sbb
adc
push
loop
dec
pop
aas
or
ss
cmp
jnp
add
gs
imul
mov
pop
stc
jmp
std
fisttpll
jne
loopne
pop
xlat
pop
jmp
ret
pop
mov
out
and
lea
dec
jnp
enter
jecxz
lret
mov
shl
outsl
ret
stos
call
add
mov
test
negl
xlat
cmp
rolb
fmuls
cmp
enter
mov
push
cmp
mov
inc
mov
or
mov
insb
xor
adcl
popf
mov
lods
mov
jmp
scas
lahf
test
ds
jns
xor
gs
xchg
and
xor
inc
or
lret
lea
inc
sub
loopne
shld
add
cwtl
popa
push
rorb
push
cld
dec
or
insb
xor
test
pushl
mov
sub
ss
fdivrl
pop
nop
jl
data16
lods
or
fwait
xchg
dec
std
test
jne
pusha
orl
icebp
push
ljmp
outsl
gs
lret
xchg
lret
and
push
in
call
push
shl
loope
je
xor
jno,pt
inc
push
mov
mov
rolb
and
push
lods
xor
lret
sub
je
push
scas
dec
inc
repnz
push
add
movsb
inc
pop
jg
or
push
shll
and
mov
fcmovbe
inc
cmc
xor
dec
xchg
mov
pop
push
or
jmp
jb
packsswb
mov
insl
das
dec
xlat
fstpt
cwtl
test
adc
arpl
push
int
in
in
and
std
xchg
call
lcall
or
dec
sbb
cmpsb
pop
mov
cmc
pop
mov
call
sub
les
mov
and
addr16
lock
push
daa
call
and
mov
into
mov
nop
adc
sub
dec
xchg
scas
stos
std
add
jp
and
ljmp
xor
jecxz
inc
mov
fisttpll
xchg
je
or
pop
push
fimuls
stc
xor
push
and
xchg
cwtl
ljmp
sub
inc
pusha
into
push
xchg
inc
adc
outsl
les
lods
aas
aad
imul
mov
jo
in
outsl
mov
idivb
in
cmp
mov
mov
xchg
mov
ret
dec
scas
les
mov
xor
push
addr16
stc
pop
jo
lods
mov
adc
popf
adc
sub
inc
mov
jae
lahf
out
pop
sbb
push
lds
dec
jae
mov
lea
pop
loope
and
mov
and
jne
jmp
mov
insb
mov
pusha
lahf
inc
insb
daa
sub
imul
aad
out
fs
xor
lret
xchg
cmpsb
and
insl
movsb
mov
insl
sub
jae
xor
aad
push
fs
add
mov
add
fmuls
sub
or
iret
sti
ret
xchg
shl
sarb
push
fcoml
cltd
fstps
inc
lods
imul
repnz
lods
aad
call
adc
or
nop
cmpsl
sub
aas
inc
lahf
cld
jp
push
xlat
lcall
pop
push
daa
divb
les
jb
data16
sub
mov
xchg
mov
adc
dec
pop
mov
cltd
dec
lcall
jb
mov
and
pop
nop
jae
hlt
or
out
jge
cwtd
mov
call
test
stos
out
sub
repnz
pop
les
out
out
test
stc
in
jmp
lods
mov
jnp
icebp
push
and
loopne
testb
les
sub
aam
add
imulb
nop
xchg
fistps
lahf
loope
jb
out
lock
adc
loop
inc
push
data16
mov
inc
or
mov
insb
xchg
lds
sarb
jns
mov
xor
test
iret
push
lret
mov
push
or
call
dec
push
mov
xchg
xor
push
shrl
dec
lahf
mov
lret
sbbl
inc
mov
mov
ss
xchg
je
mov
iret
pop
nop
scas
sub
or
insb
test
imul
jg
mov
xchg
add
or
pop
dec
inc
popf
pop
push
pop
push
loope
cmpsb
negl
dec
aas
and
enter
cld
stc
xchg
sub
push
inc
pop
mov
out
push
xchg
into
push
cmpsl
cmp
out
les
sbb
stc
pop
dec
icebp
int
cmp
jae
pop
testl
je
xchg
dec
and
sbb
mov
push
gs
pop
pop
gs
lock
pusha
or
outsl
and
adc
pop
pop
js
mov
scas
push
pop
pop
dec
maxps
jp
inc
mov
sarb
in
jmp
dec
mov
pop
jno
mov
jg
adc
sbb
xchg
xchg
and
xchg
stos
fdivl
jecxz
divl
int3
push
js
cs
and
into
mov
daa
sbb
ds
dec
and
push
cmp
mov
mov
mov
xchg
pop
mov
xlat
push
push
xchg
repz
cwtl
add
orl
into
jle
mov
or
pop
xor
or
cmp
hlt
out
ds
in
lds
nop
add
cmp
xchg
pop
pop
mov
insb
cli
mov
shlb
enter
fcomip
push
shr
dec
cltd
xor
dec
lock
ud0
dec
scas
sub
int3
adc
mov
sbb
and
and
pop
pop
and
fisubl
mov
push
dec
sbb
or
ja
cmp
cmpsb
cwtl
lcall
rdtsc
xchg
mov
cmp
jmp
out
inc
movsl
xchg
pop
fists
es
or
mov
mov
arpl
add
fs
fs
mov
test
push
lods
je
fistpl
adc
mov
mov
and
into
add
pop
jl
mov
fildl
flds
enter
inc
push
push
cmp
or
xorl
add
pop
clc
sub
std
mov
mov
test
cmpl
mov
mov
jl
cmp
repnz
add
jp
pop
scas
add
cmp
mov
out
add
push
scas
push
loopne
sbbb
popa
gs
outsl
jg
jnp
jmp
dec
xlat
int3
adc
rcll
out
inc
push
popf
movsl
push
iret
push
in
xchg
mov
or
jp
mov
inc
add
jns
bound
lret
xchg
shlb
mov
mov
push
or
int3
insl
aaa
xor
imul
icebp
xchg
dec
fwait
mov
pusha
loop
xchg
jle
push
sub
fldcw
push
sub
dec
pop
add
outsl
pop
test
xor
xor
popf
pop
or
insb
fwait
sub
and
and
jmp
add
sti
cmp
inc
or
data16
dec
icebp
movsl
inc
cmp
movsl
int
add
insl
mov
sub
jle
sbb
ds
xchg
in
mov
push
divl
imul
int3
pop
sub
xlat
les
ljmp
inc
inc
loopne
imul
dec
int
push
fdivs
mov
sbb
cmpl
pop
ja
add
mov
sub
mov
testb
mov
sub
sub
imul
ficoms
dec
aas
ds
xchg
xor
or
sub
xor
xor
mov
mov
test
sub
fidivl
das
add
imul
push
cmpsb
mov
dec
adc
lock
cli
aam
lcall
aaa
jno
ljmp
call
sbb
mov
pusha
popa
pusha
repz
lea
xchg
sti
mov
and
push
in
inc
call
pop
xchg
or
inc
ss
jb
xor
insb
ret
stos
aas
negl
gs
adc
stc
pop
mov
jge
into
in
je
int
cmp
or
push
mov
test
mov
sbb
pop
and
inc
sbb
push
mov
cmp
inc
fdivrs
cmp
mov
clc
cmp
jl
repnz
orb
or
lret
jle
xor
addl
dec
xchg
mov
mov
cmpsl
mov
mov
xor
in
sahf
xchg
dec
stos
int
sbb
add
xchg
jns
mov
or
sbb
lods
xor
aam
daa
call
push
jbe
pushf
dec
pop
push
jae
mov
jl
mov
xchg
js
adc
jae
jecxz
mov
rorl
mov
mov
test
mov
sub
jb
insl
sub
in
jl
jecxz
mov
jns
or
jl
pmaxub
and
dec
std
push
push
fstp
out
test
mov
cmpsb
imul
mov
dec
cmpsl
dec
jbe
and
inc
loopne
push
loop
lods
mov
add
movsb
xlat
and
adcl
sbb
dec
push
ret
test
add
int
or
insl
dec
xchg
pop
in
std
xor
out
int3
adc
and
cmpsl
xor
adc
clc
les
stos
mov
push
sbb
mov
cltd
jmp
add
adc
xor
jae
loop
jl
inc
push
sub
int3
xor
setp
js
out
xor
inc
mov
int3
xchg
mov
jge
sbb
xchg
pop
adc
mov
ljmp
jo
pop
fistps
or
push
sti
loope
cwtl
or
into
pop
cmpsl
std
mov
call
xchg
or
inc
jmp
scas
add
int
jg
adc
sbb
pop
loop
shrb
mov
and
lds
call
inc
push
push
mov
mov
filds
dec
inc
cmp
imul
cmp
test
shll
adc
pop
xorb
mov
cs
aad
enter
or
push
pop
inc
inc
cmpsb
xor
fdiv
aas
or
and
rolb
dec
es
std
xchg
test
stc
mov
jns
ja
mov
jbe
pop
mov
cmp
mov
sbb
fadd
or
arpl
sbb
mov
test
das
add
dec
push
js
jecxz
out
jno
inc
push
lahf
lret
pop
pop
filds
sbb
cmp
add
ss
movsl
cmc
movsb
movsl
stos
bound
call
js
fs
xchg
dec
push
push
repz
inc
sub
iret
leave
outsl
pop
jg
pop
mov
pop
rcr
cmp
sbb
rcl
fildll
jno
sub
imull
ss
xchg
pushf
movsl
adc
fistpl
cmp
xor
inc
mov
sbb
xchg
pushf
mov
ficoms
add
and
flds
pop
ss
push
push
xchg
cmp
pop
aas
cmp
mov
jmp
test
outsl
sbb
xchg
mov
cmp
hlt
xchg
in
adc
add
into
sub
push
mov
mov
pop
test
jp
add
xchg
mov
or
push
pop
cli
sub
fstpt
nop
imul
dec
fstps
sarb
addr16
add
sub
decb
dec
das
sub
pop
pop
call
lds
jo
mov
test
mov
daa
idiv
out
sbb
or
fstpt
add
jne
mov
cmp
sbb
adc
stc
aaa
arpl
and
test
scas
mov
inc
arpl
dec
mov
sbb
sbb
stc
pop
dec
out
lcall
iret
mov
inc
adc
movsb
mov
add
rcrb
pop
dec
shrl
and
sbb
and
movsl
lods
cwtl
cmpsb
cmc
lahf
sub
cltd
jmp
orl
ds
es
gs
xor
adc
out
lods
and
dec
jno,pn
sbb
loope
incl
sub
mov
mov
xchg
sti
inc
ret
xchg
pop
aaa
jg
dec
mov
mov
push
ret
xor
and
push
js
mov
lock
mov
scas
cmp
gs
in
sbb
cld
nop
movsb
pop
gs
adc
mov
push
insl
sub
jge
inc
outsl
cwtl
push
mov
add
popa
test
pop
hlt
xor
loope
mov
shll
or
pop
sbb
mov
sub
arpl
or
addr16
daa
repz
iret
pushl
xor
mov
sub
cs
fdivl
stos
frstor
adc
sub
mov
pop
cmp
or
mov
mov
fsubrs
pop
aas
fmul
std
jl
mov
lcall
sub
xchg
mov
dec
mov
mov
rcll
jno
xchg
cmp
movsl
jae
push
lcall
adc
loop
sbb
in
mov
jg
inc
push
mov
dec
cli
push
push
adc
es
jbe
push
mov
repnz
mov
fisubrl
fldt
in
inc
pop
std
inc
clc
jae
mov
dec
xlat
jmp
filds
je
jmp
push
insb
aad
rclw
inc
push
in
aam
mov
lahf
mov
cmp
gs
sbb
dec
xor
lcall
rclb
mov
scas
aam
mov
cmp
imul
in
inc
mov
mov
mov
sbb
cli
inc
cltd
cmp
inc
add
gs
adc
mov
adc
or
mov
or
test
add
fiaddl
adc
cmp
mov
adc
push
or
push
lret
cmpsl
adc
jo
test
stos
adc
dec
lds
push
icebp
imul
inc
popf
aaa
inc
cld
add
imul
xor
pop
adc
shl
in
js
push
jne
fldt
mov
insb
insl
push
in
aad
mov
arpl
push
sub
cmpsb
in
adc
fwait
lahf
shll
mov
movsl
pop
push
lret
jmp
push
iret
dec
leave
sbb
push
sbb
adc
mov
in
inc
movb
push
out
scas
mov
das
mov
fadd
jp
cmp
jne
imul
jne
daa
sub
mov
adc
xor
xchg
incl
or
adc
mov
jb
jnp
sbb
aas
lahf
sbb
test
xchg
scas
xchg
ror
xchg
add
out
or
js
dec
in
push
xchg
push
nop
jns
inc
ja
push
out
std
add
mov
aad
jbe
mov
lret
scas
pop
cmp
push
mov
js
fidivl
imul
insl
out
pop
jb
int3
push
sub
cmc
test
xor
fs
push
inc
fs
cmpsl
inc
fs
imul
jg
xchg
cmp
sbb
leave
pushf
cmp
pop
inc
pop
inc
inc
cmc
aaa
mov
fdivrs
rclb
outsb
cmp
or
out
add
enter
or
sbb
and
dec
dec
and
mov
mov
xor
rcrl
cmpsb
xor
sbb
loop
mov
jno
test
jne
out
xchg
push
inc
test
lret
or
insb
icebp
xchg
xchg
mov
movsb
mov
pop
jbe
and
mov
out
xorl
push
dec
loopne
xchg
mov
jno
cli
push
mov
or
jno
push
pmaxub
js
imul
dec
jmp
addl
adc
ljmp
push
daa
pop
jmp
shrl
das
enter
int3
xor
cmp
jl
int3
jo
das
xor
mov
lds
push
imul
sub
fmul
outsb
or
pop
pop
mov
ds
sbb
mov
arpl
xor
xchg
xchg
sub
stos
aam
insb
nop
into
movsl
xorl
add
inc
xchg
fisubrs
xchg
sub
lock
insb
mov
std
cmp
das
pop
test
mov
out
cld
arpl
int3
scas
adc
xor
fsubr
scas
adc
dec
cmp
icebp
xlat
or
mov
or
jle
sub
pop
push
mov
fcoms
inc
inc
imul
bound
mov
jae
flds
add
bound
out
sbb
insb
outsb
repnz
lret
push
loop
std
pop
cs
fidivrl
sub
repnz
pop
insb
xor
dec
aas
cmp
out
inc
jp
insl
shl
mov
ret
ret
fnstsw
xchg
cli
add
xchg
or
mov
add
fnstcw
leave
fstpt
dec
out
rcl
or
sub
out
or
sub
add
inc
popa
jns
cmp
cmpsb
jecxz
ret
and
sbb
mov
clc
and
xor
scas
mov
and
cwtl
sub
adc
shll
add
pop
fmul
lea
xchg
pusha
pushf
push
andb
cmp
iret
xchg
sbb
in
add
jae
fistpl
push
jg
dec
inc
mov
decl
cmp
add
mov
mov
repz
outsb
pop
jl
xchg
cmp
and
insb
stc
jmp
xlat
inc
je
inc
out
mov
loope
insl
push
mov
add
lahf
insb
and
sub
jae
xchg
pop
aad
rcr
addr16
out
jle
mov
jecxz
cwtl
dec
pusha
add
fwait
pop
push
aas
lods
push
call
add
ds
cmp
lret
mov
bound
inc
fcoml
fsubs
inc
ror
lcall
mov
xchg
mov
inc
out
lahf
popa
pop
and
xor
shl
iret
xlat
xor
out
sub
ds
jo
adc
xchg
movsl
mov
adc
jb
fs
mov
cmp
int
jecxz
and
sub
mov
ja
inc
sbb
xchg
add
dec
shll
adc
stos
fdivp
jmp
sub
or
iret
clc
mov
push
sbb
jp
jmp
ret
lds
ret
push
and
mov
cwtl
leave
fsubs
repz
mov
clc
add
js
push
arpl
mov
hlt
popa
mov
add
pop
mov
out
arpl
fstl
fdivrs
adc
lods
rorl
mov
push
xchg
das
movsl
fsts
call
push
or
test
sti
pop
sarl
orb
pop
push
test
xchg
cmp
jno
cmp
cmp
stos
pop
iret
shlb
xor
dec
out
out
ret
aaa
int3
jle
push
aam
add
pop
pop
loop
inc
stos
repz
stc
out
stc
std
sub
or
lret
jb
add
pop
jnp
pop
adc
ficomps
cmpsb
pusha
mov
and
push
push
dec
xlat
jp
inc
loop
mov
pop
jne
ljmp
imull
push
push
in
adc
scas
jno
sti
jb
jb
pop
xor
add
mov
hlt
mov
jo
jae
aam
sbb
cmp
push
dec
pop
out
jecxz
push
push
pop
pop
aad
push
sub
jge
dec
fisubrl
sub
sbb
fimuls
sub
dec
push
cmp
xchg
cmp
push
push
xchg
jle
leave
mov
mov
fcmovne
inc
jl
xlat
jmp
jo
sub
jnp
dec
inc
cmp
sub
out
xor
cmp
cld
inc
test
lods
mov
aam
je
jg
or
imul
xchg
stos
subl
jg
dec
xchg
jecxz
incb
mov
mov
cmp
adc
outsl
lahf
adc
jno
notb
test
dec
adc
divl
cmp
add
mov
in
mov
cmpb
jns
aas
aad
cmc
pop
xchg
dec
xchg
xor
dec
pop
mov
and
fistpll
fcomip
lcall
nop
inc
out
andl
dec
inc
push
sbb
fbld
jecxz
sbb
jae
jle
mov
ret
pop
into
shrl
lret
mov
push
addb
shrb
sub
jns
sbb
inc
mov
xor
stos
inc
loope
mov
lret
adc
mov
mov
imul
call
test
inc
and
jmp
lock
icebp
mov
lock
or
cltd
and
cwtl
loop
out
arpl
faddl
in
fstp
add
std
in
js
xchg
rclb
cmpsl
xchg
jo
sbb
cwtl
adc
movsl
fcom
xor
add
cmp
pop
out
lds
out
sbb
fdivs
or
push
ljmp
push
cli
faddp
dec
shl
xor
xchg
bnd
int
mov
aaa
mov
pop
fucom
outsl
and
sbb
daa
mov
lret
push
push
adc
lcall
inc
bound
dec
popf
mov
mov
ljmp
xchg
dec
ljmp
inc
push
movsb
pushf
mov
sbb
dec
pop
ss
push
mov
push
arpl
xor
xchg
jae
mov
hlt
mov
mov
xor
movsb
lods
cmp
push
das
xchg
subl
test
shrl
test
in
jp
sbb
dec
andl
pushf
mov
dec
add
aaa
addl
jno
push
sbb
sub
push
push
sahf
adc
adc
test
in
aaa
jp
aad
call
or
jp
out
jno
mov
cli
jmp
mov
mov
or
into
out
jb
add
mov
lcall
adc
sub
mov
push
js
dec
mov
add
lcall
scas
xor
mov
xor
out
cmpsl
iret
bound
push
mov
dec
lds
ret
xor
and
data16
xor
outsb
into
or
lret
sub
scas
mov
sbb
sbb
sub
cli
insl
daa
pop
and
dec
pop
ja
lods
insl
mov
inc
adc
and
int
jecxz
and
ffreep
inc
popf
or
dec
sbb
sbb
mov
repnz
inc
xchg
mov
cmp
fldt
or
adc
push
aaa
popa
les
int
mov
add
fbstp
sub
jb
insl
sub
jno
in
clc
stc
push
xchg
or
mov
or
sub
scas
movsl
ss
aam
inc
xor
aam
icebp
in
imul
imul
cld
arpl
push
mov
adc
push
call
adc
out
scas
inc
sub
ljmp
sbb
dec
dec
lahf
cmp
cli
outsl
cltd
jo
ret
inc
inc
lcall
lcall
bound
mov
cmp
stos
cmp
cmpsb
sub
mov
mov
cmp
scas
cmpsb
or
popf
sub
in
inc
in
fxch
push
daa
outsb
in
mov
outsl
iret
loop
sbb
or
and
sahf
call
or
xchg
filds
push
jo
fwait
mov
xor
xor
dec
repnz
xchg
stos
push
fstl
cld
or
pop
popf
sub
call
inc
jnp
in
shll
insl
sarb
mov
orb
mov
mov
jnp
out
movsl
addb
and
dec
jge
cltd
sub
out
xor
loop
out
push
dec
jbe
fcomps
cmp
jnp
sbb
and
std
rcll
and
dec
add
test
cmp
lods
mov
xor
sub
popa
xor
es
loope
scas
and
add
jp
pop
or
aaa
mov
lea
ja
ret
sub
popa
in
fdivrl
popf
outsb
enter
jmp
test
movlps
cmpsb
or
outsb
xlat
int
or
mov
sub
arpl
clc
les
into
andb
adc
cmp
and
dec
lock
rorl
gs
mov
scas
or
pusha
orl
test
and
push
les
push
fnstenv
jmp
cmc
dec
stos
pop
or
cltd
out
jo
aad
jnp
inc
mov
clc
pusha
shlb
shrl
ds
inc
pop
inc
lods
dec
lret
loop
pop
cmp
push
xor
push
or
imul
jl
shrl
or
pop
dec
cld
rclb
push
or
dec
xchg
dec
fldl
les
and
je
or
inc
mov
mov
test
inc
xchg
xchg
insl
outsb
mov
jnp
inc
sub
stos
lret
dec
sbb
sti
sbb
mov
jae
adc
stc
xchg
jmp
cld
dec
adcb
cmp
dec
adc
jb
xchg
gs
lods
addb
lahf
push
pop
sbb
pop
stc
lret
push
hlt
mov
add
lock
push
add
inc
cltd
jle
shrb
sub
aam
sbb
fnsave
jge
bnd
jne
test
ljmp
mov
jecxz
scas
adc
aas
aad
mov
mov
dec
mov
inc
loopne
and
in
daa
in
push
cwtl
roll
rcl
pop
cmp
mov
outsb
fsubrl
enter
sbb
cmpsl
jae
test
sahf
mov
inc
cli
shlb
mov
inc
lret
jne
pusha
mov
divl
leave
mov
popa
jecxz
push
mov
jl
mov
fwait
aam
iret
stos
and
jmp
and
cli
or
push
add
jg
push
nop
sahf
mov
or
rcll
in
inc
mov
xor
outsl
int
push
loopne
xlat
adc
or
int
daa
dec
cs
fisttpl
inc
or
dec
icebp
jmp
jmp
mov
jb
push
in
lcall
sbb
mov
cmp
jno
and
cltd
mov
scas
sahf
loope
hlt
ljmp
imul
outsb
in
xorl
push
aam
dec
pop
mov
ss
sbbb
rcr
aas
push
cmp
cmp
pop
mov
frstor
sbb
data16
mov
nop
cmp
stos
ficomps
cmp
dec
sbb
rolb
mov
test
mov
stos
bound
dec
out
test
push
mulb
repz
inc
jle
stos
cmc
arpl
mov
addr16
pop
cmpsl
lods
sahf
xchg
aam
stos
mov
push
xor
mov
inc
cli
or
pop
repz
add
fs
rcrb
cmpsl
loopne
out
cmp
adc
sbb
push
mov
mov
fsts
jo
and
cmp
mov
shlb
test
dec
xchg
gs
test
out
int3
jo
js
lods
imul
jae
cmc
inc
xor
negl
xor
mov
dec
xchg
mov
pop
add
ja
and
mov
mov
push
cmc
pop
push
enter
ja
push
rcrl
inc
mov
mov
adc
dec
std
cmpsb
inc
xchg
fcmove
mov
push
roll
xor
sarl
adc
pop
aam
cmpsb
dec
insl
dec
and
std
xchg
cmpsl
xor
sahf
mov
pop
mov
add
mov
imul
les
pop
dec
ficoms
fisttpll
cmp
jl
sahf
rcll
lret
sahf
pop
sub
inc
in
xchg
adc
xchg
add
cs
dec
xchg
hlt
jg
imull
adc
sbb
cld
add
or
fisttpll
stos
xor
adcl
shl
jge
fildl
xchg
jnp
out
cmp
xorl
and
icebp
mov
pop
mov
sub
ss
and
icebp
out
test
and
xchg
mov
dec
fldt
xchg
xor
push
fcoml
lret
push
dec
aam
fs
pop
and
fldcw
push
jge
mov
dec
aaa
notl
in
mov
pusha
mov
test
mov
std
and
push
cmp
aas
inc
into
inc
pop
popa
sbb
mov
rcrb
jno
hlt
or
lods
or
and
sahf
lcall
jbe
dec
shll
andl
push
sbb
mov
and
addr16
jae
cltd
mov
push
pushf
jnp
sbb
pop
bound
push
jnp
sbb
ja
xchg
xchg
lret
or
data16
icebp
jno
sbbl
xchg
sbb
push
popa
xchg
pop
stc
hlt
clc
xchg
inc
jbe
push
xchg
je
rcl
push
sbb
js
aad
out
es
mov
imul
out
mov
arpl
or
ret
loopne
aaa
jl
shll
arpl
sub
or
movsb
iret
cli
fiaddl
hlt
fcom
aad
mull
jmp
inc
sub
or
rcrl
out
iret
lods
ljmp
cmp
out
ds
xor
pop
popa
test
mov
mov
mov
xchg
dec
mov
clc
mov
int3
stos
in
jg
fists
pop
gs
inc
pusha
or
and
or
or
insb
jmp
mov
dec
orb
xchg
fbld
ret
out
pop
or
nop
fiaddl
ss
loopne
jmp
mov
and
ret
mov
aaa
popa
nop
jbe
push
add
ljmp
aas
dec
dec
jecxz
int3
mov
jns
loop
fisubrl
inc
mov
mov
stos
or
notb
inc
add
cltd
pop
repz
cwtl
push
lahf
pop
adcb
popa
imul
jg
jmp
pusha
int3
cmp
adc
enter
dec
and
popf
jae
adc
mov
aas
ficoml
mov
push
adc
shl
shlb
dec
inc
or
push
fs
lret
xlat
adc
push
inc
sbb
sbb
outsb
ss
inc
jl
mov
cmp
enter
push
jb
mov
pop
outsb
je
and
loope
pop
lods
inc
inc
dec
pop
testl
loop
and
mov
aas
or
mov
adc
pop
pop
xor
cmc
push
jne
scas
lock
out
sahf
xchg
inc
fsubrl
mull
out
mov
arpl
inc
int3
add
xor
or
mov
sub
push
xor
out
mov
insb
xor
ja
mull
cmc
stos
mov
out
outsb
push
mov
jmp
cmpsb
filds
mov
add
fiaddl
mov
cwtl
mov
and
fidivrs
inc
insl
inc
and
mov
sbb
pop
xchg
addr16
pop
mov
in
mov
mov
mov
mov
cmp
pop
decb
add
dec
rcrb
lods
test
enter
lock
jecxz
pop
lods
sti
je
mov
sub
dec
sub
add
lret
psrlw
mov
sbb
stos
cmp
in
and
lcall
mov
adc
mov
or
or
mov
test
in
cmc
jb
cmpsb
jmp
mov
mov
cmp
xor
xchg
aad
inc
gs
and
xor
xchg
in
mov
jbe
pop
imul
aaa
sub
jecxz
or
cli
outsl
dec
mov
push
int
xchg
daa
add
fimull
loope
cmp
imul
add
cmp
repnz
mov
mov
cli
addl
add
outsl
popf
xchg
xchg
scas
movsl
lds
scas
xchg
add
outsb
sbbl
adc
inc
mov
jne
push
fnstenv
ja
das
fsubr
cli
xchg
mov
popa
and
jecxz
mov
and
ja
sub
into
loopne
pop
out
add
fwait
mov
rclb
das
pause
inc
or
ret
in
out
fisttpl
sar
push
jecxz
jae
dec
std
mov
icebp
cmp
pop
je
repz
add
pop
nop
jle
jnp
je
sub
addr16
lock
pusha
jp
sbb
or
push
outsb
aaa
sub
jno
dec
jmp
dec
int
lods
jmp
ljmp
push
test
fisttpl
xor
cmp
sub
xchg
sbb
call
dec
sub
mull
mov
xchg
inc
mov
jp
notb
loopne
sub
adc
adc
pop
cmp
pop
mov
mov
jecxz
cli
jno
out
test
mov
cmp
stc
in
nop
jo
mov
repz
xor
fldenv
dec
jae
add
loopne
es
jne
jae
jno
jge
int3
cmp
clc
mov
ret
rcr
and
int
pusha
xchg
push
push
push
je
xchg
cwtl
loop
outsb
xchg
imul
fisttpl
int3
es
movsl
xor
or
loop
dec
mov
mov
pop
lret
loope
cli
std
and
pop
jae
add
xchg
hlt
mov
dec
push
gs
insb
mov
movsb
push
fisttps
pop
aad
repnz
out
fsubr
fsubrl
pop
imul
loope
clc
jecxz
dec
in
or
inc
mov
lods
pop
pop
push
outsl
test
pop
fcomp
sub
xchg
xor
aas
dec
cs
nop
int3
sbb
shrb
push
std
imul
xorl
leave
inc
outsl
inc
popf
mov
or
stos
pop
cmp
xor
in
mov
fs
shrl
popf
and
je
cwtl
daa
pop
jecxz
jmp
insl
or
test
dec
mov
cs
cmp
shl
insl
adc
fwait
and
popa
add
mov
mov
pop
jle
insl
jp
xchg
inc
neg
xchg
or
ljmp
cmp
mov
in
das
mov
mov
daa
aam
test
lds
mov
call
rorl
bound
inc
aam
outsb
mov
lcall
sbb
stos
int3
and
pop
fcompl
aam
iret
jo
sbb
pop
out
hlt
inc
adc
dec
dec
ret
rcll
mov
arpl
lcall
decb
xchg
mov
and
add
xor
int3
rcrl
dec
adc
cwtl
repz
cmp
jecxz
incl
addr16
xor
sbb
stos
adc
and
sub
mov
cmpsl
cld
stos
icebp
pop
push
push
xchg
outsl
cmpb
repnz
xchg
inc
dec
mov
sbb
xor
push
jle
inc
test
outsb
imul
push
and
into
sbb
cmp
xchg
jb
inc
in
pop
adc
cmc
dec
rcll
push
jo
scas
cmpl
xchg
idivl
mov
push
dec
insl
data16
or
loop
xchg
stos
push
dec
mov
fdivrl
mov
test
lock
int3
jmp
adc
and
test
aaa
jecxz
jbe
sub
stos
arpl
loopne
jmp
sub
xchg
push
cmp
sbb
mov
push
pop
je
inc
sub
xchg
lret
aam
pop
push
enter
jecxz
pop
add
mov
dec
je
mov
or
push
dec
mov
pop
mov
cli
mov
sub
sahf
lods
mov
mov
dec
sub
mov
outsl
aaa
xchg
or
adc
arpl
and
pxor
inc
pushf
xlat
mov
mov
fstl
pop
mov
arpl
mov
dec
loop
ja
bound
push
mov
cld
imul
adc
aad
and
jge
dec
push
outsl
aaa
in
jbe
mov
jge
xor
out
jns
cmp
lahf
mov
sub
sub
out
mov
leave
dec
pop
push
fidivl
cwtl
xlat
les
addr16
roll
mov
lock
js
popa
mov
xor
pushf
mov
int3
push
add
call
jge
outsl
mov
lods
test
xor
leave
sbb
lret
fcmovnu
xchg
xor
test
cmp
pop
mov
inc
jno
lods
sarl
or
sbb
cmp
mov
push
mov
popf
lods
movsl
xor
das
xchg
mov
xchg
aam
and
rorl
cs
jno
adc
mov
xchg
pop
push
dec
cld
roll
and
xor
pushf
xor
xchg
cmpl
mov
inc
adc
bound
jns
outsl
sbb
mulb
xor
or
fldcw
lds
out
icebp
add
insl
cli
loope
es
leave
hlt
pop
jmp
pop
clc
dec
aaa
sti
cmp
xor
add
cmc
or
mov
insl
inc
stc
imul
sbbl
fdivp
out
pop
mov
sub
mov
mov
dec
jno
fnsave
leave
fs
mov
out
sub
or
mov
jg
insl
rcll
push
mov
fisubrl
mov
dec
rcrl
shrb
imul
cmp
or
adc
mov
push
xor
xchg
xor
dec
or
fisttpll
movsl
xorl
mov
ss
fs
jl
mov
je
mov
xchg
and
mov
sub
sahf
push
test
sbb
daa
and
sbb
xchg
add
xchg
xchg
divl
jnp
das
adc
add
sbb
fdivrl
stc
or
lock
cmp
pop
in
or
adc
inc
mov
sarb
ret
xchg
jae
jge
xlat
mov
sub
xchg
adc
or
inc
std
loopne
jo
cli
sbb
jmp
mov
ja
cmpsl
inc
jmp
jg
jmp
imul
imul
push
jle
fildl
pop
stc
lret
cltd
pop
fidivrs
pop
fldcw
lods
xchg
or
sbb
nop
lret
popf
pusha
in
lds
incb
xchg
adc
sbb
out
pop
and
adc
mov
push
ja
ret
mov
inc
das
leave
stos
mov
xchg
in
fcmovb
inc
jl
xor
adc
shrd
jg
out
push
add
test
notl
cltd
push
adc
push
imul
xor
lcall
pushw
xchg
in
or
flds
sub
dec
xchg
fldcw
pop
sub
aam
mov
ds
add
cmpsb
mov
adc
mov
mov
and
lcall
jl
out
mov
fs
and
mov
dec
push
xchg
fidivl
sub
mov
mov
mov
gs
add
cld
push
nop
dec
addl
pop
aad
jbe
jne
dec
adc
mov
ljmp
push
add
push
gs
mov
dec
stos
call
or
fucom
lods
xchg
ds
scas
add
cmp
xor
lock
stc
rcr
inc
push
sub
out
enter
jae
loop
jle
or
dec
mov
fisubs
out
insb
pop
pop
ja
push
mov
mov
cltd
sub
mov
push
mov
cltd
stos
fsubrs
cs
add
push
pop
ljmp
lret
inc
mov
push
add
or
aam
push
movsl
pushf
into
pop
sbb
lret
js
mov
mov
rolb
aas
dec
movd
mov
push
push
out
cli
add
sub
jb
data16
fisttpl
jae
nop
and
fcmovnbe
sbb
in
sub
mov
mov
xchg
pop
lock
xchg
lds
mov
push
div
rcl
fnstcw
sub
push
inc
dec
orl
cmc
cs
or
jo
or
popf
and
xorb
mov
in
and
rclb
or
mov
mov
pop
sbb
xor
mov
stos
imul
mov
add
adc
push
add
push
cltd
iret
lcall
addl
pop
pop
lock
cltd
cmp
sti
outsb
or
adc
xchg
push
lret
inc
sub
mov
mov
rcl
or
shr
mov
push
movl
jp
cmp
mov
test
mov
sarb
xor
fs
popa
mov
mov
mov
loop
inc
fnstenv
jmp
sub
push
in
xlat
sub
inc
flds
push
roll
mov
nop
shr
mov
shll
xchg
ret
push
push
mov
inc
mov
sub
fsts
lods
mov
jle
xor
leave
adcl
fs
push
jbe
stc
cli
and
mov
push
sbb
xor
push
cwtl
out
pop
lahf
ljmp
push
insl
mov
mov
mov
mov
mov
les
xlat
cmp
rolb
notl
or
sbbb
mov
mov
jmp
test
rcrl
movq
push
nop
fldcw
mov
das
xlat
cli
sub
xchg
sub
das
jmp
testl
cmp
mov
jg
push
insl
icebp
incb
data16
aad
mov
test
xor
pop
into
sub
pop
pop
jns
dec
or
xor
xor
mov
les
and
sbb
loope
int
mov
mov
jnp,pn
cli
sbb
repz
ret
pusha
cmc
jnp
xchg
or
pop
test
out
mov
test
aaa
inc
mov
push
xcrypt-cfb
cmpsl
movsl
jg
movsb
mov
outsb
sbb
and
sbb
or
test
dec
test
cmpsl
cli
andb
out
add
and
push
add
mov
adc
dec
pop
sbb
vmread
and
in
addr16
xchg
mov
sub
mov
pop
out
cli
mov
jo
inc
jnp
mov
mov
in
popf
out
clc
sti
push
ret
xorl
mov
inc
out
jge,pt
sub
push
ds
pop
scas
shll
popa
mov
xchg
shll
loop
sbb
in
negb
pop
inc
mov
push
sub
push
scas
cmc
jle
das
xor
stos
jmp
lgs
mov
cmp
addr16
ds
sub
lock
cs
cmc
mov
mov
or
inc
mov
insb
inc
inc
add
rcr
adc
aaa
mov
cli
mov
hlt
cld
negb
adc
mov
outsb
mov
das
sub
inc
shrb
xor
push
sub
shll
ss
ret
stos
push
fimull
jmp
xor
gs
lds
repz
push
xchg
stos
xlat
cmp
cmp
scas
jnp
or
add
push
repnz
ret
dec
push
xchg
cmpsb
push
inc
xlat
mov
cmp
push
xchg
or
push
and
mov
push
and
pop
insl
push
lock
or
nop
mov
je
sbb
loope
mov
mov
out
or
daa
lds
movl
jno
divw
cmp
scas
stc
and
into
fs
out
lods
add
repnz
mov
jg
roll
inc
sub
jnp
mov
mov
fisttps
rol
mov
clc
jmp
push
cmp
mov
sub
jecxz
fwait
lea
jae
mov
gs
cmpl
push
adc
dec
cmp
es
mov
imul
sbb
adc
add
push
dec
mov
emms
jae
sbb
loope
in
push
mov
sahf
add
std
or
xor
pop
hlt
ror
sub
jo
cs
loope
mov
push
mov
into
or
mov
lret
insb
loop
mov
mov
pop
ret
xchg
and
mov
cld
push
int
in
pmaddwd
and
dec
in
mov
mov
arpl
jns
jae
mov
mov
xchg
adc
cmp
stos
cmp
and
xchg
test
sub
cmpsl
movsb
fistps
cmpsb
popa
shll
test
in
add
and
mov
imulb
pusha
xchg
xlat
mov
or
mov
dec
ss
in
ds
push
and
mov
pop
cmp
mov
nop
call
adc
add
lret
arpl
fistps
ljmp
sbb
cmp
insb
adc
arpl
mov
bound
and
pop
push
arpl
mov
add
out
std
cmpsb
arpl
add
pusha
push
inc
inc
push
cmpsl
or
jmp
loope
shlb
jl
scas
pop
mov
out
dec
mov
cld
movsb
shlb
add
outsb
pop
js
mov
leave
dec
repz
pop
dec
or
jmp
aaa
sbb
aaa
das
ja
insl
dec
xchg
cltd
xchg
mov
sub
out
jns
jb
insb
push
icebp
inc
fnstsw
icebp
inc
mov
lods
in
int3
mov
pop
shlb
dec
mov
nop
ja
inc
int3
stos
leave
sub
push
and
mov
sub
ret
fs
jl
loopne
cwtl
add
les
sbb
add
jmp
test
xchg
sub
push
test
xor
adc
push
shll
out
dec
aam
mov
jl
add
pop
pop
int
int
mov
fistpll
inc
jo
rcr
adc
clc
xchg
mov
dec
popa
inc
jl
xor
cmp
ret
cmp
mov
jb
sub
xor
test
arpl
loopne
sahf
sub
inc
out
enter
stos
mov
mov
pop
mov
dec
sub
sbb
xor
hlt
popa
jle
inc
cmp
dec
mov
sti
pop
adc
jae
std
add
inc
scas
ret
lea
push
add
adcb
mov
inc
pop
iret
fdiv
les
movsb
push
inc
xchg
adc
sub
stos
jbe
data16
cli
rcrb
in
repnz
sub
and
or
push
push
orb
or
mov
adc
pop
sti
mov
or
fdivl
mov
sahf
jle
out
cmp
loopne
xlat
pusha
out
bnd
std
fwait
push
lahf
jp
repz
push
loopne
inc
lret
cmp
mov
mov
xchg
mov
jne
mov
push
xor
ljmp
pop
push
data16
int
adc
inc
mov
xchg
loop
inc
jae
inc
mov
fadd
xor
adc
imul
xchg
inc
jle
sbbl
aad
xor
fsubs
sub
leave
je
or
bound
insl
xor
jle
push
pop
sub
pop
stc
stos
test
lret
mov
sub
jnp
mov
test
out
stos
push
sub
into
ljmp
jmp
or
inc
push
sbb
sbb
inc
addl
bound
mov
xchg
std
push
dec
sbb
mov
ds
aam
mov
shrb
mov
push
mov
lret
les
xor
or
arpl
dec
pop
rcrl
pop
outsb
in
mov
pop
jmp
jnp
pop
fisubl
mov
aaa
loopne
loop
mov
sbb
clc
cmc
push
fwait
add
iret
adc
and
daa
adc
xchg
mov
push
sub
push
call
orps
mov
adc
adc
stos
xor
repz
inc
popf
sub
mov
jne
sub
mov
jl
cmp
jg
lods
mov
mov
les
jb
pushf
add
mov
out
xchg
dec
sbb
ljmp
loopne
lods
clc
pop
mov
adc
outsb
xchg
imul
loope
dec
clc
mov
pop
hlt
jge
adc
std
ja
movsb
sbb
adc
adc
fbstp
or
inc
push
imull
in
mov
jae
lcall
out
push
out
stc
daa
mov
mov
pop
inc
xor
ffree
jne
push
sub
push
popa
sub
or
pop
shl
jg
aad
cltd
and
shrl
sti
xor
cmc
sbb
add
fstpl
xchg
out
pop
popf
fistpl
dec
leave
lcall
cli
shll
inc
int3
bound
sub
inc
movsb
adc
xor
dec
jl
popa
mov
pop
push
pop
jp
sarl
test
pop
cs
data16
cmpsb
dec
lret
sub
xchg
sub
lods
push
push
adcl
pop
sbb
lahf
push
mov
mov
out
jns
in
fimuls
sahf
cmpl
enter
cwtl
inc
sub
mov
or
pop
xor
pop
dec
out
outsl
mov
pushf
leave
vcvtpd2dqy
mov
sbb
fldt
mov
or
jecxz
push
mov
clc
scas
arpl
in
sub
adc
push
dec
inc
adc
gs
ficompl
loope
pusha
insl
loop
lahf
or
bound
inc
repz
or
das
lret
xchg
adc
jne
fcoms
mov
sti
pop
cmp
and
gs
ret
mov
roll
fs
or
xor
call
int3
mov
mov
dec
fistl
frstor
cmpsl
inc
das
xchg
cmp
inc
std
push
lahf
movsb
lods
or
cltd
incb
xor
jecxz
rclb
sub
push
push
jg
cmp
pop
dec
stos
cmovb
mov
inc
pop
mov
xchg
out
jmp
adc
repnz
or
jmp
cli
mov
cmc
test
adc
jns
pop
adcl
mov
sbb
mov
jbe
or
xor
dec
cld
lcall
sbb
xor
inc
mov
movsl
pop
push
adc
xchg
inc
adc
adc
test
jne
fidivrs
push
sbbb
pop
aad
push
movsb
push
jnp
mov
rorb
js
adc
nop
shlb
mov
lea
imull
dec
int
dec
nop
sbb
ret
pop
repnz
cld
lods
xchg
inc
pop
inc
loopne
movsl
cmp
mov
clc
data16
orb
adc
mov
js
je
jl
mov
imul
das
adc
sbb
or
sub
test
add
and
mov
loopne
outsb
xchg
sti
xchg
fmuls
cmpsl
aam
sbb
jecxz
insl
out
dec
pop
add
push
jnp
and
bound
add
in
mov
push
in
je
adc
sbb
lret
push
aad
xchg
fisubl
shll
jl
in
jle
xchg
je
pop
xchg
call
out
jmp
mov
jecxz
mov
sahf
mov
xlat
les
lahf
cmp
cmpsl
repnz
mov
mov
movsl
xchg
lds
es
sar
push
pop
jg
jne
inc
inc
xchg
int
hlt
pop
push
cld
jae
mov
cltd
int
les
sbb
ret
ja
mov
xchg
paddsw
xor
jnp
fcomi
enter
mov
outsl
pushf
addr16
push
push
cld
sahf
or
add
gs
pop
shll
jge
test
fmuls
mov
add
daa
lock
inc
push
push
pusha
jmp
imull
push
pop
pop
push
mov
out
out
iret
xchg
sti
repnz
inc
add
in
pop
ss
pop
mov
push
mov
jo
data16
test
jns
mov
jmp
jge
cmp
stos
stos
mov
sahf
jnp
push
mov
xor
push
push
fs
xlat
outsl
pop
dec
jg
rolb
fisubrl
movsl
inc
push
out
fs
insl
push
out
fcoms
fbstp
adc
in
ss
mov
sbb
mov
cmp
sahf
mov
aam
lods
das
pop
ljmp
jnp
dec
push
inc
dec
ret
lret
out
pop
cmp
jge
mov
cmpsl
sbb
inc
jnp
inc
aad
decl
add
push
add
pop
mov
mov
push
adc
dec
icebp
test
leave
sub
cmpsl
pusha
adc
cltd
lahf
decb
cltd
pop
add
pop
ss
mov
enter
sbb
mov
jb
cwtl
mov
or
lret
or
mov
sti
pop
out
dec
and
orl
jo
mov
test
test
push
jg
fbld
dec
cli
xor
push
adcb
cmpsb
mov
cmc
cmp
lea
pop
lods
dec
je
sbb
sub
lcall
aas
fsubrl
arpl
out
insb
loop
out
mov
nop
mov
lcall
pop
push
xor
scas
call
iret
adc
cld
les
sub
inc
xlat
stc
or
pop
testb
mov
in
cli
sub
cmp
xor
std
outsb
xchg
xchg
jecxz
sbb
or
dec
stos
jne
rorl
ds
or
nop
and
mov
in
jge
rcrl
repz
xor
rcrb
fs
or
ds
das
inc
jb
aam
adc
fidivl
or
and
add
subb
filds
call
int
and
subb
sub
fdivp
popf
rorl
push
mov
out
or
dec
mov
mov
or
lret
push
dec
gs
xchg
fstp
xchg
fildl
mov
and
add
cmp
loope
pop
pushf
repnz
cmc
lea
pop
fstpl
or
lret
fsubp
add
mov
orb
mov
popf
cmpsb
lret
cmp
and
lds
lock
ljmp
ja
test
pop
lret
fadds
ljmp
or
push
je
nop
sbb
inc
inc
hlt
out
push
cwtl
sub
sub
jns
or
inc
js
cmpsl
or
push
sti
mov
addl
mov
gs
int3
sbb
adc
dec
jge
repz
popa
pop
fcoml
xchg
and
loopne
ds
sbb
cmp
mov
sbb
daa
bound
or
jne
imul
jl
test
add
pop
and
mov
lret
jae
bound
mov
or
imul
mov
push
mov
dec
popf
push
movsl
out
pusha
test
jno
dec
mov
pop
sbb
pop
roll
or
sahf
jg
sbb
push
std
int3
mov
cmp
iret
int
jne
data16
outsb
xor
and
add
lds
pushf
sub
ret
fldt
fiadds
data16
adc
mov
push
push
jl
ss
xor
and
fldt
xchg
out
mov
mov
nop
adc
sub
adc
ffreep
mov
sbb
test
push
xchg
stos
aam
clc
push
out
lea
adc
xchg
or
or
pop
rorl
xchg
imul
mov
outsl
cmpsb
les
jl
push
enter
add
in
jge
or
cli
in
pop
push
mov
loop
ja
sbb
cli
arpl
out
or
xchg
push
sub
dec
enter
ljmp
in
movsl
add
fidivs
cmpsb
xlat
test
inc
add
fnstsw
popf
sbb
and
mov
push
inc
adc
mov
dec
jns
xchg
ret
call
outsl
dec
jb
repnz
out
in
mov
leave
cs
mov
divl
scas
push
xor
dec
shll
cwtl
jle
sbb
sbbb
cmp
add
pop
lods
xchg
popf
jg
repz
cmpsl
mov
ja
loope
jecxz
cli
mov
ljmp
pusha
loop
cwtl
out
or
add
lret
cmc
fistl
stc
cwtl
cmp
mov
dec
test
mov
inc
in
xchg
lcall
lock
orl
mov
cld
js
mov
cwtl
mov
xor
int3
pop
mov
jno
pop
pop
daa
mov
gs
cmp
mov
cmp
fstpl
mov
fdivs
add
jmp
push
push
scas
or
mov
test
shl
and
scas
push
mov
cmp
test
sub
xor
inc
outsl
cmp
inc
daa
test
cld
mov
testl
ljmp
sub
mov
sub
in
cmpsl
adc
jle
fldt
out
push
enter
sub
roll
enter
or
bound
sahf
movsl
dec
push
xchg
popa
in
xchg
test
cmc
mov
and
test
push
popa
mov
push
das
mov
sub
aas
pusha
dec
cmp
mov
shlb
ja
push
in
add
jno
push
sbb
ja
xchg
xchg
jae
xchg
xor
bound
xchg
imul
pop
pusha
shrb
sarb
pop
xchg
xor
sbbb
sbb
sbb
daa
pop
sub
xchg
inc
aas
inc
ret
sbb
test
call
shlb
adc
mov
lcall
xor
lahf
mov
and
mov
and
sbbl
adc
dec
movsl
mov
mov
dec
jecxz
xchg
inc
in
in
fnsave
test
and
jecxz
xchg
push
add
inc
push
aad
popf
mov
inc
push
xchg
and
inc
mov
lods
cld
cmp
add
fnstcw
rorb
sbb
pop
push
cld
call
push
jge
out
xchg
jl
jg
push
mov
push
xchg
rdmsr
push
xchg
add
xlat
je
pop
fnsave
clc
mov
iret
das
cmp
mov
insl
xlat
in
inc
lods
sbb
es
nop
jbe
fmull
lds
in
jge
daa
and
ret
fbstp
inc
lods
xor
ret
mov
push
stos
pop
push
imul
repz
mov
mov
movb
fstl
pop
jle
pop
jle
add
inc
es
insb
mov
in
xchg
sub
lock
push
and
mov
dec
adc
ss
fimull
lods
adc
jno
into
loopne
jns
test
in
dec
lahf
divps
hlt
outsb
lods
inc
mov
push
test
daa
inc
aas
aam
adc
cli
mov
xchg
add
sub
sub
out
add
xchg
lock
push
cmpsl
push
sahf
das
adc
fwait
sbb
adc
jg
and
adc
inc
jle
push
es
ficompl
mov
push
scas
mov
subps
lahf
mov
insb
lods
ret
xchg
inc
in
popa
and
movsl
push
dec
rcrl
dec
test
and
dec
xchg
pop
int3
aaa
and
shufps
outsl
cmp
cltd
inc
pop
and
aam
insb
sbb
stos
sub
sub
sub
jb
add
test
iret
rcr
xlat
sti
xor
sub
fldcw
testb
xor
je
arpl
dec
add
bound
adc
leave
repnz
lds
jle
js
shll
and
rcll
mov
adc
not
or
lret
data16
roll
or
repz
loope
in
sub
sub
fildll
dec
addr16
cmp
or
andl
hlt
aas
imul
add
lods
idivl
les
and
jle
in
subl
inc
clc
jbe
xchg
dec
ds
and
fsub
je
inc
js
mov
add
jg
adc
out
insb
cmp
fisttpl
fdivrs
sub
push
icebp
test
cmpsb
ret
push
mov
sub
or
stos
xchg
jp
leave
jecxz
test
cmc
pop
push
cli
out
inc
out
mov
sbb
in
ljmp
mov
mov
aam
into
in
xor
imull
lret
sahf
pop
jle
imul
addr16
cmpsb
add
xchg
jl
enter
pushf
aad
cld
pop
in
jmp
mov
nop
add
dec
and
or
jge
pushf
data16
lret
dec
js
sbb
or
push
addb
inc
dec
outsb
insl
add
std
jecxz
movsl
aaa
leave
stc
lock
mov
mov
cmpsl
cmc
xor
jle
inc
sub
ljmp
xchg
movsb
outsl
jnp
clc
sahf
dec
cld
jo
pop
pop
imul
pop
test
dec
out
jb
adc
je
loope
or
stos
bound
jmp
pusha
mov
ret
xchg
lcall
pop
cs
xor
pop
mov
test
fdivs
or
orl
les
cld
jne
es
push
ret
mov
or
scas
mov
insl
mov
cmpsl
movsb
imul
fnstenv
add
movsl
sahf
pop
das
jle
xchg
xor
dec
push
adc
clc
leave
out
stos
jne
jne
sub
in
sub
scas
in
lcall
mov
js
inc
rcr
pop
fwait
or
arpl
or
push
cld
repnz
add
sbb
or
pop
pop
into
test
inc
add
subb
out
adc
js
les
insl
mov
mov
xchg
sbb
push
jmp
repnz
adc
jge
xor
es
fcoms
popf
add
add
lret
push
add
or
and
mov
test
stos
pusha
sub
sub
push
jl
sub
test
xlat
add
pop
xor
fistpl
aas
or
push
xchg
xchg
inc
shll
add
repz
lea
and
mov
jle
jns
inc
pop
xor
jns
test
inc
mov
adc
add
ss
lods
mov
pop
xchg
fucomp
sub
flds
adc
lret
in
xchg
insl
pop
push
pop
add
adcb
cmp
push
pusha
mov
out
sub
outsl
xchg
xchg
xor
sub
lods
mov
clc
clc
fisubrl
mov
cmp
dec
mulb
in
push
inc
daa
pop
cmc
jmp
out
xchg
push
cltd
fidivl
fstps
jns
dec
iret
out
lret
jne
mov
dec
or
mov
das
iret
pop
ret
jle
cmp
dec
mov
lock
fcmovnu
add
sbb
xchg
jge
hlt
jle
not
adc
enter
nop
dec
pushf
push
xchg
add
cltd
cmp
mov
stos
mov
mov
cmp
xor
push
sahf
jge
mov
dec
cs
outsb
test
and
jg
call
shll
dec
shrl
das
fisttps
ret
pop
outsb
test
sbb
xlat
test
cmpsb
mulb
rcrl
adc
adc
jae
cmp
xchg
movsb
loop
je
js
les
aas
outsb
mov
inc
dec
mov
push
cs
adc
sbb
jne
mov
popa
decl
inc
scas
cmp
mov
or
lret
jbe
jae
loop
jnp
nop
repnz
add
out
popf
and
testl
call
adc
mov
loop
sub
popa
cwtl
adc
xchg
loopne
inc
and
pop
pushf
outsl
jns
push
mov
dec
cld
movsl
mulb
cmp
popa
xor
push
scas
xchg
fmuls
loop
sti
pop
or
ret
mov
mov
ret
les
aas
push
fsubr
icebp
movsb
dec
or
mov
sub
push
mov
aas
mov
out
test
fdivs
mov
fucomi
popf
xchg
pop
rolb
ja
push
mov
test
jge
mov
push
jns
ljmp
popf
adc
inc
pusha
lds
xchg
xchg
jo
mov
scas
jl
cld
out
test
pop
bound
add
push
jmp
jecxz
cmpsl
pop
lret
xor
int
pop
and
cmp
out
xchg
xor
push
dec
or
sarl
ljmp
imul
loope
or
fucom
or
dec
cs
cwtl
aad
scas
and
pop
sub
into
and
std
sbb
inc
jecxz
inc
outsb
enter
test
push
loopne
add
mov
in
cmc
cmp
pop
inc
mov
and
push
push
cmp
mov
fwait
jp
push
add
loop
pop
jecxz
push
std
loopne
sbb
cli
and
and
mov
fldt
mov
mov
mov
dec
mov
sahf
adc
pop
outsl
lret
jp
loop
addr16
aaa
or
add
ret
movsb
call
sub
sti
jle
rcll
mov
idiv
sub
je
imul
data16
int
and
mulb
pop
mov
inc
pop
inc
fcmovu
out
rcr
orb
popa
inc
dec
push
lcall
xchg
lret
movsl
mov
cmp
xor
add
cwtl
mov
outsb
push
negl
in
push
orl
xchg
mov
and
int3
inc
ret
int
setne
loop
inc
dec
jne
loopne
and
add
lahf
test
sti
jecxz,pt
in
hlt
cmp
mov
xchg
add
pop
lods
js
jb
mov
mov
push
imul
xchg
out
sbb
xlat
mov
mov
xlat
pusha
rclb
imul
out
sahf
into
sbb
notb
adc
lcall
in
add
imul
pop
mov
nop
push
movsl
xchg
fsubr
lock
mov
add
out
shlb
aaa
add
iret
jne
pop
adc
mov
mov
arpl
pop
xchg
rol
in
xchg
mov
ret
ljmp
push
loop
fsts
add
xchg
pop
sti
rcrb
inc
iret
sub
aaa
sbb
mov
push
fdivrl
and
push
xchg
push
idivl
mov
vunpcklpd
adc
inc
mov
scas
lds
or
addl
test
cltd
in
divb
push
jnp
add
mov
xor
shll
sub
mov
insl
xchg
movsl
mov
push
gs
jo
sahf
and
xchg
fs
clc
sbbl
or
jg
add
dec
lods
test
lret
outsb
xchg
or
dec
add
popf
push
and
push
jb
jbe
aam
ljmp
mov
jnp
push
push
sbb
and
out
push
call
jmp
mov
push
dec
in
int3
jecxz
pop
mov
xchg
in
mov
mov
in
cmp
imul
lods
out
mov
jae
jnp
mov
and
fs
fimuls
orb
fdivrs
testl
mov
inc
adc
mov
mov
inc
jnp
xchg
inc
popa
pop
inc
mul
pop
cmp
addps
sub
or
jp
cmc
mov
movsl
xlat
sub
into
aad
sbb
add
repz
sub
mov
addl
das
stos
pop
push
adcb
xchg
fistpll
jecxz
out
xchg
mov
pop
xor
lea
js
and
inc
imul
push
add
sbb
repz
icebp
pop
and
lret
pop
out
sti
pop
mov
sub
clc
lds
lods
cmp
ja
cmp
and
add
xchg
inc
sbb
stos
aas
jo
lret
cmpsb
mov
gs
cmp
sahf
adc
xor
push
sbb
or
pop
push
stos
je
cltd
sbb
jae
xchg
pop
xchg
push
rcrl
pop
xchg
pop
dec
mov
pushf
xor
sbb
and
movsb
dec
and
sti
leave
pop
mov
sahf
ss
mov
mov
adc
dec
sub
pushf
and
imul
inc
repz
push
lods
push
mov
xlat
insb
data16
push
es
insl
cmp
in
dec
cld
pop
add
pop
test
mov
lcall
inc
sub
in
dec
test
insl
jns
mov
or
xor
jb
push
jle
fldcw
mov
ja
aad
and
jp
fidivrs
jge
or
je
and
rcrl
push
add
inc
mov
pop
repnz
push
jae
fnstenv
cmp
test
fwait
dec
xchg
push
in
cmp
out
adc
gs
out
pop
test
add
and
shlb
test
jne
imul
pop
push
dec
push
cmc
cmp
int3
add
int
das
mov
xor
pushf
pop
mov
xor
sbb
mov
out
push
pop
in
jecxz
je
mov
cmpsb
popa
lods
xchg
test
xor
flds
cmpsb
scas
sahf
dec
mov
mov
sbb
sub
sti
xlat
outsb
inc
push
in
pop
and
add
push
popa
into
outsl
xchg
lahf
cli
mov
cli
lcall
shlb
jge
pop
xchg
outsb
testl
inc
mov
or
sub
insl
ja
push
pop
cmp
add
cli
pop
add
and
cwtl
push
inc
and
cli
push
scas
add
pusha
pop
sbb
divb
jg
push
cmc
jno
sub
imul
inc
icebp
mov
lret
popf
mov
enter
rclb
jmp
lods
fistps
mov
popa
repnz
jne
mov
adc
mov
mov
in
lods
xchg
cmp
ret
gs
les
pop
leave
inc
mov
pop
xchg
dec
cmp
mov
fdivp
es
push
sub
sbb
push
mov
sbb
add
push
mov
pop
into
test
rorl
cltd
scas
icebp
mov
xchg
aaa
imul
pop
mov
int3
jne
hlt
sahf
jl
and
jge
lock
mull
mov
sub
sub
test
orl
je
out
push
les
dec
xchg
pop
rol
xchg
inc
call
sbbb
fdivrs
shlb
fcom
cwtl
inc
pop
ja
jp
insl
adc
dec
xlat
repnz
jge
jecxz
jmp
outsb
out
push
cmpsb
loopne
imul
imul
mov
xchg
sbb
stos
pop
out
lea
jl
jo
pop
cmpsl
xchg
out
iret
mov
and
dec
test
cmpl
mov
mov
nop
or
push
sahf
cmp
pop
sub
jmp
je
inc
adc
inc
mov
ret
jg
cli
pushf
push
fsubrl
and
cmp
xor
jl
mov
mov
adc
dec
addr16
pop
out
push
out
cmp
jecxz
mov
loope
lock
xchg
push
out
and
and
movsl
or
movsb
xchg
inc
ds
mov
jmp
andb
cmp
fstl
pop
mov
ret
jae
mull
pop
stos
cmp
imul
mov
pop
sbbb
mov
sti
pop
in
pop
iret
add
sti
fnstenv
shlb
xlat
cli
data16
test
adc
dec
jb,pn
rcl
lds
imul
pop
nop
add
or
pop
push
xor
dec
mov
outsl
lods
sti
aam
inc
stos
mov
pop
roll
inc
das
sub
push
dec
inc
ret
popa
or
lds
insb
mov
mov
mov
sbb
and
rcll
inc
loop
inc
mov
int
and
mov
ret
and
rdtsc
mov
and
int
stos
aad
stc
adc
cld
and
push
enter
mov
test
cltd
adc
push
adc
jnp
push
mov
in
add
or
sbb
mov
sahf
mov
add
pop
out
lock
xchg
loope
mov
cmp
mov
jns
sub
jg
les
std
jl
pop
jecxz
pop
stc
xchg
lods
pop
jbe
dec
xor
shlb
js
rclb
scas
xlat
loope
adc
andb
sbb
in
out
fsubrs
jno
dec
fidivl
out
int3
push
cltd
lret
lahf
adc
arpl
dec
sub
call
xchg
int
or
sbb
pop
movb
pop
iret
pop
call
mov
lahf
cmp
insb
mov
mov
mov
mov
jo
add
sbb
imul
imul
sbb
jmp
sbb
sar
pop
cltd
andb
jecxz
xor
lock
cmp
pop
test
arpl
mov
test
aad
dec
test
mov
movsl
push
loope
pop
rcr
ret
mov
test
roll
push
jmp
push
sub
pop
pop
mov
stos
testb
sbb
sub
movsb
ljmp
ds
lea
lds
or
pop
mov
insb
fimull
push
sbb
dec
mov
fadds
inc
out
cmp
out
es
pop
lods
and
adc
addl
leave
aad
ret
or
psllq
push
aas
sbb
push
cmp
mov
or
or
imul
fs
and
xor
outsl
xorb
mov
jo
stos
mov
sub
push
dec
mulb
and
sbb
lds
xor
pop
cmpl
sub
jl
stos
sbb
and
aam
sti
lea
std
insb
es
mov
lock
xorb
sub
pop
daa
jmp
addr16
int3
xchg
cmp
dec
hlt
mov
ljmp
rcl
dec
scas
add
and
mov
sub
mov
or
mov
jbe
aas
inc
pop
dec
aam
push
decb
mov
fwait
aam
outsb
adc
enter
sub
dec
movsb
inc
xchg
popf
or
insb
xlat
mov
inc
cli
jb
pushf
xchg
lods
les
push
lret
pop
test
or
imul
inc
scas
adc
loopne
sti
jb
sub
mov
pop
roll
gs
movsl
dec
leave
cmp
nop
movsl
scas
addl
adc
fs
adc
sarl
ret
popl
outsb
stc
leave
xor
test
pop
jno
fwait
pop
sbb
push
test
fiaddl
add
push
call
fxch
hlt
shlb
out
out
dec
cwtl
rcrl
mov
lds
mov
nop
add
mov
xor
adc
jae
iret
xchg
ret
ja
lret
idiv
repnz
jg
xchg
arpl
mov
dec
sub
xor
mov
cmp
push
imul
mov
rol
outsl
mov
xor
pop
cmp
cmp
xchg
xchg
xchg
xchg
mov
ret
je
insb
imul
inc
jbe
push
jp
cmpsb
ja,pn
mov
adc
out
sub
dec
and
lcall
movsl
lods
cmc
imul
into
cmp
add
ss
push
inc
push
xor
mov
lar
bound
sbb
in
aaa
cmc
mov
fidivrl
adc
popf
jne
mov
cmp
lods
aam
sub
int3
jae
mov
outsl
and
dec
or
popa
push
adc
sti
push
lea
je
push
rcr
jmp
lds
sbb
ja
loop
sbb
ffreep
cmp
mov
fsubrl
lea
imul
jno
pslld
stc
inc
push
lods
daa
adcb
imul
cmp
mov
xchg
dec
cmp
cs
mov
lea
mov
dec
or
scas
cli
push
stos
mov
incl
inc
add
cmpsb
cmp
mov
xor
out
mov
mov
jmp
jnp
lret
std
mov
sbb
mov
sub
or
mov
adc
push
jnp
adc
xor
inc
jmp
push
mov
jle
xor
sbb
test
les
push
loop
inc
dec
jge
mov
js
in
rcl
in
iret
dec
mov
adc
cmc
loope
enter
sub
and
mov
in
lret
mov
adc
loop
in
mov
fcmovbe
jg
sub
jns
rcll
sub
sahf
pop
and
aaa
and
mov
ljmp
mov
dec
test
mov
xchg
cld
and
add
cmp
ds
adc
stc
adc
adcl
mov
ret
xchg
lahf
push
xchg
lret
jmp
sti
xor
int
daa
lods
loope
stos
mov
roll
mov
movsl
dec
jnp
mov
repnz
out
xchg
push
inc
lods
scas
mov
inc
pusha
xchg
iret
cmp
lahf
and
ja
add
inc
inc
das
scas
cld
inc
ljmp
mov
mov
sub
xor
adc
jne
scas
pop
mov
aas
or
jae
hlt
mov
mov
call
ds
in
mov
hlt
aam
std
popa
mov
lods
and
in
jns
loopne,pn
aas
mov
inc
pop
in
push
lret
mov
lret
sbb
fldcw
adc
int
rorb
mov
out
int3
jns
push
mov
jl
rclb
cli
fldt
sub
cs
mov
outsb
dec
jbe
or
je
push
adc
mov
cwtl
in
lahf
aaa
sbb
xchg
xor
mov
shlb
xchg
out
addr16
dec
dec
jbe
fmull
mov
cmpsb
dec
mov
es
repz
sbb
popa
pop
test
xlat
mov
stc
lcall
mov
cli
dec
xchg
xchg
inc
clc
mov
out
pop
rcll
jno
cli
cli
dec
pop
ret
sarl
data16
imul
shll
clc
rol
mov
dec
loop
ss
push
inc
testb
or
out
out
jp
ret
and
cmpsl
jno
dec
mov
das
lods
repnz
pop
dec
jg
cmpsb
jmp
repnz
inc
or
pop
repz
lret
test
mov
push
addr16
fnsave
ljmp
jl
jmpw
jle
fwait
xor
mov
fisttpll
xchg
mov
je
stos
sub
xchg
cmp
sub
mov
adc
shrb
mov
cltd
cmp
pop
pop
xchg
out
mov
cs
stos
repz
inc
ret
inc
jecxz
push
mov
xchg
cmp
inc
sbb
push
jge
aam
push
adc
sbb
jg
les
inc
xchg
sti
sub
mov
loop
jl
mov
es
add
fidivrs
mov
cmp
iret
loopne
jge
mov
push
push
rorl
push
mov
jl
mov
push
mov
insl
sub
sub
sahf
inc
mov
inc
or
inc
sub
push
cmp
lods
pusha
fsubr
mov
ret
fldt
fnstenv
push
ret
inc
adc
and
dec
stos
mov
jg
inc
and
arpl
leave
push
inc
pop
adc
aas
int3
loopne
cmp
mov
test
stc
orl
push
adc
out
nop
sarb
rep
push
sbb
pop
jle
push
repz
sbb
leave
cmpsb
inc
sub
xchg
pop
inc
sbb
leave
mov
inc
xchg
and
push
arpl
cmp
jp
mov
arpl
dec
idiv
lock
push
jmp
xor
mov
xor
scas
jnp
mov
aas
inc
test
data16
xor
jnp
cmp
adc
ja
pop
fwait
adc
mulb
cli
pop
out
mov
push
pop
xchg
leave
pop
jecxz
or
adc
xor
mov
push
cmp
pop
push
xor
mov
iret
cmpsl
insl
mov
jnp
fnsave
xor
xor
mov
push
ss
ret
adc
cwtl
nop
out
cmp
adc
xor
fdivrs
cmp
fmul
sti
mov
out
arpl
adc
shlb
inc
lds
adc
cmpsb
lock
inc
push
or
popl
fs
popa
pop
xchg
jge
push
icebp
and
add
sbb
ret
addr16
sbb
xchg
int
sbb
sbb
mov
xchg
sti
adc
cmc
jle
xchg
push
stos
lock
mov
outsl
mov
sti
push
or
jle
push
and
jle
mov
shll
aad
sahf
out
xor
pop
ljmp
inc
jge
out
adc
or
push
add
xchg
cli
and
push
insb
dec
ds
adc
test
cmp
mov
rcrl
xor
lahf
stos
mov
imul
insl
sub
inc
push
stos
in
jns
cmpb
cmp
mov
aaa
jp
jns
aam
sbb
mov
das
xchg
inc
shlb
push
daa
mov
sahf
fdiv
xchg
and
jecxz
mov
cld
stos
sub
and
add
movsl
pop
addr16
mov
and
fs
sub
loopne
push
lock
push
push
test
cmp
orl
inc
cmp
lahf
sahf
stos
add
mov
ret
loopne
gs
dec
xchg
mov
insl
pop
xchg
or
bound
mov
adc
mov
cld
enter
ret
sub
arpl
xor
icebp
in
xchg
sub
fucomip
and
rcll
push
pushf
or
ret
or
clc
pop
daa
jne
add
ja
ret
std
ret
rcrl
pop
pop
mov
mov
cltd
or
ffreep
and
inc
mov
inc
repnz
jo
mov
dec
inc
decl
fiaddl
ret
or
test
xlat
dec
scas
jo
jge
bound
and
adc
lods
sub
or
jle
xchg
mulb
scas
adc
and
fwait
into
mov
pushf
jg
cmp
insb
pop
rcl
jge
cmp
push
cmp
or
pop
sub
or
cmp
push
iret
xchg
or
jmp
or
lock
loope
pop
fidivrs
jnp
insb
icebp
xor
or
pop
jle
mov
xchg
cmp
in
cwtl
pop
add
imul
add
mov
jbe
fisubs
adc
or
fidivrs
cmp
or
xchg
shlb
lods
subb
sub
clc
test
subl
jl
mov
pushf
je
or
push
jmp
das
std
mov
mov
test
push
xor
das
mov
pop
and
loope
mov
in
inc
jl
mov
gs
fstl
pop
cmpsb
in
and
das
or
add
add
inc
or
jl
dec
cmp
cmp
mov
jp
les
test
mov
inc
mov
test
push
add
cmpb
add
dec
jne
dec
add
loope
jns
mov
xchg
filds
ja
mov
mull
cmp
jb
outsl
cmp
jmp
jle
xor
leave
sub
add
mov
push
sti
insb
inc
dec
cmp
cmpsb
in
xchg
loope
jg
fnstenv
xchg
rorl
roll
jmp
jmp
xchg
aad
stos
ss
daa
lock
xchg
js
inc
dec
sub
jo
cmp
cli
pop
cmp
cwtl
sub
pop
push
sub
daa
bound
clc
pop
jb
adc
daa
pop
outsl
sub
mov
lods
hlt
mov
and
sub
jno
add
dec
dec
inc
sub
ffree
mov
cmpsb
js
sbb
adc
mov
add
sbbl
icebp
cmp
iret
push
std
test
test
nop
cmpsb
inc
sub
add
push
stos
mov
in
mov
adc
push
jbe
out
std
insb
aas
jge
sbb
or
jne
lret
lods
sub
loope
mov
out
hlt
out
adc
push
mov
pop
mov
fmuls
xor
sbb
mov
inc
hlt
sbb
xor
push
shlb
mov
dec
cmp
outsb
mov
sahf
lods
ret
testl
jns
repz
test
add
lahf
inc
jmp
pushf
cld
nopl
das
insb
leave
std
call
mov
call
sub
int3
push
adc
fsubl
call
add
cmp
xor
fldcw
lea
xchg
dec
stc
sbb
jo
xor
jmp
sbb
pushf
sub
xchg
inc
pop
int
xor
pop
mov
push
sbb
xchg
pushf
js
subb
jnp
xor
ret
sub
adc
scas
sahf
icebp
stos
jle
jle
push
mov
stc
fisubrl
fdivrl
lds
xchg
push
dec
mov
pop
loop
xor
jecxz
xor
das
pop
stc
out
movsb
jns
stc
iret
inc
fidivl
mov
jnp
je
lock
in
movsb
sbb
stos
cmp
ss
xchg
xor
lea
push
int
mov
cmp
fcmovnb
push
addr16
dec
test
pusha
mov
xchg
aas
js
sbb
mov
lret
andb
loop
push
jne
mov
inc
notl
cmp
jne
shlb
hlt
lahf
lret
mov
xchg
outsl
cmp
lahf
sbb
adc
adc
lea
loope
ret
mov
insb
and
pop
popf
push
mov
test
popa
dec
add
jo
inc
cmc
not
xor
loope
out
or
jb
push
icebp
dec
push
pop
in
xor
lods
mov
cmp
add
dec
sub
push
sarl
bound
out
ret
stc
cwtl
sbb
int
stc
scas
push
or
fnstcw
pop
or
cmp
jge
filds
pop
leave
push
fwait
mov
pop
addl
jmp
mov
clc
sbb
adc
insw
lods
mov
xor
sarb
in
mov
push
push
popf
icebp
push
sub
mov
lahf
jmp
mov
cmpsl
scas
pop
pop
adc
aad
mov
or
lcall
sub
sbb
cwtl
lock
inc
jnp
xlat
cmp
shll
cmp
ljmp
xchg
psrlw
add
mov
cmp
xchg
rclb
jb
push
arpl
dec
fsubrl
clc
outsl
call
imul
push
cmp
dec
pop
bound
in
pop
or
pusha
loop
cmc
fdivrp
and
popa
xlat
pop
cltd
lcall
fcoms
faddl
bound
inc
into
adc
lret
mov
test
cmp
cmpsb
xor
xorl
push
aam
push
mov
sahf
mov
mov
push
cwtl
and
lods
cmp
jno
xchg
in
adc
sub
push
xchg
imul
jmp
sbb
nop
unpckhps
iret
or
add
out
mov
sahf
lds
imul
rclb
in
repnz
insb
fisttpll
mov
dec
or
enter
test
movsb
ljmp
jmp
jmp
cmp
fwait
sub
dec
cld
sbb
clc
xor
push
clc
push
sub
loope
popf
fst
movsb
insb
subb
sti
push
pop
int3
sbb
sbb
pop
mov
ret
push
pop
cmpb
out
movsl
popf
and
arpl
push
cmpsb
fsubp
inc
adc
xor
and
fcoms
rorb
xchg
cmpb
push
stos
fmull
cmpsl
fdivs
cmp
mov
or
test
in
pop
jl
fnstsw
add
cmp
stc
pop
mov
cmpsb
cwtl
xor
testl
scas
repnz
sub
sbb
imul
frstor
add
and
jo
es
insl
mov
nop
fbld
xlat
push
imul
mov
add
pop
loopne
xchg
jbe
jno
jp
jae
mov
pop
out
jmp
call
xchg
inc
pop
jnp
cmp
fistpl
test
jle
outsb
int
je
adc
scas
in
lock
xor
lods
dec
pop
mov
sub
test
outsb
push
add
xor
mov
sar
in
push
pop
scas
popa
sti
lea
ja
cwtl
ds
dec
das
or
push
fadd
fistl
jle
rcll
sbb
into
sub
dec
iret
and
rol
out
lds
cltd
mov
insl
ficoml
scas
inc
cmp
mov
sbb
cmp
jmp
movsb
loopne
xor
pop
aad
mov
stc
out
imul
sub
xchg
mov
pushf
loop
mov
cwtl
std
mov
test
pushf
ficompl
arpl
xchg
mov
inc
and
xchg
outsb
insl
add
js
jo
insl
or
cmpsl
out
sti
imul
popl
rorb
adcl
repnz
jmp
fimuls
out
dec
sub
cmp
outsb
mov
cmp
mov
xor
fadds
out
mov
dec
in
les
push
imul
pop
sbb
sahf
cwtl
pusha
xchg
xchg
xlat
enter
pop
push
adc
test
testb
dec
xlat
inc
movsb
call
int
jb
mov
scas
shrb
push
jne
xor
aad
adcb
and
xorl
push
jno
cmp
aaa
xor
xor
sub
sbb
mov
movsb
ss
mov
pop
and
jecxz
loop
in
inc
jae
sbb
sti
jmp
cmp
xchg
adc
orb
mov
les
xchg
mov
pop
jle
divb
loopne
filds
cli
add
divl
cmp
dec
xor
or
mov
leave
jno
jecxz
xchg
sbbl
dec
outsl
aam
xchg
out
test
rclb
sub
imul
inc
pushl
push
fistpll
movsl
in
jb
add
cs
add
shll
jo
push
inc
jno
jnp
jg
mov
int3
inc
mov
lret
mov
test
js
mov
and
mov
jbe
xor
sub
dec
stos
jnp
jbe
mov
sub
or
stos
decb
cmp
cmp
mov
pop
sub
stos
mov
sub
cmp
or
pop
pavgb
lahf
out
imul
mov
xchg
negl
sub
mov
adc
mov
loop
loope
cmp
je
pop
mov
push
or
push
cmp
push
jbe,pt
inc
pop
jmp
call
inc
cs
rolb
inc
jl
ret
movsl
mov
cmp
pop
int
js
push
stos
repnz
popf
pushf
xchg
flds
add
pop
cmp
mov
popf
imul
lcall
loope
push
bound
fcmovbe
xchg
insl
push
aad
daa
arpl
mov
push
sub
lcall
into
jns
dec
out
jmp
stos
in
lret
cmpsb
addr16
dec
adc
inc
jmp
push
ror
stc
sub
xor
fistpll
ficompl
sub
jns
mov
addb
jbe
cmp
int
into
das
aas
lret
cmp
sub
lret
push
ljmp
arpl
and
jae
pop
sbb
popa
pop
mov
test
stc
sbb
roll
dec
jbe
nop
jo
bound
mov
fdivr
lock
addr16
rcr
cmc
jno
imul
dec
imul
xor
jnp
lcall
gs
dec
push
stos
sub
popa
xor
movsb
push
clc
hlt
and
in
or
push
push
jmp
lea
imul
jle
mov
jns
lret
ss
jecxz
jmp
add
out
xor
xchg
mov
mov
ss
or
mov
sub
ljmp
mov
adc
adc
aaa
pop
jge
mov
test
push
lods
test
nop
sbb
ds
push
adc
aaa
mov
mov
aaa
cs
or
pop
mov
lock
inc
in
inc
and
mov
nop
movsl
xor
sbb
mov
jecxz
dec
ss
je
addr16
or
mov
mov
mov
cmpsl
sbb
cmpb
inc
imul
push
jbe
sbb
jnp
cwtl
cwtl
int
test
mov
pop
sbb
mov
jmpw
icebp
mov
popa
subb
adc
cmp
jbe
repnz
xor
repz
lds
mov
mov
xor
cmp
fwait
aaa
pusha
lret
fidivl
shrl
cld
insb
bound
mov
stos
ret
ret
sub
mov
mov
and
outsl
lods
xchg
clc
aam
pushf
push
push
je
jmp
in
cmp
sub
dec
icebp
xor
out
pushl
lahf
sub
jle
cwtl
mov
mov
sbb
movsl
sbb
shl
inc
cltd
sub
es
gs
jl
and
ret
cmp
loopne
lahf
cmpsl
addr16
insb
cmp
outsl
hlt
cs
mov
out
cmpsb
leave
xchg
sub
add
or
mul
pop
push
lcall
fisttps
or
aas
jg
dec
pop
sub
jge
lea
scas
adc
nopl
sti
ds
adc
push
or
in
sbbb
mov
jmp
les
or
shrl
or
mov
mulb
adc
cmp
sub
fdivrl
out
cmpsl
mov
mov
pop
out
fldl
inc
mov
mov
dec
push
mov
out
clc
xor
cmpsb
cltd
pop
sub
out
jp
inc
mov
leave
aam
hlt
lahf
push
hlt
ljmp
dec
push
jne
mov
xchg
dec
js
fs
jle
jne
cs
push
pop
aam
lcall
test
fnstenv
faddl
jns
fdivr
testb
ljmp
mov
fiaddl
int
aad
sub
adcl
inc
adc
cmpsl
loop,pn
in
pop
rolb
inc
or
test
jns
popf
out
add
pop
cs
mov
jno
leave
and
mov
pushf
mov
sbbl
mov
lods
loop
add
daa
loopne
stos
int
cmp
ljmp
fiaddl
pop
outsb
adc
cs
push
xchg
ds
xadd
sub
aam
dec
mov
cmpsb
push
xor
mov
popw
inc
jmp
pop
dec
mov
sbb
sub
inc
imul
les
mov
lcall
call
std
sarb
xchg
xor
aam
bound
add
mov
mov
sub
addl
or
fwait
inc
fxam
sub
jno
ret
cs
stos
mov
cmp
mov
insb
push
out
xchg
ja
xlat
dec
jge
daa
shrb
and
mov
out
cmpsl
jb
mov
mov
iret
lahf
repnz
jg
push
adc
adc
mov
les
loope
pop
leave
mov
push
test
pop
imul
loope
mov
pop
pop
loopne
cs
lods
ljmp
cltd
repz
inc
inc
repnz
pop
call
add
or
dec
xor
xchg
mov
and
mov
xor
xchg
mov
cmp
cmp
mov
sbb
sub
out
cs
jo
or
orb
inc
mov
pop
mov
xlat
pop
cmpsb
cltd
sub
aam
ljmp
mov
outsb
in
test
repz
push
data16
cwtl
loopne
enter
push
testw
mov
sub
mov
or
stos
pop
push
repnz
push
jge
push
push
inc
cld
int
roll
xor
out
ss
lret
icebp
cmp
xor
sbb
scas
mov
out
pop
imull
sub
shr
push
ucomiss
cwtl
xchg
mov
sbb
das
mov
cld
int3
sub
xchg
jnp
stc
fst
pop
pop
ficomps
xor
mov
cmovo
in
and
cmc
mov
adc
xchg
xor
adc
lcall
pop
add
fistpll
xlat
lods
jns
dec
dec
pop
addr16
add
pusha
mov
push
pop
push
jmp
icebp
call
push
push
mov
add
push
mov
xchg
pop
push
mov
add
mov
add
rol
not
add
add
xor
add
not
rol
add
not
mov
inc
inc
dec
cmp
jne
pop
push
mov
add
jmp
imulb
adc
pop
call
call
sub
movl
pop
push
pop
push
jmp
icebp
call
push
push
inc
inc
mov
inc
inc
push
mov
xchg
pop
mov
mov
ror
add
xor
sub
xor
ror
ror
add
xor
ror
xor
rol
sub
mov
inc
inc
dec
cmp
jne
mov
add
mov
push
sub
movl
pop
call
call
push
mov
xchg
pop
push
mov
xchg
pop
push
jmp
icebp
call
push
push
inc
inc
mov
inc
inc
mov
push
pop
mov
add
ror
rol
sub
add
ror
sub
sub
xor
add
mov
inc
inc
jmp
leave
cmp
jne
inc
inc
mov
inc
inc
sub
movl
pop
jmp
notb
mov
dec
add
adc
mov
push
mov
xchg
pop
push
push
call
push
jmp
lock
push
mov
add
push
pop
mov
rol
xor
add
not
rol
add
add
rol
inc
add
mov
jmp
ret
jmp
dec
cmp
jne
inc
inc
mov
inc
inc
push
mov
add
jmp
notb
mov
dec
add
adc
sub
movl
pop
push
mov
add
push
pop
push
pop
cmp
jne
push
mov
neg
sub
pop
jmp
leave
cmp
je
jmp
mov
mov
add
push
call
push
mov
add
mov
add
mov
push
pop
cmp
je
push
mov
add
pop
inc
jmp
rclb
adc
mov
cmp
je
mov
push
mov
add
pop
jmp
push
mov
neg
sub
pop
jmp
popa
push
mov
add
push
ret
mov
push
mov
add
jmp
icebp
push
mov
xchg
pop
jmp
repnz
push
jmp
icebp
push
pop
push
call
mov
push
push
call
call
call
jmp
cmp
adc
add
push
dec
inc
dec
xor
cs
insb
add
or
jo
or
jge
or
mov
or
popf
adc
add
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
outsl
add
outsl
bound
inc
jb
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
jmp
push
push
mov
xor
add
add
mov
mov
inc
shr
mov
dec
je
shl
jae
push
mov
mov
shr
mov
mov
shr
test
je
and
shr
add
jmp
and
shr
add
and
test
je
dec
je
dec
je
and
add
jmp
and
add
jmp
and
add
jmp
and
add
inc
mov
add
sub
lea
cmp
jae
rep
mov
pop
shr
and
add
jmp
cmp
jae
mov
mov
inc
shr
inc
mov
jmp
pop
mov
pop
sub
pop
ret
jmp
push
outsb
popa
bound
je
and
js
imul
popa
bound
add
insb
jns
outsb
inc
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
